
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010d7c <.init>:
   10d7c:	push	{r3, lr}
   10d80:	bl	1103c <__assert_fail@plt+0x48>
   10d84:	pop	{r3, pc}

Disassembly of section .plt:

00010d88 <calloc@plt-0x14>:
   10d88:	push	{lr}		; (str lr, [sp, #-4]!)
   10d8c:	ldr	lr, [pc, #4]	; 10d98 <calloc@plt-0x4>
   10d90:	add	lr, pc, lr
   10d94:	ldr	pc, [lr, #8]!
   10d98:	andeq	sl, r1, r8, ror #4

00010d9c <calloc@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #106496	; 0x1a000
   10da4:	ldr	pc, [ip, #616]!	; 0x268

00010da8 <fputs_unlocked@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #106496	; 0x1a000
   10db0:	ldr	pc, [ip, #608]!	; 0x260

00010db4 <raise@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #106496	; 0x1a000
   10dbc:	ldr	pc, [ip, #600]!	; 0x258

00010dc0 <fsync@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #106496	; 0x1a000
   10dc8:	ldr	pc, [ip, #592]!	; 0x250

00010dcc <strcmp@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #106496	; 0x1a000
   10dd4:	ldr	pc, [ip, #584]!	; 0x248

00010dd8 <printf@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #106496	; 0x1a000
   10de0:	ldr	pc, [ip, #576]!	; 0x240

00010de4 <fflush@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #106496	; 0x1a000
   10dec:	ldr	pc, [ip, #568]!	; 0x238

00010df0 <free@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #106496	; 0x1a000
   10df8:	ldr	pc, [ip, #560]!	; 0x230

00010dfc <_exit@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #106496	; 0x1a000
   10e04:	ldr	pc, [ip, #552]!	; 0x228

00010e08 <memcpy@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #106496	; 0x1a000
   10e10:	ldr	pc, [ip, #544]!	; 0x220

00010e14 <mbsinit@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #106496	; 0x1a000
   10e1c:	ldr	pc, [ip, #536]!	; 0x218

00010e20 <memcmp@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #106496	; 0x1a000
   10e28:	ldr	pc, [ip, #528]!	; 0x210

00010e2c <syncfs@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #106496	; 0x1a000
   10e34:	ldr	pc, [ip, #520]!	; 0x208

00010e38 <realloc@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #106496	; 0x1a000
   10e40:	ldr	pc, [ip, #512]!	; 0x200

00010e44 <textdomain@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #106496	; 0x1a000
   10e4c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e50 <iswprint@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #106496	; 0x1a000
   10e58:	ldr	pc, [ip, #496]!	; 0x1f0

00010e5c <lseek64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #106496	; 0x1a000
   10e64:	ldr	pc, [ip, #488]!	; 0x1e8

00010e68 <__ctype_get_mb_cur_max@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #106496	; 0x1a000
   10e70:	ldr	pc, [ip, #480]!	; 0x1e0

00010e74 <__fpending@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #106496	; 0x1a000
   10e7c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e80 <ferror_unlocked@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #106496	; 0x1a000
   10e88:	ldr	pc, [ip, #464]!	; 0x1d0

00010e8c <mbrtowc@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #106496	; 0x1a000
   10e94:	ldr	pc, [ip, #456]!	; 0x1c8

00010e98 <error@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #106496	; 0x1a000
   10ea0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea4 <open64@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #106496	; 0x1a000
   10eac:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb0 <malloc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #106496	; 0x1a000
   10eb8:	ldr	pc, [ip, #432]!	; 0x1b0

00010ebc <__libc_start_main@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #106496	; 0x1a000
   10ec4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec8 <__freading@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #106496	; 0x1a000
   10ed0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed4 <__gmon_start__@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #106496	; 0x1a000
   10edc:	ldr	pc, [ip, #408]!	; 0x198

00010ee0 <getopt_long@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #106496	; 0x1a000
   10ee8:	ldr	pc, [ip, #400]!	; 0x190

00010eec <__ctype_b_loc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #106496	; 0x1a000
   10ef4:	ldr	pc, [ip, #392]!	; 0x188

00010ef8 <exit@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #106496	; 0x1a000
   10f00:	ldr	pc, [ip, #384]!	; 0x180

00010f04 <gettext@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #106496	; 0x1a000
   10f0c:	ldr	pc, [ip, #376]!	; 0x178

00010f10 <strlen@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #106496	; 0x1a000
   10f18:	ldr	pc, [ip, #368]!	; 0x170

00010f1c <fprintf@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #106496	; 0x1a000
   10f24:	ldr	pc, [ip, #360]!	; 0x168

00010f28 <__errno_location@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #106496	; 0x1a000
   10f30:	ldr	pc, [ip, #352]!	; 0x160

00010f34 <__cxa_atexit@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #106496	; 0x1a000
   10f3c:	ldr	pc, [ip, #344]!	; 0x158

00010f40 <memset@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #106496	; 0x1a000
   10f48:	ldr	pc, [ip, #336]!	; 0x150

00010f4c <fileno@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #106496	; 0x1a000
   10f54:	ldr	pc, [ip, #328]!	; 0x148

00010f58 <fclose@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #106496	; 0x1a000
   10f60:	ldr	pc, [ip, #320]!	; 0x140

00010f64 <fseeko64@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #106496	; 0x1a000
   10f6c:	ldr	pc, [ip, #312]!	; 0x138

00010f70 <fcntl64@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #106496	; 0x1a000
   10f78:	ldr	pc, [ip, #304]!	; 0x130

00010f7c <setlocale@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #106496	; 0x1a000
   10f84:	ldr	pc, [ip, #296]!	; 0x128

00010f88 <strrchr@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #106496	; 0x1a000
   10f90:	ldr	pc, [ip, #288]!	; 0x120

00010f94 <nl_langinfo@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #106496	; 0x1a000
   10f9c:	ldr	pc, [ip, #280]!	; 0x118

00010fa0 <bindtextdomain@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #106496	; 0x1a000
   10fa8:	ldr	pc, [ip, #272]!	; 0x110

00010fac <sync@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #106496	; 0x1a000
   10fb4:	ldr	pc, [ip, #264]!	; 0x108

00010fb8 <fputs@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #106496	; 0x1a000
   10fc0:	ldr	pc, [ip, #256]!	; 0x100

00010fc4 <strncmp@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #106496	; 0x1a000
   10fcc:	ldr	pc, [ip, #248]!	; 0xf8

00010fd0 <fdatasync@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #106496	; 0x1a000
   10fd8:	ldr	pc, [ip, #240]!	; 0xf0

00010fdc <abort@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #106496	; 0x1a000
   10fe4:	ldr	pc, [ip, #232]!	; 0xe8

00010fe8 <close@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #106496	; 0x1a000
   10ff0:	ldr	pc, [ip, #224]!	; 0xe0

00010ff4 <__assert_fail@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #106496	; 0x1a000
   10ffc:	ldr	pc, [ip, #216]!	; 0xd8

Disassembly of section .text:

00011000 <.text>:
   11000:	mov	fp, #0
   11004:	mov	lr, #0
   11008:	pop	{r1}		; (ldr r1, [sp], #4)
   1100c:	mov	r2, sp
   11010:	push	{r2}		; (str r2, [sp, #-4]!)
   11014:	push	{r0}		; (str r0, [sp, #-4]!)
   11018:	ldr	ip, [pc, #16]	; 11030 <__assert_fail@plt+0x3c>
   1101c:	push	{ip}		; (str ip, [sp, #-4]!)
   11020:	ldr	r0, [pc, #12]	; 11034 <__assert_fail@plt+0x40>
   11024:	ldr	r3, [pc, #12]	; 11038 <__assert_fail@plt+0x44>
   11028:	bl	10ebc <__libc_start_main@plt>
   1102c:	bl	10fdc <abort@plt>
   11030:	muleq	r1, r8, r5
   11034:	strdeq	r1, [r1], -r8
   11038:	andeq	sl, r1, r8, lsr r5
   1103c:	ldr	r3, [pc, #20]	; 11058 <__assert_fail@plt+0x64>
   11040:	ldr	r2, [pc, #20]	; 1105c <__assert_fail@plt+0x68>
   11044:	add	r3, pc, r3
   11048:	ldr	r2, [r3, r2]
   1104c:	cmp	r2, #0
   11050:	bxeq	lr
   11054:	b	10ed4 <__gmon_start__@plt>
   11058:			; <UNDEFINED> instruction: 0x00019fb4
   1105c:	ldrdeq	r0, [r0], -r8
   11060:	ldr	r0, [pc, #24]	; 11080 <__assert_fail@plt+0x8c>
   11064:	ldr	r3, [pc, #24]	; 11084 <__assert_fail@plt+0x90>
   11068:	cmp	r3, r0
   1106c:	bxeq	lr
   11070:	ldr	r3, [pc, #16]	; 11088 <__assert_fail@plt+0x94>
   11074:	cmp	r3, #0
   11078:	bxeq	lr
   1107c:	bx	r3
   11080:	andeq	fp, r2, ip, lsr #2
   11084:	andeq	fp, r2, ip, lsr #2
   11088:	andeq	r0, r0, r0
   1108c:	ldr	r0, [pc, #36]	; 110b8 <__assert_fail@plt+0xc4>
   11090:	ldr	r1, [pc, #36]	; 110bc <__assert_fail@plt+0xc8>
   11094:	sub	r1, r1, r0
   11098:	asr	r1, r1, #2
   1109c:	add	r1, r1, r1, lsr #31
   110a0:	asrs	r1, r1, #1
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <__assert_fail@plt+0xcc>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	fp, r2, ip, lsr #2
   110bc:	andeq	fp, r2, ip, lsr #2
   110c0:	andeq	r0, r0, r0
   110c4:	push	{r4, lr}
   110c8:	ldr	r4, [pc, #24]	; 110e8 <__assert_fail@plt+0xf4>
   110cc:	ldrb	r3, [r4]
   110d0:	cmp	r3, #0
   110d4:	popne	{r4, pc}
   110d8:	bl	11060 <__assert_fail@plt+0x6c>
   110dc:	mov	r3, #1
   110e0:	strb	r3, [r4]
   110e4:	pop	{r4, pc}
   110e8:	andeq	fp, r2, r8, asr #2
   110ec:	b	1108c <__assert_fail@plt+0x98>
   110f0:	push	{fp, lr}
   110f4:	mov	fp, sp
   110f8:	sub	sp, sp, #40	; 0x28
   110fc:	str	r0, [fp, #-4]
   11100:	ldr	r0, [fp, #-4]
   11104:	cmp	r0, #0
   11108:	beq	11158 <__assert_fail@plt+0x164>
   1110c:	b	11110 <__assert_fail@plt+0x11c>
   11110:	movw	r0, #45376	; 0xb140
   11114:	movt	r0, #2
   11118:	ldr	r0, [r0]
   1111c:	movw	r1, #42432	; 0xa5c0
   11120:	movt	r1, #1
   11124:	str	r0, [fp, #-8]
   11128:	mov	r0, r1
   1112c:	bl	10f04 <gettext@plt>
   11130:	movw	r1, #45400	; 0xb158
   11134:	movt	r1, #2
   11138:	ldr	r2, [r1]
   1113c:	ldr	r1, [fp, #-8]
   11140:	str	r0, [fp, #-12]
   11144:	mov	r0, r1
   11148:	ldr	r1, [fp, #-12]
   1114c:	bl	10f1c <fprintf@plt>
   11150:	str	r0, [fp, #-16]
   11154:	b	1123c <__assert_fail@plt+0x248>
   11158:	movw	r0, #42471	; 0xa5e7
   1115c:	movt	r0, #1
   11160:	bl	10f04 <gettext@plt>
   11164:	movw	lr, #45400	; 0xb158
   11168:	movt	lr, #2
   1116c:	ldr	r1, [lr]
   11170:	bl	10dd8 <printf@plt>
   11174:	movw	r1, #42501	; 0xa605
   11178:	movt	r1, #1
   1117c:	str	r0, [sp, #20]
   11180:	mov	r0, r1
   11184:	bl	10f04 <gettext@plt>
   11188:	movw	r1, #45380	; 0xb144
   1118c:	movt	r1, #2
   11190:	ldr	r1, [r1]
   11194:	bl	10da8 <fputs_unlocked@plt>
   11198:	movw	r1, #42638	; 0xa68e
   1119c:	movt	r1, #1
   111a0:	str	r0, [sp, #16]
   111a4:	mov	r0, r1
   111a8:	bl	10f04 <gettext@plt>
   111ac:	movw	r1, #45380	; 0xb144
   111b0:	movt	r1, #2
   111b4:	ldr	r1, [r1]
   111b8:	bl	10da8 <fputs_unlocked@plt>
   111bc:	movw	r1, #42706	; 0xa6d2
   111c0:	movt	r1, #1
   111c4:	str	r0, [sp, #12]
   111c8:	mov	r0, r1
   111cc:	bl	10f04 <gettext@plt>
   111d0:	movw	r1, #45380	; 0xb144
   111d4:	movt	r1, #2
   111d8:	ldr	r1, [r1]
   111dc:	bl	10da8 <fputs_unlocked@plt>
   111e0:	movw	r1, #42777	; 0xa719
   111e4:	movt	r1, #1
   111e8:	str	r0, [sp, #8]
   111ec:	mov	r0, r1
   111f0:	bl	10f04 <gettext@plt>
   111f4:	movw	r1, #45380	; 0xb144
   111f8:	movt	r1, #2
   111fc:	ldr	r1, [r1]
   11200:	bl	10da8 <fputs_unlocked@plt>
   11204:	movw	r1, #42822	; 0xa746
   11208:	movt	r1, #1
   1120c:	str	r0, [sp, #4]
   11210:	mov	r0, r1
   11214:	bl	10f04 <gettext@plt>
   11218:	movw	r1, #45380	; 0xb144
   1121c:	movt	r1, #2
   11220:	ldr	r1, [r1]
   11224:	bl	10da8 <fputs_unlocked@plt>
   11228:	movw	r1, #42876	; 0xa77c
   1122c:	movt	r1, #1
   11230:	str	r0, [sp]
   11234:	mov	r0, r1
   11238:	bl	11244 <__assert_fail@plt+0x250>
   1123c:	ldr	r0, [fp, #-4]
   11240:	bl	10ef8 <exit@plt>
   11244:	push	{fp, lr}
   11248:	mov	fp, sp
   1124c:	sub	sp, sp, #96	; 0x60
   11250:	add	r1, sp, #36	; 0x24
   11254:	movw	r2, #43628	; 0xaa6c
   11258:	movt	r2, #1
   1125c:	str	r0, [fp, #-4]
   11260:	mov	r0, r1
   11264:	str	r1, [sp, #20]
   11268:	mov	r1, r2
   1126c:	movw	r2, #56	; 0x38
   11270:	bl	10e08 <memcpy@plt>
   11274:	ldr	r0, [fp, #-4]
   11278:	str	r0, [sp, #32]
   1127c:	ldr	r0, [sp, #20]
   11280:	str	r0, [sp, #28]
   11284:	ldr	r0, [sp, #28]
   11288:	ldr	r0, [r0]
   1128c:	movw	r1, #0
   11290:	cmp	r0, r1
   11294:	movw	r0, #0
   11298:	str	r0, [sp, #16]
   1129c:	beq	112c8 <__assert_fail@plt+0x2d4>
   112a0:	ldr	r0, [fp, #-4]
   112a4:	ldr	r1, [sp, #28]
   112a8:	ldr	r1, [r1]
   112ac:	bl	10dcc <strcmp@plt>
   112b0:	cmp	r0, #0
   112b4:	movw	r0, #0
   112b8:	moveq	r0, #1
   112bc:	mvn	r1, #0
   112c0:	eor	r0, r0, r1
   112c4:	str	r0, [sp, #16]
   112c8:	ldr	r0, [sp, #16]
   112cc:	tst	r0, #1
   112d0:	beq	112e4 <__assert_fail@plt+0x2f0>
   112d4:	ldr	r0, [sp, #28]
   112d8:	add	r0, r0, #8
   112dc:	str	r0, [sp, #28]
   112e0:	b	11284 <__assert_fail@plt+0x290>
   112e4:	ldr	r0, [sp, #28]
   112e8:	ldr	r0, [r0, #4]
   112ec:	movw	r1, #0
   112f0:	cmp	r0, r1
   112f4:	beq	11304 <__assert_fail@plt+0x310>
   112f8:	ldr	r0, [sp, #28]
   112fc:	ldr	r0, [r0, #4]
   11300:	str	r0, [sp, #32]
   11304:	movw	r0, #43128	; 0xa878
   11308:	movt	r0, #1
   1130c:	bl	10f04 <gettext@plt>
   11310:	movw	r1, #42908	; 0xa79c
   11314:	movt	r1, #1
   11318:	movw	r2, #43151	; 0xa88f
   1131c:	movt	r2, #1
   11320:	bl	10dd8 <printf@plt>
   11324:	movw	r1, #5
   11328:	str	r0, [sp, #12]
   1132c:	mov	r0, r1
   11330:	movw	r1, #0
   11334:	bl	10f7c <setlocale@plt>
   11338:	str	r0, [sp, #24]
   1133c:	ldr	r0, [sp, #24]
   11340:	movw	r1, #0
   11344:	cmp	r0, r1
   11348:	beq	11388 <__assert_fail@plt+0x394>
   1134c:	ldr	r0, [sp, #24]
   11350:	movw	r1, #43191	; 0xa8b7
   11354:	movt	r1, #1
   11358:	movw	r2, #3
   1135c:	bl	10fc4 <strncmp@plt>
   11360:	cmp	r0, #0
   11364:	beq	11388 <__assert_fail@plt+0x394>
   11368:	movw	r0, #43195	; 0xa8bb
   1136c:	movt	r0, #1
   11370:	bl	10f04 <gettext@plt>
   11374:	movw	lr, #45380	; 0xb144
   11378:	movt	lr, #2
   1137c:	ldr	r1, [lr]
   11380:	bl	10da8 <fputs_unlocked@plt>
   11384:	str	r0, [sp, #8]
   11388:	movw	r0, #43266	; 0xa902
   1138c:	movt	r0, #1
   11390:	bl	10f04 <gettext@plt>
   11394:	ldr	r2, [fp, #-4]
   11398:	movw	r1, #43151	; 0xa88f
   1139c:	movt	r1, #1
   113a0:	bl	10dd8 <printf@plt>
   113a4:	movw	r1, #43293	; 0xa91d
   113a8:	movt	r1, #1
   113ac:	str	r0, [sp, #4]
   113b0:	mov	r0, r1
   113b4:	bl	10f04 <gettext@plt>
   113b8:	ldr	r1, [sp, #32]
   113bc:	ldr	r2, [sp, #32]
   113c0:	ldr	lr, [fp, #-4]
   113c4:	cmp	r2, lr
   113c8:	movw	r2, #0
   113cc:	moveq	r2, #1
   113d0:	tst	r2, #1
   113d4:	movw	r2, #42637	; 0xa68d
   113d8:	movt	r2, #1
   113dc:	movw	lr, #43061	; 0xa835
   113e0:	movt	lr, #1
   113e4:	movne	r2, lr
   113e8:	bl	10dd8 <printf@plt>
   113ec:	str	r0, [sp]
   113f0:	mov	sp, fp
   113f4:	pop	{fp, pc}
   113f8:	push	{fp, lr}
   113fc:	mov	fp, sp
   11400:	sub	sp, sp, #72	; 0x48
   11404:	movw	r2, #0
   11408:	str	r2, [fp, #-4]
   1140c:	str	r0, [fp, #-8]
   11410:	str	r1, [fp, #-12]
   11414:	movw	r0, #0
   11418:	strb	r0, [fp, #-18]	; 0xffffffee
   1141c:	strb	r0, [fp, #-19]	; 0xffffffed
   11420:	movw	r0, #1
   11424:	strb	r0, [fp, #-25]	; 0xffffffe7
   11428:	ldr	r0, [fp, #-12]
   1142c:	ldr	r0, [r0]
   11430:	bl	11f54 <__assert_fail@plt+0xf60>
   11434:	movw	r0, #6
   11438:	movw	r1, #42637	; 0xa68d
   1143c:	movt	r1, #1
   11440:	bl	10f7c <setlocale@plt>
   11444:	movw	r1, #42912	; 0xa7a0
   11448:	movt	r1, #1
   1144c:	str	r0, [fp, #-32]	; 0xffffffe0
   11450:	mov	r0, r1
   11454:	movw	r1, #42881	; 0xa781
   11458:	movt	r1, #1
   1145c:	bl	10fa0 <bindtextdomain@plt>
   11460:	movw	r1, #42912	; 0xa7a0
   11464:	movt	r1, #1
   11468:	str	r0, [sp, #36]	; 0x24
   1146c:	mov	r0, r1
   11470:	bl	10e44 <textdomain@plt>
   11474:	movw	r1, #6740	; 0x1a54
   11478:	movt	r1, #1
   1147c:	str	r0, [sp, #32]
   11480:	mov	r0, r1
   11484:	bl	1a59c <__assert_fail@plt+0x95a8>
   11488:	str	r0, [sp, #28]
   1148c:	ldr	r0, [fp, #-8]
   11490:	ldr	r1, [fp, #-12]
   11494:	movw	r2, #42905	; 0xa799
   11498:	movt	r2, #1
   1149c:	movw	r3, #43548	; 0xaa1c
   114a0:	movt	r3, #1
   114a4:	movw	ip, #0
   114a8:	str	ip, [sp]
   114ac:	bl	10ee0 <getopt_long@plt>
   114b0:	str	r0, [fp, #-16]
   114b4:	cmn	r0, #1
   114b8:	beq	11580 <__assert_fail@plt+0x58c>
   114bc:	ldr	r0, [fp, #-16]
   114c0:	cmn	r0, #3
   114c4:	str	r0, [sp, #24]
   114c8:	beq	11520 <__assert_fail@plt+0x52c>
   114cc:	b	114d0 <__assert_fail@plt+0x4dc>
   114d0:	ldr	r0, [sp, #24]
   114d4:	cmn	r0, #2
   114d8:	beq	11518 <__assert_fail@plt+0x524>
   114dc:	b	114e0 <__assert_fail@plt+0x4ec>
   114e0:	ldr	r0, [sp, #24]
   114e4:	cmp	r0, #100	; 0x64
   114e8:	beq	11500 <__assert_fail@plt+0x50c>
   114ec:	b	114f0 <__assert_fail@plt+0x4fc>
   114f0:	ldr	r0, [sp, #24]
   114f4:	cmp	r0, #102	; 0x66
   114f8:	beq	1150c <__assert_fail@plt+0x518>
   114fc:	b	11574 <__assert_fail@plt+0x580>
   11500:	movw	r0, #1
   11504:	strb	r0, [fp, #-18]	; 0xffffffee
   11508:	b	1157c <__assert_fail@plt+0x588>
   1150c:	movw	r0, #1
   11510:	strb	r0, [fp, #-19]	; 0xffffffed
   11514:	b	1157c <__assert_fail@plt+0x588>
   11518:	movw	r0, #0
   1151c:	bl	110f0 <__assert_fail@plt+0xfc>
   11520:	movw	r0, #45380	; 0xb144
   11524:	movt	r0, #2
   11528:	ldr	r0, [r0]
   1152c:	movw	r1, #45284	; 0xb0e4
   11530:	movt	r1, #2
   11534:	ldr	r3, [r1]
   11538:	movw	r1, #42876	; 0xa77c
   1153c:	movt	r1, #1
   11540:	movw	r2, #42908	; 0xa79c
   11544:	movt	r2, #1
   11548:	movw	ip, #42922	; 0xa7aa
   1154c:	movt	ip, #1
   11550:	str	ip, [sp]
   11554:	movw	ip, #42935	; 0xa7b7
   11558:	movt	ip, #1
   1155c:	str	ip, [sp, #4]
   11560:	movw	ip, #0
   11564:	str	ip, [sp, #8]
   11568:	bl	14e6c <__assert_fail@plt+0x3e78>
   1156c:	movw	r0, #0
   11570:	bl	10ef8 <exit@plt>
   11574:	movw	r0, #1
   11578:	bl	110f0 <__assert_fail@plt+0xfc>
   1157c:	b	1148c <__assert_fail@plt+0x498>
   11580:	movw	r0, #45368	; 0xb138
   11584:	movt	r0, #2
   11588:	ldr	r0, [r0]
   1158c:	ldr	r1, [fp, #-8]
   11590:	cmp	r0, r1
   11594:	movw	r0, #0
   11598:	movlt	r0, #1
   1159c:	and	r0, r0, #1
   115a0:	strb	r0, [fp, #-17]	; 0xffffffef
   115a4:	ldrb	r0, [fp, #-18]	; 0xffffffee
   115a8:	tst	r0, #1
   115ac:	beq	115e0 <__assert_fail@plt+0x5ec>
   115b0:	ldrb	r0, [fp, #-19]	; 0xffffffed
   115b4:	tst	r0, #1
   115b8:	beq	115e0 <__assert_fail@plt+0x5ec>
   115bc:	movw	r0, #42953	; 0xa7c9
   115c0:	movt	r0, #1
   115c4:	bl	10f04 <gettext@plt>
   115c8:	movw	lr, #1
   115cc:	str	r0, [sp, #20]
   115d0:	mov	r0, lr
   115d4:	movw	r1, #0
   115d8:	ldr	r2, [sp, #20]
   115dc:	bl	10e98 <error@plt>
   115e0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   115e4:	tst	r0, #1
   115e8:	bne	1161c <__assert_fail@plt+0x628>
   115ec:	ldrb	r0, [fp, #-18]	; 0xffffffee
   115f0:	tst	r0, #1
   115f4:	beq	1161c <__assert_fail@plt+0x628>
   115f8:	movw	r0, #42998	; 0xa7f6
   115fc:	movt	r0, #1
   11600:	bl	10f04 <gettext@plt>
   11604:	movw	lr, #1
   11608:	str	r0, [sp, #16]
   1160c:	mov	r0, lr
   11610:	movw	r1, #0
   11614:	ldr	r2, [sp, #16]
   11618:	bl	10e98 <error@plt>
   1161c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11620:	tst	r0, #1
   11624:	beq	11638 <__assert_fail@plt+0x644>
   11628:	ldrb	r0, [fp, #-19]	; 0xffffffed
   1162c:	tst	r0, #1
   11630:	beq	11644 <__assert_fail@plt+0x650>
   11634:	b	11644 <__assert_fail@plt+0x650>
   11638:	movw	r0, #3
   1163c:	str	r0, [fp, #-24]	; 0xffffffe8
   11640:	b	11684 <__assert_fail@plt+0x690>
   11644:	ldrb	r0, [fp, #-19]	; 0xffffffed
   11648:	tst	r0, #1
   1164c:	beq	1165c <__assert_fail@plt+0x668>
   11650:	movw	r0, #2
   11654:	str	r0, [fp, #-24]	; 0xffffffe8
   11658:	b	11680 <__assert_fail@plt+0x68c>
   1165c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11660:	tst	r0, #1
   11664:	bne	11674 <__assert_fail@plt+0x680>
   11668:	movw	r0, #0
   1166c:	str	r0, [fp, #-24]	; 0xffffffe8
   11670:	b	1167c <__assert_fail@plt+0x688>
   11674:	movw	r0, #1
   11678:	str	r0, [fp, #-24]	; 0xffffffe8
   1167c:	b	11680 <__assert_fail@plt+0x68c>
   11680:	b	11684 <__assert_fail@plt+0x690>
   11684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11688:	cmp	r0, #3
   1168c:	bne	11698 <__assert_fail@plt+0x6a4>
   11690:	bl	10fac <sync@plt>
   11694:	b	11714 <__assert_fail@plt+0x720>
   11698:	b	1169c <__assert_fail@plt+0x6a8>
   1169c:	movw	r0, #45368	; 0xb138
   116a0:	movt	r0, #2
   116a4:	ldr	r0, [r0]
   116a8:	ldr	r1, [fp, #-8]
   116ac:	cmp	r0, r1
   116b0:	bge	11710 <__assert_fail@plt+0x71c>
   116b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116b8:	ldr	r1, [fp, #-12]
   116bc:	movw	r2, #45368	; 0xb138
   116c0:	movt	r2, #2
   116c4:	ldr	r2, [r2]
   116c8:	add	r1, r1, r2, lsl #2
   116cc:	ldr	r1, [r1]
   116d0:	bl	1172c <__assert_fail@plt+0x738>
   116d4:	and	r0, r0, #1
   116d8:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   116dc:	and	r1, r1, #1
   116e0:	and	r0, r1, r0
   116e4:	cmp	r0, #0
   116e8:	movw	r0, #0
   116ec:	movne	r0, #1
   116f0:	and	r0, r0, #1
   116f4:	strb	r0, [fp, #-25]	; 0xffffffe7
   116f8:	movw	r0, #45368	; 0xb138
   116fc:	movt	r0, #2
   11700:	ldr	r1, [r0]
   11704:	add	r1, r1, #1
   11708:	str	r1, [r0]
   1170c:	b	1169c <__assert_fail@plt+0x6a8>
   11710:	b	11714 <__assert_fail@plt+0x720>
   11714:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11718:	tst	r0, #1
   1171c:	movw	r0, #0
   11720:	moveq	r0, #1
   11724:	mov	sp, fp
   11728:	pop	{fp, pc}
   1172c:	push	{fp, lr}
   11730:	mov	fp, sp
   11734:	sub	sp, sp, #88	; 0x58
   11738:	str	r0, [fp, #-8]
   1173c:	str	r1, [fp, #-12]
   11740:	movw	r0, #1
   11744:	strb	r0, [fp, #-13]
   11748:	movw	r0, #2048	; 0x800
   1174c:	str	r0, [fp, #-20]	; 0xffffffec
   11750:	ldr	r0, [fp, #-12]
   11754:	ldr	r1, [fp, #-20]	; 0xffffffec
   11758:	bl	10ea4 <open64@plt>
   1175c:	str	r0, [fp, #-24]	; 0xffffffe8
   11760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11764:	cmp	r0, #0
   11768:	bge	117fc <__assert_fail@plt+0x808>
   1176c:	bl	10f28 <__errno_location@plt>
   11770:	ldr	r0, [r0]
   11774:	str	r0, [fp, #-28]	; 0xffffffe4
   11778:	ldr	r0, [fp, #-20]	; 0xffffffec
   1177c:	movw	lr, #2049	; 0x801
   11780:	cmp	r0, lr
   11784:	beq	11798 <__assert_fail@plt+0x7a4>
   11788:	ldr	r0, [fp, #-12]
   1178c:	movw	r1, #2049	; 0x801
   11790:	bl	10ea4 <open64@plt>
   11794:	str	r0, [fp, #-24]	; 0xffffffe8
   11798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1179c:	cmp	r0, #0
   117a0:	bge	117f8 <__assert_fail@plt+0x804>
   117a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   117a8:	movw	r0, #43362	; 0xa962
   117ac:	movt	r0, #1
   117b0:	str	r1, [fp, #-40]	; 0xffffffd8
   117b4:	bl	10f04 <gettext@plt>
   117b8:	ldr	r1, [fp, #-12]
   117bc:	movw	lr, #4
   117c0:	str	r0, [sp, #44]	; 0x2c
   117c4:	mov	r0, lr
   117c8:	bl	14218 <__assert_fail@plt+0x3224>
   117cc:	movw	r1, #0
   117d0:	str	r0, [sp, #40]	; 0x28
   117d4:	mov	r0, r1
   117d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   117dc:	ldr	r2, [sp, #44]	; 0x2c
   117e0:	ldr	r3, [sp, #40]	; 0x28
   117e4:	bl	10e98 <error@plt>
   117e8:	movw	r0, #0
   117ec:	and	r0, r0, #1
   117f0:	strb	r0, [fp, #-1]
   117f4:	b	119fc <__assert_fail@plt+0xa08>
   117f8:	b	117fc <__assert_fail@plt+0x808>
   117fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11800:	movw	r1, #3
   11804:	bl	11b74 <__assert_fail@plt+0xb80>
   11808:	str	r0, [fp, #-32]	; 0xffffffe0
   1180c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11810:	cmn	r0, #1
   11814:	beq	11838 <__assert_fail@plt+0x844>
   11818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1181c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11820:	mvn	r2, #2048	; 0x800
   11824:	and	r2, r1, r2
   11828:	movw	r1, #4
   1182c:	bl	11b74 <__assert_fail@plt+0xb80>
   11830:	cmp	r0, #0
   11834:	bge	11888 <__assert_fail@plt+0x894>
   11838:	bl	10f28 <__errno_location@plt>
   1183c:	ldr	r1, [r0]
   11840:	movw	r0, #43379	; 0xa973
   11844:	movt	r0, #1
   11848:	str	r1, [sp, #36]	; 0x24
   1184c:	bl	10f04 <gettext@plt>
   11850:	ldr	r1, [fp, #-12]
   11854:	movw	lr, #4
   11858:	str	r0, [sp, #32]
   1185c:	mov	r0, lr
   11860:	bl	14218 <__assert_fail@plt+0x3224>
   11864:	movw	r1, #0
   11868:	str	r0, [sp, #28]
   1186c:	mov	r0, r1
   11870:	ldr	r1, [sp, #36]	; 0x24
   11874:	ldr	r2, [sp, #32]
   11878:	ldr	r3, [sp, #28]
   1187c:	bl	10e98 <error@plt>
   11880:	movw	r0, #0
   11884:	strb	r0, [fp, #-13]
   11888:	ldrb	r0, [fp, #-13]
   1188c:	and	r0, r0, #1
   11890:	cmp	r0, #1
   11894:	bne	11990 <__assert_fail@plt+0x99c>
   11898:	mvn	r0, #0
   1189c:	str	r0, [fp, #-36]	; 0xffffffdc
   118a0:	ldr	r0, [fp, #-8]
   118a4:	cmp	r0, #0
   118a8:	str	r0, [sp, #24]
   118ac:	beq	118e4 <__assert_fail@plt+0x8f0>
   118b0:	b	118b4 <__assert_fail@plt+0x8c0>
   118b4:	ldr	r0, [sp, #24]
   118b8:	cmp	r0, #1
   118bc:	beq	118d4 <__assert_fail@plt+0x8e0>
   118c0:	b	118c4 <__assert_fail@plt+0x8d0>
   118c4:	ldr	r0, [sp, #24]
   118c8:	cmp	r0, #2
   118cc:	beq	118f4 <__assert_fail@plt+0x900>
   118d0:	b	11904 <__assert_fail@plt+0x910>
   118d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118d8:	bl	10fd0 <fdatasync@plt>
   118dc:	str	r0, [fp, #-36]	; 0xffffffdc
   118e0:	b	11930 <__assert_fail@plt+0x93c>
   118e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118e8:	bl	10dc0 <fsync@plt>
   118ec:	str	r0, [fp, #-36]	; 0xffffffdc
   118f0:	b	11930 <__assert_fail@plt+0x93c>
   118f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118f8:	bl	10e2c <syncfs@plt>
   118fc:	str	r0, [fp, #-36]	; 0xffffffdc
   11900:	b	11930 <__assert_fail@plt+0x93c>
   11904:	b	11908 <__assert_fail@plt+0x914>
   11908:	b	1192c <__assert_fail@plt+0x938>
   1190c:	movw	r0, #43433	; 0xa9a9
   11910:	movt	r0, #1
   11914:	movw	r1, #43453	; 0xa9bd
   11918:	movt	r1, #1
   1191c:	movw	r2, #152	; 0x98
   11920:	movw	r3, #43464	; 0xa9c8
   11924:	movt	r3, #1
   11928:	bl	10ff4 <__assert_fail@plt>
   1192c:	b	11930 <__assert_fail@plt+0x93c>
   11930:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11934:	cmp	r0, #0
   11938:	bge	1198c <__assert_fail@plt+0x998>
   1193c:	bl	10f28 <__errno_location@plt>
   11940:	ldr	r1, [r0]
   11944:	movw	r0, #43509	; 0xa9f5
   11948:	movt	r0, #1
   1194c:	str	r1, [sp, #20]
   11950:	bl	10f04 <gettext@plt>
   11954:	ldr	r1, [fp, #-12]
   11958:	movw	lr, #4
   1195c:	str	r0, [sp, #16]
   11960:	mov	r0, lr
   11964:	bl	14218 <__assert_fail@plt+0x3224>
   11968:	movw	r1, #0
   1196c:	str	r0, [sp, #12]
   11970:	mov	r0, r1
   11974:	ldr	r1, [sp, #20]
   11978:	ldr	r2, [sp, #16]
   1197c:	ldr	r3, [sp, #12]
   11980:	bl	10e98 <error@plt>
   11984:	movw	r0, #0
   11988:	strb	r0, [fp, #-13]
   1198c:	b	11990 <__assert_fail@plt+0x99c>
   11990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11994:	bl	10fe8 <close@plt>
   11998:	cmp	r0, #0
   1199c:	bge	119f0 <__assert_fail@plt+0x9fc>
   119a0:	bl	10f28 <__errno_location@plt>
   119a4:	ldr	r1, [r0]
   119a8:	movw	r0, #43526	; 0xaa06
   119ac:	movt	r0, #1
   119b0:	str	r1, [sp, #8]
   119b4:	bl	10f04 <gettext@plt>
   119b8:	ldr	r1, [fp, #-12]
   119bc:	movw	lr, #4
   119c0:	str	r0, [sp, #4]
   119c4:	mov	r0, lr
   119c8:	bl	14218 <__assert_fail@plt+0x3224>
   119cc:	movw	r1, #0
   119d0:	str	r0, [sp]
   119d4:	mov	r0, r1
   119d8:	ldr	r1, [sp, #8]
   119dc:	ldr	r2, [sp, #4]
   119e0:	ldr	r3, [sp]
   119e4:	bl	10e98 <error@plt>
   119e8:	movw	r0, #0
   119ec:	strb	r0, [fp, #-13]
   119f0:	ldrb	r0, [fp, #-13]
   119f4:	and	r0, r0, #1
   119f8:	strb	r0, [fp, #-1]
   119fc:	ldrb	r0, [fp, #-1]
   11a00:	and	r0, r0, #1
   11a04:	mov	sp, fp
   11a08:	pop	{fp, pc}
   11a0c:	sub	sp, sp, #4
   11a10:	str	r0, [sp]
   11a14:	ldr	r0, [sp]
   11a18:	movw	r1, #45388	; 0xb14c
   11a1c:	movt	r1, #2
   11a20:	str	r0, [r1]
   11a24:	add	sp, sp, #4
   11a28:	bx	lr
   11a2c:	sub	sp, sp, #4
   11a30:	and	r0, r0, #1
   11a34:	strb	r0, [sp, #3]
   11a38:	ldrb	r0, [sp, #3]
   11a3c:	and	r0, r0, #1
   11a40:	movw	r1, #45392	; 0xb150
   11a44:	movt	r1, #2
   11a48:	strb	r0, [r1]
   11a4c:	add	sp, sp, #4
   11a50:	bx	lr
   11a54:	push	{fp, lr}
   11a58:	mov	fp, sp
   11a5c:	sub	sp, sp, #24
   11a60:	movw	r0, #45380	; 0xb144
   11a64:	movt	r0, #2
   11a68:	ldr	r0, [r0]
   11a6c:	bl	18090 <__assert_fail@plt+0x709c>
   11a70:	cmp	r0, #0
   11a74:	beq	11b44 <__assert_fail@plt+0xb50>
   11a78:	movw	r0, #45392	; 0xb150
   11a7c:	movt	r0, #2
   11a80:	ldrb	r0, [r0]
   11a84:	tst	r0, #1
   11a88:	beq	11a9c <__assert_fail@plt+0xaa8>
   11a8c:	bl	10f28 <__errno_location@plt>
   11a90:	ldr	r0, [r0]
   11a94:	cmp	r0, #32
   11a98:	beq	11b44 <__assert_fail@plt+0xb50>
   11a9c:	movw	r0, #43699	; 0xaab3
   11aa0:	movt	r0, #1
   11aa4:	bl	10f04 <gettext@plt>
   11aa8:	str	r0, [fp, #-4]
   11aac:	movw	r0, #45388	; 0xb14c
   11ab0:	movt	r0, #2
   11ab4:	ldr	r0, [r0]
   11ab8:	movw	lr, #0
   11abc:	cmp	r0, lr
   11ac0:	beq	11b18 <__assert_fail@plt+0xb24>
   11ac4:	bl	10f28 <__errno_location@plt>
   11ac8:	ldr	r1, [r0]
   11acc:	movw	r0, #45388	; 0xb14c
   11ad0:	movt	r0, #2
   11ad4:	ldr	r0, [r0]
   11ad8:	str	r1, [fp, #-8]
   11adc:	bl	14314 <__assert_fail@plt+0x3320>
   11ae0:	ldr	r1, [fp, #-4]
   11ae4:	movw	lr, #0
   11ae8:	str	r0, [sp, #12]
   11aec:	mov	r0, lr
   11af0:	ldr	lr, [fp, #-8]
   11af4:	str	r1, [sp, #8]
   11af8:	mov	r1, lr
   11afc:	movw	r2, #43711	; 0xaabf
   11b00:	movt	r2, #1
   11b04:	ldr	r3, [sp, #12]
   11b08:	ldr	ip, [sp, #8]
   11b0c:	str	ip, [sp]
   11b10:	bl	10e98 <error@plt>
   11b14:	b	11b34 <__assert_fail@plt+0xb40>
   11b18:	bl	10f28 <__errno_location@plt>
   11b1c:	ldr	r1, [r0]
   11b20:	ldr	r3, [fp, #-4]
   11b24:	movw	r0, #0
   11b28:	movw	r2, #43715	; 0xaac3
   11b2c:	movt	r2, #1
   11b30:	bl	10e98 <error@plt>
   11b34:	movw	r0, #45288	; 0xb0e8
   11b38:	movt	r0, #2
   11b3c:	ldr	r0, [r0]
   11b40:	bl	10dfc <_exit@plt>
   11b44:	movw	r0, #45376	; 0xb140
   11b48:	movt	r0, #2
   11b4c:	ldr	r0, [r0]
   11b50:	bl	18090 <__assert_fail@plt+0x709c>
   11b54:	cmp	r0, #0
   11b58:	beq	11b6c <__assert_fail@plt+0xb78>
   11b5c:	movw	r0, #45288	; 0xb0e8
   11b60:	movt	r0, #2
   11b64:	ldr	r0, [r0]
   11b68:	bl	10dfc <_exit@plt>
   11b6c:	mov	sp, fp
   11b70:	pop	{fp, pc}
   11b74:	sub	sp, sp, #8
   11b78:	push	{fp, lr}
   11b7c:	mov	fp, sp
   11b80:	sub	sp, sp, #48	; 0x30
   11b84:	str	r3, [fp, #12]
   11b88:	str	r2, [fp, #8]
   11b8c:	str	r0, [fp, #-4]
   11b90:	str	r1, [fp, #-8]
   11b94:	mvn	r0, #0
   11b98:	str	r0, [fp, #-16]
   11b9c:	add	r0, fp, #8
   11ba0:	str	r0, [fp, #-12]
   11ba4:	ldr	r0, [fp, #-8]
   11ba8:	cmp	r0, #0
   11bac:	str	r0, [sp, #12]
   11bb0:	beq	11bcc <__assert_fail@plt+0xbd8>
   11bb4:	b	11bb8 <__assert_fail@plt+0xbc4>
   11bb8:	movw	r0, #1030	; 0x406
   11bbc:	ldr	r1, [sp, #12]
   11bc0:	cmp	r1, r0
   11bc4:	beq	11bf4 <__assert_fail@plt+0xc00>
   11bc8:	b	11c1c <__assert_fail@plt+0xc28>
   11bcc:	ldr	r0, [fp, #-12]
   11bd0:	add	r1, r0, #4
   11bd4:	str	r1, [fp, #-12]
   11bd8:	ldr	r0, [r0]
   11bdc:	str	r0, [fp, #-20]	; 0xffffffec
   11be0:	ldr	r0, [fp, #-4]
   11be4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11be8:	bl	11dc8 <__assert_fail@plt+0xdd4>
   11bec:	str	r0, [fp, #-16]
   11bf0:	b	11da8 <__assert_fail@plt+0xdb4>
   11bf4:	ldr	r0, [fp, #-12]
   11bf8:	add	r1, r0, #4
   11bfc:	str	r1, [fp, #-12]
   11c00:	ldr	r0, [r0]
   11c04:	str	r0, [sp, #24]
   11c08:	ldr	r0, [fp, #-4]
   11c0c:	ldr	r1, [sp, #24]
   11c10:	bl	11dfc <__assert_fail@plt+0xe08>
   11c14:	str	r0, [fp, #-16]
   11c18:	b	11da8 <__assert_fail@plt+0xdb4>
   11c1c:	ldr	r0, [fp, #-8]
   11c20:	cmp	r0, #0
   11c24:	str	r0, [sp, #8]
   11c28:	beq	11d50 <__assert_fail@plt+0xd5c>
   11c2c:	b	11c30 <__assert_fail@plt+0xc3c>
   11c30:	ldr	r0, [sp, #8]
   11c34:	cmp	r0, #1
   11c38:	beq	11d3c <__assert_fail@plt+0xd48>
   11c3c:	b	11c40 <__assert_fail@plt+0xc4c>
   11c40:	ldr	r0, [sp, #8]
   11c44:	cmp	r0, #2
   11c48:	beq	11d50 <__assert_fail@plt+0xd5c>
   11c4c:	b	11c50 <__assert_fail@plt+0xc5c>
   11c50:	ldr	r0, [sp, #8]
   11c54:	cmp	r0, #3
   11c58:	beq	11d3c <__assert_fail@plt+0xd48>
   11c5c:	b	11c60 <__assert_fail@plt+0xc6c>
   11c60:	ldr	r0, [sp, #8]
   11c64:	cmp	r0, #4
   11c68:	beq	11d50 <__assert_fail@plt+0xd5c>
   11c6c:	b	11c70 <__assert_fail@plt+0xc7c>
   11c70:	ldr	r0, [sp, #8]
   11c74:	cmp	r0, #8
   11c78:	beq	11d50 <__assert_fail@plt+0xd5c>
   11c7c:	b	11c80 <__assert_fail@plt+0xc8c>
   11c80:	ldr	r0, [sp, #8]
   11c84:	cmp	r0, #9
   11c88:	beq	11d3c <__assert_fail@plt+0xd48>
   11c8c:	b	11c90 <__assert_fail@plt+0xc9c>
   11c90:	ldr	r0, [sp, #8]
   11c94:	cmp	r0, #10
   11c98:	beq	11d50 <__assert_fail@plt+0xd5c>
   11c9c:	b	11ca0 <__assert_fail@plt+0xcac>
   11ca0:	ldr	r0, [sp, #8]
   11ca4:	cmp	r0, #11
   11ca8:	beq	11d3c <__assert_fail@plt+0xd48>
   11cac:	b	11cb0 <__assert_fail@plt+0xcbc>
   11cb0:	ldr	r0, [sp, #8]
   11cb4:	cmp	r0, #1024	; 0x400
   11cb8:	beq	11d50 <__assert_fail@plt+0xd5c>
   11cbc:	b	11cc0 <__assert_fail@plt+0xccc>
   11cc0:	movw	r0, #1025	; 0x401
   11cc4:	ldr	r1, [sp, #8]
   11cc8:	cmp	r1, r0
   11ccc:	beq	11d3c <__assert_fail@plt+0xd48>
   11cd0:	b	11cd4 <__assert_fail@plt+0xce0>
   11cd4:	movw	r0, #1026	; 0x402
   11cd8:	ldr	r1, [sp, #8]
   11cdc:	cmp	r1, r0
   11ce0:	beq	11d50 <__assert_fail@plt+0xd5c>
   11ce4:	b	11ce8 <__assert_fail@plt+0xcf4>
   11ce8:	movw	r0, #1030	; 0x406
   11cec:	ldr	r1, [sp, #8]
   11cf0:	sub	r0, r1, r0
   11cf4:	cmp	r0, #2
   11cf8:	bcc	11d50 <__assert_fail@plt+0xd5c>
   11cfc:	b	11d00 <__assert_fail@plt+0xd0c>
   11d00:	movw	r0, #1032	; 0x408
   11d04:	ldr	r1, [sp, #8]
   11d08:	cmp	r1, r0
   11d0c:	beq	11d3c <__assert_fail@plt+0xd48>
   11d10:	b	11d14 <__assert_fail@plt+0xd20>
   11d14:	movw	r0, #1033	; 0x409
   11d18:	ldr	r1, [sp, #8]
   11d1c:	cmp	r1, r0
   11d20:	beq	11d50 <__assert_fail@plt+0xd5c>
   11d24:	b	11d28 <__assert_fail@plt+0xd34>
   11d28:	movw	r0, #1034	; 0x40a
   11d2c:	ldr	r1, [sp, #8]
   11d30:	cmp	r1, r0
   11d34:	bne	11d7c <__assert_fail@plt+0xd88>
   11d38:	b	11d3c <__assert_fail@plt+0xd48>
   11d3c:	ldr	r0, [fp, #-4]
   11d40:	ldr	r1, [fp, #-8]
   11d44:	bl	10f70 <fcntl64@plt>
   11d48:	str	r0, [fp, #-16]
   11d4c:	b	11da4 <__assert_fail@plt+0xdb0>
   11d50:	ldr	r0, [fp, #-12]
   11d54:	add	r1, r0, #4
   11d58:	str	r1, [fp, #-12]
   11d5c:	ldr	r0, [r0]
   11d60:	str	r0, [sp, #20]
   11d64:	ldr	r0, [fp, #-4]
   11d68:	ldr	r1, [fp, #-8]
   11d6c:	ldr	r2, [sp, #20]
   11d70:	bl	10f70 <fcntl64@plt>
   11d74:	str	r0, [fp, #-16]
   11d78:	b	11da4 <__assert_fail@plt+0xdb0>
   11d7c:	ldr	r0, [fp, #-12]
   11d80:	add	r1, r0, #4
   11d84:	str	r1, [fp, #-12]
   11d88:	ldr	r0, [r0]
   11d8c:	str	r0, [sp, #16]
   11d90:	ldr	r0, [fp, #-4]
   11d94:	ldr	r1, [fp, #-8]
   11d98:	ldr	r2, [sp, #16]
   11d9c:	bl	10f70 <fcntl64@plt>
   11da0:	str	r0, [fp, #-16]
   11da4:	b	11da8 <__assert_fail@plt+0xdb4>
   11da8:	sub	r0, fp, #12
   11dac:	ldr	r1, [fp, #-16]
   11db0:	str	r0, [sp, #4]
   11db4:	mov	r0, r1
   11db8:	mov	sp, fp
   11dbc:	pop	{fp, lr}
   11dc0:	add	sp, sp, #8
   11dc4:	bx	lr
   11dc8:	push	{fp, lr}
   11dcc:	mov	fp, sp
   11dd0:	sub	sp, sp, #16
   11dd4:	str	r0, [fp, #-4]
   11dd8:	str	r1, [sp, #8]
   11ddc:	ldr	r0, [fp, #-4]
   11de0:	ldr	r2, [sp, #8]
   11de4:	movw	r1, #0
   11de8:	bl	10f70 <fcntl64@plt>
   11dec:	str	r0, [sp, #4]
   11df0:	ldr	r0, [sp, #4]
   11df4:	mov	sp, fp
   11df8:	pop	{fp, pc}
   11dfc:	push	{fp, lr}
   11e00:	mov	fp, sp
   11e04:	sub	sp, sp, #32
   11e08:	str	r0, [fp, #-4]
   11e0c:	str	r1, [fp, #-8]
   11e10:	movw	r0, #45396	; 0xb154
   11e14:	movt	r0, #2
   11e18:	ldr	r0, [r0]
   11e1c:	movw	r1, #0
   11e20:	cmp	r1, r0
   11e24:	bgt	11ea4 <__assert_fail@plt+0xeb0>
   11e28:	ldr	r0, [fp, #-4]
   11e2c:	ldr	r2, [fp, #-8]
   11e30:	movw	r1, #1030	; 0x406
   11e34:	bl	10f70 <fcntl64@plt>
   11e38:	str	r0, [fp, #-12]
   11e3c:	ldr	r0, [fp, #-12]
   11e40:	movw	r1, #0
   11e44:	cmp	r1, r0
   11e48:	ble	11e5c <__assert_fail@plt+0xe68>
   11e4c:	bl	10f28 <__errno_location@plt>
   11e50:	ldr	r0, [r0]
   11e54:	cmp	r0, #22
   11e58:	beq	11e70 <__assert_fail@plt+0xe7c>
   11e5c:	movw	r0, #45396	; 0xb154
   11e60:	movt	r0, #2
   11e64:	movw	r1, #1
   11e68:	str	r1, [r0]
   11e6c:	b	11ea0 <__assert_fail@plt+0xeac>
   11e70:	ldr	r0, [fp, #-4]
   11e74:	ldr	r1, [fp, #-8]
   11e78:	bl	11dc8 <__assert_fail@plt+0xdd4>
   11e7c:	str	r0, [fp, #-12]
   11e80:	ldr	r0, [fp, #-12]
   11e84:	cmp	r0, #0
   11e88:	blt	11e9c <__assert_fail@plt+0xea8>
   11e8c:	movw	r0, #45396	; 0xb154
   11e90:	movt	r0, #2
   11e94:	mvn	r1, #0
   11e98:	str	r1, [r0]
   11e9c:	b	11ea0 <__assert_fail@plt+0xeac>
   11ea0:	b	11eb4 <__assert_fail@plt+0xec0>
   11ea4:	ldr	r0, [fp, #-4]
   11ea8:	ldr	r1, [fp, #-8]
   11eac:	bl	11dc8 <__assert_fail@plt+0xdd4>
   11eb0:	str	r0, [fp, #-12]
   11eb4:	ldr	r0, [fp, #-12]
   11eb8:	movw	r1, #0
   11ebc:	cmp	r1, r0
   11ec0:	bgt	11f48 <__assert_fail@plt+0xf54>
   11ec4:	movw	r0, #45396	; 0xb154
   11ec8:	movt	r0, #2
   11ecc:	ldr	r0, [r0]
   11ed0:	cmn	r0, #1
   11ed4:	bne	11f48 <__assert_fail@plt+0xf54>
   11ed8:	ldr	r0, [fp, #-12]
   11edc:	movw	r1, #1
   11ee0:	bl	10f70 <fcntl64@plt>
   11ee4:	str	r0, [sp, #16]
   11ee8:	ldr	r0, [sp, #16]
   11eec:	cmp	r0, #0
   11ef0:	blt	11f10 <__assert_fail@plt+0xf1c>
   11ef4:	ldr	r0, [fp, #-12]
   11ef8:	ldr	r1, [sp, #16]
   11efc:	orr	r2, r1, #1
   11f00:	movw	r1, #2
   11f04:	bl	10f70 <fcntl64@plt>
   11f08:	cmn	r0, #1
   11f0c:	bne	11f44 <__assert_fail@plt+0xf50>
   11f10:	bl	10f28 <__errno_location@plt>
   11f14:	ldr	r0, [r0]
   11f18:	str	r0, [sp, #12]
   11f1c:	ldr	r0, [fp, #-12]
   11f20:	bl	10fe8 <close@plt>
   11f24:	ldr	lr, [sp, #12]
   11f28:	str	r0, [sp, #8]
   11f2c:	str	lr, [sp, #4]
   11f30:	bl	10f28 <__errno_location@plt>
   11f34:	ldr	lr, [sp, #4]
   11f38:	str	lr, [r0]
   11f3c:	mvn	r0, #0
   11f40:	str	r0, [fp, #-12]
   11f44:	b	11f48 <__assert_fail@plt+0xf54>
   11f48:	ldr	r0, [fp, #-12]
   11f4c:	mov	sp, fp
   11f50:	pop	{fp, pc}
   11f54:	push	{fp, lr}
   11f58:	mov	fp, sp
   11f5c:	sub	sp, sp, #24
   11f60:	str	r0, [fp, #-4]
   11f64:	ldr	r0, [fp, #-4]
   11f68:	movw	r1, #0
   11f6c:	cmp	r0, r1
   11f70:	bne	11f94 <__assert_fail@plt+0xfa0>
   11f74:	movw	r0, #45376	; 0xb140
   11f78:	movt	r0, #2
   11f7c:	ldr	r1, [r0]
   11f80:	movw	r0, #43718	; 0xaac6
   11f84:	movt	r0, #1
   11f88:	bl	10fb8 <fputs@plt>
   11f8c:	str	r0, [sp, #8]
   11f90:	bl	10fdc <abort@plt>
   11f94:	ldr	r0, [fp, #-4]
   11f98:	movw	r1, #47	; 0x2f
   11f9c:	bl	10f88 <strrchr@plt>
   11fa0:	str	r0, [fp, #-8]
   11fa4:	ldr	r0, [fp, #-8]
   11fa8:	movw	r1, #0
   11fac:	cmp	r0, r1
   11fb0:	beq	11fc4 <__assert_fail@plt+0xfd0>
   11fb4:	ldr	r0, [fp, #-8]
   11fb8:	add	r0, r0, #1
   11fbc:	str	r0, [sp, #4]
   11fc0:	b	11fcc <__assert_fail@plt+0xfd8>
   11fc4:	ldr	r0, [fp, #-4]
   11fc8:	str	r0, [sp, #4]
   11fcc:	ldr	r0, [sp, #4]
   11fd0:	str	r0, [sp, #12]
   11fd4:	ldr	r0, [sp, #12]
   11fd8:	ldr	r1, [fp, #-4]
   11fdc:	sub	r0, r0, r1
   11fe0:	cmp	r0, #7
   11fe4:	blt	12050 <__assert_fail@plt+0x105c>
   11fe8:	ldr	r0, [sp, #12]
   11fec:	mvn	r1, #6
   11ff0:	add	r0, r0, r1
   11ff4:	movw	r1, #43774	; 0xaafe
   11ff8:	movt	r1, #1
   11ffc:	movw	r2, #7
   12000:	bl	10fc4 <strncmp@plt>
   12004:	cmp	r0, #0
   12008:	bne	12050 <__assert_fail@plt+0x105c>
   1200c:	ldr	r0, [sp, #12]
   12010:	str	r0, [fp, #-4]
   12014:	ldr	r0, [sp, #12]
   12018:	movw	r1, #43782	; 0xab06
   1201c:	movt	r1, #1
   12020:	movw	r2, #3
   12024:	bl	10fc4 <strncmp@plt>
   12028:	cmp	r0, #0
   1202c:	bne	1204c <__assert_fail@plt+0x1058>
   12030:	ldr	r0, [sp, #12]
   12034:	add	r0, r0, #3
   12038:	str	r0, [fp, #-4]
   1203c:	ldr	r0, [fp, #-4]
   12040:	movw	r1, #45360	; 0xb130
   12044:	movt	r1, #2
   12048:	str	r0, [r1]
   1204c:	b	12050 <__assert_fail@plt+0x105c>
   12050:	ldr	r0, [fp, #-4]
   12054:	movw	r1, #45400	; 0xb158
   12058:	movt	r1, #2
   1205c:	str	r0, [r1]
   12060:	ldr	r0, [fp, #-4]
   12064:	movw	r1, #45364	; 0xb134
   12068:	movt	r1, #2
   1206c:	str	r0, [r1]
   12070:	mov	sp, fp
   12074:	pop	{fp, pc}
   12078:	push	{fp, lr}
   1207c:	mov	fp, sp
   12080:	sub	sp, sp, #24
   12084:	str	r0, [fp, #-4]
   12088:	bl	10f28 <__errno_location@plt>
   1208c:	ldr	r0, [r0]
   12090:	str	r0, [fp, #-8]
   12094:	ldr	r0, [fp, #-4]
   12098:	movw	lr, #0
   1209c:	cmp	r0, lr
   120a0:	beq	120b0 <__assert_fail@plt+0x10bc>
   120a4:	ldr	r0, [fp, #-4]
   120a8:	str	r0, [sp, #8]
   120ac:	b	120c0 <__assert_fail@plt+0x10cc>
   120b0:	movw	r0, #45404	; 0xb15c
   120b4:	movt	r0, #2
   120b8:	str	r0, [sp, #8]
   120bc:	b	120c0 <__assert_fail@plt+0x10cc>
   120c0:	ldr	r0, [sp, #8]
   120c4:	movw	r1, #48	; 0x30
   120c8:	bl	17cd8 <__assert_fail@plt+0x6ce4>
   120cc:	str	r0, [sp, #12]
   120d0:	ldr	r0, [fp, #-8]
   120d4:	str	r0, [sp, #4]
   120d8:	bl	10f28 <__errno_location@plt>
   120dc:	ldr	r1, [sp, #4]
   120e0:	str	r1, [r0]
   120e4:	ldr	r0, [sp, #12]
   120e8:	mov	sp, fp
   120ec:	pop	{fp, pc}
   120f0:	sub	sp, sp, #8
   120f4:	str	r0, [sp, #4]
   120f8:	ldr	r0, [sp, #4]
   120fc:	movw	r1, #0
   12100:	cmp	r0, r1
   12104:	beq	12114 <__assert_fail@plt+0x1120>
   12108:	ldr	r0, [sp, #4]
   1210c:	str	r0, [sp]
   12110:	b	12124 <__assert_fail@plt+0x1130>
   12114:	movw	r0, #45404	; 0xb15c
   12118:	movt	r0, #2
   1211c:	str	r0, [sp]
   12120:	b	12124 <__assert_fail@plt+0x1130>
   12124:	ldr	r0, [sp]
   12128:	ldr	r0, [r0]
   1212c:	add	sp, sp, #8
   12130:	bx	lr
   12134:	sub	sp, sp, #16
   12138:	str	r0, [sp, #12]
   1213c:	str	r1, [sp, #8]
   12140:	ldr	r0, [sp, #8]
   12144:	ldr	r1, [sp, #12]
   12148:	movw	r2, #0
   1214c:	cmp	r1, r2
   12150:	str	r0, [sp, #4]
   12154:	beq	12164 <__assert_fail@plt+0x1170>
   12158:	ldr	r0, [sp, #12]
   1215c:	str	r0, [sp]
   12160:	b	12174 <__assert_fail@plt+0x1180>
   12164:	movw	r0, #45404	; 0xb15c
   12168:	movt	r0, #2
   1216c:	str	r0, [sp]
   12170:	b	12174 <__assert_fail@plt+0x1180>
   12174:	ldr	r0, [sp]
   12178:	ldr	r1, [sp, #4]
   1217c:	str	r1, [r0]
   12180:	add	sp, sp, #16
   12184:	bx	lr
   12188:	sub	sp, sp, #32
   1218c:	str	r0, [sp, #28]
   12190:	strb	r1, [sp, #27]
   12194:	str	r2, [sp, #20]
   12198:	ldrb	r0, [sp, #27]
   1219c:	strb	r0, [sp, #19]
   121a0:	ldr	r0, [sp, #28]
   121a4:	movw	r1, #0
   121a8:	cmp	r0, r1
   121ac:	beq	121bc <__assert_fail@plt+0x11c8>
   121b0:	ldr	r0, [sp, #28]
   121b4:	str	r0, [sp]
   121b8:	b	121cc <__assert_fail@plt+0x11d8>
   121bc:	movw	r0, #45404	; 0xb15c
   121c0:	movt	r0, #2
   121c4:	str	r0, [sp]
   121c8:	b	121cc <__assert_fail@plt+0x11d8>
   121cc:	ldr	r0, [sp]
   121d0:	add	r0, r0, #8
   121d4:	ldrb	r1, [sp, #19]
   121d8:	lsr	r1, r1, #5
   121dc:	add	r0, r0, r1, lsl #2
   121e0:	str	r0, [sp, #12]
   121e4:	ldrb	r0, [sp, #19]
   121e8:	and	r0, r0, #31
   121ec:	str	r0, [sp, #8]
   121f0:	ldr	r0, [sp, #12]
   121f4:	ldr	r0, [r0]
   121f8:	ldr	r1, [sp, #8]
   121fc:	lsr	r0, r0, r1
   12200:	and	r0, r0, #1
   12204:	str	r0, [sp, #4]
   12208:	ldr	r0, [sp, #20]
   1220c:	and	r0, r0, #1
   12210:	ldr	r1, [sp, #4]
   12214:	eor	r0, r0, r1
   12218:	ldr	r1, [sp, #8]
   1221c:	lsl	r0, r0, r1
   12220:	ldr	r1, [sp, #12]
   12224:	ldr	r2, [r1]
   12228:	eor	r0, r2, r0
   1222c:	str	r0, [r1]
   12230:	ldr	r0, [sp, #4]
   12234:	add	sp, sp, #32
   12238:	bx	lr
   1223c:	sub	sp, sp, #12
   12240:	str	r0, [sp, #8]
   12244:	str	r1, [sp, #4]
   12248:	ldr	r0, [sp, #8]
   1224c:	movw	r1, #0
   12250:	cmp	r0, r1
   12254:	bne	12264 <__assert_fail@plt+0x1270>
   12258:	movw	r0, #45404	; 0xb15c
   1225c:	movt	r0, #2
   12260:	str	r0, [sp, #8]
   12264:	ldr	r0, [sp, #8]
   12268:	ldr	r0, [r0, #4]
   1226c:	str	r0, [sp]
   12270:	ldr	r0, [sp, #4]
   12274:	ldr	r1, [sp, #8]
   12278:	str	r0, [r1, #4]
   1227c:	ldr	r0, [sp]
   12280:	add	sp, sp, #12
   12284:	bx	lr
   12288:	push	{fp, lr}
   1228c:	mov	fp, sp
   12290:	sub	sp, sp, #16
   12294:	str	r0, [fp, #-4]
   12298:	str	r1, [sp, #8]
   1229c:	str	r2, [sp, #4]
   122a0:	ldr	r0, [fp, #-4]
   122a4:	movw	r1, #0
   122a8:	cmp	r0, r1
   122ac:	bne	122bc <__assert_fail@plt+0x12c8>
   122b0:	movw	r0, #45404	; 0xb15c
   122b4:	movt	r0, #2
   122b8:	str	r0, [fp, #-4]
   122bc:	ldr	r0, [fp, #-4]
   122c0:	movw	r1, #10
   122c4:	str	r1, [r0]
   122c8:	ldr	r0, [sp, #8]
   122cc:	movw	r1, #0
   122d0:	cmp	r0, r1
   122d4:	beq	122e8 <__assert_fail@plt+0x12f4>
   122d8:	ldr	r0, [sp, #4]
   122dc:	movw	r1, #0
   122e0:	cmp	r0, r1
   122e4:	bne	122ec <__assert_fail@plt+0x12f8>
   122e8:	bl	10fdc <abort@plt>
   122ec:	ldr	r0, [sp, #8]
   122f0:	ldr	r1, [fp, #-4]
   122f4:	str	r0, [r1, #40]	; 0x28
   122f8:	ldr	r0, [sp, #4]
   122fc:	ldr	r1, [fp, #-4]
   12300:	str	r0, [r1, #44]	; 0x2c
   12304:	mov	sp, fp
   12308:	pop	{fp, pc}
   1230c:	push	{r4, r5, r6, sl, fp, lr}
   12310:	add	fp, sp, #16
   12314:	sub	sp, sp, #64	; 0x40
   12318:	ldr	ip, [fp, #8]
   1231c:	str	r0, [fp, #-20]	; 0xffffffec
   12320:	str	r1, [fp, #-24]	; 0xffffffe8
   12324:	str	r2, [fp, #-28]	; 0xffffffe4
   12328:	str	r3, [fp, #-32]	; 0xffffffe0
   1232c:	ldr	r0, [fp, #8]
   12330:	movw	r1, #0
   12334:	cmp	r0, r1
   12338:	str	ip, [sp, #32]
   1233c:	beq	1234c <__assert_fail@plt+0x1358>
   12340:	ldr	r0, [fp, #8]
   12344:	str	r0, [sp, #28]
   12348:	b	1235c <__assert_fail@plt+0x1368>
   1234c:	movw	r0, #45404	; 0xb15c
   12350:	movt	r0, #2
   12354:	str	r0, [sp, #28]
   12358:	b	1235c <__assert_fail@plt+0x1368>
   1235c:	ldr	r0, [sp, #28]
   12360:	str	r0, [fp, #-36]	; 0xffffffdc
   12364:	bl	10f28 <__errno_location@plt>
   12368:	ldr	r0, [r0]
   1236c:	str	r0, [sp, #40]	; 0x28
   12370:	ldr	r0, [fp, #-20]	; 0xffffffec
   12374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12378:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1237c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12380:	ldr	lr, [fp, #-36]	; 0xffffffdc
   12384:	ldr	lr, [lr]
   12388:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1238c:	ldr	ip, [ip, #4]
   12390:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12394:	add	r4, r4, #8
   12398:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1239c:	ldr	r5, [r5, #40]	; 0x28
   123a0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   123a4:	ldr	r6, [r6, #44]	; 0x2c
   123a8:	str	lr, [sp]
   123ac:	str	ip, [sp, #4]
   123b0:	str	r4, [sp, #8]
   123b4:	str	r5, [sp, #12]
   123b8:	str	r6, [sp, #16]
   123bc:	bl	123e4 <__assert_fail@plt+0x13f0>
   123c0:	str	r0, [sp, #36]	; 0x24
   123c4:	ldr	r0, [sp, #40]	; 0x28
   123c8:	str	r0, [sp, #24]
   123cc:	bl	10f28 <__errno_location@plt>
   123d0:	ldr	r1, [sp, #24]
   123d4:	str	r1, [r0]
   123d8:	ldr	r0, [sp, #36]	; 0x24
   123dc:	sub	sp, fp, #16
   123e0:	pop	{r4, r5, r6, sl, fp, pc}
   123e4:	push	{r4, r5, r6, sl, fp, lr}
   123e8:	add	fp, sp, #16
   123ec:	sub	sp, sp, #168	; 0xa8
   123f0:	ldr	ip, [fp, #24]
   123f4:	ldr	lr, [fp, #20]
   123f8:	ldr	r4, [fp, #16]
   123fc:	ldr	r5, [fp, #12]
   12400:	ldr	r6, [fp, #8]
   12404:	str	r0, [fp, #-24]	; 0xffffffe8
   12408:	str	r1, [fp, #-28]	; 0xffffffe4
   1240c:	str	r2, [fp, #-32]	; 0xffffffe0
   12410:	str	r3, [fp, #-36]	; 0xffffffdc
   12414:	movw	r0, #0
   12418:	str	r0, [fp, #-44]	; 0xffffffd4
   1241c:	str	r0, [fp, #-48]	; 0xffffffd0
   12420:	str	r0, [fp, #-52]	; 0xffffffcc
   12424:	str	r0, [fp, #-56]	; 0xffffffc8
   12428:	movw	r0, #0
   1242c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12430:	str	r6, [sp, #80]	; 0x50
   12434:	str	lr, [sp, #76]	; 0x4c
   12438:	str	r4, [sp, #72]	; 0x48
   1243c:	str	r5, [sp, #68]	; 0x44
   12440:	str	ip, [sp, #64]	; 0x40
   12444:	bl	10e68 <__ctype_get_mb_cur_max@plt>
   12448:	cmp	r0, #1
   1244c:	movw	r0, #0
   12450:	moveq	r0, #1
   12454:	and	r0, r0, #1
   12458:	strb	r0, [fp, #-58]	; 0xffffffc6
   1245c:	ldr	r0, [fp, #12]
   12460:	and	r0, r0, #2
   12464:	cmp	r0, #0
   12468:	movw	r0, #0
   1246c:	movne	r0, #1
   12470:	and	r0, r0, #1
   12474:	strb	r0, [fp, #-59]	; 0xffffffc5
   12478:	movw	r0, #0
   1247c:	strb	r0, [fp, #-60]	; 0xffffffc4
   12480:	strb	r0, [fp, #-61]	; 0xffffffc3
   12484:	movw	r0, #1
   12488:	strb	r0, [fp, #-62]	; 0xffffffc2
   1248c:	ldr	r0, [fp, #8]
   12490:	cmp	r0, #10
   12494:	str	r0, [sp, #60]	; 0x3c
   12498:	bhi	126c0 <__assert_fail@plt+0x16cc>
   1249c:	add	r0, pc, #8
   124a0:	ldr	r1, [sp, #60]	; 0x3c
   124a4:	ldr	r0, [r0, r1, lsl #2]
   124a8:	mov	pc, r0
   124ac:			; <UNDEFINED> instruction: 0x000126b4
   124b0:	andeq	r2, r1, r0, lsr r6
   124b4:	andeq	r2, r1, r0, asr r6
   124b8:	andeq	r2, r1, r8, lsr #12
   124bc:	andeq	r2, r1, r8, lsr r6
   124c0:	andeq	r2, r1, r8, ror #9
   124c4:	ldrdeq	r2, [r1], -r8
   124c8:	andeq	r2, r1, ip, asr #10
   124cc:	andeq	r2, r1, r0, ror #10
   124d0:	andeq	r2, r1, r0, ror #10
   124d4:	andeq	r2, r1, r0, ror #10
   124d8:	movw	r0, #5
   124dc:	str	r0, [fp, #8]
   124e0:	movw	r0, #1
   124e4:	strb	r0, [fp, #-59]	; 0xffffffc5
   124e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   124ec:	tst	r0, #1
   124f0:	bne	1252c <__assert_fail@plt+0x1538>
   124f4:	b	124f8 <__assert_fail@plt+0x1504>
   124f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   124fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12500:	cmp	r0, r1
   12504:	bcs	1251c <__assert_fail@plt+0x1528>
   12508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1250c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12510:	add	r0, r0, r1
   12514:	movw	r1, #34	; 0x22
   12518:	strb	r1, [r0]
   1251c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12520:	add	r0, r0, #1
   12524:	str	r0, [fp, #-44]	; 0xffffffd4
   12528:	b	1252c <__assert_fail@plt+0x1538>
   1252c:	movw	r0, #1
   12530:	strb	r0, [fp, #-57]	; 0xffffffc7
   12534:	movw	r0, #43451	; 0xa9bb
   12538:	movt	r0, #1
   1253c:	str	r0, [fp, #-52]	; 0xffffffcc
   12540:	movw	r0, #1
   12544:	str	r0, [fp, #-56]	; 0xffffffc8
   12548:	b	126c4 <__assert_fail@plt+0x16d0>
   1254c:	movw	r0, #1
   12550:	strb	r0, [fp, #-57]	; 0xffffffc7
   12554:	movw	r0, #0
   12558:	strb	r0, [fp, #-59]	; 0xffffffc5
   1255c:	b	126c4 <__assert_fail@plt+0x16d0>
   12560:	ldr	r0, [fp, #8]
   12564:	cmp	r0, #10
   12568:	beq	12594 <__assert_fail@plt+0x15a0>
   1256c:	ldr	r1, [fp, #8]
   12570:	movw	r0, #43862	; 0xab56
   12574:	movt	r0, #1
   12578:	bl	145d4 <__assert_fail@plt+0x35e0>
   1257c:	str	r0, [fp, #20]
   12580:	ldr	r1, [fp, #8]
   12584:	movw	r0, #43864	; 0xab58
   12588:	movt	r0, #1
   1258c:	bl	145d4 <__assert_fail@plt+0x35e0>
   12590:	str	r0, [fp, #24]
   12594:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12598:	tst	r0, #1
   1259c:	bne	12608 <__assert_fail@plt+0x1614>
   125a0:	ldr	r0, [fp, #20]
   125a4:	str	r0, [fp, #-52]	; 0xffffffcc
   125a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   125ac:	ldrsb	r0, [r0]
   125b0:	cmp	r0, #0
   125b4:	beq	12604 <__assert_fail@plt+0x1610>
   125b8:	b	125bc <__assert_fail@plt+0x15c8>
   125bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   125c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   125c4:	cmp	r0, r1
   125c8:	bcs	125e4 <__assert_fail@plt+0x15f0>
   125cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   125d0:	ldrb	r0, [r0]
   125d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   125d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   125dc:	add	r1, r1, r2
   125e0:	strb	r0, [r1]
   125e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   125e8:	add	r0, r0, #1
   125ec:	str	r0, [fp, #-44]	; 0xffffffd4
   125f0:	b	125f4 <__assert_fail@plt+0x1600>
   125f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   125f8:	add	r0, r0, #1
   125fc:	str	r0, [fp, #-52]	; 0xffffffcc
   12600:	b	125a8 <__assert_fail@plt+0x15b4>
   12604:	b	12608 <__assert_fail@plt+0x1614>
   12608:	movw	r0, #1
   1260c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12610:	ldr	r0, [fp, #24]
   12614:	str	r0, [fp, #-52]	; 0xffffffcc
   12618:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1261c:	bl	10f10 <strlen@plt>
   12620:	str	r0, [fp, #-56]	; 0xffffffc8
   12624:	b	126c4 <__assert_fail@plt+0x16d0>
   12628:	movw	r0, #1
   1262c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12630:	movw	r0, #1
   12634:	strb	r0, [fp, #-59]	; 0xffffffc5
   12638:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1263c:	tst	r0, #1
   12640:	bne	1264c <__assert_fail@plt+0x1658>
   12644:	movw	r0, #1
   12648:	strb	r0, [fp, #-57]	; 0xffffffc7
   1264c:	b	12650 <__assert_fail@plt+0x165c>
   12650:	movw	r0, #2
   12654:	str	r0, [fp, #8]
   12658:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1265c:	tst	r0, #1
   12660:	bne	1269c <__assert_fail@plt+0x16a8>
   12664:	b	12668 <__assert_fail@plt+0x1674>
   12668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1266c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12670:	cmp	r0, r1
   12674:	bcs	1268c <__assert_fail@plt+0x1698>
   12678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1267c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12680:	add	r0, r0, r1
   12684:	movw	r1, #39	; 0x27
   12688:	strb	r1, [r0]
   1268c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12690:	add	r0, r0, #1
   12694:	str	r0, [fp, #-44]	; 0xffffffd4
   12698:	b	1269c <__assert_fail@plt+0x16a8>
   1269c:	movw	r0, #43864	; 0xab58
   126a0:	movt	r0, #1
   126a4:	str	r0, [fp, #-52]	; 0xffffffcc
   126a8:	movw	r0, #1
   126ac:	str	r0, [fp, #-56]	; 0xffffffc8
   126b0:	b	126c4 <__assert_fail@plt+0x16d0>
   126b4:	movw	r0, #0
   126b8:	strb	r0, [fp, #-59]	; 0xffffffc5
   126bc:	b	126c4 <__assert_fail@plt+0x16d0>
   126c0:	bl	10fdc <abort@plt>
   126c4:	movw	r0, #0
   126c8:	str	r0, [fp, #-40]	; 0xffffffd8
   126cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   126d0:	cmn	r0, #1
   126d4:	bne	12700 <__assert_fail@plt+0x170c>
   126d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   126dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   126e0:	add	r0, r0, r1
   126e4:	ldrb	r0, [r0]
   126e8:	cmp	r0, #0
   126ec:	movw	r0, #0
   126f0:	moveq	r0, #1
   126f4:	and	r0, r0, #1
   126f8:	str	r0, [sp, #56]	; 0x38
   126fc:	b	1271c <__assert_fail@plt+0x1728>
   12700:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12704:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12708:	cmp	r0, r1
   1270c:	movw	r0, #0
   12710:	moveq	r0, #1
   12714:	and	r0, r0, #1
   12718:	str	r0, [sp, #56]	; 0x38
   1271c:	ldr	r0, [sp, #56]	; 0x38
   12720:	cmp	r0, #0
   12724:	movw	r0, #0
   12728:	movne	r0, #1
   1272c:	mvn	r1, #0
   12730:	eor	r0, r0, r1
   12734:	tst	r0, #1
   12738:	beq	13928 <__assert_fail@plt+0x2934>
   1273c:	movw	r0, #0
   12740:	strb	r0, [fp, #-65]	; 0xffffffbf
   12744:	strb	r0, [fp, #-66]	; 0xffffffbe
   12748:	strb	r0, [fp, #-67]	; 0xffffffbd
   1274c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12750:	tst	r0, #1
   12754:	beq	12800 <__assert_fail@plt+0x180c>
   12758:	ldr	r0, [fp, #8]
   1275c:	cmp	r0, #2
   12760:	beq	12800 <__assert_fail@plt+0x180c>
   12764:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12768:	cmp	r0, #0
   1276c:	beq	12800 <__assert_fail@plt+0x180c>
   12770:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12774:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12778:	add	r0, r0, r1
   1277c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12780:	cmn	r1, #1
   12784:	str	r0, [sp, #52]	; 0x34
   12788:	bne	127b0 <__assert_fail@plt+0x17bc>
   1278c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12790:	movw	r1, #1
   12794:	cmp	r1, r0
   12798:	bcs	127b0 <__assert_fail@plt+0x17bc>
   1279c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127a0:	bl	10f10 <strlen@plt>
   127a4:	str	r0, [fp, #-36]	; 0xffffffdc
   127a8:	str	r0, [sp, #48]	; 0x30
   127ac:	b	127b8 <__assert_fail@plt+0x17c4>
   127b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   127b4:	str	r0, [sp, #48]	; 0x30
   127b8:	ldr	r0, [sp, #48]	; 0x30
   127bc:	ldr	r1, [sp, #52]	; 0x34
   127c0:	cmp	r1, r0
   127c4:	bhi	12800 <__assert_fail@plt+0x180c>
   127c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127d0:	add	r0, r0, r1
   127d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   127d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   127dc:	bl	10e20 <memcmp@plt>
   127e0:	cmp	r0, #0
   127e4:	bne	12800 <__assert_fail@plt+0x180c>
   127e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   127ec:	tst	r0, #1
   127f0:	beq	127f8 <__assert_fail@plt+0x1804>
   127f4:	b	13aa8 <__assert_fail@plt+0x2ab4>
   127f8:	movw	r0, #1
   127fc:	strb	r0, [fp, #-65]	; 0xffffffbf
   12800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12804:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12808:	ldrb	r0, [r0, r1]
   1280c:	strb	r0, [fp, #-63]	; 0xffffffc1
   12810:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12814:	mov	r1, r0
   12818:	cmp	r0, #126	; 0x7e
   1281c:	str	r1, [sp, #44]	; 0x2c
   12820:	bhi	13090 <__assert_fail@plt+0x209c>
   12824:	add	r0, pc, #8
   12828:	ldr	r1, [sp, #44]	; 0x2c
   1282c:	ldr	r0, [r0, r1, lsl #2]
   12830:	mov	pc, r0
   12834:	andeq	r2, r1, r0, lsr sl
   12838:	muleq	r1, r0, r0
   1283c:	muleq	r1, r0, r0
   12840:	muleq	r1, r0, r0
   12844:	muleq	r1, r0, r0
   12848:	muleq	r1, r0, r0
   1284c:	muleq	r1, r0, r0
   12850:	andeq	r2, r1, r8, lsr lr
   12854:	andeq	r2, r1, r4, asr #28
   12858:	andeq	r2, r1, r4, ror lr
   1285c:	andeq	r2, r1, ip, asr lr
   12860:	andeq	r2, r1, r0, lsl #29
   12864:	andeq	r2, r1, r0, asr lr
   12868:	andeq	r2, r1, r8, ror #28
   1286c:	muleq	r1, r0, r0
   12870:	muleq	r1, r0, r0
   12874:	muleq	r1, r0, r0
   12878:	muleq	r1, r0, r0
   1287c:	muleq	r1, r0, r0
   12880:	muleq	r1, r0, r0
   12884:	muleq	r1, r0, r0
   12888:	muleq	r1, r0, r0
   1288c:	muleq	r1, r0, r0
   12890:	muleq	r1, r0, r0
   12894:	muleq	r1, r0, r0
   12898:	muleq	r1, r0, r0
   1289c:	muleq	r1, r0, r0
   128a0:	muleq	r1, r0, r0
   128a4:	muleq	r1, r0, r0
   128a8:	muleq	r1, r0, r0
   128ac:	muleq	r1, r0, r0
   128b0:	muleq	r1, r0, r0
   128b4:	andeq	r2, r1, r4, ror #30
   128b8:	andeq	r2, r1, ip, ror #30
   128bc:	andeq	r2, r1, ip, ror #30
   128c0:	andeq	r2, r1, r0, asr pc
   128c4:	andeq	r2, r1, ip, ror #30
   128c8:	andeq	r3, r1, r4, lsl #1
   128cc:	andeq	r2, r1, ip, ror #30
   128d0:	andeq	r2, r1, ip, lsl #31
   128d4:	andeq	r2, r1, ip, ror #30
   128d8:	andeq	r2, r1, ip, ror #30
   128dc:	andeq	r2, r1, ip, ror #30
   128e0:	andeq	r3, r1, r4, lsl #1
   128e4:	andeq	r3, r1, r4, lsl #1
   128e8:	andeq	r3, r1, r4, lsl #1
   128ec:	andeq	r3, r1, r4, lsl #1
   128f0:	andeq	r3, r1, r4, lsl #1
   128f4:	andeq	r3, r1, r4, lsl #1
   128f8:	andeq	r3, r1, r4, lsl #1
   128fc:	andeq	r3, r1, r4, lsl #1
   12900:	andeq	r3, r1, r4, lsl #1
   12904:	andeq	r3, r1, r4, lsl #1
   12908:	andeq	r3, r1, r4, lsl #1
   1290c:	andeq	r3, r1, r4, lsl #1
   12910:	andeq	r3, r1, r4, lsl #1
   12914:	andeq	r3, r1, r4, lsl #1
   12918:	andeq	r3, r1, r4, lsl #1
   1291c:	andeq	r3, r1, r4, lsl #1
   12920:	andeq	r2, r1, ip, ror #30
   12924:	andeq	r2, r1, ip, ror #30
   12928:	andeq	r2, r1, ip, ror #30
   1292c:	andeq	r2, r1, ip, ror #30
   12930:	andeq	r2, r1, ip, lsr ip
   12934:	muleq	r1, r0, r0
   12938:	andeq	r3, r1, r4, lsl #1
   1293c:	andeq	r3, r1, r4, lsl #1
   12940:	andeq	r3, r1, r4, lsl #1
   12944:	andeq	r3, r1, r4, lsl #1
   12948:	andeq	r3, r1, r4, lsl #1
   1294c:	andeq	r3, r1, r4, lsl #1
   12950:	andeq	r3, r1, r4, lsl #1
   12954:	andeq	r3, r1, r4, lsl #1
   12958:	andeq	r3, r1, r4, lsl #1
   1295c:	andeq	r3, r1, r4, lsl #1
   12960:	andeq	r3, r1, r4, lsl #1
   12964:	andeq	r3, r1, r4, lsl #1
   12968:	andeq	r3, r1, r4, lsl #1
   1296c:	andeq	r3, r1, r4, lsl #1
   12970:	andeq	r3, r1, r4, lsl #1
   12974:	andeq	r3, r1, r4, lsl #1
   12978:	andeq	r3, r1, r4, lsl #1
   1297c:	andeq	r3, r1, r4, lsl #1
   12980:	andeq	r3, r1, r4, lsl #1
   12984:	andeq	r3, r1, r4, lsl #1
   12988:	andeq	r3, r1, r4, lsl #1
   1298c:	andeq	r3, r1, r4, lsl #1
   12990:	andeq	r3, r1, r4, lsl #1
   12994:	andeq	r3, r1, r4, lsl #1
   12998:	andeq	r3, r1, r4, lsl #1
   1299c:	andeq	r3, r1, r4, lsl #1
   129a0:	andeq	r2, r1, ip, ror #30
   129a4:	andeq	r2, r1, ip, lsl #29
   129a8:	andeq	r3, r1, r4, lsl #1
   129ac:	andeq	r2, r1, ip, ror #30
   129b0:	andeq	r3, r1, r4, lsl #1
   129b4:	andeq	r2, r1, ip, ror #30
   129b8:	andeq	r3, r1, r4, lsl #1
   129bc:	andeq	r3, r1, r4, lsl #1
   129c0:	andeq	r3, r1, r4, lsl #1
   129c4:	andeq	r3, r1, r4, lsl #1
   129c8:	andeq	r3, r1, r4, lsl #1
   129cc:	andeq	r3, r1, r4, lsl #1
   129d0:	andeq	r3, r1, r4, lsl #1
   129d4:	andeq	r3, r1, r4, lsl #1
   129d8:	andeq	r3, r1, r4, lsl #1
   129dc:	andeq	r3, r1, r4, lsl #1
   129e0:	andeq	r3, r1, r4, lsl #1
   129e4:	andeq	r3, r1, r4, lsl #1
   129e8:	andeq	r3, r1, r4, lsl #1
   129ec:	andeq	r3, r1, r4, lsl #1
   129f0:	andeq	r3, r1, r4, lsl #1
   129f4:	andeq	r3, r1, r4, lsl #1
   129f8:	andeq	r3, r1, r4, lsl #1
   129fc:	andeq	r3, r1, r4, lsl #1
   12a00:	andeq	r3, r1, r4, lsl #1
   12a04:	andeq	r3, r1, r4, lsl #1
   12a08:	andeq	r3, r1, r4, lsl #1
   12a0c:	andeq	r3, r1, r4, lsl #1
   12a10:	andeq	r3, r1, r4, lsl #1
   12a14:	andeq	r3, r1, r4, lsl #1
   12a18:	andeq	r3, r1, r4, lsl #1
   12a1c:	andeq	r3, r1, r4, lsl #1
   12a20:	andeq	r2, r1, ip, lsl pc
   12a24:	andeq	r2, r1, ip, ror #30
   12a28:	andeq	r2, r1, ip, lsl pc
   12a2c:	andeq	r2, r1, r0, asr pc
   12a30:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12a34:	tst	r0, #1
   12a38:	beq	12c20 <__assert_fail@plt+0x1c2c>
   12a3c:	b	12a40 <__assert_fail@plt+0x1a4c>
   12a40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12a44:	tst	r0, #1
   12a48:	beq	12a50 <__assert_fail@plt+0x1a5c>
   12a4c:	b	13aa8 <__assert_fail@plt+0x2ab4>
   12a50:	movw	r0, #1
   12a54:	strb	r0, [fp, #-66]	; 0xffffffbe
   12a58:	ldr	r0, [fp, #8]
   12a5c:	cmp	r0, #2
   12a60:	bne	12b14 <__assert_fail@plt+0x1b20>
   12a64:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12a68:	tst	r0, #1
   12a6c:	bne	12b14 <__assert_fail@plt+0x1b20>
   12a70:	b	12a74 <__assert_fail@plt+0x1a80>
   12a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a7c:	cmp	r0, r1
   12a80:	bcs	12a98 <__assert_fail@plt+0x1aa4>
   12a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a8c:	add	r0, r0, r1
   12a90:	movw	r1, #39	; 0x27
   12a94:	strb	r1, [r0]
   12a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a9c:	add	r0, r0, #1
   12aa0:	str	r0, [fp, #-44]	; 0xffffffd4
   12aa4:	b	12aa8 <__assert_fail@plt+0x1ab4>
   12aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ab0:	cmp	r0, r1
   12ab4:	bcs	12acc <__assert_fail@plt+0x1ad8>
   12ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12abc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ac0:	add	r0, r0, r1
   12ac4:	movw	r1, #36	; 0x24
   12ac8:	strb	r1, [r0]
   12acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ad0:	add	r0, r0, #1
   12ad4:	str	r0, [fp, #-44]	; 0xffffffd4
   12ad8:	b	12adc <__assert_fail@plt+0x1ae8>
   12adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ae4:	cmp	r0, r1
   12ae8:	bcs	12b00 <__assert_fail@plt+0x1b0c>
   12aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12af4:	add	r0, r0, r1
   12af8:	movw	r1, #39	; 0x27
   12afc:	strb	r1, [r0]
   12b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b04:	add	r0, r0, #1
   12b08:	str	r0, [fp, #-44]	; 0xffffffd4
   12b0c:	movw	r0, #1
   12b10:	strb	r0, [fp, #-60]	; 0xffffffc4
   12b14:	b	12b18 <__assert_fail@plt+0x1b24>
   12b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b20:	cmp	r0, r1
   12b24:	bcs	12b3c <__assert_fail@plt+0x1b48>
   12b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12b30:	add	r0, r0, r1
   12b34:	movw	r1, #92	; 0x5c
   12b38:	strb	r1, [r0]
   12b3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b40:	add	r0, r0, #1
   12b44:	str	r0, [fp, #-44]	; 0xffffffd4
   12b48:	b	12b4c <__assert_fail@plt+0x1b58>
   12b4c:	ldr	r0, [fp, #8]
   12b50:	cmp	r0, #2
   12b54:	beq	12c14 <__assert_fail@plt+0x1c20>
   12b58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b5c:	add	r0, r0, #1
   12b60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12b64:	cmp	r0, r1
   12b68:	bcs	12c14 <__assert_fail@plt+0x1c20>
   12b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12b74:	add	r1, r1, #1
   12b78:	add	r0, r0, r1
   12b7c:	ldrb	r0, [r0]
   12b80:	movw	r1, #48	; 0x30
   12b84:	cmp	r1, r0
   12b88:	bgt	12c14 <__assert_fail@plt+0x1c20>
   12b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12b94:	add	r1, r1, #1
   12b98:	add	r0, r0, r1
   12b9c:	ldrb	r0, [r0]
   12ba0:	cmp	r0, #57	; 0x39
   12ba4:	bgt	12c14 <__assert_fail@plt+0x1c20>
   12ba8:	b	12bac <__assert_fail@plt+0x1bb8>
   12bac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bb4:	cmp	r0, r1
   12bb8:	bcs	12bd0 <__assert_fail@plt+0x1bdc>
   12bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bc4:	add	r0, r0, r1
   12bc8:	movw	r1, #48	; 0x30
   12bcc:	strb	r1, [r0]
   12bd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bd4:	add	r0, r0, #1
   12bd8:	str	r0, [fp, #-44]	; 0xffffffd4
   12bdc:	b	12be0 <__assert_fail@plt+0x1bec>
   12be0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12be4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12be8:	cmp	r0, r1
   12bec:	bcs	12c04 <__assert_fail@plt+0x1c10>
   12bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bf8:	add	r0, r0, r1
   12bfc:	movw	r1, #48	; 0x30
   12c00:	strb	r1, [r0]
   12c04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c08:	add	r0, r0, #1
   12c0c:	str	r0, [fp, #-44]	; 0xffffffd4
   12c10:	b	12c14 <__assert_fail@plt+0x1c20>
   12c14:	movw	r0, #48	; 0x30
   12c18:	strb	r0, [fp, #-63]	; 0xffffffc1
   12c1c:	b	12c38 <__assert_fail@plt+0x1c44>
   12c20:	ldr	r0, [fp, #12]
   12c24:	and	r0, r0, #1
   12c28:	cmp	r0, #0
   12c2c:	beq	12c34 <__assert_fail@plt+0x1c40>
   12c30:	b	13918 <__assert_fail@plt+0x2924>
   12c34:	b	12c38 <__assert_fail@plt+0x1c44>
   12c38:	b	136b4 <__assert_fail@plt+0x26c0>
   12c3c:	ldr	r0, [fp, #8]
   12c40:	cmp	r0, #2
   12c44:	str	r0, [sp, #40]	; 0x28
   12c48:	beq	12c60 <__assert_fail@plt+0x1c6c>
   12c4c:	b	12c50 <__assert_fail@plt+0x1c5c>
   12c50:	ldr	r0, [sp, #40]	; 0x28
   12c54:	cmp	r0, #5
   12c58:	beq	12c74 <__assert_fail@plt+0x1c80>
   12c5c:	b	12e30 <__assert_fail@plt+0x1e3c>
   12c60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12c64:	tst	r0, #1
   12c68:	beq	12c70 <__assert_fail@plt+0x1c7c>
   12c6c:	b	13aa8 <__assert_fail@plt+0x2ab4>
   12c70:	b	12e34 <__assert_fail@plt+0x1e40>
   12c74:	ldr	r0, [fp, #12]
   12c78:	and	r0, r0, #4
   12c7c:	cmp	r0, #0
   12c80:	beq	12e2c <__assert_fail@plt+0x1e38>
   12c84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c88:	add	r0, r0, #2
   12c8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12c90:	cmp	r0, r1
   12c94:	bcs	12e2c <__assert_fail@plt+0x1e38>
   12c98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ca0:	add	r1, r1, #1
   12ca4:	add	r0, r0, r1
   12ca8:	ldrb	r0, [r0]
   12cac:	cmp	r0, #63	; 0x3f
   12cb0:	bne	12e2c <__assert_fail@plt+0x1e38>
   12cb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12cbc:	add	r0, r0, r1
   12cc0:	ldrb	r0, [r0, #2]
   12cc4:	mov	r1, r0
   12cc8:	cmp	r0, #33	; 0x21
   12ccc:	str	r1, [sp, #36]	; 0x24
   12cd0:	beq	12d20 <__assert_fail@plt+0x1d2c>
   12cd4:	b	12cd8 <__assert_fail@plt+0x1ce4>
   12cd8:	ldr	r0, [sp, #36]	; 0x24
   12cdc:	sub	r1, r0, #39	; 0x27
   12ce0:	cmp	r1, #3
   12ce4:	bcc	12d20 <__assert_fail@plt+0x1d2c>
   12ce8:	b	12cec <__assert_fail@plt+0x1cf8>
   12cec:	ldr	r0, [sp, #36]	; 0x24
   12cf0:	cmp	r0, #45	; 0x2d
   12cf4:	beq	12d20 <__assert_fail@plt+0x1d2c>
   12cf8:	b	12cfc <__assert_fail@plt+0x1d08>
   12cfc:	ldr	r0, [sp, #36]	; 0x24
   12d00:	cmp	r0, #47	; 0x2f
   12d04:	beq	12d20 <__assert_fail@plt+0x1d2c>
   12d08:	b	12d0c <__assert_fail@plt+0x1d18>
   12d0c:	ldr	r0, [sp, #36]	; 0x24
   12d10:	sub	r1, r0, #60	; 0x3c
   12d14:	cmp	r1, #2
   12d18:	bhi	12e24 <__assert_fail@plt+0x1e30>
   12d1c:	b	12d20 <__assert_fail@plt+0x1d2c>
   12d20:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d24:	tst	r0, #1
   12d28:	beq	12d30 <__assert_fail@plt+0x1d3c>
   12d2c:	b	13aa8 <__assert_fail@plt+0x2ab4>
   12d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d38:	add	r1, r1, #2
   12d3c:	add	r0, r0, r1
   12d40:	ldrb	r0, [r0]
   12d44:	strb	r0, [fp, #-63]	; 0xffffffc1
   12d48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d4c:	add	r0, r0, #2
   12d50:	str	r0, [fp, #-40]	; 0xffffffd8
   12d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d5c:	cmp	r0, r1
   12d60:	bcs	12d78 <__assert_fail@plt+0x1d84>
   12d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d6c:	add	r0, r0, r1
   12d70:	movw	r1, #63	; 0x3f
   12d74:	strb	r1, [r0]
   12d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d7c:	add	r0, r0, #1
   12d80:	str	r0, [fp, #-44]	; 0xffffffd4
   12d84:	b	12d88 <__assert_fail@plt+0x1d94>
   12d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d90:	cmp	r0, r1
   12d94:	bcs	12dac <__assert_fail@plt+0x1db8>
   12d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12da0:	add	r0, r0, r1
   12da4:	movw	r1, #34	; 0x22
   12da8:	strb	r1, [r0]
   12dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12db0:	add	r0, r0, #1
   12db4:	str	r0, [fp, #-44]	; 0xffffffd4
   12db8:	b	12dbc <__assert_fail@plt+0x1dc8>
   12dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12dc4:	cmp	r0, r1
   12dc8:	bcs	12de0 <__assert_fail@plt+0x1dec>
   12dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12dd4:	add	r0, r0, r1
   12dd8:	movw	r1, #34	; 0x22
   12ddc:	strb	r1, [r0]
   12de0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12de4:	add	r0, r0, #1
   12de8:	str	r0, [fp, #-44]	; 0xffffffd4
   12dec:	b	12df0 <__assert_fail@plt+0x1dfc>
   12df0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12df4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12df8:	cmp	r0, r1
   12dfc:	bcs	12e14 <__assert_fail@plt+0x1e20>
   12e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12e08:	add	r0, r0, r1
   12e0c:	movw	r1, #63	; 0x3f
   12e10:	strb	r1, [r0]
   12e14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e18:	add	r0, r0, #1
   12e1c:	str	r0, [fp, #-44]	; 0xffffffd4
   12e20:	b	12e28 <__assert_fail@plt+0x1e34>
   12e24:	b	12e28 <__assert_fail@plt+0x1e34>
   12e28:	b	12e2c <__assert_fail@plt+0x1e38>
   12e2c:	b	12e34 <__assert_fail@plt+0x1e40>
   12e30:	b	12e34 <__assert_fail@plt+0x1e40>
   12e34:	b	136b4 <__assert_fail@plt+0x26c0>
   12e38:	movw	r0, #97	; 0x61
   12e3c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e40:	b	12f00 <__assert_fail@plt+0x1f0c>
   12e44:	movw	r0, #98	; 0x62
   12e48:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e4c:	b	12f00 <__assert_fail@plt+0x1f0c>
   12e50:	movw	r0, #102	; 0x66
   12e54:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e58:	b	12f00 <__assert_fail@plt+0x1f0c>
   12e5c:	movw	r0, #110	; 0x6e
   12e60:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e64:	b	12ee0 <__assert_fail@plt+0x1eec>
   12e68:	movw	r0, #114	; 0x72
   12e6c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e70:	b	12ee0 <__assert_fail@plt+0x1eec>
   12e74:	movw	r0, #116	; 0x74
   12e78:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e7c:	b	12ee0 <__assert_fail@plt+0x1eec>
   12e80:	movw	r0, #118	; 0x76
   12e84:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e88:	b	12f00 <__assert_fail@plt+0x1f0c>
   12e8c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12e90:	strb	r0, [fp, #-64]	; 0xffffffc0
   12e94:	ldr	r0, [fp, #8]
   12e98:	cmp	r0, #2
   12e9c:	bne	12eb4 <__assert_fail@plt+0x1ec0>
   12ea0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ea4:	tst	r0, #1
   12ea8:	beq	12eb0 <__assert_fail@plt+0x1ebc>
   12eac:	b	13aa8 <__assert_fail@plt+0x2ab4>
   12eb0:	b	1383c <__assert_fail@plt+0x2848>
   12eb4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12eb8:	tst	r0, #1
   12ebc:	beq	12edc <__assert_fail@plt+0x1ee8>
   12ec0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ec4:	tst	r0, #1
   12ec8:	beq	12edc <__assert_fail@plt+0x1ee8>
   12ecc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ed0:	cmp	r0, #0
   12ed4:	beq	12edc <__assert_fail@plt+0x1ee8>
   12ed8:	b	1383c <__assert_fail@plt+0x2848>
   12edc:	b	12ee0 <__assert_fail@plt+0x1eec>
   12ee0:	ldr	r0, [fp, #8]
   12ee4:	cmp	r0, #2
   12ee8:	bne	12efc <__assert_fail@plt+0x1f08>
   12eec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ef0:	tst	r0, #1
   12ef4:	beq	12efc <__assert_fail@plt+0x1f08>
   12ef8:	b	13aa8 <__assert_fail@plt+0x2ab4>
   12efc:	b	12f00 <__assert_fail@plt+0x1f0c>
   12f00:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12f04:	tst	r0, #1
   12f08:	beq	12f18 <__assert_fail@plt+0x1f24>
   12f0c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12f10:	strb	r0, [fp, #-63]	; 0xffffffc1
   12f14:	b	13728 <__assert_fail@plt+0x2734>
   12f18:	b	136b4 <__assert_fail@plt+0x26c0>
   12f1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f20:	cmn	r0, #1
   12f24:	bne	12f3c <__assert_fail@plt+0x1f48>
   12f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f2c:	ldrb	r0, [r0, #1]
   12f30:	cmp	r0, #0
   12f34:	beq	12f4c <__assert_fail@plt+0x1f58>
   12f38:	b	12f48 <__assert_fail@plt+0x1f54>
   12f3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f40:	cmp	r0, #1
   12f44:	beq	12f4c <__assert_fail@plt+0x1f58>
   12f48:	b	136b4 <__assert_fail@plt+0x26c0>
   12f4c:	b	12f50 <__assert_fail@plt+0x1f5c>
   12f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f54:	cmp	r0, #0
   12f58:	beq	12f60 <__assert_fail@plt+0x1f6c>
   12f5c:	b	136b4 <__assert_fail@plt+0x26c0>
   12f60:	b	12f64 <__assert_fail@plt+0x1f70>
   12f64:	movw	r0, #1
   12f68:	strb	r0, [fp, #-67]	; 0xffffffbd
   12f6c:	ldr	r0, [fp, #8]
   12f70:	cmp	r0, #2
   12f74:	bne	12f88 <__assert_fail@plt+0x1f94>
   12f78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12f7c:	tst	r0, #1
   12f80:	beq	12f88 <__assert_fail@plt+0x1f94>
   12f84:	b	13aa8 <__assert_fail@plt+0x2ab4>
   12f88:	b	136b4 <__assert_fail@plt+0x26c0>
   12f8c:	movw	r0, #1
   12f90:	strb	r0, [fp, #-61]	; 0xffffffc3
   12f94:	strb	r0, [fp, #-67]	; 0xffffffbd
   12f98:	ldr	r0, [fp, #8]
   12f9c:	cmp	r0, #2
   12fa0:	bne	13080 <__assert_fail@plt+0x208c>
   12fa4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12fa8:	tst	r0, #1
   12fac:	beq	12fb4 <__assert_fail@plt+0x1fc0>
   12fb0:	b	13aa8 <__assert_fail@plt+0x2ab4>
   12fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12fb8:	cmp	r0, #0
   12fbc:	beq	12fdc <__assert_fail@plt+0x1fe8>
   12fc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12fc4:	cmp	r0, #0
   12fc8:	bne	12fdc <__assert_fail@plt+0x1fe8>
   12fcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12fd0:	str	r0, [fp, #-48]	; 0xffffffd0
   12fd4:	movw	r0, #0
   12fd8:	str	r0, [fp, #-28]	; 0xffffffe4
   12fdc:	b	12fe0 <__assert_fail@plt+0x1fec>
   12fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fe4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fe8:	cmp	r0, r1
   12fec:	bcs	13004 <__assert_fail@plt+0x2010>
   12ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ff4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ff8:	add	r0, r0, r1
   12ffc:	movw	r1, #39	; 0x27
   13000:	strb	r1, [r0]
   13004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13008:	add	r0, r0, #1
   1300c:	str	r0, [fp, #-44]	; 0xffffffd4
   13010:	b	13014 <__assert_fail@plt+0x2020>
   13014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13018:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1301c:	cmp	r0, r1
   13020:	bcs	13038 <__assert_fail@plt+0x2044>
   13024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13028:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1302c:	add	r0, r0, r1
   13030:	movw	r1, #92	; 0x5c
   13034:	strb	r1, [r0]
   13038:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1303c:	add	r0, r0, #1
   13040:	str	r0, [fp, #-44]	; 0xffffffd4
   13044:	b	13048 <__assert_fail@plt+0x2054>
   13048:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1304c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13050:	cmp	r0, r1
   13054:	bcs	1306c <__assert_fail@plt+0x2078>
   13058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1305c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13060:	add	r0, r0, r1
   13064:	movw	r1, #39	; 0x27
   13068:	strb	r1, [r0]
   1306c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13070:	add	r0, r0, #1
   13074:	str	r0, [fp, #-44]	; 0xffffffd4
   13078:	movw	r0, #0
   1307c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13080:	b	136b4 <__assert_fail@plt+0x26c0>
   13084:	movw	r0, #1
   13088:	strb	r0, [fp, #-67]	; 0xffffffbd
   1308c:	b	136b4 <__assert_fail@plt+0x26c0>
   13090:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13094:	tst	r0, #1
   13098:	beq	130dc <__assert_fail@plt+0x20e8>
   1309c:	mov	r0, #1
   130a0:	str	r0, [fp, #-72]	; 0xffffffb8
   130a4:	bl	10eec <__ctype_b_loc@plt>
   130a8:	ldr	r0, [r0]
   130ac:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   130b0:	mov	r1, lr
   130b4:	add	r0, r0, lr, lsl #1
   130b8:	ldrh	r0, [r0]
   130bc:	and	r0, r0, #16384	; 0x4000
   130c0:	cmp	r0, #0
   130c4:	movw	r0, #0
   130c8:	movne	r0, #1
   130cc:	and	r0, r0, #1
   130d0:	strb	r0, [fp, #-73]	; 0xffffffb7
   130d4:	str	r1, [sp, #32]
   130d8:	b	13368 <__assert_fail@plt+0x2374>
   130dc:	sub	r0, fp, #84	; 0x54
   130e0:	movw	r1, #0
   130e4:	and	r1, r1, #255	; 0xff
   130e8:	movw	r2, #8
   130ec:	bl	10f40 <memset@plt>
   130f0:	movw	r0, #0
   130f4:	str	r0, [fp, #-72]	; 0xffffffb8
   130f8:	movw	r0, #1
   130fc:	strb	r0, [fp, #-73]	; 0xffffffb7
   13100:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13104:	cmn	r0, #1
   13108:	bne	13118 <__assert_fail@plt+0x2124>
   1310c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13110:	bl	10f10 <strlen@plt>
   13114:	str	r0, [fp, #-36]	; 0xffffffdc
   13118:	b	1311c <__assert_fail@plt+0x2128>
   1311c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13120:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13124:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13128:	add	r1, r1, r2
   1312c:	add	r1, r0, r1
   13130:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13134:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13138:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1313c:	add	r2, r2, r3
   13140:	sub	r2, r0, r2
   13144:	sub	r0, fp, #88	; 0x58
   13148:	sub	r3, fp, #84	; 0x54
   1314c:	bl	18678 <__assert_fail@plt+0x7684>
   13150:	str	r0, [sp, #92]	; 0x5c
   13154:	ldr	r0, [sp, #92]	; 0x5c
   13158:	cmp	r0, #0
   1315c:	bne	13164 <__assert_fail@plt+0x2170>
   13160:	b	13364 <__assert_fail@plt+0x2370>
   13164:	ldr	r0, [sp, #92]	; 0x5c
   13168:	cmn	r0, #1
   1316c:	bne	1317c <__assert_fail@plt+0x2188>
   13170:	movw	r0, #0
   13174:	strb	r0, [fp, #-73]	; 0xffffffb7
   13178:	b	13364 <__assert_fail@plt+0x2370>
   1317c:	ldr	r0, [sp, #92]	; 0x5c
   13180:	cmn	r0, #2
   13184:	bne	131f8 <__assert_fail@plt+0x2204>
   13188:	movw	r0, #0
   1318c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13194:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13198:	add	r0, r0, r1
   1319c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   131a0:	cmp	r0, r1
   131a4:	movw	r0, #0
   131a8:	str	r0, [sp, #28]
   131ac:	bcs	131d8 <__assert_fail@plt+0x21e4>
   131b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   131b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   131bc:	add	r1, r1, r2
   131c0:	add	r0, r0, r1
   131c4:	ldrb	r0, [r0]
   131c8:	cmp	r0, #0
   131cc:	movw	r0, #0
   131d0:	movne	r0, #1
   131d4:	str	r0, [sp, #28]
   131d8:	ldr	r0, [sp, #28]
   131dc:	tst	r0, #1
   131e0:	beq	131f4 <__assert_fail@plt+0x2200>
   131e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   131e8:	add	r0, r0, #1
   131ec:	str	r0, [fp, #-72]	; 0xffffffb8
   131f0:	b	13190 <__assert_fail@plt+0x219c>
   131f4:	b	13364 <__assert_fail@plt+0x2370>
   131f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   131fc:	tst	r0, #1
   13200:	beq	1330c <__assert_fail@plt+0x2318>
   13204:	ldr	r0, [fp, #8]
   13208:	cmp	r0, #2
   1320c:	bne	1330c <__assert_fail@plt+0x2318>
   13210:	movw	r0, #1
   13214:	str	r0, [sp, #88]	; 0x58
   13218:	ldr	r0, [sp, #88]	; 0x58
   1321c:	ldr	r1, [sp, #92]	; 0x5c
   13220:	cmp	r0, r1
   13224:	bcs	13308 <__assert_fail@plt+0x2314>
   13228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1322c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13230:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13234:	add	r1, r1, r2
   13238:	ldr	r2, [sp, #88]	; 0x58
   1323c:	add	r1, r1, r2
   13240:	ldrb	r0, [r0, r1]
   13244:	sub	r0, r0, #91	; 0x5b
   13248:	cmp	r0, #33	; 0x21
   1324c:	str	r0, [sp, #24]
   13250:	bhi	132f0 <__assert_fail@plt+0x22fc>
   13254:	add	r0, pc, #8
   13258:	ldr	r1, [sp, #24]
   1325c:	ldr	r0, [r0, r1, lsl #2]
   13260:	mov	pc, r0
   13264:	andeq	r3, r1, ip, ror #5
   13268:	andeq	r3, r1, ip, ror #5
   1326c:	strdeq	r3, [r1], -r0
   13270:	andeq	r3, r1, ip, ror #5
   13274:	strdeq	r3, [r1], -r0
   13278:	andeq	r3, r1, ip, ror #5
   1327c:	strdeq	r3, [r1], -r0
   13280:	strdeq	r3, [r1], -r0
   13284:	strdeq	r3, [r1], -r0
   13288:	strdeq	r3, [r1], -r0
   1328c:	strdeq	r3, [r1], -r0
   13290:	strdeq	r3, [r1], -r0
   13294:	strdeq	r3, [r1], -r0
   13298:	strdeq	r3, [r1], -r0
   1329c:	strdeq	r3, [r1], -r0
   132a0:	strdeq	r3, [r1], -r0
   132a4:	strdeq	r3, [r1], -r0
   132a8:	strdeq	r3, [r1], -r0
   132ac:	strdeq	r3, [r1], -r0
   132b0:	strdeq	r3, [r1], -r0
   132b4:	strdeq	r3, [r1], -r0
   132b8:	strdeq	r3, [r1], -r0
   132bc:	strdeq	r3, [r1], -r0
   132c0:	strdeq	r3, [r1], -r0
   132c4:	strdeq	r3, [r1], -r0
   132c8:	strdeq	r3, [r1], -r0
   132cc:	strdeq	r3, [r1], -r0
   132d0:	strdeq	r3, [r1], -r0
   132d4:	strdeq	r3, [r1], -r0
   132d8:	strdeq	r3, [r1], -r0
   132dc:	strdeq	r3, [r1], -r0
   132e0:	strdeq	r3, [r1], -r0
   132e4:	strdeq	r3, [r1], -r0
   132e8:	andeq	r3, r1, ip, ror #5
   132ec:	b	13aa8 <__assert_fail@plt+0x2ab4>
   132f0:	b	132f4 <__assert_fail@plt+0x2300>
   132f4:	b	132f8 <__assert_fail@plt+0x2304>
   132f8:	ldr	r0, [sp, #88]	; 0x58
   132fc:	add	r0, r0, #1
   13300:	str	r0, [sp, #88]	; 0x58
   13304:	b	13218 <__assert_fail@plt+0x2224>
   13308:	b	1330c <__assert_fail@plt+0x2318>
   1330c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13310:	bl	10e50 <iswprint@plt>
   13314:	cmp	r0, #0
   13318:	bne	13324 <__assert_fail@plt+0x2330>
   1331c:	movw	r0, #0
   13320:	strb	r0, [fp, #-73]	; 0xffffffb7
   13324:	ldr	r0, [sp, #92]	; 0x5c
   13328:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1332c:	add	r0, r1, r0
   13330:	str	r0, [fp, #-72]	; 0xffffffb8
   13334:	b	13338 <__assert_fail@plt+0x2344>
   13338:	b	1333c <__assert_fail@plt+0x2348>
   1333c:	b	13340 <__assert_fail@plt+0x234c>
   13340:	sub	r0, fp, #84	; 0x54
   13344:	bl	10e14 <mbsinit@plt>
   13348:	cmp	r0, #0
   1334c:	movw	r0, #0
   13350:	movne	r0, #1
   13354:	mvn	lr, #0
   13358:	eor	r0, r0, lr
   1335c:	tst	r0, #1
   13360:	bne	1311c <__assert_fail@plt+0x2128>
   13364:	b	13368 <__assert_fail@plt+0x2374>
   13368:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1336c:	and	r0, r0, #1
   13370:	strb	r0, [fp, #-67]	; 0xffffffbd
   13374:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13378:	movw	r1, #1
   1337c:	cmp	r1, r0
   13380:	bcc	1339c <__assert_fail@plt+0x23a8>
   13384:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13388:	tst	r0, #1
   1338c:	beq	136b0 <__assert_fail@plt+0x26bc>
   13390:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13394:	tst	r0, #1
   13398:	bne	136b0 <__assert_fail@plt+0x26bc>
   1339c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   133a0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   133a4:	add	r0, r0, r1
   133a8:	str	r0, [sp, #84]	; 0x54
   133ac:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   133b0:	tst	r0, #1
   133b4:	beq	13564 <__assert_fail@plt+0x2570>
   133b8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   133bc:	tst	r0, #1
   133c0:	bne	13564 <__assert_fail@plt+0x2570>
   133c4:	b	133c8 <__assert_fail@plt+0x23d4>
   133c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   133cc:	tst	r0, #1
   133d0:	beq	133d8 <__assert_fail@plt+0x23e4>
   133d4:	b	13aa8 <__assert_fail@plt+0x2ab4>
   133d8:	movw	r0, #1
   133dc:	strb	r0, [fp, #-66]	; 0xffffffbe
   133e0:	ldr	r0, [fp, #8]
   133e4:	cmp	r0, #2
   133e8:	bne	1349c <__assert_fail@plt+0x24a8>
   133ec:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   133f0:	tst	r0, #1
   133f4:	bne	1349c <__assert_fail@plt+0x24a8>
   133f8:	b	133fc <__assert_fail@plt+0x2408>
   133fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13404:	cmp	r0, r1
   13408:	bcs	13420 <__assert_fail@plt+0x242c>
   1340c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13410:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13414:	add	r0, r0, r1
   13418:	movw	r1, #39	; 0x27
   1341c:	strb	r1, [r0]
   13420:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13424:	add	r0, r0, #1
   13428:	str	r0, [fp, #-44]	; 0xffffffd4
   1342c:	b	13430 <__assert_fail@plt+0x243c>
   13430:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13438:	cmp	r0, r1
   1343c:	bcs	13454 <__assert_fail@plt+0x2460>
   13440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13444:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13448:	add	r0, r0, r1
   1344c:	movw	r1, #36	; 0x24
   13450:	strb	r1, [r0]
   13454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13458:	add	r0, r0, #1
   1345c:	str	r0, [fp, #-44]	; 0xffffffd4
   13460:	b	13464 <__assert_fail@plt+0x2470>
   13464:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1346c:	cmp	r0, r1
   13470:	bcs	13488 <__assert_fail@plt+0x2494>
   13474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13478:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1347c:	add	r0, r0, r1
   13480:	movw	r1, #39	; 0x27
   13484:	strb	r1, [r0]
   13488:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1348c:	add	r0, r0, #1
   13490:	str	r0, [fp, #-44]	; 0xffffffd4
   13494:	movw	r0, #1
   13498:	strb	r0, [fp, #-60]	; 0xffffffc4
   1349c:	b	134a0 <__assert_fail@plt+0x24ac>
   134a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134a8:	cmp	r0, r1
   134ac:	bcs	134c4 <__assert_fail@plt+0x24d0>
   134b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134b8:	add	r0, r0, r1
   134bc:	movw	r1, #92	; 0x5c
   134c0:	strb	r1, [r0]
   134c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134c8:	add	r0, r0, #1
   134cc:	str	r0, [fp, #-44]	; 0xffffffd4
   134d0:	b	134d4 <__assert_fail@plt+0x24e0>
   134d4:	b	134d8 <__assert_fail@plt+0x24e4>
   134d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134e0:	cmp	r0, r1
   134e4:	bcs	13504 <__assert_fail@plt+0x2510>
   134e8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   134ec:	asr	r0, r0, #6
   134f0:	add	r0, r0, #48	; 0x30
   134f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   134fc:	add	r1, r1, r2
   13500:	strb	r0, [r1]
   13504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13508:	add	r0, r0, #1
   1350c:	str	r0, [fp, #-44]	; 0xffffffd4
   13510:	b	13514 <__assert_fail@plt+0x2520>
   13514:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13518:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1351c:	cmp	r0, r1
   13520:	bcs	13544 <__assert_fail@plt+0x2550>
   13524:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13528:	asr	r0, r0, #3
   1352c:	and	r0, r0, #7
   13530:	add	r0, r0, #48	; 0x30
   13534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13538:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1353c:	add	r1, r1, r2
   13540:	strb	r0, [r1]
   13544:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13548:	add	r0, r0, #1
   1354c:	str	r0, [fp, #-44]	; 0xffffffd4
   13550:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13554:	and	r0, r0, #7
   13558:	add	r0, r0, #48	; 0x30
   1355c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13560:	b	135b0 <__assert_fail@plt+0x25bc>
   13564:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13568:	tst	r0, #1
   1356c:	beq	135ac <__assert_fail@plt+0x25b8>
   13570:	b	13574 <__assert_fail@plt+0x2580>
   13574:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1357c:	cmp	r0, r1
   13580:	bcs	13598 <__assert_fail@plt+0x25a4>
   13584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13588:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1358c:	add	r0, r0, r1
   13590:	movw	r1, #92	; 0x5c
   13594:	strb	r1, [r0]
   13598:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1359c:	add	r0, r0, #1
   135a0:	str	r0, [fp, #-44]	; 0xffffffd4
   135a4:	movw	r0, #0
   135a8:	strb	r0, [fp, #-65]	; 0xffffffbf
   135ac:	b	135b0 <__assert_fail@plt+0x25bc>
   135b0:	ldr	r0, [sp, #84]	; 0x54
   135b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   135b8:	add	r1, r1, #1
   135bc:	cmp	r0, r1
   135c0:	bhi	135c8 <__assert_fail@plt+0x25d4>
   135c4:	b	136ac <__assert_fail@plt+0x26b8>
   135c8:	b	135cc <__assert_fail@plt+0x25d8>
   135cc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   135d0:	tst	r0, #1
   135d4:	beq	13654 <__assert_fail@plt+0x2660>
   135d8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   135dc:	tst	r0, #1
   135e0:	bne	13654 <__assert_fail@plt+0x2660>
   135e4:	b	135e8 <__assert_fail@plt+0x25f4>
   135e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135f0:	cmp	r0, r1
   135f4:	bcs	1360c <__assert_fail@plt+0x2618>
   135f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13600:	add	r0, r0, r1
   13604:	movw	r1, #39	; 0x27
   13608:	strb	r1, [r0]
   1360c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13610:	add	r0, r0, #1
   13614:	str	r0, [fp, #-44]	; 0xffffffd4
   13618:	b	1361c <__assert_fail@plt+0x2628>
   1361c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13620:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13624:	cmp	r0, r1
   13628:	bcs	13640 <__assert_fail@plt+0x264c>
   1362c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13630:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13634:	add	r0, r0, r1
   13638:	movw	r1, #39	; 0x27
   1363c:	strb	r1, [r0]
   13640:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13644:	add	r0, r0, #1
   13648:	str	r0, [fp, #-44]	; 0xffffffd4
   1364c:	movw	r0, #0
   13650:	strb	r0, [fp, #-60]	; 0xffffffc4
   13654:	b	13658 <__assert_fail@plt+0x2664>
   13658:	b	1365c <__assert_fail@plt+0x2668>
   1365c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13660:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13664:	cmp	r0, r1
   13668:	bcs	13680 <__assert_fail@plt+0x268c>
   1366c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13674:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13678:	add	r1, r1, r2
   1367c:	strb	r0, [r1]
   13680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13684:	add	r0, r0, #1
   13688:	str	r0, [fp, #-44]	; 0xffffffd4
   1368c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13690:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13694:	add	r1, r1, #1
   13698:	str	r1, [fp, #-40]	; 0xffffffd8
   1369c:	add	r0, r0, r1
   136a0:	ldrb	r0, [r0]
   136a4:	strb	r0, [fp, #-63]	; 0xffffffc1
   136a8:	b	133ac <__assert_fail@plt+0x23b8>
   136ac:	b	1383c <__assert_fail@plt+0x2848>
   136b0:	b	136b4 <__assert_fail@plt+0x26c0>
   136b4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   136b8:	tst	r0, #1
   136bc:	beq	136cc <__assert_fail@plt+0x26d8>
   136c0:	ldr	r0, [fp, #8]
   136c4:	cmp	r0, #2
   136c8:	bne	136d8 <__assert_fail@plt+0x26e4>
   136cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   136d0:	tst	r0, #1
   136d4:	beq	13714 <__assert_fail@plt+0x2720>
   136d8:	ldr	r0, [fp, #16]
   136dc:	movw	r1, #0
   136e0:	cmp	r0, r1
   136e4:	beq	13714 <__assert_fail@plt+0x2720>
   136e8:	ldr	r0, [fp, #16]
   136ec:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   136f0:	lsr	r1, r1, #5
   136f4:	add	r0, r0, r1, lsl #2
   136f8:	ldr	r0, [r0]
   136fc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13700:	and	r1, r1, #31
   13704:	lsr	r0, r0, r1
   13708:	and	r0, r0, #1
   1370c:	cmp	r0, #0
   13710:	bne	13724 <__assert_fail@plt+0x2730>
   13714:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13718:	tst	r0, #1
   1371c:	bne	13724 <__assert_fail@plt+0x2730>
   13720:	b	1383c <__assert_fail@plt+0x2848>
   13724:	b	13728 <__assert_fail@plt+0x2734>
   13728:	b	1372c <__assert_fail@plt+0x2738>
   1372c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13730:	tst	r0, #1
   13734:	beq	1373c <__assert_fail@plt+0x2748>
   13738:	b	13aa8 <__assert_fail@plt+0x2ab4>
   1373c:	movw	r0, #1
   13740:	strb	r0, [fp, #-66]	; 0xffffffbe
   13744:	ldr	r0, [fp, #8]
   13748:	cmp	r0, #2
   1374c:	bne	13800 <__assert_fail@plt+0x280c>
   13750:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13754:	tst	r0, #1
   13758:	bne	13800 <__assert_fail@plt+0x280c>
   1375c:	b	13760 <__assert_fail@plt+0x276c>
   13760:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13768:	cmp	r0, r1
   1376c:	bcs	13784 <__assert_fail@plt+0x2790>
   13770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13774:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13778:	add	r0, r0, r1
   1377c:	movw	r1, #39	; 0x27
   13780:	strb	r1, [r0]
   13784:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13788:	add	r0, r0, #1
   1378c:	str	r0, [fp, #-44]	; 0xffffffd4
   13790:	b	13794 <__assert_fail@plt+0x27a0>
   13794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13798:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1379c:	cmp	r0, r1
   137a0:	bcs	137b8 <__assert_fail@plt+0x27c4>
   137a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   137ac:	add	r0, r0, r1
   137b0:	movw	r1, #36	; 0x24
   137b4:	strb	r1, [r0]
   137b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137bc:	add	r0, r0, #1
   137c0:	str	r0, [fp, #-44]	; 0xffffffd4
   137c4:	b	137c8 <__assert_fail@plt+0x27d4>
   137c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137d0:	cmp	r0, r1
   137d4:	bcs	137ec <__assert_fail@plt+0x27f8>
   137d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   137e0:	add	r0, r0, r1
   137e4:	movw	r1, #39	; 0x27
   137e8:	strb	r1, [r0]
   137ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137f0:	add	r0, r0, #1
   137f4:	str	r0, [fp, #-44]	; 0xffffffd4
   137f8:	movw	r0, #1
   137fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   13800:	b	13804 <__assert_fail@plt+0x2810>
   13804:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13808:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1380c:	cmp	r0, r1
   13810:	bcs	13828 <__assert_fail@plt+0x2834>
   13814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13818:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1381c:	add	r0, r0, r1
   13820:	movw	r1, #92	; 0x5c
   13824:	strb	r1, [r0]
   13828:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1382c:	add	r0, r0, #1
   13830:	str	r0, [fp, #-44]	; 0xffffffd4
   13834:	b	13838 <__assert_fail@plt+0x2844>
   13838:	b	1383c <__assert_fail@plt+0x2848>
   1383c:	b	13840 <__assert_fail@plt+0x284c>
   13840:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13844:	tst	r0, #1
   13848:	beq	138c8 <__assert_fail@plt+0x28d4>
   1384c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13850:	tst	r0, #1
   13854:	bne	138c8 <__assert_fail@plt+0x28d4>
   13858:	b	1385c <__assert_fail@plt+0x2868>
   1385c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13860:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13864:	cmp	r0, r1
   13868:	bcs	13880 <__assert_fail@plt+0x288c>
   1386c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13870:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13874:	add	r0, r0, r1
   13878:	movw	r1, #39	; 0x27
   1387c:	strb	r1, [r0]
   13880:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13884:	add	r0, r0, #1
   13888:	str	r0, [fp, #-44]	; 0xffffffd4
   1388c:	b	13890 <__assert_fail@plt+0x289c>
   13890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13894:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13898:	cmp	r0, r1
   1389c:	bcs	138b4 <__assert_fail@plt+0x28c0>
   138a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138a8:	add	r0, r0, r1
   138ac:	movw	r1, #39	; 0x27
   138b0:	strb	r1, [r0]
   138b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138b8:	add	r0, r0, #1
   138bc:	str	r0, [fp, #-44]	; 0xffffffd4
   138c0:	movw	r0, #0
   138c4:	strb	r0, [fp, #-60]	; 0xffffffc4
   138c8:	b	138cc <__assert_fail@plt+0x28d8>
   138cc:	b	138d0 <__assert_fail@plt+0x28dc>
   138d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138d8:	cmp	r0, r1
   138dc:	bcs	138f4 <__assert_fail@plt+0x2900>
   138e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   138e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   138e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   138ec:	add	r1, r1, r2
   138f0:	strb	r0, [r1]
   138f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138f8:	add	r0, r0, #1
   138fc:	str	r0, [fp, #-44]	; 0xffffffd4
   13900:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13904:	tst	r0, #1
   13908:	bne	13914 <__assert_fail@plt+0x2920>
   1390c:	movw	r0, #0
   13910:	strb	r0, [fp, #-62]	; 0xffffffc2
   13914:	b	13918 <__assert_fail@plt+0x2924>
   13918:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1391c:	add	r0, r0, #1
   13920:	str	r0, [fp, #-40]	; 0xffffffd8
   13924:	b	126cc <__assert_fail@plt+0x16d8>
   13928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1392c:	cmp	r0, #0
   13930:	bne	13950 <__assert_fail@plt+0x295c>
   13934:	ldr	r0, [fp, #8]
   13938:	cmp	r0, #2
   1393c:	bne	13950 <__assert_fail@plt+0x295c>
   13940:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13944:	tst	r0, #1
   13948:	beq	13950 <__assert_fail@plt+0x295c>
   1394c:	b	13aa8 <__assert_fail@plt+0x2ab4>
   13950:	ldr	r0, [fp, #8]
   13954:	cmp	r0, #2
   13958:	bne	139f8 <__assert_fail@plt+0x2a04>
   1395c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13960:	tst	r0, #1
   13964:	bne	139f8 <__assert_fail@plt+0x2a04>
   13968:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1396c:	tst	r0, #1
   13970:	beq	139f8 <__assert_fail@plt+0x2a04>
   13974:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   13978:	tst	r0, #1
   1397c:	beq	139c4 <__assert_fail@plt+0x29d0>
   13980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13984:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13988:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1398c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13990:	ldr	ip, [fp, #12]
   13994:	ldr	lr, [fp, #16]
   13998:	ldr	r4, [fp, #20]
   1399c:	ldr	r5, [fp, #24]
   139a0:	movw	r6, #5
   139a4:	str	r6, [sp]
   139a8:	str	ip, [sp, #4]
   139ac:	str	lr, [sp, #8]
   139b0:	str	r4, [sp, #12]
   139b4:	str	r5, [sp, #16]
   139b8:	bl	123e4 <__assert_fail@plt+0x13f0>
   139bc:	str	r0, [fp, #-20]	; 0xffffffec
   139c0:	b	13b10 <__assert_fail@plt+0x2b1c>
   139c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139c8:	cmp	r0, #0
   139cc:	bne	139f0 <__assert_fail@plt+0x29fc>
   139d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   139d4:	cmp	r0, #0
   139d8:	beq	139f0 <__assert_fail@plt+0x29fc>
   139dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   139e0:	str	r0, [fp, #-28]	; 0xffffffe4
   139e4:	movw	r0, #0
   139e8:	str	r0, [fp, #-44]	; 0xffffffd4
   139ec:	b	1248c <__assert_fail@plt+0x1498>
   139f0:	b	139f4 <__assert_fail@plt+0x2a00>
   139f4:	b	139f8 <__assert_fail@plt+0x2a04>
   139f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   139fc:	movw	r1, #0
   13a00:	cmp	r0, r1
   13a04:	beq	13a78 <__assert_fail@plt+0x2a84>
   13a08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a0c:	tst	r0, #1
   13a10:	bne	13a78 <__assert_fail@plt+0x2a84>
   13a14:	b	13a18 <__assert_fail@plt+0x2a24>
   13a18:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a1c:	ldrsb	r0, [r0]
   13a20:	cmp	r0, #0
   13a24:	beq	13a74 <__assert_fail@plt+0x2a80>
   13a28:	b	13a2c <__assert_fail@plt+0x2a38>
   13a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a34:	cmp	r0, r1
   13a38:	bcs	13a54 <__assert_fail@plt+0x2a60>
   13a3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a40:	ldrb	r0, [r0]
   13a44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a48:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13a4c:	add	r1, r1, r2
   13a50:	strb	r0, [r1]
   13a54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a58:	add	r0, r0, #1
   13a5c:	str	r0, [fp, #-44]	; 0xffffffd4
   13a60:	b	13a64 <__assert_fail@plt+0x2a70>
   13a64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a68:	add	r0, r0, #1
   13a6c:	str	r0, [fp, #-52]	; 0xffffffcc
   13a70:	b	13a18 <__assert_fail@plt+0x2a24>
   13a74:	b	13a78 <__assert_fail@plt+0x2a84>
   13a78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a80:	cmp	r0, r1
   13a84:	bcs	13a9c <__assert_fail@plt+0x2aa8>
   13a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a90:	add	r0, r0, r1
   13a94:	movw	r1, #0
   13a98:	strb	r1, [r0]
   13a9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13aa0:	str	r0, [fp, #-20]	; 0xffffffec
   13aa4:	b	13b10 <__assert_fail@plt+0x2b1c>
   13aa8:	ldr	r0, [fp, #8]
   13aac:	cmp	r0, #2
   13ab0:	bne	13ac8 <__assert_fail@plt+0x2ad4>
   13ab4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13ab8:	tst	r0, #1
   13abc:	beq	13ac8 <__assert_fail@plt+0x2ad4>
   13ac0:	movw	r0, #4
   13ac4:	str	r0, [fp, #8]
   13ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ad0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ad4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ad8:	ldr	ip, [fp, #8]
   13adc:	ldr	lr, [fp, #12]
   13ae0:	mvn	r4, #2
   13ae4:	and	lr, lr, r4
   13ae8:	ldr	r4, [fp, #20]
   13aec:	ldr	r5, [fp, #24]
   13af0:	str	ip, [sp]
   13af4:	str	lr, [sp, #4]
   13af8:	movw	ip, #0
   13afc:	str	ip, [sp, #8]
   13b00:	str	r4, [sp, #12]
   13b04:	str	r5, [sp, #16]
   13b08:	bl	123e4 <__assert_fail@plt+0x13f0>
   13b0c:	str	r0, [fp, #-20]	; 0xffffffec
   13b10:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b14:	sub	sp, fp, #16
   13b18:	pop	{r4, r5, r6, sl, fp, pc}
   13b1c:	push	{fp, lr}
   13b20:	mov	fp, sp
   13b24:	sub	sp, sp, #16
   13b28:	str	r0, [fp, #-4]
   13b2c:	str	r1, [sp, #8]
   13b30:	str	r2, [sp, #4]
   13b34:	ldr	r0, [fp, #-4]
   13b38:	ldr	r1, [sp, #8]
   13b3c:	ldr	r3, [sp, #4]
   13b40:	movw	r2, #0
   13b44:	bl	13b50 <__assert_fail@plt+0x2b5c>
   13b48:	mov	sp, fp
   13b4c:	pop	{fp, pc}
   13b50:	push	{r4, r5, r6, sl, fp, lr}
   13b54:	add	fp, sp, #16
   13b58:	sub	sp, sp, #72	; 0x48
   13b5c:	str	r0, [fp, #-20]	; 0xffffffec
   13b60:	str	r1, [fp, #-24]	; 0xffffffe8
   13b64:	str	r2, [fp, #-28]	; 0xffffffe4
   13b68:	str	r3, [fp, #-32]	; 0xffffffe0
   13b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b70:	movw	r1, #0
   13b74:	cmp	r0, r1
   13b78:	beq	13b88 <__assert_fail@plt+0x2b94>
   13b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b80:	str	r0, [sp, #32]
   13b84:	b	13b98 <__assert_fail@plt+0x2ba4>
   13b88:	movw	r0, #45404	; 0xb15c
   13b8c:	movt	r0, #2
   13b90:	str	r0, [sp, #32]
   13b94:	b	13b98 <__assert_fail@plt+0x2ba4>
   13b98:	ldr	r0, [sp, #32]
   13b9c:	str	r0, [fp, #-36]	; 0xffffffdc
   13ba0:	bl	10f28 <__errno_location@plt>
   13ba4:	ldr	r0, [r0]
   13ba8:	str	r0, [fp, #-40]	; 0xffffffd8
   13bac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13bb0:	ldr	r0, [r0, #4]
   13bb4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   13bb8:	movw	r1, #0
   13bbc:	cmp	lr, r1
   13bc0:	movw	lr, #0
   13bc4:	movne	lr, #1
   13bc8:	tst	lr, #1
   13bcc:	mov	lr, r1
   13bd0:	moveq	lr, #1
   13bd4:	orr	r0, r0, lr
   13bd8:	str	r0, [sp, #44]	; 0x2c
   13bdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   13be0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13be8:	ldr	r0, [r0]
   13bec:	ldr	lr, [sp, #44]	; 0x2c
   13bf0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13bf4:	add	ip, ip, #8
   13bf8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13bfc:	ldr	r4, [r4, #40]	; 0x28
   13c00:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13c04:	ldr	r5, [r5, #44]	; 0x2c
   13c08:	str	r0, [sp, #28]
   13c0c:	mov	r0, r1
   13c10:	ldr	r6, [sp, #28]
   13c14:	str	r6, [sp]
   13c18:	str	lr, [sp, #4]
   13c1c:	str	ip, [sp, #8]
   13c20:	str	r4, [sp, #12]
   13c24:	str	r5, [sp, #16]
   13c28:	bl	123e4 <__assert_fail@plt+0x13f0>
   13c2c:	add	r0, r0, #1
   13c30:	str	r0, [sp, #40]	; 0x28
   13c34:	ldr	r0, [sp, #40]	; 0x28
   13c38:	bl	15074 <__assert_fail@plt+0x4080>
   13c3c:	str	r0, [sp, #36]	; 0x24
   13c40:	ldr	r0, [sp, #36]	; 0x24
   13c44:	ldr	r1, [sp, #40]	; 0x28
   13c48:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c50:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13c54:	ldr	ip, [ip]
   13c58:	ldr	lr, [sp, #44]	; 0x2c
   13c5c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13c60:	add	r4, r4, #8
   13c64:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13c68:	ldr	r5, [r5, #40]	; 0x28
   13c6c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13c70:	ldr	r6, [r6, #44]	; 0x2c
   13c74:	str	ip, [sp]
   13c78:	str	lr, [sp, #4]
   13c7c:	str	r4, [sp, #8]
   13c80:	str	r5, [sp, #12]
   13c84:	str	r6, [sp, #16]
   13c88:	bl	123e4 <__assert_fail@plt+0x13f0>
   13c8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c90:	str	r0, [sp, #24]
   13c94:	str	r1, [sp, #20]
   13c98:	bl	10f28 <__errno_location@plt>
   13c9c:	ldr	r1, [sp, #20]
   13ca0:	str	r1, [r0]
   13ca4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ca8:	movw	r2, #0
   13cac:	cmp	r0, r2
   13cb0:	beq	13cc4 <__assert_fail@plt+0x2cd0>
   13cb4:	ldr	r0, [sp, #40]	; 0x28
   13cb8:	sub	r0, r0, #1
   13cbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cc0:	str	r0, [r1]
   13cc4:	ldr	r0, [sp, #36]	; 0x24
   13cc8:	sub	sp, fp, #16
   13ccc:	pop	{r4, r5, r6, sl, fp, pc}
   13cd0:	push	{fp, lr}
   13cd4:	mov	fp, sp
   13cd8:	sub	sp, sp, #8
   13cdc:	movw	r0, #45292	; 0xb0ec
   13ce0:	movt	r0, #2
   13ce4:	ldr	r0, [r0]
   13ce8:	str	r0, [sp, #4]
   13cec:	movw	r0, #1
   13cf0:	str	r0, [sp]
   13cf4:	ldr	r0, [sp]
   13cf8:	movw	r1, #45296	; 0xb0f0
   13cfc:	movt	r1, #2
   13d00:	ldr	r1, [r1]
   13d04:	cmp	r0, r1
   13d08:	bge	13d30 <__assert_fail@plt+0x2d3c>
   13d0c:	ldr	r0, [sp, #4]
   13d10:	ldr	r1, [sp]
   13d14:	add	r0, r0, r1, lsl #3
   13d18:	ldr	r0, [r0, #4]
   13d1c:	bl	182fc <__assert_fail@plt+0x7308>
   13d20:	ldr	r0, [sp]
   13d24:	add	r0, r0, #1
   13d28:	str	r0, [sp]
   13d2c:	b	13cf4 <__assert_fail@plt+0x2d00>
   13d30:	ldr	r0, [sp, #4]
   13d34:	ldr	r0, [r0, #4]
   13d38:	movw	r1, #45452	; 0xb18c
   13d3c:	movt	r1, #2
   13d40:	cmp	r0, r1
   13d44:	beq	13d70 <__assert_fail@plt+0x2d7c>
   13d48:	ldr	r0, [sp, #4]
   13d4c:	ldr	r0, [r0, #4]
   13d50:	bl	182fc <__assert_fail@plt+0x7308>
   13d54:	movw	r0, #256	; 0x100
   13d58:	movw	lr, #45300	; 0xb0f4
   13d5c:	movt	lr, #2
   13d60:	str	r0, [lr]
   13d64:	movw	r0, #45452	; 0xb18c
   13d68:	movt	r0, #2
   13d6c:	str	r0, [lr, #4]
   13d70:	ldr	r0, [sp, #4]
   13d74:	movw	r1, #45300	; 0xb0f4
   13d78:	movt	r1, #2
   13d7c:	cmp	r0, r1
   13d80:	beq	13da0 <__assert_fail@plt+0x2dac>
   13d84:	ldr	r0, [sp, #4]
   13d88:	bl	182fc <__assert_fail@plt+0x7308>
   13d8c:	movw	r0, #45292	; 0xb0ec
   13d90:	movt	r0, #2
   13d94:	movw	lr, #45300	; 0xb0f4
   13d98:	movt	lr, #2
   13d9c:	str	lr, [r0]
   13da0:	movw	r0, #45296	; 0xb0f0
   13da4:	movt	r0, #2
   13da8:	movw	r1, #1
   13dac:	str	r1, [r0]
   13db0:	mov	sp, fp
   13db4:	pop	{fp, pc}
   13db8:	push	{fp, lr}
   13dbc:	mov	fp, sp
   13dc0:	sub	sp, sp, #8
   13dc4:	str	r0, [sp, #4]
   13dc8:	str	r1, [sp]
   13dcc:	ldr	r0, [sp, #4]
   13dd0:	ldr	r1, [sp]
   13dd4:	mvn	r2, #0
   13dd8:	movw	r3, #45404	; 0xb15c
   13ddc:	movt	r3, #2
   13de0:	bl	13dec <__assert_fail@plt+0x2df8>
   13de4:	mov	sp, fp
   13de8:	pop	{fp, pc}
   13dec:	push	{r4, r5, r6, sl, fp, lr}
   13df0:	add	fp, sp, #16
   13df4:	sub	sp, sp, #88	; 0x58
   13df8:	str	r0, [fp, #-20]	; 0xffffffec
   13dfc:	str	r1, [fp, #-24]	; 0xffffffe8
   13e00:	str	r2, [fp, #-28]	; 0xffffffe4
   13e04:	str	r3, [fp, #-32]	; 0xffffffe0
   13e08:	bl	10f28 <__errno_location@plt>
   13e0c:	ldr	r1, [pc, #676]	; 140b8 <__assert_fail@plt+0x30c4>
   13e10:	ldr	r0, [r0]
   13e14:	str	r0, [fp, #-36]	; 0xffffffdc
   13e18:	movw	r0, #45292	; 0xb0ec
   13e1c:	movt	r0, #2
   13e20:	ldr	r0, [r0]
   13e24:	str	r0, [fp, #-40]	; 0xffffffd8
   13e28:	str	r1, [fp, #-44]	; 0xffffffd4
   13e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e30:	movw	r1, #0
   13e34:	cmp	r1, r0
   13e38:	bgt	13e4c <__assert_fail@plt+0x2e58>
   13e3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e44:	cmp	r0, r1
   13e48:	blt	13e50 <__assert_fail@plt+0x2e5c>
   13e4c:	bl	10fdc <abort@plt>
   13e50:	movw	r0, #45296	; 0xb0f0
   13e54:	movt	r0, #2
   13e58:	ldr	r0, [r0]
   13e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e60:	cmp	r0, r1
   13e64:	bgt	13f5c <__assert_fail@plt+0x2f68>
   13e68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e6c:	movw	r1, #45300	; 0xb0f4
   13e70:	movt	r1, #2
   13e74:	cmp	r0, r1
   13e78:	movw	r0, #0
   13e7c:	moveq	r0, #1
   13e80:	and	r0, r0, #1
   13e84:	strb	r0, [fp, #-45]	; 0xffffffd3
   13e88:	movw	r0, #45296	; 0xb0f0
   13e8c:	movt	r0, #2
   13e90:	ldr	r0, [r0]
   13e94:	str	r0, [sp, #52]	; 0x34
   13e98:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13e9c:	tst	r0, #1
   13ea0:	beq	13eb0 <__assert_fail@plt+0x2ebc>
   13ea4:	movw	r0, #0
   13ea8:	str	r0, [sp, #32]
   13eac:	b	13eb8 <__assert_fail@plt+0x2ec4>
   13eb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13eb4:	str	r0, [sp, #32]
   13eb8:	ldr	r0, [sp, #32]
   13ebc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ec0:	movw	r2, #45296	; 0xb0f0
   13ec4:	movt	r2, #2
   13ec8:	ldr	r2, [r2]
   13ecc:	sub	r1, r1, r2
   13ed0:	add	r2, r1, #1
   13ed4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13ed8:	add	r1, sp, #52	; 0x34
   13edc:	movw	ip, #8
   13ee0:	str	ip, [sp]
   13ee4:	bl	152b0 <__assert_fail@plt+0x42bc>
   13ee8:	str	r0, [fp, #-40]	; 0xffffffd8
   13eec:	movw	r1, #45292	; 0xb0ec
   13ef0:	movt	r1, #2
   13ef4:	str	r0, [r1]
   13ef8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13efc:	tst	r0, #1
   13f00:	beq	13f20 <__assert_fail@plt+0x2f2c>
   13f04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f08:	movw	r1, #45300	; 0xb0f4
   13f0c:	movt	r1, #2
   13f10:	ldr	r2, [r1]
   13f14:	str	r2, [r0]
   13f18:	ldr	r1, [r1, #4]
   13f1c:	str	r1, [r0, #4]
   13f20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f24:	movw	r1, #45296	; 0xb0f0
   13f28:	movt	r1, #2
   13f2c:	ldr	r1, [r1]
   13f30:	add	r0, r0, r1, lsl #3
   13f34:	ldr	r2, [sp, #52]	; 0x34
   13f38:	sub	r1, r2, r1
   13f3c:	lsl	r2, r1, #3
   13f40:	movw	r1, #0
   13f44:	and	r1, r1, #255	; 0xff
   13f48:	bl	10f40 <memset@plt>
   13f4c:	ldr	r0, [sp, #52]	; 0x34
   13f50:	movw	r1, #45296	; 0xb0f0
   13f54:	movt	r1, #2
   13f58:	str	r0, [r1]
   13f5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f60:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f64:	ldr	r0, [r0, r1, lsl #3]
   13f68:	str	r0, [sp, #48]	; 0x30
   13f6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f70:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f74:	add	r0, r0, r1, lsl #3
   13f78:	ldr	r0, [r0, #4]
   13f7c:	str	r0, [sp, #44]	; 0x2c
   13f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f84:	ldr	r0, [r0, #4]
   13f88:	orr	r0, r0, #1
   13f8c:	str	r0, [sp, #40]	; 0x28
   13f90:	ldr	r0, [sp, #44]	; 0x2c
   13f94:	ldr	r1, [sp, #48]	; 0x30
   13f98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fa0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13fa4:	ldr	ip, [ip]
   13fa8:	ldr	lr, [sp, #40]	; 0x28
   13fac:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13fb0:	add	r4, r4, #8
   13fb4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13fb8:	ldr	r5, [r5, #40]	; 0x28
   13fbc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13fc0:	ldr	r6, [r6, #44]	; 0x2c
   13fc4:	str	ip, [sp]
   13fc8:	str	lr, [sp, #4]
   13fcc:	str	r4, [sp, #8]
   13fd0:	str	r5, [sp, #12]
   13fd4:	str	r6, [sp, #16]
   13fd8:	bl	123e4 <__assert_fail@plt+0x13f0>
   13fdc:	str	r0, [sp, #36]	; 0x24
   13fe0:	ldr	r0, [sp, #48]	; 0x30
   13fe4:	ldr	r1, [sp, #36]	; 0x24
   13fe8:	cmp	r0, r1
   13fec:	bhi	14098 <__assert_fail@plt+0x30a4>
   13ff0:	ldr	r0, [sp, #36]	; 0x24
   13ff4:	add	r0, r0, #1
   13ff8:	str	r0, [sp, #48]	; 0x30
   13ffc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14000:	ldr	r2, [fp, #-20]	; 0xffffffec
   14004:	add	r1, r1, r2, lsl #3
   14008:	str	r0, [r1]
   1400c:	ldr	r0, [sp, #44]	; 0x2c
   14010:	movw	r1, #45452	; 0xb18c
   14014:	movt	r1, #2
   14018:	cmp	r0, r1
   1401c:	beq	14028 <__assert_fail@plt+0x3034>
   14020:	ldr	r0, [sp, #44]	; 0x2c
   14024:	bl	182fc <__assert_fail@plt+0x7308>
   14028:	ldr	r0, [sp, #48]	; 0x30
   1402c:	bl	15074 <__assert_fail@plt+0x4080>
   14030:	mov	lr, r0
   14034:	str	r0, [sp, #44]	; 0x2c
   14038:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1403c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14040:	add	r0, r0, r1, lsl #3
   14044:	str	lr, [r0, #4]
   14048:	ldr	r0, [sp, #44]	; 0x2c
   1404c:	ldr	r1, [sp, #48]	; 0x30
   14050:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14054:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14058:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1405c:	ldr	lr, [lr]
   14060:	ldr	ip, [sp, #40]	; 0x28
   14064:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14068:	add	r4, r4, #8
   1406c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14070:	ldr	r5, [r5, #40]	; 0x28
   14074:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14078:	ldr	r6, [r6, #44]	; 0x2c
   1407c:	str	lr, [sp]
   14080:	str	ip, [sp, #4]
   14084:	str	r4, [sp, #8]
   14088:	str	r5, [sp, #12]
   1408c:	str	r6, [sp, #16]
   14090:	bl	123e4 <__assert_fail@plt+0x13f0>
   14094:	str	r0, [sp, #28]
   14098:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1409c:	str	r0, [sp, #24]
   140a0:	bl	10f28 <__errno_location@plt>
   140a4:	ldr	lr, [sp, #24]
   140a8:	str	lr, [r0]
   140ac:	ldr	r0, [sp, #44]	; 0x2c
   140b0:	sub	sp, fp, #16
   140b4:	pop	{r4, r5, r6, sl, fp, pc}
   140b8:	svcvc	0x00ffffff
   140bc:	push	{fp, lr}
   140c0:	mov	fp, sp
   140c4:	sub	sp, sp, #16
   140c8:	str	r0, [fp, #-4]
   140cc:	str	r1, [sp, #8]
   140d0:	str	r2, [sp, #4]
   140d4:	ldr	r0, [fp, #-4]
   140d8:	ldr	r1, [sp, #8]
   140dc:	ldr	r2, [sp, #4]
   140e0:	movw	r3, #45404	; 0xb15c
   140e4:	movt	r3, #2
   140e8:	bl	13dec <__assert_fail@plt+0x2df8>
   140ec:	mov	sp, fp
   140f0:	pop	{fp, pc}
   140f4:	push	{fp, lr}
   140f8:	mov	fp, sp
   140fc:	sub	sp, sp, #8
   14100:	str	r0, [sp, #4]
   14104:	ldr	r1, [sp, #4]
   14108:	movw	r0, #0
   1410c:	bl	13db8 <__assert_fail@plt+0x2dc4>
   14110:	mov	sp, fp
   14114:	pop	{fp, pc}
   14118:	push	{fp, lr}
   1411c:	mov	fp, sp
   14120:	sub	sp, sp, #8
   14124:	str	r0, [sp, #4]
   14128:	str	r1, [sp]
   1412c:	ldr	r1, [sp, #4]
   14130:	ldr	r2, [sp]
   14134:	movw	r0, #0
   14138:	bl	140bc <__assert_fail@plt+0x30c8>
   1413c:	mov	sp, fp
   14140:	pop	{fp, pc}
   14144:	push	{fp, lr}
   14148:	mov	fp, sp
   1414c:	sub	sp, sp, #64	; 0x40
   14150:	str	r0, [fp, #-4]
   14154:	str	r1, [fp, #-8]
   14158:	str	r2, [fp, #-12]
   1415c:	ldr	r1, [fp, #-8]
   14160:	add	r0, sp, #4
   14164:	bl	14184 <__assert_fail@plt+0x3190>
   14168:	ldr	r0, [fp, #-4]
   1416c:	ldr	r1, [fp, #-12]
   14170:	mvn	r2, #0
   14174:	add	r3, sp, #4
   14178:	bl	13dec <__assert_fail@plt+0x2df8>
   1417c:	mov	sp, fp
   14180:	pop	{fp, pc}
   14184:	push	{fp, lr}
   14188:	mov	fp, sp
   1418c:	sub	sp, sp, #8
   14190:	str	r1, [sp, #4]
   14194:	mov	r1, r0
   14198:	str	r0, [sp]
   1419c:	mov	r0, r1
   141a0:	movw	r1, #0
   141a4:	and	r1, r1, #255	; 0xff
   141a8:	movw	r2, #48	; 0x30
   141ac:	bl	10f40 <memset@plt>
   141b0:	ldr	r0, [sp, #4]
   141b4:	cmp	r0, #10
   141b8:	bne	141c0 <__assert_fail@plt+0x31cc>
   141bc:	bl	10fdc <abort@plt>
   141c0:	ldr	r0, [sp, #4]
   141c4:	ldr	r1, [sp]
   141c8:	str	r0, [r1]
   141cc:	mov	sp, fp
   141d0:	pop	{fp, pc}
   141d4:	push	{fp, lr}
   141d8:	mov	fp, sp
   141dc:	sub	sp, sp, #64	; 0x40
   141e0:	str	r0, [fp, #-4]
   141e4:	str	r1, [fp, #-8]
   141e8:	str	r2, [fp, #-12]
   141ec:	str	r3, [fp, #-16]
   141f0:	ldr	r1, [fp, #-8]
   141f4:	mov	r0, sp
   141f8:	bl	14184 <__assert_fail@plt+0x3190>
   141fc:	ldr	r0, [fp, #-4]
   14200:	ldr	r1, [fp, #-12]
   14204:	ldr	r2, [fp, #-16]
   14208:	mov	r3, sp
   1420c:	bl	13dec <__assert_fail@plt+0x2df8>
   14210:	mov	sp, fp
   14214:	pop	{fp, pc}
   14218:	push	{fp, lr}
   1421c:	mov	fp, sp
   14220:	sub	sp, sp, #8
   14224:	str	r0, [sp, #4]
   14228:	str	r1, [sp]
   1422c:	ldr	r1, [sp, #4]
   14230:	ldr	r2, [sp]
   14234:	movw	r0, #0
   14238:	bl	14144 <__assert_fail@plt+0x3150>
   1423c:	mov	sp, fp
   14240:	pop	{fp, pc}
   14244:	push	{fp, lr}
   14248:	mov	fp, sp
   1424c:	sub	sp, sp, #16
   14250:	str	r0, [fp, #-4]
   14254:	str	r1, [sp, #8]
   14258:	str	r2, [sp, #4]
   1425c:	ldr	r1, [fp, #-4]
   14260:	ldr	r2, [sp, #8]
   14264:	ldr	r3, [sp, #4]
   14268:	movw	r0, #0
   1426c:	bl	141d4 <__assert_fail@plt+0x31e0>
   14270:	mov	sp, fp
   14274:	pop	{fp, pc}
   14278:	push	{fp, lr}
   1427c:	mov	fp, sp
   14280:	sub	sp, sp, #72	; 0x48
   14284:	movw	r3, #45404	; 0xb15c
   14288:	movt	r3, #2
   1428c:	str	r0, [fp, #-4]
   14290:	str	r1, [fp, #-8]
   14294:	strb	r2, [fp, #-9]
   14298:	add	r0, sp, #12
   1429c:	mov	r1, r0
   142a0:	str	r0, [sp, #8]
   142a4:	mov	r0, r1
   142a8:	mov	r1, r3
   142ac:	movw	r2, #48	; 0x30
   142b0:	bl	10e08 <memcpy@plt>
   142b4:	ldr	r0, [sp, #8]
   142b8:	ldrb	r1, [fp, #-9]
   142bc:	movw	r2, #1
   142c0:	bl	12188 <__assert_fail@plt+0x1194>
   142c4:	ldr	r1, [fp, #-4]
   142c8:	ldr	r2, [fp, #-8]
   142cc:	movw	r3, #0
   142d0:	str	r0, [sp, #4]
   142d4:	mov	r0, r3
   142d8:	add	r3, sp, #12
   142dc:	bl	13dec <__assert_fail@plt+0x2df8>
   142e0:	mov	sp, fp
   142e4:	pop	{fp, pc}
   142e8:	push	{fp, lr}
   142ec:	mov	fp, sp
   142f0:	sub	sp, sp, #8
   142f4:	str	r0, [sp, #4]
   142f8:	strb	r1, [sp, #3]
   142fc:	ldr	r0, [sp, #4]
   14300:	mvn	r1, #0
   14304:	ldrb	r2, [sp, #3]
   14308:	bl	14278 <__assert_fail@plt+0x3284>
   1430c:	mov	sp, fp
   14310:	pop	{fp, pc}
   14314:	push	{fp, lr}
   14318:	mov	fp, sp
   1431c:	sub	sp, sp, #8
   14320:	str	r0, [sp, #4]
   14324:	ldr	r0, [sp, #4]
   14328:	movw	r1, #58	; 0x3a
   1432c:	and	r1, r1, #255	; 0xff
   14330:	bl	142e8 <__assert_fail@plt+0x32f4>
   14334:	mov	sp, fp
   14338:	pop	{fp, pc}
   1433c:	push	{fp, lr}
   14340:	mov	fp, sp
   14344:	sub	sp, sp, #8
   14348:	str	r0, [sp, #4]
   1434c:	str	r1, [sp]
   14350:	ldr	r0, [sp, #4]
   14354:	ldr	r1, [sp]
   14358:	movw	r2, #58	; 0x3a
   1435c:	and	r2, r2, #255	; 0xff
   14360:	bl	14278 <__assert_fail@plt+0x3284>
   14364:	mov	sp, fp
   14368:	pop	{fp, pc}
   1436c:	push	{fp, lr}
   14370:	mov	fp, sp
   14374:	sub	sp, sp, #120	; 0x78
   14378:	str	r0, [fp, #-4]
   1437c:	str	r1, [fp, #-8]
   14380:	str	r2, [fp, #-12]
   14384:	ldr	r1, [fp, #-8]
   14388:	add	r0, sp, #12
   1438c:	bl	14184 <__assert_fail@plt+0x3190>
   14390:	add	r0, sp, #60	; 0x3c
   14394:	mov	r1, r0
   14398:	add	r2, sp, #12
   1439c:	str	r0, [sp, #8]
   143a0:	mov	r0, r1
   143a4:	mov	r1, r2
   143a8:	movw	r2, #48	; 0x30
   143ac:	bl	10e08 <memcpy@plt>
   143b0:	ldr	r0, [sp, #8]
   143b4:	movw	r1, #58	; 0x3a
   143b8:	and	r1, r1, #255	; 0xff
   143bc:	movw	r2, #1
   143c0:	bl	12188 <__assert_fail@plt+0x1194>
   143c4:	ldr	r1, [fp, #-4]
   143c8:	ldr	r2, [fp, #-12]
   143cc:	str	r0, [sp, #4]
   143d0:	mov	r0, r1
   143d4:	mov	r1, r2
   143d8:	mvn	r2, #0
   143dc:	add	r3, sp, #60	; 0x3c
   143e0:	bl	13dec <__assert_fail@plt+0x2df8>
   143e4:	mov	sp, fp
   143e8:	pop	{fp, pc}
   143ec:	push	{fp, lr}
   143f0:	mov	fp, sp
   143f4:	sub	sp, sp, #24
   143f8:	str	r0, [fp, #-4]
   143fc:	str	r1, [fp, #-8]
   14400:	str	r2, [sp, #12]
   14404:	str	r3, [sp, #8]
   14408:	ldr	r0, [fp, #-4]
   1440c:	ldr	r1, [fp, #-8]
   14410:	ldr	r2, [sp, #12]
   14414:	ldr	r3, [sp, #8]
   14418:	mvn	ip, #0
   1441c:	str	ip, [sp]
   14420:	bl	1442c <__assert_fail@plt+0x3438>
   14424:	mov	sp, fp
   14428:	pop	{fp, pc}
   1442c:	push	{fp, lr}
   14430:	mov	fp, sp
   14434:	sub	sp, sp, #72	; 0x48
   14438:	ldr	ip, [fp, #8]
   1443c:	movw	lr, #45404	; 0xb15c
   14440:	movt	lr, #2
   14444:	str	r0, [fp, #-4]
   14448:	str	r1, [fp, #-8]
   1444c:	str	r2, [fp, #-12]
   14450:	str	r3, [fp, #-16]
   14454:	add	r0, sp, #8
   14458:	mov	r1, r0
   1445c:	str	r0, [sp, #4]
   14460:	mov	r0, r1
   14464:	mov	r1, lr
   14468:	movw	r2, #48	; 0x30
   1446c:	str	ip, [sp]
   14470:	bl	10e08 <memcpy@plt>
   14474:	ldr	r1, [fp, #-8]
   14478:	ldr	r2, [fp, #-12]
   1447c:	ldr	r0, [sp, #4]
   14480:	bl	12288 <__assert_fail@plt+0x1294>
   14484:	ldr	r0, [fp, #-4]
   14488:	ldr	r1, [fp, #-16]
   1448c:	ldr	r2, [fp, #8]
   14490:	add	r3, sp, #8
   14494:	bl	13dec <__assert_fail@plt+0x2df8>
   14498:	mov	sp, fp
   1449c:	pop	{fp, pc}
   144a0:	push	{fp, lr}
   144a4:	mov	fp, sp
   144a8:	sub	sp, sp, #16
   144ac:	str	r0, [fp, #-4]
   144b0:	str	r1, [sp, #8]
   144b4:	str	r2, [sp, #4]
   144b8:	ldr	r1, [fp, #-4]
   144bc:	ldr	r2, [sp, #8]
   144c0:	ldr	r3, [sp, #4]
   144c4:	movw	r0, #0
   144c8:	bl	143ec <__assert_fail@plt+0x33f8>
   144cc:	mov	sp, fp
   144d0:	pop	{fp, pc}
   144d4:	push	{fp, lr}
   144d8:	mov	fp, sp
   144dc:	sub	sp, sp, #24
   144e0:	str	r0, [fp, #-4]
   144e4:	str	r1, [fp, #-8]
   144e8:	str	r2, [sp, #12]
   144ec:	str	r3, [sp, #8]
   144f0:	ldr	r1, [fp, #-4]
   144f4:	ldr	r2, [fp, #-8]
   144f8:	ldr	r3, [sp, #12]
   144fc:	ldr	r0, [sp, #8]
   14500:	movw	ip, #0
   14504:	str	r0, [sp, #4]
   14508:	mov	r0, ip
   1450c:	ldr	ip, [sp, #4]
   14510:	str	ip, [sp]
   14514:	bl	1442c <__assert_fail@plt+0x3438>
   14518:	mov	sp, fp
   1451c:	pop	{fp, pc}
   14520:	push	{fp, lr}
   14524:	mov	fp, sp
   14528:	sub	sp, sp, #16
   1452c:	str	r0, [fp, #-4]
   14530:	str	r1, [sp, #8]
   14534:	str	r2, [sp, #4]
   14538:	ldr	r0, [fp, #-4]
   1453c:	ldr	r1, [sp, #8]
   14540:	ldr	r2, [sp, #4]
   14544:	movw	r3, #45308	; 0xb0fc
   14548:	movt	r3, #2
   1454c:	bl	13dec <__assert_fail@plt+0x2df8>
   14550:	mov	sp, fp
   14554:	pop	{fp, pc}
   14558:	push	{fp, lr}
   1455c:	mov	fp, sp
   14560:	sub	sp, sp, #8
   14564:	str	r0, [sp, #4]
   14568:	str	r1, [sp]
   1456c:	ldr	r1, [sp, #4]
   14570:	ldr	r2, [sp]
   14574:	movw	r0, #0
   14578:	bl	14520 <__assert_fail@plt+0x352c>
   1457c:	mov	sp, fp
   14580:	pop	{fp, pc}
   14584:	push	{fp, lr}
   14588:	mov	fp, sp
   1458c:	sub	sp, sp, #8
   14590:	str	r0, [sp, #4]
   14594:	str	r1, [sp]
   14598:	ldr	r0, [sp, #4]
   1459c:	ldr	r1, [sp]
   145a0:	mvn	r2, #0
   145a4:	bl	14520 <__assert_fail@plt+0x352c>
   145a8:	mov	sp, fp
   145ac:	pop	{fp, pc}
   145b0:	push	{fp, lr}
   145b4:	mov	fp, sp
   145b8:	sub	sp, sp, #8
   145bc:	str	r0, [sp, #4]
   145c0:	ldr	r1, [sp, #4]
   145c4:	movw	r0, #0
   145c8:	bl	14584 <__assert_fail@plt+0x3590>
   145cc:	mov	sp, fp
   145d0:	pop	{fp, pc}
   145d4:	push	{fp, lr}
   145d8:	mov	fp, sp
   145dc:	sub	sp, sp, #24
   145e0:	str	r0, [fp, #-8]
   145e4:	str	r1, [sp, #12]
   145e8:	ldr	r0, [fp, #-8]
   145ec:	bl	10f04 <gettext@plt>
   145f0:	str	r0, [sp, #8]
   145f4:	ldr	r0, [sp, #8]
   145f8:	ldr	r1, [fp, #-8]
   145fc:	cmp	r0, r1
   14600:	beq	14610 <__assert_fail@plt+0x361c>
   14604:	ldr	r0, [sp, #8]
   14608:	str	r0, [fp, #-4]
   1460c:	b	146dc <__assert_fail@plt+0x36e8>
   14610:	bl	1861c <__assert_fail@plt+0x7628>
   14614:	str	r0, [sp, #4]
   14618:	ldr	r0, [sp, #4]
   1461c:	movw	r1, #43866	; 0xab5a
   14620:	movt	r1, #1
   14624:	bl	17fd8 <__assert_fail@plt+0x6fe4>
   14628:	cmp	r0, #0
   1462c:	bne	14664 <__assert_fail@plt+0x3670>
   14630:	ldr	r0, [fp, #-8]
   14634:	ldrb	r0, [r0]
   14638:	cmp	r0, #96	; 0x60
   1463c:	movw	r0, #0
   14640:	moveq	r0, #1
   14644:	tst	r0, #1
   14648:	movw	r0, #43876	; 0xab64
   1464c:	movt	r0, #1
   14650:	movw	r1, #43872	; 0xab60
   14654:	movt	r1, #1
   14658:	movne	r0, r1
   1465c:	str	r0, [fp, #-4]
   14660:	b	146dc <__assert_fail@plt+0x36e8>
   14664:	ldr	r0, [sp, #4]
   14668:	movw	r1, #43880	; 0xab68
   1466c:	movt	r1, #1
   14670:	bl	17fd8 <__assert_fail@plt+0x6fe4>
   14674:	cmp	r0, #0
   14678:	bne	146b0 <__assert_fail@plt+0x36bc>
   1467c:	ldr	r0, [fp, #-8]
   14680:	ldrb	r0, [r0]
   14684:	cmp	r0, #96	; 0x60
   14688:	movw	r0, #0
   1468c:	moveq	r0, #1
   14690:	tst	r0, #1
   14694:	movw	r0, #43892	; 0xab74
   14698:	movt	r0, #1
   1469c:	movw	r1, #43888	; 0xab70
   146a0:	movt	r1, #1
   146a4:	movne	r0, r1
   146a8:	str	r0, [fp, #-4]
   146ac:	b	146dc <__assert_fail@plt+0x36e8>
   146b0:	ldr	r0, [sp, #12]
   146b4:	cmp	r0, #9
   146b8:	movw	r0, #0
   146bc:	moveq	r0, #1
   146c0:	tst	r0, #1
   146c4:	movw	r0, #43864	; 0xab58
   146c8:	movt	r0, #1
   146cc:	movw	r1, #43451	; 0xa9bb
   146d0:	movt	r1, #1
   146d4:	movne	r0, r1
   146d8:	str	r0, [fp, #-4]
   146dc:	ldr	r0, [fp, #-4]
   146e0:	mov	sp, fp
   146e4:	pop	{fp, pc}
   146e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146ec:	add	fp, sp, #28
   146f0:	sub	sp, sp, #260	; 0x104
   146f4:	ldr	ip, [fp, #12]
   146f8:	ldr	lr, [fp, #8]
   146fc:	str	r0, [fp, #-32]	; 0xffffffe0
   14700:	str	r1, [fp, #-36]	; 0xffffffdc
   14704:	str	r2, [fp, #-40]	; 0xffffffd8
   14708:	str	r3, [fp, #-44]	; 0xffffffd4
   1470c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14710:	movw	r1, #0
   14714:	cmp	r0, r1
   14718:	str	lr, [fp, #-48]	; 0xffffffd0
   1471c:	str	ip, [fp, #-52]	; 0xffffffcc
   14720:	beq	14758 <__assert_fail@plt+0x3764>
   14724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14728:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1472c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14730:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14734:	movw	ip, #43980	; 0xabcc
   14738:	movt	ip, #1
   1473c:	str	r1, [fp, #-56]	; 0xffffffc8
   14740:	mov	r1, ip
   14744:	ldr	ip, [fp, #-56]	; 0xffffffc8
   14748:	str	ip, [sp]
   1474c:	bl	10f1c <fprintf@plt>
   14750:	str	r0, [fp, #-60]	; 0xffffffc4
   14754:	b	14774 <__assert_fail@plt+0x3780>
   14758:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1475c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14760:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14764:	movw	r1, #43992	; 0xabd8
   14768:	movt	r1, #1
   1476c:	bl	10f1c <fprintf@plt>
   14770:	str	r0, [fp, #-64]	; 0xffffffc0
   14774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14778:	movw	r1, #43999	; 0xabdf
   1477c:	movt	r1, #1
   14780:	str	r0, [fp, #-68]	; 0xffffffbc
   14784:	mov	r0, r1
   14788:	bl	10f04 <gettext@plt>
   1478c:	movw	r1, #44717	; 0xaead
   14790:	movt	r1, #1
   14794:	movw	r3, #2022	; 0x7e6
   14798:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1479c:	str	r0, [fp, #-72]	; 0xffffffb8
   147a0:	mov	r0, lr
   147a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   147a8:	bl	10f1c <fprintf@plt>
   147ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   147b0:	movw	r2, #42636	; 0xa68c
   147b4:	movt	r2, #1
   147b8:	str	r0, [fp, #-76]	; 0xffffffb4
   147bc:	mov	r0, r2
   147c0:	str	r2, [fp, #-80]	; 0xffffffb0
   147c4:	bl	10da8 <fputs_unlocked@plt>
   147c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   147cc:	movw	r2, #44003	; 0xabe3
   147d0:	movt	r2, #1
   147d4:	str	r0, [fp, #-84]	; 0xffffffac
   147d8:	mov	r0, r2
   147dc:	str	r1, [fp, #-88]	; 0xffffffa8
   147e0:	bl	10f04 <gettext@plt>
   147e4:	movw	r2, #44174	; 0xac8e
   147e8:	movt	r2, #1
   147ec:	ldr	r1, [fp, #-88]	; 0xffffffa8
   147f0:	str	r0, [fp, #-92]	; 0xffffffa4
   147f4:	mov	r0, r1
   147f8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   147fc:	bl	10f1c <fprintf@plt>
   14800:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14804:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14808:	str	r0, [fp, #-96]	; 0xffffffa0
   1480c:	mov	r0, r2
   14810:	bl	10da8 <fputs_unlocked@plt>
   14814:	ldr	r1, [fp, #12]
   14818:	cmp	r1, #9
   1481c:	str	r0, [fp, #-100]	; 0xffffff9c
   14820:	str	r1, [fp, #-104]	; 0xffffff98
   14824:	bhi	14c64 <__assert_fail@plt+0x3c70>
   14828:	add	r0, pc, #8
   1482c:	ldr	r1, [fp, #-104]	; 0xffffff98
   14830:	ldr	r0, [r0, r1, lsl #2]
   14834:	mov	pc, r0
   14838:	andeq	r4, r1, r0, ror #16
   1483c:	andeq	r4, r1, r4, ror #16
   14840:	andeq	r4, r1, r0, lsr #17
   14844:	andeq	r4, r1, r4, ror #17
   14848:	andeq	r4, r1, r0, asr #18
   1484c:	andeq	r4, r1, r8, lsr #19
   14850:	andeq	r4, r1, ip, lsl sl
   14854:	muleq	r1, ip, sl
   14858:	andeq	r4, r1, r8, lsr #22
   1485c:	andeq	r4, r1, r0, asr #23
   14860:	b	14d04 <__assert_fail@plt+0x3d10>
   14864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14868:	movw	r1, #44208	; 0xacb0
   1486c:	movt	r1, #1
   14870:	str	r0, [fp, #-108]	; 0xffffff94
   14874:	mov	r0, r1
   14878:	bl	10f04 <gettext@plt>
   1487c:	ldr	r1, [fp, #8]
   14880:	ldr	r2, [r1]
   14884:	ldr	r1, [fp, #-108]	; 0xffffff94
   14888:	str	r0, [fp, #-112]	; 0xffffff90
   1488c:	mov	r0, r1
   14890:	ldr	r1, [fp, #-112]	; 0xffffff90
   14894:	bl	10f1c <fprintf@plt>
   14898:	str	r0, [fp, #-116]	; 0xffffff8c
   1489c:	b	14d04 <__assert_fail@plt+0x3d10>
   148a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148a4:	movw	r1, #44224	; 0xacc0
   148a8:	movt	r1, #1
   148ac:	str	r0, [fp, #-120]	; 0xffffff88
   148b0:	mov	r0, r1
   148b4:	bl	10f04 <gettext@plt>
   148b8:	ldr	r1, [fp, #8]
   148bc:	ldr	r2, [r1]
   148c0:	ldr	r1, [fp, #8]
   148c4:	ldr	r3, [r1, #4]
   148c8:	ldr	r1, [fp, #-120]	; 0xffffff88
   148cc:	str	r0, [fp, #-124]	; 0xffffff84
   148d0:	mov	r0, r1
   148d4:	ldr	r1, [fp, #-124]	; 0xffffff84
   148d8:	bl	10f1c <fprintf@plt>
   148dc:	str	r0, [fp, #-128]	; 0xffffff80
   148e0:	b	14d04 <__assert_fail@plt+0x3d10>
   148e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148e8:	movw	r1, #44247	; 0xacd7
   148ec:	movt	r1, #1
   148f0:	str	r0, [fp, #-132]	; 0xffffff7c
   148f4:	mov	r0, r1
   148f8:	bl	10f04 <gettext@plt>
   148fc:	ldr	r1, [fp, #8]
   14900:	ldr	r2, [r1]
   14904:	ldr	r1, [fp, #8]
   14908:	ldr	r3, [r1, #4]
   1490c:	ldr	r1, [fp, #8]
   14910:	ldr	r1, [r1, #8]
   14914:	ldr	lr, [fp, #-132]	; 0xffffff7c
   14918:	str	r0, [fp, #-136]	; 0xffffff78
   1491c:	mov	r0, lr
   14920:	ldr	ip, [fp, #-136]	; 0xffffff78
   14924:	str	r1, [fp, #-140]	; 0xffffff74
   14928:	mov	r1, ip
   1492c:	ldr	r4, [fp, #-140]	; 0xffffff74
   14930:	str	r4, [sp]
   14934:	bl	10f1c <fprintf@plt>
   14938:	str	r0, [sp, #144]	; 0x90
   1493c:	b	14d04 <__assert_fail@plt+0x3d10>
   14940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14944:	movw	r1, #44275	; 0xacf3
   14948:	movt	r1, #1
   1494c:	str	r0, [sp, #140]	; 0x8c
   14950:	mov	r0, r1
   14954:	bl	10f04 <gettext@plt>
   14958:	ldr	r1, [fp, #8]
   1495c:	ldr	r2, [r1]
   14960:	ldr	r1, [fp, #8]
   14964:	ldr	r3, [r1, #4]
   14968:	ldr	r1, [fp, #8]
   1496c:	ldr	r1, [r1, #8]
   14970:	ldr	lr, [fp, #8]
   14974:	ldr	lr, [lr, #12]
   14978:	ldr	ip, [sp, #140]	; 0x8c
   1497c:	str	r0, [sp, #136]	; 0x88
   14980:	mov	r0, ip
   14984:	ldr	r4, [sp, #136]	; 0x88
   14988:	str	r1, [sp, #132]	; 0x84
   1498c:	mov	r1, r4
   14990:	ldr	r5, [sp, #132]	; 0x84
   14994:	str	r5, [sp]
   14998:	str	lr, [sp, #4]
   1499c:	bl	10f1c <fprintf@plt>
   149a0:	str	r0, [sp, #128]	; 0x80
   149a4:	b	14d04 <__assert_fail@plt+0x3d10>
   149a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149ac:	movw	r1, #44307	; 0xad13
   149b0:	movt	r1, #1
   149b4:	str	r0, [sp, #124]	; 0x7c
   149b8:	mov	r0, r1
   149bc:	bl	10f04 <gettext@plt>
   149c0:	ldr	r1, [fp, #8]
   149c4:	ldr	r2, [r1]
   149c8:	ldr	r1, [fp, #8]
   149cc:	ldr	r3, [r1, #4]
   149d0:	ldr	r1, [fp, #8]
   149d4:	ldr	r1, [r1, #8]
   149d8:	ldr	lr, [fp, #8]
   149dc:	ldr	lr, [lr, #12]
   149e0:	ldr	ip, [fp, #8]
   149e4:	ldr	ip, [ip, #16]
   149e8:	ldr	r4, [sp, #124]	; 0x7c
   149ec:	str	r0, [sp, #120]	; 0x78
   149f0:	mov	r0, r4
   149f4:	ldr	r5, [sp, #120]	; 0x78
   149f8:	str	r1, [sp, #116]	; 0x74
   149fc:	mov	r1, r5
   14a00:	ldr	r6, [sp, #116]	; 0x74
   14a04:	str	r6, [sp]
   14a08:	str	lr, [sp, #4]
   14a0c:	str	ip, [sp, #8]
   14a10:	bl	10f1c <fprintf@plt>
   14a14:	str	r0, [sp, #112]	; 0x70
   14a18:	b	14d04 <__assert_fail@plt+0x3d10>
   14a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a20:	movw	r1, #44343	; 0xad37
   14a24:	movt	r1, #1
   14a28:	str	r0, [sp, #108]	; 0x6c
   14a2c:	mov	r0, r1
   14a30:	bl	10f04 <gettext@plt>
   14a34:	ldr	r1, [fp, #8]
   14a38:	ldr	r2, [r1]
   14a3c:	ldr	r1, [fp, #8]
   14a40:	ldr	r3, [r1, #4]
   14a44:	ldr	r1, [fp, #8]
   14a48:	ldr	r1, [r1, #8]
   14a4c:	ldr	lr, [fp, #8]
   14a50:	ldr	lr, [lr, #12]
   14a54:	ldr	ip, [fp, #8]
   14a58:	ldr	ip, [ip, #16]
   14a5c:	ldr	r4, [fp, #8]
   14a60:	ldr	r4, [r4, #20]
   14a64:	ldr	r5, [sp, #108]	; 0x6c
   14a68:	str	r0, [sp, #104]	; 0x68
   14a6c:	mov	r0, r5
   14a70:	ldr	r6, [sp, #104]	; 0x68
   14a74:	str	r1, [sp, #100]	; 0x64
   14a78:	mov	r1, r6
   14a7c:	ldr	r7, [sp, #100]	; 0x64
   14a80:	str	r7, [sp]
   14a84:	str	lr, [sp, #4]
   14a88:	str	ip, [sp, #8]
   14a8c:	str	r4, [sp, #12]
   14a90:	bl	10f1c <fprintf@plt>
   14a94:	str	r0, [sp, #96]	; 0x60
   14a98:	b	14d04 <__assert_fail@plt+0x3d10>
   14a9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14aa0:	movw	r1, #44383	; 0xad5f
   14aa4:	movt	r1, #1
   14aa8:	str	r0, [sp, #92]	; 0x5c
   14aac:	mov	r0, r1
   14ab0:	bl	10f04 <gettext@plt>
   14ab4:	ldr	r1, [fp, #8]
   14ab8:	ldr	r2, [r1]
   14abc:	ldr	r1, [fp, #8]
   14ac0:	ldr	r3, [r1, #4]
   14ac4:	ldr	r1, [fp, #8]
   14ac8:	ldr	r1, [r1, #8]
   14acc:	ldr	lr, [fp, #8]
   14ad0:	ldr	lr, [lr, #12]
   14ad4:	ldr	ip, [fp, #8]
   14ad8:	ldr	ip, [ip, #16]
   14adc:	ldr	r4, [fp, #8]
   14ae0:	ldr	r4, [r4, #20]
   14ae4:	ldr	r5, [fp, #8]
   14ae8:	ldr	r5, [r5, #24]
   14aec:	ldr	r6, [sp, #92]	; 0x5c
   14af0:	str	r0, [sp, #88]	; 0x58
   14af4:	mov	r0, r6
   14af8:	ldr	r7, [sp, #88]	; 0x58
   14afc:	str	r1, [sp, #84]	; 0x54
   14b00:	mov	r1, r7
   14b04:	ldr	r8, [sp, #84]	; 0x54
   14b08:	str	r8, [sp]
   14b0c:	str	lr, [sp, #4]
   14b10:	str	ip, [sp, #8]
   14b14:	str	r4, [sp, #12]
   14b18:	str	r5, [sp, #16]
   14b1c:	bl	10f1c <fprintf@plt>
   14b20:	str	r0, [sp, #80]	; 0x50
   14b24:	b	14d04 <__assert_fail@plt+0x3d10>
   14b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b2c:	movw	r1, #44427	; 0xad8b
   14b30:	movt	r1, #1
   14b34:	str	r0, [sp, #76]	; 0x4c
   14b38:	mov	r0, r1
   14b3c:	bl	10f04 <gettext@plt>
   14b40:	ldr	r1, [fp, #8]
   14b44:	ldr	r2, [r1]
   14b48:	ldr	r1, [fp, #8]
   14b4c:	ldr	r3, [r1, #4]
   14b50:	ldr	r1, [fp, #8]
   14b54:	ldr	r1, [r1, #8]
   14b58:	ldr	lr, [fp, #8]
   14b5c:	ldr	lr, [lr, #12]
   14b60:	ldr	ip, [fp, #8]
   14b64:	ldr	ip, [ip, #16]
   14b68:	ldr	r4, [fp, #8]
   14b6c:	ldr	r4, [r4, #20]
   14b70:	ldr	r5, [fp, #8]
   14b74:	ldr	r5, [r5, #24]
   14b78:	ldr	r6, [fp, #8]
   14b7c:	ldr	r6, [r6, #28]
   14b80:	ldr	r7, [sp, #76]	; 0x4c
   14b84:	str	r0, [sp, #72]	; 0x48
   14b88:	mov	r0, r7
   14b8c:	ldr	r8, [sp, #72]	; 0x48
   14b90:	str	r1, [sp, #68]	; 0x44
   14b94:	mov	r1, r8
   14b98:	ldr	r9, [sp, #68]	; 0x44
   14b9c:	str	r9, [sp]
   14ba0:	str	lr, [sp, #4]
   14ba4:	str	ip, [sp, #8]
   14ba8:	str	r4, [sp, #12]
   14bac:	str	r5, [sp, #16]
   14bb0:	str	r6, [sp, #20]
   14bb4:	bl	10f1c <fprintf@plt>
   14bb8:	str	r0, [sp, #64]	; 0x40
   14bbc:	b	14d04 <__assert_fail@plt+0x3d10>
   14bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bc4:	movw	r1, #44475	; 0xadbb
   14bc8:	movt	r1, #1
   14bcc:	str	r0, [sp, #60]	; 0x3c
   14bd0:	mov	r0, r1
   14bd4:	bl	10f04 <gettext@plt>
   14bd8:	ldr	r1, [fp, #8]
   14bdc:	ldr	r2, [r1]
   14be0:	ldr	r1, [fp, #8]
   14be4:	ldr	r3, [r1, #4]
   14be8:	ldr	r1, [fp, #8]
   14bec:	ldr	r1, [r1, #8]
   14bf0:	ldr	lr, [fp, #8]
   14bf4:	ldr	lr, [lr, #12]
   14bf8:	ldr	ip, [fp, #8]
   14bfc:	ldr	ip, [ip, #16]
   14c00:	ldr	r4, [fp, #8]
   14c04:	ldr	r4, [r4, #20]
   14c08:	ldr	r5, [fp, #8]
   14c0c:	ldr	r5, [r5, #24]
   14c10:	ldr	r6, [fp, #8]
   14c14:	ldr	r6, [r6, #28]
   14c18:	ldr	r7, [fp, #8]
   14c1c:	ldr	r7, [r7, #32]
   14c20:	ldr	r8, [sp, #60]	; 0x3c
   14c24:	str	r0, [sp, #56]	; 0x38
   14c28:	mov	r0, r8
   14c2c:	ldr	r9, [sp, #56]	; 0x38
   14c30:	str	r1, [sp, #52]	; 0x34
   14c34:	mov	r1, r9
   14c38:	ldr	sl, [sp, #52]	; 0x34
   14c3c:	str	sl, [sp]
   14c40:	str	lr, [sp, #4]
   14c44:	str	ip, [sp, #8]
   14c48:	str	r4, [sp, #12]
   14c4c:	str	r5, [sp, #16]
   14c50:	str	r6, [sp, #20]
   14c54:	str	r7, [sp, #24]
   14c58:	bl	10f1c <fprintf@plt>
   14c5c:	str	r0, [sp, #48]	; 0x30
   14c60:	b	14d04 <__assert_fail@plt+0x3d10>
   14c64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c68:	movw	r1, #44527	; 0xadef
   14c6c:	movt	r1, #1
   14c70:	str	r0, [sp, #44]	; 0x2c
   14c74:	mov	r0, r1
   14c78:	bl	10f04 <gettext@plt>
   14c7c:	ldr	r1, [fp, #8]
   14c80:	ldr	r2, [r1]
   14c84:	ldr	r1, [fp, #8]
   14c88:	ldr	r3, [r1, #4]
   14c8c:	ldr	r1, [fp, #8]
   14c90:	ldr	r1, [r1, #8]
   14c94:	ldr	lr, [fp, #8]
   14c98:	ldr	lr, [lr, #12]
   14c9c:	ldr	ip, [fp, #8]
   14ca0:	ldr	ip, [ip, #16]
   14ca4:	ldr	r4, [fp, #8]
   14ca8:	ldr	r4, [r4, #20]
   14cac:	ldr	r5, [fp, #8]
   14cb0:	ldr	r5, [r5, #24]
   14cb4:	ldr	r6, [fp, #8]
   14cb8:	ldr	r6, [r6, #28]
   14cbc:	ldr	r7, [fp, #8]
   14cc0:	ldr	r7, [r7, #32]
   14cc4:	ldr	r8, [sp, #44]	; 0x2c
   14cc8:	str	r0, [sp, #40]	; 0x28
   14ccc:	mov	r0, r8
   14cd0:	ldr	r9, [sp, #40]	; 0x28
   14cd4:	str	r1, [sp, #36]	; 0x24
   14cd8:	mov	r1, r9
   14cdc:	ldr	sl, [sp, #36]	; 0x24
   14ce0:	str	sl, [sp]
   14ce4:	str	lr, [sp, #4]
   14ce8:	str	ip, [sp, #8]
   14cec:	str	r4, [sp, #12]
   14cf0:	str	r5, [sp, #16]
   14cf4:	str	r6, [sp, #20]
   14cf8:	str	r7, [sp, #24]
   14cfc:	bl	10f1c <fprintf@plt>
   14d00:	str	r0, [sp, #32]
   14d04:	sub	sp, fp, #28
   14d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d0c:	push	{fp, lr}
   14d10:	mov	fp, sp
   14d14:	sub	sp, sp, #32
   14d18:	ldr	ip, [fp, #8]
   14d1c:	str	r0, [fp, #-4]
   14d20:	str	r1, [fp, #-8]
   14d24:	str	r2, [fp, #-12]
   14d28:	str	r3, [sp, #16]
   14d2c:	movw	r0, #0
   14d30:	str	r0, [sp, #12]
   14d34:	str	ip, [sp, #8]
   14d38:	ldr	r0, [fp, #8]
   14d3c:	ldr	r1, [sp, #12]
   14d40:	add	r0, r0, r1, lsl #2
   14d44:	ldr	r0, [r0]
   14d48:	movw	r1, #0
   14d4c:	cmp	r0, r1
   14d50:	beq	14d68 <__assert_fail@plt+0x3d74>
   14d54:	b	14d58 <__assert_fail@plt+0x3d64>
   14d58:	ldr	r0, [sp, #12]
   14d5c:	add	r0, r0, #1
   14d60:	str	r0, [sp, #12]
   14d64:	b	14d38 <__assert_fail@plt+0x3d44>
   14d68:	ldr	r0, [fp, #-4]
   14d6c:	ldr	r1, [fp, #-8]
   14d70:	ldr	r2, [fp, #-12]
   14d74:	ldr	r3, [sp, #16]
   14d78:	ldr	ip, [fp, #8]
   14d7c:	ldr	lr, [sp, #12]
   14d80:	str	ip, [sp]
   14d84:	str	lr, [sp, #4]
   14d88:	bl	146e8 <__assert_fail@plt+0x36f4>
   14d8c:	mov	sp, fp
   14d90:	pop	{fp, pc}
   14d94:	push	{fp, lr}
   14d98:	mov	fp, sp
   14d9c:	sub	sp, sp, #80	; 0x50
   14da0:	ldr	ip, [fp, #8]
   14da4:	str	ip, [fp, #-4]
   14da8:	str	r0, [fp, #-8]
   14dac:	str	r1, [fp, #-12]
   14db0:	str	r2, [fp, #-16]
   14db4:	str	r3, [fp, #-20]	; 0xffffffec
   14db8:	movw	r0, #0
   14dbc:	str	r0, [fp, #-24]	; 0xffffffe8
   14dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dc4:	cmp	r0, #10
   14dc8:	movw	r0, #0
   14dcc:	str	r0, [sp, #12]
   14dd0:	bcs	14e08 <__assert_fail@plt+0x3e14>
   14dd4:	ldr	r0, [fp, #-4]
   14dd8:	add	r1, r0, #4
   14ddc:	str	r1, [fp, #-4]
   14de0:	ldr	r0, [r0]
   14de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14de8:	add	r2, sp, #16
   14dec:	add	r1, r2, r1, lsl #2
   14df0:	str	r0, [r1]
   14df4:	movw	r1, #0
   14df8:	cmp	r0, r1
   14dfc:	movw	r0, #0
   14e00:	movne	r0, #1
   14e04:	str	r0, [sp, #12]
   14e08:	ldr	r0, [sp, #12]
   14e0c:	tst	r0, #1
   14e10:	beq	14e28 <__assert_fail@plt+0x3e34>
   14e14:	b	14e18 <__assert_fail@plt+0x3e24>
   14e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e1c:	add	r0, r0, #1
   14e20:	str	r0, [fp, #-24]	; 0xffffffe8
   14e24:	b	14dc0 <__assert_fail@plt+0x3dcc>
   14e28:	add	r0, sp, #16
   14e2c:	ldr	r1, [fp, #-8]
   14e30:	ldr	r2, [fp, #-12]
   14e34:	ldr	r3, [fp, #-16]
   14e38:	ldr	ip, [fp, #-20]	; 0xffffffec
   14e3c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14e40:	str	r0, [sp, #8]
   14e44:	mov	r0, r1
   14e48:	mov	r1, r2
   14e4c:	mov	r2, r3
   14e50:	mov	r3, ip
   14e54:	ldr	ip, [sp, #8]
   14e58:	str	ip, [sp]
   14e5c:	str	lr, [sp, #4]
   14e60:	bl	146e8 <__assert_fail@plt+0x36f4>
   14e64:	mov	sp, fp
   14e68:	pop	{fp, pc}
   14e6c:	push	{fp, lr}
   14e70:	mov	fp, sp
   14e74:	sub	sp, sp, #32
   14e78:	str	r0, [fp, #-4]
   14e7c:	str	r1, [fp, #-8]
   14e80:	str	r2, [fp, #-12]
   14e84:	str	r3, [sp, #16]
   14e88:	add	r0, fp, #8
   14e8c:	str	r0, [sp, #12]
   14e90:	ldr	r0, [fp, #-4]
   14e94:	ldr	r1, [fp, #-8]
   14e98:	ldr	r2, [fp, #-12]
   14e9c:	ldr	r3, [sp, #16]
   14ea0:	ldr	ip, [sp, #12]
   14ea4:	mov	lr, sp
   14ea8:	str	ip, [lr]
   14eac:	bl	14d94 <__assert_fail@plt+0x3da0>
   14eb0:	add	r0, sp, #12
   14eb4:	str	r0, [sp, #8]
   14eb8:	mov	sp, fp
   14ebc:	pop	{fp, pc}
   14ec0:	push	{fp, lr}
   14ec4:	mov	fp, sp
   14ec8:	sub	sp, sp, #16
   14ecc:	movw	r0, #45380	; 0xb144
   14ed0:	movt	r0, #2
   14ed4:	ldr	r1, [r0]
   14ed8:	movw	r0, #42636	; 0xa68c
   14edc:	movt	r0, #1
   14ee0:	bl	10da8 <fputs_unlocked@plt>
   14ee4:	movw	r1, #44587	; 0xae2b
   14ee8:	movt	r1, #1
   14eec:	str	r0, [fp, #-4]
   14ef0:	mov	r0, r1
   14ef4:	bl	10f04 <gettext@plt>
   14ef8:	movw	r1, #44607	; 0xae3f
   14efc:	movt	r1, #1
   14f00:	bl	10dd8 <printf@plt>
   14f04:	movw	r1, #44629	; 0xae55
   14f08:	movt	r1, #1
   14f0c:	str	r0, [sp, #8]
   14f10:	mov	r0, r1
   14f14:	bl	10f04 <gettext@plt>
   14f18:	movw	r1, #42908	; 0xa79c
   14f1c:	movt	r1, #1
   14f20:	movw	r2, #43151	; 0xa88f
   14f24:	movt	r2, #1
   14f28:	bl	10dd8 <printf@plt>
   14f2c:	movw	r1, #44649	; 0xae69
   14f30:	movt	r1, #1
   14f34:	str	r0, [sp, #4]
   14f38:	mov	r0, r1
   14f3c:	bl	10f04 <gettext@plt>
   14f40:	movw	r1, #44688	; 0xae90
   14f44:	movt	r1, #1
   14f48:	bl	10dd8 <printf@plt>
   14f4c:	str	r0, [sp]
   14f50:	mov	sp, fp
   14f54:	pop	{fp, pc}
   14f58:	push	{fp, lr}
   14f5c:	mov	fp, sp
   14f60:	sub	sp, sp, #16
   14f64:	str	r0, [fp, #-4]
   14f68:	str	r1, [sp, #8]
   14f6c:	str	r2, [sp, #4]
   14f70:	ldr	r0, [fp, #-4]
   14f74:	ldr	r1, [sp, #8]
   14f78:	ldr	r2, [sp, #4]
   14f7c:	bl	14f88 <__assert_fail@plt+0x3f94>
   14f80:	mov	sp, fp
   14f84:	pop	{fp, pc}
   14f88:	push	{fp, lr}
   14f8c:	mov	fp, sp
   14f90:	sub	sp, sp, #16
   14f94:	str	r0, [fp, #-4]
   14f98:	str	r1, [sp, #8]
   14f9c:	str	r2, [sp, #4]
   14fa0:	ldr	r0, [fp, #-4]
   14fa4:	ldr	r1, [sp, #8]
   14fa8:	ldr	r2, [sp, #4]
   14fac:	bl	18728 <__assert_fail@plt+0x7734>
   14fb0:	str	r0, [sp]
   14fb4:	ldr	r0, [sp]
   14fb8:	movw	r1, #0
   14fbc:	cmp	r0, r1
   14fc0:	bne	14ff0 <__assert_fail@plt+0x3ffc>
   14fc4:	ldr	r0, [fp, #-4]
   14fc8:	movw	r1, #0
   14fcc:	cmp	r0, r1
   14fd0:	beq	14fec <__assert_fail@plt+0x3ff8>
   14fd4:	ldr	r0, [sp, #8]
   14fd8:	cmp	r0, #0
   14fdc:	beq	14ff0 <__assert_fail@plt+0x3ffc>
   14fe0:	ldr	r0, [sp, #4]
   14fe4:	cmp	r0, #0
   14fe8:	beq	14ff0 <__assert_fail@plt+0x3ffc>
   14fec:	bl	17dd8 <__assert_fail@plt+0x6de4>
   14ff0:	ldr	r0, [sp]
   14ff4:	mov	sp, fp
   14ff8:	pop	{fp, pc}
   14ffc:	push	{fp, lr}
   15000:	mov	fp, sp
   15004:	sub	sp, sp, #8
   15008:	str	r0, [sp, #4]
   1500c:	ldr	r0, [sp, #4]
   15010:	bl	17ec4 <__assert_fail@plt+0x6ed0>
   15014:	bl	15020 <__assert_fail@plt+0x402c>
   15018:	mov	sp, fp
   1501c:	pop	{fp, pc}
   15020:	push	{fp, lr}
   15024:	mov	fp, sp
   15028:	sub	sp, sp, #8
   1502c:	str	r0, [sp, #4]
   15030:	ldr	r0, [sp, #4]
   15034:	movw	r1, #0
   15038:	cmp	r0, r1
   1503c:	bne	15044 <__assert_fail@plt+0x4050>
   15040:	bl	17dd8 <__assert_fail@plt+0x6de4>
   15044:	ldr	r0, [sp, #4]
   15048:	mov	sp, fp
   1504c:	pop	{fp, pc}
   15050:	push	{fp, lr}
   15054:	mov	fp, sp
   15058:	sub	sp, sp, #8
   1505c:	str	r0, [sp, #4]
   15060:	ldr	r0, [sp, #4]
   15064:	bl	18464 <__assert_fail@plt+0x7470>
   15068:	bl	15020 <__assert_fail@plt+0x402c>
   1506c:	mov	sp, fp
   15070:	pop	{fp, pc}
   15074:	push	{fp, lr}
   15078:	mov	fp, sp
   1507c:	sub	sp, sp, #8
   15080:	str	r0, [sp, #4]
   15084:	ldr	r0, [sp, #4]
   15088:	bl	14ffc <__assert_fail@plt+0x4008>
   1508c:	mov	sp, fp
   15090:	pop	{fp, pc}
   15094:	push	{fp, lr}
   15098:	mov	fp, sp
   1509c:	sub	sp, sp, #16
   150a0:	str	r0, [fp, #-4]
   150a4:	str	r1, [sp, #8]
   150a8:	ldr	r0, [fp, #-4]
   150ac:	ldr	r1, [sp, #8]
   150b0:	bl	17f34 <__assert_fail@plt+0x6f40>
   150b4:	str	r0, [sp, #4]
   150b8:	ldr	r0, [sp, #4]
   150bc:	movw	r1, #0
   150c0:	cmp	r0, r1
   150c4:	bne	150e8 <__assert_fail@plt+0x40f4>
   150c8:	ldr	r0, [fp, #-4]
   150cc:	movw	r1, #0
   150d0:	cmp	r0, r1
   150d4:	beq	150e4 <__assert_fail@plt+0x40f0>
   150d8:	ldr	r0, [sp, #8]
   150dc:	cmp	r0, #0
   150e0:	beq	150e8 <__assert_fail@plt+0x40f4>
   150e4:	bl	17dd8 <__assert_fail@plt+0x6de4>
   150e8:	ldr	r0, [sp, #4]
   150ec:	mov	sp, fp
   150f0:	pop	{fp, pc}
   150f4:	push	{fp, lr}
   150f8:	mov	fp, sp
   150fc:	sub	sp, sp, #8
   15100:	str	r0, [sp, #4]
   15104:	str	r1, [sp]
   15108:	ldr	r0, [sp, #4]
   1510c:	ldr	r1, [sp]
   15110:	bl	184a4 <__assert_fail@plt+0x74b0>
   15114:	bl	15020 <__assert_fail@plt+0x402c>
   15118:	mov	sp, fp
   1511c:	pop	{fp, pc}
   15120:	push	{fp, lr}
   15124:	mov	fp, sp
   15128:	sub	sp, sp, #16
   1512c:	str	r0, [fp, #-4]
   15130:	str	r1, [sp, #8]
   15134:	str	r2, [sp, #4]
   15138:	ldr	r0, [fp, #-4]
   1513c:	ldr	r1, [sp, #8]
   15140:	ldr	r2, [sp, #4]
   15144:	bl	1859c <__assert_fail@plt+0x75a8>
   15148:	bl	15020 <__assert_fail@plt+0x402c>
   1514c:	mov	sp, fp
   15150:	pop	{fp, pc}
   15154:	push	{fp, lr}
   15158:	mov	fp, sp
   1515c:	sub	sp, sp, #8
   15160:	str	r0, [sp, #4]
   15164:	str	r1, [sp]
   15168:	ldr	r1, [sp, #4]
   1516c:	ldr	r2, [sp]
   15170:	movw	r0, #0
   15174:	bl	14f88 <__assert_fail@plt+0x3f94>
   15178:	mov	sp, fp
   1517c:	pop	{fp, pc}
   15180:	push	{fp, lr}
   15184:	mov	fp, sp
   15188:	sub	sp, sp, #8
   1518c:	str	r0, [sp, #4]
   15190:	str	r1, [sp]
   15194:	ldr	r1, [sp, #4]
   15198:	ldr	r2, [sp]
   1519c:	movw	r0, #0
   151a0:	bl	15120 <__assert_fail@plt+0x412c>
   151a4:	mov	sp, fp
   151a8:	pop	{fp, pc}
   151ac:	push	{fp, lr}
   151b0:	mov	fp, sp
   151b4:	sub	sp, sp, #8
   151b8:	str	r0, [sp, #4]
   151bc:	str	r1, [sp]
   151c0:	ldr	r0, [sp, #4]
   151c4:	ldr	r1, [sp]
   151c8:	movw	r2, #1
   151cc:	bl	151d8 <__assert_fail@plt+0x41e4>
   151d0:	mov	sp, fp
   151d4:	pop	{fp, pc}
   151d8:	push	{fp, lr}
   151dc:	mov	fp, sp
   151e0:	sub	sp, sp, #16
   151e4:	str	r0, [fp, #-4]
   151e8:	str	r1, [sp, #8]
   151ec:	str	r2, [sp, #4]
   151f0:	ldr	r0, [sp, #8]
   151f4:	ldr	r0, [r0]
   151f8:	str	r0, [sp]
   151fc:	ldr	r0, [fp, #-4]
   15200:	movw	r1, #0
   15204:	cmp	r0, r1
   15208:	bne	15254 <__assert_fail@plt+0x4260>
   1520c:	ldr	r0, [sp]
   15210:	cmp	r0, #0
   15214:	bne	15250 <__assert_fail@plt+0x425c>
   15218:	ldr	r0, [sp, #4]
   1521c:	movw	r1, #64	; 0x40
   15220:	udiv	r0, r1, r0
   15224:	str	r0, [sp]
   15228:	ldr	r0, [sp]
   1522c:	cmp	r0, #0
   15230:	movw	r0, #0
   15234:	movne	r0, #1
   15238:	mvn	r1, #0
   1523c:	eor	r0, r0, r1
   15240:	and	r0, r0, #1
   15244:	ldr	r1, [sp]
   15248:	add	r0, r1, r0
   1524c:	str	r0, [sp]
   15250:	b	15284 <__assert_fail@plt+0x4290>
   15254:	ldr	r0, [sp]
   15258:	ldr	r1, [sp]
   1525c:	lsr	r1, r1, #1
   15260:	add	r1, r1, #1
   15264:	adds	r0, r0, r1
   15268:	mov	r1, #0
   1526c:	adc	r1, r1, #0
   15270:	str	r0, [sp]
   15274:	tst	r1, #1
   15278:	beq	15280 <__assert_fail@plt+0x428c>
   1527c:	bl	17dd8 <__assert_fail@plt+0x6de4>
   15280:	b	15284 <__assert_fail@plt+0x4290>
   15284:	ldr	r0, [fp, #-4]
   15288:	ldr	r1, [sp]
   1528c:	ldr	r2, [sp, #4]
   15290:	bl	14f88 <__assert_fail@plt+0x3f94>
   15294:	str	r0, [fp, #-4]
   15298:	ldr	r0, [sp]
   1529c:	ldr	r1, [sp, #8]
   152a0:	str	r0, [r1]
   152a4:	ldr	r0, [fp, #-4]
   152a8:	mov	sp, fp
   152ac:	pop	{fp, pc}
   152b0:	push	{fp, lr}
   152b4:	mov	fp, sp
   152b8:	sub	sp, sp, #376	; 0x178
   152bc:	ldr	ip, [fp, #8]
   152c0:	str	r0, [fp, #-4]
   152c4:	str	r1, [fp, #-8]
   152c8:	str	r2, [fp, #-12]
   152cc:	str	r3, [fp, #-16]
   152d0:	ldr	r0, [fp, #-8]
   152d4:	ldr	r0, [r0]
   152d8:	str	r0, [fp, #-20]	; 0xffffffec
   152dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   152e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   152e4:	asr	r1, r1, #1
   152e8:	add	r1, r0, r1
   152ec:	mov	r2, #1
   152f0:	cmp	r1, r0
   152f4:	movwvc	r2, #0
   152f8:	str	r1, [fp, #-24]	; 0xffffffe8
   152fc:	tst	r2, #1
   15300:	str	ip, [fp, #-36]	; 0xffffffdc
   15304:	beq	15310 <__assert_fail@plt+0x431c>
   15308:	ldr	r0, [pc, #4044]	; 162dc <__assert_fail@plt+0x52e8>
   1530c:	str	r0, [fp, #-24]	; 0xffffffe8
   15310:	ldr	r0, [fp, #-16]
   15314:	movw	r1, #0
   15318:	cmp	r1, r0
   1531c:	bgt	15338 <__assert_fail@plt+0x4344>
   15320:	ldr	r0, [fp, #-16]
   15324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15328:	cmp	r0, r1
   1532c:	bge	15338 <__assert_fail@plt+0x4344>
   15330:	ldr	r0, [fp, #-16]
   15334:	str	r0, [fp, #-24]	; 0xffffffe8
   15338:	b	15710 <__assert_fail@plt+0x471c>
   1533c:	b	15340 <__assert_fail@plt+0x434c>
   15340:	ldr	r0, [fp, #8]
   15344:	cmp	r0, #0
   15348:	bge	1545c <__assert_fail@plt+0x4468>
   1534c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15350:	cmp	r0, #0
   15354:	bge	153e0 <__assert_fail@plt+0x43ec>
   15358:	b	1535c <__assert_fail@plt+0x4368>
   1535c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15360:	ldr	r1, [fp, #8]
   15364:	movw	r2, #127	; 0x7f
   15368:	sdiv	r1, r2, r1
   1536c:	cmp	r0, r1
   15370:	blt	154fc <__assert_fail@plt+0x4508>
   15374:	b	15514 <__assert_fail@plt+0x4520>
   15378:	b	1537c <__assert_fail@plt+0x4388>
   1537c:	ldr	r0, [pc, #4076]	; 16370 <__assert_fail@plt+0x537c>
   15380:	ldr	r1, [fp, #8]
   15384:	cmp	r1, r0
   15388:	blt	153a0 <__assert_fail@plt+0x43ac>
   1538c:	b	153ac <__assert_fail@plt+0x43b8>
   15390:	ldr	r0, [fp, #8]
   15394:	movw	r1, #0
   15398:	cmp	r1, r0
   1539c:	bge	153ac <__assert_fail@plt+0x43b8>
   153a0:	movw	r0, #0
   153a4:	str	r0, [fp, #-40]	; 0xffffffd8
   153a8:	b	153c4 <__assert_fail@plt+0x43d0>
   153ac:	ldr	r0, [fp, #8]
   153b0:	movw	r1, #0
   153b4:	sub	r0, r1, r0
   153b8:	movw	r1, #127	; 0x7f
   153bc:	sdiv	r0, r1, r0
   153c0:	str	r0, [fp, #-40]	; 0xffffffd8
   153c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153cc:	mvn	r2, #0
   153d0:	sub	r1, r2, r1
   153d4:	cmp	r0, r1
   153d8:	ble	154fc <__assert_fail@plt+0x4508>
   153dc:	b	15514 <__assert_fail@plt+0x4520>
   153e0:	b	153e4 <__assert_fail@plt+0x43f0>
   153e4:	b	15440 <__assert_fail@plt+0x444c>
   153e8:	b	15440 <__assert_fail@plt+0x444c>
   153ec:	ldr	r0, [fp, #8]
   153f0:	cmn	r0, #1
   153f4:	bne	15440 <__assert_fail@plt+0x444c>
   153f8:	b	153fc <__assert_fail@plt+0x4408>
   153fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15400:	mvn	r1, #127	; 0x7f
   15404:	add	r0, r0, r1
   15408:	movw	r1, #0
   1540c:	cmp	r1, r0
   15410:	blt	154fc <__assert_fail@plt+0x4508>
   15414:	b	15514 <__assert_fail@plt+0x4520>
   15418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1541c:	movw	r1, #0
   15420:	cmp	r1, r0
   15424:	bge	15514 <__assert_fail@plt+0x4520>
   15428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1542c:	sub	r0, r0, #1
   15430:	movw	r1, #127	; 0x7f
   15434:	cmp	r1, r0
   15438:	blt	154fc <__assert_fail@plt+0x4508>
   1543c:	b	15514 <__assert_fail@plt+0x4520>
   15440:	ldr	r0, [fp, #8]
   15444:	mvn	r1, #127	; 0x7f
   15448:	sdiv	r0, r1, r0
   1544c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15450:	cmp	r0, r1
   15454:	blt	154fc <__assert_fail@plt+0x4508>
   15458:	b	15514 <__assert_fail@plt+0x4520>
   1545c:	ldr	r0, [fp, #8]
   15460:	cmp	r0, #0
   15464:	bne	1546c <__assert_fail@plt+0x4478>
   15468:	b	15514 <__assert_fail@plt+0x4520>
   1546c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15470:	cmp	r0, #0
   15474:	bge	154e4 <__assert_fail@plt+0x44f0>
   15478:	b	1547c <__assert_fail@plt+0x4488>
   1547c:	b	154c8 <__assert_fail@plt+0x44d4>
   15480:	b	154c8 <__assert_fail@plt+0x44d4>
   15484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15488:	cmn	r0, #1
   1548c:	bne	154c8 <__assert_fail@plt+0x44d4>
   15490:	b	15494 <__assert_fail@plt+0x44a0>
   15494:	ldr	r0, [fp, #8]
   15498:	mvn	r1, #127	; 0x7f
   1549c:	add	r0, r0, r1
   154a0:	movw	r1, #0
   154a4:	cmp	r1, r0
   154a8:	blt	154fc <__assert_fail@plt+0x4508>
   154ac:	b	15514 <__assert_fail@plt+0x4520>
   154b0:	ldr	r0, [fp, #8]
   154b4:	sub	r0, r0, #1
   154b8:	movw	r1, #127	; 0x7f
   154bc:	cmp	r1, r0
   154c0:	blt	154fc <__assert_fail@plt+0x4508>
   154c4:	b	15514 <__assert_fail@plt+0x4520>
   154c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154cc:	mvn	r1, #127	; 0x7f
   154d0:	sdiv	r0, r1, r0
   154d4:	ldr	r1, [fp, #8]
   154d8:	cmp	r0, r1
   154dc:	blt	154fc <__assert_fail@plt+0x4508>
   154e0:	b	15514 <__assert_fail@plt+0x4520>
   154e4:	ldr	r0, [fp, #8]
   154e8:	movw	r1, #127	; 0x7f
   154ec:	sdiv	r0, r1, r0
   154f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   154f4:	cmp	r0, r1
   154f8:	bge	15514 <__assert_fail@plt+0x4520>
   154fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15500:	ldr	r1, [fp, #8]
   15504:	mul	r0, r0, r1
   15508:	sxtb	r0, r0
   1550c:	str	r0, [fp, #-28]	; 0xffffffe4
   15510:	b	16728 <__assert_fail@plt+0x5734>
   15514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15518:	ldr	r1, [fp, #8]
   1551c:	mul	r0, r0, r1
   15520:	sxtb	r0, r0
   15524:	str	r0, [fp, #-28]	; 0xffffffe4
   15528:	b	16738 <__assert_fail@plt+0x5744>
   1552c:	ldr	r0, [fp, #8]
   15530:	cmp	r0, #0
   15534:	bge	15644 <__assert_fail@plt+0x4650>
   15538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1553c:	cmp	r0, #0
   15540:	bge	155cc <__assert_fail@plt+0x45d8>
   15544:	b	15548 <__assert_fail@plt+0x4554>
   15548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1554c:	ldr	r1, [fp, #8]
   15550:	movw	r2, #255	; 0xff
   15554:	sdiv	r1, r2, r1
   15558:	cmp	r0, r1
   1555c:	blt	156e0 <__assert_fail@plt+0x46ec>
   15560:	b	156f8 <__assert_fail@plt+0x4704>
   15564:	b	15568 <__assert_fail@plt+0x4574>
   15568:	ldr	r0, [pc, #3584]	; 16370 <__assert_fail@plt+0x537c>
   1556c:	ldr	r1, [fp, #8]
   15570:	cmp	r1, r0
   15574:	blt	1558c <__assert_fail@plt+0x4598>
   15578:	b	15598 <__assert_fail@plt+0x45a4>
   1557c:	ldr	r0, [fp, #8]
   15580:	movw	r1, #0
   15584:	cmp	r1, r0
   15588:	bge	15598 <__assert_fail@plt+0x45a4>
   1558c:	movw	r0, #0
   15590:	str	r0, [fp, #-44]	; 0xffffffd4
   15594:	b	155b0 <__assert_fail@plt+0x45bc>
   15598:	ldr	r0, [fp, #8]
   1559c:	movw	r1, #0
   155a0:	sub	r0, r1, r0
   155a4:	movw	r1, #255	; 0xff
   155a8:	sdiv	r0, r1, r0
   155ac:	str	r0, [fp, #-44]	; 0xffffffd4
   155b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155b8:	mvn	r2, #0
   155bc:	sub	r1, r2, r1
   155c0:	cmp	r0, r1
   155c4:	ble	156e0 <__assert_fail@plt+0x46ec>
   155c8:	b	156f8 <__assert_fail@plt+0x4704>
   155cc:	b	155d0 <__assert_fail@plt+0x45dc>
   155d0:	b	15628 <__assert_fail@plt+0x4634>
   155d4:	b	15628 <__assert_fail@plt+0x4634>
   155d8:	ldr	r0, [fp, #8]
   155dc:	cmn	r0, #1
   155e0:	bne	15628 <__assert_fail@plt+0x4634>
   155e4:	b	155e8 <__assert_fail@plt+0x45f4>
   155e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155ec:	add	r0, r0, #0
   155f0:	movw	r1, #0
   155f4:	cmp	r1, r0
   155f8:	blt	156e0 <__assert_fail@plt+0x46ec>
   155fc:	b	156f8 <__assert_fail@plt+0x4704>
   15600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15604:	movw	r1, #0
   15608:	cmp	r1, r0
   1560c:	bge	156f8 <__assert_fail@plt+0x4704>
   15610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15614:	sub	r0, r0, #1
   15618:	mvn	r1, #0
   1561c:	cmp	r1, r0
   15620:	blt	156e0 <__assert_fail@plt+0x46ec>
   15624:	b	156f8 <__assert_fail@plt+0x4704>
   15628:	ldr	r0, [fp, #8]
   1562c:	movw	r1, #0
   15630:	sdiv	r0, r1, r0
   15634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15638:	cmp	r0, r1
   1563c:	blt	156e0 <__assert_fail@plt+0x46ec>
   15640:	b	156f8 <__assert_fail@plt+0x4704>
   15644:	ldr	r0, [fp, #8]
   15648:	cmp	r0, #0
   1564c:	bne	15654 <__assert_fail@plt+0x4660>
   15650:	b	156f8 <__assert_fail@plt+0x4704>
   15654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15658:	cmp	r0, #0
   1565c:	bge	156c8 <__assert_fail@plt+0x46d4>
   15660:	b	15664 <__assert_fail@plt+0x4670>
   15664:	b	156ac <__assert_fail@plt+0x46b8>
   15668:	b	156ac <__assert_fail@plt+0x46b8>
   1566c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15670:	cmn	r0, #1
   15674:	bne	156ac <__assert_fail@plt+0x46b8>
   15678:	b	1567c <__assert_fail@plt+0x4688>
   1567c:	ldr	r0, [fp, #8]
   15680:	add	r0, r0, #0
   15684:	movw	r1, #0
   15688:	cmp	r1, r0
   1568c:	blt	156e0 <__assert_fail@plt+0x46ec>
   15690:	b	156f8 <__assert_fail@plt+0x4704>
   15694:	ldr	r0, [fp, #8]
   15698:	sub	r0, r0, #1
   1569c:	mvn	r1, #0
   156a0:	cmp	r1, r0
   156a4:	blt	156e0 <__assert_fail@plt+0x46ec>
   156a8:	b	156f8 <__assert_fail@plt+0x4704>
   156ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156b0:	movw	r1, #0
   156b4:	sdiv	r0, r1, r0
   156b8:	ldr	r1, [fp, #8]
   156bc:	cmp	r0, r1
   156c0:	blt	156e0 <__assert_fail@plt+0x46ec>
   156c4:	b	156f8 <__assert_fail@plt+0x4704>
   156c8:	ldr	r0, [fp, #8]
   156cc:	movw	r1, #255	; 0xff
   156d0:	sdiv	r0, r1, r0
   156d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156d8:	cmp	r0, r1
   156dc:	bge	156f8 <__assert_fail@plt+0x4704>
   156e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e4:	ldr	r1, [fp, #8]
   156e8:	mul	r0, r0, r1
   156ec:	and	r0, r0, #255	; 0xff
   156f0:	str	r0, [fp, #-28]	; 0xffffffe4
   156f4:	b	16728 <__assert_fail@plt+0x5734>
   156f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156fc:	ldr	r1, [fp, #8]
   15700:	mul	r0, r0, r1
   15704:	and	r0, r0, #255	; 0xff
   15708:	str	r0, [fp, #-28]	; 0xffffffe4
   1570c:	b	16738 <__assert_fail@plt+0x5744>
   15710:	b	15ae8 <__assert_fail@plt+0x4af4>
   15714:	b	15718 <__assert_fail@plt+0x4724>
   15718:	ldr	r0, [fp, #8]
   1571c:	cmp	r0, #0
   15720:	bge	15834 <__assert_fail@plt+0x4840>
   15724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15728:	cmp	r0, #0
   1572c:	bge	157b8 <__assert_fail@plt+0x47c4>
   15730:	b	15734 <__assert_fail@plt+0x4740>
   15734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15738:	ldr	r1, [fp, #8]
   1573c:	movw	r2, #32767	; 0x7fff
   15740:	sdiv	r1, r2, r1
   15744:	cmp	r0, r1
   15748:	blt	158d4 <__assert_fail@plt+0x48e0>
   1574c:	b	158ec <__assert_fail@plt+0x48f8>
   15750:	b	15754 <__assert_fail@plt+0x4760>
   15754:	ldr	r0, [pc, #3092]	; 16370 <__assert_fail@plt+0x537c>
   15758:	ldr	r1, [fp, #8]
   1575c:	cmp	r1, r0
   15760:	blt	15778 <__assert_fail@plt+0x4784>
   15764:	b	15784 <__assert_fail@plt+0x4790>
   15768:	ldr	r0, [fp, #8]
   1576c:	movw	r1, #0
   15770:	cmp	r1, r0
   15774:	bge	15784 <__assert_fail@plt+0x4790>
   15778:	movw	r0, #0
   1577c:	str	r0, [fp, #-48]	; 0xffffffd0
   15780:	b	1579c <__assert_fail@plt+0x47a8>
   15784:	ldr	r0, [fp, #8]
   15788:	movw	r1, #0
   1578c:	sub	r0, r1, r0
   15790:	movw	r1, #32767	; 0x7fff
   15794:	sdiv	r0, r1, r0
   15798:	str	r0, [fp, #-48]	; 0xffffffd0
   1579c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   157a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157a4:	mvn	r2, #0
   157a8:	sub	r1, r2, r1
   157ac:	cmp	r0, r1
   157b0:	ble	158d4 <__assert_fail@plt+0x48e0>
   157b4:	b	158ec <__assert_fail@plt+0x48f8>
   157b8:	b	157bc <__assert_fail@plt+0x47c8>
   157bc:	b	15818 <__assert_fail@plt+0x4824>
   157c0:	b	15818 <__assert_fail@plt+0x4824>
   157c4:	ldr	r0, [fp, #8]
   157c8:	cmn	r0, #1
   157cc:	bne	15818 <__assert_fail@plt+0x4824>
   157d0:	b	157d4 <__assert_fail@plt+0x47e0>
   157d4:	ldr	r0, [pc, #3928]	; 16734 <__assert_fail@plt+0x5740>
   157d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157dc:	add	r0, r1, r0
   157e0:	movw	r1, #0
   157e4:	cmp	r1, r0
   157e8:	blt	158d4 <__assert_fail@plt+0x48e0>
   157ec:	b	158ec <__assert_fail@plt+0x48f8>
   157f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157f4:	movw	r1, #0
   157f8:	cmp	r1, r0
   157fc:	bge	158ec <__assert_fail@plt+0x48f8>
   15800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15804:	sub	r0, r0, #1
   15808:	movw	r1, #32767	; 0x7fff
   1580c:	cmp	r1, r0
   15810:	blt	158d4 <__assert_fail@plt+0x48e0>
   15814:	b	158ec <__assert_fail@plt+0x48f8>
   15818:	ldr	r0, [pc, #3860]	; 16734 <__assert_fail@plt+0x5740>
   1581c:	ldr	r1, [fp, #8]
   15820:	sdiv	r0, r0, r1
   15824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15828:	cmp	r0, r1
   1582c:	blt	158d4 <__assert_fail@plt+0x48e0>
   15830:	b	158ec <__assert_fail@plt+0x48f8>
   15834:	ldr	r0, [fp, #8]
   15838:	cmp	r0, #0
   1583c:	bne	15844 <__assert_fail@plt+0x4850>
   15840:	b	158ec <__assert_fail@plt+0x48f8>
   15844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15848:	cmp	r0, #0
   1584c:	bge	158bc <__assert_fail@plt+0x48c8>
   15850:	b	15854 <__assert_fail@plt+0x4860>
   15854:	b	158a0 <__assert_fail@plt+0x48ac>
   15858:	b	158a0 <__assert_fail@plt+0x48ac>
   1585c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15860:	cmn	r0, #1
   15864:	bne	158a0 <__assert_fail@plt+0x48ac>
   15868:	b	1586c <__assert_fail@plt+0x4878>
   1586c:	ldr	r0, [pc, #3776]	; 16734 <__assert_fail@plt+0x5740>
   15870:	ldr	r1, [fp, #8]
   15874:	add	r0, r1, r0
   15878:	movw	r1, #0
   1587c:	cmp	r1, r0
   15880:	blt	158d4 <__assert_fail@plt+0x48e0>
   15884:	b	158ec <__assert_fail@plt+0x48f8>
   15888:	ldr	r0, [fp, #8]
   1588c:	sub	r0, r0, #1
   15890:	movw	r1, #32767	; 0x7fff
   15894:	cmp	r1, r0
   15898:	blt	158d4 <__assert_fail@plt+0x48e0>
   1589c:	b	158ec <__assert_fail@plt+0x48f8>
   158a0:	ldr	r0, [pc, #3724]	; 16734 <__assert_fail@plt+0x5740>
   158a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158a8:	sdiv	r0, r0, r1
   158ac:	ldr	r1, [fp, #8]
   158b0:	cmp	r0, r1
   158b4:	blt	158d4 <__assert_fail@plt+0x48e0>
   158b8:	b	158ec <__assert_fail@plt+0x48f8>
   158bc:	ldr	r0, [fp, #8]
   158c0:	movw	r1, #32767	; 0x7fff
   158c4:	sdiv	r0, r1, r0
   158c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158cc:	cmp	r0, r1
   158d0:	bge	158ec <__assert_fail@plt+0x48f8>
   158d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158d8:	ldr	r1, [fp, #8]
   158dc:	mul	r0, r0, r1
   158e0:	sxth	r0, r0
   158e4:	str	r0, [fp, #-28]	; 0xffffffe4
   158e8:	b	16728 <__assert_fail@plt+0x5734>
   158ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158f0:	ldr	r1, [fp, #8]
   158f4:	mul	r0, r0, r1
   158f8:	sxth	r0, r0
   158fc:	str	r0, [fp, #-28]	; 0xffffffe4
   15900:	b	16738 <__assert_fail@plt+0x5744>
   15904:	ldr	r0, [fp, #8]
   15908:	cmp	r0, #0
   1590c:	bge	15a1c <__assert_fail@plt+0x4a28>
   15910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15914:	cmp	r0, #0
   15918:	bge	159a4 <__assert_fail@plt+0x49b0>
   1591c:	b	15920 <__assert_fail@plt+0x492c>
   15920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15924:	ldr	r1, [fp, #8]
   15928:	movw	r2, #65535	; 0xffff
   1592c:	sdiv	r1, r2, r1
   15930:	cmp	r0, r1
   15934:	blt	15ab8 <__assert_fail@plt+0x4ac4>
   15938:	b	15ad0 <__assert_fail@plt+0x4adc>
   1593c:	b	15940 <__assert_fail@plt+0x494c>
   15940:	ldr	r0, [pc, #2600]	; 16370 <__assert_fail@plt+0x537c>
   15944:	ldr	r1, [fp, #8]
   15948:	cmp	r1, r0
   1594c:	blt	15964 <__assert_fail@plt+0x4970>
   15950:	b	15970 <__assert_fail@plt+0x497c>
   15954:	ldr	r0, [fp, #8]
   15958:	movw	r1, #0
   1595c:	cmp	r1, r0
   15960:	bge	15970 <__assert_fail@plt+0x497c>
   15964:	movw	r0, #0
   15968:	str	r0, [fp, #-52]	; 0xffffffcc
   1596c:	b	15988 <__assert_fail@plt+0x4994>
   15970:	ldr	r0, [fp, #8]
   15974:	movw	r1, #0
   15978:	sub	r0, r1, r0
   1597c:	movw	r1, #65535	; 0xffff
   15980:	sdiv	r0, r1, r0
   15984:	str	r0, [fp, #-52]	; 0xffffffcc
   15988:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1598c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15990:	mvn	r2, #0
   15994:	sub	r1, r2, r1
   15998:	cmp	r0, r1
   1599c:	ble	15ab8 <__assert_fail@plt+0x4ac4>
   159a0:	b	15ad0 <__assert_fail@plt+0x4adc>
   159a4:	b	159a8 <__assert_fail@plt+0x49b4>
   159a8:	b	15a00 <__assert_fail@plt+0x4a0c>
   159ac:	b	15a00 <__assert_fail@plt+0x4a0c>
   159b0:	ldr	r0, [fp, #8]
   159b4:	cmn	r0, #1
   159b8:	bne	15a00 <__assert_fail@plt+0x4a0c>
   159bc:	b	159c0 <__assert_fail@plt+0x49cc>
   159c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c4:	add	r0, r0, #0
   159c8:	movw	r1, #0
   159cc:	cmp	r1, r0
   159d0:	blt	15ab8 <__assert_fail@plt+0x4ac4>
   159d4:	b	15ad0 <__assert_fail@plt+0x4adc>
   159d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159dc:	movw	r1, #0
   159e0:	cmp	r1, r0
   159e4:	bge	15ad0 <__assert_fail@plt+0x4adc>
   159e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159ec:	sub	r0, r0, #1
   159f0:	mvn	r1, #0
   159f4:	cmp	r1, r0
   159f8:	blt	15ab8 <__assert_fail@plt+0x4ac4>
   159fc:	b	15ad0 <__assert_fail@plt+0x4adc>
   15a00:	ldr	r0, [fp, #8]
   15a04:	movw	r1, #0
   15a08:	sdiv	r0, r1, r0
   15a0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a10:	cmp	r0, r1
   15a14:	blt	15ab8 <__assert_fail@plt+0x4ac4>
   15a18:	b	15ad0 <__assert_fail@plt+0x4adc>
   15a1c:	ldr	r0, [fp, #8]
   15a20:	cmp	r0, #0
   15a24:	bne	15a2c <__assert_fail@plt+0x4a38>
   15a28:	b	15ad0 <__assert_fail@plt+0x4adc>
   15a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a30:	cmp	r0, #0
   15a34:	bge	15aa0 <__assert_fail@plt+0x4aac>
   15a38:	b	15a3c <__assert_fail@plt+0x4a48>
   15a3c:	b	15a84 <__assert_fail@plt+0x4a90>
   15a40:	b	15a84 <__assert_fail@plt+0x4a90>
   15a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a48:	cmn	r0, #1
   15a4c:	bne	15a84 <__assert_fail@plt+0x4a90>
   15a50:	b	15a54 <__assert_fail@plt+0x4a60>
   15a54:	ldr	r0, [fp, #8]
   15a58:	add	r0, r0, #0
   15a5c:	movw	r1, #0
   15a60:	cmp	r1, r0
   15a64:	blt	15ab8 <__assert_fail@plt+0x4ac4>
   15a68:	b	15ad0 <__assert_fail@plt+0x4adc>
   15a6c:	ldr	r0, [fp, #8]
   15a70:	sub	r0, r0, #1
   15a74:	mvn	r1, #0
   15a78:	cmp	r1, r0
   15a7c:	blt	15ab8 <__assert_fail@plt+0x4ac4>
   15a80:	b	15ad0 <__assert_fail@plt+0x4adc>
   15a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a88:	movw	r1, #0
   15a8c:	sdiv	r0, r1, r0
   15a90:	ldr	r1, [fp, #8]
   15a94:	cmp	r0, r1
   15a98:	blt	15ab8 <__assert_fail@plt+0x4ac4>
   15a9c:	b	15ad0 <__assert_fail@plt+0x4adc>
   15aa0:	ldr	r0, [fp, #8]
   15aa4:	movw	r1, #65535	; 0xffff
   15aa8:	sdiv	r0, r1, r0
   15aac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ab0:	cmp	r0, r1
   15ab4:	bge	15ad0 <__assert_fail@plt+0x4adc>
   15ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15abc:	ldr	r1, [fp, #8]
   15ac0:	mul	r0, r0, r1
   15ac4:	uxth	r0, r0
   15ac8:	str	r0, [fp, #-28]	; 0xffffffe4
   15acc:	b	16728 <__assert_fail@plt+0x5734>
   15ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ad4:	ldr	r1, [fp, #8]
   15ad8:	mul	r0, r0, r1
   15adc:	uxth	r0, r0
   15ae0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ae4:	b	16738 <__assert_fail@plt+0x5744>
   15ae8:	b	15aec <__assert_fail@plt+0x4af8>
   15aec:	b	15af0 <__assert_fail@plt+0x4afc>
   15af0:	ldr	r0, [fp, #8]
   15af4:	cmp	r0, #0
   15af8:	bge	15bfc <__assert_fail@plt+0x4c08>
   15afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b00:	cmp	r0, #0
   15b04:	bge	15b90 <__assert_fail@plt+0x4b9c>
   15b08:	b	15b0c <__assert_fail@plt+0x4b18>
   15b0c:	ldr	r0, [pc, #1992]	; 162dc <__assert_fail@plt+0x52e8>
   15b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b14:	ldr	r2, [fp, #8]
   15b18:	sdiv	r0, r0, r2
   15b1c:	cmp	r1, r0
   15b20:	blt	15c8c <__assert_fail@plt+0x4c98>
   15b24:	b	15ca0 <__assert_fail@plt+0x4cac>
   15b28:	b	15b2c <__assert_fail@plt+0x4b38>
   15b2c:	ldr	r0, [pc, #2108]	; 16370 <__assert_fail@plt+0x537c>
   15b30:	ldr	r1, [fp, #8]
   15b34:	cmp	r1, r0
   15b38:	blt	15b50 <__assert_fail@plt+0x4b5c>
   15b3c:	b	15b5c <__assert_fail@plt+0x4b68>
   15b40:	ldr	r0, [fp, #8]
   15b44:	movw	r1, #0
   15b48:	cmp	r1, r0
   15b4c:	bge	15b5c <__assert_fail@plt+0x4b68>
   15b50:	movw	r0, #0
   15b54:	str	r0, [fp, #-56]	; 0xffffffc8
   15b58:	b	15b74 <__assert_fail@plt+0x4b80>
   15b5c:	ldr	r0, [pc, #1912]	; 162dc <__assert_fail@plt+0x52e8>
   15b60:	ldr	r1, [fp, #8]
   15b64:	movw	r2, #0
   15b68:	sub	r1, r2, r1
   15b6c:	sdiv	r0, r0, r1
   15b70:	str	r0, [fp, #-56]	; 0xffffffc8
   15b74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b7c:	mvn	r2, #0
   15b80:	sub	r1, r2, r1
   15b84:	cmp	r0, r1
   15b88:	ble	15c8c <__assert_fail@plt+0x4c98>
   15b8c:	b	15ca0 <__assert_fail@plt+0x4cac>
   15b90:	ldr	r0, [fp, #8]
   15b94:	cmn	r0, #1
   15b98:	bne	15be0 <__assert_fail@plt+0x4bec>
   15b9c:	b	15ba0 <__assert_fail@plt+0x4bac>
   15ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ba4:	add	r0, r0, #-2147483648	; 0x80000000
   15ba8:	movw	r1, #0
   15bac:	cmp	r1, r0
   15bb0:	blt	15c8c <__assert_fail@plt+0x4c98>
   15bb4:	b	15ca0 <__assert_fail@plt+0x4cac>
   15bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bbc:	movw	r1, #0
   15bc0:	cmp	r1, r0
   15bc4:	bge	15ca0 <__assert_fail@plt+0x4cac>
   15bc8:	ldr	r0, [pc, #1804]	; 162dc <__assert_fail@plt+0x52e8>
   15bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bd0:	sub	r1, r1, #1
   15bd4:	cmp	r0, r1
   15bd8:	blt	15c8c <__assert_fail@plt+0x4c98>
   15bdc:	b	15ca0 <__assert_fail@plt+0x4cac>
   15be0:	ldr	r0, [pc, #4072]	; 16bd0 <__assert_fail@plt+0x5bdc>
   15be4:	ldr	r1, [fp, #8]
   15be8:	sdiv	r0, r0, r1
   15bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bf0:	cmp	r0, r1
   15bf4:	blt	15c8c <__assert_fail@plt+0x4c98>
   15bf8:	b	15ca0 <__assert_fail@plt+0x4cac>
   15bfc:	ldr	r0, [fp, #8]
   15c00:	cmp	r0, #0
   15c04:	bne	15c0c <__assert_fail@plt+0x4c18>
   15c08:	b	15ca0 <__assert_fail@plt+0x4cac>
   15c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c10:	cmp	r0, #0
   15c14:	bge	15c74 <__assert_fail@plt+0x4c80>
   15c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c1c:	cmn	r0, #1
   15c20:	bne	15c58 <__assert_fail@plt+0x4c64>
   15c24:	b	15c28 <__assert_fail@plt+0x4c34>
   15c28:	ldr	r0, [fp, #8]
   15c2c:	add	r0, r0, #-2147483648	; 0x80000000
   15c30:	movw	r1, #0
   15c34:	cmp	r1, r0
   15c38:	blt	15c8c <__assert_fail@plt+0x4c98>
   15c3c:	b	15ca0 <__assert_fail@plt+0x4cac>
   15c40:	ldr	r0, [pc, #1684]	; 162dc <__assert_fail@plt+0x52e8>
   15c44:	ldr	r1, [fp, #8]
   15c48:	sub	r1, r1, #1
   15c4c:	cmp	r0, r1
   15c50:	blt	15c8c <__assert_fail@plt+0x4c98>
   15c54:	b	15ca0 <__assert_fail@plt+0x4cac>
   15c58:	ldr	r0, [pc, #3952]	; 16bd0 <__assert_fail@plt+0x5bdc>
   15c5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c60:	sdiv	r0, r0, r1
   15c64:	ldr	r1, [fp, #8]
   15c68:	cmp	r0, r1
   15c6c:	blt	15c8c <__assert_fail@plt+0x4c98>
   15c70:	b	15ca0 <__assert_fail@plt+0x4cac>
   15c74:	ldr	r0, [pc, #1632]	; 162dc <__assert_fail@plt+0x52e8>
   15c78:	ldr	r1, [fp, #8]
   15c7c:	sdiv	r0, r0, r1
   15c80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c84:	cmp	r0, r1
   15c88:	bge	15ca0 <__assert_fail@plt+0x4cac>
   15c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c90:	ldr	r1, [fp, #8]
   15c94:	mul	r0, r0, r1
   15c98:	str	r0, [fp, #-28]	; 0xffffffe4
   15c9c:	b	16728 <__assert_fail@plt+0x5734>
   15ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ca4:	ldr	r1, [fp, #8]
   15ca8:	mul	r0, r0, r1
   15cac:	str	r0, [fp, #-28]	; 0xffffffe4
   15cb0:	b	16738 <__assert_fail@plt+0x5744>
   15cb4:	ldr	r0, [fp, #8]
   15cb8:	cmp	r0, #0
   15cbc:	bge	15dcc <__assert_fail@plt+0x4dd8>
   15cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cc4:	cmp	r0, #0
   15cc8:	bge	15d54 <__assert_fail@plt+0x4d60>
   15ccc:	b	15cec <__assert_fail@plt+0x4cf8>
   15cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cd4:	ldr	r1, [fp, #8]
   15cd8:	mvn	r2, #0
   15cdc:	udiv	r1, r2, r1
   15ce0:	cmp	r0, r1
   15ce4:	bcc	15e68 <__assert_fail@plt+0x4e74>
   15ce8:	b	15e7c <__assert_fail@plt+0x4e88>
   15cec:	b	15cf0 <__assert_fail@plt+0x4cfc>
   15cf0:	ldr	r0, [pc, #1656]	; 16370 <__assert_fail@plt+0x537c>
   15cf4:	ldr	r1, [fp, #8]
   15cf8:	cmp	r1, r0
   15cfc:	blt	15d14 <__assert_fail@plt+0x4d20>
   15d00:	b	15d20 <__assert_fail@plt+0x4d2c>
   15d04:	ldr	r0, [fp, #8]
   15d08:	movw	r1, #0
   15d0c:	cmp	r1, r0
   15d10:	bge	15d20 <__assert_fail@plt+0x4d2c>
   15d14:	movw	r0, #1
   15d18:	str	r0, [fp, #-60]	; 0xffffffc4
   15d1c:	b	15d38 <__assert_fail@plt+0x4d44>
   15d20:	ldr	r0, [fp, #8]
   15d24:	movw	r1, #0
   15d28:	sub	r0, r1, r0
   15d2c:	mvn	r1, #0
   15d30:	udiv	r0, r1, r0
   15d34:	str	r0, [fp, #-60]	; 0xffffffc4
   15d38:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15d3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d40:	mvn	r2, #0
   15d44:	sub	r1, r2, r1
   15d48:	cmp	r0, r1
   15d4c:	bls	15e68 <__assert_fail@plt+0x4e74>
   15d50:	b	15e7c <__assert_fail@plt+0x4e88>
   15d54:	b	15d58 <__assert_fail@plt+0x4d64>
   15d58:	b	15db0 <__assert_fail@plt+0x4dbc>
   15d5c:	b	15db0 <__assert_fail@plt+0x4dbc>
   15d60:	ldr	r0, [fp, #8]
   15d64:	cmn	r0, #1
   15d68:	bne	15db0 <__assert_fail@plt+0x4dbc>
   15d6c:	b	15d70 <__assert_fail@plt+0x4d7c>
   15d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d74:	add	r0, r0, #0
   15d78:	movw	r1, #0
   15d7c:	cmp	r1, r0
   15d80:	blt	15e68 <__assert_fail@plt+0x4e74>
   15d84:	b	15e7c <__assert_fail@plt+0x4e88>
   15d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d8c:	movw	r1, #0
   15d90:	cmp	r1, r0
   15d94:	bge	15e7c <__assert_fail@plt+0x4e88>
   15d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d9c:	sub	r0, r0, #1
   15da0:	mvn	r1, #0
   15da4:	cmp	r1, r0
   15da8:	blt	15e68 <__assert_fail@plt+0x4e74>
   15dac:	b	15e7c <__assert_fail@plt+0x4e88>
   15db0:	ldr	r0, [fp, #8]
   15db4:	movw	r1, #0
   15db8:	sdiv	r0, r1, r0
   15dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15dc0:	cmp	r0, r1
   15dc4:	blt	15e68 <__assert_fail@plt+0x4e74>
   15dc8:	b	15e7c <__assert_fail@plt+0x4e88>
   15dcc:	ldr	r0, [fp, #8]
   15dd0:	cmp	r0, #0
   15dd4:	bne	15ddc <__assert_fail@plt+0x4de8>
   15dd8:	b	15e7c <__assert_fail@plt+0x4e88>
   15ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15de0:	cmp	r0, #0
   15de4:	bge	15e50 <__assert_fail@plt+0x4e5c>
   15de8:	b	15dec <__assert_fail@plt+0x4df8>
   15dec:	b	15e34 <__assert_fail@plt+0x4e40>
   15df0:	b	15e34 <__assert_fail@plt+0x4e40>
   15df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15df8:	cmn	r0, #1
   15dfc:	bne	15e34 <__assert_fail@plt+0x4e40>
   15e00:	b	15e04 <__assert_fail@plt+0x4e10>
   15e04:	ldr	r0, [fp, #8]
   15e08:	add	r0, r0, #0
   15e0c:	movw	r1, #0
   15e10:	cmp	r1, r0
   15e14:	blt	15e68 <__assert_fail@plt+0x4e74>
   15e18:	b	15e7c <__assert_fail@plt+0x4e88>
   15e1c:	ldr	r0, [fp, #8]
   15e20:	sub	r0, r0, #1
   15e24:	mvn	r1, #0
   15e28:	cmp	r1, r0
   15e2c:	blt	15e68 <__assert_fail@plt+0x4e74>
   15e30:	b	15e7c <__assert_fail@plt+0x4e88>
   15e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e38:	movw	r1, #0
   15e3c:	sdiv	r0, r1, r0
   15e40:	ldr	r1, [fp, #8]
   15e44:	cmp	r0, r1
   15e48:	blt	15e68 <__assert_fail@plt+0x4e74>
   15e4c:	b	15e7c <__assert_fail@plt+0x4e88>
   15e50:	ldr	r0, [fp, #8]
   15e54:	mvn	r1, #0
   15e58:	udiv	r0, r1, r0
   15e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e60:	cmp	r0, r1
   15e64:	bcs	15e7c <__assert_fail@plt+0x4e88>
   15e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e6c:	ldr	r1, [fp, #8]
   15e70:	mul	r0, r0, r1
   15e74:	str	r0, [fp, #-28]	; 0xffffffe4
   15e78:	b	16728 <__assert_fail@plt+0x5734>
   15e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e80:	ldr	r1, [fp, #8]
   15e84:	mul	r0, r0, r1
   15e88:	str	r0, [fp, #-28]	; 0xffffffe4
   15e8c:	b	16738 <__assert_fail@plt+0x5744>
   15e90:	b	15e94 <__assert_fail@plt+0x4ea0>
   15e94:	b	15e98 <__assert_fail@plt+0x4ea4>
   15e98:	ldr	r0, [fp, #8]
   15e9c:	cmp	r0, #0
   15ea0:	bge	15fa4 <__assert_fail@plt+0x4fb0>
   15ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ea8:	cmp	r0, #0
   15eac:	bge	15f38 <__assert_fail@plt+0x4f44>
   15eb0:	b	15eb4 <__assert_fail@plt+0x4ec0>
   15eb4:	ldr	r0, [pc, #1056]	; 162dc <__assert_fail@plt+0x52e8>
   15eb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ebc:	ldr	r2, [fp, #8]
   15ec0:	sdiv	r0, r0, r2
   15ec4:	cmp	r1, r0
   15ec8:	blt	16034 <__assert_fail@plt+0x5040>
   15ecc:	b	16048 <__assert_fail@plt+0x5054>
   15ed0:	b	15ed4 <__assert_fail@plt+0x4ee0>
   15ed4:	ldr	r0, [pc, #1172]	; 16370 <__assert_fail@plt+0x537c>
   15ed8:	ldr	r1, [fp, #8]
   15edc:	cmp	r1, r0
   15ee0:	blt	15ef8 <__assert_fail@plt+0x4f04>
   15ee4:	b	15f04 <__assert_fail@plt+0x4f10>
   15ee8:	ldr	r0, [fp, #8]
   15eec:	movw	r1, #0
   15ef0:	cmp	r1, r0
   15ef4:	bge	15f04 <__assert_fail@plt+0x4f10>
   15ef8:	movw	r0, #0
   15efc:	str	r0, [fp, #-64]	; 0xffffffc0
   15f00:	b	15f1c <__assert_fail@plt+0x4f28>
   15f04:	ldr	r0, [pc, #976]	; 162dc <__assert_fail@plt+0x52e8>
   15f08:	ldr	r1, [fp, #8]
   15f0c:	movw	r2, #0
   15f10:	sub	r1, r2, r1
   15f14:	sdiv	r0, r0, r1
   15f18:	str	r0, [fp, #-64]	; 0xffffffc0
   15f1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15f20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f24:	mvn	r2, #0
   15f28:	sub	r1, r2, r1
   15f2c:	cmp	r0, r1
   15f30:	ble	16034 <__assert_fail@plt+0x5040>
   15f34:	b	16048 <__assert_fail@plt+0x5054>
   15f38:	ldr	r0, [fp, #8]
   15f3c:	cmn	r0, #1
   15f40:	bne	15f88 <__assert_fail@plt+0x4f94>
   15f44:	b	15f48 <__assert_fail@plt+0x4f54>
   15f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f4c:	add	r0, r0, #-2147483648	; 0x80000000
   15f50:	movw	r1, #0
   15f54:	cmp	r1, r0
   15f58:	blt	16034 <__assert_fail@plt+0x5040>
   15f5c:	b	16048 <__assert_fail@plt+0x5054>
   15f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f64:	movw	r1, #0
   15f68:	cmp	r1, r0
   15f6c:	bge	16048 <__assert_fail@plt+0x5054>
   15f70:	ldr	r0, [pc, #868]	; 162dc <__assert_fail@plt+0x52e8>
   15f74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f78:	sub	r1, r1, #1
   15f7c:	cmp	r0, r1
   15f80:	blt	16034 <__assert_fail@plt+0x5040>
   15f84:	b	16048 <__assert_fail@plt+0x5054>
   15f88:	ldr	r0, [pc, #3136]	; 16bd0 <__assert_fail@plt+0x5bdc>
   15f8c:	ldr	r1, [fp, #8]
   15f90:	sdiv	r0, r0, r1
   15f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f98:	cmp	r0, r1
   15f9c:	blt	16034 <__assert_fail@plt+0x5040>
   15fa0:	b	16048 <__assert_fail@plt+0x5054>
   15fa4:	ldr	r0, [fp, #8]
   15fa8:	cmp	r0, #0
   15fac:	bne	15fb4 <__assert_fail@plt+0x4fc0>
   15fb0:	b	16048 <__assert_fail@plt+0x5054>
   15fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fb8:	cmp	r0, #0
   15fbc:	bge	1601c <__assert_fail@plt+0x5028>
   15fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fc4:	cmn	r0, #1
   15fc8:	bne	16000 <__assert_fail@plt+0x500c>
   15fcc:	b	15fd0 <__assert_fail@plt+0x4fdc>
   15fd0:	ldr	r0, [fp, #8]
   15fd4:	add	r0, r0, #-2147483648	; 0x80000000
   15fd8:	movw	r1, #0
   15fdc:	cmp	r1, r0
   15fe0:	blt	16034 <__assert_fail@plt+0x5040>
   15fe4:	b	16048 <__assert_fail@plt+0x5054>
   15fe8:	ldr	r0, [pc, #748]	; 162dc <__assert_fail@plt+0x52e8>
   15fec:	ldr	r1, [fp, #8]
   15ff0:	sub	r1, r1, #1
   15ff4:	cmp	r0, r1
   15ff8:	blt	16034 <__assert_fail@plt+0x5040>
   15ffc:	b	16048 <__assert_fail@plt+0x5054>
   16000:	ldr	r0, [pc, #3016]	; 16bd0 <__assert_fail@plt+0x5bdc>
   16004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16008:	sdiv	r0, r0, r1
   1600c:	ldr	r1, [fp, #8]
   16010:	cmp	r0, r1
   16014:	blt	16034 <__assert_fail@plt+0x5040>
   16018:	b	16048 <__assert_fail@plt+0x5054>
   1601c:	ldr	r0, [pc, #696]	; 162dc <__assert_fail@plt+0x52e8>
   16020:	ldr	r1, [fp, #8]
   16024:	sdiv	r0, r0, r1
   16028:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1602c:	cmp	r0, r1
   16030:	bge	16048 <__assert_fail@plt+0x5054>
   16034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16038:	ldr	r1, [fp, #8]
   1603c:	mul	r0, r0, r1
   16040:	str	r0, [fp, #-28]	; 0xffffffe4
   16044:	b	16728 <__assert_fail@plt+0x5734>
   16048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1604c:	ldr	r1, [fp, #8]
   16050:	mul	r0, r0, r1
   16054:	str	r0, [fp, #-28]	; 0xffffffe4
   16058:	b	16738 <__assert_fail@plt+0x5744>
   1605c:	ldr	r0, [fp, #8]
   16060:	cmp	r0, #0
   16064:	bge	16174 <__assert_fail@plt+0x5180>
   16068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1606c:	cmp	r0, #0
   16070:	bge	160fc <__assert_fail@plt+0x5108>
   16074:	b	16094 <__assert_fail@plt+0x50a0>
   16078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1607c:	ldr	r1, [fp, #8]
   16080:	mvn	r2, #0
   16084:	udiv	r1, r2, r1
   16088:	cmp	r0, r1
   1608c:	bcc	16210 <__assert_fail@plt+0x521c>
   16090:	b	16224 <__assert_fail@plt+0x5230>
   16094:	b	16098 <__assert_fail@plt+0x50a4>
   16098:	ldr	r0, [pc, #720]	; 16370 <__assert_fail@plt+0x537c>
   1609c:	ldr	r1, [fp, #8]
   160a0:	cmp	r1, r0
   160a4:	blt	160bc <__assert_fail@plt+0x50c8>
   160a8:	b	160c8 <__assert_fail@plt+0x50d4>
   160ac:	ldr	r0, [fp, #8]
   160b0:	movw	r1, #0
   160b4:	cmp	r1, r0
   160b8:	bge	160c8 <__assert_fail@plt+0x50d4>
   160bc:	movw	r0, #1
   160c0:	str	r0, [fp, #-68]	; 0xffffffbc
   160c4:	b	160e0 <__assert_fail@plt+0x50ec>
   160c8:	ldr	r0, [fp, #8]
   160cc:	movw	r1, #0
   160d0:	sub	r0, r1, r0
   160d4:	mvn	r1, #0
   160d8:	udiv	r0, r1, r0
   160dc:	str	r0, [fp, #-68]	; 0xffffffbc
   160e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160e8:	mvn	r2, #0
   160ec:	sub	r1, r2, r1
   160f0:	cmp	r0, r1
   160f4:	bls	16210 <__assert_fail@plt+0x521c>
   160f8:	b	16224 <__assert_fail@plt+0x5230>
   160fc:	b	16100 <__assert_fail@plt+0x510c>
   16100:	b	16158 <__assert_fail@plt+0x5164>
   16104:	b	16158 <__assert_fail@plt+0x5164>
   16108:	ldr	r0, [fp, #8]
   1610c:	cmn	r0, #1
   16110:	bne	16158 <__assert_fail@plt+0x5164>
   16114:	b	16118 <__assert_fail@plt+0x5124>
   16118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1611c:	add	r0, r0, #0
   16120:	movw	r1, #0
   16124:	cmp	r1, r0
   16128:	blt	16210 <__assert_fail@plt+0x521c>
   1612c:	b	16224 <__assert_fail@plt+0x5230>
   16130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16134:	movw	r1, #0
   16138:	cmp	r1, r0
   1613c:	bge	16224 <__assert_fail@plt+0x5230>
   16140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16144:	sub	r0, r0, #1
   16148:	mvn	r1, #0
   1614c:	cmp	r1, r0
   16150:	blt	16210 <__assert_fail@plt+0x521c>
   16154:	b	16224 <__assert_fail@plt+0x5230>
   16158:	ldr	r0, [fp, #8]
   1615c:	movw	r1, #0
   16160:	sdiv	r0, r1, r0
   16164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16168:	cmp	r0, r1
   1616c:	blt	16210 <__assert_fail@plt+0x521c>
   16170:	b	16224 <__assert_fail@plt+0x5230>
   16174:	ldr	r0, [fp, #8]
   16178:	cmp	r0, #0
   1617c:	bne	16184 <__assert_fail@plt+0x5190>
   16180:	b	16224 <__assert_fail@plt+0x5230>
   16184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16188:	cmp	r0, #0
   1618c:	bge	161f8 <__assert_fail@plt+0x5204>
   16190:	b	16194 <__assert_fail@plt+0x51a0>
   16194:	b	161dc <__assert_fail@plt+0x51e8>
   16198:	b	161dc <__assert_fail@plt+0x51e8>
   1619c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161a0:	cmn	r0, #1
   161a4:	bne	161dc <__assert_fail@plt+0x51e8>
   161a8:	b	161ac <__assert_fail@plt+0x51b8>
   161ac:	ldr	r0, [fp, #8]
   161b0:	add	r0, r0, #0
   161b4:	movw	r1, #0
   161b8:	cmp	r1, r0
   161bc:	blt	16210 <__assert_fail@plt+0x521c>
   161c0:	b	16224 <__assert_fail@plt+0x5230>
   161c4:	ldr	r0, [fp, #8]
   161c8:	sub	r0, r0, #1
   161cc:	mvn	r1, #0
   161d0:	cmp	r1, r0
   161d4:	blt	16210 <__assert_fail@plt+0x521c>
   161d8:	b	16224 <__assert_fail@plt+0x5230>
   161dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161e0:	movw	r1, #0
   161e4:	sdiv	r0, r1, r0
   161e8:	ldr	r1, [fp, #8]
   161ec:	cmp	r0, r1
   161f0:	blt	16210 <__assert_fail@plt+0x521c>
   161f4:	b	16224 <__assert_fail@plt+0x5230>
   161f8:	ldr	r0, [fp, #8]
   161fc:	mvn	r1, #0
   16200:	udiv	r0, r1, r0
   16204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16208:	cmp	r0, r1
   1620c:	bcs	16224 <__assert_fail@plt+0x5230>
   16210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16214:	ldr	r1, [fp, #8]
   16218:	mul	r0, r0, r1
   1621c:	str	r0, [fp, #-28]	; 0xffffffe4
   16220:	b	16728 <__assert_fail@plt+0x5734>
   16224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16228:	ldr	r1, [fp, #8]
   1622c:	mul	r0, r0, r1
   16230:	str	r0, [fp, #-28]	; 0xffffffe4
   16234:	b	16738 <__assert_fail@plt+0x5744>
   16238:	b	1623c <__assert_fail@plt+0x5248>
   1623c:	ldr	r0, [fp, #8]
   16240:	cmp	r0, #0
   16244:	bge	163d4 <__assert_fail@plt+0x53e0>
   16248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1624c:	cmp	r0, #0
   16250:	bge	1633c <__assert_fail@plt+0x5348>
   16254:	b	16258 <__assert_fail@plt+0x5264>
   16258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1625c:	ldr	r1, [fp, #8]
   16260:	asr	r3, r1, #31
   16264:	mvn	r2, #0
   16268:	mvn	ip, #-2147483648	; 0x80000000
   1626c:	str	r0, [fp, #-72]	; 0xffffffb8
   16270:	mov	r0, r2
   16274:	str	r1, [fp, #-76]	; 0xffffffb4
   16278:	mov	r1, ip
   1627c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16280:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   16284:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16288:	subs	r0, r2, r0
   1628c:	rscs	r1, r1, r2, asr #31
   16290:	str	r0, [fp, #-80]	; 0xffffffb0
   16294:	str	r1, [fp, #-84]	; 0xffffffac
   16298:	blt	164b4 <__assert_fail@plt+0x54c0>
   1629c:	b	164c8 <__assert_fail@plt+0x54d4>
   162a0:	b	162a4 <__assert_fail@plt+0x52b0>
   162a4:	ldr	r0, [pc, #196]	; 16370 <__assert_fail@plt+0x537c>
   162a8:	ldr	r1, [fp, #8]
   162ac:	cmp	r1, r0
   162b0:	blt	162c8 <__assert_fail@plt+0x52d4>
   162b4:	b	162e0 <__assert_fail@plt+0x52ec>
   162b8:	ldr	r0, [fp, #8]
   162bc:	movw	r1, #0
   162c0:	cmp	r1, r0
   162c4:	bge	162e0 <__assert_fail@plt+0x52ec>
   162c8:	mov	r0, #0
   162cc:	mvn	r1, #0
   162d0:	str	r1, [fp, #-88]	; 0xffffffa8
   162d4:	str	r0, [fp, #-92]	; 0xffffffa4
   162d8:	b	16314 <__assert_fail@plt+0x5320>
   162dc:	svcvc	0x00ffffff
   162e0:	ldr	r0, [fp, #8]
   162e4:	rsb	r0, r0, #0
   162e8:	asr	r3, r0, #31
   162ec:	mvn	r1, #0
   162f0:	mvn	r2, #-2147483648	; 0x80000000
   162f4:	str	r0, [fp, #-96]	; 0xffffffa0
   162f8:	mov	r0, r1
   162fc:	mov	r1, r2
   16300:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16304:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   16308:	str	r0, [fp, #-88]	; 0xffffffa8
   1630c:	str	r1, [fp, #-92]	; 0xffffffa4
   16310:	b	16314 <__assert_fail@plt+0x5320>
   16314:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16318:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1631c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16320:	mvn	r2, r2
   16324:	subs	r1, r2, r1
   16328:	rscs	r0, r0, r2, asr #31
   1632c:	str	r1, [fp, #-100]	; 0xffffff9c
   16330:	str	r0, [fp, #-104]	; 0xffffff98
   16334:	bge	164b4 <__assert_fail@plt+0x54c0>
   16338:	b	164c8 <__assert_fail@plt+0x54d4>
   1633c:	ldr	r0, [fp, #8]
   16340:	cmn	r0, #1
   16344:	bne	16394 <__assert_fail@plt+0x53a0>
   16348:	b	1634c <__assert_fail@plt+0x5358>
   1634c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16350:	mov	r1, #-2147483648	; 0x80000000
   16354:	add	r1, r1, r0, asr #31
   16358:	rsbs	r0, r0, #0
   1635c:	rscs	r1, r1, #0
   16360:	str	r0, [fp, #-108]	; 0xffffff94
   16364:	str	r1, [fp, #-112]	; 0xffffff90
   16368:	blt	164b4 <__assert_fail@plt+0x54c0>
   1636c:	b	164c8 <__assert_fail@plt+0x54d4>
   16370:	andhi	r0, r0, r1
   16374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16378:	movw	r1, #0
   1637c:	cmp	r1, r0
   16380:	bge	164c8 <__assert_fail@plt+0x54d4>
   16384:	mov	r0, #0
   16388:	cmp	r0, #0
   1638c:	bne	164b4 <__assert_fail@plt+0x54c0>
   16390:	b	164c8 <__assert_fail@plt+0x54d4>
   16394:	ldr	r0, [fp, #8]
   16398:	asr	r3, r0, #31
   1639c:	mov	r1, #0
   163a0:	mov	r2, #-2147483648	; 0x80000000
   163a4:	str	r0, [fp, #-116]	; 0xffffff8c
   163a8:	mov	r0, r1
   163ac:	mov	r1, r2
   163b0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   163b4:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   163b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   163bc:	subs	r0, r0, r2
   163c0:	sbcs	r1, r1, r2, asr #31
   163c4:	str	r0, [fp, #-120]	; 0xffffff88
   163c8:	str	r1, [fp, #-124]	; 0xffffff84
   163cc:	blt	164b4 <__assert_fail@plt+0x54c0>
   163d0:	b	164c8 <__assert_fail@plt+0x54d4>
   163d4:	ldr	r0, [fp, #8]
   163d8:	cmp	r0, #0
   163dc:	bne	163e4 <__assert_fail@plt+0x53f0>
   163e0:	b	164c8 <__assert_fail@plt+0x54d4>
   163e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163e8:	cmp	r0, #0
   163ec:	bge	16474 <__assert_fail@plt+0x5480>
   163f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163f4:	cmn	r0, #1
   163f8:	bne	16434 <__assert_fail@plt+0x5440>
   163fc:	b	16400 <__assert_fail@plt+0x540c>
   16400:	ldr	r0, [fp, #8]
   16404:	mov	r1, #-2147483648	; 0x80000000
   16408:	add	r1, r1, r0, asr #31
   1640c:	rsbs	r0, r0, #0
   16410:	rscs	r1, r1, #0
   16414:	str	r0, [fp, #-128]	; 0xffffff80
   16418:	str	r1, [fp, #-132]	; 0xffffff7c
   1641c:	blt	164b4 <__assert_fail@plt+0x54c0>
   16420:	b	164c8 <__assert_fail@plt+0x54d4>
   16424:	mov	r0, #0
   16428:	cmp	r0, #0
   1642c:	bne	164b4 <__assert_fail@plt+0x54c0>
   16430:	b	164c8 <__assert_fail@plt+0x54d4>
   16434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16438:	asr	r3, r0, #31
   1643c:	mov	r1, #0
   16440:	mov	r2, #-2147483648	; 0x80000000
   16444:	str	r0, [fp, #-136]	; 0xffffff78
   16448:	mov	r0, r1
   1644c:	mov	r1, r2
   16450:	ldr	r2, [fp, #-136]	; 0xffffff78
   16454:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   16458:	ldr	r2, [fp, #8]
   1645c:	subs	r0, r0, r2
   16460:	sbcs	r1, r1, r2, asr #31
   16464:	str	r0, [fp, #-140]	; 0xffffff74
   16468:	str	r1, [fp, #-144]	; 0xffffff70
   1646c:	blt	164b4 <__assert_fail@plt+0x54c0>
   16470:	b	164c8 <__assert_fail@plt+0x54d4>
   16474:	ldr	r0, [fp, #8]
   16478:	asr	r3, r0, #31
   1647c:	mvn	r1, #0
   16480:	mvn	r2, #-2147483648	; 0x80000000
   16484:	str	r0, [fp, #-148]	; 0xffffff6c
   16488:	mov	r0, r1
   1648c:	mov	r1, r2
   16490:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16494:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   16498:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1649c:	subs	r0, r0, r2
   164a0:	sbcs	r1, r1, r2, asr #31
   164a4:	str	r0, [fp, #-152]	; 0xffffff68
   164a8:	str	r1, [fp, #-156]	; 0xffffff64
   164ac:	bge	164c8 <__assert_fail@plt+0x54d4>
   164b0:	b	164b4 <__assert_fail@plt+0x54c0>
   164b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164b8:	ldr	r1, [fp, #8]
   164bc:	mul	r0, r0, r1
   164c0:	str	r0, [fp, #-28]	; 0xffffffe4
   164c4:	b	16728 <__assert_fail@plt+0x5734>
   164c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164cc:	ldr	r1, [fp, #8]
   164d0:	mul	r0, r0, r1
   164d4:	str	r0, [fp, #-28]	; 0xffffffe4
   164d8:	b	16738 <__assert_fail@plt+0x5744>
   164dc:	ldr	r0, [fp, #8]
   164e0:	cmp	r0, #0
   164e4:	bge	16644 <__assert_fail@plt+0x5650>
   164e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164ec:	cmp	r0, #0
   164f0:	bge	165cc <__assert_fail@plt+0x55d8>
   164f4:	b	1653c <__assert_fail@plt+0x5548>
   164f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164fc:	ldr	r1, [fp, #8]
   16500:	asr	r3, r1, #31
   16504:	mvn	r2, #0
   16508:	str	r0, [fp, #-160]	; 0xffffff60
   1650c:	mov	r0, r2
   16510:	str	r1, [fp, #-164]	; 0xffffff5c
   16514:	mov	r1, r2
   16518:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1651c:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   16520:	ldr	r2, [fp, #-160]	; 0xffffff60
   16524:	subs	r0, r2, r0
   16528:	rscs	r1, r1, r2, asr #31
   1652c:	str	r0, [fp, #-168]	; 0xffffff58
   16530:	str	r1, [fp, #-172]	; 0xffffff54
   16534:	bcc	16700 <__assert_fail@plt+0x570c>
   16538:	b	16714 <__assert_fail@plt+0x5720>
   1653c:	b	16540 <__assert_fail@plt+0x554c>
   16540:	ldr	r0, [pc, #-472]	; 16370 <__assert_fail@plt+0x537c>
   16544:	ldr	r1, [fp, #8]
   16548:	cmp	r1, r0
   1654c:	blt	16564 <__assert_fail@plt+0x5570>
   16550:	b	16578 <__assert_fail@plt+0x5584>
   16554:	ldr	r0, [fp, #8]
   16558:	movw	r1, #0
   1655c:	cmp	r1, r0
   16560:	bge	16578 <__assert_fail@plt+0x5584>
   16564:	mov	r0, #1
   16568:	mvn	r1, #0
   1656c:	str	r1, [fp, #-176]	; 0xffffff50
   16570:	str	r0, [fp, #-180]	; 0xffffff4c
   16574:	b	165a4 <__assert_fail@plt+0x55b0>
   16578:	ldr	r0, [fp, #8]
   1657c:	rsb	r0, r0, #0
   16580:	asr	r3, r0, #31
   16584:	mvn	r1, #0
   16588:	str	r0, [fp, #-184]	; 0xffffff48
   1658c:	mov	r0, r1
   16590:	ldr	r2, [fp, #-184]	; 0xffffff48
   16594:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   16598:	str	r0, [fp, #-176]	; 0xffffff50
   1659c:	str	r1, [fp, #-180]	; 0xffffff4c
   165a0:	b	165a4 <__assert_fail@plt+0x55b0>
   165a4:	ldr	r0, [fp, #-180]	; 0xffffff4c
   165a8:	ldr	r1, [fp, #-176]	; 0xffffff50
   165ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   165b0:	mvn	r2, r2
   165b4:	subs	r1, r2, r1
   165b8:	rscs	r0, r0, r2, asr #31
   165bc:	str	r1, [sp, #188]	; 0xbc
   165c0:	str	r0, [sp, #184]	; 0xb8
   165c4:	bcs	16700 <__assert_fail@plt+0x570c>
   165c8:	b	16714 <__assert_fail@plt+0x5720>
   165cc:	b	165d0 <__assert_fail@plt+0x55dc>
   165d0:	b	16628 <__assert_fail@plt+0x5634>
   165d4:	b	16628 <__assert_fail@plt+0x5634>
   165d8:	ldr	r0, [fp, #8]
   165dc:	cmn	r0, #1
   165e0:	bne	16628 <__assert_fail@plt+0x5634>
   165e4:	b	165e8 <__assert_fail@plt+0x55f4>
   165e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165ec:	add	r0, r0, #0
   165f0:	movw	r1, #0
   165f4:	cmp	r1, r0
   165f8:	blt	16700 <__assert_fail@plt+0x570c>
   165fc:	b	16714 <__assert_fail@plt+0x5720>
   16600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16604:	movw	r1, #0
   16608:	cmp	r1, r0
   1660c:	bge	16714 <__assert_fail@plt+0x5720>
   16610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16614:	sub	r0, r0, #1
   16618:	mvn	r1, #0
   1661c:	cmp	r1, r0
   16620:	blt	16700 <__assert_fail@plt+0x570c>
   16624:	b	16714 <__assert_fail@plt+0x5720>
   16628:	ldr	r0, [fp, #8]
   1662c:	movw	r1, #0
   16630:	sdiv	r0, r1, r0
   16634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16638:	cmp	r0, r1
   1663c:	blt	16700 <__assert_fail@plt+0x570c>
   16640:	b	16714 <__assert_fail@plt+0x5720>
   16644:	ldr	r0, [fp, #8]
   16648:	cmp	r0, #0
   1664c:	bne	16654 <__assert_fail@plt+0x5660>
   16650:	b	16714 <__assert_fail@plt+0x5720>
   16654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16658:	cmp	r0, #0
   1665c:	bge	166c8 <__assert_fail@plt+0x56d4>
   16660:	b	16664 <__assert_fail@plt+0x5670>
   16664:	b	166ac <__assert_fail@plt+0x56b8>
   16668:	b	166ac <__assert_fail@plt+0x56b8>
   1666c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16670:	cmn	r0, #1
   16674:	bne	166ac <__assert_fail@plt+0x56b8>
   16678:	b	1667c <__assert_fail@plt+0x5688>
   1667c:	ldr	r0, [fp, #8]
   16680:	add	r0, r0, #0
   16684:	movw	r1, #0
   16688:	cmp	r1, r0
   1668c:	blt	16700 <__assert_fail@plt+0x570c>
   16690:	b	16714 <__assert_fail@plt+0x5720>
   16694:	ldr	r0, [fp, #8]
   16698:	sub	r0, r0, #1
   1669c:	mvn	r1, #0
   166a0:	cmp	r1, r0
   166a4:	blt	16700 <__assert_fail@plt+0x570c>
   166a8:	b	16714 <__assert_fail@plt+0x5720>
   166ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166b0:	movw	r1, #0
   166b4:	sdiv	r0, r1, r0
   166b8:	ldr	r1, [fp, #8]
   166bc:	cmp	r0, r1
   166c0:	blt	16700 <__assert_fail@plt+0x570c>
   166c4:	b	16714 <__assert_fail@plt+0x5720>
   166c8:	ldr	r0, [fp, #8]
   166cc:	asr	r3, r0, #31
   166d0:	mvn	r1, #0
   166d4:	str	r0, [sp, #180]	; 0xb4
   166d8:	mov	r0, r1
   166dc:	ldr	r2, [sp, #180]	; 0xb4
   166e0:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   166e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166e8:	subs	r0, r0, r2
   166ec:	sbcs	r1, r1, r2, asr #31
   166f0:	str	r0, [sp, #176]	; 0xb0
   166f4:	str	r1, [sp, #172]	; 0xac
   166f8:	bcs	16714 <__assert_fail@plt+0x5720>
   166fc:	b	16700 <__assert_fail@plt+0x570c>
   16700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16704:	ldr	r1, [fp, #8]
   16708:	mul	r0, r0, r1
   1670c:	str	r0, [fp, #-28]	; 0xffffffe4
   16710:	b	16728 <__assert_fail@plt+0x5734>
   16714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16718:	ldr	r1, [fp, #8]
   1671c:	mul	r0, r0, r1
   16720:	str	r0, [fp, #-28]	; 0xffffffe4
   16724:	b	16738 <__assert_fail@plt+0x5744>
   16728:	ldr	r0, [pc, #-1108]	; 162dc <__assert_fail@plt+0x52e8>
   1672c:	str	r0, [sp, #168]	; 0xa8
   16730:	b	16758 <__assert_fail@plt+0x5764>
   16734:			; <UNDEFINED> instruction: 0xffff8000
   16738:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1673c:	cmp	r0, #64	; 0x40
   16740:	movw	r0, #0
   16744:	movlt	r0, #1
   16748:	tst	r0, #1
   1674c:	movw	r0, #64	; 0x40
   16750:	moveq	r0, #0
   16754:	str	r0, [sp, #168]	; 0xa8
   16758:	ldr	r0, [sp, #168]	; 0xa8
   1675c:	str	r0, [fp, #-32]	; 0xffffffe0
   16760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16764:	cmp	r0, #0
   16768:	beq	16798 <__assert_fail@plt+0x57a4>
   1676c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16770:	ldr	r1, [fp, #8]
   16774:	sdiv	r0, r0, r1
   16778:	str	r0, [fp, #-24]	; 0xffffffe8
   1677c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16780:	mov	r1, r0
   16784:	ldr	r2, [fp, #8]
   16788:	sdiv	r3, r0, r2
   1678c:	mls	r0, r3, r2, r0
   16790:	sub	r0, r1, r0
   16794:	str	r0, [fp, #-28]	; 0xffffffe4
   16798:	ldr	r0, [fp, #-4]
   1679c:	movw	r1, #0
   167a0:	cmp	r0, r1
   167a4:	bne	167b4 <__assert_fail@plt+0x57c0>
   167a8:	ldr	r0, [fp, #-8]
   167ac:	movw	r1, #0
   167b0:	str	r1, [r0]
   167b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   167bc:	sub	r0, r0, r1
   167c0:	ldr	r1, [fp, #-12]
   167c4:	cmp	r0, r1
   167c8:	bge	17c00 <__assert_fail@plt+0x6c0c>
   167cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   167d0:	ldr	r1, [fp, #-12]
   167d4:	add	r1, r0, r1
   167d8:	mov	r2, #1
   167dc:	cmp	r1, r0
   167e0:	movwvc	r2, #0
   167e4:	str	r1, [fp, #-24]	; 0xffffffe8
   167e8:	tst	r2, #1
   167ec:	bne	17bfc <__assert_fail@plt+0x6c08>
   167f0:	ldr	r0, [fp, #-16]
   167f4:	movw	r1, #0
   167f8:	cmp	r1, r0
   167fc:	bgt	16810 <__assert_fail@plt+0x581c>
   16800:	ldr	r0, [fp, #-16]
   16804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16808:	cmp	r0, r1
   1680c:	blt	17bfc <__assert_fail@plt+0x6c08>
   16810:	b	16bec <__assert_fail@plt+0x5bf8>
   16814:	b	16818 <__assert_fail@plt+0x5824>
   16818:	ldr	r0, [fp, #8]
   1681c:	cmp	r0, #0
   16820:	bge	16934 <__assert_fail@plt+0x5940>
   16824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16828:	cmp	r0, #0
   1682c:	bge	168b8 <__assert_fail@plt+0x58c4>
   16830:	b	16834 <__assert_fail@plt+0x5840>
   16834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16838:	ldr	r1, [fp, #8]
   1683c:	movw	r2, #127	; 0x7f
   16840:	sdiv	r1, r2, r1
   16844:	cmp	r0, r1
   16848:	blt	169d4 <__assert_fail@plt+0x59e0>
   1684c:	b	169ec <__assert_fail@plt+0x59f8>
   16850:	b	16854 <__assert_fail@plt+0x5860>
   16854:	ldr	r0, [pc, #-1260]	; 16370 <__assert_fail@plt+0x537c>
   16858:	ldr	r1, [fp, #8]
   1685c:	cmp	r1, r0
   16860:	blt	16878 <__assert_fail@plt+0x5884>
   16864:	b	16884 <__assert_fail@plt+0x5890>
   16868:	ldr	r0, [fp, #8]
   1686c:	movw	r1, #0
   16870:	cmp	r1, r0
   16874:	bge	16884 <__assert_fail@plt+0x5890>
   16878:	movw	r0, #0
   1687c:	str	r0, [sp, #164]	; 0xa4
   16880:	b	1689c <__assert_fail@plt+0x58a8>
   16884:	ldr	r0, [fp, #8]
   16888:	movw	r1, #0
   1688c:	sub	r0, r1, r0
   16890:	movw	r1, #127	; 0x7f
   16894:	sdiv	r0, r1, r0
   16898:	str	r0, [sp, #164]	; 0xa4
   1689c:	ldr	r0, [sp, #164]	; 0xa4
   168a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168a4:	mvn	r2, #0
   168a8:	sub	r1, r2, r1
   168ac:	cmp	r0, r1
   168b0:	ble	169d4 <__assert_fail@plt+0x59e0>
   168b4:	b	169ec <__assert_fail@plt+0x59f8>
   168b8:	b	168bc <__assert_fail@plt+0x58c8>
   168bc:	b	16918 <__assert_fail@plt+0x5924>
   168c0:	b	16918 <__assert_fail@plt+0x5924>
   168c4:	ldr	r0, [fp, #8]
   168c8:	cmn	r0, #1
   168cc:	bne	16918 <__assert_fail@plt+0x5924>
   168d0:	b	168d4 <__assert_fail@plt+0x58e0>
   168d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168d8:	mvn	r1, #127	; 0x7f
   168dc:	add	r0, r0, r1
   168e0:	movw	r1, #0
   168e4:	cmp	r1, r0
   168e8:	blt	169d4 <__assert_fail@plt+0x59e0>
   168ec:	b	169ec <__assert_fail@plt+0x59f8>
   168f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168f4:	movw	r1, #0
   168f8:	cmp	r1, r0
   168fc:	bge	169ec <__assert_fail@plt+0x59f8>
   16900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16904:	sub	r0, r0, #1
   16908:	movw	r1, #127	; 0x7f
   1690c:	cmp	r1, r0
   16910:	blt	169d4 <__assert_fail@plt+0x59e0>
   16914:	b	169ec <__assert_fail@plt+0x59f8>
   16918:	ldr	r0, [fp, #8]
   1691c:	mvn	r1, #127	; 0x7f
   16920:	sdiv	r0, r1, r0
   16924:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16928:	cmp	r0, r1
   1692c:	blt	169d4 <__assert_fail@plt+0x59e0>
   16930:	b	169ec <__assert_fail@plt+0x59f8>
   16934:	ldr	r0, [fp, #8]
   16938:	cmp	r0, #0
   1693c:	bne	16944 <__assert_fail@plt+0x5950>
   16940:	b	169ec <__assert_fail@plt+0x59f8>
   16944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16948:	cmp	r0, #0
   1694c:	bge	169bc <__assert_fail@plt+0x59c8>
   16950:	b	16954 <__assert_fail@plt+0x5960>
   16954:	b	169a0 <__assert_fail@plt+0x59ac>
   16958:	b	169a0 <__assert_fail@plt+0x59ac>
   1695c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16960:	cmn	r0, #1
   16964:	bne	169a0 <__assert_fail@plt+0x59ac>
   16968:	b	1696c <__assert_fail@plt+0x5978>
   1696c:	ldr	r0, [fp, #8]
   16970:	mvn	r1, #127	; 0x7f
   16974:	add	r0, r0, r1
   16978:	movw	r1, #0
   1697c:	cmp	r1, r0
   16980:	blt	169d4 <__assert_fail@plt+0x59e0>
   16984:	b	169ec <__assert_fail@plt+0x59f8>
   16988:	ldr	r0, [fp, #8]
   1698c:	sub	r0, r0, #1
   16990:	movw	r1, #127	; 0x7f
   16994:	cmp	r1, r0
   16998:	blt	169d4 <__assert_fail@plt+0x59e0>
   1699c:	b	169ec <__assert_fail@plt+0x59f8>
   169a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169a4:	mvn	r1, #127	; 0x7f
   169a8:	sdiv	r0, r1, r0
   169ac:	ldr	r1, [fp, #8]
   169b0:	cmp	r0, r1
   169b4:	blt	169d4 <__assert_fail@plt+0x59e0>
   169b8:	b	169ec <__assert_fail@plt+0x59f8>
   169bc:	ldr	r0, [fp, #8]
   169c0:	movw	r1, #127	; 0x7f
   169c4:	sdiv	r0, r1, r0
   169c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169cc:	cmp	r0, r1
   169d0:	bge	169ec <__assert_fail@plt+0x59f8>
   169d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169d8:	ldr	r1, [fp, #8]
   169dc:	mul	r0, r0, r1
   169e0:	sxtb	r0, r0
   169e4:	str	r0, [fp, #-28]	; 0xffffffe4
   169e8:	b	17bfc <__assert_fail@plt+0x6c08>
   169ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169f0:	ldr	r1, [fp, #8]
   169f4:	mul	r0, r0, r1
   169f8:	sxtb	r0, r0
   169fc:	str	r0, [fp, #-28]	; 0xffffffe4
   16a00:	b	17c00 <__assert_fail@plt+0x6c0c>
   16a04:	ldr	r0, [fp, #8]
   16a08:	cmp	r0, #0
   16a0c:	bge	16b1c <__assert_fail@plt+0x5b28>
   16a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a14:	cmp	r0, #0
   16a18:	bge	16aa4 <__assert_fail@plt+0x5ab0>
   16a1c:	b	16a20 <__assert_fail@plt+0x5a2c>
   16a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a24:	ldr	r1, [fp, #8]
   16a28:	movw	r2, #255	; 0xff
   16a2c:	sdiv	r1, r2, r1
   16a30:	cmp	r0, r1
   16a34:	blt	16bb8 <__assert_fail@plt+0x5bc4>
   16a38:	b	16bd4 <__assert_fail@plt+0x5be0>
   16a3c:	b	16a40 <__assert_fail@plt+0x5a4c>
   16a40:	ldr	r0, [pc, #-1752]	; 16370 <__assert_fail@plt+0x537c>
   16a44:	ldr	r1, [fp, #8]
   16a48:	cmp	r1, r0
   16a4c:	blt	16a64 <__assert_fail@plt+0x5a70>
   16a50:	b	16a70 <__assert_fail@plt+0x5a7c>
   16a54:	ldr	r0, [fp, #8]
   16a58:	movw	r1, #0
   16a5c:	cmp	r1, r0
   16a60:	bge	16a70 <__assert_fail@plt+0x5a7c>
   16a64:	movw	r0, #0
   16a68:	str	r0, [sp, #160]	; 0xa0
   16a6c:	b	16a88 <__assert_fail@plt+0x5a94>
   16a70:	ldr	r0, [fp, #8]
   16a74:	movw	r1, #0
   16a78:	sub	r0, r1, r0
   16a7c:	movw	r1, #255	; 0xff
   16a80:	sdiv	r0, r1, r0
   16a84:	str	r0, [sp, #160]	; 0xa0
   16a88:	ldr	r0, [sp, #160]	; 0xa0
   16a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a90:	mvn	r2, #0
   16a94:	sub	r1, r2, r1
   16a98:	cmp	r0, r1
   16a9c:	ble	16bb8 <__assert_fail@plt+0x5bc4>
   16aa0:	b	16bd4 <__assert_fail@plt+0x5be0>
   16aa4:	b	16aa8 <__assert_fail@plt+0x5ab4>
   16aa8:	b	16b00 <__assert_fail@plt+0x5b0c>
   16aac:	b	16b00 <__assert_fail@plt+0x5b0c>
   16ab0:	ldr	r0, [fp, #8]
   16ab4:	cmn	r0, #1
   16ab8:	bne	16b00 <__assert_fail@plt+0x5b0c>
   16abc:	b	16ac0 <__assert_fail@plt+0x5acc>
   16ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ac4:	add	r0, r0, #0
   16ac8:	movw	r1, #0
   16acc:	cmp	r1, r0
   16ad0:	blt	16bb8 <__assert_fail@plt+0x5bc4>
   16ad4:	b	16bd4 <__assert_fail@plt+0x5be0>
   16ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16adc:	movw	r1, #0
   16ae0:	cmp	r1, r0
   16ae4:	bge	16bd4 <__assert_fail@plt+0x5be0>
   16ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aec:	sub	r0, r0, #1
   16af0:	mvn	r1, #0
   16af4:	cmp	r1, r0
   16af8:	blt	16bb8 <__assert_fail@plt+0x5bc4>
   16afc:	b	16bd4 <__assert_fail@plt+0x5be0>
   16b00:	ldr	r0, [fp, #8]
   16b04:	movw	r1, #0
   16b08:	sdiv	r0, r1, r0
   16b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b10:	cmp	r0, r1
   16b14:	blt	16bb8 <__assert_fail@plt+0x5bc4>
   16b18:	b	16bd4 <__assert_fail@plt+0x5be0>
   16b1c:	ldr	r0, [fp, #8]
   16b20:	cmp	r0, #0
   16b24:	bne	16b2c <__assert_fail@plt+0x5b38>
   16b28:	b	16bd4 <__assert_fail@plt+0x5be0>
   16b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b30:	cmp	r0, #0
   16b34:	bge	16ba0 <__assert_fail@plt+0x5bac>
   16b38:	b	16b3c <__assert_fail@plt+0x5b48>
   16b3c:	b	16b84 <__assert_fail@plt+0x5b90>
   16b40:	b	16b84 <__assert_fail@plt+0x5b90>
   16b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b48:	cmn	r0, #1
   16b4c:	bne	16b84 <__assert_fail@plt+0x5b90>
   16b50:	b	16b54 <__assert_fail@plt+0x5b60>
   16b54:	ldr	r0, [fp, #8]
   16b58:	add	r0, r0, #0
   16b5c:	movw	r1, #0
   16b60:	cmp	r1, r0
   16b64:	blt	16bb8 <__assert_fail@plt+0x5bc4>
   16b68:	b	16bd4 <__assert_fail@plt+0x5be0>
   16b6c:	ldr	r0, [fp, #8]
   16b70:	sub	r0, r0, #1
   16b74:	mvn	r1, #0
   16b78:	cmp	r1, r0
   16b7c:	blt	16bb8 <__assert_fail@plt+0x5bc4>
   16b80:	b	16bd4 <__assert_fail@plt+0x5be0>
   16b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b88:	movw	r1, #0
   16b8c:	sdiv	r0, r1, r0
   16b90:	ldr	r1, [fp, #8]
   16b94:	cmp	r0, r1
   16b98:	blt	16bb8 <__assert_fail@plt+0x5bc4>
   16b9c:	b	16bd4 <__assert_fail@plt+0x5be0>
   16ba0:	ldr	r0, [fp, #8]
   16ba4:	movw	r1, #255	; 0xff
   16ba8:	sdiv	r0, r1, r0
   16bac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bb0:	cmp	r0, r1
   16bb4:	bge	16bd4 <__assert_fail@plt+0x5be0>
   16bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bbc:	ldr	r1, [fp, #8]
   16bc0:	mul	r0, r0, r1
   16bc4:	and	r0, r0, #255	; 0xff
   16bc8:	str	r0, [fp, #-28]	; 0xffffffe4
   16bcc:	b	17bfc <__assert_fail@plt+0x6c08>
   16bd0:	andhi	r0, r0, r0
   16bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd8:	ldr	r1, [fp, #8]
   16bdc:	mul	r0, r0, r1
   16be0:	and	r0, r0, #255	; 0xff
   16be4:	str	r0, [fp, #-28]	; 0xffffffe4
   16be8:	b	17c00 <__assert_fail@plt+0x6c0c>
   16bec:	b	16fc4 <__assert_fail@plt+0x5fd0>
   16bf0:	b	16bf4 <__assert_fail@plt+0x5c00>
   16bf4:	ldr	r0, [fp, #8]
   16bf8:	cmp	r0, #0
   16bfc:	bge	16d10 <__assert_fail@plt+0x5d1c>
   16c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c04:	cmp	r0, #0
   16c08:	bge	16c94 <__assert_fail@plt+0x5ca0>
   16c0c:	b	16c10 <__assert_fail@plt+0x5c1c>
   16c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c14:	ldr	r1, [fp, #8]
   16c18:	movw	r2, #32767	; 0x7fff
   16c1c:	sdiv	r1, r2, r1
   16c20:	cmp	r0, r1
   16c24:	blt	16db0 <__assert_fail@plt+0x5dbc>
   16c28:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16c2c:	b	16c30 <__assert_fail@plt+0x5c3c>
   16c30:	ldr	r0, [pc, #4084]	; 17c2c <__assert_fail@plt+0x6c38>
   16c34:	ldr	r1, [fp, #8]
   16c38:	cmp	r1, r0
   16c3c:	blt	16c54 <__assert_fail@plt+0x5c60>
   16c40:	b	16c60 <__assert_fail@plt+0x5c6c>
   16c44:	ldr	r0, [fp, #8]
   16c48:	movw	r1, #0
   16c4c:	cmp	r1, r0
   16c50:	bge	16c60 <__assert_fail@plt+0x5c6c>
   16c54:	movw	r0, #0
   16c58:	str	r0, [sp, #156]	; 0x9c
   16c5c:	b	16c78 <__assert_fail@plt+0x5c84>
   16c60:	ldr	r0, [fp, #8]
   16c64:	movw	r1, #0
   16c68:	sub	r0, r1, r0
   16c6c:	movw	r1, #32767	; 0x7fff
   16c70:	sdiv	r0, r1, r0
   16c74:	str	r0, [sp, #156]	; 0x9c
   16c78:	ldr	r0, [sp, #156]	; 0x9c
   16c7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c80:	mvn	r2, #0
   16c84:	sub	r1, r2, r1
   16c88:	cmp	r0, r1
   16c8c:	ble	16db0 <__assert_fail@plt+0x5dbc>
   16c90:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16c94:	b	16c98 <__assert_fail@plt+0x5ca4>
   16c98:	b	16cf4 <__assert_fail@plt+0x5d00>
   16c9c:	b	16cf4 <__assert_fail@plt+0x5d00>
   16ca0:	ldr	r0, [fp, #8]
   16ca4:	cmn	r0, #1
   16ca8:	bne	16cf4 <__assert_fail@plt+0x5d00>
   16cac:	b	16cb0 <__assert_fail@plt+0x5cbc>
   16cb0:	ldr	r0, [pc, #3964]	; 17c34 <__assert_fail@plt+0x6c40>
   16cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cb8:	add	r0, r1, r0
   16cbc:	movw	r1, #0
   16cc0:	cmp	r1, r0
   16cc4:	blt	16db0 <__assert_fail@plt+0x5dbc>
   16cc8:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd0:	movw	r1, #0
   16cd4:	cmp	r1, r0
   16cd8:	bge	16dc8 <__assert_fail@plt+0x5dd4>
   16cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ce0:	sub	r0, r0, #1
   16ce4:	movw	r1, #32767	; 0x7fff
   16ce8:	cmp	r1, r0
   16cec:	blt	16db0 <__assert_fail@plt+0x5dbc>
   16cf0:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16cf4:	ldr	r0, [pc, #3896]	; 17c34 <__assert_fail@plt+0x6c40>
   16cf8:	ldr	r1, [fp, #8]
   16cfc:	sdiv	r0, r0, r1
   16d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d04:	cmp	r0, r1
   16d08:	blt	16db0 <__assert_fail@plt+0x5dbc>
   16d0c:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16d10:	ldr	r0, [fp, #8]
   16d14:	cmp	r0, #0
   16d18:	bne	16d20 <__assert_fail@plt+0x5d2c>
   16d1c:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d24:	cmp	r0, #0
   16d28:	bge	16d98 <__assert_fail@plt+0x5da4>
   16d2c:	b	16d30 <__assert_fail@plt+0x5d3c>
   16d30:	b	16d7c <__assert_fail@plt+0x5d88>
   16d34:	b	16d7c <__assert_fail@plt+0x5d88>
   16d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d3c:	cmn	r0, #1
   16d40:	bne	16d7c <__assert_fail@plt+0x5d88>
   16d44:	b	16d48 <__assert_fail@plt+0x5d54>
   16d48:	ldr	r0, [pc, #3812]	; 17c34 <__assert_fail@plt+0x6c40>
   16d4c:	ldr	r1, [fp, #8]
   16d50:	add	r0, r1, r0
   16d54:	movw	r1, #0
   16d58:	cmp	r1, r0
   16d5c:	blt	16db0 <__assert_fail@plt+0x5dbc>
   16d60:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16d64:	ldr	r0, [fp, #8]
   16d68:	sub	r0, r0, #1
   16d6c:	movw	r1, #32767	; 0x7fff
   16d70:	cmp	r1, r0
   16d74:	blt	16db0 <__assert_fail@plt+0x5dbc>
   16d78:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16d7c:	ldr	r0, [pc, #3760]	; 17c34 <__assert_fail@plt+0x6c40>
   16d80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d84:	sdiv	r0, r0, r1
   16d88:	ldr	r1, [fp, #8]
   16d8c:	cmp	r0, r1
   16d90:	blt	16db0 <__assert_fail@plt+0x5dbc>
   16d94:	b	16dc8 <__assert_fail@plt+0x5dd4>
   16d98:	ldr	r0, [fp, #8]
   16d9c:	movw	r1, #32767	; 0x7fff
   16da0:	sdiv	r0, r1, r0
   16da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16da8:	cmp	r0, r1
   16dac:	bge	16dc8 <__assert_fail@plt+0x5dd4>
   16db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16db4:	ldr	r1, [fp, #8]
   16db8:	mul	r0, r0, r1
   16dbc:	sxth	r0, r0
   16dc0:	str	r0, [fp, #-28]	; 0xffffffe4
   16dc4:	b	17bfc <__assert_fail@plt+0x6c08>
   16dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dcc:	ldr	r1, [fp, #8]
   16dd0:	mul	r0, r0, r1
   16dd4:	sxth	r0, r0
   16dd8:	str	r0, [fp, #-28]	; 0xffffffe4
   16ddc:	b	17c00 <__assert_fail@plt+0x6c0c>
   16de0:	ldr	r0, [fp, #8]
   16de4:	cmp	r0, #0
   16de8:	bge	16ef8 <__assert_fail@plt+0x5f04>
   16dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df0:	cmp	r0, #0
   16df4:	bge	16e80 <__assert_fail@plt+0x5e8c>
   16df8:	b	16dfc <__assert_fail@plt+0x5e08>
   16dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e00:	ldr	r1, [fp, #8]
   16e04:	movw	r2, #65535	; 0xffff
   16e08:	sdiv	r1, r2, r1
   16e0c:	cmp	r0, r1
   16e10:	blt	16f94 <__assert_fail@plt+0x5fa0>
   16e14:	b	16fac <__assert_fail@plt+0x5fb8>
   16e18:	b	16e1c <__assert_fail@plt+0x5e28>
   16e1c:	ldr	r0, [pc, #3592]	; 17c2c <__assert_fail@plt+0x6c38>
   16e20:	ldr	r1, [fp, #8]
   16e24:	cmp	r1, r0
   16e28:	blt	16e40 <__assert_fail@plt+0x5e4c>
   16e2c:	b	16e4c <__assert_fail@plt+0x5e58>
   16e30:	ldr	r0, [fp, #8]
   16e34:	movw	r1, #0
   16e38:	cmp	r1, r0
   16e3c:	bge	16e4c <__assert_fail@plt+0x5e58>
   16e40:	movw	r0, #0
   16e44:	str	r0, [sp, #152]	; 0x98
   16e48:	b	16e64 <__assert_fail@plt+0x5e70>
   16e4c:	ldr	r0, [fp, #8]
   16e50:	movw	r1, #0
   16e54:	sub	r0, r1, r0
   16e58:	movw	r1, #65535	; 0xffff
   16e5c:	sdiv	r0, r1, r0
   16e60:	str	r0, [sp, #152]	; 0x98
   16e64:	ldr	r0, [sp, #152]	; 0x98
   16e68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e6c:	mvn	r2, #0
   16e70:	sub	r1, r2, r1
   16e74:	cmp	r0, r1
   16e78:	ble	16f94 <__assert_fail@plt+0x5fa0>
   16e7c:	b	16fac <__assert_fail@plt+0x5fb8>
   16e80:	b	16e84 <__assert_fail@plt+0x5e90>
   16e84:	b	16edc <__assert_fail@plt+0x5ee8>
   16e88:	b	16edc <__assert_fail@plt+0x5ee8>
   16e8c:	ldr	r0, [fp, #8]
   16e90:	cmn	r0, #1
   16e94:	bne	16edc <__assert_fail@plt+0x5ee8>
   16e98:	b	16e9c <__assert_fail@plt+0x5ea8>
   16e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ea0:	add	r0, r0, #0
   16ea4:	movw	r1, #0
   16ea8:	cmp	r1, r0
   16eac:	blt	16f94 <__assert_fail@plt+0x5fa0>
   16eb0:	b	16fac <__assert_fail@plt+0x5fb8>
   16eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eb8:	movw	r1, #0
   16ebc:	cmp	r1, r0
   16ec0:	bge	16fac <__assert_fail@plt+0x5fb8>
   16ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ec8:	sub	r0, r0, #1
   16ecc:	mvn	r1, #0
   16ed0:	cmp	r1, r0
   16ed4:	blt	16f94 <__assert_fail@plt+0x5fa0>
   16ed8:	b	16fac <__assert_fail@plt+0x5fb8>
   16edc:	ldr	r0, [fp, #8]
   16ee0:	movw	r1, #0
   16ee4:	sdiv	r0, r1, r0
   16ee8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16eec:	cmp	r0, r1
   16ef0:	blt	16f94 <__assert_fail@plt+0x5fa0>
   16ef4:	b	16fac <__assert_fail@plt+0x5fb8>
   16ef8:	ldr	r0, [fp, #8]
   16efc:	cmp	r0, #0
   16f00:	bne	16f08 <__assert_fail@plt+0x5f14>
   16f04:	b	16fac <__assert_fail@plt+0x5fb8>
   16f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f0c:	cmp	r0, #0
   16f10:	bge	16f7c <__assert_fail@plt+0x5f88>
   16f14:	b	16f18 <__assert_fail@plt+0x5f24>
   16f18:	b	16f60 <__assert_fail@plt+0x5f6c>
   16f1c:	b	16f60 <__assert_fail@plt+0x5f6c>
   16f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f24:	cmn	r0, #1
   16f28:	bne	16f60 <__assert_fail@plt+0x5f6c>
   16f2c:	b	16f30 <__assert_fail@plt+0x5f3c>
   16f30:	ldr	r0, [fp, #8]
   16f34:	add	r0, r0, #0
   16f38:	movw	r1, #0
   16f3c:	cmp	r1, r0
   16f40:	blt	16f94 <__assert_fail@plt+0x5fa0>
   16f44:	b	16fac <__assert_fail@plt+0x5fb8>
   16f48:	ldr	r0, [fp, #8]
   16f4c:	sub	r0, r0, #1
   16f50:	mvn	r1, #0
   16f54:	cmp	r1, r0
   16f58:	blt	16f94 <__assert_fail@plt+0x5fa0>
   16f5c:	b	16fac <__assert_fail@plt+0x5fb8>
   16f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f64:	movw	r1, #0
   16f68:	sdiv	r0, r1, r0
   16f6c:	ldr	r1, [fp, #8]
   16f70:	cmp	r0, r1
   16f74:	blt	16f94 <__assert_fail@plt+0x5fa0>
   16f78:	b	16fac <__assert_fail@plt+0x5fb8>
   16f7c:	ldr	r0, [fp, #8]
   16f80:	movw	r1, #65535	; 0xffff
   16f84:	sdiv	r0, r1, r0
   16f88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f8c:	cmp	r0, r1
   16f90:	bge	16fac <__assert_fail@plt+0x5fb8>
   16f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f98:	ldr	r1, [fp, #8]
   16f9c:	mul	r0, r0, r1
   16fa0:	uxth	r0, r0
   16fa4:	str	r0, [fp, #-28]	; 0xffffffe4
   16fa8:	b	17bfc <__assert_fail@plt+0x6c08>
   16fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb0:	ldr	r1, [fp, #8]
   16fb4:	mul	r0, r0, r1
   16fb8:	uxth	r0, r0
   16fbc:	str	r0, [fp, #-28]	; 0xffffffe4
   16fc0:	b	17c00 <__assert_fail@plt+0x6c0c>
   16fc4:	b	16fc8 <__assert_fail@plt+0x5fd4>
   16fc8:	b	16fcc <__assert_fail@plt+0x5fd8>
   16fcc:	ldr	r0, [fp, #8]
   16fd0:	cmp	r0, #0
   16fd4:	bge	170d8 <__assert_fail@plt+0x60e4>
   16fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fdc:	cmp	r0, #0
   16fe0:	bge	1706c <__assert_fail@plt+0x6078>
   16fe4:	b	16fe8 <__assert_fail@plt+0x5ff4>
   16fe8:	ldr	r0, [pc, #3128]	; 17c28 <__assert_fail@plt+0x6c34>
   16fec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ff0:	ldr	r2, [fp, #8]
   16ff4:	sdiv	r0, r0, r2
   16ff8:	cmp	r1, r0
   16ffc:	blt	17168 <__assert_fail@plt+0x6174>
   17000:	b	1717c <__assert_fail@plt+0x6188>
   17004:	b	17008 <__assert_fail@plt+0x6014>
   17008:	ldr	r0, [pc, #3100]	; 17c2c <__assert_fail@plt+0x6c38>
   1700c:	ldr	r1, [fp, #8]
   17010:	cmp	r1, r0
   17014:	blt	1702c <__assert_fail@plt+0x6038>
   17018:	b	17038 <__assert_fail@plt+0x6044>
   1701c:	ldr	r0, [fp, #8]
   17020:	movw	r1, #0
   17024:	cmp	r1, r0
   17028:	bge	17038 <__assert_fail@plt+0x6044>
   1702c:	movw	r0, #0
   17030:	str	r0, [sp, #148]	; 0x94
   17034:	b	17050 <__assert_fail@plt+0x605c>
   17038:	ldr	r0, [pc, #3048]	; 17c28 <__assert_fail@plt+0x6c34>
   1703c:	ldr	r1, [fp, #8]
   17040:	movw	r2, #0
   17044:	sub	r1, r2, r1
   17048:	sdiv	r0, r0, r1
   1704c:	str	r0, [sp, #148]	; 0x94
   17050:	ldr	r0, [sp, #148]	; 0x94
   17054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17058:	mvn	r2, #0
   1705c:	sub	r1, r2, r1
   17060:	cmp	r0, r1
   17064:	ble	17168 <__assert_fail@plt+0x6174>
   17068:	b	1717c <__assert_fail@plt+0x6188>
   1706c:	ldr	r0, [fp, #8]
   17070:	cmn	r0, #1
   17074:	bne	170bc <__assert_fail@plt+0x60c8>
   17078:	b	1707c <__assert_fail@plt+0x6088>
   1707c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17080:	add	r0, r0, #-2147483648	; 0x80000000
   17084:	movw	r1, #0
   17088:	cmp	r1, r0
   1708c:	blt	17168 <__assert_fail@plt+0x6174>
   17090:	b	1717c <__assert_fail@plt+0x6188>
   17094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17098:	movw	r1, #0
   1709c:	cmp	r1, r0
   170a0:	bge	1717c <__assert_fail@plt+0x6188>
   170a4:	ldr	r0, [pc, #2940]	; 17c28 <__assert_fail@plt+0x6c34>
   170a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170ac:	sub	r1, r1, #1
   170b0:	cmp	r0, r1
   170b4:	blt	17168 <__assert_fail@plt+0x6174>
   170b8:	b	1717c <__assert_fail@plt+0x6188>
   170bc:	ldr	r0, [pc, #2924]	; 17c30 <__assert_fail@plt+0x6c3c>
   170c0:	ldr	r1, [fp, #8]
   170c4:	sdiv	r0, r0, r1
   170c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170cc:	cmp	r0, r1
   170d0:	blt	17168 <__assert_fail@plt+0x6174>
   170d4:	b	1717c <__assert_fail@plt+0x6188>
   170d8:	ldr	r0, [fp, #8]
   170dc:	cmp	r0, #0
   170e0:	bne	170e8 <__assert_fail@plt+0x60f4>
   170e4:	b	1717c <__assert_fail@plt+0x6188>
   170e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ec:	cmp	r0, #0
   170f0:	bge	17150 <__assert_fail@plt+0x615c>
   170f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f8:	cmn	r0, #1
   170fc:	bne	17134 <__assert_fail@plt+0x6140>
   17100:	b	17104 <__assert_fail@plt+0x6110>
   17104:	ldr	r0, [fp, #8]
   17108:	add	r0, r0, #-2147483648	; 0x80000000
   1710c:	movw	r1, #0
   17110:	cmp	r1, r0
   17114:	blt	17168 <__assert_fail@plt+0x6174>
   17118:	b	1717c <__assert_fail@plt+0x6188>
   1711c:	ldr	r0, [pc, #2820]	; 17c28 <__assert_fail@plt+0x6c34>
   17120:	ldr	r1, [fp, #8]
   17124:	sub	r1, r1, #1
   17128:	cmp	r0, r1
   1712c:	blt	17168 <__assert_fail@plt+0x6174>
   17130:	b	1717c <__assert_fail@plt+0x6188>
   17134:	ldr	r0, [pc, #2804]	; 17c30 <__assert_fail@plt+0x6c3c>
   17138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1713c:	sdiv	r0, r0, r1
   17140:	ldr	r1, [fp, #8]
   17144:	cmp	r0, r1
   17148:	blt	17168 <__assert_fail@plt+0x6174>
   1714c:	b	1717c <__assert_fail@plt+0x6188>
   17150:	ldr	r0, [pc, #2768]	; 17c28 <__assert_fail@plt+0x6c34>
   17154:	ldr	r1, [fp, #8]
   17158:	sdiv	r0, r0, r1
   1715c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17160:	cmp	r0, r1
   17164:	bge	1717c <__assert_fail@plt+0x6188>
   17168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1716c:	ldr	r1, [fp, #8]
   17170:	mul	r0, r0, r1
   17174:	str	r0, [fp, #-28]	; 0xffffffe4
   17178:	b	17bfc <__assert_fail@plt+0x6c08>
   1717c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17180:	ldr	r1, [fp, #8]
   17184:	mul	r0, r0, r1
   17188:	str	r0, [fp, #-28]	; 0xffffffe4
   1718c:	b	17c00 <__assert_fail@plt+0x6c0c>
   17190:	ldr	r0, [fp, #8]
   17194:	cmp	r0, #0
   17198:	bge	172a8 <__assert_fail@plt+0x62b4>
   1719c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a0:	cmp	r0, #0
   171a4:	bge	17230 <__assert_fail@plt+0x623c>
   171a8:	b	171c8 <__assert_fail@plt+0x61d4>
   171ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b0:	ldr	r1, [fp, #8]
   171b4:	mvn	r2, #0
   171b8:	udiv	r1, r2, r1
   171bc:	cmp	r0, r1
   171c0:	bcc	17344 <__assert_fail@plt+0x6350>
   171c4:	b	17358 <__assert_fail@plt+0x6364>
   171c8:	b	171cc <__assert_fail@plt+0x61d8>
   171cc:	ldr	r0, [pc, #2648]	; 17c2c <__assert_fail@plt+0x6c38>
   171d0:	ldr	r1, [fp, #8]
   171d4:	cmp	r1, r0
   171d8:	blt	171f0 <__assert_fail@plt+0x61fc>
   171dc:	b	171fc <__assert_fail@plt+0x6208>
   171e0:	ldr	r0, [fp, #8]
   171e4:	movw	r1, #0
   171e8:	cmp	r1, r0
   171ec:	bge	171fc <__assert_fail@plt+0x6208>
   171f0:	movw	r0, #1
   171f4:	str	r0, [sp, #144]	; 0x90
   171f8:	b	17214 <__assert_fail@plt+0x6220>
   171fc:	ldr	r0, [fp, #8]
   17200:	movw	r1, #0
   17204:	sub	r0, r1, r0
   17208:	mvn	r1, #0
   1720c:	udiv	r0, r1, r0
   17210:	str	r0, [sp, #144]	; 0x90
   17214:	ldr	r0, [sp, #144]	; 0x90
   17218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1721c:	mvn	r2, #0
   17220:	sub	r1, r2, r1
   17224:	cmp	r0, r1
   17228:	bls	17344 <__assert_fail@plt+0x6350>
   1722c:	b	17358 <__assert_fail@plt+0x6364>
   17230:	b	17234 <__assert_fail@plt+0x6240>
   17234:	b	1728c <__assert_fail@plt+0x6298>
   17238:	b	1728c <__assert_fail@plt+0x6298>
   1723c:	ldr	r0, [fp, #8]
   17240:	cmn	r0, #1
   17244:	bne	1728c <__assert_fail@plt+0x6298>
   17248:	b	1724c <__assert_fail@plt+0x6258>
   1724c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17250:	add	r0, r0, #0
   17254:	movw	r1, #0
   17258:	cmp	r1, r0
   1725c:	blt	17344 <__assert_fail@plt+0x6350>
   17260:	b	17358 <__assert_fail@plt+0x6364>
   17264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17268:	movw	r1, #0
   1726c:	cmp	r1, r0
   17270:	bge	17358 <__assert_fail@plt+0x6364>
   17274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17278:	sub	r0, r0, #1
   1727c:	mvn	r1, #0
   17280:	cmp	r1, r0
   17284:	blt	17344 <__assert_fail@plt+0x6350>
   17288:	b	17358 <__assert_fail@plt+0x6364>
   1728c:	ldr	r0, [fp, #8]
   17290:	movw	r1, #0
   17294:	sdiv	r0, r1, r0
   17298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1729c:	cmp	r0, r1
   172a0:	blt	17344 <__assert_fail@plt+0x6350>
   172a4:	b	17358 <__assert_fail@plt+0x6364>
   172a8:	ldr	r0, [fp, #8]
   172ac:	cmp	r0, #0
   172b0:	bne	172b8 <__assert_fail@plt+0x62c4>
   172b4:	b	17358 <__assert_fail@plt+0x6364>
   172b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172bc:	cmp	r0, #0
   172c0:	bge	1732c <__assert_fail@plt+0x6338>
   172c4:	b	172c8 <__assert_fail@plt+0x62d4>
   172c8:	b	17310 <__assert_fail@plt+0x631c>
   172cc:	b	17310 <__assert_fail@plt+0x631c>
   172d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d4:	cmn	r0, #1
   172d8:	bne	17310 <__assert_fail@plt+0x631c>
   172dc:	b	172e0 <__assert_fail@plt+0x62ec>
   172e0:	ldr	r0, [fp, #8]
   172e4:	add	r0, r0, #0
   172e8:	movw	r1, #0
   172ec:	cmp	r1, r0
   172f0:	blt	17344 <__assert_fail@plt+0x6350>
   172f4:	b	17358 <__assert_fail@plt+0x6364>
   172f8:	ldr	r0, [fp, #8]
   172fc:	sub	r0, r0, #1
   17300:	mvn	r1, #0
   17304:	cmp	r1, r0
   17308:	blt	17344 <__assert_fail@plt+0x6350>
   1730c:	b	17358 <__assert_fail@plt+0x6364>
   17310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17314:	movw	r1, #0
   17318:	sdiv	r0, r1, r0
   1731c:	ldr	r1, [fp, #8]
   17320:	cmp	r0, r1
   17324:	blt	17344 <__assert_fail@plt+0x6350>
   17328:	b	17358 <__assert_fail@plt+0x6364>
   1732c:	ldr	r0, [fp, #8]
   17330:	mvn	r1, #0
   17334:	udiv	r0, r1, r0
   17338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1733c:	cmp	r0, r1
   17340:	bcs	17358 <__assert_fail@plt+0x6364>
   17344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17348:	ldr	r1, [fp, #8]
   1734c:	mul	r0, r0, r1
   17350:	str	r0, [fp, #-28]	; 0xffffffe4
   17354:	b	17bfc <__assert_fail@plt+0x6c08>
   17358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1735c:	ldr	r1, [fp, #8]
   17360:	mul	r0, r0, r1
   17364:	str	r0, [fp, #-28]	; 0xffffffe4
   17368:	b	17c00 <__assert_fail@plt+0x6c0c>
   1736c:	b	17370 <__assert_fail@plt+0x637c>
   17370:	b	17374 <__assert_fail@plt+0x6380>
   17374:	ldr	r0, [fp, #8]
   17378:	cmp	r0, #0
   1737c:	bge	17480 <__assert_fail@plt+0x648c>
   17380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17384:	cmp	r0, #0
   17388:	bge	17414 <__assert_fail@plt+0x6420>
   1738c:	b	17390 <__assert_fail@plt+0x639c>
   17390:	ldr	r0, [pc, #2192]	; 17c28 <__assert_fail@plt+0x6c34>
   17394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17398:	ldr	r2, [fp, #8]
   1739c:	sdiv	r0, r0, r2
   173a0:	cmp	r1, r0
   173a4:	blt	17510 <__assert_fail@plt+0x651c>
   173a8:	b	17524 <__assert_fail@plt+0x6530>
   173ac:	b	173b0 <__assert_fail@plt+0x63bc>
   173b0:	ldr	r0, [pc, #2164]	; 17c2c <__assert_fail@plt+0x6c38>
   173b4:	ldr	r1, [fp, #8]
   173b8:	cmp	r1, r0
   173bc:	blt	173d4 <__assert_fail@plt+0x63e0>
   173c0:	b	173e0 <__assert_fail@plt+0x63ec>
   173c4:	ldr	r0, [fp, #8]
   173c8:	movw	r1, #0
   173cc:	cmp	r1, r0
   173d0:	bge	173e0 <__assert_fail@plt+0x63ec>
   173d4:	movw	r0, #0
   173d8:	str	r0, [sp, #140]	; 0x8c
   173dc:	b	173f8 <__assert_fail@plt+0x6404>
   173e0:	ldr	r0, [pc, #2112]	; 17c28 <__assert_fail@plt+0x6c34>
   173e4:	ldr	r1, [fp, #8]
   173e8:	movw	r2, #0
   173ec:	sub	r1, r2, r1
   173f0:	sdiv	r0, r0, r1
   173f4:	str	r0, [sp, #140]	; 0x8c
   173f8:	ldr	r0, [sp, #140]	; 0x8c
   173fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17400:	mvn	r2, #0
   17404:	sub	r1, r2, r1
   17408:	cmp	r0, r1
   1740c:	ble	17510 <__assert_fail@plt+0x651c>
   17410:	b	17524 <__assert_fail@plt+0x6530>
   17414:	ldr	r0, [fp, #8]
   17418:	cmn	r0, #1
   1741c:	bne	17464 <__assert_fail@plt+0x6470>
   17420:	b	17424 <__assert_fail@plt+0x6430>
   17424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17428:	add	r0, r0, #-2147483648	; 0x80000000
   1742c:	movw	r1, #0
   17430:	cmp	r1, r0
   17434:	blt	17510 <__assert_fail@plt+0x651c>
   17438:	b	17524 <__assert_fail@plt+0x6530>
   1743c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17440:	movw	r1, #0
   17444:	cmp	r1, r0
   17448:	bge	17524 <__assert_fail@plt+0x6530>
   1744c:	ldr	r0, [pc, #2004]	; 17c28 <__assert_fail@plt+0x6c34>
   17450:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17454:	sub	r1, r1, #1
   17458:	cmp	r0, r1
   1745c:	blt	17510 <__assert_fail@plt+0x651c>
   17460:	b	17524 <__assert_fail@plt+0x6530>
   17464:	ldr	r0, [pc, #1988]	; 17c30 <__assert_fail@plt+0x6c3c>
   17468:	ldr	r1, [fp, #8]
   1746c:	sdiv	r0, r0, r1
   17470:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17474:	cmp	r0, r1
   17478:	blt	17510 <__assert_fail@plt+0x651c>
   1747c:	b	17524 <__assert_fail@plt+0x6530>
   17480:	ldr	r0, [fp, #8]
   17484:	cmp	r0, #0
   17488:	bne	17490 <__assert_fail@plt+0x649c>
   1748c:	b	17524 <__assert_fail@plt+0x6530>
   17490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17494:	cmp	r0, #0
   17498:	bge	174f8 <__assert_fail@plt+0x6504>
   1749c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a0:	cmn	r0, #1
   174a4:	bne	174dc <__assert_fail@plt+0x64e8>
   174a8:	b	174ac <__assert_fail@plt+0x64b8>
   174ac:	ldr	r0, [fp, #8]
   174b0:	add	r0, r0, #-2147483648	; 0x80000000
   174b4:	movw	r1, #0
   174b8:	cmp	r1, r0
   174bc:	blt	17510 <__assert_fail@plt+0x651c>
   174c0:	b	17524 <__assert_fail@plt+0x6530>
   174c4:	ldr	r0, [pc, #1884]	; 17c28 <__assert_fail@plt+0x6c34>
   174c8:	ldr	r1, [fp, #8]
   174cc:	sub	r1, r1, #1
   174d0:	cmp	r0, r1
   174d4:	blt	17510 <__assert_fail@plt+0x651c>
   174d8:	b	17524 <__assert_fail@plt+0x6530>
   174dc:	ldr	r0, [pc, #1868]	; 17c30 <__assert_fail@plt+0x6c3c>
   174e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174e4:	sdiv	r0, r0, r1
   174e8:	ldr	r1, [fp, #8]
   174ec:	cmp	r0, r1
   174f0:	blt	17510 <__assert_fail@plt+0x651c>
   174f4:	b	17524 <__assert_fail@plt+0x6530>
   174f8:	ldr	r0, [pc, #1832]	; 17c28 <__assert_fail@plt+0x6c34>
   174fc:	ldr	r1, [fp, #8]
   17500:	sdiv	r0, r0, r1
   17504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17508:	cmp	r0, r1
   1750c:	bge	17524 <__assert_fail@plt+0x6530>
   17510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17514:	ldr	r1, [fp, #8]
   17518:	mul	r0, r0, r1
   1751c:	str	r0, [fp, #-28]	; 0xffffffe4
   17520:	b	17bfc <__assert_fail@plt+0x6c08>
   17524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17528:	ldr	r1, [fp, #8]
   1752c:	mul	r0, r0, r1
   17530:	str	r0, [fp, #-28]	; 0xffffffe4
   17534:	b	17c00 <__assert_fail@plt+0x6c0c>
   17538:	ldr	r0, [fp, #8]
   1753c:	cmp	r0, #0
   17540:	bge	17650 <__assert_fail@plt+0x665c>
   17544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17548:	cmp	r0, #0
   1754c:	bge	175d8 <__assert_fail@plt+0x65e4>
   17550:	b	17570 <__assert_fail@plt+0x657c>
   17554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17558:	ldr	r1, [fp, #8]
   1755c:	mvn	r2, #0
   17560:	udiv	r1, r2, r1
   17564:	cmp	r0, r1
   17568:	bcc	176ec <__assert_fail@plt+0x66f8>
   1756c:	b	17700 <__assert_fail@plt+0x670c>
   17570:	b	17574 <__assert_fail@plt+0x6580>
   17574:	ldr	r0, [pc, #1712]	; 17c2c <__assert_fail@plt+0x6c38>
   17578:	ldr	r1, [fp, #8]
   1757c:	cmp	r1, r0
   17580:	blt	17598 <__assert_fail@plt+0x65a4>
   17584:	b	175a4 <__assert_fail@plt+0x65b0>
   17588:	ldr	r0, [fp, #8]
   1758c:	movw	r1, #0
   17590:	cmp	r1, r0
   17594:	bge	175a4 <__assert_fail@plt+0x65b0>
   17598:	movw	r0, #1
   1759c:	str	r0, [sp, #136]	; 0x88
   175a0:	b	175bc <__assert_fail@plt+0x65c8>
   175a4:	ldr	r0, [fp, #8]
   175a8:	movw	r1, #0
   175ac:	sub	r0, r1, r0
   175b0:	mvn	r1, #0
   175b4:	udiv	r0, r1, r0
   175b8:	str	r0, [sp, #136]	; 0x88
   175bc:	ldr	r0, [sp, #136]	; 0x88
   175c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175c4:	mvn	r2, #0
   175c8:	sub	r1, r2, r1
   175cc:	cmp	r0, r1
   175d0:	bls	176ec <__assert_fail@plt+0x66f8>
   175d4:	b	17700 <__assert_fail@plt+0x670c>
   175d8:	b	175dc <__assert_fail@plt+0x65e8>
   175dc:	b	17634 <__assert_fail@plt+0x6640>
   175e0:	b	17634 <__assert_fail@plt+0x6640>
   175e4:	ldr	r0, [fp, #8]
   175e8:	cmn	r0, #1
   175ec:	bne	17634 <__assert_fail@plt+0x6640>
   175f0:	b	175f4 <__assert_fail@plt+0x6600>
   175f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f8:	add	r0, r0, #0
   175fc:	movw	r1, #0
   17600:	cmp	r1, r0
   17604:	blt	176ec <__assert_fail@plt+0x66f8>
   17608:	b	17700 <__assert_fail@plt+0x670c>
   1760c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17610:	movw	r1, #0
   17614:	cmp	r1, r0
   17618:	bge	17700 <__assert_fail@plt+0x670c>
   1761c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17620:	sub	r0, r0, #1
   17624:	mvn	r1, #0
   17628:	cmp	r1, r0
   1762c:	blt	176ec <__assert_fail@plt+0x66f8>
   17630:	b	17700 <__assert_fail@plt+0x670c>
   17634:	ldr	r0, [fp, #8]
   17638:	movw	r1, #0
   1763c:	sdiv	r0, r1, r0
   17640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17644:	cmp	r0, r1
   17648:	blt	176ec <__assert_fail@plt+0x66f8>
   1764c:	b	17700 <__assert_fail@plt+0x670c>
   17650:	ldr	r0, [fp, #8]
   17654:	cmp	r0, #0
   17658:	bne	17660 <__assert_fail@plt+0x666c>
   1765c:	b	17700 <__assert_fail@plt+0x670c>
   17660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17664:	cmp	r0, #0
   17668:	bge	176d4 <__assert_fail@plt+0x66e0>
   1766c:	b	17670 <__assert_fail@plt+0x667c>
   17670:	b	176b8 <__assert_fail@plt+0x66c4>
   17674:	b	176b8 <__assert_fail@plt+0x66c4>
   17678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1767c:	cmn	r0, #1
   17680:	bne	176b8 <__assert_fail@plt+0x66c4>
   17684:	b	17688 <__assert_fail@plt+0x6694>
   17688:	ldr	r0, [fp, #8]
   1768c:	add	r0, r0, #0
   17690:	movw	r1, #0
   17694:	cmp	r1, r0
   17698:	blt	176ec <__assert_fail@plt+0x66f8>
   1769c:	b	17700 <__assert_fail@plt+0x670c>
   176a0:	ldr	r0, [fp, #8]
   176a4:	sub	r0, r0, #1
   176a8:	mvn	r1, #0
   176ac:	cmp	r1, r0
   176b0:	blt	176ec <__assert_fail@plt+0x66f8>
   176b4:	b	17700 <__assert_fail@plt+0x670c>
   176b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176bc:	movw	r1, #0
   176c0:	sdiv	r0, r1, r0
   176c4:	ldr	r1, [fp, #8]
   176c8:	cmp	r0, r1
   176cc:	blt	176ec <__assert_fail@plt+0x66f8>
   176d0:	b	17700 <__assert_fail@plt+0x670c>
   176d4:	ldr	r0, [fp, #8]
   176d8:	mvn	r1, #0
   176dc:	udiv	r0, r1, r0
   176e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176e4:	cmp	r0, r1
   176e8:	bcs	17700 <__assert_fail@plt+0x670c>
   176ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176f0:	ldr	r1, [fp, #8]
   176f4:	mul	r0, r0, r1
   176f8:	str	r0, [fp, #-28]	; 0xffffffe4
   176fc:	b	17bfc <__assert_fail@plt+0x6c08>
   17700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17704:	ldr	r1, [fp, #8]
   17708:	mul	r0, r0, r1
   1770c:	str	r0, [fp, #-28]	; 0xffffffe4
   17710:	b	17c00 <__assert_fail@plt+0x6c0c>
   17714:	b	17718 <__assert_fail@plt+0x6724>
   17718:	ldr	r0, [fp, #8]
   1771c:	cmp	r0, #0
   17720:	bge	178a8 <__assert_fail@plt+0x68b4>
   17724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17728:	cmp	r0, #0
   1772c:	bge	17814 <__assert_fail@plt+0x6820>
   17730:	b	17734 <__assert_fail@plt+0x6740>
   17734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17738:	ldr	r1, [fp, #8]
   1773c:	asr	r3, r1, #31
   17740:	mvn	r2, #0
   17744:	mvn	ip, #-2147483648	; 0x80000000
   17748:	str	r0, [sp, #132]	; 0x84
   1774c:	mov	r0, r2
   17750:	str	r1, [sp, #128]	; 0x80
   17754:	mov	r1, ip
   17758:	ldr	r2, [sp, #128]	; 0x80
   1775c:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   17760:	ldr	r2, [sp, #132]	; 0x84
   17764:	subs	r0, r2, r0
   17768:	rscs	r1, r1, r2, asr #31
   1776c:	str	r0, [sp, #124]	; 0x7c
   17770:	str	r1, [sp, #120]	; 0x78
   17774:	blt	17988 <__assert_fail@plt+0x6994>
   17778:	b	1799c <__assert_fail@plt+0x69a8>
   1777c:	b	17780 <__assert_fail@plt+0x678c>
   17780:	ldr	r0, [pc, #1188]	; 17c2c <__assert_fail@plt+0x6c38>
   17784:	ldr	r1, [fp, #8]
   17788:	cmp	r1, r0
   1778c:	blt	177a4 <__assert_fail@plt+0x67b0>
   17790:	b	177b8 <__assert_fail@plt+0x67c4>
   17794:	ldr	r0, [fp, #8]
   17798:	movw	r1, #0
   1779c:	cmp	r1, r0
   177a0:	bge	177b8 <__assert_fail@plt+0x67c4>
   177a4:	mov	r0, #0
   177a8:	mvn	r1, #0
   177ac:	str	r1, [sp, #116]	; 0x74
   177b0:	str	r0, [sp, #112]	; 0x70
   177b4:	b	177ec <__assert_fail@plt+0x67f8>
   177b8:	ldr	r0, [fp, #8]
   177bc:	rsb	r0, r0, #0
   177c0:	asr	r3, r0, #31
   177c4:	mvn	r1, #0
   177c8:	mvn	r2, #-2147483648	; 0x80000000
   177cc:	str	r0, [sp, #108]	; 0x6c
   177d0:	mov	r0, r1
   177d4:	mov	r1, r2
   177d8:	ldr	r2, [sp, #108]	; 0x6c
   177dc:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   177e0:	str	r0, [sp, #116]	; 0x74
   177e4:	str	r1, [sp, #112]	; 0x70
   177e8:	b	177ec <__assert_fail@plt+0x67f8>
   177ec:	ldr	r0, [sp, #112]	; 0x70
   177f0:	ldr	r1, [sp, #116]	; 0x74
   177f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177f8:	mvn	r2, r2
   177fc:	subs	r1, r2, r1
   17800:	rscs	r0, r0, r2, asr #31
   17804:	str	r1, [sp, #104]	; 0x68
   17808:	str	r0, [sp, #100]	; 0x64
   1780c:	bge	17988 <__assert_fail@plt+0x6994>
   17810:	b	1799c <__assert_fail@plt+0x69a8>
   17814:	ldr	r0, [fp, #8]
   17818:	cmn	r0, #1
   1781c:	bne	17868 <__assert_fail@plt+0x6874>
   17820:	b	17824 <__assert_fail@plt+0x6830>
   17824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17828:	mov	r1, #-2147483648	; 0x80000000
   1782c:	add	r1, r1, r0, asr #31
   17830:	rsbs	r0, r0, #0
   17834:	rscs	r1, r1, #0
   17838:	str	r0, [sp, #96]	; 0x60
   1783c:	str	r1, [sp, #92]	; 0x5c
   17840:	blt	17988 <__assert_fail@plt+0x6994>
   17844:	b	1799c <__assert_fail@plt+0x69a8>
   17848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1784c:	movw	r1, #0
   17850:	cmp	r1, r0
   17854:	bge	1799c <__assert_fail@plt+0x69a8>
   17858:	mov	r0, #0
   1785c:	cmp	r0, #0
   17860:	bne	17988 <__assert_fail@plt+0x6994>
   17864:	b	1799c <__assert_fail@plt+0x69a8>
   17868:	ldr	r0, [fp, #8]
   1786c:	asr	r3, r0, #31
   17870:	mov	r1, #0
   17874:	mov	r2, #-2147483648	; 0x80000000
   17878:	str	r0, [sp, #88]	; 0x58
   1787c:	mov	r0, r1
   17880:	mov	r1, r2
   17884:	ldr	r2, [sp, #88]	; 0x58
   17888:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   1788c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17890:	subs	r0, r0, r2
   17894:	sbcs	r1, r1, r2, asr #31
   17898:	str	r0, [sp, #84]	; 0x54
   1789c:	str	r1, [sp, #80]	; 0x50
   178a0:	blt	17988 <__assert_fail@plt+0x6994>
   178a4:	b	1799c <__assert_fail@plt+0x69a8>
   178a8:	ldr	r0, [fp, #8]
   178ac:	cmp	r0, #0
   178b0:	bne	178b8 <__assert_fail@plt+0x68c4>
   178b4:	b	1799c <__assert_fail@plt+0x69a8>
   178b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178bc:	cmp	r0, #0
   178c0:	bge	17948 <__assert_fail@plt+0x6954>
   178c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178c8:	cmn	r0, #1
   178cc:	bne	17908 <__assert_fail@plt+0x6914>
   178d0:	b	178d4 <__assert_fail@plt+0x68e0>
   178d4:	ldr	r0, [fp, #8]
   178d8:	mov	r1, #-2147483648	; 0x80000000
   178dc:	add	r1, r1, r0, asr #31
   178e0:	rsbs	r0, r0, #0
   178e4:	rscs	r1, r1, #0
   178e8:	str	r0, [sp, #76]	; 0x4c
   178ec:	str	r1, [sp, #72]	; 0x48
   178f0:	blt	17988 <__assert_fail@plt+0x6994>
   178f4:	b	1799c <__assert_fail@plt+0x69a8>
   178f8:	mov	r0, #0
   178fc:	cmp	r0, #0
   17900:	bne	17988 <__assert_fail@plt+0x6994>
   17904:	b	1799c <__assert_fail@plt+0x69a8>
   17908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1790c:	asr	r3, r0, #31
   17910:	mov	r1, #0
   17914:	mov	r2, #-2147483648	; 0x80000000
   17918:	str	r0, [sp, #68]	; 0x44
   1791c:	mov	r0, r1
   17920:	mov	r1, r2
   17924:	ldr	r2, [sp, #68]	; 0x44
   17928:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   1792c:	ldr	r2, [fp, #8]
   17930:	subs	r0, r0, r2
   17934:	sbcs	r1, r1, r2, asr #31
   17938:	str	r0, [sp, #64]	; 0x40
   1793c:	str	r1, [sp, #60]	; 0x3c
   17940:	blt	17988 <__assert_fail@plt+0x6994>
   17944:	b	1799c <__assert_fail@plt+0x69a8>
   17948:	ldr	r0, [fp, #8]
   1794c:	asr	r3, r0, #31
   17950:	mvn	r1, #0
   17954:	mvn	r2, #-2147483648	; 0x80000000
   17958:	str	r0, [sp, #56]	; 0x38
   1795c:	mov	r0, r1
   17960:	mov	r1, r2
   17964:	ldr	r2, [sp, #56]	; 0x38
   17968:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   1796c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17970:	subs	r0, r0, r2
   17974:	sbcs	r1, r1, r2, asr #31
   17978:	str	r0, [sp, #52]	; 0x34
   1797c:	str	r1, [sp, #48]	; 0x30
   17980:	bge	1799c <__assert_fail@plt+0x69a8>
   17984:	b	17988 <__assert_fail@plt+0x6994>
   17988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1798c:	ldr	r1, [fp, #8]
   17990:	mul	r0, r0, r1
   17994:	str	r0, [fp, #-28]	; 0xffffffe4
   17998:	b	17bfc <__assert_fail@plt+0x6c08>
   1799c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179a0:	ldr	r1, [fp, #8]
   179a4:	mul	r0, r0, r1
   179a8:	str	r0, [fp, #-28]	; 0xffffffe4
   179ac:	b	17c00 <__assert_fail@plt+0x6c0c>
   179b0:	ldr	r0, [fp, #8]
   179b4:	cmp	r0, #0
   179b8:	bge	17b18 <__assert_fail@plt+0x6b24>
   179bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179c0:	cmp	r0, #0
   179c4:	bge	17aa0 <__assert_fail@plt+0x6aac>
   179c8:	b	17a10 <__assert_fail@plt+0x6a1c>
   179cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179d0:	ldr	r1, [fp, #8]
   179d4:	asr	r3, r1, #31
   179d8:	mvn	r2, #0
   179dc:	str	r0, [sp, #44]	; 0x2c
   179e0:	mov	r0, r2
   179e4:	str	r1, [sp, #40]	; 0x28
   179e8:	mov	r1, r2
   179ec:	ldr	r2, [sp, #40]	; 0x28
   179f0:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   179f4:	ldr	r2, [sp, #44]	; 0x2c
   179f8:	subs	r0, r2, r0
   179fc:	rscs	r1, r1, r2, asr #31
   17a00:	str	r0, [sp, #36]	; 0x24
   17a04:	str	r1, [sp, #32]
   17a08:	bcc	17bd4 <__assert_fail@plt+0x6be0>
   17a0c:	b	17be8 <__assert_fail@plt+0x6bf4>
   17a10:	b	17a14 <__assert_fail@plt+0x6a20>
   17a14:	ldr	r0, [pc, #528]	; 17c2c <__assert_fail@plt+0x6c38>
   17a18:	ldr	r1, [fp, #8]
   17a1c:	cmp	r1, r0
   17a20:	blt	17a38 <__assert_fail@plt+0x6a44>
   17a24:	b	17a4c <__assert_fail@plt+0x6a58>
   17a28:	ldr	r0, [fp, #8]
   17a2c:	movw	r1, #0
   17a30:	cmp	r1, r0
   17a34:	bge	17a4c <__assert_fail@plt+0x6a58>
   17a38:	mov	r0, #1
   17a3c:	mvn	r1, #0
   17a40:	str	r1, [sp, #28]
   17a44:	str	r0, [sp, #24]
   17a48:	b	17a78 <__assert_fail@plt+0x6a84>
   17a4c:	ldr	r0, [fp, #8]
   17a50:	rsb	r0, r0, #0
   17a54:	asr	r3, r0, #31
   17a58:	mvn	r1, #0
   17a5c:	str	r0, [sp, #20]
   17a60:	mov	r0, r1
   17a64:	ldr	r2, [sp, #20]
   17a68:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   17a6c:	str	r0, [sp, #28]
   17a70:	str	r1, [sp, #24]
   17a74:	b	17a78 <__assert_fail@plt+0x6a84>
   17a78:	ldr	r0, [sp, #24]
   17a7c:	ldr	r1, [sp, #28]
   17a80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a84:	mvn	r2, r2
   17a88:	subs	r1, r2, r1
   17a8c:	rscs	r0, r0, r2, asr #31
   17a90:	str	r1, [sp, #16]
   17a94:	str	r0, [sp, #12]
   17a98:	bcs	17bd4 <__assert_fail@plt+0x6be0>
   17a9c:	b	17be8 <__assert_fail@plt+0x6bf4>
   17aa0:	b	17aa4 <__assert_fail@plt+0x6ab0>
   17aa4:	b	17afc <__assert_fail@plt+0x6b08>
   17aa8:	b	17afc <__assert_fail@plt+0x6b08>
   17aac:	ldr	r0, [fp, #8]
   17ab0:	cmn	r0, #1
   17ab4:	bne	17afc <__assert_fail@plt+0x6b08>
   17ab8:	b	17abc <__assert_fail@plt+0x6ac8>
   17abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ac0:	add	r0, r0, #0
   17ac4:	movw	r1, #0
   17ac8:	cmp	r1, r0
   17acc:	blt	17bd4 <__assert_fail@plt+0x6be0>
   17ad0:	b	17be8 <__assert_fail@plt+0x6bf4>
   17ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ad8:	movw	r1, #0
   17adc:	cmp	r1, r0
   17ae0:	bge	17be8 <__assert_fail@plt+0x6bf4>
   17ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ae8:	sub	r0, r0, #1
   17aec:	mvn	r1, #0
   17af0:	cmp	r1, r0
   17af4:	blt	17bd4 <__assert_fail@plt+0x6be0>
   17af8:	b	17be8 <__assert_fail@plt+0x6bf4>
   17afc:	ldr	r0, [fp, #8]
   17b00:	movw	r1, #0
   17b04:	sdiv	r0, r1, r0
   17b08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b0c:	cmp	r0, r1
   17b10:	blt	17bd4 <__assert_fail@plt+0x6be0>
   17b14:	b	17be8 <__assert_fail@plt+0x6bf4>
   17b18:	ldr	r0, [fp, #8]
   17b1c:	cmp	r0, #0
   17b20:	bne	17b28 <__assert_fail@plt+0x6b34>
   17b24:	b	17be8 <__assert_fail@plt+0x6bf4>
   17b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b2c:	cmp	r0, #0
   17b30:	bge	17b9c <__assert_fail@plt+0x6ba8>
   17b34:	b	17b38 <__assert_fail@plt+0x6b44>
   17b38:	b	17b80 <__assert_fail@plt+0x6b8c>
   17b3c:	b	17b80 <__assert_fail@plt+0x6b8c>
   17b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b44:	cmn	r0, #1
   17b48:	bne	17b80 <__assert_fail@plt+0x6b8c>
   17b4c:	b	17b50 <__assert_fail@plt+0x6b5c>
   17b50:	ldr	r0, [fp, #8]
   17b54:	add	r0, r0, #0
   17b58:	movw	r1, #0
   17b5c:	cmp	r1, r0
   17b60:	blt	17bd4 <__assert_fail@plt+0x6be0>
   17b64:	b	17be8 <__assert_fail@plt+0x6bf4>
   17b68:	ldr	r0, [fp, #8]
   17b6c:	sub	r0, r0, #1
   17b70:	mvn	r1, #0
   17b74:	cmp	r1, r0
   17b78:	blt	17bd4 <__assert_fail@plt+0x6be0>
   17b7c:	b	17be8 <__assert_fail@plt+0x6bf4>
   17b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b84:	movw	r1, #0
   17b88:	sdiv	r0, r1, r0
   17b8c:	ldr	r1, [fp, #8]
   17b90:	cmp	r0, r1
   17b94:	blt	17bd4 <__assert_fail@plt+0x6be0>
   17b98:	b	17be8 <__assert_fail@plt+0x6bf4>
   17b9c:	ldr	r0, [fp, #8]
   17ba0:	asr	r3, r0, #31
   17ba4:	mvn	r1, #0
   17ba8:	str	r0, [sp, #8]
   17bac:	mov	r0, r1
   17bb0:	ldr	r2, [sp, #8]
   17bb4:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   17bb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bbc:	subs	r0, r0, r2
   17bc0:	sbcs	r1, r1, r2, asr #31
   17bc4:	str	r0, [sp, #4]
   17bc8:	str	r1, [sp]
   17bcc:	bcs	17be8 <__assert_fail@plt+0x6bf4>
   17bd0:	b	17bd4 <__assert_fail@plt+0x6be0>
   17bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd8:	ldr	r1, [fp, #8]
   17bdc:	mul	r0, r0, r1
   17be0:	str	r0, [fp, #-28]	; 0xffffffe4
   17be4:	b	17bfc <__assert_fail@plt+0x6c08>
   17be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bec:	ldr	r1, [fp, #8]
   17bf0:	mul	r0, r0, r1
   17bf4:	str	r0, [fp, #-28]	; 0xffffffe4
   17bf8:	b	17c00 <__assert_fail@plt+0x6c0c>
   17bfc:	bl	17dd8 <__assert_fail@plt+0x6de4>
   17c00:	ldr	r0, [fp, #-4]
   17c04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17c08:	bl	15094 <__assert_fail@plt+0x40a0>
   17c0c:	str	r0, [fp, #-4]
   17c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c14:	ldr	r1, [fp, #-8]
   17c18:	str	r0, [r1]
   17c1c:	ldr	r0, [fp, #-4]
   17c20:	mov	sp, fp
   17c24:	pop	{fp, pc}
   17c28:	svcvc	0x00ffffff
   17c2c:	andhi	r0, r0, r1
   17c30:	andhi	r0, r0, r0
   17c34:			; <UNDEFINED> instruction: 0xffff8000
   17c38:	push	{fp, lr}
   17c3c:	mov	fp, sp
   17c40:	sub	sp, sp, #8
   17c44:	str	r0, [sp, #4]
   17c48:	ldr	r0, [sp, #4]
   17c4c:	movw	r1, #1
   17c50:	bl	17c5c <__assert_fail@plt+0x6c68>
   17c54:	mov	sp, fp
   17c58:	pop	{fp, pc}
   17c5c:	push	{fp, lr}
   17c60:	mov	fp, sp
   17c64:	sub	sp, sp, #8
   17c68:	str	r0, [sp, #4]
   17c6c:	str	r1, [sp]
   17c70:	ldr	r0, [sp, #4]
   17c74:	ldr	r1, [sp]
   17c78:	bl	17e28 <__assert_fail@plt+0x6e34>
   17c7c:	bl	15020 <__assert_fail@plt+0x402c>
   17c80:	mov	sp, fp
   17c84:	pop	{fp, pc}
   17c88:	push	{fp, lr}
   17c8c:	mov	fp, sp
   17c90:	sub	sp, sp, #8
   17c94:	str	r0, [sp, #4]
   17c98:	ldr	r0, [sp, #4]
   17c9c:	movw	r1, #1
   17ca0:	bl	17cac <__assert_fail@plt+0x6cb8>
   17ca4:	mov	sp, fp
   17ca8:	pop	{fp, pc}
   17cac:	push	{fp, lr}
   17cb0:	mov	fp, sp
   17cb4:	sub	sp, sp, #8
   17cb8:	str	r0, [sp, #4]
   17cbc:	str	r1, [sp]
   17cc0:	ldr	r0, [sp, #4]
   17cc4:	ldr	r1, [sp]
   17cc8:	bl	1850c <__assert_fail@plt+0x7518>
   17ccc:	bl	15020 <__assert_fail@plt+0x402c>
   17cd0:	mov	sp, fp
   17cd4:	pop	{fp, pc}
   17cd8:	push	{fp, lr}
   17cdc:	mov	fp, sp
   17ce0:	sub	sp, sp, #16
   17ce4:	str	r0, [fp, #-4]
   17ce8:	str	r1, [sp, #8]
   17cec:	ldr	r0, [sp, #8]
   17cf0:	bl	14ffc <__assert_fail@plt+0x4008>
   17cf4:	ldr	r1, [fp, #-4]
   17cf8:	ldr	r2, [sp, #8]
   17cfc:	str	r0, [sp, #4]
   17d00:	bl	10e08 <memcpy@plt>
   17d04:	ldr	r0, [sp, #4]
   17d08:	mov	sp, fp
   17d0c:	pop	{fp, pc}
   17d10:	push	{fp, lr}
   17d14:	mov	fp, sp
   17d18:	sub	sp, sp, #16
   17d1c:	str	r0, [fp, #-4]
   17d20:	str	r1, [sp, #8]
   17d24:	ldr	r0, [sp, #8]
   17d28:	bl	15050 <__assert_fail@plt+0x405c>
   17d2c:	ldr	r1, [fp, #-4]
   17d30:	ldr	r2, [sp, #8]
   17d34:	str	r0, [sp, #4]
   17d38:	bl	10e08 <memcpy@plt>
   17d3c:	ldr	r0, [sp, #4]
   17d40:	mov	sp, fp
   17d44:	pop	{fp, pc}
   17d48:	push	{fp, lr}
   17d4c:	mov	fp, sp
   17d50:	sub	sp, sp, #16
   17d54:	str	r0, [fp, #-4]
   17d58:	str	r1, [sp, #8]
   17d5c:	ldr	r0, [sp, #8]
   17d60:	add	r0, r0, #1
   17d64:	bl	15050 <__assert_fail@plt+0x405c>
   17d68:	str	r0, [sp, #4]
   17d6c:	ldr	r0, [sp, #4]
   17d70:	ldr	r1, [sp, #8]
   17d74:	add	r0, r0, r1
   17d78:	movw	r1, #0
   17d7c:	strb	r1, [r0]
   17d80:	ldr	r0, [sp, #4]
   17d84:	ldr	r1, [fp, #-4]
   17d88:	ldr	r2, [sp, #8]
   17d8c:	str	r0, [sp]
   17d90:	bl	10e08 <memcpy@plt>
   17d94:	ldr	r0, [sp]
   17d98:	mov	sp, fp
   17d9c:	pop	{fp, pc}
   17da0:	push	{fp, lr}
   17da4:	mov	fp, sp
   17da8:	sub	sp, sp, #8
   17dac:	str	r0, [sp, #4]
   17db0:	ldr	r0, [sp, #4]
   17db4:	ldr	r1, [sp, #4]
   17db8:	str	r0, [sp]
   17dbc:	mov	r0, r1
   17dc0:	bl	10f10 <strlen@plt>
   17dc4:	add	r1, r0, #1
   17dc8:	ldr	r0, [sp]
   17dcc:	bl	17cd8 <__assert_fail@plt+0x6ce4>
   17dd0:	mov	sp, fp
   17dd4:	pop	{fp, pc}
   17dd8:	push	{fp, lr}
   17ddc:	mov	fp, sp
   17de0:	sub	sp, sp, #8
   17de4:	movw	r0, #45288	; 0xb0e8
   17de8:	movt	r0, #2
   17dec:	ldr	r0, [r0]
   17df0:	movw	r1, #44764	; 0xaedc
   17df4:	movt	r1, #1
   17df8:	str	r0, [sp, #4]
   17dfc:	mov	r0, r1
   17e00:	bl	10f04 <gettext@plt>
   17e04:	ldr	r1, [sp, #4]
   17e08:	str	r0, [sp]
   17e0c:	mov	r0, r1
   17e10:	movw	r1, #0
   17e14:	movw	r2, #43715	; 0xaac3
   17e18:	movt	r2, #1
   17e1c:	ldr	r3, [sp]
   17e20:	bl	10e98 <error@plt>
   17e24:	bl	10fdc <abort@plt>
   17e28:	push	{fp, lr}
   17e2c:	mov	fp, sp
   17e30:	sub	sp, sp, #16
   17e34:	str	r0, [sp, #8]
   17e38:	str	r1, [sp, #4]
   17e3c:	ldr	r0, [sp, #8]
   17e40:	cmp	r0, #0
   17e44:	beq	17e54 <__assert_fail@plt+0x6e60>
   17e48:	ldr	r0, [sp, #4]
   17e4c:	cmp	r0, #0
   17e50:	bne	17e60 <__assert_fail@plt+0x6e6c>
   17e54:	movw	r0, #1
   17e58:	str	r0, [sp, #4]
   17e5c:	str	r0, [sp, #8]
   17e60:	ldr	r0, [sp, #4]
   17e64:	cmp	r0, #0
   17e68:	beq	17e9c <__assert_fail@plt+0x6ea8>
   17e6c:	ldr	r0, [pc, #76]	; 17ec0 <__assert_fail@plt+0x6ecc>
   17e70:	ldr	r1, [sp, #4]
   17e74:	udiv	r0, r0, r1
   17e78:	ldr	r1, [sp, #8]
   17e7c:	cmp	r0, r1
   17e80:	bcs	17e9c <__assert_fail@plt+0x6ea8>
   17e84:	bl	10f28 <__errno_location@plt>
   17e88:	movw	lr, #12
   17e8c:	str	lr, [r0]
   17e90:	movw	r0, #0
   17e94:	str	r0, [fp, #-4]
   17e98:	b	17eb4 <__assert_fail@plt+0x6ec0>
   17e9c:	ldr	r0, [sp, #8]
   17ea0:	ldr	r1, [sp, #4]
   17ea4:	bl	10d9c <calloc@plt>
   17ea8:	str	r0, [sp]
   17eac:	ldr	r0, [sp]
   17eb0:	str	r0, [fp, #-4]
   17eb4:	ldr	r0, [fp, #-4]
   17eb8:	mov	sp, fp
   17ebc:	pop	{fp, pc}
   17ec0:	svcvc	0x00ffffff
   17ec4:	push	{fp, lr}
   17ec8:	mov	fp, sp
   17ecc:	sub	sp, sp, #16
   17ed0:	str	r0, [sp, #8]
   17ed4:	ldr	r0, [sp, #8]
   17ed8:	cmp	r0, #0
   17edc:	bne	17ee8 <__assert_fail@plt+0x6ef4>
   17ee0:	movw	r0, #1
   17ee4:	str	r0, [sp, #8]
   17ee8:	ldr	r0, [pc, #64]	; 17f30 <__assert_fail@plt+0x6f3c>
   17eec:	ldr	r1, [sp, #8]
   17ef0:	cmp	r0, r1
   17ef4:	bcs	17f10 <__assert_fail@plt+0x6f1c>
   17ef8:	bl	10f28 <__errno_location@plt>
   17efc:	movw	lr, #12
   17f00:	str	lr, [r0]
   17f04:	movw	r0, #0
   17f08:	str	r0, [fp, #-4]
   17f0c:	b	17f24 <__assert_fail@plt+0x6f30>
   17f10:	ldr	r0, [sp, #8]
   17f14:	bl	10eb0 <malloc@plt>
   17f18:	str	r0, [sp, #4]
   17f1c:	ldr	r0, [sp, #4]
   17f20:	str	r0, [fp, #-4]
   17f24:	ldr	r0, [fp, #-4]
   17f28:	mov	sp, fp
   17f2c:	pop	{fp, pc}
   17f30:	svcvc	0x00ffffff
   17f34:	push	{fp, lr}
   17f38:	mov	fp, sp
   17f3c:	sub	sp, sp, #16
   17f40:	str	r0, [sp, #8]
   17f44:	str	r1, [sp, #4]
   17f48:	ldr	r0, [sp, #8]
   17f4c:	movw	r1, #0
   17f50:	cmp	r0, r1
   17f54:	bne	17f68 <__assert_fail@plt+0x6f74>
   17f58:	ldr	r0, [sp, #4]
   17f5c:	bl	17ec4 <__assert_fail@plt+0x6ed0>
   17f60:	str	r0, [fp, #-4]
   17f64:	b	17fc8 <__assert_fail@plt+0x6fd4>
   17f68:	ldr	r0, [sp, #4]
   17f6c:	cmp	r0, #0
   17f70:	bne	17f88 <__assert_fail@plt+0x6f94>
   17f74:	ldr	r0, [sp, #8]
   17f78:	bl	182fc <__assert_fail@plt+0x7308>
   17f7c:	movw	r0, #0
   17f80:	str	r0, [fp, #-4]
   17f84:	b	17fc8 <__assert_fail@plt+0x6fd4>
   17f88:	ldr	r0, [pc, #68]	; 17fd4 <__assert_fail@plt+0x6fe0>
   17f8c:	ldr	r1, [sp, #4]
   17f90:	cmp	r0, r1
   17f94:	bcs	17fb0 <__assert_fail@plt+0x6fbc>
   17f98:	bl	10f28 <__errno_location@plt>
   17f9c:	movw	lr, #12
   17fa0:	str	lr, [r0]
   17fa4:	movw	r0, #0
   17fa8:	str	r0, [fp, #-4]
   17fac:	b	17fc8 <__assert_fail@plt+0x6fd4>
   17fb0:	ldr	r0, [sp, #8]
   17fb4:	ldr	r1, [sp, #4]
   17fb8:	bl	10e38 <realloc@plt>
   17fbc:	str	r0, [sp]
   17fc0:	ldr	r0, [sp]
   17fc4:	str	r0, [fp, #-4]
   17fc8:	ldr	r0, [fp, #-4]
   17fcc:	mov	sp, fp
   17fd0:	pop	{fp, pc}
   17fd4:	svcvc	0x00ffffff
   17fd8:	push	{fp, lr}
   17fdc:	mov	fp, sp
   17fe0:	sub	sp, sp, #24
   17fe4:	str	r0, [fp, #-8]
   17fe8:	str	r1, [sp, #12]
   17fec:	ldr	r0, [fp, #-8]
   17ff0:	str	r0, [sp, #8]
   17ff4:	ldr	r0, [sp, #12]
   17ff8:	str	r0, [sp, #4]
   17ffc:	ldr	r0, [sp, #8]
   18000:	ldr	r1, [sp, #4]
   18004:	cmp	r0, r1
   18008:	bne	18018 <__assert_fail@plt+0x7024>
   1800c:	movw	r0, #0
   18010:	str	r0, [fp, #-4]
   18014:	b	18084 <__assert_fail@plt+0x7090>
   18018:	b	1801c <__assert_fail@plt+0x7028>
   1801c:	ldr	r0, [sp, #8]
   18020:	ldrb	r0, [r0]
   18024:	bl	1a070 <__assert_fail@plt+0x907c>
   18028:	strb	r0, [sp, #3]
   1802c:	ldr	r0, [sp, #4]
   18030:	ldrb	r0, [r0]
   18034:	bl	1a070 <__assert_fail@plt+0x907c>
   18038:	strb	r0, [sp, #2]
   1803c:	ldrb	r0, [sp, #3]
   18040:	cmp	r0, #0
   18044:	bne	1804c <__assert_fail@plt+0x7058>
   18048:	b	18074 <__assert_fail@plt+0x7080>
   1804c:	ldr	r0, [sp, #8]
   18050:	add	r0, r0, #1
   18054:	str	r0, [sp, #8]
   18058:	ldr	r0, [sp, #4]
   1805c:	add	r0, r0, #1
   18060:	str	r0, [sp, #4]
   18064:	ldrb	r0, [sp, #3]
   18068:	ldrb	r1, [sp, #2]
   1806c:	cmp	r0, r1
   18070:	beq	1801c <__assert_fail@plt+0x7028>
   18074:	ldrb	r0, [sp, #3]
   18078:	ldrb	r1, [sp, #2]
   1807c:	sub	r0, r0, r1
   18080:	str	r0, [fp, #-4]
   18084:	ldr	r0, [fp, #-4]
   18088:	mov	sp, fp
   1808c:	pop	{fp, pc}
   18090:	push	{fp, lr}
   18094:	mov	fp, sp
   18098:	sub	sp, sp, #16
   1809c:	str	r0, [sp, #8]
   180a0:	ldr	r0, [sp, #8]
   180a4:	bl	10e74 <__fpending@plt>
   180a8:	cmp	r0, #0
   180ac:	movw	r0, #0
   180b0:	movne	r0, #1
   180b4:	and	r0, r0, #1
   180b8:	strb	r0, [sp, #7]
   180bc:	ldr	r0, [sp, #8]
   180c0:	bl	10e80 <ferror_unlocked@plt>
   180c4:	cmp	r0, #0
   180c8:	movw	r0, #0
   180cc:	movne	r0, #1
   180d0:	and	r0, r0, #1
   180d4:	strb	r0, [sp, #6]
   180d8:	ldr	r0, [sp, #8]
   180dc:	bl	18160 <__assert_fail@plt+0x716c>
   180e0:	cmp	r0, #0
   180e4:	movw	r0, #0
   180e8:	movne	r0, #1
   180ec:	and	r0, r0, #1
   180f0:	strb	r0, [sp, #5]
   180f4:	ldrb	r0, [sp, #6]
   180f8:	tst	r0, #1
   180fc:	bne	18128 <__assert_fail@plt+0x7134>
   18100:	ldrb	r0, [sp, #5]
   18104:	tst	r0, #1
   18108:	beq	1814c <__assert_fail@plt+0x7158>
   1810c:	ldrb	r0, [sp, #7]
   18110:	tst	r0, #1
   18114:	bne	18128 <__assert_fail@plt+0x7134>
   18118:	bl	10f28 <__errno_location@plt>
   1811c:	ldr	r0, [r0]
   18120:	cmp	r0, #9
   18124:	beq	1814c <__assert_fail@plt+0x7158>
   18128:	ldrb	r0, [sp, #5]
   1812c:	tst	r0, #1
   18130:	bne	18140 <__assert_fail@plt+0x714c>
   18134:	bl	10f28 <__errno_location@plt>
   18138:	movw	lr, #0
   1813c:	str	lr, [r0]
   18140:	mvn	r0, #0
   18144:	str	r0, [fp, #-4]
   18148:	b	18154 <__assert_fail@plt+0x7160>
   1814c:	movw	r0, #0
   18150:	str	r0, [fp, #-4]
   18154:	ldr	r0, [fp, #-4]
   18158:	mov	sp, fp
   1815c:	pop	{fp, pc}
   18160:	push	{fp, lr}
   18164:	mov	fp, sp
   18168:	sub	sp, sp, #32
   1816c:	str	r0, [fp, #-8]
   18170:	movw	r0, #0
   18174:	str	r0, [fp, #-12]
   18178:	str	r0, [sp, #12]
   1817c:	ldr	r0, [fp, #-8]
   18180:	bl	10f4c <fileno@plt>
   18184:	str	r0, [sp, #16]
   18188:	ldr	r0, [sp, #16]
   1818c:	cmp	r0, #0
   18190:	bge	181a4 <__assert_fail@plt+0x71b0>
   18194:	ldr	r0, [fp, #-8]
   18198:	bl	10f58 <fclose@plt>
   1819c:	str	r0, [fp, #-4]
   181a0:	b	18240 <__assert_fail@plt+0x724c>
   181a4:	ldr	r0, [fp, #-8]
   181a8:	bl	10ec8 <__freading@plt>
   181ac:	cmp	r0, #0
   181b0:	beq	181e8 <__assert_fail@plt+0x71f4>
   181b4:	ldr	r0, [fp, #-8]
   181b8:	bl	10f4c <fileno@plt>
   181bc:	mov	lr, sp
   181c0:	mov	r1, #1
   181c4:	str	r1, [lr]
   181c8:	mov	r1, #0
   181cc:	mov	r2, r1
   181d0:	mov	r3, r1
   181d4:	bl	10e5c <lseek64@plt>
   181d8:	and	r0, r0, r1
   181dc:	cmn	r0, #1
   181e0:	beq	18204 <__assert_fail@plt+0x7210>
   181e4:	b	181e8 <__assert_fail@plt+0x71f4>
   181e8:	ldr	r0, [fp, #-8]
   181ec:	bl	1824c <__assert_fail@plt+0x7258>
   181f0:	cmp	r0, #0
   181f4:	beq	18204 <__assert_fail@plt+0x7210>
   181f8:	bl	10f28 <__errno_location@plt>
   181fc:	ldr	r0, [r0]
   18200:	str	r0, [fp, #-12]
   18204:	ldr	r0, [fp, #-8]
   18208:	bl	10f58 <fclose@plt>
   1820c:	str	r0, [sp, #12]
   18210:	ldr	r0, [fp, #-12]
   18214:	cmp	r0, #0
   18218:	beq	18238 <__assert_fail@plt+0x7244>
   1821c:	ldr	r0, [fp, #-12]
   18220:	str	r0, [sp, #8]
   18224:	bl	10f28 <__errno_location@plt>
   18228:	ldr	lr, [sp, #8]
   1822c:	str	lr, [r0]
   18230:	mvn	r0, #0
   18234:	str	r0, [sp, #12]
   18238:	ldr	r0, [sp, #12]
   1823c:	str	r0, [fp, #-4]
   18240:	ldr	r0, [fp, #-4]
   18244:	mov	sp, fp
   18248:	pop	{fp, pc}
   1824c:	push	{fp, lr}
   18250:	mov	fp, sp
   18254:	sub	sp, sp, #8
   18258:	str	r0, [sp]
   1825c:	ldr	r0, [sp]
   18260:	movw	r1, #0
   18264:	cmp	r0, r1
   18268:	beq	1827c <__assert_fail@plt+0x7288>
   1826c:	ldr	r0, [sp]
   18270:	bl	10ec8 <__freading@plt>
   18274:	cmp	r0, #0
   18278:	bne	1828c <__assert_fail@plt+0x7298>
   1827c:	ldr	r0, [sp]
   18280:	bl	10de4 <fflush@plt>
   18284:	str	r0, [sp, #4]
   18288:	b	182a0 <__assert_fail@plt+0x72ac>
   1828c:	ldr	r0, [sp]
   18290:	bl	182ac <__assert_fail@plt+0x72b8>
   18294:	ldr	r0, [sp]
   18298:	bl	10de4 <fflush@plt>
   1829c:	str	r0, [sp, #4]
   182a0:	ldr	r0, [sp, #4]
   182a4:	mov	sp, fp
   182a8:	pop	{fp, pc}
   182ac:	push	{fp, lr}
   182b0:	mov	fp, sp
   182b4:	sub	sp, sp, #16
   182b8:	str	r0, [fp, #-4]
   182bc:	ldr	r0, [fp, #-4]
   182c0:	ldr	r0, [r0]
   182c4:	and	r0, r0, #256	; 0x100
   182c8:	cmp	r0, #0
   182cc:	beq	182f4 <__assert_fail@plt+0x7300>
   182d0:	ldr	r0, [fp, #-4]
   182d4:	mov	r1, sp
   182d8:	mov	r2, #1
   182dc:	str	r2, [r1]
   182e0:	mov	r1, #0
   182e4:	mov	r2, r1
   182e8:	mov	r3, r1
   182ec:	bl	1833c <__assert_fail@plt+0x7348>
   182f0:	str	r0, [sp, #8]
   182f4:	mov	sp, fp
   182f8:	pop	{fp, pc}
   182fc:	push	{fp, lr}
   18300:	mov	fp, sp
   18304:	sub	sp, sp, #16
   18308:	str	r0, [fp, #-4]
   1830c:	bl	10f28 <__errno_location@plt>
   18310:	ldr	r0, [r0]
   18314:	str	r0, [sp, #8]
   18318:	ldr	r0, [fp, #-4]
   1831c:	bl	10df0 <free@plt>
   18320:	ldr	r0, [sp, #8]
   18324:	str	r0, [sp, #4]
   18328:	bl	10f28 <__errno_location@plt>
   1832c:	ldr	lr, [sp, #4]
   18330:	str	lr, [r0]
   18334:	mov	sp, fp
   18338:	pop	{fp, pc}
   1833c:	push	{fp, lr}
   18340:	mov	fp, sp
   18344:	sub	sp, sp, #32
   18348:	ldr	r1, [fp, #8]
   1834c:	str	r0, [fp, #-8]
   18350:	str	r3, [sp, #20]
   18354:	str	r2, [sp, #16]
   18358:	ldr	r0, [fp, #-8]
   1835c:	ldr	r0, [r0, #8]
   18360:	ldr	r2, [fp, #-8]
   18364:	ldr	r2, [r2, #4]
   18368:	cmp	r0, r2
   1836c:	str	r1, [sp, #4]
   18370:	bne	1841c <__assert_fail@plt+0x7428>
   18374:	ldr	r0, [fp, #-8]
   18378:	ldr	r0, [r0, #20]
   1837c:	ldr	r1, [fp, #-8]
   18380:	ldr	r1, [r1, #16]
   18384:	cmp	r0, r1
   18388:	bne	1841c <__assert_fail@plt+0x7428>
   1838c:	ldr	r0, [fp, #-8]
   18390:	ldr	r0, [r0, #36]	; 0x24
   18394:	movw	r1, #0
   18398:	cmp	r0, r1
   1839c:	bne	1841c <__assert_fail@plt+0x7428>
   183a0:	ldr	r0, [fp, #-8]
   183a4:	bl	10f4c <fileno@plt>
   183a8:	ldr	r2, [sp, #16]
   183ac:	ldr	r3, [sp, #20]
   183b0:	ldr	lr, [fp, #8]
   183b4:	mov	r1, sp
   183b8:	str	lr, [r1]
   183bc:	bl	10e5c <lseek64@plt>
   183c0:	str	r1, [sp, #12]
   183c4:	str	r0, [sp, #8]
   183c8:	ldr	r0, [sp, #8]
   183cc:	ldr	r1, [sp, #12]
   183d0:	and	r0, r0, r1
   183d4:	cmn	r0, #1
   183d8:	bne	183ec <__assert_fail@plt+0x73f8>
   183dc:	b	183e0 <__assert_fail@plt+0x73ec>
   183e0:	mvn	r0, #0
   183e4:	str	r0, [fp, #-4]
   183e8:	b	1843c <__assert_fail@plt+0x7448>
   183ec:	ldr	r0, [fp, #-8]
   183f0:	ldr	r1, [r0]
   183f4:	bic	r1, r1, #16
   183f8:	str	r1, [r0]
   183fc:	ldr	r0, [sp, #8]
   18400:	ldr	r1, [sp, #12]
   18404:	ldr	r2, [fp, #-8]
   18408:	str	r1, [r2, #84]	; 0x54
   1840c:	str	r0, [r2, #80]	; 0x50
   18410:	movw	r0, #0
   18414:	str	r0, [fp, #-4]
   18418:	b	1843c <__assert_fail@plt+0x7448>
   1841c:	ldr	r0, [fp, #-8]
   18420:	ldr	r2, [sp, #16]
   18424:	ldr	r3, [sp, #20]
   18428:	ldr	r1, [fp, #8]
   1842c:	mov	ip, sp
   18430:	str	r1, [ip]
   18434:	bl	10f64 <fseeko64@plt>
   18438:	str	r0, [fp, #-4]
   1843c:	ldr	r0, [fp, #-4]
   18440:	mov	sp, fp
   18444:	pop	{fp, pc}
   18448:	push	{fp, lr}
   1844c:	mov	fp, sp
   18450:	bl	10f28 <__errno_location@plt>
   18454:	movw	lr, #12
   18458:	str	lr, [r0]
   1845c:	movw	r0, #0
   18460:	pop	{fp, pc}
   18464:	push	{fp, lr}
   18468:	mov	fp, sp
   1846c:	sub	sp, sp, #8
   18470:	str	r0, [sp, #4]
   18474:	ldr	r0, [sp, #4]
   18478:	cmn	r0, #1
   1847c:	bhi	18490 <__assert_fail@plt+0x749c>
   18480:	ldr	r0, [sp, #4]
   18484:	bl	17ec4 <__assert_fail@plt+0x6ed0>
   18488:	str	r0, [sp]
   1848c:	b	18498 <__assert_fail@plt+0x74a4>
   18490:	bl	18448 <__assert_fail@plt+0x7454>
   18494:	str	r0, [sp]
   18498:	ldr	r0, [sp]
   1849c:	mov	sp, fp
   184a0:	pop	{fp, pc}
   184a4:	push	{fp, lr}
   184a8:	mov	fp, sp
   184ac:	sub	sp, sp, #16
   184b0:	str	r0, [fp, #-4]
   184b4:	str	r1, [sp, #8]
   184b8:	ldr	r0, [sp, #8]
   184bc:	cmn	r0, #1
   184c0:	bhi	184f8 <__assert_fail@plt+0x7504>
   184c4:	ldr	r0, [fp, #-4]
   184c8:	ldr	r1, [sp, #8]
   184cc:	ldr	r2, [sp, #8]
   184d0:	cmp	r2, #0
   184d4:	movw	r2, #0
   184d8:	movne	r2, #1
   184dc:	mvn	r3, #0
   184e0:	eor	r2, r2, r3
   184e4:	and	r2, r2, #1
   184e8:	orr	r1, r1, r2
   184ec:	bl	17f34 <__assert_fail@plt+0x6f40>
   184f0:	str	r0, [sp, #4]
   184f4:	b	18500 <__assert_fail@plt+0x750c>
   184f8:	bl	18448 <__assert_fail@plt+0x7454>
   184fc:	str	r0, [sp, #4]
   18500:	ldr	r0, [sp, #4]
   18504:	mov	sp, fp
   18508:	pop	{fp, pc}
   1850c:	push	{fp, lr}
   18510:	mov	fp, sp
   18514:	sub	sp, sp, #16
   18518:	str	r0, [sp, #8]
   1851c:	str	r1, [sp, #4]
   18520:	ldr	r0, [sp, #8]
   18524:	mvn	r1, #0
   18528:	cmp	r1, r0
   1852c:	bcs	18550 <__assert_fail@plt+0x755c>
   18530:	ldr	r0, [sp, #4]
   18534:	cmp	r0, #0
   18538:	beq	18548 <__assert_fail@plt+0x7554>
   1853c:	bl	18448 <__assert_fail@plt+0x7454>
   18540:	str	r0, [fp, #-4]
   18544:	b	18590 <__assert_fail@plt+0x759c>
   18548:	movw	r0, #0
   1854c:	str	r0, [sp, #8]
   18550:	ldr	r0, [sp, #4]
   18554:	mvn	r1, #0
   18558:	cmp	r1, r0
   1855c:	bcs	18580 <__assert_fail@plt+0x758c>
   18560:	ldr	r0, [sp, #8]
   18564:	cmp	r0, #0
   18568:	beq	18578 <__assert_fail@plt+0x7584>
   1856c:	bl	18448 <__assert_fail@plt+0x7454>
   18570:	str	r0, [fp, #-4]
   18574:	b	18590 <__assert_fail@plt+0x759c>
   18578:	movw	r0, #0
   1857c:	str	r0, [sp, #4]
   18580:	ldr	r0, [sp, #8]
   18584:	ldr	r1, [sp, #4]
   18588:	bl	17e28 <__assert_fail@plt+0x6e34>
   1858c:	str	r0, [fp, #-4]
   18590:	ldr	r0, [fp, #-4]
   18594:	mov	sp, fp
   18598:	pop	{fp, pc}
   1859c:	push	{fp, lr}
   185a0:	mov	fp, sp
   185a4:	sub	sp, sp, #16
   185a8:	str	r0, [fp, #-4]
   185ac:	str	r1, [sp, #8]
   185b0:	str	r2, [sp, #4]
   185b4:	ldr	r0, [sp, #8]
   185b8:	cmp	r0, #0
   185bc:	beq	185cc <__assert_fail@plt+0x75d8>
   185c0:	ldr	r0, [sp, #4]
   185c4:	cmp	r0, #0
   185c8:	bne	185d8 <__assert_fail@plt+0x75e4>
   185cc:	movw	r0, #1
   185d0:	str	r0, [sp, #4]
   185d4:	str	r0, [sp, #8]
   185d8:	ldr	r0, [sp, #8]
   185dc:	cmn	r0, #1
   185e0:	bhi	18608 <__assert_fail@plt+0x7614>
   185e4:	ldr	r0, [sp, #4]
   185e8:	cmn	r0, #1
   185ec:	bhi	18608 <__assert_fail@plt+0x7614>
   185f0:	ldr	r0, [fp, #-4]
   185f4:	ldr	r1, [sp, #8]
   185f8:	ldr	r2, [sp, #4]
   185fc:	bl	18728 <__assert_fail@plt+0x7734>
   18600:	str	r0, [sp]
   18604:	b	18610 <__assert_fail@plt+0x761c>
   18608:	bl	18448 <__assert_fail@plt+0x7454>
   1860c:	str	r0, [sp]
   18610:	ldr	r0, [sp]
   18614:	mov	sp, fp
   18618:	pop	{fp, pc}
   1861c:	push	{fp, lr}
   18620:	mov	fp, sp
   18624:	sub	sp, sp, #8
   18628:	movw	r0, #14
   1862c:	bl	10f94 <nl_langinfo@plt>
   18630:	str	r0, [sp, #4]
   18634:	ldr	r0, [sp, #4]
   18638:	movw	lr, #0
   1863c:	cmp	r0, lr
   18640:	bne	18650 <__assert_fail@plt+0x765c>
   18644:	movw	r0, #42637	; 0xa68d
   18648:	movt	r0, #1
   1864c:	str	r0, [sp, #4]
   18650:	ldr	r0, [sp, #4]
   18654:	ldrb	r0, [r0]
   18658:	cmp	r0, #0
   1865c:	bne	1866c <__assert_fail@plt+0x7678>
   18660:	movw	r0, #44781	; 0xaeed
   18664:	movt	r0, #1
   18668:	str	r0, [sp, #4]
   1866c:	ldr	r0, [sp, #4]
   18670:	mov	sp, fp
   18674:	pop	{fp, pc}
   18678:	push	{fp, lr}
   1867c:	mov	fp, sp
   18680:	sub	sp, sp, #32
   18684:	str	r0, [fp, #-8]
   18688:	str	r1, [fp, #-12]
   1868c:	str	r2, [sp, #16]
   18690:	str	r3, [sp, #12]
   18694:	ldr	r0, [fp, #-8]
   18698:	movw	r1, #0
   1869c:	cmp	r0, r1
   186a0:	bne	186ac <__assert_fail@plt+0x76b8>
   186a4:	add	r0, sp, #4
   186a8:	str	r0, [fp, #-8]
   186ac:	ldr	r0, [fp, #-8]
   186b0:	ldr	r1, [fp, #-12]
   186b4:	ldr	r2, [sp, #16]
   186b8:	ldr	r3, [sp, #12]
   186bc:	bl	10e8c <mbrtowc@plt>
   186c0:	str	r0, [sp, #8]
   186c4:	ldr	r0, [sp, #8]
   186c8:	mvn	r1, #1
   186cc:	cmp	r1, r0
   186d0:	bhi	18714 <__assert_fail@plt+0x7720>
   186d4:	ldr	r0, [sp, #16]
   186d8:	cmp	r0, #0
   186dc:	beq	18714 <__assert_fail@plt+0x7720>
   186e0:	movw	r0, #0
   186e4:	bl	1a0f8 <__assert_fail@plt+0x9104>
   186e8:	tst	r0, #1
   186ec:	bne	18714 <__assert_fail@plt+0x7720>
   186f0:	ldr	r0, [fp, #-12]
   186f4:	ldrb	r0, [r0]
   186f8:	strb	r0, [sp, #3]
   186fc:	ldrb	r0, [sp, #3]
   18700:	ldr	r1, [fp, #-8]
   18704:	str	r0, [r1]
   18708:	movw	r0, #1
   1870c:	str	r0, [fp, #-4]
   18710:	b	1871c <__assert_fail@plt+0x7728>
   18714:	ldr	r0, [sp, #8]
   18718:	str	r0, [fp, #-4]
   1871c:	ldr	r0, [fp, #-4]
   18720:	mov	sp, fp
   18724:	pop	{fp, pc}
   18728:	push	{fp, lr}
   1872c:	mov	fp, sp
   18730:	sub	sp, sp, #176	; 0xb0
   18734:	str	r0, [fp, #-8]
   18738:	str	r1, [fp, #-12]
   1873c:	str	r2, [fp, #-16]
   18740:	b	18af8 <__assert_fail@plt+0x7b04>
   18744:	b	18918 <__assert_fail@plt+0x7924>
   18748:	ldr	r0, [fp, #-16]
   1874c:	cmp	r0, #0
   18750:	bcs	18854 <__assert_fail@plt+0x7860>
   18754:	ldr	r0, [fp, #-12]
   18758:	cmp	r0, #0
   1875c:	bcs	187e4 <__assert_fail@plt+0x77f0>
   18760:	b	18780 <__assert_fail@plt+0x778c>
   18764:	ldr	r0, [fp, #-12]
   18768:	ldr	r1, [fp, #-16]
   1876c:	movw	r2, #127	; 0x7f
   18770:	udiv	r1, r2, r1
   18774:	cmp	r0, r1
   18778:	bcc	188e8 <__assert_fail@plt+0x78f4>
   1877c:	b	18900 <__assert_fail@plt+0x790c>
   18780:	b	18794 <__assert_fail@plt+0x77a0>
   18784:	ldr	r0, [fp, #-16]
   18788:	cmp	r0, #1
   1878c:	bcc	187a4 <__assert_fail@plt+0x77b0>
   18790:	b	187b0 <__assert_fail@plt+0x77bc>
   18794:	ldr	r0, [fp, #-16]
   18798:	movw	r1, #0
   1879c:	cmp	r1, r0
   187a0:	bcs	187b0 <__assert_fail@plt+0x77bc>
   187a4:	movw	r0, #0
   187a8:	str	r0, [fp, #-24]	; 0xffffffe8
   187ac:	b	187c8 <__assert_fail@plt+0x77d4>
   187b0:	ldr	r0, [fp, #-16]
   187b4:	movw	r1, #0
   187b8:	sub	r0, r1, r0
   187bc:	movw	r1, #127	; 0x7f
   187c0:	udiv	r0, r1, r0
   187c4:	str	r0, [fp, #-24]	; 0xffffffe8
   187c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187cc:	ldr	r1, [fp, #-12]
   187d0:	mvn	r2, #0
   187d4:	sub	r1, r2, r1
   187d8:	cmp	r0, r1
   187dc:	bls	188e8 <__assert_fail@plt+0x78f4>
   187e0:	b	18900 <__assert_fail@plt+0x790c>
   187e4:	ldr	r0, [fp, #-16]
   187e8:	cmn	r0, #1
   187ec:	bne	18838 <__assert_fail@plt+0x7844>
   187f0:	b	18810 <__assert_fail@plt+0x781c>
   187f4:	ldr	r0, [fp, #-12]
   187f8:	mvn	r1, #127	; 0x7f
   187fc:	add	r0, r0, r1
   18800:	movw	r1, #0
   18804:	cmp	r1, r0
   18808:	bcc	188e8 <__assert_fail@plt+0x78f4>
   1880c:	b	18900 <__assert_fail@plt+0x790c>
   18810:	ldr	r0, [fp, #-12]
   18814:	movw	r1, #0
   18818:	cmp	r1, r0
   1881c:	bcs	18900 <__assert_fail@plt+0x790c>
   18820:	ldr	r0, [fp, #-12]
   18824:	sub	r0, r0, #1
   18828:	movw	r1, #127	; 0x7f
   1882c:	cmp	r1, r0
   18830:	bcc	188e8 <__assert_fail@plt+0x78f4>
   18834:	b	18900 <__assert_fail@plt+0x790c>
   18838:	ldr	r0, [fp, #-16]
   1883c:	mvn	r1, #127	; 0x7f
   18840:	udiv	r0, r1, r0
   18844:	ldr	r1, [fp, #-12]
   18848:	cmp	r0, r1
   1884c:	bcc	188e8 <__assert_fail@plt+0x78f4>
   18850:	b	18900 <__assert_fail@plt+0x790c>
   18854:	ldr	r0, [fp, #-16]
   18858:	cmp	r0, #0
   1885c:	bne	18864 <__assert_fail@plt+0x7870>
   18860:	b	18900 <__assert_fail@plt+0x790c>
   18864:	ldr	r0, [fp, #-12]
   18868:	cmp	r0, #0
   1886c:	bcs	188d0 <__assert_fail@plt+0x78dc>
   18870:	ldr	r0, [fp, #-12]
   18874:	cmn	r0, #1
   18878:	bne	188b4 <__assert_fail@plt+0x78c0>
   1887c:	b	1889c <__assert_fail@plt+0x78a8>
   18880:	ldr	r0, [fp, #-16]
   18884:	mvn	r1, #127	; 0x7f
   18888:	add	r0, r0, r1
   1888c:	movw	r1, #0
   18890:	cmp	r1, r0
   18894:	bcc	188e8 <__assert_fail@plt+0x78f4>
   18898:	b	18900 <__assert_fail@plt+0x790c>
   1889c:	ldr	r0, [fp, #-16]
   188a0:	sub	r0, r0, #1
   188a4:	movw	r1, #127	; 0x7f
   188a8:	cmp	r1, r0
   188ac:	bcc	188e8 <__assert_fail@plt+0x78f4>
   188b0:	b	18900 <__assert_fail@plt+0x790c>
   188b4:	ldr	r0, [fp, #-12]
   188b8:	mvn	r1, #127	; 0x7f
   188bc:	udiv	r0, r1, r0
   188c0:	ldr	r1, [fp, #-16]
   188c4:	cmp	r0, r1
   188c8:	bcc	188e8 <__assert_fail@plt+0x78f4>
   188cc:	b	18900 <__assert_fail@plt+0x790c>
   188d0:	ldr	r0, [fp, #-16]
   188d4:	movw	r1, #127	; 0x7f
   188d8:	udiv	r0, r1, r0
   188dc:	ldr	r1, [fp, #-12]
   188e0:	cmp	r0, r1
   188e4:	bcs	18900 <__assert_fail@plt+0x790c>
   188e8:	ldr	r0, [fp, #-12]
   188ec:	ldr	r1, [fp, #-16]
   188f0:	mul	r0, r0, r1
   188f4:	sxtb	r0, r0
   188f8:	str	r0, [fp, #-20]	; 0xffffffec
   188fc:	b	19a78 <__assert_fail@plt+0x8a84>
   18900:	ldr	r0, [fp, #-12]
   18904:	ldr	r1, [fp, #-16]
   18908:	mul	r0, r0, r1
   1890c:	sxtb	r0, r0
   18910:	str	r0, [fp, #-20]	; 0xffffffec
   18914:	b	19a90 <__assert_fail@plt+0x8a9c>
   18918:	ldr	r0, [fp, #-16]
   1891c:	cmp	r0, #0
   18920:	bcs	18a2c <__assert_fail@plt+0x7a38>
   18924:	ldr	r0, [fp, #-12]
   18928:	cmp	r0, #0
   1892c:	bcs	189b4 <__assert_fail@plt+0x79c0>
   18930:	b	18950 <__assert_fail@plt+0x795c>
   18934:	ldr	r0, [fp, #-12]
   18938:	ldr	r1, [fp, #-16]
   1893c:	movw	r2, #255	; 0xff
   18940:	udiv	r1, r2, r1
   18944:	cmp	r0, r1
   18948:	bcc	18ac8 <__assert_fail@plt+0x7ad4>
   1894c:	b	18ae0 <__assert_fail@plt+0x7aec>
   18950:	b	18964 <__assert_fail@plt+0x7970>
   18954:	ldr	r0, [fp, #-16]
   18958:	cmp	r0, #1
   1895c:	bcc	18974 <__assert_fail@plt+0x7980>
   18960:	b	18980 <__assert_fail@plt+0x798c>
   18964:	ldr	r0, [fp, #-16]
   18968:	movw	r1, #0
   1896c:	cmp	r1, r0
   18970:	bcs	18980 <__assert_fail@plt+0x798c>
   18974:	movw	r0, #0
   18978:	str	r0, [fp, #-28]	; 0xffffffe4
   1897c:	b	18998 <__assert_fail@plt+0x79a4>
   18980:	ldr	r0, [fp, #-16]
   18984:	movw	r1, #0
   18988:	sub	r0, r1, r0
   1898c:	movw	r1, #255	; 0xff
   18990:	udiv	r0, r1, r0
   18994:	str	r0, [fp, #-28]	; 0xffffffe4
   18998:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1899c:	ldr	r1, [fp, #-12]
   189a0:	mvn	r2, #0
   189a4:	sub	r1, r2, r1
   189a8:	cmp	r0, r1
   189ac:	bls	18ac8 <__assert_fail@plt+0x7ad4>
   189b0:	b	18ae0 <__assert_fail@plt+0x7aec>
   189b4:	b	189bc <__assert_fail@plt+0x79c8>
   189b8:	b	189c0 <__assert_fail@plt+0x79cc>
   189bc:	b	18a10 <__assert_fail@plt+0x7a1c>
   189c0:	ldr	r0, [fp, #-16]
   189c4:	cmn	r0, #1
   189c8:	bne	18a10 <__assert_fail@plt+0x7a1c>
   189cc:	b	189e8 <__assert_fail@plt+0x79f4>
   189d0:	ldr	r0, [fp, #-12]
   189d4:	add	r0, r0, #0
   189d8:	movw	r1, #0
   189dc:	cmp	r1, r0
   189e0:	bcc	18ac8 <__assert_fail@plt+0x7ad4>
   189e4:	b	18ae0 <__assert_fail@plt+0x7aec>
   189e8:	ldr	r0, [fp, #-12]
   189ec:	movw	r1, #0
   189f0:	cmp	r1, r0
   189f4:	bcs	18ae0 <__assert_fail@plt+0x7aec>
   189f8:	ldr	r0, [fp, #-12]
   189fc:	sub	r0, r0, #1
   18a00:	mvn	r1, #0
   18a04:	cmp	r1, r0
   18a08:	bcc	18ac8 <__assert_fail@plt+0x7ad4>
   18a0c:	b	18ae0 <__assert_fail@plt+0x7aec>
   18a10:	ldr	r0, [fp, #-16]
   18a14:	movw	r1, #0
   18a18:	udiv	r0, r1, r0
   18a1c:	ldr	r1, [fp, #-12]
   18a20:	cmp	r0, r1
   18a24:	bcc	18ac8 <__assert_fail@plt+0x7ad4>
   18a28:	b	18ae0 <__assert_fail@plt+0x7aec>
   18a2c:	ldr	r0, [fp, #-16]
   18a30:	cmp	r0, #0
   18a34:	bne	18a3c <__assert_fail@plt+0x7a48>
   18a38:	b	18ae0 <__assert_fail@plt+0x7aec>
   18a3c:	ldr	r0, [fp, #-12]
   18a40:	cmp	r0, #0
   18a44:	bcs	18ab0 <__assert_fail@plt+0x7abc>
   18a48:	b	18a50 <__assert_fail@plt+0x7a5c>
   18a4c:	b	18a54 <__assert_fail@plt+0x7a60>
   18a50:	b	18a94 <__assert_fail@plt+0x7aa0>
   18a54:	ldr	r0, [fp, #-12]
   18a58:	cmn	r0, #1
   18a5c:	bne	18a94 <__assert_fail@plt+0x7aa0>
   18a60:	b	18a7c <__assert_fail@plt+0x7a88>
   18a64:	ldr	r0, [fp, #-16]
   18a68:	add	r0, r0, #0
   18a6c:	movw	r1, #0
   18a70:	cmp	r1, r0
   18a74:	bcc	18ac8 <__assert_fail@plt+0x7ad4>
   18a78:	b	18ae0 <__assert_fail@plt+0x7aec>
   18a7c:	ldr	r0, [fp, #-16]
   18a80:	sub	r0, r0, #1
   18a84:	mvn	r1, #0
   18a88:	cmp	r1, r0
   18a8c:	bcc	18ac8 <__assert_fail@plt+0x7ad4>
   18a90:	b	18ae0 <__assert_fail@plt+0x7aec>
   18a94:	ldr	r0, [fp, #-12]
   18a98:	movw	r1, #0
   18a9c:	udiv	r0, r1, r0
   18aa0:	ldr	r1, [fp, #-16]
   18aa4:	cmp	r0, r1
   18aa8:	bcc	18ac8 <__assert_fail@plt+0x7ad4>
   18aac:	b	18ae0 <__assert_fail@plt+0x7aec>
   18ab0:	ldr	r0, [fp, #-16]
   18ab4:	movw	r1, #255	; 0xff
   18ab8:	udiv	r0, r1, r0
   18abc:	ldr	r1, [fp, #-12]
   18ac0:	cmp	r0, r1
   18ac4:	bcs	18ae0 <__assert_fail@plt+0x7aec>
   18ac8:	ldr	r0, [fp, #-12]
   18acc:	ldr	r1, [fp, #-16]
   18ad0:	mul	r0, r0, r1
   18ad4:	and	r0, r0, #255	; 0xff
   18ad8:	str	r0, [fp, #-20]	; 0xffffffec
   18adc:	b	19a78 <__assert_fail@plt+0x8a84>
   18ae0:	ldr	r0, [fp, #-12]
   18ae4:	ldr	r1, [fp, #-16]
   18ae8:	mul	r0, r0, r1
   18aec:	and	r0, r0, #255	; 0xff
   18af0:	str	r0, [fp, #-20]	; 0xffffffec
   18af4:	b	19a90 <__assert_fail@plt+0x8a9c>
   18af8:	b	18eb0 <__assert_fail@plt+0x7ebc>
   18afc:	b	18cd0 <__assert_fail@plt+0x7cdc>
   18b00:	ldr	r0, [fp, #-16]
   18b04:	cmp	r0, #0
   18b08:	bcs	18c0c <__assert_fail@plt+0x7c18>
   18b0c:	ldr	r0, [fp, #-12]
   18b10:	cmp	r0, #0
   18b14:	bcs	18b9c <__assert_fail@plt+0x7ba8>
   18b18:	b	18b38 <__assert_fail@plt+0x7b44>
   18b1c:	ldr	r0, [fp, #-12]
   18b20:	ldr	r1, [fp, #-16]
   18b24:	movw	r2, #32767	; 0x7fff
   18b28:	udiv	r1, r2, r1
   18b2c:	cmp	r0, r1
   18b30:	bcc	18ca0 <__assert_fail@plt+0x7cac>
   18b34:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18b38:	b	18b4c <__assert_fail@plt+0x7b58>
   18b3c:	ldr	r0, [fp, #-16]
   18b40:	cmp	r0, #1
   18b44:	bcc	18b5c <__assert_fail@plt+0x7b68>
   18b48:	b	18b68 <__assert_fail@plt+0x7b74>
   18b4c:	ldr	r0, [fp, #-16]
   18b50:	movw	r1, #0
   18b54:	cmp	r1, r0
   18b58:	bcs	18b68 <__assert_fail@plt+0x7b74>
   18b5c:	movw	r0, #0
   18b60:	str	r0, [fp, #-32]	; 0xffffffe0
   18b64:	b	18b80 <__assert_fail@plt+0x7b8c>
   18b68:	ldr	r0, [fp, #-16]
   18b6c:	movw	r1, #0
   18b70:	sub	r0, r1, r0
   18b74:	movw	r1, #32767	; 0x7fff
   18b78:	udiv	r0, r1, r0
   18b7c:	str	r0, [fp, #-32]	; 0xffffffe0
   18b80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b84:	ldr	r1, [fp, #-12]
   18b88:	mvn	r2, #0
   18b8c:	sub	r1, r2, r1
   18b90:	cmp	r0, r1
   18b94:	bls	18ca0 <__assert_fail@plt+0x7cac>
   18b98:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18b9c:	ldr	r0, [fp, #-16]
   18ba0:	cmn	r0, #1
   18ba4:	bne	18bf0 <__assert_fail@plt+0x7bfc>
   18ba8:	b	18bc8 <__assert_fail@plt+0x7bd4>
   18bac:	ldr	r0, [pc, #3840]	; 19ab4 <__assert_fail@plt+0x8ac0>
   18bb0:	ldr	r1, [fp, #-12]
   18bb4:	add	r0, r1, r0
   18bb8:	movw	r1, #0
   18bbc:	cmp	r1, r0
   18bc0:	bcc	18ca0 <__assert_fail@plt+0x7cac>
   18bc4:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18bc8:	ldr	r0, [fp, #-12]
   18bcc:	movw	r1, #0
   18bd0:	cmp	r1, r0
   18bd4:	bcs	18cb8 <__assert_fail@plt+0x7cc4>
   18bd8:	ldr	r0, [fp, #-12]
   18bdc:	sub	r0, r0, #1
   18be0:	movw	r1, #32767	; 0x7fff
   18be4:	cmp	r1, r0
   18be8:	bcc	18ca0 <__assert_fail@plt+0x7cac>
   18bec:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18bf0:	ldr	r0, [pc, #3772]	; 19ab4 <__assert_fail@plt+0x8ac0>
   18bf4:	ldr	r1, [fp, #-16]
   18bf8:	udiv	r0, r0, r1
   18bfc:	ldr	r1, [fp, #-12]
   18c00:	cmp	r0, r1
   18c04:	bcc	18ca0 <__assert_fail@plt+0x7cac>
   18c08:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18c0c:	ldr	r0, [fp, #-16]
   18c10:	cmp	r0, #0
   18c14:	bne	18c1c <__assert_fail@plt+0x7c28>
   18c18:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18c1c:	ldr	r0, [fp, #-12]
   18c20:	cmp	r0, #0
   18c24:	bcs	18c88 <__assert_fail@plt+0x7c94>
   18c28:	ldr	r0, [fp, #-12]
   18c2c:	cmn	r0, #1
   18c30:	bne	18c6c <__assert_fail@plt+0x7c78>
   18c34:	b	18c54 <__assert_fail@plt+0x7c60>
   18c38:	ldr	r0, [pc, #3700]	; 19ab4 <__assert_fail@plt+0x8ac0>
   18c3c:	ldr	r1, [fp, #-16]
   18c40:	add	r0, r1, r0
   18c44:	movw	r1, #0
   18c48:	cmp	r1, r0
   18c4c:	bcc	18ca0 <__assert_fail@plt+0x7cac>
   18c50:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18c54:	ldr	r0, [fp, #-16]
   18c58:	sub	r0, r0, #1
   18c5c:	movw	r1, #32767	; 0x7fff
   18c60:	cmp	r1, r0
   18c64:	bcc	18ca0 <__assert_fail@plt+0x7cac>
   18c68:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18c6c:	ldr	r0, [pc, #3648]	; 19ab4 <__assert_fail@plt+0x8ac0>
   18c70:	ldr	r1, [fp, #-12]
   18c74:	udiv	r0, r0, r1
   18c78:	ldr	r1, [fp, #-16]
   18c7c:	cmp	r0, r1
   18c80:	bcc	18ca0 <__assert_fail@plt+0x7cac>
   18c84:	b	18cb8 <__assert_fail@plt+0x7cc4>
   18c88:	ldr	r0, [fp, #-16]
   18c8c:	movw	r1, #32767	; 0x7fff
   18c90:	udiv	r0, r1, r0
   18c94:	ldr	r1, [fp, #-12]
   18c98:	cmp	r0, r1
   18c9c:	bcs	18cb8 <__assert_fail@plt+0x7cc4>
   18ca0:	ldr	r0, [fp, #-12]
   18ca4:	ldr	r1, [fp, #-16]
   18ca8:	mul	r0, r0, r1
   18cac:	sxth	r0, r0
   18cb0:	str	r0, [fp, #-20]	; 0xffffffec
   18cb4:	b	19a78 <__assert_fail@plt+0x8a84>
   18cb8:	ldr	r0, [fp, #-12]
   18cbc:	ldr	r1, [fp, #-16]
   18cc0:	mul	r0, r0, r1
   18cc4:	sxth	r0, r0
   18cc8:	str	r0, [fp, #-20]	; 0xffffffec
   18ccc:	b	19a90 <__assert_fail@plt+0x8a9c>
   18cd0:	ldr	r0, [fp, #-16]
   18cd4:	cmp	r0, #0
   18cd8:	bcs	18de4 <__assert_fail@plt+0x7df0>
   18cdc:	ldr	r0, [fp, #-12]
   18ce0:	cmp	r0, #0
   18ce4:	bcs	18d6c <__assert_fail@plt+0x7d78>
   18ce8:	b	18d08 <__assert_fail@plt+0x7d14>
   18cec:	ldr	r0, [fp, #-12]
   18cf0:	ldr	r1, [fp, #-16]
   18cf4:	movw	r2, #65535	; 0xffff
   18cf8:	udiv	r1, r2, r1
   18cfc:	cmp	r0, r1
   18d00:	bcc	18e80 <__assert_fail@plt+0x7e8c>
   18d04:	b	18e98 <__assert_fail@plt+0x7ea4>
   18d08:	b	18d1c <__assert_fail@plt+0x7d28>
   18d0c:	ldr	r0, [fp, #-16]
   18d10:	cmp	r0, #1
   18d14:	bcc	18d2c <__assert_fail@plt+0x7d38>
   18d18:	b	18d38 <__assert_fail@plt+0x7d44>
   18d1c:	ldr	r0, [fp, #-16]
   18d20:	movw	r1, #0
   18d24:	cmp	r1, r0
   18d28:	bcs	18d38 <__assert_fail@plt+0x7d44>
   18d2c:	movw	r0, #0
   18d30:	str	r0, [fp, #-36]	; 0xffffffdc
   18d34:	b	18d50 <__assert_fail@plt+0x7d5c>
   18d38:	ldr	r0, [fp, #-16]
   18d3c:	movw	r1, #0
   18d40:	sub	r0, r1, r0
   18d44:	movw	r1, #65535	; 0xffff
   18d48:	udiv	r0, r1, r0
   18d4c:	str	r0, [fp, #-36]	; 0xffffffdc
   18d50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d54:	ldr	r1, [fp, #-12]
   18d58:	mvn	r2, #0
   18d5c:	sub	r1, r2, r1
   18d60:	cmp	r0, r1
   18d64:	bls	18e80 <__assert_fail@plt+0x7e8c>
   18d68:	b	18e98 <__assert_fail@plt+0x7ea4>
   18d6c:	b	18d74 <__assert_fail@plt+0x7d80>
   18d70:	b	18d78 <__assert_fail@plt+0x7d84>
   18d74:	b	18dc8 <__assert_fail@plt+0x7dd4>
   18d78:	ldr	r0, [fp, #-16]
   18d7c:	cmn	r0, #1
   18d80:	bne	18dc8 <__assert_fail@plt+0x7dd4>
   18d84:	b	18da0 <__assert_fail@plt+0x7dac>
   18d88:	ldr	r0, [fp, #-12]
   18d8c:	add	r0, r0, #0
   18d90:	movw	r1, #0
   18d94:	cmp	r1, r0
   18d98:	bcc	18e80 <__assert_fail@plt+0x7e8c>
   18d9c:	b	18e98 <__assert_fail@plt+0x7ea4>
   18da0:	ldr	r0, [fp, #-12]
   18da4:	movw	r1, #0
   18da8:	cmp	r1, r0
   18dac:	bcs	18e98 <__assert_fail@plt+0x7ea4>
   18db0:	ldr	r0, [fp, #-12]
   18db4:	sub	r0, r0, #1
   18db8:	mvn	r1, #0
   18dbc:	cmp	r1, r0
   18dc0:	bcc	18e80 <__assert_fail@plt+0x7e8c>
   18dc4:	b	18e98 <__assert_fail@plt+0x7ea4>
   18dc8:	ldr	r0, [fp, #-16]
   18dcc:	movw	r1, #0
   18dd0:	udiv	r0, r1, r0
   18dd4:	ldr	r1, [fp, #-12]
   18dd8:	cmp	r0, r1
   18ddc:	bcc	18e80 <__assert_fail@plt+0x7e8c>
   18de0:	b	18e98 <__assert_fail@plt+0x7ea4>
   18de4:	ldr	r0, [fp, #-16]
   18de8:	cmp	r0, #0
   18dec:	bne	18df4 <__assert_fail@plt+0x7e00>
   18df0:	b	18e98 <__assert_fail@plt+0x7ea4>
   18df4:	ldr	r0, [fp, #-12]
   18df8:	cmp	r0, #0
   18dfc:	bcs	18e68 <__assert_fail@plt+0x7e74>
   18e00:	b	18e08 <__assert_fail@plt+0x7e14>
   18e04:	b	18e0c <__assert_fail@plt+0x7e18>
   18e08:	b	18e4c <__assert_fail@plt+0x7e58>
   18e0c:	ldr	r0, [fp, #-12]
   18e10:	cmn	r0, #1
   18e14:	bne	18e4c <__assert_fail@plt+0x7e58>
   18e18:	b	18e34 <__assert_fail@plt+0x7e40>
   18e1c:	ldr	r0, [fp, #-16]
   18e20:	add	r0, r0, #0
   18e24:	movw	r1, #0
   18e28:	cmp	r1, r0
   18e2c:	bcc	18e80 <__assert_fail@plt+0x7e8c>
   18e30:	b	18e98 <__assert_fail@plt+0x7ea4>
   18e34:	ldr	r0, [fp, #-16]
   18e38:	sub	r0, r0, #1
   18e3c:	mvn	r1, #0
   18e40:	cmp	r1, r0
   18e44:	bcc	18e80 <__assert_fail@plt+0x7e8c>
   18e48:	b	18e98 <__assert_fail@plt+0x7ea4>
   18e4c:	ldr	r0, [fp, #-12]
   18e50:	movw	r1, #0
   18e54:	udiv	r0, r1, r0
   18e58:	ldr	r1, [fp, #-16]
   18e5c:	cmp	r0, r1
   18e60:	bcc	18e80 <__assert_fail@plt+0x7e8c>
   18e64:	b	18e98 <__assert_fail@plt+0x7ea4>
   18e68:	ldr	r0, [fp, #-16]
   18e6c:	movw	r1, #65535	; 0xffff
   18e70:	udiv	r0, r1, r0
   18e74:	ldr	r1, [fp, #-12]
   18e78:	cmp	r0, r1
   18e7c:	bcs	18e98 <__assert_fail@plt+0x7ea4>
   18e80:	ldr	r0, [fp, #-12]
   18e84:	ldr	r1, [fp, #-16]
   18e88:	mul	r0, r0, r1
   18e8c:	uxth	r0, r0
   18e90:	str	r0, [fp, #-20]	; 0xffffffec
   18e94:	b	19a78 <__assert_fail@plt+0x8a84>
   18e98:	ldr	r0, [fp, #-12]
   18e9c:	ldr	r1, [fp, #-16]
   18ea0:	mul	r0, r0, r1
   18ea4:	uxth	r0, r0
   18ea8:	str	r0, [fp, #-20]	; 0xffffffec
   18eac:	b	19a90 <__assert_fail@plt+0x8a9c>
   18eb0:	b	18eb4 <__assert_fail@plt+0x7ec0>
   18eb4:	b	19078 <__assert_fail@plt+0x8084>
   18eb8:	ldr	r0, [fp, #-16]
   18ebc:	cmp	r0, #0
   18ec0:	bcs	18fc0 <__assert_fail@plt+0x7fcc>
   18ec4:	ldr	r0, [fp, #-12]
   18ec8:	cmp	r0, #0
   18ecc:	bcs	18f54 <__assert_fail@plt+0x7f60>
   18ed0:	b	18ef0 <__assert_fail@plt+0x7efc>
   18ed4:	ldr	r0, [pc, #3024]	; 19aac <__assert_fail@plt+0x8ab8>
   18ed8:	ldr	r1, [fp, #-12]
   18edc:	ldr	r2, [fp, #-16]
   18ee0:	udiv	r0, r0, r2
   18ee4:	cmp	r1, r0
   18ee8:	bcc	19050 <__assert_fail@plt+0x805c>
   18eec:	b	19064 <__assert_fail@plt+0x8070>
   18ef0:	b	18f04 <__assert_fail@plt+0x7f10>
   18ef4:	ldr	r0, [fp, #-16]
   18ef8:	cmp	r0, #1
   18efc:	bcc	18f14 <__assert_fail@plt+0x7f20>
   18f00:	b	18f20 <__assert_fail@plt+0x7f2c>
   18f04:	ldr	r0, [fp, #-16]
   18f08:	movw	r1, #0
   18f0c:	cmp	r1, r0
   18f10:	bcs	18f20 <__assert_fail@plt+0x7f2c>
   18f14:	movw	r0, #0
   18f18:	str	r0, [fp, #-40]	; 0xffffffd8
   18f1c:	b	18f38 <__assert_fail@plt+0x7f44>
   18f20:	ldr	r0, [pc, #2948]	; 19aac <__assert_fail@plt+0x8ab8>
   18f24:	ldr	r1, [fp, #-16]
   18f28:	movw	r2, #0
   18f2c:	sub	r1, r2, r1
   18f30:	udiv	r0, r0, r1
   18f34:	str	r0, [fp, #-40]	; 0xffffffd8
   18f38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f3c:	ldr	r1, [fp, #-12]
   18f40:	mvn	r2, #0
   18f44:	sub	r1, r2, r1
   18f48:	cmp	r0, r1
   18f4c:	bls	19050 <__assert_fail@plt+0x805c>
   18f50:	b	19064 <__assert_fail@plt+0x8070>
   18f54:	ldr	r0, [fp, #-16]
   18f58:	cmn	r0, #1
   18f5c:	bne	18fa4 <__assert_fail@plt+0x7fb0>
   18f60:	b	18f7c <__assert_fail@plt+0x7f88>
   18f64:	ldr	r0, [fp, #-12]
   18f68:	add	r0, r0, #-2147483648	; 0x80000000
   18f6c:	movw	r1, #0
   18f70:	cmp	r1, r0
   18f74:	bcc	19050 <__assert_fail@plt+0x805c>
   18f78:	b	19064 <__assert_fail@plt+0x8070>
   18f7c:	ldr	r0, [fp, #-12]
   18f80:	movw	r1, #0
   18f84:	cmp	r1, r0
   18f88:	bcs	19064 <__assert_fail@plt+0x8070>
   18f8c:	ldr	r0, [pc, #2840]	; 19aac <__assert_fail@plt+0x8ab8>
   18f90:	ldr	r1, [fp, #-12]
   18f94:	sub	r1, r1, #1
   18f98:	cmp	r0, r1
   18f9c:	bcc	19050 <__assert_fail@plt+0x805c>
   18fa0:	b	19064 <__assert_fail@plt+0x8070>
   18fa4:	ldr	r0, [pc, #2820]	; 19ab0 <__assert_fail@plt+0x8abc>
   18fa8:	ldr	r1, [fp, #-16]
   18fac:	udiv	r0, r0, r1
   18fb0:	ldr	r1, [fp, #-12]
   18fb4:	cmp	r0, r1
   18fb8:	bcc	19050 <__assert_fail@plt+0x805c>
   18fbc:	b	19064 <__assert_fail@plt+0x8070>
   18fc0:	ldr	r0, [fp, #-16]
   18fc4:	cmp	r0, #0
   18fc8:	bne	18fd0 <__assert_fail@plt+0x7fdc>
   18fcc:	b	19064 <__assert_fail@plt+0x8070>
   18fd0:	ldr	r0, [fp, #-12]
   18fd4:	cmp	r0, #0
   18fd8:	bcs	19038 <__assert_fail@plt+0x8044>
   18fdc:	ldr	r0, [fp, #-12]
   18fe0:	cmn	r0, #1
   18fe4:	bne	1901c <__assert_fail@plt+0x8028>
   18fe8:	b	19004 <__assert_fail@plt+0x8010>
   18fec:	ldr	r0, [fp, #-16]
   18ff0:	add	r0, r0, #-2147483648	; 0x80000000
   18ff4:	movw	r1, #0
   18ff8:	cmp	r1, r0
   18ffc:	bcc	19050 <__assert_fail@plt+0x805c>
   19000:	b	19064 <__assert_fail@plt+0x8070>
   19004:	ldr	r0, [pc, #2720]	; 19aac <__assert_fail@plt+0x8ab8>
   19008:	ldr	r1, [fp, #-16]
   1900c:	sub	r1, r1, #1
   19010:	cmp	r0, r1
   19014:	bcc	19050 <__assert_fail@plt+0x805c>
   19018:	b	19064 <__assert_fail@plt+0x8070>
   1901c:	ldr	r0, [pc, #2700]	; 19ab0 <__assert_fail@plt+0x8abc>
   19020:	ldr	r1, [fp, #-12]
   19024:	udiv	r0, r0, r1
   19028:	ldr	r1, [fp, #-16]
   1902c:	cmp	r0, r1
   19030:	bcc	19050 <__assert_fail@plt+0x805c>
   19034:	b	19064 <__assert_fail@plt+0x8070>
   19038:	ldr	r0, [pc, #2668]	; 19aac <__assert_fail@plt+0x8ab8>
   1903c:	ldr	r1, [fp, #-16]
   19040:	udiv	r0, r0, r1
   19044:	ldr	r1, [fp, #-12]
   19048:	cmp	r0, r1
   1904c:	bcs	19064 <__assert_fail@plt+0x8070>
   19050:	ldr	r0, [fp, #-12]
   19054:	ldr	r1, [fp, #-16]
   19058:	mul	r0, r0, r1
   1905c:	str	r0, [fp, #-20]	; 0xffffffec
   19060:	b	19a78 <__assert_fail@plt+0x8a84>
   19064:	ldr	r0, [fp, #-12]
   19068:	ldr	r1, [fp, #-16]
   1906c:	mul	r0, r0, r1
   19070:	str	r0, [fp, #-20]	; 0xffffffec
   19074:	b	19a90 <__assert_fail@plt+0x8a9c>
   19078:	ldr	r0, [fp, #-16]
   1907c:	cmp	r0, #0
   19080:	bcs	1918c <__assert_fail@plt+0x8198>
   19084:	ldr	r0, [fp, #-12]
   19088:	cmp	r0, #0
   1908c:	bcs	19114 <__assert_fail@plt+0x8120>
   19090:	b	190b0 <__assert_fail@plt+0x80bc>
   19094:	ldr	r0, [fp, #-12]
   19098:	ldr	r1, [fp, #-16]
   1909c:	mvn	r2, #0
   190a0:	udiv	r1, r2, r1
   190a4:	cmp	r0, r1
   190a8:	bcc	19228 <__assert_fail@plt+0x8234>
   190ac:	b	1923c <__assert_fail@plt+0x8248>
   190b0:	b	190c4 <__assert_fail@plt+0x80d0>
   190b4:	ldr	r0, [fp, #-16]
   190b8:	cmp	r0, #1
   190bc:	bcc	190d4 <__assert_fail@plt+0x80e0>
   190c0:	b	190e0 <__assert_fail@plt+0x80ec>
   190c4:	ldr	r0, [fp, #-16]
   190c8:	movw	r1, #0
   190cc:	cmp	r1, r0
   190d0:	bcs	190e0 <__assert_fail@plt+0x80ec>
   190d4:	movw	r0, #1
   190d8:	str	r0, [fp, #-44]	; 0xffffffd4
   190dc:	b	190f8 <__assert_fail@plt+0x8104>
   190e0:	ldr	r0, [fp, #-16]
   190e4:	movw	r1, #0
   190e8:	sub	r0, r1, r0
   190ec:	mvn	r1, #0
   190f0:	udiv	r0, r1, r0
   190f4:	str	r0, [fp, #-44]	; 0xffffffd4
   190f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190fc:	ldr	r1, [fp, #-12]
   19100:	mvn	r2, #0
   19104:	sub	r1, r2, r1
   19108:	cmp	r0, r1
   1910c:	bls	19228 <__assert_fail@plt+0x8234>
   19110:	b	1923c <__assert_fail@plt+0x8248>
   19114:	b	1911c <__assert_fail@plt+0x8128>
   19118:	b	19120 <__assert_fail@plt+0x812c>
   1911c:	b	19170 <__assert_fail@plt+0x817c>
   19120:	ldr	r0, [fp, #-16]
   19124:	cmn	r0, #1
   19128:	bne	19170 <__assert_fail@plt+0x817c>
   1912c:	b	19148 <__assert_fail@plt+0x8154>
   19130:	ldr	r0, [fp, #-12]
   19134:	add	r0, r0, #0
   19138:	movw	r1, #0
   1913c:	cmp	r1, r0
   19140:	bcc	19228 <__assert_fail@plt+0x8234>
   19144:	b	1923c <__assert_fail@plt+0x8248>
   19148:	ldr	r0, [fp, #-12]
   1914c:	movw	r1, #0
   19150:	cmp	r1, r0
   19154:	bcs	1923c <__assert_fail@plt+0x8248>
   19158:	ldr	r0, [fp, #-12]
   1915c:	sub	r0, r0, #1
   19160:	mvn	r1, #0
   19164:	cmp	r1, r0
   19168:	bcc	19228 <__assert_fail@plt+0x8234>
   1916c:	b	1923c <__assert_fail@plt+0x8248>
   19170:	ldr	r0, [fp, #-16]
   19174:	movw	r1, #0
   19178:	udiv	r0, r1, r0
   1917c:	ldr	r1, [fp, #-12]
   19180:	cmp	r0, r1
   19184:	bcc	19228 <__assert_fail@plt+0x8234>
   19188:	b	1923c <__assert_fail@plt+0x8248>
   1918c:	ldr	r0, [fp, #-16]
   19190:	cmp	r0, #0
   19194:	bne	1919c <__assert_fail@plt+0x81a8>
   19198:	b	1923c <__assert_fail@plt+0x8248>
   1919c:	ldr	r0, [fp, #-12]
   191a0:	cmp	r0, #0
   191a4:	bcs	19210 <__assert_fail@plt+0x821c>
   191a8:	b	191b0 <__assert_fail@plt+0x81bc>
   191ac:	b	191b4 <__assert_fail@plt+0x81c0>
   191b0:	b	191f4 <__assert_fail@plt+0x8200>
   191b4:	ldr	r0, [fp, #-12]
   191b8:	cmn	r0, #1
   191bc:	bne	191f4 <__assert_fail@plt+0x8200>
   191c0:	b	191dc <__assert_fail@plt+0x81e8>
   191c4:	ldr	r0, [fp, #-16]
   191c8:	add	r0, r0, #0
   191cc:	movw	r1, #0
   191d0:	cmp	r1, r0
   191d4:	bcc	19228 <__assert_fail@plt+0x8234>
   191d8:	b	1923c <__assert_fail@plt+0x8248>
   191dc:	ldr	r0, [fp, #-16]
   191e0:	sub	r0, r0, #1
   191e4:	mvn	r1, #0
   191e8:	cmp	r1, r0
   191ec:	bcc	19228 <__assert_fail@plt+0x8234>
   191f0:	b	1923c <__assert_fail@plt+0x8248>
   191f4:	ldr	r0, [fp, #-12]
   191f8:	movw	r1, #0
   191fc:	udiv	r0, r1, r0
   19200:	ldr	r1, [fp, #-16]
   19204:	cmp	r0, r1
   19208:	bcc	19228 <__assert_fail@plt+0x8234>
   1920c:	b	1923c <__assert_fail@plt+0x8248>
   19210:	ldr	r0, [fp, #-16]
   19214:	mvn	r1, #0
   19218:	udiv	r0, r1, r0
   1921c:	ldr	r1, [fp, #-12]
   19220:	cmp	r0, r1
   19224:	bcs	1923c <__assert_fail@plt+0x8248>
   19228:	ldr	r0, [fp, #-12]
   1922c:	ldr	r1, [fp, #-16]
   19230:	mul	r0, r0, r1
   19234:	str	r0, [fp, #-20]	; 0xffffffec
   19238:	b	19a78 <__assert_fail@plt+0x8a84>
   1923c:	ldr	r0, [fp, #-12]
   19240:	ldr	r1, [fp, #-16]
   19244:	mul	r0, r0, r1
   19248:	str	r0, [fp, #-20]	; 0xffffffec
   1924c:	b	19a90 <__assert_fail@plt+0x8a9c>
   19250:	b	19254 <__assert_fail@plt+0x8260>
   19254:	b	19418 <__assert_fail@plt+0x8424>
   19258:	ldr	r0, [fp, #-16]
   1925c:	cmp	r0, #0
   19260:	bcs	19360 <__assert_fail@plt+0x836c>
   19264:	ldr	r0, [fp, #-12]
   19268:	cmp	r0, #0
   1926c:	bcs	192f4 <__assert_fail@plt+0x8300>
   19270:	b	19290 <__assert_fail@plt+0x829c>
   19274:	ldr	r0, [pc, #2096]	; 19aac <__assert_fail@plt+0x8ab8>
   19278:	ldr	r1, [fp, #-12]
   1927c:	ldr	r2, [fp, #-16]
   19280:	udiv	r0, r0, r2
   19284:	cmp	r1, r0
   19288:	bcc	193f0 <__assert_fail@plt+0x83fc>
   1928c:	b	19404 <__assert_fail@plt+0x8410>
   19290:	b	192a4 <__assert_fail@plt+0x82b0>
   19294:	ldr	r0, [fp, #-16]
   19298:	cmp	r0, #1
   1929c:	bcc	192b4 <__assert_fail@plt+0x82c0>
   192a0:	b	192c0 <__assert_fail@plt+0x82cc>
   192a4:	ldr	r0, [fp, #-16]
   192a8:	movw	r1, #0
   192ac:	cmp	r1, r0
   192b0:	bcs	192c0 <__assert_fail@plt+0x82cc>
   192b4:	movw	r0, #0
   192b8:	str	r0, [fp, #-48]	; 0xffffffd0
   192bc:	b	192d8 <__assert_fail@plt+0x82e4>
   192c0:	ldr	r0, [pc, #2020]	; 19aac <__assert_fail@plt+0x8ab8>
   192c4:	ldr	r1, [fp, #-16]
   192c8:	movw	r2, #0
   192cc:	sub	r1, r2, r1
   192d0:	udiv	r0, r0, r1
   192d4:	str	r0, [fp, #-48]	; 0xffffffd0
   192d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   192dc:	ldr	r1, [fp, #-12]
   192e0:	mvn	r2, #0
   192e4:	sub	r1, r2, r1
   192e8:	cmp	r0, r1
   192ec:	bls	193f0 <__assert_fail@plt+0x83fc>
   192f0:	b	19404 <__assert_fail@plt+0x8410>
   192f4:	ldr	r0, [fp, #-16]
   192f8:	cmn	r0, #1
   192fc:	bne	19344 <__assert_fail@plt+0x8350>
   19300:	b	1931c <__assert_fail@plt+0x8328>
   19304:	ldr	r0, [fp, #-12]
   19308:	add	r0, r0, #-2147483648	; 0x80000000
   1930c:	movw	r1, #0
   19310:	cmp	r1, r0
   19314:	bcc	193f0 <__assert_fail@plt+0x83fc>
   19318:	b	19404 <__assert_fail@plt+0x8410>
   1931c:	ldr	r0, [fp, #-12]
   19320:	movw	r1, #0
   19324:	cmp	r1, r0
   19328:	bcs	19404 <__assert_fail@plt+0x8410>
   1932c:	ldr	r0, [pc, #1912]	; 19aac <__assert_fail@plt+0x8ab8>
   19330:	ldr	r1, [fp, #-12]
   19334:	sub	r1, r1, #1
   19338:	cmp	r0, r1
   1933c:	bcc	193f0 <__assert_fail@plt+0x83fc>
   19340:	b	19404 <__assert_fail@plt+0x8410>
   19344:	ldr	r0, [pc, #1892]	; 19ab0 <__assert_fail@plt+0x8abc>
   19348:	ldr	r1, [fp, #-16]
   1934c:	udiv	r0, r0, r1
   19350:	ldr	r1, [fp, #-12]
   19354:	cmp	r0, r1
   19358:	bcc	193f0 <__assert_fail@plt+0x83fc>
   1935c:	b	19404 <__assert_fail@plt+0x8410>
   19360:	ldr	r0, [fp, #-16]
   19364:	cmp	r0, #0
   19368:	bne	19370 <__assert_fail@plt+0x837c>
   1936c:	b	19404 <__assert_fail@plt+0x8410>
   19370:	ldr	r0, [fp, #-12]
   19374:	cmp	r0, #0
   19378:	bcs	193d8 <__assert_fail@plt+0x83e4>
   1937c:	ldr	r0, [fp, #-12]
   19380:	cmn	r0, #1
   19384:	bne	193bc <__assert_fail@plt+0x83c8>
   19388:	b	193a4 <__assert_fail@plt+0x83b0>
   1938c:	ldr	r0, [fp, #-16]
   19390:	add	r0, r0, #-2147483648	; 0x80000000
   19394:	movw	r1, #0
   19398:	cmp	r1, r0
   1939c:	bcc	193f0 <__assert_fail@plt+0x83fc>
   193a0:	b	19404 <__assert_fail@plt+0x8410>
   193a4:	ldr	r0, [pc, #1792]	; 19aac <__assert_fail@plt+0x8ab8>
   193a8:	ldr	r1, [fp, #-16]
   193ac:	sub	r1, r1, #1
   193b0:	cmp	r0, r1
   193b4:	bcc	193f0 <__assert_fail@plt+0x83fc>
   193b8:	b	19404 <__assert_fail@plt+0x8410>
   193bc:	ldr	r0, [pc, #1772]	; 19ab0 <__assert_fail@plt+0x8abc>
   193c0:	ldr	r1, [fp, #-12]
   193c4:	udiv	r0, r0, r1
   193c8:	ldr	r1, [fp, #-16]
   193cc:	cmp	r0, r1
   193d0:	bcc	193f0 <__assert_fail@plt+0x83fc>
   193d4:	b	19404 <__assert_fail@plt+0x8410>
   193d8:	ldr	r0, [pc, #1740]	; 19aac <__assert_fail@plt+0x8ab8>
   193dc:	ldr	r1, [fp, #-16]
   193e0:	udiv	r0, r0, r1
   193e4:	ldr	r1, [fp, #-12]
   193e8:	cmp	r0, r1
   193ec:	bcs	19404 <__assert_fail@plt+0x8410>
   193f0:	ldr	r0, [fp, #-12]
   193f4:	ldr	r1, [fp, #-16]
   193f8:	mul	r0, r0, r1
   193fc:	str	r0, [fp, #-20]	; 0xffffffec
   19400:	b	19a78 <__assert_fail@plt+0x8a84>
   19404:	ldr	r0, [fp, #-12]
   19408:	ldr	r1, [fp, #-16]
   1940c:	mul	r0, r0, r1
   19410:	str	r0, [fp, #-20]	; 0xffffffec
   19414:	b	19a90 <__assert_fail@plt+0x8a9c>
   19418:	ldr	r0, [fp, #-16]
   1941c:	cmp	r0, #0
   19420:	bcs	1952c <__assert_fail@plt+0x8538>
   19424:	ldr	r0, [fp, #-12]
   19428:	cmp	r0, #0
   1942c:	bcs	194b4 <__assert_fail@plt+0x84c0>
   19430:	b	19450 <__assert_fail@plt+0x845c>
   19434:	ldr	r0, [fp, #-12]
   19438:	ldr	r1, [fp, #-16]
   1943c:	mvn	r2, #0
   19440:	udiv	r1, r2, r1
   19444:	cmp	r0, r1
   19448:	bcc	195c8 <__assert_fail@plt+0x85d4>
   1944c:	b	195dc <__assert_fail@plt+0x85e8>
   19450:	b	19464 <__assert_fail@plt+0x8470>
   19454:	ldr	r0, [fp, #-16]
   19458:	cmp	r0, #1
   1945c:	bcc	19474 <__assert_fail@plt+0x8480>
   19460:	b	19480 <__assert_fail@plt+0x848c>
   19464:	ldr	r0, [fp, #-16]
   19468:	movw	r1, #0
   1946c:	cmp	r1, r0
   19470:	bcs	19480 <__assert_fail@plt+0x848c>
   19474:	movw	r0, #1
   19478:	str	r0, [fp, #-52]	; 0xffffffcc
   1947c:	b	19498 <__assert_fail@plt+0x84a4>
   19480:	ldr	r0, [fp, #-16]
   19484:	movw	r1, #0
   19488:	sub	r0, r1, r0
   1948c:	mvn	r1, #0
   19490:	udiv	r0, r1, r0
   19494:	str	r0, [fp, #-52]	; 0xffffffcc
   19498:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1949c:	ldr	r1, [fp, #-12]
   194a0:	mvn	r2, #0
   194a4:	sub	r1, r2, r1
   194a8:	cmp	r0, r1
   194ac:	bls	195c8 <__assert_fail@plt+0x85d4>
   194b0:	b	195dc <__assert_fail@plt+0x85e8>
   194b4:	b	194bc <__assert_fail@plt+0x84c8>
   194b8:	b	194c0 <__assert_fail@plt+0x84cc>
   194bc:	b	19510 <__assert_fail@plt+0x851c>
   194c0:	ldr	r0, [fp, #-16]
   194c4:	cmn	r0, #1
   194c8:	bne	19510 <__assert_fail@plt+0x851c>
   194cc:	b	194e8 <__assert_fail@plt+0x84f4>
   194d0:	ldr	r0, [fp, #-12]
   194d4:	add	r0, r0, #0
   194d8:	movw	r1, #0
   194dc:	cmp	r1, r0
   194e0:	bcc	195c8 <__assert_fail@plt+0x85d4>
   194e4:	b	195dc <__assert_fail@plt+0x85e8>
   194e8:	ldr	r0, [fp, #-12]
   194ec:	movw	r1, #0
   194f0:	cmp	r1, r0
   194f4:	bcs	195dc <__assert_fail@plt+0x85e8>
   194f8:	ldr	r0, [fp, #-12]
   194fc:	sub	r0, r0, #1
   19500:	mvn	r1, #0
   19504:	cmp	r1, r0
   19508:	bcc	195c8 <__assert_fail@plt+0x85d4>
   1950c:	b	195dc <__assert_fail@plt+0x85e8>
   19510:	ldr	r0, [fp, #-16]
   19514:	movw	r1, #0
   19518:	udiv	r0, r1, r0
   1951c:	ldr	r1, [fp, #-12]
   19520:	cmp	r0, r1
   19524:	bcc	195c8 <__assert_fail@plt+0x85d4>
   19528:	b	195dc <__assert_fail@plt+0x85e8>
   1952c:	ldr	r0, [fp, #-16]
   19530:	cmp	r0, #0
   19534:	bne	1953c <__assert_fail@plt+0x8548>
   19538:	b	195dc <__assert_fail@plt+0x85e8>
   1953c:	ldr	r0, [fp, #-12]
   19540:	cmp	r0, #0
   19544:	bcs	195b0 <__assert_fail@plt+0x85bc>
   19548:	b	19550 <__assert_fail@plt+0x855c>
   1954c:	b	19554 <__assert_fail@plt+0x8560>
   19550:	b	19594 <__assert_fail@plt+0x85a0>
   19554:	ldr	r0, [fp, #-12]
   19558:	cmn	r0, #1
   1955c:	bne	19594 <__assert_fail@plt+0x85a0>
   19560:	b	1957c <__assert_fail@plt+0x8588>
   19564:	ldr	r0, [fp, #-16]
   19568:	add	r0, r0, #0
   1956c:	movw	r1, #0
   19570:	cmp	r1, r0
   19574:	bcc	195c8 <__assert_fail@plt+0x85d4>
   19578:	b	195dc <__assert_fail@plt+0x85e8>
   1957c:	ldr	r0, [fp, #-16]
   19580:	sub	r0, r0, #1
   19584:	mvn	r1, #0
   19588:	cmp	r1, r0
   1958c:	bcc	195c8 <__assert_fail@plt+0x85d4>
   19590:	b	195dc <__assert_fail@plt+0x85e8>
   19594:	ldr	r0, [fp, #-12]
   19598:	movw	r1, #0
   1959c:	udiv	r0, r1, r0
   195a0:	ldr	r1, [fp, #-16]
   195a4:	cmp	r0, r1
   195a8:	bcc	195c8 <__assert_fail@plt+0x85d4>
   195ac:	b	195dc <__assert_fail@plt+0x85e8>
   195b0:	ldr	r0, [fp, #-16]
   195b4:	mvn	r1, #0
   195b8:	udiv	r0, r1, r0
   195bc:	ldr	r1, [fp, #-12]
   195c0:	cmp	r0, r1
   195c4:	bcs	195dc <__assert_fail@plt+0x85e8>
   195c8:	ldr	r0, [fp, #-12]
   195cc:	ldr	r1, [fp, #-16]
   195d0:	mul	r0, r0, r1
   195d4:	str	r0, [fp, #-20]	; 0xffffffec
   195d8:	b	19a78 <__assert_fail@plt+0x8a84>
   195dc:	ldr	r0, [fp, #-12]
   195e0:	ldr	r1, [fp, #-16]
   195e4:	mul	r0, r0, r1
   195e8:	str	r0, [fp, #-20]	; 0xffffffec
   195ec:	b	19a90 <__assert_fail@plt+0x8a9c>
   195f0:	b	19844 <__assert_fail@plt+0x8850>
   195f4:	ldr	r0, [fp, #-16]
   195f8:	cmp	r0, #0
   195fc:	bcs	1975c <__assert_fail@plt+0x8768>
   19600:	ldr	r0, [fp, #-12]
   19604:	cmp	r0, #0
   19608:	bcs	196d8 <__assert_fail@plt+0x86e4>
   1960c:	b	19610 <__assert_fail@plt+0x861c>
   19610:	ldr	r0, [fp, #-12]
   19614:	ldr	r2, [fp, #-16]
   19618:	mvn	r1, #0
   1961c:	mvn	r3, #-2147483648	; 0x80000000
   19620:	mov	ip, #0
   19624:	str	r0, [fp, #-56]	; 0xffffffc8
   19628:	mov	r0, r1
   1962c:	mov	r1, r3
   19630:	mov	r3, ip
   19634:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   19638:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1963c:	subs	r0, r2, r0
   19640:	rscs	r1, r1, #0
   19644:	str	r0, [fp, #-60]	; 0xffffffc4
   19648:	str	r1, [fp, #-64]	; 0xffffffc0
   1964c:	blt	1981c <__assert_fail@plt+0x8828>
   19650:	b	19830 <__assert_fail@plt+0x883c>
   19654:	b	19668 <__assert_fail@plt+0x8674>
   19658:	ldr	r0, [fp, #-16]
   1965c:	cmp	r0, #1
   19660:	bcc	19678 <__assert_fail@plt+0x8684>
   19664:	b	1968c <__assert_fail@plt+0x8698>
   19668:	ldr	r0, [fp, #-16]
   1966c:	movw	r1, #0
   19670:	cmp	r1, r0
   19674:	bcs	1968c <__assert_fail@plt+0x8698>
   19678:	mov	r0, #0
   1967c:	mvn	r1, #0
   19680:	str	r1, [fp, #-68]	; 0xffffffbc
   19684:	str	r0, [fp, #-72]	; 0xffffffb8
   19688:	b	196b0 <__assert_fail@plt+0x86bc>
   1968c:	ldr	r0, [fp, #-16]
   19690:	rsb	r2, r0, #0
   19694:	mvn	r0, #0
   19698:	mvn	r1, #-2147483648	; 0x80000000
   1969c:	mov	r3, #0
   196a0:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   196a4:	str	r0, [fp, #-68]	; 0xffffffbc
   196a8:	str	r1, [fp, #-72]	; 0xffffffb8
   196ac:	b	196b0 <__assert_fail@plt+0x86bc>
   196b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   196b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   196b8:	ldr	r2, [fp, #-12]
   196bc:	mvn	r2, r2
   196c0:	subs	r1, r2, r1
   196c4:	rscs	r0, r0, #0
   196c8:	str	r1, [fp, #-76]	; 0xffffffb4
   196cc:	str	r0, [fp, #-80]	; 0xffffffb0
   196d0:	bge	1981c <__assert_fail@plt+0x8828>
   196d4:	b	19830 <__assert_fail@plt+0x883c>
   196d8:	ldr	r0, [fp, #-16]
   196dc:	cmn	r0, #1
   196e0:	bne	19728 <__assert_fail@plt+0x8734>
   196e4:	b	19708 <__assert_fail@plt+0x8714>
   196e8:	ldr	r0, [fp, #-12]
   196ec:	rsbs	r0, r0, #0
   196f0:	mov	r1, #0
   196f4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   196f8:	str	r0, [fp, #-84]	; 0xffffffac
   196fc:	str	r1, [sp, #88]	; 0x58
   19700:	blt	1981c <__assert_fail@plt+0x8828>
   19704:	b	19830 <__assert_fail@plt+0x883c>
   19708:	ldr	r0, [fp, #-12]
   1970c:	movw	r1, #0
   19710:	cmp	r1, r0
   19714:	bcs	19830 <__assert_fail@plt+0x883c>
   19718:	mov	r0, #0
   1971c:	cmp	r0, #0
   19720:	bne	1981c <__assert_fail@plt+0x8828>
   19724:	b	19830 <__assert_fail@plt+0x883c>
   19728:	ldr	r2, [fp, #-16]
   1972c:	mov	r1, #-2147483648	; 0x80000000
   19730:	mov	r0, #0
   19734:	str	r0, [sp, #84]	; 0x54
   19738:	ldr	r3, [sp, #84]	; 0x54
   1973c:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   19740:	ldr	r2, [fp, #-12]
   19744:	subs	r0, r0, r2
   19748:	sbcs	r1, r1, #0
   1974c:	str	r0, [sp, #80]	; 0x50
   19750:	str	r1, [sp, #76]	; 0x4c
   19754:	blt	1981c <__assert_fail@plt+0x8828>
   19758:	b	19830 <__assert_fail@plt+0x883c>
   1975c:	ldr	r0, [fp, #-16]
   19760:	cmp	r0, #0
   19764:	bne	1976c <__assert_fail@plt+0x8778>
   19768:	b	19830 <__assert_fail@plt+0x883c>
   1976c:	ldr	r0, [fp, #-12]
   19770:	cmp	r0, #0
   19774:	bcs	197ec <__assert_fail@plt+0x87f8>
   19778:	ldr	r0, [fp, #-12]
   1977c:	cmn	r0, #1
   19780:	bne	197b8 <__assert_fail@plt+0x87c4>
   19784:	b	197a8 <__assert_fail@plt+0x87b4>
   19788:	ldr	r0, [fp, #-16]
   1978c:	rsbs	r0, r0, #0
   19790:	mov	r1, #0
   19794:	sbcs	r1, r1, #-2147483648	; 0x80000000
   19798:	str	r0, [sp, #72]	; 0x48
   1979c:	str	r1, [sp, #68]	; 0x44
   197a0:	blt	1981c <__assert_fail@plt+0x8828>
   197a4:	b	19830 <__assert_fail@plt+0x883c>
   197a8:	mov	r0, #0
   197ac:	cmp	r0, #0
   197b0:	bne	1981c <__assert_fail@plt+0x8828>
   197b4:	b	19830 <__assert_fail@plt+0x883c>
   197b8:	ldr	r2, [fp, #-12]
   197bc:	mov	r1, #-2147483648	; 0x80000000
   197c0:	mov	r0, #0
   197c4:	str	r0, [sp, #64]	; 0x40
   197c8:	ldr	r3, [sp, #64]	; 0x40
   197cc:	bl	1a2f0 <__assert_fail@plt+0x92fc>
   197d0:	ldr	r2, [fp, #-16]
   197d4:	subs	r0, r0, r2
   197d8:	sbcs	r1, r1, #0
   197dc:	str	r0, [sp, #60]	; 0x3c
   197e0:	str	r1, [sp, #56]	; 0x38
   197e4:	blt	1981c <__assert_fail@plt+0x8828>
   197e8:	b	19830 <__assert_fail@plt+0x883c>
   197ec:	ldr	r2, [fp, #-16]
   197f0:	mvn	r0, #0
   197f4:	mvn	r1, #-2147483648	; 0x80000000
   197f8:	mov	r3, #0
   197fc:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   19800:	ldr	r2, [fp, #-12]
   19804:	subs	r0, r0, r2
   19808:	sbcs	r1, r1, #0
   1980c:	str	r0, [sp, #52]	; 0x34
   19810:	str	r1, [sp, #48]	; 0x30
   19814:	bge	19830 <__assert_fail@plt+0x883c>
   19818:	b	1981c <__assert_fail@plt+0x8828>
   1981c:	ldr	r0, [fp, #-12]
   19820:	ldr	r1, [fp, #-16]
   19824:	mul	r0, r0, r1
   19828:	str	r0, [fp, #-20]	; 0xffffffec
   1982c:	b	19a78 <__assert_fail@plt+0x8a84>
   19830:	ldr	r0, [fp, #-12]
   19834:	ldr	r1, [fp, #-16]
   19838:	mul	r0, r0, r1
   1983c:	str	r0, [fp, #-20]	; 0xffffffec
   19840:	b	19a90 <__assert_fail@plt+0x8a9c>
   19844:	ldr	r0, [fp, #-16]
   19848:	cmp	r0, #0
   1984c:	bcs	19998 <__assert_fail@plt+0x89a4>
   19850:	ldr	r0, [fp, #-12]
   19854:	cmp	r0, #0
   19858:	bcs	19920 <__assert_fail@plt+0x892c>
   1985c:	b	19898 <__assert_fail@plt+0x88a4>
   19860:	ldr	r0, [fp, #-12]
   19864:	ldr	r2, [fp, #-16]
   19868:	mvn	r1, #0
   1986c:	mov	r3, #0
   19870:	str	r0, [sp, #44]	; 0x2c
   19874:	mov	r0, r1
   19878:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   1987c:	ldr	r2, [sp, #44]	; 0x2c
   19880:	subs	r0, r2, r0
   19884:	rscs	r1, r1, #0
   19888:	str	r0, [sp, #40]	; 0x28
   1988c:	str	r1, [sp, #36]	; 0x24
   19890:	bcc	19a50 <__assert_fail@plt+0x8a5c>
   19894:	b	19a64 <__assert_fail@plt+0x8a70>
   19898:	b	198ac <__assert_fail@plt+0x88b8>
   1989c:	ldr	r0, [fp, #-16]
   198a0:	cmp	r0, #1
   198a4:	bcc	198bc <__assert_fail@plt+0x88c8>
   198a8:	b	198d0 <__assert_fail@plt+0x88dc>
   198ac:	ldr	r0, [fp, #-16]
   198b0:	movw	r1, #0
   198b4:	cmp	r1, r0
   198b8:	bcs	198d0 <__assert_fail@plt+0x88dc>
   198bc:	mov	r0, #1
   198c0:	mvn	r1, #0
   198c4:	str	r1, [sp, #32]
   198c8:	str	r0, [sp, #28]
   198cc:	b	198f8 <__assert_fail@plt+0x8904>
   198d0:	ldr	r0, [fp, #-16]
   198d4:	rsb	r2, r0, #0
   198d8:	mvn	r0, #0
   198dc:	mov	r3, #0
   198e0:	str	r0, [sp, #24]
   198e4:	ldr	r1, [sp, #24]
   198e8:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   198ec:	str	r0, [sp, #32]
   198f0:	str	r1, [sp, #28]
   198f4:	b	198f8 <__assert_fail@plt+0x8904>
   198f8:	ldr	r0, [sp, #28]
   198fc:	ldr	r1, [sp, #32]
   19900:	ldr	r2, [fp, #-12]
   19904:	mvn	r2, r2
   19908:	subs	r1, r2, r1
   1990c:	rscs	r0, r0, #0
   19910:	str	r1, [sp, #20]
   19914:	str	r0, [sp, #16]
   19918:	bcs	19a50 <__assert_fail@plt+0x8a5c>
   1991c:	b	19a64 <__assert_fail@plt+0x8a70>
   19920:	b	19928 <__assert_fail@plt+0x8934>
   19924:	b	1992c <__assert_fail@plt+0x8938>
   19928:	b	1997c <__assert_fail@plt+0x8988>
   1992c:	ldr	r0, [fp, #-16]
   19930:	cmn	r0, #1
   19934:	bne	1997c <__assert_fail@plt+0x8988>
   19938:	b	19954 <__assert_fail@plt+0x8960>
   1993c:	ldr	r0, [fp, #-12]
   19940:	add	r0, r0, #0
   19944:	movw	r1, #0
   19948:	cmp	r1, r0
   1994c:	bcc	19a50 <__assert_fail@plt+0x8a5c>
   19950:	b	19a64 <__assert_fail@plt+0x8a70>
   19954:	ldr	r0, [fp, #-12]
   19958:	movw	r1, #0
   1995c:	cmp	r1, r0
   19960:	bcs	19a64 <__assert_fail@plt+0x8a70>
   19964:	ldr	r0, [fp, #-12]
   19968:	sub	r0, r0, #1
   1996c:	mvn	r1, #0
   19970:	cmp	r1, r0
   19974:	bcc	19a50 <__assert_fail@plt+0x8a5c>
   19978:	b	19a64 <__assert_fail@plt+0x8a70>
   1997c:	ldr	r0, [fp, #-16]
   19980:	movw	r1, #0
   19984:	udiv	r0, r1, r0
   19988:	ldr	r1, [fp, #-12]
   1998c:	cmp	r0, r1
   19990:	bcc	19a50 <__assert_fail@plt+0x8a5c>
   19994:	b	19a64 <__assert_fail@plt+0x8a70>
   19998:	ldr	r0, [fp, #-16]
   1999c:	cmp	r0, #0
   199a0:	bne	199a8 <__assert_fail@plt+0x89b4>
   199a4:	b	19a64 <__assert_fail@plt+0x8a70>
   199a8:	ldr	r0, [fp, #-12]
   199ac:	cmp	r0, #0
   199b0:	bcs	19a1c <__assert_fail@plt+0x8a28>
   199b4:	b	199bc <__assert_fail@plt+0x89c8>
   199b8:	b	199c0 <__assert_fail@plt+0x89cc>
   199bc:	b	19a00 <__assert_fail@plt+0x8a0c>
   199c0:	ldr	r0, [fp, #-12]
   199c4:	cmn	r0, #1
   199c8:	bne	19a00 <__assert_fail@plt+0x8a0c>
   199cc:	b	199e8 <__assert_fail@plt+0x89f4>
   199d0:	ldr	r0, [fp, #-16]
   199d4:	add	r0, r0, #0
   199d8:	movw	r1, #0
   199dc:	cmp	r1, r0
   199e0:	bcc	19a50 <__assert_fail@plt+0x8a5c>
   199e4:	b	19a64 <__assert_fail@plt+0x8a70>
   199e8:	ldr	r0, [fp, #-16]
   199ec:	sub	r0, r0, #1
   199f0:	mvn	r1, #0
   199f4:	cmp	r1, r0
   199f8:	bcc	19a50 <__assert_fail@plt+0x8a5c>
   199fc:	b	19a64 <__assert_fail@plt+0x8a70>
   19a00:	ldr	r0, [fp, #-12]
   19a04:	movw	r1, #0
   19a08:	udiv	r0, r1, r0
   19a0c:	ldr	r1, [fp, #-16]
   19a10:	cmp	r0, r1
   19a14:	bcc	19a50 <__assert_fail@plt+0x8a5c>
   19a18:	b	19a64 <__assert_fail@plt+0x8a70>
   19a1c:	ldr	r2, [fp, #-16]
   19a20:	mvn	r0, #0
   19a24:	mov	r3, #0
   19a28:	str	r0, [sp, #12]
   19a2c:	ldr	r1, [sp, #12]
   19a30:	bl	1a3c4 <__assert_fail@plt+0x93d0>
   19a34:	ldr	r2, [fp, #-12]
   19a38:	subs	r0, r0, r2
   19a3c:	sbcs	r1, r1, #0
   19a40:	str	r0, [sp, #8]
   19a44:	str	r1, [sp, #4]
   19a48:	bcs	19a64 <__assert_fail@plt+0x8a70>
   19a4c:	b	19a50 <__assert_fail@plt+0x8a5c>
   19a50:	ldr	r0, [fp, #-12]
   19a54:	ldr	r1, [fp, #-16]
   19a58:	mul	r0, r0, r1
   19a5c:	str	r0, [fp, #-20]	; 0xffffffec
   19a60:	b	19a78 <__assert_fail@plt+0x8a84>
   19a64:	ldr	r0, [fp, #-12]
   19a68:	ldr	r1, [fp, #-16]
   19a6c:	mul	r0, r0, r1
   19a70:	str	r0, [fp, #-20]	; 0xffffffec
   19a74:	b	19a90 <__assert_fail@plt+0x8a9c>
   19a78:	bl	10f28 <__errno_location@plt>
   19a7c:	movw	lr, #12
   19a80:	str	lr, [r0]
   19a84:	movw	r0, #0
   19a88:	str	r0, [fp, #-4]
   19a8c:	b	19aa0 <__assert_fail@plt+0x8aac>
   19a90:	ldr	r0, [fp, #-8]
   19a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a98:	bl	17f34 <__assert_fail@plt+0x6f40>
   19a9c:	str	r0, [fp, #-4]
   19aa0:	ldr	r0, [fp, #-4]
   19aa4:	mov	sp, fp
   19aa8:	pop	{fp, pc}
   19aac:	svcvc	0x00ffffff
   19ab0:	andhi	r0, r0, r0
   19ab4:			; <UNDEFINED> instruction: 0xffff8000
   19ab8:	sub	sp, sp, #12
   19abc:	str	r0, [sp, #4]
   19ac0:	ldr	r0, [sp, #4]
   19ac4:	sub	r1, r0, #48	; 0x30
   19ac8:	cmp	r1, #10
   19acc:	str	r0, [sp]
   19ad0:	bcc	19b00 <__assert_fail@plt+0x8b0c>
   19ad4:	b	19ad8 <__assert_fail@plt+0x8ae4>
   19ad8:	ldr	r0, [sp]
   19adc:	sub	r1, r0, #65	; 0x41
   19ae0:	cmp	r1, #26
   19ae4:	bcc	19b00 <__assert_fail@plt+0x8b0c>
   19ae8:	b	19aec <__assert_fail@plt+0x8af8>
   19aec:	ldr	r0, [sp]
   19af0:	sub	r1, r0, #97	; 0x61
   19af4:	cmp	r1, #25
   19af8:	bhi	19b10 <__assert_fail@plt+0x8b1c>
   19afc:	b	19b00 <__assert_fail@plt+0x8b0c>
   19b00:	movw	r0, #1
   19b04:	and	r0, r0, #1
   19b08:	strb	r0, [sp, #11]
   19b0c:	b	19b1c <__assert_fail@plt+0x8b28>
   19b10:	movw	r0, #0
   19b14:	and	r0, r0, #1
   19b18:	strb	r0, [sp, #11]
   19b1c:	ldrb	r0, [sp, #11]
   19b20:	and	r0, r0, #1
   19b24:	add	sp, sp, #12
   19b28:	bx	lr
   19b2c:	sub	sp, sp, #12
   19b30:	str	r0, [sp, #4]
   19b34:	ldr	r0, [sp, #4]
   19b38:	sub	r1, r0, #65	; 0x41
   19b3c:	cmp	r1, #26
   19b40:	str	r0, [sp]
   19b44:	bcc	19b60 <__assert_fail@plt+0x8b6c>
   19b48:	b	19b4c <__assert_fail@plt+0x8b58>
   19b4c:	ldr	r0, [sp]
   19b50:	sub	r1, r0, #97	; 0x61
   19b54:	cmp	r1, #25
   19b58:	bhi	19b70 <__assert_fail@plt+0x8b7c>
   19b5c:	b	19b60 <__assert_fail@plt+0x8b6c>
   19b60:	movw	r0, #1
   19b64:	and	r0, r0, #1
   19b68:	strb	r0, [sp, #11]
   19b6c:	b	19b7c <__assert_fail@plt+0x8b88>
   19b70:	movw	r0, #0
   19b74:	and	r0, r0, #1
   19b78:	strb	r0, [sp, #11]
   19b7c:	ldrb	r0, [sp, #11]
   19b80:	and	r0, r0, #1
   19b84:	add	sp, sp, #12
   19b88:	bx	lr
   19b8c:	sub	sp, sp, #8
   19b90:	str	r0, [sp]
   19b94:	ldr	r0, [sp]
   19b98:	cmp	r0, #127	; 0x7f
   19b9c:	bhi	19bb4 <__assert_fail@plt+0x8bc0>
   19ba0:	b	19ba4 <__assert_fail@plt+0x8bb0>
   19ba4:	movw	r0, #1
   19ba8:	and	r0, r0, #1
   19bac:	strb	r0, [sp, #7]
   19bb0:	b	19bc0 <__assert_fail@plt+0x8bcc>
   19bb4:	movw	r0, #0
   19bb8:	and	r0, r0, #1
   19bbc:	strb	r0, [sp, #7]
   19bc0:	ldrb	r0, [sp, #7]
   19bc4:	and	r0, r0, #1
   19bc8:	add	sp, sp, #8
   19bcc:	bx	lr
   19bd0:	sub	sp, sp, #8
   19bd4:	str	r0, [sp, #4]
   19bd8:	ldr	r0, [sp, #4]
   19bdc:	cmp	r0, #32
   19be0:	movw	r0, #1
   19be4:	str	r0, [sp]
   19be8:	beq	19c00 <__assert_fail@plt+0x8c0c>
   19bec:	ldr	r0, [sp, #4]
   19bf0:	cmp	r0, #9
   19bf4:	movw	r0, #0
   19bf8:	moveq	r0, #1
   19bfc:	str	r0, [sp]
   19c00:	ldr	r0, [sp]
   19c04:	and	r0, r0, #1
   19c08:	add	sp, sp, #8
   19c0c:	bx	lr
   19c10:	sub	sp, sp, #12
   19c14:	str	r0, [sp, #4]
   19c18:	ldr	r0, [sp, #4]
   19c1c:	cmp	r0, #32
   19c20:	str	r0, [sp]
   19c24:	bcc	19c3c <__assert_fail@plt+0x8c48>
   19c28:	b	19c2c <__assert_fail@plt+0x8c38>
   19c2c:	ldr	r0, [sp]
   19c30:	cmp	r0, #127	; 0x7f
   19c34:	bne	19c4c <__assert_fail@plt+0x8c58>
   19c38:	b	19c3c <__assert_fail@plt+0x8c48>
   19c3c:	movw	r0, #1
   19c40:	and	r0, r0, #1
   19c44:	strb	r0, [sp, #11]
   19c48:	b	19c58 <__assert_fail@plt+0x8c64>
   19c4c:	movw	r0, #0
   19c50:	and	r0, r0, #1
   19c54:	strb	r0, [sp, #11]
   19c58:	ldrb	r0, [sp, #11]
   19c5c:	and	r0, r0, #1
   19c60:	add	sp, sp, #12
   19c64:	bx	lr
   19c68:	sub	sp, sp, #8
   19c6c:	str	r0, [sp]
   19c70:	ldr	r0, [sp]
   19c74:	sub	r0, r0, #48	; 0x30
   19c78:	cmp	r0, #9
   19c7c:	bhi	19c94 <__assert_fail@plt+0x8ca0>
   19c80:	b	19c84 <__assert_fail@plt+0x8c90>
   19c84:	movw	r0, #1
   19c88:	and	r0, r0, #1
   19c8c:	strb	r0, [sp, #7]
   19c90:	b	19ca0 <__assert_fail@plt+0x8cac>
   19c94:	movw	r0, #0
   19c98:	and	r0, r0, #1
   19c9c:	strb	r0, [sp, #7]
   19ca0:	ldrb	r0, [sp, #7]
   19ca4:	and	r0, r0, #1
   19ca8:	add	sp, sp, #8
   19cac:	bx	lr
   19cb0:	sub	sp, sp, #8
   19cb4:	str	r0, [sp]
   19cb8:	ldr	r0, [sp]
   19cbc:	sub	r0, r0, #33	; 0x21
   19cc0:	cmp	r0, #93	; 0x5d
   19cc4:	bhi	19cdc <__assert_fail@plt+0x8ce8>
   19cc8:	b	19ccc <__assert_fail@plt+0x8cd8>
   19ccc:	movw	r0, #1
   19cd0:	and	r0, r0, #1
   19cd4:	strb	r0, [sp, #7]
   19cd8:	b	19ce8 <__assert_fail@plt+0x8cf4>
   19cdc:	movw	r0, #0
   19ce0:	and	r0, r0, #1
   19ce4:	strb	r0, [sp, #7]
   19ce8:	ldrb	r0, [sp, #7]
   19cec:	and	r0, r0, #1
   19cf0:	add	sp, sp, #8
   19cf4:	bx	lr
   19cf8:	sub	sp, sp, #8
   19cfc:	str	r0, [sp]
   19d00:	ldr	r0, [sp]
   19d04:	sub	r0, r0, #97	; 0x61
   19d08:	cmp	r0, #25
   19d0c:	bhi	19d24 <__assert_fail@plt+0x8d30>
   19d10:	b	19d14 <__assert_fail@plt+0x8d20>
   19d14:	movw	r0, #1
   19d18:	and	r0, r0, #1
   19d1c:	strb	r0, [sp, #7]
   19d20:	b	19d30 <__assert_fail@plt+0x8d3c>
   19d24:	movw	r0, #0
   19d28:	and	r0, r0, #1
   19d2c:	strb	r0, [sp, #7]
   19d30:	ldrb	r0, [sp, #7]
   19d34:	and	r0, r0, #1
   19d38:	add	sp, sp, #8
   19d3c:	bx	lr
   19d40:	sub	sp, sp, #8
   19d44:	str	r0, [sp]
   19d48:	ldr	r0, [sp]
   19d4c:	sub	r0, r0, #32
   19d50:	cmp	r0, #94	; 0x5e
   19d54:	bhi	19d6c <__assert_fail@plt+0x8d78>
   19d58:	b	19d5c <__assert_fail@plt+0x8d68>
   19d5c:	movw	r0, #1
   19d60:	and	r0, r0, #1
   19d64:	strb	r0, [sp, #7]
   19d68:	b	19d78 <__assert_fail@plt+0x8d84>
   19d6c:	movw	r0, #0
   19d70:	and	r0, r0, #1
   19d74:	strb	r0, [sp, #7]
   19d78:	ldrb	r0, [sp, #7]
   19d7c:	and	r0, r0, #1
   19d80:	add	sp, sp, #8
   19d84:	bx	lr
   19d88:	sub	sp, sp, #12
   19d8c:	str	r0, [sp, #4]
   19d90:	ldr	r0, [sp, #4]
   19d94:	sub	r0, r0, #33	; 0x21
   19d98:	cmp	r0, #93	; 0x5d
   19d9c:	str	r0, [sp]
   19da0:	bhi	19f3c <__assert_fail@plt+0x8f48>
   19da4:	add	r0, pc, #8
   19da8:	ldr	r1, [sp]
   19dac:	ldr	r0, [r0, r1, lsl #2]
   19db0:	mov	pc, r0
   19db4:	andeq	r9, r1, ip, lsr #30
   19db8:	andeq	r9, r1, ip, lsr #30
   19dbc:	andeq	r9, r1, ip, lsr #30
   19dc0:	andeq	r9, r1, ip, lsr #30
   19dc4:	andeq	r9, r1, ip, lsr #30
   19dc8:	andeq	r9, r1, ip, lsr #30
   19dcc:	andeq	r9, r1, ip, lsr #30
   19dd0:	andeq	r9, r1, ip, lsr #30
   19dd4:	andeq	r9, r1, ip, lsr #30
   19dd8:	andeq	r9, r1, ip, lsr #30
   19ddc:	andeq	r9, r1, ip, lsr #30
   19de0:	andeq	r9, r1, ip, lsr #30
   19de4:	andeq	r9, r1, ip, lsr #30
   19de8:	andeq	r9, r1, ip, lsr #30
   19dec:	andeq	r9, r1, ip, lsr #30
   19df0:	andeq	r9, r1, ip, lsr pc
   19df4:	andeq	r9, r1, ip, lsr pc
   19df8:	andeq	r9, r1, ip, lsr pc
   19dfc:	andeq	r9, r1, ip, lsr pc
   19e00:	andeq	r9, r1, ip, lsr pc
   19e04:	andeq	r9, r1, ip, lsr pc
   19e08:	andeq	r9, r1, ip, lsr pc
   19e0c:	andeq	r9, r1, ip, lsr pc
   19e10:	andeq	r9, r1, ip, lsr pc
   19e14:	andeq	r9, r1, ip, lsr pc
   19e18:	andeq	r9, r1, ip, lsr #30
   19e1c:	andeq	r9, r1, ip, lsr #30
   19e20:	andeq	r9, r1, ip, lsr #30
   19e24:	andeq	r9, r1, ip, lsr #30
   19e28:	andeq	r9, r1, ip, lsr #30
   19e2c:	andeq	r9, r1, ip, lsr #30
   19e30:	andeq	r9, r1, ip, lsr #30
   19e34:	andeq	r9, r1, ip, lsr pc
   19e38:	andeq	r9, r1, ip, lsr pc
   19e3c:	andeq	r9, r1, ip, lsr pc
   19e40:	andeq	r9, r1, ip, lsr pc
   19e44:	andeq	r9, r1, ip, lsr pc
   19e48:	andeq	r9, r1, ip, lsr pc
   19e4c:	andeq	r9, r1, ip, lsr pc
   19e50:	andeq	r9, r1, ip, lsr pc
   19e54:	andeq	r9, r1, ip, lsr pc
   19e58:	andeq	r9, r1, ip, lsr pc
   19e5c:	andeq	r9, r1, ip, lsr pc
   19e60:	andeq	r9, r1, ip, lsr pc
   19e64:	andeq	r9, r1, ip, lsr pc
   19e68:	andeq	r9, r1, ip, lsr pc
   19e6c:	andeq	r9, r1, ip, lsr pc
   19e70:	andeq	r9, r1, ip, lsr pc
   19e74:	andeq	r9, r1, ip, lsr pc
   19e78:	andeq	r9, r1, ip, lsr pc
   19e7c:	andeq	r9, r1, ip, lsr pc
   19e80:	andeq	r9, r1, ip, lsr pc
   19e84:	andeq	r9, r1, ip, lsr pc
   19e88:	andeq	r9, r1, ip, lsr pc
   19e8c:	andeq	r9, r1, ip, lsr pc
   19e90:	andeq	r9, r1, ip, lsr pc
   19e94:	andeq	r9, r1, ip, lsr pc
   19e98:	andeq	r9, r1, ip, lsr pc
   19e9c:	andeq	r9, r1, ip, lsr #30
   19ea0:	andeq	r9, r1, ip, lsr #30
   19ea4:	andeq	r9, r1, ip, lsr #30
   19ea8:	andeq	r9, r1, ip, lsr #30
   19eac:	andeq	r9, r1, ip, lsr #30
   19eb0:	andeq	r9, r1, ip, lsr #30
   19eb4:	andeq	r9, r1, ip, lsr pc
   19eb8:	andeq	r9, r1, ip, lsr pc
   19ebc:	andeq	r9, r1, ip, lsr pc
   19ec0:	andeq	r9, r1, ip, lsr pc
   19ec4:	andeq	r9, r1, ip, lsr pc
   19ec8:	andeq	r9, r1, ip, lsr pc
   19ecc:	andeq	r9, r1, ip, lsr pc
   19ed0:	andeq	r9, r1, ip, lsr pc
   19ed4:	andeq	r9, r1, ip, lsr pc
   19ed8:	andeq	r9, r1, ip, lsr pc
   19edc:	andeq	r9, r1, ip, lsr pc
   19ee0:	andeq	r9, r1, ip, lsr pc
   19ee4:	andeq	r9, r1, ip, lsr pc
   19ee8:	andeq	r9, r1, ip, lsr pc
   19eec:	andeq	r9, r1, ip, lsr pc
   19ef0:	andeq	r9, r1, ip, lsr pc
   19ef4:	andeq	r9, r1, ip, lsr pc
   19ef8:	andeq	r9, r1, ip, lsr pc
   19efc:	andeq	r9, r1, ip, lsr pc
   19f00:	andeq	r9, r1, ip, lsr pc
   19f04:	andeq	r9, r1, ip, lsr pc
   19f08:	andeq	r9, r1, ip, lsr pc
   19f0c:	andeq	r9, r1, ip, lsr pc
   19f10:	andeq	r9, r1, ip, lsr pc
   19f14:	andeq	r9, r1, ip, lsr pc
   19f18:	andeq	r9, r1, ip, lsr pc
   19f1c:	andeq	r9, r1, ip, lsr #30
   19f20:	andeq	r9, r1, ip, lsr #30
   19f24:	andeq	r9, r1, ip, lsr #30
   19f28:	andeq	r9, r1, ip, lsr #30
   19f2c:	movw	r0, #1
   19f30:	and	r0, r0, #1
   19f34:	strb	r0, [sp, #11]
   19f38:	b	19f48 <__assert_fail@plt+0x8f54>
   19f3c:	movw	r0, #0
   19f40:	and	r0, r0, #1
   19f44:	strb	r0, [sp, #11]
   19f48:	ldrb	r0, [sp, #11]
   19f4c:	and	r0, r0, #1
   19f50:	add	sp, sp, #12
   19f54:	bx	lr
   19f58:	sub	sp, sp, #12
   19f5c:	str	r0, [sp, #4]
   19f60:	ldr	r0, [sp, #4]
   19f64:	sub	r1, r0, #9
   19f68:	cmp	r1, #5
   19f6c:	str	r0, [sp]
   19f70:	bcc	19f88 <__assert_fail@plt+0x8f94>
   19f74:	b	19f78 <__assert_fail@plt+0x8f84>
   19f78:	ldr	r0, [sp]
   19f7c:	cmp	r0, #32
   19f80:	bne	19f98 <__assert_fail@plt+0x8fa4>
   19f84:	b	19f88 <__assert_fail@plt+0x8f94>
   19f88:	movw	r0, #1
   19f8c:	and	r0, r0, #1
   19f90:	strb	r0, [sp, #11]
   19f94:	b	19fa4 <__assert_fail@plt+0x8fb0>
   19f98:	movw	r0, #0
   19f9c:	and	r0, r0, #1
   19fa0:	strb	r0, [sp, #11]
   19fa4:	ldrb	r0, [sp, #11]
   19fa8:	and	r0, r0, #1
   19fac:	add	sp, sp, #12
   19fb0:	bx	lr
   19fb4:	sub	sp, sp, #8
   19fb8:	str	r0, [sp]
   19fbc:	ldr	r0, [sp]
   19fc0:	sub	r0, r0, #65	; 0x41
   19fc4:	cmp	r0, #25
   19fc8:	bhi	19fe0 <__assert_fail@plt+0x8fec>
   19fcc:	b	19fd0 <__assert_fail@plt+0x8fdc>
   19fd0:	movw	r0, #1
   19fd4:	and	r0, r0, #1
   19fd8:	strb	r0, [sp, #7]
   19fdc:	b	19fec <__assert_fail@plt+0x8ff8>
   19fe0:	movw	r0, #0
   19fe4:	and	r0, r0, #1
   19fe8:	strb	r0, [sp, #7]
   19fec:	ldrb	r0, [sp, #7]
   19ff0:	and	r0, r0, #1
   19ff4:	add	sp, sp, #8
   19ff8:	bx	lr
   19ffc:	sub	sp, sp, #12
   1a000:	str	r0, [sp, #4]
   1a004:	ldr	r0, [sp, #4]
   1a008:	sub	r1, r0, #48	; 0x30
   1a00c:	cmp	r1, #10
   1a010:	str	r0, [sp]
   1a014:	bcc	1a044 <__assert_fail@plt+0x9050>
   1a018:	b	1a01c <__assert_fail@plt+0x9028>
   1a01c:	ldr	r0, [sp]
   1a020:	sub	r1, r0, #65	; 0x41
   1a024:	cmp	r1, #6
   1a028:	bcc	1a044 <__assert_fail@plt+0x9050>
   1a02c:	b	1a030 <__assert_fail@plt+0x903c>
   1a030:	ldr	r0, [sp]
   1a034:	sub	r1, r0, #97	; 0x61
   1a038:	cmp	r1, #5
   1a03c:	bhi	1a054 <__assert_fail@plt+0x9060>
   1a040:	b	1a044 <__assert_fail@plt+0x9050>
   1a044:	movw	r0, #1
   1a048:	and	r0, r0, #1
   1a04c:	strb	r0, [sp, #11]
   1a050:	b	1a060 <__assert_fail@plt+0x906c>
   1a054:	movw	r0, #0
   1a058:	and	r0, r0, #1
   1a05c:	strb	r0, [sp, #11]
   1a060:	ldrb	r0, [sp, #11]
   1a064:	and	r0, r0, #1
   1a068:	add	sp, sp, #12
   1a06c:	bx	lr
   1a070:	sub	sp, sp, #8
   1a074:	str	r0, [sp]
   1a078:	ldr	r0, [sp]
   1a07c:	sub	r0, r0, #65	; 0x41
   1a080:	cmp	r0, #25
   1a084:	bhi	1a0a0 <__assert_fail@plt+0x90ac>
   1a088:	b	1a08c <__assert_fail@plt+0x9098>
   1a08c:	ldr	r0, [sp]
   1a090:	sub	r0, r0, #65	; 0x41
   1a094:	add	r0, r0, #97	; 0x61
   1a098:	str	r0, [sp, #4]
   1a09c:	b	1a0a8 <__assert_fail@plt+0x90b4>
   1a0a0:	ldr	r0, [sp]
   1a0a4:	str	r0, [sp, #4]
   1a0a8:	ldr	r0, [sp, #4]
   1a0ac:	add	sp, sp, #8
   1a0b0:	bx	lr
   1a0b4:	sub	sp, sp, #8
   1a0b8:	str	r0, [sp]
   1a0bc:	ldr	r0, [sp]
   1a0c0:	sub	r0, r0, #97	; 0x61
   1a0c4:	cmp	r0, #25
   1a0c8:	bhi	1a0e4 <__assert_fail@plt+0x90f0>
   1a0cc:	b	1a0d0 <__assert_fail@plt+0x90dc>
   1a0d0:	ldr	r0, [sp]
   1a0d4:	sub	r0, r0, #97	; 0x61
   1a0d8:	add	r0, r0, #65	; 0x41
   1a0dc:	str	r0, [sp, #4]
   1a0e0:	b	1a0ec <__assert_fail@plt+0x90f8>
   1a0e4:	ldr	r0, [sp]
   1a0e8:	str	r0, [sp, #4]
   1a0ec:	ldr	r0, [sp, #4]
   1a0f0:	add	sp, sp, #8
   1a0f4:	bx	lr
   1a0f8:	push	{r4, r5, fp, lr}
   1a0fc:	add	fp, sp, #8
   1a100:	sub	sp, sp, #272	; 0x110
   1a104:	add	r1, sp, #7
   1a108:	str	r0, [fp, #-16]
   1a10c:	ldr	r0, [fp, #-16]
   1a110:	movw	r2, #257	; 0x101
   1a114:	bl	1a194 <__assert_fail@plt+0x91a0>
   1a118:	cmp	r0, #0
   1a11c:	beq	1a130 <__assert_fail@plt+0x913c>
   1a120:	movw	r0, #0
   1a124:	and	r0, r0, #1
   1a128:	strb	r0, [fp, #-9]
   1a12c:	b	1a184 <__assert_fail@plt+0x9190>
   1a130:	add	r0, sp, #7
   1a134:	movw	r1, #44787	; 0xaef3
   1a138:	movt	r1, #1
   1a13c:	bl	10dcc <strcmp@plt>
   1a140:	cmp	r0, #0
   1a144:	movw	r0, #1
   1a148:	str	r0, [sp]
   1a14c:	beq	1a170 <__assert_fail@plt+0x917c>
   1a150:	add	r0, sp, #7
   1a154:	movw	r1, #44789	; 0xaef5
   1a158:	movt	r1, #1
   1a15c:	bl	10dcc <strcmp@plt>
   1a160:	cmp	r0, #0
   1a164:	movw	r0, #0
   1a168:	moveq	r0, #1
   1a16c:	str	r0, [sp]
   1a170:	ldr	r0, [sp]
   1a174:	mvn	r1, #0
   1a178:	eor	r0, r0, r1
   1a17c:	and	r0, r0, #1
   1a180:	strb	r0, [fp, #-9]
   1a184:	ldrb	r0, [fp, #-9]
   1a188:	and	r0, r0, #1
   1a18c:	sub	sp, fp, #8
   1a190:	pop	{r4, r5, fp, pc}
   1a194:	push	{fp, lr}
   1a198:	mov	fp, sp
   1a19c:	sub	sp, sp, #16
   1a1a0:	str	r0, [fp, #-4]
   1a1a4:	str	r1, [sp, #8]
   1a1a8:	str	r2, [sp, #4]
   1a1ac:	ldr	r0, [fp, #-4]
   1a1b0:	ldr	r1, [sp, #8]
   1a1b4:	ldr	r2, [sp, #4]
   1a1b8:	bl	1a1c4 <__assert_fail@plt+0x91d0>
   1a1bc:	mov	sp, fp
   1a1c0:	pop	{fp, pc}
   1a1c4:	push	{fp, lr}
   1a1c8:	mov	fp, sp
   1a1cc:	sub	sp, sp, #24
   1a1d0:	str	r0, [fp, #-8]
   1a1d4:	str	r1, [sp, #12]
   1a1d8:	str	r2, [sp, #8]
   1a1dc:	ldr	r0, [fp, #-8]
   1a1e0:	bl	1a2c4 <__assert_fail@plt+0x92d0>
   1a1e4:	str	r0, [sp, #4]
   1a1e8:	ldr	r0, [sp, #4]
   1a1ec:	movw	r1, #0
   1a1f0:	cmp	r0, r1
   1a1f4:	bne	1a21c <__assert_fail@plt+0x9228>
   1a1f8:	ldr	r0, [sp, #8]
   1a1fc:	cmp	r0, #0
   1a200:	bls	1a210 <__assert_fail@plt+0x921c>
   1a204:	ldr	r0, [sp, #12]
   1a208:	movw	r1, #0
   1a20c:	strb	r1, [r0]
   1a210:	movw	r0, #22
   1a214:	str	r0, [fp, #-4]
   1a218:	b	1a298 <__assert_fail@plt+0x92a4>
   1a21c:	ldr	r0, [sp, #4]
   1a220:	bl	10f10 <strlen@plt>
   1a224:	str	r0, [sp]
   1a228:	ldr	r0, [sp]
   1a22c:	ldr	lr, [sp, #8]
   1a230:	cmp	r0, lr
   1a234:	bcs	1a258 <__assert_fail@plt+0x9264>
   1a238:	ldr	r0, [sp, #12]
   1a23c:	ldr	r1, [sp, #4]
   1a240:	ldr	r2, [sp]
   1a244:	add	r2, r2, #1
   1a248:	bl	10e08 <memcpy@plt>
   1a24c:	movw	r0, #0
   1a250:	str	r0, [fp, #-4]
   1a254:	b	1a298 <__assert_fail@plt+0x92a4>
   1a258:	ldr	r0, [sp, #8]
   1a25c:	cmp	r0, #0
   1a260:	bls	1a290 <__assert_fail@plt+0x929c>
   1a264:	ldr	r0, [sp, #12]
   1a268:	ldr	r1, [sp, #4]
   1a26c:	ldr	r2, [sp, #8]
   1a270:	sub	r2, r2, #1
   1a274:	bl	10e08 <memcpy@plt>
   1a278:	ldr	r0, [sp, #12]
   1a27c:	ldr	r1, [sp, #8]
   1a280:	sub	r1, r1, #1
   1a284:	add	r0, r0, r1
   1a288:	movw	r1, #0
   1a28c:	strb	r1, [r0]
   1a290:	movw	r0, #34	; 0x22
   1a294:	str	r0, [fp, #-4]
   1a298:	ldr	r0, [fp, #-4]
   1a29c:	mov	sp, fp
   1a2a0:	pop	{fp, pc}
   1a2a4:	push	{fp, lr}
   1a2a8:	mov	fp, sp
   1a2ac:	sub	sp, sp, #8
   1a2b0:	str	r0, [sp, #4]
   1a2b4:	ldr	r0, [sp, #4]
   1a2b8:	bl	1a2c4 <__assert_fail@plt+0x92d0>
   1a2bc:	mov	sp, fp
   1a2c0:	pop	{fp, pc}
   1a2c4:	push	{fp, lr}
   1a2c8:	mov	fp, sp
   1a2cc:	sub	sp, sp, #8
   1a2d0:	str	r0, [sp, #4]
   1a2d4:	ldr	r0, [sp, #4]
   1a2d8:	movw	r1, #0
   1a2dc:	bl	10f7c <setlocale@plt>
   1a2e0:	str	r0, [sp]
   1a2e4:	ldr	r0, [sp]
   1a2e8:	mov	sp, fp
   1a2ec:	pop	{fp, pc}
   1a2f0:	cmp	r3, #0
   1a2f4:	cmpeq	r2, #0
   1a2f8:	bne	1a31c <__assert_fail@plt+0x9328>
   1a2fc:	cmp	r1, #0
   1a300:	movlt	r1, #-2147483648	; 0x80000000
   1a304:	movlt	r0, #0
   1a308:	blt	1a318 <__assert_fail@plt+0x9324>
   1a30c:	cmpeq	r0, #0
   1a310:	mvnne	r1, #-2147483648	; 0x80000000
   1a314:	mvnne	r0, #0
   1a318:	b	1a400 <__assert_fail@plt+0x940c>
   1a31c:	sub	sp, sp, #8
   1a320:	push	{sp, lr}
   1a324:	cmp	r1, #0
   1a328:	blt	1a348 <__assert_fail@plt+0x9354>
   1a32c:	cmp	r3, #0
   1a330:	blt	1a37c <__assert_fail@plt+0x9388>
   1a334:	bl	1a410 <__assert_fail@plt+0x941c>
   1a338:	ldr	lr, [sp, #4]
   1a33c:	add	sp, sp, #8
   1a340:	pop	{r2, r3}
   1a344:	bx	lr
   1a348:	rsbs	r0, r0, #0
   1a34c:	sbc	r1, r1, r1, lsl #1
   1a350:	cmp	r3, #0
   1a354:	blt	1a3a0 <__assert_fail@plt+0x93ac>
   1a358:	bl	1a410 <__assert_fail@plt+0x941c>
   1a35c:	ldr	lr, [sp, #4]
   1a360:	add	sp, sp, #8
   1a364:	pop	{r2, r3}
   1a368:	rsbs	r0, r0, #0
   1a36c:	sbc	r1, r1, r1, lsl #1
   1a370:	rsbs	r2, r2, #0
   1a374:	sbc	r3, r3, r3, lsl #1
   1a378:	bx	lr
   1a37c:	rsbs	r2, r2, #0
   1a380:	sbc	r3, r3, r3, lsl #1
   1a384:	bl	1a410 <__assert_fail@plt+0x941c>
   1a388:	ldr	lr, [sp, #4]
   1a38c:	add	sp, sp, #8
   1a390:	pop	{r2, r3}
   1a394:	rsbs	r0, r0, #0
   1a398:	sbc	r1, r1, r1, lsl #1
   1a39c:	bx	lr
   1a3a0:	rsbs	r2, r2, #0
   1a3a4:	sbc	r3, r3, r3, lsl #1
   1a3a8:	bl	1a410 <__assert_fail@plt+0x941c>
   1a3ac:	ldr	lr, [sp, #4]
   1a3b0:	add	sp, sp, #8
   1a3b4:	pop	{r2, r3}
   1a3b8:	rsbs	r2, r2, #0
   1a3bc:	sbc	r3, r3, r3, lsl #1
   1a3c0:	bx	lr
   1a3c4:	cmp	r3, #0
   1a3c8:	cmpeq	r2, #0
   1a3cc:	bne	1a3e4 <__assert_fail@plt+0x93f0>
   1a3d0:	cmp	r1, #0
   1a3d4:	cmpeq	r0, #0
   1a3d8:	mvnne	r1, #0
   1a3dc:	mvnne	r0, #0
   1a3e0:	b	1a400 <__assert_fail@plt+0x940c>
   1a3e4:	sub	sp, sp, #8
   1a3e8:	push	{sp, lr}
   1a3ec:	bl	1a410 <__assert_fail@plt+0x941c>
   1a3f0:	ldr	lr, [sp, #4]
   1a3f4:	add	sp, sp, #8
   1a3f8:	pop	{r2, r3}
   1a3fc:	bx	lr
   1a400:	push	{r1, lr}
   1a404:	mov	r0, #8
   1a408:	bl	10db4 <raise@plt>
   1a40c:	pop	{r1, pc}
   1a410:	cmp	r1, r3
   1a414:	cmpeq	r0, r2
   1a418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a41c:	mov	r4, r0
   1a420:	movcc	r0, #0
   1a424:	mov	r5, r1
   1a428:	ldr	lr, [sp, #36]	; 0x24
   1a42c:	movcc	r1, r0
   1a430:	bcc	1a52c <__assert_fail@plt+0x9538>
   1a434:	cmp	r3, #0
   1a438:	clzeq	ip, r2
   1a43c:	clzne	ip, r3
   1a440:	addeq	ip, ip, #32
   1a444:	cmp	r5, #0
   1a448:	clzeq	r1, r4
   1a44c:	addeq	r1, r1, #32
   1a450:	clzne	r1, r5
   1a454:	sub	ip, ip, r1
   1a458:	sub	sl, ip, #32
   1a45c:	lsl	r9, r3, ip
   1a460:	rsb	fp, ip, #32
   1a464:	orr	r9, r9, r2, lsl sl
   1a468:	orr	r9, r9, r2, lsr fp
   1a46c:	lsl	r8, r2, ip
   1a470:	cmp	r5, r9
   1a474:	cmpeq	r4, r8
   1a478:	movcc	r0, #0
   1a47c:	movcc	r1, r0
   1a480:	bcc	1a49c <__assert_fail@plt+0x94a8>
   1a484:	mov	r0, #1
   1a488:	subs	r4, r4, r8
   1a48c:	lsl	r1, r0, sl
   1a490:	orr	r1, r1, r0, lsr fp
   1a494:	lsl	r0, r0, ip
   1a498:	sbc	r5, r5, r9
   1a49c:	cmp	ip, #0
   1a4a0:	beq	1a52c <__assert_fail@plt+0x9538>
   1a4a4:	lsr	r6, r8, #1
   1a4a8:	orr	r6, r6, r9, lsl #31
   1a4ac:	lsr	r7, r9, #1
   1a4b0:	mov	r2, ip
   1a4b4:	b	1a4d8 <__assert_fail@plt+0x94e4>
   1a4b8:	subs	r3, r4, r6
   1a4bc:	sbc	r8, r5, r7
   1a4c0:	adds	r3, r3, r3
   1a4c4:	adc	r8, r8, r8
   1a4c8:	adds	r4, r3, #1
   1a4cc:	adc	r5, r8, #0
   1a4d0:	subs	r2, r2, #1
   1a4d4:	beq	1a4f4 <__assert_fail@plt+0x9500>
   1a4d8:	cmp	r5, r7
   1a4dc:	cmpeq	r4, r6
   1a4e0:	bcs	1a4b8 <__assert_fail@plt+0x94c4>
   1a4e4:	adds	r4, r4, r4
   1a4e8:	adc	r5, r5, r5
   1a4ec:	subs	r2, r2, #1
   1a4f0:	bne	1a4d8 <__assert_fail@plt+0x94e4>
   1a4f4:	lsr	r3, r4, ip
   1a4f8:	orr	r3, r3, r5, lsl fp
   1a4fc:	lsr	r2, r5, ip
   1a500:	orr	r3, r3, r5, lsr sl
   1a504:	adds	r0, r0, r4
   1a508:	mov	r4, r3
   1a50c:	lsl	r3, r2, ip
   1a510:	orr	r3, r3, r4, lsl sl
   1a514:	lsl	ip, r4, ip
   1a518:	orr	r3, r3, r4, lsr fp
   1a51c:	adc	r1, r1, r5
   1a520:	subs	r0, r0, ip
   1a524:	mov	r5, r2
   1a528:	sbc	r1, r1, r3
   1a52c:	cmp	lr, #0
   1a530:	strdne	r4, [lr]
   1a534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a538:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a53c:	mov	r7, r0
   1a540:	ldr	r6, [pc, #72]	; 1a590 <__assert_fail@plt+0x959c>
   1a544:	ldr	r5, [pc, #72]	; 1a594 <__assert_fail@plt+0x95a0>
   1a548:	add	r6, pc, r6
   1a54c:	add	r5, pc, r5
   1a550:	sub	r6, r6, r5
   1a554:	mov	r8, r1
   1a558:	mov	r9, r2
   1a55c:	bl	10d7c <calloc@plt-0x20>
   1a560:	asrs	r6, r6, #2
   1a564:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a568:	mov	r4, #0
   1a56c:	add	r4, r4, #1
   1a570:	ldr	r3, [r5], #4
   1a574:	mov	r2, r9
   1a578:	mov	r1, r8
   1a57c:	mov	r0, r7
   1a580:	blx	r3
   1a584:	cmp	r6, r4
   1a588:	bne	1a56c <__assert_fail@plt+0x9578>
   1a58c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a590:			; <UNDEFINED> instruction: 0x000109bc
   1a594:			; <UNDEFINED> instruction: 0x000109b4
   1a598:	bx	lr
   1a59c:	ldr	r3, [pc, #12]	; 1a5b0 <__assert_fail@plt+0x95bc>
   1a5a0:	mov	r1, #0
   1a5a4:	add	r3, pc, r3
   1a5a8:	ldr	r2, [r3]
   1a5ac:	b	10f34 <__cxa_atexit@plt>
   1a5b0:	andeq	r0, r1, r4, lsr fp

Disassembly of section .fini:

0001a5b4 <.fini>:
   1a5b4:	push	{r3, lr}
   1a5b8:	pop	{r3, pc}
