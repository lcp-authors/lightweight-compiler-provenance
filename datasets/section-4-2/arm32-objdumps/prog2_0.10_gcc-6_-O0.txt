
../repos/prog2/0.10:     file format elf32-littlearm


Disassembly of section .init:

00010630 <.init>:
   10630:	push	{r3, lr}
   10634:	bl	106d4 <_start@@Base+0x3c>
   10638:	pop	{r3, pc}

Disassembly of section .plt:

0001063c <printf@plt-0x14>:
   1063c:	push	{lr}		; (str lr, [sp, #-4]!)
   10640:	ldr	lr, [pc, #4]	; 1064c <printf@plt-0x4>
   10644:	add	lr, pc, lr
   10648:	ldr	pc, [lr, #8]!
   1064c:			; <UNDEFINED> instruction: 0x000109b4

00010650 <printf@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2484]!	; 0x9b4

0001065c <memcpy@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2476]!	; 0x9ac

00010668 <__libc_start_main@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2468]!	; 0x9a4

00010674 <__gmon_start__@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2460]!	; 0x99c

00010680 <__isoc99_scanf@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2452]!	; 0x994

0001068c <abort@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2444]!	; 0x98c

Disassembly of section .text:

00010698 <_start@@Base>:
   10698:	mov	fp, #0
   1069c:	mov	lr, #0
   106a0:	pop	{r1}		; (ldr r1, [sp], #4)
   106a4:	mov	r2, sp
   106a8:	push	{r2}		; (str r2, [sp, #-4]!)
   106ac:	push	{r0}		; (str r0, [sp, #-4]!)
   106b0:	ldr	ip, [pc, #16]	; 106c8 <_start@@Base+0x30>
   106b4:	push	{ip}		; (str ip, [sp, #-4]!)
   106b8:	ldr	r0, [pc, #12]	; 106cc <_start@@Base+0x34>
   106bc:	ldr	r3, [pc, #12]	; 106d0 <_start@@Base+0x38>
   106c0:	bl	10668 <__libc_start_main@plt>
   106c4:	bl	1068c <abort@plt>
   106c8:	andeq	r0, r1, r4, lsl #24
   106cc:	ldrdeq	r0, [r1], -r4
   106d0:	andeq	r0, r1, r4, lsr #23
   106d4:	ldr	r3, [pc, #20]	; 106f0 <_start@@Base+0x58>
   106d8:	ldr	r2, [pc, #20]	; 106f4 <_start@@Base+0x5c>
   106dc:	add	r3, pc, r3
   106e0:	ldr	r2, [r3, r2]
   106e4:	cmp	r2, #0
   106e8:	bxeq	lr
   106ec:	b	10674 <__gmon_start__@plt>
   106f0:	andeq	r0, r1, ip, lsl r9
   106f4:	andeq	r0, r0, r4, lsr #32
   106f8:	ldr	r3, [pc, #28]	; 1071c <_start@@Base+0x84>
   106fc:	ldr	r0, [pc, #28]	; 10720 <_start@@Base+0x88>
   10700:	sub	r3, r3, r0
   10704:	cmp	r3, #6
   10708:	bxls	lr
   1070c:	ldr	r3, [pc, #16]	; 10724 <_start@@Base+0x8c>
   10710:	cmp	r3, #0
   10714:	bxeq	lr
   10718:	bx	r3
   1071c:	andeq	r1, r2, r3, lsr r0
   10720:	andeq	r1, r2, r0, lsr r0
   10724:	andeq	r0, r0, r0
   10728:	ldr	r1, [pc, #36]	; 10754 <_start@@Base+0xbc>
   1072c:	ldr	r0, [pc, #36]	; 10758 <_start@@Base+0xc0>
   10730:	sub	r1, r1, r0
   10734:	asr	r1, r1, #2
   10738:	add	r1, r1, r1, lsr #31
   1073c:	asrs	r1, r1, #1
   10740:	bxeq	lr
   10744:	ldr	r3, [pc, #16]	; 1075c <_start@@Base+0xc4>
   10748:	cmp	r3, #0
   1074c:	bxeq	lr
   10750:	bx	r3
   10754:	andeq	r1, r2, r0, lsr r0
   10758:	andeq	r1, r2, r0, lsr r0
   1075c:	andeq	r0, r0, r0
   10760:	push	{r4, lr}
   10764:	ldr	r4, [pc, #24]	; 10784 <_start@@Base+0xec>
   10768:	ldrb	r3, [r4]
   1076c:	cmp	r3, #0
   10770:	popne	{r4, pc}
   10774:	bl	106f8 <_start@@Base+0x60>
   10778:	mov	r3, #1
   1077c:	strb	r3, [r4]
   10780:	pop	{r4, pc}
   10784:	andeq	r1, r2, r0, lsr r0
   10788:	ldr	r0, [pc, #40]	; 107b8 <_start@@Base+0x120>
   1078c:	ldr	r3, [r0]
   10790:	cmp	r3, #0
   10794:	bne	1079c <_start@@Base+0x104>
   10798:	b	10728 <_start@@Base+0x90>
   1079c:	ldr	r3, [pc, #24]	; 107bc <_start@@Base+0x124>
   107a0:	cmp	r3, #0
   107a4:	beq	10798 <_start@@Base+0x100>
   107a8:	push	{r4, lr}
   107ac:	blx	r3
   107b0:	pop	{r4, lr}
   107b4:	b	10728 <_start@@Base+0x90>
   107b8:	andeq	r0, r2, r4, lsl pc
   107bc:	andeq	r0, r0, r0

000107c0 <nova_tarefa@@Base>:
   107c0:	push	{fp, lr}
   107c4:	add	fp, sp, #4
   107c8:	sub	sp, sp, #16
   107cc:	str	r0, [fp, #-8]
   107d0:	ldr	r1, [fp, #-8]
   107d4:	ldr	r3, [fp, #-8]
   107d8:	add	r2, r3, #30
   107dc:	ldr	r3, [fp, #-8]
   107e0:	add	r0, r3, #60	; 0x3c
   107e4:	ldr	r3, [fp, #-8]
   107e8:	add	r3, r3, #64	; 0x40
   107ec:	str	r3, [sp]
   107f0:	mov	r3, r0
   107f4:	ldr	r0, [pc, #40]	; 10824 <nova_tarefa@@Base+0x64>
   107f8:	add	r0, pc, r0
   107fc:	bl	10680 <__isoc99_scanf@plt>
   10800:	mov	r3, r0
   10804:	cmp	r3, #4
   10808:	bne	10814 <nova_tarefa@@Base+0x54>
   1080c:	mov	r3, #1
   10810:	b	10818 <nova_tarefa@@Base+0x58>
   10814:	mov	r3, #0
   10818:	mov	r0, r3
   1081c:	sub	sp, fp, #4
   10820:	pop	{fp, pc}
   10824:	andeq	r0, r0, r4, lsl r4

00010828 <ler_tarefas@@Base>:
   10828:	push	{fp, lr}
   1082c:	add	fp, sp, #4
   10830:	sub	sp, sp, #16
   10834:	str	r0, [fp, #-16]
   10838:	mov	r3, #0
   1083c:	str	r3, [fp, #-8]
   10840:	b	10850 <ler_tarefas@@Base+0x28>
   10844:	ldr	r3, [fp, #-8]
   10848:	add	r3, r3, #1
   1084c:	str	r3, [fp, #-8]
   10850:	ldr	r2, [fp, #-8]
   10854:	mov	r3, r2
   10858:	lsl	r3, r3, #4
   1085c:	add	r3, r3, r2
   10860:	lsl	r3, r3, #2
   10864:	mov	r2, r3
   10868:	ldr	r3, [fp, #-16]
   1086c:	add	r3, r3, r2
   10870:	mov	r0, r3
   10874:	bl	107c0 <nova_tarefa@@Base>
   10878:	mov	r3, r0
   1087c:	cmp	r3, #0
   10880:	beq	10890 <ler_tarefas@@Base+0x68>
   10884:	ldr	r3, [fp, #-8]
   10888:	cmp	r3, #99	; 0x63
   1088c:	ble	10844 <ler_tarefas@@Base+0x1c>
   10890:	ldr	r3, [fp, #-8]
   10894:	mov	r0, r3
   10898:	sub	sp, fp, #4
   1089c:	pop	{fp, pc}

000108a0 <lista_tarefas@@Base>:
   108a0:	push	{fp, lr}
   108a4:	add	fp, sp, #4
   108a8:	sub	sp, sp, #24
   108ac:	str	r0, [fp, #-16]
   108b0:	str	r1, [fp, #-20]	; 0xffffffec
   108b4:	mov	r3, #0
   108b8:	str	r3, [fp, #-8]
   108bc:	b	10978 <lista_tarefas@@Base+0xd8>
   108c0:	ldr	r2, [fp, #-8]
   108c4:	mov	r3, r2
   108c8:	lsl	r3, r3, #4
   108cc:	add	r3, r3, r2
   108d0:	lsl	r3, r3, #2
   108d4:	mov	r2, r3
   108d8:	ldr	r3, [fp, #-16]
   108dc:	add	r3, r3, r2
   108e0:	mov	ip, r3
   108e4:	ldr	r2, [fp, #-8]
   108e8:	mov	r3, r2
   108ec:	lsl	r3, r3, #4
   108f0:	add	r3, r3, r2
   108f4:	lsl	r3, r3, #2
   108f8:	mov	r2, r3
   108fc:	ldr	r3, [fp, #-16]
   10900:	add	r3, r3, r2
   10904:	add	r1, r3, #30
   10908:	ldr	r2, [fp, #-8]
   1090c:	mov	r3, r2
   10910:	lsl	r3, r3, #4
   10914:	add	r3, r3, r2
   10918:	lsl	r3, r3, #2
   1091c:	mov	r2, r3
   10920:	ldr	r3, [fp, #-16]
   10924:	add	r3, r3, r2
   10928:	ldr	r0, [r3, #60]	; 0x3c
   1092c:	ldr	r2, [fp, #-8]
   10930:	mov	r3, r2
   10934:	lsl	r3, r3, #4
   10938:	add	r3, r3, r2
   1093c:	lsl	r3, r3, #2
   10940:	mov	r2, r3
   10944:	ldr	r3, [fp, #-16]
   10948:	add	r3, r3, r2
   1094c:	ldr	r3, [r3, #64]	; 0x40
   10950:	str	r3, [sp]
   10954:	mov	r3, r0
   10958:	mov	r2, r1
   1095c:	mov	r1, ip
   10960:	ldr	r0, [pc, #44]	; 10994 <lista_tarefas@@Base+0xf4>
   10964:	add	r0, pc, r0
   10968:	bl	10650 <printf@plt>
   1096c:	ldr	r3, [fp, #-8]
   10970:	add	r3, r3, #1
   10974:	str	r3, [fp, #-8]
   10978:	ldr	r2, [fp, #-8]
   1097c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10980:	cmp	r2, r3
   10984:	blt	108c0 <lista_tarefas@@Base+0x20>
   10988:	nop			; (mov r0, r0)
   1098c:	sub	sp, fp, #4
   10990:	pop	{fp, pc}
   10994:			; <UNDEFINED> instruction: 0x000002b4

00010998 <analisa_tarefas@@Base>:
   10998:	push	{fp, lr}
   1099c:	add	fp, sp, #4
   109a0:	sub	sp, sp, #32
   109a4:	str	r0, [fp, #-24]	; 0xffffffe8
   109a8:	str	r1, [fp, #-28]	; 0xffffffe4
   109ac:	str	r2, [fp, #-32]	; 0xffffffe0
   109b0:	mov	r3, #0
   109b4:	str	r3, [fp, #-12]
   109b8:	mov	r3, #0
   109bc:	str	r3, [fp, #-16]
   109c0:	mov	r3, #0
   109c4:	str	r3, [fp, #-8]
   109c8:	b	10a98 <analisa_tarefas@@Base+0x100>
   109cc:	ldr	r2, [fp, #-8]
   109d0:	mov	r3, r2
   109d4:	lsl	r3, r3, #4
   109d8:	add	r3, r3, r2
   109dc:	lsl	r3, r3, #2
   109e0:	mov	r2, r3
   109e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   109e8:	add	r3, r3, r2
   109ec:	ldr	r3, [r3, #60]	; 0x3c
   109f0:	ldr	r2, [fp, #-12]
   109f4:	add	r3, r2, r3
   109f8:	str	r3, [fp, #-12]
   109fc:	ldr	r2, [fp, #-8]
   10a00:	mov	r3, r2
   10a04:	lsl	r3, r3, #4
   10a08:	add	r3, r3, r2
   10a0c:	lsl	r3, r3, #2
   10a10:	mov	r2, r3
   10a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a18:	add	r3, r3, r2
   10a1c:	ldr	r2, [r3, #60]	; 0x3c
   10a20:	ldr	r3, [fp, #-16]
   10a24:	cmp	r2, r3
   10a28:	ble	10a8c <analisa_tarefas@@Base+0xf4>
   10a2c:	ldr	r2, [fp, #-8]
   10a30:	mov	r3, r2
   10a34:	lsl	r3, r3, #4
   10a38:	add	r3, r3, r2
   10a3c:	lsl	r3, r3, #2
   10a40:	mov	r2, r3
   10a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a48:	add	r3, r3, r2
   10a4c:	ldr	r3, [r3, #60]	; 0x3c
   10a50:	str	r3, [fp, #-16]
   10a54:	ldr	r2, [fp, #-8]
   10a58:	mov	r3, r2
   10a5c:	lsl	r3, r3, #4
   10a60:	add	r3, r3, r2
   10a64:	lsl	r3, r3, #2
   10a68:	mov	r2, r3
   10a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a70:	add	r3, r3, r2
   10a74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10a78:	mov	r0, r2
   10a7c:	mov	r1, r3
   10a80:	mov	r3, #68	; 0x44
   10a84:	mov	r2, r3
   10a88:	bl	1065c <memcpy@plt>
   10a8c:	ldr	r3, [fp, #-8]
   10a90:	add	r3, r3, #1
   10a94:	str	r3, [fp, #-8]
   10a98:	ldr	r2, [fp, #-8]
   10a9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10aa0:	cmp	r2, r3
   10aa4:	blt	109cc <analisa_tarefas@@Base+0x34>
   10aa8:	ldr	r3, [fp, #-12]
   10aac:	vmov	s15, r3
   10ab0:	vcvt.f32.s32	s14, s15
   10ab4:	ldr	r3, [fp, #-8]
   10ab8:	vmov	s15, r3
   10abc:	vcvt.f32.s32	s15, s15
   10ac0:	vdiv.f32	s13, s14, s15
   10ac4:	vmov.f32	s15, s13
   10ac8:	vmov.f32	s0, s15
   10acc:	sub	sp, fp, #4
   10ad0:	pop	{fp, pc}

00010ad4 <main@@Base>:
   10ad4:	push	{fp, lr}
   10ad8:	add	fp, sp, #4
   10adc:	sub	sp, sp, #6848	; 0x1ac0
   10ae0:	sub	sp, sp, #24
   10ae4:	sub	r3, fp, #6784	; 0x1a80
   10ae8:	sub	r3, r3, #4
   10aec:	sub	r3, r3, #20
   10af0:	mov	r0, r3
   10af4:	bl	10828 <ler_tarefas@@Base>
   10af8:	str	r0, [fp, #-8]
   10afc:	sub	r3, fp, #6784	; 0x1a80
   10b00:	sub	r3, r3, #4
   10b04:	sub	r3, r3, #20
   10b08:	ldr	r1, [fp, #-8]
   10b0c:	mov	r0, r3
   10b10:	bl	108a0 <lista_tarefas@@Base>
   10b14:	ldr	r1, [fp, #-8]
   10b18:	ldr	r3, [pc, #120]	; 10b98 <main@@Base+0xc4>
   10b1c:	add	r3, pc, r3
   10b20:	mov	r0, r3
   10b24:	bl	10650 <printf@plt>
   10b28:	sub	r2, fp, #6848	; 0x1ac0
   10b2c:	sub	r2, r2, #4
   10b30:	sub	r2, r2, #24
   10b34:	sub	r3, fp, #6784	; 0x1a80
   10b38:	sub	r3, r3, #4
   10b3c:	sub	r3, r3, #20
   10b40:	ldr	r1, [fp, #-8]
   10b44:	mov	r0, r3
   10b48:	bl	10998 <analisa_tarefas@@Base>
   10b4c:	vmov.f32	s15, s0
   10b50:	vcvt.f64.f32	d7, s15
   10b54:	vmov	r2, r3, d7
   10b58:	ldr	r1, [pc, #60]	; 10b9c <main@@Base+0xc8>
   10b5c:	add	r1, pc, r1
   10b60:	mov	r0, r1
   10b64:	bl	10650 <printf@plt>
   10b68:	sub	r3, fp, #6848	; 0x1ac0
   10b6c:	sub	r3, r3, #4
   10b70:	sub	r3, r3, #24
   10b74:	mov	r1, r3
   10b78:	ldr	r3, [pc, #32]	; 10ba0 <main@@Base+0xcc>
   10b7c:	add	r3, pc, r3
   10b80:	mov	r0, r3
   10b84:	bl	10650 <printf@plt>
   10b88:	mov	r3, #0
   10b8c:	mov	r0, r3
   10b90:	sub	sp, fp, #4
   10b94:	pop	{fp, pc}
   10b98:	andeq	r0, r0, ip, lsl #2
   10b9c:	andeq	r0, r0, ip, ror #1
   10ba0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00010ba4 <__libc_csu_init@@Base>:
   10ba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ba8:	mov	r7, r0
   10bac:	ldr	r6, [pc, #72]	; 10bfc <__libc_csu_init@@Base+0x58>
   10bb0:	ldr	r5, [pc, #72]	; 10c00 <__libc_csu_init@@Base+0x5c>
   10bb4:	add	r6, pc, r6
   10bb8:	add	r5, pc, r5
   10bbc:	sub	r6, r6, r5
   10bc0:	mov	r8, r1
   10bc4:	mov	r9, r2
   10bc8:	bl	10630 <printf@plt-0x20>
   10bcc:	asrs	r6, r6, #2
   10bd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bd4:	mov	r4, #0
   10bd8:	add	r4, r4, #1
   10bdc:	ldr	r3, [r5], #4
   10be0:	mov	r2, r9
   10be4:	mov	r1, r8
   10be8:	mov	r0, r7
   10bec:	blx	r3
   10bf0:	cmp	r6, r4
   10bf4:	bne	10bd8 <__libc_csu_init@@Base+0x34>
   10bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bfc:	andeq	r0, r1, r4, asr r3
   10c00:	andeq	r0, r1, ip, asr #6

00010c04 <__libc_csu_fini@@Base>:
   10c04:	bx	lr

Disassembly of section .fini:

00010c08 <.fini>:
   10c08:	push	{r3, lr}
   10c0c:	pop	{r3, pc}
