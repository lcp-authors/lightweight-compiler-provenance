
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

000005a4 <_init>:
 5a4:	push	{r3, lr}
 5a8:	bl	63c <call_weak_fn>
 5ac:	pop	{r3, pc}

Disassembly of section .plt:

000005b0 <.plt>:
 5b0:	push	{lr}		; (str lr, [sp, #-4]!)
 5b4:	ldr	lr, [pc, #4]	; 5c0 <.plt+0x10>
 5b8:	add	lr, pc, lr
 5bc:	ldr	pc, [lr, #8]!
 5c0:	.word	0x00010a40

000005c4 <__cxa_finalize@plt>:
 5c4:	add	ip, pc, #0, 12
 5c8:	add	ip, ip, #16, 20	; 0x10000
 5cc:	ldr	pc, [ip, #2624]!	; 0xa40

000005d0 <rb_outofmemory@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #16, 20	; 0x10000
 5d8:	ldr	pc, [ip, #2616]!	; 0xa38

000005dc <strcpy@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #16, 20	; 0x10000
 5e4:	ldr	pc, [ip, #2608]!	; 0xa30

000005e8 <malloc@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #16, 20	; 0x10000
 5f0:	ldr	pc, [ip, #2600]!	; 0xa28

000005f4 <__gmon_start__@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #16, 20	; 0x10000
 5fc:	ldr	pc, [ip, #2592]!	; 0xa20

00000600 <strlen@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #16, 20	; 0x10000
 608:	ldr	pc, [ip, #2584]!	; 0xa18

0000060c <strchr@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #16, 20	; 0x10000
 614:	ldr	pc, [ip, #2576]!	; 0xa10

00000618 <atoi@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2568]!	; 0xa08

00000624 <rb_strlcpy@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2560]!	; 0xa00

00000630 <irccmp@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2552]!	; 0x9f8

Disassembly of section .text:

0000063c <call_weak_fn>:
 63c:	ldr	r3, [pc, #20]	; 658 <call_weak_fn+0x1c>
 640:	ldr	r2, [pc, #20]	; 65c <call_weak_fn+0x20>
 644:	add	r3, pc, r3
 648:	ldr	r2, [r3, r2]
 64c:	cmp	r2, #0
 650:	bxeq	lr
 654:	b	5f4 <__gmon_start__@plt>
 658:	.word	0x000109b4
 65c:	.word	0x00000040

00000660 <deregister_tm_clones>:
 660:	ldr	r0, [pc, #44]	; 694 <deregister_tm_clones+0x34>
 664:	ldr	r3, [pc, #44]	; 698 <deregister_tm_clones+0x38>
 668:	add	r0, pc, r0
 66c:	add	r3, pc, r3
 670:	cmp	r3, r0
 674:	ldr	r3, [pc, #32]	; 69c <deregister_tm_clones+0x3c>
 678:	add	r3, pc, r3
 67c:	bxeq	lr
 680:	ldr	r2, [pc, #24]	; 6a0 <deregister_tm_clones+0x40>
 684:	ldr	r3, [r3, r2]
 688:	cmp	r3, #0
 68c:	bxeq	lr
 690:	bx	r3
 694:	.word	0x00010a54
 698:	.word	0x00010a50
 69c:	.word	0x00010980
 6a0:	.word	0x00000038

000006a4 <register_tm_clones>:
 6a4:	ldr	r0, [pc, #56]	; 6e4 <register_tm_clones+0x40>
 6a8:	ldr	r3, [pc, #56]	; 6e8 <register_tm_clones+0x44>
 6ac:	add	r0, pc, r0
 6b0:	add	r3, pc, r3
 6b4:	sub	r1, r3, r0
 6b8:	ldr	r3, [pc, #44]	; 6ec <register_tm_clones+0x48>
 6bc:	asr	r1, r1, #2
 6c0:	add	r3, pc, r3
 6c4:	add	r1, r1, r1, lsr #31
 6c8:	asrs	r1, r1, #1
 6cc:	bxeq	lr
 6d0:	ldr	r2, [pc, #24]	; 6f0 <register_tm_clones+0x4c>
 6d4:	ldr	r3, [r3, r2]
 6d8:	cmp	r3, #0
 6dc:	bxeq	lr
 6e0:	bx	r3
 6e4:	.word	0x00010a10
 6e8:	.word	0x00010a0c
 6ec:	.word	0x00010938
 6f0:	.word	0x00000048

000006f4 <__do_global_dtors_aux>:
 6f4:	ldr	r3, [pc, #76]	; 748 <__do_global_dtors_aux+0x54>
 6f8:	ldr	r2, [pc, #76]	; 74c <__do_global_dtors_aux+0x58>
 6fc:	add	r3, pc, r3
 700:	add	r2, pc, r2
 704:	ldrb	r3, [r3]
 708:	cmp	r3, #0
 70c:	bxne	lr
 710:	ldr	r3, [pc, #56]	; 750 <__do_global_dtors_aux+0x5c>
 714:	push	{r4, lr}
 718:	ldr	r3, [r2, r3]
 71c:	cmp	r3, #0
 720:	beq	730 <__do_global_dtors_aux+0x3c>
 724:	ldr	r3, [pc, #40]	; 754 <__do_global_dtors_aux+0x60>
 728:	ldr	r0, [pc, r3]
 72c:	bl	5c4 <__cxa_finalize@plt>
 730:	bl	660 <deregister_tm_clones>
 734:	ldr	r3, [pc, #28]	; 758 <__do_global_dtors_aux+0x64>
 738:	mov	r2, #1
 73c:	add	r3, pc, r3
 740:	strb	r2, [r3]
 744:	pop	{r4, pc}
 748:	.word	0x000109c0
 74c:	.word	0x000108f8
 750:	.word	0x00000034
 754:	.word	0x0001091c
 758:	.word	0x00010980

0000075c <frame_dummy>:
 75c:	b	6a4 <register_tm_clones>

00000760 <mr_pass>:
 760:	push	{r4, r5, fp, lr}
 764:	add	fp, sp, #8
 768:	sub	sp, sp, #80	; 0x50
 76c:	ldr	ip, [fp, #8]
 770:	str	r0, [fp, #-12]
 774:	str	r1, [fp, #-16]
 778:	str	r2, [fp, #-20]	; 0xffffffec
 77c:	str	r3, [fp, #-24]	; 0xffffffe8
 780:	ldr	r0, [fp, #8]
 784:	ldr	r0, [r0, #4]
 788:	str	ip, [fp, #-48]	; 0xffffffd0
 78c:	bl	600 <strlen@plt>
 790:	add	r0, r0, #8
 794:	bic	r0, r0, #7
 798:	mov	r1, sp
 79c:	sub	r0, r1, r0
 7a0:	mov	sp, r0
 7a4:	str	r0, [fp, #-40]	; 0xffffffd8
 7a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
 7ac:	ldr	r1, [fp, #8]
 7b0:	ldr	r1, [r1, #4]
 7b4:	bl	5dc <strcpy@plt>
 7b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
 7bc:	str	r1, [fp, #-44]	; 0xffffffd4
 7c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
 7c4:	str	r1, [fp, #-36]	; 0xffffffdc
 7c8:	ldr	r1, [fp, #-16]
 7cc:	ldr	r1, [r1, #432]	; 0x1b0
 7d0:	ldr	r1, [r1, #276]	; 0x114
 7d4:	movw	r2, #0
 7d8:	cmp	r1, r2
 7dc:	str	r0, [fp, #-52]	; 0xffffffcc
 7e0:	bne	7fc <mr_pass+0x9c>
 7e4:	ldr	r0, [fp, #-16]
 7e8:	ldr	r0, [r0, #432]	; 0x1b0
 7ec:	ldr	r0, [r0, #280]	; 0x118
 7f0:	movw	r1, #0
 7f4:	cmp	r0, r1
 7f8:	beq	800 <mr_pass+0xa0>
 7fc:	b	a94 <mr_pass+0x334>
 800:	ldr	r0, [fp, #-36]	; 0xffffffdc
 804:	movw	r1, #58	; 0x3a
 808:	bl	60c <strchr@plt>
 80c:	str	r0, [fp, #-32]	; 0xffffffe0
 810:	movw	r1, #0
 814:	cmp	r0, r1
 818:	beq	83c <mr_pass+0xdc>
 81c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 820:	add	r1, r0, #1
 824:	str	r1, [fp, #-32]	; 0xffffffe0
 828:	movw	r1, #0
 82c:	strb	r1, [r0]
 830:	ldr	r0, [fp, #-36]	; 0xffffffdc
 834:	str	r0, [fp, #-28]	; 0xffffffe4
 838:	b	84c <mr_pass+0xec>
 83c:	ldr	r0, [fp, #-36]	; 0xffffffdc
 840:	str	r0, [fp, #-32]	; 0xffffffe0
 844:	movw	r0, #0
 848:	str	r0, [fp, #-28]	; 0xffffffe4
 84c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 850:	ldrb	r0, [r0]
 854:	cmp	r0, #0
 858:	beq	870 <mr_pass+0x110>
 85c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 860:	movw	r1, #128	; 0x80
 864:	bl	ac4 <rb_strndup>
 868:	str	r0, [fp, #-56]	; 0xffffffc8
 86c:	b	87c <mr_pass+0x11c>
 870:	movw	r0, #0
 874:	str	r0, [fp, #-56]	; 0xffffffc8
 878:	b	87c <mr_pass+0x11c>
 87c:	ldr	r0, [fp, #-56]	; 0xffffffc8
 880:	ldr	r1, [fp, #-16]
 884:	ldr	r1, [r1, #432]	; 0x1b0
 888:	str	r0, [r1, #276]	; 0x114
 88c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 890:	movw	r1, #0
 894:	cmp	r0, r1
 898:	beq	8c4 <mr_pass+0x164>
 89c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 8a0:	ldrb	r0, [r0]
 8a4:	cmp	r0, #0
 8a8:	beq	8c4 <mr_pass+0x164>
 8ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
 8b0:	movw	r1, #128	; 0x80
 8b4:	bl	ac4 <rb_strndup>
 8b8:	ldr	r1, [fp, #-16]
 8bc:	ldr	r1, [r1, #432]	; 0x1b0
 8c0:	str	r0, [r1, #280]	; 0x118
 8c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8c8:	cmp	r0, #2
 8cc:	ble	a94 <mr_pass+0x334>
 8d0:	ldr	r0, [fp, #-16]
 8d4:	ldr	r0, [r0, #24]
 8d8:	movw	r1, #0
 8dc:	cmp	r0, r1
 8e0:	bne	a94 <mr_pass+0x334>
 8e4:	ldr	r0, [fp, #-16]
 8e8:	ldr	r0, [r0, #436]	; 0x1b4
 8ec:	movw	r1, #0
 8f0:	cmp	r0, r1
 8f4:	beq	a94 <mr_pass+0x334>
 8f8:	ldr	r0, [pc, #412]	; a9c <mr_pass+0x33c>
 8fc:	add	r1, pc, r0
 900:	ldr	r0, [fp, #8]
 904:	ldr	r0, [r0, #8]
 908:	bl	630 <irccmp@plt>
 90c:	cmp	r0, #0
 910:	bne	930 <mr_pass+0x1d0>
 914:	ldr	r0, [fp, #-16]
 918:	ldr	r0, [r0, #52]	; 0x34
 91c:	cmp	r0, #0
 920:	bne	930 <mr_pass+0x1d0>
 924:	ldr	r0, [pc, #372]	; aa0 <mr_pass+0x340>
 928:	ldr	r1, [fp, #-16]
 92c:	str	r0, [r1, #52]	; 0x34
 930:	ldr	r0, [fp, #-24]	; 0xffffffe8
 934:	cmp	r0, #5
 938:	bne	a90 <mr_pass+0x330>
 93c:	ldr	r0, [fp, #8]
 940:	ldr	r0, [r0, #12]
 944:	bl	618 <atoi@plt>
 948:	cmp	r0, #6
 94c:	blt	a90 <mr_pass+0x330>
 950:	ldr	r0, [pc, #332]	; aa4 <mr_pass+0x344>
 954:	ldr	r0, [pc, r0]
 958:	ldr	r1, [fp, #8]
 95c:	ldr	r1, [r1, #16]
 960:	ldrb	r1, [r1]
 964:	mov	r2, r1
 968:	ldr	r3, [pc, #328]	; ab8 <mr_pass+0x358>
 96c:	ldr	r3, [pc, r3]
 970:	add	r1, r3, r1, lsl #2
 974:	ldr	r1, [r1]
 978:	and	r1, r1, #16
 97c:	cmp	r1, #0
 980:	str	r0, [fp, #-60]	; 0xffffffc4
 984:	str	r2, [fp, #-64]	; 0xffffffc0
 988:	beq	a8c <mr_pass+0x32c>
 98c:	ldr	r0, [pc, #276]	; aa8 <mr_pass+0x348>
 990:	ldr	r1, [pc, #276]	; aac <mr_pass+0x34c>
 994:	ldr	r1, [pc, r1]
 998:	ldr	r2, [fp, #8]
 99c:	ldr	r2, [r2, #16]
 9a0:	ldrb	r2, [r2, #1]
 9a4:	mov	r3, r2
 9a8:	ldr	ip, [pc, #268]	; abc <mr_pass+0x35c>
 9ac:	ldr	ip, [pc, ip]
 9b0:	add	r2, ip, r2, lsl #2
 9b4:	ldr	r2, [r2]
 9b8:	and	r0, r2, r0
 9bc:	cmp	r0, #0
 9c0:	str	r3, [fp, #-68]	; 0xffffffbc
 9c4:	str	r1, [fp, #-72]	; 0xffffffb8
 9c8:	beq	a8c <mr_pass+0x32c>
 9cc:	ldr	r0, [pc, #212]	; aa8 <mr_pass+0x348>
 9d0:	ldr	r1, [pc, #216]	; ab0 <mr_pass+0x350>
 9d4:	ldr	r1, [pc, r1]
 9d8:	ldr	r2, [fp, #8]
 9dc:	ldr	r2, [r2, #16]
 9e0:	ldrb	r2, [r2, #2]
 9e4:	mov	r3, r2
 9e8:	ldr	ip, [pc, #208]	; ac0 <mr_pass+0x360>
 9ec:	ldr	ip, [pc, ip]
 9f0:	add	r2, ip, r2, lsl #2
 9f4:	ldr	r2, [r2]
 9f8:	and	r0, r2, r0
 9fc:	cmp	r0, #0
 a00:	str	r3, [fp, #-76]	; 0xffffffb4
 a04:	str	r1, [fp, #-80]	; 0xffffffb0
 a08:	beq	a8c <mr_pass+0x32c>
 a0c:	ldr	r0, [fp, #8]
 a10:	ldr	r0, [r0, #16]
 a14:	ldrb	r0, [r0, #3]
 a18:	cmp	r0, #0
 a1c:	bne	a8c <mr_pass+0x32c>
 a20:	ldr	r0, [fp, #-16]
 a24:	ldr	r0, [r0, #436]	; 0x1b4
 a28:	add	r0, r0, #260	; 0x104
 a2c:	movw	r1, #0
 a30:	cmp	r0, r1
 a34:	beq	a4c <mr_pass+0x2ec>
 a38:	ldr	r0, [fp, #-16]
 a3c:	ldr	r0, [r0, #436]	; 0x1b4
 a40:	ldrb	r0, [r0, #260]	; 0x104
 a44:	cmp	r0, #0
 a48:	bne	a8c <mr_pass+0x32c>
 a4c:	ldr	r0, [pc, #96]	; ab4 <mr_pass+0x354>
 a50:	ldr	r0, [pc, r0]
 a54:	ldr	r0, [r0]
 a58:	ldr	r1, [fp, #-16]
 a5c:	ldr	r1, [r1, #432]	; 0x1b0
 a60:	ldr	r2, [r1, #296]	; 0x128
 a64:	orr	r0, r2, r0
 a68:	str	r0, [r1, #296]	; 0x128
 a6c:	ldr	r0, [fp, #-16]
 a70:	ldr	r0, [r0, #436]	; 0x1b4
 a74:	add	r0, r0, #260	; 0x104
 a78:	ldr	r1, [fp, #8]
 a7c:	ldr	r1, [r1, #16]
 a80:	movw	r2, #10
 a84:	bl	624 <rb_strlcpy@plt>
 a88:	str	r0, [fp, #-84]	; 0xffffffac
 a8c:	b	a90 <mr_pass+0x330>
 a90:	b	a94 <mr_pass+0x334>
 a94:	sub	sp, fp, #8
 a98:	pop	{r4, r5, fp, pc}
 a9c:	.word	0x0000023d
 aa0:	.word	0x10000000
 aa4:	.word	0x000106e8
 aa8:	.word	0x00010010
 aac:	.word	0x000106a8
 ab0:	.word	0x00010668
 ab4:	.word	0x000105e4
 ab8:	.word	0x000106d0
 abc:	.word	0x00010690
 ac0:	.word	0x00010650

00000ac4 <rb_strndup>:
 ac4:	push	{fp, lr}
 ac8:	mov	fp, sp
 acc:	sub	sp, sp, #16
 ad0:	str	r0, [fp, #-4]
 ad4:	str	r1, [sp, #8]
 ad8:	ldr	r0, [sp, #8]
 adc:	bl	5e8 <malloc@plt>
 ae0:	str	r0, [sp, #4]
 ae4:	ldr	r0, [sp, #4]
 ae8:	movw	r1, #0
 aec:	cmp	r0, r1
 af0:	movw	r0, #0
 af4:	moveq	r0, #1
 af8:	mvn	r1, #0
 afc:	eor	r0, r0, r1
 b00:	eor	r0, r0, r1
 b04:	tst	r0, #1
 b08:	beq	b10 <rb_strndup+0x4c>
 b0c:	bl	5d0 <rb_outofmemory@plt>
 b10:	ldr	r0, [sp, #4]
 b14:	ldr	r1, [fp, #-4]
 b18:	ldr	r2, [sp, #8]
 b1c:	bl	624 <rb_strlcpy@plt>
 b20:	ldr	r1, [sp, #4]
 b24:	str	r0, [sp]
 b28:	mov	r0, r1
 b2c:	mov	sp, fp
 b30:	pop	{fp, pc}

Disassembly of section .fini:

00000b34 <_fini>:
 b34:	push	{r3, lr}
 b38:	pop	{r3, pc}
