
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

000005a4 <_init>:
 5a4:	push	{r3, lr}
 5a8:	bl	63c <call_weak_fn>
 5ac:	pop	{r3, pc}

Disassembly of section .plt:

000005b0 <.plt>:
 5b0:	push	{lr}		; (str lr, [sp, #-4]!)
 5b4:	ldr	lr, [pc, #4]	; 5c0 <.plt+0x10>
 5b8:	add	lr, pc, lr
 5bc:	ldr	pc, [lr, #8]!
 5c0:	.word	0x00010a40

000005c4 <__cxa_finalize@plt>:
 5c4:	add	ip, pc, #0, 12
 5c8:	add	ip, ip, #16, 20	; 0x10000
 5cc:	ldr	pc, [ip, #2624]!	; 0xa40

000005d0 <rb_outofmemory@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #16, 20	; 0x10000
 5d8:	ldr	pc, [ip, #2616]!	; 0xa38

000005dc <strcpy@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #16, 20	; 0x10000
 5e4:	ldr	pc, [ip, #2608]!	; 0xa30

000005e8 <malloc@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #16, 20	; 0x10000
 5f0:	ldr	pc, [ip, #2600]!	; 0xa28

000005f4 <__gmon_start__@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #16, 20	; 0x10000
 5fc:	ldr	pc, [ip, #2592]!	; 0xa20

00000600 <strlen@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #16, 20	; 0x10000
 608:	ldr	pc, [ip, #2584]!	; 0xa18

0000060c <strchr@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #16, 20	; 0x10000
 614:	ldr	pc, [ip, #2576]!	; 0xa10

00000618 <atoi@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2568]!	; 0xa08

00000624 <rb_strlcpy@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2560]!	; 0xa00

00000630 <irccmp@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2552]!	; 0x9f8

Disassembly of section .text:

0000063c <call_weak_fn>:
 63c:	ldr	r3, [pc, #20]	; 658 <call_weak_fn+0x1c>
 640:	ldr	r2, [pc, #20]	; 65c <call_weak_fn+0x20>
 644:	add	r3, pc, r3
 648:	ldr	r2, [r3, r2]
 64c:	cmp	r2, #0
 650:	bxeq	lr
 654:	b	5f4 <__gmon_start__@plt>
 658:	.word	0x000109b4
 65c:	.word	0x00000040

00000660 <deregister_tm_clones>:
 660:	ldr	r0, [pc, #44]	; 694 <deregister_tm_clones+0x34>
 664:	ldr	r3, [pc, #44]	; 698 <deregister_tm_clones+0x38>
 668:	add	r0, pc, r0
 66c:	add	r3, pc, r3
 670:	cmp	r3, r0
 674:	ldr	r3, [pc, #32]	; 69c <deregister_tm_clones+0x3c>
 678:	add	r3, pc, r3
 67c:	bxeq	lr
 680:	ldr	r2, [pc, #24]	; 6a0 <deregister_tm_clones+0x40>
 684:	ldr	r3, [r3, r2]
 688:	cmp	r3, #0
 68c:	bxeq	lr
 690:	bx	r3
 694:	.word	0x00010a54
 698:	.word	0x00010a50
 69c:	.word	0x00010980
 6a0:	.word	0x00000038

000006a4 <register_tm_clones>:
 6a4:	ldr	r0, [pc, #56]	; 6e4 <register_tm_clones+0x40>
 6a8:	ldr	r3, [pc, #56]	; 6e8 <register_tm_clones+0x44>
 6ac:	add	r0, pc, r0
 6b0:	add	r3, pc, r3
 6b4:	sub	r1, r3, r0
 6b8:	ldr	r3, [pc, #44]	; 6ec <register_tm_clones+0x48>
 6bc:	asr	r1, r1, #2
 6c0:	add	r3, pc, r3
 6c4:	add	r1, r1, r1, lsr #31
 6c8:	asrs	r1, r1, #1
 6cc:	bxeq	lr
 6d0:	ldr	r2, [pc, #24]	; 6f0 <register_tm_clones+0x4c>
 6d4:	ldr	r3, [r3, r2]
 6d8:	cmp	r3, #0
 6dc:	bxeq	lr
 6e0:	bx	r3
 6e4:	.word	0x00010a10
 6e8:	.word	0x00010a0c
 6ec:	.word	0x00010938
 6f0:	.word	0x00000048

000006f4 <__do_global_dtors_aux>:
 6f4:	ldr	r3, [pc, #76]	; 748 <__do_global_dtors_aux+0x54>
 6f8:	ldr	r2, [pc, #76]	; 74c <__do_global_dtors_aux+0x58>
 6fc:	add	r3, pc, r3
 700:	add	r2, pc, r2
 704:	ldrb	r3, [r3]
 708:	cmp	r3, #0
 70c:	bxne	lr
 710:	ldr	r3, [pc, #56]	; 750 <__do_global_dtors_aux+0x5c>
 714:	push	{r4, lr}
 718:	ldr	r3, [r2, r3]
 71c:	cmp	r3, #0
 720:	beq	730 <__do_global_dtors_aux+0x3c>
 724:	ldr	r3, [pc, #40]	; 754 <__do_global_dtors_aux+0x60>
 728:	ldr	r0, [pc, r3]
 72c:	bl	5c4 <__cxa_finalize@plt>
 730:	bl	660 <deregister_tm_clones>
 734:	ldr	r3, [pc, #28]	; 758 <__do_global_dtors_aux+0x64>
 738:	mov	r2, #1
 73c:	add	r3, pc, r3
 740:	strb	r2, [r3]
 744:	pop	{r4, pc}
 748:	.word	0x000109c0
 74c:	.word	0x000108f8
 750:	.word	0x00000034
 754:	.word	0x0001091c
 758:	.word	0x00010980

0000075c <frame_dummy>:
 75c:	b	6a4 <register_tm_clones>

00000760 <mr_pass>:
 760:	push	{r4, r5, fp, lr}
 764:	add	fp, sp, #8
 768:	sub	sp, sp, #48	; 0x30
 76c:	ldr	ip, [fp, #8]
 770:	str	r0, [fp, #-12]
 774:	str	r1, [fp, #-16]
 778:	str	r2, [fp, #-20]	; 0xffffffec
 77c:	str	r3, [fp, #-24]	; 0xffffffe8
 780:	ldr	r0, [fp, #8]
 784:	ldr	r0, [r0, #4]
 788:	str	ip, [fp, #-48]	; 0xffffffd0
 78c:	bl	600 <strlen@plt>
 790:	add	r0, r0, #8
 794:	bic	r0, r0, #7
 798:	mov	r1, sp
 79c:	sub	r0, r1, r0
 7a0:	mov	sp, r0
 7a4:	str	r0, [fp, #-40]	; 0xffffffd8
 7a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
 7ac:	ldr	r1, [fp, #8]
 7b0:	ldr	r1, [r1, #4]
 7b4:	bl	5dc <strcpy@plt>
 7b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
 7bc:	str	r1, [fp, #-44]	; 0xffffffd4
 7c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
 7c4:	str	r1, [fp, #-36]	; 0xffffffdc
 7c8:	ldr	r1, [fp, #-16]
 7cc:	ldr	r1, [r1, #432]	; 0x1b0
 7d0:	ldr	r1, [r1, #276]	; 0x114
 7d4:	movw	r2, #0
 7d8:	cmp	r1, r2
 7dc:	bne	7f8 <mr_pass+0x98>
 7e0:	ldr	r0, [fp, #-16]
 7e4:	ldr	r0, [r0, #432]	; 0x1b0
 7e8:	ldr	r0, [r0, #280]	; 0x118
 7ec:	movw	r1, #0
 7f0:	cmp	r0, r1
 7f4:	beq	7fc <mr_pass+0x9c>
 7f8:	b	a74 <mr_pass+0x314>
 7fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
 800:	movw	r1, #58	; 0x3a
 804:	bl	60c <strchr@plt>
 808:	str	r0, [fp, #-32]	; 0xffffffe0
 80c:	movw	r1, #0
 810:	cmp	r0, r1
 814:	beq	838 <mr_pass+0xd8>
 818:	ldr	r0, [fp, #-32]	; 0xffffffe0
 81c:	add	r1, r0, #1
 820:	str	r1, [fp, #-32]	; 0xffffffe0
 824:	movw	r1, #0
 828:	strb	r1, [r0]
 82c:	ldr	r0, [fp, #-36]	; 0xffffffdc
 830:	str	r0, [fp, #-28]	; 0xffffffe4
 834:	b	848 <mr_pass+0xe8>
 838:	ldr	r0, [fp, #-36]	; 0xffffffdc
 83c:	str	r0, [fp, #-32]	; 0xffffffe0
 840:	movw	r0, #0
 844:	str	r0, [fp, #-28]	; 0xffffffe4
 848:	ldr	r0, [fp, #-32]	; 0xffffffe0
 84c:	ldrb	r0, [r0]
 850:	cmp	r0, #0
 854:	beq	86c <mr_pass+0x10c>
 858:	ldr	r0, [fp, #-32]	; 0xffffffe0
 85c:	movw	r1, #128	; 0x80
 860:	bl	aa4 <rb_strndup>
 864:	str	r0, [fp, #-52]	; 0xffffffcc
 868:	b	878 <mr_pass+0x118>
 86c:	movw	r0, #0
 870:	str	r0, [fp, #-52]	; 0xffffffcc
 874:	b	878 <mr_pass+0x118>
 878:	ldr	r0, [fp, #-52]	; 0xffffffcc
 87c:	ldr	r1, [fp, #-16]
 880:	ldr	r1, [r1, #432]	; 0x1b0
 884:	str	r0, [r1, #276]	; 0x114
 888:	ldr	r0, [fp, #-28]	; 0xffffffe4
 88c:	movw	r1, #0
 890:	cmp	r0, r1
 894:	beq	8c0 <mr_pass+0x160>
 898:	ldr	r0, [fp, #-28]	; 0xffffffe4
 89c:	ldrb	r0, [r0]
 8a0:	cmp	r0, #0
 8a4:	beq	8c0 <mr_pass+0x160>
 8a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
 8ac:	movw	r1, #128	; 0x80
 8b0:	bl	aa4 <rb_strndup>
 8b4:	ldr	r1, [fp, #-16]
 8b8:	ldr	r1, [r1, #432]	; 0x1b0
 8bc:	str	r0, [r1, #280]	; 0x118
 8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8c4:	cmp	r0, #2
 8c8:	ble	a74 <mr_pass+0x314>
 8cc:	ldr	r0, [fp, #-16]
 8d0:	ldr	r0, [r0, #24]
 8d4:	movw	r1, #0
 8d8:	cmp	r0, r1
 8dc:	bne	a74 <mr_pass+0x314>
 8e0:	ldr	r0, [fp, #-16]
 8e4:	ldr	r0, [r0, #436]	; 0x1b4
 8e8:	movw	r1, #0
 8ec:	cmp	r0, r1
 8f0:	beq	a74 <mr_pass+0x314>
 8f4:	ldr	r0, [pc, #384]	; a7c <mr_pass+0x31c>
 8f8:	add	r1, pc, r0
 8fc:	ldr	r0, [fp, #8]
 900:	ldr	r0, [r0, #8]
 904:	bl	630 <irccmp@plt>
 908:	cmp	r0, #0
 90c:	bne	92c <mr_pass+0x1cc>
 910:	ldr	r0, [fp, #-16]
 914:	ldr	r0, [r0, #52]	; 0x34
 918:	cmp	r0, #0
 91c:	bne	92c <mr_pass+0x1cc>
 920:	ldr	r0, [pc, #344]	; a80 <mr_pass+0x320>
 924:	ldr	r1, [fp, #-16]
 928:	str	r0, [r1, #52]	; 0x34
 92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 930:	cmp	r0, #5
 934:	bne	a70 <mr_pass+0x310>
 938:	ldr	r0, [fp, #8]
 93c:	ldr	r0, [r0, #12]
 940:	bl	618 <atoi@plt>
 944:	cmp	r0, #6
 948:	blt	a70 <mr_pass+0x310>
 94c:	ldr	r0, [pc, #304]	; a84 <mr_pass+0x324>
 950:	ldr	r0, [pc, r0]
 954:	ldr	r1, [fp, #8]
 958:	ldr	r1, [r1, #16]
 95c:	ldrb	r1, [r1]
 960:	mov	r2, r1
 964:	ldr	r3, [pc, #300]	; a98 <mr_pass+0x338>
 968:	ldr	r3, [pc, r3]
 96c:	add	r1, r3, r1, lsl #2
 970:	ldr	r1, [r1]
 974:	and	r1, r1, #16
 978:	cmp	r1, #0
 97c:	beq	a6c <mr_pass+0x30c>
 980:	ldr	r0, [pc, #256]	; a88 <mr_pass+0x328>
 984:	ldr	r1, [pc, #256]	; a8c <mr_pass+0x32c>
 988:	ldr	r1, [pc, r1]
 98c:	ldr	r2, [fp, #8]
 990:	ldr	r2, [r2, #16]
 994:	ldrb	r2, [r2, #1]
 998:	mov	r3, r2
 99c:	ldr	ip, [pc, #248]	; a9c <mr_pass+0x33c>
 9a0:	ldr	ip, [pc, ip]
 9a4:	add	r2, ip, r2, lsl #2
 9a8:	ldr	r2, [r2]
 9ac:	and	r0, r2, r0
 9b0:	cmp	r0, #0
 9b4:	beq	a6c <mr_pass+0x30c>
 9b8:	ldr	r0, [pc, #200]	; a88 <mr_pass+0x328>
 9bc:	ldr	r1, [pc, #204]	; a90 <mr_pass+0x330>
 9c0:	ldr	r1, [pc, r1]
 9c4:	ldr	r2, [fp, #8]
 9c8:	ldr	r2, [r2, #16]
 9cc:	ldrb	r2, [r2, #2]
 9d0:	mov	r3, r2
 9d4:	ldr	ip, [pc, #196]	; aa0 <mr_pass+0x340>
 9d8:	ldr	ip, [pc, ip]
 9dc:	add	r2, ip, r2, lsl #2
 9e0:	ldr	r2, [r2]
 9e4:	and	r0, r2, r0
 9e8:	cmp	r0, #0
 9ec:	beq	a6c <mr_pass+0x30c>
 9f0:	ldr	r0, [fp, #8]
 9f4:	ldr	r0, [r0, #16]
 9f8:	ldrb	r0, [r0, #3]
 9fc:	cmp	r0, #0
 a00:	bne	a6c <mr_pass+0x30c>
 a04:	ldr	r0, [fp, #-16]
 a08:	ldr	r0, [r0, #436]	; 0x1b4
 a0c:	add	r0, r0, #260	; 0x104
 a10:	movw	r1, #0
 a14:	cmp	r0, r1
 a18:	beq	a30 <mr_pass+0x2d0>
 a1c:	ldr	r0, [fp, #-16]
 a20:	ldr	r0, [r0, #436]	; 0x1b4
 a24:	ldrb	r0, [r0, #260]	; 0x104
 a28:	cmp	r0, #0
 a2c:	bne	a6c <mr_pass+0x30c>
 a30:	ldr	r0, [pc, #92]	; a94 <mr_pass+0x334>
 a34:	ldr	r0, [pc, r0]
 a38:	ldr	r0, [r0]
 a3c:	ldr	r1, [fp, #-16]
 a40:	ldr	r1, [r1, #432]	; 0x1b0
 a44:	ldr	r2, [r1, #296]	; 0x128
 a48:	orr	r0, r2, r0
 a4c:	str	r0, [r1, #296]	; 0x128
 a50:	ldr	r0, [fp, #-16]
 a54:	ldr	r0, [r0, #436]	; 0x1b4
 a58:	add	r0, r0, #260	; 0x104
 a5c:	ldr	r1, [fp, #8]
 a60:	ldr	r1, [r1, #16]
 a64:	movw	r2, #10
 a68:	bl	624 <rb_strlcpy@plt>
 a6c:	b	a70 <mr_pass+0x310>
 a70:	b	a74 <mr_pass+0x314>
 a74:	sub	sp, fp, #8
 a78:	pop	{r4, r5, fp, pc}
 a7c:	.word	0x00000221
 a80:	.word	0x10000000
 a84:	.word	0x000106ec
 a88:	.word	0x00010010
 a8c:	.word	0x000106b4
 a90:	.word	0x0001067c
 a94:	.word	0x00010600
 a98:	.word	0x000106d4
 a9c:	.word	0x0001069c
 aa0:	.word	0x00010664

00000aa4 <rb_strndup>:
 aa4:	push	{fp, lr}
 aa8:	mov	fp, sp
 aac:	sub	sp, sp, #16
 ab0:	str	r0, [fp, #-4]
 ab4:	str	r1, [sp, #8]
 ab8:	ldr	r0, [sp, #8]
 abc:	bl	5e8 <malloc@plt>
 ac0:	str	r0, [sp, #4]
 ac4:	ldr	r0, [sp, #4]
 ac8:	movw	r1, #0
 acc:	cmp	r0, r1
 ad0:	movw	r0, #0
 ad4:	moveq	r0, #1
 ad8:	mvn	r1, #0
 adc:	eor	r0, r0, r1
 ae0:	eor	r0, r0, r1
 ae4:	tst	r0, #1
 ae8:	beq	af0 <rb_strndup+0x4c>
 aec:	bl	5d0 <rb_outofmemory@plt>
 af0:	ldr	r0, [sp, #4]
 af4:	ldr	r1, [fp, #-4]
 af8:	ldr	r2, [sp, #8]
 afc:	bl	624 <rb_strlcpy@plt>
 b00:	ldr	r1, [sp, #4]
 b04:	str	r0, [sp]
 b08:	mov	r0, r1
 b0c:	mov	sp, fp
 b10:	pop	{fp, pc}

Disassembly of section .fini:

00000b14 <_fini>:
 b14:	push	{r3, lr}
 b18:	pop	{r3, pc}
