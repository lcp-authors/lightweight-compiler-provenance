
../repos/coreutils/src/cut:     file format elf32-littlearm


Disassembly of section .init:

00011008 <.init>:
   11008:	push	{r3, lr}
   1100c:	bl	11328 <__assert_fail@plt+0x48>
   11010:	pop	{r3, pc}

Disassembly of section .plt:

00011014 <calloc@plt-0x14>:
   11014:	push	{lr}		; (str lr, [sp, #-4]!)
   11018:	ldr	lr, [pc, #4]	; 11024 <calloc@plt-0x4>
   1101c:	add	lr, pc, lr
   11020:	ldr	pc, [lr, #8]!
   11024:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>

00011028 <calloc@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #4060]!	; 0xfdc

00011034 <fputs_unlocked@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #28, 20	; 0x1c000
   1103c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011040 <raise@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #28, 20	; 0x1c000
   11048:	ldr	pc, [ip, #4044]!	; 0xfcc

0001104c <strcmp@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #28, 20	; 0x1c000
   11054:	ldr	pc, [ip, #4036]!	; 0xfc4

00011058 <posix_fadvise64@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #28, 20	; 0x1c000
   11060:	ldr	pc, [ip, #4028]!	; 0xfbc

00011064 <printf@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #28, 20	; 0x1c000
   1106c:	ldr	pc, [ip, #4020]!	; 0xfb4

00011070 <fflush@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #28, 20	; 0x1c000
   11078:	ldr	pc, [ip, #4012]!	; 0xfac

0001107c <memmove@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #28, 20	; 0x1c000
   11084:	ldr	pc, [ip, #4004]!	; 0xfa4

00011088 <free@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #28, 20	; 0x1c000
   11090:	ldr	pc, [ip, #3996]!	; 0xf9c

00011094 <ferror@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #28, 20	; 0x1c000
   1109c:	ldr	pc, [ip, #3988]!	; 0xf94

000110a0 <_exit@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #28, 20	; 0x1c000
   110a8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110ac <memcpy@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #28, 20	; 0x1c000
   110b4:	ldr	pc, [ip, #3972]!	; 0xf84

000110b8 <mbsinit@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #28, 20	; 0x1c000
   110c0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110c4 <fwrite_unlocked@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #28, 20	; 0x1c000
   110cc:	ldr	pc, [ip, #3956]!	; 0xf74

000110d0 <memcmp@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #28, 20	; 0x1c000
   110d8:	ldr	pc, [ip, #3948]!	; 0xf6c

000110dc <getc_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #28, 20	; 0x1c000
   110e4:	ldr	pc, [ip, #3940]!	; 0xf64

000110e8 <realloc@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #28, 20	; 0x1c000
   110f0:	ldr	pc, [ip, #3932]!	; 0xf5c

000110f4 <textdomain@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #28, 20	; 0x1c000
   110fc:	ldr	pc, [ip, #3924]!	; 0xf54

00011100 <iswprint@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #28, 20	; 0x1c000
   11108:	ldr	pc, [ip, #3916]!	; 0xf4c

0001110c <lseek64@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #28, 20	; 0x1c000
   11114:	ldr	pc, [ip, #3908]!	; 0xf44

00011118 <__ctype_get_mb_cur_max@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #28, 20	; 0x1c000
   11120:	ldr	pc, [ip, #3900]!	; 0xf3c

00011124 <fread@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #28, 20	; 0x1c000
   1112c:	ldr	pc, [ip, #3892]!	; 0xf34

00011130 <__fpending@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #28, 20	; 0x1c000
   11138:	ldr	pc, [ip, #3884]!	; 0xf2c

0001113c <ferror_unlocked@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #28, 20	; 0x1c000
   11144:	ldr	pc, [ip, #3876]!	; 0xf24

00011148 <mbrtowc@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #28, 20	; 0x1c000
   11150:	ldr	pc, [ip, #3868]!	; 0xf1c

00011154 <error@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #28, 20	; 0x1c000
   1115c:	ldr	pc, [ip, #3860]!	; 0xf14

00011160 <malloc@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #28, 20	; 0x1c000
   11168:	ldr	pc, [ip, #3852]!	; 0xf0c

0001116c <__libc_start_main@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #28, 20	; 0x1c000
   11174:	ldr	pc, [ip, #3844]!	; 0xf04

00011178 <__freading@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #28, 20	; 0x1c000
   11180:	ldr	pc, [ip, #3836]!	; 0xefc

00011184 <__gmon_start__@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #28, 20	; 0x1c000
   1118c:	ldr	pc, [ip, #3828]!	; 0xef4

00011190 <getopt_long@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #28, 20	; 0x1c000
   11198:	ldr	pc, [ip, #3820]!	; 0xeec

0001119c <__ctype_b_loc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #28, 20	; 0x1c000
   111a4:	ldr	pc, [ip, #3812]!	; 0xee4

000111a8 <exit@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #28, 20	; 0x1c000
   111b0:	ldr	pc, [ip, #3804]!	; 0xedc

000111b4 <gettext@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #28, 20	; 0x1c000
   111bc:	ldr	pc, [ip, #3796]!	; 0xed4

000111c0 <strlen@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #28, 20	; 0x1c000
   111c8:	ldr	pc, [ip, #3788]!	; 0xecc

000111cc <fprintf@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #28, 20	; 0x1c000
   111d4:	ldr	pc, [ip, #3780]!	; 0xec4

000111d8 <ungetc@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #28, 20	; 0x1c000
   111e0:	ldr	pc, [ip, #3772]!	; 0xebc

000111e4 <__errno_location@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #28, 20	; 0x1c000
   111ec:	ldr	pc, [ip, #3764]!	; 0xeb4

000111f0 <__cxa_atexit@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #28, 20	; 0x1c000
   111f8:	ldr	pc, [ip, #3756]!	; 0xeac

000111fc <memset@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #28, 20	; 0x1c000
   11204:	ldr	pc, [ip, #3748]!	; 0xea4

00011208 <fgetc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #28, 20	; 0x1c000
   11210:	ldr	pc, [ip, #3740]!	; 0xe9c

00011214 <fileno@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #28, 20	; 0x1c000
   1121c:	ldr	pc, [ip, #3732]!	; 0xe94

00011220 <memchr@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #28, 20	; 0x1c000
   11228:	ldr	pc, [ip, #3724]!	; 0xe8c

0001122c <fclose@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #28, 20	; 0x1c000
   11234:	ldr	pc, [ip, #3716]!	; 0xe84

00011238 <fseeko64@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #28, 20	; 0x1c000
   11240:	ldr	pc, [ip, #3708]!	; 0xe7c

00011244 <setlocale@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #28, 20	; 0x1c000
   1124c:	ldr	pc, [ip, #3700]!	; 0xe74

00011250 <strrchr@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #28, 20	; 0x1c000
   11258:	ldr	pc, [ip, #3692]!	; 0xe6c

0001125c <nl_langinfo@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #28, 20	; 0x1c000
   11264:	ldr	pc, [ip, #3684]!	; 0xe64

00011268 <clearerr_unlocked@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #28, 20	; 0x1c000
   11270:	ldr	pc, [ip, #3676]!	; 0xe5c

00011274 <fopen64@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #28, 20	; 0x1c000
   1127c:	ldr	pc, [ip, #3668]!	; 0xe54

00011280 <qsort@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #28, 20	; 0x1c000
   11288:	ldr	pc, [ip, #3660]!	; 0xe4c

0001128c <bindtextdomain@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #28, 20	; 0x1c000
   11294:	ldr	pc, [ip, #3652]!	; 0xe44

00011298 <fputs@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #28, 20	; 0x1c000
   112a0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112a4 <strncmp@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #28, 20	; 0x1c000
   112ac:	ldr	pc, [ip, #3636]!	; 0xe34

000112b0 <abort@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #28, 20	; 0x1c000
   112b8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112bc <feof_unlocked@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #28, 20	; 0x1c000
   112c4:	ldr	pc, [ip, #3620]!	; 0xe24

000112c8 <putchar_unlocked@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #28, 20	; 0x1c000
   112d0:	ldr	pc, [ip, #3612]!	; 0xe1c

000112d4 <strspn@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #28, 20	; 0x1c000
   112dc:	ldr	pc, [ip, #3604]!	; 0xe14

000112e0 <__assert_fail@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #28, 20	; 0x1c000
   112e8:	ldr	pc, [ip, #3596]!	; 0xe0c

Disassembly of section .text:

000112ec <.text>:
   112ec:	mov	fp, #0
   112f0:	mov	lr, #0
   112f4:	pop	{r1}		; (ldr r1, [sp], #4)
   112f8:	mov	r2, sp
   112fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11300:	push	{r0}		; (str r0, [sp, #-4]!)
   11304:	ldr	ip, [pc, #16]	; 1131c <__assert_fail@plt+0x3c>
   11308:	push	{ip}		; (str ip, [sp, #-4]!)
   1130c:	ldr	r0, [pc, #12]	; 11320 <__assert_fail@plt+0x40>
   11310:	ldr	r3, [pc, #12]	; 11324 <__assert_fail@plt+0x44>
   11314:	bl	1116c <__libc_start_main@plt>
   11318:	bl	112b0 <abort@plt>
   1131c:	strdeq	ip, [r1], -r8
   11320:	andeq	r1, r1, r4, lsl #16
   11324:	muleq	r1, r8, r8
   11328:	ldr	r3, [pc, #20]	; 11344 <__assert_fail@plt+0x64>
   1132c:	ldr	r2, [pc, #20]	; 11348 <__assert_fail@plt+0x68>
   11330:	add	r3, pc, r3
   11334:	ldr	r2, [r3, r2]
   11338:	cmp	r2, #0
   1133c:	bxeq	lr
   11340:	b	11184 <__gmon_start__@plt>
   11344:	andeq	ip, r1, r8, asr #25
   11348:	strdeq	r0, [r0], -r8
   1134c:	ldr	r0, [pc, #24]	; 1136c <__assert_fail@plt+0x8c>
   11350:	ldr	r3, [pc, #24]	; 11370 <__assert_fail@plt+0x90>
   11354:	cmp	r3, r0
   11358:	bxeq	lr
   1135c:	ldr	r3, [pc, #16]	; 11374 <__assert_fail@plt+0x94>
   11360:	cmp	r3, #0
   11364:	bxeq	lr
   11368:	bx	r3
   1136c:	andeq	lr, r2, r0, asr r1
   11370:	andeq	lr, r2, r0, asr r1
   11374:	andeq	r0, r0, r0
   11378:	ldr	r0, [pc, #36]	; 113a4 <__assert_fail@plt+0xc4>
   1137c:	ldr	r1, [pc, #36]	; 113a8 <__assert_fail@plt+0xc8>
   11380:	sub	r1, r1, r0
   11384:	asr	r1, r1, #2
   11388:	add	r1, r1, r1, lsr #31
   1138c:	asrs	r1, r1, #1
   11390:	bxeq	lr
   11394:	ldr	r3, [pc, #16]	; 113ac <__assert_fail@plt+0xcc>
   11398:	cmp	r3, #0
   1139c:	bxeq	lr
   113a0:	bx	r3
   113a4:	andeq	lr, r2, r0, asr r1
   113a8:	andeq	lr, r2, r0, asr r1
   113ac:	andeq	r0, r0, r0
   113b0:	push	{r4, lr}
   113b4:	ldr	r4, [pc, #24]	; 113d4 <__assert_fail@plt+0xf4>
   113b8:	ldrb	r3, [r4]
   113bc:	cmp	r3, #0
   113c0:	popne	{r4, pc}
   113c4:	bl	1134c <__assert_fail@plt+0x6c>
   113c8:	mov	r3, #1
   113cc:	strb	r3, [r4]
   113d0:	pop	{r4, pc}
   113d4:	andeq	lr, r2, r4, ror r1
   113d8:	b	11378 <__assert_fail@plt+0x98>
   113dc:	push	{fp, lr}
   113e0:	mov	fp, sp
   113e4:	sub	sp, sp, #64	; 0x40
   113e8:	str	r0, [fp, #-4]
   113ec:	ldr	r0, [fp, #-4]
   113f0:	cmp	r0, #0
   113f4:	beq	11444 <__assert_fail@plt+0x164>
   113f8:	b	113fc <__assert_fail@plt+0x11c>
   113fc:	movw	r0, #57696	; 0xe160
   11400:	movt	r0, #2
   11404:	ldr	r0, [r0]
   11408:	movw	r1, #51488	; 0xc920
   1140c:	movt	r1, #1
   11410:	str	r0, [fp, #-8]
   11414:	mov	r0, r1
   11418:	bl	111b4 <gettext@plt>
   1141c:	movw	r1, #57764	; 0xe1a4
   11420:	movt	r1, #2
   11424:	ldr	r2, [r1]
   11428:	ldr	r1, [fp, #-8]
   1142c:	str	r0, [fp, #-12]
   11430:	mov	r0, r1
   11434:	ldr	r1, [fp, #-12]
   11438:	bl	111cc <fprintf@plt>
   1143c:	str	r0, [fp, #-16]
   11440:	b	115e0 <__assert_fail@plt+0x300>
   11444:	movw	r0, #51527	; 0xc947
   11448:	movt	r0, #1
   1144c:	bl	111b4 <gettext@plt>
   11450:	movw	lr, #57764	; 0xe1a4
   11454:	movt	lr, #2
   11458:	ldr	r1, [lr]
   1145c:	bl	11064 <printf@plt>
   11460:	movw	r1, #51558	; 0xc966
   11464:	movt	r1, #1
   11468:	str	r0, [fp, #-20]	; 0xffffffec
   1146c:	mov	r0, r1
   11470:	bl	111b4 <gettext@plt>
   11474:	movw	r1, #57708	; 0xe16c
   11478:	movt	r1, #2
   1147c:	ldr	r1, [r1]
   11480:	bl	11034 <fputs_unlocked@plt>
   11484:	str	r0, [fp, #-24]	; 0xffffffe8
   11488:	bl	115e8 <__assert_fail@plt+0x308>
   1148c:	bl	1161c <__assert_fail@plt+0x33c>
   11490:	movw	r0, #51624	; 0xc9a8
   11494:	movt	r0, #1
   11498:	bl	111b4 <gettext@plt>
   1149c:	movw	r1, #57708	; 0xe16c
   114a0:	movt	r1, #2
   114a4:	ldr	r1, [r1]
   114a8:	bl	11034 <fputs_unlocked@plt>
   114ac:	movw	r1, #51801	; 0xca59
   114b0:	movt	r1, #1
   114b4:	str	r0, [fp, #-28]	; 0xffffffe4
   114b8:	mov	r0, r1
   114bc:	bl	111b4 <gettext@plt>
   114c0:	movw	r1, #57708	; 0xe16c
   114c4:	movt	r1, #2
   114c8:	ldr	r1, [r1]
   114cc:	bl	11034 <fputs_unlocked@plt>
   114d0:	movw	r1, #52039	; 0xcb47
   114d4:	movt	r1, #1
   114d8:	str	r0, [sp, #32]
   114dc:	mov	r0, r1
   114e0:	bl	111b4 <gettext@plt>
   114e4:	movw	r1, #57708	; 0xe16c
   114e8:	movt	r1, #2
   114ec:	ldr	r1, [r1]
   114f0:	bl	11034 <fputs_unlocked@plt>
   114f4:	movw	r1, #52153	; 0xcbb9
   114f8:	movt	r1, #1
   114fc:	str	r0, [sp, #28]
   11500:	mov	r0, r1
   11504:	bl	111b4 <gettext@plt>
   11508:	movw	r1, #57708	; 0xe16c
   1150c:	movt	r1, #2
   11510:	ldr	r1, [r1]
   11514:	bl	11034 <fputs_unlocked@plt>
   11518:	movw	r1, #52363	; 0xcc8b
   1151c:	movt	r1, #1
   11520:	str	r0, [sp, #24]
   11524:	mov	r0, r1
   11528:	bl	111b4 <gettext@plt>
   1152c:	movw	r1, #57708	; 0xe16c
   11530:	movt	r1, #2
   11534:	ldr	r1, [r1]
   11538:	bl	11034 <fputs_unlocked@plt>
   1153c:	movw	r1, #52426	; 0xccca
   11540:	movt	r1, #1
   11544:	str	r0, [sp, #20]
   11548:	mov	r0, r1
   1154c:	bl	111b4 <gettext@plt>
   11550:	movw	r1, #57708	; 0xe16c
   11554:	movt	r1, #2
   11558:	ldr	r1, [r1]
   1155c:	bl	11034 <fputs_unlocked@plt>
   11560:	movw	r1, #52471	; 0xccf7
   11564:	movt	r1, #1
   11568:	str	r0, [sp, #16]
   1156c:	mov	r0, r1
   11570:	bl	111b4 <gettext@plt>
   11574:	movw	r1, #57708	; 0xe16c
   11578:	movt	r1, #2
   1157c:	ldr	r1, [r1]
   11580:	bl	11034 <fputs_unlocked@plt>
   11584:	movw	r1, #52525	; 0xcd2d
   11588:	movt	r1, #1
   1158c:	str	r0, [sp, #12]
   11590:	mov	r0, r1
   11594:	bl	111b4 <gettext@plt>
   11598:	movw	r1, #57708	; 0xe16c
   1159c:	movt	r1, #2
   115a0:	ldr	r1, [r1]
   115a4:	bl	11034 <fputs_unlocked@plt>
   115a8:	movw	r1, #52729	; 0xcdf9
   115ac:	movt	r1, #1
   115b0:	str	r0, [sp, #8]
   115b4:	mov	r0, r1
   115b8:	bl	111b4 <gettext@plt>
   115bc:	movw	r1, #57708	; 0xe16c
   115c0:	movt	r1, #2
   115c4:	ldr	r1, [r1]
   115c8:	bl	11034 <fputs_unlocked@plt>
   115cc:	movw	r1, #52991	; 0xceff
   115d0:	movt	r1, #1
   115d4:	str	r0, [sp, #4]
   115d8:	mov	r0, r1
   115dc:	bl	11650 <__assert_fail@plt+0x370>
   115e0:	ldr	r0, [fp, #-4]
   115e4:	bl	111a8 <exit@plt>
   115e8:	push	{fp, lr}
   115ec:	mov	fp, sp
   115f0:	sub	sp, sp, #8
   115f4:	movw	r0, #53358	; 0xd06e
   115f8:	movt	r0, #1
   115fc:	bl	111b4 <gettext@plt>
   11600:	movw	lr, #57708	; 0xe16c
   11604:	movt	lr, #2
   11608:	ldr	r1, [lr]
   1160c:	bl	11034 <fputs_unlocked@plt>
   11610:	str	r0, [sp, #4]
   11614:	mov	sp, fp
   11618:	pop	{fp, pc}
   1161c:	push	{fp, lr}
   11620:	mov	fp, sp
   11624:	sub	sp, sp, #8
   11628:	movw	r0, #53414	; 0xd0a6
   1162c:	movt	r0, #1
   11630:	bl	111b4 <gettext@plt>
   11634:	movw	lr, #57708	; 0xe16c
   11638:	movt	lr, #2
   1163c:	ldr	r1, [lr]
   11640:	bl	11034 <fputs_unlocked@plt>
   11644:	str	r0, [sp, #4]
   11648:	mov	sp, fp
   1164c:	pop	{fp, pc}
   11650:	push	{fp, lr}
   11654:	mov	fp, sp
   11658:	sub	sp, sp, #96	; 0x60
   1165c:	add	r1, sp, #36	; 0x24
   11660:	movw	r2, #54112	; 0xd360
   11664:	movt	r2, #1
   11668:	str	r0, [fp, #-4]
   1166c:	mov	r0, r1
   11670:	str	r1, [sp, #20]
   11674:	mov	r1, r2
   11678:	movw	r2, #56	; 0x38
   1167c:	bl	110ac <memcpy@plt>
   11680:	ldr	r0, [fp, #-4]
   11684:	str	r0, [sp, #32]
   11688:	ldr	r0, [sp, #20]
   1168c:	str	r0, [sp, #28]
   11690:	ldr	r0, [sp, #28]
   11694:	ldr	r0, [r0]
   11698:	movw	r1, #0
   1169c:	cmp	r0, r1
   116a0:	movw	r0, #0
   116a4:	str	r0, [sp, #16]
   116a8:	beq	116d4 <__assert_fail@plt+0x3f4>
   116ac:	ldr	r0, [fp, #-4]
   116b0:	ldr	r1, [sp, #28]
   116b4:	ldr	r1, [r1]
   116b8:	bl	1104c <strcmp@plt>
   116bc:	cmp	r0, #0
   116c0:	movw	r0, #0
   116c4:	moveq	r0, #1
   116c8:	mvn	r1, #0
   116cc:	eor	r0, r0, r1
   116d0:	str	r0, [sp, #16]
   116d4:	ldr	r0, [sp, #16]
   116d8:	tst	r0, #1
   116dc:	beq	116f0 <__assert_fail@plt+0x410>
   116e0:	ldr	r0, [sp, #28]
   116e4:	add	r0, r0, #8
   116e8:	str	r0, [sp, #28]
   116ec:	b	11690 <__assert_fail@plt+0x3b0>
   116f0:	ldr	r0, [sp, #28]
   116f4:	ldr	r0, [r0, #4]
   116f8:	movw	r1, #0
   116fc:	cmp	r0, r1
   11700:	beq	11710 <__assert_fail@plt+0x430>
   11704:	ldr	r0, [sp, #28]
   11708:	ldr	r0, [r0, #4]
   1170c:	str	r0, [sp, #32]
   11710:	movw	r0, #53584	; 0xd150
   11714:	movt	r0, #1
   11718:	bl	111b4 <gettext@plt>
   1171c:	movw	r1, #53103	; 0xcf6f
   11720:	movt	r1, #1
   11724:	movw	r2, #53607	; 0xd167
   11728:	movt	r2, #1
   1172c:	bl	11064 <printf@plt>
   11730:	movw	r1, #5
   11734:	str	r0, [sp, #12]
   11738:	mov	r0, r1
   1173c:	movw	r1, #0
   11740:	bl	11244 <setlocale@plt>
   11744:	str	r0, [sp, #24]
   11748:	ldr	r0, [sp, #24]
   1174c:	movw	r1, #0
   11750:	cmp	r0, r1
   11754:	beq	11794 <__assert_fail@plt+0x4b4>
   11758:	ldr	r0, [sp, #24]
   1175c:	movw	r1, #53647	; 0xd18f
   11760:	movt	r1, #1
   11764:	movw	r2, #3
   11768:	bl	112a4 <strncmp@plt>
   1176c:	cmp	r0, #0
   11770:	beq	11794 <__assert_fail@plt+0x4b4>
   11774:	movw	r0, #53651	; 0xd193
   11778:	movt	r0, #1
   1177c:	bl	111b4 <gettext@plt>
   11780:	movw	lr, #57708	; 0xe16c
   11784:	movt	lr, #2
   11788:	ldr	r1, [lr]
   1178c:	bl	11034 <fputs_unlocked@plt>
   11790:	str	r0, [sp, #8]
   11794:	movw	r0, #53722	; 0xd1da
   11798:	movt	r0, #1
   1179c:	bl	111b4 <gettext@plt>
   117a0:	ldr	r2, [fp, #-4]
   117a4:	movw	r1, #53607	; 0xd167
   117a8:	movt	r1, #1
   117ac:	bl	11064 <printf@plt>
   117b0:	movw	r1, #53749	; 0xd1f5
   117b4:	movt	r1, #1
   117b8:	str	r0, [sp, #4]
   117bc:	mov	r0, r1
   117c0:	bl	111b4 <gettext@plt>
   117c4:	ldr	r1, [sp, #32]
   117c8:	ldr	r2, [sp, #32]
   117cc:	ldr	lr, [fp, #-4]
   117d0:	cmp	r2, lr
   117d4:	movw	r2, #0
   117d8:	moveq	r2, #1
   117dc:	tst	r2, #1
   117e0:	movw	r2, #53799	; 0xd227
   117e4:	movt	r2, #1
   117e8:	movw	lr, #53517	; 0xd10d
   117ec:	movt	lr, #1
   117f0:	movne	r2, lr
   117f4:	bl	11064 <printf@plt>
   117f8:	str	r0, [sp]
   117fc:	mov	sp, fp
   11800:	pop	{fp, pc}
   11804:	push	{fp, lr}
   11808:	mov	fp, sp
   1180c:	sub	sp, sp, #88	; 0x58
   11810:	movw	r2, #0
   11814:	str	r2, [fp, #-4]
   11818:	str	r0, [fp, #-8]
   1181c:	str	r1, [fp, #-12]
   11820:	movw	r0, #0
   11824:	strb	r0, [fp, #-18]	; 0xffffffee
   11828:	strb	r0, [fp, #-19]	; 0xffffffed
   1182c:	str	r2, [fp, #-24]	; 0xffffffe8
   11830:	ldr	r0, [fp, #-12]
   11834:	ldr	r0, [r0]
   11838:	bl	141f4 <__assert_fail@plt+0x2f14>
   1183c:	movw	r0, #6
   11840:	movw	r1, #53799	; 0xd227
   11844:	movt	r1, #1
   11848:	bl	11244 <setlocale@plt>
   1184c:	movw	r1, #53107	; 0xcf73
   11850:	movt	r1, #1
   11854:	str	r0, [fp, #-32]	; 0xffffffe0
   11858:	mov	r0, r1
   1185c:	movw	r1, #52995	; 0xcf03
   11860:	movt	r1, #1
   11864:	bl	1128c <bindtextdomain@plt>
   11868:	movw	r1, #53107	; 0xcf73
   1186c:	movt	r1, #1
   11870:	str	r0, [fp, #-36]	; 0xffffffdc
   11874:	mov	r0, r1
   11878:	bl	110f4 <textdomain@plt>
   1187c:	movw	r1, #13808	; 0x35f0
   11880:	movt	r1, #1
   11884:	str	r0, [fp, #-40]	; 0xffffffd8
   11888:	mov	r0, r1
   1188c:	bl	1c8fc <__assert_fail@plt+0xb61c>
   11890:	movw	r1, #57720	; 0xe178
   11894:	movt	r1, #2
   11898:	movw	r2, #0
   1189c:	strb	r2, [r1]
   118a0:	movw	r1, #57721	; 0xe179
   118a4:	movt	r1, #2
   118a8:	strb	r2, [r1]
   118ac:	movw	r1, #57722	; 0xe17a
   118b0:	movt	r1, #2
   118b4:	strb	r2, [r1]
   118b8:	str	r0, [sp, #44]	; 0x2c
   118bc:	ldr	r0, [fp, #-8]
   118c0:	ldr	r1, [fp, #-12]
   118c4:	movw	r2, #53019	; 0xcf1b
   118c8:	movt	r2, #1
   118cc:	movw	r3, #53936	; 0xd2b0
   118d0:	movt	r3, #1
   118d4:	movw	ip, #0
   118d8:	str	ip, [sp]
   118dc:	bl	11190 <getopt_long@plt>
   118e0:	str	r0, [fp, #-16]
   118e4:	cmn	r0, #1
   118e8:	beq	11b94 <__assert_fail@plt+0x8b4>
   118ec:	ldr	r0, [fp, #-16]
   118f0:	cmn	r0, #3
   118f4:	str	r0, [sp, #40]	; 0x28
   118f8:	beq	11b28 <__assert_fail@plt+0x848>
   118fc:	b	11900 <__assert_fail@plt+0x620>
   11900:	ldr	r0, [sp, #40]	; 0x28
   11904:	cmn	r0, #2
   11908:	beq	11b20 <__assert_fail@plt+0x840>
   1190c:	b	11910 <__assert_fail@plt+0x630>
   11910:	ldr	r0, [sp, #40]	; 0x28
   11914:	sub	r1, r0, #98	; 0x62
   11918:	cmp	r1, #2
   1191c:	bcc	11998 <__assert_fail@plt+0x6b8>
   11920:	b	11924 <__assert_fail@plt+0x644>
   11924:	ldr	r0, [sp, #40]	; 0x28
   11928:	cmp	r0, #100	; 0x64
   1192c:	beq	119f4 <__assert_fail@plt+0x714>
   11930:	b	11934 <__assert_fail@plt+0x654>
   11934:	ldr	r0, [sp, #40]	; 0x28
   11938:	cmp	r0, #102	; 0x66
   1193c:	beq	119a0 <__assert_fail@plt+0x6c0>
   11940:	b	11944 <__assert_fail@plt+0x664>
   11944:	ldr	r0, [sp, #40]	; 0x28
   11948:	cmp	r0, #110	; 0x6e
   1194c:	beq	11ae0 <__assert_fail@plt+0x800>
   11950:	b	11954 <__assert_fail@plt+0x674>
   11954:	ldr	r0, [sp, #40]	; 0x28
   11958:	cmp	r0, #115	; 0x73
   1195c:	beq	11ae4 <__assert_fail@plt+0x804>
   11960:	b	11964 <__assert_fail@plt+0x684>
   11964:	ldr	r0, [sp, #40]	; 0x28
   11968:	cmp	r0, #122	; 0x7a
   1196c:	beq	11af8 <__assert_fail@plt+0x818>
   11970:	b	11974 <__assert_fail@plt+0x694>
   11974:	ldr	r0, [sp, #40]	; 0x28
   11978:	cmp	r0, #256	; 0x100
   1197c:	beq	11a7c <__assert_fail@plt+0x79c>
   11980:	b	11984 <__assert_fail@plt+0x6a4>
   11984:	movw	r0, #257	; 0x101
   11988:	ldr	r1, [sp, #40]	; 0x28
   1198c:	cmp	r1, r0
   11990:	beq	11b0c <__assert_fail@plt+0x82c>
   11994:	b	11b88 <__assert_fail@plt+0x8a8>
   11998:	movw	r0, #1
   1199c:	strb	r0, [fp, #-19]	; 0xffffffed
   119a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119a4:	movw	r1, #0
   119a8:	cmp	r0, r1
   119ac:	beq	119e0 <__assert_fail@plt+0x700>
   119b0:	b	119b4 <__assert_fail@plt+0x6d4>
   119b4:	movw	r0, #53031	; 0xcf27
   119b8:	movt	r0, #1
   119bc:	bl	111b4 <gettext@plt>
   119c0:	movw	lr, #0
   119c4:	str	r0, [sp, #36]	; 0x24
   119c8:	mov	r0, lr
   119cc:	mov	r1, lr
   119d0:	ldr	r2, [sp, #36]	; 0x24
   119d4:	bl	11154 <error@plt>
   119d8:	movw	r0, #1
   119dc:	bl	113dc <__assert_fail@plt+0xfc>
   119e0:	movw	r0, #57712	; 0xe170
   119e4:	movt	r0, #2
   119e8:	ldr	r0, [r0]
   119ec:	str	r0, [fp, #-24]	; 0xffffffe8
   119f0:	b	11b90 <__assert_fail@plt+0x8b0>
   119f4:	movw	r0, #57712	; 0xe170
   119f8:	movt	r0, #2
   119fc:	ldr	r0, [r0]
   11a00:	ldrb	r0, [r0]
   11a04:	cmp	r0, #0
   11a08:	beq	11a54 <__assert_fail@plt+0x774>
   11a0c:	movw	r0, #57712	; 0xe170
   11a10:	movt	r0, #2
   11a14:	ldr	r0, [r0]
   11a18:	ldrb	r0, [r0, #1]
   11a1c:	cmp	r0, #0
   11a20:	beq	11a54 <__assert_fail@plt+0x774>
   11a24:	b	11a28 <__assert_fail@plt+0x748>
   11a28:	movw	r0, #53062	; 0xcf46
   11a2c:	movt	r0, #1
   11a30:	bl	111b4 <gettext@plt>
   11a34:	movw	lr, #0
   11a38:	str	r0, [sp, #32]
   11a3c:	mov	r0, lr
   11a40:	mov	r1, lr
   11a44:	ldr	r2, [sp, #32]
   11a48:	bl	11154 <error@plt>
   11a4c:	movw	r0, #1
   11a50:	bl	113dc <__assert_fail@plt+0xfc>
   11a54:	movw	r0, #57712	; 0xe170
   11a58:	movt	r0, #2
   11a5c:	ldr	r0, [r0]
   11a60:	ldrb	r0, [r0]
   11a64:	movw	r1, #57721	; 0xe179
   11a68:	movt	r1, #2
   11a6c:	strb	r0, [r1]
   11a70:	movw	r0, #1
   11a74:	strb	r0, [fp, #-18]	; 0xffffffee
   11a78:	b	11b90 <__assert_fail@plt+0x8b0>
   11a7c:	movw	r0, #57712	; 0xe170
   11a80:	movt	r0, #2
   11a84:	ldr	r0, [r0]
   11a88:	ldrb	r0, [r0]
   11a8c:	cmp	r0, #0
   11a90:	bne	11aa0 <__assert_fail@plt+0x7c0>
   11a94:	movw	r0, #1
   11a98:	str	r0, [sp, #28]
   11a9c:	b	11ab4 <__assert_fail@plt+0x7d4>
   11aa0:	movw	r0, #57712	; 0xe170
   11aa4:	movt	r0, #2
   11aa8:	ldr	r0, [r0]
   11aac:	bl	111c0 <strlen@plt>
   11ab0:	str	r0, [sp, #28]
   11ab4:	ldr	r0, [sp, #28]
   11ab8:	movw	r1, #57724	; 0xe17c
   11abc:	movt	r1, #2
   11ac0:	str	r0, [r1]
   11ac4:	movw	r0, #57712	; 0xe170
   11ac8:	movt	r0, #2
   11acc:	ldr	r0, [r0]
   11ad0:	movw	r1, #57728	; 0xe180
   11ad4:	movt	r1, #2
   11ad8:	str	r0, [r1]
   11adc:	b	11b90 <__assert_fail@plt+0x8b0>
   11ae0:	b	11b90 <__assert_fail@plt+0x8b0>
   11ae4:	movw	r0, #57720	; 0xe178
   11ae8:	movt	r0, #2
   11aec:	movw	r1, #1
   11af0:	strb	r1, [r0]
   11af4:	b	11b90 <__assert_fail@plt+0x8b0>
   11af8:	movw	r0, #57604	; 0xe104
   11afc:	movt	r0, #2
   11b00:	movw	r1, #0
   11b04:	strb	r1, [r0]
   11b08:	b	11b90 <__assert_fail@plt+0x8b0>
   11b0c:	movw	r0, #57732	; 0xe184
   11b10:	movt	r0, #2
   11b14:	movw	r1, #1
   11b18:	strb	r1, [r0]
   11b1c:	b	11b90 <__assert_fail@plt+0x8b0>
   11b20:	movw	r0, #0
   11b24:	bl	113dc <__assert_fail@plt+0xfc>
   11b28:	movw	r0, #57708	; 0xe16c
   11b2c:	movt	r0, #2
   11b30:	ldr	r0, [r0]
   11b34:	movw	r1, #57608	; 0xe108
   11b38:	movt	r1, #2
   11b3c:	ldr	r3, [r1]
   11b40:	movw	r1, #52991	; 0xceff
   11b44:	movt	r1, #1
   11b48:	movw	r2, #53103	; 0xcf6f
   11b4c:	movt	r2, #1
   11b50:	movw	ip, #53117	; 0xcf7d
   11b54:	movt	ip, #1
   11b58:	str	ip, [sp]
   11b5c:	movw	ip, #53132	; 0xcf8c
   11b60:	movt	ip, #1
   11b64:	str	ip, [sp, #4]
   11b68:	movw	ip, #53148	; 0xcf9c
   11b6c:	movt	ip, #1
   11b70:	str	ip, [sp, #8]
   11b74:	movw	ip, #0
   11b78:	str	ip, [sp, #12]
   11b7c:	bl	1710c <__assert_fail@plt+0x5e2c>
   11b80:	movw	r0, #0
   11b84:	bl	111a8 <exit@plt>
   11b88:	movw	r0, #1
   11b8c:	bl	113dc <__assert_fail@plt+0xfc>
   11b90:	b	118bc <__assert_fail@plt+0x5dc>
   11b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b98:	movw	r1, #0
   11b9c:	cmp	r0, r1
   11ba0:	bne	11bd4 <__assert_fail@plt+0x8f4>
   11ba4:	b	11ba8 <__assert_fail@plt+0x8c8>
   11ba8:	movw	r0, #53161	; 0xcfa9
   11bac:	movt	r0, #1
   11bb0:	bl	111b4 <gettext@plt>
   11bb4:	movw	lr, #0
   11bb8:	str	r0, [sp, #24]
   11bbc:	mov	r0, lr
   11bc0:	mov	r1, lr
   11bc4:	ldr	r2, [sp, #24]
   11bc8:	bl	11154 <error@plt>
   11bcc:	movw	r0, #1
   11bd0:	bl	113dc <__assert_fail@plt+0xfc>
   11bd4:	ldrb	r0, [fp, #-19]	; 0xffffffed
   11bd8:	tst	r0, #1
   11bdc:	beq	11c64 <__assert_fail@plt+0x984>
   11be0:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11be4:	tst	r0, #1
   11be8:	beq	11c1c <__assert_fail@plt+0x93c>
   11bec:	b	11bf0 <__assert_fail@plt+0x910>
   11bf0:	movw	r0, #53217	; 0xcfe1
   11bf4:	movt	r0, #1
   11bf8:	bl	111b4 <gettext@plt>
   11bfc:	movw	lr, #0
   11c00:	str	r0, [sp, #20]
   11c04:	mov	r0, lr
   11c08:	mov	r1, lr
   11c0c:	ldr	r2, [sp, #20]
   11c10:	bl	11154 <error@plt>
   11c14:	movw	r0, #1
   11c18:	bl	113dc <__assert_fail@plt+0xfc>
   11c1c:	movw	r0, #57720	; 0xe178
   11c20:	movt	r0, #2
   11c24:	ldrb	r0, [r0]
   11c28:	tst	r0, #1
   11c2c:	beq	11c60 <__assert_fail@plt+0x980>
   11c30:	b	11c34 <__assert_fail@plt+0x954>
   11c34:	movw	r0, #53283	; 0xd023
   11c38:	movt	r0, #1
   11c3c:	bl	111b4 <gettext@plt>
   11c40:	movw	lr, #0
   11c44:	str	r0, [sp, #16]
   11c48:	mov	r0, lr
   11c4c:	mov	r1, lr
   11c50:	ldr	r2, [sp, #16]
   11c54:	bl	11154 <error@plt>
   11c58:	movw	r0, #1
   11c5c:	bl	113dc <__assert_fail@plt+0xfc>
   11c60:	b	11c64 <__assert_fail@plt+0x984>
   11c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c68:	ldrb	r1, [fp, #-19]	; 0xffffffed
   11c6c:	tst	r1, #1
   11c70:	movw	r1, #4
   11c74:	moveq	r1, #0
   11c78:	movw	r2, #57732	; 0xe184
   11c7c:	movt	r2, #2
   11c80:	ldrb	r2, [r2]
   11c84:	tst	r2, #1
   11c88:	movw	r2, #2
   11c8c:	moveq	r2, #0
   11c90:	orr	r1, r1, r2
   11c94:	bl	1291c <__assert_fail@plt+0x163c>
   11c98:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11c9c:	tst	r0, #1
   11ca0:	bne	11cb4 <__assert_fail@plt+0x9d4>
   11ca4:	movw	r0, #57721	; 0xe179
   11ca8:	movt	r0, #2
   11cac:	movw	r1, #9
   11cb0:	strb	r1, [r0]
   11cb4:	movw	r0, #57728	; 0xe180
   11cb8:	movt	r0, #2
   11cbc:	ldr	r0, [r0]
   11cc0:	movw	r1, #0
   11cc4:	cmp	r0, r1
   11cc8:	bne	11d00 <__assert_fail@plt+0xa20>
   11ccc:	movw	r0, #57721	; 0xe179
   11cd0:	movt	r0, #2
   11cd4:	ldrb	r0, [r0]
   11cd8:	movw	r1, #58072	; 0xe2d8
   11cdc:	movt	r1, #2
   11ce0:	strb	r0, [r1]
   11ce4:	movw	r0, #57728	; 0xe180
   11ce8:	movt	r0, #2
   11cec:	str	r1, [r0]
   11cf0:	movw	r0, #57724	; 0xe17c
   11cf4:	movt	r0, #2
   11cf8:	movw	r1, #1
   11cfc:	str	r1, [r0]
   11d00:	ldrb	r0, [fp, #-19]	; 0xffffffed
   11d04:	tst	r0, #1
   11d08:	movw	r0, #8128	; 0x1fc0
   11d0c:	movt	r0, #1
   11d10:	movw	r1, #7736	; 0x1e38
   11d14:	movt	r1, #1
   11d18:	movne	r0, r1
   11d1c:	str	r0, [fp, #-28]	; 0xffffffe4
   11d20:	movw	r0, #57688	; 0xe158
   11d24:	movt	r0, #2
   11d28:	ldr	r0, [r0]
   11d2c:	ldr	r1, [fp, #-8]
   11d30:	cmp	r0, r1
   11d34:	bne	11d54 <__assert_fail@plt+0xa74>
   11d38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d3c:	movw	r0, #54324	; 0xd434
   11d40:	movt	r0, #1
   11d44:	bl	12630 <__assert_fail@plt+0x1350>
   11d48:	and	r0, r0, #1
   11d4c:	strb	r0, [fp, #-17]	; 0xffffffef
   11d50:	b	11dd4 <__assert_fail@plt+0xaf4>
   11d54:	movw	r0, #1
   11d58:	strb	r0, [fp, #-17]	; 0xffffffef
   11d5c:	movw	r0, #57688	; 0xe158
   11d60:	movt	r0, #2
   11d64:	ldr	r0, [r0]
   11d68:	ldr	r1, [fp, #-8]
   11d6c:	cmp	r0, r1
   11d70:	bge	11dd0 <__assert_fail@plt+0xaf0>
   11d74:	ldr	r0, [fp, #-12]
   11d78:	movw	r1, #57688	; 0xe158
   11d7c:	movt	r1, #2
   11d80:	ldr	r1, [r1]
   11d84:	add	r0, r0, r1, lsl #2
   11d88:	ldr	r0, [r0]
   11d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d90:	bl	12630 <__assert_fail@plt+0x1350>
   11d94:	and	r0, r0, #1
   11d98:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11d9c:	and	r1, r1, #1
   11da0:	and	r0, r1, r0
   11da4:	cmp	r0, #0
   11da8:	movw	r0, #0
   11dac:	movne	r0, #1
   11db0:	and	r0, r0, #1
   11db4:	strb	r0, [fp, #-17]	; 0xffffffef
   11db8:	movw	r0, #57688	; 0xe158
   11dbc:	movt	r0, #2
   11dc0:	ldr	r1, [r0]
   11dc4:	add	r1, r1, #1
   11dc8:	str	r1, [r0]
   11dcc:	b	11d5c <__assert_fail@plt+0xa7c>
   11dd0:	b	11dd4 <__assert_fail@plt+0xaf4>
   11dd4:	movw	r0, #57722	; 0xe17a
   11dd8:	movt	r0, #2
   11ddc:	ldrb	r0, [r0]
   11de0:	tst	r0, #1
   11de4:	beq	11e20 <__assert_fail@plt+0xb40>
   11de8:	movw	r0, #57704	; 0xe168
   11dec:	movt	r0, #2
   11df0:	ldr	r0, [r0]
   11df4:	bl	137d0 <__assert_fail@plt+0x24f0>
   11df8:	cmn	r0, #1
   11dfc:	bne	11e20 <__assert_fail@plt+0xb40>
   11e00:	bl	111e4 <__errno_location@plt>
   11e04:	ldr	r1, [r0]
   11e08:	movw	r0, #0
   11e0c:	movw	r2, #54324	; 0xd434
   11e10:	movt	r2, #1
   11e14:	bl	11154 <error@plt>
   11e18:	movw	r0, #0
   11e1c:	strb	r0, [fp, #-17]	; 0xffffffef
   11e20:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11e24:	tst	r0, #1
   11e28:	movw	r0, #0
   11e2c:	moveq	r0, #1
   11e30:	mov	sp, fp
   11e34:	pop	{fp, pc}
   11e38:	push	{fp, lr}
   11e3c:	mov	fp, sp
   11e40:	sub	sp, sp, #40	; 0x28
   11e44:	str	r0, [fp, #-4]
   11e48:	mov	r0, #0
   11e4c:	str	r0, [fp, #-12]
   11e50:	str	r0, [fp, #-16]
   11e54:	movw	r0, #0
   11e58:	strb	r0, [fp, #-17]	; 0xffffffef
   11e5c:	movw	r0, #58076	; 0xe2dc
   11e60:	movt	r0, #2
   11e64:	ldr	r0, [r0]
   11e68:	movw	r1, #57736	; 0xe188
   11e6c:	movt	r1, #2
   11e70:	str	r0, [r1]
   11e74:	ldr	r0, [fp, #-4]
   11e78:	bl	110dc <getc_unlocked@plt>
   11e7c:	str	r0, [sp, #16]
   11e80:	ldr	r0, [sp, #16]
   11e84:	movw	lr, #57604	; 0xe104
   11e88:	movt	lr, #2
   11e8c:	ldrb	lr, [lr]
   11e90:	cmp	r0, lr
   11e94:	bne	11ed4 <__assert_fail@plt+0xbf4>
   11e98:	ldr	r0, [sp, #16]
   11e9c:	bl	112c8 <putchar_unlocked@plt>
   11ea0:	mov	lr, #0
   11ea4:	str	lr, [fp, #-12]
   11ea8:	str	lr, [fp, #-16]
   11eac:	movw	lr, #0
   11eb0:	strb	lr, [fp, #-17]	; 0xffffffef
   11eb4:	movw	lr, #58076	; 0xe2dc
   11eb8:	movt	lr, #2
   11ebc:	ldr	lr, [lr]
   11ec0:	movw	r1, #57736	; 0xe188
   11ec4:	movt	r1, #2
   11ec8:	str	lr, [r1]
   11ecc:	str	r0, [sp, #12]
   11ed0:	b	11fb4 <__assert_fail@plt+0xcd4>
   11ed4:	ldr	r0, [sp, #16]
   11ed8:	cmn	r0, #1
   11edc:	bne	11f10 <__assert_fail@plt+0xc30>
   11ee0:	ldr	r0, [fp, #-16]
   11ee4:	ldr	r1, [fp, #-12]
   11ee8:	orr	r0, r0, r1
   11eec:	cmp	r0, #0
   11ef0:	beq	11f0c <__assert_fail@plt+0xc2c>
   11ef4:	b	11ef8 <__assert_fail@plt+0xc18>
   11ef8:	movw	r0, #57604	; 0xe104
   11efc:	movt	r0, #2
   11f00:	ldrb	r0, [r0]
   11f04:	bl	112c8 <putchar_unlocked@plt>
   11f08:	str	r0, [sp, #8]
   11f0c:	b	11fb8 <__assert_fail@plt+0xcd8>
   11f10:	sub	r0, fp, #16
   11f14:	bl	127f8 <__assert_fail@plt+0x1518>
   11f18:	ldr	r0, [fp, #-16]
   11f1c:	ldr	r1, [fp, #-12]
   11f20:	bl	12870 <__assert_fail@plt+0x1590>
   11f24:	tst	r0, #1
   11f28:	beq	11fac <__assert_fail@plt+0xccc>
   11f2c:	movw	r0, #57728	; 0xe180
   11f30:	movt	r0, #2
   11f34:	ldr	r0, [r0]
   11f38:	movw	r1, #58072	; 0xe2d8
   11f3c:	movt	r1, #2
   11f40:	cmp	r0, r1
   11f44:	beq	11fa0 <__assert_fail@plt+0xcc0>
   11f48:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11f4c:	tst	r0, #1
   11f50:	beq	11f98 <__assert_fail@plt+0xcb8>
   11f54:	ldr	r0, [fp, #-16]
   11f58:	ldr	r1, [fp, #-12]
   11f5c:	bl	128c0 <__assert_fail@plt+0x15e0>
   11f60:	tst	r0, #1
   11f64:	beq	11f98 <__assert_fail@plt+0xcb8>
   11f68:	movw	r0, #57728	; 0xe180
   11f6c:	movt	r0, #2
   11f70:	ldr	r0, [r0]
   11f74:	movw	r1, #57724	; 0xe17c
   11f78:	movt	r1, #2
   11f7c:	ldr	r2, [r1]
   11f80:	movw	r1, #57708	; 0xe16c
   11f84:	movt	r1, #2
   11f88:	ldr	r3, [r1]
   11f8c:	movw	r1, #1
   11f90:	bl	110c4 <fwrite_unlocked@plt>
   11f94:	str	r0, [sp, #4]
   11f98:	movw	r0, #1
   11f9c:	strb	r0, [fp, #-17]	; 0xffffffef
   11fa0:	ldr	r0, [sp, #16]
   11fa4:	bl	112c8 <putchar_unlocked@plt>
   11fa8:	str	r0, [sp]
   11fac:	b	11fb0 <__assert_fail@plt+0xcd0>
   11fb0:	b	11fb4 <__assert_fail@plt+0xcd4>
   11fb4:	b	11e74 <__assert_fail@plt+0xb94>
   11fb8:	mov	sp, fp
   11fbc:	pop	{fp, pc}
   11fc0:	push	{r4, sl, fp, lr}
   11fc4:	add	fp, sp, #8
   11fc8:	sub	sp, sp, #112	; 0x70
   11fcc:	str	r0, [fp, #-12]
   11fd0:	mov	r0, #0
   11fd4:	str	r0, [fp, #-20]	; 0xffffffec
   11fd8:	mov	r0, #1
   11fdc:	str	r0, [fp, #-24]	; 0xffffffe8
   11fe0:	movw	r0, #0
   11fe4:	strb	r0, [fp, #-25]	; 0xffffffe7
   11fe8:	movw	r0, #58076	; 0xe2dc
   11fec:	movt	r0, #2
   11ff0:	ldr	r0, [r0]
   11ff4:	movw	r1, #57736	; 0xe188
   11ff8:	movt	r1, #2
   11ffc:	str	r0, [r1]
   12000:	ldr	r0, [fp, #-12]
   12004:	bl	110dc <getc_unlocked@plt>
   12008:	str	r0, [fp, #-16]
   1200c:	ldr	r0, [fp, #-16]
   12010:	cmn	r0, #1
   12014:	bne	1201c <__assert_fail@plt+0xd3c>
   12018:	b	12628 <__assert_fail@plt+0x1348>
   1201c:	ldr	r0, [fp, #-16]
   12020:	ldr	r1, [fp, #-12]
   12024:	bl	111d8 <ungetc@plt>
   12028:	movw	r1, #0
   1202c:	str	r1, [fp, #-16]
   12030:	movw	r1, #57720	; 0xe178
   12034:	movt	r1, #2
   12038:	ldrb	r1, [r1]
   1203c:	and	r1, r1, #1
   12040:	mov	lr, #1
   12044:	mov	r2, #0
   12048:	str	r0, [fp, #-52]	; 0xffffffcc
   1204c:	mov	r0, lr
   12050:	str	r1, [fp, #-56]	; 0xffffffc8
   12054:	mov	r1, r2
   12058:	bl	12870 <__assert_fail@plt+0x1590>
   1205c:	mvn	r1, #0
   12060:	eor	r0, r0, r1
   12064:	and	r0, r0, #1
   12068:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1206c:	eor	r0, r1, r0
   12070:	cmp	r0, #0
   12074:	movw	r0, #0
   12078:	movne	r0, #1
   1207c:	and	r0, r0, #1
   12080:	strb	r0, [fp, #-26]	; 0xffffffe6
   12084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12088:	ldr	r1, [fp, #-20]	; 0xffffffec
   1208c:	eor	r0, r0, #1
   12090:	orr	r0, r0, r1
   12094:	cmp	r0, #0
   12098:	bne	12324 <__assert_fail@plt+0x1044>
   1209c:	b	120a0 <__assert_fail@plt+0xdc0>
   120a0:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   120a4:	tst	r0, #1
   120a8:	beq	12324 <__assert_fail@plt+0x1044>
   120ac:	movw	r0, #57721	; 0xe179
   120b0:	movt	r0, #2
   120b4:	ldrb	r0, [r0]
   120b8:	movw	r1, #57604	; 0xe104
   120bc:	movt	r1, #2
   120c0:	ldrb	r1, [r1]
   120c4:	ldr	r2, [fp, #-12]
   120c8:	movw	r3, #57740	; 0xe18c
   120cc:	movt	r3, #2
   120d0:	str	r0, [sp, #60]	; 0x3c
   120d4:	mov	r0, r3
   120d8:	movw	r3, #57744	; 0xe190
   120dc:	movt	r3, #2
   120e0:	str	r1, [sp, #56]	; 0x38
   120e4:	mov	r1, r3
   120e8:	movw	r3, #0
   120ec:	str	r2, [sp, #52]	; 0x34
   120f0:	mov	r2, r3
   120f4:	mvn	r3, #0
   120f8:	ldr	ip, [sp, #60]	; 0x3c
   120fc:	str	ip, [sp]
   12100:	ldr	lr, [sp, #56]	; 0x38
   12104:	str	lr, [sp, #4]
   12108:	ldr	r4, [sp, #52]	; 0x34
   1210c:	str	r4, [sp, #8]
   12110:	bl	13ab8 <__assert_fail@plt+0x27d8>
   12114:	str	r0, [fp, #-32]	; 0xffffffe0
   12118:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1211c:	cmp	r0, #0
   12120:	bge	1216c <__assert_fail@plt+0xe8c>
   12124:	movw	r0, #57740	; 0xe18c
   12128:	movt	r0, #2
   1212c:	ldr	r0, [r0]
   12130:	bl	1396c <__assert_fail@plt+0x268c>
   12134:	movw	r0, #57740	; 0xe18c
   12138:	movt	r0, #2
   1213c:	movw	lr, #0
   12140:	str	lr, [r0]
   12144:	ldr	r0, [fp, #-12]
   12148:	bl	1113c <ferror_unlocked@plt>
   1214c:	cmp	r0, #0
   12150:	bne	12164 <__assert_fail@plt+0xe84>
   12154:	ldr	r0, [fp, #-12]
   12158:	bl	112bc <feof_unlocked@plt>
   1215c:	cmp	r0, #0
   12160:	beq	12168 <__assert_fail@plt+0xe88>
   12164:	b	12628 <__assert_fail@plt+0x1348>
   12168:	bl	1a078 <__assert_fail@plt+0x8d98>
   1216c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12170:	str	r0, [fp, #-36]	; 0xffffffdc
   12174:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12178:	cmp	r0, #0
   1217c:	beq	12184 <__assert_fail@plt+0xea4>
   12180:	b	121a4 <__assert_fail@plt+0xec4>
   12184:	movw	r0, #53889	; 0xd281
   12188:	movt	r0, #1
   1218c:	movw	r1, #53902	; 0xd28e
   12190:	movt	r1, #1
   12194:	movw	r2, #315	; 0x13b
   12198:	movw	r3, #53912	; 0xd298
   1219c:	movt	r3, #1
   121a0:	bl	112e0 <__assert_fail@plt>
   121a4:	movw	r0, #0
   121a8:	str	r0, [fp, #-16]
   121ac:	movw	r0, #57740	; 0xe18c
   121b0:	movt	r0, #2
   121b4:	ldr	r0, [r0]
   121b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   121bc:	sub	r1, r1, #1
   121c0:	add	r0, r0, r1
   121c4:	ldrb	r0, [r0]
   121c8:	bl	12908 <__assert_fail@plt+0x1628>
   121cc:	and	r0, r0, #255	; 0xff
   121d0:	movw	r1, #57721	; 0xe179
   121d4:	movt	r1, #2
   121d8:	ldrb	r1, [r1]
   121dc:	cmp	r0, r1
   121e0:	beq	1227c <__assert_fail@plt+0xf9c>
   121e4:	movw	r0, #57720	; 0xe178
   121e8:	movt	r0, #2
   121ec:	ldrb	r0, [r0]
   121f0:	tst	r0, #1
   121f4:	beq	121fc <__assert_fail@plt+0xf1c>
   121f8:	b	12278 <__assert_fail@plt+0xf98>
   121fc:	movw	r0, #57740	; 0xe18c
   12200:	movt	r0, #2
   12204:	ldr	r0, [r0]
   12208:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1220c:	movw	r1, #57708	; 0xe16c
   12210:	movt	r1, #2
   12214:	ldr	r3, [r1]
   12218:	movw	r1, #1
   1221c:	bl	110c4 <fwrite_unlocked@plt>
   12220:	movw	r1, #57740	; 0xe18c
   12224:	movt	r1, #2
   12228:	ldr	r1, [r1]
   1222c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12230:	sub	r2, r2, #1
   12234:	add	r1, r1, r2
   12238:	ldrb	r1, [r1]
   1223c:	movw	r2, #57604	; 0xe104
   12240:	movt	r2, #2
   12244:	ldrb	r2, [r2]
   12248:	cmp	r1, r2
   1224c:	str	r0, [sp, #48]	; 0x30
   12250:	beq	12268 <__assert_fail@plt+0xf88>
   12254:	movw	r0, #57604	; 0xe104
   12258:	movt	r0, #2
   1225c:	ldrb	r0, [r0]
   12260:	bl	112c8 <putchar_unlocked@plt>
   12264:	str	r0, [sp, #44]	; 0x2c
   12268:	movw	r0, #57604	; 0xe104
   1226c:	movt	r0, #2
   12270:	ldrb	r0, [r0]
   12274:	str	r0, [fp, #-16]
   12278:	b	12084 <__assert_fail@plt+0xda4>
   1227c:	mov	r0, #1
   12280:	mov	r1, #0
   12284:	bl	12870 <__assert_fail@plt+0x1590>
   12288:	tst	r0, #1
   1228c:	beq	1231c <__assert_fail@plt+0x103c>
   12290:	movw	r0, #57740	; 0xe18c
   12294:	movt	r0, #2
   12298:	ldr	r0, [r0]
   1229c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   122a0:	sub	r2, r1, #1
   122a4:	movw	r1, #57708	; 0xe16c
   122a8:	movt	r1, #2
   122ac:	ldr	r3, [r1]
   122b0:	movw	r1, #1
   122b4:	bl	110c4 <fwrite_unlocked@plt>
   122b8:	movw	r1, #57721	; 0xe179
   122bc:	movt	r1, #2
   122c0:	ldrb	r1, [r1]
   122c4:	movw	r2, #57604	; 0xe104
   122c8:	movt	r2, #2
   122cc:	ldrb	r2, [r2]
   122d0:	cmp	r1, r2
   122d4:	str	r0, [sp, #40]	; 0x28
   122d8:	bne	12310 <__assert_fail@plt+0x1030>
   122dc:	ldr	r0, [fp, #-12]
   122e0:	bl	110dc <getc_unlocked@plt>
   122e4:	str	r0, [fp, #-40]	; 0xffffffd8
   122e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122ec:	cmn	r0, #1
   122f0:	beq	1230c <__assert_fail@plt+0x102c>
   122f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122f8:	ldr	r1, [fp, #-12]
   122fc:	bl	111d8 <ungetc@plt>
   12300:	movw	r1, #1
   12304:	strb	r1, [fp, #-25]	; 0xffffffe7
   12308:	str	r0, [sp, #36]	; 0x24
   1230c:	b	12318 <__assert_fail@plt+0x1038>
   12310:	movw	r0, #1
   12314:	strb	r0, [fp, #-25]	; 0xffffffe7
   12318:	b	1231c <__assert_fail@plt+0x103c>
   1231c:	sub	r0, fp, #24
   12320:	bl	127f8 <__assert_fail@plt+0x1518>
   12324:	ldr	r0, [fp, #-16]
   12328:	str	r0, [fp, #-44]	; 0xffffffd4
   1232c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12330:	ldr	r1, [fp, #-20]	; 0xffffffec
   12334:	bl	12870 <__assert_fail@plt+0x1590>
   12338:	tst	r0, #1
   1233c:	beq	12408 <__assert_fail@plt+0x1128>
   12340:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12344:	tst	r0, #1
   12348:	beq	1237c <__assert_fail@plt+0x109c>
   1234c:	movw	r0, #57728	; 0xe180
   12350:	movt	r0, #2
   12354:	ldr	r0, [r0]
   12358:	movw	r1, #57724	; 0xe17c
   1235c:	movt	r1, #2
   12360:	ldr	r2, [r1]
   12364:	movw	r1, #57708	; 0xe16c
   12368:	movt	r1, #2
   1236c:	ldr	r3, [r1]
   12370:	movw	r1, #1
   12374:	bl	110c4 <fwrite_unlocked@plt>
   12378:	str	r0, [sp, #32]
   1237c:	movw	r0, #1
   12380:	strb	r0, [fp, #-25]	; 0xffffffe7
   12384:	ldr	r0, [fp, #-12]
   12388:	bl	110dc <getc_unlocked@plt>
   1238c:	str	r0, [fp, #-16]
   12390:	movw	lr, #57721	; 0xe179
   12394:	movt	lr, #2
   12398:	ldrb	lr, [lr]
   1239c:	cmp	r0, lr
   123a0:	movw	r0, #0
   123a4:	str	r0, [sp, #28]
   123a8:	beq	123e0 <__assert_fail@plt+0x1100>
   123ac:	ldr	r0, [fp, #-16]
   123b0:	movw	r1, #57604	; 0xe104
   123b4:	movt	r1, #2
   123b8:	ldrb	r1, [r1]
   123bc:	cmp	r0, r1
   123c0:	movw	r0, #0
   123c4:	str	r0, [sp, #28]
   123c8:	beq	123e0 <__assert_fail@plt+0x1100>
   123cc:	ldr	r0, [fp, #-16]
   123d0:	cmn	r0, #1
   123d4:	movw	r0, #0
   123d8:	movne	r0, #1
   123dc:	str	r0, [sp, #28]
   123e0:	ldr	r0, [sp, #28]
   123e4:	tst	r0, #1
   123e8:	beq	12404 <__assert_fail@plt+0x1124>
   123ec:	ldr	r0, [fp, #-16]
   123f0:	bl	112c8 <putchar_unlocked@plt>
   123f4:	ldr	lr, [fp, #-16]
   123f8:	str	lr, [fp, #-44]	; 0xffffffd4
   123fc:	str	r0, [sp, #24]
   12400:	b	12384 <__assert_fail@plt+0x10a4>
   12404:	b	12484 <__assert_fail@plt+0x11a4>
   12408:	b	1240c <__assert_fail@plt+0x112c>
   1240c:	ldr	r0, [fp, #-12]
   12410:	bl	110dc <getc_unlocked@plt>
   12414:	str	r0, [fp, #-16]
   12418:	movw	lr, #57721	; 0xe179
   1241c:	movt	lr, #2
   12420:	ldrb	lr, [lr]
   12424:	cmp	r0, lr
   12428:	movw	r0, #0
   1242c:	str	r0, [sp, #20]
   12430:	beq	12468 <__assert_fail@plt+0x1188>
   12434:	ldr	r0, [fp, #-16]
   12438:	movw	r1, #57604	; 0xe104
   1243c:	movt	r1, #2
   12440:	ldrb	r1, [r1]
   12444:	cmp	r0, r1
   12448:	movw	r0, #0
   1244c:	str	r0, [sp, #20]
   12450:	beq	12468 <__assert_fail@plt+0x1188>
   12454:	ldr	r0, [fp, #-16]
   12458:	cmn	r0, #1
   1245c:	movw	r0, #0
   12460:	movne	r0, #1
   12464:	str	r0, [sp, #20]
   12468:	ldr	r0, [sp, #20]
   1246c:	tst	r0, #1
   12470:	beq	12480 <__assert_fail@plt+0x11a0>
   12474:	ldr	r0, [fp, #-16]
   12478:	str	r0, [fp, #-44]	; 0xffffffd4
   1247c:	b	1240c <__assert_fail@plt+0x112c>
   12480:	b	12484 <__assert_fail@plt+0x11a4>
   12484:	movw	r0, #57721	; 0xe179
   12488:	movt	r0, #2
   1248c:	ldrb	r0, [r0]
   12490:	movw	r1, #57604	; 0xe104
   12494:	movt	r1, #2
   12498:	ldrb	r1, [r1]
   1249c:	cmp	r0, r1
   124a0:	bne	124f4 <__assert_fail@plt+0x1214>
   124a4:	ldr	r0, [fp, #-16]
   124a8:	movw	r1, #57721	; 0xe179
   124ac:	movt	r1, #2
   124b0:	ldrb	r1, [r1]
   124b4:	cmp	r0, r1
   124b8:	bne	124f4 <__assert_fail@plt+0x1214>
   124bc:	ldr	r0, [fp, #-12]
   124c0:	bl	110dc <getc_unlocked@plt>
   124c4:	str	r0, [fp, #-48]	; 0xffffffd0
   124c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   124cc:	cmn	r0, #1
   124d0:	beq	124e8 <__assert_fail@plt+0x1208>
   124d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   124d8:	ldr	r1, [fp, #-12]
   124dc:	bl	111d8 <ungetc@plt>
   124e0:	str	r0, [sp, #16]
   124e4:	b	124f0 <__assert_fail@plt+0x1210>
   124e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   124ec:	str	r0, [fp, #-16]
   124f0:	b	124f4 <__assert_fail@plt+0x1214>
   124f4:	ldr	r0, [fp, #-16]
   124f8:	movw	r1, #57721	; 0xe179
   124fc:	movt	r1, #2
   12500:	ldrb	r1, [r1]
   12504:	cmp	r0, r1
   12508:	bne	12518 <__assert_fail@plt+0x1238>
   1250c:	sub	r0, fp, #24
   12510:	bl	127f8 <__assert_fail@plt+0x1518>
   12514:	b	12624 <__assert_fail@plt+0x1344>
   12518:	ldr	r0, [fp, #-16]
   1251c:	movw	r1, #57604	; 0xe104
   12520:	movt	r1, #2
   12524:	ldrb	r1, [r1]
   12528:	cmp	r0, r1
   1252c:	beq	1253c <__assert_fail@plt+0x125c>
   12530:	ldr	r0, [fp, #-16]
   12534:	cmn	r0, #1
   12538:	bne	12620 <__assert_fail@plt+0x1340>
   1253c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12540:	tst	r0, #1
   12544:	bne	12578 <__assert_fail@plt+0x1298>
   12548:	movw	r0, #57720	; 0xe178
   1254c:	movt	r0, #2
   12550:	ldrb	r0, [r0]
   12554:	tst	r0, #1
   12558:	beq	12578 <__assert_fail@plt+0x1298>
   1255c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12560:	ldr	r1, [fp, #-20]	; 0xffffffec
   12564:	eor	r0, r0, #1
   12568:	orr	r0, r0, r1
   1256c:	cmp	r0, #0
   12570:	beq	125e0 <__assert_fail@plt+0x1300>
   12574:	b	12578 <__assert_fail@plt+0x1298>
   12578:	ldr	r0, [fp, #-16]
   1257c:	movw	r1, #57604	; 0xe104
   12580:	movt	r1, #2
   12584:	ldrb	r1, [r1]
   12588:	cmp	r0, r1
   1258c:	beq	125c8 <__assert_fail@plt+0x12e8>
   12590:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12594:	movw	r1, #57604	; 0xe104
   12598:	movt	r1, #2
   1259c:	ldrb	r1, [r1]
   125a0:	cmp	r0, r1
   125a4:	bne	125c8 <__assert_fail@plt+0x12e8>
   125a8:	movw	r0, #57721	; 0xe179
   125ac:	movt	r0, #2
   125b0:	ldrb	r0, [r0]
   125b4:	movw	r1, #57604	; 0xe104
   125b8:	movt	r1, #2
   125bc:	ldrb	r1, [r1]
   125c0:	cmp	r0, r1
   125c4:	bne	125dc <__assert_fail@plt+0x12fc>
   125c8:	movw	r0, #57604	; 0xe104
   125cc:	movt	r0, #2
   125d0:	ldrb	r0, [r0]
   125d4:	bl	112c8 <putchar_unlocked@plt>
   125d8:	str	r0, [sp, #12]
   125dc:	b	125e0 <__assert_fail@plt+0x1300>
   125e0:	ldr	r0, [fp, #-16]
   125e4:	cmn	r0, #1
   125e8:	bne	125f0 <__assert_fail@plt+0x1310>
   125ec:	b	12628 <__assert_fail@plt+0x1348>
   125f0:	mov	r0, #0
   125f4:	str	r0, [fp, #-20]	; 0xffffffec
   125f8:	mov	r0, #1
   125fc:	str	r0, [fp, #-24]	; 0xffffffe8
   12600:	movw	r0, #58076	; 0xe2dc
   12604:	movt	r0, #2
   12608:	ldr	r0, [r0]
   1260c:	movw	r1, #57736	; 0xe188
   12610:	movt	r1, #2
   12614:	str	r0, [r1]
   12618:	movw	r0, #0
   1261c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12620:	b	12624 <__assert_fail@plt+0x1344>
   12624:	b	12084 <__assert_fail@plt+0xda4>
   12628:	sub	sp, fp, #8
   1262c:	pop	{r4, sl, fp, pc}
   12630:	push	{fp, lr}
   12634:	mov	fp, sp
   12638:	sub	sp, sp, #40	; 0x28
   1263c:	str	r0, [fp, #-8]
   12640:	str	r1, [fp, #-12]
   12644:	ldr	r0, [fp, #-8]
   12648:	movw	r1, #54324	; 0xd434
   1264c:	movt	r1, #1
   12650:	bl	1104c <strcmp@plt>
   12654:	cmp	r0, #0
   12658:	bne	12680 <__assert_fail@plt+0x13a0>
   1265c:	movw	r0, #57722	; 0xe17a
   12660:	movt	r0, #2
   12664:	movw	r1, #1
   12668:	strb	r1, [r0]
   1266c:	movw	r0, #57704	; 0xe168
   12670:	movt	r0, #2
   12674:	ldr	r0, [r0]
   12678:	str	r0, [fp, #-16]
   1267c:	b	126f8 <__assert_fail@plt+0x1418>
   12680:	ldr	r0, [fp, #-8]
   12684:	movw	r1, #53101	; 0xcf6d
   12688:	movt	r1, #1
   1268c:	bl	11274 <fopen64@plt>
   12690:	str	r0, [fp, #-16]
   12694:	ldr	r0, [fp, #-16]
   12698:	movw	r1, #0
   1269c:	cmp	r0, r1
   126a0:	bne	126f4 <__assert_fail@plt+0x1414>
   126a4:	bl	111e4 <__errno_location@plt>
   126a8:	ldr	r1, [r0]
   126ac:	ldr	r2, [fp, #-8]
   126b0:	movw	r0, #0
   126b4:	movw	lr, #3
   126b8:	str	r1, [sp, #16]
   126bc:	mov	r1, lr
   126c0:	bl	1660c <__assert_fail@plt+0x532c>
   126c4:	movw	r1, #0
   126c8:	str	r0, [sp, #12]
   126cc:	mov	r0, r1
   126d0:	ldr	r1, [sp, #16]
   126d4:	movw	r2, #54582	; 0xd536
   126d8:	movt	r2, #1
   126dc:	ldr	r3, [sp, #12]
   126e0:	bl	11154 <error@plt>
   126e4:	movw	r0, #0
   126e8:	and	r0, r0, #1
   126ec:	strb	r0, [fp, #-1]
   126f0:	b	127e8 <__assert_fail@plt+0x1508>
   126f4:	b	126f8 <__assert_fail@plt+0x1418>
   126f8:	ldr	r0, [fp, #-16]
   126fc:	movw	r1, #2
   12700:	bl	13778 <__assert_fail@plt+0x2498>
   12704:	ldr	r0, [fp, #-12]
   12708:	ldr	r1, [fp, #-16]
   1270c:	str	r0, [sp, #8]
   12710:	mov	r0, r1
   12714:	ldr	r1, [sp, #8]
   12718:	blx	r1
   1271c:	bl	111e4 <__errno_location@plt>
   12720:	ldr	r0, [r0]
   12724:	str	r0, [sp, #20]
   12728:	ldr	r0, [fp, #-16]
   1272c:	bl	1113c <ferror_unlocked@plt>
   12730:	cmp	r0, #0
   12734:	bne	12740 <__assert_fail@plt+0x1460>
   12738:	movw	r0, #0
   1273c:	str	r0, [sp, #20]
   12740:	ldr	r0, [fp, #-8]
   12744:	movw	r1, #54324	; 0xd434
   12748:	movt	r1, #1
   1274c:	bl	1104c <strcmp@plt>
   12750:	cmp	r0, #0
   12754:	bne	12764 <__assert_fail@plt+0x1484>
   12758:	ldr	r0, [fp, #-16]
   1275c:	bl	11268 <clearerr_unlocked@plt>
   12760:	b	12784 <__assert_fail@plt+0x14a4>
   12764:	ldr	r0, [fp, #-16]
   12768:	bl	137d0 <__assert_fail@plt+0x24f0>
   1276c:	cmn	r0, #1
   12770:	bne	12780 <__assert_fail@plt+0x14a0>
   12774:	bl	111e4 <__errno_location@plt>
   12778:	ldr	r0, [r0]
   1277c:	str	r0, [sp, #20]
   12780:	b	12784 <__assert_fail@plt+0x14a4>
   12784:	ldr	r0, [sp, #20]
   12788:	cmp	r0, #0
   1278c:	beq	127dc <__assert_fail@plt+0x14fc>
   12790:	ldr	r1, [sp, #20]
   12794:	ldr	r2, [fp, #-8]
   12798:	movw	r0, #0
   1279c:	movw	r3, #3
   127a0:	str	r1, [sp, #4]
   127a4:	mov	r1, r3
   127a8:	bl	1660c <__assert_fail@plt+0x532c>
   127ac:	movw	r1, #0
   127b0:	str	r0, [sp]
   127b4:	mov	r0, r1
   127b8:	ldr	r1, [sp, #4]
   127bc:	movw	r2, #54582	; 0xd536
   127c0:	movt	r2, #1
   127c4:	ldr	r3, [sp]
   127c8:	bl	11154 <error@plt>
   127cc:	movw	r0, #0
   127d0:	and	r0, r0, #1
   127d4:	strb	r0, [fp, #-1]
   127d8:	b	127e8 <__assert_fail@plt+0x1508>
   127dc:	movw	r0, #1
   127e0:	and	r0, r0, #1
   127e4:	strb	r0, [fp, #-1]
   127e8:	ldrb	r0, [fp, #-1]
   127ec:	and	r0, r0, #1
   127f0:	mov	sp, fp
   127f4:	pop	{fp, pc}
   127f8:	sub	sp, sp, #12
   127fc:	str	r0, [sp, #8]
   12800:	ldr	r0, [sp, #8]
   12804:	ldr	r1, [r0]
   12808:	ldr	r2, [r0, #4]
   1280c:	adds	r1, r1, #1
   12810:	adc	r2, r2, #0
   12814:	str	r1, [r0]
   12818:	str	r2, [r0, #4]
   1281c:	ldr	r0, [sp, #8]
   12820:	ldr	r1, [r0]
   12824:	ldr	r0, [r0, #4]
   12828:	movw	r2, #57736	; 0xe188
   1282c:	movt	r2, #2
   12830:	ldr	r2, [r2]
   12834:	ldr	r3, [r2, #8]
   12838:	ldr	r2, [r2, #12]
   1283c:	subs	r1, r3, r1
   12840:	sbcs	r0, r2, r0
   12844:	str	r1, [sp, #4]
   12848:	str	r0, [sp]
   1284c:	bcs	12868 <__assert_fail@plt+0x1588>
   12850:	b	12854 <__assert_fail@plt+0x1574>
   12854:	movw	r0, #57736	; 0xe188
   12858:	movt	r0, #2
   1285c:	ldr	r1, [r0]
   12860:	add	r1, r1, #16
   12864:	str	r1, [r0]
   12868:	add	sp, sp, #12
   1286c:	bx	lr
   12870:	sub	sp, sp, #16
   12874:	str	r0, [sp, #8]
   12878:	str	r1, [sp, #12]
   1287c:	movw	r0, #57736	; 0xe188
   12880:	movt	r0, #2
   12884:	ldr	r0, [r0]
   12888:	ldr	r1, [r0]
   1288c:	ldr	r0, [r0, #4]
   12890:	ldr	r2, [sp, #8]
   12894:	ldr	r3, [sp, #12]
   12898:	subs	r1, r2, r1
   1289c:	sbcs	r0, r3, r0
   128a0:	mov	r2, #0
   128a4:	movwcs	r2, #1
   128a8:	and	r2, r2, #1
   128ac:	str	r0, [sp, #4]
   128b0:	mov	r0, r2
   128b4:	str	r1, [sp]
   128b8:	add	sp, sp, #16
   128bc:	bx	lr
   128c0:	sub	sp, sp, #8
   128c4:	str	r0, [sp]
   128c8:	str	r1, [sp, #4]
   128cc:	ldr	r0, [sp]
   128d0:	ldr	r1, [sp, #4]
   128d4:	movw	r2, #57736	; 0xe188
   128d8:	movt	r2, #2
   128dc:	ldr	r2, [r2]
   128e0:	ldr	r3, [r2]
   128e4:	ldr	r2, [r2, #4]
   128e8:	eor	r1, r1, r2
   128ec:	eor	r0, r0, r3
   128f0:	orr	r0, r0, r1
   128f4:	clz	r0, r0
   128f8:	lsr	r0, r0, #5
   128fc:	and	r0, r0, #1
   12900:	add	sp, sp, #8
   12904:	bx	lr
   12908:	sub	sp, sp, #4
   1290c:	strb	r0, [sp, #3]
   12910:	ldrb	r0, [sp, #3]
   12914:	add	sp, sp, #4
   12918:	bx	lr
   1291c:	push	{fp, lr}
   12920:	mov	fp, sp
   12924:	sub	sp, sp, #200	; 0xc8
   12928:	str	r0, [fp, #-4]
   1292c:	str	r1, [fp, #-8]
   12930:	mov	r0, #0
   12934:	str	r0, [fp, #-12]
   12938:	mov	r1, #1
   1293c:	str	r1, [fp, #-16]
   12940:	str	r0, [fp, #-20]	; 0xffffffec
   12944:	str	r0, [fp, #-24]	; 0xffffffe8
   12948:	movw	r0, #0
   1294c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12950:	strb	r0, [fp, #-26]	; 0xffffffe6
   12954:	strb	r0, [fp, #-27]	; 0xffffffe5
   12958:	strb	r0, [fp, #-28]	; 0xffffffe4
   1295c:	ldr	r0, [fp, #-8]
   12960:	and	r0, r0, #1
   12964:	cmp	r0, #0
   12968:	beq	129ac <__assert_fail@plt+0x16cc>
   1296c:	ldr	r0, [fp, #-4]
   12970:	movw	r1, #54324	; 0xd434
   12974:	movt	r1, #1
   12978:	bl	1104c <strcmp@plt>
   1297c:	cmp	r0, #0
   12980:	bne	129ac <__assert_fail@plt+0x16cc>
   12984:	mov	r0, #0
   12988:	str	r0, [fp, #-20]	; 0xffffffec
   1298c:	mov	r0, #1
   12990:	str	r0, [fp, #-24]	; 0xffffffe8
   12994:	movw	r0, #1
   12998:	strb	r0, [fp, #-25]	; 0xffffffe7
   1299c:	strb	r0, [fp, #-27]	; 0xffffffe5
   129a0:	ldr	r0, [fp, #-4]
   129a4:	add	r0, r0, #1
   129a8:	str	r0, [fp, #-4]
   129ac:	b	129b0 <__assert_fail@plt+0x16d0>
   129b0:	ldr	r0, [fp, #-4]
   129b4:	ldrb	r0, [r0]
   129b8:	cmp	r0, #45	; 0x2d
   129bc:	bne	12b10 <__assert_fail@plt+0x1830>
   129c0:	movw	r0, #0
   129c4:	strb	r0, [fp, #-28]	; 0xffffffe4
   129c8:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   129cc:	tst	r0, #1
   129d0:	beq	12a2c <__assert_fail@plt+0x174c>
   129d4:	b	129d8 <__assert_fail@plt+0x16f8>
   129d8:	ldr	r0, [fp, #-8]
   129dc:	and	r0, r0, #4
   129e0:	cmp	r0, #0
   129e4:	beq	129fc <__assert_fail@plt+0x171c>
   129e8:	movw	r0, #54168	; 0xd398
   129ec:	movt	r0, #1
   129f0:	bl	111b4 <gettext@plt>
   129f4:	str	r0, [fp, #-48]	; 0xffffffd0
   129f8:	b	12a0c <__assert_fail@plt+0x172c>
   129fc:	movw	r0, #54200	; 0xd3b8
   12a00:	movt	r0, #1
   12a04:	bl	111b4 <gettext@plt>
   12a08:	str	r0, [fp, #-48]	; 0xffffffd0
   12a0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a10:	movw	r1, #0
   12a14:	str	r0, [fp, #-52]	; 0xffffffcc
   12a18:	mov	r0, r1
   12a1c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12a20:	bl	11154 <error@plt>
   12a24:	movw	r0, #1
   12a28:	bl	113dc <__assert_fail@plt+0xfc>
   12a2c:	movw	r0, #1
   12a30:	strb	r0, [fp, #-27]	; 0xffffffe5
   12a34:	ldr	r0, [fp, #-4]
   12a38:	add	r0, r0, #1
   12a3c:	str	r0, [fp, #-4]
   12a40:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12a44:	tst	r0, #1
   12a48:	beq	12abc <__assert_fail@plt+0x17dc>
   12a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a54:	orr	r0, r0, r1
   12a58:	cmp	r0, #0
   12a5c:	bne	12abc <__assert_fail@plt+0x17dc>
   12a60:	b	12a64 <__assert_fail@plt+0x1784>
   12a64:	b	12a68 <__assert_fail@plt+0x1788>
   12a68:	ldr	r0, [fp, #-8]
   12a6c:	and	r0, r0, #4
   12a70:	cmp	r0, #0
   12a74:	beq	12a8c <__assert_fail@plt+0x17ac>
   12a78:	movw	r0, #54220	; 0xd3cc
   12a7c:	movt	r0, #1
   12a80:	bl	111b4 <gettext@plt>
   12a84:	str	r0, [fp, #-56]	; 0xffffffc8
   12a88:	b	12a9c <__assert_fail@plt+0x17bc>
   12a8c:	movw	r0, #54265	; 0xd3f9
   12a90:	movt	r0, #1
   12a94:	bl	111b4 <gettext@plt>
   12a98:	str	r0, [fp, #-56]	; 0xffffffc8
   12a9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12aa0:	movw	r1, #0
   12aa4:	str	r0, [fp, #-60]	; 0xffffffc4
   12aa8:	mov	r0, r1
   12aac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12ab0:	bl	11154 <error@plt>
   12ab4:	movw	r0, #1
   12ab8:	bl	113dc <__assert_fail@plt+0xfc>
   12abc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12ac0:	tst	r0, #1
   12ac4:	beq	12adc <__assert_fail@plt+0x17fc>
   12ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12acc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ad0:	str	r0, [fp, #-64]	; 0xffffffc0
   12ad4:	str	r1, [fp, #-68]	; 0xffffffbc
   12ad8:	b	12af0 <__assert_fail@plt+0x1810>
   12adc:	mov	r0, #0
   12ae0:	mov	r1, #1
   12ae4:	str	r1, [fp, #-64]	; 0xffffffc0
   12ae8:	str	r0, [fp, #-68]	; 0xffffffbc
   12aec:	b	12af0 <__assert_fail@plt+0x1810>
   12af0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12af4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12af8:	str	r1, [fp, #-16]
   12afc:	str	r0, [fp, #-12]
   12b00:	mov	r0, #0
   12b04:	str	r0, [fp, #-20]	; 0xffffffec
   12b08:	str	r0, [fp, #-24]	; 0xffffffe8
   12b0c:	b	12fd8 <__assert_fail@plt+0x1cf8>
   12b10:	ldr	r0, [fp, #-4]
   12b14:	ldrb	r0, [r0]
   12b18:	cmp	r0, #44	; 0x2c
   12b1c:	beq	12b6c <__assert_fail@plt+0x188c>
   12b20:	bl	1119c <__ctype_b_loc@plt>
   12b24:	ldr	r0, [r0]
   12b28:	ldr	lr, [fp, #-4]
   12b2c:	ldrb	lr, [lr]
   12b30:	str	r0, [fp, #-72]	; 0xffffffb8
   12b34:	mov	r0, lr
   12b38:	bl	132cc <__assert_fail@plt+0x1fec>
   12b3c:	mov	lr, r0
   12b40:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12b44:	add	r0, r1, r0, lsl #1
   12b48:	ldrh	r0, [r0]
   12b4c:	and	r0, r0, #1
   12b50:	cmp	r0, #0
   12b54:	str	lr, [fp, #-76]	; 0xffffffb4
   12b58:	bne	12b6c <__assert_fail@plt+0x188c>
   12b5c:	ldr	r0, [fp, #-4]
   12b60:	ldrb	r0, [r0]
   12b64:	cmp	r0, #0
   12b68:	bne	12d64 <__assert_fail@plt+0x1a84>
   12b6c:	movw	r0, #0
   12b70:	strb	r0, [fp, #-28]	; 0xffffffe4
   12b74:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   12b78:	tst	r0, #1
   12b7c:	beq	12c9c <__assert_fail@plt+0x19bc>
   12b80:	movw	r0, #0
   12b84:	strb	r0, [fp, #-27]	; 0xffffffe5
   12b88:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12b8c:	tst	r0, #1
   12b90:	bne	12bf8 <__assert_fail@plt+0x1918>
   12b94:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   12b98:	tst	r0, #1
   12b9c:	bne	12bf8 <__assert_fail@plt+0x1918>
   12ba0:	ldr	r0, [fp, #-8]
   12ba4:	and	r0, r0, #1
   12ba8:	cmp	r0, #0
   12bac:	beq	12bc4 <__assert_fail@plt+0x18e4>
   12bb0:	mov	r0, #0
   12bb4:	str	r0, [fp, #-12]
   12bb8:	mov	r0, #1
   12bbc:	str	r0, [fp, #-16]
   12bc0:	b	12bf4 <__assert_fail@plt+0x1914>
   12bc4:	b	12bc8 <__assert_fail@plt+0x18e8>
   12bc8:	movw	r0, #54292	; 0xd414
   12bcc:	movt	r0, #1
   12bd0:	bl	111b4 <gettext@plt>
   12bd4:	movw	lr, #0
   12bd8:	str	r0, [fp, #-80]	; 0xffffffb0
   12bdc:	mov	r0, lr
   12be0:	mov	r1, lr
   12be4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12be8:	bl	11154 <error@plt>
   12bec:	movw	r0, #1
   12bf0:	bl	113dc <__assert_fail@plt+0xfc>
   12bf4:	b	12bf8 <__assert_fail@plt+0x1918>
   12bf8:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   12bfc:	tst	r0, #1
   12c00:	bne	12c20 <__assert_fail@plt+0x1940>
   12c04:	ldr	r0, [fp, #-16]
   12c08:	ldr	r1, [fp, #-12]
   12c0c:	mvn	r2, #0
   12c10:	str	r2, [fp, #-84]	; 0xffffffac
   12c14:	ldr	r3, [fp, #-84]	; 0xffffffac
   12c18:	bl	132e0 <__assert_fail@plt+0x2000>
   12c1c:	b	12c8c <__assert_fail@plt+0x19ac>
   12c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c24:	ldr	r1, [fp, #-20]	; 0xffffffec
   12c28:	ldr	r2, [fp, #-16]
   12c2c:	ldr	r3, [fp, #-12]
   12c30:	subs	r0, r0, r2
   12c34:	sbcs	r1, r1, r3
   12c38:	str	r0, [fp, #-88]	; 0xffffffa8
   12c3c:	str	r1, [fp, #-92]	; 0xffffffa4
   12c40:	bcs	12c78 <__assert_fail@plt+0x1998>
   12c44:	b	12c48 <__assert_fail@plt+0x1968>
   12c48:	b	12c4c <__assert_fail@plt+0x196c>
   12c4c:	movw	r0, #54326	; 0xd436
   12c50:	movt	r0, #1
   12c54:	bl	111b4 <gettext@plt>
   12c58:	movw	lr, #0
   12c5c:	str	r0, [fp, #-96]	; 0xffffffa0
   12c60:	mov	r0, lr
   12c64:	mov	r1, lr
   12c68:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12c6c:	bl	11154 <error@plt>
   12c70:	movw	r0, #1
   12c74:	bl	113dc <__assert_fail@plt+0xfc>
   12c78:	ldr	r0, [fp, #-16]
   12c7c:	ldr	r1, [fp, #-12]
   12c80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c88:	bl	132e0 <__assert_fail@plt+0x2000>
   12c8c:	mov	r0, #0
   12c90:	str	r0, [fp, #-20]	; 0xffffffec
   12c94:	str	r0, [fp, #-24]	; 0xffffffe8
   12c98:	b	12d34 <__assert_fail@plt+0x1a54>
   12c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ca4:	orr	r0, r0, r1
   12ca8:	cmp	r0, #0
   12cac:	bne	12d0c <__assert_fail@plt+0x1a2c>
   12cb0:	b	12cb4 <__assert_fail@plt+0x19d4>
   12cb4:	b	12cb8 <__assert_fail@plt+0x19d8>
   12cb8:	ldr	r0, [fp, #-8]
   12cbc:	and	r0, r0, #4
   12cc0:	cmp	r0, #0
   12cc4:	beq	12cdc <__assert_fail@plt+0x19fc>
   12cc8:	movw	r0, #54220	; 0xd3cc
   12ccc:	movt	r0, #1
   12cd0:	bl	111b4 <gettext@plt>
   12cd4:	str	r0, [sp, #100]	; 0x64
   12cd8:	b	12cec <__assert_fail@plt+0x1a0c>
   12cdc:	movw	r0, #54265	; 0xd3f9
   12ce0:	movt	r0, #1
   12ce4:	bl	111b4 <gettext@plt>
   12ce8:	str	r0, [sp, #100]	; 0x64
   12cec:	ldr	r0, [sp, #100]	; 0x64
   12cf0:	movw	r1, #0
   12cf4:	str	r0, [sp, #96]	; 0x60
   12cf8:	mov	r0, r1
   12cfc:	ldr	r2, [sp, #96]	; 0x60
   12d00:	bl	11154 <error@plt>
   12d04:	movw	r0, #1
   12d08:	bl	113dc <__assert_fail@plt+0xfc>
   12d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d10:	ldr	r1, [fp, #-20]	; 0xffffffec
   12d14:	str	r0, [sp, #92]	; 0x5c
   12d18:	str	r1, [sp, #88]	; 0x58
   12d1c:	ldr	r2, [sp, #92]	; 0x5c
   12d20:	ldr	r3, [sp, #88]	; 0x58
   12d24:	bl	132e0 <__assert_fail@plt+0x2000>
   12d28:	mov	r0, #0
   12d2c:	str	r0, [fp, #-20]	; 0xffffffec
   12d30:	str	r0, [fp, #-24]	; 0xffffffe8
   12d34:	ldr	r0, [fp, #-4]
   12d38:	ldrb	r0, [r0]
   12d3c:	cmp	r0, #0
   12d40:	bne	12d48 <__assert_fail@plt+0x1a68>
   12d44:	b	12fdc <__assert_fail@plt+0x1cfc>
   12d48:	ldr	r0, [fp, #-4]
   12d4c:	add	r0, r0, #1
   12d50:	str	r0, [fp, #-4]
   12d54:	movw	r0, #0
   12d58:	strb	r0, [fp, #-25]	; 0xffffffe7
   12d5c:	strb	r0, [fp, #-26]	; 0xffffffe6
   12d60:	b	12fd4 <__assert_fail@plt+0x1cf4>
   12d64:	ldr	r0, [fp, #-4]
   12d68:	ldrb	r0, [r0]
   12d6c:	sub	r0, r0, #48	; 0x30
   12d70:	cmp	r0, #9
   12d74:	bhi	12f68 <__assert_fail@plt+0x1c88>
   12d78:	ldrb	r0, [fp, #-28]	; 0xffffffe4
   12d7c:	tst	r0, #1
   12d80:	beq	12d9c <__assert_fail@plt+0x1abc>
   12d84:	movw	r0, #57748	; 0xe194
   12d88:	movt	r0, #2
   12d8c:	ldr	r0, [r0]
   12d90:	movw	r1, #0
   12d94:	cmp	r0, r1
   12d98:	bne	12dac <__assert_fail@plt+0x1acc>
   12d9c:	ldr	r0, [fp, #-4]
   12da0:	movw	r1, #57748	; 0xe194
   12da4:	movt	r1, #2
   12da8:	str	r0, [r1]
   12dac:	movw	r0, #1
   12db0:	strb	r0, [fp, #-28]	; 0xffffffe4
   12db4:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   12db8:	tst	r0, #1
   12dbc:	beq	12dcc <__assert_fail@plt+0x1aec>
   12dc0:	movw	r0, #1
   12dc4:	strb	r0, [fp, #-26]	; 0xffffffe6
   12dc8:	b	12dd4 <__assert_fail@plt+0x1af4>
   12dcc:	movw	r0, #1
   12dd0:	strb	r0, [fp, #-25]	; 0xffffffe7
   12dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ddc:	movw	r2, #39321	; 0x9999
   12de0:	movt	r2, #39321	; 0x9999
   12de4:	subs	r0, r2, r0
   12de8:	movw	r2, #39321	; 0x9999
   12dec:	movt	r2, #6553	; 0x1999
   12df0:	sbcs	r1, r2, r1
   12df4:	str	r0, [sp, #84]	; 0x54
   12df8:	str	r1, [sp, #80]	; 0x50
   12dfc:	bcc	12e48 <__assert_fail@plt+0x1b68>
   12e00:	b	12e04 <__assert_fail@plt+0x1b24>
   12e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e08:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e0c:	mov	r2, #10
   12e10:	umull	r2, r3, r0, r2
   12e14:	add	ip, r1, r1, lsl #2
   12e18:	add	r3, r3, ip, lsl #1
   12e1c:	ldr	ip, [fp, #-4]
   12e20:	ldrb	ip, [ip]
   12e24:	sub	ip, ip, #48	; 0x30
   12e28:	adds	r2, r2, ip
   12e2c:	adc	r3, r3, ip, asr #31
   12e30:	subs	r0, r2, r0
   12e34:	sbcs	r1, r3, r1
   12e38:	str	r0, [sp, #76]	; 0x4c
   12e3c:	str	r1, [sp, #72]	; 0x48
   12e40:	bcs	12e54 <__assert_fail@plt+0x1b74>
   12e44:	b	12e48 <__assert_fail@plt+0x1b68>
   12e48:	movw	r0, #0
   12e4c:	str	r0, [sp, #68]	; 0x44
   12e50:	b	12e90 <__assert_fail@plt+0x1bb0>
   12e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e58:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e5c:	mov	r2, #10
   12e60:	umull	r0, r2, r0, r2
   12e64:	add	r1, r1, r1, lsl #2
   12e68:	add	r1, r2, r1, lsl #1
   12e6c:	ldr	r2, [fp, #-4]
   12e70:	ldrb	r2, [r2]
   12e74:	sub	r2, r2, #48	; 0x30
   12e78:	adds	r0, r0, r2
   12e7c:	adc	r1, r1, r2, asr #31
   12e80:	str	r0, [fp, #-24]	; 0xffffffe8
   12e84:	str	r1, [fp, #-20]	; 0xffffffec
   12e88:	movw	r0, #1
   12e8c:	str	r0, [sp, #68]	; 0x44
   12e90:	ldr	r0, [sp, #68]	; 0x44
   12e94:	cmp	r0, #0
   12e98:	beq	12eb4 <__assert_fail@plt+0x1bd4>
   12e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ea4:	and	r0, r0, r1
   12ea8:	cmn	r0, #1
   12eac:	bne	12f58 <__assert_fail@plt+0x1c78>
   12eb0:	b	12eb4 <__assert_fail@plt+0x1bd4>
   12eb4:	movw	r0, #57748	; 0xe194
   12eb8:	movt	r0, #2
   12ebc:	ldr	r0, [r0]
   12ec0:	movw	r1, #54351	; 0xd44f
   12ec4:	movt	r1, #1
   12ec8:	bl	112d4 <strspn@plt>
   12ecc:	str	r0, [fp, #-32]	; 0xffffffe0
   12ed0:	movw	r0, #57748	; 0xe194
   12ed4:	movt	r0, #2
   12ed8:	ldr	r0, [r0]
   12edc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12ee0:	bl	19fe8 <__assert_fail@plt+0x8d08>
   12ee4:	str	r0, [fp, #-36]	; 0xffffffdc
   12ee8:	ldr	r0, [fp, #-8]
   12eec:	and	r0, r0, #4
   12ef0:	cmp	r0, #0
   12ef4:	beq	12f0c <__assert_fail@plt+0x1c2c>
   12ef8:	movw	r0, #54362	; 0xd45a
   12efc:	movt	r0, #1
   12f00:	bl	111b4 <gettext@plt>
   12f04:	str	r0, [sp, #64]	; 0x40
   12f08:	b	12f1c <__assert_fail@plt+0x1c3c>
   12f0c:	movw	r0, #54400	; 0xd480
   12f10:	movt	r0, #1
   12f14:	bl	111b4 <gettext@plt>
   12f18:	str	r0, [sp, #64]	; 0x40
   12f1c:	ldr	r0, [sp, #64]	; 0x40
   12f20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f24:	str	r0, [sp, #60]	; 0x3c
   12f28:	mov	r0, r1
   12f2c:	bl	16850 <__assert_fail@plt+0x5570>
   12f30:	movw	r1, #0
   12f34:	str	r0, [sp, #56]	; 0x38
   12f38:	mov	r0, r1
   12f3c:	ldr	r2, [sp, #60]	; 0x3c
   12f40:	ldr	r3, [sp, #56]	; 0x38
   12f44:	bl	11154 <error@plt>
   12f48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f4c:	bl	1396c <__assert_fail@plt+0x268c>
   12f50:	movw	r0, #1
   12f54:	bl	113dc <__assert_fail@plt+0xfc>
   12f58:	ldr	r0, [fp, #-4]
   12f5c:	add	r0, r0, #1
   12f60:	str	r0, [fp, #-4]
   12f64:	b	12fd0 <__assert_fail@plt+0x1cf0>
   12f68:	ldr	r0, [fp, #-8]
   12f6c:	and	r0, r0, #4
   12f70:	cmp	r0, #0
   12f74:	beq	12f8c <__assert_fail@plt+0x1cac>
   12f78:	movw	r0, #54429	; 0xd49d
   12f7c:	movt	r0, #1
   12f80:	bl	111b4 <gettext@plt>
   12f84:	str	r0, [sp, #52]	; 0x34
   12f88:	b	12f9c <__assert_fail@plt+0x1cbc>
   12f8c:	movw	r0, #54464	; 0xd4c0
   12f90:	movt	r0, #1
   12f94:	bl	111b4 <gettext@plt>
   12f98:	str	r0, [sp, #52]	; 0x34
   12f9c:	ldr	r0, [sp, #52]	; 0x34
   12fa0:	ldr	r1, [fp, #-4]
   12fa4:	str	r0, [sp, #48]	; 0x30
   12fa8:	mov	r0, r1
   12fac:	bl	16850 <__assert_fail@plt+0x5570>
   12fb0:	movw	r1, #0
   12fb4:	str	r0, [sp, #44]	; 0x2c
   12fb8:	mov	r0, r1
   12fbc:	ldr	r2, [sp, #48]	; 0x30
   12fc0:	ldr	r3, [sp, #44]	; 0x2c
   12fc4:	bl	11154 <error@plt>
   12fc8:	movw	r0, #1
   12fcc:	bl	113dc <__assert_fail@plt+0xfc>
   12fd0:	b	12fd4 <__assert_fail@plt+0x1cf4>
   12fd4:	b	12fd8 <__assert_fail@plt+0x1cf8>
   12fd8:	b	129b0 <__assert_fail@plt+0x16d0>
   12fdc:	movw	r0, #58080	; 0xe2e0
   12fe0:	movt	r0, #2
   12fe4:	ldr	r0, [r0]
   12fe8:	cmp	r0, #0
   12fec:	bne	13048 <__assert_fail@plt+0x1d68>
   12ff0:	b	12ff4 <__assert_fail@plt+0x1d14>
   12ff4:	ldr	r0, [fp, #-8]
   12ff8:	and	r0, r0, #4
   12ffc:	cmp	r0, #0
   13000:	beq	13018 <__assert_fail@plt+0x1d38>
   13004:	movw	r0, #54487	; 0xd4d7
   13008:	movt	r0, #1
   1300c:	bl	111b4 <gettext@plt>
   13010:	str	r0, [sp, #40]	; 0x28
   13014:	b	13028 <__assert_fail@plt+0x1d48>
   13018:	movw	r0, #54528	; 0xd500
   1301c:	movt	r0, #1
   13020:	bl	111b4 <gettext@plt>
   13024:	str	r0, [sp, #40]	; 0x28
   13028:	ldr	r0, [sp, #40]	; 0x28
   1302c:	movw	r1, #0
   13030:	str	r0, [sp, #36]	; 0x24
   13034:	mov	r0, r1
   13038:	ldr	r2, [sp, #36]	; 0x24
   1303c:	bl	11154 <error@plt>
   13040:	movw	r0, #1
   13044:	bl	113dc <__assert_fail@plt+0xfc>
   13048:	movw	r0, #58076	; 0xe2dc
   1304c:	movt	r0, #2
   13050:	ldr	r0, [r0]
   13054:	movw	r1, #58080	; 0xe2e0
   13058:	movt	r1, #2
   1305c:	ldr	r1, [r1]
   13060:	movw	r2, #16
   13064:	movw	r3, #13220	; 0x33a4
   13068:	movt	r3, #1
   1306c:	bl	11280 <qsort@plt>
   13070:	movw	r0, #0
   13074:	str	r0, [fp, #-40]	; 0xffffffd8
   13078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1307c:	movw	r1, #58080	; 0xe2e0
   13080:	movt	r1, #2
   13084:	ldr	r1, [r1]
   13088:	cmp	r0, r1
   1308c:	bcs	1323c <__assert_fail@plt+0x1f5c>
   13090:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13094:	add	r0, r0, #1
   13098:	str	r0, [fp, #-44]	; 0xffffffd4
   1309c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130a0:	movw	r1, #58080	; 0xe2e0
   130a4:	movt	r1, #2
   130a8:	ldr	r1, [r1]
   130ac:	cmp	r0, r1
   130b0:	bcs	13228 <__assert_fail@plt+0x1f48>
   130b4:	movw	r0, #58076	; 0xe2dc
   130b8:	movt	r0, #2
   130bc:	ldr	r0, [r0]
   130c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130c4:	mov	r2, r0
   130c8:	ldr	r1, [r2, r1, lsl #4]!
   130cc:	ldr	r2, [r2, #4]
   130d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   130d4:	add	r0, r0, r3, lsl #4
   130d8:	ldr	r3, [r0, #8]
   130dc:	ldr	r0, [r0, #12]
   130e0:	subs	r1, r3, r1
   130e4:	sbcs	r0, r0, r2
   130e8:	str	r1, [sp, #32]
   130ec:	str	r0, [sp, #28]
   130f0:	bcc	13210 <__assert_fail@plt+0x1f30>
   130f4:	b	130f8 <__assert_fail@plt+0x1e18>
   130f8:	movw	r0, #58076	; 0xe2dc
   130fc:	movt	r0, #2
   13100:	ldr	r0, [r0]
   13104:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13108:	add	r1, r0, r1, lsl #4
   1310c:	ldr	r2, [r1, #8]
   13110:	ldr	r1, [r1, #12]
   13114:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13118:	add	r0, r0, r3, lsl #4
   1311c:	ldr	r3, [r0, #8]
   13120:	ldr	r0, [r0, #12]
   13124:	subs	r2, r3, r2
   13128:	sbcs	r0, r0, r1
   1312c:	str	r2, [sp, #24]
   13130:	str	r0, [sp, #20]
   13134:	bcs	13164 <__assert_fail@plt+0x1e84>
   13138:	b	1313c <__assert_fail@plt+0x1e5c>
   1313c:	movw	r0, #58076	; 0xe2dc
   13140:	movt	r0, #2
   13144:	ldr	r0, [r0]
   13148:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1314c:	add	r0, r0, r1, lsl #4
   13150:	ldr	r1, [r0, #8]
   13154:	ldr	r0, [r0, #12]
   13158:	str	r1, [sp, #16]
   1315c:	str	r0, [sp, #12]
   13160:	b	1318c <__assert_fail@plt+0x1eac>
   13164:	movw	r0, #58076	; 0xe2dc
   13168:	movt	r0, #2
   1316c:	ldr	r0, [r0]
   13170:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13174:	add	r0, r0, r1, lsl #4
   13178:	ldr	r1, [r0, #8]
   1317c:	ldr	r0, [r0, #12]
   13180:	str	r1, [sp, #16]
   13184:	str	r0, [sp, #12]
   13188:	b	1318c <__assert_fail@plt+0x1eac>
   1318c:	ldr	r0, [sp, #12]
   13190:	ldr	r1, [sp, #16]
   13194:	movw	r2, #58076	; 0xe2dc
   13198:	movt	r2, #2
   1319c:	ldr	r3, [r2]
   131a0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   131a4:	add	r3, r3, ip, lsl #4
   131a8:	str	r0, [r3, #12]
   131ac:	str	r1, [r3, #8]
   131b0:	ldr	r0, [r2]
   131b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   131b8:	add	r0, r0, r1, lsl #4
   131bc:	add	r2, r0, #16
   131c0:	movw	r3, #58080	; 0xe2e0
   131c4:	movt	r3, #2
   131c8:	ldr	r3, [r3]
   131cc:	sub	r1, r3, r1
   131d0:	sub	r1, r1, #1
   131d4:	lsl	r1, r1, #4
   131d8:	str	r1, [sp, #8]
   131dc:	mov	r1, r2
   131e0:	ldr	r2, [sp, #8]
   131e4:	bl	1107c <memmove@plt>
   131e8:	movw	r0, #58080	; 0xe2e0
   131ec:	movt	r0, #2
   131f0:	ldr	r1, [r0]
   131f4:	mvn	r2, #0
   131f8:	add	r1, r1, r2
   131fc:	str	r1, [r0]
   13200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13204:	add	r0, r0, r2
   13208:	str	r0, [fp, #-44]	; 0xffffffd4
   1320c:	b	13214 <__assert_fail@plt+0x1f34>
   13210:	b	13228 <__assert_fail@plt+0x1f48>
   13214:	b	13218 <__assert_fail@plt+0x1f38>
   13218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1321c:	add	r0, r0, #1
   13220:	str	r0, [fp, #-44]	; 0xffffffd4
   13224:	b	1309c <__assert_fail@plt+0x1dbc>
   13228:	b	1322c <__assert_fail@plt+0x1f4c>
   1322c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13230:	add	r0, r0, #1
   13234:	str	r0, [fp, #-40]	; 0xffffffd8
   13238:	b	13078 <__assert_fail@plt+0x1d98>
   1323c:	ldr	r0, [fp, #-8]
   13240:	and	r0, r0, #2
   13244:	cmp	r0, #0
   13248:	beq	13250 <__assert_fail@plt+0x1f70>
   1324c:	bl	1340c <__assert_fail@plt+0x212c>
   13250:	movw	r0, #58080	; 0xe2e0
   13254:	movt	r0, #2
   13258:	ldr	r1, [r0]
   1325c:	add	r1, r1, #1
   13260:	str	r1, [r0]
   13264:	movw	r1, #58076	; 0xe2dc
   13268:	movt	r1, #2
   1326c:	ldr	r2, [r1]
   13270:	ldr	r3, [r0]
   13274:	lsl	r3, r3, #4
   13278:	str	r0, [sp, #4]
   1327c:	mov	r0, r2
   13280:	str	r1, [sp]
   13284:	mov	r1, r3
   13288:	bl	17334 <__assert_fail@plt+0x6054>
   1328c:	ldr	r1, [sp]
   13290:	str	r0, [r1]
   13294:	ldr	r0, [r1]
   13298:	ldr	r2, [sp, #4]
   1329c:	ldr	r3, [r2]
   132a0:	add	r0, r0, r3, lsl #4
   132a4:	mvn	r3, #0
   132a8:	str	r3, [r0, #-4]
   132ac:	str	r3, [r0, #-8]
   132b0:	ldr	r0, [r1]
   132b4:	ldr	lr, [r2]
   132b8:	add	r0, r0, lr, lsl #4
   132bc:	str	r3, [r0, #-12]
   132c0:	str	r3, [r0, #-16]
   132c4:	mov	sp, fp
   132c8:	pop	{fp, pc}
   132cc:	sub	sp, sp, #4
   132d0:	strb	r0, [sp, #3]
   132d4:	ldrb	r0, [sp, #3]
   132d8:	add	sp, sp, #4
   132dc:	bx	lr
   132e0:	push	{fp, lr}
   132e4:	mov	fp, sp
   132e8:	sub	sp, sp, #16
   132ec:	str	r0, [sp, #8]
   132f0:	str	r1, [sp, #12]
   132f4:	str	r3, [sp, #4]
   132f8:	str	r2, [sp]
   132fc:	movw	r0, #58080	; 0xe2e0
   13300:	movt	r0, #2
   13304:	ldr	r0, [r0]
   13308:	movw	r1, #57752	; 0xe198
   1330c:	movt	r1, #2
   13310:	ldr	r1, [r1]
   13314:	cmp	r0, r1
   13318:	bne	13344 <__assert_fail@plt+0x2064>
   1331c:	movw	r0, #58076	; 0xe2dc
   13320:	movt	r0, #2
   13324:	ldr	r0, [r0]
   13328:	movw	r1, #57752	; 0xe198
   1332c:	movt	r1, #2
   13330:	movw	r2, #16
   13334:	bl	17478 <__assert_fail@plt+0x6198>
   13338:	movw	r1, #58076	; 0xe2dc
   1333c:	movt	r1, #2
   13340:	str	r0, [r1]
   13344:	ldr	r0, [sp, #8]
   13348:	ldr	r1, [sp, #12]
   1334c:	movw	r2, #58076	; 0xe2dc
   13350:	movt	r2, #2
   13354:	ldr	r3, [r2]
   13358:	movw	ip, #58080	; 0xe2e0
   1335c:	movt	ip, #2
   13360:	ldr	lr, [ip]
   13364:	str	r0, [r3, lr, lsl #4]!
   13368:	str	r1, [r3, #4]
   1336c:	ldr	r0, [sp]
   13370:	ldr	r1, [sp, #4]
   13374:	ldr	r2, [r2]
   13378:	ldr	r3, [ip]
   1337c:	add	r2, r2, r3, lsl #4
   13380:	str	r1, [r2, #12]
   13384:	str	r0, [r2, #8]
   13388:	movw	r0, #58080	; 0xe2e0
   1338c:	movt	r0, #2
   13390:	ldr	r1, [r0]
   13394:	add	r1, r1, #1
   13398:	str	r1, [r0]
   1339c:	mov	sp, fp
   133a0:	pop	{fp, pc}
   133a4:	sub	sp, sp, #20
   133a8:	str	r0, [sp, #16]
   133ac:	str	r1, [sp, #12]
   133b0:	ldr	r0, [sp, #16]
   133b4:	ldr	r0, [r0]
   133b8:	str	r0, [sp, #8]
   133bc:	ldr	r0, [sp, #12]
   133c0:	ldr	r0, [r0]
   133c4:	str	r0, [sp, #4]
   133c8:	ldr	r0, [sp, #8]
   133cc:	ldr	r1, [sp, #4]
   133d0:	cmp	r0, r1
   133d4:	bge	133e4 <__assert_fail@plt+0x2104>
   133d8:	mvn	r0, #0
   133dc:	str	r0, [sp]
   133e0:	b	13400 <__assert_fail@plt+0x2120>
   133e4:	ldr	r0, [sp, #8]
   133e8:	ldr	r1, [sp, #4]
   133ec:	cmp	r0, r1
   133f0:	movw	r0, #0
   133f4:	movgt	r0, #1
   133f8:	and	r0, r0, #1
   133fc:	str	r0, [sp]
   13400:	ldr	r0, [sp]
   13404:	add	sp, sp, #20
   13408:	bx	lr
   1340c:	push	{fp, lr}
   13410:	mov	fp, sp
   13414:	sub	sp, sp, #40	; 0x28
   13418:	movw	r0, #58076	; 0xe2dc
   1341c:	movt	r0, #2
   13420:	ldr	r1, [r0]
   13424:	str	r1, [fp, #-4]
   13428:	movw	r1, #58080	; 0xe2e0
   1342c:	movt	r1, #2
   13430:	ldr	r2, [r1]
   13434:	str	r2, [fp, #-8]
   13438:	mov	r2, #0
   1343c:	str	r2, [r0]
   13440:	str	r2, [r1]
   13444:	movw	r0, #57752	; 0xe198
   13448:	movt	r0, #2
   1344c:	str	r2, [r0]
   13450:	ldr	r0, [fp, #-4]
   13454:	ldr	r1, [r0]
   13458:	ldr	r0, [r0, #4]
   1345c:	subs	r1, r1, #2
   13460:	sbcs	r0, r0, #0
   13464:	str	r1, [fp, #-16]
   13468:	str	r0, [sp, #20]
   1346c:	bcc	13494 <__assert_fail@plt+0x21b4>
   13470:	b	13474 <__assert_fail@plt+0x2194>
   13474:	ldr	r0, [fp, #-4]
   13478:	ldr	r1, [r0]
   1347c:	ldr	r0, [r0, #4]
   13480:	subs	r2, r1, #1
   13484:	sbc	r3, r0, #0
   13488:	mov	r0, #1
   1348c:	mov	r1, #0
   13490:	bl	132e0 <__assert_fail@plt+0x2000>
   13494:	movw	r0, #1
   13498:	str	r0, [fp, #-12]
   1349c:	ldr	r0, [fp, #-12]
   134a0:	ldr	r1, [fp, #-8]
   134a4:	cmp	r0, r1
   134a8:	bcs	1353c <__assert_fail@plt+0x225c>
   134ac:	ldr	r0, [fp, #-4]
   134b0:	ldr	r1, [fp, #-12]
   134b4:	ldr	r1, [r0, r1, lsl #4]!
   134b8:	ldr	r2, [r0, #-8]
   134bc:	ldr	r3, [r0, #-4]
   134c0:	ldr	r0, [r0, #4]
   134c4:	adds	r2, r2, #1
   134c8:	adc	r3, r3, #0
   134cc:	eor	r1, r2, r1
   134d0:	eor	r0, r3, r0
   134d4:	orr	r0, r1, r0
   134d8:	cmp	r0, #0
   134dc:	bne	134e8 <__assert_fail@plt+0x2208>
   134e0:	b	134e4 <__assert_fail@plt+0x2204>
   134e4:	b	1352c <__assert_fail@plt+0x224c>
   134e8:	ldr	r0, [fp, #-4]
   134ec:	ldr	r1, [fp, #-12]
   134f0:	ldr	r1, [r0, r1, lsl #4]!
   134f4:	ldr	r2, [r0, #-8]
   134f8:	ldr	r3, [r0, #-4]
   134fc:	ldr	r0, [r0, #4]
   13500:	adds	r2, r2, #1
   13504:	adc	r3, r3, #0
   13508:	subs	r1, r1, #1
   1350c:	sbc	r0, r0, #0
   13510:	str	r0, [sp, #16]
   13514:	mov	r0, r2
   13518:	str	r1, [sp, #12]
   1351c:	mov	r1, r3
   13520:	ldr	r2, [sp, #12]
   13524:	ldr	r3, [sp, #16]
   13528:	bl	132e0 <__assert_fail@plt+0x2000>
   1352c:	ldr	r0, [fp, #-12]
   13530:	add	r0, r0, #1
   13534:	str	r0, [fp, #-12]
   13538:	b	1349c <__assert_fail@plt+0x21bc>
   1353c:	ldr	r0, [fp, #-4]
   13540:	ldr	r1, [fp, #-8]
   13544:	add	r0, r0, r1, lsl #4
   13548:	ldr	r1, [r0, #-8]
   1354c:	ldr	r0, [r0, #-4]
   13550:	and	r0, r1, r0
   13554:	cmn	r0, #1
   13558:	beq	13598 <__assert_fail@plt+0x22b8>
   1355c:	b	13560 <__assert_fail@plt+0x2280>
   13560:	ldr	r0, [fp, #-4]
   13564:	ldr	r1, [fp, #-8]
   13568:	add	r0, r0, r1, lsl #4
   1356c:	ldr	r1, [r0, #-8]
   13570:	ldr	r0, [r0, #-4]
   13574:	adds	r1, r1, #1
   13578:	adc	r0, r0, #0
   1357c:	mvn	r2, #0
   13580:	str	r0, [sp, #8]
   13584:	mov	r0, r1
   13588:	ldr	r1, [sp, #8]
   1358c:	str	r2, [sp, #4]
   13590:	ldr	r3, [sp, #4]
   13594:	bl	132e0 <__assert_fail@plt+0x2000>
   13598:	ldr	r0, [fp, #-4]
   1359c:	bl	1396c <__assert_fail@plt+0x268c>
   135a0:	mov	sp, fp
   135a4:	pop	{fp, pc}
   135a8:	sub	sp, sp, #4
   135ac:	str	r0, [sp]
   135b0:	ldr	r0, [sp]
   135b4:	movw	r1, #57756	; 0xe19c
   135b8:	movt	r1, #2
   135bc:	str	r0, [r1]
   135c0:	add	sp, sp, #4
   135c4:	bx	lr
   135c8:	sub	sp, sp, #4
   135cc:	and	r0, r0, #1
   135d0:	strb	r0, [sp, #3]
   135d4:	ldrb	r0, [sp, #3]
   135d8:	and	r0, r0, #1
   135dc:	movw	r1, #57760	; 0xe1a0
   135e0:	movt	r1, #2
   135e4:	strb	r0, [r1]
   135e8:	add	sp, sp, #4
   135ec:	bx	lr
   135f0:	push	{fp, lr}
   135f4:	mov	fp, sp
   135f8:	sub	sp, sp, #24
   135fc:	movw	r0, #57708	; 0xe16c
   13600:	movt	r0, #2
   13604:	ldr	r0, [r0]
   13608:	bl	1a330 <__assert_fail@plt+0x9050>
   1360c:	cmp	r0, #0
   13610:	beq	136e0 <__assert_fail@plt+0x2400>
   13614:	movw	r0, #57760	; 0xe1a0
   13618:	movt	r0, #2
   1361c:	ldrb	r0, [r0]
   13620:	tst	r0, #1
   13624:	beq	13638 <__assert_fail@plt+0x2358>
   13628:	bl	111e4 <__errno_location@plt>
   1362c:	ldr	r0, [r0]
   13630:	cmp	r0, #32
   13634:	beq	136e0 <__assert_fail@plt+0x2400>
   13638:	movw	r0, #54566	; 0xd526
   1363c:	movt	r0, #1
   13640:	bl	111b4 <gettext@plt>
   13644:	str	r0, [fp, #-4]
   13648:	movw	r0, #57756	; 0xe19c
   1364c:	movt	r0, #2
   13650:	ldr	r0, [r0]
   13654:	movw	lr, #0
   13658:	cmp	r0, lr
   1365c:	beq	136b4 <__assert_fail@plt+0x23d4>
   13660:	bl	111e4 <__errno_location@plt>
   13664:	ldr	r1, [r0]
   13668:	movw	r0, #57756	; 0xe19c
   1366c:	movt	r0, #2
   13670:	ldr	r0, [r0]
   13674:	str	r1, [fp, #-8]
   13678:	bl	165b4 <__assert_fail@plt+0x52d4>
   1367c:	ldr	r1, [fp, #-4]
   13680:	movw	lr, #0
   13684:	str	r0, [sp, #12]
   13688:	mov	r0, lr
   1368c:	ldr	lr, [fp, #-8]
   13690:	str	r1, [sp, #8]
   13694:	mov	r1, lr
   13698:	movw	r2, #54578	; 0xd532
   1369c:	movt	r2, #1
   136a0:	ldr	r3, [sp, #12]
   136a4:	ldr	ip, [sp, #8]
   136a8:	str	ip, [sp]
   136ac:	bl	11154 <error@plt>
   136b0:	b	136d0 <__assert_fail@plt+0x23f0>
   136b4:	bl	111e4 <__errno_location@plt>
   136b8:	ldr	r1, [r0]
   136bc:	ldr	r3, [fp, #-4]
   136c0:	movw	r0, #0
   136c4:	movw	r2, #54582	; 0xd536
   136c8:	movt	r2, #1
   136cc:	bl	11154 <error@plt>
   136d0:	movw	r0, #57612	; 0xe10c
   136d4:	movt	r0, #2
   136d8:	ldr	r0, [r0]
   136dc:	bl	110a0 <_exit@plt>
   136e0:	movw	r0, #57696	; 0xe160
   136e4:	movt	r0, #2
   136e8:	ldr	r0, [r0]
   136ec:	bl	1a330 <__assert_fail@plt+0x9050>
   136f0:	cmp	r0, #0
   136f4:	beq	13708 <__assert_fail@plt+0x2428>
   136f8:	movw	r0, #57612	; 0xe10c
   136fc:	movt	r0, #2
   13700:	ldr	r0, [r0]
   13704:	bl	110a0 <_exit@plt>
   13708:	mov	sp, fp
   1370c:	pop	{fp, pc}
   13710:	push	{r4, r5, fp, lr}
   13714:	add	fp, sp, #8
   13718:	sub	sp, sp, #48	; 0x30
   1371c:	ldr	r1, [fp, #12]
   13720:	ldr	ip, [fp, #8]
   13724:	ldr	lr, [fp, #16]
   13728:	str	r0, [fp, #-12]
   1372c:	str	r3, [fp, #-20]	; 0xffffffec
   13730:	str	r2, [fp, #-24]	; 0xffffffe8
   13734:	str	r1, [sp, #28]
   13738:	str	ip, [sp, #24]
   1373c:	ldr	r0, [fp, #-12]
   13740:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13744:	ldr	r3, [fp, #-20]	; 0xffffffec
   13748:	ldr	r1, [sp, #24]
   1374c:	ldr	ip, [sp, #28]
   13750:	ldr	r4, [fp, #16]
   13754:	mov	r5, sp
   13758:	str	r4, [r5, #8]
   1375c:	str	ip, [r5, #4]
   13760:	str	r1, [r5]
   13764:	str	lr, [sp, #20]
   13768:	bl	11058 <posix_fadvise64@plt>
   1376c:	str	r0, [sp, #16]
   13770:	sub	sp, fp, #8
   13774:	pop	{r4, r5, fp, pc}
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	sub	sp, sp, #24
   13784:	str	r0, [fp, #-4]
   13788:	str	r1, [fp, #-8]
   1378c:	ldr	r0, [fp, #-4]
   13790:	movw	r1, #0
   13794:	cmp	r0, r1
   13798:	beq	137c8 <__assert_fail@plt+0x24e8>
   1379c:	ldr	r0, [fp, #-4]
   137a0:	bl	11214 <fileno@plt>
   137a4:	ldr	lr, [fp, #-8]
   137a8:	mov	r1, sp
   137ac:	str	lr, [r1, #8]
   137b0:	mov	lr, #0
   137b4:	str	lr, [r1, #4]
   137b8:	str	lr, [r1]
   137bc:	mov	r2, lr
   137c0:	mov	r3, lr
   137c4:	bl	13710 <__assert_fail@plt+0x2430>
   137c8:	mov	sp, fp
   137cc:	pop	{fp, pc}
   137d0:	push	{fp, lr}
   137d4:	mov	fp, sp
   137d8:	sub	sp, sp, #32
   137dc:	str	r0, [fp, #-8]
   137e0:	movw	r0, #0
   137e4:	str	r0, [fp, #-12]
   137e8:	str	r0, [sp, #12]
   137ec:	ldr	r0, [fp, #-8]
   137f0:	bl	11214 <fileno@plt>
   137f4:	str	r0, [sp, #16]
   137f8:	ldr	r0, [sp, #16]
   137fc:	cmp	r0, #0
   13800:	bge	13814 <__assert_fail@plt+0x2534>
   13804:	ldr	r0, [fp, #-8]
   13808:	bl	1122c <fclose@plt>
   1380c:	str	r0, [fp, #-4]
   13810:	b	138b0 <__assert_fail@plt+0x25d0>
   13814:	ldr	r0, [fp, #-8]
   13818:	bl	11178 <__freading@plt>
   1381c:	cmp	r0, #0
   13820:	beq	13858 <__assert_fail@plt+0x2578>
   13824:	ldr	r0, [fp, #-8]
   13828:	bl	11214 <fileno@plt>
   1382c:	mov	lr, sp
   13830:	mov	r1, #1
   13834:	str	r1, [lr]
   13838:	mov	r1, #0
   1383c:	mov	r2, r1
   13840:	mov	r3, r1
   13844:	bl	1110c <lseek64@plt>
   13848:	and	r0, r0, r1
   1384c:	cmn	r0, #1
   13850:	beq	13874 <__assert_fail@plt+0x2594>
   13854:	b	13858 <__assert_fail@plt+0x2578>
   13858:	ldr	r0, [fp, #-8]
   1385c:	bl	138bc <__assert_fail@plt+0x25dc>
   13860:	cmp	r0, #0
   13864:	beq	13874 <__assert_fail@plt+0x2594>
   13868:	bl	111e4 <__errno_location@plt>
   1386c:	ldr	r0, [r0]
   13870:	str	r0, [fp, #-12]
   13874:	ldr	r0, [fp, #-8]
   13878:	bl	1122c <fclose@plt>
   1387c:	str	r0, [sp, #12]
   13880:	ldr	r0, [fp, #-12]
   13884:	cmp	r0, #0
   13888:	beq	138a8 <__assert_fail@plt+0x25c8>
   1388c:	ldr	r0, [fp, #-12]
   13890:	str	r0, [sp, #8]
   13894:	bl	111e4 <__errno_location@plt>
   13898:	ldr	lr, [sp, #8]
   1389c:	str	lr, [r0]
   138a0:	mvn	r0, #0
   138a4:	str	r0, [sp, #12]
   138a8:	ldr	r0, [sp, #12]
   138ac:	str	r0, [fp, #-4]
   138b0:	ldr	r0, [fp, #-4]
   138b4:	mov	sp, fp
   138b8:	pop	{fp, pc}
   138bc:	push	{fp, lr}
   138c0:	mov	fp, sp
   138c4:	sub	sp, sp, #8
   138c8:	str	r0, [sp]
   138cc:	ldr	r0, [sp]
   138d0:	movw	r1, #0
   138d4:	cmp	r0, r1
   138d8:	beq	138ec <__assert_fail@plt+0x260c>
   138dc:	ldr	r0, [sp]
   138e0:	bl	11178 <__freading@plt>
   138e4:	cmp	r0, #0
   138e8:	bne	138fc <__assert_fail@plt+0x261c>
   138ec:	ldr	r0, [sp]
   138f0:	bl	11070 <fflush@plt>
   138f4:	str	r0, [sp, #4]
   138f8:	b	13910 <__assert_fail@plt+0x2630>
   138fc:	ldr	r0, [sp]
   13900:	bl	1391c <__assert_fail@plt+0x263c>
   13904:	ldr	r0, [sp]
   13908:	bl	11070 <fflush@plt>
   1390c:	str	r0, [sp, #4]
   13910:	ldr	r0, [sp, #4]
   13914:	mov	sp, fp
   13918:	pop	{fp, pc}
   1391c:	push	{fp, lr}
   13920:	mov	fp, sp
   13924:	sub	sp, sp, #16
   13928:	str	r0, [fp, #-4]
   1392c:	ldr	r0, [fp, #-4]
   13930:	ldr	r0, [r0]
   13934:	and	r0, r0, #256	; 0x100
   13938:	cmp	r0, #0
   1393c:	beq	13964 <__assert_fail@plt+0x2684>
   13940:	ldr	r0, [fp, #-4]
   13944:	mov	r1, sp
   13948:	mov	r2, #1
   1394c:	str	r2, [r1]
   13950:	mov	r1, #0
   13954:	mov	r2, r1
   13958:	mov	r3, r1
   1395c:	bl	139ac <__assert_fail@plt+0x26cc>
   13960:	str	r0, [sp, #8]
   13964:	mov	sp, fp
   13968:	pop	{fp, pc}
   1396c:	push	{fp, lr}
   13970:	mov	fp, sp
   13974:	sub	sp, sp, #16
   13978:	str	r0, [fp, #-4]
   1397c:	bl	111e4 <__errno_location@plt>
   13980:	ldr	r0, [r0]
   13984:	str	r0, [sp, #8]
   13988:	ldr	r0, [fp, #-4]
   1398c:	bl	11088 <free@plt>
   13990:	ldr	r0, [sp, #8]
   13994:	str	r0, [sp, #4]
   13998:	bl	111e4 <__errno_location@plt>
   1399c:	ldr	lr, [sp, #4]
   139a0:	str	lr, [r0]
   139a4:	mov	sp, fp
   139a8:	pop	{fp, pc}
   139ac:	push	{fp, lr}
   139b0:	mov	fp, sp
   139b4:	sub	sp, sp, #32
   139b8:	ldr	r1, [fp, #8]
   139bc:	str	r0, [fp, #-8]
   139c0:	str	r3, [sp, #20]
   139c4:	str	r2, [sp, #16]
   139c8:	ldr	r0, [fp, #-8]
   139cc:	ldr	r0, [r0, #8]
   139d0:	ldr	r2, [fp, #-8]
   139d4:	ldr	r2, [r2, #4]
   139d8:	cmp	r0, r2
   139dc:	str	r1, [sp, #4]
   139e0:	bne	13a8c <__assert_fail@plt+0x27ac>
   139e4:	ldr	r0, [fp, #-8]
   139e8:	ldr	r0, [r0, #20]
   139ec:	ldr	r1, [fp, #-8]
   139f0:	ldr	r1, [r1, #16]
   139f4:	cmp	r0, r1
   139f8:	bne	13a8c <__assert_fail@plt+0x27ac>
   139fc:	ldr	r0, [fp, #-8]
   13a00:	ldr	r0, [r0, #36]	; 0x24
   13a04:	movw	r1, #0
   13a08:	cmp	r0, r1
   13a0c:	bne	13a8c <__assert_fail@plt+0x27ac>
   13a10:	ldr	r0, [fp, #-8]
   13a14:	bl	11214 <fileno@plt>
   13a18:	ldr	r2, [sp, #16]
   13a1c:	ldr	r3, [sp, #20]
   13a20:	ldr	lr, [fp, #8]
   13a24:	mov	r1, sp
   13a28:	str	lr, [r1]
   13a2c:	bl	1110c <lseek64@plt>
   13a30:	str	r1, [sp, #12]
   13a34:	str	r0, [sp, #8]
   13a38:	ldr	r0, [sp, #8]
   13a3c:	ldr	r1, [sp, #12]
   13a40:	and	r0, r0, r1
   13a44:	cmn	r0, #1
   13a48:	bne	13a5c <__assert_fail@plt+0x277c>
   13a4c:	b	13a50 <__assert_fail@plt+0x2770>
   13a50:	mvn	r0, #0
   13a54:	str	r0, [fp, #-4]
   13a58:	b	13aac <__assert_fail@plt+0x27cc>
   13a5c:	ldr	r0, [fp, #-8]
   13a60:	ldr	r1, [r0]
   13a64:	bic	r1, r1, #16
   13a68:	str	r1, [r0]
   13a6c:	ldr	r0, [sp, #8]
   13a70:	ldr	r1, [sp, #12]
   13a74:	ldr	r2, [fp, #-8]
   13a78:	str	r1, [r2, #84]	; 0x54
   13a7c:	str	r0, [r2, #80]	; 0x50
   13a80:	movw	r0, #0
   13a84:	str	r0, [fp, #-4]
   13a88:	b	13aac <__assert_fail@plt+0x27cc>
   13a8c:	ldr	r0, [fp, #-8]
   13a90:	ldr	r2, [sp, #16]
   13a94:	ldr	r3, [sp, #20]
   13a98:	ldr	r1, [fp, #8]
   13a9c:	mov	ip, sp
   13aa0:	str	r1, [ip]
   13aa4:	bl	11238 <fseeko64@plt>
   13aa8:	str	r0, [fp, #-4]
   13aac:	ldr	r0, [fp, #-4]
   13ab0:	mov	sp, fp
   13ab4:	pop	{fp, pc}
   13ab8:	push	{r4, sl, fp, lr}
   13abc:	add	fp, sp, #8
   13ac0:	sub	sp, sp, #104	; 0x68
   13ac4:	ldr	ip, [fp, #16]
   13ac8:	ldr	lr, [fp, #12]
   13acc:	ldr	r4, [fp, #8]
   13ad0:	str	r0, [fp, #-16]
   13ad4:	str	r1, [fp, #-20]	; 0xffffffec
   13ad8:	str	r2, [fp, #-24]	; 0xffffffe8
   13adc:	str	r3, [fp, #-28]	; 0xffffffe4
   13ae0:	mvn	r0, #0
   13ae4:	str	r0, [fp, #-40]	; 0xffffffd8
   13ae8:	ldr	r0, [fp, #-16]
   13aec:	ldr	r0, [r0]
   13af0:	str	r0, [fp, #-44]	; 0xffffffd4
   13af4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13af8:	ldr	r0, [r0]
   13afc:	str	r0, [fp, #-48]	; 0xffffffd0
   13b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b04:	movw	r1, #0
   13b08:	cmp	r0, r1
   13b0c:	str	r4, [sp, #24]
   13b10:	str	lr, [sp, #20]
   13b14:	str	ip, [sp, #16]
   13b18:	bne	13b74 <__assert_fail@plt+0x2894>
   13b1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b20:	cmp	r0, #64	; 0x40
   13b24:	bcs	13b34 <__assert_fail@plt+0x2854>
   13b28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b2c:	str	r0, [sp, #12]
   13b30:	b	13b40 <__assert_fail@plt+0x2860>
   13b34:	movw	r0, #64	; 0x40
   13b38:	str	r0, [sp, #12]
   13b3c:	b	13b40 <__assert_fail@plt+0x2860>
   13b40:	ldr	r0, [sp, #12]
   13b44:	str	r0, [fp, #-48]	; 0xffffffd0
   13b48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13b4c:	bl	1a164 <__assert_fail@plt+0x8e84>
   13b50:	str	r0, [fp, #-44]	; 0xffffffd4
   13b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b58:	movw	lr, #0
   13b5c:	cmp	r0, lr
   13b60:	bne	13b70 <__assert_fail@plt+0x2890>
   13b64:	mvn	r0, #0
   13b68:	str	r0, [fp, #-12]
   13b6c:	b	13f70 <__assert_fail@plt+0x2c90>
   13b70:	b	13b74 <__assert_fail@plt+0x2894>
   13b74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13b78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b7c:	cmp	r0, r1
   13b80:	bcs	13b88 <__assert_fail@plt+0x28a8>
   13b84:	b	13f2c <__assert_fail@plt+0x2c4c>
   13b88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13b8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b90:	sub	r0, r0, r1
   13b94:	str	r0, [fp, #-32]	; 0xffffffe0
   13b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ba0:	add	r0, r0, r1
   13ba4:	str	r0, [fp, #-36]	; 0xffffffdc
   13ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bac:	cmp	r0, #0
   13bb0:	bne	13bc8 <__assert_fail@plt+0x28e8>
   13bb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13bb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13bbc:	cmp	r0, r1
   13bc0:	bhi	13bc8 <__assert_fail@plt+0x28e8>
   13bc4:	b	13f2c <__assert_fail@plt+0x2c4c>
   13bc8:	ldr	r0, [fp, #8]
   13bcc:	cmn	r0, #1
   13bd0:	bne	13be0 <__assert_fail@plt+0x2900>
   13bd4:	ldr	r0, [fp, #12]
   13bd8:	str	r0, [fp, #8]
   13bdc:	b	13bf8 <__assert_fail@plt+0x2918>
   13be0:	ldr	r0, [fp, #12]
   13be4:	cmn	r0, #1
   13be8:	bne	13bf4 <__assert_fail@plt+0x2914>
   13bec:	ldr	r0, [fp, #8]
   13bf0:	str	r0, [fp, #12]
   13bf4:	b	13bf8 <__assert_fail@plt+0x2918>
   13bf8:	movw	r0, #0
   13bfc:	strb	r0, [fp, #-49]	; 0xffffffcf
   13c00:	ldr	r0, [fp, #16]
   13c04:	add	r1, sp, #48	; 0x30
   13c08:	bl	1a400 <__assert_fail@plt+0x9120>
   13c0c:	str	r0, [sp, #52]	; 0x34
   13c10:	ldr	r0, [sp, #52]	; 0x34
   13c14:	movw	r1, #0
   13c18:	cmp	r0, r1
   13c1c:	beq	13c78 <__assert_fail@plt+0x2998>
   13c20:	ldr	r0, [fp, #8]
   13c24:	cmn	r0, #1
   13c28:	beq	13c74 <__assert_fail@plt+0x2994>
   13c2c:	ldr	r0, [sp, #52]	; 0x34
   13c30:	ldr	r1, [fp, #8]
   13c34:	ldr	r2, [fp, #12]
   13c38:	ldr	r3, [sp, #48]	; 0x30
   13c3c:	bl	13f80 <__assert_fail@plt+0x2ca0>
   13c40:	str	r0, [sp, #44]	; 0x2c
   13c44:	ldr	r0, [sp, #44]	; 0x2c
   13c48:	movw	r1, #0
   13c4c:	cmp	r0, r1
   13c50:	beq	13c70 <__assert_fail@plt+0x2990>
   13c54:	ldr	r0, [sp, #44]	; 0x2c
   13c58:	ldr	r1, [sp, #52]	; 0x34
   13c5c:	sub	r0, r0, r1
   13c60:	add	r0, r0, #1
   13c64:	str	r0, [sp, #48]	; 0x30
   13c68:	movw	r0, #1
   13c6c:	strb	r0, [fp, #-49]	; 0xffffffcf
   13c70:	b	13c74 <__assert_fail@plt+0x2994>
   13c74:	b	13cd8 <__assert_fail@plt+0x29f8>
   13c78:	ldr	r0, [fp, #16]
   13c7c:	bl	110dc <getc_unlocked@plt>
   13c80:	str	r0, [sp, #56]	; 0x38
   13c84:	ldr	r0, [sp, #56]	; 0x38
   13c88:	cmn	r0, #1
   13c8c:	bne	13ca8 <__assert_fail@plt+0x29c8>
   13c90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c98:	cmp	r0, r1
   13c9c:	bne	13ca4 <__assert_fail@plt+0x29c4>
   13ca0:	b	13f28 <__assert_fail@plt+0x2c48>
   13ca4:	b	13f04 <__assert_fail@plt+0x2c24>
   13ca8:	ldr	r0, [sp, #56]	; 0x38
   13cac:	ldr	r1, [fp, #8]
   13cb0:	cmp	r0, r1
   13cb4:	beq	13cc8 <__assert_fail@plt+0x29e8>
   13cb8:	ldr	r0, [sp, #56]	; 0x38
   13cbc:	ldr	r1, [fp, #12]
   13cc0:	cmp	r0, r1
   13cc4:	bne	13cd0 <__assert_fail@plt+0x29f0>
   13cc8:	movw	r0, #1
   13ccc:	strb	r0, [fp, #-49]	; 0xffffffcf
   13cd0:	movw	r0, #1
   13cd4:	str	r0, [sp, #48]	; 0x30
   13cd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cdc:	ldr	r1, [sp, #48]	; 0x30
   13ce0:	add	r1, r1, #1
   13ce4:	cmp	r0, r1
   13ce8:	bcs	13e40 <__assert_fail@plt+0x2b60>
   13cec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13cf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cf4:	cmp	r0, r1
   13cf8:	bcs	13e40 <__assert_fail@plt+0x2b60>
   13cfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13d00:	cmp	r0, #64	; 0x40
   13d04:	bcs	13d18 <__assert_fail@plt+0x2a38>
   13d08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13d0c:	add	r0, r0, #64	; 0x40
   13d10:	str	r0, [sp, #8]
   13d14:	b	13d24 <__assert_fail@plt+0x2a44>
   13d18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13d1c:	lsl	r0, r0, #1
   13d20:	str	r0, [sp, #8]
   13d24:	ldr	r0, [sp, #8]
   13d28:	str	r0, [sp, #40]	; 0x28
   13d2c:	ldr	r0, [sp, #40]	; 0x28
   13d30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13d34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13d38:	sub	r1, r1, r2
   13d3c:	sub	r0, r0, r1
   13d40:	ldr	r1, [sp, #48]	; 0x30
   13d44:	add	r1, r1, #1
   13d48:	cmp	r0, r1
   13d4c:	bcs	13d6c <__assert_fail@plt+0x2a8c>
   13d50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d58:	sub	r0, r0, r1
   13d5c:	ldr	r1, [sp, #48]	; 0x30
   13d60:	add	r0, r0, r1
   13d64:	add	r0, r0, #1
   13d68:	str	r0, [sp, #40]	; 0x28
   13d6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13d70:	ldr	r1, [sp, #40]	; 0x28
   13d74:	cmp	r0, r1
   13d78:	bcs	13d8c <__assert_fail@plt+0x2aac>
   13d7c:	ldr	r0, [sp, #40]	; 0x28
   13d80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d84:	cmp	r0, r1
   13d88:	bls	13d94 <__assert_fail@plt+0x2ab4>
   13d8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d90:	str	r0, [sp, #40]	; 0x28
   13d94:	ldr	r0, [pc, #480]	; 13f7c <__assert_fail@plt+0x2c9c>
   13d98:	ldr	r1, [sp, #40]	; 0x28
   13d9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13da0:	sub	r1, r1, r2
   13da4:	cmp	r0, r1
   13da8:	bcs	13ddc <__assert_fail@plt+0x2afc>
   13dac:	ldr	r0, [pc, #456]	; 13f7c <__assert_fail@plt+0x2c9c>
   13db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13db4:	add	r0, r1, r0
   13db8:	add	r0, r0, #1
   13dbc:	str	r0, [sp, #32]
   13dc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13dc4:	ldr	r1, [sp, #32]
   13dc8:	cmp	r0, r1
   13dcc:	bne	13dd4 <__assert_fail@plt+0x2af4>
   13dd0:	b	13f28 <__assert_fail@plt+0x2c48>
   13dd4:	ldr	r0, [sp, #32]
   13dd8:	str	r0, [sp, #40]	; 0x28
   13ddc:	ldr	r0, [sp, #40]	; 0x28
   13de0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13de4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13de8:	sub	r1, r1, r2
   13dec:	sub	r0, r0, r1
   13df0:	str	r0, [fp, #-32]	; 0xffffffe0
   13df4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13df8:	ldr	r1, [sp, #40]	; 0x28
   13dfc:	bl	1a1d4 <__assert_fail@plt+0x8ef4>
   13e00:	str	r0, [sp, #36]	; 0x24
   13e04:	ldr	r0, [sp, #36]	; 0x24
   13e08:	movw	r1, #0
   13e0c:	cmp	r0, r1
   13e10:	bne	13e18 <__assert_fail@plt+0x2b38>
   13e14:	b	13f28 <__assert_fail@plt+0x2c48>
   13e18:	ldr	r0, [sp, #36]	; 0x24
   13e1c:	str	r0, [fp, #-44]	; 0xffffffd4
   13e20:	ldr	r0, [sp, #40]	; 0x28
   13e24:	str	r0, [fp, #-48]	; 0xffffffd0
   13e28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13e2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13e30:	sub	r0, r0, r1
   13e34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e38:	add	r0, r1, r0
   13e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   13e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e44:	movw	r1, #1
   13e48:	cmp	r1, r0
   13e4c:	bcs	13ec4 <__assert_fail@plt+0x2be4>
   13e50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e54:	sub	r0, r0, #1
   13e58:	str	r0, [sp, #28]
   13e5c:	ldr	r0, [sp, #48]	; 0x30
   13e60:	ldr	r1, [sp, #28]
   13e64:	cmp	r0, r1
   13e68:	bcs	13e74 <__assert_fail@plt+0x2b94>
   13e6c:	ldr	r0, [sp, #48]	; 0x30
   13e70:	str	r0, [sp, #28]
   13e74:	ldr	r0, [sp, #52]	; 0x34
   13e78:	movw	r1, #0
   13e7c:	cmp	r0, r1
   13e80:	beq	13e98 <__assert_fail@plt+0x2bb8>
   13e84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e88:	ldr	r1, [sp, #52]	; 0x34
   13e8c:	ldr	r2, [sp, #28]
   13e90:	bl	110ac <memcpy@plt>
   13e94:	b	13ea4 <__assert_fail@plt+0x2bc4>
   13e98:	ldr	r0, [sp, #56]	; 0x38
   13e9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ea0:	strb	r0, [r1]
   13ea4:	ldr	r0, [sp, #28]
   13ea8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13eac:	add	r0, r1, r0
   13eb0:	str	r0, [fp, #-36]	; 0xffffffdc
   13eb4:	ldr	r0, [sp, #28]
   13eb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13ebc:	sub	r0, r1, r0
   13ec0:	str	r0, [fp, #-32]	; 0xffffffe0
   13ec4:	ldr	r0, [sp, #52]	; 0x34
   13ec8:	movw	r1, #0
   13ecc:	cmp	r0, r1
   13ed0:	beq	13eec <__assert_fail@plt+0x2c0c>
   13ed4:	ldr	r0, [fp, #16]
   13ed8:	ldr	r1, [sp, #48]	; 0x30
   13edc:	bl	1a484 <__assert_fail@plt+0x91a4>
   13ee0:	cmp	r0, #0
   13ee4:	beq	13eec <__assert_fail@plt+0x2c0c>
   13ee8:	b	13f28 <__assert_fail@plt+0x2c48>
   13eec:	b	13ef0 <__assert_fail@plt+0x2c10>
   13ef0:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   13ef4:	mvn	r1, #0
   13ef8:	eor	r0, r0, r1
   13efc:	tst	r0, #1
   13f00:	bne	13c00 <__assert_fail@plt+0x2920>
   13f04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f08:	movw	r1, #0
   13f0c:	strb	r1, [r0]
   13f10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f1c:	add	r1, r1, r2
   13f20:	sub	r0, r0, r1
   13f24:	str	r0, [fp, #-40]	; 0xffffffd8
   13f28:	b	13f2c <__assert_fail@plt+0x2c4c>
   13f2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f30:	ldr	r1, [fp, #-16]
   13f34:	str	r0, [r1]
   13f38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f40:	str	r0, [r1]
   13f44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f48:	cmp	r0, #0
   13f4c:	beq	13f5c <__assert_fail@plt+0x2c7c>
   13f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f54:	str	r0, [sp, #4]
   13f58:	b	13f68 <__assert_fail@plt+0x2c88>
   13f5c:	mvn	r0, #0
   13f60:	str	r0, [sp, #4]
   13f64:	b	13f68 <__assert_fail@plt+0x2c88>
   13f68:	ldr	r0, [sp, #4]
   13f6c:	str	r0, [fp, #-12]
   13f70:	ldr	r0, [fp, #-12]
   13f74:	sub	sp, fp, #8
   13f78:	pop	{r4, sl, fp, pc}
   13f7c:	svcvc	0x00ffffff
   13f80:	push	{fp, lr}
   13f84:	mov	fp, sp
   13f88:	sub	sp, sp, #64	; 0x40
   13f8c:	str	r0, [fp, #-8]
   13f90:	str	r1, [fp, #-12]
   13f94:	str	r2, [fp, #-16]
   13f98:	str	r3, [fp, #-20]	; 0xffffffec
   13f9c:	ldr	r0, [fp, #-12]
   13fa0:	strb	r0, [sp, #19]
   13fa4:	ldr	r0, [fp, #-16]
   13fa8:	strb	r0, [sp, #18]
   13fac:	ldrb	r0, [sp, #19]
   13fb0:	ldrb	r1, [sp, #18]
   13fb4:	cmp	r0, r1
   13fb8:	bne	13fd4 <__assert_fail@plt+0x2cf4>
   13fbc:	ldr	r0, [fp, #-8]
   13fc0:	ldrb	r1, [sp, #19]
   13fc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fc8:	bl	11220 <memchr@plt>
   13fcc:	str	r0, [fp, #-4]
   13fd0:	b	141e4 <__assert_fail@plt+0x2f04>
   13fd4:	ldr	r0, [fp, #-8]
   13fd8:	str	r0, [fp, #-28]	; 0xffffffe4
   13fdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13fe0:	cmp	r0, #0
   13fe4:	movw	r0, #0
   13fe8:	str	r0, [sp, #4]
   13fec:	bls	14008 <__assert_fail@plt+0x2d28>
   13ff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ff4:	and	r0, r0, #3
   13ff8:	cmp	r0, #0
   13ffc:	movw	r0, #0
   14000:	movne	r0, #1
   14004:	str	r0, [sp, #4]
   14008:	ldr	r0, [sp, #4]
   1400c:	tst	r0, #1
   14010:	beq	14070 <__assert_fail@plt+0x2d90>
   14014:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14018:	str	r0, [fp, #-24]	; 0xffffffe8
   1401c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14020:	ldrb	r0, [r0]
   14024:	ldrb	r1, [sp, #19]
   14028:	cmp	r0, r1
   1402c:	beq	14044 <__assert_fail@plt+0x2d64>
   14030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14034:	ldrb	r0, [r0]
   14038:	ldrb	r1, [sp, #18]
   1403c:	cmp	r0, r1
   14040:	bne	14050 <__assert_fail@plt+0x2d70>
   14044:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14048:	str	r0, [fp, #-4]
   1404c:	b	141e4 <__assert_fail@plt+0x2f04>
   14050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14054:	add	r0, r0, #1
   14058:	str	r0, [fp, #-28]	; 0xffffffe4
   1405c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14060:	mvn	r1, #0
   14064:	add	r0, r0, r1
   14068:	str	r0, [fp, #-20]	; 0xffffffec
   1406c:	b	13fdc <__assert_fail@plt+0x2cfc>
   14070:	ldr	r0, [pc, #376]	; 141f0 <__assert_fail@plt+0x2f10>
   14074:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14078:	str	r1, [sp, #32]
   1407c:	str	r0, [sp, #28]
   14080:	ldrb	r0, [sp, #19]
   14084:	ldrb	r1, [sp, #19]
   14088:	lsl	r1, r1, #8
   1408c:	orr	r0, r0, r1
   14090:	str	r0, [sp, #24]
   14094:	ldrb	r0, [sp, #18]
   14098:	ldrb	r1, [sp, #18]
   1409c:	lsl	r1, r1, #8
   140a0:	orr	r0, r0, r1
   140a4:	str	r0, [sp, #20]
   140a8:	ldr	r0, [sp, #24]
   140ac:	lsl	r0, r0, #16
   140b0:	ldr	r1, [sp, #24]
   140b4:	orr	r0, r1, r0
   140b8:	str	r0, [sp, #24]
   140bc:	ldr	r0, [sp, #20]
   140c0:	lsl	r0, r0, #16
   140c4:	ldr	r1, [sp, #20]
   140c8:	orr	r0, r1, r0
   140cc:	str	r0, [sp, #20]
   140d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   140d4:	cmp	r0, #4
   140d8:	bcc	14170 <__assert_fail@plt+0x2e90>
   140dc:	ldr	r0, [sp, #32]
   140e0:	ldr	r0, [r0]
   140e4:	ldr	r1, [sp, #24]
   140e8:	eor	r0, r0, r1
   140ec:	str	r0, [sp, #12]
   140f0:	ldr	r0, [sp, #32]
   140f4:	ldr	r0, [r0]
   140f8:	ldr	r1, [sp, #20]
   140fc:	eor	r0, r0, r1
   14100:	str	r0, [sp, #8]
   14104:	ldr	r0, [sp, #12]
   14108:	ldr	r1, [sp, #28]
   1410c:	sub	r0, r0, r1
   14110:	ldr	r1, [sp, #12]
   14114:	mvn	r2, #0
   14118:	eor	r1, r1, r2
   1411c:	and	r0, r0, r1
   14120:	ldr	r1, [sp, #8]
   14124:	ldr	r3, [sp, #28]
   14128:	sub	r1, r1, r3
   1412c:	ldr	r3, [sp, #8]
   14130:	eor	r2, r3, r2
   14134:	and	r1, r1, r2
   14138:	orr	r0, r0, r1
   1413c:	ldr	r1, [sp, #28]
   14140:	lsl	r1, r1, #7
   14144:	and	r0, r0, r1
   14148:	cmp	r0, #0
   1414c:	beq	14154 <__assert_fail@plt+0x2e74>
   14150:	b	14170 <__assert_fail@plt+0x2e90>
   14154:	ldr	r0, [sp, #32]
   14158:	add	r0, r0, #4
   1415c:	str	r0, [sp, #32]
   14160:	ldr	r0, [fp, #-20]	; 0xffffffec
   14164:	sub	r0, r0, #4
   14168:	str	r0, [fp, #-20]	; 0xffffffec
   1416c:	b	140d0 <__assert_fail@plt+0x2df0>
   14170:	ldr	r0, [sp, #32]
   14174:	str	r0, [fp, #-24]	; 0xffffffe8
   14178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1417c:	cmp	r0, #0
   14180:	bls	141dc <__assert_fail@plt+0x2efc>
   14184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14188:	ldrb	r0, [r0]
   1418c:	ldrb	r1, [sp, #19]
   14190:	cmp	r0, r1
   14194:	beq	141ac <__assert_fail@plt+0x2ecc>
   14198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1419c:	ldrb	r0, [r0]
   141a0:	ldrb	r1, [sp, #18]
   141a4:	cmp	r0, r1
   141a8:	bne	141b8 <__assert_fail@plt+0x2ed8>
   141ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141b0:	str	r0, [fp, #-4]
   141b4:	b	141e4 <__assert_fail@plt+0x2f04>
   141b8:	b	141bc <__assert_fail@plt+0x2edc>
   141bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   141c0:	mvn	r1, #0
   141c4:	add	r0, r0, r1
   141c8:	str	r0, [fp, #-20]	; 0xffffffec
   141cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141d0:	add	r0, r0, #1
   141d4:	str	r0, [fp, #-24]	; 0xffffffe8
   141d8:	b	14178 <__assert_fail@plt+0x2e98>
   141dc:	movw	r0, #0
   141e0:	str	r0, [fp, #-4]
   141e4:	ldr	r0, [fp, #-4]
   141e8:	mov	sp, fp
   141ec:	pop	{fp, pc}
   141f0:	tsteq	r1, r1, lsl #2
   141f4:	push	{fp, lr}
   141f8:	mov	fp, sp
   141fc:	sub	sp, sp, #24
   14200:	str	r0, [fp, #-4]
   14204:	ldr	r0, [fp, #-4]
   14208:	movw	r1, #0
   1420c:	cmp	r0, r1
   14210:	bne	14234 <__assert_fail@plt+0x2f54>
   14214:	movw	r0, #57696	; 0xe160
   14218:	movt	r0, #2
   1421c:	ldr	r1, [r0]
   14220:	movw	r0, #54585	; 0xd539
   14224:	movt	r0, #1
   14228:	bl	11298 <fputs@plt>
   1422c:	str	r0, [sp, #8]
   14230:	bl	112b0 <abort@plt>
   14234:	ldr	r0, [fp, #-4]
   14238:	movw	r1, #47	; 0x2f
   1423c:	bl	11250 <strrchr@plt>
   14240:	str	r0, [fp, #-8]
   14244:	ldr	r0, [fp, #-8]
   14248:	movw	r1, #0
   1424c:	cmp	r0, r1
   14250:	beq	14264 <__assert_fail@plt+0x2f84>
   14254:	ldr	r0, [fp, #-8]
   14258:	add	r0, r0, #1
   1425c:	str	r0, [sp, #4]
   14260:	b	1426c <__assert_fail@plt+0x2f8c>
   14264:	ldr	r0, [fp, #-4]
   14268:	str	r0, [sp, #4]
   1426c:	ldr	r0, [sp, #4]
   14270:	str	r0, [sp, #12]
   14274:	ldr	r0, [sp, #12]
   14278:	ldr	r1, [fp, #-4]
   1427c:	sub	r0, r0, r1
   14280:	cmp	r0, #7
   14284:	blt	142f0 <__assert_fail@plt+0x3010>
   14288:	ldr	r0, [sp, #12]
   1428c:	mvn	r1, #6
   14290:	add	r0, r0, r1
   14294:	movw	r1, #54641	; 0xd571
   14298:	movt	r1, #1
   1429c:	movw	r2, #7
   142a0:	bl	112a4 <strncmp@plt>
   142a4:	cmp	r0, #0
   142a8:	bne	142f0 <__assert_fail@plt+0x3010>
   142ac:	ldr	r0, [sp, #12]
   142b0:	str	r0, [fp, #-4]
   142b4:	ldr	r0, [sp, #12]
   142b8:	movw	r1, #54649	; 0xd579
   142bc:	movt	r1, #1
   142c0:	movw	r2, #3
   142c4:	bl	112a4 <strncmp@plt>
   142c8:	cmp	r0, #0
   142cc:	bne	142ec <__assert_fail@plt+0x300c>
   142d0:	ldr	r0, [sp, #12]
   142d4:	add	r0, r0, #3
   142d8:	str	r0, [fp, #-4]
   142dc:	ldr	r0, [fp, #-4]
   142e0:	movw	r1, #57680	; 0xe150
   142e4:	movt	r1, #2
   142e8:	str	r0, [r1]
   142ec:	b	142f0 <__assert_fail@plt+0x3010>
   142f0:	ldr	r0, [fp, #-4]
   142f4:	movw	r1, #57764	; 0xe1a4
   142f8:	movt	r1, #2
   142fc:	str	r0, [r1]
   14300:	ldr	r0, [fp, #-4]
   14304:	movw	r1, #57684	; 0xe154
   14308:	movt	r1, #2
   1430c:	str	r0, [r1]
   14310:	mov	sp, fp
   14314:	pop	{fp, pc}
   14318:	push	{fp, lr}
   1431c:	mov	fp, sp
   14320:	sub	sp, sp, #24
   14324:	str	r0, [fp, #-4]
   14328:	bl	111e4 <__errno_location@plt>
   1432c:	ldr	r0, [r0]
   14330:	str	r0, [fp, #-8]
   14334:	ldr	r0, [fp, #-4]
   14338:	movw	lr, #0
   1433c:	cmp	r0, lr
   14340:	beq	14350 <__assert_fail@plt+0x3070>
   14344:	ldr	r0, [fp, #-4]
   14348:	str	r0, [sp, #8]
   1434c:	b	14360 <__assert_fail@plt+0x3080>
   14350:	movw	r0, #57768	; 0xe1a8
   14354:	movt	r0, #2
   14358:	str	r0, [sp, #8]
   1435c:	b	14360 <__assert_fail@plt+0x3080>
   14360:	ldr	r0, [sp, #8]
   14364:	movw	r1, #48	; 0x30
   14368:	bl	19f78 <__assert_fail@plt+0x8c98>
   1436c:	str	r0, [sp, #12]
   14370:	ldr	r0, [fp, #-8]
   14374:	str	r0, [sp, #4]
   14378:	bl	111e4 <__errno_location@plt>
   1437c:	ldr	r1, [sp, #4]
   14380:	str	r1, [r0]
   14384:	ldr	r0, [sp, #12]
   14388:	mov	sp, fp
   1438c:	pop	{fp, pc}
   14390:	sub	sp, sp, #8
   14394:	str	r0, [sp, #4]
   14398:	ldr	r0, [sp, #4]
   1439c:	movw	r1, #0
   143a0:	cmp	r0, r1
   143a4:	beq	143b4 <__assert_fail@plt+0x30d4>
   143a8:	ldr	r0, [sp, #4]
   143ac:	str	r0, [sp]
   143b0:	b	143c4 <__assert_fail@plt+0x30e4>
   143b4:	movw	r0, #57768	; 0xe1a8
   143b8:	movt	r0, #2
   143bc:	str	r0, [sp]
   143c0:	b	143c4 <__assert_fail@plt+0x30e4>
   143c4:	ldr	r0, [sp]
   143c8:	ldr	r0, [r0]
   143cc:	add	sp, sp, #8
   143d0:	bx	lr
   143d4:	sub	sp, sp, #16
   143d8:	str	r0, [sp, #12]
   143dc:	str	r1, [sp, #8]
   143e0:	ldr	r0, [sp, #8]
   143e4:	ldr	r1, [sp, #12]
   143e8:	movw	r2, #0
   143ec:	cmp	r1, r2
   143f0:	str	r0, [sp, #4]
   143f4:	beq	14404 <__assert_fail@plt+0x3124>
   143f8:	ldr	r0, [sp, #12]
   143fc:	str	r0, [sp]
   14400:	b	14414 <__assert_fail@plt+0x3134>
   14404:	movw	r0, #57768	; 0xe1a8
   14408:	movt	r0, #2
   1440c:	str	r0, [sp]
   14410:	b	14414 <__assert_fail@plt+0x3134>
   14414:	ldr	r0, [sp]
   14418:	ldr	r1, [sp, #4]
   1441c:	str	r1, [r0]
   14420:	add	sp, sp, #16
   14424:	bx	lr
   14428:	sub	sp, sp, #32
   1442c:	str	r0, [sp, #28]
   14430:	strb	r1, [sp, #27]
   14434:	str	r2, [sp, #20]
   14438:	ldrb	r0, [sp, #27]
   1443c:	strb	r0, [sp, #19]
   14440:	ldr	r0, [sp, #28]
   14444:	movw	r1, #0
   14448:	cmp	r0, r1
   1444c:	beq	1445c <__assert_fail@plt+0x317c>
   14450:	ldr	r0, [sp, #28]
   14454:	str	r0, [sp]
   14458:	b	1446c <__assert_fail@plt+0x318c>
   1445c:	movw	r0, #57768	; 0xe1a8
   14460:	movt	r0, #2
   14464:	str	r0, [sp]
   14468:	b	1446c <__assert_fail@plt+0x318c>
   1446c:	ldr	r0, [sp]
   14470:	add	r0, r0, #8
   14474:	ldrb	r1, [sp, #19]
   14478:	lsr	r1, r1, #5
   1447c:	add	r0, r0, r1, lsl #2
   14480:	str	r0, [sp, #12]
   14484:	ldrb	r0, [sp, #19]
   14488:	and	r0, r0, #31
   1448c:	str	r0, [sp, #8]
   14490:	ldr	r0, [sp, #12]
   14494:	ldr	r0, [r0]
   14498:	ldr	r1, [sp, #8]
   1449c:	lsr	r0, r0, r1
   144a0:	and	r0, r0, #1
   144a4:	str	r0, [sp, #4]
   144a8:	ldr	r0, [sp, #20]
   144ac:	and	r0, r0, #1
   144b0:	ldr	r1, [sp, #4]
   144b4:	eor	r0, r0, r1
   144b8:	ldr	r1, [sp, #8]
   144bc:	lsl	r0, r0, r1
   144c0:	ldr	r1, [sp, #12]
   144c4:	ldr	r2, [r1]
   144c8:	eor	r0, r2, r0
   144cc:	str	r0, [r1]
   144d0:	ldr	r0, [sp, #4]
   144d4:	add	sp, sp, #32
   144d8:	bx	lr
   144dc:	sub	sp, sp, #12
   144e0:	str	r0, [sp, #8]
   144e4:	str	r1, [sp, #4]
   144e8:	ldr	r0, [sp, #8]
   144ec:	movw	r1, #0
   144f0:	cmp	r0, r1
   144f4:	bne	14504 <__assert_fail@plt+0x3224>
   144f8:	movw	r0, #57768	; 0xe1a8
   144fc:	movt	r0, #2
   14500:	str	r0, [sp, #8]
   14504:	ldr	r0, [sp, #8]
   14508:	ldr	r0, [r0, #4]
   1450c:	str	r0, [sp]
   14510:	ldr	r0, [sp, #4]
   14514:	ldr	r1, [sp, #8]
   14518:	str	r0, [r1, #4]
   1451c:	ldr	r0, [sp]
   14520:	add	sp, sp, #12
   14524:	bx	lr
   14528:	push	{fp, lr}
   1452c:	mov	fp, sp
   14530:	sub	sp, sp, #16
   14534:	str	r0, [fp, #-4]
   14538:	str	r1, [sp, #8]
   1453c:	str	r2, [sp, #4]
   14540:	ldr	r0, [fp, #-4]
   14544:	movw	r1, #0
   14548:	cmp	r0, r1
   1454c:	bne	1455c <__assert_fail@plt+0x327c>
   14550:	movw	r0, #57768	; 0xe1a8
   14554:	movt	r0, #2
   14558:	str	r0, [fp, #-4]
   1455c:	ldr	r0, [fp, #-4]
   14560:	movw	r1, #10
   14564:	str	r1, [r0]
   14568:	ldr	r0, [sp, #8]
   1456c:	movw	r1, #0
   14570:	cmp	r0, r1
   14574:	beq	14588 <__assert_fail@plt+0x32a8>
   14578:	ldr	r0, [sp, #4]
   1457c:	movw	r1, #0
   14580:	cmp	r0, r1
   14584:	bne	1458c <__assert_fail@plt+0x32ac>
   14588:	bl	112b0 <abort@plt>
   1458c:	ldr	r0, [sp, #8]
   14590:	ldr	r1, [fp, #-4]
   14594:	str	r0, [r1, #40]	; 0x28
   14598:	ldr	r0, [sp, #4]
   1459c:	ldr	r1, [fp, #-4]
   145a0:	str	r0, [r1, #44]	; 0x2c
   145a4:	mov	sp, fp
   145a8:	pop	{fp, pc}
   145ac:	push	{r4, r5, r6, sl, fp, lr}
   145b0:	add	fp, sp, #16
   145b4:	sub	sp, sp, #64	; 0x40
   145b8:	ldr	ip, [fp, #8]
   145bc:	str	r0, [fp, #-20]	; 0xffffffec
   145c0:	str	r1, [fp, #-24]	; 0xffffffe8
   145c4:	str	r2, [fp, #-28]	; 0xffffffe4
   145c8:	str	r3, [fp, #-32]	; 0xffffffe0
   145cc:	ldr	r0, [fp, #8]
   145d0:	movw	r1, #0
   145d4:	cmp	r0, r1
   145d8:	str	ip, [sp, #32]
   145dc:	beq	145ec <__assert_fail@plt+0x330c>
   145e0:	ldr	r0, [fp, #8]
   145e4:	str	r0, [sp, #28]
   145e8:	b	145fc <__assert_fail@plt+0x331c>
   145ec:	movw	r0, #57768	; 0xe1a8
   145f0:	movt	r0, #2
   145f4:	str	r0, [sp, #28]
   145f8:	b	145fc <__assert_fail@plt+0x331c>
   145fc:	ldr	r0, [sp, #28]
   14600:	str	r0, [fp, #-36]	; 0xffffffdc
   14604:	bl	111e4 <__errno_location@plt>
   14608:	ldr	r0, [r0]
   1460c:	str	r0, [sp, #40]	; 0x28
   14610:	ldr	r0, [fp, #-20]	; 0xffffffec
   14614:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14618:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1461c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14620:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14624:	ldr	lr, [lr]
   14628:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1462c:	ldr	ip, [ip, #4]
   14630:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14634:	add	r4, r4, #8
   14638:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1463c:	ldr	r5, [r5, #40]	; 0x28
   14640:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14644:	ldr	r6, [r6, #44]	; 0x2c
   14648:	str	lr, [sp]
   1464c:	str	ip, [sp, #4]
   14650:	str	r4, [sp, #8]
   14654:	str	r5, [sp, #12]
   14658:	str	r6, [sp, #16]
   1465c:	bl	14684 <__assert_fail@plt+0x33a4>
   14660:	str	r0, [sp, #36]	; 0x24
   14664:	ldr	r0, [sp, #40]	; 0x28
   14668:	str	r0, [sp, #24]
   1466c:	bl	111e4 <__errno_location@plt>
   14670:	ldr	r1, [sp, #24]
   14674:	str	r1, [r0]
   14678:	ldr	r0, [sp, #36]	; 0x24
   1467c:	sub	sp, fp, #16
   14680:	pop	{r4, r5, r6, sl, fp, pc}
   14684:	push	{r4, r5, r6, sl, fp, lr}
   14688:	add	fp, sp, #16
   1468c:	sub	sp, sp, #168	; 0xa8
   14690:	ldr	ip, [fp, #24]
   14694:	ldr	lr, [fp, #20]
   14698:	ldr	r4, [fp, #16]
   1469c:	ldr	r5, [fp, #12]
   146a0:	ldr	r6, [fp, #8]
   146a4:	str	r0, [fp, #-24]	; 0xffffffe8
   146a8:	str	r1, [fp, #-28]	; 0xffffffe4
   146ac:	str	r2, [fp, #-32]	; 0xffffffe0
   146b0:	str	r3, [fp, #-36]	; 0xffffffdc
   146b4:	movw	r0, #0
   146b8:	str	r0, [fp, #-44]	; 0xffffffd4
   146bc:	str	r0, [fp, #-48]	; 0xffffffd0
   146c0:	str	r0, [fp, #-52]	; 0xffffffcc
   146c4:	str	r0, [fp, #-56]	; 0xffffffc8
   146c8:	movw	r0, #0
   146cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   146d0:	str	r6, [sp, #80]	; 0x50
   146d4:	str	lr, [sp, #76]	; 0x4c
   146d8:	str	r4, [sp, #72]	; 0x48
   146dc:	str	r5, [sp, #68]	; 0x44
   146e0:	str	ip, [sp, #64]	; 0x40
   146e4:	bl	11118 <__ctype_get_mb_cur_max@plt>
   146e8:	cmp	r0, #1
   146ec:	movw	r0, #0
   146f0:	moveq	r0, #1
   146f4:	and	r0, r0, #1
   146f8:	strb	r0, [fp, #-58]	; 0xffffffc6
   146fc:	ldr	r0, [fp, #12]
   14700:	and	r0, r0, #2
   14704:	cmp	r0, #0
   14708:	movw	r0, #0
   1470c:	movne	r0, #1
   14710:	and	r0, r0, #1
   14714:	strb	r0, [fp, #-59]	; 0xffffffc5
   14718:	movw	r0, #0
   1471c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14720:	strb	r0, [fp, #-61]	; 0xffffffc3
   14724:	movw	r0, #1
   14728:	strb	r0, [fp, #-62]	; 0xffffffc2
   1472c:	ldr	r0, [fp, #8]
   14730:	cmp	r0, #10
   14734:	str	r0, [sp, #60]	; 0x3c
   14738:	bhi	14960 <__assert_fail@plt+0x3680>
   1473c:	add	r0, pc, #8
   14740:	ldr	r1, [sp, #60]	; 0x3c
   14744:	ldr	r0, [r0, r1, lsl #2]
   14748:	mov	pc, r0
   1474c:	andeq	r4, r1, r4, asr r9
   14750:	ldrdeq	r4, [r1], -r0
   14754:	strdeq	r4, [r1], -r0
   14758:	andeq	r4, r1, r8, asr #17
   1475c:	ldrdeq	r4, [r1], -r8
   14760:	andeq	r4, r1, r8, lsl #15
   14764:	andeq	r4, r1, r8, ror r7
   14768:	andeq	r4, r1, ip, ror #15
   1476c:	andeq	r4, r1, r0, lsl #16
   14770:	andeq	r4, r1, r0, lsl #16
   14774:	andeq	r4, r1, r0, lsl #16
   14778:	movw	r0, #5
   1477c:	str	r0, [fp, #8]
   14780:	movw	r0, #1
   14784:	strb	r0, [fp, #-59]	; 0xffffffc5
   14788:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1478c:	tst	r0, #1
   14790:	bne	147cc <__assert_fail@plt+0x34ec>
   14794:	b	14798 <__assert_fail@plt+0x34b8>
   14798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1479c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147a0:	cmp	r0, r1
   147a4:	bcs	147bc <__assert_fail@plt+0x34dc>
   147a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147b0:	add	r0, r0, r1
   147b4:	movw	r1, #34	; 0x22
   147b8:	strb	r1, [r0]
   147bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147c0:	add	r0, r0, #1
   147c4:	str	r0, [fp, #-44]	; 0xffffffd4
   147c8:	b	147cc <__assert_fail@plt+0x34ec>
   147cc:	movw	r0, #1
   147d0:	strb	r0, [fp, #-57]	; 0xffffffc7
   147d4:	movw	r0, #54729	; 0xd5c9
   147d8:	movt	r0, #1
   147dc:	str	r0, [fp, #-52]	; 0xffffffcc
   147e0:	movw	r0, #1
   147e4:	str	r0, [fp, #-56]	; 0xffffffc8
   147e8:	b	14964 <__assert_fail@plt+0x3684>
   147ec:	movw	r0, #1
   147f0:	strb	r0, [fp, #-57]	; 0xffffffc7
   147f4:	movw	r0, #0
   147f8:	strb	r0, [fp, #-59]	; 0xffffffc5
   147fc:	b	14964 <__assert_fail@plt+0x3684>
   14800:	ldr	r0, [fp, #8]
   14804:	cmp	r0, #10
   14808:	beq	14834 <__assert_fail@plt+0x3554>
   1480c:	ldr	r1, [fp, #8]
   14810:	movw	r0, #54731	; 0xd5cb
   14814:	movt	r0, #1
   14818:	bl	16874 <__assert_fail@plt+0x5594>
   1481c:	str	r0, [fp, #20]
   14820:	ldr	r1, [fp, #8]
   14824:	movw	r0, #54733	; 0xd5cd
   14828:	movt	r0, #1
   1482c:	bl	16874 <__assert_fail@plt+0x5594>
   14830:	str	r0, [fp, #24]
   14834:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14838:	tst	r0, #1
   1483c:	bne	148a8 <__assert_fail@plt+0x35c8>
   14840:	ldr	r0, [fp, #20]
   14844:	str	r0, [fp, #-52]	; 0xffffffcc
   14848:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1484c:	ldrsb	r0, [r0]
   14850:	cmp	r0, #0
   14854:	beq	148a4 <__assert_fail@plt+0x35c4>
   14858:	b	1485c <__assert_fail@plt+0x357c>
   1485c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14860:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14864:	cmp	r0, r1
   14868:	bcs	14884 <__assert_fail@plt+0x35a4>
   1486c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14870:	ldrb	r0, [r0]
   14874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14878:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1487c:	add	r1, r1, r2
   14880:	strb	r0, [r1]
   14884:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14888:	add	r0, r0, #1
   1488c:	str	r0, [fp, #-44]	; 0xffffffd4
   14890:	b	14894 <__assert_fail@plt+0x35b4>
   14894:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14898:	add	r0, r0, #1
   1489c:	str	r0, [fp, #-52]	; 0xffffffcc
   148a0:	b	14848 <__assert_fail@plt+0x3568>
   148a4:	b	148a8 <__assert_fail@plt+0x35c8>
   148a8:	movw	r0, #1
   148ac:	strb	r0, [fp, #-57]	; 0xffffffc7
   148b0:	ldr	r0, [fp, #24]
   148b4:	str	r0, [fp, #-52]	; 0xffffffcc
   148b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   148bc:	bl	111c0 <strlen@plt>
   148c0:	str	r0, [fp, #-56]	; 0xffffffc8
   148c4:	b	14964 <__assert_fail@plt+0x3684>
   148c8:	movw	r0, #1
   148cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   148d0:	movw	r0, #1
   148d4:	strb	r0, [fp, #-59]	; 0xffffffc5
   148d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148dc:	tst	r0, #1
   148e0:	bne	148ec <__assert_fail@plt+0x360c>
   148e4:	movw	r0, #1
   148e8:	strb	r0, [fp, #-57]	; 0xffffffc7
   148ec:	b	148f0 <__assert_fail@plt+0x3610>
   148f0:	movw	r0, #2
   148f4:	str	r0, [fp, #8]
   148f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148fc:	tst	r0, #1
   14900:	bne	1493c <__assert_fail@plt+0x365c>
   14904:	b	14908 <__assert_fail@plt+0x3628>
   14908:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1490c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14910:	cmp	r0, r1
   14914:	bcs	1492c <__assert_fail@plt+0x364c>
   14918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1491c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14920:	add	r0, r0, r1
   14924:	movw	r1, #39	; 0x27
   14928:	strb	r1, [r0]
   1492c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14930:	add	r0, r0, #1
   14934:	str	r0, [fp, #-44]	; 0xffffffd4
   14938:	b	1493c <__assert_fail@plt+0x365c>
   1493c:	movw	r0, #54733	; 0xd5cd
   14940:	movt	r0, #1
   14944:	str	r0, [fp, #-52]	; 0xffffffcc
   14948:	movw	r0, #1
   1494c:	str	r0, [fp, #-56]	; 0xffffffc8
   14950:	b	14964 <__assert_fail@plt+0x3684>
   14954:	movw	r0, #0
   14958:	strb	r0, [fp, #-59]	; 0xffffffc5
   1495c:	b	14964 <__assert_fail@plt+0x3684>
   14960:	bl	112b0 <abort@plt>
   14964:	movw	r0, #0
   14968:	str	r0, [fp, #-40]	; 0xffffffd8
   1496c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14970:	cmn	r0, #1
   14974:	bne	149a0 <__assert_fail@plt+0x36c0>
   14978:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1497c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14980:	add	r0, r0, r1
   14984:	ldrb	r0, [r0]
   14988:	cmp	r0, #0
   1498c:	movw	r0, #0
   14990:	moveq	r0, #1
   14994:	and	r0, r0, #1
   14998:	str	r0, [sp, #56]	; 0x38
   1499c:	b	149bc <__assert_fail@plt+0x36dc>
   149a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   149a8:	cmp	r0, r1
   149ac:	movw	r0, #0
   149b0:	moveq	r0, #1
   149b4:	and	r0, r0, #1
   149b8:	str	r0, [sp, #56]	; 0x38
   149bc:	ldr	r0, [sp, #56]	; 0x38
   149c0:	cmp	r0, #0
   149c4:	movw	r0, #0
   149c8:	movne	r0, #1
   149cc:	mvn	r1, #0
   149d0:	eor	r0, r0, r1
   149d4:	tst	r0, #1
   149d8:	beq	15bc8 <__assert_fail@plt+0x48e8>
   149dc:	movw	r0, #0
   149e0:	strb	r0, [fp, #-65]	; 0xffffffbf
   149e4:	strb	r0, [fp, #-66]	; 0xffffffbe
   149e8:	strb	r0, [fp, #-67]	; 0xffffffbd
   149ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   149f0:	tst	r0, #1
   149f4:	beq	14aa0 <__assert_fail@plt+0x37c0>
   149f8:	ldr	r0, [fp, #8]
   149fc:	cmp	r0, #2
   14a00:	beq	14aa0 <__assert_fail@plt+0x37c0>
   14a04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14a08:	cmp	r0, #0
   14a0c:	beq	14aa0 <__assert_fail@plt+0x37c0>
   14a10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a14:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14a18:	add	r0, r0, r1
   14a1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a20:	cmn	r1, #1
   14a24:	str	r0, [sp, #52]	; 0x34
   14a28:	bne	14a50 <__assert_fail@plt+0x3770>
   14a2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14a30:	movw	r1, #1
   14a34:	cmp	r1, r0
   14a38:	bcs	14a50 <__assert_fail@plt+0x3770>
   14a3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a40:	bl	111c0 <strlen@plt>
   14a44:	str	r0, [fp, #-36]	; 0xffffffdc
   14a48:	str	r0, [sp, #48]	; 0x30
   14a4c:	b	14a58 <__assert_fail@plt+0x3778>
   14a50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a54:	str	r0, [sp, #48]	; 0x30
   14a58:	ldr	r0, [sp, #48]	; 0x30
   14a5c:	ldr	r1, [sp, #52]	; 0x34
   14a60:	cmp	r1, r0
   14a64:	bhi	14aa0 <__assert_fail@plt+0x37c0>
   14a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a70:	add	r0, r0, r1
   14a74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14a78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14a7c:	bl	110d0 <memcmp@plt>
   14a80:	cmp	r0, #0
   14a84:	bne	14aa0 <__assert_fail@plt+0x37c0>
   14a88:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a8c:	tst	r0, #1
   14a90:	beq	14a98 <__assert_fail@plt+0x37b8>
   14a94:	b	15d48 <__assert_fail@plt+0x4a68>
   14a98:	movw	r0, #1
   14a9c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14aa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14aa4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14aa8:	ldrb	r0, [r0, r1]
   14aac:	strb	r0, [fp, #-63]	; 0xffffffc1
   14ab0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14ab4:	mov	r1, r0
   14ab8:	cmp	r0, #126	; 0x7e
   14abc:	str	r1, [sp, #44]	; 0x2c
   14ac0:	bhi	15330 <__assert_fail@plt+0x4050>
   14ac4:	add	r0, pc, #8
   14ac8:	ldr	r1, [sp, #44]	; 0x2c
   14acc:	ldr	r0, [r0, r1, lsl #2]
   14ad0:	mov	pc, r0
   14ad4:	ldrdeq	r4, [r1], -r0
   14ad8:	andeq	r5, r1, r0, lsr r3
   14adc:	andeq	r5, r1, r0, lsr r3
   14ae0:	andeq	r5, r1, r0, lsr r3
   14ae4:	andeq	r5, r1, r0, lsr r3
   14ae8:	andeq	r5, r1, r0, lsr r3
   14aec:	andeq	r5, r1, r0, lsr r3
   14af0:	ldrdeq	r5, [r1], -r8
   14af4:	andeq	r5, r1, r4, ror #1
   14af8:	andeq	r5, r1, r4, lsl r1
   14afc:	strdeq	r5, [r1], -ip
   14b00:	andeq	r5, r1, r0, lsr #2
   14b04:	strdeq	r5, [r1], -r0
   14b08:	andeq	r5, r1, r8, lsl #2
   14b0c:	andeq	r5, r1, r0, lsr r3
   14b10:	andeq	r5, r1, r0, lsr r3
   14b14:	andeq	r5, r1, r0, lsr r3
   14b18:	andeq	r5, r1, r0, lsr r3
   14b1c:	andeq	r5, r1, r0, lsr r3
   14b20:	andeq	r5, r1, r0, lsr r3
   14b24:	andeq	r5, r1, r0, lsr r3
   14b28:	andeq	r5, r1, r0, lsr r3
   14b2c:	andeq	r5, r1, r0, lsr r3
   14b30:	andeq	r5, r1, r0, lsr r3
   14b34:	andeq	r5, r1, r0, lsr r3
   14b38:	andeq	r5, r1, r0, lsr r3
   14b3c:	andeq	r5, r1, r0, lsr r3
   14b40:	andeq	r5, r1, r0, lsr r3
   14b44:	andeq	r5, r1, r0, lsr r3
   14b48:	andeq	r5, r1, r0, lsr r3
   14b4c:	andeq	r5, r1, r0, lsr r3
   14b50:	andeq	r5, r1, r0, lsr r3
   14b54:	andeq	r5, r1, r4, lsl #4
   14b58:	andeq	r5, r1, ip, lsl #4
   14b5c:	andeq	r5, r1, ip, lsl #4
   14b60:	strdeq	r5, [r1], -r0
   14b64:	andeq	r5, r1, ip, lsl #4
   14b68:	andeq	r5, r1, r4, lsr #6
   14b6c:	andeq	r5, r1, ip, lsl #4
   14b70:	andeq	r5, r1, ip, lsr #4
   14b74:	andeq	r5, r1, ip, lsl #4
   14b78:	andeq	r5, r1, ip, lsl #4
   14b7c:	andeq	r5, r1, ip, lsl #4
   14b80:	andeq	r5, r1, r4, lsr #6
   14b84:	andeq	r5, r1, r4, lsr #6
   14b88:	andeq	r5, r1, r4, lsr #6
   14b8c:	andeq	r5, r1, r4, lsr #6
   14b90:	andeq	r5, r1, r4, lsr #6
   14b94:	andeq	r5, r1, r4, lsr #6
   14b98:	andeq	r5, r1, r4, lsr #6
   14b9c:	andeq	r5, r1, r4, lsr #6
   14ba0:	andeq	r5, r1, r4, lsr #6
   14ba4:	andeq	r5, r1, r4, lsr #6
   14ba8:	andeq	r5, r1, r4, lsr #6
   14bac:	andeq	r5, r1, r4, lsr #6
   14bb0:	andeq	r5, r1, r4, lsr #6
   14bb4:	andeq	r5, r1, r4, lsr #6
   14bb8:	andeq	r5, r1, r4, lsr #6
   14bbc:	andeq	r5, r1, r4, lsr #6
   14bc0:	andeq	r5, r1, ip, lsl #4
   14bc4:	andeq	r5, r1, ip, lsl #4
   14bc8:	andeq	r5, r1, ip, lsl #4
   14bcc:	andeq	r5, r1, ip, lsl #4
   14bd0:	ldrdeq	r4, [r1], -ip
   14bd4:	andeq	r5, r1, r0, lsr r3
   14bd8:	andeq	r5, r1, r4, lsr #6
   14bdc:	andeq	r5, r1, r4, lsr #6
   14be0:	andeq	r5, r1, r4, lsr #6
   14be4:	andeq	r5, r1, r4, lsr #6
   14be8:	andeq	r5, r1, r4, lsr #6
   14bec:	andeq	r5, r1, r4, lsr #6
   14bf0:	andeq	r5, r1, r4, lsr #6
   14bf4:	andeq	r5, r1, r4, lsr #6
   14bf8:	andeq	r5, r1, r4, lsr #6
   14bfc:	andeq	r5, r1, r4, lsr #6
   14c00:	andeq	r5, r1, r4, lsr #6
   14c04:	andeq	r5, r1, r4, lsr #6
   14c08:	andeq	r5, r1, r4, lsr #6
   14c0c:	andeq	r5, r1, r4, lsr #6
   14c10:	andeq	r5, r1, r4, lsr #6
   14c14:	andeq	r5, r1, r4, lsr #6
   14c18:	andeq	r5, r1, r4, lsr #6
   14c1c:	andeq	r5, r1, r4, lsr #6
   14c20:	andeq	r5, r1, r4, lsr #6
   14c24:	andeq	r5, r1, r4, lsr #6
   14c28:	andeq	r5, r1, r4, lsr #6
   14c2c:	andeq	r5, r1, r4, lsr #6
   14c30:	andeq	r5, r1, r4, lsr #6
   14c34:	andeq	r5, r1, r4, lsr #6
   14c38:	andeq	r5, r1, r4, lsr #6
   14c3c:	andeq	r5, r1, r4, lsr #6
   14c40:	andeq	r5, r1, ip, lsl #4
   14c44:	andeq	r5, r1, ip, lsr #2
   14c48:	andeq	r5, r1, r4, lsr #6
   14c4c:	andeq	r5, r1, ip, lsl #4
   14c50:	andeq	r5, r1, r4, lsr #6
   14c54:	andeq	r5, r1, ip, lsl #4
   14c58:	andeq	r5, r1, r4, lsr #6
   14c5c:	andeq	r5, r1, r4, lsr #6
   14c60:	andeq	r5, r1, r4, lsr #6
   14c64:	andeq	r5, r1, r4, lsr #6
   14c68:	andeq	r5, r1, r4, lsr #6
   14c6c:	andeq	r5, r1, r4, lsr #6
   14c70:	andeq	r5, r1, r4, lsr #6
   14c74:	andeq	r5, r1, r4, lsr #6
   14c78:	andeq	r5, r1, r4, lsr #6
   14c7c:	andeq	r5, r1, r4, lsr #6
   14c80:	andeq	r5, r1, r4, lsr #6
   14c84:	andeq	r5, r1, r4, lsr #6
   14c88:	andeq	r5, r1, r4, lsr #6
   14c8c:	andeq	r5, r1, r4, lsr #6
   14c90:	andeq	r5, r1, r4, lsr #6
   14c94:	andeq	r5, r1, r4, lsr #6
   14c98:	andeq	r5, r1, r4, lsr #6
   14c9c:	andeq	r5, r1, r4, lsr #6
   14ca0:	andeq	r5, r1, r4, lsr #6
   14ca4:	andeq	r5, r1, r4, lsr #6
   14ca8:	andeq	r5, r1, r4, lsr #6
   14cac:	andeq	r5, r1, r4, lsr #6
   14cb0:	andeq	r5, r1, r4, lsr #6
   14cb4:	andeq	r5, r1, r4, lsr #6
   14cb8:	andeq	r5, r1, r4, lsr #6
   14cbc:	andeq	r5, r1, r4, lsr #6
   14cc0:			; <UNDEFINED> instruction: 0x000151bc
   14cc4:	andeq	r5, r1, ip, lsl #4
   14cc8:			; <UNDEFINED> instruction: 0x000151bc
   14ccc:	strdeq	r5, [r1], -r0
   14cd0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14cd4:	tst	r0, #1
   14cd8:	beq	14ec0 <__assert_fail@plt+0x3be0>
   14cdc:	b	14ce0 <__assert_fail@plt+0x3a00>
   14ce0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ce4:	tst	r0, #1
   14ce8:	beq	14cf0 <__assert_fail@plt+0x3a10>
   14cec:	b	15d48 <__assert_fail@plt+0x4a68>
   14cf0:	movw	r0, #1
   14cf4:	strb	r0, [fp, #-66]	; 0xffffffbe
   14cf8:	ldr	r0, [fp, #8]
   14cfc:	cmp	r0, #2
   14d00:	bne	14db4 <__assert_fail@plt+0x3ad4>
   14d04:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14d08:	tst	r0, #1
   14d0c:	bne	14db4 <__assert_fail@plt+0x3ad4>
   14d10:	b	14d14 <__assert_fail@plt+0x3a34>
   14d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d1c:	cmp	r0, r1
   14d20:	bcs	14d38 <__assert_fail@plt+0x3a58>
   14d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d2c:	add	r0, r0, r1
   14d30:	movw	r1, #39	; 0x27
   14d34:	strb	r1, [r0]
   14d38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d3c:	add	r0, r0, #1
   14d40:	str	r0, [fp, #-44]	; 0xffffffd4
   14d44:	b	14d48 <__assert_fail@plt+0x3a68>
   14d48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d50:	cmp	r0, r1
   14d54:	bcs	14d6c <__assert_fail@plt+0x3a8c>
   14d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d60:	add	r0, r0, r1
   14d64:	movw	r1, #36	; 0x24
   14d68:	strb	r1, [r0]
   14d6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d70:	add	r0, r0, #1
   14d74:	str	r0, [fp, #-44]	; 0xffffffd4
   14d78:	b	14d7c <__assert_fail@plt+0x3a9c>
   14d7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d84:	cmp	r0, r1
   14d88:	bcs	14da0 <__assert_fail@plt+0x3ac0>
   14d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d94:	add	r0, r0, r1
   14d98:	movw	r1, #39	; 0x27
   14d9c:	strb	r1, [r0]
   14da0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14da4:	add	r0, r0, #1
   14da8:	str	r0, [fp, #-44]	; 0xffffffd4
   14dac:	movw	r0, #1
   14db0:	strb	r0, [fp, #-60]	; 0xffffffc4
   14db4:	b	14db8 <__assert_fail@plt+0x3ad8>
   14db8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14dbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14dc0:	cmp	r0, r1
   14dc4:	bcs	14ddc <__assert_fail@plt+0x3afc>
   14dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14dd0:	add	r0, r0, r1
   14dd4:	movw	r1, #92	; 0x5c
   14dd8:	strb	r1, [r0]
   14ddc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14de0:	add	r0, r0, #1
   14de4:	str	r0, [fp, #-44]	; 0xffffffd4
   14de8:	b	14dec <__assert_fail@plt+0x3b0c>
   14dec:	ldr	r0, [fp, #8]
   14df0:	cmp	r0, #2
   14df4:	beq	14eb4 <__assert_fail@plt+0x3bd4>
   14df8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14dfc:	add	r0, r0, #1
   14e00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e04:	cmp	r0, r1
   14e08:	bcs	14eb4 <__assert_fail@plt+0x3bd4>
   14e0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e14:	add	r1, r1, #1
   14e18:	add	r0, r0, r1
   14e1c:	ldrb	r0, [r0]
   14e20:	movw	r1, #48	; 0x30
   14e24:	cmp	r1, r0
   14e28:	bgt	14eb4 <__assert_fail@plt+0x3bd4>
   14e2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e34:	add	r1, r1, #1
   14e38:	add	r0, r0, r1
   14e3c:	ldrb	r0, [r0]
   14e40:	cmp	r0, #57	; 0x39
   14e44:	bgt	14eb4 <__assert_fail@plt+0x3bd4>
   14e48:	b	14e4c <__assert_fail@plt+0x3b6c>
   14e4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e54:	cmp	r0, r1
   14e58:	bcs	14e70 <__assert_fail@plt+0x3b90>
   14e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e64:	add	r0, r0, r1
   14e68:	movw	r1, #48	; 0x30
   14e6c:	strb	r1, [r0]
   14e70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e74:	add	r0, r0, #1
   14e78:	str	r0, [fp, #-44]	; 0xffffffd4
   14e7c:	b	14e80 <__assert_fail@plt+0x3ba0>
   14e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e88:	cmp	r0, r1
   14e8c:	bcs	14ea4 <__assert_fail@plt+0x3bc4>
   14e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e98:	add	r0, r0, r1
   14e9c:	movw	r1, #48	; 0x30
   14ea0:	strb	r1, [r0]
   14ea4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ea8:	add	r0, r0, #1
   14eac:	str	r0, [fp, #-44]	; 0xffffffd4
   14eb0:	b	14eb4 <__assert_fail@plt+0x3bd4>
   14eb4:	movw	r0, #48	; 0x30
   14eb8:	strb	r0, [fp, #-63]	; 0xffffffc1
   14ebc:	b	14ed8 <__assert_fail@plt+0x3bf8>
   14ec0:	ldr	r0, [fp, #12]
   14ec4:	and	r0, r0, #1
   14ec8:	cmp	r0, #0
   14ecc:	beq	14ed4 <__assert_fail@plt+0x3bf4>
   14ed0:	b	15bb8 <__assert_fail@plt+0x48d8>
   14ed4:	b	14ed8 <__assert_fail@plt+0x3bf8>
   14ed8:	b	15954 <__assert_fail@plt+0x4674>
   14edc:	ldr	r0, [fp, #8]
   14ee0:	cmp	r0, #2
   14ee4:	str	r0, [sp, #40]	; 0x28
   14ee8:	beq	14f00 <__assert_fail@plt+0x3c20>
   14eec:	b	14ef0 <__assert_fail@plt+0x3c10>
   14ef0:	ldr	r0, [sp, #40]	; 0x28
   14ef4:	cmp	r0, #5
   14ef8:	beq	14f14 <__assert_fail@plt+0x3c34>
   14efc:	b	150d0 <__assert_fail@plt+0x3df0>
   14f00:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14f04:	tst	r0, #1
   14f08:	beq	14f10 <__assert_fail@plt+0x3c30>
   14f0c:	b	15d48 <__assert_fail@plt+0x4a68>
   14f10:	b	150d4 <__assert_fail@plt+0x3df4>
   14f14:	ldr	r0, [fp, #12]
   14f18:	and	r0, r0, #4
   14f1c:	cmp	r0, #0
   14f20:	beq	150cc <__assert_fail@plt+0x3dec>
   14f24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f28:	add	r0, r0, #2
   14f2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14f30:	cmp	r0, r1
   14f34:	bcs	150cc <__assert_fail@plt+0x3dec>
   14f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f40:	add	r1, r1, #1
   14f44:	add	r0, r0, r1
   14f48:	ldrb	r0, [r0]
   14f4c:	cmp	r0, #63	; 0x3f
   14f50:	bne	150cc <__assert_fail@plt+0x3dec>
   14f54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f5c:	add	r0, r0, r1
   14f60:	ldrb	r0, [r0, #2]
   14f64:	mov	r1, r0
   14f68:	cmp	r0, #33	; 0x21
   14f6c:	str	r1, [sp, #36]	; 0x24
   14f70:	beq	14fc0 <__assert_fail@plt+0x3ce0>
   14f74:	b	14f78 <__assert_fail@plt+0x3c98>
   14f78:	ldr	r0, [sp, #36]	; 0x24
   14f7c:	sub	r1, r0, #39	; 0x27
   14f80:	cmp	r1, #3
   14f84:	bcc	14fc0 <__assert_fail@plt+0x3ce0>
   14f88:	b	14f8c <__assert_fail@plt+0x3cac>
   14f8c:	ldr	r0, [sp, #36]	; 0x24
   14f90:	cmp	r0, #45	; 0x2d
   14f94:	beq	14fc0 <__assert_fail@plt+0x3ce0>
   14f98:	b	14f9c <__assert_fail@plt+0x3cbc>
   14f9c:	ldr	r0, [sp, #36]	; 0x24
   14fa0:	cmp	r0, #47	; 0x2f
   14fa4:	beq	14fc0 <__assert_fail@plt+0x3ce0>
   14fa8:	b	14fac <__assert_fail@plt+0x3ccc>
   14fac:	ldr	r0, [sp, #36]	; 0x24
   14fb0:	sub	r1, r0, #60	; 0x3c
   14fb4:	cmp	r1, #2
   14fb8:	bhi	150c4 <__assert_fail@plt+0x3de4>
   14fbc:	b	14fc0 <__assert_fail@plt+0x3ce0>
   14fc0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14fc4:	tst	r0, #1
   14fc8:	beq	14fd0 <__assert_fail@plt+0x3cf0>
   14fcc:	b	15d48 <__assert_fail@plt+0x4a68>
   14fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14fd8:	add	r1, r1, #2
   14fdc:	add	r0, r0, r1
   14fe0:	ldrb	r0, [r0]
   14fe4:	strb	r0, [fp, #-63]	; 0xffffffc1
   14fe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fec:	add	r0, r0, #2
   14ff0:	str	r0, [fp, #-40]	; 0xffffffd8
   14ff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ffc:	cmp	r0, r1
   15000:	bcs	15018 <__assert_fail@plt+0x3d38>
   15004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15008:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1500c:	add	r0, r0, r1
   15010:	movw	r1, #63	; 0x3f
   15014:	strb	r1, [r0]
   15018:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1501c:	add	r0, r0, #1
   15020:	str	r0, [fp, #-44]	; 0xffffffd4
   15024:	b	15028 <__assert_fail@plt+0x3d48>
   15028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1502c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15030:	cmp	r0, r1
   15034:	bcs	1504c <__assert_fail@plt+0x3d6c>
   15038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1503c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15040:	add	r0, r0, r1
   15044:	movw	r1, #34	; 0x22
   15048:	strb	r1, [r0]
   1504c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15050:	add	r0, r0, #1
   15054:	str	r0, [fp, #-44]	; 0xffffffd4
   15058:	b	1505c <__assert_fail@plt+0x3d7c>
   1505c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15060:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15064:	cmp	r0, r1
   15068:	bcs	15080 <__assert_fail@plt+0x3da0>
   1506c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15070:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15074:	add	r0, r0, r1
   15078:	movw	r1, #34	; 0x22
   1507c:	strb	r1, [r0]
   15080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15084:	add	r0, r0, #1
   15088:	str	r0, [fp, #-44]	; 0xffffffd4
   1508c:	b	15090 <__assert_fail@plt+0x3db0>
   15090:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15094:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15098:	cmp	r0, r1
   1509c:	bcs	150b4 <__assert_fail@plt+0x3dd4>
   150a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150a8:	add	r0, r0, r1
   150ac:	movw	r1, #63	; 0x3f
   150b0:	strb	r1, [r0]
   150b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150b8:	add	r0, r0, #1
   150bc:	str	r0, [fp, #-44]	; 0xffffffd4
   150c0:	b	150c8 <__assert_fail@plt+0x3de8>
   150c4:	b	150c8 <__assert_fail@plt+0x3de8>
   150c8:	b	150cc <__assert_fail@plt+0x3dec>
   150cc:	b	150d4 <__assert_fail@plt+0x3df4>
   150d0:	b	150d4 <__assert_fail@plt+0x3df4>
   150d4:	b	15954 <__assert_fail@plt+0x4674>
   150d8:	movw	r0, #97	; 0x61
   150dc:	strb	r0, [fp, #-64]	; 0xffffffc0
   150e0:	b	151a0 <__assert_fail@plt+0x3ec0>
   150e4:	movw	r0, #98	; 0x62
   150e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   150ec:	b	151a0 <__assert_fail@plt+0x3ec0>
   150f0:	movw	r0, #102	; 0x66
   150f4:	strb	r0, [fp, #-64]	; 0xffffffc0
   150f8:	b	151a0 <__assert_fail@plt+0x3ec0>
   150fc:	movw	r0, #110	; 0x6e
   15100:	strb	r0, [fp, #-64]	; 0xffffffc0
   15104:	b	15180 <__assert_fail@plt+0x3ea0>
   15108:	movw	r0, #114	; 0x72
   1510c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15110:	b	15180 <__assert_fail@plt+0x3ea0>
   15114:	movw	r0, #116	; 0x74
   15118:	strb	r0, [fp, #-64]	; 0xffffffc0
   1511c:	b	15180 <__assert_fail@plt+0x3ea0>
   15120:	movw	r0, #118	; 0x76
   15124:	strb	r0, [fp, #-64]	; 0xffffffc0
   15128:	b	151a0 <__assert_fail@plt+0x3ec0>
   1512c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15130:	strb	r0, [fp, #-64]	; 0xffffffc0
   15134:	ldr	r0, [fp, #8]
   15138:	cmp	r0, #2
   1513c:	bne	15154 <__assert_fail@plt+0x3e74>
   15140:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15144:	tst	r0, #1
   15148:	beq	15150 <__assert_fail@plt+0x3e70>
   1514c:	b	15d48 <__assert_fail@plt+0x4a68>
   15150:	b	15adc <__assert_fail@plt+0x47fc>
   15154:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15158:	tst	r0, #1
   1515c:	beq	1517c <__assert_fail@plt+0x3e9c>
   15160:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15164:	tst	r0, #1
   15168:	beq	1517c <__assert_fail@plt+0x3e9c>
   1516c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15170:	cmp	r0, #0
   15174:	beq	1517c <__assert_fail@plt+0x3e9c>
   15178:	b	15adc <__assert_fail@plt+0x47fc>
   1517c:	b	15180 <__assert_fail@plt+0x3ea0>
   15180:	ldr	r0, [fp, #8]
   15184:	cmp	r0, #2
   15188:	bne	1519c <__assert_fail@plt+0x3ebc>
   1518c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15190:	tst	r0, #1
   15194:	beq	1519c <__assert_fail@plt+0x3ebc>
   15198:	b	15d48 <__assert_fail@plt+0x4a68>
   1519c:	b	151a0 <__assert_fail@plt+0x3ec0>
   151a0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   151a4:	tst	r0, #1
   151a8:	beq	151b8 <__assert_fail@plt+0x3ed8>
   151ac:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   151b0:	strb	r0, [fp, #-63]	; 0xffffffc1
   151b4:	b	159c8 <__assert_fail@plt+0x46e8>
   151b8:	b	15954 <__assert_fail@plt+0x4674>
   151bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   151c0:	cmn	r0, #1
   151c4:	bne	151dc <__assert_fail@plt+0x3efc>
   151c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151cc:	ldrb	r0, [r0, #1]
   151d0:	cmp	r0, #0
   151d4:	beq	151ec <__assert_fail@plt+0x3f0c>
   151d8:	b	151e8 <__assert_fail@plt+0x3f08>
   151dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   151e0:	cmp	r0, #1
   151e4:	beq	151ec <__assert_fail@plt+0x3f0c>
   151e8:	b	15954 <__assert_fail@plt+0x4674>
   151ec:	b	151f0 <__assert_fail@plt+0x3f10>
   151f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151f4:	cmp	r0, #0
   151f8:	beq	15200 <__assert_fail@plt+0x3f20>
   151fc:	b	15954 <__assert_fail@plt+0x4674>
   15200:	b	15204 <__assert_fail@plt+0x3f24>
   15204:	movw	r0, #1
   15208:	strb	r0, [fp, #-67]	; 0xffffffbd
   1520c:	ldr	r0, [fp, #8]
   15210:	cmp	r0, #2
   15214:	bne	15228 <__assert_fail@plt+0x3f48>
   15218:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1521c:	tst	r0, #1
   15220:	beq	15228 <__assert_fail@plt+0x3f48>
   15224:	b	15d48 <__assert_fail@plt+0x4a68>
   15228:	b	15954 <__assert_fail@plt+0x4674>
   1522c:	movw	r0, #1
   15230:	strb	r0, [fp, #-61]	; 0xffffffc3
   15234:	strb	r0, [fp, #-67]	; 0xffffffbd
   15238:	ldr	r0, [fp, #8]
   1523c:	cmp	r0, #2
   15240:	bne	15320 <__assert_fail@plt+0x4040>
   15244:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15248:	tst	r0, #1
   1524c:	beq	15254 <__assert_fail@plt+0x3f74>
   15250:	b	15d48 <__assert_fail@plt+0x4a68>
   15254:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15258:	cmp	r0, #0
   1525c:	beq	1527c <__assert_fail@plt+0x3f9c>
   15260:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15264:	cmp	r0, #0
   15268:	bne	1527c <__assert_fail@plt+0x3f9c>
   1526c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15270:	str	r0, [fp, #-48]	; 0xffffffd0
   15274:	movw	r0, #0
   15278:	str	r0, [fp, #-28]	; 0xffffffe4
   1527c:	b	15280 <__assert_fail@plt+0x3fa0>
   15280:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15284:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15288:	cmp	r0, r1
   1528c:	bcs	152a4 <__assert_fail@plt+0x3fc4>
   15290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15294:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15298:	add	r0, r0, r1
   1529c:	movw	r1, #39	; 0x27
   152a0:	strb	r1, [r0]
   152a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152a8:	add	r0, r0, #1
   152ac:	str	r0, [fp, #-44]	; 0xffffffd4
   152b0:	b	152b4 <__assert_fail@plt+0x3fd4>
   152b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152bc:	cmp	r0, r1
   152c0:	bcs	152d8 <__assert_fail@plt+0x3ff8>
   152c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152cc:	add	r0, r0, r1
   152d0:	movw	r1, #92	; 0x5c
   152d4:	strb	r1, [r0]
   152d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152dc:	add	r0, r0, #1
   152e0:	str	r0, [fp, #-44]	; 0xffffffd4
   152e4:	b	152e8 <__assert_fail@plt+0x4008>
   152e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152f0:	cmp	r0, r1
   152f4:	bcs	1530c <__assert_fail@plt+0x402c>
   152f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15300:	add	r0, r0, r1
   15304:	movw	r1, #39	; 0x27
   15308:	strb	r1, [r0]
   1530c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15310:	add	r0, r0, #1
   15314:	str	r0, [fp, #-44]	; 0xffffffd4
   15318:	movw	r0, #0
   1531c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15320:	b	15954 <__assert_fail@plt+0x4674>
   15324:	movw	r0, #1
   15328:	strb	r0, [fp, #-67]	; 0xffffffbd
   1532c:	b	15954 <__assert_fail@plt+0x4674>
   15330:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15334:	tst	r0, #1
   15338:	beq	1537c <__assert_fail@plt+0x409c>
   1533c:	mov	r0, #1
   15340:	str	r0, [fp, #-72]	; 0xffffffb8
   15344:	bl	1119c <__ctype_b_loc@plt>
   15348:	ldr	r0, [r0]
   1534c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   15350:	mov	r1, lr
   15354:	add	r0, r0, lr, lsl #1
   15358:	ldrh	r0, [r0]
   1535c:	and	r0, r0, #16384	; 0x4000
   15360:	cmp	r0, #0
   15364:	movw	r0, #0
   15368:	movne	r0, #1
   1536c:	and	r0, r0, #1
   15370:	strb	r0, [fp, #-73]	; 0xffffffb7
   15374:	str	r1, [sp, #32]
   15378:	b	15608 <__assert_fail@plt+0x4328>
   1537c:	sub	r0, fp, #84	; 0x54
   15380:	movw	r1, #0
   15384:	and	r1, r1, #255	; 0xff
   15388:	movw	r2, #8
   1538c:	bl	111fc <memset@plt>
   15390:	movw	r0, #0
   15394:	str	r0, [fp, #-72]	; 0xffffffb8
   15398:	movw	r0, #1
   1539c:	strb	r0, [fp, #-73]	; 0xffffffb7
   153a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153a4:	cmn	r0, #1
   153a8:	bne	153b8 <__assert_fail@plt+0x40d8>
   153ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153b0:	bl	111c0 <strlen@plt>
   153b4:	str	r0, [fp, #-36]	; 0xffffffdc
   153b8:	b	153bc <__assert_fail@plt+0x40dc>
   153bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   153c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   153c8:	add	r1, r1, r2
   153cc:	add	r1, r0, r1
   153d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   153d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   153dc:	add	r2, r2, r3
   153e0:	sub	r2, r0, r2
   153e4:	sub	r0, fp, #88	; 0x58
   153e8:	sub	r3, fp, #84	; 0x54
   153ec:	bl	1a93c <__assert_fail@plt+0x965c>
   153f0:	str	r0, [sp, #92]	; 0x5c
   153f4:	ldr	r0, [sp, #92]	; 0x5c
   153f8:	cmp	r0, #0
   153fc:	bne	15404 <__assert_fail@plt+0x4124>
   15400:	b	15604 <__assert_fail@plt+0x4324>
   15404:	ldr	r0, [sp, #92]	; 0x5c
   15408:	cmn	r0, #1
   1540c:	bne	1541c <__assert_fail@plt+0x413c>
   15410:	movw	r0, #0
   15414:	strb	r0, [fp, #-73]	; 0xffffffb7
   15418:	b	15604 <__assert_fail@plt+0x4324>
   1541c:	ldr	r0, [sp, #92]	; 0x5c
   15420:	cmn	r0, #2
   15424:	bne	15498 <__assert_fail@plt+0x41b8>
   15428:	movw	r0, #0
   1542c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15430:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15434:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15438:	add	r0, r0, r1
   1543c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15440:	cmp	r0, r1
   15444:	movw	r0, #0
   15448:	str	r0, [sp, #28]
   1544c:	bcs	15478 <__assert_fail@plt+0x4198>
   15450:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15454:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15458:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1545c:	add	r1, r1, r2
   15460:	add	r0, r0, r1
   15464:	ldrb	r0, [r0]
   15468:	cmp	r0, #0
   1546c:	movw	r0, #0
   15470:	movne	r0, #1
   15474:	str	r0, [sp, #28]
   15478:	ldr	r0, [sp, #28]
   1547c:	tst	r0, #1
   15480:	beq	15494 <__assert_fail@plt+0x41b4>
   15484:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15488:	add	r0, r0, #1
   1548c:	str	r0, [fp, #-72]	; 0xffffffb8
   15490:	b	15430 <__assert_fail@plt+0x4150>
   15494:	b	15604 <__assert_fail@plt+0x4324>
   15498:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1549c:	tst	r0, #1
   154a0:	beq	155ac <__assert_fail@plt+0x42cc>
   154a4:	ldr	r0, [fp, #8]
   154a8:	cmp	r0, #2
   154ac:	bne	155ac <__assert_fail@plt+0x42cc>
   154b0:	movw	r0, #1
   154b4:	str	r0, [sp, #88]	; 0x58
   154b8:	ldr	r0, [sp, #88]	; 0x58
   154bc:	ldr	r1, [sp, #92]	; 0x5c
   154c0:	cmp	r0, r1
   154c4:	bcs	155a8 <__assert_fail@plt+0x42c8>
   154c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   154d4:	add	r1, r1, r2
   154d8:	ldr	r2, [sp, #88]	; 0x58
   154dc:	add	r1, r1, r2
   154e0:	ldrb	r0, [r0, r1]
   154e4:	sub	r0, r0, #91	; 0x5b
   154e8:	cmp	r0, #33	; 0x21
   154ec:	str	r0, [sp, #24]
   154f0:	bhi	15590 <__assert_fail@plt+0x42b0>
   154f4:	add	r0, pc, #8
   154f8:	ldr	r1, [sp, #24]
   154fc:	ldr	r0, [r0, r1, lsl #2]
   15500:	mov	pc, r0
   15504:	andeq	r5, r1, ip, lsl #11
   15508:	andeq	r5, r1, ip, lsl #11
   1550c:	muleq	r1, r0, r5
   15510:	andeq	r5, r1, ip, lsl #11
   15514:	muleq	r1, r0, r5
   15518:	andeq	r5, r1, ip, lsl #11
   1551c:	muleq	r1, r0, r5
   15520:	muleq	r1, r0, r5
   15524:	muleq	r1, r0, r5
   15528:	muleq	r1, r0, r5
   1552c:	muleq	r1, r0, r5
   15530:	muleq	r1, r0, r5
   15534:	muleq	r1, r0, r5
   15538:	muleq	r1, r0, r5
   1553c:	muleq	r1, r0, r5
   15540:	muleq	r1, r0, r5
   15544:	muleq	r1, r0, r5
   15548:	muleq	r1, r0, r5
   1554c:	muleq	r1, r0, r5
   15550:	muleq	r1, r0, r5
   15554:	muleq	r1, r0, r5
   15558:	muleq	r1, r0, r5
   1555c:	muleq	r1, r0, r5
   15560:	muleq	r1, r0, r5
   15564:	muleq	r1, r0, r5
   15568:	muleq	r1, r0, r5
   1556c:	muleq	r1, r0, r5
   15570:	muleq	r1, r0, r5
   15574:	muleq	r1, r0, r5
   15578:	muleq	r1, r0, r5
   1557c:	muleq	r1, r0, r5
   15580:	muleq	r1, r0, r5
   15584:	muleq	r1, r0, r5
   15588:	andeq	r5, r1, ip, lsl #11
   1558c:	b	15d48 <__assert_fail@plt+0x4a68>
   15590:	b	15594 <__assert_fail@plt+0x42b4>
   15594:	b	15598 <__assert_fail@plt+0x42b8>
   15598:	ldr	r0, [sp, #88]	; 0x58
   1559c:	add	r0, r0, #1
   155a0:	str	r0, [sp, #88]	; 0x58
   155a4:	b	154b8 <__assert_fail@plt+0x41d8>
   155a8:	b	155ac <__assert_fail@plt+0x42cc>
   155ac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   155b0:	bl	11100 <iswprint@plt>
   155b4:	cmp	r0, #0
   155b8:	bne	155c4 <__assert_fail@plt+0x42e4>
   155bc:	movw	r0, #0
   155c0:	strb	r0, [fp, #-73]	; 0xffffffb7
   155c4:	ldr	r0, [sp, #92]	; 0x5c
   155c8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   155cc:	add	r0, r1, r0
   155d0:	str	r0, [fp, #-72]	; 0xffffffb8
   155d4:	b	155d8 <__assert_fail@plt+0x42f8>
   155d8:	b	155dc <__assert_fail@plt+0x42fc>
   155dc:	b	155e0 <__assert_fail@plt+0x4300>
   155e0:	sub	r0, fp, #84	; 0x54
   155e4:	bl	110b8 <mbsinit@plt>
   155e8:	cmp	r0, #0
   155ec:	movw	r0, #0
   155f0:	movne	r0, #1
   155f4:	mvn	lr, #0
   155f8:	eor	r0, r0, lr
   155fc:	tst	r0, #1
   15600:	bne	153bc <__assert_fail@plt+0x40dc>
   15604:	b	15608 <__assert_fail@plt+0x4328>
   15608:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1560c:	and	r0, r0, #1
   15610:	strb	r0, [fp, #-67]	; 0xffffffbd
   15614:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15618:	movw	r1, #1
   1561c:	cmp	r1, r0
   15620:	bcc	1563c <__assert_fail@plt+0x435c>
   15624:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15628:	tst	r0, #1
   1562c:	beq	15950 <__assert_fail@plt+0x4670>
   15630:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15634:	tst	r0, #1
   15638:	bne	15950 <__assert_fail@plt+0x4670>
   1563c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15640:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15644:	add	r0, r0, r1
   15648:	str	r0, [sp, #84]	; 0x54
   1564c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15650:	tst	r0, #1
   15654:	beq	15804 <__assert_fail@plt+0x4524>
   15658:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1565c:	tst	r0, #1
   15660:	bne	15804 <__assert_fail@plt+0x4524>
   15664:	b	15668 <__assert_fail@plt+0x4388>
   15668:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1566c:	tst	r0, #1
   15670:	beq	15678 <__assert_fail@plt+0x4398>
   15674:	b	15d48 <__assert_fail@plt+0x4a68>
   15678:	movw	r0, #1
   1567c:	strb	r0, [fp, #-66]	; 0xffffffbe
   15680:	ldr	r0, [fp, #8]
   15684:	cmp	r0, #2
   15688:	bne	1573c <__assert_fail@plt+0x445c>
   1568c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15690:	tst	r0, #1
   15694:	bne	1573c <__assert_fail@plt+0x445c>
   15698:	b	1569c <__assert_fail@plt+0x43bc>
   1569c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156a4:	cmp	r0, r1
   156a8:	bcs	156c0 <__assert_fail@plt+0x43e0>
   156ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156b4:	add	r0, r0, r1
   156b8:	movw	r1, #39	; 0x27
   156bc:	strb	r1, [r0]
   156c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156c4:	add	r0, r0, #1
   156c8:	str	r0, [fp, #-44]	; 0xffffffd4
   156cc:	b	156d0 <__assert_fail@plt+0x43f0>
   156d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156d8:	cmp	r0, r1
   156dc:	bcs	156f4 <__assert_fail@plt+0x4414>
   156e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156e8:	add	r0, r0, r1
   156ec:	movw	r1, #36	; 0x24
   156f0:	strb	r1, [r0]
   156f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156f8:	add	r0, r0, #1
   156fc:	str	r0, [fp, #-44]	; 0xffffffd4
   15700:	b	15704 <__assert_fail@plt+0x4424>
   15704:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15708:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1570c:	cmp	r0, r1
   15710:	bcs	15728 <__assert_fail@plt+0x4448>
   15714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15718:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1571c:	add	r0, r0, r1
   15720:	movw	r1, #39	; 0x27
   15724:	strb	r1, [r0]
   15728:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1572c:	add	r0, r0, #1
   15730:	str	r0, [fp, #-44]	; 0xffffffd4
   15734:	movw	r0, #1
   15738:	strb	r0, [fp, #-60]	; 0xffffffc4
   1573c:	b	15740 <__assert_fail@plt+0x4460>
   15740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15748:	cmp	r0, r1
   1574c:	bcs	15764 <__assert_fail@plt+0x4484>
   15750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15754:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15758:	add	r0, r0, r1
   1575c:	movw	r1, #92	; 0x5c
   15760:	strb	r1, [r0]
   15764:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15768:	add	r0, r0, #1
   1576c:	str	r0, [fp, #-44]	; 0xffffffd4
   15770:	b	15774 <__assert_fail@plt+0x4494>
   15774:	b	15778 <__assert_fail@plt+0x4498>
   15778:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1577c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15780:	cmp	r0, r1
   15784:	bcs	157a4 <__assert_fail@plt+0x44c4>
   15788:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1578c:	asr	r0, r0, #6
   15790:	add	r0, r0, #48	; 0x30
   15794:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15798:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1579c:	add	r1, r1, r2
   157a0:	strb	r0, [r1]
   157a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157a8:	add	r0, r0, #1
   157ac:	str	r0, [fp, #-44]	; 0xffffffd4
   157b0:	b	157b4 <__assert_fail@plt+0x44d4>
   157b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157bc:	cmp	r0, r1
   157c0:	bcs	157e4 <__assert_fail@plt+0x4504>
   157c4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   157c8:	asr	r0, r0, #3
   157cc:	and	r0, r0, #7
   157d0:	add	r0, r0, #48	; 0x30
   157d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   157dc:	add	r1, r1, r2
   157e0:	strb	r0, [r1]
   157e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157e8:	add	r0, r0, #1
   157ec:	str	r0, [fp, #-44]	; 0xffffffd4
   157f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   157f4:	and	r0, r0, #7
   157f8:	add	r0, r0, #48	; 0x30
   157fc:	strb	r0, [fp, #-63]	; 0xffffffc1
   15800:	b	15850 <__assert_fail@plt+0x4570>
   15804:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15808:	tst	r0, #1
   1580c:	beq	1584c <__assert_fail@plt+0x456c>
   15810:	b	15814 <__assert_fail@plt+0x4534>
   15814:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15818:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1581c:	cmp	r0, r1
   15820:	bcs	15838 <__assert_fail@plt+0x4558>
   15824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15828:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1582c:	add	r0, r0, r1
   15830:	movw	r1, #92	; 0x5c
   15834:	strb	r1, [r0]
   15838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1583c:	add	r0, r0, #1
   15840:	str	r0, [fp, #-44]	; 0xffffffd4
   15844:	movw	r0, #0
   15848:	strb	r0, [fp, #-65]	; 0xffffffbf
   1584c:	b	15850 <__assert_fail@plt+0x4570>
   15850:	ldr	r0, [sp, #84]	; 0x54
   15854:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15858:	add	r1, r1, #1
   1585c:	cmp	r0, r1
   15860:	bhi	15868 <__assert_fail@plt+0x4588>
   15864:	b	1594c <__assert_fail@plt+0x466c>
   15868:	b	1586c <__assert_fail@plt+0x458c>
   1586c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15870:	tst	r0, #1
   15874:	beq	158f4 <__assert_fail@plt+0x4614>
   15878:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1587c:	tst	r0, #1
   15880:	bne	158f4 <__assert_fail@plt+0x4614>
   15884:	b	15888 <__assert_fail@plt+0x45a8>
   15888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1588c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15890:	cmp	r0, r1
   15894:	bcs	158ac <__assert_fail@plt+0x45cc>
   15898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1589c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158a0:	add	r0, r0, r1
   158a4:	movw	r1, #39	; 0x27
   158a8:	strb	r1, [r0]
   158ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158b0:	add	r0, r0, #1
   158b4:	str	r0, [fp, #-44]	; 0xffffffd4
   158b8:	b	158bc <__assert_fail@plt+0x45dc>
   158bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158c4:	cmp	r0, r1
   158c8:	bcs	158e0 <__assert_fail@plt+0x4600>
   158cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158d4:	add	r0, r0, r1
   158d8:	movw	r1, #39	; 0x27
   158dc:	strb	r1, [r0]
   158e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158e4:	add	r0, r0, #1
   158e8:	str	r0, [fp, #-44]	; 0xffffffd4
   158ec:	movw	r0, #0
   158f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   158f4:	b	158f8 <__assert_fail@plt+0x4618>
   158f8:	b	158fc <__assert_fail@plt+0x461c>
   158fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15900:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15904:	cmp	r0, r1
   15908:	bcs	15920 <__assert_fail@plt+0x4640>
   1590c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15914:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15918:	add	r1, r1, r2
   1591c:	strb	r0, [r1]
   15920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15924:	add	r0, r0, #1
   15928:	str	r0, [fp, #-44]	; 0xffffffd4
   1592c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15930:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15934:	add	r1, r1, #1
   15938:	str	r1, [fp, #-40]	; 0xffffffd8
   1593c:	add	r0, r0, r1
   15940:	ldrb	r0, [r0]
   15944:	strb	r0, [fp, #-63]	; 0xffffffc1
   15948:	b	1564c <__assert_fail@plt+0x436c>
   1594c:	b	15adc <__assert_fail@plt+0x47fc>
   15950:	b	15954 <__assert_fail@plt+0x4674>
   15954:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15958:	tst	r0, #1
   1595c:	beq	1596c <__assert_fail@plt+0x468c>
   15960:	ldr	r0, [fp, #8]
   15964:	cmp	r0, #2
   15968:	bne	15978 <__assert_fail@plt+0x4698>
   1596c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15970:	tst	r0, #1
   15974:	beq	159b4 <__assert_fail@plt+0x46d4>
   15978:	ldr	r0, [fp, #16]
   1597c:	movw	r1, #0
   15980:	cmp	r0, r1
   15984:	beq	159b4 <__assert_fail@plt+0x46d4>
   15988:	ldr	r0, [fp, #16]
   1598c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15990:	lsr	r1, r1, #5
   15994:	add	r0, r0, r1, lsl #2
   15998:	ldr	r0, [r0]
   1599c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   159a0:	and	r1, r1, #31
   159a4:	lsr	r0, r0, r1
   159a8:	and	r0, r0, #1
   159ac:	cmp	r0, #0
   159b0:	bne	159c4 <__assert_fail@plt+0x46e4>
   159b4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   159b8:	tst	r0, #1
   159bc:	bne	159c4 <__assert_fail@plt+0x46e4>
   159c0:	b	15adc <__assert_fail@plt+0x47fc>
   159c4:	b	159c8 <__assert_fail@plt+0x46e8>
   159c8:	b	159cc <__assert_fail@plt+0x46ec>
   159cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   159d0:	tst	r0, #1
   159d4:	beq	159dc <__assert_fail@plt+0x46fc>
   159d8:	b	15d48 <__assert_fail@plt+0x4a68>
   159dc:	movw	r0, #1
   159e0:	strb	r0, [fp, #-66]	; 0xffffffbe
   159e4:	ldr	r0, [fp, #8]
   159e8:	cmp	r0, #2
   159ec:	bne	15aa0 <__assert_fail@plt+0x47c0>
   159f0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   159f4:	tst	r0, #1
   159f8:	bne	15aa0 <__assert_fail@plt+0x47c0>
   159fc:	b	15a00 <__assert_fail@plt+0x4720>
   15a00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a08:	cmp	r0, r1
   15a0c:	bcs	15a24 <__assert_fail@plt+0x4744>
   15a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a18:	add	r0, r0, r1
   15a1c:	movw	r1, #39	; 0x27
   15a20:	strb	r1, [r0]
   15a24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a28:	add	r0, r0, #1
   15a2c:	str	r0, [fp, #-44]	; 0xffffffd4
   15a30:	b	15a34 <__assert_fail@plt+0x4754>
   15a34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a3c:	cmp	r0, r1
   15a40:	bcs	15a58 <__assert_fail@plt+0x4778>
   15a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a4c:	add	r0, r0, r1
   15a50:	movw	r1, #36	; 0x24
   15a54:	strb	r1, [r0]
   15a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a5c:	add	r0, r0, #1
   15a60:	str	r0, [fp, #-44]	; 0xffffffd4
   15a64:	b	15a68 <__assert_fail@plt+0x4788>
   15a68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a70:	cmp	r0, r1
   15a74:	bcs	15a8c <__assert_fail@plt+0x47ac>
   15a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a80:	add	r0, r0, r1
   15a84:	movw	r1, #39	; 0x27
   15a88:	strb	r1, [r0]
   15a8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a90:	add	r0, r0, #1
   15a94:	str	r0, [fp, #-44]	; 0xffffffd4
   15a98:	movw	r0, #1
   15a9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15aa0:	b	15aa4 <__assert_fail@plt+0x47c4>
   15aa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15aa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15aac:	cmp	r0, r1
   15ab0:	bcs	15ac8 <__assert_fail@plt+0x47e8>
   15ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ab8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15abc:	add	r0, r0, r1
   15ac0:	movw	r1, #92	; 0x5c
   15ac4:	strb	r1, [r0]
   15ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15acc:	add	r0, r0, #1
   15ad0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ad4:	b	15ad8 <__assert_fail@plt+0x47f8>
   15ad8:	b	15adc <__assert_fail@plt+0x47fc>
   15adc:	b	15ae0 <__assert_fail@plt+0x4800>
   15ae0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15ae4:	tst	r0, #1
   15ae8:	beq	15b68 <__assert_fail@plt+0x4888>
   15aec:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15af0:	tst	r0, #1
   15af4:	bne	15b68 <__assert_fail@plt+0x4888>
   15af8:	b	15afc <__assert_fail@plt+0x481c>
   15afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b04:	cmp	r0, r1
   15b08:	bcs	15b20 <__assert_fail@plt+0x4840>
   15b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b14:	add	r0, r0, r1
   15b18:	movw	r1, #39	; 0x27
   15b1c:	strb	r1, [r0]
   15b20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b24:	add	r0, r0, #1
   15b28:	str	r0, [fp, #-44]	; 0xffffffd4
   15b2c:	b	15b30 <__assert_fail@plt+0x4850>
   15b30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b38:	cmp	r0, r1
   15b3c:	bcs	15b54 <__assert_fail@plt+0x4874>
   15b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b48:	add	r0, r0, r1
   15b4c:	movw	r1, #39	; 0x27
   15b50:	strb	r1, [r0]
   15b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b58:	add	r0, r0, #1
   15b5c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b60:	movw	r0, #0
   15b64:	strb	r0, [fp, #-60]	; 0xffffffc4
   15b68:	b	15b6c <__assert_fail@plt+0x488c>
   15b6c:	b	15b70 <__assert_fail@plt+0x4890>
   15b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b78:	cmp	r0, r1
   15b7c:	bcs	15b94 <__assert_fail@plt+0x48b4>
   15b80:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15b8c:	add	r1, r1, r2
   15b90:	strb	r0, [r1]
   15b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b98:	add	r0, r0, #1
   15b9c:	str	r0, [fp, #-44]	; 0xffffffd4
   15ba0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15ba4:	tst	r0, #1
   15ba8:	bne	15bb4 <__assert_fail@plt+0x48d4>
   15bac:	movw	r0, #0
   15bb0:	strb	r0, [fp, #-62]	; 0xffffffc2
   15bb4:	b	15bb8 <__assert_fail@plt+0x48d8>
   15bb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15bbc:	add	r0, r0, #1
   15bc0:	str	r0, [fp, #-40]	; 0xffffffd8
   15bc4:	b	1496c <__assert_fail@plt+0x368c>
   15bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bcc:	cmp	r0, #0
   15bd0:	bne	15bf0 <__assert_fail@plt+0x4910>
   15bd4:	ldr	r0, [fp, #8]
   15bd8:	cmp	r0, #2
   15bdc:	bne	15bf0 <__assert_fail@plt+0x4910>
   15be0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15be4:	tst	r0, #1
   15be8:	beq	15bf0 <__assert_fail@plt+0x4910>
   15bec:	b	15d48 <__assert_fail@plt+0x4a68>
   15bf0:	ldr	r0, [fp, #8]
   15bf4:	cmp	r0, #2
   15bf8:	bne	15c98 <__assert_fail@plt+0x49b8>
   15bfc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c00:	tst	r0, #1
   15c04:	bne	15c98 <__assert_fail@plt+0x49b8>
   15c08:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15c0c:	tst	r0, #1
   15c10:	beq	15c98 <__assert_fail@plt+0x49b8>
   15c14:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15c18:	tst	r0, #1
   15c1c:	beq	15c64 <__assert_fail@plt+0x4984>
   15c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15c2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15c30:	ldr	ip, [fp, #12]
   15c34:	ldr	lr, [fp, #16]
   15c38:	ldr	r4, [fp, #20]
   15c3c:	ldr	r5, [fp, #24]
   15c40:	movw	r6, #5
   15c44:	str	r6, [sp]
   15c48:	str	ip, [sp, #4]
   15c4c:	str	lr, [sp, #8]
   15c50:	str	r4, [sp, #12]
   15c54:	str	r5, [sp, #16]
   15c58:	bl	14684 <__assert_fail@plt+0x33a4>
   15c5c:	str	r0, [fp, #-20]	; 0xffffffec
   15c60:	b	15db0 <__assert_fail@plt+0x4ad0>
   15c64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c68:	cmp	r0, #0
   15c6c:	bne	15c90 <__assert_fail@plt+0x49b0>
   15c70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c74:	cmp	r0, #0
   15c78:	beq	15c90 <__assert_fail@plt+0x49b0>
   15c7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c80:	str	r0, [fp, #-28]	; 0xffffffe4
   15c84:	movw	r0, #0
   15c88:	str	r0, [fp, #-44]	; 0xffffffd4
   15c8c:	b	1472c <__assert_fail@plt+0x344c>
   15c90:	b	15c94 <__assert_fail@plt+0x49b4>
   15c94:	b	15c98 <__assert_fail@plt+0x49b8>
   15c98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15c9c:	movw	r1, #0
   15ca0:	cmp	r0, r1
   15ca4:	beq	15d18 <__assert_fail@plt+0x4a38>
   15ca8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15cac:	tst	r0, #1
   15cb0:	bne	15d18 <__assert_fail@plt+0x4a38>
   15cb4:	b	15cb8 <__assert_fail@plt+0x49d8>
   15cb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15cbc:	ldrsb	r0, [r0]
   15cc0:	cmp	r0, #0
   15cc4:	beq	15d14 <__assert_fail@plt+0x4a34>
   15cc8:	b	15ccc <__assert_fail@plt+0x49ec>
   15ccc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cd4:	cmp	r0, r1
   15cd8:	bcs	15cf4 <__assert_fail@plt+0x4a14>
   15cdc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15ce0:	ldrb	r0, [r0]
   15ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ce8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15cec:	add	r1, r1, r2
   15cf0:	strb	r0, [r1]
   15cf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cf8:	add	r0, r0, #1
   15cfc:	str	r0, [fp, #-44]	; 0xffffffd4
   15d00:	b	15d04 <__assert_fail@plt+0x4a24>
   15d04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15d08:	add	r0, r0, #1
   15d0c:	str	r0, [fp, #-52]	; 0xffffffcc
   15d10:	b	15cb8 <__assert_fail@plt+0x49d8>
   15d14:	b	15d18 <__assert_fail@plt+0x4a38>
   15d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d20:	cmp	r0, r1
   15d24:	bcs	15d3c <__assert_fail@plt+0x4a5c>
   15d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d30:	add	r0, r0, r1
   15d34:	movw	r1, #0
   15d38:	strb	r1, [r0]
   15d3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d40:	str	r0, [fp, #-20]	; 0xffffffec
   15d44:	b	15db0 <__assert_fail@plt+0x4ad0>
   15d48:	ldr	r0, [fp, #8]
   15d4c:	cmp	r0, #2
   15d50:	bne	15d68 <__assert_fail@plt+0x4a88>
   15d54:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15d58:	tst	r0, #1
   15d5c:	beq	15d68 <__assert_fail@plt+0x4a88>
   15d60:	movw	r0, #4
   15d64:	str	r0, [fp, #8]
   15d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15d74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d78:	ldr	ip, [fp, #8]
   15d7c:	ldr	lr, [fp, #12]
   15d80:	mvn	r4, #2
   15d84:	and	lr, lr, r4
   15d88:	ldr	r4, [fp, #20]
   15d8c:	ldr	r5, [fp, #24]
   15d90:	str	ip, [sp]
   15d94:	str	lr, [sp, #4]
   15d98:	movw	ip, #0
   15d9c:	str	ip, [sp, #8]
   15da0:	str	r4, [sp, #12]
   15da4:	str	r5, [sp, #16]
   15da8:	bl	14684 <__assert_fail@plt+0x33a4>
   15dac:	str	r0, [fp, #-20]	; 0xffffffec
   15db0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15db4:	sub	sp, fp, #16
   15db8:	pop	{r4, r5, r6, sl, fp, pc}
   15dbc:	push	{fp, lr}
   15dc0:	mov	fp, sp
   15dc4:	sub	sp, sp, #16
   15dc8:	str	r0, [fp, #-4]
   15dcc:	str	r1, [sp, #8]
   15dd0:	str	r2, [sp, #4]
   15dd4:	ldr	r0, [fp, #-4]
   15dd8:	ldr	r1, [sp, #8]
   15ddc:	ldr	r3, [sp, #4]
   15de0:	movw	r2, #0
   15de4:	bl	15df0 <__assert_fail@plt+0x4b10>
   15de8:	mov	sp, fp
   15dec:	pop	{fp, pc}
   15df0:	push	{r4, r5, r6, sl, fp, lr}
   15df4:	add	fp, sp, #16
   15df8:	sub	sp, sp, #72	; 0x48
   15dfc:	str	r0, [fp, #-20]	; 0xffffffec
   15e00:	str	r1, [fp, #-24]	; 0xffffffe8
   15e04:	str	r2, [fp, #-28]	; 0xffffffe4
   15e08:	str	r3, [fp, #-32]	; 0xffffffe0
   15e0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e10:	movw	r1, #0
   15e14:	cmp	r0, r1
   15e18:	beq	15e28 <__assert_fail@plt+0x4b48>
   15e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e20:	str	r0, [sp, #32]
   15e24:	b	15e38 <__assert_fail@plt+0x4b58>
   15e28:	movw	r0, #57768	; 0xe1a8
   15e2c:	movt	r0, #2
   15e30:	str	r0, [sp, #32]
   15e34:	b	15e38 <__assert_fail@plt+0x4b58>
   15e38:	ldr	r0, [sp, #32]
   15e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   15e40:	bl	111e4 <__errno_location@plt>
   15e44:	ldr	r0, [r0]
   15e48:	str	r0, [fp, #-40]	; 0xffffffd8
   15e4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e50:	ldr	r0, [r0, #4]
   15e54:	ldr	lr, [fp, #-28]	; 0xffffffe4
   15e58:	movw	r1, #0
   15e5c:	cmp	lr, r1
   15e60:	movw	lr, #0
   15e64:	movne	lr, #1
   15e68:	tst	lr, #1
   15e6c:	mov	lr, r1
   15e70:	moveq	lr, #1
   15e74:	orr	r0, r0, lr
   15e78:	str	r0, [sp, #44]	; 0x2c
   15e7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e88:	ldr	r0, [r0]
   15e8c:	ldr	lr, [sp, #44]	; 0x2c
   15e90:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15e94:	add	ip, ip, #8
   15e98:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15e9c:	ldr	r4, [r4, #40]	; 0x28
   15ea0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15ea4:	ldr	r5, [r5, #44]	; 0x2c
   15ea8:	str	r0, [sp, #28]
   15eac:	mov	r0, r1
   15eb0:	ldr	r6, [sp, #28]
   15eb4:	str	r6, [sp]
   15eb8:	str	lr, [sp, #4]
   15ebc:	str	ip, [sp, #8]
   15ec0:	str	r4, [sp, #12]
   15ec4:	str	r5, [sp, #16]
   15ec8:	bl	14684 <__assert_fail@plt+0x33a4>
   15ecc:	add	r0, r0, #1
   15ed0:	str	r0, [sp, #40]	; 0x28
   15ed4:	ldr	r0, [sp, #40]	; 0x28
   15ed8:	bl	17314 <__assert_fail@plt+0x6034>
   15edc:	str	r0, [sp, #36]	; 0x24
   15ee0:	ldr	r0, [sp, #36]	; 0x24
   15ee4:	ldr	r1, [sp, #40]	; 0x28
   15ee8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15eec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ef0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15ef4:	ldr	ip, [ip]
   15ef8:	ldr	lr, [sp, #44]	; 0x2c
   15efc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15f00:	add	r4, r4, #8
   15f04:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15f08:	ldr	r5, [r5, #40]	; 0x28
   15f0c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15f10:	ldr	r6, [r6, #44]	; 0x2c
   15f14:	str	ip, [sp]
   15f18:	str	lr, [sp, #4]
   15f1c:	str	r4, [sp, #8]
   15f20:	str	r5, [sp, #12]
   15f24:	str	r6, [sp, #16]
   15f28:	bl	14684 <__assert_fail@plt+0x33a4>
   15f2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15f30:	str	r0, [sp, #24]
   15f34:	str	r1, [sp, #20]
   15f38:	bl	111e4 <__errno_location@plt>
   15f3c:	ldr	r1, [sp, #20]
   15f40:	str	r1, [r0]
   15f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15f48:	movw	r2, #0
   15f4c:	cmp	r0, r2
   15f50:	beq	15f64 <__assert_fail@plt+0x4c84>
   15f54:	ldr	r0, [sp, #40]	; 0x28
   15f58:	sub	r0, r0, #1
   15f5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f60:	str	r0, [r1]
   15f64:	ldr	r0, [sp, #36]	; 0x24
   15f68:	sub	sp, fp, #16
   15f6c:	pop	{r4, r5, r6, sl, fp, pc}
   15f70:	push	{fp, lr}
   15f74:	mov	fp, sp
   15f78:	sub	sp, sp, #8
   15f7c:	movw	r0, #57616	; 0xe110
   15f80:	movt	r0, #2
   15f84:	ldr	r0, [r0]
   15f88:	str	r0, [sp, #4]
   15f8c:	movw	r0, #1
   15f90:	str	r0, [sp]
   15f94:	ldr	r0, [sp]
   15f98:	movw	r1, #57620	; 0xe114
   15f9c:	movt	r1, #2
   15fa0:	ldr	r1, [r1]
   15fa4:	cmp	r0, r1
   15fa8:	bge	15fd0 <__assert_fail@plt+0x4cf0>
   15fac:	ldr	r0, [sp, #4]
   15fb0:	ldr	r1, [sp]
   15fb4:	add	r0, r0, r1, lsl #3
   15fb8:	ldr	r0, [r0, #4]
   15fbc:	bl	1396c <__assert_fail@plt+0x268c>
   15fc0:	ldr	r0, [sp]
   15fc4:	add	r0, r0, #1
   15fc8:	str	r0, [sp]
   15fcc:	b	15f94 <__assert_fail@plt+0x4cb4>
   15fd0:	ldr	r0, [sp, #4]
   15fd4:	ldr	r0, [r0, #4]
   15fd8:	movw	r1, #57816	; 0xe1d8
   15fdc:	movt	r1, #2
   15fe0:	cmp	r0, r1
   15fe4:	beq	16010 <__assert_fail@plt+0x4d30>
   15fe8:	ldr	r0, [sp, #4]
   15fec:	ldr	r0, [r0, #4]
   15ff0:	bl	1396c <__assert_fail@plt+0x268c>
   15ff4:	movw	r0, #256	; 0x100
   15ff8:	movw	lr, #57624	; 0xe118
   15ffc:	movt	lr, #2
   16000:	str	r0, [lr]
   16004:	movw	r0, #57816	; 0xe1d8
   16008:	movt	r0, #2
   1600c:	str	r0, [lr, #4]
   16010:	ldr	r0, [sp, #4]
   16014:	movw	r1, #57624	; 0xe118
   16018:	movt	r1, #2
   1601c:	cmp	r0, r1
   16020:	beq	16040 <__assert_fail@plt+0x4d60>
   16024:	ldr	r0, [sp, #4]
   16028:	bl	1396c <__assert_fail@plt+0x268c>
   1602c:	movw	r0, #57616	; 0xe110
   16030:	movt	r0, #2
   16034:	movw	lr, #57624	; 0xe118
   16038:	movt	lr, #2
   1603c:	str	lr, [r0]
   16040:	movw	r0, #57620	; 0xe114
   16044:	movt	r0, #2
   16048:	movw	r1, #1
   1604c:	str	r1, [r0]
   16050:	mov	sp, fp
   16054:	pop	{fp, pc}
   16058:	push	{fp, lr}
   1605c:	mov	fp, sp
   16060:	sub	sp, sp, #8
   16064:	str	r0, [sp, #4]
   16068:	str	r1, [sp]
   1606c:	ldr	r0, [sp, #4]
   16070:	ldr	r1, [sp]
   16074:	mvn	r2, #0
   16078:	movw	r3, #57768	; 0xe1a8
   1607c:	movt	r3, #2
   16080:	bl	1608c <__assert_fail@plt+0x4dac>
   16084:	mov	sp, fp
   16088:	pop	{fp, pc}
   1608c:	push	{r4, r5, r6, sl, fp, lr}
   16090:	add	fp, sp, #16
   16094:	sub	sp, sp, #88	; 0x58
   16098:	str	r0, [fp, #-20]	; 0xffffffec
   1609c:	str	r1, [fp, #-24]	; 0xffffffe8
   160a0:	str	r2, [fp, #-28]	; 0xffffffe4
   160a4:	str	r3, [fp, #-32]	; 0xffffffe0
   160a8:	bl	111e4 <__errno_location@plt>
   160ac:	ldr	r1, [pc, #676]	; 16358 <__assert_fail@plt+0x5078>
   160b0:	ldr	r0, [r0]
   160b4:	str	r0, [fp, #-36]	; 0xffffffdc
   160b8:	movw	r0, #57616	; 0xe110
   160bc:	movt	r0, #2
   160c0:	ldr	r0, [r0]
   160c4:	str	r0, [fp, #-40]	; 0xffffffd8
   160c8:	str	r1, [fp, #-44]	; 0xffffffd4
   160cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   160d0:	movw	r1, #0
   160d4:	cmp	r1, r0
   160d8:	bgt	160ec <__assert_fail@plt+0x4e0c>
   160dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   160e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160e4:	cmp	r0, r1
   160e8:	blt	160f0 <__assert_fail@plt+0x4e10>
   160ec:	bl	112b0 <abort@plt>
   160f0:	movw	r0, #57620	; 0xe114
   160f4:	movt	r0, #2
   160f8:	ldr	r0, [r0]
   160fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16100:	cmp	r0, r1
   16104:	bgt	161fc <__assert_fail@plt+0x4f1c>
   16108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1610c:	movw	r1, #57624	; 0xe118
   16110:	movt	r1, #2
   16114:	cmp	r0, r1
   16118:	movw	r0, #0
   1611c:	moveq	r0, #1
   16120:	and	r0, r0, #1
   16124:	strb	r0, [fp, #-45]	; 0xffffffd3
   16128:	movw	r0, #57620	; 0xe114
   1612c:	movt	r0, #2
   16130:	ldr	r0, [r0]
   16134:	str	r0, [sp, #52]	; 0x34
   16138:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1613c:	tst	r0, #1
   16140:	beq	16150 <__assert_fail@plt+0x4e70>
   16144:	movw	r0, #0
   16148:	str	r0, [sp, #32]
   1614c:	b	16158 <__assert_fail@plt+0x4e78>
   16150:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16154:	str	r0, [sp, #32]
   16158:	ldr	r0, [sp, #32]
   1615c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16160:	movw	r2, #57620	; 0xe114
   16164:	movt	r2, #2
   16168:	ldr	r2, [r2]
   1616c:	sub	r1, r1, r2
   16170:	add	r2, r1, #1
   16174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16178:	add	r1, sp, #52	; 0x34
   1617c:	movw	ip, #8
   16180:	str	ip, [sp]
   16184:	bl	17550 <__assert_fail@plt+0x6270>
   16188:	str	r0, [fp, #-40]	; 0xffffffd8
   1618c:	movw	r1, #57616	; 0xe110
   16190:	movt	r1, #2
   16194:	str	r0, [r1]
   16198:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1619c:	tst	r0, #1
   161a0:	beq	161c0 <__assert_fail@plt+0x4ee0>
   161a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161a8:	movw	r1, #57624	; 0xe118
   161ac:	movt	r1, #2
   161b0:	ldr	r2, [r1]
   161b4:	str	r2, [r0]
   161b8:	ldr	r1, [r1, #4]
   161bc:	str	r1, [r0, #4]
   161c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161c4:	movw	r1, #57620	; 0xe114
   161c8:	movt	r1, #2
   161cc:	ldr	r1, [r1]
   161d0:	add	r0, r0, r1, lsl #3
   161d4:	ldr	r2, [sp, #52]	; 0x34
   161d8:	sub	r1, r2, r1
   161dc:	lsl	r2, r1, #3
   161e0:	movw	r1, #0
   161e4:	and	r1, r1, #255	; 0xff
   161e8:	bl	111fc <memset@plt>
   161ec:	ldr	r0, [sp, #52]	; 0x34
   161f0:	movw	r1, #57620	; 0xe114
   161f4:	movt	r1, #2
   161f8:	str	r0, [r1]
   161fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16200:	ldr	r1, [fp, #-20]	; 0xffffffec
   16204:	ldr	r0, [r0, r1, lsl #3]
   16208:	str	r0, [sp, #48]	; 0x30
   1620c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16210:	ldr	r1, [fp, #-20]	; 0xffffffec
   16214:	add	r0, r0, r1, lsl #3
   16218:	ldr	r0, [r0, #4]
   1621c:	str	r0, [sp, #44]	; 0x2c
   16220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16224:	ldr	r0, [r0, #4]
   16228:	orr	r0, r0, #1
   1622c:	str	r0, [sp, #40]	; 0x28
   16230:	ldr	r0, [sp, #44]	; 0x2c
   16234:	ldr	r1, [sp, #48]	; 0x30
   16238:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1623c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16240:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16244:	ldr	ip, [ip]
   16248:	ldr	lr, [sp, #40]	; 0x28
   1624c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16250:	add	r4, r4, #8
   16254:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16258:	ldr	r5, [r5, #40]	; 0x28
   1625c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16260:	ldr	r6, [r6, #44]	; 0x2c
   16264:	str	ip, [sp]
   16268:	str	lr, [sp, #4]
   1626c:	str	r4, [sp, #8]
   16270:	str	r5, [sp, #12]
   16274:	str	r6, [sp, #16]
   16278:	bl	14684 <__assert_fail@plt+0x33a4>
   1627c:	str	r0, [sp, #36]	; 0x24
   16280:	ldr	r0, [sp, #48]	; 0x30
   16284:	ldr	r1, [sp, #36]	; 0x24
   16288:	cmp	r0, r1
   1628c:	bhi	16338 <__assert_fail@plt+0x5058>
   16290:	ldr	r0, [sp, #36]	; 0x24
   16294:	add	r0, r0, #1
   16298:	str	r0, [sp, #48]	; 0x30
   1629c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   162a4:	add	r1, r1, r2, lsl #3
   162a8:	str	r0, [r1]
   162ac:	ldr	r0, [sp, #44]	; 0x2c
   162b0:	movw	r1, #57816	; 0xe1d8
   162b4:	movt	r1, #2
   162b8:	cmp	r0, r1
   162bc:	beq	162c8 <__assert_fail@plt+0x4fe8>
   162c0:	ldr	r0, [sp, #44]	; 0x2c
   162c4:	bl	1396c <__assert_fail@plt+0x268c>
   162c8:	ldr	r0, [sp, #48]	; 0x30
   162cc:	bl	17314 <__assert_fail@plt+0x6034>
   162d0:	mov	lr, r0
   162d4:	str	r0, [sp, #44]	; 0x2c
   162d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   162e0:	add	r0, r0, r1, lsl #3
   162e4:	str	lr, [r0, #4]
   162e8:	ldr	r0, [sp, #44]	; 0x2c
   162ec:	ldr	r1, [sp, #48]	; 0x30
   162f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   162f8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   162fc:	ldr	lr, [lr]
   16300:	ldr	ip, [sp, #40]	; 0x28
   16304:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16308:	add	r4, r4, #8
   1630c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16310:	ldr	r5, [r5, #40]	; 0x28
   16314:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16318:	ldr	r6, [r6, #44]	; 0x2c
   1631c:	str	lr, [sp]
   16320:	str	ip, [sp, #4]
   16324:	str	r4, [sp, #8]
   16328:	str	r5, [sp, #12]
   1632c:	str	r6, [sp, #16]
   16330:	bl	14684 <__assert_fail@plt+0x33a4>
   16334:	str	r0, [sp, #28]
   16338:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1633c:	str	r0, [sp, #24]
   16340:	bl	111e4 <__errno_location@plt>
   16344:	ldr	lr, [sp, #24]
   16348:	str	lr, [r0]
   1634c:	ldr	r0, [sp, #44]	; 0x2c
   16350:	sub	sp, fp, #16
   16354:	pop	{r4, r5, r6, sl, fp, pc}
   16358:	svcvc	0x00ffffff
   1635c:	push	{fp, lr}
   16360:	mov	fp, sp
   16364:	sub	sp, sp, #16
   16368:	str	r0, [fp, #-4]
   1636c:	str	r1, [sp, #8]
   16370:	str	r2, [sp, #4]
   16374:	ldr	r0, [fp, #-4]
   16378:	ldr	r1, [sp, #8]
   1637c:	ldr	r2, [sp, #4]
   16380:	movw	r3, #57768	; 0xe1a8
   16384:	movt	r3, #2
   16388:	bl	1608c <__assert_fail@plt+0x4dac>
   1638c:	mov	sp, fp
   16390:	pop	{fp, pc}
   16394:	push	{fp, lr}
   16398:	mov	fp, sp
   1639c:	sub	sp, sp, #8
   163a0:	str	r0, [sp, #4]
   163a4:	ldr	r1, [sp, #4]
   163a8:	movw	r0, #0
   163ac:	bl	16058 <__assert_fail@plt+0x4d78>
   163b0:	mov	sp, fp
   163b4:	pop	{fp, pc}
   163b8:	push	{fp, lr}
   163bc:	mov	fp, sp
   163c0:	sub	sp, sp, #8
   163c4:	str	r0, [sp, #4]
   163c8:	str	r1, [sp]
   163cc:	ldr	r1, [sp, #4]
   163d0:	ldr	r2, [sp]
   163d4:	movw	r0, #0
   163d8:	bl	1635c <__assert_fail@plt+0x507c>
   163dc:	mov	sp, fp
   163e0:	pop	{fp, pc}
   163e4:	push	{fp, lr}
   163e8:	mov	fp, sp
   163ec:	sub	sp, sp, #64	; 0x40
   163f0:	str	r0, [fp, #-4]
   163f4:	str	r1, [fp, #-8]
   163f8:	str	r2, [fp, #-12]
   163fc:	ldr	r1, [fp, #-8]
   16400:	add	r0, sp, #4
   16404:	bl	16424 <__assert_fail@plt+0x5144>
   16408:	ldr	r0, [fp, #-4]
   1640c:	ldr	r1, [fp, #-12]
   16410:	mvn	r2, #0
   16414:	add	r3, sp, #4
   16418:	bl	1608c <__assert_fail@plt+0x4dac>
   1641c:	mov	sp, fp
   16420:	pop	{fp, pc}
   16424:	push	{fp, lr}
   16428:	mov	fp, sp
   1642c:	sub	sp, sp, #8
   16430:	str	r1, [sp, #4]
   16434:	mov	r1, r0
   16438:	str	r0, [sp]
   1643c:	mov	r0, r1
   16440:	movw	r1, #0
   16444:	and	r1, r1, #255	; 0xff
   16448:	movw	r2, #48	; 0x30
   1644c:	bl	111fc <memset@plt>
   16450:	ldr	r0, [sp, #4]
   16454:	cmp	r0, #10
   16458:	bne	16460 <__assert_fail@plt+0x5180>
   1645c:	bl	112b0 <abort@plt>
   16460:	ldr	r0, [sp, #4]
   16464:	ldr	r1, [sp]
   16468:	str	r0, [r1]
   1646c:	mov	sp, fp
   16470:	pop	{fp, pc}
   16474:	push	{fp, lr}
   16478:	mov	fp, sp
   1647c:	sub	sp, sp, #64	; 0x40
   16480:	str	r0, [fp, #-4]
   16484:	str	r1, [fp, #-8]
   16488:	str	r2, [fp, #-12]
   1648c:	str	r3, [fp, #-16]
   16490:	ldr	r1, [fp, #-8]
   16494:	mov	r0, sp
   16498:	bl	16424 <__assert_fail@plt+0x5144>
   1649c:	ldr	r0, [fp, #-4]
   164a0:	ldr	r1, [fp, #-12]
   164a4:	ldr	r2, [fp, #-16]
   164a8:	mov	r3, sp
   164ac:	bl	1608c <__assert_fail@plt+0x4dac>
   164b0:	mov	sp, fp
   164b4:	pop	{fp, pc}
   164b8:	push	{fp, lr}
   164bc:	mov	fp, sp
   164c0:	sub	sp, sp, #8
   164c4:	str	r0, [sp, #4]
   164c8:	str	r1, [sp]
   164cc:	ldr	r1, [sp, #4]
   164d0:	ldr	r2, [sp]
   164d4:	movw	r0, #0
   164d8:	bl	163e4 <__assert_fail@plt+0x5104>
   164dc:	mov	sp, fp
   164e0:	pop	{fp, pc}
   164e4:	push	{fp, lr}
   164e8:	mov	fp, sp
   164ec:	sub	sp, sp, #16
   164f0:	str	r0, [fp, #-4]
   164f4:	str	r1, [sp, #8]
   164f8:	str	r2, [sp, #4]
   164fc:	ldr	r1, [fp, #-4]
   16500:	ldr	r2, [sp, #8]
   16504:	ldr	r3, [sp, #4]
   16508:	movw	r0, #0
   1650c:	bl	16474 <__assert_fail@plt+0x5194>
   16510:	mov	sp, fp
   16514:	pop	{fp, pc}
   16518:	push	{fp, lr}
   1651c:	mov	fp, sp
   16520:	sub	sp, sp, #72	; 0x48
   16524:	movw	r3, #57768	; 0xe1a8
   16528:	movt	r3, #2
   1652c:	str	r0, [fp, #-4]
   16530:	str	r1, [fp, #-8]
   16534:	strb	r2, [fp, #-9]
   16538:	add	r0, sp, #12
   1653c:	mov	r1, r0
   16540:	str	r0, [sp, #8]
   16544:	mov	r0, r1
   16548:	mov	r1, r3
   1654c:	movw	r2, #48	; 0x30
   16550:	bl	110ac <memcpy@plt>
   16554:	ldr	r0, [sp, #8]
   16558:	ldrb	r1, [fp, #-9]
   1655c:	movw	r2, #1
   16560:	bl	14428 <__assert_fail@plt+0x3148>
   16564:	ldr	r1, [fp, #-4]
   16568:	ldr	r2, [fp, #-8]
   1656c:	movw	r3, #0
   16570:	str	r0, [sp, #4]
   16574:	mov	r0, r3
   16578:	add	r3, sp, #12
   1657c:	bl	1608c <__assert_fail@plt+0x4dac>
   16580:	mov	sp, fp
   16584:	pop	{fp, pc}
   16588:	push	{fp, lr}
   1658c:	mov	fp, sp
   16590:	sub	sp, sp, #8
   16594:	str	r0, [sp, #4]
   16598:	strb	r1, [sp, #3]
   1659c:	ldr	r0, [sp, #4]
   165a0:	mvn	r1, #0
   165a4:	ldrb	r2, [sp, #3]
   165a8:	bl	16518 <__assert_fail@plt+0x5238>
   165ac:	mov	sp, fp
   165b0:	pop	{fp, pc}
   165b4:	push	{fp, lr}
   165b8:	mov	fp, sp
   165bc:	sub	sp, sp, #8
   165c0:	str	r0, [sp, #4]
   165c4:	ldr	r0, [sp, #4]
   165c8:	movw	r1, #58	; 0x3a
   165cc:	and	r1, r1, #255	; 0xff
   165d0:	bl	16588 <__assert_fail@plt+0x52a8>
   165d4:	mov	sp, fp
   165d8:	pop	{fp, pc}
   165dc:	push	{fp, lr}
   165e0:	mov	fp, sp
   165e4:	sub	sp, sp, #8
   165e8:	str	r0, [sp, #4]
   165ec:	str	r1, [sp]
   165f0:	ldr	r0, [sp, #4]
   165f4:	ldr	r1, [sp]
   165f8:	movw	r2, #58	; 0x3a
   165fc:	and	r2, r2, #255	; 0xff
   16600:	bl	16518 <__assert_fail@plt+0x5238>
   16604:	mov	sp, fp
   16608:	pop	{fp, pc}
   1660c:	push	{fp, lr}
   16610:	mov	fp, sp
   16614:	sub	sp, sp, #120	; 0x78
   16618:	str	r0, [fp, #-4]
   1661c:	str	r1, [fp, #-8]
   16620:	str	r2, [fp, #-12]
   16624:	ldr	r1, [fp, #-8]
   16628:	add	r0, sp, #12
   1662c:	bl	16424 <__assert_fail@plt+0x5144>
   16630:	add	r0, sp, #60	; 0x3c
   16634:	mov	r1, r0
   16638:	add	r2, sp, #12
   1663c:	str	r0, [sp, #8]
   16640:	mov	r0, r1
   16644:	mov	r1, r2
   16648:	movw	r2, #48	; 0x30
   1664c:	bl	110ac <memcpy@plt>
   16650:	ldr	r0, [sp, #8]
   16654:	movw	r1, #58	; 0x3a
   16658:	and	r1, r1, #255	; 0xff
   1665c:	movw	r2, #1
   16660:	bl	14428 <__assert_fail@plt+0x3148>
   16664:	ldr	r1, [fp, #-4]
   16668:	ldr	r2, [fp, #-12]
   1666c:	str	r0, [sp, #4]
   16670:	mov	r0, r1
   16674:	mov	r1, r2
   16678:	mvn	r2, #0
   1667c:	add	r3, sp, #60	; 0x3c
   16680:	bl	1608c <__assert_fail@plt+0x4dac>
   16684:	mov	sp, fp
   16688:	pop	{fp, pc}
   1668c:	push	{fp, lr}
   16690:	mov	fp, sp
   16694:	sub	sp, sp, #24
   16698:	str	r0, [fp, #-4]
   1669c:	str	r1, [fp, #-8]
   166a0:	str	r2, [sp, #12]
   166a4:	str	r3, [sp, #8]
   166a8:	ldr	r0, [fp, #-4]
   166ac:	ldr	r1, [fp, #-8]
   166b0:	ldr	r2, [sp, #12]
   166b4:	ldr	r3, [sp, #8]
   166b8:	mvn	ip, #0
   166bc:	str	ip, [sp]
   166c0:	bl	166cc <__assert_fail@plt+0x53ec>
   166c4:	mov	sp, fp
   166c8:	pop	{fp, pc}
   166cc:	push	{fp, lr}
   166d0:	mov	fp, sp
   166d4:	sub	sp, sp, #72	; 0x48
   166d8:	ldr	ip, [fp, #8]
   166dc:	movw	lr, #57768	; 0xe1a8
   166e0:	movt	lr, #2
   166e4:	str	r0, [fp, #-4]
   166e8:	str	r1, [fp, #-8]
   166ec:	str	r2, [fp, #-12]
   166f0:	str	r3, [fp, #-16]
   166f4:	add	r0, sp, #8
   166f8:	mov	r1, r0
   166fc:	str	r0, [sp, #4]
   16700:	mov	r0, r1
   16704:	mov	r1, lr
   16708:	movw	r2, #48	; 0x30
   1670c:	str	ip, [sp]
   16710:	bl	110ac <memcpy@plt>
   16714:	ldr	r1, [fp, #-8]
   16718:	ldr	r2, [fp, #-12]
   1671c:	ldr	r0, [sp, #4]
   16720:	bl	14528 <__assert_fail@plt+0x3248>
   16724:	ldr	r0, [fp, #-4]
   16728:	ldr	r1, [fp, #-16]
   1672c:	ldr	r2, [fp, #8]
   16730:	add	r3, sp, #8
   16734:	bl	1608c <__assert_fail@plt+0x4dac>
   16738:	mov	sp, fp
   1673c:	pop	{fp, pc}
   16740:	push	{fp, lr}
   16744:	mov	fp, sp
   16748:	sub	sp, sp, #16
   1674c:	str	r0, [fp, #-4]
   16750:	str	r1, [sp, #8]
   16754:	str	r2, [sp, #4]
   16758:	ldr	r1, [fp, #-4]
   1675c:	ldr	r2, [sp, #8]
   16760:	ldr	r3, [sp, #4]
   16764:	movw	r0, #0
   16768:	bl	1668c <__assert_fail@plt+0x53ac>
   1676c:	mov	sp, fp
   16770:	pop	{fp, pc}
   16774:	push	{fp, lr}
   16778:	mov	fp, sp
   1677c:	sub	sp, sp, #24
   16780:	str	r0, [fp, #-4]
   16784:	str	r1, [fp, #-8]
   16788:	str	r2, [sp, #12]
   1678c:	str	r3, [sp, #8]
   16790:	ldr	r1, [fp, #-4]
   16794:	ldr	r2, [fp, #-8]
   16798:	ldr	r3, [sp, #12]
   1679c:	ldr	r0, [sp, #8]
   167a0:	movw	ip, #0
   167a4:	str	r0, [sp, #4]
   167a8:	mov	r0, ip
   167ac:	ldr	ip, [sp, #4]
   167b0:	str	ip, [sp]
   167b4:	bl	166cc <__assert_fail@plt+0x53ec>
   167b8:	mov	sp, fp
   167bc:	pop	{fp, pc}
   167c0:	push	{fp, lr}
   167c4:	mov	fp, sp
   167c8:	sub	sp, sp, #16
   167cc:	str	r0, [fp, #-4]
   167d0:	str	r1, [sp, #8]
   167d4:	str	r2, [sp, #4]
   167d8:	ldr	r0, [fp, #-4]
   167dc:	ldr	r1, [sp, #8]
   167e0:	ldr	r2, [sp, #4]
   167e4:	movw	r3, #57632	; 0xe120
   167e8:	movt	r3, #2
   167ec:	bl	1608c <__assert_fail@plt+0x4dac>
   167f0:	mov	sp, fp
   167f4:	pop	{fp, pc}
   167f8:	push	{fp, lr}
   167fc:	mov	fp, sp
   16800:	sub	sp, sp, #8
   16804:	str	r0, [sp, #4]
   16808:	str	r1, [sp]
   1680c:	ldr	r1, [sp, #4]
   16810:	ldr	r2, [sp]
   16814:	movw	r0, #0
   16818:	bl	167c0 <__assert_fail@plt+0x54e0>
   1681c:	mov	sp, fp
   16820:	pop	{fp, pc}
   16824:	push	{fp, lr}
   16828:	mov	fp, sp
   1682c:	sub	sp, sp, #8
   16830:	str	r0, [sp, #4]
   16834:	str	r1, [sp]
   16838:	ldr	r0, [sp, #4]
   1683c:	ldr	r1, [sp]
   16840:	mvn	r2, #0
   16844:	bl	167c0 <__assert_fail@plt+0x54e0>
   16848:	mov	sp, fp
   1684c:	pop	{fp, pc}
   16850:	push	{fp, lr}
   16854:	mov	fp, sp
   16858:	sub	sp, sp, #8
   1685c:	str	r0, [sp, #4]
   16860:	ldr	r1, [sp, #4]
   16864:	movw	r0, #0
   16868:	bl	16824 <__assert_fail@plt+0x5544>
   1686c:	mov	sp, fp
   16870:	pop	{fp, pc}
   16874:	push	{fp, lr}
   16878:	mov	fp, sp
   1687c:	sub	sp, sp, #24
   16880:	str	r0, [fp, #-8]
   16884:	str	r1, [sp, #12]
   16888:	ldr	r0, [fp, #-8]
   1688c:	bl	111b4 <gettext@plt>
   16890:	str	r0, [sp, #8]
   16894:	ldr	r0, [sp, #8]
   16898:	ldr	r1, [fp, #-8]
   1689c:	cmp	r0, r1
   168a0:	beq	168b0 <__assert_fail@plt+0x55d0>
   168a4:	ldr	r0, [sp, #8]
   168a8:	str	r0, [fp, #-4]
   168ac:	b	1697c <__assert_fail@plt+0x569c>
   168b0:	bl	1a8e0 <__assert_fail@plt+0x9600>
   168b4:	str	r0, [sp, #4]
   168b8:	ldr	r0, [sp, #4]
   168bc:	movw	r1, #54735	; 0xd5cf
   168c0:	movt	r1, #1
   168c4:	bl	1a278 <__assert_fail@plt+0x8f98>
   168c8:	cmp	r0, #0
   168cc:	bne	16904 <__assert_fail@plt+0x5624>
   168d0:	ldr	r0, [fp, #-8]
   168d4:	ldrb	r0, [r0]
   168d8:	cmp	r0, #96	; 0x60
   168dc:	movw	r0, #0
   168e0:	moveq	r0, #1
   168e4:	tst	r0, #1
   168e8:	movw	r0, #54745	; 0xd5d9
   168ec:	movt	r0, #1
   168f0:	movw	r1, #54741	; 0xd5d5
   168f4:	movt	r1, #1
   168f8:	movne	r0, r1
   168fc:	str	r0, [fp, #-4]
   16900:	b	1697c <__assert_fail@plt+0x569c>
   16904:	ldr	r0, [sp, #4]
   16908:	movw	r1, #54749	; 0xd5dd
   1690c:	movt	r1, #1
   16910:	bl	1a278 <__assert_fail@plt+0x8f98>
   16914:	cmp	r0, #0
   16918:	bne	16950 <__assert_fail@plt+0x5670>
   1691c:	ldr	r0, [fp, #-8]
   16920:	ldrb	r0, [r0]
   16924:	cmp	r0, #96	; 0x60
   16928:	movw	r0, #0
   1692c:	moveq	r0, #1
   16930:	tst	r0, #1
   16934:	movw	r0, #54761	; 0xd5e9
   16938:	movt	r0, #1
   1693c:	movw	r1, #54757	; 0xd5e5
   16940:	movt	r1, #1
   16944:	movne	r0, r1
   16948:	str	r0, [fp, #-4]
   1694c:	b	1697c <__assert_fail@plt+0x569c>
   16950:	ldr	r0, [sp, #12]
   16954:	cmp	r0, #9
   16958:	movw	r0, #0
   1695c:	moveq	r0, #1
   16960:	tst	r0, #1
   16964:	movw	r0, #54733	; 0xd5cd
   16968:	movt	r0, #1
   1696c:	movw	r1, #54729	; 0xd5c9
   16970:	movt	r1, #1
   16974:	movne	r0, r1
   16978:	str	r0, [fp, #-4]
   1697c:	ldr	r0, [fp, #-4]
   16980:	mov	sp, fp
   16984:	pop	{fp, pc}
   16988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1698c:	add	fp, sp, #28
   16990:	sub	sp, sp, #260	; 0x104
   16994:	ldr	ip, [fp, #12]
   16998:	ldr	lr, [fp, #8]
   1699c:	str	r0, [fp, #-32]	; 0xffffffe0
   169a0:	str	r1, [fp, #-36]	; 0xffffffdc
   169a4:	str	r2, [fp, #-40]	; 0xffffffd8
   169a8:	str	r3, [fp, #-44]	; 0xffffffd4
   169ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   169b0:	movw	r1, #0
   169b4:	cmp	r0, r1
   169b8:	str	lr, [fp, #-48]	; 0xffffffd0
   169bc:	str	ip, [fp, #-52]	; 0xffffffcc
   169c0:	beq	169f8 <__assert_fail@plt+0x5718>
   169c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   169c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   169cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   169d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   169d4:	movw	ip, #54848	; 0xd640
   169d8:	movt	ip, #1
   169dc:	str	r1, [fp, #-56]	; 0xffffffc8
   169e0:	mov	r1, ip
   169e4:	ldr	ip, [fp, #-56]	; 0xffffffc8
   169e8:	str	ip, [sp]
   169ec:	bl	111cc <fprintf@plt>
   169f0:	str	r0, [fp, #-60]	; 0xffffffc4
   169f4:	b	16a14 <__assert_fail@plt+0x5734>
   169f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   169fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16a00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a04:	movw	r1, #54860	; 0xd64c
   16a08:	movt	r1, #1
   16a0c:	bl	111cc <fprintf@plt>
   16a10:	str	r0, [fp, #-64]	; 0xffffffc0
   16a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a18:	movw	r1, #54867	; 0xd653
   16a1c:	movt	r1, #1
   16a20:	str	r0, [fp, #-68]	; 0xffffffbc
   16a24:	mov	r0, r1
   16a28:	bl	111b4 <gettext@plt>
   16a2c:	movw	r1, #55585	; 0xd921
   16a30:	movt	r1, #1
   16a34:	movw	r3, #2022	; 0x7e6
   16a38:	ldr	lr, [fp, #-68]	; 0xffffffbc
   16a3c:	str	r0, [fp, #-72]	; 0xffffffb8
   16a40:	mov	r0, lr
   16a44:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16a48:	bl	111cc <fprintf@plt>
   16a4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16a50:	movw	r2, #53798	; 0xd226
   16a54:	movt	r2, #1
   16a58:	str	r0, [fp, #-76]	; 0xffffffb4
   16a5c:	mov	r0, r2
   16a60:	str	r2, [fp, #-80]	; 0xffffffb0
   16a64:	bl	11034 <fputs_unlocked@plt>
   16a68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16a6c:	movw	r2, #54871	; 0xd657
   16a70:	movt	r2, #1
   16a74:	str	r0, [fp, #-84]	; 0xffffffac
   16a78:	mov	r0, r2
   16a7c:	str	r1, [fp, #-88]	; 0xffffffa8
   16a80:	bl	111b4 <gettext@plt>
   16a84:	movw	r2, #55042	; 0xd702
   16a88:	movt	r2, #1
   16a8c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16a90:	str	r0, [fp, #-92]	; 0xffffffa4
   16a94:	mov	r0, r1
   16a98:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16a9c:	bl	111cc <fprintf@plt>
   16aa0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16aa4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16aa8:	str	r0, [fp, #-96]	; 0xffffffa0
   16aac:	mov	r0, r2
   16ab0:	bl	11034 <fputs_unlocked@plt>
   16ab4:	ldr	r1, [fp, #12]
   16ab8:	cmp	r1, #9
   16abc:	str	r0, [fp, #-100]	; 0xffffff9c
   16ac0:	str	r1, [fp, #-104]	; 0xffffff98
   16ac4:	bhi	16f04 <__assert_fail@plt+0x5c24>
   16ac8:	add	r0, pc, #8
   16acc:	ldr	r1, [fp, #-104]	; 0xffffff98
   16ad0:	ldr	r0, [r0, r1, lsl #2]
   16ad4:	mov	pc, r0
   16ad8:	andeq	r6, r1, r0, lsl #22
   16adc:	andeq	r6, r1, r4, lsl #22
   16ae0:	andeq	r6, r1, r0, asr #22
   16ae4:	andeq	r6, r1, r4, lsl #23
   16ae8:	andeq	r6, r1, r0, ror #23
   16aec:	andeq	r6, r1, r8, asr #24
   16af0:			; <UNDEFINED> instruction: 0x00016cbc
   16af4:	andeq	r6, r1, ip, lsr sp
   16af8:	andeq	r6, r1, r8, asr #27
   16afc:	andeq	r6, r1, r0, ror #28
   16b00:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16b04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b08:	movw	r1, #55076	; 0xd724
   16b0c:	movt	r1, #1
   16b10:	str	r0, [fp, #-108]	; 0xffffff94
   16b14:	mov	r0, r1
   16b18:	bl	111b4 <gettext@plt>
   16b1c:	ldr	r1, [fp, #8]
   16b20:	ldr	r2, [r1]
   16b24:	ldr	r1, [fp, #-108]	; 0xffffff94
   16b28:	str	r0, [fp, #-112]	; 0xffffff90
   16b2c:	mov	r0, r1
   16b30:	ldr	r1, [fp, #-112]	; 0xffffff90
   16b34:	bl	111cc <fprintf@plt>
   16b38:	str	r0, [fp, #-116]	; 0xffffff8c
   16b3c:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16b40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b44:	movw	r1, #55092	; 0xd734
   16b48:	movt	r1, #1
   16b4c:	str	r0, [fp, #-120]	; 0xffffff88
   16b50:	mov	r0, r1
   16b54:	bl	111b4 <gettext@plt>
   16b58:	ldr	r1, [fp, #8]
   16b5c:	ldr	r2, [r1]
   16b60:	ldr	r1, [fp, #8]
   16b64:	ldr	r3, [r1, #4]
   16b68:	ldr	r1, [fp, #-120]	; 0xffffff88
   16b6c:	str	r0, [fp, #-124]	; 0xffffff84
   16b70:	mov	r0, r1
   16b74:	ldr	r1, [fp, #-124]	; 0xffffff84
   16b78:	bl	111cc <fprintf@plt>
   16b7c:	str	r0, [fp, #-128]	; 0xffffff80
   16b80:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b88:	movw	r1, #55115	; 0xd74b
   16b8c:	movt	r1, #1
   16b90:	str	r0, [fp, #-132]	; 0xffffff7c
   16b94:	mov	r0, r1
   16b98:	bl	111b4 <gettext@plt>
   16b9c:	ldr	r1, [fp, #8]
   16ba0:	ldr	r2, [r1]
   16ba4:	ldr	r1, [fp, #8]
   16ba8:	ldr	r3, [r1, #4]
   16bac:	ldr	r1, [fp, #8]
   16bb0:	ldr	r1, [r1, #8]
   16bb4:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16bb8:	str	r0, [fp, #-136]	; 0xffffff78
   16bbc:	mov	r0, lr
   16bc0:	ldr	ip, [fp, #-136]	; 0xffffff78
   16bc4:	str	r1, [fp, #-140]	; 0xffffff74
   16bc8:	mov	r1, ip
   16bcc:	ldr	r4, [fp, #-140]	; 0xffffff74
   16bd0:	str	r4, [sp]
   16bd4:	bl	111cc <fprintf@plt>
   16bd8:	str	r0, [sp, #144]	; 0x90
   16bdc:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16be4:	movw	r1, #55143	; 0xd767
   16be8:	movt	r1, #1
   16bec:	str	r0, [sp, #140]	; 0x8c
   16bf0:	mov	r0, r1
   16bf4:	bl	111b4 <gettext@plt>
   16bf8:	ldr	r1, [fp, #8]
   16bfc:	ldr	r2, [r1]
   16c00:	ldr	r1, [fp, #8]
   16c04:	ldr	r3, [r1, #4]
   16c08:	ldr	r1, [fp, #8]
   16c0c:	ldr	r1, [r1, #8]
   16c10:	ldr	lr, [fp, #8]
   16c14:	ldr	lr, [lr, #12]
   16c18:	ldr	ip, [sp, #140]	; 0x8c
   16c1c:	str	r0, [sp, #136]	; 0x88
   16c20:	mov	r0, ip
   16c24:	ldr	r4, [sp, #136]	; 0x88
   16c28:	str	r1, [sp, #132]	; 0x84
   16c2c:	mov	r1, r4
   16c30:	ldr	r5, [sp, #132]	; 0x84
   16c34:	str	r5, [sp]
   16c38:	str	lr, [sp, #4]
   16c3c:	bl	111cc <fprintf@plt>
   16c40:	str	r0, [sp, #128]	; 0x80
   16c44:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16c48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c4c:	movw	r1, #55175	; 0xd787
   16c50:	movt	r1, #1
   16c54:	str	r0, [sp, #124]	; 0x7c
   16c58:	mov	r0, r1
   16c5c:	bl	111b4 <gettext@plt>
   16c60:	ldr	r1, [fp, #8]
   16c64:	ldr	r2, [r1]
   16c68:	ldr	r1, [fp, #8]
   16c6c:	ldr	r3, [r1, #4]
   16c70:	ldr	r1, [fp, #8]
   16c74:	ldr	r1, [r1, #8]
   16c78:	ldr	lr, [fp, #8]
   16c7c:	ldr	lr, [lr, #12]
   16c80:	ldr	ip, [fp, #8]
   16c84:	ldr	ip, [ip, #16]
   16c88:	ldr	r4, [sp, #124]	; 0x7c
   16c8c:	str	r0, [sp, #120]	; 0x78
   16c90:	mov	r0, r4
   16c94:	ldr	r5, [sp, #120]	; 0x78
   16c98:	str	r1, [sp, #116]	; 0x74
   16c9c:	mov	r1, r5
   16ca0:	ldr	r6, [sp, #116]	; 0x74
   16ca4:	str	r6, [sp]
   16ca8:	str	lr, [sp, #4]
   16cac:	str	ip, [sp, #8]
   16cb0:	bl	111cc <fprintf@plt>
   16cb4:	str	r0, [sp, #112]	; 0x70
   16cb8:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cc0:	movw	r1, #55211	; 0xd7ab
   16cc4:	movt	r1, #1
   16cc8:	str	r0, [sp, #108]	; 0x6c
   16ccc:	mov	r0, r1
   16cd0:	bl	111b4 <gettext@plt>
   16cd4:	ldr	r1, [fp, #8]
   16cd8:	ldr	r2, [r1]
   16cdc:	ldr	r1, [fp, #8]
   16ce0:	ldr	r3, [r1, #4]
   16ce4:	ldr	r1, [fp, #8]
   16ce8:	ldr	r1, [r1, #8]
   16cec:	ldr	lr, [fp, #8]
   16cf0:	ldr	lr, [lr, #12]
   16cf4:	ldr	ip, [fp, #8]
   16cf8:	ldr	ip, [ip, #16]
   16cfc:	ldr	r4, [fp, #8]
   16d00:	ldr	r4, [r4, #20]
   16d04:	ldr	r5, [sp, #108]	; 0x6c
   16d08:	str	r0, [sp, #104]	; 0x68
   16d0c:	mov	r0, r5
   16d10:	ldr	r6, [sp, #104]	; 0x68
   16d14:	str	r1, [sp, #100]	; 0x64
   16d18:	mov	r1, r6
   16d1c:	ldr	r7, [sp, #100]	; 0x64
   16d20:	str	r7, [sp]
   16d24:	str	lr, [sp, #4]
   16d28:	str	ip, [sp, #8]
   16d2c:	str	r4, [sp, #12]
   16d30:	bl	111cc <fprintf@plt>
   16d34:	str	r0, [sp, #96]	; 0x60
   16d38:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d40:	movw	r1, #55251	; 0xd7d3
   16d44:	movt	r1, #1
   16d48:	str	r0, [sp, #92]	; 0x5c
   16d4c:	mov	r0, r1
   16d50:	bl	111b4 <gettext@plt>
   16d54:	ldr	r1, [fp, #8]
   16d58:	ldr	r2, [r1]
   16d5c:	ldr	r1, [fp, #8]
   16d60:	ldr	r3, [r1, #4]
   16d64:	ldr	r1, [fp, #8]
   16d68:	ldr	r1, [r1, #8]
   16d6c:	ldr	lr, [fp, #8]
   16d70:	ldr	lr, [lr, #12]
   16d74:	ldr	ip, [fp, #8]
   16d78:	ldr	ip, [ip, #16]
   16d7c:	ldr	r4, [fp, #8]
   16d80:	ldr	r4, [r4, #20]
   16d84:	ldr	r5, [fp, #8]
   16d88:	ldr	r5, [r5, #24]
   16d8c:	ldr	r6, [sp, #92]	; 0x5c
   16d90:	str	r0, [sp, #88]	; 0x58
   16d94:	mov	r0, r6
   16d98:	ldr	r7, [sp, #88]	; 0x58
   16d9c:	str	r1, [sp, #84]	; 0x54
   16da0:	mov	r1, r7
   16da4:	ldr	r8, [sp, #84]	; 0x54
   16da8:	str	r8, [sp]
   16dac:	str	lr, [sp, #4]
   16db0:	str	ip, [sp, #8]
   16db4:	str	r4, [sp, #12]
   16db8:	str	r5, [sp, #16]
   16dbc:	bl	111cc <fprintf@plt>
   16dc0:	str	r0, [sp, #80]	; 0x50
   16dc4:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16dcc:	movw	r1, #55295	; 0xd7ff
   16dd0:	movt	r1, #1
   16dd4:	str	r0, [sp, #76]	; 0x4c
   16dd8:	mov	r0, r1
   16ddc:	bl	111b4 <gettext@plt>
   16de0:	ldr	r1, [fp, #8]
   16de4:	ldr	r2, [r1]
   16de8:	ldr	r1, [fp, #8]
   16dec:	ldr	r3, [r1, #4]
   16df0:	ldr	r1, [fp, #8]
   16df4:	ldr	r1, [r1, #8]
   16df8:	ldr	lr, [fp, #8]
   16dfc:	ldr	lr, [lr, #12]
   16e00:	ldr	ip, [fp, #8]
   16e04:	ldr	ip, [ip, #16]
   16e08:	ldr	r4, [fp, #8]
   16e0c:	ldr	r4, [r4, #20]
   16e10:	ldr	r5, [fp, #8]
   16e14:	ldr	r5, [r5, #24]
   16e18:	ldr	r6, [fp, #8]
   16e1c:	ldr	r6, [r6, #28]
   16e20:	ldr	r7, [sp, #76]	; 0x4c
   16e24:	str	r0, [sp, #72]	; 0x48
   16e28:	mov	r0, r7
   16e2c:	ldr	r8, [sp, #72]	; 0x48
   16e30:	str	r1, [sp, #68]	; 0x44
   16e34:	mov	r1, r8
   16e38:	ldr	r9, [sp, #68]	; 0x44
   16e3c:	str	r9, [sp]
   16e40:	str	lr, [sp, #4]
   16e44:	str	ip, [sp, #8]
   16e48:	str	r4, [sp, #12]
   16e4c:	str	r5, [sp, #16]
   16e50:	str	r6, [sp, #20]
   16e54:	bl	111cc <fprintf@plt>
   16e58:	str	r0, [sp, #64]	; 0x40
   16e5c:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e64:	movw	r1, #55343	; 0xd82f
   16e68:	movt	r1, #1
   16e6c:	str	r0, [sp, #60]	; 0x3c
   16e70:	mov	r0, r1
   16e74:	bl	111b4 <gettext@plt>
   16e78:	ldr	r1, [fp, #8]
   16e7c:	ldr	r2, [r1]
   16e80:	ldr	r1, [fp, #8]
   16e84:	ldr	r3, [r1, #4]
   16e88:	ldr	r1, [fp, #8]
   16e8c:	ldr	r1, [r1, #8]
   16e90:	ldr	lr, [fp, #8]
   16e94:	ldr	lr, [lr, #12]
   16e98:	ldr	ip, [fp, #8]
   16e9c:	ldr	ip, [ip, #16]
   16ea0:	ldr	r4, [fp, #8]
   16ea4:	ldr	r4, [r4, #20]
   16ea8:	ldr	r5, [fp, #8]
   16eac:	ldr	r5, [r5, #24]
   16eb0:	ldr	r6, [fp, #8]
   16eb4:	ldr	r6, [r6, #28]
   16eb8:	ldr	r7, [fp, #8]
   16ebc:	ldr	r7, [r7, #32]
   16ec0:	ldr	r8, [sp, #60]	; 0x3c
   16ec4:	str	r0, [sp, #56]	; 0x38
   16ec8:	mov	r0, r8
   16ecc:	ldr	r9, [sp, #56]	; 0x38
   16ed0:	str	r1, [sp, #52]	; 0x34
   16ed4:	mov	r1, r9
   16ed8:	ldr	sl, [sp, #52]	; 0x34
   16edc:	str	sl, [sp]
   16ee0:	str	lr, [sp, #4]
   16ee4:	str	ip, [sp, #8]
   16ee8:	str	r4, [sp, #12]
   16eec:	str	r5, [sp, #16]
   16ef0:	str	r6, [sp, #20]
   16ef4:	str	r7, [sp, #24]
   16ef8:	bl	111cc <fprintf@plt>
   16efc:	str	r0, [sp, #48]	; 0x30
   16f00:	b	16fa4 <__assert_fail@plt+0x5cc4>
   16f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f08:	movw	r1, #55395	; 0xd863
   16f0c:	movt	r1, #1
   16f10:	str	r0, [sp, #44]	; 0x2c
   16f14:	mov	r0, r1
   16f18:	bl	111b4 <gettext@plt>
   16f1c:	ldr	r1, [fp, #8]
   16f20:	ldr	r2, [r1]
   16f24:	ldr	r1, [fp, #8]
   16f28:	ldr	r3, [r1, #4]
   16f2c:	ldr	r1, [fp, #8]
   16f30:	ldr	r1, [r1, #8]
   16f34:	ldr	lr, [fp, #8]
   16f38:	ldr	lr, [lr, #12]
   16f3c:	ldr	ip, [fp, #8]
   16f40:	ldr	ip, [ip, #16]
   16f44:	ldr	r4, [fp, #8]
   16f48:	ldr	r4, [r4, #20]
   16f4c:	ldr	r5, [fp, #8]
   16f50:	ldr	r5, [r5, #24]
   16f54:	ldr	r6, [fp, #8]
   16f58:	ldr	r6, [r6, #28]
   16f5c:	ldr	r7, [fp, #8]
   16f60:	ldr	r7, [r7, #32]
   16f64:	ldr	r8, [sp, #44]	; 0x2c
   16f68:	str	r0, [sp, #40]	; 0x28
   16f6c:	mov	r0, r8
   16f70:	ldr	r9, [sp, #40]	; 0x28
   16f74:	str	r1, [sp, #36]	; 0x24
   16f78:	mov	r1, r9
   16f7c:	ldr	sl, [sp, #36]	; 0x24
   16f80:	str	sl, [sp]
   16f84:	str	lr, [sp, #4]
   16f88:	str	ip, [sp, #8]
   16f8c:	str	r4, [sp, #12]
   16f90:	str	r5, [sp, #16]
   16f94:	str	r6, [sp, #20]
   16f98:	str	r7, [sp, #24]
   16f9c:	bl	111cc <fprintf@plt>
   16fa0:	str	r0, [sp, #32]
   16fa4:	sub	sp, fp, #28
   16fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fac:	push	{fp, lr}
   16fb0:	mov	fp, sp
   16fb4:	sub	sp, sp, #32
   16fb8:	ldr	ip, [fp, #8]
   16fbc:	str	r0, [fp, #-4]
   16fc0:	str	r1, [fp, #-8]
   16fc4:	str	r2, [fp, #-12]
   16fc8:	str	r3, [sp, #16]
   16fcc:	movw	r0, #0
   16fd0:	str	r0, [sp, #12]
   16fd4:	str	ip, [sp, #8]
   16fd8:	ldr	r0, [fp, #8]
   16fdc:	ldr	r1, [sp, #12]
   16fe0:	add	r0, r0, r1, lsl #2
   16fe4:	ldr	r0, [r0]
   16fe8:	movw	r1, #0
   16fec:	cmp	r0, r1
   16ff0:	beq	17008 <__assert_fail@plt+0x5d28>
   16ff4:	b	16ff8 <__assert_fail@plt+0x5d18>
   16ff8:	ldr	r0, [sp, #12]
   16ffc:	add	r0, r0, #1
   17000:	str	r0, [sp, #12]
   17004:	b	16fd8 <__assert_fail@plt+0x5cf8>
   17008:	ldr	r0, [fp, #-4]
   1700c:	ldr	r1, [fp, #-8]
   17010:	ldr	r2, [fp, #-12]
   17014:	ldr	r3, [sp, #16]
   17018:	ldr	ip, [fp, #8]
   1701c:	ldr	lr, [sp, #12]
   17020:	str	ip, [sp]
   17024:	str	lr, [sp, #4]
   17028:	bl	16988 <__assert_fail@plt+0x56a8>
   1702c:	mov	sp, fp
   17030:	pop	{fp, pc}
   17034:	push	{fp, lr}
   17038:	mov	fp, sp
   1703c:	sub	sp, sp, #80	; 0x50
   17040:	ldr	ip, [fp, #8]
   17044:	str	ip, [fp, #-4]
   17048:	str	r0, [fp, #-8]
   1704c:	str	r1, [fp, #-12]
   17050:	str	r2, [fp, #-16]
   17054:	str	r3, [fp, #-20]	; 0xffffffec
   17058:	movw	r0, #0
   1705c:	str	r0, [fp, #-24]	; 0xffffffe8
   17060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17064:	cmp	r0, #10
   17068:	movw	r0, #0
   1706c:	str	r0, [sp, #12]
   17070:	bcs	170a8 <__assert_fail@plt+0x5dc8>
   17074:	ldr	r0, [fp, #-4]
   17078:	add	r1, r0, #4
   1707c:	str	r1, [fp, #-4]
   17080:	ldr	r0, [r0]
   17084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17088:	add	r2, sp, #16
   1708c:	add	r1, r2, r1, lsl #2
   17090:	str	r0, [r1]
   17094:	movw	r1, #0
   17098:	cmp	r0, r1
   1709c:	movw	r0, #0
   170a0:	movne	r0, #1
   170a4:	str	r0, [sp, #12]
   170a8:	ldr	r0, [sp, #12]
   170ac:	tst	r0, #1
   170b0:	beq	170c8 <__assert_fail@plt+0x5de8>
   170b4:	b	170b8 <__assert_fail@plt+0x5dd8>
   170b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170bc:	add	r0, r0, #1
   170c0:	str	r0, [fp, #-24]	; 0xffffffe8
   170c4:	b	17060 <__assert_fail@plt+0x5d80>
   170c8:	add	r0, sp, #16
   170cc:	ldr	r1, [fp, #-8]
   170d0:	ldr	r2, [fp, #-12]
   170d4:	ldr	r3, [fp, #-16]
   170d8:	ldr	ip, [fp, #-20]	; 0xffffffec
   170dc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   170e0:	str	r0, [sp, #8]
   170e4:	mov	r0, r1
   170e8:	mov	r1, r2
   170ec:	mov	r2, r3
   170f0:	mov	r3, ip
   170f4:	ldr	ip, [sp, #8]
   170f8:	str	ip, [sp]
   170fc:	str	lr, [sp, #4]
   17100:	bl	16988 <__assert_fail@plt+0x56a8>
   17104:	mov	sp, fp
   17108:	pop	{fp, pc}
   1710c:	push	{fp, lr}
   17110:	mov	fp, sp
   17114:	sub	sp, sp, #32
   17118:	str	r0, [fp, #-4]
   1711c:	str	r1, [fp, #-8]
   17120:	str	r2, [fp, #-12]
   17124:	str	r3, [sp, #16]
   17128:	add	r0, fp, #8
   1712c:	str	r0, [sp, #12]
   17130:	ldr	r0, [fp, #-4]
   17134:	ldr	r1, [fp, #-8]
   17138:	ldr	r2, [fp, #-12]
   1713c:	ldr	r3, [sp, #16]
   17140:	ldr	ip, [sp, #12]
   17144:	mov	lr, sp
   17148:	str	ip, [lr]
   1714c:	bl	17034 <__assert_fail@plt+0x5d54>
   17150:	add	r0, sp, #12
   17154:	str	r0, [sp, #8]
   17158:	mov	sp, fp
   1715c:	pop	{fp, pc}
   17160:	push	{fp, lr}
   17164:	mov	fp, sp
   17168:	sub	sp, sp, #16
   1716c:	movw	r0, #57708	; 0xe16c
   17170:	movt	r0, #2
   17174:	ldr	r1, [r0]
   17178:	movw	r0, #53798	; 0xd226
   1717c:	movt	r0, #1
   17180:	bl	11034 <fputs_unlocked@plt>
   17184:	movw	r1, #55455	; 0xd89f
   17188:	movt	r1, #1
   1718c:	str	r0, [fp, #-4]
   17190:	mov	r0, r1
   17194:	bl	111b4 <gettext@plt>
   17198:	movw	r1, #55475	; 0xd8b3
   1719c:	movt	r1, #1
   171a0:	bl	11064 <printf@plt>
   171a4:	movw	r1, #55497	; 0xd8c9
   171a8:	movt	r1, #1
   171ac:	str	r0, [sp, #8]
   171b0:	mov	r0, r1
   171b4:	bl	111b4 <gettext@plt>
   171b8:	movw	r1, #53103	; 0xcf6f
   171bc:	movt	r1, #1
   171c0:	movw	r2, #53607	; 0xd167
   171c4:	movt	r2, #1
   171c8:	bl	11064 <printf@plt>
   171cc:	movw	r1, #55517	; 0xd8dd
   171d0:	movt	r1, #1
   171d4:	str	r0, [sp, #4]
   171d8:	mov	r0, r1
   171dc:	bl	111b4 <gettext@plt>
   171e0:	movw	r1, #55556	; 0xd904
   171e4:	movt	r1, #1
   171e8:	bl	11064 <printf@plt>
   171ec:	str	r0, [sp]
   171f0:	mov	sp, fp
   171f4:	pop	{fp, pc}
   171f8:	push	{fp, lr}
   171fc:	mov	fp, sp
   17200:	sub	sp, sp, #16
   17204:	str	r0, [fp, #-4]
   17208:	str	r1, [sp, #8]
   1720c:	str	r2, [sp, #4]
   17210:	ldr	r0, [fp, #-4]
   17214:	ldr	r1, [sp, #8]
   17218:	ldr	r2, [sp, #4]
   1721c:	bl	17228 <__assert_fail@plt+0x5f48>
   17220:	mov	sp, fp
   17224:	pop	{fp, pc}
   17228:	push	{fp, lr}
   1722c:	mov	fp, sp
   17230:	sub	sp, sp, #16
   17234:	str	r0, [fp, #-4]
   17238:	str	r1, [sp, #8]
   1723c:	str	r2, [sp, #4]
   17240:	ldr	r0, [fp, #-4]
   17244:	ldr	r1, [sp, #8]
   17248:	ldr	r2, [sp, #4]
   1724c:	bl	1a9ec <__assert_fail@plt+0x970c>
   17250:	str	r0, [sp]
   17254:	ldr	r0, [sp]
   17258:	movw	r1, #0
   1725c:	cmp	r0, r1
   17260:	bne	17290 <__assert_fail@plt+0x5fb0>
   17264:	ldr	r0, [fp, #-4]
   17268:	movw	r1, #0
   1726c:	cmp	r0, r1
   17270:	beq	1728c <__assert_fail@plt+0x5fac>
   17274:	ldr	r0, [sp, #8]
   17278:	cmp	r0, #0
   1727c:	beq	17290 <__assert_fail@plt+0x5fb0>
   17280:	ldr	r0, [sp, #4]
   17284:	cmp	r0, #0
   17288:	beq	17290 <__assert_fail@plt+0x5fb0>
   1728c:	bl	1a078 <__assert_fail@plt+0x8d98>
   17290:	ldr	r0, [sp]
   17294:	mov	sp, fp
   17298:	pop	{fp, pc}
   1729c:	push	{fp, lr}
   172a0:	mov	fp, sp
   172a4:	sub	sp, sp, #8
   172a8:	str	r0, [sp, #4]
   172ac:	ldr	r0, [sp, #4]
   172b0:	bl	1a164 <__assert_fail@plt+0x8e84>
   172b4:	bl	172c0 <__assert_fail@plt+0x5fe0>
   172b8:	mov	sp, fp
   172bc:	pop	{fp, pc}
   172c0:	push	{fp, lr}
   172c4:	mov	fp, sp
   172c8:	sub	sp, sp, #8
   172cc:	str	r0, [sp, #4]
   172d0:	ldr	r0, [sp, #4]
   172d4:	movw	r1, #0
   172d8:	cmp	r0, r1
   172dc:	bne	172e4 <__assert_fail@plt+0x6004>
   172e0:	bl	1a078 <__assert_fail@plt+0x8d98>
   172e4:	ldr	r0, [sp, #4]
   172e8:	mov	sp, fp
   172ec:	pop	{fp, pc}
   172f0:	push	{fp, lr}
   172f4:	mov	fp, sp
   172f8:	sub	sp, sp, #8
   172fc:	str	r0, [sp, #4]
   17300:	ldr	r0, [sp, #4]
   17304:	bl	1a728 <__assert_fail@plt+0x9448>
   17308:	bl	172c0 <__assert_fail@plt+0x5fe0>
   1730c:	mov	sp, fp
   17310:	pop	{fp, pc}
   17314:	push	{fp, lr}
   17318:	mov	fp, sp
   1731c:	sub	sp, sp, #8
   17320:	str	r0, [sp, #4]
   17324:	ldr	r0, [sp, #4]
   17328:	bl	1729c <__assert_fail@plt+0x5fbc>
   1732c:	mov	sp, fp
   17330:	pop	{fp, pc}
   17334:	push	{fp, lr}
   17338:	mov	fp, sp
   1733c:	sub	sp, sp, #16
   17340:	str	r0, [fp, #-4]
   17344:	str	r1, [sp, #8]
   17348:	ldr	r0, [fp, #-4]
   1734c:	ldr	r1, [sp, #8]
   17350:	bl	1a1d4 <__assert_fail@plt+0x8ef4>
   17354:	str	r0, [sp, #4]
   17358:	ldr	r0, [sp, #4]
   1735c:	movw	r1, #0
   17360:	cmp	r0, r1
   17364:	bne	17388 <__assert_fail@plt+0x60a8>
   17368:	ldr	r0, [fp, #-4]
   1736c:	movw	r1, #0
   17370:	cmp	r0, r1
   17374:	beq	17384 <__assert_fail@plt+0x60a4>
   17378:	ldr	r0, [sp, #8]
   1737c:	cmp	r0, #0
   17380:	beq	17388 <__assert_fail@plt+0x60a8>
   17384:	bl	1a078 <__assert_fail@plt+0x8d98>
   17388:	ldr	r0, [sp, #4]
   1738c:	mov	sp, fp
   17390:	pop	{fp, pc}
   17394:	push	{fp, lr}
   17398:	mov	fp, sp
   1739c:	sub	sp, sp, #8
   173a0:	str	r0, [sp, #4]
   173a4:	str	r1, [sp]
   173a8:	ldr	r0, [sp, #4]
   173ac:	ldr	r1, [sp]
   173b0:	bl	1a768 <__assert_fail@plt+0x9488>
   173b4:	bl	172c0 <__assert_fail@plt+0x5fe0>
   173b8:	mov	sp, fp
   173bc:	pop	{fp, pc}
   173c0:	push	{fp, lr}
   173c4:	mov	fp, sp
   173c8:	sub	sp, sp, #16
   173cc:	str	r0, [fp, #-4]
   173d0:	str	r1, [sp, #8]
   173d4:	str	r2, [sp, #4]
   173d8:	ldr	r0, [fp, #-4]
   173dc:	ldr	r1, [sp, #8]
   173e0:	ldr	r2, [sp, #4]
   173e4:	bl	1a860 <__assert_fail@plt+0x9580>
   173e8:	bl	172c0 <__assert_fail@plt+0x5fe0>
   173ec:	mov	sp, fp
   173f0:	pop	{fp, pc}
   173f4:	push	{fp, lr}
   173f8:	mov	fp, sp
   173fc:	sub	sp, sp, #8
   17400:	str	r0, [sp, #4]
   17404:	str	r1, [sp]
   17408:	ldr	r1, [sp, #4]
   1740c:	ldr	r2, [sp]
   17410:	movw	r0, #0
   17414:	bl	17228 <__assert_fail@plt+0x5f48>
   17418:	mov	sp, fp
   1741c:	pop	{fp, pc}
   17420:	push	{fp, lr}
   17424:	mov	fp, sp
   17428:	sub	sp, sp, #8
   1742c:	str	r0, [sp, #4]
   17430:	str	r1, [sp]
   17434:	ldr	r1, [sp, #4]
   17438:	ldr	r2, [sp]
   1743c:	movw	r0, #0
   17440:	bl	173c0 <__assert_fail@plt+0x60e0>
   17444:	mov	sp, fp
   17448:	pop	{fp, pc}
   1744c:	push	{fp, lr}
   17450:	mov	fp, sp
   17454:	sub	sp, sp, #8
   17458:	str	r0, [sp, #4]
   1745c:	str	r1, [sp]
   17460:	ldr	r0, [sp, #4]
   17464:	ldr	r1, [sp]
   17468:	movw	r2, #1
   1746c:	bl	17478 <__assert_fail@plt+0x6198>
   17470:	mov	sp, fp
   17474:	pop	{fp, pc}
   17478:	push	{fp, lr}
   1747c:	mov	fp, sp
   17480:	sub	sp, sp, #16
   17484:	str	r0, [fp, #-4]
   17488:	str	r1, [sp, #8]
   1748c:	str	r2, [sp, #4]
   17490:	ldr	r0, [sp, #8]
   17494:	ldr	r0, [r0]
   17498:	str	r0, [sp]
   1749c:	ldr	r0, [fp, #-4]
   174a0:	movw	r1, #0
   174a4:	cmp	r0, r1
   174a8:	bne	174f4 <__assert_fail@plt+0x6214>
   174ac:	ldr	r0, [sp]
   174b0:	cmp	r0, #0
   174b4:	bne	174f0 <__assert_fail@plt+0x6210>
   174b8:	ldr	r0, [sp, #4]
   174bc:	movw	r1, #64	; 0x40
   174c0:	udiv	r0, r1, r0
   174c4:	str	r0, [sp]
   174c8:	ldr	r0, [sp]
   174cc:	cmp	r0, #0
   174d0:	movw	r0, #0
   174d4:	movne	r0, #1
   174d8:	mvn	r1, #0
   174dc:	eor	r0, r0, r1
   174e0:	and	r0, r0, #1
   174e4:	ldr	r1, [sp]
   174e8:	add	r0, r1, r0
   174ec:	str	r0, [sp]
   174f0:	b	17524 <__assert_fail@plt+0x6244>
   174f4:	ldr	r0, [sp]
   174f8:	ldr	r1, [sp]
   174fc:	lsr	r1, r1, #1
   17500:	add	r1, r1, #1
   17504:	adds	r0, r0, r1
   17508:	mov	r1, #0
   1750c:	adc	r1, r1, #0
   17510:	str	r0, [sp]
   17514:	tst	r1, #1
   17518:	beq	17520 <__assert_fail@plt+0x6240>
   1751c:	bl	1a078 <__assert_fail@plt+0x8d98>
   17520:	b	17524 <__assert_fail@plt+0x6244>
   17524:	ldr	r0, [fp, #-4]
   17528:	ldr	r1, [sp]
   1752c:	ldr	r2, [sp, #4]
   17530:	bl	17228 <__assert_fail@plt+0x5f48>
   17534:	str	r0, [fp, #-4]
   17538:	ldr	r0, [sp]
   1753c:	ldr	r1, [sp, #8]
   17540:	str	r0, [r1]
   17544:	ldr	r0, [fp, #-4]
   17548:	mov	sp, fp
   1754c:	pop	{fp, pc}
   17550:	push	{fp, lr}
   17554:	mov	fp, sp
   17558:	sub	sp, sp, #376	; 0x178
   1755c:	ldr	ip, [fp, #8]
   17560:	str	r0, [fp, #-4]
   17564:	str	r1, [fp, #-8]
   17568:	str	r2, [fp, #-12]
   1756c:	str	r3, [fp, #-16]
   17570:	ldr	r0, [fp, #-8]
   17574:	ldr	r0, [r0]
   17578:	str	r0, [fp, #-20]	; 0xffffffec
   1757c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17580:	ldr	r1, [fp, #-20]	; 0xffffffec
   17584:	asr	r1, r1, #1
   17588:	add	r1, r0, r1
   1758c:	mov	r2, #1
   17590:	cmp	r1, r0
   17594:	movwvc	r2, #0
   17598:	str	r1, [fp, #-24]	; 0xffffffe8
   1759c:	tst	r2, #1
   175a0:	str	ip, [fp, #-36]	; 0xffffffdc
   175a4:	beq	175b0 <__assert_fail@plt+0x62d0>
   175a8:	ldr	r0, [pc, #4044]	; 1857c <__assert_fail@plt+0x729c>
   175ac:	str	r0, [fp, #-24]	; 0xffffffe8
   175b0:	ldr	r0, [fp, #-16]
   175b4:	movw	r1, #0
   175b8:	cmp	r1, r0
   175bc:	bgt	175d8 <__assert_fail@plt+0x62f8>
   175c0:	ldr	r0, [fp, #-16]
   175c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175c8:	cmp	r0, r1
   175cc:	bge	175d8 <__assert_fail@plt+0x62f8>
   175d0:	ldr	r0, [fp, #-16]
   175d4:	str	r0, [fp, #-24]	; 0xffffffe8
   175d8:	b	179b0 <__assert_fail@plt+0x66d0>
   175dc:	b	175e0 <__assert_fail@plt+0x6300>
   175e0:	ldr	r0, [fp, #8]
   175e4:	cmp	r0, #0
   175e8:	bge	176fc <__assert_fail@plt+0x641c>
   175ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f0:	cmp	r0, #0
   175f4:	bge	17680 <__assert_fail@plt+0x63a0>
   175f8:	b	175fc <__assert_fail@plt+0x631c>
   175fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17600:	ldr	r1, [fp, #8]
   17604:	movw	r2, #127	; 0x7f
   17608:	sdiv	r1, r2, r1
   1760c:	cmp	r0, r1
   17610:	blt	1779c <__assert_fail@plt+0x64bc>
   17614:	b	177b4 <__assert_fail@plt+0x64d4>
   17618:	b	1761c <__assert_fail@plt+0x633c>
   1761c:	ldr	r0, [pc, #4076]	; 18610 <__assert_fail@plt+0x7330>
   17620:	ldr	r1, [fp, #8]
   17624:	cmp	r1, r0
   17628:	blt	17640 <__assert_fail@plt+0x6360>
   1762c:	b	1764c <__assert_fail@plt+0x636c>
   17630:	ldr	r0, [fp, #8]
   17634:	movw	r1, #0
   17638:	cmp	r1, r0
   1763c:	bge	1764c <__assert_fail@plt+0x636c>
   17640:	movw	r0, #0
   17644:	str	r0, [fp, #-40]	; 0xffffffd8
   17648:	b	17664 <__assert_fail@plt+0x6384>
   1764c:	ldr	r0, [fp, #8]
   17650:	movw	r1, #0
   17654:	sub	r0, r1, r0
   17658:	movw	r1, #127	; 0x7f
   1765c:	sdiv	r0, r1, r0
   17660:	str	r0, [fp, #-40]	; 0xffffffd8
   17664:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1766c:	mvn	r2, #0
   17670:	sub	r1, r2, r1
   17674:	cmp	r0, r1
   17678:	ble	1779c <__assert_fail@plt+0x64bc>
   1767c:	b	177b4 <__assert_fail@plt+0x64d4>
   17680:	b	17684 <__assert_fail@plt+0x63a4>
   17684:	b	176e0 <__assert_fail@plt+0x6400>
   17688:	b	176e0 <__assert_fail@plt+0x6400>
   1768c:	ldr	r0, [fp, #8]
   17690:	cmn	r0, #1
   17694:	bne	176e0 <__assert_fail@plt+0x6400>
   17698:	b	1769c <__assert_fail@plt+0x63bc>
   1769c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176a0:	mvn	r1, #127	; 0x7f
   176a4:	add	r0, r0, r1
   176a8:	movw	r1, #0
   176ac:	cmp	r1, r0
   176b0:	blt	1779c <__assert_fail@plt+0x64bc>
   176b4:	b	177b4 <__assert_fail@plt+0x64d4>
   176b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176bc:	movw	r1, #0
   176c0:	cmp	r1, r0
   176c4:	bge	177b4 <__assert_fail@plt+0x64d4>
   176c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176cc:	sub	r0, r0, #1
   176d0:	movw	r1, #127	; 0x7f
   176d4:	cmp	r1, r0
   176d8:	blt	1779c <__assert_fail@plt+0x64bc>
   176dc:	b	177b4 <__assert_fail@plt+0x64d4>
   176e0:	ldr	r0, [fp, #8]
   176e4:	mvn	r1, #127	; 0x7f
   176e8:	sdiv	r0, r1, r0
   176ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176f0:	cmp	r0, r1
   176f4:	blt	1779c <__assert_fail@plt+0x64bc>
   176f8:	b	177b4 <__assert_fail@plt+0x64d4>
   176fc:	ldr	r0, [fp, #8]
   17700:	cmp	r0, #0
   17704:	bne	1770c <__assert_fail@plt+0x642c>
   17708:	b	177b4 <__assert_fail@plt+0x64d4>
   1770c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17710:	cmp	r0, #0
   17714:	bge	17784 <__assert_fail@plt+0x64a4>
   17718:	b	1771c <__assert_fail@plt+0x643c>
   1771c:	b	17768 <__assert_fail@plt+0x6488>
   17720:	b	17768 <__assert_fail@plt+0x6488>
   17724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17728:	cmn	r0, #1
   1772c:	bne	17768 <__assert_fail@plt+0x6488>
   17730:	b	17734 <__assert_fail@plt+0x6454>
   17734:	ldr	r0, [fp, #8]
   17738:	mvn	r1, #127	; 0x7f
   1773c:	add	r0, r0, r1
   17740:	movw	r1, #0
   17744:	cmp	r1, r0
   17748:	blt	1779c <__assert_fail@plt+0x64bc>
   1774c:	b	177b4 <__assert_fail@plt+0x64d4>
   17750:	ldr	r0, [fp, #8]
   17754:	sub	r0, r0, #1
   17758:	movw	r1, #127	; 0x7f
   1775c:	cmp	r1, r0
   17760:	blt	1779c <__assert_fail@plt+0x64bc>
   17764:	b	177b4 <__assert_fail@plt+0x64d4>
   17768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1776c:	mvn	r1, #127	; 0x7f
   17770:	sdiv	r0, r1, r0
   17774:	ldr	r1, [fp, #8]
   17778:	cmp	r0, r1
   1777c:	blt	1779c <__assert_fail@plt+0x64bc>
   17780:	b	177b4 <__assert_fail@plt+0x64d4>
   17784:	ldr	r0, [fp, #8]
   17788:	movw	r1, #127	; 0x7f
   1778c:	sdiv	r0, r1, r0
   17790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17794:	cmp	r0, r1
   17798:	bge	177b4 <__assert_fail@plt+0x64d4>
   1779c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177a0:	ldr	r1, [fp, #8]
   177a4:	mul	r0, r0, r1
   177a8:	sxtb	r0, r0
   177ac:	str	r0, [fp, #-28]	; 0xffffffe4
   177b0:	b	189c8 <__assert_fail@plt+0x76e8>
   177b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177b8:	ldr	r1, [fp, #8]
   177bc:	mul	r0, r0, r1
   177c0:	sxtb	r0, r0
   177c4:	str	r0, [fp, #-28]	; 0xffffffe4
   177c8:	b	189d8 <__assert_fail@plt+0x76f8>
   177cc:	ldr	r0, [fp, #8]
   177d0:	cmp	r0, #0
   177d4:	bge	178e4 <__assert_fail@plt+0x6604>
   177d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177dc:	cmp	r0, #0
   177e0:	bge	1786c <__assert_fail@plt+0x658c>
   177e4:	b	177e8 <__assert_fail@plt+0x6508>
   177e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177ec:	ldr	r1, [fp, #8]
   177f0:	movw	r2, #255	; 0xff
   177f4:	sdiv	r1, r2, r1
   177f8:	cmp	r0, r1
   177fc:	blt	17980 <__assert_fail@plt+0x66a0>
   17800:	b	17998 <__assert_fail@plt+0x66b8>
   17804:	b	17808 <__assert_fail@plt+0x6528>
   17808:	ldr	r0, [pc, #3584]	; 18610 <__assert_fail@plt+0x7330>
   1780c:	ldr	r1, [fp, #8]
   17810:	cmp	r1, r0
   17814:	blt	1782c <__assert_fail@plt+0x654c>
   17818:	b	17838 <__assert_fail@plt+0x6558>
   1781c:	ldr	r0, [fp, #8]
   17820:	movw	r1, #0
   17824:	cmp	r1, r0
   17828:	bge	17838 <__assert_fail@plt+0x6558>
   1782c:	movw	r0, #0
   17830:	str	r0, [fp, #-44]	; 0xffffffd4
   17834:	b	17850 <__assert_fail@plt+0x6570>
   17838:	ldr	r0, [fp, #8]
   1783c:	movw	r1, #0
   17840:	sub	r0, r1, r0
   17844:	movw	r1, #255	; 0xff
   17848:	sdiv	r0, r1, r0
   1784c:	str	r0, [fp, #-44]	; 0xffffffd4
   17850:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17854:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17858:	mvn	r2, #0
   1785c:	sub	r1, r2, r1
   17860:	cmp	r0, r1
   17864:	ble	17980 <__assert_fail@plt+0x66a0>
   17868:	b	17998 <__assert_fail@plt+0x66b8>
   1786c:	b	17870 <__assert_fail@plt+0x6590>
   17870:	b	178c8 <__assert_fail@plt+0x65e8>
   17874:	b	178c8 <__assert_fail@plt+0x65e8>
   17878:	ldr	r0, [fp, #8]
   1787c:	cmn	r0, #1
   17880:	bne	178c8 <__assert_fail@plt+0x65e8>
   17884:	b	17888 <__assert_fail@plt+0x65a8>
   17888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1788c:	add	r0, r0, #0
   17890:	movw	r1, #0
   17894:	cmp	r1, r0
   17898:	blt	17980 <__assert_fail@plt+0x66a0>
   1789c:	b	17998 <__assert_fail@plt+0x66b8>
   178a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178a4:	movw	r1, #0
   178a8:	cmp	r1, r0
   178ac:	bge	17998 <__assert_fail@plt+0x66b8>
   178b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178b4:	sub	r0, r0, #1
   178b8:	mvn	r1, #0
   178bc:	cmp	r1, r0
   178c0:	blt	17980 <__assert_fail@plt+0x66a0>
   178c4:	b	17998 <__assert_fail@plt+0x66b8>
   178c8:	ldr	r0, [fp, #8]
   178cc:	movw	r1, #0
   178d0:	sdiv	r0, r1, r0
   178d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178d8:	cmp	r0, r1
   178dc:	blt	17980 <__assert_fail@plt+0x66a0>
   178e0:	b	17998 <__assert_fail@plt+0x66b8>
   178e4:	ldr	r0, [fp, #8]
   178e8:	cmp	r0, #0
   178ec:	bne	178f4 <__assert_fail@plt+0x6614>
   178f0:	b	17998 <__assert_fail@plt+0x66b8>
   178f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178f8:	cmp	r0, #0
   178fc:	bge	17968 <__assert_fail@plt+0x6688>
   17900:	b	17904 <__assert_fail@plt+0x6624>
   17904:	b	1794c <__assert_fail@plt+0x666c>
   17908:	b	1794c <__assert_fail@plt+0x666c>
   1790c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17910:	cmn	r0, #1
   17914:	bne	1794c <__assert_fail@plt+0x666c>
   17918:	b	1791c <__assert_fail@plt+0x663c>
   1791c:	ldr	r0, [fp, #8]
   17920:	add	r0, r0, #0
   17924:	movw	r1, #0
   17928:	cmp	r1, r0
   1792c:	blt	17980 <__assert_fail@plt+0x66a0>
   17930:	b	17998 <__assert_fail@plt+0x66b8>
   17934:	ldr	r0, [fp, #8]
   17938:	sub	r0, r0, #1
   1793c:	mvn	r1, #0
   17940:	cmp	r1, r0
   17944:	blt	17980 <__assert_fail@plt+0x66a0>
   17948:	b	17998 <__assert_fail@plt+0x66b8>
   1794c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17950:	movw	r1, #0
   17954:	sdiv	r0, r1, r0
   17958:	ldr	r1, [fp, #8]
   1795c:	cmp	r0, r1
   17960:	blt	17980 <__assert_fail@plt+0x66a0>
   17964:	b	17998 <__assert_fail@plt+0x66b8>
   17968:	ldr	r0, [fp, #8]
   1796c:	movw	r1, #255	; 0xff
   17970:	sdiv	r0, r1, r0
   17974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17978:	cmp	r0, r1
   1797c:	bge	17998 <__assert_fail@plt+0x66b8>
   17980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17984:	ldr	r1, [fp, #8]
   17988:	mul	r0, r0, r1
   1798c:	and	r0, r0, #255	; 0xff
   17990:	str	r0, [fp, #-28]	; 0xffffffe4
   17994:	b	189c8 <__assert_fail@plt+0x76e8>
   17998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1799c:	ldr	r1, [fp, #8]
   179a0:	mul	r0, r0, r1
   179a4:	and	r0, r0, #255	; 0xff
   179a8:	str	r0, [fp, #-28]	; 0xffffffe4
   179ac:	b	189d8 <__assert_fail@plt+0x76f8>
   179b0:	b	17d88 <__assert_fail@plt+0x6aa8>
   179b4:	b	179b8 <__assert_fail@plt+0x66d8>
   179b8:	ldr	r0, [fp, #8]
   179bc:	cmp	r0, #0
   179c0:	bge	17ad4 <__assert_fail@plt+0x67f4>
   179c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179c8:	cmp	r0, #0
   179cc:	bge	17a58 <__assert_fail@plt+0x6778>
   179d0:	b	179d4 <__assert_fail@plt+0x66f4>
   179d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179d8:	ldr	r1, [fp, #8]
   179dc:	movw	r2, #32767	; 0x7fff
   179e0:	sdiv	r1, r2, r1
   179e4:	cmp	r0, r1
   179e8:	blt	17b74 <__assert_fail@plt+0x6894>
   179ec:	b	17b8c <__assert_fail@plt+0x68ac>
   179f0:	b	179f4 <__assert_fail@plt+0x6714>
   179f4:	ldr	r0, [pc, #3092]	; 18610 <__assert_fail@plt+0x7330>
   179f8:	ldr	r1, [fp, #8]
   179fc:	cmp	r1, r0
   17a00:	blt	17a18 <__assert_fail@plt+0x6738>
   17a04:	b	17a24 <__assert_fail@plt+0x6744>
   17a08:	ldr	r0, [fp, #8]
   17a0c:	movw	r1, #0
   17a10:	cmp	r1, r0
   17a14:	bge	17a24 <__assert_fail@plt+0x6744>
   17a18:	movw	r0, #0
   17a1c:	str	r0, [fp, #-48]	; 0xffffffd0
   17a20:	b	17a3c <__assert_fail@plt+0x675c>
   17a24:	ldr	r0, [fp, #8]
   17a28:	movw	r1, #0
   17a2c:	sub	r0, r1, r0
   17a30:	movw	r1, #32767	; 0x7fff
   17a34:	sdiv	r0, r1, r0
   17a38:	str	r0, [fp, #-48]	; 0xffffffd0
   17a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a44:	mvn	r2, #0
   17a48:	sub	r1, r2, r1
   17a4c:	cmp	r0, r1
   17a50:	ble	17b74 <__assert_fail@plt+0x6894>
   17a54:	b	17b8c <__assert_fail@plt+0x68ac>
   17a58:	b	17a5c <__assert_fail@plt+0x677c>
   17a5c:	b	17ab8 <__assert_fail@plt+0x67d8>
   17a60:	b	17ab8 <__assert_fail@plt+0x67d8>
   17a64:	ldr	r0, [fp, #8]
   17a68:	cmn	r0, #1
   17a6c:	bne	17ab8 <__assert_fail@plt+0x67d8>
   17a70:	b	17a74 <__assert_fail@plt+0x6794>
   17a74:	ldr	r0, [pc, #3928]	; 189d4 <__assert_fail@plt+0x76f4>
   17a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a7c:	add	r0, r1, r0
   17a80:	movw	r1, #0
   17a84:	cmp	r1, r0
   17a88:	blt	17b74 <__assert_fail@plt+0x6894>
   17a8c:	b	17b8c <__assert_fail@plt+0x68ac>
   17a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a94:	movw	r1, #0
   17a98:	cmp	r1, r0
   17a9c:	bge	17b8c <__assert_fail@plt+0x68ac>
   17aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aa4:	sub	r0, r0, #1
   17aa8:	movw	r1, #32767	; 0x7fff
   17aac:	cmp	r1, r0
   17ab0:	blt	17b74 <__assert_fail@plt+0x6894>
   17ab4:	b	17b8c <__assert_fail@plt+0x68ac>
   17ab8:	ldr	r0, [pc, #3860]	; 189d4 <__assert_fail@plt+0x76f4>
   17abc:	ldr	r1, [fp, #8]
   17ac0:	sdiv	r0, r0, r1
   17ac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ac8:	cmp	r0, r1
   17acc:	blt	17b74 <__assert_fail@plt+0x6894>
   17ad0:	b	17b8c <__assert_fail@plt+0x68ac>
   17ad4:	ldr	r0, [fp, #8]
   17ad8:	cmp	r0, #0
   17adc:	bne	17ae4 <__assert_fail@plt+0x6804>
   17ae0:	b	17b8c <__assert_fail@plt+0x68ac>
   17ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ae8:	cmp	r0, #0
   17aec:	bge	17b5c <__assert_fail@plt+0x687c>
   17af0:	b	17af4 <__assert_fail@plt+0x6814>
   17af4:	b	17b40 <__assert_fail@plt+0x6860>
   17af8:	b	17b40 <__assert_fail@plt+0x6860>
   17afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b00:	cmn	r0, #1
   17b04:	bne	17b40 <__assert_fail@plt+0x6860>
   17b08:	b	17b0c <__assert_fail@plt+0x682c>
   17b0c:	ldr	r0, [pc, #3776]	; 189d4 <__assert_fail@plt+0x76f4>
   17b10:	ldr	r1, [fp, #8]
   17b14:	add	r0, r1, r0
   17b18:	movw	r1, #0
   17b1c:	cmp	r1, r0
   17b20:	blt	17b74 <__assert_fail@plt+0x6894>
   17b24:	b	17b8c <__assert_fail@plt+0x68ac>
   17b28:	ldr	r0, [fp, #8]
   17b2c:	sub	r0, r0, #1
   17b30:	movw	r1, #32767	; 0x7fff
   17b34:	cmp	r1, r0
   17b38:	blt	17b74 <__assert_fail@plt+0x6894>
   17b3c:	b	17b8c <__assert_fail@plt+0x68ac>
   17b40:	ldr	r0, [pc, #3724]	; 189d4 <__assert_fail@plt+0x76f4>
   17b44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b48:	sdiv	r0, r0, r1
   17b4c:	ldr	r1, [fp, #8]
   17b50:	cmp	r0, r1
   17b54:	blt	17b74 <__assert_fail@plt+0x6894>
   17b58:	b	17b8c <__assert_fail@plt+0x68ac>
   17b5c:	ldr	r0, [fp, #8]
   17b60:	movw	r1, #32767	; 0x7fff
   17b64:	sdiv	r0, r1, r0
   17b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b6c:	cmp	r0, r1
   17b70:	bge	17b8c <__assert_fail@plt+0x68ac>
   17b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b78:	ldr	r1, [fp, #8]
   17b7c:	mul	r0, r0, r1
   17b80:	sxth	r0, r0
   17b84:	str	r0, [fp, #-28]	; 0xffffffe4
   17b88:	b	189c8 <__assert_fail@plt+0x76e8>
   17b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b90:	ldr	r1, [fp, #8]
   17b94:	mul	r0, r0, r1
   17b98:	sxth	r0, r0
   17b9c:	str	r0, [fp, #-28]	; 0xffffffe4
   17ba0:	b	189d8 <__assert_fail@plt+0x76f8>
   17ba4:	ldr	r0, [fp, #8]
   17ba8:	cmp	r0, #0
   17bac:	bge	17cbc <__assert_fail@plt+0x69dc>
   17bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bb4:	cmp	r0, #0
   17bb8:	bge	17c44 <__assert_fail@plt+0x6964>
   17bbc:	b	17bc0 <__assert_fail@plt+0x68e0>
   17bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bc4:	ldr	r1, [fp, #8]
   17bc8:	movw	r2, #65535	; 0xffff
   17bcc:	sdiv	r1, r2, r1
   17bd0:	cmp	r0, r1
   17bd4:	blt	17d58 <__assert_fail@plt+0x6a78>
   17bd8:	b	17d70 <__assert_fail@plt+0x6a90>
   17bdc:	b	17be0 <__assert_fail@plt+0x6900>
   17be0:	ldr	r0, [pc, #2600]	; 18610 <__assert_fail@plt+0x7330>
   17be4:	ldr	r1, [fp, #8]
   17be8:	cmp	r1, r0
   17bec:	blt	17c04 <__assert_fail@plt+0x6924>
   17bf0:	b	17c10 <__assert_fail@plt+0x6930>
   17bf4:	ldr	r0, [fp, #8]
   17bf8:	movw	r1, #0
   17bfc:	cmp	r1, r0
   17c00:	bge	17c10 <__assert_fail@plt+0x6930>
   17c04:	movw	r0, #0
   17c08:	str	r0, [fp, #-52]	; 0xffffffcc
   17c0c:	b	17c28 <__assert_fail@plt+0x6948>
   17c10:	ldr	r0, [fp, #8]
   17c14:	movw	r1, #0
   17c18:	sub	r0, r1, r0
   17c1c:	movw	r1, #65535	; 0xffff
   17c20:	sdiv	r0, r1, r0
   17c24:	str	r0, [fp, #-52]	; 0xffffffcc
   17c28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c30:	mvn	r2, #0
   17c34:	sub	r1, r2, r1
   17c38:	cmp	r0, r1
   17c3c:	ble	17d58 <__assert_fail@plt+0x6a78>
   17c40:	b	17d70 <__assert_fail@plt+0x6a90>
   17c44:	b	17c48 <__assert_fail@plt+0x6968>
   17c48:	b	17ca0 <__assert_fail@plt+0x69c0>
   17c4c:	b	17ca0 <__assert_fail@plt+0x69c0>
   17c50:	ldr	r0, [fp, #8]
   17c54:	cmn	r0, #1
   17c58:	bne	17ca0 <__assert_fail@plt+0x69c0>
   17c5c:	b	17c60 <__assert_fail@plt+0x6980>
   17c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c64:	add	r0, r0, #0
   17c68:	movw	r1, #0
   17c6c:	cmp	r1, r0
   17c70:	blt	17d58 <__assert_fail@plt+0x6a78>
   17c74:	b	17d70 <__assert_fail@plt+0x6a90>
   17c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c7c:	movw	r1, #0
   17c80:	cmp	r1, r0
   17c84:	bge	17d70 <__assert_fail@plt+0x6a90>
   17c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c8c:	sub	r0, r0, #1
   17c90:	mvn	r1, #0
   17c94:	cmp	r1, r0
   17c98:	blt	17d58 <__assert_fail@plt+0x6a78>
   17c9c:	b	17d70 <__assert_fail@plt+0x6a90>
   17ca0:	ldr	r0, [fp, #8]
   17ca4:	movw	r1, #0
   17ca8:	sdiv	r0, r1, r0
   17cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cb0:	cmp	r0, r1
   17cb4:	blt	17d58 <__assert_fail@plt+0x6a78>
   17cb8:	b	17d70 <__assert_fail@plt+0x6a90>
   17cbc:	ldr	r0, [fp, #8]
   17cc0:	cmp	r0, #0
   17cc4:	bne	17ccc <__assert_fail@plt+0x69ec>
   17cc8:	b	17d70 <__assert_fail@plt+0x6a90>
   17ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cd0:	cmp	r0, #0
   17cd4:	bge	17d40 <__assert_fail@plt+0x6a60>
   17cd8:	b	17cdc <__assert_fail@plt+0x69fc>
   17cdc:	b	17d24 <__assert_fail@plt+0x6a44>
   17ce0:	b	17d24 <__assert_fail@plt+0x6a44>
   17ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ce8:	cmn	r0, #1
   17cec:	bne	17d24 <__assert_fail@plt+0x6a44>
   17cf0:	b	17cf4 <__assert_fail@plt+0x6a14>
   17cf4:	ldr	r0, [fp, #8]
   17cf8:	add	r0, r0, #0
   17cfc:	movw	r1, #0
   17d00:	cmp	r1, r0
   17d04:	blt	17d58 <__assert_fail@plt+0x6a78>
   17d08:	b	17d70 <__assert_fail@plt+0x6a90>
   17d0c:	ldr	r0, [fp, #8]
   17d10:	sub	r0, r0, #1
   17d14:	mvn	r1, #0
   17d18:	cmp	r1, r0
   17d1c:	blt	17d58 <__assert_fail@plt+0x6a78>
   17d20:	b	17d70 <__assert_fail@plt+0x6a90>
   17d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d28:	movw	r1, #0
   17d2c:	sdiv	r0, r1, r0
   17d30:	ldr	r1, [fp, #8]
   17d34:	cmp	r0, r1
   17d38:	blt	17d58 <__assert_fail@plt+0x6a78>
   17d3c:	b	17d70 <__assert_fail@plt+0x6a90>
   17d40:	ldr	r0, [fp, #8]
   17d44:	movw	r1, #65535	; 0xffff
   17d48:	sdiv	r0, r1, r0
   17d4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d50:	cmp	r0, r1
   17d54:	bge	17d70 <__assert_fail@plt+0x6a90>
   17d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d5c:	ldr	r1, [fp, #8]
   17d60:	mul	r0, r0, r1
   17d64:	uxth	r0, r0
   17d68:	str	r0, [fp, #-28]	; 0xffffffe4
   17d6c:	b	189c8 <__assert_fail@plt+0x76e8>
   17d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d74:	ldr	r1, [fp, #8]
   17d78:	mul	r0, r0, r1
   17d7c:	uxth	r0, r0
   17d80:	str	r0, [fp, #-28]	; 0xffffffe4
   17d84:	b	189d8 <__assert_fail@plt+0x76f8>
   17d88:	b	17d8c <__assert_fail@plt+0x6aac>
   17d8c:	b	17d90 <__assert_fail@plt+0x6ab0>
   17d90:	ldr	r0, [fp, #8]
   17d94:	cmp	r0, #0
   17d98:	bge	17e9c <__assert_fail@plt+0x6bbc>
   17d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17da0:	cmp	r0, #0
   17da4:	bge	17e30 <__assert_fail@plt+0x6b50>
   17da8:	b	17dac <__assert_fail@plt+0x6acc>
   17dac:	ldr	r0, [pc, #1992]	; 1857c <__assert_fail@plt+0x729c>
   17db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17db4:	ldr	r2, [fp, #8]
   17db8:	sdiv	r0, r0, r2
   17dbc:	cmp	r1, r0
   17dc0:	blt	17f2c <__assert_fail@plt+0x6c4c>
   17dc4:	b	17f40 <__assert_fail@plt+0x6c60>
   17dc8:	b	17dcc <__assert_fail@plt+0x6aec>
   17dcc:	ldr	r0, [pc, #2108]	; 18610 <__assert_fail@plt+0x7330>
   17dd0:	ldr	r1, [fp, #8]
   17dd4:	cmp	r1, r0
   17dd8:	blt	17df0 <__assert_fail@plt+0x6b10>
   17ddc:	b	17dfc <__assert_fail@plt+0x6b1c>
   17de0:	ldr	r0, [fp, #8]
   17de4:	movw	r1, #0
   17de8:	cmp	r1, r0
   17dec:	bge	17dfc <__assert_fail@plt+0x6b1c>
   17df0:	movw	r0, #0
   17df4:	str	r0, [fp, #-56]	; 0xffffffc8
   17df8:	b	17e14 <__assert_fail@plt+0x6b34>
   17dfc:	ldr	r0, [pc, #1912]	; 1857c <__assert_fail@plt+0x729c>
   17e00:	ldr	r1, [fp, #8]
   17e04:	movw	r2, #0
   17e08:	sub	r1, r2, r1
   17e0c:	sdiv	r0, r0, r1
   17e10:	str	r0, [fp, #-56]	; 0xffffffc8
   17e14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17e18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e1c:	mvn	r2, #0
   17e20:	sub	r1, r2, r1
   17e24:	cmp	r0, r1
   17e28:	ble	17f2c <__assert_fail@plt+0x6c4c>
   17e2c:	b	17f40 <__assert_fail@plt+0x6c60>
   17e30:	ldr	r0, [fp, #8]
   17e34:	cmn	r0, #1
   17e38:	bne	17e80 <__assert_fail@plt+0x6ba0>
   17e3c:	b	17e40 <__assert_fail@plt+0x6b60>
   17e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e44:	add	r0, r0, #-2147483648	; 0x80000000
   17e48:	movw	r1, #0
   17e4c:	cmp	r1, r0
   17e50:	blt	17f2c <__assert_fail@plt+0x6c4c>
   17e54:	b	17f40 <__assert_fail@plt+0x6c60>
   17e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e5c:	movw	r1, #0
   17e60:	cmp	r1, r0
   17e64:	bge	17f40 <__assert_fail@plt+0x6c60>
   17e68:	ldr	r0, [pc, #1804]	; 1857c <__assert_fail@plt+0x729c>
   17e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e70:	sub	r1, r1, #1
   17e74:	cmp	r0, r1
   17e78:	blt	17f2c <__assert_fail@plt+0x6c4c>
   17e7c:	b	17f40 <__assert_fail@plt+0x6c60>
   17e80:	ldr	r0, [pc, #4072]	; 18e70 <__assert_fail@plt+0x7b90>
   17e84:	ldr	r1, [fp, #8]
   17e88:	sdiv	r0, r0, r1
   17e8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e90:	cmp	r0, r1
   17e94:	blt	17f2c <__assert_fail@plt+0x6c4c>
   17e98:	b	17f40 <__assert_fail@plt+0x6c60>
   17e9c:	ldr	r0, [fp, #8]
   17ea0:	cmp	r0, #0
   17ea4:	bne	17eac <__assert_fail@plt+0x6bcc>
   17ea8:	b	17f40 <__assert_fail@plt+0x6c60>
   17eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eb0:	cmp	r0, #0
   17eb4:	bge	17f14 <__assert_fail@plt+0x6c34>
   17eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ebc:	cmn	r0, #1
   17ec0:	bne	17ef8 <__assert_fail@plt+0x6c18>
   17ec4:	b	17ec8 <__assert_fail@plt+0x6be8>
   17ec8:	ldr	r0, [fp, #8]
   17ecc:	add	r0, r0, #-2147483648	; 0x80000000
   17ed0:	movw	r1, #0
   17ed4:	cmp	r1, r0
   17ed8:	blt	17f2c <__assert_fail@plt+0x6c4c>
   17edc:	b	17f40 <__assert_fail@plt+0x6c60>
   17ee0:	ldr	r0, [pc, #1684]	; 1857c <__assert_fail@plt+0x729c>
   17ee4:	ldr	r1, [fp, #8]
   17ee8:	sub	r1, r1, #1
   17eec:	cmp	r0, r1
   17ef0:	blt	17f2c <__assert_fail@plt+0x6c4c>
   17ef4:	b	17f40 <__assert_fail@plt+0x6c60>
   17ef8:	ldr	r0, [pc, #3952]	; 18e70 <__assert_fail@plt+0x7b90>
   17efc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f00:	sdiv	r0, r0, r1
   17f04:	ldr	r1, [fp, #8]
   17f08:	cmp	r0, r1
   17f0c:	blt	17f2c <__assert_fail@plt+0x6c4c>
   17f10:	b	17f40 <__assert_fail@plt+0x6c60>
   17f14:	ldr	r0, [pc, #1632]	; 1857c <__assert_fail@plt+0x729c>
   17f18:	ldr	r1, [fp, #8]
   17f1c:	sdiv	r0, r0, r1
   17f20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f24:	cmp	r0, r1
   17f28:	bge	17f40 <__assert_fail@plt+0x6c60>
   17f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f30:	ldr	r1, [fp, #8]
   17f34:	mul	r0, r0, r1
   17f38:	str	r0, [fp, #-28]	; 0xffffffe4
   17f3c:	b	189c8 <__assert_fail@plt+0x76e8>
   17f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f44:	ldr	r1, [fp, #8]
   17f48:	mul	r0, r0, r1
   17f4c:	str	r0, [fp, #-28]	; 0xffffffe4
   17f50:	b	189d8 <__assert_fail@plt+0x76f8>
   17f54:	ldr	r0, [fp, #8]
   17f58:	cmp	r0, #0
   17f5c:	bge	1806c <__assert_fail@plt+0x6d8c>
   17f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f64:	cmp	r0, #0
   17f68:	bge	17ff4 <__assert_fail@plt+0x6d14>
   17f6c:	b	17f8c <__assert_fail@plt+0x6cac>
   17f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f74:	ldr	r1, [fp, #8]
   17f78:	mvn	r2, #0
   17f7c:	udiv	r1, r2, r1
   17f80:	cmp	r0, r1
   17f84:	bcc	18108 <__assert_fail@plt+0x6e28>
   17f88:	b	1811c <__assert_fail@plt+0x6e3c>
   17f8c:	b	17f90 <__assert_fail@plt+0x6cb0>
   17f90:	ldr	r0, [pc, #1656]	; 18610 <__assert_fail@plt+0x7330>
   17f94:	ldr	r1, [fp, #8]
   17f98:	cmp	r1, r0
   17f9c:	blt	17fb4 <__assert_fail@plt+0x6cd4>
   17fa0:	b	17fc0 <__assert_fail@plt+0x6ce0>
   17fa4:	ldr	r0, [fp, #8]
   17fa8:	movw	r1, #0
   17fac:	cmp	r1, r0
   17fb0:	bge	17fc0 <__assert_fail@plt+0x6ce0>
   17fb4:	movw	r0, #1
   17fb8:	str	r0, [fp, #-60]	; 0xffffffc4
   17fbc:	b	17fd8 <__assert_fail@plt+0x6cf8>
   17fc0:	ldr	r0, [fp, #8]
   17fc4:	movw	r1, #0
   17fc8:	sub	r0, r1, r0
   17fcc:	mvn	r1, #0
   17fd0:	udiv	r0, r1, r0
   17fd4:	str	r0, [fp, #-60]	; 0xffffffc4
   17fd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fe0:	mvn	r2, #0
   17fe4:	sub	r1, r2, r1
   17fe8:	cmp	r0, r1
   17fec:	bls	18108 <__assert_fail@plt+0x6e28>
   17ff0:	b	1811c <__assert_fail@plt+0x6e3c>
   17ff4:	b	17ff8 <__assert_fail@plt+0x6d18>
   17ff8:	b	18050 <__assert_fail@plt+0x6d70>
   17ffc:	b	18050 <__assert_fail@plt+0x6d70>
   18000:	ldr	r0, [fp, #8]
   18004:	cmn	r0, #1
   18008:	bne	18050 <__assert_fail@plt+0x6d70>
   1800c:	b	18010 <__assert_fail@plt+0x6d30>
   18010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18014:	add	r0, r0, #0
   18018:	movw	r1, #0
   1801c:	cmp	r1, r0
   18020:	blt	18108 <__assert_fail@plt+0x6e28>
   18024:	b	1811c <__assert_fail@plt+0x6e3c>
   18028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1802c:	movw	r1, #0
   18030:	cmp	r1, r0
   18034:	bge	1811c <__assert_fail@plt+0x6e3c>
   18038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1803c:	sub	r0, r0, #1
   18040:	mvn	r1, #0
   18044:	cmp	r1, r0
   18048:	blt	18108 <__assert_fail@plt+0x6e28>
   1804c:	b	1811c <__assert_fail@plt+0x6e3c>
   18050:	ldr	r0, [fp, #8]
   18054:	movw	r1, #0
   18058:	sdiv	r0, r1, r0
   1805c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18060:	cmp	r0, r1
   18064:	blt	18108 <__assert_fail@plt+0x6e28>
   18068:	b	1811c <__assert_fail@plt+0x6e3c>
   1806c:	ldr	r0, [fp, #8]
   18070:	cmp	r0, #0
   18074:	bne	1807c <__assert_fail@plt+0x6d9c>
   18078:	b	1811c <__assert_fail@plt+0x6e3c>
   1807c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18080:	cmp	r0, #0
   18084:	bge	180f0 <__assert_fail@plt+0x6e10>
   18088:	b	1808c <__assert_fail@plt+0x6dac>
   1808c:	b	180d4 <__assert_fail@plt+0x6df4>
   18090:	b	180d4 <__assert_fail@plt+0x6df4>
   18094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18098:	cmn	r0, #1
   1809c:	bne	180d4 <__assert_fail@plt+0x6df4>
   180a0:	b	180a4 <__assert_fail@plt+0x6dc4>
   180a4:	ldr	r0, [fp, #8]
   180a8:	add	r0, r0, #0
   180ac:	movw	r1, #0
   180b0:	cmp	r1, r0
   180b4:	blt	18108 <__assert_fail@plt+0x6e28>
   180b8:	b	1811c <__assert_fail@plt+0x6e3c>
   180bc:	ldr	r0, [fp, #8]
   180c0:	sub	r0, r0, #1
   180c4:	mvn	r1, #0
   180c8:	cmp	r1, r0
   180cc:	blt	18108 <__assert_fail@plt+0x6e28>
   180d0:	b	1811c <__assert_fail@plt+0x6e3c>
   180d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d8:	movw	r1, #0
   180dc:	sdiv	r0, r1, r0
   180e0:	ldr	r1, [fp, #8]
   180e4:	cmp	r0, r1
   180e8:	blt	18108 <__assert_fail@plt+0x6e28>
   180ec:	b	1811c <__assert_fail@plt+0x6e3c>
   180f0:	ldr	r0, [fp, #8]
   180f4:	mvn	r1, #0
   180f8:	udiv	r0, r1, r0
   180fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18100:	cmp	r0, r1
   18104:	bcs	1811c <__assert_fail@plt+0x6e3c>
   18108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1810c:	ldr	r1, [fp, #8]
   18110:	mul	r0, r0, r1
   18114:	str	r0, [fp, #-28]	; 0xffffffe4
   18118:	b	189c8 <__assert_fail@plt+0x76e8>
   1811c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18120:	ldr	r1, [fp, #8]
   18124:	mul	r0, r0, r1
   18128:	str	r0, [fp, #-28]	; 0xffffffe4
   1812c:	b	189d8 <__assert_fail@plt+0x76f8>
   18130:	b	18134 <__assert_fail@plt+0x6e54>
   18134:	b	18138 <__assert_fail@plt+0x6e58>
   18138:	ldr	r0, [fp, #8]
   1813c:	cmp	r0, #0
   18140:	bge	18244 <__assert_fail@plt+0x6f64>
   18144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18148:	cmp	r0, #0
   1814c:	bge	181d8 <__assert_fail@plt+0x6ef8>
   18150:	b	18154 <__assert_fail@plt+0x6e74>
   18154:	ldr	r0, [pc, #1056]	; 1857c <__assert_fail@plt+0x729c>
   18158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1815c:	ldr	r2, [fp, #8]
   18160:	sdiv	r0, r0, r2
   18164:	cmp	r1, r0
   18168:	blt	182d4 <__assert_fail@plt+0x6ff4>
   1816c:	b	182e8 <__assert_fail@plt+0x7008>
   18170:	b	18174 <__assert_fail@plt+0x6e94>
   18174:	ldr	r0, [pc, #1172]	; 18610 <__assert_fail@plt+0x7330>
   18178:	ldr	r1, [fp, #8]
   1817c:	cmp	r1, r0
   18180:	blt	18198 <__assert_fail@plt+0x6eb8>
   18184:	b	181a4 <__assert_fail@plt+0x6ec4>
   18188:	ldr	r0, [fp, #8]
   1818c:	movw	r1, #0
   18190:	cmp	r1, r0
   18194:	bge	181a4 <__assert_fail@plt+0x6ec4>
   18198:	movw	r0, #0
   1819c:	str	r0, [fp, #-64]	; 0xffffffc0
   181a0:	b	181bc <__assert_fail@plt+0x6edc>
   181a4:	ldr	r0, [pc, #976]	; 1857c <__assert_fail@plt+0x729c>
   181a8:	ldr	r1, [fp, #8]
   181ac:	movw	r2, #0
   181b0:	sub	r1, r2, r1
   181b4:	sdiv	r0, r0, r1
   181b8:	str	r0, [fp, #-64]	; 0xffffffc0
   181bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   181c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181c4:	mvn	r2, #0
   181c8:	sub	r1, r2, r1
   181cc:	cmp	r0, r1
   181d0:	ble	182d4 <__assert_fail@plt+0x6ff4>
   181d4:	b	182e8 <__assert_fail@plt+0x7008>
   181d8:	ldr	r0, [fp, #8]
   181dc:	cmn	r0, #1
   181e0:	bne	18228 <__assert_fail@plt+0x6f48>
   181e4:	b	181e8 <__assert_fail@plt+0x6f08>
   181e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181ec:	add	r0, r0, #-2147483648	; 0x80000000
   181f0:	movw	r1, #0
   181f4:	cmp	r1, r0
   181f8:	blt	182d4 <__assert_fail@plt+0x6ff4>
   181fc:	b	182e8 <__assert_fail@plt+0x7008>
   18200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18204:	movw	r1, #0
   18208:	cmp	r1, r0
   1820c:	bge	182e8 <__assert_fail@plt+0x7008>
   18210:	ldr	r0, [pc, #868]	; 1857c <__assert_fail@plt+0x729c>
   18214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18218:	sub	r1, r1, #1
   1821c:	cmp	r0, r1
   18220:	blt	182d4 <__assert_fail@plt+0x6ff4>
   18224:	b	182e8 <__assert_fail@plt+0x7008>
   18228:	ldr	r0, [pc, #3136]	; 18e70 <__assert_fail@plt+0x7b90>
   1822c:	ldr	r1, [fp, #8]
   18230:	sdiv	r0, r0, r1
   18234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18238:	cmp	r0, r1
   1823c:	blt	182d4 <__assert_fail@plt+0x6ff4>
   18240:	b	182e8 <__assert_fail@plt+0x7008>
   18244:	ldr	r0, [fp, #8]
   18248:	cmp	r0, #0
   1824c:	bne	18254 <__assert_fail@plt+0x6f74>
   18250:	b	182e8 <__assert_fail@plt+0x7008>
   18254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18258:	cmp	r0, #0
   1825c:	bge	182bc <__assert_fail@plt+0x6fdc>
   18260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18264:	cmn	r0, #1
   18268:	bne	182a0 <__assert_fail@plt+0x6fc0>
   1826c:	b	18270 <__assert_fail@plt+0x6f90>
   18270:	ldr	r0, [fp, #8]
   18274:	add	r0, r0, #-2147483648	; 0x80000000
   18278:	movw	r1, #0
   1827c:	cmp	r1, r0
   18280:	blt	182d4 <__assert_fail@plt+0x6ff4>
   18284:	b	182e8 <__assert_fail@plt+0x7008>
   18288:	ldr	r0, [pc, #748]	; 1857c <__assert_fail@plt+0x729c>
   1828c:	ldr	r1, [fp, #8]
   18290:	sub	r1, r1, #1
   18294:	cmp	r0, r1
   18298:	blt	182d4 <__assert_fail@plt+0x6ff4>
   1829c:	b	182e8 <__assert_fail@plt+0x7008>
   182a0:	ldr	r0, [pc, #3016]	; 18e70 <__assert_fail@plt+0x7b90>
   182a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182a8:	sdiv	r0, r0, r1
   182ac:	ldr	r1, [fp, #8]
   182b0:	cmp	r0, r1
   182b4:	blt	182d4 <__assert_fail@plt+0x6ff4>
   182b8:	b	182e8 <__assert_fail@plt+0x7008>
   182bc:	ldr	r0, [pc, #696]	; 1857c <__assert_fail@plt+0x729c>
   182c0:	ldr	r1, [fp, #8]
   182c4:	sdiv	r0, r0, r1
   182c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182cc:	cmp	r0, r1
   182d0:	bge	182e8 <__assert_fail@plt+0x7008>
   182d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d8:	ldr	r1, [fp, #8]
   182dc:	mul	r0, r0, r1
   182e0:	str	r0, [fp, #-28]	; 0xffffffe4
   182e4:	b	189c8 <__assert_fail@plt+0x76e8>
   182e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182ec:	ldr	r1, [fp, #8]
   182f0:	mul	r0, r0, r1
   182f4:	str	r0, [fp, #-28]	; 0xffffffe4
   182f8:	b	189d8 <__assert_fail@plt+0x76f8>
   182fc:	ldr	r0, [fp, #8]
   18300:	cmp	r0, #0
   18304:	bge	18414 <__assert_fail@plt+0x7134>
   18308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1830c:	cmp	r0, #0
   18310:	bge	1839c <__assert_fail@plt+0x70bc>
   18314:	b	18334 <__assert_fail@plt+0x7054>
   18318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1831c:	ldr	r1, [fp, #8]
   18320:	mvn	r2, #0
   18324:	udiv	r1, r2, r1
   18328:	cmp	r0, r1
   1832c:	bcc	184b0 <__assert_fail@plt+0x71d0>
   18330:	b	184c4 <__assert_fail@plt+0x71e4>
   18334:	b	18338 <__assert_fail@plt+0x7058>
   18338:	ldr	r0, [pc, #720]	; 18610 <__assert_fail@plt+0x7330>
   1833c:	ldr	r1, [fp, #8]
   18340:	cmp	r1, r0
   18344:	blt	1835c <__assert_fail@plt+0x707c>
   18348:	b	18368 <__assert_fail@plt+0x7088>
   1834c:	ldr	r0, [fp, #8]
   18350:	movw	r1, #0
   18354:	cmp	r1, r0
   18358:	bge	18368 <__assert_fail@plt+0x7088>
   1835c:	movw	r0, #1
   18360:	str	r0, [fp, #-68]	; 0xffffffbc
   18364:	b	18380 <__assert_fail@plt+0x70a0>
   18368:	ldr	r0, [fp, #8]
   1836c:	movw	r1, #0
   18370:	sub	r0, r1, r0
   18374:	mvn	r1, #0
   18378:	udiv	r0, r1, r0
   1837c:	str	r0, [fp, #-68]	; 0xffffffbc
   18380:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18388:	mvn	r2, #0
   1838c:	sub	r1, r2, r1
   18390:	cmp	r0, r1
   18394:	bls	184b0 <__assert_fail@plt+0x71d0>
   18398:	b	184c4 <__assert_fail@plt+0x71e4>
   1839c:	b	183a0 <__assert_fail@plt+0x70c0>
   183a0:	b	183f8 <__assert_fail@plt+0x7118>
   183a4:	b	183f8 <__assert_fail@plt+0x7118>
   183a8:	ldr	r0, [fp, #8]
   183ac:	cmn	r0, #1
   183b0:	bne	183f8 <__assert_fail@plt+0x7118>
   183b4:	b	183b8 <__assert_fail@plt+0x70d8>
   183b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183bc:	add	r0, r0, #0
   183c0:	movw	r1, #0
   183c4:	cmp	r1, r0
   183c8:	blt	184b0 <__assert_fail@plt+0x71d0>
   183cc:	b	184c4 <__assert_fail@plt+0x71e4>
   183d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d4:	movw	r1, #0
   183d8:	cmp	r1, r0
   183dc:	bge	184c4 <__assert_fail@plt+0x71e4>
   183e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e4:	sub	r0, r0, #1
   183e8:	mvn	r1, #0
   183ec:	cmp	r1, r0
   183f0:	blt	184b0 <__assert_fail@plt+0x71d0>
   183f4:	b	184c4 <__assert_fail@plt+0x71e4>
   183f8:	ldr	r0, [fp, #8]
   183fc:	movw	r1, #0
   18400:	sdiv	r0, r1, r0
   18404:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18408:	cmp	r0, r1
   1840c:	blt	184b0 <__assert_fail@plt+0x71d0>
   18410:	b	184c4 <__assert_fail@plt+0x71e4>
   18414:	ldr	r0, [fp, #8]
   18418:	cmp	r0, #0
   1841c:	bne	18424 <__assert_fail@plt+0x7144>
   18420:	b	184c4 <__assert_fail@plt+0x71e4>
   18424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18428:	cmp	r0, #0
   1842c:	bge	18498 <__assert_fail@plt+0x71b8>
   18430:	b	18434 <__assert_fail@plt+0x7154>
   18434:	b	1847c <__assert_fail@plt+0x719c>
   18438:	b	1847c <__assert_fail@plt+0x719c>
   1843c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18440:	cmn	r0, #1
   18444:	bne	1847c <__assert_fail@plt+0x719c>
   18448:	b	1844c <__assert_fail@plt+0x716c>
   1844c:	ldr	r0, [fp, #8]
   18450:	add	r0, r0, #0
   18454:	movw	r1, #0
   18458:	cmp	r1, r0
   1845c:	blt	184b0 <__assert_fail@plt+0x71d0>
   18460:	b	184c4 <__assert_fail@plt+0x71e4>
   18464:	ldr	r0, [fp, #8]
   18468:	sub	r0, r0, #1
   1846c:	mvn	r1, #0
   18470:	cmp	r1, r0
   18474:	blt	184b0 <__assert_fail@plt+0x71d0>
   18478:	b	184c4 <__assert_fail@plt+0x71e4>
   1847c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18480:	movw	r1, #0
   18484:	sdiv	r0, r1, r0
   18488:	ldr	r1, [fp, #8]
   1848c:	cmp	r0, r1
   18490:	blt	184b0 <__assert_fail@plt+0x71d0>
   18494:	b	184c4 <__assert_fail@plt+0x71e4>
   18498:	ldr	r0, [fp, #8]
   1849c:	mvn	r1, #0
   184a0:	udiv	r0, r1, r0
   184a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184a8:	cmp	r0, r1
   184ac:	bcs	184c4 <__assert_fail@plt+0x71e4>
   184b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b4:	ldr	r1, [fp, #8]
   184b8:	mul	r0, r0, r1
   184bc:	str	r0, [fp, #-28]	; 0xffffffe4
   184c0:	b	189c8 <__assert_fail@plt+0x76e8>
   184c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c8:	ldr	r1, [fp, #8]
   184cc:	mul	r0, r0, r1
   184d0:	str	r0, [fp, #-28]	; 0xffffffe4
   184d4:	b	189d8 <__assert_fail@plt+0x76f8>
   184d8:	b	184dc <__assert_fail@plt+0x71fc>
   184dc:	ldr	r0, [fp, #8]
   184e0:	cmp	r0, #0
   184e4:	bge	18674 <__assert_fail@plt+0x7394>
   184e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184ec:	cmp	r0, #0
   184f0:	bge	185dc <__assert_fail@plt+0x72fc>
   184f4:	b	184f8 <__assert_fail@plt+0x7218>
   184f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184fc:	ldr	r1, [fp, #8]
   18500:	asr	r3, r1, #31
   18504:	mvn	r2, #0
   18508:	mvn	ip, #-2147483648	; 0x80000000
   1850c:	str	r0, [fp, #-72]	; 0xffffffb8
   18510:	mov	r0, r2
   18514:	str	r1, [fp, #-76]	; 0xffffffb4
   18518:	mov	r1, ip
   1851c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18520:	bl	1c650 <__assert_fail@plt+0xb370>
   18524:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18528:	subs	r0, r2, r0
   1852c:	rscs	r1, r1, r2, asr #31
   18530:	str	r0, [fp, #-80]	; 0xffffffb0
   18534:	str	r1, [fp, #-84]	; 0xffffffac
   18538:	blt	18754 <__assert_fail@plt+0x7474>
   1853c:	b	18768 <__assert_fail@plt+0x7488>
   18540:	b	18544 <__assert_fail@plt+0x7264>
   18544:	ldr	r0, [pc, #196]	; 18610 <__assert_fail@plt+0x7330>
   18548:	ldr	r1, [fp, #8]
   1854c:	cmp	r1, r0
   18550:	blt	18568 <__assert_fail@plt+0x7288>
   18554:	b	18580 <__assert_fail@plt+0x72a0>
   18558:	ldr	r0, [fp, #8]
   1855c:	movw	r1, #0
   18560:	cmp	r1, r0
   18564:	bge	18580 <__assert_fail@plt+0x72a0>
   18568:	mov	r0, #0
   1856c:	mvn	r1, #0
   18570:	str	r1, [fp, #-88]	; 0xffffffa8
   18574:	str	r0, [fp, #-92]	; 0xffffffa4
   18578:	b	185b4 <__assert_fail@plt+0x72d4>
   1857c:	svcvc	0x00ffffff
   18580:	ldr	r0, [fp, #8]
   18584:	rsb	r0, r0, #0
   18588:	asr	r3, r0, #31
   1858c:	mvn	r1, #0
   18590:	mvn	r2, #-2147483648	; 0x80000000
   18594:	str	r0, [fp, #-96]	; 0xffffffa0
   18598:	mov	r0, r1
   1859c:	mov	r1, r2
   185a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   185a4:	bl	1c650 <__assert_fail@plt+0xb370>
   185a8:	str	r0, [fp, #-88]	; 0xffffffa8
   185ac:	str	r1, [fp, #-92]	; 0xffffffa4
   185b0:	b	185b4 <__assert_fail@plt+0x72d4>
   185b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   185b8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   185bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185c0:	mvn	r2, r2
   185c4:	subs	r1, r2, r1
   185c8:	rscs	r0, r0, r2, asr #31
   185cc:	str	r1, [fp, #-100]	; 0xffffff9c
   185d0:	str	r0, [fp, #-104]	; 0xffffff98
   185d4:	bge	18754 <__assert_fail@plt+0x7474>
   185d8:	b	18768 <__assert_fail@plt+0x7488>
   185dc:	ldr	r0, [fp, #8]
   185e0:	cmn	r0, #1
   185e4:	bne	18634 <__assert_fail@plt+0x7354>
   185e8:	b	185ec <__assert_fail@plt+0x730c>
   185ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185f0:	mov	r1, #-2147483648	; 0x80000000
   185f4:	add	r1, r1, r0, asr #31
   185f8:	rsbs	r0, r0, #0
   185fc:	rscs	r1, r1, #0
   18600:	str	r0, [fp, #-108]	; 0xffffff94
   18604:	str	r1, [fp, #-112]	; 0xffffff90
   18608:	blt	18754 <__assert_fail@plt+0x7474>
   1860c:	b	18768 <__assert_fail@plt+0x7488>
   18610:	andhi	r0, r0, r1
   18614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18618:	movw	r1, #0
   1861c:	cmp	r1, r0
   18620:	bge	18768 <__assert_fail@plt+0x7488>
   18624:	mov	r0, #0
   18628:	cmp	r0, #0
   1862c:	bne	18754 <__assert_fail@plt+0x7474>
   18630:	b	18768 <__assert_fail@plt+0x7488>
   18634:	ldr	r0, [fp, #8]
   18638:	asr	r3, r0, #31
   1863c:	mov	r1, #0
   18640:	mov	r2, #-2147483648	; 0x80000000
   18644:	str	r0, [fp, #-116]	; 0xffffff8c
   18648:	mov	r0, r1
   1864c:	mov	r1, r2
   18650:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18654:	bl	1c650 <__assert_fail@plt+0xb370>
   18658:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1865c:	subs	r0, r0, r2
   18660:	sbcs	r1, r1, r2, asr #31
   18664:	str	r0, [fp, #-120]	; 0xffffff88
   18668:	str	r1, [fp, #-124]	; 0xffffff84
   1866c:	blt	18754 <__assert_fail@plt+0x7474>
   18670:	b	18768 <__assert_fail@plt+0x7488>
   18674:	ldr	r0, [fp, #8]
   18678:	cmp	r0, #0
   1867c:	bne	18684 <__assert_fail@plt+0x73a4>
   18680:	b	18768 <__assert_fail@plt+0x7488>
   18684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18688:	cmp	r0, #0
   1868c:	bge	18714 <__assert_fail@plt+0x7434>
   18690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18694:	cmn	r0, #1
   18698:	bne	186d4 <__assert_fail@plt+0x73f4>
   1869c:	b	186a0 <__assert_fail@plt+0x73c0>
   186a0:	ldr	r0, [fp, #8]
   186a4:	mov	r1, #-2147483648	; 0x80000000
   186a8:	add	r1, r1, r0, asr #31
   186ac:	rsbs	r0, r0, #0
   186b0:	rscs	r1, r1, #0
   186b4:	str	r0, [fp, #-128]	; 0xffffff80
   186b8:	str	r1, [fp, #-132]	; 0xffffff7c
   186bc:	blt	18754 <__assert_fail@plt+0x7474>
   186c0:	b	18768 <__assert_fail@plt+0x7488>
   186c4:	mov	r0, #0
   186c8:	cmp	r0, #0
   186cc:	bne	18754 <__assert_fail@plt+0x7474>
   186d0:	b	18768 <__assert_fail@plt+0x7488>
   186d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186d8:	asr	r3, r0, #31
   186dc:	mov	r1, #0
   186e0:	mov	r2, #-2147483648	; 0x80000000
   186e4:	str	r0, [fp, #-136]	; 0xffffff78
   186e8:	mov	r0, r1
   186ec:	mov	r1, r2
   186f0:	ldr	r2, [fp, #-136]	; 0xffffff78
   186f4:	bl	1c650 <__assert_fail@plt+0xb370>
   186f8:	ldr	r2, [fp, #8]
   186fc:	subs	r0, r0, r2
   18700:	sbcs	r1, r1, r2, asr #31
   18704:	str	r0, [fp, #-140]	; 0xffffff74
   18708:	str	r1, [fp, #-144]	; 0xffffff70
   1870c:	blt	18754 <__assert_fail@plt+0x7474>
   18710:	b	18768 <__assert_fail@plt+0x7488>
   18714:	ldr	r0, [fp, #8]
   18718:	asr	r3, r0, #31
   1871c:	mvn	r1, #0
   18720:	mvn	r2, #-2147483648	; 0x80000000
   18724:	str	r0, [fp, #-148]	; 0xffffff6c
   18728:	mov	r0, r1
   1872c:	mov	r1, r2
   18730:	ldr	r2, [fp, #-148]	; 0xffffff6c
   18734:	bl	1c650 <__assert_fail@plt+0xb370>
   18738:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1873c:	subs	r0, r0, r2
   18740:	sbcs	r1, r1, r2, asr #31
   18744:	str	r0, [fp, #-152]	; 0xffffff68
   18748:	str	r1, [fp, #-156]	; 0xffffff64
   1874c:	bge	18768 <__assert_fail@plt+0x7488>
   18750:	b	18754 <__assert_fail@plt+0x7474>
   18754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18758:	ldr	r1, [fp, #8]
   1875c:	mul	r0, r0, r1
   18760:	str	r0, [fp, #-28]	; 0xffffffe4
   18764:	b	189c8 <__assert_fail@plt+0x76e8>
   18768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1876c:	ldr	r1, [fp, #8]
   18770:	mul	r0, r0, r1
   18774:	str	r0, [fp, #-28]	; 0xffffffe4
   18778:	b	189d8 <__assert_fail@plt+0x76f8>
   1877c:	ldr	r0, [fp, #8]
   18780:	cmp	r0, #0
   18784:	bge	188e4 <__assert_fail@plt+0x7604>
   18788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1878c:	cmp	r0, #0
   18790:	bge	1886c <__assert_fail@plt+0x758c>
   18794:	b	187dc <__assert_fail@plt+0x74fc>
   18798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1879c:	ldr	r1, [fp, #8]
   187a0:	asr	r3, r1, #31
   187a4:	mvn	r2, #0
   187a8:	str	r0, [fp, #-160]	; 0xffffff60
   187ac:	mov	r0, r2
   187b0:	str	r1, [fp, #-164]	; 0xffffff5c
   187b4:	mov	r1, r2
   187b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   187bc:	bl	1c724 <__assert_fail@plt+0xb444>
   187c0:	ldr	r2, [fp, #-160]	; 0xffffff60
   187c4:	subs	r0, r2, r0
   187c8:	rscs	r1, r1, r2, asr #31
   187cc:	str	r0, [fp, #-168]	; 0xffffff58
   187d0:	str	r1, [fp, #-172]	; 0xffffff54
   187d4:	bcc	189a0 <__assert_fail@plt+0x76c0>
   187d8:	b	189b4 <__assert_fail@plt+0x76d4>
   187dc:	b	187e0 <__assert_fail@plt+0x7500>
   187e0:	ldr	r0, [pc, #-472]	; 18610 <__assert_fail@plt+0x7330>
   187e4:	ldr	r1, [fp, #8]
   187e8:	cmp	r1, r0
   187ec:	blt	18804 <__assert_fail@plt+0x7524>
   187f0:	b	18818 <__assert_fail@plt+0x7538>
   187f4:	ldr	r0, [fp, #8]
   187f8:	movw	r1, #0
   187fc:	cmp	r1, r0
   18800:	bge	18818 <__assert_fail@plt+0x7538>
   18804:	mov	r0, #1
   18808:	mvn	r1, #0
   1880c:	str	r1, [fp, #-176]	; 0xffffff50
   18810:	str	r0, [fp, #-180]	; 0xffffff4c
   18814:	b	18844 <__assert_fail@plt+0x7564>
   18818:	ldr	r0, [fp, #8]
   1881c:	rsb	r0, r0, #0
   18820:	asr	r3, r0, #31
   18824:	mvn	r1, #0
   18828:	str	r0, [fp, #-184]	; 0xffffff48
   1882c:	mov	r0, r1
   18830:	ldr	r2, [fp, #-184]	; 0xffffff48
   18834:	bl	1c724 <__assert_fail@plt+0xb444>
   18838:	str	r0, [fp, #-176]	; 0xffffff50
   1883c:	str	r1, [fp, #-180]	; 0xffffff4c
   18840:	b	18844 <__assert_fail@plt+0x7564>
   18844:	ldr	r0, [fp, #-180]	; 0xffffff4c
   18848:	ldr	r1, [fp, #-176]	; 0xffffff50
   1884c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18850:	mvn	r2, r2
   18854:	subs	r1, r2, r1
   18858:	rscs	r0, r0, r2, asr #31
   1885c:	str	r1, [sp, #188]	; 0xbc
   18860:	str	r0, [sp, #184]	; 0xb8
   18864:	bcs	189a0 <__assert_fail@plt+0x76c0>
   18868:	b	189b4 <__assert_fail@plt+0x76d4>
   1886c:	b	18870 <__assert_fail@plt+0x7590>
   18870:	b	188c8 <__assert_fail@plt+0x75e8>
   18874:	b	188c8 <__assert_fail@plt+0x75e8>
   18878:	ldr	r0, [fp, #8]
   1887c:	cmn	r0, #1
   18880:	bne	188c8 <__assert_fail@plt+0x75e8>
   18884:	b	18888 <__assert_fail@plt+0x75a8>
   18888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1888c:	add	r0, r0, #0
   18890:	movw	r1, #0
   18894:	cmp	r1, r0
   18898:	blt	189a0 <__assert_fail@plt+0x76c0>
   1889c:	b	189b4 <__assert_fail@plt+0x76d4>
   188a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188a4:	movw	r1, #0
   188a8:	cmp	r1, r0
   188ac:	bge	189b4 <__assert_fail@plt+0x76d4>
   188b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188b4:	sub	r0, r0, #1
   188b8:	mvn	r1, #0
   188bc:	cmp	r1, r0
   188c0:	blt	189a0 <__assert_fail@plt+0x76c0>
   188c4:	b	189b4 <__assert_fail@plt+0x76d4>
   188c8:	ldr	r0, [fp, #8]
   188cc:	movw	r1, #0
   188d0:	sdiv	r0, r1, r0
   188d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188d8:	cmp	r0, r1
   188dc:	blt	189a0 <__assert_fail@plt+0x76c0>
   188e0:	b	189b4 <__assert_fail@plt+0x76d4>
   188e4:	ldr	r0, [fp, #8]
   188e8:	cmp	r0, #0
   188ec:	bne	188f4 <__assert_fail@plt+0x7614>
   188f0:	b	189b4 <__assert_fail@plt+0x76d4>
   188f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188f8:	cmp	r0, #0
   188fc:	bge	18968 <__assert_fail@plt+0x7688>
   18900:	b	18904 <__assert_fail@plt+0x7624>
   18904:	b	1894c <__assert_fail@plt+0x766c>
   18908:	b	1894c <__assert_fail@plt+0x766c>
   1890c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18910:	cmn	r0, #1
   18914:	bne	1894c <__assert_fail@plt+0x766c>
   18918:	b	1891c <__assert_fail@plt+0x763c>
   1891c:	ldr	r0, [fp, #8]
   18920:	add	r0, r0, #0
   18924:	movw	r1, #0
   18928:	cmp	r1, r0
   1892c:	blt	189a0 <__assert_fail@plt+0x76c0>
   18930:	b	189b4 <__assert_fail@plt+0x76d4>
   18934:	ldr	r0, [fp, #8]
   18938:	sub	r0, r0, #1
   1893c:	mvn	r1, #0
   18940:	cmp	r1, r0
   18944:	blt	189a0 <__assert_fail@plt+0x76c0>
   18948:	b	189b4 <__assert_fail@plt+0x76d4>
   1894c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18950:	movw	r1, #0
   18954:	sdiv	r0, r1, r0
   18958:	ldr	r1, [fp, #8]
   1895c:	cmp	r0, r1
   18960:	blt	189a0 <__assert_fail@plt+0x76c0>
   18964:	b	189b4 <__assert_fail@plt+0x76d4>
   18968:	ldr	r0, [fp, #8]
   1896c:	asr	r3, r0, #31
   18970:	mvn	r1, #0
   18974:	str	r0, [sp, #180]	; 0xb4
   18978:	mov	r0, r1
   1897c:	ldr	r2, [sp, #180]	; 0xb4
   18980:	bl	1c724 <__assert_fail@plt+0xb444>
   18984:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18988:	subs	r0, r0, r2
   1898c:	sbcs	r1, r1, r2, asr #31
   18990:	str	r0, [sp, #176]	; 0xb0
   18994:	str	r1, [sp, #172]	; 0xac
   18998:	bcs	189b4 <__assert_fail@plt+0x76d4>
   1899c:	b	189a0 <__assert_fail@plt+0x76c0>
   189a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a4:	ldr	r1, [fp, #8]
   189a8:	mul	r0, r0, r1
   189ac:	str	r0, [fp, #-28]	; 0xffffffe4
   189b0:	b	189c8 <__assert_fail@plt+0x76e8>
   189b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189b8:	ldr	r1, [fp, #8]
   189bc:	mul	r0, r0, r1
   189c0:	str	r0, [fp, #-28]	; 0xffffffe4
   189c4:	b	189d8 <__assert_fail@plt+0x76f8>
   189c8:	ldr	r0, [pc, #-1108]	; 1857c <__assert_fail@plt+0x729c>
   189cc:	str	r0, [sp, #168]	; 0xa8
   189d0:	b	189f8 <__assert_fail@plt+0x7718>
   189d4:			; <UNDEFINED> instruction: 0xffff8000
   189d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   189dc:	cmp	r0, #64	; 0x40
   189e0:	movw	r0, #0
   189e4:	movlt	r0, #1
   189e8:	tst	r0, #1
   189ec:	movw	r0, #64	; 0x40
   189f0:	moveq	r0, #0
   189f4:	str	r0, [sp, #168]	; 0xa8
   189f8:	ldr	r0, [sp, #168]	; 0xa8
   189fc:	str	r0, [fp, #-32]	; 0xffffffe0
   18a00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a04:	cmp	r0, #0
   18a08:	beq	18a38 <__assert_fail@plt+0x7758>
   18a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a10:	ldr	r1, [fp, #8]
   18a14:	sdiv	r0, r0, r1
   18a18:	str	r0, [fp, #-24]	; 0xffffffe8
   18a1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a20:	mov	r1, r0
   18a24:	ldr	r2, [fp, #8]
   18a28:	sdiv	r3, r0, r2
   18a2c:	mls	r0, r3, r2, r0
   18a30:	sub	r0, r1, r0
   18a34:	str	r0, [fp, #-28]	; 0xffffffe4
   18a38:	ldr	r0, [fp, #-4]
   18a3c:	movw	r1, #0
   18a40:	cmp	r0, r1
   18a44:	bne	18a54 <__assert_fail@plt+0x7774>
   18a48:	ldr	r0, [fp, #-8]
   18a4c:	movw	r1, #0
   18a50:	str	r1, [r0]
   18a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a58:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a5c:	sub	r0, r0, r1
   18a60:	ldr	r1, [fp, #-12]
   18a64:	cmp	r0, r1
   18a68:	bge	19ea0 <__assert_fail@plt+0x8bc0>
   18a6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18a70:	ldr	r1, [fp, #-12]
   18a74:	add	r1, r0, r1
   18a78:	mov	r2, #1
   18a7c:	cmp	r1, r0
   18a80:	movwvc	r2, #0
   18a84:	str	r1, [fp, #-24]	; 0xffffffe8
   18a88:	tst	r2, #1
   18a8c:	bne	19e9c <__assert_fail@plt+0x8bbc>
   18a90:	ldr	r0, [fp, #-16]
   18a94:	movw	r1, #0
   18a98:	cmp	r1, r0
   18a9c:	bgt	18ab0 <__assert_fail@plt+0x77d0>
   18aa0:	ldr	r0, [fp, #-16]
   18aa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18aa8:	cmp	r0, r1
   18aac:	blt	19e9c <__assert_fail@plt+0x8bbc>
   18ab0:	b	18e8c <__assert_fail@plt+0x7bac>
   18ab4:	b	18ab8 <__assert_fail@plt+0x77d8>
   18ab8:	ldr	r0, [fp, #8]
   18abc:	cmp	r0, #0
   18ac0:	bge	18bd4 <__assert_fail@plt+0x78f4>
   18ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac8:	cmp	r0, #0
   18acc:	bge	18b58 <__assert_fail@plt+0x7878>
   18ad0:	b	18ad4 <__assert_fail@plt+0x77f4>
   18ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad8:	ldr	r1, [fp, #8]
   18adc:	movw	r2, #127	; 0x7f
   18ae0:	sdiv	r1, r2, r1
   18ae4:	cmp	r0, r1
   18ae8:	blt	18c74 <__assert_fail@plt+0x7994>
   18aec:	b	18c8c <__assert_fail@plt+0x79ac>
   18af0:	b	18af4 <__assert_fail@plt+0x7814>
   18af4:	ldr	r0, [pc, #-1260]	; 18610 <__assert_fail@plt+0x7330>
   18af8:	ldr	r1, [fp, #8]
   18afc:	cmp	r1, r0
   18b00:	blt	18b18 <__assert_fail@plt+0x7838>
   18b04:	b	18b24 <__assert_fail@plt+0x7844>
   18b08:	ldr	r0, [fp, #8]
   18b0c:	movw	r1, #0
   18b10:	cmp	r1, r0
   18b14:	bge	18b24 <__assert_fail@plt+0x7844>
   18b18:	movw	r0, #0
   18b1c:	str	r0, [sp, #164]	; 0xa4
   18b20:	b	18b3c <__assert_fail@plt+0x785c>
   18b24:	ldr	r0, [fp, #8]
   18b28:	movw	r1, #0
   18b2c:	sub	r0, r1, r0
   18b30:	movw	r1, #127	; 0x7f
   18b34:	sdiv	r0, r1, r0
   18b38:	str	r0, [sp, #164]	; 0xa4
   18b3c:	ldr	r0, [sp, #164]	; 0xa4
   18b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b44:	mvn	r2, #0
   18b48:	sub	r1, r2, r1
   18b4c:	cmp	r0, r1
   18b50:	ble	18c74 <__assert_fail@plt+0x7994>
   18b54:	b	18c8c <__assert_fail@plt+0x79ac>
   18b58:	b	18b5c <__assert_fail@plt+0x787c>
   18b5c:	b	18bb8 <__assert_fail@plt+0x78d8>
   18b60:	b	18bb8 <__assert_fail@plt+0x78d8>
   18b64:	ldr	r0, [fp, #8]
   18b68:	cmn	r0, #1
   18b6c:	bne	18bb8 <__assert_fail@plt+0x78d8>
   18b70:	b	18b74 <__assert_fail@plt+0x7894>
   18b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b78:	mvn	r1, #127	; 0x7f
   18b7c:	add	r0, r0, r1
   18b80:	movw	r1, #0
   18b84:	cmp	r1, r0
   18b88:	blt	18c74 <__assert_fail@plt+0x7994>
   18b8c:	b	18c8c <__assert_fail@plt+0x79ac>
   18b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b94:	movw	r1, #0
   18b98:	cmp	r1, r0
   18b9c:	bge	18c8c <__assert_fail@plt+0x79ac>
   18ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ba4:	sub	r0, r0, #1
   18ba8:	movw	r1, #127	; 0x7f
   18bac:	cmp	r1, r0
   18bb0:	blt	18c74 <__assert_fail@plt+0x7994>
   18bb4:	b	18c8c <__assert_fail@plt+0x79ac>
   18bb8:	ldr	r0, [fp, #8]
   18bbc:	mvn	r1, #127	; 0x7f
   18bc0:	sdiv	r0, r1, r0
   18bc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bc8:	cmp	r0, r1
   18bcc:	blt	18c74 <__assert_fail@plt+0x7994>
   18bd0:	b	18c8c <__assert_fail@plt+0x79ac>
   18bd4:	ldr	r0, [fp, #8]
   18bd8:	cmp	r0, #0
   18bdc:	bne	18be4 <__assert_fail@plt+0x7904>
   18be0:	b	18c8c <__assert_fail@plt+0x79ac>
   18be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be8:	cmp	r0, #0
   18bec:	bge	18c5c <__assert_fail@plt+0x797c>
   18bf0:	b	18bf4 <__assert_fail@plt+0x7914>
   18bf4:	b	18c40 <__assert_fail@plt+0x7960>
   18bf8:	b	18c40 <__assert_fail@plt+0x7960>
   18bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c00:	cmn	r0, #1
   18c04:	bne	18c40 <__assert_fail@plt+0x7960>
   18c08:	b	18c0c <__assert_fail@plt+0x792c>
   18c0c:	ldr	r0, [fp, #8]
   18c10:	mvn	r1, #127	; 0x7f
   18c14:	add	r0, r0, r1
   18c18:	movw	r1, #0
   18c1c:	cmp	r1, r0
   18c20:	blt	18c74 <__assert_fail@plt+0x7994>
   18c24:	b	18c8c <__assert_fail@plt+0x79ac>
   18c28:	ldr	r0, [fp, #8]
   18c2c:	sub	r0, r0, #1
   18c30:	movw	r1, #127	; 0x7f
   18c34:	cmp	r1, r0
   18c38:	blt	18c74 <__assert_fail@plt+0x7994>
   18c3c:	b	18c8c <__assert_fail@plt+0x79ac>
   18c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c44:	mvn	r1, #127	; 0x7f
   18c48:	sdiv	r0, r1, r0
   18c4c:	ldr	r1, [fp, #8]
   18c50:	cmp	r0, r1
   18c54:	blt	18c74 <__assert_fail@plt+0x7994>
   18c58:	b	18c8c <__assert_fail@plt+0x79ac>
   18c5c:	ldr	r0, [fp, #8]
   18c60:	movw	r1, #127	; 0x7f
   18c64:	sdiv	r0, r1, r0
   18c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c6c:	cmp	r0, r1
   18c70:	bge	18c8c <__assert_fail@plt+0x79ac>
   18c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c78:	ldr	r1, [fp, #8]
   18c7c:	mul	r0, r0, r1
   18c80:	sxtb	r0, r0
   18c84:	str	r0, [fp, #-28]	; 0xffffffe4
   18c88:	b	19e9c <__assert_fail@plt+0x8bbc>
   18c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c90:	ldr	r1, [fp, #8]
   18c94:	mul	r0, r0, r1
   18c98:	sxtb	r0, r0
   18c9c:	str	r0, [fp, #-28]	; 0xffffffe4
   18ca0:	b	19ea0 <__assert_fail@plt+0x8bc0>
   18ca4:	ldr	r0, [fp, #8]
   18ca8:	cmp	r0, #0
   18cac:	bge	18dbc <__assert_fail@plt+0x7adc>
   18cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cb4:	cmp	r0, #0
   18cb8:	bge	18d44 <__assert_fail@plt+0x7a64>
   18cbc:	b	18cc0 <__assert_fail@plt+0x79e0>
   18cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc4:	ldr	r1, [fp, #8]
   18cc8:	movw	r2, #255	; 0xff
   18ccc:	sdiv	r1, r2, r1
   18cd0:	cmp	r0, r1
   18cd4:	blt	18e58 <__assert_fail@plt+0x7b78>
   18cd8:	b	18e74 <__assert_fail@plt+0x7b94>
   18cdc:	b	18ce0 <__assert_fail@plt+0x7a00>
   18ce0:	ldr	r0, [pc, #-1752]	; 18610 <__assert_fail@plt+0x7330>
   18ce4:	ldr	r1, [fp, #8]
   18ce8:	cmp	r1, r0
   18cec:	blt	18d04 <__assert_fail@plt+0x7a24>
   18cf0:	b	18d10 <__assert_fail@plt+0x7a30>
   18cf4:	ldr	r0, [fp, #8]
   18cf8:	movw	r1, #0
   18cfc:	cmp	r1, r0
   18d00:	bge	18d10 <__assert_fail@plt+0x7a30>
   18d04:	movw	r0, #0
   18d08:	str	r0, [sp, #160]	; 0xa0
   18d0c:	b	18d28 <__assert_fail@plt+0x7a48>
   18d10:	ldr	r0, [fp, #8]
   18d14:	movw	r1, #0
   18d18:	sub	r0, r1, r0
   18d1c:	movw	r1, #255	; 0xff
   18d20:	sdiv	r0, r1, r0
   18d24:	str	r0, [sp, #160]	; 0xa0
   18d28:	ldr	r0, [sp, #160]	; 0xa0
   18d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d30:	mvn	r2, #0
   18d34:	sub	r1, r2, r1
   18d38:	cmp	r0, r1
   18d3c:	ble	18e58 <__assert_fail@plt+0x7b78>
   18d40:	b	18e74 <__assert_fail@plt+0x7b94>
   18d44:	b	18d48 <__assert_fail@plt+0x7a68>
   18d48:	b	18da0 <__assert_fail@plt+0x7ac0>
   18d4c:	b	18da0 <__assert_fail@plt+0x7ac0>
   18d50:	ldr	r0, [fp, #8]
   18d54:	cmn	r0, #1
   18d58:	bne	18da0 <__assert_fail@plt+0x7ac0>
   18d5c:	b	18d60 <__assert_fail@plt+0x7a80>
   18d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d64:	add	r0, r0, #0
   18d68:	movw	r1, #0
   18d6c:	cmp	r1, r0
   18d70:	blt	18e58 <__assert_fail@plt+0x7b78>
   18d74:	b	18e74 <__assert_fail@plt+0x7b94>
   18d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d7c:	movw	r1, #0
   18d80:	cmp	r1, r0
   18d84:	bge	18e74 <__assert_fail@plt+0x7b94>
   18d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d8c:	sub	r0, r0, #1
   18d90:	mvn	r1, #0
   18d94:	cmp	r1, r0
   18d98:	blt	18e58 <__assert_fail@plt+0x7b78>
   18d9c:	b	18e74 <__assert_fail@plt+0x7b94>
   18da0:	ldr	r0, [fp, #8]
   18da4:	movw	r1, #0
   18da8:	sdiv	r0, r1, r0
   18dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18db0:	cmp	r0, r1
   18db4:	blt	18e58 <__assert_fail@plt+0x7b78>
   18db8:	b	18e74 <__assert_fail@plt+0x7b94>
   18dbc:	ldr	r0, [fp, #8]
   18dc0:	cmp	r0, #0
   18dc4:	bne	18dcc <__assert_fail@plt+0x7aec>
   18dc8:	b	18e74 <__assert_fail@plt+0x7b94>
   18dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd0:	cmp	r0, #0
   18dd4:	bge	18e40 <__assert_fail@plt+0x7b60>
   18dd8:	b	18ddc <__assert_fail@plt+0x7afc>
   18ddc:	b	18e24 <__assert_fail@plt+0x7b44>
   18de0:	b	18e24 <__assert_fail@plt+0x7b44>
   18de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de8:	cmn	r0, #1
   18dec:	bne	18e24 <__assert_fail@plt+0x7b44>
   18df0:	b	18df4 <__assert_fail@plt+0x7b14>
   18df4:	ldr	r0, [fp, #8]
   18df8:	add	r0, r0, #0
   18dfc:	movw	r1, #0
   18e00:	cmp	r1, r0
   18e04:	blt	18e58 <__assert_fail@plt+0x7b78>
   18e08:	b	18e74 <__assert_fail@plt+0x7b94>
   18e0c:	ldr	r0, [fp, #8]
   18e10:	sub	r0, r0, #1
   18e14:	mvn	r1, #0
   18e18:	cmp	r1, r0
   18e1c:	blt	18e58 <__assert_fail@plt+0x7b78>
   18e20:	b	18e74 <__assert_fail@plt+0x7b94>
   18e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e28:	movw	r1, #0
   18e2c:	sdiv	r0, r1, r0
   18e30:	ldr	r1, [fp, #8]
   18e34:	cmp	r0, r1
   18e38:	blt	18e58 <__assert_fail@plt+0x7b78>
   18e3c:	b	18e74 <__assert_fail@plt+0x7b94>
   18e40:	ldr	r0, [fp, #8]
   18e44:	movw	r1, #255	; 0xff
   18e48:	sdiv	r0, r1, r0
   18e4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e50:	cmp	r0, r1
   18e54:	bge	18e74 <__assert_fail@plt+0x7b94>
   18e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e5c:	ldr	r1, [fp, #8]
   18e60:	mul	r0, r0, r1
   18e64:	and	r0, r0, #255	; 0xff
   18e68:	str	r0, [fp, #-28]	; 0xffffffe4
   18e6c:	b	19e9c <__assert_fail@plt+0x8bbc>
   18e70:	andhi	r0, r0, r0
   18e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e78:	ldr	r1, [fp, #8]
   18e7c:	mul	r0, r0, r1
   18e80:	and	r0, r0, #255	; 0xff
   18e84:	str	r0, [fp, #-28]	; 0xffffffe4
   18e88:	b	19ea0 <__assert_fail@plt+0x8bc0>
   18e8c:	b	19264 <__assert_fail@plt+0x7f84>
   18e90:	b	18e94 <__assert_fail@plt+0x7bb4>
   18e94:	ldr	r0, [fp, #8]
   18e98:	cmp	r0, #0
   18e9c:	bge	18fb0 <__assert_fail@plt+0x7cd0>
   18ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ea4:	cmp	r0, #0
   18ea8:	bge	18f34 <__assert_fail@plt+0x7c54>
   18eac:	b	18eb0 <__assert_fail@plt+0x7bd0>
   18eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eb4:	ldr	r1, [fp, #8]
   18eb8:	movw	r2, #32767	; 0x7fff
   18ebc:	sdiv	r1, r2, r1
   18ec0:	cmp	r0, r1
   18ec4:	blt	19050 <__assert_fail@plt+0x7d70>
   18ec8:	b	19068 <__assert_fail@plt+0x7d88>
   18ecc:	b	18ed0 <__assert_fail@plt+0x7bf0>
   18ed0:	ldr	r0, [pc, #4084]	; 19ecc <__assert_fail@plt+0x8bec>
   18ed4:	ldr	r1, [fp, #8]
   18ed8:	cmp	r1, r0
   18edc:	blt	18ef4 <__assert_fail@plt+0x7c14>
   18ee0:	b	18f00 <__assert_fail@plt+0x7c20>
   18ee4:	ldr	r0, [fp, #8]
   18ee8:	movw	r1, #0
   18eec:	cmp	r1, r0
   18ef0:	bge	18f00 <__assert_fail@plt+0x7c20>
   18ef4:	movw	r0, #0
   18ef8:	str	r0, [sp, #156]	; 0x9c
   18efc:	b	18f18 <__assert_fail@plt+0x7c38>
   18f00:	ldr	r0, [fp, #8]
   18f04:	movw	r1, #0
   18f08:	sub	r0, r1, r0
   18f0c:	movw	r1, #32767	; 0x7fff
   18f10:	sdiv	r0, r1, r0
   18f14:	str	r0, [sp, #156]	; 0x9c
   18f18:	ldr	r0, [sp, #156]	; 0x9c
   18f1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f20:	mvn	r2, #0
   18f24:	sub	r1, r2, r1
   18f28:	cmp	r0, r1
   18f2c:	ble	19050 <__assert_fail@plt+0x7d70>
   18f30:	b	19068 <__assert_fail@plt+0x7d88>
   18f34:	b	18f38 <__assert_fail@plt+0x7c58>
   18f38:	b	18f94 <__assert_fail@plt+0x7cb4>
   18f3c:	b	18f94 <__assert_fail@plt+0x7cb4>
   18f40:	ldr	r0, [fp, #8]
   18f44:	cmn	r0, #1
   18f48:	bne	18f94 <__assert_fail@plt+0x7cb4>
   18f4c:	b	18f50 <__assert_fail@plt+0x7c70>
   18f50:	ldr	r0, [pc, #3964]	; 19ed4 <__assert_fail@plt+0x8bf4>
   18f54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f58:	add	r0, r1, r0
   18f5c:	movw	r1, #0
   18f60:	cmp	r1, r0
   18f64:	blt	19050 <__assert_fail@plt+0x7d70>
   18f68:	b	19068 <__assert_fail@plt+0x7d88>
   18f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f70:	movw	r1, #0
   18f74:	cmp	r1, r0
   18f78:	bge	19068 <__assert_fail@plt+0x7d88>
   18f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f80:	sub	r0, r0, #1
   18f84:	movw	r1, #32767	; 0x7fff
   18f88:	cmp	r1, r0
   18f8c:	blt	19050 <__assert_fail@plt+0x7d70>
   18f90:	b	19068 <__assert_fail@plt+0x7d88>
   18f94:	ldr	r0, [pc, #3896]	; 19ed4 <__assert_fail@plt+0x8bf4>
   18f98:	ldr	r1, [fp, #8]
   18f9c:	sdiv	r0, r0, r1
   18fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fa4:	cmp	r0, r1
   18fa8:	blt	19050 <__assert_fail@plt+0x7d70>
   18fac:	b	19068 <__assert_fail@plt+0x7d88>
   18fb0:	ldr	r0, [fp, #8]
   18fb4:	cmp	r0, #0
   18fb8:	bne	18fc0 <__assert_fail@plt+0x7ce0>
   18fbc:	b	19068 <__assert_fail@plt+0x7d88>
   18fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc4:	cmp	r0, #0
   18fc8:	bge	19038 <__assert_fail@plt+0x7d58>
   18fcc:	b	18fd0 <__assert_fail@plt+0x7cf0>
   18fd0:	b	1901c <__assert_fail@plt+0x7d3c>
   18fd4:	b	1901c <__assert_fail@plt+0x7d3c>
   18fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fdc:	cmn	r0, #1
   18fe0:	bne	1901c <__assert_fail@plt+0x7d3c>
   18fe4:	b	18fe8 <__assert_fail@plt+0x7d08>
   18fe8:	ldr	r0, [pc, #3812]	; 19ed4 <__assert_fail@plt+0x8bf4>
   18fec:	ldr	r1, [fp, #8]
   18ff0:	add	r0, r1, r0
   18ff4:	movw	r1, #0
   18ff8:	cmp	r1, r0
   18ffc:	blt	19050 <__assert_fail@plt+0x7d70>
   19000:	b	19068 <__assert_fail@plt+0x7d88>
   19004:	ldr	r0, [fp, #8]
   19008:	sub	r0, r0, #1
   1900c:	movw	r1, #32767	; 0x7fff
   19010:	cmp	r1, r0
   19014:	blt	19050 <__assert_fail@plt+0x7d70>
   19018:	b	19068 <__assert_fail@plt+0x7d88>
   1901c:	ldr	r0, [pc, #3760]	; 19ed4 <__assert_fail@plt+0x8bf4>
   19020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19024:	sdiv	r0, r0, r1
   19028:	ldr	r1, [fp, #8]
   1902c:	cmp	r0, r1
   19030:	blt	19050 <__assert_fail@plt+0x7d70>
   19034:	b	19068 <__assert_fail@plt+0x7d88>
   19038:	ldr	r0, [fp, #8]
   1903c:	movw	r1, #32767	; 0x7fff
   19040:	sdiv	r0, r1, r0
   19044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19048:	cmp	r0, r1
   1904c:	bge	19068 <__assert_fail@plt+0x7d88>
   19050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19054:	ldr	r1, [fp, #8]
   19058:	mul	r0, r0, r1
   1905c:	sxth	r0, r0
   19060:	str	r0, [fp, #-28]	; 0xffffffe4
   19064:	b	19e9c <__assert_fail@plt+0x8bbc>
   19068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1906c:	ldr	r1, [fp, #8]
   19070:	mul	r0, r0, r1
   19074:	sxth	r0, r0
   19078:	str	r0, [fp, #-28]	; 0xffffffe4
   1907c:	b	19ea0 <__assert_fail@plt+0x8bc0>
   19080:	ldr	r0, [fp, #8]
   19084:	cmp	r0, #0
   19088:	bge	19198 <__assert_fail@plt+0x7eb8>
   1908c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19090:	cmp	r0, #0
   19094:	bge	19120 <__assert_fail@plt+0x7e40>
   19098:	b	1909c <__assert_fail@plt+0x7dbc>
   1909c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190a0:	ldr	r1, [fp, #8]
   190a4:	movw	r2, #65535	; 0xffff
   190a8:	sdiv	r1, r2, r1
   190ac:	cmp	r0, r1
   190b0:	blt	19234 <__assert_fail@plt+0x7f54>
   190b4:	b	1924c <__assert_fail@plt+0x7f6c>
   190b8:	b	190bc <__assert_fail@plt+0x7ddc>
   190bc:	ldr	r0, [pc, #3592]	; 19ecc <__assert_fail@plt+0x8bec>
   190c0:	ldr	r1, [fp, #8]
   190c4:	cmp	r1, r0
   190c8:	blt	190e0 <__assert_fail@plt+0x7e00>
   190cc:	b	190ec <__assert_fail@plt+0x7e0c>
   190d0:	ldr	r0, [fp, #8]
   190d4:	movw	r1, #0
   190d8:	cmp	r1, r0
   190dc:	bge	190ec <__assert_fail@plt+0x7e0c>
   190e0:	movw	r0, #0
   190e4:	str	r0, [sp, #152]	; 0x98
   190e8:	b	19104 <__assert_fail@plt+0x7e24>
   190ec:	ldr	r0, [fp, #8]
   190f0:	movw	r1, #0
   190f4:	sub	r0, r1, r0
   190f8:	movw	r1, #65535	; 0xffff
   190fc:	sdiv	r0, r1, r0
   19100:	str	r0, [sp, #152]	; 0x98
   19104:	ldr	r0, [sp, #152]	; 0x98
   19108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1910c:	mvn	r2, #0
   19110:	sub	r1, r2, r1
   19114:	cmp	r0, r1
   19118:	ble	19234 <__assert_fail@plt+0x7f54>
   1911c:	b	1924c <__assert_fail@plt+0x7f6c>
   19120:	b	19124 <__assert_fail@plt+0x7e44>
   19124:	b	1917c <__assert_fail@plt+0x7e9c>
   19128:	b	1917c <__assert_fail@plt+0x7e9c>
   1912c:	ldr	r0, [fp, #8]
   19130:	cmn	r0, #1
   19134:	bne	1917c <__assert_fail@plt+0x7e9c>
   19138:	b	1913c <__assert_fail@plt+0x7e5c>
   1913c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19140:	add	r0, r0, #0
   19144:	movw	r1, #0
   19148:	cmp	r1, r0
   1914c:	blt	19234 <__assert_fail@plt+0x7f54>
   19150:	b	1924c <__assert_fail@plt+0x7f6c>
   19154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19158:	movw	r1, #0
   1915c:	cmp	r1, r0
   19160:	bge	1924c <__assert_fail@plt+0x7f6c>
   19164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19168:	sub	r0, r0, #1
   1916c:	mvn	r1, #0
   19170:	cmp	r1, r0
   19174:	blt	19234 <__assert_fail@plt+0x7f54>
   19178:	b	1924c <__assert_fail@plt+0x7f6c>
   1917c:	ldr	r0, [fp, #8]
   19180:	movw	r1, #0
   19184:	sdiv	r0, r1, r0
   19188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1918c:	cmp	r0, r1
   19190:	blt	19234 <__assert_fail@plt+0x7f54>
   19194:	b	1924c <__assert_fail@plt+0x7f6c>
   19198:	ldr	r0, [fp, #8]
   1919c:	cmp	r0, #0
   191a0:	bne	191a8 <__assert_fail@plt+0x7ec8>
   191a4:	b	1924c <__assert_fail@plt+0x7f6c>
   191a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191ac:	cmp	r0, #0
   191b0:	bge	1921c <__assert_fail@plt+0x7f3c>
   191b4:	b	191b8 <__assert_fail@plt+0x7ed8>
   191b8:	b	19200 <__assert_fail@plt+0x7f20>
   191bc:	b	19200 <__assert_fail@plt+0x7f20>
   191c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191c4:	cmn	r0, #1
   191c8:	bne	19200 <__assert_fail@plt+0x7f20>
   191cc:	b	191d0 <__assert_fail@plt+0x7ef0>
   191d0:	ldr	r0, [fp, #8]
   191d4:	add	r0, r0, #0
   191d8:	movw	r1, #0
   191dc:	cmp	r1, r0
   191e0:	blt	19234 <__assert_fail@plt+0x7f54>
   191e4:	b	1924c <__assert_fail@plt+0x7f6c>
   191e8:	ldr	r0, [fp, #8]
   191ec:	sub	r0, r0, #1
   191f0:	mvn	r1, #0
   191f4:	cmp	r1, r0
   191f8:	blt	19234 <__assert_fail@plt+0x7f54>
   191fc:	b	1924c <__assert_fail@plt+0x7f6c>
   19200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19204:	movw	r1, #0
   19208:	sdiv	r0, r1, r0
   1920c:	ldr	r1, [fp, #8]
   19210:	cmp	r0, r1
   19214:	blt	19234 <__assert_fail@plt+0x7f54>
   19218:	b	1924c <__assert_fail@plt+0x7f6c>
   1921c:	ldr	r0, [fp, #8]
   19220:	movw	r1, #65535	; 0xffff
   19224:	sdiv	r0, r1, r0
   19228:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1922c:	cmp	r0, r1
   19230:	bge	1924c <__assert_fail@plt+0x7f6c>
   19234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19238:	ldr	r1, [fp, #8]
   1923c:	mul	r0, r0, r1
   19240:	uxth	r0, r0
   19244:	str	r0, [fp, #-28]	; 0xffffffe4
   19248:	b	19e9c <__assert_fail@plt+0x8bbc>
   1924c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19250:	ldr	r1, [fp, #8]
   19254:	mul	r0, r0, r1
   19258:	uxth	r0, r0
   1925c:	str	r0, [fp, #-28]	; 0xffffffe4
   19260:	b	19ea0 <__assert_fail@plt+0x8bc0>
   19264:	b	19268 <__assert_fail@plt+0x7f88>
   19268:	b	1926c <__assert_fail@plt+0x7f8c>
   1926c:	ldr	r0, [fp, #8]
   19270:	cmp	r0, #0
   19274:	bge	19378 <__assert_fail@plt+0x8098>
   19278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1927c:	cmp	r0, #0
   19280:	bge	1930c <__assert_fail@plt+0x802c>
   19284:	b	19288 <__assert_fail@plt+0x7fa8>
   19288:	ldr	r0, [pc, #3128]	; 19ec8 <__assert_fail@plt+0x8be8>
   1928c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19290:	ldr	r2, [fp, #8]
   19294:	sdiv	r0, r0, r2
   19298:	cmp	r1, r0
   1929c:	blt	19408 <__assert_fail@plt+0x8128>
   192a0:	b	1941c <__assert_fail@plt+0x813c>
   192a4:	b	192a8 <__assert_fail@plt+0x7fc8>
   192a8:	ldr	r0, [pc, #3100]	; 19ecc <__assert_fail@plt+0x8bec>
   192ac:	ldr	r1, [fp, #8]
   192b0:	cmp	r1, r0
   192b4:	blt	192cc <__assert_fail@plt+0x7fec>
   192b8:	b	192d8 <__assert_fail@plt+0x7ff8>
   192bc:	ldr	r0, [fp, #8]
   192c0:	movw	r1, #0
   192c4:	cmp	r1, r0
   192c8:	bge	192d8 <__assert_fail@plt+0x7ff8>
   192cc:	movw	r0, #0
   192d0:	str	r0, [sp, #148]	; 0x94
   192d4:	b	192f0 <__assert_fail@plt+0x8010>
   192d8:	ldr	r0, [pc, #3048]	; 19ec8 <__assert_fail@plt+0x8be8>
   192dc:	ldr	r1, [fp, #8]
   192e0:	movw	r2, #0
   192e4:	sub	r1, r2, r1
   192e8:	sdiv	r0, r0, r1
   192ec:	str	r0, [sp, #148]	; 0x94
   192f0:	ldr	r0, [sp, #148]	; 0x94
   192f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192f8:	mvn	r2, #0
   192fc:	sub	r1, r2, r1
   19300:	cmp	r0, r1
   19304:	ble	19408 <__assert_fail@plt+0x8128>
   19308:	b	1941c <__assert_fail@plt+0x813c>
   1930c:	ldr	r0, [fp, #8]
   19310:	cmn	r0, #1
   19314:	bne	1935c <__assert_fail@plt+0x807c>
   19318:	b	1931c <__assert_fail@plt+0x803c>
   1931c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19320:	add	r0, r0, #-2147483648	; 0x80000000
   19324:	movw	r1, #0
   19328:	cmp	r1, r0
   1932c:	blt	19408 <__assert_fail@plt+0x8128>
   19330:	b	1941c <__assert_fail@plt+0x813c>
   19334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19338:	movw	r1, #0
   1933c:	cmp	r1, r0
   19340:	bge	1941c <__assert_fail@plt+0x813c>
   19344:	ldr	r0, [pc, #2940]	; 19ec8 <__assert_fail@plt+0x8be8>
   19348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1934c:	sub	r1, r1, #1
   19350:	cmp	r0, r1
   19354:	blt	19408 <__assert_fail@plt+0x8128>
   19358:	b	1941c <__assert_fail@plt+0x813c>
   1935c:	ldr	r0, [pc, #2924]	; 19ed0 <__assert_fail@plt+0x8bf0>
   19360:	ldr	r1, [fp, #8]
   19364:	sdiv	r0, r0, r1
   19368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1936c:	cmp	r0, r1
   19370:	blt	19408 <__assert_fail@plt+0x8128>
   19374:	b	1941c <__assert_fail@plt+0x813c>
   19378:	ldr	r0, [fp, #8]
   1937c:	cmp	r0, #0
   19380:	bne	19388 <__assert_fail@plt+0x80a8>
   19384:	b	1941c <__assert_fail@plt+0x813c>
   19388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1938c:	cmp	r0, #0
   19390:	bge	193f0 <__assert_fail@plt+0x8110>
   19394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19398:	cmn	r0, #1
   1939c:	bne	193d4 <__assert_fail@plt+0x80f4>
   193a0:	b	193a4 <__assert_fail@plt+0x80c4>
   193a4:	ldr	r0, [fp, #8]
   193a8:	add	r0, r0, #-2147483648	; 0x80000000
   193ac:	movw	r1, #0
   193b0:	cmp	r1, r0
   193b4:	blt	19408 <__assert_fail@plt+0x8128>
   193b8:	b	1941c <__assert_fail@plt+0x813c>
   193bc:	ldr	r0, [pc, #2820]	; 19ec8 <__assert_fail@plt+0x8be8>
   193c0:	ldr	r1, [fp, #8]
   193c4:	sub	r1, r1, #1
   193c8:	cmp	r0, r1
   193cc:	blt	19408 <__assert_fail@plt+0x8128>
   193d0:	b	1941c <__assert_fail@plt+0x813c>
   193d4:	ldr	r0, [pc, #2804]	; 19ed0 <__assert_fail@plt+0x8bf0>
   193d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193dc:	sdiv	r0, r0, r1
   193e0:	ldr	r1, [fp, #8]
   193e4:	cmp	r0, r1
   193e8:	blt	19408 <__assert_fail@plt+0x8128>
   193ec:	b	1941c <__assert_fail@plt+0x813c>
   193f0:	ldr	r0, [pc, #2768]	; 19ec8 <__assert_fail@plt+0x8be8>
   193f4:	ldr	r1, [fp, #8]
   193f8:	sdiv	r0, r0, r1
   193fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19400:	cmp	r0, r1
   19404:	bge	1941c <__assert_fail@plt+0x813c>
   19408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1940c:	ldr	r1, [fp, #8]
   19410:	mul	r0, r0, r1
   19414:	str	r0, [fp, #-28]	; 0xffffffe4
   19418:	b	19e9c <__assert_fail@plt+0x8bbc>
   1941c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19420:	ldr	r1, [fp, #8]
   19424:	mul	r0, r0, r1
   19428:	str	r0, [fp, #-28]	; 0xffffffe4
   1942c:	b	19ea0 <__assert_fail@plt+0x8bc0>
   19430:	ldr	r0, [fp, #8]
   19434:	cmp	r0, #0
   19438:	bge	19548 <__assert_fail@plt+0x8268>
   1943c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19440:	cmp	r0, #0
   19444:	bge	194d0 <__assert_fail@plt+0x81f0>
   19448:	b	19468 <__assert_fail@plt+0x8188>
   1944c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19450:	ldr	r1, [fp, #8]
   19454:	mvn	r2, #0
   19458:	udiv	r1, r2, r1
   1945c:	cmp	r0, r1
   19460:	bcc	195e4 <__assert_fail@plt+0x8304>
   19464:	b	195f8 <__assert_fail@plt+0x8318>
   19468:	b	1946c <__assert_fail@plt+0x818c>
   1946c:	ldr	r0, [pc, #2648]	; 19ecc <__assert_fail@plt+0x8bec>
   19470:	ldr	r1, [fp, #8]
   19474:	cmp	r1, r0
   19478:	blt	19490 <__assert_fail@plt+0x81b0>
   1947c:	b	1949c <__assert_fail@plt+0x81bc>
   19480:	ldr	r0, [fp, #8]
   19484:	movw	r1, #0
   19488:	cmp	r1, r0
   1948c:	bge	1949c <__assert_fail@plt+0x81bc>
   19490:	movw	r0, #1
   19494:	str	r0, [sp, #144]	; 0x90
   19498:	b	194b4 <__assert_fail@plt+0x81d4>
   1949c:	ldr	r0, [fp, #8]
   194a0:	movw	r1, #0
   194a4:	sub	r0, r1, r0
   194a8:	mvn	r1, #0
   194ac:	udiv	r0, r1, r0
   194b0:	str	r0, [sp, #144]	; 0x90
   194b4:	ldr	r0, [sp, #144]	; 0x90
   194b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194bc:	mvn	r2, #0
   194c0:	sub	r1, r2, r1
   194c4:	cmp	r0, r1
   194c8:	bls	195e4 <__assert_fail@plt+0x8304>
   194cc:	b	195f8 <__assert_fail@plt+0x8318>
   194d0:	b	194d4 <__assert_fail@plt+0x81f4>
   194d4:	b	1952c <__assert_fail@plt+0x824c>
   194d8:	b	1952c <__assert_fail@plt+0x824c>
   194dc:	ldr	r0, [fp, #8]
   194e0:	cmn	r0, #1
   194e4:	bne	1952c <__assert_fail@plt+0x824c>
   194e8:	b	194ec <__assert_fail@plt+0x820c>
   194ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194f0:	add	r0, r0, #0
   194f4:	movw	r1, #0
   194f8:	cmp	r1, r0
   194fc:	blt	195e4 <__assert_fail@plt+0x8304>
   19500:	b	195f8 <__assert_fail@plt+0x8318>
   19504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19508:	movw	r1, #0
   1950c:	cmp	r1, r0
   19510:	bge	195f8 <__assert_fail@plt+0x8318>
   19514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19518:	sub	r0, r0, #1
   1951c:	mvn	r1, #0
   19520:	cmp	r1, r0
   19524:	blt	195e4 <__assert_fail@plt+0x8304>
   19528:	b	195f8 <__assert_fail@plt+0x8318>
   1952c:	ldr	r0, [fp, #8]
   19530:	movw	r1, #0
   19534:	sdiv	r0, r1, r0
   19538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1953c:	cmp	r0, r1
   19540:	blt	195e4 <__assert_fail@plt+0x8304>
   19544:	b	195f8 <__assert_fail@plt+0x8318>
   19548:	ldr	r0, [fp, #8]
   1954c:	cmp	r0, #0
   19550:	bne	19558 <__assert_fail@plt+0x8278>
   19554:	b	195f8 <__assert_fail@plt+0x8318>
   19558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1955c:	cmp	r0, #0
   19560:	bge	195cc <__assert_fail@plt+0x82ec>
   19564:	b	19568 <__assert_fail@plt+0x8288>
   19568:	b	195b0 <__assert_fail@plt+0x82d0>
   1956c:	b	195b0 <__assert_fail@plt+0x82d0>
   19570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19574:	cmn	r0, #1
   19578:	bne	195b0 <__assert_fail@plt+0x82d0>
   1957c:	b	19580 <__assert_fail@plt+0x82a0>
   19580:	ldr	r0, [fp, #8]
   19584:	add	r0, r0, #0
   19588:	movw	r1, #0
   1958c:	cmp	r1, r0
   19590:	blt	195e4 <__assert_fail@plt+0x8304>
   19594:	b	195f8 <__assert_fail@plt+0x8318>
   19598:	ldr	r0, [fp, #8]
   1959c:	sub	r0, r0, #1
   195a0:	mvn	r1, #0
   195a4:	cmp	r1, r0
   195a8:	blt	195e4 <__assert_fail@plt+0x8304>
   195ac:	b	195f8 <__assert_fail@plt+0x8318>
   195b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195b4:	movw	r1, #0
   195b8:	sdiv	r0, r1, r0
   195bc:	ldr	r1, [fp, #8]
   195c0:	cmp	r0, r1
   195c4:	blt	195e4 <__assert_fail@plt+0x8304>
   195c8:	b	195f8 <__assert_fail@plt+0x8318>
   195cc:	ldr	r0, [fp, #8]
   195d0:	mvn	r1, #0
   195d4:	udiv	r0, r1, r0
   195d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195dc:	cmp	r0, r1
   195e0:	bcs	195f8 <__assert_fail@plt+0x8318>
   195e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195e8:	ldr	r1, [fp, #8]
   195ec:	mul	r0, r0, r1
   195f0:	str	r0, [fp, #-28]	; 0xffffffe4
   195f4:	b	19e9c <__assert_fail@plt+0x8bbc>
   195f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195fc:	ldr	r1, [fp, #8]
   19600:	mul	r0, r0, r1
   19604:	str	r0, [fp, #-28]	; 0xffffffe4
   19608:	b	19ea0 <__assert_fail@plt+0x8bc0>
   1960c:	b	19610 <__assert_fail@plt+0x8330>
   19610:	b	19614 <__assert_fail@plt+0x8334>
   19614:	ldr	r0, [fp, #8]
   19618:	cmp	r0, #0
   1961c:	bge	19720 <__assert_fail@plt+0x8440>
   19620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19624:	cmp	r0, #0
   19628:	bge	196b4 <__assert_fail@plt+0x83d4>
   1962c:	b	19630 <__assert_fail@plt+0x8350>
   19630:	ldr	r0, [pc, #2192]	; 19ec8 <__assert_fail@plt+0x8be8>
   19634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19638:	ldr	r2, [fp, #8]
   1963c:	sdiv	r0, r0, r2
   19640:	cmp	r1, r0
   19644:	blt	197b0 <__assert_fail@plt+0x84d0>
   19648:	b	197c4 <__assert_fail@plt+0x84e4>
   1964c:	b	19650 <__assert_fail@plt+0x8370>
   19650:	ldr	r0, [pc, #2164]	; 19ecc <__assert_fail@plt+0x8bec>
   19654:	ldr	r1, [fp, #8]
   19658:	cmp	r1, r0
   1965c:	blt	19674 <__assert_fail@plt+0x8394>
   19660:	b	19680 <__assert_fail@plt+0x83a0>
   19664:	ldr	r0, [fp, #8]
   19668:	movw	r1, #0
   1966c:	cmp	r1, r0
   19670:	bge	19680 <__assert_fail@plt+0x83a0>
   19674:	movw	r0, #0
   19678:	str	r0, [sp, #140]	; 0x8c
   1967c:	b	19698 <__assert_fail@plt+0x83b8>
   19680:	ldr	r0, [pc, #2112]	; 19ec8 <__assert_fail@plt+0x8be8>
   19684:	ldr	r1, [fp, #8]
   19688:	movw	r2, #0
   1968c:	sub	r1, r2, r1
   19690:	sdiv	r0, r0, r1
   19694:	str	r0, [sp, #140]	; 0x8c
   19698:	ldr	r0, [sp, #140]	; 0x8c
   1969c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196a0:	mvn	r2, #0
   196a4:	sub	r1, r2, r1
   196a8:	cmp	r0, r1
   196ac:	ble	197b0 <__assert_fail@plt+0x84d0>
   196b0:	b	197c4 <__assert_fail@plt+0x84e4>
   196b4:	ldr	r0, [fp, #8]
   196b8:	cmn	r0, #1
   196bc:	bne	19704 <__assert_fail@plt+0x8424>
   196c0:	b	196c4 <__assert_fail@plt+0x83e4>
   196c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196c8:	add	r0, r0, #-2147483648	; 0x80000000
   196cc:	movw	r1, #0
   196d0:	cmp	r1, r0
   196d4:	blt	197b0 <__assert_fail@plt+0x84d0>
   196d8:	b	197c4 <__assert_fail@plt+0x84e4>
   196dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196e0:	movw	r1, #0
   196e4:	cmp	r1, r0
   196e8:	bge	197c4 <__assert_fail@plt+0x84e4>
   196ec:	ldr	r0, [pc, #2004]	; 19ec8 <__assert_fail@plt+0x8be8>
   196f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196f4:	sub	r1, r1, #1
   196f8:	cmp	r0, r1
   196fc:	blt	197b0 <__assert_fail@plt+0x84d0>
   19700:	b	197c4 <__assert_fail@plt+0x84e4>
   19704:	ldr	r0, [pc, #1988]	; 19ed0 <__assert_fail@plt+0x8bf0>
   19708:	ldr	r1, [fp, #8]
   1970c:	sdiv	r0, r0, r1
   19710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19714:	cmp	r0, r1
   19718:	blt	197b0 <__assert_fail@plt+0x84d0>
   1971c:	b	197c4 <__assert_fail@plt+0x84e4>
   19720:	ldr	r0, [fp, #8]
   19724:	cmp	r0, #0
   19728:	bne	19730 <__assert_fail@plt+0x8450>
   1972c:	b	197c4 <__assert_fail@plt+0x84e4>
   19730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19734:	cmp	r0, #0
   19738:	bge	19798 <__assert_fail@plt+0x84b8>
   1973c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19740:	cmn	r0, #1
   19744:	bne	1977c <__assert_fail@plt+0x849c>
   19748:	b	1974c <__assert_fail@plt+0x846c>
   1974c:	ldr	r0, [fp, #8]
   19750:	add	r0, r0, #-2147483648	; 0x80000000
   19754:	movw	r1, #0
   19758:	cmp	r1, r0
   1975c:	blt	197b0 <__assert_fail@plt+0x84d0>
   19760:	b	197c4 <__assert_fail@plt+0x84e4>
   19764:	ldr	r0, [pc, #1884]	; 19ec8 <__assert_fail@plt+0x8be8>
   19768:	ldr	r1, [fp, #8]
   1976c:	sub	r1, r1, #1
   19770:	cmp	r0, r1
   19774:	blt	197b0 <__assert_fail@plt+0x84d0>
   19778:	b	197c4 <__assert_fail@plt+0x84e4>
   1977c:	ldr	r0, [pc, #1868]	; 19ed0 <__assert_fail@plt+0x8bf0>
   19780:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19784:	sdiv	r0, r0, r1
   19788:	ldr	r1, [fp, #8]
   1978c:	cmp	r0, r1
   19790:	blt	197b0 <__assert_fail@plt+0x84d0>
   19794:	b	197c4 <__assert_fail@plt+0x84e4>
   19798:	ldr	r0, [pc, #1832]	; 19ec8 <__assert_fail@plt+0x8be8>
   1979c:	ldr	r1, [fp, #8]
   197a0:	sdiv	r0, r0, r1
   197a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197a8:	cmp	r0, r1
   197ac:	bge	197c4 <__assert_fail@plt+0x84e4>
   197b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197b4:	ldr	r1, [fp, #8]
   197b8:	mul	r0, r0, r1
   197bc:	str	r0, [fp, #-28]	; 0xffffffe4
   197c0:	b	19e9c <__assert_fail@plt+0x8bbc>
   197c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c8:	ldr	r1, [fp, #8]
   197cc:	mul	r0, r0, r1
   197d0:	str	r0, [fp, #-28]	; 0xffffffe4
   197d4:	b	19ea0 <__assert_fail@plt+0x8bc0>
   197d8:	ldr	r0, [fp, #8]
   197dc:	cmp	r0, #0
   197e0:	bge	198f0 <__assert_fail@plt+0x8610>
   197e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197e8:	cmp	r0, #0
   197ec:	bge	19878 <__assert_fail@plt+0x8598>
   197f0:	b	19810 <__assert_fail@plt+0x8530>
   197f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197f8:	ldr	r1, [fp, #8]
   197fc:	mvn	r2, #0
   19800:	udiv	r1, r2, r1
   19804:	cmp	r0, r1
   19808:	bcc	1998c <__assert_fail@plt+0x86ac>
   1980c:	b	199a0 <__assert_fail@plt+0x86c0>
   19810:	b	19814 <__assert_fail@plt+0x8534>
   19814:	ldr	r0, [pc, #1712]	; 19ecc <__assert_fail@plt+0x8bec>
   19818:	ldr	r1, [fp, #8]
   1981c:	cmp	r1, r0
   19820:	blt	19838 <__assert_fail@plt+0x8558>
   19824:	b	19844 <__assert_fail@plt+0x8564>
   19828:	ldr	r0, [fp, #8]
   1982c:	movw	r1, #0
   19830:	cmp	r1, r0
   19834:	bge	19844 <__assert_fail@plt+0x8564>
   19838:	movw	r0, #1
   1983c:	str	r0, [sp, #136]	; 0x88
   19840:	b	1985c <__assert_fail@plt+0x857c>
   19844:	ldr	r0, [fp, #8]
   19848:	movw	r1, #0
   1984c:	sub	r0, r1, r0
   19850:	mvn	r1, #0
   19854:	udiv	r0, r1, r0
   19858:	str	r0, [sp, #136]	; 0x88
   1985c:	ldr	r0, [sp, #136]	; 0x88
   19860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19864:	mvn	r2, #0
   19868:	sub	r1, r2, r1
   1986c:	cmp	r0, r1
   19870:	bls	1998c <__assert_fail@plt+0x86ac>
   19874:	b	199a0 <__assert_fail@plt+0x86c0>
   19878:	b	1987c <__assert_fail@plt+0x859c>
   1987c:	b	198d4 <__assert_fail@plt+0x85f4>
   19880:	b	198d4 <__assert_fail@plt+0x85f4>
   19884:	ldr	r0, [fp, #8]
   19888:	cmn	r0, #1
   1988c:	bne	198d4 <__assert_fail@plt+0x85f4>
   19890:	b	19894 <__assert_fail@plt+0x85b4>
   19894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19898:	add	r0, r0, #0
   1989c:	movw	r1, #0
   198a0:	cmp	r1, r0
   198a4:	blt	1998c <__assert_fail@plt+0x86ac>
   198a8:	b	199a0 <__assert_fail@plt+0x86c0>
   198ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198b0:	movw	r1, #0
   198b4:	cmp	r1, r0
   198b8:	bge	199a0 <__assert_fail@plt+0x86c0>
   198bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198c0:	sub	r0, r0, #1
   198c4:	mvn	r1, #0
   198c8:	cmp	r1, r0
   198cc:	blt	1998c <__assert_fail@plt+0x86ac>
   198d0:	b	199a0 <__assert_fail@plt+0x86c0>
   198d4:	ldr	r0, [fp, #8]
   198d8:	movw	r1, #0
   198dc:	sdiv	r0, r1, r0
   198e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198e4:	cmp	r0, r1
   198e8:	blt	1998c <__assert_fail@plt+0x86ac>
   198ec:	b	199a0 <__assert_fail@plt+0x86c0>
   198f0:	ldr	r0, [fp, #8]
   198f4:	cmp	r0, #0
   198f8:	bne	19900 <__assert_fail@plt+0x8620>
   198fc:	b	199a0 <__assert_fail@plt+0x86c0>
   19900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19904:	cmp	r0, #0
   19908:	bge	19974 <__assert_fail@plt+0x8694>
   1990c:	b	19910 <__assert_fail@plt+0x8630>
   19910:	b	19958 <__assert_fail@plt+0x8678>
   19914:	b	19958 <__assert_fail@plt+0x8678>
   19918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1991c:	cmn	r0, #1
   19920:	bne	19958 <__assert_fail@plt+0x8678>
   19924:	b	19928 <__assert_fail@plt+0x8648>
   19928:	ldr	r0, [fp, #8]
   1992c:	add	r0, r0, #0
   19930:	movw	r1, #0
   19934:	cmp	r1, r0
   19938:	blt	1998c <__assert_fail@plt+0x86ac>
   1993c:	b	199a0 <__assert_fail@plt+0x86c0>
   19940:	ldr	r0, [fp, #8]
   19944:	sub	r0, r0, #1
   19948:	mvn	r1, #0
   1994c:	cmp	r1, r0
   19950:	blt	1998c <__assert_fail@plt+0x86ac>
   19954:	b	199a0 <__assert_fail@plt+0x86c0>
   19958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1995c:	movw	r1, #0
   19960:	sdiv	r0, r1, r0
   19964:	ldr	r1, [fp, #8]
   19968:	cmp	r0, r1
   1996c:	blt	1998c <__assert_fail@plt+0x86ac>
   19970:	b	199a0 <__assert_fail@plt+0x86c0>
   19974:	ldr	r0, [fp, #8]
   19978:	mvn	r1, #0
   1997c:	udiv	r0, r1, r0
   19980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19984:	cmp	r0, r1
   19988:	bcs	199a0 <__assert_fail@plt+0x86c0>
   1998c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19990:	ldr	r1, [fp, #8]
   19994:	mul	r0, r0, r1
   19998:	str	r0, [fp, #-28]	; 0xffffffe4
   1999c:	b	19e9c <__assert_fail@plt+0x8bbc>
   199a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199a4:	ldr	r1, [fp, #8]
   199a8:	mul	r0, r0, r1
   199ac:	str	r0, [fp, #-28]	; 0xffffffe4
   199b0:	b	19ea0 <__assert_fail@plt+0x8bc0>
   199b4:	b	199b8 <__assert_fail@plt+0x86d8>
   199b8:	ldr	r0, [fp, #8]
   199bc:	cmp	r0, #0
   199c0:	bge	19b48 <__assert_fail@plt+0x8868>
   199c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c8:	cmp	r0, #0
   199cc:	bge	19ab4 <__assert_fail@plt+0x87d4>
   199d0:	b	199d4 <__assert_fail@plt+0x86f4>
   199d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d8:	ldr	r1, [fp, #8]
   199dc:	asr	r3, r1, #31
   199e0:	mvn	r2, #0
   199e4:	mvn	ip, #-2147483648	; 0x80000000
   199e8:	str	r0, [sp, #132]	; 0x84
   199ec:	mov	r0, r2
   199f0:	str	r1, [sp, #128]	; 0x80
   199f4:	mov	r1, ip
   199f8:	ldr	r2, [sp, #128]	; 0x80
   199fc:	bl	1c650 <__assert_fail@plt+0xb370>
   19a00:	ldr	r2, [sp, #132]	; 0x84
   19a04:	subs	r0, r2, r0
   19a08:	rscs	r1, r1, r2, asr #31
   19a0c:	str	r0, [sp, #124]	; 0x7c
   19a10:	str	r1, [sp, #120]	; 0x78
   19a14:	blt	19c28 <__assert_fail@plt+0x8948>
   19a18:	b	19c3c <__assert_fail@plt+0x895c>
   19a1c:	b	19a20 <__assert_fail@plt+0x8740>
   19a20:	ldr	r0, [pc, #1188]	; 19ecc <__assert_fail@plt+0x8bec>
   19a24:	ldr	r1, [fp, #8]
   19a28:	cmp	r1, r0
   19a2c:	blt	19a44 <__assert_fail@plt+0x8764>
   19a30:	b	19a58 <__assert_fail@plt+0x8778>
   19a34:	ldr	r0, [fp, #8]
   19a38:	movw	r1, #0
   19a3c:	cmp	r1, r0
   19a40:	bge	19a58 <__assert_fail@plt+0x8778>
   19a44:	mov	r0, #0
   19a48:	mvn	r1, #0
   19a4c:	str	r1, [sp, #116]	; 0x74
   19a50:	str	r0, [sp, #112]	; 0x70
   19a54:	b	19a8c <__assert_fail@plt+0x87ac>
   19a58:	ldr	r0, [fp, #8]
   19a5c:	rsb	r0, r0, #0
   19a60:	asr	r3, r0, #31
   19a64:	mvn	r1, #0
   19a68:	mvn	r2, #-2147483648	; 0x80000000
   19a6c:	str	r0, [sp, #108]	; 0x6c
   19a70:	mov	r0, r1
   19a74:	mov	r1, r2
   19a78:	ldr	r2, [sp, #108]	; 0x6c
   19a7c:	bl	1c650 <__assert_fail@plt+0xb370>
   19a80:	str	r0, [sp, #116]	; 0x74
   19a84:	str	r1, [sp, #112]	; 0x70
   19a88:	b	19a8c <__assert_fail@plt+0x87ac>
   19a8c:	ldr	r0, [sp, #112]	; 0x70
   19a90:	ldr	r1, [sp, #116]	; 0x74
   19a94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a98:	mvn	r2, r2
   19a9c:	subs	r1, r2, r1
   19aa0:	rscs	r0, r0, r2, asr #31
   19aa4:	str	r1, [sp, #104]	; 0x68
   19aa8:	str	r0, [sp, #100]	; 0x64
   19aac:	bge	19c28 <__assert_fail@plt+0x8948>
   19ab0:	b	19c3c <__assert_fail@plt+0x895c>
   19ab4:	ldr	r0, [fp, #8]
   19ab8:	cmn	r0, #1
   19abc:	bne	19b08 <__assert_fail@plt+0x8828>
   19ac0:	b	19ac4 <__assert_fail@plt+0x87e4>
   19ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ac8:	mov	r1, #-2147483648	; 0x80000000
   19acc:	add	r1, r1, r0, asr #31
   19ad0:	rsbs	r0, r0, #0
   19ad4:	rscs	r1, r1, #0
   19ad8:	str	r0, [sp, #96]	; 0x60
   19adc:	str	r1, [sp, #92]	; 0x5c
   19ae0:	blt	19c28 <__assert_fail@plt+0x8948>
   19ae4:	b	19c3c <__assert_fail@plt+0x895c>
   19ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aec:	movw	r1, #0
   19af0:	cmp	r1, r0
   19af4:	bge	19c3c <__assert_fail@plt+0x895c>
   19af8:	mov	r0, #0
   19afc:	cmp	r0, #0
   19b00:	bne	19c28 <__assert_fail@plt+0x8948>
   19b04:	b	19c3c <__assert_fail@plt+0x895c>
   19b08:	ldr	r0, [fp, #8]
   19b0c:	asr	r3, r0, #31
   19b10:	mov	r1, #0
   19b14:	mov	r2, #-2147483648	; 0x80000000
   19b18:	str	r0, [sp, #88]	; 0x58
   19b1c:	mov	r0, r1
   19b20:	mov	r1, r2
   19b24:	ldr	r2, [sp, #88]	; 0x58
   19b28:	bl	1c650 <__assert_fail@plt+0xb370>
   19b2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b30:	subs	r0, r0, r2
   19b34:	sbcs	r1, r1, r2, asr #31
   19b38:	str	r0, [sp, #84]	; 0x54
   19b3c:	str	r1, [sp, #80]	; 0x50
   19b40:	blt	19c28 <__assert_fail@plt+0x8948>
   19b44:	b	19c3c <__assert_fail@plt+0x895c>
   19b48:	ldr	r0, [fp, #8]
   19b4c:	cmp	r0, #0
   19b50:	bne	19b58 <__assert_fail@plt+0x8878>
   19b54:	b	19c3c <__assert_fail@plt+0x895c>
   19b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b5c:	cmp	r0, #0
   19b60:	bge	19be8 <__assert_fail@plt+0x8908>
   19b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b68:	cmn	r0, #1
   19b6c:	bne	19ba8 <__assert_fail@plt+0x88c8>
   19b70:	b	19b74 <__assert_fail@plt+0x8894>
   19b74:	ldr	r0, [fp, #8]
   19b78:	mov	r1, #-2147483648	; 0x80000000
   19b7c:	add	r1, r1, r0, asr #31
   19b80:	rsbs	r0, r0, #0
   19b84:	rscs	r1, r1, #0
   19b88:	str	r0, [sp, #76]	; 0x4c
   19b8c:	str	r1, [sp, #72]	; 0x48
   19b90:	blt	19c28 <__assert_fail@plt+0x8948>
   19b94:	b	19c3c <__assert_fail@plt+0x895c>
   19b98:	mov	r0, #0
   19b9c:	cmp	r0, #0
   19ba0:	bne	19c28 <__assert_fail@plt+0x8948>
   19ba4:	b	19c3c <__assert_fail@plt+0x895c>
   19ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bac:	asr	r3, r0, #31
   19bb0:	mov	r1, #0
   19bb4:	mov	r2, #-2147483648	; 0x80000000
   19bb8:	str	r0, [sp, #68]	; 0x44
   19bbc:	mov	r0, r1
   19bc0:	mov	r1, r2
   19bc4:	ldr	r2, [sp, #68]	; 0x44
   19bc8:	bl	1c650 <__assert_fail@plt+0xb370>
   19bcc:	ldr	r2, [fp, #8]
   19bd0:	subs	r0, r0, r2
   19bd4:	sbcs	r1, r1, r2, asr #31
   19bd8:	str	r0, [sp, #64]	; 0x40
   19bdc:	str	r1, [sp, #60]	; 0x3c
   19be0:	blt	19c28 <__assert_fail@plt+0x8948>
   19be4:	b	19c3c <__assert_fail@plt+0x895c>
   19be8:	ldr	r0, [fp, #8]
   19bec:	asr	r3, r0, #31
   19bf0:	mvn	r1, #0
   19bf4:	mvn	r2, #-2147483648	; 0x80000000
   19bf8:	str	r0, [sp, #56]	; 0x38
   19bfc:	mov	r0, r1
   19c00:	mov	r1, r2
   19c04:	ldr	r2, [sp, #56]	; 0x38
   19c08:	bl	1c650 <__assert_fail@plt+0xb370>
   19c0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c10:	subs	r0, r0, r2
   19c14:	sbcs	r1, r1, r2, asr #31
   19c18:	str	r0, [sp, #52]	; 0x34
   19c1c:	str	r1, [sp, #48]	; 0x30
   19c20:	bge	19c3c <__assert_fail@plt+0x895c>
   19c24:	b	19c28 <__assert_fail@plt+0x8948>
   19c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c2c:	ldr	r1, [fp, #8]
   19c30:	mul	r0, r0, r1
   19c34:	str	r0, [fp, #-28]	; 0xffffffe4
   19c38:	b	19e9c <__assert_fail@plt+0x8bbc>
   19c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c40:	ldr	r1, [fp, #8]
   19c44:	mul	r0, r0, r1
   19c48:	str	r0, [fp, #-28]	; 0xffffffe4
   19c4c:	b	19ea0 <__assert_fail@plt+0x8bc0>
   19c50:	ldr	r0, [fp, #8]
   19c54:	cmp	r0, #0
   19c58:	bge	19db8 <__assert_fail@plt+0x8ad8>
   19c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c60:	cmp	r0, #0
   19c64:	bge	19d40 <__assert_fail@plt+0x8a60>
   19c68:	b	19cb0 <__assert_fail@plt+0x89d0>
   19c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c70:	ldr	r1, [fp, #8]
   19c74:	asr	r3, r1, #31
   19c78:	mvn	r2, #0
   19c7c:	str	r0, [sp, #44]	; 0x2c
   19c80:	mov	r0, r2
   19c84:	str	r1, [sp, #40]	; 0x28
   19c88:	mov	r1, r2
   19c8c:	ldr	r2, [sp, #40]	; 0x28
   19c90:	bl	1c724 <__assert_fail@plt+0xb444>
   19c94:	ldr	r2, [sp, #44]	; 0x2c
   19c98:	subs	r0, r2, r0
   19c9c:	rscs	r1, r1, r2, asr #31
   19ca0:	str	r0, [sp, #36]	; 0x24
   19ca4:	str	r1, [sp, #32]
   19ca8:	bcc	19e74 <__assert_fail@plt+0x8b94>
   19cac:	b	19e88 <__assert_fail@plt+0x8ba8>
   19cb0:	b	19cb4 <__assert_fail@plt+0x89d4>
   19cb4:	ldr	r0, [pc, #528]	; 19ecc <__assert_fail@plt+0x8bec>
   19cb8:	ldr	r1, [fp, #8]
   19cbc:	cmp	r1, r0
   19cc0:	blt	19cd8 <__assert_fail@plt+0x89f8>
   19cc4:	b	19cec <__assert_fail@plt+0x8a0c>
   19cc8:	ldr	r0, [fp, #8]
   19ccc:	movw	r1, #0
   19cd0:	cmp	r1, r0
   19cd4:	bge	19cec <__assert_fail@plt+0x8a0c>
   19cd8:	mov	r0, #1
   19cdc:	mvn	r1, #0
   19ce0:	str	r1, [sp, #28]
   19ce4:	str	r0, [sp, #24]
   19ce8:	b	19d18 <__assert_fail@plt+0x8a38>
   19cec:	ldr	r0, [fp, #8]
   19cf0:	rsb	r0, r0, #0
   19cf4:	asr	r3, r0, #31
   19cf8:	mvn	r1, #0
   19cfc:	str	r0, [sp, #20]
   19d00:	mov	r0, r1
   19d04:	ldr	r2, [sp, #20]
   19d08:	bl	1c724 <__assert_fail@plt+0xb444>
   19d0c:	str	r0, [sp, #28]
   19d10:	str	r1, [sp, #24]
   19d14:	b	19d18 <__assert_fail@plt+0x8a38>
   19d18:	ldr	r0, [sp, #24]
   19d1c:	ldr	r1, [sp, #28]
   19d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d24:	mvn	r2, r2
   19d28:	subs	r1, r2, r1
   19d2c:	rscs	r0, r0, r2, asr #31
   19d30:	str	r1, [sp, #16]
   19d34:	str	r0, [sp, #12]
   19d38:	bcs	19e74 <__assert_fail@plt+0x8b94>
   19d3c:	b	19e88 <__assert_fail@plt+0x8ba8>
   19d40:	b	19d44 <__assert_fail@plt+0x8a64>
   19d44:	b	19d9c <__assert_fail@plt+0x8abc>
   19d48:	b	19d9c <__assert_fail@plt+0x8abc>
   19d4c:	ldr	r0, [fp, #8]
   19d50:	cmn	r0, #1
   19d54:	bne	19d9c <__assert_fail@plt+0x8abc>
   19d58:	b	19d5c <__assert_fail@plt+0x8a7c>
   19d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d60:	add	r0, r0, #0
   19d64:	movw	r1, #0
   19d68:	cmp	r1, r0
   19d6c:	blt	19e74 <__assert_fail@plt+0x8b94>
   19d70:	b	19e88 <__assert_fail@plt+0x8ba8>
   19d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d78:	movw	r1, #0
   19d7c:	cmp	r1, r0
   19d80:	bge	19e88 <__assert_fail@plt+0x8ba8>
   19d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d88:	sub	r0, r0, #1
   19d8c:	mvn	r1, #0
   19d90:	cmp	r1, r0
   19d94:	blt	19e74 <__assert_fail@plt+0x8b94>
   19d98:	b	19e88 <__assert_fail@plt+0x8ba8>
   19d9c:	ldr	r0, [fp, #8]
   19da0:	movw	r1, #0
   19da4:	sdiv	r0, r1, r0
   19da8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19dac:	cmp	r0, r1
   19db0:	blt	19e74 <__assert_fail@plt+0x8b94>
   19db4:	b	19e88 <__assert_fail@plt+0x8ba8>
   19db8:	ldr	r0, [fp, #8]
   19dbc:	cmp	r0, #0
   19dc0:	bne	19dc8 <__assert_fail@plt+0x8ae8>
   19dc4:	b	19e88 <__assert_fail@plt+0x8ba8>
   19dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dcc:	cmp	r0, #0
   19dd0:	bge	19e3c <__assert_fail@plt+0x8b5c>
   19dd4:	b	19dd8 <__assert_fail@plt+0x8af8>
   19dd8:	b	19e20 <__assert_fail@plt+0x8b40>
   19ddc:	b	19e20 <__assert_fail@plt+0x8b40>
   19de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19de4:	cmn	r0, #1
   19de8:	bne	19e20 <__assert_fail@plt+0x8b40>
   19dec:	b	19df0 <__assert_fail@plt+0x8b10>
   19df0:	ldr	r0, [fp, #8]
   19df4:	add	r0, r0, #0
   19df8:	movw	r1, #0
   19dfc:	cmp	r1, r0
   19e00:	blt	19e74 <__assert_fail@plt+0x8b94>
   19e04:	b	19e88 <__assert_fail@plt+0x8ba8>
   19e08:	ldr	r0, [fp, #8]
   19e0c:	sub	r0, r0, #1
   19e10:	mvn	r1, #0
   19e14:	cmp	r1, r0
   19e18:	blt	19e74 <__assert_fail@plt+0x8b94>
   19e1c:	b	19e88 <__assert_fail@plt+0x8ba8>
   19e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e24:	movw	r1, #0
   19e28:	sdiv	r0, r1, r0
   19e2c:	ldr	r1, [fp, #8]
   19e30:	cmp	r0, r1
   19e34:	blt	19e74 <__assert_fail@plt+0x8b94>
   19e38:	b	19e88 <__assert_fail@plt+0x8ba8>
   19e3c:	ldr	r0, [fp, #8]
   19e40:	asr	r3, r0, #31
   19e44:	mvn	r1, #0
   19e48:	str	r0, [sp, #8]
   19e4c:	mov	r0, r1
   19e50:	ldr	r2, [sp, #8]
   19e54:	bl	1c724 <__assert_fail@plt+0xb444>
   19e58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e5c:	subs	r0, r0, r2
   19e60:	sbcs	r1, r1, r2, asr #31
   19e64:	str	r0, [sp, #4]
   19e68:	str	r1, [sp]
   19e6c:	bcs	19e88 <__assert_fail@plt+0x8ba8>
   19e70:	b	19e74 <__assert_fail@plt+0x8b94>
   19e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e78:	ldr	r1, [fp, #8]
   19e7c:	mul	r0, r0, r1
   19e80:	str	r0, [fp, #-28]	; 0xffffffe4
   19e84:	b	19e9c <__assert_fail@plt+0x8bbc>
   19e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e8c:	ldr	r1, [fp, #8]
   19e90:	mul	r0, r0, r1
   19e94:	str	r0, [fp, #-28]	; 0xffffffe4
   19e98:	b	19ea0 <__assert_fail@plt+0x8bc0>
   19e9c:	bl	1a078 <__assert_fail@plt+0x8d98>
   19ea0:	ldr	r0, [fp, #-4]
   19ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ea8:	bl	17334 <__assert_fail@plt+0x6054>
   19eac:	str	r0, [fp, #-4]
   19eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eb4:	ldr	r1, [fp, #-8]
   19eb8:	str	r0, [r1]
   19ebc:	ldr	r0, [fp, #-4]
   19ec0:	mov	sp, fp
   19ec4:	pop	{fp, pc}
   19ec8:	svcvc	0x00ffffff
   19ecc:	andhi	r0, r0, r1
   19ed0:	andhi	r0, r0, r0
   19ed4:			; <UNDEFINED> instruction: 0xffff8000
   19ed8:	push	{fp, lr}
   19edc:	mov	fp, sp
   19ee0:	sub	sp, sp, #8
   19ee4:	str	r0, [sp, #4]
   19ee8:	ldr	r0, [sp, #4]
   19eec:	movw	r1, #1
   19ef0:	bl	19efc <__assert_fail@plt+0x8c1c>
   19ef4:	mov	sp, fp
   19ef8:	pop	{fp, pc}
   19efc:	push	{fp, lr}
   19f00:	mov	fp, sp
   19f04:	sub	sp, sp, #8
   19f08:	str	r0, [sp, #4]
   19f0c:	str	r1, [sp]
   19f10:	ldr	r0, [sp, #4]
   19f14:	ldr	r1, [sp]
   19f18:	bl	1a0c8 <__assert_fail@plt+0x8de8>
   19f1c:	bl	172c0 <__assert_fail@plt+0x5fe0>
   19f20:	mov	sp, fp
   19f24:	pop	{fp, pc}
   19f28:	push	{fp, lr}
   19f2c:	mov	fp, sp
   19f30:	sub	sp, sp, #8
   19f34:	str	r0, [sp, #4]
   19f38:	ldr	r0, [sp, #4]
   19f3c:	movw	r1, #1
   19f40:	bl	19f4c <__assert_fail@plt+0x8c6c>
   19f44:	mov	sp, fp
   19f48:	pop	{fp, pc}
   19f4c:	push	{fp, lr}
   19f50:	mov	fp, sp
   19f54:	sub	sp, sp, #8
   19f58:	str	r0, [sp, #4]
   19f5c:	str	r1, [sp]
   19f60:	ldr	r0, [sp, #4]
   19f64:	ldr	r1, [sp]
   19f68:	bl	1a7d0 <__assert_fail@plt+0x94f0>
   19f6c:	bl	172c0 <__assert_fail@plt+0x5fe0>
   19f70:	mov	sp, fp
   19f74:	pop	{fp, pc}
   19f78:	push	{fp, lr}
   19f7c:	mov	fp, sp
   19f80:	sub	sp, sp, #16
   19f84:	str	r0, [fp, #-4]
   19f88:	str	r1, [sp, #8]
   19f8c:	ldr	r0, [sp, #8]
   19f90:	bl	1729c <__assert_fail@plt+0x5fbc>
   19f94:	ldr	r1, [fp, #-4]
   19f98:	ldr	r2, [sp, #8]
   19f9c:	str	r0, [sp, #4]
   19fa0:	bl	110ac <memcpy@plt>
   19fa4:	ldr	r0, [sp, #4]
   19fa8:	mov	sp, fp
   19fac:	pop	{fp, pc}
   19fb0:	push	{fp, lr}
   19fb4:	mov	fp, sp
   19fb8:	sub	sp, sp, #16
   19fbc:	str	r0, [fp, #-4]
   19fc0:	str	r1, [sp, #8]
   19fc4:	ldr	r0, [sp, #8]
   19fc8:	bl	172f0 <__assert_fail@plt+0x6010>
   19fcc:	ldr	r1, [fp, #-4]
   19fd0:	ldr	r2, [sp, #8]
   19fd4:	str	r0, [sp, #4]
   19fd8:	bl	110ac <memcpy@plt>
   19fdc:	ldr	r0, [sp, #4]
   19fe0:	mov	sp, fp
   19fe4:	pop	{fp, pc}
   19fe8:	push	{fp, lr}
   19fec:	mov	fp, sp
   19ff0:	sub	sp, sp, #16
   19ff4:	str	r0, [fp, #-4]
   19ff8:	str	r1, [sp, #8]
   19ffc:	ldr	r0, [sp, #8]
   1a000:	add	r0, r0, #1
   1a004:	bl	172f0 <__assert_fail@plt+0x6010>
   1a008:	str	r0, [sp, #4]
   1a00c:	ldr	r0, [sp, #4]
   1a010:	ldr	r1, [sp, #8]
   1a014:	add	r0, r0, r1
   1a018:	movw	r1, #0
   1a01c:	strb	r1, [r0]
   1a020:	ldr	r0, [sp, #4]
   1a024:	ldr	r1, [fp, #-4]
   1a028:	ldr	r2, [sp, #8]
   1a02c:	str	r0, [sp]
   1a030:	bl	110ac <memcpy@plt>
   1a034:	ldr	r0, [sp]
   1a038:	mov	sp, fp
   1a03c:	pop	{fp, pc}
   1a040:	push	{fp, lr}
   1a044:	mov	fp, sp
   1a048:	sub	sp, sp, #8
   1a04c:	str	r0, [sp, #4]
   1a050:	ldr	r0, [sp, #4]
   1a054:	ldr	r1, [sp, #4]
   1a058:	str	r0, [sp]
   1a05c:	mov	r0, r1
   1a060:	bl	111c0 <strlen@plt>
   1a064:	add	r1, r0, #1
   1a068:	ldr	r0, [sp]
   1a06c:	bl	19f78 <__assert_fail@plt+0x8c98>
   1a070:	mov	sp, fp
   1a074:	pop	{fp, pc}
   1a078:	push	{fp, lr}
   1a07c:	mov	fp, sp
   1a080:	sub	sp, sp, #8
   1a084:	movw	r0, #57612	; 0xe10c
   1a088:	movt	r0, #2
   1a08c:	ldr	r0, [r0]
   1a090:	movw	r1, #55632	; 0xd950
   1a094:	movt	r1, #1
   1a098:	str	r0, [sp, #4]
   1a09c:	mov	r0, r1
   1a0a0:	bl	111b4 <gettext@plt>
   1a0a4:	ldr	r1, [sp, #4]
   1a0a8:	str	r0, [sp]
   1a0ac:	mov	r0, r1
   1a0b0:	movw	r1, #0
   1a0b4:	movw	r2, #54582	; 0xd536
   1a0b8:	movt	r2, #1
   1a0bc:	ldr	r3, [sp]
   1a0c0:	bl	11154 <error@plt>
   1a0c4:	bl	112b0 <abort@plt>
   1a0c8:	push	{fp, lr}
   1a0cc:	mov	fp, sp
   1a0d0:	sub	sp, sp, #16
   1a0d4:	str	r0, [sp, #8]
   1a0d8:	str	r1, [sp, #4]
   1a0dc:	ldr	r0, [sp, #8]
   1a0e0:	cmp	r0, #0
   1a0e4:	beq	1a0f4 <__assert_fail@plt+0x8e14>
   1a0e8:	ldr	r0, [sp, #4]
   1a0ec:	cmp	r0, #0
   1a0f0:	bne	1a100 <__assert_fail@plt+0x8e20>
   1a0f4:	movw	r0, #1
   1a0f8:	str	r0, [sp, #4]
   1a0fc:	str	r0, [sp, #8]
   1a100:	ldr	r0, [sp, #4]
   1a104:	cmp	r0, #0
   1a108:	beq	1a13c <__assert_fail@plt+0x8e5c>
   1a10c:	ldr	r0, [pc, #76]	; 1a160 <__assert_fail@plt+0x8e80>
   1a110:	ldr	r1, [sp, #4]
   1a114:	udiv	r0, r0, r1
   1a118:	ldr	r1, [sp, #8]
   1a11c:	cmp	r0, r1
   1a120:	bcs	1a13c <__assert_fail@plt+0x8e5c>
   1a124:	bl	111e4 <__errno_location@plt>
   1a128:	movw	lr, #12
   1a12c:	str	lr, [r0]
   1a130:	movw	r0, #0
   1a134:	str	r0, [fp, #-4]
   1a138:	b	1a154 <__assert_fail@plt+0x8e74>
   1a13c:	ldr	r0, [sp, #8]
   1a140:	ldr	r1, [sp, #4]
   1a144:	bl	11028 <calloc@plt>
   1a148:	str	r0, [sp]
   1a14c:	ldr	r0, [sp]
   1a150:	str	r0, [fp, #-4]
   1a154:	ldr	r0, [fp, #-4]
   1a158:	mov	sp, fp
   1a15c:	pop	{fp, pc}
   1a160:	svcvc	0x00ffffff
   1a164:	push	{fp, lr}
   1a168:	mov	fp, sp
   1a16c:	sub	sp, sp, #16
   1a170:	str	r0, [sp, #8]
   1a174:	ldr	r0, [sp, #8]
   1a178:	cmp	r0, #0
   1a17c:	bne	1a188 <__assert_fail@plt+0x8ea8>
   1a180:	movw	r0, #1
   1a184:	str	r0, [sp, #8]
   1a188:	ldr	r0, [pc, #64]	; 1a1d0 <__assert_fail@plt+0x8ef0>
   1a18c:	ldr	r1, [sp, #8]
   1a190:	cmp	r0, r1
   1a194:	bcs	1a1b0 <__assert_fail@plt+0x8ed0>
   1a198:	bl	111e4 <__errno_location@plt>
   1a19c:	movw	lr, #12
   1a1a0:	str	lr, [r0]
   1a1a4:	movw	r0, #0
   1a1a8:	str	r0, [fp, #-4]
   1a1ac:	b	1a1c4 <__assert_fail@plt+0x8ee4>
   1a1b0:	ldr	r0, [sp, #8]
   1a1b4:	bl	11160 <malloc@plt>
   1a1b8:	str	r0, [sp, #4]
   1a1bc:	ldr	r0, [sp, #4]
   1a1c0:	str	r0, [fp, #-4]
   1a1c4:	ldr	r0, [fp, #-4]
   1a1c8:	mov	sp, fp
   1a1cc:	pop	{fp, pc}
   1a1d0:	svcvc	0x00ffffff
   1a1d4:	push	{fp, lr}
   1a1d8:	mov	fp, sp
   1a1dc:	sub	sp, sp, #16
   1a1e0:	str	r0, [sp, #8]
   1a1e4:	str	r1, [sp, #4]
   1a1e8:	ldr	r0, [sp, #8]
   1a1ec:	movw	r1, #0
   1a1f0:	cmp	r0, r1
   1a1f4:	bne	1a208 <__assert_fail@plt+0x8f28>
   1a1f8:	ldr	r0, [sp, #4]
   1a1fc:	bl	1a164 <__assert_fail@plt+0x8e84>
   1a200:	str	r0, [fp, #-4]
   1a204:	b	1a268 <__assert_fail@plt+0x8f88>
   1a208:	ldr	r0, [sp, #4]
   1a20c:	cmp	r0, #0
   1a210:	bne	1a228 <__assert_fail@plt+0x8f48>
   1a214:	ldr	r0, [sp, #8]
   1a218:	bl	1396c <__assert_fail@plt+0x268c>
   1a21c:	movw	r0, #0
   1a220:	str	r0, [fp, #-4]
   1a224:	b	1a268 <__assert_fail@plt+0x8f88>
   1a228:	ldr	r0, [pc, #68]	; 1a274 <__assert_fail@plt+0x8f94>
   1a22c:	ldr	r1, [sp, #4]
   1a230:	cmp	r0, r1
   1a234:	bcs	1a250 <__assert_fail@plt+0x8f70>
   1a238:	bl	111e4 <__errno_location@plt>
   1a23c:	movw	lr, #12
   1a240:	str	lr, [r0]
   1a244:	movw	r0, #0
   1a248:	str	r0, [fp, #-4]
   1a24c:	b	1a268 <__assert_fail@plt+0x8f88>
   1a250:	ldr	r0, [sp, #8]
   1a254:	ldr	r1, [sp, #4]
   1a258:	bl	110e8 <realloc@plt>
   1a25c:	str	r0, [sp]
   1a260:	ldr	r0, [sp]
   1a264:	str	r0, [fp, #-4]
   1a268:	ldr	r0, [fp, #-4]
   1a26c:	mov	sp, fp
   1a270:	pop	{fp, pc}
   1a274:	svcvc	0x00ffffff
   1a278:	push	{fp, lr}
   1a27c:	mov	fp, sp
   1a280:	sub	sp, sp, #24
   1a284:	str	r0, [fp, #-8]
   1a288:	str	r1, [sp, #12]
   1a28c:	ldr	r0, [fp, #-8]
   1a290:	str	r0, [sp, #8]
   1a294:	ldr	r0, [sp, #12]
   1a298:	str	r0, [sp, #4]
   1a29c:	ldr	r0, [sp, #8]
   1a2a0:	ldr	r1, [sp, #4]
   1a2a4:	cmp	r0, r1
   1a2a8:	bne	1a2b8 <__assert_fail@plt+0x8fd8>
   1a2ac:	movw	r0, #0
   1a2b0:	str	r0, [fp, #-4]
   1a2b4:	b	1a324 <__assert_fail@plt+0x9044>
   1a2b8:	b	1a2bc <__assert_fail@plt+0x8fdc>
   1a2bc:	ldr	r0, [sp, #8]
   1a2c0:	ldrb	r0, [r0]
   1a2c4:	bl	1c334 <__assert_fail@plt+0xb054>
   1a2c8:	strb	r0, [sp, #3]
   1a2cc:	ldr	r0, [sp, #4]
   1a2d0:	ldrb	r0, [r0]
   1a2d4:	bl	1c334 <__assert_fail@plt+0xb054>
   1a2d8:	strb	r0, [sp, #2]
   1a2dc:	ldrb	r0, [sp, #3]
   1a2e0:	cmp	r0, #0
   1a2e4:	bne	1a2ec <__assert_fail@plt+0x900c>
   1a2e8:	b	1a314 <__assert_fail@plt+0x9034>
   1a2ec:	ldr	r0, [sp, #8]
   1a2f0:	add	r0, r0, #1
   1a2f4:	str	r0, [sp, #8]
   1a2f8:	ldr	r0, [sp, #4]
   1a2fc:	add	r0, r0, #1
   1a300:	str	r0, [sp, #4]
   1a304:	ldrb	r0, [sp, #3]
   1a308:	ldrb	r1, [sp, #2]
   1a30c:	cmp	r0, r1
   1a310:	beq	1a2bc <__assert_fail@plt+0x8fdc>
   1a314:	ldrb	r0, [sp, #3]
   1a318:	ldrb	r1, [sp, #2]
   1a31c:	sub	r0, r0, r1
   1a320:	str	r0, [fp, #-4]
   1a324:	ldr	r0, [fp, #-4]
   1a328:	mov	sp, fp
   1a32c:	pop	{fp, pc}
   1a330:	push	{fp, lr}
   1a334:	mov	fp, sp
   1a338:	sub	sp, sp, #16
   1a33c:	str	r0, [sp, #8]
   1a340:	ldr	r0, [sp, #8]
   1a344:	bl	11130 <__fpending@plt>
   1a348:	cmp	r0, #0
   1a34c:	movw	r0, #0
   1a350:	movne	r0, #1
   1a354:	and	r0, r0, #1
   1a358:	strb	r0, [sp, #7]
   1a35c:	ldr	r0, [sp, #8]
   1a360:	bl	1113c <ferror_unlocked@plt>
   1a364:	cmp	r0, #0
   1a368:	movw	r0, #0
   1a36c:	movne	r0, #1
   1a370:	and	r0, r0, #1
   1a374:	strb	r0, [sp, #6]
   1a378:	ldr	r0, [sp, #8]
   1a37c:	bl	137d0 <__assert_fail@plt+0x24f0>
   1a380:	cmp	r0, #0
   1a384:	movw	r0, #0
   1a388:	movne	r0, #1
   1a38c:	and	r0, r0, #1
   1a390:	strb	r0, [sp, #5]
   1a394:	ldrb	r0, [sp, #6]
   1a398:	tst	r0, #1
   1a39c:	bne	1a3c8 <__assert_fail@plt+0x90e8>
   1a3a0:	ldrb	r0, [sp, #5]
   1a3a4:	tst	r0, #1
   1a3a8:	beq	1a3ec <__assert_fail@plt+0x910c>
   1a3ac:	ldrb	r0, [sp, #7]
   1a3b0:	tst	r0, #1
   1a3b4:	bne	1a3c8 <__assert_fail@plt+0x90e8>
   1a3b8:	bl	111e4 <__errno_location@plt>
   1a3bc:	ldr	r0, [r0]
   1a3c0:	cmp	r0, #9
   1a3c4:	beq	1a3ec <__assert_fail@plt+0x910c>
   1a3c8:	ldrb	r0, [sp, #5]
   1a3cc:	tst	r0, #1
   1a3d0:	bne	1a3e0 <__assert_fail@plt+0x9100>
   1a3d4:	bl	111e4 <__errno_location@plt>
   1a3d8:	movw	lr, #0
   1a3dc:	str	lr, [r0]
   1a3e0:	mvn	r0, #0
   1a3e4:	str	r0, [fp, #-4]
   1a3e8:	b	1a3f4 <__assert_fail@plt+0x9114>
   1a3ec:	movw	r0, #0
   1a3f0:	str	r0, [fp, #-4]
   1a3f4:	ldr	r0, [fp, #-4]
   1a3f8:	mov	sp, fp
   1a3fc:	pop	{fp, pc}
   1a400:	sub	sp, sp, #16
   1a404:	str	r0, [sp, #8]
   1a408:	str	r1, [sp, #4]
   1a40c:	ldr	r0, [sp, #8]
   1a410:	ldr	r0, [r0, #20]
   1a414:	ldr	r1, [sp, #8]
   1a418:	ldr	r1, [r1, #16]
   1a41c:	cmp	r0, r1
   1a420:	bls	1a430 <__assert_fail@plt+0x9150>
   1a424:	movw	r0, #0
   1a428:	str	r0, [sp, #12]
   1a42c:	b	1a478 <__assert_fail@plt+0x9198>
   1a430:	ldr	r0, [sp, #8]
   1a434:	ldr	r0, [r0, #8]
   1a438:	ldr	r1, [sp, #8]
   1a43c:	ldr	r1, [r1, #4]
   1a440:	sub	r0, r0, r1
   1a444:	str	r0, [sp]
   1a448:	ldr	r0, [sp]
   1a44c:	cmp	r0, #0
   1a450:	bne	1a460 <__assert_fail@plt+0x9180>
   1a454:	movw	r0, #0
   1a458:	str	r0, [sp, #12]
   1a45c:	b	1a478 <__assert_fail@plt+0x9198>
   1a460:	ldr	r0, [sp]
   1a464:	ldr	r1, [sp, #4]
   1a468:	str	r0, [r1]
   1a46c:	ldr	r0, [sp, #8]
   1a470:	ldr	r0, [r0, #4]
   1a474:	str	r0, [sp, #12]
   1a478:	ldr	r0, [sp, #12]
   1a47c:	add	sp, sp, #16
   1a480:	bx	lr
   1a484:	push	{r4, r5, fp, lr}
   1a488:	add	fp, sp, #8
   1a48c:	sub	sp, sp, #48	; 0x30
   1a490:	sub	sp, sp, #4096	; 0x1000
   1a494:	str	r0, [fp, #-16]
   1a498:	str	r1, [fp, #-20]	; 0xffffffec
   1a49c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4a0:	cmp	r0, #0
   1a4a4:	bne	1a4b4 <__assert_fail@plt+0x91d4>
   1a4a8:	movw	r0, #0
   1a4ac:	str	r0, [fp, #-12]
   1a4b0:	b	1a6d8 <__assert_fail@plt+0x93f8>
   1a4b4:	ldr	r0, [fp, #-16]
   1a4b8:	bl	1c3bc <__assert_fail@plt+0xb0dc>
   1a4bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4c4:	cmp	r0, #0
   1a4c8:	bls	1a5c4 <__assert_fail@plt+0x92e4>
   1a4cc:	ldr	r0, [fp, #-16]
   1a4d0:	sub	r1, fp, #32
   1a4d4:	bl	1a400 <__assert_fail@plt+0x9120>
   1a4d8:	movw	r1, #0
   1a4dc:	cmp	r0, r1
   1a4e0:	beq	1a574 <__assert_fail@plt+0x9294>
   1a4e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4e8:	cmp	r0, #0
   1a4ec:	bls	1a574 <__assert_fail@plt+0x9294>
   1a4f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a4f8:	cmp	r0, r1
   1a4fc:	bcs	1a50c <__assert_fail@plt+0x922c>
   1a500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a504:	str	r0, [sp, #12]
   1a508:	b	1a514 <__assert_fail@plt+0x9234>
   1a50c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a510:	str	r0, [sp, #12]
   1a514:	ldr	r0, [sp, #12]
   1a518:	str	r0, [fp, #-36]	; 0xffffffdc
   1a51c:	ldr	r0, [fp, #-16]
   1a520:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a524:	bl	1a6e4 <__assert_fail@plt+0x9404>
   1a528:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a52c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a530:	sub	r0, r1, r0
   1a534:	str	r0, [fp, #-20]	; 0xffffffec
   1a538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a53c:	cmp	r0, #0
   1a540:	bne	1a550 <__assert_fail@plt+0x9270>
   1a544:	movw	r0, #0
   1a548:	str	r0, [fp, #-12]
   1a54c:	b	1a6d8 <__assert_fail@plt+0x93f8>
   1a550:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a558:	sub	r0, r1, r0
   1a55c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a564:	cmp	r0, #0
   1a568:	bne	1a570 <__assert_fail@plt+0x9290>
   1a56c:	b	1a5c4 <__assert_fail@plt+0x92e4>
   1a570:	b	1a574 <__assert_fail@plt+0x9294>
   1a574:	ldr	r0, [fp, #-16]
   1a578:	bl	11208 <fgetc@plt>
   1a57c:	cmn	r0, #1
   1a580:	bne	1a588 <__assert_fail@plt+0x92a8>
   1a584:	b	1a6b4 <__assert_fail@plt+0x93d4>
   1a588:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a58c:	mvn	r1, #0
   1a590:	add	r0, r0, r1
   1a594:	str	r0, [fp, #-20]	; 0xffffffec
   1a598:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a59c:	cmp	r0, #0
   1a5a0:	bne	1a5b0 <__assert_fail@plt+0x92d0>
   1a5a4:	movw	r0, #0
   1a5a8:	str	r0, [fp, #-12]
   1a5ac:	b	1a6d8 <__assert_fail@plt+0x93f8>
   1a5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5b4:	mvn	r1, #0
   1a5b8:	add	r0, r0, r1
   1a5bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a5c0:	b	1a4c0 <__assert_fail@plt+0x91e0>
   1a5c4:	ldr	r0, [fp, #-16]
   1a5c8:	bl	11214 <fileno@plt>
   1a5cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a5d4:	cmp	r0, #0
   1a5d8:	blt	1a634 <__assert_fail@plt+0x9354>
   1a5dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a5e0:	mov	r1, sp
   1a5e4:	mov	r2, #1
   1a5e8:	str	r2, [r1]
   1a5ec:	mov	r1, #0
   1a5f0:	mov	r2, r1
   1a5f4:	mov	r3, r1
   1a5f8:	bl	1110c <lseek64@plt>
   1a5fc:	cmp	r1, #0
   1a600:	str	r0, [sp, #8]
   1a604:	blt	1a634 <__assert_fail@plt+0x9354>
   1a608:	b	1a60c <__assert_fail@plt+0x932c>
   1a60c:	ldr	r0, [fp, #-16]
   1a610:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a614:	mov	r3, #0
   1a618:	mov	r2, sp
   1a61c:	mov	ip, #1
   1a620:	str	ip, [r2]
   1a624:	mov	r2, r1
   1a628:	bl	139ac <__assert_fail@plt+0x26cc>
   1a62c:	str	r0, [fp, #-12]
   1a630:	b	1a6d8 <__assert_fail@plt+0x93f8>
   1a634:	b	1a638 <__assert_fail@plt+0x9358>
   1a638:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a63c:	movw	r1, #4096	; 0x1000
   1a640:	cmp	r1, r0
   1a644:	bcs	1a654 <__assert_fail@plt+0x9374>
   1a648:	movw	r0, #4096	; 0x1000
   1a64c:	str	r0, [sp, #4]
   1a650:	b	1a65c <__assert_fail@plt+0x937c>
   1a654:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a658:	str	r0, [sp, #4]
   1a65c:	ldr	r0, [sp, #4]
   1a660:	add	r1, sp, #20
   1a664:	str	r0, [sp, #16]
   1a668:	ldr	r2, [sp, #16]
   1a66c:	ldr	r3, [fp, #-16]
   1a670:	mov	r0, r1
   1a674:	movw	r1, #1
   1a678:	bl	11124 <fread@plt>
   1a67c:	ldr	r1, [sp, #16]
   1a680:	cmp	r0, r1
   1a684:	bcs	1a68c <__assert_fail@plt+0x93ac>
   1a688:	b	1a6b4 <__assert_fail@plt+0x93d4>
   1a68c:	ldr	r0, [sp, #16]
   1a690:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a694:	sub	r0, r1, r0
   1a698:	str	r0, [fp, #-20]	; 0xffffffec
   1a69c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6a0:	cmp	r0, #0
   1a6a4:	bhi	1a638 <__assert_fail@plt+0x9358>
   1a6a8:	movw	r0, #0
   1a6ac:	str	r0, [fp, #-12]
   1a6b0:	b	1a6d8 <__assert_fail@plt+0x93f8>
   1a6b4:	ldr	r0, [fp, #-16]
   1a6b8:	bl	11094 <ferror@plt>
   1a6bc:	cmp	r0, #0
   1a6c0:	beq	1a6d0 <__assert_fail@plt+0x93f0>
   1a6c4:	mvn	r0, #0
   1a6c8:	str	r0, [fp, #-12]
   1a6cc:	b	1a6d8 <__assert_fail@plt+0x93f8>
   1a6d0:	movw	r0, #0
   1a6d4:	str	r0, [fp, #-12]
   1a6d8:	ldr	r0, [fp, #-12]
   1a6dc:	sub	sp, fp, #8
   1a6e0:	pop	{r4, r5, fp, pc}
   1a6e4:	sub	sp, sp, #8
   1a6e8:	str	r0, [sp, #4]
   1a6ec:	str	r1, [sp]
   1a6f0:	ldr	r0, [sp]
   1a6f4:	ldr	r1, [sp, #4]
   1a6f8:	ldr	r2, [r1, #4]
   1a6fc:	add	r0, r2, r0
   1a700:	str	r0, [r1, #4]
   1a704:	add	sp, sp, #8
   1a708:	bx	lr
   1a70c:	push	{fp, lr}
   1a710:	mov	fp, sp
   1a714:	bl	111e4 <__errno_location@plt>
   1a718:	movw	lr, #12
   1a71c:	str	lr, [r0]
   1a720:	movw	r0, #0
   1a724:	pop	{fp, pc}
   1a728:	push	{fp, lr}
   1a72c:	mov	fp, sp
   1a730:	sub	sp, sp, #8
   1a734:	str	r0, [sp, #4]
   1a738:	ldr	r0, [sp, #4]
   1a73c:	cmn	r0, #1
   1a740:	bhi	1a754 <__assert_fail@plt+0x9474>
   1a744:	ldr	r0, [sp, #4]
   1a748:	bl	1a164 <__assert_fail@plt+0x8e84>
   1a74c:	str	r0, [sp]
   1a750:	b	1a75c <__assert_fail@plt+0x947c>
   1a754:	bl	1a70c <__assert_fail@plt+0x942c>
   1a758:	str	r0, [sp]
   1a75c:	ldr	r0, [sp]
   1a760:	mov	sp, fp
   1a764:	pop	{fp, pc}
   1a768:	push	{fp, lr}
   1a76c:	mov	fp, sp
   1a770:	sub	sp, sp, #16
   1a774:	str	r0, [fp, #-4]
   1a778:	str	r1, [sp, #8]
   1a77c:	ldr	r0, [sp, #8]
   1a780:	cmn	r0, #1
   1a784:	bhi	1a7bc <__assert_fail@plt+0x94dc>
   1a788:	ldr	r0, [fp, #-4]
   1a78c:	ldr	r1, [sp, #8]
   1a790:	ldr	r2, [sp, #8]
   1a794:	cmp	r2, #0
   1a798:	movw	r2, #0
   1a79c:	movne	r2, #1
   1a7a0:	mvn	r3, #0
   1a7a4:	eor	r2, r2, r3
   1a7a8:	and	r2, r2, #1
   1a7ac:	orr	r1, r1, r2
   1a7b0:	bl	1a1d4 <__assert_fail@plt+0x8ef4>
   1a7b4:	str	r0, [sp, #4]
   1a7b8:	b	1a7c4 <__assert_fail@plt+0x94e4>
   1a7bc:	bl	1a70c <__assert_fail@plt+0x942c>
   1a7c0:	str	r0, [sp, #4]
   1a7c4:	ldr	r0, [sp, #4]
   1a7c8:	mov	sp, fp
   1a7cc:	pop	{fp, pc}
   1a7d0:	push	{fp, lr}
   1a7d4:	mov	fp, sp
   1a7d8:	sub	sp, sp, #16
   1a7dc:	str	r0, [sp, #8]
   1a7e0:	str	r1, [sp, #4]
   1a7e4:	ldr	r0, [sp, #8]
   1a7e8:	mvn	r1, #0
   1a7ec:	cmp	r1, r0
   1a7f0:	bcs	1a814 <__assert_fail@plt+0x9534>
   1a7f4:	ldr	r0, [sp, #4]
   1a7f8:	cmp	r0, #0
   1a7fc:	beq	1a80c <__assert_fail@plt+0x952c>
   1a800:	bl	1a70c <__assert_fail@plt+0x942c>
   1a804:	str	r0, [fp, #-4]
   1a808:	b	1a854 <__assert_fail@plt+0x9574>
   1a80c:	movw	r0, #0
   1a810:	str	r0, [sp, #8]
   1a814:	ldr	r0, [sp, #4]
   1a818:	mvn	r1, #0
   1a81c:	cmp	r1, r0
   1a820:	bcs	1a844 <__assert_fail@plt+0x9564>
   1a824:	ldr	r0, [sp, #8]
   1a828:	cmp	r0, #0
   1a82c:	beq	1a83c <__assert_fail@plt+0x955c>
   1a830:	bl	1a70c <__assert_fail@plt+0x942c>
   1a834:	str	r0, [fp, #-4]
   1a838:	b	1a854 <__assert_fail@plt+0x9574>
   1a83c:	movw	r0, #0
   1a840:	str	r0, [sp, #4]
   1a844:	ldr	r0, [sp, #8]
   1a848:	ldr	r1, [sp, #4]
   1a84c:	bl	1a0c8 <__assert_fail@plt+0x8de8>
   1a850:	str	r0, [fp, #-4]
   1a854:	ldr	r0, [fp, #-4]
   1a858:	mov	sp, fp
   1a85c:	pop	{fp, pc}
   1a860:	push	{fp, lr}
   1a864:	mov	fp, sp
   1a868:	sub	sp, sp, #16
   1a86c:	str	r0, [fp, #-4]
   1a870:	str	r1, [sp, #8]
   1a874:	str	r2, [sp, #4]
   1a878:	ldr	r0, [sp, #8]
   1a87c:	cmp	r0, #0
   1a880:	beq	1a890 <__assert_fail@plt+0x95b0>
   1a884:	ldr	r0, [sp, #4]
   1a888:	cmp	r0, #0
   1a88c:	bne	1a89c <__assert_fail@plt+0x95bc>
   1a890:	movw	r0, #1
   1a894:	str	r0, [sp, #4]
   1a898:	str	r0, [sp, #8]
   1a89c:	ldr	r0, [sp, #8]
   1a8a0:	cmn	r0, #1
   1a8a4:	bhi	1a8cc <__assert_fail@plt+0x95ec>
   1a8a8:	ldr	r0, [sp, #4]
   1a8ac:	cmn	r0, #1
   1a8b0:	bhi	1a8cc <__assert_fail@plt+0x95ec>
   1a8b4:	ldr	r0, [fp, #-4]
   1a8b8:	ldr	r1, [sp, #8]
   1a8bc:	ldr	r2, [sp, #4]
   1a8c0:	bl	1a9ec <__assert_fail@plt+0x970c>
   1a8c4:	str	r0, [sp]
   1a8c8:	b	1a8d4 <__assert_fail@plt+0x95f4>
   1a8cc:	bl	1a70c <__assert_fail@plt+0x942c>
   1a8d0:	str	r0, [sp]
   1a8d4:	ldr	r0, [sp]
   1a8d8:	mov	sp, fp
   1a8dc:	pop	{fp, pc}
   1a8e0:	push	{fp, lr}
   1a8e4:	mov	fp, sp
   1a8e8:	sub	sp, sp, #8
   1a8ec:	movw	r0, #14
   1a8f0:	bl	1125c <nl_langinfo@plt>
   1a8f4:	str	r0, [sp, #4]
   1a8f8:	ldr	r0, [sp, #4]
   1a8fc:	movw	lr, #0
   1a900:	cmp	r0, lr
   1a904:	bne	1a914 <__assert_fail@plt+0x9634>
   1a908:	movw	r0, #53799	; 0xd227
   1a90c:	movt	r0, #1
   1a910:	str	r0, [sp, #4]
   1a914:	ldr	r0, [sp, #4]
   1a918:	ldrb	r0, [r0]
   1a91c:	cmp	r0, #0
   1a920:	bne	1a930 <__assert_fail@plt+0x9650>
   1a924:	movw	r0, #55649	; 0xd961
   1a928:	movt	r0, #1
   1a92c:	str	r0, [sp, #4]
   1a930:	ldr	r0, [sp, #4]
   1a934:	mov	sp, fp
   1a938:	pop	{fp, pc}
   1a93c:	push	{fp, lr}
   1a940:	mov	fp, sp
   1a944:	sub	sp, sp, #32
   1a948:	str	r0, [fp, #-8]
   1a94c:	str	r1, [fp, #-12]
   1a950:	str	r2, [sp, #16]
   1a954:	str	r3, [sp, #12]
   1a958:	ldr	r0, [fp, #-8]
   1a95c:	movw	r1, #0
   1a960:	cmp	r0, r1
   1a964:	bne	1a970 <__assert_fail@plt+0x9690>
   1a968:	add	r0, sp, #4
   1a96c:	str	r0, [fp, #-8]
   1a970:	ldr	r0, [fp, #-8]
   1a974:	ldr	r1, [fp, #-12]
   1a978:	ldr	r2, [sp, #16]
   1a97c:	ldr	r3, [sp, #12]
   1a980:	bl	11148 <mbrtowc@plt>
   1a984:	str	r0, [sp, #8]
   1a988:	ldr	r0, [sp, #8]
   1a98c:	mvn	r1, #1
   1a990:	cmp	r1, r0
   1a994:	bhi	1a9d8 <__assert_fail@plt+0x96f8>
   1a998:	ldr	r0, [sp, #16]
   1a99c:	cmp	r0, #0
   1a9a0:	beq	1a9d8 <__assert_fail@plt+0x96f8>
   1a9a4:	movw	r0, #0
   1a9a8:	bl	1c458 <__assert_fail@plt+0xb178>
   1a9ac:	tst	r0, #1
   1a9b0:	bne	1a9d8 <__assert_fail@plt+0x96f8>
   1a9b4:	ldr	r0, [fp, #-12]
   1a9b8:	ldrb	r0, [r0]
   1a9bc:	strb	r0, [sp, #3]
   1a9c0:	ldrb	r0, [sp, #3]
   1a9c4:	ldr	r1, [fp, #-8]
   1a9c8:	str	r0, [r1]
   1a9cc:	movw	r0, #1
   1a9d0:	str	r0, [fp, #-4]
   1a9d4:	b	1a9e0 <__assert_fail@plt+0x9700>
   1a9d8:	ldr	r0, [sp, #8]
   1a9dc:	str	r0, [fp, #-4]
   1a9e0:	ldr	r0, [fp, #-4]
   1a9e4:	mov	sp, fp
   1a9e8:	pop	{fp, pc}
   1a9ec:	push	{fp, lr}
   1a9f0:	mov	fp, sp
   1a9f4:	sub	sp, sp, #176	; 0xb0
   1a9f8:	str	r0, [fp, #-8]
   1a9fc:	str	r1, [fp, #-12]
   1aa00:	str	r2, [fp, #-16]
   1aa04:	b	1adbc <__assert_fail@plt+0x9adc>
   1aa08:	b	1abdc <__assert_fail@plt+0x98fc>
   1aa0c:	ldr	r0, [fp, #-16]
   1aa10:	cmp	r0, #0
   1aa14:	bcs	1ab18 <__assert_fail@plt+0x9838>
   1aa18:	ldr	r0, [fp, #-12]
   1aa1c:	cmp	r0, #0
   1aa20:	bcs	1aaa8 <__assert_fail@plt+0x97c8>
   1aa24:	b	1aa44 <__assert_fail@plt+0x9764>
   1aa28:	ldr	r0, [fp, #-12]
   1aa2c:	ldr	r1, [fp, #-16]
   1aa30:	movw	r2, #127	; 0x7f
   1aa34:	udiv	r1, r2, r1
   1aa38:	cmp	r0, r1
   1aa3c:	bcc	1abac <__assert_fail@plt+0x98cc>
   1aa40:	b	1abc4 <__assert_fail@plt+0x98e4>
   1aa44:	b	1aa58 <__assert_fail@plt+0x9778>
   1aa48:	ldr	r0, [fp, #-16]
   1aa4c:	cmp	r0, #1
   1aa50:	bcc	1aa68 <__assert_fail@plt+0x9788>
   1aa54:	b	1aa74 <__assert_fail@plt+0x9794>
   1aa58:	ldr	r0, [fp, #-16]
   1aa5c:	movw	r1, #0
   1aa60:	cmp	r1, r0
   1aa64:	bcs	1aa74 <__assert_fail@plt+0x9794>
   1aa68:	movw	r0, #0
   1aa6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1aa70:	b	1aa8c <__assert_fail@plt+0x97ac>
   1aa74:	ldr	r0, [fp, #-16]
   1aa78:	movw	r1, #0
   1aa7c:	sub	r0, r1, r0
   1aa80:	movw	r1, #127	; 0x7f
   1aa84:	udiv	r0, r1, r0
   1aa88:	str	r0, [fp, #-24]	; 0xffffffe8
   1aa8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa90:	ldr	r1, [fp, #-12]
   1aa94:	mvn	r2, #0
   1aa98:	sub	r1, r2, r1
   1aa9c:	cmp	r0, r1
   1aaa0:	bls	1abac <__assert_fail@plt+0x98cc>
   1aaa4:	b	1abc4 <__assert_fail@plt+0x98e4>
   1aaa8:	ldr	r0, [fp, #-16]
   1aaac:	cmn	r0, #1
   1aab0:	bne	1aafc <__assert_fail@plt+0x981c>
   1aab4:	b	1aad4 <__assert_fail@plt+0x97f4>
   1aab8:	ldr	r0, [fp, #-12]
   1aabc:	mvn	r1, #127	; 0x7f
   1aac0:	add	r0, r0, r1
   1aac4:	movw	r1, #0
   1aac8:	cmp	r1, r0
   1aacc:	bcc	1abac <__assert_fail@plt+0x98cc>
   1aad0:	b	1abc4 <__assert_fail@plt+0x98e4>
   1aad4:	ldr	r0, [fp, #-12]
   1aad8:	movw	r1, #0
   1aadc:	cmp	r1, r0
   1aae0:	bcs	1abc4 <__assert_fail@plt+0x98e4>
   1aae4:	ldr	r0, [fp, #-12]
   1aae8:	sub	r0, r0, #1
   1aaec:	movw	r1, #127	; 0x7f
   1aaf0:	cmp	r1, r0
   1aaf4:	bcc	1abac <__assert_fail@plt+0x98cc>
   1aaf8:	b	1abc4 <__assert_fail@plt+0x98e4>
   1aafc:	ldr	r0, [fp, #-16]
   1ab00:	mvn	r1, #127	; 0x7f
   1ab04:	udiv	r0, r1, r0
   1ab08:	ldr	r1, [fp, #-12]
   1ab0c:	cmp	r0, r1
   1ab10:	bcc	1abac <__assert_fail@plt+0x98cc>
   1ab14:	b	1abc4 <__assert_fail@plt+0x98e4>
   1ab18:	ldr	r0, [fp, #-16]
   1ab1c:	cmp	r0, #0
   1ab20:	bne	1ab28 <__assert_fail@plt+0x9848>
   1ab24:	b	1abc4 <__assert_fail@plt+0x98e4>
   1ab28:	ldr	r0, [fp, #-12]
   1ab2c:	cmp	r0, #0
   1ab30:	bcs	1ab94 <__assert_fail@plt+0x98b4>
   1ab34:	ldr	r0, [fp, #-12]
   1ab38:	cmn	r0, #1
   1ab3c:	bne	1ab78 <__assert_fail@plt+0x9898>
   1ab40:	b	1ab60 <__assert_fail@plt+0x9880>
   1ab44:	ldr	r0, [fp, #-16]
   1ab48:	mvn	r1, #127	; 0x7f
   1ab4c:	add	r0, r0, r1
   1ab50:	movw	r1, #0
   1ab54:	cmp	r1, r0
   1ab58:	bcc	1abac <__assert_fail@plt+0x98cc>
   1ab5c:	b	1abc4 <__assert_fail@plt+0x98e4>
   1ab60:	ldr	r0, [fp, #-16]
   1ab64:	sub	r0, r0, #1
   1ab68:	movw	r1, #127	; 0x7f
   1ab6c:	cmp	r1, r0
   1ab70:	bcc	1abac <__assert_fail@plt+0x98cc>
   1ab74:	b	1abc4 <__assert_fail@plt+0x98e4>
   1ab78:	ldr	r0, [fp, #-12]
   1ab7c:	mvn	r1, #127	; 0x7f
   1ab80:	udiv	r0, r1, r0
   1ab84:	ldr	r1, [fp, #-16]
   1ab88:	cmp	r0, r1
   1ab8c:	bcc	1abac <__assert_fail@plt+0x98cc>
   1ab90:	b	1abc4 <__assert_fail@plt+0x98e4>
   1ab94:	ldr	r0, [fp, #-16]
   1ab98:	movw	r1, #127	; 0x7f
   1ab9c:	udiv	r0, r1, r0
   1aba0:	ldr	r1, [fp, #-12]
   1aba4:	cmp	r0, r1
   1aba8:	bcs	1abc4 <__assert_fail@plt+0x98e4>
   1abac:	ldr	r0, [fp, #-12]
   1abb0:	ldr	r1, [fp, #-16]
   1abb4:	mul	r0, r0, r1
   1abb8:	sxtb	r0, r0
   1abbc:	str	r0, [fp, #-20]	; 0xffffffec
   1abc0:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1abc4:	ldr	r0, [fp, #-12]
   1abc8:	ldr	r1, [fp, #-16]
   1abcc:	mul	r0, r0, r1
   1abd0:	sxtb	r0, r0
   1abd4:	str	r0, [fp, #-20]	; 0xffffffec
   1abd8:	b	1bd54 <__assert_fail@plt+0xaa74>
   1abdc:	ldr	r0, [fp, #-16]
   1abe0:	cmp	r0, #0
   1abe4:	bcs	1acf0 <__assert_fail@plt+0x9a10>
   1abe8:	ldr	r0, [fp, #-12]
   1abec:	cmp	r0, #0
   1abf0:	bcs	1ac78 <__assert_fail@plt+0x9998>
   1abf4:	b	1ac14 <__assert_fail@plt+0x9934>
   1abf8:	ldr	r0, [fp, #-12]
   1abfc:	ldr	r1, [fp, #-16]
   1ac00:	movw	r2, #255	; 0xff
   1ac04:	udiv	r1, r2, r1
   1ac08:	cmp	r0, r1
   1ac0c:	bcc	1ad8c <__assert_fail@plt+0x9aac>
   1ac10:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1ac14:	b	1ac28 <__assert_fail@plt+0x9948>
   1ac18:	ldr	r0, [fp, #-16]
   1ac1c:	cmp	r0, #1
   1ac20:	bcc	1ac38 <__assert_fail@plt+0x9958>
   1ac24:	b	1ac44 <__assert_fail@plt+0x9964>
   1ac28:	ldr	r0, [fp, #-16]
   1ac2c:	movw	r1, #0
   1ac30:	cmp	r1, r0
   1ac34:	bcs	1ac44 <__assert_fail@plt+0x9964>
   1ac38:	movw	r0, #0
   1ac3c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac40:	b	1ac5c <__assert_fail@plt+0x997c>
   1ac44:	ldr	r0, [fp, #-16]
   1ac48:	movw	r1, #0
   1ac4c:	sub	r0, r1, r0
   1ac50:	movw	r1, #255	; 0xff
   1ac54:	udiv	r0, r1, r0
   1ac58:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ac60:	ldr	r1, [fp, #-12]
   1ac64:	mvn	r2, #0
   1ac68:	sub	r1, r2, r1
   1ac6c:	cmp	r0, r1
   1ac70:	bls	1ad8c <__assert_fail@plt+0x9aac>
   1ac74:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1ac78:	b	1ac80 <__assert_fail@plt+0x99a0>
   1ac7c:	b	1ac84 <__assert_fail@plt+0x99a4>
   1ac80:	b	1acd4 <__assert_fail@plt+0x99f4>
   1ac84:	ldr	r0, [fp, #-16]
   1ac88:	cmn	r0, #1
   1ac8c:	bne	1acd4 <__assert_fail@plt+0x99f4>
   1ac90:	b	1acac <__assert_fail@plt+0x99cc>
   1ac94:	ldr	r0, [fp, #-12]
   1ac98:	add	r0, r0, #0
   1ac9c:	movw	r1, #0
   1aca0:	cmp	r1, r0
   1aca4:	bcc	1ad8c <__assert_fail@plt+0x9aac>
   1aca8:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1acac:	ldr	r0, [fp, #-12]
   1acb0:	movw	r1, #0
   1acb4:	cmp	r1, r0
   1acb8:	bcs	1ada4 <__assert_fail@plt+0x9ac4>
   1acbc:	ldr	r0, [fp, #-12]
   1acc0:	sub	r0, r0, #1
   1acc4:	mvn	r1, #0
   1acc8:	cmp	r1, r0
   1accc:	bcc	1ad8c <__assert_fail@plt+0x9aac>
   1acd0:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1acd4:	ldr	r0, [fp, #-16]
   1acd8:	movw	r1, #0
   1acdc:	udiv	r0, r1, r0
   1ace0:	ldr	r1, [fp, #-12]
   1ace4:	cmp	r0, r1
   1ace8:	bcc	1ad8c <__assert_fail@plt+0x9aac>
   1acec:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1acf0:	ldr	r0, [fp, #-16]
   1acf4:	cmp	r0, #0
   1acf8:	bne	1ad00 <__assert_fail@plt+0x9a20>
   1acfc:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1ad00:	ldr	r0, [fp, #-12]
   1ad04:	cmp	r0, #0
   1ad08:	bcs	1ad74 <__assert_fail@plt+0x9a94>
   1ad0c:	b	1ad14 <__assert_fail@plt+0x9a34>
   1ad10:	b	1ad18 <__assert_fail@plt+0x9a38>
   1ad14:	b	1ad58 <__assert_fail@plt+0x9a78>
   1ad18:	ldr	r0, [fp, #-12]
   1ad1c:	cmn	r0, #1
   1ad20:	bne	1ad58 <__assert_fail@plt+0x9a78>
   1ad24:	b	1ad40 <__assert_fail@plt+0x9a60>
   1ad28:	ldr	r0, [fp, #-16]
   1ad2c:	add	r0, r0, #0
   1ad30:	movw	r1, #0
   1ad34:	cmp	r1, r0
   1ad38:	bcc	1ad8c <__assert_fail@plt+0x9aac>
   1ad3c:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1ad40:	ldr	r0, [fp, #-16]
   1ad44:	sub	r0, r0, #1
   1ad48:	mvn	r1, #0
   1ad4c:	cmp	r1, r0
   1ad50:	bcc	1ad8c <__assert_fail@plt+0x9aac>
   1ad54:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1ad58:	ldr	r0, [fp, #-12]
   1ad5c:	movw	r1, #0
   1ad60:	udiv	r0, r1, r0
   1ad64:	ldr	r1, [fp, #-16]
   1ad68:	cmp	r0, r1
   1ad6c:	bcc	1ad8c <__assert_fail@plt+0x9aac>
   1ad70:	b	1ada4 <__assert_fail@plt+0x9ac4>
   1ad74:	ldr	r0, [fp, #-16]
   1ad78:	movw	r1, #255	; 0xff
   1ad7c:	udiv	r0, r1, r0
   1ad80:	ldr	r1, [fp, #-12]
   1ad84:	cmp	r0, r1
   1ad88:	bcs	1ada4 <__assert_fail@plt+0x9ac4>
   1ad8c:	ldr	r0, [fp, #-12]
   1ad90:	ldr	r1, [fp, #-16]
   1ad94:	mul	r0, r0, r1
   1ad98:	and	r0, r0, #255	; 0xff
   1ad9c:	str	r0, [fp, #-20]	; 0xffffffec
   1ada0:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1ada4:	ldr	r0, [fp, #-12]
   1ada8:	ldr	r1, [fp, #-16]
   1adac:	mul	r0, r0, r1
   1adb0:	and	r0, r0, #255	; 0xff
   1adb4:	str	r0, [fp, #-20]	; 0xffffffec
   1adb8:	b	1bd54 <__assert_fail@plt+0xaa74>
   1adbc:	b	1b174 <__assert_fail@plt+0x9e94>
   1adc0:	b	1af94 <__assert_fail@plt+0x9cb4>
   1adc4:	ldr	r0, [fp, #-16]
   1adc8:	cmp	r0, #0
   1adcc:	bcs	1aed0 <__assert_fail@plt+0x9bf0>
   1add0:	ldr	r0, [fp, #-12]
   1add4:	cmp	r0, #0
   1add8:	bcs	1ae60 <__assert_fail@plt+0x9b80>
   1addc:	b	1adfc <__assert_fail@plt+0x9b1c>
   1ade0:	ldr	r0, [fp, #-12]
   1ade4:	ldr	r1, [fp, #-16]
   1ade8:	movw	r2, #32767	; 0x7fff
   1adec:	udiv	r1, r2, r1
   1adf0:	cmp	r0, r1
   1adf4:	bcc	1af64 <__assert_fail@plt+0x9c84>
   1adf8:	b	1af7c <__assert_fail@plt+0x9c9c>
   1adfc:	b	1ae10 <__assert_fail@plt+0x9b30>
   1ae00:	ldr	r0, [fp, #-16]
   1ae04:	cmp	r0, #1
   1ae08:	bcc	1ae20 <__assert_fail@plt+0x9b40>
   1ae0c:	b	1ae2c <__assert_fail@plt+0x9b4c>
   1ae10:	ldr	r0, [fp, #-16]
   1ae14:	movw	r1, #0
   1ae18:	cmp	r1, r0
   1ae1c:	bcs	1ae2c <__assert_fail@plt+0x9b4c>
   1ae20:	movw	r0, #0
   1ae24:	str	r0, [fp, #-32]	; 0xffffffe0
   1ae28:	b	1ae44 <__assert_fail@plt+0x9b64>
   1ae2c:	ldr	r0, [fp, #-16]
   1ae30:	movw	r1, #0
   1ae34:	sub	r0, r1, r0
   1ae38:	movw	r1, #32767	; 0x7fff
   1ae3c:	udiv	r0, r1, r0
   1ae40:	str	r0, [fp, #-32]	; 0xffffffe0
   1ae44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae48:	ldr	r1, [fp, #-12]
   1ae4c:	mvn	r2, #0
   1ae50:	sub	r1, r2, r1
   1ae54:	cmp	r0, r1
   1ae58:	bls	1af64 <__assert_fail@plt+0x9c84>
   1ae5c:	b	1af7c <__assert_fail@plt+0x9c9c>
   1ae60:	ldr	r0, [fp, #-16]
   1ae64:	cmn	r0, #1
   1ae68:	bne	1aeb4 <__assert_fail@plt+0x9bd4>
   1ae6c:	b	1ae8c <__assert_fail@plt+0x9bac>
   1ae70:	ldr	r0, [pc, #3840]	; 1bd78 <__assert_fail@plt+0xaa98>
   1ae74:	ldr	r1, [fp, #-12]
   1ae78:	add	r0, r1, r0
   1ae7c:	movw	r1, #0
   1ae80:	cmp	r1, r0
   1ae84:	bcc	1af64 <__assert_fail@plt+0x9c84>
   1ae88:	b	1af7c <__assert_fail@plt+0x9c9c>
   1ae8c:	ldr	r0, [fp, #-12]
   1ae90:	movw	r1, #0
   1ae94:	cmp	r1, r0
   1ae98:	bcs	1af7c <__assert_fail@plt+0x9c9c>
   1ae9c:	ldr	r0, [fp, #-12]
   1aea0:	sub	r0, r0, #1
   1aea4:	movw	r1, #32767	; 0x7fff
   1aea8:	cmp	r1, r0
   1aeac:	bcc	1af64 <__assert_fail@plt+0x9c84>
   1aeb0:	b	1af7c <__assert_fail@plt+0x9c9c>
   1aeb4:	ldr	r0, [pc, #3772]	; 1bd78 <__assert_fail@plt+0xaa98>
   1aeb8:	ldr	r1, [fp, #-16]
   1aebc:	udiv	r0, r0, r1
   1aec0:	ldr	r1, [fp, #-12]
   1aec4:	cmp	r0, r1
   1aec8:	bcc	1af64 <__assert_fail@plt+0x9c84>
   1aecc:	b	1af7c <__assert_fail@plt+0x9c9c>
   1aed0:	ldr	r0, [fp, #-16]
   1aed4:	cmp	r0, #0
   1aed8:	bne	1aee0 <__assert_fail@plt+0x9c00>
   1aedc:	b	1af7c <__assert_fail@plt+0x9c9c>
   1aee0:	ldr	r0, [fp, #-12]
   1aee4:	cmp	r0, #0
   1aee8:	bcs	1af4c <__assert_fail@plt+0x9c6c>
   1aeec:	ldr	r0, [fp, #-12]
   1aef0:	cmn	r0, #1
   1aef4:	bne	1af30 <__assert_fail@plt+0x9c50>
   1aef8:	b	1af18 <__assert_fail@plt+0x9c38>
   1aefc:	ldr	r0, [pc, #3700]	; 1bd78 <__assert_fail@plt+0xaa98>
   1af00:	ldr	r1, [fp, #-16]
   1af04:	add	r0, r1, r0
   1af08:	movw	r1, #0
   1af0c:	cmp	r1, r0
   1af10:	bcc	1af64 <__assert_fail@plt+0x9c84>
   1af14:	b	1af7c <__assert_fail@plt+0x9c9c>
   1af18:	ldr	r0, [fp, #-16]
   1af1c:	sub	r0, r0, #1
   1af20:	movw	r1, #32767	; 0x7fff
   1af24:	cmp	r1, r0
   1af28:	bcc	1af64 <__assert_fail@plt+0x9c84>
   1af2c:	b	1af7c <__assert_fail@plt+0x9c9c>
   1af30:	ldr	r0, [pc, #3648]	; 1bd78 <__assert_fail@plt+0xaa98>
   1af34:	ldr	r1, [fp, #-12]
   1af38:	udiv	r0, r0, r1
   1af3c:	ldr	r1, [fp, #-16]
   1af40:	cmp	r0, r1
   1af44:	bcc	1af64 <__assert_fail@plt+0x9c84>
   1af48:	b	1af7c <__assert_fail@plt+0x9c9c>
   1af4c:	ldr	r0, [fp, #-16]
   1af50:	movw	r1, #32767	; 0x7fff
   1af54:	udiv	r0, r1, r0
   1af58:	ldr	r1, [fp, #-12]
   1af5c:	cmp	r0, r1
   1af60:	bcs	1af7c <__assert_fail@plt+0x9c9c>
   1af64:	ldr	r0, [fp, #-12]
   1af68:	ldr	r1, [fp, #-16]
   1af6c:	mul	r0, r0, r1
   1af70:	sxth	r0, r0
   1af74:	str	r0, [fp, #-20]	; 0xffffffec
   1af78:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1af7c:	ldr	r0, [fp, #-12]
   1af80:	ldr	r1, [fp, #-16]
   1af84:	mul	r0, r0, r1
   1af88:	sxth	r0, r0
   1af8c:	str	r0, [fp, #-20]	; 0xffffffec
   1af90:	b	1bd54 <__assert_fail@plt+0xaa74>
   1af94:	ldr	r0, [fp, #-16]
   1af98:	cmp	r0, #0
   1af9c:	bcs	1b0a8 <__assert_fail@plt+0x9dc8>
   1afa0:	ldr	r0, [fp, #-12]
   1afa4:	cmp	r0, #0
   1afa8:	bcs	1b030 <__assert_fail@plt+0x9d50>
   1afac:	b	1afcc <__assert_fail@plt+0x9cec>
   1afb0:	ldr	r0, [fp, #-12]
   1afb4:	ldr	r1, [fp, #-16]
   1afb8:	movw	r2, #65535	; 0xffff
   1afbc:	udiv	r1, r2, r1
   1afc0:	cmp	r0, r1
   1afc4:	bcc	1b144 <__assert_fail@plt+0x9e64>
   1afc8:	b	1b15c <__assert_fail@plt+0x9e7c>
   1afcc:	b	1afe0 <__assert_fail@plt+0x9d00>
   1afd0:	ldr	r0, [fp, #-16]
   1afd4:	cmp	r0, #1
   1afd8:	bcc	1aff0 <__assert_fail@plt+0x9d10>
   1afdc:	b	1affc <__assert_fail@plt+0x9d1c>
   1afe0:	ldr	r0, [fp, #-16]
   1afe4:	movw	r1, #0
   1afe8:	cmp	r1, r0
   1afec:	bcs	1affc <__assert_fail@plt+0x9d1c>
   1aff0:	movw	r0, #0
   1aff4:	str	r0, [fp, #-36]	; 0xffffffdc
   1aff8:	b	1b014 <__assert_fail@plt+0x9d34>
   1affc:	ldr	r0, [fp, #-16]
   1b000:	movw	r1, #0
   1b004:	sub	r0, r1, r0
   1b008:	movw	r1, #65535	; 0xffff
   1b00c:	udiv	r0, r1, r0
   1b010:	str	r0, [fp, #-36]	; 0xffffffdc
   1b014:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b018:	ldr	r1, [fp, #-12]
   1b01c:	mvn	r2, #0
   1b020:	sub	r1, r2, r1
   1b024:	cmp	r0, r1
   1b028:	bls	1b144 <__assert_fail@plt+0x9e64>
   1b02c:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b030:	b	1b038 <__assert_fail@plt+0x9d58>
   1b034:	b	1b03c <__assert_fail@plt+0x9d5c>
   1b038:	b	1b08c <__assert_fail@plt+0x9dac>
   1b03c:	ldr	r0, [fp, #-16]
   1b040:	cmn	r0, #1
   1b044:	bne	1b08c <__assert_fail@plt+0x9dac>
   1b048:	b	1b064 <__assert_fail@plt+0x9d84>
   1b04c:	ldr	r0, [fp, #-12]
   1b050:	add	r0, r0, #0
   1b054:	movw	r1, #0
   1b058:	cmp	r1, r0
   1b05c:	bcc	1b144 <__assert_fail@plt+0x9e64>
   1b060:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b064:	ldr	r0, [fp, #-12]
   1b068:	movw	r1, #0
   1b06c:	cmp	r1, r0
   1b070:	bcs	1b15c <__assert_fail@plt+0x9e7c>
   1b074:	ldr	r0, [fp, #-12]
   1b078:	sub	r0, r0, #1
   1b07c:	mvn	r1, #0
   1b080:	cmp	r1, r0
   1b084:	bcc	1b144 <__assert_fail@plt+0x9e64>
   1b088:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b08c:	ldr	r0, [fp, #-16]
   1b090:	movw	r1, #0
   1b094:	udiv	r0, r1, r0
   1b098:	ldr	r1, [fp, #-12]
   1b09c:	cmp	r0, r1
   1b0a0:	bcc	1b144 <__assert_fail@plt+0x9e64>
   1b0a4:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b0a8:	ldr	r0, [fp, #-16]
   1b0ac:	cmp	r0, #0
   1b0b0:	bne	1b0b8 <__assert_fail@plt+0x9dd8>
   1b0b4:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b0b8:	ldr	r0, [fp, #-12]
   1b0bc:	cmp	r0, #0
   1b0c0:	bcs	1b12c <__assert_fail@plt+0x9e4c>
   1b0c4:	b	1b0cc <__assert_fail@plt+0x9dec>
   1b0c8:	b	1b0d0 <__assert_fail@plt+0x9df0>
   1b0cc:	b	1b110 <__assert_fail@plt+0x9e30>
   1b0d0:	ldr	r0, [fp, #-12]
   1b0d4:	cmn	r0, #1
   1b0d8:	bne	1b110 <__assert_fail@plt+0x9e30>
   1b0dc:	b	1b0f8 <__assert_fail@plt+0x9e18>
   1b0e0:	ldr	r0, [fp, #-16]
   1b0e4:	add	r0, r0, #0
   1b0e8:	movw	r1, #0
   1b0ec:	cmp	r1, r0
   1b0f0:	bcc	1b144 <__assert_fail@plt+0x9e64>
   1b0f4:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b0f8:	ldr	r0, [fp, #-16]
   1b0fc:	sub	r0, r0, #1
   1b100:	mvn	r1, #0
   1b104:	cmp	r1, r0
   1b108:	bcc	1b144 <__assert_fail@plt+0x9e64>
   1b10c:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b110:	ldr	r0, [fp, #-12]
   1b114:	movw	r1, #0
   1b118:	udiv	r0, r1, r0
   1b11c:	ldr	r1, [fp, #-16]
   1b120:	cmp	r0, r1
   1b124:	bcc	1b144 <__assert_fail@plt+0x9e64>
   1b128:	b	1b15c <__assert_fail@plt+0x9e7c>
   1b12c:	ldr	r0, [fp, #-16]
   1b130:	movw	r1, #65535	; 0xffff
   1b134:	udiv	r0, r1, r0
   1b138:	ldr	r1, [fp, #-12]
   1b13c:	cmp	r0, r1
   1b140:	bcs	1b15c <__assert_fail@plt+0x9e7c>
   1b144:	ldr	r0, [fp, #-12]
   1b148:	ldr	r1, [fp, #-16]
   1b14c:	mul	r0, r0, r1
   1b150:	uxth	r0, r0
   1b154:	str	r0, [fp, #-20]	; 0xffffffec
   1b158:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1b15c:	ldr	r0, [fp, #-12]
   1b160:	ldr	r1, [fp, #-16]
   1b164:	mul	r0, r0, r1
   1b168:	uxth	r0, r0
   1b16c:	str	r0, [fp, #-20]	; 0xffffffec
   1b170:	b	1bd54 <__assert_fail@plt+0xaa74>
   1b174:	b	1b178 <__assert_fail@plt+0x9e98>
   1b178:	b	1b33c <__assert_fail@plt+0xa05c>
   1b17c:	ldr	r0, [fp, #-16]
   1b180:	cmp	r0, #0
   1b184:	bcs	1b284 <__assert_fail@plt+0x9fa4>
   1b188:	ldr	r0, [fp, #-12]
   1b18c:	cmp	r0, #0
   1b190:	bcs	1b218 <__assert_fail@plt+0x9f38>
   1b194:	b	1b1b4 <__assert_fail@plt+0x9ed4>
   1b198:	ldr	r0, [pc, #3024]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b19c:	ldr	r1, [fp, #-12]
   1b1a0:	ldr	r2, [fp, #-16]
   1b1a4:	udiv	r0, r0, r2
   1b1a8:	cmp	r1, r0
   1b1ac:	bcc	1b314 <__assert_fail@plt+0xa034>
   1b1b0:	b	1b328 <__assert_fail@plt+0xa048>
   1b1b4:	b	1b1c8 <__assert_fail@plt+0x9ee8>
   1b1b8:	ldr	r0, [fp, #-16]
   1b1bc:	cmp	r0, #1
   1b1c0:	bcc	1b1d8 <__assert_fail@plt+0x9ef8>
   1b1c4:	b	1b1e4 <__assert_fail@plt+0x9f04>
   1b1c8:	ldr	r0, [fp, #-16]
   1b1cc:	movw	r1, #0
   1b1d0:	cmp	r1, r0
   1b1d4:	bcs	1b1e4 <__assert_fail@plt+0x9f04>
   1b1d8:	movw	r0, #0
   1b1dc:	str	r0, [fp, #-40]	; 0xffffffd8
   1b1e0:	b	1b1fc <__assert_fail@plt+0x9f1c>
   1b1e4:	ldr	r0, [pc, #2948]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b1e8:	ldr	r1, [fp, #-16]
   1b1ec:	movw	r2, #0
   1b1f0:	sub	r1, r2, r1
   1b1f4:	udiv	r0, r0, r1
   1b1f8:	str	r0, [fp, #-40]	; 0xffffffd8
   1b1fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b200:	ldr	r1, [fp, #-12]
   1b204:	mvn	r2, #0
   1b208:	sub	r1, r2, r1
   1b20c:	cmp	r0, r1
   1b210:	bls	1b314 <__assert_fail@plt+0xa034>
   1b214:	b	1b328 <__assert_fail@plt+0xa048>
   1b218:	ldr	r0, [fp, #-16]
   1b21c:	cmn	r0, #1
   1b220:	bne	1b268 <__assert_fail@plt+0x9f88>
   1b224:	b	1b240 <__assert_fail@plt+0x9f60>
   1b228:	ldr	r0, [fp, #-12]
   1b22c:	add	r0, r0, #-2147483648	; 0x80000000
   1b230:	movw	r1, #0
   1b234:	cmp	r1, r0
   1b238:	bcc	1b314 <__assert_fail@plt+0xa034>
   1b23c:	b	1b328 <__assert_fail@plt+0xa048>
   1b240:	ldr	r0, [fp, #-12]
   1b244:	movw	r1, #0
   1b248:	cmp	r1, r0
   1b24c:	bcs	1b328 <__assert_fail@plt+0xa048>
   1b250:	ldr	r0, [pc, #2840]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b254:	ldr	r1, [fp, #-12]
   1b258:	sub	r1, r1, #1
   1b25c:	cmp	r0, r1
   1b260:	bcc	1b314 <__assert_fail@plt+0xa034>
   1b264:	b	1b328 <__assert_fail@plt+0xa048>
   1b268:	ldr	r0, [pc, #2820]	; 1bd74 <__assert_fail@plt+0xaa94>
   1b26c:	ldr	r1, [fp, #-16]
   1b270:	udiv	r0, r0, r1
   1b274:	ldr	r1, [fp, #-12]
   1b278:	cmp	r0, r1
   1b27c:	bcc	1b314 <__assert_fail@plt+0xa034>
   1b280:	b	1b328 <__assert_fail@plt+0xa048>
   1b284:	ldr	r0, [fp, #-16]
   1b288:	cmp	r0, #0
   1b28c:	bne	1b294 <__assert_fail@plt+0x9fb4>
   1b290:	b	1b328 <__assert_fail@plt+0xa048>
   1b294:	ldr	r0, [fp, #-12]
   1b298:	cmp	r0, #0
   1b29c:	bcs	1b2fc <__assert_fail@plt+0xa01c>
   1b2a0:	ldr	r0, [fp, #-12]
   1b2a4:	cmn	r0, #1
   1b2a8:	bne	1b2e0 <__assert_fail@plt+0xa000>
   1b2ac:	b	1b2c8 <__assert_fail@plt+0x9fe8>
   1b2b0:	ldr	r0, [fp, #-16]
   1b2b4:	add	r0, r0, #-2147483648	; 0x80000000
   1b2b8:	movw	r1, #0
   1b2bc:	cmp	r1, r0
   1b2c0:	bcc	1b314 <__assert_fail@plt+0xa034>
   1b2c4:	b	1b328 <__assert_fail@plt+0xa048>
   1b2c8:	ldr	r0, [pc, #2720]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b2cc:	ldr	r1, [fp, #-16]
   1b2d0:	sub	r1, r1, #1
   1b2d4:	cmp	r0, r1
   1b2d8:	bcc	1b314 <__assert_fail@plt+0xa034>
   1b2dc:	b	1b328 <__assert_fail@plt+0xa048>
   1b2e0:	ldr	r0, [pc, #2700]	; 1bd74 <__assert_fail@plt+0xaa94>
   1b2e4:	ldr	r1, [fp, #-12]
   1b2e8:	udiv	r0, r0, r1
   1b2ec:	ldr	r1, [fp, #-16]
   1b2f0:	cmp	r0, r1
   1b2f4:	bcc	1b314 <__assert_fail@plt+0xa034>
   1b2f8:	b	1b328 <__assert_fail@plt+0xa048>
   1b2fc:	ldr	r0, [pc, #2668]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b300:	ldr	r1, [fp, #-16]
   1b304:	udiv	r0, r0, r1
   1b308:	ldr	r1, [fp, #-12]
   1b30c:	cmp	r0, r1
   1b310:	bcs	1b328 <__assert_fail@plt+0xa048>
   1b314:	ldr	r0, [fp, #-12]
   1b318:	ldr	r1, [fp, #-16]
   1b31c:	mul	r0, r0, r1
   1b320:	str	r0, [fp, #-20]	; 0xffffffec
   1b324:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1b328:	ldr	r0, [fp, #-12]
   1b32c:	ldr	r1, [fp, #-16]
   1b330:	mul	r0, r0, r1
   1b334:	str	r0, [fp, #-20]	; 0xffffffec
   1b338:	b	1bd54 <__assert_fail@plt+0xaa74>
   1b33c:	ldr	r0, [fp, #-16]
   1b340:	cmp	r0, #0
   1b344:	bcs	1b450 <__assert_fail@plt+0xa170>
   1b348:	ldr	r0, [fp, #-12]
   1b34c:	cmp	r0, #0
   1b350:	bcs	1b3d8 <__assert_fail@plt+0xa0f8>
   1b354:	b	1b374 <__assert_fail@plt+0xa094>
   1b358:	ldr	r0, [fp, #-12]
   1b35c:	ldr	r1, [fp, #-16]
   1b360:	mvn	r2, #0
   1b364:	udiv	r1, r2, r1
   1b368:	cmp	r0, r1
   1b36c:	bcc	1b4ec <__assert_fail@plt+0xa20c>
   1b370:	b	1b500 <__assert_fail@plt+0xa220>
   1b374:	b	1b388 <__assert_fail@plt+0xa0a8>
   1b378:	ldr	r0, [fp, #-16]
   1b37c:	cmp	r0, #1
   1b380:	bcc	1b398 <__assert_fail@plt+0xa0b8>
   1b384:	b	1b3a4 <__assert_fail@plt+0xa0c4>
   1b388:	ldr	r0, [fp, #-16]
   1b38c:	movw	r1, #0
   1b390:	cmp	r1, r0
   1b394:	bcs	1b3a4 <__assert_fail@plt+0xa0c4>
   1b398:	movw	r0, #1
   1b39c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b3a0:	b	1b3bc <__assert_fail@plt+0xa0dc>
   1b3a4:	ldr	r0, [fp, #-16]
   1b3a8:	movw	r1, #0
   1b3ac:	sub	r0, r1, r0
   1b3b0:	mvn	r1, #0
   1b3b4:	udiv	r0, r1, r0
   1b3b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1b3bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3c0:	ldr	r1, [fp, #-12]
   1b3c4:	mvn	r2, #0
   1b3c8:	sub	r1, r2, r1
   1b3cc:	cmp	r0, r1
   1b3d0:	bls	1b4ec <__assert_fail@plt+0xa20c>
   1b3d4:	b	1b500 <__assert_fail@plt+0xa220>
   1b3d8:	b	1b3e0 <__assert_fail@plt+0xa100>
   1b3dc:	b	1b3e4 <__assert_fail@plt+0xa104>
   1b3e0:	b	1b434 <__assert_fail@plt+0xa154>
   1b3e4:	ldr	r0, [fp, #-16]
   1b3e8:	cmn	r0, #1
   1b3ec:	bne	1b434 <__assert_fail@plt+0xa154>
   1b3f0:	b	1b40c <__assert_fail@plt+0xa12c>
   1b3f4:	ldr	r0, [fp, #-12]
   1b3f8:	add	r0, r0, #0
   1b3fc:	movw	r1, #0
   1b400:	cmp	r1, r0
   1b404:	bcc	1b4ec <__assert_fail@plt+0xa20c>
   1b408:	b	1b500 <__assert_fail@plt+0xa220>
   1b40c:	ldr	r0, [fp, #-12]
   1b410:	movw	r1, #0
   1b414:	cmp	r1, r0
   1b418:	bcs	1b500 <__assert_fail@plt+0xa220>
   1b41c:	ldr	r0, [fp, #-12]
   1b420:	sub	r0, r0, #1
   1b424:	mvn	r1, #0
   1b428:	cmp	r1, r0
   1b42c:	bcc	1b4ec <__assert_fail@plt+0xa20c>
   1b430:	b	1b500 <__assert_fail@plt+0xa220>
   1b434:	ldr	r0, [fp, #-16]
   1b438:	movw	r1, #0
   1b43c:	udiv	r0, r1, r0
   1b440:	ldr	r1, [fp, #-12]
   1b444:	cmp	r0, r1
   1b448:	bcc	1b4ec <__assert_fail@plt+0xa20c>
   1b44c:	b	1b500 <__assert_fail@plt+0xa220>
   1b450:	ldr	r0, [fp, #-16]
   1b454:	cmp	r0, #0
   1b458:	bne	1b460 <__assert_fail@plt+0xa180>
   1b45c:	b	1b500 <__assert_fail@plt+0xa220>
   1b460:	ldr	r0, [fp, #-12]
   1b464:	cmp	r0, #0
   1b468:	bcs	1b4d4 <__assert_fail@plt+0xa1f4>
   1b46c:	b	1b474 <__assert_fail@plt+0xa194>
   1b470:	b	1b478 <__assert_fail@plt+0xa198>
   1b474:	b	1b4b8 <__assert_fail@plt+0xa1d8>
   1b478:	ldr	r0, [fp, #-12]
   1b47c:	cmn	r0, #1
   1b480:	bne	1b4b8 <__assert_fail@plt+0xa1d8>
   1b484:	b	1b4a0 <__assert_fail@plt+0xa1c0>
   1b488:	ldr	r0, [fp, #-16]
   1b48c:	add	r0, r0, #0
   1b490:	movw	r1, #0
   1b494:	cmp	r1, r0
   1b498:	bcc	1b4ec <__assert_fail@plt+0xa20c>
   1b49c:	b	1b500 <__assert_fail@plt+0xa220>
   1b4a0:	ldr	r0, [fp, #-16]
   1b4a4:	sub	r0, r0, #1
   1b4a8:	mvn	r1, #0
   1b4ac:	cmp	r1, r0
   1b4b0:	bcc	1b4ec <__assert_fail@plt+0xa20c>
   1b4b4:	b	1b500 <__assert_fail@plt+0xa220>
   1b4b8:	ldr	r0, [fp, #-12]
   1b4bc:	movw	r1, #0
   1b4c0:	udiv	r0, r1, r0
   1b4c4:	ldr	r1, [fp, #-16]
   1b4c8:	cmp	r0, r1
   1b4cc:	bcc	1b4ec <__assert_fail@plt+0xa20c>
   1b4d0:	b	1b500 <__assert_fail@plt+0xa220>
   1b4d4:	ldr	r0, [fp, #-16]
   1b4d8:	mvn	r1, #0
   1b4dc:	udiv	r0, r1, r0
   1b4e0:	ldr	r1, [fp, #-12]
   1b4e4:	cmp	r0, r1
   1b4e8:	bcs	1b500 <__assert_fail@plt+0xa220>
   1b4ec:	ldr	r0, [fp, #-12]
   1b4f0:	ldr	r1, [fp, #-16]
   1b4f4:	mul	r0, r0, r1
   1b4f8:	str	r0, [fp, #-20]	; 0xffffffec
   1b4fc:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1b500:	ldr	r0, [fp, #-12]
   1b504:	ldr	r1, [fp, #-16]
   1b508:	mul	r0, r0, r1
   1b50c:	str	r0, [fp, #-20]	; 0xffffffec
   1b510:	b	1bd54 <__assert_fail@plt+0xaa74>
   1b514:	b	1b518 <__assert_fail@plt+0xa238>
   1b518:	b	1b6dc <__assert_fail@plt+0xa3fc>
   1b51c:	ldr	r0, [fp, #-16]
   1b520:	cmp	r0, #0
   1b524:	bcs	1b624 <__assert_fail@plt+0xa344>
   1b528:	ldr	r0, [fp, #-12]
   1b52c:	cmp	r0, #0
   1b530:	bcs	1b5b8 <__assert_fail@plt+0xa2d8>
   1b534:	b	1b554 <__assert_fail@plt+0xa274>
   1b538:	ldr	r0, [pc, #2096]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b53c:	ldr	r1, [fp, #-12]
   1b540:	ldr	r2, [fp, #-16]
   1b544:	udiv	r0, r0, r2
   1b548:	cmp	r1, r0
   1b54c:	bcc	1b6b4 <__assert_fail@plt+0xa3d4>
   1b550:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b554:	b	1b568 <__assert_fail@plt+0xa288>
   1b558:	ldr	r0, [fp, #-16]
   1b55c:	cmp	r0, #1
   1b560:	bcc	1b578 <__assert_fail@plt+0xa298>
   1b564:	b	1b584 <__assert_fail@plt+0xa2a4>
   1b568:	ldr	r0, [fp, #-16]
   1b56c:	movw	r1, #0
   1b570:	cmp	r1, r0
   1b574:	bcs	1b584 <__assert_fail@plt+0xa2a4>
   1b578:	movw	r0, #0
   1b57c:	str	r0, [fp, #-48]	; 0xffffffd0
   1b580:	b	1b59c <__assert_fail@plt+0xa2bc>
   1b584:	ldr	r0, [pc, #2020]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b588:	ldr	r1, [fp, #-16]
   1b58c:	movw	r2, #0
   1b590:	sub	r1, r2, r1
   1b594:	udiv	r0, r0, r1
   1b598:	str	r0, [fp, #-48]	; 0xffffffd0
   1b59c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b5a0:	ldr	r1, [fp, #-12]
   1b5a4:	mvn	r2, #0
   1b5a8:	sub	r1, r2, r1
   1b5ac:	cmp	r0, r1
   1b5b0:	bls	1b6b4 <__assert_fail@plt+0xa3d4>
   1b5b4:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b5b8:	ldr	r0, [fp, #-16]
   1b5bc:	cmn	r0, #1
   1b5c0:	bne	1b608 <__assert_fail@plt+0xa328>
   1b5c4:	b	1b5e0 <__assert_fail@plt+0xa300>
   1b5c8:	ldr	r0, [fp, #-12]
   1b5cc:	add	r0, r0, #-2147483648	; 0x80000000
   1b5d0:	movw	r1, #0
   1b5d4:	cmp	r1, r0
   1b5d8:	bcc	1b6b4 <__assert_fail@plt+0xa3d4>
   1b5dc:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b5e0:	ldr	r0, [fp, #-12]
   1b5e4:	movw	r1, #0
   1b5e8:	cmp	r1, r0
   1b5ec:	bcs	1b6c8 <__assert_fail@plt+0xa3e8>
   1b5f0:	ldr	r0, [pc, #1912]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b5f4:	ldr	r1, [fp, #-12]
   1b5f8:	sub	r1, r1, #1
   1b5fc:	cmp	r0, r1
   1b600:	bcc	1b6b4 <__assert_fail@plt+0xa3d4>
   1b604:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b608:	ldr	r0, [pc, #1892]	; 1bd74 <__assert_fail@plt+0xaa94>
   1b60c:	ldr	r1, [fp, #-16]
   1b610:	udiv	r0, r0, r1
   1b614:	ldr	r1, [fp, #-12]
   1b618:	cmp	r0, r1
   1b61c:	bcc	1b6b4 <__assert_fail@plt+0xa3d4>
   1b620:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b624:	ldr	r0, [fp, #-16]
   1b628:	cmp	r0, #0
   1b62c:	bne	1b634 <__assert_fail@plt+0xa354>
   1b630:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b634:	ldr	r0, [fp, #-12]
   1b638:	cmp	r0, #0
   1b63c:	bcs	1b69c <__assert_fail@plt+0xa3bc>
   1b640:	ldr	r0, [fp, #-12]
   1b644:	cmn	r0, #1
   1b648:	bne	1b680 <__assert_fail@plt+0xa3a0>
   1b64c:	b	1b668 <__assert_fail@plt+0xa388>
   1b650:	ldr	r0, [fp, #-16]
   1b654:	add	r0, r0, #-2147483648	; 0x80000000
   1b658:	movw	r1, #0
   1b65c:	cmp	r1, r0
   1b660:	bcc	1b6b4 <__assert_fail@plt+0xa3d4>
   1b664:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b668:	ldr	r0, [pc, #1792]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b66c:	ldr	r1, [fp, #-16]
   1b670:	sub	r1, r1, #1
   1b674:	cmp	r0, r1
   1b678:	bcc	1b6b4 <__assert_fail@plt+0xa3d4>
   1b67c:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b680:	ldr	r0, [pc, #1772]	; 1bd74 <__assert_fail@plt+0xaa94>
   1b684:	ldr	r1, [fp, #-12]
   1b688:	udiv	r0, r0, r1
   1b68c:	ldr	r1, [fp, #-16]
   1b690:	cmp	r0, r1
   1b694:	bcc	1b6b4 <__assert_fail@plt+0xa3d4>
   1b698:	b	1b6c8 <__assert_fail@plt+0xa3e8>
   1b69c:	ldr	r0, [pc, #1740]	; 1bd70 <__assert_fail@plt+0xaa90>
   1b6a0:	ldr	r1, [fp, #-16]
   1b6a4:	udiv	r0, r0, r1
   1b6a8:	ldr	r1, [fp, #-12]
   1b6ac:	cmp	r0, r1
   1b6b0:	bcs	1b6c8 <__assert_fail@plt+0xa3e8>
   1b6b4:	ldr	r0, [fp, #-12]
   1b6b8:	ldr	r1, [fp, #-16]
   1b6bc:	mul	r0, r0, r1
   1b6c0:	str	r0, [fp, #-20]	; 0xffffffec
   1b6c4:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1b6c8:	ldr	r0, [fp, #-12]
   1b6cc:	ldr	r1, [fp, #-16]
   1b6d0:	mul	r0, r0, r1
   1b6d4:	str	r0, [fp, #-20]	; 0xffffffec
   1b6d8:	b	1bd54 <__assert_fail@plt+0xaa74>
   1b6dc:	ldr	r0, [fp, #-16]
   1b6e0:	cmp	r0, #0
   1b6e4:	bcs	1b7f0 <__assert_fail@plt+0xa510>
   1b6e8:	ldr	r0, [fp, #-12]
   1b6ec:	cmp	r0, #0
   1b6f0:	bcs	1b778 <__assert_fail@plt+0xa498>
   1b6f4:	b	1b714 <__assert_fail@plt+0xa434>
   1b6f8:	ldr	r0, [fp, #-12]
   1b6fc:	ldr	r1, [fp, #-16]
   1b700:	mvn	r2, #0
   1b704:	udiv	r1, r2, r1
   1b708:	cmp	r0, r1
   1b70c:	bcc	1b88c <__assert_fail@plt+0xa5ac>
   1b710:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b714:	b	1b728 <__assert_fail@plt+0xa448>
   1b718:	ldr	r0, [fp, #-16]
   1b71c:	cmp	r0, #1
   1b720:	bcc	1b738 <__assert_fail@plt+0xa458>
   1b724:	b	1b744 <__assert_fail@plt+0xa464>
   1b728:	ldr	r0, [fp, #-16]
   1b72c:	movw	r1, #0
   1b730:	cmp	r1, r0
   1b734:	bcs	1b744 <__assert_fail@plt+0xa464>
   1b738:	movw	r0, #1
   1b73c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b740:	b	1b75c <__assert_fail@plt+0xa47c>
   1b744:	ldr	r0, [fp, #-16]
   1b748:	movw	r1, #0
   1b74c:	sub	r0, r1, r0
   1b750:	mvn	r1, #0
   1b754:	udiv	r0, r1, r0
   1b758:	str	r0, [fp, #-52]	; 0xffffffcc
   1b75c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b760:	ldr	r1, [fp, #-12]
   1b764:	mvn	r2, #0
   1b768:	sub	r1, r2, r1
   1b76c:	cmp	r0, r1
   1b770:	bls	1b88c <__assert_fail@plt+0xa5ac>
   1b774:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b778:	b	1b780 <__assert_fail@plt+0xa4a0>
   1b77c:	b	1b784 <__assert_fail@plt+0xa4a4>
   1b780:	b	1b7d4 <__assert_fail@plt+0xa4f4>
   1b784:	ldr	r0, [fp, #-16]
   1b788:	cmn	r0, #1
   1b78c:	bne	1b7d4 <__assert_fail@plt+0xa4f4>
   1b790:	b	1b7ac <__assert_fail@plt+0xa4cc>
   1b794:	ldr	r0, [fp, #-12]
   1b798:	add	r0, r0, #0
   1b79c:	movw	r1, #0
   1b7a0:	cmp	r1, r0
   1b7a4:	bcc	1b88c <__assert_fail@plt+0xa5ac>
   1b7a8:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b7ac:	ldr	r0, [fp, #-12]
   1b7b0:	movw	r1, #0
   1b7b4:	cmp	r1, r0
   1b7b8:	bcs	1b8a0 <__assert_fail@plt+0xa5c0>
   1b7bc:	ldr	r0, [fp, #-12]
   1b7c0:	sub	r0, r0, #1
   1b7c4:	mvn	r1, #0
   1b7c8:	cmp	r1, r0
   1b7cc:	bcc	1b88c <__assert_fail@plt+0xa5ac>
   1b7d0:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b7d4:	ldr	r0, [fp, #-16]
   1b7d8:	movw	r1, #0
   1b7dc:	udiv	r0, r1, r0
   1b7e0:	ldr	r1, [fp, #-12]
   1b7e4:	cmp	r0, r1
   1b7e8:	bcc	1b88c <__assert_fail@plt+0xa5ac>
   1b7ec:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b7f0:	ldr	r0, [fp, #-16]
   1b7f4:	cmp	r0, #0
   1b7f8:	bne	1b800 <__assert_fail@plt+0xa520>
   1b7fc:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b800:	ldr	r0, [fp, #-12]
   1b804:	cmp	r0, #0
   1b808:	bcs	1b874 <__assert_fail@plt+0xa594>
   1b80c:	b	1b814 <__assert_fail@plt+0xa534>
   1b810:	b	1b818 <__assert_fail@plt+0xa538>
   1b814:	b	1b858 <__assert_fail@plt+0xa578>
   1b818:	ldr	r0, [fp, #-12]
   1b81c:	cmn	r0, #1
   1b820:	bne	1b858 <__assert_fail@plt+0xa578>
   1b824:	b	1b840 <__assert_fail@plt+0xa560>
   1b828:	ldr	r0, [fp, #-16]
   1b82c:	add	r0, r0, #0
   1b830:	movw	r1, #0
   1b834:	cmp	r1, r0
   1b838:	bcc	1b88c <__assert_fail@plt+0xa5ac>
   1b83c:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b840:	ldr	r0, [fp, #-16]
   1b844:	sub	r0, r0, #1
   1b848:	mvn	r1, #0
   1b84c:	cmp	r1, r0
   1b850:	bcc	1b88c <__assert_fail@plt+0xa5ac>
   1b854:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b858:	ldr	r0, [fp, #-12]
   1b85c:	movw	r1, #0
   1b860:	udiv	r0, r1, r0
   1b864:	ldr	r1, [fp, #-16]
   1b868:	cmp	r0, r1
   1b86c:	bcc	1b88c <__assert_fail@plt+0xa5ac>
   1b870:	b	1b8a0 <__assert_fail@plt+0xa5c0>
   1b874:	ldr	r0, [fp, #-16]
   1b878:	mvn	r1, #0
   1b87c:	udiv	r0, r1, r0
   1b880:	ldr	r1, [fp, #-12]
   1b884:	cmp	r0, r1
   1b888:	bcs	1b8a0 <__assert_fail@plt+0xa5c0>
   1b88c:	ldr	r0, [fp, #-12]
   1b890:	ldr	r1, [fp, #-16]
   1b894:	mul	r0, r0, r1
   1b898:	str	r0, [fp, #-20]	; 0xffffffec
   1b89c:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1b8a0:	ldr	r0, [fp, #-12]
   1b8a4:	ldr	r1, [fp, #-16]
   1b8a8:	mul	r0, r0, r1
   1b8ac:	str	r0, [fp, #-20]	; 0xffffffec
   1b8b0:	b	1bd54 <__assert_fail@plt+0xaa74>
   1b8b4:	b	1bb08 <__assert_fail@plt+0xa828>
   1b8b8:	ldr	r0, [fp, #-16]
   1b8bc:	cmp	r0, #0
   1b8c0:	bcs	1ba20 <__assert_fail@plt+0xa740>
   1b8c4:	ldr	r0, [fp, #-12]
   1b8c8:	cmp	r0, #0
   1b8cc:	bcs	1b99c <__assert_fail@plt+0xa6bc>
   1b8d0:	b	1b8d4 <__assert_fail@plt+0xa5f4>
   1b8d4:	ldr	r0, [fp, #-12]
   1b8d8:	ldr	r2, [fp, #-16]
   1b8dc:	mvn	r1, #0
   1b8e0:	mvn	r3, #-2147483648	; 0x80000000
   1b8e4:	mov	ip, #0
   1b8e8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b8ec:	mov	r0, r1
   1b8f0:	mov	r1, r3
   1b8f4:	mov	r3, ip
   1b8f8:	bl	1c724 <__assert_fail@plt+0xb444>
   1b8fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b900:	subs	r0, r2, r0
   1b904:	rscs	r1, r1, #0
   1b908:	str	r0, [fp, #-60]	; 0xffffffc4
   1b90c:	str	r1, [fp, #-64]	; 0xffffffc0
   1b910:	blt	1bae0 <__assert_fail@plt+0xa800>
   1b914:	b	1baf4 <__assert_fail@plt+0xa814>
   1b918:	b	1b92c <__assert_fail@plt+0xa64c>
   1b91c:	ldr	r0, [fp, #-16]
   1b920:	cmp	r0, #1
   1b924:	bcc	1b93c <__assert_fail@plt+0xa65c>
   1b928:	b	1b950 <__assert_fail@plt+0xa670>
   1b92c:	ldr	r0, [fp, #-16]
   1b930:	movw	r1, #0
   1b934:	cmp	r1, r0
   1b938:	bcs	1b950 <__assert_fail@plt+0xa670>
   1b93c:	mov	r0, #0
   1b940:	mvn	r1, #0
   1b944:	str	r1, [fp, #-68]	; 0xffffffbc
   1b948:	str	r0, [fp, #-72]	; 0xffffffb8
   1b94c:	b	1b974 <__assert_fail@plt+0xa694>
   1b950:	ldr	r0, [fp, #-16]
   1b954:	rsb	r2, r0, #0
   1b958:	mvn	r0, #0
   1b95c:	mvn	r1, #-2147483648	; 0x80000000
   1b960:	mov	r3, #0
   1b964:	bl	1c724 <__assert_fail@plt+0xb444>
   1b968:	str	r0, [fp, #-68]	; 0xffffffbc
   1b96c:	str	r1, [fp, #-72]	; 0xffffffb8
   1b970:	b	1b974 <__assert_fail@plt+0xa694>
   1b974:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b978:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b97c:	ldr	r2, [fp, #-12]
   1b980:	mvn	r2, r2
   1b984:	subs	r1, r2, r1
   1b988:	rscs	r0, r0, #0
   1b98c:	str	r1, [fp, #-76]	; 0xffffffb4
   1b990:	str	r0, [fp, #-80]	; 0xffffffb0
   1b994:	bge	1bae0 <__assert_fail@plt+0xa800>
   1b998:	b	1baf4 <__assert_fail@plt+0xa814>
   1b99c:	ldr	r0, [fp, #-16]
   1b9a0:	cmn	r0, #1
   1b9a4:	bne	1b9ec <__assert_fail@plt+0xa70c>
   1b9a8:	b	1b9cc <__assert_fail@plt+0xa6ec>
   1b9ac:	ldr	r0, [fp, #-12]
   1b9b0:	rsbs	r0, r0, #0
   1b9b4:	mov	r1, #0
   1b9b8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b9bc:	str	r0, [fp, #-84]	; 0xffffffac
   1b9c0:	str	r1, [sp, #88]	; 0x58
   1b9c4:	blt	1bae0 <__assert_fail@plt+0xa800>
   1b9c8:	b	1baf4 <__assert_fail@plt+0xa814>
   1b9cc:	ldr	r0, [fp, #-12]
   1b9d0:	movw	r1, #0
   1b9d4:	cmp	r1, r0
   1b9d8:	bcs	1baf4 <__assert_fail@plt+0xa814>
   1b9dc:	mov	r0, #0
   1b9e0:	cmp	r0, #0
   1b9e4:	bne	1bae0 <__assert_fail@plt+0xa800>
   1b9e8:	b	1baf4 <__assert_fail@plt+0xa814>
   1b9ec:	ldr	r2, [fp, #-16]
   1b9f0:	mov	r1, #-2147483648	; 0x80000000
   1b9f4:	mov	r0, #0
   1b9f8:	str	r0, [sp, #84]	; 0x54
   1b9fc:	ldr	r3, [sp, #84]	; 0x54
   1ba00:	bl	1c650 <__assert_fail@plt+0xb370>
   1ba04:	ldr	r2, [fp, #-12]
   1ba08:	subs	r0, r0, r2
   1ba0c:	sbcs	r1, r1, #0
   1ba10:	str	r0, [sp, #80]	; 0x50
   1ba14:	str	r1, [sp, #76]	; 0x4c
   1ba18:	blt	1bae0 <__assert_fail@plt+0xa800>
   1ba1c:	b	1baf4 <__assert_fail@plt+0xa814>
   1ba20:	ldr	r0, [fp, #-16]
   1ba24:	cmp	r0, #0
   1ba28:	bne	1ba30 <__assert_fail@plt+0xa750>
   1ba2c:	b	1baf4 <__assert_fail@plt+0xa814>
   1ba30:	ldr	r0, [fp, #-12]
   1ba34:	cmp	r0, #0
   1ba38:	bcs	1bab0 <__assert_fail@plt+0xa7d0>
   1ba3c:	ldr	r0, [fp, #-12]
   1ba40:	cmn	r0, #1
   1ba44:	bne	1ba7c <__assert_fail@plt+0xa79c>
   1ba48:	b	1ba6c <__assert_fail@plt+0xa78c>
   1ba4c:	ldr	r0, [fp, #-16]
   1ba50:	rsbs	r0, r0, #0
   1ba54:	mov	r1, #0
   1ba58:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ba5c:	str	r0, [sp, #72]	; 0x48
   1ba60:	str	r1, [sp, #68]	; 0x44
   1ba64:	blt	1bae0 <__assert_fail@plt+0xa800>
   1ba68:	b	1baf4 <__assert_fail@plt+0xa814>
   1ba6c:	mov	r0, #0
   1ba70:	cmp	r0, #0
   1ba74:	bne	1bae0 <__assert_fail@plt+0xa800>
   1ba78:	b	1baf4 <__assert_fail@plt+0xa814>
   1ba7c:	ldr	r2, [fp, #-12]
   1ba80:	mov	r1, #-2147483648	; 0x80000000
   1ba84:	mov	r0, #0
   1ba88:	str	r0, [sp, #64]	; 0x40
   1ba8c:	ldr	r3, [sp, #64]	; 0x40
   1ba90:	bl	1c650 <__assert_fail@plt+0xb370>
   1ba94:	ldr	r2, [fp, #-16]
   1ba98:	subs	r0, r0, r2
   1ba9c:	sbcs	r1, r1, #0
   1baa0:	str	r0, [sp, #60]	; 0x3c
   1baa4:	str	r1, [sp, #56]	; 0x38
   1baa8:	blt	1bae0 <__assert_fail@plt+0xa800>
   1baac:	b	1baf4 <__assert_fail@plt+0xa814>
   1bab0:	ldr	r2, [fp, #-16]
   1bab4:	mvn	r0, #0
   1bab8:	mvn	r1, #-2147483648	; 0x80000000
   1babc:	mov	r3, #0
   1bac0:	bl	1c724 <__assert_fail@plt+0xb444>
   1bac4:	ldr	r2, [fp, #-12]
   1bac8:	subs	r0, r0, r2
   1bacc:	sbcs	r1, r1, #0
   1bad0:	str	r0, [sp, #52]	; 0x34
   1bad4:	str	r1, [sp, #48]	; 0x30
   1bad8:	bge	1baf4 <__assert_fail@plt+0xa814>
   1badc:	b	1bae0 <__assert_fail@plt+0xa800>
   1bae0:	ldr	r0, [fp, #-12]
   1bae4:	ldr	r1, [fp, #-16]
   1bae8:	mul	r0, r0, r1
   1baec:	str	r0, [fp, #-20]	; 0xffffffec
   1baf0:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1baf4:	ldr	r0, [fp, #-12]
   1baf8:	ldr	r1, [fp, #-16]
   1bafc:	mul	r0, r0, r1
   1bb00:	str	r0, [fp, #-20]	; 0xffffffec
   1bb04:	b	1bd54 <__assert_fail@plt+0xaa74>
   1bb08:	ldr	r0, [fp, #-16]
   1bb0c:	cmp	r0, #0
   1bb10:	bcs	1bc5c <__assert_fail@plt+0xa97c>
   1bb14:	ldr	r0, [fp, #-12]
   1bb18:	cmp	r0, #0
   1bb1c:	bcs	1bbe4 <__assert_fail@plt+0xa904>
   1bb20:	b	1bb5c <__assert_fail@plt+0xa87c>
   1bb24:	ldr	r0, [fp, #-12]
   1bb28:	ldr	r2, [fp, #-16]
   1bb2c:	mvn	r1, #0
   1bb30:	mov	r3, #0
   1bb34:	str	r0, [sp, #44]	; 0x2c
   1bb38:	mov	r0, r1
   1bb3c:	bl	1c724 <__assert_fail@plt+0xb444>
   1bb40:	ldr	r2, [sp, #44]	; 0x2c
   1bb44:	subs	r0, r2, r0
   1bb48:	rscs	r1, r1, #0
   1bb4c:	str	r0, [sp, #40]	; 0x28
   1bb50:	str	r1, [sp, #36]	; 0x24
   1bb54:	bcc	1bd14 <__assert_fail@plt+0xaa34>
   1bb58:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bb5c:	b	1bb70 <__assert_fail@plt+0xa890>
   1bb60:	ldr	r0, [fp, #-16]
   1bb64:	cmp	r0, #1
   1bb68:	bcc	1bb80 <__assert_fail@plt+0xa8a0>
   1bb6c:	b	1bb94 <__assert_fail@plt+0xa8b4>
   1bb70:	ldr	r0, [fp, #-16]
   1bb74:	movw	r1, #0
   1bb78:	cmp	r1, r0
   1bb7c:	bcs	1bb94 <__assert_fail@plt+0xa8b4>
   1bb80:	mov	r0, #1
   1bb84:	mvn	r1, #0
   1bb88:	str	r1, [sp, #32]
   1bb8c:	str	r0, [sp, #28]
   1bb90:	b	1bbbc <__assert_fail@plt+0xa8dc>
   1bb94:	ldr	r0, [fp, #-16]
   1bb98:	rsb	r2, r0, #0
   1bb9c:	mvn	r0, #0
   1bba0:	mov	r3, #0
   1bba4:	str	r0, [sp, #24]
   1bba8:	ldr	r1, [sp, #24]
   1bbac:	bl	1c724 <__assert_fail@plt+0xb444>
   1bbb0:	str	r0, [sp, #32]
   1bbb4:	str	r1, [sp, #28]
   1bbb8:	b	1bbbc <__assert_fail@plt+0xa8dc>
   1bbbc:	ldr	r0, [sp, #28]
   1bbc0:	ldr	r1, [sp, #32]
   1bbc4:	ldr	r2, [fp, #-12]
   1bbc8:	mvn	r2, r2
   1bbcc:	subs	r1, r2, r1
   1bbd0:	rscs	r0, r0, #0
   1bbd4:	str	r1, [sp, #20]
   1bbd8:	str	r0, [sp, #16]
   1bbdc:	bcs	1bd14 <__assert_fail@plt+0xaa34>
   1bbe0:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bbe4:	b	1bbec <__assert_fail@plt+0xa90c>
   1bbe8:	b	1bbf0 <__assert_fail@plt+0xa910>
   1bbec:	b	1bc40 <__assert_fail@plt+0xa960>
   1bbf0:	ldr	r0, [fp, #-16]
   1bbf4:	cmn	r0, #1
   1bbf8:	bne	1bc40 <__assert_fail@plt+0xa960>
   1bbfc:	b	1bc18 <__assert_fail@plt+0xa938>
   1bc00:	ldr	r0, [fp, #-12]
   1bc04:	add	r0, r0, #0
   1bc08:	movw	r1, #0
   1bc0c:	cmp	r1, r0
   1bc10:	bcc	1bd14 <__assert_fail@plt+0xaa34>
   1bc14:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bc18:	ldr	r0, [fp, #-12]
   1bc1c:	movw	r1, #0
   1bc20:	cmp	r1, r0
   1bc24:	bcs	1bd28 <__assert_fail@plt+0xaa48>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	sub	r0, r0, #1
   1bc30:	mvn	r1, #0
   1bc34:	cmp	r1, r0
   1bc38:	bcc	1bd14 <__assert_fail@plt+0xaa34>
   1bc3c:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bc40:	ldr	r0, [fp, #-16]
   1bc44:	movw	r1, #0
   1bc48:	udiv	r0, r1, r0
   1bc4c:	ldr	r1, [fp, #-12]
   1bc50:	cmp	r0, r1
   1bc54:	bcc	1bd14 <__assert_fail@plt+0xaa34>
   1bc58:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bc5c:	ldr	r0, [fp, #-16]
   1bc60:	cmp	r0, #0
   1bc64:	bne	1bc6c <__assert_fail@plt+0xa98c>
   1bc68:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bc6c:	ldr	r0, [fp, #-12]
   1bc70:	cmp	r0, #0
   1bc74:	bcs	1bce0 <__assert_fail@plt+0xaa00>
   1bc78:	b	1bc80 <__assert_fail@plt+0xa9a0>
   1bc7c:	b	1bc84 <__assert_fail@plt+0xa9a4>
   1bc80:	b	1bcc4 <__assert_fail@plt+0xa9e4>
   1bc84:	ldr	r0, [fp, #-12]
   1bc88:	cmn	r0, #1
   1bc8c:	bne	1bcc4 <__assert_fail@plt+0xa9e4>
   1bc90:	b	1bcac <__assert_fail@plt+0xa9cc>
   1bc94:	ldr	r0, [fp, #-16]
   1bc98:	add	r0, r0, #0
   1bc9c:	movw	r1, #0
   1bca0:	cmp	r1, r0
   1bca4:	bcc	1bd14 <__assert_fail@plt+0xaa34>
   1bca8:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bcac:	ldr	r0, [fp, #-16]
   1bcb0:	sub	r0, r0, #1
   1bcb4:	mvn	r1, #0
   1bcb8:	cmp	r1, r0
   1bcbc:	bcc	1bd14 <__assert_fail@plt+0xaa34>
   1bcc0:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bcc4:	ldr	r0, [fp, #-12]
   1bcc8:	movw	r1, #0
   1bccc:	udiv	r0, r1, r0
   1bcd0:	ldr	r1, [fp, #-16]
   1bcd4:	cmp	r0, r1
   1bcd8:	bcc	1bd14 <__assert_fail@plt+0xaa34>
   1bcdc:	b	1bd28 <__assert_fail@plt+0xaa48>
   1bce0:	ldr	r2, [fp, #-16]
   1bce4:	mvn	r0, #0
   1bce8:	mov	r3, #0
   1bcec:	str	r0, [sp, #12]
   1bcf0:	ldr	r1, [sp, #12]
   1bcf4:	bl	1c724 <__assert_fail@plt+0xb444>
   1bcf8:	ldr	r2, [fp, #-12]
   1bcfc:	subs	r0, r0, r2
   1bd00:	sbcs	r1, r1, #0
   1bd04:	str	r0, [sp, #8]
   1bd08:	str	r1, [sp, #4]
   1bd0c:	bcs	1bd28 <__assert_fail@plt+0xaa48>
   1bd10:	b	1bd14 <__assert_fail@plt+0xaa34>
   1bd14:	ldr	r0, [fp, #-12]
   1bd18:	ldr	r1, [fp, #-16]
   1bd1c:	mul	r0, r0, r1
   1bd20:	str	r0, [fp, #-20]	; 0xffffffec
   1bd24:	b	1bd3c <__assert_fail@plt+0xaa5c>
   1bd28:	ldr	r0, [fp, #-12]
   1bd2c:	ldr	r1, [fp, #-16]
   1bd30:	mul	r0, r0, r1
   1bd34:	str	r0, [fp, #-20]	; 0xffffffec
   1bd38:	b	1bd54 <__assert_fail@plt+0xaa74>
   1bd3c:	bl	111e4 <__errno_location@plt>
   1bd40:	movw	lr, #12
   1bd44:	str	lr, [r0]
   1bd48:	movw	r0, #0
   1bd4c:	str	r0, [fp, #-4]
   1bd50:	b	1bd64 <__assert_fail@plt+0xaa84>
   1bd54:	ldr	r0, [fp, #-8]
   1bd58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd5c:	bl	1a1d4 <__assert_fail@plt+0x8ef4>
   1bd60:	str	r0, [fp, #-4]
   1bd64:	ldr	r0, [fp, #-4]
   1bd68:	mov	sp, fp
   1bd6c:	pop	{fp, pc}
   1bd70:	svcvc	0x00ffffff
   1bd74:	andhi	r0, r0, r0
   1bd78:			; <UNDEFINED> instruction: 0xffff8000
   1bd7c:	sub	sp, sp, #12
   1bd80:	str	r0, [sp, #4]
   1bd84:	ldr	r0, [sp, #4]
   1bd88:	sub	r1, r0, #48	; 0x30
   1bd8c:	cmp	r1, #10
   1bd90:	str	r0, [sp]
   1bd94:	bcc	1bdc4 <__assert_fail@plt+0xaae4>
   1bd98:	b	1bd9c <__assert_fail@plt+0xaabc>
   1bd9c:	ldr	r0, [sp]
   1bda0:	sub	r1, r0, #65	; 0x41
   1bda4:	cmp	r1, #26
   1bda8:	bcc	1bdc4 <__assert_fail@plt+0xaae4>
   1bdac:	b	1bdb0 <__assert_fail@plt+0xaad0>
   1bdb0:	ldr	r0, [sp]
   1bdb4:	sub	r1, r0, #97	; 0x61
   1bdb8:	cmp	r1, #25
   1bdbc:	bhi	1bdd4 <__assert_fail@plt+0xaaf4>
   1bdc0:	b	1bdc4 <__assert_fail@plt+0xaae4>
   1bdc4:	movw	r0, #1
   1bdc8:	and	r0, r0, #1
   1bdcc:	strb	r0, [sp, #11]
   1bdd0:	b	1bde0 <__assert_fail@plt+0xab00>
   1bdd4:	movw	r0, #0
   1bdd8:	and	r0, r0, #1
   1bddc:	strb	r0, [sp, #11]
   1bde0:	ldrb	r0, [sp, #11]
   1bde4:	and	r0, r0, #1
   1bde8:	add	sp, sp, #12
   1bdec:	bx	lr
   1bdf0:	sub	sp, sp, #12
   1bdf4:	str	r0, [sp, #4]
   1bdf8:	ldr	r0, [sp, #4]
   1bdfc:	sub	r1, r0, #65	; 0x41
   1be00:	cmp	r1, #26
   1be04:	str	r0, [sp]
   1be08:	bcc	1be24 <__assert_fail@plt+0xab44>
   1be0c:	b	1be10 <__assert_fail@plt+0xab30>
   1be10:	ldr	r0, [sp]
   1be14:	sub	r1, r0, #97	; 0x61
   1be18:	cmp	r1, #25
   1be1c:	bhi	1be34 <__assert_fail@plt+0xab54>
   1be20:	b	1be24 <__assert_fail@plt+0xab44>
   1be24:	movw	r0, #1
   1be28:	and	r0, r0, #1
   1be2c:	strb	r0, [sp, #11]
   1be30:	b	1be40 <__assert_fail@plt+0xab60>
   1be34:	movw	r0, #0
   1be38:	and	r0, r0, #1
   1be3c:	strb	r0, [sp, #11]
   1be40:	ldrb	r0, [sp, #11]
   1be44:	and	r0, r0, #1
   1be48:	add	sp, sp, #12
   1be4c:	bx	lr
   1be50:	sub	sp, sp, #8
   1be54:	str	r0, [sp]
   1be58:	ldr	r0, [sp]
   1be5c:	cmp	r0, #127	; 0x7f
   1be60:	bhi	1be78 <__assert_fail@plt+0xab98>
   1be64:	b	1be68 <__assert_fail@plt+0xab88>
   1be68:	movw	r0, #1
   1be6c:	and	r0, r0, #1
   1be70:	strb	r0, [sp, #7]
   1be74:	b	1be84 <__assert_fail@plt+0xaba4>
   1be78:	movw	r0, #0
   1be7c:	and	r0, r0, #1
   1be80:	strb	r0, [sp, #7]
   1be84:	ldrb	r0, [sp, #7]
   1be88:	and	r0, r0, #1
   1be8c:	add	sp, sp, #8
   1be90:	bx	lr
   1be94:	sub	sp, sp, #8
   1be98:	str	r0, [sp, #4]
   1be9c:	ldr	r0, [sp, #4]
   1bea0:	cmp	r0, #32
   1bea4:	movw	r0, #1
   1bea8:	str	r0, [sp]
   1beac:	beq	1bec4 <__assert_fail@plt+0xabe4>
   1beb0:	ldr	r0, [sp, #4]
   1beb4:	cmp	r0, #9
   1beb8:	movw	r0, #0
   1bebc:	moveq	r0, #1
   1bec0:	str	r0, [sp]
   1bec4:	ldr	r0, [sp]
   1bec8:	and	r0, r0, #1
   1becc:	add	sp, sp, #8
   1bed0:	bx	lr
   1bed4:	sub	sp, sp, #12
   1bed8:	str	r0, [sp, #4]
   1bedc:	ldr	r0, [sp, #4]
   1bee0:	cmp	r0, #32
   1bee4:	str	r0, [sp]
   1bee8:	bcc	1bf00 <__assert_fail@plt+0xac20>
   1beec:	b	1bef0 <__assert_fail@plt+0xac10>
   1bef0:	ldr	r0, [sp]
   1bef4:	cmp	r0, #127	; 0x7f
   1bef8:	bne	1bf10 <__assert_fail@plt+0xac30>
   1befc:	b	1bf00 <__assert_fail@plt+0xac20>
   1bf00:	movw	r0, #1
   1bf04:	and	r0, r0, #1
   1bf08:	strb	r0, [sp, #11]
   1bf0c:	b	1bf1c <__assert_fail@plt+0xac3c>
   1bf10:	movw	r0, #0
   1bf14:	and	r0, r0, #1
   1bf18:	strb	r0, [sp, #11]
   1bf1c:	ldrb	r0, [sp, #11]
   1bf20:	and	r0, r0, #1
   1bf24:	add	sp, sp, #12
   1bf28:	bx	lr
   1bf2c:	sub	sp, sp, #8
   1bf30:	str	r0, [sp]
   1bf34:	ldr	r0, [sp]
   1bf38:	sub	r0, r0, #48	; 0x30
   1bf3c:	cmp	r0, #9
   1bf40:	bhi	1bf58 <__assert_fail@plt+0xac78>
   1bf44:	b	1bf48 <__assert_fail@plt+0xac68>
   1bf48:	movw	r0, #1
   1bf4c:	and	r0, r0, #1
   1bf50:	strb	r0, [sp, #7]
   1bf54:	b	1bf64 <__assert_fail@plt+0xac84>
   1bf58:	movw	r0, #0
   1bf5c:	and	r0, r0, #1
   1bf60:	strb	r0, [sp, #7]
   1bf64:	ldrb	r0, [sp, #7]
   1bf68:	and	r0, r0, #1
   1bf6c:	add	sp, sp, #8
   1bf70:	bx	lr
   1bf74:	sub	sp, sp, #8
   1bf78:	str	r0, [sp]
   1bf7c:	ldr	r0, [sp]
   1bf80:	sub	r0, r0, #33	; 0x21
   1bf84:	cmp	r0, #93	; 0x5d
   1bf88:	bhi	1bfa0 <__assert_fail@plt+0xacc0>
   1bf8c:	b	1bf90 <__assert_fail@plt+0xacb0>
   1bf90:	movw	r0, #1
   1bf94:	and	r0, r0, #1
   1bf98:	strb	r0, [sp, #7]
   1bf9c:	b	1bfac <__assert_fail@plt+0xaccc>
   1bfa0:	movw	r0, #0
   1bfa4:	and	r0, r0, #1
   1bfa8:	strb	r0, [sp, #7]
   1bfac:	ldrb	r0, [sp, #7]
   1bfb0:	and	r0, r0, #1
   1bfb4:	add	sp, sp, #8
   1bfb8:	bx	lr
   1bfbc:	sub	sp, sp, #8
   1bfc0:	str	r0, [sp]
   1bfc4:	ldr	r0, [sp]
   1bfc8:	sub	r0, r0, #97	; 0x61
   1bfcc:	cmp	r0, #25
   1bfd0:	bhi	1bfe8 <__assert_fail@plt+0xad08>
   1bfd4:	b	1bfd8 <__assert_fail@plt+0xacf8>
   1bfd8:	movw	r0, #1
   1bfdc:	and	r0, r0, #1
   1bfe0:	strb	r0, [sp, #7]
   1bfe4:	b	1bff4 <__assert_fail@plt+0xad14>
   1bfe8:	movw	r0, #0
   1bfec:	and	r0, r0, #1
   1bff0:	strb	r0, [sp, #7]
   1bff4:	ldrb	r0, [sp, #7]
   1bff8:	and	r0, r0, #1
   1bffc:	add	sp, sp, #8
   1c000:	bx	lr
   1c004:	sub	sp, sp, #8
   1c008:	str	r0, [sp]
   1c00c:	ldr	r0, [sp]
   1c010:	sub	r0, r0, #32
   1c014:	cmp	r0, #94	; 0x5e
   1c018:	bhi	1c030 <__assert_fail@plt+0xad50>
   1c01c:	b	1c020 <__assert_fail@plt+0xad40>
   1c020:	movw	r0, #1
   1c024:	and	r0, r0, #1
   1c028:	strb	r0, [sp, #7]
   1c02c:	b	1c03c <__assert_fail@plt+0xad5c>
   1c030:	movw	r0, #0
   1c034:	and	r0, r0, #1
   1c038:	strb	r0, [sp, #7]
   1c03c:	ldrb	r0, [sp, #7]
   1c040:	and	r0, r0, #1
   1c044:	add	sp, sp, #8
   1c048:	bx	lr
   1c04c:	sub	sp, sp, #12
   1c050:	str	r0, [sp, #4]
   1c054:	ldr	r0, [sp, #4]
   1c058:	sub	r0, r0, #33	; 0x21
   1c05c:	cmp	r0, #93	; 0x5d
   1c060:	str	r0, [sp]
   1c064:	bhi	1c200 <__assert_fail@plt+0xaf20>
   1c068:	add	r0, pc, #8
   1c06c:	ldr	r1, [sp]
   1c070:	ldr	r0, [r0, r1, lsl #2]
   1c074:	mov	pc, r0
   1c078:	strdeq	ip, [r1], -r0
   1c07c:	strdeq	ip, [r1], -r0
   1c080:	strdeq	ip, [r1], -r0
   1c084:	strdeq	ip, [r1], -r0
   1c088:	strdeq	ip, [r1], -r0
   1c08c:	strdeq	ip, [r1], -r0
   1c090:	strdeq	ip, [r1], -r0
   1c094:	strdeq	ip, [r1], -r0
   1c098:	strdeq	ip, [r1], -r0
   1c09c:	strdeq	ip, [r1], -r0
   1c0a0:	strdeq	ip, [r1], -r0
   1c0a4:	strdeq	ip, [r1], -r0
   1c0a8:	strdeq	ip, [r1], -r0
   1c0ac:	strdeq	ip, [r1], -r0
   1c0b0:	strdeq	ip, [r1], -r0
   1c0b4:	andeq	ip, r1, r0, lsl #4
   1c0b8:	andeq	ip, r1, r0, lsl #4
   1c0bc:	andeq	ip, r1, r0, lsl #4
   1c0c0:	andeq	ip, r1, r0, lsl #4
   1c0c4:	andeq	ip, r1, r0, lsl #4
   1c0c8:	andeq	ip, r1, r0, lsl #4
   1c0cc:	andeq	ip, r1, r0, lsl #4
   1c0d0:	andeq	ip, r1, r0, lsl #4
   1c0d4:	andeq	ip, r1, r0, lsl #4
   1c0d8:	andeq	ip, r1, r0, lsl #4
   1c0dc:	strdeq	ip, [r1], -r0
   1c0e0:	strdeq	ip, [r1], -r0
   1c0e4:	strdeq	ip, [r1], -r0
   1c0e8:	strdeq	ip, [r1], -r0
   1c0ec:	strdeq	ip, [r1], -r0
   1c0f0:	strdeq	ip, [r1], -r0
   1c0f4:	strdeq	ip, [r1], -r0
   1c0f8:	andeq	ip, r1, r0, lsl #4
   1c0fc:	andeq	ip, r1, r0, lsl #4
   1c100:	andeq	ip, r1, r0, lsl #4
   1c104:	andeq	ip, r1, r0, lsl #4
   1c108:	andeq	ip, r1, r0, lsl #4
   1c10c:	andeq	ip, r1, r0, lsl #4
   1c110:	andeq	ip, r1, r0, lsl #4
   1c114:	andeq	ip, r1, r0, lsl #4
   1c118:	andeq	ip, r1, r0, lsl #4
   1c11c:	andeq	ip, r1, r0, lsl #4
   1c120:	andeq	ip, r1, r0, lsl #4
   1c124:	andeq	ip, r1, r0, lsl #4
   1c128:	andeq	ip, r1, r0, lsl #4
   1c12c:	andeq	ip, r1, r0, lsl #4
   1c130:	andeq	ip, r1, r0, lsl #4
   1c134:	andeq	ip, r1, r0, lsl #4
   1c138:	andeq	ip, r1, r0, lsl #4
   1c13c:	andeq	ip, r1, r0, lsl #4
   1c140:	andeq	ip, r1, r0, lsl #4
   1c144:	andeq	ip, r1, r0, lsl #4
   1c148:	andeq	ip, r1, r0, lsl #4
   1c14c:	andeq	ip, r1, r0, lsl #4
   1c150:	andeq	ip, r1, r0, lsl #4
   1c154:	andeq	ip, r1, r0, lsl #4
   1c158:	andeq	ip, r1, r0, lsl #4
   1c15c:	andeq	ip, r1, r0, lsl #4
   1c160:	strdeq	ip, [r1], -r0
   1c164:	strdeq	ip, [r1], -r0
   1c168:	strdeq	ip, [r1], -r0
   1c16c:	strdeq	ip, [r1], -r0
   1c170:	strdeq	ip, [r1], -r0
   1c174:	strdeq	ip, [r1], -r0
   1c178:	andeq	ip, r1, r0, lsl #4
   1c17c:	andeq	ip, r1, r0, lsl #4
   1c180:	andeq	ip, r1, r0, lsl #4
   1c184:	andeq	ip, r1, r0, lsl #4
   1c188:	andeq	ip, r1, r0, lsl #4
   1c18c:	andeq	ip, r1, r0, lsl #4
   1c190:	andeq	ip, r1, r0, lsl #4
   1c194:	andeq	ip, r1, r0, lsl #4
   1c198:	andeq	ip, r1, r0, lsl #4
   1c19c:	andeq	ip, r1, r0, lsl #4
   1c1a0:	andeq	ip, r1, r0, lsl #4
   1c1a4:	andeq	ip, r1, r0, lsl #4
   1c1a8:	andeq	ip, r1, r0, lsl #4
   1c1ac:	andeq	ip, r1, r0, lsl #4
   1c1b0:	andeq	ip, r1, r0, lsl #4
   1c1b4:	andeq	ip, r1, r0, lsl #4
   1c1b8:	andeq	ip, r1, r0, lsl #4
   1c1bc:	andeq	ip, r1, r0, lsl #4
   1c1c0:	andeq	ip, r1, r0, lsl #4
   1c1c4:	andeq	ip, r1, r0, lsl #4
   1c1c8:	andeq	ip, r1, r0, lsl #4
   1c1cc:	andeq	ip, r1, r0, lsl #4
   1c1d0:	andeq	ip, r1, r0, lsl #4
   1c1d4:	andeq	ip, r1, r0, lsl #4
   1c1d8:	andeq	ip, r1, r0, lsl #4
   1c1dc:	andeq	ip, r1, r0, lsl #4
   1c1e0:	strdeq	ip, [r1], -r0
   1c1e4:	strdeq	ip, [r1], -r0
   1c1e8:	strdeq	ip, [r1], -r0
   1c1ec:	strdeq	ip, [r1], -r0
   1c1f0:	movw	r0, #1
   1c1f4:	and	r0, r0, #1
   1c1f8:	strb	r0, [sp, #11]
   1c1fc:	b	1c20c <__assert_fail@plt+0xaf2c>
   1c200:	movw	r0, #0
   1c204:	and	r0, r0, #1
   1c208:	strb	r0, [sp, #11]
   1c20c:	ldrb	r0, [sp, #11]
   1c210:	and	r0, r0, #1
   1c214:	add	sp, sp, #12
   1c218:	bx	lr
   1c21c:	sub	sp, sp, #12
   1c220:	str	r0, [sp, #4]
   1c224:	ldr	r0, [sp, #4]
   1c228:	sub	r1, r0, #9
   1c22c:	cmp	r1, #5
   1c230:	str	r0, [sp]
   1c234:	bcc	1c24c <__assert_fail@plt+0xaf6c>
   1c238:	b	1c23c <__assert_fail@plt+0xaf5c>
   1c23c:	ldr	r0, [sp]
   1c240:	cmp	r0, #32
   1c244:	bne	1c25c <__assert_fail@plt+0xaf7c>
   1c248:	b	1c24c <__assert_fail@plt+0xaf6c>
   1c24c:	movw	r0, #1
   1c250:	and	r0, r0, #1
   1c254:	strb	r0, [sp, #11]
   1c258:	b	1c268 <__assert_fail@plt+0xaf88>
   1c25c:	movw	r0, #0
   1c260:	and	r0, r0, #1
   1c264:	strb	r0, [sp, #11]
   1c268:	ldrb	r0, [sp, #11]
   1c26c:	and	r0, r0, #1
   1c270:	add	sp, sp, #12
   1c274:	bx	lr
   1c278:	sub	sp, sp, #8
   1c27c:	str	r0, [sp]
   1c280:	ldr	r0, [sp]
   1c284:	sub	r0, r0, #65	; 0x41
   1c288:	cmp	r0, #25
   1c28c:	bhi	1c2a4 <__assert_fail@plt+0xafc4>
   1c290:	b	1c294 <__assert_fail@plt+0xafb4>
   1c294:	movw	r0, #1
   1c298:	and	r0, r0, #1
   1c29c:	strb	r0, [sp, #7]
   1c2a0:	b	1c2b0 <__assert_fail@plt+0xafd0>
   1c2a4:	movw	r0, #0
   1c2a8:	and	r0, r0, #1
   1c2ac:	strb	r0, [sp, #7]
   1c2b0:	ldrb	r0, [sp, #7]
   1c2b4:	and	r0, r0, #1
   1c2b8:	add	sp, sp, #8
   1c2bc:	bx	lr
   1c2c0:	sub	sp, sp, #12
   1c2c4:	str	r0, [sp, #4]
   1c2c8:	ldr	r0, [sp, #4]
   1c2cc:	sub	r1, r0, #48	; 0x30
   1c2d0:	cmp	r1, #10
   1c2d4:	str	r0, [sp]
   1c2d8:	bcc	1c308 <__assert_fail@plt+0xb028>
   1c2dc:	b	1c2e0 <__assert_fail@plt+0xb000>
   1c2e0:	ldr	r0, [sp]
   1c2e4:	sub	r1, r0, #65	; 0x41
   1c2e8:	cmp	r1, #6
   1c2ec:	bcc	1c308 <__assert_fail@plt+0xb028>
   1c2f0:	b	1c2f4 <__assert_fail@plt+0xb014>
   1c2f4:	ldr	r0, [sp]
   1c2f8:	sub	r1, r0, #97	; 0x61
   1c2fc:	cmp	r1, #5
   1c300:	bhi	1c318 <__assert_fail@plt+0xb038>
   1c304:	b	1c308 <__assert_fail@plt+0xb028>
   1c308:	movw	r0, #1
   1c30c:	and	r0, r0, #1
   1c310:	strb	r0, [sp, #11]
   1c314:	b	1c324 <__assert_fail@plt+0xb044>
   1c318:	movw	r0, #0
   1c31c:	and	r0, r0, #1
   1c320:	strb	r0, [sp, #11]
   1c324:	ldrb	r0, [sp, #11]
   1c328:	and	r0, r0, #1
   1c32c:	add	sp, sp, #12
   1c330:	bx	lr
   1c334:	sub	sp, sp, #8
   1c338:	str	r0, [sp]
   1c33c:	ldr	r0, [sp]
   1c340:	sub	r0, r0, #65	; 0x41
   1c344:	cmp	r0, #25
   1c348:	bhi	1c364 <__assert_fail@plt+0xb084>
   1c34c:	b	1c350 <__assert_fail@plt+0xb070>
   1c350:	ldr	r0, [sp]
   1c354:	sub	r0, r0, #65	; 0x41
   1c358:	add	r0, r0, #97	; 0x61
   1c35c:	str	r0, [sp, #4]
   1c360:	b	1c36c <__assert_fail@plt+0xb08c>
   1c364:	ldr	r0, [sp]
   1c368:	str	r0, [sp, #4]
   1c36c:	ldr	r0, [sp, #4]
   1c370:	add	sp, sp, #8
   1c374:	bx	lr
   1c378:	sub	sp, sp, #8
   1c37c:	str	r0, [sp]
   1c380:	ldr	r0, [sp]
   1c384:	sub	r0, r0, #97	; 0x61
   1c388:	cmp	r0, #25
   1c38c:	bhi	1c3a8 <__assert_fail@plt+0xb0c8>
   1c390:	b	1c394 <__assert_fail@plt+0xb0b4>
   1c394:	ldr	r0, [sp]
   1c398:	sub	r0, r0, #97	; 0x61
   1c39c:	add	r0, r0, #65	; 0x41
   1c3a0:	str	r0, [sp, #4]
   1c3a4:	b	1c3b0 <__assert_fail@plt+0xb0d0>
   1c3a8:	ldr	r0, [sp]
   1c3ac:	str	r0, [sp, #4]
   1c3b0:	ldr	r0, [sp, #4]
   1c3b4:	add	sp, sp, #8
   1c3b8:	bx	lr
   1c3bc:	sub	sp, sp, #16
   1c3c0:	str	r0, [sp, #8]
   1c3c4:	ldr	r0, [sp, #8]
   1c3c8:	ldr	r0, [r0, #20]
   1c3cc:	ldr	r1, [sp, #8]
   1c3d0:	ldr	r1, [r1, #16]
   1c3d4:	cmp	r0, r1
   1c3d8:	bls	1c3e8 <__assert_fail@plt+0xb108>
   1c3dc:	movw	r0, #0
   1c3e0:	str	r0, [sp, #12]
   1c3e4:	b	1c44c <__assert_fail@plt+0xb16c>
   1c3e8:	ldr	r0, [sp, #8]
   1c3ec:	ldr	r0, [r0, #8]
   1c3f0:	ldr	r1, [sp, #8]
   1c3f4:	ldr	r1, [r1, #4]
   1c3f8:	sub	r0, r0, r1
   1c3fc:	ldr	r1, [sp, #8]
   1c400:	ldr	r1, [r1]
   1c404:	and	r1, r1, #256	; 0x100
   1c408:	cmp	r1, #0
   1c40c:	str	r0, [sp, #4]
   1c410:	beq	1c430 <__assert_fail@plt+0xb150>
   1c414:	ldr	r0, [sp, #8]
   1c418:	ldr	r0, [r0, #44]	; 0x2c
   1c41c:	ldr	r1, [sp, #8]
   1c420:	ldr	r1, [r1, #36]	; 0x24
   1c424:	sub	r0, r0, r1
   1c428:	str	r0, [sp]
   1c42c:	b	1c43c <__assert_fail@plt+0xb15c>
   1c430:	movw	r0, #0
   1c434:	str	r0, [sp]
   1c438:	b	1c43c <__assert_fail@plt+0xb15c>
   1c43c:	ldr	r0, [sp]
   1c440:	ldr	r1, [sp, #4]
   1c444:	add	r0, r1, r0
   1c448:	str	r0, [sp, #12]
   1c44c:	ldr	r0, [sp, #12]
   1c450:	add	sp, sp, #16
   1c454:	bx	lr
   1c458:	push	{r4, r5, fp, lr}
   1c45c:	add	fp, sp, #8
   1c460:	sub	sp, sp, #272	; 0x110
   1c464:	add	r1, sp, #7
   1c468:	str	r0, [fp, #-16]
   1c46c:	ldr	r0, [fp, #-16]
   1c470:	movw	r2, #257	; 0x101
   1c474:	bl	1c4f4 <__assert_fail@plt+0xb214>
   1c478:	cmp	r0, #0
   1c47c:	beq	1c490 <__assert_fail@plt+0xb1b0>
   1c480:	movw	r0, #0
   1c484:	and	r0, r0, #1
   1c488:	strb	r0, [fp, #-9]
   1c48c:	b	1c4e4 <__assert_fail@plt+0xb204>
   1c490:	add	r0, sp, #7
   1c494:	movw	r1, #55655	; 0xd967
   1c498:	movt	r1, #1
   1c49c:	bl	1104c <strcmp@plt>
   1c4a0:	cmp	r0, #0
   1c4a4:	movw	r0, #1
   1c4a8:	str	r0, [sp]
   1c4ac:	beq	1c4d0 <__assert_fail@plt+0xb1f0>
   1c4b0:	add	r0, sp, #7
   1c4b4:	movw	r1, #55657	; 0xd969
   1c4b8:	movt	r1, #1
   1c4bc:	bl	1104c <strcmp@plt>
   1c4c0:	cmp	r0, #0
   1c4c4:	movw	r0, #0
   1c4c8:	moveq	r0, #1
   1c4cc:	str	r0, [sp]
   1c4d0:	ldr	r0, [sp]
   1c4d4:	mvn	r1, #0
   1c4d8:	eor	r0, r0, r1
   1c4dc:	and	r0, r0, #1
   1c4e0:	strb	r0, [fp, #-9]
   1c4e4:	ldrb	r0, [fp, #-9]
   1c4e8:	and	r0, r0, #1
   1c4ec:	sub	sp, fp, #8
   1c4f0:	pop	{r4, r5, fp, pc}
   1c4f4:	push	{fp, lr}
   1c4f8:	mov	fp, sp
   1c4fc:	sub	sp, sp, #16
   1c500:	str	r0, [fp, #-4]
   1c504:	str	r1, [sp, #8]
   1c508:	str	r2, [sp, #4]
   1c50c:	ldr	r0, [fp, #-4]
   1c510:	ldr	r1, [sp, #8]
   1c514:	ldr	r2, [sp, #4]
   1c518:	bl	1c524 <__assert_fail@plt+0xb244>
   1c51c:	mov	sp, fp
   1c520:	pop	{fp, pc}
   1c524:	push	{fp, lr}
   1c528:	mov	fp, sp
   1c52c:	sub	sp, sp, #24
   1c530:	str	r0, [fp, #-8]
   1c534:	str	r1, [sp, #12]
   1c538:	str	r2, [sp, #8]
   1c53c:	ldr	r0, [fp, #-8]
   1c540:	bl	1c624 <__assert_fail@plt+0xb344>
   1c544:	str	r0, [sp, #4]
   1c548:	ldr	r0, [sp, #4]
   1c54c:	movw	r1, #0
   1c550:	cmp	r0, r1
   1c554:	bne	1c57c <__assert_fail@plt+0xb29c>
   1c558:	ldr	r0, [sp, #8]
   1c55c:	cmp	r0, #0
   1c560:	bls	1c570 <__assert_fail@plt+0xb290>
   1c564:	ldr	r0, [sp, #12]
   1c568:	movw	r1, #0
   1c56c:	strb	r1, [r0]
   1c570:	movw	r0, #22
   1c574:	str	r0, [fp, #-4]
   1c578:	b	1c5f8 <__assert_fail@plt+0xb318>
   1c57c:	ldr	r0, [sp, #4]
   1c580:	bl	111c0 <strlen@plt>
   1c584:	str	r0, [sp]
   1c588:	ldr	r0, [sp]
   1c58c:	ldr	lr, [sp, #8]
   1c590:	cmp	r0, lr
   1c594:	bcs	1c5b8 <__assert_fail@plt+0xb2d8>
   1c598:	ldr	r0, [sp, #12]
   1c59c:	ldr	r1, [sp, #4]
   1c5a0:	ldr	r2, [sp]
   1c5a4:	add	r2, r2, #1
   1c5a8:	bl	110ac <memcpy@plt>
   1c5ac:	movw	r0, #0
   1c5b0:	str	r0, [fp, #-4]
   1c5b4:	b	1c5f8 <__assert_fail@plt+0xb318>
   1c5b8:	ldr	r0, [sp, #8]
   1c5bc:	cmp	r0, #0
   1c5c0:	bls	1c5f0 <__assert_fail@plt+0xb310>
   1c5c4:	ldr	r0, [sp, #12]
   1c5c8:	ldr	r1, [sp, #4]
   1c5cc:	ldr	r2, [sp, #8]
   1c5d0:	sub	r2, r2, #1
   1c5d4:	bl	110ac <memcpy@plt>
   1c5d8:	ldr	r0, [sp, #12]
   1c5dc:	ldr	r1, [sp, #8]
   1c5e0:	sub	r1, r1, #1
   1c5e4:	add	r0, r0, r1
   1c5e8:	movw	r1, #0
   1c5ec:	strb	r1, [r0]
   1c5f0:	movw	r0, #34	; 0x22
   1c5f4:	str	r0, [fp, #-4]
   1c5f8:	ldr	r0, [fp, #-4]
   1c5fc:	mov	sp, fp
   1c600:	pop	{fp, pc}
   1c604:	push	{fp, lr}
   1c608:	mov	fp, sp
   1c60c:	sub	sp, sp, #8
   1c610:	str	r0, [sp, #4]
   1c614:	ldr	r0, [sp, #4]
   1c618:	bl	1c624 <__assert_fail@plt+0xb344>
   1c61c:	mov	sp, fp
   1c620:	pop	{fp, pc}
   1c624:	push	{fp, lr}
   1c628:	mov	fp, sp
   1c62c:	sub	sp, sp, #8
   1c630:	str	r0, [sp, #4]
   1c634:	ldr	r0, [sp, #4]
   1c638:	movw	r1, #0
   1c63c:	bl	11244 <setlocale@plt>
   1c640:	str	r0, [sp]
   1c644:	ldr	r0, [sp]
   1c648:	mov	sp, fp
   1c64c:	pop	{fp, pc}
   1c650:	cmp	r3, #0
   1c654:	cmpeq	r2, #0
   1c658:	bne	1c67c <__assert_fail@plt+0xb39c>
   1c65c:	cmp	r1, #0
   1c660:	movlt	r1, #-2147483648	; 0x80000000
   1c664:	movlt	r0, #0
   1c668:	blt	1c678 <__assert_fail@plt+0xb398>
   1c66c:	cmpeq	r0, #0
   1c670:	mvnne	r1, #-2147483648	; 0x80000000
   1c674:	mvnne	r0, #0
   1c678:	b	1c760 <__assert_fail@plt+0xb480>
   1c67c:	sub	sp, sp, #8
   1c680:	push	{sp, lr}
   1c684:	cmp	r1, #0
   1c688:	blt	1c6a8 <__assert_fail@plt+0xb3c8>
   1c68c:	cmp	r3, #0
   1c690:	blt	1c6dc <__assert_fail@plt+0xb3fc>
   1c694:	bl	1c770 <__assert_fail@plt+0xb490>
   1c698:	ldr	lr, [sp, #4]
   1c69c:	add	sp, sp, #8
   1c6a0:	pop	{r2, r3}
   1c6a4:	bx	lr
   1c6a8:	rsbs	r0, r0, #0
   1c6ac:	sbc	r1, r1, r1, lsl #1
   1c6b0:	cmp	r3, #0
   1c6b4:	blt	1c700 <__assert_fail@plt+0xb420>
   1c6b8:	bl	1c770 <__assert_fail@plt+0xb490>
   1c6bc:	ldr	lr, [sp, #4]
   1c6c0:	add	sp, sp, #8
   1c6c4:	pop	{r2, r3}
   1c6c8:	rsbs	r0, r0, #0
   1c6cc:	sbc	r1, r1, r1, lsl #1
   1c6d0:	rsbs	r2, r2, #0
   1c6d4:	sbc	r3, r3, r3, lsl #1
   1c6d8:	bx	lr
   1c6dc:	rsbs	r2, r2, #0
   1c6e0:	sbc	r3, r3, r3, lsl #1
   1c6e4:	bl	1c770 <__assert_fail@plt+0xb490>
   1c6e8:	ldr	lr, [sp, #4]
   1c6ec:	add	sp, sp, #8
   1c6f0:	pop	{r2, r3}
   1c6f4:	rsbs	r0, r0, #0
   1c6f8:	sbc	r1, r1, r1, lsl #1
   1c6fc:	bx	lr
   1c700:	rsbs	r2, r2, #0
   1c704:	sbc	r3, r3, r3, lsl #1
   1c708:	bl	1c770 <__assert_fail@plt+0xb490>
   1c70c:	ldr	lr, [sp, #4]
   1c710:	add	sp, sp, #8
   1c714:	pop	{r2, r3}
   1c718:	rsbs	r2, r2, #0
   1c71c:	sbc	r3, r3, r3, lsl #1
   1c720:	bx	lr
   1c724:	cmp	r3, #0
   1c728:	cmpeq	r2, #0
   1c72c:	bne	1c744 <__assert_fail@plt+0xb464>
   1c730:	cmp	r1, #0
   1c734:	cmpeq	r0, #0
   1c738:	mvnne	r1, #0
   1c73c:	mvnne	r0, #0
   1c740:	b	1c760 <__assert_fail@plt+0xb480>
   1c744:	sub	sp, sp, #8
   1c748:	push	{sp, lr}
   1c74c:	bl	1c770 <__assert_fail@plt+0xb490>
   1c750:	ldr	lr, [sp, #4]
   1c754:	add	sp, sp, #8
   1c758:	pop	{r2, r3}
   1c75c:	bx	lr
   1c760:	push	{r1, lr}
   1c764:	mov	r0, #8
   1c768:	bl	11040 <raise@plt>
   1c76c:	pop	{r1, pc}
   1c770:	cmp	r1, r3
   1c774:	cmpeq	r0, r2
   1c778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c77c:	mov	r4, r0
   1c780:	movcc	r0, #0
   1c784:	mov	r5, r1
   1c788:	ldr	lr, [sp, #36]	; 0x24
   1c78c:	movcc	r1, r0
   1c790:	bcc	1c88c <__assert_fail@plt+0xb5ac>
   1c794:	cmp	r3, #0
   1c798:	clzeq	ip, r2
   1c79c:	clzne	ip, r3
   1c7a0:	addeq	ip, ip, #32
   1c7a4:	cmp	r5, #0
   1c7a8:	clzeq	r1, r4
   1c7ac:	addeq	r1, r1, #32
   1c7b0:	clzne	r1, r5
   1c7b4:	sub	ip, ip, r1
   1c7b8:	sub	sl, ip, #32
   1c7bc:	lsl	r9, r3, ip
   1c7c0:	rsb	fp, ip, #32
   1c7c4:	orr	r9, r9, r2, lsl sl
   1c7c8:	orr	r9, r9, r2, lsr fp
   1c7cc:	lsl	r8, r2, ip
   1c7d0:	cmp	r5, r9
   1c7d4:	cmpeq	r4, r8
   1c7d8:	movcc	r0, #0
   1c7dc:	movcc	r1, r0
   1c7e0:	bcc	1c7fc <__assert_fail@plt+0xb51c>
   1c7e4:	mov	r0, #1
   1c7e8:	subs	r4, r4, r8
   1c7ec:	lsl	r1, r0, sl
   1c7f0:	orr	r1, r1, r0, lsr fp
   1c7f4:	lsl	r0, r0, ip
   1c7f8:	sbc	r5, r5, r9
   1c7fc:	cmp	ip, #0
   1c800:	beq	1c88c <__assert_fail@plt+0xb5ac>
   1c804:	lsr	r6, r8, #1
   1c808:	orr	r6, r6, r9, lsl #31
   1c80c:	lsr	r7, r9, #1
   1c810:	mov	r2, ip
   1c814:	b	1c838 <__assert_fail@plt+0xb558>
   1c818:	subs	r3, r4, r6
   1c81c:	sbc	r8, r5, r7
   1c820:	adds	r3, r3, r3
   1c824:	adc	r8, r8, r8
   1c828:	adds	r4, r3, #1
   1c82c:	adc	r5, r8, #0
   1c830:	subs	r2, r2, #1
   1c834:	beq	1c854 <__assert_fail@plt+0xb574>
   1c838:	cmp	r5, r7
   1c83c:	cmpeq	r4, r6
   1c840:	bcs	1c818 <__assert_fail@plt+0xb538>
   1c844:	adds	r4, r4, r4
   1c848:	adc	r5, r5, r5
   1c84c:	subs	r2, r2, #1
   1c850:	bne	1c838 <__assert_fail@plt+0xb558>
   1c854:	lsr	r3, r4, ip
   1c858:	orr	r3, r3, r5, lsl fp
   1c85c:	lsr	r2, r5, ip
   1c860:	orr	r3, r3, r5, lsr sl
   1c864:	adds	r0, r0, r4
   1c868:	mov	r4, r3
   1c86c:	lsl	r3, r2, ip
   1c870:	orr	r3, r3, r4, lsl sl
   1c874:	lsl	ip, r4, ip
   1c878:	orr	r3, r3, r4, lsr fp
   1c87c:	adc	r1, r1, r5
   1c880:	subs	r0, r0, ip
   1c884:	mov	r5, r2
   1c888:	sbc	r1, r1, r3
   1c88c:	cmp	lr, #0
   1c890:	strdne	r4, [lr]
   1c894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c89c:	mov	r7, r0
   1c8a0:	ldr	r6, [pc, #72]	; 1c8f0 <__assert_fail@plt+0xb610>
   1c8a4:	ldr	r5, [pc, #72]	; 1c8f4 <__assert_fail@plt+0xb614>
   1c8a8:	add	r6, pc, r6
   1c8ac:	add	r5, pc, r5
   1c8b0:	sub	r6, r6, r5
   1c8b4:	mov	r8, r1
   1c8b8:	mov	r9, r2
   1c8bc:	bl	11008 <calloc@plt-0x20>
   1c8c0:	asrs	r6, r6, #2
   1c8c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c8c8:	mov	r4, #0
   1c8cc:	add	r4, r4, #1
   1c8d0:	ldr	r3, [r5], #4
   1c8d4:	mov	r2, r9
   1c8d8:	mov	r1, r8
   1c8dc:	mov	r0, r7
   1c8e0:	blx	r3
   1c8e4:	cmp	r6, r4
   1c8e8:	bne	1c8cc <__assert_fail@plt+0xb5ec>
   1c8ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c8f0:	andeq	r1, r1, ip, asr r6
   1c8f4:	andeq	r1, r1, r4, asr r6
   1c8f8:	bx	lr
   1c8fc:	ldr	r3, [pc, #12]	; 1c910 <__assert_fail@plt+0xb630>
   1c900:	mov	r1, #0
   1c904:	add	r3, pc, r3
   1c908:	ldr	r2, [r3]
   1c90c:	b	111f0 <__cxa_atexit@plt>
   1c910:	strdeq	r1, [r1], -r4

Disassembly of section .fini:

0001c914 <.fini>:
   1c914:	push	{r3, lr}
   1c918:	pop	{r3, pc}
