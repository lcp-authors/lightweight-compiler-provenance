
../repos/coreutils/src/fmt:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	11100 <__assert_fail@plt+0x48>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <calloc@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <calloc@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x0001e1bc

00010e48 <calloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #122880	; 0x1e000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <fputs_unlocked@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #122880	; 0x1e000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <raise@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #122880	; 0x1e000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <strcmp@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #122880	; 0x1e000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <posix_fadvise64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #122880	; 0x1e000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <printf@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #122880	; 0x1e000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <fflush@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #122880	; 0x1e000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <memmove@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #122880	; 0x1e000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <free@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #122880	; 0x1e000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <_exit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #122880	; 0x1e000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <memcpy@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #122880	; 0x1e000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <mbsinit@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #122880	; 0x1e000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <fwrite_unlocked@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #122880	; 0x1e000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <memcmp@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #122880	; 0x1e000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <getc_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #122880	; 0x1e000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

00010efc <realloc@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #122880	; 0x1e000
   10f04:	ldr	pc, [ip, #324]!	; 0x144

00010f08 <textdomain@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #122880	; 0x1e000
   10f10:	ldr	pc, [ip, #316]!	; 0x13c

00010f14 <iswprint@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #122880	; 0x1e000
   10f1c:	ldr	pc, [ip, #308]!	; 0x134

00010f20 <lseek64@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #122880	; 0x1e000
   10f28:	ldr	pc, [ip, #300]!	; 0x12c

00010f2c <__ctype_get_mb_cur_max@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #122880	; 0x1e000
   10f34:	ldr	pc, [ip, #292]!	; 0x124

00010f38 <__fpending@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #122880	; 0x1e000
   10f40:	ldr	pc, [ip, #284]!	; 0x11c

00010f44 <ferror_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #122880	; 0x1e000
   10f4c:	ldr	pc, [ip, #276]!	; 0x114

00010f50 <mbrtowc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #122880	; 0x1e000
   10f58:	ldr	pc, [ip, #268]!	; 0x10c

00010f5c <error@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #122880	; 0x1e000
   10f64:	ldr	pc, [ip, #260]!	; 0x104

00010f68 <malloc@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #122880	; 0x1e000
   10f70:	ldr	pc, [ip, #252]!	; 0xfc

00010f74 <__libc_start_main@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #122880	; 0x1e000
   10f7c:	ldr	pc, [ip, #244]!	; 0xf4

00010f80 <__freading@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #122880	; 0x1e000
   10f88:	ldr	pc, [ip, #236]!	; 0xec

00010f8c <__gmon_start__@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #122880	; 0x1e000
   10f94:	ldr	pc, [ip, #228]!	; 0xe4

00010f98 <getopt_long@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #122880	; 0x1e000
   10fa0:	ldr	pc, [ip, #220]!	; 0xdc

00010fa4 <__ctype_b_loc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #122880	; 0x1e000
   10fac:	ldr	pc, [ip, #212]!	; 0xd4

00010fb0 <exit@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #122880	; 0x1e000
   10fb8:	ldr	pc, [ip, #204]!	; 0xcc

00010fbc <gettext@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #122880	; 0x1e000
   10fc4:	ldr	pc, [ip, #196]!	; 0xc4

00010fc8 <strlen@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #122880	; 0x1e000
   10fd0:	ldr	pc, [ip, #188]!	; 0xbc

00010fd4 <strchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #122880	; 0x1e000
   10fdc:	ldr	pc, [ip, #180]!	; 0xb4

00010fe0 <fprintf@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #122880	; 0x1e000
   10fe8:	ldr	pc, [ip, #172]!	; 0xac

00010fec <__errno_location@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #122880	; 0x1e000
   10ff4:	ldr	pc, [ip, #164]!	; 0xa4

00010ff8 <__cxa_atexit@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #122880	; 0x1e000
   11000:	ldr	pc, [ip, #156]!	; 0x9c

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #122880	; 0x1e000
   1100c:	ldr	pc, [ip, #148]!	; 0x94

00011010 <fileno@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #122880	; 0x1e000
   11018:	ldr	pc, [ip, #140]!	; 0x8c

0001101c <strtoumax@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #122880	; 0x1e000
   11024:	ldr	pc, [ip, #132]!	; 0x84

00011028 <fclose@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #122880	; 0x1e000
   11030:	ldr	pc, [ip, #124]!	; 0x7c

00011034 <fseeko64@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #122880	; 0x1e000
   1103c:	ldr	pc, [ip, #116]!	; 0x74

00011040 <setlocale@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #122880	; 0x1e000
   11048:	ldr	pc, [ip, #108]!	; 0x6c

0001104c <strrchr@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #122880	; 0x1e000
   11054:	ldr	pc, [ip, #100]!	; 0x64

00011058 <nl_langinfo@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #122880	; 0x1e000
   11060:	ldr	pc, [ip, #92]!	; 0x5c

00011064 <clearerr_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #122880	; 0x1e000
   1106c:	ldr	pc, [ip, #84]!	; 0x54

00011070 <fopen64@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #122880	; 0x1e000
   11078:	ldr	pc, [ip, #76]!	; 0x4c

0001107c <bindtextdomain@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #122880	; 0x1e000
   11084:	ldr	pc, [ip, #68]!	; 0x44

00011088 <fputs@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #122880	; 0x1e000
   11090:	ldr	pc, [ip, #60]!	; 0x3c

00011094 <strncmp@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #122880	; 0x1e000
   1109c:	ldr	pc, [ip, #52]!	; 0x34

000110a0 <abort@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #122880	; 0x1e000
   110a8:	ldr	pc, [ip, #44]!	; 0x2c

000110ac <putchar_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #122880	; 0x1e000
   110b4:	ldr	pc, [ip, #36]!	; 0x24

000110b8 <__assert_fail@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #122880	; 0x1e000
   110c0:	ldr	pc, [ip, #28]!

Disassembly of section .text:

000110c4 <.text>:
   110c4:	mov	fp, #0
   110c8:	mov	lr, #0
   110cc:	pop	{r1}		; (ldr r1, [sp], #4)
   110d0:	mov	r2, sp
   110d4:	push	{r2}		; (str r2, [sp, #-4]!)
   110d8:	push	{r0}		; (str r0, [sp, #-4]!)
   110dc:	ldr	ip, [pc, #16]	; 110f4 <__assert_fail@plt+0x3c>
   110e0:	push	{ip}		; (str ip, [sp, #-4]!)
   110e4:	ldr	r0, [pc, #12]	; 110f8 <__assert_fail@plt+0x40>
   110e8:	ldr	r3, [pc, #12]	; 110fc <__assert_fail@plt+0x44>
   110ec:	bl	10f74 <__libc_start_main@plt>
   110f0:	bl	110a0 <abort@plt>
   110f4:			; <UNDEFINED> instruction: 0x0001dfb4
   110f8:	andeq	r1, r1, r4, lsl #10
   110fc:	andeq	sp, r1, r4, asr pc
   11100:	ldr	r3, [pc, #20]	; 1111c <__assert_fail@plt+0x64>
   11104:	ldr	r2, [pc, #20]	; 11120 <__assert_fail@plt+0x68>
   11108:	add	r3, pc, r3
   1110c:	ldr	r2, [r3, r2]
   11110:	cmp	r2, #0
   11114:	bxeq	lr
   11118:	b	10f8c <__gmon_start__@plt>
   1111c:	strdeq	sp, [r1], -r0
   11120:	andeq	r0, r0, r0, ror #1
   11124:	ldr	r0, [pc, #24]	; 11144 <__assert_fail@plt+0x8c>
   11128:	ldr	r3, [pc, #24]	; 11148 <__assert_fail@plt+0x90>
   1112c:	cmp	r3, r0
   11130:	bxeq	lr
   11134:	ldr	r3, [pc, #16]	; 1114c <__assert_fail@plt+0x94>
   11138:	cmp	r3, #0
   1113c:	bxeq	lr
   11140:	bx	r3
   11144:	andeq	pc, r2, r4, lsr r1	; <UNPREDICTABLE>
   11148:	andeq	pc, r2, r4, lsr r1	; <UNPREDICTABLE>
   1114c:	andeq	r0, r0, r0
   11150:	ldr	r0, [pc, #36]	; 1117c <__assert_fail@plt+0xc4>
   11154:	ldr	r1, [pc, #36]	; 11180 <__assert_fail@plt+0xc8>
   11158:	sub	r1, r1, r0
   1115c:	asr	r1, r1, #2
   11160:	add	r1, r1, r1, lsr #31
   11164:	asrs	r1, r1, #1
   11168:	bxeq	lr
   1116c:	ldr	r3, [pc, #16]	; 11184 <__assert_fail@plt+0xcc>
   11170:	cmp	r3, #0
   11174:	bxeq	lr
   11178:	bx	r3
   1117c:	andeq	pc, r2, r4, lsr r1	; <UNPREDICTABLE>
   11180:	andeq	pc, r2, r4, lsr r1	; <UNPREDICTABLE>
   11184:	andeq	r0, r0, r0
   11188:	push	{r4, lr}
   1118c:	ldr	r4, [pc, #24]	; 111ac <__assert_fail@plt+0xf4>
   11190:	ldrb	r3, [r4]
   11194:	cmp	r3, #0
   11198:	popne	{r4, pc}
   1119c:	bl	11124 <__assert_fail@plt+0x6c>
   111a0:	mov	r3, #1
   111a4:	strb	r3, [r4]
   111a8:	pop	{r4, pc}
   111ac:	andeq	pc, r2, ip, asr r1	; <UNPREDICTABLE>
   111b0:	b	11150 <__assert_fail@plt+0x98>
   111b4:	push	{fp, lr}
   111b8:	mov	fp, sp
   111bc:	sub	sp, sp, #40	; 0x28
   111c0:	str	r0, [fp, #-4]
   111c4:	ldr	r0, [fp, #-4]
   111c8:	cmp	r0, #0
   111cc:	beq	11218 <__assert_fail@plt+0x160>
   111d0:	b	111d4 <__assert_fail@plt+0x11c>
   111d4:	movw	r0, #61768	; 0xf148
   111d8:	movt	r0, #2
   111dc:	ldr	r0, [r0]
   111e0:	movw	r1, #57308	; 0xdfdc
   111e4:	movt	r1, #1
   111e8:	str	r0, [fp, #-8]
   111ec:	mov	r0, r1
   111f0:	bl	10fbc <gettext@plt>
   111f4:	movw	r1, #29336	; 0x7298
   111f8:	movt	r1, #3
   111fc:	ldr	r2, [r1]
   11200:	ldr	r1, [fp, #-8]
   11204:	str	r0, [fp, #-12]
   11208:	mov	r0, r1
   1120c:	ldr	r1, [fp, #-12]
   11210:	bl	10fe0 <fprintf@plt>
   11214:	b	11300 <__assert_fail@plt+0x248>
   11218:	movw	r0, #57347	; 0xe003
   1121c:	movt	r0, #1
   11220:	bl	10fbc <gettext@plt>
   11224:	movw	r1, #29336	; 0x7298
   11228:	movt	r1, #3
   1122c:	ldr	r1, [r1]
   11230:	bl	10e84 <printf@plt>
   11234:	movw	r1, #57389	; 0xe02d
   11238:	movt	r1, #1
   1123c:	str	r0, [fp, #-16]
   11240:	mov	r0, r1
   11244:	bl	10fbc <gettext@plt>
   11248:	movw	r1, #61780	; 0xf154
   1124c:	movt	r1, #2
   11250:	ldr	r1, [r1]
   11254:	bl	10e54 <fputs_unlocked@plt>
   11258:	str	r0, [sp, #20]
   1125c:	bl	11308 <__assert_fail@plt+0x250>
   11260:	bl	11330 <__assert_fail@plt+0x278>
   11264:	movw	r0, #57518	; 0xe0ae
   11268:	movt	r0, #1
   1126c:	bl	10fbc <gettext@plt>
   11270:	movw	r1, #61780	; 0xf154
   11274:	movt	r1, #2
   11278:	ldr	r1, [r1]
   1127c:	bl	10e54 <fputs_unlocked@plt>
   11280:	movw	r1, #57796	; 0xe1c4
   11284:	movt	r1, #1
   11288:	str	r0, [sp, #16]
   1128c:	mov	r0, r1
   11290:	bl	10fbc <gettext@plt>
   11294:	movw	r1, #61780	; 0xf154
   11298:	movt	r1, #2
   1129c:	ldr	r1, [r1]
   112a0:	bl	10e54 <fputs_unlocked@plt>
   112a4:	movw	r1, #58082	; 0xe2e2
   112a8:	movt	r1, #1
   112ac:	str	r0, [sp, #12]
   112b0:	mov	r0, r1
   112b4:	bl	10fbc <gettext@plt>
   112b8:	movw	r1, #61780	; 0xf154
   112bc:	movt	r1, #2
   112c0:	ldr	r1, [r1]
   112c4:	bl	10e54 <fputs_unlocked@plt>
   112c8:	movw	r1, #58127	; 0xe30f
   112cc:	movt	r1, #1
   112d0:	str	r0, [sp, #8]
   112d4:	mov	r0, r1
   112d8:	bl	10fbc <gettext@plt>
   112dc:	movw	r1, #61780	; 0xf154
   112e0:	movt	r1, #2
   112e4:	ldr	r1, [r1]
   112e8:	bl	10e54 <fputs_unlocked@plt>
   112ec:	movw	r1, #58181	; 0xe345
   112f0:	movt	r1, #1
   112f4:	str	r0, [sp, #4]
   112f8:	mov	r0, r1
   112fc:	bl	11358 <__assert_fail@plt+0x2a0>
   11300:	ldr	r0, [fp, #-4]
   11304:	bl	10fb0 <exit@plt>
   11308:	push	{fp, lr}
   1130c:	mov	fp, sp
   11310:	movw	r0, #58416	; 0xe430
   11314:	movt	r0, #1
   11318:	bl	10fbc <gettext@plt>
   1131c:	movw	r1, #61780	; 0xf154
   11320:	movt	r1, #2
   11324:	ldr	r1, [r1]
   11328:	bl	10e54 <fputs_unlocked@plt>
   1132c:	pop	{fp, pc}
   11330:	push	{fp, lr}
   11334:	mov	fp, sp
   11338:	movw	r0, #58472	; 0xe468
   1133c:	movt	r0, #1
   11340:	bl	10fbc <gettext@plt>
   11344:	movw	r1, #61780	; 0xf154
   11348:	movt	r1, #2
   1134c:	ldr	r1, [r1]
   11350:	bl	10e54 <fputs_unlocked@plt>
   11354:	pop	{fp, pc}
   11358:	push	{fp, lr}
   1135c:	mov	fp, sp
   11360:	sub	sp, sp, #88	; 0x58
   11364:	add	r1, sp, #28
   11368:	movw	r2, #59184	; 0xe730
   1136c:	movt	r2, #1
   11370:	str	r0, [fp, #-4]
   11374:	mov	r0, r1
   11378:	str	r1, [sp, #12]
   1137c:	mov	r1, r2
   11380:	movw	r2, #56	; 0x38
   11384:	bl	10ec0 <memcpy@plt>
   11388:	ldr	r0, [fp, #-4]
   1138c:	str	r0, [sp, #24]
   11390:	ldr	r0, [sp, #12]
   11394:	str	r0, [sp, #20]
   11398:	ldr	r0, [sp, #20]
   1139c:	ldr	r0, [r0]
   113a0:	movw	r1, #0
   113a4:	cmp	r0, r1
   113a8:	movw	r0, #0
   113ac:	str	r0, [sp, #8]
   113b0:	beq	113dc <__assert_fail@plt+0x324>
   113b4:	ldr	r0, [fp, #-4]
   113b8:	ldr	r1, [sp, #20]
   113bc:	ldr	r1, [r1]
   113c0:	bl	10e6c <strcmp@plt>
   113c4:	cmp	r0, #0
   113c8:	movw	r0, #0
   113cc:	moveq	r0, #1
   113d0:	mvn	r1, #0
   113d4:	eor	r0, r0, r1
   113d8:	str	r0, [sp, #8]
   113dc:	ldr	r0, [sp, #8]
   113e0:	tst	r0, #1
   113e4:	beq	113f8 <__assert_fail@plt+0x340>
   113e8:	ldr	r0, [sp, #20]
   113ec:	add	r0, r0, #8
   113f0:	str	r0, [sp, #20]
   113f4:	b	11398 <__assert_fail@plt+0x2e0>
   113f8:	ldr	r0, [sp, #20]
   113fc:	ldr	r0, [r0, #4]
   11400:	movw	r1, #0
   11404:	cmp	r0, r1
   11408:	beq	11418 <__assert_fail@plt+0x360>
   1140c:	ldr	r0, [sp, #20]
   11410:	ldr	r0, [r0, #4]
   11414:	str	r0, [sp, #24]
   11418:	movw	r0, #58642	; 0xe512
   1141c:	movt	r0, #1
   11420:	bl	10fbc <gettext@plt>
   11424:	movw	r1, #58324	; 0xe3d4
   11428:	movt	r1, #1
   1142c:	movw	r2, #58665	; 0xe529
   11430:	movt	r2, #1
   11434:	bl	10e84 <printf@plt>
   11438:	movw	r1, #5
   1143c:	str	r0, [sp, #4]
   11440:	mov	r0, r1
   11444:	movw	r1, #0
   11448:	bl	11040 <setlocale@plt>
   1144c:	str	r0, [sp, #16]
   11450:	ldr	r0, [sp, #16]
   11454:	movw	r1, #0
   11458:	cmp	r0, r1
   1145c:	beq	11498 <__assert_fail@plt+0x3e0>
   11460:	ldr	r0, [sp, #16]
   11464:	movw	r1, #58705	; 0xe551
   11468:	movt	r1, #1
   1146c:	movw	r2, #3
   11470:	bl	11094 <strncmp@plt>
   11474:	cmp	r0, #0
   11478:	beq	11498 <__assert_fail@plt+0x3e0>
   1147c:	movw	r0, #58709	; 0xe555
   11480:	movt	r0, #1
   11484:	bl	10fbc <gettext@plt>
   11488:	movw	r1, #61780	; 0xf154
   1148c:	movt	r1, #2
   11490:	ldr	r1, [r1]
   11494:	bl	10e54 <fputs_unlocked@plt>
   11498:	movw	r0, #58780	; 0xe59c
   1149c:	movt	r0, #1
   114a0:	bl	10fbc <gettext@plt>
   114a4:	ldr	r2, [fp, #-4]
   114a8:	movw	r1, #58665	; 0xe529
   114ac:	movt	r1, #1
   114b0:	bl	10e84 <printf@plt>
   114b4:	movw	r1, #58807	; 0xe5b7
   114b8:	movt	r1, #1
   114bc:	str	r0, [sp]
   114c0:	mov	r0, r1
   114c4:	bl	10fbc <gettext@plt>
   114c8:	ldr	r1, [sp, #24]
   114cc:	ldr	r2, [sp, #24]
   114d0:	ldr	r3, [fp, #-4]
   114d4:	cmp	r2, r3
   114d8:	movw	r2, #0
   114dc:	moveq	r2, #1
   114e0:	tst	r2, #1
   114e4:	movw	r2, #58857	; 0xe5e9
   114e8:	movt	r2, #1
   114ec:	movw	r3, #58575	; 0xe4cf
   114f0:	movt	r3, #1
   114f4:	movne	r2, r3
   114f8:	bl	10e84 <printf@plt>
   114fc:	mov	sp, fp
   11500:	pop	{fp, pc}
   11504:	push	{fp, lr}
   11508:	mov	fp, sp
   1150c:	sub	sp, sp, #128	; 0x80
   11510:	movw	r2, #0
   11514:	str	r2, [fp, #-4]
   11518:	str	r0, [fp, #-8]
   1151c:	str	r1, [fp, #-12]
   11520:	movw	r0, #1
   11524:	strb	r0, [fp, #-17]	; 0xffffffef
   11528:	str	r2, [fp, #-24]	; 0xffffffe8
   1152c:	str	r2, [fp, #-28]	; 0xffffffe4
   11530:	ldr	r0, [fp, #-12]
   11534:	ldr	r0, [r0]
   11538:	bl	13b74 <__assert_fail@plt+0x2abc>
   1153c:	movw	r0, #6
   11540:	movw	r1, #58857	; 0xe5e9
   11544:	movt	r1, #1
   11548:	bl	11040 <setlocale@plt>
   1154c:	movw	r1, #58328	; 0xe3d8
   11550:	movt	r1, #1
   11554:	str	r0, [fp, #-44]	; 0xffffffd4
   11558:	mov	r0, r1
   1155c:	movw	r1, #58185	; 0xe349
   11560:	movt	r1, #1
   11564:	bl	1107c <bindtextdomain@plt>
   11568:	movw	r1, #58328	; 0xe3d8
   1156c:	movt	r1, #1
   11570:	str	r0, [fp, #-48]	; 0xffffffd0
   11574:	mov	r0, r1
   11578:	bl	10f08 <textdomain@plt>
   1157c:	movw	r1, #14072	; 0x36f8
   11580:	movt	r1, #1
   11584:	str	r0, [fp, #-52]	; 0xffffffcc
   11588:	mov	r0, r1
   1158c:	bl	1dfb8 <__assert_fail@plt+0xcf00>
   11590:	movw	r1, #61792	; 0xf160
   11594:	movt	r1, #2
   11598:	movw	r2, #0
   1159c:	strb	r2, [r1]
   115a0:	movw	r1, #61793	; 0xf161
   115a4:	movt	r1, #2
   115a8:	strb	r2, [r1]
   115ac:	movw	r1, #61794	; 0xf162
   115b0:	movt	r1, #2
   115b4:	strb	r2, [r1]
   115b8:	movw	r1, #61795	; 0xf163
   115bc:	movt	r1, #2
   115c0:	strb	r2, [r1]
   115c4:	movw	r1, #61796	; 0xf164
   115c8:	movt	r1, #2
   115cc:	movw	r2, #75	; 0x4b
   115d0:	str	r2, [r1]
   115d4:	movw	r1, #61800	; 0xf168
   115d8:	movt	r1, #2
   115dc:	movw	r2, #58857	; 0xe5e9
   115e0:	movt	r2, #1
   115e4:	str	r2, [r1]
   115e8:	movw	r1, #61804	; 0xf16c
   115ec:	movt	r1, #2
   115f0:	movw	r2, #0
   115f4:	str	r2, [r1]
   115f8:	movw	r1, #61808	; 0xf170
   115fc:	movt	r1, #2
   11600:	str	r2, [r1]
   11604:	movw	r1, #61812	; 0xf174
   11608:	movt	r1, #2
   1160c:	str	r2, [r1]
   11610:	ldr	r1, [fp, #-8]
   11614:	cmp	r1, #1
   11618:	ble	11684 <__assert_fail@plt+0x5cc>
   1161c:	ldr	r0, [fp, #-12]
   11620:	ldr	r0, [r0, #4]
   11624:	ldrb	r0, [r0]
   11628:	cmp	r0, #45	; 0x2d
   1162c:	bne	11684 <__assert_fail@plt+0x5cc>
   11630:	ldr	r0, [fp, #-12]
   11634:	ldr	r0, [r0, #4]
   11638:	ldrb	r0, [r0, #1]
   1163c:	sub	r0, r0, #48	; 0x30
   11640:	cmp	r0, #9
   11644:	bhi	11684 <__assert_fail@plt+0x5cc>
   11648:	ldr	r0, [fp, #-12]
   1164c:	ldr	r0, [r0, #4]
   11650:	add	r0, r0, #1
   11654:	str	r0, [fp, #-24]	; 0xffffffe8
   11658:	ldr	r0, [fp, #-12]
   1165c:	ldr	r0, [r0]
   11660:	ldr	r1, [fp, #-12]
   11664:	str	r0, [r1, #4]
   11668:	ldr	r0, [fp, #-12]
   1166c:	add	r0, r0, #4
   11670:	str	r0, [fp, #-12]
   11674:	ldr	r0, [fp, #-8]
   11678:	mvn	r1, #0
   1167c:	add	r0, r0, r1
   11680:	str	r0, [fp, #-8]
   11684:	b	11688 <__assert_fail@plt+0x5d0>
   11688:	ldr	r0, [fp, #-8]
   1168c:	ldr	r1, [fp, #-12]
   11690:	movw	r2, #58209	; 0xe361
   11694:	movt	r2, #1
   11698:	movw	r3, #59024	; 0xe690
   1169c:	movt	r3, #1
   116a0:	movw	ip, #0
   116a4:	str	ip, [sp]
   116a8:	bl	10f98 <getopt_long@plt>
   116ac:	str	r0, [fp, #-16]
   116b0:	cmn	r0, #1
   116b4:	beq	11868 <__assert_fail@plt+0x7b0>
   116b8:	ldr	r0, [fp, #-16]
   116bc:	cmn	r0, #3
   116c0:	str	r0, [fp, #-56]	; 0xffffffc8
   116c4:	beq	1181c <__assert_fail@plt+0x764>
   116c8:	b	116cc <__assert_fail@plt+0x614>
   116cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   116d0:	cmn	r0, #2
   116d4:	beq	11814 <__assert_fail@plt+0x75c>
   116d8:	b	116dc <__assert_fail@plt+0x624>
   116dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   116e0:	cmp	r0, #99	; 0x63
   116e4:	beq	11788 <__assert_fail@plt+0x6d0>
   116e8:	b	116ec <__assert_fail@plt+0x634>
   116ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   116f0:	cmp	r0, #103	; 0x67
   116f4:	beq	117ec <__assert_fail@plt+0x734>
   116f8:	b	116fc <__assert_fail@plt+0x644>
   116fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11700:	cmp	r0, #112	; 0x70
   11704:	beq	11800 <__assert_fail@plt+0x748>
   11708:	b	1170c <__assert_fail@plt+0x654>
   1170c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11710:	cmp	r0, #115	; 0x73
   11714:	beq	1179c <__assert_fail@plt+0x6e4>
   11718:	b	1171c <__assert_fail@plt+0x664>
   1171c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11720:	cmp	r0, #116	; 0x74
   11724:	beq	117b0 <__assert_fail@plt+0x6f8>
   11728:	b	1172c <__assert_fail@plt+0x674>
   1172c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11730:	cmp	r0, #117	; 0x75
   11734:	beq	117c4 <__assert_fail@plt+0x70c>
   11738:	b	1173c <__assert_fail@plt+0x684>
   1173c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11740:	cmp	r0, #119	; 0x77
   11744:	beq	117d8 <__assert_fail@plt+0x720>
   11748:	b	1174c <__assert_fail@plt+0x694>
   1174c:	ldr	r0, [fp, #-16]
   11750:	sub	r0, r0, #48	; 0x30
   11754:	cmp	r0, #9
   11758:	bhi	11780 <__assert_fail@plt+0x6c8>
   1175c:	movw	r0, #58230	; 0xe376
   11760:	movt	r0, #1
   11764:	bl	10fbc <gettext@plt>
   11768:	ldr	r3, [fp, #-16]
   1176c:	movw	r1, #0
   11770:	str	r0, [fp, #-60]	; 0xffffffc4
   11774:	mov	r0, r1
   11778:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1177c:	bl	10f5c <error@plt>
   11780:	movw	r0, #1
   11784:	bl	111b4 <__assert_fail@plt+0xfc>
   11788:	movw	r0, #61795	; 0xf163
   1178c:	movt	r0, #2
   11790:	movw	r1, #1
   11794:	strb	r1, [r0]
   11798:	b	11864 <__assert_fail@plt+0x7ac>
   1179c:	movw	r0, #61793	; 0xf161
   117a0:	movt	r0, #2
   117a4:	movw	r1, #1
   117a8:	strb	r1, [r0]
   117ac:	b	11864 <__assert_fail@plt+0x7ac>
   117b0:	movw	r0, #61794	; 0xf162
   117b4:	movt	r0, #2
   117b8:	movw	r1, #1
   117bc:	strb	r1, [r0]
   117c0:	b	11864 <__assert_fail@plt+0x7ac>
   117c4:	movw	r0, #61792	; 0xf160
   117c8:	movt	r0, #2
   117cc:	movw	r1, #1
   117d0:	strb	r1, [r0]
   117d4:	b	11864 <__assert_fail@plt+0x7ac>
   117d8:	movw	r0, #61784	; 0xf158
   117dc:	movt	r0, #2
   117e0:	ldr	r0, [r0]
   117e4:	str	r0, [fp, #-24]	; 0xffffffe8
   117e8:	b	11864 <__assert_fail@plt+0x7ac>
   117ec:	movw	r0, #61784	; 0xf158
   117f0:	movt	r0, #2
   117f4:	ldr	r0, [r0]
   117f8:	str	r0, [fp, #-28]	; 0xffffffe4
   117fc:	b	11864 <__assert_fail@plt+0x7ac>
   11800:	movw	r0, #61784	; 0xf158
   11804:	movt	r0, #2
   11808:	ldr	r0, [r0]
   1180c:	bl	11bd4 <__assert_fail@plt+0xb1c>
   11810:	b	11864 <__assert_fail@plt+0x7ac>
   11814:	movw	r0, #0
   11818:	bl	111b4 <__assert_fail@plt+0xfc>
   1181c:	movw	r0, #61780	; 0xf154
   11820:	movt	r0, #2
   11824:	ldr	r0, [r0]
   11828:	movw	r1, #61676	; 0xf0ec
   1182c:	movt	r1, #2
   11830:	ldr	r3, [r1]
   11834:	movw	r1, #58181	; 0xe345
   11838:	movt	r1, #1
   1183c:	movw	r2, #58324	; 0xe3d4
   11840:	movt	r2, #1
   11844:	movw	ip, #58338	; 0xe3e2
   11848:	movt	ip, #1
   1184c:	str	ip, [sp]
   11850:	movw	ip, #0
   11854:	str	ip, [sp, #4]
   11858:	bl	16a4c <__assert_fail@plt+0x5994>
   1185c:	movw	r0, #0
   11860:	bl	10fb0 <exit@plt>
   11864:	b	11688 <__assert_fail@plt+0x5d0>
   11868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1186c:	movw	r1, #0
   11870:	cmp	r0, r1
   11874:	beq	118d4 <__assert_fail@plt+0x81c>
   11878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1187c:	movw	r1, #58352	; 0xe3f0
   11880:	movt	r1, #1
   11884:	str	r0, [sp, #64]	; 0x40
   11888:	mov	r0, r1
   1188c:	bl	10fbc <gettext@plt>
   11890:	mov	r1, sp
   11894:	mov	r2, #0
   11898:	str	r2, [r1, #16]
   1189c:	str	r0, [r1, #12]
   118a0:	movw	r0, #58857	; 0xe5e9
   118a4:	movt	r0, #1
   118a8:	str	r0, [r1, #8]
   118ac:	str	r2, [r1, #4]
   118b0:	movw	r0, #2500	; 0x9c4
   118b4:	str	r0, [r1]
   118b8:	ldr	r0, [sp, #64]	; 0x40
   118bc:	str	r2, [sp, #60]	; 0x3c
   118c0:	ldr	r3, [sp, #60]	; 0x3c
   118c4:	bl	19b4c <__assert_fail@plt+0x8a94>
   118c8:	movw	r2, #61796	; 0xf164
   118cc:	movt	r2, #2
   118d0:	str	r0, [r2]
   118d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118d8:	movw	r1, #0
   118dc:	cmp	r0, r1
   118e0:	beq	1198c <__assert_fail@plt+0x8d4>
   118e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118e8:	movw	r1, #61796	; 0xf164
   118ec:	movt	r1, #2
   118f0:	ldr	r1, [r1]
   118f4:	asr	r2, r1, #31
   118f8:	movw	r3, #58352	; 0xe3f0
   118fc:	movt	r3, #1
   11900:	str	r0, [sp, #56]	; 0x38
   11904:	mov	r0, r3
   11908:	str	r1, [sp, #52]	; 0x34
   1190c:	str	r2, [sp, #48]	; 0x30
   11910:	bl	10fbc <gettext@plt>
   11914:	mov	r1, sp
   11918:	mov	r2, #0
   1191c:	str	r2, [r1, #16]
   11920:	str	r0, [r1, #12]
   11924:	movw	r0, #58857	; 0xe5e9
   11928:	movt	r0, #1
   1192c:	str	r0, [r1, #8]
   11930:	ldr	r0, [sp, #48]	; 0x30
   11934:	str	r0, [r1, #4]
   11938:	ldr	r0, [sp, #52]	; 0x34
   1193c:	str	r0, [r1]
   11940:	ldr	r0, [sp, #56]	; 0x38
   11944:	str	r2, [sp, #44]	; 0x2c
   11948:	ldr	r3, [sp, #44]	; 0x2c
   1194c:	bl	19b4c <__assert_fail@plt+0x8a94>
   11950:	movw	r2, #61816	; 0xf178
   11954:	movt	r2, #2
   11958:	str	r0, [r2]
   1195c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11960:	movw	r2, #0
   11964:	cmp	r0, r2
   11968:	bne	11988 <__assert_fail@plt+0x8d0>
   1196c:	movw	r0, #61816	; 0xf178
   11970:	movt	r0, #2
   11974:	ldr	r0, [r0]
   11978:	add	r0, r0, #10
   1197c:	movw	r1, #61796	; 0xf164
   11980:	movt	r1, #2
   11984:	str	r0, [r1]
   11988:	b	119b4 <__assert_fail@plt+0x8fc>
   1198c:	movw	r0, #61796	; 0xf164
   11990:	movt	r0, #2
   11994:	ldr	r0, [r0]
   11998:	movw	r1, #187	; 0xbb
   1199c:	mul	r0, r0, r1
   119a0:	movw	r1, #200	; 0xc8
   119a4:	sdiv	r0, r0, r1
   119a8:	movw	r1, #61816	; 0xf178
   119ac:	movt	r1, #2
   119b0:	str	r0, [r1]
   119b4:	movw	r0, #0
   119b8:	strb	r0, [fp, #-29]	; 0xffffffe3
   119bc:	movw	r0, #61760	; 0xf140
   119c0:	movt	r0, #2
   119c4:	ldr	r0, [r0]
   119c8:	ldr	r1, [fp, #-8]
   119cc:	cmp	r0, r1
   119d0:	bne	11a00 <__assert_fail@plt+0x948>
   119d4:	movw	r0, #1
   119d8:	strb	r0, [fp, #-29]	; 0xffffffe3
   119dc:	movw	r0, #61776	; 0xf150
   119e0:	movt	r0, #2
   119e4:	ldr	r0, [r0]
   119e8:	movw	r1, #59340	; 0xe7cc
   119ec:	movt	r1, #1
   119f0:	bl	11ce0 <__assert_fail@plt+0xc28>
   119f4:	and	r0, r0, #1
   119f8:	strb	r0, [fp, #-17]	; 0xffffffef
   119fc:	b	11b60 <__assert_fail@plt+0xaa8>
   11a00:	b	11a04 <__assert_fail@plt+0x94c>
   11a04:	movw	r0, #61760	; 0xf140
   11a08:	movt	r0, #2
   11a0c:	ldr	r0, [r0]
   11a10:	ldr	r1, [fp, #-8]
   11a14:	cmp	r0, r1
   11a18:	bge	11b5c <__assert_fail@plt+0xaa4>
   11a1c:	ldr	r0, [fp, #-12]
   11a20:	movw	r1, #61760	; 0xf140
   11a24:	movt	r1, #2
   11a28:	ldr	r1, [r1]
   11a2c:	add	r0, r0, r1, lsl #2
   11a30:	ldr	r0, [r0]
   11a34:	str	r0, [fp, #-36]	; 0xffffffdc
   11a38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a3c:	movw	r1, #59340	; 0xe7cc
   11a40:	movt	r1, #1
   11a44:	bl	10e6c <strcmp@plt>
   11a48:	cmp	r0, #0
   11a4c:	bne	11a94 <__assert_fail@plt+0x9dc>
   11a50:	movw	r0, #61776	; 0xf150
   11a54:	movt	r0, #2
   11a58:	ldr	r0, [r0]
   11a5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11a60:	bl	11ce0 <__assert_fail@plt+0xc28>
   11a64:	and	r0, r0, #1
   11a68:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11a6c:	and	r1, r1, #1
   11a70:	and	r0, r1, r0
   11a74:	cmp	r0, #0
   11a78:	movw	r0, #0
   11a7c:	movne	r0, #1
   11a80:	and	r0, r0, #1
   11a84:	strb	r0, [fp, #-17]	; 0xffffffef
   11a88:	movw	r0, #1
   11a8c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11a90:	b	11b40 <__assert_fail@plt+0xa88>
   11a94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a98:	movw	r1, #58949	; 0xe645
   11a9c:	movt	r1, #1
   11aa0:	bl	11070 <fopen64@plt>
   11aa4:	str	r0, [fp, #-40]	; 0xffffffd8
   11aa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11aac:	movw	r1, #0
   11ab0:	cmp	r0, r1
   11ab4:	beq	11aec <__assert_fail@plt+0xa34>
   11ab8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11ac0:	bl	11ce0 <__assert_fail@plt+0xc28>
   11ac4:	and	r0, r0, #1
   11ac8:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11acc:	and	r1, r1, #1
   11ad0:	and	r0, r1, r0
   11ad4:	cmp	r0, #0
   11ad8:	movw	r0, #0
   11adc:	movne	r0, #1
   11ae0:	and	r0, r0, #1
   11ae4:	strb	r0, [fp, #-17]	; 0xffffffef
   11ae8:	b	11b3c <__assert_fail@plt+0xa84>
   11aec:	bl	10fec <__errno_location@plt>
   11af0:	ldr	r1, [r0]
   11af4:	movw	r0, #58366	; 0xe3fe
   11af8:	movt	r0, #1
   11afc:	str	r1, [sp, #40]	; 0x28
   11b00:	bl	10fbc <gettext@plt>
   11b04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b08:	movw	r2, #4
   11b0c:	str	r0, [sp, #36]	; 0x24
   11b10:	mov	r0, r2
   11b14:	bl	15e38 <__assert_fail@plt+0x4d80>
   11b18:	movw	r1, #0
   11b1c:	str	r0, [sp, #32]
   11b20:	mov	r0, r1
   11b24:	ldr	r1, [sp, #40]	; 0x28
   11b28:	ldr	r2, [sp, #36]	; 0x24
   11b2c:	ldr	r3, [sp, #32]
   11b30:	bl	10f5c <error@plt>
   11b34:	movw	r0, #0
   11b38:	strb	r0, [fp, #-17]	; 0xffffffef
   11b3c:	b	11b40 <__assert_fail@plt+0xa88>
   11b40:	b	11b44 <__assert_fail@plt+0xa8c>
   11b44:	movw	r0, #61760	; 0xf140
   11b48:	movt	r0, #2
   11b4c:	ldr	r1, [r0]
   11b50:	add	r1, r1, #1
   11b54:	str	r1, [r0]
   11b58:	b	11a04 <__assert_fail@plt+0x94c>
   11b5c:	b	11b60 <__assert_fail@plt+0xaa8>
   11b60:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11b64:	tst	r0, #1
   11b68:	beq	11bbc <__assert_fail@plt+0xb04>
   11b6c:	movw	r0, #61776	; 0xf150
   11b70:	movt	r0, #2
   11b74:	ldr	r0, [r0]
   11b78:	bl	138d4 <__assert_fail@plt+0x281c>
   11b7c:	cmp	r0, #0
   11b80:	beq	11bbc <__assert_fail@plt+0xb04>
   11b84:	bl	10fec <__errno_location@plt>
   11b88:	ldr	r1, [r0]
   11b8c:	movw	r0, #58393	; 0xe419
   11b90:	movt	r0, #1
   11b94:	str	r1, [sp, #28]
   11b98:	bl	10fbc <gettext@plt>
   11b9c:	movw	r1, #1
   11ba0:	str	r0, [sp, #24]
   11ba4:	mov	r0, r1
   11ba8:	ldr	r1, [sp, #28]
   11bac:	movw	r2, #59271	; 0xe787
   11bb0:	movt	r2, #1
   11bb4:	ldr	r3, [sp, #24]
   11bb8:	bl	10f5c <error@plt>
   11bbc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11bc0:	tst	r0, #1
   11bc4:	movw	r0, #0
   11bc8:	moveq	r0, #1
   11bcc:	mov	sp, fp
   11bd0:	pop	{fp, pc}
   11bd4:	push	{fp, lr}
   11bd8:	mov	fp, sp
   11bdc:	sub	sp, sp, #16
   11be0:	str	r0, [fp, #-4]
   11be4:	movw	r0, #61808	; 0xf170
   11be8:	movt	r0, #2
   11bec:	movw	r1, #0
   11bf0:	str	r1, [r0]
   11bf4:	ldr	r0, [fp, #-4]
   11bf8:	ldrb	r0, [r0]
   11bfc:	cmp	r0, #32
   11c00:	bne	11c28 <__assert_fail@plt+0xb70>
   11c04:	movw	r0, #61808	; 0xf170
   11c08:	movt	r0, #2
   11c0c:	ldr	r1, [r0]
   11c10:	add	r1, r1, #1
   11c14:	str	r1, [r0]
   11c18:	ldr	r0, [fp, #-4]
   11c1c:	add	r0, r0, #1
   11c20:	str	r0, [fp, #-4]
   11c24:	b	11bf4 <__assert_fail@plt+0xb3c>
   11c28:	ldr	r0, [fp, #-4]
   11c2c:	movw	r1, #61800	; 0xf168
   11c30:	movt	r1, #2
   11c34:	str	r0, [r1]
   11c38:	ldr	r0, [fp, #-4]
   11c3c:	bl	10fc8 <strlen@plt>
   11c40:	movw	r1, #61804	; 0xf16c
   11c44:	movt	r1, #2
   11c48:	str	r0, [r1]
   11c4c:	ldr	r0, [fp, #-4]
   11c50:	ldr	r1, [r1]
   11c54:	add	r0, r0, r1
   11c58:	str	r0, [sp, #8]
   11c5c:	ldr	r0, [sp, #8]
   11c60:	ldr	r1, [fp, #-4]
   11c64:	cmp	r0, r1
   11c68:	movw	r0, #0
   11c6c:	str	r0, [sp, #4]
   11c70:	bls	11c94 <__assert_fail@plt+0xbdc>
   11c74:	ldr	r0, [sp, #8]
   11c78:	mvn	r1, #0
   11c7c:	add	r0, r0, r1
   11c80:	ldrb	r0, [r0]
   11c84:	cmp	r0, #32
   11c88:	movw	r0, #0
   11c8c:	moveq	r0, #1
   11c90:	str	r0, [sp, #4]
   11c94:	ldr	r0, [sp, #4]
   11c98:	tst	r0, #1
   11c9c:	beq	11cb4 <__assert_fail@plt+0xbfc>
   11ca0:	ldr	r0, [sp, #8]
   11ca4:	mvn	r1, #0
   11ca8:	add	r0, r0, r1
   11cac:	str	r0, [sp, #8]
   11cb0:	b	11c5c <__assert_fail@plt+0xba4>
   11cb4:	ldr	r0, [sp, #8]
   11cb8:	movw	r1, #0
   11cbc:	strb	r1, [r0]
   11cc0:	ldr	r0, [sp, #8]
   11cc4:	ldr	r1, [fp, #-4]
   11cc8:	sub	r0, r0, r1
   11ccc:	movw	r1, #61812	; 0xf174
   11cd0:	movt	r1, #2
   11cd4:	str	r0, [r1]
   11cd8:	mov	sp, fp
   11cdc:	pop	{fp, pc}
   11ce0:	push	{fp, lr}
   11ce4:	mov	fp, sp
   11ce8:	sub	sp, sp, #32
   11cec:	str	r0, [fp, #-4]
   11cf0:	str	r1, [fp, #-8]
   11cf4:	ldr	r0, [fp, #-4]
   11cf8:	movw	r1, #2
   11cfc:	bl	1387c <__assert_fail@plt+0x27c4>
   11d00:	movw	r0, #61820	; 0xf17c
   11d04:	movt	r0, #2
   11d08:	movw	r1, #0
   11d0c:	strb	r1, [r0]
   11d10:	movw	r0, #61824	; 0xf180
   11d14:	movt	r0, #2
   11d18:	movw	r1, #0
   11d1c:	str	r1, [r0]
   11d20:	ldr	r0, [fp, #-4]
   11d24:	bl	11e68 <__assert_fail@plt+0xdb0>
   11d28:	movw	r1, #61828	; 0xf184
   11d2c:	movt	r1, #2
   11d30:	str	r0, [r1]
   11d34:	ldr	r0, [fp, #-4]
   11d38:	bl	11fd4 <__assert_fail@plt+0xf1c>
   11d3c:	tst	r0, #1
   11d40:	beq	11d5c <__assert_fail@plt+0xca4>
   11d44:	bl	123d0 <__assert_fail@plt+0x1318>
   11d48:	movw	r0, #61832	; 0xf188
   11d4c:	movt	r0, #2
   11d50:	ldr	r0, [r0]
   11d54:	bl	12610 <__assert_fail@plt+0x1558>
   11d58:	b	11d34 <__assert_fail@plt+0xc7c>
   11d5c:	ldr	r0, [fp, #-4]
   11d60:	bl	10f44 <ferror_unlocked@plt>
   11d64:	cmp	r0, #0
   11d68:	movw	r0, #0
   11d6c:	movne	r0, #1
   11d70:	tst	r0, #1
   11d74:	movw	r0, #0
   11d78:	mvneq	r0, #0
   11d7c:	str	r0, [fp, #-12]
   11d80:	ldr	r0, [fp, #-4]
   11d84:	movw	r1, #61776	; 0xf150
   11d88:	movt	r1, #2
   11d8c:	ldr	r1, [r1]
   11d90:	cmp	r0, r1
   11d94:	bne	11da4 <__assert_fail@plt+0xcec>
   11d98:	ldr	r0, [fp, #-4]
   11d9c:	bl	11064 <clearerr_unlocked@plt>
   11da0:	b	11dd0 <__assert_fail@plt+0xd18>
   11da4:	ldr	r0, [fp, #-4]
   11da8:	bl	138d4 <__assert_fail@plt+0x281c>
   11dac:	cmp	r0, #0
   11db0:	beq	11dcc <__assert_fail@plt+0xd14>
   11db4:	ldr	r0, [fp, #-12]
   11db8:	cmp	r0, #0
   11dbc:	bge	11dcc <__assert_fail@plt+0xd14>
   11dc0:	bl	10fec <__errno_location@plt>
   11dc4:	ldr	r0, [r0]
   11dc8:	str	r0, [fp, #-12]
   11dcc:	b	11dd0 <__assert_fail@plt+0xd18>
   11dd0:	ldr	r0, [fp, #-12]
   11dd4:	movw	r1, #0
   11dd8:	cmp	r1, r0
   11ddc:	bgt	11e4c <__assert_fail@plt+0xd94>
   11de0:	ldr	r1, [fp, #-12]
   11de4:	ldr	r0, [fp, #-12]
   11de8:	cmp	r0, #0
   11dec:	str	r1, [sp, #16]
   11df0:	beq	11e04 <__assert_fail@plt+0xd4c>
   11df4:	movw	r0, #59271	; 0xe787
   11df8:	movt	r0, #1
   11dfc:	str	r0, [sp, #12]
   11e00:	b	11e14 <__assert_fail@plt+0xd5c>
   11e04:	movw	r0, #58940	; 0xe63c
   11e08:	movt	r0, #1
   11e0c:	bl	10fbc <gettext@plt>
   11e10:	str	r0, [sp, #12]
   11e14:	ldr	r0, [sp, #12]
   11e18:	ldr	r2, [fp, #-8]
   11e1c:	movw	r1, #0
   11e20:	str	r0, [sp, #8]
   11e24:	mov	r0, r1
   11e28:	movw	r1, #3
   11e2c:	bl	15f8c <__assert_fail@plt+0x4ed4>
   11e30:	movw	r1, #0
   11e34:	str	r0, [sp, #4]
   11e38:	mov	r0, r1
   11e3c:	ldr	r1, [sp, #16]
   11e40:	ldr	r2, [sp, #8]
   11e44:	ldr	r3, [sp, #4]
   11e48:	bl	10f5c <error@plt>
   11e4c:	ldr	r0, [fp, #-12]
   11e50:	cmp	r0, #0
   11e54:	movw	r0, #0
   11e58:	movlt	r0, #1
   11e5c:	and	r0, r0, #1
   11e60:	mov	sp, fp
   11e64:	pop	{fp, pc}
   11e68:	push	{fp, lr}
   11e6c:	mov	fp, sp
   11e70:	sub	sp, sp, #32
   11e74:	str	r0, [fp, #-8]
   11e78:	movw	r0, #61836	; 0xf18c
   11e7c:	movt	r0, #2
   11e80:	movw	r1, #0
   11e84:	str	r1, [r0]
   11e88:	ldr	r0, [fp, #-8]
   11e8c:	ldr	r1, [fp, #-8]
   11e90:	str	r0, [sp, #8]
   11e94:	mov	r0, r1
   11e98:	bl	10ef0 <getc_unlocked@plt>
   11e9c:	ldr	r1, [sp, #8]
   11ea0:	str	r0, [sp, #4]
   11ea4:	mov	r0, r1
   11ea8:	ldr	r1, [sp, #4]
   11eac:	bl	12684 <__assert_fail@plt+0x15cc>
   11eb0:	str	r0, [fp, #-12]
   11eb4:	movw	r0, #61812	; 0xf174
   11eb8:	movt	r0, #2
   11ebc:	ldr	r0, [r0]
   11ec0:	cmp	r0, #0
   11ec4:	bne	11f20 <__assert_fail@plt+0xe68>
   11ec8:	movw	r0, #61808	; 0xf170
   11ecc:	movt	r0, #2
   11ed0:	ldr	r0, [r0]
   11ed4:	movw	r1, #61836	; 0xf18c
   11ed8:	movt	r1, #2
   11edc:	ldr	r1, [r1]
   11ee0:	cmp	r0, r1
   11ee4:	bge	11efc <__assert_fail@plt+0xe44>
   11ee8:	movw	r0, #61808	; 0xf170
   11eec:	movt	r0, #2
   11ef0:	ldr	r0, [r0]
   11ef4:	str	r0, [sp]
   11ef8:	b	11f0c <__assert_fail@plt+0xe54>
   11efc:	movw	r0, #61836	; 0xf18c
   11f00:	movt	r0, #2
   11f04:	ldr	r0, [r0]
   11f08:	str	r0, [sp]
   11f0c:	ldr	r0, [sp]
   11f10:	movw	r1, #61840	; 0xf190
   11f14:	movt	r1, #2
   11f18:	str	r0, [r1]
   11f1c:	b	11fc0 <__assert_fail@plt+0xf08>
   11f20:	movw	r0, #61836	; 0xf18c
   11f24:	movt	r0, #2
   11f28:	ldr	r0, [r0]
   11f2c:	movw	r1, #61840	; 0xf190
   11f30:	movt	r1, #2
   11f34:	str	r0, [r1]
   11f38:	movw	r0, #61800	; 0xf168
   11f3c:	movt	r0, #2
   11f40:	ldr	r0, [r0]
   11f44:	str	r0, [sp, #16]
   11f48:	ldr	r0, [sp, #16]
   11f4c:	ldrb	r0, [r0]
   11f50:	cmp	r0, #0
   11f54:	beq	11fb0 <__assert_fail@plt+0xef8>
   11f58:	ldr	r0, [sp, #16]
   11f5c:	ldrb	r0, [r0]
   11f60:	strb	r0, [sp, #15]
   11f64:	ldr	r0, [fp, #-12]
   11f68:	ldrb	r1, [sp, #15]
   11f6c:	cmp	r0, r1
   11f70:	beq	11f80 <__assert_fail@plt+0xec8>
   11f74:	ldr	r0, [fp, #-12]
   11f78:	str	r0, [fp, #-4]
   11f7c:	b	11fc8 <__assert_fail@plt+0xf10>
   11f80:	movw	r0, #61836	; 0xf18c
   11f84:	movt	r0, #2
   11f88:	ldr	r1, [r0]
   11f8c:	add	r1, r1, #1
   11f90:	str	r1, [r0]
   11f94:	ldr	r0, [fp, #-8]
   11f98:	bl	10ef0 <getc_unlocked@plt>
   11f9c:	str	r0, [fp, #-12]
   11fa0:	ldr	r0, [sp, #16]
   11fa4:	add	r0, r0, #1
   11fa8:	str	r0, [sp, #16]
   11fac:	b	11f48 <__assert_fail@plt+0xe90>
   11fb0:	ldr	r0, [fp, #-8]
   11fb4:	ldr	r1, [fp, #-12]
   11fb8:	bl	12684 <__assert_fail@plt+0x15cc>
   11fbc:	str	r0, [fp, #-12]
   11fc0:	ldr	r0, [fp, #-12]
   11fc4:	str	r0, [fp, #-4]
   11fc8:	ldr	r0, [fp, #-4]
   11fcc:	mov	sp, fp
   11fd0:	pop	{fp, pc}
   11fd4:	push	{fp, lr}
   11fd8:	mov	fp, sp
   11fdc:	sub	sp, sp, #32
   11fe0:	str	r0, [fp, #-8]
   11fe4:	movw	r0, #61844	; 0xf194
   11fe8:	movt	r0, #2
   11fec:	movw	r1, #0
   11ff0:	str	r1, [r0]
   11ff4:	movw	r0, #61828	; 0xf184
   11ff8:	movt	r0, #2
   11ffc:	ldr	r0, [r0]
   12000:	str	r0, [fp, #-12]
   12004:	ldr	r0, [fp, #-12]
   12008:	cmp	r0, #10
   1200c:	movw	r0, #1
   12010:	str	r0, [sp, #16]
   12014:	beq	1208c <__assert_fail@plt+0xfd4>
   12018:	ldr	r0, [fp, #-12]
   1201c:	cmn	r0, #1
   12020:	movw	r0, #1
   12024:	str	r0, [sp, #16]
   12028:	beq	1208c <__assert_fail@plt+0xfd4>
   1202c:	movw	r0, #61840	; 0xf190
   12030:	movt	r0, #2
   12034:	ldr	r0, [r0]
   12038:	movw	r1, #61808	; 0xf170
   1203c:	movt	r1, #2
   12040:	ldr	r1, [r1]
   12044:	cmp	r0, r1
   12048:	movw	r0, #1
   1204c:	str	r0, [sp, #16]
   12050:	blt	1208c <__assert_fail@plt+0xfd4>
   12054:	movw	r0, #61836	; 0xf18c
   12058:	movt	r0, #2
   1205c:	ldr	r0, [r0]
   12060:	movw	r1, #61840	; 0xf190
   12064:	movt	r1, #2
   12068:	ldr	r1, [r1]
   1206c:	movw	r2, #61804	; 0xf16c
   12070:	movt	r2, #2
   12074:	ldr	r2, [r2]
   12078:	add	r1, r1, r2
   1207c:	cmp	r0, r1
   12080:	movw	r0, #0
   12084:	movlt	r0, #1
   12088:	str	r0, [sp, #16]
   1208c:	ldr	r0, [sp, #16]
   12090:	tst	r0, #1
   12094:	beq	120f4 <__assert_fail@plt+0x103c>
   12098:	ldr	r0, [fp, #-8]
   1209c:	ldr	r1, [fp, #-12]
   120a0:	bl	12724 <__assert_fail@plt+0x166c>
   120a4:	str	r0, [fp, #-12]
   120a8:	ldr	r0, [fp, #-12]
   120ac:	cmn	r0, #1
   120b0:	bne	120d4 <__assert_fail@plt+0x101c>
   120b4:	movw	r0, #61828	; 0xf184
   120b8:	movt	r0, #2
   120bc:	mvn	r1, #0
   120c0:	str	r1, [r0]
   120c4:	movw	r0, #0
   120c8:	and	r0, r0, #1
   120cc:	strb	r0, [fp, #-1]
   120d0:	b	123c0 <__assert_fail@plt+0x1308>
   120d4:	movw	r0, #10
   120d8:	bl	110ac <putchar_unlocked@plt>
   120dc:	ldr	r1, [fp, #-8]
   120e0:	str	r0, [sp, #12]
   120e4:	mov	r0, r1
   120e8:	bl	11e68 <__assert_fail@plt+0xdb0>
   120ec:	str	r0, [fp, #-12]
   120f0:	b	12004 <__assert_fail@plt+0xf4c>
   120f4:	movw	r0, #61840	; 0xf190
   120f8:	movt	r0, #2
   120fc:	ldr	r0, [r0]
   12100:	movw	r1, #61848	; 0xf198
   12104:	movt	r1, #2
   12108:	str	r0, [r1]
   1210c:	movw	r0, #61836	; 0xf18c
   12110:	movt	r0, #2
   12114:	ldr	r0, [r0]
   12118:	movw	r1, #61852	; 0xf19c
   1211c:	movt	r1, #2
   12120:	str	r0, [r1]
   12124:	movw	r0, #1320	; 0x528
   12128:	movt	r0, #3
   1212c:	movw	r1, #61856	; 0xf1a0
   12130:	movt	r1, #2
   12134:	str	r1, [r0]
   12138:	movw	r0, #61832	; 0xf188
   1213c:	movt	r0, #2
   12140:	movw	r1, #1324	; 0x52c
   12144:	movt	r1, #3
   12148:	str	r1, [r0]
   1214c:	ldr	r0, [fp, #-8]
   12150:	ldr	r1, [fp, #-12]
   12154:	bl	128fc <__assert_fail@plt+0x1844>
   12158:	str	r0, [fp, #-12]
   1215c:	ldr	r0, [fp, #-12]
   12160:	bl	12d80 <__assert_fail@plt+0x1cc8>
   12164:	and	r0, r0, #1
   12168:	bl	12c10 <__assert_fail@plt+0x1b58>
   1216c:	movw	r0, #61793	; 0xf161
   12170:	movt	r0, #2
   12174:	ldrb	r0, [r0]
   12178:	tst	r0, #1
   1217c:	beq	12184 <__assert_fail@plt+0x10cc>
   12180:	b	1232c <__assert_fail@plt+0x1274>
   12184:	movw	r0, #61795	; 0xf163
   12188:	movt	r0, #2
   1218c:	ldrb	r0, [r0]
   12190:	tst	r0, #1
   12194:	beq	12210 <__assert_fail@plt+0x1158>
   12198:	ldr	r0, [fp, #-12]
   1219c:	bl	12d80 <__assert_fail@plt+0x1cc8>
   121a0:	tst	r0, #1
   121a4:	beq	1220c <__assert_fail@plt+0x1154>
   121a8:	b	121ac <__assert_fail@plt+0x10f4>
   121ac:	ldr	r0, [fp, #-8]
   121b0:	ldr	r1, [fp, #-12]
   121b4:	bl	128fc <__assert_fail@plt+0x1844>
   121b8:	str	r0, [fp, #-12]
   121bc:	ldr	r0, [fp, #-12]
   121c0:	bl	12d80 <__assert_fail@plt+0x1cc8>
   121c4:	tst	r0, #1
   121c8:	movw	r0, #0
   121cc:	str	r0, [sp, #8]
   121d0:	beq	121fc <__assert_fail@plt+0x1144>
   121d4:	movw	r0, #61836	; 0xf18c
   121d8:	movt	r0, #2
   121dc:	ldr	r0, [r0]
   121e0:	movw	r1, #61824	; 0xf180
   121e4:	movt	r1, #2
   121e8:	ldr	r1, [r1]
   121ec:	cmp	r0, r1
   121f0:	movw	r0, #0
   121f4:	moveq	r0, #1
   121f8:	str	r0, [sp, #8]
   121fc:	ldr	r0, [sp, #8]
   12200:	tst	r0, #1
   12204:	bne	121ac <__assert_fail@plt+0x10f4>
   12208:	b	1220c <__assert_fail@plt+0x1154>
   1220c:	b	12328 <__assert_fail@plt+0x1270>
   12210:	movw	r0, #61794	; 0xf162
   12214:	movt	r0, #2
   12218:	ldrb	r0, [r0]
   1221c:	tst	r0, #1
   12220:	beq	122bc <__assert_fail@plt+0x1204>
   12224:	ldr	r0, [fp, #-12]
   12228:	bl	12d80 <__assert_fail@plt+0x1cc8>
   1222c:	tst	r0, #1
   12230:	beq	122b8 <__assert_fail@plt+0x1200>
   12234:	movw	r0, #61836	; 0xf18c
   12238:	movt	r0, #2
   1223c:	ldr	r0, [r0]
   12240:	movw	r1, #61852	; 0xf19c
   12244:	movt	r1, #2
   12248:	ldr	r1, [r1]
   1224c:	cmp	r0, r1
   12250:	beq	122b8 <__assert_fail@plt+0x1200>
   12254:	b	12258 <__assert_fail@plt+0x11a0>
   12258:	ldr	r0, [fp, #-8]
   1225c:	ldr	r1, [fp, #-12]
   12260:	bl	128fc <__assert_fail@plt+0x1844>
   12264:	str	r0, [fp, #-12]
   12268:	ldr	r0, [fp, #-12]
   1226c:	bl	12d80 <__assert_fail@plt+0x1cc8>
   12270:	tst	r0, #1
   12274:	movw	r0, #0
   12278:	str	r0, [sp, #4]
   1227c:	beq	122a8 <__assert_fail@plt+0x11f0>
   12280:	movw	r0, #61836	; 0xf18c
   12284:	movt	r0, #2
   12288:	ldr	r0, [r0]
   1228c:	movw	r1, #61824	; 0xf180
   12290:	movt	r1, #2
   12294:	ldr	r1, [r1]
   12298:	cmp	r0, r1
   1229c:	movw	r0, #0
   122a0:	moveq	r0, #1
   122a4:	str	r0, [sp, #4]
   122a8:	ldr	r0, [sp, #4]
   122ac:	tst	r0, #1
   122b0:	bne	12258 <__assert_fail@plt+0x11a0>
   122b4:	b	122b8 <__assert_fail@plt+0x1200>
   122b8:	b	12324 <__assert_fail@plt+0x126c>
   122bc:	b	122c0 <__assert_fail@plt+0x1208>
   122c0:	ldr	r0, [fp, #-12]
   122c4:	bl	12d80 <__assert_fail@plt+0x1cc8>
   122c8:	tst	r0, #1
   122cc:	movw	r0, #0
   122d0:	str	r0, [sp]
   122d4:	beq	12300 <__assert_fail@plt+0x1248>
   122d8:	movw	r0, #61836	; 0xf18c
   122dc:	movt	r0, #2
   122e0:	ldr	r0, [r0]
   122e4:	movw	r1, #61824	; 0xf180
   122e8:	movt	r1, #2
   122ec:	ldr	r1, [r1]
   122f0:	cmp	r0, r1
   122f4:	movw	r0, #0
   122f8:	moveq	r0, #1
   122fc:	str	r0, [sp]
   12300:	ldr	r0, [sp]
   12304:	tst	r0, #1
   12308:	beq	12320 <__assert_fail@plt+0x1268>
   1230c:	ldr	r0, [fp, #-8]
   12310:	ldr	r1, [fp, #-12]
   12314:	bl	128fc <__assert_fail@plt+0x1844>
   12318:	str	r0, [fp, #-12]
   1231c:	b	122c0 <__assert_fail@plt+0x1208>
   12320:	b	12324 <__assert_fail@plt+0x126c>
   12324:	b	12328 <__assert_fail@plt+0x1270>
   12328:	b	1232c <__assert_fail@plt+0x1274>
   1232c:	movw	r0, #61832	; 0xf188
   12330:	movt	r0, #2
   12334:	ldr	r0, [r0]
   12338:	movw	r1, #1324	; 0x52c
   1233c:	movt	r1, #3
   12340:	cmp	r1, r0
   12344:	bcs	1234c <__assert_fail@plt+0x1294>
   12348:	b	1236c <__assert_fail@plt+0x12b4>
   1234c:	movw	r0, #58951	; 0xe647
   12350:	movt	r0, #1
   12354:	movw	r1, #58969	; 0xe659
   12358:	movt	r1, #1
   1235c:	movw	r2, #623	; 0x26f
   12360:	movw	r3, #58979	; 0xe663
   12364:	movt	r3, #1
   12368:	bl	110b8 <__assert_fail@plt>
   1236c:	movw	r0, #61832	; 0xf188
   12370:	movt	r0, #2
   12374:	ldr	r1, [r0]
   12378:	ldrb	r2, [r1, #-16]
   1237c:	orr	r2, r2, #8
   12380:	strb	r2, [r1, #-16]
   12384:	ldr	r0, [r0]
   12388:	ldrb	r1, [r0, #-16]
   1238c:	bic	r1, r1, #2
   12390:	movw	r2, #2
   12394:	orr	r1, r1, r2
   12398:	mvn	r2, #15
   1239c:	add	r0, r0, r2
   123a0:	strb	r1, [r0]
   123a4:	ldr	r0, [fp, #-12]
   123a8:	movw	r1, #61828	; 0xf184
   123ac:	movt	r1, #2
   123b0:	str	r0, [r1]
   123b4:	movw	r0, #1
   123b8:	and	r0, r0, #1
   123bc:	strb	r0, [fp, #-1]
   123c0:	ldrb	r0, [fp, #-1]
   123c4:	and	r0, r0, #1
   123c8:	mov	sp, fp
   123cc:	pop	{fp, pc}
   123d0:	push	{fp, lr}
   123d4:	mov	fp, sp
   123d8:	sub	sp, sp, #32
   123dc:	movw	r0, #61832	; 0xf188
   123e0:	movt	r0, #2
   123e4:	ldr	r1, [r0]
   123e8:	movw	r2, #0
   123ec:	str	r2, [r1, #20]
   123f0:	ldr	r1, [r0]
   123f4:	ldr	r1, [r1, #4]
   123f8:	str	r1, [sp, #8]
   123fc:	movw	r1, #61796	; 0xf164
   12400:	movt	r1, #2
   12404:	ldr	r1, [r1]
   12408:	ldr	r2, [r0]
   1240c:	str	r1, [r2, #4]
   12410:	ldr	r0, [r0]
   12414:	mvn	r1, #27
   12418:	add	r0, r0, r1
   1241c:	str	r0, [fp, #-4]
   12420:	ldr	r0, [fp, #-4]
   12424:	movw	r1, #1324	; 0x52c
   12428:	movt	r1, #3
   1242c:	cmp	r0, r1
   12430:	bcc	125f0 <__assert_fail@plt+0x1538>
   12434:	ldr	r0, [pc, #464]	; 1260c <__assert_fail@plt+0x1554>
   12438:	str	r0, [sp, #12]
   1243c:	ldr	r0, [fp, #-4]
   12440:	movw	r1, #1324	; 0x52c
   12444:	movt	r1, #3
   12448:	cmp	r0, r1
   1244c:	bne	12464 <__assert_fail@plt+0x13ac>
   12450:	movw	r0, #61852	; 0xf19c
   12454:	movt	r0, #2
   12458:	ldr	r0, [r0]
   1245c:	str	r0, [sp, #4]
   12460:	b	12474 <__assert_fail@plt+0x13bc>
   12464:	movw	r0, #61824	; 0xf180
   12468:	movt	r0, #2
   1246c:	ldr	r0, [r0]
   12470:	str	r0, [sp, #4]
   12474:	ldr	r0, [sp, #4]
   12478:	str	r0, [fp, #-12]
   1247c:	ldr	r0, [fp, #-4]
   12480:	str	r0, [fp, #-8]
   12484:	ldr	r0, [fp, #-8]
   12488:	ldr	r0, [r0, #4]
   1248c:	ldr	r1, [fp, #-12]
   12490:	add	r0, r1, r0
   12494:	str	r0, [fp, #-12]
   12498:	ldr	r0, [fp, #-8]
   1249c:	add	r0, r0, #28
   124a0:	str	r0, [fp, #-8]
   124a4:	ldr	r0, [fp, #-8]
   124a8:	ldr	r1, [fp, #-12]
   124ac:	bl	132e0 <__assert_fail@plt+0x2228>
   124b0:	ldr	r1, [fp, #-8]
   124b4:	ldr	r1, [r1, #20]
   124b8:	add	r0, r0, r1
   124bc:	str	r0, [sp, #16]
   124c0:	ldr	r0, [fp, #-4]
   124c4:	movw	r1, #1324	; 0x52c
   124c8:	movt	r1, #3
   124cc:	cmp	r0, r1
   124d0:	bne	1252c <__assert_fail@plt+0x1474>
   124d4:	movw	r0, #61844	; 0xf194
   124d8:	movt	r0, #2
   124dc:	ldr	r0, [r0]
   124e0:	cmp	r0, #0
   124e4:	ble	1252c <__assert_fail@plt+0x1474>
   124e8:	ldr	r0, [fp, #-12]
   124ec:	movw	r1, #61844	; 0xf194
   124f0:	movt	r1, #2
   124f4:	ldr	r2, [r1]
   124f8:	sub	r0, r0, r2
   124fc:	movw	r2, #10
   12500:	mul	r0, r0, r2
   12504:	ldr	r3, [fp, #-12]
   12508:	ldr	r1, [r1]
   1250c:	sub	r1, r3, r1
   12510:	mul	r1, r1, r2
   12514:	mul	r0, r0, r1
   12518:	movw	r1, #2
   1251c:	sdiv	r0, r0, r1
   12520:	ldr	r1, [sp, #16]
   12524:	add	r0, r1, r0
   12528:	str	r0, [sp, #16]
   1252c:	ldr	r0, [sp, #16]
   12530:	ldr	r1, [sp, #12]
   12534:	cmp	r0, r1
   12538:	bge	1255c <__assert_fail@plt+0x14a4>
   1253c:	ldr	r0, [sp, #16]
   12540:	str	r0, [sp, #12]
   12544:	ldr	r0, [fp, #-8]
   12548:	ldr	r1, [fp, #-4]
   1254c:	str	r0, [r1, #24]
   12550:	ldr	r0, [fp, #-12]
   12554:	ldr	r1, [fp, #-4]
   12558:	str	r0, [r1, #16]
   1255c:	ldr	r0, [fp, #-8]
   12560:	movw	r1, #61832	; 0xf188
   12564:	movt	r1, #2
   12568:	ldr	r1, [r1]
   1256c:	cmp	r0, r1
   12570:	bne	12578 <__assert_fail@plt+0x14c0>
   12574:	b	125b8 <__assert_fail@plt+0x1500>
   12578:	ldr	r0, [fp, #-8]
   1257c:	mvn	r1, #19
   12580:	add	r0, r0, r1
   12584:	ldr	r0, [r0]
   12588:	ldr	r1, [fp, #-8]
   1258c:	ldr	r1, [r1, #4]
   12590:	add	r0, r0, r1
   12594:	ldr	r1, [fp, #-12]
   12598:	add	r0, r1, r0
   1259c:	str	r0, [fp, #-12]
   125a0:	ldr	r0, [fp, #-12]
   125a4:	movw	r1, #61796	; 0xf164
   125a8:	movt	r1, #2
   125ac:	ldr	r1, [r1]
   125b0:	cmp	r0, r1
   125b4:	blt	12498 <__assert_fail@plt+0x13e0>
   125b8:	ldr	r0, [sp, #12]
   125bc:	ldr	r1, [fp, #-4]
   125c0:	str	r0, [sp]
   125c4:	mov	r0, r1
   125c8:	bl	133b4 <__assert_fail@plt+0x22fc>
   125cc:	ldr	r1, [sp]
   125d0:	add	r0, r1, r0
   125d4:	ldr	r1, [fp, #-4]
   125d8:	str	r0, [r1, #20]
   125dc:	ldr	r0, [fp, #-4]
   125e0:	mvn	r1, #27
   125e4:	add	r0, r0, r1
   125e8:	str	r0, [fp, #-4]
   125ec:	b	12420 <__assert_fail@plt+0x1368>
   125f0:	ldr	r0, [sp, #8]
   125f4:	movw	r1, #61832	; 0xf188
   125f8:	movt	r1, #2
   125fc:	ldr	r1, [r1]
   12600:	str	r0, [r1, #4]
   12604:	mov	sp, fp
   12608:	pop	{fp, pc}
   1260c:	svcvc	0x00ffffff
   12610:	push	{fp, lr}
   12614:	mov	fp, sp
   12618:	sub	sp, sp, #8
   1261c:	str	r0, [sp, #4]
   12620:	movw	r0, #61852	; 0xf19c
   12624:	movt	r0, #2
   12628:	ldr	r1, [r0]
   1262c:	movw	r0, #1324	; 0x52c
   12630:	movt	r0, #3
   12634:	bl	13530 <__assert_fail@plt+0x2478>
   12638:	movw	r0, #1324	; 0x52c
   1263c:	movt	r0, #3
   12640:	ldr	r0, [r0, #24]
   12644:	str	r0, [sp]
   12648:	ldr	r0, [sp]
   1264c:	ldr	r1, [sp, #4]
   12650:	cmp	r0, r1
   12654:	beq	1267c <__assert_fail@plt+0x15c4>
   12658:	ldr	r0, [sp]
   1265c:	movw	r1, #61824	; 0xf180
   12660:	movt	r1, #2
   12664:	ldr	r1, [r1]
   12668:	bl	13530 <__assert_fail@plt+0x2478>
   1266c:	ldr	r0, [sp]
   12670:	ldr	r0, [r0, #24]
   12674:	str	r0, [sp]
   12678:	b	12648 <__assert_fail@plt+0x1590>
   1267c:	mov	sp, fp
   12680:	pop	{fp, pc}
   12684:	push	{fp, lr}
   12688:	mov	fp, sp
   1268c:	sub	sp, sp, #8
   12690:	str	r0, [sp, #4]
   12694:	str	r1, [sp]
   12698:	ldr	r0, [sp]
   1269c:	cmp	r0, #32
   126a0:	bne	126bc <__assert_fail@plt+0x1604>
   126a4:	movw	r0, #61836	; 0xf18c
   126a8:	movt	r0, #2
   126ac:	ldr	r1, [r0]
   126b0:	add	r1, r1, #1
   126b4:	str	r1, [r0]
   126b8:	b	12714 <__assert_fail@plt+0x165c>
   126bc:	ldr	r0, [sp]
   126c0:	cmp	r0, #9
   126c4:	bne	12704 <__assert_fail@plt+0x164c>
   126c8:	movw	r0, #61820	; 0xf17c
   126cc:	movt	r0, #2
   126d0:	mov	r1, #1
   126d4:	strb	r1, [r0]
   126d8:	movw	r0, #61836	; 0xf18c
   126dc:	movt	r0, #2
   126e0:	ldr	r0, [r0]
   126e4:	asr	r2, r0, #31
   126e8:	add	r0, r0, r2, lsr #29
   126ec:	add	r0, r1, r0, asr #3
   126f0:	lsl	r0, r0, #3
   126f4:	movw	r1, #61836	; 0xf18c
   126f8:	movt	r1, #2
   126fc:	str	r0, [r1]
   12700:	b	12710 <__assert_fail@plt+0x1658>
   12704:	ldr	r0, [sp]
   12708:	mov	sp, fp
   1270c:	pop	{fp, pc}
   12710:	b	12714 <__assert_fail@plt+0x165c>
   12714:	ldr	r0, [sp, #4]
   12718:	bl	10ef0 <getc_unlocked@plt>
   1271c:	str	r0, [sp]
   12720:	b	12698 <__assert_fail@plt+0x15e0>
   12724:	push	{fp, lr}
   12728:	mov	fp, sp
   1272c:	sub	sp, sp, #24
   12730:	str	r0, [fp, #-4]
   12734:	str	r1, [fp, #-8]
   12738:	movw	r0, #29324	; 0x728c
   1273c:	movt	r0, #3
   12740:	movw	r1, #0
   12744:	str	r1, [r0]
   12748:	movw	r0, #61836	; 0xf18c
   1274c:	movt	r0, #2
   12750:	ldr	r0, [r0]
   12754:	movw	r1, #61840	; 0xf190
   12758:	movt	r1, #2
   1275c:	ldr	r1, [r1]
   12760:	cmp	r0, r1
   12764:	bgt	12780 <__assert_fail@plt+0x16c8>
   12768:	ldr	r0, [fp, #-8]
   1276c:	cmp	r0, #10
   12770:	beq	12898 <__assert_fail@plt+0x17e0>
   12774:	ldr	r0, [fp, #-8]
   12778:	cmn	r0, #1
   1277c:	beq	12898 <__assert_fail@plt+0x17e0>
   12780:	movw	r0, #61840	; 0xf190
   12784:	movt	r0, #2
   12788:	ldr	r0, [r0]
   1278c:	bl	12e20 <__assert_fail@plt+0x1d68>
   12790:	movw	r0, #61800	; 0xf168
   12794:	movt	r0, #2
   12798:	ldr	r0, [r0]
   1279c:	str	r0, [sp, #12]
   127a0:	movw	r0, #29324	; 0x728c
   127a4:	movt	r0, #3
   127a8:	ldr	r0, [r0]
   127ac:	movw	r1, #61836	; 0xf18c
   127b0:	movt	r1, #2
   127b4:	ldr	r1, [r1]
   127b8:	cmp	r0, r1
   127bc:	movw	r0, #0
   127c0:	str	r0, [sp, #8]
   127c4:	beq	127e0 <__assert_fail@plt+0x1728>
   127c8:	ldr	r0, [sp, #12]
   127cc:	ldrb	r0, [r0]
   127d0:	cmp	r0, #0
   127d4:	movw	r0, #0
   127d8:	movne	r0, #1
   127dc:	str	r0, [sp, #8]
   127e0:	ldr	r0, [sp, #8]
   127e4:	tst	r0, #1
   127e8:	beq	12818 <__assert_fail@plt+0x1760>
   127ec:	ldr	r0, [sp, #12]
   127f0:	add	r1, r0, #1
   127f4:	str	r1, [sp, #12]
   127f8:	ldrb	r0, [r0]
   127fc:	bl	110ac <putchar_unlocked@plt>
   12800:	movw	r0, #29324	; 0x728c
   12804:	movt	r0, #3
   12808:	ldr	r1, [r0]
   1280c:	add	r1, r1, #1
   12810:	str	r1, [r0]
   12814:	b	127a0 <__assert_fail@plt+0x16e8>
   12818:	ldr	r0, [fp, #-8]
   1281c:	cmn	r0, #1
   12820:	beq	12850 <__assert_fail@plt+0x1798>
   12824:	ldr	r0, [fp, #-8]
   12828:	cmp	r0, #10
   1282c:	beq	12850 <__assert_fail@plt+0x1798>
   12830:	movw	r0, #61836	; 0xf18c
   12834:	movt	r0, #2
   12838:	ldr	r0, [r0]
   1283c:	movw	r1, #29324	; 0x728c
   12840:	movt	r1, #3
   12844:	ldr	r1, [r1]
   12848:	sub	r0, r0, r1
   1284c:	bl	12e20 <__assert_fail@plt+0x1d68>
   12850:	ldr	r0, [fp, #-8]
   12854:	cmn	r0, #1
   12858:	bne	12894 <__assert_fail@plt+0x17dc>
   1285c:	movw	r0, #61836	; 0xf18c
   12860:	movt	r0, #2
   12864:	ldr	r0, [r0]
   12868:	movw	r1, #61840	; 0xf190
   1286c:	movt	r1, #2
   12870:	ldr	r1, [r1]
   12874:	movw	r2, #61812	; 0xf174
   12878:	movt	r2, #2
   1287c:	ldr	r2, [r2]
   12880:	add	r1, r1, r2
   12884:	cmp	r0, r1
   12888:	blt	12894 <__assert_fail@plt+0x17dc>
   1288c:	movw	r0, #10
   12890:	bl	110ac <putchar_unlocked@plt>
   12894:	b	12898 <__assert_fail@plt+0x17e0>
   12898:	b	1289c <__assert_fail@plt+0x17e4>
   1289c:	ldr	r0, [fp, #-8]
   128a0:	cmp	r0, #10
   128a4:	movw	r0, #0
   128a8:	str	r0, [sp, #4]
   128ac:	beq	128c4 <__assert_fail@plt+0x180c>
   128b0:	ldr	r0, [fp, #-8]
   128b4:	cmn	r0, #1
   128b8:	movw	r0, #0
   128bc:	movne	r0, #1
   128c0:	str	r0, [sp, #4]
   128c4:	ldr	r0, [sp, #4]
   128c8:	tst	r0, #1
   128cc:	beq	128f0 <__assert_fail@plt+0x1838>
   128d0:	ldr	r0, [fp, #-8]
   128d4:	bl	110ac <putchar_unlocked@plt>
   128d8:	ldr	r1, [fp, #-4]
   128dc:	str	r0, [sp]
   128e0:	mov	r0, r1
   128e4:	bl	10ef0 <getc_unlocked@plt>
   128e8:	str	r0, [fp, #-8]
   128ec:	b	1289c <__assert_fail@plt+0x17e4>
   128f0:	ldr	r0, [fp, #-8]
   128f4:	mov	sp, fp
   128f8:	pop	{fp, pc}
   128fc:	push	{fp, lr}
   12900:	mov	fp, sp
   12904:	sub	sp, sp, #40	; 0x28
   12908:	movw	r2, #27944	; 0x6d28
   1290c:	movw	r3, #1324	; 0x52c
   12910:	movt	r3, #3
   12914:	add	r2, r3, r2
   12918:	movw	r3, #5000	; 0x1388
   1291c:	movw	ip, #61856	; 0xf1a0
   12920:	movt	ip, #2
   12924:	add	r3, ip, r3
   12928:	str	r0, [fp, #-4]
   1292c:	str	r1, [fp, #-8]
   12930:	str	r3, [fp, #-16]
   12934:	str	r2, [sp, #20]
   12938:	movw	r0, #1320	; 0x528
   1293c:	movt	r0, #3
   12940:	ldr	r0, [r0]
   12944:	movw	r1, #61832	; 0xf188
   12948:	movt	r1, #2
   1294c:	ldr	r1, [r1]
   12950:	str	r0, [r1]
   12954:	movw	r0, #1320	; 0x528
   12958:	movt	r0, #3
   1295c:	ldr	r0, [r0]
   12960:	ldr	r1, [fp, #-16]
   12964:	cmp	r0, r1
   12968:	bne	1297c <__assert_fail@plt+0x18c4>
   1296c:	movw	r0, #1
   12970:	and	r0, r0, #1
   12974:	bl	12c10 <__assert_fail@plt+0x1b58>
   12978:	bl	12f30 <__assert_fail@plt+0x1e78>
   1297c:	ldr	r0, [fp, #-8]
   12980:	movw	r1, #1320	; 0x528
   12984:	movt	r1, #3
   12988:	ldr	r2, [r1]
   1298c:	add	r3, r2, #1
   12990:	str	r3, [r1]
   12994:	strb	r0, [r2]
   12998:	ldr	r0, [fp, #-4]
   1299c:	bl	10ef0 <getc_unlocked@plt>
   129a0:	str	r0, [fp, #-8]
   129a4:	ldr	r0, [fp, #-8]
   129a8:	cmn	r0, #1
   129ac:	movw	r0, #0
   129b0:	str	r0, [sp, #16]
   129b4:	beq	129e8 <__assert_fail@plt+0x1930>
   129b8:	bl	10fa4 <__ctype_b_loc@plt>
   129bc:	ldr	r0, [r0]
   129c0:	ldr	r1, [fp, #-8]
   129c4:	add	r0, r0, r1, lsl #1
   129c8:	ldrh	r0, [r0]
   129cc:	and	r0, r0, #8192	; 0x2000
   129d0:	cmp	r0, #0
   129d4:	movw	r0, #0
   129d8:	movne	r0, #1
   129dc:	mvn	r1, #0
   129e0:	eor	r0, r0, r1
   129e4:	str	r0, [sp, #16]
   129e8:	ldr	r0, [sp, #16]
   129ec:	tst	r0, #1
   129f0:	bne	12954 <__assert_fail@plt+0x189c>
   129f4:	movw	r0, #1320	; 0x528
   129f8:	movt	r0, #3
   129fc:	ldr	r0, [r0]
   12a00:	movw	r1, #61832	; 0xf188
   12a04:	movt	r1, #2
   12a08:	ldr	r2, [r1]
   12a0c:	ldr	r2, [r2]
   12a10:	sub	r0, r0, r2
   12a14:	ldr	r2, [r1]
   12a18:	str	r0, [r2, #4]
   12a1c:	movw	r2, #61836	; 0xf18c
   12a20:	movt	r2, #2
   12a24:	ldr	r3, [r2]
   12a28:	add	r0, r3, r0
   12a2c:	str	r0, [r2]
   12a30:	ldr	r0, [r1]
   12a34:	bl	131a8 <__assert_fail@plt+0x20f0>
   12a38:	movw	r0, #61836	; 0xf18c
   12a3c:	movt	r0, #2
   12a40:	ldr	r0, [r0]
   12a44:	str	r0, [fp, #-12]
   12a48:	ldr	r0, [fp, #-4]
   12a4c:	ldr	r1, [fp, #-8]
   12a50:	bl	12684 <__assert_fail@plt+0x15cc>
   12a54:	str	r0, [fp, #-8]
   12a58:	movw	r0, #61836	; 0xf18c
   12a5c:	movt	r0, #2
   12a60:	ldr	r0, [r0]
   12a64:	ldr	r1, [fp, #-12]
   12a68:	sub	r0, r0, r1
   12a6c:	movw	r1, #61832	; 0xf188
   12a70:	movt	r1, #2
   12a74:	ldr	r1, [r1]
   12a78:	str	r0, [r1, #8]
   12a7c:	ldr	r0, [fp, #-8]
   12a80:	cmn	r0, #1
   12a84:	movw	r0, #1
   12a88:	str	r0, [sp, #12]
   12a8c:	beq	12afc <__assert_fail@plt+0x1a44>
   12a90:	movw	r0, #61832	; 0xf188
   12a94:	movt	r0, #2
   12a98:	ldr	r0, [r0]
   12a9c:	ldrb	r0, [r0, #12]
   12aa0:	ubfx	r0, r0, #1, #1
   12aa4:	and	r0, r0, #255	; 0xff
   12aa8:	cmp	r0, #0
   12aac:	movw	r0, #0
   12ab0:	str	r0, [sp, #8]
   12ab4:	beq	12af4 <__assert_fail@plt+0x1a3c>
   12ab8:	ldr	r0, [fp, #-8]
   12abc:	cmp	r0, #10
   12ac0:	movw	r0, #1
   12ac4:	str	r0, [sp, #4]
   12ac8:	beq	12aec <__assert_fail@plt+0x1a34>
   12acc:	movw	r0, #61832	; 0xf188
   12ad0:	movt	r0, #2
   12ad4:	ldr	r0, [r0]
   12ad8:	ldr	r0, [r0, #8]
   12adc:	cmp	r0, #1
   12ae0:	movw	r0, #0
   12ae4:	movgt	r0, #1
   12ae8:	str	r0, [sp, #4]
   12aec:	ldr	r0, [sp, #4]
   12af0:	str	r0, [sp, #8]
   12af4:	ldr	r0, [sp, #8]
   12af8:	str	r0, [sp, #12]
   12afc:	ldr	r0, [sp, #12]
   12b00:	movw	r1, #61832	; 0xf188
   12b04:	movt	r1, #2
   12b08:	ldr	r1, [r1]
   12b0c:	and	r0, r0, #1
   12b10:	ldrb	r2, [r1, #12]
   12b14:	lsl	r0, r0, #3
   12b18:	bic	r2, r2, #8
   12b1c:	orr	r0, r2, r0
   12b20:	strb	r0, [r1, #12]
   12b24:	ldr	r0, [fp, #-8]
   12b28:	cmp	r0, #10
   12b2c:	beq	12b50 <__assert_fail@plt+0x1a98>
   12b30:	ldr	r0, [fp, #-8]
   12b34:	cmn	r0, #1
   12b38:	beq	12b50 <__assert_fail@plt+0x1a98>
   12b3c:	movw	r0, #61792	; 0xf160
   12b40:	movt	r0, #2
   12b44:	ldrb	r0, [r0]
   12b48:	tst	r0, #1
   12b4c:	beq	12b90 <__assert_fail@plt+0x1ad8>
   12b50:	movw	r0, #61832	; 0xf188
   12b54:	movt	r0, #2
   12b58:	ldr	r0, [r0]
   12b5c:	ldrb	r0, [r0, #12]
   12b60:	ubfx	r0, r0, #3, #1
   12b64:	and	r0, r0, #255	; 0xff
   12b68:	cmp	r0, #0
   12b6c:	movw	r0, #0
   12b70:	movne	r0, #1
   12b74:	tst	r0, #1
   12b78:	movw	r0, #2
   12b7c:	moveq	r0, #1
   12b80:	movw	r1, #61832	; 0xf188
   12b84:	movt	r1, #2
   12b88:	ldr	r1, [r1]
   12b8c:	str	r0, [r1, #8]
   12b90:	movw	r0, #61832	; 0xf188
   12b94:	movt	r0, #2
   12b98:	ldr	r0, [r0]
   12b9c:	ldr	r1, [sp, #20]
   12ba0:	cmp	r0, r1
   12ba4:	bne	12bb8 <__assert_fail@plt+0x1b00>
   12ba8:	movw	r0, #1
   12bac:	and	r0, r0, #1
   12bb0:	bl	12c10 <__assert_fail@plt+0x1b58>
   12bb4:	bl	12f30 <__assert_fail@plt+0x1e78>
   12bb8:	movw	r0, #61832	; 0xf188
   12bbc:	movt	r0, #2
   12bc0:	ldr	r1, [r0]
   12bc4:	add	r1, r1, #28
   12bc8:	str	r1, [r0]
   12bcc:	ldr	r0, [fp, #-8]
   12bd0:	cmp	r0, #10
   12bd4:	movw	r0, #0
   12bd8:	str	r0, [sp]
   12bdc:	beq	12bf4 <__assert_fail@plt+0x1b3c>
   12be0:	ldr	r0, [fp, #-8]
   12be4:	cmn	r0, #1
   12be8:	movw	r0, #0
   12bec:	movne	r0, #1
   12bf0:	str	r0, [sp]
   12bf4:	ldr	r0, [sp]
   12bf8:	tst	r0, #1
   12bfc:	bne	12938 <__assert_fail@plt+0x1880>
   12c00:	ldr	r0, [fp, #-4]
   12c04:	bl	11e68 <__assert_fail@plt+0xdb0>
   12c08:	mov	sp, fp
   12c0c:	pop	{fp, pc}
   12c10:	sub	sp, sp, #8
   12c14:	and	r0, r0, #1
   12c18:	strb	r0, [sp, #7]
   12c1c:	movw	r0, #61793	; 0xf161
   12c20:	movt	r0, #2
   12c24:	ldrb	r0, [r0]
   12c28:	tst	r0, #1
   12c2c:	beq	12c4c <__assert_fail@plt+0x1b94>
   12c30:	movw	r0, #61852	; 0xf19c
   12c34:	movt	r0, #2
   12c38:	ldr	r0, [r0]
   12c3c:	movw	r1, #61824	; 0xf180
   12c40:	movt	r1, #2
   12c44:	str	r0, [r1]
   12c48:	b	12d78 <__assert_fail@plt+0x1cc0>
   12c4c:	movw	r0, #61795	; 0xf163
   12c50:	movt	r0, #2
   12c54:	ldrb	r0, [r0]
   12c58:	tst	r0, #1
   12c5c:	beq	12ca4 <__assert_fail@plt+0x1bec>
   12c60:	ldrb	r0, [sp, #7]
   12c64:	tst	r0, #1
   12c68:	beq	12c80 <__assert_fail@plt+0x1bc8>
   12c6c:	movw	r0, #61836	; 0xf18c
   12c70:	movt	r0, #2
   12c74:	ldr	r0, [r0]
   12c78:	str	r0, [sp]
   12c7c:	b	12c90 <__assert_fail@plt+0x1bd8>
   12c80:	movw	r0, #61852	; 0xf19c
   12c84:	movt	r0, #2
   12c88:	ldr	r0, [r0]
   12c8c:	str	r0, [sp]
   12c90:	ldr	r0, [sp]
   12c94:	movw	r1, #61824	; 0xf180
   12c98:	movt	r1, #2
   12c9c:	str	r0, [r1]
   12ca0:	b	12d74 <__assert_fail@plt+0x1cbc>
   12ca4:	movw	r0, #61794	; 0xf162
   12ca8:	movt	r0, #2
   12cac:	ldrb	r0, [r0]
   12cb0:	tst	r0, #1
   12cb4:	beq	12d58 <__assert_fail@plt+0x1ca0>
   12cb8:	ldrb	r0, [sp, #7]
   12cbc:	tst	r0, #1
   12cc0:	beq	12d00 <__assert_fail@plt+0x1c48>
   12cc4:	movw	r0, #61836	; 0xf18c
   12cc8:	movt	r0, #2
   12ccc:	ldr	r0, [r0]
   12cd0:	movw	r1, #61852	; 0xf19c
   12cd4:	movt	r1, #2
   12cd8:	ldr	r1, [r1]
   12cdc:	cmp	r0, r1
   12ce0:	beq	12d00 <__assert_fail@plt+0x1c48>
   12ce4:	movw	r0, #61836	; 0xf18c
   12ce8:	movt	r0, #2
   12cec:	ldr	r0, [r0]
   12cf0:	movw	r1, #61824	; 0xf180
   12cf4:	movt	r1, #2
   12cf8:	str	r0, [r1]
   12cfc:	b	12d54 <__assert_fail@plt+0x1c9c>
   12d00:	movw	r0, #61824	; 0xf180
   12d04:	movt	r0, #2
   12d08:	ldr	r0, [r0]
   12d0c:	movw	r1, #61852	; 0xf19c
   12d10:	movt	r1, #2
   12d14:	ldr	r1, [r1]
   12d18:	cmp	r0, r1
   12d1c:	bne	12d50 <__assert_fail@plt+0x1c98>
   12d20:	movw	r0, #61852	; 0xf19c
   12d24:	movt	r0, #2
   12d28:	ldr	r0, [r0]
   12d2c:	cmp	r0, #0
   12d30:	movw	r0, #0
   12d34:	moveq	r0, #1
   12d38:	tst	r0, #1
   12d3c:	movw	r0, #3
   12d40:	moveq	r0, #0
   12d44:	movw	r1, #61824	; 0xf180
   12d48:	movt	r1, #2
   12d4c:	str	r0, [r1]
   12d50:	b	12d54 <__assert_fail@plt+0x1c9c>
   12d54:	b	12d70 <__assert_fail@plt+0x1cb8>
   12d58:	movw	r0, #61852	; 0xf19c
   12d5c:	movt	r0, #2
   12d60:	ldr	r0, [r0]
   12d64:	movw	r1, #61824	; 0xf180
   12d68:	movt	r1, #2
   12d6c:	str	r0, [r1]
   12d70:	b	12d74 <__assert_fail@plt+0x1cbc>
   12d74:	b	12d78 <__assert_fail@plt+0x1cc0>
   12d78:	add	sp, sp, #8
   12d7c:	bx	lr
   12d80:	sub	sp, sp, #8
   12d84:	str	r0, [sp, #4]
   12d88:	movw	r0, #61840	; 0xf190
   12d8c:	movt	r0, #2
   12d90:	ldr	r0, [r0]
   12d94:	movw	r1, #61848	; 0xf198
   12d98:	movt	r1, #2
   12d9c:	ldr	r1, [r1]
   12da0:	cmp	r0, r1
   12da4:	movw	r0, #0
   12da8:	str	r0, [sp]
   12dac:	bne	12e10 <__assert_fail@plt+0x1d58>
   12db0:	movw	r0, #61836	; 0xf18c
   12db4:	movt	r0, #2
   12db8:	ldr	r0, [r0]
   12dbc:	movw	r1, #61840	; 0xf190
   12dc0:	movt	r1, #2
   12dc4:	ldr	r1, [r1]
   12dc8:	movw	r2, #61804	; 0xf16c
   12dcc:	movt	r2, #2
   12dd0:	ldr	r2, [r2]
   12dd4:	add	r1, r1, r2
   12dd8:	cmp	r0, r1
   12ddc:	movw	r0, #0
   12de0:	str	r0, [sp]
   12de4:	blt	12e10 <__assert_fail@plt+0x1d58>
   12de8:	ldr	r0, [sp, #4]
   12dec:	cmp	r0, #10
   12df0:	movw	r0, #0
   12df4:	str	r0, [sp]
   12df8:	beq	12e10 <__assert_fail@plt+0x1d58>
   12dfc:	ldr	r0, [sp, #4]
   12e00:	cmn	r0, #1
   12e04:	movw	r0, #0
   12e08:	movne	r0, #1
   12e0c:	str	r0, [sp]
   12e10:	ldr	r0, [sp]
   12e14:	and	r0, r0, #1
   12e18:	add	sp, sp, #8
   12e1c:	bx	lr
   12e20:	push	{fp, lr}
   12e24:	mov	fp, sp
   12e28:	sub	sp, sp, #16
   12e2c:	str	r0, [fp, #-4]
   12e30:	movw	r0, #29324	; 0x728c
   12e34:	movt	r0, #3
   12e38:	ldr	r0, [r0]
   12e3c:	ldr	r1, [fp, #-4]
   12e40:	add	r0, r0, r1
   12e44:	str	r0, [sp, #8]
   12e48:	movw	r0, #61820	; 0xf17c
   12e4c:	movt	r0, #2
   12e50:	ldrb	r0, [r0]
   12e54:	tst	r0, #1
   12e58:	beq	12eec <__assert_fail@plt+0x1e34>
   12e5c:	ldr	r0, [sp, #8]
   12e60:	asr	r1, r0, #31
   12e64:	add	r0, r0, r1, lsr #29
   12e68:	asr	r1, r0, #3
   12e6c:	bic	r0, r0, #7
   12e70:	str	r0, [sp, #4]
   12e74:	movw	r0, #29324	; 0x728c
   12e78:	movt	r0, #3
   12e7c:	ldr	r0, [r0]
   12e80:	add	r0, r0, #1
   12e84:	ldr	r2, [sp, #4]
   12e88:	cmp	r0, r2
   12e8c:	bge	12ee8 <__assert_fail@plt+0x1e30>
   12e90:	b	12e94 <__assert_fail@plt+0x1ddc>
   12e94:	movw	r0, #29324	; 0x728c
   12e98:	movt	r0, #3
   12e9c:	ldr	r0, [r0]
   12ea0:	ldr	r1, [sp, #4]
   12ea4:	cmp	r0, r1
   12ea8:	bge	12ee4 <__assert_fail@plt+0x1e2c>
   12eac:	mov	r0, #9
   12eb0:	bl	110ac <putchar_unlocked@plt>
   12eb4:	movw	r1, #29324	; 0x728c
   12eb8:	movt	r1, #3
   12ebc:	ldr	r1, [r1]
   12ec0:	asr	r2, r1, #31
   12ec4:	add	r1, r1, r2, lsr #29
   12ec8:	mov	r2, #1
   12ecc:	add	r1, r2, r1, asr #3
   12ed0:	lsl	r1, r1, #3
   12ed4:	movw	r2, #29324	; 0x728c
   12ed8:	movt	r2, #3
   12edc:	str	r1, [r2]
   12ee0:	b	12e94 <__assert_fail@plt+0x1ddc>
   12ee4:	b	12ee8 <__assert_fail@plt+0x1e30>
   12ee8:	b	12eec <__assert_fail@plt+0x1e34>
   12eec:	b	12ef0 <__assert_fail@plt+0x1e38>
   12ef0:	movw	r0, #29324	; 0x728c
   12ef4:	movt	r0, #3
   12ef8:	ldr	r0, [r0]
   12efc:	ldr	r1, [sp, #8]
   12f00:	cmp	r0, r1
   12f04:	bge	12f28 <__assert_fail@plt+0x1e70>
   12f08:	movw	r0, #32
   12f0c:	bl	110ac <putchar_unlocked@plt>
   12f10:	movw	r1, #29324	; 0x728c
   12f14:	movt	r1, #3
   12f18:	ldr	r2, [r1]
   12f1c:	add	r2, r2, #1
   12f20:	str	r2, [r1]
   12f24:	b	12ef0 <__assert_fail@plt+0x1e38>
   12f28:	mov	sp, fp
   12f2c:	pop	{fp, pc}
   12f30:	push	{fp, lr}
   12f34:	mov	fp, sp
   12f38:	sub	sp, sp, #40	; 0x28
   12f3c:	movw	r0, #61832	; 0xf188
   12f40:	movt	r0, #2
   12f44:	ldr	r0, [r0]
   12f48:	movw	r1, #1324	; 0x52c
   12f4c:	movt	r1, #3
   12f50:	cmp	r0, r1
   12f54:	bne	12fa0 <__assert_fail@plt+0x1ee8>
   12f58:	movw	r0, #1320	; 0x528
   12f5c:	movt	r0, #3
   12f60:	ldr	r0, [r0]
   12f64:	movw	r1, #61856	; 0xf1a0
   12f68:	movt	r1, #2
   12f6c:	sub	r2, r0, r1
   12f70:	movw	r0, #61780	; 0xf154
   12f74:	movt	r0, #2
   12f78:	ldr	r3, [r0]
   12f7c:	mov	r0, r1
   12f80:	movw	r1, #1
   12f84:	bl	10ed8 <fwrite_unlocked@plt>
   12f88:	movw	r1, #1320	; 0x528
   12f8c:	movt	r1, #3
   12f90:	movw	r2, #61856	; 0xf1a0
   12f94:	movt	r2, #2
   12f98:	str	r2, [r1]
   12f9c:	b	13198 <__assert_fail@plt+0x20e0>
   12fa0:	bl	123d0 <__assert_fail@plt+0x1318>
   12fa4:	ldr	r0, [pc, #500]	; 131a0 <__assert_fail@plt+0x20e8>
   12fa8:	movw	r1, #61832	; 0xf188
   12fac:	movt	r1, #2
   12fb0:	ldr	r1, [r1]
   12fb4:	str	r1, [fp, #-4]
   12fb8:	str	r0, [fp, #-16]
   12fbc:	movw	r0, #1324	; 0x52c
   12fc0:	movt	r0, #3
   12fc4:	ldr	r0, [r0, #24]
   12fc8:	str	r0, [fp, #-8]
   12fcc:	ldr	r0, [fp, #-8]
   12fd0:	movw	r1, #61832	; 0xf188
   12fd4:	movt	r1, #2
   12fd8:	ldr	r1, [r1]
   12fdc:	cmp	r0, r1
   12fe0:	beq	1305c <__assert_fail@plt+0x1fa4>
   12fe4:	ldr	r0, [fp, #-8]
   12fe8:	ldr	r0, [r0, #20]
   12fec:	ldr	r1, [fp, #-8]
   12ff0:	ldr	r1, [r1, #24]
   12ff4:	ldr	r1, [r1, #20]
   12ff8:	sub	r0, r0, r1
   12ffc:	ldr	r1, [fp, #-16]
   13000:	cmp	r0, r1
   13004:	bge	1302c <__assert_fail@plt+0x1f74>
   13008:	ldr	r0, [fp, #-8]
   1300c:	str	r0, [fp, #-4]
   13010:	ldr	r0, [fp, #-8]
   13014:	ldr	r0, [r0, #20]
   13018:	ldr	r1, [fp, #-8]
   1301c:	ldr	r1, [r1, #24]
   13020:	ldr	r1, [r1, #20]
   13024:	sub	r0, r0, r1
   13028:	str	r0, [fp, #-16]
   1302c:	ldr	r0, [pc, #368]	; 131a4 <__assert_fail@plt+0x20ec>
   13030:	ldr	r1, [fp, #-16]
   13034:	cmp	r1, r0
   13038:	bgt	13048 <__assert_fail@plt+0x1f90>
   1303c:	ldr	r0, [fp, #-16]
   13040:	add	r0, r0, #9
   13044:	str	r0, [fp, #-16]
   13048:	b	1304c <__assert_fail@plt+0x1f94>
   1304c:	ldr	r0, [fp, #-8]
   13050:	ldr	r0, [r0, #24]
   13054:	str	r0, [fp, #-8]
   13058:	b	12fcc <__assert_fail@plt+0x1f14>
   1305c:	ldr	r0, [fp, #-4]
   13060:	bl	12610 <__assert_fail@plt+0x1558>
   13064:	ldr	r0, [fp, #-4]
   13068:	ldr	r1, [r0]
   1306c:	movw	r0, #1320	; 0x528
   13070:	movt	r0, #3
   13074:	ldr	r2, [r0]
   13078:	ldr	r3, [fp, #-4]
   1307c:	ldr	r3, [r3]
   13080:	sub	r2, r2, r3
   13084:	movw	r3, #61856	; 0xf1a0
   13088:	movt	r3, #2
   1308c:	str	r0, [sp, #20]
   13090:	mov	r0, r3
   13094:	str	r3, [sp, #16]
   13098:	bl	10e9c <memmove@plt>
   1309c:	ldr	r0, [fp, #-4]
   130a0:	ldr	r0, [r0]
   130a4:	ldr	r1, [sp, #16]
   130a8:	sub	r0, r0, r1
   130ac:	str	r0, [fp, #-12]
   130b0:	ldr	r0, [fp, #-12]
   130b4:	ldr	r2, [sp, #20]
   130b8:	ldr	r3, [r2]
   130bc:	movw	ip, #0
   130c0:	sub	r0, ip, r0
   130c4:	add	r0, r3, r0
   130c8:	str	r0, [r2]
   130cc:	ldr	r0, [fp, #-4]
   130d0:	str	r0, [fp, #-8]
   130d4:	ldr	r0, [fp, #-8]
   130d8:	movw	r1, #61832	; 0xf188
   130dc:	movt	r1, #2
   130e0:	ldr	r1, [r1]
   130e4:	cmp	r0, r1
   130e8:	bhi	13118 <__assert_fail@plt+0x2060>
   130ec:	ldr	r0, [fp, #-12]
   130f0:	ldr	r1, [fp, #-8]
   130f4:	ldr	r2, [r1]
   130f8:	movw	r3, #0
   130fc:	sub	r0, r3, r0
   13100:	add	r0, r2, r0
   13104:	str	r0, [r1]
   13108:	ldr	r0, [fp, #-8]
   1310c:	add	r0, r0, #28
   13110:	str	r0, [fp, #-8]
   13114:	b	130d4 <__assert_fail@plt+0x201c>
   13118:	movw	r0, #1324	; 0x52c
   1311c:	movt	r0, #3
   13120:	mov	r1, r0
   13124:	ldr	r2, [fp, #-4]
   13128:	movw	r3, #61832	; 0xf188
   1312c:	movt	r3, #2
   13130:	ldr	ip, [r3]
   13134:	ldr	lr, [fp, #-4]
   13138:	sub	ip, ip, lr
   1313c:	movw	lr, #28
   13140:	sdiv	ip, ip, lr
   13144:	add	ip, ip, #1
   13148:	mul	ip, ip, lr
   1314c:	str	r0, [sp, #12]
   13150:	mov	r0, r1
   13154:	mov	r1, r2
   13158:	mov	r2, ip
   1315c:	str	r3, [sp, #8]
   13160:	str	lr, [sp, #4]
   13164:	bl	10e9c <memmove@plt>
   13168:	ldr	r0, [fp, #-4]
   1316c:	ldr	r1, [sp, #12]
   13170:	sub	r0, r0, r1
   13174:	ldr	r2, [sp, #4]
   13178:	sdiv	r0, r0, r2
   1317c:	ldr	r3, [sp, #8]
   13180:	ldr	ip, [r3]
   13184:	movw	lr, #0
   13188:	sub	r0, lr, r0
   1318c:	mul	r0, r0, r2
   13190:	add	r0, ip, r0
   13194:	str	r0, [r3]
   13198:	mov	sp, fp
   1319c:	pop	{fp, pc}
   131a0:	svcvc	0x00ffffff
   131a4:	svcvc	0x00fffff6
   131a8:	push	{fp, lr}
   131ac:	mov	fp, sp
   131b0:	sub	sp, sp, #24
   131b4:	str	r0, [fp, #-4]
   131b8:	ldr	r0, [fp, #-4]
   131bc:	ldr	r0, [r0]
   131c0:	str	r0, [fp, #-8]
   131c4:	ldr	r0, [fp, #-8]
   131c8:	ldr	r1, [fp, #-4]
   131cc:	ldr	r1, [r1, #4]
   131d0:	add	r0, r1, r0
   131d4:	sub	r0, r0, #1
   131d8:	str	r0, [sp, #12]
   131dc:	ldr	r0, [sp, #12]
   131e0:	ldrb	r0, [r0]
   131e4:	strb	r0, [sp, #11]
   131e8:	ldr	r0, [fp, #-8]
   131ec:	ldrb	r1, [r0]
   131f0:	movw	r0, #59007	; 0xe67f
   131f4:	movt	r0, #1
   131f8:	bl	10fd4 <strchr@plt>
   131fc:	cmp	r0, #0
   13200:	movwne	r0, #1
   13204:	ldr	r1, [fp, #-4]
   13208:	ldrb	r2, [r1, #12]
   1320c:	and	r2, r2, #254	; 0xfe
   13210:	orr	r0, r2, r0
   13214:	strb	r0, [r1, #12]
   13218:	bl	10fa4 <__ctype_b_loc@plt>
   1321c:	ldr	r0, [r0]
   13220:	ldrb	r1, [sp, #11]
   13224:	add	r0, r0, r1, lsl #1
   13228:	ldrh	r0, [r0]
   1322c:	and	r0, r0, #4
   13230:	ldr	r1, [fp, #-4]
   13234:	ldrb	r2, [r1, #12]
   13238:	bic	r2, r2, #4
   1323c:	orr	r0, r2, r0
   13240:	strb	r0, [r1, #12]
   13244:	ldr	r0, [fp, #-8]
   13248:	ldr	r1, [sp, #12]
   1324c:	cmp	r0, r1
   13250:	movw	r0, #0
   13254:	str	r0, [sp, #4]
   13258:	bcs	13284 <__assert_fail@plt+0x21cc>
   1325c:	ldr	r0, [sp, #12]
   13260:	ldrb	r1, [r0]
   13264:	movw	r0, #59013	; 0xe685
   13268:	movt	r0, #1
   1326c:	bl	10fd4 <strchr@plt>
   13270:	movw	r1, #0
   13274:	cmp	r0, r1
   13278:	movw	r0, #0
   1327c:	movne	r0, #1
   13280:	str	r0, [sp, #4]
   13284:	ldr	r0, [sp, #4]
   13288:	tst	r0, #1
   1328c:	beq	132a4 <__assert_fail@plt+0x21ec>
   13290:	ldr	r0, [sp, #12]
   13294:	mvn	r1, #0
   13298:	add	r0, r0, r1
   1329c:	str	r0, [sp, #12]
   132a0:	b	13244 <__assert_fail@plt+0x218c>
   132a4:	ldr	r0, [sp, #12]
   132a8:	ldrb	r1, [r0]
   132ac:	movw	r0, #59018	; 0xe68a
   132b0:	movt	r0, #1
   132b4:	bl	10fd4 <strchr@plt>
   132b8:	cmp	r0, #0
   132bc:	movwne	r0, #1
   132c0:	ldr	r1, [fp, #-4]
   132c4:	ldrb	r2, [r1, #12]
   132c8:	lsl	r0, r0, #1
   132cc:	bic	r2, r2, #2
   132d0:	orr	r0, r2, r0
   132d4:	strb	r0, [r1, #12]
   132d8:	mov	sp, fp
   132dc:	pop	{fp, pc}
   132e0:	sub	sp, sp, #20
   132e4:	str	r0, [sp, #12]
   132e8:	str	r1, [sp, #8]
   132ec:	ldr	r0, [sp, #12]
   132f0:	movw	r1, #61832	; 0xf188
   132f4:	movt	r1, #2
   132f8:	ldr	r1, [r1]
   132fc:	cmp	r0, r1
   13300:	bne	13310 <__assert_fail@plt+0x2258>
   13304:	movw	r0, #0
   13308:	str	r0, [sp, #16]
   1330c:	b	133a8 <__assert_fail@plt+0x22f0>
   13310:	movw	r0, #61816	; 0xf178
   13314:	movt	r0, #2
   13318:	ldr	r0, [r0]
   1331c:	ldr	r1, [sp, #8]
   13320:	sub	r0, r0, r1
   13324:	str	r0, [sp, #4]
   13328:	ldr	r0, [sp, #4]
   1332c:	movw	r1, #10
   13330:	mul	r0, r0, r1
   13334:	ldr	r2, [sp, #4]
   13338:	mul	r1, r2, r1
   1333c:	mul	r0, r0, r1
   13340:	str	r0, [sp]
   13344:	ldr	r0, [sp, #12]
   13348:	ldr	r0, [r0, #24]
   1334c:	movw	r1, #61832	; 0xf188
   13350:	movt	r1, #2
   13354:	ldr	r1, [r1]
   13358:	cmp	r0, r1
   1335c:	beq	133a0 <__assert_fail@plt+0x22e8>
   13360:	ldr	r0, [sp, #8]
   13364:	ldr	r1, [sp, #12]
   13368:	ldr	r1, [r1, #16]
   1336c:	sub	r0, r0, r1
   13370:	str	r0, [sp, #4]
   13374:	ldr	r0, [sp, #4]
   13378:	movw	r1, #10
   1337c:	mul	r0, r0, r1
   13380:	ldr	r2, [sp, #4]
   13384:	mul	r1, r2, r1
   13388:	mul	r0, r0, r1
   1338c:	movw	r1, #2
   13390:	sdiv	r0, r0, r1
   13394:	ldr	r1, [sp]
   13398:	add	r0, r1, r0
   1339c:	str	r0, [sp]
   133a0:	ldr	r0, [sp]
   133a4:	str	r0, [sp, #16]
   133a8:	ldr	r0, [sp, #16]
   133ac:	add	sp, sp, #20
   133b0:	bx	lr
   133b4:	sub	sp, sp, #8
   133b8:	str	r0, [sp, #4]
   133bc:	movw	r0, #4900	; 0x1324
   133c0:	str	r0, [sp]
   133c4:	ldr	r0, [sp, #4]
   133c8:	movw	r1, #1324	; 0x52c
   133cc:	movt	r1, #3
   133d0:	cmp	r0, r1
   133d4:	bls	134bc <__assert_fail@plt+0x2404>
   133d8:	ldr	r0, [sp, #4]
   133dc:	ldrb	r0, [r0, #-16]
   133e0:	ubfx	r0, r0, #1, #1
   133e4:	and	r0, r0, #255	; 0xff
   133e8:	cmp	r0, #0
   133ec:	beq	13430 <__assert_fail@plt+0x2378>
   133f0:	ldr	r0, [sp, #4]
   133f4:	ldrb	r0, [r0, #-16]
   133f8:	ubfx	r0, r0, #3, #1
   133fc:	and	r0, r0, #255	; 0xff
   13400:	cmp	r0, #0
   13404:	beq	1341c <__assert_fail@plt+0x2364>
   13408:	ldr	r0, [sp]
   1340c:	movw	r1, #2500	; 0x9c4
   13410:	sub	r0, r0, r1
   13414:	str	r0, [sp]
   13418:	b	1342c <__assert_fail@plt+0x2374>
   1341c:	ldr	r0, [pc, #264]	; 1352c <__assert_fail@plt+0x2474>
   13420:	ldr	r1, [sp]
   13424:	add	r0, r1, r0
   13428:	str	r0, [sp]
   1342c:	b	134b8 <__assert_fail@plt+0x2400>
   13430:	ldr	r0, [sp, #4]
   13434:	ldrb	r0, [r0, #-16]
   13438:	ubfx	r0, r0, #2, #1
   1343c:	and	r0, r0, #255	; 0xff
   13440:	cmp	r0, #0
   13444:	beq	13458 <__assert_fail@plt+0x23a0>
   13448:	ldr	r0, [sp]
   1344c:	sub	r0, r0, #1600	; 0x640
   13450:	str	r0, [sp]
   13454:	b	134b4 <__assert_fail@plt+0x23fc>
   13458:	movw	r0, #1324	; 0x52c
   1345c:	movt	r0, #3
   13460:	add	r0, r0, #28
   13464:	ldr	r1, [sp, #4]
   13468:	cmp	r1, r0
   1346c:	bls	134b0 <__assert_fail@plt+0x23f8>
   13470:	ldr	r0, [sp, #4]
   13474:	ldrb	r0, [r0, #-44]	; 0xffffffd4
   13478:	ubfx	r0, r0, #3, #1
   1347c:	and	r0, r0, #255	; 0xff
   13480:	cmp	r0, #0
   13484:	beq	134b0 <__assert_fail@plt+0x23f8>
   13488:	ldr	r0, [sp, #4]
   1348c:	mvn	r1, #23
   13490:	add	r0, r0, r1
   13494:	ldr	r0, [r0]
   13498:	add	r0, r0, #2
   1349c:	movw	r1, #40000	; 0x9c40
   134a0:	sdiv	r0, r1, r0
   134a4:	ldr	r1, [sp]
   134a8:	add	r0, r1, r0
   134ac:	str	r0, [sp]
   134b0:	b	134b4 <__assert_fail@plt+0x23fc>
   134b4:	b	134b8 <__assert_fail@plt+0x2400>
   134b8:	b	134bc <__assert_fail@plt+0x2404>
   134bc:	ldr	r0, [sp, #4]
   134c0:	ldrb	r0, [r0, #12]
   134c4:	and	r0, r0, #1
   134c8:	and	r0, r0, #255	; 0xff
   134cc:	cmp	r0, #0
   134d0:	beq	134e4 <__assert_fail@plt+0x242c>
   134d4:	ldr	r0, [sp]
   134d8:	sub	r0, r0, #1600	; 0x640
   134dc:	str	r0, [sp]
   134e0:	b	13520 <__assert_fail@plt+0x2468>
   134e4:	ldr	r0, [sp, #4]
   134e8:	ldrb	r0, [r0, #12]
   134ec:	ubfx	r0, r0, #3, #1
   134f0:	and	r0, r0, #255	; 0xff
   134f4:	cmp	r0, #0
   134f8:	beq	1351c <__assert_fail@plt+0x2464>
   134fc:	ldr	r0, [sp, #4]
   13500:	ldr	r0, [r0, #4]
   13504:	add	r0, r0, #2
   13508:	movw	r1, #22500	; 0x57e4
   1350c:	sdiv	r0, r1, r0
   13510:	ldr	r1, [sp]
   13514:	add	r0, r1, r0
   13518:	str	r0, [sp]
   1351c:	b	13520 <__assert_fail@plt+0x2468>
   13520:	ldr	r0, [sp]
   13524:	add	sp, sp, #8
   13528:	bx	lr
   1352c:	andeq	r7, r5, r0, asr #28
   13530:	push	{fp, lr}
   13534:	mov	fp, sp
   13538:	sub	sp, sp, #16
   1353c:	str	r0, [fp, #-4]
   13540:	str	r1, [sp, #8]
   13544:	movw	r0, #29324	; 0x728c
   13548:	movt	r0, #3
   1354c:	movw	r1, #0
   13550:	str	r1, [r0]
   13554:	movw	r0, #61848	; 0xf198
   13558:	movt	r0, #2
   1355c:	ldr	r0, [r0]
   13560:	bl	12e20 <__assert_fail@plt+0x1d68>
   13564:	movw	r0, #61800	; 0xf168
   13568:	movt	r0, #2
   1356c:	ldr	r0, [r0]
   13570:	movw	r1, #61780	; 0xf154
   13574:	movt	r1, #2
   13578:	ldr	r1, [r1]
   1357c:	bl	10e54 <fputs_unlocked@plt>
   13580:	movw	r1, #61812	; 0xf174
   13584:	movt	r1, #2
   13588:	ldr	r1, [r1]
   1358c:	movw	r2, #29324	; 0x728c
   13590:	movt	r2, #3
   13594:	ldr	r3, [r2]
   13598:	add	r1, r3, r1
   1359c:	str	r1, [r2]
   135a0:	ldr	r1, [sp, #8]
   135a4:	ldr	r2, [r2]
   135a8:	sub	r1, r1, r2
   135ac:	str	r0, [sp]
   135b0:	mov	r0, r1
   135b4:	bl	12e20 <__assert_fail@plt+0x1d68>
   135b8:	ldr	r0, [fp, #-4]
   135bc:	ldr	r0, [r0, #24]
   135c0:	mvn	r1, #27
   135c4:	add	r0, r0, r1
   135c8:	str	r0, [sp, #4]
   135cc:	ldr	r0, [fp, #-4]
   135d0:	ldr	r1, [sp, #4]
   135d4:	cmp	r0, r1
   135d8:	beq	13600 <__assert_fail@plt+0x2548>
   135dc:	ldr	r0, [fp, #-4]
   135e0:	bl	13630 <__assert_fail@plt+0x2578>
   135e4:	ldr	r0, [fp, #-4]
   135e8:	ldr	r0, [r0, #8]
   135ec:	bl	12e20 <__assert_fail@plt+0x1d68>
   135f0:	ldr	r0, [fp, #-4]
   135f4:	add	r0, r0, #28
   135f8:	str	r0, [fp, #-4]
   135fc:	b	135cc <__assert_fail@plt+0x2514>
   13600:	ldr	r0, [fp, #-4]
   13604:	bl	13630 <__assert_fail@plt+0x2578>
   13608:	movw	r0, #29324	; 0x728c
   1360c:	movt	r0, #3
   13610:	ldr	r0, [r0]
   13614:	movw	r1, #61844	; 0xf194
   13618:	movt	r1, #2
   1361c:	str	r0, [r1]
   13620:	movw	r0, #10
   13624:	bl	110ac <putchar_unlocked@plt>
   13628:	mov	sp, fp
   1362c:	pop	{fp, pc}
   13630:	push	{fp, lr}
   13634:	mov	fp, sp
   13638:	sub	sp, sp, #16
   1363c:	str	r0, [fp, #-4]
   13640:	ldr	r0, [fp, #-4]
   13644:	ldr	r0, [r0]
   13648:	str	r0, [sp, #8]
   1364c:	ldr	r0, [fp, #-4]
   13650:	ldr	r0, [r0, #4]
   13654:	str	r0, [sp, #4]
   13658:	ldr	r0, [sp, #4]
   1365c:	cmp	r0, #0
   13660:	beq	1368c <__assert_fail@plt+0x25d4>
   13664:	ldr	r0, [sp, #8]
   13668:	add	r1, r0, #1
   1366c:	str	r1, [sp, #8]
   13670:	ldrb	r0, [r0]
   13674:	bl	110ac <putchar_unlocked@plt>
   13678:	ldr	r0, [sp, #4]
   1367c:	mvn	r1, #0
   13680:	add	r0, r0, r1
   13684:	str	r0, [sp, #4]
   13688:	b	13658 <__assert_fail@plt+0x25a0>
   1368c:	ldr	r0, [fp, #-4]
   13690:	ldr	r0, [r0, #4]
   13694:	movw	r1, #29324	; 0x728c
   13698:	movt	r1, #3
   1369c:	ldr	r2, [r1]
   136a0:	add	r0, r2, r0
   136a4:	str	r0, [r1]
   136a8:	mov	sp, fp
   136ac:	pop	{fp, pc}
   136b0:	sub	sp, sp, #4
   136b4:	str	r0, [sp]
   136b8:	ldr	r0, [sp]
   136bc:	movw	r1, #29328	; 0x7290
   136c0:	movt	r1, #3
   136c4:	str	r0, [r1]
   136c8:	add	sp, sp, #4
   136cc:	bx	lr
   136d0:	sub	sp, sp, #4
   136d4:	and	r0, r0, #1
   136d8:	strb	r0, [sp, #3]
   136dc:	ldrb	r0, [sp, #3]
   136e0:	and	r0, r0, #1
   136e4:	movw	r1, #29332	; 0x7294
   136e8:	movt	r1, #3
   136ec:	strb	r0, [r1]
   136f0:	add	sp, sp, #4
   136f4:	bx	lr
   136f8:	push	{fp, lr}
   136fc:	mov	fp, sp
   13700:	sub	sp, sp, #24
   13704:	movw	r0, #61780	; 0xf154
   13708:	movt	r0, #2
   1370c:	ldr	r0, [r0]
   13710:	bl	1bda4 <__assert_fail@plt+0xacec>
   13714:	cmp	r0, #0
   13718:	beq	137e8 <__assert_fail@plt+0x2730>
   1371c:	movw	r0, #29332	; 0x7294
   13720:	movt	r0, #3
   13724:	ldrb	r0, [r0]
   13728:	tst	r0, #1
   1372c:	beq	13740 <__assert_fail@plt+0x2688>
   13730:	bl	10fec <__errno_location@plt>
   13734:	ldr	r0, [r0]
   13738:	cmp	r0, #32
   1373c:	beq	137e8 <__assert_fail@plt+0x2730>
   13740:	movw	r0, #59255	; 0xe777
   13744:	movt	r0, #1
   13748:	bl	10fbc <gettext@plt>
   1374c:	str	r0, [fp, #-4]
   13750:	movw	r0, #29328	; 0x7290
   13754:	movt	r0, #3
   13758:	ldr	r0, [r0]
   1375c:	movw	r1, #0
   13760:	cmp	r0, r1
   13764:	beq	137bc <__assert_fail@plt+0x2704>
   13768:	bl	10fec <__errno_location@plt>
   1376c:	ldr	r1, [r0]
   13770:	movw	r0, #29328	; 0x7290
   13774:	movt	r0, #3
   13778:	ldr	r0, [r0]
   1377c:	str	r1, [fp, #-8]
   13780:	bl	15f34 <__assert_fail@plt+0x4e7c>
   13784:	ldr	r1, [fp, #-4]
   13788:	movw	r2, #0
   1378c:	str	r0, [sp, #12]
   13790:	mov	r0, r2
   13794:	ldr	r2, [fp, #-8]
   13798:	str	r1, [sp, #8]
   1379c:	mov	r1, r2
   137a0:	movw	r2, #59267	; 0xe783
   137a4:	movt	r2, #1
   137a8:	ldr	r3, [sp, #12]
   137ac:	ldr	ip, [sp, #8]
   137b0:	str	ip, [sp]
   137b4:	bl	10f5c <error@plt>
   137b8:	b	137d8 <__assert_fail@plt+0x2720>
   137bc:	bl	10fec <__errno_location@plt>
   137c0:	ldr	r1, [r0]
   137c4:	ldr	r3, [fp, #-4]
   137c8:	movw	r0, #0
   137cc:	movw	r2, #59271	; 0xe787
   137d0:	movt	r2, #1
   137d4:	bl	10f5c <error@plt>
   137d8:	movw	r0, #61680	; 0xf0f0
   137dc:	movt	r0, #2
   137e0:	ldr	r0, [r0]
   137e4:	bl	10eb4 <_exit@plt>
   137e8:	movw	r0, #61768	; 0xf148
   137ec:	movt	r0, #2
   137f0:	ldr	r0, [r0]
   137f4:	bl	1bda4 <__assert_fail@plt+0xacec>
   137f8:	cmp	r0, #0
   137fc:	beq	13810 <__assert_fail@plt+0x2758>
   13800:	movw	r0, #61680	; 0xf0f0
   13804:	movt	r0, #2
   13808:	ldr	r0, [r0]
   1380c:	bl	10eb4 <_exit@plt>
   13810:	mov	sp, fp
   13814:	pop	{fp, pc}
   13818:	push	{r4, r5, fp, lr}
   1381c:	add	fp, sp, #8
   13820:	sub	sp, sp, #40	; 0x28
   13824:	ldr	r1, [fp, #12]
   13828:	ldr	ip, [fp, #8]
   1382c:	ldr	lr, [fp, #16]
   13830:	str	r0, [fp, #-12]
   13834:	str	r3, [sp, #28]
   13838:	str	r2, [sp, #24]
   1383c:	str	r1, [sp, #20]
   13840:	str	ip, [sp, #16]
   13844:	ldr	r0, [fp, #-12]
   13848:	ldr	r2, [sp, #24]
   1384c:	ldr	r3, [sp, #28]
   13850:	ldr	r1, [sp, #16]
   13854:	ldr	ip, [sp, #20]
   13858:	ldr	r4, [fp, #16]
   1385c:	mov	r5, sp
   13860:	str	r4, [r5, #8]
   13864:	str	ip, [r5, #4]
   13868:	str	r1, [r5]
   1386c:	str	lr, [sp, #12]
   13870:	bl	10e78 <posix_fadvise64@plt>
   13874:	sub	sp, fp, #8
   13878:	pop	{r4, r5, fp, pc}
   1387c:	push	{fp, lr}
   13880:	mov	fp, sp
   13884:	sub	sp, sp, #24
   13888:	str	r0, [fp, #-4]
   1388c:	str	r1, [fp, #-8]
   13890:	ldr	r0, [fp, #-4]
   13894:	movw	r1, #0
   13898:	cmp	r0, r1
   1389c:	beq	138cc <__assert_fail@plt+0x2814>
   138a0:	ldr	r0, [fp, #-4]
   138a4:	bl	11010 <fileno@plt>
   138a8:	ldr	r1, [fp, #-8]
   138ac:	mov	r2, sp
   138b0:	str	r1, [r2, #8]
   138b4:	mov	r1, #0
   138b8:	str	r1, [r2, #4]
   138bc:	str	r1, [r2]
   138c0:	mov	r2, r1
   138c4:	mov	r3, r1
   138c8:	bl	13818 <__assert_fail@plt+0x2760>
   138cc:	mov	sp, fp
   138d0:	pop	{fp, pc}
   138d4:	push	{fp, lr}
   138d8:	mov	fp, sp
   138dc:	sub	sp, sp, #32
   138e0:	str	r0, [fp, #-8]
   138e4:	movw	r0, #0
   138e8:	str	r0, [fp, #-12]
   138ec:	str	r0, [sp, #12]
   138f0:	ldr	r0, [fp, #-8]
   138f4:	bl	11010 <fileno@plt>
   138f8:	str	r0, [sp, #16]
   138fc:	ldr	r0, [sp, #16]
   13900:	cmp	r0, #0
   13904:	bge	13918 <__assert_fail@plt+0x2860>
   13908:	ldr	r0, [fp, #-8]
   1390c:	bl	11028 <fclose@plt>
   13910:	str	r0, [fp, #-4]
   13914:	b	139b4 <__assert_fail@plt+0x28fc>
   13918:	ldr	r0, [fp, #-8]
   1391c:	bl	10f80 <__freading@plt>
   13920:	cmp	r0, #0
   13924:	beq	1395c <__assert_fail@plt+0x28a4>
   13928:	ldr	r0, [fp, #-8]
   1392c:	bl	11010 <fileno@plt>
   13930:	mov	r1, sp
   13934:	mov	r2, #1
   13938:	str	r2, [r1]
   1393c:	mov	r1, #0
   13940:	mov	r2, r1
   13944:	mov	r3, r1
   13948:	bl	10f20 <lseek64@plt>
   1394c:	and	r0, r0, r1
   13950:	cmn	r0, #1
   13954:	beq	13978 <__assert_fail@plt+0x28c0>
   13958:	b	1395c <__assert_fail@plt+0x28a4>
   1395c:	ldr	r0, [fp, #-8]
   13960:	bl	139c0 <__assert_fail@plt+0x2908>
   13964:	cmp	r0, #0
   13968:	beq	13978 <__assert_fail@plt+0x28c0>
   1396c:	bl	10fec <__errno_location@plt>
   13970:	ldr	r0, [r0]
   13974:	str	r0, [fp, #-12]
   13978:	ldr	r0, [fp, #-8]
   1397c:	bl	11028 <fclose@plt>
   13980:	str	r0, [sp, #12]
   13984:	ldr	r0, [fp, #-12]
   13988:	cmp	r0, #0
   1398c:	beq	139ac <__assert_fail@plt+0x28f4>
   13990:	ldr	r0, [fp, #-12]
   13994:	str	r0, [sp, #8]
   13998:	bl	10fec <__errno_location@plt>
   1399c:	ldr	r1, [sp, #8]
   139a0:	str	r1, [r0]
   139a4:	mvn	r0, #0
   139a8:	str	r0, [sp, #12]
   139ac:	ldr	r0, [sp, #12]
   139b0:	str	r0, [fp, #-4]
   139b4:	ldr	r0, [fp, #-4]
   139b8:	mov	sp, fp
   139bc:	pop	{fp, pc}
   139c0:	push	{fp, lr}
   139c4:	mov	fp, sp
   139c8:	sub	sp, sp, #8
   139cc:	str	r0, [sp]
   139d0:	ldr	r0, [sp]
   139d4:	movw	r1, #0
   139d8:	cmp	r0, r1
   139dc:	beq	139f0 <__assert_fail@plt+0x2938>
   139e0:	ldr	r0, [sp]
   139e4:	bl	10f80 <__freading@plt>
   139e8:	cmp	r0, #0
   139ec:	bne	13a00 <__assert_fail@plt+0x2948>
   139f0:	ldr	r0, [sp]
   139f4:	bl	10e90 <fflush@plt>
   139f8:	str	r0, [sp, #4]
   139fc:	b	13a14 <__assert_fail@plt+0x295c>
   13a00:	ldr	r0, [sp]
   13a04:	bl	13a20 <__assert_fail@plt+0x2968>
   13a08:	ldr	r0, [sp]
   13a0c:	bl	10e90 <fflush@plt>
   13a10:	str	r0, [sp, #4]
   13a14:	ldr	r0, [sp, #4]
   13a18:	mov	sp, fp
   13a1c:	pop	{fp, pc}
   13a20:	push	{fp, lr}
   13a24:	mov	fp, sp
   13a28:	sub	sp, sp, #8
   13a2c:	str	r0, [sp, #4]
   13a30:	ldr	r0, [sp, #4]
   13a34:	ldr	r0, [r0]
   13a38:	and	r0, r0, #256	; 0x100
   13a3c:	cmp	r0, #0
   13a40:	beq	13a64 <__assert_fail@plt+0x29ac>
   13a44:	ldr	r0, [sp, #4]
   13a48:	mov	r1, sp
   13a4c:	mov	r2, #1
   13a50:	str	r2, [r1]
   13a54:	mov	r1, #0
   13a58:	mov	r2, r1
   13a5c:	mov	r3, r1
   13a60:	bl	13a6c <__assert_fail@plt+0x29b4>
   13a64:	mov	sp, fp
   13a68:	pop	{fp, pc}
   13a6c:	push	{fp, lr}
   13a70:	mov	fp, sp
   13a74:	sub	sp, sp, #32
   13a78:	ldr	r1, [fp, #8]
   13a7c:	str	r0, [fp, #-8]
   13a80:	str	r3, [sp, #20]
   13a84:	str	r2, [sp, #16]
   13a88:	ldr	r0, [fp, #-8]
   13a8c:	ldr	r0, [r0, #8]
   13a90:	ldr	r2, [fp, #-8]
   13a94:	ldr	r2, [r2, #4]
   13a98:	cmp	r0, r2
   13a9c:	bne	13b48 <__assert_fail@plt+0x2a90>
   13aa0:	ldr	r0, [fp, #-8]
   13aa4:	ldr	r0, [r0, #20]
   13aa8:	ldr	r1, [fp, #-8]
   13aac:	ldr	r1, [r1, #16]
   13ab0:	cmp	r0, r1
   13ab4:	bne	13b48 <__assert_fail@plt+0x2a90>
   13ab8:	ldr	r0, [fp, #-8]
   13abc:	ldr	r0, [r0, #36]	; 0x24
   13ac0:	movw	r1, #0
   13ac4:	cmp	r0, r1
   13ac8:	bne	13b48 <__assert_fail@plt+0x2a90>
   13acc:	ldr	r0, [fp, #-8]
   13ad0:	bl	11010 <fileno@plt>
   13ad4:	ldr	r2, [sp, #16]
   13ad8:	ldr	r3, [sp, #20]
   13adc:	ldr	r1, [fp, #8]
   13ae0:	mov	ip, sp
   13ae4:	str	r1, [ip]
   13ae8:	bl	10f20 <lseek64@plt>
   13aec:	str	r1, [sp, #12]
   13af0:	str	r0, [sp, #8]
   13af4:	ldr	r0, [sp, #8]
   13af8:	ldr	r1, [sp, #12]
   13afc:	and	r0, r0, r1
   13b00:	cmn	r0, #1
   13b04:	bne	13b18 <__assert_fail@plt+0x2a60>
   13b08:	b	13b0c <__assert_fail@plt+0x2a54>
   13b0c:	mvn	r0, #0
   13b10:	str	r0, [fp, #-4]
   13b14:	b	13b68 <__assert_fail@plt+0x2ab0>
   13b18:	ldr	r0, [fp, #-8]
   13b1c:	ldr	r1, [r0]
   13b20:	bic	r1, r1, #16
   13b24:	str	r1, [r0]
   13b28:	ldr	r0, [sp, #8]
   13b2c:	ldr	r1, [sp, #12]
   13b30:	ldr	r2, [fp, #-8]
   13b34:	str	r1, [r2, #84]	; 0x54
   13b38:	str	r0, [r2, #80]	; 0x50
   13b3c:	movw	r0, #0
   13b40:	str	r0, [fp, #-4]
   13b44:	b	13b68 <__assert_fail@plt+0x2ab0>
   13b48:	ldr	r0, [fp, #-8]
   13b4c:	ldr	r2, [sp, #16]
   13b50:	ldr	r3, [sp, #20]
   13b54:	ldr	r1, [fp, #8]
   13b58:	mov	ip, sp
   13b5c:	str	r1, [ip]
   13b60:	bl	11034 <fseeko64@plt>
   13b64:	str	r0, [fp, #-4]
   13b68:	ldr	r0, [fp, #-4]
   13b6c:	mov	sp, fp
   13b70:	pop	{fp, pc}
   13b74:	push	{fp, lr}
   13b78:	mov	fp, sp
   13b7c:	sub	sp, sp, #24
   13b80:	str	r0, [fp, #-4]
   13b84:	ldr	r0, [fp, #-4]
   13b88:	movw	r1, #0
   13b8c:	cmp	r0, r1
   13b90:	bne	13bb4 <__assert_fail@plt+0x2afc>
   13b94:	movw	r0, #61768	; 0xf148
   13b98:	movt	r0, #2
   13b9c:	ldr	r1, [r0]
   13ba0:	movw	r0, #59274	; 0xe78a
   13ba4:	movt	r0, #1
   13ba8:	bl	11088 <fputs@plt>
   13bac:	str	r0, [sp, #8]
   13bb0:	bl	110a0 <abort@plt>
   13bb4:	ldr	r0, [fp, #-4]
   13bb8:	movw	r1, #47	; 0x2f
   13bbc:	bl	1104c <strrchr@plt>
   13bc0:	str	r0, [fp, #-8]
   13bc4:	ldr	r0, [fp, #-8]
   13bc8:	movw	r1, #0
   13bcc:	cmp	r0, r1
   13bd0:	beq	13be4 <__assert_fail@plt+0x2b2c>
   13bd4:	ldr	r0, [fp, #-8]
   13bd8:	add	r0, r0, #1
   13bdc:	str	r0, [sp, #4]
   13be0:	b	13bec <__assert_fail@plt+0x2b34>
   13be4:	ldr	r0, [fp, #-4]
   13be8:	str	r0, [sp, #4]
   13bec:	ldr	r0, [sp, #4]
   13bf0:	str	r0, [sp, #12]
   13bf4:	ldr	r0, [sp, #12]
   13bf8:	ldr	r1, [fp, #-4]
   13bfc:	sub	r0, r0, r1
   13c00:	cmp	r0, #7
   13c04:	blt	13c70 <__assert_fail@plt+0x2bb8>
   13c08:	ldr	r0, [sp, #12]
   13c0c:	mvn	r1, #6
   13c10:	add	r0, r0, r1
   13c14:	movw	r1, #59330	; 0xe7c2
   13c18:	movt	r1, #1
   13c1c:	movw	r2, #7
   13c20:	bl	11094 <strncmp@plt>
   13c24:	cmp	r0, #0
   13c28:	bne	13c70 <__assert_fail@plt+0x2bb8>
   13c2c:	ldr	r0, [sp, #12]
   13c30:	str	r0, [fp, #-4]
   13c34:	ldr	r0, [sp, #12]
   13c38:	movw	r1, #59338	; 0xe7ca
   13c3c:	movt	r1, #1
   13c40:	movw	r2, #3
   13c44:	bl	11094 <strncmp@plt>
   13c48:	cmp	r0, #0
   13c4c:	bne	13c6c <__assert_fail@plt+0x2bb4>
   13c50:	ldr	r0, [sp, #12]
   13c54:	add	r0, r0, #3
   13c58:	str	r0, [fp, #-4]
   13c5c:	ldr	r0, [fp, #-4]
   13c60:	movw	r1, #61752	; 0xf138
   13c64:	movt	r1, #2
   13c68:	str	r0, [r1]
   13c6c:	b	13c70 <__assert_fail@plt+0x2bb8>
   13c70:	ldr	r0, [fp, #-4]
   13c74:	movw	r1, #29336	; 0x7298
   13c78:	movt	r1, #3
   13c7c:	str	r0, [r1]
   13c80:	ldr	r0, [fp, #-4]
   13c84:	movw	r1, #61756	; 0xf13c
   13c88:	movt	r1, #2
   13c8c:	str	r0, [r1]
   13c90:	mov	sp, fp
   13c94:	pop	{fp, pc}
   13c98:	push	{fp, lr}
   13c9c:	mov	fp, sp
   13ca0:	sub	sp, sp, #24
   13ca4:	str	r0, [fp, #-4]
   13ca8:	bl	10fec <__errno_location@plt>
   13cac:	ldr	r0, [r0]
   13cb0:	str	r0, [fp, #-8]
   13cb4:	ldr	r0, [fp, #-4]
   13cb8:	movw	r1, #0
   13cbc:	cmp	r0, r1
   13cc0:	beq	13cd0 <__assert_fail@plt+0x2c18>
   13cc4:	ldr	r0, [fp, #-4]
   13cc8:	str	r0, [sp, #8]
   13ccc:	b	13ce0 <__assert_fail@plt+0x2c28>
   13cd0:	movw	r0, #29340	; 0x729c
   13cd4:	movt	r0, #3
   13cd8:	str	r0, [sp, #8]
   13cdc:	b	13ce0 <__assert_fail@plt+0x2c28>
   13ce0:	ldr	r0, [sp, #8]
   13ce4:	movw	r1, #48	; 0x30
   13ce8:	bl	1980c <__assert_fail@plt+0x8754>
   13cec:	str	r0, [sp, #12]
   13cf0:	ldr	r0, [fp, #-8]
   13cf4:	str	r0, [sp, #4]
   13cf8:	bl	10fec <__errno_location@plt>
   13cfc:	ldr	r1, [sp, #4]
   13d00:	str	r1, [r0]
   13d04:	ldr	r0, [sp, #12]
   13d08:	mov	sp, fp
   13d0c:	pop	{fp, pc}
   13d10:	sub	sp, sp, #8
   13d14:	str	r0, [sp, #4]
   13d18:	ldr	r0, [sp, #4]
   13d1c:	movw	r1, #0
   13d20:	cmp	r0, r1
   13d24:	beq	13d34 <__assert_fail@plt+0x2c7c>
   13d28:	ldr	r0, [sp, #4]
   13d2c:	str	r0, [sp]
   13d30:	b	13d44 <__assert_fail@plt+0x2c8c>
   13d34:	movw	r0, #29340	; 0x729c
   13d38:	movt	r0, #3
   13d3c:	str	r0, [sp]
   13d40:	b	13d44 <__assert_fail@plt+0x2c8c>
   13d44:	ldr	r0, [sp]
   13d48:	ldr	r0, [r0]
   13d4c:	add	sp, sp, #8
   13d50:	bx	lr
   13d54:	sub	sp, sp, #16
   13d58:	str	r0, [sp, #12]
   13d5c:	str	r1, [sp, #8]
   13d60:	ldr	r0, [sp, #8]
   13d64:	ldr	r1, [sp, #12]
   13d68:	movw	r2, #0
   13d6c:	cmp	r1, r2
   13d70:	str	r0, [sp, #4]
   13d74:	beq	13d84 <__assert_fail@plt+0x2ccc>
   13d78:	ldr	r0, [sp, #12]
   13d7c:	str	r0, [sp]
   13d80:	b	13d94 <__assert_fail@plt+0x2cdc>
   13d84:	movw	r0, #29340	; 0x729c
   13d88:	movt	r0, #3
   13d8c:	str	r0, [sp]
   13d90:	b	13d94 <__assert_fail@plt+0x2cdc>
   13d94:	ldr	r0, [sp]
   13d98:	ldr	r1, [sp, #4]
   13d9c:	str	r1, [r0]
   13da0:	add	sp, sp, #16
   13da4:	bx	lr
   13da8:	sub	sp, sp, #32
   13dac:	str	r0, [sp, #28]
   13db0:	strb	r1, [sp, #27]
   13db4:	str	r2, [sp, #20]
   13db8:	ldrb	r0, [sp, #27]
   13dbc:	strb	r0, [sp, #19]
   13dc0:	ldr	r0, [sp, #28]
   13dc4:	movw	r1, #0
   13dc8:	cmp	r0, r1
   13dcc:	beq	13ddc <__assert_fail@plt+0x2d24>
   13dd0:	ldr	r0, [sp, #28]
   13dd4:	str	r0, [sp]
   13dd8:	b	13dec <__assert_fail@plt+0x2d34>
   13ddc:	movw	r0, #29340	; 0x729c
   13de0:	movt	r0, #3
   13de4:	str	r0, [sp]
   13de8:	b	13dec <__assert_fail@plt+0x2d34>
   13dec:	ldr	r0, [sp]
   13df0:	add	r0, r0, #8
   13df4:	ldrb	r1, [sp, #19]
   13df8:	lsr	r1, r1, #5
   13dfc:	add	r0, r0, r1, lsl #2
   13e00:	str	r0, [sp, #12]
   13e04:	ldrb	r0, [sp, #19]
   13e08:	and	r0, r0, #31
   13e0c:	str	r0, [sp, #8]
   13e10:	ldr	r0, [sp, #12]
   13e14:	ldr	r0, [r0]
   13e18:	ldr	r1, [sp, #8]
   13e1c:	lsr	r0, r0, r1
   13e20:	and	r0, r0, #1
   13e24:	str	r0, [sp, #4]
   13e28:	ldr	r0, [sp, #20]
   13e2c:	and	r0, r0, #1
   13e30:	ldr	r1, [sp, #4]
   13e34:	eor	r0, r0, r1
   13e38:	ldr	r1, [sp, #8]
   13e3c:	lsl	r0, r0, r1
   13e40:	ldr	r1, [sp, #12]
   13e44:	ldr	r2, [r1]
   13e48:	eor	r0, r2, r0
   13e4c:	str	r0, [r1]
   13e50:	ldr	r0, [sp, #4]
   13e54:	add	sp, sp, #32
   13e58:	bx	lr
   13e5c:	sub	sp, sp, #12
   13e60:	str	r0, [sp, #8]
   13e64:	str	r1, [sp, #4]
   13e68:	ldr	r0, [sp, #8]
   13e6c:	movw	r1, #0
   13e70:	cmp	r0, r1
   13e74:	bne	13e84 <__assert_fail@plt+0x2dcc>
   13e78:	movw	r0, #29340	; 0x729c
   13e7c:	movt	r0, #3
   13e80:	str	r0, [sp, #8]
   13e84:	ldr	r0, [sp, #8]
   13e88:	ldr	r0, [r0, #4]
   13e8c:	str	r0, [sp]
   13e90:	ldr	r0, [sp, #4]
   13e94:	ldr	r1, [sp, #8]
   13e98:	str	r0, [r1, #4]
   13e9c:	ldr	r0, [sp]
   13ea0:	add	sp, sp, #12
   13ea4:	bx	lr
   13ea8:	push	{fp, lr}
   13eac:	mov	fp, sp
   13eb0:	sub	sp, sp, #16
   13eb4:	str	r0, [fp, #-4]
   13eb8:	str	r1, [sp, #8]
   13ebc:	str	r2, [sp, #4]
   13ec0:	ldr	r0, [fp, #-4]
   13ec4:	movw	r1, #0
   13ec8:	cmp	r0, r1
   13ecc:	bne	13edc <__assert_fail@plt+0x2e24>
   13ed0:	movw	r0, #29340	; 0x729c
   13ed4:	movt	r0, #3
   13ed8:	str	r0, [fp, #-4]
   13edc:	ldr	r0, [fp, #-4]
   13ee0:	movw	r1, #10
   13ee4:	str	r1, [r0]
   13ee8:	ldr	r0, [sp, #8]
   13eec:	movw	r1, #0
   13ef0:	cmp	r0, r1
   13ef4:	beq	13f08 <__assert_fail@plt+0x2e50>
   13ef8:	ldr	r0, [sp, #4]
   13efc:	movw	r1, #0
   13f00:	cmp	r0, r1
   13f04:	bne	13f0c <__assert_fail@plt+0x2e54>
   13f08:	bl	110a0 <abort@plt>
   13f0c:	ldr	r0, [sp, #8]
   13f10:	ldr	r1, [fp, #-4]
   13f14:	str	r0, [r1, #40]	; 0x28
   13f18:	ldr	r0, [sp, #4]
   13f1c:	ldr	r1, [fp, #-4]
   13f20:	str	r0, [r1, #44]	; 0x2c
   13f24:	mov	sp, fp
   13f28:	pop	{fp, pc}
   13f2c:	push	{r4, r5, r6, sl, fp, lr}
   13f30:	add	fp, sp, #16
   13f34:	sub	sp, sp, #56	; 0x38
   13f38:	ldr	ip, [fp, #8]
   13f3c:	str	r0, [fp, #-20]	; 0xffffffec
   13f40:	str	r1, [fp, #-24]	; 0xffffffe8
   13f44:	str	r2, [fp, #-28]	; 0xffffffe4
   13f48:	str	r3, [fp, #-32]	; 0xffffffe0
   13f4c:	ldr	r0, [fp, #8]
   13f50:	movw	r1, #0
   13f54:	cmp	r0, r1
   13f58:	beq	13f68 <__assert_fail@plt+0x2eb0>
   13f5c:	ldr	r0, [fp, #8]
   13f60:	str	r0, [sp, #24]
   13f64:	b	13f78 <__assert_fail@plt+0x2ec0>
   13f68:	movw	r0, #29340	; 0x729c
   13f6c:	movt	r0, #3
   13f70:	str	r0, [sp, #24]
   13f74:	b	13f78 <__assert_fail@plt+0x2ec0>
   13f78:	ldr	r0, [sp, #24]
   13f7c:	str	r0, [sp, #36]	; 0x24
   13f80:	bl	10fec <__errno_location@plt>
   13f84:	ldr	r0, [r0]
   13f88:	str	r0, [sp, #32]
   13f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f9c:	ldr	ip, [sp, #36]	; 0x24
   13fa0:	ldr	ip, [ip]
   13fa4:	ldr	lr, [sp, #36]	; 0x24
   13fa8:	ldr	lr, [lr, #4]
   13fac:	ldr	r4, [sp, #36]	; 0x24
   13fb0:	add	r4, r4, #8
   13fb4:	ldr	r5, [sp, #36]	; 0x24
   13fb8:	ldr	r5, [r5, #40]	; 0x28
   13fbc:	ldr	r6, [sp, #36]	; 0x24
   13fc0:	ldr	r6, [r6, #44]	; 0x2c
   13fc4:	str	ip, [sp]
   13fc8:	str	lr, [sp, #4]
   13fcc:	str	r4, [sp, #8]
   13fd0:	str	r5, [sp, #12]
   13fd4:	str	r6, [sp, #16]
   13fd8:	bl	14000 <__assert_fail@plt+0x2f48>
   13fdc:	str	r0, [sp, #28]
   13fe0:	ldr	r0, [sp, #32]
   13fe4:	str	r0, [sp, #20]
   13fe8:	bl	10fec <__errno_location@plt>
   13fec:	ldr	r1, [sp, #20]
   13ff0:	str	r1, [r0]
   13ff4:	ldr	r0, [sp, #28]
   13ff8:	sub	sp, fp, #16
   13ffc:	pop	{r4, r5, r6, sl, fp, pc}
   14000:	push	{r4, r5, r6, sl, fp, lr}
   14004:	add	fp, sp, #16
   14008:	sub	sp, sp, #160	; 0xa0
   1400c:	ldr	ip, [fp, #24]
   14010:	ldr	lr, [fp, #20]
   14014:	ldr	r4, [fp, #16]
   14018:	ldr	r5, [fp, #12]
   1401c:	ldr	r6, [fp, #8]
   14020:	str	r0, [fp, #-24]	; 0xffffffe8
   14024:	str	r1, [fp, #-28]	; 0xffffffe4
   14028:	str	r2, [fp, #-32]	; 0xffffffe0
   1402c:	str	r3, [fp, #-36]	; 0xffffffdc
   14030:	movw	r0, #0
   14034:	str	r0, [fp, #-44]	; 0xffffffd4
   14038:	str	r0, [fp, #-48]	; 0xffffffd0
   1403c:	str	r0, [fp, #-52]	; 0xffffffcc
   14040:	str	r0, [fp, #-56]	; 0xffffffc8
   14044:	movw	r0, #0
   14048:	strb	r0, [fp, #-57]	; 0xffffffc7
   1404c:	str	ip, [sp, #72]	; 0x48
   14050:	str	lr, [sp, #68]	; 0x44
   14054:	str	r4, [sp, #64]	; 0x40
   14058:	str	r5, [sp, #60]	; 0x3c
   1405c:	str	r6, [sp, #56]	; 0x38
   14060:	bl	10f2c <__ctype_get_mb_cur_max@plt>
   14064:	cmp	r0, #1
   14068:	movw	r0, #0
   1406c:	moveq	r0, #1
   14070:	and	r0, r0, #1
   14074:	strb	r0, [fp, #-58]	; 0xffffffc6
   14078:	ldr	r0, [fp, #12]
   1407c:	and	r0, r0, #2
   14080:	cmp	r0, #0
   14084:	movw	r0, #0
   14088:	movne	r0, #1
   1408c:	and	r0, r0, #1
   14090:	strb	r0, [fp, #-59]	; 0xffffffc5
   14094:	movw	r0, #0
   14098:	strb	r0, [fp, #-60]	; 0xffffffc4
   1409c:	strb	r0, [fp, #-61]	; 0xffffffc3
   140a0:	movw	r0, #1
   140a4:	strb	r0, [fp, #-62]	; 0xffffffc2
   140a8:	ldr	r0, [fp, #8]
   140ac:	cmp	r0, #10
   140b0:	str	r0, [sp, #52]	; 0x34
   140b4:	bhi	142dc <__assert_fail@plt+0x3224>
   140b8:	add	r0, pc, #8
   140bc:	ldr	r1, [sp, #52]	; 0x34
   140c0:	ldr	r0, [r0, r1, lsl #2]
   140c4:	mov	pc, r0
   140c8:	ldrdeq	r4, [r1], -r0
   140cc:	andeq	r4, r1, ip, asr #4
   140d0:	andeq	r4, r1, ip, ror #4
   140d4:	andeq	r4, r1, r4, asr #4
   140d8:	andeq	r4, r1, r4, asr r2
   140dc:	andeq	r4, r1, r4, lsl #2
   140e0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140e4:	andeq	r4, r1, r8, ror #2
   140e8:	andeq	r4, r1, ip, ror r1
   140ec:	andeq	r4, r1, ip, ror r1
   140f0:	andeq	r4, r1, ip, ror r1
   140f4:	movw	r0, #5
   140f8:	str	r0, [fp, #8]
   140fc:	movw	r0, #1
   14100:	strb	r0, [fp, #-59]	; 0xffffffc5
   14104:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14108:	tst	r0, #1
   1410c:	bne	14148 <__assert_fail@plt+0x3090>
   14110:	b	14114 <__assert_fail@plt+0x305c>
   14114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1411c:	cmp	r0, r1
   14120:	bcs	14138 <__assert_fail@plt+0x3080>
   14124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1412c:	add	r0, r0, r1
   14130:	movw	r1, #34	; 0x22
   14134:	strb	r1, [r0]
   14138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1413c:	add	r0, r0, #1
   14140:	str	r0, [fp, #-44]	; 0xffffffd4
   14144:	b	14148 <__assert_fail@plt+0x3090>
   14148:	movw	r0, #1
   1414c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14150:	movw	r0, #59016	; 0xe688
   14154:	movt	r0, #1
   14158:	str	r0, [fp, #-52]	; 0xffffffcc
   1415c:	movw	r0, #1
   14160:	str	r0, [fp, #-56]	; 0xffffffc8
   14164:	b	142e0 <__assert_fail@plt+0x3228>
   14168:	movw	r0, #1
   1416c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14170:	movw	r0, #0
   14174:	strb	r0, [fp, #-59]	; 0xffffffc5
   14178:	b	142e0 <__assert_fail@plt+0x3228>
   1417c:	ldr	r0, [fp, #8]
   14180:	cmp	r0, #10
   14184:	beq	141b0 <__assert_fail@plt+0x30f8>
   14188:	ldr	r1, [fp, #8]
   1418c:	movw	r0, #59418	; 0xe81a
   14190:	movt	r0, #1
   14194:	bl	161f4 <__assert_fail@plt+0x513c>
   14198:	str	r0, [fp, #20]
   1419c:	ldr	r1, [fp, #8]
   141a0:	movw	r0, #59420	; 0xe81c
   141a4:	movt	r0, #1
   141a8:	bl	161f4 <__assert_fail@plt+0x513c>
   141ac:	str	r0, [fp, #24]
   141b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141b4:	tst	r0, #1
   141b8:	bne	14224 <__assert_fail@plt+0x316c>
   141bc:	ldr	r0, [fp, #20]
   141c0:	str	r0, [fp, #-52]	; 0xffffffcc
   141c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   141c8:	ldrsb	r0, [r0]
   141cc:	cmp	r0, #0
   141d0:	beq	14220 <__assert_fail@plt+0x3168>
   141d4:	b	141d8 <__assert_fail@plt+0x3120>
   141d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141e0:	cmp	r0, r1
   141e4:	bcs	14200 <__assert_fail@plt+0x3148>
   141e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   141ec:	ldrb	r0, [r0]
   141f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   141f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   141f8:	add	r1, r1, r2
   141fc:	strb	r0, [r1]
   14200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14204:	add	r0, r0, #1
   14208:	str	r0, [fp, #-44]	; 0xffffffd4
   1420c:	b	14210 <__assert_fail@plt+0x3158>
   14210:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14214:	add	r0, r0, #1
   14218:	str	r0, [fp, #-52]	; 0xffffffcc
   1421c:	b	141c4 <__assert_fail@plt+0x310c>
   14220:	b	14224 <__assert_fail@plt+0x316c>
   14224:	movw	r0, #1
   14228:	strb	r0, [fp, #-57]	; 0xffffffc7
   1422c:	ldr	r0, [fp, #24]
   14230:	str	r0, [fp, #-52]	; 0xffffffcc
   14234:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14238:	bl	10fc8 <strlen@plt>
   1423c:	str	r0, [fp, #-56]	; 0xffffffc8
   14240:	b	142e0 <__assert_fail@plt+0x3228>
   14244:	movw	r0, #1
   14248:	strb	r0, [fp, #-57]	; 0xffffffc7
   1424c:	movw	r0, #1
   14250:	strb	r0, [fp, #-59]	; 0xffffffc5
   14254:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14258:	tst	r0, #1
   1425c:	bne	14268 <__assert_fail@plt+0x31b0>
   14260:	movw	r0, #1
   14264:	strb	r0, [fp, #-57]	; 0xffffffc7
   14268:	b	1426c <__assert_fail@plt+0x31b4>
   1426c:	movw	r0, #2
   14270:	str	r0, [fp, #8]
   14274:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14278:	tst	r0, #1
   1427c:	bne	142b8 <__assert_fail@plt+0x3200>
   14280:	b	14284 <__assert_fail@plt+0x31cc>
   14284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14288:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1428c:	cmp	r0, r1
   14290:	bcs	142a8 <__assert_fail@plt+0x31f0>
   14294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14298:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1429c:	add	r0, r0, r1
   142a0:	movw	r1, #39	; 0x27
   142a4:	strb	r1, [r0]
   142a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142ac:	add	r0, r0, #1
   142b0:	str	r0, [fp, #-44]	; 0xffffffd4
   142b4:	b	142b8 <__assert_fail@plt+0x3200>
   142b8:	movw	r0, #59420	; 0xe81c
   142bc:	movt	r0, #1
   142c0:	str	r0, [fp, #-52]	; 0xffffffcc
   142c4:	movw	r0, #1
   142c8:	str	r0, [fp, #-56]	; 0xffffffc8
   142cc:	b	142e0 <__assert_fail@plt+0x3228>
   142d0:	movw	r0, #0
   142d4:	strb	r0, [fp, #-59]	; 0xffffffc5
   142d8:	b	142e0 <__assert_fail@plt+0x3228>
   142dc:	bl	110a0 <abort@plt>
   142e0:	movw	r0, #0
   142e4:	str	r0, [fp, #-40]	; 0xffffffd8
   142e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   142ec:	cmn	r0, #1
   142f0:	bne	1431c <__assert_fail@plt+0x3264>
   142f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   142fc:	add	r0, r0, r1
   14300:	ldrb	r0, [r0]
   14304:	cmp	r0, #0
   14308:	movw	r0, #0
   1430c:	moveq	r0, #1
   14310:	and	r0, r0, #1
   14314:	str	r0, [sp, #48]	; 0x30
   14318:	b	14338 <__assert_fail@plt+0x3280>
   1431c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14320:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14324:	cmp	r0, r1
   14328:	movw	r0, #0
   1432c:	moveq	r0, #1
   14330:	and	r0, r0, #1
   14334:	str	r0, [sp, #48]	; 0x30
   14338:	ldr	r0, [sp, #48]	; 0x30
   1433c:	cmp	r0, #0
   14340:	movw	r0, #0
   14344:	movne	r0, #1
   14348:	mvn	r1, #0
   1434c:	eor	r0, r0, r1
   14350:	tst	r0, #1
   14354:	beq	15540 <__assert_fail@plt+0x4488>
   14358:	movw	r0, #0
   1435c:	strb	r0, [fp, #-65]	; 0xffffffbf
   14360:	strb	r0, [fp, #-66]	; 0xffffffbe
   14364:	strb	r0, [fp, #-67]	; 0xffffffbd
   14368:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1436c:	tst	r0, #1
   14370:	beq	1441c <__assert_fail@plt+0x3364>
   14374:	ldr	r0, [fp, #8]
   14378:	cmp	r0, #2
   1437c:	beq	1441c <__assert_fail@plt+0x3364>
   14380:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14384:	cmp	r0, #0
   14388:	beq	1441c <__assert_fail@plt+0x3364>
   1438c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14390:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14394:	add	r0, r0, r1
   14398:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1439c:	cmn	r1, #1
   143a0:	str	r0, [sp, #44]	; 0x2c
   143a4:	bne	143cc <__assert_fail@plt+0x3314>
   143a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   143ac:	movw	r1, #1
   143b0:	cmp	r1, r0
   143b4:	bcs	143cc <__assert_fail@plt+0x3314>
   143b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143bc:	bl	10fc8 <strlen@plt>
   143c0:	str	r0, [fp, #-36]	; 0xffffffdc
   143c4:	str	r0, [sp, #40]	; 0x28
   143c8:	b	143d4 <__assert_fail@plt+0x331c>
   143cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   143d0:	str	r0, [sp, #40]	; 0x28
   143d4:	ldr	r0, [sp, #40]	; 0x28
   143d8:	ldr	r1, [sp, #44]	; 0x2c
   143dc:	cmp	r1, r0
   143e0:	bhi	1441c <__assert_fail@plt+0x3364>
   143e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   143ec:	add	r0, r0, r1
   143f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   143f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   143f8:	bl	10ee4 <memcmp@plt>
   143fc:	cmp	r0, #0
   14400:	bne	1441c <__assert_fail@plt+0x3364>
   14404:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14408:	tst	r0, #1
   1440c:	beq	14414 <__assert_fail@plt+0x335c>
   14410:	b	156c0 <__assert_fail@plt+0x4608>
   14414:	movw	r0, #1
   14418:	strb	r0, [fp, #-65]	; 0xffffffbf
   1441c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14420:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14424:	ldrb	r0, [r0, r1]
   14428:	strb	r0, [fp, #-63]	; 0xffffffc1
   1442c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14430:	mov	r1, r0
   14434:	cmp	r0, #126	; 0x7e
   14438:	str	r1, [sp, #36]	; 0x24
   1443c:	bhi	14cac <__assert_fail@plt+0x3bf4>
   14440:	add	r0, pc, #8
   14444:	ldr	r1, [sp, #36]	; 0x24
   14448:	ldr	r0, [r0, r1, lsl #2]
   1444c:	mov	pc, r0
   14450:	andeq	r4, r1, ip, asr #12
   14454:	andeq	r4, r1, ip, lsr #25
   14458:	andeq	r4, r1, ip, lsr #25
   1445c:	andeq	r4, r1, ip, lsr #25
   14460:	andeq	r4, r1, ip, lsr #25
   14464:	andeq	r4, r1, ip, lsr #25
   14468:	andeq	r4, r1, ip, lsr #25
   1446c:	andeq	r4, r1, r4, asr sl
   14470:	andeq	r4, r1, r0, ror #20
   14474:	muleq	r1, r0, sl
   14478:	andeq	r4, r1, r8, ror sl
   1447c:	muleq	r1, ip, sl
   14480:	andeq	r4, r1, ip, ror #20
   14484:	andeq	r4, r1, r4, lsl #21
   14488:	andeq	r4, r1, ip, lsr #25
   1448c:	andeq	r4, r1, ip, lsr #25
   14490:	andeq	r4, r1, ip, lsr #25
   14494:	andeq	r4, r1, ip, lsr #25
   14498:	andeq	r4, r1, ip, lsr #25
   1449c:	andeq	r4, r1, ip, lsr #25
   144a0:	andeq	r4, r1, ip, lsr #25
   144a4:	andeq	r4, r1, ip, lsr #25
   144a8:	andeq	r4, r1, ip, lsr #25
   144ac:	andeq	r4, r1, ip, lsr #25
   144b0:	andeq	r4, r1, ip, lsr #25
   144b4:	andeq	r4, r1, ip, lsr #25
   144b8:	andeq	r4, r1, ip, lsr #25
   144bc:	andeq	r4, r1, ip, lsr #25
   144c0:	andeq	r4, r1, ip, lsr #25
   144c4:	andeq	r4, r1, ip, lsr #25
   144c8:	andeq	r4, r1, ip, lsr #25
   144cc:	andeq	r4, r1, ip, lsr #25
   144d0:	andeq	r4, r1, r0, lsl #23
   144d4:	andeq	r4, r1, r8, lsl #23
   144d8:	andeq	r4, r1, r8, lsl #23
   144dc:	andeq	r4, r1, ip, ror #22
   144e0:	andeq	r4, r1, r8, lsl #23
   144e4:	andeq	r4, r1, r0, lsr #25
   144e8:	andeq	r4, r1, r8, lsl #23
   144ec:	andeq	r4, r1, r8, lsr #23
   144f0:	andeq	r4, r1, r8, lsl #23
   144f4:	andeq	r4, r1, r8, lsl #23
   144f8:	andeq	r4, r1, r8, lsl #23
   144fc:	andeq	r4, r1, r0, lsr #25
   14500:	andeq	r4, r1, r0, lsr #25
   14504:	andeq	r4, r1, r0, lsr #25
   14508:	andeq	r4, r1, r0, lsr #25
   1450c:	andeq	r4, r1, r0, lsr #25
   14510:	andeq	r4, r1, r0, lsr #25
   14514:	andeq	r4, r1, r0, lsr #25
   14518:	andeq	r4, r1, r0, lsr #25
   1451c:	andeq	r4, r1, r0, lsr #25
   14520:	andeq	r4, r1, r0, lsr #25
   14524:	andeq	r4, r1, r0, lsr #25
   14528:	andeq	r4, r1, r0, lsr #25
   1452c:	andeq	r4, r1, r0, lsr #25
   14530:	andeq	r4, r1, r0, lsr #25
   14534:	andeq	r4, r1, r0, lsr #25
   14538:	andeq	r4, r1, r0, lsr #25
   1453c:	andeq	r4, r1, r8, lsl #23
   14540:	andeq	r4, r1, r8, lsl #23
   14544:	andeq	r4, r1, r8, lsl #23
   14548:	andeq	r4, r1, r8, lsl #23
   1454c:	andeq	r4, r1, r8, asr r8
   14550:	andeq	r4, r1, ip, lsr #25
   14554:	andeq	r4, r1, r0, lsr #25
   14558:	andeq	r4, r1, r0, lsr #25
   1455c:	andeq	r4, r1, r0, lsr #25
   14560:	andeq	r4, r1, r0, lsr #25
   14564:	andeq	r4, r1, r0, lsr #25
   14568:	andeq	r4, r1, r0, lsr #25
   1456c:	andeq	r4, r1, r0, lsr #25
   14570:	andeq	r4, r1, r0, lsr #25
   14574:	andeq	r4, r1, r0, lsr #25
   14578:	andeq	r4, r1, r0, lsr #25
   1457c:	andeq	r4, r1, r0, lsr #25
   14580:	andeq	r4, r1, r0, lsr #25
   14584:	andeq	r4, r1, r0, lsr #25
   14588:	andeq	r4, r1, r0, lsr #25
   1458c:	andeq	r4, r1, r0, lsr #25
   14590:	andeq	r4, r1, r0, lsr #25
   14594:	andeq	r4, r1, r0, lsr #25
   14598:	andeq	r4, r1, r0, lsr #25
   1459c:	andeq	r4, r1, r0, lsr #25
   145a0:	andeq	r4, r1, r0, lsr #25
   145a4:	andeq	r4, r1, r0, lsr #25
   145a8:	andeq	r4, r1, r0, lsr #25
   145ac:	andeq	r4, r1, r0, lsr #25
   145b0:	andeq	r4, r1, r0, lsr #25
   145b4:	andeq	r4, r1, r0, lsr #25
   145b8:	andeq	r4, r1, r0, lsr #25
   145bc:	andeq	r4, r1, r8, lsl #23
   145c0:	andeq	r4, r1, r8, lsr #21
   145c4:	andeq	r4, r1, r0, lsr #25
   145c8:	andeq	r4, r1, r8, lsl #23
   145cc:	andeq	r4, r1, r0, lsr #25
   145d0:	andeq	r4, r1, r8, lsl #23
   145d4:	andeq	r4, r1, r0, lsr #25
   145d8:	andeq	r4, r1, r0, lsr #25
   145dc:	andeq	r4, r1, r0, lsr #25
   145e0:	andeq	r4, r1, r0, lsr #25
   145e4:	andeq	r4, r1, r0, lsr #25
   145e8:	andeq	r4, r1, r0, lsr #25
   145ec:	andeq	r4, r1, r0, lsr #25
   145f0:	andeq	r4, r1, r0, lsr #25
   145f4:	andeq	r4, r1, r0, lsr #25
   145f8:	andeq	r4, r1, r0, lsr #25
   145fc:	andeq	r4, r1, r0, lsr #25
   14600:	andeq	r4, r1, r0, lsr #25
   14604:	andeq	r4, r1, r0, lsr #25
   14608:	andeq	r4, r1, r0, lsr #25
   1460c:	andeq	r4, r1, r0, lsr #25
   14610:	andeq	r4, r1, r0, lsr #25
   14614:	andeq	r4, r1, r0, lsr #25
   14618:	andeq	r4, r1, r0, lsr #25
   1461c:	andeq	r4, r1, r0, lsr #25
   14620:	andeq	r4, r1, r0, lsr #25
   14624:	andeq	r4, r1, r0, lsr #25
   14628:	andeq	r4, r1, r0, lsr #25
   1462c:	andeq	r4, r1, r0, lsr #25
   14630:	andeq	r4, r1, r0, lsr #25
   14634:	andeq	r4, r1, r0, lsr #25
   14638:	andeq	r4, r1, r0, lsr #25
   1463c:	andeq	r4, r1, r8, lsr fp
   14640:	andeq	r4, r1, r8, lsl #23
   14644:	andeq	r4, r1, r8, lsr fp
   14648:	andeq	r4, r1, ip, ror #22
   1464c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14650:	tst	r0, #1
   14654:	beq	1483c <__assert_fail@plt+0x3784>
   14658:	b	1465c <__assert_fail@plt+0x35a4>
   1465c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14660:	tst	r0, #1
   14664:	beq	1466c <__assert_fail@plt+0x35b4>
   14668:	b	156c0 <__assert_fail@plt+0x4608>
   1466c:	movw	r0, #1
   14670:	strb	r0, [fp, #-66]	; 0xffffffbe
   14674:	ldr	r0, [fp, #8]
   14678:	cmp	r0, #2
   1467c:	bne	14730 <__assert_fail@plt+0x3678>
   14680:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14684:	tst	r0, #1
   14688:	bne	14730 <__assert_fail@plt+0x3678>
   1468c:	b	14690 <__assert_fail@plt+0x35d8>
   14690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14694:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14698:	cmp	r0, r1
   1469c:	bcs	146b4 <__assert_fail@plt+0x35fc>
   146a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146a8:	add	r0, r0, r1
   146ac:	movw	r1, #39	; 0x27
   146b0:	strb	r1, [r0]
   146b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146b8:	add	r0, r0, #1
   146bc:	str	r0, [fp, #-44]	; 0xffffffd4
   146c0:	b	146c4 <__assert_fail@plt+0x360c>
   146c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146cc:	cmp	r0, r1
   146d0:	bcs	146e8 <__assert_fail@plt+0x3630>
   146d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146dc:	add	r0, r0, r1
   146e0:	movw	r1, #36	; 0x24
   146e4:	strb	r1, [r0]
   146e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146ec:	add	r0, r0, #1
   146f0:	str	r0, [fp, #-44]	; 0xffffffd4
   146f4:	b	146f8 <__assert_fail@plt+0x3640>
   146f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14700:	cmp	r0, r1
   14704:	bcs	1471c <__assert_fail@plt+0x3664>
   14708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1470c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14710:	add	r0, r0, r1
   14714:	movw	r1, #39	; 0x27
   14718:	strb	r1, [r0]
   1471c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14720:	add	r0, r0, #1
   14724:	str	r0, [fp, #-44]	; 0xffffffd4
   14728:	movw	r0, #1
   1472c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14730:	b	14734 <__assert_fail@plt+0x367c>
   14734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1473c:	cmp	r0, r1
   14740:	bcs	14758 <__assert_fail@plt+0x36a0>
   14744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14748:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1474c:	add	r0, r0, r1
   14750:	movw	r1, #92	; 0x5c
   14754:	strb	r1, [r0]
   14758:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1475c:	add	r0, r0, #1
   14760:	str	r0, [fp, #-44]	; 0xffffffd4
   14764:	b	14768 <__assert_fail@plt+0x36b0>
   14768:	ldr	r0, [fp, #8]
   1476c:	cmp	r0, #2
   14770:	beq	14830 <__assert_fail@plt+0x3778>
   14774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14778:	add	r0, r0, #1
   1477c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14780:	cmp	r0, r1
   14784:	bcs	14830 <__assert_fail@plt+0x3778>
   14788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1478c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14790:	add	r1, r1, #1
   14794:	add	r0, r0, r1
   14798:	ldrb	r0, [r0]
   1479c:	movw	r1, #48	; 0x30
   147a0:	cmp	r1, r0
   147a4:	bgt	14830 <__assert_fail@plt+0x3778>
   147a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   147b0:	add	r1, r1, #1
   147b4:	add	r0, r0, r1
   147b8:	ldrb	r0, [r0]
   147bc:	cmp	r0, #57	; 0x39
   147c0:	bgt	14830 <__assert_fail@plt+0x3778>
   147c4:	b	147c8 <__assert_fail@plt+0x3710>
   147c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147d0:	cmp	r0, r1
   147d4:	bcs	147ec <__assert_fail@plt+0x3734>
   147d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147e0:	add	r0, r0, r1
   147e4:	movw	r1, #48	; 0x30
   147e8:	strb	r1, [r0]
   147ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147f0:	add	r0, r0, #1
   147f4:	str	r0, [fp, #-44]	; 0xffffffd4
   147f8:	b	147fc <__assert_fail@plt+0x3744>
   147fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14800:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14804:	cmp	r0, r1
   14808:	bcs	14820 <__assert_fail@plt+0x3768>
   1480c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14814:	add	r0, r0, r1
   14818:	movw	r1, #48	; 0x30
   1481c:	strb	r1, [r0]
   14820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14824:	add	r0, r0, #1
   14828:	str	r0, [fp, #-44]	; 0xffffffd4
   1482c:	b	14830 <__assert_fail@plt+0x3778>
   14830:	movw	r0, #48	; 0x30
   14834:	strb	r0, [fp, #-63]	; 0xffffffc1
   14838:	b	14854 <__assert_fail@plt+0x379c>
   1483c:	ldr	r0, [fp, #12]
   14840:	and	r0, r0, #1
   14844:	cmp	r0, #0
   14848:	beq	14850 <__assert_fail@plt+0x3798>
   1484c:	b	15530 <__assert_fail@plt+0x4478>
   14850:	b	14854 <__assert_fail@plt+0x379c>
   14854:	b	152cc <__assert_fail@plt+0x4214>
   14858:	ldr	r0, [fp, #8]
   1485c:	cmp	r0, #2
   14860:	str	r0, [sp, #32]
   14864:	beq	1487c <__assert_fail@plt+0x37c4>
   14868:	b	1486c <__assert_fail@plt+0x37b4>
   1486c:	ldr	r0, [sp, #32]
   14870:	cmp	r0, #5
   14874:	beq	14890 <__assert_fail@plt+0x37d8>
   14878:	b	14a4c <__assert_fail@plt+0x3994>
   1487c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14880:	tst	r0, #1
   14884:	beq	1488c <__assert_fail@plt+0x37d4>
   14888:	b	156c0 <__assert_fail@plt+0x4608>
   1488c:	b	14a50 <__assert_fail@plt+0x3998>
   14890:	ldr	r0, [fp, #12]
   14894:	and	r0, r0, #4
   14898:	cmp	r0, #0
   1489c:	beq	14a48 <__assert_fail@plt+0x3990>
   148a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   148a4:	add	r0, r0, #2
   148a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   148ac:	cmp	r0, r1
   148b0:	bcs	14a48 <__assert_fail@plt+0x3990>
   148b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   148bc:	add	r1, r1, #1
   148c0:	add	r0, r0, r1
   148c4:	ldrb	r0, [r0]
   148c8:	cmp	r0, #63	; 0x3f
   148cc:	bne	14a48 <__assert_fail@plt+0x3990>
   148d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   148d8:	add	r0, r1, r0
   148dc:	ldrb	r0, [r0, #2]
   148e0:	mov	r1, r0
   148e4:	cmp	r0, #33	; 0x21
   148e8:	str	r1, [sp, #28]
   148ec:	beq	1493c <__assert_fail@plt+0x3884>
   148f0:	b	148f4 <__assert_fail@plt+0x383c>
   148f4:	ldr	r0, [sp, #28]
   148f8:	sub	r1, r0, #39	; 0x27
   148fc:	cmp	r1, #3
   14900:	bcc	1493c <__assert_fail@plt+0x3884>
   14904:	b	14908 <__assert_fail@plt+0x3850>
   14908:	ldr	r0, [sp, #28]
   1490c:	cmp	r0, #45	; 0x2d
   14910:	beq	1493c <__assert_fail@plt+0x3884>
   14914:	b	14918 <__assert_fail@plt+0x3860>
   14918:	ldr	r0, [sp, #28]
   1491c:	cmp	r0, #47	; 0x2f
   14920:	beq	1493c <__assert_fail@plt+0x3884>
   14924:	b	14928 <__assert_fail@plt+0x3870>
   14928:	ldr	r0, [sp, #28]
   1492c:	sub	r1, r0, #60	; 0x3c
   14930:	cmp	r1, #2
   14934:	bhi	14a40 <__assert_fail@plt+0x3988>
   14938:	b	1493c <__assert_fail@plt+0x3884>
   1493c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14940:	tst	r0, #1
   14944:	beq	1494c <__assert_fail@plt+0x3894>
   14948:	b	156c0 <__assert_fail@plt+0x4608>
   1494c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14950:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14954:	add	r1, r1, #2
   14958:	add	r0, r0, r1
   1495c:	ldrb	r0, [r0]
   14960:	strb	r0, [fp, #-63]	; 0xffffffc1
   14964:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14968:	add	r0, r0, #2
   1496c:	str	r0, [fp, #-40]	; 0xffffffd8
   14970:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14978:	cmp	r0, r1
   1497c:	bcs	14994 <__assert_fail@plt+0x38dc>
   14980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14984:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14988:	add	r0, r0, r1
   1498c:	movw	r1, #63	; 0x3f
   14990:	strb	r1, [r0]
   14994:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14998:	add	r0, r0, #1
   1499c:	str	r0, [fp, #-44]	; 0xffffffd4
   149a0:	b	149a4 <__assert_fail@plt+0x38ec>
   149a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149ac:	cmp	r0, r1
   149b0:	bcs	149c8 <__assert_fail@plt+0x3910>
   149b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149bc:	add	r0, r0, r1
   149c0:	movw	r1, #34	; 0x22
   149c4:	strb	r1, [r0]
   149c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149cc:	add	r0, r0, #1
   149d0:	str	r0, [fp, #-44]	; 0xffffffd4
   149d4:	b	149d8 <__assert_fail@plt+0x3920>
   149d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149e0:	cmp	r0, r1
   149e4:	bcs	149fc <__assert_fail@plt+0x3944>
   149e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149f0:	add	r0, r0, r1
   149f4:	movw	r1, #34	; 0x22
   149f8:	strb	r1, [r0]
   149fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a00:	add	r0, r0, #1
   14a04:	str	r0, [fp, #-44]	; 0xffffffd4
   14a08:	b	14a0c <__assert_fail@plt+0x3954>
   14a0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a14:	cmp	r0, r1
   14a18:	bcs	14a30 <__assert_fail@plt+0x3978>
   14a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a24:	add	r0, r0, r1
   14a28:	movw	r1, #63	; 0x3f
   14a2c:	strb	r1, [r0]
   14a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a34:	add	r0, r0, #1
   14a38:	str	r0, [fp, #-44]	; 0xffffffd4
   14a3c:	b	14a44 <__assert_fail@plt+0x398c>
   14a40:	b	14a44 <__assert_fail@plt+0x398c>
   14a44:	b	14a48 <__assert_fail@plt+0x3990>
   14a48:	b	14a50 <__assert_fail@plt+0x3998>
   14a4c:	b	14a50 <__assert_fail@plt+0x3998>
   14a50:	b	152cc <__assert_fail@plt+0x4214>
   14a54:	movw	r0, #97	; 0x61
   14a58:	strb	r0, [fp, #-64]	; 0xffffffc0
   14a5c:	b	14b1c <__assert_fail@plt+0x3a64>
   14a60:	movw	r0, #98	; 0x62
   14a64:	strb	r0, [fp, #-64]	; 0xffffffc0
   14a68:	b	14b1c <__assert_fail@plt+0x3a64>
   14a6c:	movw	r0, #102	; 0x66
   14a70:	strb	r0, [fp, #-64]	; 0xffffffc0
   14a74:	b	14b1c <__assert_fail@plt+0x3a64>
   14a78:	movw	r0, #110	; 0x6e
   14a7c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14a80:	b	14afc <__assert_fail@plt+0x3a44>
   14a84:	movw	r0, #114	; 0x72
   14a88:	strb	r0, [fp, #-64]	; 0xffffffc0
   14a8c:	b	14afc <__assert_fail@plt+0x3a44>
   14a90:	movw	r0, #116	; 0x74
   14a94:	strb	r0, [fp, #-64]	; 0xffffffc0
   14a98:	b	14afc <__assert_fail@plt+0x3a44>
   14a9c:	movw	r0, #118	; 0x76
   14aa0:	strb	r0, [fp, #-64]	; 0xffffffc0
   14aa4:	b	14b1c <__assert_fail@plt+0x3a64>
   14aa8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14aac:	strb	r0, [fp, #-64]	; 0xffffffc0
   14ab0:	ldr	r0, [fp, #8]
   14ab4:	cmp	r0, #2
   14ab8:	bne	14ad0 <__assert_fail@plt+0x3a18>
   14abc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ac0:	tst	r0, #1
   14ac4:	beq	14acc <__assert_fail@plt+0x3a14>
   14ac8:	b	156c0 <__assert_fail@plt+0x4608>
   14acc:	b	15454 <__assert_fail@plt+0x439c>
   14ad0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14ad4:	tst	r0, #1
   14ad8:	beq	14af8 <__assert_fail@plt+0x3a40>
   14adc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ae0:	tst	r0, #1
   14ae4:	beq	14af8 <__assert_fail@plt+0x3a40>
   14ae8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14aec:	cmp	r0, #0
   14af0:	beq	14af8 <__assert_fail@plt+0x3a40>
   14af4:	b	15454 <__assert_fail@plt+0x439c>
   14af8:	b	14afc <__assert_fail@plt+0x3a44>
   14afc:	ldr	r0, [fp, #8]
   14b00:	cmp	r0, #2
   14b04:	bne	14b18 <__assert_fail@plt+0x3a60>
   14b08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b0c:	tst	r0, #1
   14b10:	beq	14b18 <__assert_fail@plt+0x3a60>
   14b14:	b	156c0 <__assert_fail@plt+0x4608>
   14b18:	b	14b1c <__assert_fail@plt+0x3a64>
   14b1c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14b20:	tst	r0, #1
   14b24:	beq	14b34 <__assert_fail@plt+0x3a7c>
   14b28:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14b2c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14b30:	b	15340 <__assert_fail@plt+0x4288>
   14b34:	b	152cc <__assert_fail@plt+0x4214>
   14b38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14b3c:	cmn	r0, #1
   14b40:	bne	14b58 <__assert_fail@plt+0x3aa0>
   14b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b48:	ldrb	r0, [r0, #1]
   14b4c:	cmp	r0, #0
   14b50:	beq	14b68 <__assert_fail@plt+0x3ab0>
   14b54:	b	14b64 <__assert_fail@plt+0x3aac>
   14b58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14b5c:	cmp	r0, #1
   14b60:	beq	14b68 <__assert_fail@plt+0x3ab0>
   14b64:	b	152cc <__assert_fail@plt+0x4214>
   14b68:	b	14b6c <__assert_fail@plt+0x3ab4>
   14b6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b70:	cmp	r0, #0
   14b74:	beq	14b7c <__assert_fail@plt+0x3ac4>
   14b78:	b	152cc <__assert_fail@plt+0x4214>
   14b7c:	b	14b80 <__assert_fail@plt+0x3ac8>
   14b80:	movw	r0, #1
   14b84:	strb	r0, [fp, #-67]	; 0xffffffbd
   14b88:	ldr	r0, [fp, #8]
   14b8c:	cmp	r0, #2
   14b90:	bne	14ba4 <__assert_fail@plt+0x3aec>
   14b94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b98:	tst	r0, #1
   14b9c:	beq	14ba4 <__assert_fail@plt+0x3aec>
   14ba0:	b	156c0 <__assert_fail@plt+0x4608>
   14ba4:	b	152cc <__assert_fail@plt+0x4214>
   14ba8:	movw	r0, #1
   14bac:	strb	r0, [fp, #-61]	; 0xffffffc3
   14bb0:	strb	r0, [fp, #-67]	; 0xffffffbd
   14bb4:	ldr	r0, [fp, #8]
   14bb8:	cmp	r0, #2
   14bbc:	bne	14c9c <__assert_fail@plt+0x3be4>
   14bc0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bc4:	tst	r0, #1
   14bc8:	beq	14bd0 <__assert_fail@plt+0x3b18>
   14bcc:	b	156c0 <__assert_fail@plt+0x4608>
   14bd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14bd4:	cmp	r0, #0
   14bd8:	beq	14bf8 <__assert_fail@plt+0x3b40>
   14bdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14be0:	cmp	r0, #0
   14be4:	bne	14bf8 <__assert_fail@plt+0x3b40>
   14be8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14bec:	str	r0, [fp, #-48]	; 0xffffffd0
   14bf0:	movw	r0, #0
   14bf4:	str	r0, [fp, #-28]	; 0xffffffe4
   14bf8:	b	14bfc <__assert_fail@plt+0x3b44>
   14bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c04:	cmp	r0, r1
   14c08:	bcs	14c20 <__assert_fail@plt+0x3b68>
   14c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c14:	add	r0, r0, r1
   14c18:	movw	r1, #39	; 0x27
   14c1c:	strb	r1, [r0]
   14c20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c24:	add	r0, r0, #1
   14c28:	str	r0, [fp, #-44]	; 0xffffffd4
   14c2c:	b	14c30 <__assert_fail@plt+0x3b78>
   14c30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c38:	cmp	r0, r1
   14c3c:	bcs	14c54 <__assert_fail@plt+0x3b9c>
   14c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c48:	add	r0, r0, r1
   14c4c:	movw	r1, #92	; 0x5c
   14c50:	strb	r1, [r0]
   14c54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c58:	add	r0, r0, #1
   14c5c:	str	r0, [fp, #-44]	; 0xffffffd4
   14c60:	b	14c64 <__assert_fail@plt+0x3bac>
   14c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c6c:	cmp	r0, r1
   14c70:	bcs	14c88 <__assert_fail@plt+0x3bd0>
   14c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c7c:	add	r0, r0, r1
   14c80:	movw	r1, #39	; 0x27
   14c84:	strb	r1, [r0]
   14c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c8c:	add	r0, r0, #1
   14c90:	str	r0, [fp, #-44]	; 0xffffffd4
   14c94:	movw	r0, #0
   14c98:	strb	r0, [fp, #-60]	; 0xffffffc4
   14c9c:	b	152cc <__assert_fail@plt+0x4214>
   14ca0:	movw	r0, #1
   14ca4:	strb	r0, [fp, #-67]	; 0xffffffbd
   14ca8:	b	152cc <__assert_fail@plt+0x4214>
   14cac:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14cb0:	tst	r0, #1
   14cb4:	beq	14cf4 <__assert_fail@plt+0x3c3c>
   14cb8:	mov	r0, #1
   14cbc:	str	r0, [fp, #-72]	; 0xffffffb8
   14cc0:	bl	10fa4 <__ctype_b_loc@plt>
   14cc4:	ldr	r0, [r0]
   14cc8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14ccc:	mov	r2, r1
   14cd0:	add	r0, r0, r1, lsl #1
   14cd4:	ldrh	r0, [r0]
   14cd8:	and	r0, r0, #16384	; 0x4000
   14cdc:	cmp	r0, #0
   14ce0:	movw	r0, #0
   14ce4:	movne	r0, #1
   14ce8:	and	r0, r0, #1
   14cec:	strb	r0, [fp, #-73]	; 0xffffffb7
   14cf0:	b	14f80 <__assert_fail@plt+0x3ec8>
   14cf4:	sub	r0, fp, #84	; 0x54
   14cf8:	movw	r1, #0
   14cfc:	and	r1, r1, #255	; 0xff
   14d00:	movw	r2, #8
   14d04:	bl	11004 <memset@plt>
   14d08:	movw	r0, #0
   14d0c:	str	r0, [fp, #-72]	; 0xffffffb8
   14d10:	movw	r0, #1
   14d14:	strb	r0, [fp, #-73]	; 0xffffffb7
   14d18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d1c:	cmn	r0, #1
   14d20:	bne	14d30 <__assert_fail@plt+0x3c78>
   14d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d28:	bl	10fc8 <strlen@plt>
   14d2c:	str	r0, [fp, #-36]	; 0xffffffdc
   14d30:	b	14d34 <__assert_fail@plt+0x3c7c>
   14d34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d3c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14d40:	add	r1, r1, r2
   14d44:	add	r1, r0, r1
   14d48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14d50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14d54:	add	r2, r2, r3
   14d58:	sub	r2, r0, r2
   14d5c:	add	r0, sp, #88	; 0x58
   14d60:	sub	r3, fp, #84	; 0x54
   14d64:	bl	1c0e4 <__assert_fail@plt+0xb02c>
   14d68:	str	r0, [sp, #84]	; 0x54
   14d6c:	ldr	r0, [sp, #84]	; 0x54
   14d70:	cmp	r0, #0
   14d74:	bne	14d7c <__assert_fail@plt+0x3cc4>
   14d78:	b	14f7c <__assert_fail@plt+0x3ec4>
   14d7c:	ldr	r0, [sp, #84]	; 0x54
   14d80:	cmn	r0, #1
   14d84:	bne	14d94 <__assert_fail@plt+0x3cdc>
   14d88:	movw	r0, #0
   14d8c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14d90:	b	14f7c <__assert_fail@plt+0x3ec4>
   14d94:	ldr	r0, [sp, #84]	; 0x54
   14d98:	cmn	r0, #2
   14d9c:	bne	14e10 <__assert_fail@plt+0x3d58>
   14da0:	movw	r0, #0
   14da4:	strb	r0, [fp, #-73]	; 0xffffffb7
   14da8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14dac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14db0:	add	r0, r0, r1
   14db4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14db8:	cmp	r0, r1
   14dbc:	movw	r0, #0
   14dc0:	str	r0, [sp, #24]
   14dc4:	bcs	14df0 <__assert_fail@plt+0x3d38>
   14dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14dcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14dd0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14dd4:	add	r1, r1, r2
   14dd8:	add	r0, r0, r1
   14ddc:	ldrb	r0, [r0]
   14de0:	cmp	r0, #0
   14de4:	movw	r0, #0
   14de8:	movne	r0, #1
   14dec:	str	r0, [sp, #24]
   14df0:	ldr	r0, [sp, #24]
   14df4:	tst	r0, #1
   14df8:	beq	14e0c <__assert_fail@plt+0x3d54>
   14dfc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14e00:	add	r0, r0, #1
   14e04:	str	r0, [fp, #-72]	; 0xffffffb8
   14e08:	b	14da8 <__assert_fail@plt+0x3cf0>
   14e0c:	b	14f7c <__assert_fail@plt+0x3ec4>
   14e10:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e14:	tst	r0, #1
   14e18:	beq	14f24 <__assert_fail@plt+0x3e6c>
   14e1c:	ldr	r0, [fp, #8]
   14e20:	cmp	r0, #2
   14e24:	bne	14f24 <__assert_fail@plt+0x3e6c>
   14e28:	movw	r0, #1
   14e2c:	str	r0, [sp, #80]	; 0x50
   14e30:	ldr	r0, [sp, #80]	; 0x50
   14e34:	ldr	r1, [sp, #84]	; 0x54
   14e38:	cmp	r0, r1
   14e3c:	bcs	14f20 <__assert_fail@plt+0x3e68>
   14e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e48:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14e4c:	add	r1, r1, r2
   14e50:	ldr	r2, [sp, #80]	; 0x50
   14e54:	add	r1, r1, r2
   14e58:	ldrb	r0, [r0, r1]
   14e5c:	sub	r0, r0, #91	; 0x5b
   14e60:	cmp	r0, #33	; 0x21
   14e64:	str	r0, [sp, #20]
   14e68:	bhi	14f08 <__assert_fail@plt+0x3e50>
   14e6c:	add	r0, pc, #8
   14e70:	ldr	r1, [sp, #20]
   14e74:	ldr	r0, [r0, r1, lsl #2]
   14e78:	mov	pc, r0
   14e7c:	andeq	r4, r1, r4, lsl #30
   14e80:	andeq	r4, r1, r4, lsl #30
   14e84:	andeq	r4, r1, r8, lsl #30
   14e88:	andeq	r4, r1, r4, lsl #30
   14e8c:	andeq	r4, r1, r8, lsl #30
   14e90:	andeq	r4, r1, r4, lsl #30
   14e94:	andeq	r4, r1, r8, lsl #30
   14e98:	andeq	r4, r1, r8, lsl #30
   14e9c:	andeq	r4, r1, r8, lsl #30
   14ea0:	andeq	r4, r1, r8, lsl #30
   14ea4:	andeq	r4, r1, r8, lsl #30
   14ea8:	andeq	r4, r1, r8, lsl #30
   14eac:	andeq	r4, r1, r8, lsl #30
   14eb0:	andeq	r4, r1, r8, lsl #30
   14eb4:	andeq	r4, r1, r8, lsl #30
   14eb8:	andeq	r4, r1, r8, lsl #30
   14ebc:	andeq	r4, r1, r8, lsl #30
   14ec0:	andeq	r4, r1, r8, lsl #30
   14ec4:	andeq	r4, r1, r8, lsl #30
   14ec8:	andeq	r4, r1, r8, lsl #30
   14ecc:	andeq	r4, r1, r8, lsl #30
   14ed0:	andeq	r4, r1, r8, lsl #30
   14ed4:	andeq	r4, r1, r8, lsl #30
   14ed8:	andeq	r4, r1, r8, lsl #30
   14edc:	andeq	r4, r1, r8, lsl #30
   14ee0:	andeq	r4, r1, r8, lsl #30
   14ee4:	andeq	r4, r1, r8, lsl #30
   14ee8:	andeq	r4, r1, r8, lsl #30
   14eec:	andeq	r4, r1, r8, lsl #30
   14ef0:	andeq	r4, r1, r8, lsl #30
   14ef4:	andeq	r4, r1, r8, lsl #30
   14ef8:	andeq	r4, r1, r8, lsl #30
   14efc:	andeq	r4, r1, r8, lsl #30
   14f00:	andeq	r4, r1, r4, lsl #30
   14f04:	b	156c0 <__assert_fail@plt+0x4608>
   14f08:	b	14f0c <__assert_fail@plt+0x3e54>
   14f0c:	b	14f10 <__assert_fail@plt+0x3e58>
   14f10:	ldr	r0, [sp, #80]	; 0x50
   14f14:	add	r0, r0, #1
   14f18:	str	r0, [sp, #80]	; 0x50
   14f1c:	b	14e30 <__assert_fail@plt+0x3d78>
   14f20:	b	14f24 <__assert_fail@plt+0x3e6c>
   14f24:	ldr	r0, [sp, #88]	; 0x58
   14f28:	bl	10f14 <iswprint@plt>
   14f2c:	cmp	r0, #0
   14f30:	bne	14f3c <__assert_fail@plt+0x3e84>
   14f34:	movw	r0, #0
   14f38:	strb	r0, [fp, #-73]	; 0xffffffb7
   14f3c:	ldr	r0, [sp, #84]	; 0x54
   14f40:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14f44:	add	r0, r1, r0
   14f48:	str	r0, [fp, #-72]	; 0xffffffb8
   14f4c:	b	14f50 <__assert_fail@plt+0x3e98>
   14f50:	b	14f54 <__assert_fail@plt+0x3e9c>
   14f54:	b	14f58 <__assert_fail@plt+0x3ea0>
   14f58:	sub	r0, fp, #84	; 0x54
   14f5c:	bl	10ecc <mbsinit@plt>
   14f60:	cmp	r0, #0
   14f64:	movw	r0, #0
   14f68:	movne	r0, #1
   14f6c:	mvn	r1, #0
   14f70:	eor	r0, r0, r1
   14f74:	tst	r0, #1
   14f78:	bne	14d34 <__assert_fail@plt+0x3c7c>
   14f7c:	b	14f80 <__assert_fail@plt+0x3ec8>
   14f80:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14f84:	and	r0, r0, #1
   14f88:	strb	r0, [fp, #-67]	; 0xffffffbd
   14f8c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14f90:	movw	r1, #1
   14f94:	cmp	r1, r0
   14f98:	bcc	14fb4 <__assert_fail@plt+0x3efc>
   14f9c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14fa0:	tst	r0, #1
   14fa4:	beq	152c8 <__assert_fail@plt+0x4210>
   14fa8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14fac:	tst	r0, #1
   14fb0:	bne	152c8 <__assert_fail@plt+0x4210>
   14fb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fb8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14fbc:	add	r0, r0, r1
   14fc0:	str	r0, [sp, #76]	; 0x4c
   14fc4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14fc8:	tst	r0, #1
   14fcc:	beq	1517c <__assert_fail@plt+0x40c4>
   14fd0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14fd4:	tst	r0, #1
   14fd8:	bne	1517c <__assert_fail@plt+0x40c4>
   14fdc:	b	14fe0 <__assert_fail@plt+0x3f28>
   14fe0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14fe4:	tst	r0, #1
   14fe8:	beq	14ff0 <__assert_fail@plt+0x3f38>
   14fec:	b	156c0 <__assert_fail@plt+0x4608>
   14ff0:	movw	r0, #1
   14ff4:	strb	r0, [fp, #-66]	; 0xffffffbe
   14ff8:	ldr	r0, [fp, #8]
   14ffc:	cmp	r0, #2
   15000:	bne	150b4 <__assert_fail@plt+0x3ffc>
   15004:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15008:	tst	r0, #1
   1500c:	bne	150b4 <__assert_fail@plt+0x3ffc>
   15010:	b	15014 <__assert_fail@plt+0x3f5c>
   15014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15018:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1501c:	cmp	r0, r1
   15020:	bcs	15038 <__assert_fail@plt+0x3f80>
   15024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15028:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1502c:	add	r0, r0, r1
   15030:	movw	r1, #39	; 0x27
   15034:	strb	r1, [r0]
   15038:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1503c:	add	r0, r0, #1
   15040:	str	r0, [fp, #-44]	; 0xffffffd4
   15044:	b	15048 <__assert_fail@plt+0x3f90>
   15048:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1504c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15050:	cmp	r0, r1
   15054:	bcs	1506c <__assert_fail@plt+0x3fb4>
   15058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1505c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15060:	add	r0, r0, r1
   15064:	movw	r1, #36	; 0x24
   15068:	strb	r1, [r0]
   1506c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15070:	add	r0, r0, #1
   15074:	str	r0, [fp, #-44]	; 0xffffffd4
   15078:	b	1507c <__assert_fail@plt+0x3fc4>
   1507c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15080:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15084:	cmp	r0, r1
   15088:	bcs	150a0 <__assert_fail@plt+0x3fe8>
   1508c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15090:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15094:	add	r0, r0, r1
   15098:	movw	r1, #39	; 0x27
   1509c:	strb	r1, [r0]
   150a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150a4:	add	r0, r0, #1
   150a8:	str	r0, [fp, #-44]	; 0xffffffd4
   150ac:	movw	r0, #1
   150b0:	strb	r0, [fp, #-60]	; 0xffffffc4
   150b4:	b	150b8 <__assert_fail@plt+0x4000>
   150b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   150c0:	cmp	r0, r1
   150c4:	bcs	150dc <__assert_fail@plt+0x4024>
   150c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150d0:	add	r0, r0, r1
   150d4:	movw	r1, #92	; 0x5c
   150d8:	strb	r1, [r0]
   150dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150e0:	add	r0, r0, #1
   150e4:	str	r0, [fp, #-44]	; 0xffffffd4
   150e8:	b	150ec <__assert_fail@plt+0x4034>
   150ec:	b	150f0 <__assert_fail@plt+0x4038>
   150f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   150f8:	cmp	r0, r1
   150fc:	bcs	1511c <__assert_fail@plt+0x4064>
   15100:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15104:	asr	r0, r0, #6
   15108:	add	r0, r0, #48	; 0x30
   1510c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15110:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15114:	add	r1, r1, r2
   15118:	strb	r0, [r1]
   1511c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15120:	add	r0, r0, #1
   15124:	str	r0, [fp, #-44]	; 0xffffffd4
   15128:	b	1512c <__assert_fail@plt+0x4074>
   1512c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15130:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15134:	cmp	r0, r1
   15138:	bcs	1515c <__assert_fail@plt+0x40a4>
   1513c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15140:	asr	r0, r0, #3
   15144:	and	r0, r0, #7
   15148:	add	r0, r0, #48	; 0x30
   1514c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15150:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15154:	add	r1, r1, r2
   15158:	strb	r0, [r1]
   1515c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15160:	add	r0, r0, #1
   15164:	str	r0, [fp, #-44]	; 0xffffffd4
   15168:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1516c:	and	r0, r0, #7
   15170:	add	r0, r0, #48	; 0x30
   15174:	strb	r0, [fp, #-63]	; 0xffffffc1
   15178:	b	151c8 <__assert_fail@plt+0x4110>
   1517c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15180:	tst	r0, #1
   15184:	beq	151c4 <__assert_fail@plt+0x410c>
   15188:	b	1518c <__assert_fail@plt+0x40d4>
   1518c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15190:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15194:	cmp	r0, r1
   15198:	bcs	151b0 <__assert_fail@plt+0x40f8>
   1519c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151a4:	add	r0, r0, r1
   151a8:	movw	r1, #92	; 0x5c
   151ac:	strb	r1, [r0]
   151b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151b4:	add	r0, r0, #1
   151b8:	str	r0, [fp, #-44]	; 0xffffffd4
   151bc:	movw	r0, #0
   151c0:	strb	r0, [fp, #-65]	; 0xffffffbf
   151c4:	b	151c8 <__assert_fail@plt+0x4110>
   151c8:	ldr	r0, [sp, #76]	; 0x4c
   151cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151d0:	add	r1, r1, #1
   151d4:	cmp	r0, r1
   151d8:	bhi	151e0 <__assert_fail@plt+0x4128>
   151dc:	b	152c4 <__assert_fail@plt+0x420c>
   151e0:	b	151e4 <__assert_fail@plt+0x412c>
   151e4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   151e8:	tst	r0, #1
   151ec:	beq	1526c <__assert_fail@plt+0x41b4>
   151f0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   151f4:	tst	r0, #1
   151f8:	bne	1526c <__assert_fail@plt+0x41b4>
   151fc:	b	15200 <__assert_fail@plt+0x4148>
   15200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15204:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15208:	cmp	r0, r1
   1520c:	bcs	15224 <__assert_fail@plt+0x416c>
   15210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15214:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15218:	add	r0, r0, r1
   1521c:	movw	r1, #39	; 0x27
   15220:	strb	r1, [r0]
   15224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15228:	add	r0, r0, #1
   1522c:	str	r0, [fp, #-44]	; 0xffffffd4
   15230:	b	15234 <__assert_fail@plt+0x417c>
   15234:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1523c:	cmp	r0, r1
   15240:	bcs	15258 <__assert_fail@plt+0x41a0>
   15244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15248:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1524c:	add	r0, r0, r1
   15250:	movw	r1, #39	; 0x27
   15254:	strb	r1, [r0]
   15258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1525c:	add	r0, r0, #1
   15260:	str	r0, [fp, #-44]	; 0xffffffd4
   15264:	movw	r0, #0
   15268:	strb	r0, [fp, #-60]	; 0xffffffc4
   1526c:	b	15270 <__assert_fail@plt+0x41b8>
   15270:	b	15274 <__assert_fail@plt+0x41bc>
   15274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15278:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1527c:	cmp	r0, r1
   15280:	bcs	15298 <__assert_fail@plt+0x41e0>
   15284:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1528c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15290:	add	r1, r1, r2
   15294:	strb	r0, [r1]
   15298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1529c:	add	r0, r0, #1
   152a0:	str	r0, [fp, #-44]	; 0xffffffd4
   152a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152ac:	add	r1, r1, #1
   152b0:	str	r1, [fp, #-40]	; 0xffffffd8
   152b4:	add	r0, r0, r1
   152b8:	ldrb	r0, [r0]
   152bc:	strb	r0, [fp, #-63]	; 0xffffffc1
   152c0:	b	14fc4 <__assert_fail@plt+0x3f0c>
   152c4:	b	15454 <__assert_fail@plt+0x439c>
   152c8:	b	152cc <__assert_fail@plt+0x4214>
   152cc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   152d0:	tst	r0, #1
   152d4:	beq	152e4 <__assert_fail@plt+0x422c>
   152d8:	ldr	r0, [fp, #8]
   152dc:	cmp	r0, #2
   152e0:	bne	152f0 <__assert_fail@plt+0x4238>
   152e4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   152e8:	tst	r0, #1
   152ec:	beq	1532c <__assert_fail@plt+0x4274>
   152f0:	ldr	r0, [fp, #16]
   152f4:	movw	r1, #0
   152f8:	cmp	r0, r1
   152fc:	beq	1532c <__assert_fail@plt+0x4274>
   15300:	ldr	r0, [fp, #16]
   15304:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15308:	lsr	r1, r1, #5
   1530c:	add	r0, r0, r1, lsl #2
   15310:	ldr	r0, [r0]
   15314:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15318:	and	r1, r1, #31
   1531c:	lsr	r0, r0, r1
   15320:	and	r0, r0, #1
   15324:	cmp	r0, #0
   15328:	bne	1533c <__assert_fail@plt+0x4284>
   1532c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15330:	tst	r0, #1
   15334:	bne	1533c <__assert_fail@plt+0x4284>
   15338:	b	15454 <__assert_fail@plt+0x439c>
   1533c:	b	15340 <__assert_fail@plt+0x4288>
   15340:	b	15344 <__assert_fail@plt+0x428c>
   15344:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15348:	tst	r0, #1
   1534c:	beq	15354 <__assert_fail@plt+0x429c>
   15350:	b	156c0 <__assert_fail@plt+0x4608>
   15354:	movw	r0, #1
   15358:	strb	r0, [fp, #-66]	; 0xffffffbe
   1535c:	ldr	r0, [fp, #8]
   15360:	cmp	r0, #2
   15364:	bne	15418 <__assert_fail@plt+0x4360>
   15368:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1536c:	tst	r0, #1
   15370:	bne	15418 <__assert_fail@plt+0x4360>
   15374:	b	15378 <__assert_fail@plt+0x42c0>
   15378:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1537c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15380:	cmp	r0, r1
   15384:	bcs	1539c <__assert_fail@plt+0x42e4>
   15388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1538c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15390:	add	r0, r0, r1
   15394:	movw	r1, #39	; 0x27
   15398:	strb	r1, [r0]
   1539c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153a0:	add	r0, r0, #1
   153a4:	str	r0, [fp, #-44]	; 0xffffffd4
   153a8:	b	153ac <__assert_fail@plt+0x42f4>
   153ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   153b4:	cmp	r0, r1
   153b8:	bcs	153d0 <__assert_fail@plt+0x4318>
   153bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153c4:	add	r0, r0, r1
   153c8:	movw	r1, #36	; 0x24
   153cc:	strb	r1, [r0]
   153d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153d4:	add	r0, r0, #1
   153d8:	str	r0, [fp, #-44]	; 0xffffffd4
   153dc:	b	153e0 <__assert_fail@plt+0x4328>
   153e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   153e8:	cmp	r0, r1
   153ec:	bcs	15404 <__assert_fail@plt+0x434c>
   153f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153f8:	add	r0, r0, r1
   153fc:	movw	r1, #39	; 0x27
   15400:	strb	r1, [r0]
   15404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15408:	add	r0, r0, #1
   1540c:	str	r0, [fp, #-44]	; 0xffffffd4
   15410:	movw	r0, #1
   15414:	strb	r0, [fp, #-60]	; 0xffffffc4
   15418:	b	1541c <__assert_fail@plt+0x4364>
   1541c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15420:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15424:	cmp	r0, r1
   15428:	bcs	15440 <__assert_fail@plt+0x4388>
   1542c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15430:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15434:	add	r0, r0, r1
   15438:	movw	r1, #92	; 0x5c
   1543c:	strb	r1, [r0]
   15440:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15444:	add	r0, r0, #1
   15448:	str	r0, [fp, #-44]	; 0xffffffd4
   1544c:	b	15450 <__assert_fail@plt+0x4398>
   15450:	b	15454 <__assert_fail@plt+0x439c>
   15454:	b	15458 <__assert_fail@plt+0x43a0>
   15458:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1545c:	tst	r0, #1
   15460:	beq	154e0 <__assert_fail@plt+0x4428>
   15464:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15468:	tst	r0, #1
   1546c:	bne	154e0 <__assert_fail@plt+0x4428>
   15470:	b	15474 <__assert_fail@plt+0x43bc>
   15474:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1547c:	cmp	r0, r1
   15480:	bcs	15498 <__assert_fail@plt+0x43e0>
   15484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15488:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1548c:	add	r0, r0, r1
   15490:	movw	r1, #39	; 0x27
   15494:	strb	r1, [r0]
   15498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1549c:	add	r0, r0, #1
   154a0:	str	r0, [fp, #-44]	; 0xffffffd4
   154a4:	b	154a8 <__assert_fail@plt+0x43f0>
   154a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154b0:	cmp	r0, r1
   154b4:	bcs	154cc <__assert_fail@plt+0x4414>
   154b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154c0:	add	r0, r0, r1
   154c4:	movw	r1, #39	; 0x27
   154c8:	strb	r1, [r0]
   154cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154d0:	add	r0, r0, #1
   154d4:	str	r0, [fp, #-44]	; 0xffffffd4
   154d8:	movw	r0, #0
   154dc:	strb	r0, [fp, #-60]	; 0xffffffc4
   154e0:	b	154e4 <__assert_fail@plt+0x442c>
   154e4:	b	154e8 <__assert_fail@plt+0x4430>
   154e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154f0:	cmp	r0, r1
   154f4:	bcs	1550c <__assert_fail@plt+0x4454>
   154f8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   154fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15500:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15504:	add	r1, r1, r2
   15508:	strb	r0, [r1]
   1550c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15510:	add	r0, r0, #1
   15514:	str	r0, [fp, #-44]	; 0xffffffd4
   15518:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1551c:	tst	r0, #1
   15520:	bne	1552c <__assert_fail@plt+0x4474>
   15524:	movw	r0, #0
   15528:	strb	r0, [fp, #-62]	; 0xffffffc2
   1552c:	b	15530 <__assert_fail@plt+0x4478>
   15530:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15534:	add	r0, r0, #1
   15538:	str	r0, [fp, #-40]	; 0xffffffd8
   1553c:	b	142e8 <__assert_fail@plt+0x3230>
   15540:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15544:	cmp	r0, #0
   15548:	bne	15568 <__assert_fail@plt+0x44b0>
   1554c:	ldr	r0, [fp, #8]
   15550:	cmp	r0, #2
   15554:	bne	15568 <__assert_fail@plt+0x44b0>
   15558:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1555c:	tst	r0, #1
   15560:	beq	15568 <__assert_fail@plt+0x44b0>
   15564:	b	156c0 <__assert_fail@plt+0x4608>
   15568:	ldr	r0, [fp, #8]
   1556c:	cmp	r0, #2
   15570:	bne	15610 <__assert_fail@plt+0x4558>
   15574:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15578:	tst	r0, #1
   1557c:	bne	15610 <__assert_fail@plt+0x4558>
   15580:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15584:	tst	r0, #1
   15588:	beq	15610 <__assert_fail@plt+0x4558>
   1558c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15590:	tst	r0, #1
   15594:	beq	155dc <__assert_fail@plt+0x4524>
   15598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1559c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   155a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   155a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155a8:	ldr	ip, [fp, #12]
   155ac:	ldr	lr, [fp, #16]
   155b0:	ldr	r4, [fp, #20]
   155b4:	ldr	r5, [fp, #24]
   155b8:	movw	r6, #5
   155bc:	str	r6, [sp]
   155c0:	str	ip, [sp, #4]
   155c4:	str	lr, [sp, #8]
   155c8:	str	r4, [sp, #12]
   155cc:	str	r5, [sp, #16]
   155d0:	bl	14000 <__assert_fail@plt+0x2f48>
   155d4:	str	r0, [fp, #-20]	; 0xffffffec
   155d8:	b	15728 <__assert_fail@plt+0x4670>
   155dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   155e0:	cmp	r0, #0
   155e4:	bne	15608 <__assert_fail@plt+0x4550>
   155e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155ec:	cmp	r0, #0
   155f0:	beq	15608 <__assert_fail@plt+0x4550>
   155f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155f8:	str	r0, [fp, #-28]	; 0xffffffe4
   155fc:	movw	r0, #0
   15600:	str	r0, [fp, #-44]	; 0xffffffd4
   15604:	b	140a8 <__assert_fail@plt+0x2ff0>
   15608:	b	1560c <__assert_fail@plt+0x4554>
   1560c:	b	15610 <__assert_fail@plt+0x4558>
   15610:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15614:	movw	r1, #0
   15618:	cmp	r0, r1
   1561c:	beq	15690 <__assert_fail@plt+0x45d8>
   15620:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15624:	tst	r0, #1
   15628:	bne	15690 <__assert_fail@plt+0x45d8>
   1562c:	b	15630 <__assert_fail@plt+0x4578>
   15630:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15634:	ldrsb	r0, [r0]
   15638:	cmp	r0, #0
   1563c:	beq	1568c <__assert_fail@plt+0x45d4>
   15640:	b	15644 <__assert_fail@plt+0x458c>
   15644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15648:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1564c:	cmp	r0, r1
   15650:	bcs	1566c <__assert_fail@plt+0x45b4>
   15654:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15658:	ldrb	r0, [r0]
   1565c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15660:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15664:	add	r1, r1, r2
   15668:	strb	r0, [r1]
   1566c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15670:	add	r0, r0, #1
   15674:	str	r0, [fp, #-44]	; 0xffffffd4
   15678:	b	1567c <__assert_fail@plt+0x45c4>
   1567c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15680:	add	r0, r0, #1
   15684:	str	r0, [fp, #-52]	; 0xffffffcc
   15688:	b	15630 <__assert_fail@plt+0x4578>
   1568c:	b	15690 <__assert_fail@plt+0x45d8>
   15690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15694:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15698:	cmp	r0, r1
   1569c:	bcs	156b4 <__assert_fail@plt+0x45fc>
   156a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156a8:	add	r0, r0, r1
   156ac:	movw	r1, #0
   156b0:	strb	r1, [r0]
   156b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156b8:	str	r0, [fp, #-20]	; 0xffffffec
   156bc:	b	15728 <__assert_fail@plt+0x4670>
   156c0:	ldr	r0, [fp, #8]
   156c4:	cmp	r0, #2
   156c8:	bne	156e0 <__assert_fail@plt+0x4628>
   156cc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   156d0:	tst	r0, #1
   156d4:	beq	156e0 <__assert_fail@plt+0x4628>
   156d8:	movw	r0, #4
   156dc:	str	r0, [fp, #8]
   156e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   156ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   156f0:	ldr	ip, [fp, #8]
   156f4:	ldr	lr, [fp, #12]
   156f8:	mvn	r4, #2
   156fc:	and	lr, lr, r4
   15700:	ldr	r4, [fp, #20]
   15704:	ldr	r5, [fp, #24]
   15708:	str	ip, [sp]
   1570c:	str	lr, [sp, #4]
   15710:	movw	ip, #0
   15714:	str	ip, [sp, #8]
   15718:	str	r4, [sp, #12]
   1571c:	str	r5, [sp, #16]
   15720:	bl	14000 <__assert_fail@plt+0x2f48>
   15724:	str	r0, [fp, #-20]	; 0xffffffec
   15728:	ldr	r0, [fp, #-20]	; 0xffffffec
   1572c:	sub	sp, fp, #16
   15730:	pop	{r4, r5, r6, sl, fp, pc}
   15734:	push	{fp, lr}
   15738:	mov	fp, sp
   1573c:	sub	sp, sp, #16
   15740:	str	r0, [fp, #-4]
   15744:	str	r1, [sp, #8]
   15748:	str	r2, [sp, #4]
   1574c:	ldr	r0, [fp, #-4]
   15750:	ldr	r1, [sp, #8]
   15754:	ldr	r3, [sp, #4]
   15758:	movw	r2, #0
   1575c:	bl	15768 <__assert_fail@plt+0x46b0>
   15760:	mov	sp, fp
   15764:	pop	{fp, pc}
   15768:	push	{r4, r5, r6, sl, fp, lr}
   1576c:	add	fp, sp, #16
   15770:	sub	sp, sp, #80	; 0x50
   15774:	str	r0, [fp, #-20]	; 0xffffffec
   15778:	str	r1, [fp, #-24]	; 0xffffffe8
   1577c:	str	r2, [fp, #-28]	; 0xffffffe4
   15780:	str	r3, [fp, #-32]	; 0xffffffe0
   15784:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15788:	movw	r1, #0
   1578c:	cmp	r0, r1
   15790:	beq	157a0 <__assert_fail@plt+0x46e8>
   15794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15798:	str	r0, [sp, #40]	; 0x28
   1579c:	b	157b0 <__assert_fail@plt+0x46f8>
   157a0:	movw	r0, #29340	; 0x729c
   157a4:	movt	r0, #3
   157a8:	str	r0, [sp, #40]	; 0x28
   157ac:	b	157b0 <__assert_fail@plt+0x46f8>
   157b0:	ldr	r0, [sp, #40]	; 0x28
   157b4:	str	r0, [fp, #-36]	; 0xffffffdc
   157b8:	bl	10fec <__errno_location@plt>
   157bc:	ldr	r0, [r0]
   157c0:	str	r0, [fp, #-40]	; 0xffffffd8
   157c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   157c8:	ldr	r0, [r0, #4]
   157cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157d0:	movw	r2, #0
   157d4:	cmp	r1, r2
   157d8:	movw	r1, #0
   157dc:	movne	r1, #1
   157e0:	tst	r1, #1
   157e4:	mov	r1, r2
   157e8:	moveq	r1, #1
   157ec:	orr	r0, r0, r1
   157f0:	str	r0, [fp, #-44]	; 0xffffffd4
   157f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   157f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   157fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15800:	ldr	r1, [r1]
   15804:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15808:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1580c:	add	lr, lr, #8
   15810:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15814:	ldr	r4, [r4, #40]	; 0x28
   15818:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1581c:	ldr	r5, [r5, #44]	; 0x2c
   15820:	str	r0, [sp, #36]	; 0x24
   15824:	mov	r0, r2
   15828:	str	r1, [sp, #32]
   1582c:	mov	r1, r2
   15830:	ldr	r2, [sp, #36]	; 0x24
   15834:	ldr	r6, [sp, #32]
   15838:	str	r6, [sp]
   1583c:	str	ip, [sp, #4]
   15840:	str	lr, [sp, #8]
   15844:	str	r4, [sp, #12]
   15848:	str	r5, [sp, #16]
   1584c:	bl	14000 <__assert_fail@plt+0x2f48>
   15850:	add	r0, r0, #1
   15854:	str	r0, [sp, #48]	; 0x30
   15858:	ldr	r0, [sp, #48]	; 0x30
   1585c:	bl	16c4c <__assert_fail@plt+0x5b94>
   15860:	str	r0, [sp, #44]	; 0x2c
   15864:	ldr	r0, [sp, #44]	; 0x2c
   15868:	ldr	r1, [sp, #48]	; 0x30
   1586c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15874:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15878:	ldr	ip, [ip]
   1587c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15880:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15884:	add	r4, r4, #8
   15888:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1588c:	ldr	r5, [r5, #40]	; 0x28
   15890:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15894:	ldr	r6, [r6, #44]	; 0x2c
   15898:	str	ip, [sp]
   1589c:	str	lr, [sp, #4]
   158a0:	str	r4, [sp, #8]
   158a4:	str	r5, [sp, #12]
   158a8:	str	r6, [sp, #16]
   158ac:	bl	14000 <__assert_fail@plt+0x2f48>
   158b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   158b4:	str	r0, [sp, #28]
   158b8:	str	r1, [sp, #24]
   158bc:	bl	10fec <__errno_location@plt>
   158c0:	ldr	r1, [sp, #24]
   158c4:	str	r1, [r0]
   158c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   158cc:	movw	r2, #0
   158d0:	cmp	r0, r2
   158d4:	beq	158e8 <__assert_fail@plt+0x4830>
   158d8:	ldr	r0, [sp, #48]	; 0x30
   158dc:	sub	r0, r0, #1
   158e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158e4:	str	r0, [r1]
   158e8:	ldr	r0, [sp, #44]	; 0x2c
   158ec:	sub	sp, fp, #16
   158f0:	pop	{r4, r5, r6, sl, fp, pc}
   158f4:	push	{fp, lr}
   158f8:	mov	fp, sp
   158fc:	sub	sp, sp, #8
   15900:	movw	r0, #61684	; 0xf0f4
   15904:	movt	r0, #2
   15908:	ldr	r0, [r0]
   1590c:	str	r0, [sp, #4]
   15910:	movw	r0, #1
   15914:	str	r0, [sp]
   15918:	ldr	r0, [sp]
   1591c:	movw	r1, #61688	; 0xf0f8
   15920:	movt	r1, #2
   15924:	ldr	r1, [r1]
   15928:	cmp	r0, r1
   1592c:	bge	15954 <__assert_fail@plt+0x489c>
   15930:	ldr	r0, [sp, #4]
   15934:	ldr	r1, [sp]
   15938:	add	r0, r0, r1, lsl #3
   1593c:	ldr	r0, [r0, #4]
   15940:	bl	1be74 <__assert_fail@plt+0xadbc>
   15944:	ldr	r0, [sp]
   15948:	add	r0, r0, #1
   1594c:	str	r0, [sp]
   15950:	b	15918 <__assert_fail@plt+0x4860>
   15954:	ldr	r0, [sp, #4]
   15958:	ldr	r0, [r0, #4]
   1595c:	movw	r1, #29388	; 0x72cc
   15960:	movt	r1, #3
   15964:	cmp	r0, r1
   15968:	beq	15994 <__assert_fail@plt+0x48dc>
   1596c:	ldr	r0, [sp, #4]
   15970:	ldr	r0, [r0, #4]
   15974:	bl	1be74 <__assert_fail@plt+0xadbc>
   15978:	movw	r0, #256	; 0x100
   1597c:	movw	r1, #61692	; 0xf0fc
   15980:	movt	r1, #2
   15984:	str	r0, [r1]
   15988:	movw	r0, #29388	; 0x72cc
   1598c:	movt	r0, #3
   15990:	str	r0, [r1, #4]
   15994:	ldr	r0, [sp, #4]
   15998:	movw	r1, #61692	; 0xf0fc
   1599c:	movt	r1, #2
   159a0:	cmp	r0, r1
   159a4:	beq	159c4 <__assert_fail@plt+0x490c>
   159a8:	ldr	r0, [sp, #4]
   159ac:	bl	1be74 <__assert_fail@plt+0xadbc>
   159b0:	movw	r0, #61684	; 0xf0f4
   159b4:	movt	r0, #2
   159b8:	movw	r1, #61692	; 0xf0fc
   159bc:	movt	r1, #2
   159c0:	str	r1, [r0]
   159c4:	movw	r0, #61688	; 0xf0f8
   159c8:	movt	r0, #2
   159cc:	movw	r1, #1
   159d0:	str	r1, [r0]
   159d4:	mov	sp, fp
   159d8:	pop	{fp, pc}
   159dc:	push	{fp, lr}
   159e0:	mov	fp, sp
   159e4:	sub	sp, sp, #8
   159e8:	str	r0, [sp, #4]
   159ec:	str	r1, [sp]
   159f0:	ldr	r0, [sp, #4]
   159f4:	ldr	r1, [sp]
   159f8:	mvn	r2, #0
   159fc:	movw	r3, #29340	; 0x729c
   15a00:	movt	r3, #3
   15a04:	bl	15a10 <__assert_fail@plt+0x4958>
   15a08:	mov	sp, fp
   15a0c:	pop	{fp, pc}
   15a10:	push	{r4, r5, r6, sl, fp, lr}
   15a14:	add	fp, sp, #16
   15a18:	sub	sp, sp, #80	; 0x50
   15a1c:	str	r0, [fp, #-20]	; 0xffffffec
   15a20:	str	r1, [fp, #-24]	; 0xffffffe8
   15a24:	str	r2, [fp, #-28]	; 0xffffffe4
   15a28:	str	r3, [fp, #-32]	; 0xffffffe0
   15a2c:	bl	10fec <__errno_location@plt>
   15a30:	ldr	r1, [pc, #672]	; 15cd8 <__assert_fail@plt+0x4c20>
   15a34:	ldr	r0, [r0]
   15a38:	str	r0, [fp, #-36]	; 0xffffffdc
   15a3c:	movw	r0, #61684	; 0xf0f4
   15a40:	movt	r0, #2
   15a44:	ldr	r0, [r0]
   15a48:	str	r0, [fp, #-40]	; 0xffffffd8
   15a4c:	str	r1, [fp, #-44]	; 0xffffffd4
   15a50:	ldr	r0, [fp, #-20]	; 0xffffffec
   15a54:	movw	r1, #0
   15a58:	cmp	r1, r0
   15a5c:	bgt	15a70 <__assert_fail@plt+0x49b8>
   15a60:	ldr	r0, [fp, #-20]	; 0xffffffec
   15a64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a68:	cmp	r0, r1
   15a6c:	blt	15a74 <__assert_fail@plt+0x49bc>
   15a70:	bl	110a0 <abort@plt>
   15a74:	movw	r0, #61688	; 0xf0f8
   15a78:	movt	r0, #2
   15a7c:	ldr	r0, [r0]
   15a80:	ldr	r1, [fp, #-20]	; 0xffffffec
   15a84:	cmp	r0, r1
   15a88:	bgt	15b80 <__assert_fail@plt+0x4ac8>
   15a8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a90:	movw	r1, #61692	; 0xf0fc
   15a94:	movt	r1, #2
   15a98:	cmp	r0, r1
   15a9c:	movw	r0, #0
   15aa0:	moveq	r0, #1
   15aa4:	and	r0, r0, #1
   15aa8:	strb	r0, [fp, #-45]	; 0xffffffd3
   15aac:	movw	r0, #61688	; 0xf0f8
   15ab0:	movt	r0, #2
   15ab4:	ldr	r0, [r0]
   15ab8:	str	r0, [sp, #44]	; 0x2c
   15abc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15ac0:	tst	r0, #1
   15ac4:	beq	15ad4 <__assert_fail@plt+0x4a1c>
   15ac8:	movw	r0, #0
   15acc:	str	r0, [sp, #24]
   15ad0:	b	15adc <__assert_fail@plt+0x4a24>
   15ad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ad8:	str	r0, [sp, #24]
   15adc:	ldr	r0, [sp, #24]
   15ae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ae4:	movw	r2, #61688	; 0xf0f8
   15ae8:	movt	r2, #2
   15aec:	ldr	r2, [r2]
   15af0:	sub	r1, r1, r2
   15af4:	add	r2, r1, #1
   15af8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15afc:	add	r1, sp, #44	; 0x2c
   15b00:	movw	ip, #8
   15b04:	str	ip, [sp]
   15b08:	bl	16e88 <__assert_fail@plt+0x5dd0>
   15b0c:	str	r0, [fp, #-40]	; 0xffffffd8
   15b10:	movw	r1, #61684	; 0xf0f4
   15b14:	movt	r1, #2
   15b18:	str	r0, [r1]
   15b1c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15b20:	tst	r0, #1
   15b24:	beq	15b44 <__assert_fail@plt+0x4a8c>
   15b28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b2c:	movw	r1, #61692	; 0xf0fc
   15b30:	movt	r1, #2
   15b34:	ldr	r2, [r1]
   15b38:	str	r2, [r0]
   15b3c:	ldr	r1, [r1, #4]
   15b40:	str	r1, [r0, #4]
   15b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b48:	movw	r1, #61688	; 0xf0f8
   15b4c:	movt	r1, #2
   15b50:	ldr	r1, [r1]
   15b54:	add	r0, r0, r1, lsl #3
   15b58:	ldr	r2, [sp, #44]	; 0x2c
   15b5c:	sub	r1, r2, r1
   15b60:	lsl	r2, r1, #3
   15b64:	movw	r1, #0
   15b68:	and	r1, r1, #255	; 0xff
   15b6c:	bl	11004 <memset@plt>
   15b70:	ldr	r0, [sp, #44]	; 0x2c
   15b74:	movw	r1, #61688	; 0xf0f8
   15b78:	movt	r1, #2
   15b7c:	str	r0, [r1]
   15b80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b84:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b88:	ldr	r0, [r0, r1, lsl #3]
   15b8c:	str	r0, [sp, #40]	; 0x28
   15b90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b94:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b98:	add	r0, r0, r1, lsl #3
   15b9c:	ldr	r0, [r0, #4]
   15ba0:	str	r0, [sp, #36]	; 0x24
   15ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ba8:	ldr	r0, [r0, #4]
   15bac:	orr	r0, r0, #1
   15bb0:	str	r0, [sp, #32]
   15bb4:	ldr	r0, [sp, #36]	; 0x24
   15bb8:	ldr	r1, [sp, #40]	; 0x28
   15bbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15bc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bc4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15bc8:	ldr	ip, [ip]
   15bcc:	ldr	lr, [sp, #32]
   15bd0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15bd4:	add	r4, r4, #8
   15bd8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15bdc:	ldr	r5, [r5, #40]	; 0x28
   15be0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15be4:	ldr	r6, [r6, #44]	; 0x2c
   15be8:	str	ip, [sp]
   15bec:	str	lr, [sp, #4]
   15bf0:	str	r4, [sp, #8]
   15bf4:	str	r5, [sp, #12]
   15bf8:	str	r6, [sp, #16]
   15bfc:	bl	14000 <__assert_fail@plt+0x2f48>
   15c00:	str	r0, [sp, #28]
   15c04:	ldr	r0, [sp, #40]	; 0x28
   15c08:	ldr	r1, [sp, #28]
   15c0c:	cmp	r0, r1
   15c10:	bhi	15cb8 <__assert_fail@plt+0x4c00>
   15c14:	ldr	r0, [sp, #28]
   15c18:	add	r0, r0, #1
   15c1c:	str	r0, [sp, #40]	; 0x28
   15c20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15c24:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c28:	add	r1, r1, r2, lsl #3
   15c2c:	str	r0, [r1]
   15c30:	ldr	r0, [sp, #36]	; 0x24
   15c34:	movw	r1, #29388	; 0x72cc
   15c38:	movt	r1, #3
   15c3c:	cmp	r0, r1
   15c40:	beq	15c4c <__assert_fail@plt+0x4b94>
   15c44:	ldr	r0, [sp, #36]	; 0x24
   15c48:	bl	1be74 <__assert_fail@plt+0xadbc>
   15c4c:	ldr	r0, [sp, #40]	; 0x28
   15c50:	bl	16c4c <__assert_fail@plt+0x5b94>
   15c54:	mov	r1, r0
   15c58:	str	r0, [sp, #36]	; 0x24
   15c5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c64:	add	r0, r0, r2, lsl #3
   15c68:	str	r1, [r0, #4]
   15c6c:	ldr	r0, [sp, #36]	; 0x24
   15c70:	ldr	r1, [sp, #40]	; 0x28
   15c74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c7c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15c80:	ldr	ip, [ip]
   15c84:	ldr	lr, [sp, #32]
   15c88:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15c8c:	add	r4, r4, #8
   15c90:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15c94:	ldr	r5, [r5, #40]	; 0x28
   15c98:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15c9c:	ldr	r6, [r6, #44]	; 0x2c
   15ca0:	str	ip, [sp]
   15ca4:	str	lr, [sp, #4]
   15ca8:	str	r4, [sp, #8]
   15cac:	str	r5, [sp, #12]
   15cb0:	str	r6, [sp, #16]
   15cb4:	bl	14000 <__assert_fail@plt+0x2f48>
   15cb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15cbc:	str	r0, [sp, #20]
   15cc0:	bl	10fec <__errno_location@plt>
   15cc4:	ldr	r1, [sp, #20]
   15cc8:	str	r1, [r0]
   15ccc:	ldr	r0, [sp, #36]	; 0x24
   15cd0:	sub	sp, fp, #16
   15cd4:	pop	{r4, r5, r6, sl, fp, pc}
   15cd8:	svcvc	0x00ffffff
   15cdc:	push	{fp, lr}
   15ce0:	mov	fp, sp
   15ce4:	sub	sp, sp, #16
   15ce8:	str	r0, [fp, #-4]
   15cec:	str	r1, [sp, #8]
   15cf0:	str	r2, [sp, #4]
   15cf4:	ldr	r0, [fp, #-4]
   15cf8:	ldr	r1, [sp, #8]
   15cfc:	ldr	r2, [sp, #4]
   15d00:	movw	r3, #29340	; 0x729c
   15d04:	movt	r3, #3
   15d08:	bl	15a10 <__assert_fail@plt+0x4958>
   15d0c:	mov	sp, fp
   15d10:	pop	{fp, pc}
   15d14:	push	{fp, lr}
   15d18:	mov	fp, sp
   15d1c:	sub	sp, sp, #8
   15d20:	str	r0, [sp, #4]
   15d24:	ldr	r1, [sp, #4]
   15d28:	movw	r0, #0
   15d2c:	bl	159dc <__assert_fail@plt+0x4924>
   15d30:	mov	sp, fp
   15d34:	pop	{fp, pc}
   15d38:	push	{fp, lr}
   15d3c:	mov	fp, sp
   15d40:	sub	sp, sp, #8
   15d44:	str	r0, [sp, #4]
   15d48:	str	r1, [sp]
   15d4c:	ldr	r1, [sp, #4]
   15d50:	ldr	r2, [sp]
   15d54:	movw	r0, #0
   15d58:	bl	15cdc <__assert_fail@plt+0x4c24>
   15d5c:	mov	sp, fp
   15d60:	pop	{fp, pc}
   15d64:	push	{fp, lr}
   15d68:	mov	fp, sp
   15d6c:	sub	sp, sp, #64	; 0x40
   15d70:	str	r0, [fp, #-4]
   15d74:	str	r1, [fp, #-8]
   15d78:	str	r2, [fp, #-12]
   15d7c:	ldr	r1, [fp, #-8]
   15d80:	add	r0, sp, #4
   15d84:	bl	15da4 <__assert_fail@plt+0x4cec>
   15d88:	ldr	r0, [fp, #-4]
   15d8c:	ldr	r1, [fp, #-12]
   15d90:	mvn	r2, #0
   15d94:	add	r3, sp, #4
   15d98:	bl	15a10 <__assert_fail@plt+0x4958>
   15d9c:	mov	sp, fp
   15da0:	pop	{fp, pc}
   15da4:	push	{fp, lr}
   15da8:	mov	fp, sp
   15dac:	sub	sp, sp, #8
   15db0:	str	r1, [sp, #4]
   15db4:	mov	r1, r0
   15db8:	str	r0, [sp]
   15dbc:	mov	r0, r1
   15dc0:	movw	r1, #0
   15dc4:	and	r1, r1, #255	; 0xff
   15dc8:	movw	r2, #48	; 0x30
   15dcc:	bl	11004 <memset@plt>
   15dd0:	ldr	r0, [sp, #4]
   15dd4:	cmp	r0, #10
   15dd8:	bne	15de0 <__assert_fail@plt+0x4d28>
   15ddc:	bl	110a0 <abort@plt>
   15de0:	ldr	r0, [sp, #4]
   15de4:	ldr	r1, [sp]
   15de8:	str	r0, [r1]
   15dec:	mov	sp, fp
   15df0:	pop	{fp, pc}
   15df4:	push	{fp, lr}
   15df8:	mov	fp, sp
   15dfc:	sub	sp, sp, #64	; 0x40
   15e00:	str	r0, [fp, #-4]
   15e04:	str	r1, [fp, #-8]
   15e08:	str	r2, [fp, #-12]
   15e0c:	str	r3, [fp, #-16]
   15e10:	ldr	r1, [fp, #-8]
   15e14:	mov	r0, sp
   15e18:	bl	15da4 <__assert_fail@plt+0x4cec>
   15e1c:	ldr	r0, [fp, #-4]
   15e20:	ldr	r1, [fp, #-12]
   15e24:	ldr	r2, [fp, #-16]
   15e28:	mov	r3, sp
   15e2c:	bl	15a10 <__assert_fail@plt+0x4958>
   15e30:	mov	sp, fp
   15e34:	pop	{fp, pc}
   15e38:	push	{fp, lr}
   15e3c:	mov	fp, sp
   15e40:	sub	sp, sp, #8
   15e44:	str	r0, [sp, #4]
   15e48:	str	r1, [sp]
   15e4c:	ldr	r1, [sp, #4]
   15e50:	ldr	r2, [sp]
   15e54:	movw	r0, #0
   15e58:	bl	15d64 <__assert_fail@plt+0x4cac>
   15e5c:	mov	sp, fp
   15e60:	pop	{fp, pc}
   15e64:	push	{fp, lr}
   15e68:	mov	fp, sp
   15e6c:	sub	sp, sp, #16
   15e70:	str	r0, [fp, #-4]
   15e74:	str	r1, [sp, #8]
   15e78:	str	r2, [sp, #4]
   15e7c:	ldr	r1, [fp, #-4]
   15e80:	ldr	r2, [sp, #8]
   15e84:	ldr	r3, [sp, #4]
   15e88:	movw	r0, #0
   15e8c:	bl	15df4 <__assert_fail@plt+0x4d3c>
   15e90:	mov	sp, fp
   15e94:	pop	{fp, pc}
   15e98:	push	{fp, lr}
   15e9c:	mov	fp, sp
   15ea0:	sub	sp, sp, #72	; 0x48
   15ea4:	movw	r3, #29340	; 0x729c
   15ea8:	movt	r3, #3
   15eac:	str	r0, [fp, #-4]
   15eb0:	str	r1, [fp, #-8]
   15eb4:	strb	r2, [fp, #-9]
   15eb8:	add	r0, sp, #12
   15ebc:	mov	r1, r0
   15ec0:	str	r0, [sp, #8]
   15ec4:	mov	r0, r1
   15ec8:	mov	r1, r3
   15ecc:	movw	r2, #48	; 0x30
   15ed0:	bl	10ec0 <memcpy@plt>
   15ed4:	ldr	r0, [sp, #8]
   15ed8:	ldrb	r1, [fp, #-9]
   15edc:	movw	r2, #1
   15ee0:	bl	13da8 <__assert_fail@plt+0x2cf0>
   15ee4:	ldr	r1, [fp, #-4]
   15ee8:	ldr	r2, [fp, #-8]
   15eec:	movw	r3, #0
   15ef0:	str	r0, [sp, #4]
   15ef4:	mov	r0, r3
   15ef8:	add	r3, sp, #12
   15efc:	bl	15a10 <__assert_fail@plt+0x4958>
   15f00:	mov	sp, fp
   15f04:	pop	{fp, pc}
   15f08:	push	{fp, lr}
   15f0c:	mov	fp, sp
   15f10:	sub	sp, sp, #8
   15f14:	str	r0, [sp, #4]
   15f18:	strb	r1, [sp, #3]
   15f1c:	ldr	r0, [sp, #4]
   15f20:	mvn	r1, #0
   15f24:	ldrb	r2, [sp, #3]
   15f28:	bl	15e98 <__assert_fail@plt+0x4de0>
   15f2c:	mov	sp, fp
   15f30:	pop	{fp, pc}
   15f34:	push	{fp, lr}
   15f38:	mov	fp, sp
   15f3c:	sub	sp, sp, #8
   15f40:	str	r0, [sp, #4]
   15f44:	ldr	r0, [sp, #4]
   15f48:	movw	r1, #58	; 0x3a
   15f4c:	and	r1, r1, #255	; 0xff
   15f50:	bl	15f08 <__assert_fail@plt+0x4e50>
   15f54:	mov	sp, fp
   15f58:	pop	{fp, pc}
   15f5c:	push	{fp, lr}
   15f60:	mov	fp, sp
   15f64:	sub	sp, sp, #8
   15f68:	str	r0, [sp, #4]
   15f6c:	str	r1, [sp]
   15f70:	ldr	r0, [sp, #4]
   15f74:	ldr	r1, [sp]
   15f78:	movw	r2, #58	; 0x3a
   15f7c:	and	r2, r2, #255	; 0xff
   15f80:	bl	15e98 <__assert_fail@plt+0x4de0>
   15f84:	mov	sp, fp
   15f88:	pop	{fp, pc}
   15f8c:	push	{fp, lr}
   15f90:	mov	fp, sp
   15f94:	sub	sp, sp, #120	; 0x78
   15f98:	str	r0, [fp, #-4]
   15f9c:	str	r1, [fp, #-8]
   15fa0:	str	r2, [fp, #-12]
   15fa4:	ldr	r1, [fp, #-8]
   15fa8:	add	r0, sp, #12
   15fac:	bl	15da4 <__assert_fail@plt+0x4cec>
   15fb0:	add	r0, sp, #60	; 0x3c
   15fb4:	mov	r1, r0
   15fb8:	add	r2, sp, #12
   15fbc:	str	r0, [sp, #8]
   15fc0:	mov	r0, r1
   15fc4:	mov	r1, r2
   15fc8:	movw	r2, #48	; 0x30
   15fcc:	bl	10ec0 <memcpy@plt>
   15fd0:	ldr	r0, [sp, #8]
   15fd4:	movw	r1, #58	; 0x3a
   15fd8:	and	r1, r1, #255	; 0xff
   15fdc:	movw	r2, #1
   15fe0:	bl	13da8 <__assert_fail@plt+0x2cf0>
   15fe4:	ldr	r1, [fp, #-4]
   15fe8:	ldr	r2, [fp, #-12]
   15fec:	str	r0, [sp, #4]
   15ff0:	mov	r0, r1
   15ff4:	mov	r1, r2
   15ff8:	mvn	r2, #0
   15ffc:	add	r3, sp, #60	; 0x3c
   16000:	bl	15a10 <__assert_fail@plt+0x4958>
   16004:	mov	sp, fp
   16008:	pop	{fp, pc}
   1600c:	push	{fp, lr}
   16010:	mov	fp, sp
   16014:	sub	sp, sp, #24
   16018:	str	r0, [fp, #-4]
   1601c:	str	r1, [fp, #-8]
   16020:	str	r2, [sp, #12]
   16024:	str	r3, [sp, #8]
   16028:	ldr	r0, [fp, #-4]
   1602c:	ldr	r1, [fp, #-8]
   16030:	ldr	r2, [sp, #12]
   16034:	ldr	r3, [sp, #8]
   16038:	mvn	ip, #0
   1603c:	str	ip, [sp]
   16040:	bl	1604c <__assert_fail@plt+0x4f94>
   16044:	mov	sp, fp
   16048:	pop	{fp, pc}
   1604c:	push	{fp, lr}
   16050:	mov	fp, sp
   16054:	sub	sp, sp, #72	; 0x48
   16058:	ldr	ip, [fp, #8]
   1605c:	movw	lr, #29340	; 0x729c
   16060:	movt	lr, #3
   16064:	str	r0, [fp, #-4]
   16068:	str	r1, [fp, #-8]
   1606c:	str	r2, [fp, #-12]
   16070:	str	r3, [fp, #-16]
   16074:	add	r0, sp, #8
   16078:	mov	r1, r0
   1607c:	str	r0, [sp, #4]
   16080:	mov	r0, r1
   16084:	mov	r1, lr
   16088:	movw	r2, #48	; 0x30
   1608c:	str	ip, [sp]
   16090:	bl	10ec0 <memcpy@plt>
   16094:	ldr	r1, [fp, #-8]
   16098:	ldr	r2, [fp, #-12]
   1609c:	ldr	r0, [sp, #4]
   160a0:	bl	13ea8 <__assert_fail@plt+0x2df0>
   160a4:	ldr	r0, [fp, #-4]
   160a8:	ldr	r1, [fp, #-16]
   160ac:	ldr	r2, [fp, #8]
   160b0:	add	r3, sp, #8
   160b4:	bl	15a10 <__assert_fail@plt+0x4958>
   160b8:	mov	sp, fp
   160bc:	pop	{fp, pc}
   160c0:	push	{fp, lr}
   160c4:	mov	fp, sp
   160c8:	sub	sp, sp, #16
   160cc:	str	r0, [fp, #-4]
   160d0:	str	r1, [sp, #8]
   160d4:	str	r2, [sp, #4]
   160d8:	ldr	r1, [fp, #-4]
   160dc:	ldr	r2, [sp, #8]
   160e0:	ldr	r3, [sp, #4]
   160e4:	movw	r0, #0
   160e8:	bl	1600c <__assert_fail@plt+0x4f54>
   160ec:	mov	sp, fp
   160f0:	pop	{fp, pc}
   160f4:	push	{fp, lr}
   160f8:	mov	fp, sp
   160fc:	sub	sp, sp, #24
   16100:	str	r0, [fp, #-4]
   16104:	str	r1, [fp, #-8]
   16108:	str	r2, [sp, #12]
   1610c:	str	r3, [sp, #8]
   16110:	ldr	r1, [fp, #-4]
   16114:	ldr	r2, [fp, #-8]
   16118:	ldr	r3, [sp, #12]
   1611c:	ldr	r0, [sp, #8]
   16120:	movw	ip, #0
   16124:	str	r0, [sp, #4]
   16128:	mov	r0, ip
   1612c:	ldr	ip, [sp, #4]
   16130:	str	ip, [sp]
   16134:	bl	1604c <__assert_fail@plt+0x4f94>
   16138:	mov	sp, fp
   1613c:	pop	{fp, pc}
   16140:	push	{fp, lr}
   16144:	mov	fp, sp
   16148:	sub	sp, sp, #16
   1614c:	str	r0, [fp, #-4]
   16150:	str	r1, [sp, #8]
   16154:	str	r2, [sp, #4]
   16158:	ldr	r0, [fp, #-4]
   1615c:	ldr	r1, [sp, #8]
   16160:	ldr	r2, [sp, #4]
   16164:	movw	r3, #61700	; 0xf104
   16168:	movt	r3, #2
   1616c:	bl	15a10 <__assert_fail@plt+0x4958>
   16170:	mov	sp, fp
   16174:	pop	{fp, pc}
   16178:	push	{fp, lr}
   1617c:	mov	fp, sp
   16180:	sub	sp, sp, #8
   16184:	str	r0, [sp, #4]
   16188:	str	r1, [sp]
   1618c:	ldr	r1, [sp, #4]
   16190:	ldr	r2, [sp]
   16194:	movw	r0, #0
   16198:	bl	16140 <__assert_fail@plt+0x5088>
   1619c:	mov	sp, fp
   161a0:	pop	{fp, pc}
   161a4:	push	{fp, lr}
   161a8:	mov	fp, sp
   161ac:	sub	sp, sp, #8
   161b0:	str	r0, [sp, #4]
   161b4:	str	r1, [sp]
   161b8:	ldr	r0, [sp, #4]
   161bc:	ldr	r1, [sp]
   161c0:	mvn	r2, #0
   161c4:	bl	16140 <__assert_fail@plt+0x5088>
   161c8:	mov	sp, fp
   161cc:	pop	{fp, pc}
   161d0:	push	{fp, lr}
   161d4:	mov	fp, sp
   161d8:	sub	sp, sp, #8
   161dc:	str	r0, [sp, #4]
   161e0:	ldr	r1, [sp, #4]
   161e4:	movw	r0, #0
   161e8:	bl	161a4 <__assert_fail@plt+0x50ec>
   161ec:	mov	sp, fp
   161f0:	pop	{fp, pc}
   161f4:	push	{fp, lr}
   161f8:	mov	fp, sp
   161fc:	sub	sp, sp, #24
   16200:	str	r0, [fp, #-8]
   16204:	str	r1, [sp, #12]
   16208:	ldr	r0, [fp, #-8]
   1620c:	bl	10fbc <gettext@plt>
   16210:	str	r0, [sp, #8]
   16214:	ldr	r0, [sp, #8]
   16218:	ldr	r1, [fp, #-8]
   1621c:	cmp	r0, r1
   16220:	beq	16230 <__assert_fail@plt+0x5178>
   16224:	ldr	r0, [sp, #8]
   16228:	str	r0, [fp, #-4]
   1622c:	b	162fc <__assert_fail@plt+0x5244>
   16230:	bl	1c088 <__assert_fail@plt+0xafd0>
   16234:	str	r0, [sp, #4]
   16238:	ldr	r0, [sp, #4]
   1623c:	movw	r1, #59422	; 0xe81e
   16240:	movt	r1, #1
   16244:	bl	1bcec <__assert_fail@plt+0xac34>
   16248:	cmp	r0, #0
   1624c:	bne	16284 <__assert_fail@plt+0x51cc>
   16250:	ldr	r0, [fp, #-8]
   16254:	ldrb	r0, [r0]
   16258:	cmp	r0, #96	; 0x60
   1625c:	movw	r0, #0
   16260:	moveq	r0, #1
   16264:	tst	r0, #1
   16268:	movw	r0, #59432	; 0xe828
   1626c:	movt	r0, #1
   16270:	movw	r1, #59428	; 0xe824
   16274:	movt	r1, #1
   16278:	movne	r0, r1
   1627c:	str	r0, [fp, #-4]
   16280:	b	162fc <__assert_fail@plt+0x5244>
   16284:	ldr	r0, [sp, #4]
   16288:	movw	r1, #59436	; 0xe82c
   1628c:	movt	r1, #1
   16290:	bl	1bcec <__assert_fail@plt+0xac34>
   16294:	cmp	r0, #0
   16298:	bne	162d0 <__assert_fail@plt+0x5218>
   1629c:	ldr	r0, [fp, #-8]
   162a0:	ldrb	r0, [r0]
   162a4:	cmp	r0, #96	; 0x60
   162a8:	movw	r0, #0
   162ac:	moveq	r0, #1
   162b0:	tst	r0, #1
   162b4:	movw	r0, #59448	; 0xe838
   162b8:	movt	r0, #1
   162bc:	movw	r1, #59444	; 0xe834
   162c0:	movt	r1, #1
   162c4:	movne	r0, r1
   162c8:	str	r0, [fp, #-4]
   162cc:	b	162fc <__assert_fail@plt+0x5244>
   162d0:	ldr	r0, [sp, #12]
   162d4:	cmp	r0, #9
   162d8:	movw	r0, #0
   162dc:	moveq	r0, #1
   162e0:	tst	r0, #1
   162e4:	movw	r0, #59420	; 0xe81c
   162e8:	movt	r0, #1
   162ec:	movw	r1, #59016	; 0xe688
   162f0:	movt	r1, #1
   162f4:	movne	r0, r1
   162f8:	str	r0, [fp, #-4]
   162fc:	ldr	r0, [fp, #-4]
   16300:	mov	sp, fp
   16304:	pop	{fp, pc}
   16308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1630c:	add	fp, sp, #28
   16310:	sub	sp, sp, #196	; 0xc4
   16314:	ldr	ip, [fp, #12]
   16318:	ldr	lr, [fp, #8]
   1631c:	str	r0, [fp, #-32]	; 0xffffffe0
   16320:	str	r1, [fp, #-36]	; 0xffffffdc
   16324:	str	r2, [fp, #-40]	; 0xffffffd8
   16328:	str	r3, [fp, #-44]	; 0xffffffd4
   1632c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16330:	movw	r1, #0
   16334:	cmp	r0, r1
   16338:	beq	1636c <__assert_fail@plt+0x52b4>
   1633c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16340:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16344:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16348:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1634c:	movw	ip, #59536	; 0xe890
   16350:	movt	ip, #1
   16354:	str	r1, [fp, #-48]	; 0xffffffd0
   16358:	mov	r1, ip
   1635c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16360:	str	ip, [sp]
   16364:	bl	10fe0 <fprintf@plt>
   16368:	b	16384 <__assert_fail@plt+0x52cc>
   1636c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16370:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16374:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16378:	movw	r1, #59548	; 0xe89c
   1637c:	movt	r1, #1
   16380:	bl	10fe0 <fprintf@plt>
   16384:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16388:	movw	r1, #59555	; 0xe8a3
   1638c:	movt	r1, #1
   16390:	str	r0, [fp, #-52]	; 0xffffffcc
   16394:	mov	r0, r1
   16398:	bl	10fbc <gettext@plt>
   1639c:	movw	r1, #60273	; 0xeb71
   163a0:	movt	r1, #1
   163a4:	movw	r3, #2022	; 0x7e6
   163a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   163ac:	str	r0, [fp, #-56]	; 0xffffffc8
   163b0:	mov	r0, r2
   163b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   163b8:	bl	10fe0 <fprintf@plt>
   163bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   163c0:	movw	r2, #58856	; 0xe5e8
   163c4:	movt	r2, #1
   163c8:	str	r0, [fp, #-60]	; 0xffffffc4
   163cc:	mov	r0, r2
   163d0:	str	r2, [fp, #-64]	; 0xffffffc0
   163d4:	bl	10e54 <fputs_unlocked@plt>
   163d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   163dc:	movw	r2, #59559	; 0xe8a7
   163e0:	movt	r2, #1
   163e4:	str	r0, [fp, #-68]	; 0xffffffbc
   163e8:	mov	r0, r2
   163ec:	str	r1, [fp, #-72]	; 0xffffffb8
   163f0:	bl	10fbc <gettext@plt>
   163f4:	movw	r2, #59730	; 0xe952
   163f8:	movt	r2, #1
   163fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16400:	str	r0, [fp, #-76]	; 0xffffffb4
   16404:	mov	r0, r1
   16408:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1640c:	bl	10fe0 <fprintf@plt>
   16410:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16414:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16418:	str	r0, [fp, #-80]	; 0xffffffb0
   1641c:	mov	r0, r2
   16420:	bl	10e54 <fputs_unlocked@plt>
   16424:	ldr	r1, [fp, #12]
   16428:	cmp	r1, #9
   1642c:	str	r1, [fp, #-84]	; 0xffffffac
   16430:	bhi	1684c <__assert_fail@plt+0x5794>
   16434:	add	r0, pc, #8
   16438:	ldr	r1, [fp, #-84]	; 0xffffffac
   1643c:	ldr	r0, [r0, r1, lsl #2]
   16440:	mov	pc, r0
   16444:	andeq	r6, r1, ip, ror #8
   16448:	andeq	r6, r1, r0, ror r4
   1644c:	andeq	r6, r1, r8, lsr #9
   16450:	andeq	r6, r1, r8, ror #9
   16454:	andeq	r6, r1, r0, asr #10
   16458:	andeq	r6, r1, r4, lsr #11
   1645c:	andeq	r6, r1, r4, lsl r6
   16460:	muleq	r1, r0, r6
   16464:	andeq	r6, r1, r8, lsl r7
   16468:	andeq	r6, r1, ip, lsr #15
   1646c:	b	168e8 <__assert_fail@plt+0x5830>
   16470:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16474:	movw	r1, #59764	; 0xe974
   16478:	movt	r1, #1
   1647c:	str	r0, [fp, #-88]	; 0xffffffa8
   16480:	mov	r0, r1
   16484:	bl	10fbc <gettext@plt>
   16488:	ldr	r1, [fp, #8]
   1648c:	ldr	r2, [r1]
   16490:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16494:	str	r0, [fp, #-92]	; 0xffffffa4
   16498:	mov	r0, r1
   1649c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   164a0:	bl	10fe0 <fprintf@plt>
   164a4:	b	168e8 <__assert_fail@plt+0x5830>
   164a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   164ac:	movw	r1, #59780	; 0xe984
   164b0:	movt	r1, #1
   164b4:	str	r0, [fp, #-96]	; 0xffffffa0
   164b8:	mov	r0, r1
   164bc:	bl	10fbc <gettext@plt>
   164c0:	ldr	r1, [fp, #8]
   164c4:	ldr	r2, [r1]
   164c8:	ldr	r1, [fp, #8]
   164cc:	ldr	r3, [r1, #4]
   164d0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   164d4:	str	r0, [fp, #-100]	; 0xffffff9c
   164d8:	mov	r0, r1
   164dc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   164e0:	bl	10fe0 <fprintf@plt>
   164e4:	b	168e8 <__assert_fail@plt+0x5830>
   164e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   164ec:	movw	r1, #59803	; 0xe99b
   164f0:	movt	r1, #1
   164f4:	str	r0, [fp, #-104]	; 0xffffff98
   164f8:	mov	r0, r1
   164fc:	bl	10fbc <gettext@plt>
   16500:	ldr	r1, [fp, #8]
   16504:	ldr	r2, [r1]
   16508:	ldr	r1, [fp, #8]
   1650c:	ldr	r3, [r1, #4]
   16510:	ldr	r1, [fp, #8]
   16514:	ldr	r1, [r1, #8]
   16518:	ldr	ip, [fp, #-104]	; 0xffffff98
   1651c:	str	r0, [fp, #-108]	; 0xffffff94
   16520:	mov	r0, ip
   16524:	ldr	lr, [fp, #-108]	; 0xffffff94
   16528:	str	r1, [sp, #112]	; 0x70
   1652c:	mov	r1, lr
   16530:	ldr	r4, [sp, #112]	; 0x70
   16534:	str	r4, [sp]
   16538:	bl	10fe0 <fprintf@plt>
   1653c:	b	168e8 <__assert_fail@plt+0x5830>
   16540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16544:	movw	r1, #59831	; 0xe9b7
   16548:	movt	r1, #1
   1654c:	str	r0, [sp, #108]	; 0x6c
   16550:	mov	r0, r1
   16554:	bl	10fbc <gettext@plt>
   16558:	ldr	r1, [fp, #8]
   1655c:	ldr	r2, [r1]
   16560:	ldr	r1, [fp, #8]
   16564:	ldr	r3, [r1, #4]
   16568:	ldr	r1, [fp, #8]
   1656c:	ldr	r1, [r1, #8]
   16570:	ldr	ip, [fp, #8]
   16574:	ldr	ip, [ip, #12]
   16578:	ldr	lr, [sp, #108]	; 0x6c
   1657c:	str	r0, [sp, #104]	; 0x68
   16580:	mov	r0, lr
   16584:	ldr	r4, [sp, #104]	; 0x68
   16588:	str	r1, [sp, #100]	; 0x64
   1658c:	mov	r1, r4
   16590:	ldr	r5, [sp, #100]	; 0x64
   16594:	str	r5, [sp]
   16598:	str	ip, [sp, #4]
   1659c:	bl	10fe0 <fprintf@plt>
   165a0:	b	168e8 <__assert_fail@plt+0x5830>
   165a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165a8:	movw	r1, #59863	; 0xe9d7
   165ac:	movt	r1, #1
   165b0:	str	r0, [sp, #96]	; 0x60
   165b4:	mov	r0, r1
   165b8:	bl	10fbc <gettext@plt>
   165bc:	ldr	r1, [fp, #8]
   165c0:	ldr	r2, [r1]
   165c4:	ldr	r1, [fp, #8]
   165c8:	ldr	r3, [r1, #4]
   165cc:	ldr	r1, [fp, #8]
   165d0:	ldr	r1, [r1, #8]
   165d4:	ldr	ip, [fp, #8]
   165d8:	ldr	ip, [ip, #12]
   165dc:	ldr	lr, [fp, #8]
   165e0:	ldr	lr, [lr, #16]
   165e4:	ldr	r4, [sp, #96]	; 0x60
   165e8:	str	r0, [sp, #92]	; 0x5c
   165ec:	mov	r0, r4
   165f0:	ldr	r5, [sp, #92]	; 0x5c
   165f4:	str	r1, [sp, #88]	; 0x58
   165f8:	mov	r1, r5
   165fc:	ldr	r6, [sp, #88]	; 0x58
   16600:	str	r6, [sp]
   16604:	str	ip, [sp, #4]
   16608:	str	lr, [sp, #8]
   1660c:	bl	10fe0 <fprintf@plt>
   16610:	b	168e8 <__assert_fail@plt+0x5830>
   16614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16618:	movw	r1, #59899	; 0xe9fb
   1661c:	movt	r1, #1
   16620:	str	r0, [sp, #84]	; 0x54
   16624:	mov	r0, r1
   16628:	bl	10fbc <gettext@plt>
   1662c:	ldr	r1, [fp, #8]
   16630:	ldr	r2, [r1]
   16634:	ldr	r1, [fp, #8]
   16638:	ldr	r3, [r1, #4]
   1663c:	ldr	r1, [fp, #8]
   16640:	ldr	r1, [r1, #8]
   16644:	ldr	ip, [fp, #8]
   16648:	ldr	ip, [ip, #12]
   1664c:	ldr	lr, [fp, #8]
   16650:	ldr	lr, [lr, #16]
   16654:	ldr	r4, [fp, #8]
   16658:	ldr	r4, [r4, #20]
   1665c:	ldr	r5, [sp, #84]	; 0x54
   16660:	str	r0, [sp, #80]	; 0x50
   16664:	mov	r0, r5
   16668:	ldr	r6, [sp, #80]	; 0x50
   1666c:	str	r1, [sp, #76]	; 0x4c
   16670:	mov	r1, r6
   16674:	ldr	r7, [sp, #76]	; 0x4c
   16678:	str	r7, [sp]
   1667c:	str	ip, [sp, #4]
   16680:	str	lr, [sp, #8]
   16684:	str	r4, [sp, #12]
   16688:	bl	10fe0 <fprintf@plt>
   1668c:	b	168e8 <__assert_fail@plt+0x5830>
   16690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16694:	movw	r1, #59939	; 0xea23
   16698:	movt	r1, #1
   1669c:	str	r0, [sp, #72]	; 0x48
   166a0:	mov	r0, r1
   166a4:	bl	10fbc <gettext@plt>
   166a8:	ldr	r1, [fp, #8]
   166ac:	ldr	r2, [r1]
   166b0:	ldr	r1, [fp, #8]
   166b4:	ldr	r3, [r1, #4]
   166b8:	ldr	r1, [fp, #8]
   166bc:	ldr	r1, [r1, #8]
   166c0:	ldr	ip, [fp, #8]
   166c4:	ldr	ip, [ip, #12]
   166c8:	ldr	lr, [fp, #8]
   166cc:	ldr	lr, [lr, #16]
   166d0:	ldr	r4, [fp, #8]
   166d4:	ldr	r4, [r4, #20]
   166d8:	ldr	r5, [fp, #8]
   166dc:	ldr	r5, [r5, #24]
   166e0:	ldr	r6, [sp, #72]	; 0x48
   166e4:	str	r0, [sp, #68]	; 0x44
   166e8:	mov	r0, r6
   166ec:	ldr	r7, [sp, #68]	; 0x44
   166f0:	str	r1, [sp, #64]	; 0x40
   166f4:	mov	r1, r7
   166f8:	ldr	r8, [sp, #64]	; 0x40
   166fc:	str	r8, [sp]
   16700:	str	ip, [sp, #4]
   16704:	str	lr, [sp, #8]
   16708:	str	r4, [sp, #12]
   1670c:	str	r5, [sp, #16]
   16710:	bl	10fe0 <fprintf@plt>
   16714:	b	168e8 <__assert_fail@plt+0x5830>
   16718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1671c:	movw	r1, #59983	; 0xea4f
   16720:	movt	r1, #1
   16724:	str	r0, [sp, #60]	; 0x3c
   16728:	mov	r0, r1
   1672c:	bl	10fbc <gettext@plt>
   16730:	ldr	r1, [fp, #8]
   16734:	ldr	r2, [r1]
   16738:	ldr	r1, [fp, #8]
   1673c:	ldr	r3, [r1, #4]
   16740:	ldr	r1, [fp, #8]
   16744:	ldr	r1, [r1, #8]
   16748:	ldr	ip, [fp, #8]
   1674c:	ldr	ip, [ip, #12]
   16750:	ldr	lr, [fp, #8]
   16754:	ldr	lr, [lr, #16]
   16758:	ldr	r4, [fp, #8]
   1675c:	ldr	r4, [r4, #20]
   16760:	ldr	r5, [fp, #8]
   16764:	ldr	r5, [r5, #24]
   16768:	ldr	r6, [fp, #8]
   1676c:	ldr	r6, [r6, #28]
   16770:	ldr	r7, [sp, #60]	; 0x3c
   16774:	str	r0, [sp, #56]	; 0x38
   16778:	mov	r0, r7
   1677c:	ldr	r8, [sp, #56]	; 0x38
   16780:	str	r1, [sp, #52]	; 0x34
   16784:	mov	r1, r8
   16788:	ldr	r9, [sp, #52]	; 0x34
   1678c:	str	r9, [sp]
   16790:	str	ip, [sp, #4]
   16794:	str	lr, [sp, #8]
   16798:	str	r4, [sp, #12]
   1679c:	str	r5, [sp, #16]
   167a0:	str	r6, [sp, #20]
   167a4:	bl	10fe0 <fprintf@plt>
   167a8:	b	168e8 <__assert_fail@plt+0x5830>
   167ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167b0:	movw	r1, #60031	; 0xea7f
   167b4:	movt	r1, #1
   167b8:	str	r0, [sp, #48]	; 0x30
   167bc:	mov	r0, r1
   167c0:	bl	10fbc <gettext@plt>
   167c4:	ldr	r1, [fp, #8]
   167c8:	ldr	r2, [r1]
   167cc:	ldr	r1, [fp, #8]
   167d0:	ldr	r3, [r1, #4]
   167d4:	ldr	r1, [fp, #8]
   167d8:	ldr	r1, [r1, #8]
   167dc:	ldr	ip, [fp, #8]
   167e0:	ldr	ip, [ip, #12]
   167e4:	ldr	lr, [fp, #8]
   167e8:	ldr	lr, [lr, #16]
   167ec:	ldr	r4, [fp, #8]
   167f0:	ldr	r4, [r4, #20]
   167f4:	ldr	r5, [fp, #8]
   167f8:	ldr	r5, [r5, #24]
   167fc:	ldr	r6, [fp, #8]
   16800:	ldr	r6, [r6, #28]
   16804:	ldr	r7, [fp, #8]
   16808:	ldr	r7, [r7, #32]
   1680c:	ldr	r8, [sp, #48]	; 0x30
   16810:	str	r0, [sp, #44]	; 0x2c
   16814:	mov	r0, r8
   16818:	ldr	r9, [sp, #44]	; 0x2c
   1681c:	str	r1, [sp, #40]	; 0x28
   16820:	mov	r1, r9
   16824:	ldr	sl, [sp, #40]	; 0x28
   16828:	str	sl, [sp]
   1682c:	str	ip, [sp, #4]
   16830:	str	lr, [sp, #8]
   16834:	str	r4, [sp, #12]
   16838:	str	r5, [sp, #16]
   1683c:	str	r6, [sp, #20]
   16840:	str	r7, [sp, #24]
   16844:	bl	10fe0 <fprintf@plt>
   16848:	b	168e8 <__assert_fail@plt+0x5830>
   1684c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16850:	movw	r1, #60083	; 0xeab3
   16854:	movt	r1, #1
   16858:	str	r0, [sp, #36]	; 0x24
   1685c:	mov	r0, r1
   16860:	bl	10fbc <gettext@plt>
   16864:	ldr	r1, [fp, #8]
   16868:	ldr	r2, [r1]
   1686c:	ldr	r1, [fp, #8]
   16870:	ldr	r3, [r1, #4]
   16874:	ldr	r1, [fp, #8]
   16878:	ldr	r1, [r1, #8]
   1687c:	ldr	ip, [fp, #8]
   16880:	ldr	ip, [ip, #12]
   16884:	ldr	lr, [fp, #8]
   16888:	ldr	lr, [lr, #16]
   1688c:	ldr	r4, [fp, #8]
   16890:	ldr	r4, [r4, #20]
   16894:	ldr	r5, [fp, #8]
   16898:	ldr	r5, [r5, #24]
   1689c:	ldr	r6, [fp, #8]
   168a0:	ldr	r6, [r6, #28]
   168a4:	ldr	r7, [fp, #8]
   168a8:	ldr	r7, [r7, #32]
   168ac:	ldr	r8, [sp, #36]	; 0x24
   168b0:	str	r0, [sp, #32]
   168b4:	mov	r0, r8
   168b8:	ldr	r9, [sp, #32]
   168bc:	str	r1, [sp, #28]
   168c0:	mov	r1, r9
   168c4:	ldr	sl, [sp, #28]
   168c8:	str	sl, [sp]
   168cc:	str	ip, [sp, #4]
   168d0:	str	lr, [sp, #8]
   168d4:	str	r4, [sp, #12]
   168d8:	str	r5, [sp, #16]
   168dc:	str	r6, [sp, #20]
   168e0:	str	r7, [sp, #24]
   168e4:	bl	10fe0 <fprintf@plt>
   168e8:	sub	sp, fp, #28
   168ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168f0:	push	{fp, lr}
   168f4:	mov	fp, sp
   168f8:	sub	sp, sp, #32
   168fc:	ldr	ip, [fp, #8]
   16900:	str	r0, [fp, #-4]
   16904:	str	r1, [fp, #-8]
   16908:	str	r2, [fp, #-12]
   1690c:	str	r3, [sp, #16]
   16910:	movw	r0, #0
   16914:	str	r0, [sp, #12]
   16918:	ldr	r0, [fp, #8]
   1691c:	ldr	r1, [sp, #12]
   16920:	add	r0, r0, r1, lsl #2
   16924:	ldr	r0, [r0]
   16928:	movw	r1, #0
   1692c:	cmp	r0, r1
   16930:	beq	16948 <__assert_fail@plt+0x5890>
   16934:	b	16938 <__assert_fail@plt+0x5880>
   16938:	ldr	r0, [sp, #12]
   1693c:	add	r0, r0, #1
   16940:	str	r0, [sp, #12]
   16944:	b	16918 <__assert_fail@plt+0x5860>
   16948:	ldr	r0, [fp, #-4]
   1694c:	ldr	r1, [fp, #-8]
   16950:	ldr	r2, [fp, #-12]
   16954:	ldr	r3, [sp, #16]
   16958:	ldr	ip, [fp, #8]
   1695c:	ldr	lr, [sp, #12]
   16960:	str	ip, [sp]
   16964:	str	lr, [sp, #4]
   16968:	bl	16308 <__assert_fail@plt+0x5250>
   1696c:	mov	sp, fp
   16970:	pop	{fp, pc}
   16974:	push	{fp, lr}
   16978:	mov	fp, sp
   1697c:	sub	sp, sp, #80	; 0x50
   16980:	ldr	ip, [fp, #8]
   16984:	str	ip, [fp, #-4]
   16988:	str	r0, [fp, #-8]
   1698c:	str	r1, [fp, #-12]
   16990:	str	r2, [fp, #-16]
   16994:	str	r3, [fp, #-20]	; 0xffffffec
   16998:	movw	r0, #0
   1699c:	str	r0, [fp, #-24]	; 0xffffffe8
   169a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169a4:	cmp	r0, #10
   169a8:	movw	r0, #0
   169ac:	str	r0, [sp, #12]
   169b0:	bcs	169e8 <__assert_fail@plt+0x5930>
   169b4:	ldr	r0, [fp, #-4]
   169b8:	add	r1, r0, #4
   169bc:	str	r1, [fp, #-4]
   169c0:	ldr	r0, [r0]
   169c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169c8:	add	r2, sp, #16
   169cc:	add	r1, r2, r1, lsl #2
   169d0:	str	r0, [r1]
   169d4:	movw	r1, #0
   169d8:	cmp	r0, r1
   169dc:	movw	r0, #0
   169e0:	movne	r0, #1
   169e4:	str	r0, [sp, #12]
   169e8:	ldr	r0, [sp, #12]
   169ec:	tst	r0, #1
   169f0:	beq	16a08 <__assert_fail@plt+0x5950>
   169f4:	b	169f8 <__assert_fail@plt+0x5940>
   169f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169fc:	add	r0, r0, #1
   16a00:	str	r0, [fp, #-24]	; 0xffffffe8
   16a04:	b	169a0 <__assert_fail@plt+0x58e8>
   16a08:	add	r0, sp, #16
   16a0c:	ldr	r1, [fp, #-8]
   16a10:	ldr	r2, [fp, #-12]
   16a14:	ldr	r3, [fp, #-16]
   16a18:	ldr	ip, [fp, #-20]	; 0xffffffec
   16a1c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16a20:	str	r0, [sp, #8]
   16a24:	mov	r0, r1
   16a28:	mov	r1, r2
   16a2c:	mov	r2, r3
   16a30:	mov	r3, ip
   16a34:	ldr	ip, [sp, #8]
   16a38:	str	ip, [sp]
   16a3c:	str	lr, [sp, #4]
   16a40:	bl	16308 <__assert_fail@plt+0x5250>
   16a44:	mov	sp, fp
   16a48:	pop	{fp, pc}
   16a4c:	push	{fp, lr}
   16a50:	mov	fp, sp
   16a54:	sub	sp, sp, #24
   16a58:	str	r0, [fp, #-4]
   16a5c:	str	r1, [fp, #-8]
   16a60:	str	r2, [sp, #12]
   16a64:	str	r3, [sp, #8]
   16a68:	add	r0, fp, #8
   16a6c:	str	r0, [sp, #4]
   16a70:	ldr	r0, [fp, #-4]
   16a74:	ldr	r1, [fp, #-8]
   16a78:	ldr	r2, [sp, #12]
   16a7c:	ldr	r3, [sp, #8]
   16a80:	ldr	ip, [sp, #4]
   16a84:	mov	lr, sp
   16a88:	str	ip, [lr]
   16a8c:	bl	16974 <__assert_fail@plt+0x58bc>
   16a90:	add	r0, sp, #4
   16a94:	mov	sp, fp
   16a98:	pop	{fp, pc}
   16a9c:	push	{fp, lr}
   16aa0:	mov	fp, sp
   16aa4:	sub	sp, sp, #16
   16aa8:	movw	r0, #61780	; 0xf154
   16aac:	movt	r0, #2
   16ab0:	ldr	r1, [r0]
   16ab4:	movw	r0, #58856	; 0xe5e8
   16ab8:	movt	r0, #1
   16abc:	bl	10e54 <fputs_unlocked@plt>
   16ac0:	movw	r1, #60143	; 0xeaef
   16ac4:	movt	r1, #1
   16ac8:	str	r0, [fp, #-4]
   16acc:	mov	r0, r1
   16ad0:	bl	10fbc <gettext@plt>
   16ad4:	movw	r1, #60163	; 0xeb03
   16ad8:	movt	r1, #1
   16adc:	bl	10e84 <printf@plt>
   16ae0:	movw	r1, #60185	; 0xeb19
   16ae4:	movt	r1, #1
   16ae8:	str	r0, [sp, #8]
   16aec:	mov	r0, r1
   16af0:	bl	10fbc <gettext@plt>
   16af4:	movw	r1, #58324	; 0xe3d4
   16af8:	movt	r1, #1
   16afc:	movw	r2, #58665	; 0xe529
   16b00:	movt	r2, #1
   16b04:	bl	10e84 <printf@plt>
   16b08:	movw	r1, #60205	; 0xeb2d
   16b0c:	movt	r1, #1
   16b10:	str	r0, [sp, #4]
   16b14:	mov	r0, r1
   16b18:	bl	10fbc <gettext@plt>
   16b1c:	movw	r1, #60244	; 0xeb54
   16b20:	movt	r1, #1
   16b24:	bl	10e84 <printf@plt>
   16b28:	mov	sp, fp
   16b2c:	pop	{fp, pc}
   16b30:	push	{fp, lr}
   16b34:	mov	fp, sp
   16b38:	sub	sp, sp, #16
   16b3c:	str	r0, [fp, #-4]
   16b40:	str	r1, [sp, #8]
   16b44:	str	r2, [sp, #4]
   16b48:	ldr	r0, [fp, #-4]
   16b4c:	ldr	r1, [sp, #8]
   16b50:	ldr	r2, [sp, #4]
   16b54:	bl	16b60 <__assert_fail@plt+0x5aa8>
   16b58:	mov	sp, fp
   16b5c:	pop	{fp, pc}
   16b60:	push	{fp, lr}
   16b64:	mov	fp, sp
   16b68:	sub	sp, sp, #16
   16b6c:	str	r0, [fp, #-4]
   16b70:	str	r1, [sp, #8]
   16b74:	str	r2, [sp, #4]
   16b78:	ldr	r0, [fp, #-4]
   16b7c:	ldr	r1, [sp, #8]
   16b80:	ldr	r2, [sp, #4]
   16b84:	bl	1c194 <__assert_fail@plt+0xb0dc>
   16b88:	str	r0, [sp]
   16b8c:	ldr	r0, [sp]
   16b90:	movw	r1, #0
   16b94:	cmp	r0, r1
   16b98:	bne	16bc8 <__assert_fail@plt+0x5b10>
   16b9c:	ldr	r0, [fp, #-4]
   16ba0:	movw	r1, #0
   16ba4:	cmp	r0, r1
   16ba8:	beq	16bc4 <__assert_fail@plt+0x5b0c>
   16bac:	ldr	r0, [sp, #8]
   16bb0:	cmp	r0, #0
   16bb4:	beq	16bc8 <__assert_fail@plt+0x5b10>
   16bb8:	ldr	r0, [sp, #4]
   16bbc:	cmp	r0, #0
   16bc0:	beq	16bc8 <__assert_fail@plt+0x5b10>
   16bc4:	bl	1990c <__assert_fail@plt+0x8854>
   16bc8:	ldr	r0, [sp]
   16bcc:	mov	sp, fp
   16bd0:	pop	{fp, pc}
   16bd4:	push	{fp, lr}
   16bd8:	mov	fp, sp
   16bdc:	sub	sp, sp, #8
   16be0:	str	r0, [sp, #4]
   16be4:	ldr	r0, [sp, #4]
   16be8:	bl	1bbd8 <__assert_fail@plt+0xab20>
   16bec:	bl	16bf8 <__assert_fail@plt+0x5b40>
   16bf0:	mov	sp, fp
   16bf4:	pop	{fp, pc}
   16bf8:	push	{fp, lr}
   16bfc:	mov	fp, sp
   16c00:	sub	sp, sp, #8
   16c04:	str	r0, [sp, #4]
   16c08:	ldr	r0, [sp, #4]
   16c0c:	movw	r1, #0
   16c10:	cmp	r0, r1
   16c14:	bne	16c1c <__assert_fail@plt+0x5b64>
   16c18:	bl	1990c <__assert_fail@plt+0x8854>
   16c1c:	ldr	r0, [sp, #4]
   16c20:	mov	sp, fp
   16c24:	pop	{fp, pc}
   16c28:	push	{fp, lr}
   16c2c:	mov	fp, sp
   16c30:	sub	sp, sp, #8
   16c34:	str	r0, [sp, #4]
   16c38:	ldr	r0, [sp, #4]
   16c3c:	bl	1bed0 <__assert_fail@plt+0xae18>
   16c40:	bl	16bf8 <__assert_fail@plt+0x5b40>
   16c44:	mov	sp, fp
   16c48:	pop	{fp, pc}
   16c4c:	push	{fp, lr}
   16c50:	mov	fp, sp
   16c54:	sub	sp, sp, #8
   16c58:	str	r0, [sp, #4]
   16c5c:	ldr	r0, [sp, #4]
   16c60:	bl	16bd4 <__assert_fail@plt+0x5b1c>
   16c64:	mov	sp, fp
   16c68:	pop	{fp, pc}
   16c6c:	push	{fp, lr}
   16c70:	mov	fp, sp
   16c74:	sub	sp, sp, #16
   16c78:	str	r0, [fp, #-4]
   16c7c:	str	r1, [sp, #8]
   16c80:	ldr	r0, [fp, #-4]
   16c84:	ldr	r1, [sp, #8]
   16c88:	bl	1bc48 <__assert_fail@plt+0xab90>
   16c8c:	str	r0, [sp, #4]
   16c90:	ldr	r0, [sp, #4]
   16c94:	movw	r1, #0
   16c98:	cmp	r0, r1
   16c9c:	bne	16cc0 <__assert_fail@plt+0x5c08>
   16ca0:	ldr	r0, [fp, #-4]
   16ca4:	movw	r1, #0
   16ca8:	cmp	r0, r1
   16cac:	beq	16cbc <__assert_fail@plt+0x5c04>
   16cb0:	ldr	r0, [sp, #8]
   16cb4:	cmp	r0, #0
   16cb8:	beq	16cc0 <__assert_fail@plt+0x5c08>
   16cbc:	bl	1990c <__assert_fail@plt+0x8854>
   16cc0:	ldr	r0, [sp, #4]
   16cc4:	mov	sp, fp
   16cc8:	pop	{fp, pc}
   16ccc:	push	{fp, lr}
   16cd0:	mov	fp, sp
   16cd4:	sub	sp, sp, #8
   16cd8:	str	r0, [sp, #4]
   16cdc:	str	r1, [sp]
   16ce0:	ldr	r0, [sp, #4]
   16ce4:	ldr	r1, [sp]
   16ce8:	bl	1bf10 <__assert_fail@plt+0xae58>
   16cec:	bl	16bf8 <__assert_fail@plt+0x5b40>
   16cf0:	mov	sp, fp
   16cf4:	pop	{fp, pc}
   16cf8:	push	{fp, lr}
   16cfc:	mov	fp, sp
   16d00:	sub	sp, sp, #16
   16d04:	str	r0, [fp, #-4]
   16d08:	str	r1, [sp, #8]
   16d0c:	str	r2, [sp, #4]
   16d10:	ldr	r0, [fp, #-4]
   16d14:	ldr	r1, [sp, #8]
   16d18:	ldr	r2, [sp, #4]
   16d1c:	bl	1c008 <__assert_fail@plt+0xaf50>
   16d20:	bl	16bf8 <__assert_fail@plt+0x5b40>
   16d24:	mov	sp, fp
   16d28:	pop	{fp, pc}
   16d2c:	push	{fp, lr}
   16d30:	mov	fp, sp
   16d34:	sub	sp, sp, #8
   16d38:	str	r0, [sp, #4]
   16d3c:	str	r1, [sp]
   16d40:	ldr	r1, [sp, #4]
   16d44:	ldr	r2, [sp]
   16d48:	movw	r0, #0
   16d4c:	bl	16b60 <__assert_fail@plt+0x5aa8>
   16d50:	mov	sp, fp
   16d54:	pop	{fp, pc}
   16d58:	push	{fp, lr}
   16d5c:	mov	fp, sp
   16d60:	sub	sp, sp, #8
   16d64:	str	r0, [sp, #4]
   16d68:	str	r1, [sp]
   16d6c:	ldr	r1, [sp, #4]
   16d70:	ldr	r2, [sp]
   16d74:	movw	r0, #0
   16d78:	bl	16cf8 <__assert_fail@plt+0x5c40>
   16d7c:	mov	sp, fp
   16d80:	pop	{fp, pc}
   16d84:	push	{fp, lr}
   16d88:	mov	fp, sp
   16d8c:	sub	sp, sp, #8
   16d90:	str	r0, [sp, #4]
   16d94:	str	r1, [sp]
   16d98:	ldr	r0, [sp, #4]
   16d9c:	ldr	r1, [sp]
   16da0:	movw	r2, #1
   16da4:	bl	16db0 <__assert_fail@plt+0x5cf8>
   16da8:	mov	sp, fp
   16dac:	pop	{fp, pc}
   16db0:	push	{fp, lr}
   16db4:	mov	fp, sp
   16db8:	sub	sp, sp, #16
   16dbc:	str	r0, [fp, #-4]
   16dc0:	str	r1, [sp, #8]
   16dc4:	str	r2, [sp, #4]
   16dc8:	ldr	r0, [sp, #8]
   16dcc:	ldr	r0, [r0]
   16dd0:	str	r0, [sp]
   16dd4:	ldr	r0, [fp, #-4]
   16dd8:	movw	r1, #0
   16ddc:	cmp	r0, r1
   16de0:	bne	16e2c <__assert_fail@plt+0x5d74>
   16de4:	ldr	r0, [sp]
   16de8:	cmp	r0, #0
   16dec:	bne	16e28 <__assert_fail@plt+0x5d70>
   16df0:	ldr	r0, [sp, #4]
   16df4:	movw	r1, #64	; 0x40
   16df8:	udiv	r0, r1, r0
   16dfc:	str	r0, [sp]
   16e00:	ldr	r0, [sp]
   16e04:	cmp	r0, #0
   16e08:	movw	r0, #0
   16e0c:	movne	r0, #1
   16e10:	mvn	r1, #0
   16e14:	eor	r0, r0, r1
   16e18:	and	r0, r0, #1
   16e1c:	ldr	r1, [sp]
   16e20:	add	r0, r1, r0
   16e24:	str	r0, [sp]
   16e28:	b	16e5c <__assert_fail@plt+0x5da4>
   16e2c:	ldr	r0, [sp]
   16e30:	ldr	r1, [sp]
   16e34:	lsr	r1, r1, #1
   16e38:	add	r1, r1, #1
   16e3c:	adds	r0, r0, r1
   16e40:	mov	r1, #0
   16e44:	adc	r1, r1, #0
   16e48:	str	r0, [sp]
   16e4c:	tst	r1, #1
   16e50:	beq	16e58 <__assert_fail@plt+0x5da0>
   16e54:	bl	1990c <__assert_fail@plt+0x8854>
   16e58:	b	16e5c <__assert_fail@plt+0x5da4>
   16e5c:	ldr	r0, [fp, #-4]
   16e60:	ldr	r1, [sp]
   16e64:	ldr	r2, [sp, #4]
   16e68:	bl	16b60 <__assert_fail@plt+0x5aa8>
   16e6c:	str	r0, [fp, #-4]
   16e70:	ldr	r0, [sp]
   16e74:	ldr	r1, [sp, #8]
   16e78:	str	r0, [r1]
   16e7c:	ldr	r0, [fp, #-4]
   16e80:	mov	sp, fp
   16e84:	pop	{fp, pc}
   16e88:	push	{fp, lr}
   16e8c:	mov	fp, sp
   16e90:	sub	sp, sp, #216	; 0xd8
   16e94:	ldr	ip, [fp, #8]
   16e98:	str	r0, [fp, #-4]
   16e9c:	str	r1, [fp, #-8]
   16ea0:	str	r2, [fp, #-12]
   16ea4:	str	r3, [fp, #-16]
   16ea8:	ldr	r0, [fp, #-8]
   16eac:	ldr	r0, [r0]
   16eb0:	str	r0, [fp, #-20]	; 0xffffffec
   16eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ebc:	asr	r1, r1, #1
   16ec0:	add	r1, r0, r1
   16ec4:	mov	r2, #1
   16ec8:	cmp	r1, r0
   16ecc:	movwvc	r2, #0
   16ed0:	str	r1, [fp, #-24]	; 0xffffffe8
   16ed4:	tst	r2, #1
   16ed8:	beq	16ee4 <__assert_fail@plt+0x5e2c>
   16edc:	ldr	r0, [pc, #4036]	; 17ea8 <__assert_fail@plt+0x6df0>
   16ee0:	str	r0, [fp, #-24]	; 0xffffffe8
   16ee4:	ldr	r0, [fp, #-16]
   16ee8:	movw	r1, #0
   16eec:	cmp	r1, r0
   16ef0:	bgt	16f0c <__assert_fail@plt+0x5e54>
   16ef4:	ldr	r0, [fp, #-16]
   16ef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16efc:	cmp	r0, r1
   16f00:	bge	16f0c <__assert_fail@plt+0x5e54>
   16f04:	ldr	r0, [fp, #-16]
   16f08:	str	r0, [fp, #-24]	; 0xffffffe8
   16f0c:	b	172e4 <__assert_fail@plt+0x622c>
   16f10:	b	16f14 <__assert_fail@plt+0x5e5c>
   16f14:	ldr	r0, [fp, #8]
   16f18:	cmp	r0, #0
   16f1c:	bge	17030 <__assert_fail@plt+0x5f78>
   16f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f24:	cmp	r0, #0
   16f28:	bge	16fb4 <__assert_fail@plt+0x5efc>
   16f2c:	b	16f30 <__assert_fail@plt+0x5e78>
   16f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f34:	ldr	r1, [fp, #8]
   16f38:	movw	r2, #127	; 0x7f
   16f3c:	sdiv	r1, r2, r1
   16f40:	cmp	r0, r1
   16f44:	blt	170d0 <__assert_fail@plt+0x6018>
   16f48:	b	170e8 <__assert_fail@plt+0x6030>
   16f4c:	b	16f50 <__assert_fail@plt+0x5e98>
   16f50:	ldr	r0, [pc, #4084]	; 17f4c <__assert_fail@plt+0x6e94>
   16f54:	ldr	r1, [fp, #8]
   16f58:	cmp	r1, r0
   16f5c:	blt	16f74 <__assert_fail@plt+0x5ebc>
   16f60:	b	16f80 <__assert_fail@plt+0x5ec8>
   16f64:	ldr	r0, [fp, #8]
   16f68:	movw	r1, #0
   16f6c:	cmp	r1, r0
   16f70:	bge	16f80 <__assert_fail@plt+0x5ec8>
   16f74:	movw	r0, #0
   16f78:	str	r0, [fp, #-36]	; 0xffffffdc
   16f7c:	b	16f98 <__assert_fail@plt+0x5ee0>
   16f80:	ldr	r0, [fp, #8]
   16f84:	movw	r1, #0
   16f88:	sub	r0, r1, r0
   16f8c:	movw	r1, #127	; 0x7f
   16f90:	sdiv	r0, r1, r0
   16f94:	str	r0, [fp, #-36]	; 0xffffffdc
   16f98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16f9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fa0:	mvn	r2, #0
   16fa4:	sub	r1, r2, r1
   16fa8:	cmp	r0, r1
   16fac:	ble	170d0 <__assert_fail@plt+0x6018>
   16fb0:	b	170e8 <__assert_fail@plt+0x6030>
   16fb4:	b	16fb8 <__assert_fail@plt+0x5f00>
   16fb8:	b	17014 <__assert_fail@plt+0x5f5c>
   16fbc:	b	17014 <__assert_fail@plt+0x5f5c>
   16fc0:	ldr	r0, [fp, #8]
   16fc4:	cmn	r0, #1
   16fc8:	bne	17014 <__assert_fail@plt+0x5f5c>
   16fcc:	b	16fd0 <__assert_fail@plt+0x5f18>
   16fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fd4:	mvn	r1, #127	; 0x7f
   16fd8:	add	r0, r0, r1
   16fdc:	movw	r1, #0
   16fe0:	cmp	r1, r0
   16fe4:	blt	170d0 <__assert_fail@plt+0x6018>
   16fe8:	b	170e8 <__assert_fail@plt+0x6030>
   16fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff0:	movw	r1, #0
   16ff4:	cmp	r1, r0
   16ff8:	bge	170e8 <__assert_fail@plt+0x6030>
   16ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17000:	sub	r0, r0, #1
   17004:	movw	r1, #127	; 0x7f
   17008:	cmp	r1, r0
   1700c:	blt	170d0 <__assert_fail@plt+0x6018>
   17010:	b	170e8 <__assert_fail@plt+0x6030>
   17014:	ldr	r0, [fp, #8]
   17018:	mvn	r1, #127	; 0x7f
   1701c:	sdiv	r0, r1, r0
   17020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17024:	cmp	r0, r1
   17028:	blt	170d0 <__assert_fail@plt+0x6018>
   1702c:	b	170e8 <__assert_fail@plt+0x6030>
   17030:	ldr	r0, [fp, #8]
   17034:	cmp	r0, #0
   17038:	bne	17040 <__assert_fail@plt+0x5f88>
   1703c:	b	170e8 <__assert_fail@plt+0x6030>
   17040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17044:	cmp	r0, #0
   17048:	bge	170b8 <__assert_fail@plt+0x6000>
   1704c:	b	17050 <__assert_fail@plt+0x5f98>
   17050:	b	1709c <__assert_fail@plt+0x5fe4>
   17054:	b	1709c <__assert_fail@plt+0x5fe4>
   17058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1705c:	cmn	r0, #1
   17060:	bne	1709c <__assert_fail@plt+0x5fe4>
   17064:	b	17068 <__assert_fail@plt+0x5fb0>
   17068:	ldr	r0, [fp, #8]
   1706c:	mvn	r1, #127	; 0x7f
   17070:	add	r0, r0, r1
   17074:	movw	r1, #0
   17078:	cmp	r1, r0
   1707c:	blt	170d0 <__assert_fail@plt+0x6018>
   17080:	b	170e8 <__assert_fail@plt+0x6030>
   17084:	ldr	r0, [fp, #8]
   17088:	sub	r0, r0, #1
   1708c:	movw	r1, #127	; 0x7f
   17090:	cmp	r1, r0
   17094:	blt	170d0 <__assert_fail@plt+0x6018>
   17098:	b	170e8 <__assert_fail@plt+0x6030>
   1709c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170a0:	mvn	r1, #127	; 0x7f
   170a4:	sdiv	r0, r1, r0
   170a8:	ldr	r1, [fp, #8]
   170ac:	cmp	r0, r1
   170b0:	blt	170d0 <__assert_fail@plt+0x6018>
   170b4:	b	170e8 <__assert_fail@plt+0x6030>
   170b8:	ldr	r0, [fp, #8]
   170bc:	movw	r1, #127	; 0x7f
   170c0:	sdiv	r0, r1, r0
   170c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170c8:	cmp	r0, r1
   170cc:	bge	170e8 <__assert_fail@plt+0x6030>
   170d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d4:	ldr	r1, [fp, #8]
   170d8:	mul	r0, r0, r1
   170dc:	sxtb	r0, r0
   170e0:	str	r0, [fp, #-28]	; 0xffffffe4
   170e4:	b	182ac <__assert_fail@plt+0x71f4>
   170e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ec:	ldr	r1, [fp, #8]
   170f0:	mul	r0, r0, r1
   170f4:	sxtb	r0, r0
   170f8:	str	r0, [fp, #-28]	; 0xffffffe4
   170fc:	b	182b8 <__assert_fail@plt+0x7200>
   17100:	ldr	r0, [fp, #8]
   17104:	cmp	r0, #0
   17108:	bge	17218 <__assert_fail@plt+0x6160>
   1710c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17110:	cmp	r0, #0
   17114:	bge	171a0 <__assert_fail@plt+0x60e8>
   17118:	b	1711c <__assert_fail@plt+0x6064>
   1711c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17120:	ldr	r1, [fp, #8]
   17124:	movw	r2, #255	; 0xff
   17128:	sdiv	r1, r2, r1
   1712c:	cmp	r0, r1
   17130:	blt	172b4 <__assert_fail@plt+0x61fc>
   17134:	b	172cc <__assert_fail@plt+0x6214>
   17138:	b	1713c <__assert_fail@plt+0x6084>
   1713c:	ldr	r0, [pc, #3592]	; 17f4c <__assert_fail@plt+0x6e94>
   17140:	ldr	r1, [fp, #8]
   17144:	cmp	r1, r0
   17148:	blt	17160 <__assert_fail@plt+0x60a8>
   1714c:	b	1716c <__assert_fail@plt+0x60b4>
   17150:	ldr	r0, [fp, #8]
   17154:	movw	r1, #0
   17158:	cmp	r1, r0
   1715c:	bge	1716c <__assert_fail@plt+0x60b4>
   17160:	movw	r0, #0
   17164:	str	r0, [fp, #-40]	; 0xffffffd8
   17168:	b	17184 <__assert_fail@plt+0x60cc>
   1716c:	ldr	r0, [fp, #8]
   17170:	movw	r1, #0
   17174:	sub	r0, r1, r0
   17178:	movw	r1, #255	; 0xff
   1717c:	sdiv	r0, r1, r0
   17180:	str	r0, [fp, #-40]	; 0xffffffd8
   17184:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1718c:	mvn	r2, #0
   17190:	sub	r1, r2, r1
   17194:	cmp	r0, r1
   17198:	ble	172b4 <__assert_fail@plt+0x61fc>
   1719c:	b	172cc <__assert_fail@plt+0x6214>
   171a0:	b	171a4 <__assert_fail@plt+0x60ec>
   171a4:	b	171fc <__assert_fail@plt+0x6144>
   171a8:	b	171fc <__assert_fail@plt+0x6144>
   171ac:	ldr	r0, [fp, #8]
   171b0:	cmn	r0, #1
   171b4:	bne	171fc <__assert_fail@plt+0x6144>
   171b8:	b	171bc <__assert_fail@plt+0x6104>
   171bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171c0:	add	r0, r0, #0
   171c4:	movw	r1, #0
   171c8:	cmp	r1, r0
   171cc:	blt	172b4 <__assert_fail@plt+0x61fc>
   171d0:	b	172cc <__assert_fail@plt+0x6214>
   171d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171d8:	movw	r1, #0
   171dc:	cmp	r1, r0
   171e0:	bge	172cc <__assert_fail@plt+0x6214>
   171e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e8:	sub	r0, r0, #1
   171ec:	mvn	r1, #0
   171f0:	cmp	r1, r0
   171f4:	blt	172b4 <__assert_fail@plt+0x61fc>
   171f8:	b	172cc <__assert_fail@plt+0x6214>
   171fc:	ldr	r0, [fp, #8]
   17200:	movw	r1, #0
   17204:	sdiv	r0, r1, r0
   17208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1720c:	cmp	r0, r1
   17210:	blt	172b4 <__assert_fail@plt+0x61fc>
   17214:	b	172cc <__assert_fail@plt+0x6214>
   17218:	ldr	r0, [fp, #8]
   1721c:	cmp	r0, #0
   17220:	bne	17228 <__assert_fail@plt+0x6170>
   17224:	b	172cc <__assert_fail@plt+0x6214>
   17228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1722c:	cmp	r0, #0
   17230:	bge	1729c <__assert_fail@plt+0x61e4>
   17234:	b	17238 <__assert_fail@plt+0x6180>
   17238:	b	17280 <__assert_fail@plt+0x61c8>
   1723c:	b	17280 <__assert_fail@plt+0x61c8>
   17240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17244:	cmn	r0, #1
   17248:	bne	17280 <__assert_fail@plt+0x61c8>
   1724c:	b	17250 <__assert_fail@plt+0x6198>
   17250:	ldr	r0, [fp, #8]
   17254:	add	r0, r0, #0
   17258:	movw	r1, #0
   1725c:	cmp	r1, r0
   17260:	blt	172b4 <__assert_fail@plt+0x61fc>
   17264:	b	172cc <__assert_fail@plt+0x6214>
   17268:	ldr	r0, [fp, #8]
   1726c:	sub	r0, r0, #1
   17270:	mvn	r1, #0
   17274:	cmp	r1, r0
   17278:	blt	172b4 <__assert_fail@plt+0x61fc>
   1727c:	b	172cc <__assert_fail@plt+0x6214>
   17280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17284:	movw	r1, #0
   17288:	sdiv	r0, r1, r0
   1728c:	ldr	r1, [fp, #8]
   17290:	cmp	r0, r1
   17294:	blt	172b4 <__assert_fail@plt+0x61fc>
   17298:	b	172cc <__assert_fail@plt+0x6214>
   1729c:	ldr	r0, [fp, #8]
   172a0:	movw	r1, #255	; 0xff
   172a4:	sdiv	r0, r1, r0
   172a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172ac:	cmp	r0, r1
   172b0:	bge	172cc <__assert_fail@plt+0x6214>
   172b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b8:	ldr	r1, [fp, #8]
   172bc:	mul	r0, r0, r1
   172c0:	and	r0, r0, #255	; 0xff
   172c4:	str	r0, [fp, #-28]	; 0xffffffe4
   172c8:	b	182ac <__assert_fail@plt+0x71f4>
   172cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d0:	ldr	r1, [fp, #8]
   172d4:	mul	r0, r0, r1
   172d8:	and	r0, r0, #255	; 0xff
   172dc:	str	r0, [fp, #-28]	; 0xffffffe4
   172e0:	b	182b8 <__assert_fail@plt+0x7200>
   172e4:	b	176bc <__assert_fail@plt+0x6604>
   172e8:	b	172ec <__assert_fail@plt+0x6234>
   172ec:	ldr	r0, [fp, #8]
   172f0:	cmp	r0, #0
   172f4:	bge	17408 <__assert_fail@plt+0x6350>
   172f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172fc:	cmp	r0, #0
   17300:	bge	1738c <__assert_fail@plt+0x62d4>
   17304:	b	17308 <__assert_fail@plt+0x6250>
   17308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1730c:	ldr	r1, [fp, #8]
   17310:	movw	r2, #32767	; 0x7fff
   17314:	sdiv	r1, r2, r1
   17318:	cmp	r0, r1
   1731c:	blt	174a8 <__assert_fail@plt+0x63f0>
   17320:	b	174c0 <__assert_fail@plt+0x6408>
   17324:	b	17328 <__assert_fail@plt+0x6270>
   17328:	ldr	r0, [pc, #3100]	; 17f4c <__assert_fail@plt+0x6e94>
   1732c:	ldr	r1, [fp, #8]
   17330:	cmp	r1, r0
   17334:	blt	1734c <__assert_fail@plt+0x6294>
   17338:	b	17358 <__assert_fail@plt+0x62a0>
   1733c:	ldr	r0, [fp, #8]
   17340:	movw	r1, #0
   17344:	cmp	r1, r0
   17348:	bge	17358 <__assert_fail@plt+0x62a0>
   1734c:	movw	r0, #0
   17350:	str	r0, [fp, #-44]	; 0xffffffd4
   17354:	b	17370 <__assert_fail@plt+0x62b8>
   17358:	ldr	r0, [fp, #8]
   1735c:	movw	r1, #0
   17360:	sub	r0, r1, r0
   17364:	movw	r1, #32767	; 0x7fff
   17368:	sdiv	r0, r1, r0
   1736c:	str	r0, [fp, #-44]	; 0xffffffd4
   17370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17378:	mvn	r2, #0
   1737c:	sub	r1, r2, r1
   17380:	cmp	r0, r1
   17384:	ble	174a8 <__assert_fail@plt+0x63f0>
   17388:	b	174c0 <__assert_fail@plt+0x6408>
   1738c:	b	17390 <__assert_fail@plt+0x62d8>
   17390:	b	173ec <__assert_fail@plt+0x6334>
   17394:	b	173ec <__assert_fail@plt+0x6334>
   17398:	ldr	r0, [fp, #8]
   1739c:	cmn	r0, #1
   173a0:	bne	173ec <__assert_fail@plt+0x6334>
   173a4:	b	173a8 <__assert_fail@plt+0x62f0>
   173a8:	ldr	r0, [pc, #4068]	; 18394 <__assert_fail@plt+0x72dc>
   173ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173b0:	add	r0, r1, r0
   173b4:	movw	r1, #0
   173b8:	cmp	r1, r0
   173bc:	blt	174a8 <__assert_fail@plt+0x63f0>
   173c0:	b	174c0 <__assert_fail@plt+0x6408>
   173c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c8:	movw	r1, #0
   173cc:	cmp	r1, r0
   173d0:	bge	174c0 <__assert_fail@plt+0x6408>
   173d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173d8:	sub	r0, r0, #1
   173dc:	movw	r1, #32767	; 0x7fff
   173e0:	cmp	r1, r0
   173e4:	blt	174a8 <__assert_fail@plt+0x63f0>
   173e8:	b	174c0 <__assert_fail@plt+0x6408>
   173ec:	ldr	r0, [pc, #4000]	; 18394 <__assert_fail@plt+0x72dc>
   173f0:	ldr	r1, [fp, #8]
   173f4:	sdiv	r0, r0, r1
   173f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173fc:	cmp	r0, r1
   17400:	blt	174a8 <__assert_fail@plt+0x63f0>
   17404:	b	174c0 <__assert_fail@plt+0x6408>
   17408:	ldr	r0, [fp, #8]
   1740c:	cmp	r0, #0
   17410:	bne	17418 <__assert_fail@plt+0x6360>
   17414:	b	174c0 <__assert_fail@plt+0x6408>
   17418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1741c:	cmp	r0, #0
   17420:	bge	17490 <__assert_fail@plt+0x63d8>
   17424:	b	17428 <__assert_fail@plt+0x6370>
   17428:	b	17474 <__assert_fail@plt+0x63bc>
   1742c:	b	17474 <__assert_fail@plt+0x63bc>
   17430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17434:	cmn	r0, #1
   17438:	bne	17474 <__assert_fail@plt+0x63bc>
   1743c:	b	17440 <__assert_fail@plt+0x6388>
   17440:	ldr	r0, [pc, #3916]	; 18394 <__assert_fail@plt+0x72dc>
   17444:	ldr	r1, [fp, #8]
   17448:	add	r0, r1, r0
   1744c:	movw	r1, #0
   17450:	cmp	r1, r0
   17454:	blt	174a8 <__assert_fail@plt+0x63f0>
   17458:	b	174c0 <__assert_fail@plt+0x6408>
   1745c:	ldr	r0, [fp, #8]
   17460:	sub	r0, r0, #1
   17464:	movw	r1, #32767	; 0x7fff
   17468:	cmp	r1, r0
   1746c:	blt	174a8 <__assert_fail@plt+0x63f0>
   17470:	b	174c0 <__assert_fail@plt+0x6408>
   17474:	ldr	r0, [pc, #3864]	; 18394 <__assert_fail@plt+0x72dc>
   17478:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1747c:	sdiv	r0, r0, r1
   17480:	ldr	r1, [fp, #8]
   17484:	cmp	r0, r1
   17488:	blt	174a8 <__assert_fail@plt+0x63f0>
   1748c:	b	174c0 <__assert_fail@plt+0x6408>
   17490:	ldr	r0, [fp, #8]
   17494:	movw	r1, #32767	; 0x7fff
   17498:	sdiv	r0, r1, r0
   1749c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174a0:	cmp	r0, r1
   174a4:	bge	174c0 <__assert_fail@plt+0x6408>
   174a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174ac:	ldr	r1, [fp, #8]
   174b0:	mul	r0, r0, r1
   174b4:	sxth	r0, r0
   174b8:	str	r0, [fp, #-28]	; 0xffffffe4
   174bc:	b	182ac <__assert_fail@plt+0x71f4>
   174c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c4:	ldr	r1, [fp, #8]
   174c8:	mul	r0, r0, r1
   174cc:	sxth	r0, r0
   174d0:	str	r0, [fp, #-28]	; 0xffffffe4
   174d4:	b	182b8 <__assert_fail@plt+0x7200>
   174d8:	ldr	r0, [fp, #8]
   174dc:	cmp	r0, #0
   174e0:	bge	175f0 <__assert_fail@plt+0x6538>
   174e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e8:	cmp	r0, #0
   174ec:	bge	17578 <__assert_fail@plt+0x64c0>
   174f0:	b	174f4 <__assert_fail@plt+0x643c>
   174f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f8:	ldr	r1, [fp, #8]
   174fc:	movw	r2, #65535	; 0xffff
   17500:	sdiv	r1, r2, r1
   17504:	cmp	r0, r1
   17508:	blt	1768c <__assert_fail@plt+0x65d4>
   1750c:	b	176a4 <__assert_fail@plt+0x65ec>
   17510:	b	17514 <__assert_fail@plt+0x645c>
   17514:	ldr	r0, [pc, #2608]	; 17f4c <__assert_fail@plt+0x6e94>
   17518:	ldr	r1, [fp, #8]
   1751c:	cmp	r1, r0
   17520:	blt	17538 <__assert_fail@plt+0x6480>
   17524:	b	17544 <__assert_fail@plt+0x648c>
   17528:	ldr	r0, [fp, #8]
   1752c:	movw	r1, #0
   17530:	cmp	r1, r0
   17534:	bge	17544 <__assert_fail@plt+0x648c>
   17538:	movw	r0, #0
   1753c:	str	r0, [fp, #-48]	; 0xffffffd0
   17540:	b	1755c <__assert_fail@plt+0x64a4>
   17544:	ldr	r0, [fp, #8]
   17548:	movw	r1, #0
   1754c:	sub	r0, r1, r0
   17550:	movw	r1, #65535	; 0xffff
   17554:	sdiv	r0, r1, r0
   17558:	str	r0, [fp, #-48]	; 0xffffffd0
   1755c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17560:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17564:	mvn	r2, #0
   17568:	sub	r1, r2, r1
   1756c:	cmp	r0, r1
   17570:	ble	1768c <__assert_fail@plt+0x65d4>
   17574:	b	176a4 <__assert_fail@plt+0x65ec>
   17578:	b	1757c <__assert_fail@plt+0x64c4>
   1757c:	b	175d4 <__assert_fail@plt+0x651c>
   17580:	b	175d4 <__assert_fail@plt+0x651c>
   17584:	ldr	r0, [fp, #8]
   17588:	cmn	r0, #1
   1758c:	bne	175d4 <__assert_fail@plt+0x651c>
   17590:	b	17594 <__assert_fail@plt+0x64dc>
   17594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17598:	add	r0, r0, #0
   1759c:	movw	r1, #0
   175a0:	cmp	r1, r0
   175a4:	blt	1768c <__assert_fail@plt+0x65d4>
   175a8:	b	176a4 <__assert_fail@plt+0x65ec>
   175ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175b0:	movw	r1, #0
   175b4:	cmp	r1, r0
   175b8:	bge	176a4 <__assert_fail@plt+0x65ec>
   175bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c0:	sub	r0, r0, #1
   175c4:	mvn	r1, #0
   175c8:	cmp	r1, r0
   175cc:	blt	1768c <__assert_fail@plt+0x65d4>
   175d0:	b	176a4 <__assert_fail@plt+0x65ec>
   175d4:	ldr	r0, [fp, #8]
   175d8:	movw	r1, #0
   175dc:	sdiv	r0, r1, r0
   175e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175e4:	cmp	r0, r1
   175e8:	blt	1768c <__assert_fail@plt+0x65d4>
   175ec:	b	176a4 <__assert_fail@plt+0x65ec>
   175f0:	ldr	r0, [fp, #8]
   175f4:	cmp	r0, #0
   175f8:	bne	17600 <__assert_fail@plt+0x6548>
   175fc:	b	176a4 <__assert_fail@plt+0x65ec>
   17600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17604:	cmp	r0, #0
   17608:	bge	17674 <__assert_fail@plt+0x65bc>
   1760c:	b	17610 <__assert_fail@plt+0x6558>
   17610:	b	17658 <__assert_fail@plt+0x65a0>
   17614:	b	17658 <__assert_fail@plt+0x65a0>
   17618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1761c:	cmn	r0, #1
   17620:	bne	17658 <__assert_fail@plt+0x65a0>
   17624:	b	17628 <__assert_fail@plt+0x6570>
   17628:	ldr	r0, [fp, #8]
   1762c:	add	r0, r0, #0
   17630:	movw	r1, #0
   17634:	cmp	r1, r0
   17638:	blt	1768c <__assert_fail@plt+0x65d4>
   1763c:	b	176a4 <__assert_fail@plt+0x65ec>
   17640:	ldr	r0, [fp, #8]
   17644:	sub	r0, r0, #1
   17648:	mvn	r1, #0
   1764c:	cmp	r1, r0
   17650:	blt	1768c <__assert_fail@plt+0x65d4>
   17654:	b	176a4 <__assert_fail@plt+0x65ec>
   17658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1765c:	movw	r1, #0
   17660:	sdiv	r0, r1, r0
   17664:	ldr	r1, [fp, #8]
   17668:	cmp	r0, r1
   1766c:	blt	1768c <__assert_fail@plt+0x65d4>
   17670:	b	176a4 <__assert_fail@plt+0x65ec>
   17674:	ldr	r0, [fp, #8]
   17678:	movw	r1, #65535	; 0xffff
   1767c:	sdiv	r0, r1, r0
   17680:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17684:	cmp	r0, r1
   17688:	bge	176a4 <__assert_fail@plt+0x65ec>
   1768c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17690:	ldr	r1, [fp, #8]
   17694:	mul	r0, r0, r1
   17698:	uxth	r0, r0
   1769c:	str	r0, [fp, #-28]	; 0xffffffe4
   176a0:	b	182ac <__assert_fail@plt+0x71f4>
   176a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176a8:	ldr	r1, [fp, #8]
   176ac:	mul	r0, r0, r1
   176b0:	uxth	r0, r0
   176b4:	str	r0, [fp, #-28]	; 0xffffffe4
   176b8:	b	182b8 <__assert_fail@plt+0x7200>
   176bc:	b	176c0 <__assert_fail@plt+0x6608>
   176c0:	b	176c4 <__assert_fail@plt+0x660c>
   176c4:	ldr	r0, [fp, #8]
   176c8:	cmp	r0, #0
   176cc:	bge	177d0 <__assert_fail@plt+0x6718>
   176d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176d4:	cmp	r0, #0
   176d8:	bge	17764 <__assert_fail@plt+0x66ac>
   176dc:	b	176e0 <__assert_fail@plt+0x6628>
   176e0:	ldr	r0, [pc, #1984]	; 17ea8 <__assert_fail@plt+0x6df0>
   176e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176e8:	ldr	r2, [fp, #8]
   176ec:	sdiv	r0, r0, r2
   176f0:	cmp	r1, r0
   176f4:	blt	17860 <__assert_fail@plt+0x67a8>
   176f8:	b	17874 <__assert_fail@plt+0x67bc>
   176fc:	b	17700 <__assert_fail@plt+0x6648>
   17700:	ldr	r0, [pc, #2116]	; 17f4c <__assert_fail@plt+0x6e94>
   17704:	ldr	r1, [fp, #8]
   17708:	cmp	r1, r0
   1770c:	blt	17724 <__assert_fail@plt+0x666c>
   17710:	b	17730 <__assert_fail@plt+0x6678>
   17714:	ldr	r0, [fp, #8]
   17718:	movw	r1, #0
   1771c:	cmp	r1, r0
   17720:	bge	17730 <__assert_fail@plt+0x6678>
   17724:	movw	r0, #0
   17728:	str	r0, [fp, #-52]	; 0xffffffcc
   1772c:	b	17748 <__assert_fail@plt+0x6690>
   17730:	ldr	r0, [pc, #1904]	; 17ea8 <__assert_fail@plt+0x6df0>
   17734:	ldr	r1, [fp, #8]
   17738:	movw	r2, #0
   1773c:	sub	r1, r2, r1
   17740:	sdiv	r0, r0, r1
   17744:	str	r0, [fp, #-52]	; 0xffffffcc
   17748:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1774c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17750:	mvn	r2, #0
   17754:	sub	r1, r2, r1
   17758:	cmp	r0, r1
   1775c:	ble	17860 <__assert_fail@plt+0x67a8>
   17760:	b	17874 <__assert_fail@plt+0x67bc>
   17764:	ldr	r0, [fp, #8]
   17768:	cmn	r0, #1
   1776c:	bne	177b4 <__assert_fail@plt+0x66fc>
   17770:	b	17774 <__assert_fail@plt+0x66bc>
   17774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17778:	add	r0, r0, #-2147483648	; 0x80000000
   1777c:	movw	r1, #0
   17780:	cmp	r1, r0
   17784:	blt	17860 <__assert_fail@plt+0x67a8>
   17788:	b	17874 <__assert_fail@plt+0x67bc>
   1778c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17790:	movw	r1, #0
   17794:	cmp	r1, r0
   17798:	bge	17874 <__assert_fail@plt+0x67bc>
   1779c:	ldr	r0, [pc, #1796]	; 17ea8 <__assert_fail@plt+0x6df0>
   177a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177a4:	sub	r1, r1, #1
   177a8:	cmp	r0, r1
   177ac:	blt	17860 <__assert_fail@plt+0x67a8>
   177b0:	b	17874 <__assert_fail@plt+0x67bc>
   177b4:	ldr	r0, [pc, #4080]	; 187ac <__assert_fail@plt+0x76f4>
   177b8:	ldr	r1, [fp, #8]
   177bc:	sdiv	r0, r0, r1
   177c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177c4:	cmp	r0, r1
   177c8:	blt	17860 <__assert_fail@plt+0x67a8>
   177cc:	b	17874 <__assert_fail@plt+0x67bc>
   177d0:	ldr	r0, [fp, #8]
   177d4:	cmp	r0, #0
   177d8:	bne	177e0 <__assert_fail@plt+0x6728>
   177dc:	b	17874 <__assert_fail@plt+0x67bc>
   177e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177e4:	cmp	r0, #0
   177e8:	bge	17848 <__assert_fail@plt+0x6790>
   177ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177f0:	cmn	r0, #1
   177f4:	bne	1782c <__assert_fail@plt+0x6774>
   177f8:	b	177fc <__assert_fail@plt+0x6744>
   177fc:	ldr	r0, [fp, #8]
   17800:	add	r0, r0, #-2147483648	; 0x80000000
   17804:	movw	r1, #0
   17808:	cmp	r1, r0
   1780c:	blt	17860 <__assert_fail@plt+0x67a8>
   17810:	b	17874 <__assert_fail@plt+0x67bc>
   17814:	ldr	r0, [pc, #1676]	; 17ea8 <__assert_fail@plt+0x6df0>
   17818:	ldr	r1, [fp, #8]
   1781c:	sub	r1, r1, #1
   17820:	cmp	r0, r1
   17824:	blt	17860 <__assert_fail@plt+0x67a8>
   17828:	b	17874 <__assert_fail@plt+0x67bc>
   1782c:	ldr	r0, [pc, #3960]	; 187ac <__assert_fail@plt+0x76f4>
   17830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17834:	sdiv	r0, r0, r1
   17838:	ldr	r1, [fp, #8]
   1783c:	cmp	r0, r1
   17840:	blt	17860 <__assert_fail@plt+0x67a8>
   17844:	b	17874 <__assert_fail@plt+0x67bc>
   17848:	ldr	r0, [pc, #1624]	; 17ea8 <__assert_fail@plt+0x6df0>
   1784c:	ldr	r1, [fp, #8]
   17850:	sdiv	r0, r0, r1
   17854:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17858:	cmp	r0, r1
   1785c:	bge	17874 <__assert_fail@plt+0x67bc>
   17860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17864:	ldr	r1, [fp, #8]
   17868:	mul	r0, r0, r1
   1786c:	str	r0, [fp, #-28]	; 0xffffffe4
   17870:	b	182ac <__assert_fail@plt+0x71f4>
   17874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17878:	ldr	r1, [fp, #8]
   1787c:	mul	r0, r0, r1
   17880:	str	r0, [fp, #-28]	; 0xffffffe4
   17884:	b	182b8 <__assert_fail@plt+0x7200>
   17888:	ldr	r0, [fp, #8]
   1788c:	cmp	r0, #0
   17890:	bge	179a0 <__assert_fail@plt+0x68e8>
   17894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17898:	cmp	r0, #0
   1789c:	bge	17928 <__assert_fail@plt+0x6870>
   178a0:	b	178c0 <__assert_fail@plt+0x6808>
   178a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178a8:	ldr	r1, [fp, #8]
   178ac:	mvn	r2, #0
   178b0:	udiv	r1, r2, r1
   178b4:	cmp	r0, r1
   178b8:	bcc	17a3c <__assert_fail@plt+0x6984>
   178bc:	b	17a50 <__assert_fail@plt+0x6998>
   178c0:	b	178c4 <__assert_fail@plt+0x680c>
   178c4:	ldr	r0, [pc, #1664]	; 17f4c <__assert_fail@plt+0x6e94>
   178c8:	ldr	r1, [fp, #8]
   178cc:	cmp	r1, r0
   178d0:	blt	178e8 <__assert_fail@plt+0x6830>
   178d4:	b	178f4 <__assert_fail@plt+0x683c>
   178d8:	ldr	r0, [fp, #8]
   178dc:	movw	r1, #0
   178e0:	cmp	r1, r0
   178e4:	bge	178f4 <__assert_fail@plt+0x683c>
   178e8:	movw	r0, #1
   178ec:	str	r0, [fp, #-56]	; 0xffffffc8
   178f0:	b	1790c <__assert_fail@plt+0x6854>
   178f4:	ldr	r0, [fp, #8]
   178f8:	movw	r1, #0
   178fc:	sub	r0, r1, r0
   17900:	mvn	r1, #0
   17904:	udiv	r0, r1, r0
   17908:	str	r0, [fp, #-56]	; 0xffffffc8
   1790c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17914:	mvn	r2, #0
   17918:	sub	r1, r2, r1
   1791c:	cmp	r0, r1
   17920:	bls	17a3c <__assert_fail@plt+0x6984>
   17924:	b	17a50 <__assert_fail@plt+0x6998>
   17928:	b	1792c <__assert_fail@plt+0x6874>
   1792c:	b	17984 <__assert_fail@plt+0x68cc>
   17930:	b	17984 <__assert_fail@plt+0x68cc>
   17934:	ldr	r0, [fp, #8]
   17938:	cmn	r0, #1
   1793c:	bne	17984 <__assert_fail@plt+0x68cc>
   17940:	b	17944 <__assert_fail@plt+0x688c>
   17944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17948:	add	r0, r0, #0
   1794c:	movw	r1, #0
   17950:	cmp	r1, r0
   17954:	blt	17a3c <__assert_fail@plt+0x6984>
   17958:	b	17a50 <__assert_fail@plt+0x6998>
   1795c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17960:	movw	r1, #0
   17964:	cmp	r1, r0
   17968:	bge	17a50 <__assert_fail@plt+0x6998>
   1796c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17970:	sub	r0, r0, #1
   17974:	mvn	r1, #0
   17978:	cmp	r1, r0
   1797c:	blt	17a3c <__assert_fail@plt+0x6984>
   17980:	b	17a50 <__assert_fail@plt+0x6998>
   17984:	ldr	r0, [fp, #8]
   17988:	movw	r1, #0
   1798c:	sdiv	r0, r1, r0
   17990:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17994:	cmp	r0, r1
   17998:	blt	17a3c <__assert_fail@plt+0x6984>
   1799c:	b	17a50 <__assert_fail@plt+0x6998>
   179a0:	ldr	r0, [fp, #8]
   179a4:	cmp	r0, #0
   179a8:	bne	179b0 <__assert_fail@plt+0x68f8>
   179ac:	b	17a50 <__assert_fail@plt+0x6998>
   179b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b4:	cmp	r0, #0
   179b8:	bge	17a24 <__assert_fail@plt+0x696c>
   179bc:	b	179c0 <__assert_fail@plt+0x6908>
   179c0:	b	17a08 <__assert_fail@plt+0x6950>
   179c4:	b	17a08 <__assert_fail@plt+0x6950>
   179c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179cc:	cmn	r0, #1
   179d0:	bne	17a08 <__assert_fail@plt+0x6950>
   179d4:	b	179d8 <__assert_fail@plt+0x6920>
   179d8:	ldr	r0, [fp, #8]
   179dc:	add	r0, r0, #0
   179e0:	movw	r1, #0
   179e4:	cmp	r1, r0
   179e8:	blt	17a3c <__assert_fail@plt+0x6984>
   179ec:	b	17a50 <__assert_fail@plt+0x6998>
   179f0:	ldr	r0, [fp, #8]
   179f4:	sub	r0, r0, #1
   179f8:	mvn	r1, #0
   179fc:	cmp	r1, r0
   17a00:	blt	17a3c <__assert_fail@plt+0x6984>
   17a04:	b	17a50 <__assert_fail@plt+0x6998>
   17a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a0c:	movw	r1, #0
   17a10:	sdiv	r0, r1, r0
   17a14:	ldr	r1, [fp, #8]
   17a18:	cmp	r0, r1
   17a1c:	blt	17a3c <__assert_fail@plt+0x6984>
   17a20:	b	17a50 <__assert_fail@plt+0x6998>
   17a24:	ldr	r0, [fp, #8]
   17a28:	mvn	r1, #0
   17a2c:	udiv	r0, r1, r0
   17a30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a34:	cmp	r0, r1
   17a38:	bcs	17a50 <__assert_fail@plt+0x6998>
   17a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a40:	ldr	r1, [fp, #8]
   17a44:	mul	r0, r0, r1
   17a48:	str	r0, [fp, #-28]	; 0xffffffe4
   17a4c:	b	182ac <__assert_fail@plt+0x71f4>
   17a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a54:	ldr	r1, [fp, #8]
   17a58:	mul	r0, r0, r1
   17a5c:	str	r0, [fp, #-28]	; 0xffffffe4
   17a60:	b	182b8 <__assert_fail@plt+0x7200>
   17a64:	b	17a68 <__assert_fail@plt+0x69b0>
   17a68:	b	17a6c <__assert_fail@plt+0x69b4>
   17a6c:	ldr	r0, [fp, #8]
   17a70:	cmp	r0, #0
   17a74:	bge	17b78 <__assert_fail@plt+0x6ac0>
   17a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a7c:	cmp	r0, #0
   17a80:	bge	17b0c <__assert_fail@plt+0x6a54>
   17a84:	b	17a88 <__assert_fail@plt+0x69d0>
   17a88:	ldr	r0, [pc, #1048]	; 17ea8 <__assert_fail@plt+0x6df0>
   17a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a90:	ldr	r2, [fp, #8]
   17a94:	sdiv	r0, r0, r2
   17a98:	cmp	r1, r0
   17a9c:	blt	17c08 <__assert_fail@plt+0x6b50>
   17aa0:	b	17c1c <__assert_fail@plt+0x6b64>
   17aa4:	b	17aa8 <__assert_fail@plt+0x69f0>
   17aa8:	ldr	r0, [pc, #1180]	; 17f4c <__assert_fail@plt+0x6e94>
   17aac:	ldr	r1, [fp, #8]
   17ab0:	cmp	r1, r0
   17ab4:	blt	17acc <__assert_fail@plt+0x6a14>
   17ab8:	b	17ad8 <__assert_fail@plt+0x6a20>
   17abc:	ldr	r0, [fp, #8]
   17ac0:	movw	r1, #0
   17ac4:	cmp	r1, r0
   17ac8:	bge	17ad8 <__assert_fail@plt+0x6a20>
   17acc:	movw	r0, #0
   17ad0:	str	r0, [fp, #-60]	; 0xffffffc4
   17ad4:	b	17af0 <__assert_fail@plt+0x6a38>
   17ad8:	ldr	r0, [pc, #968]	; 17ea8 <__assert_fail@plt+0x6df0>
   17adc:	ldr	r1, [fp, #8]
   17ae0:	movw	r2, #0
   17ae4:	sub	r1, r2, r1
   17ae8:	sdiv	r0, r0, r1
   17aec:	str	r0, [fp, #-60]	; 0xffffffc4
   17af0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17af4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17af8:	mvn	r2, #0
   17afc:	sub	r1, r2, r1
   17b00:	cmp	r0, r1
   17b04:	ble	17c08 <__assert_fail@plt+0x6b50>
   17b08:	b	17c1c <__assert_fail@plt+0x6b64>
   17b0c:	ldr	r0, [fp, #8]
   17b10:	cmn	r0, #1
   17b14:	bne	17b5c <__assert_fail@plt+0x6aa4>
   17b18:	b	17b1c <__assert_fail@plt+0x6a64>
   17b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b20:	add	r0, r0, #-2147483648	; 0x80000000
   17b24:	movw	r1, #0
   17b28:	cmp	r1, r0
   17b2c:	blt	17c08 <__assert_fail@plt+0x6b50>
   17b30:	b	17c1c <__assert_fail@plt+0x6b64>
   17b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b38:	movw	r1, #0
   17b3c:	cmp	r1, r0
   17b40:	bge	17c1c <__assert_fail@plt+0x6b64>
   17b44:	ldr	r0, [pc, #860]	; 17ea8 <__assert_fail@plt+0x6df0>
   17b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b4c:	sub	r1, r1, #1
   17b50:	cmp	r0, r1
   17b54:	blt	17c08 <__assert_fail@plt+0x6b50>
   17b58:	b	17c1c <__assert_fail@plt+0x6b64>
   17b5c:	ldr	r0, [pc, #3144]	; 187ac <__assert_fail@plt+0x76f4>
   17b60:	ldr	r1, [fp, #8]
   17b64:	sdiv	r0, r0, r1
   17b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b6c:	cmp	r0, r1
   17b70:	blt	17c08 <__assert_fail@plt+0x6b50>
   17b74:	b	17c1c <__assert_fail@plt+0x6b64>
   17b78:	ldr	r0, [fp, #8]
   17b7c:	cmp	r0, #0
   17b80:	bne	17b88 <__assert_fail@plt+0x6ad0>
   17b84:	b	17c1c <__assert_fail@plt+0x6b64>
   17b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b8c:	cmp	r0, #0
   17b90:	bge	17bf0 <__assert_fail@plt+0x6b38>
   17b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b98:	cmn	r0, #1
   17b9c:	bne	17bd4 <__assert_fail@plt+0x6b1c>
   17ba0:	b	17ba4 <__assert_fail@plt+0x6aec>
   17ba4:	ldr	r0, [fp, #8]
   17ba8:	add	r0, r0, #-2147483648	; 0x80000000
   17bac:	movw	r1, #0
   17bb0:	cmp	r1, r0
   17bb4:	blt	17c08 <__assert_fail@plt+0x6b50>
   17bb8:	b	17c1c <__assert_fail@plt+0x6b64>
   17bbc:	ldr	r0, [pc, #740]	; 17ea8 <__assert_fail@plt+0x6df0>
   17bc0:	ldr	r1, [fp, #8]
   17bc4:	sub	r1, r1, #1
   17bc8:	cmp	r0, r1
   17bcc:	blt	17c08 <__assert_fail@plt+0x6b50>
   17bd0:	b	17c1c <__assert_fail@plt+0x6b64>
   17bd4:	ldr	r0, [pc, #3024]	; 187ac <__assert_fail@plt+0x76f4>
   17bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bdc:	sdiv	r0, r0, r1
   17be0:	ldr	r1, [fp, #8]
   17be4:	cmp	r0, r1
   17be8:	blt	17c08 <__assert_fail@plt+0x6b50>
   17bec:	b	17c1c <__assert_fail@plt+0x6b64>
   17bf0:	ldr	r0, [pc, #688]	; 17ea8 <__assert_fail@plt+0x6df0>
   17bf4:	ldr	r1, [fp, #8]
   17bf8:	sdiv	r0, r0, r1
   17bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c00:	cmp	r0, r1
   17c04:	bge	17c1c <__assert_fail@plt+0x6b64>
   17c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c0c:	ldr	r1, [fp, #8]
   17c10:	mul	r0, r0, r1
   17c14:	str	r0, [fp, #-28]	; 0xffffffe4
   17c18:	b	182ac <__assert_fail@plt+0x71f4>
   17c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c20:	ldr	r1, [fp, #8]
   17c24:	mul	r0, r0, r1
   17c28:	str	r0, [fp, #-28]	; 0xffffffe4
   17c2c:	b	182b8 <__assert_fail@plt+0x7200>
   17c30:	ldr	r0, [fp, #8]
   17c34:	cmp	r0, #0
   17c38:	bge	17d48 <__assert_fail@plt+0x6c90>
   17c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c40:	cmp	r0, #0
   17c44:	bge	17cd0 <__assert_fail@plt+0x6c18>
   17c48:	b	17c68 <__assert_fail@plt+0x6bb0>
   17c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c50:	ldr	r1, [fp, #8]
   17c54:	mvn	r2, #0
   17c58:	udiv	r1, r2, r1
   17c5c:	cmp	r0, r1
   17c60:	bcc	17de4 <__assert_fail@plt+0x6d2c>
   17c64:	b	17df8 <__assert_fail@plt+0x6d40>
   17c68:	b	17c6c <__assert_fail@plt+0x6bb4>
   17c6c:	ldr	r0, [pc, #728]	; 17f4c <__assert_fail@plt+0x6e94>
   17c70:	ldr	r1, [fp, #8]
   17c74:	cmp	r1, r0
   17c78:	blt	17c90 <__assert_fail@plt+0x6bd8>
   17c7c:	b	17c9c <__assert_fail@plt+0x6be4>
   17c80:	ldr	r0, [fp, #8]
   17c84:	movw	r1, #0
   17c88:	cmp	r1, r0
   17c8c:	bge	17c9c <__assert_fail@plt+0x6be4>
   17c90:	movw	r0, #1
   17c94:	str	r0, [fp, #-64]	; 0xffffffc0
   17c98:	b	17cb4 <__assert_fail@plt+0x6bfc>
   17c9c:	ldr	r0, [fp, #8]
   17ca0:	movw	r1, #0
   17ca4:	sub	r0, r1, r0
   17ca8:	mvn	r1, #0
   17cac:	udiv	r0, r1, r0
   17cb0:	str	r0, [fp, #-64]	; 0xffffffc0
   17cb4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cbc:	mvn	r2, #0
   17cc0:	sub	r1, r2, r1
   17cc4:	cmp	r0, r1
   17cc8:	bls	17de4 <__assert_fail@plt+0x6d2c>
   17ccc:	b	17df8 <__assert_fail@plt+0x6d40>
   17cd0:	b	17cd4 <__assert_fail@plt+0x6c1c>
   17cd4:	b	17d2c <__assert_fail@plt+0x6c74>
   17cd8:	b	17d2c <__assert_fail@plt+0x6c74>
   17cdc:	ldr	r0, [fp, #8]
   17ce0:	cmn	r0, #1
   17ce4:	bne	17d2c <__assert_fail@plt+0x6c74>
   17ce8:	b	17cec <__assert_fail@plt+0x6c34>
   17cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf0:	add	r0, r0, #0
   17cf4:	movw	r1, #0
   17cf8:	cmp	r1, r0
   17cfc:	blt	17de4 <__assert_fail@plt+0x6d2c>
   17d00:	b	17df8 <__assert_fail@plt+0x6d40>
   17d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d08:	movw	r1, #0
   17d0c:	cmp	r1, r0
   17d10:	bge	17df8 <__assert_fail@plt+0x6d40>
   17d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d18:	sub	r0, r0, #1
   17d1c:	mvn	r1, #0
   17d20:	cmp	r1, r0
   17d24:	blt	17de4 <__assert_fail@plt+0x6d2c>
   17d28:	b	17df8 <__assert_fail@plt+0x6d40>
   17d2c:	ldr	r0, [fp, #8]
   17d30:	movw	r1, #0
   17d34:	sdiv	r0, r1, r0
   17d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d3c:	cmp	r0, r1
   17d40:	blt	17de4 <__assert_fail@plt+0x6d2c>
   17d44:	b	17df8 <__assert_fail@plt+0x6d40>
   17d48:	ldr	r0, [fp, #8]
   17d4c:	cmp	r0, #0
   17d50:	bne	17d58 <__assert_fail@plt+0x6ca0>
   17d54:	b	17df8 <__assert_fail@plt+0x6d40>
   17d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d5c:	cmp	r0, #0
   17d60:	bge	17dcc <__assert_fail@plt+0x6d14>
   17d64:	b	17d68 <__assert_fail@plt+0x6cb0>
   17d68:	b	17db0 <__assert_fail@plt+0x6cf8>
   17d6c:	b	17db0 <__assert_fail@plt+0x6cf8>
   17d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d74:	cmn	r0, #1
   17d78:	bne	17db0 <__assert_fail@plt+0x6cf8>
   17d7c:	b	17d80 <__assert_fail@plt+0x6cc8>
   17d80:	ldr	r0, [fp, #8]
   17d84:	add	r0, r0, #0
   17d88:	movw	r1, #0
   17d8c:	cmp	r1, r0
   17d90:	blt	17de4 <__assert_fail@plt+0x6d2c>
   17d94:	b	17df8 <__assert_fail@plt+0x6d40>
   17d98:	ldr	r0, [fp, #8]
   17d9c:	sub	r0, r0, #1
   17da0:	mvn	r1, #0
   17da4:	cmp	r1, r0
   17da8:	blt	17de4 <__assert_fail@plt+0x6d2c>
   17dac:	b	17df8 <__assert_fail@plt+0x6d40>
   17db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17db4:	movw	r1, #0
   17db8:	sdiv	r0, r1, r0
   17dbc:	ldr	r1, [fp, #8]
   17dc0:	cmp	r0, r1
   17dc4:	blt	17de4 <__assert_fail@plt+0x6d2c>
   17dc8:	b	17df8 <__assert_fail@plt+0x6d40>
   17dcc:	ldr	r0, [fp, #8]
   17dd0:	mvn	r1, #0
   17dd4:	udiv	r0, r1, r0
   17dd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ddc:	cmp	r0, r1
   17de0:	bcs	17df8 <__assert_fail@plt+0x6d40>
   17de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17de8:	ldr	r1, [fp, #8]
   17dec:	mul	r0, r0, r1
   17df0:	str	r0, [fp, #-28]	; 0xffffffe4
   17df4:	b	182ac <__assert_fail@plt+0x71f4>
   17df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dfc:	ldr	r1, [fp, #8]
   17e00:	mul	r0, r0, r1
   17e04:	str	r0, [fp, #-28]	; 0xffffffe4
   17e08:	b	182b8 <__assert_fail@plt+0x7200>
   17e0c:	b	17e10 <__assert_fail@plt+0x6d58>
   17e10:	ldr	r0, [fp, #8]
   17e14:	cmp	r0, #0
   17e18:	bge	17f88 <__assert_fail@plt+0x6ed0>
   17e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e20:	cmp	r0, #0
   17e24:	bge	17f00 <__assert_fail@plt+0x6e48>
   17e28:	b	17e2c <__assert_fail@plt+0x6d74>
   17e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e30:	ldr	r1, [fp, #8]
   17e34:	asr	r3, r1, #31
   17e38:	mvn	r2, #0
   17e3c:	mvn	ip, #-2147483648	; 0x80000000
   17e40:	str	r0, [fp, #-68]	; 0xffffffbc
   17e44:	mov	r0, r2
   17e48:	str	r1, [fp, #-72]	; 0xffffffb8
   17e4c:	mov	r1, ip
   17e50:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17e54:	bl	1dd0c <__assert_fail@plt+0xcc54>
   17e58:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17e5c:	subs	r0, r2, r0
   17e60:	rscs	r1, r1, r2, asr #31
   17e64:	blt	18050 <__assert_fail@plt+0x6f98>
   17e68:	b	18064 <__assert_fail@plt+0x6fac>
   17e6c:	b	17e70 <__assert_fail@plt+0x6db8>
   17e70:	ldr	r0, [pc, #212]	; 17f4c <__assert_fail@plt+0x6e94>
   17e74:	ldr	r1, [fp, #8]
   17e78:	cmp	r1, r0
   17e7c:	blt	17e94 <__assert_fail@plt+0x6ddc>
   17e80:	b	17eac <__assert_fail@plt+0x6df4>
   17e84:	ldr	r0, [fp, #8]
   17e88:	movw	r1, #0
   17e8c:	cmp	r1, r0
   17e90:	bge	17eac <__assert_fail@plt+0x6df4>
   17e94:	mov	r0, #0
   17e98:	mvn	r1, #0
   17e9c:	str	r1, [fp, #-76]	; 0xffffffb4
   17ea0:	str	r0, [fp, #-80]	; 0xffffffb0
   17ea4:	b	17ee0 <__assert_fail@plt+0x6e28>
   17ea8:	svcvc	0x00ffffff
   17eac:	ldr	r0, [fp, #8]
   17eb0:	rsb	r0, r0, #0
   17eb4:	asr	r3, r0, #31
   17eb8:	mvn	r1, #0
   17ebc:	mvn	r2, #-2147483648	; 0x80000000
   17ec0:	str	r0, [fp, #-84]	; 0xffffffac
   17ec4:	mov	r0, r1
   17ec8:	mov	r1, r2
   17ecc:	ldr	r2, [fp, #-84]	; 0xffffffac
   17ed0:	bl	1dd0c <__assert_fail@plt+0xcc54>
   17ed4:	str	r0, [fp, #-76]	; 0xffffffb4
   17ed8:	str	r1, [fp, #-80]	; 0xffffffb0
   17edc:	b	17ee0 <__assert_fail@plt+0x6e28>
   17ee0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17ee4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17ee8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17eec:	mvn	r2, r2
   17ef0:	subs	r1, r2, r1
   17ef4:	rscs	r0, r0, r2, asr #31
   17ef8:	bge	18050 <__assert_fail@plt+0x6f98>
   17efc:	b	18064 <__assert_fail@plt+0x6fac>
   17f00:	ldr	r0, [fp, #8]
   17f04:	cmn	r0, #1
   17f08:	bne	17f50 <__assert_fail@plt+0x6e98>
   17f0c:	b	17f10 <__assert_fail@plt+0x6e58>
   17f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f14:	mov	r1, #-2147483648	; 0x80000000
   17f18:	add	r1, r1, r0, asr #31
   17f1c:	rsbs	r0, r0, #0
   17f20:	rscs	r1, r1, #0
   17f24:	blt	18050 <__assert_fail@plt+0x6f98>
   17f28:	b	18064 <__assert_fail@plt+0x6fac>
   17f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f30:	movw	r1, #0
   17f34:	cmp	r1, r0
   17f38:	bge	18064 <__assert_fail@plt+0x6fac>
   17f3c:	mov	r0, #0
   17f40:	cmp	r0, #0
   17f44:	bne	18050 <__assert_fail@plt+0x6f98>
   17f48:	b	18064 <__assert_fail@plt+0x6fac>
   17f4c:	andhi	r0, r0, r1
   17f50:	ldr	r0, [fp, #8]
   17f54:	asr	r3, r0, #31
   17f58:	mov	r1, #0
   17f5c:	mov	r2, #-2147483648	; 0x80000000
   17f60:	str	r0, [fp, #-88]	; 0xffffffa8
   17f64:	mov	r0, r1
   17f68:	mov	r1, r2
   17f6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17f70:	bl	1dd0c <__assert_fail@plt+0xcc54>
   17f74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17f78:	subs	r0, r0, r2
   17f7c:	sbcs	r1, r1, r2, asr #31
   17f80:	blt	18050 <__assert_fail@plt+0x6f98>
   17f84:	b	18064 <__assert_fail@plt+0x6fac>
   17f88:	ldr	r0, [fp, #8]
   17f8c:	cmp	r0, #0
   17f90:	bne	17f98 <__assert_fail@plt+0x6ee0>
   17f94:	b	18064 <__assert_fail@plt+0x6fac>
   17f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f9c:	cmp	r0, #0
   17fa0:	bge	18018 <__assert_fail@plt+0x6f60>
   17fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fa8:	cmn	r0, #1
   17fac:	bne	17fe0 <__assert_fail@plt+0x6f28>
   17fb0:	b	17fb4 <__assert_fail@plt+0x6efc>
   17fb4:	ldr	r0, [fp, #8]
   17fb8:	mov	r1, #-2147483648	; 0x80000000
   17fbc:	add	r1, r1, r0, asr #31
   17fc0:	rsbs	r0, r0, #0
   17fc4:	rscs	r1, r1, #0
   17fc8:	blt	18050 <__assert_fail@plt+0x6f98>
   17fcc:	b	18064 <__assert_fail@plt+0x6fac>
   17fd0:	mov	r0, #0
   17fd4:	cmp	r0, #0
   17fd8:	bne	18050 <__assert_fail@plt+0x6f98>
   17fdc:	b	18064 <__assert_fail@plt+0x6fac>
   17fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fe4:	asr	r3, r0, #31
   17fe8:	mov	r1, #0
   17fec:	mov	r2, #-2147483648	; 0x80000000
   17ff0:	str	r0, [fp, #-92]	; 0xffffffa4
   17ff4:	mov	r0, r1
   17ff8:	mov	r1, r2
   17ffc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   18000:	bl	1dd0c <__assert_fail@plt+0xcc54>
   18004:	ldr	r2, [fp, #8]
   18008:	subs	r0, r0, r2
   1800c:	sbcs	r1, r1, r2, asr #31
   18010:	blt	18050 <__assert_fail@plt+0x6f98>
   18014:	b	18064 <__assert_fail@plt+0x6fac>
   18018:	ldr	r0, [fp, #8]
   1801c:	asr	r3, r0, #31
   18020:	mvn	r1, #0
   18024:	mvn	r2, #-2147483648	; 0x80000000
   18028:	str	r0, [fp, #-96]	; 0xffffffa0
   1802c:	mov	r0, r1
   18030:	mov	r1, r2
   18034:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18038:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1803c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18040:	subs	r0, r0, r2
   18044:	sbcs	r1, r1, r2, asr #31
   18048:	bge	18064 <__assert_fail@plt+0x6fac>
   1804c:	b	18050 <__assert_fail@plt+0x6f98>
   18050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18054:	ldr	r1, [fp, #8]
   18058:	mul	r0, r0, r1
   1805c:	str	r0, [fp, #-28]	; 0xffffffe4
   18060:	b	182ac <__assert_fail@plt+0x71f4>
   18064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18068:	ldr	r1, [fp, #8]
   1806c:	mul	r0, r0, r1
   18070:	str	r0, [fp, #-28]	; 0xffffffe4
   18074:	b	182b8 <__assert_fail@plt+0x7200>
   18078:	ldr	r0, [fp, #8]
   1807c:	cmp	r0, #0
   18080:	bge	181d0 <__assert_fail@plt+0x7118>
   18084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18088:	cmp	r0, #0
   1808c:	bge	18158 <__assert_fail@plt+0x70a0>
   18090:	b	180d0 <__assert_fail@plt+0x7018>
   18094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18098:	ldr	r1, [fp, #8]
   1809c:	asr	r3, r1, #31
   180a0:	mvn	r2, #0
   180a4:	str	r0, [fp, #-100]	; 0xffffff9c
   180a8:	mov	r0, r2
   180ac:	str	r1, [fp, #-104]	; 0xffffff98
   180b0:	mov	r1, r2
   180b4:	ldr	r2, [fp, #-104]	; 0xffffff98
   180b8:	bl	1dde0 <__assert_fail@plt+0xcd28>
   180bc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   180c0:	subs	r0, r2, r0
   180c4:	rscs	r1, r1, r2, asr #31
   180c8:	bcc	18284 <__assert_fail@plt+0x71cc>
   180cc:	b	18298 <__assert_fail@plt+0x71e0>
   180d0:	b	180d4 <__assert_fail@plt+0x701c>
   180d4:	ldr	r0, [pc, #-400]	; 17f4c <__assert_fail@plt+0x6e94>
   180d8:	ldr	r1, [fp, #8]
   180dc:	cmp	r1, r0
   180e0:	blt	180f8 <__assert_fail@plt+0x7040>
   180e4:	b	1810c <__assert_fail@plt+0x7054>
   180e8:	ldr	r0, [fp, #8]
   180ec:	movw	r1, #0
   180f0:	cmp	r1, r0
   180f4:	bge	1810c <__assert_fail@plt+0x7054>
   180f8:	mov	r0, #1
   180fc:	mvn	r1, #0
   18100:	str	r1, [sp, #108]	; 0x6c
   18104:	str	r0, [sp, #104]	; 0x68
   18108:	b	18138 <__assert_fail@plt+0x7080>
   1810c:	ldr	r0, [fp, #8]
   18110:	rsb	r0, r0, #0
   18114:	asr	r3, r0, #31
   18118:	mvn	r1, #0
   1811c:	str	r0, [sp, #100]	; 0x64
   18120:	mov	r0, r1
   18124:	ldr	r2, [sp, #100]	; 0x64
   18128:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1812c:	str	r0, [sp, #108]	; 0x6c
   18130:	str	r1, [sp, #104]	; 0x68
   18134:	b	18138 <__assert_fail@plt+0x7080>
   18138:	ldr	r0, [sp, #104]	; 0x68
   1813c:	ldr	r1, [sp, #108]	; 0x6c
   18140:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18144:	mvn	r2, r2
   18148:	subs	r1, r2, r1
   1814c:	rscs	r0, r0, r2, asr #31
   18150:	bcs	18284 <__assert_fail@plt+0x71cc>
   18154:	b	18298 <__assert_fail@plt+0x71e0>
   18158:	b	1815c <__assert_fail@plt+0x70a4>
   1815c:	b	181b4 <__assert_fail@plt+0x70fc>
   18160:	b	181b4 <__assert_fail@plt+0x70fc>
   18164:	ldr	r0, [fp, #8]
   18168:	cmn	r0, #1
   1816c:	bne	181b4 <__assert_fail@plt+0x70fc>
   18170:	b	18174 <__assert_fail@plt+0x70bc>
   18174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18178:	add	r0, r0, #0
   1817c:	movw	r1, #0
   18180:	cmp	r1, r0
   18184:	blt	18284 <__assert_fail@plt+0x71cc>
   18188:	b	18298 <__assert_fail@plt+0x71e0>
   1818c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18190:	movw	r1, #0
   18194:	cmp	r1, r0
   18198:	bge	18298 <__assert_fail@plt+0x71e0>
   1819c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a0:	sub	r0, r0, #1
   181a4:	mvn	r1, #0
   181a8:	cmp	r1, r0
   181ac:	blt	18284 <__assert_fail@plt+0x71cc>
   181b0:	b	18298 <__assert_fail@plt+0x71e0>
   181b4:	ldr	r0, [fp, #8]
   181b8:	movw	r1, #0
   181bc:	sdiv	r0, r1, r0
   181c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181c4:	cmp	r0, r1
   181c8:	blt	18284 <__assert_fail@plt+0x71cc>
   181cc:	b	18298 <__assert_fail@plt+0x71e0>
   181d0:	ldr	r0, [fp, #8]
   181d4:	cmp	r0, #0
   181d8:	bne	181e0 <__assert_fail@plt+0x7128>
   181dc:	b	18298 <__assert_fail@plt+0x71e0>
   181e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181e4:	cmp	r0, #0
   181e8:	bge	18254 <__assert_fail@plt+0x719c>
   181ec:	b	181f0 <__assert_fail@plt+0x7138>
   181f0:	b	18238 <__assert_fail@plt+0x7180>
   181f4:	b	18238 <__assert_fail@plt+0x7180>
   181f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181fc:	cmn	r0, #1
   18200:	bne	18238 <__assert_fail@plt+0x7180>
   18204:	b	18208 <__assert_fail@plt+0x7150>
   18208:	ldr	r0, [fp, #8]
   1820c:	add	r0, r0, #0
   18210:	movw	r1, #0
   18214:	cmp	r1, r0
   18218:	blt	18284 <__assert_fail@plt+0x71cc>
   1821c:	b	18298 <__assert_fail@plt+0x71e0>
   18220:	ldr	r0, [fp, #8]
   18224:	sub	r0, r0, #1
   18228:	mvn	r1, #0
   1822c:	cmp	r1, r0
   18230:	blt	18284 <__assert_fail@plt+0x71cc>
   18234:	b	18298 <__assert_fail@plt+0x71e0>
   18238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1823c:	movw	r1, #0
   18240:	sdiv	r0, r1, r0
   18244:	ldr	r1, [fp, #8]
   18248:	cmp	r0, r1
   1824c:	blt	18284 <__assert_fail@plt+0x71cc>
   18250:	b	18298 <__assert_fail@plt+0x71e0>
   18254:	ldr	r0, [fp, #8]
   18258:	asr	r3, r0, #31
   1825c:	mvn	r1, #0
   18260:	str	r0, [sp, #96]	; 0x60
   18264:	mov	r0, r1
   18268:	ldr	r2, [sp, #96]	; 0x60
   1826c:	bl	1dde0 <__assert_fail@plt+0xcd28>
   18270:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18274:	subs	r0, r0, r2
   18278:	sbcs	r1, r1, r2, asr #31
   1827c:	bcs	18298 <__assert_fail@plt+0x71e0>
   18280:	b	18284 <__assert_fail@plt+0x71cc>
   18284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18288:	ldr	r1, [fp, #8]
   1828c:	mul	r0, r0, r1
   18290:	str	r0, [fp, #-28]	; 0xffffffe4
   18294:	b	182ac <__assert_fail@plt+0x71f4>
   18298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1829c:	ldr	r1, [fp, #8]
   182a0:	mul	r0, r0, r1
   182a4:	str	r0, [fp, #-28]	; 0xffffffe4
   182a8:	b	182b8 <__assert_fail@plt+0x7200>
   182ac:	ldr	r0, [pc, #-1036]	; 17ea8 <__assert_fail@plt+0x6df0>
   182b0:	str	r0, [sp, #92]	; 0x5c
   182b4:	b	182d8 <__assert_fail@plt+0x7220>
   182b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   182bc:	cmp	r0, #64	; 0x40
   182c0:	movw	r0, #0
   182c4:	movlt	r0, #1
   182c8:	tst	r0, #1
   182cc:	movw	r0, #64	; 0x40
   182d0:	moveq	r0, #0
   182d4:	str	r0, [sp, #92]	; 0x5c
   182d8:	ldr	r0, [sp, #92]	; 0x5c
   182dc:	str	r0, [fp, #-32]	; 0xffffffe0
   182e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182e4:	cmp	r0, #0
   182e8:	beq	18318 <__assert_fail@plt+0x7260>
   182ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182f0:	ldr	r1, [fp, #8]
   182f4:	sdiv	r0, r0, r1
   182f8:	str	r0, [fp, #-24]	; 0xffffffe8
   182fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18300:	mov	r1, r0
   18304:	ldr	r2, [fp, #8]
   18308:	sdiv	r3, r0, r2
   1830c:	mls	r0, r3, r2, r0
   18310:	sub	r0, r1, r0
   18314:	str	r0, [fp, #-28]	; 0xffffffe4
   18318:	ldr	r0, [fp, #-4]
   1831c:	movw	r1, #0
   18320:	cmp	r0, r1
   18324:	bne	18334 <__assert_fail@plt+0x727c>
   18328:	ldr	r0, [fp, #-8]
   1832c:	movw	r1, #0
   18330:	str	r1, [r0]
   18334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18338:	ldr	r1, [fp, #-20]	; 0xffffffec
   1833c:	sub	r0, r0, r1
   18340:	ldr	r1, [fp, #-12]
   18344:	cmp	r0, r1
   18348:	bge	19734 <__assert_fail@plt+0x867c>
   1834c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18350:	ldr	r1, [fp, #-12]
   18354:	add	r1, r0, r1
   18358:	mov	r2, #1
   1835c:	cmp	r1, r0
   18360:	movwvc	r2, #0
   18364:	str	r1, [fp, #-24]	; 0xffffffe8
   18368:	tst	r2, #1
   1836c:	bne	19730 <__assert_fail@plt+0x8678>
   18370:	ldr	r0, [fp, #-16]
   18374:	movw	r1, #0
   18378:	cmp	r1, r0
   1837c:	bgt	18390 <__assert_fail@plt+0x72d8>
   18380:	ldr	r0, [fp, #-16]
   18384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18388:	cmp	r0, r1
   1838c:	blt	19730 <__assert_fail@plt+0x8678>
   18390:	b	1876c <__assert_fail@plt+0x76b4>
   18394:			; <UNDEFINED> instruction: 0xffff8000
   18398:	b	1839c <__assert_fail@plt+0x72e4>
   1839c:	ldr	r0, [fp, #8]
   183a0:	cmp	r0, #0
   183a4:	bge	184b8 <__assert_fail@plt+0x7400>
   183a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183ac:	cmp	r0, #0
   183b0:	bge	1843c <__assert_fail@plt+0x7384>
   183b4:	b	183b8 <__assert_fail@plt+0x7300>
   183b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183bc:	ldr	r1, [fp, #8]
   183c0:	movw	r2, #127	; 0x7f
   183c4:	sdiv	r1, r2, r1
   183c8:	cmp	r0, r1
   183cc:	blt	18558 <__assert_fail@plt+0x74a0>
   183d0:	b	18570 <__assert_fail@plt+0x74b8>
   183d4:	b	183d8 <__assert_fail@plt+0x7320>
   183d8:	ldr	r0, [pc, #-1172]	; 17f4c <__assert_fail@plt+0x6e94>
   183dc:	ldr	r1, [fp, #8]
   183e0:	cmp	r1, r0
   183e4:	blt	183fc <__assert_fail@plt+0x7344>
   183e8:	b	18408 <__assert_fail@plt+0x7350>
   183ec:	ldr	r0, [fp, #8]
   183f0:	movw	r1, #0
   183f4:	cmp	r1, r0
   183f8:	bge	18408 <__assert_fail@plt+0x7350>
   183fc:	movw	r0, #0
   18400:	str	r0, [sp, #88]	; 0x58
   18404:	b	18420 <__assert_fail@plt+0x7368>
   18408:	ldr	r0, [fp, #8]
   1840c:	movw	r1, #0
   18410:	sub	r0, r1, r0
   18414:	movw	r1, #127	; 0x7f
   18418:	sdiv	r0, r1, r0
   1841c:	str	r0, [sp, #88]	; 0x58
   18420:	ldr	r0, [sp, #88]	; 0x58
   18424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18428:	mvn	r2, #0
   1842c:	sub	r1, r2, r1
   18430:	cmp	r0, r1
   18434:	ble	18558 <__assert_fail@plt+0x74a0>
   18438:	b	18570 <__assert_fail@plt+0x74b8>
   1843c:	b	18440 <__assert_fail@plt+0x7388>
   18440:	b	1849c <__assert_fail@plt+0x73e4>
   18444:	b	1849c <__assert_fail@plt+0x73e4>
   18448:	ldr	r0, [fp, #8]
   1844c:	cmn	r0, #1
   18450:	bne	1849c <__assert_fail@plt+0x73e4>
   18454:	b	18458 <__assert_fail@plt+0x73a0>
   18458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1845c:	mvn	r1, #127	; 0x7f
   18460:	add	r0, r0, r1
   18464:	movw	r1, #0
   18468:	cmp	r1, r0
   1846c:	blt	18558 <__assert_fail@plt+0x74a0>
   18470:	b	18570 <__assert_fail@plt+0x74b8>
   18474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18478:	movw	r1, #0
   1847c:	cmp	r1, r0
   18480:	bge	18570 <__assert_fail@plt+0x74b8>
   18484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18488:	sub	r0, r0, #1
   1848c:	movw	r1, #127	; 0x7f
   18490:	cmp	r1, r0
   18494:	blt	18558 <__assert_fail@plt+0x74a0>
   18498:	b	18570 <__assert_fail@plt+0x74b8>
   1849c:	ldr	r0, [fp, #8]
   184a0:	mvn	r1, #127	; 0x7f
   184a4:	sdiv	r0, r1, r0
   184a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184ac:	cmp	r0, r1
   184b0:	blt	18558 <__assert_fail@plt+0x74a0>
   184b4:	b	18570 <__assert_fail@plt+0x74b8>
   184b8:	ldr	r0, [fp, #8]
   184bc:	cmp	r0, #0
   184c0:	bne	184c8 <__assert_fail@plt+0x7410>
   184c4:	b	18570 <__assert_fail@plt+0x74b8>
   184c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184cc:	cmp	r0, #0
   184d0:	bge	18540 <__assert_fail@plt+0x7488>
   184d4:	b	184d8 <__assert_fail@plt+0x7420>
   184d8:	b	18524 <__assert_fail@plt+0x746c>
   184dc:	b	18524 <__assert_fail@plt+0x746c>
   184e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e4:	cmn	r0, #1
   184e8:	bne	18524 <__assert_fail@plt+0x746c>
   184ec:	b	184f0 <__assert_fail@plt+0x7438>
   184f0:	ldr	r0, [fp, #8]
   184f4:	mvn	r1, #127	; 0x7f
   184f8:	add	r0, r0, r1
   184fc:	movw	r1, #0
   18500:	cmp	r1, r0
   18504:	blt	18558 <__assert_fail@plt+0x74a0>
   18508:	b	18570 <__assert_fail@plt+0x74b8>
   1850c:	ldr	r0, [fp, #8]
   18510:	sub	r0, r0, #1
   18514:	movw	r1, #127	; 0x7f
   18518:	cmp	r1, r0
   1851c:	blt	18558 <__assert_fail@plt+0x74a0>
   18520:	b	18570 <__assert_fail@plt+0x74b8>
   18524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18528:	mvn	r1, #127	; 0x7f
   1852c:	sdiv	r0, r1, r0
   18530:	ldr	r1, [fp, #8]
   18534:	cmp	r0, r1
   18538:	blt	18558 <__assert_fail@plt+0x74a0>
   1853c:	b	18570 <__assert_fail@plt+0x74b8>
   18540:	ldr	r0, [fp, #8]
   18544:	movw	r1, #127	; 0x7f
   18548:	sdiv	r0, r1, r0
   1854c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18550:	cmp	r0, r1
   18554:	bge	18570 <__assert_fail@plt+0x74b8>
   18558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1855c:	ldr	r1, [fp, #8]
   18560:	mul	r0, r0, r1
   18564:	sxtb	r0, r0
   18568:	str	r0, [fp, #-28]	; 0xffffffe4
   1856c:	b	19730 <__assert_fail@plt+0x8678>
   18570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18574:	ldr	r1, [fp, #8]
   18578:	mul	r0, r0, r1
   1857c:	sxtb	r0, r0
   18580:	str	r0, [fp, #-28]	; 0xffffffe4
   18584:	b	19734 <__assert_fail@plt+0x867c>
   18588:	ldr	r0, [fp, #8]
   1858c:	cmp	r0, #0
   18590:	bge	186a0 <__assert_fail@plt+0x75e8>
   18594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18598:	cmp	r0, #0
   1859c:	bge	18628 <__assert_fail@plt+0x7570>
   185a0:	b	185a4 <__assert_fail@plt+0x74ec>
   185a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a8:	ldr	r1, [fp, #8]
   185ac:	movw	r2, #255	; 0xff
   185b0:	sdiv	r1, r2, r1
   185b4:	cmp	r0, r1
   185b8:	blt	1873c <__assert_fail@plt+0x7684>
   185bc:	b	18754 <__assert_fail@plt+0x769c>
   185c0:	b	185c4 <__assert_fail@plt+0x750c>
   185c4:	ldr	r0, [pc, #-1664]	; 17f4c <__assert_fail@plt+0x6e94>
   185c8:	ldr	r1, [fp, #8]
   185cc:	cmp	r1, r0
   185d0:	blt	185e8 <__assert_fail@plt+0x7530>
   185d4:	b	185f4 <__assert_fail@plt+0x753c>
   185d8:	ldr	r0, [fp, #8]
   185dc:	movw	r1, #0
   185e0:	cmp	r1, r0
   185e4:	bge	185f4 <__assert_fail@plt+0x753c>
   185e8:	movw	r0, #0
   185ec:	str	r0, [sp, #84]	; 0x54
   185f0:	b	1860c <__assert_fail@plt+0x7554>
   185f4:	ldr	r0, [fp, #8]
   185f8:	movw	r1, #0
   185fc:	sub	r0, r1, r0
   18600:	movw	r1, #255	; 0xff
   18604:	sdiv	r0, r1, r0
   18608:	str	r0, [sp, #84]	; 0x54
   1860c:	ldr	r0, [sp, #84]	; 0x54
   18610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18614:	mvn	r2, #0
   18618:	sub	r1, r2, r1
   1861c:	cmp	r0, r1
   18620:	ble	1873c <__assert_fail@plt+0x7684>
   18624:	b	18754 <__assert_fail@plt+0x769c>
   18628:	b	1862c <__assert_fail@plt+0x7574>
   1862c:	b	18684 <__assert_fail@plt+0x75cc>
   18630:	b	18684 <__assert_fail@plt+0x75cc>
   18634:	ldr	r0, [fp, #8]
   18638:	cmn	r0, #1
   1863c:	bne	18684 <__assert_fail@plt+0x75cc>
   18640:	b	18644 <__assert_fail@plt+0x758c>
   18644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18648:	add	r0, r0, #0
   1864c:	movw	r1, #0
   18650:	cmp	r1, r0
   18654:	blt	1873c <__assert_fail@plt+0x7684>
   18658:	b	18754 <__assert_fail@plt+0x769c>
   1865c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18660:	movw	r1, #0
   18664:	cmp	r1, r0
   18668:	bge	18754 <__assert_fail@plt+0x769c>
   1866c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18670:	sub	r0, r0, #1
   18674:	mvn	r1, #0
   18678:	cmp	r1, r0
   1867c:	blt	1873c <__assert_fail@plt+0x7684>
   18680:	b	18754 <__assert_fail@plt+0x769c>
   18684:	ldr	r0, [fp, #8]
   18688:	movw	r1, #0
   1868c:	sdiv	r0, r1, r0
   18690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18694:	cmp	r0, r1
   18698:	blt	1873c <__assert_fail@plt+0x7684>
   1869c:	b	18754 <__assert_fail@plt+0x769c>
   186a0:	ldr	r0, [fp, #8]
   186a4:	cmp	r0, #0
   186a8:	bne	186b0 <__assert_fail@plt+0x75f8>
   186ac:	b	18754 <__assert_fail@plt+0x769c>
   186b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186b4:	cmp	r0, #0
   186b8:	bge	18724 <__assert_fail@plt+0x766c>
   186bc:	b	186c0 <__assert_fail@plt+0x7608>
   186c0:	b	18708 <__assert_fail@plt+0x7650>
   186c4:	b	18708 <__assert_fail@plt+0x7650>
   186c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186cc:	cmn	r0, #1
   186d0:	bne	18708 <__assert_fail@plt+0x7650>
   186d4:	b	186d8 <__assert_fail@plt+0x7620>
   186d8:	ldr	r0, [fp, #8]
   186dc:	add	r0, r0, #0
   186e0:	movw	r1, #0
   186e4:	cmp	r1, r0
   186e8:	blt	1873c <__assert_fail@plt+0x7684>
   186ec:	b	18754 <__assert_fail@plt+0x769c>
   186f0:	ldr	r0, [fp, #8]
   186f4:	sub	r0, r0, #1
   186f8:	mvn	r1, #0
   186fc:	cmp	r1, r0
   18700:	blt	1873c <__assert_fail@plt+0x7684>
   18704:	b	18754 <__assert_fail@plt+0x769c>
   18708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1870c:	movw	r1, #0
   18710:	sdiv	r0, r1, r0
   18714:	ldr	r1, [fp, #8]
   18718:	cmp	r0, r1
   1871c:	blt	1873c <__assert_fail@plt+0x7684>
   18720:	b	18754 <__assert_fail@plt+0x769c>
   18724:	ldr	r0, [fp, #8]
   18728:	movw	r1, #255	; 0xff
   1872c:	sdiv	r0, r1, r0
   18730:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18734:	cmp	r0, r1
   18738:	bge	18754 <__assert_fail@plt+0x769c>
   1873c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18740:	ldr	r1, [fp, #8]
   18744:	mul	r0, r0, r1
   18748:	and	r0, r0, #255	; 0xff
   1874c:	str	r0, [fp, #-28]	; 0xffffffe4
   18750:	b	19730 <__assert_fail@plt+0x8678>
   18754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18758:	ldr	r1, [fp, #8]
   1875c:	mul	r0, r0, r1
   18760:	and	r0, r0, #255	; 0xff
   18764:	str	r0, [fp, #-28]	; 0xffffffe4
   18768:	b	19734 <__assert_fail@plt+0x867c>
   1876c:	b	18b48 <__assert_fail@plt+0x7a90>
   18770:	b	18774 <__assert_fail@plt+0x76bc>
   18774:	ldr	r0, [fp, #8]
   18778:	cmp	r0, #0
   1877c:	bge	18894 <__assert_fail@plt+0x77dc>
   18780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18784:	cmp	r0, #0
   18788:	bge	18818 <__assert_fail@plt+0x7760>
   1878c:	b	18790 <__assert_fail@plt+0x76d8>
   18790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18794:	ldr	r1, [fp, #8]
   18798:	movw	r2, #32767	; 0x7fff
   1879c:	sdiv	r1, r2, r1
   187a0:	cmp	r0, r1
   187a4:	blt	18934 <__assert_fail@plt+0x787c>
   187a8:	b	1894c <__assert_fail@plt+0x7894>
   187ac:	andhi	r0, r0, r0
   187b0:	b	187b4 <__assert_fail@plt+0x76fc>
   187b4:	ldr	r0, [pc, #4004]	; 19760 <__assert_fail@plt+0x86a8>
   187b8:	ldr	r1, [fp, #8]
   187bc:	cmp	r1, r0
   187c0:	blt	187d8 <__assert_fail@plt+0x7720>
   187c4:	b	187e4 <__assert_fail@plt+0x772c>
   187c8:	ldr	r0, [fp, #8]
   187cc:	movw	r1, #0
   187d0:	cmp	r1, r0
   187d4:	bge	187e4 <__assert_fail@plt+0x772c>
   187d8:	movw	r0, #0
   187dc:	str	r0, [sp, #80]	; 0x50
   187e0:	b	187fc <__assert_fail@plt+0x7744>
   187e4:	ldr	r0, [fp, #8]
   187e8:	movw	r1, #0
   187ec:	sub	r0, r1, r0
   187f0:	movw	r1, #32767	; 0x7fff
   187f4:	sdiv	r0, r1, r0
   187f8:	str	r0, [sp, #80]	; 0x50
   187fc:	ldr	r0, [sp, #80]	; 0x50
   18800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18804:	mvn	r2, #0
   18808:	sub	r1, r2, r1
   1880c:	cmp	r0, r1
   18810:	ble	18934 <__assert_fail@plt+0x787c>
   18814:	b	1894c <__assert_fail@plt+0x7894>
   18818:	b	1881c <__assert_fail@plt+0x7764>
   1881c:	b	18878 <__assert_fail@plt+0x77c0>
   18820:	b	18878 <__assert_fail@plt+0x77c0>
   18824:	ldr	r0, [fp, #8]
   18828:	cmn	r0, #1
   1882c:	bne	18878 <__assert_fail@plt+0x77c0>
   18830:	b	18834 <__assert_fail@plt+0x777c>
   18834:	ldr	r0, [pc, #3884]	; 19768 <__assert_fail@plt+0x86b0>
   18838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1883c:	add	r0, r1, r0
   18840:	movw	r1, #0
   18844:	cmp	r1, r0
   18848:	blt	18934 <__assert_fail@plt+0x787c>
   1884c:	b	1894c <__assert_fail@plt+0x7894>
   18850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18854:	movw	r1, #0
   18858:	cmp	r1, r0
   1885c:	bge	1894c <__assert_fail@plt+0x7894>
   18860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18864:	sub	r0, r0, #1
   18868:	movw	r1, #32767	; 0x7fff
   1886c:	cmp	r1, r0
   18870:	blt	18934 <__assert_fail@plt+0x787c>
   18874:	b	1894c <__assert_fail@plt+0x7894>
   18878:	ldr	r0, [pc, #3816]	; 19768 <__assert_fail@plt+0x86b0>
   1887c:	ldr	r1, [fp, #8]
   18880:	sdiv	r0, r0, r1
   18884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18888:	cmp	r0, r1
   1888c:	blt	18934 <__assert_fail@plt+0x787c>
   18890:	b	1894c <__assert_fail@plt+0x7894>
   18894:	ldr	r0, [fp, #8]
   18898:	cmp	r0, #0
   1889c:	bne	188a4 <__assert_fail@plt+0x77ec>
   188a0:	b	1894c <__assert_fail@plt+0x7894>
   188a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188a8:	cmp	r0, #0
   188ac:	bge	1891c <__assert_fail@plt+0x7864>
   188b0:	b	188b4 <__assert_fail@plt+0x77fc>
   188b4:	b	18900 <__assert_fail@plt+0x7848>
   188b8:	b	18900 <__assert_fail@plt+0x7848>
   188bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188c0:	cmn	r0, #1
   188c4:	bne	18900 <__assert_fail@plt+0x7848>
   188c8:	b	188cc <__assert_fail@plt+0x7814>
   188cc:	ldr	r0, [pc, #3732]	; 19768 <__assert_fail@plt+0x86b0>
   188d0:	ldr	r1, [fp, #8]
   188d4:	add	r0, r1, r0
   188d8:	movw	r1, #0
   188dc:	cmp	r1, r0
   188e0:	blt	18934 <__assert_fail@plt+0x787c>
   188e4:	b	1894c <__assert_fail@plt+0x7894>
   188e8:	ldr	r0, [fp, #8]
   188ec:	sub	r0, r0, #1
   188f0:	movw	r1, #32767	; 0x7fff
   188f4:	cmp	r1, r0
   188f8:	blt	18934 <__assert_fail@plt+0x787c>
   188fc:	b	1894c <__assert_fail@plt+0x7894>
   18900:	ldr	r0, [pc, #3680]	; 19768 <__assert_fail@plt+0x86b0>
   18904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18908:	sdiv	r0, r0, r1
   1890c:	ldr	r1, [fp, #8]
   18910:	cmp	r0, r1
   18914:	blt	18934 <__assert_fail@plt+0x787c>
   18918:	b	1894c <__assert_fail@plt+0x7894>
   1891c:	ldr	r0, [fp, #8]
   18920:	movw	r1, #32767	; 0x7fff
   18924:	sdiv	r0, r1, r0
   18928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1892c:	cmp	r0, r1
   18930:	bge	1894c <__assert_fail@plt+0x7894>
   18934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18938:	ldr	r1, [fp, #8]
   1893c:	mul	r0, r0, r1
   18940:	sxth	r0, r0
   18944:	str	r0, [fp, #-28]	; 0xffffffe4
   18948:	b	19730 <__assert_fail@plt+0x8678>
   1894c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18950:	ldr	r1, [fp, #8]
   18954:	mul	r0, r0, r1
   18958:	sxth	r0, r0
   1895c:	str	r0, [fp, #-28]	; 0xffffffe4
   18960:	b	19734 <__assert_fail@plt+0x867c>
   18964:	ldr	r0, [fp, #8]
   18968:	cmp	r0, #0
   1896c:	bge	18a7c <__assert_fail@plt+0x79c4>
   18970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18974:	cmp	r0, #0
   18978:	bge	18a04 <__assert_fail@plt+0x794c>
   1897c:	b	18980 <__assert_fail@plt+0x78c8>
   18980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18984:	ldr	r1, [fp, #8]
   18988:	movw	r2, #65535	; 0xffff
   1898c:	sdiv	r1, r2, r1
   18990:	cmp	r0, r1
   18994:	blt	18b18 <__assert_fail@plt+0x7a60>
   18998:	b	18b30 <__assert_fail@plt+0x7a78>
   1899c:	b	189a0 <__assert_fail@plt+0x78e8>
   189a0:	ldr	r0, [pc, #3512]	; 19760 <__assert_fail@plt+0x86a8>
   189a4:	ldr	r1, [fp, #8]
   189a8:	cmp	r1, r0
   189ac:	blt	189c4 <__assert_fail@plt+0x790c>
   189b0:	b	189d0 <__assert_fail@plt+0x7918>
   189b4:	ldr	r0, [fp, #8]
   189b8:	movw	r1, #0
   189bc:	cmp	r1, r0
   189c0:	bge	189d0 <__assert_fail@plt+0x7918>
   189c4:	movw	r0, #0
   189c8:	str	r0, [sp, #76]	; 0x4c
   189cc:	b	189e8 <__assert_fail@plt+0x7930>
   189d0:	ldr	r0, [fp, #8]
   189d4:	movw	r1, #0
   189d8:	sub	r0, r1, r0
   189dc:	movw	r1, #65535	; 0xffff
   189e0:	sdiv	r0, r1, r0
   189e4:	str	r0, [sp, #76]	; 0x4c
   189e8:	ldr	r0, [sp, #76]	; 0x4c
   189ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189f0:	mvn	r2, #0
   189f4:	sub	r1, r2, r1
   189f8:	cmp	r0, r1
   189fc:	ble	18b18 <__assert_fail@plt+0x7a60>
   18a00:	b	18b30 <__assert_fail@plt+0x7a78>
   18a04:	b	18a08 <__assert_fail@plt+0x7950>
   18a08:	b	18a60 <__assert_fail@plt+0x79a8>
   18a0c:	b	18a60 <__assert_fail@plt+0x79a8>
   18a10:	ldr	r0, [fp, #8]
   18a14:	cmn	r0, #1
   18a18:	bne	18a60 <__assert_fail@plt+0x79a8>
   18a1c:	b	18a20 <__assert_fail@plt+0x7968>
   18a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a24:	add	r0, r0, #0
   18a28:	movw	r1, #0
   18a2c:	cmp	r1, r0
   18a30:	blt	18b18 <__assert_fail@plt+0x7a60>
   18a34:	b	18b30 <__assert_fail@plt+0x7a78>
   18a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a3c:	movw	r1, #0
   18a40:	cmp	r1, r0
   18a44:	bge	18b30 <__assert_fail@plt+0x7a78>
   18a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a4c:	sub	r0, r0, #1
   18a50:	mvn	r1, #0
   18a54:	cmp	r1, r0
   18a58:	blt	18b18 <__assert_fail@plt+0x7a60>
   18a5c:	b	18b30 <__assert_fail@plt+0x7a78>
   18a60:	ldr	r0, [fp, #8]
   18a64:	movw	r1, #0
   18a68:	sdiv	r0, r1, r0
   18a6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a70:	cmp	r0, r1
   18a74:	blt	18b18 <__assert_fail@plt+0x7a60>
   18a78:	b	18b30 <__assert_fail@plt+0x7a78>
   18a7c:	ldr	r0, [fp, #8]
   18a80:	cmp	r0, #0
   18a84:	bne	18a8c <__assert_fail@plt+0x79d4>
   18a88:	b	18b30 <__assert_fail@plt+0x7a78>
   18a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a90:	cmp	r0, #0
   18a94:	bge	18b00 <__assert_fail@plt+0x7a48>
   18a98:	b	18a9c <__assert_fail@plt+0x79e4>
   18a9c:	b	18ae4 <__assert_fail@plt+0x7a2c>
   18aa0:	b	18ae4 <__assert_fail@plt+0x7a2c>
   18aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aa8:	cmn	r0, #1
   18aac:	bne	18ae4 <__assert_fail@plt+0x7a2c>
   18ab0:	b	18ab4 <__assert_fail@plt+0x79fc>
   18ab4:	ldr	r0, [fp, #8]
   18ab8:	add	r0, r0, #0
   18abc:	movw	r1, #0
   18ac0:	cmp	r1, r0
   18ac4:	blt	18b18 <__assert_fail@plt+0x7a60>
   18ac8:	b	18b30 <__assert_fail@plt+0x7a78>
   18acc:	ldr	r0, [fp, #8]
   18ad0:	sub	r0, r0, #1
   18ad4:	mvn	r1, #0
   18ad8:	cmp	r1, r0
   18adc:	blt	18b18 <__assert_fail@plt+0x7a60>
   18ae0:	b	18b30 <__assert_fail@plt+0x7a78>
   18ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ae8:	movw	r1, #0
   18aec:	sdiv	r0, r1, r0
   18af0:	ldr	r1, [fp, #8]
   18af4:	cmp	r0, r1
   18af8:	blt	18b18 <__assert_fail@plt+0x7a60>
   18afc:	b	18b30 <__assert_fail@plt+0x7a78>
   18b00:	ldr	r0, [fp, #8]
   18b04:	movw	r1, #65535	; 0xffff
   18b08:	sdiv	r0, r1, r0
   18b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b10:	cmp	r0, r1
   18b14:	bge	18b30 <__assert_fail@plt+0x7a78>
   18b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b1c:	ldr	r1, [fp, #8]
   18b20:	mul	r0, r0, r1
   18b24:	uxth	r0, r0
   18b28:	str	r0, [fp, #-28]	; 0xffffffe4
   18b2c:	b	19730 <__assert_fail@plt+0x8678>
   18b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b34:	ldr	r1, [fp, #8]
   18b38:	mul	r0, r0, r1
   18b3c:	uxth	r0, r0
   18b40:	str	r0, [fp, #-28]	; 0xffffffe4
   18b44:	b	19734 <__assert_fail@plt+0x867c>
   18b48:	b	18b4c <__assert_fail@plt+0x7a94>
   18b4c:	b	18b50 <__assert_fail@plt+0x7a98>
   18b50:	ldr	r0, [fp, #8]
   18b54:	cmp	r0, #0
   18b58:	bge	18c5c <__assert_fail@plt+0x7ba4>
   18b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b60:	cmp	r0, #0
   18b64:	bge	18bf0 <__assert_fail@plt+0x7b38>
   18b68:	b	18b6c <__assert_fail@plt+0x7ab4>
   18b6c:	ldr	r0, [pc, #3048]	; 1975c <__assert_fail@plt+0x86a4>
   18b70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b74:	ldr	r2, [fp, #8]
   18b78:	sdiv	r0, r0, r2
   18b7c:	cmp	r1, r0
   18b80:	blt	18cec <__assert_fail@plt+0x7c34>
   18b84:	b	18d00 <__assert_fail@plt+0x7c48>
   18b88:	b	18b8c <__assert_fail@plt+0x7ad4>
   18b8c:	ldr	r0, [pc, #3020]	; 19760 <__assert_fail@plt+0x86a8>
   18b90:	ldr	r1, [fp, #8]
   18b94:	cmp	r1, r0
   18b98:	blt	18bb0 <__assert_fail@plt+0x7af8>
   18b9c:	b	18bbc <__assert_fail@plt+0x7b04>
   18ba0:	ldr	r0, [fp, #8]
   18ba4:	movw	r1, #0
   18ba8:	cmp	r1, r0
   18bac:	bge	18bbc <__assert_fail@plt+0x7b04>
   18bb0:	movw	r0, #0
   18bb4:	str	r0, [sp, #72]	; 0x48
   18bb8:	b	18bd4 <__assert_fail@plt+0x7b1c>
   18bbc:	ldr	r0, [pc, #2968]	; 1975c <__assert_fail@plt+0x86a4>
   18bc0:	ldr	r1, [fp, #8]
   18bc4:	movw	r2, #0
   18bc8:	sub	r1, r2, r1
   18bcc:	sdiv	r0, r0, r1
   18bd0:	str	r0, [sp, #72]	; 0x48
   18bd4:	ldr	r0, [sp, #72]	; 0x48
   18bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bdc:	mvn	r2, #0
   18be0:	sub	r1, r2, r1
   18be4:	cmp	r0, r1
   18be8:	ble	18cec <__assert_fail@plt+0x7c34>
   18bec:	b	18d00 <__assert_fail@plt+0x7c48>
   18bf0:	ldr	r0, [fp, #8]
   18bf4:	cmn	r0, #1
   18bf8:	bne	18c40 <__assert_fail@plt+0x7b88>
   18bfc:	b	18c00 <__assert_fail@plt+0x7b48>
   18c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c04:	add	r0, r0, #-2147483648	; 0x80000000
   18c08:	movw	r1, #0
   18c0c:	cmp	r1, r0
   18c10:	blt	18cec <__assert_fail@plt+0x7c34>
   18c14:	b	18d00 <__assert_fail@plt+0x7c48>
   18c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c1c:	movw	r1, #0
   18c20:	cmp	r1, r0
   18c24:	bge	18d00 <__assert_fail@plt+0x7c48>
   18c28:	ldr	r0, [pc, #2860]	; 1975c <__assert_fail@plt+0x86a4>
   18c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c30:	sub	r1, r1, #1
   18c34:	cmp	r0, r1
   18c38:	blt	18cec <__assert_fail@plt+0x7c34>
   18c3c:	b	18d00 <__assert_fail@plt+0x7c48>
   18c40:	ldr	r0, [pc, #2844]	; 19764 <__assert_fail@plt+0x86ac>
   18c44:	ldr	r1, [fp, #8]
   18c48:	sdiv	r0, r0, r1
   18c4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c50:	cmp	r0, r1
   18c54:	blt	18cec <__assert_fail@plt+0x7c34>
   18c58:	b	18d00 <__assert_fail@plt+0x7c48>
   18c5c:	ldr	r0, [fp, #8]
   18c60:	cmp	r0, #0
   18c64:	bne	18c6c <__assert_fail@plt+0x7bb4>
   18c68:	b	18d00 <__assert_fail@plt+0x7c48>
   18c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c70:	cmp	r0, #0
   18c74:	bge	18cd4 <__assert_fail@plt+0x7c1c>
   18c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c7c:	cmn	r0, #1
   18c80:	bne	18cb8 <__assert_fail@plt+0x7c00>
   18c84:	b	18c88 <__assert_fail@plt+0x7bd0>
   18c88:	ldr	r0, [fp, #8]
   18c8c:	add	r0, r0, #-2147483648	; 0x80000000
   18c90:	movw	r1, #0
   18c94:	cmp	r1, r0
   18c98:	blt	18cec <__assert_fail@plt+0x7c34>
   18c9c:	b	18d00 <__assert_fail@plt+0x7c48>
   18ca0:	ldr	r0, [pc, #2740]	; 1975c <__assert_fail@plt+0x86a4>
   18ca4:	ldr	r1, [fp, #8]
   18ca8:	sub	r1, r1, #1
   18cac:	cmp	r0, r1
   18cb0:	blt	18cec <__assert_fail@plt+0x7c34>
   18cb4:	b	18d00 <__assert_fail@plt+0x7c48>
   18cb8:	ldr	r0, [pc, #2724]	; 19764 <__assert_fail@plt+0x86ac>
   18cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cc0:	sdiv	r0, r0, r1
   18cc4:	ldr	r1, [fp, #8]
   18cc8:	cmp	r0, r1
   18ccc:	blt	18cec <__assert_fail@plt+0x7c34>
   18cd0:	b	18d00 <__assert_fail@plt+0x7c48>
   18cd4:	ldr	r0, [pc, #2688]	; 1975c <__assert_fail@plt+0x86a4>
   18cd8:	ldr	r1, [fp, #8]
   18cdc:	sdiv	r0, r0, r1
   18ce0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ce4:	cmp	r0, r1
   18ce8:	bge	18d00 <__assert_fail@plt+0x7c48>
   18cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cf0:	ldr	r1, [fp, #8]
   18cf4:	mul	r0, r0, r1
   18cf8:	str	r0, [fp, #-28]	; 0xffffffe4
   18cfc:	b	19730 <__assert_fail@plt+0x8678>
   18d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d04:	ldr	r1, [fp, #8]
   18d08:	mul	r0, r0, r1
   18d0c:	str	r0, [fp, #-28]	; 0xffffffe4
   18d10:	b	19734 <__assert_fail@plt+0x867c>
   18d14:	ldr	r0, [fp, #8]
   18d18:	cmp	r0, #0
   18d1c:	bge	18e2c <__assert_fail@plt+0x7d74>
   18d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d24:	cmp	r0, #0
   18d28:	bge	18db4 <__assert_fail@plt+0x7cfc>
   18d2c:	b	18d4c <__assert_fail@plt+0x7c94>
   18d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d34:	ldr	r1, [fp, #8]
   18d38:	mvn	r2, #0
   18d3c:	udiv	r1, r2, r1
   18d40:	cmp	r0, r1
   18d44:	bcc	18ec8 <__assert_fail@plt+0x7e10>
   18d48:	b	18edc <__assert_fail@plt+0x7e24>
   18d4c:	b	18d50 <__assert_fail@plt+0x7c98>
   18d50:	ldr	r0, [pc, #2568]	; 19760 <__assert_fail@plt+0x86a8>
   18d54:	ldr	r1, [fp, #8]
   18d58:	cmp	r1, r0
   18d5c:	blt	18d74 <__assert_fail@plt+0x7cbc>
   18d60:	b	18d80 <__assert_fail@plt+0x7cc8>
   18d64:	ldr	r0, [fp, #8]
   18d68:	movw	r1, #0
   18d6c:	cmp	r1, r0
   18d70:	bge	18d80 <__assert_fail@plt+0x7cc8>
   18d74:	movw	r0, #1
   18d78:	str	r0, [sp, #68]	; 0x44
   18d7c:	b	18d98 <__assert_fail@plt+0x7ce0>
   18d80:	ldr	r0, [fp, #8]
   18d84:	movw	r1, #0
   18d88:	sub	r0, r1, r0
   18d8c:	mvn	r1, #0
   18d90:	udiv	r0, r1, r0
   18d94:	str	r0, [sp, #68]	; 0x44
   18d98:	ldr	r0, [sp, #68]	; 0x44
   18d9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18da0:	mvn	r2, #0
   18da4:	sub	r1, r2, r1
   18da8:	cmp	r0, r1
   18dac:	bls	18ec8 <__assert_fail@plt+0x7e10>
   18db0:	b	18edc <__assert_fail@plt+0x7e24>
   18db4:	b	18db8 <__assert_fail@plt+0x7d00>
   18db8:	b	18e10 <__assert_fail@plt+0x7d58>
   18dbc:	b	18e10 <__assert_fail@plt+0x7d58>
   18dc0:	ldr	r0, [fp, #8]
   18dc4:	cmn	r0, #1
   18dc8:	bne	18e10 <__assert_fail@plt+0x7d58>
   18dcc:	b	18dd0 <__assert_fail@plt+0x7d18>
   18dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd4:	add	r0, r0, #0
   18dd8:	movw	r1, #0
   18ddc:	cmp	r1, r0
   18de0:	blt	18ec8 <__assert_fail@plt+0x7e10>
   18de4:	b	18edc <__assert_fail@plt+0x7e24>
   18de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dec:	movw	r1, #0
   18df0:	cmp	r1, r0
   18df4:	bge	18edc <__assert_fail@plt+0x7e24>
   18df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dfc:	sub	r0, r0, #1
   18e00:	mvn	r1, #0
   18e04:	cmp	r1, r0
   18e08:	blt	18ec8 <__assert_fail@plt+0x7e10>
   18e0c:	b	18edc <__assert_fail@plt+0x7e24>
   18e10:	ldr	r0, [fp, #8]
   18e14:	movw	r1, #0
   18e18:	sdiv	r0, r1, r0
   18e1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e20:	cmp	r0, r1
   18e24:	blt	18ec8 <__assert_fail@plt+0x7e10>
   18e28:	b	18edc <__assert_fail@plt+0x7e24>
   18e2c:	ldr	r0, [fp, #8]
   18e30:	cmp	r0, #0
   18e34:	bne	18e3c <__assert_fail@plt+0x7d84>
   18e38:	b	18edc <__assert_fail@plt+0x7e24>
   18e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e40:	cmp	r0, #0
   18e44:	bge	18eb0 <__assert_fail@plt+0x7df8>
   18e48:	b	18e4c <__assert_fail@plt+0x7d94>
   18e4c:	b	18e94 <__assert_fail@plt+0x7ddc>
   18e50:	b	18e94 <__assert_fail@plt+0x7ddc>
   18e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e58:	cmn	r0, #1
   18e5c:	bne	18e94 <__assert_fail@plt+0x7ddc>
   18e60:	b	18e64 <__assert_fail@plt+0x7dac>
   18e64:	ldr	r0, [fp, #8]
   18e68:	add	r0, r0, #0
   18e6c:	movw	r1, #0
   18e70:	cmp	r1, r0
   18e74:	blt	18ec8 <__assert_fail@plt+0x7e10>
   18e78:	b	18edc <__assert_fail@plt+0x7e24>
   18e7c:	ldr	r0, [fp, #8]
   18e80:	sub	r0, r0, #1
   18e84:	mvn	r1, #0
   18e88:	cmp	r1, r0
   18e8c:	blt	18ec8 <__assert_fail@plt+0x7e10>
   18e90:	b	18edc <__assert_fail@plt+0x7e24>
   18e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e98:	movw	r1, #0
   18e9c:	sdiv	r0, r1, r0
   18ea0:	ldr	r1, [fp, #8]
   18ea4:	cmp	r0, r1
   18ea8:	blt	18ec8 <__assert_fail@plt+0x7e10>
   18eac:	b	18edc <__assert_fail@plt+0x7e24>
   18eb0:	ldr	r0, [fp, #8]
   18eb4:	mvn	r1, #0
   18eb8:	udiv	r0, r1, r0
   18ebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ec0:	cmp	r0, r1
   18ec4:	bcs	18edc <__assert_fail@plt+0x7e24>
   18ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ecc:	ldr	r1, [fp, #8]
   18ed0:	mul	r0, r0, r1
   18ed4:	str	r0, [fp, #-28]	; 0xffffffe4
   18ed8:	b	19730 <__assert_fail@plt+0x8678>
   18edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ee0:	ldr	r1, [fp, #8]
   18ee4:	mul	r0, r0, r1
   18ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   18eec:	b	19734 <__assert_fail@plt+0x867c>
   18ef0:	b	18ef4 <__assert_fail@plt+0x7e3c>
   18ef4:	b	18ef8 <__assert_fail@plt+0x7e40>
   18ef8:	ldr	r0, [fp, #8]
   18efc:	cmp	r0, #0
   18f00:	bge	19004 <__assert_fail@plt+0x7f4c>
   18f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f08:	cmp	r0, #0
   18f0c:	bge	18f98 <__assert_fail@plt+0x7ee0>
   18f10:	b	18f14 <__assert_fail@plt+0x7e5c>
   18f14:	ldr	r0, [pc, #2112]	; 1975c <__assert_fail@plt+0x86a4>
   18f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f1c:	ldr	r2, [fp, #8]
   18f20:	sdiv	r0, r0, r2
   18f24:	cmp	r1, r0
   18f28:	blt	19094 <__assert_fail@plt+0x7fdc>
   18f2c:	b	190a8 <__assert_fail@plt+0x7ff0>
   18f30:	b	18f34 <__assert_fail@plt+0x7e7c>
   18f34:	ldr	r0, [pc, #2084]	; 19760 <__assert_fail@plt+0x86a8>
   18f38:	ldr	r1, [fp, #8]
   18f3c:	cmp	r1, r0
   18f40:	blt	18f58 <__assert_fail@plt+0x7ea0>
   18f44:	b	18f64 <__assert_fail@plt+0x7eac>
   18f48:	ldr	r0, [fp, #8]
   18f4c:	movw	r1, #0
   18f50:	cmp	r1, r0
   18f54:	bge	18f64 <__assert_fail@plt+0x7eac>
   18f58:	movw	r0, #0
   18f5c:	str	r0, [sp, #64]	; 0x40
   18f60:	b	18f7c <__assert_fail@plt+0x7ec4>
   18f64:	ldr	r0, [pc, #2032]	; 1975c <__assert_fail@plt+0x86a4>
   18f68:	ldr	r1, [fp, #8]
   18f6c:	movw	r2, #0
   18f70:	sub	r1, r2, r1
   18f74:	sdiv	r0, r0, r1
   18f78:	str	r0, [sp, #64]	; 0x40
   18f7c:	ldr	r0, [sp, #64]	; 0x40
   18f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f84:	mvn	r2, #0
   18f88:	sub	r1, r2, r1
   18f8c:	cmp	r0, r1
   18f90:	ble	19094 <__assert_fail@plt+0x7fdc>
   18f94:	b	190a8 <__assert_fail@plt+0x7ff0>
   18f98:	ldr	r0, [fp, #8]
   18f9c:	cmn	r0, #1
   18fa0:	bne	18fe8 <__assert_fail@plt+0x7f30>
   18fa4:	b	18fa8 <__assert_fail@plt+0x7ef0>
   18fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fac:	add	r0, r0, #-2147483648	; 0x80000000
   18fb0:	movw	r1, #0
   18fb4:	cmp	r1, r0
   18fb8:	blt	19094 <__assert_fail@plt+0x7fdc>
   18fbc:	b	190a8 <__assert_fail@plt+0x7ff0>
   18fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc4:	movw	r1, #0
   18fc8:	cmp	r1, r0
   18fcc:	bge	190a8 <__assert_fail@plt+0x7ff0>
   18fd0:	ldr	r0, [pc, #1924]	; 1975c <__assert_fail@plt+0x86a4>
   18fd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fd8:	sub	r1, r1, #1
   18fdc:	cmp	r0, r1
   18fe0:	blt	19094 <__assert_fail@plt+0x7fdc>
   18fe4:	b	190a8 <__assert_fail@plt+0x7ff0>
   18fe8:	ldr	r0, [pc, #1908]	; 19764 <__assert_fail@plt+0x86ac>
   18fec:	ldr	r1, [fp, #8]
   18ff0:	sdiv	r0, r0, r1
   18ff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ff8:	cmp	r0, r1
   18ffc:	blt	19094 <__assert_fail@plt+0x7fdc>
   19000:	b	190a8 <__assert_fail@plt+0x7ff0>
   19004:	ldr	r0, [fp, #8]
   19008:	cmp	r0, #0
   1900c:	bne	19014 <__assert_fail@plt+0x7f5c>
   19010:	b	190a8 <__assert_fail@plt+0x7ff0>
   19014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19018:	cmp	r0, #0
   1901c:	bge	1907c <__assert_fail@plt+0x7fc4>
   19020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19024:	cmn	r0, #1
   19028:	bne	19060 <__assert_fail@plt+0x7fa8>
   1902c:	b	19030 <__assert_fail@plt+0x7f78>
   19030:	ldr	r0, [fp, #8]
   19034:	add	r0, r0, #-2147483648	; 0x80000000
   19038:	movw	r1, #0
   1903c:	cmp	r1, r0
   19040:	blt	19094 <__assert_fail@plt+0x7fdc>
   19044:	b	190a8 <__assert_fail@plt+0x7ff0>
   19048:	ldr	r0, [pc, #1804]	; 1975c <__assert_fail@plt+0x86a4>
   1904c:	ldr	r1, [fp, #8]
   19050:	sub	r1, r1, #1
   19054:	cmp	r0, r1
   19058:	blt	19094 <__assert_fail@plt+0x7fdc>
   1905c:	b	190a8 <__assert_fail@plt+0x7ff0>
   19060:	ldr	r0, [pc, #1788]	; 19764 <__assert_fail@plt+0x86ac>
   19064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19068:	sdiv	r0, r0, r1
   1906c:	ldr	r1, [fp, #8]
   19070:	cmp	r0, r1
   19074:	blt	19094 <__assert_fail@plt+0x7fdc>
   19078:	b	190a8 <__assert_fail@plt+0x7ff0>
   1907c:	ldr	r0, [pc, #1752]	; 1975c <__assert_fail@plt+0x86a4>
   19080:	ldr	r1, [fp, #8]
   19084:	sdiv	r0, r0, r1
   19088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1908c:	cmp	r0, r1
   19090:	bge	190a8 <__assert_fail@plt+0x7ff0>
   19094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19098:	ldr	r1, [fp, #8]
   1909c:	mul	r0, r0, r1
   190a0:	str	r0, [fp, #-28]	; 0xffffffe4
   190a4:	b	19730 <__assert_fail@plt+0x8678>
   190a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190ac:	ldr	r1, [fp, #8]
   190b0:	mul	r0, r0, r1
   190b4:	str	r0, [fp, #-28]	; 0xffffffe4
   190b8:	b	19734 <__assert_fail@plt+0x867c>
   190bc:	ldr	r0, [fp, #8]
   190c0:	cmp	r0, #0
   190c4:	bge	191d4 <__assert_fail@plt+0x811c>
   190c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190cc:	cmp	r0, #0
   190d0:	bge	1915c <__assert_fail@plt+0x80a4>
   190d4:	b	190f4 <__assert_fail@plt+0x803c>
   190d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190dc:	ldr	r1, [fp, #8]
   190e0:	mvn	r2, #0
   190e4:	udiv	r1, r2, r1
   190e8:	cmp	r0, r1
   190ec:	bcc	19270 <__assert_fail@plt+0x81b8>
   190f0:	b	19284 <__assert_fail@plt+0x81cc>
   190f4:	b	190f8 <__assert_fail@plt+0x8040>
   190f8:	ldr	r0, [pc, #1632]	; 19760 <__assert_fail@plt+0x86a8>
   190fc:	ldr	r1, [fp, #8]
   19100:	cmp	r1, r0
   19104:	blt	1911c <__assert_fail@plt+0x8064>
   19108:	b	19128 <__assert_fail@plt+0x8070>
   1910c:	ldr	r0, [fp, #8]
   19110:	movw	r1, #0
   19114:	cmp	r1, r0
   19118:	bge	19128 <__assert_fail@plt+0x8070>
   1911c:	movw	r0, #1
   19120:	str	r0, [sp, #60]	; 0x3c
   19124:	b	19140 <__assert_fail@plt+0x8088>
   19128:	ldr	r0, [fp, #8]
   1912c:	movw	r1, #0
   19130:	sub	r0, r1, r0
   19134:	mvn	r1, #0
   19138:	udiv	r0, r1, r0
   1913c:	str	r0, [sp, #60]	; 0x3c
   19140:	ldr	r0, [sp, #60]	; 0x3c
   19144:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19148:	mvn	r2, #0
   1914c:	sub	r1, r2, r1
   19150:	cmp	r0, r1
   19154:	bls	19270 <__assert_fail@plt+0x81b8>
   19158:	b	19284 <__assert_fail@plt+0x81cc>
   1915c:	b	19160 <__assert_fail@plt+0x80a8>
   19160:	b	191b8 <__assert_fail@plt+0x8100>
   19164:	b	191b8 <__assert_fail@plt+0x8100>
   19168:	ldr	r0, [fp, #8]
   1916c:	cmn	r0, #1
   19170:	bne	191b8 <__assert_fail@plt+0x8100>
   19174:	b	19178 <__assert_fail@plt+0x80c0>
   19178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1917c:	add	r0, r0, #0
   19180:	movw	r1, #0
   19184:	cmp	r1, r0
   19188:	blt	19270 <__assert_fail@plt+0x81b8>
   1918c:	b	19284 <__assert_fail@plt+0x81cc>
   19190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19194:	movw	r1, #0
   19198:	cmp	r1, r0
   1919c:	bge	19284 <__assert_fail@plt+0x81cc>
   191a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a4:	sub	r0, r0, #1
   191a8:	mvn	r1, #0
   191ac:	cmp	r1, r0
   191b0:	blt	19270 <__assert_fail@plt+0x81b8>
   191b4:	b	19284 <__assert_fail@plt+0x81cc>
   191b8:	ldr	r0, [fp, #8]
   191bc:	movw	r1, #0
   191c0:	sdiv	r0, r1, r0
   191c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191c8:	cmp	r0, r1
   191cc:	blt	19270 <__assert_fail@plt+0x81b8>
   191d0:	b	19284 <__assert_fail@plt+0x81cc>
   191d4:	ldr	r0, [fp, #8]
   191d8:	cmp	r0, #0
   191dc:	bne	191e4 <__assert_fail@plt+0x812c>
   191e0:	b	19284 <__assert_fail@plt+0x81cc>
   191e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191e8:	cmp	r0, #0
   191ec:	bge	19258 <__assert_fail@plt+0x81a0>
   191f0:	b	191f4 <__assert_fail@plt+0x813c>
   191f4:	b	1923c <__assert_fail@plt+0x8184>
   191f8:	b	1923c <__assert_fail@plt+0x8184>
   191fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19200:	cmn	r0, #1
   19204:	bne	1923c <__assert_fail@plt+0x8184>
   19208:	b	1920c <__assert_fail@plt+0x8154>
   1920c:	ldr	r0, [fp, #8]
   19210:	add	r0, r0, #0
   19214:	movw	r1, #0
   19218:	cmp	r1, r0
   1921c:	blt	19270 <__assert_fail@plt+0x81b8>
   19220:	b	19284 <__assert_fail@plt+0x81cc>
   19224:	ldr	r0, [fp, #8]
   19228:	sub	r0, r0, #1
   1922c:	mvn	r1, #0
   19230:	cmp	r1, r0
   19234:	blt	19270 <__assert_fail@plt+0x81b8>
   19238:	b	19284 <__assert_fail@plt+0x81cc>
   1923c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19240:	movw	r1, #0
   19244:	sdiv	r0, r1, r0
   19248:	ldr	r1, [fp, #8]
   1924c:	cmp	r0, r1
   19250:	blt	19270 <__assert_fail@plt+0x81b8>
   19254:	b	19284 <__assert_fail@plt+0x81cc>
   19258:	ldr	r0, [fp, #8]
   1925c:	mvn	r1, #0
   19260:	udiv	r0, r1, r0
   19264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19268:	cmp	r0, r1
   1926c:	bcs	19284 <__assert_fail@plt+0x81cc>
   19270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19274:	ldr	r1, [fp, #8]
   19278:	mul	r0, r0, r1
   1927c:	str	r0, [fp, #-28]	; 0xffffffe4
   19280:	b	19730 <__assert_fail@plt+0x8678>
   19284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19288:	ldr	r1, [fp, #8]
   1928c:	mul	r0, r0, r1
   19290:	str	r0, [fp, #-28]	; 0xffffffe4
   19294:	b	19734 <__assert_fail@plt+0x867c>
   19298:	b	1929c <__assert_fail@plt+0x81e4>
   1929c:	ldr	r0, [fp, #8]
   192a0:	cmp	r0, #0
   192a4:	bge	1940c <__assert_fail@plt+0x8354>
   192a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192ac:	cmp	r0, #0
   192b0:	bge	19388 <__assert_fail@plt+0x82d0>
   192b4:	b	192b8 <__assert_fail@plt+0x8200>
   192b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192bc:	ldr	r1, [fp, #8]
   192c0:	asr	r3, r1, #31
   192c4:	mvn	r2, #0
   192c8:	mvn	ip, #-2147483648	; 0x80000000
   192cc:	str	r0, [sp, #56]	; 0x38
   192d0:	mov	r0, r2
   192d4:	str	r1, [sp, #52]	; 0x34
   192d8:	mov	r1, ip
   192dc:	ldr	r2, [sp, #52]	; 0x34
   192e0:	bl	1dd0c <__assert_fail@plt+0xcc54>
   192e4:	ldr	r2, [sp, #56]	; 0x38
   192e8:	subs	r0, r2, r0
   192ec:	rscs	r1, r1, r2, asr #31
   192f0:	blt	194d4 <__assert_fail@plt+0x841c>
   192f4:	b	194e8 <__assert_fail@plt+0x8430>
   192f8:	b	192fc <__assert_fail@plt+0x8244>
   192fc:	ldr	r0, [pc, #1116]	; 19760 <__assert_fail@plt+0x86a8>
   19300:	ldr	r1, [fp, #8]
   19304:	cmp	r1, r0
   19308:	blt	19320 <__assert_fail@plt+0x8268>
   1930c:	b	19334 <__assert_fail@plt+0x827c>
   19310:	ldr	r0, [fp, #8]
   19314:	movw	r1, #0
   19318:	cmp	r1, r0
   1931c:	bge	19334 <__assert_fail@plt+0x827c>
   19320:	mov	r0, #0
   19324:	mvn	r1, #0
   19328:	str	r1, [sp, #48]	; 0x30
   1932c:	str	r0, [sp, #44]	; 0x2c
   19330:	b	19368 <__assert_fail@plt+0x82b0>
   19334:	ldr	r0, [fp, #8]
   19338:	rsb	r0, r0, #0
   1933c:	asr	r3, r0, #31
   19340:	mvn	r1, #0
   19344:	mvn	r2, #-2147483648	; 0x80000000
   19348:	str	r0, [sp, #40]	; 0x28
   1934c:	mov	r0, r1
   19350:	mov	r1, r2
   19354:	ldr	r2, [sp, #40]	; 0x28
   19358:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1935c:	str	r0, [sp, #48]	; 0x30
   19360:	str	r1, [sp, #44]	; 0x2c
   19364:	b	19368 <__assert_fail@plt+0x82b0>
   19368:	ldr	r0, [sp, #44]	; 0x2c
   1936c:	ldr	r1, [sp, #48]	; 0x30
   19370:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19374:	mvn	r2, r2
   19378:	subs	r1, r2, r1
   1937c:	rscs	r0, r0, r2, asr #31
   19380:	bge	194d4 <__assert_fail@plt+0x841c>
   19384:	b	194e8 <__assert_fail@plt+0x8430>
   19388:	ldr	r0, [fp, #8]
   1938c:	cmn	r0, #1
   19390:	bne	193d4 <__assert_fail@plt+0x831c>
   19394:	b	19398 <__assert_fail@plt+0x82e0>
   19398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1939c:	mov	r1, #-2147483648	; 0x80000000
   193a0:	add	r1, r1, r0, asr #31
   193a4:	rsbs	r0, r0, #0
   193a8:	rscs	r1, r1, #0
   193ac:	blt	194d4 <__assert_fail@plt+0x841c>
   193b0:	b	194e8 <__assert_fail@plt+0x8430>
   193b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193b8:	movw	r1, #0
   193bc:	cmp	r1, r0
   193c0:	bge	194e8 <__assert_fail@plt+0x8430>
   193c4:	mov	r0, #0
   193c8:	cmp	r0, #0
   193cc:	bne	194d4 <__assert_fail@plt+0x841c>
   193d0:	b	194e8 <__assert_fail@plt+0x8430>
   193d4:	ldr	r0, [fp, #8]
   193d8:	asr	r3, r0, #31
   193dc:	mov	r1, #0
   193e0:	mov	r2, #-2147483648	; 0x80000000
   193e4:	str	r0, [sp, #36]	; 0x24
   193e8:	mov	r0, r1
   193ec:	mov	r1, r2
   193f0:	ldr	r2, [sp, #36]	; 0x24
   193f4:	bl	1dd0c <__assert_fail@plt+0xcc54>
   193f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   193fc:	subs	r0, r0, r2
   19400:	sbcs	r1, r1, r2, asr #31
   19404:	blt	194d4 <__assert_fail@plt+0x841c>
   19408:	b	194e8 <__assert_fail@plt+0x8430>
   1940c:	ldr	r0, [fp, #8]
   19410:	cmp	r0, #0
   19414:	bne	1941c <__assert_fail@plt+0x8364>
   19418:	b	194e8 <__assert_fail@plt+0x8430>
   1941c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19420:	cmp	r0, #0
   19424:	bge	1949c <__assert_fail@plt+0x83e4>
   19428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1942c:	cmn	r0, #1
   19430:	bne	19464 <__assert_fail@plt+0x83ac>
   19434:	b	19438 <__assert_fail@plt+0x8380>
   19438:	ldr	r0, [fp, #8]
   1943c:	mov	r1, #-2147483648	; 0x80000000
   19440:	add	r1, r1, r0, asr #31
   19444:	rsbs	r0, r0, #0
   19448:	rscs	r1, r1, #0
   1944c:	blt	194d4 <__assert_fail@plt+0x841c>
   19450:	b	194e8 <__assert_fail@plt+0x8430>
   19454:	mov	r0, #0
   19458:	cmp	r0, #0
   1945c:	bne	194d4 <__assert_fail@plt+0x841c>
   19460:	b	194e8 <__assert_fail@plt+0x8430>
   19464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19468:	asr	r3, r0, #31
   1946c:	mov	r1, #0
   19470:	mov	r2, #-2147483648	; 0x80000000
   19474:	str	r0, [sp, #32]
   19478:	mov	r0, r1
   1947c:	mov	r1, r2
   19480:	ldr	r2, [sp, #32]
   19484:	bl	1dd0c <__assert_fail@plt+0xcc54>
   19488:	ldr	r2, [fp, #8]
   1948c:	subs	r0, r0, r2
   19490:	sbcs	r1, r1, r2, asr #31
   19494:	blt	194d4 <__assert_fail@plt+0x841c>
   19498:	b	194e8 <__assert_fail@plt+0x8430>
   1949c:	ldr	r0, [fp, #8]
   194a0:	asr	r3, r0, #31
   194a4:	mvn	r1, #0
   194a8:	mvn	r2, #-2147483648	; 0x80000000
   194ac:	str	r0, [sp, #28]
   194b0:	mov	r0, r1
   194b4:	mov	r1, r2
   194b8:	ldr	r2, [sp, #28]
   194bc:	bl	1dd0c <__assert_fail@plt+0xcc54>
   194c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   194c4:	subs	r0, r0, r2
   194c8:	sbcs	r1, r1, r2, asr #31
   194cc:	bge	194e8 <__assert_fail@plt+0x8430>
   194d0:	b	194d4 <__assert_fail@plt+0x841c>
   194d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194d8:	ldr	r1, [fp, #8]
   194dc:	mul	r0, r0, r1
   194e0:	str	r0, [fp, #-28]	; 0xffffffe4
   194e4:	b	19730 <__assert_fail@plt+0x8678>
   194e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194ec:	ldr	r1, [fp, #8]
   194f0:	mul	r0, r0, r1
   194f4:	str	r0, [fp, #-28]	; 0xffffffe4
   194f8:	b	19734 <__assert_fail@plt+0x867c>
   194fc:	ldr	r0, [fp, #8]
   19500:	cmp	r0, #0
   19504:	bge	19654 <__assert_fail@plt+0x859c>
   19508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1950c:	cmp	r0, #0
   19510:	bge	195dc <__assert_fail@plt+0x8524>
   19514:	b	19554 <__assert_fail@plt+0x849c>
   19518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1951c:	ldr	r1, [fp, #8]
   19520:	asr	r3, r1, #31
   19524:	mvn	r2, #0
   19528:	str	r0, [sp, #24]
   1952c:	mov	r0, r2
   19530:	str	r1, [sp, #20]
   19534:	mov	r1, r2
   19538:	ldr	r2, [sp, #20]
   1953c:	bl	1dde0 <__assert_fail@plt+0xcd28>
   19540:	ldr	r2, [sp, #24]
   19544:	subs	r0, r2, r0
   19548:	rscs	r1, r1, r2, asr #31
   1954c:	bcc	19708 <__assert_fail@plt+0x8650>
   19550:	b	1971c <__assert_fail@plt+0x8664>
   19554:	b	19558 <__assert_fail@plt+0x84a0>
   19558:	ldr	r0, [pc, #512]	; 19760 <__assert_fail@plt+0x86a8>
   1955c:	ldr	r1, [fp, #8]
   19560:	cmp	r1, r0
   19564:	blt	1957c <__assert_fail@plt+0x84c4>
   19568:	b	19590 <__assert_fail@plt+0x84d8>
   1956c:	ldr	r0, [fp, #8]
   19570:	movw	r1, #0
   19574:	cmp	r1, r0
   19578:	bge	19590 <__assert_fail@plt+0x84d8>
   1957c:	mov	r0, #1
   19580:	mvn	r1, #0
   19584:	str	r1, [sp, #16]
   19588:	str	r0, [sp, #12]
   1958c:	b	195bc <__assert_fail@plt+0x8504>
   19590:	ldr	r0, [fp, #8]
   19594:	rsb	r0, r0, #0
   19598:	asr	r3, r0, #31
   1959c:	mvn	r1, #0
   195a0:	str	r0, [sp, #8]
   195a4:	mov	r0, r1
   195a8:	ldr	r2, [sp, #8]
   195ac:	bl	1dde0 <__assert_fail@plt+0xcd28>
   195b0:	str	r0, [sp, #16]
   195b4:	str	r1, [sp, #12]
   195b8:	b	195bc <__assert_fail@plt+0x8504>
   195bc:	ldr	r0, [sp, #12]
   195c0:	ldr	r1, [sp, #16]
   195c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   195c8:	mvn	r2, r2
   195cc:	subs	r1, r2, r1
   195d0:	rscs	r0, r0, r2, asr #31
   195d4:	bcs	19708 <__assert_fail@plt+0x8650>
   195d8:	b	1971c <__assert_fail@plt+0x8664>
   195dc:	b	195e0 <__assert_fail@plt+0x8528>
   195e0:	b	19638 <__assert_fail@plt+0x8580>
   195e4:	b	19638 <__assert_fail@plt+0x8580>
   195e8:	ldr	r0, [fp, #8]
   195ec:	cmn	r0, #1
   195f0:	bne	19638 <__assert_fail@plt+0x8580>
   195f4:	b	195f8 <__assert_fail@plt+0x8540>
   195f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195fc:	add	r0, r0, #0
   19600:	movw	r1, #0
   19604:	cmp	r1, r0
   19608:	blt	19708 <__assert_fail@plt+0x8650>
   1960c:	b	1971c <__assert_fail@plt+0x8664>
   19610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19614:	movw	r1, #0
   19618:	cmp	r1, r0
   1961c:	bge	1971c <__assert_fail@plt+0x8664>
   19620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19624:	sub	r0, r0, #1
   19628:	mvn	r1, #0
   1962c:	cmp	r1, r0
   19630:	blt	19708 <__assert_fail@plt+0x8650>
   19634:	b	1971c <__assert_fail@plt+0x8664>
   19638:	ldr	r0, [fp, #8]
   1963c:	movw	r1, #0
   19640:	sdiv	r0, r1, r0
   19644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19648:	cmp	r0, r1
   1964c:	blt	19708 <__assert_fail@plt+0x8650>
   19650:	b	1971c <__assert_fail@plt+0x8664>
   19654:	ldr	r0, [fp, #8]
   19658:	cmp	r0, #0
   1965c:	bne	19664 <__assert_fail@plt+0x85ac>
   19660:	b	1971c <__assert_fail@plt+0x8664>
   19664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19668:	cmp	r0, #0
   1966c:	bge	196d8 <__assert_fail@plt+0x8620>
   19670:	b	19674 <__assert_fail@plt+0x85bc>
   19674:	b	196bc <__assert_fail@plt+0x8604>
   19678:	b	196bc <__assert_fail@plt+0x8604>
   1967c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19680:	cmn	r0, #1
   19684:	bne	196bc <__assert_fail@plt+0x8604>
   19688:	b	1968c <__assert_fail@plt+0x85d4>
   1968c:	ldr	r0, [fp, #8]
   19690:	add	r0, r0, #0
   19694:	movw	r1, #0
   19698:	cmp	r1, r0
   1969c:	blt	19708 <__assert_fail@plt+0x8650>
   196a0:	b	1971c <__assert_fail@plt+0x8664>
   196a4:	ldr	r0, [fp, #8]
   196a8:	sub	r0, r0, #1
   196ac:	mvn	r1, #0
   196b0:	cmp	r1, r0
   196b4:	blt	19708 <__assert_fail@plt+0x8650>
   196b8:	b	1971c <__assert_fail@plt+0x8664>
   196bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196c0:	movw	r1, #0
   196c4:	sdiv	r0, r1, r0
   196c8:	ldr	r1, [fp, #8]
   196cc:	cmp	r0, r1
   196d0:	blt	19708 <__assert_fail@plt+0x8650>
   196d4:	b	1971c <__assert_fail@plt+0x8664>
   196d8:	ldr	r0, [fp, #8]
   196dc:	asr	r3, r0, #31
   196e0:	mvn	r1, #0
   196e4:	str	r0, [sp, #4]
   196e8:	mov	r0, r1
   196ec:	ldr	r2, [sp, #4]
   196f0:	bl	1dde0 <__assert_fail@plt+0xcd28>
   196f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   196f8:	subs	r0, r0, r2
   196fc:	sbcs	r1, r1, r2, asr #31
   19700:	bcs	1971c <__assert_fail@plt+0x8664>
   19704:	b	19708 <__assert_fail@plt+0x8650>
   19708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1970c:	ldr	r1, [fp, #8]
   19710:	mul	r0, r0, r1
   19714:	str	r0, [fp, #-28]	; 0xffffffe4
   19718:	b	19730 <__assert_fail@plt+0x8678>
   1971c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19720:	ldr	r1, [fp, #8]
   19724:	mul	r0, r0, r1
   19728:	str	r0, [fp, #-28]	; 0xffffffe4
   1972c:	b	19734 <__assert_fail@plt+0x867c>
   19730:	bl	1990c <__assert_fail@plt+0x8854>
   19734:	ldr	r0, [fp, #-4]
   19738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1973c:	bl	16c6c <__assert_fail@plt+0x5bb4>
   19740:	str	r0, [fp, #-4]
   19744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19748:	ldr	r1, [fp, #-8]
   1974c:	str	r0, [r1]
   19750:	ldr	r0, [fp, #-4]
   19754:	mov	sp, fp
   19758:	pop	{fp, pc}
   1975c:	svcvc	0x00ffffff
   19760:	andhi	r0, r0, r1
   19764:	andhi	r0, r0, r0
   19768:			; <UNDEFINED> instruction: 0xffff8000
   1976c:	push	{fp, lr}
   19770:	mov	fp, sp
   19774:	sub	sp, sp, #8
   19778:	str	r0, [sp, #4]
   1977c:	ldr	r0, [sp, #4]
   19780:	movw	r1, #1
   19784:	bl	19790 <__assert_fail@plt+0x86d8>
   19788:	mov	sp, fp
   1978c:	pop	{fp, pc}
   19790:	push	{fp, lr}
   19794:	mov	fp, sp
   19798:	sub	sp, sp, #8
   1979c:	str	r0, [sp, #4]
   197a0:	str	r1, [sp]
   197a4:	ldr	r0, [sp, #4]
   197a8:	ldr	r1, [sp]
   197ac:	bl	1bb3c <__assert_fail@plt+0xaa84>
   197b0:	bl	16bf8 <__assert_fail@plt+0x5b40>
   197b4:	mov	sp, fp
   197b8:	pop	{fp, pc}
   197bc:	push	{fp, lr}
   197c0:	mov	fp, sp
   197c4:	sub	sp, sp, #8
   197c8:	str	r0, [sp, #4]
   197cc:	ldr	r0, [sp, #4]
   197d0:	movw	r1, #1
   197d4:	bl	197e0 <__assert_fail@plt+0x8728>
   197d8:	mov	sp, fp
   197dc:	pop	{fp, pc}
   197e0:	push	{fp, lr}
   197e4:	mov	fp, sp
   197e8:	sub	sp, sp, #8
   197ec:	str	r0, [sp, #4]
   197f0:	str	r1, [sp]
   197f4:	ldr	r0, [sp, #4]
   197f8:	ldr	r1, [sp]
   197fc:	bl	1bf78 <__assert_fail@plt+0xaec0>
   19800:	bl	16bf8 <__assert_fail@plt+0x5b40>
   19804:	mov	sp, fp
   19808:	pop	{fp, pc}
   1980c:	push	{fp, lr}
   19810:	mov	fp, sp
   19814:	sub	sp, sp, #16
   19818:	str	r0, [fp, #-4]
   1981c:	str	r1, [sp, #8]
   19820:	ldr	r0, [sp, #8]
   19824:	bl	16bd4 <__assert_fail@plt+0x5b1c>
   19828:	ldr	r1, [fp, #-4]
   1982c:	ldr	r2, [sp, #8]
   19830:	str	r0, [sp, #4]
   19834:	bl	10ec0 <memcpy@plt>
   19838:	ldr	r0, [sp, #4]
   1983c:	mov	sp, fp
   19840:	pop	{fp, pc}
   19844:	push	{fp, lr}
   19848:	mov	fp, sp
   1984c:	sub	sp, sp, #16
   19850:	str	r0, [fp, #-4]
   19854:	str	r1, [sp, #8]
   19858:	ldr	r0, [sp, #8]
   1985c:	bl	16c28 <__assert_fail@plt+0x5b70>
   19860:	ldr	r1, [fp, #-4]
   19864:	ldr	r2, [sp, #8]
   19868:	str	r0, [sp, #4]
   1986c:	bl	10ec0 <memcpy@plt>
   19870:	ldr	r0, [sp, #4]
   19874:	mov	sp, fp
   19878:	pop	{fp, pc}
   1987c:	push	{fp, lr}
   19880:	mov	fp, sp
   19884:	sub	sp, sp, #16
   19888:	str	r0, [fp, #-4]
   1988c:	str	r1, [sp, #8]
   19890:	ldr	r0, [sp, #8]
   19894:	add	r0, r0, #1
   19898:	bl	16c28 <__assert_fail@plt+0x5b70>
   1989c:	str	r0, [sp, #4]
   198a0:	ldr	r0, [sp, #4]
   198a4:	ldr	r1, [sp, #8]
   198a8:	add	r0, r0, r1
   198ac:	movw	r1, #0
   198b0:	strb	r1, [r0]
   198b4:	ldr	r0, [sp, #4]
   198b8:	ldr	r1, [fp, #-4]
   198bc:	ldr	r2, [sp, #8]
   198c0:	str	r0, [sp]
   198c4:	bl	10ec0 <memcpy@plt>
   198c8:	ldr	r0, [sp]
   198cc:	mov	sp, fp
   198d0:	pop	{fp, pc}
   198d4:	push	{fp, lr}
   198d8:	mov	fp, sp
   198dc:	sub	sp, sp, #8
   198e0:	str	r0, [sp, #4]
   198e4:	ldr	r0, [sp, #4]
   198e8:	ldr	r1, [sp, #4]
   198ec:	str	r0, [sp]
   198f0:	mov	r0, r1
   198f4:	bl	10fc8 <strlen@plt>
   198f8:	add	r1, r0, #1
   198fc:	ldr	r0, [sp]
   19900:	bl	1980c <__assert_fail@plt+0x8754>
   19904:	mov	sp, fp
   19908:	pop	{fp, pc}
   1990c:	push	{fp, lr}
   19910:	mov	fp, sp
   19914:	sub	sp, sp, #8
   19918:	movw	r0, #61680	; 0xf0f0
   1991c:	movt	r0, #2
   19920:	ldr	r0, [r0]
   19924:	movw	r1, #60320	; 0xeba0
   19928:	movt	r1, #1
   1992c:	str	r0, [sp, #4]
   19930:	mov	r0, r1
   19934:	bl	10fbc <gettext@plt>
   19938:	ldr	r1, [sp, #4]
   1993c:	str	r0, [sp]
   19940:	mov	r0, r1
   19944:	movw	r1, #0
   19948:	movw	r2, #59271	; 0xe787
   1994c:	movt	r2, #1
   19950:	ldr	r3, [sp]
   19954:	bl	10f5c <error@plt>
   19958:	bl	110a0 <abort@plt>
   1995c:	push	{r4, r5, r6, sl, fp, lr}
   19960:	add	fp, sp, #16
   19964:	sub	sp, sp, #88	; 0x58
   19968:	ldr	ip, [fp, #12]
   1996c:	ldr	lr, [fp, #8]
   19970:	ldr	r4, [fp, #24]
   19974:	ldr	r5, [fp, #20]
   19978:	ldr	r6, [fp, #16]
   1997c:	str	r0, [fp, #-20]	; 0xffffffec
   19980:	str	r1, [fp, #-24]	; 0xffffffe8
   19984:	str	r3, [fp, #-28]	; 0xffffffe4
   19988:	str	r2, [fp, #-32]	; 0xffffffe0
   1998c:	str	ip, [fp, #-36]	; 0xffffffdc
   19990:	str	lr, [fp, #-40]	; 0xffffffd8
   19994:	ldr	r0, [fp, #-20]	; 0xffffffec
   19998:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1999c:	ldr	r1, [fp, #16]
   199a0:	movw	r3, #0
   199a4:	str	r1, [sp, #44]	; 0x2c
   199a8:	mov	r1, r3
   199ac:	add	r3, sp, #48	; 0x30
   199b0:	ldr	ip, [sp, #44]	; 0x2c
   199b4:	str	ip, [sp]
   199b8:	str	r4, [sp, #40]	; 0x28
   199bc:	str	r5, [sp, #36]	; 0x24
   199c0:	str	r6, [sp, #32]
   199c4:	bl	19bd4 <__assert_fail@plt+0x8b1c>
   199c8:	str	r0, [fp, #-44]	; 0xffffffd4
   199cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199d0:	cmp	r0, #0
   199d4:	bne	19a5c <__assert_fail@plt+0x89a4>
   199d8:	ldr	r0, [sp, #48]	; 0x30
   199dc:	ldr	r1, [sp, #52]	; 0x34
   199e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   199e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   199e8:	subs	r0, r0, r2
   199ec:	sbcs	r1, r1, r3
   199f0:	bcc	19a18 <__assert_fail@plt+0x8960>
   199f4:	b	199f8 <__assert_fail@plt+0x8940>
   199f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a00:	ldr	r2, [sp, #48]	; 0x30
   19a04:	ldr	r3, [sp, #52]	; 0x34
   19a08:	subs	r0, r0, r2
   19a0c:	sbcs	r1, r1, r3
   19a10:	bcs	19a58 <__assert_fail@plt+0x89a0>
   19a14:	b	19a18 <__assert_fail@plt+0x8960>
   19a18:	mov	r0, #1
   19a1c:	str	r0, [fp, #-44]	; 0xffffffd4
   19a20:	ldr	r0, [sp, #48]	; 0x30
   19a24:	ldr	r1, [sp, #52]	; 0x34
   19a28:	subs	r0, r0, #1073741824	; 0x40000000
   19a2c:	sbcs	r1, r1, #0
   19a30:	bcc	19a48 <__assert_fail@plt+0x8990>
   19a34:	b	19a38 <__assert_fail@plt+0x8980>
   19a38:	bl	10fec <__errno_location@plt>
   19a3c:	movw	r1, #75	; 0x4b
   19a40:	str	r1, [r0]
   19a44:	b	19a54 <__assert_fail@plt+0x899c>
   19a48:	bl	10fec <__errno_location@plt>
   19a4c:	movw	r1, #34	; 0x22
   19a50:	str	r1, [r0]
   19a54:	b	19a58 <__assert_fail@plt+0x89a0>
   19a58:	b	19a98 <__assert_fail@plt+0x89e0>
   19a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a60:	cmp	r0, #1
   19a64:	bne	19a78 <__assert_fail@plt+0x89c0>
   19a68:	bl	10fec <__errno_location@plt>
   19a6c:	movw	r1, #75	; 0x4b
   19a70:	str	r1, [r0]
   19a74:	b	19a94 <__assert_fail@plt+0x89dc>
   19a78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a7c:	cmp	r0, #3
   19a80:	bne	19a90 <__assert_fail@plt+0x89d8>
   19a84:	bl	10fec <__errno_location@plt>
   19a88:	movw	r1, #0
   19a8c:	str	r1, [r0]
   19a90:	b	19a94 <__assert_fail@plt+0x89dc>
   19a94:	b	19a98 <__assert_fail@plt+0x89e0>
   19a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a9c:	cmp	r0, #0
   19aa0:	beq	19b3c <__assert_fail@plt+0x8a84>
   19aa4:	ldr	r0, [fp, #24]
   19aa8:	cmp	r0, #0
   19aac:	beq	19abc <__assert_fail@plt+0x8a04>
   19ab0:	ldr	r0, [fp, #24]
   19ab4:	str	r0, [sp, #28]
   19ab8:	b	19ac8 <__assert_fail@plt+0x8a10>
   19abc:	movw	r0, #1
   19ac0:	str	r0, [sp, #28]
   19ac4:	b	19ac8 <__assert_fail@plt+0x8a10>
   19ac8:	ldr	r0, [sp, #28]
   19acc:	str	r0, [sp, #24]
   19ad0:	bl	10fec <__errno_location@plt>
   19ad4:	ldr	r0, [r0]
   19ad8:	cmp	r0, #22
   19adc:	bne	19aec <__assert_fail@plt+0x8a34>
   19ae0:	movw	r0, #0
   19ae4:	str	r0, [sp, #20]
   19ae8:	b	19af8 <__assert_fail@plt+0x8a40>
   19aec:	bl	10fec <__errno_location@plt>
   19af0:	ldr	r0, [r0]
   19af4:	str	r0, [sp, #20]
   19af8:	ldr	r0, [sp, #20]
   19afc:	ldr	r3, [fp, #20]
   19b00:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b04:	str	r0, [sp, #16]
   19b08:	mov	r0, r1
   19b0c:	str	r3, [sp, #12]
   19b10:	bl	161d0 <__assert_fail@plt+0x5118>
   19b14:	ldr	r1, [sp, #24]
   19b18:	str	r0, [sp, #8]
   19b1c:	mov	r0, r1
   19b20:	ldr	r1, [sp, #16]
   19b24:	movw	r2, #59267	; 0xe783
   19b28:	movt	r2, #1
   19b2c:	ldr	r3, [sp, #12]
   19b30:	ldr	ip, [sp, #8]
   19b34:	str	ip, [sp]
   19b38:	bl	10f5c <error@plt>
   19b3c:	ldr	r0, [sp, #48]	; 0x30
   19b40:	ldr	r1, [sp, #52]	; 0x34
   19b44:	sub	sp, fp, #16
   19b48:	pop	{r4, r5, r6, sl, fp, pc}
   19b4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19b50:	add	fp, sp, #24
   19b54:	sub	sp, sp, #56	; 0x38
   19b58:	ldr	r1, [fp, #12]
   19b5c:	ldr	ip, [fp, #8]
   19b60:	ldr	lr, [fp, #24]
   19b64:	ldr	r4, [fp, #20]
   19b68:	ldr	r5, [fp, #16]
   19b6c:	str	r0, [fp, #-28]	; 0xffffffe4
   19b70:	str	r3, [sp, #44]	; 0x2c
   19b74:	str	r2, [sp, #40]	; 0x28
   19b78:	str	r1, [sp, #36]	; 0x24
   19b7c:	str	ip, [sp, #32]
   19b80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b84:	ldr	r2, [sp, #40]	; 0x28
   19b88:	ldr	r3, [sp, #44]	; 0x2c
   19b8c:	ldr	r1, [sp, #32]
   19b90:	ldr	ip, [sp, #36]	; 0x24
   19b94:	ldr	r6, [fp, #16]
   19b98:	ldr	r7, [fp, #20]
   19b9c:	ldr	r8, [fp, #24]
   19ba0:	mov	r9, sp
   19ba4:	str	r8, [r9, #16]
   19ba8:	str	r7, [r9, #12]
   19bac:	str	r6, [r9, #8]
   19bb0:	str	ip, [r9, #4]
   19bb4:	str	r1, [r9]
   19bb8:	mov	r1, #10
   19bbc:	str	lr, [sp, #28]
   19bc0:	str	r4, [sp, #24]
   19bc4:	str	r5, [sp, #20]
   19bc8:	bl	1995c <__assert_fail@plt+0x88a4>
   19bcc:	sub	sp, fp, #24
   19bd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19bd4:	push	{fp, lr}
   19bd8:	mov	fp, sp
   19bdc:	sub	sp, sp, #80	; 0x50
   19be0:	ldr	ip, [fp, #8]
   19be4:	str	r0, [fp, #-8]
   19be8:	str	r1, [fp, #-12]
   19bec:	str	r2, [fp, #-16]
   19bf0:	str	r3, [fp, #-20]	; 0xffffffec
   19bf4:	movw	r0, #0
   19bf8:	str	r0, [sp, #36]	; 0x24
   19bfc:	ldr	r1, [fp, #-16]
   19c00:	cmp	r0, r1
   19c04:	bgt	19c18 <__assert_fail@plt+0x8b60>
   19c08:	ldr	r0, [fp, #-16]
   19c0c:	cmp	r0, #36	; 0x24
   19c10:	bgt	19c18 <__assert_fail@plt+0x8b60>
   19c14:	b	19c38 <__assert_fail@plt+0x8b80>
   19c18:	movw	r0, #60337	; 0xebb1
   19c1c:	movt	r0, #1
   19c20:	movw	r1, #60375	; 0xebd7
   19c24:	movt	r1, #1
   19c28:	movw	r2, #85	; 0x55
   19c2c:	movw	r3, #60391	; 0xebe7
   19c30:	movt	r3, #1
   19c34:	bl	110b8 <__assert_fail@plt>
   19c38:	ldr	r0, [fp, #-12]
   19c3c:	movw	r1, #0
   19c40:	cmp	r0, r1
   19c44:	beq	19c54 <__assert_fail@plt+0x8b9c>
   19c48:	ldr	r0, [fp, #-12]
   19c4c:	str	r0, [sp, #12]
   19c50:	b	19c60 <__assert_fail@plt+0x8ba8>
   19c54:	sub	r0, fp, #24
   19c58:	str	r0, [sp, #12]
   19c5c:	b	19c60 <__assert_fail@plt+0x8ba8>
   19c60:	ldr	r0, [sp, #12]
   19c64:	str	r0, [fp, #-28]	; 0xffffffe4
   19c68:	bl	10fec <__errno_location@plt>
   19c6c:	movw	r1, #0
   19c70:	str	r1, [r0]
   19c74:	ldr	r0, [fp, #-8]
   19c78:	str	r0, [sp, #32]
   19c7c:	ldr	r0, [sp, #32]
   19c80:	ldrb	r0, [r0]
   19c84:	strb	r0, [sp, #31]
   19c88:	bl	10fa4 <__ctype_b_loc@plt>
   19c8c:	ldr	r0, [r0]
   19c90:	ldrb	r1, [sp, #31]
   19c94:	mov	r2, r1
   19c98:	add	r0, r0, r1, lsl #1
   19c9c:	ldrh	r0, [r0]
   19ca0:	and	r0, r0, #8192	; 0x2000
   19ca4:	cmp	r0, #0
   19ca8:	beq	19cc4 <__assert_fail@plt+0x8c0c>
   19cac:	ldr	r0, [sp, #32]
   19cb0:	add	r1, r0, #1
   19cb4:	str	r1, [sp, #32]
   19cb8:	ldrb	r0, [r0, #1]
   19cbc:	strb	r0, [sp, #31]
   19cc0:	b	19c88 <__assert_fail@plt+0x8bd0>
   19cc4:	ldrb	r0, [sp, #31]
   19cc8:	cmp	r0, #45	; 0x2d
   19ccc:	bne	19cdc <__assert_fail@plt+0x8c24>
   19cd0:	movw	r0, #4
   19cd4:	str	r0, [fp, #-4]
   19cd8:	b	1a258 <__assert_fail@plt+0x91a0>
   19cdc:	ldr	r0, [fp, #-8]
   19ce0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ce4:	ldr	r2, [fp, #-16]
   19ce8:	bl	1101c <strtoumax@plt>
   19cec:	str	r1, [sp, #44]	; 0x2c
   19cf0:	str	r0, [sp, #40]	; 0x28
   19cf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cf8:	ldr	r0, [r0]
   19cfc:	ldr	r1, [fp, #-8]
   19d00:	cmp	r0, r1
   19d04:	bne	19d70 <__assert_fail@plt+0x8cb8>
   19d08:	ldr	r0, [fp, #8]
   19d0c:	movw	r1, #0
   19d10:	cmp	r0, r1
   19d14:	beq	19d60 <__assert_fail@plt+0x8ca8>
   19d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19d1c:	ldr	r0, [r0]
   19d20:	ldrb	r0, [r0]
   19d24:	cmp	r0, #0
   19d28:	beq	19d60 <__assert_fail@plt+0x8ca8>
   19d2c:	ldr	r0, [fp, #8]
   19d30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d34:	ldr	r1, [r1]
   19d38:	ldrb	r1, [r1]
   19d3c:	bl	10fd4 <strchr@plt>
   19d40:	movw	r1, #0
   19d44:	cmp	r0, r1
   19d48:	beq	19d60 <__assert_fail@plt+0x8ca8>
   19d4c:	mov	r0, #0
   19d50:	str	r0, [sp, #44]	; 0x2c
   19d54:	mov	r0, #1
   19d58:	str	r0, [sp, #40]	; 0x28
   19d5c:	b	19d6c <__assert_fail@plt+0x8cb4>
   19d60:	movw	r0, #4
   19d64:	str	r0, [fp, #-4]
   19d68:	b	1a258 <__assert_fail@plt+0x91a0>
   19d6c:	b	19da8 <__assert_fail@plt+0x8cf0>
   19d70:	bl	10fec <__errno_location@plt>
   19d74:	ldr	r0, [r0]
   19d78:	cmp	r0, #0
   19d7c:	beq	19da4 <__assert_fail@plt+0x8cec>
   19d80:	bl	10fec <__errno_location@plt>
   19d84:	ldr	r0, [r0]
   19d88:	cmp	r0, #34	; 0x22
   19d8c:	beq	19d9c <__assert_fail@plt+0x8ce4>
   19d90:	movw	r0, #4
   19d94:	str	r0, [fp, #-4]
   19d98:	b	1a258 <__assert_fail@plt+0x91a0>
   19d9c:	movw	r0, #1
   19da0:	str	r0, [sp, #36]	; 0x24
   19da4:	b	19da8 <__assert_fail@plt+0x8cf0>
   19da8:	ldr	r0, [fp, #8]
   19dac:	movw	r1, #0
   19db0:	cmp	r0, r1
   19db4:	bne	19dd8 <__assert_fail@plt+0x8d20>
   19db8:	ldr	r0, [sp, #40]	; 0x28
   19dbc:	ldr	r1, [sp, #44]	; 0x2c
   19dc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   19dc4:	str	r1, [r2, #4]
   19dc8:	str	r0, [r2]
   19dcc:	ldr	r0, [sp, #36]	; 0x24
   19dd0:	str	r0, [fp, #-4]
   19dd4:	b	1a258 <__assert_fail@plt+0x91a0>
   19dd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19ddc:	ldr	r0, [r0]
   19de0:	ldrb	r0, [r0]
   19de4:	cmp	r0, #0
   19de8:	beq	1a23c <__assert_fail@plt+0x9184>
   19dec:	movw	r0, #1024	; 0x400
   19df0:	str	r0, [sp, #24]
   19df4:	movw	r0, #1
   19df8:	str	r0, [sp, #20]
   19dfc:	ldr	r0, [fp, #8]
   19e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e04:	ldr	r1, [r1]
   19e08:	ldrb	r1, [r1]
   19e0c:	bl	10fd4 <strchr@plt>
   19e10:	movw	r1, #0
   19e14:	cmp	r0, r1
   19e18:	bne	19e40 <__assert_fail@plt+0x8d88>
   19e1c:	ldr	r0, [sp, #40]	; 0x28
   19e20:	ldr	r1, [sp, #44]	; 0x2c
   19e24:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e28:	str	r1, [r2, #4]
   19e2c:	str	r0, [r2]
   19e30:	ldr	r0, [sp, #36]	; 0x24
   19e34:	orr	r0, r0, #2
   19e38:	str	r0, [fp, #-4]
   19e3c:	b	1a258 <__assert_fail@plt+0x91a0>
   19e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e44:	ldr	r0, [r0]
   19e48:	ldrb	r0, [r0]
   19e4c:	sub	r0, r0, #69	; 0x45
   19e50:	cmp	r0, #47	; 0x2f
   19e54:	str	r0, [sp, #8]
   19e58:	bhi	19fc4 <__assert_fail@plt+0x8f0c>
   19e5c:	add	r0, pc, #8
   19e60:	ldr	r1, [sp, #8]
   19e64:	ldr	r0, [r0, r1, lsl #2]
   19e68:	mov	pc, r0
   19e6c:	andeq	r9, r1, ip, lsr #30
   19e70:	andeq	r9, r1, r4, asr #31
   19e74:	andeq	r9, r1, ip, lsr #30
   19e78:	andeq	r9, r1, r4, asr #31
   19e7c:	andeq	r9, r1, r4, asr #31
   19e80:	andeq	r9, r1, r4, asr #31
   19e84:	andeq	r9, r1, ip, lsr #30
   19e88:	andeq	r9, r1, r4, asr #31
   19e8c:	andeq	r9, r1, ip, lsr #30
   19e90:	andeq	r9, r1, r4, asr #31
   19e94:	andeq	r9, r1, r4, asr #31
   19e98:	andeq	r9, r1, ip, lsr #30
   19e9c:	andeq	r9, r1, r4, asr #31
   19ea0:	andeq	r9, r1, r4, asr #31
   19ea4:	andeq	r9, r1, r4, asr #31
   19ea8:	andeq	r9, r1, ip, lsr #30
   19eac:	andeq	r9, r1, r4, asr #31
   19eb0:	andeq	r9, r1, r4, asr #31
   19eb4:	andeq	r9, r1, r4, asr #31
   19eb8:	andeq	r9, r1, r4, asr #31
   19ebc:	andeq	r9, r1, ip, lsr #30
   19ec0:	andeq	r9, r1, ip, lsr #30
   19ec4:	andeq	r9, r1, r4, asr #31
   19ec8:	andeq	r9, r1, r4, asr #31
   19ecc:	andeq	r9, r1, r4, asr #31
   19ed0:	andeq	r9, r1, r4, asr #31
   19ed4:	andeq	r9, r1, r4, asr #31
   19ed8:	andeq	r9, r1, r4, asr #31
   19edc:	andeq	r9, r1, r4, asr #31
   19ee0:	andeq	r9, r1, r4, asr #31
   19ee4:	andeq	r9, r1, r4, asr #31
   19ee8:	andeq	r9, r1, r4, asr #31
   19eec:	andeq	r9, r1, r4, asr #31
   19ef0:	andeq	r9, r1, r4, asr #31
   19ef4:	andeq	r9, r1, ip, lsr #30
   19ef8:	andeq	r9, r1, r4, asr #31
   19efc:	andeq	r9, r1, r4, asr #31
   19f00:	andeq	r9, r1, r4, asr #31
   19f04:	andeq	r9, r1, ip, lsr #30
   19f08:	andeq	r9, r1, r4, asr #31
   19f0c:	andeq	r9, r1, ip, lsr #30
   19f10:	andeq	r9, r1, r4, asr #31
   19f14:	andeq	r9, r1, r4, asr #31
   19f18:	andeq	r9, r1, r4, asr #31
   19f1c:	andeq	r9, r1, r4, asr #31
   19f20:	andeq	r9, r1, r4, asr #31
   19f24:	andeq	r9, r1, r4, asr #31
   19f28:	andeq	r9, r1, ip, lsr #30
   19f2c:	ldr	r0, [fp, #8]
   19f30:	movw	r1, #48	; 0x30
   19f34:	bl	10fd4 <strchr@plt>
   19f38:	movw	r1, #0
   19f3c:	cmp	r0, r1
   19f40:	beq	19fc0 <__assert_fail@plt+0x8f08>
   19f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f48:	ldr	r0, [r0]
   19f4c:	ldrb	r0, [r0, #1]
   19f50:	mov	r1, r0
   19f54:	cmp	r0, #66	; 0x42
   19f58:	str	r1, [sp, #4]
   19f5c:	beq	19fa8 <__assert_fail@plt+0x8ef0>
   19f60:	b	19f64 <__assert_fail@plt+0x8eac>
   19f64:	ldr	r0, [sp, #4]
   19f68:	cmp	r0, #68	; 0x44
   19f6c:	beq	19fa8 <__assert_fail@plt+0x8ef0>
   19f70:	b	19f74 <__assert_fail@plt+0x8ebc>
   19f74:	ldr	r0, [sp, #4]
   19f78:	cmp	r0, #105	; 0x69
   19f7c:	bne	19fbc <__assert_fail@plt+0x8f04>
   19f80:	b	19f84 <__assert_fail@plt+0x8ecc>
   19f84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f88:	ldr	r0, [r0]
   19f8c:	ldrb	r0, [r0, #2]
   19f90:	cmp	r0, #66	; 0x42
   19f94:	bne	19fa4 <__assert_fail@plt+0x8eec>
   19f98:	ldr	r0, [sp, #20]
   19f9c:	add	r0, r0, #2
   19fa0:	str	r0, [sp, #20]
   19fa4:	b	19fbc <__assert_fail@plt+0x8f04>
   19fa8:	movw	r0, #1000	; 0x3e8
   19fac:	str	r0, [sp, #24]
   19fb0:	ldr	r0, [sp, #20]
   19fb4:	add	r0, r0, #1
   19fb8:	str	r0, [sp, #20]
   19fbc:	b	19fc0 <__assert_fail@plt+0x8f08>
   19fc0:	b	19fc4 <__assert_fail@plt+0x8f0c>
   19fc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19fc8:	ldr	r0, [r0]
   19fcc:	ldrb	r0, [r0]
   19fd0:	sub	r0, r0, #66	; 0x42
   19fd4:	cmp	r0, #53	; 0x35
   19fd8:	str	r0, [sp]
   19fdc:	bhi	1a1d0 <__assert_fail@plt+0x9118>
   19fe0:	add	r0, pc, #8
   19fe4:	ldr	r1, [sp]
   19fe8:	ldr	r0, [r0, r1, lsl #2]
   19fec:	mov	pc, r0
   19ff0:	ldrdeq	sl, [r1], -ip
   19ff4:	ldrdeq	sl, [r1], -r0
   19ff8:	ldrdeq	sl, [r1], -r0
   19ffc:	strdeq	sl, [r1], -ip
   1a000:	ldrdeq	sl, [r1], -r0
   1a004:	andeq	sl, r1, r4, lsl r1
   1a008:	ldrdeq	sl, [r1], -r0
   1a00c:	ldrdeq	sl, [r1], -r0
   1a010:	ldrdeq	sl, [r1], -r0
   1a014:	andeq	sl, r1, ip, lsr #2
   1a018:	ldrdeq	sl, [r1], -r0
   1a01c:	andeq	sl, r1, r4, asr #2
   1a020:	ldrdeq	sl, [r1], -r0
   1a024:	ldrdeq	sl, [r1], -r0
   1a028:	andeq	sl, r1, ip, asr r1
   1a02c:	ldrdeq	sl, [r1], -r0
   1a030:	ldrdeq	sl, [r1], -r0
   1a034:	ldrdeq	sl, [r1], -r0
   1a038:	andeq	sl, r1, r4, ror r1
   1a03c:	ldrdeq	sl, [r1], -r0
   1a040:	ldrdeq	sl, [r1], -r0
   1a044:	ldrdeq	sl, [r1], -r0
   1a048:	ldrdeq	sl, [r1], -r0
   1a04c:	andeq	sl, r1, r0, lsr #3
   1a050:			; <UNDEFINED> instruction: 0x0001a1b8
   1a054:	ldrdeq	sl, [r1], -r0
   1a058:	ldrdeq	sl, [r1], -r0
   1a05c:	ldrdeq	sl, [r1], -r0
   1a060:	ldrdeq	sl, [r1], -r0
   1a064:	ldrdeq	sl, [r1], -r0
   1a068:	ldrdeq	sl, [r1], -r0
   1a06c:	ldrdeq	sl, [r1], -r0
   1a070:	andeq	sl, r1, r8, asr #1
   1a074:	strdeq	sl, [r1], -r0
   1a078:	ldrdeq	sl, [r1], -r0
   1a07c:	ldrdeq	sl, [r1], -r0
   1a080:	ldrdeq	sl, [r1], -r0
   1a084:	andeq	sl, r1, r4, lsl r1
   1a088:	ldrdeq	sl, [r1], -r0
   1a08c:	ldrdeq	sl, [r1], -r0
   1a090:	ldrdeq	sl, [r1], -r0
   1a094:	andeq	sl, r1, ip, lsr #2
   1a098:	ldrdeq	sl, [r1], -r0
   1a09c:	andeq	sl, r1, r4, asr #2
   1a0a0:	ldrdeq	sl, [r1], -r0
   1a0a4:	ldrdeq	sl, [r1], -r0
   1a0a8:	ldrdeq	sl, [r1], -r0
   1a0ac:	ldrdeq	sl, [r1], -r0
   1a0b0:	ldrdeq	sl, [r1], -r0
   1a0b4:	ldrdeq	sl, [r1], -r0
   1a0b8:	andeq	sl, r1, r4, ror r1
   1a0bc:	ldrdeq	sl, [r1], -r0
   1a0c0:	ldrdeq	sl, [r1], -r0
   1a0c4:	andeq	sl, r1, ip, lsl #3
   1a0c8:	add	r0, sp, #40	; 0x28
   1a0cc:	movw	r1, #512	; 0x200
   1a0d0:	bl	1a264 <__assert_fail@plt+0x91ac>
   1a0d4:	str	r0, [sp, #16]
   1a0d8:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a0dc:	add	r0, sp, #40	; 0x28
   1a0e0:	movw	r1, #1024	; 0x400
   1a0e4:	bl	1a264 <__assert_fail@plt+0x91ac>
   1a0e8:	str	r0, [sp, #16]
   1a0ec:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a0f0:	movw	r0, #0
   1a0f4:	str	r0, [sp, #16]
   1a0f8:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a0fc:	ldr	r1, [sp, #24]
   1a100:	add	r0, sp, #40	; 0x28
   1a104:	movw	r2, #6
   1a108:	bl	1badc <__assert_fail@plt+0xaa24>
   1a10c:	str	r0, [sp, #16]
   1a110:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a114:	ldr	r1, [sp, #24]
   1a118:	add	r0, sp, #40	; 0x28
   1a11c:	movw	r2, #3
   1a120:	bl	1badc <__assert_fail@plt+0xaa24>
   1a124:	str	r0, [sp, #16]
   1a128:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a12c:	ldr	r1, [sp, #24]
   1a130:	add	r0, sp, #40	; 0x28
   1a134:	movw	r2, #1
   1a138:	bl	1badc <__assert_fail@plt+0xaa24>
   1a13c:	str	r0, [sp, #16]
   1a140:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a144:	ldr	r1, [sp, #24]
   1a148:	add	r0, sp, #40	; 0x28
   1a14c:	movw	r2, #2
   1a150:	bl	1badc <__assert_fail@plt+0xaa24>
   1a154:	str	r0, [sp, #16]
   1a158:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a15c:	ldr	r1, [sp, #24]
   1a160:	add	r0, sp, #40	; 0x28
   1a164:	movw	r2, #5
   1a168:	bl	1badc <__assert_fail@plt+0xaa24>
   1a16c:	str	r0, [sp, #16]
   1a170:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a174:	ldr	r1, [sp, #24]
   1a178:	add	r0, sp, #40	; 0x28
   1a17c:	movw	r2, #4
   1a180:	bl	1badc <__assert_fail@plt+0xaa24>
   1a184:	str	r0, [sp, #16]
   1a188:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a18c:	add	r0, sp, #40	; 0x28
   1a190:	movw	r1, #2
   1a194:	bl	1a264 <__assert_fail@plt+0x91ac>
   1a198:	str	r0, [sp, #16]
   1a19c:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a1a0:	ldr	r1, [sp, #24]
   1a1a4:	add	r0, sp, #40	; 0x28
   1a1a8:	movw	r2, #8
   1a1ac:	bl	1badc <__assert_fail@plt+0xaa24>
   1a1b0:	str	r0, [sp, #16]
   1a1b4:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a1b8:	ldr	r1, [sp, #24]
   1a1bc:	add	r0, sp, #40	; 0x28
   1a1c0:	movw	r2, #7
   1a1c4:	bl	1badc <__assert_fail@plt+0xaa24>
   1a1c8:	str	r0, [sp, #16]
   1a1cc:	b	1a1f4 <__assert_fail@plt+0x913c>
   1a1d0:	ldr	r0, [sp, #40]	; 0x28
   1a1d4:	ldr	r1, [sp, #44]	; 0x2c
   1a1d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a1dc:	str	r1, [r2, #4]
   1a1e0:	str	r0, [r2]
   1a1e4:	ldr	r0, [sp, #36]	; 0x24
   1a1e8:	orr	r0, r0, #2
   1a1ec:	str	r0, [fp, #-4]
   1a1f0:	b	1a258 <__assert_fail@plt+0x91a0>
   1a1f4:	ldr	r0, [sp, #16]
   1a1f8:	ldr	r1, [sp, #36]	; 0x24
   1a1fc:	orr	r0, r1, r0
   1a200:	str	r0, [sp, #36]	; 0x24
   1a204:	ldr	r0, [sp, #20]
   1a208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a20c:	ldr	r2, [r1]
   1a210:	add	r0, r2, r0
   1a214:	str	r0, [r1]
   1a218:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a21c:	ldr	r0, [r0]
   1a220:	ldrsb	r0, [r0]
   1a224:	cmp	r0, #0
   1a228:	beq	1a238 <__assert_fail@plt+0x9180>
   1a22c:	ldr	r0, [sp, #36]	; 0x24
   1a230:	orr	r0, r0, #2
   1a234:	str	r0, [sp, #36]	; 0x24
   1a238:	b	1a23c <__assert_fail@plt+0x9184>
   1a23c:	ldr	r0, [sp, #40]	; 0x28
   1a240:	ldr	r1, [sp, #44]	; 0x2c
   1a244:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a248:	str	r1, [r2, #4]
   1a24c:	str	r0, [r2]
   1a250:	ldr	r0, [sp, #36]	; 0x24
   1a254:	str	r0, [fp, #-4]
   1a258:	ldr	r0, [fp, #-4]
   1a25c:	mov	sp, fp
   1a260:	pop	{fp, pc}
   1a264:	push	{fp, lr}
   1a268:	mov	fp, sp
   1a26c:	sub	sp, sp, #112	; 0x70
   1a270:	str	r0, [fp, #-8]
   1a274:	str	r1, [fp, #-12]
   1a278:	b	1a728 <__assert_fail@plt+0x9670>
   1a27c:	b	1a4f0 <__assert_fail@plt+0x9438>
   1a280:	ldr	r0, [fp, #-12]
   1a284:	cmp	r0, #0
   1a288:	bge	1a3e0 <__assert_fail@plt+0x9328>
   1a28c:	mov	r0, #1
   1a290:	cmp	r0, #0
   1a294:	bne	1a33c <__assert_fail@plt+0x9284>
   1a298:	b	1a29c <__assert_fail@plt+0x91e4>
   1a29c:	b	1a2a0 <__assert_fail@plt+0x91e8>
   1a2a0:	ldr	r0, [fp, #-8]
   1a2a4:	ldr	r1, [r0]
   1a2a8:	ldr	r0, [r0, #4]
   1a2ac:	ldr	r2, [fp, #-12]
   1a2b0:	mov	r3, #127	; 0x7f
   1a2b4:	sdiv	r2, r3, r2
   1a2b8:	subs	r1, r1, r2
   1a2bc:	sbcs	r0, r0, r2, asr #31
   1a2c0:	bcc	1a4a8 <__assert_fail@plt+0x93f0>
   1a2c4:	b	1a4cc <__assert_fail@plt+0x9414>
   1a2c8:	b	1a2cc <__assert_fail@plt+0x9214>
   1a2cc:	ldr	r0, [pc, #4076]	; 1b2c0 <__assert_fail@plt+0xa208>
   1a2d0:	ldr	r1, [fp, #-12]
   1a2d4:	cmp	r1, r0
   1a2d8:	blt	1a2f0 <__assert_fail@plt+0x9238>
   1a2dc:	b	1a2fc <__assert_fail@plt+0x9244>
   1a2e0:	ldr	r0, [fp, #-12]
   1a2e4:	movw	r1, #0
   1a2e8:	cmp	r1, r0
   1a2ec:	bge	1a2fc <__assert_fail@plt+0x9244>
   1a2f0:	movw	r0, #0
   1a2f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2f8:	b	1a314 <__assert_fail@plt+0x925c>
   1a2fc:	ldr	r0, [fp, #-12]
   1a300:	movw	r1, #0
   1a304:	sub	r0, r1, r0
   1a308:	movw	r1, #127	; 0x7f
   1a30c:	sdiv	r0, r1, r0
   1a310:	str	r0, [fp, #-28]	; 0xffffffe4
   1a314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a318:	ldr	r1, [fp, #-8]
   1a31c:	ldr	r2, [r1]
   1a320:	ldr	r1, [r1, #4]
   1a324:	mvn	r1, r1
   1a328:	mvn	r2, r2
   1a32c:	subs	r2, r2, r0
   1a330:	sbcs	r0, r1, r0, asr #31
   1a334:	bcs	1a4a8 <__assert_fail@plt+0x93f0>
   1a338:	b	1a4cc <__assert_fail@plt+0x9414>
   1a33c:	b	1a340 <__assert_fail@plt+0x9288>
   1a340:	b	1a3b8 <__assert_fail@plt+0x9300>
   1a344:	b	1a3b8 <__assert_fail@plt+0x9300>
   1a348:	ldr	r0, [fp, #-12]
   1a34c:	cmn	r0, #1
   1a350:	bne	1a3b8 <__assert_fail@plt+0x9300>
   1a354:	b	1a378 <__assert_fail@plt+0x92c0>
   1a358:	ldr	r0, [fp, #-8]
   1a35c:	ldr	r1, [r0]
   1a360:	ldr	r0, [r0, #4]
   1a364:	eor	r1, r1, #128	; 0x80
   1a368:	orr	r0, r1, r0
   1a36c:	cmp	r0, #0
   1a370:	bne	1a4a8 <__assert_fail@plt+0x93f0>
   1a374:	b	1a4cc <__assert_fail@plt+0x9414>
   1a378:	ldr	r0, [fp, #-8]
   1a37c:	ldr	r1, [r0]
   1a380:	ldr	r0, [r0, #4]
   1a384:	orr	r0, r1, r0
   1a388:	cmp	r0, #0
   1a38c:	beq	1a4cc <__assert_fail@plt+0x9414>
   1a390:	b	1a394 <__assert_fail@plt+0x92dc>
   1a394:	ldr	r0, [fp, #-8]
   1a398:	ldr	r1, [r0]
   1a39c:	ldr	r0, [r0, #4]
   1a3a0:	subs	r1, r1, #1
   1a3a4:	sbc	r0, r0, #0
   1a3a8:	rsbs	r1, r1, #127	; 0x7f
   1a3ac:	rscs	r0, r0, #0
   1a3b0:	bcc	1a4a8 <__assert_fail@plt+0x93f0>
   1a3b4:	b	1a4cc <__assert_fail@plt+0x9414>
   1a3b8:	ldr	r0, [fp, #-12]
   1a3bc:	mvn	r1, #127	; 0x7f
   1a3c0:	sdiv	r0, r1, r0
   1a3c4:	ldr	r1, [fp, #-8]
   1a3c8:	ldr	r2, [r1]
   1a3cc:	ldr	r1, [r1, #4]
   1a3d0:	subs	r2, r0, r2
   1a3d4:	rscs	r0, r1, r0, asr #31
   1a3d8:	bcc	1a4a8 <__assert_fail@plt+0x93f0>
   1a3dc:	b	1a4cc <__assert_fail@plt+0x9414>
   1a3e0:	ldr	r0, [fp, #-12]
   1a3e4:	cmp	r0, #0
   1a3e8:	bne	1a3f0 <__assert_fail@plt+0x9338>
   1a3ec:	b	1a4cc <__assert_fail@plt+0x9414>
   1a3f0:	mov	r0, #1
   1a3f4:	cmp	r0, #0
   1a3f8:	bne	1a480 <__assert_fail@plt+0x93c8>
   1a3fc:	b	1a400 <__assert_fail@plt+0x9348>
   1a400:	ldr	r0, [fp, #-8]
   1a404:	ldr	r1, [r0]
   1a408:	ldr	r0, [r0, #4]
   1a40c:	and	r0, r1, r0
   1a410:	cmn	r0, #1
   1a414:	bne	1a454 <__assert_fail@plt+0x939c>
   1a418:	b	1a41c <__assert_fail@plt+0x9364>
   1a41c:	b	1a420 <__assert_fail@plt+0x9368>
   1a420:	ldr	r0, [fp, #-12]
   1a424:	mvn	r1, #127	; 0x7f
   1a428:	add	r0, r0, r1
   1a42c:	movw	r1, #0
   1a430:	cmp	r1, r0
   1a434:	blt	1a4a8 <__assert_fail@plt+0x93f0>
   1a438:	b	1a4cc <__assert_fail@plt+0x9414>
   1a43c:	ldr	r0, [fp, #-12]
   1a440:	sub	r0, r0, #1
   1a444:	movw	r1, #127	; 0x7f
   1a448:	cmp	r1, r0
   1a44c:	blt	1a4a8 <__assert_fail@plt+0x93f0>
   1a450:	b	1a4cc <__assert_fail@plt+0x9414>
   1a454:	ldr	r0, [fp, #-8]
   1a458:	ldr	r2, [r0]
   1a45c:	ldr	r3, [r0, #4]
   1a460:	mvn	r0, #127	; 0x7f
   1a464:	mvn	r1, #0
   1a468:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1a46c:	ldr	r2, [fp, #-12]
   1a470:	subs	r0, r0, r2
   1a474:	sbcs	r1, r1, r2, asr #31
   1a478:	bcc	1a4a8 <__assert_fail@plt+0x93f0>
   1a47c:	b	1a4cc <__assert_fail@plt+0x9414>
   1a480:	ldr	r0, [fp, #-12]
   1a484:	mov	r1, #127	; 0x7f
   1a488:	sdiv	r0, r1, r0
   1a48c:	ldr	r1, [fp, #-8]
   1a490:	ldr	r2, [r1]
   1a494:	ldr	r1, [r1, #4]
   1a498:	subs	r2, r0, r2
   1a49c:	rscs	r0, r1, r0, asr #31
   1a4a0:	bcs	1a4cc <__assert_fail@plt+0x9414>
   1a4a4:	b	1a4a8 <__assert_fail@plt+0x93f0>
   1a4a8:	ldr	r0, [fp, #-8]
   1a4ac:	ldr	r0, [r0]
   1a4b0:	ldr	r1, [fp, #-12]
   1a4b4:	mul	r0, r0, r1
   1a4b8:	sxtb	r0, r0
   1a4bc:	asr	r1, r0, #31
   1a4c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a4c4:	str	r1, [fp, #-20]	; 0xffffffec
   1a4c8:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1a4cc:	ldr	r0, [fp, #-8]
   1a4d0:	ldr	r0, [r0]
   1a4d4:	ldr	r1, [fp, #-12]
   1a4d8:	mul	r0, r0, r1
   1a4dc:	sxtb	r0, r0
   1a4e0:	asr	r1, r0, #31
   1a4e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a4e8:	str	r1, [fp, #-20]	; 0xffffffec
   1a4ec:	b	1baac <__assert_fail@plt+0xa9f4>
   1a4f0:	ldr	r0, [fp, #-12]
   1a4f4:	cmp	r0, #0
   1a4f8:	bge	1a62c <__assert_fail@plt+0x9574>
   1a4fc:	mov	r0, #1
   1a500:	cmp	r0, #0
   1a504:	bne	1a5ac <__assert_fail@plt+0x94f4>
   1a508:	b	1a50c <__assert_fail@plt+0x9454>
   1a50c:	b	1a510 <__assert_fail@plt+0x9458>
   1a510:	ldr	r0, [fp, #-8]
   1a514:	ldr	r1, [r0]
   1a518:	ldr	r0, [r0, #4]
   1a51c:	ldr	r2, [fp, #-12]
   1a520:	mov	r3, #255	; 0xff
   1a524:	sdiv	r2, r3, r2
   1a528:	subs	r1, r1, r2
   1a52c:	sbcs	r0, r0, r2, asr #31
   1a530:	bcc	1a6e0 <__assert_fail@plt+0x9628>
   1a534:	b	1a704 <__assert_fail@plt+0x964c>
   1a538:	b	1a53c <__assert_fail@plt+0x9484>
   1a53c:	ldr	r0, [pc, #3452]	; 1b2c0 <__assert_fail@plt+0xa208>
   1a540:	ldr	r1, [fp, #-12]
   1a544:	cmp	r1, r0
   1a548:	blt	1a560 <__assert_fail@plt+0x94a8>
   1a54c:	b	1a56c <__assert_fail@plt+0x94b4>
   1a550:	ldr	r0, [fp, #-12]
   1a554:	movw	r1, #0
   1a558:	cmp	r1, r0
   1a55c:	bge	1a56c <__assert_fail@plt+0x94b4>
   1a560:	movw	r0, #0
   1a564:	str	r0, [fp, #-32]	; 0xffffffe0
   1a568:	b	1a584 <__assert_fail@plt+0x94cc>
   1a56c:	ldr	r0, [fp, #-12]
   1a570:	movw	r1, #0
   1a574:	sub	r0, r1, r0
   1a578:	movw	r1, #255	; 0xff
   1a57c:	sdiv	r0, r1, r0
   1a580:	str	r0, [fp, #-32]	; 0xffffffe0
   1a584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a588:	ldr	r1, [fp, #-8]
   1a58c:	ldr	r2, [r1]
   1a590:	ldr	r1, [r1, #4]
   1a594:	mvn	r1, r1
   1a598:	mvn	r2, r2
   1a59c:	subs	r2, r2, r0
   1a5a0:	sbcs	r0, r1, r0, asr #31
   1a5a4:	bcs	1a6e0 <__assert_fail@plt+0x9628>
   1a5a8:	b	1a704 <__assert_fail@plt+0x964c>
   1a5ac:	b	1a5b0 <__assert_fail@plt+0x94f8>
   1a5b0:	b	1a610 <__assert_fail@plt+0x9558>
   1a5b4:	b	1a610 <__assert_fail@plt+0x9558>
   1a5b8:	ldr	r0, [fp, #-12]
   1a5bc:	cmn	r0, #1
   1a5c0:	bne	1a610 <__assert_fail@plt+0x9558>
   1a5c4:	b	1a5e4 <__assert_fail@plt+0x952c>
   1a5c8:	ldr	r0, [fp, #-8]
   1a5cc:	ldr	r1, [r0]
   1a5d0:	ldr	r0, [r0, #4]
   1a5d4:	orr	r0, r1, r0
   1a5d8:	cmp	r0, #0
   1a5dc:	bne	1a6e0 <__assert_fail@plt+0x9628>
   1a5e0:	b	1a704 <__assert_fail@plt+0x964c>
   1a5e4:	ldr	r0, [fp, #-8]
   1a5e8:	ldr	r1, [r0]
   1a5ec:	ldr	r0, [r0, #4]
   1a5f0:	orr	r0, r1, r0
   1a5f4:	cmp	r0, #0
   1a5f8:	beq	1a704 <__assert_fail@plt+0x964c>
   1a5fc:	b	1a600 <__assert_fail@plt+0x9548>
   1a600:	mov	r0, #0
   1a604:	cmp	r0, #0
   1a608:	bne	1a6e0 <__assert_fail@plt+0x9628>
   1a60c:	b	1a704 <__assert_fail@plt+0x964c>
   1a610:	ldr	r0, [fp, #-8]
   1a614:	ldr	r1, [r0]
   1a618:	ldr	r0, [r0, #4]
   1a61c:	orr	r0, r1, r0
   1a620:	cmp	r0, #0
   1a624:	bne	1a6e0 <__assert_fail@plt+0x9628>
   1a628:	b	1a704 <__assert_fail@plt+0x964c>
   1a62c:	ldr	r0, [fp, #-12]
   1a630:	cmp	r0, #0
   1a634:	bne	1a63c <__assert_fail@plt+0x9584>
   1a638:	b	1a704 <__assert_fail@plt+0x964c>
   1a63c:	mov	r0, #1
   1a640:	cmp	r0, #0
   1a644:	bne	1a6b8 <__assert_fail@plt+0x9600>
   1a648:	b	1a64c <__assert_fail@plt+0x9594>
   1a64c:	b	1a654 <__assert_fail@plt+0x959c>
   1a650:	b	1a658 <__assert_fail@plt+0x95a0>
   1a654:	b	1a6a8 <__assert_fail@plt+0x95f0>
   1a658:	ldr	r0, [fp, #-8]
   1a65c:	ldr	r1, [r0]
   1a660:	ldr	r0, [r0, #4]
   1a664:	and	r0, r1, r0
   1a668:	cmn	r0, #1
   1a66c:	bne	1a6a8 <__assert_fail@plt+0x95f0>
   1a670:	b	1a674 <__assert_fail@plt+0x95bc>
   1a674:	b	1a678 <__assert_fail@plt+0x95c0>
   1a678:	ldr	r0, [fp, #-12]
   1a67c:	add	r0, r0, #0
   1a680:	movw	r1, #0
   1a684:	cmp	r1, r0
   1a688:	blt	1a6e0 <__assert_fail@plt+0x9628>
   1a68c:	b	1a704 <__assert_fail@plt+0x964c>
   1a690:	ldr	r0, [fp, #-12]
   1a694:	sub	r0, r0, #1
   1a698:	mvn	r1, #0
   1a69c:	cmp	r1, r0
   1a6a0:	blt	1a6e0 <__assert_fail@plt+0x9628>
   1a6a4:	b	1a704 <__assert_fail@plt+0x964c>
   1a6a8:	ldr	r0, [fp, #-12]
   1a6ac:	cmp	r0, #0
   1a6b0:	bne	1a6e0 <__assert_fail@plt+0x9628>
   1a6b4:	b	1a704 <__assert_fail@plt+0x964c>
   1a6b8:	ldr	r0, [fp, #-12]
   1a6bc:	mov	r1, #255	; 0xff
   1a6c0:	sdiv	r0, r1, r0
   1a6c4:	ldr	r1, [fp, #-8]
   1a6c8:	ldr	r2, [r1]
   1a6cc:	ldr	r1, [r1, #4]
   1a6d0:	subs	r2, r0, r2
   1a6d4:	rscs	r0, r1, r0, asr #31
   1a6d8:	bcs	1a704 <__assert_fail@plt+0x964c>
   1a6dc:	b	1a6e0 <__assert_fail@plt+0x9628>
   1a6e0:	ldr	r0, [fp, #-8]
   1a6e4:	ldr	r0, [r0]
   1a6e8:	ldr	r1, [fp, #-12]
   1a6ec:	mul	r0, r0, r1
   1a6f0:	uxtb	r0, r0
   1a6f4:	mov	r1, #0
   1a6f8:	str	r1, [fp, #-20]	; 0xffffffec
   1a6fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a700:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1a704:	ldr	r0, [fp, #-8]
   1a708:	ldr	r0, [r0]
   1a70c:	ldr	r1, [fp, #-12]
   1a710:	mul	r0, r0, r1
   1a714:	uxtb	r0, r0
   1a718:	mov	r1, #0
   1a71c:	str	r1, [fp, #-20]	; 0xffffffec
   1a720:	str	r0, [fp, #-24]	; 0xffffffe8
   1a724:	b	1baac <__assert_fail@plt+0xa9f4>
   1a728:	b	1abe8 <__assert_fail@plt+0x9b30>
   1a72c:	b	1a9b0 <__assert_fail@plt+0x98f8>
   1a730:	ldr	r0, [fp, #-12]
   1a734:	cmp	r0, #0
   1a738:	bge	1a89c <__assert_fail@plt+0x97e4>
   1a73c:	mov	r0, #1
   1a740:	cmp	r0, #0
   1a744:	bne	1a7ec <__assert_fail@plt+0x9734>
   1a748:	b	1a74c <__assert_fail@plt+0x9694>
   1a74c:	b	1a750 <__assert_fail@plt+0x9698>
   1a750:	ldr	r0, [fp, #-8]
   1a754:	ldr	r1, [r0]
   1a758:	ldr	r0, [r0, #4]
   1a75c:	ldr	r2, [fp, #-12]
   1a760:	movw	r3, #32767	; 0x7fff
   1a764:	sdiv	r2, r3, r2
   1a768:	subs	r1, r1, r2
   1a76c:	sbcs	r0, r0, r2, asr #31
   1a770:	bcc	1a968 <__assert_fail@plt+0x98b0>
   1a774:	b	1a98c <__assert_fail@plt+0x98d4>
   1a778:	b	1a77c <__assert_fail@plt+0x96c4>
   1a77c:	ldr	r0, [pc, #2876]	; 1b2c0 <__assert_fail@plt+0xa208>
   1a780:	ldr	r1, [fp, #-12]
   1a784:	cmp	r1, r0
   1a788:	blt	1a7a0 <__assert_fail@plt+0x96e8>
   1a78c:	b	1a7ac <__assert_fail@plt+0x96f4>
   1a790:	ldr	r0, [fp, #-12]
   1a794:	movw	r1, #0
   1a798:	cmp	r1, r0
   1a79c:	bge	1a7ac <__assert_fail@plt+0x96f4>
   1a7a0:	movw	r0, #0
   1a7a4:	str	r0, [fp, #-36]	; 0xffffffdc
   1a7a8:	b	1a7c4 <__assert_fail@plt+0x970c>
   1a7ac:	ldr	r0, [fp, #-12]
   1a7b0:	movw	r1, #0
   1a7b4:	sub	r0, r1, r0
   1a7b8:	movw	r1, #32767	; 0x7fff
   1a7bc:	sdiv	r0, r1, r0
   1a7c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1a7c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a7c8:	ldr	r1, [fp, #-8]
   1a7cc:	ldr	r2, [r1]
   1a7d0:	ldr	r1, [r1, #4]
   1a7d4:	mvn	r1, r1
   1a7d8:	mvn	r2, r2
   1a7dc:	subs	r2, r2, r0
   1a7e0:	sbcs	r0, r1, r0, asr #31
   1a7e4:	bcs	1a968 <__assert_fail@plt+0x98b0>
   1a7e8:	b	1a98c <__assert_fail@plt+0x98d4>
   1a7ec:	b	1a7f0 <__assert_fail@plt+0x9738>
   1a7f0:	b	1a870 <__assert_fail@plt+0x97b8>
   1a7f4:	b	1a870 <__assert_fail@plt+0x97b8>
   1a7f8:	ldr	r0, [fp, #-12]
   1a7fc:	cmn	r0, #1
   1a800:	bne	1a870 <__assert_fail@plt+0x97b8>
   1a804:	b	1a828 <__assert_fail@plt+0x9770>
   1a808:	ldr	r0, [fp, #-8]
   1a80c:	ldr	r1, [r0]
   1a810:	ldr	r0, [r0, #4]
   1a814:	eor	r1, r1, #32768	; 0x8000
   1a818:	orr	r0, r1, r0
   1a81c:	cmp	r0, #0
   1a820:	bne	1a968 <__assert_fail@plt+0x98b0>
   1a824:	b	1a98c <__assert_fail@plt+0x98d4>
   1a828:	ldr	r0, [fp, #-8]
   1a82c:	ldr	r1, [r0]
   1a830:	ldr	r0, [r0, #4]
   1a834:	orr	r0, r1, r0
   1a838:	cmp	r0, #0
   1a83c:	beq	1a98c <__assert_fail@plt+0x98d4>
   1a840:	b	1a844 <__assert_fail@plt+0x978c>
   1a844:	ldr	r0, [fp, #-8]
   1a848:	ldr	r1, [r0]
   1a84c:	ldr	r0, [r0, #4]
   1a850:	subs	r1, r1, #1
   1a854:	sbc	r0, r0, #0
   1a858:	lsr	r1, r1, #15
   1a85c:	orr	r1, r1, r0, lsl #17
   1a860:	orr	r0, r1, r0, lsr #15
   1a864:	cmp	r0, #0
   1a868:	bne	1a968 <__assert_fail@plt+0x98b0>
   1a86c:	b	1a98c <__assert_fail@plt+0x98d4>
   1a870:	ldr	r0, [fp, #-12]
   1a874:	movw	r1, #32768	; 0x8000
   1a878:	movt	r1, #65535	; 0xffff
   1a87c:	sdiv	r0, r1, r0
   1a880:	ldr	r1, [fp, #-8]
   1a884:	ldr	r2, [r1]
   1a888:	ldr	r1, [r1, #4]
   1a88c:	subs	r2, r0, r2
   1a890:	rscs	r0, r1, r0, asr #31
   1a894:	bcc	1a968 <__assert_fail@plt+0x98b0>
   1a898:	b	1a98c <__assert_fail@plt+0x98d4>
   1a89c:	ldr	r0, [fp, #-12]
   1a8a0:	cmp	r0, #0
   1a8a4:	bne	1a8ac <__assert_fail@plt+0x97f4>
   1a8a8:	b	1a98c <__assert_fail@plt+0x98d4>
   1a8ac:	mov	r0, #1
   1a8b0:	cmp	r0, #0
   1a8b4:	bne	1a940 <__assert_fail@plt+0x9888>
   1a8b8:	b	1a8bc <__assert_fail@plt+0x9804>
   1a8bc:	ldr	r0, [fp, #-8]
   1a8c0:	ldr	r1, [r0]
   1a8c4:	ldr	r0, [r0, #4]
   1a8c8:	and	r0, r1, r0
   1a8cc:	cmn	r0, #1
   1a8d0:	bne	1a910 <__assert_fail@plt+0x9858>
   1a8d4:	b	1a8d8 <__assert_fail@plt+0x9820>
   1a8d8:	b	1a8dc <__assert_fail@plt+0x9824>
   1a8dc:	ldr	r0, [pc, #4020]	; 1b898 <__assert_fail@plt+0xa7e0>
   1a8e0:	ldr	r1, [fp, #-12]
   1a8e4:	add	r0, r1, r0
   1a8e8:	movw	r1, #0
   1a8ec:	cmp	r1, r0
   1a8f0:	blt	1a968 <__assert_fail@plt+0x98b0>
   1a8f4:	b	1a98c <__assert_fail@plt+0x98d4>
   1a8f8:	ldr	r0, [fp, #-12]
   1a8fc:	sub	r0, r0, #1
   1a900:	movw	r1, #32767	; 0x7fff
   1a904:	cmp	r1, r0
   1a908:	blt	1a968 <__assert_fail@plt+0x98b0>
   1a90c:	b	1a98c <__assert_fail@plt+0x98d4>
   1a910:	ldr	r0, [fp, #-8]
   1a914:	ldr	r2, [r0]
   1a918:	ldr	r3, [r0, #4]
   1a91c:	movw	r0, #32768	; 0x8000
   1a920:	movt	r0, #65535	; 0xffff
   1a924:	mvn	r1, #0
   1a928:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1a92c:	ldr	r2, [fp, #-12]
   1a930:	subs	r0, r0, r2
   1a934:	sbcs	r1, r1, r2, asr #31
   1a938:	bcc	1a968 <__assert_fail@plt+0x98b0>
   1a93c:	b	1a98c <__assert_fail@plt+0x98d4>
   1a940:	ldr	r0, [fp, #-12]
   1a944:	movw	r1, #32767	; 0x7fff
   1a948:	sdiv	r0, r1, r0
   1a94c:	ldr	r1, [fp, #-8]
   1a950:	ldr	r2, [r1]
   1a954:	ldr	r1, [r1, #4]
   1a958:	subs	r2, r0, r2
   1a95c:	rscs	r0, r1, r0, asr #31
   1a960:	bcs	1a98c <__assert_fail@plt+0x98d4>
   1a964:	b	1a968 <__assert_fail@plt+0x98b0>
   1a968:	ldr	r0, [fp, #-8]
   1a96c:	ldr	r0, [r0]
   1a970:	ldr	r1, [fp, #-12]
   1a974:	mul	r0, r0, r1
   1a978:	sxth	r0, r0
   1a97c:	asr	r1, r0, #31
   1a980:	str	r0, [fp, #-24]	; 0xffffffe8
   1a984:	str	r1, [fp, #-20]	; 0xffffffec
   1a988:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1a98c:	ldr	r0, [fp, #-8]
   1a990:	ldr	r0, [r0]
   1a994:	ldr	r1, [fp, #-12]
   1a998:	mul	r0, r0, r1
   1a99c:	sxth	r0, r0
   1a9a0:	asr	r1, r0, #31
   1a9a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9a8:	str	r1, [fp, #-20]	; 0xffffffec
   1a9ac:	b	1baac <__assert_fail@plt+0xa9f4>
   1a9b0:	ldr	r0, [fp, #-12]
   1a9b4:	cmp	r0, #0
   1a9b8:	bge	1aaec <__assert_fail@plt+0x9a34>
   1a9bc:	mov	r0, #1
   1a9c0:	cmp	r0, #0
   1a9c4:	bne	1aa6c <__assert_fail@plt+0x99b4>
   1a9c8:	b	1a9cc <__assert_fail@plt+0x9914>
   1a9cc:	b	1a9d0 <__assert_fail@plt+0x9918>
   1a9d0:	ldr	r0, [fp, #-8]
   1a9d4:	ldr	r1, [r0]
   1a9d8:	ldr	r0, [r0, #4]
   1a9dc:	ldr	r2, [fp, #-12]
   1a9e0:	movw	r3, #65535	; 0xffff
   1a9e4:	sdiv	r2, r3, r2
   1a9e8:	subs	r1, r1, r2
   1a9ec:	sbcs	r0, r0, r2, asr #31
   1a9f0:	bcc	1aba0 <__assert_fail@plt+0x9ae8>
   1a9f4:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1a9f8:	b	1a9fc <__assert_fail@plt+0x9944>
   1a9fc:	ldr	r0, [pc, #2236]	; 1b2c0 <__assert_fail@plt+0xa208>
   1aa00:	ldr	r1, [fp, #-12]
   1aa04:	cmp	r1, r0
   1aa08:	blt	1aa20 <__assert_fail@plt+0x9968>
   1aa0c:	b	1aa2c <__assert_fail@plt+0x9974>
   1aa10:	ldr	r0, [fp, #-12]
   1aa14:	movw	r1, #0
   1aa18:	cmp	r1, r0
   1aa1c:	bge	1aa2c <__assert_fail@plt+0x9974>
   1aa20:	movw	r0, #0
   1aa24:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa28:	b	1aa44 <__assert_fail@plt+0x998c>
   1aa2c:	ldr	r0, [fp, #-12]
   1aa30:	movw	r1, #0
   1aa34:	sub	r0, r1, r0
   1aa38:	movw	r1, #65535	; 0xffff
   1aa3c:	sdiv	r0, r1, r0
   1aa40:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aa48:	ldr	r1, [fp, #-8]
   1aa4c:	ldr	r2, [r1]
   1aa50:	ldr	r1, [r1, #4]
   1aa54:	mvn	r1, r1
   1aa58:	mvn	r2, r2
   1aa5c:	subs	r2, r2, r0
   1aa60:	sbcs	r0, r1, r0, asr #31
   1aa64:	bcs	1aba0 <__assert_fail@plt+0x9ae8>
   1aa68:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1aa6c:	b	1aa70 <__assert_fail@plt+0x99b8>
   1aa70:	b	1aad0 <__assert_fail@plt+0x9a18>
   1aa74:	b	1aad0 <__assert_fail@plt+0x9a18>
   1aa78:	ldr	r0, [fp, #-12]
   1aa7c:	cmn	r0, #1
   1aa80:	bne	1aad0 <__assert_fail@plt+0x9a18>
   1aa84:	b	1aaa4 <__assert_fail@plt+0x99ec>
   1aa88:	ldr	r0, [fp, #-8]
   1aa8c:	ldr	r1, [r0]
   1aa90:	ldr	r0, [r0, #4]
   1aa94:	orr	r0, r1, r0
   1aa98:	cmp	r0, #0
   1aa9c:	bne	1aba0 <__assert_fail@plt+0x9ae8>
   1aaa0:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1aaa4:	ldr	r0, [fp, #-8]
   1aaa8:	ldr	r1, [r0]
   1aaac:	ldr	r0, [r0, #4]
   1aab0:	orr	r0, r1, r0
   1aab4:	cmp	r0, #0
   1aab8:	beq	1abc4 <__assert_fail@plt+0x9b0c>
   1aabc:	b	1aac0 <__assert_fail@plt+0x9a08>
   1aac0:	mov	r0, #0
   1aac4:	cmp	r0, #0
   1aac8:	bne	1aba0 <__assert_fail@plt+0x9ae8>
   1aacc:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1aad0:	ldr	r0, [fp, #-8]
   1aad4:	ldr	r1, [r0]
   1aad8:	ldr	r0, [r0, #4]
   1aadc:	orr	r0, r1, r0
   1aae0:	cmp	r0, #0
   1aae4:	bne	1aba0 <__assert_fail@plt+0x9ae8>
   1aae8:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1aaec:	ldr	r0, [fp, #-12]
   1aaf0:	cmp	r0, #0
   1aaf4:	bne	1aafc <__assert_fail@plt+0x9a44>
   1aaf8:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1aafc:	mov	r0, #1
   1ab00:	cmp	r0, #0
   1ab04:	bne	1ab78 <__assert_fail@plt+0x9ac0>
   1ab08:	b	1ab0c <__assert_fail@plt+0x9a54>
   1ab0c:	b	1ab14 <__assert_fail@plt+0x9a5c>
   1ab10:	b	1ab18 <__assert_fail@plt+0x9a60>
   1ab14:	b	1ab68 <__assert_fail@plt+0x9ab0>
   1ab18:	ldr	r0, [fp, #-8]
   1ab1c:	ldr	r1, [r0]
   1ab20:	ldr	r0, [r0, #4]
   1ab24:	and	r0, r1, r0
   1ab28:	cmn	r0, #1
   1ab2c:	bne	1ab68 <__assert_fail@plt+0x9ab0>
   1ab30:	b	1ab34 <__assert_fail@plt+0x9a7c>
   1ab34:	b	1ab38 <__assert_fail@plt+0x9a80>
   1ab38:	ldr	r0, [fp, #-12]
   1ab3c:	add	r0, r0, #0
   1ab40:	movw	r1, #0
   1ab44:	cmp	r1, r0
   1ab48:	blt	1aba0 <__assert_fail@plt+0x9ae8>
   1ab4c:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1ab50:	ldr	r0, [fp, #-12]
   1ab54:	sub	r0, r0, #1
   1ab58:	mvn	r1, #0
   1ab5c:	cmp	r1, r0
   1ab60:	blt	1aba0 <__assert_fail@plt+0x9ae8>
   1ab64:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1ab68:	ldr	r0, [fp, #-12]
   1ab6c:	cmp	r0, #0
   1ab70:	bne	1aba0 <__assert_fail@plt+0x9ae8>
   1ab74:	b	1abc4 <__assert_fail@plt+0x9b0c>
   1ab78:	ldr	r0, [fp, #-12]
   1ab7c:	movw	r1, #65535	; 0xffff
   1ab80:	sdiv	r0, r1, r0
   1ab84:	ldr	r1, [fp, #-8]
   1ab88:	ldr	r2, [r1]
   1ab8c:	ldr	r1, [r1, #4]
   1ab90:	subs	r2, r0, r2
   1ab94:	rscs	r0, r1, r0, asr #31
   1ab98:	bcs	1abc4 <__assert_fail@plt+0x9b0c>
   1ab9c:	b	1aba0 <__assert_fail@plt+0x9ae8>
   1aba0:	ldr	r0, [fp, #-8]
   1aba4:	ldr	r0, [r0]
   1aba8:	ldr	r1, [fp, #-12]
   1abac:	mul	r0, r0, r1
   1abb0:	uxth	r0, r0
   1abb4:	mov	r1, #0
   1abb8:	str	r1, [fp, #-20]	; 0xffffffec
   1abbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1abc0:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1abc4:	ldr	r0, [fp, #-8]
   1abc8:	ldr	r0, [r0]
   1abcc:	ldr	r1, [fp, #-12]
   1abd0:	mul	r0, r0, r1
   1abd4:	uxth	r0, r0
   1abd8:	mov	r1, #0
   1abdc:	str	r1, [fp, #-20]	; 0xffffffec
   1abe0:	str	r0, [fp, #-24]	; 0xffffffe8
   1abe4:	b	1baac <__assert_fail@plt+0xa9f4>
   1abe8:	b	1b07c <__assert_fail@plt+0x9fc4>
   1abec:	b	1ae4c <__assert_fail@plt+0x9d94>
   1abf0:	ldr	r0, [fp, #-12]
   1abf4:	cmp	r0, #0
   1abf8:	bge	1ad48 <__assert_fail@plt+0x9c90>
   1abfc:	mov	r0, #1
   1ac00:	cmp	r0, #0
   1ac04:	bne	1acac <__assert_fail@plt+0x9bf4>
   1ac08:	b	1ac0c <__assert_fail@plt+0x9b54>
   1ac0c:	b	1ac10 <__assert_fail@plt+0x9b58>
   1ac10:	ldr	r0, [fp, #-8]
   1ac14:	ldr	r1, [r0]
   1ac18:	ldr	r0, [r0, #4]
   1ac1c:	ldr	r2, [fp, #-12]
   1ac20:	mvn	r3, #-2147483648	; 0x80000000
   1ac24:	sdiv	r2, r3, r2
   1ac28:	subs	r1, r1, r2
   1ac2c:	sbcs	r0, r0, r2, asr #31
   1ac30:	bcc	1ae0c <__assert_fail@plt+0x9d54>
   1ac34:	b	1ae2c <__assert_fail@plt+0x9d74>
   1ac38:	b	1ac3c <__assert_fail@plt+0x9b84>
   1ac3c:	ldr	r0, [pc, #3728]	; 1bad4 <__assert_fail@plt+0xaa1c>
   1ac40:	ldr	r1, [fp, #-12]
   1ac44:	cmp	r1, r0
   1ac48:	blt	1ac60 <__assert_fail@plt+0x9ba8>
   1ac4c:	b	1ac6c <__assert_fail@plt+0x9bb4>
   1ac50:	ldr	r0, [fp, #-12]
   1ac54:	movw	r1, #0
   1ac58:	cmp	r1, r0
   1ac5c:	bge	1ac6c <__assert_fail@plt+0x9bb4>
   1ac60:	movw	r0, #0
   1ac64:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac68:	b	1ac84 <__assert_fail@plt+0x9bcc>
   1ac6c:	ldr	r0, [pc, #3684]	; 1bad8 <__assert_fail@plt+0xaa20>
   1ac70:	ldr	r1, [fp, #-12]
   1ac74:	movw	r2, #0
   1ac78:	sub	r1, r2, r1
   1ac7c:	sdiv	r0, r0, r1
   1ac80:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac88:	ldr	r1, [fp, #-8]
   1ac8c:	ldr	r2, [r1]
   1ac90:	ldr	r1, [r1, #4]
   1ac94:	mvn	r1, r1
   1ac98:	mvn	r2, r2
   1ac9c:	subs	r2, r2, r0
   1aca0:	sbcs	r0, r1, r0, asr #31
   1aca4:	bcs	1ae0c <__assert_fail@plt+0x9d54>
   1aca8:	b	1ae2c <__assert_fail@plt+0x9d74>
   1acac:	ldr	r0, [fp, #-12]
   1acb0:	cmn	r0, #1
   1acb4:	bne	1ad20 <__assert_fail@plt+0x9c68>
   1acb8:	b	1acdc <__assert_fail@plt+0x9c24>
   1acbc:	ldr	r0, [fp, #-8]
   1acc0:	ldr	r1, [r0]
   1acc4:	ldr	r0, [r0, #4]
   1acc8:	eor	r1, r1, #-2147483648	; 0x80000000
   1accc:	orr	r0, r1, r0
   1acd0:	cmp	r0, #0
   1acd4:	bne	1ae0c <__assert_fail@plt+0x9d54>
   1acd8:	b	1ae2c <__assert_fail@plt+0x9d74>
   1acdc:	ldr	r0, [fp, #-8]
   1ace0:	ldr	r1, [r0]
   1ace4:	ldr	r0, [r0, #4]
   1ace8:	orr	r0, r1, r0
   1acec:	cmp	r0, #0
   1acf0:	beq	1ae2c <__assert_fail@plt+0x9d74>
   1acf4:	b	1acf8 <__assert_fail@plt+0x9c40>
   1acf8:	ldr	r0, [fp, #-8]
   1acfc:	ldr	r1, [r0]
   1ad00:	ldr	r0, [r0, #4]
   1ad04:	subs	r1, r1, #1
   1ad08:	sbc	r0, r0, #0
   1ad0c:	mvn	r2, #-2147483648	; 0x80000000
   1ad10:	subs	r1, r2, r1
   1ad14:	rscs	r0, r0, #0
   1ad18:	bcc	1ae0c <__assert_fail@plt+0x9d54>
   1ad1c:	b	1ae2c <__assert_fail@plt+0x9d74>
   1ad20:	ldr	r0, [fp, #-12]
   1ad24:	mov	r1, #-2147483648	; 0x80000000
   1ad28:	sdiv	r0, r1, r0
   1ad2c:	ldr	r1, [fp, #-8]
   1ad30:	ldr	r2, [r1]
   1ad34:	ldr	r1, [r1, #4]
   1ad38:	subs	r2, r0, r2
   1ad3c:	rscs	r0, r1, r0, asr #31
   1ad40:	bcc	1ae0c <__assert_fail@plt+0x9d54>
   1ad44:	b	1ae2c <__assert_fail@plt+0x9d74>
   1ad48:	ldr	r0, [fp, #-12]
   1ad4c:	cmp	r0, #0
   1ad50:	bne	1ad58 <__assert_fail@plt+0x9ca0>
   1ad54:	b	1ae2c <__assert_fail@plt+0x9d74>
   1ad58:	mov	r0, #1
   1ad5c:	cmp	r0, #0
   1ad60:	bne	1ade4 <__assert_fail@plt+0x9d2c>
   1ad64:	b	1ad68 <__assert_fail@plt+0x9cb0>
   1ad68:	ldr	r0, [fp, #-8]
   1ad6c:	ldr	r1, [r0]
   1ad70:	ldr	r0, [r0, #4]
   1ad74:	and	r0, r1, r0
   1ad78:	cmn	r0, #1
   1ad7c:	bne	1adb8 <__assert_fail@plt+0x9d00>
   1ad80:	b	1ad84 <__assert_fail@plt+0x9ccc>
   1ad84:	b	1ad88 <__assert_fail@plt+0x9cd0>
   1ad88:	ldr	r0, [fp, #-12]
   1ad8c:	add	r0, r0, #-2147483648	; 0x80000000
   1ad90:	movw	r1, #0
   1ad94:	cmp	r1, r0
   1ad98:	blt	1ae0c <__assert_fail@plt+0x9d54>
   1ad9c:	b	1ae2c <__assert_fail@plt+0x9d74>
   1ada0:	ldr	r0, [pc, #3376]	; 1bad8 <__assert_fail@plt+0xaa20>
   1ada4:	ldr	r1, [fp, #-12]
   1ada8:	sub	r1, r1, #1
   1adac:	cmp	r0, r1
   1adb0:	blt	1ae0c <__assert_fail@plt+0x9d54>
   1adb4:	b	1ae2c <__assert_fail@plt+0x9d74>
   1adb8:	ldr	r0, [fp, #-8]
   1adbc:	ldr	r2, [r0]
   1adc0:	ldr	r3, [r0, #4]
   1adc4:	mov	r0, #-2147483648	; 0x80000000
   1adc8:	mvn	r1, #0
   1adcc:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1add0:	ldr	r2, [fp, #-12]
   1add4:	subs	r0, r0, r2
   1add8:	sbcs	r1, r1, r2, asr #31
   1addc:	bcc	1ae0c <__assert_fail@plt+0x9d54>
   1ade0:	b	1ae2c <__assert_fail@plt+0x9d74>
   1ade4:	ldr	r0, [fp, #-12]
   1ade8:	mvn	r1, #-2147483648	; 0x80000000
   1adec:	sdiv	r0, r1, r0
   1adf0:	ldr	r1, [fp, #-8]
   1adf4:	ldr	r2, [r1]
   1adf8:	ldr	r1, [r1, #4]
   1adfc:	subs	r2, r0, r2
   1ae00:	rscs	r0, r1, r0, asr #31
   1ae04:	bcs	1ae2c <__assert_fail@plt+0x9d74>
   1ae08:	b	1ae0c <__assert_fail@plt+0x9d54>
   1ae0c:	ldr	r0, [fp, #-8]
   1ae10:	ldr	r0, [r0]
   1ae14:	ldr	r1, [fp, #-12]
   1ae18:	mul	r0, r0, r1
   1ae1c:	asr	r1, r0, #31
   1ae20:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae24:	str	r1, [fp, #-20]	; 0xffffffec
   1ae28:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1ae2c:	ldr	r0, [fp, #-8]
   1ae30:	ldr	r0, [r0]
   1ae34:	ldr	r1, [fp, #-12]
   1ae38:	mul	r0, r0, r1
   1ae3c:	asr	r1, r0, #31
   1ae40:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae44:	str	r1, [fp, #-20]	; 0xffffffec
   1ae48:	b	1baac <__assert_fail@plt+0xa9f4>
   1ae4c:	ldr	r0, [fp, #-12]
   1ae50:	cmp	r0, #0
   1ae54:	bge	1af88 <__assert_fail@plt+0x9ed0>
   1ae58:	mov	r0, #1
   1ae5c:	cmp	r0, #0
   1ae60:	bne	1af08 <__assert_fail@plt+0x9e50>
   1ae64:	b	1ae68 <__assert_fail@plt+0x9db0>
   1ae68:	b	1ae94 <__assert_fail@plt+0x9ddc>
   1ae6c:	ldr	r0, [fp, #-8]
   1ae70:	ldr	r1, [r0]
   1ae74:	ldr	r0, [r0, #4]
   1ae78:	ldr	r2, [fp, #-12]
   1ae7c:	mvn	r3, #0
   1ae80:	udiv	r2, r3, r2
   1ae84:	subs	r1, r1, r2
   1ae88:	sbcs	r0, r0, #0
   1ae8c:	bcc	1b03c <__assert_fail@plt+0x9f84>
   1ae90:	b	1b05c <__assert_fail@plt+0x9fa4>
   1ae94:	b	1ae98 <__assert_fail@plt+0x9de0>
   1ae98:	ldr	r0, [pc, #3124]	; 1bad4 <__assert_fail@plt+0xaa1c>
   1ae9c:	ldr	r1, [fp, #-12]
   1aea0:	cmp	r1, r0
   1aea4:	blt	1aebc <__assert_fail@plt+0x9e04>
   1aea8:	b	1aec8 <__assert_fail@plt+0x9e10>
   1aeac:	ldr	r0, [fp, #-12]
   1aeb0:	movw	r1, #0
   1aeb4:	cmp	r1, r0
   1aeb8:	bge	1aec8 <__assert_fail@plt+0x9e10>
   1aebc:	movw	r0, #1
   1aec0:	str	r0, [fp, #-48]	; 0xffffffd0
   1aec4:	b	1aee0 <__assert_fail@plt+0x9e28>
   1aec8:	ldr	r0, [fp, #-12]
   1aecc:	movw	r1, #0
   1aed0:	sub	r0, r1, r0
   1aed4:	mvn	r1, #0
   1aed8:	udiv	r0, r1, r0
   1aedc:	str	r0, [fp, #-48]	; 0xffffffd0
   1aee0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aee4:	ldr	r1, [fp, #-8]
   1aee8:	ldr	r2, [r1]
   1aeec:	ldr	r1, [r1, #4]
   1aef0:	mvn	r1, r1
   1aef4:	mvn	r2, r2
   1aef8:	subs	r0, r2, r0
   1aefc:	sbcs	r1, r1, #0
   1af00:	bcs	1b03c <__assert_fail@plt+0x9f84>
   1af04:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af08:	b	1af0c <__assert_fail@plt+0x9e54>
   1af0c:	b	1af6c <__assert_fail@plt+0x9eb4>
   1af10:	b	1af6c <__assert_fail@plt+0x9eb4>
   1af14:	ldr	r0, [fp, #-12]
   1af18:	cmn	r0, #1
   1af1c:	bne	1af6c <__assert_fail@plt+0x9eb4>
   1af20:	b	1af40 <__assert_fail@plt+0x9e88>
   1af24:	ldr	r0, [fp, #-8]
   1af28:	ldr	r1, [r0]
   1af2c:	ldr	r0, [r0, #4]
   1af30:	orr	r0, r1, r0
   1af34:	cmp	r0, #0
   1af38:	bne	1b03c <__assert_fail@plt+0x9f84>
   1af3c:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af40:	ldr	r0, [fp, #-8]
   1af44:	ldr	r1, [r0]
   1af48:	ldr	r0, [r0, #4]
   1af4c:	orr	r0, r1, r0
   1af50:	cmp	r0, #0
   1af54:	beq	1b05c <__assert_fail@plt+0x9fa4>
   1af58:	b	1af5c <__assert_fail@plt+0x9ea4>
   1af5c:	mov	r0, #0
   1af60:	cmp	r0, #0
   1af64:	bne	1b03c <__assert_fail@plt+0x9f84>
   1af68:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af6c:	ldr	r0, [fp, #-8]
   1af70:	ldr	r1, [r0]
   1af74:	ldr	r0, [r0, #4]
   1af78:	orr	r0, r1, r0
   1af7c:	cmp	r0, #0
   1af80:	bne	1b03c <__assert_fail@plt+0x9f84>
   1af84:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af88:	ldr	r0, [fp, #-12]
   1af8c:	cmp	r0, #0
   1af90:	bne	1af98 <__assert_fail@plt+0x9ee0>
   1af94:	b	1b05c <__assert_fail@plt+0x9fa4>
   1af98:	mov	r0, #1
   1af9c:	cmp	r0, #0
   1afa0:	bne	1b014 <__assert_fail@plt+0x9f5c>
   1afa4:	b	1afa8 <__assert_fail@plt+0x9ef0>
   1afa8:	b	1afb0 <__assert_fail@plt+0x9ef8>
   1afac:	b	1afb4 <__assert_fail@plt+0x9efc>
   1afb0:	b	1b004 <__assert_fail@plt+0x9f4c>
   1afb4:	ldr	r0, [fp, #-8]
   1afb8:	ldr	r1, [r0]
   1afbc:	ldr	r0, [r0, #4]
   1afc0:	and	r0, r1, r0
   1afc4:	cmn	r0, #1
   1afc8:	bne	1b004 <__assert_fail@plt+0x9f4c>
   1afcc:	b	1afd0 <__assert_fail@plt+0x9f18>
   1afd0:	b	1afd4 <__assert_fail@plt+0x9f1c>
   1afd4:	ldr	r0, [fp, #-12]
   1afd8:	add	r0, r0, #0
   1afdc:	movw	r1, #0
   1afe0:	cmp	r1, r0
   1afe4:	blt	1b03c <__assert_fail@plt+0x9f84>
   1afe8:	b	1b05c <__assert_fail@plt+0x9fa4>
   1afec:	ldr	r0, [fp, #-12]
   1aff0:	sub	r0, r0, #1
   1aff4:	mvn	r1, #0
   1aff8:	cmp	r1, r0
   1affc:	blt	1b03c <__assert_fail@plt+0x9f84>
   1b000:	b	1b05c <__assert_fail@plt+0x9fa4>
   1b004:	ldr	r0, [fp, #-12]
   1b008:	cmp	r0, #0
   1b00c:	bne	1b03c <__assert_fail@plt+0x9f84>
   1b010:	b	1b05c <__assert_fail@plt+0x9fa4>
   1b014:	ldr	r0, [fp, #-12]
   1b018:	mvn	r1, #0
   1b01c:	udiv	r0, r1, r0
   1b020:	ldr	r1, [fp, #-8]
   1b024:	ldr	r2, [r1]
   1b028:	ldr	r1, [r1, #4]
   1b02c:	subs	r0, r0, r2
   1b030:	rscs	r1, r1, #0
   1b034:	bcs	1b05c <__assert_fail@plt+0x9fa4>
   1b038:	b	1b03c <__assert_fail@plt+0x9f84>
   1b03c:	ldr	r0, [fp, #-8]
   1b040:	ldr	r0, [r0]
   1b044:	ldr	r1, [fp, #-12]
   1b048:	mul	r0, r0, r1
   1b04c:	mov	r1, #0
   1b050:	str	r1, [fp, #-20]	; 0xffffffec
   1b054:	str	r0, [fp, #-24]	; 0xffffffe8
   1b058:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1b05c:	ldr	r0, [fp, #-8]
   1b060:	ldr	r0, [r0]
   1b064:	ldr	r1, [fp, #-12]
   1b068:	mul	r0, r0, r1
   1b06c:	mov	r1, #0
   1b070:	str	r1, [fp, #-20]	; 0xffffffec
   1b074:	str	r0, [fp, #-24]	; 0xffffffe8
   1b078:	b	1baac <__assert_fail@plt+0xa9f4>
   1b07c:	b	1b514 <__assert_fail@plt+0xa45c>
   1b080:	b	1b2e4 <__assert_fail@plt+0xa22c>
   1b084:	ldr	r0, [fp, #-12]
   1b088:	cmp	r0, #0
   1b08c:	bge	1b1dc <__assert_fail@plt+0xa124>
   1b090:	mov	r0, #1
   1b094:	cmp	r0, #0
   1b098:	bne	1b140 <__assert_fail@plt+0xa088>
   1b09c:	b	1b0a0 <__assert_fail@plt+0x9fe8>
   1b0a0:	b	1b0a4 <__assert_fail@plt+0x9fec>
   1b0a4:	ldr	r0, [fp, #-8]
   1b0a8:	ldr	r1, [r0]
   1b0ac:	ldr	r0, [r0, #4]
   1b0b0:	ldr	r2, [fp, #-12]
   1b0b4:	mvn	r3, #-2147483648	; 0x80000000
   1b0b8:	sdiv	r2, r3, r2
   1b0bc:	subs	r1, r1, r2
   1b0c0:	sbcs	r0, r0, r2, asr #31
   1b0c4:	bcc	1b2a0 <__assert_fail@plt+0xa1e8>
   1b0c8:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b0cc:	b	1b0d0 <__assert_fail@plt+0xa018>
   1b0d0:	ldr	r0, [pc, #2556]	; 1bad4 <__assert_fail@plt+0xaa1c>
   1b0d4:	ldr	r1, [fp, #-12]
   1b0d8:	cmp	r1, r0
   1b0dc:	blt	1b0f4 <__assert_fail@plt+0xa03c>
   1b0e0:	b	1b100 <__assert_fail@plt+0xa048>
   1b0e4:	ldr	r0, [fp, #-12]
   1b0e8:	movw	r1, #0
   1b0ec:	cmp	r1, r0
   1b0f0:	bge	1b100 <__assert_fail@plt+0xa048>
   1b0f4:	movw	r0, #0
   1b0f8:	str	r0, [fp, #-52]	; 0xffffffcc
   1b0fc:	b	1b118 <__assert_fail@plt+0xa060>
   1b100:	ldr	r0, [pc, #2512]	; 1bad8 <__assert_fail@plt+0xaa20>
   1b104:	ldr	r1, [fp, #-12]
   1b108:	movw	r2, #0
   1b10c:	sub	r1, r2, r1
   1b110:	sdiv	r0, r0, r1
   1b114:	str	r0, [fp, #-52]	; 0xffffffcc
   1b118:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b11c:	ldr	r1, [fp, #-8]
   1b120:	ldr	r2, [r1]
   1b124:	ldr	r1, [r1, #4]
   1b128:	mvn	r1, r1
   1b12c:	mvn	r2, r2
   1b130:	subs	r2, r2, r0
   1b134:	sbcs	r0, r1, r0, asr #31
   1b138:	bcs	1b2a0 <__assert_fail@plt+0xa1e8>
   1b13c:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b140:	ldr	r0, [fp, #-12]
   1b144:	cmn	r0, #1
   1b148:	bne	1b1b4 <__assert_fail@plt+0xa0fc>
   1b14c:	b	1b170 <__assert_fail@plt+0xa0b8>
   1b150:	ldr	r0, [fp, #-8]
   1b154:	ldr	r1, [r0]
   1b158:	ldr	r0, [r0, #4]
   1b15c:	eor	r1, r1, #-2147483648	; 0x80000000
   1b160:	orr	r0, r1, r0
   1b164:	cmp	r0, #0
   1b168:	bne	1b2a0 <__assert_fail@plt+0xa1e8>
   1b16c:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b170:	ldr	r0, [fp, #-8]
   1b174:	ldr	r1, [r0]
   1b178:	ldr	r0, [r0, #4]
   1b17c:	orr	r0, r1, r0
   1b180:	cmp	r0, #0
   1b184:	beq	1b2c4 <__assert_fail@plt+0xa20c>
   1b188:	b	1b18c <__assert_fail@plt+0xa0d4>
   1b18c:	ldr	r0, [fp, #-8]
   1b190:	ldr	r1, [r0]
   1b194:	ldr	r0, [r0, #4]
   1b198:	subs	r1, r1, #1
   1b19c:	sbc	r0, r0, #0
   1b1a0:	mvn	r2, #-2147483648	; 0x80000000
   1b1a4:	subs	r1, r2, r1
   1b1a8:	rscs	r0, r0, #0
   1b1ac:	bcc	1b2a0 <__assert_fail@plt+0xa1e8>
   1b1b0:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b1b4:	ldr	r0, [fp, #-12]
   1b1b8:	mov	r1, #-2147483648	; 0x80000000
   1b1bc:	sdiv	r0, r1, r0
   1b1c0:	ldr	r1, [fp, #-8]
   1b1c4:	ldr	r2, [r1]
   1b1c8:	ldr	r1, [r1, #4]
   1b1cc:	subs	r2, r0, r2
   1b1d0:	rscs	r0, r1, r0, asr #31
   1b1d4:	bcc	1b2a0 <__assert_fail@plt+0xa1e8>
   1b1d8:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b1dc:	ldr	r0, [fp, #-12]
   1b1e0:	cmp	r0, #0
   1b1e4:	bne	1b1ec <__assert_fail@plt+0xa134>
   1b1e8:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b1ec:	mov	r0, #1
   1b1f0:	cmp	r0, #0
   1b1f4:	bne	1b278 <__assert_fail@plt+0xa1c0>
   1b1f8:	b	1b1fc <__assert_fail@plt+0xa144>
   1b1fc:	ldr	r0, [fp, #-8]
   1b200:	ldr	r1, [r0]
   1b204:	ldr	r0, [r0, #4]
   1b208:	and	r0, r1, r0
   1b20c:	cmn	r0, #1
   1b210:	bne	1b24c <__assert_fail@plt+0xa194>
   1b214:	b	1b218 <__assert_fail@plt+0xa160>
   1b218:	b	1b21c <__assert_fail@plt+0xa164>
   1b21c:	ldr	r0, [fp, #-12]
   1b220:	add	r0, r0, #-2147483648	; 0x80000000
   1b224:	movw	r1, #0
   1b228:	cmp	r1, r0
   1b22c:	blt	1b2a0 <__assert_fail@plt+0xa1e8>
   1b230:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b234:	ldr	r0, [pc, #2204]	; 1bad8 <__assert_fail@plt+0xaa20>
   1b238:	ldr	r1, [fp, #-12]
   1b23c:	sub	r1, r1, #1
   1b240:	cmp	r0, r1
   1b244:	blt	1b2a0 <__assert_fail@plt+0xa1e8>
   1b248:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b24c:	ldr	r0, [fp, #-8]
   1b250:	ldr	r2, [r0]
   1b254:	ldr	r3, [r0, #4]
   1b258:	mov	r0, #-2147483648	; 0x80000000
   1b25c:	mvn	r1, #0
   1b260:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1b264:	ldr	r2, [fp, #-12]
   1b268:	subs	r0, r0, r2
   1b26c:	sbcs	r1, r1, r2, asr #31
   1b270:	bcc	1b2a0 <__assert_fail@plt+0xa1e8>
   1b274:	b	1b2c4 <__assert_fail@plt+0xa20c>
   1b278:	ldr	r0, [fp, #-12]
   1b27c:	mvn	r1, #-2147483648	; 0x80000000
   1b280:	sdiv	r0, r1, r0
   1b284:	ldr	r1, [fp, #-8]
   1b288:	ldr	r2, [r1]
   1b28c:	ldr	r1, [r1, #4]
   1b290:	subs	r2, r0, r2
   1b294:	rscs	r0, r1, r0, asr #31
   1b298:	bcs	1b2c4 <__assert_fail@plt+0xa20c>
   1b29c:	b	1b2a0 <__assert_fail@plt+0xa1e8>
   1b2a0:	ldr	r0, [fp, #-8]
   1b2a4:	ldr	r0, [r0]
   1b2a8:	ldr	r1, [fp, #-12]
   1b2ac:	mul	r0, r0, r1
   1b2b0:	asr	r1, r0, #31
   1b2b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b2b8:	str	r1, [fp, #-20]	; 0xffffffec
   1b2bc:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1b2c0:	andhi	r0, r0, r1
   1b2c4:	ldr	r0, [fp, #-8]
   1b2c8:	ldr	r0, [r0]
   1b2cc:	ldr	r1, [fp, #-12]
   1b2d0:	mul	r0, r0, r1
   1b2d4:	asr	r1, r0, #31
   1b2d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b2dc:	str	r1, [fp, #-20]	; 0xffffffec
   1b2e0:	b	1baac <__assert_fail@plt+0xa9f4>
   1b2e4:	ldr	r0, [fp, #-12]
   1b2e8:	cmp	r0, #0
   1b2ec:	bge	1b420 <__assert_fail@plt+0xa368>
   1b2f0:	mov	r0, #1
   1b2f4:	cmp	r0, #0
   1b2f8:	bne	1b3a0 <__assert_fail@plt+0xa2e8>
   1b2fc:	b	1b300 <__assert_fail@plt+0xa248>
   1b300:	b	1b32c <__assert_fail@plt+0xa274>
   1b304:	ldr	r0, [fp, #-8]
   1b308:	ldr	r1, [r0]
   1b30c:	ldr	r0, [r0, #4]
   1b310:	ldr	r2, [fp, #-12]
   1b314:	mvn	r3, #0
   1b318:	udiv	r2, r3, r2
   1b31c:	subs	r1, r1, r2
   1b320:	sbcs	r0, r0, #0
   1b324:	bcc	1b4d4 <__assert_fail@plt+0xa41c>
   1b328:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b32c:	b	1b330 <__assert_fail@plt+0xa278>
   1b330:	ldr	r0, [pc, #1948]	; 1bad4 <__assert_fail@plt+0xaa1c>
   1b334:	ldr	r1, [fp, #-12]
   1b338:	cmp	r1, r0
   1b33c:	blt	1b354 <__assert_fail@plt+0xa29c>
   1b340:	b	1b360 <__assert_fail@plt+0xa2a8>
   1b344:	ldr	r0, [fp, #-12]
   1b348:	movw	r1, #0
   1b34c:	cmp	r1, r0
   1b350:	bge	1b360 <__assert_fail@plt+0xa2a8>
   1b354:	movw	r0, #1
   1b358:	str	r0, [sp, #56]	; 0x38
   1b35c:	b	1b378 <__assert_fail@plt+0xa2c0>
   1b360:	ldr	r0, [fp, #-12]
   1b364:	movw	r1, #0
   1b368:	sub	r0, r1, r0
   1b36c:	mvn	r1, #0
   1b370:	udiv	r0, r1, r0
   1b374:	str	r0, [sp, #56]	; 0x38
   1b378:	ldr	r0, [sp, #56]	; 0x38
   1b37c:	ldr	r1, [fp, #-8]
   1b380:	ldr	r2, [r1]
   1b384:	ldr	r1, [r1, #4]
   1b388:	mvn	r1, r1
   1b38c:	mvn	r2, r2
   1b390:	subs	r0, r2, r0
   1b394:	sbcs	r1, r1, #0
   1b398:	bcs	1b4d4 <__assert_fail@plt+0xa41c>
   1b39c:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b3a0:	b	1b3a4 <__assert_fail@plt+0xa2ec>
   1b3a4:	b	1b404 <__assert_fail@plt+0xa34c>
   1b3a8:	b	1b404 <__assert_fail@plt+0xa34c>
   1b3ac:	ldr	r0, [fp, #-12]
   1b3b0:	cmn	r0, #1
   1b3b4:	bne	1b404 <__assert_fail@plt+0xa34c>
   1b3b8:	b	1b3d8 <__assert_fail@plt+0xa320>
   1b3bc:	ldr	r0, [fp, #-8]
   1b3c0:	ldr	r1, [r0]
   1b3c4:	ldr	r0, [r0, #4]
   1b3c8:	orr	r0, r1, r0
   1b3cc:	cmp	r0, #0
   1b3d0:	bne	1b4d4 <__assert_fail@plt+0xa41c>
   1b3d4:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b3d8:	ldr	r0, [fp, #-8]
   1b3dc:	ldr	r1, [r0]
   1b3e0:	ldr	r0, [r0, #4]
   1b3e4:	orr	r0, r1, r0
   1b3e8:	cmp	r0, #0
   1b3ec:	beq	1b4f4 <__assert_fail@plt+0xa43c>
   1b3f0:	b	1b3f4 <__assert_fail@plt+0xa33c>
   1b3f4:	mov	r0, #0
   1b3f8:	cmp	r0, #0
   1b3fc:	bne	1b4d4 <__assert_fail@plt+0xa41c>
   1b400:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b404:	ldr	r0, [fp, #-8]
   1b408:	ldr	r1, [r0]
   1b40c:	ldr	r0, [r0, #4]
   1b410:	orr	r0, r1, r0
   1b414:	cmp	r0, #0
   1b418:	bne	1b4d4 <__assert_fail@plt+0xa41c>
   1b41c:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b420:	ldr	r0, [fp, #-12]
   1b424:	cmp	r0, #0
   1b428:	bne	1b430 <__assert_fail@plt+0xa378>
   1b42c:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b430:	mov	r0, #1
   1b434:	cmp	r0, #0
   1b438:	bne	1b4ac <__assert_fail@plt+0xa3f4>
   1b43c:	b	1b440 <__assert_fail@plt+0xa388>
   1b440:	b	1b448 <__assert_fail@plt+0xa390>
   1b444:	b	1b44c <__assert_fail@plt+0xa394>
   1b448:	b	1b49c <__assert_fail@plt+0xa3e4>
   1b44c:	ldr	r0, [fp, #-8]
   1b450:	ldr	r1, [r0]
   1b454:	ldr	r0, [r0, #4]
   1b458:	and	r0, r1, r0
   1b45c:	cmn	r0, #1
   1b460:	bne	1b49c <__assert_fail@plt+0xa3e4>
   1b464:	b	1b468 <__assert_fail@plt+0xa3b0>
   1b468:	b	1b46c <__assert_fail@plt+0xa3b4>
   1b46c:	ldr	r0, [fp, #-12]
   1b470:	add	r0, r0, #0
   1b474:	movw	r1, #0
   1b478:	cmp	r1, r0
   1b47c:	blt	1b4d4 <__assert_fail@plt+0xa41c>
   1b480:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b484:	ldr	r0, [fp, #-12]
   1b488:	sub	r0, r0, #1
   1b48c:	mvn	r1, #0
   1b490:	cmp	r1, r0
   1b494:	blt	1b4d4 <__assert_fail@plt+0xa41c>
   1b498:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b49c:	ldr	r0, [fp, #-12]
   1b4a0:	cmp	r0, #0
   1b4a4:	bne	1b4d4 <__assert_fail@plt+0xa41c>
   1b4a8:	b	1b4f4 <__assert_fail@plt+0xa43c>
   1b4ac:	ldr	r0, [fp, #-12]
   1b4b0:	mvn	r1, #0
   1b4b4:	udiv	r0, r1, r0
   1b4b8:	ldr	r1, [fp, #-8]
   1b4bc:	ldr	r2, [r1]
   1b4c0:	ldr	r1, [r1, #4]
   1b4c4:	subs	r0, r0, r2
   1b4c8:	rscs	r1, r1, #0
   1b4cc:	bcs	1b4f4 <__assert_fail@plt+0xa43c>
   1b4d0:	b	1b4d4 <__assert_fail@plt+0xa41c>
   1b4d4:	ldr	r0, [fp, #-8]
   1b4d8:	ldr	r0, [r0]
   1b4dc:	ldr	r1, [fp, #-12]
   1b4e0:	mul	r0, r0, r1
   1b4e4:	mov	r1, #0
   1b4e8:	str	r1, [fp, #-20]	; 0xffffffec
   1b4ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1b4f0:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1b4f4:	ldr	r0, [fp, #-8]
   1b4f8:	ldr	r0, [r0]
   1b4fc:	ldr	r1, [fp, #-12]
   1b500:	mul	r0, r0, r1
   1b504:	mov	r1, #0
   1b508:	str	r1, [fp, #-20]	; 0xffffffec
   1b50c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b510:	b	1baac <__assert_fail@plt+0xa9f4>
   1b514:	b	1b7f8 <__assert_fail@plt+0xa740>
   1b518:	ldr	r0, [fp, #-12]
   1b51c:	cmp	r0, #0
   1b520:	bge	1b6c8 <__assert_fail@plt+0xa610>
   1b524:	mov	r0, #1
   1b528:	cmp	r0, #0
   1b52c:	bne	1b61c <__assert_fail@plt+0xa564>
   1b530:	b	1b534 <__assert_fail@plt+0xa47c>
   1b534:	b	1b538 <__assert_fail@plt+0xa480>
   1b538:	ldr	r0, [fp, #-8]
   1b53c:	ldr	r1, [r0]
   1b540:	ldr	r0, [r0, #4]
   1b544:	ldr	r2, [fp, #-12]
   1b548:	asr	r3, r2, #31
   1b54c:	mvn	ip, #0
   1b550:	mvn	lr, #-2147483648	; 0x80000000
   1b554:	str	r0, [sp, #52]	; 0x34
   1b558:	mov	r0, ip
   1b55c:	str	r1, [sp, #48]	; 0x30
   1b560:	mov	r1, lr
   1b564:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1b568:	ldr	r2, [sp, #48]	; 0x30
   1b56c:	subs	r0, r2, r0
   1b570:	ldr	r2, [sp, #52]	; 0x34
   1b574:	sbcs	r1, r2, r1
   1b578:	bcc	1b7a0 <__assert_fail@plt+0xa6e8>
   1b57c:	b	1b7cc <__assert_fail@plt+0xa714>
   1b580:	b	1b584 <__assert_fail@plt+0xa4cc>
   1b584:	ldr	r0, [pc, #1352]	; 1bad4 <__assert_fail@plt+0xaa1c>
   1b588:	ldr	r1, [fp, #-12]
   1b58c:	cmp	r1, r0
   1b590:	blt	1b5a8 <__assert_fail@plt+0xa4f0>
   1b594:	b	1b5bc <__assert_fail@plt+0xa504>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	movw	r1, #0
   1b5a0:	cmp	r1, r0
   1b5a4:	bge	1b5bc <__assert_fail@plt+0xa504>
   1b5a8:	mov	r0, #0
   1b5ac:	mvn	r1, #0
   1b5b0:	str	r1, [sp, #44]	; 0x2c
   1b5b4:	str	r0, [sp, #40]	; 0x28
   1b5b8:	b	1b5f0 <__assert_fail@plt+0xa538>
   1b5bc:	ldr	r0, [fp, #-12]
   1b5c0:	rsb	r0, r0, #0
   1b5c4:	asr	r3, r0, #31
   1b5c8:	mvn	r1, #0
   1b5cc:	mvn	r2, #-2147483648	; 0x80000000
   1b5d0:	str	r0, [sp, #36]	; 0x24
   1b5d4:	mov	r0, r1
   1b5d8:	mov	r1, r2
   1b5dc:	ldr	r2, [sp, #36]	; 0x24
   1b5e0:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1b5e4:	str	r0, [sp, #44]	; 0x2c
   1b5e8:	str	r1, [sp, #40]	; 0x28
   1b5ec:	b	1b5f0 <__assert_fail@plt+0xa538>
   1b5f0:	ldr	r0, [sp, #40]	; 0x28
   1b5f4:	ldr	r1, [sp, #44]	; 0x2c
   1b5f8:	ldr	r2, [fp, #-8]
   1b5fc:	ldr	r3, [r2]
   1b600:	ldr	r2, [r2, #4]
   1b604:	mvn	r2, r2
   1b608:	mvn	r3, r3
   1b60c:	subs	r1, r3, r1
   1b610:	sbcs	r0, r2, r0
   1b614:	bcs	1b7a0 <__assert_fail@plt+0xa6e8>
   1b618:	b	1b7cc <__assert_fail@plt+0xa714>
   1b61c:	ldr	r0, [fp, #-12]
   1b620:	cmn	r0, #1
   1b624:	bne	1b688 <__assert_fail@plt+0xa5d0>
   1b628:	b	1b64c <__assert_fail@plt+0xa594>
   1b62c:	ldr	r0, [fp, #-8]
   1b630:	ldr	r1, [r0]
   1b634:	ldr	r0, [r0, #4]
   1b638:	eor	r0, r0, #-2147483648	; 0x80000000
   1b63c:	orr	r0, r1, r0
   1b640:	cmp	r0, #0
   1b644:	bne	1b7a0 <__assert_fail@plt+0xa6e8>
   1b648:	b	1b7cc <__assert_fail@plt+0xa714>
   1b64c:	ldr	r0, [fp, #-8]
   1b650:	ldr	r1, [r0]
   1b654:	ldr	r0, [r0, #4]
   1b658:	orr	r0, r1, r0
   1b65c:	cmp	r0, #0
   1b660:	beq	1b7cc <__assert_fail@plt+0xa714>
   1b664:	b	1b668 <__assert_fail@plt+0xa5b0>
   1b668:	ldr	r0, [fp, #-8]
   1b66c:	ldr	r1, [r0]
   1b670:	ldr	r0, [r0, #4]
   1b674:	subs	r1, r1, #1
   1b678:	sbc	r0, r0, #0
   1b67c:	cmp	r0, #0
   1b680:	bmi	1b7a0 <__assert_fail@plt+0xa6e8>
   1b684:	b	1b7cc <__assert_fail@plt+0xa714>
   1b688:	ldr	r0, [fp, #-12]
   1b68c:	asr	r3, r0, #31
   1b690:	mov	r1, #0
   1b694:	mov	r2, #-2147483648	; 0x80000000
   1b698:	str	r0, [sp, #32]
   1b69c:	mov	r0, r1
   1b6a0:	mov	r1, r2
   1b6a4:	ldr	r2, [sp, #32]
   1b6a8:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1b6ac:	ldr	r2, [fp, #-8]
   1b6b0:	ldr	r3, [r2]
   1b6b4:	ldr	r2, [r2, #4]
   1b6b8:	subs	r0, r0, r3
   1b6bc:	sbcs	r1, r1, r2
   1b6c0:	bcc	1b7a0 <__assert_fail@plt+0xa6e8>
   1b6c4:	b	1b7cc <__assert_fail@plt+0xa714>
   1b6c8:	ldr	r0, [fp, #-12]
   1b6cc:	cmp	r0, #0
   1b6d0:	bne	1b6d8 <__assert_fail@plt+0xa620>
   1b6d4:	b	1b7cc <__assert_fail@plt+0xa714>
   1b6d8:	mov	r0, #1
   1b6dc:	cmp	r0, #0
   1b6e0:	bne	1b760 <__assert_fail@plt+0xa6a8>
   1b6e4:	b	1b6e8 <__assert_fail@plt+0xa630>
   1b6e8:	ldr	r0, [fp, #-8]
   1b6ec:	ldr	r1, [r0]
   1b6f0:	ldr	r0, [r0, #4]
   1b6f4:	and	r0, r1, r0
   1b6f8:	cmn	r0, #1
   1b6fc:	bne	1b734 <__assert_fail@plt+0xa67c>
   1b700:	b	1b704 <__assert_fail@plt+0xa64c>
   1b704:	b	1b708 <__assert_fail@plt+0xa650>
   1b708:	ldr	r0, [fp, #-12]
   1b70c:	mov	r1, #-2147483648	; 0x80000000
   1b710:	add	r1, r1, r0, asr #31
   1b714:	rsbs	r0, r0, #0
   1b718:	rscs	r1, r1, #0
   1b71c:	blt	1b7a0 <__assert_fail@plt+0xa6e8>
   1b720:	b	1b7cc <__assert_fail@plt+0xa714>
   1b724:	mov	r0, #0
   1b728:	cmp	r0, #0
   1b72c:	bne	1b7a0 <__assert_fail@plt+0xa6e8>
   1b730:	b	1b7cc <__assert_fail@plt+0xa714>
   1b734:	ldr	r0, [fp, #-8]
   1b738:	ldr	r2, [r0]
   1b73c:	ldr	r3, [r0, #4]
   1b740:	mov	r0, #0
   1b744:	mov	r1, #-2147483648	; 0x80000000
   1b748:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1b74c:	ldr	r2, [fp, #-12]
   1b750:	subs	r0, r0, r2
   1b754:	sbcs	r1, r1, r2, asr #31
   1b758:	bcc	1b7a0 <__assert_fail@plt+0xa6e8>
   1b75c:	b	1b7cc <__assert_fail@plt+0xa714>
   1b760:	ldr	r0, [fp, #-12]
   1b764:	asr	r3, r0, #31
   1b768:	mvn	r1, #0
   1b76c:	mvn	r2, #-2147483648	; 0x80000000
   1b770:	str	r0, [sp, #28]
   1b774:	mov	r0, r1
   1b778:	mov	r1, r2
   1b77c:	ldr	r2, [sp, #28]
   1b780:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1b784:	ldr	r2, [fp, #-8]
   1b788:	ldr	r3, [r2]
   1b78c:	ldr	r2, [r2, #4]
   1b790:	subs	r0, r0, r3
   1b794:	sbcs	r1, r1, r2
   1b798:	bcs	1b7cc <__assert_fail@plt+0xa714>
   1b79c:	b	1b7a0 <__assert_fail@plt+0xa6e8>
   1b7a0:	ldr	r0, [fp, #-8]
   1b7a4:	ldr	r1, [r0]
   1b7a8:	ldr	r0, [r0, #4]
   1b7ac:	ldr	r2, [fp, #-12]
   1b7b0:	asr	r3, r2, #31
   1b7b4:	umull	ip, lr, r1, r2
   1b7b8:	mla	r1, r1, r3, lr
   1b7bc:	mla	r0, r0, r2, r1
   1b7c0:	str	ip, [fp, #-24]	; 0xffffffe8
   1b7c4:	str	r0, [fp, #-20]	; 0xffffffec
   1b7c8:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1b7cc:	ldr	r0, [fp, #-8]
   1b7d0:	ldr	r1, [r0]
   1b7d4:	ldr	r0, [r0, #4]
   1b7d8:	ldr	r2, [fp, #-12]
   1b7dc:	asr	r3, r2, #31
   1b7e0:	umull	ip, lr, r1, r2
   1b7e4:	mla	r1, r1, r3, lr
   1b7e8:	mla	r0, r0, r2, r1
   1b7ec:	str	ip, [fp, #-24]	; 0xffffffe8
   1b7f0:	str	r0, [fp, #-20]	; 0xffffffec
   1b7f4:	b	1baac <__assert_fail@plt+0xa9f4>
   1b7f8:	ldr	r0, [fp, #-12]
   1b7fc:	cmp	r0, #0
   1b800:	bge	1b974 <__assert_fail@plt+0xa8bc>
   1b804:	mov	r0, #1
   1b808:	cmp	r0, #0
   1b80c:	bne	1b8f4 <__assert_fail@plt+0xa83c>
   1b810:	b	1b814 <__assert_fail@plt+0xa75c>
   1b814:	b	1b85c <__assert_fail@plt+0xa7a4>
   1b818:	ldr	r0, [fp, #-8]
   1b81c:	ldr	r1, [r0]
   1b820:	ldr	r0, [r0, #4]
   1b824:	ldr	r2, [fp, #-12]
   1b828:	asr	r3, r2, #31
   1b82c:	mvn	ip, #0
   1b830:	str	r0, [sp, #24]
   1b834:	mov	r0, ip
   1b838:	str	r1, [sp, #20]
   1b83c:	mov	r1, ip
   1b840:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1b844:	ldr	r2, [sp, #20]
   1b848:	subs	r0, r2, r0
   1b84c:	ldr	r2, [sp, #24]
   1b850:	sbcs	r1, r2, r1
   1b854:	bcc	1ba38 <__assert_fail@plt+0xa980>
   1b858:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b85c:	b	1b860 <__assert_fail@plt+0xa7a8>
   1b860:	ldr	r0, [pc, #620]	; 1bad4 <__assert_fail@plt+0xaa1c>
   1b864:	ldr	r1, [fp, #-12]
   1b868:	cmp	r1, r0
   1b86c:	blt	1b884 <__assert_fail@plt+0xa7cc>
   1b870:	b	1b89c <__assert_fail@plt+0xa7e4>
   1b874:	ldr	r0, [fp, #-12]
   1b878:	movw	r1, #0
   1b87c:	cmp	r1, r0
   1b880:	bge	1b89c <__assert_fail@plt+0xa7e4>
   1b884:	mov	r0, #1
   1b888:	mvn	r1, #0
   1b88c:	str	r1, [sp, #16]
   1b890:	str	r0, [sp, #12]
   1b894:	b	1b8c8 <__assert_fail@plt+0xa810>
   1b898:			; <UNDEFINED> instruction: 0xffff8000
   1b89c:	ldr	r0, [fp, #-12]
   1b8a0:	rsb	r0, r0, #0
   1b8a4:	asr	r3, r0, #31
   1b8a8:	mvn	r1, #0
   1b8ac:	str	r0, [sp, #8]
   1b8b0:	mov	r0, r1
   1b8b4:	ldr	r2, [sp, #8]
   1b8b8:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1b8bc:	str	r0, [sp, #16]
   1b8c0:	str	r1, [sp, #12]
   1b8c4:	b	1b8c8 <__assert_fail@plt+0xa810>
   1b8c8:	ldr	r0, [sp, #12]
   1b8cc:	ldr	r1, [sp, #16]
   1b8d0:	ldr	r2, [fp, #-8]
   1b8d4:	ldr	r3, [r2]
   1b8d8:	ldr	r2, [r2, #4]
   1b8dc:	mvn	r2, r2
   1b8e0:	mvn	r3, r3
   1b8e4:	subs	r1, r3, r1
   1b8e8:	sbcs	r0, r2, r0
   1b8ec:	bcs	1ba38 <__assert_fail@plt+0xa980>
   1b8f0:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b8f4:	b	1b8f8 <__assert_fail@plt+0xa840>
   1b8f8:	b	1b958 <__assert_fail@plt+0xa8a0>
   1b8fc:	b	1b958 <__assert_fail@plt+0xa8a0>
   1b900:	ldr	r0, [fp, #-12]
   1b904:	cmn	r0, #1
   1b908:	bne	1b958 <__assert_fail@plt+0xa8a0>
   1b90c:	b	1b92c <__assert_fail@plt+0xa874>
   1b910:	ldr	r0, [fp, #-8]
   1b914:	ldr	r1, [r0]
   1b918:	ldr	r0, [r0, #4]
   1b91c:	orr	r0, r1, r0
   1b920:	cmp	r0, #0
   1b924:	bne	1ba38 <__assert_fail@plt+0xa980>
   1b928:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b92c:	ldr	r0, [fp, #-8]
   1b930:	ldr	r1, [r0]
   1b934:	ldr	r0, [r0, #4]
   1b938:	orr	r0, r1, r0
   1b93c:	cmp	r0, #0
   1b940:	beq	1ba64 <__assert_fail@plt+0xa9ac>
   1b944:	b	1b948 <__assert_fail@plt+0xa890>
   1b948:	mov	r0, #0
   1b94c:	cmp	r0, #0
   1b950:	bne	1ba38 <__assert_fail@plt+0xa980>
   1b954:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b958:	ldr	r0, [fp, #-8]
   1b95c:	ldr	r1, [r0]
   1b960:	ldr	r0, [r0, #4]
   1b964:	orr	r0, r1, r0
   1b968:	cmp	r0, #0
   1b96c:	bne	1ba38 <__assert_fail@plt+0xa980>
   1b970:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b974:	ldr	r0, [fp, #-12]
   1b978:	cmp	r0, #0
   1b97c:	bne	1b984 <__assert_fail@plt+0xa8cc>
   1b980:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b984:	mov	r0, #1
   1b988:	cmp	r0, #0
   1b98c:	bne	1ba00 <__assert_fail@plt+0xa948>
   1b990:	b	1b994 <__assert_fail@plt+0xa8dc>
   1b994:	b	1b99c <__assert_fail@plt+0xa8e4>
   1b998:	b	1b9a0 <__assert_fail@plt+0xa8e8>
   1b99c:	b	1b9f0 <__assert_fail@plt+0xa938>
   1b9a0:	ldr	r0, [fp, #-8]
   1b9a4:	ldr	r1, [r0]
   1b9a8:	ldr	r0, [r0, #4]
   1b9ac:	and	r0, r1, r0
   1b9b0:	cmn	r0, #1
   1b9b4:	bne	1b9f0 <__assert_fail@plt+0xa938>
   1b9b8:	b	1b9bc <__assert_fail@plt+0xa904>
   1b9bc:	b	1b9c0 <__assert_fail@plt+0xa908>
   1b9c0:	ldr	r0, [fp, #-12]
   1b9c4:	add	r0, r0, #0
   1b9c8:	movw	r1, #0
   1b9cc:	cmp	r1, r0
   1b9d0:	blt	1ba38 <__assert_fail@plt+0xa980>
   1b9d4:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b9d8:	ldr	r0, [fp, #-12]
   1b9dc:	sub	r0, r0, #1
   1b9e0:	mvn	r1, #0
   1b9e4:	cmp	r1, r0
   1b9e8:	blt	1ba38 <__assert_fail@plt+0xa980>
   1b9ec:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1b9f0:	ldr	r0, [fp, #-12]
   1b9f4:	cmp	r0, #0
   1b9f8:	bne	1ba38 <__assert_fail@plt+0xa980>
   1b9fc:	b	1ba64 <__assert_fail@plt+0xa9ac>
   1ba00:	ldr	r0, [fp, #-12]
   1ba04:	asr	r3, r0, #31
   1ba08:	mvn	r1, #0
   1ba0c:	str	r0, [sp, #4]
   1ba10:	mov	r0, r1
   1ba14:	ldr	r2, [sp, #4]
   1ba18:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1ba1c:	ldr	r2, [fp, #-8]
   1ba20:	ldr	r3, [r2]
   1ba24:	ldr	r2, [r2, #4]
   1ba28:	subs	r0, r0, r3
   1ba2c:	sbcs	r1, r1, r2
   1ba30:	bcs	1ba64 <__assert_fail@plt+0xa9ac>
   1ba34:	b	1ba38 <__assert_fail@plt+0xa980>
   1ba38:	ldr	r0, [fp, #-8]
   1ba3c:	ldr	r1, [r0]
   1ba40:	ldr	r0, [r0, #4]
   1ba44:	ldr	r2, [fp, #-12]
   1ba48:	asr	r3, r2, #31
   1ba4c:	umull	ip, lr, r1, r2
   1ba50:	mla	r1, r1, r3, lr
   1ba54:	mla	r0, r0, r2, r1
   1ba58:	str	ip, [fp, #-24]	; 0xffffffe8
   1ba5c:	str	r0, [fp, #-20]	; 0xffffffec
   1ba60:	b	1ba90 <__assert_fail@plt+0xa9d8>
   1ba64:	ldr	r0, [fp, #-8]
   1ba68:	ldr	r1, [r0]
   1ba6c:	ldr	r0, [r0, #4]
   1ba70:	ldr	r2, [fp, #-12]
   1ba74:	asr	r3, r2, #31
   1ba78:	umull	ip, lr, r1, r2
   1ba7c:	mla	r1, r1, r3, lr
   1ba80:	mla	r0, r0, r2, r1
   1ba84:	str	ip, [fp, #-24]	; 0xffffffe8
   1ba88:	str	r0, [fp, #-20]	; 0xffffffec
   1ba8c:	b	1baac <__assert_fail@plt+0xa9f4>
   1ba90:	ldr	r0, [fp, #-8]
   1ba94:	mvn	r1, #0
   1ba98:	str	r1, [r0, #4]
   1ba9c:	str	r1, [r0]
   1baa0:	movw	r0, #1
   1baa4:	str	r0, [fp, #-4]
   1baa8:	b	1bac8 <__assert_fail@plt+0xaa10>
   1baac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bab0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bab4:	ldr	r2, [fp, #-8]
   1bab8:	str	r1, [r2, #4]
   1babc:	str	r0, [r2]
   1bac0:	movw	r0, #0
   1bac4:	str	r0, [fp, #-4]
   1bac8:	ldr	r0, [fp, #-4]
   1bacc:	mov	sp, fp
   1bad0:	pop	{fp, pc}
   1bad4:	andhi	r0, r0, r1
   1bad8:	svcvc	0x00ffffff
   1badc:	push	{fp, lr}
   1bae0:	mov	fp, sp
   1bae4:	sub	sp, sp, #16
   1bae8:	str	r0, [fp, #-4]
   1baec:	str	r1, [sp, #8]
   1baf0:	str	r2, [sp, #4]
   1baf4:	movw	r0, #0
   1baf8:	str	r0, [sp]
   1bafc:	ldr	r0, [sp, #4]
   1bb00:	mvn	r1, #0
   1bb04:	add	r1, r0, r1
   1bb08:	str	r1, [sp, #4]
   1bb0c:	cmp	r0, #0
   1bb10:	beq	1bb30 <__assert_fail@plt+0xaa78>
   1bb14:	ldr	r0, [fp, #-4]
   1bb18:	ldr	r1, [sp, #8]
   1bb1c:	bl	1a264 <__assert_fail@plt+0x91ac>
   1bb20:	ldr	r1, [sp]
   1bb24:	orr	r0, r1, r0
   1bb28:	str	r0, [sp]
   1bb2c:	b	1bafc <__assert_fail@plt+0xaa44>
   1bb30:	ldr	r0, [sp]
   1bb34:	mov	sp, fp
   1bb38:	pop	{fp, pc}
   1bb3c:	push	{fp, lr}
   1bb40:	mov	fp, sp
   1bb44:	sub	sp, sp, #16
   1bb48:	str	r0, [sp, #8]
   1bb4c:	str	r1, [sp, #4]
   1bb50:	ldr	r0, [sp, #8]
   1bb54:	cmp	r0, #0
   1bb58:	beq	1bb68 <__assert_fail@plt+0xaab0>
   1bb5c:	ldr	r0, [sp, #4]
   1bb60:	cmp	r0, #0
   1bb64:	bne	1bb74 <__assert_fail@plt+0xaabc>
   1bb68:	movw	r0, #1
   1bb6c:	str	r0, [sp, #4]
   1bb70:	str	r0, [sp, #8]
   1bb74:	ldr	r0, [sp, #4]
   1bb78:	cmp	r0, #0
   1bb7c:	beq	1bbb0 <__assert_fail@plt+0xaaf8>
   1bb80:	ldr	r0, [pc, #76]	; 1bbd4 <__assert_fail@plt+0xab1c>
   1bb84:	ldr	r1, [sp, #4]
   1bb88:	udiv	r0, r0, r1
   1bb8c:	ldr	r1, [sp, #8]
   1bb90:	cmp	r0, r1
   1bb94:	bcs	1bbb0 <__assert_fail@plt+0xaaf8>
   1bb98:	bl	10fec <__errno_location@plt>
   1bb9c:	movw	r1, #12
   1bba0:	str	r1, [r0]
   1bba4:	movw	r0, #0
   1bba8:	str	r0, [fp, #-4]
   1bbac:	b	1bbc8 <__assert_fail@plt+0xab10>
   1bbb0:	ldr	r0, [sp, #8]
   1bbb4:	ldr	r1, [sp, #4]
   1bbb8:	bl	10e48 <calloc@plt>
   1bbbc:	str	r0, [sp]
   1bbc0:	ldr	r0, [sp]
   1bbc4:	str	r0, [fp, #-4]
   1bbc8:	ldr	r0, [fp, #-4]
   1bbcc:	mov	sp, fp
   1bbd0:	pop	{fp, pc}
   1bbd4:	svcvc	0x00ffffff
   1bbd8:	push	{fp, lr}
   1bbdc:	mov	fp, sp
   1bbe0:	sub	sp, sp, #16
   1bbe4:	str	r0, [sp, #8]
   1bbe8:	ldr	r0, [sp, #8]
   1bbec:	cmp	r0, #0
   1bbf0:	bne	1bbfc <__assert_fail@plt+0xab44>
   1bbf4:	movw	r0, #1
   1bbf8:	str	r0, [sp, #8]
   1bbfc:	ldr	r0, [pc, #64]	; 1bc44 <__assert_fail@plt+0xab8c>
   1bc00:	ldr	r1, [sp, #8]
   1bc04:	cmp	r0, r1
   1bc08:	bcs	1bc24 <__assert_fail@plt+0xab6c>
   1bc0c:	bl	10fec <__errno_location@plt>
   1bc10:	movw	r1, #12
   1bc14:	str	r1, [r0]
   1bc18:	movw	r0, #0
   1bc1c:	str	r0, [fp, #-4]
   1bc20:	b	1bc38 <__assert_fail@plt+0xab80>
   1bc24:	ldr	r0, [sp, #8]
   1bc28:	bl	10f68 <malloc@plt>
   1bc2c:	str	r0, [sp, #4]
   1bc30:	ldr	r0, [sp, #4]
   1bc34:	str	r0, [fp, #-4]
   1bc38:	ldr	r0, [fp, #-4]
   1bc3c:	mov	sp, fp
   1bc40:	pop	{fp, pc}
   1bc44:	svcvc	0x00ffffff
   1bc48:	push	{fp, lr}
   1bc4c:	mov	fp, sp
   1bc50:	sub	sp, sp, #16
   1bc54:	str	r0, [sp, #8]
   1bc58:	str	r1, [sp, #4]
   1bc5c:	ldr	r0, [sp, #8]
   1bc60:	movw	r1, #0
   1bc64:	cmp	r0, r1
   1bc68:	bne	1bc7c <__assert_fail@plt+0xabc4>
   1bc6c:	ldr	r0, [sp, #4]
   1bc70:	bl	1bbd8 <__assert_fail@plt+0xab20>
   1bc74:	str	r0, [fp, #-4]
   1bc78:	b	1bcdc <__assert_fail@plt+0xac24>
   1bc7c:	ldr	r0, [sp, #4]
   1bc80:	cmp	r0, #0
   1bc84:	bne	1bc9c <__assert_fail@plt+0xabe4>
   1bc88:	ldr	r0, [sp, #8]
   1bc8c:	bl	1be74 <__assert_fail@plt+0xadbc>
   1bc90:	movw	r0, #0
   1bc94:	str	r0, [fp, #-4]
   1bc98:	b	1bcdc <__assert_fail@plt+0xac24>
   1bc9c:	ldr	r0, [pc, #68]	; 1bce8 <__assert_fail@plt+0xac30>
   1bca0:	ldr	r1, [sp, #4]
   1bca4:	cmp	r0, r1
   1bca8:	bcs	1bcc4 <__assert_fail@plt+0xac0c>
   1bcac:	bl	10fec <__errno_location@plt>
   1bcb0:	movw	r1, #12
   1bcb4:	str	r1, [r0]
   1bcb8:	movw	r0, #0
   1bcbc:	str	r0, [fp, #-4]
   1bcc0:	b	1bcdc <__assert_fail@plt+0xac24>
   1bcc4:	ldr	r0, [sp, #8]
   1bcc8:	ldr	r1, [sp, #4]
   1bccc:	bl	10efc <realloc@plt>
   1bcd0:	str	r0, [sp]
   1bcd4:	ldr	r0, [sp]
   1bcd8:	str	r0, [fp, #-4]
   1bcdc:	ldr	r0, [fp, #-4]
   1bce0:	mov	sp, fp
   1bce4:	pop	{fp, pc}
   1bce8:	svcvc	0x00ffffff
   1bcec:	push	{fp, lr}
   1bcf0:	mov	fp, sp
   1bcf4:	sub	sp, sp, #24
   1bcf8:	str	r0, [fp, #-8]
   1bcfc:	str	r1, [sp, #12]
   1bd00:	ldr	r0, [fp, #-8]
   1bd04:	str	r0, [sp, #8]
   1bd08:	ldr	r0, [sp, #12]
   1bd0c:	str	r0, [sp, #4]
   1bd10:	ldr	r0, [sp, #8]
   1bd14:	ldr	r1, [sp, #4]
   1bd18:	cmp	r0, r1
   1bd1c:	bne	1bd2c <__assert_fail@plt+0xac74>
   1bd20:	movw	r0, #0
   1bd24:	str	r0, [fp, #-4]
   1bd28:	b	1bd98 <__assert_fail@plt+0xace0>
   1bd2c:	b	1bd30 <__assert_fail@plt+0xac78>
   1bd30:	ldr	r0, [sp, #8]
   1bd34:	ldrb	r0, [r0]
   1bd38:	bl	1da8c <__assert_fail@plt+0xc9d4>
   1bd3c:	strb	r0, [sp, #3]
   1bd40:	ldr	r0, [sp, #4]
   1bd44:	ldrb	r0, [r0]
   1bd48:	bl	1da8c <__assert_fail@plt+0xc9d4>
   1bd4c:	strb	r0, [sp, #2]
   1bd50:	ldrb	r0, [sp, #3]
   1bd54:	cmp	r0, #0
   1bd58:	bne	1bd60 <__assert_fail@plt+0xaca8>
   1bd5c:	b	1bd88 <__assert_fail@plt+0xacd0>
   1bd60:	ldr	r0, [sp, #8]
   1bd64:	add	r0, r0, #1
   1bd68:	str	r0, [sp, #8]
   1bd6c:	ldr	r0, [sp, #4]
   1bd70:	add	r0, r0, #1
   1bd74:	str	r0, [sp, #4]
   1bd78:	ldrb	r0, [sp, #3]
   1bd7c:	ldrb	r1, [sp, #2]
   1bd80:	cmp	r0, r1
   1bd84:	beq	1bd30 <__assert_fail@plt+0xac78>
   1bd88:	ldrb	r0, [sp, #3]
   1bd8c:	ldrb	r1, [sp, #2]
   1bd90:	sub	r0, r0, r1
   1bd94:	str	r0, [fp, #-4]
   1bd98:	ldr	r0, [fp, #-4]
   1bd9c:	mov	sp, fp
   1bda0:	pop	{fp, pc}
   1bda4:	push	{fp, lr}
   1bda8:	mov	fp, sp
   1bdac:	sub	sp, sp, #16
   1bdb0:	str	r0, [sp, #8]
   1bdb4:	ldr	r0, [sp, #8]
   1bdb8:	bl	10f38 <__fpending@plt>
   1bdbc:	cmp	r0, #0
   1bdc0:	movw	r0, #0
   1bdc4:	movne	r0, #1
   1bdc8:	and	r0, r0, #1
   1bdcc:	strb	r0, [sp, #7]
   1bdd0:	ldr	r0, [sp, #8]
   1bdd4:	bl	10f44 <ferror_unlocked@plt>
   1bdd8:	cmp	r0, #0
   1bddc:	movw	r0, #0
   1bde0:	movne	r0, #1
   1bde4:	and	r0, r0, #1
   1bde8:	strb	r0, [sp, #6]
   1bdec:	ldr	r0, [sp, #8]
   1bdf0:	bl	138d4 <__assert_fail@plt+0x281c>
   1bdf4:	cmp	r0, #0
   1bdf8:	movw	r0, #0
   1bdfc:	movne	r0, #1
   1be00:	and	r0, r0, #1
   1be04:	strb	r0, [sp, #5]
   1be08:	ldrb	r0, [sp, #6]
   1be0c:	tst	r0, #1
   1be10:	bne	1be3c <__assert_fail@plt+0xad84>
   1be14:	ldrb	r0, [sp, #5]
   1be18:	tst	r0, #1
   1be1c:	beq	1be60 <__assert_fail@plt+0xada8>
   1be20:	ldrb	r0, [sp, #7]
   1be24:	tst	r0, #1
   1be28:	bne	1be3c <__assert_fail@plt+0xad84>
   1be2c:	bl	10fec <__errno_location@plt>
   1be30:	ldr	r0, [r0]
   1be34:	cmp	r0, #9
   1be38:	beq	1be60 <__assert_fail@plt+0xada8>
   1be3c:	ldrb	r0, [sp, #5]
   1be40:	tst	r0, #1
   1be44:	bne	1be54 <__assert_fail@plt+0xad9c>
   1be48:	bl	10fec <__errno_location@plt>
   1be4c:	movw	r1, #0
   1be50:	str	r1, [r0]
   1be54:	mvn	r0, #0
   1be58:	str	r0, [fp, #-4]
   1be5c:	b	1be68 <__assert_fail@plt+0xadb0>
   1be60:	movw	r0, #0
   1be64:	str	r0, [fp, #-4]
   1be68:	ldr	r0, [fp, #-4]
   1be6c:	mov	sp, fp
   1be70:	pop	{fp, pc}
   1be74:	push	{fp, lr}
   1be78:	mov	fp, sp
   1be7c:	sub	sp, sp, #16
   1be80:	str	r0, [fp, #-4]
   1be84:	bl	10fec <__errno_location@plt>
   1be88:	ldr	r0, [r0]
   1be8c:	str	r0, [sp, #8]
   1be90:	ldr	r0, [fp, #-4]
   1be94:	bl	10ea8 <free@plt>
   1be98:	ldr	r0, [sp, #8]
   1be9c:	str	r0, [sp, #4]
   1bea0:	bl	10fec <__errno_location@plt>
   1bea4:	ldr	r1, [sp, #4]
   1bea8:	str	r1, [r0]
   1beac:	mov	sp, fp
   1beb0:	pop	{fp, pc}
   1beb4:	push	{fp, lr}
   1beb8:	mov	fp, sp
   1bebc:	bl	10fec <__errno_location@plt>
   1bec0:	movw	r1, #12
   1bec4:	str	r1, [r0]
   1bec8:	movw	r0, #0
   1becc:	pop	{fp, pc}
   1bed0:	push	{fp, lr}
   1bed4:	mov	fp, sp
   1bed8:	sub	sp, sp, #8
   1bedc:	str	r0, [sp, #4]
   1bee0:	ldr	r0, [sp, #4]
   1bee4:	cmn	r0, #1
   1bee8:	bhi	1befc <__assert_fail@plt+0xae44>
   1beec:	ldr	r0, [sp, #4]
   1bef0:	bl	1bbd8 <__assert_fail@plt+0xab20>
   1bef4:	str	r0, [sp]
   1bef8:	b	1bf04 <__assert_fail@plt+0xae4c>
   1befc:	bl	1beb4 <__assert_fail@plt+0xadfc>
   1bf00:	str	r0, [sp]
   1bf04:	ldr	r0, [sp]
   1bf08:	mov	sp, fp
   1bf0c:	pop	{fp, pc}
   1bf10:	push	{fp, lr}
   1bf14:	mov	fp, sp
   1bf18:	sub	sp, sp, #16
   1bf1c:	str	r0, [fp, #-4]
   1bf20:	str	r1, [sp, #8]
   1bf24:	ldr	r0, [sp, #8]
   1bf28:	cmn	r0, #1
   1bf2c:	bhi	1bf64 <__assert_fail@plt+0xaeac>
   1bf30:	ldr	r0, [fp, #-4]
   1bf34:	ldr	r1, [sp, #8]
   1bf38:	ldr	r2, [sp, #8]
   1bf3c:	cmp	r2, #0
   1bf40:	movw	r2, #0
   1bf44:	movne	r2, #1
   1bf48:	mvn	r3, #0
   1bf4c:	eor	r2, r2, r3
   1bf50:	and	r2, r2, #1
   1bf54:	orr	r1, r1, r2
   1bf58:	bl	1bc48 <__assert_fail@plt+0xab90>
   1bf5c:	str	r0, [sp, #4]
   1bf60:	b	1bf6c <__assert_fail@plt+0xaeb4>
   1bf64:	bl	1beb4 <__assert_fail@plt+0xadfc>
   1bf68:	str	r0, [sp, #4]
   1bf6c:	ldr	r0, [sp, #4]
   1bf70:	mov	sp, fp
   1bf74:	pop	{fp, pc}
   1bf78:	push	{fp, lr}
   1bf7c:	mov	fp, sp
   1bf80:	sub	sp, sp, #16
   1bf84:	str	r0, [sp, #8]
   1bf88:	str	r1, [sp, #4]
   1bf8c:	ldr	r0, [sp, #8]
   1bf90:	mvn	r1, #0
   1bf94:	cmp	r1, r0
   1bf98:	bcs	1bfbc <__assert_fail@plt+0xaf04>
   1bf9c:	ldr	r0, [sp, #4]
   1bfa0:	cmp	r0, #0
   1bfa4:	beq	1bfb4 <__assert_fail@plt+0xaefc>
   1bfa8:	bl	1beb4 <__assert_fail@plt+0xadfc>
   1bfac:	str	r0, [fp, #-4]
   1bfb0:	b	1bffc <__assert_fail@plt+0xaf44>
   1bfb4:	movw	r0, #0
   1bfb8:	str	r0, [sp, #8]
   1bfbc:	ldr	r0, [sp, #4]
   1bfc0:	mvn	r1, #0
   1bfc4:	cmp	r1, r0
   1bfc8:	bcs	1bfec <__assert_fail@plt+0xaf34>
   1bfcc:	ldr	r0, [sp, #8]
   1bfd0:	cmp	r0, #0
   1bfd4:	beq	1bfe4 <__assert_fail@plt+0xaf2c>
   1bfd8:	bl	1beb4 <__assert_fail@plt+0xadfc>
   1bfdc:	str	r0, [fp, #-4]
   1bfe0:	b	1bffc <__assert_fail@plt+0xaf44>
   1bfe4:	movw	r0, #0
   1bfe8:	str	r0, [sp, #4]
   1bfec:	ldr	r0, [sp, #8]
   1bff0:	ldr	r1, [sp, #4]
   1bff4:	bl	1bb3c <__assert_fail@plt+0xaa84>
   1bff8:	str	r0, [fp, #-4]
   1bffc:	ldr	r0, [fp, #-4]
   1c000:	mov	sp, fp
   1c004:	pop	{fp, pc}
   1c008:	push	{fp, lr}
   1c00c:	mov	fp, sp
   1c010:	sub	sp, sp, #16
   1c014:	str	r0, [fp, #-4]
   1c018:	str	r1, [sp, #8]
   1c01c:	str	r2, [sp, #4]
   1c020:	ldr	r0, [sp, #8]
   1c024:	cmp	r0, #0
   1c028:	beq	1c038 <__assert_fail@plt+0xaf80>
   1c02c:	ldr	r0, [sp, #4]
   1c030:	cmp	r0, #0
   1c034:	bne	1c044 <__assert_fail@plt+0xaf8c>
   1c038:	movw	r0, #1
   1c03c:	str	r0, [sp, #4]
   1c040:	str	r0, [sp, #8]
   1c044:	ldr	r0, [sp, #8]
   1c048:	cmn	r0, #1
   1c04c:	bhi	1c074 <__assert_fail@plt+0xafbc>
   1c050:	ldr	r0, [sp, #4]
   1c054:	cmn	r0, #1
   1c058:	bhi	1c074 <__assert_fail@plt+0xafbc>
   1c05c:	ldr	r0, [fp, #-4]
   1c060:	ldr	r1, [sp, #8]
   1c064:	ldr	r2, [sp, #4]
   1c068:	bl	1c194 <__assert_fail@plt+0xb0dc>
   1c06c:	str	r0, [sp]
   1c070:	b	1c07c <__assert_fail@plt+0xafc4>
   1c074:	bl	1beb4 <__assert_fail@plt+0xadfc>
   1c078:	str	r0, [sp]
   1c07c:	ldr	r0, [sp]
   1c080:	mov	sp, fp
   1c084:	pop	{fp, pc}
   1c088:	push	{fp, lr}
   1c08c:	mov	fp, sp
   1c090:	sub	sp, sp, #8
   1c094:	movw	r0, #14
   1c098:	bl	11058 <nl_langinfo@plt>
   1c09c:	str	r0, [sp, #4]
   1c0a0:	ldr	r0, [sp, #4]
   1c0a4:	movw	r1, #0
   1c0a8:	cmp	r0, r1
   1c0ac:	bne	1c0bc <__assert_fail@plt+0xb004>
   1c0b0:	movw	r0, #58857	; 0xe5e9
   1c0b4:	movt	r0, #1
   1c0b8:	str	r0, [sp, #4]
   1c0bc:	ldr	r0, [sp, #4]
   1c0c0:	ldrb	r0, [r0]
   1c0c4:	cmp	r0, #0
   1c0c8:	bne	1c0d8 <__assert_fail@plt+0xb020>
   1c0cc:	movw	r0, #60470	; 0xec36
   1c0d0:	movt	r0, #1
   1c0d4:	str	r0, [sp, #4]
   1c0d8:	ldr	r0, [sp, #4]
   1c0dc:	mov	sp, fp
   1c0e0:	pop	{fp, pc}
   1c0e4:	push	{fp, lr}
   1c0e8:	mov	fp, sp
   1c0ec:	sub	sp, sp, #32
   1c0f0:	str	r0, [fp, #-8]
   1c0f4:	str	r1, [fp, #-12]
   1c0f8:	str	r2, [sp, #16]
   1c0fc:	str	r3, [sp, #12]
   1c100:	ldr	r0, [fp, #-8]
   1c104:	movw	r1, #0
   1c108:	cmp	r0, r1
   1c10c:	bne	1c118 <__assert_fail@plt+0xb060>
   1c110:	add	r0, sp, #4
   1c114:	str	r0, [fp, #-8]
   1c118:	ldr	r0, [fp, #-8]
   1c11c:	ldr	r1, [fp, #-12]
   1c120:	ldr	r2, [sp, #16]
   1c124:	ldr	r3, [sp, #12]
   1c128:	bl	10f50 <mbrtowc@plt>
   1c12c:	str	r0, [sp, #8]
   1c130:	ldr	r0, [sp, #8]
   1c134:	mvn	r1, #1
   1c138:	cmp	r1, r0
   1c13c:	bhi	1c180 <__assert_fail@plt+0xb0c8>
   1c140:	ldr	r0, [sp, #16]
   1c144:	cmp	r0, #0
   1c148:	beq	1c180 <__assert_fail@plt+0xb0c8>
   1c14c:	movw	r0, #0
   1c150:	bl	1db14 <__assert_fail@plt+0xca5c>
   1c154:	tst	r0, #1
   1c158:	bne	1c180 <__assert_fail@plt+0xb0c8>
   1c15c:	ldr	r0, [fp, #-12]
   1c160:	ldrb	r0, [r0]
   1c164:	strb	r0, [sp, #3]
   1c168:	ldrb	r0, [sp, #3]
   1c16c:	ldr	r1, [fp, #-8]
   1c170:	str	r0, [r1]
   1c174:	movw	r0, #1
   1c178:	str	r0, [fp, #-4]
   1c17c:	b	1c188 <__assert_fail@plt+0xb0d0>
   1c180:	ldr	r0, [sp, #8]
   1c184:	str	r0, [fp, #-4]
   1c188:	ldr	r0, [fp, #-4]
   1c18c:	mov	sp, fp
   1c190:	pop	{fp, pc}
   1c194:	push	{fp, lr}
   1c198:	mov	fp, sp
   1c19c:	sub	sp, sp, #96	; 0x60
   1c1a0:	str	r0, [fp, #-8]
   1c1a4:	str	r1, [fp, #-12]
   1c1a8:	str	r2, [fp, #-16]
   1c1ac:	b	1c564 <__assert_fail@plt+0xb4ac>
   1c1b0:	b	1c384 <__assert_fail@plt+0xb2cc>
   1c1b4:	ldr	r0, [fp, #-16]
   1c1b8:	cmp	r0, #0
   1c1bc:	bcs	1c2c0 <__assert_fail@plt+0xb208>
   1c1c0:	ldr	r0, [fp, #-12]
   1c1c4:	cmp	r0, #0
   1c1c8:	bcs	1c250 <__assert_fail@plt+0xb198>
   1c1cc:	b	1c1ec <__assert_fail@plt+0xb134>
   1c1d0:	ldr	r0, [fp, #-12]
   1c1d4:	ldr	r1, [fp, #-16]
   1c1d8:	movw	r2, #127	; 0x7f
   1c1dc:	udiv	r1, r2, r1
   1c1e0:	cmp	r0, r1
   1c1e4:	bcc	1c354 <__assert_fail@plt+0xb29c>
   1c1e8:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c1ec:	b	1c200 <__assert_fail@plt+0xb148>
   1c1f0:	ldr	r0, [fp, #-16]
   1c1f4:	cmp	r0, #1
   1c1f8:	bcc	1c210 <__assert_fail@plt+0xb158>
   1c1fc:	b	1c21c <__assert_fail@plt+0xb164>
   1c200:	ldr	r0, [fp, #-16]
   1c204:	movw	r1, #0
   1c208:	cmp	r1, r0
   1c20c:	bcs	1c21c <__assert_fail@plt+0xb164>
   1c210:	movw	r0, #0
   1c214:	str	r0, [fp, #-24]	; 0xffffffe8
   1c218:	b	1c234 <__assert_fail@plt+0xb17c>
   1c21c:	ldr	r0, [fp, #-16]
   1c220:	movw	r1, #0
   1c224:	sub	r0, r1, r0
   1c228:	movw	r1, #127	; 0x7f
   1c22c:	udiv	r0, r1, r0
   1c230:	str	r0, [fp, #-24]	; 0xffffffe8
   1c234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c238:	ldr	r1, [fp, #-12]
   1c23c:	mvn	r2, #0
   1c240:	sub	r1, r2, r1
   1c244:	cmp	r0, r1
   1c248:	bls	1c354 <__assert_fail@plt+0xb29c>
   1c24c:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c250:	ldr	r0, [fp, #-16]
   1c254:	cmn	r0, #1
   1c258:	bne	1c2a4 <__assert_fail@plt+0xb1ec>
   1c25c:	b	1c27c <__assert_fail@plt+0xb1c4>
   1c260:	ldr	r0, [fp, #-12]
   1c264:	mvn	r1, #127	; 0x7f
   1c268:	add	r0, r0, r1
   1c26c:	movw	r1, #0
   1c270:	cmp	r1, r0
   1c274:	bcc	1c354 <__assert_fail@plt+0xb29c>
   1c278:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c27c:	ldr	r0, [fp, #-12]
   1c280:	movw	r1, #0
   1c284:	cmp	r1, r0
   1c288:	bcs	1c36c <__assert_fail@plt+0xb2b4>
   1c28c:	ldr	r0, [fp, #-12]
   1c290:	sub	r0, r0, #1
   1c294:	movw	r1, #127	; 0x7f
   1c298:	cmp	r1, r0
   1c29c:	bcc	1c354 <__assert_fail@plt+0xb29c>
   1c2a0:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c2a4:	ldr	r0, [fp, #-16]
   1c2a8:	mvn	r1, #127	; 0x7f
   1c2ac:	udiv	r0, r1, r0
   1c2b0:	ldr	r1, [fp, #-12]
   1c2b4:	cmp	r0, r1
   1c2b8:	bcc	1c354 <__assert_fail@plt+0xb29c>
   1c2bc:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c2c0:	ldr	r0, [fp, #-16]
   1c2c4:	cmp	r0, #0
   1c2c8:	bne	1c2d0 <__assert_fail@plt+0xb218>
   1c2cc:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c2d0:	ldr	r0, [fp, #-12]
   1c2d4:	cmp	r0, #0
   1c2d8:	bcs	1c33c <__assert_fail@plt+0xb284>
   1c2dc:	ldr	r0, [fp, #-12]
   1c2e0:	cmn	r0, #1
   1c2e4:	bne	1c320 <__assert_fail@plt+0xb268>
   1c2e8:	b	1c308 <__assert_fail@plt+0xb250>
   1c2ec:	ldr	r0, [fp, #-16]
   1c2f0:	mvn	r1, #127	; 0x7f
   1c2f4:	add	r0, r0, r1
   1c2f8:	movw	r1, #0
   1c2fc:	cmp	r1, r0
   1c300:	bcc	1c354 <__assert_fail@plt+0xb29c>
   1c304:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c308:	ldr	r0, [fp, #-16]
   1c30c:	sub	r0, r0, #1
   1c310:	movw	r1, #127	; 0x7f
   1c314:	cmp	r1, r0
   1c318:	bcc	1c354 <__assert_fail@plt+0xb29c>
   1c31c:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c320:	ldr	r0, [fp, #-12]
   1c324:	mvn	r1, #127	; 0x7f
   1c328:	udiv	r0, r1, r0
   1c32c:	ldr	r1, [fp, #-16]
   1c330:	cmp	r0, r1
   1c334:	bcc	1c354 <__assert_fail@plt+0xb29c>
   1c338:	b	1c36c <__assert_fail@plt+0xb2b4>
   1c33c:	ldr	r0, [fp, #-16]
   1c340:	movw	r1, #127	; 0x7f
   1c344:	udiv	r0, r1, r0
   1c348:	ldr	r1, [fp, #-12]
   1c34c:	cmp	r0, r1
   1c350:	bcs	1c36c <__assert_fail@plt+0xb2b4>
   1c354:	ldr	r0, [fp, #-12]
   1c358:	ldr	r1, [fp, #-16]
   1c35c:	mul	r0, r0, r1
   1c360:	sxtb	r0, r0
   1c364:	str	r0, [fp, #-20]	; 0xffffffec
   1c368:	b	1d494 <__assert_fail@plt+0xc3dc>
   1c36c:	ldr	r0, [fp, #-12]
   1c370:	ldr	r1, [fp, #-16]
   1c374:	mul	r0, r0, r1
   1c378:	sxtb	r0, r0
   1c37c:	str	r0, [fp, #-20]	; 0xffffffec
   1c380:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1c384:	ldr	r0, [fp, #-16]
   1c388:	cmp	r0, #0
   1c38c:	bcs	1c498 <__assert_fail@plt+0xb3e0>
   1c390:	ldr	r0, [fp, #-12]
   1c394:	cmp	r0, #0
   1c398:	bcs	1c420 <__assert_fail@plt+0xb368>
   1c39c:	b	1c3bc <__assert_fail@plt+0xb304>
   1c3a0:	ldr	r0, [fp, #-12]
   1c3a4:	ldr	r1, [fp, #-16]
   1c3a8:	movw	r2, #255	; 0xff
   1c3ac:	udiv	r1, r2, r1
   1c3b0:	cmp	r0, r1
   1c3b4:	bcc	1c534 <__assert_fail@plt+0xb47c>
   1c3b8:	b	1c54c <__assert_fail@plt+0xb494>
   1c3bc:	b	1c3d0 <__assert_fail@plt+0xb318>
   1c3c0:	ldr	r0, [fp, #-16]
   1c3c4:	cmp	r0, #1
   1c3c8:	bcc	1c3e0 <__assert_fail@plt+0xb328>
   1c3cc:	b	1c3ec <__assert_fail@plt+0xb334>
   1c3d0:	ldr	r0, [fp, #-16]
   1c3d4:	movw	r1, #0
   1c3d8:	cmp	r1, r0
   1c3dc:	bcs	1c3ec <__assert_fail@plt+0xb334>
   1c3e0:	movw	r0, #0
   1c3e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c3e8:	b	1c404 <__assert_fail@plt+0xb34c>
   1c3ec:	ldr	r0, [fp, #-16]
   1c3f0:	movw	r1, #0
   1c3f4:	sub	r0, r1, r0
   1c3f8:	movw	r1, #255	; 0xff
   1c3fc:	udiv	r0, r1, r0
   1c400:	str	r0, [fp, #-28]	; 0xffffffe4
   1c404:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c408:	ldr	r1, [fp, #-12]
   1c40c:	mvn	r2, #0
   1c410:	sub	r1, r2, r1
   1c414:	cmp	r0, r1
   1c418:	bls	1c534 <__assert_fail@plt+0xb47c>
   1c41c:	b	1c54c <__assert_fail@plt+0xb494>
   1c420:	b	1c428 <__assert_fail@plt+0xb370>
   1c424:	b	1c42c <__assert_fail@plt+0xb374>
   1c428:	b	1c47c <__assert_fail@plt+0xb3c4>
   1c42c:	ldr	r0, [fp, #-16]
   1c430:	cmn	r0, #1
   1c434:	bne	1c47c <__assert_fail@plt+0xb3c4>
   1c438:	b	1c454 <__assert_fail@plt+0xb39c>
   1c43c:	ldr	r0, [fp, #-12]
   1c440:	add	r0, r0, #0
   1c444:	movw	r1, #0
   1c448:	cmp	r1, r0
   1c44c:	bcc	1c534 <__assert_fail@plt+0xb47c>
   1c450:	b	1c54c <__assert_fail@plt+0xb494>
   1c454:	ldr	r0, [fp, #-12]
   1c458:	movw	r1, #0
   1c45c:	cmp	r1, r0
   1c460:	bcs	1c54c <__assert_fail@plt+0xb494>
   1c464:	ldr	r0, [fp, #-12]
   1c468:	sub	r0, r0, #1
   1c46c:	mvn	r1, #0
   1c470:	cmp	r1, r0
   1c474:	bcc	1c534 <__assert_fail@plt+0xb47c>
   1c478:	b	1c54c <__assert_fail@plt+0xb494>
   1c47c:	ldr	r0, [fp, #-16]
   1c480:	movw	r1, #0
   1c484:	udiv	r0, r1, r0
   1c488:	ldr	r1, [fp, #-12]
   1c48c:	cmp	r0, r1
   1c490:	bcc	1c534 <__assert_fail@plt+0xb47c>
   1c494:	b	1c54c <__assert_fail@plt+0xb494>
   1c498:	ldr	r0, [fp, #-16]
   1c49c:	cmp	r0, #0
   1c4a0:	bne	1c4a8 <__assert_fail@plt+0xb3f0>
   1c4a4:	b	1c54c <__assert_fail@plt+0xb494>
   1c4a8:	ldr	r0, [fp, #-12]
   1c4ac:	cmp	r0, #0
   1c4b0:	bcs	1c51c <__assert_fail@plt+0xb464>
   1c4b4:	b	1c4bc <__assert_fail@plt+0xb404>
   1c4b8:	b	1c4c0 <__assert_fail@plt+0xb408>
   1c4bc:	b	1c500 <__assert_fail@plt+0xb448>
   1c4c0:	ldr	r0, [fp, #-12]
   1c4c4:	cmn	r0, #1
   1c4c8:	bne	1c500 <__assert_fail@plt+0xb448>
   1c4cc:	b	1c4e8 <__assert_fail@plt+0xb430>
   1c4d0:	ldr	r0, [fp, #-16]
   1c4d4:	add	r0, r0, #0
   1c4d8:	movw	r1, #0
   1c4dc:	cmp	r1, r0
   1c4e0:	bcc	1c534 <__assert_fail@plt+0xb47c>
   1c4e4:	b	1c54c <__assert_fail@plt+0xb494>
   1c4e8:	ldr	r0, [fp, #-16]
   1c4ec:	sub	r0, r0, #1
   1c4f0:	mvn	r1, #0
   1c4f4:	cmp	r1, r0
   1c4f8:	bcc	1c534 <__assert_fail@plt+0xb47c>
   1c4fc:	b	1c54c <__assert_fail@plt+0xb494>
   1c500:	ldr	r0, [fp, #-12]
   1c504:	movw	r1, #0
   1c508:	udiv	r0, r1, r0
   1c50c:	ldr	r1, [fp, #-16]
   1c510:	cmp	r0, r1
   1c514:	bcc	1c534 <__assert_fail@plt+0xb47c>
   1c518:	b	1c54c <__assert_fail@plt+0xb494>
   1c51c:	ldr	r0, [fp, #-16]
   1c520:	movw	r1, #255	; 0xff
   1c524:	udiv	r0, r1, r0
   1c528:	ldr	r1, [fp, #-12]
   1c52c:	cmp	r0, r1
   1c530:	bcs	1c54c <__assert_fail@plt+0xb494>
   1c534:	ldr	r0, [fp, #-12]
   1c538:	ldr	r1, [fp, #-16]
   1c53c:	mul	r0, r0, r1
   1c540:	and	r0, r0, #255	; 0xff
   1c544:	str	r0, [fp, #-20]	; 0xffffffec
   1c548:	b	1d494 <__assert_fail@plt+0xc3dc>
   1c54c:	ldr	r0, [fp, #-12]
   1c550:	ldr	r1, [fp, #-16]
   1c554:	mul	r0, r0, r1
   1c558:	and	r0, r0, #255	; 0xff
   1c55c:	str	r0, [fp, #-20]	; 0xffffffec
   1c560:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1c564:	b	1c91c <__assert_fail@plt+0xb864>
   1c568:	b	1c73c <__assert_fail@plt+0xb684>
   1c56c:	ldr	r0, [fp, #-16]
   1c570:	cmp	r0, #0
   1c574:	bcs	1c678 <__assert_fail@plt+0xb5c0>
   1c578:	ldr	r0, [fp, #-12]
   1c57c:	cmp	r0, #0
   1c580:	bcs	1c608 <__assert_fail@plt+0xb550>
   1c584:	b	1c5a4 <__assert_fail@plt+0xb4ec>
   1c588:	ldr	r0, [fp, #-12]
   1c58c:	ldr	r1, [fp, #-16]
   1c590:	movw	r2, #32767	; 0x7fff
   1c594:	udiv	r1, r2, r1
   1c598:	cmp	r0, r1
   1c59c:	bcc	1c70c <__assert_fail@plt+0xb654>
   1c5a0:	b	1c724 <__assert_fail@plt+0xb66c>
   1c5a4:	b	1c5b8 <__assert_fail@plt+0xb500>
   1c5a8:	ldr	r0, [fp, #-16]
   1c5ac:	cmp	r0, #1
   1c5b0:	bcc	1c5c8 <__assert_fail@plt+0xb510>
   1c5b4:	b	1c5d4 <__assert_fail@plt+0xb51c>
   1c5b8:	ldr	r0, [fp, #-16]
   1c5bc:	movw	r1, #0
   1c5c0:	cmp	r1, r0
   1c5c4:	bcs	1c5d4 <__assert_fail@plt+0xb51c>
   1c5c8:	movw	r0, #0
   1c5cc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c5d0:	b	1c5ec <__assert_fail@plt+0xb534>
   1c5d4:	ldr	r0, [fp, #-16]
   1c5d8:	movw	r1, #0
   1c5dc:	sub	r0, r1, r0
   1c5e0:	movw	r1, #32767	; 0x7fff
   1c5e4:	udiv	r0, r1, r0
   1c5e8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c5ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5f0:	ldr	r1, [fp, #-12]
   1c5f4:	mvn	r2, #0
   1c5f8:	sub	r1, r2, r1
   1c5fc:	cmp	r0, r1
   1c600:	bls	1c70c <__assert_fail@plt+0xb654>
   1c604:	b	1c724 <__assert_fail@plt+0xb66c>
   1c608:	ldr	r0, [fp, #-16]
   1c60c:	cmn	r0, #1
   1c610:	bne	1c65c <__assert_fail@plt+0xb5a4>
   1c614:	b	1c634 <__assert_fail@plt+0xb57c>
   1c618:	ldr	r0, [pc, #3760]	; 1d4d0 <__assert_fail@plt+0xc418>
   1c61c:	ldr	r1, [fp, #-12]
   1c620:	add	r0, r1, r0
   1c624:	movw	r1, #0
   1c628:	cmp	r1, r0
   1c62c:	bcc	1c70c <__assert_fail@plt+0xb654>
   1c630:	b	1c724 <__assert_fail@plt+0xb66c>
   1c634:	ldr	r0, [fp, #-12]
   1c638:	movw	r1, #0
   1c63c:	cmp	r1, r0
   1c640:	bcs	1c724 <__assert_fail@plt+0xb66c>
   1c644:	ldr	r0, [fp, #-12]
   1c648:	sub	r0, r0, #1
   1c64c:	movw	r1, #32767	; 0x7fff
   1c650:	cmp	r1, r0
   1c654:	bcc	1c70c <__assert_fail@plt+0xb654>
   1c658:	b	1c724 <__assert_fail@plt+0xb66c>
   1c65c:	ldr	r0, [pc, #3692]	; 1d4d0 <__assert_fail@plt+0xc418>
   1c660:	ldr	r1, [fp, #-16]
   1c664:	udiv	r0, r0, r1
   1c668:	ldr	r1, [fp, #-12]
   1c66c:	cmp	r0, r1
   1c670:	bcc	1c70c <__assert_fail@plt+0xb654>
   1c674:	b	1c724 <__assert_fail@plt+0xb66c>
   1c678:	ldr	r0, [fp, #-16]
   1c67c:	cmp	r0, #0
   1c680:	bne	1c688 <__assert_fail@plt+0xb5d0>
   1c684:	b	1c724 <__assert_fail@plt+0xb66c>
   1c688:	ldr	r0, [fp, #-12]
   1c68c:	cmp	r0, #0
   1c690:	bcs	1c6f4 <__assert_fail@plt+0xb63c>
   1c694:	ldr	r0, [fp, #-12]
   1c698:	cmn	r0, #1
   1c69c:	bne	1c6d8 <__assert_fail@plt+0xb620>
   1c6a0:	b	1c6c0 <__assert_fail@plt+0xb608>
   1c6a4:	ldr	r0, [pc, #3620]	; 1d4d0 <__assert_fail@plt+0xc418>
   1c6a8:	ldr	r1, [fp, #-16]
   1c6ac:	add	r0, r1, r0
   1c6b0:	movw	r1, #0
   1c6b4:	cmp	r1, r0
   1c6b8:	bcc	1c70c <__assert_fail@plt+0xb654>
   1c6bc:	b	1c724 <__assert_fail@plt+0xb66c>
   1c6c0:	ldr	r0, [fp, #-16]
   1c6c4:	sub	r0, r0, #1
   1c6c8:	movw	r1, #32767	; 0x7fff
   1c6cc:	cmp	r1, r0
   1c6d0:	bcc	1c70c <__assert_fail@plt+0xb654>
   1c6d4:	b	1c724 <__assert_fail@plt+0xb66c>
   1c6d8:	ldr	r0, [pc, #3568]	; 1d4d0 <__assert_fail@plt+0xc418>
   1c6dc:	ldr	r1, [fp, #-12]
   1c6e0:	udiv	r0, r0, r1
   1c6e4:	ldr	r1, [fp, #-16]
   1c6e8:	cmp	r0, r1
   1c6ec:	bcc	1c70c <__assert_fail@plt+0xb654>
   1c6f0:	b	1c724 <__assert_fail@plt+0xb66c>
   1c6f4:	ldr	r0, [fp, #-16]
   1c6f8:	movw	r1, #32767	; 0x7fff
   1c6fc:	udiv	r0, r1, r0
   1c700:	ldr	r1, [fp, #-12]
   1c704:	cmp	r0, r1
   1c708:	bcs	1c724 <__assert_fail@plt+0xb66c>
   1c70c:	ldr	r0, [fp, #-12]
   1c710:	ldr	r1, [fp, #-16]
   1c714:	mul	r0, r0, r1
   1c718:	sxth	r0, r0
   1c71c:	str	r0, [fp, #-20]	; 0xffffffec
   1c720:	b	1d494 <__assert_fail@plt+0xc3dc>
   1c724:	ldr	r0, [fp, #-12]
   1c728:	ldr	r1, [fp, #-16]
   1c72c:	mul	r0, r0, r1
   1c730:	sxth	r0, r0
   1c734:	str	r0, [fp, #-20]	; 0xffffffec
   1c738:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1c73c:	ldr	r0, [fp, #-16]
   1c740:	cmp	r0, #0
   1c744:	bcs	1c850 <__assert_fail@plt+0xb798>
   1c748:	ldr	r0, [fp, #-12]
   1c74c:	cmp	r0, #0
   1c750:	bcs	1c7d8 <__assert_fail@plt+0xb720>
   1c754:	b	1c774 <__assert_fail@plt+0xb6bc>
   1c758:	ldr	r0, [fp, #-12]
   1c75c:	ldr	r1, [fp, #-16]
   1c760:	movw	r2, #65535	; 0xffff
   1c764:	udiv	r1, r2, r1
   1c768:	cmp	r0, r1
   1c76c:	bcc	1c8ec <__assert_fail@plt+0xb834>
   1c770:	b	1c904 <__assert_fail@plt+0xb84c>
   1c774:	b	1c788 <__assert_fail@plt+0xb6d0>
   1c778:	ldr	r0, [fp, #-16]
   1c77c:	cmp	r0, #1
   1c780:	bcc	1c798 <__assert_fail@plt+0xb6e0>
   1c784:	b	1c7a4 <__assert_fail@plt+0xb6ec>
   1c788:	ldr	r0, [fp, #-16]
   1c78c:	movw	r1, #0
   1c790:	cmp	r1, r0
   1c794:	bcs	1c7a4 <__assert_fail@plt+0xb6ec>
   1c798:	movw	r0, #0
   1c79c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c7a0:	b	1c7bc <__assert_fail@plt+0xb704>
   1c7a4:	ldr	r0, [fp, #-16]
   1c7a8:	movw	r1, #0
   1c7ac:	sub	r0, r1, r0
   1c7b0:	movw	r1, #65535	; 0xffff
   1c7b4:	udiv	r0, r1, r0
   1c7b8:	str	r0, [fp, #-36]	; 0xffffffdc
   1c7bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7c0:	ldr	r1, [fp, #-12]
   1c7c4:	mvn	r2, #0
   1c7c8:	sub	r1, r2, r1
   1c7cc:	cmp	r0, r1
   1c7d0:	bls	1c8ec <__assert_fail@plt+0xb834>
   1c7d4:	b	1c904 <__assert_fail@plt+0xb84c>
   1c7d8:	b	1c7e0 <__assert_fail@plt+0xb728>
   1c7dc:	b	1c7e4 <__assert_fail@plt+0xb72c>
   1c7e0:	b	1c834 <__assert_fail@plt+0xb77c>
   1c7e4:	ldr	r0, [fp, #-16]
   1c7e8:	cmn	r0, #1
   1c7ec:	bne	1c834 <__assert_fail@plt+0xb77c>
   1c7f0:	b	1c80c <__assert_fail@plt+0xb754>
   1c7f4:	ldr	r0, [fp, #-12]
   1c7f8:	add	r0, r0, #0
   1c7fc:	movw	r1, #0
   1c800:	cmp	r1, r0
   1c804:	bcc	1c8ec <__assert_fail@plt+0xb834>
   1c808:	b	1c904 <__assert_fail@plt+0xb84c>
   1c80c:	ldr	r0, [fp, #-12]
   1c810:	movw	r1, #0
   1c814:	cmp	r1, r0
   1c818:	bcs	1c904 <__assert_fail@plt+0xb84c>
   1c81c:	ldr	r0, [fp, #-12]
   1c820:	sub	r0, r0, #1
   1c824:	mvn	r1, #0
   1c828:	cmp	r1, r0
   1c82c:	bcc	1c8ec <__assert_fail@plt+0xb834>
   1c830:	b	1c904 <__assert_fail@plt+0xb84c>
   1c834:	ldr	r0, [fp, #-16]
   1c838:	movw	r1, #0
   1c83c:	udiv	r0, r1, r0
   1c840:	ldr	r1, [fp, #-12]
   1c844:	cmp	r0, r1
   1c848:	bcc	1c8ec <__assert_fail@plt+0xb834>
   1c84c:	b	1c904 <__assert_fail@plt+0xb84c>
   1c850:	ldr	r0, [fp, #-16]
   1c854:	cmp	r0, #0
   1c858:	bne	1c860 <__assert_fail@plt+0xb7a8>
   1c85c:	b	1c904 <__assert_fail@plt+0xb84c>
   1c860:	ldr	r0, [fp, #-12]
   1c864:	cmp	r0, #0
   1c868:	bcs	1c8d4 <__assert_fail@plt+0xb81c>
   1c86c:	b	1c874 <__assert_fail@plt+0xb7bc>
   1c870:	b	1c878 <__assert_fail@plt+0xb7c0>
   1c874:	b	1c8b8 <__assert_fail@plt+0xb800>
   1c878:	ldr	r0, [fp, #-12]
   1c87c:	cmn	r0, #1
   1c880:	bne	1c8b8 <__assert_fail@plt+0xb800>
   1c884:	b	1c8a0 <__assert_fail@plt+0xb7e8>
   1c888:	ldr	r0, [fp, #-16]
   1c88c:	add	r0, r0, #0
   1c890:	movw	r1, #0
   1c894:	cmp	r1, r0
   1c898:	bcc	1c8ec <__assert_fail@plt+0xb834>
   1c89c:	b	1c904 <__assert_fail@plt+0xb84c>
   1c8a0:	ldr	r0, [fp, #-16]
   1c8a4:	sub	r0, r0, #1
   1c8a8:	mvn	r1, #0
   1c8ac:	cmp	r1, r0
   1c8b0:	bcc	1c8ec <__assert_fail@plt+0xb834>
   1c8b4:	b	1c904 <__assert_fail@plt+0xb84c>
   1c8b8:	ldr	r0, [fp, #-12]
   1c8bc:	movw	r1, #0
   1c8c0:	udiv	r0, r1, r0
   1c8c4:	ldr	r1, [fp, #-16]
   1c8c8:	cmp	r0, r1
   1c8cc:	bcc	1c8ec <__assert_fail@plt+0xb834>
   1c8d0:	b	1c904 <__assert_fail@plt+0xb84c>
   1c8d4:	ldr	r0, [fp, #-16]
   1c8d8:	movw	r1, #65535	; 0xffff
   1c8dc:	udiv	r0, r1, r0
   1c8e0:	ldr	r1, [fp, #-12]
   1c8e4:	cmp	r0, r1
   1c8e8:	bcs	1c904 <__assert_fail@plt+0xb84c>
   1c8ec:	ldr	r0, [fp, #-12]
   1c8f0:	ldr	r1, [fp, #-16]
   1c8f4:	mul	r0, r0, r1
   1c8f8:	uxth	r0, r0
   1c8fc:	str	r0, [fp, #-20]	; 0xffffffec
   1c900:	b	1d494 <__assert_fail@plt+0xc3dc>
   1c904:	ldr	r0, [fp, #-12]
   1c908:	ldr	r1, [fp, #-16]
   1c90c:	mul	r0, r0, r1
   1c910:	uxth	r0, r0
   1c914:	str	r0, [fp, #-20]	; 0xffffffec
   1c918:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1c91c:	b	1c920 <__assert_fail@plt+0xb868>
   1c920:	b	1cae4 <__assert_fail@plt+0xba2c>
   1c924:	ldr	r0, [fp, #-16]
   1c928:	cmp	r0, #0
   1c92c:	bcs	1ca2c <__assert_fail@plt+0xb974>
   1c930:	ldr	r0, [fp, #-12]
   1c934:	cmp	r0, #0
   1c938:	bcs	1c9c0 <__assert_fail@plt+0xb908>
   1c93c:	b	1c95c <__assert_fail@plt+0xb8a4>
   1c940:	ldr	r0, [pc, #2944]	; 1d4c8 <__assert_fail@plt+0xc410>
   1c944:	ldr	r1, [fp, #-12]
   1c948:	ldr	r2, [fp, #-16]
   1c94c:	udiv	r0, r0, r2
   1c950:	cmp	r1, r0
   1c954:	bcc	1cabc <__assert_fail@plt+0xba04>
   1c958:	b	1cad0 <__assert_fail@plt+0xba18>
   1c95c:	b	1c970 <__assert_fail@plt+0xb8b8>
   1c960:	ldr	r0, [fp, #-16]
   1c964:	cmp	r0, #1
   1c968:	bcc	1c980 <__assert_fail@plt+0xb8c8>
   1c96c:	b	1c98c <__assert_fail@plt+0xb8d4>
   1c970:	ldr	r0, [fp, #-16]
   1c974:	movw	r1, #0
   1c978:	cmp	r1, r0
   1c97c:	bcs	1c98c <__assert_fail@plt+0xb8d4>
   1c980:	movw	r0, #0
   1c984:	str	r0, [fp, #-40]	; 0xffffffd8
   1c988:	b	1c9a4 <__assert_fail@plt+0xb8ec>
   1c98c:	ldr	r0, [pc, #2868]	; 1d4c8 <__assert_fail@plt+0xc410>
   1c990:	ldr	r1, [fp, #-16]
   1c994:	movw	r2, #0
   1c998:	sub	r1, r2, r1
   1c99c:	udiv	r0, r0, r1
   1c9a0:	str	r0, [fp, #-40]	; 0xffffffd8
   1c9a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9a8:	ldr	r1, [fp, #-12]
   1c9ac:	mvn	r2, #0
   1c9b0:	sub	r1, r2, r1
   1c9b4:	cmp	r0, r1
   1c9b8:	bls	1cabc <__assert_fail@plt+0xba04>
   1c9bc:	b	1cad0 <__assert_fail@plt+0xba18>
   1c9c0:	ldr	r0, [fp, #-16]
   1c9c4:	cmn	r0, #1
   1c9c8:	bne	1ca10 <__assert_fail@plt+0xb958>
   1c9cc:	b	1c9e8 <__assert_fail@plt+0xb930>
   1c9d0:	ldr	r0, [fp, #-12]
   1c9d4:	add	r0, r0, #-2147483648	; 0x80000000
   1c9d8:	movw	r1, #0
   1c9dc:	cmp	r1, r0
   1c9e0:	bcc	1cabc <__assert_fail@plt+0xba04>
   1c9e4:	b	1cad0 <__assert_fail@plt+0xba18>
   1c9e8:	ldr	r0, [fp, #-12]
   1c9ec:	movw	r1, #0
   1c9f0:	cmp	r1, r0
   1c9f4:	bcs	1cad0 <__assert_fail@plt+0xba18>
   1c9f8:	ldr	r0, [pc, #2760]	; 1d4c8 <__assert_fail@plt+0xc410>
   1c9fc:	ldr	r1, [fp, #-12]
   1ca00:	sub	r1, r1, #1
   1ca04:	cmp	r0, r1
   1ca08:	bcc	1cabc <__assert_fail@plt+0xba04>
   1ca0c:	b	1cad0 <__assert_fail@plt+0xba18>
   1ca10:	ldr	r0, [pc, #2740]	; 1d4cc <__assert_fail@plt+0xc414>
   1ca14:	ldr	r1, [fp, #-16]
   1ca18:	udiv	r0, r0, r1
   1ca1c:	ldr	r1, [fp, #-12]
   1ca20:	cmp	r0, r1
   1ca24:	bcc	1cabc <__assert_fail@plt+0xba04>
   1ca28:	b	1cad0 <__assert_fail@plt+0xba18>
   1ca2c:	ldr	r0, [fp, #-16]
   1ca30:	cmp	r0, #0
   1ca34:	bne	1ca3c <__assert_fail@plt+0xb984>
   1ca38:	b	1cad0 <__assert_fail@plt+0xba18>
   1ca3c:	ldr	r0, [fp, #-12]
   1ca40:	cmp	r0, #0
   1ca44:	bcs	1caa4 <__assert_fail@plt+0xb9ec>
   1ca48:	ldr	r0, [fp, #-12]
   1ca4c:	cmn	r0, #1
   1ca50:	bne	1ca88 <__assert_fail@plt+0xb9d0>
   1ca54:	b	1ca70 <__assert_fail@plt+0xb9b8>
   1ca58:	ldr	r0, [fp, #-16]
   1ca5c:	add	r0, r0, #-2147483648	; 0x80000000
   1ca60:	movw	r1, #0
   1ca64:	cmp	r1, r0
   1ca68:	bcc	1cabc <__assert_fail@plt+0xba04>
   1ca6c:	b	1cad0 <__assert_fail@plt+0xba18>
   1ca70:	ldr	r0, [pc, #2640]	; 1d4c8 <__assert_fail@plt+0xc410>
   1ca74:	ldr	r1, [fp, #-16]
   1ca78:	sub	r1, r1, #1
   1ca7c:	cmp	r0, r1
   1ca80:	bcc	1cabc <__assert_fail@plt+0xba04>
   1ca84:	b	1cad0 <__assert_fail@plt+0xba18>
   1ca88:	ldr	r0, [pc, #2620]	; 1d4cc <__assert_fail@plt+0xc414>
   1ca8c:	ldr	r1, [fp, #-12]
   1ca90:	udiv	r0, r0, r1
   1ca94:	ldr	r1, [fp, #-16]
   1ca98:	cmp	r0, r1
   1ca9c:	bcc	1cabc <__assert_fail@plt+0xba04>
   1caa0:	b	1cad0 <__assert_fail@plt+0xba18>
   1caa4:	ldr	r0, [pc, #2588]	; 1d4c8 <__assert_fail@plt+0xc410>
   1caa8:	ldr	r1, [fp, #-16]
   1caac:	udiv	r0, r0, r1
   1cab0:	ldr	r1, [fp, #-12]
   1cab4:	cmp	r0, r1
   1cab8:	bcs	1cad0 <__assert_fail@plt+0xba18>
   1cabc:	ldr	r0, [fp, #-12]
   1cac0:	ldr	r1, [fp, #-16]
   1cac4:	mul	r0, r0, r1
   1cac8:	str	r0, [fp, #-20]	; 0xffffffec
   1cacc:	b	1d494 <__assert_fail@plt+0xc3dc>
   1cad0:	ldr	r0, [fp, #-12]
   1cad4:	ldr	r1, [fp, #-16]
   1cad8:	mul	r0, r0, r1
   1cadc:	str	r0, [fp, #-20]	; 0xffffffec
   1cae0:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1cae4:	ldr	r0, [fp, #-16]
   1cae8:	cmp	r0, #0
   1caec:	bcs	1cbf8 <__assert_fail@plt+0xbb40>
   1caf0:	ldr	r0, [fp, #-12]
   1caf4:	cmp	r0, #0
   1caf8:	bcs	1cb80 <__assert_fail@plt+0xbac8>
   1cafc:	b	1cb1c <__assert_fail@plt+0xba64>
   1cb00:	ldr	r0, [fp, #-12]
   1cb04:	ldr	r1, [fp, #-16]
   1cb08:	mvn	r2, #0
   1cb0c:	udiv	r1, r2, r1
   1cb10:	cmp	r0, r1
   1cb14:	bcc	1cc94 <__assert_fail@plt+0xbbdc>
   1cb18:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cb1c:	b	1cb30 <__assert_fail@plt+0xba78>
   1cb20:	ldr	r0, [fp, #-16]
   1cb24:	cmp	r0, #1
   1cb28:	bcc	1cb40 <__assert_fail@plt+0xba88>
   1cb2c:	b	1cb4c <__assert_fail@plt+0xba94>
   1cb30:	ldr	r0, [fp, #-16]
   1cb34:	movw	r1, #0
   1cb38:	cmp	r1, r0
   1cb3c:	bcs	1cb4c <__assert_fail@plt+0xba94>
   1cb40:	movw	r0, #1
   1cb44:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb48:	b	1cb64 <__assert_fail@plt+0xbaac>
   1cb4c:	ldr	r0, [fp, #-16]
   1cb50:	movw	r1, #0
   1cb54:	sub	r0, r1, r0
   1cb58:	mvn	r1, #0
   1cb5c:	udiv	r0, r1, r0
   1cb60:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cb68:	ldr	r1, [fp, #-12]
   1cb6c:	mvn	r2, #0
   1cb70:	sub	r1, r2, r1
   1cb74:	cmp	r0, r1
   1cb78:	bls	1cc94 <__assert_fail@plt+0xbbdc>
   1cb7c:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cb80:	b	1cb88 <__assert_fail@plt+0xbad0>
   1cb84:	b	1cb8c <__assert_fail@plt+0xbad4>
   1cb88:	b	1cbdc <__assert_fail@plt+0xbb24>
   1cb8c:	ldr	r0, [fp, #-16]
   1cb90:	cmn	r0, #1
   1cb94:	bne	1cbdc <__assert_fail@plt+0xbb24>
   1cb98:	b	1cbb4 <__assert_fail@plt+0xbafc>
   1cb9c:	ldr	r0, [fp, #-12]
   1cba0:	add	r0, r0, #0
   1cba4:	movw	r1, #0
   1cba8:	cmp	r1, r0
   1cbac:	bcc	1cc94 <__assert_fail@plt+0xbbdc>
   1cbb0:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cbb4:	ldr	r0, [fp, #-12]
   1cbb8:	movw	r1, #0
   1cbbc:	cmp	r1, r0
   1cbc0:	bcs	1cca8 <__assert_fail@plt+0xbbf0>
   1cbc4:	ldr	r0, [fp, #-12]
   1cbc8:	sub	r0, r0, #1
   1cbcc:	mvn	r1, #0
   1cbd0:	cmp	r1, r0
   1cbd4:	bcc	1cc94 <__assert_fail@plt+0xbbdc>
   1cbd8:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cbdc:	ldr	r0, [fp, #-16]
   1cbe0:	movw	r1, #0
   1cbe4:	udiv	r0, r1, r0
   1cbe8:	ldr	r1, [fp, #-12]
   1cbec:	cmp	r0, r1
   1cbf0:	bcc	1cc94 <__assert_fail@plt+0xbbdc>
   1cbf4:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cbf8:	ldr	r0, [fp, #-16]
   1cbfc:	cmp	r0, #0
   1cc00:	bne	1cc08 <__assert_fail@plt+0xbb50>
   1cc04:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cc08:	ldr	r0, [fp, #-12]
   1cc0c:	cmp	r0, #0
   1cc10:	bcs	1cc7c <__assert_fail@plt+0xbbc4>
   1cc14:	b	1cc1c <__assert_fail@plt+0xbb64>
   1cc18:	b	1cc20 <__assert_fail@plt+0xbb68>
   1cc1c:	b	1cc60 <__assert_fail@plt+0xbba8>
   1cc20:	ldr	r0, [fp, #-12]
   1cc24:	cmn	r0, #1
   1cc28:	bne	1cc60 <__assert_fail@plt+0xbba8>
   1cc2c:	b	1cc48 <__assert_fail@plt+0xbb90>
   1cc30:	ldr	r0, [fp, #-16]
   1cc34:	add	r0, r0, #0
   1cc38:	movw	r1, #0
   1cc3c:	cmp	r1, r0
   1cc40:	bcc	1cc94 <__assert_fail@plt+0xbbdc>
   1cc44:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cc48:	ldr	r0, [fp, #-16]
   1cc4c:	sub	r0, r0, #1
   1cc50:	mvn	r1, #0
   1cc54:	cmp	r1, r0
   1cc58:	bcc	1cc94 <__assert_fail@plt+0xbbdc>
   1cc5c:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cc60:	ldr	r0, [fp, #-12]
   1cc64:	movw	r1, #0
   1cc68:	udiv	r0, r1, r0
   1cc6c:	ldr	r1, [fp, #-16]
   1cc70:	cmp	r0, r1
   1cc74:	bcc	1cc94 <__assert_fail@plt+0xbbdc>
   1cc78:	b	1cca8 <__assert_fail@plt+0xbbf0>
   1cc7c:	ldr	r0, [fp, #-16]
   1cc80:	mvn	r1, #0
   1cc84:	udiv	r0, r1, r0
   1cc88:	ldr	r1, [fp, #-12]
   1cc8c:	cmp	r0, r1
   1cc90:	bcs	1cca8 <__assert_fail@plt+0xbbf0>
   1cc94:	ldr	r0, [fp, #-12]
   1cc98:	ldr	r1, [fp, #-16]
   1cc9c:	mul	r0, r0, r1
   1cca0:	str	r0, [fp, #-20]	; 0xffffffec
   1cca4:	b	1d494 <__assert_fail@plt+0xc3dc>
   1cca8:	ldr	r0, [fp, #-12]
   1ccac:	ldr	r1, [fp, #-16]
   1ccb0:	mul	r0, r0, r1
   1ccb4:	str	r0, [fp, #-20]	; 0xffffffec
   1ccb8:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1ccbc:	b	1ccc0 <__assert_fail@plt+0xbc08>
   1ccc0:	b	1ce84 <__assert_fail@plt+0xbdcc>
   1ccc4:	ldr	r0, [fp, #-16]
   1ccc8:	cmp	r0, #0
   1cccc:	bcs	1cdcc <__assert_fail@plt+0xbd14>
   1ccd0:	ldr	r0, [fp, #-12]
   1ccd4:	cmp	r0, #0
   1ccd8:	bcs	1cd60 <__assert_fail@plt+0xbca8>
   1ccdc:	b	1ccfc <__assert_fail@plt+0xbc44>
   1cce0:	ldr	r0, [pc, #2016]	; 1d4c8 <__assert_fail@plt+0xc410>
   1cce4:	ldr	r1, [fp, #-12]
   1cce8:	ldr	r2, [fp, #-16]
   1ccec:	udiv	r0, r0, r2
   1ccf0:	cmp	r1, r0
   1ccf4:	bcc	1ce5c <__assert_fail@plt+0xbda4>
   1ccf8:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1ccfc:	b	1cd10 <__assert_fail@plt+0xbc58>
   1cd00:	ldr	r0, [fp, #-16]
   1cd04:	cmp	r0, #1
   1cd08:	bcc	1cd20 <__assert_fail@plt+0xbc68>
   1cd0c:	b	1cd2c <__assert_fail@plt+0xbc74>
   1cd10:	ldr	r0, [fp, #-16]
   1cd14:	movw	r1, #0
   1cd18:	cmp	r1, r0
   1cd1c:	bcs	1cd2c <__assert_fail@plt+0xbc74>
   1cd20:	movw	r0, #0
   1cd24:	str	r0, [sp, #48]	; 0x30
   1cd28:	b	1cd44 <__assert_fail@plt+0xbc8c>
   1cd2c:	ldr	r0, [pc, #1940]	; 1d4c8 <__assert_fail@plt+0xc410>
   1cd30:	ldr	r1, [fp, #-16]
   1cd34:	movw	r2, #0
   1cd38:	sub	r1, r2, r1
   1cd3c:	udiv	r0, r0, r1
   1cd40:	str	r0, [sp, #48]	; 0x30
   1cd44:	ldr	r0, [sp, #48]	; 0x30
   1cd48:	ldr	r1, [fp, #-12]
   1cd4c:	mvn	r2, #0
   1cd50:	sub	r1, r2, r1
   1cd54:	cmp	r0, r1
   1cd58:	bls	1ce5c <__assert_fail@plt+0xbda4>
   1cd5c:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1cd60:	ldr	r0, [fp, #-16]
   1cd64:	cmn	r0, #1
   1cd68:	bne	1cdb0 <__assert_fail@plt+0xbcf8>
   1cd6c:	b	1cd88 <__assert_fail@plt+0xbcd0>
   1cd70:	ldr	r0, [fp, #-12]
   1cd74:	add	r0, r0, #-2147483648	; 0x80000000
   1cd78:	movw	r1, #0
   1cd7c:	cmp	r1, r0
   1cd80:	bcc	1ce5c <__assert_fail@plt+0xbda4>
   1cd84:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1cd88:	ldr	r0, [fp, #-12]
   1cd8c:	movw	r1, #0
   1cd90:	cmp	r1, r0
   1cd94:	bcs	1ce70 <__assert_fail@plt+0xbdb8>
   1cd98:	ldr	r0, [pc, #1832]	; 1d4c8 <__assert_fail@plt+0xc410>
   1cd9c:	ldr	r1, [fp, #-12]
   1cda0:	sub	r1, r1, #1
   1cda4:	cmp	r0, r1
   1cda8:	bcc	1ce5c <__assert_fail@plt+0xbda4>
   1cdac:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1cdb0:	ldr	r0, [pc, #1812]	; 1d4cc <__assert_fail@plt+0xc414>
   1cdb4:	ldr	r1, [fp, #-16]
   1cdb8:	udiv	r0, r0, r1
   1cdbc:	ldr	r1, [fp, #-12]
   1cdc0:	cmp	r0, r1
   1cdc4:	bcc	1ce5c <__assert_fail@plt+0xbda4>
   1cdc8:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1cdcc:	ldr	r0, [fp, #-16]
   1cdd0:	cmp	r0, #0
   1cdd4:	bne	1cddc <__assert_fail@plt+0xbd24>
   1cdd8:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1cddc:	ldr	r0, [fp, #-12]
   1cde0:	cmp	r0, #0
   1cde4:	bcs	1ce44 <__assert_fail@plt+0xbd8c>
   1cde8:	ldr	r0, [fp, #-12]
   1cdec:	cmn	r0, #1
   1cdf0:	bne	1ce28 <__assert_fail@plt+0xbd70>
   1cdf4:	b	1ce10 <__assert_fail@plt+0xbd58>
   1cdf8:	ldr	r0, [fp, #-16]
   1cdfc:	add	r0, r0, #-2147483648	; 0x80000000
   1ce00:	movw	r1, #0
   1ce04:	cmp	r1, r0
   1ce08:	bcc	1ce5c <__assert_fail@plt+0xbda4>
   1ce0c:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1ce10:	ldr	r0, [pc, #1712]	; 1d4c8 <__assert_fail@plt+0xc410>
   1ce14:	ldr	r1, [fp, #-16]
   1ce18:	sub	r1, r1, #1
   1ce1c:	cmp	r0, r1
   1ce20:	bcc	1ce5c <__assert_fail@plt+0xbda4>
   1ce24:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1ce28:	ldr	r0, [pc, #1692]	; 1d4cc <__assert_fail@plt+0xc414>
   1ce2c:	ldr	r1, [fp, #-12]
   1ce30:	udiv	r0, r0, r1
   1ce34:	ldr	r1, [fp, #-16]
   1ce38:	cmp	r0, r1
   1ce3c:	bcc	1ce5c <__assert_fail@plt+0xbda4>
   1ce40:	b	1ce70 <__assert_fail@plt+0xbdb8>
   1ce44:	ldr	r0, [pc, #1660]	; 1d4c8 <__assert_fail@plt+0xc410>
   1ce48:	ldr	r1, [fp, #-16]
   1ce4c:	udiv	r0, r0, r1
   1ce50:	ldr	r1, [fp, #-12]
   1ce54:	cmp	r0, r1
   1ce58:	bcs	1ce70 <__assert_fail@plt+0xbdb8>
   1ce5c:	ldr	r0, [fp, #-12]
   1ce60:	ldr	r1, [fp, #-16]
   1ce64:	mul	r0, r0, r1
   1ce68:	str	r0, [fp, #-20]	; 0xffffffec
   1ce6c:	b	1d494 <__assert_fail@plt+0xc3dc>
   1ce70:	ldr	r0, [fp, #-12]
   1ce74:	ldr	r1, [fp, #-16]
   1ce78:	mul	r0, r0, r1
   1ce7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ce80:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1ce84:	ldr	r0, [fp, #-16]
   1ce88:	cmp	r0, #0
   1ce8c:	bcs	1cf98 <__assert_fail@plt+0xbee0>
   1ce90:	ldr	r0, [fp, #-12]
   1ce94:	cmp	r0, #0
   1ce98:	bcs	1cf20 <__assert_fail@plt+0xbe68>
   1ce9c:	b	1cebc <__assert_fail@plt+0xbe04>
   1cea0:	ldr	r0, [fp, #-12]
   1cea4:	ldr	r1, [fp, #-16]
   1cea8:	mvn	r2, #0
   1ceac:	udiv	r1, r2, r1
   1ceb0:	cmp	r0, r1
   1ceb4:	bcc	1d034 <__assert_fail@plt+0xbf7c>
   1ceb8:	b	1d048 <__assert_fail@plt+0xbf90>
   1cebc:	b	1ced0 <__assert_fail@plt+0xbe18>
   1cec0:	ldr	r0, [fp, #-16]
   1cec4:	cmp	r0, #1
   1cec8:	bcc	1cee0 <__assert_fail@plt+0xbe28>
   1cecc:	b	1ceec <__assert_fail@plt+0xbe34>
   1ced0:	ldr	r0, [fp, #-16]
   1ced4:	movw	r1, #0
   1ced8:	cmp	r1, r0
   1cedc:	bcs	1ceec <__assert_fail@plt+0xbe34>
   1cee0:	movw	r0, #1
   1cee4:	str	r0, [sp, #44]	; 0x2c
   1cee8:	b	1cf04 <__assert_fail@plt+0xbe4c>
   1ceec:	ldr	r0, [fp, #-16]
   1cef0:	movw	r1, #0
   1cef4:	sub	r0, r1, r0
   1cef8:	mvn	r1, #0
   1cefc:	udiv	r0, r1, r0
   1cf00:	str	r0, [sp, #44]	; 0x2c
   1cf04:	ldr	r0, [sp, #44]	; 0x2c
   1cf08:	ldr	r1, [fp, #-12]
   1cf0c:	mvn	r2, #0
   1cf10:	sub	r1, r2, r1
   1cf14:	cmp	r0, r1
   1cf18:	bls	1d034 <__assert_fail@plt+0xbf7c>
   1cf1c:	b	1d048 <__assert_fail@plt+0xbf90>
   1cf20:	b	1cf28 <__assert_fail@plt+0xbe70>
   1cf24:	b	1cf2c <__assert_fail@plt+0xbe74>
   1cf28:	b	1cf7c <__assert_fail@plt+0xbec4>
   1cf2c:	ldr	r0, [fp, #-16]
   1cf30:	cmn	r0, #1
   1cf34:	bne	1cf7c <__assert_fail@plt+0xbec4>
   1cf38:	b	1cf54 <__assert_fail@plt+0xbe9c>
   1cf3c:	ldr	r0, [fp, #-12]
   1cf40:	add	r0, r0, #0
   1cf44:	movw	r1, #0
   1cf48:	cmp	r1, r0
   1cf4c:	bcc	1d034 <__assert_fail@plt+0xbf7c>
   1cf50:	b	1d048 <__assert_fail@plt+0xbf90>
   1cf54:	ldr	r0, [fp, #-12]
   1cf58:	movw	r1, #0
   1cf5c:	cmp	r1, r0
   1cf60:	bcs	1d048 <__assert_fail@plt+0xbf90>
   1cf64:	ldr	r0, [fp, #-12]
   1cf68:	sub	r0, r0, #1
   1cf6c:	mvn	r1, #0
   1cf70:	cmp	r1, r0
   1cf74:	bcc	1d034 <__assert_fail@plt+0xbf7c>
   1cf78:	b	1d048 <__assert_fail@plt+0xbf90>
   1cf7c:	ldr	r0, [fp, #-16]
   1cf80:	movw	r1, #0
   1cf84:	udiv	r0, r1, r0
   1cf88:	ldr	r1, [fp, #-12]
   1cf8c:	cmp	r0, r1
   1cf90:	bcc	1d034 <__assert_fail@plt+0xbf7c>
   1cf94:	b	1d048 <__assert_fail@plt+0xbf90>
   1cf98:	ldr	r0, [fp, #-16]
   1cf9c:	cmp	r0, #0
   1cfa0:	bne	1cfa8 <__assert_fail@plt+0xbef0>
   1cfa4:	b	1d048 <__assert_fail@plt+0xbf90>
   1cfa8:	ldr	r0, [fp, #-12]
   1cfac:	cmp	r0, #0
   1cfb0:	bcs	1d01c <__assert_fail@plt+0xbf64>
   1cfb4:	b	1cfbc <__assert_fail@plt+0xbf04>
   1cfb8:	b	1cfc0 <__assert_fail@plt+0xbf08>
   1cfbc:	b	1d000 <__assert_fail@plt+0xbf48>
   1cfc0:	ldr	r0, [fp, #-12]
   1cfc4:	cmn	r0, #1
   1cfc8:	bne	1d000 <__assert_fail@plt+0xbf48>
   1cfcc:	b	1cfe8 <__assert_fail@plt+0xbf30>
   1cfd0:	ldr	r0, [fp, #-16]
   1cfd4:	add	r0, r0, #0
   1cfd8:	movw	r1, #0
   1cfdc:	cmp	r1, r0
   1cfe0:	bcc	1d034 <__assert_fail@plt+0xbf7c>
   1cfe4:	b	1d048 <__assert_fail@plt+0xbf90>
   1cfe8:	ldr	r0, [fp, #-16]
   1cfec:	sub	r0, r0, #1
   1cff0:	mvn	r1, #0
   1cff4:	cmp	r1, r0
   1cff8:	bcc	1d034 <__assert_fail@plt+0xbf7c>
   1cffc:	b	1d048 <__assert_fail@plt+0xbf90>
   1d000:	ldr	r0, [fp, #-12]
   1d004:	movw	r1, #0
   1d008:	udiv	r0, r1, r0
   1d00c:	ldr	r1, [fp, #-16]
   1d010:	cmp	r0, r1
   1d014:	bcc	1d034 <__assert_fail@plt+0xbf7c>
   1d018:	b	1d048 <__assert_fail@plt+0xbf90>
   1d01c:	ldr	r0, [fp, #-16]
   1d020:	mvn	r1, #0
   1d024:	udiv	r0, r1, r0
   1d028:	ldr	r1, [fp, #-12]
   1d02c:	cmp	r0, r1
   1d030:	bcs	1d048 <__assert_fail@plt+0xbf90>
   1d034:	ldr	r0, [fp, #-12]
   1d038:	ldr	r1, [fp, #-16]
   1d03c:	mul	r0, r0, r1
   1d040:	str	r0, [fp, #-20]	; 0xffffffec
   1d044:	b	1d494 <__assert_fail@plt+0xc3dc>
   1d048:	ldr	r0, [fp, #-12]
   1d04c:	ldr	r1, [fp, #-16]
   1d050:	mul	r0, r0, r1
   1d054:	str	r0, [fp, #-20]	; 0xffffffec
   1d058:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1d05c:	b	1d278 <__assert_fail@plt+0xc1c0>
   1d060:	ldr	r0, [fp, #-16]
   1d064:	cmp	r0, #0
   1d068:	bcs	1d1a8 <__assert_fail@plt+0xc0f0>
   1d06c:	ldr	r0, [fp, #-12]
   1d070:	cmp	r0, #0
   1d074:	bcs	1d134 <__assert_fail@plt+0xc07c>
   1d078:	b	1d07c <__assert_fail@plt+0xbfc4>
   1d07c:	ldr	r0, [fp, #-12]
   1d080:	ldr	r2, [fp, #-16]
   1d084:	mvn	r1, #0
   1d088:	mvn	r3, #-2147483648	; 0x80000000
   1d08c:	mov	ip, #0
   1d090:	str	r0, [sp, #40]	; 0x28
   1d094:	mov	r0, r1
   1d098:	mov	r1, r3
   1d09c:	mov	r3, ip
   1d0a0:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1d0a4:	ldr	r2, [sp, #40]	; 0x28
   1d0a8:	subs	r0, r2, r0
   1d0ac:	rscs	r1, r1, #0
   1d0b0:	blt	1d250 <__assert_fail@plt+0xc198>
   1d0b4:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d0b8:	b	1d0cc <__assert_fail@plt+0xc014>
   1d0bc:	ldr	r0, [fp, #-16]
   1d0c0:	cmp	r0, #1
   1d0c4:	bcc	1d0dc <__assert_fail@plt+0xc024>
   1d0c8:	b	1d0f0 <__assert_fail@plt+0xc038>
   1d0cc:	ldr	r0, [fp, #-16]
   1d0d0:	movw	r1, #0
   1d0d4:	cmp	r1, r0
   1d0d8:	bcs	1d0f0 <__assert_fail@plt+0xc038>
   1d0dc:	mov	r0, #0
   1d0e0:	mvn	r1, #0
   1d0e4:	str	r1, [sp, #36]	; 0x24
   1d0e8:	str	r0, [sp, #32]
   1d0ec:	b	1d114 <__assert_fail@plt+0xc05c>
   1d0f0:	ldr	r0, [fp, #-16]
   1d0f4:	rsb	r2, r0, #0
   1d0f8:	mvn	r0, #0
   1d0fc:	mvn	r1, #-2147483648	; 0x80000000
   1d100:	mov	r3, #0
   1d104:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1d108:	str	r0, [sp, #36]	; 0x24
   1d10c:	str	r1, [sp, #32]
   1d110:	b	1d114 <__assert_fail@plt+0xc05c>
   1d114:	ldr	r0, [sp, #32]
   1d118:	ldr	r1, [sp, #36]	; 0x24
   1d11c:	ldr	r2, [fp, #-12]
   1d120:	mvn	r2, r2
   1d124:	subs	r1, r2, r1
   1d128:	rscs	r0, r0, #0
   1d12c:	bge	1d250 <__assert_fail@plt+0xc198>
   1d130:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d134:	ldr	r0, [fp, #-16]
   1d138:	cmn	r0, #1
   1d13c:	bne	1d17c <__assert_fail@plt+0xc0c4>
   1d140:	b	1d15c <__assert_fail@plt+0xc0a4>
   1d144:	ldr	r0, [fp, #-12]
   1d148:	rsbs	r0, r0, #0
   1d14c:	mov	r1, #0
   1d150:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d154:	blt	1d250 <__assert_fail@plt+0xc198>
   1d158:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d15c:	ldr	r0, [fp, #-12]
   1d160:	movw	r1, #0
   1d164:	cmp	r1, r0
   1d168:	bcs	1d264 <__assert_fail@plt+0xc1ac>
   1d16c:	mov	r0, #0
   1d170:	cmp	r0, #0
   1d174:	bne	1d250 <__assert_fail@plt+0xc198>
   1d178:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d17c:	ldr	r2, [fp, #-16]
   1d180:	mov	r1, #-2147483648	; 0x80000000
   1d184:	mov	r0, #0
   1d188:	str	r0, [sp, #28]
   1d18c:	ldr	r3, [sp, #28]
   1d190:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1d194:	ldr	r2, [fp, #-12]
   1d198:	subs	r0, r0, r2
   1d19c:	sbcs	r1, r1, #0
   1d1a0:	blt	1d250 <__assert_fail@plt+0xc198>
   1d1a4:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d1a8:	ldr	r0, [fp, #-16]
   1d1ac:	cmp	r0, #0
   1d1b0:	bne	1d1b8 <__assert_fail@plt+0xc100>
   1d1b4:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d1b8:	ldr	r0, [fp, #-12]
   1d1bc:	cmp	r0, #0
   1d1c0:	bcs	1d228 <__assert_fail@plt+0xc170>
   1d1c4:	ldr	r0, [fp, #-12]
   1d1c8:	cmn	r0, #1
   1d1cc:	bne	1d1fc <__assert_fail@plt+0xc144>
   1d1d0:	b	1d1ec <__assert_fail@plt+0xc134>
   1d1d4:	ldr	r0, [fp, #-16]
   1d1d8:	rsbs	r0, r0, #0
   1d1dc:	mov	r1, #0
   1d1e0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d1e4:	blt	1d250 <__assert_fail@plt+0xc198>
   1d1e8:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d1ec:	mov	r0, #0
   1d1f0:	cmp	r0, #0
   1d1f4:	bne	1d250 <__assert_fail@plt+0xc198>
   1d1f8:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d1fc:	ldr	r2, [fp, #-12]
   1d200:	mov	r1, #-2147483648	; 0x80000000
   1d204:	mov	r0, #0
   1d208:	str	r0, [sp, #24]
   1d20c:	ldr	r3, [sp, #24]
   1d210:	bl	1dd0c <__assert_fail@plt+0xcc54>
   1d214:	ldr	r2, [fp, #-16]
   1d218:	subs	r0, r0, r2
   1d21c:	sbcs	r1, r1, #0
   1d220:	blt	1d250 <__assert_fail@plt+0xc198>
   1d224:	b	1d264 <__assert_fail@plt+0xc1ac>
   1d228:	ldr	r2, [fp, #-16]
   1d22c:	mvn	r0, #0
   1d230:	mvn	r1, #-2147483648	; 0x80000000
   1d234:	mov	r3, #0
   1d238:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1d23c:	ldr	r2, [fp, #-12]
   1d240:	subs	r0, r0, r2
   1d244:	sbcs	r1, r1, #0
   1d248:	bge	1d264 <__assert_fail@plt+0xc1ac>
   1d24c:	b	1d250 <__assert_fail@plt+0xc198>
   1d250:	ldr	r0, [fp, #-12]
   1d254:	ldr	r1, [fp, #-16]
   1d258:	mul	r0, r0, r1
   1d25c:	str	r0, [fp, #-20]	; 0xffffffec
   1d260:	b	1d494 <__assert_fail@plt+0xc3dc>
   1d264:	ldr	r0, [fp, #-12]
   1d268:	ldr	r1, [fp, #-16]
   1d26c:	mul	r0, r0, r1
   1d270:	str	r0, [fp, #-20]	; 0xffffffec
   1d274:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1d278:	ldr	r0, [fp, #-16]
   1d27c:	cmp	r0, #0
   1d280:	bcs	1d3bc <__assert_fail@plt+0xc304>
   1d284:	ldr	r0, [fp, #-12]
   1d288:	cmp	r0, #0
   1d28c:	bcs	1d344 <__assert_fail@plt+0xc28c>
   1d290:	b	1d2c4 <__assert_fail@plt+0xc20c>
   1d294:	ldr	r0, [fp, #-12]
   1d298:	ldr	r2, [fp, #-16]
   1d29c:	mvn	r1, #0
   1d2a0:	mov	r3, #0
   1d2a4:	str	r0, [sp, #20]
   1d2a8:	mov	r0, r1
   1d2ac:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1d2b0:	ldr	r2, [sp, #20]
   1d2b4:	subs	r0, r2, r0
   1d2b8:	rscs	r1, r1, #0
   1d2bc:	bcc	1d46c <__assert_fail@plt+0xc3b4>
   1d2c0:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d2c4:	b	1d2d8 <__assert_fail@plt+0xc220>
   1d2c8:	ldr	r0, [fp, #-16]
   1d2cc:	cmp	r0, #1
   1d2d0:	bcc	1d2e8 <__assert_fail@plt+0xc230>
   1d2d4:	b	1d2fc <__assert_fail@plt+0xc244>
   1d2d8:	ldr	r0, [fp, #-16]
   1d2dc:	movw	r1, #0
   1d2e0:	cmp	r1, r0
   1d2e4:	bcs	1d2fc <__assert_fail@plt+0xc244>
   1d2e8:	mov	r0, #1
   1d2ec:	mvn	r1, #0
   1d2f0:	str	r1, [sp, #16]
   1d2f4:	str	r0, [sp, #12]
   1d2f8:	b	1d324 <__assert_fail@plt+0xc26c>
   1d2fc:	ldr	r0, [fp, #-16]
   1d300:	rsb	r2, r0, #0
   1d304:	mvn	r0, #0
   1d308:	mov	r3, #0
   1d30c:	str	r0, [sp, #8]
   1d310:	ldr	r1, [sp, #8]
   1d314:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1d318:	str	r0, [sp, #16]
   1d31c:	str	r1, [sp, #12]
   1d320:	b	1d324 <__assert_fail@plt+0xc26c>
   1d324:	ldr	r0, [sp, #12]
   1d328:	ldr	r1, [sp, #16]
   1d32c:	ldr	r2, [fp, #-12]
   1d330:	mvn	r2, r2
   1d334:	subs	r1, r2, r1
   1d338:	rscs	r0, r0, #0
   1d33c:	bcs	1d46c <__assert_fail@plt+0xc3b4>
   1d340:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d344:	b	1d34c <__assert_fail@plt+0xc294>
   1d348:	b	1d350 <__assert_fail@plt+0xc298>
   1d34c:	b	1d3a0 <__assert_fail@plt+0xc2e8>
   1d350:	ldr	r0, [fp, #-16]
   1d354:	cmn	r0, #1
   1d358:	bne	1d3a0 <__assert_fail@plt+0xc2e8>
   1d35c:	b	1d378 <__assert_fail@plt+0xc2c0>
   1d360:	ldr	r0, [fp, #-12]
   1d364:	add	r0, r0, #0
   1d368:	movw	r1, #0
   1d36c:	cmp	r1, r0
   1d370:	bcc	1d46c <__assert_fail@plt+0xc3b4>
   1d374:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d378:	ldr	r0, [fp, #-12]
   1d37c:	movw	r1, #0
   1d380:	cmp	r1, r0
   1d384:	bcs	1d480 <__assert_fail@plt+0xc3c8>
   1d388:	ldr	r0, [fp, #-12]
   1d38c:	sub	r0, r0, #1
   1d390:	mvn	r1, #0
   1d394:	cmp	r1, r0
   1d398:	bcc	1d46c <__assert_fail@plt+0xc3b4>
   1d39c:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d3a0:	ldr	r0, [fp, #-16]
   1d3a4:	movw	r1, #0
   1d3a8:	udiv	r0, r1, r0
   1d3ac:	ldr	r1, [fp, #-12]
   1d3b0:	cmp	r0, r1
   1d3b4:	bcc	1d46c <__assert_fail@plt+0xc3b4>
   1d3b8:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d3bc:	ldr	r0, [fp, #-16]
   1d3c0:	cmp	r0, #0
   1d3c4:	bne	1d3cc <__assert_fail@plt+0xc314>
   1d3c8:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d3cc:	ldr	r0, [fp, #-12]
   1d3d0:	cmp	r0, #0
   1d3d4:	bcs	1d440 <__assert_fail@plt+0xc388>
   1d3d8:	b	1d3e0 <__assert_fail@plt+0xc328>
   1d3dc:	b	1d3e4 <__assert_fail@plt+0xc32c>
   1d3e0:	b	1d424 <__assert_fail@plt+0xc36c>
   1d3e4:	ldr	r0, [fp, #-12]
   1d3e8:	cmn	r0, #1
   1d3ec:	bne	1d424 <__assert_fail@plt+0xc36c>
   1d3f0:	b	1d40c <__assert_fail@plt+0xc354>
   1d3f4:	ldr	r0, [fp, #-16]
   1d3f8:	add	r0, r0, #0
   1d3fc:	movw	r1, #0
   1d400:	cmp	r1, r0
   1d404:	bcc	1d46c <__assert_fail@plt+0xc3b4>
   1d408:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d40c:	ldr	r0, [fp, #-16]
   1d410:	sub	r0, r0, #1
   1d414:	mvn	r1, #0
   1d418:	cmp	r1, r0
   1d41c:	bcc	1d46c <__assert_fail@plt+0xc3b4>
   1d420:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d424:	ldr	r0, [fp, #-12]
   1d428:	movw	r1, #0
   1d42c:	udiv	r0, r1, r0
   1d430:	ldr	r1, [fp, #-16]
   1d434:	cmp	r0, r1
   1d438:	bcc	1d46c <__assert_fail@plt+0xc3b4>
   1d43c:	b	1d480 <__assert_fail@plt+0xc3c8>
   1d440:	ldr	r2, [fp, #-16]
   1d444:	mvn	r0, #0
   1d448:	mov	r3, #0
   1d44c:	str	r0, [sp, #4]
   1d450:	ldr	r1, [sp, #4]
   1d454:	bl	1dde0 <__assert_fail@plt+0xcd28>
   1d458:	ldr	r2, [fp, #-12]
   1d45c:	subs	r0, r0, r2
   1d460:	sbcs	r1, r1, #0
   1d464:	bcs	1d480 <__assert_fail@plt+0xc3c8>
   1d468:	b	1d46c <__assert_fail@plt+0xc3b4>
   1d46c:	ldr	r0, [fp, #-12]
   1d470:	ldr	r1, [fp, #-16]
   1d474:	mul	r0, r0, r1
   1d478:	str	r0, [fp, #-20]	; 0xffffffec
   1d47c:	b	1d494 <__assert_fail@plt+0xc3dc>
   1d480:	ldr	r0, [fp, #-12]
   1d484:	ldr	r1, [fp, #-16]
   1d488:	mul	r0, r0, r1
   1d48c:	str	r0, [fp, #-20]	; 0xffffffec
   1d490:	b	1d4ac <__assert_fail@plt+0xc3f4>
   1d494:	bl	10fec <__errno_location@plt>
   1d498:	movw	r1, #12
   1d49c:	str	r1, [r0]
   1d4a0:	movw	r0, #0
   1d4a4:	str	r0, [fp, #-4]
   1d4a8:	b	1d4bc <__assert_fail@plt+0xc404>
   1d4ac:	ldr	r0, [fp, #-8]
   1d4b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d4b4:	bl	1bc48 <__assert_fail@plt+0xab90>
   1d4b8:	str	r0, [fp, #-4]
   1d4bc:	ldr	r0, [fp, #-4]
   1d4c0:	mov	sp, fp
   1d4c4:	pop	{fp, pc}
   1d4c8:	svcvc	0x00ffffff
   1d4cc:	andhi	r0, r0, r0
   1d4d0:			; <UNDEFINED> instruction: 0xffff8000
   1d4d4:	sub	sp, sp, #12
   1d4d8:	str	r0, [sp, #4]
   1d4dc:	ldr	r0, [sp, #4]
   1d4e0:	sub	r1, r0, #48	; 0x30
   1d4e4:	cmp	r1, #10
   1d4e8:	str	r0, [sp]
   1d4ec:	bcc	1d51c <__assert_fail@plt+0xc464>
   1d4f0:	b	1d4f4 <__assert_fail@plt+0xc43c>
   1d4f4:	ldr	r0, [sp]
   1d4f8:	sub	r1, r0, #65	; 0x41
   1d4fc:	cmp	r1, #26
   1d500:	bcc	1d51c <__assert_fail@plt+0xc464>
   1d504:	b	1d508 <__assert_fail@plt+0xc450>
   1d508:	ldr	r0, [sp]
   1d50c:	sub	r1, r0, #97	; 0x61
   1d510:	cmp	r1, #25
   1d514:	bhi	1d52c <__assert_fail@plt+0xc474>
   1d518:	b	1d51c <__assert_fail@plt+0xc464>
   1d51c:	movw	r0, #1
   1d520:	and	r0, r0, #1
   1d524:	strb	r0, [sp, #11]
   1d528:	b	1d538 <__assert_fail@plt+0xc480>
   1d52c:	movw	r0, #0
   1d530:	and	r0, r0, #1
   1d534:	strb	r0, [sp, #11]
   1d538:	ldrb	r0, [sp, #11]
   1d53c:	and	r0, r0, #1
   1d540:	add	sp, sp, #12
   1d544:	bx	lr
   1d548:	sub	sp, sp, #12
   1d54c:	str	r0, [sp, #4]
   1d550:	ldr	r0, [sp, #4]
   1d554:	sub	r1, r0, #65	; 0x41
   1d558:	cmp	r1, #26
   1d55c:	str	r0, [sp]
   1d560:	bcc	1d57c <__assert_fail@plt+0xc4c4>
   1d564:	b	1d568 <__assert_fail@plt+0xc4b0>
   1d568:	ldr	r0, [sp]
   1d56c:	sub	r1, r0, #97	; 0x61
   1d570:	cmp	r1, #25
   1d574:	bhi	1d58c <__assert_fail@plt+0xc4d4>
   1d578:	b	1d57c <__assert_fail@plt+0xc4c4>
   1d57c:	movw	r0, #1
   1d580:	and	r0, r0, #1
   1d584:	strb	r0, [sp, #11]
   1d588:	b	1d598 <__assert_fail@plt+0xc4e0>
   1d58c:	movw	r0, #0
   1d590:	and	r0, r0, #1
   1d594:	strb	r0, [sp, #11]
   1d598:	ldrb	r0, [sp, #11]
   1d59c:	and	r0, r0, #1
   1d5a0:	add	sp, sp, #12
   1d5a4:	bx	lr
   1d5a8:	sub	sp, sp, #8
   1d5ac:	str	r0, [sp]
   1d5b0:	ldr	r0, [sp]
   1d5b4:	cmp	r0, #127	; 0x7f
   1d5b8:	bhi	1d5d0 <__assert_fail@plt+0xc518>
   1d5bc:	b	1d5c0 <__assert_fail@plt+0xc508>
   1d5c0:	movw	r0, #1
   1d5c4:	and	r0, r0, #1
   1d5c8:	strb	r0, [sp, #7]
   1d5cc:	b	1d5dc <__assert_fail@plt+0xc524>
   1d5d0:	movw	r0, #0
   1d5d4:	and	r0, r0, #1
   1d5d8:	strb	r0, [sp, #7]
   1d5dc:	ldrb	r0, [sp, #7]
   1d5e0:	and	r0, r0, #1
   1d5e4:	add	sp, sp, #8
   1d5e8:	bx	lr
   1d5ec:	sub	sp, sp, #8
   1d5f0:	str	r0, [sp, #4]
   1d5f4:	ldr	r0, [sp, #4]
   1d5f8:	cmp	r0, #32
   1d5fc:	movw	r0, #1
   1d600:	str	r0, [sp]
   1d604:	beq	1d61c <__assert_fail@plt+0xc564>
   1d608:	ldr	r0, [sp, #4]
   1d60c:	cmp	r0, #9
   1d610:	movw	r0, #0
   1d614:	moveq	r0, #1
   1d618:	str	r0, [sp]
   1d61c:	ldr	r0, [sp]
   1d620:	and	r0, r0, #1
   1d624:	add	sp, sp, #8
   1d628:	bx	lr
   1d62c:	sub	sp, sp, #12
   1d630:	str	r0, [sp, #4]
   1d634:	ldr	r0, [sp, #4]
   1d638:	cmp	r0, #32
   1d63c:	str	r0, [sp]
   1d640:	bcc	1d658 <__assert_fail@plt+0xc5a0>
   1d644:	b	1d648 <__assert_fail@plt+0xc590>
   1d648:	ldr	r0, [sp]
   1d64c:	cmp	r0, #127	; 0x7f
   1d650:	bne	1d668 <__assert_fail@plt+0xc5b0>
   1d654:	b	1d658 <__assert_fail@plt+0xc5a0>
   1d658:	movw	r0, #1
   1d65c:	and	r0, r0, #1
   1d660:	strb	r0, [sp, #11]
   1d664:	b	1d674 <__assert_fail@plt+0xc5bc>
   1d668:	movw	r0, #0
   1d66c:	and	r0, r0, #1
   1d670:	strb	r0, [sp, #11]
   1d674:	ldrb	r0, [sp, #11]
   1d678:	and	r0, r0, #1
   1d67c:	add	sp, sp, #12
   1d680:	bx	lr
   1d684:	sub	sp, sp, #8
   1d688:	str	r0, [sp]
   1d68c:	ldr	r0, [sp]
   1d690:	sub	r0, r0, #48	; 0x30
   1d694:	cmp	r0, #9
   1d698:	bhi	1d6b0 <__assert_fail@plt+0xc5f8>
   1d69c:	b	1d6a0 <__assert_fail@plt+0xc5e8>
   1d6a0:	movw	r0, #1
   1d6a4:	and	r0, r0, #1
   1d6a8:	strb	r0, [sp, #7]
   1d6ac:	b	1d6bc <__assert_fail@plt+0xc604>
   1d6b0:	movw	r0, #0
   1d6b4:	and	r0, r0, #1
   1d6b8:	strb	r0, [sp, #7]
   1d6bc:	ldrb	r0, [sp, #7]
   1d6c0:	and	r0, r0, #1
   1d6c4:	add	sp, sp, #8
   1d6c8:	bx	lr
   1d6cc:	sub	sp, sp, #8
   1d6d0:	str	r0, [sp]
   1d6d4:	ldr	r0, [sp]
   1d6d8:	sub	r0, r0, #33	; 0x21
   1d6dc:	cmp	r0, #93	; 0x5d
   1d6e0:	bhi	1d6f8 <__assert_fail@plt+0xc640>
   1d6e4:	b	1d6e8 <__assert_fail@plt+0xc630>
   1d6e8:	movw	r0, #1
   1d6ec:	and	r0, r0, #1
   1d6f0:	strb	r0, [sp, #7]
   1d6f4:	b	1d704 <__assert_fail@plt+0xc64c>
   1d6f8:	movw	r0, #0
   1d6fc:	and	r0, r0, #1
   1d700:	strb	r0, [sp, #7]
   1d704:	ldrb	r0, [sp, #7]
   1d708:	and	r0, r0, #1
   1d70c:	add	sp, sp, #8
   1d710:	bx	lr
   1d714:	sub	sp, sp, #8
   1d718:	str	r0, [sp]
   1d71c:	ldr	r0, [sp]
   1d720:	sub	r0, r0, #97	; 0x61
   1d724:	cmp	r0, #25
   1d728:	bhi	1d740 <__assert_fail@plt+0xc688>
   1d72c:	b	1d730 <__assert_fail@plt+0xc678>
   1d730:	movw	r0, #1
   1d734:	and	r0, r0, #1
   1d738:	strb	r0, [sp, #7]
   1d73c:	b	1d74c <__assert_fail@plt+0xc694>
   1d740:	movw	r0, #0
   1d744:	and	r0, r0, #1
   1d748:	strb	r0, [sp, #7]
   1d74c:	ldrb	r0, [sp, #7]
   1d750:	and	r0, r0, #1
   1d754:	add	sp, sp, #8
   1d758:	bx	lr
   1d75c:	sub	sp, sp, #8
   1d760:	str	r0, [sp]
   1d764:	ldr	r0, [sp]
   1d768:	sub	r0, r0, #32
   1d76c:	cmp	r0, #94	; 0x5e
   1d770:	bhi	1d788 <__assert_fail@plt+0xc6d0>
   1d774:	b	1d778 <__assert_fail@plt+0xc6c0>
   1d778:	movw	r0, #1
   1d77c:	and	r0, r0, #1
   1d780:	strb	r0, [sp, #7]
   1d784:	b	1d794 <__assert_fail@plt+0xc6dc>
   1d788:	movw	r0, #0
   1d78c:	and	r0, r0, #1
   1d790:	strb	r0, [sp, #7]
   1d794:	ldrb	r0, [sp, #7]
   1d798:	and	r0, r0, #1
   1d79c:	add	sp, sp, #8
   1d7a0:	bx	lr
   1d7a4:	sub	sp, sp, #12
   1d7a8:	str	r0, [sp, #4]
   1d7ac:	ldr	r0, [sp, #4]
   1d7b0:	sub	r0, r0, #33	; 0x21
   1d7b4:	cmp	r0, #93	; 0x5d
   1d7b8:	str	r0, [sp]
   1d7bc:	bhi	1d958 <__assert_fail@plt+0xc8a0>
   1d7c0:	add	r0, pc, #8
   1d7c4:	ldr	r1, [sp]
   1d7c8:	ldr	r0, [r0, r1, lsl #2]
   1d7cc:	mov	pc, r0
   1d7d0:	andeq	sp, r1, r8, asr #18
   1d7d4:	andeq	sp, r1, r8, asr #18
   1d7d8:	andeq	sp, r1, r8, asr #18
   1d7dc:	andeq	sp, r1, r8, asr #18
   1d7e0:	andeq	sp, r1, r8, asr #18
   1d7e4:	andeq	sp, r1, r8, asr #18
   1d7e8:	andeq	sp, r1, r8, asr #18
   1d7ec:	andeq	sp, r1, r8, asr #18
   1d7f0:	andeq	sp, r1, r8, asr #18
   1d7f4:	andeq	sp, r1, r8, asr #18
   1d7f8:	andeq	sp, r1, r8, asr #18
   1d7fc:	andeq	sp, r1, r8, asr #18
   1d800:	andeq	sp, r1, r8, asr #18
   1d804:	andeq	sp, r1, r8, asr #18
   1d808:	andeq	sp, r1, r8, asr #18
   1d80c:	andeq	sp, r1, r8, asr r9
   1d810:	andeq	sp, r1, r8, asr r9
   1d814:	andeq	sp, r1, r8, asr r9
   1d818:	andeq	sp, r1, r8, asr r9
   1d81c:	andeq	sp, r1, r8, asr r9
   1d820:	andeq	sp, r1, r8, asr r9
   1d824:	andeq	sp, r1, r8, asr r9
   1d828:	andeq	sp, r1, r8, asr r9
   1d82c:	andeq	sp, r1, r8, asr r9
   1d830:	andeq	sp, r1, r8, asr r9
   1d834:	andeq	sp, r1, r8, asr #18
   1d838:	andeq	sp, r1, r8, asr #18
   1d83c:	andeq	sp, r1, r8, asr #18
   1d840:	andeq	sp, r1, r8, asr #18
   1d844:	andeq	sp, r1, r8, asr #18
   1d848:	andeq	sp, r1, r8, asr #18
   1d84c:	andeq	sp, r1, r8, asr #18
   1d850:	andeq	sp, r1, r8, asr r9
   1d854:	andeq	sp, r1, r8, asr r9
   1d858:	andeq	sp, r1, r8, asr r9
   1d85c:	andeq	sp, r1, r8, asr r9
   1d860:	andeq	sp, r1, r8, asr r9
   1d864:	andeq	sp, r1, r8, asr r9
   1d868:	andeq	sp, r1, r8, asr r9
   1d86c:	andeq	sp, r1, r8, asr r9
   1d870:	andeq	sp, r1, r8, asr r9
   1d874:	andeq	sp, r1, r8, asr r9
   1d878:	andeq	sp, r1, r8, asr r9
   1d87c:	andeq	sp, r1, r8, asr r9
   1d880:	andeq	sp, r1, r8, asr r9
   1d884:	andeq	sp, r1, r8, asr r9
   1d888:	andeq	sp, r1, r8, asr r9
   1d88c:	andeq	sp, r1, r8, asr r9
   1d890:	andeq	sp, r1, r8, asr r9
   1d894:	andeq	sp, r1, r8, asr r9
   1d898:	andeq	sp, r1, r8, asr r9
   1d89c:	andeq	sp, r1, r8, asr r9
   1d8a0:	andeq	sp, r1, r8, asr r9
   1d8a4:	andeq	sp, r1, r8, asr r9
   1d8a8:	andeq	sp, r1, r8, asr r9
   1d8ac:	andeq	sp, r1, r8, asr r9
   1d8b0:	andeq	sp, r1, r8, asr r9
   1d8b4:	andeq	sp, r1, r8, asr r9
   1d8b8:	andeq	sp, r1, r8, asr #18
   1d8bc:	andeq	sp, r1, r8, asr #18
   1d8c0:	andeq	sp, r1, r8, asr #18
   1d8c4:	andeq	sp, r1, r8, asr #18
   1d8c8:	andeq	sp, r1, r8, asr #18
   1d8cc:	andeq	sp, r1, r8, asr #18
   1d8d0:	andeq	sp, r1, r8, asr r9
   1d8d4:	andeq	sp, r1, r8, asr r9
   1d8d8:	andeq	sp, r1, r8, asr r9
   1d8dc:	andeq	sp, r1, r8, asr r9
   1d8e0:	andeq	sp, r1, r8, asr r9
   1d8e4:	andeq	sp, r1, r8, asr r9
   1d8e8:	andeq	sp, r1, r8, asr r9
   1d8ec:	andeq	sp, r1, r8, asr r9
   1d8f0:	andeq	sp, r1, r8, asr r9
   1d8f4:	andeq	sp, r1, r8, asr r9
   1d8f8:	andeq	sp, r1, r8, asr r9
   1d8fc:	andeq	sp, r1, r8, asr r9
   1d900:	andeq	sp, r1, r8, asr r9
   1d904:	andeq	sp, r1, r8, asr r9
   1d908:	andeq	sp, r1, r8, asr r9
   1d90c:	andeq	sp, r1, r8, asr r9
   1d910:	andeq	sp, r1, r8, asr r9
   1d914:	andeq	sp, r1, r8, asr r9
   1d918:	andeq	sp, r1, r8, asr r9
   1d91c:	andeq	sp, r1, r8, asr r9
   1d920:	andeq	sp, r1, r8, asr r9
   1d924:	andeq	sp, r1, r8, asr r9
   1d928:	andeq	sp, r1, r8, asr r9
   1d92c:	andeq	sp, r1, r8, asr r9
   1d930:	andeq	sp, r1, r8, asr r9
   1d934:	andeq	sp, r1, r8, asr r9
   1d938:	andeq	sp, r1, r8, asr #18
   1d93c:	andeq	sp, r1, r8, asr #18
   1d940:	andeq	sp, r1, r8, asr #18
   1d944:	andeq	sp, r1, r8, asr #18
   1d948:	movw	r0, #1
   1d94c:	and	r0, r0, #1
   1d950:	strb	r0, [sp, #11]
   1d954:	b	1d964 <__assert_fail@plt+0xc8ac>
   1d958:	movw	r0, #0
   1d95c:	and	r0, r0, #1
   1d960:	strb	r0, [sp, #11]
   1d964:	ldrb	r0, [sp, #11]
   1d968:	and	r0, r0, #1
   1d96c:	add	sp, sp, #12
   1d970:	bx	lr
   1d974:	sub	sp, sp, #12
   1d978:	str	r0, [sp, #4]
   1d97c:	ldr	r0, [sp, #4]
   1d980:	sub	r1, r0, #9
   1d984:	cmp	r1, #5
   1d988:	str	r0, [sp]
   1d98c:	bcc	1d9a4 <__assert_fail@plt+0xc8ec>
   1d990:	b	1d994 <__assert_fail@plt+0xc8dc>
   1d994:	ldr	r0, [sp]
   1d998:	cmp	r0, #32
   1d99c:	bne	1d9b4 <__assert_fail@plt+0xc8fc>
   1d9a0:	b	1d9a4 <__assert_fail@plt+0xc8ec>
   1d9a4:	movw	r0, #1
   1d9a8:	and	r0, r0, #1
   1d9ac:	strb	r0, [sp, #11]
   1d9b0:	b	1d9c0 <__assert_fail@plt+0xc908>
   1d9b4:	movw	r0, #0
   1d9b8:	and	r0, r0, #1
   1d9bc:	strb	r0, [sp, #11]
   1d9c0:	ldrb	r0, [sp, #11]
   1d9c4:	and	r0, r0, #1
   1d9c8:	add	sp, sp, #12
   1d9cc:	bx	lr
   1d9d0:	sub	sp, sp, #8
   1d9d4:	str	r0, [sp]
   1d9d8:	ldr	r0, [sp]
   1d9dc:	sub	r0, r0, #65	; 0x41
   1d9e0:	cmp	r0, #25
   1d9e4:	bhi	1d9fc <__assert_fail@plt+0xc944>
   1d9e8:	b	1d9ec <__assert_fail@plt+0xc934>
   1d9ec:	movw	r0, #1
   1d9f0:	and	r0, r0, #1
   1d9f4:	strb	r0, [sp, #7]
   1d9f8:	b	1da08 <__assert_fail@plt+0xc950>
   1d9fc:	movw	r0, #0
   1da00:	and	r0, r0, #1
   1da04:	strb	r0, [sp, #7]
   1da08:	ldrb	r0, [sp, #7]
   1da0c:	and	r0, r0, #1
   1da10:	add	sp, sp, #8
   1da14:	bx	lr
   1da18:	sub	sp, sp, #12
   1da1c:	str	r0, [sp, #4]
   1da20:	ldr	r0, [sp, #4]
   1da24:	sub	r1, r0, #48	; 0x30
   1da28:	cmp	r1, #10
   1da2c:	str	r0, [sp]
   1da30:	bcc	1da60 <__assert_fail@plt+0xc9a8>
   1da34:	b	1da38 <__assert_fail@plt+0xc980>
   1da38:	ldr	r0, [sp]
   1da3c:	sub	r1, r0, #65	; 0x41
   1da40:	cmp	r1, #6
   1da44:	bcc	1da60 <__assert_fail@plt+0xc9a8>
   1da48:	b	1da4c <__assert_fail@plt+0xc994>
   1da4c:	ldr	r0, [sp]
   1da50:	sub	r1, r0, #97	; 0x61
   1da54:	cmp	r1, #5
   1da58:	bhi	1da70 <__assert_fail@plt+0xc9b8>
   1da5c:	b	1da60 <__assert_fail@plt+0xc9a8>
   1da60:	movw	r0, #1
   1da64:	and	r0, r0, #1
   1da68:	strb	r0, [sp, #11]
   1da6c:	b	1da7c <__assert_fail@plt+0xc9c4>
   1da70:	movw	r0, #0
   1da74:	and	r0, r0, #1
   1da78:	strb	r0, [sp, #11]
   1da7c:	ldrb	r0, [sp, #11]
   1da80:	and	r0, r0, #1
   1da84:	add	sp, sp, #12
   1da88:	bx	lr
   1da8c:	sub	sp, sp, #8
   1da90:	str	r0, [sp]
   1da94:	ldr	r0, [sp]
   1da98:	sub	r0, r0, #65	; 0x41
   1da9c:	cmp	r0, #25
   1daa0:	bhi	1dabc <__assert_fail@plt+0xca04>
   1daa4:	b	1daa8 <__assert_fail@plt+0xc9f0>
   1daa8:	ldr	r0, [sp]
   1daac:	sub	r0, r0, #65	; 0x41
   1dab0:	add	r0, r0, #97	; 0x61
   1dab4:	str	r0, [sp, #4]
   1dab8:	b	1dac4 <__assert_fail@plt+0xca0c>
   1dabc:	ldr	r0, [sp]
   1dac0:	str	r0, [sp, #4]
   1dac4:	ldr	r0, [sp, #4]
   1dac8:	add	sp, sp, #8
   1dacc:	bx	lr
   1dad0:	sub	sp, sp, #8
   1dad4:	str	r0, [sp]
   1dad8:	ldr	r0, [sp]
   1dadc:	sub	r0, r0, #97	; 0x61
   1dae0:	cmp	r0, #25
   1dae4:	bhi	1db00 <__assert_fail@plt+0xca48>
   1dae8:	b	1daec <__assert_fail@plt+0xca34>
   1daec:	ldr	r0, [sp]
   1daf0:	sub	r0, r0, #97	; 0x61
   1daf4:	add	r0, r0, #65	; 0x41
   1daf8:	str	r0, [sp, #4]
   1dafc:	b	1db08 <__assert_fail@plt+0xca50>
   1db00:	ldr	r0, [sp]
   1db04:	str	r0, [sp, #4]
   1db08:	ldr	r0, [sp, #4]
   1db0c:	add	sp, sp, #8
   1db10:	bx	lr
   1db14:	push	{r4, r5, fp, lr}
   1db18:	add	fp, sp, #8
   1db1c:	sub	sp, sp, #272	; 0x110
   1db20:	add	r1, sp, #7
   1db24:	str	r0, [fp, #-16]
   1db28:	ldr	r0, [fp, #-16]
   1db2c:	movw	r2, #257	; 0x101
   1db30:	bl	1dbb0 <__assert_fail@plt+0xcaf8>
   1db34:	cmp	r0, #0
   1db38:	beq	1db4c <__assert_fail@plt+0xca94>
   1db3c:	movw	r0, #0
   1db40:	and	r0, r0, #1
   1db44:	strb	r0, [fp, #-9]
   1db48:	b	1dba0 <__assert_fail@plt+0xcae8>
   1db4c:	add	r0, sp, #7
   1db50:	movw	r1, #60476	; 0xec3c
   1db54:	movt	r1, #1
   1db58:	bl	10e6c <strcmp@plt>
   1db5c:	cmp	r0, #0
   1db60:	movw	r0, #1
   1db64:	str	r0, [sp]
   1db68:	beq	1db8c <__assert_fail@plt+0xcad4>
   1db6c:	add	r0, sp, #7
   1db70:	movw	r1, #60478	; 0xec3e
   1db74:	movt	r1, #1
   1db78:	bl	10e6c <strcmp@plt>
   1db7c:	cmp	r0, #0
   1db80:	movw	r0, #0
   1db84:	moveq	r0, #1
   1db88:	str	r0, [sp]
   1db8c:	ldr	r0, [sp]
   1db90:	mvn	r1, #0
   1db94:	eor	r0, r0, r1
   1db98:	and	r0, r0, #1
   1db9c:	strb	r0, [fp, #-9]
   1dba0:	ldrb	r0, [fp, #-9]
   1dba4:	and	r0, r0, #1
   1dba8:	sub	sp, fp, #8
   1dbac:	pop	{r4, r5, fp, pc}
   1dbb0:	push	{fp, lr}
   1dbb4:	mov	fp, sp
   1dbb8:	sub	sp, sp, #16
   1dbbc:	str	r0, [fp, #-4]
   1dbc0:	str	r1, [sp, #8]
   1dbc4:	str	r2, [sp, #4]
   1dbc8:	ldr	r0, [fp, #-4]
   1dbcc:	ldr	r1, [sp, #8]
   1dbd0:	ldr	r2, [sp, #4]
   1dbd4:	bl	1dbe0 <__assert_fail@plt+0xcb28>
   1dbd8:	mov	sp, fp
   1dbdc:	pop	{fp, pc}
   1dbe0:	push	{fp, lr}
   1dbe4:	mov	fp, sp
   1dbe8:	sub	sp, sp, #24
   1dbec:	str	r0, [fp, #-8]
   1dbf0:	str	r1, [sp, #12]
   1dbf4:	str	r2, [sp, #8]
   1dbf8:	ldr	r0, [fp, #-8]
   1dbfc:	bl	1dce0 <__assert_fail@plt+0xcc28>
   1dc00:	str	r0, [sp, #4]
   1dc04:	ldr	r0, [sp, #4]
   1dc08:	movw	r1, #0
   1dc0c:	cmp	r0, r1
   1dc10:	bne	1dc38 <__assert_fail@plt+0xcb80>
   1dc14:	ldr	r0, [sp, #8]
   1dc18:	cmp	r0, #0
   1dc1c:	bls	1dc2c <__assert_fail@plt+0xcb74>
   1dc20:	ldr	r0, [sp, #12]
   1dc24:	movw	r1, #0
   1dc28:	strb	r1, [r0]
   1dc2c:	movw	r0, #22
   1dc30:	str	r0, [fp, #-4]
   1dc34:	b	1dcb4 <__assert_fail@plt+0xcbfc>
   1dc38:	ldr	r0, [sp, #4]
   1dc3c:	bl	10fc8 <strlen@plt>
   1dc40:	str	r0, [sp]
   1dc44:	ldr	r0, [sp]
   1dc48:	ldr	r1, [sp, #8]
   1dc4c:	cmp	r0, r1
   1dc50:	bcs	1dc74 <__assert_fail@plt+0xcbbc>
   1dc54:	ldr	r0, [sp, #12]
   1dc58:	ldr	r1, [sp, #4]
   1dc5c:	ldr	r2, [sp]
   1dc60:	add	r2, r2, #1
   1dc64:	bl	10ec0 <memcpy@plt>
   1dc68:	movw	r0, #0
   1dc6c:	str	r0, [fp, #-4]
   1dc70:	b	1dcb4 <__assert_fail@plt+0xcbfc>
   1dc74:	ldr	r0, [sp, #8]
   1dc78:	cmp	r0, #0
   1dc7c:	bls	1dcac <__assert_fail@plt+0xcbf4>
   1dc80:	ldr	r0, [sp, #12]
   1dc84:	ldr	r1, [sp, #4]
   1dc88:	ldr	r2, [sp, #8]
   1dc8c:	sub	r2, r2, #1
   1dc90:	bl	10ec0 <memcpy@plt>
   1dc94:	ldr	r0, [sp, #12]
   1dc98:	ldr	r1, [sp, #8]
   1dc9c:	sub	r1, r1, #1
   1dca0:	add	r0, r0, r1
   1dca4:	movw	r1, #0
   1dca8:	strb	r1, [r0]
   1dcac:	movw	r0, #34	; 0x22
   1dcb0:	str	r0, [fp, #-4]
   1dcb4:	ldr	r0, [fp, #-4]
   1dcb8:	mov	sp, fp
   1dcbc:	pop	{fp, pc}
   1dcc0:	push	{fp, lr}
   1dcc4:	mov	fp, sp
   1dcc8:	sub	sp, sp, #8
   1dccc:	str	r0, [sp, #4]
   1dcd0:	ldr	r0, [sp, #4]
   1dcd4:	bl	1dce0 <__assert_fail@plt+0xcc28>
   1dcd8:	mov	sp, fp
   1dcdc:	pop	{fp, pc}
   1dce0:	push	{fp, lr}
   1dce4:	mov	fp, sp
   1dce8:	sub	sp, sp, #8
   1dcec:	str	r0, [sp, #4]
   1dcf0:	ldr	r0, [sp, #4]
   1dcf4:	movw	r1, #0
   1dcf8:	bl	11040 <setlocale@plt>
   1dcfc:	str	r0, [sp]
   1dd00:	ldr	r0, [sp]
   1dd04:	mov	sp, fp
   1dd08:	pop	{fp, pc}
   1dd0c:	cmp	r3, #0
   1dd10:	cmpeq	r2, #0
   1dd14:	bne	1dd38 <__assert_fail@plt+0xcc80>
   1dd18:	cmp	r1, #0
   1dd1c:	movlt	r1, #-2147483648	; 0x80000000
   1dd20:	movlt	r0, #0
   1dd24:	blt	1dd34 <__assert_fail@plt+0xcc7c>
   1dd28:	cmpeq	r0, #0
   1dd2c:	mvnne	r1, #-2147483648	; 0x80000000
   1dd30:	mvnne	r0, #0
   1dd34:	b	1de1c <__assert_fail@plt+0xcd64>
   1dd38:	sub	sp, sp, #8
   1dd3c:	push	{sp, lr}
   1dd40:	cmp	r1, #0
   1dd44:	blt	1dd64 <__assert_fail@plt+0xccac>
   1dd48:	cmp	r3, #0
   1dd4c:	blt	1dd98 <__assert_fail@plt+0xcce0>
   1dd50:	bl	1de2c <__assert_fail@plt+0xcd74>
   1dd54:	ldr	lr, [sp, #4]
   1dd58:	add	sp, sp, #8
   1dd5c:	pop	{r2, r3}
   1dd60:	bx	lr
   1dd64:	rsbs	r0, r0, #0
   1dd68:	sbc	r1, r1, r1, lsl #1
   1dd6c:	cmp	r3, #0
   1dd70:	blt	1ddbc <__assert_fail@plt+0xcd04>
   1dd74:	bl	1de2c <__assert_fail@plt+0xcd74>
   1dd78:	ldr	lr, [sp, #4]
   1dd7c:	add	sp, sp, #8
   1dd80:	pop	{r2, r3}
   1dd84:	rsbs	r0, r0, #0
   1dd88:	sbc	r1, r1, r1, lsl #1
   1dd8c:	rsbs	r2, r2, #0
   1dd90:	sbc	r3, r3, r3, lsl #1
   1dd94:	bx	lr
   1dd98:	rsbs	r2, r2, #0
   1dd9c:	sbc	r3, r3, r3, lsl #1
   1dda0:	bl	1de2c <__assert_fail@plt+0xcd74>
   1dda4:	ldr	lr, [sp, #4]
   1dda8:	add	sp, sp, #8
   1ddac:	pop	{r2, r3}
   1ddb0:	rsbs	r0, r0, #0
   1ddb4:	sbc	r1, r1, r1, lsl #1
   1ddb8:	bx	lr
   1ddbc:	rsbs	r2, r2, #0
   1ddc0:	sbc	r3, r3, r3, lsl #1
   1ddc4:	bl	1de2c <__assert_fail@plt+0xcd74>
   1ddc8:	ldr	lr, [sp, #4]
   1ddcc:	add	sp, sp, #8
   1ddd0:	pop	{r2, r3}
   1ddd4:	rsbs	r2, r2, #0
   1ddd8:	sbc	r3, r3, r3, lsl #1
   1dddc:	bx	lr
   1dde0:	cmp	r3, #0
   1dde4:	cmpeq	r2, #0
   1dde8:	bne	1de00 <__assert_fail@plt+0xcd48>
   1ddec:	cmp	r1, #0
   1ddf0:	cmpeq	r0, #0
   1ddf4:	mvnne	r1, #0
   1ddf8:	mvnne	r0, #0
   1ddfc:	b	1de1c <__assert_fail@plt+0xcd64>
   1de00:	sub	sp, sp, #8
   1de04:	push	{sp, lr}
   1de08:	bl	1de2c <__assert_fail@plt+0xcd74>
   1de0c:	ldr	lr, [sp, #4]
   1de10:	add	sp, sp, #8
   1de14:	pop	{r2, r3}
   1de18:	bx	lr
   1de1c:	push	{r1, lr}
   1de20:	mov	r0, #8
   1de24:	bl	10e60 <raise@plt>
   1de28:	pop	{r1, pc}
   1de2c:	cmp	r1, r3
   1de30:	cmpeq	r0, r2
   1de34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de38:	mov	r4, r0
   1de3c:	movcc	r0, #0
   1de40:	mov	r5, r1
   1de44:	ldr	lr, [sp, #36]	; 0x24
   1de48:	movcc	r1, r0
   1de4c:	bcc	1df48 <__assert_fail@plt+0xce90>
   1de50:	cmp	r3, #0
   1de54:	clzeq	ip, r2
   1de58:	clzne	ip, r3
   1de5c:	addeq	ip, ip, #32
   1de60:	cmp	r5, #0
   1de64:	clzeq	r1, r4
   1de68:	addeq	r1, r1, #32
   1de6c:	clzne	r1, r5
   1de70:	sub	ip, ip, r1
   1de74:	sub	sl, ip, #32
   1de78:	lsl	r9, r3, ip
   1de7c:	rsb	fp, ip, #32
   1de80:	orr	r9, r9, r2, lsl sl
   1de84:	orr	r9, r9, r2, lsr fp
   1de88:	lsl	r8, r2, ip
   1de8c:	cmp	r5, r9
   1de90:	cmpeq	r4, r8
   1de94:	movcc	r0, #0
   1de98:	movcc	r1, r0
   1de9c:	bcc	1deb8 <__assert_fail@plt+0xce00>
   1dea0:	mov	r0, #1
   1dea4:	subs	r4, r4, r8
   1dea8:	lsl	r1, r0, sl
   1deac:	orr	r1, r1, r0, lsr fp
   1deb0:	lsl	r0, r0, ip
   1deb4:	sbc	r5, r5, r9
   1deb8:	cmp	ip, #0
   1debc:	beq	1df48 <__assert_fail@plt+0xce90>
   1dec0:	lsr	r6, r8, #1
   1dec4:	orr	r6, r6, r9, lsl #31
   1dec8:	lsr	r7, r9, #1
   1decc:	mov	r2, ip
   1ded0:	b	1def4 <__assert_fail@plt+0xce3c>
   1ded4:	subs	r3, r4, r6
   1ded8:	sbc	r8, r5, r7
   1dedc:	adds	r3, r3, r3
   1dee0:	adc	r8, r8, r8
   1dee4:	adds	r4, r3, #1
   1dee8:	adc	r5, r8, #0
   1deec:	subs	r2, r2, #1
   1def0:	beq	1df10 <__assert_fail@plt+0xce58>
   1def4:	cmp	r5, r7
   1def8:	cmpeq	r4, r6
   1defc:	bcs	1ded4 <__assert_fail@plt+0xce1c>
   1df00:	adds	r4, r4, r4
   1df04:	adc	r5, r5, r5
   1df08:	subs	r2, r2, #1
   1df0c:	bne	1def4 <__assert_fail@plt+0xce3c>
   1df10:	lsr	r3, r4, ip
   1df14:	orr	r3, r3, r5, lsl fp
   1df18:	lsr	r2, r5, ip
   1df1c:	orr	r3, r3, r5, lsr sl
   1df20:	adds	r0, r0, r4
   1df24:	mov	r4, r3
   1df28:	lsl	r3, r2, ip
   1df2c:	orr	r3, r3, r4, lsl sl
   1df30:	lsl	ip, r4, ip
   1df34:	orr	r3, r3, r4, lsr fp
   1df38:	adc	r1, r1, r5
   1df3c:	subs	r0, r0, ip
   1df40:	mov	r5, r2
   1df44:	sbc	r1, r1, r3
   1df48:	cmp	lr, #0
   1df4c:	strdne	r4, [lr]
   1df50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1df58:	mov	r7, r0
   1df5c:	ldr	r6, [pc, #72]	; 1dfac <__assert_fail@plt+0xcef4>
   1df60:	ldr	r5, [pc, #72]	; 1dfb0 <__assert_fail@plt+0xcef8>
   1df64:	add	r6, pc, r6
   1df68:	add	r5, pc, r5
   1df6c:	sub	r6, r6, r5
   1df70:	mov	r8, r1
   1df74:	mov	r9, r2
   1df78:	bl	10e28 <calloc@plt-0x20>
   1df7c:	asrs	r6, r6, #2
   1df80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1df84:	mov	r4, #0
   1df88:	add	r4, r4, #1
   1df8c:	ldr	r3, [r5], #4
   1df90:	mov	r2, r9
   1df94:	mov	r1, r8
   1df98:	mov	r0, r7
   1df9c:	blx	r3
   1dfa0:	cmp	r6, r4
   1dfa4:	bne	1df88 <__assert_fail@plt+0xced0>
   1dfa8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dfac:	andeq	r0, r1, r0, lsr #31
   1dfb0:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1dfb4:	bx	lr
   1dfb8:	ldr	r3, [pc, #12]	; 1dfcc <__assert_fail@plt+0xcf14>
   1dfbc:	mov	r1, #0
   1dfc0:	add	r3, pc, r3
   1dfc4:	ldr	r2, [r3]
   1dfc8:	b	10ff8 <__cxa_atexit@plt>
   1dfcc:	andeq	r1, r1, r0, lsr #2

Disassembly of section .fini:

0001dfd0 <.fini>:
   1dfd0:	push	{r3, lr}
   1dfd4:	pop	{r3, pc}
