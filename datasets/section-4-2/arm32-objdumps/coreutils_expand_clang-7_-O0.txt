
../repos/coreutils/src/expand:     file format elf32-littlearm


Disassembly of section .init:

00010da0 <.init>:
   10da0:	push	{r3, lr}
   10da4:	bl	11054 <__assert_fail@plt+0x48>
   10da8:	pop	{r3, pc}

Disassembly of section .plt:

00010dac <calloc@plt-0x14>:
   10dac:	push	{lr}		; (str lr, [sp, #-4]!)
   10db0:	ldr	lr, [pc, #4]	; 10dbc <calloc@plt-0x4>
   10db4:	add	lr, pc, lr
   10db8:	ldr	pc, [lr, #8]!
   10dbc:	andeq	ip, r1, r4, asr #4

00010dc0 <calloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #28, 20	; 0x1c000
   10dc8:	ldr	pc, [ip, #580]!	; 0x244

00010dcc <fputs_unlocked@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #28, 20	; 0x1c000
   10dd4:	ldr	pc, [ip, #572]!	; 0x23c

00010dd8 <raise@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #28, 20	; 0x1c000
   10de0:	ldr	pc, [ip, #564]!	; 0x234

00010de4 <strcmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #28, 20	; 0x1c000
   10dec:	ldr	pc, [ip, #556]!	; 0x22c

00010df0 <posix_fadvise64@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #28, 20	; 0x1c000
   10df8:	ldr	pc, [ip, #548]!	; 0x224

00010dfc <printf@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #28, 20	; 0x1c000
   10e04:	ldr	pc, [ip, #540]!	; 0x21c

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #28, 20	; 0x1c000
   10e10:	ldr	pc, [ip, #532]!	; 0x214

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #28, 20	; 0x1c000
   10e1c:	ldr	pc, [ip, #524]!	; 0x20c

00010e20 <_exit@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #28, 20	; 0x1c000
   10e28:	ldr	pc, [ip, #516]!	; 0x204

00010e2c <memcpy@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #28, 20	; 0x1c000
   10e34:	ldr	pc, [ip, #508]!	; 0x1fc

00010e38 <mbsinit@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #28, 20	; 0x1c000
   10e40:	ldr	pc, [ip, #500]!	; 0x1f4

00010e44 <memcmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #28, 20	; 0x1c000
   10e4c:	ldr	pc, [ip, #492]!	; 0x1ec

00010e50 <getc_unlocked@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #28, 20	; 0x1c000
   10e58:	ldr	pc, [ip, #484]!	; 0x1e4

00010e5c <realloc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #28, 20	; 0x1c000
   10e64:	ldr	pc, [ip, #476]!	; 0x1dc

00010e68 <textdomain@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #28, 20	; 0x1c000
   10e70:	ldr	pc, [ip, #468]!	; 0x1d4

00010e74 <iswprint@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #28, 20	; 0x1c000
   10e7c:	ldr	pc, [ip, #460]!	; 0x1cc

00010e80 <lseek64@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #28, 20	; 0x1c000
   10e88:	ldr	pc, [ip, #452]!	; 0x1c4

00010e8c <__ctype_get_mb_cur_max@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #28, 20	; 0x1c000
   10e94:	ldr	pc, [ip, #444]!	; 0x1bc

00010e98 <__fpending@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #28, 20	; 0x1c000
   10ea0:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea4 <ferror_unlocked@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #28, 20	; 0x1c000
   10eac:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb0 <mbrtowc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #28, 20	; 0x1c000
   10eb8:	ldr	pc, [ip, #420]!	; 0x1a4

00010ebc <error@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #28, 20	; 0x1c000
   10ec4:	ldr	pc, [ip, #412]!	; 0x19c

00010ec8 <malloc@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #28, 20	; 0x1c000
   10ed0:	ldr	pc, [ip, #404]!	; 0x194

00010ed4 <__libc_start_main@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #28, 20	; 0x1c000
   10edc:	ldr	pc, [ip, #396]!	; 0x18c

00010ee0 <__freading@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #28, 20	; 0x1c000
   10ee8:	ldr	pc, [ip, #388]!	; 0x184

00010eec <__gmon_start__@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #28, 20	; 0x1c000
   10ef4:	ldr	pc, [ip, #380]!	; 0x17c

00010ef8 <getopt_long@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #28, 20	; 0x1c000
   10f00:	ldr	pc, [ip, #372]!	; 0x174

00010f04 <__ctype_b_loc@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #28, 20	; 0x1c000
   10f0c:	ldr	pc, [ip, #364]!	; 0x16c

00010f10 <exit@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #28, 20	; 0x1c000
   10f18:	ldr	pc, [ip, #356]!	; 0x164

00010f1c <gettext@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #28, 20	; 0x1c000
   10f24:	ldr	pc, [ip, #348]!	; 0x15c

00010f28 <strlen@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #28, 20	; 0x1c000
   10f30:	ldr	pc, [ip, #340]!	; 0x154

00010f34 <fprintf@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #28, 20	; 0x1c000
   10f3c:	ldr	pc, [ip, #332]!	; 0x14c

00010f40 <__errno_location@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #28, 20	; 0x1c000
   10f48:	ldr	pc, [ip, #324]!	; 0x144

00010f4c <__cxa_atexit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #28, 20	; 0x1c000
   10f54:	ldr	pc, [ip, #316]!	; 0x13c

00010f58 <memset@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #28, 20	; 0x1c000
   10f60:	ldr	pc, [ip, #308]!	; 0x134

00010f64 <fileno@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #28, 20	; 0x1c000
   10f6c:	ldr	pc, [ip, #300]!	; 0x12c

00010f70 <fclose@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #28, 20	; 0x1c000
   10f78:	ldr	pc, [ip, #292]!	; 0x124

00010f7c <fseeko64@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #28, 20	; 0x1c000
   10f84:	ldr	pc, [ip, #284]!	; 0x11c

00010f88 <setlocale@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #28, 20	; 0x1c000
   10f90:	ldr	pc, [ip, #276]!	; 0x114

00010f94 <strrchr@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #28, 20	; 0x1c000
   10f9c:	ldr	pc, [ip, #268]!	; 0x10c

00010fa0 <nl_langinfo@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #28, 20	; 0x1c000
   10fa8:	ldr	pc, [ip, #260]!	; 0x104

00010fac <clearerr_unlocked@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #28, 20	; 0x1c000
   10fb4:	ldr	pc, [ip, #252]!	; 0xfc

00010fb8 <fopen64@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #28, 20	; 0x1c000
   10fc0:	ldr	pc, [ip, #244]!	; 0xf4

00010fc4 <bindtextdomain@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #28, 20	; 0x1c000
   10fcc:	ldr	pc, [ip, #236]!	; 0xec

00010fd0 <fputs@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #28, 20	; 0x1c000
   10fd8:	ldr	pc, [ip, #228]!	; 0xe4

00010fdc <strncmp@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #28, 20	; 0x1c000
   10fe4:	ldr	pc, [ip, #220]!	; 0xdc

00010fe8 <abort@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #28, 20	; 0x1c000
   10ff0:	ldr	pc, [ip, #212]!	; 0xd4

00010ff4 <putchar_unlocked@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #28, 20	; 0x1c000
   10ffc:	ldr	pc, [ip, #204]!	; 0xcc

00011000 <strspn@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #28, 20	; 0x1c000
   11008:	ldr	pc, [ip, #196]!	; 0xc4

0001100c <__assert_fail@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #28, 20	; 0x1c000
   11014:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011018 <.text>:
   11018:	mov	fp, #0
   1101c:	mov	lr, #0
   11020:	pop	{r1}		; (ldr r1, [sp], #4)
   11024:	mov	r2, sp
   11028:	push	{r2}		; (str r2, [sp, #-4]!)
   1102c:	push	{r0}		; (str r0, [sp, #-4]!)
   11030:	ldr	ip, [pc, #16]	; 11048 <__assert_fail@plt+0x3c>
   11034:	push	{ip}		; (str ip, [sp, #-4]!)
   11038:	ldr	r0, [pc, #12]	; 1104c <__assert_fail@plt+0x40>
   1103c:	ldr	r3, [pc, #12]	; 11050 <__assert_fail@plt+0x44>
   11040:	bl	10ed4 <__libc_start_main@plt>
   11044:	bl	10fe8 <abort@plt>
   11048:	andeq	fp, r1, r0, lsr #10
   1104c:	andeq	r1, r1, r8, asr r4
   11050:	andeq	fp, r1, r0, asr #9
   11054:	ldr	r3, [pc, #20]	; 11070 <__assert_fail@plt+0x64>
   11058:	ldr	r2, [pc, #20]	; 11074 <__assert_fail@plt+0x68>
   1105c:	add	r3, pc, r3
   11060:	ldr	r2, [r3, r2]
   11064:	cmp	r2, #0
   11068:	bxeq	lr
   1106c:	b	10eec <__gmon_start__@plt>
   11070:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11074:	ldrdeq	r0, [r0], -r4
   11078:	ldr	r0, [pc, #24]	; 11098 <__assert_fail@plt+0x8c>
   1107c:	ldr	r3, [pc, #24]	; 1109c <__assert_fail@plt+0x90>
   11080:	cmp	r3, r0
   11084:	bxeq	lr
   11088:	ldr	r3, [pc, #16]	; 110a0 <__assert_fail@plt+0x94>
   1108c:	cmp	r3, #0
   11090:	bxeq	lr
   11094:	bx	r3
   11098:	andeq	sp, r2, r0, lsr r1
   1109c:	andeq	sp, r2, r0, lsr r1
   110a0:	andeq	r0, r0, r0
   110a4:	ldr	r0, [pc, #36]	; 110d0 <__assert_fail@plt+0xc4>
   110a8:	ldr	r1, [pc, #36]	; 110d4 <__assert_fail@plt+0xc8>
   110ac:	sub	r1, r1, r0
   110b0:	asr	r1, r1, #2
   110b4:	add	r1, r1, r1, lsr #31
   110b8:	asrs	r1, r1, #1
   110bc:	bxeq	lr
   110c0:	ldr	r3, [pc, #16]	; 110d8 <__assert_fail@plt+0xcc>
   110c4:	cmp	r3, #0
   110c8:	bxeq	lr
   110cc:	bx	r3
   110d0:	andeq	sp, r2, r0, lsr r1
   110d4:	andeq	sp, r2, r0, lsr r1
   110d8:	andeq	r0, r0, r0
   110dc:	push	{r4, lr}
   110e0:	ldr	r4, [pc, #24]	; 11100 <__assert_fail@plt+0xf4>
   110e4:	ldrb	r3, [r4]
   110e8:	cmp	r3, #0
   110ec:	popne	{r4, pc}
   110f0:	bl	11078 <__assert_fail@plt+0x6c>
   110f4:	mov	r3, #1
   110f8:	strb	r3, [r4]
   110fc:	pop	{r4, pc}
   11100:	andeq	sp, r2, r4, asr r1
   11104:	b	110a4 <__assert_fail@plt+0x98>
   11108:	push	{fp, lr}
   1110c:	mov	fp, sp
   11110:	sub	sp, sp, #40	; 0x28
   11114:	str	r0, [fp, #-4]
   11118:	ldr	r0, [fp, #-4]
   1111c:	cmp	r0, #0
   11120:	beq	11170 <__assert_fail@plt+0x164>
   11124:	b	11128 <__assert_fail@plt+0x11c>
   11128:	movw	r0, #53568	; 0xd140
   1112c:	movt	r0, #2
   11130:	ldr	r0, [r0]
   11134:	movw	r1, #46408	; 0xb548
   11138:	movt	r1, #1
   1113c:	str	r0, [fp, #-8]
   11140:	mov	r0, r1
   11144:	bl	10f1c <gettext@plt>
   11148:	movw	r1, #53660	; 0xd19c
   1114c:	movt	r1, #2
   11150:	ldr	r2, [r1]
   11154:	ldr	r1, [fp, #-8]
   11158:	str	r0, [fp, #-12]
   1115c:	mov	r0, r1
   11160:	ldr	r1, [fp, #-12]
   11164:	bl	10f34 <fprintf@plt>
   11168:	str	r0, [fp, #-16]
   1116c:	b	11234 <__assert_fail@plt+0x228>
   11170:	movw	r0, #46447	; 0xb56f
   11174:	movt	r0, #1
   11178:	bl	10f1c <gettext@plt>
   1117c:	movw	lr, #53660	; 0xd19c
   11180:	movt	lr, #2
   11184:	ldr	r1, [lr]
   11188:	bl	10dfc <printf@plt>
   1118c:	movw	r1, #46480	; 0xb590
   11190:	movt	r1, #1
   11194:	str	r0, [sp, #20]
   11198:	mov	r0, r1
   1119c:	bl	10f1c <gettext@plt>
   111a0:	movw	r1, #53580	; 0xd14c
   111a4:	movt	r1, #2
   111a8:	ldr	r1, [r1]
   111ac:	bl	10dcc <fputs_unlocked@plt>
   111b0:	str	r0, [sp, #16]
   111b4:	bl	1123c <__assert_fail@plt+0x230>
   111b8:	bl	11270 <__assert_fail@plt+0x264>
   111bc:	movw	r0, #46546	; 0xb5d2
   111c0:	movt	r0, #1
   111c4:	bl	10f1c <gettext@plt>
   111c8:	movw	r1, #53580	; 0xd14c
   111cc:	movt	r1, #2
   111d0:	ldr	r1, [r1]
   111d4:	bl	10dcc <fputs_unlocked@plt>
   111d8:	str	r0, [sp, #12]
   111dc:	bl	12c5c <__assert_fail@plt+0x1c50>
   111e0:	movw	r0, #46658	; 0xb642
   111e4:	movt	r0, #1
   111e8:	bl	10f1c <gettext@plt>
   111ec:	movw	r1, #53580	; 0xd14c
   111f0:	movt	r1, #2
   111f4:	ldr	r1, [r1]
   111f8:	bl	10dcc <fputs_unlocked@plt>
   111fc:	movw	r1, #46703	; 0xb66f
   11200:	movt	r1, #1
   11204:	str	r0, [sp, #8]
   11208:	mov	r0, r1
   1120c:	bl	10f1c <gettext@plt>
   11210:	movw	r1, #53580	; 0xd14c
   11214:	movt	r1, #2
   11218:	ldr	r1, [r1]
   1121c:	bl	10dcc <fputs_unlocked@plt>
   11220:	movw	r1, #46757	; 0xb6a5
   11224:	movt	r1, #1
   11228:	str	r0, [sp, #4]
   1122c:	mov	r0, r1
   11230:	bl	112a4 <__assert_fail@plt+0x298>
   11234:	ldr	r0, [fp, #-4]
   11238:	bl	10f10 <exit@plt>
   1123c:	push	{fp, lr}
   11240:	mov	fp, sp
   11244:	sub	sp, sp, #8
   11248:	movw	r0, #46818	; 0xb6e2
   1124c:	movt	r0, #1
   11250:	bl	10f1c <gettext@plt>
   11254:	movw	lr, #53580	; 0xd14c
   11258:	movt	lr, #2
   1125c:	ldr	r1, [lr]
   11260:	bl	10dcc <fputs_unlocked@plt>
   11264:	str	r0, [sp, #4]
   11268:	mov	sp, fp
   1126c:	pop	{fp, pc}
   11270:	push	{fp, lr}
   11274:	mov	fp, sp
   11278:	sub	sp, sp, #8
   1127c:	movw	r0, #46874	; 0xb71a
   11280:	movt	r0, #1
   11284:	bl	10f1c <gettext@plt>
   11288:	movw	lr, #53580	; 0xd14c
   1128c:	movt	lr, #2
   11290:	ldr	r1, [lr]
   11294:	bl	10dcc <fputs_unlocked@plt>
   11298:	str	r0, [sp, #4]
   1129c:	mov	sp, fp
   112a0:	pop	{fp, pc}
   112a4:	push	{fp, lr}
   112a8:	mov	fp, sp
   112ac:	sub	sp, sp, #96	; 0x60
   112b0:	add	r1, sp, #36	; 0x24
   112b4:	movw	r2, #47440	; 0xb950
   112b8:	movt	r2, #1
   112bc:	str	r0, [fp, #-4]
   112c0:	mov	r0, r1
   112c4:	str	r1, [sp, #20]
   112c8:	mov	r1, r2
   112cc:	movw	r2, #56	; 0x38
   112d0:	bl	10e2c <memcpy@plt>
   112d4:	ldr	r0, [fp, #-4]
   112d8:	str	r0, [sp, #32]
   112dc:	ldr	r0, [sp, #20]
   112e0:	str	r0, [sp, #28]
   112e4:	ldr	r0, [sp, #28]
   112e8:	ldr	r0, [r0]
   112ec:	movw	r1, #0
   112f0:	cmp	r0, r1
   112f4:	movw	r0, #0
   112f8:	str	r0, [sp, #16]
   112fc:	beq	11328 <__assert_fail@plt+0x31c>
   11300:	ldr	r0, [fp, #-4]
   11304:	ldr	r1, [sp, #28]
   11308:	ldr	r1, [r1]
   1130c:	bl	10de4 <strcmp@plt>
   11310:	cmp	r0, #0
   11314:	movw	r0, #0
   11318:	moveq	r0, #1
   1131c:	mvn	r1, #0
   11320:	eor	r0, r0, r1
   11324:	str	r0, [sp, #16]
   11328:	ldr	r0, [sp, #16]
   1132c:	tst	r0, #1
   11330:	beq	11344 <__assert_fail@plt+0x338>
   11334:	ldr	r0, [sp, #28]
   11338:	add	r0, r0, #8
   1133c:	str	r0, [sp, #28]
   11340:	b	112e4 <__assert_fail@plt+0x2d8>
   11344:	ldr	r0, [sp, #28]
   11348:	ldr	r0, [r0, #4]
   1134c:	movw	r1, #0
   11350:	cmp	r0, r1
   11354:	beq	11364 <__assert_fail@plt+0x358>
   11358:	ldr	r0, [sp, #28]
   1135c:	ldr	r0, [r0, #4]
   11360:	str	r0, [sp, #32]
   11364:	movw	r0, #47044	; 0xb7c4
   11368:	movt	r0, #1
   1136c:	bl	10f1c <gettext@plt>
   11370:	movw	r1, #46788	; 0xb6c4
   11374:	movt	r1, #1
   11378:	movw	r2, #47067	; 0xb7db
   1137c:	movt	r2, #1
   11380:	bl	10dfc <printf@plt>
   11384:	movw	r1, #5
   11388:	str	r0, [sp, #12]
   1138c:	mov	r0, r1
   11390:	movw	r1, #0
   11394:	bl	10f88 <setlocale@plt>
   11398:	str	r0, [sp, #24]
   1139c:	ldr	r0, [sp, #24]
   113a0:	movw	r1, #0
   113a4:	cmp	r0, r1
   113a8:	beq	113e8 <__assert_fail@plt+0x3dc>
   113ac:	ldr	r0, [sp, #24]
   113b0:	movw	r1, #47107	; 0xb803
   113b4:	movt	r1, #1
   113b8:	movw	r2, #3
   113bc:	bl	10fdc <strncmp@plt>
   113c0:	cmp	r0, #0
   113c4:	beq	113e8 <__assert_fail@plt+0x3dc>
   113c8:	movw	r0, #47111	; 0xb807
   113cc:	movt	r0, #1
   113d0:	bl	10f1c <gettext@plt>
   113d4:	movw	lr, #53580	; 0xd14c
   113d8:	movt	lr, #2
   113dc:	ldr	r1, [lr]
   113e0:	bl	10dcc <fputs_unlocked@plt>
   113e4:	str	r0, [sp, #8]
   113e8:	movw	r0, #47182	; 0xb84e
   113ec:	movt	r0, #1
   113f0:	bl	10f1c <gettext@plt>
   113f4:	ldr	r2, [fp, #-4]
   113f8:	movw	r1, #47067	; 0xb7db
   113fc:	movt	r1, #1
   11400:	bl	10dfc <printf@plt>
   11404:	movw	r1, #47209	; 0xb869
   11408:	movt	r1, #1
   1140c:	str	r0, [sp, #4]
   11410:	mov	r0, r1
   11414:	bl	10f1c <gettext@plt>
   11418:	ldr	r1, [sp, #32]
   1141c:	ldr	r2, [sp, #32]
   11420:	ldr	lr, [fp, #-4]
   11424:	cmp	r2, lr
   11428:	movw	r2, #0
   1142c:	moveq	r2, #1
   11430:	tst	r2, #1
   11434:	movw	r2, #47259	; 0xb89b
   11438:	movt	r2, #1
   1143c:	movw	lr, #46977	; 0xb781
   11440:	movt	lr, #1
   11444:	movne	r2, lr
   11448:	bl	10dfc <printf@plt>
   1144c:	str	r0, [sp]
   11450:	mov	sp, fp
   11454:	pop	{fp, pc}
   11458:	push	{fp, lr}
   1145c:	mov	fp, sp
   11460:	sub	sp, sp, #56	; 0x38
   11464:	movw	r2, #0
   11468:	str	r2, [fp, #-4]
   1146c:	str	r0, [fp, #-8]
   11470:	str	r1, [fp, #-12]
   11474:	ldr	r0, [fp, #-12]
   11478:	ldr	r0, [r0]
   1147c:	bl	131c4 <__assert_fail@plt+0x21b8>
   11480:	movw	r0, #6
   11484:	movw	r1, #47259	; 0xb89b
   11488:	movt	r1, #1
   1148c:	bl	10f88 <setlocale@plt>
   11490:	movw	r1, #46792	; 0xb6c8
   11494:	movt	r1, #1
   11498:	str	r0, [fp, #-24]	; 0xffffffe8
   1149c:	mov	r0, r1
   114a0:	movw	r1, #46764	; 0xb6ac
   114a4:	movt	r1, #1
   114a8:	bl	10fc4 <bindtextdomain@plt>
   114ac:	movw	r1, #46792	; 0xb6c8
   114b0:	movt	r1, #1
   114b4:	str	r0, [sp, #28]
   114b8:	mov	r0, r1
   114bc:	bl	10e68 <textdomain@plt>
   114c0:	movw	r1, #11516	; 0x2cfc
   114c4:	movt	r1, #1
   114c8:	str	r0, [sp, #24]
   114cc:	mov	r0, r1
   114d0:	bl	1b524 <__assert_fail@plt+0xa518>
   114d4:	movw	r1, #53592	; 0xd158
   114d8:	movt	r1, #2
   114dc:	movw	r2, #1
   114e0:	strb	r2, [r1]
   114e4:	str	r0, [sp, #20]
   114e8:	ldr	r0, [fp, #-8]
   114ec:	ldr	r1, [fp, #-12]
   114f0:	movw	r2, #47324	; 0xb8dc
   114f4:	movt	r2, #1
   114f8:	movw	r3, #47360	; 0xb900
   114fc:	movt	r3, #1
   11500:	movw	ip, #0
   11504:	str	ip, [sp]
   11508:	bl	10ef8 <getopt_long@plt>
   1150c:	str	r0, [fp, #-16]
   11510:	cmn	r0, #1
   11514:	beq	117f0 <__assert_fail@plt+0x7e4>
   11518:	ldr	r0, [fp, #-16]
   1151c:	add	r0, r0, #3
   11520:	cmp	r0, #119	; 0x77
   11524:	str	r0, [sp, #16]
   11528:	bhi	117e4 <__assert_fail@plt+0x7d8>
   1152c:	add	r0, pc, #8
   11530:	ldr	r1, [sp, #16]
   11534:	ldr	r0, [r0, r1, lsl #2]
   11538:	mov	pc, r0
   1153c:	muleq	r1, ip, r7
   11540:	muleq	r1, r4, r7
   11544:	andeq	r1, r1, r4, ror #15
   11548:	andeq	r1, r1, r4, ror #15
   1154c:	andeq	r1, r1, r4, ror #15
   11550:	andeq	r1, r1, r4, ror #15
   11554:	andeq	r1, r1, r4, ror #15
   11558:	andeq	r1, r1, r4, ror #15
   1155c:	andeq	r1, r1, r4, ror #15
   11560:	andeq	r1, r1, r4, ror #15
   11564:	andeq	r1, r1, r4, ror #15
   11568:	andeq	r1, r1, r4, ror #15
   1156c:	andeq	r1, r1, r4, ror #15
   11570:	andeq	r1, r1, r4, ror #15
   11574:	andeq	r1, r1, r4, ror #15
   11578:	andeq	r1, r1, r4, ror #15
   1157c:	andeq	r1, r1, r4, ror #15
   11580:	andeq	r1, r1, r4, ror #15
   11584:	andeq	r1, r1, r4, ror #15
   11588:	andeq	r1, r1, r4, ror #15
   1158c:	andeq	r1, r1, r4, ror #15
   11590:	andeq	r1, r1, r4, ror #15
   11594:	andeq	r1, r1, r4, ror #15
   11598:	andeq	r1, r1, r4, ror #15
   1159c:	andeq	r1, r1, r4, ror #15
   115a0:	andeq	r1, r1, r4, ror #15
   115a4:	andeq	r1, r1, r4, ror #15
   115a8:	andeq	r1, r1, r4, ror #15
   115ac:	andeq	r1, r1, r4, ror #15
   115b0:	andeq	r1, r1, r4, ror #15
   115b4:	andeq	r1, r1, r4, ror #15
   115b8:	andeq	r1, r1, r4, ror #15
   115bc:	andeq	r1, r1, r4, ror #15
   115c0:	andeq	r1, r1, r4, ror #15
   115c4:	andeq	r1, r1, r4, ror #15
   115c8:	andeq	r1, r1, r4, ror #15
   115cc:	andeq	r1, r1, r4, ror #15
   115d0:	andeq	r1, r1, r4, ror #15
   115d4:	andeq	r1, r1, r4, ror #15
   115d8:	andeq	r1, r1, r4, ror #15
   115dc:	andeq	r1, r1, r4, ror #15
   115e0:	andeq	r1, r1, r4, ror #15
   115e4:	andeq	r1, r1, r4, ror #15
   115e8:	andeq	r1, r1, r4, ror #15
   115ec:	andeq	r1, r1, r4, ror #15
   115f0:	andeq	r1, r1, r4, ror #15
   115f4:	andeq	r1, r1, r4, ror #15
   115f8:	andeq	r1, r1, r4, ror #15
   115fc:	andeq	r1, r1, r4, ror #15
   11600:	andeq	r1, r1, r4, ror #15
   11604:	andeq	r1, r1, r4, ror #15
   11608:	andeq	r1, r1, r4, asr #14
   1160c:	andeq	r1, r1, r4, asr #14
   11610:	andeq	r1, r1, r4, asr #14
   11614:	andeq	r1, r1, r4, asr #14
   11618:	andeq	r1, r1, r4, asr #14
   1161c:	andeq	r1, r1, r4, asr #14
   11620:	andeq	r1, r1, r4, asr #14
   11624:	andeq	r1, r1, r4, asr #14
   11628:	andeq	r1, r1, r4, asr #14
   1162c:	andeq	r1, r1, r4, asr #14
   11630:	andeq	r1, r1, r4, ror #15
   11634:	andeq	r1, r1, r4, ror #15
   11638:	andeq	r1, r1, r4, ror #15
   1163c:	andeq	r1, r1, r4, ror #15
   11640:	andeq	r1, r1, r4, ror #15
   11644:	andeq	r1, r1, r4, ror #15
   11648:	andeq	r1, r1, r4, ror #15
   1164c:	andeq	r1, r1, r4, ror #15
   11650:	andeq	r1, r1, r4, ror #15
   11654:	andeq	r1, r1, r4, ror #15
   11658:	andeq	r1, r1, r4, ror #15
   1165c:	andeq	r1, r1, r4, ror #15
   11660:	andeq	r1, r1, r4, ror #15
   11664:	andeq	r1, r1, r4, ror #15
   11668:	andeq	r1, r1, r4, ror #15
   1166c:	andeq	r1, r1, r4, ror #15
   11670:	andeq	r1, r1, r4, ror #15
   11674:	andeq	r1, r1, r4, ror #15
   11678:	andeq	r1, r1, r4, ror #15
   1167c:	andeq	r1, r1, r4, ror #15
   11680:	andeq	r1, r1, r4, ror #15
   11684:	andeq	r1, r1, r4, ror #15
   11688:	andeq	r1, r1, r4, ror #15
   1168c:	andeq	r1, r1, r4, ror #15
   11690:	andeq	r1, r1, r4, ror #15
   11694:	andeq	r1, r1, r4, ror #15
   11698:	andeq	r1, r1, r4, ror #15
   1169c:	andeq	r1, r1, r4, ror #15
   116a0:	andeq	r1, r1, r4, ror #15
   116a4:	andeq	r1, r1, r4, ror #15
   116a8:	andeq	r1, r1, r4, ror #15
   116ac:	andeq	r1, r1, r4, ror #15
   116b0:	andeq	r1, r1, r4, ror #15
   116b4:	andeq	r1, r1, r4, ror #15
   116b8:	andeq	r1, r1, r4, ror #15
   116bc:	andeq	r1, r1, r4, ror #15
   116c0:	andeq	r1, r1, r4, ror #15
   116c4:	andeq	r1, r1, r4, ror #15
   116c8:	andeq	r1, r1, r4, ror #15
   116cc:	andeq	r1, r1, r4, ror #15
   116d0:	andeq	r1, r1, r4, ror #15
   116d4:	andeq	r1, r1, r4, ror #15
   116d8:	andeq	r1, r1, r4, ror #15
   116dc:	andeq	r1, r1, r4, ror #15
   116e0:	andeq	r1, r1, r4, ror #15
   116e4:	andeq	r1, r1, r4, ror #15
   116e8:	andeq	r1, r1, r4, ror #15
   116ec:	andeq	r1, r1, ip, lsl r7
   116f0:	andeq	r1, r1, r4, ror #15
   116f4:	andeq	r1, r1, r4, ror #15
   116f8:	andeq	r1, r1, r4, ror #15
   116fc:	andeq	r1, r1, r4, ror #15
   11700:	andeq	r1, r1, r4, ror #15
   11704:	andeq	r1, r1, r4, ror #15
   11708:	andeq	r1, r1, r4, ror #15
   1170c:	andeq	r1, r1, r4, ror #15
   11710:	andeq	r1, r1, r4, ror #15
   11714:	andeq	r1, r1, r4, ror #15
   11718:	andeq	r1, r1, r0, lsr r7
   1171c:	movw	r0, #53592	; 0xd158
   11720:	movt	r0, #2
   11724:	movw	r1, #0
   11728:	strb	r1, [r0]
   1172c:	b	117ec <__assert_fail@plt+0x7e0>
   11730:	movw	r0, #53584	; 0xd150
   11734:	movt	r0, #2
   11738:	ldr	r0, [r0]
   1173c:	bl	11da0 <__assert_fail@plt+0xd94>
   11740:	b	117ec <__assert_fail@plt+0x7e0>
   11744:	movw	r0, #53584	; 0xd150
   11748:	movt	r0, #2
   1174c:	ldr	r0, [r0]
   11750:	movw	r1, #0
   11754:	cmp	r0, r1
   11758:	beq	11778 <__assert_fail@plt+0x76c>
   1175c:	movw	r0, #53584	; 0xd150
   11760:	movt	r0, #2
   11764:	ldr	r0, [r0]
   11768:	mvn	r1, #0
   1176c:	add	r0, r0, r1
   11770:	bl	11da0 <__assert_fail@plt+0xd94>
   11774:	b	11790 <__assert_fail@plt+0x784>
   11778:	sub	r0, fp, #18
   1177c:	ldr	r1, [fp, #-16]
   11780:	strb	r1, [fp, #-18]	; 0xffffffee
   11784:	movw	r1, #0
   11788:	strb	r1, [fp, #-17]	; 0xffffffef
   1178c:	bl	11da0 <__assert_fail@plt+0xd94>
   11790:	b	117ec <__assert_fail@plt+0x7e0>
   11794:	movw	r0, #0
   11798:	bl	11108 <__assert_fail@plt+0xfc>
   1179c:	movw	r0, #53580	; 0xd14c
   117a0:	movt	r0, #2
   117a4:	ldr	r0, [r0]
   117a8:	movw	r1, #53480	; 0xd0e8
   117ac:	movt	r1, #2
   117b0:	ldr	r3, [r1]
   117b4:	movw	r1, #46757	; 0xb6a5
   117b8:	movt	r1, #1
   117bc:	movw	r2, #46788	; 0xb6c4
   117c0:	movt	r2, #1
   117c4:	movw	ip, #46802	; 0xb6d2
   117c8:	movt	ip, #1
   117cc:	str	ip, [sp]
   117d0:	movw	ip, #0
   117d4:	str	ip, [sp, #4]
   117d8:	bl	160dc <__assert_fail@plt+0x50d0>
   117dc:	movw	r0, #0
   117e0:	bl	10f10 <exit@plt>
   117e4:	movw	r0, #1
   117e8:	bl	11108 <__assert_fail@plt+0xfc>
   117ec:	b	114e8 <__assert_fail@plt+0x4dc>
   117f0:	bl	1238c <__assert_fail@plt+0x1380>
   117f4:	movw	lr, #53560	; 0xd138
   117f8:	movt	lr, #2
   117fc:	ldr	lr, [lr]
   11800:	ldr	r0, [fp, #-8]
   11804:	cmp	lr, r0
   11808:	bge	11828 <__assert_fail@plt+0x81c>
   1180c:	ldr	r0, [fp, #-12]
   11810:	movw	r1, #53560	; 0xd138
   11814:	movt	r1, #2
   11818:	ldr	r1, [r1]
   1181c:	add	r0, r0, r1, lsl #2
   11820:	str	r0, [sp, #12]
   11824:	b	11834 <__assert_fail@plt+0x828>
   11828:	movw	r0, #0
   1182c:	str	r0, [sp, #12]
   11830:	b	11834 <__assert_fail@plt+0x828>
   11834:	ldr	r0, [sp, #12]
   11838:	bl	12968 <__assert_fail@plt+0x195c>
   1183c:	bl	11858 <__assert_fail@plt+0x84c>
   11840:	bl	12c0c <__assert_fail@plt+0x1c00>
   11844:	movw	r0, #53596	; 0xd15c
   11848:	movt	r0, #2
   1184c:	ldr	r0, [r0]
   11850:	mov	sp, fp
   11854:	pop	{fp, pc}
   11858:	push	{fp, lr}
   1185c:	mov	fp, sp
   11860:	sub	sp, sp, #96	; 0x60
   11864:	movw	r0, #0
   11868:	bl	129c0 <__assert_fail@plt+0x19b4>
   1186c:	str	r0, [fp, #-4]
   11870:	ldr	r0, [fp, #-4]
   11874:	movw	lr, #0
   11878:	cmp	r0, lr
   1187c:	bne	11884 <__assert_fail@plt+0x878>
   11880:	b	11bbc <__assert_fail@plt+0xbb0>
   11884:	b	11888 <__assert_fail@plt+0x87c>
   11888:	mov	r0, #1
   1188c:	strb	r0, [fp, #-9]
   11890:	mov	r0, #0
   11894:	str	r0, [fp, #-20]	; 0xffffffec
   11898:	str	r0, [fp, #-24]	; 0xffffffe8
   1189c:	movw	r0, #0
   118a0:	str	r0, [fp, #-28]	; 0xffffffe4
   118a4:	b	118a8 <__assert_fail@plt+0x89c>
   118a8:	ldr	r0, [fp, #-4]
   118ac:	bl	10e50 <getc_unlocked@plt>
   118b0:	str	r0, [fp, #-8]
   118b4:	cmp	r0, #0
   118b8:	movw	r0, #0
   118bc:	str	r0, [sp, #48]	; 0x30
   118c0:	bge	118e4 <__assert_fail@plt+0x8d8>
   118c4:	ldr	r0, [fp, #-4]
   118c8:	bl	129c0 <__assert_fail@plt+0x19b4>
   118cc:	str	r0, [fp, #-4]
   118d0:	movw	lr, #0
   118d4:	cmp	r0, lr
   118d8:	movw	r0, #0
   118dc:	movne	r0, #1
   118e0:	str	r0, [sp, #48]	; 0x30
   118e4:	ldr	r0, [sp, #48]	; 0x30
   118e8:	tst	r0, #1
   118ec:	beq	118f4 <__assert_fail@plt+0x8e8>
   118f0:	b	118a8 <__assert_fail@plt+0x89c>
   118f4:	ldrb	r0, [fp, #-9]
   118f8:	tst	r0, #1
   118fc:	beq	11b58 <__assert_fail@plt+0xb4c>
   11900:	ldr	r0, [fp, #-8]
   11904:	cmp	r0, #9
   11908:	bne	11a24 <__assert_fail@plt+0xa18>
   1190c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11910:	ldr	r1, [fp, #-20]	; 0xffffffec
   11914:	sub	r2, fp, #28
   11918:	sub	r3, fp, #41	; 0x29
   1191c:	bl	12698 <__assert_fail@plt+0x168c>
   11920:	str	r1, [fp, #-36]	; 0xffffffdc
   11924:	str	r0, [fp, #-40]	; 0xffffffd8
   11928:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1192c:	tst	r0, #1
   11930:	beq	1194c <__assert_fail@plt+0x940>
   11934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11938:	ldr	r1, [fp, #-20]	; 0xffffffec
   1193c:	adds	r0, r0, #1
   11940:	adc	r1, r1, #0
   11944:	str	r0, [fp, #-40]	; 0xffffffd8
   11948:	str	r1, [fp, #-36]	; 0xffffffdc
   1194c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11950:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1195c:	subs	r0, r0, r2
   11960:	sbcs	r1, r1, r3
   11964:	str	r0, [sp, #44]	; 0x2c
   11968:	str	r1, [sp, #40]	; 0x28
   1196c:	bcs	11998 <__assert_fail@plt+0x98c>
   11970:	b	11974 <__assert_fail@plt+0x968>
   11974:	movw	r0, #47286	; 0xb8b6
   11978:	movt	r0, #1
   1197c:	bl	10f1c <gettext@plt>
   11980:	movw	lr, #1
   11984:	str	r0, [sp, #36]	; 0x24
   11988:	mov	r0, lr
   1198c:	movw	r1, #0
   11990:	ldr	r2, [sp, #36]	; 0x24
   11994:	bl	10ebc <error@plt>
   11998:	b	1199c <__assert_fail@plt+0x990>
   1199c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   119a4:	adds	r0, r0, #1
   119a8:	adc	r1, r1, #0
   119ac:	str	r0, [fp, #-24]	; 0xffffffe8
   119b0:	str	r1, [fp, #-20]	; 0xffffffec
   119b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   119b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119bc:	subs	r0, r0, r2
   119c0:	sbcs	r1, r1, r3
   119c4:	str	r0, [sp, #32]
   119c8:	str	r1, [sp, #28]
   119cc:	bcs	11a18 <__assert_fail@plt+0xa0c>
   119d0:	b	119d4 <__assert_fail@plt+0x9c8>
   119d4:	movw	r0, #32
   119d8:	bl	10ff4 <putchar_unlocked@plt>
   119dc:	cmp	r0, #0
   119e0:	bge	11a14 <__assert_fail@plt+0xa08>
   119e4:	bl	10f40 <__errno_location@plt>
   119e8:	ldr	r1, [r0]
   119ec:	movw	r0, #47309	; 0xb8cd
   119f0:	movt	r0, #1
   119f4:	str	r1, [sp, #24]
   119f8:	bl	10f1c <gettext@plt>
   119fc:	movw	r1, #1
   11a00:	str	r0, [sp, #20]
   11a04:	mov	r0, r1
   11a08:	ldr	r1, [sp, #24]
   11a0c:	ldr	r2, [sp, #20]
   11a10:	bl	10ebc <error@plt>
   11a14:	b	1199c <__assert_fail@plt+0x990>
   11a18:	movw	r0, #32
   11a1c:	str	r0, [fp, #-8]
   11a20:	b	11ae0 <__assert_fail@plt+0xad4>
   11a24:	ldr	r0, [fp, #-8]
   11a28:	cmp	r0, #8
   11a2c:	bne	11a84 <__assert_fail@plt+0xa78>
   11a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a34:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a38:	orr	r2, r0, r1
   11a3c:	cmp	r2, #0
   11a40:	movwne	r2, #1
   11a44:	subs	r0, r0, r2
   11a48:	sbc	r1, r1, #0
   11a4c:	str	r0, [fp, #-24]	; 0xffffffe8
   11a50:	str	r1, [fp, #-20]	; 0xffffffec
   11a54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a58:	cmp	r0, #0
   11a5c:	movw	r0, #0
   11a60:	movne	r0, #1
   11a64:	mvn	r1, #0
   11a68:	eor	r0, r0, r1
   11a6c:	eor	r0, r0, r1
   11a70:	and	r0, r0, #1
   11a74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a78:	sub	r0, r1, r0
   11a7c:	str	r0, [fp, #-28]	; 0xffffffe4
   11a80:	b	11adc <__assert_fail@plt+0xad0>
   11a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a88:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a8c:	adds	r0, r0, #1
   11a90:	adc	r1, r1, #0
   11a94:	str	r0, [fp, #-24]	; 0xffffffe8
   11a98:	str	r1, [fp, #-20]	; 0xffffffec
   11a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   11aa4:	orr	r0, r0, r1
   11aa8:	cmp	r0, #0
   11aac:	bne	11ad8 <__assert_fail@plt+0xacc>
   11ab0:	b	11ab4 <__assert_fail@plt+0xaa8>
   11ab4:	movw	r0, #47286	; 0xb8b6
   11ab8:	movt	r0, #1
   11abc:	bl	10f1c <gettext@plt>
   11ac0:	movw	lr, #1
   11ac4:	str	r0, [sp, #16]
   11ac8:	mov	r0, lr
   11acc:	movw	r1, #0
   11ad0:	ldr	r2, [sp, #16]
   11ad4:	bl	10ebc <error@plt>
   11ad8:	b	11adc <__assert_fail@plt+0xad0>
   11adc:	b	11ae0 <__assert_fail@plt+0xad4>
   11ae0:	movw	r0, #53592	; 0xd158
   11ae4:	movt	r0, #2
   11ae8:	ldrb	r0, [r0]
   11aec:	tst	r0, #1
   11af0:	movw	r0, #1
   11af4:	str	r0, [sp, #12]
   11af8:	bne	11b30 <__assert_fail@plt+0xb24>
   11afc:	bl	10f04 <__ctype_b_loc@plt>
   11b00:	ldr	r0, [r0]
   11b04:	ldr	lr, [fp, #-8]
   11b08:	add	r0, r0, lr, lsl #1
   11b0c:	ldrh	r0, [r0]
   11b10:	and	r0, r0, #1
   11b14:	cmp	r0, #0
   11b18:	movw	r0, #0
   11b1c:	movne	r0, #1
   11b20:	mvn	lr, #0
   11b24:	eor	r0, r0, lr
   11b28:	eor	r0, r0, lr
   11b2c:	str	r0, [sp, #12]
   11b30:	ldr	r0, [sp, #12]
   11b34:	and	r0, r0, #1
   11b38:	ldrb	r1, [fp, #-9]
   11b3c:	and	r1, r1, #1
   11b40:	and	r0, r1, r0
   11b44:	cmp	r0, #0
   11b48:	movw	r0, #0
   11b4c:	movne	r0, #1
   11b50:	and	r0, r0, #1
   11b54:	strb	r0, [fp, #-9]
   11b58:	ldr	r0, [fp, #-8]
   11b5c:	cmp	r0, #0
   11b60:	bge	11b68 <__assert_fail@plt+0xb5c>
   11b64:	b	11bbc <__assert_fail@plt+0xbb0>
   11b68:	ldr	r0, [fp, #-8]
   11b6c:	bl	10ff4 <putchar_unlocked@plt>
   11b70:	cmp	r0, #0
   11b74:	bge	11ba8 <__assert_fail@plt+0xb9c>
   11b78:	bl	10f40 <__errno_location@plt>
   11b7c:	ldr	r1, [r0]
   11b80:	movw	r0, #47309	; 0xb8cd
   11b84:	movt	r0, #1
   11b88:	str	r1, [sp, #8]
   11b8c:	bl	10f1c <gettext@plt>
   11b90:	movw	r1, #1
   11b94:	str	r0, [sp, #4]
   11b98:	mov	r0, r1
   11b9c:	ldr	r1, [sp, #8]
   11ba0:	ldr	r2, [sp, #4]
   11ba4:	bl	10ebc <error@plt>
   11ba8:	b	11bac <__assert_fail@plt+0xba0>
   11bac:	ldr	r0, [fp, #-8]
   11bb0:	cmp	r0, #10
   11bb4:	bne	118a4 <__assert_fail@plt+0x898>
   11bb8:	b	11888 <__assert_fail@plt+0x87c>
   11bbc:	mov	sp, fp
   11bc0:	pop	{fp, pc}
   11bc4:	push	{fp, lr}
   11bc8:	mov	fp, sp
   11bcc:	sub	sp, sp, #64	; 0x40
   11bd0:	str	r0, [fp, #-8]
   11bd4:	str	r1, [fp, #-4]
   11bd8:	movw	r0, #53600	; 0xd160
   11bdc:	movt	r0, #2
   11be0:	ldr	r0, [r0]
   11be4:	cmp	r0, #0
   11be8:	beq	11c1c <__assert_fail@plt+0xc10>
   11bec:	movw	r0, #53604	; 0xd164
   11bf0:	movt	r0, #2
   11bf4:	ldr	r0, [r0]
   11bf8:	movw	r1, #53600	; 0xd160
   11bfc:	movt	r1, #2
   11c00:	ldr	r1, [r1]
   11c04:	add	r0, r0, r1, lsl #3
   11c08:	ldr	r1, [r0, #-8]
   11c0c:	ldr	r0, [r0, #-4]
   11c10:	str	r1, [fp, #-28]	; 0xffffffe4
   11c14:	str	r0, [sp, #32]
   11c18:	b	11c30 <__assert_fail@plt+0xc24>
   11c1c:	mov	r0, #0
   11c20:	mov	r1, r0
   11c24:	str	r1, [fp, #-28]	; 0xffffffe4
   11c28:	str	r0, [sp, #32]
   11c2c:	b	11c30 <__assert_fail@plt+0xc24>
   11c30:	ldr	r0, [sp, #32]
   11c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c38:	str	r1, [fp, #-16]
   11c3c:	str	r0, [fp, #-12]
   11c40:	ldr	r0, [fp, #-16]
   11c44:	ldr	r1, [fp, #-12]
   11c48:	ldr	r2, [fp, #-8]
   11c4c:	ldr	r3, [fp, #-4]
   11c50:	subs	r0, r2, r0
   11c54:	sbcs	r1, r3, r1
   11c58:	str	r0, [sp, #28]
   11c5c:	str	r1, [sp, #24]
   11c60:	bcc	11c8c <__assert_fail@plt+0xc80>
   11c64:	b	11c68 <__assert_fail@plt+0xc5c>
   11c68:	ldr	r0, [fp, #-8]
   11c6c:	ldr	r1, [fp, #-4]
   11c70:	ldr	r2, [fp, #-16]
   11c74:	ldr	r3, [fp, #-12]
   11c78:	subs	r0, r0, r2
   11c7c:	sbc	r1, r1, r3
   11c80:	str	r0, [sp, #20]
   11c84:	str	r1, [sp, #16]
   11c88:	b	11ca0 <__assert_fail@plt+0xc94>
   11c8c:	mov	r0, #0
   11c90:	mov	r1, r0
   11c94:	str	r1, [sp, #20]
   11c98:	str	r0, [sp, #16]
   11c9c:	b	11ca0 <__assert_fail@plt+0xc94>
   11ca0:	ldr	r0, [sp, #16]
   11ca4:	ldr	r1, [sp, #20]
   11ca8:	str	r1, [fp, #-24]	; 0xffffffe8
   11cac:	str	r0, [fp, #-20]	; 0xffffffec
   11cb0:	movw	r0, #53600	; 0xd160
   11cb4:	movt	r0, #2
   11cb8:	ldr	r0, [r0]
   11cbc:	movw	r1, #53608	; 0xd168
   11cc0:	movt	r1, #2
   11cc4:	ldr	r1, [r1]
   11cc8:	cmp	r0, r1
   11ccc:	bne	11cf8 <__assert_fail@plt+0xcec>
   11cd0:	movw	r0, #53604	; 0xd164
   11cd4:	movt	r0, #2
   11cd8:	ldr	r0, [r0]
   11cdc:	movw	r1, #53608	; 0xd168
   11ce0:	movt	r1, #2
   11ce4:	movw	r2, #8
   11ce8:	bl	16448 <__assert_fail@plt+0x543c>
   11cec:	movw	r1, #53604	; 0xd164
   11cf0:	movt	r1, #2
   11cf4:	str	r0, [r1]
   11cf8:	ldr	r0, [fp, #-8]
   11cfc:	ldr	r1, [fp, #-4]
   11d00:	movw	r2, #53604	; 0xd164
   11d04:	movt	r2, #2
   11d08:	ldr	r2, [r2]
   11d0c:	movw	r3, #53600	; 0xd160
   11d10:	movt	r3, #2
   11d14:	ldr	ip, [r3]
   11d18:	add	lr, ip, #1
   11d1c:	str	lr, [r3]
   11d20:	str	r0, [r2, ip, lsl #3]!
   11d24:	str	r1, [r2, #4]
   11d28:	movw	r0, #53968	; 0xd2d0
   11d2c:	movt	r0, #2
   11d30:	ldr	r0, [r0]
   11d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11d38:	ldr	r2, [fp, #-20]	; 0xffffffec
   11d3c:	subs	r0, r0, r1
   11d40:	rscs	r1, r2, #0
   11d44:	str	r0, [sp, #12]
   11d48:	str	r1, [sp, #8]
   11d4c:	bcs	11d98 <__assert_fail@plt+0xd8c>
   11d50:	b	11d54 <__assert_fail@plt+0xd48>
   11d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d58:	cmp	r0, #0
   11d5c:	beq	11d88 <__assert_fail@plt+0xd7c>
   11d60:	b	11d64 <__assert_fail@plt+0xd58>
   11d64:	movw	r0, #47496	; 0xb988
   11d68:	movt	r0, #1
   11d6c:	bl	10f1c <gettext@plt>
   11d70:	movw	lr, #1
   11d74:	str	r0, [sp, #4]
   11d78:	mov	r0, lr
   11d7c:	movw	r1, #0
   11d80:	ldr	r2, [sp, #4]
   11d84:	bl	10ebc <error@plt>
   11d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d8c:	movw	r1, #53968	; 0xd2d0
   11d90:	movt	r1, #2
   11d94:	str	r0, [r1]
   11d98:	mov	sp, fp
   11d9c:	pop	{fp, pc}
   11da0:	push	{fp, lr}
   11da4:	mov	fp, sp
   11da8:	sub	sp, sp, #96	; 0x60
   11dac:	str	r0, [fp, #-4]
   11db0:	mov	r0, #0
   11db4:	strb	r0, [fp, #-5]
   11db8:	str	r0, [fp, #-12]
   11dbc:	str	r0, [fp, #-16]
   11dc0:	movw	r0, #0
   11dc4:	strb	r0, [fp, #-17]	; 0xffffffef
   11dc8:	strb	r0, [fp, #-18]	; 0xffffffee
   11dcc:	movw	r0, #0
   11dd0:	str	r0, [fp, #-24]	; 0xffffffe8
   11dd4:	movw	r0, #1
   11dd8:	strb	r0, [fp, #-25]	; 0xffffffe7
   11ddc:	ldr	r0, [fp, #-4]
   11de0:	ldrsb	r0, [r0]
   11de4:	cmp	r0, #0
   11de8:	beq	12190 <__assert_fail@plt+0x1184>
   11dec:	ldr	r0, [fp, #-4]
   11df0:	ldrb	r0, [r0]
   11df4:	cmp	r0, #44	; 0x2c
   11df8:	beq	11e38 <__assert_fail@plt+0xe2c>
   11dfc:	bl	10f04 <__ctype_b_loc@plt>
   11e00:	ldr	r0, [r0]
   11e04:	ldr	lr, [fp, #-4]
   11e08:	ldrb	lr, [lr]
   11e0c:	str	r0, [fp, #-40]	; 0xffffffd8
   11e10:	mov	r0, lr
   11e14:	bl	12258 <__assert_fail@plt+0x124c>
   11e18:	mov	lr, r0
   11e1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11e20:	add	r0, r1, r0, lsl #1
   11e24:	ldrh	r0, [r0]
   11e28:	and	r0, r0, #1
   11e2c:	cmp	r0, #0
   11e30:	str	lr, [fp, #-44]	; 0xffffffd4
   11e34:	beq	11ec4 <__assert_fail@plt+0xeb8>
   11e38:	ldrb	r0, [fp, #-5]
   11e3c:	tst	r0, #1
   11e40:	beq	11eb8 <__assert_fail@plt+0xeac>
   11e44:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11e48:	tst	r0, #1
   11e4c:	beq	11e74 <__assert_fail@plt+0xe68>
   11e50:	ldr	r0, [fp, #-16]
   11e54:	ldr	r1, [fp, #-12]
   11e58:	bl	1226c <__assert_fail@plt+0x1260>
   11e5c:	tst	r0, #1
   11e60:	bne	11e70 <__assert_fail@plt+0xe64>
   11e64:	movw	r0, #0
   11e68:	strb	r0, [fp, #-25]	; 0xffffffe7
   11e6c:	b	12190 <__assert_fail@plt+0x1184>
   11e70:	b	11eb4 <__assert_fail@plt+0xea8>
   11e74:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11e78:	tst	r0, #1
   11e7c:	beq	11ea4 <__assert_fail@plt+0xe98>
   11e80:	ldr	r0, [fp, #-16]
   11e84:	ldr	r1, [fp, #-12]
   11e88:	bl	122fc <__assert_fail@plt+0x12f0>
   11e8c:	tst	r0, #1
   11e90:	bne	11ea0 <__assert_fail@plt+0xe94>
   11e94:	movw	r0, #0
   11e98:	strb	r0, [fp, #-25]	; 0xffffffe7
   11e9c:	b	12190 <__assert_fail@plt+0x1184>
   11ea0:	b	11eb0 <__assert_fail@plt+0xea4>
   11ea4:	ldr	r0, [fp, #-16]
   11ea8:	ldr	r1, [fp, #-12]
   11eac:	bl	11bc4 <__assert_fail@plt+0xbb8>
   11eb0:	b	11eb4 <__assert_fail@plt+0xea8>
   11eb4:	b	11eb8 <__assert_fail@plt+0xeac>
   11eb8:	movw	r0, #0
   11ebc:	strb	r0, [fp, #-5]
   11ec0:	b	1217c <__assert_fail@plt+0x1170>
   11ec4:	ldr	r0, [fp, #-4]
   11ec8:	ldrb	r0, [r0]
   11ecc:	cmp	r0, #47	; 0x2f
   11ed0:	bne	11f34 <__assert_fail@plt+0xf28>
   11ed4:	ldrb	r0, [fp, #-5]
   11ed8:	tst	r0, #1
   11edc:	beq	11f20 <__assert_fail@plt+0xf14>
   11ee0:	movw	r0, #47519	; 0xb99f
   11ee4:	movt	r0, #1
   11ee8:	bl	10f1c <gettext@plt>
   11eec:	ldr	lr, [fp, #-4]
   11ef0:	str	r0, [sp, #48]	; 0x30
   11ef4:	mov	r0, lr
   11ef8:	bl	15820 <__assert_fail@plt+0x4814>
   11efc:	movw	lr, #0
   11f00:	str	r0, [sp, #44]	; 0x2c
   11f04:	mov	r0, lr
   11f08:	mov	r1, lr
   11f0c:	ldr	r2, [sp, #48]	; 0x30
   11f10:	ldr	r3, [sp, #44]	; 0x2c
   11f14:	bl	10ebc <error@plt>
   11f18:	movw	r0, #0
   11f1c:	strb	r0, [fp, #-25]	; 0xffffffe7
   11f20:	movw	r0, #1
   11f24:	strb	r0, [fp, #-17]	; 0xffffffef
   11f28:	movw	r0, #0
   11f2c:	strb	r0, [fp, #-18]	; 0xffffffee
   11f30:	b	12178 <__assert_fail@plt+0x116c>
   11f34:	ldr	r0, [fp, #-4]
   11f38:	ldrb	r0, [r0]
   11f3c:	cmp	r0, #43	; 0x2b
   11f40:	bne	11fa4 <__assert_fail@plt+0xf98>
   11f44:	ldrb	r0, [fp, #-5]
   11f48:	tst	r0, #1
   11f4c:	beq	11f90 <__assert_fail@plt+0xf84>
   11f50:	movw	r0, #47560	; 0xb9c8
   11f54:	movt	r0, #1
   11f58:	bl	10f1c <gettext@plt>
   11f5c:	ldr	lr, [fp, #-4]
   11f60:	str	r0, [sp, #40]	; 0x28
   11f64:	mov	r0, lr
   11f68:	bl	15820 <__assert_fail@plt+0x4814>
   11f6c:	movw	lr, #0
   11f70:	str	r0, [sp, #36]	; 0x24
   11f74:	mov	r0, lr
   11f78:	mov	r1, lr
   11f7c:	ldr	r2, [sp, #40]	; 0x28
   11f80:	ldr	r3, [sp, #36]	; 0x24
   11f84:	bl	10ebc <error@plt>
   11f88:	movw	r0, #0
   11f8c:	strb	r0, [fp, #-25]	; 0xffffffe7
   11f90:	movw	r0, #1
   11f94:	strb	r0, [fp, #-18]	; 0xffffffee
   11f98:	movw	r0, #0
   11f9c:	strb	r0, [fp, #-17]	; 0xffffffef
   11fa0:	b	12174 <__assert_fail@plt+0x1168>
   11fa4:	ldr	r0, [fp, #-4]
   11fa8:	ldrb	r0, [r0]
   11fac:	sub	r0, r0, #48	; 0x30
   11fb0:	cmp	r0, #9
   11fb4:	bhi	1212c <__assert_fail@plt+0x1120>
   11fb8:	ldrb	r0, [fp, #-5]
   11fbc:	tst	r0, #1
   11fc0:	bne	11fe0 <__assert_fail@plt+0xfd4>
   11fc4:	mov	r0, #0
   11fc8:	str	r0, [fp, #-12]
   11fcc:	str	r0, [fp, #-16]
   11fd0:	movw	r0, #1
   11fd4:	strb	r0, [fp, #-5]
   11fd8:	ldr	r0, [fp, #-4]
   11fdc:	str	r0, [fp, #-24]	; 0xffffffe8
   11fe0:	ldr	r0, [fp, #-16]
   11fe4:	ldr	r1, [fp, #-12]
   11fe8:	movw	r2, #39321	; 0x9999
   11fec:	movt	r2, #39321	; 0x9999
   11ff0:	subs	r0, r2, r0
   11ff4:	movw	r2, #39321	; 0x9999
   11ff8:	movt	r2, #6553	; 0x1999
   11ffc:	sbcs	r1, r2, r1
   12000:	str	r0, [sp, #32]
   12004:	str	r1, [sp, #28]
   12008:	bcc	12054 <__assert_fail@plt+0x1048>
   1200c:	b	12010 <__assert_fail@plt+0x1004>
   12010:	ldr	r0, [fp, #-16]
   12014:	ldr	r1, [fp, #-12]
   12018:	mov	r2, #10
   1201c:	umull	r2, r3, r0, r2
   12020:	add	ip, r1, r1, lsl #2
   12024:	add	r3, r3, ip, lsl #1
   12028:	ldr	ip, [fp, #-4]
   1202c:	ldrb	ip, [ip]
   12030:	sub	ip, ip, #48	; 0x30
   12034:	adds	r2, r2, ip
   12038:	adc	r3, r3, ip, asr #31
   1203c:	subs	r0, r2, r0
   12040:	sbcs	r1, r3, r1
   12044:	str	r0, [sp, #24]
   12048:	str	r1, [sp, #20]
   1204c:	bcs	12060 <__assert_fail@plt+0x1054>
   12050:	b	12054 <__assert_fail@plt+0x1048>
   12054:	movw	r0, #0
   12058:	str	r0, [sp, #16]
   1205c:	b	1209c <__assert_fail@plt+0x1090>
   12060:	ldr	r0, [fp, #-16]
   12064:	ldr	r1, [fp, #-12]
   12068:	mov	r2, #10
   1206c:	umull	r0, r2, r0, r2
   12070:	add	r1, r1, r1, lsl #2
   12074:	add	r1, r2, r1, lsl #1
   12078:	ldr	r2, [fp, #-4]
   1207c:	ldrb	r2, [r2]
   12080:	sub	r2, r2, #48	; 0x30
   12084:	adds	r0, r0, r2
   12088:	adc	r1, r1, r2, asr #31
   1208c:	str	r0, [fp, #-16]
   12090:	str	r1, [fp, #-12]
   12094:	movw	r0, #1
   12098:	str	r0, [sp, #16]
   1209c:	ldr	r0, [sp, #16]
   120a0:	cmp	r0, #0
   120a4:	bne	12128 <__assert_fail@plt+0x111c>
   120a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120ac:	movw	r1, #47601	; 0xb9f1
   120b0:	movt	r1, #1
   120b4:	bl	11000 <strspn@plt>
   120b8:	str	r0, [fp, #-32]	; 0xffffffe0
   120bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   120c4:	bl	18fb8 <__assert_fail@plt+0x7fac>
   120c8:	str	r0, [fp, #-36]	; 0xffffffdc
   120cc:	movw	r0, #47612	; 0xb9fc
   120d0:	movt	r0, #1
   120d4:	bl	10f1c <gettext@plt>
   120d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   120dc:	str	r0, [sp, #12]
   120e0:	mov	r0, r1
   120e4:	bl	15820 <__assert_fail@plt+0x4814>
   120e8:	movw	r1, #0
   120ec:	str	r0, [sp, #8]
   120f0:	mov	r0, r1
   120f4:	ldr	r2, [sp, #12]
   120f8:	ldr	r3, [sp, #8]
   120fc:	bl	10ebc <error@plt>
   12100:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12104:	bl	13078 <__assert_fail@plt+0x206c>
   12108:	movw	r0, #0
   1210c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12114:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12118:	add	r0, r0, r1
   1211c:	mvn	r1, #0
   12120:	add	r0, r0, r1
   12124:	str	r0, [fp, #-4]
   12128:	b	12170 <__assert_fail@plt+0x1164>
   1212c:	movw	r0, #47637	; 0xba15
   12130:	movt	r0, #1
   12134:	bl	10f1c <gettext@plt>
   12138:	ldr	lr, [fp, #-4]
   1213c:	str	r0, [sp, #4]
   12140:	mov	r0, lr
   12144:	bl	15820 <__assert_fail@plt+0x4814>
   12148:	movw	lr, #0
   1214c:	str	r0, [sp]
   12150:	mov	r0, lr
   12154:	mov	r1, lr
   12158:	ldr	r2, [sp, #4]
   1215c:	ldr	r3, [sp]
   12160:	bl	10ebc <error@plt>
   12164:	movw	r0, #0
   12168:	strb	r0, [fp, #-25]	; 0xffffffe7
   1216c:	b	12190 <__assert_fail@plt+0x1184>
   12170:	b	12174 <__assert_fail@plt+0x1168>
   12174:	b	12178 <__assert_fail@plt+0x116c>
   12178:	b	1217c <__assert_fail@plt+0x1170>
   1217c:	b	12180 <__assert_fail@plt+0x1174>
   12180:	ldr	r0, [fp, #-4]
   12184:	add	r0, r0, #1
   12188:	str	r0, [fp, #-4]
   1218c:	b	11ddc <__assert_fail@plt+0xdd0>
   12190:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12194:	tst	r0, #1
   12198:	beq	1223c <__assert_fail@plt+0x1230>
   1219c:	ldrb	r0, [fp, #-5]
   121a0:	tst	r0, #1
   121a4:	beq	1223c <__assert_fail@plt+0x1230>
   121a8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   121ac:	tst	r0, #1
   121b0:	beq	121e8 <__assert_fail@plt+0x11dc>
   121b4:	ldr	r0, [fp, #-16]
   121b8:	ldr	r1, [fp, #-12]
   121bc:	bl	1226c <__assert_fail@plt+0x1260>
   121c0:	and	r0, r0, #1
   121c4:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   121c8:	and	r1, r1, #1
   121cc:	and	r0, r1, r0
   121d0:	cmp	r0, #0
   121d4:	movw	r0, #0
   121d8:	movne	r0, #1
   121dc:	and	r0, r0, #1
   121e0:	strb	r0, [fp, #-25]	; 0xffffffe7
   121e4:	b	12238 <__assert_fail@plt+0x122c>
   121e8:	ldrb	r0, [fp, #-18]	; 0xffffffee
   121ec:	tst	r0, #1
   121f0:	beq	12228 <__assert_fail@plt+0x121c>
   121f4:	ldr	r0, [fp, #-16]
   121f8:	ldr	r1, [fp, #-12]
   121fc:	bl	122fc <__assert_fail@plt+0x12f0>
   12200:	and	r0, r0, #1
   12204:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   12208:	and	r1, r1, #1
   1220c:	and	r0, r1, r0
   12210:	cmp	r0, #0
   12214:	movw	r0, #0
   12218:	movne	r0, #1
   1221c:	and	r0, r0, #1
   12220:	strb	r0, [fp, #-25]	; 0xffffffe7
   12224:	b	12234 <__assert_fail@plt+0x1228>
   12228:	ldr	r0, [fp, #-16]
   1222c:	ldr	r1, [fp, #-12]
   12230:	bl	11bc4 <__assert_fail@plt+0xbb8>
   12234:	b	12238 <__assert_fail@plt+0x122c>
   12238:	b	1223c <__assert_fail@plt+0x1230>
   1223c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12240:	tst	r0, #1
   12244:	bne	12250 <__assert_fail@plt+0x1244>
   12248:	movw	r0, #1
   1224c:	bl	10f10 <exit@plt>
   12250:	mov	sp, fp
   12254:	pop	{fp, pc}
   12258:	sub	sp, sp, #4
   1225c:	strb	r0, [sp, #3]
   12260:	ldrb	r0, [sp, #3]
   12264:	add	sp, sp, #4
   12268:	bx	lr
   1226c:	push	{fp, lr}
   12270:	mov	fp, sp
   12274:	sub	sp, sp, #16
   12278:	str	r0, [sp, #8]
   1227c:	str	r1, [sp, #12]
   12280:	mov	r0, #1
   12284:	strb	r0, [sp, #7]
   12288:	movw	r0, #53616	; 0xd170
   1228c:	movt	r0, #2
   12290:	ldr	r1, [r0]
   12294:	ldr	r0, [r0, #4]
   12298:	orr	r0, r1, r0
   1229c:	cmp	r0, #0
   122a0:	beq	122d4 <__assert_fail@plt+0x12c8>
   122a4:	b	122a8 <__assert_fail@plt+0x129c>
   122a8:	movw	r0, #48162	; 0xbc22
   122ac:	movt	r0, #1
   122b0:	bl	10f1c <gettext@plt>
   122b4:	movw	lr, #0
   122b8:	str	r0, [sp]
   122bc:	mov	r0, lr
   122c0:	mov	r1, lr
   122c4:	ldr	r2, [sp]
   122c8:	bl	10ebc <error@plt>
   122cc:	movw	r0, #0
   122d0:	strb	r0, [sp, #7]
   122d4:	ldr	r0, [sp, #8]
   122d8:	ldr	r1, [sp, #12]
   122dc:	movw	r2, #53616	; 0xd170
   122e0:	movt	r2, #2
   122e4:	str	r1, [r2, #4]
   122e8:	str	r0, [r2]
   122ec:	ldrb	r0, [sp, #7]
   122f0:	and	r0, r0, #1
   122f4:	mov	sp, fp
   122f8:	pop	{fp, pc}
   122fc:	push	{fp, lr}
   12300:	mov	fp, sp
   12304:	sub	sp, sp, #16
   12308:	str	r0, [sp, #8]
   1230c:	str	r1, [sp, #12]
   12310:	mov	r0, #1
   12314:	strb	r0, [sp, #7]
   12318:	movw	r0, #53624	; 0xd178
   1231c:	movt	r0, #2
   12320:	ldr	r1, [r0]
   12324:	ldr	r0, [r0, #4]
   12328:	orr	r0, r1, r0
   1232c:	cmp	r0, #0
   12330:	beq	12364 <__assert_fail@plt+0x1358>
   12334:	b	12338 <__assert_fail@plt+0x132c>
   12338:	movw	r0, #48209	; 0xbc51
   1233c:	movt	r0, #1
   12340:	bl	10f1c <gettext@plt>
   12344:	movw	lr, #0
   12348:	str	r0, [sp]
   1234c:	mov	r0, lr
   12350:	mov	r1, lr
   12354:	ldr	r2, [sp]
   12358:	bl	10ebc <error@plt>
   1235c:	movw	r0, #0
   12360:	strb	r0, [sp, #7]
   12364:	ldr	r0, [sp, #8]
   12368:	ldr	r1, [sp, #12]
   1236c:	movw	r2, #53624	; 0xd178
   12370:	movt	r2, #2
   12374:	str	r1, [r2, #4]
   12378:	str	r0, [r2]
   1237c:	ldrb	r0, [sp, #7]
   12380:	and	r0, r0, #1
   12384:	mov	sp, fp
   12388:	pop	{fp, pc}
   1238c:	push	{fp, lr}
   12390:	mov	fp, sp
   12394:	sub	sp, sp, #24
   12398:	movw	r0, #53604	; 0xd164
   1239c:	movt	r0, #2
   123a0:	ldr	r0, [r0]
   123a4:	movw	r1, #53600	; 0xd160
   123a8:	movt	r1, #2
   123ac:	ldr	r1, [r1]
   123b0:	bl	12534 <__assert_fail@plt+0x1528>
   123b4:	movw	r0, #53600	; 0xd160
   123b8:	movt	r0, #2
   123bc:	ldr	r0, [r0]
   123c0:	cmp	r0, #0
   123c4:	bne	12498 <__assert_fail@plt+0x148c>
   123c8:	movw	r0, #53616	; 0xd170
   123cc:	movt	r0, #2
   123d0:	ldr	r1, [r0]
   123d4:	ldr	r0, [r0, #4]
   123d8:	orr	r0, r1, r0
   123dc:	cmp	r0, #0
   123e0:	beq	12404 <__assert_fail@plt+0x13f8>
   123e4:	b	123e8 <__assert_fail@plt+0x13dc>
   123e8:	movw	r0, #53616	; 0xd170
   123ec:	movt	r0, #2
   123f0:	ldr	r1, [r0]
   123f4:	ldr	r0, [r0, #4]
   123f8:	str	r1, [fp, #-4]
   123fc:	str	r0, [fp, #-8]
   12400:	b	12468 <__assert_fail@plt+0x145c>
   12404:	movw	r0, #53624	; 0xd178
   12408:	movt	r0, #2
   1240c:	ldr	r1, [r0]
   12410:	ldr	r0, [r0, #4]
   12414:	orr	r0, r1, r0
   12418:	cmp	r0, #0
   1241c:	beq	12440 <__assert_fail@plt+0x1434>
   12420:	b	12424 <__assert_fail@plt+0x1418>
   12424:	movw	r0, #53624	; 0xd178
   12428:	movt	r0, #2
   1242c:	ldr	r1, [r0]
   12430:	ldr	r0, [r0, #4]
   12434:	str	r1, [sp, #12]
   12438:	str	r0, [sp, #8]
   1243c:	b	12454 <__assert_fail@plt+0x1448>
   12440:	mov	r0, #0
   12444:	mov	r1, #8
   12448:	str	r1, [sp, #12]
   1244c:	str	r0, [sp, #8]
   12450:	b	12454 <__assert_fail@plt+0x1448>
   12454:	ldr	r0, [sp, #8]
   12458:	ldr	r1, [sp, #12]
   1245c:	str	r1, [fp, #-4]
   12460:	str	r0, [fp, #-8]
   12464:	b	12468 <__assert_fail@plt+0x145c>
   12468:	ldr	r0, [fp, #-8]
   1246c:	ldr	r1, [fp, #-4]
   12470:	movw	r2, #53968	; 0xd2d0
   12474:	movt	r2, #2
   12478:	str	r1, [r2]
   1247c:	movw	r2, #53632	; 0xd180
   12480:	movt	r2, #2
   12484:	mov	r3, #0
   12488:	str	r3, [r2, #4]
   1248c:	str	r1, [r2]
   12490:	str	r0, [sp, #4]
   12494:	b	1252c <__assert_fail@plt+0x1520>
   12498:	movw	r0, #53600	; 0xd160
   1249c:	movt	r0, #2
   124a0:	ldr	r0, [r0]
   124a4:	cmp	r0, #1
   124a8:	bne	12514 <__assert_fail@plt+0x1508>
   124ac:	movw	r0, #53616	; 0xd170
   124b0:	movt	r0, #2
   124b4:	ldr	r1, [r0]
   124b8:	ldr	r0, [r0, #4]
   124bc:	orr	r0, r1, r0
   124c0:	cmp	r0, #0
   124c4:	bne	12514 <__assert_fail@plt+0x1508>
   124c8:	b	124cc <__assert_fail@plt+0x14c0>
   124cc:	movw	r0, #53624	; 0xd178
   124d0:	movt	r0, #2
   124d4:	ldr	r1, [r0]
   124d8:	ldr	r0, [r0, #4]
   124dc:	orr	r0, r1, r0
   124e0:	cmp	r0, #0
   124e4:	bne	12514 <__assert_fail@plt+0x1508>
   124e8:	b	124ec <__assert_fail@plt+0x14e0>
   124ec:	movw	r0, #53604	; 0xd164
   124f0:	movt	r0, #2
   124f4:	ldr	r0, [r0]
   124f8:	ldr	r1, [r0]
   124fc:	ldr	r0, [r0, #4]
   12500:	movw	r2, #53632	; 0xd180
   12504:	movt	r2, #2
   12508:	str	r0, [r2, #4]
   1250c:	str	r1, [r2]
   12510:	b	12528 <__assert_fail@plt+0x151c>
   12514:	movw	r0, #53632	; 0xd180
   12518:	movt	r0, #2
   1251c:	mov	r1, #0
   12520:	str	r1, [r0, #4]
   12524:	str	r1, [r0]
   12528:	b	1252c <__assert_fail@plt+0x1520>
   1252c:	mov	sp, fp
   12530:	pop	{fp, pc}
   12534:	push	{fp, lr}
   12538:	mov	fp, sp
   1253c:	sub	sp, sp, #40	; 0x28
   12540:	str	r0, [fp, #-4]
   12544:	str	r1, [fp, #-8]
   12548:	mov	r0, #0
   1254c:	str	r0, [fp, #-12]
   12550:	str	r0, [fp, #-16]
   12554:	movw	r0, #0
   12558:	str	r0, [sp, #20]
   1255c:	ldr	r0, [sp, #20]
   12560:	ldr	r1, [fp, #-8]
   12564:	cmp	r0, r1
   12568:	bcs	1262c <__assert_fail@plt+0x1620>
   1256c:	ldr	r0, [fp, #-4]
   12570:	ldr	r1, [sp, #20]
   12574:	ldr	r1, [r0, r1, lsl #3]!
   12578:	ldr	r0, [r0, #4]
   1257c:	orr	r0, r1, r0
   12580:	cmp	r0, #0
   12584:	bne	125b0 <__assert_fail@plt+0x15a4>
   12588:	b	1258c <__assert_fail@plt+0x1580>
   1258c:	movw	r0, #48256	; 0xbc80
   12590:	movt	r0, #1
   12594:	bl	10f1c <gettext@plt>
   12598:	movw	lr, #1
   1259c:	str	r0, [sp, #16]
   125a0:	mov	r0, lr
   125a4:	movw	r1, #0
   125a8:	ldr	r2, [sp, #16]
   125ac:	bl	10ebc <error@plt>
   125b0:	ldr	r0, [fp, #-4]
   125b4:	ldr	r1, [sp, #20]
   125b8:	ldr	r1, [r0, r1, lsl #3]!
   125bc:	ldr	r0, [r0, #4]
   125c0:	ldr	r2, [fp, #-16]
   125c4:	ldr	r3, [fp, #-12]
   125c8:	subs	r1, r2, r1
   125cc:	sbcs	r0, r3, r0
   125d0:	str	r1, [sp, #12]
   125d4:	str	r0, [sp, #8]
   125d8:	bcc	12604 <__assert_fail@plt+0x15f8>
   125dc:	b	125e0 <__assert_fail@plt+0x15d4>
   125e0:	movw	r0, #48277	; 0xbc95
   125e4:	movt	r0, #1
   125e8:	bl	10f1c <gettext@plt>
   125ec:	movw	lr, #1
   125f0:	str	r0, [sp, #4]
   125f4:	mov	r0, lr
   125f8:	movw	r1, #0
   125fc:	ldr	r2, [sp, #4]
   12600:	bl	10ebc <error@plt>
   12604:	ldr	r0, [fp, #-4]
   12608:	ldr	r1, [sp, #20]
   1260c:	ldr	r1, [r0, r1, lsl #3]!
   12610:	ldr	r0, [r0, #4]
   12614:	str	r0, [fp, #-12]
   12618:	str	r1, [fp, #-16]
   1261c:	ldr	r0, [sp, #20]
   12620:	add	r0, r0, #1
   12624:	str	r0, [sp, #20]
   12628:	b	1255c <__assert_fail@plt+0x1550>
   1262c:	movw	r0, #53624	; 0xd178
   12630:	movt	r0, #2
   12634:	ldr	r1, [r0]
   12638:	ldr	r0, [r0, #4]
   1263c:	orr	r0, r1, r0
   12640:	cmp	r0, #0
   12644:	beq	12690 <__assert_fail@plt+0x1684>
   12648:	b	1264c <__assert_fail@plt+0x1640>
   1264c:	movw	r0, #53616	; 0xd170
   12650:	movt	r0, #2
   12654:	ldr	r1, [r0]
   12658:	ldr	r0, [r0, #4]
   1265c:	orr	r0, r1, r0
   12660:	cmp	r0, #0
   12664:	beq	12690 <__assert_fail@plt+0x1684>
   12668:	b	1266c <__assert_fail@plt+0x1660>
   1266c:	movw	r0, #48305	; 0xbcb1
   12670:	movt	r0, #1
   12674:	bl	10f1c <gettext@plt>
   12678:	movw	lr, #1
   1267c:	str	r0, [sp]
   12680:	mov	r0, lr
   12684:	movw	r1, #0
   12688:	ldr	r2, [sp]
   1268c:	bl	10ebc <error@plt>
   12690:	mov	sp, fp
   12694:	pop	{fp, pc}
   12698:	push	{r4, r5, fp, lr}
   1269c:	add	fp, sp, #8
   126a0:	sub	sp, sp, #120	; 0x78
   126a4:	str	r0, [fp, #-24]	; 0xffffffe8
   126a8:	str	r1, [fp, #-20]	; 0xffffffec
   126ac:	str	r2, [fp, #-28]	; 0xffffffe4
   126b0:	str	r3, [fp, #-32]	; 0xffffffe0
   126b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   126b8:	mov	r1, #0
   126bc:	strb	r1, [r0]
   126c0:	movw	r0, #53632	; 0xd180
   126c4:	movt	r0, #2
   126c8:	ldr	r1, [r0]
   126cc:	ldr	r0, [r0, #4]
   126d0:	orr	r0, r1, r0
   126d4:	cmp	r0, #0
   126d8:	beq	1274c <__assert_fail@plt+0x1740>
   126dc:	b	126e0 <__assert_fail@plt+0x16d4>
   126e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   126e8:	movw	r2, #53632	; 0xd180
   126ec:	movt	r2, #2
   126f0:	ldr	r3, [r2]
   126f4:	ldr	r2, [r2, #4]
   126f8:	str	r0, [fp, #-52]	; 0xffffffcc
   126fc:	str	r1, [fp, #-56]	; 0xffffffc8
   12700:	str	r2, [fp, #-60]	; 0xffffffc4
   12704:	mov	r2, r3
   12708:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1270c:	str	r3, [sp, #64]	; 0x40
   12710:	mov	r3, ip
   12714:	bl	1b34c <__assert_fail@plt+0xa340>
   12718:	ldr	ip, [sp, #64]	; 0x40
   1271c:	subs	r2, ip, r2
   12720:	ldr	lr, [fp, #-60]	; 0xffffffc4
   12724:	sbc	r3, lr, r3
   12728:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1272c:	adds	r2, r4, r2
   12730:	ldr	r5, [fp, #-56]	; 0xffffffc8
   12734:	adc	r3, r5, r3
   12738:	str	r2, [fp, #-16]
   1273c:	str	r3, [fp, #-12]
   12740:	str	r0, [sp, #60]	; 0x3c
   12744:	str	r1, [sp, #56]	; 0x38
   12748:	b	12958 <__assert_fail@plt+0x194c>
   1274c:	b	12750 <__assert_fail@plt+0x1744>
   12750:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12754:	ldr	r0, [r0]
   12758:	movw	r1, #53600	; 0xd160
   1275c:	movt	r1, #2
   12760:	ldr	r1, [r1]
   12764:	cmp	r0, r1
   12768:	bcs	127e4 <__assert_fail@plt+0x17d8>
   1276c:	movw	r0, #53604	; 0xd164
   12770:	movt	r0, #2
   12774:	ldr	r0, [r0]
   12778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1277c:	ldr	r1, [r1]
   12780:	ldr	r1, [r0, r1, lsl #3]!
   12784:	ldr	r0, [r0, #4]
   12788:	str	r0, [fp, #-36]	; 0xffffffdc
   1278c:	str	r1, [fp, #-40]	; 0xffffffd8
   12790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12794:	ldr	r1, [fp, #-20]	; 0xffffffec
   12798:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1279c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   127a0:	subs	r0, r0, r2
   127a4:	sbcs	r1, r1, r3
   127a8:	str	r0, [sp, #52]	; 0x34
   127ac:	str	r1, [sp, #48]	; 0x30
   127b0:	bcs	127cc <__assert_fail@plt+0x17c0>
   127b4:	b	127b8 <__assert_fail@plt+0x17ac>
   127b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   127bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   127c0:	str	r1, [fp, #-12]
   127c4:	str	r0, [fp, #-16]
   127c8:	b	12958 <__assert_fail@plt+0x194c>
   127cc:	b	127d0 <__assert_fail@plt+0x17c4>
   127d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   127d4:	ldr	r1, [r0]
   127d8:	add	r1, r1, #1
   127dc:	str	r1, [r0]
   127e0:	b	12750 <__assert_fail@plt+0x1744>
   127e4:	movw	r0, #53616	; 0xd170
   127e8:	movt	r0, #2
   127ec:	ldr	r1, [r0]
   127f0:	ldr	r0, [r0, #4]
   127f4:	orr	r0, r1, r0
   127f8:	cmp	r0, #0
   127fc:	beq	12870 <__assert_fail@plt+0x1864>
   12800:	b	12804 <__assert_fail@plt+0x17f8>
   12804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12808:	ldr	r1, [fp, #-20]	; 0xffffffec
   1280c:	movw	r2, #53616	; 0xd170
   12810:	movt	r2, #2
   12814:	ldr	r3, [r2]
   12818:	ldr	r2, [r2, #4]
   1281c:	str	r0, [sp, #44]	; 0x2c
   12820:	str	r1, [sp, #40]	; 0x28
   12824:	str	r2, [sp, #36]	; 0x24
   12828:	mov	r2, r3
   1282c:	ldr	ip, [sp, #36]	; 0x24
   12830:	str	r3, [sp, #32]
   12834:	mov	r3, ip
   12838:	bl	1b34c <__assert_fail@plt+0xa340>
   1283c:	ldr	ip, [sp, #32]
   12840:	subs	r2, ip, r2
   12844:	ldr	lr, [sp, #36]	; 0x24
   12848:	sbc	r3, lr, r3
   1284c:	ldr	r4, [sp, #44]	; 0x2c
   12850:	adds	r2, r4, r2
   12854:	ldr	r5, [sp, #40]	; 0x28
   12858:	adc	r3, r5, r3
   1285c:	str	r2, [fp, #-16]
   12860:	str	r3, [fp, #-12]
   12864:	str	r0, [sp, #28]
   12868:	str	r1, [sp, #24]
   1286c:	b	12958 <__assert_fail@plt+0x194c>
   12870:	movw	r0, #53624	; 0xd178
   12874:	movt	r0, #2
   12878:	ldr	r1, [r0]
   1287c:	ldr	r0, [r0, #4]
   12880:	orr	r0, r1, r0
   12884:	cmp	r0, #0
   12888:	beq	12940 <__assert_fail@plt+0x1934>
   1288c:	b	12890 <__assert_fail@plt+0x1884>
   12890:	movw	r0, #53604	; 0xd164
   12894:	movt	r0, #2
   12898:	ldr	r0, [r0]
   1289c:	movw	r1, #53600	; 0xd160
   128a0:	movt	r1, #2
   128a4:	ldr	r1, [r1]
   128a8:	add	r0, r0, r1, lsl #3
   128ac:	ldr	r1, [r0, #-8]
   128b0:	ldr	r0, [r0, #-4]
   128b4:	str	r0, [fp, #-44]	; 0xffffffd4
   128b8:	str	r1, [fp, #-48]	; 0xffffffd0
   128bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   128c4:	movw	r2, #53624	; 0xd178
   128c8:	movt	r2, #2
   128cc:	ldr	r3, [r2]
   128d0:	ldr	r2, [r2, #4]
   128d4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   128d8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   128dc:	subs	ip, r0, ip
   128e0:	sbc	lr, r1, lr
   128e4:	str	r0, [sp, #20]
   128e8:	mov	r0, ip
   128ec:	str	r1, [sp, #16]
   128f0:	mov	r1, lr
   128f4:	str	r2, [sp, #12]
   128f8:	mov	r2, r3
   128fc:	ldr	ip, [sp, #12]
   12900:	str	r3, [sp, #8]
   12904:	mov	r3, ip
   12908:	bl	1b34c <__assert_fail@plt+0xa340>
   1290c:	ldr	ip, [sp, #8]
   12910:	subs	r2, ip, r2
   12914:	ldr	lr, [sp, #12]
   12918:	sbc	r3, lr, r3
   1291c:	ldr	r4, [sp, #20]
   12920:	adds	r2, r4, r2
   12924:	ldr	r5, [sp, #16]
   12928:	adc	r3, r5, r3
   1292c:	str	r2, [fp, #-16]
   12930:	str	r3, [fp, #-12]
   12934:	str	r0, [sp, #4]
   12938:	str	r1, [sp]
   1293c:	b	12958 <__assert_fail@plt+0x194c>
   12940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12944:	mov	r1, #1
   12948:	strb	r1, [r0]
   1294c:	mov	r0, #0
   12950:	str	r0, [fp, #-12]
   12954:	str	r0, [fp, #-16]
   12958:	ldr	r0, [fp, #-16]
   1295c:	ldr	r1, [fp, #-12]
   12960:	sub	sp, fp, #8
   12964:	pop	{r4, r5, fp, pc}
   12968:	sub	sp, sp, #4
   1296c:	str	r0, [sp]
   12970:	movw	r0, #53640	; 0xd188
   12974:	movt	r0, #2
   12978:	movw	r1, #0
   1297c:	strb	r1, [r0]
   12980:	ldr	r0, [sp]
   12984:	movw	r1, #0
   12988:	cmp	r0, r1
   1298c:	bne	129a8 <__assert_fail@plt+0x199c>
   12990:	movw	r0, #53644	; 0xd18c
   12994:	movt	r0, #2
   12998:	movw	r1, #53472	; 0xd0e0
   1299c:	movt	r1, #2
   129a0:	str	r1, [r0]
   129a4:	b	129b8 <__assert_fail@plt+0x19ac>
   129a8:	ldr	r0, [sp]
   129ac:	movw	r1, #53644	; 0xd18c
   129b0:	movt	r1, #2
   129b4:	str	r0, [r1]
   129b8:	add	sp, sp, #4
   129bc:	bx	lr
   129c0:	push	{fp, lr}
   129c4:	mov	fp, sp
   129c8:	sub	sp, sp, #32
   129cc:	str	r0, [fp, #-8]
   129d0:	ldr	r0, [fp, #-8]
   129d4:	movw	r1, #0
   129d8:	cmp	r0, r1
   129dc:	beq	12af0 <__assert_fail@plt+0x1ae4>
   129e0:	movw	r0, #53648	; 0xd190
   129e4:	movt	r0, #2
   129e8:	ldr	r0, [r0]
   129ec:	movw	r1, #0
   129f0:	cmp	r0, r1
   129f4:	beq	129fc <__assert_fail@plt+0x19f0>
   129f8:	b	12a1c <__assert_fail@plt+0x1a10>
   129fc:	movw	r0, #47680	; 0xba40
   12a00:	movt	r0, #1
   12a04:	movw	r1, #47690	; 0xba4a
   12a08:	movt	r1, #1
   12a0c:	movw	r2, #340	; 0x154
   12a10:	movw	r3, #47710	; 0xba5e
   12a14:	movt	r3, #1
   12a18:	bl	1100c <__assert_fail@plt>
   12a1c:	bl	10f40 <__errno_location@plt>
   12a20:	ldr	r0, [r0]
   12a24:	str	r0, [sp, #16]
   12a28:	ldr	r0, [fp, #-8]
   12a2c:	bl	10ea4 <ferror_unlocked@plt>
   12a30:	cmp	r0, #0
   12a34:	bne	12a40 <__assert_fail@plt+0x1a34>
   12a38:	movw	r0, #0
   12a3c:	str	r0, [sp, #16]
   12a40:	movw	r0, #53648	; 0xd190
   12a44:	movt	r0, #2
   12a48:	ldr	r0, [r0]
   12a4c:	movw	r1, #48438	; 0xbd36
   12a50:	movt	r1, #1
   12a54:	bl	10de4 <strcmp@plt>
   12a58:	cmp	r0, #0
   12a5c:	bne	12a6c <__assert_fail@plt+0x1a60>
   12a60:	ldr	r0, [fp, #-8]
   12a64:	bl	10fac <clearerr_unlocked@plt>
   12a68:	b	12a8c <__assert_fail@plt+0x1a80>
   12a6c:	ldr	r0, [fp, #-8]
   12a70:	bl	12edc <__assert_fail@plt+0x1ed0>
   12a74:	cmp	r0, #0
   12a78:	beq	12a88 <__assert_fail@plt+0x1a7c>
   12a7c:	bl	10f40 <__errno_location@plt>
   12a80:	ldr	r0, [r0]
   12a84:	str	r0, [sp, #16]
   12a88:	b	12a8c <__assert_fail@plt+0x1a80>
   12a8c:	ldr	r0, [sp, #16]
   12a90:	cmp	r0, #0
   12a94:	beq	12aec <__assert_fail@plt+0x1ae0>
   12a98:	ldr	r1, [sp, #16]
   12a9c:	movw	r0, #53648	; 0xd190
   12aa0:	movt	r0, #2
   12aa4:	ldr	r2, [r0]
   12aa8:	movw	r0, #0
   12aac:	movw	r3, #3
   12ab0:	str	r1, [sp, #12]
   12ab4:	mov	r1, r3
   12ab8:	bl	155dc <__assert_fail@plt+0x45d0>
   12abc:	movw	r1, #0
   12ac0:	str	r0, [sp, #8]
   12ac4:	mov	r0, r1
   12ac8:	ldr	r1, [sp, #12]
   12acc:	movw	r2, #47677	; 0xba3d
   12ad0:	movt	r2, #1
   12ad4:	ldr	r3, [sp, #8]
   12ad8:	bl	10ebc <error@plt>
   12adc:	movw	r0, #53596	; 0xd15c
   12ae0:	movt	r0, #2
   12ae4:	movw	r1, #1
   12ae8:	str	r1, [r0]
   12aec:	b	12af0 <__assert_fail@plt+0x1ae4>
   12af0:	b	12af4 <__assert_fail@plt+0x1ae8>
   12af4:	movw	r0, #53644	; 0xd18c
   12af8:	movt	r0, #2
   12afc:	ldr	r1, [r0]
   12b00:	add	r2, r1, #4
   12b04:	str	r2, [r0]
   12b08:	ldr	r0, [r1]
   12b0c:	str	r0, [fp, #-12]
   12b10:	movw	r1, #0
   12b14:	cmp	r0, r1
   12b18:	beq	12bf8 <__assert_fail@plt+0x1bec>
   12b1c:	ldr	r0, [fp, #-12]
   12b20:	movw	r1, #48438	; 0xbd36
   12b24:	movt	r1, #1
   12b28:	bl	10de4 <strcmp@plt>
   12b2c:	cmp	r0, #0
   12b30:	bne	12b58 <__assert_fail@plt+0x1b4c>
   12b34:	movw	r0, #53640	; 0xd188
   12b38:	movt	r0, #2
   12b3c:	movw	r1, #1
   12b40:	strb	r1, [r0]
   12b44:	movw	r0, #53576	; 0xd148
   12b48:	movt	r0, #2
   12b4c:	ldr	r0, [r0]
   12b50:	str	r0, [fp, #-8]
   12b54:	b	12b6c <__assert_fail@plt+0x1b60>
   12b58:	ldr	r0, [fp, #-12]
   12b5c:	movw	r1, #47319	; 0xb8d7
   12b60:	movt	r1, #1
   12b64:	bl	10fb8 <fopen64@plt>
   12b68:	str	r0, [fp, #-8]
   12b6c:	ldr	r0, [fp, #-8]
   12b70:	movw	r1, #0
   12b74:	cmp	r0, r1
   12b78:	beq	12ba4 <__assert_fail@plt+0x1b98>
   12b7c:	ldr	r0, [fp, #-12]
   12b80:	movw	r1, #53648	; 0xd190
   12b84:	movt	r1, #2
   12b88:	str	r0, [r1]
   12b8c:	ldr	r0, [fp, #-8]
   12b90:	movw	r1, #2
   12b94:	bl	12e84 <__assert_fail@plt+0x1e78>
   12b98:	ldr	r0, [fp, #-8]
   12b9c:	str	r0, [fp, #-4]
   12ba0:	b	12c00 <__assert_fail@plt+0x1bf4>
   12ba4:	bl	10f40 <__errno_location@plt>
   12ba8:	ldr	r1, [r0]
   12bac:	ldr	r2, [fp, #-12]
   12bb0:	movw	r0, #0
   12bb4:	movw	lr, #3
   12bb8:	str	r1, [sp, #4]
   12bbc:	mov	r1, lr
   12bc0:	bl	155dc <__assert_fail@plt+0x45d0>
   12bc4:	movw	r1, #0
   12bc8:	str	r0, [sp]
   12bcc:	mov	r0, r1
   12bd0:	ldr	r1, [sp, #4]
   12bd4:	movw	r2, #47677	; 0xba3d
   12bd8:	movt	r2, #1
   12bdc:	ldr	r3, [sp]
   12be0:	bl	10ebc <error@plt>
   12be4:	movw	r0, #53596	; 0xd15c
   12be8:	movt	r0, #2
   12bec:	movw	r1, #1
   12bf0:	str	r1, [r0]
   12bf4:	b	12af4 <__assert_fail@plt+0x1ae8>
   12bf8:	movw	r0, #0
   12bfc:	str	r0, [fp, #-4]
   12c00:	ldr	r0, [fp, #-4]
   12c04:	mov	sp, fp
   12c08:	pop	{fp, pc}
   12c0c:	push	{fp, lr}
   12c10:	mov	fp, sp
   12c14:	movw	r0, #53640	; 0xd188
   12c18:	movt	r0, #2
   12c1c:	ldrb	r0, [r0]
   12c20:	tst	r0, #1
   12c24:	beq	12c58 <__assert_fail@plt+0x1c4c>
   12c28:	movw	r0, #53576	; 0xd148
   12c2c:	movt	r0, #2
   12c30:	ldr	r0, [r0]
   12c34:	bl	12edc <__assert_fail@plt+0x1ed0>
   12c38:	cmp	r0, #0
   12c3c:	beq	12c58 <__assert_fail@plt+0x1c4c>
   12c40:	bl	10f40 <__errno_location@plt>
   12c44:	ldr	r1, [r0]
   12c48:	movw	r0, #1
   12c4c:	movw	r2, #48438	; 0xbd36
   12c50:	movt	r2, #1
   12c54:	bl	10ebc <error@plt>
   12c58:	pop	{fp, pc}
   12c5c:	push	{fp, lr}
   12c60:	mov	fp, sp
   12c64:	sub	sp, sp, #8
   12c68:	movw	r0, #47734	; 0xba76
   12c6c:	movt	r0, #1
   12c70:	bl	10f1c <gettext@plt>
   12c74:	movw	lr, #53580	; 0xd14c
   12c78:	movt	lr, #2
   12c7c:	ldr	r1, [lr]
   12c80:	bl	10dcc <fputs_unlocked@plt>
   12c84:	movw	r1, #47797	; 0xbab5
   12c88:	movt	r1, #1
   12c8c:	str	r0, [sp, #4]
   12c90:	mov	r0, r1
   12c94:	bl	10f1c <gettext@plt>
   12c98:	movw	r1, #53580	; 0xd14c
   12c9c:	movt	r1, #2
   12ca0:	ldr	r1, [r1]
   12ca4:	bl	10dcc <fputs_unlocked@plt>
   12ca8:	str	r0, [sp]
   12cac:	mov	sp, fp
   12cb0:	pop	{fp, pc}
   12cb4:	sub	sp, sp, #4
   12cb8:	str	r0, [sp]
   12cbc:	ldr	r0, [sp]
   12cc0:	movw	r1, #53652	; 0xd194
   12cc4:	movt	r1, #2
   12cc8:	str	r0, [r1]
   12ccc:	add	sp, sp, #4
   12cd0:	bx	lr
   12cd4:	sub	sp, sp, #4
   12cd8:	and	r0, r0, #1
   12cdc:	strb	r0, [sp, #3]
   12ce0:	ldrb	r0, [sp, #3]
   12ce4:	and	r0, r0, #1
   12ce8:	movw	r1, #53656	; 0xd198
   12cec:	movt	r1, #2
   12cf0:	strb	r0, [r1]
   12cf4:	add	sp, sp, #4
   12cf8:	bx	lr
   12cfc:	push	{fp, lr}
   12d00:	mov	fp, sp
   12d04:	sub	sp, sp, #24
   12d08:	movw	r0, #53580	; 0xd14c
   12d0c:	movt	r0, #2
   12d10:	ldr	r0, [r0]
   12d14:	bl	19300 <__assert_fail@plt+0x82f4>
   12d18:	cmp	r0, #0
   12d1c:	beq	12dec <__assert_fail@plt+0x1de0>
   12d20:	movw	r0, #53656	; 0xd198
   12d24:	movt	r0, #2
   12d28:	ldrb	r0, [r0]
   12d2c:	tst	r0, #1
   12d30:	beq	12d44 <__assert_fail@plt+0x1d38>
   12d34:	bl	10f40 <__errno_location@plt>
   12d38:	ldr	r0, [r0]
   12d3c:	cmp	r0, #32
   12d40:	beq	12dec <__assert_fail@plt+0x1de0>
   12d44:	movw	r0, #47309	; 0xb8cd
   12d48:	movt	r0, #1
   12d4c:	bl	10f1c <gettext@plt>
   12d50:	str	r0, [fp, #-4]
   12d54:	movw	r0, #53652	; 0xd194
   12d58:	movt	r0, #2
   12d5c:	ldr	r0, [r0]
   12d60:	movw	lr, #0
   12d64:	cmp	r0, lr
   12d68:	beq	12dc0 <__assert_fail@plt+0x1db4>
   12d6c:	bl	10f40 <__errno_location@plt>
   12d70:	ldr	r1, [r0]
   12d74:	movw	r0, #53652	; 0xd194
   12d78:	movt	r0, #2
   12d7c:	ldr	r0, [r0]
   12d80:	str	r1, [fp, #-8]
   12d84:	bl	15584 <__assert_fail@plt+0x4578>
   12d88:	ldr	r1, [fp, #-4]
   12d8c:	movw	lr, #0
   12d90:	str	r0, [sp, #12]
   12d94:	mov	r0, lr
   12d98:	ldr	lr, [fp, #-8]
   12d9c:	str	r1, [sp, #8]
   12da0:	mov	r1, lr
   12da4:	movw	r2, #48365	; 0xbced
   12da8:	movt	r2, #1
   12dac:	ldr	r3, [sp, #12]
   12db0:	ldr	ip, [sp, #8]
   12db4:	str	ip, [sp]
   12db8:	bl	10ebc <error@plt>
   12dbc:	b	12ddc <__assert_fail@plt+0x1dd0>
   12dc0:	bl	10f40 <__errno_location@plt>
   12dc4:	ldr	r1, [r0]
   12dc8:	ldr	r3, [fp, #-4]
   12dcc:	movw	r0, #0
   12dd0:	movw	r2, #47677	; 0xba3d
   12dd4:	movt	r2, #1
   12dd8:	bl	10ebc <error@plt>
   12ddc:	movw	r0, #53484	; 0xd0ec
   12de0:	movt	r0, #2
   12de4:	ldr	r0, [r0]
   12de8:	bl	10e20 <_exit@plt>
   12dec:	movw	r0, #53568	; 0xd140
   12df0:	movt	r0, #2
   12df4:	ldr	r0, [r0]
   12df8:	bl	19300 <__assert_fail@plt+0x82f4>
   12dfc:	cmp	r0, #0
   12e00:	beq	12e14 <__assert_fail@plt+0x1e08>
   12e04:	movw	r0, #53484	; 0xd0ec
   12e08:	movt	r0, #2
   12e0c:	ldr	r0, [r0]
   12e10:	bl	10e20 <_exit@plt>
   12e14:	mov	sp, fp
   12e18:	pop	{fp, pc}
   12e1c:	push	{r4, r5, fp, lr}
   12e20:	add	fp, sp, #8
   12e24:	sub	sp, sp, #48	; 0x30
   12e28:	ldr	r1, [fp, #12]
   12e2c:	ldr	ip, [fp, #8]
   12e30:	ldr	lr, [fp, #16]
   12e34:	str	r0, [fp, #-12]
   12e38:	str	r3, [fp, #-20]	; 0xffffffec
   12e3c:	str	r2, [fp, #-24]	; 0xffffffe8
   12e40:	str	r1, [sp, #28]
   12e44:	str	ip, [sp, #24]
   12e48:	ldr	r0, [fp, #-12]
   12e4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e54:	ldr	r1, [sp, #24]
   12e58:	ldr	ip, [sp, #28]
   12e5c:	ldr	r4, [fp, #16]
   12e60:	mov	r5, sp
   12e64:	str	r4, [r5, #8]
   12e68:	str	ip, [r5, #4]
   12e6c:	str	r1, [r5]
   12e70:	str	lr, [sp, #20]
   12e74:	bl	10df0 <posix_fadvise64@plt>
   12e78:	str	r0, [sp, #16]
   12e7c:	sub	sp, fp, #8
   12e80:	pop	{r4, r5, fp, pc}
   12e84:	push	{fp, lr}
   12e88:	mov	fp, sp
   12e8c:	sub	sp, sp, #24
   12e90:	str	r0, [fp, #-4]
   12e94:	str	r1, [fp, #-8]
   12e98:	ldr	r0, [fp, #-4]
   12e9c:	movw	r1, #0
   12ea0:	cmp	r0, r1
   12ea4:	beq	12ed4 <__assert_fail@plt+0x1ec8>
   12ea8:	ldr	r0, [fp, #-4]
   12eac:	bl	10f64 <fileno@plt>
   12eb0:	ldr	lr, [fp, #-8]
   12eb4:	mov	r1, sp
   12eb8:	str	lr, [r1, #8]
   12ebc:	mov	lr, #0
   12ec0:	str	lr, [r1, #4]
   12ec4:	str	lr, [r1]
   12ec8:	mov	r2, lr
   12ecc:	mov	r3, lr
   12ed0:	bl	12e1c <__assert_fail@plt+0x1e10>
   12ed4:	mov	sp, fp
   12ed8:	pop	{fp, pc}
   12edc:	push	{fp, lr}
   12ee0:	mov	fp, sp
   12ee4:	sub	sp, sp, #32
   12ee8:	str	r0, [fp, #-8]
   12eec:	movw	r0, #0
   12ef0:	str	r0, [fp, #-12]
   12ef4:	str	r0, [sp, #12]
   12ef8:	ldr	r0, [fp, #-8]
   12efc:	bl	10f64 <fileno@plt>
   12f00:	str	r0, [sp, #16]
   12f04:	ldr	r0, [sp, #16]
   12f08:	cmp	r0, #0
   12f0c:	bge	12f20 <__assert_fail@plt+0x1f14>
   12f10:	ldr	r0, [fp, #-8]
   12f14:	bl	10f70 <fclose@plt>
   12f18:	str	r0, [fp, #-4]
   12f1c:	b	12fbc <__assert_fail@plt+0x1fb0>
   12f20:	ldr	r0, [fp, #-8]
   12f24:	bl	10ee0 <__freading@plt>
   12f28:	cmp	r0, #0
   12f2c:	beq	12f64 <__assert_fail@plt+0x1f58>
   12f30:	ldr	r0, [fp, #-8]
   12f34:	bl	10f64 <fileno@plt>
   12f38:	mov	lr, sp
   12f3c:	mov	r1, #1
   12f40:	str	r1, [lr]
   12f44:	mov	r1, #0
   12f48:	mov	r2, r1
   12f4c:	mov	r3, r1
   12f50:	bl	10e80 <lseek64@plt>
   12f54:	and	r0, r0, r1
   12f58:	cmn	r0, #1
   12f5c:	beq	12f80 <__assert_fail@plt+0x1f74>
   12f60:	b	12f64 <__assert_fail@plt+0x1f58>
   12f64:	ldr	r0, [fp, #-8]
   12f68:	bl	12fc8 <__assert_fail@plt+0x1fbc>
   12f6c:	cmp	r0, #0
   12f70:	beq	12f80 <__assert_fail@plt+0x1f74>
   12f74:	bl	10f40 <__errno_location@plt>
   12f78:	ldr	r0, [r0]
   12f7c:	str	r0, [fp, #-12]
   12f80:	ldr	r0, [fp, #-8]
   12f84:	bl	10f70 <fclose@plt>
   12f88:	str	r0, [sp, #12]
   12f8c:	ldr	r0, [fp, #-12]
   12f90:	cmp	r0, #0
   12f94:	beq	12fb4 <__assert_fail@plt+0x1fa8>
   12f98:	ldr	r0, [fp, #-12]
   12f9c:	str	r0, [sp, #8]
   12fa0:	bl	10f40 <__errno_location@plt>
   12fa4:	ldr	lr, [sp, #8]
   12fa8:	str	lr, [r0]
   12fac:	mvn	r0, #0
   12fb0:	str	r0, [sp, #12]
   12fb4:	ldr	r0, [sp, #12]
   12fb8:	str	r0, [fp, #-4]
   12fbc:	ldr	r0, [fp, #-4]
   12fc0:	mov	sp, fp
   12fc4:	pop	{fp, pc}
   12fc8:	push	{fp, lr}
   12fcc:	mov	fp, sp
   12fd0:	sub	sp, sp, #8
   12fd4:	str	r0, [sp]
   12fd8:	ldr	r0, [sp]
   12fdc:	movw	r1, #0
   12fe0:	cmp	r0, r1
   12fe4:	beq	12ff8 <__assert_fail@plt+0x1fec>
   12fe8:	ldr	r0, [sp]
   12fec:	bl	10ee0 <__freading@plt>
   12ff0:	cmp	r0, #0
   12ff4:	bne	13008 <__assert_fail@plt+0x1ffc>
   12ff8:	ldr	r0, [sp]
   12ffc:	bl	10e08 <fflush@plt>
   13000:	str	r0, [sp, #4]
   13004:	b	1301c <__assert_fail@plt+0x2010>
   13008:	ldr	r0, [sp]
   1300c:	bl	13028 <__assert_fail@plt+0x201c>
   13010:	ldr	r0, [sp]
   13014:	bl	10e08 <fflush@plt>
   13018:	str	r0, [sp, #4]
   1301c:	ldr	r0, [sp, #4]
   13020:	mov	sp, fp
   13024:	pop	{fp, pc}
   13028:	push	{fp, lr}
   1302c:	mov	fp, sp
   13030:	sub	sp, sp, #16
   13034:	str	r0, [fp, #-4]
   13038:	ldr	r0, [fp, #-4]
   1303c:	ldr	r0, [r0]
   13040:	and	r0, r0, #256	; 0x100
   13044:	cmp	r0, #0
   13048:	beq	13070 <__assert_fail@plt+0x2064>
   1304c:	ldr	r0, [fp, #-4]
   13050:	mov	r1, sp
   13054:	mov	r2, #1
   13058:	str	r2, [r1]
   1305c:	mov	r1, #0
   13060:	mov	r2, r1
   13064:	mov	r3, r1
   13068:	bl	130b8 <__assert_fail@plt+0x20ac>
   1306c:	str	r0, [sp, #8]
   13070:	mov	sp, fp
   13074:	pop	{fp, pc}
   13078:	push	{fp, lr}
   1307c:	mov	fp, sp
   13080:	sub	sp, sp, #16
   13084:	str	r0, [fp, #-4]
   13088:	bl	10f40 <__errno_location@plt>
   1308c:	ldr	r0, [r0]
   13090:	str	r0, [sp, #8]
   13094:	ldr	r0, [fp, #-4]
   13098:	bl	10e14 <free@plt>
   1309c:	ldr	r0, [sp, #8]
   130a0:	str	r0, [sp, #4]
   130a4:	bl	10f40 <__errno_location@plt>
   130a8:	ldr	lr, [sp, #4]
   130ac:	str	lr, [r0]
   130b0:	mov	sp, fp
   130b4:	pop	{fp, pc}
   130b8:	push	{fp, lr}
   130bc:	mov	fp, sp
   130c0:	sub	sp, sp, #32
   130c4:	ldr	r1, [fp, #8]
   130c8:	str	r0, [fp, #-8]
   130cc:	str	r3, [sp, #20]
   130d0:	str	r2, [sp, #16]
   130d4:	ldr	r0, [fp, #-8]
   130d8:	ldr	r0, [r0, #8]
   130dc:	ldr	r2, [fp, #-8]
   130e0:	ldr	r2, [r2, #4]
   130e4:	cmp	r0, r2
   130e8:	str	r1, [sp, #4]
   130ec:	bne	13198 <__assert_fail@plt+0x218c>
   130f0:	ldr	r0, [fp, #-8]
   130f4:	ldr	r0, [r0, #20]
   130f8:	ldr	r1, [fp, #-8]
   130fc:	ldr	r1, [r1, #16]
   13100:	cmp	r0, r1
   13104:	bne	13198 <__assert_fail@plt+0x218c>
   13108:	ldr	r0, [fp, #-8]
   1310c:	ldr	r0, [r0, #36]	; 0x24
   13110:	movw	r1, #0
   13114:	cmp	r0, r1
   13118:	bne	13198 <__assert_fail@plt+0x218c>
   1311c:	ldr	r0, [fp, #-8]
   13120:	bl	10f64 <fileno@plt>
   13124:	ldr	r2, [sp, #16]
   13128:	ldr	r3, [sp, #20]
   1312c:	ldr	lr, [fp, #8]
   13130:	mov	r1, sp
   13134:	str	lr, [r1]
   13138:	bl	10e80 <lseek64@plt>
   1313c:	str	r1, [sp, #12]
   13140:	str	r0, [sp, #8]
   13144:	ldr	r0, [sp, #8]
   13148:	ldr	r1, [sp, #12]
   1314c:	and	r0, r0, r1
   13150:	cmn	r0, #1
   13154:	bne	13168 <__assert_fail@plt+0x215c>
   13158:	b	1315c <__assert_fail@plt+0x2150>
   1315c:	mvn	r0, #0
   13160:	str	r0, [fp, #-4]
   13164:	b	131b8 <__assert_fail@plt+0x21ac>
   13168:	ldr	r0, [fp, #-8]
   1316c:	ldr	r1, [r0]
   13170:	bic	r1, r1, #16
   13174:	str	r1, [r0]
   13178:	ldr	r0, [sp, #8]
   1317c:	ldr	r1, [sp, #12]
   13180:	ldr	r2, [fp, #-8]
   13184:	str	r1, [r2, #84]	; 0x54
   13188:	str	r0, [r2, #80]	; 0x50
   1318c:	movw	r0, #0
   13190:	str	r0, [fp, #-4]
   13194:	b	131b8 <__assert_fail@plt+0x21ac>
   13198:	ldr	r0, [fp, #-8]
   1319c:	ldr	r2, [sp, #16]
   131a0:	ldr	r3, [sp, #20]
   131a4:	ldr	r1, [fp, #8]
   131a8:	mov	ip, sp
   131ac:	str	r1, [ip]
   131b0:	bl	10f7c <fseeko64@plt>
   131b4:	str	r0, [fp, #-4]
   131b8:	ldr	r0, [fp, #-4]
   131bc:	mov	sp, fp
   131c0:	pop	{fp, pc}
   131c4:	push	{fp, lr}
   131c8:	mov	fp, sp
   131cc:	sub	sp, sp, #24
   131d0:	str	r0, [fp, #-4]
   131d4:	ldr	r0, [fp, #-4]
   131d8:	movw	r1, #0
   131dc:	cmp	r0, r1
   131e0:	bne	13204 <__assert_fail@plt+0x21f8>
   131e4:	movw	r0, #53568	; 0xd140
   131e8:	movt	r0, #2
   131ec:	ldr	r1, [r0]
   131f0:	movw	r0, #48372	; 0xbcf4
   131f4:	movt	r0, #1
   131f8:	bl	10fd0 <fputs@plt>
   131fc:	str	r0, [sp, #8]
   13200:	bl	10fe8 <abort@plt>
   13204:	ldr	r0, [fp, #-4]
   13208:	movw	r1, #47	; 0x2f
   1320c:	bl	10f94 <strrchr@plt>
   13210:	str	r0, [fp, #-8]
   13214:	ldr	r0, [fp, #-8]
   13218:	movw	r1, #0
   1321c:	cmp	r0, r1
   13220:	beq	13234 <__assert_fail@plt+0x2228>
   13224:	ldr	r0, [fp, #-8]
   13228:	add	r0, r0, #1
   1322c:	str	r0, [sp, #4]
   13230:	b	1323c <__assert_fail@plt+0x2230>
   13234:	ldr	r0, [fp, #-4]
   13238:	str	r0, [sp, #4]
   1323c:	ldr	r0, [sp, #4]
   13240:	str	r0, [sp, #12]
   13244:	ldr	r0, [sp, #12]
   13248:	ldr	r1, [fp, #-4]
   1324c:	sub	r0, r0, r1
   13250:	cmp	r0, #7
   13254:	blt	132c0 <__assert_fail@plt+0x22b4>
   13258:	ldr	r0, [sp, #12]
   1325c:	mvn	r1, #6
   13260:	add	r0, r0, r1
   13264:	movw	r1, #48428	; 0xbd2c
   13268:	movt	r1, #1
   1326c:	movw	r2, #7
   13270:	bl	10fdc <strncmp@plt>
   13274:	cmp	r0, #0
   13278:	bne	132c0 <__assert_fail@plt+0x22b4>
   1327c:	ldr	r0, [sp, #12]
   13280:	str	r0, [fp, #-4]
   13284:	ldr	r0, [sp, #12]
   13288:	movw	r1, #48436	; 0xbd34
   1328c:	movt	r1, #1
   13290:	movw	r2, #3
   13294:	bl	10fdc <strncmp@plt>
   13298:	cmp	r0, #0
   1329c:	bne	132bc <__assert_fail@plt+0x22b0>
   132a0:	ldr	r0, [sp, #12]
   132a4:	add	r0, r0, #3
   132a8:	str	r0, [fp, #-4]
   132ac:	ldr	r0, [fp, #-4]
   132b0:	movw	r1, #53552	; 0xd130
   132b4:	movt	r1, #2
   132b8:	str	r0, [r1]
   132bc:	b	132c0 <__assert_fail@plt+0x22b4>
   132c0:	ldr	r0, [fp, #-4]
   132c4:	movw	r1, #53660	; 0xd19c
   132c8:	movt	r1, #2
   132cc:	str	r0, [r1]
   132d0:	ldr	r0, [fp, #-4]
   132d4:	movw	r1, #53556	; 0xd134
   132d8:	movt	r1, #2
   132dc:	str	r0, [r1]
   132e0:	mov	sp, fp
   132e4:	pop	{fp, pc}
   132e8:	push	{fp, lr}
   132ec:	mov	fp, sp
   132f0:	sub	sp, sp, #24
   132f4:	str	r0, [fp, #-4]
   132f8:	bl	10f40 <__errno_location@plt>
   132fc:	ldr	r0, [r0]
   13300:	str	r0, [fp, #-8]
   13304:	ldr	r0, [fp, #-4]
   13308:	movw	lr, #0
   1330c:	cmp	r0, lr
   13310:	beq	13320 <__assert_fail@plt+0x2314>
   13314:	ldr	r0, [fp, #-4]
   13318:	str	r0, [sp, #8]
   1331c:	b	13330 <__assert_fail@plt+0x2324>
   13320:	movw	r0, #53664	; 0xd1a0
   13324:	movt	r0, #2
   13328:	str	r0, [sp, #8]
   1332c:	b	13330 <__assert_fail@plt+0x2324>
   13330:	ldr	r0, [sp, #8]
   13334:	movw	r1, #48	; 0x30
   13338:	bl	18f48 <__assert_fail@plt+0x7f3c>
   1333c:	str	r0, [sp, #12]
   13340:	ldr	r0, [fp, #-8]
   13344:	str	r0, [sp, #4]
   13348:	bl	10f40 <__errno_location@plt>
   1334c:	ldr	r1, [sp, #4]
   13350:	str	r1, [r0]
   13354:	ldr	r0, [sp, #12]
   13358:	mov	sp, fp
   1335c:	pop	{fp, pc}
   13360:	sub	sp, sp, #8
   13364:	str	r0, [sp, #4]
   13368:	ldr	r0, [sp, #4]
   1336c:	movw	r1, #0
   13370:	cmp	r0, r1
   13374:	beq	13384 <__assert_fail@plt+0x2378>
   13378:	ldr	r0, [sp, #4]
   1337c:	str	r0, [sp]
   13380:	b	13394 <__assert_fail@plt+0x2388>
   13384:	movw	r0, #53664	; 0xd1a0
   13388:	movt	r0, #2
   1338c:	str	r0, [sp]
   13390:	b	13394 <__assert_fail@plt+0x2388>
   13394:	ldr	r0, [sp]
   13398:	ldr	r0, [r0]
   1339c:	add	sp, sp, #8
   133a0:	bx	lr
   133a4:	sub	sp, sp, #16
   133a8:	str	r0, [sp, #12]
   133ac:	str	r1, [sp, #8]
   133b0:	ldr	r0, [sp, #8]
   133b4:	ldr	r1, [sp, #12]
   133b8:	movw	r2, #0
   133bc:	cmp	r1, r2
   133c0:	str	r0, [sp, #4]
   133c4:	beq	133d4 <__assert_fail@plt+0x23c8>
   133c8:	ldr	r0, [sp, #12]
   133cc:	str	r0, [sp]
   133d0:	b	133e4 <__assert_fail@plt+0x23d8>
   133d4:	movw	r0, #53664	; 0xd1a0
   133d8:	movt	r0, #2
   133dc:	str	r0, [sp]
   133e0:	b	133e4 <__assert_fail@plt+0x23d8>
   133e4:	ldr	r0, [sp]
   133e8:	ldr	r1, [sp, #4]
   133ec:	str	r1, [r0]
   133f0:	add	sp, sp, #16
   133f4:	bx	lr
   133f8:	sub	sp, sp, #32
   133fc:	str	r0, [sp, #28]
   13400:	strb	r1, [sp, #27]
   13404:	str	r2, [sp, #20]
   13408:	ldrb	r0, [sp, #27]
   1340c:	strb	r0, [sp, #19]
   13410:	ldr	r0, [sp, #28]
   13414:	movw	r1, #0
   13418:	cmp	r0, r1
   1341c:	beq	1342c <__assert_fail@plt+0x2420>
   13420:	ldr	r0, [sp, #28]
   13424:	str	r0, [sp]
   13428:	b	1343c <__assert_fail@plt+0x2430>
   1342c:	movw	r0, #53664	; 0xd1a0
   13430:	movt	r0, #2
   13434:	str	r0, [sp]
   13438:	b	1343c <__assert_fail@plt+0x2430>
   1343c:	ldr	r0, [sp]
   13440:	add	r0, r0, #8
   13444:	ldrb	r1, [sp, #19]
   13448:	lsr	r1, r1, #5
   1344c:	add	r0, r0, r1, lsl #2
   13450:	str	r0, [sp, #12]
   13454:	ldrb	r0, [sp, #19]
   13458:	and	r0, r0, #31
   1345c:	str	r0, [sp, #8]
   13460:	ldr	r0, [sp, #12]
   13464:	ldr	r0, [r0]
   13468:	ldr	r1, [sp, #8]
   1346c:	lsr	r0, r0, r1
   13470:	and	r0, r0, #1
   13474:	str	r0, [sp, #4]
   13478:	ldr	r0, [sp, #20]
   1347c:	and	r0, r0, #1
   13480:	ldr	r1, [sp, #4]
   13484:	eor	r0, r0, r1
   13488:	ldr	r1, [sp, #8]
   1348c:	lsl	r0, r0, r1
   13490:	ldr	r1, [sp, #12]
   13494:	ldr	r2, [r1]
   13498:	eor	r0, r2, r0
   1349c:	str	r0, [r1]
   134a0:	ldr	r0, [sp, #4]
   134a4:	add	sp, sp, #32
   134a8:	bx	lr
   134ac:	sub	sp, sp, #12
   134b0:	str	r0, [sp, #8]
   134b4:	str	r1, [sp, #4]
   134b8:	ldr	r0, [sp, #8]
   134bc:	movw	r1, #0
   134c0:	cmp	r0, r1
   134c4:	bne	134d4 <__assert_fail@plt+0x24c8>
   134c8:	movw	r0, #53664	; 0xd1a0
   134cc:	movt	r0, #2
   134d0:	str	r0, [sp, #8]
   134d4:	ldr	r0, [sp, #8]
   134d8:	ldr	r0, [r0, #4]
   134dc:	str	r0, [sp]
   134e0:	ldr	r0, [sp, #4]
   134e4:	ldr	r1, [sp, #8]
   134e8:	str	r0, [r1, #4]
   134ec:	ldr	r0, [sp]
   134f0:	add	sp, sp, #12
   134f4:	bx	lr
   134f8:	push	{fp, lr}
   134fc:	mov	fp, sp
   13500:	sub	sp, sp, #16
   13504:	str	r0, [fp, #-4]
   13508:	str	r1, [sp, #8]
   1350c:	str	r2, [sp, #4]
   13510:	ldr	r0, [fp, #-4]
   13514:	movw	r1, #0
   13518:	cmp	r0, r1
   1351c:	bne	1352c <__assert_fail@plt+0x2520>
   13520:	movw	r0, #53664	; 0xd1a0
   13524:	movt	r0, #2
   13528:	str	r0, [fp, #-4]
   1352c:	ldr	r0, [fp, #-4]
   13530:	movw	r1, #10
   13534:	str	r1, [r0]
   13538:	ldr	r0, [sp, #8]
   1353c:	movw	r1, #0
   13540:	cmp	r0, r1
   13544:	beq	13558 <__assert_fail@plt+0x254c>
   13548:	ldr	r0, [sp, #4]
   1354c:	movw	r1, #0
   13550:	cmp	r0, r1
   13554:	bne	1355c <__assert_fail@plt+0x2550>
   13558:	bl	10fe8 <abort@plt>
   1355c:	ldr	r0, [sp, #8]
   13560:	ldr	r1, [fp, #-4]
   13564:	str	r0, [r1, #40]	; 0x28
   13568:	ldr	r0, [sp, #4]
   1356c:	ldr	r1, [fp, #-4]
   13570:	str	r0, [r1, #44]	; 0x2c
   13574:	mov	sp, fp
   13578:	pop	{fp, pc}
   1357c:	push	{r4, r5, r6, sl, fp, lr}
   13580:	add	fp, sp, #16
   13584:	sub	sp, sp, #64	; 0x40
   13588:	ldr	ip, [fp, #8]
   1358c:	str	r0, [fp, #-20]	; 0xffffffec
   13590:	str	r1, [fp, #-24]	; 0xffffffe8
   13594:	str	r2, [fp, #-28]	; 0xffffffe4
   13598:	str	r3, [fp, #-32]	; 0xffffffe0
   1359c:	ldr	r0, [fp, #8]
   135a0:	movw	r1, #0
   135a4:	cmp	r0, r1
   135a8:	str	ip, [sp, #32]
   135ac:	beq	135bc <__assert_fail@plt+0x25b0>
   135b0:	ldr	r0, [fp, #8]
   135b4:	str	r0, [sp, #28]
   135b8:	b	135cc <__assert_fail@plt+0x25c0>
   135bc:	movw	r0, #53664	; 0xd1a0
   135c0:	movt	r0, #2
   135c4:	str	r0, [sp, #28]
   135c8:	b	135cc <__assert_fail@plt+0x25c0>
   135cc:	ldr	r0, [sp, #28]
   135d0:	str	r0, [fp, #-36]	; 0xffffffdc
   135d4:	bl	10f40 <__errno_location@plt>
   135d8:	ldr	r0, [r0]
   135dc:	str	r0, [sp, #40]	; 0x28
   135e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   135e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   135e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   135ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   135f0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   135f4:	ldr	lr, [lr]
   135f8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   135fc:	ldr	ip, [ip, #4]
   13600:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13604:	add	r4, r4, #8
   13608:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1360c:	ldr	r5, [r5, #40]	; 0x28
   13610:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13614:	ldr	r6, [r6, #44]	; 0x2c
   13618:	str	lr, [sp]
   1361c:	str	ip, [sp, #4]
   13620:	str	r4, [sp, #8]
   13624:	str	r5, [sp, #12]
   13628:	str	r6, [sp, #16]
   1362c:	bl	13654 <__assert_fail@plt+0x2648>
   13630:	str	r0, [sp, #36]	; 0x24
   13634:	ldr	r0, [sp, #40]	; 0x28
   13638:	str	r0, [sp, #24]
   1363c:	bl	10f40 <__errno_location@plt>
   13640:	ldr	r1, [sp, #24]
   13644:	str	r1, [r0]
   13648:	ldr	r0, [sp, #36]	; 0x24
   1364c:	sub	sp, fp, #16
   13650:	pop	{r4, r5, r6, sl, fp, pc}
   13654:	push	{r4, r5, r6, sl, fp, lr}
   13658:	add	fp, sp, #16
   1365c:	sub	sp, sp, #168	; 0xa8
   13660:	ldr	ip, [fp, #24]
   13664:	ldr	lr, [fp, #20]
   13668:	ldr	r4, [fp, #16]
   1366c:	ldr	r5, [fp, #12]
   13670:	ldr	r6, [fp, #8]
   13674:	str	r0, [fp, #-24]	; 0xffffffe8
   13678:	str	r1, [fp, #-28]	; 0xffffffe4
   1367c:	str	r2, [fp, #-32]	; 0xffffffe0
   13680:	str	r3, [fp, #-36]	; 0xffffffdc
   13684:	movw	r0, #0
   13688:	str	r0, [fp, #-44]	; 0xffffffd4
   1368c:	str	r0, [fp, #-48]	; 0xffffffd0
   13690:	str	r0, [fp, #-52]	; 0xffffffcc
   13694:	str	r0, [fp, #-56]	; 0xffffffc8
   13698:	movw	r0, #0
   1369c:	strb	r0, [fp, #-57]	; 0xffffffc7
   136a0:	str	r6, [sp, #80]	; 0x50
   136a4:	str	lr, [sp, #76]	; 0x4c
   136a8:	str	r4, [sp, #72]	; 0x48
   136ac:	str	r5, [sp, #68]	; 0x44
   136b0:	str	ip, [sp, #64]	; 0x40
   136b4:	bl	10e8c <__ctype_get_mb_cur_max@plt>
   136b8:	cmp	r0, #1
   136bc:	movw	r0, #0
   136c0:	moveq	r0, #1
   136c4:	and	r0, r0, #1
   136c8:	strb	r0, [fp, #-58]	; 0xffffffc6
   136cc:	ldr	r0, [fp, #12]
   136d0:	and	r0, r0, #2
   136d4:	cmp	r0, #0
   136d8:	movw	r0, #0
   136dc:	movne	r0, #1
   136e0:	and	r0, r0, #1
   136e4:	strb	r0, [fp, #-59]	; 0xffffffc5
   136e8:	movw	r0, #0
   136ec:	strb	r0, [fp, #-60]	; 0xffffffc4
   136f0:	strb	r0, [fp, #-61]	; 0xffffffc3
   136f4:	movw	r0, #1
   136f8:	strb	r0, [fp, #-62]	; 0xffffffc2
   136fc:	ldr	r0, [fp, #8]
   13700:	cmp	r0, #10
   13704:	str	r0, [sp, #60]	; 0x3c
   13708:	bhi	13930 <__assert_fail@plt+0x2924>
   1370c:	add	r0, pc, #8
   13710:	ldr	r1, [sp, #60]	; 0x3c
   13714:	ldr	r0, [r0, r1, lsl #2]
   13718:	mov	pc, r0
   1371c:	andeq	r3, r1, r4, lsr #18
   13720:	andeq	r3, r1, r0, lsr #17
   13724:	andeq	r3, r1, r0, asr #17
   13728:	muleq	r1, r8, r8
   1372c:	andeq	r3, r1, r8, lsr #17
   13730:	andeq	r3, r1, r8, asr r7
   13734:	andeq	r3, r1, r8, asr #14
   13738:			; <UNDEFINED> instruction: 0x000137bc
   1373c:	ldrdeq	r3, [r1], -r0
   13740:	ldrdeq	r3, [r1], -r0
   13744:	ldrdeq	r3, [r1], -r0
   13748:	movw	r0, #5
   1374c:	str	r0, [fp, #8]
   13750:	movw	r0, #1
   13754:	strb	r0, [fp, #-59]	; 0xffffffc5
   13758:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1375c:	tst	r0, #1
   13760:	bne	1379c <__assert_fail@plt+0x2790>
   13764:	b	13768 <__assert_fail@plt+0x275c>
   13768:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1376c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13770:	cmp	r0, r1
   13774:	bcs	1378c <__assert_fail@plt+0x2780>
   13778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1377c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13780:	add	r0, r0, r1
   13784:	movw	r1, #34	; 0x22
   13788:	strb	r1, [r0]
   1378c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13790:	add	r0, r0, #1
   13794:	str	r0, [fp, #-44]	; 0xffffffd4
   13798:	b	1379c <__assert_fail@plt+0x2790>
   1379c:	movw	r0, #1
   137a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   137a4:	movw	r0, #48516	; 0xbd84
   137a8:	movt	r0, #1
   137ac:	str	r0, [fp, #-52]	; 0xffffffcc
   137b0:	movw	r0, #1
   137b4:	str	r0, [fp, #-56]	; 0xffffffc8
   137b8:	b	13934 <__assert_fail@plt+0x2928>
   137bc:	movw	r0, #1
   137c0:	strb	r0, [fp, #-57]	; 0xffffffc7
   137c4:	movw	r0, #0
   137c8:	strb	r0, [fp, #-59]	; 0xffffffc5
   137cc:	b	13934 <__assert_fail@plt+0x2928>
   137d0:	ldr	r0, [fp, #8]
   137d4:	cmp	r0, #10
   137d8:	beq	13804 <__assert_fail@plt+0x27f8>
   137dc:	ldr	r1, [fp, #8]
   137e0:	movw	r0, #48518	; 0xbd86
   137e4:	movt	r0, #1
   137e8:	bl	15844 <__assert_fail@plt+0x4838>
   137ec:	str	r0, [fp, #20]
   137f0:	ldr	r1, [fp, #8]
   137f4:	movw	r0, #48348	; 0xbcdc
   137f8:	movt	r0, #1
   137fc:	bl	15844 <__assert_fail@plt+0x4838>
   13800:	str	r0, [fp, #24]
   13804:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13808:	tst	r0, #1
   1380c:	bne	13878 <__assert_fail@plt+0x286c>
   13810:	ldr	r0, [fp, #20]
   13814:	str	r0, [fp, #-52]	; 0xffffffcc
   13818:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1381c:	ldrsb	r0, [r0]
   13820:	cmp	r0, #0
   13824:	beq	13874 <__assert_fail@plt+0x2868>
   13828:	b	1382c <__assert_fail@plt+0x2820>
   1382c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13830:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13834:	cmp	r0, r1
   13838:	bcs	13854 <__assert_fail@plt+0x2848>
   1383c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13840:	ldrb	r0, [r0]
   13844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13848:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1384c:	add	r1, r1, r2
   13850:	strb	r0, [r1]
   13854:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13858:	add	r0, r0, #1
   1385c:	str	r0, [fp, #-44]	; 0xffffffd4
   13860:	b	13864 <__assert_fail@plt+0x2858>
   13864:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13868:	add	r0, r0, #1
   1386c:	str	r0, [fp, #-52]	; 0xffffffcc
   13870:	b	13818 <__assert_fail@plt+0x280c>
   13874:	b	13878 <__assert_fail@plt+0x286c>
   13878:	movw	r0, #1
   1387c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13880:	ldr	r0, [fp, #24]
   13884:	str	r0, [fp, #-52]	; 0xffffffcc
   13888:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1388c:	bl	10f28 <strlen@plt>
   13890:	str	r0, [fp, #-56]	; 0xffffffc8
   13894:	b	13934 <__assert_fail@plt+0x2928>
   13898:	movw	r0, #1
   1389c:	strb	r0, [fp, #-57]	; 0xffffffc7
   138a0:	movw	r0, #1
   138a4:	strb	r0, [fp, #-59]	; 0xffffffc5
   138a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   138ac:	tst	r0, #1
   138b0:	bne	138bc <__assert_fail@plt+0x28b0>
   138b4:	movw	r0, #1
   138b8:	strb	r0, [fp, #-57]	; 0xffffffc7
   138bc:	b	138c0 <__assert_fail@plt+0x28b4>
   138c0:	movw	r0, #2
   138c4:	str	r0, [fp, #8]
   138c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   138cc:	tst	r0, #1
   138d0:	bne	1390c <__assert_fail@plt+0x2900>
   138d4:	b	138d8 <__assert_fail@plt+0x28cc>
   138d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138e0:	cmp	r0, r1
   138e4:	bcs	138fc <__assert_fail@plt+0x28f0>
   138e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138f0:	add	r0, r0, r1
   138f4:	movw	r1, #39	; 0x27
   138f8:	strb	r1, [r0]
   138fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13900:	add	r0, r0, #1
   13904:	str	r0, [fp, #-44]	; 0xffffffd4
   13908:	b	1390c <__assert_fail@plt+0x2900>
   1390c:	movw	r0, #48348	; 0xbcdc
   13910:	movt	r0, #1
   13914:	str	r0, [fp, #-52]	; 0xffffffcc
   13918:	movw	r0, #1
   1391c:	str	r0, [fp, #-56]	; 0xffffffc8
   13920:	b	13934 <__assert_fail@plt+0x2928>
   13924:	movw	r0, #0
   13928:	strb	r0, [fp, #-59]	; 0xffffffc5
   1392c:	b	13934 <__assert_fail@plt+0x2928>
   13930:	bl	10fe8 <abort@plt>
   13934:	movw	r0, #0
   13938:	str	r0, [fp, #-40]	; 0xffffffd8
   1393c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13940:	cmn	r0, #1
   13944:	bne	13970 <__assert_fail@plt+0x2964>
   13948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1394c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13950:	add	r0, r0, r1
   13954:	ldrb	r0, [r0]
   13958:	cmp	r0, #0
   1395c:	movw	r0, #0
   13960:	moveq	r0, #1
   13964:	and	r0, r0, #1
   13968:	str	r0, [sp, #56]	; 0x38
   1396c:	b	1398c <__assert_fail@plt+0x2980>
   13970:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13974:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13978:	cmp	r0, r1
   1397c:	movw	r0, #0
   13980:	moveq	r0, #1
   13984:	and	r0, r0, #1
   13988:	str	r0, [sp, #56]	; 0x38
   1398c:	ldr	r0, [sp, #56]	; 0x38
   13990:	cmp	r0, #0
   13994:	movw	r0, #0
   13998:	movne	r0, #1
   1399c:	mvn	r1, #0
   139a0:	eor	r0, r0, r1
   139a4:	tst	r0, #1
   139a8:	beq	14b98 <__assert_fail@plt+0x3b8c>
   139ac:	movw	r0, #0
   139b0:	strb	r0, [fp, #-65]	; 0xffffffbf
   139b4:	strb	r0, [fp, #-66]	; 0xffffffbe
   139b8:	strb	r0, [fp, #-67]	; 0xffffffbd
   139bc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   139c0:	tst	r0, #1
   139c4:	beq	13a70 <__assert_fail@plt+0x2a64>
   139c8:	ldr	r0, [fp, #8]
   139cc:	cmp	r0, #2
   139d0:	beq	13a70 <__assert_fail@plt+0x2a64>
   139d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   139d8:	cmp	r0, #0
   139dc:	beq	13a70 <__assert_fail@plt+0x2a64>
   139e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   139e8:	add	r0, r0, r1
   139ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   139f0:	cmn	r1, #1
   139f4:	str	r0, [sp, #52]	; 0x34
   139f8:	bne	13a20 <__assert_fail@plt+0x2a14>
   139fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a00:	movw	r1, #1
   13a04:	cmp	r1, r0
   13a08:	bcs	13a20 <__assert_fail@plt+0x2a14>
   13a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a10:	bl	10f28 <strlen@plt>
   13a14:	str	r0, [fp, #-36]	; 0xffffffdc
   13a18:	str	r0, [sp, #48]	; 0x30
   13a1c:	b	13a28 <__assert_fail@plt+0x2a1c>
   13a20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a24:	str	r0, [sp, #48]	; 0x30
   13a28:	ldr	r0, [sp, #48]	; 0x30
   13a2c:	ldr	r1, [sp, #52]	; 0x34
   13a30:	cmp	r1, r0
   13a34:	bhi	13a70 <__assert_fail@plt+0x2a64>
   13a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a40:	add	r0, r0, r1
   13a44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a48:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a4c:	bl	10e44 <memcmp@plt>
   13a50:	cmp	r0, #0
   13a54:	bne	13a70 <__assert_fail@plt+0x2a64>
   13a58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a5c:	tst	r0, #1
   13a60:	beq	13a68 <__assert_fail@plt+0x2a5c>
   13a64:	b	14d18 <__assert_fail@plt+0x3d0c>
   13a68:	movw	r0, #1
   13a6c:	strb	r0, [fp, #-65]	; 0xffffffbf
   13a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a78:	ldrb	r0, [r0, r1]
   13a7c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13a80:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13a84:	mov	r1, r0
   13a88:	cmp	r0, #126	; 0x7e
   13a8c:	str	r1, [sp, #44]	; 0x2c
   13a90:	bhi	14300 <__assert_fail@plt+0x32f4>
   13a94:	add	r0, pc, #8
   13a98:	ldr	r1, [sp, #44]	; 0x2c
   13a9c:	ldr	r0, [r0, r1, lsl #2]
   13aa0:	mov	pc, r0
   13aa4:	andeq	r3, r1, r0, lsr #25
   13aa8:	andeq	r4, r1, r0, lsl #6
   13aac:	andeq	r4, r1, r0, lsl #6
   13ab0:	andeq	r4, r1, r0, lsl #6
   13ab4:	andeq	r4, r1, r0, lsl #6
   13ab8:	andeq	r4, r1, r0, lsl #6
   13abc:	andeq	r4, r1, r0, lsl #6
   13ac0:	andeq	r4, r1, r8, lsr #1
   13ac4:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ac8:	andeq	r4, r1, r4, ror #1
   13acc:	andeq	r4, r1, ip, asr #1
   13ad0:	strdeq	r4, [r1], -r0
   13ad4:	andeq	r4, r1, r0, asr #1
   13ad8:	ldrdeq	r4, [r1], -r8
   13adc:	andeq	r4, r1, r0, lsl #6
   13ae0:	andeq	r4, r1, r0, lsl #6
   13ae4:	andeq	r4, r1, r0, lsl #6
   13ae8:	andeq	r4, r1, r0, lsl #6
   13aec:	andeq	r4, r1, r0, lsl #6
   13af0:	andeq	r4, r1, r0, lsl #6
   13af4:	andeq	r4, r1, r0, lsl #6
   13af8:	andeq	r4, r1, r0, lsl #6
   13afc:	andeq	r4, r1, r0, lsl #6
   13b00:	andeq	r4, r1, r0, lsl #6
   13b04:	andeq	r4, r1, r0, lsl #6
   13b08:	andeq	r4, r1, r0, lsl #6
   13b0c:	andeq	r4, r1, r0, lsl #6
   13b10:	andeq	r4, r1, r0, lsl #6
   13b14:	andeq	r4, r1, r0, lsl #6
   13b18:	andeq	r4, r1, r0, lsl #6
   13b1c:	andeq	r4, r1, r0, lsl #6
   13b20:	andeq	r4, r1, r0, lsl #6
   13b24:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b28:	ldrdeq	r4, [r1], -ip
   13b2c:	ldrdeq	r4, [r1], -ip
   13b30:	andeq	r4, r1, r0, asr #3
   13b34:	ldrdeq	r4, [r1], -ip
   13b38:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b3c:	ldrdeq	r4, [r1], -ip
   13b40:	strdeq	r4, [r1], -ip
   13b44:	ldrdeq	r4, [r1], -ip
   13b48:	ldrdeq	r4, [r1], -ip
   13b4c:	ldrdeq	r4, [r1], -ip
   13b50:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b54:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b58:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b5c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b60:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b64:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b68:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b6c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b70:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b74:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b78:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b7c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b80:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b84:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b88:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b8c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b90:	ldrdeq	r4, [r1], -ip
   13b94:	ldrdeq	r4, [r1], -ip
   13b98:	ldrdeq	r4, [r1], -ip
   13b9c:	ldrdeq	r4, [r1], -ip
   13ba0:	andeq	r3, r1, ip, lsr #29
   13ba4:	andeq	r4, r1, r0, lsl #6
   13ba8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bac:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bb0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bb4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bb8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bbc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bc0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bc4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bc8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bcc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bd0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bd4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bd8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bdc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13be0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13be4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13be8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bec:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bf0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bf4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bf8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bfc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c00:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c04:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c08:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c0c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c10:	ldrdeq	r4, [r1], -ip
   13c14:	strdeq	r4, [r1], -ip
   13c18:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c1c:	ldrdeq	r4, [r1], -ip
   13c20:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c24:	ldrdeq	r4, [r1], -ip
   13c28:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c2c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c30:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c34:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c38:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c3c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c40:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c44:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c48:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c4c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c50:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c54:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c58:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c5c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c60:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c64:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c68:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c6c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c70:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c74:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c78:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c7c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c80:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c84:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c88:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c8c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c90:	andeq	r4, r1, ip, lsl #3
   13c94:	ldrdeq	r4, [r1], -ip
   13c98:	andeq	r4, r1, ip, lsl #3
   13c9c:	andeq	r4, r1, r0, asr #3
   13ca0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13ca4:	tst	r0, #1
   13ca8:	beq	13e90 <__assert_fail@plt+0x2e84>
   13cac:	b	13cb0 <__assert_fail@plt+0x2ca4>
   13cb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13cb4:	tst	r0, #1
   13cb8:	beq	13cc0 <__assert_fail@plt+0x2cb4>
   13cbc:	b	14d18 <__assert_fail@plt+0x3d0c>
   13cc0:	movw	r0, #1
   13cc4:	strb	r0, [fp, #-66]	; 0xffffffbe
   13cc8:	ldr	r0, [fp, #8]
   13ccc:	cmp	r0, #2
   13cd0:	bne	13d84 <__assert_fail@plt+0x2d78>
   13cd4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13cd8:	tst	r0, #1
   13cdc:	bne	13d84 <__assert_fail@plt+0x2d78>
   13ce0:	b	13ce4 <__assert_fail@plt+0x2cd8>
   13ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ce8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cec:	cmp	r0, r1
   13cf0:	bcs	13d08 <__assert_fail@plt+0x2cfc>
   13cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cfc:	add	r0, r0, r1
   13d00:	movw	r1, #39	; 0x27
   13d04:	strb	r1, [r0]
   13d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d0c:	add	r0, r0, #1
   13d10:	str	r0, [fp, #-44]	; 0xffffffd4
   13d14:	b	13d18 <__assert_fail@plt+0x2d0c>
   13d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d20:	cmp	r0, r1
   13d24:	bcs	13d3c <__assert_fail@plt+0x2d30>
   13d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d30:	add	r0, r0, r1
   13d34:	movw	r1, #36	; 0x24
   13d38:	strb	r1, [r0]
   13d3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d40:	add	r0, r0, #1
   13d44:	str	r0, [fp, #-44]	; 0xffffffd4
   13d48:	b	13d4c <__assert_fail@plt+0x2d40>
   13d4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d54:	cmp	r0, r1
   13d58:	bcs	13d70 <__assert_fail@plt+0x2d64>
   13d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d64:	add	r0, r0, r1
   13d68:	movw	r1, #39	; 0x27
   13d6c:	strb	r1, [r0]
   13d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d74:	add	r0, r0, #1
   13d78:	str	r0, [fp, #-44]	; 0xffffffd4
   13d7c:	movw	r0, #1
   13d80:	strb	r0, [fp, #-60]	; 0xffffffc4
   13d84:	b	13d88 <__assert_fail@plt+0x2d7c>
   13d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d90:	cmp	r0, r1
   13d94:	bcs	13dac <__assert_fail@plt+0x2da0>
   13d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13da0:	add	r0, r0, r1
   13da4:	movw	r1, #92	; 0x5c
   13da8:	strb	r1, [r0]
   13dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13db0:	add	r0, r0, #1
   13db4:	str	r0, [fp, #-44]	; 0xffffffd4
   13db8:	b	13dbc <__assert_fail@plt+0x2db0>
   13dbc:	ldr	r0, [fp, #8]
   13dc0:	cmp	r0, #2
   13dc4:	beq	13e84 <__assert_fail@plt+0x2e78>
   13dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13dcc:	add	r0, r0, #1
   13dd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13dd4:	cmp	r0, r1
   13dd8:	bcs	13e84 <__assert_fail@plt+0x2e78>
   13ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13de0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13de4:	add	r1, r1, #1
   13de8:	add	r0, r0, r1
   13dec:	ldrb	r0, [r0]
   13df0:	movw	r1, #48	; 0x30
   13df4:	cmp	r1, r0
   13df8:	bgt	13e84 <__assert_fail@plt+0x2e78>
   13dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e04:	add	r1, r1, #1
   13e08:	add	r0, r0, r1
   13e0c:	ldrb	r0, [r0]
   13e10:	cmp	r0, #57	; 0x39
   13e14:	bgt	13e84 <__assert_fail@plt+0x2e78>
   13e18:	b	13e1c <__assert_fail@plt+0x2e10>
   13e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e24:	cmp	r0, r1
   13e28:	bcs	13e40 <__assert_fail@plt+0x2e34>
   13e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e34:	add	r0, r0, r1
   13e38:	movw	r1, #48	; 0x30
   13e3c:	strb	r1, [r0]
   13e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e44:	add	r0, r0, #1
   13e48:	str	r0, [fp, #-44]	; 0xffffffd4
   13e4c:	b	13e50 <__assert_fail@plt+0x2e44>
   13e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e58:	cmp	r0, r1
   13e5c:	bcs	13e74 <__assert_fail@plt+0x2e68>
   13e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e68:	add	r0, r0, r1
   13e6c:	movw	r1, #48	; 0x30
   13e70:	strb	r1, [r0]
   13e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e78:	add	r0, r0, #1
   13e7c:	str	r0, [fp, #-44]	; 0xffffffd4
   13e80:	b	13e84 <__assert_fail@plt+0x2e78>
   13e84:	movw	r0, #48	; 0x30
   13e88:	strb	r0, [fp, #-63]	; 0xffffffc1
   13e8c:	b	13ea8 <__assert_fail@plt+0x2e9c>
   13e90:	ldr	r0, [fp, #12]
   13e94:	and	r0, r0, #1
   13e98:	cmp	r0, #0
   13e9c:	beq	13ea4 <__assert_fail@plt+0x2e98>
   13ea0:	b	14b88 <__assert_fail@plt+0x3b7c>
   13ea4:	b	13ea8 <__assert_fail@plt+0x2e9c>
   13ea8:	b	14924 <__assert_fail@plt+0x3918>
   13eac:	ldr	r0, [fp, #8]
   13eb0:	cmp	r0, #2
   13eb4:	str	r0, [sp, #40]	; 0x28
   13eb8:	beq	13ed0 <__assert_fail@plt+0x2ec4>
   13ebc:	b	13ec0 <__assert_fail@plt+0x2eb4>
   13ec0:	ldr	r0, [sp, #40]	; 0x28
   13ec4:	cmp	r0, #5
   13ec8:	beq	13ee4 <__assert_fail@plt+0x2ed8>
   13ecc:	b	140a0 <__assert_fail@plt+0x3094>
   13ed0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13ed4:	tst	r0, #1
   13ed8:	beq	13ee0 <__assert_fail@plt+0x2ed4>
   13edc:	b	14d18 <__assert_fail@plt+0x3d0c>
   13ee0:	b	140a4 <__assert_fail@plt+0x3098>
   13ee4:	ldr	r0, [fp, #12]
   13ee8:	and	r0, r0, #4
   13eec:	cmp	r0, #0
   13ef0:	beq	1409c <__assert_fail@plt+0x3090>
   13ef4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ef8:	add	r0, r0, #2
   13efc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f00:	cmp	r0, r1
   13f04:	bcs	1409c <__assert_fail@plt+0x3090>
   13f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f10:	add	r1, r1, #1
   13f14:	add	r0, r0, r1
   13f18:	ldrb	r0, [r0]
   13f1c:	cmp	r0, #63	; 0x3f
   13f20:	bne	1409c <__assert_fail@plt+0x3090>
   13f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f2c:	add	r0, r0, r1
   13f30:	ldrb	r0, [r0, #2]
   13f34:	mov	r1, r0
   13f38:	cmp	r0, #33	; 0x21
   13f3c:	str	r1, [sp, #36]	; 0x24
   13f40:	beq	13f90 <__assert_fail@plt+0x2f84>
   13f44:	b	13f48 <__assert_fail@plt+0x2f3c>
   13f48:	ldr	r0, [sp, #36]	; 0x24
   13f4c:	sub	r1, r0, #39	; 0x27
   13f50:	cmp	r1, #3
   13f54:	bcc	13f90 <__assert_fail@plt+0x2f84>
   13f58:	b	13f5c <__assert_fail@plt+0x2f50>
   13f5c:	ldr	r0, [sp, #36]	; 0x24
   13f60:	cmp	r0, #45	; 0x2d
   13f64:	beq	13f90 <__assert_fail@plt+0x2f84>
   13f68:	b	13f6c <__assert_fail@plt+0x2f60>
   13f6c:	ldr	r0, [sp, #36]	; 0x24
   13f70:	cmp	r0, #47	; 0x2f
   13f74:	beq	13f90 <__assert_fail@plt+0x2f84>
   13f78:	b	13f7c <__assert_fail@plt+0x2f70>
   13f7c:	ldr	r0, [sp, #36]	; 0x24
   13f80:	sub	r1, r0, #60	; 0x3c
   13f84:	cmp	r1, #2
   13f88:	bhi	14094 <__assert_fail@plt+0x3088>
   13f8c:	b	13f90 <__assert_fail@plt+0x2f84>
   13f90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f94:	tst	r0, #1
   13f98:	beq	13fa0 <__assert_fail@plt+0x2f94>
   13f9c:	b	14d18 <__assert_fail@plt+0x3d0c>
   13fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fa4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13fa8:	add	r1, r1, #2
   13fac:	add	r0, r0, r1
   13fb0:	ldrb	r0, [r0]
   13fb4:	strb	r0, [fp, #-63]	; 0xffffffc1
   13fb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13fbc:	add	r0, r0, #2
   13fc0:	str	r0, [fp, #-40]	; 0xffffffd8
   13fc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fcc:	cmp	r0, r1
   13fd0:	bcs	13fe8 <__assert_fail@plt+0x2fdc>
   13fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fdc:	add	r0, r0, r1
   13fe0:	movw	r1, #63	; 0x3f
   13fe4:	strb	r1, [r0]
   13fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fec:	add	r0, r0, #1
   13ff0:	str	r0, [fp, #-44]	; 0xffffffd4
   13ff4:	b	13ff8 <__assert_fail@plt+0x2fec>
   13ff8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ffc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14000:	cmp	r0, r1
   14004:	bcs	1401c <__assert_fail@plt+0x3010>
   14008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1400c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14010:	add	r0, r0, r1
   14014:	movw	r1, #34	; 0x22
   14018:	strb	r1, [r0]
   1401c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14020:	add	r0, r0, #1
   14024:	str	r0, [fp, #-44]	; 0xffffffd4
   14028:	b	1402c <__assert_fail@plt+0x3020>
   1402c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14030:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14034:	cmp	r0, r1
   14038:	bcs	14050 <__assert_fail@plt+0x3044>
   1403c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14040:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14044:	add	r0, r0, r1
   14048:	movw	r1, #34	; 0x22
   1404c:	strb	r1, [r0]
   14050:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14054:	add	r0, r0, #1
   14058:	str	r0, [fp, #-44]	; 0xffffffd4
   1405c:	b	14060 <__assert_fail@plt+0x3054>
   14060:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14068:	cmp	r0, r1
   1406c:	bcs	14084 <__assert_fail@plt+0x3078>
   14070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14074:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14078:	add	r0, r0, r1
   1407c:	movw	r1, #63	; 0x3f
   14080:	strb	r1, [r0]
   14084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14088:	add	r0, r0, #1
   1408c:	str	r0, [fp, #-44]	; 0xffffffd4
   14090:	b	14098 <__assert_fail@plt+0x308c>
   14094:	b	14098 <__assert_fail@plt+0x308c>
   14098:	b	1409c <__assert_fail@plt+0x3090>
   1409c:	b	140a4 <__assert_fail@plt+0x3098>
   140a0:	b	140a4 <__assert_fail@plt+0x3098>
   140a4:	b	14924 <__assert_fail@plt+0x3918>
   140a8:	movw	r0, #97	; 0x61
   140ac:	strb	r0, [fp, #-64]	; 0xffffffc0
   140b0:	b	14170 <__assert_fail@plt+0x3164>
   140b4:	movw	r0, #98	; 0x62
   140b8:	strb	r0, [fp, #-64]	; 0xffffffc0
   140bc:	b	14170 <__assert_fail@plt+0x3164>
   140c0:	movw	r0, #102	; 0x66
   140c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   140c8:	b	14170 <__assert_fail@plt+0x3164>
   140cc:	movw	r0, #110	; 0x6e
   140d0:	strb	r0, [fp, #-64]	; 0xffffffc0
   140d4:	b	14150 <__assert_fail@plt+0x3144>
   140d8:	movw	r0, #114	; 0x72
   140dc:	strb	r0, [fp, #-64]	; 0xffffffc0
   140e0:	b	14150 <__assert_fail@plt+0x3144>
   140e4:	movw	r0, #116	; 0x74
   140e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   140ec:	b	14150 <__assert_fail@plt+0x3144>
   140f0:	movw	r0, #118	; 0x76
   140f4:	strb	r0, [fp, #-64]	; 0xffffffc0
   140f8:	b	14170 <__assert_fail@plt+0x3164>
   140fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14100:	strb	r0, [fp, #-64]	; 0xffffffc0
   14104:	ldr	r0, [fp, #8]
   14108:	cmp	r0, #2
   1410c:	bne	14124 <__assert_fail@plt+0x3118>
   14110:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14114:	tst	r0, #1
   14118:	beq	14120 <__assert_fail@plt+0x3114>
   1411c:	b	14d18 <__assert_fail@plt+0x3d0c>
   14120:	b	14aac <__assert_fail@plt+0x3aa0>
   14124:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14128:	tst	r0, #1
   1412c:	beq	1414c <__assert_fail@plt+0x3140>
   14130:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14134:	tst	r0, #1
   14138:	beq	1414c <__assert_fail@plt+0x3140>
   1413c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14140:	cmp	r0, #0
   14144:	beq	1414c <__assert_fail@plt+0x3140>
   14148:	b	14aac <__assert_fail@plt+0x3aa0>
   1414c:	b	14150 <__assert_fail@plt+0x3144>
   14150:	ldr	r0, [fp, #8]
   14154:	cmp	r0, #2
   14158:	bne	1416c <__assert_fail@plt+0x3160>
   1415c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14160:	tst	r0, #1
   14164:	beq	1416c <__assert_fail@plt+0x3160>
   14168:	b	14d18 <__assert_fail@plt+0x3d0c>
   1416c:	b	14170 <__assert_fail@plt+0x3164>
   14170:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14174:	tst	r0, #1
   14178:	beq	14188 <__assert_fail@plt+0x317c>
   1417c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14180:	strb	r0, [fp, #-63]	; 0xffffffc1
   14184:	b	14998 <__assert_fail@plt+0x398c>
   14188:	b	14924 <__assert_fail@plt+0x3918>
   1418c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14190:	cmn	r0, #1
   14194:	bne	141ac <__assert_fail@plt+0x31a0>
   14198:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1419c:	ldrb	r0, [r0, #1]
   141a0:	cmp	r0, #0
   141a4:	beq	141bc <__assert_fail@plt+0x31b0>
   141a8:	b	141b8 <__assert_fail@plt+0x31ac>
   141ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   141b0:	cmp	r0, #1
   141b4:	beq	141bc <__assert_fail@plt+0x31b0>
   141b8:	b	14924 <__assert_fail@plt+0x3918>
   141bc:	b	141c0 <__assert_fail@plt+0x31b4>
   141c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   141c4:	cmp	r0, #0
   141c8:	beq	141d0 <__assert_fail@plt+0x31c4>
   141cc:	b	14924 <__assert_fail@plt+0x3918>
   141d0:	b	141d4 <__assert_fail@plt+0x31c8>
   141d4:	movw	r0, #1
   141d8:	strb	r0, [fp, #-67]	; 0xffffffbd
   141dc:	ldr	r0, [fp, #8]
   141e0:	cmp	r0, #2
   141e4:	bne	141f8 <__assert_fail@plt+0x31ec>
   141e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141ec:	tst	r0, #1
   141f0:	beq	141f8 <__assert_fail@plt+0x31ec>
   141f4:	b	14d18 <__assert_fail@plt+0x3d0c>
   141f8:	b	14924 <__assert_fail@plt+0x3918>
   141fc:	movw	r0, #1
   14200:	strb	r0, [fp, #-61]	; 0xffffffc3
   14204:	strb	r0, [fp, #-67]	; 0xffffffbd
   14208:	ldr	r0, [fp, #8]
   1420c:	cmp	r0, #2
   14210:	bne	142f0 <__assert_fail@plt+0x32e4>
   14214:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14218:	tst	r0, #1
   1421c:	beq	14224 <__assert_fail@plt+0x3218>
   14220:	b	14d18 <__assert_fail@plt+0x3d0c>
   14224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14228:	cmp	r0, #0
   1422c:	beq	1424c <__assert_fail@plt+0x3240>
   14230:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14234:	cmp	r0, #0
   14238:	bne	1424c <__assert_fail@plt+0x3240>
   1423c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14240:	str	r0, [fp, #-48]	; 0xffffffd0
   14244:	movw	r0, #0
   14248:	str	r0, [fp, #-28]	; 0xffffffe4
   1424c:	b	14250 <__assert_fail@plt+0x3244>
   14250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14254:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14258:	cmp	r0, r1
   1425c:	bcs	14274 <__assert_fail@plt+0x3268>
   14260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14264:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14268:	add	r0, r0, r1
   1426c:	movw	r1, #39	; 0x27
   14270:	strb	r1, [r0]
   14274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14278:	add	r0, r0, #1
   1427c:	str	r0, [fp, #-44]	; 0xffffffd4
   14280:	b	14284 <__assert_fail@plt+0x3278>
   14284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14288:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1428c:	cmp	r0, r1
   14290:	bcs	142a8 <__assert_fail@plt+0x329c>
   14294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14298:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1429c:	add	r0, r0, r1
   142a0:	movw	r1, #92	; 0x5c
   142a4:	strb	r1, [r0]
   142a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142ac:	add	r0, r0, #1
   142b0:	str	r0, [fp, #-44]	; 0xffffffd4
   142b4:	b	142b8 <__assert_fail@plt+0x32ac>
   142b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142c0:	cmp	r0, r1
   142c4:	bcs	142dc <__assert_fail@plt+0x32d0>
   142c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142d0:	add	r0, r0, r1
   142d4:	movw	r1, #39	; 0x27
   142d8:	strb	r1, [r0]
   142dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142e0:	add	r0, r0, #1
   142e4:	str	r0, [fp, #-44]	; 0xffffffd4
   142e8:	movw	r0, #0
   142ec:	strb	r0, [fp, #-60]	; 0xffffffc4
   142f0:	b	14924 <__assert_fail@plt+0x3918>
   142f4:	movw	r0, #1
   142f8:	strb	r0, [fp, #-67]	; 0xffffffbd
   142fc:	b	14924 <__assert_fail@plt+0x3918>
   14300:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14304:	tst	r0, #1
   14308:	beq	1434c <__assert_fail@plt+0x3340>
   1430c:	mov	r0, #1
   14310:	str	r0, [fp, #-72]	; 0xffffffb8
   14314:	bl	10f04 <__ctype_b_loc@plt>
   14318:	ldr	r0, [r0]
   1431c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   14320:	mov	r1, lr
   14324:	add	r0, r0, lr, lsl #1
   14328:	ldrh	r0, [r0]
   1432c:	and	r0, r0, #16384	; 0x4000
   14330:	cmp	r0, #0
   14334:	movw	r0, #0
   14338:	movne	r0, #1
   1433c:	and	r0, r0, #1
   14340:	strb	r0, [fp, #-73]	; 0xffffffb7
   14344:	str	r1, [sp, #32]
   14348:	b	145d8 <__assert_fail@plt+0x35cc>
   1434c:	sub	r0, fp, #84	; 0x54
   14350:	movw	r1, #0
   14354:	and	r1, r1, #255	; 0xff
   14358:	movw	r2, #8
   1435c:	bl	10f58 <memset@plt>
   14360:	movw	r0, #0
   14364:	str	r0, [fp, #-72]	; 0xffffffb8
   14368:	movw	r0, #1
   1436c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14370:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14374:	cmn	r0, #1
   14378:	bne	14388 <__assert_fail@plt+0x337c>
   1437c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14380:	bl	10f28 <strlen@plt>
   14384:	str	r0, [fp, #-36]	; 0xffffffdc
   14388:	b	1438c <__assert_fail@plt+0x3380>
   1438c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14390:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14394:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14398:	add	r1, r1, r2
   1439c:	add	r1, r0, r1
   143a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   143a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   143a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   143ac:	add	r2, r2, r3
   143b0:	sub	r2, r0, r2
   143b4:	sub	r0, fp, #88	; 0x58
   143b8:	sub	r3, fp, #84	; 0x54
   143bc:	bl	19600 <__assert_fail@plt+0x85f4>
   143c0:	str	r0, [sp, #92]	; 0x5c
   143c4:	ldr	r0, [sp, #92]	; 0x5c
   143c8:	cmp	r0, #0
   143cc:	bne	143d4 <__assert_fail@plt+0x33c8>
   143d0:	b	145d4 <__assert_fail@plt+0x35c8>
   143d4:	ldr	r0, [sp, #92]	; 0x5c
   143d8:	cmn	r0, #1
   143dc:	bne	143ec <__assert_fail@plt+0x33e0>
   143e0:	movw	r0, #0
   143e4:	strb	r0, [fp, #-73]	; 0xffffffb7
   143e8:	b	145d4 <__assert_fail@plt+0x35c8>
   143ec:	ldr	r0, [sp, #92]	; 0x5c
   143f0:	cmn	r0, #2
   143f4:	bne	14468 <__assert_fail@plt+0x345c>
   143f8:	movw	r0, #0
   143fc:	strb	r0, [fp, #-73]	; 0xffffffb7
   14400:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14404:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14408:	add	r0, r0, r1
   1440c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14410:	cmp	r0, r1
   14414:	movw	r0, #0
   14418:	str	r0, [sp, #28]
   1441c:	bcs	14448 <__assert_fail@plt+0x343c>
   14420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14424:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14428:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1442c:	add	r1, r1, r2
   14430:	add	r0, r0, r1
   14434:	ldrb	r0, [r0]
   14438:	cmp	r0, #0
   1443c:	movw	r0, #0
   14440:	movne	r0, #1
   14444:	str	r0, [sp, #28]
   14448:	ldr	r0, [sp, #28]
   1444c:	tst	r0, #1
   14450:	beq	14464 <__assert_fail@plt+0x3458>
   14454:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14458:	add	r0, r0, #1
   1445c:	str	r0, [fp, #-72]	; 0xffffffb8
   14460:	b	14400 <__assert_fail@plt+0x33f4>
   14464:	b	145d4 <__assert_fail@plt+0x35c8>
   14468:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1446c:	tst	r0, #1
   14470:	beq	1457c <__assert_fail@plt+0x3570>
   14474:	ldr	r0, [fp, #8]
   14478:	cmp	r0, #2
   1447c:	bne	1457c <__assert_fail@plt+0x3570>
   14480:	movw	r0, #1
   14484:	str	r0, [sp, #88]	; 0x58
   14488:	ldr	r0, [sp, #88]	; 0x58
   1448c:	ldr	r1, [sp, #92]	; 0x5c
   14490:	cmp	r0, r1
   14494:	bcs	14578 <__assert_fail@plt+0x356c>
   14498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1449c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   144a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   144a4:	add	r1, r1, r2
   144a8:	ldr	r2, [sp, #88]	; 0x58
   144ac:	add	r1, r1, r2
   144b0:	ldrb	r0, [r0, r1]
   144b4:	sub	r0, r0, #91	; 0x5b
   144b8:	cmp	r0, #33	; 0x21
   144bc:	str	r0, [sp, #24]
   144c0:	bhi	14560 <__assert_fail@plt+0x3554>
   144c4:	add	r0, pc, #8
   144c8:	ldr	r1, [sp, #24]
   144cc:	ldr	r0, [r0, r1, lsl #2]
   144d0:	mov	pc, r0
   144d4:	andeq	r4, r1, ip, asr r5
   144d8:	andeq	r4, r1, ip, asr r5
   144dc:	andeq	r4, r1, r0, ror #10
   144e0:	andeq	r4, r1, ip, asr r5
   144e4:	andeq	r4, r1, r0, ror #10
   144e8:	andeq	r4, r1, ip, asr r5
   144ec:	andeq	r4, r1, r0, ror #10
   144f0:	andeq	r4, r1, r0, ror #10
   144f4:	andeq	r4, r1, r0, ror #10
   144f8:	andeq	r4, r1, r0, ror #10
   144fc:	andeq	r4, r1, r0, ror #10
   14500:	andeq	r4, r1, r0, ror #10
   14504:	andeq	r4, r1, r0, ror #10
   14508:	andeq	r4, r1, r0, ror #10
   1450c:	andeq	r4, r1, r0, ror #10
   14510:	andeq	r4, r1, r0, ror #10
   14514:	andeq	r4, r1, r0, ror #10
   14518:	andeq	r4, r1, r0, ror #10
   1451c:	andeq	r4, r1, r0, ror #10
   14520:	andeq	r4, r1, r0, ror #10
   14524:	andeq	r4, r1, r0, ror #10
   14528:	andeq	r4, r1, r0, ror #10
   1452c:	andeq	r4, r1, r0, ror #10
   14530:	andeq	r4, r1, r0, ror #10
   14534:	andeq	r4, r1, r0, ror #10
   14538:	andeq	r4, r1, r0, ror #10
   1453c:	andeq	r4, r1, r0, ror #10
   14540:	andeq	r4, r1, r0, ror #10
   14544:	andeq	r4, r1, r0, ror #10
   14548:	andeq	r4, r1, r0, ror #10
   1454c:	andeq	r4, r1, r0, ror #10
   14550:	andeq	r4, r1, r0, ror #10
   14554:	andeq	r4, r1, r0, ror #10
   14558:	andeq	r4, r1, ip, asr r5
   1455c:	b	14d18 <__assert_fail@plt+0x3d0c>
   14560:	b	14564 <__assert_fail@plt+0x3558>
   14564:	b	14568 <__assert_fail@plt+0x355c>
   14568:	ldr	r0, [sp, #88]	; 0x58
   1456c:	add	r0, r0, #1
   14570:	str	r0, [sp, #88]	; 0x58
   14574:	b	14488 <__assert_fail@plt+0x347c>
   14578:	b	1457c <__assert_fail@plt+0x3570>
   1457c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14580:	bl	10e74 <iswprint@plt>
   14584:	cmp	r0, #0
   14588:	bne	14594 <__assert_fail@plt+0x3588>
   1458c:	movw	r0, #0
   14590:	strb	r0, [fp, #-73]	; 0xffffffb7
   14594:	ldr	r0, [sp, #92]	; 0x5c
   14598:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1459c:	add	r0, r1, r0
   145a0:	str	r0, [fp, #-72]	; 0xffffffb8
   145a4:	b	145a8 <__assert_fail@plt+0x359c>
   145a8:	b	145ac <__assert_fail@plt+0x35a0>
   145ac:	b	145b0 <__assert_fail@plt+0x35a4>
   145b0:	sub	r0, fp, #84	; 0x54
   145b4:	bl	10e38 <mbsinit@plt>
   145b8:	cmp	r0, #0
   145bc:	movw	r0, #0
   145c0:	movne	r0, #1
   145c4:	mvn	lr, #0
   145c8:	eor	r0, r0, lr
   145cc:	tst	r0, #1
   145d0:	bne	1438c <__assert_fail@plt+0x3380>
   145d4:	b	145d8 <__assert_fail@plt+0x35cc>
   145d8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   145dc:	and	r0, r0, #1
   145e0:	strb	r0, [fp, #-67]	; 0xffffffbd
   145e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   145e8:	movw	r1, #1
   145ec:	cmp	r1, r0
   145f0:	bcc	1460c <__assert_fail@plt+0x3600>
   145f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   145f8:	tst	r0, #1
   145fc:	beq	14920 <__assert_fail@plt+0x3914>
   14600:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14604:	tst	r0, #1
   14608:	bne	14920 <__assert_fail@plt+0x3914>
   1460c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14610:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14614:	add	r0, r0, r1
   14618:	str	r0, [sp, #84]	; 0x54
   1461c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14620:	tst	r0, #1
   14624:	beq	147d4 <__assert_fail@plt+0x37c8>
   14628:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1462c:	tst	r0, #1
   14630:	bne	147d4 <__assert_fail@plt+0x37c8>
   14634:	b	14638 <__assert_fail@plt+0x362c>
   14638:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1463c:	tst	r0, #1
   14640:	beq	14648 <__assert_fail@plt+0x363c>
   14644:	b	14d18 <__assert_fail@plt+0x3d0c>
   14648:	movw	r0, #1
   1464c:	strb	r0, [fp, #-66]	; 0xffffffbe
   14650:	ldr	r0, [fp, #8]
   14654:	cmp	r0, #2
   14658:	bne	1470c <__assert_fail@plt+0x3700>
   1465c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14660:	tst	r0, #1
   14664:	bne	1470c <__assert_fail@plt+0x3700>
   14668:	b	1466c <__assert_fail@plt+0x3660>
   1466c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14670:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14674:	cmp	r0, r1
   14678:	bcs	14690 <__assert_fail@plt+0x3684>
   1467c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14684:	add	r0, r0, r1
   14688:	movw	r1, #39	; 0x27
   1468c:	strb	r1, [r0]
   14690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14694:	add	r0, r0, #1
   14698:	str	r0, [fp, #-44]	; 0xffffffd4
   1469c:	b	146a0 <__assert_fail@plt+0x3694>
   146a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146a8:	cmp	r0, r1
   146ac:	bcs	146c4 <__assert_fail@plt+0x36b8>
   146b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146b8:	add	r0, r0, r1
   146bc:	movw	r1, #36	; 0x24
   146c0:	strb	r1, [r0]
   146c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146c8:	add	r0, r0, #1
   146cc:	str	r0, [fp, #-44]	; 0xffffffd4
   146d0:	b	146d4 <__assert_fail@plt+0x36c8>
   146d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146dc:	cmp	r0, r1
   146e0:	bcs	146f8 <__assert_fail@plt+0x36ec>
   146e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   146e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146ec:	add	r0, r0, r1
   146f0:	movw	r1, #39	; 0x27
   146f4:	strb	r1, [r0]
   146f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146fc:	add	r0, r0, #1
   14700:	str	r0, [fp, #-44]	; 0xffffffd4
   14704:	movw	r0, #1
   14708:	strb	r0, [fp, #-60]	; 0xffffffc4
   1470c:	b	14710 <__assert_fail@plt+0x3704>
   14710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14718:	cmp	r0, r1
   1471c:	bcs	14734 <__assert_fail@plt+0x3728>
   14720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14724:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14728:	add	r0, r0, r1
   1472c:	movw	r1, #92	; 0x5c
   14730:	strb	r1, [r0]
   14734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14738:	add	r0, r0, #1
   1473c:	str	r0, [fp, #-44]	; 0xffffffd4
   14740:	b	14744 <__assert_fail@plt+0x3738>
   14744:	b	14748 <__assert_fail@plt+0x373c>
   14748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1474c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14750:	cmp	r0, r1
   14754:	bcs	14774 <__assert_fail@plt+0x3768>
   14758:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1475c:	asr	r0, r0, #6
   14760:	add	r0, r0, #48	; 0x30
   14764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14768:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1476c:	add	r1, r1, r2
   14770:	strb	r0, [r1]
   14774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14778:	add	r0, r0, #1
   1477c:	str	r0, [fp, #-44]	; 0xffffffd4
   14780:	b	14784 <__assert_fail@plt+0x3778>
   14784:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14788:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1478c:	cmp	r0, r1
   14790:	bcs	147b4 <__assert_fail@plt+0x37a8>
   14794:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14798:	asr	r0, r0, #3
   1479c:	and	r0, r0, #7
   147a0:	add	r0, r0, #48	; 0x30
   147a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   147a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   147ac:	add	r1, r1, r2
   147b0:	strb	r0, [r1]
   147b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147b8:	add	r0, r0, #1
   147bc:	str	r0, [fp, #-44]	; 0xffffffd4
   147c0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   147c4:	and	r0, r0, #7
   147c8:	add	r0, r0, #48	; 0x30
   147cc:	strb	r0, [fp, #-63]	; 0xffffffc1
   147d0:	b	14820 <__assert_fail@plt+0x3814>
   147d4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   147d8:	tst	r0, #1
   147dc:	beq	1481c <__assert_fail@plt+0x3810>
   147e0:	b	147e4 <__assert_fail@plt+0x37d8>
   147e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147ec:	cmp	r0, r1
   147f0:	bcs	14808 <__assert_fail@plt+0x37fc>
   147f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147fc:	add	r0, r0, r1
   14800:	movw	r1, #92	; 0x5c
   14804:	strb	r1, [r0]
   14808:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1480c:	add	r0, r0, #1
   14810:	str	r0, [fp, #-44]	; 0xffffffd4
   14814:	movw	r0, #0
   14818:	strb	r0, [fp, #-65]	; 0xffffffbf
   1481c:	b	14820 <__assert_fail@plt+0x3814>
   14820:	ldr	r0, [sp, #84]	; 0x54
   14824:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14828:	add	r1, r1, #1
   1482c:	cmp	r0, r1
   14830:	bhi	14838 <__assert_fail@plt+0x382c>
   14834:	b	1491c <__assert_fail@plt+0x3910>
   14838:	b	1483c <__assert_fail@plt+0x3830>
   1483c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14840:	tst	r0, #1
   14844:	beq	148c4 <__assert_fail@plt+0x38b8>
   14848:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1484c:	tst	r0, #1
   14850:	bne	148c4 <__assert_fail@plt+0x38b8>
   14854:	b	14858 <__assert_fail@plt+0x384c>
   14858:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1485c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14860:	cmp	r0, r1
   14864:	bcs	1487c <__assert_fail@plt+0x3870>
   14868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1486c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14870:	add	r0, r0, r1
   14874:	movw	r1, #39	; 0x27
   14878:	strb	r1, [r0]
   1487c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14880:	add	r0, r0, #1
   14884:	str	r0, [fp, #-44]	; 0xffffffd4
   14888:	b	1488c <__assert_fail@plt+0x3880>
   1488c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14890:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14894:	cmp	r0, r1
   14898:	bcs	148b0 <__assert_fail@plt+0x38a4>
   1489c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   148a4:	add	r0, r0, r1
   148a8:	movw	r1, #39	; 0x27
   148ac:	strb	r1, [r0]
   148b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148b4:	add	r0, r0, #1
   148b8:	str	r0, [fp, #-44]	; 0xffffffd4
   148bc:	movw	r0, #0
   148c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   148c4:	b	148c8 <__assert_fail@plt+0x38bc>
   148c8:	b	148cc <__assert_fail@plt+0x38c0>
   148cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148d4:	cmp	r0, r1
   148d8:	bcs	148f0 <__assert_fail@plt+0x38e4>
   148dc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   148e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   148e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   148e8:	add	r1, r1, r2
   148ec:	strb	r0, [r1]
   148f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148f4:	add	r0, r0, #1
   148f8:	str	r0, [fp, #-44]	; 0xffffffd4
   148fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14900:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14904:	add	r1, r1, #1
   14908:	str	r1, [fp, #-40]	; 0xffffffd8
   1490c:	add	r0, r0, r1
   14910:	ldrb	r0, [r0]
   14914:	strb	r0, [fp, #-63]	; 0xffffffc1
   14918:	b	1461c <__assert_fail@plt+0x3610>
   1491c:	b	14aac <__assert_fail@plt+0x3aa0>
   14920:	b	14924 <__assert_fail@plt+0x3918>
   14924:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14928:	tst	r0, #1
   1492c:	beq	1493c <__assert_fail@plt+0x3930>
   14930:	ldr	r0, [fp, #8]
   14934:	cmp	r0, #2
   14938:	bne	14948 <__assert_fail@plt+0x393c>
   1493c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14940:	tst	r0, #1
   14944:	beq	14984 <__assert_fail@plt+0x3978>
   14948:	ldr	r0, [fp, #16]
   1494c:	movw	r1, #0
   14950:	cmp	r0, r1
   14954:	beq	14984 <__assert_fail@plt+0x3978>
   14958:	ldr	r0, [fp, #16]
   1495c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14960:	lsr	r1, r1, #5
   14964:	add	r0, r0, r1, lsl #2
   14968:	ldr	r0, [r0]
   1496c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14970:	and	r1, r1, #31
   14974:	lsr	r0, r0, r1
   14978:	and	r0, r0, #1
   1497c:	cmp	r0, #0
   14980:	bne	14994 <__assert_fail@plt+0x3988>
   14984:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14988:	tst	r0, #1
   1498c:	bne	14994 <__assert_fail@plt+0x3988>
   14990:	b	14aac <__assert_fail@plt+0x3aa0>
   14994:	b	14998 <__assert_fail@plt+0x398c>
   14998:	b	1499c <__assert_fail@plt+0x3990>
   1499c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   149a0:	tst	r0, #1
   149a4:	beq	149ac <__assert_fail@plt+0x39a0>
   149a8:	b	14d18 <__assert_fail@plt+0x3d0c>
   149ac:	movw	r0, #1
   149b0:	strb	r0, [fp, #-66]	; 0xffffffbe
   149b4:	ldr	r0, [fp, #8]
   149b8:	cmp	r0, #2
   149bc:	bne	14a70 <__assert_fail@plt+0x3a64>
   149c0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   149c4:	tst	r0, #1
   149c8:	bne	14a70 <__assert_fail@plt+0x3a64>
   149cc:	b	149d0 <__assert_fail@plt+0x39c4>
   149d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149d8:	cmp	r0, r1
   149dc:	bcs	149f4 <__assert_fail@plt+0x39e8>
   149e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149e8:	add	r0, r0, r1
   149ec:	movw	r1, #39	; 0x27
   149f0:	strb	r1, [r0]
   149f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149f8:	add	r0, r0, #1
   149fc:	str	r0, [fp, #-44]	; 0xffffffd4
   14a00:	b	14a04 <__assert_fail@plt+0x39f8>
   14a04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a0c:	cmp	r0, r1
   14a10:	bcs	14a28 <__assert_fail@plt+0x3a1c>
   14a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a1c:	add	r0, r0, r1
   14a20:	movw	r1, #36	; 0x24
   14a24:	strb	r1, [r0]
   14a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a2c:	add	r0, r0, #1
   14a30:	str	r0, [fp, #-44]	; 0xffffffd4
   14a34:	b	14a38 <__assert_fail@plt+0x3a2c>
   14a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a40:	cmp	r0, r1
   14a44:	bcs	14a5c <__assert_fail@plt+0x3a50>
   14a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a50:	add	r0, r0, r1
   14a54:	movw	r1, #39	; 0x27
   14a58:	strb	r1, [r0]
   14a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a60:	add	r0, r0, #1
   14a64:	str	r0, [fp, #-44]	; 0xffffffd4
   14a68:	movw	r0, #1
   14a6c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14a70:	b	14a74 <__assert_fail@plt+0x3a68>
   14a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a7c:	cmp	r0, r1
   14a80:	bcs	14a98 <__assert_fail@plt+0x3a8c>
   14a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a8c:	add	r0, r0, r1
   14a90:	movw	r1, #92	; 0x5c
   14a94:	strb	r1, [r0]
   14a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a9c:	add	r0, r0, #1
   14aa0:	str	r0, [fp, #-44]	; 0xffffffd4
   14aa4:	b	14aa8 <__assert_fail@plt+0x3a9c>
   14aa8:	b	14aac <__assert_fail@plt+0x3aa0>
   14aac:	b	14ab0 <__assert_fail@plt+0x3aa4>
   14ab0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14ab4:	tst	r0, #1
   14ab8:	beq	14b38 <__assert_fail@plt+0x3b2c>
   14abc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14ac0:	tst	r0, #1
   14ac4:	bne	14b38 <__assert_fail@plt+0x3b2c>
   14ac8:	b	14acc <__assert_fail@plt+0x3ac0>
   14acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ad0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ad4:	cmp	r0, r1
   14ad8:	bcs	14af0 <__assert_fail@plt+0x3ae4>
   14adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ae0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ae4:	add	r0, r0, r1
   14ae8:	movw	r1, #39	; 0x27
   14aec:	strb	r1, [r0]
   14af0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14af4:	add	r0, r0, #1
   14af8:	str	r0, [fp, #-44]	; 0xffffffd4
   14afc:	b	14b00 <__assert_fail@plt+0x3af4>
   14b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b08:	cmp	r0, r1
   14b0c:	bcs	14b24 <__assert_fail@plt+0x3b18>
   14b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b18:	add	r0, r0, r1
   14b1c:	movw	r1, #39	; 0x27
   14b20:	strb	r1, [r0]
   14b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b28:	add	r0, r0, #1
   14b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   14b30:	movw	r0, #0
   14b34:	strb	r0, [fp, #-60]	; 0xffffffc4
   14b38:	b	14b3c <__assert_fail@plt+0x3b30>
   14b3c:	b	14b40 <__assert_fail@plt+0x3b34>
   14b40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b48:	cmp	r0, r1
   14b4c:	bcs	14b64 <__assert_fail@plt+0x3b58>
   14b50:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14b54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14b5c:	add	r1, r1, r2
   14b60:	strb	r0, [r1]
   14b64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b68:	add	r0, r0, #1
   14b6c:	str	r0, [fp, #-44]	; 0xffffffd4
   14b70:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14b74:	tst	r0, #1
   14b78:	bne	14b84 <__assert_fail@plt+0x3b78>
   14b7c:	movw	r0, #0
   14b80:	strb	r0, [fp, #-62]	; 0xffffffc2
   14b84:	b	14b88 <__assert_fail@plt+0x3b7c>
   14b88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b8c:	add	r0, r0, #1
   14b90:	str	r0, [fp, #-40]	; 0xffffffd8
   14b94:	b	1393c <__assert_fail@plt+0x2930>
   14b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b9c:	cmp	r0, #0
   14ba0:	bne	14bc0 <__assert_fail@plt+0x3bb4>
   14ba4:	ldr	r0, [fp, #8]
   14ba8:	cmp	r0, #2
   14bac:	bne	14bc0 <__assert_fail@plt+0x3bb4>
   14bb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bb4:	tst	r0, #1
   14bb8:	beq	14bc0 <__assert_fail@plt+0x3bb4>
   14bbc:	b	14d18 <__assert_fail@plt+0x3d0c>
   14bc0:	ldr	r0, [fp, #8]
   14bc4:	cmp	r0, #2
   14bc8:	bne	14c68 <__assert_fail@plt+0x3c5c>
   14bcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bd0:	tst	r0, #1
   14bd4:	bne	14c68 <__assert_fail@plt+0x3c5c>
   14bd8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14bdc:	tst	r0, #1
   14be0:	beq	14c68 <__assert_fail@plt+0x3c5c>
   14be4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14be8:	tst	r0, #1
   14bec:	beq	14c34 <__assert_fail@plt+0x3c28>
   14bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14bf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14bfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c00:	ldr	ip, [fp, #12]
   14c04:	ldr	lr, [fp, #16]
   14c08:	ldr	r4, [fp, #20]
   14c0c:	ldr	r5, [fp, #24]
   14c10:	movw	r6, #5
   14c14:	str	r6, [sp]
   14c18:	str	ip, [sp, #4]
   14c1c:	str	lr, [sp, #8]
   14c20:	str	r4, [sp, #12]
   14c24:	str	r5, [sp, #16]
   14c28:	bl	13654 <__assert_fail@plt+0x2648>
   14c2c:	str	r0, [fp, #-20]	; 0xffffffec
   14c30:	b	14d80 <__assert_fail@plt+0x3d74>
   14c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c38:	cmp	r0, #0
   14c3c:	bne	14c60 <__assert_fail@plt+0x3c54>
   14c40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c44:	cmp	r0, #0
   14c48:	beq	14c60 <__assert_fail@plt+0x3c54>
   14c4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c50:	str	r0, [fp, #-28]	; 0xffffffe4
   14c54:	movw	r0, #0
   14c58:	str	r0, [fp, #-44]	; 0xffffffd4
   14c5c:	b	136fc <__assert_fail@plt+0x26f0>
   14c60:	b	14c64 <__assert_fail@plt+0x3c58>
   14c64:	b	14c68 <__assert_fail@plt+0x3c5c>
   14c68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c6c:	movw	r1, #0
   14c70:	cmp	r0, r1
   14c74:	beq	14ce8 <__assert_fail@plt+0x3cdc>
   14c78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c7c:	tst	r0, #1
   14c80:	bne	14ce8 <__assert_fail@plt+0x3cdc>
   14c84:	b	14c88 <__assert_fail@plt+0x3c7c>
   14c88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c8c:	ldrsb	r0, [r0]
   14c90:	cmp	r0, #0
   14c94:	beq	14ce4 <__assert_fail@plt+0x3cd8>
   14c98:	b	14c9c <__assert_fail@plt+0x3c90>
   14c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ca4:	cmp	r0, r1
   14ca8:	bcs	14cc4 <__assert_fail@plt+0x3cb8>
   14cac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14cb0:	ldrb	r0, [r0]
   14cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14cb8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14cbc:	add	r1, r1, r2
   14cc0:	strb	r0, [r1]
   14cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cc8:	add	r0, r0, #1
   14ccc:	str	r0, [fp, #-44]	; 0xffffffd4
   14cd0:	b	14cd4 <__assert_fail@plt+0x3cc8>
   14cd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14cd8:	add	r0, r0, #1
   14cdc:	str	r0, [fp, #-52]	; 0xffffffcc
   14ce0:	b	14c88 <__assert_fail@plt+0x3c7c>
   14ce4:	b	14ce8 <__assert_fail@plt+0x3cdc>
   14ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cf0:	cmp	r0, r1
   14cf4:	bcs	14d0c <__assert_fail@plt+0x3d00>
   14cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d00:	add	r0, r0, r1
   14d04:	movw	r1, #0
   14d08:	strb	r1, [r0]
   14d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d10:	str	r0, [fp, #-20]	; 0xffffffec
   14d14:	b	14d80 <__assert_fail@plt+0x3d74>
   14d18:	ldr	r0, [fp, #8]
   14d1c:	cmp	r0, #2
   14d20:	bne	14d38 <__assert_fail@plt+0x3d2c>
   14d24:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14d28:	tst	r0, #1
   14d2c:	beq	14d38 <__assert_fail@plt+0x3d2c>
   14d30:	movw	r0, #4
   14d34:	str	r0, [fp, #8]
   14d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14d44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d48:	ldr	ip, [fp, #8]
   14d4c:	ldr	lr, [fp, #12]
   14d50:	mvn	r4, #2
   14d54:	and	lr, lr, r4
   14d58:	ldr	r4, [fp, #20]
   14d5c:	ldr	r5, [fp, #24]
   14d60:	str	ip, [sp]
   14d64:	str	lr, [sp, #4]
   14d68:	movw	ip, #0
   14d6c:	str	ip, [sp, #8]
   14d70:	str	r4, [sp, #12]
   14d74:	str	r5, [sp, #16]
   14d78:	bl	13654 <__assert_fail@plt+0x2648>
   14d7c:	str	r0, [fp, #-20]	; 0xffffffec
   14d80:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d84:	sub	sp, fp, #16
   14d88:	pop	{r4, r5, r6, sl, fp, pc}
   14d8c:	push	{fp, lr}
   14d90:	mov	fp, sp
   14d94:	sub	sp, sp, #16
   14d98:	str	r0, [fp, #-4]
   14d9c:	str	r1, [sp, #8]
   14da0:	str	r2, [sp, #4]
   14da4:	ldr	r0, [fp, #-4]
   14da8:	ldr	r1, [sp, #8]
   14dac:	ldr	r3, [sp, #4]
   14db0:	movw	r2, #0
   14db4:	bl	14dc0 <__assert_fail@plt+0x3db4>
   14db8:	mov	sp, fp
   14dbc:	pop	{fp, pc}
   14dc0:	push	{r4, r5, r6, sl, fp, lr}
   14dc4:	add	fp, sp, #16
   14dc8:	sub	sp, sp, #72	; 0x48
   14dcc:	str	r0, [fp, #-20]	; 0xffffffec
   14dd0:	str	r1, [fp, #-24]	; 0xffffffe8
   14dd4:	str	r2, [fp, #-28]	; 0xffffffe4
   14dd8:	str	r3, [fp, #-32]	; 0xffffffe0
   14ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14de0:	movw	r1, #0
   14de4:	cmp	r0, r1
   14de8:	beq	14df8 <__assert_fail@plt+0x3dec>
   14dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14df0:	str	r0, [sp, #32]
   14df4:	b	14e08 <__assert_fail@plt+0x3dfc>
   14df8:	movw	r0, #53664	; 0xd1a0
   14dfc:	movt	r0, #2
   14e00:	str	r0, [sp, #32]
   14e04:	b	14e08 <__assert_fail@plt+0x3dfc>
   14e08:	ldr	r0, [sp, #32]
   14e0c:	str	r0, [fp, #-36]	; 0xffffffdc
   14e10:	bl	10f40 <__errno_location@plt>
   14e14:	ldr	r0, [r0]
   14e18:	str	r0, [fp, #-40]	; 0xffffffd8
   14e1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e20:	ldr	r0, [r0, #4]
   14e24:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14e28:	movw	r1, #0
   14e2c:	cmp	lr, r1
   14e30:	movw	lr, #0
   14e34:	movne	lr, #1
   14e38:	tst	lr, #1
   14e3c:	mov	lr, r1
   14e40:	moveq	lr, #1
   14e44:	orr	r0, r0, lr
   14e48:	str	r0, [sp, #44]	; 0x2c
   14e4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e58:	ldr	r0, [r0]
   14e5c:	ldr	lr, [sp, #44]	; 0x2c
   14e60:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14e64:	add	ip, ip, #8
   14e68:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14e6c:	ldr	r4, [r4, #40]	; 0x28
   14e70:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14e74:	ldr	r5, [r5, #44]	; 0x2c
   14e78:	str	r0, [sp, #28]
   14e7c:	mov	r0, r1
   14e80:	ldr	r6, [sp, #28]
   14e84:	str	r6, [sp]
   14e88:	str	lr, [sp, #4]
   14e8c:	str	ip, [sp, #8]
   14e90:	str	r4, [sp, #12]
   14e94:	str	r5, [sp, #16]
   14e98:	bl	13654 <__assert_fail@plt+0x2648>
   14e9c:	add	r0, r0, #1
   14ea0:	str	r0, [sp, #40]	; 0x28
   14ea4:	ldr	r0, [sp, #40]	; 0x28
   14ea8:	bl	162e4 <__assert_fail@plt+0x52d8>
   14eac:	str	r0, [sp, #36]	; 0x24
   14eb0:	ldr	r0, [sp, #36]	; 0x24
   14eb4:	ldr	r1, [sp, #40]	; 0x28
   14eb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ec0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14ec4:	ldr	ip, [ip]
   14ec8:	ldr	lr, [sp, #44]	; 0x2c
   14ecc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14ed0:	add	r4, r4, #8
   14ed4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14ed8:	ldr	r5, [r5, #40]	; 0x28
   14edc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14ee0:	ldr	r6, [r6, #44]	; 0x2c
   14ee4:	str	ip, [sp]
   14ee8:	str	lr, [sp, #4]
   14eec:	str	r4, [sp, #8]
   14ef0:	str	r5, [sp, #12]
   14ef4:	str	r6, [sp, #16]
   14ef8:	bl	13654 <__assert_fail@plt+0x2648>
   14efc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f00:	str	r0, [sp, #24]
   14f04:	str	r1, [sp, #20]
   14f08:	bl	10f40 <__errno_location@plt>
   14f0c:	ldr	r1, [sp, #20]
   14f10:	str	r1, [r0]
   14f14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f18:	movw	r2, #0
   14f1c:	cmp	r0, r2
   14f20:	beq	14f34 <__assert_fail@plt+0x3f28>
   14f24:	ldr	r0, [sp, #40]	; 0x28
   14f28:	sub	r0, r0, #1
   14f2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f30:	str	r0, [r1]
   14f34:	ldr	r0, [sp, #36]	; 0x24
   14f38:	sub	sp, fp, #16
   14f3c:	pop	{r4, r5, r6, sl, fp, pc}
   14f40:	push	{fp, lr}
   14f44:	mov	fp, sp
   14f48:	sub	sp, sp, #8
   14f4c:	movw	r0, #53488	; 0xd0f0
   14f50:	movt	r0, #2
   14f54:	ldr	r0, [r0]
   14f58:	str	r0, [sp, #4]
   14f5c:	movw	r0, #1
   14f60:	str	r0, [sp]
   14f64:	ldr	r0, [sp]
   14f68:	movw	r1, #53492	; 0xd0f4
   14f6c:	movt	r1, #2
   14f70:	ldr	r1, [r1]
   14f74:	cmp	r0, r1
   14f78:	bge	14fa0 <__assert_fail@plt+0x3f94>
   14f7c:	ldr	r0, [sp, #4]
   14f80:	ldr	r1, [sp]
   14f84:	add	r0, r0, r1, lsl #3
   14f88:	ldr	r0, [r0, #4]
   14f8c:	bl	13078 <__assert_fail@plt+0x206c>
   14f90:	ldr	r0, [sp]
   14f94:	add	r0, r0, #1
   14f98:	str	r0, [sp]
   14f9c:	b	14f64 <__assert_fail@plt+0x3f58>
   14fa0:	ldr	r0, [sp, #4]
   14fa4:	ldr	r0, [r0, #4]
   14fa8:	movw	r1, #53712	; 0xd1d0
   14fac:	movt	r1, #2
   14fb0:	cmp	r0, r1
   14fb4:	beq	14fe0 <__assert_fail@plt+0x3fd4>
   14fb8:	ldr	r0, [sp, #4]
   14fbc:	ldr	r0, [r0, #4]
   14fc0:	bl	13078 <__assert_fail@plt+0x206c>
   14fc4:	movw	r0, #256	; 0x100
   14fc8:	movw	lr, #53496	; 0xd0f8
   14fcc:	movt	lr, #2
   14fd0:	str	r0, [lr]
   14fd4:	movw	r0, #53712	; 0xd1d0
   14fd8:	movt	r0, #2
   14fdc:	str	r0, [lr, #4]
   14fe0:	ldr	r0, [sp, #4]
   14fe4:	movw	r1, #53496	; 0xd0f8
   14fe8:	movt	r1, #2
   14fec:	cmp	r0, r1
   14ff0:	beq	15010 <__assert_fail@plt+0x4004>
   14ff4:	ldr	r0, [sp, #4]
   14ff8:	bl	13078 <__assert_fail@plt+0x206c>
   14ffc:	movw	r0, #53488	; 0xd0f0
   15000:	movt	r0, #2
   15004:	movw	lr, #53496	; 0xd0f8
   15008:	movt	lr, #2
   1500c:	str	lr, [r0]
   15010:	movw	r0, #53492	; 0xd0f4
   15014:	movt	r0, #2
   15018:	movw	r1, #1
   1501c:	str	r1, [r0]
   15020:	mov	sp, fp
   15024:	pop	{fp, pc}
   15028:	push	{fp, lr}
   1502c:	mov	fp, sp
   15030:	sub	sp, sp, #8
   15034:	str	r0, [sp, #4]
   15038:	str	r1, [sp]
   1503c:	ldr	r0, [sp, #4]
   15040:	ldr	r1, [sp]
   15044:	mvn	r2, #0
   15048:	movw	r3, #53664	; 0xd1a0
   1504c:	movt	r3, #2
   15050:	bl	1505c <__assert_fail@plt+0x4050>
   15054:	mov	sp, fp
   15058:	pop	{fp, pc}
   1505c:	push	{r4, r5, r6, sl, fp, lr}
   15060:	add	fp, sp, #16
   15064:	sub	sp, sp, #88	; 0x58
   15068:	str	r0, [fp, #-20]	; 0xffffffec
   1506c:	str	r1, [fp, #-24]	; 0xffffffe8
   15070:	str	r2, [fp, #-28]	; 0xffffffe4
   15074:	str	r3, [fp, #-32]	; 0xffffffe0
   15078:	bl	10f40 <__errno_location@plt>
   1507c:	ldr	r1, [pc, #676]	; 15328 <__assert_fail@plt+0x431c>
   15080:	ldr	r0, [r0]
   15084:	str	r0, [fp, #-36]	; 0xffffffdc
   15088:	movw	r0, #53488	; 0xd0f0
   1508c:	movt	r0, #2
   15090:	ldr	r0, [r0]
   15094:	str	r0, [fp, #-40]	; 0xffffffd8
   15098:	str	r1, [fp, #-44]	; 0xffffffd4
   1509c:	ldr	r0, [fp, #-20]	; 0xffffffec
   150a0:	movw	r1, #0
   150a4:	cmp	r1, r0
   150a8:	bgt	150bc <__assert_fail@plt+0x40b0>
   150ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   150b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   150b4:	cmp	r0, r1
   150b8:	blt	150c0 <__assert_fail@plt+0x40b4>
   150bc:	bl	10fe8 <abort@plt>
   150c0:	movw	r0, #53492	; 0xd0f4
   150c4:	movt	r0, #2
   150c8:	ldr	r0, [r0]
   150cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   150d0:	cmp	r0, r1
   150d4:	bgt	151cc <__assert_fail@plt+0x41c0>
   150d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150dc:	movw	r1, #53496	; 0xd0f8
   150e0:	movt	r1, #2
   150e4:	cmp	r0, r1
   150e8:	movw	r0, #0
   150ec:	moveq	r0, #1
   150f0:	and	r0, r0, #1
   150f4:	strb	r0, [fp, #-45]	; 0xffffffd3
   150f8:	movw	r0, #53492	; 0xd0f4
   150fc:	movt	r0, #2
   15100:	ldr	r0, [r0]
   15104:	str	r0, [sp, #52]	; 0x34
   15108:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1510c:	tst	r0, #1
   15110:	beq	15120 <__assert_fail@plt+0x4114>
   15114:	movw	r0, #0
   15118:	str	r0, [sp, #32]
   1511c:	b	15128 <__assert_fail@plt+0x411c>
   15120:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15124:	str	r0, [sp, #32]
   15128:	ldr	r0, [sp, #32]
   1512c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15130:	movw	r2, #53492	; 0xd0f4
   15134:	movt	r2, #2
   15138:	ldr	r2, [r2]
   1513c:	sub	r1, r1, r2
   15140:	add	r2, r1, #1
   15144:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15148:	add	r1, sp, #52	; 0x34
   1514c:	movw	ip, #8
   15150:	str	ip, [sp]
   15154:	bl	16520 <__assert_fail@plt+0x5514>
   15158:	str	r0, [fp, #-40]	; 0xffffffd8
   1515c:	movw	r1, #53488	; 0xd0f0
   15160:	movt	r1, #2
   15164:	str	r0, [r1]
   15168:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1516c:	tst	r0, #1
   15170:	beq	15190 <__assert_fail@plt+0x4184>
   15174:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15178:	movw	r1, #53496	; 0xd0f8
   1517c:	movt	r1, #2
   15180:	ldr	r2, [r1]
   15184:	str	r2, [r0]
   15188:	ldr	r1, [r1, #4]
   1518c:	str	r1, [r0, #4]
   15190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15194:	movw	r1, #53492	; 0xd0f4
   15198:	movt	r1, #2
   1519c:	ldr	r1, [r1]
   151a0:	add	r0, r0, r1, lsl #3
   151a4:	ldr	r2, [sp, #52]	; 0x34
   151a8:	sub	r1, r2, r1
   151ac:	lsl	r2, r1, #3
   151b0:	movw	r1, #0
   151b4:	and	r1, r1, #255	; 0xff
   151b8:	bl	10f58 <memset@plt>
   151bc:	ldr	r0, [sp, #52]	; 0x34
   151c0:	movw	r1, #53492	; 0xd0f4
   151c4:	movt	r1, #2
   151c8:	str	r0, [r1]
   151cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   151d4:	ldr	r0, [r0, r1, lsl #3]
   151d8:	str	r0, [sp, #48]	; 0x30
   151dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   151e4:	add	r0, r0, r1, lsl #3
   151e8:	ldr	r0, [r0, #4]
   151ec:	str	r0, [sp, #44]	; 0x2c
   151f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151f4:	ldr	r0, [r0, #4]
   151f8:	orr	r0, r0, #1
   151fc:	str	r0, [sp, #40]	; 0x28
   15200:	ldr	r0, [sp, #44]	; 0x2c
   15204:	ldr	r1, [sp, #48]	; 0x30
   15208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1520c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15210:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15214:	ldr	ip, [ip]
   15218:	ldr	lr, [sp, #40]	; 0x28
   1521c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15220:	add	r4, r4, #8
   15224:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15228:	ldr	r5, [r5, #40]	; 0x28
   1522c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15230:	ldr	r6, [r6, #44]	; 0x2c
   15234:	str	ip, [sp]
   15238:	str	lr, [sp, #4]
   1523c:	str	r4, [sp, #8]
   15240:	str	r5, [sp, #12]
   15244:	str	r6, [sp, #16]
   15248:	bl	13654 <__assert_fail@plt+0x2648>
   1524c:	str	r0, [sp, #36]	; 0x24
   15250:	ldr	r0, [sp, #48]	; 0x30
   15254:	ldr	r1, [sp, #36]	; 0x24
   15258:	cmp	r0, r1
   1525c:	bhi	15308 <__assert_fail@plt+0x42fc>
   15260:	ldr	r0, [sp, #36]	; 0x24
   15264:	add	r0, r0, #1
   15268:	str	r0, [sp, #48]	; 0x30
   1526c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15270:	ldr	r2, [fp, #-20]	; 0xffffffec
   15274:	add	r1, r1, r2, lsl #3
   15278:	str	r0, [r1]
   1527c:	ldr	r0, [sp, #44]	; 0x2c
   15280:	movw	r1, #53712	; 0xd1d0
   15284:	movt	r1, #2
   15288:	cmp	r0, r1
   1528c:	beq	15298 <__assert_fail@plt+0x428c>
   15290:	ldr	r0, [sp, #44]	; 0x2c
   15294:	bl	13078 <__assert_fail@plt+0x206c>
   15298:	ldr	r0, [sp, #48]	; 0x30
   1529c:	bl	162e4 <__assert_fail@plt+0x52d8>
   152a0:	mov	lr, r0
   152a4:	str	r0, [sp, #44]	; 0x2c
   152a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   152ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   152b0:	add	r0, r0, r1, lsl #3
   152b4:	str	lr, [r0, #4]
   152b8:	ldr	r0, [sp, #44]	; 0x2c
   152bc:	ldr	r1, [sp, #48]	; 0x30
   152c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   152c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152c8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   152cc:	ldr	lr, [lr]
   152d0:	ldr	ip, [sp, #40]	; 0x28
   152d4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   152d8:	add	r4, r4, #8
   152dc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   152e0:	ldr	r5, [r5, #40]	; 0x28
   152e4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   152e8:	ldr	r6, [r6, #44]	; 0x2c
   152ec:	str	lr, [sp]
   152f0:	str	ip, [sp, #4]
   152f4:	str	r4, [sp, #8]
   152f8:	str	r5, [sp, #12]
   152fc:	str	r6, [sp, #16]
   15300:	bl	13654 <__assert_fail@plt+0x2648>
   15304:	str	r0, [sp, #28]
   15308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1530c:	str	r0, [sp, #24]
   15310:	bl	10f40 <__errno_location@plt>
   15314:	ldr	lr, [sp, #24]
   15318:	str	lr, [r0]
   1531c:	ldr	r0, [sp, #44]	; 0x2c
   15320:	sub	sp, fp, #16
   15324:	pop	{r4, r5, r6, sl, fp, pc}
   15328:	svcvc	0x00ffffff
   1532c:	push	{fp, lr}
   15330:	mov	fp, sp
   15334:	sub	sp, sp, #16
   15338:	str	r0, [fp, #-4]
   1533c:	str	r1, [sp, #8]
   15340:	str	r2, [sp, #4]
   15344:	ldr	r0, [fp, #-4]
   15348:	ldr	r1, [sp, #8]
   1534c:	ldr	r2, [sp, #4]
   15350:	movw	r3, #53664	; 0xd1a0
   15354:	movt	r3, #2
   15358:	bl	1505c <__assert_fail@plt+0x4050>
   1535c:	mov	sp, fp
   15360:	pop	{fp, pc}
   15364:	push	{fp, lr}
   15368:	mov	fp, sp
   1536c:	sub	sp, sp, #8
   15370:	str	r0, [sp, #4]
   15374:	ldr	r1, [sp, #4]
   15378:	movw	r0, #0
   1537c:	bl	15028 <__assert_fail@plt+0x401c>
   15380:	mov	sp, fp
   15384:	pop	{fp, pc}
   15388:	push	{fp, lr}
   1538c:	mov	fp, sp
   15390:	sub	sp, sp, #8
   15394:	str	r0, [sp, #4]
   15398:	str	r1, [sp]
   1539c:	ldr	r1, [sp, #4]
   153a0:	ldr	r2, [sp]
   153a4:	movw	r0, #0
   153a8:	bl	1532c <__assert_fail@plt+0x4320>
   153ac:	mov	sp, fp
   153b0:	pop	{fp, pc}
   153b4:	push	{fp, lr}
   153b8:	mov	fp, sp
   153bc:	sub	sp, sp, #64	; 0x40
   153c0:	str	r0, [fp, #-4]
   153c4:	str	r1, [fp, #-8]
   153c8:	str	r2, [fp, #-12]
   153cc:	ldr	r1, [fp, #-8]
   153d0:	add	r0, sp, #4
   153d4:	bl	153f4 <__assert_fail@plt+0x43e8>
   153d8:	ldr	r0, [fp, #-4]
   153dc:	ldr	r1, [fp, #-12]
   153e0:	mvn	r2, #0
   153e4:	add	r3, sp, #4
   153e8:	bl	1505c <__assert_fail@plt+0x4050>
   153ec:	mov	sp, fp
   153f0:	pop	{fp, pc}
   153f4:	push	{fp, lr}
   153f8:	mov	fp, sp
   153fc:	sub	sp, sp, #8
   15400:	str	r1, [sp, #4]
   15404:	mov	r1, r0
   15408:	str	r0, [sp]
   1540c:	mov	r0, r1
   15410:	movw	r1, #0
   15414:	and	r1, r1, #255	; 0xff
   15418:	movw	r2, #48	; 0x30
   1541c:	bl	10f58 <memset@plt>
   15420:	ldr	r0, [sp, #4]
   15424:	cmp	r0, #10
   15428:	bne	15430 <__assert_fail@plt+0x4424>
   1542c:	bl	10fe8 <abort@plt>
   15430:	ldr	r0, [sp, #4]
   15434:	ldr	r1, [sp]
   15438:	str	r0, [r1]
   1543c:	mov	sp, fp
   15440:	pop	{fp, pc}
   15444:	push	{fp, lr}
   15448:	mov	fp, sp
   1544c:	sub	sp, sp, #64	; 0x40
   15450:	str	r0, [fp, #-4]
   15454:	str	r1, [fp, #-8]
   15458:	str	r2, [fp, #-12]
   1545c:	str	r3, [fp, #-16]
   15460:	ldr	r1, [fp, #-8]
   15464:	mov	r0, sp
   15468:	bl	153f4 <__assert_fail@plt+0x43e8>
   1546c:	ldr	r0, [fp, #-4]
   15470:	ldr	r1, [fp, #-12]
   15474:	ldr	r2, [fp, #-16]
   15478:	mov	r3, sp
   1547c:	bl	1505c <__assert_fail@plt+0x4050>
   15480:	mov	sp, fp
   15484:	pop	{fp, pc}
   15488:	push	{fp, lr}
   1548c:	mov	fp, sp
   15490:	sub	sp, sp, #8
   15494:	str	r0, [sp, #4]
   15498:	str	r1, [sp]
   1549c:	ldr	r1, [sp, #4]
   154a0:	ldr	r2, [sp]
   154a4:	movw	r0, #0
   154a8:	bl	153b4 <__assert_fail@plt+0x43a8>
   154ac:	mov	sp, fp
   154b0:	pop	{fp, pc}
   154b4:	push	{fp, lr}
   154b8:	mov	fp, sp
   154bc:	sub	sp, sp, #16
   154c0:	str	r0, [fp, #-4]
   154c4:	str	r1, [sp, #8]
   154c8:	str	r2, [sp, #4]
   154cc:	ldr	r1, [fp, #-4]
   154d0:	ldr	r2, [sp, #8]
   154d4:	ldr	r3, [sp, #4]
   154d8:	movw	r0, #0
   154dc:	bl	15444 <__assert_fail@plt+0x4438>
   154e0:	mov	sp, fp
   154e4:	pop	{fp, pc}
   154e8:	push	{fp, lr}
   154ec:	mov	fp, sp
   154f0:	sub	sp, sp, #72	; 0x48
   154f4:	movw	r3, #53664	; 0xd1a0
   154f8:	movt	r3, #2
   154fc:	str	r0, [fp, #-4]
   15500:	str	r1, [fp, #-8]
   15504:	strb	r2, [fp, #-9]
   15508:	add	r0, sp, #12
   1550c:	mov	r1, r0
   15510:	str	r0, [sp, #8]
   15514:	mov	r0, r1
   15518:	mov	r1, r3
   1551c:	movw	r2, #48	; 0x30
   15520:	bl	10e2c <memcpy@plt>
   15524:	ldr	r0, [sp, #8]
   15528:	ldrb	r1, [fp, #-9]
   1552c:	movw	r2, #1
   15530:	bl	133f8 <__assert_fail@plt+0x23ec>
   15534:	ldr	r1, [fp, #-4]
   15538:	ldr	r2, [fp, #-8]
   1553c:	movw	r3, #0
   15540:	str	r0, [sp, #4]
   15544:	mov	r0, r3
   15548:	add	r3, sp, #12
   1554c:	bl	1505c <__assert_fail@plt+0x4050>
   15550:	mov	sp, fp
   15554:	pop	{fp, pc}
   15558:	push	{fp, lr}
   1555c:	mov	fp, sp
   15560:	sub	sp, sp, #8
   15564:	str	r0, [sp, #4]
   15568:	strb	r1, [sp, #3]
   1556c:	ldr	r0, [sp, #4]
   15570:	mvn	r1, #0
   15574:	ldrb	r2, [sp, #3]
   15578:	bl	154e8 <__assert_fail@plt+0x44dc>
   1557c:	mov	sp, fp
   15580:	pop	{fp, pc}
   15584:	push	{fp, lr}
   15588:	mov	fp, sp
   1558c:	sub	sp, sp, #8
   15590:	str	r0, [sp, #4]
   15594:	ldr	r0, [sp, #4]
   15598:	movw	r1, #58	; 0x3a
   1559c:	and	r1, r1, #255	; 0xff
   155a0:	bl	15558 <__assert_fail@plt+0x454c>
   155a4:	mov	sp, fp
   155a8:	pop	{fp, pc}
   155ac:	push	{fp, lr}
   155b0:	mov	fp, sp
   155b4:	sub	sp, sp, #8
   155b8:	str	r0, [sp, #4]
   155bc:	str	r1, [sp]
   155c0:	ldr	r0, [sp, #4]
   155c4:	ldr	r1, [sp]
   155c8:	movw	r2, #58	; 0x3a
   155cc:	and	r2, r2, #255	; 0xff
   155d0:	bl	154e8 <__assert_fail@plt+0x44dc>
   155d4:	mov	sp, fp
   155d8:	pop	{fp, pc}
   155dc:	push	{fp, lr}
   155e0:	mov	fp, sp
   155e4:	sub	sp, sp, #120	; 0x78
   155e8:	str	r0, [fp, #-4]
   155ec:	str	r1, [fp, #-8]
   155f0:	str	r2, [fp, #-12]
   155f4:	ldr	r1, [fp, #-8]
   155f8:	add	r0, sp, #12
   155fc:	bl	153f4 <__assert_fail@plt+0x43e8>
   15600:	add	r0, sp, #60	; 0x3c
   15604:	mov	r1, r0
   15608:	add	r2, sp, #12
   1560c:	str	r0, [sp, #8]
   15610:	mov	r0, r1
   15614:	mov	r1, r2
   15618:	movw	r2, #48	; 0x30
   1561c:	bl	10e2c <memcpy@plt>
   15620:	ldr	r0, [sp, #8]
   15624:	movw	r1, #58	; 0x3a
   15628:	and	r1, r1, #255	; 0xff
   1562c:	movw	r2, #1
   15630:	bl	133f8 <__assert_fail@plt+0x23ec>
   15634:	ldr	r1, [fp, #-4]
   15638:	ldr	r2, [fp, #-12]
   1563c:	str	r0, [sp, #4]
   15640:	mov	r0, r1
   15644:	mov	r1, r2
   15648:	mvn	r2, #0
   1564c:	add	r3, sp, #60	; 0x3c
   15650:	bl	1505c <__assert_fail@plt+0x4050>
   15654:	mov	sp, fp
   15658:	pop	{fp, pc}
   1565c:	push	{fp, lr}
   15660:	mov	fp, sp
   15664:	sub	sp, sp, #24
   15668:	str	r0, [fp, #-4]
   1566c:	str	r1, [fp, #-8]
   15670:	str	r2, [sp, #12]
   15674:	str	r3, [sp, #8]
   15678:	ldr	r0, [fp, #-4]
   1567c:	ldr	r1, [fp, #-8]
   15680:	ldr	r2, [sp, #12]
   15684:	ldr	r3, [sp, #8]
   15688:	mvn	ip, #0
   1568c:	str	ip, [sp]
   15690:	bl	1569c <__assert_fail@plt+0x4690>
   15694:	mov	sp, fp
   15698:	pop	{fp, pc}
   1569c:	push	{fp, lr}
   156a0:	mov	fp, sp
   156a4:	sub	sp, sp, #72	; 0x48
   156a8:	ldr	ip, [fp, #8]
   156ac:	movw	lr, #53664	; 0xd1a0
   156b0:	movt	lr, #2
   156b4:	str	r0, [fp, #-4]
   156b8:	str	r1, [fp, #-8]
   156bc:	str	r2, [fp, #-12]
   156c0:	str	r3, [fp, #-16]
   156c4:	add	r0, sp, #8
   156c8:	mov	r1, r0
   156cc:	str	r0, [sp, #4]
   156d0:	mov	r0, r1
   156d4:	mov	r1, lr
   156d8:	movw	r2, #48	; 0x30
   156dc:	str	ip, [sp]
   156e0:	bl	10e2c <memcpy@plt>
   156e4:	ldr	r1, [fp, #-8]
   156e8:	ldr	r2, [fp, #-12]
   156ec:	ldr	r0, [sp, #4]
   156f0:	bl	134f8 <__assert_fail@plt+0x24ec>
   156f4:	ldr	r0, [fp, #-4]
   156f8:	ldr	r1, [fp, #-16]
   156fc:	ldr	r2, [fp, #8]
   15700:	add	r3, sp, #8
   15704:	bl	1505c <__assert_fail@plt+0x4050>
   15708:	mov	sp, fp
   1570c:	pop	{fp, pc}
   15710:	push	{fp, lr}
   15714:	mov	fp, sp
   15718:	sub	sp, sp, #16
   1571c:	str	r0, [fp, #-4]
   15720:	str	r1, [sp, #8]
   15724:	str	r2, [sp, #4]
   15728:	ldr	r1, [fp, #-4]
   1572c:	ldr	r2, [sp, #8]
   15730:	ldr	r3, [sp, #4]
   15734:	movw	r0, #0
   15738:	bl	1565c <__assert_fail@plt+0x4650>
   1573c:	mov	sp, fp
   15740:	pop	{fp, pc}
   15744:	push	{fp, lr}
   15748:	mov	fp, sp
   1574c:	sub	sp, sp, #24
   15750:	str	r0, [fp, #-4]
   15754:	str	r1, [fp, #-8]
   15758:	str	r2, [sp, #12]
   1575c:	str	r3, [sp, #8]
   15760:	ldr	r1, [fp, #-4]
   15764:	ldr	r2, [fp, #-8]
   15768:	ldr	r3, [sp, #12]
   1576c:	ldr	r0, [sp, #8]
   15770:	movw	ip, #0
   15774:	str	r0, [sp, #4]
   15778:	mov	r0, ip
   1577c:	ldr	ip, [sp, #4]
   15780:	str	ip, [sp]
   15784:	bl	1569c <__assert_fail@plt+0x4690>
   15788:	mov	sp, fp
   1578c:	pop	{fp, pc}
   15790:	push	{fp, lr}
   15794:	mov	fp, sp
   15798:	sub	sp, sp, #16
   1579c:	str	r0, [fp, #-4]
   157a0:	str	r1, [sp, #8]
   157a4:	str	r2, [sp, #4]
   157a8:	ldr	r0, [fp, #-4]
   157ac:	ldr	r1, [sp, #8]
   157b0:	ldr	r2, [sp, #4]
   157b4:	movw	r3, #53504	; 0xd100
   157b8:	movt	r3, #2
   157bc:	bl	1505c <__assert_fail@plt+0x4050>
   157c0:	mov	sp, fp
   157c4:	pop	{fp, pc}
   157c8:	push	{fp, lr}
   157cc:	mov	fp, sp
   157d0:	sub	sp, sp, #8
   157d4:	str	r0, [sp, #4]
   157d8:	str	r1, [sp]
   157dc:	ldr	r1, [sp, #4]
   157e0:	ldr	r2, [sp]
   157e4:	movw	r0, #0
   157e8:	bl	15790 <__assert_fail@plt+0x4784>
   157ec:	mov	sp, fp
   157f0:	pop	{fp, pc}
   157f4:	push	{fp, lr}
   157f8:	mov	fp, sp
   157fc:	sub	sp, sp, #8
   15800:	str	r0, [sp, #4]
   15804:	str	r1, [sp]
   15808:	ldr	r0, [sp, #4]
   1580c:	ldr	r1, [sp]
   15810:	mvn	r2, #0
   15814:	bl	15790 <__assert_fail@plt+0x4784>
   15818:	mov	sp, fp
   1581c:	pop	{fp, pc}
   15820:	push	{fp, lr}
   15824:	mov	fp, sp
   15828:	sub	sp, sp, #8
   1582c:	str	r0, [sp, #4]
   15830:	ldr	r1, [sp, #4]
   15834:	movw	r0, #0
   15838:	bl	157f4 <__assert_fail@plt+0x47e8>
   1583c:	mov	sp, fp
   15840:	pop	{fp, pc}
   15844:	push	{fp, lr}
   15848:	mov	fp, sp
   1584c:	sub	sp, sp, #24
   15850:	str	r0, [fp, #-8]
   15854:	str	r1, [sp, #12]
   15858:	ldr	r0, [fp, #-8]
   1585c:	bl	10f1c <gettext@plt>
   15860:	str	r0, [sp, #8]
   15864:	ldr	r0, [sp, #8]
   15868:	ldr	r1, [fp, #-8]
   1586c:	cmp	r0, r1
   15870:	beq	15880 <__assert_fail@plt+0x4874>
   15874:	ldr	r0, [sp, #8]
   15878:	str	r0, [fp, #-4]
   1587c:	b	1594c <__assert_fail@plt+0x4940>
   15880:	bl	195a4 <__assert_fail@plt+0x8598>
   15884:	str	r0, [sp, #4]
   15888:	ldr	r0, [sp, #4]
   1588c:	movw	r1, #48520	; 0xbd88
   15890:	movt	r1, #1
   15894:	bl	19248 <__assert_fail@plt+0x823c>
   15898:	cmp	r0, #0
   1589c:	bne	158d4 <__assert_fail@plt+0x48c8>
   158a0:	ldr	r0, [fp, #-8]
   158a4:	ldrb	r0, [r0]
   158a8:	cmp	r0, #96	; 0x60
   158ac:	movw	r0, #0
   158b0:	moveq	r0, #1
   158b4:	tst	r0, #1
   158b8:	movw	r0, #48530	; 0xbd92
   158bc:	movt	r0, #1
   158c0:	movw	r1, #48526	; 0xbd8e
   158c4:	movt	r1, #1
   158c8:	movne	r0, r1
   158cc:	str	r0, [fp, #-4]
   158d0:	b	1594c <__assert_fail@plt+0x4940>
   158d4:	ldr	r0, [sp, #4]
   158d8:	movw	r1, #48534	; 0xbd96
   158dc:	movt	r1, #1
   158e0:	bl	19248 <__assert_fail@plt+0x823c>
   158e4:	cmp	r0, #0
   158e8:	bne	15920 <__assert_fail@plt+0x4914>
   158ec:	ldr	r0, [fp, #-8]
   158f0:	ldrb	r0, [r0]
   158f4:	cmp	r0, #96	; 0x60
   158f8:	movw	r0, #0
   158fc:	moveq	r0, #1
   15900:	tst	r0, #1
   15904:	movw	r0, #48546	; 0xbda2
   15908:	movt	r0, #1
   1590c:	movw	r1, #48542	; 0xbd9e
   15910:	movt	r1, #1
   15914:	movne	r0, r1
   15918:	str	r0, [fp, #-4]
   1591c:	b	1594c <__assert_fail@plt+0x4940>
   15920:	ldr	r0, [sp, #12]
   15924:	cmp	r0, #9
   15928:	movw	r0, #0
   1592c:	moveq	r0, #1
   15930:	tst	r0, #1
   15934:	movw	r0, #48348	; 0xbcdc
   15938:	movt	r0, #1
   1593c:	movw	r1, #48516	; 0xbd84
   15940:	movt	r1, #1
   15944:	movne	r0, r1
   15948:	str	r0, [fp, #-4]
   1594c:	ldr	r0, [fp, #-4]
   15950:	mov	sp, fp
   15954:	pop	{fp, pc}
   15958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1595c:	add	fp, sp, #28
   15960:	sub	sp, sp, #260	; 0x104
   15964:	ldr	ip, [fp, #12]
   15968:	ldr	lr, [fp, #8]
   1596c:	str	r0, [fp, #-32]	; 0xffffffe0
   15970:	str	r1, [fp, #-36]	; 0xffffffdc
   15974:	str	r2, [fp, #-40]	; 0xffffffd8
   15978:	str	r3, [fp, #-44]	; 0xffffffd4
   1597c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15980:	movw	r1, #0
   15984:	cmp	r0, r1
   15988:	str	lr, [fp, #-48]	; 0xffffffd0
   1598c:	str	ip, [fp, #-52]	; 0xffffffcc
   15990:	beq	159c8 <__assert_fail@plt+0x49bc>
   15994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15998:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1599c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   159a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159a4:	movw	ip, #48636	; 0xbdfc
   159a8:	movt	ip, #1
   159ac:	str	r1, [fp, #-56]	; 0xffffffc8
   159b0:	mov	r1, ip
   159b4:	ldr	ip, [fp, #-56]	; 0xffffffc8
   159b8:	str	ip, [sp]
   159bc:	bl	10f34 <fprintf@plt>
   159c0:	str	r0, [fp, #-60]	; 0xffffffc4
   159c4:	b	159e4 <__assert_fail@plt+0x49d8>
   159c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   159d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   159d4:	movw	r1, #48648	; 0xbe08
   159d8:	movt	r1, #1
   159dc:	bl	10f34 <fprintf@plt>
   159e0:	str	r0, [fp, #-64]	; 0xffffffc0
   159e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159e8:	movw	r1, #48655	; 0xbe0f
   159ec:	movt	r1, #1
   159f0:	str	r0, [fp, #-68]	; 0xffffffbc
   159f4:	mov	r0, r1
   159f8:	bl	10f1c <gettext@plt>
   159fc:	movw	r1, #49373	; 0xc0dd
   15a00:	movt	r1, #1
   15a04:	movw	r3, #2022	; 0x7e6
   15a08:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15a0c:	str	r0, [fp, #-72]	; 0xffffffb8
   15a10:	mov	r0, lr
   15a14:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15a18:	bl	10f34 <fprintf@plt>
   15a1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a20:	movw	r2, #47258	; 0xb89a
   15a24:	movt	r2, #1
   15a28:	str	r0, [fp, #-76]	; 0xffffffb4
   15a2c:	mov	r0, r2
   15a30:	str	r2, [fp, #-80]	; 0xffffffb0
   15a34:	bl	10dcc <fputs_unlocked@plt>
   15a38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a3c:	movw	r2, #48659	; 0xbe13
   15a40:	movt	r2, #1
   15a44:	str	r0, [fp, #-84]	; 0xffffffac
   15a48:	mov	r0, r2
   15a4c:	str	r1, [fp, #-88]	; 0xffffffa8
   15a50:	bl	10f1c <gettext@plt>
   15a54:	movw	r2, #48830	; 0xbebe
   15a58:	movt	r2, #1
   15a5c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15a60:	str	r0, [fp, #-92]	; 0xffffffa4
   15a64:	mov	r0, r1
   15a68:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15a6c:	bl	10f34 <fprintf@plt>
   15a70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a74:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15a78:	str	r0, [fp, #-96]	; 0xffffffa0
   15a7c:	mov	r0, r2
   15a80:	bl	10dcc <fputs_unlocked@plt>
   15a84:	ldr	r1, [fp, #12]
   15a88:	cmp	r1, #9
   15a8c:	str	r0, [fp, #-100]	; 0xffffff9c
   15a90:	str	r1, [fp, #-104]	; 0xffffff98
   15a94:	bhi	15ed4 <__assert_fail@plt+0x4ec8>
   15a98:	add	r0, pc, #8
   15a9c:	ldr	r1, [fp, #-104]	; 0xffffff98
   15aa0:	ldr	r0, [r0, r1, lsl #2]
   15aa4:	mov	pc, r0
   15aa8:	ldrdeq	r5, [r1], -r0
   15aac:	ldrdeq	r5, [r1], -r4
   15ab0:	andeq	r5, r1, r0, lsl fp
   15ab4:	andeq	r5, r1, r4, asr fp
   15ab8:			; <UNDEFINED> instruction: 0x00015bb0
   15abc:	andeq	r5, r1, r8, lsl ip
   15ac0:	andeq	r5, r1, ip, lsl #25
   15ac4:	andeq	r5, r1, ip, lsl #26
   15ac8:	muleq	r1, r8, sp
   15acc:	andeq	r5, r1, r0, lsr lr
   15ad0:	b	15f74 <__assert_fail@plt+0x4f68>
   15ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ad8:	movw	r1, #48864	; 0xbee0
   15adc:	movt	r1, #1
   15ae0:	str	r0, [fp, #-108]	; 0xffffff94
   15ae4:	mov	r0, r1
   15ae8:	bl	10f1c <gettext@plt>
   15aec:	ldr	r1, [fp, #8]
   15af0:	ldr	r2, [r1]
   15af4:	ldr	r1, [fp, #-108]	; 0xffffff94
   15af8:	str	r0, [fp, #-112]	; 0xffffff90
   15afc:	mov	r0, r1
   15b00:	ldr	r1, [fp, #-112]	; 0xffffff90
   15b04:	bl	10f34 <fprintf@plt>
   15b08:	str	r0, [fp, #-116]	; 0xffffff8c
   15b0c:	b	15f74 <__assert_fail@plt+0x4f68>
   15b10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b14:	movw	r1, #48880	; 0xbef0
   15b18:	movt	r1, #1
   15b1c:	str	r0, [fp, #-120]	; 0xffffff88
   15b20:	mov	r0, r1
   15b24:	bl	10f1c <gettext@plt>
   15b28:	ldr	r1, [fp, #8]
   15b2c:	ldr	r2, [r1]
   15b30:	ldr	r1, [fp, #8]
   15b34:	ldr	r3, [r1, #4]
   15b38:	ldr	r1, [fp, #-120]	; 0xffffff88
   15b3c:	str	r0, [fp, #-124]	; 0xffffff84
   15b40:	mov	r0, r1
   15b44:	ldr	r1, [fp, #-124]	; 0xffffff84
   15b48:	bl	10f34 <fprintf@plt>
   15b4c:	str	r0, [fp, #-128]	; 0xffffff80
   15b50:	b	15f74 <__assert_fail@plt+0x4f68>
   15b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b58:	movw	r1, #48903	; 0xbf07
   15b5c:	movt	r1, #1
   15b60:	str	r0, [fp, #-132]	; 0xffffff7c
   15b64:	mov	r0, r1
   15b68:	bl	10f1c <gettext@plt>
   15b6c:	ldr	r1, [fp, #8]
   15b70:	ldr	r2, [r1]
   15b74:	ldr	r1, [fp, #8]
   15b78:	ldr	r3, [r1, #4]
   15b7c:	ldr	r1, [fp, #8]
   15b80:	ldr	r1, [r1, #8]
   15b84:	ldr	lr, [fp, #-132]	; 0xffffff7c
   15b88:	str	r0, [fp, #-136]	; 0xffffff78
   15b8c:	mov	r0, lr
   15b90:	ldr	ip, [fp, #-136]	; 0xffffff78
   15b94:	str	r1, [fp, #-140]	; 0xffffff74
   15b98:	mov	r1, ip
   15b9c:	ldr	r4, [fp, #-140]	; 0xffffff74
   15ba0:	str	r4, [sp]
   15ba4:	bl	10f34 <fprintf@plt>
   15ba8:	str	r0, [sp, #144]	; 0x90
   15bac:	b	15f74 <__assert_fail@plt+0x4f68>
   15bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bb4:	movw	r1, #48931	; 0xbf23
   15bb8:	movt	r1, #1
   15bbc:	str	r0, [sp, #140]	; 0x8c
   15bc0:	mov	r0, r1
   15bc4:	bl	10f1c <gettext@plt>
   15bc8:	ldr	r1, [fp, #8]
   15bcc:	ldr	r2, [r1]
   15bd0:	ldr	r1, [fp, #8]
   15bd4:	ldr	r3, [r1, #4]
   15bd8:	ldr	r1, [fp, #8]
   15bdc:	ldr	r1, [r1, #8]
   15be0:	ldr	lr, [fp, #8]
   15be4:	ldr	lr, [lr, #12]
   15be8:	ldr	ip, [sp, #140]	; 0x8c
   15bec:	str	r0, [sp, #136]	; 0x88
   15bf0:	mov	r0, ip
   15bf4:	ldr	r4, [sp, #136]	; 0x88
   15bf8:	str	r1, [sp, #132]	; 0x84
   15bfc:	mov	r1, r4
   15c00:	ldr	r5, [sp, #132]	; 0x84
   15c04:	str	r5, [sp]
   15c08:	str	lr, [sp, #4]
   15c0c:	bl	10f34 <fprintf@plt>
   15c10:	str	r0, [sp, #128]	; 0x80
   15c14:	b	15f74 <__assert_fail@plt+0x4f68>
   15c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c1c:	movw	r1, #48963	; 0xbf43
   15c20:	movt	r1, #1
   15c24:	str	r0, [sp, #124]	; 0x7c
   15c28:	mov	r0, r1
   15c2c:	bl	10f1c <gettext@plt>
   15c30:	ldr	r1, [fp, #8]
   15c34:	ldr	r2, [r1]
   15c38:	ldr	r1, [fp, #8]
   15c3c:	ldr	r3, [r1, #4]
   15c40:	ldr	r1, [fp, #8]
   15c44:	ldr	r1, [r1, #8]
   15c48:	ldr	lr, [fp, #8]
   15c4c:	ldr	lr, [lr, #12]
   15c50:	ldr	ip, [fp, #8]
   15c54:	ldr	ip, [ip, #16]
   15c58:	ldr	r4, [sp, #124]	; 0x7c
   15c5c:	str	r0, [sp, #120]	; 0x78
   15c60:	mov	r0, r4
   15c64:	ldr	r5, [sp, #120]	; 0x78
   15c68:	str	r1, [sp, #116]	; 0x74
   15c6c:	mov	r1, r5
   15c70:	ldr	r6, [sp, #116]	; 0x74
   15c74:	str	r6, [sp]
   15c78:	str	lr, [sp, #4]
   15c7c:	str	ip, [sp, #8]
   15c80:	bl	10f34 <fprintf@plt>
   15c84:	str	r0, [sp, #112]	; 0x70
   15c88:	b	15f74 <__assert_fail@plt+0x4f68>
   15c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c90:	movw	r1, #48999	; 0xbf67
   15c94:	movt	r1, #1
   15c98:	str	r0, [sp, #108]	; 0x6c
   15c9c:	mov	r0, r1
   15ca0:	bl	10f1c <gettext@plt>
   15ca4:	ldr	r1, [fp, #8]
   15ca8:	ldr	r2, [r1]
   15cac:	ldr	r1, [fp, #8]
   15cb0:	ldr	r3, [r1, #4]
   15cb4:	ldr	r1, [fp, #8]
   15cb8:	ldr	r1, [r1, #8]
   15cbc:	ldr	lr, [fp, #8]
   15cc0:	ldr	lr, [lr, #12]
   15cc4:	ldr	ip, [fp, #8]
   15cc8:	ldr	ip, [ip, #16]
   15ccc:	ldr	r4, [fp, #8]
   15cd0:	ldr	r4, [r4, #20]
   15cd4:	ldr	r5, [sp, #108]	; 0x6c
   15cd8:	str	r0, [sp, #104]	; 0x68
   15cdc:	mov	r0, r5
   15ce0:	ldr	r6, [sp, #104]	; 0x68
   15ce4:	str	r1, [sp, #100]	; 0x64
   15ce8:	mov	r1, r6
   15cec:	ldr	r7, [sp, #100]	; 0x64
   15cf0:	str	r7, [sp]
   15cf4:	str	lr, [sp, #4]
   15cf8:	str	ip, [sp, #8]
   15cfc:	str	r4, [sp, #12]
   15d00:	bl	10f34 <fprintf@plt>
   15d04:	str	r0, [sp, #96]	; 0x60
   15d08:	b	15f74 <__assert_fail@plt+0x4f68>
   15d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d10:	movw	r1, #49039	; 0xbf8f
   15d14:	movt	r1, #1
   15d18:	str	r0, [sp, #92]	; 0x5c
   15d1c:	mov	r0, r1
   15d20:	bl	10f1c <gettext@plt>
   15d24:	ldr	r1, [fp, #8]
   15d28:	ldr	r2, [r1]
   15d2c:	ldr	r1, [fp, #8]
   15d30:	ldr	r3, [r1, #4]
   15d34:	ldr	r1, [fp, #8]
   15d38:	ldr	r1, [r1, #8]
   15d3c:	ldr	lr, [fp, #8]
   15d40:	ldr	lr, [lr, #12]
   15d44:	ldr	ip, [fp, #8]
   15d48:	ldr	ip, [ip, #16]
   15d4c:	ldr	r4, [fp, #8]
   15d50:	ldr	r4, [r4, #20]
   15d54:	ldr	r5, [fp, #8]
   15d58:	ldr	r5, [r5, #24]
   15d5c:	ldr	r6, [sp, #92]	; 0x5c
   15d60:	str	r0, [sp, #88]	; 0x58
   15d64:	mov	r0, r6
   15d68:	ldr	r7, [sp, #88]	; 0x58
   15d6c:	str	r1, [sp, #84]	; 0x54
   15d70:	mov	r1, r7
   15d74:	ldr	r8, [sp, #84]	; 0x54
   15d78:	str	r8, [sp]
   15d7c:	str	lr, [sp, #4]
   15d80:	str	ip, [sp, #8]
   15d84:	str	r4, [sp, #12]
   15d88:	str	r5, [sp, #16]
   15d8c:	bl	10f34 <fprintf@plt>
   15d90:	str	r0, [sp, #80]	; 0x50
   15d94:	b	15f74 <__assert_fail@plt+0x4f68>
   15d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d9c:	movw	r1, #49083	; 0xbfbb
   15da0:	movt	r1, #1
   15da4:	str	r0, [sp, #76]	; 0x4c
   15da8:	mov	r0, r1
   15dac:	bl	10f1c <gettext@plt>
   15db0:	ldr	r1, [fp, #8]
   15db4:	ldr	r2, [r1]
   15db8:	ldr	r1, [fp, #8]
   15dbc:	ldr	r3, [r1, #4]
   15dc0:	ldr	r1, [fp, #8]
   15dc4:	ldr	r1, [r1, #8]
   15dc8:	ldr	lr, [fp, #8]
   15dcc:	ldr	lr, [lr, #12]
   15dd0:	ldr	ip, [fp, #8]
   15dd4:	ldr	ip, [ip, #16]
   15dd8:	ldr	r4, [fp, #8]
   15ddc:	ldr	r4, [r4, #20]
   15de0:	ldr	r5, [fp, #8]
   15de4:	ldr	r5, [r5, #24]
   15de8:	ldr	r6, [fp, #8]
   15dec:	ldr	r6, [r6, #28]
   15df0:	ldr	r7, [sp, #76]	; 0x4c
   15df4:	str	r0, [sp, #72]	; 0x48
   15df8:	mov	r0, r7
   15dfc:	ldr	r8, [sp, #72]	; 0x48
   15e00:	str	r1, [sp, #68]	; 0x44
   15e04:	mov	r1, r8
   15e08:	ldr	r9, [sp, #68]	; 0x44
   15e0c:	str	r9, [sp]
   15e10:	str	lr, [sp, #4]
   15e14:	str	ip, [sp, #8]
   15e18:	str	r4, [sp, #12]
   15e1c:	str	r5, [sp, #16]
   15e20:	str	r6, [sp, #20]
   15e24:	bl	10f34 <fprintf@plt>
   15e28:	str	r0, [sp, #64]	; 0x40
   15e2c:	b	15f74 <__assert_fail@plt+0x4f68>
   15e30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e34:	movw	r1, #49131	; 0xbfeb
   15e38:	movt	r1, #1
   15e3c:	str	r0, [sp, #60]	; 0x3c
   15e40:	mov	r0, r1
   15e44:	bl	10f1c <gettext@plt>
   15e48:	ldr	r1, [fp, #8]
   15e4c:	ldr	r2, [r1]
   15e50:	ldr	r1, [fp, #8]
   15e54:	ldr	r3, [r1, #4]
   15e58:	ldr	r1, [fp, #8]
   15e5c:	ldr	r1, [r1, #8]
   15e60:	ldr	lr, [fp, #8]
   15e64:	ldr	lr, [lr, #12]
   15e68:	ldr	ip, [fp, #8]
   15e6c:	ldr	ip, [ip, #16]
   15e70:	ldr	r4, [fp, #8]
   15e74:	ldr	r4, [r4, #20]
   15e78:	ldr	r5, [fp, #8]
   15e7c:	ldr	r5, [r5, #24]
   15e80:	ldr	r6, [fp, #8]
   15e84:	ldr	r6, [r6, #28]
   15e88:	ldr	r7, [fp, #8]
   15e8c:	ldr	r7, [r7, #32]
   15e90:	ldr	r8, [sp, #60]	; 0x3c
   15e94:	str	r0, [sp, #56]	; 0x38
   15e98:	mov	r0, r8
   15e9c:	ldr	r9, [sp, #56]	; 0x38
   15ea0:	str	r1, [sp, #52]	; 0x34
   15ea4:	mov	r1, r9
   15ea8:	ldr	sl, [sp, #52]	; 0x34
   15eac:	str	sl, [sp]
   15eb0:	str	lr, [sp, #4]
   15eb4:	str	ip, [sp, #8]
   15eb8:	str	r4, [sp, #12]
   15ebc:	str	r5, [sp, #16]
   15ec0:	str	r6, [sp, #20]
   15ec4:	str	r7, [sp, #24]
   15ec8:	bl	10f34 <fprintf@plt>
   15ecc:	str	r0, [sp, #48]	; 0x30
   15ed0:	b	15f74 <__assert_fail@plt+0x4f68>
   15ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ed8:	movw	r1, #49183	; 0xc01f
   15edc:	movt	r1, #1
   15ee0:	str	r0, [sp, #44]	; 0x2c
   15ee4:	mov	r0, r1
   15ee8:	bl	10f1c <gettext@plt>
   15eec:	ldr	r1, [fp, #8]
   15ef0:	ldr	r2, [r1]
   15ef4:	ldr	r1, [fp, #8]
   15ef8:	ldr	r3, [r1, #4]
   15efc:	ldr	r1, [fp, #8]
   15f00:	ldr	r1, [r1, #8]
   15f04:	ldr	lr, [fp, #8]
   15f08:	ldr	lr, [lr, #12]
   15f0c:	ldr	ip, [fp, #8]
   15f10:	ldr	ip, [ip, #16]
   15f14:	ldr	r4, [fp, #8]
   15f18:	ldr	r4, [r4, #20]
   15f1c:	ldr	r5, [fp, #8]
   15f20:	ldr	r5, [r5, #24]
   15f24:	ldr	r6, [fp, #8]
   15f28:	ldr	r6, [r6, #28]
   15f2c:	ldr	r7, [fp, #8]
   15f30:	ldr	r7, [r7, #32]
   15f34:	ldr	r8, [sp, #44]	; 0x2c
   15f38:	str	r0, [sp, #40]	; 0x28
   15f3c:	mov	r0, r8
   15f40:	ldr	r9, [sp, #40]	; 0x28
   15f44:	str	r1, [sp, #36]	; 0x24
   15f48:	mov	r1, r9
   15f4c:	ldr	sl, [sp, #36]	; 0x24
   15f50:	str	sl, [sp]
   15f54:	str	lr, [sp, #4]
   15f58:	str	ip, [sp, #8]
   15f5c:	str	r4, [sp, #12]
   15f60:	str	r5, [sp, #16]
   15f64:	str	r6, [sp, #20]
   15f68:	str	r7, [sp, #24]
   15f6c:	bl	10f34 <fprintf@plt>
   15f70:	str	r0, [sp, #32]
   15f74:	sub	sp, fp, #28
   15f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f7c:	push	{fp, lr}
   15f80:	mov	fp, sp
   15f84:	sub	sp, sp, #32
   15f88:	ldr	ip, [fp, #8]
   15f8c:	str	r0, [fp, #-4]
   15f90:	str	r1, [fp, #-8]
   15f94:	str	r2, [fp, #-12]
   15f98:	str	r3, [sp, #16]
   15f9c:	movw	r0, #0
   15fa0:	str	r0, [sp, #12]
   15fa4:	str	ip, [sp, #8]
   15fa8:	ldr	r0, [fp, #8]
   15fac:	ldr	r1, [sp, #12]
   15fb0:	add	r0, r0, r1, lsl #2
   15fb4:	ldr	r0, [r0]
   15fb8:	movw	r1, #0
   15fbc:	cmp	r0, r1
   15fc0:	beq	15fd8 <__assert_fail@plt+0x4fcc>
   15fc4:	b	15fc8 <__assert_fail@plt+0x4fbc>
   15fc8:	ldr	r0, [sp, #12]
   15fcc:	add	r0, r0, #1
   15fd0:	str	r0, [sp, #12]
   15fd4:	b	15fa8 <__assert_fail@plt+0x4f9c>
   15fd8:	ldr	r0, [fp, #-4]
   15fdc:	ldr	r1, [fp, #-8]
   15fe0:	ldr	r2, [fp, #-12]
   15fe4:	ldr	r3, [sp, #16]
   15fe8:	ldr	ip, [fp, #8]
   15fec:	ldr	lr, [sp, #12]
   15ff0:	str	ip, [sp]
   15ff4:	str	lr, [sp, #4]
   15ff8:	bl	15958 <__assert_fail@plt+0x494c>
   15ffc:	mov	sp, fp
   16000:	pop	{fp, pc}
   16004:	push	{fp, lr}
   16008:	mov	fp, sp
   1600c:	sub	sp, sp, #80	; 0x50
   16010:	ldr	ip, [fp, #8]
   16014:	str	ip, [fp, #-4]
   16018:	str	r0, [fp, #-8]
   1601c:	str	r1, [fp, #-12]
   16020:	str	r2, [fp, #-16]
   16024:	str	r3, [fp, #-20]	; 0xffffffec
   16028:	movw	r0, #0
   1602c:	str	r0, [fp, #-24]	; 0xffffffe8
   16030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16034:	cmp	r0, #10
   16038:	movw	r0, #0
   1603c:	str	r0, [sp, #12]
   16040:	bcs	16078 <__assert_fail@plt+0x506c>
   16044:	ldr	r0, [fp, #-4]
   16048:	add	r1, r0, #4
   1604c:	str	r1, [fp, #-4]
   16050:	ldr	r0, [r0]
   16054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16058:	add	r2, sp, #16
   1605c:	add	r1, r2, r1, lsl #2
   16060:	str	r0, [r1]
   16064:	movw	r1, #0
   16068:	cmp	r0, r1
   1606c:	movw	r0, #0
   16070:	movne	r0, #1
   16074:	str	r0, [sp, #12]
   16078:	ldr	r0, [sp, #12]
   1607c:	tst	r0, #1
   16080:	beq	16098 <__assert_fail@plt+0x508c>
   16084:	b	16088 <__assert_fail@plt+0x507c>
   16088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1608c:	add	r0, r0, #1
   16090:	str	r0, [fp, #-24]	; 0xffffffe8
   16094:	b	16030 <__assert_fail@plt+0x5024>
   16098:	add	r0, sp, #16
   1609c:	ldr	r1, [fp, #-8]
   160a0:	ldr	r2, [fp, #-12]
   160a4:	ldr	r3, [fp, #-16]
   160a8:	ldr	ip, [fp, #-20]	; 0xffffffec
   160ac:	ldr	lr, [fp, #-24]	; 0xffffffe8
   160b0:	str	r0, [sp, #8]
   160b4:	mov	r0, r1
   160b8:	mov	r1, r2
   160bc:	mov	r2, r3
   160c0:	mov	r3, ip
   160c4:	ldr	ip, [sp, #8]
   160c8:	str	ip, [sp]
   160cc:	str	lr, [sp, #4]
   160d0:	bl	15958 <__assert_fail@plt+0x494c>
   160d4:	mov	sp, fp
   160d8:	pop	{fp, pc}
   160dc:	push	{fp, lr}
   160e0:	mov	fp, sp
   160e4:	sub	sp, sp, #32
   160e8:	str	r0, [fp, #-4]
   160ec:	str	r1, [fp, #-8]
   160f0:	str	r2, [fp, #-12]
   160f4:	str	r3, [sp, #16]
   160f8:	add	r0, fp, #8
   160fc:	str	r0, [sp, #12]
   16100:	ldr	r0, [fp, #-4]
   16104:	ldr	r1, [fp, #-8]
   16108:	ldr	r2, [fp, #-12]
   1610c:	ldr	r3, [sp, #16]
   16110:	ldr	ip, [sp, #12]
   16114:	mov	lr, sp
   16118:	str	ip, [lr]
   1611c:	bl	16004 <__assert_fail@plt+0x4ff8>
   16120:	add	r0, sp, #12
   16124:	str	r0, [sp, #8]
   16128:	mov	sp, fp
   1612c:	pop	{fp, pc}
   16130:	push	{fp, lr}
   16134:	mov	fp, sp
   16138:	sub	sp, sp, #16
   1613c:	movw	r0, #53580	; 0xd14c
   16140:	movt	r0, #2
   16144:	ldr	r1, [r0]
   16148:	movw	r0, #47258	; 0xb89a
   1614c:	movt	r0, #1
   16150:	bl	10dcc <fputs_unlocked@plt>
   16154:	movw	r1, #49243	; 0xc05b
   16158:	movt	r1, #1
   1615c:	str	r0, [fp, #-4]
   16160:	mov	r0, r1
   16164:	bl	10f1c <gettext@plt>
   16168:	movw	r1, #49263	; 0xc06f
   1616c:	movt	r1, #1
   16170:	bl	10dfc <printf@plt>
   16174:	movw	r1, #49285	; 0xc085
   16178:	movt	r1, #1
   1617c:	str	r0, [sp, #8]
   16180:	mov	r0, r1
   16184:	bl	10f1c <gettext@plt>
   16188:	movw	r1, #46788	; 0xb6c4
   1618c:	movt	r1, #1
   16190:	movw	r2, #47067	; 0xb7db
   16194:	movt	r2, #1
   16198:	bl	10dfc <printf@plt>
   1619c:	movw	r1, #49305	; 0xc099
   161a0:	movt	r1, #1
   161a4:	str	r0, [sp, #4]
   161a8:	mov	r0, r1
   161ac:	bl	10f1c <gettext@plt>
   161b0:	movw	r1, #49344	; 0xc0c0
   161b4:	movt	r1, #1
   161b8:	bl	10dfc <printf@plt>
   161bc:	str	r0, [sp]
   161c0:	mov	sp, fp
   161c4:	pop	{fp, pc}
   161c8:	push	{fp, lr}
   161cc:	mov	fp, sp
   161d0:	sub	sp, sp, #16
   161d4:	str	r0, [fp, #-4]
   161d8:	str	r1, [sp, #8]
   161dc:	str	r2, [sp, #4]
   161e0:	ldr	r0, [fp, #-4]
   161e4:	ldr	r1, [sp, #8]
   161e8:	ldr	r2, [sp, #4]
   161ec:	bl	161f8 <__assert_fail@plt+0x51ec>
   161f0:	mov	sp, fp
   161f4:	pop	{fp, pc}
   161f8:	push	{fp, lr}
   161fc:	mov	fp, sp
   16200:	sub	sp, sp, #16
   16204:	str	r0, [fp, #-4]
   16208:	str	r1, [sp, #8]
   1620c:	str	r2, [sp, #4]
   16210:	ldr	r0, [fp, #-4]
   16214:	ldr	r1, [sp, #8]
   16218:	ldr	r2, [sp, #4]
   1621c:	bl	196b0 <__assert_fail@plt+0x86a4>
   16220:	str	r0, [sp]
   16224:	ldr	r0, [sp]
   16228:	movw	r1, #0
   1622c:	cmp	r0, r1
   16230:	bne	16260 <__assert_fail@plt+0x5254>
   16234:	ldr	r0, [fp, #-4]
   16238:	movw	r1, #0
   1623c:	cmp	r0, r1
   16240:	beq	1625c <__assert_fail@plt+0x5250>
   16244:	ldr	r0, [sp, #8]
   16248:	cmp	r0, #0
   1624c:	beq	16260 <__assert_fail@plt+0x5254>
   16250:	ldr	r0, [sp, #4]
   16254:	cmp	r0, #0
   16258:	beq	16260 <__assert_fail@plt+0x5254>
   1625c:	bl	19048 <__assert_fail@plt+0x803c>
   16260:	ldr	r0, [sp]
   16264:	mov	sp, fp
   16268:	pop	{fp, pc}
   1626c:	push	{fp, lr}
   16270:	mov	fp, sp
   16274:	sub	sp, sp, #8
   16278:	str	r0, [sp, #4]
   1627c:	ldr	r0, [sp, #4]
   16280:	bl	19134 <__assert_fail@plt+0x8128>
   16284:	bl	16290 <__assert_fail@plt+0x5284>
   16288:	mov	sp, fp
   1628c:	pop	{fp, pc}
   16290:	push	{fp, lr}
   16294:	mov	fp, sp
   16298:	sub	sp, sp, #8
   1629c:	str	r0, [sp, #4]
   162a0:	ldr	r0, [sp, #4]
   162a4:	movw	r1, #0
   162a8:	cmp	r0, r1
   162ac:	bne	162b4 <__assert_fail@plt+0x52a8>
   162b0:	bl	19048 <__assert_fail@plt+0x803c>
   162b4:	ldr	r0, [sp, #4]
   162b8:	mov	sp, fp
   162bc:	pop	{fp, pc}
   162c0:	push	{fp, lr}
   162c4:	mov	fp, sp
   162c8:	sub	sp, sp, #8
   162cc:	str	r0, [sp, #4]
   162d0:	ldr	r0, [sp, #4]
   162d4:	bl	193ec <__assert_fail@plt+0x83e0>
   162d8:	bl	16290 <__assert_fail@plt+0x5284>
   162dc:	mov	sp, fp
   162e0:	pop	{fp, pc}
   162e4:	push	{fp, lr}
   162e8:	mov	fp, sp
   162ec:	sub	sp, sp, #8
   162f0:	str	r0, [sp, #4]
   162f4:	ldr	r0, [sp, #4]
   162f8:	bl	1626c <__assert_fail@plt+0x5260>
   162fc:	mov	sp, fp
   16300:	pop	{fp, pc}
   16304:	push	{fp, lr}
   16308:	mov	fp, sp
   1630c:	sub	sp, sp, #16
   16310:	str	r0, [fp, #-4]
   16314:	str	r1, [sp, #8]
   16318:	ldr	r0, [fp, #-4]
   1631c:	ldr	r1, [sp, #8]
   16320:	bl	191a4 <__assert_fail@plt+0x8198>
   16324:	str	r0, [sp, #4]
   16328:	ldr	r0, [sp, #4]
   1632c:	movw	r1, #0
   16330:	cmp	r0, r1
   16334:	bne	16358 <__assert_fail@plt+0x534c>
   16338:	ldr	r0, [fp, #-4]
   1633c:	movw	r1, #0
   16340:	cmp	r0, r1
   16344:	beq	16354 <__assert_fail@plt+0x5348>
   16348:	ldr	r0, [sp, #8]
   1634c:	cmp	r0, #0
   16350:	beq	16358 <__assert_fail@plt+0x534c>
   16354:	bl	19048 <__assert_fail@plt+0x803c>
   16358:	ldr	r0, [sp, #4]
   1635c:	mov	sp, fp
   16360:	pop	{fp, pc}
   16364:	push	{fp, lr}
   16368:	mov	fp, sp
   1636c:	sub	sp, sp, #8
   16370:	str	r0, [sp, #4]
   16374:	str	r1, [sp]
   16378:	ldr	r0, [sp, #4]
   1637c:	ldr	r1, [sp]
   16380:	bl	1942c <__assert_fail@plt+0x8420>
   16384:	bl	16290 <__assert_fail@plt+0x5284>
   16388:	mov	sp, fp
   1638c:	pop	{fp, pc}
   16390:	push	{fp, lr}
   16394:	mov	fp, sp
   16398:	sub	sp, sp, #16
   1639c:	str	r0, [fp, #-4]
   163a0:	str	r1, [sp, #8]
   163a4:	str	r2, [sp, #4]
   163a8:	ldr	r0, [fp, #-4]
   163ac:	ldr	r1, [sp, #8]
   163b0:	ldr	r2, [sp, #4]
   163b4:	bl	19524 <__assert_fail@plt+0x8518>
   163b8:	bl	16290 <__assert_fail@plt+0x5284>
   163bc:	mov	sp, fp
   163c0:	pop	{fp, pc}
   163c4:	push	{fp, lr}
   163c8:	mov	fp, sp
   163cc:	sub	sp, sp, #8
   163d0:	str	r0, [sp, #4]
   163d4:	str	r1, [sp]
   163d8:	ldr	r1, [sp, #4]
   163dc:	ldr	r2, [sp]
   163e0:	movw	r0, #0
   163e4:	bl	161f8 <__assert_fail@plt+0x51ec>
   163e8:	mov	sp, fp
   163ec:	pop	{fp, pc}
   163f0:	push	{fp, lr}
   163f4:	mov	fp, sp
   163f8:	sub	sp, sp, #8
   163fc:	str	r0, [sp, #4]
   16400:	str	r1, [sp]
   16404:	ldr	r1, [sp, #4]
   16408:	ldr	r2, [sp]
   1640c:	movw	r0, #0
   16410:	bl	16390 <__assert_fail@plt+0x5384>
   16414:	mov	sp, fp
   16418:	pop	{fp, pc}
   1641c:	push	{fp, lr}
   16420:	mov	fp, sp
   16424:	sub	sp, sp, #8
   16428:	str	r0, [sp, #4]
   1642c:	str	r1, [sp]
   16430:	ldr	r0, [sp, #4]
   16434:	ldr	r1, [sp]
   16438:	movw	r2, #1
   1643c:	bl	16448 <__assert_fail@plt+0x543c>
   16440:	mov	sp, fp
   16444:	pop	{fp, pc}
   16448:	push	{fp, lr}
   1644c:	mov	fp, sp
   16450:	sub	sp, sp, #16
   16454:	str	r0, [fp, #-4]
   16458:	str	r1, [sp, #8]
   1645c:	str	r2, [sp, #4]
   16460:	ldr	r0, [sp, #8]
   16464:	ldr	r0, [r0]
   16468:	str	r0, [sp]
   1646c:	ldr	r0, [fp, #-4]
   16470:	movw	r1, #0
   16474:	cmp	r0, r1
   16478:	bne	164c4 <__assert_fail@plt+0x54b8>
   1647c:	ldr	r0, [sp]
   16480:	cmp	r0, #0
   16484:	bne	164c0 <__assert_fail@plt+0x54b4>
   16488:	ldr	r0, [sp, #4]
   1648c:	movw	r1, #64	; 0x40
   16490:	udiv	r0, r1, r0
   16494:	str	r0, [sp]
   16498:	ldr	r0, [sp]
   1649c:	cmp	r0, #0
   164a0:	movw	r0, #0
   164a4:	movne	r0, #1
   164a8:	mvn	r1, #0
   164ac:	eor	r0, r0, r1
   164b0:	and	r0, r0, #1
   164b4:	ldr	r1, [sp]
   164b8:	add	r0, r1, r0
   164bc:	str	r0, [sp]
   164c0:	b	164f4 <__assert_fail@plt+0x54e8>
   164c4:	ldr	r0, [sp]
   164c8:	ldr	r1, [sp]
   164cc:	lsr	r1, r1, #1
   164d0:	add	r1, r1, #1
   164d4:	adds	r0, r0, r1
   164d8:	mov	r1, #0
   164dc:	adc	r1, r1, #0
   164e0:	str	r0, [sp]
   164e4:	tst	r1, #1
   164e8:	beq	164f0 <__assert_fail@plt+0x54e4>
   164ec:	bl	19048 <__assert_fail@plt+0x803c>
   164f0:	b	164f4 <__assert_fail@plt+0x54e8>
   164f4:	ldr	r0, [fp, #-4]
   164f8:	ldr	r1, [sp]
   164fc:	ldr	r2, [sp, #4]
   16500:	bl	161f8 <__assert_fail@plt+0x51ec>
   16504:	str	r0, [fp, #-4]
   16508:	ldr	r0, [sp]
   1650c:	ldr	r1, [sp, #8]
   16510:	str	r0, [r1]
   16514:	ldr	r0, [fp, #-4]
   16518:	mov	sp, fp
   1651c:	pop	{fp, pc}
   16520:	push	{fp, lr}
   16524:	mov	fp, sp
   16528:	sub	sp, sp, #376	; 0x178
   1652c:	ldr	ip, [fp, #8]
   16530:	str	r0, [fp, #-4]
   16534:	str	r1, [fp, #-8]
   16538:	str	r2, [fp, #-12]
   1653c:	str	r3, [fp, #-16]
   16540:	ldr	r0, [fp, #-8]
   16544:	ldr	r0, [r0]
   16548:	str	r0, [fp, #-20]	; 0xffffffec
   1654c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16550:	ldr	r1, [fp, #-20]	; 0xffffffec
   16554:	asr	r1, r1, #1
   16558:	add	r1, r0, r1
   1655c:	mov	r2, #1
   16560:	cmp	r1, r0
   16564:	movwvc	r2, #0
   16568:	str	r1, [fp, #-24]	; 0xffffffe8
   1656c:	tst	r2, #1
   16570:	str	ip, [fp, #-36]	; 0xffffffdc
   16574:	beq	16580 <__assert_fail@plt+0x5574>
   16578:	ldr	r0, [pc, #4044]	; 1754c <__assert_fail@plt+0x6540>
   1657c:	str	r0, [fp, #-24]	; 0xffffffe8
   16580:	ldr	r0, [fp, #-16]
   16584:	movw	r1, #0
   16588:	cmp	r1, r0
   1658c:	bgt	165a8 <__assert_fail@plt+0x559c>
   16590:	ldr	r0, [fp, #-16]
   16594:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16598:	cmp	r0, r1
   1659c:	bge	165a8 <__assert_fail@plt+0x559c>
   165a0:	ldr	r0, [fp, #-16]
   165a4:	str	r0, [fp, #-24]	; 0xffffffe8
   165a8:	b	16980 <__assert_fail@plt+0x5974>
   165ac:	b	165b0 <__assert_fail@plt+0x55a4>
   165b0:	ldr	r0, [fp, #8]
   165b4:	cmp	r0, #0
   165b8:	bge	166cc <__assert_fail@plt+0x56c0>
   165bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165c0:	cmp	r0, #0
   165c4:	bge	16650 <__assert_fail@plt+0x5644>
   165c8:	b	165cc <__assert_fail@plt+0x55c0>
   165cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d0:	ldr	r1, [fp, #8]
   165d4:	movw	r2, #127	; 0x7f
   165d8:	sdiv	r1, r2, r1
   165dc:	cmp	r0, r1
   165e0:	blt	1676c <__assert_fail@plt+0x5760>
   165e4:	b	16784 <__assert_fail@plt+0x5778>
   165e8:	b	165ec <__assert_fail@plt+0x55e0>
   165ec:	ldr	r0, [pc, #4076]	; 175e0 <__assert_fail@plt+0x65d4>
   165f0:	ldr	r1, [fp, #8]
   165f4:	cmp	r1, r0
   165f8:	blt	16610 <__assert_fail@plt+0x5604>
   165fc:	b	1661c <__assert_fail@plt+0x5610>
   16600:	ldr	r0, [fp, #8]
   16604:	movw	r1, #0
   16608:	cmp	r1, r0
   1660c:	bge	1661c <__assert_fail@plt+0x5610>
   16610:	movw	r0, #0
   16614:	str	r0, [fp, #-40]	; 0xffffffd8
   16618:	b	16634 <__assert_fail@plt+0x5628>
   1661c:	ldr	r0, [fp, #8]
   16620:	movw	r1, #0
   16624:	sub	r0, r1, r0
   16628:	movw	r1, #127	; 0x7f
   1662c:	sdiv	r0, r1, r0
   16630:	str	r0, [fp, #-40]	; 0xffffffd8
   16634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1663c:	mvn	r2, #0
   16640:	sub	r1, r2, r1
   16644:	cmp	r0, r1
   16648:	ble	1676c <__assert_fail@plt+0x5760>
   1664c:	b	16784 <__assert_fail@plt+0x5778>
   16650:	b	16654 <__assert_fail@plt+0x5648>
   16654:	b	166b0 <__assert_fail@plt+0x56a4>
   16658:	b	166b0 <__assert_fail@plt+0x56a4>
   1665c:	ldr	r0, [fp, #8]
   16660:	cmn	r0, #1
   16664:	bne	166b0 <__assert_fail@plt+0x56a4>
   16668:	b	1666c <__assert_fail@plt+0x5660>
   1666c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16670:	mvn	r1, #127	; 0x7f
   16674:	add	r0, r0, r1
   16678:	movw	r1, #0
   1667c:	cmp	r1, r0
   16680:	blt	1676c <__assert_fail@plt+0x5760>
   16684:	b	16784 <__assert_fail@plt+0x5778>
   16688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1668c:	movw	r1, #0
   16690:	cmp	r1, r0
   16694:	bge	16784 <__assert_fail@plt+0x5778>
   16698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1669c:	sub	r0, r0, #1
   166a0:	movw	r1, #127	; 0x7f
   166a4:	cmp	r1, r0
   166a8:	blt	1676c <__assert_fail@plt+0x5760>
   166ac:	b	16784 <__assert_fail@plt+0x5778>
   166b0:	ldr	r0, [fp, #8]
   166b4:	mvn	r1, #127	; 0x7f
   166b8:	sdiv	r0, r1, r0
   166bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166c0:	cmp	r0, r1
   166c4:	blt	1676c <__assert_fail@plt+0x5760>
   166c8:	b	16784 <__assert_fail@plt+0x5778>
   166cc:	ldr	r0, [fp, #8]
   166d0:	cmp	r0, #0
   166d4:	bne	166dc <__assert_fail@plt+0x56d0>
   166d8:	b	16784 <__assert_fail@plt+0x5778>
   166dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166e0:	cmp	r0, #0
   166e4:	bge	16754 <__assert_fail@plt+0x5748>
   166e8:	b	166ec <__assert_fail@plt+0x56e0>
   166ec:	b	16738 <__assert_fail@plt+0x572c>
   166f0:	b	16738 <__assert_fail@plt+0x572c>
   166f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166f8:	cmn	r0, #1
   166fc:	bne	16738 <__assert_fail@plt+0x572c>
   16700:	b	16704 <__assert_fail@plt+0x56f8>
   16704:	ldr	r0, [fp, #8]
   16708:	mvn	r1, #127	; 0x7f
   1670c:	add	r0, r0, r1
   16710:	movw	r1, #0
   16714:	cmp	r1, r0
   16718:	blt	1676c <__assert_fail@plt+0x5760>
   1671c:	b	16784 <__assert_fail@plt+0x5778>
   16720:	ldr	r0, [fp, #8]
   16724:	sub	r0, r0, #1
   16728:	movw	r1, #127	; 0x7f
   1672c:	cmp	r1, r0
   16730:	blt	1676c <__assert_fail@plt+0x5760>
   16734:	b	16784 <__assert_fail@plt+0x5778>
   16738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1673c:	mvn	r1, #127	; 0x7f
   16740:	sdiv	r0, r1, r0
   16744:	ldr	r1, [fp, #8]
   16748:	cmp	r0, r1
   1674c:	blt	1676c <__assert_fail@plt+0x5760>
   16750:	b	16784 <__assert_fail@plt+0x5778>
   16754:	ldr	r0, [fp, #8]
   16758:	movw	r1, #127	; 0x7f
   1675c:	sdiv	r0, r1, r0
   16760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16764:	cmp	r0, r1
   16768:	bge	16784 <__assert_fail@plt+0x5778>
   1676c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16770:	ldr	r1, [fp, #8]
   16774:	mul	r0, r0, r1
   16778:	sxtb	r0, r0
   1677c:	str	r0, [fp, #-28]	; 0xffffffe4
   16780:	b	17998 <__assert_fail@plt+0x698c>
   16784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16788:	ldr	r1, [fp, #8]
   1678c:	mul	r0, r0, r1
   16790:	sxtb	r0, r0
   16794:	str	r0, [fp, #-28]	; 0xffffffe4
   16798:	b	179a8 <__assert_fail@plt+0x699c>
   1679c:	ldr	r0, [fp, #8]
   167a0:	cmp	r0, #0
   167a4:	bge	168b4 <__assert_fail@plt+0x58a8>
   167a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167ac:	cmp	r0, #0
   167b0:	bge	1683c <__assert_fail@plt+0x5830>
   167b4:	b	167b8 <__assert_fail@plt+0x57ac>
   167b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167bc:	ldr	r1, [fp, #8]
   167c0:	movw	r2, #255	; 0xff
   167c4:	sdiv	r1, r2, r1
   167c8:	cmp	r0, r1
   167cc:	blt	16950 <__assert_fail@plt+0x5944>
   167d0:	b	16968 <__assert_fail@plt+0x595c>
   167d4:	b	167d8 <__assert_fail@plt+0x57cc>
   167d8:	ldr	r0, [pc, #3584]	; 175e0 <__assert_fail@plt+0x65d4>
   167dc:	ldr	r1, [fp, #8]
   167e0:	cmp	r1, r0
   167e4:	blt	167fc <__assert_fail@plt+0x57f0>
   167e8:	b	16808 <__assert_fail@plt+0x57fc>
   167ec:	ldr	r0, [fp, #8]
   167f0:	movw	r1, #0
   167f4:	cmp	r1, r0
   167f8:	bge	16808 <__assert_fail@plt+0x57fc>
   167fc:	movw	r0, #0
   16800:	str	r0, [fp, #-44]	; 0xffffffd4
   16804:	b	16820 <__assert_fail@plt+0x5814>
   16808:	ldr	r0, [fp, #8]
   1680c:	movw	r1, #0
   16810:	sub	r0, r1, r0
   16814:	movw	r1, #255	; 0xff
   16818:	sdiv	r0, r1, r0
   1681c:	str	r0, [fp, #-44]	; 0xffffffd4
   16820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16828:	mvn	r2, #0
   1682c:	sub	r1, r2, r1
   16830:	cmp	r0, r1
   16834:	ble	16950 <__assert_fail@plt+0x5944>
   16838:	b	16968 <__assert_fail@plt+0x595c>
   1683c:	b	16840 <__assert_fail@plt+0x5834>
   16840:	b	16898 <__assert_fail@plt+0x588c>
   16844:	b	16898 <__assert_fail@plt+0x588c>
   16848:	ldr	r0, [fp, #8]
   1684c:	cmn	r0, #1
   16850:	bne	16898 <__assert_fail@plt+0x588c>
   16854:	b	16858 <__assert_fail@plt+0x584c>
   16858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1685c:	add	r0, r0, #0
   16860:	movw	r1, #0
   16864:	cmp	r1, r0
   16868:	blt	16950 <__assert_fail@plt+0x5944>
   1686c:	b	16968 <__assert_fail@plt+0x595c>
   16870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16874:	movw	r1, #0
   16878:	cmp	r1, r0
   1687c:	bge	16968 <__assert_fail@plt+0x595c>
   16880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16884:	sub	r0, r0, #1
   16888:	mvn	r1, #0
   1688c:	cmp	r1, r0
   16890:	blt	16950 <__assert_fail@plt+0x5944>
   16894:	b	16968 <__assert_fail@plt+0x595c>
   16898:	ldr	r0, [fp, #8]
   1689c:	movw	r1, #0
   168a0:	sdiv	r0, r1, r0
   168a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168a8:	cmp	r0, r1
   168ac:	blt	16950 <__assert_fail@plt+0x5944>
   168b0:	b	16968 <__assert_fail@plt+0x595c>
   168b4:	ldr	r0, [fp, #8]
   168b8:	cmp	r0, #0
   168bc:	bne	168c4 <__assert_fail@plt+0x58b8>
   168c0:	b	16968 <__assert_fail@plt+0x595c>
   168c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168c8:	cmp	r0, #0
   168cc:	bge	16938 <__assert_fail@plt+0x592c>
   168d0:	b	168d4 <__assert_fail@plt+0x58c8>
   168d4:	b	1691c <__assert_fail@plt+0x5910>
   168d8:	b	1691c <__assert_fail@plt+0x5910>
   168dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168e0:	cmn	r0, #1
   168e4:	bne	1691c <__assert_fail@plt+0x5910>
   168e8:	b	168ec <__assert_fail@plt+0x58e0>
   168ec:	ldr	r0, [fp, #8]
   168f0:	add	r0, r0, #0
   168f4:	movw	r1, #0
   168f8:	cmp	r1, r0
   168fc:	blt	16950 <__assert_fail@plt+0x5944>
   16900:	b	16968 <__assert_fail@plt+0x595c>
   16904:	ldr	r0, [fp, #8]
   16908:	sub	r0, r0, #1
   1690c:	mvn	r1, #0
   16910:	cmp	r1, r0
   16914:	blt	16950 <__assert_fail@plt+0x5944>
   16918:	b	16968 <__assert_fail@plt+0x595c>
   1691c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16920:	movw	r1, #0
   16924:	sdiv	r0, r1, r0
   16928:	ldr	r1, [fp, #8]
   1692c:	cmp	r0, r1
   16930:	blt	16950 <__assert_fail@plt+0x5944>
   16934:	b	16968 <__assert_fail@plt+0x595c>
   16938:	ldr	r0, [fp, #8]
   1693c:	movw	r1, #255	; 0xff
   16940:	sdiv	r0, r1, r0
   16944:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16948:	cmp	r0, r1
   1694c:	bge	16968 <__assert_fail@plt+0x595c>
   16950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16954:	ldr	r1, [fp, #8]
   16958:	mul	r0, r0, r1
   1695c:	and	r0, r0, #255	; 0xff
   16960:	str	r0, [fp, #-28]	; 0xffffffe4
   16964:	b	17998 <__assert_fail@plt+0x698c>
   16968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1696c:	ldr	r1, [fp, #8]
   16970:	mul	r0, r0, r1
   16974:	and	r0, r0, #255	; 0xff
   16978:	str	r0, [fp, #-28]	; 0xffffffe4
   1697c:	b	179a8 <__assert_fail@plt+0x699c>
   16980:	b	16d58 <__assert_fail@plt+0x5d4c>
   16984:	b	16988 <__assert_fail@plt+0x597c>
   16988:	ldr	r0, [fp, #8]
   1698c:	cmp	r0, #0
   16990:	bge	16aa4 <__assert_fail@plt+0x5a98>
   16994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16998:	cmp	r0, #0
   1699c:	bge	16a28 <__assert_fail@plt+0x5a1c>
   169a0:	b	169a4 <__assert_fail@plt+0x5998>
   169a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169a8:	ldr	r1, [fp, #8]
   169ac:	movw	r2, #32767	; 0x7fff
   169b0:	sdiv	r1, r2, r1
   169b4:	cmp	r0, r1
   169b8:	blt	16b44 <__assert_fail@plt+0x5b38>
   169bc:	b	16b5c <__assert_fail@plt+0x5b50>
   169c0:	b	169c4 <__assert_fail@plt+0x59b8>
   169c4:	ldr	r0, [pc, #3092]	; 175e0 <__assert_fail@plt+0x65d4>
   169c8:	ldr	r1, [fp, #8]
   169cc:	cmp	r1, r0
   169d0:	blt	169e8 <__assert_fail@plt+0x59dc>
   169d4:	b	169f4 <__assert_fail@plt+0x59e8>
   169d8:	ldr	r0, [fp, #8]
   169dc:	movw	r1, #0
   169e0:	cmp	r1, r0
   169e4:	bge	169f4 <__assert_fail@plt+0x59e8>
   169e8:	movw	r0, #0
   169ec:	str	r0, [fp, #-48]	; 0xffffffd0
   169f0:	b	16a0c <__assert_fail@plt+0x5a00>
   169f4:	ldr	r0, [fp, #8]
   169f8:	movw	r1, #0
   169fc:	sub	r0, r1, r0
   16a00:	movw	r1, #32767	; 0x7fff
   16a04:	sdiv	r0, r1, r0
   16a08:	str	r0, [fp, #-48]	; 0xffffffd0
   16a0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16a10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a14:	mvn	r2, #0
   16a18:	sub	r1, r2, r1
   16a1c:	cmp	r0, r1
   16a20:	ble	16b44 <__assert_fail@plt+0x5b38>
   16a24:	b	16b5c <__assert_fail@plt+0x5b50>
   16a28:	b	16a2c <__assert_fail@plt+0x5a20>
   16a2c:	b	16a88 <__assert_fail@plt+0x5a7c>
   16a30:	b	16a88 <__assert_fail@plt+0x5a7c>
   16a34:	ldr	r0, [fp, #8]
   16a38:	cmn	r0, #1
   16a3c:	bne	16a88 <__assert_fail@plt+0x5a7c>
   16a40:	b	16a44 <__assert_fail@plt+0x5a38>
   16a44:	ldr	r0, [pc, #3928]	; 179a4 <__assert_fail@plt+0x6998>
   16a48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a4c:	add	r0, r1, r0
   16a50:	movw	r1, #0
   16a54:	cmp	r1, r0
   16a58:	blt	16b44 <__assert_fail@plt+0x5b38>
   16a5c:	b	16b5c <__assert_fail@plt+0x5b50>
   16a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a64:	movw	r1, #0
   16a68:	cmp	r1, r0
   16a6c:	bge	16b5c <__assert_fail@plt+0x5b50>
   16a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a74:	sub	r0, r0, #1
   16a78:	movw	r1, #32767	; 0x7fff
   16a7c:	cmp	r1, r0
   16a80:	blt	16b44 <__assert_fail@plt+0x5b38>
   16a84:	b	16b5c <__assert_fail@plt+0x5b50>
   16a88:	ldr	r0, [pc, #3860]	; 179a4 <__assert_fail@plt+0x6998>
   16a8c:	ldr	r1, [fp, #8]
   16a90:	sdiv	r0, r0, r1
   16a94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a98:	cmp	r0, r1
   16a9c:	blt	16b44 <__assert_fail@plt+0x5b38>
   16aa0:	b	16b5c <__assert_fail@plt+0x5b50>
   16aa4:	ldr	r0, [fp, #8]
   16aa8:	cmp	r0, #0
   16aac:	bne	16ab4 <__assert_fail@plt+0x5aa8>
   16ab0:	b	16b5c <__assert_fail@plt+0x5b50>
   16ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab8:	cmp	r0, #0
   16abc:	bge	16b2c <__assert_fail@plt+0x5b20>
   16ac0:	b	16ac4 <__assert_fail@plt+0x5ab8>
   16ac4:	b	16b10 <__assert_fail@plt+0x5b04>
   16ac8:	b	16b10 <__assert_fail@plt+0x5b04>
   16acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad0:	cmn	r0, #1
   16ad4:	bne	16b10 <__assert_fail@plt+0x5b04>
   16ad8:	b	16adc <__assert_fail@plt+0x5ad0>
   16adc:	ldr	r0, [pc, #3776]	; 179a4 <__assert_fail@plt+0x6998>
   16ae0:	ldr	r1, [fp, #8]
   16ae4:	add	r0, r1, r0
   16ae8:	movw	r1, #0
   16aec:	cmp	r1, r0
   16af0:	blt	16b44 <__assert_fail@plt+0x5b38>
   16af4:	b	16b5c <__assert_fail@plt+0x5b50>
   16af8:	ldr	r0, [fp, #8]
   16afc:	sub	r0, r0, #1
   16b00:	movw	r1, #32767	; 0x7fff
   16b04:	cmp	r1, r0
   16b08:	blt	16b44 <__assert_fail@plt+0x5b38>
   16b0c:	b	16b5c <__assert_fail@plt+0x5b50>
   16b10:	ldr	r0, [pc, #3724]	; 179a4 <__assert_fail@plt+0x6998>
   16b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b18:	sdiv	r0, r0, r1
   16b1c:	ldr	r1, [fp, #8]
   16b20:	cmp	r0, r1
   16b24:	blt	16b44 <__assert_fail@plt+0x5b38>
   16b28:	b	16b5c <__assert_fail@plt+0x5b50>
   16b2c:	ldr	r0, [fp, #8]
   16b30:	movw	r1, #32767	; 0x7fff
   16b34:	sdiv	r0, r1, r0
   16b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b3c:	cmp	r0, r1
   16b40:	bge	16b5c <__assert_fail@plt+0x5b50>
   16b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b48:	ldr	r1, [fp, #8]
   16b4c:	mul	r0, r0, r1
   16b50:	sxth	r0, r0
   16b54:	str	r0, [fp, #-28]	; 0xffffffe4
   16b58:	b	17998 <__assert_fail@plt+0x698c>
   16b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b60:	ldr	r1, [fp, #8]
   16b64:	mul	r0, r0, r1
   16b68:	sxth	r0, r0
   16b6c:	str	r0, [fp, #-28]	; 0xffffffe4
   16b70:	b	179a8 <__assert_fail@plt+0x699c>
   16b74:	ldr	r0, [fp, #8]
   16b78:	cmp	r0, #0
   16b7c:	bge	16c8c <__assert_fail@plt+0x5c80>
   16b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b84:	cmp	r0, #0
   16b88:	bge	16c14 <__assert_fail@plt+0x5c08>
   16b8c:	b	16b90 <__assert_fail@plt+0x5b84>
   16b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b94:	ldr	r1, [fp, #8]
   16b98:	movw	r2, #65535	; 0xffff
   16b9c:	sdiv	r1, r2, r1
   16ba0:	cmp	r0, r1
   16ba4:	blt	16d28 <__assert_fail@plt+0x5d1c>
   16ba8:	b	16d40 <__assert_fail@plt+0x5d34>
   16bac:	b	16bb0 <__assert_fail@plt+0x5ba4>
   16bb0:	ldr	r0, [pc, #2600]	; 175e0 <__assert_fail@plt+0x65d4>
   16bb4:	ldr	r1, [fp, #8]
   16bb8:	cmp	r1, r0
   16bbc:	blt	16bd4 <__assert_fail@plt+0x5bc8>
   16bc0:	b	16be0 <__assert_fail@plt+0x5bd4>
   16bc4:	ldr	r0, [fp, #8]
   16bc8:	movw	r1, #0
   16bcc:	cmp	r1, r0
   16bd0:	bge	16be0 <__assert_fail@plt+0x5bd4>
   16bd4:	movw	r0, #0
   16bd8:	str	r0, [fp, #-52]	; 0xffffffcc
   16bdc:	b	16bf8 <__assert_fail@plt+0x5bec>
   16be0:	ldr	r0, [fp, #8]
   16be4:	movw	r1, #0
   16be8:	sub	r0, r1, r0
   16bec:	movw	r1, #65535	; 0xffff
   16bf0:	sdiv	r0, r1, r0
   16bf4:	str	r0, [fp, #-52]	; 0xffffffcc
   16bf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c00:	mvn	r2, #0
   16c04:	sub	r1, r2, r1
   16c08:	cmp	r0, r1
   16c0c:	ble	16d28 <__assert_fail@plt+0x5d1c>
   16c10:	b	16d40 <__assert_fail@plt+0x5d34>
   16c14:	b	16c18 <__assert_fail@plt+0x5c0c>
   16c18:	b	16c70 <__assert_fail@plt+0x5c64>
   16c1c:	b	16c70 <__assert_fail@plt+0x5c64>
   16c20:	ldr	r0, [fp, #8]
   16c24:	cmn	r0, #1
   16c28:	bne	16c70 <__assert_fail@plt+0x5c64>
   16c2c:	b	16c30 <__assert_fail@plt+0x5c24>
   16c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c34:	add	r0, r0, #0
   16c38:	movw	r1, #0
   16c3c:	cmp	r1, r0
   16c40:	blt	16d28 <__assert_fail@plt+0x5d1c>
   16c44:	b	16d40 <__assert_fail@plt+0x5d34>
   16c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c4c:	movw	r1, #0
   16c50:	cmp	r1, r0
   16c54:	bge	16d40 <__assert_fail@plt+0x5d34>
   16c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c5c:	sub	r0, r0, #1
   16c60:	mvn	r1, #0
   16c64:	cmp	r1, r0
   16c68:	blt	16d28 <__assert_fail@plt+0x5d1c>
   16c6c:	b	16d40 <__assert_fail@plt+0x5d34>
   16c70:	ldr	r0, [fp, #8]
   16c74:	movw	r1, #0
   16c78:	sdiv	r0, r1, r0
   16c7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c80:	cmp	r0, r1
   16c84:	blt	16d28 <__assert_fail@plt+0x5d1c>
   16c88:	b	16d40 <__assert_fail@plt+0x5d34>
   16c8c:	ldr	r0, [fp, #8]
   16c90:	cmp	r0, #0
   16c94:	bne	16c9c <__assert_fail@plt+0x5c90>
   16c98:	b	16d40 <__assert_fail@plt+0x5d34>
   16c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ca0:	cmp	r0, #0
   16ca4:	bge	16d10 <__assert_fail@plt+0x5d04>
   16ca8:	b	16cac <__assert_fail@plt+0x5ca0>
   16cac:	b	16cf4 <__assert_fail@plt+0x5ce8>
   16cb0:	b	16cf4 <__assert_fail@plt+0x5ce8>
   16cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cb8:	cmn	r0, #1
   16cbc:	bne	16cf4 <__assert_fail@plt+0x5ce8>
   16cc0:	b	16cc4 <__assert_fail@plt+0x5cb8>
   16cc4:	ldr	r0, [fp, #8]
   16cc8:	add	r0, r0, #0
   16ccc:	movw	r1, #0
   16cd0:	cmp	r1, r0
   16cd4:	blt	16d28 <__assert_fail@plt+0x5d1c>
   16cd8:	b	16d40 <__assert_fail@plt+0x5d34>
   16cdc:	ldr	r0, [fp, #8]
   16ce0:	sub	r0, r0, #1
   16ce4:	mvn	r1, #0
   16ce8:	cmp	r1, r0
   16cec:	blt	16d28 <__assert_fail@plt+0x5d1c>
   16cf0:	b	16d40 <__assert_fail@plt+0x5d34>
   16cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf8:	movw	r1, #0
   16cfc:	sdiv	r0, r1, r0
   16d00:	ldr	r1, [fp, #8]
   16d04:	cmp	r0, r1
   16d08:	blt	16d28 <__assert_fail@plt+0x5d1c>
   16d0c:	b	16d40 <__assert_fail@plt+0x5d34>
   16d10:	ldr	r0, [fp, #8]
   16d14:	movw	r1, #65535	; 0xffff
   16d18:	sdiv	r0, r1, r0
   16d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d20:	cmp	r0, r1
   16d24:	bge	16d40 <__assert_fail@plt+0x5d34>
   16d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d2c:	ldr	r1, [fp, #8]
   16d30:	mul	r0, r0, r1
   16d34:	uxth	r0, r0
   16d38:	str	r0, [fp, #-28]	; 0xffffffe4
   16d3c:	b	17998 <__assert_fail@plt+0x698c>
   16d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d44:	ldr	r1, [fp, #8]
   16d48:	mul	r0, r0, r1
   16d4c:	uxth	r0, r0
   16d50:	str	r0, [fp, #-28]	; 0xffffffe4
   16d54:	b	179a8 <__assert_fail@plt+0x699c>
   16d58:	b	16d5c <__assert_fail@plt+0x5d50>
   16d5c:	b	16d60 <__assert_fail@plt+0x5d54>
   16d60:	ldr	r0, [fp, #8]
   16d64:	cmp	r0, #0
   16d68:	bge	16e6c <__assert_fail@plt+0x5e60>
   16d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d70:	cmp	r0, #0
   16d74:	bge	16e00 <__assert_fail@plt+0x5df4>
   16d78:	b	16d7c <__assert_fail@plt+0x5d70>
   16d7c:	ldr	r0, [pc, #1992]	; 1754c <__assert_fail@plt+0x6540>
   16d80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d84:	ldr	r2, [fp, #8]
   16d88:	sdiv	r0, r0, r2
   16d8c:	cmp	r1, r0
   16d90:	blt	16efc <__assert_fail@plt+0x5ef0>
   16d94:	b	16f10 <__assert_fail@plt+0x5f04>
   16d98:	b	16d9c <__assert_fail@plt+0x5d90>
   16d9c:	ldr	r0, [pc, #2108]	; 175e0 <__assert_fail@plt+0x65d4>
   16da0:	ldr	r1, [fp, #8]
   16da4:	cmp	r1, r0
   16da8:	blt	16dc0 <__assert_fail@plt+0x5db4>
   16dac:	b	16dcc <__assert_fail@plt+0x5dc0>
   16db0:	ldr	r0, [fp, #8]
   16db4:	movw	r1, #0
   16db8:	cmp	r1, r0
   16dbc:	bge	16dcc <__assert_fail@plt+0x5dc0>
   16dc0:	movw	r0, #0
   16dc4:	str	r0, [fp, #-56]	; 0xffffffc8
   16dc8:	b	16de4 <__assert_fail@plt+0x5dd8>
   16dcc:	ldr	r0, [pc, #1912]	; 1754c <__assert_fail@plt+0x6540>
   16dd0:	ldr	r1, [fp, #8]
   16dd4:	movw	r2, #0
   16dd8:	sub	r1, r2, r1
   16ddc:	sdiv	r0, r0, r1
   16de0:	str	r0, [fp, #-56]	; 0xffffffc8
   16de4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dec:	mvn	r2, #0
   16df0:	sub	r1, r2, r1
   16df4:	cmp	r0, r1
   16df8:	ble	16efc <__assert_fail@plt+0x5ef0>
   16dfc:	b	16f10 <__assert_fail@plt+0x5f04>
   16e00:	ldr	r0, [fp, #8]
   16e04:	cmn	r0, #1
   16e08:	bne	16e50 <__assert_fail@plt+0x5e44>
   16e0c:	b	16e10 <__assert_fail@plt+0x5e04>
   16e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e14:	add	r0, r0, #-2147483648	; 0x80000000
   16e18:	movw	r1, #0
   16e1c:	cmp	r1, r0
   16e20:	blt	16efc <__assert_fail@plt+0x5ef0>
   16e24:	b	16f10 <__assert_fail@plt+0x5f04>
   16e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e2c:	movw	r1, #0
   16e30:	cmp	r1, r0
   16e34:	bge	16f10 <__assert_fail@plt+0x5f04>
   16e38:	ldr	r0, [pc, #1804]	; 1754c <__assert_fail@plt+0x6540>
   16e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e40:	sub	r1, r1, #1
   16e44:	cmp	r0, r1
   16e48:	blt	16efc <__assert_fail@plt+0x5ef0>
   16e4c:	b	16f10 <__assert_fail@plt+0x5f04>
   16e50:	ldr	r0, [pc, #4072]	; 17e40 <__assert_fail@plt+0x6e34>
   16e54:	ldr	r1, [fp, #8]
   16e58:	sdiv	r0, r0, r1
   16e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e60:	cmp	r0, r1
   16e64:	blt	16efc <__assert_fail@plt+0x5ef0>
   16e68:	b	16f10 <__assert_fail@plt+0x5f04>
   16e6c:	ldr	r0, [fp, #8]
   16e70:	cmp	r0, #0
   16e74:	bne	16e7c <__assert_fail@plt+0x5e70>
   16e78:	b	16f10 <__assert_fail@plt+0x5f04>
   16e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e80:	cmp	r0, #0
   16e84:	bge	16ee4 <__assert_fail@plt+0x5ed8>
   16e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e8c:	cmn	r0, #1
   16e90:	bne	16ec8 <__assert_fail@plt+0x5ebc>
   16e94:	b	16e98 <__assert_fail@plt+0x5e8c>
   16e98:	ldr	r0, [fp, #8]
   16e9c:	add	r0, r0, #-2147483648	; 0x80000000
   16ea0:	movw	r1, #0
   16ea4:	cmp	r1, r0
   16ea8:	blt	16efc <__assert_fail@plt+0x5ef0>
   16eac:	b	16f10 <__assert_fail@plt+0x5f04>
   16eb0:	ldr	r0, [pc, #1684]	; 1754c <__assert_fail@plt+0x6540>
   16eb4:	ldr	r1, [fp, #8]
   16eb8:	sub	r1, r1, #1
   16ebc:	cmp	r0, r1
   16ec0:	blt	16efc <__assert_fail@plt+0x5ef0>
   16ec4:	b	16f10 <__assert_fail@plt+0x5f04>
   16ec8:	ldr	r0, [pc, #3952]	; 17e40 <__assert_fail@plt+0x6e34>
   16ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ed0:	sdiv	r0, r0, r1
   16ed4:	ldr	r1, [fp, #8]
   16ed8:	cmp	r0, r1
   16edc:	blt	16efc <__assert_fail@plt+0x5ef0>
   16ee0:	b	16f10 <__assert_fail@plt+0x5f04>
   16ee4:	ldr	r0, [pc, #1632]	; 1754c <__assert_fail@plt+0x6540>
   16ee8:	ldr	r1, [fp, #8]
   16eec:	sdiv	r0, r0, r1
   16ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ef4:	cmp	r0, r1
   16ef8:	bge	16f10 <__assert_fail@plt+0x5f04>
   16efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f00:	ldr	r1, [fp, #8]
   16f04:	mul	r0, r0, r1
   16f08:	str	r0, [fp, #-28]	; 0xffffffe4
   16f0c:	b	17998 <__assert_fail@plt+0x698c>
   16f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f14:	ldr	r1, [fp, #8]
   16f18:	mul	r0, r0, r1
   16f1c:	str	r0, [fp, #-28]	; 0xffffffe4
   16f20:	b	179a8 <__assert_fail@plt+0x699c>
   16f24:	ldr	r0, [fp, #8]
   16f28:	cmp	r0, #0
   16f2c:	bge	1703c <__assert_fail@plt+0x6030>
   16f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f34:	cmp	r0, #0
   16f38:	bge	16fc4 <__assert_fail@plt+0x5fb8>
   16f3c:	b	16f5c <__assert_fail@plt+0x5f50>
   16f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f44:	ldr	r1, [fp, #8]
   16f48:	mvn	r2, #0
   16f4c:	udiv	r1, r2, r1
   16f50:	cmp	r0, r1
   16f54:	bcc	170d8 <__assert_fail@plt+0x60cc>
   16f58:	b	170ec <__assert_fail@plt+0x60e0>
   16f5c:	b	16f60 <__assert_fail@plt+0x5f54>
   16f60:	ldr	r0, [pc, #1656]	; 175e0 <__assert_fail@plt+0x65d4>
   16f64:	ldr	r1, [fp, #8]
   16f68:	cmp	r1, r0
   16f6c:	blt	16f84 <__assert_fail@plt+0x5f78>
   16f70:	b	16f90 <__assert_fail@plt+0x5f84>
   16f74:	ldr	r0, [fp, #8]
   16f78:	movw	r1, #0
   16f7c:	cmp	r1, r0
   16f80:	bge	16f90 <__assert_fail@plt+0x5f84>
   16f84:	movw	r0, #1
   16f88:	str	r0, [fp, #-60]	; 0xffffffc4
   16f8c:	b	16fa8 <__assert_fail@plt+0x5f9c>
   16f90:	ldr	r0, [fp, #8]
   16f94:	movw	r1, #0
   16f98:	sub	r0, r1, r0
   16f9c:	mvn	r1, #0
   16fa0:	udiv	r0, r1, r0
   16fa4:	str	r0, [fp, #-60]	; 0xffffffc4
   16fa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fb0:	mvn	r2, #0
   16fb4:	sub	r1, r2, r1
   16fb8:	cmp	r0, r1
   16fbc:	bls	170d8 <__assert_fail@plt+0x60cc>
   16fc0:	b	170ec <__assert_fail@plt+0x60e0>
   16fc4:	b	16fc8 <__assert_fail@plt+0x5fbc>
   16fc8:	b	17020 <__assert_fail@plt+0x6014>
   16fcc:	b	17020 <__assert_fail@plt+0x6014>
   16fd0:	ldr	r0, [fp, #8]
   16fd4:	cmn	r0, #1
   16fd8:	bne	17020 <__assert_fail@plt+0x6014>
   16fdc:	b	16fe0 <__assert_fail@plt+0x5fd4>
   16fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fe4:	add	r0, r0, #0
   16fe8:	movw	r1, #0
   16fec:	cmp	r1, r0
   16ff0:	blt	170d8 <__assert_fail@plt+0x60cc>
   16ff4:	b	170ec <__assert_fail@plt+0x60e0>
   16ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ffc:	movw	r1, #0
   17000:	cmp	r1, r0
   17004:	bge	170ec <__assert_fail@plt+0x60e0>
   17008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1700c:	sub	r0, r0, #1
   17010:	mvn	r1, #0
   17014:	cmp	r1, r0
   17018:	blt	170d8 <__assert_fail@plt+0x60cc>
   1701c:	b	170ec <__assert_fail@plt+0x60e0>
   17020:	ldr	r0, [fp, #8]
   17024:	movw	r1, #0
   17028:	sdiv	r0, r1, r0
   1702c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17030:	cmp	r0, r1
   17034:	blt	170d8 <__assert_fail@plt+0x60cc>
   17038:	b	170ec <__assert_fail@plt+0x60e0>
   1703c:	ldr	r0, [fp, #8]
   17040:	cmp	r0, #0
   17044:	bne	1704c <__assert_fail@plt+0x6040>
   17048:	b	170ec <__assert_fail@plt+0x60e0>
   1704c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17050:	cmp	r0, #0
   17054:	bge	170c0 <__assert_fail@plt+0x60b4>
   17058:	b	1705c <__assert_fail@plt+0x6050>
   1705c:	b	170a4 <__assert_fail@plt+0x6098>
   17060:	b	170a4 <__assert_fail@plt+0x6098>
   17064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17068:	cmn	r0, #1
   1706c:	bne	170a4 <__assert_fail@plt+0x6098>
   17070:	b	17074 <__assert_fail@plt+0x6068>
   17074:	ldr	r0, [fp, #8]
   17078:	add	r0, r0, #0
   1707c:	movw	r1, #0
   17080:	cmp	r1, r0
   17084:	blt	170d8 <__assert_fail@plt+0x60cc>
   17088:	b	170ec <__assert_fail@plt+0x60e0>
   1708c:	ldr	r0, [fp, #8]
   17090:	sub	r0, r0, #1
   17094:	mvn	r1, #0
   17098:	cmp	r1, r0
   1709c:	blt	170d8 <__assert_fail@plt+0x60cc>
   170a0:	b	170ec <__assert_fail@plt+0x60e0>
   170a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170a8:	movw	r1, #0
   170ac:	sdiv	r0, r1, r0
   170b0:	ldr	r1, [fp, #8]
   170b4:	cmp	r0, r1
   170b8:	blt	170d8 <__assert_fail@plt+0x60cc>
   170bc:	b	170ec <__assert_fail@plt+0x60e0>
   170c0:	ldr	r0, [fp, #8]
   170c4:	mvn	r1, #0
   170c8:	udiv	r0, r1, r0
   170cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170d0:	cmp	r0, r1
   170d4:	bcs	170ec <__assert_fail@plt+0x60e0>
   170d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170dc:	ldr	r1, [fp, #8]
   170e0:	mul	r0, r0, r1
   170e4:	str	r0, [fp, #-28]	; 0xffffffe4
   170e8:	b	17998 <__assert_fail@plt+0x698c>
   170ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f0:	ldr	r1, [fp, #8]
   170f4:	mul	r0, r0, r1
   170f8:	str	r0, [fp, #-28]	; 0xffffffe4
   170fc:	b	179a8 <__assert_fail@plt+0x699c>
   17100:	b	17104 <__assert_fail@plt+0x60f8>
   17104:	b	17108 <__assert_fail@plt+0x60fc>
   17108:	ldr	r0, [fp, #8]
   1710c:	cmp	r0, #0
   17110:	bge	17214 <__assert_fail@plt+0x6208>
   17114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17118:	cmp	r0, #0
   1711c:	bge	171a8 <__assert_fail@plt+0x619c>
   17120:	b	17124 <__assert_fail@plt+0x6118>
   17124:	ldr	r0, [pc, #1056]	; 1754c <__assert_fail@plt+0x6540>
   17128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1712c:	ldr	r2, [fp, #8]
   17130:	sdiv	r0, r0, r2
   17134:	cmp	r1, r0
   17138:	blt	172a4 <__assert_fail@plt+0x6298>
   1713c:	b	172b8 <__assert_fail@plt+0x62ac>
   17140:	b	17144 <__assert_fail@plt+0x6138>
   17144:	ldr	r0, [pc, #1172]	; 175e0 <__assert_fail@plt+0x65d4>
   17148:	ldr	r1, [fp, #8]
   1714c:	cmp	r1, r0
   17150:	blt	17168 <__assert_fail@plt+0x615c>
   17154:	b	17174 <__assert_fail@plt+0x6168>
   17158:	ldr	r0, [fp, #8]
   1715c:	movw	r1, #0
   17160:	cmp	r1, r0
   17164:	bge	17174 <__assert_fail@plt+0x6168>
   17168:	movw	r0, #0
   1716c:	str	r0, [fp, #-64]	; 0xffffffc0
   17170:	b	1718c <__assert_fail@plt+0x6180>
   17174:	ldr	r0, [pc, #976]	; 1754c <__assert_fail@plt+0x6540>
   17178:	ldr	r1, [fp, #8]
   1717c:	movw	r2, #0
   17180:	sub	r1, r2, r1
   17184:	sdiv	r0, r0, r1
   17188:	str	r0, [fp, #-64]	; 0xffffffc0
   1718c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17194:	mvn	r2, #0
   17198:	sub	r1, r2, r1
   1719c:	cmp	r0, r1
   171a0:	ble	172a4 <__assert_fail@plt+0x6298>
   171a4:	b	172b8 <__assert_fail@plt+0x62ac>
   171a8:	ldr	r0, [fp, #8]
   171ac:	cmn	r0, #1
   171b0:	bne	171f8 <__assert_fail@plt+0x61ec>
   171b4:	b	171b8 <__assert_fail@plt+0x61ac>
   171b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171bc:	add	r0, r0, #-2147483648	; 0x80000000
   171c0:	movw	r1, #0
   171c4:	cmp	r1, r0
   171c8:	blt	172a4 <__assert_fail@plt+0x6298>
   171cc:	b	172b8 <__assert_fail@plt+0x62ac>
   171d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171d4:	movw	r1, #0
   171d8:	cmp	r1, r0
   171dc:	bge	172b8 <__assert_fail@plt+0x62ac>
   171e0:	ldr	r0, [pc, #868]	; 1754c <__assert_fail@plt+0x6540>
   171e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171e8:	sub	r1, r1, #1
   171ec:	cmp	r0, r1
   171f0:	blt	172a4 <__assert_fail@plt+0x6298>
   171f4:	b	172b8 <__assert_fail@plt+0x62ac>
   171f8:	ldr	r0, [pc, #3136]	; 17e40 <__assert_fail@plt+0x6e34>
   171fc:	ldr	r1, [fp, #8]
   17200:	sdiv	r0, r0, r1
   17204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17208:	cmp	r0, r1
   1720c:	blt	172a4 <__assert_fail@plt+0x6298>
   17210:	b	172b8 <__assert_fail@plt+0x62ac>
   17214:	ldr	r0, [fp, #8]
   17218:	cmp	r0, #0
   1721c:	bne	17224 <__assert_fail@plt+0x6218>
   17220:	b	172b8 <__assert_fail@plt+0x62ac>
   17224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17228:	cmp	r0, #0
   1722c:	bge	1728c <__assert_fail@plt+0x6280>
   17230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17234:	cmn	r0, #1
   17238:	bne	17270 <__assert_fail@plt+0x6264>
   1723c:	b	17240 <__assert_fail@plt+0x6234>
   17240:	ldr	r0, [fp, #8]
   17244:	add	r0, r0, #-2147483648	; 0x80000000
   17248:	movw	r1, #0
   1724c:	cmp	r1, r0
   17250:	blt	172a4 <__assert_fail@plt+0x6298>
   17254:	b	172b8 <__assert_fail@plt+0x62ac>
   17258:	ldr	r0, [pc, #748]	; 1754c <__assert_fail@plt+0x6540>
   1725c:	ldr	r1, [fp, #8]
   17260:	sub	r1, r1, #1
   17264:	cmp	r0, r1
   17268:	blt	172a4 <__assert_fail@plt+0x6298>
   1726c:	b	172b8 <__assert_fail@plt+0x62ac>
   17270:	ldr	r0, [pc, #3016]	; 17e40 <__assert_fail@plt+0x6e34>
   17274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17278:	sdiv	r0, r0, r1
   1727c:	ldr	r1, [fp, #8]
   17280:	cmp	r0, r1
   17284:	blt	172a4 <__assert_fail@plt+0x6298>
   17288:	b	172b8 <__assert_fail@plt+0x62ac>
   1728c:	ldr	r0, [pc, #696]	; 1754c <__assert_fail@plt+0x6540>
   17290:	ldr	r1, [fp, #8]
   17294:	sdiv	r0, r0, r1
   17298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1729c:	cmp	r0, r1
   172a0:	bge	172b8 <__assert_fail@plt+0x62ac>
   172a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172a8:	ldr	r1, [fp, #8]
   172ac:	mul	r0, r0, r1
   172b0:	str	r0, [fp, #-28]	; 0xffffffe4
   172b4:	b	17998 <__assert_fail@plt+0x698c>
   172b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172bc:	ldr	r1, [fp, #8]
   172c0:	mul	r0, r0, r1
   172c4:	str	r0, [fp, #-28]	; 0xffffffe4
   172c8:	b	179a8 <__assert_fail@plt+0x699c>
   172cc:	ldr	r0, [fp, #8]
   172d0:	cmp	r0, #0
   172d4:	bge	173e4 <__assert_fail@plt+0x63d8>
   172d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172dc:	cmp	r0, #0
   172e0:	bge	1736c <__assert_fail@plt+0x6360>
   172e4:	b	17304 <__assert_fail@plt+0x62f8>
   172e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ec:	ldr	r1, [fp, #8]
   172f0:	mvn	r2, #0
   172f4:	udiv	r1, r2, r1
   172f8:	cmp	r0, r1
   172fc:	bcc	17480 <__assert_fail@plt+0x6474>
   17300:	b	17494 <__assert_fail@plt+0x6488>
   17304:	b	17308 <__assert_fail@plt+0x62fc>
   17308:	ldr	r0, [pc, #720]	; 175e0 <__assert_fail@plt+0x65d4>
   1730c:	ldr	r1, [fp, #8]
   17310:	cmp	r1, r0
   17314:	blt	1732c <__assert_fail@plt+0x6320>
   17318:	b	17338 <__assert_fail@plt+0x632c>
   1731c:	ldr	r0, [fp, #8]
   17320:	movw	r1, #0
   17324:	cmp	r1, r0
   17328:	bge	17338 <__assert_fail@plt+0x632c>
   1732c:	movw	r0, #1
   17330:	str	r0, [fp, #-68]	; 0xffffffbc
   17334:	b	17350 <__assert_fail@plt+0x6344>
   17338:	ldr	r0, [fp, #8]
   1733c:	movw	r1, #0
   17340:	sub	r0, r1, r0
   17344:	mvn	r1, #0
   17348:	udiv	r0, r1, r0
   1734c:	str	r0, [fp, #-68]	; 0xffffffbc
   17350:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17358:	mvn	r2, #0
   1735c:	sub	r1, r2, r1
   17360:	cmp	r0, r1
   17364:	bls	17480 <__assert_fail@plt+0x6474>
   17368:	b	17494 <__assert_fail@plt+0x6488>
   1736c:	b	17370 <__assert_fail@plt+0x6364>
   17370:	b	173c8 <__assert_fail@plt+0x63bc>
   17374:	b	173c8 <__assert_fail@plt+0x63bc>
   17378:	ldr	r0, [fp, #8]
   1737c:	cmn	r0, #1
   17380:	bne	173c8 <__assert_fail@plt+0x63bc>
   17384:	b	17388 <__assert_fail@plt+0x637c>
   17388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1738c:	add	r0, r0, #0
   17390:	movw	r1, #0
   17394:	cmp	r1, r0
   17398:	blt	17480 <__assert_fail@plt+0x6474>
   1739c:	b	17494 <__assert_fail@plt+0x6488>
   173a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a4:	movw	r1, #0
   173a8:	cmp	r1, r0
   173ac:	bge	17494 <__assert_fail@plt+0x6488>
   173b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173b4:	sub	r0, r0, #1
   173b8:	mvn	r1, #0
   173bc:	cmp	r1, r0
   173c0:	blt	17480 <__assert_fail@plt+0x6474>
   173c4:	b	17494 <__assert_fail@plt+0x6488>
   173c8:	ldr	r0, [fp, #8]
   173cc:	movw	r1, #0
   173d0:	sdiv	r0, r1, r0
   173d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173d8:	cmp	r0, r1
   173dc:	blt	17480 <__assert_fail@plt+0x6474>
   173e0:	b	17494 <__assert_fail@plt+0x6488>
   173e4:	ldr	r0, [fp, #8]
   173e8:	cmp	r0, #0
   173ec:	bne	173f4 <__assert_fail@plt+0x63e8>
   173f0:	b	17494 <__assert_fail@plt+0x6488>
   173f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173f8:	cmp	r0, #0
   173fc:	bge	17468 <__assert_fail@plt+0x645c>
   17400:	b	17404 <__assert_fail@plt+0x63f8>
   17404:	b	1744c <__assert_fail@plt+0x6440>
   17408:	b	1744c <__assert_fail@plt+0x6440>
   1740c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17410:	cmn	r0, #1
   17414:	bne	1744c <__assert_fail@plt+0x6440>
   17418:	b	1741c <__assert_fail@plt+0x6410>
   1741c:	ldr	r0, [fp, #8]
   17420:	add	r0, r0, #0
   17424:	movw	r1, #0
   17428:	cmp	r1, r0
   1742c:	blt	17480 <__assert_fail@plt+0x6474>
   17430:	b	17494 <__assert_fail@plt+0x6488>
   17434:	ldr	r0, [fp, #8]
   17438:	sub	r0, r0, #1
   1743c:	mvn	r1, #0
   17440:	cmp	r1, r0
   17444:	blt	17480 <__assert_fail@plt+0x6474>
   17448:	b	17494 <__assert_fail@plt+0x6488>
   1744c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17450:	movw	r1, #0
   17454:	sdiv	r0, r1, r0
   17458:	ldr	r1, [fp, #8]
   1745c:	cmp	r0, r1
   17460:	blt	17480 <__assert_fail@plt+0x6474>
   17464:	b	17494 <__assert_fail@plt+0x6488>
   17468:	ldr	r0, [fp, #8]
   1746c:	mvn	r1, #0
   17470:	udiv	r0, r1, r0
   17474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17478:	cmp	r0, r1
   1747c:	bcs	17494 <__assert_fail@plt+0x6488>
   17480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17484:	ldr	r1, [fp, #8]
   17488:	mul	r0, r0, r1
   1748c:	str	r0, [fp, #-28]	; 0xffffffe4
   17490:	b	17998 <__assert_fail@plt+0x698c>
   17494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17498:	ldr	r1, [fp, #8]
   1749c:	mul	r0, r0, r1
   174a0:	str	r0, [fp, #-28]	; 0xffffffe4
   174a4:	b	179a8 <__assert_fail@plt+0x699c>
   174a8:	b	174ac <__assert_fail@plt+0x64a0>
   174ac:	ldr	r0, [fp, #8]
   174b0:	cmp	r0, #0
   174b4:	bge	17644 <__assert_fail@plt+0x6638>
   174b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174bc:	cmp	r0, #0
   174c0:	bge	175ac <__assert_fail@plt+0x65a0>
   174c4:	b	174c8 <__assert_fail@plt+0x64bc>
   174c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174cc:	ldr	r1, [fp, #8]
   174d0:	asr	r3, r1, #31
   174d4:	mvn	r2, #0
   174d8:	mvn	ip, #-2147483648	; 0x80000000
   174dc:	str	r0, [fp, #-72]	; 0xffffffb8
   174e0:	mov	r0, r2
   174e4:	str	r1, [fp, #-76]	; 0xffffffb4
   174e8:	mov	r1, ip
   174ec:	ldr	r2, [fp, #-76]	; 0xffffffb4
   174f0:	bl	1b278 <__assert_fail@plt+0xa26c>
   174f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   174f8:	subs	r0, r2, r0
   174fc:	rscs	r1, r1, r2, asr #31
   17500:	str	r0, [fp, #-80]	; 0xffffffb0
   17504:	str	r1, [fp, #-84]	; 0xffffffac
   17508:	blt	17724 <__assert_fail@plt+0x6718>
   1750c:	b	17738 <__assert_fail@plt+0x672c>
   17510:	b	17514 <__assert_fail@plt+0x6508>
   17514:	ldr	r0, [pc, #196]	; 175e0 <__assert_fail@plt+0x65d4>
   17518:	ldr	r1, [fp, #8]
   1751c:	cmp	r1, r0
   17520:	blt	17538 <__assert_fail@plt+0x652c>
   17524:	b	17550 <__assert_fail@plt+0x6544>
   17528:	ldr	r0, [fp, #8]
   1752c:	movw	r1, #0
   17530:	cmp	r1, r0
   17534:	bge	17550 <__assert_fail@plt+0x6544>
   17538:	mov	r0, #0
   1753c:	mvn	r1, #0
   17540:	str	r1, [fp, #-88]	; 0xffffffa8
   17544:	str	r0, [fp, #-92]	; 0xffffffa4
   17548:	b	17584 <__assert_fail@plt+0x6578>
   1754c:	svcvc	0x00ffffff
   17550:	ldr	r0, [fp, #8]
   17554:	rsb	r0, r0, #0
   17558:	asr	r3, r0, #31
   1755c:	mvn	r1, #0
   17560:	mvn	r2, #-2147483648	; 0x80000000
   17564:	str	r0, [fp, #-96]	; 0xffffffa0
   17568:	mov	r0, r1
   1756c:	mov	r1, r2
   17570:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17574:	bl	1b278 <__assert_fail@plt+0xa26c>
   17578:	str	r0, [fp, #-88]	; 0xffffffa8
   1757c:	str	r1, [fp, #-92]	; 0xffffffa4
   17580:	b	17584 <__assert_fail@plt+0x6578>
   17584:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17588:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1758c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17590:	mvn	r2, r2
   17594:	subs	r1, r2, r1
   17598:	rscs	r0, r0, r2, asr #31
   1759c:	str	r1, [fp, #-100]	; 0xffffff9c
   175a0:	str	r0, [fp, #-104]	; 0xffffff98
   175a4:	bge	17724 <__assert_fail@plt+0x6718>
   175a8:	b	17738 <__assert_fail@plt+0x672c>
   175ac:	ldr	r0, [fp, #8]
   175b0:	cmn	r0, #1
   175b4:	bne	17604 <__assert_fail@plt+0x65f8>
   175b8:	b	175bc <__assert_fail@plt+0x65b0>
   175bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c0:	mov	r1, #-2147483648	; 0x80000000
   175c4:	add	r1, r1, r0, asr #31
   175c8:	rsbs	r0, r0, #0
   175cc:	rscs	r1, r1, #0
   175d0:	str	r0, [fp, #-108]	; 0xffffff94
   175d4:	str	r1, [fp, #-112]	; 0xffffff90
   175d8:	blt	17724 <__assert_fail@plt+0x6718>
   175dc:	b	17738 <__assert_fail@plt+0x672c>
   175e0:	andhi	r0, r0, r1
   175e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175e8:	movw	r1, #0
   175ec:	cmp	r1, r0
   175f0:	bge	17738 <__assert_fail@plt+0x672c>
   175f4:	mov	r0, #0
   175f8:	cmp	r0, #0
   175fc:	bne	17724 <__assert_fail@plt+0x6718>
   17600:	b	17738 <__assert_fail@plt+0x672c>
   17604:	ldr	r0, [fp, #8]
   17608:	asr	r3, r0, #31
   1760c:	mov	r1, #0
   17610:	mov	r2, #-2147483648	; 0x80000000
   17614:	str	r0, [fp, #-116]	; 0xffffff8c
   17618:	mov	r0, r1
   1761c:	mov	r1, r2
   17620:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17624:	bl	1b278 <__assert_fail@plt+0xa26c>
   17628:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1762c:	subs	r0, r0, r2
   17630:	sbcs	r1, r1, r2, asr #31
   17634:	str	r0, [fp, #-120]	; 0xffffff88
   17638:	str	r1, [fp, #-124]	; 0xffffff84
   1763c:	blt	17724 <__assert_fail@plt+0x6718>
   17640:	b	17738 <__assert_fail@plt+0x672c>
   17644:	ldr	r0, [fp, #8]
   17648:	cmp	r0, #0
   1764c:	bne	17654 <__assert_fail@plt+0x6648>
   17650:	b	17738 <__assert_fail@plt+0x672c>
   17654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17658:	cmp	r0, #0
   1765c:	bge	176e4 <__assert_fail@plt+0x66d8>
   17660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17664:	cmn	r0, #1
   17668:	bne	176a4 <__assert_fail@plt+0x6698>
   1766c:	b	17670 <__assert_fail@plt+0x6664>
   17670:	ldr	r0, [fp, #8]
   17674:	mov	r1, #-2147483648	; 0x80000000
   17678:	add	r1, r1, r0, asr #31
   1767c:	rsbs	r0, r0, #0
   17680:	rscs	r1, r1, #0
   17684:	str	r0, [fp, #-128]	; 0xffffff80
   17688:	str	r1, [fp, #-132]	; 0xffffff7c
   1768c:	blt	17724 <__assert_fail@plt+0x6718>
   17690:	b	17738 <__assert_fail@plt+0x672c>
   17694:	mov	r0, #0
   17698:	cmp	r0, #0
   1769c:	bne	17724 <__assert_fail@plt+0x6718>
   176a0:	b	17738 <__assert_fail@plt+0x672c>
   176a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176a8:	asr	r3, r0, #31
   176ac:	mov	r1, #0
   176b0:	mov	r2, #-2147483648	; 0x80000000
   176b4:	str	r0, [fp, #-136]	; 0xffffff78
   176b8:	mov	r0, r1
   176bc:	mov	r1, r2
   176c0:	ldr	r2, [fp, #-136]	; 0xffffff78
   176c4:	bl	1b278 <__assert_fail@plt+0xa26c>
   176c8:	ldr	r2, [fp, #8]
   176cc:	subs	r0, r0, r2
   176d0:	sbcs	r1, r1, r2, asr #31
   176d4:	str	r0, [fp, #-140]	; 0xffffff74
   176d8:	str	r1, [fp, #-144]	; 0xffffff70
   176dc:	blt	17724 <__assert_fail@plt+0x6718>
   176e0:	b	17738 <__assert_fail@plt+0x672c>
   176e4:	ldr	r0, [fp, #8]
   176e8:	asr	r3, r0, #31
   176ec:	mvn	r1, #0
   176f0:	mvn	r2, #-2147483648	; 0x80000000
   176f4:	str	r0, [fp, #-148]	; 0xffffff6c
   176f8:	mov	r0, r1
   176fc:	mov	r1, r2
   17700:	ldr	r2, [fp, #-148]	; 0xffffff6c
   17704:	bl	1b278 <__assert_fail@plt+0xa26c>
   17708:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1770c:	subs	r0, r0, r2
   17710:	sbcs	r1, r1, r2, asr #31
   17714:	str	r0, [fp, #-152]	; 0xffffff68
   17718:	str	r1, [fp, #-156]	; 0xffffff64
   1771c:	bge	17738 <__assert_fail@plt+0x672c>
   17720:	b	17724 <__assert_fail@plt+0x6718>
   17724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17728:	ldr	r1, [fp, #8]
   1772c:	mul	r0, r0, r1
   17730:	str	r0, [fp, #-28]	; 0xffffffe4
   17734:	b	17998 <__assert_fail@plt+0x698c>
   17738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1773c:	ldr	r1, [fp, #8]
   17740:	mul	r0, r0, r1
   17744:	str	r0, [fp, #-28]	; 0xffffffe4
   17748:	b	179a8 <__assert_fail@plt+0x699c>
   1774c:	ldr	r0, [fp, #8]
   17750:	cmp	r0, #0
   17754:	bge	178b4 <__assert_fail@plt+0x68a8>
   17758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1775c:	cmp	r0, #0
   17760:	bge	1783c <__assert_fail@plt+0x6830>
   17764:	b	177ac <__assert_fail@plt+0x67a0>
   17768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1776c:	ldr	r1, [fp, #8]
   17770:	asr	r3, r1, #31
   17774:	mvn	r2, #0
   17778:	str	r0, [fp, #-160]	; 0xffffff60
   1777c:	mov	r0, r2
   17780:	str	r1, [fp, #-164]	; 0xffffff5c
   17784:	mov	r1, r2
   17788:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1778c:	bl	1b34c <__assert_fail@plt+0xa340>
   17790:	ldr	r2, [fp, #-160]	; 0xffffff60
   17794:	subs	r0, r2, r0
   17798:	rscs	r1, r1, r2, asr #31
   1779c:	str	r0, [fp, #-168]	; 0xffffff58
   177a0:	str	r1, [fp, #-172]	; 0xffffff54
   177a4:	bcc	17970 <__assert_fail@plt+0x6964>
   177a8:	b	17984 <__assert_fail@plt+0x6978>
   177ac:	b	177b0 <__assert_fail@plt+0x67a4>
   177b0:	ldr	r0, [pc, #-472]	; 175e0 <__assert_fail@plt+0x65d4>
   177b4:	ldr	r1, [fp, #8]
   177b8:	cmp	r1, r0
   177bc:	blt	177d4 <__assert_fail@plt+0x67c8>
   177c0:	b	177e8 <__assert_fail@plt+0x67dc>
   177c4:	ldr	r0, [fp, #8]
   177c8:	movw	r1, #0
   177cc:	cmp	r1, r0
   177d0:	bge	177e8 <__assert_fail@plt+0x67dc>
   177d4:	mov	r0, #1
   177d8:	mvn	r1, #0
   177dc:	str	r1, [fp, #-176]	; 0xffffff50
   177e0:	str	r0, [fp, #-180]	; 0xffffff4c
   177e4:	b	17814 <__assert_fail@plt+0x6808>
   177e8:	ldr	r0, [fp, #8]
   177ec:	rsb	r0, r0, #0
   177f0:	asr	r3, r0, #31
   177f4:	mvn	r1, #0
   177f8:	str	r0, [fp, #-184]	; 0xffffff48
   177fc:	mov	r0, r1
   17800:	ldr	r2, [fp, #-184]	; 0xffffff48
   17804:	bl	1b34c <__assert_fail@plt+0xa340>
   17808:	str	r0, [fp, #-176]	; 0xffffff50
   1780c:	str	r1, [fp, #-180]	; 0xffffff4c
   17810:	b	17814 <__assert_fail@plt+0x6808>
   17814:	ldr	r0, [fp, #-180]	; 0xffffff4c
   17818:	ldr	r1, [fp, #-176]	; 0xffffff50
   1781c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17820:	mvn	r2, r2
   17824:	subs	r1, r2, r1
   17828:	rscs	r0, r0, r2, asr #31
   1782c:	str	r1, [sp, #188]	; 0xbc
   17830:	str	r0, [sp, #184]	; 0xb8
   17834:	bcs	17970 <__assert_fail@plt+0x6964>
   17838:	b	17984 <__assert_fail@plt+0x6978>
   1783c:	b	17840 <__assert_fail@plt+0x6834>
   17840:	b	17898 <__assert_fail@plt+0x688c>
   17844:	b	17898 <__assert_fail@plt+0x688c>
   17848:	ldr	r0, [fp, #8]
   1784c:	cmn	r0, #1
   17850:	bne	17898 <__assert_fail@plt+0x688c>
   17854:	b	17858 <__assert_fail@plt+0x684c>
   17858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1785c:	add	r0, r0, #0
   17860:	movw	r1, #0
   17864:	cmp	r1, r0
   17868:	blt	17970 <__assert_fail@plt+0x6964>
   1786c:	b	17984 <__assert_fail@plt+0x6978>
   17870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17874:	movw	r1, #0
   17878:	cmp	r1, r0
   1787c:	bge	17984 <__assert_fail@plt+0x6978>
   17880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17884:	sub	r0, r0, #1
   17888:	mvn	r1, #0
   1788c:	cmp	r1, r0
   17890:	blt	17970 <__assert_fail@plt+0x6964>
   17894:	b	17984 <__assert_fail@plt+0x6978>
   17898:	ldr	r0, [fp, #8]
   1789c:	movw	r1, #0
   178a0:	sdiv	r0, r1, r0
   178a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178a8:	cmp	r0, r1
   178ac:	blt	17970 <__assert_fail@plt+0x6964>
   178b0:	b	17984 <__assert_fail@plt+0x6978>
   178b4:	ldr	r0, [fp, #8]
   178b8:	cmp	r0, #0
   178bc:	bne	178c4 <__assert_fail@plt+0x68b8>
   178c0:	b	17984 <__assert_fail@plt+0x6978>
   178c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178c8:	cmp	r0, #0
   178cc:	bge	17938 <__assert_fail@plt+0x692c>
   178d0:	b	178d4 <__assert_fail@plt+0x68c8>
   178d4:	b	1791c <__assert_fail@plt+0x6910>
   178d8:	b	1791c <__assert_fail@plt+0x6910>
   178dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178e0:	cmn	r0, #1
   178e4:	bne	1791c <__assert_fail@plt+0x6910>
   178e8:	b	178ec <__assert_fail@plt+0x68e0>
   178ec:	ldr	r0, [fp, #8]
   178f0:	add	r0, r0, #0
   178f4:	movw	r1, #0
   178f8:	cmp	r1, r0
   178fc:	blt	17970 <__assert_fail@plt+0x6964>
   17900:	b	17984 <__assert_fail@plt+0x6978>
   17904:	ldr	r0, [fp, #8]
   17908:	sub	r0, r0, #1
   1790c:	mvn	r1, #0
   17910:	cmp	r1, r0
   17914:	blt	17970 <__assert_fail@plt+0x6964>
   17918:	b	17984 <__assert_fail@plt+0x6978>
   1791c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17920:	movw	r1, #0
   17924:	sdiv	r0, r1, r0
   17928:	ldr	r1, [fp, #8]
   1792c:	cmp	r0, r1
   17930:	blt	17970 <__assert_fail@plt+0x6964>
   17934:	b	17984 <__assert_fail@plt+0x6978>
   17938:	ldr	r0, [fp, #8]
   1793c:	asr	r3, r0, #31
   17940:	mvn	r1, #0
   17944:	str	r0, [sp, #180]	; 0xb4
   17948:	mov	r0, r1
   1794c:	ldr	r2, [sp, #180]	; 0xb4
   17950:	bl	1b34c <__assert_fail@plt+0xa340>
   17954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17958:	subs	r0, r0, r2
   1795c:	sbcs	r1, r1, r2, asr #31
   17960:	str	r0, [sp, #176]	; 0xb0
   17964:	str	r1, [sp, #172]	; 0xac
   17968:	bcs	17984 <__assert_fail@plt+0x6978>
   1796c:	b	17970 <__assert_fail@plt+0x6964>
   17970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17974:	ldr	r1, [fp, #8]
   17978:	mul	r0, r0, r1
   1797c:	str	r0, [fp, #-28]	; 0xffffffe4
   17980:	b	17998 <__assert_fail@plt+0x698c>
   17984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17988:	ldr	r1, [fp, #8]
   1798c:	mul	r0, r0, r1
   17990:	str	r0, [fp, #-28]	; 0xffffffe4
   17994:	b	179a8 <__assert_fail@plt+0x699c>
   17998:	ldr	r0, [pc, #-1108]	; 1754c <__assert_fail@plt+0x6540>
   1799c:	str	r0, [sp, #168]	; 0xa8
   179a0:	b	179c8 <__assert_fail@plt+0x69bc>
   179a4:			; <UNDEFINED> instruction: 0xffff8000
   179a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   179ac:	cmp	r0, #64	; 0x40
   179b0:	movw	r0, #0
   179b4:	movlt	r0, #1
   179b8:	tst	r0, #1
   179bc:	movw	r0, #64	; 0x40
   179c0:	moveq	r0, #0
   179c4:	str	r0, [sp, #168]	; 0xa8
   179c8:	ldr	r0, [sp, #168]	; 0xa8
   179cc:	str	r0, [fp, #-32]	; 0xffffffe0
   179d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179d4:	cmp	r0, #0
   179d8:	beq	17a08 <__assert_fail@plt+0x69fc>
   179dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179e0:	ldr	r1, [fp, #8]
   179e4:	sdiv	r0, r0, r1
   179e8:	str	r0, [fp, #-24]	; 0xffffffe8
   179ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179f0:	mov	r1, r0
   179f4:	ldr	r2, [fp, #8]
   179f8:	sdiv	r3, r0, r2
   179fc:	mls	r0, r3, r2, r0
   17a00:	sub	r0, r1, r0
   17a04:	str	r0, [fp, #-28]	; 0xffffffe4
   17a08:	ldr	r0, [fp, #-4]
   17a0c:	movw	r1, #0
   17a10:	cmp	r0, r1
   17a14:	bne	17a24 <__assert_fail@plt+0x6a18>
   17a18:	ldr	r0, [fp, #-8]
   17a1c:	movw	r1, #0
   17a20:	str	r1, [r0]
   17a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a28:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a2c:	sub	r0, r0, r1
   17a30:	ldr	r1, [fp, #-12]
   17a34:	cmp	r0, r1
   17a38:	bge	18e70 <__assert_fail@plt+0x7e64>
   17a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a40:	ldr	r1, [fp, #-12]
   17a44:	add	r1, r0, r1
   17a48:	mov	r2, #1
   17a4c:	cmp	r1, r0
   17a50:	movwvc	r2, #0
   17a54:	str	r1, [fp, #-24]	; 0xffffffe8
   17a58:	tst	r2, #1
   17a5c:	bne	18e6c <__assert_fail@plt+0x7e60>
   17a60:	ldr	r0, [fp, #-16]
   17a64:	movw	r1, #0
   17a68:	cmp	r1, r0
   17a6c:	bgt	17a80 <__assert_fail@plt+0x6a74>
   17a70:	ldr	r0, [fp, #-16]
   17a74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a78:	cmp	r0, r1
   17a7c:	blt	18e6c <__assert_fail@plt+0x7e60>
   17a80:	b	17e5c <__assert_fail@plt+0x6e50>
   17a84:	b	17a88 <__assert_fail@plt+0x6a7c>
   17a88:	ldr	r0, [fp, #8]
   17a8c:	cmp	r0, #0
   17a90:	bge	17ba4 <__assert_fail@plt+0x6b98>
   17a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a98:	cmp	r0, #0
   17a9c:	bge	17b28 <__assert_fail@plt+0x6b1c>
   17aa0:	b	17aa4 <__assert_fail@plt+0x6a98>
   17aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aa8:	ldr	r1, [fp, #8]
   17aac:	movw	r2, #127	; 0x7f
   17ab0:	sdiv	r1, r2, r1
   17ab4:	cmp	r0, r1
   17ab8:	blt	17c44 <__assert_fail@plt+0x6c38>
   17abc:	b	17c5c <__assert_fail@plt+0x6c50>
   17ac0:	b	17ac4 <__assert_fail@plt+0x6ab8>
   17ac4:	ldr	r0, [pc, #-1260]	; 175e0 <__assert_fail@plt+0x65d4>
   17ac8:	ldr	r1, [fp, #8]
   17acc:	cmp	r1, r0
   17ad0:	blt	17ae8 <__assert_fail@plt+0x6adc>
   17ad4:	b	17af4 <__assert_fail@plt+0x6ae8>
   17ad8:	ldr	r0, [fp, #8]
   17adc:	movw	r1, #0
   17ae0:	cmp	r1, r0
   17ae4:	bge	17af4 <__assert_fail@plt+0x6ae8>
   17ae8:	movw	r0, #0
   17aec:	str	r0, [sp, #164]	; 0xa4
   17af0:	b	17b0c <__assert_fail@plt+0x6b00>
   17af4:	ldr	r0, [fp, #8]
   17af8:	movw	r1, #0
   17afc:	sub	r0, r1, r0
   17b00:	movw	r1, #127	; 0x7f
   17b04:	sdiv	r0, r1, r0
   17b08:	str	r0, [sp, #164]	; 0xa4
   17b0c:	ldr	r0, [sp, #164]	; 0xa4
   17b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b14:	mvn	r2, #0
   17b18:	sub	r1, r2, r1
   17b1c:	cmp	r0, r1
   17b20:	ble	17c44 <__assert_fail@plt+0x6c38>
   17b24:	b	17c5c <__assert_fail@plt+0x6c50>
   17b28:	b	17b2c <__assert_fail@plt+0x6b20>
   17b2c:	b	17b88 <__assert_fail@plt+0x6b7c>
   17b30:	b	17b88 <__assert_fail@plt+0x6b7c>
   17b34:	ldr	r0, [fp, #8]
   17b38:	cmn	r0, #1
   17b3c:	bne	17b88 <__assert_fail@plt+0x6b7c>
   17b40:	b	17b44 <__assert_fail@plt+0x6b38>
   17b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b48:	mvn	r1, #127	; 0x7f
   17b4c:	add	r0, r0, r1
   17b50:	movw	r1, #0
   17b54:	cmp	r1, r0
   17b58:	blt	17c44 <__assert_fail@plt+0x6c38>
   17b5c:	b	17c5c <__assert_fail@plt+0x6c50>
   17b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b64:	movw	r1, #0
   17b68:	cmp	r1, r0
   17b6c:	bge	17c5c <__assert_fail@plt+0x6c50>
   17b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b74:	sub	r0, r0, #1
   17b78:	movw	r1, #127	; 0x7f
   17b7c:	cmp	r1, r0
   17b80:	blt	17c44 <__assert_fail@plt+0x6c38>
   17b84:	b	17c5c <__assert_fail@plt+0x6c50>
   17b88:	ldr	r0, [fp, #8]
   17b8c:	mvn	r1, #127	; 0x7f
   17b90:	sdiv	r0, r1, r0
   17b94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b98:	cmp	r0, r1
   17b9c:	blt	17c44 <__assert_fail@plt+0x6c38>
   17ba0:	b	17c5c <__assert_fail@plt+0x6c50>
   17ba4:	ldr	r0, [fp, #8]
   17ba8:	cmp	r0, #0
   17bac:	bne	17bb4 <__assert_fail@plt+0x6ba8>
   17bb0:	b	17c5c <__assert_fail@plt+0x6c50>
   17bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bb8:	cmp	r0, #0
   17bbc:	bge	17c2c <__assert_fail@plt+0x6c20>
   17bc0:	b	17bc4 <__assert_fail@plt+0x6bb8>
   17bc4:	b	17c10 <__assert_fail@plt+0x6c04>
   17bc8:	b	17c10 <__assert_fail@plt+0x6c04>
   17bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd0:	cmn	r0, #1
   17bd4:	bne	17c10 <__assert_fail@plt+0x6c04>
   17bd8:	b	17bdc <__assert_fail@plt+0x6bd0>
   17bdc:	ldr	r0, [fp, #8]
   17be0:	mvn	r1, #127	; 0x7f
   17be4:	add	r0, r0, r1
   17be8:	movw	r1, #0
   17bec:	cmp	r1, r0
   17bf0:	blt	17c44 <__assert_fail@plt+0x6c38>
   17bf4:	b	17c5c <__assert_fail@plt+0x6c50>
   17bf8:	ldr	r0, [fp, #8]
   17bfc:	sub	r0, r0, #1
   17c00:	movw	r1, #127	; 0x7f
   17c04:	cmp	r1, r0
   17c08:	blt	17c44 <__assert_fail@plt+0x6c38>
   17c0c:	b	17c5c <__assert_fail@plt+0x6c50>
   17c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c14:	mvn	r1, #127	; 0x7f
   17c18:	sdiv	r0, r1, r0
   17c1c:	ldr	r1, [fp, #8]
   17c20:	cmp	r0, r1
   17c24:	blt	17c44 <__assert_fail@plt+0x6c38>
   17c28:	b	17c5c <__assert_fail@plt+0x6c50>
   17c2c:	ldr	r0, [fp, #8]
   17c30:	movw	r1, #127	; 0x7f
   17c34:	sdiv	r0, r1, r0
   17c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c3c:	cmp	r0, r1
   17c40:	bge	17c5c <__assert_fail@plt+0x6c50>
   17c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c48:	ldr	r1, [fp, #8]
   17c4c:	mul	r0, r0, r1
   17c50:	sxtb	r0, r0
   17c54:	str	r0, [fp, #-28]	; 0xffffffe4
   17c58:	b	18e6c <__assert_fail@plt+0x7e60>
   17c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c60:	ldr	r1, [fp, #8]
   17c64:	mul	r0, r0, r1
   17c68:	sxtb	r0, r0
   17c6c:	str	r0, [fp, #-28]	; 0xffffffe4
   17c70:	b	18e70 <__assert_fail@plt+0x7e64>
   17c74:	ldr	r0, [fp, #8]
   17c78:	cmp	r0, #0
   17c7c:	bge	17d8c <__assert_fail@plt+0x6d80>
   17c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c84:	cmp	r0, #0
   17c88:	bge	17d14 <__assert_fail@plt+0x6d08>
   17c8c:	b	17c90 <__assert_fail@plt+0x6c84>
   17c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c94:	ldr	r1, [fp, #8]
   17c98:	movw	r2, #255	; 0xff
   17c9c:	sdiv	r1, r2, r1
   17ca0:	cmp	r0, r1
   17ca4:	blt	17e28 <__assert_fail@plt+0x6e1c>
   17ca8:	b	17e44 <__assert_fail@plt+0x6e38>
   17cac:	b	17cb0 <__assert_fail@plt+0x6ca4>
   17cb0:	ldr	r0, [pc, #-1752]	; 175e0 <__assert_fail@plt+0x65d4>
   17cb4:	ldr	r1, [fp, #8]
   17cb8:	cmp	r1, r0
   17cbc:	blt	17cd4 <__assert_fail@plt+0x6cc8>
   17cc0:	b	17ce0 <__assert_fail@plt+0x6cd4>
   17cc4:	ldr	r0, [fp, #8]
   17cc8:	movw	r1, #0
   17ccc:	cmp	r1, r0
   17cd0:	bge	17ce0 <__assert_fail@plt+0x6cd4>
   17cd4:	movw	r0, #0
   17cd8:	str	r0, [sp, #160]	; 0xa0
   17cdc:	b	17cf8 <__assert_fail@plt+0x6cec>
   17ce0:	ldr	r0, [fp, #8]
   17ce4:	movw	r1, #0
   17ce8:	sub	r0, r1, r0
   17cec:	movw	r1, #255	; 0xff
   17cf0:	sdiv	r0, r1, r0
   17cf4:	str	r0, [sp, #160]	; 0xa0
   17cf8:	ldr	r0, [sp, #160]	; 0xa0
   17cfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d00:	mvn	r2, #0
   17d04:	sub	r1, r2, r1
   17d08:	cmp	r0, r1
   17d0c:	ble	17e28 <__assert_fail@plt+0x6e1c>
   17d10:	b	17e44 <__assert_fail@plt+0x6e38>
   17d14:	b	17d18 <__assert_fail@plt+0x6d0c>
   17d18:	b	17d70 <__assert_fail@plt+0x6d64>
   17d1c:	b	17d70 <__assert_fail@plt+0x6d64>
   17d20:	ldr	r0, [fp, #8]
   17d24:	cmn	r0, #1
   17d28:	bne	17d70 <__assert_fail@plt+0x6d64>
   17d2c:	b	17d30 <__assert_fail@plt+0x6d24>
   17d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d34:	add	r0, r0, #0
   17d38:	movw	r1, #0
   17d3c:	cmp	r1, r0
   17d40:	blt	17e28 <__assert_fail@plt+0x6e1c>
   17d44:	b	17e44 <__assert_fail@plt+0x6e38>
   17d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d4c:	movw	r1, #0
   17d50:	cmp	r1, r0
   17d54:	bge	17e44 <__assert_fail@plt+0x6e38>
   17d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d5c:	sub	r0, r0, #1
   17d60:	mvn	r1, #0
   17d64:	cmp	r1, r0
   17d68:	blt	17e28 <__assert_fail@plt+0x6e1c>
   17d6c:	b	17e44 <__assert_fail@plt+0x6e38>
   17d70:	ldr	r0, [fp, #8]
   17d74:	movw	r1, #0
   17d78:	sdiv	r0, r1, r0
   17d7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d80:	cmp	r0, r1
   17d84:	blt	17e28 <__assert_fail@plt+0x6e1c>
   17d88:	b	17e44 <__assert_fail@plt+0x6e38>
   17d8c:	ldr	r0, [fp, #8]
   17d90:	cmp	r0, #0
   17d94:	bne	17d9c <__assert_fail@plt+0x6d90>
   17d98:	b	17e44 <__assert_fail@plt+0x6e38>
   17d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17da0:	cmp	r0, #0
   17da4:	bge	17e10 <__assert_fail@plt+0x6e04>
   17da8:	b	17dac <__assert_fail@plt+0x6da0>
   17dac:	b	17df4 <__assert_fail@plt+0x6de8>
   17db0:	b	17df4 <__assert_fail@plt+0x6de8>
   17db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17db8:	cmn	r0, #1
   17dbc:	bne	17df4 <__assert_fail@plt+0x6de8>
   17dc0:	b	17dc4 <__assert_fail@plt+0x6db8>
   17dc4:	ldr	r0, [fp, #8]
   17dc8:	add	r0, r0, #0
   17dcc:	movw	r1, #0
   17dd0:	cmp	r1, r0
   17dd4:	blt	17e28 <__assert_fail@plt+0x6e1c>
   17dd8:	b	17e44 <__assert_fail@plt+0x6e38>
   17ddc:	ldr	r0, [fp, #8]
   17de0:	sub	r0, r0, #1
   17de4:	mvn	r1, #0
   17de8:	cmp	r1, r0
   17dec:	blt	17e28 <__assert_fail@plt+0x6e1c>
   17df0:	b	17e44 <__assert_fail@plt+0x6e38>
   17df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df8:	movw	r1, #0
   17dfc:	sdiv	r0, r1, r0
   17e00:	ldr	r1, [fp, #8]
   17e04:	cmp	r0, r1
   17e08:	blt	17e28 <__assert_fail@plt+0x6e1c>
   17e0c:	b	17e44 <__assert_fail@plt+0x6e38>
   17e10:	ldr	r0, [fp, #8]
   17e14:	movw	r1, #255	; 0xff
   17e18:	sdiv	r0, r1, r0
   17e1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e20:	cmp	r0, r1
   17e24:	bge	17e44 <__assert_fail@plt+0x6e38>
   17e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e2c:	ldr	r1, [fp, #8]
   17e30:	mul	r0, r0, r1
   17e34:	and	r0, r0, #255	; 0xff
   17e38:	str	r0, [fp, #-28]	; 0xffffffe4
   17e3c:	b	18e6c <__assert_fail@plt+0x7e60>
   17e40:	andhi	r0, r0, r0
   17e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e48:	ldr	r1, [fp, #8]
   17e4c:	mul	r0, r0, r1
   17e50:	and	r0, r0, #255	; 0xff
   17e54:	str	r0, [fp, #-28]	; 0xffffffe4
   17e58:	b	18e70 <__assert_fail@plt+0x7e64>
   17e5c:	b	18234 <__assert_fail@plt+0x7228>
   17e60:	b	17e64 <__assert_fail@plt+0x6e58>
   17e64:	ldr	r0, [fp, #8]
   17e68:	cmp	r0, #0
   17e6c:	bge	17f80 <__assert_fail@plt+0x6f74>
   17e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e74:	cmp	r0, #0
   17e78:	bge	17f04 <__assert_fail@plt+0x6ef8>
   17e7c:	b	17e80 <__assert_fail@plt+0x6e74>
   17e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e84:	ldr	r1, [fp, #8]
   17e88:	movw	r2, #32767	; 0x7fff
   17e8c:	sdiv	r1, r2, r1
   17e90:	cmp	r0, r1
   17e94:	blt	18020 <__assert_fail@plt+0x7014>
   17e98:	b	18038 <__assert_fail@plt+0x702c>
   17e9c:	b	17ea0 <__assert_fail@plt+0x6e94>
   17ea0:	ldr	r0, [pc, #4084]	; 18e9c <__assert_fail@plt+0x7e90>
   17ea4:	ldr	r1, [fp, #8]
   17ea8:	cmp	r1, r0
   17eac:	blt	17ec4 <__assert_fail@plt+0x6eb8>
   17eb0:	b	17ed0 <__assert_fail@plt+0x6ec4>
   17eb4:	ldr	r0, [fp, #8]
   17eb8:	movw	r1, #0
   17ebc:	cmp	r1, r0
   17ec0:	bge	17ed0 <__assert_fail@plt+0x6ec4>
   17ec4:	movw	r0, #0
   17ec8:	str	r0, [sp, #156]	; 0x9c
   17ecc:	b	17ee8 <__assert_fail@plt+0x6edc>
   17ed0:	ldr	r0, [fp, #8]
   17ed4:	movw	r1, #0
   17ed8:	sub	r0, r1, r0
   17edc:	movw	r1, #32767	; 0x7fff
   17ee0:	sdiv	r0, r1, r0
   17ee4:	str	r0, [sp, #156]	; 0x9c
   17ee8:	ldr	r0, [sp, #156]	; 0x9c
   17eec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ef0:	mvn	r2, #0
   17ef4:	sub	r1, r2, r1
   17ef8:	cmp	r0, r1
   17efc:	ble	18020 <__assert_fail@plt+0x7014>
   17f00:	b	18038 <__assert_fail@plt+0x702c>
   17f04:	b	17f08 <__assert_fail@plt+0x6efc>
   17f08:	b	17f64 <__assert_fail@plt+0x6f58>
   17f0c:	b	17f64 <__assert_fail@plt+0x6f58>
   17f10:	ldr	r0, [fp, #8]
   17f14:	cmn	r0, #1
   17f18:	bne	17f64 <__assert_fail@plt+0x6f58>
   17f1c:	b	17f20 <__assert_fail@plt+0x6f14>
   17f20:	ldr	r0, [pc, #3964]	; 18ea4 <__assert_fail@plt+0x7e98>
   17f24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f28:	add	r0, r1, r0
   17f2c:	movw	r1, #0
   17f30:	cmp	r1, r0
   17f34:	blt	18020 <__assert_fail@plt+0x7014>
   17f38:	b	18038 <__assert_fail@plt+0x702c>
   17f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f40:	movw	r1, #0
   17f44:	cmp	r1, r0
   17f48:	bge	18038 <__assert_fail@plt+0x702c>
   17f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f50:	sub	r0, r0, #1
   17f54:	movw	r1, #32767	; 0x7fff
   17f58:	cmp	r1, r0
   17f5c:	blt	18020 <__assert_fail@plt+0x7014>
   17f60:	b	18038 <__assert_fail@plt+0x702c>
   17f64:	ldr	r0, [pc, #3896]	; 18ea4 <__assert_fail@plt+0x7e98>
   17f68:	ldr	r1, [fp, #8]
   17f6c:	sdiv	r0, r0, r1
   17f70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f74:	cmp	r0, r1
   17f78:	blt	18020 <__assert_fail@plt+0x7014>
   17f7c:	b	18038 <__assert_fail@plt+0x702c>
   17f80:	ldr	r0, [fp, #8]
   17f84:	cmp	r0, #0
   17f88:	bne	17f90 <__assert_fail@plt+0x6f84>
   17f8c:	b	18038 <__assert_fail@plt+0x702c>
   17f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f94:	cmp	r0, #0
   17f98:	bge	18008 <__assert_fail@plt+0x6ffc>
   17f9c:	b	17fa0 <__assert_fail@plt+0x6f94>
   17fa0:	b	17fec <__assert_fail@plt+0x6fe0>
   17fa4:	b	17fec <__assert_fail@plt+0x6fe0>
   17fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fac:	cmn	r0, #1
   17fb0:	bne	17fec <__assert_fail@plt+0x6fe0>
   17fb4:	b	17fb8 <__assert_fail@plt+0x6fac>
   17fb8:	ldr	r0, [pc, #3812]	; 18ea4 <__assert_fail@plt+0x7e98>
   17fbc:	ldr	r1, [fp, #8]
   17fc0:	add	r0, r1, r0
   17fc4:	movw	r1, #0
   17fc8:	cmp	r1, r0
   17fcc:	blt	18020 <__assert_fail@plt+0x7014>
   17fd0:	b	18038 <__assert_fail@plt+0x702c>
   17fd4:	ldr	r0, [fp, #8]
   17fd8:	sub	r0, r0, #1
   17fdc:	movw	r1, #32767	; 0x7fff
   17fe0:	cmp	r1, r0
   17fe4:	blt	18020 <__assert_fail@plt+0x7014>
   17fe8:	b	18038 <__assert_fail@plt+0x702c>
   17fec:	ldr	r0, [pc, #3760]	; 18ea4 <__assert_fail@plt+0x7e98>
   17ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ff4:	sdiv	r0, r0, r1
   17ff8:	ldr	r1, [fp, #8]
   17ffc:	cmp	r0, r1
   18000:	blt	18020 <__assert_fail@plt+0x7014>
   18004:	b	18038 <__assert_fail@plt+0x702c>
   18008:	ldr	r0, [fp, #8]
   1800c:	movw	r1, #32767	; 0x7fff
   18010:	sdiv	r0, r1, r0
   18014:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18018:	cmp	r0, r1
   1801c:	bge	18038 <__assert_fail@plt+0x702c>
   18020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18024:	ldr	r1, [fp, #8]
   18028:	mul	r0, r0, r1
   1802c:	sxth	r0, r0
   18030:	str	r0, [fp, #-28]	; 0xffffffe4
   18034:	b	18e6c <__assert_fail@plt+0x7e60>
   18038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1803c:	ldr	r1, [fp, #8]
   18040:	mul	r0, r0, r1
   18044:	sxth	r0, r0
   18048:	str	r0, [fp, #-28]	; 0xffffffe4
   1804c:	b	18e70 <__assert_fail@plt+0x7e64>
   18050:	ldr	r0, [fp, #8]
   18054:	cmp	r0, #0
   18058:	bge	18168 <__assert_fail@plt+0x715c>
   1805c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18060:	cmp	r0, #0
   18064:	bge	180f0 <__assert_fail@plt+0x70e4>
   18068:	b	1806c <__assert_fail@plt+0x7060>
   1806c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18070:	ldr	r1, [fp, #8]
   18074:	movw	r2, #65535	; 0xffff
   18078:	sdiv	r1, r2, r1
   1807c:	cmp	r0, r1
   18080:	blt	18204 <__assert_fail@plt+0x71f8>
   18084:	b	1821c <__assert_fail@plt+0x7210>
   18088:	b	1808c <__assert_fail@plt+0x7080>
   1808c:	ldr	r0, [pc, #3592]	; 18e9c <__assert_fail@plt+0x7e90>
   18090:	ldr	r1, [fp, #8]
   18094:	cmp	r1, r0
   18098:	blt	180b0 <__assert_fail@plt+0x70a4>
   1809c:	b	180bc <__assert_fail@plt+0x70b0>
   180a0:	ldr	r0, [fp, #8]
   180a4:	movw	r1, #0
   180a8:	cmp	r1, r0
   180ac:	bge	180bc <__assert_fail@plt+0x70b0>
   180b0:	movw	r0, #0
   180b4:	str	r0, [sp, #152]	; 0x98
   180b8:	b	180d4 <__assert_fail@plt+0x70c8>
   180bc:	ldr	r0, [fp, #8]
   180c0:	movw	r1, #0
   180c4:	sub	r0, r1, r0
   180c8:	movw	r1, #65535	; 0xffff
   180cc:	sdiv	r0, r1, r0
   180d0:	str	r0, [sp, #152]	; 0x98
   180d4:	ldr	r0, [sp, #152]	; 0x98
   180d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180dc:	mvn	r2, #0
   180e0:	sub	r1, r2, r1
   180e4:	cmp	r0, r1
   180e8:	ble	18204 <__assert_fail@plt+0x71f8>
   180ec:	b	1821c <__assert_fail@plt+0x7210>
   180f0:	b	180f4 <__assert_fail@plt+0x70e8>
   180f4:	b	1814c <__assert_fail@plt+0x7140>
   180f8:	b	1814c <__assert_fail@plt+0x7140>
   180fc:	ldr	r0, [fp, #8]
   18100:	cmn	r0, #1
   18104:	bne	1814c <__assert_fail@plt+0x7140>
   18108:	b	1810c <__assert_fail@plt+0x7100>
   1810c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18110:	add	r0, r0, #0
   18114:	movw	r1, #0
   18118:	cmp	r1, r0
   1811c:	blt	18204 <__assert_fail@plt+0x71f8>
   18120:	b	1821c <__assert_fail@plt+0x7210>
   18124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18128:	movw	r1, #0
   1812c:	cmp	r1, r0
   18130:	bge	1821c <__assert_fail@plt+0x7210>
   18134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18138:	sub	r0, r0, #1
   1813c:	mvn	r1, #0
   18140:	cmp	r1, r0
   18144:	blt	18204 <__assert_fail@plt+0x71f8>
   18148:	b	1821c <__assert_fail@plt+0x7210>
   1814c:	ldr	r0, [fp, #8]
   18150:	movw	r1, #0
   18154:	sdiv	r0, r1, r0
   18158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1815c:	cmp	r0, r1
   18160:	blt	18204 <__assert_fail@plt+0x71f8>
   18164:	b	1821c <__assert_fail@plt+0x7210>
   18168:	ldr	r0, [fp, #8]
   1816c:	cmp	r0, #0
   18170:	bne	18178 <__assert_fail@plt+0x716c>
   18174:	b	1821c <__assert_fail@plt+0x7210>
   18178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1817c:	cmp	r0, #0
   18180:	bge	181ec <__assert_fail@plt+0x71e0>
   18184:	b	18188 <__assert_fail@plt+0x717c>
   18188:	b	181d0 <__assert_fail@plt+0x71c4>
   1818c:	b	181d0 <__assert_fail@plt+0x71c4>
   18190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18194:	cmn	r0, #1
   18198:	bne	181d0 <__assert_fail@plt+0x71c4>
   1819c:	b	181a0 <__assert_fail@plt+0x7194>
   181a0:	ldr	r0, [fp, #8]
   181a4:	add	r0, r0, #0
   181a8:	movw	r1, #0
   181ac:	cmp	r1, r0
   181b0:	blt	18204 <__assert_fail@plt+0x71f8>
   181b4:	b	1821c <__assert_fail@plt+0x7210>
   181b8:	ldr	r0, [fp, #8]
   181bc:	sub	r0, r0, #1
   181c0:	mvn	r1, #0
   181c4:	cmp	r1, r0
   181c8:	blt	18204 <__assert_fail@plt+0x71f8>
   181cc:	b	1821c <__assert_fail@plt+0x7210>
   181d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d4:	movw	r1, #0
   181d8:	sdiv	r0, r1, r0
   181dc:	ldr	r1, [fp, #8]
   181e0:	cmp	r0, r1
   181e4:	blt	18204 <__assert_fail@plt+0x71f8>
   181e8:	b	1821c <__assert_fail@plt+0x7210>
   181ec:	ldr	r0, [fp, #8]
   181f0:	movw	r1, #65535	; 0xffff
   181f4:	sdiv	r0, r1, r0
   181f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181fc:	cmp	r0, r1
   18200:	bge	1821c <__assert_fail@plt+0x7210>
   18204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18208:	ldr	r1, [fp, #8]
   1820c:	mul	r0, r0, r1
   18210:	uxth	r0, r0
   18214:	str	r0, [fp, #-28]	; 0xffffffe4
   18218:	b	18e6c <__assert_fail@plt+0x7e60>
   1821c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18220:	ldr	r1, [fp, #8]
   18224:	mul	r0, r0, r1
   18228:	uxth	r0, r0
   1822c:	str	r0, [fp, #-28]	; 0xffffffe4
   18230:	b	18e70 <__assert_fail@plt+0x7e64>
   18234:	b	18238 <__assert_fail@plt+0x722c>
   18238:	b	1823c <__assert_fail@plt+0x7230>
   1823c:	ldr	r0, [fp, #8]
   18240:	cmp	r0, #0
   18244:	bge	18348 <__assert_fail@plt+0x733c>
   18248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1824c:	cmp	r0, #0
   18250:	bge	182dc <__assert_fail@plt+0x72d0>
   18254:	b	18258 <__assert_fail@plt+0x724c>
   18258:	ldr	r0, [pc, #3128]	; 18e98 <__assert_fail@plt+0x7e8c>
   1825c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18260:	ldr	r2, [fp, #8]
   18264:	sdiv	r0, r0, r2
   18268:	cmp	r1, r0
   1826c:	blt	183d8 <__assert_fail@plt+0x73cc>
   18270:	b	183ec <__assert_fail@plt+0x73e0>
   18274:	b	18278 <__assert_fail@plt+0x726c>
   18278:	ldr	r0, [pc, #3100]	; 18e9c <__assert_fail@plt+0x7e90>
   1827c:	ldr	r1, [fp, #8]
   18280:	cmp	r1, r0
   18284:	blt	1829c <__assert_fail@plt+0x7290>
   18288:	b	182a8 <__assert_fail@plt+0x729c>
   1828c:	ldr	r0, [fp, #8]
   18290:	movw	r1, #0
   18294:	cmp	r1, r0
   18298:	bge	182a8 <__assert_fail@plt+0x729c>
   1829c:	movw	r0, #0
   182a0:	str	r0, [sp, #148]	; 0x94
   182a4:	b	182c0 <__assert_fail@plt+0x72b4>
   182a8:	ldr	r0, [pc, #3048]	; 18e98 <__assert_fail@plt+0x7e8c>
   182ac:	ldr	r1, [fp, #8]
   182b0:	movw	r2, #0
   182b4:	sub	r1, r2, r1
   182b8:	sdiv	r0, r0, r1
   182bc:	str	r0, [sp, #148]	; 0x94
   182c0:	ldr	r0, [sp, #148]	; 0x94
   182c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182c8:	mvn	r2, #0
   182cc:	sub	r1, r2, r1
   182d0:	cmp	r0, r1
   182d4:	ble	183d8 <__assert_fail@plt+0x73cc>
   182d8:	b	183ec <__assert_fail@plt+0x73e0>
   182dc:	ldr	r0, [fp, #8]
   182e0:	cmn	r0, #1
   182e4:	bne	1832c <__assert_fail@plt+0x7320>
   182e8:	b	182ec <__assert_fail@plt+0x72e0>
   182ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f0:	add	r0, r0, #-2147483648	; 0x80000000
   182f4:	movw	r1, #0
   182f8:	cmp	r1, r0
   182fc:	blt	183d8 <__assert_fail@plt+0x73cc>
   18300:	b	183ec <__assert_fail@plt+0x73e0>
   18304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18308:	movw	r1, #0
   1830c:	cmp	r1, r0
   18310:	bge	183ec <__assert_fail@plt+0x73e0>
   18314:	ldr	r0, [pc, #2940]	; 18e98 <__assert_fail@plt+0x7e8c>
   18318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1831c:	sub	r1, r1, #1
   18320:	cmp	r0, r1
   18324:	blt	183d8 <__assert_fail@plt+0x73cc>
   18328:	b	183ec <__assert_fail@plt+0x73e0>
   1832c:	ldr	r0, [pc, #2924]	; 18ea0 <__assert_fail@plt+0x7e94>
   18330:	ldr	r1, [fp, #8]
   18334:	sdiv	r0, r0, r1
   18338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1833c:	cmp	r0, r1
   18340:	blt	183d8 <__assert_fail@plt+0x73cc>
   18344:	b	183ec <__assert_fail@plt+0x73e0>
   18348:	ldr	r0, [fp, #8]
   1834c:	cmp	r0, #0
   18350:	bne	18358 <__assert_fail@plt+0x734c>
   18354:	b	183ec <__assert_fail@plt+0x73e0>
   18358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1835c:	cmp	r0, #0
   18360:	bge	183c0 <__assert_fail@plt+0x73b4>
   18364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18368:	cmn	r0, #1
   1836c:	bne	183a4 <__assert_fail@plt+0x7398>
   18370:	b	18374 <__assert_fail@plt+0x7368>
   18374:	ldr	r0, [fp, #8]
   18378:	add	r0, r0, #-2147483648	; 0x80000000
   1837c:	movw	r1, #0
   18380:	cmp	r1, r0
   18384:	blt	183d8 <__assert_fail@plt+0x73cc>
   18388:	b	183ec <__assert_fail@plt+0x73e0>
   1838c:	ldr	r0, [pc, #2820]	; 18e98 <__assert_fail@plt+0x7e8c>
   18390:	ldr	r1, [fp, #8]
   18394:	sub	r1, r1, #1
   18398:	cmp	r0, r1
   1839c:	blt	183d8 <__assert_fail@plt+0x73cc>
   183a0:	b	183ec <__assert_fail@plt+0x73e0>
   183a4:	ldr	r0, [pc, #2804]	; 18ea0 <__assert_fail@plt+0x7e94>
   183a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183ac:	sdiv	r0, r0, r1
   183b0:	ldr	r1, [fp, #8]
   183b4:	cmp	r0, r1
   183b8:	blt	183d8 <__assert_fail@plt+0x73cc>
   183bc:	b	183ec <__assert_fail@plt+0x73e0>
   183c0:	ldr	r0, [pc, #2768]	; 18e98 <__assert_fail@plt+0x7e8c>
   183c4:	ldr	r1, [fp, #8]
   183c8:	sdiv	r0, r0, r1
   183cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183d0:	cmp	r0, r1
   183d4:	bge	183ec <__assert_fail@plt+0x73e0>
   183d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183dc:	ldr	r1, [fp, #8]
   183e0:	mul	r0, r0, r1
   183e4:	str	r0, [fp, #-28]	; 0xffffffe4
   183e8:	b	18e6c <__assert_fail@plt+0x7e60>
   183ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f0:	ldr	r1, [fp, #8]
   183f4:	mul	r0, r0, r1
   183f8:	str	r0, [fp, #-28]	; 0xffffffe4
   183fc:	b	18e70 <__assert_fail@plt+0x7e64>
   18400:	ldr	r0, [fp, #8]
   18404:	cmp	r0, #0
   18408:	bge	18518 <__assert_fail@plt+0x750c>
   1840c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18410:	cmp	r0, #0
   18414:	bge	184a0 <__assert_fail@plt+0x7494>
   18418:	b	18438 <__assert_fail@plt+0x742c>
   1841c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18420:	ldr	r1, [fp, #8]
   18424:	mvn	r2, #0
   18428:	udiv	r1, r2, r1
   1842c:	cmp	r0, r1
   18430:	bcc	185b4 <__assert_fail@plt+0x75a8>
   18434:	b	185c8 <__assert_fail@plt+0x75bc>
   18438:	b	1843c <__assert_fail@plt+0x7430>
   1843c:	ldr	r0, [pc, #2648]	; 18e9c <__assert_fail@plt+0x7e90>
   18440:	ldr	r1, [fp, #8]
   18444:	cmp	r1, r0
   18448:	blt	18460 <__assert_fail@plt+0x7454>
   1844c:	b	1846c <__assert_fail@plt+0x7460>
   18450:	ldr	r0, [fp, #8]
   18454:	movw	r1, #0
   18458:	cmp	r1, r0
   1845c:	bge	1846c <__assert_fail@plt+0x7460>
   18460:	movw	r0, #1
   18464:	str	r0, [sp, #144]	; 0x90
   18468:	b	18484 <__assert_fail@plt+0x7478>
   1846c:	ldr	r0, [fp, #8]
   18470:	movw	r1, #0
   18474:	sub	r0, r1, r0
   18478:	mvn	r1, #0
   1847c:	udiv	r0, r1, r0
   18480:	str	r0, [sp, #144]	; 0x90
   18484:	ldr	r0, [sp, #144]	; 0x90
   18488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1848c:	mvn	r2, #0
   18490:	sub	r1, r2, r1
   18494:	cmp	r0, r1
   18498:	bls	185b4 <__assert_fail@plt+0x75a8>
   1849c:	b	185c8 <__assert_fail@plt+0x75bc>
   184a0:	b	184a4 <__assert_fail@plt+0x7498>
   184a4:	b	184fc <__assert_fail@plt+0x74f0>
   184a8:	b	184fc <__assert_fail@plt+0x74f0>
   184ac:	ldr	r0, [fp, #8]
   184b0:	cmn	r0, #1
   184b4:	bne	184fc <__assert_fail@plt+0x74f0>
   184b8:	b	184bc <__assert_fail@plt+0x74b0>
   184bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c0:	add	r0, r0, #0
   184c4:	movw	r1, #0
   184c8:	cmp	r1, r0
   184cc:	blt	185b4 <__assert_fail@plt+0x75a8>
   184d0:	b	185c8 <__assert_fail@plt+0x75bc>
   184d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184d8:	movw	r1, #0
   184dc:	cmp	r1, r0
   184e0:	bge	185c8 <__assert_fail@plt+0x75bc>
   184e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e8:	sub	r0, r0, #1
   184ec:	mvn	r1, #0
   184f0:	cmp	r1, r0
   184f4:	blt	185b4 <__assert_fail@plt+0x75a8>
   184f8:	b	185c8 <__assert_fail@plt+0x75bc>
   184fc:	ldr	r0, [fp, #8]
   18500:	movw	r1, #0
   18504:	sdiv	r0, r1, r0
   18508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1850c:	cmp	r0, r1
   18510:	blt	185b4 <__assert_fail@plt+0x75a8>
   18514:	b	185c8 <__assert_fail@plt+0x75bc>
   18518:	ldr	r0, [fp, #8]
   1851c:	cmp	r0, #0
   18520:	bne	18528 <__assert_fail@plt+0x751c>
   18524:	b	185c8 <__assert_fail@plt+0x75bc>
   18528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1852c:	cmp	r0, #0
   18530:	bge	1859c <__assert_fail@plt+0x7590>
   18534:	b	18538 <__assert_fail@plt+0x752c>
   18538:	b	18580 <__assert_fail@plt+0x7574>
   1853c:	b	18580 <__assert_fail@plt+0x7574>
   18540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18544:	cmn	r0, #1
   18548:	bne	18580 <__assert_fail@plt+0x7574>
   1854c:	b	18550 <__assert_fail@plt+0x7544>
   18550:	ldr	r0, [fp, #8]
   18554:	add	r0, r0, #0
   18558:	movw	r1, #0
   1855c:	cmp	r1, r0
   18560:	blt	185b4 <__assert_fail@plt+0x75a8>
   18564:	b	185c8 <__assert_fail@plt+0x75bc>
   18568:	ldr	r0, [fp, #8]
   1856c:	sub	r0, r0, #1
   18570:	mvn	r1, #0
   18574:	cmp	r1, r0
   18578:	blt	185b4 <__assert_fail@plt+0x75a8>
   1857c:	b	185c8 <__assert_fail@plt+0x75bc>
   18580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18584:	movw	r1, #0
   18588:	sdiv	r0, r1, r0
   1858c:	ldr	r1, [fp, #8]
   18590:	cmp	r0, r1
   18594:	blt	185b4 <__assert_fail@plt+0x75a8>
   18598:	b	185c8 <__assert_fail@plt+0x75bc>
   1859c:	ldr	r0, [fp, #8]
   185a0:	mvn	r1, #0
   185a4:	udiv	r0, r1, r0
   185a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185ac:	cmp	r0, r1
   185b0:	bcs	185c8 <__assert_fail@plt+0x75bc>
   185b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185b8:	ldr	r1, [fp, #8]
   185bc:	mul	r0, r0, r1
   185c0:	str	r0, [fp, #-28]	; 0xffffffe4
   185c4:	b	18e6c <__assert_fail@plt+0x7e60>
   185c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185cc:	ldr	r1, [fp, #8]
   185d0:	mul	r0, r0, r1
   185d4:	str	r0, [fp, #-28]	; 0xffffffe4
   185d8:	b	18e70 <__assert_fail@plt+0x7e64>
   185dc:	b	185e0 <__assert_fail@plt+0x75d4>
   185e0:	b	185e4 <__assert_fail@plt+0x75d8>
   185e4:	ldr	r0, [fp, #8]
   185e8:	cmp	r0, #0
   185ec:	bge	186f0 <__assert_fail@plt+0x76e4>
   185f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185f4:	cmp	r0, #0
   185f8:	bge	18684 <__assert_fail@plt+0x7678>
   185fc:	b	18600 <__assert_fail@plt+0x75f4>
   18600:	ldr	r0, [pc, #2192]	; 18e98 <__assert_fail@plt+0x7e8c>
   18604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18608:	ldr	r2, [fp, #8]
   1860c:	sdiv	r0, r0, r2
   18610:	cmp	r1, r0
   18614:	blt	18780 <__assert_fail@plt+0x7774>
   18618:	b	18794 <__assert_fail@plt+0x7788>
   1861c:	b	18620 <__assert_fail@plt+0x7614>
   18620:	ldr	r0, [pc, #2164]	; 18e9c <__assert_fail@plt+0x7e90>
   18624:	ldr	r1, [fp, #8]
   18628:	cmp	r1, r0
   1862c:	blt	18644 <__assert_fail@plt+0x7638>
   18630:	b	18650 <__assert_fail@plt+0x7644>
   18634:	ldr	r0, [fp, #8]
   18638:	movw	r1, #0
   1863c:	cmp	r1, r0
   18640:	bge	18650 <__assert_fail@plt+0x7644>
   18644:	movw	r0, #0
   18648:	str	r0, [sp, #140]	; 0x8c
   1864c:	b	18668 <__assert_fail@plt+0x765c>
   18650:	ldr	r0, [pc, #2112]	; 18e98 <__assert_fail@plt+0x7e8c>
   18654:	ldr	r1, [fp, #8]
   18658:	movw	r2, #0
   1865c:	sub	r1, r2, r1
   18660:	sdiv	r0, r0, r1
   18664:	str	r0, [sp, #140]	; 0x8c
   18668:	ldr	r0, [sp, #140]	; 0x8c
   1866c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18670:	mvn	r2, #0
   18674:	sub	r1, r2, r1
   18678:	cmp	r0, r1
   1867c:	ble	18780 <__assert_fail@plt+0x7774>
   18680:	b	18794 <__assert_fail@plt+0x7788>
   18684:	ldr	r0, [fp, #8]
   18688:	cmn	r0, #1
   1868c:	bne	186d4 <__assert_fail@plt+0x76c8>
   18690:	b	18694 <__assert_fail@plt+0x7688>
   18694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18698:	add	r0, r0, #-2147483648	; 0x80000000
   1869c:	movw	r1, #0
   186a0:	cmp	r1, r0
   186a4:	blt	18780 <__assert_fail@plt+0x7774>
   186a8:	b	18794 <__assert_fail@plt+0x7788>
   186ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186b0:	movw	r1, #0
   186b4:	cmp	r1, r0
   186b8:	bge	18794 <__assert_fail@plt+0x7788>
   186bc:	ldr	r0, [pc, #2004]	; 18e98 <__assert_fail@plt+0x7e8c>
   186c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186c4:	sub	r1, r1, #1
   186c8:	cmp	r0, r1
   186cc:	blt	18780 <__assert_fail@plt+0x7774>
   186d0:	b	18794 <__assert_fail@plt+0x7788>
   186d4:	ldr	r0, [pc, #1988]	; 18ea0 <__assert_fail@plt+0x7e94>
   186d8:	ldr	r1, [fp, #8]
   186dc:	sdiv	r0, r0, r1
   186e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186e4:	cmp	r0, r1
   186e8:	blt	18780 <__assert_fail@plt+0x7774>
   186ec:	b	18794 <__assert_fail@plt+0x7788>
   186f0:	ldr	r0, [fp, #8]
   186f4:	cmp	r0, #0
   186f8:	bne	18700 <__assert_fail@plt+0x76f4>
   186fc:	b	18794 <__assert_fail@plt+0x7788>
   18700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18704:	cmp	r0, #0
   18708:	bge	18768 <__assert_fail@plt+0x775c>
   1870c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18710:	cmn	r0, #1
   18714:	bne	1874c <__assert_fail@plt+0x7740>
   18718:	b	1871c <__assert_fail@plt+0x7710>
   1871c:	ldr	r0, [fp, #8]
   18720:	add	r0, r0, #-2147483648	; 0x80000000
   18724:	movw	r1, #0
   18728:	cmp	r1, r0
   1872c:	blt	18780 <__assert_fail@plt+0x7774>
   18730:	b	18794 <__assert_fail@plt+0x7788>
   18734:	ldr	r0, [pc, #1884]	; 18e98 <__assert_fail@plt+0x7e8c>
   18738:	ldr	r1, [fp, #8]
   1873c:	sub	r1, r1, #1
   18740:	cmp	r0, r1
   18744:	blt	18780 <__assert_fail@plt+0x7774>
   18748:	b	18794 <__assert_fail@plt+0x7788>
   1874c:	ldr	r0, [pc, #1868]	; 18ea0 <__assert_fail@plt+0x7e94>
   18750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18754:	sdiv	r0, r0, r1
   18758:	ldr	r1, [fp, #8]
   1875c:	cmp	r0, r1
   18760:	blt	18780 <__assert_fail@plt+0x7774>
   18764:	b	18794 <__assert_fail@plt+0x7788>
   18768:	ldr	r0, [pc, #1832]	; 18e98 <__assert_fail@plt+0x7e8c>
   1876c:	ldr	r1, [fp, #8]
   18770:	sdiv	r0, r0, r1
   18774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18778:	cmp	r0, r1
   1877c:	bge	18794 <__assert_fail@plt+0x7788>
   18780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18784:	ldr	r1, [fp, #8]
   18788:	mul	r0, r0, r1
   1878c:	str	r0, [fp, #-28]	; 0xffffffe4
   18790:	b	18e6c <__assert_fail@plt+0x7e60>
   18794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18798:	ldr	r1, [fp, #8]
   1879c:	mul	r0, r0, r1
   187a0:	str	r0, [fp, #-28]	; 0xffffffe4
   187a4:	b	18e70 <__assert_fail@plt+0x7e64>
   187a8:	ldr	r0, [fp, #8]
   187ac:	cmp	r0, #0
   187b0:	bge	188c0 <__assert_fail@plt+0x78b4>
   187b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b8:	cmp	r0, #0
   187bc:	bge	18848 <__assert_fail@plt+0x783c>
   187c0:	b	187e0 <__assert_fail@plt+0x77d4>
   187c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187c8:	ldr	r1, [fp, #8]
   187cc:	mvn	r2, #0
   187d0:	udiv	r1, r2, r1
   187d4:	cmp	r0, r1
   187d8:	bcc	1895c <__assert_fail@plt+0x7950>
   187dc:	b	18970 <__assert_fail@plt+0x7964>
   187e0:	b	187e4 <__assert_fail@plt+0x77d8>
   187e4:	ldr	r0, [pc, #1712]	; 18e9c <__assert_fail@plt+0x7e90>
   187e8:	ldr	r1, [fp, #8]
   187ec:	cmp	r1, r0
   187f0:	blt	18808 <__assert_fail@plt+0x77fc>
   187f4:	b	18814 <__assert_fail@plt+0x7808>
   187f8:	ldr	r0, [fp, #8]
   187fc:	movw	r1, #0
   18800:	cmp	r1, r0
   18804:	bge	18814 <__assert_fail@plt+0x7808>
   18808:	movw	r0, #1
   1880c:	str	r0, [sp, #136]	; 0x88
   18810:	b	1882c <__assert_fail@plt+0x7820>
   18814:	ldr	r0, [fp, #8]
   18818:	movw	r1, #0
   1881c:	sub	r0, r1, r0
   18820:	mvn	r1, #0
   18824:	udiv	r0, r1, r0
   18828:	str	r0, [sp, #136]	; 0x88
   1882c:	ldr	r0, [sp, #136]	; 0x88
   18830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18834:	mvn	r2, #0
   18838:	sub	r1, r2, r1
   1883c:	cmp	r0, r1
   18840:	bls	1895c <__assert_fail@plt+0x7950>
   18844:	b	18970 <__assert_fail@plt+0x7964>
   18848:	b	1884c <__assert_fail@plt+0x7840>
   1884c:	b	188a4 <__assert_fail@plt+0x7898>
   18850:	b	188a4 <__assert_fail@plt+0x7898>
   18854:	ldr	r0, [fp, #8]
   18858:	cmn	r0, #1
   1885c:	bne	188a4 <__assert_fail@plt+0x7898>
   18860:	b	18864 <__assert_fail@plt+0x7858>
   18864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18868:	add	r0, r0, #0
   1886c:	movw	r1, #0
   18870:	cmp	r1, r0
   18874:	blt	1895c <__assert_fail@plt+0x7950>
   18878:	b	18970 <__assert_fail@plt+0x7964>
   1887c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18880:	movw	r1, #0
   18884:	cmp	r1, r0
   18888:	bge	18970 <__assert_fail@plt+0x7964>
   1888c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18890:	sub	r0, r0, #1
   18894:	mvn	r1, #0
   18898:	cmp	r1, r0
   1889c:	blt	1895c <__assert_fail@plt+0x7950>
   188a0:	b	18970 <__assert_fail@plt+0x7964>
   188a4:	ldr	r0, [fp, #8]
   188a8:	movw	r1, #0
   188ac:	sdiv	r0, r1, r0
   188b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188b4:	cmp	r0, r1
   188b8:	blt	1895c <__assert_fail@plt+0x7950>
   188bc:	b	18970 <__assert_fail@plt+0x7964>
   188c0:	ldr	r0, [fp, #8]
   188c4:	cmp	r0, #0
   188c8:	bne	188d0 <__assert_fail@plt+0x78c4>
   188cc:	b	18970 <__assert_fail@plt+0x7964>
   188d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d4:	cmp	r0, #0
   188d8:	bge	18944 <__assert_fail@plt+0x7938>
   188dc:	b	188e0 <__assert_fail@plt+0x78d4>
   188e0:	b	18928 <__assert_fail@plt+0x791c>
   188e4:	b	18928 <__assert_fail@plt+0x791c>
   188e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188ec:	cmn	r0, #1
   188f0:	bne	18928 <__assert_fail@plt+0x791c>
   188f4:	b	188f8 <__assert_fail@plt+0x78ec>
   188f8:	ldr	r0, [fp, #8]
   188fc:	add	r0, r0, #0
   18900:	movw	r1, #0
   18904:	cmp	r1, r0
   18908:	blt	1895c <__assert_fail@plt+0x7950>
   1890c:	b	18970 <__assert_fail@plt+0x7964>
   18910:	ldr	r0, [fp, #8]
   18914:	sub	r0, r0, #1
   18918:	mvn	r1, #0
   1891c:	cmp	r1, r0
   18920:	blt	1895c <__assert_fail@plt+0x7950>
   18924:	b	18970 <__assert_fail@plt+0x7964>
   18928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1892c:	movw	r1, #0
   18930:	sdiv	r0, r1, r0
   18934:	ldr	r1, [fp, #8]
   18938:	cmp	r0, r1
   1893c:	blt	1895c <__assert_fail@plt+0x7950>
   18940:	b	18970 <__assert_fail@plt+0x7964>
   18944:	ldr	r0, [fp, #8]
   18948:	mvn	r1, #0
   1894c:	udiv	r0, r1, r0
   18950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18954:	cmp	r0, r1
   18958:	bcs	18970 <__assert_fail@plt+0x7964>
   1895c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18960:	ldr	r1, [fp, #8]
   18964:	mul	r0, r0, r1
   18968:	str	r0, [fp, #-28]	; 0xffffffe4
   1896c:	b	18e6c <__assert_fail@plt+0x7e60>
   18970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18974:	ldr	r1, [fp, #8]
   18978:	mul	r0, r0, r1
   1897c:	str	r0, [fp, #-28]	; 0xffffffe4
   18980:	b	18e70 <__assert_fail@plt+0x7e64>
   18984:	b	18988 <__assert_fail@plt+0x797c>
   18988:	ldr	r0, [fp, #8]
   1898c:	cmp	r0, #0
   18990:	bge	18b18 <__assert_fail@plt+0x7b0c>
   18994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18998:	cmp	r0, #0
   1899c:	bge	18a84 <__assert_fail@plt+0x7a78>
   189a0:	b	189a4 <__assert_fail@plt+0x7998>
   189a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a8:	ldr	r1, [fp, #8]
   189ac:	asr	r3, r1, #31
   189b0:	mvn	r2, #0
   189b4:	mvn	ip, #-2147483648	; 0x80000000
   189b8:	str	r0, [sp, #132]	; 0x84
   189bc:	mov	r0, r2
   189c0:	str	r1, [sp, #128]	; 0x80
   189c4:	mov	r1, ip
   189c8:	ldr	r2, [sp, #128]	; 0x80
   189cc:	bl	1b278 <__assert_fail@plt+0xa26c>
   189d0:	ldr	r2, [sp, #132]	; 0x84
   189d4:	subs	r0, r2, r0
   189d8:	rscs	r1, r1, r2, asr #31
   189dc:	str	r0, [sp, #124]	; 0x7c
   189e0:	str	r1, [sp, #120]	; 0x78
   189e4:	blt	18bf8 <__assert_fail@plt+0x7bec>
   189e8:	b	18c0c <__assert_fail@plt+0x7c00>
   189ec:	b	189f0 <__assert_fail@plt+0x79e4>
   189f0:	ldr	r0, [pc, #1188]	; 18e9c <__assert_fail@plt+0x7e90>
   189f4:	ldr	r1, [fp, #8]
   189f8:	cmp	r1, r0
   189fc:	blt	18a14 <__assert_fail@plt+0x7a08>
   18a00:	b	18a28 <__assert_fail@plt+0x7a1c>
   18a04:	ldr	r0, [fp, #8]
   18a08:	movw	r1, #0
   18a0c:	cmp	r1, r0
   18a10:	bge	18a28 <__assert_fail@plt+0x7a1c>
   18a14:	mov	r0, #0
   18a18:	mvn	r1, #0
   18a1c:	str	r1, [sp, #116]	; 0x74
   18a20:	str	r0, [sp, #112]	; 0x70
   18a24:	b	18a5c <__assert_fail@plt+0x7a50>
   18a28:	ldr	r0, [fp, #8]
   18a2c:	rsb	r0, r0, #0
   18a30:	asr	r3, r0, #31
   18a34:	mvn	r1, #0
   18a38:	mvn	r2, #-2147483648	; 0x80000000
   18a3c:	str	r0, [sp, #108]	; 0x6c
   18a40:	mov	r0, r1
   18a44:	mov	r1, r2
   18a48:	ldr	r2, [sp, #108]	; 0x6c
   18a4c:	bl	1b278 <__assert_fail@plt+0xa26c>
   18a50:	str	r0, [sp, #116]	; 0x74
   18a54:	str	r1, [sp, #112]	; 0x70
   18a58:	b	18a5c <__assert_fail@plt+0x7a50>
   18a5c:	ldr	r0, [sp, #112]	; 0x70
   18a60:	ldr	r1, [sp, #116]	; 0x74
   18a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a68:	mvn	r2, r2
   18a6c:	subs	r1, r2, r1
   18a70:	rscs	r0, r0, r2, asr #31
   18a74:	str	r1, [sp, #104]	; 0x68
   18a78:	str	r0, [sp, #100]	; 0x64
   18a7c:	bge	18bf8 <__assert_fail@plt+0x7bec>
   18a80:	b	18c0c <__assert_fail@plt+0x7c00>
   18a84:	ldr	r0, [fp, #8]
   18a88:	cmn	r0, #1
   18a8c:	bne	18ad8 <__assert_fail@plt+0x7acc>
   18a90:	b	18a94 <__assert_fail@plt+0x7a88>
   18a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a98:	mov	r1, #-2147483648	; 0x80000000
   18a9c:	add	r1, r1, r0, asr #31
   18aa0:	rsbs	r0, r0, #0
   18aa4:	rscs	r1, r1, #0
   18aa8:	str	r0, [sp, #96]	; 0x60
   18aac:	str	r1, [sp, #92]	; 0x5c
   18ab0:	blt	18bf8 <__assert_fail@plt+0x7bec>
   18ab4:	b	18c0c <__assert_fail@plt+0x7c00>
   18ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18abc:	movw	r1, #0
   18ac0:	cmp	r1, r0
   18ac4:	bge	18c0c <__assert_fail@plt+0x7c00>
   18ac8:	mov	r0, #0
   18acc:	cmp	r0, #0
   18ad0:	bne	18bf8 <__assert_fail@plt+0x7bec>
   18ad4:	b	18c0c <__assert_fail@plt+0x7c00>
   18ad8:	ldr	r0, [fp, #8]
   18adc:	asr	r3, r0, #31
   18ae0:	mov	r1, #0
   18ae4:	mov	r2, #-2147483648	; 0x80000000
   18ae8:	str	r0, [sp, #88]	; 0x58
   18aec:	mov	r0, r1
   18af0:	mov	r1, r2
   18af4:	ldr	r2, [sp, #88]	; 0x58
   18af8:	bl	1b278 <__assert_fail@plt+0xa26c>
   18afc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b00:	subs	r0, r0, r2
   18b04:	sbcs	r1, r1, r2, asr #31
   18b08:	str	r0, [sp, #84]	; 0x54
   18b0c:	str	r1, [sp, #80]	; 0x50
   18b10:	blt	18bf8 <__assert_fail@plt+0x7bec>
   18b14:	b	18c0c <__assert_fail@plt+0x7c00>
   18b18:	ldr	r0, [fp, #8]
   18b1c:	cmp	r0, #0
   18b20:	bne	18b28 <__assert_fail@plt+0x7b1c>
   18b24:	b	18c0c <__assert_fail@plt+0x7c00>
   18b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b2c:	cmp	r0, #0
   18b30:	bge	18bb8 <__assert_fail@plt+0x7bac>
   18b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b38:	cmn	r0, #1
   18b3c:	bne	18b78 <__assert_fail@plt+0x7b6c>
   18b40:	b	18b44 <__assert_fail@plt+0x7b38>
   18b44:	ldr	r0, [fp, #8]
   18b48:	mov	r1, #-2147483648	; 0x80000000
   18b4c:	add	r1, r1, r0, asr #31
   18b50:	rsbs	r0, r0, #0
   18b54:	rscs	r1, r1, #0
   18b58:	str	r0, [sp, #76]	; 0x4c
   18b5c:	str	r1, [sp, #72]	; 0x48
   18b60:	blt	18bf8 <__assert_fail@plt+0x7bec>
   18b64:	b	18c0c <__assert_fail@plt+0x7c00>
   18b68:	mov	r0, #0
   18b6c:	cmp	r0, #0
   18b70:	bne	18bf8 <__assert_fail@plt+0x7bec>
   18b74:	b	18c0c <__assert_fail@plt+0x7c00>
   18b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b7c:	asr	r3, r0, #31
   18b80:	mov	r1, #0
   18b84:	mov	r2, #-2147483648	; 0x80000000
   18b88:	str	r0, [sp, #68]	; 0x44
   18b8c:	mov	r0, r1
   18b90:	mov	r1, r2
   18b94:	ldr	r2, [sp, #68]	; 0x44
   18b98:	bl	1b278 <__assert_fail@plt+0xa26c>
   18b9c:	ldr	r2, [fp, #8]
   18ba0:	subs	r0, r0, r2
   18ba4:	sbcs	r1, r1, r2, asr #31
   18ba8:	str	r0, [sp, #64]	; 0x40
   18bac:	str	r1, [sp, #60]	; 0x3c
   18bb0:	blt	18bf8 <__assert_fail@plt+0x7bec>
   18bb4:	b	18c0c <__assert_fail@plt+0x7c00>
   18bb8:	ldr	r0, [fp, #8]
   18bbc:	asr	r3, r0, #31
   18bc0:	mvn	r1, #0
   18bc4:	mvn	r2, #-2147483648	; 0x80000000
   18bc8:	str	r0, [sp, #56]	; 0x38
   18bcc:	mov	r0, r1
   18bd0:	mov	r1, r2
   18bd4:	ldr	r2, [sp, #56]	; 0x38
   18bd8:	bl	1b278 <__assert_fail@plt+0xa26c>
   18bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18be0:	subs	r0, r0, r2
   18be4:	sbcs	r1, r1, r2, asr #31
   18be8:	str	r0, [sp, #52]	; 0x34
   18bec:	str	r1, [sp, #48]	; 0x30
   18bf0:	bge	18c0c <__assert_fail@plt+0x7c00>
   18bf4:	b	18bf8 <__assert_fail@plt+0x7bec>
   18bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bfc:	ldr	r1, [fp, #8]
   18c00:	mul	r0, r0, r1
   18c04:	str	r0, [fp, #-28]	; 0xffffffe4
   18c08:	b	18e6c <__assert_fail@plt+0x7e60>
   18c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c10:	ldr	r1, [fp, #8]
   18c14:	mul	r0, r0, r1
   18c18:	str	r0, [fp, #-28]	; 0xffffffe4
   18c1c:	b	18e70 <__assert_fail@plt+0x7e64>
   18c20:	ldr	r0, [fp, #8]
   18c24:	cmp	r0, #0
   18c28:	bge	18d88 <__assert_fail@plt+0x7d7c>
   18c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c30:	cmp	r0, #0
   18c34:	bge	18d10 <__assert_fail@plt+0x7d04>
   18c38:	b	18c80 <__assert_fail@plt+0x7c74>
   18c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c40:	ldr	r1, [fp, #8]
   18c44:	asr	r3, r1, #31
   18c48:	mvn	r2, #0
   18c4c:	str	r0, [sp, #44]	; 0x2c
   18c50:	mov	r0, r2
   18c54:	str	r1, [sp, #40]	; 0x28
   18c58:	mov	r1, r2
   18c5c:	ldr	r2, [sp, #40]	; 0x28
   18c60:	bl	1b34c <__assert_fail@plt+0xa340>
   18c64:	ldr	r2, [sp, #44]	; 0x2c
   18c68:	subs	r0, r2, r0
   18c6c:	rscs	r1, r1, r2, asr #31
   18c70:	str	r0, [sp, #36]	; 0x24
   18c74:	str	r1, [sp, #32]
   18c78:	bcc	18e44 <__assert_fail@plt+0x7e38>
   18c7c:	b	18e58 <__assert_fail@plt+0x7e4c>
   18c80:	b	18c84 <__assert_fail@plt+0x7c78>
   18c84:	ldr	r0, [pc, #528]	; 18e9c <__assert_fail@plt+0x7e90>
   18c88:	ldr	r1, [fp, #8]
   18c8c:	cmp	r1, r0
   18c90:	blt	18ca8 <__assert_fail@plt+0x7c9c>
   18c94:	b	18cbc <__assert_fail@plt+0x7cb0>
   18c98:	ldr	r0, [fp, #8]
   18c9c:	movw	r1, #0
   18ca0:	cmp	r1, r0
   18ca4:	bge	18cbc <__assert_fail@plt+0x7cb0>
   18ca8:	mov	r0, #1
   18cac:	mvn	r1, #0
   18cb0:	str	r1, [sp, #28]
   18cb4:	str	r0, [sp, #24]
   18cb8:	b	18ce8 <__assert_fail@plt+0x7cdc>
   18cbc:	ldr	r0, [fp, #8]
   18cc0:	rsb	r0, r0, #0
   18cc4:	asr	r3, r0, #31
   18cc8:	mvn	r1, #0
   18ccc:	str	r0, [sp, #20]
   18cd0:	mov	r0, r1
   18cd4:	ldr	r2, [sp, #20]
   18cd8:	bl	1b34c <__assert_fail@plt+0xa340>
   18cdc:	str	r0, [sp, #28]
   18ce0:	str	r1, [sp, #24]
   18ce4:	b	18ce8 <__assert_fail@plt+0x7cdc>
   18ce8:	ldr	r0, [sp, #24]
   18cec:	ldr	r1, [sp, #28]
   18cf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18cf4:	mvn	r2, r2
   18cf8:	subs	r1, r2, r1
   18cfc:	rscs	r0, r0, r2, asr #31
   18d00:	str	r1, [sp, #16]
   18d04:	str	r0, [sp, #12]
   18d08:	bcs	18e44 <__assert_fail@plt+0x7e38>
   18d0c:	b	18e58 <__assert_fail@plt+0x7e4c>
   18d10:	b	18d14 <__assert_fail@plt+0x7d08>
   18d14:	b	18d6c <__assert_fail@plt+0x7d60>
   18d18:	b	18d6c <__assert_fail@plt+0x7d60>
   18d1c:	ldr	r0, [fp, #8]
   18d20:	cmn	r0, #1
   18d24:	bne	18d6c <__assert_fail@plt+0x7d60>
   18d28:	b	18d2c <__assert_fail@plt+0x7d20>
   18d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d30:	add	r0, r0, #0
   18d34:	movw	r1, #0
   18d38:	cmp	r1, r0
   18d3c:	blt	18e44 <__assert_fail@plt+0x7e38>
   18d40:	b	18e58 <__assert_fail@plt+0x7e4c>
   18d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d48:	movw	r1, #0
   18d4c:	cmp	r1, r0
   18d50:	bge	18e58 <__assert_fail@plt+0x7e4c>
   18d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d58:	sub	r0, r0, #1
   18d5c:	mvn	r1, #0
   18d60:	cmp	r1, r0
   18d64:	blt	18e44 <__assert_fail@plt+0x7e38>
   18d68:	b	18e58 <__assert_fail@plt+0x7e4c>
   18d6c:	ldr	r0, [fp, #8]
   18d70:	movw	r1, #0
   18d74:	sdiv	r0, r1, r0
   18d78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d7c:	cmp	r0, r1
   18d80:	blt	18e44 <__assert_fail@plt+0x7e38>
   18d84:	b	18e58 <__assert_fail@plt+0x7e4c>
   18d88:	ldr	r0, [fp, #8]
   18d8c:	cmp	r0, #0
   18d90:	bne	18d98 <__assert_fail@plt+0x7d8c>
   18d94:	b	18e58 <__assert_fail@plt+0x7e4c>
   18d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d9c:	cmp	r0, #0
   18da0:	bge	18e0c <__assert_fail@plt+0x7e00>
   18da4:	b	18da8 <__assert_fail@plt+0x7d9c>
   18da8:	b	18df0 <__assert_fail@plt+0x7de4>
   18dac:	b	18df0 <__assert_fail@plt+0x7de4>
   18db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db4:	cmn	r0, #1
   18db8:	bne	18df0 <__assert_fail@plt+0x7de4>
   18dbc:	b	18dc0 <__assert_fail@plt+0x7db4>
   18dc0:	ldr	r0, [fp, #8]
   18dc4:	add	r0, r0, #0
   18dc8:	movw	r1, #0
   18dcc:	cmp	r1, r0
   18dd0:	blt	18e44 <__assert_fail@plt+0x7e38>
   18dd4:	b	18e58 <__assert_fail@plt+0x7e4c>
   18dd8:	ldr	r0, [fp, #8]
   18ddc:	sub	r0, r0, #1
   18de0:	mvn	r1, #0
   18de4:	cmp	r1, r0
   18de8:	blt	18e44 <__assert_fail@plt+0x7e38>
   18dec:	b	18e58 <__assert_fail@plt+0x7e4c>
   18df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df4:	movw	r1, #0
   18df8:	sdiv	r0, r1, r0
   18dfc:	ldr	r1, [fp, #8]
   18e00:	cmp	r0, r1
   18e04:	blt	18e44 <__assert_fail@plt+0x7e38>
   18e08:	b	18e58 <__assert_fail@plt+0x7e4c>
   18e0c:	ldr	r0, [fp, #8]
   18e10:	asr	r3, r0, #31
   18e14:	mvn	r1, #0
   18e18:	str	r0, [sp, #8]
   18e1c:	mov	r0, r1
   18e20:	ldr	r2, [sp, #8]
   18e24:	bl	1b34c <__assert_fail@plt+0xa340>
   18e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e2c:	subs	r0, r0, r2
   18e30:	sbcs	r1, r1, r2, asr #31
   18e34:	str	r0, [sp, #4]
   18e38:	str	r1, [sp]
   18e3c:	bcs	18e58 <__assert_fail@plt+0x7e4c>
   18e40:	b	18e44 <__assert_fail@plt+0x7e38>
   18e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e48:	ldr	r1, [fp, #8]
   18e4c:	mul	r0, r0, r1
   18e50:	str	r0, [fp, #-28]	; 0xffffffe4
   18e54:	b	18e6c <__assert_fail@plt+0x7e60>
   18e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e5c:	ldr	r1, [fp, #8]
   18e60:	mul	r0, r0, r1
   18e64:	str	r0, [fp, #-28]	; 0xffffffe4
   18e68:	b	18e70 <__assert_fail@plt+0x7e64>
   18e6c:	bl	19048 <__assert_fail@plt+0x803c>
   18e70:	ldr	r0, [fp, #-4]
   18e74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e78:	bl	16304 <__assert_fail@plt+0x52f8>
   18e7c:	str	r0, [fp, #-4]
   18e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e84:	ldr	r1, [fp, #-8]
   18e88:	str	r0, [r1]
   18e8c:	ldr	r0, [fp, #-4]
   18e90:	mov	sp, fp
   18e94:	pop	{fp, pc}
   18e98:	svcvc	0x00ffffff
   18e9c:	andhi	r0, r0, r1
   18ea0:	andhi	r0, r0, r0
   18ea4:			; <UNDEFINED> instruction: 0xffff8000
   18ea8:	push	{fp, lr}
   18eac:	mov	fp, sp
   18eb0:	sub	sp, sp, #8
   18eb4:	str	r0, [sp, #4]
   18eb8:	ldr	r0, [sp, #4]
   18ebc:	movw	r1, #1
   18ec0:	bl	18ecc <__assert_fail@plt+0x7ec0>
   18ec4:	mov	sp, fp
   18ec8:	pop	{fp, pc}
   18ecc:	push	{fp, lr}
   18ed0:	mov	fp, sp
   18ed4:	sub	sp, sp, #8
   18ed8:	str	r0, [sp, #4]
   18edc:	str	r1, [sp]
   18ee0:	ldr	r0, [sp, #4]
   18ee4:	ldr	r1, [sp]
   18ee8:	bl	19098 <__assert_fail@plt+0x808c>
   18eec:	bl	16290 <__assert_fail@plt+0x5284>
   18ef0:	mov	sp, fp
   18ef4:	pop	{fp, pc}
   18ef8:	push	{fp, lr}
   18efc:	mov	fp, sp
   18f00:	sub	sp, sp, #8
   18f04:	str	r0, [sp, #4]
   18f08:	ldr	r0, [sp, #4]
   18f0c:	movw	r1, #1
   18f10:	bl	18f1c <__assert_fail@plt+0x7f10>
   18f14:	mov	sp, fp
   18f18:	pop	{fp, pc}
   18f1c:	push	{fp, lr}
   18f20:	mov	fp, sp
   18f24:	sub	sp, sp, #8
   18f28:	str	r0, [sp, #4]
   18f2c:	str	r1, [sp]
   18f30:	ldr	r0, [sp, #4]
   18f34:	ldr	r1, [sp]
   18f38:	bl	19494 <__assert_fail@plt+0x8488>
   18f3c:	bl	16290 <__assert_fail@plt+0x5284>
   18f40:	mov	sp, fp
   18f44:	pop	{fp, pc}
   18f48:	push	{fp, lr}
   18f4c:	mov	fp, sp
   18f50:	sub	sp, sp, #16
   18f54:	str	r0, [fp, #-4]
   18f58:	str	r1, [sp, #8]
   18f5c:	ldr	r0, [sp, #8]
   18f60:	bl	1626c <__assert_fail@plt+0x5260>
   18f64:	ldr	r1, [fp, #-4]
   18f68:	ldr	r2, [sp, #8]
   18f6c:	str	r0, [sp, #4]
   18f70:	bl	10e2c <memcpy@plt>
   18f74:	ldr	r0, [sp, #4]
   18f78:	mov	sp, fp
   18f7c:	pop	{fp, pc}
   18f80:	push	{fp, lr}
   18f84:	mov	fp, sp
   18f88:	sub	sp, sp, #16
   18f8c:	str	r0, [fp, #-4]
   18f90:	str	r1, [sp, #8]
   18f94:	ldr	r0, [sp, #8]
   18f98:	bl	162c0 <__assert_fail@plt+0x52b4>
   18f9c:	ldr	r1, [fp, #-4]
   18fa0:	ldr	r2, [sp, #8]
   18fa4:	str	r0, [sp, #4]
   18fa8:	bl	10e2c <memcpy@plt>
   18fac:	ldr	r0, [sp, #4]
   18fb0:	mov	sp, fp
   18fb4:	pop	{fp, pc}
   18fb8:	push	{fp, lr}
   18fbc:	mov	fp, sp
   18fc0:	sub	sp, sp, #16
   18fc4:	str	r0, [fp, #-4]
   18fc8:	str	r1, [sp, #8]
   18fcc:	ldr	r0, [sp, #8]
   18fd0:	add	r0, r0, #1
   18fd4:	bl	162c0 <__assert_fail@plt+0x52b4>
   18fd8:	str	r0, [sp, #4]
   18fdc:	ldr	r0, [sp, #4]
   18fe0:	ldr	r1, [sp, #8]
   18fe4:	add	r0, r0, r1
   18fe8:	movw	r1, #0
   18fec:	strb	r1, [r0]
   18ff0:	ldr	r0, [sp, #4]
   18ff4:	ldr	r1, [fp, #-4]
   18ff8:	ldr	r2, [sp, #8]
   18ffc:	str	r0, [sp]
   19000:	bl	10e2c <memcpy@plt>
   19004:	ldr	r0, [sp]
   19008:	mov	sp, fp
   1900c:	pop	{fp, pc}
   19010:	push	{fp, lr}
   19014:	mov	fp, sp
   19018:	sub	sp, sp, #8
   1901c:	str	r0, [sp, #4]
   19020:	ldr	r0, [sp, #4]
   19024:	ldr	r1, [sp, #4]
   19028:	str	r0, [sp]
   1902c:	mov	r0, r1
   19030:	bl	10f28 <strlen@plt>
   19034:	add	r1, r0, #1
   19038:	ldr	r0, [sp]
   1903c:	bl	18f48 <__assert_fail@plt+0x7f3c>
   19040:	mov	sp, fp
   19044:	pop	{fp, pc}
   19048:	push	{fp, lr}
   1904c:	mov	fp, sp
   19050:	sub	sp, sp, #8
   19054:	movw	r0, #53484	; 0xd0ec
   19058:	movt	r0, #2
   1905c:	ldr	r0, [r0]
   19060:	movw	r1, #49420	; 0xc10c
   19064:	movt	r1, #1
   19068:	str	r0, [sp, #4]
   1906c:	mov	r0, r1
   19070:	bl	10f1c <gettext@plt>
   19074:	ldr	r1, [sp, #4]
   19078:	str	r0, [sp]
   1907c:	mov	r0, r1
   19080:	movw	r1, #0
   19084:	movw	r2, #47677	; 0xba3d
   19088:	movt	r2, #1
   1908c:	ldr	r3, [sp]
   19090:	bl	10ebc <error@plt>
   19094:	bl	10fe8 <abort@plt>
   19098:	push	{fp, lr}
   1909c:	mov	fp, sp
   190a0:	sub	sp, sp, #16
   190a4:	str	r0, [sp, #8]
   190a8:	str	r1, [sp, #4]
   190ac:	ldr	r0, [sp, #8]
   190b0:	cmp	r0, #0
   190b4:	beq	190c4 <__assert_fail@plt+0x80b8>
   190b8:	ldr	r0, [sp, #4]
   190bc:	cmp	r0, #0
   190c0:	bne	190d0 <__assert_fail@plt+0x80c4>
   190c4:	movw	r0, #1
   190c8:	str	r0, [sp, #4]
   190cc:	str	r0, [sp, #8]
   190d0:	ldr	r0, [sp, #4]
   190d4:	cmp	r0, #0
   190d8:	beq	1910c <__assert_fail@plt+0x8100>
   190dc:	ldr	r0, [pc, #76]	; 19130 <__assert_fail@plt+0x8124>
   190e0:	ldr	r1, [sp, #4]
   190e4:	udiv	r0, r0, r1
   190e8:	ldr	r1, [sp, #8]
   190ec:	cmp	r0, r1
   190f0:	bcs	1910c <__assert_fail@plt+0x8100>
   190f4:	bl	10f40 <__errno_location@plt>
   190f8:	movw	lr, #12
   190fc:	str	lr, [r0]
   19100:	movw	r0, #0
   19104:	str	r0, [fp, #-4]
   19108:	b	19124 <__assert_fail@plt+0x8118>
   1910c:	ldr	r0, [sp, #8]
   19110:	ldr	r1, [sp, #4]
   19114:	bl	10dc0 <calloc@plt>
   19118:	str	r0, [sp]
   1911c:	ldr	r0, [sp]
   19120:	str	r0, [fp, #-4]
   19124:	ldr	r0, [fp, #-4]
   19128:	mov	sp, fp
   1912c:	pop	{fp, pc}
   19130:	svcvc	0x00ffffff
   19134:	push	{fp, lr}
   19138:	mov	fp, sp
   1913c:	sub	sp, sp, #16
   19140:	str	r0, [sp, #8]
   19144:	ldr	r0, [sp, #8]
   19148:	cmp	r0, #0
   1914c:	bne	19158 <__assert_fail@plt+0x814c>
   19150:	movw	r0, #1
   19154:	str	r0, [sp, #8]
   19158:	ldr	r0, [pc, #64]	; 191a0 <__assert_fail@plt+0x8194>
   1915c:	ldr	r1, [sp, #8]
   19160:	cmp	r0, r1
   19164:	bcs	19180 <__assert_fail@plt+0x8174>
   19168:	bl	10f40 <__errno_location@plt>
   1916c:	movw	lr, #12
   19170:	str	lr, [r0]
   19174:	movw	r0, #0
   19178:	str	r0, [fp, #-4]
   1917c:	b	19194 <__assert_fail@plt+0x8188>
   19180:	ldr	r0, [sp, #8]
   19184:	bl	10ec8 <malloc@plt>
   19188:	str	r0, [sp, #4]
   1918c:	ldr	r0, [sp, #4]
   19190:	str	r0, [fp, #-4]
   19194:	ldr	r0, [fp, #-4]
   19198:	mov	sp, fp
   1919c:	pop	{fp, pc}
   191a0:	svcvc	0x00ffffff
   191a4:	push	{fp, lr}
   191a8:	mov	fp, sp
   191ac:	sub	sp, sp, #16
   191b0:	str	r0, [sp, #8]
   191b4:	str	r1, [sp, #4]
   191b8:	ldr	r0, [sp, #8]
   191bc:	movw	r1, #0
   191c0:	cmp	r0, r1
   191c4:	bne	191d8 <__assert_fail@plt+0x81cc>
   191c8:	ldr	r0, [sp, #4]
   191cc:	bl	19134 <__assert_fail@plt+0x8128>
   191d0:	str	r0, [fp, #-4]
   191d4:	b	19238 <__assert_fail@plt+0x822c>
   191d8:	ldr	r0, [sp, #4]
   191dc:	cmp	r0, #0
   191e0:	bne	191f8 <__assert_fail@plt+0x81ec>
   191e4:	ldr	r0, [sp, #8]
   191e8:	bl	13078 <__assert_fail@plt+0x206c>
   191ec:	movw	r0, #0
   191f0:	str	r0, [fp, #-4]
   191f4:	b	19238 <__assert_fail@plt+0x822c>
   191f8:	ldr	r0, [pc, #68]	; 19244 <__assert_fail@plt+0x8238>
   191fc:	ldr	r1, [sp, #4]
   19200:	cmp	r0, r1
   19204:	bcs	19220 <__assert_fail@plt+0x8214>
   19208:	bl	10f40 <__errno_location@plt>
   1920c:	movw	lr, #12
   19210:	str	lr, [r0]
   19214:	movw	r0, #0
   19218:	str	r0, [fp, #-4]
   1921c:	b	19238 <__assert_fail@plt+0x822c>
   19220:	ldr	r0, [sp, #8]
   19224:	ldr	r1, [sp, #4]
   19228:	bl	10e5c <realloc@plt>
   1922c:	str	r0, [sp]
   19230:	ldr	r0, [sp]
   19234:	str	r0, [fp, #-4]
   19238:	ldr	r0, [fp, #-4]
   1923c:	mov	sp, fp
   19240:	pop	{fp, pc}
   19244:	svcvc	0x00ffffff
   19248:	push	{fp, lr}
   1924c:	mov	fp, sp
   19250:	sub	sp, sp, #24
   19254:	str	r0, [fp, #-8]
   19258:	str	r1, [sp, #12]
   1925c:	ldr	r0, [fp, #-8]
   19260:	str	r0, [sp, #8]
   19264:	ldr	r0, [sp, #12]
   19268:	str	r0, [sp, #4]
   1926c:	ldr	r0, [sp, #8]
   19270:	ldr	r1, [sp, #4]
   19274:	cmp	r0, r1
   19278:	bne	19288 <__assert_fail@plt+0x827c>
   1927c:	movw	r0, #0
   19280:	str	r0, [fp, #-4]
   19284:	b	192f4 <__assert_fail@plt+0x82e8>
   19288:	b	1928c <__assert_fail@plt+0x8280>
   1928c:	ldr	r0, [sp, #8]
   19290:	ldrb	r0, [r0]
   19294:	bl	1aff8 <__assert_fail@plt+0x9fec>
   19298:	strb	r0, [sp, #3]
   1929c:	ldr	r0, [sp, #4]
   192a0:	ldrb	r0, [r0]
   192a4:	bl	1aff8 <__assert_fail@plt+0x9fec>
   192a8:	strb	r0, [sp, #2]
   192ac:	ldrb	r0, [sp, #3]
   192b0:	cmp	r0, #0
   192b4:	bne	192bc <__assert_fail@plt+0x82b0>
   192b8:	b	192e4 <__assert_fail@plt+0x82d8>
   192bc:	ldr	r0, [sp, #8]
   192c0:	add	r0, r0, #1
   192c4:	str	r0, [sp, #8]
   192c8:	ldr	r0, [sp, #4]
   192cc:	add	r0, r0, #1
   192d0:	str	r0, [sp, #4]
   192d4:	ldrb	r0, [sp, #3]
   192d8:	ldrb	r1, [sp, #2]
   192dc:	cmp	r0, r1
   192e0:	beq	1928c <__assert_fail@plt+0x8280>
   192e4:	ldrb	r0, [sp, #3]
   192e8:	ldrb	r1, [sp, #2]
   192ec:	sub	r0, r0, r1
   192f0:	str	r0, [fp, #-4]
   192f4:	ldr	r0, [fp, #-4]
   192f8:	mov	sp, fp
   192fc:	pop	{fp, pc}
   19300:	push	{fp, lr}
   19304:	mov	fp, sp
   19308:	sub	sp, sp, #16
   1930c:	str	r0, [sp, #8]
   19310:	ldr	r0, [sp, #8]
   19314:	bl	10e98 <__fpending@plt>
   19318:	cmp	r0, #0
   1931c:	movw	r0, #0
   19320:	movne	r0, #1
   19324:	and	r0, r0, #1
   19328:	strb	r0, [sp, #7]
   1932c:	ldr	r0, [sp, #8]
   19330:	bl	10ea4 <ferror_unlocked@plt>
   19334:	cmp	r0, #0
   19338:	movw	r0, #0
   1933c:	movne	r0, #1
   19340:	and	r0, r0, #1
   19344:	strb	r0, [sp, #6]
   19348:	ldr	r0, [sp, #8]
   1934c:	bl	12edc <__assert_fail@plt+0x1ed0>
   19350:	cmp	r0, #0
   19354:	movw	r0, #0
   19358:	movne	r0, #1
   1935c:	and	r0, r0, #1
   19360:	strb	r0, [sp, #5]
   19364:	ldrb	r0, [sp, #6]
   19368:	tst	r0, #1
   1936c:	bne	19398 <__assert_fail@plt+0x838c>
   19370:	ldrb	r0, [sp, #5]
   19374:	tst	r0, #1
   19378:	beq	193bc <__assert_fail@plt+0x83b0>
   1937c:	ldrb	r0, [sp, #7]
   19380:	tst	r0, #1
   19384:	bne	19398 <__assert_fail@plt+0x838c>
   19388:	bl	10f40 <__errno_location@plt>
   1938c:	ldr	r0, [r0]
   19390:	cmp	r0, #9
   19394:	beq	193bc <__assert_fail@plt+0x83b0>
   19398:	ldrb	r0, [sp, #5]
   1939c:	tst	r0, #1
   193a0:	bne	193b0 <__assert_fail@plt+0x83a4>
   193a4:	bl	10f40 <__errno_location@plt>
   193a8:	movw	lr, #0
   193ac:	str	lr, [r0]
   193b0:	mvn	r0, #0
   193b4:	str	r0, [fp, #-4]
   193b8:	b	193c4 <__assert_fail@plt+0x83b8>
   193bc:	movw	r0, #0
   193c0:	str	r0, [fp, #-4]
   193c4:	ldr	r0, [fp, #-4]
   193c8:	mov	sp, fp
   193cc:	pop	{fp, pc}
   193d0:	push	{fp, lr}
   193d4:	mov	fp, sp
   193d8:	bl	10f40 <__errno_location@plt>
   193dc:	movw	lr, #12
   193e0:	str	lr, [r0]
   193e4:	movw	r0, #0
   193e8:	pop	{fp, pc}
   193ec:	push	{fp, lr}
   193f0:	mov	fp, sp
   193f4:	sub	sp, sp, #8
   193f8:	str	r0, [sp, #4]
   193fc:	ldr	r0, [sp, #4]
   19400:	cmn	r0, #1
   19404:	bhi	19418 <__assert_fail@plt+0x840c>
   19408:	ldr	r0, [sp, #4]
   1940c:	bl	19134 <__assert_fail@plt+0x8128>
   19410:	str	r0, [sp]
   19414:	b	19420 <__assert_fail@plt+0x8414>
   19418:	bl	193d0 <__assert_fail@plt+0x83c4>
   1941c:	str	r0, [sp]
   19420:	ldr	r0, [sp]
   19424:	mov	sp, fp
   19428:	pop	{fp, pc}
   1942c:	push	{fp, lr}
   19430:	mov	fp, sp
   19434:	sub	sp, sp, #16
   19438:	str	r0, [fp, #-4]
   1943c:	str	r1, [sp, #8]
   19440:	ldr	r0, [sp, #8]
   19444:	cmn	r0, #1
   19448:	bhi	19480 <__assert_fail@plt+0x8474>
   1944c:	ldr	r0, [fp, #-4]
   19450:	ldr	r1, [sp, #8]
   19454:	ldr	r2, [sp, #8]
   19458:	cmp	r2, #0
   1945c:	movw	r2, #0
   19460:	movne	r2, #1
   19464:	mvn	r3, #0
   19468:	eor	r2, r2, r3
   1946c:	and	r2, r2, #1
   19470:	orr	r1, r1, r2
   19474:	bl	191a4 <__assert_fail@plt+0x8198>
   19478:	str	r0, [sp, #4]
   1947c:	b	19488 <__assert_fail@plt+0x847c>
   19480:	bl	193d0 <__assert_fail@plt+0x83c4>
   19484:	str	r0, [sp, #4]
   19488:	ldr	r0, [sp, #4]
   1948c:	mov	sp, fp
   19490:	pop	{fp, pc}
   19494:	push	{fp, lr}
   19498:	mov	fp, sp
   1949c:	sub	sp, sp, #16
   194a0:	str	r0, [sp, #8]
   194a4:	str	r1, [sp, #4]
   194a8:	ldr	r0, [sp, #8]
   194ac:	mvn	r1, #0
   194b0:	cmp	r1, r0
   194b4:	bcs	194d8 <__assert_fail@plt+0x84cc>
   194b8:	ldr	r0, [sp, #4]
   194bc:	cmp	r0, #0
   194c0:	beq	194d0 <__assert_fail@plt+0x84c4>
   194c4:	bl	193d0 <__assert_fail@plt+0x83c4>
   194c8:	str	r0, [fp, #-4]
   194cc:	b	19518 <__assert_fail@plt+0x850c>
   194d0:	movw	r0, #0
   194d4:	str	r0, [sp, #8]
   194d8:	ldr	r0, [sp, #4]
   194dc:	mvn	r1, #0
   194e0:	cmp	r1, r0
   194e4:	bcs	19508 <__assert_fail@plt+0x84fc>
   194e8:	ldr	r0, [sp, #8]
   194ec:	cmp	r0, #0
   194f0:	beq	19500 <__assert_fail@plt+0x84f4>
   194f4:	bl	193d0 <__assert_fail@plt+0x83c4>
   194f8:	str	r0, [fp, #-4]
   194fc:	b	19518 <__assert_fail@plt+0x850c>
   19500:	movw	r0, #0
   19504:	str	r0, [sp, #4]
   19508:	ldr	r0, [sp, #8]
   1950c:	ldr	r1, [sp, #4]
   19510:	bl	19098 <__assert_fail@plt+0x808c>
   19514:	str	r0, [fp, #-4]
   19518:	ldr	r0, [fp, #-4]
   1951c:	mov	sp, fp
   19520:	pop	{fp, pc}
   19524:	push	{fp, lr}
   19528:	mov	fp, sp
   1952c:	sub	sp, sp, #16
   19530:	str	r0, [fp, #-4]
   19534:	str	r1, [sp, #8]
   19538:	str	r2, [sp, #4]
   1953c:	ldr	r0, [sp, #8]
   19540:	cmp	r0, #0
   19544:	beq	19554 <__assert_fail@plt+0x8548>
   19548:	ldr	r0, [sp, #4]
   1954c:	cmp	r0, #0
   19550:	bne	19560 <__assert_fail@plt+0x8554>
   19554:	movw	r0, #1
   19558:	str	r0, [sp, #4]
   1955c:	str	r0, [sp, #8]
   19560:	ldr	r0, [sp, #8]
   19564:	cmn	r0, #1
   19568:	bhi	19590 <__assert_fail@plt+0x8584>
   1956c:	ldr	r0, [sp, #4]
   19570:	cmn	r0, #1
   19574:	bhi	19590 <__assert_fail@plt+0x8584>
   19578:	ldr	r0, [fp, #-4]
   1957c:	ldr	r1, [sp, #8]
   19580:	ldr	r2, [sp, #4]
   19584:	bl	196b0 <__assert_fail@plt+0x86a4>
   19588:	str	r0, [sp]
   1958c:	b	19598 <__assert_fail@plt+0x858c>
   19590:	bl	193d0 <__assert_fail@plt+0x83c4>
   19594:	str	r0, [sp]
   19598:	ldr	r0, [sp]
   1959c:	mov	sp, fp
   195a0:	pop	{fp, pc}
   195a4:	push	{fp, lr}
   195a8:	mov	fp, sp
   195ac:	sub	sp, sp, #8
   195b0:	movw	r0, #14
   195b4:	bl	10fa0 <nl_langinfo@plt>
   195b8:	str	r0, [sp, #4]
   195bc:	ldr	r0, [sp, #4]
   195c0:	movw	lr, #0
   195c4:	cmp	r0, lr
   195c8:	bne	195d8 <__assert_fail@plt+0x85cc>
   195cc:	movw	r0, #47259	; 0xb89b
   195d0:	movt	r0, #1
   195d4:	str	r0, [sp, #4]
   195d8:	ldr	r0, [sp, #4]
   195dc:	ldrb	r0, [r0]
   195e0:	cmp	r0, #0
   195e4:	bne	195f4 <__assert_fail@plt+0x85e8>
   195e8:	movw	r0, #49437	; 0xc11d
   195ec:	movt	r0, #1
   195f0:	str	r0, [sp, #4]
   195f4:	ldr	r0, [sp, #4]
   195f8:	mov	sp, fp
   195fc:	pop	{fp, pc}
   19600:	push	{fp, lr}
   19604:	mov	fp, sp
   19608:	sub	sp, sp, #32
   1960c:	str	r0, [fp, #-8]
   19610:	str	r1, [fp, #-12]
   19614:	str	r2, [sp, #16]
   19618:	str	r3, [sp, #12]
   1961c:	ldr	r0, [fp, #-8]
   19620:	movw	r1, #0
   19624:	cmp	r0, r1
   19628:	bne	19634 <__assert_fail@plt+0x8628>
   1962c:	add	r0, sp, #4
   19630:	str	r0, [fp, #-8]
   19634:	ldr	r0, [fp, #-8]
   19638:	ldr	r1, [fp, #-12]
   1963c:	ldr	r2, [sp, #16]
   19640:	ldr	r3, [sp, #12]
   19644:	bl	10eb0 <mbrtowc@plt>
   19648:	str	r0, [sp, #8]
   1964c:	ldr	r0, [sp, #8]
   19650:	mvn	r1, #1
   19654:	cmp	r1, r0
   19658:	bhi	1969c <__assert_fail@plt+0x8690>
   1965c:	ldr	r0, [sp, #16]
   19660:	cmp	r0, #0
   19664:	beq	1969c <__assert_fail@plt+0x8690>
   19668:	movw	r0, #0
   1966c:	bl	1b080 <__assert_fail@plt+0xa074>
   19670:	tst	r0, #1
   19674:	bne	1969c <__assert_fail@plt+0x8690>
   19678:	ldr	r0, [fp, #-12]
   1967c:	ldrb	r0, [r0]
   19680:	strb	r0, [sp, #3]
   19684:	ldrb	r0, [sp, #3]
   19688:	ldr	r1, [fp, #-8]
   1968c:	str	r0, [r1]
   19690:	movw	r0, #1
   19694:	str	r0, [fp, #-4]
   19698:	b	196a4 <__assert_fail@plt+0x8698>
   1969c:	ldr	r0, [sp, #8]
   196a0:	str	r0, [fp, #-4]
   196a4:	ldr	r0, [fp, #-4]
   196a8:	mov	sp, fp
   196ac:	pop	{fp, pc}
   196b0:	push	{fp, lr}
   196b4:	mov	fp, sp
   196b8:	sub	sp, sp, #176	; 0xb0
   196bc:	str	r0, [fp, #-8]
   196c0:	str	r1, [fp, #-12]
   196c4:	str	r2, [fp, #-16]
   196c8:	b	19a80 <__assert_fail@plt+0x8a74>
   196cc:	b	198a0 <__assert_fail@plt+0x8894>
   196d0:	ldr	r0, [fp, #-16]
   196d4:	cmp	r0, #0
   196d8:	bcs	197dc <__assert_fail@plt+0x87d0>
   196dc:	ldr	r0, [fp, #-12]
   196e0:	cmp	r0, #0
   196e4:	bcs	1976c <__assert_fail@plt+0x8760>
   196e8:	b	19708 <__assert_fail@plt+0x86fc>
   196ec:	ldr	r0, [fp, #-12]
   196f0:	ldr	r1, [fp, #-16]
   196f4:	movw	r2, #127	; 0x7f
   196f8:	udiv	r1, r2, r1
   196fc:	cmp	r0, r1
   19700:	bcc	19870 <__assert_fail@plt+0x8864>
   19704:	b	19888 <__assert_fail@plt+0x887c>
   19708:	b	1971c <__assert_fail@plt+0x8710>
   1970c:	ldr	r0, [fp, #-16]
   19710:	cmp	r0, #1
   19714:	bcc	1972c <__assert_fail@plt+0x8720>
   19718:	b	19738 <__assert_fail@plt+0x872c>
   1971c:	ldr	r0, [fp, #-16]
   19720:	movw	r1, #0
   19724:	cmp	r1, r0
   19728:	bcs	19738 <__assert_fail@plt+0x872c>
   1972c:	movw	r0, #0
   19730:	str	r0, [fp, #-24]	; 0xffffffe8
   19734:	b	19750 <__assert_fail@plt+0x8744>
   19738:	ldr	r0, [fp, #-16]
   1973c:	movw	r1, #0
   19740:	sub	r0, r1, r0
   19744:	movw	r1, #127	; 0x7f
   19748:	udiv	r0, r1, r0
   1974c:	str	r0, [fp, #-24]	; 0xffffffe8
   19750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19754:	ldr	r1, [fp, #-12]
   19758:	mvn	r2, #0
   1975c:	sub	r1, r2, r1
   19760:	cmp	r0, r1
   19764:	bls	19870 <__assert_fail@plt+0x8864>
   19768:	b	19888 <__assert_fail@plt+0x887c>
   1976c:	ldr	r0, [fp, #-16]
   19770:	cmn	r0, #1
   19774:	bne	197c0 <__assert_fail@plt+0x87b4>
   19778:	b	19798 <__assert_fail@plt+0x878c>
   1977c:	ldr	r0, [fp, #-12]
   19780:	mvn	r1, #127	; 0x7f
   19784:	add	r0, r0, r1
   19788:	movw	r1, #0
   1978c:	cmp	r1, r0
   19790:	bcc	19870 <__assert_fail@plt+0x8864>
   19794:	b	19888 <__assert_fail@plt+0x887c>
   19798:	ldr	r0, [fp, #-12]
   1979c:	movw	r1, #0
   197a0:	cmp	r1, r0
   197a4:	bcs	19888 <__assert_fail@plt+0x887c>
   197a8:	ldr	r0, [fp, #-12]
   197ac:	sub	r0, r0, #1
   197b0:	movw	r1, #127	; 0x7f
   197b4:	cmp	r1, r0
   197b8:	bcc	19870 <__assert_fail@plt+0x8864>
   197bc:	b	19888 <__assert_fail@plt+0x887c>
   197c0:	ldr	r0, [fp, #-16]
   197c4:	mvn	r1, #127	; 0x7f
   197c8:	udiv	r0, r1, r0
   197cc:	ldr	r1, [fp, #-12]
   197d0:	cmp	r0, r1
   197d4:	bcc	19870 <__assert_fail@plt+0x8864>
   197d8:	b	19888 <__assert_fail@plt+0x887c>
   197dc:	ldr	r0, [fp, #-16]
   197e0:	cmp	r0, #0
   197e4:	bne	197ec <__assert_fail@plt+0x87e0>
   197e8:	b	19888 <__assert_fail@plt+0x887c>
   197ec:	ldr	r0, [fp, #-12]
   197f0:	cmp	r0, #0
   197f4:	bcs	19858 <__assert_fail@plt+0x884c>
   197f8:	ldr	r0, [fp, #-12]
   197fc:	cmn	r0, #1
   19800:	bne	1983c <__assert_fail@plt+0x8830>
   19804:	b	19824 <__assert_fail@plt+0x8818>
   19808:	ldr	r0, [fp, #-16]
   1980c:	mvn	r1, #127	; 0x7f
   19810:	add	r0, r0, r1
   19814:	movw	r1, #0
   19818:	cmp	r1, r0
   1981c:	bcc	19870 <__assert_fail@plt+0x8864>
   19820:	b	19888 <__assert_fail@plt+0x887c>
   19824:	ldr	r0, [fp, #-16]
   19828:	sub	r0, r0, #1
   1982c:	movw	r1, #127	; 0x7f
   19830:	cmp	r1, r0
   19834:	bcc	19870 <__assert_fail@plt+0x8864>
   19838:	b	19888 <__assert_fail@plt+0x887c>
   1983c:	ldr	r0, [fp, #-12]
   19840:	mvn	r1, #127	; 0x7f
   19844:	udiv	r0, r1, r0
   19848:	ldr	r1, [fp, #-16]
   1984c:	cmp	r0, r1
   19850:	bcc	19870 <__assert_fail@plt+0x8864>
   19854:	b	19888 <__assert_fail@plt+0x887c>
   19858:	ldr	r0, [fp, #-16]
   1985c:	movw	r1, #127	; 0x7f
   19860:	udiv	r0, r1, r0
   19864:	ldr	r1, [fp, #-12]
   19868:	cmp	r0, r1
   1986c:	bcs	19888 <__assert_fail@plt+0x887c>
   19870:	ldr	r0, [fp, #-12]
   19874:	ldr	r1, [fp, #-16]
   19878:	mul	r0, r0, r1
   1987c:	sxtb	r0, r0
   19880:	str	r0, [fp, #-20]	; 0xffffffec
   19884:	b	1aa00 <__assert_fail@plt+0x99f4>
   19888:	ldr	r0, [fp, #-12]
   1988c:	ldr	r1, [fp, #-16]
   19890:	mul	r0, r0, r1
   19894:	sxtb	r0, r0
   19898:	str	r0, [fp, #-20]	; 0xffffffec
   1989c:	b	1aa18 <__assert_fail@plt+0x9a0c>
   198a0:	ldr	r0, [fp, #-16]
   198a4:	cmp	r0, #0
   198a8:	bcs	199b4 <__assert_fail@plt+0x89a8>
   198ac:	ldr	r0, [fp, #-12]
   198b0:	cmp	r0, #0
   198b4:	bcs	1993c <__assert_fail@plt+0x8930>
   198b8:	b	198d8 <__assert_fail@plt+0x88cc>
   198bc:	ldr	r0, [fp, #-12]
   198c0:	ldr	r1, [fp, #-16]
   198c4:	movw	r2, #255	; 0xff
   198c8:	udiv	r1, r2, r1
   198cc:	cmp	r0, r1
   198d0:	bcc	19a50 <__assert_fail@plt+0x8a44>
   198d4:	b	19a68 <__assert_fail@plt+0x8a5c>
   198d8:	b	198ec <__assert_fail@plt+0x88e0>
   198dc:	ldr	r0, [fp, #-16]
   198e0:	cmp	r0, #1
   198e4:	bcc	198fc <__assert_fail@plt+0x88f0>
   198e8:	b	19908 <__assert_fail@plt+0x88fc>
   198ec:	ldr	r0, [fp, #-16]
   198f0:	movw	r1, #0
   198f4:	cmp	r1, r0
   198f8:	bcs	19908 <__assert_fail@plt+0x88fc>
   198fc:	movw	r0, #0
   19900:	str	r0, [fp, #-28]	; 0xffffffe4
   19904:	b	19920 <__assert_fail@plt+0x8914>
   19908:	ldr	r0, [fp, #-16]
   1990c:	movw	r1, #0
   19910:	sub	r0, r1, r0
   19914:	movw	r1, #255	; 0xff
   19918:	udiv	r0, r1, r0
   1991c:	str	r0, [fp, #-28]	; 0xffffffe4
   19920:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19924:	ldr	r1, [fp, #-12]
   19928:	mvn	r2, #0
   1992c:	sub	r1, r2, r1
   19930:	cmp	r0, r1
   19934:	bls	19a50 <__assert_fail@plt+0x8a44>
   19938:	b	19a68 <__assert_fail@plt+0x8a5c>
   1993c:	b	19944 <__assert_fail@plt+0x8938>
   19940:	b	19948 <__assert_fail@plt+0x893c>
   19944:	b	19998 <__assert_fail@plt+0x898c>
   19948:	ldr	r0, [fp, #-16]
   1994c:	cmn	r0, #1
   19950:	bne	19998 <__assert_fail@plt+0x898c>
   19954:	b	19970 <__assert_fail@plt+0x8964>
   19958:	ldr	r0, [fp, #-12]
   1995c:	add	r0, r0, #0
   19960:	movw	r1, #0
   19964:	cmp	r1, r0
   19968:	bcc	19a50 <__assert_fail@plt+0x8a44>
   1996c:	b	19a68 <__assert_fail@plt+0x8a5c>
   19970:	ldr	r0, [fp, #-12]
   19974:	movw	r1, #0
   19978:	cmp	r1, r0
   1997c:	bcs	19a68 <__assert_fail@plt+0x8a5c>
   19980:	ldr	r0, [fp, #-12]
   19984:	sub	r0, r0, #1
   19988:	mvn	r1, #0
   1998c:	cmp	r1, r0
   19990:	bcc	19a50 <__assert_fail@plt+0x8a44>
   19994:	b	19a68 <__assert_fail@plt+0x8a5c>
   19998:	ldr	r0, [fp, #-16]
   1999c:	movw	r1, #0
   199a0:	udiv	r0, r1, r0
   199a4:	ldr	r1, [fp, #-12]
   199a8:	cmp	r0, r1
   199ac:	bcc	19a50 <__assert_fail@plt+0x8a44>
   199b0:	b	19a68 <__assert_fail@plt+0x8a5c>
   199b4:	ldr	r0, [fp, #-16]
   199b8:	cmp	r0, #0
   199bc:	bne	199c4 <__assert_fail@plt+0x89b8>
   199c0:	b	19a68 <__assert_fail@plt+0x8a5c>
   199c4:	ldr	r0, [fp, #-12]
   199c8:	cmp	r0, #0
   199cc:	bcs	19a38 <__assert_fail@plt+0x8a2c>
   199d0:	b	199d8 <__assert_fail@plt+0x89cc>
   199d4:	b	199dc <__assert_fail@plt+0x89d0>
   199d8:	b	19a1c <__assert_fail@plt+0x8a10>
   199dc:	ldr	r0, [fp, #-12]
   199e0:	cmn	r0, #1
   199e4:	bne	19a1c <__assert_fail@plt+0x8a10>
   199e8:	b	19a04 <__assert_fail@plt+0x89f8>
   199ec:	ldr	r0, [fp, #-16]
   199f0:	add	r0, r0, #0
   199f4:	movw	r1, #0
   199f8:	cmp	r1, r0
   199fc:	bcc	19a50 <__assert_fail@plt+0x8a44>
   19a00:	b	19a68 <__assert_fail@plt+0x8a5c>
   19a04:	ldr	r0, [fp, #-16]
   19a08:	sub	r0, r0, #1
   19a0c:	mvn	r1, #0
   19a10:	cmp	r1, r0
   19a14:	bcc	19a50 <__assert_fail@plt+0x8a44>
   19a18:	b	19a68 <__assert_fail@plt+0x8a5c>
   19a1c:	ldr	r0, [fp, #-12]
   19a20:	movw	r1, #0
   19a24:	udiv	r0, r1, r0
   19a28:	ldr	r1, [fp, #-16]
   19a2c:	cmp	r0, r1
   19a30:	bcc	19a50 <__assert_fail@plt+0x8a44>
   19a34:	b	19a68 <__assert_fail@plt+0x8a5c>
   19a38:	ldr	r0, [fp, #-16]
   19a3c:	movw	r1, #255	; 0xff
   19a40:	udiv	r0, r1, r0
   19a44:	ldr	r1, [fp, #-12]
   19a48:	cmp	r0, r1
   19a4c:	bcs	19a68 <__assert_fail@plt+0x8a5c>
   19a50:	ldr	r0, [fp, #-12]
   19a54:	ldr	r1, [fp, #-16]
   19a58:	mul	r0, r0, r1
   19a5c:	and	r0, r0, #255	; 0xff
   19a60:	str	r0, [fp, #-20]	; 0xffffffec
   19a64:	b	1aa00 <__assert_fail@plt+0x99f4>
   19a68:	ldr	r0, [fp, #-12]
   19a6c:	ldr	r1, [fp, #-16]
   19a70:	mul	r0, r0, r1
   19a74:	and	r0, r0, #255	; 0xff
   19a78:	str	r0, [fp, #-20]	; 0xffffffec
   19a7c:	b	1aa18 <__assert_fail@plt+0x9a0c>
   19a80:	b	19e38 <__assert_fail@plt+0x8e2c>
   19a84:	b	19c58 <__assert_fail@plt+0x8c4c>
   19a88:	ldr	r0, [fp, #-16]
   19a8c:	cmp	r0, #0
   19a90:	bcs	19b94 <__assert_fail@plt+0x8b88>
   19a94:	ldr	r0, [fp, #-12]
   19a98:	cmp	r0, #0
   19a9c:	bcs	19b24 <__assert_fail@plt+0x8b18>
   19aa0:	b	19ac0 <__assert_fail@plt+0x8ab4>
   19aa4:	ldr	r0, [fp, #-12]
   19aa8:	ldr	r1, [fp, #-16]
   19aac:	movw	r2, #32767	; 0x7fff
   19ab0:	udiv	r1, r2, r1
   19ab4:	cmp	r0, r1
   19ab8:	bcc	19c28 <__assert_fail@plt+0x8c1c>
   19abc:	b	19c40 <__assert_fail@plt+0x8c34>
   19ac0:	b	19ad4 <__assert_fail@plt+0x8ac8>
   19ac4:	ldr	r0, [fp, #-16]
   19ac8:	cmp	r0, #1
   19acc:	bcc	19ae4 <__assert_fail@plt+0x8ad8>
   19ad0:	b	19af0 <__assert_fail@plt+0x8ae4>
   19ad4:	ldr	r0, [fp, #-16]
   19ad8:	movw	r1, #0
   19adc:	cmp	r1, r0
   19ae0:	bcs	19af0 <__assert_fail@plt+0x8ae4>
   19ae4:	movw	r0, #0
   19ae8:	str	r0, [fp, #-32]	; 0xffffffe0
   19aec:	b	19b08 <__assert_fail@plt+0x8afc>
   19af0:	ldr	r0, [fp, #-16]
   19af4:	movw	r1, #0
   19af8:	sub	r0, r1, r0
   19afc:	movw	r1, #32767	; 0x7fff
   19b00:	udiv	r0, r1, r0
   19b04:	str	r0, [fp, #-32]	; 0xffffffe0
   19b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b0c:	ldr	r1, [fp, #-12]
   19b10:	mvn	r2, #0
   19b14:	sub	r1, r2, r1
   19b18:	cmp	r0, r1
   19b1c:	bls	19c28 <__assert_fail@plt+0x8c1c>
   19b20:	b	19c40 <__assert_fail@plt+0x8c34>
   19b24:	ldr	r0, [fp, #-16]
   19b28:	cmn	r0, #1
   19b2c:	bne	19b78 <__assert_fail@plt+0x8b6c>
   19b30:	b	19b50 <__assert_fail@plt+0x8b44>
   19b34:	ldr	r0, [pc, #3840]	; 1aa3c <__assert_fail@plt+0x9a30>
   19b38:	ldr	r1, [fp, #-12]
   19b3c:	add	r0, r1, r0
   19b40:	movw	r1, #0
   19b44:	cmp	r1, r0
   19b48:	bcc	19c28 <__assert_fail@plt+0x8c1c>
   19b4c:	b	19c40 <__assert_fail@plt+0x8c34>
   19b50:	ldr	r0, [fp, #-12]
   19b54:	movw	r1, #0
   19b58:	cmp	r1, r0
   19b5c:	bcs	19c40 <__assert_fail@plt+0x8c34>
   19b60:	ldr	r0, [fp, #-12]
   19b64:	sub	r0, r0, #1
   19b68:	movw	r1, #32767	; 0x7fff
   19b6c:	cmp	r1, r0
   19b70:	bcc	19c28 <__assert_fail@plt+0x8c1c>
   19b74:	b	19c40 <__assert_fail@plt+0x8c34>
   19b78:	ldr	r0, [pc, #3772]	; 1aa3c <__assert_fail@plt+0x9a30>
   19b7c:	ldr	r1, [fp, #-16]
   19b80:	udiv	r0, r0, r1
   19b84:	ldr	r1, [fp, #-12]
   19b88:	cmp	r0, r1
   19b8c:	bcc	19c28 <__assert_fail@plt+0x8c1c>
   19b90:	b	19c40 <__assert_fail@plt+0x8c34>
   19b94:	ldr	r0, [fp, #-16]
   19b98:	cmp	r0, #0
   19b9c:	bne	19ba4 <__assert_fail@plt+0x8b98>
   19ba0:	b	19c40 <__assert_fail@plt+0x8c34>
   19ba4:	ldr	r0, [fp, #-12]
   19ba8:	cmp	r0, #0
   19bac:	bcs	19c10 <__assert_fail@plt+0x8c04>
   19bb0:	ldr	r0, [fp, #-12]
   19bb4:	cmn	r0, #1
   19bb8:	bne	19bf4 <__assert_fail@plt+0x8be8>
   19bbc:	b	19bdc <__assert_fail@plt+0x8bd0>
   19bc0:	ldr	r0, [pc, #3700]	; 1aa3c <__assert_fail@plt+0x9a30>
   19bc4:	ldr	r1, [fp, #-16]
   19bc8:	add	r0, r1, r0
   19bcc:	movw	r1, #0
   19bd0:	cmp	r1, r0
   19bd4:	bcc	19c28 <__assert_fail@plt+0x8c1c>
   19bd8:	b	19c40 <__assert_fail@plt+0x8c34>
   19bdc:	ldr	r0, [fp, #-16]
   19be0:	sub	r0, r0, #1
   19be4:	movw	r1, #32767	; 0x7fff
   19be8:	cmp	r1, r0
   19bec:	bcc	19c28 <__assert_fail@plt+0x8c1c>
   19bf0:	b	19c40 <__assert_fail@plt+0x8c34>
   19bf4:	ldr	r0, [pc, #3648]	; 1aa3c <__assert_fail@plt+0x9a30>
   19bf8:	ldr	r1, [fp, #-12]
   19bfc:	udiv	r0, r0, r1
   19c00:	ldr	r1, [fp, #-16]
   19c04:	cmp	r0, r1
   19c08:	bcc	19c28 <__assert_fail@plt+0x8c1c>
   19c0c:	b	19c40 <__assert_fail@plt+0x8c34>
   19c10:	ldr	r0, [fp, #-16]
   19c14:	movw	r1, #32767	; 0x7fff
   19c18:	udiv	r0, r1, r0
   19c1c:	ldr	r1, [fp, #-12]
   19c20:	cmp	r0, r1
   19c24:	bcs	19c40 <__assert_fail@plt+0x8c34>
   19c28:	ldr	r0, [fp, #-12]
   19c2c:	ldr	r1, [fp, #-16]
   19c30:	mul	r0, r0, r1
   19c34:	sxth	r0, r0
   19c38:	str	r0, [fp, #-20]	; 0xffffffec
   19c3c:	b	1aa00 <__assert_fail@plt+0x99f4>
   19c40:	ldr	r0, [fp, #-12]
   19c44:	ldr	r1, [fp, #-16]
   19c48:	mul	r0, r0, r1
   19c4c:	sxth	r0, r0
   19c50:	str	r0, [fp, #-20]	; 0xffffffec
   19c54:	b	1aa18 <__assert_fail@plt+0x9a0c>
   19c58:	ldr	r0, [fp, #-16]
   19c5c:	cmp	r0, #0
   19c60:	bcs	19d6c <__assert_fail@plt+0x8d60>
   19c64:	ldr	r0, [fp, #-12]
   19c68:	cmp	r0, #0
   19c6c:	bcs	19cf4 <__assert_fail@plt+0x8ce8>
   19c70:	b	19c90 <__assert_fail@plt+0x8c84>
   19c74:	ldr	r0, [fp, #-12]
   19c78:	ldr	r1, [fp, #-16]
   19c7c:	movw	r2, #65535	; 0xffff
   19c80:	udiv	r1, r2, r1
   19c84:	cmp	r0, r1
   19c88:	bcc	19e08 <__assert_fail@plt+0x8dfc>
   19c8c:	b	19e20 <__assert_fail@plt+0x8e14>
   19c90:	b	19ca4 <__assert_fail@plt+0x8c98>
   19c94:	ldr	r0, [fp, #-16]
   19c98:	cmp	r0, #1
   19c9c:	bcc	19cb4 <__assert_fail@plt+0x8ca8>
   19ca0:	b	19cc0 <__assert_fail@plt+0x8cb4>
   19ca4:	ldr	r0, [fp, #-16]
   19ca8:	movw	r1, #0
   19cac:	cmp	r1, r0
   19cb0:	bcs	19cc0 <__assert_fail@plt+0x8cb4>
   19cb4:	movw	r0, #0
   19cb8:	str	r0, [fp, #-36]	; 0xffffffdc
   19cbc:	b	19cd8 <__assert_fail@plt+0x8ccc>
   19cc0:	ldr	r0, [fp, #-16]
   19cc4:	movw	r1, #0
   19cc8:	sub	r0, r1, r0
   19ccc:	movw	r1, #65535	; 0xffff
   19cd0:	udiv	r0, r1, r0
   19cd4:	str	r0, [fp, #-36]	; 0xffffffdc
   19cd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19cdc:	ldr	r1, [fp, #-12]
   19ce0:	mvn	r2, #0
   19ce4:	sub	r1, r2, r1
   19ce8:	cmp	r0, r1
   19cec:	bls	19e08 <__assert_fail@plt+0x8dfc>
   19cf0:	b	19e20 <__assert_fail@plt+0x8e14>
   19cf4:	b	19cfc <__assert_fail@plt+0x8cf0>
   19cf8:	b	19d00 <__assert_fail@plt+0x8cf4>
   19cfc:	b	19d50 <__assert_fail@plt+0x8d44>
   19d00:	ldr	r0, [fp, #-16]
   19d04:	cmn	r0, #1
   19d08:	bne	19d50 <__assert_fail@plt+0x8d44>
   19d0c:	b	19d28 <__assert_fail@plt+0x8d1c>
   19d10:	ldr	r0, [fp, #-12]
   19d14:	add	r0, r0, #0
   19d18:	movw	r1, #0
   19d1c:	cmp	r1, r0
   19d20:	bcc	19e08 <__assert_fail@plt+0x8dfc>
   19d24:	b	19e20 <__assert_fail@plt+0x8e14>
   19d28:	ldr	r0, [fp, #-12]
   19d2c:	movw	r1, #0
   19d30:	cmp	r1, r0
   19d34:	bcs	19e20 <__assert_fail@plt+0x8e14>
   19d38:	ldr	r0, [fp, #-12]
   19d3c:	sub	r0, r0, #1
   19d40:	mvn	r1, #0
   19d44:	cmp	r1, r0
   19d48:	bcc	19e08 <__assert_fail@plt+0x8dfc>
   19d4c:	b	19e20 <__assert_fail@plt+0x8e14>
   19d50:	ldr	r0, [fp, #-16]
   19d54:	movw	r1, #0
   19d58:	udiv	r0, r1, r0
   19d5c:	ldr	r1, [fp, #-12]
   19d60:	cmp	r0, r1
   19d64:	bcc	19e08 <__assert_fail@plt+0x8dfc>
   19d68:	b	19e20 <__assert_fail@plt+0x8e14>
   19d6c:	ldr	r0, [fp, #-16]
   19d70:	cmp	r0, #0
   19d74:	bne	19d7c <__assert_fail@plt+0x8d70>
   19d78:	b	19e20 <__assert_fail@plt+0x8e14>
   19d7c:	ldr	r0, [fp, #-12]
   19d80:	cmp	r0, #0
   19d84:	bcs	19df0 <__assert_fail@plt+0x8de4>
   19d88:	b	19d90 <__assert_fail@plt+0x8d84>
   19d8c:	b	19d94 <__assert_fail@plt+0x8d88>
   19d90:	b	19dd4 <__assert_fail@plt+0x8dc8>
   19d94:	ldr	r0, [fp, #-12]
   19d98:	cmn	r0, #1
   19d9c:	bne	19dd4 <__assert_fail@plt+0x8dc8>
   19da0:	b	19dbc <__assert_fail@plt+0x8db0>
   19da4:	ldr	r0, [fp, #-16]
   19da8:	add	r0, r0, #0
   19dac:	movw	r1, #0
   19db0:	cmp	r1, r0
   19db4:	bcc	19e08 <__assert_fail@plt+0x8dfc>
   19db8:	b	19e20 <__assert_fail@plt+0x8e14>
   19dbc:	ldr	r0, [fp, #-16]
   19dc0:	sub	r0, r0, #1
   19dc4:	mvn	r1, #0
   19dc8:	cmp	r1, r0
   19dcc:	bcc	19e08 <__assert_fail@plt+0x8dfc>
   19dd0:	b	19e20 <__assert_fail@plt+0x8e14>
   19dd4:	ldr	r0, [fp, #-12]
   19dd8:	movw	r1, #0
   19ddc:	udiv	r0, r1, r0
   19de0:	ldr	r1, [fp, #-16]
   19de4:	cmp	r0, r1
   19de8:	bcc	19e08 <__assert_fail@plt+0x8dfc>
   19dec:	b	19e20 <__assert_fail@plt+0x8e14>
   19df0:	ldr	r0, [fp, #-16]
   19df4:	movw	r1, #65535	; 0xffff
   19df8:	udiv	r0, r1, r0
   19dfc:	ldr	r1, [fp, #-12]
   19e00:	cmp	r0, r1
   19e04:	bcs	19e20 <__assert_fail@plt+0x8e14>
   19e08:	ldr	r0, [fp, #-12]
   19e0c:	ldr	r1, [fp, #-16]
   19e10:	mul	r0, r0, r1
   19e14:	uxth	r0, r0
   19e18:	str	r0, [fp, #-20]	; 0xffffffec
   19e1c:	b	1aa00 <__assert_fail@plt+0x99f4>
   19e20:	ldr	r0, [fp, #-12]
   19e24:	ldr	r1, [fp, #-16]
   19e28:	mul	r0, r0, r1
   19e2c:	uxth	r0, r0
   19e30:	str	r0, [fp, #-20]	; 0xffffffec
   19e34:	b	1aa18 <__assert_fail@plt+0x9a0c>
   19e38:	b	19e3c <__assert_fail@plt+0x8e30>
   19e3c:	b	1a000 <__assert_fail@plt+0x8ff4>
   19e40:	ldr	r0, [fp, #-16]
   19e44:	cmp	r0, #0
   19e48:	bcs	19f48 <__assert_fail@plt+0x8f3c>
   19e4c:	ldr	r0, [fp, #-12]
   19e50:	cmp	r0, #0
   19e54:	bcs	19edc <__assert_fail@plt+0x8ed0>
   19e58:	b	19e78 <__assert_fail@plt+0x8e6c>
   19e5c:	ldr	r0, [pc, #3024]	; 1aa34 <__assert_fail@plt+0x9a28>
   19e60:	ldr	r1, [fp, #-12]
   19e64:	ldr	r2, [fp, #-16]
   19e68:	udiv	r0, r0, r2
   19e6c:	cmp	r1, r0
   19e70:	bcc	19fd8 <__assert_fail@plt+0x8fcc>
   19e74:	b	19fec <__assert_fail@plt+0x8fe0>
   19e78:	b	19e8c <__assert_fail@plt+0x8e80>
   19e7c:	ldr	r0, [fp, #-16]
   19e80:	cmp	r0, #1
   19e84:	bcc	19e9c <__assert_fail@plt+0x8e90>
   19e88:	b	19ea8 <__assert_fail@plt+0x8e9c>
   19e8c:	ldr	r0, [fp, #-16]
   19e90:	movw	r1, #0
   19e94:	cmp	r1, r0
   19e98:	bcs	19ea8 <__assert_fail@plt+0x8e9c>
   19e9c:	movw	r0, #0
   19ea0:	str	r0, [fp, #-40]	; 0xffffffd8
   19ea4:	b	19ec0 <__assert_fail@plt+0x8eb4>
   19ea8:	ldr	r0, [pc, #2948]	; 1aa34 <__assert_fail@plt+0x9a28>
   19eac:	ldr	r1, [fp, #-16]
   19eb0:	movw	r2, #0
   19eb4:	sub	r1, r2, r1
   19eb8:	udiv	r0, r0, r1
   19ebc:	str	r0, [fp, #-40]	; 0xffffffd8
   19ec0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ec4:	ldr	r1, [fp, #-12]
   19ec8:	mvn	r2, #0
   19ecc:	sub	r1, r2, r1
   19ed0:	cmp	r0, r1
   19ed4:	bls	19fd8 <__assert_fail@plt+0x8fcc>
   19ed8:	b	19fec <__assert_fail@plt+0x8fe0>
   19edc:	ldr	r0, [fp, #-16]
   19ee0:	cmn	r0, #1
   19ee4:	bne	19f2c <__assert_fail@plt+0x8f20>
   19ee8:	b	19f04 <__assert_fail@plt+0x8ef8>
   19eec:	ldr	r0, [fp, #-12]
   19ef0:	add	r0, r0, #-2147483648	; 0x80000000
   19ef4:	movw	r1, #0
   19ef8:	cmp	r1, r0
   19efc:	bcc	19fd8 <__assert_fail@plt+0x8fcc>
   19f00:	b	19fec <__assert_fail@plt+0x8fe0>
   19f04:	ldr	r0, [fp, #-12]
   19f08:	movw	r1, #0
   19f0c:	cmp	r1, r0
   19f10:	bcs	19fec <__assert_fail@plt+0x8fe0>
   19f14:	ldr	r0, [pc, #2840]	; 1aa34 <__assert_fail@plt+0x9a28>
   19f18:	ldr	r1, [fp, #-12]
   19f1c:	sub	r1, r1, #1
   19f20:	cmp	r0, r1
   19f24:	bcc	19fd8 <__assert_fail@plt+0x8fcc>
   19f28:	b	19fec <__assert_fail@plt+0x8fe0>
   19f2c:	ldr	r0, [pc, #2820]	; 1aa38 <__assert_fail@plt+0x9a2c>
   19f30:	ldr	r1, [fp, #-16]
   19f34:	udiv	r0, r0, r1
   19f38:	ldr	r1, [fp, #-12]
   19f3c:	cmp	r0, r1
   19f40:	bcc	19fd8 <__assert_fail@plt+0x8fcc>
   19f44:	b	19fec <__assert_fail@plt+0x8fe0>
   19f48:	ldr	r0, [fp, #-16]
   19f4c:	cmp	r0, #0
   19f50:	bne	19f58 <__assert_fail@plt+0x8f4c>
   19f54:	b	19fec <__assert_fail@plt+0x8fe0>
   19f58:	ldr	r0, [fp, #-12]
   19f5c:	cmp	r0, #0
   19f60:	bcs	19fc0 <__assert_fail@plt+0x8fb4>
   19f64:	ldr	r0, [fp, #-12]
   19f68:	cmn	r0, #1
   19f6c:	bne	19fa4 <__assert_fail@plt+0x8f98>
   19f70:	b	19f8c <__assert_fail@plt+0x8f80>
   19f74:	ldr	r0, [fp, #-16]
   19f78:	add	r0, r0, #-2147483648	; 0x80000000
   19f7c:	movw	r1, #0
   19f80:	cmp	r1, r0
   19f84:	bcc	19fd8 <__assert_fail@plt+0x8fcc>
   19f88:	b	19fec <__assert_fail@plt+0x8fe0>
   19f8c:	ldr	r0, [pc, #2720]	; 1aa34 <__assert_fail@plt+0x9a28>
   19f90:	ldr	r1, [fp, #-16]
   19f94:	sub	r1, r1, #1
   19f98:	cmp	r0, r1
   19f9c:	bcc	19fd8 <__assert_fail@plt+0x8fcc>
   19fa0:	b	19fec <__assert_fail@plt+0x8fe0>
   19fa4:	ldr	r0, [pc, #2700]	; 1aa38 <__assert_fail@plt+0x9a2c>
   19fa8:	ldr	r1, [fp, #-12]
   19fac:	udiv	r0, r0, r1
   19fb0:	ldr	r1, [fp, #-16]
   19fb4:	cmp	r0, r1
   19fb8:	bcc	19fd8 <__assert_fail@plt+0x8fcc>
   19fbc:	b	19fec <__assert_fail@plt+0x8fe0>
   19fc0:	ldr	r0, [pc, #2668]	; 1aa34 <__assert_fail@plt+0x9a28>
   19fc4:	ldr	r1, [fp, #-16]
   19fc8:	udiv	r0, r0, r1
   19fcc:	ldr	r1, [fp, #-12]
   19fd0:	cmp	r0, r1
   19fd4:	bcs	19fec <__assert_fail@plt+0x8fe0>
   19fd8:	ldr	r0, [fp, #-12]
   19fdc:	ldr	r1, [fp, #-16]
   19fe0:	mul	r0, r0, r1
   19fe4:	str	r0, [fp, #-20]	; 0xffffffec
   19fe8:	b	1aa00 <__assert_fail@plt+0x99f4>
   19fec:	ldr	r0, [fp, #-12]
   19ff0:	ldr	r1, [fp, #-16]
   19ff4:	mul	r0, r0, r1
   19ff8:	str	r0, [fp, #-20]	; 0xffffffec
   19ffc:	b	1aa18 <__assert_fail@plt+0x9a0c>
   1a000:	ldr	r0, [fp, #-16]
   1a004:	cmp	r0, #0
   1a008:	bcs	1a114 <__assert_fail@plt+0x9108>
   1a00c:	ldr	r0, [fp, #-12]
   1a010:	cmp	r0, #0
   1a014:	bcs	1a09c <__assert_fail@plt+0x9090>
   1a018:	b	1a038 <__assert_fail@plt+0x902c>
   1a01c:	ldr	r0, [fp, #-12]
   1a020:	ldr	r1, [fp, #-16]
   1a024:	mvn	r2, #0
   1a028:	udiv	r1, r2, r1
   1a02c:	cmp	r0, r1
   1a030:	bcc	1a1b0 <__assert_fail@plt+0x91a4>
   1a034:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a038:	b	1a04c <__assert_fail@plt+0x9040>
   1a03c:	ldr	r0, [fp, #-16]
   1a040:	cmp	r0, #1
   1a044:	bcc	1a05c <__assert_fail@plt+0x9050>
   1a048:	b	1a068 <__assert_fail@plt+0x905c>
   1a04c:	ldr	r0, [fp, #-16]
   1a050:	movw	r1, #0
   1a054:	cmp	r1, r0
   1a058:	bcs	1a068 <__assert_fail@plt+0x905c>
   1a05c:	movw	r0, #1
   1a060:	str	r0, [fp, #-44]	; 0xffffffd4
   1a064:	b	1a080 <__assert_fail@plt+0x9074>
   1a068:	ldr	r0, [fp, #-16]
   1a06c:	movw	r1, #0
   1a070:	sub	r0, r1, r0
   1a074:	mvn	r1, #0
   1a078:	udiv	r0, r1, r0
   1a07c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a084:	ldr	r1, [fp, #-12]
   1a088:	mvn	r2, #0
   1a08c:	sub	r1, r2, r1
   1a090:	cmp	r0, r1
   1a094:	bls	1a1b0 <__assert_fail@plt+0x91a4>
   1a098:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a09c:	b	1a0a4 <__assert_fail@plt+0x9098>
   1a0a0:	b	1a0a8 <__assert_fail@plt+0x909c>
   1a0a4:	b	1a0f8 <__assert_fail@plt+0x90ec>
   1a0a8:	ldr	r0, [fp, #-16]
   1a0ac:	cmn	r0, #1
   1a0b0:	bne	1a0f8 <__assert_fail@plt+0x90ec>
   1a0b4:	b	1a0d0 <__assert_fail@plt+0x90c4>
   1a0b8:	ldr	r0, [fp, #-12]
   1a0bc:	add	r0, r0, #0
   1a0c0:	movw	r1, #0
   1a0c4:	cmp	r1, r0
   1a0c8:	bcc	1a1b0 <__assert_fail@plt+0x91a4>
   1a0cc:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a0d0:	ldr	r0, [fp, #-12]
   1a0d4:	movw	r1, #0
   1a0d8:	cmp	r1, r0
   1a0dc:	bcs	1a1c4 <__assert_fail@plt+0x91b8>
   1a0e0:	ldr	r0, [fp, #-12]
   1a0e4:	sub	r0, r0, #1
   1a0e8:	mvn	r1, #0
   1a0ec:	cmp	r1, r0
   1a0f0:	bcc	1a1b0 <__assert_fail@plt+0x91a4>
   1a0f4:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a0f8:	ldr	r0, [fp, #-16]
   1a0fc:	movw	r1, #0
   1a100:	udiv	r0, r1, r0
   1a104:	ldr	r1, [fp, #-12]
   1a108:	cmp	r0, r1
   1a10c:	bcc	1a1b0 <__assert_fail@plt+0x91a4>
   1a110:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a114:	ldr	r0, [fp, #-16]
   1a118:	cmp	r0, #0
   1a11c:	bne	1a124 <__assert_fail@plt+0x9118>
   1a120:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a124:	ldr	r0, [fp, #-12]
   1a128:	cmp	r0, #0
   1a12c:	bcs	1a198 <__assert_fail@plt+0x918c>
   1a130:	b	1a138 <__assert_fail@plt+0x912c>
   1a134:	b	1a13c <__assert_fail@plt+0x9130>
   1a138:	b	1a17c <__assert_fail@plt+0x9170>
   1a13c:	ldr	r0, [fp, #-12]
   1a140:	cmn	r0, #1
   1a144:	bne	1a17c <__assert_fail@plt+0x9170>
   1a148:	b	1a164 <__assert_fail@plt+0x9158>
   1a14c:	ldr	r0, [fp, #-16]
   1a150:	add	r0, r0, #0
   1a154:	movw	r1, #0
   1a158:	cmp	r1, r0
   1a15c:	bcc	1a1b0 <__assert_fail@plt+0x91a4>
   1a160:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a164:	ldr	r0, [fp, #-16]
   1a168:	sub	r0, r0, #1
   1a16c:	mvn	r1, #0
   1a170:	cmp	r1, r0
   1a174:	bcc	1a1b0 <__assert_fail@plt+0x91a4>
   1a178:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a17c:	ldr	r0, [fp, #-12]
   1a180:	movw	r1, #0
   1a184:	udiv	r0, r1, r0
   1a188:	ldr	r1, [fp, #-16]
   1a18c:	cmp	r0, r1
   1a190:	bcc	1a1b0 <__assert_fail@plt+0x91a4>
   1a194:	b	1a1c4 <__assert_fail@plt+0x91b8>
   1a198:	ldr	r0, [fp, #-16]
   1a19c:	mvn	r1, #0
   1a1a0:	udiv	r0, r1, r0
   1a1a4:	ldr	r1, [fp, #-12]
   1a1a8:	cmp	r0, r1
   1a1ac:	bcs	1a1c4 <__assert_fail@plt+0x91b8>
   1a1b0:	ldr	r0, [fp, #-12]
   1a1b4:	ldr	r1, [fp, #-16]
   1a1b8:	mul	r0, r0, r1
   1a1bc:	str	r0, [fp, #-20]	; 0xffffffec
   1a1c0:	b	1aa00 <__assert_fail@plt+0x99f4>
   1a1c4:	ldr	r0, [fp, #-12]
   1a1c8:	ldr	r1, [fp, #-16]
   1a1cc:	mul	r0, r0, r1
   1a1d0:	str	r0, [fp, #-20]	; 0xffffffec
   1a1d4:	b	1aa18 <__assert_fail@plt+0x9a0c>
   1a1d8:	b	1a1dc <__assert_fail@plt+0x91d0>
   1a1dc:	b	1a3a0 <__assert_fail@plt+0x9394>
   1a1e0:	ldr	r0, [fp, #-16]
   1a1e4:	cmp	r0, #0
   1a1e8:	bcs	1a2e8 <__assert_fail@plt+0x92dc>
   1a1ec:	ldr	r0, [fp, #-12]
   1a1f0:	cmp	r0, #0
   1a1f4:	bcs	1a27c <__assert_fail@plt+0x9270>
   1a1f8:	b	1a218 <__assert_fail@plt+0x920c>
   1a1fc:	ldr	r0, [pc, #2096]	; 1aa34 <__assert_fail@plt+0x9a28>
   1a200:	ldr	r1, [fp, #-12]
   1a204:	ldr	r2, [fp, #-16]
   1a208:	udiv	r0, r0, r2
   1a20c:	cmp	r1, r0
   1a210:	bcc	1a378 <__assert_fail@plt+0x936c>
   1a214:	b	1a38c <__assert_fail@plt+0x9380>
   1a218:	b	1a22c <__assert_fail@plt+0x9220>
   1a21c:	ldr	r0, [fp, #-16]
   1a220:	cmp	r0, #1
   1a224:	bcc	1a23c <__assert_fail@plt+0x9230>
   1a228:	b	1a248 <__assert_fail@plt+0x923c>
   1a22c:	ldr	r0, [fp, #-16]
   1a230:	movw	r1, #0
   1a234:	cmp	r1, r0
   1a238:	bcs	1a248 <__assert_fail@plt+0x923c>
   1a23c:	movw	r0, #0
   1a240:	str	r0, [fp, #-48]	; 0xffffffd0
   1a244:	b	1a260 <__assert_fail@plt+0x9254>
   1a248:	ldr	r0, [pc, #2020]	; 1aa34 <__assert_fail@plt+0x9a28>
   1a24c:	ldr	r1, [fp, #-16]
   1a250:	movw	r2, #0
   1a254:	sub	r1, r2, r1
   1a258:	udiv	r0, r0, r1
   1a25c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a260:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a264:	ldr	r1, [fp, #-12]
   1a268:	mvn	r2, #0
   1a26c:	sub	r1, r2, r1
   1a270:	cmp	r0, r1
   1a274:	bls	1a378 <__assert_fail@plt+0x936c>
   1a278:	b	1a38c <__assert_fail@plt+0x9380>
   1a27c:	ldr	r0, [fp, #-16]
   1a280:	cmn	r0, #1
   1a284:	bne	1a2cc <__assert_fail@plt+0x92c0>
   1a288:	b	1a2a4 <__assert_fail@plt+0x9298>
   1a28c:	ldr	r0, [fp, #-12]
   1a290:	add	r0, r0, #-2147483648	; 0x80000000
   1a294:	movw	r1, #0
   1a298:	cmp	r1, r0
   1a29c:	bcc	1a378 <__assert_fail@plt+0x936c>
   1a2a0:	b	1a38c <__assert_fail@plt+0x9380>
   1a2a4:	ldr	r0, [fp, #-12]
   1a2a8:	movw	r1, #0
   1a2ac:	cmp	r1, r0
   1a2b0:	bcs	1a38c <__assert_fail@plt+0x9380>
   1a2b4:	ldr	r0, [pc, #1912]	; 1aa34 <__assert_fail@plt+0x9a28>
   1a2b8:	ldr	r1, [fp, #-12]
   1a2bc:	sub	r1, r1, #1
   1a2c0:	cmp	r0, r1
   1a2c4:	bcc	1a378 <__assert_fail@plt+0x936c>
   1a2c8:	b	1a38c <__assert_fail@plt+0x9380>
   1a2cc:	ldr	r0, [pc, #1892]	; 1aa38 <__assert_fail@plt+0x9a2c>
   1a2d0:	ldr	r1, [fp, #-16]
   1a2d4:	udiv	r0, r0, r1
   1a2d8:	ldr	r1, [fp, #-12]
   1a2dc:	cmp	r0, r1
   1a2e0:	bcc	1a378 <__assert_fail@plt+0x936c>
   1a2e4:	b	1a38c <__assert_fail@plt+0x9380>
   1a2e8:	ldr	r0, [fp, #-16]
   1a2ec:	cmp	r0, #0
   1a2f0:	bne	1a2f8 <__assert_fail@plt+0x92ec>
   1a2f4:	b	1a38c <__assert_fail@plt+0x9380>
   1a2f8:	ldr	r0, [fp, #-12]
   1a2fc:	cmp	r0, #0
   1a300:	bcs	1a360 <__assert_fail@plt+0x9354>
   1a304:	ldr	r0, [fp, #-12]
   1a308:	cmn	r0, #1
   1a30c:	bne	1a344 <__assert_fail@plt+0x9338>
   1a310:	b	1a32c <__assert_fail@plt+0x9320>
   1a314:	ldr	r0, [fp, #-16]
   1a318:	add	r0, r0, #-2147483648	; 0x80000000
   1a31c:	movw	r1, #0
   1a320:	cmp	r1, r0
   1a324:	bcc	1a378 <__assert_fail@plt+0x936c>
   1a328:	b	1a38c <__assert_fail@plt+0x9380>
   1a32c:	ldr	r0, [pc, #1792]	; 1aa34 <__assert_fail@plt+0x9a28>
   1a330:	ldr	r1, [fp, #-16]
   1a334:	sub	r1, r1, #1
   1a338:	cmp	r0, r1
   1a33c:	bcc	1a378 <__assert_fail@plt+0x936c>
   1a340:	b	1a38c <__assert_fail@plt+0x9380>
   1a344:	ldr	r0, [pc, #1772]	; 1aa38 <__assert_fail@plt+0x9a2c>
   1a348:	ldr	r1, [fp, #-12]
   1a34c:	udiv	r0, r0, r1
   1a350:	ldr	r1, [fp, #-16]
   1a354:	cmp	r0, r1
   1a358:	bcc	1a378 <__assert_fail@plt+0x936c>
   1a35c:	b	1a38c <__assert_fail@plt+0x9380>
   1a360:	ldr	r0, [pc, #1740]	; 1aa34 <__assert_fail@plt+0x9a28>
   1a364:	ldr	r1, [fp, #-16]
   1a368:	udiv	r0, r0, r1
   1a36c:	ldr	r1, [fp, #-12]
   1a370:	cmp	r0, r1
   1a374:	bcs	1a38c <__assert_fail@plt+0x9380>
   1a378:	ldr	r0, [fp, #-12]
   1a37c:	ldr	r1, [fp, #-16]
   1a380:	mul	r0, r0, r1
   1a384:	str	r0, [fp, #-20]	; 0xffffffec
   1a388:	b	1aa00 <__assert_fail@plt+0x99f4>
   1a38c:	ldr	r0, [fp, #-12]
   1a390:	ldr	r1, [fp, #-16]
   1a394:	mul	r0, r0, r1
   1a398:	str	r0, [fp, #-20]	; 0xffffffec
   1a39c:	b	1aa18 <__assert_fail@plt+0x9a0c>
   1a3a0:	ldr	r0, [fp, #-16]
   1a3a4:	cmp	r0, #0
   1a3a8:	bcs	1a4b4 <__assert_fail@plt+0x94a8>
   1a3ac:	ldr	r0, [fp, #-12]
   1a3b0:	cmp	r0, #0
   1a3b4:	bcs	1a43c <__assert_fail@plt+0x9430>
   1a3b8:	b	1a3d8 <__assert_fail@plt+0x93cc>
   1a3bc:	ldr	r0, [fp, #-12]
   1a3c0:	ldr	r1, [fp, #-16]
   1a3c4:	mvn	r2, #0
   1a3c8:	udiv	r1, r2, r1
   1a3cc:	cmp	r0, r1
   1a3d0:	bcc	1a550 <__assert_fail@plt+0x9544>
   1a3d4:	b	1a564 <__assert_fail@plt+0x9558>
   1a3d8:	b	1a3ec <__assert_fail@plt+0x93e0>
   1a3dc:	ldr	r0, [fp, #-16]
   1a3e0:	cmp	r0, #1
   1a3e4:	bcc	1a3fc <__assert_fail@plt+0x93f0>
   1a3e8:	b	1a408 <__assert_fail@plt+0x93fc>
   1a3ec:	ldr	r0, [fp, #-16]
   1a3f0:	movw	r1, #0
   1a3f4:	cmp	r1, r0
   1a3f8:	bcs	1a408 <__assert_fail@plt+0x93fc>
   1a3fc:	movw	r0, #1
   1a400:	str	r0, [fp, #-52]	; 0xffffffcc
   1a404:	b	1a420 <__assert_fail@plt+0x9414>
   1a408:	ldr	r0, [fp, #-16]
   1a40c:	movw	r1, #0
   1a410:	sub	r0, r1, r0
   1a414:	mvn	r1, #0
   1a418:	udiv	r0, r1, r0
   1a41c:	str	r0, [fp, #-52]	; 0xffffffcc
   1a420:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a424:	ldr	r1, [fp, #-12]
   1a428:	mvn	r2, #0
   1a42c:	sub	r1, r2, r1
   1a430:	cmp	r0, r1
   1a434:	bls	1a550 <__assert_fail@plt+0x9544>
   1a438:	b	1a564 <__assert_fail@plt+0x9558>
   1a43c:	b	1a444 <__assert_fail@plt+0x9438>
   1a440:	b	1a448 <__assert_fail@plt+0x943c>
   1a444:	b	1a498 <__assert_fail@plt+0x948c>
   1a448:	ldr	r0, [fp, #-16]
   1a44c:	cmn	r0, #1
   1a450:	bne	1a498 <__assert_fail@plt+0x948c>
   1a454:	b	1a470 <__assert_fail@plt+0x9464>
   1a458:	ldr	r0, [fp, #-12]
   1a45c:	add	r0, r0, #0
   1a460:	movw	r1, #0
   1a464:	cmp	r1, r0
   1a468:	bcc	1a550 <__assert_fail@plt+0x9544>
   1a46c:	b	1a564 <__assert_fail@plt+0x9558>
   1a470:	ldr	r0, [fp, #-12]
   1a474:	movw	r1, #0
   1a478:	cmp	r1, r0
   1a47c:	bcs	1a564 <__assert_fail@plt+0x9558>
   1a480:	ldr	r0, [fp, #-12]
   1a484:	sub	r0, r0, #1
   1a488:	mvn	r1, #0
   1a48c:	cmp	r1, r0
   1a490:	bcc	1a550 <__assert_fail@plt+0x9544>
   1a494:	b	1a564 <__assert_fail@plt+0x9558>
   1a498:	ldr	r0, [fp, #-16]
   1a49c:	movw	r1, #0
   1a4a0:	udiv	r0, r1, r0
   1a4a4:	ldr	r1, [fp, #-12]
   1a4a8:	cmp	r0, r1
   1a4ac:	bcc	1a550 <__assert_fail@plt+0x9544>
   1a4b0:	b	1a564 <__assert_fail@plt+0x9558>
   1a4b4:	ldr	r0, [fp, #-16]
   1a4b8:	cmp	r0, #0
   1a4bc:	bne	1a4c4 <__assert_fail@plt+0x94b8>
   1a4c0:	b	1a564 <__assert_fail@plt+0x9558>
   1a4c4:	ldr	r0, [fp, #-12]
   1a4c8:	cmp	r0, #0
   1a4cc:	bcs	1a538 <__assert_fail@plt+0x952c>
   1a4d0:	b	1a4d8 <__assert_fail@plt+0x94cc>
   1a4d4:	b	1a4dc <__assert_fail@plt+0x94d0>
   1a4d8:	b	1a51c <__assert_fail@plt+0x9510>
   1a4dc:	ldr	r0, [fp, #-12]
   1a4e0:	cmn	r0, #1
   1a4e4:	bne	1a51c <__assert_fail@plt+0x9510>
   1a4e8:	b	1a504 <__assert_fail@plt+0x94f8>
   1a4ec:	ldr	r0, [fp, #-16]
   1a4f0:	add	r0, r0, #0
   1a4f4:	movw	r1, #0
   1a4f8:	cmp	r1, r0
   1a4fc:	bcc	1a550 <__assert_fail@plt+0x9544>
   1a500:	b	1a564 <__assert_fail@plt+0x9558>
   1a504:	ldr	r0, [fp, #-16]
   1a508:	sub	r0, r0, #1
   1a50c:	mvn	r1, #0
   1a510:	cmp	r1, r0
   1a514:	bcc	1a550 <__assert_fail@plt+0x9544>
   1a518:	b	1a564 <__assert_fail@plt+0x9558>
   1a51c:	ldr	r0, [fp, #-12]
   1a520:	movw	r1, #0
   1a524:	udiv	r0, r1, r0
   1a528:	ldr	r1, [fp, #-16]
   1a52c:	cmp	r0, r1
   1a530:	bcc	1a550 <__assert_fail@plt+0x9544>
   1a534:	b	1a564 <__assert_fail@plt+0x9558>
   1a538:	ldr	r0, [fp, #-16]
   1a53c:	mvn	r1, #0
   1a540:	udiv	r0, r1, r0
   1a544:	ldr	r1, [fp, #-12]
   1a548:	cmp	r0, r1
   1a54c:	bcs	1a564 <__assert_fail@plt+0x9558>
   1a550:	ldr	r0, [fp, #-12]
   1a554:	ldr	r1, [fp, #-16]
   1a558:	mul	r0, r0, r1
   1a55c:	str	r0, [fp, #-20]	; 0xffffffec
   1a560:	b	1aa00 <__assert_fail@plt+0x99f4>
   1a564:	ldr	r0, [fp, #-12]
   1a568:	ldr	r1, [fp, #-16]
   1a56c:	mul	r0, r0, r1
   1a570:	str	r0, [fp, #-20]	; 0xffffffec
   1a574:	b	1aa18 <__assert_fail@plt+0x9a0c>
   1a578:	b	1a7cc <__assert_fail@plt+0x97c0>
   1a57c:	ldr	r0, [fp, #-16]
   1a580:	cmp	r0, #0
   1a584:	bcs	1a6e4 <__assert_fail@plt+0x96d8>
   1a588:	ldr	r0, [fp, #-12]
   1a58c:	cmp	r0, #0
   1a590:	bcs	1a660 <__assert_fail@plt+0x9654>
   1a594:	b	1a598 <__assert_fail@plt+0x958c>
   1a598:	ldr	r0, [fp, #-12]
   1a59c:	ldr	r2, [fp, #-16]
   1a5a0:	mvn	r1, #0
   1a5a4:	mvn	r3, #-2147483648	; 0x80000000
   1a5a8:	mov	ip, #0
   1a5ac:	str	r0, [fp, #-56]	; 0xffffffc8
   1a5b0:	mov	r0, r1
   1a5b4:	mov	r1, r3
   1a5b8:	mov	r3, ip
   1a5bc:	bl	1b34c <__assert_fail@plt+0xa340>
   1a5c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a5c4:	subs	r0, r2, r0
   1a5c8:	rscs	r1, r1, #0
   1a5cc:	str	r0, [fp, #-60]	; 0xffffffc4
   1a5d0:	str	r1, [fp, #-64]	; 0xffffffc0
   1a5d4:	blt	1a7a4 <__assert_fail@plt+0x9798>
   1a5d8:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a5dc:	b	1a5f0 <__assert_fail@plt+0x95e4>
   1a5e0:	ldr	r0, [fp, #-16]
   1a5e4:	cmp	r0, #1
   1a5e8:	bcc	1a600 <__assert_fail@plt+0x95f4>
   1a5ec:	b	1a614 <__assert_fail@plt+0x9608>
   1a5f0:	ldr	r0, [fp, #-16]
   1a5f4:	movw	r1, #0
   1a5f8:	cmp	r1, r0
   1a5fc:	bcs	1a614 <__assert_fail@plt+0x9608>
   1a600:	mov	r0, #0
   1a604:	mvn	r1, #0
   1a608:	str	r1, [fp, #-68]	; 0xffffffbc
   1a60c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a610:	b	1a638 <__assert_fail@plt+0x962c>
   1a614:	ldr	r0, [fp, #-16]
   1a618:	rsb	r2, r0, #0
   1a61c:	mvn	r0, #0
   1a620:	mvn	r1, #-2147483648	; 0x80000000
   1a624:	mov	r3, #0
   1a628:	bl	1b34c <__assert_fail@plt+0xa340>
   1a62c:	str	r0, [fp, #-68]	; 0xffffffbc
   1a630:	str	r1, [fp, #-72]	; 0xffffffb8
   1a634:	b	1a638 <__assert_fail@plt+0x962c>
   1a638:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a63c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a640:	ldr	r2, [fp, #-12]
   1a644:	mvn	r2, r2
   1a648:	subs	r1, r2, r1
   1a64c:	rscs	r0, r0, #0
   1a650:	str	r1, [fp, #-76]	; 0xffffffb4
   1a654:	str	r0, [fp, #-80]	; 0xffffffb0
   1a658:	bge	1a7a4 <__assert_fail@plt+0x9798>
   1a65c:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a660:	ldr	r0, [fp, #-16]
   1a664:	cmn	r0, #1
   1a668:	bne	1a6b0 <__assert_fail@plt+0x96a4>
   1a66c:	b	1a690 <__assert_fail@plt+0x9684>
   1a670:	ldr	r0, [fp, #-12]
   1a674:	rsbs	r0, r0, #0
   1a678:	mov	r1, #0
   1a67c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a680:	str	r0, [fp, #-84]	; 0xffffffac
   1a684:	str	r1, [sp, #88]	; 0x58
   1a688:	blt	1a7a4 <__assert_fail@plt+0x9798>
   1a68c:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a690:	ldr	r0, [fp, #-12]
   1a694:	movw	r1, #0
   1a698:	cmp	r1, r0
   1a69c:	bcs	1a7b8 <__assert_fail@plt+0x97ac>
   1a6a0:	mov	r0, #0
   1a6a4:	cmp	r0, #0
   1a6a8:	bne	1a7a4 <__assert_fail@plt+0x9798>
   1a6ac:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a6b0:	ldr	r2, [fp, #-16]
   1a6b4:	mov	r1, #-2147483648	; 0x80000000
   1a6b8:	mov	r0, #0
   1a6bc:	str	r0, [sp, #84]	; 0x54
   1a6c0:	ldr	r3, [sp, #84]	; 0x54
   1a6c4:	bl	1b278 <__assert_fail@plt+0xa26c>
   1a6c8:	ldr	r2, [fp, #-12]
   1a6cc:	subs	r0, r0, r2
   1a6d0:	sbcs	r1, r1, #0
   1a6d4:	str	r0, [sp, #80]	; 0x50
   1a6d8:	str	r1, [sp, #76]	; 0x4c
   1a6dc:	blt	1a7a4 <__assert_fail@plt+0x9798>
   1a6e0:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a6e4:	ldr	r0, [fp, #-16]
   1a6e8:	cmp	r0, #0
   1a6ec:	bne	1a6f4 <__assert_fail@plt+0x96e8>
   1a6f0:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a6f4:	ldr	r0, [fp, #-12]
   1a6f8:	cmp	r0, #0
   1a6fc:	bcs	1a774 <__assert_fail@plt+0x9768>
   1a700:	ldr	r0, [fp, #-12]
   1a704:	cmn	r0, #1
   1a708:	bne	1a740 <__assert_fail@plt+0x9734>
   1a70c:	b	1a730 <__assert_fail@plt+0x9724>
   1a710:	ldr	r0, [fp, #-16]
   1a714:	rsbs	r0, r0, #0
   1a718:	mov	r1, #0
   1a71c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a720:	str	r0, [sp, #72]	; 0x48
   1a724:	str	r1, [sp, #68]	; 0x44
   1a728:	blt	1a7a4 <__assert_fail@plt+0x9798>
   1a72c:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a730:	mov	r0, #0
   1a734:	cmp	r0, #0
   1a738:	bne	1a7a4 <__assert_fail@plt+0x9798>
   1a73c:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a740:	ldr	r2, [fp, #-12]
   1a744:	mov	r1, #-2147483648	; 0x80000000
   1a748:	mov	r0, #0
   1a74c:	str	r0, [sp, #64]	; 0x40
   1a750:	ldr	r3, [sp, #64]	; 0x40
   1a754:	bl	1b278 <__assert_fail@plt+0xa26c>
   1a758:	ldr	r2, [fp, #-16]
   1a75c:	subs	r0, r0, r2
   1a760:	sbcs	r1, r1, #0
   1a764:	str	r0, [sp, #60]	; 0x3c
   1a768:	str	r1, [sp, #56]	; 0x38
   1a76c:	blt	1a7a4 <__assert_fail@plt+0x9798>
   1a770:	b	1a7b8 <__assert_fail@plt+0x97ac>
   1a774:	ldr	r2, [fp, #-16]
   1a778:	mvn	r0, #0
   1a77c:	mvn	r1, #-2147483648	; 0x80000000
   1a780:	mov	r3, #0
   1a784:	bl	1b34c <__assert_fail@plt+0xa340>
   1a788:	ldr	r2, [fp, #-12]
   1a78c:	subs	r0, r0, r2
   1a790:	sbcs	r1, r1, #0
   1a794:	str	r0, [sp, #52]	; 0x34
   1a798:	str	r1, [sp, #48]	; 0x30
   1a79c:	bge	1a7b8 <__assert_fail@plt+0x97ac>
   1a7a0:	b	1a7a4 <__assert_fail@plt+0x9798>
   1a7a4:	ldr	r0, [fp, #-12]
   1a7a8:	ldr	r1, [fp, #-16]
   1a7ac:	mul	r0, r0, r1
   1a7b0:	str	r0, [fp, #-20]	; 0xffffffec
   1a7b4:	b	1aa00 <__assert_fail@plt+0x99f4>
   1a7b8:	ldr	r0, [fp, #-12]
   1a7bc:	ldr	r1, [fp, #-16]
   1a7c0:	mul	r0, r0, r1
   1a7c4:	str	r0, [fp, #-20]	; 0xffffffec
   1a7c8:	b	1aa18 <__assert_fail@plt+0x9a0c>
   1a7cc:	ldr	r0, [fp, #-16]
   1a7d0:	cmp	r0, #0
   1a7d4:	bcs	1a920 <__assert_fail@plt+0x9914>
   1a7d8:	ldr	r0, [fp, #-12]
   1a7dc:	cmp	r0, #0
   1a7e0:	bcs	1a8a8 <__assert_fail@plt+0x989c>
   1a7e4:	b	1a820 <__assert_fail@plt+0x9814>
   1a7e8:	ldr	r0, [fp, #-12]
   1a7ec:	ldr	r2, [fp, #-16]
   1a7f0:	mvn	r1, #0
   1a7f4:	mov	r3, #0
   1a7f8:	str	r0, [sp, #44]	; 0x2c
   1a7fc:	mov	r0, r1
   1a800:	bl	1b34c <__assert_fail@plt+0xa340>
   1a804:	ldr	r2, [sp, #44]	; 0x2c
   1a808:	subs	r0, r2, r0
   1a80c:	rscs	r1, r1, #0
   1a810:	str	r0, [sp, #40]	; 0x28
   1a814:	str	r1, [sp, #36]	; 0x24
   1a818:	bcc	1a9d8 <__assert_fail@plt+0x99cc>
   1a81c:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a820:	b	1a834 <__assert_fail@plt+0x9828>
   1a824:	ldr	r0, [fp, #-16]
   1a828:	cmp	r0, #1
   1a82c:	bcc	1a844 <__assert_fail@plt+0x9838>
   1a830:	b	1a858 <__assert_fail@plt+0x984c>
   1a834:	ldr	r0, [fp, #-16]
   1a838:	movw	r1, #0
   1a83c:	cmp	r1, r0
   1a840:	bcs	1a858 <__assert_fail@plt+0x984c>
   1a844:	mov	r0, #1
   1a848:	mvn	r1, #0
   1a84c:	str	r1, [sp, #32]
   1a850:	str	r0, [sp, #28]
   1a854:	b	1a880 <__assert_fail@plt+0x9874>
   1a858:	ldr	r0, [fp, #-16]
   1a85c:	rsb	r2, r0, #0
   1a860:	mvn	r0, #0
   1a864:	mov	r3, #0
   1a868:	str	r0, [sp, #24]
   1a86c:	ldr	r1, [sp, #24]
   1a870:	bl	1b34c <__assert_fail@plt+0xa340>
   1a874:	str	r0, [sp, #32]
   1a878:	str	r1, [sp, #28]
   1a87c:	b	1a880 <__assert_fail@plt+0x9874>
   1a880:	ldr	r0, [sp, #28]
   1a884:	ldr	r1, [sp, #32]
   1a888:	ldr	r2, [fp, #-12]
   1a88c:	mvn	r2, r2
   1a890:	subs	r1, r2, r1
   1a894:	rscs	r0, r0, #0
   1a898:	str	r1, [sp, #20]
   1a89c:	str	r0, [sp, #16]
   1a8a0:	bcs	1a9d8 <__assert_fail@plt+0x99cc>
   1a8a4:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a8a8:	b	1a8b0 <__assert_fail@plt+0x98a4>
   1a8ac:	b	1a8b4 <__assert_fail@plt+0x98a8>
   1a8b0:	b	1a904 <__assert_fail@plt+0x98f8>
   1a8b4:	ldr	r0, [fp, #-16]
   1a8b8:	cmn	r0, #1
   1a8bc:	bne	1a904 <__assert_fail@plt+0x98f8>
   1a8c0:	b	1a8dc <__assert_fail@plt+0x98d0>
   1a8c4:	ldr	r0, [fp, #-12]
   1a8c8:	add	r0, r0, #0
   1a8cc:	movw	r1, #0
   1a8d0:	cmp	r1, r0
   1a8d4:	bcc	1a9d8 <__assert_fail@plt+0x99cc>
   1a8d8:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a8dc:	ldr	r0, [fp, #-12]
   1a8e0:	movw	r1, #0
   1a8e4:	cmp	r1, r0
   1a8e8:	bcs	1a9ec <__assert_fail@plt+0x99e0>
   1a8ec:	ldr	r0, [fp, #-12]
   1a8f0:	sub	r0, r0, #1
   1a8f4:	mvn	r1, #0
   1a8f8:	cmp	r1, r0
   1a8fc:	bcc	1a9d8 <__assert_fail@plt+0x99cc>
   1a900:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a904:	ldr	r0, [fp, #-16]
   1a908:	movw	r1, #0
   1a90c:	udiv	r0, r1, r0
   1a910:	ldr	r1, [fp, #-12]
   1a914:	cmp	r0, r1
   1a918:	bcc	1a9d8 <__assert_fail@plt+0x99cc>
   1a91c:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a920:	ldr	r0, [fp, #-16]
   1a924:	cmp	r0, #0
   1a928:	bne	1a930 <__assert_fail@plt+0x9924>
   1a92c:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a930:	ldr	r0, [fp, #-12]
   1a934:	cmp	r0, #0
   1a938:	bcs	1a9a4 <__assert_fail@plt+0x9998>
   1a93c:	b	1a944 <__assert_fail@plt+0x9938>
   1a940:	b	1a948 <__assert_fail@plt+0x993c>
   1a944:	b	1a988 <__assert_fail@plt+0x997c>
   1a948:	ldr	r0, [fp, #-12]
   1a94c:	cmn	r0, #1
   1a950:	bne	1a988 <__assert_fail@plt+0x997c>
   1a954:	b	1a970 <__assert_fail@plt+0x9964>
   1a958:	ldr	r0, [fp, #-16]
   1a95c:	add	r0, r0, #0
   1a960:	movw	r1, #0
   1a964:	cmp	r1, r0
   1a968:	bcc	1a9d8 <__assert_fail@plt+0x99cc>
   1a96c:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a970:	ldr	r0, [fp, #-16]
   1a974:	sub	r0, r0, #1
   1a978:	mvn	r1, #0
   1a97c:	cmp	r1, r0
   1a980:	bcc	1a9d8 <__assert_fail@plt+0x99cc>
   1a984:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a988:	ldr	r0, [fp, #-12]
   1a98c:	movw	r1, #0
   1a990:	udiv	r0, r1, r0
   1a994:	ldr	r1, [fp, #-16]
   1a998:	cmp	r0, r1
   1a99c:	bcc	1a9d8 <__assert_fail@plt+0x99cc>
   1a9a0:	b	1a9ec <__assert_fail@plt+0x99e0>
   1a9a4:	ldr	r2, [fp, #-16]
   1a9a8:	mvn	r0, #0
   1a9ac:	mov	r3, #0
   1a9b0:	str	r0, [sp, #12]
   1a9b4:	ldr	r1, [sp, #12]
   1a9b8:	bl	1b34c <__assert_fail@plt+0xa340>
   1a9bc:	ldr	r2, [fp, #-12]
   1a9c0:	subs	r0, r0, r2
   1a9c4:	sbcs	r1, r1, #0
   1a9c8:	str	r0, [sp, #8]
   1a9cc:	str	r1, [sp, #4]
   1a9d0:	bcs	1a9ec <__assert_fail@plt+0x99e0>
   1a9d4:	b	1a9d8 <__assert_fail@plt+0x99cc>
   1a9d8:	ldr	r0, [fp, #-12]
   1a9dc:	ldr	r1, [fp, #-16]
   1a9e0:	mul	r0, r0, r1
   1a9e4:	str	r0, [fp, #-20]	; 0xffffffec
   1a9e8:	b	1aa00 <__assert_fail@plt+0x99f4>
   1a9ec:	ldr	r0, [fp, #-12]
   1a9f0:	ldr	r1, [fp, #-16]
   1a9f4:	mul	r0, r0, r1
   1a9f8:	str	r0, [fp, #-20]	; 0xffffffec
   1a9fc:	b	1aa18 <__assert_fail@plt+0x9a0c>
   1aa00:	bl	10f40 <__errno_location@plt>
   1aa04:	movw	lr, #12
   1aa08:	str	lr, [r0]
   1aa0c:	movw	r0, #0
   1aa10:	str	r0, [fp, #-4]
   1aa14:	b	1aa28 <__assert_fail@plt+0x9a1c>
   1aa18:	ldr	r0, [fp, #-8]
   1aa1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aa20:	bl	191a4 <__assert_fail@plt+0x8198>
   1aa24:	str	r0, [fp, #-4]
   1aa28:	ldr	r0, [fp, #-4]
   1aa2c:	mov	sp, fp
   1aa30:	pop	{fp, pc}
   1aa34:	svcvc	0x00ffffff
   1aa38:	andhi	r0, r0, r0
   1aa3c:			; <UNDEFINED> instruction: 0xffff8000
   1aa40:	sub	sp, sp, #12
   1aa44:	str	r0, [sp, #4]
   1aa48:	ldr	r0, [sp, #4]
   1aa4c:	sub	r1, r0, #48	; 0x30
   1aa50:	cmp	r1, #10
   1aa54:	str	r0, [sp]
   1aa58:	bcc	1aa88 <__assert_fail@plt+0x9a7c>
   1aa5c:	b	1aa60 <__assert_fail@plt+0x9a54>
   1aa60:	ldr	r0, [sp]
   1aa64:	sub	r1, r0, #65	; 0x41
   1aa68:	cmp	r1, #26
   1aa6c:	bcc	1aa88 <__assert_fail@plt+0x9a7c>
   1aa70:	b	1aa74 <__assert_fail@plt+0x9a68>
   1aa74:	ldr	r0, [sp]
   1aa78:	sub	r1, r0, #97	; 0x61
   1aa7c:	cmp	r1, #25
   1aa80:	bhi	1aa98 <__assert_fail@plt+0x9a8c>
   1aa84:	b	1aa88 <__assert_fail@plt+0x9a7c>
   1aa88:	movw	r0, #1
   1aa8c:	and	r0, r0, #1
   1aa90:	strb	r0, [sp, #11]
   1aa94:	b	1aaa4 <__assert_fail@plt+0x9a98>
   1aa98:	movw	r0, #0
   1aa9c:	and	r0, r0, #1
   1aaa0:	strb	r0, [sp, #11]
   1aaa4:	ldrb	r0, [sp, #11]
   1aaa8:	and	r0, r0, #1
   1aaac:	add	sp, sp, #12
   1aab0:	bx	lr
   1aab4:	sub	sp, sp, #12
   1aab8:	str	r0, [sp, #4]
   1aabc:	ldr	r0, [sp, #4]
   1aac0:	sub	r1, r0, #65	; 0x41
   1aac4:	cmp	r1, #26
   1aac8:	str	r0, [sp]
   1aacc:	bcc	1aae8 <__assert_fail@plt+0x9adc>
   1aad0:	b	1aad4 <__assert_fail@plt+0x9ac8>
   1aad4:	ldr	r0, [sp]
   1aad8:	sub	r1, r0, #97	; 0x61
   1aadc:	cmp	r1, #25
   1aae0:	bhi	1aaf8 <__assert_fail@plt+0x9aec>
   1aae4:	b	1aae8 <__assert_fail@plt+0x9adc>
   1aae8:	movw	r0, #1
   1aaec:	and	r0, r0, #1
   1aaf0:	strb	r0, [sp, #11]
   1aaf4:	b	1ab04 <__assert_fail@plt+0x9af8>
   1aaf8:	movw	r0, #0
   1aafc:	and	r0, r0, #1
   1ab00:	strb	r0, [sp, #11]
   1ab04:	ldrb	r0, [sp, #11]
   1ab08:	and	r0, r0, #1
   1ab0c:	add	sp, sp, #12
   1ab10:	bx	lr
   1ab14:	sub	sp, sp, #8
   1ab18:	str	r0, [sp]
   1ab1c:	ldr	r0, [sp]
   1ab20:	cmp	r0, #127	; 0x7f
   1ab24:	bhi	1ab3c <__assert_fail@plt+0x9b30>
   1ab28:	b	1ab2c <__assert_fail@plt+0x9b20>
   1ab2c:	movw	r0, #1
   1ab30:	and	r0, r0, #1
   1ab34:	strb	r0, [sp, #7]
   1ab38:	b	1ab48 <__assert_fail@plt+0x9b3c>
   1ab3c:	movw	r0, #0
   1ab40:	and	r0, r0, #1
   1ab44:	strb	r0, [sp, #7]
   1ab48:	ldrb	r0, [sp, #7]
   1ab4c:	and	r0, r0, #1
   1ab50:	add	sp, sp, #8
   1ab54:	bx	lr
   1ab58:	sub	sp, sp, #8
   1ab5c:	str	r0, [sp, #4]
   1ab60:	ldr	r0, [sp, #4]
   1ab64:	cmp	r0, #32
   1ab68:	movw	r0, #1
   1ab6c:	str	r0, [sp]
   1ab70:	beq	1ab88 <__assert_fail@plt+0x9b7c>
   1ab74:	ldr	r0, [sp, #4]
   1ab78:	cmp	r0, #9
   1ab7c:	movw	r0, #0
   1ab80:	moveq	r0, #1
   1ab84:	str	r0, [sp]
   1ab88:	ldr	r0, [sp]
   1ab8c:	and	r0, r0, #1
   1ab90:	add	sp, sp, #8
   1ab94:	bx	lr
   1ab98:	sub	sp, sp, #12
   1ab9c:	str	r0, [sp, #4]
   1aba0:	ldr	r0, [sp, #4]
   1aba4:	cmp	r0, #32
   1aba8:	str	r0, [sp]
   1abac:	bcc	1abc4 <__assert_fail@plt+0x9bb8>
   1abb0:	b	1abb4 <__assert_fail@plt+0x9ba8>
   1abb4:	ldr	r0, [sp]
   1abb8:	cmp	r0, #127	; 0x7f
   1abbc:	bne	1abd4 <__assert_fail@plt+0x9bc8>
   1abc0:	b	1abc4 <__assert_fail@plt+0x9bb8>
   1abc4:	movw	r0, #1
   1abc8:	and	r0, r0, #1
   1abcc:	strb	r0, [sp, #11]
   1abd0:	b	1abe0 <__assert_fail@plt+0x9bd4>
   1abd4:	movw	r0, #0
   1abd8:	and	r0, r0, #1
   1abdc:	strb	r0, [sp, #11]
   1abe0:	ldrb	r0, [sp, #11]
   1abe4:	and	r0, r0, #1
   1abe8:	add	sp, sp, #12
   1abec:	bx	lr
   1abf0:	sub	sp, sp, #8
   1abf4:	str	r0, [sp]
   1abf8:	ldr	r0, [sp]
   1abfc:	sub	r0, r0, #48	; 0x30
   1ac00:	cmp	r0, #9
   1ac04:	bhi	1ac1c <__assert_fail@plt+0x9c10>
   1ac08:	b	1ac0c <__assert_fail@plt+0x9c00>
   1ac0c:	movw	r0, #1
   1ac10:	and	r0, r0, #1
   1ac14:	strb	r0, [sp, #7]
   1ac18:	b	1ac28 <__assert_fail@plt+0x9c1c>
   1ac1c:	movw	r0, #0
   1ac20:	and	r0, r0, #1
   1ac24:	strb	r0, [sp, #7]
   1ac28:	ldrb	r0, [sp, #7]
   1ac2c:	and	r0, r0, #1
   1ac30:	add	sp, sp, #8
   1ac34:	bx	lr
   1ac38:	sub	sp, sp, #8
   1ac3c:	str	r0, [sp]
   1ac40:	ldr	r0, [sp]
   1ac44:	sub	r0, r0, #33	; 0x21
   1ac48:	cmp	r0, #93	; 0x5d
   1ac4c:	bhi	1ac64 <__assert_fail@plt+0x9c58>
   1ac50:	b	1ac54 <__assert_fail@plt+0x9c48>
   1ac54:	movw	r0, #1
   1ac58:	and	r0, r0, #1
   1ac5c:	strb	r0, [sp, #7]
   1ac60:	b	1ac70 <__assert_fail@plt+0x9c64>
   1ac64:	movw	r0, #0
   1ac68:	and	r0, r0, #1
   1ac6c:	strb	r0, [sp, #7]
   1ac70:	ldrb	r0, [sp, #7]
   1ac74:	and	r0, r0, #1
   1ac78:	add	sp, sp, #8
   1ac7c:	bx	lr
   1ac80:	sub	sp, sp, #8
   1ac84:	str	r0, [sp]
   1ac88:	ldr	r0, [sp]
   1ac8c:	sub	r0, r0, #97	; 0x61
   1ac90:	cmp	r0, #25
   1ac94:	bhi	1acac <__assert_fail@plt+0x9ca0>
   1ac98:	b	1ac9c <__assert_fail@plt+0x9c90>
   1ac9c:	movw	r0, #1
   1aca0:	and	r0, r0, #1
   1aca4:	strb	r0, [sp, #7]
   1aca8:	b	1acb8 <__assert_fail@plt+0x9cac>
   1acac:	movw	r0, #0
   1acb0:	and	r0, r0, #1
   1acb4:	strb	r0, [sp, #7]
   1acb8:	ldrb	r0, [sp, #7]
   1acbc:	and	r0, r0, #1
   1acc0:	add	sp, sp, #8
   1acc4:	bx	lr
   1acc8:	sub	sp, sp, #8
   1accc:	str	r0, [sp]
   1acd0:	ldr	r0, [sp]
   1acd4:	sub	r0, r0, #32
   1acd8:	cmp	r0, #94	; 0x5e
   1acdc:	bhi	1acf4 <__assert_fail@plt+0x9ce8>
   1ace0:	b	1ace4 <__assert_fail@plt+0x9cd8>
   1ace4:	movw	r0, #1
   1ace8:	and	r0, r0, #1
   1acec:	strb	r0, [sp, #7]
   1acf0:	b	1ad00 <__assert_fail@plt+0x9cf4>
   1acf4:	movw	r0, #0
   1acf8:	and	r0, r0, #1
   1acfc:	strb	r0, [sp, #7]
   1ad00:	ldrb	r0, [sp, #7]
   1ad04:	and	r0, r0, #1
   1ad08:	add	sp, sp, #8
   1ad0c:	bx	lr
   1ad10:	sub	sp, sp, #12
   1ad14:	str	r0, [sp, #4]
   1ad18:	ldr	r0, [sp, #4]
   1ad1c:	sub	r0, r0, #33	; 0x21
   1ad20:	cmp	r0, #93	; 0x5d
   1ad24:	str	r0, [sp]
   1ad28:	bhi	1aec4 <__assert_fail@plt+0x9eb8>
   1ad2c:	add	r0, pc, #8
   1ad30:	ldr	r1, [sp]
   1ad34:	ldr	r0, [r0, r1, lsl #2]
   1ad38:	mov	pc, r0
   1ad3c:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad40:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad44:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad48:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad4c:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad50:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad54:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad58:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad5c:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad60:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad64:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad68:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad6c:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad70:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad74:			; <UNDEFINED> instruction: 0x0001aeb4
   1ad78:	andeq	sl, r1, r4, asr #29
   1ad7c:	andeq	sl, r1, r4, asr #29
   1ad80:	andeq	sl, r1, r4, asr #29
   1ad84:	andeq	sl, r1, r4, asr #29
   1ad88:	andeq	sl, r1, r4, asr #29
   1ad8c:	andeq	sl, r1, r4, asr #29
   1ad90:	andeq	sl, r1, r4, asr #29
   1ad94:	andeq	sl, r1, r4, asr #29
   1ad98:	andeq	sl, r1, r4, asr #29
   1ad9c:	andeq	sl, r1, r4, asr #29
   1ada0:			; <UNDEFINED> instruction: 0x0001aeb4
   1ada4:			; <UNDEFINED> instruction: 0x0001aeb4
   1ada8:			; <UNDEFINED> instruction: 0x0001aeb4
   1adac:			; <UNDEFINED> instruction: 0x0001aeb4
   1adb0:			; <UNDEFINED> instruction: 0x0001aeb4
   1adb4:			; <UNDEFINED> instruction: 0x0001aeb4
   1adb8:			; <UNDEFINED> instruction: 0x0001aeb4
   1adbc:	andeq	sl, r1, r4, asr #29
   1adc0:	andeq	sl, r1, r4, asr #29
   1adc4:	andeq	sl, r1, r4, asr #29
   1adc8:	andeq	sl, r1, r4, asr #29
   1adcc:	andeq	sl, r1, r4, asr #29
   1add0:	andeq	sl, r1, r4, asr #29
   1add4:	andeq	sl, r1, r4, asr #29
   1add8:	andeq	sl, r1, r4, asr #29
   1addc:	andeq	sl, r1, r4, asr #29
   1ade0:	andeq	sl, r1, r4, asr #29
   1ade4:	andeq	sl, r1, r4, asr #29
   1ade8:	andeq	sl, r1, r4, asr #29
   1adec:	andeq	sl, r1, r4, asr #29
   1adf0:	andeq	sl, r1, r4, asr #29
   1adf4:	andeq	sl, r1, r4, asr #29
   1adf8:	andeq	sl, r1, r4, asr #29
   1adfc:	andeq	sl, r1, r4, asr #29
   1ae00:	andeq	sl, r1, r4, asr #29
   1ae04:	andeq	sl, r1, r4, asr #29
   1ae08:	andeq	sl, r1, r4, asr #29
   1ae0c:	andeq	sl, r1, r4, asr #29
   1ae10:	andeq	sl, r1, r4, asr #29
   1ae14:	andeq	sl, r1, r4, asr #29
   1ae18:	andeq	sl, r1, r4, asr #29
   1ae1c:	andeq	sl, r1, r4, asr #29
   1ae20:	andeq	sl, r1, r4, asr #29
   1ae24:			; <UNDEFINED> instruction: 0x0001aeb4
   1ae28:			; <UNDEFINED> instruction: 0x0001aeb4
   1ae2c:			; <UNDEFINED> instruction: 0x0001aeb4
   1ae30:			; <UNDEFINED> instruction: 0x0001aeb4
   1ae34:			; <UNDEFINED> instruction: 0x0001aeb4
   1ae38:			; <UNDEFINED> instruction: 0x0001aeb4
   1ae3c:	andeq	sl, r1, r4, asr #29
   1ae40:	andeq	sl, r1, r4, asr #29
   1ae44:	andeq	sl, r1, r4, asr #29
   1ae48:	andeq	sl, r1, r4, asr #29
   1ae4c:	andeq	sl, r1, r4, asr #29
   1ae50:	andeq	sl, r1, r4, asr #29
   1ae54:	andeq	sl, r1, r4, asr #29
   1ae58:	andeq	sl, r1, r4, asr #29
   1ae5c:	andeq	sl, r1, r4, asr #29
   1ae60:	andeq	sl, r1, r4, asr #29
   1ae64:	andeq	sl, r1, r4, asr #29
   1ae68:	andeq	sl, r1, r4, asr #29
   1ae6c:	andeq	sl, r1, r4, asr #29
   1ae70:	andeq	sl, r1, r4, asr #29
   1ae74:	andeq	sl, r1, r4, asr #29
   1ae78:	andeq	sl, r1, r4, asr #29
   1ae7c:	andeq	sl, r1, r4, asr #29
   1ae80:	andeq	sl, r1, r4, asr #29
   1ae84:	andeq	sl, r1, r4, asr #29
   1ae88:	andeq	sl, r1, r4, asr #29
   1ae8c:	andeq	sl, r1, r4, asr #29
   1ae90:	andeq	sl, r1, r4, asr #29
   1ae94:	andeq	sl, r1, r4, asr #29
   1ae98:	andeq	sl, r1, r4, asr #29
   1ae9c:	andeq	sl, r1, r4, asr #29
   1aea0:	andeq	sl, r1, r4, asr #29
   1aea4:			; <UNDEFINED> instruction: 0x0001aeb4
   1aea8:			; <UNDEFINED> instruction: 0x0001aeb4
   1aeac:			; <UNDEFINED> instruction: 0x0001aeb4
   1aeb0:			; <UNDEFINED> instruction: 0x0001aeb4
   1aeb4:	movw	r0, #1
   1aeb8:	and	r0, r0, #1
   1aebc:	strb	r0, [sp, #11]
   1aec0:	b	1aed0 <__assert_fail@plt+0x9ec4>
   1aec4:	movw	r0, #0
   1aec8:	and	r0, r0, #1
   1aecc:	strb	r0, [sp, #11]
   1aed0:	ldrb	r0, [sp, #11]
   1aed4:	and	r0, r0, #1
   1aed8:	add	sp, sp, #12
   1aedc:	bx	lr
   1aee0:	sub	sp, sp, #12
   1aee4:	str	r0, [sp, #4]
   1aee8:	ldr	r0, [sp, #4]
   1aeec:	sub	r1, r0, #9
   1aef0:	cmp	r1, #5
   1aef4:	str	r0, [sp]
   1aef8:	bcc	1af10 <__assert_fail@plt+0x9f04>
   1aefc:	b	1af00 <__assert_fail@plt+0x9ef4>
   1af00:	ldr	r0, [sp]
   1af04:	cmp	r0, #32
   1af08:	bne	1af20 <__assert_fail@plt+0x9f14>
   1af0c:	b	1af10 <__assert_fail@plt+0x9f04>
   1af10:	movw	r0, #1
   1af14:	and	r0, r0, #1
   1af18:	strb	r0, [sp, #11]
   1af1c:	b	1af2c <__assert_fail@plt+0x9f20>
   1af20:	movw	r0, #0
   1af24:	and	r0, r0, #1
   1af28:	strb	r0, [sp, #11]
   1af2c:	ldrb	r0, [sp, #11]
   1af30:	and	r0, r0, #1
   1af34:	add	sp, sp, #12
   1af38:	bx	lr
   1af3c:	sub	sp, sp, #8
   1af40:	str	r0, [sp]
   1af44:	ldr	r0, [sp]
   1af48:	sub	r0, r0, #65	; 0x41
   1af4c:	cmp	r0, #25
   1af50:	bhi	1af68 <__assert_fail@plt+0x9f5c>
   1af54:	b	1af58 <__assert_fail@plt+0x9f4c>
   1af58:	movw	r0, #1
   1af5c:	and	r0, r0, #1
   1af60:	strb	r0, [sp, #7]
   1af64:	b	1af74 <__assert_fail@plt+0x9f68>
   1af68:	movw	r0, #0
   1af6c:	and	r0, r0, #1
   1af70:	strb	r0, [sp, #7]
   1af74:	ldrb	r0, [sp, #7]
   1af78:	and	r0, r0, #1
   1af7c:	add	sp, sp, #8
   1af80:	bx	lr
   1af84:	sub	sp, sp, #12
   1af88:	str	r0, [sp, #4]
   1af8c:	ldr	r0, [sp, #4]
   1af90:	sub	r1, r0, #48	; 0x30
   1af94:	cmp	r1, #10
   1af98:	str	r0, [sp]
   1af9c:	bcc	1afcc <__assert_fail@plt+0x9fc0>
   1afa0:	b	1afa4 <__assert_fail@plt+0x9f98>
   1afa4:	ldr	r0, [sp]
   1afa8:	sub	r1, r0, #65	; 0x41
   1afac:	cmp	r1, #6
   1afb0:	bcc	1afcc <__assert_fail@plt+0x9fc0>
   1afb4:	b	1afb8 <__assert_fail@plt+0x9fac>
   1afb8:	ldr	r0, [sp]
   1afbc:	sub	r1, r0, #97	; 0x61
   1afc0:	cmp	r1, #5
   1afc4:	bhi	1afdc <__assert_fail@plt+0x9fd0>
   1afc8:	b	1afcc <__assert_fail@plt+0x9fc0>
   1afcc:	movw	r0, #1
   1afd0:	and	r0, r0, #1
   1afd4:	strb	r0, [sp, #11]
   1afd8:	b	1afe8 <__assert_fail@plt+0x9fdc>
   1afdc:	movw	r0, #0
   1afe0:	and	r0, r0, #1
   1afe4:	strb	r0, [sp, #11]
   1afe8:	ldrb	r0, [sp, #11]
   1afec:	and	r0, r0, #1
   1aff0:	add	sp, sp, #12
   1aff4:	bx	lr
   1aff8:	sub	sp, sp, #8
   1affc:	str	r0, [sp]
   1b000:	ldr	r0, [sp]
   1b004:	sub	r0, r0, #65	; 0x41
   1b008:	cmp	r0, #25
   1b00c:	bhi	1b028 <__assert_fail@plt+0xa01c>
   1b010:	b	1b014 <__assert_fail@plt+0xa008>
   1b014:	ldr	r0, [sp]
   1b018:	sub	r0, r0, #65	; 0x41
   1b01c:	add	r0, r0, #97	; 0x61
   1b020:	str	r0, [sp, #4]
   1b024:	b	1b030 <__assert_fail@plt+0xa024>
   1b028:	ldr	r0, [sp]
   1b02c:	str	r0, [sp, #4]
   1b030:	ldr	r0, [sp, #4]
   1b034:	add	sp, sp, #8
   1b038:	bx	lr
   1b03c:	sub	sp, sp, #8
   1b040:	str	r0, [sp]
   1b044:	ldr	r0, [sp]
   1b048:	sub	r0, r0, #97	; 0x61
   1b04c:	cmp	r0, #25
   1b050:	bhi	1b06c <__assert_fail@plt+0xa060>
   1b054:	b	1b058 <__assert_fail@plt+0xa04c>
   1b058:	ldr	r0, [sp]
   1b05c:	sub	r0, r0, #97	; 0x61
   1b060:	add	r0, r0, #65	; 0x41
   1b064:	str	r0, [sp, #4]
   1b068:	b	1b074 <__assert_fail@plt+0xa068>
   1b06c:	ldr	r0, [sp]
   1b070:	str	r0, [sp, #4]
   1b074:	ldr	r0, [sp, #4]
   1b078:	add	sp, sp, #8
   1b07c:	bx	lr
   1b080:	push	{r4, r5, fp, lr}
   1b084:	add	fp, sp, #8
   1b088:	sub	sp, sp, #272	; 0x110
   1b08c:	add	r1, sp, #7
   1b090:	str	r0, [fp, #-16]
   1b094:	ldr	r0, [fp, #-16]
   1b098:	movw	r2, #257	; 0x101
   1b09c:	bl	1b11c <__assert_fail@plt+0xa110>
   1b0a0:	cmp	r0, #0
   1b0a4:	beq	1b0b8 <__assert_fail@plt+0xa0ac>
   1b0a8:	movw	r0, #0
   1b0ac:	and	r0, r0, #1
   1b0b0:	strb	r0, [fp, #-9]
   1b0b4:	b	1b10c <__assert_fail@plt+0xa100>
   1b0b8:	add	r0, sp, #7
   1b0bc:	movw	r1, #49443	; 0xc123
   1b0c0:	movt	r1, #1
   1b0c4:	bl	10de4 <strcmp@plt>
   1b0c8:	cmp	r0, #0
   1b0cc:	movw	r0, #1
   1b0d0:	str	r0, [sp]
   1b0d4:	beq	1b0f8 <__assert_fail@plt+0xa0ec>
   1b0d8:	add	r0, sp, #7
   1b0dc:	movw	r1, #49445	; 0xc125
   1b0e0:	movt	r1, #1
   1b0e4:	bl	10de4 <strcmp@plt>
   1b0e8:	cmp	r0, #0
   1b0ec:	movw	r0, #0
   1b0f0:	moveq	r0, #1
   1b0f4:	str	r0, [sp]
   1b0f8:	ldr	r0, [sp]
   1b0fc:	mvn	r1, #0
   1b100:	eor	r0, r0, r1
   1b104:	and	r0, r0, #1
   1b108:	strb	r0, [fp, #-9]
   1b10c:	ldrb	r0, [fp, #-9]
   1b110:	and	r0, r0, #1
   1b114:	sub	sp, fp, #8
   1b118:	pop	{r4, r5, fp, pc}
   1b11c:	push	{fp, lr}
   1b120:	mov	fp, sp
   1b124:	sub	sp, sp, #16
   1b128:	str	r0, [fp, #-4]
   1b12c:	str	r1, [sp, #8]
   1b130:	str	r2, [sp, #4]
   1b134:	ldr	r0, [fp, #-4]
   1b138:	ldr	r1, [sp, #8]
   1b13c:	ldr	r2, [sp, #4]
   1b140:	bl	1b14c <__assert_fail@plt+0xa140>
   1b144:	mov	sp, fp
   1b148:	pop	{fp, pc}
   1b14c:	push	{fp, lr}
   1b150:	mov	fp, sp
   1b154:	sub	sp, sp, #24
   1b158:	str	r0, [fp, #-8]
   1b15c:	str	r1, [sp, #12]
   1b160:	str	r2, [sp, #8]
   1b164:	ldr	r0, [fp, #-8]
   1b168:	bl	1b24c <__assert_fail@plt+0xa240>
   1b16c:	str	r0, [sp, #4]
   1b170:	ldr	r0, [sp, #4]
   1b174:	movw	r1, #0
   1b178:	cmp	r0, r1
   1b17c:	bne	1b1a4 <__assert_fail@plt+0xa198>
   1b180:	ldr	r0, [sp, #8]
   1b184:	cmp	r0, #0
   1b188:	bls	1b198 <__assert_fail@plt+0xa18c>
   1b18c:	ldr	r0, [sp, #12]
   1b190:	movw	r1, #0
   1b194:	strb	r1, [r0]
   1b198:	movw	r0, #22
   1b19c:	str	r0, [fp, #-4]
   1b1a0:	b	1b220 <__assert_fail@plt+0xa214>
   1b1a4:	ldr	r0, [sp, #4]
   1b1a8:	bl	10f28 <strlen@plt>
   1b1ac:	str	r0, [sp]
   1b1b0:	ldr	r0, [sp]
   1b1b4:	ldr	lr, [sp, #8]
   1b1b8:	cmp	r0, lr
   1b1bc:	bcs	1b1e0 <__assert_fail@plt+0xa1d4>
   1b1c0:	ldr	r0, [sp, #12]
   1b1c4:	ldr	r1, [sp, #4]
   1b1c8:	ldr	r2, [sp]
   1b1cc:	add	r2, r2, #1
   1b1d0:	bl	10e2c <memcpy@plt>
   1b1d4:	movw	r0, #0
   1b1d8:	str	r0, [fp, #-4]
   1b1dc:	b	1b220 <__assert_fail@plt+0xa214>
   1b1e0:	ldr	r0, [sp, #8]
   1b1e4:	cmp	r0, #0
   1b1e8:	bls	1b218 <__assert_fail@plt+0xa20c>
   1b1ec:	ldr	r0, [sp, #12]
   1b1f0:	ldr	r1, [sp, #4]
   1b1f4:	ldr	r2, [sp, #8]
   1b1f8:	sub	r2, r2, #1
   1b1fc:	bl	10e2c <memcpy@plt>
   1b200:	ldr	r0, [sp, #12]
   1b204:	ldr	r1, [sp, #8]
   1b208:	sub	r1, r1, #1
   1b20c:	add	r0, r0, r1
   1b210:	movw	r1, #0
   1b214:	strb	r1, [r0]
   1b218:	movw	r0, #34	; 0x22
   1b21c:	str	r0, [fp, #-4]
   1b220:	ldr	r0, [fp, #-4]
   1b224:	mov	sp, fp
   1b228:	pop	{fp, pc}
   1b22c:	push	{fp, lr}
   1b230:	mov	fp, sp
   1b234:	sub	sp, sp, #8
   1b238:	str	r0, [sp, #4]
   1b23c:	ldr	r0, [sp, #4]
   1b240:	bl	1b24c <__assert_fail@plt+0xa240>
   1b244:	mov	sp, fp
   1b248:	pop	{fp, pc}
   1b24c:	push	{fp, lr}
   1b250:	mov	fp, sp
   1b254:	sub	sp, sp, #8
   1b258:	str	r0, [sp, #4]
   1b25c:	ldr	r0, [sp, #4]
   1b260:	movw	r1, #0
   1b264:	bl	10f88 <setlocale@plt>
   1b268:	str	r0, [sp]
   1b26c:	ldr	r0, [sp]
   1b270:	mov	sp, fp
   1b274:	pop	{fp, pc}
   1b278:	cmp	r3, #0
   1b27c:	cmpeq	r2, #0
   1b280:	bne	1b2a4 <__assert_fail@plt+0xa298>
   1b284:	cmp	r1, #0
   1b288:	movlt	r1, #-2147483648	; 0x80000000
   1b28c:	movlt	r0, #0
   1b290:	blt	1b2a0 <__assert_fail@plt+0xa294>
   1b294:	cmpeq	r0, #0
   1b298:	mvnne	r1, #-2147483648	; 0x80000000
   1b29c:	mvnne	r0, #0
   1b2a0:	b	1b388 <__assert_fail@plt+0xa37c>
   1b2a4:	sub	sp, sp, #8
   1b2a8:	push	{sp, lr}
   1b2ac:	cmp	r1, #0
   1b2b0:	blt	1b2d0 <__assert_fail@plt+0xa2c4>
   1b2b4:	cmp	r3, #0
   1b2b8:	blt	1b304 <__assert_fail@plt+0xa2f8>
   1b2bc:	bl	1b398 <__assert_fail@plt+0xa38c>
   1b2c0:	ldr	lr, [sp, #4]
   1b2c4:	add	sp, sp, #8
   1b2c8:	pop	{r2, r3}
   1b2cc:	bx	lr
   1b2d0:	rsbs	r0, r0, #0
   1b2d4:	sbc	r1, r1, r1, lsl #1
   1b2d8:	cmp	r3, #0
   1b2dc:	blt	1b328 <__assert_fail@plt+0xa31c>
   1b2e0:	bl	1b398 <__assert_fail@plt+0xa38c>
   1b2e4:	ldr	lr, [sp, #4]
   1b2e8:	add	sp, sp, #8
   1b2ec:	pop	{r2, r3}
   1b2f0:	rsbs	r0, r0, #0
   1b2f4:	sbc	r1, r1, r1, lsl #1
   1b2f8:	rsbs	r2, r2, #0
   1b2fc:	sbc	r3, r3, r3, lsl #1
   1b300:	bx	lr
   1b304:	rsbs	r2, r2, #0
   1b308:	sbc	r3, r3, r3, lsl #1
   1b30c:	bl	1b398 <__assert_fail@plt+0xa38c>
   1b310:	ldr	lr, [sp, #4]
   1b314:	add	sp, sp, #8
   1b318:	pop	{r2, r3}
   1b31c:	rsbs	r0, r0, #0
   1b320:	sbc	r1, r1, r1, lsl #1
   1b324:	bx	lr
   1b328:	rsbs	r2, r2, #0
   1b32c:	sbc	r3, r3, r3, lsl #1
   1b330:	bl	1b398 <__assert_fail@plt+0xa38c>
   1b334:	ldr	lr, [sp, #4]
   1b338:	add	sp, sp, #8
   1b33c:	pop	{r2, r3}
   1b340:	rsbs	r2, r2, #0
   1b344:	sbc	r3, r3, r3, lsl #1
   1b348:	bx	lr
   1b34c:	cmp	r3, #0
   1b350:	cmpeq	r2, #0
   1b354:	bne	1b36c <__assert_fail@plt+0xa360>
   1b358:	cmp	r1, #0
   1b35c:	cmpeq	r0, #0
   1b360:	mvnne	r1, #0
   1b364:	mvnne	r0, #0
   1b368:	b	1b388 <__assert_fail@plt+0xa37c>
   1b36c:	sub	sp, sp, #8
   1b370:	push	{sp, lr}
   1b374:	bl	1b398 <__assert_fail@plt+0xa38c>
   1b378:	ldr	lr, [sp, #4]
   1b37c:	add	sp, sp, #8
   1b380:	pop	{r2, r3}
   1b384:	bx	lr
   1b388:	push	{r1, lr}
   1b38c:	mov	r0, #8
   1b390:	bl	10dd8 <raise@plt>
   1b394:	pop	{r1, pc}
   1b398:	cmp	r1, r3
   1b39c:	cmpeq	r0, r2
   1b3a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b3a4:	mov	r4, r0
   1b3a8:	movcc	r0, #0
   1b3ac:	mov	r5, r1
   1b3b0:	ldr	lr, [sp, #36]	; 0x24
   1b3b4:	movcc	r1, r0
   1b3b8:	bcc	1b4b4 <__assert_fail@plt+0xa4a8>
   1b3bc:	cmp	r3, #0
   1b3c0:	clzeq	ip, r2
   1b3c4:	clzne	ip, r3
   1b3c8:	addeq	ip, ip, #32
   1b3cc:	cmp	r5, #0
   1b3d0:	clzeq	r1, r4
   1b3d4:	addeq	r1, r1, #32
   1b3d8:	clzne	r1, r5
   1b3dc:	sub	ip, ip, r1
   1b3e0:	sub	sl, ip, #32
   1b3e4:	lsl	r9, r3, ip
   1b3e8:	rsb	fp, ip, #32
   1b3ec:	orr	r9, r9, r2, lsl sl
   1b3f0:	orr	r9, r9, r2, lsr fp
   1b3f4:	lsl	r8, r2, ip
   1b3f8:	cmp	r5, r9
   1b3fc:	cmpeq	r4, r8
   1b400:	movcc	r0, #0
   1b404:	movcc	r1, r0
   1b408:	bcc	1b424 <__assert_fail@plt+0xa418>
   1b40c:	mov	r0, #1
   1b410:	subs	r4, r4, r8
   1b414:	lsl	r1, r0, sl
   1b418:	orr	r1, r1, r0, lsr fp
   1b41c:	lsl	r0, r0, ip
   1b420:	sbc	r5, r5, r9
   1b424:	cmp	ip, #0
   1b428:	beq	1b4b4 <__assert_fail@plt+0xa4a8>
   1b42c:	lsr	r6, r8, #1
   1b430:	orr	r6, r6, r9, lsl #31
   1b434:	lsr	r7, r9, #1
   1b438:	mov	r2, ip
   1b43c:	b	1b460 <__assert_fail@plt+0xa454>
   1b440:	subs	r3, r4, r6
   1b444:	sbc	r8, r5, r7
   1b448:	adds	r3, r3, r3
   1b44c:	adc	r8, r8, r8
   1b450:	adds	r4, r3, #1
   1b454:	adc	r5, r8, #0
   1b458:	subs	r2, r2, #1
   1b45c:	beq	1b47c <__assert_fail@plt+0xa470>
   1b460:	cmp	r5, r7
   1b464:	cmpeq	r4, r6
   1b468:	bcs	1b440 <__assert_fail@plt+0xa434>
   1b46c:	adds	r4, r4, r4
   1b470:	adc	r5, r5, r5
   1b474:	subs	r2, r2, #1
   1b478:	bne	1b460 <__assert_fail@plt+0xa454>
   1b47c:	lsr	r3, r4, ip
   1b480:	orr	r3, r3, r5, lsl fp
   1b484:	lsr	r2, r5, ip
   1b488:	orr	r3, r3, r5, lsr sl
   1b48c:	adds	r0, r0, r4
   1b490:	mov	r4, r3
   1b494:	lsl	r3, r2, ip
   1b498:	orr	r3, r3, r4, lsl sl
   1b49c:	lsl	ip, r4, ip
   1b4a0:	orr	r3, r3, r4, lsr fp
   1b4a4:	adc	r1, r1, r5
   1b4a8:	subs	r0, r0, ip
   1b4ac:	mov	r5, r2
   1b4b0:	sbc	r1, r1, r3
   1b4b4:	cmp	lr, #0
   1b4b8:	strdne	r4, [lr]
   1b4bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b4c4:	mov	r7, r0
   1b4c8:	ldr	r6, [pc, #72]	; 1b518 <__assert_fail@plt+0xa50c>
   1b4cc:	ldr	r5, [pc, #72]	; 1b51c <__assert_fail@plt+0xa510>
   1b4d0:	add	r6, pc, r6
   1b4d4:	add	r5, pc, r5
   1b4d8:	sub	r6, r6, r5
   1b4dc:	mov	r8, r1
   1b4e0:	mov	r9, r2
   1b4e4:	bl	10da0 <calloc@plt-0x20>
   1b4e8:	asrs	r6, r6, #2
   1b4ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b4f0:	mov	r4, #0
   1b4f4:	add	r4, r4, #1
   1b4f8:	ldr	r3, [r5], #4
   1b4fc:	mov	r2, r9
   1b500:	mov	r1, r8
   1b504:	mov	r0, r7
   1b508:	blx	r3
   1b50c:	cmp	r6, r4
   1b510:	bne	1b4f4 <__assert_fail@plt+0xa4e8>
   1b514:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b518:	andeq	r1, r1, r4, lsr sl
   1b51c:	andeq	r1, r1, ip, lsr #20
   1b520:	bx	lr
   1b524:	ldr	r3, [pc, #12]	; 1b538 <__assert_fail@plt+0xa52c>
   1b528:	mov	r1, #0
   1b52c:	add	r3, pc, r3
   1b530:	ldr	r2, [r3]
   1b534:	b	10f4c <__cxa_atexit@plt>
   1b538:	andeq	r1, r1, r8, lsr #23

Disassembly of section .fini:

0001b53c <.fini>:
   1b53c:	push	{r3, lr}
   1b540:	pop	{r3, pc}
