
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

000107a8 <.init>:
   107a8:	push	{r3, lr}
   107ac:	bl	1091c <abort@plt+0x4c>
   107b0:	pop	{r3, pc}

Disassembly of section .plt:

000107b4 <calloc@plt-0x14>:
   107b4:	push	{lr}		; (str lr, [sp, #-4]!)
   107b8:	ldr	lr, [pc, #4]	; 107c4 <calloc@plt-0x4>
   107bc:	add	lr, pc, lr
   107c0:	ldr	pc, [lr, #8]!
   107c4:	andeq	r2, r1, ip, lsr r8

000107c8 <calloc@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2108]!	; 0x83c

000107d4 <strcmp@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2100]!	; 0x834

000107e0 <strtol@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2092]!	; 0x82c

000107ec <fopen@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2084]!	; 0x824

000107f8 <free@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2076]!	; 0x81c

00010804 <fgets@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2068]!	; 0x814

00010810 <strdup@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2060]!	; 0x80c

0001081c <unlink@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2052]!	; 0x804

00010828 <__xstat@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2044]!	; 0x7fc

00010834 <fwrite@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2036]!	; 0x7f4

00010840 <__libc_start_main@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2028]!	; 0x7ec

0001084c <__sysv_signal@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2020]!	; 0x7e4

00010858 <__gmon_start__@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2012]!	; 0x7dc

00010864 <getpid@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2004]!	; 0x7d4

00010870 <exit@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1996]!	; 0x7cc

0001087c <strlen@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1988]!	; 0x7c4

00010888 <fprintf@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1980]!	; 0x7bc

00010894 <__isoc99_sscanf@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1972]!	; 0x7b4

000108a0 <fclose@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1964]!	; 0x7ac

000108ac <fputc@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1956]!	; 0x7a4

000108b8 <sprintf@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1948]!	; 0x79c

000108c4 <strncmp@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1940]!	; 0x794

000108d0 <abort@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1932]!	; 0x78c

Disassembly of section .text:

000108e0 <error@@Base-0x7d0>:
   108e0:	mov	fp, #0
   108e4:	mov	lr, #0
   108e8:	pop	{r1}		; (ldr r1, [sp], #4)
   108ec:	mov	r2, sp
   108f0:	push	{r2}		; (str r2, [sp, #-4]!)
   108f4:	push	{r0}		; (str r0, [sp, #-4]!)
   108f8:	ldr	ip, [pc, #16]	; 10910 <abort@plt+0x40>
   108fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10900:	ldr	r0, [pc, #12]	; 10914 <abort@plt+0x44>
   10904:	ldr	r3, [pc, #12]	; 10918 <abort@plt+0x48>
   10908:	bl	10840 <__libc_start_main@plt>
   1090c:	bl	108d0 <abort@plt>
   10910:	andeq	r2, r1, r8, asr #13
   10914:	andeq	r0, r1, r4, lsl sl
   10918:	andeq	r2, r1, r8, ror #12
   1091c:	ldr	r3, [pc, #20]	; 10938 <abort@plt+0x68>
   10920:	ldr	r2, [pc, #20]	; 1093c <abort@plt+0x6c>
   10924:	add	r3, pc, r3
   10928:	ldr	r2, [r3, r2]
   1092c:	cmp	r2, #0
   10930:	bxeq	lr
   10934:	b	10858 <__gmon_start__@plt>
   10938:	ldrdeq	r2, [r1], -r4
   1093c:	andeq	r0, r0, r4, ror r0
   10940:	ldr	r0, [pc, #24]	; 10960 <abort@plt+0x90>
   10944:	ldr	r3, [pc, #24]	; 10964 <abort@plt+0x94>
   10948:	cmp	r3, r0
   1094c:	bxeq	lr
   10950:	ldr	r3, [pc, #16]	; 10968 <abort@plt+0x98>
   10954:	cmp	r3, #0
   10958:	bxeq	lr
   1095c:	bx	r3
   10960:	andeq	r3, r2, r4, lsr #1
   10964:	andeq	r3, r2, r4, lsr #1
   10968:	andeq	r0, r0, r0
   1096c:	ldr	r0, [pc, #36]	; 10998 <abort@plt+0xc8>
   10970:	ldr	r1, [pc, #36]	; 1099c <abort@plt+0xcc>
   10974:	sub	r1, r1, r0
   10978:	asr	r1, r1, #2
   1097c:	add	r1, r1, r1, lsr #31
   10980:	asrs	r1, r1, #1
   10984:	bxeq	lr
   10988:	ldr	r3, [pc, #16]	; 109a0 <abort@plt+0xd0>
   1098c:	cmp	r3, #0
   10990:	bxeq	lr
   10994:	bx	r3
   10998:	andeq	r3, r2, r4, lsr #1
   1099c:	andeq	r3, r2, r4, lsr #1
   109a0:	andeq	r0, r0, r0
   109a4:	push	{r4, lr}
   109a8:	ldr	r4, [pc, #24]	; 109c8 <abort@plt+0xf8>
   109ac:	ldrb	r3, [r4]
   109b0:	cmp	r3, #0
   109b4:	popne	{r4, pc}
   109b8:	bl	10940 <abort@plt+0x70>
   109bc:	mov	r3, #1
   109c0:	strb	r3, [r4]
   109c4:	pop	{r4, pc}
   109c8:	andeq	r3, r2, r4, lsr #1
   109cc:	b	1096c <abort@plt+0x9c>
   109d0:	push	{r4, r5, r6, sl, fp, lr}
   109d4:	add	fp, sp, #16
   109d8:	ldr	r4, [pc, #44]	; 10a0c <abort@plt+0x13c>
   109dc:	mov	r1, r0
   109e0:	ldr	r4, [pc, r4]
   109e4:	ldm	r4, {r5, r6}
   109e8:	mov	r0, r4
   109ec:	bl	11358 <error@@Base+0x2a8>
   109f0:	ldm	r4, {r0, r2}
   109f4:	sub	r1, r0, r5
   109f8:	ldr	r0, [pc, #16]	; 10a10 <abort@plt+0x140>
   109fc:	sub	r2, r2, r6
   10a00:	ldr	r0, [pc, r0]
   10a04:	pop	{r4, r5, r6, sl, fp, lr}
   10a08:	b	10ab8 <abort@plt+0x1e8>
   10a0c:	muleq	r1, r4, r6
   10a10:	andeq	r2, r1, r0, lsl #13
   10a14:	push	{fp, lr}
   10a18:	mov	fp, sp
   10a1c:	sub	sp, sp, #8
   10a20:	str	r0, [sp, #4]
   10a24:	add	r0, sp, #4
   10a28:	mov	r3, #0
   10a2c:	mov	r9, r1
   10a30:	mov	r7, #0
   10a34:	ldr	r2, [pc, #108]	; 10aa8 <abort@plt+0x1d8>
   10a38:	add	r2, pc, r2
   10a3c:	bl	10e28 <abort@plt+0x558>
   10a40:	ldr	r0, [sp, #4]
   10a44:	cmp	r0, #1
   10a48:	blt	10a94 <abort@plt+0x1c4>
   10a4c:	ldr	r5, [pc, #88]	; 10aac <abort@plt+0x1dc>
   10a50:	ldr	r5, [pc, r5]
   10a54:	ldr	r8, [pc, #84]	; 10ab0 <abort@plt+0x1e0>
   10a58:	ldr	r8, [pc, r8]
   10a5c:	ldr	r1, [r9, r7, lsl #2]
   10a60:	ldr	r6, [r5]
   10a64:	ldr	r4, [r5, #4]
   10a68:	mov	r0, r5
   10a6c:	bl	11358 <error@@Base+0x2a8>
   10a70:	ldm	r5, {r0, r2}
   10a74:	sub	r1, r0, r6
   10a78:	sub	r2, r2, r4
   10a7c:	mov	r0, r8
   10a80:	bl	10ab8 <abort@plt+0x1e8>
   10a84:	ldr	r0, [sp, #4]
   10a88:	add	r7, r7, #1
   10a8c:	cmp	r7, r0
   10a90:	blt	10a5c <abort@plt+0x18c>
   10a94:	ldr	r0, [pc, #24]	; 10ab4 <abort@plt+0x1e4>
   10a98:	mov	r1, #0
   10a9c:	ldr	r0, [pc, r0]
   10aa0:	bl	10b40 <abort@plt+0x270>
   10aa4:	bl	1106c <abort@plt+0x79c>
   10aa8:	muleq	r0, r8, ip
   10aac:	andeq	r2, r1, r4, lsr #12
   10ab0:	andeq	r2, r1, r8, lsr #12
   10ab4:	andeq	r2, r1, r4, ror #11
   10ab8:	cmp	r1, #0
   10abc:	bxeq	lr
   10ac0:	push	{fp, lr}
   10ac4:	mov	fp, sp
   10ac8:	vldr	d16, [pc, #104]	; 10b38 <abort@plt+0x268>
   10acc:	sub	r2, r1, r2
   10ad0:	vmov	s2, r1
   10ad4:	vmov	s0, r2
   10ad8:	vcvt.f64.s32	d17, s0
   10adc:	vcvt.f64.s32	d18, s2
   10ae0:	vmul.f64	d16, d17, d16
   10ae4:	vdiv.f64	d16, d16, d18
   10ae8:	vcmpe.f64	d16, #0.0
   10aec:	vmrs	APSR_nzcv, fpscr
   10af0:	blt	10b24 <abort@plt+0x254>
   10af4:	mov	r2, #0
   10af8:	sxth	ip, r2
   10afc:	add	r2, r2, #1
   10b00:	ldr	r3, [r0, ip, lsl #2]
   10b04:	add	lr, r3, r1
   10b08:	sxth	r3, r2
   10b0c:	vmov	s0, r3
   10b10:	str	lr, [r0, ip, lsl #2]
   10b14:	vcvt.f64.s32	d17, s0
   10b18:	vcmpe.f64	d16, d17
   10b1c:	vmrs	APSR_nzcv, fpscr
   10b20:	bge	10af8 <abort@plt+0x228>
   10b24:	ldr	r2, [r0, #404]	; 0x194
   10b28:	add	r1, r2, r1
   10b2c:	str	r1, [r0, #404]	; 0x194
   10b30:	pop	{fp, lr}
   10b34:	bx	lr
   10b38:	andeq	r0, r0, r0
   10b3c:	subsmi	r0, r9, r0
   10b40:	push	{r4, r5, r6, r7, fp, lr}
   10b44:	add	fp, sp, #16
   10b48:	vpush	{d8}
   10b4c:	sub	sp, sp, #8
   10b50:	mov	r4, r0
   10b54:	ldr	r0, [r0, #404]	; 0x194
   10b58:	cmp	r0, #0
   10b5c:	subeq	sp, fp, #24
   10b60:	vpopeq	{d8}
   10b64:	popeq	{r4, r5, r6, r7, fp, pc}
   10b68:	ldr	r2, [pc, #120]	; 10be8 <abort@plt+0x318>
   10b6c:	mov	r0, r1
   10b70:	add	r2, pc, r2
   10b74:	mov	r1, r2
   10b78:	bl	10c90 <abort@plt+0x3c0>
   10b7c:	ldr	r7, [pc, #104]	; 10bec <abort@plt+0x31c>
   10b80:	vldr	d8, [pc, #88]	; 10be0 <abort@plt+0x310>
   10b84:	mov	r5, r0
   10b88:	mov	r6, #0
   10b8c:	add	r7, pc, r7
   10b90:	add	r0, r4, r6, lsl #2
   10b94:	vldr	s2, [r4, #404]	; 0x194
   10b98:	mov	r1, r7
   10b9c:	mov	r2, r6
   10ba0:	vldr	s0, [r0]
   10ba4:	mov	r0, r5
   10ba8:	vcvt.f64.s32	d16, s0
   10bac:	vcvt.f64.s32	d17, s2
   10bb0:	vmul.f64	d16, d16, d8
   10bb4:	vdiv.f64	d16, d16, d17
   10bb8:	vstr	d16, [sp]
   10bbc:	bl	10888 <fprintf@plt>
   10bc0:	add	r6, r6, #1
   10bc4:	cmp	r6, #101	; 0x65
   10bc8:	bne	10b90 <abort@plt+0x2c0>
   10bcc:	mov	r0, r5
   10bd0:	sub	sp, fp, #24
   10bd4:	vpop	{d8}
   10bd8:	pop	{r4, r5, r6, r7, fp, lr}
   10bdc:	b	10d18 <abort@plt+0x448>
   10be0:	andeq	r0, r0, r0
   10be4:	subsmi	r0, r9, r0
   10be8:	andeq	r1, r0, ip, lsl #23
   10bec:	andeq	r1, r0, r2, ror fp
   10bf0:	push	{fp, lr}
   10bf4:	mov	fp, sp
   10bf8:	bl	107c8 <calloc@plt>
   10bfc:	cmp	r0, #0
   10c00:	popne	{fp, pc}
   10c04:	ldr	r0, [pc, #4]	; 10c10 <abort@plt+0x340>
   10c08:	add	r0, pc, r0
   10c0c:	bl	110b0 <error@@Base>
   10c10:	andeq	r1, r0, r1, lsl #22
   10c14:	push	{r4, r5, r6, sl, fp, lr}
   10c18:	add	fp, sp, #16
   10c1c:	ldrb	r3, [r0]
   10c20:	ldrb	ip, [r1]
   10c24:	mov	r2, r0
   10c28:	mov	r0, #0
   10c2c:	cmp	r3, #0
   10c30:	beq	10c68 <abort@plt+0x398>
   10c34:	add	r6, r2, #1
   10c38:	add	lr, r1, #1
   10c3c:	mov	r2, #0
   10c40:	uxtb	r4, ip
   10c44:	uxtb	r5, r3
   10c48:	cmp	r5, r4
   10c4c:	bne	10c78 <abort@plt+0x3a8>
   10c50:	ldrb	r3, [r6, r2]
   10c54:	ldrb	ip, [lr, r2]
   10c58:	add	r2, r2, #1
   10c5c:	cmp	r3, #0
   10c60:	bne	10c40 <abort@plt+0x370>
   10c64:	b	10c6c <abort@plt+0x39c>
   10c68:	mov	r2, #0
   10c6c:	cmp	ip, #0
   10c70:	popeq	{r4, r5, r6, sl, fp, pc}
   10c74:	mov	r3, #0
   10c78:	ldrb	r1, [r1, r2]
   10c7c:	uxtb	r2, r3
   10c80:	mov	r0, #1
   10c84:	cmp	r2, r1
   10c88:	mvncc	r0, #0
   10c8c:	pop	{r4, r5, r6, sl, fp, pc}
   10c90:	push	{r4, r5, fp, lr}
   10c94:	add	fp, sp, #8
   10c98:	mov	r5, r1
   10c9c:	cmp	r0, #0
   10ca0:	beq	10cd4 <abort@plt+0x404>
   10ca4:	mov	r1, r5
   10ca8:	mov	r4, r0
   10cac:	bl	107ec <fopen@plt>
   10cb0:	cmp	r0, #0
   10cb4:	popne	{r4, r5, fp, pc}
   10cb8:	ldrb	r0, [r5]
   10cbc:	cmp	r0, #119	; 0x77
   10cc0:	bne	10cf8 <abort@plt+0x428>
   10cc4:	ldr	r0, [pc, #72]	; 10d14 <abort@plt+0x444>
   10cc8:	mov	r1, r4
   10ccc:	add	r0, pc, r0
   10cd0:	bl	11100 <error@@Base+0x50>
   10cd4:	ldrb	r0, [r5]
   10cd8:	ldr	r1, [pc, #40]	; 10d08 <abort@plt+0x438>
   10cdc:	ldr	r1, [pc, r1]
   10ce0:	ldr	r2, [pc, #36]	; 10d0c <abort@plt+0x43c>
   10ce4:	cmp	r0, #114	; 0x72
   10ce8:	ldr	r2, [pc, r2]
   10cec:	moveq	r2, r1
   10cf0:	ldr	r0, [r2]
   10cf4:	pop	{r4, r5, fp, pc}
   10cf8:	ldr	r0, [pc, #16]	; 10d10 <abort@plt+0x440>
   10cfc:	mov	r1, r4
   10d00:	add	r0, pc, r0
   10d04:	bl	11100 <error@@Base+0x50>
   10d08:	andeq	r2, r1, r0, lsr #7
   10d0c:	muleq	r1, ip, r3
   10d10:	andeq	r1, r0, r9, lsr sl
   10d14:	andeq	r1, r0, r7, asr sl
   10d18:	ldr	r1, [pc, #32]	; 10d40 <abort@plt+0x470>
   10d1c:	ldr	r1, [pc, r1]
   10d20:	ldr	r1, [r1]
   10d24:	cmp	r1, r0
   10d28:	ldrne	r1, [pc, #20]	; 10d44 <abort@plt+0x474>
   10d2c:	ldrne	r1, [pc, r1]
   10d30:	ldrne	r1, [r1]
   10d34:	cmpne	r1, r0
   10d38:	bxeq	lr
   10d3c:	b	108a0 <fclose@plt>
   10d40:	andeq	r2, r1, r0, ror #6
   10d44:	andeq	r2, r1, r8, asr r3
   10d48:	push	{fp, lr}
   10d4c:	mov	fp, sp
   10d50:	sub	sp, sp, #88	; 0x58
   10d54:	mov	r1, r0
   10d58:	mov	r2, sp
   10d5c:	mov	r0, #3
   10d60:	bl	10828 <__xstat@plt>
   10d64:	clz	r0, r0
   10d68:	lsr	r0, r0, #5
   10d6c:	mov	sp, fp
   10d70:	pop	{fp, pc}
   10d74:	push	{r4, r5, fp, lr}
   10d78:	add	fp, sp, #8
   10d7c:	sub	sp, sp, #104	; 0x68
   10d80:	ldr	r0, [pc, #92]	; 10de4 <abort@plt+0x514>
   10d84:	add	r0, pc, r0
   10d88:	ldrh	r1, [r0]
   10d8c:	add	r5, r1, #1
   10d90:	strh	r5, [r0]
   10d94:	ldr	r0, [pc, #76]	; 10de8 <abort@plt+0x518>
   10d98:	ldr	r0, [pc, r0]
   10d9c:	ldr	r4, [r0]
   10da0:	bl	10864 <getpid@plt>
   10da4:	mov	r3, r0
   10da8:	sxth	r0, r5
   10dac:	add	r5, sp, #4
   10db0:	mov	r2, r4
   10db4:	str	r0, [sp]
   10db8:	mov	r0, r5
   10dbc:	ldr	r1, [pc, #40]	; 10dec <abort@plt+0x51c>
   10dc0:	add	r1, pc, r1
   10dc4:	bl	108b8 <sprintf@plt>
   10dc8:	mov	r0, r5
   10dcc:	bl	10810 <strdup@plt>
   10dd0:	mov	r4, r0
   10dd4:	bl	1081c <unlink@plt>
   10dd8:	mov	r0, r4
   10ddc:	sub	sp, fp, #8
   10de0:	pop	{r4, r5, fp, pc}
   10de4:	andeq	r2, r1, sl, lsl r3
   10de8:	ldrdeq	r2, [r1], -r8
   10dec:	andeq	r1, r0, r2, lsr #19
   10df0:	push	{r4, sl, fp, lr}
   10df4:	add	fp, sp, #8
   10df8:	mov	r4, r0
   10dfc:	bl	1087c <strlen@plt>
   10e00:	sub	r0, r0, #1
   10e04:	sxth	r0, r0
   10e08:	cmp	r0, #0
   10e0c:	blt	10e1c <abort@plt+0x54c>
   10e10:	ldrb	r1, [r4, r0]
   10e14:	cmp	r1, #47	; 0x2f
   10e18:	bne	10e00 <abort@plt+0x530>
   10e1c:	add	r0, r4, r0
   10e20:	add	r0, r0, #1
   10e24:	pop	{r4, sl, fp, pc}
   10e28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e2c:	add	fp, sp, #28
   10e30:	sub	sp, sp, #12
   10e34:	str	r2, [sp]
   10e38:	stmib	sp, {r0, r1}
   10e3c:	mov	r6, r3
   10e40:	ldr	r4, [r1]
   10e44:	mov	r0, r4
   10e48:	bl	1087c <strlen@plt>
   10e4c:	sub	r0, r0, #1
   10e50:	sxth	r0, r0
   10e54:	cmp	r0, #0
   10e58:	blt	10e68 <abort@plt+0x598>
   10e5c:	ldrb	r1, [r4, r0]
   10e60:	cmp	r1, #47	; 0x2f
   10e64:	bne	10e4c <abort@plt+0x57c>
   10e68:	ldr	r1, [pc, #484]	; 11054 <abort@plt+0x784>
   10e6c:	add	r0, r4, r0
   10e70:	add	r0, r0, #1
   10e74:	ldr	r1, [pc, r1]
   10e78:	str	r0, [r1]
   10e7c:	mov	r0, #2
   10e80:	ldr	r4, [pc, #464]	; 11058 <abort@plt+0x788>
   10e84:	add	r4, pc, r4
   10e88:	mov	r1, r4
   10e8c:	bl	1084c <__sysv_signal@plt>
   10e90:	mov	r0, #15
   10e94:	mov	r1, r4
   10e98:	bl	1084c <__sysv_signal@plt>
   10e9c:	ldr	r0, [sp, #4]
   10ea0:	ldr	r5, [r0]
   10ea4:	cmp	r5, #1
   10ea8:	bne	10ec0 <abort@plt+0x5f0>
   10eac:	ldr	r0, [pc, #424]	; 1105c <abort@plt+0x78c>
   10eb0:	ldr	r0, [pc, r0]
   10eb4:	ldrb	r0, [r0]
   10eb8:	cmp	r0, #0
   10ebc:	bne	1103c <abort@plt+0x76c>
   10ec0:	ldr	ip, [sp, #8]
   10ec4:	mov	r8, #0
   10ec8:	cmp	r5, #2
   10ecc:	blt	11018 <abort@plt+0x748>
   10ed0:	mov	r8, #0
   10ed4:	mov	r7, #1
   10ed8:	mov	r9, #1
   10edc:	ldr	r4, [ip, r7, lsl #2]
   10ee0:	ldrb	r0, [r4]
   10ee4:	cmp	r0, #45	; 0x2d
   10ee8:	bne	10fc0 <abort@plt+0x6f0>
   10eec:	ldrb	sl, [r4, #1]
   10ef0:	cmp	sl, #0
   10ef4:	beq	10fc0 <abort@plt+0x6f0>
   10ef8:	mov	r0, r4
   10efc:	bl	1087c <strlen@plt>
   10f00:	mov	r2, r0
   10f04:	ldr	r0, [pc, #340]	; 11060 <abort@plt+0x790>
   10f08:	mov	r1, r4
   10f0c:	add	r0, pc, r0
   10f10:	bl	108c4 <strncmp@plt>
   10f14:	cmp	r0, #0
   10f18:	beq	1103c <abort@plt+0x76c>
   10f1c:	ldr	ip, [sp, #8]
   10f20:	add	r1, r7, #1
   10f24:	mov	r0, #0
   10f28:	cmp	r1, r5
   10f2c:	ldrlt	r0, [ip, r1, lsl #2]
   10f30:	cmp	r6, #0
   10f34:	ldrbne	r2, [r6]
   10f38:	cmpne	r2, #0
   10f3c:	beq	1102c <abort@plt+0x75c>
   10f40:	mov	r1, #0
   10f44:	cmp	sl, r2
   10f48:	beq	10f70 <abort@plt+0x6a0>
   10f4c:	mov	r2, #1
   10f50:	sxth	r1, r2
   10f54:	add	r3, r1, r1, lsl #1
   10f58:	ldrb	r3, [r6, r3, lsl #2]
   10f5c:	cmp	r3, #0
   10f60:	beq	1102c <abort@plt+0x75c>
   10f64:	add	r2, r2, #1
   10f68:	cmp	sl, r3
   10f6c:	bne	10f50 <abort@plt+0x680>
   10f70:	add	r1, r1, r1, lsl #1
   10f74:	add	r3, r6, r1, lsl #2
   10f78:	ldr	r1, [r3, #4]
   10f7c:	cmp	r1, #0
   10f80:	beq	10fe0 <abort@plt+0x710>
   10f84:	mov	r2, r4
   10f88:	cmp	r0, #0
   10f8c:	ldrb	r7, [r2, #2]!
   10f90:	cmpeq	r7, #0
   10f94:	beq	10fe0 <abort@plt+0x710>
   10f98:	ldr	r3, [r1]
   10f9c:	cmp	r3, #0
   10fa0:	bne	11044 <abort@plt+0x774>
   10fa4:	cmp	r7, #0
   10fa8:	movne	r0, r2
   10fac:	str	r0, [r1]
   10fb0:	ldrb	r0, [r2]
   10fb4:	cmp	r0, #0
   10fb8:	addeq	r9, r9, #1
   10fbc:	b	10fcc <abort@plt+0x6fc>
   10fc0:	sxth	r0, r8
   10fc4:	add	r8, r8, #1
   10fc8:	str	r4, [ip, r0, lsl #2]
   10fcc:	add	r9, r9, #1
   10fd0:	sxth	r7, r9
   10fd4:	cmp	r5, r7
   10fd8:	bgt	10edc <abort@plt+0x60c>
   10fdc:	b	11018 <abort@plt+0x748>
   10fe0:	ldr	r0, [r3, #8]
   10fe4:	cmp	r0, #0
   10fe8:	beq	1102c <abort@plt+0x75c>
   10fec:	ldrb	r1, [r4, #2]
   10ff0:	cmp	r1, #0
   10ff4:	bne	1102c <abort@plt+0x75c>
   10ff8:	ldrb	r1, [r0]
   10ffc:	cmp	r1, #0
   11000:	bne	11044 <abort@plt+0x774>
   11004:	mov	r1, #1
   11008:	strb	r1, [r0]
   1100c:	ldr	r0, [sp, #4]
   11010:	ldr	r5, [r0]
   11014:	b	10fcc <abort@plt+0x6fc>
   11018:	ldr	r1, [sp, #4]
   1101c:	sxth	r0, r8
   11020:	str	r0, [r1]
   11024:	sub	sp, fp, #28
   11028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1102c:	ldr	r0, [pc, #52]	; 11068 <abort@plt+0x798>
   11030:	mov	r1, r4
   11034:	add	r0, pc, r0
   11038:	bl	11100 <error@@Base+0x50>
   1103c:	ldr	r0, [sp]
   11040:	bl	111dc <error@@Base+0x12c>
   11044:	ldr	r0, [pc, #24]	; 11064 <abort@plt+0x794>
   11048:	mov	r1, r4
   1104c:	add	r0, pc, r0
   11050:	bl	11100 <error@@Base+0x50>
   11054:	strdeq	r2, [r1], -ip
   11058:	andeq	r0, r0, r8, lsl r3
   1105c:			; <UNDEFINED> instruction: 0x000121b0
   11060:	andeq	r1, r0, r3, ror r8
   11064:	andeq	r1, r0, r7, asr r7
   11068:	andeq	r1, r0, r0, ror #14
   1106c:	push	{fp, lr}
   11070:	mov	fp, sp
   11074:	mov	r0, #0
   11078:	bl	1107c <abort@plt+0x7ac>
   1107c:	push	{fp, lr}
   11080:	mov	fp, sp
   11084:	mov	r4, r0
   11088:	ldr	r0, [pc, #28]	; 110ac <abort@plt+0x7dc>
   1108c:	ldr	r0, [pc, r0]
   11090:	ldr	r0, [r0]
   11094:	cmp	r0, #0
   11098:	beq	110a0 <abort@plt+0x7d0>
   1109c:	blx	r0
   110a0:	bl	1123c <error@@Base+0x18c>
   110a4:	mov	r0, r4
   110a8:	bl	10870 <exit@plt>
   110ac:	andeq	r1, r1, ip, ror #31

000110b0 <error@@Base>:
   110b0:	push	{fp, lr}
   110b4:	mov	fp, sp
   110b8:	mov	r3, r0
   110bc:	ldr	r0, [pc, #44]	; 110f0 <error@@Base+0x40>
   110c0:	ldr	r0, [pc, r0]
   110c4:	ldr	r2, [r0]
   110c8:	ldr	r0, [pc, #36]	; 110f4 <error@@Base+0x44>
   110cc:	ldr	r0, [pc, r0]
   110d0:	ldr	r0, [r0]
   110d4:	ldr	r1, [pc, #28]	; 110f8 <error@@Base+0x48>
   110d8:	add	r1, pc, r1
   110dc:	bl	10888 <fprintf@plt>
   110e0:	ldr	r0, [pc, #20]	; 110fc <error@@Base+0x4c>
   110e4:	ldr	r0, [pc, r0]
   110e8:	ldr	r0, [r0]
   110ec:	bl	1107c <abort@plt+0x7ac>
   110f0:			; <UNDEFINED> instruction: 0x00011fb0
   110f4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   110f8:	andeq	r1, r0, r5, ror r6
   110fc:	andeq	r1, r1, r4, lsr #31
   11100:	push	{fp, lr}
   11104:	mov	fp, sp
   11108:	sub	sp, sp, #8
   1110c:	mov	r3, r0
   11110:	ldr	r0, [pc, #48]	; 11148 <error@@Base+0x98>
   11114:	ldr	r0, [pc, r0]
   11118:	ldr	r2, [r0]
   1111c:	ldr	r0, [pc, #40]	; 1114c <error@@Base+0x9c>
   11120:	ldr	r0, [pc, r0]
   11124:	str	r1, [sp]
   11128:	ldr	r0, [r0]
   1112c:	ldr	r1, [pc, #28]	; 11150 <error@@Base+0xa0>
   11130:	add	r1, pc, r1
   11134:	bl	10888 <fprintf@plt>
   11138:	ldr	r0, [pc, #20]	; 11154 <error@@Base+0xa4>
   1113c:	ldr	r0, [pc, r0]
   11140:	ldr	r0, [r0]
   11144:	bl	1107c <abort@plt+0x7ac>
   11148:	andeq	r1, r1, ip, asr pc
   1114c:	andeq	r1, r1, r8, asr #30
   11150:	andeq	r1, r0, r5, lsr #12
   11154:	andeq	r1, r1, ip, asr #30
   11158:	push	{fp, lr}
   1115c:	mov	fp, sp
   11160:	sub	sp, sp, #8
   11164:	mov	r3, r0
   11168:	ldr	r0, [pc, #40]	; 11198 <error@@Base+0xe8>
   1116c:	ldr	r0, [pc, r0]
   11170:	ldr	r2, [r0]
   11174:	ldr	r0, [pc, #32]	; 1119c <error@@Base+0xec>
   11178:	ldr	r0, [pc, r0]
   1117c:	str	r1, [sp]
   11180:	ldr	r0, [r0]
   11184:	ldr	r1, [pc, #20]	; 111a0 <error@@Base+0xf0>
   11188:	add	r1, pc, r1
   1118c:	bl	10888 <fprintf@plt>
   11190:	mov	sp, fp
   11194:	pop	{fp, pc}
   11198:	andeq	r1, r1, r4, lsl #30
   1119c:	strdeq	r1, [r1], -r0
   111a0:	andeq	r1, r0, sp, asr #11
   111a4:	ldr	r0, [pc, #40]	; 111d4 <error@@Base+0x124>
   111a8:	add	r0, pc, r0
   111ac:	ldrb	r1, [r0]
   111b0:	cmp	r1, #1
   111b4:	bxeq	lr
   111b8:	push	{fp, lr}
   111bc:	mov	fp, sp
   111c0:	mov	r1, #1
   111c4:	strb	r1, [r0]
   111c8:	ldr	r0, [pc, #8]	; 111d8 <error@@Base+0x128>
   111cc:	add	r0, pc, r0
   111d0:	bl	110b0 <error@@Base>
   111d4:	strdeq	r1, [r1], -r8
   111d8:	andeq	r1, r0, r4, lsr #11
   111dc:	push	{fp, lr}
   111e0:	mov	fp, sp
   111e4:	mov	r3, r0
   111e8:	ldr	r0, [pc, #60]	; 1122c <error@@Base+0x17c>
   111ec:	ldr	r0, [pc, r0]
   111f0:	ldr	r0, [r0]
   111f4:	cmp	r0, #0
   111f8:	bne	11224 <error@@Base+0x174>
   111fc:	ldr	r0, [pc, #44]	; 11230 <error@@Base+0x180>
   11200:	ldr	r0, [pc, r0]
   11204:	ldr	r2, [r0]
   11208:	ldr	r0, [pc, #36]	; 11234 <error@@Base+0x184>
   1120c:	ldr	r0, [pc, r0]
   11210:	ldr	r0, [r0]
   11214:	ldr	r1, [pc, #28]	; 11238 <error@@Base+0x188>
   11218:	add	r1, pc, r1
   1121c:	bl	10888 <fprintf@plt>
   11220:	bl	1106c <abort@plt+0x79c>
   11224:	blx	r0
   11228:	bl	1106c <abort@plt+0x79c>
   1122c:	andeq	r1, r1, r8, ror lr
   11230:	andeq	r1, r1, r0, ror lr
   11234:	andeq	r1, r1, ip, asr lr
   11238:	andeq	r1, r0, sp, ror #10
   1123c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11240:	add	fp, sp, #24
   11244:	sub	sp, sp, #104	; 0x68
   11248:	ldr	r8, [pc, #124]	; 112cc <error@@Base+0x21c>
   1124c:	add	r8, pc, r8
   11250:	ldrsh	r0, [r8]
   11254:	cmp	r0, #1
   11258:	blt	112c4 <error@@Base+0x214>
   1125c:	ldr	r9, [pc, #108]	; 112d0 <error@@Base+0x220>
   11260:	mov	r7, #1
   11264:	add	r4, sp, #4
   11268:	ldr	r9, [pc, r9]
   1126c:	ldr	r5, [pc, #96]	; 112d4 <error@@Base+0x224>
   11270:	add	r5, pc, r5
   11274:	ldr	r6, [r9]
   11278:	bl	10864 <getpid@plt>
   1127c:	mov	r3, r0
   11280:	sxth	r0, r7
   11284:	mov	r1, r5
   11288:	mov	r2, r6
   1128c:	str	r0, [sp]
   11290:	mov	r0, r4
   11294:	bl	108b8 <sprintf@plt>
   11298:	mov	r0, r4
   1129c:	bl	10810 <strdup@plt>
   112a0:	mov	r6, r0
   112a4:	bl	1081c <unlink@plt>
   112a8:	mov	r0, r6
   112ac:	bl	107f8 <free@plt>
   112b0:	add	r0, r7, #1
   112b4:	sxth	r7, r0
   112b8:	ldrsh	r0, [r8]
   112bc:	cmp	r7, r0
   112c0:	ble	11274 <error@@Base+0x1c4>
   112c4:	sub	sp, fp, #24
   112c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   112cc:	andeq	r1, r1, r2, asr lr
   112d0:	andeq	r1, r1, r8, lsl #28
   112d4:	strdeq	r1, [r0], -r2
   112d8:	ldm	r0, {r3, ip}
   112dc:	add	r1, r3, r1
   112e0:	add	r2, ip, r2
   112e4:	stm	r0, {r1, r2}
   112e8:	bx	lr
   112ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   112f0:	add	fp, sp, #24
   112f4:	mov	r8, r3
   112f8:	mov	r5, r2
   112fc:	mov	r4, r1
   11300:	mov	r6, r0
   11304:	bl	1213c <error@@Base+0x108c>
   11308:	mov	r7, r0
   1130c:	cmp	r0, #0
   11310:	bne	1133c <error@@Base+0x28c>
   11314:	mov	r0, #1
   11318:	mov	r1, #20
   1131c:	bl	10bf0 <abort@plt+0x320>
   11320:	mov	r7, r0
   11324:	mov	r0, r4
   11328:	bl	10810 <strdup@plt>
   1132c:	str	r0, [r7, #8]
   11330:	mov	r0, r6
   11334:	mov	r1, r7
   11338:	bl	121cc <error@@Base+0x111c>
   1133c:	ldr	r0, [r7, #12]
   11340:	ldr	r1, [r7, #16]
   11344:	add	r0, r0, r5
   11348:	add	r1, r1, r8
   1134c:	str	r0, [r7, #12]
   11350:	str	r1, [r7, #16]
   11354:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11358:	push	{r4, r5, r6, r7, fp, lr}
   1135c:	add	fp, sp, #16
   11360:	sub	sp, sp, #8
   11364:	mov	r6, r1
   11368:	ldr	r1, [pc, #488]	; 11558 <error@@Base+0x4a8>
   1136c:	mov	r5, r0
   11370:	mov	r0, r6
   11374:	add	r1, pc, r1
   11378:	bl	10c90 <abort@plt+0x3c0>
   1137c:	mov	r4, r0
   11380:	ldr	r0, [pc, #468]	; 1155c <error@@Base+0x4ac>
   11384:	mov	r1, #99	; 0x63
   11388:	mov	r2, r4
   1138c:	add	r0, pc, r0
   11390:	bl	10804 <fgets@plt>
   11394:	cmp	r0, #0
   11398:	beq	1153c <error@@Base+0x48c>
   1139c:	ldr	r0, [pc, #444]	; 11560 <error@@Base+0x4b0>
   113a0:	ldr	r1, [pc, #444]	; 11564 <error@@Base+0x4b4>
   113a4:	mov	r2, #45	; 0x2d
   113a8:	add	r0, pc, r0
   113ac:	add	r1, pc, r1
   113b0:	bl	108c4 <strncmp@plt>
   113b4:	cmp	r0, #0
   113b8:	bne	1153c <error@@Base+0x48c>
   113bc:	ldr	r0, [pc, #420]	; 11568 <error@@Base+0x4b8>
   113c0:	mov	r1, #99	; 0x63
   113c4:	mov	r2, r4
   113c8:	add	r0, pc, r0
   113cc:	bl	10804 <fgets@plt>
   113d0:	cmp	r0, #0
   113d4:	beq	1153c <error@@Base+0x48c>
   113d8:	ldr	r0, [pc, #396]	; 1156c <error@@Base+0x4bc>
   113dc:	ldr	r1, [pc, #396]	; 11570 <error@@Base+0x4c0>
   113e0:	add	r0, pc, r0
   113e4:	add	r1, pc, r1
   113e8:	bl	107d4 <strcmp@plt>
   113ec:	cmp	r0, #0
   113f0:	bne	1153c <error@@Base+0x48c>
   113f4:	ldr	r0, [pc, #376]	; 11574 <error@@Base+0x4c4>
   113f8:	mov	r1, #99	; 0x63
   113fc:	mov	r2, r4
   11400:	add	r0, pc, r0
   11404:	bl	10804 <fgets@plt>
   11408:	cmp	r0, #0
   1140c:	beq	1153c <error@@Base+0x48c>
   11410:	ldr	r0, [pc, #352]	; 11578 <error@@Base+0x4c8>
   11414:	ldr	r1, [pc, #352]	; 1157c <error@@Base+0x4cc>
   11418:	add	r2, sp, #4
   1141c:	add	r0, pc, r0
   11420:	add	r1, pc, r1
   11424:	bl	10894 <__isoc99_sscanf@plt>
   11428:	cmp	r0, #1
   1142c:	bne	1153c <error@@Base+0x48c>
   11430:	ldr	r0, [pc, #328]	; 11580 <error@@Base+0x4d0>
   11434:	mov	r1, #99	; 0x63
   11438:	mov	r2, r4
   1143c:	add	r0, pc, r0
   11440:	bl	10804 <fgets@plt>
   11444:	cmp	r0, #0
   11448:	beq	1153c <error@@Base+0x48c>
   1144c:	ldr	r0, [pc, #304]	; 11584 <error@@Base+0x4d4>
   11450:	ldr	r1, [pc, #304]	; 11588 <error@@Base+0x4d8>
   11454:	mov	r2, sp
   11458:	add	r0, pc, r0
   1145c:	add	r1, pc, r1
   11460:	bl	10894 <__isoc99_sscanf@plt>
   11464:	cmp	r0, #1
   11468:	bne	1153c <error@@Base+0x48c>
   1146c:	ldr	r0, [pc, #280]	; 1158c <error@@Base+0x4dc>
   11470:	mov	r1, #99	; 0x63
   11474:	mov	r2, r4
   11478:	add	r0, pc, r0
   1147c:	bl	10804 <fgets@plt>
   11480:	cmp	r0, #0
   11484:	beq	1153c <error@@Base+0x48c>
   11488:	ldr	r0, [pc, #256]	; 11590 <error@@Base+0x4e0>
   1148c:	mov	r1, #99	; 0x63
   11490:	mov	r2, r4
   11494:	add	r0, pc, r0
   11498:	bl	10804 <fgets@plt>
   1149c:	cmp	r0, #0
   114a0:	beq	1153c <error@@Base+0x48c>
   114a4:	ldm	r5, {r0, r1}
   114a8:	ldr	r2, [sp, #4]
   114ac:	add	r0, r0, r2
   114b0:	ldr	r2, [sp]
   114b4:	add	r1, r1, r2
   114b8:	stm	r5, {r0, r1}
   114bc:	add	r1, r5, #8
   114c0:	mov	r0, r4
   114c4:	bl	1159c <error@@Base+0x4ec>
   114c8:	mov	r7, r0
   114cc:	add	r1, r5, #416	; 0x1a0
   114d0:	mov	r0, r4
   114d4:	bl	1159c <error@@Base+0x4ec>
   114d8:	mov	r6, r0
   114dc:	add	r1, r5, #824	; 0x338
   114e0:	mov	r0, r4
   114e4:	bl	1159c <error@@Base+0x4ec>
   114e8:	ldr	r0, [sp, #4]
   114ec:	cmp	r0, #1
   114f0:	blt	1152c <error@@Base+0x47c>
   114f4:	add	r1, r5, #920	; 0x398
   114f8:	mov	r0, r4
   114fc:	bl	1159c <error@@Base+0x4ec>
   11500:	cmp	r7, #1
   11504:	blt	11514 <error@@Base+0x464>
   11508:	add	r1, r5, #992	; 0x3e0
   1150c:	mov	r0, r4
   11510:	bl	116d4 <error@@Base+0x624>
   11514:	cmp	r6, #1
   11518:	blt	1152c <error@@Base+0x47c>
   1151c:	movw	r0, #9048	; 0x2358
   11520:	add	r1, r5, r0
   11524:	mov	r0, r4
   11528:	bl	116d4 <error@@Base+0x624>
   1152c:	mov	r0, r4
   11530:	bl	10d18 <abort@plt+0x448>
   11534:	sub	sp, fp, #16
   11538:	pop	{r4, r5, r6, r7, fp, pc}
   1153c:	ldr	r1, [pc, #80]	; 11594 <error@@Base+0x4e4>
   11540:	ldr	r0, [pc, #80]	; 11598 <error@@Base+0x4e8>
   11544:	cmp	r6, #0
   11548:	add	r1, pc, r1
   1154c:	add	r0, pc, r0
   11550:	movne	r1, r6
   11554:	bl	11100 <error@@Base+0x50>
   11558:	andeq	r1, r0, r0, asr #8
   1155c:	andeq	r1, r1, r5, lsl sp
   11560:	strdeq	r1, [r1], -r9
   11564:	andeq	r1, r0, sl, lsl #8
   11568:	ldrdeq	r1, [r1], -r9
   1156c:	andeq	r1, r1, r1, asr #25
   11570:	andeq	r1, r0, r2, lsl #8
   11574:	andeq	r1, r1, r1, lsr #25
   11578:	andeq	r1, r1, r5, lsl #25
   1157c:	andeq	r1, r0, r9, ror r4
   11580:	andeq	r1, r1, r5, ror #24
   11584:	andeq	r1, r1, r9, asr #24
   11588:	andeq	r1, r0, sp, lsr r4
   1158c:	andeq	r1, r1, r9, lsr #24
   11590:	andeq	r1, r1, sp, lsl #24
   11594:	andeq	r1, r0, r0, ror #5
   11598:	andeq	r1, r0, sl, asr #5
   1159c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115a0:	add	fp, sp, #28
   115a4:	sub	sp, sp, #12
   115a8:	mov	r5, r0
   115ac:	ldr	r0, [pc, #268]	; 116c0 <error@@Base+0x610>
   115b0:	mov	r4, r1
   115b4:	mov	r1, #99	; 0x63
   115b8:	mov	r2, r5
   115bc:	add	r0, pc, r0
   115c0:	bl	10804 <fgets@plt>
   115c4:	mov	r6, #0
   115c8:	cmp	r0, #0
   115cc:	beq	116b4 <error@@Base+0x604>
   115d0:	ldr	r0, [pc, #236]	; 116c4 <error@@Base+0x614>
   115d4:	mov	r1, #99	; 0x63
   115d8:	mov	r2, r5
   115dc:	add	r0, pc, r0
   115e0:	bl	10804 <fgets@plt>
   115e4:	cmp	r0, #0
   115e8:	beq	116b4 <error@@Base+0x604>
   115ec:	ldr	r7, [pc, #212]	; 116c8 <error@@Base+0x618>
   115f0:	mov	r1, #99	; 0x63
   115f4:	mov	r2, r5
   115f8:	add	r7, pc, r7
   115fc:	mov	r0, r7
   11600:	bl	10804 <fgets@plt>
   11604:	cmp	r0, #0
   11608:	beq	116b4 <error@@Base+0x604>
   1160c:	mov	r6, #0
   11610:	add	r9, sp, #8
   11614:	add	sl, sp, #4
   11618:	add	r8, r7, #29
   1161c:	ldr	r1, [pc, #168]	; 116cc <error@@Base+0x61c>
   11620:	mov	r0, r7
   11624:	mov	r2, r9
   11628:	mov	r3, sl
   1162c:	add	r1, pc, r1
   11630:	bl	10894 <__isoc99_sscanf@plt>
   11634:	cmp	r0, #2
   11638:	bne	116b4 <error@@Base+0x604>
   1163c:	mov	r0, r8
   11640:	mov	r1, #0
   11644:	mov	r2, #10
   11648:	bl	107e0 <strtol@plt>
   1164c:	cmp	r0, #0
   11650:	beq	1165c <error@@Base+0x5ac>
   11654:	ldr	r1, [sp, #8]
   11658:	b	1167c <error@@Base+0x5cc>
   1165c:	ldr	r1, [pc, #108]	; 116d0 <error@@Base+0x620>
   11660:	mov	r0, r8
   11664:	add	r1, pc, r1
   11668:	bl	107d4 <strcmp@plt>
   1166c:	ldr	r1, [sp, #8]
   11670:	cmp	r0, #0
   11674:	movwne	r0, #11
   11678:	moveq	r6, r1
   1167c:	mov	r2, r4
   11680:	ldr	r0, [r2, r0, lsl #3]!
   11684:	add	r0, r0, r1
   11688:	ldr	r1, [sp, #4]
   1168c:	str	r0, [r2]
   11690:	ldr	r0, [r2, #4]
   11694:	add	r0, r0, r1
   11698:	mov	r1, #99	; 0x63
   1169c:	str	r0, [r2, #4]
   116a0:	mov	r0, r7
   116a4:	mov	r2, r5
   116a8:	bl	10804 <fgets@plt>
   116ac:	cmp	r0, #0
   116b0:	bne	1161c <error@@Base+0x56c>
   116b4:	mov	r0, r6
   116b8:	sub	sp, fp, #28
   116bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116c0:	andeq	r1, r1, r5, ror #21
   116c4:	andeq	r1, r1, r5, asr #21
   116c8:	andeq	r1, r1, r9, lsr #21
   116cc:	andeq	r1, r0, r9, ror #4
   116d0:	andeq	r1, r0, r9, lsr #4
   116d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116d8:	add	fp, sp, #28
   116dc:	sub	sp, sp, #12
   116e0:	mov	r5, r0
   116e4:	ldr	r0, [pc, #268]	; 117f8 <error@@Base+0x748>
   116e8:	mov	r4, r1
   116ec:	mov	r1, #99	; 0x63
   116f0:	mov	r2, r5
   116f4:	add	r0, pc, r0
   116f8:	bl	10804 <fgets@plt>
   116fc:	cmp	r0, #0
   11700:	beq	117f0 <error@@Base+0x740>
   11704:	ldr	r0, [pc, #240]	; 117fc <error@@Base+0x74c>
   11708:	mov	r1, #99	; 0x63
   1170c:	mov	r2, r5
   11710:	add	r0, pc, r0
   11714:	bl	10804 <fgets@plt>
   11718:	cmp	r0, #0
   1171c:	beq	117f0 <error@@Base+0x740>
   11720:	ldr	r6, [pc, #216]	; 11800 <error@@Base+0x750>
   11724:	mov	r1, #99	; 0x63
   11728:	mov	r2, r5
   1172c:	add	r6, pc, r6
   11730:	mov	r0, r6
   11734:	bl	10804 <fgets@plt>
   11738:	cmp	r0, #0
   1173c:	beq	117f0 <error@@Base+0x740>
   11740:	add	r7, r6, #29
   11744:	ldr	r1, [pc, #184]	; 11804 <error@@Base+0x754>
   11748:	mov	r0, r6
   1174c:	add	r2, sp, #8
   11750:	add	r3, sp, #4
   11754:	add	r1, pc, r1
   11758:	bl	10894 <__isoc99_sscanf@plt>
   1175c:	cmp	r0, #2
   11760:	bne	117f0 <error@@Base+0x740>
   11764:	mov	r0, r6
   11768:	bl	1087c <strlen@plt>
   1176c:	ldr	r9, [sp, #8]
   11770:	ldr	sl, [sp, #4]
   11774:	add	r0, r6, r0
   11778:	mov	r1, #0
   1177c:	strb	r1, [r0, #-1]
   11780:	mov	r0, r4
   11784:	mov	r1, r7
   11788:	bl	1213c <error@@Base+0x108c>
   1178c:	mov	r8, r0
   11790:	cmp	r0, #0
   11794:	bne	117c0 <error@@Base+0x710>
   11798:	mov	r0, #1
   1179c:	mov	r1, #20
   117a0:	bl	10bf0 <abort@plt+0x320>
   117a4:	mov	r8, r0
   117a8:	mov	r0, r7
   117ac:	bl	10810 <strdup@plt>
   117b0:	str	r0, [r8, #8]
   117b4:	mov	r0, r4
   117b8:	mov	r1, r8
   117bc:	bl	121cc <error@@Base+0x111c>
   117c0:	ldr	r0, [r8, #12]
   117c4:	ldr	r1, [r8, #16]
   117c8:	mov	r2, r5
   117cc:	add	r0, r0, r9
   117d0:	add	r1, r1, sl
   117d4:	str	r0, [r8, #12]
   117d8:	str	r1, [r8, #16]
   117dc:	mov	r0, r6
   117e0:	mov	r1, #99	; 0x63
   117e4:	bl	10804 <fgets@plt>
   117e8:	cmp	r0, #0
   117ec:	bne	11744 <error@@Base+0x694>
   117f0:	sub	sp, fp, #28
   117f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117f8:	andeq	r1, r1, sp, lsr #19
   117fc:	muleq	r1, r1, r9
   11800:	andeq	r1, r1, r5, ror r9
   11804:	andeq	r1, r0, r1, asr #2
   11808:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1180c:	add	fp, sp, #24
   11810:	sub	sp, sp, #8
   11814:	mov	r2, r1
   11818:	ldr	r1, [pc, #448]	; 119e0 <error@@Base+0x930>
   1181c:	mov	r5, r0
   11820:	mov	r0, r2
   11824:	add	r1, pc, r1
   11828:	bl	10c90 <abort@plt+0x3c0>
   1182c:	ldr	r1, [pc, #432]	; 119e4 <error@@Base+0x934>
   11830:	ldr	r2, [pc, #432]	; 119e8 <error@@Base+0x938>
   11834:	ldr	r3, [pc, #432]	; 119ec <error@@Base+0x93c>
   11838:	mov	r4, r0
   1183c:	add	r1, pc, r1
   11840:	add	r2, pc, r2
   11844:	add	r3, pc, r3
   11848:	bl	10888 <fprintf@plt>
   1184c:	ldr	r2, [r5]
   11850:	ldr	r1, [pc, #408]	; 119f0 <error@@Base+0x940>
   11854:	mov	r0, r4
   11858:	add	r1, pc, r1
   1185c:	bl	10888 <fprintf@plt>
   11860:	ldr	r2, [r5, #4]
   11864:	ldr	r1, [pc, #392]	; 119f4 <error@@Base+0x944>
   11868:	mov	r0, r4
   1186c:	add	r1, pc, r1
   11870:	bl	10888 <fprintf@plt>
   11874:	ldr	r0, [r5]
   11878:	cmp	r0, #0
   1187c:	beq	118bc <error@@Base+0x80c>
   11880:	ldr	r1, [r5, #4]
   11884:	vldr	d16, [pc, #332]	; 119d8 <error@@Base+0x928>
   11888:	vmov	s2, r0
   1188c:	sub	r1, r0, r1
   11890:	mov	r0, r4
   11894:	vmov	s0, r1
   11898:	vcvt.f64.s32	d17, s0
   1189c:	vcvt.f64.s32	d18, s2
   118a0:	ldr	r1, [pc, #340]	; 119fc <error@@Base+0x94c>
   118a4:	vmul.f64	d16, d17, d16
   118a8:	vdiv.f64	d16, d16, d18
   118ac:	vmov	r2, r3, d16
   118b0:	add	r1, pc, r1
   118b4:	bl	10888 <fprintf@plt>
   118b8:	b	118d4 <error@@Base+0x824>
   118bc:	ldr	r0, [pc, #308]	; 119f8 <error@@Base+0x948>
   118c0:	mov	r1, #8
   118c4:	mov	r2, #1
   118c8:	mov	r3, r4
   118cc:	add	r0, pc, r0
   118d0:	bl	10834 <fwrite@plt>
   118d4:	ldr	r0, [pc, #292]	; 11a00 <error@@Base+0x950>
   118d8:	mov	r1, #12
   118dc:	mov	r2, #1
   118e0:	mov	r3, r4
   118e4:	mov	r7, #1
   118e8:	add	r0, pc, r0
   118ec:	bl	10834 <fwrite@plt>
   118f0:	mov	r8, #0
   118f4:	str	r7, [sp, #4]
   118f8:	add	r1, r5, #8
   118fc:	mov	r0, r4
   11900:	mov	r2, #50	; 0x32
   11904:	str	r8, [sp]
   11908:	ldr	r3, [pc, #244]	; 11a04 <error@@Base+0x954>
   1190c:	add	r3, pc, r3
   11910:	bl	11a20 <error@@Base+0x970>
   11914:	str	r8, [sp]
   11918:	str	r7, [sp, #4]
   1191c:	add	r6, r5, #416	; 0x1a0
   11920:	mov	r0, r4
   11924:	mov	r2, #50	; 0x32
   11928:	ldr	r3, [pc, #216]	; 11a08 <error@@Base+0x958>
   1192c:	mov	r1, r6
   11930:	add	r3, pc, r3
   11934:	bl	11a20 <error@@Base+0x970>
   11938:	str	r7, [sp]
   1193c:	str	r7, [sp, #4]
   11940:	add	r1, r5, #824	; 0x338
   11944:	mov	r0, r4
   11948:	mov	r2, #10
   1194c:	ldr	r3, [pc, #184]	; 11a0c <error@@Base+0x95c>
   11950:	add	r3, pc, r3
   11954:	bl	11a20 <error@@Base+0x970>
   11958:	ldr	r0, [r5]
   1195c:	cmp	r0, #1
   11960:	blt	119c8 <error@@Base+0x918>
   11964:	str	r8, [sp]
   11968:	str	r8, [sp, #4]
   1196c:	add	r1, r5, #920	; 0x398
   11970:	mov	r0, r4
   11974:	mov	r2, #8
   11978:	ldr	r3, [pc, #144]	; 11a10 <error@@Base+0x960>
   1197c:	add	r3, pc, r3
   11980:	bl	11a20 <error@@Base+0x970>
   11984:	ldr	r0, [r5, #8]
   11988:	cmp	r0, #1
   1198c:	blt	119a4 <error@@Base+0x8f4>
   11990:	ldr	r2, [pc, #124]	; 11a14 <error@@Base+0x964>
   11994:	add	r1, r5, #992	; 0x3e0
   11998:	mov	r0, r4
   1199c:	add	r2, pc, r2
   119a0:	bl	11de0 <error@@Base+0xd30>
   119a4:	ldr	r0, [r6]
   119a8:	cmp	r0, #1
   119ac:	blt	119c8 <error@@Base+0x918>
   119b0:	ldr	r2, [pc, #96]	; 11a18 <error@@Base+0x968>
   119b4:	movw	r0, #9048	; 0x2358
   119b8:	add	r1, r5, r0
   119bc:	mov	r0, r4
   119c0:	add	r2, pc, r2
   119c4:	bl	11de0 <error@@Base+0xd30>
   119c8:	mov	r0, r4
   119cc:	sub	sp, fp, #24
   119d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   119d4:	b	10d18 <abort@plt+0x448>
   119d8:	andeq	r0, r0, r0
   119dc:	subsmi	r0, r9, r0
   119e0:	ldrdeq	r0, [r0], -r8
   119e4:	strdeq	r0, [r0], -r2
   119e8:	andeq	r0, r0, r6, ror pc
   119ec:	andeq	r0, r0, r2, lsr #31
   119f0:	ldrdeq	r0, [r0], -fp
   119f4:	ldrdeq	r0, [r0], -r5
   119f8:	ldrdeq	r0, [r0], -r1
   119fc:	strdeq	r0, [r0], -r6
   11a00:	andeq	r0, r0, pc, ror #30
   11a04:	andeq	r0, r0, r8, asr pc
   11a08:	andeq	r0, r0, r7, asr #30
   11a0c:	andeq	r0, r0, lr, lsl pc
   11a10:	andeq	r0, r0, r9, lsl #30
   11a14:	andeq	r0, r0, r8, asr #29
   11a18:			; <UNDEFINED> instruction: 0x00000eb7
   11a1c:	nop	{0}
   11a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a24:	add	fp, sp, #28
   11a28:	sub	sp, sp, #4
   11a2c:	vpush	{d8}
   11a30:	sub	sp, sp, #8
   11a34:	mov	r5, r1
   11a38:	ldr	r1, [pc, #832]	; 11d80 <error@@Base+0xcd0>
   11a3c:	mov	r8, r2
   11a40:	mov	r2, r3
   11a44:	mov	r4, r0
   11a48:	add	r1, pc, r1
   11a4c:	bl	10888 <fprintf@plt>
   11a50:	ldr	r0, [pc, #812]	; 11d84 <error@@Base+0xcd4>
   11a54:	mov	r1, #26
   11a58:	mov	r2, #1
   11a5c:	mov	r3, r4
   11a60:	mov	r7, #1
   11a64:	add	r0, pc, r0
   11a68:	bl	10834 <fwrite@plt>
   11a6c:	ldr	r0, [pc, #788]	; 11d88 <error@@Base+0xcd8>
   11a70:	mov	r1, #3
   11a74:	mov	r2, #1
   11a78:	mov	r3, r4
   11a7c:	add	r0, pc, r0
   11a80:	bl	10834 <fwrite@plt>
   11a84:	ldrb	r1, [fp, #8]
   11a88:	ldr	r0, [pc, #764]	; 11d8c <error@@Base+0xcdc>
   11a8c:	ldr	r2, [pc, #764]	; 11d90 <error@@Base+0xce0>
   11a90:	str	r1, [sp]
   11a94:	cmp	r1, #0
   11a98:	add	r0, pc, r0
   11a9c:	add	r2, pc, r2
   11aa0:	ldr	r1, [pc, #748]	; 11d94 <error@@Base+0xce4>
   11aa4:	movne	r2, r0
   11aa8:	mov	r0, r4
   11aac:	add	r1, pc, r1
   11ab0:	bl	10888 <fprintf@plt>
   11ab4:	ldr	r1, [fp, #12]
   11ab8:	lsl	r0, r8, #16
   11abc:	sxth	r6, r8
   11ac0:	cmp	r0, #65536	; 0x10000
   11ac4:	str	r1, [sp, #4]
   11ac8:	blt	11bb0 <error@@Base+0xb00>
   11acc:	ldr	sl, [pc, #708]	; 11d98 <error@@Base+0xce8>
   11ad0:	vldr	d8, [pc, #672]	; 11d78 <error@@Base+0xcc8>
   11ad4:	mov	r8, #1
   11ad8:	add	sl, pc, sl
   11adc:	mov	r0, r5
   11ae0:	ldr	r2, [r0, r7, lsl #3]!
   11ae4:	cmp	r2, #1
   11ae8:	blt	11ba0 <error@@Base+0xaf0>
   11aec:	cmp	r0, #0
   11af0:	beq	11b50 <error@@Base+0xaa0>
   11af4:	add	r9, r5, r7, lsl #3
   11af8:	mov	r0, r4
   11afc:	ldr	r3, [r9, #4]!
   11b00:	ldr	r1, [pc, #660]	; 11d9c <error@@Base+0xcec>
   11b04:	add	r1, pc, r1
   11b08:	bl	10888 <fprintf@plt>
   11b0c:	ldr	r0, [r5, r7, lsl #3]
   11b10:	cmp	r0, #0
   11b14:	beq	11b60 <error@@Base+0xab0>
   11b18:	ldr	r1, [r9]
   11b1c:	vmov	s2, r0
   11b20:	sub	r1, r0, r1
   11b24:	mov	r0, r4
   11b28:	vmov	s0, r1
   11b2c:	vcvt.f64.s32	d16, s0
   11b30:	vcvt.f64.s32	d17, s2
   11b34:	ldr	r1, [pc, #616]	; 11da4 <error@@Base+0xcf4>
   11b38:	vmul.f64	d16, d16, d8
   11b3c:	vdiv.f64	d16, d16, d17
   11b40:	vmov	r2, r3, d16
   11b44:	add	r1, pc, r1
   11b48:	bl	10888 <fprintf@plt>
   11b4c:	b	11b78 <error@@Base+0xac8>
   11b50:	ldr	r0, [pc, #592]	; 11da8 <error@@Base+0xcf8>
   11b54:	mov	r1, #26
   11b58:	add	r0, pc, r0
   11b5c:	b	11b6c <error@@Base+0xabc>
   11b60:	ldr	r0, [pc, #568]	; 11da0 <error@@Base+0xcf0>
   11b64:	mov	r1, #8
   11b68:	add	r0, pc, r0
   11b6c:	mov	r2, #1
   11b70:	mov	r3, r4
   11b74:	bl	10834 <fwrite@plt>
   11b78:	ldr	r0, [pc, #556]	; 11dac <error@@Base+0xcfc>
   11b7c:	mov	r1, #3
   11b80:	mov	r2, #1
   11b84:	mov	r3, r4
   11b88:	add	r0, pc, r0
   11b8c:	bl	10834 <fwrite@plt>
   11b90:	mov	r0, r4
   11b94:	mov	r1, sl
   11b98:	mov	r2, r7
   11b9c:	bl	10888 <fprintf@plt>
   11ba0:	add	r8, r8, #1
   11ba4:	sxth	r7, r8
   11ba8:	cmp	r6, r7
   11bac:	bge	11adc <error@@Base+0xa2c>
   11bb0:	ldr	r0, [sp]
   11bb4:	cmp	r0, #0
   11bb8:	beq	11c8c <error@@Base+0xbdc>
   11bbc:	add	r7, r6, #1
   11bc0:	mov	r0, r5
   11bc4:	ldr	r2, [r0, r7, lsl #3]!
   11bc8:	cmp	r2, #1
   11bcc:	blt	11c8c <error@@Base+0xbdc>
   11bd0:	cmp	r0, #0
   11bd4:	beq	11c38 <error@@Base+0xb88>
   11bd8:	add	r8, r5, r7, lsl #3
   11bdc:	mov	r0, r4
   11be0:	ldr	r3, [r8, #4]!
   11be4:	ldr	r1, [pc, #452]	; 11db0 <error@@Base+0xd00>
   11be8:	add	r1, pc, r1
   11bec:	bl	10888 <fprintf@plt>
   11bf0:	ldr	r0, [r5, r7, lsl #3]
   11bf4:	cmp	r0, #0
   11bf8:	beq	11c48 <error@@Base+0xb98>
   11bfc:	ldr	r1, [r8]
   11c00:	vldr	d16, [pc, #368]	; 11d78 <error@@Base+0xcc8>
   11c04:	vmov	s2, r0
   11c08:	sub	r1, r0, r1
   11c0c:	mov	r0, r4
   11c10:	vmov	s0, r1
   11c14:	vcvt.f64.s32	d17, s0
   11c18:	vcvt.f64.s32	d18, s2
   11c1c:	ldr	r1, [pc, #404]	; 11db8 <error@@Base+0xd08>
   11c20:	vmul.f64	d16, d17, d16
   11c24:	vdiv.f64	d16, d16, d18
   11c28:	vmov	r2, r3, d16
   11c2c:	add	r1, pc, r1
   11c30:	bl	10888 <fprintf@plt>
   11c34:	b	11c60 <error@@Base+0xbb0>
   11c38:	ldr	r0, [pc, #380]	; 11dbc <error@@Base+0xd0c>
   11c3c:	mov	r1, #26
   11c40:	add	r0, pc, r0
   11c44:	b	11c54 <error@@Base+0xba4>
   11c48:	ldr	r0, [pc, #356]	; 11db4 <error@@Base+0xd04>
   11c4c:	mov	r1, #8
   11c50:	add	r0, pc, r0
   11c54:	mov	r2, #1
   11c58:	mov	r3, r4
   11c5c:	bl	10834 <fwrite@plt>
   11c60:	ldr	r0, [pc, #344]	; 11dc0 <error@@Base+0xd10>
   11c64:	mov	r1, #3
   11c68:	mov	r2, #1
   11c6c:	mov	r3, r4
   11c70:	add	r0, pc, r0
   11c74:	bl	10834 <fwrite@plt>
   11c78:	ldr	r1, [pc, #324]	; 11dc4 <error@@Base+0xd14>
   11c7c:	mov	r0, r4
   11c80:	mov	r2, r6
   11c84:	add	r1, pc, r1
   11c88:	bl	10888 <fprintf@plt>
   11c8c:	ldr	r0, [sp, #4]
   11c90:	tst	r0, #255	; 0xff
   11c94:	beq	11cfc <error@@Base+0xc4c>
   11c98:	cmp	r5, #0
   11c9c:	beq	11d0c <error@@Base+0xc5c>
   11ca0:	ldm	r5, {r2, r3}
   11ca4:	ldr	r1, [pc, #284]	; 11dc8 <error@@Base+0xd18>
   11ca8:	mov	r0, r4
   11cac:	add	r1, pc, r1
   11cb0:	bl	10888 <fprintf@plt>
   11cb4:	ldr	r0, [r5]
   11cb8:	cmp	r0, #0
   11cbc:	beq	11d1c <error@@Base+0xc6c>
   11cc0:	ldr	r1, [r5, #4]
   11cc4:	vldr	d16, [pc, #172]	; 11d78 <error@@Base+0xcc8>
   11cc8:	vmov	s2, r0
   11ccc:	sub	r1, r0, r1
   11cd0:	mov	r0, r4
   11cd4:	vmov	s0, r1
   11cd8:	vcvt.f64.s32	d17, s0
   11cdc:	vcvt.f64.s32	d18, s2
   11ce0:	ldr	r1, [pc, #232]	; 11dd0 <error@@Base+0xd20>
   11ce4:	vmul.f64	d16, d17, d16
   11ce8:	vdiv.f64	d16, d16, d18
   11cec:	vmov	r2, r3, d16
   11cf0:	add	r1, pc, r1
   11cf4:	bl	10888 <fprintf@plt>
   11cf8:	b	11d34 <error@@Base+0xc84>
   11cfc:	sub	sp, fp, #40	; 0x28
   11d00:	vpop	{d8}
   11d04:	add	sp, sp, #4
   11d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d0c:	ldr	r0, [pc, #192]	; 11dd4 <error@@Base+0xd24>
   11d10:	mov	r1, #26
   11d14:	add	r0, pc, r0
   11d18:	b	11d28 <error@@Base+0xc78>
   11d1c:	ldr	r0, [pc, #168]	; 11dcc <error@@Base+0xd1c>
   11d20:	mov	r1, #8
   11d24:	add	r0, pc, r0
   11d28:	mov	r2, #1
   11d2c:	mov	r3, r4
   11d30:	bl	10834 <fwrite@plt>
   11d34:	ldr	r0, [pc, #156]	; 11dd8 <error@@Base+0xd28>
   11d38:	mov	r1, #3
   11d3c:	mov	r2, #1
   11d40:	mov	r3, r4
   11d44:	add	r0, pc, r0
   11d48:	bl	10834 <fwrite@plt>
   11d4c:	ldr	r0, [pc, #136]	; 11ddc <error@@Base+0xd2c>
   11d50:	mov	r1, #7
   11d54:	mov	r2, #1
   11d58:	mov	r3, r4
   11d5c:	add	r0, pc, r0
   11d60:	sub	sp, fp, #40	; 0x28
   11d64:	vpop	{d8}
   11d68:	add	sp, sp, #4
   11d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d70:	b	10834 <fwrite@plt>
   11d74:	nop	{0}
   11d78:	andeq	r0, r0, r0
   11d7c:	subsmi	r0, r9, r0
   11d80:	andeq	r0, r0, r4, ror #28
   11d84:	andeq	r0, r0, r8, ror lr
   11d88:	andeq	r0, r0, fp, ror lr
   11d8c:	andeq	r0, r0, r9, lsl lr
   11d90:	andeq	r0, r0, ip, lsl lr
   11d94:	andeq	r0, r0, r1, lsl #28
   11d98:	andeq	r0, r0, r7, ror #27
   11d9c:	andeq	r0, r0, sp, asr #27
   11da0:	andeq	r0, r0, r5, lsr sp
   11da4:	andeq	r0, r0, r2, ror #26
   11da8:	andeq	r0, r0, r4, lsl #27
   11dac:	andeq	r0, r0, pc, ror #26
   11db0:	andeq	r0, r0, r9, ror #25
   11db4:	andeq	r0, r0, sp, asr #24
   11db8:	andeq	r0, r0, sl, ror ip
   11dbc:	muleq	r0, ip, ip
   11dc0:	andeq	r0, r0, r7, lsl #25
   11dc4:	andeq	r0, r0, r4, asr #24
   11dc8:	andeq	r0, r0, r5, lsr #24
   11dcc:	andeq	r0, r0, r9, ror fp
   11dd0:			; <UNDEFINED> instruction: 0x00000bb6
   11dd4:	andeq	r0, r0, r8, asr #23
   11dd8:			; <UNDEFINED> instruction: 0x00000bb3
   11ddc:	andeq	r0, r0, r1, lsr fp
   11de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11de4:	add	fp, sp, #28
   11de8:	sub	sp, sp, #4
   11dec:	vpush	{d8}
   11df0:	mov	r5, r0
   11df4:	mov	r0, r1
   11df8:	mov	r6, r2
   11dfc:	mov	r8, r1
   11e00:	bl	122ec <error@@Base+0x123c>
   11e04:	movw	r0, #8052	; 0x1f74
   11e08:	ldr	r0, [r8, r0]!
   11e0c:	mov	r4, r8
   11e10:	ldr	r1, [r4, #-4]!
   11e14:	ldr	r2, [pc, #324]	; 11f60 <error@@Base+0xeb0>
   11e18:	add	r2, pc, r2
   11e1c:	bl	11f90 <error@@Base+0xee0>
   11e20:	ldr	r1, [pc, #316]	; 11f64 <error@@Base+0xeb4>
   11e24:	mov	r0, r5
   11e28:	mov	r2, r6
   11e2c:	add	r1, pc, r1
   11e30:	bl	10888 <fprintf@plt>
   11e34:	ldr	r0, [pc, #300]	; 11f68 <error@@Base+0xeb8>
   11e38:	mov	r1, #26
   11e3c:	mov	r2, #1
   11e40:	mov	r3, r5
   11e44:	add	r0, pc, r0
   11e48:	bl	10834 <fwrite@plt>
   11e4c:	ldr	r0, [pc, #280]	; 11f6c <error@@Base+0xebc>
   11e50:	mov	r1, #3
   11e54:	mov	r2, #1
   11e58:	mov	r3, r5
   11e5c:	add	r0, pc, r0
   11e60:	bl	10834 <fwrite@plt>
   11e64:	mov	r0, #10
   11e68:	mov	r1, r5
   11e6c:	bl	108ac <fputc@plt>
   11e70:	ldr	r0, [r8]
   11e74:	cmp	r0, #1
   11e78:	blt	11f4c <error@@Base+0xe9c>
   11e7c:	ldr	r7, [pc, #236]	; 11f70 <error@@Base+0xec0>
   11e80:	ldr	r6, [pc, #236]	; 11f74 <error@@Base+0xec4>
   11e84:	vldr	d8, [pc, #204]	; 11f58 <error@@Base+0xea8>
   11e88:	mov	sl, #0
   11e8c:	add	r7, pc, r7
   11e90:	add	r6, pc, r6
   11e94:	ldr	r0, [r4]
   11e98:	ldr	r9, [r0, sl, lsl #2]
   11e9c:	mov	r0, r5
   11ea0:	ldr	r2, [r9, #12]
   11ea4:	ldr	r3, [r9, #16]
   11ea8:	ldr	r1, [pc, #200]	; 11f78 <error@@Base+0xec8>
   11eac:	add	r1, pc, r1
   11eb0:	bl	10888 <fprintf@plt>
   11eb4:	ldr	r0, [r9, #12]
   11eb8:	cmp	r0, #0
   11ebc:	beq	11ef8 <error@@Base+0xe48>
   11ec0:	ldr	r1, [r9, #16]
   11ec4:	vmov	s2, r0
   11ec8:	sub	r1, r0, r1
   11ecc:	mov	r0, r5
   11ed0:	vmov	s0, r1
   11ed4:	vcvt.f64.s32	d16, s0
   11ed8:	vcvt.f64.s32	d17, s2
   11edc:	ldr	r1, [pc, #156]	; 11f80 <error@@Base+0xed0>
   11ee0:	vmul.f64	d16, d16, d8
   11ee4:	vdiv.f64	d16, d16, d17
   11ee8:	vmov	r2, r3, d16
   11eec:	add	r1, pc, r1
   11ef0:	bl	10888 <fprintf@plt>
   11ef4:	b	11f10 <error@@Base+0xe60>
   11ef8:	ldr	r0, [pc, #124]	; 11f7c <error@@Base+0xecc>
   11efc:	mov	r1, #8
   11f00:	mov	r2, #1
   11f04:	mov	r3, r5
   11f08:	add	r0, pc, r0
   11f0c:	bl	10834 <fwrite@plt>
   11f10:	mov	r0, r7
   11f14:	mov	r1, #3
   11f18:	mov	r2, #1
   11f1c:	mov	r3, r5
   11f20:	bl	10834 <fwrite@plt>
   11f24:	ldr	r0, [r4]
   11f28:	mov	r1, r6
   11f2c:	ldr	r0, [r0, sl, lsl #2]
   11f30:	ldr	r2, [r0, #8]
   11f34:	mov	r0, r5
   11f38:	bl	10888 <fprintf@plt>
   11f3c:	ldr	r0, [r8]
   11f40:	add	sl, sl, #1
   11f44:	cmp	sl, r0
   11f48:	blt	11e94 <error@@Base+0xde4>
   11f4c:	vpop	{d8}
   11f50:	add	sp, sp, #4
   11f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f58:	andeq	r0, r0, r0
   11f5c:	subsmi	r0, r9, r0
   11f60:	andeq	r0, r0, r4, ror #2
   11f64:	andeq	r0, r0, r0, lsl #21
   11f68:	muleq	r0, r8, sl
   11f6c:	muleq	r0, fp, sl
   11f70:	andeq	r0, r0, fp, ror #20
   11f74:	andeq	r0, r0, sp, lsl sl
   11f78:	andeq	r0, r0, r5, lsr #20
   11f7c:	muleq	r0, r5, r9
   11f80:			; <UNDEFINED> instruction: 0x000009ba
   11f84:	ldr	r1, [r1, #8]
   11f88:	ldr	r0, [r0, #8]
   11f8c:	b	10c14 <abort@plt+0x344>
   11f90:	cmp	r0, #2
   11f94:	bxlt	lr
   11f98:	ldr	r3, [pc, #28]	; 11fbc <error@@Base+0xf0c>
   11f9c:	add	r3, pc, r3
   11fa0:	str	r2, [r3]
   11fa4:	ldr	r2, [pc, #20]	; 11fc0 <error@@Base+0xf10>
   11fa8:	add	r2, pc, r2
   11fac:	str	r1, [r2]
   11fb0:	sub	r1, r0, #1
   11fb4:	mov	r0, #0
   11fb8:	b	11fc4 <error@@Base+0xf14>
   11fbc:	andeq	r1, r1, r0, ror r1
   11fc0:	andeq	r1, r1, r0, ror #2
   11fc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11fc8:	add	fp, sp, #24
   11fcc:	mov	r8, r1
   11fd0:	mov	r5, r0
   11fd4:	b	11ff8 <error@@Base+0xf48>
   11fd8:	sub	r1, r4, #1
   11fdc:	str	r6, [r0, r4, lsl #2]
   11fe0:	cmp	r1, r5
   11fe4:	movgt	r0, r5
   11fe8:	blgt	11fc4 <error@@Base+0xf14>
   11fec:	add	r5, r7, #1
   11ff0:	cmp	r5, r8
   11ff4:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ff8:	ldr	r0, [pc, #220]	; 120dc <error@@Base+0x102c>
   11ffc:	cmp	r5, r8
   12000:	mov	r4, r8
   12004:	mov	r7, r5
   12008:	ldr	r0, [pc, r0]
   1200c:	ldr	r6, [r0, r5, lsl #2]
   12010:	bge	11fd8 <error@@Base+0xf28>
   12014:	mov	r7, r5
   12018:	mov	r4, r8
   1201c:	cmp	r7, r4
   12020:	blt	12034 <error@@Base+0xf84>
   12024:	b	12058 <error@@Base+0xfa8>
   12028:	sub	r4, r4, #1
   1202c:	cmp	r7, r4
   12030:	bge	12058 <error@@Base+0xfa8>
   12034:	ldr	r0, [pc, #164]	; 120e0 <error@@Base+0x1030>
   12038:	ldr	r0, [pc, r0]
   1203c:	ldr	r1, [r0, r4, lsl #2]
   12040:	ldr	r2, [pc, #156]	; 120e4 <error@@Base+0x1034>
   12044:	mov	r0, r6
   12048:	ldr	r2, [pc, r2]
   1204c:	blx	r2
   12050:	cmn	r0, #1
   12054:	ble	12028 <error@@Base+0xf78>
   12058:	cmp	r7, r4
   1205c:	beq	12074 <error@@Base+0xfc4>
   12060:	ldr	r0, [pc, #128]	; 120e8 <error@@Base+0x1038>
   12064:	ldr	r0, [pc, r0]
   12068:	ldr	r1, [r0, r4, lsl #2]
   1206c:	str	r1, [r0, r7, lsl #2]
   12070:	add	r7, r7, #1
   12074:	cmp	r7, r4
   12078:	bge	120a0 <error@@Base+0xff0>
   1207c:	ldr	r0, [pc, #104]	; 120ec <error@@Base+0x103c>
   12080:	ldr	r0, [pc, r0]
   12084:	ldr	r1, [r0, r7, lsl #2]
   12088:	ldr	r2, [pc, #96]	; 120f0 <error@@Base+0x1040>
   1208c:	mov	r0, r6
   12090:	ldr	r2, [pc, r2]
   12094:	blx	r2
   12098:	cmp	r0, #1
   1209c:	bge	12070 <error@@Base+0xfc0>
   120a0:	cmp	r7, r4
   120a4:	bne	120b4 <error@@Base+0x1004>
   120a8:	cmp	r7, r4
   120ac:	blt	1202c <error@@Base+0xf7c>
   120b0:	b	120d0 <error@@Base+0x1020>
   120b4:	ldr	r0, [pc, #56]	; 120f4 <error@@Base+0x1044>
   120b8:	ldr	r0, [pc, r0]
   120bc:	ldr	r1, [r0, r7, lsl #2]
   120c0:	str	r1, [r0, r4, lsl #2]
   120c4:	sub	r4, r4, #1
   120c8:	cmp	r7, r4
   120cc:	blt	1202c <error@@Base+0xf7c>
   120d0:	ldr	r0, [pc, #32]	; 120f8 <error@@Base+0x1048>
   120d4:	ldr	r0, [pc, r0]
   120d8:	b	11fd8 <error@@Base+0xf28>
   120dc:	andeq	r1, r1, r0, lsl #2
   120e0:	ldrdeq	r1, [r1], -r0
   120e4:	andeq	r1, r1, r4, asr #1
   120e8:	andeq	r1, r1, r4, lsr #1
   120ec:	andeq	r1, r1, r8, lsl #1
   120f0:	andeq	r1, r1, ip, ror r0
   120f4:	andeq	r1, r1, r0, asr r0
   120f8:	andeq	r1, r1, r4, lsr r0
   120fc:	push	{r4, r5, r6, sl, fp, lr}
   12100:	add	fp, sp, #16
   12104:	mov	r4, r0
   12108:	movw	r6, #503	; 0x1f7
   1210c:	mov	r5, r0
   12110:	mov	r0, r5
   12114:	bl	123c8 <error@@Base+0x1318>
   12118:	subs	r6, r6, #1
   1211c:	add	r5, r5, #16
   12120:	bne	12110 <error@@Base+0x1060>
   12124:	movw	r0, #8052	; 0x1f74
   12128:	mov	r1, #0
   1212c:	str	r1, [r4, r0]
   12130:	movw	r0, #8048	; 0x1f70
   12134:	str	r1, [r4, r0]
   12138:	pop	{r4, r5, r6, sl, fp, pc}
   1213c:	push	{r4, r5, r6, sl, fp, lr}
   12140:	add	fp, sp, #16
   12144:	mov	r5, r1
   12148:	ldrb	r1, [r1]
   1214c:	mov	r4, #0
   12150:	mov	r2, #0
   12154:	cmp	r1, #0
   12158:	beq	1218c <error@@Base+0x10dc>
   1215c:	add	r3, r5, #1
   12160:	mov	r2, #0
   12164:	uxtab	r2, r2, r1
   12168:	ldrb	r1, [r3], #1
   1216c:	cmp	r1, #0
   12170:	bne	12164 <error@@Base+0x10b4>
   12174:	movw	r1, #20065	; 0x4e61
   12178:	movt	r1, #33354	; 0x824a
   1217c:	umull	r1, r3, r2, r1
   12180:	lsr	r1, r3, #8
   12184:	movw	r3, #503	; 0x1f7
   12188:	mls	r2, r1, r3, r2
   1218c:	ldr	r6, [r0, r2, lsl #4]
   12190:	cmp	r6, #0
   12194:	bne	121ac <error@@Base+0x10fc>
   12198:	mov	r0, r4
   1219c:	pop	{r4, r5, r6, sl, fp, pc}
   121a0:	ldr	r6, [r6, #4]
   121a4:	cmp	r6, #0
   121a8:	beq	12198 <error@@Base+0x10e8>
   121ac:	ldr	r1, [r6, #8]
   121b0:	mov	r0, r5
   121b4:	bl	107d4 <strcmp@plt>
   121b8:	cmp	r0, #0
   121bc:	bne	121a0 <error@@Base+0x10f0>
   121c0:	mov	r4, r6
   121c4:	mov	r0, r4
   121c8:	pop	{r4, r5, r6, sl, fp, pc}
   121cc:	push	{r4, r5, fp, lr}
   121d0:	add	fp, sp, #8
   121d4:	mov	r4, r0
   121d8:	ldr	r0, [r1, #8]
   121dc:	ldrb	r2, [r0]
   121e0:	cmp	r2, #0
   121e4:	beq	1221c <error@@Base+0x116c>
   121e8:	add	r3, r0, #1
   121ec:	mov	r0, #0
   121f0:	uxtab	r0, r0, r2
   121f4:	ldrb	r2, [r3], #1
   121f8:	cmp	r2, #0
   121fc:	bne	121f0 <error@@Base+0x1140>
   12200:	movw	r2, #20065	; 0x4e61
   12204:	movt	r2, #33354	; 0x824a
   12208:	umull	r2, r3, r0, r2
   1220c:	lsr	r2, r3, #8
   12210:	movw	r3, #503	; 0x1f7
   12214:	mls	r0, r2, r3, r0
   12218:	b	12220 <error@@Base+0x1170>
   1221c:	mov	r0, #0
   12220:	add	r0, r4, r0, lsl #4
   12224:	bl	123d4 <error@@Base+0x1324>
   12228:	movw	r0, #8048	; 0x1f70
   1222c:	mov	r5, r4
   12230:	ldr	r0, [r5, r0]!
   12234:	cmp	r0, #0
   12238:	beq	12248 <error@@Base+0x1198>
   1223c:	bl	107f8 <free@plt>
   12240:	mov	r0, #0
   12244:	str	r0, [r5]
   12248:	movw	r0, #8052	; 0x1f74
   1224c:	ldr	r0, [r4, r0]!
   12250:	add	r0, r0, #1
   12254:	str	r0, [r4]
   12258:	pop	{r4, r5, fp, pc}
   1225c:	push	{r4, r5, fp, lr}
   12260:	add	fp, sp, #8
   12264:	mov	r4, r0
   12268:	ldr	r0, [r1, #8]
   1226c:	ldrb	r2, [r0]
   12270:	cmp	r2, #0
   12274:	beq	122ac <error@@Base+0x11fc>
   12278:	add	r3, r0, #1
   1227c:	mov	r0, #0
   12280:	uxtab	r0, r0, r2
   12284:	ldrb	r2, [r3], #1
   12288:	cmp	r2, #0
   1228c:	bne	12280 <error@@Base+0x11d0>
   12290:	movw	r2, #20065	; 0x4e61
   12294:	movt	r2, #33354	; 0x824a
   12298:	umull	r2, r3, r0, r2
   1229c:	lsr	r2, r3, #8
   122a0:	movw	r3, #503	; 0x1f7
   122a4:	mls	r0, r2, r3, r0
   122a8:	b	122b0 <error@@Base+0x1200>
   122ac:	mov	r0, #0
   122b0:	add	r0, r4, r0, lsl #4
   122b4:	bl	1251c <error@@Base+0x146c>
   122b8:	movw	r0, #8048	; 0x1f70
   122bc:	mov	r5, r4
   122c0:	ldr	r0, [r5, r0]!
   122c4:	cmp	r0, #0
   122c8:	beq	122d8 <error@@Base+0x1228>
   122cc:	bl	107f8 <free@plt>
   122d0:	mov	r0, #0
   122d4:	str	r0, [r5]
   122d8:	movw	r0, #8052	; 0x1f74
   122dc:	ldr	r0, [r4, r0]!
   122e0:	sub	r0, r0, #1
   122e4:	str	r0, [r4]
   122e8:	pop	{r4, r5, fp, pc}
   122ec:	push	{r4, r5, fp, lr}
   122f0:	add	fp, sp, #8
   122f4:	mov	r4, r0
   122f8:	movw	r0, #8048	; 0x1f70
   122fc:	mov	r5, r4
   12300:	ldr	r0, [r5, r0]!
   12304:	cmp	r0, #0
   12308:	bne	12364 <error@@Base+0x12b4>
   1230c:	movw	r0, #8052	; 0x1f74
   12310:	ldr	r0, [r4, r0]
   12314:	cmp	r0, #0
   12318:	popeq	{r4, r5, fp, pc}
   1231c:	mov	r1, #4
   12320:	bl	10bf0 <abort@plt+0x320>
   12324:	str	r0, [r5]
   12328:	mov	r0, #0
   1232c:	movw	ip, #503	; 0x1f7
   12330:	mov	r2, #0
   12334:	ldr	r3, [r4, r2, lsl #4]
   12338:	cmp	r3, #0
   1233c:	beq	12358 <error@@Base+0x12a8>
   12340:	ldr	r1, [r5]
   12344:	str	r3, [r1, r0, lsl #2]
   12348:	add	r0, r0, #1
   1234c:	ldr	r3, [r3, #4]
   12350:	cmp	r3, #0
   12354:	bne	12340 <error@@Base+0x1290>
   12358:	add	r2, r2, #1
   1235c:	cmp	r2, ip
   12360:	bne	12334 <error@@Base+0x1284>
   12364:	pop	{r4, r5, fp, pc}
   12368:	push	{r4, r5, r6, r7, fp, lr}
   1236c:	add	fp, sp, #16
   12370:	mov	r5, r1
   12374:	mov	r4, r0
   12378:	movw	r7, #503	; 0x1f7
   1237c:	mov	r6, r0
   12380:	mov	r0, r6
   12384:	mov	r1, r5
   12388:	bl	125e8 <error@@Base+0x1538>
   1238c:	subs	r7, r7, #1
   12390:	add	r6, r6, #16
   12394:	bne	12380 <error@@Base+0x12d0>
   12398:	movw	r0, #8048	; 0x1f70
   1239c:	mov	r5, r4
   123a0:	ldr	r0, [r5, r0]!
   123a4:	cmp	r0, #0
   123a8:	beq	123b8 <error@@Base+0x1308>
   123ac:	bl	107f8 <free@plt>
   123b0:	mov	r0, #0
   123b4:	str	r0, [r5]
   123b8:	movw	r0, #8052	; 0x1f74
   123bc:	mov	r1, #0
   123c0:	str	r1, [r4, r0]
   123c4:	pop	{r4, r5, r6, r7, fp, pc}
   123c8:	vmov.i32	q8, #0	; 0x00000000
   123cc:	vst1.32	{d16-d17}, [r0]
   123d0:	bx	lr
   123d4:	push	{r4, r5, fp, lr}
   123d8:	add	fp, sp, #8
   123dc:	mov	r4, r0
   123e0:	ldr	r0, [r0]
   123e4:	mov	r5, #0
   123e8:	str	r5, [r1]
   123ec:	cmp	r0, #0
   123f0:	str	r0, [r1, #4]
   123f4:	str	r1, [r4]
   123f8:	addeq	r0, r4, #4
   123fc:	str	r1, [r0]
   12400:	ldr	r0, [r4, #8]
   12404:	cmp	r0, #0
   12408:	beq	12414 <error@@Base+0x1364>
   1240c:	bl	107f8 <free@plt>
   12410:	str	r5, [r4, #8]
   12414:	ldr	r0, [r4, #12]
   12418:	add	r0, r0, #1
   1241c:	str	r0, [r4, #12]
   12420:	pop	{r4, r5, fp, pc}
   12424:	push	{r4, r5, fp, lr}
   12428:	add	fp, sp, #8
   1242c:	mov	r4, r0
   12430:	ldr	r0, [r0, #4]
   12434:	mov	r5, #0
   12438:	mov	r2, r4
   1243c:	cmp	r0, #0
   12440:	stm	r1, {r0, r5}
   12444:	addne	r2, r0, #4
   12448:	str	r1, [r2]
   1244c:	str	r1, [r4, #4]
   12450:	ldr	r0, [r4, #8]
   12454:	cmp	r0, #0
   12458:	beq	12464 <error@@Base+0x13b4>
   1245c:	bl	107f8 <free@plt>
   12460:	str	r5, [r4, #8]
   12464:	ldr	r0, [r4, #12]
   12468:	add	r0, r0, #1
   1246c:	str	r0, [r4, #12]
   12470:	pop	{r4, r5, fp, pc}
   12474:	push	{r4, sl, fp, lr}
   12478:	add	fp, sp, #8
   1247c:	mov	r4, r0
   12480:	ldr	r0, [r2]
   12484:	mov	r3, r4
   12488:	cmp	r0, #0
   1248c:	stm	r1, {r0, r2}
   12490:	addne	r3, r0, #4
   12494:	str	r1, [r3]
   12498:	str	r1, [r2]
   1249c:	ldr	r0, [r4, #8]
   124a0:	cmp	r0, #0
   124a4:	beq	124b4 <error@@Base+0x1404>
   124a8:	bl	107f8 <free@plt>
   124ac:	mov	r0, #0
   124b0:	str	r0, [r4, #8]
   124b4:	ldr	r0, [r4, #12]
   124b8:	add	r0, r0, #1
   124bc:	str	r0, [r4, #12]
   124c0:	pop	{r4, sl, fp, pc}
   124c4:	push	{r4, sl, fp, lr}
   124c8:	add	fp, sp, #8
   124cc:	mov	r4, r0
   124d0:	mov	r0, r1
   124d4:	cmp	r1, #0
   124d8:	ldr	r3, [r0, #4]!
   124dc:	moveq	r0, r4
   124e0:	cmp	r3, #0
   124e4:	stm	r2, {r1, r3}
   124e8:	addeq	r3, r4, #4
   124ec:	str	r2, [r0]
   124f0:	str	r2, [r3]
   124f4:	ldr	r0, [r4, #8]
   124f8:	cmp	r0, #0
   124fc:	beq	1250c <error@@Base+0x145c>
   12500:	bl	107f8 <free@plt>
   12504:	mov	r0, #0
   12508:	str	r0, [r4, #8]
   1250c:	ldr	r0, [r4, #12]
   12510:	add	r0, r0, #1
   12514:	str	r0, [r4, #12]
   12518:	pop	{r4, sl, fp, pc}
   1251c:	push	{r4, r5, fp, lr}
   12520:	add	fp, sp, #8
   12524:	mov	r4, r0
   12528:	ldm	r1, {r0, r2}
   1252c:	mov	r5, #0
   12530:	cmp	r0, #0
   12534:	streq	r2, [r4]
   12538:	strne	r2, [r0, #4]
   1253c:	ldrne	r2, [r1, #4]
   12540:	cmp	r2, #0
   12544:	addeq	r2, r4, #4
   12548:	str	r0, [r2]
   1254c:	str	r5, [r1]
   12550:	str	r5, [r1, #4]
   12554:	ldr	r0, [r4, #8]
   12558:	cmp	r0, #0
   1255c:	beq	12568 <error@@Base+0x14b8>
   12560:	bl	107f8 <free@plt>
   12564:	str	r5, [r4, #8]
   12568:	ldr	r0, [r4, #12]
   1256c:	sub	r0, r0, #1
   12570:	str	r0, [r4, #12]
   12574:	pop	{r4, r5, fp, pc}
   12578:	push	{r4, sl, fp, lr}
   1257c:	add	fp, sp, #8
   12580:	mov	r4, r0
   12584:	ldr	r0, [r0, #8]
   12588:	cmp	r0, #0
   1258c:	beq	12594 <error@@Base+0x14e4>
   12590:	pop	{r4, sl, fp, pc}
   12594:	ldr	r0, [r4, #12]
   12598:	cmp	r0, #0
   1259c:	beq	12590 <error@@Base+0x14e0>
   125a0:	mov	r1, #4
   125a4:	bl	10bf0 <abort@plt+0x320>
   125a8:	str	r0, [r4, #8]
   125ac:	ldr	r1, [r4]
   125b0:	cmp	r1, #0
   125b4:	beq	12590 <error@@Base+0x14e0>
   125b8:	str	r1, [r0]
   125bc:	ldr	r0, [r1, #4]
   125c0:	cmp	r0, #0
   125c4:	popeq	{r4, sl, fp, pc}
   125c8:	mov	r1, #4
   125cc:	ldr	r2, [r4, #8]
   125d0:	str	r0, [r2, r1]
   125d4:	add	r1, r1, #4
   125d8:	ldr	r0, [r0, #4]
   125dc:	cmp	r0, #0
   125e0:	bne	125cc <error@@Base+0x151c>
   125e4:	b	12590 <error@@Base+0x14e0>
   125e8:	push	{r4, r5, r6, r7, fp, lr}
   125ec:	add	fp, sp, #16
   125f0:	ldr	r6, [r0]
   125f4:	cmp	r6, #0
   125f8:	popeq	{r4, r5, r6, r7, fp, pc}
   125fc:	mov	r4, r1
   12600:	mov	r5, r0
   12604:	mov	r7, #0
   12608:	ldm	r6, {r0, r1}
   1260c:	cmp	r0, #0
   12610:	streq	r1, [r5]
   12614:	strne	r1, [r0, #4]
   12618:	ldrne	r1, [r6, #4]
   1261c:	cmp	r1, #0
   12620:	addeq	r1, r5, #4
   12624:	str	r0, [r1]
   12628:	str	r7, [r6]
   1262c:	str	r7, [r6, #4]
   12630:	ldr	r0, [r5, #8]
   12634:	cmp	r0, #0
   12638:	beq	12644 <error@@Base+0x1594>
   1263c:	bl	107f8 <free@plt>
   12640:	str	r7, [r5, #8]
   12644:	ldr	r0, [r5, #12]
   12648:	sub	r0, r0, #1
   1264c:	str	r0, [r5, #12]
   12650:	mov	r0, r6
   12654:	blx	r4
   12658:	ldr	r6, [r5]
   1265c:	cmp	r6, #0
   12660:	bne	12608 <error@@Base+0x1558>
   12664:	pop	{r4, r5, r6, r7, fp, pc}
   12668:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1266c:	mov	r7, r0
   12670:	ldr	r6, [pc, #72]	; 126c0 <error@@Base+0x1610>
   12674:	ldr	r5, [pc, #72]	; 126c4 <error@@Base+0x1614>
   12678:	add	r6, pc, r6
   1267c:	add	r5, pc, r5
   12680:	sub	r6, r6, r5
   12684:	mov	r8, r1
   12688:	mov	r9, r2
   1268c:	bl	107a8 <calloc@plt-0x20>
   12690:	asrs	r6, r6, #2
   12694:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12698:	mov	r4, #0
   1269c:	add	r4, r4, #1
   126a0:	ldr	r3, [r5], #4
   126a4:	mov	r2, r9
   126a8:	mov	r1, r8
   126ac:	mov	r0, r7
   126b0:	blx	r3
   126b4:	cmp	r6, r4
   126b8:	bne	1269c <error@@Base+0x15ec>
   126bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126c0:	andeq	r0, r1, ip, ror r8
   126c4:	andeq	r0, r1, r4, ror r8
   126c8:	bx	lr

Disassembly of section .fini:

000126cc <.fini>:
   126cc:	push	{r3, lr}
   126d0:	pop	{r3, pc}
