
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

000106fc <.init>:
   106fc:	push	{r3, lr}
   10700:	bl	108c0 <abort@plt+0x9c>
   10704:	pop	{r3, pc}

Disassembly of section .plt:

00010708 <calloc@plt-0x14>:
   10708:	push	{lr}		; (str lr, [sp, #-4]!)
   1070c:	ldr	lr, [pc, #4]	; 10718 <calloc@plt-0x4>
   10710:	add	lr, pc, lr
   10714:	ldr	pc, [lr, #8]!
   10718:	andeq	r1, r1, r8, ror #17

0001071c <calloc@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2280]!	; 0x8e8

00010728 <strcmp@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2272]!	; 0x8e0

00010734 <fopen@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2264]!	; 0x8d8

00010740 <free@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2256]!	; 0x8d0

0001074c <fgets@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2248]!	; 0x8c8

00010758 <strdup@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2240]!	; 0x8c0

00010764 <unlink@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2232]!	; 0x8b8

00010770 <__xstat@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2224]!	; 0x8b0

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2216]!	; 0x8a8

00010788 <__sysv_signal@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2208]!	; 0x8a0

00010794 <__gmon_start__@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2200]!	; 0x898

000107a0 <getpid@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2192]!	; 0x890

000107ac <exit@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2184]!	; 0x888

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2176]!	; 0x880

000107c4 <fprintf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2168]!	; 0x878

000107d0 <__isoc99_sscanf@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2160]!	; 0x870

000107dc <fclose@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2152]!	; 0x868

000107e8 <fputc@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2144]!	; 0x860

000107f4 <sprintf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2136]!	; 0x858

00010800 <atoi@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2128]!	; 0x850

0001080c <fputs@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #69632	; 0x11000
   10814:	ldr	pc, [ip, #2120]!	; 0x848

00010818 <strncmp@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #69632	; 0x11000
   10820:	ldr	pc, [ip, #2112]!	; 0x840

00010824 <abort@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #69632	; 0x11000
   1082c:	ldr	pc, [ip, #2104]!	; 0x838

Disassembly of section .text:

00010830 <error@@Base-0xdfc>:
   10830:	push	{r0, r1, r2, r4, r5, lr}
   10834:	mov	r3, #0
   10838:	mov	r5, r1
   1083c:	mov	r4, #0
   10840:	ldr	r2, [pc, #52]	; 1087c <abort@plt+0x58>
   10844:	str	r0, [sp, #4]
   10848:	add	r0, sp, #4
   1084c:	bl	1174c <error@@Base+0x120>
   10850:	ldr	r3, [sp, #4]
   10854:	cmp	r3, r4
   10858:	bgt	1086c <abort@plt+0x48>
   1085c:	mov	r1, #0
   10860:	ldr	r0, [pc, #24]	; 10880 <abort@plt+0x5c>
   10864:	bl	10a20 <abort@plt+0x1fc>
   10868:	bl	115d4 <abort@plt+0xdb0>
   1086c:	ldr	r0, [r5, r4, lsl #2]
   10870:	add	r4, r4, #1
   10874:	bl	10974 <abort@plt+0x150>
   10878:	b	10850 <abort@plt+0x2c>
   1087c:	andeq	r1, r1, r0, ror ip
   10880:	ldrdeq	r6, [r2], -r4
   10884:	mov	fp, #0
   10888:	mov	lr, #0
   1088c:	pop	{r1}		; (ldr r1, [sp], #4)
   10890:	mov	r2, sp
   10894:	push	{r2}		; (str r2, [sp, #-4]!)
   10898:	push	{r0}		; (str r0, [sp, #-4]!)
   1089c:	ldr	ip, [pc, #16]	; 108b4 <abort@plt+0x90>
   108a0:	push	{ip}		; (str ip, [sp, #-4]!)
   108a4:	ldr	r0, [pc, #12]	; 108b8 <abort@plt+0x94>
   108a8:	ldr	r3, [pc, #12]	; 108bc <abort@plt+0x98>
   108ac:	bl	1077c <__libc_start_main@plt>
   108b0:	bl	10824 <abort@plt>
   108b4:	andeq	r1, r1, r0, asr ip
   108b8:	andeq	r0, r1, r0, lsr r8
   108bc:	strdeq	r1, [r1], -r0
   108c0:	ldr	r3, [pc, #20]	; 108dc <abort@plt+0xb8>
   108c4:	ldr	r2, [pc, #20]	; 108e0 <abort@plt+0xbc>
   108c8:	add	r3, pc, r3
   108cc:	ldr	r2, [r3, r2]
   108d0:	cmp	r2, #0
   108d4:	bxeq	lr
   108d8:	b	10794 <__gmon_start__@plt>
   108dc:	andeq	r1, r1, r0, lsr r7
   108e0:	andeq	r0, r0, r8, rrx
   108e4:	ldr	r0, [pc, #24]	; 10904 <abort@plt+0xe0>
   108e8:	ldr	r3, [pc, #24]	; 10908 <abort@plt+0xe4>
   108ec:	cmp	r3, r0
   108f0:	bxeq	lr
   108f4:	ldr	r3, [pc, #16]	; 1090c <abort@plt+0xe8>
   108f8:	cmp	r3, #0
   108fc:	bxeq	lr
   10900:	bx	r3
   10904:	andeq	r2, r2, ip, ror r0
   10908:	andeq	r2, r2, ip, ror r0
   1090c:	andeq	r0, r0, r0
   10910:	ldr	r0, [pc, #36]	; 1093c <abort@plt+0x118>
   10914:	ldr	r1, [pc, #36]	; 10940 <abort@plt+0x11c>
   10918:	sub	r1, r1, r0
   1091c:	asr	r1, r1, #2
   10920:	add	r1, r1, r1, lsr #31
   10924:	asrs	r1, r1, #1
   10928:	bxeq	lr
   1092c:	ldr	r3, [pc, #16]	; 10944 <abort@plt+0x120>
   10930:	cmp	r3, #0
   10934:	bxeq	lr
   10938:	bx	r3
   1093c:	andeq	r2, r2, ip, ror r0
   10940:	andeq	r2, r2, ip, ror r0
   10944:	andeq	r0, r0, r0
   10948:	push	{r4, lr}
   1094c:	ldr	r4, [pc, #24]	; 1096c <abort@plt+0x148>
   10950:	ldrb	r3, [r4]
   10954:	cmp	r3, #0
   10958:	popne	{r4, pc}
   1095c:	bl	108e4 <abort@plt+0xc0>
   10960:	mov	r3, #1
   10964:	strb	r3, [r4]
   10968:	pop	{r4, pc}
   1096c:	muleq	r2, r0, r0
   10970:	b	10910 <abort@plt+0xec>
   10974:	push	{r4, r5, r6, lr}
   10978:	mov	r1, r0
   1097c:	ldr	r4, [pc, #32]	; 109a4 <abort@plt+0x180>
   10980:	mov	r0, r4
   10984:	ldm	r4, {r5, r6}
   10988:	bl	10f5c <abort@plt+0x738>
   1098c:	ldm	r4, {r1, r2}
   10990:	ldr	r0, [pc, #16]	; 109a8 <abort@plt+0x184>
   10994:	sub	r2, r2, r6
   10998:	sub	r1, r1, r5
   1099c:	pop	{r4, r5, r6, lr}
   109a0:	b	109b0 <abort@plt+0x18c>
   109a4:	andeq	r2, r2, r4, lsl #2
   109a8:	ldrdeq	r6, [r2], -r4
   109ac:	andeq	r0, r0, r0
   109b0:	cmp	r1, #0
   109b4:	bxeq	lr
   109b8:	sub	r3, r1, r2
   109bc:	mov	r2, #0
   109c0:	vldr	d6, [pc, #80]	; 10a18 <abort@plt+0x1f4>
   109c4:	vmov	s14, r3
   109c8:	vcvt.f64.s32	d7, s14
   109cc:	vmul.f64	d7, d7, d6
   109d0:	vmov	s13, r1
   109d4:	vcvt.f64.s32	d5, s13
   109d8:	vdiv.f64	d6, d7, d5
   109dc:	sxth	r3, r2
   109e0:	add	r2, r2, #1
   109e4:	vmov	s15, r3
   109e8:	vcvt.f64.s32	d7, s15
   109ec:	vcmpe.f64	d7, d6
   109f0:	vmrs	APSR_nzcv, fpscr
   109f4:	bls	10a08 <abort@plt+0x1e4>
   109f8:	ldr	r3, [r0, #404]	; 0x194
   109fc:	add	r1, r3, r1
   10a00:	str	r1, [r0, #404]	; 0x194
   10a04:	bx	lr
   10a08:	ldr	ip, [r0, r3, lsl #2]
   10a0c:	add	ip, ip, r1
   10a10:	str	ip, [r0, r3, lsl #2]
   10a14:	b	109dc <abort@plt+0x1b8>
   10a18:	andeq	r0, r0, r0
   10a1c:	subsmi	r0, r9, r0
   10a20:	ldr	r3, [r0, #404]	; 0x194
   10a24:	cmp	r3, #0
   10a28:	bxeq	lr
   10a2c:	push	{r4, r5, r6, r7, lr}
   10a30:	mov	r5, r0
   10a34:	mov	r0, r1
   10a38:	mov	r4, #0
   10a3c:	vpush	{d8}
   10a40:	sub	sp, sp, #12
   10a44:	vldr	d8, [pc, #92]	; 10aa8 <abort@plt+0x284>
   10a48:	ldr	r7, [pc, #96]	; 10ab0 <abort@plt+0x28c>
   10a4c:	ldr	r1, [pc, #96]	; 10ab4 <abort@plt+0x290>
   10a50:	bl	116f0 <error@@Base+0xc4>
   10a54:	mov	r6, r0
   10a58:	ldr	r3, [r5, r4, lsl #2]
   10a5c:	mov	r2, r4
   10a60:	mov	r1, r7
   10a64:	mov	r0, r6
   10a68:	add	r4, r4, #1
   10a6c:	vldr	s13, [r5, #404]	; 0x194
   10a70:	vmov	s15, r3
   10a74:	vcvt.f64.s32	d6, s13
   10a78:	vcvt.f64.s32	d7, s15
   10a7c:	vmul.f64	d7, d7, d8
   10a80:	vdiv.f64	d5, d7, d6
   10a84:	vstr	d5, [sp]
   10a88:	bl	107c4 <fprintf@plt>
   10a8c:	cmp	r4, #101	; 0x65
   10a90:	bne	10a58 <abort@plt+0x234>
   10a94:	mov	r0, r6
   10a98:	add	sp, sp, #12
   10a9c:	vpop	{d8}
   10aa0:	pop	{r4, r5, r6, r7, lr}
   10aa4:	b	11514 <abort@plt+0xcf0>
   10aa8:	andeq	r0, r0, r0
   10aac:	subsmi	r0, r9, r0
   10ab0:	muleq	r1, lr, ip
   10ab4:	muleq	r1, ip, ip
   10ab8:	mov	r2, r0
   10abc:	push	{r4, lr}
   10ac0:	mov	r1, #99	; 0x63
   10ac4:	ldr	r0, [pc, #12]	; 10ad8 <abort@plt+0x2b4>
   10ac8:	bl	1074c <fgets@plt>
   10acc:	adds	r0, r0, #0
   10ad0:	movne	r0, #1
   10ad4:	pop	{r4, pc}
   10ad8:	muleq	r2, r1, r0
   10adc:	push	{r4, lr}
   10ae0:	mov	r4, r1
   10ae4:	bl	10ab8 <abort@plt+0x294>
   10ae8:	cmp	r0, #0
   10aec:	popeq	{r4, pc}
   10af0:	mov	r2, r4
   10af4:	ldr	r1, [pc, #20]	; 10b10 <abort@plt+0x2ec>
   10af8:	ldr	r0, [pc, #20]	; 10b14 <abort@plt+0x2f0>
   10afc:	bl	107d0 <__isoc99_sscanf@plt>
   10b00:	sub	r0, r0, #1
   10b04:	clz	r0, r0
   10b08:	lsr	r0, r0, #5
   10b0c:	pop	{r4, pc}
   10b10:	andeq	r1, r1, r3, lsl sp
   10b14:	muleq	r2, r1, r0
   10b18:	ldr	r2, [r1]
   10b1c:	cmp	r2, #0
   10b20:	bne	10b30 <abort@plt+0x30c>
   10b24:	mov	r1, r0
   10b28:	ldr	r0, [pc, #56]	; 10b68 <abort@plt+0x344>
   10b2c:	b	1080c <fputs@plt>
   10b30:	ldr	r3, [r1, #4]
   10b34:	vldr	d6, [pc, #36]	; 10b60 <abort@plt+0x33c>
   10b38:	ldr	r1, [pc, #44]	; 10b6c <abort@plt+0x348>
   10b3c:	sub	r3, r2, r3
   10b40:	vmov	s14, r3
   10b44:	vcvt.f64.s32	d7, s14
   10b48:	vmul.f64	d7, d7, d6
   10b4c:	vmov	s13, r2
   10b50:	vcvt.f64.s32	d6, s13
   10b54:	vdiv.f64	d7, d7, d6
   10b58:	vmov	r2, r3, d7
   10b5c:	b	107c4 <fprintf@plt>
   10b60:	andeq	r0, r0, r0
   10b64:	subsmi	r0, r9, r0
   10b68:	andeq	r1, r1, r9, lsr #25
   10b6c:			; <UNDEFINED> instruction: 0x00011cb2
   10b70:	push	{r4, r5, r6, lr}
   10b74:	subs	r5, r1, #0
   10b78:	mov	r4, r0
   10b7c:	beq	10ba8 <abort@plt+0x384>
   10b80:	ldr	r1, [pc, #48]	; 10bb8 <abort@plt+0x394>
   10b84:	ldrd	r2, [r5]
   10b88:	bl	107c4 <fprintf@plt>
   10b8c:	mov	r1, r5
   10b90:	mov	r0, r4
   10b94:	bl	10b18 <abort@plt+0x2f4>
   10b98:	mov	r1, r4
   10b9c:	ldr	r0, [pc, #24]	; 10bbc <abort@plt+0x398>
   10ba0:	pop	{r4, r5, r6, lr}
   10ba4:	b	1080c <fputs@plt>
   10ba8:	mov	r1, r0
   10bac:	ldr	r0, [pc, #12]	; 10bc0 <abort@plt+0x39c>
   10bb0:	bl	1080c <fputs@plt>
   10bb4:	b	10b98 <abort@plt+0x374>
   10bb8:			; <UNDEFINED> instruction: 0x00011cb8
   10bbc:	ldrdeq	r1, [r1], -lr
   10bc0:	andeq	r1, r1, r3, asr #25
   10bc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bc8:	mov	r4, r0
   10bcc:	mov	r6, r1
   10bd0:	mov	r7, r2
   10bd4:	mov	r2, r3
   10bd8:	mov	r5, #1
   10bdc:	ldr	r1, [pc, #196]	; 10ca8 <abort@plt+0x484>
   10be0:	ldrb	r8, [sp, #32]
   10be4:	ldrb	r9, [sp, #36]	; 0x24
   10be8:	bl	107c4 <fprintf@plt>
   10bec:	mov	r1, #0
   10bf0:	mov	r0, r4
   10bf4:	ldr	sl, [pc, #176]	; 10cac <abort@plt+0x488>
   10bf8:	bl	10b70 <abort@plt+0x34c>
   10bfc:	ldr	r3, [pc, #172]	; 10cb0 <abort@plt+0x48c>
   10c00:	cmp	r8, #0
   10c04:	mov	r0, r4
   10c08:	ldr	r2, [pc, #164]	; 10cb4 <abort@plt+0x490>
   10c0c:	ldr	r1, [pc, #164]	; 10cb8 <abort@plt+0x494>
   10c10:	moveq	r2, r3
   10c14:	bl	107c4 <fprintf@plt>
   10c18:	ldr	r3, [r6, r5, lsl #3]
   10c1c:	add	r1, r6, r5, lsl #3
   10c20:	cmp	r3, #0
   10c24:	ble	10c40 <abort@plt+0x41c>
   10c28:	mov	r0, r4
   10c2c:	bl	10b70 <abort@plt+0x34c>
   10c30:	mov	r2, r5
   10c34:	mov	r1, sl
   10c38:	mov	r0, r4
   10c3c:	bl	107c4 <fprintf@plt>
   10c40:	add	r5, r5, #1
   10c44:	sxth	r3, r5
   10c48:	cmp	r7, r3
   10c4c:	bge	10c18 <abort@plt+0x3f4>
   10c50:	cmp	r8, #0
   10c54:	beq	10c84 <abort@plt+0x460>
   10c58:	add	r3, r7, #1
   10c5c:	add	r1, r6, r3, lsl #3
   10c60:	ldr	r3, [r6, r3, lsl #3]
   10c64:	cmp	r3, #0
   10c68:	ble	10c84 <abort@plt+0x460>
   10c6c:	mov	r0, r4
   10c70:	bl	10b70 <abort@plt+0x34c>
   10c74:	mov	r2, r7
   10c78:	ldr	r1, [pc, #60]	; 10cbc <abort@plt+0x498>
   10c7c:	mov	r0, r4
   10c80:	bl	107c4 <fprintf@plt>
   10c84:	cmp	r9, #0
   10c88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c8c:	mov	r1, r6
   10c90:	mov	r0, r4
   10c94:	bl	10b70 <abort@plt+0x34c>
   10c98:	mov	r1, r4
   10c9c:	ldr	r0, [pc, #28]	; 10cc0 <abort@plt+0x49c>
   10ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ca4:	b	1080c <fputs@plt>
   10ca8:	strdeq	r1, [r1], -r0
   10cac:	strdeq	r1, [r1], -r5
   10cb0:	andeq	r1, r1, r9, ror #25
   10cb4:	andeq	r1, r1, r2, ror #25
   10cb8:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10cbc:	strdeq	r1, [r1], -lr
   10cc0:	andeq	r1, r1, r7, lsl #26
   10cc4:	push	{r4, r5, r6, r7, r8, lr}
   10cc8:	mov	r4, r1
   10ccc:	mov	r6, r0
   10cd0:	add	r4, r4, #4096	; 0x1000
   10cd4:	mov	r0, r1
   10cd8:	mov	r5, r2
   10cdc:	ldr	r7, [pc, #124]	; 10d60 <abort@plt+0x53c>
   10ce0:	bl	11360 <abort@plt+0xb3c>
   10ce4:	ldr	r2, [pc, #120]	; 10d64 <abort@plt+0x540>
   10ce8:	ldr	r1, [r4, #3952]	; 0xf70
   10cec:	ldr	r0, [r4, #3956]	; 0xf74
   10cf0:	bl	11bd0 <error@@Base+0x5a4>
   10cf4:	mov	r2, r5
   10cf8:	ldr	r1, [pc, #104]	; 10d68 <abort@plt+0x544>
   10cfc:	mov	r0, r6
   10d00:	bl	107c4 <fprintf@plt>
   10d04:	mov	r1, #0
   10d08:	mov	r0, r6
   10d0c:	bl	10b70 <abort@plt+0x34c>
   10d10:	mov	r5, #0
   10d14:	mov	r1, r6
   10d18:	mov	r0, #10
   10d1c:	bl	107e8 <fputc@plt>
   10d20:	ldr	r3, [r4, #3956]	; 0xf74
   10d24:	cmp	r3, r5
   10d28:	pople	{r4, r5, r6, r7, r8, pc}
   10d2c:	mov	r0, r6
   10d30:	ldr	r3, [r4, #3952]	; 0xf70
   10d34:	ldr	r1, [r3, r5, lsl #2]
   10d38:	add	r1, r1, #12
   10d3c:	bl	10b70 <abort@plt+0x34c>
   10d40:	ldr	r3, [r4, #3952]	; 0xf70
   10d44:	mov	r1, r7
   10d48:	mov	r0, r6
   10d4c:	ldr	r3, [r3, r5, lsl #2]
   10d50:	add	r5, r5, #1
   10d54:	ldr	r2, [r3, #8]
   10d58:	bl	107c4 <fprintf@plt>
   10d5c:	b	10d20 <abort@plt+0x4fc>
   10d60:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10d64:	andeq	r0, r1, ip, ror #26
   10d68:	strdeq	r1, [r1], -r0
   10d6c:	ldr	r0, [r0, #8]
   10d70:	ldr	r1, [r1, #8]
   10d74:	b	114d8 <abort@plt+0xcb4>
   10d78:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   10d7c:	mov	r7, r0
   10d80:	mov	r5, r1
   10d84:	bl	10ab8 <abort@plt+0x294>
   10d88:	cmp	r0, #0
   10d8c:	bne	10da0 <abort@plt+0x57c>
   10d90:	mov	r4, #0
   10d94:	mov	r0, r4
   10d98:	add	sp, sp, #8
   10d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10da0:	mov	r0, r7
   10da4:	bl	10ab8 <abort@plt+0x294>
   10da8:	cmp	r0, #0
   10dac:	beq	10d90 <abort@plt+0x56c>
   10db0:	ldr	r6, [pc, #136]	; 10e40 <abort@plt+0x61c>
   10db4:	mov	r4, #0
   10db8:	ldr	r9, [pc, #132]	; 10e44 <abort@plt+0x620>
   10dbc:	add	r8, r6, #29
   10dc0:	b	10e10 <abort@plt+0x5ec>
   10dc4:	mov	r0, r8
   10dc8:	bl	10800 <atoi@plt>
   10dcc:	subs	r3, r0, #0
   10dd0:	ldr	sl, [sp]
   10dd4:	bne	10df0 <abort@plt+0x5cc>
   10dd8:	ldr	r1, [pc, #104]	; 10e48 <abort@plt+0x624>
   10ddc:	mov	r0, r8
   10de0:	bl	10728 <strcmp@plt>
   10de4:	subs	r3, r0, #0
   10de8:	moveq	r4, sl
   10dec:	movne	r3, #11
   10df0:	ldr	r2, [r5, r3, lsl #3]
   10df4:	add	r1, r5, r3, lsl #3
   10df8:	add	r2, r2, sl
   10dfc:	str	r2, [r5, r3, lsl #3]
   10e00:	ldr	r3, [r1, #4]
   10e04:	ldr	r2, [sp, #4]
   10e08:	add	r3, r3, r2
   10e0c:	str	r3, [r1, #4]
   10e10:	mov	r0, r7
   10e14:	bl	10ab8 <abort@plt+0x294>
   10e18:	cmp	r0, #0
   10e1c:	beq	10d94 <abort@plt+0x570>
   10e20:	add	r3, sp, #4
   10e24:	mov	r2, sp
   10e28:	mov	r1, r9
   10e2c:	mov	r0, r6
   10e30:	bl	107d0 <__isoc99_sscanf@plt>
   10e34:	cmp	r0, #2
   10e38:	beq	10dc4 <abort@plt+0x5a0>
   10e3c:	b	10d94 <abort@plt+0x570>
   10e40:	muleq	r2, r1, r0
   10e44:	andeq	r1, r1, pc, lsl #26
   10e48:	andeq	r1, r1, r7, lsl #26
   10e4c:	ldr	r3, [r0]
   10e50:	add	r1, r3, r1
   10e54:	ldr	r3, [r0, #4]
   10e58:	add	r2, r3, r2
   10e5c:	stm	r0, {r1, r2}
   10e60:	bx	lr
   10e64:	push	{r4, r5, r6, r7, r8, lr}
   10e68:	mov	r7, r0
   10e6c:	mov	r8, r1
   10e70:	mov	r6, r2
   10e74:	mov	r5, r3
   10e78:	bl	11294 <abort@plt+0xa70>
   10e7c:	subs	r4, r0, #0
   10e80:	bne	10eac <abort@plt+0x688>
   10e84:	mov	r1, #20
   10e88:	mov	r0, #1
   10e8c:	bl	11668 <error@@Base+0x3c>
   10e90:	mov	r4, r0
   10e94:	mov	r0, r8
   10e98:	bl	10758 <strdup@plt>
   10e9c:	mov	r1, r4
   10ea0:	str	r0, [r4, #8]
   10ea4:	mov	r0, r7
   10ea8:	bl	112d8 <abort@plt+0xab4>
   10eac:	ldrd	r2, [r4, #12]
   10eb0:	add	r2, r2, r6
   10eb4:	add	r3, r3, r5
   10eb8:	strd	r2, [r4, #12]
   10ebc:	pop	{r4, r5, r6, r7, r8, pc}
   10ec0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   10ec4:	mov	r5, r0
   10ec8:	mov	r7, r1
   10ecc:	bl	10ab8 <abort@plt+0x294>
   10ed0:	cmp	r0, #0
   10ed4:	beq	10f20 <abort@plt+0x6fc>
   10ed8:	mov	r0, r5
   10edc:	bl	10ab8 <abort@plt+0x294>
   10ee0:	cmp	r0, #0
   10ee4:	beq	10f20 <abort@plt+0x6fc>
   10ee8:	ldr	r4, [pc, #100]	; 10f54 <abort@plt+0x730>
   10eec:	ldr	r6, [pc, #100]	; 10f58 <abort@plt+0x734>
   10ef0:	add	r8, r4, #29
   10ef4:	mov	r0, r5
   10ef8:	bl	10ab8 <abort@plt+0x294>
   10efc:	cmp	r0, #0
   10f00:	beq	10f20 <abort@plt+0x6fc>
   10f04:	add	r3, sp, #4
   10f08:	mov	r2, sp
   10f0c:	ldr	r0, [pc, #64]	; 10f54 <abort@plt+0x730>
   10f10:	mov	r1, r6
   10f14:	bl	107d0 <__isoc99_sscanf@plt>
   10f18:	cmp	r0, #2
   10f1c:	beq	10f28 <abort@plt+0x704>
   10f20:	add	sp, sp, #8
   10f24:	pop	{r4, r5, r6, r7, r8, pc}
   10f28:	mov	r0, r4
   10f2c:	bl	107b8 <strlen@plt>
   10f30:	add	r0, r4, r0
   10f34:	mov	r3, #0
   10f38:	ldr	r2, [sp]
   10f3c:	mov	r1, r8
   10f40:	strb	r3, [r0, #-1]
   10f44:	mov	r0, r7
   10f48:	ldr	r3, [sp, #4]
   10f4c:	bl	10e64 <abort@plt+0x640>
   10f50:	b	10ef4 <abort@plt+0x6d0>
   10f54:	muleq	r2, r1, r0
   10f58:	andeq	r1, r1, pc, lsl #26
   10f5c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10f60:	mov	r6, r1
   10f64:	mov	r5, r0
   10f68:	mov	r0, r6
   10f6c:	ldr	r1, [pc, #328]	; 110bc <abort@plt+0x898>
   10f70:	bl	116f0 <error@@Base+0xc4>
   10f74:	mov	r4, r0
   10f78:	bl	10ab8 <abort@plt+0x294>
   10f7c:	cmp	r0, #0
   10f80:	beq	110a8 <abort@plt+0x884>
   10f84:	mov	r2, #45	; 0x2d
   10f88:	ldr	r1, [pc, #304]	; 110c0 <abort@plt+0x89c>
   10f8c:	ldr	r0, [pc, #304]	; 110c4 <abort@plt+0x8a0>
   10f90:	bl	10818 <strncmp@plt>
   10f94:	cmp	r0, #0
   10f98:	bne	110a8 <abort@plt+0x884>
   10f9c:	mov	r0, r4
   10fa0:	bl	10ab8 <abort@plt+0x294>
   10fa4:	cmp	r0, #0
   10fa8:	beq	110a8 <abort@plt+0x884>
   10fac:	ldr	r1, [pc, #276]	; 110c8 <abort@plt+0x8a4>
   10fb0:	ldr	r0, [pc, #268]	; 110c4 <abort@plt+0x8a0>
   10fb4:	bl	10728 <strcmp@plt>
   10fb8:	cmp	r0, #0
   10fbc:	bne	110a8 <abort@plt+0x884>
   10fc0:	mov	r1, sp
   10fc4:	mov	r0, r4
   10fc8:	bl	10adc <abort@plt+0x2b8>
   10fcc:	cmp	r0, #0
   10fd0:	beq	110a8 <abort@plt+0x884>
   10fd4:	add	r1, sp, #4
   10fd8:	mov	r0, r4
   10fdc:	bl	10adc <abort@plt+0x2b8>
   10fe0:	cmp	r0, #0
   10fe4:	beq	110a8 <abort@plt+0x884>
   10fe8:	mov	r0, r4
   10fec:	bl	10ab8 <abort@plt+0x294>
   10ff0:	cmp	r0, #0
   10ff4:	beq	110a8 <abort@plt+0x884>
   10ff8:	mov	r0, r4
   10ffc:	bl	10ab8 <abort@plt+0x294>
   11000:	cmp	r0, #0
   11004:	beq	110a8 <abort@plt+0x884>
   11008:	ldr	r3, [r5]
   1100c:	add	r1, r5, #8
   11010:	mov	r0, r4
   11014:	ldr	r2, [sp]
   11018:	add	r3, r3, r2
   1101c:	ldr	r2, [sp, #4]
   11020:	str	r3, [r5]
   11024:	ldr	r3, [r5, #4]
   11028:	add	r3, r3, r2
   1102c:	str	r3, [r5, #4]
   11030:	bl	10d78 <abort@plt+0x554>
   11034:	mov	r7, r0
   11038:	add	r1, r5, #416	; 0x1a0
   1103c:	mov	r0, r4
   11040:	bl	10d78 <abort@plt+0x554>
   11044:	mov	r6, r0
   11048:	add	r1, r5, #824	; 0x338
   1104c:	mov	r0, r4
   11050:	bl	10d78 <abort@plt+0x554>
   11054:	ldr	r3, [sp]
   11058:	cmp	r3, #0
   1105c:	ble	11098 <abort@plt+0x874>
   11060:	add	r1, r5, #920	; 0x398
   11064:	mov	r0, r4
   11068:	bl	10d78 <abort@plt+0x554>
   1106c:	cmp	r7, #0
   11070:	ble	11080 <abort@plt+0x85c>
   11074:	add	r1, r5, #992	; 0x3e0
   11078:	mov	r0, r4
   1107c:	bl	10ec0 <abort@plt+0x69c>
   11080:	cmp	r6, #0
   11084:	ble	11098 <abort@plt+0x874>
   11088:	add	r1, r5, #9024	; 0x2340
   1108c:	mov	r0, r4
   11090:	add	r1, r1, #24
   11094:	bl	10ec0 <abort@plt+0x69c>
   11098:	mov	r0, r4
   1109c:	bl	11514 <abort@plt+0xcf0>
   110a0:	add	sp, sp, #12
   110a4:	pop	{r4, r5, r6, r7, pc}
   110a8:	cmp	r6, #0
   110ac:	ldr	r1, [pc, #24]	; 110cc <abort@plt+0x8a8>
   110b0:	movne	r1, r6
   110b4:	ldr	r0, [pc, #20]	; 110d0 <abort@plt+0x8ac>
   110b8:	bl	116b0 <error@@Base+0x84>
   110bc:	andeq	r1, r1, sp, lsl sp
   110c0:	andeq	r1, r1, pc, lsl sp
   110c4:	muleq	r2, r1, r0
   110c8:	andeq	r1, r1, pc, asr #26
   110cc:	andeq	r1, r1, r7, lsl sp
   110d0:	andeq	r1, r1, pc, ror sp
   110d4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   110d8:	mov	r4, r0
   110dc:	mov	r0, r1
   110e0:	mov	r7, #1
   110e4:	mov	r6, #0
   110e8:	ldr	r1, [pc, #268]	; 111fc <abort@plt+0x9d8>
   110ec:	bl	116f0 <error@@Base+0xc4>
   110f0:	mov	r5, r0
   110f4:	ldr	r3, [pc, #260]	; 11200 <abort@plt+0x9dc>
   110f8:	ldr	r2, [pc, #260]	; 11204 <abort@plt+0x9e0>
   110fc:	ldr	r1, [pc, #260]	; 11208 <abort@plt+0x9e4>
   11100:	bl	107c4 <fprintf@plt>
   11104:	ldr	r1, [pc, #256]	; 1120c <abort@plt+0x9e8>
   11108:	mov	r0, r5
   1110c:	ldr	r2, [r4]
   11110:	bl	107c4 <fprintf@plt>
   11114:	ldr	r1, [pc, #244]	; 11210 <abort@plt+0x9ec>
   11118:	mov	r0, r5
   1111c:	ldr	r2, [r4, #4]
   11120:	bl	107c4 <fprintf@plt>
   11124:	mov	r1, r4
   11128:	mov	r0, r5
   1112c:	bl	10b18 <abort@plt+0x2f4>
   11130:	mov	r1, r5
   11134:	ldr	r0, [pc, #216]	; 11214 <abort@plt+0x9f0>
   11138:	bl	1080c <fputs@plt>
   1113c:	ldr	r3, [pc, #212]	; 11218 <abort@plt+0x9f4>
   11140:	mov	r2, #50	; 0x32
   11144:	add	r1, r4, #8
   11148:	mov	r0, r5
   1114c:	strd	r6, [sp]
   11150:	bl	10bc4 <abort@plt+0x3a0>
   11154:	ldr	r3, [pc, #192]	; 1121c <abort@plt+0x9f8>
   11158:	mov	r2, #50	; 0x32
   1115c:	add	r1, r4, #416	; 0x1a0
   11160:	mov	r0, r5
   11164:	strd	r6, [sp]
   11168:	bl	10bc4 <abort@plt+0x3a0>
   1116c:	ldr	r3, [pc, #172]	; 11220 <abort@plt+0x9fc>
   11170:	mov	r2, #10
   11174:	add	r1, r4, #824	; 0x338
   11178:	mov	r0, r5
   1117c:	str	r7, [sp]
   11180:	str	r7, [sp, #4]
   11184:	bl	10bc4 <abort@plt+0x3a0>
   11188:	ldr	r3, [r4]
   1118c:	cmp	r3, r6
   11190:	ble	111ec <abort@plt+0x9c8>
   11194:	ldr	r3, [pc, #136]	; 11224 <abort@plt+0xa00>
   11198:	mov	r2, #8
   1119c:	add	r1, r4, #920	; 0x398
   111a0:	mov	r0, r5
   111a4:	str	r6, [sp]
   111a8:	str	r6, [sp, #4]
   111ac:	bl	10bc4 <abort@plt+0x3a0>
   111b0:	ldr	r3, [r4, #8]
   111b4:	cmp	r3, r6
   111b8:	ble	111cc <abort@plt+0x9a8>
   111bc:	ldr	r2, [pc, #84]	; 11218 <abort@plt+0x9f4>
   111c0:	add	r1, r4, #992	; 0x3e0
   111c4:	mov	r0, r5
   111c8:	bl	10cc4 <abort@plt+0x4a0>
   111cc:	ldr	r3, [r4, #416]	; 0x1a0
   111d0:	cmp	r3, #0
   111d4:	ble	111ec <abort@plt+0x9c8>
   111d8:	add	r1, r4, #9024	; 0x2340
   111dc:	ldr	r2, [pc, #56]	; 1121c <abort@plt+0x9f8>
   111e0:	mov	r0, r5
   111e4:	add	r1, r1, #24
   111e8:	bl	10cc4 <abort@plt+0x4a0>
   111ec:	mov	r0, r5
   111f0:	add	sp, sp, #12
   111f4:	pop	{r4, r5, r6, r7, lr}
   111f8:	b	11514 <abort@plt+0xcf0>
   111fc:	muleq	r1, ip, ip
   11200:	andeq	r1, r1, pc, asr #26
   11204:	andeq	r1, r1, pc, lsl sp
   11208:	muleq	r1, r1, sp
   1120c:	muleq	r1, r6, sp
   11210:	andeq	r1, r1, r4, lsr #27
   11214:			; <UNDEFINED> instruction: 0x00011dba
   11218:	andeq	r1, r1, r7, asr #27
   1121c:	ldrdeq	r1, [r1], -sl
   11220:	ldrdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   11224:	andeq	r1, r1, r8, ror #27
   11228:	sub	r0, r0, #1
   1122c:	mov	r3, #0
   11230:	ldrb	r2, [r0, #1]!
   11234:	cmp	r2, #0
   11238:	bne	11250 <abort@plt+0xa2c>
   1123c:	movw	r2, #503	; 0x1f7
   11240:	udiv	r0, r3, r2
   11244:	mls	r0, r2, r0, r3
   11248:	sxth	r0, r0
   1124c:	bx	lr
   11250:	add	r3, r3, r2
   11254:	b	11230 <abort@plt+0xa0c>
   11258:	push	{r4, r5, r6, lr}
   1125c:	add	r6, r0, #8000	; 0x1f40
   11260:	mov	r4, r0
   11264:	mov	r5, r0
   11268:	add	r6, r6, #48	; 0x30
   1126c:	mov	r0, r5
   11270:	add	r5, r5, #16
   11274:	bl	11998 <error@@Base+0x36c>
   11278:	cmp	r5, r6
   1127c:	bne	1126c <abort@plt+0xa48>
   11280:	add	r4, r4, #4096	; 0x1000
   11284:	mov	r3, #0
   11288:	str	r3, [r4, #3952]	; 0xf70
   1128c:	str	r3, [r4, #3956]	; 0xf74
   11290:	pop	{r4, r5, r6, pc}
   11294:	push	{r4, r5, r6, lr}
   11298:	mov	r4, r0
   1129c:	mov	r0, r1
   112a0:	mov	r5, r1
   112a4:	bl	11228 <abort@plt+0xa04>
   112a8:	ldr	r4, [r4, r0, lsl #4]
   112ac:	cmp	r4, #0
   112b0:	beq	112c8 <abort@plt+0xaa4>
   112b4:	mov	r0, r5
   112b8:	ldr	r1, [r4, #8]
   112bc:	bl	10728 <strcmp@plt>
   112c0:	cmp	r0, #0
   112c4:	bne	112d0 <abort@plt+0xaac>
   112c8:	mov	r0, r4
   112cc:	pop	{r4, r5, r6, pc}
   112d0:	ldr	r4, [r4, #4]
   112d4:	b	112ac <abort@plt+0xa88>
   112d8:	push	{r4, lr}
   112dc:	mov	r4, r0
   112e0:	ldr	r0, [r1, #8]
   112e4:	bl	11228 <abort@plt+0xa04>
   112e8:	add	r0, r4, r0, lsl #4
   112ec:	add	r4, r4, #4096	; 0x1000
   112f0:	bl	119b0 <error@@Base+0x384>
   112f4:	ldr	r0, [r4, #3952]	; 0xf70
   112f8:	cmp	r0, #0
   112fc:	beq	1130c <abort@plt+0xae8>
   11300:	bl	10740 <free@plt>
   11304:	mov	r3, #0
   11308:	str	r3, [r4, #3952]	; 0xf70
   1130c:	ldr	r3, [r4, #3956]	; 0xf74
   11310:	add	r3, r3, #1
   11314:	str	r3, [r4, #3956]	; 0xf74
   11318:	pop	{r4, pc}
   1131c:	push	{r4, lr}
   11320:	mov	r4, r0
   11324:	ldr	r0, [r1, #8]
   11328:	bl	11228 <abort@plt+0xa04>
   1132c:	add	r0, r4, r0, lsl #4
   11330:	add	r4, r4, #4096	; 0x1000
   11334:	bl	119e8 <error@@Base+0x3bc>
   11338:	ldr	r0, [r4, #3952]	; 0xf70
   1133c:	cmp	r0, #0
   11340:	beq	11350 <abort@plt+0xb2c>
   11344:	bl	10740 <free@plt>
   11348:	mov	r3, #0
   1134c:	str	r3, [r4, #3952]	; 0xf70
   11350:	ldr	r3, [r4, #3956]	; 0xf74
   11354:	sub	r3, r3, #1
   11358:	str	r3, [r4, #3956]	; 0xf74
   1135c:	pop	{r4, pc}
   11360:	push	{r4, r5, r6, lr}
   11364:	add	r6, r0, #4096	; 0x1000
   11368:	ldr	r4, [r6, #3952]	; 0xf70
   1136c:	cmp	r4, #0
   11370:	popne	{r4, r5, r6, pc}
   11374:	ldr	r3, [r6, #3956]	; 0xf74
   11378:	cmp	r3, #0
   1137c:	popeq	{r4, r5, r6, pc}
   11380:	mov	r5, r0
   11384:	mov	r1, #4
   11388:	mov	r0, r3
   1138c:	bl	11668 <error@@Base+0x3c>
   11390:	mov	r3, r4
   11394:	mov	r2, r4
   11398:	str	r0, [r6, #3952]	; 0xf70
   1139c:	movw	lr, #503	; 0x1f7
   113a0:	ldr	r1, [r5, r2, lsl #4]
   113a4:	mov	ip, r3
   113a8:	cmp	r1, #0
   113ac:	mov	r3, ip
   113b0:	bne	113c4 <abort@plt+0xba0>
   113b4:	add	r2, r2, #1
   113b8:	cmp	r2, lr
   113bc:	bne	113a0 <abort@plt+0xb7c>
   113c0:	pop	{r4, r5, r6, pc}
   113c4:	str	r1, [r0, ip, lsl #2]
   113c8:	add	ip, ip, #1
   113cc:	ldr	r1, [r1, #4]
   113d0:	b	113a8 <abort@plt+0xb84>
   113d4:	push	{r4, r5, r6, r7, r8, lr}
   113d8:	add	r6, r0, #8000	; 0x1f40
   113dc:	mov	r4, r0
   113e0:	mov	r7, r1
   113e4:	mov	r5, r0
   113e8:	add	r6, r6, #48	; 0x30
   113ec:	mov	r0, r5
   113f0:	mov	r1, r7
   113f4:	add	r5, r5, #16
   113f8:	bl	11a90 <error@@Base+0x464>
   113fc:	cmp	r5, r6
   11400:	bne	113ec <abort@plt+0xbc8>
   11404:	add	r4, r4, #4096	; 0x1000
   11408:	ldr	r0, [r4, #3952]	; 0xf70
   1140c:	cmp	r0, #0
   11410:	beq	11420 <abort@plt+0xbfc>
   11414:	bl	10740 <free@plt>
   11418:	mov	r3, #0
   1141c:	str	r3, [r4, #3952]	; 0xf70
   11420:	mov	r3, #0
   11424:	str	r3, [r4, #3956]	; 0xf74
   11428:	pop	{r4, r5, r6, r7, r8, pc}
   1142c:	ldr	r3, [pc, #56]	; 1146c <abort@plt+0xc48>
   11430:	push	{r4, r5, lr}
   11434:	sub	sp, sp, #116	; 0x74
   11438:	mov	r5, r0
   1143c:	ldr	r4, [r3]
   11440:	bl	107a0 <getpid@plt>
   11444:	ldr	r1, [pc, #36]	; 11470 <abort@plt+0xc4c>
   11448:	mov	r3, r0
   1144c:	add	r0, sp, #12
   11450:	str	r5, [sp]
   11454:	mov	r2, r4
   11458:	bl	107f4 <sprintf@plt>
   1145c:	add	r0, sp, #12
   11460:	bl	10758 <strdup@plt>
   11464:	add	sp, sp, #116	; 0x74
   11468:	pop	{r4, r5, pc}
   1146c:	andeq	r6, r2, r0, ror r5
   11470:	strdeq	r1, [r1], -r0
   11474:	ldr	r3, [pc, #84]	; 114d0 <abort@plt+0xcac>
   11478:	mov	r5, r0
   1147c:	push	{r7, lr}
   11480:	ldr	r3, [r3]
   11484:	cmp	r3, #0
   11488:	beq	11490 <abort@plt+0xc6c>
   1148c:	blx	r3
   11490:	ldr	r6, [pc, #60]	; 114d4 <abort@plt+0xcb0>
   11494:	mov	r4, #1
   11498:	ldrsh	r3, [r6]
   1149c:	cmp	r3, r4
   114a0:	bge	114ac <abort@plt+0xc88>
   114a4:	mov	r0, r5
   114a8:	bl	107ac <exit@plt>
   114ac:	mov	r0, r4
   114b0:	add	r4, r4, #1
   114b4:	bl	1142c <abort@plt+0xc08>
   114b8:	mov	r7, r0
   114bc:	sxth	r4, r4
   114c0:	bl	10764 <unlink@plt>
   114c4:	mov	r0, r7
   114c8:	bl	10740 <free@plt>
   114cc:	b	11498 <abort@plt+0xc74>
   114d0:	andeq	r6, r2, r4, ror r5
   114d4:	strdeq	r2, [r2], -r6
   114d8:	sub	r2, r0, #1
   114dc:	sub	r1, r1, #1
   114e0:	ldrb	r3, [r2, #1]!
   114e4:	ldrb	r0, [r1, #1]!
   114e8:	cmp	r3, #0
   114ec:	beq	11508 <abort@plt+0xce4>
   114f0:	cmp	r3, r0
   114f4:	beq	114e0 <abort@plt+0xcbc>
   114f8:	cmp	r3, r0
   114fc:	mvncc	r0, #0
   11500:	movcs	r0, #1
   11504:	bx	lr
   11508:	cmp	r0, #0
   1150c:	bxeq	lr
   11510:	b	114f8 <abort@plt+0xcd4>
   11514:	ldr	r2, [pc, #28]	; 11538 <abort@plt+0xd14>
   11518:	ldr	r2, [r2]
   1151c:	cmp	r2, r0
   11520:	bxeq	lr
   11524:	ldr	r2, [pc, #16]	; 1153c <abort@plt+0xd18>
   11528:	ldr	r2, [r2]
   1152c:	cmp	r2, r0
   11530:	bxeq	lr
   11534:	b	107dc <fclose@plt>
   11538:	andeq	r2, r2, r8, lsl #1
   1153c:	andeq	r2, r2, ip, lsl #1
   11540:	push	{lr}		; (str lr, [sp, #-4]!)
   11544:	sub	sp, sp, #92	; 0x5c
   11548:	mov	r1, sp
   1154c:	bl	11c54 <error@@Base+0x628>
   11550:	clz	r0, r0
   11554:	lsr	r0, r0, #5
   11558:	add	sp, sp, #92	; 0x5c
   1155c:	pop	{pc}		; (ldr pc, [sp], #4)
   11560:	ldr	r3, [pc, #36]	; 1158c <abort@plt+0xd68>
   11564:	push	{r4, lr}
   11568:	ldrh	r0, [r3]
   1156c:	add	r0, r0, #1
   11570:	sxth	r0, r0
   11574:	strh	r0, [r3]
   11578:	bl	1142c <abort@plt+0xc08>
   1157c:	mov	r4, r0
   11580:	bl	10764 <unlink@plt>
   11584:	mov	r0, r4
   11588:	pop	{r4, pc}
   1158c:	strdeq	r2, [r2], -r6
   11590:	push	{r4, lr}
   11594:	mov	r4, r0
   11598:	bl	107b8 <strlen@plt>
   1159c:	sub	r0, r0, #1
   115a0:	add	r1, r4, #1
   115a4:	sxth	r0, r0
   115a8:	tst	r0, #32768	; 0x8000
   115ac:	bne	115c0 <abort@plt+0xd9c>
   115b0:	sub	r3, r0, #1
   115b4:	ldrb	r2, [r1, r3]
   115b8:	cmp	r2, #47	; 0x2f
   115bc:	bne	115cc <abort@plt+0xda8>
   115c0:	add	r0, r0, #1
   115c4:	add	r0, r4, r0
   115c8:	pop	{r4, pc}
   115cc:	mov	r0, r3
   115d0:	b	115a8 <abort@plt+0xd84>
   115d4:	push	{r4, lr}
   115d8:	mov	r0, #0
   115dc:	bl	11474 <abort@plt+0xc50>
   115e0:	ldr	r2, [pc, #52]	; 1161c <abort@plt+0xdf8>
   115e4:	push	{r4, lr}
   115e8:	ldr	r2, [r2]
   115ec:	cmp	r2, #0
   115f0:	beq	115fc <abort@plt+0xdd8>
   115f4:	blx	r2
   115f8:	bl	115d4 <abort@plt+0xdb0>
   115fc:	mov	r3, r0
   11600:	ldr	r2, [pc, #24]	; 11620 <abort@plt+0xdfc>
   11604:	ldr	r0, [pc, #24]	; 11624 <abort@plt+0xe00>
   11608:	ldr	r1, [pc, #24]	; 11628 <abort@plt+0xe04>
   1160c:	ldr	r2, [r2]
   11610:	ldr	r0, [r0]
   11614:	bl	107c4 <fprintf@plt>
   11618:	b	115f8 <abort@plt+0xdd4>
   1161c:	andeq	r6, r2, ip, ror #10
   11620:	andeq	r6, r2, r0, ror r5
   11624:	andeq	r2, r2, r0, lsl #1
   11628:	strdeq	r1, [r1], -lr

0001162c <error@@Base>:
   1162c:	mov	r3, r0
   11630:	ldr	r2, [pc, #32]	; 11658 <error@@Base+0x2c>
   11634:	push	{r4, lr}
   11638:	ldr	r0, [pc, #28]	; 1165c <error@@Base+0x30>
   1163c:	ldr	r1, [pc, #28]	; 11660 <error@@Base+0x34>
   11640:	ldr	r2, [r2]
   11644:	ldr	r0, [r0]
   11648:	bl	107c4 <fprintf@plt>
   1164c:	ldr	r3, [pc, #16]	; 11664 <error@@Base+0x38>
   11650:	ldr	r0, [r3]
   11654:	bl	11474 <abort@plt+0xc50>
   11658:	andeq	r6, r2, r0, ror r5
   1165c:	andeq	r2, r2, r0, lsl #1
   11660:	andeq	r1, r1, sp, lsl #28
   11664:	andeq	r2, r2, r4, ror r0
   11668:	push	{r4, lr}
   1166c:	bl	1071c <calloc@plt>
   11670:	cmp	r0, #0
   11674:	popne	{r4, pc}
   11678:	ldr	r0, [pc]	; 11680 <error@@Base+0x54>
   1167c:	bl	1162c <error@@Base>
   11680:	andeq	r1, r1, r5, lsl lr
   11684:	ldr	r3, [pc, #28]	; 116a8 <error@@Base+0x7c>
   11688:	ldrb	r2, [r3, #2]
   1168c:	cmp	r2, #0
   11690:	bxne	lr
   11694:	mov	r2, #1
   11698:	push	{r4, lr}
   1169c:	ldr	r0, [pc, #8]	; 116ac <error@@Base+0x80>
   116a0:	strb	r2, [r3, #2]
   116a4:	bl	1162c <error@@Base>
   116a8:	strdeq	r2, [r2], -r6
   116ac:	andeq	r1, r1, pc, lsr #28
   116b0:	push	{r0, r1, r2, lr}
   116b4:	mov	r3, r0
   116b8:	ldr	r2, [pc, #32]	; 116e0 <error@@Base+0xb4>
   116bc:	str	r1, [sp]
   116c0:	ldr	r0, [pc, #28]	; 116e4 <error@@Base+0xb8>
   116c4:	ldr	r1, [pc, #28]	; 116e8 <error@@Base+0xbc>
   116c8:	ldr	r2, [r2]
   116cc:	ldr	r0, [r0]
   116d0:	bl	107c4 <fprintf@plt>
   116d4:	ldr	r3, [pc, #16]	; 116ec <error@@Base+0xc0>
   116d8:	ldr	r0, [r3]
   116dc:	bl	11474 <abort@plt+0xc50>
   116e0:	andeq	r6, r2, r0, ror r5
   116e4:	andeq	r2, r2, r0, lsl #1
   116e8:	andeq	r1, r1, lr, lsr lr
   116ec:	andeq	r2, r2, r4, ror r0
   116f0:	push	{r4, r5, r6, lr}
   116f4:	subs	r4, r0, #0
   116f8:	mov	r5, r1
   116fc:	bne	11718 <error@@Base+0xec>
   11700:	ldrb	r3, [r1]
   11704:	cmp	r3, #114	; 0x72
   11708:	ldreq	r3, [pc, #44]	; 1173c <error@@Base+0x110>
   1170c:	ldrne	r3, [pc, #44]	; 11740 <error@@Base+0x114>
   11710:	ldr	r0, [r3]
   11714:	pop	{r4, r5, r6, pc}
   11718:	bl	10734 <fopen@plt>
   1171c:	cmp	r0, #0
   11720:	popne	{r4, r5, r6, pc}
   11724:	mov	r1, r4
   11728:	ldrb	r3, [r5]
   1172c:	cmp	r3, #119	; 0x77
   11730:	ldreq	r0, [pc, #12]	; 11744 <error@@Base+0x118>
   11734:	ldrne	r0, [pc, #12]	; 11748 <error@@Base+0x11c>
   11738:	bl	116b0 <error@@Base+0x84>
   1173c:	andeq	r2, r2, r8, lsl #1
   11740:	andeq	r2, r2, ip, lsl #1
   11744:	andeq	r1, r1, fp, asr #28
   11748:	andeq	r1, r1, r1, ror #28
   1174c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11750:	mov	r8, r0
   11754:	mov	r7, r1
   11758:	mov	r9, r3
   1175c:	ldr	r0, [r1]
   11760:	str	r2, [sp]
   11764:	bl	11590 <abort@plt+0xd6c>
   11768:	ldr	r3, [pc, #396]	; 118fc <error@@Base+0x2d0>
   1176c:	ldr	r1, [pc, #396]	; 11900 <error@@Base+0x2d4>
   11770:	str	r0, [r3]
   11774:	mov	r0, #2
   11778:	bl	10788 <__sysv_signal@plt>
   1177c:	ldr	r1, [pc, #380]	; 11900 <error@@Base+0x2d4>
   11780:	mov	r0, #15
   11784:	bl	10788 <__sysv_signal@plt>
   11788:	ldr	r4, [r8]
   1178c:	cmp	r4, #1
   11790:	movne	r6, #0
   11794:	movne	r4, #1
   11798:	bne	118bc <error@@Base+0x290>
   1179c:	ldr	r3, [pc, #352]	; 11904 <error@@Base+0x2d8>
   117a0:	ldrb	r6, [r3, #4]
   117a4:	cmp	r6, #0
   117a8:	beq	118bc <error@@Base+0x290>
   117ac:	ldr	r0, [sp]
   117b0:	bl	115e0 <abort@plt+0xdbc>
   117b4:	ldr	r5, [r7, r4, lsl #2]
   117b8:	lsl	sl, r4, #2
   117bc:	ldrb	r3, [r5]
   117c0:	cmp	r3, #45	; 0x2d
   117c4:	bne	118ec <error@@Base+0x2c0>
   117c8:	ldrb	r3, [r5, #1]
   117cc:	cmp	r3, #0
   117d0:	str	r3, [sp, #4]
   117d4:	beq	118ec <error@@Base+0x2c0>
   117d8:	mov	r0, r5
   117dc:	bl	107b8 <strlen@plt>
   117e0:	mov	r2, r0
   117e4:	mov	r1, r5
   117e8:	ldr	r0, [pc, #280]	; 11908 <error@@Base+0x2dc>
   117ec:	bl	10818 <strncmp@plt>
   117f0:	cmp	r0, #0
   117f4:	beq	117ac <error@@Base+0x180>
   117f8:	add	r0, r4, #1
   117fc:	ldr	r3, [sp, #4]
   11800:	cmp	r0, fp
   11804:	addlt	sl, r7, sl
   11808:	movge	r1, #0
   1180c:	ldrlt	r1, [sl, #4]
   11810:	cmp	r9, #0
   11814:	beq	118d4 <error@@Base+0x2a8>
   11818:	mov	ip, #0
   1181c:	sxth	r2, ip
   11820:	add	r2, r2, r2, lsl #1
   11824:	add	lr, r9, r2, lsl #2
   11828:	ldrb	r2, [r9, r2, lsl #2]
   1182c:	cmp	r2, #0
   11830:	beq	118d4 <error@@Base+0x2a8>
   11834:	cmp	r3, r2
   11838:	add	ip, ip, #1
   1183c:	bne	1181c <error@@Base+0x1f0>
   11840:	ldr	r3, [lr, #4]
   11844:	cmp	r3, #0
   11848:	bne	1187c <error@@Base+0x250>
   1184c:	ldr	r3, [lr, #8]
   11850:	cmp	r3, #0
   11854:	beq	118d4 <error@@Base+0x2a8>
   11858:	ldrb	r2, [r5, #2]
   1185c:	cmp	r2, #0
   11860:	bne	118d4 <error@@Base+0x2a8>
   11864:	ldrb	r2, [r3]
   11868:	cmp	r2, #0
   1186c:	bne	118e0 <error@@Base+0x2b4>
   11870:	mov	r2, #1
   11874:	strb	r2, [r3]
   11878:	b	118b4 <error@@Base+0x288>
   1187c:	ldrb	r2, [r5, #2]
   11880:	cmp	r1, #0
   11884:	cmpeq	r2, #0
   11888:	beq	1184c <error@@Base+0x220>
   1188c:	ldr	ip, [r3]
   11890:	cmp	ip, #0
   11894:	bne	118e0 <error@@Base+0x2b4>
   11898:	cmp	r2, #0
   1189c:	sxth	r0, r0
   118a0:	addne	r1, r5, #2
   118a4:	str	r1, [r3]
   118a8:	ldrb	r3, [r5, #2]
   118ac:	cmp	r3, #0
   118b0:	moveq	r4, r0
   118b4:	add	r4, r4, #1
   118b8:	sxth	r4, r4
   118bc:	ldr	fp, [r8]
   118c0:	cmp	r4, fp
   118c4:	blt	117b4 <error@@Base+0x188>
   118c8:	str	r6, [r8]
   118cc:	add	sp, sp, #12
   118d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118d4:	ldr	r0, [pc, #48]	; 1190c <error@@Base+0x2e0>
   118d8:	mov	r1, r5
   118dc:	bl	116b0 <error@@Base+0x84>
   118e0:	mov	r1, r5
   118e4:	ldr	r0, [pc, #36]	; 11910 <error@@Base+0x2e4>
   118e8:	b	118dc <error@@Base+0x2b0>
   118ec:	add	r3, r6, #1
   118f0:	str	r5, [r7, r6, lsl #2]
   118f4:	sxth	r6, r3
   118f8:	b	118b4 <error@@Base+0x288>
   118fc:	andeq	r6, r2, r0, ror r5
   11900:	andeq	r1, r1, r4, lsl #13
   11904:	andeq	r2, r2, r4, ror r0
   11908:	andeq	r1, r1, r5, ror lr
   1190c:	andeq	r1, r1, fp, ror lr
   11910:	andeq	r1, r1, sl, lsl #29
   11914:	push	{r0, r1, r2, lr}
   11918:	mov	r3, r0
   1191c:	ldr	r2, [pc, #28]	; 11940 <error@@Base+0x314>
   11920:	str	r1, [sp]
   11924:	ldr	r0, [pc, #24]	; 11944 <error@@Base+0x318>
   11928:	ldr	r1, [pc, #24]	; 11948 <error@@Base+0x31c>
   1192c:	ldr	r2, [r2]
   11930:	ldr	r0, [r0]
   11934:	bl	107c4 <fprintf@plt>
   11938:	add	sp, sp, #12
   1193c:	pop	{pc}		; (ldr pc, [sp], #4)
   11940:	andeq	r6, r2, r0, ror r5
   11944:	andeq	r2, r2, r0, lsl #1
   11948:	andeq	r1, r1, lr, lsr lr
   1194c:	cmp	r1, #0
   11950:	push	{r4, lr}
   11954:	mov	r4, r0
   11958:	stm	r2, {r1, r3}
   1195c:	strne	r2, [r1, #4]
   11960:	streq	r2, [r0]
   11964:	cmp	r3, #0
   11968:	streq	r2, [r0, #4]
   1196c:	ldr	r0, [r0, #8]
   11970:	strne	r2, [r3]
   11974:	cmp	r0, #0
   11978:	beq	11988 <error@@Base+0x35c>
   1197c:	bl	10740 <free@plt>
   11980:	mov	r3, #0
   11984:	str	r3, [r4, #8]
   11988:	ldr	r3, [r4, #12]
   1198c:	add	r3, r3, #1
   11990:	str	r3, [r4, #12]
   11994:	pop	{r4, pc}
   11998:	mov	r3, #0
   1199c:	str	r3, [r0]
   119a0:	str	r3, [r0, #4]
   119a4:	str	r3, [r0, #8]
   119a8:	str	r3, [r0, #12]
   119ac:	bx	lr
   119b0:	mov	r2, r1
   119b4:	mov	r1, #0
   119b8:	ldr	r3, [r0]
   119bc:	b	1194c <error@@Base+0x320>
   119c0:	mov	r2, r1
   119c4:	mov	r3, #0
   119c8:	ldr	r1, [r0, #4]
   119cc:	b	1194c <error@@Base+0x320>
   119d0:	mov	r3, r2
   119d4:	mov	r2, r1
   119d8:	ldr	r1, [r3]
   119dc:	b	1194c <error@@Base+0x320>
   119e0:	ldr	r3, [r1, #4]
   119e4:	b	1194c <error@@Base+0x320>
   119e8:	ldr	r3, [r1]
   119ec:	push	{r4, r5, r6, lr}
   119f0:	mov	r4, r0
   119f4:	mov	r5, #0
   119f8:	ldr	r2, [r1, #4]
   119fc:	cmp	r3, #0
   11a00:	strne	r2, [r3, #4]
   11a04:	streq	r2, [r0]
   11a08:	ldr	r2, [r1, #4]
   11a0c:	cmp	r2, #0
   11a10:	streq	r3, [r0, #4]
   11a14:	ldr	r0, [r0, #8]
   11a18:	strne	r3, [r2]
   11a1c:	str	r5, [r1]
   11a20:	str	r5, [r1, #4]
   11a24:	cmp	r0, r5
   11a28:	beq	11a34 <error@@Base+0x408>
   11a2c:	bl	10740 <free@plt>
   11a30:	str	r5, [r4, #8]
   11a34:	ldr	r3, [r4, #12]
   11a38:	sub	r3, r3, #1
   11a3c:	str	r3, [r4, #12]
   11a40:	pop	{r4, r5, r6, pc}
   11a44:	ldr	r3, [r0, #8]
   11a48:	cmp	r3, #0
   11a4c:	bxne	lr
   11a50:	ldr	r3, [r0, #12]
   11a54:	cmp	r3, #0
   11a58:	bxeq	lr
   11a5c:	push	{r4, lr}
   11a60:	mov	r1, #4
   11a64:	mov	r4, r0
   11a68:	mov	r0, r3
   11a6c:	bl	11668 <error@@Base+0x3c>
   11a70:	ldr	r3, [r4]
   11a74:	str	r0, [r4, #8]
   11a78:	sub	r0, r0, #4
   11a7c:	cmp	r3, #0
   11a80:	popeq	{r4, pc}
   11a84:	str	r3, [r0, #4]!
   11a88:	ldr	r3, [r3, #4]
   11a8c:	b	11a7c <error@@Base+0x450>
   11a90:	push	{r4, r5, r6, lr}
   11a94:	mov	r5, r0
   11a98:	mov	r6, r1
   11a9c:	ldr	r4, [r5]
   11aa0:	cmp	r4, #0
   11aa4:	popeq	{r4, r5, r6, pc}
   11aa8:	mov	r0, r5
   11aac:	mov	r1, r4
   11ab0:	bl	119e8 <error@@Base+0x3bc>
   11ab4:	mov	r0, r4
   11ab8:	blx	r6
   11abc:	b	11a9c <error@@Base+0x470>
   11ac0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ac4:	mov	r8, r0
   11ac8:	mov	r9, r1
   11acc:	ldr	sl, [pc, #248]	; 11bcc <error@@Base+0x5a0>
   11ad0:	mov	r7, sl
   11ad4:	ldr	r3, [sl]
   11ad8:	mov	r4, r9
   11adc:	mov	r5, r8
   11ae0:	ldr	fp, [r3, r8, lsl #2]
   11ae4:	cmp	r5, r4
   11ae8:	blt	11b28 <error@@Base+0x4fc>
   11aec:	ldr	r3, [r7]
   11af0:	sub	r1, r4, #1
   11af4:	cmp	r8, r1
   11af8:	str	fp, [r3, r4, lsl #2]
   11afc:	bge	11b08 <error@@Base+0x4dc>
   11b00:	mov	r0, r8
   11b04:	bl	11ac0 <error@@Base+0x494>
   11b08:	add	r8, r5, #1
   11b0c:	cmp	r8, r9
   11b10:	blt	11ad4 <error@@Base+0x4a8>
   11b14:	add	sp, sp, #12
   11b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b1c:	sub	r4, r4, #1
   11b20:	cmp	r5, r4
   11b24:	beq	11bc4 <error@@Base+0x598>
   11b28:	ldrd	r2, [r7]
   11b2c:	mov	r0, fp
   11b30:	ldr	r1, [r2, r4, lsl #2]
   11b34:	blx	r3
   11b38:	cmp	r0, #0
   11b3c:	blt	11b1c <error@@Base+0x4f0>
   11b40:	cmp	r5, r4
   11b44:	beq	11bc4 <error@@Base+0x598>
   11b48:	ldr	r2, [r7]
   11b4c:	lsl	r3, r4, #2
   11b50:	add	r6, r5, #1
   11b54:	ldr	r1, [r2, r4, lsl #2]
   11b58:	str	r1, [r2, r5, lsl #2]
   11b5c:	cmp	r6, r4
   11b60:	lsl	r2, r6, #2
   11b64:	ldr	r1, [r7]
   11b68:	bge	11bb8 <error@@Base+0x58c>
   11b6c:	mov	r0, fp
   11b70:	ldr	r1, [r1, r6, lsl #2]
   11b74:	str	r3, [sp]
   11b78:	ldr	r5, [r7, #4]
   11b7c:	str	r2, [sp, #4]
   11b80:	blx	r5
   11b84:	cmp	r0, #0
   11b88:	ldr	r3, [sp]
   11b8c:	ldr	r2, [sp, #4]
   11b90:	bgt	11bb0 <error@@Base+0x584>
   11b94:	ldr	r1, [r7]
   11b98:	sub	r5, r4, #1
   11b9c:	ldr	r2, [r1, r2]
   11ba0:	str	r2, [r1, r3]
   11ba4:	mov	r4, r5
   11ba8:	mov	r5, r6
   11bac:	b	11ae4 <error@@Base+0x4b8>
   11bb0:	add	r6, r6, #1
   11bb4:	b	11b5c <error@@Base+0x530>
   11bb8:	moveq	r5, r6
   11bbc:	bne	11b94 <error@@Base+0x568>
   11bc0:	b	11ba4 <error@@Base+0x578>
   11bc4:	mov	r6, r5
   11bc8:	b	11ba4 <error@@Base+0x578>
   11bcc:	strdeq	r2, [r2], -ip
   11bd0:	cmp	r0, #1
   11bd4:	bxle	lr
   11bd8:	ldr	r3, [pc, #12]	; 11bec <error@@Base+0x5c0>
   11bdc:	stm	r3, {r1, r2}
   11be0:	sub	r1, r0, #1
   11be4:	mov	r0, #0
   11be8:	b	11ac0 <error@@Base+0x494>
   11bec:	strdeq	r2, [r2], -ip
   11bf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bf4:	mov	r7, r0
   11bf8:	ldr	r6, [pc, #72]	; 11c48 <error@@Base+0x61c>
   11bfc:	ldr	r5, [pc, #72]	; 11c4c <error@@Base+0x620>
   11c00:	add	r6, pc, r6
   11c04:	add	r5, pc, r5
   11c08:	sub	r6, r6, r5
   11c0c:	mov	r8, r1
   11c10:	mov	r9, r2
   11c14:	bl	106fc <calloc@plt-0x20>
   11c18:	asrs	r6, r6, #2
   11c1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c20:	mov	r4, #0
   11c24:	add	r4, r4, #1
   11c28:	ldr	r3, [r5], #4
   11c2c:	mov	r2, r9
   11c30:	mov	r1, r8
   11c34:	mov	r0, r7
   11c38:	blx	r3
   11c3c:	cmp	r6, r4
   11c40:	bne	11c24 <error@@Base+0x5f8>
   11c44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c48:	strdeq	r0, [r1], -ip
   11c4c:	strdeq	r0, [r1], -r4
   11c50:	bx	lr
   11c54:	mov	r2, r1
   11c58:	mov	r1, r0
   11c5c:	mov	r0, #3
   11c60:	b	10770 <__xstat@plt>

Disassembly of section .fini:

00011c64 <.fini>:
   11c64:	push	{r3, lr}
   11c68:	pop	{r3, pc}
