
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000648 <_init>:
 648:	push	{r3, lr}
 64c:	bl	734 <call_weak_fn>
 650:	pop	{r3, pc}

Disassembly of section .plt:

00000654 <.plt>:
 654:	push	{lr}		; (str lr, [sp, #-4]!)
 658:	ldr	lr, [pc, #4]	; 664 <.plt+0x10>
 65c:	add	lr, pc, lr
 660:	ldr	pc, [lr, #8]!
 664:	.word	0x0001199c

00000668 <calloc@plt>:
 668:	add	ip, pc, #0, 12
 66c:	add	ip, ip, #69632	; 0x11000
 670:	ldr	pc, [ip, #2460]!	; 0x99c

00000674 <rb_current_time@plt>:
 674:	add	ip, pc, #0, 12
 678:	add	ip, ip, #69632	; 0x11000
 67c:	ldr	pc, [ip, #2452]!	; 0x994

00000680 <rb_event_add@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #69632	; 0x11000
 688:	ldr	pc, [ip, #2444]!	; 0x98c

0000068c <__cxa_finalize@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2436]!	; 0x984

00000698 <rb_event_delete@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2428]!	; 0x97c

000006a4 <free@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2420]!	; 0x974

000006b0 <rb_outofmemory@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2412]!	; 0x96c

000006bc <user_mode@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2404]!	; 0x964

000006c8 <sendto_realops_snomask@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2396]!	; 0x95c

000006d4 <find_umode_slot@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2388]!	; 0x954

000006e0 <get_oper_name@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2380]!	; 0x94c

000006ec <__gmon_start__@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2372]!	; 0x944

000006f8 <get_channel_access@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2364]!	; 0x93c

00000704 <sendto_one_notice@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2356]!	; 0x934

00000710 <privilegeset_in_set@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2348]!	; 0x92c

0000071c <__assert_fail@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2340]!	; 0x924

00000728 <construct_umodebuf@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2332]!	; 0x91c

Disassembly of section .text:

00000734 <call_weak_fn>:
 734:	ldr	r3, [pc, #20]	; 750 <call_weak_fn+0x1c>
 738:	ldr	r2, [pc, #20]	; 754 <call_weak_fn+0x20>
 73c:	add	r3, pc, r3
 740:	ldr	r2, [r3, r2]
 744:	cmp	r2, #0
 748:	bxeq	lr
 74c:	b	6ec <__gmon_start__@plt>
 750:	.word	0x000118bc
 754:	.word	0x00000064

00000758 <deregister_tm_clones>:
 758:	ldr	r0, [pc, #44]	; 78c <deregister_tm_clones+0x34>
 75c:	ldr	r3, [pc, #44]	; 790 <deregister_tm_clones+0x38>
 760:	add	r0, pc, r0
 764:	add	r3, pc, r3
 768:	cmp	r3, r0
 76c:	ldr	r3, [pc, #32]	; 794 <deregister_tm_clones+0x3c>
 770:	add	r3, pc, r3
 774:	bxeq	lr
 778:	ldr	r2, [pc, #24]	; 798 <deregister_tm_clones+0x40>
 77c:	ldr	r3, [r3, r2]
 780:	cmp	r3, #0
 784:	bxeq	lr
 788:	bx	r3
 78c:	.word	0x00011988
 790:	.word	0x00011984
 794:	.word	0x00011888
 798:	.word	0x00000058

0000079c <register_tm_clones>:
 79c:	ldr	r0, [pc, #56]	; 7dc <register_tm_clones+0x40>
 7a0:	ldr	r3, [pc, #56]	; 7e0 <register_tm_clones+0x44>
 7a4:	add	r0, pc, r0
 7a8:	add	r3, pc, r3
 7ac:	sub	r1, r3, r0
 7b0:	ldr	r3, [pc, #44]	; 7e4 <register_tm_clones+0x48>
 7b4:	asr	r1, r1, #2
 7b8:	add	r3, pc, r3
 7bc:	add	r1, r1, r1, lsr #31
 7c0:	asrs	r1, r1, #1
 7c4:	bxeq	lr
 7c8:	ldr	r2, [pc, #24]	; 7e8 <register_tm_clones+0x4c>
 7cc:	ldr	r3, [r3, r2]
 7d0:	cmp	r3, #0
 7d4:	bxeq	lr
 7d8:	bx	r3
 7dc:	.word	0x00011944
 7e0:	.word	0x00011940
 7e4:	.word	0x00011840
 7e8:	.word	0x0000006c

000007ec <__do_global_dtors_aux>:
 7ec:	ldr	r3, [pc, #76]	; 840 <__do_global_dtors_aux+0x54>
 7f0:	ldr	r2, [pc, #76]	; 844 <__do_global_dtors_aux+0x58>
 7f4:	add	r3, pc, r3
 7f8:	add	r2, pc, r2
 7fc:	ldrb	r3, [r3]
 800:	cmp	r3, #0
 804:	bxne	lr
 808:	ldr	r3, [pc, #56]	; 848 <__do_global_dtors_aux+0x5c>
 80c:	push	{r4, lr}
 810:	ldr	r3, [r2, r3]
 814:	cmp	r3, #0
 818:	beq	828 <__do_global_dtors_aux+0x3c>
 81c:	ldr	r3, [pc, #40]	; 84c <__do_global_dtors_aux+0x60>
 820:	ldr	r0, [pc, r3]
 824:	bl	68c <__cxa_finalize@plt>
 828:	bl	758 <deregister_tm_clones>
 82c:	ldr	r3, [pc, #28]	; 850 <__do_global_dtors_aux+0x64>
 830:	mov	r2, #1
 834:	add	r3, pc, r3
 838:	strb	r2, [r3]
 83c:	pop	{r4, pc}
 840:	.word	0x000118f4
 844:	.word	0x00011800
 848:	.word	0x00000050
 84c:	.word	0x00011848
 850:	.word	0x000118b4

00000854 <frame_dummy>:
 854:	b	79c <register_tm_clones>

00000858 <rb_free>:
 858:	cmp	r0, #0
 85c:	bxeq	lr
 860:	b	6a4 <free@plt>

00000864 <expire_override_deadlines>:
 864:	ldr	r3, [pc, #140]	; 8f8 <expire_override_deadlines+0x94>
 868:	ldr	r2, [pc, #140]	; 8fc <expire_override_deadlines+0x98>
 86c:	add	r3, pc, r3
 870:	ldr	r3, [r3, r2]
 874:	ldr	r3, [r3]
 878:	cmp	r3, #0
 87c:	bxeq	lr
 880:	push	{r4, r5, r6, r7, r8, r9, lr}
 884:	sub	sp, sp, #20
 888:	mov	r7, #0
 88c:	mov	r8, sp
 890:	ldr	r6, [pc, #104]	; 900 <expire_override_deadlines+0x9c>
 894:	ldr	r4, [r3, #8]
 898:	add	r6, pc, r6
 89c:	ldr	r5, [r3]
 8a0:	ldr	r9, [r5, #16]
 8a4:	bl	674 <rb_current_time@plt>
 8a8:	cmp	r9, r0
 8ac:	bgt	8f0 <expire_override_deadlines+0x8c>
 8b0:	ldr	r9, [r5, #16]
 8b4:	bl	674 <rb_current_time@plt>
 8b8:	cmp	r9, r0
 8bc:	bge	8e0 <expire_override_deadlines+0x7c>
 8c0:	ldr	r1, [r5, #12]
 8c4:	mov	r2, #3
 8c8:	add	r3, r1, #88	; 0x58
 8cc:	mov	r0, r1
 8d0:	str	r3, [sp]
 8d4:	stmib	sp, {r3, r6, r7}
 8d8:	mov	r3, r8
 8dc:	bl	6bc <user_mode@plt>
 8e0:	cmp	r4, #0
 8e4:	movne	r3, r4
 8e8:	ldrne	r4, [r4, #8]
 8ec:	bne	89c <expire_override_deadlines+0x38>
 8f0:	add	sp, sp, #20
 8f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
 8f8:	.word	0x0001178c
 8fc:	.word	0x00000054
 900:	.word	0x0000076b

00000904 <rb_dlinkDelete.constprop.7>:
 904:	ldr	r3, [pc, #112]	; 97c <rb_dlinkDelete.constprop.7+0x78>
 908:	cmp	r0, #0
 90c:	add	r3, pc, r3
 910:	bne	938 <rb_dlinkDelete.constprop.7+0x34>
 914:	ldr	r3, [pc, #100]	; 980 <rb_dlinkDelete.constprop.7+0x7c>
 918:	mov	r2, #235	; 0xeb
 91c:	push	{r4, lr}
 920:	ldr	r1, [pc, #92]	; 984 <rb_dlinkDelete.constprop.7+0x80>
 924:	add	r3, pc, r3
 928:	ldr	r0, [pc, #88]	; 988 <rb_dlinkDelete.constprop.7+0x84>
 92c:	add	r1, pc, r1
 930:	add	r0, pc, r0
 934:	bl	71c <__assert_fail@plt>
 938:	ldr	ip, [pc, #76]	; 98c <rb_dlinkDelete.constprop.7+0x88>
 93c:	ldmib	r0, {r1, r2}
 940:	ldr	r3, [r3, ip]
 944:	cmp	r2, #0
 948:	strne	r1, [r2, #4]
 94c:	streq	r1, [r3, #4]
 950:	ldr	r1, [r0, #4]
 954:	cmp	r1, #0
 958:	strne	r2, [r1, #8]
 95c:	streq	r2, [r3]
 960:	mov	r2, #0
 964:	str	r2, [r0, #4]
 968:	str	r2, [r0, #8]
 96c:	ldr	r2, [r3, #8]
 970:	sub	r2, r2, #1
 974:	str	r2, [r3, #8]
 978:	bx	lr
 97c:	.word	0x000116ec
 980:	.word	0x0000066c
 984:	.word	0x000006da
 988:	.word	0x000006f2
 98c:	.word	0x00000054

00000990 <_moddeinit>:
 990:	push	{r4, r5, r6, lr}
 994:	mov	r2, #0
 998:	ldr	r6, [pc, #96]	; a00 <_moddeinit+0x70>
 99c:	ldr	r3, [pc, #96]	; a04 <_moddeinit+0x74>
 9a0:	add	r6, pc, r6
 9a4:	ldr	r3, [r6, r3]
 9a8:	str	r2, [r3, #448]	; 0x1c0
 9ac:	bl	728 <construct_umodebuf@plt>
 9b0:	ldr	r3, [pc, #80]	; a08 <_moddeinit+0x78>
 9b4:	ldr	r3, [r6, r3]
 9b8:	ldr	r4, [r3]
 9bc:	cmp	r4, #0
 9c0:	ldrne	r5, [r4, #8]
 9c4:	bne	9dc <_moddeinit+0x4c>
 9c8:	ldr	r3, [pc, #60]	; a0c <_moddeinit+0x7c>
 9cc:	ldr	r3, [r6, r3]
 9d0:	pop	{r4, r5, r6, lr}
 9d4:	ldr	r0, [r3]
 9d8:	b	698 <rb_event_delete@plt>
 9dc:	mov	r0, r4
 9e0:	bl	904 <rb_dlinkDelete.constprop.7>
 9e4:	ldr	r0, [r4]
 9e8:	bl	858 <rb_free>
 9ec:	cmp	r5, #0
 9f0:	beq	9c8 <_moddeinit+0x38>
 9f4:	mov	r4, r5
 9f8:	ldr	r5, [r5, #8]
 9fc:	b	9dc <_moddeinit+0x4c>
 a00:	.word	0x00011658
 a04:	.word	0x00000060
 a08:	.word	0x00000054
 a0c:	.word	0x0000005c

00000a10 <handle_client_exit>:
 a10:	ldr	r3, [pc, #84]	; a6c <handle_client_exit+0x5c>
 a14:	ldr	r2, [pc, #84]	; a70 <handle_client_exit+0x60>
 a18:	add	r3, pc, r3
 a1c:	ldr	r3, [r3, r2]
 a20:	ldr	r3, [r3]
 a24:	cmp	r3, #0
 a28:	bxeq	lr
 a2c:	push	{r4, r5, r6, lr}
 a30:	ldr	r6, [r0, #4]
 a34:	ldr	r4, [r3, #8]
 a38:	ldr	r5, [r3]
 a3c:	ldr	r2, [r5, #12]
 a40:	cmp	r2, r6
 a44:	bne	a58 <handle_client_exit+0x48>
 a48:	mov	r0, r3
 a4c:	bl	904 <rb_dlinkDelete.constprop.7>
 a50:	mov	r0, r5
 a54:	bl	858 <rb_free>
 a58:	cmp	r4, #0
 a5c:	popeq	{r4, r5, r6, pc}
 a60:	mov	r3, r4
 a64:	ldr	r4, [r4, #8]
 a68:	b	a38 <handle_client_exit+0x28>
 a6c:	.word	0x000115e0
 a70:	.word	0x00000054

00000a74 <update_session_deadline.constprop.5>:
 a74:	ldr	r3, [pc, #164]	; b20 <update_session_deadline.constprop.5+0xac>
 a78:	push	{r4, r5, r6, lr}
 a7c:	mov	r6, r0
 a80:	ldr	r2, [pc, #156]	; b24 <update_session_deadline.constprop.5+0xb0>
 a84:	add	r3, pc, r3
 a88:	ldr	r5, [r3, r2]
 a8c:	ldr	r3, [r5]
 a90:	cmp	r3, #0
 a94:	bne	ab4 <update_session_deadline.constprop.5+0x40>
 a98:	mov	r1, #20
 a9c:	mov	r0, #1
 aa0:	bl	668 <calloc@plt>
 aa4:	subs	r4, r0, #0
 aa8:	strne	r6, [r4, #12]
 aac:	bne	ac8 <update_session_deadline.constprop.5+0x54>
 ab0:	bl	6b0 <rb_outofmemory@plt>
 ab4:	ldr	r4, [r3]
 ab8:	ldr	r2, [r4, #12]
 abc:	cmp	r2, r6
 ac0:	ldrne	r3, [r3, #8]
 ac4:	bne	a90 <update_session_deadline.constprop.5+0x1c>
 ac8:	bl	674 <rb_current_time@plt>
 acc:	add	r0, r0, #1792	; 0x700
 ad0:	add	r0, r0, #8
 ad4:	str	r0, [r4, #16]
 ad8:	mov	r0, r4
 adc:	bl	904 <rb_dlinkDelete.constprop.7>
 ae0:	mov	r3, #0
 ae4:	str	r4, [r4]
 ae8:	str	r3, [r4, #4]
 aec:	ldr	r3, [r5]
 af0:	cmp	r3, #0
 af4:	str	r3, [r4, #8]
 af8:	strne	r4, [r3, #4]
 afc:	bne	b0c <update_session_deadline.constprop.5+0x98>
 b00:	ldr	r3, [r5, #4]
 b04:	cmp	r3, #0
 b08:	streq	r4, [r5, #4]
 b0c:	ldr	r3, [r5, #8]
 b10:	str	r4, [r5]
 b14:	add	r3, r3, #1
 b18:	str	r3, [r5, #8]
 b1c:	pop	{r4, r5, r6, pc}
 b20:	.word	0x00011574
 b24:	.word	0x00000054

00000b28 <_modinit>:
 b28:	push	{r4, r5, r6, lr}
 b2c:	ldr	r5, [pc, #144]	; bc4 <_modinit+0x9c>
 b30:	bl	6d4 <find_umode_slot@plt>
 b34:	ldr	r3, [pc, #140]	; bc8 <_modinit+0xa0>
 b38:	add	r5, pc, r5
 b3c:	ldr	r6, [r5, r3]
 b40:	str	r0, [r6, #448]	; 0x1c0
 b44:	bl	728 <construct_umodebuf@plt>
 b48:	ldr	r3, [pc, #124]	; bcc <_modinit+0xa4>
 b4c:	ldr	r3, [r5, r3]
 b50:	ldr	r4, [r3]
 b54:	cmp	r4, #0
 b58:	bne	b8c <_modinit+0x64>
 b5c:	ldr	r1, [pc, #108]	; bd0 <_modinit+0xa8>
 b60:	mov	r3, #60	; 0x3c
 b64:	mov	r2, r4
 b68:	ldr	r0, [pc, #100]	; bd4 <_modinit+0xac>
 b6c:	add	r1, pc, r1
 b70:	add	r0, pc, r0
 b74:	bl	680 <rb_event_add@plt>
 b78:	ldr	r3, [pc, #88]	; bd8 <_modinit+0xb0>
 b7c:	ldr	r3, [r5, r3]
 b80:	str	r0, [r3]
 b84:	mov	r0, r4
 b88:	pop	{r4, r5, r6, pc}
 b8c:	ldr	r0, [r4]
 b90:	ldrh	r3, [r0, #80]	; 0x50
 b94:	cmp	r3, #64	; 0x40
 b98:	bne	bbc <_modinit+0x94>
 b9c:	ldr	r3, [r0, #24]
 ba0:	cmp	r3, #0
 ba4:	beq	bbc <_modinit+0x94>
 ba8:	ldr	r2, [r0, #56]	; 0x38
 bac:	ldr	r3, [r6, #448]	; 0x1c0
 bb0:	tst	r2, r3
 bb4:	beq	bbc <_modinit+0x94>
 bb8:	bl	a74 <update_session_deadline.constprop.5>
 bbc:	ldr	r4, [r4, #8]
 bc0:	b	b54 <_modinit+0x2c>
 bc4:	.word	0x000114c0
 bc8:	.word	0x00000060
 bcc:	.word	0x00000068
 bd0:	.word	0xfffffcf0
 bd4:	.word	0x000004bc
 bd8:	.word	0x0000005c

00000bdc <check_umode_change>:
 bdc:	push	{r4, r5, r6, r7, r8, lr}
 be0:	mov	r7, #0
 be4:	ldr	r4, [r0]
 be8:	ldr	r2, [pc, #272]	; d00 <check_umode_change+0x124>
 bec:	ldr	r3, [r4, #64]	; 0x40
 bf0:	add	r2, pc, r2
 bf4:	and	r6, r3, #8192	; 0x2000
 bf8:	orrs	r3, r6, r7
 bfc:	popeq	{r4, r5, r6, r7, r8, pc}
 c00:	ldrh	r3, [r4, #80]	; 0x50
 c04:	cmp	r3, #64	; 0x40
 c08:	popne	{r4, r5, r6, r7, r8, pc}
 c0c:	ldr	r5, [r0, #4]
 c10:	ldr	r3, [pc, #236]	; d04 <check_umode_change+0x128>
 c14:	tst	r5, #4096	; 0x1000
 c18:	ldr	r6, [r2, r3]
 c1c:	beq	c34 <check_umode_change+0x58>
 c20:	ldr	r3, [r4, #56]	; 0x38
 c24:	tst	r3, #4096	; 0x1000
 c28:	ldreq	r1, [r6, #448]	; 0x1c0
 c2c:	biceq	r3, r3, r1
 c30:	streq	r3, [r4, #56]	; 0x38
 c34:	ldr	r1, [r4, #56]	; 0x38
 c38:	ldr	r3, [r6, #448]	; 0x1c0
 c3c:	eor	r5, r5, r1
 c40:	tst	r1, r3
 c44:	and	r5, r5, r3
 c48:	beq	cb0 <check_umode_change+0xd4>
 c4c:	ldr	r3, [r4, #24]
 c50:	cmp	r3, #0
 c54:	bne	c7c <check_umode_change+0xa0>
 c58:	ldr	r1, [pc, #168]	; d08 <check_umode_change+0x12c>
 c5c:	mov	r0, r4
 c60:	add	r1, pc, r1
 c64:	bl	704 <sendto_one_notice@plt>
 c68:	ldr	r3, [r4, #56]	; 0x38
 c6c:	ldr	r2, [r6, #448]	; 0x1c0
 c70:	bic	r3, r3, r2
 c74:	str	r3, [r4, #56]	; 0x38
 c78:	pop	{r4, r5, r6, r7, r8, pc}
 c7c:	ldr	r0, [r3, #36]	; 0x24
 c80:	cmp	r0, #0
 c84:	beq	c58 <check_umode_change+0x7c>
 c88:	ldr	r1, [pc, #124]	; d0c <check_umode_change+0x130>
 c8c:	add	r1, pc, r1
 c90:	bl	710 <privilegeset_in_set@plt>
 c94:	cmp	r0, #0
 c98:	beq	c58 <check_umode_change+0x7c>
 c9c:	cmp	r5, #0
 ca0:	popeq	{r4, r5, r6, r7, r8, pc}
 ca4:	mov	r0, r4
 ca8:	pop	{r4, r5, r6, r7, r8, lr}
 cac:	b	a74 <update_session_deadline.constprop.5>
 cb0:	cmp	r5, #0
 cb4:	popeq	{r4, r5, r6, r7, r8, pc}
 cb8:	ldr	r3, [pc, #80]	; d10 <check_umode_change+0x134>
 cbc:	ldr	r3, [r2, r3]
 cc0:	ldr	r0, [r3]
 cc4:	cmp	r0, #0
 cc8:	popeq	{r4, r5, r6, r7, r8, pc}
 ccc:	ldr	r5, [r0, #8]
 cd0:	ldr	r6, [r0]
 cd4:	ldr	r3, [r6, #12]
 cd8:	cmp	r3, r4
 cdc:	bne	cec <check_umode_change+0x110>
 ce0:	bl	904 <rb_dlinkDelete.constprop.7>
 ce4:	mov	r0, r6
 ce8:	bl	858 <rb_free>
 cec:	cmp	r5, #0
 cf0:	popeq	{r4, r5, r6, r7, r8, pc}
 cf4:	mov	r0, r5
 cf8:	ldr	r5, [r5, #8]
 cfc:	b	cd0 <check_umode_change+0xf4>
 d00:	.word	0x00011408
 d04:	.word	0x00000060
 d08:	.word	0x000003e6
 d0c:	.word	0x000003e7
 d10:	.word	0x00000054

00000d14 <hack_can_kick>:
 d14:	push	{r0, r1, r2, r4, r5, lr}
 d18:	mov	r3, #0
 d1c:	mov	r4, r0
 d20:	ldr	r5, [pc, #124]	; da4 <hack_can_kick+0x90>
 d24:	str	r3, [sp]
 d28:	ldmib	r0, {r1, r2}
 d2c:	ldr	r3, [r0, #20]
 d30:	add	r5, pc, r5
 d34:	ldr	r0, [r0]
 d38:	bl	6f8 <get_channel_access@plt>
 d3c:	cmp	r0, #4
 d40:	bne	d9c <hack_can_kick+0x88>
 d44:	ldr	r3, [pc, #92]	; da8 <hack_can_kick+0x94>
 d48:	ldr	r0, [r4]
 d4c:	ldr	r3, [r5, r3]
 d50:	ldr	r2, [r0, #56]	; 0x38
 d54:	ldr	r3, [r3, #448]	; 0x1c0
 d58:	tst	r2, r3
 d5c:	beq	d9c <hack_can_kick+0x88>
 d60:	bl	a74 <update_session_deadline.constprop.5>
 d64:	ldr	r0, [r4]
 d68:	bl	6e0 <get_oper_name@plt>
 d6c:	ldr	r3, [r4, #12]
 d70:	mov	r1, #256	; 0x100
 d74:	ldr	r2, [pc, #48]	; dac <hack_can_kick+0x98>
 d78:	add	r3, r3, #88	; 0x58
 d7c:	str	r3, [sp, #4]
 d80:	add	r2, pc, r2
 d84:	ldr	r3, [r4, #4]
 d88:	ldr	r3, [r3, #236]	; 0xec
 d8c:	str	r3, [sp]
 d90:	mov	r3, r0
 d94:	mov	r0, r1
 d98:	bl	6c8 <sendto_realops_snomask@plt>
 d9c:	add	sp, sp, #12
 da0:	pop	{r4, r5, pc}
 da4:	.word	0x000112c8
 da8:	.word	0x00000060
 dac:	.word	0x00000301

00000db0 <hack_channel_access>:
 db0:	ldr	r2, [r0, #20]
 db4:	ldr	r3, [pc, #140]	; e48 <hack_channel_access+0x98>
 db8:	cmp	r2, #0
 dbc:	add	r3, pc, r3
 dc0:	bxeq	lr
 dc4:	push	{r0, r1, r4, lr}
 dc8:	mov	r4, r0
 dcc:	ldr	r2, [r0, #16]
 dd0:	cmp	r2, #2
 dd4:	beq	e40 <hack_channel_access+0x90>
 dd8:	ldr	r2, [pc, #108]	; e4c <hack_channel_access+0x9c>
 ddc:	ldr	r0, [r0]
 de0:	ldr	r3, [r3, r2]
 de4:	ldr	r2, [r0, #56]	; 0x38
 de8:	ldr	r3, [r3, #448]	; 0x1c0
 dec:	tst	r2, r3
 df0:	beq	e40 <hack_channel_access+0x90>
 df4:	bl	a74 <update_session_deadline.constprop.5>
 df8:	mov	r3, #4
 dfc:	str	r3, [r4, #16]
 e00:	ldr	r3, [r4, #24]
 e04:	cmp	r3, #0
 e08:	beq	e40 <hack_channel_access+0x90>
 e0c:	ldr	r0, [r4]
 e10:	bl	6e0 <get_oper_name@plt>
 e14:	ldr	r3, [r4, #24]
 e18:	mov	r1, #256	; 0x100
 e1c:	ldr	r2, [pc, #44]	; e50 <hack_channel_access+0xa0>
 e20:	str	r3, [sp, #4]
 e24:	ldr	r3, [r4, #4]
 e28:	add	r2, pc, r2
 e2c:	ldr	r3, [r3, #236]	; 0xec
 e30:	str	r3, [sp]
 e34:	mov	r3, r0
 e38:	mov	r0, r1
 e3c:	bl	6c8 <sendto_realops_snomask@plt>
 e40:	add	sp, sp, #8
 e44:	pop	{r4, pc}
 e48:	.word	0x0001123c
 e4c:	.word	0x00000060
 e50:	.word	0x00000283

00000e54 <hack_can_join>:
 e54:	ldr	r2, [r0, #8]
 e58:	ldr	r3, [pc, #108]	; ecc <hack_can_join+0x78>
 e5c:	cmp	r2, #0
 e60:	add	r3, pc, r3
 e64:	bxeq	lr
 e68:	push	{r0, r1, r4, lr}
 e6c:	mov	r4, r0
 e70:	ldr	r2, [pc, #88]	; ed0 <hack_can_join+0x7c>
 e74:	ldr	r0, [r0]
 e78:	ldr	r3, [r3, r2]
 e7c:	ldr	r2, [r0, #56]	; 0x38
 e80:	ldr	r3, [r3, #448]	; 0x1c0
 e84:	tst	r2, r3
 e88:	beq	ec4 <hack_can_join+0x70>
 e8c:	bl	a74 <update_session_deadline.constprop.5>
 e90:	mov	r3, #0
 e94:	ldr	r0, [r4]
 e98:	str	r3, [r4, #8]
 e9c:	bl	6e0 <get_oper_name@plt>
 ea0:	ldr	r3, [r4, #4]
 ea4:	mov	r1, #256	; 0x100
 ea8:	ldr	r2, [pc, #36]	; ed4 <hack_can_join+0x80>
 eac:	ldr	r3, [r3, #236]	; 0xec
 eb0:	add	r2, pc, r2
 eb4:	str	r3, [sp]
 eb8:	mov	r3, r0
 ebc:	mov	r0, r1
 ec0:	bl	6c8 <sendto_realops_snomask@plt>
 ec4:	add	sp, sp, #8
 ec8:	pop	{r4, pc}
 ecc:	.word	0x00011198
 ed0:	.word	0x00000060
 ed4:	.word	0x0000022d

00000ed8 <hack_can_send>:
 ed8:	ldr	r3, [r0, #20]
 edc:	push	{r0, r1, r2, r4, r5, lr}
 ee0:	ldr	r2, [pc, #156]	; f84 <hack_can_send+0xac>
 ee4:	cmp	r3, #0
 ee8:	add	r2, pc, r2
 eec:	beq	f7c <hack_can_send+0xa4>
 ef0:	ldr	r3, [r0, #16]
 ef4:	sub	r3, r3, #1
 ef8:	cmp	r3, #1
 efc:	bls	f7c <hack_can_send+0xa4>
 f00:	ldr	r1, [pc, #128]	; f88 <hack_can_send+0xb0>
 f04:	ldr	r3, [r0]
 f08:	ldr	r2, [r2, r1]
 f0c:	ldr	r1, [r3, #56]	; 0x38
 f10:	ldr	r2, [r2, #448]	; 0x1c0
 f14:	tst	r1, r2
 f18:	beq	f7c <hack_can_send+0xa4>
 f1c:	mov	r2, #1
 f20:	mov	r5, #0
 f24:	str	r2, [r0, #16]
 f28:	ldr	r2, [r3, #64]	; 0x40
 f2c:	and	r4, r2, #8192	; 0x2000
 f30:	orrs	r2, r4, r5
 f34:	beq	f7c <hack_can_send+0xa4>
 f38:	ldrh	r2, [r3, #80]	; 0x50
 f3c:	cmp	r2, #64	; 0x40
 f40:	bne	f7c <hack_can_send+0xa4>
 f44:	mov	r4, r0
 f48:	mov	r0, r3
 f4c:	bl	a74 <update_session_deadline.constprop.5>
 f50:	ldr	r0, [r4]
 f54:	bl	6e0 <get_oper_name@plt>
 f58:	ldr	r3, [r4, #4]
 f5c:	mov	r1, #256	; 0x100
 f60:	ldr	r2, [pc, #36]	; f8c <hack_can_send+0xb4>
 f64:	ldr	r3, [r3, #236]	; 0xec
 f68:	add	r2, pc, r2
 f6c:	str	r3, [sp]
 f70:	mov	r3, r0
 f74:	mov	r0, r1
 f78:	bl	6c8 <sendto_realops_snomask@plt>
 f7c:	add	sp, sp, #12
 f80:	pop	{r4, r5, pc}
 f84:	.word	0x00011110
 f88:	.word	0x00000060
 f8c:	.word	0x000001a2

Disassembly of section .fini:

00000f90 <_fini>:
 f90:	push	{r3, lr}
 f94:	pop	{r3, pc}
