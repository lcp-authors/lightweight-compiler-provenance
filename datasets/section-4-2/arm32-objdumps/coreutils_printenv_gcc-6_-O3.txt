
../repos/coreutils/src/printenv:     file format elf32-littlearm


Disassembly of section .init:

00010b28 <.init>:
   10b28:	push	{r3, lr}
   10b2c:	bl	10fec <abort@plt+0x2a0>
   10b30:	pop	{r3, pc}

Disassembly of section .plt:

00010b34 <calloc@plt-0x14>:
   10b34:	push	{lr}		; (str lr, [sp, #-4]!)
   10b38:	ldr	lr, [pc, #4]	; 10b44 <calloc@plt-0x4>
   10b3c:	add	lr, pc, lr
   10b40:	ldr	pc, [lr, #8]!
   10b44:			; <UNDEFINED> instruction: 0x000174bc

00010b48 <calloc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #94208	; 0x17000
   10b50:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b54 <fputs_unlocked@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #94208	; 0x17000
   10b5c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b60 <raise@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #94208	; 0x17000
   10b68:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b6c <strcmp@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #94208	; 0x17000
   10b74:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b78 <fflush@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #94208	; 0x17000
   10b80:	ldr	pc, [ip, #1180]!	; 0x49c

00010b84 <free@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #94208	; 0x17000
   10b8c:	ldr	pc, [ip, #1172]!	; 0x494

00010b90 <_exit@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #94208	; 0x17000
   10b98:	ldr	pc, [ip, #1164]!	; 0x48c

00010b9c <memcpy@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #94208	; 0x17000
   10ba4:	ldr	pc, [ip, #1156]!	; 0x484

00010ba8 <mbsinit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #94208	; 0x17000
   10bb0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb4 <memcmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #94208	; 0x17000
   10bbc:	ldr	pc, [ip, #1140]!	; 0x474

00010bc0 <fputc_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #94208	; 0x17000
   10bc8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bcc <dcgettext@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #94208	; 0x17000
   10bd4:	ldr	pc, [ip, #1124]!	; 0x464

00010bd8 <realloc@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #94208	; 0x17000
   10be0:	ldr	pc, [ip, #1116]!	; 0x45c

00010be4 <textdomain@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #94208	; 0x17000
   10bec:	ldr	pc, [ip, #1108]!	; 0x454

00010bf0 <iswprint@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #94208	; 0x17000
   10bf8:	ldr	pc, [ip, #1100]!	; 0x44c

00010bfc <fwrite@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #94208	; 0x17000
   10c04:	ldr	pc, [ip, #1092]!	; 0x444

00010c08 <lseek64@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #94208	; 0x17000
   10c10:	ldr	pc, [ip, #1084]!	; 0x43c

00010c14 <__ctype_get_mb_cur_max@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #94208	; 0x17000
   10c1c:	ldr	pc, [ip, #1076]!	; 0x434

00010c20 <__fpending@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #94208	; 0x17000
   10c28:	ldr	pc, [ip, #1068]!	; 0x42c

00010c2c <mbrtowc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #94208	; 0x17000
   10c34:	ldr	pc, [ip, #1060]!	; 0x424

00010c38 <error@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #94208	; 0x17000
   10c40:	ldr	pc, [ip, #1052]!	; 0x41c

00010c44 <malloc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #94208	; 0x17000
   10c4c:	ldr	pc, [ip, #1044]!	; 0x414

00010c50 <__libc_start_main@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #94208	; 0x17000
   10c58:	ldr	pc, [ip, #1036]!	; 0x40c

00010c5c <__freading@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #94208	; 0x17000
   10c64:	ldr	pc, [ip, #1028]!	; 0x404

00010c68 <__gmon_start__@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #94208	; 0x17000
   10c70:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c74 <getopt_long@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #94208	; 0x17000
   10c7c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c80 <__ctype_b_loc@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #94208	; 0x17000
   10c88:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c8c <exit@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #94208	; 0x17000
   10c94:	ldr	pc, [ip, #996]!	; 0x3e4

00010c98 <strlen@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #988]!	; 0x3dc

00010ca4 <strchr@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #980]!	; 0x3d4

00010cb0 <__errno_location@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #972]!	; 0x3cc

00010cbc <__cxa_atexit@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #964]!	; 0x3c4

00010cc8 <memset@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #956]!	; 0x3bc

00010cd4 <__printf_chk@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #948]!	; 0x3b4

00010ce0 <fileno@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #940]!	; 0x3ac

00010cec <__fprintf_chk@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #932]!	; 0x3a4

00010cf8 <fclose@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #924]!	; 0x39c

00010d04 <fseeko64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #916]!	; 0x394

00010d10 <setlocale@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #908]!	; 0x38c

00010d1c <strrchr@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #900]!	; 0x384

00010d28 <nl_langinfo@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #892]!	; 0x37c

00010d34 <bindtextdomain@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #884]!	; 0x374

00010d40 <strncmp@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #876]!	; 0x36c

00010d4c <abort@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #868]!	; 0x364

Disassembly of section .text:

00010d58 <.text>:
   10d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d5c:	mov	r5, r0
   10d60:	sub	sp, sp, #28
   10d64:	ldr	r0, [r1]
   10d68:	mov	r4, r1
   10d6c:	bl	114c8 <abort@plt+0x77c>
   10d70:	ldr	r1, [pc, #504]	; 10f70 <abort@plt+0x224>
   10d74:	mov	r0, #6
   10d78:	bl	10d10 <setlocale@plt>
   10d7c:	ldr	r1, [pc, #496]	; 10f74 <abort@plt+0x228>
   10d80:	ldr	r0, [pc, #496]	; 10f78 <abort@plt+0x22c>
   10d84:	bl	10d34 <bindtextdomain@plt>
   10d88:	ldr	r0, [pc, #488]	; 10f78 <abort@plt+0x22c>
   10d8c:	bl	10be4 <textdomain@plt>
   10d90:	ldr	r3, [pc, #484]	; 10f7c <abort@plt+0x230>
   10d94:	mov	r2, #2
   10d98:	ldr	r0, [pc, #480]	; 10f80 <abort@plt+0x234>
   10d9c:	str	r2, [r3]
   10da0:	bl	16fa4 <abort@plt+0x6258>
   10da4:	mov	r7, #0
   10da8:	ldr	r9, [pc, #468]	; 10f84 <abort@plt+0x238>
   10dac:	ldr	r8, [pc, #468]	; 10f88 <abort@plt+0x23c>
   10db0:	mov	r6, r7
   10db4:	mov	sl, #1
   10db8:	str	r6, [sp]
   10dbc:	mov	r3, r9
   10dc0:	mov	r2, r8
   10dc4:	mov	r1, r4
   10dc8:	mov	r0, r5
   10dcc:	bl	10c74 <getopt_long@plt>
   10dd0:	cmn	r0, #1
   10dd4:	beq	10e3c <abort@plt+0xf0>
   10dd8:	cmn	r0, #2
   10ddc:	mov	r7, sl
   10de0:	beq	10e34 <abort@plt+0xe8>
   10de4:	cmp	r0, #48	; 0x30
   10de8:	beq	10db8 <abort@plt+0x6c>
   10dec:	cmn	r0, #3
   10df0:	beq	10dfc <abort@plt+0xb0>
   10df4:	mov	r0, #2
   10df8:	bl	110d8 <abort@plt+0x38c>
   10dfc:	ldr	r3, [pc, #392]	; 10f8c <abort@plt+0x240>
   10e00:	ldr	r0, [pc, #392]	; 10f90 <abort@plt+0x244>
   10e04:	ldr	r1, [pc, #392]	; 10f94 <abort@plt+0x248>
   10e08:	ldr	r2, [pc, #392]	; 10f98 <abort@plt+0x24c>
   10e0c:	str	r6, [sp, #8]
   10e10:	ldr	r0, [r0]
   10e14:	ldr	r3, [r3]
   10e18:	str	r1, [sp, #4]
   10e1c:	str	r2, [sp]
   10e20:	ldr	r1, [pc, #372]	; 10f9c <abort@plt+0x250>
   10e24:	ldr	r2, [pc, #372]	; 10fa0 <abort@plt+0x254>
   10e28:	bl	15d68 <abort@plt+0x501c>
   10e2c:	mov	r0, #0
   10e30:	bl	10c8c <exit@plt>
   10e34:	mov	r0, #0
   10e38:	bl	110d8 <abort@plt+0x38c>
   10e3c:	ldr	r9, [pc, #352]	; 10fa4 <abort@plt+0x258>
   10e40:	ldr	r6, [r9]
   10e44:	cmp	r5, r6
   10e48:	bgt	10e9c <abort@plt+0x150>
   10e4c:	ldr	r3, [pc, #340]	; 10fa8 <abort@plt+0x25c>
   10e50:	cmp	r7, #0
   10e54:	moveq	r7, #10
   10e58:	ldr	r4, [r3]
   10e5c:	movne	r7, #0
   10e60:	ldr	r6, [pc, #324]	; 10fac <abort@plt+0x260>
   10e64:	mov	r5, #1
   10e68:	sub	r4, r4, #4
   10e6c:	b	10e80 <abort@plt+0x134>
   10e70:	mov	r3, r7
   10e74:	mov	r1, r6
   10e78:	mov	r0, r5
   10e7c:	bl	10cd4 <__printf_chk@plt>
   10e80:	ldr	r2, [r4, #4]!
   10e84:	cmp	r2, #0
   10e88:	bne	10e70 <abort@plt+0x124>
   10e8c:	mov	r0, #1
   10e90:	eor	r0, r0, #1
   10e94:	add	sp, sp, #28
   10e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e9c:	mov	r8, #0
   10ea0:	cmp	r7, r8
   10ea4:	moveq	r3, #10
   10ea8:	movne	r3, r8
   10eac:	ldr	fp, [pc, #244]	; 10fa8 <abort@plt+0x25c>
   10eb0:	str	r3, [sp, #20]
   10eb4:	b	10ec4 <abort@plt+0x178>
   10eb8:	add	r6, r6, #1
   10ebc:	cmp	r5, r6
   10ec0:	beq	10f58 <abort@plt+0x20c>
   10ec4:	mov	r1, #61	; 0x3d
   10ec8:	ldr	r0, [r4, r6, lsl #2]
   10ecc:	bl	10ca4 <strchr@plt>
   10ed0:	cmp	r0, #0
   10ed4:	bne	10eb8 <abort@plt+0x16c>
   10ed8:	ldr	r7, [fp]
   10edc:	mov	lr, #0
   10ee0:	sub	r7, r7, #4
   10ee4:	mov	sl, #1
   10ee8:	ldr	r3, [r7, #4]!
   10eec:	cmp	r3, #0
   10ef0:	beq	10f50 <abort@plt+0x204>
   10ef4:	ldr	ip, [r4, r6, lsl #2]
   10ef8:	mov	r2, r3
   10efc:	ldrb	r1, [r3], #1
   10f00:	cmp	r1, #0
   10f04:	beq	10ee8 <abort@plt+0x19c>
   10f08:	ldrb	r0, [ip], #1
   10f0c:	cmp	r0, #0
   10f10:	beq	10ee8 <abort@plt+0x19c>
   10f14:	cmp	r1, r0
   10f18:	bne	10ee8 <abort@plt+0x19c>
   10f1c:	ldrb	r1, [r3]
   10f20:	cmp	r1, #61	; 0x3d
   10f24:	bne	10ef8 <abort@plt+0x1ac>
   10f28:	ldrb	r1, [ip]
   10f2c:	cmp	r1, #0
   10f30:	bne	10ef8 <abort@plt+0x1ac>
   10f34:	add	r2, r2, #2
   10f38:	ldr	r3, [sp, #20]
   10f3c:	ldr	r1, [pc, #104]	; 10fac <abort@plt+0x260>
   10f40:	mov	r0, sl
   10f44:	bl	10cd4 <__printf_chk@plt>
   10f48:	mov	lr, sl
   10f4c:	b	10ee8 <abort@plt+0x19c>
   10f50:	add	r8, r8, lr
   10f54:	b	10eb8 <abort@plt+0x16c>
   10f58:	ldr	r0, [r9]
   10f5c:	sub	r0, r5, r0
   10f60:	sub	r0, r0, r8
   10f64:	clz	r0, r0
   10f68:	lsr	r0, r0, #5
   10f6c:	b	10e90 <abort@plt+0x144>
   10f70:	andeq	r7, r1, r8, asr r1
   10f74:	andeq	r7, r1, r0, ror r3
   10f78:	andeq	r7, r1, r8, asr #5
   10f7c:	andeq	r8, r2, ip, asr #1
   10f80:	andeq	r1, r1, r4, ror #7
   10f84:	andeq	r7, r1, r0
   10f88:	andeq	r7, r1, ip, lsr #7
   10f8c:	andeq	r8, r2, r8, asr #1
   10f90:	andeq	r8, r2, ip, lsr #2
   10f94:	andeq	r7, r1, r8, lsl #7
   10f98:	muleq	r1, ip, r3
   10f9c:	andeq	r7, r1, r0, asr #32
   10fa0:	andeq	r7, r1, r4, asr #5
   10fa4:	andeq	r8, r2, r0, lsr #2
   10fa8:	andeq	r8, r2, r4, lsl r1
   10fac:			; <UNDEFINED> instruction: 0x000173b4
   10fb0:	mov	fp, #0
   10fb4:	mov	lr, #0
   10fb8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fbc:	mov	r2, sp
   10fc0:	push	{r2}		; (str r2, [sp, #-4]!)
   10fc4:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc8:	ldr	ip, [pc, #16]	; 10fe0 <abort@plt+0x294>
   10fcc:	push	{ip}		; (str ip, [sp, #-4]!)
   10fd0:	ldr	r0, [pc, #12]	; 10fe4 <abort@plt+0x298>
   10fd4:	ldr	r3, [pc, #12]	; 10fe8 <abort@plt+0x29c>
   10fd8:	bl	10c50 <__libc_start_main@plt>
   10fdc:	bl	10d4c <abort@plt>
   10fe0:	andeq	r6, r1, r0, lsr #31
   10fe4:	andeq	r0, r1, r8, asr sp
   10fe8:	andeq	r6, r1, r0, asr #30
   10fec:	ldr	r3, [pc, #20]	; 11008 <abort@plt+0x2bc>
   10ff0:	ldr	r2, [pc, #20]	; 1100c <abort@plt+0x2c0>
   10ff4:	add	r3, pc, r3
   10ff8:	ldr	r2, [r3, r2]
   10ffc:	cmp	r2, #0
   11000:	bxeq	lr
   11004:	b	10c68 <__gmon_start__@plt>
   11008:	andeq	r7, r1, r4
   1100c:	strheq	r0, [r0], -ip
   11010:	ldr	r3, [pc, #28]	; 11034 <abort@plt+0x2e8>
   11014:	ldr	r0, [pc, #28]	; 11038 <abort@plt+0x2ec>
   11018:	sub	r3, r3, r0
   1101c:	cmp	r3, #6
   11020:	bxls	lr
   11024:	ldr	r3, [pc, #16]	; 1103c <abort@plt+0x2f0>
   11028:	cmp	r3, #0
   1102c:	bxeq	lr
   11030:	bx	r3
   11034:	andeq	r8, r2, r3, lsl r1
   11038:	andeq	r8, r2, r0, lsl r1
   1103c:	andeq	r0, r0, r0
   11040:	ldr	r1, [pc, #36]	; 1106c <abort@plt+0x320>
   11044:	ldr	r0, [pc, #36]	; 11070 <abort@plt+0x324>
   11048:	sub	r1, r1, r0
   1104c:	asr	r1, r1, #2
   11050:	add	r1, r1, r1, lsr #31
   11054:	asrs	r1, r1, #1
   11058:	bxeq	lr
   1105c:	ldr	r3, [pc, #16]	; 11074 <abort@plt+0x328>
   11060:	cmp	r3, #0
   11064:	bxeq	lr
   11068:	bx	r3
   1106c:	andeq	r8, r2, r0, lsl r1
   11070:	andeq	r8, r2, r0, lsl r1
   11074:	andeq	r0, r0, r0
   11078:	push	{r4, lr}
   1107c:	ldr	r4, [pc, #24]	; 1109c <abort@plt+0x350>
   11080:	ldrb	r3, [r4]
   11084:	cmp	r3, #0
   11088:	popne	{r4, pc}
   1108c:	bl	11010 <abort@plt+0x2c4>
   11090:	mov	r3, #1
   11094:	strb	r3, [r4]
   11098:	pop	{r4, pc}
   1109c:	andeq	r8, r2, r0, lsr r1
   110a0:	ldr	r0, [pc, #40]	; 110d0 <abort@plt+0x384>
   110a4:	ldr	r3, [r0]
   110a8:	cmp	r3, #0
   110ac:	bne	110b4 <abort@plt+0x368>
   110b0:	b	11040 <abort@plt+0x2f4>
   110b4:	ldr	r3, [pc, #24]	; 110d4 <abort@plt+0x388>
   110b8:	cmp	r3, #0
   110bc:	beq	110b0 <abort@plt+0x364>
   110c0:	push	{r4, lr}
   110c4:	blx	r3
   110c8:	pop	{r4, lr}
   110cc:	b	11040 <abort@plt+0x2f4>
   110d0:	andeq	r7, r2, r4, lsl pc
   110d4:	andeq	r0, r0, r0
   110d8:	subs	r6, r0, #0
   110dc:	push	{r7, lr}
   110e0:	sub	sp, sp, #56	; 0x38
   110e4:	beq	11120 <abort@plt+0x3d4>
   110e8:	ldr	r3, [pc, #644]	; 11374 <abort@plt+0x628>
   110ec:	mov	r2, #5
   110f0:	ldr	r1, [pc, #640]	; 11378 <abort@plt+0x62c>
   110f4:	mov	r0, #0
   110f8:	ldr	r4, [r3]
   110fc:	bl	10bcc <dcgettext@plt>
   11100:	ldr	r3, [pc, #628]	; 1137c <abort@plt+0x630>
   11104:	mov	r1, #1
   11108:	ldr	r3, [r3]
   1110c:	mov	r2, r0
   11110:	mov	r0, r4
   11114:	bl	10cec <__fprintf_chk@plt>
   11118:	mov	r0, r6
   1111c:	bl	10c8c <exit@plt>
   11120:	mov	r2, #5
   11124:	ldr	r1, [pc, #596]	; 11380 <abort@plt+0x634>
   11128:	bl	10bcc <dcgettext@plt>
   1112c:	ldr	r3, [pc, #584]	; 1137c <abort@plt+0x630>
   11130:	ldr	r7, [pc, #588]	; 11384 <abort@plt+0x638>
   11134:	ldr	r4, [pc, #588]	; 11388 <abort@plt+0x63c>
   11138:	ldr	r2, [r3]
   1113c:	mov	r1, r0
   11140:	mov	r0, #1
   11144:	bl	10cd4 <__printf_chk@plt>
   11148:	mov	r2, #5
   1114c:	ldr	r1, [pc, #568]	; 1138c <abort@plt+0x640>
   11150:	mov	r0, r6
   11154:	bl	10bcc <dcgettext@plt>
   11158:	ldr	r1, [r7]
   1115c:	bl	10b54 <fputs_unlocked@plt>
   11160:	mov	r2, #5
   11164:	ldr	r1, [pc, #548]	; 11390 <abort@plt+0x644>
   11168:	mov	r0, r6
   1116c:	bl	10bcc <dcgettext@plt>
   11170:	ldr	r1, [r7]
   11174:	bl	10b54 <fputs_unlocked@plt>
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #528]	; 11394 <abort@plt+0x648>
   11180:	mov	r0, r6
   11184:	bl	10bcc <dcgettext@plt>
   11188:	ldr	r1, [r7]
   1118c:	bl	10b54 <fputs_unlocked@plt>
   11190:	mov	r2, #5
   11194:	ldr	r1, [pc, #508]	; 11398 <abort@plt+0x64c>
   11198:	mov	r0, r6
   1119c:	bl	10bcc <dcgettext@plt>
   111a0:	ldr	r2, [pc, #500]	; 1139c <abort@plt+0x650>
   111a4:	mov	r1, r0
   111a8:	mov	r0, #1
   111ac:	bl	10cd4 <__printf_chk@plt>
   111b0:	ldm	r4!, {r0, r1, r2, r3}
   111b4:	mov	lr, sp
   111b8:	stmia	lr!, {r0, r1, r2, r3}
   111bc:	ldm	r4!, {r0, r1, r2, r3}
   111c0:	ldr	ip, [sp]
   111c4:	stmia	lr!, {r0, r1, r2, r3}
   111c8:	cmp	ip, #0
   111cc:	ldm	r4!, {r0, r1, r2, r3}
   111d0:	stmia	lr!, {r0, r1, r2, r3}
   111d4:	ldm	r4, {r0, r1}
   111d8:	moveq	r4, sp
   111dc:	stm	lr, {r0, r1}
   111e0:	beq	11210 <abort@plt+0x4c4>
   111e4:	ldr	r5, [pc, #432]	; 1139c <abort@plt+0x650>
   111e8:	mov	r4, sp
   111ec:	b	111fc <abort@plt+0x4b0>
   111f0:	ldr	ip, [r4, #8]!
   111f4:	cmp	ip, #0
   111f8:	beq	11210 <abort@plt+0x4c4>
   111fc:	mov	r1, ip
   11200:	mov	r0, r5
   11204:	bl	10b6c <strcmp@plt>
   11208:	cmp	r0, #0
   1120c:	bne	111f0 <abort@plt+0x4a4>
   11210:	ldr	r4, [r4, #4]
   11214:	mov	r2, #5
   11218:	cmp	r4, #0
   1121c:	ldr	r1, [pc, #380]	; 113a0 <abort@plt+0x654>
   11220:	beq	112c8 <abort@plt+0x57c>
   11224:	mov	r0, #0
   11228:	bl	10bcc <dcgettext@plt>
   1122c:	ldr	r3, [pc, #368]	; 113a4 <abort@plt+0x658>
   11230:	ldr	r2, [pc, #368]	; 113a8 <abort@plt+0x65c>
   11234:	mov	r1, r0
   11238:	mov	r0, #1
   1123c:	bl	10cd4 <__printf_chk@plt>
   11240:	mov	r1, #0
   11244:	mov	r0, #5
   11248:	bl	10d10 <setlocale@plt>
   1124c:	cmp	r0, #0
   11250:	ldreq	r5, [pc, #324]	; 1139c <abort@plt+0x650>
   11254:	beq	11270 <abort@plt+0x524>
   11258:	mov	r2, #3
   1125c:	ldr	r1, [pc, #328]	; 113ac <abort@plt+0x660>
   11260:	bl	10d40 <strncmp@plt>
   11264:	ldr	r5, [pc, #304]	; 1139c <abort@plt+0x650>
   11268:	cmp	r0, #0
   1126c:	bne	11358 <abort@plt+0x60c>
   11270:	mov	r2, #5
   11274:	ldr	r1, [pc, #308]	; 113b0 <abort@plt+0x664>
   11278:	mov	r0, #0
   1127c:	bl	10bcc <dcgettext@plt>
   11280:	ldr	r3, [pc, #276]	; 1139c <abort@plt+0x650>
   11284:	ldr	r2, [pc, #280]	; 113a4 <abort@plt+0x658>
   11288:	mov	r1, r0
   1128c:	mov	r0, #1
   11290:	bl	10cd4 <__printf_chk@plt>
   11294:	mov	r2, #5
   11298:	ldr	r1, [pc, #276]	; 113b4 <abort@plt+0x668>
   1129c:	mov	r0, #0
   112a0:	bl	10bcc <dcgettext@plt>
   112a4:	ldr	r2, [pc, #268]	; 113b8 <abort@plt+0x66c>
   112a8:	cmp	r4, r5
   112ac:	ldr	r3, [pc, #264]	; 113bc <abort@plt+0x670>
   112b0:	movne	r3, r2
   112b4:	mov	r1, r0
   112b8:	mov	r2, r4
   112bc:	mov	r0, #1
   112c0:	bl	10cd4 <__printf_chk@plt>
   112c4:	b	11118 <abort@plt+0x3cc>
   112c8:	mov	r0, r4
   112cc:	bl	10bcc <dcgettext@plt>
   112d0:	ldr	r3, [pc, #204]	; 113a4 <abort@plt+0x658>
   112d4:	ldr	r2, [pc, #204]	; 113a8 <abort@plt+0x65c>
   112d8:	mov	r1, r0
   112dc:	mov	r0, #1
   112e0:	bl	10cd4 <__printf_chk@plt>
   112e4:	mov	r1, r4
   112e8:	mov	r0, #5
   112ec:	bl	10d10 <setlocale@plt>
   112f0:	cmp	r0, #0
   112f4:	beq	1130c <abort@plt+0x5c0>
   112f8:	mov	r2, #3
   112fc:	ldr	r1, [pc, #168]	; 113ac <abort@plt+0x660>
   11300:	bl	10d40 <strncmp@plt>
   11304:	cmp	r0, #0
   11308:	bne	11350 <abort@plt+0x604>
   1130c:	mov	r2, #5
   11310:	ldr	r1, [pc, #152]	; 113b0 <abort@plt+0x664>
   11314:	mov	r0, #0
   11318:	bl	10bcc <dcgettext@plt>
   1131c:	ldr	r3, [pc, #120]	; 1139c <abort@plt+0x650>
   11320:	ldr	r2, [pc, #124]	; 113a4 <abort@plt+0x658>
   11324:	mov	r4, r3
   11328:	mov	r1, r0
   1132c:	mov	r0, #1
   11330:	bl	10cd4 <__printf_chk@plt>
   11334:	ldr	r1, [pc, #120]	; 113b4 <abort@plt+0x668>
   11338:	mov	r2, #5
   1133c:	mov	r0, #0
   11340:	bl	10bcc <dcgettext@plt>
   11344:	ldr	r3, [pc, #112]	; 113bc <abort@plt+0x670>
   11348:	mov	r1, r0
   1134c:	b	112b8 <abort@plt+0x56c>
   11350:	ldr	r5, [pc, #68]	; 1139c <abort@plt+0x650>
   11354:	mov	r4, r5
   11358:	mov	r2, #5
   1135c:	ldr	r1, [pc, #92]	; 113c0 <abort@plt+0x674>
   11360:	mov	r0, #0
   11364:	bl	10bcc <dcgettext@plt>
   11368:	ldr	r1, [r7]
   1136c:	bl	10b54 <fputs_unlocked@plt>
   11370:	b	11270 <abort@plt+0x524>
   11374:	andeq	r8, r2, r8, lsr #2
   11378:	andeq	r7, r1, ip, asr #32
   1137c:	andeq	r8, r2, ip, lsr r1
   11380:	andeq	r7, r1, r4, ror r0
   11384:	andeq	r8, r2, ip, lsr #2
   11388:	andeq	r6, r1, r8, asr #31
   1138c:	andeq	r7, r1, ip, lsl r1
   11390:	andeq	r7, r1, ip, asr r1
   11394:	andeq	r7, r1, ip, lsl #3
   11398:	andeq	r7, r1, r4, asr #3
   1139c:	andeq	r7, r1, r0, asr #32
   113a0:	andeq	r7, r1, r4, lsl #5
   113a4:	muleq	r1, ip, r2
   113a8:	andeq	r7, r1, r4, asr #5
   113ac:	ldrdeq	r7, [r1], -r4
   113b0:	andeq	r7, r1, r0, lsr #6
   113b4:	andeq	r7, r1, ip, lsr r3
   113b8:	andeq	r7, r1, r8, asr r1
   113bc:	andeq	r7, r1, r4, asr #7
   113c0:	ldrdeq	r7, [r1], -r8
   113c4:	ldr	r3, [pc, #4]	; 113d0 <abort@plt+0x684>
   113c8:	str	r0, [r3]
   113cc:	bx	lr
   113d0:	andeq	r8, r2, r4, lsr r1
   113d4:	ldr	r3, [pc, #4]	; 113e0 <abort@plt+0x694>
   113d8:	strb	r0, [r3, #4]
   113dc:	bx	lr
   113e0:	andeq	r8, r2, r4, lsr r1
   113e4:	ldr	r3, [pc, #192]	; 114ac <abort@plt+0x760>
   113e8:	push	{r4, r5, r6, lr}
   113ec:	sub	sp, sp, #8
   113f0:	ldr	r0, [r3]
   113f4:	bl	166a8 <abort@plt+0x595c>
   113f8:	cmp	r0, #0
   113fc:	beq	11420 <abort@plt+0x6d4>
   11400:	ldr	r4, [pc, #168]	; 114b0 <abort@plt+0x764>
   11404:	ldrb	r3, [r4, #4]
   11408:	cmp	r3, #0
   1140c:	beq	1143c <abort@plt+0x6f0>
   11410:	bl	10cb0 <__errno_location@plt>
   11414:	ldr	r3, [r0]
   11418:	cmp	r3, #32
   1141c:	bne	1143c <abort@plt+0x6f0>
   11420:	ldr	r3, [pc, #140]	; 114b4 <abort@plt+0x768>
   11424:	ldr	r0, [r3]
   11428:	bl	166a8 <abort@plt+0x595c>
   1142c:	cmp	r0, #0
   11430:	bne	11484 <abort@plt+0x738>
   11434:	add	sp, sp, #8
   11438:	pop	{r4, r5, r6, pc}
   1143c:	mov	r2, #5
   11440:	ldr	r1, [pc, #112]	; 114b8 <abort@plt+0x76c>
   11444:	mov	r0, #0
   11448:	bl	10bcc <dcgettext@plt>
   1144c:	ldr	r4, [r4]
   11450:	cmp	r4, #0
   11454:	mov	r5, r0
   11458:	beq	11490 <abort@plt+0x744>
   1145c:	bl	10cb0 <__errno_location@plt>
   11460:	ldr	r6, [r0]
   11464:	mov	r0, r4
   11468:	bl	14134 <abort@plt+0x33e8>
   1146c:	mov	r1, r6
   11470:	str	r5, [sp]
   11474:	ldr	r2, [pc, #64]	; 114bc <abort@plt+0x770>
   11478:	mov	r3, r0
   1147c:	mov	r0, #0
   11480:	bl	10c38 <error@plt>
   11484:	ldr	r3, [pc, #52]	; 114c0 <abort@plt+0x774>
   11488:	ldr	r0, [r3]
   1148c:	bl	10b90 <_exit@plt>
   11490:	bl	10cb0 <__errno_location@plt>
   11494:	mov	r3, r5
   11498:	ldr	r2, [pc, #36]	; 114c4 <abort@plt+0x778>
   1149c:	ldr	r1, [r0]
   114a0:	mov	r0, r4
   114a4:	bl	10c38 <error@plt>
   114a8:	b	11484 <abort@plt+0x738>
   114ac:	andeq	r8, r2, ip, lsr #2
   114b0:	andeq	r8, r2, r4, lsr r1
   114b4:	andeq	r8, r2, r8, lsr #2
   114b8:	andeq	r7, r1, r0, asr r4
   114bc:	andeq	r7, r1, ip, asr r4
   114c0:	andeq	r8, r2, ip, asr #1
   114c4:	andeq	r7, r1, r0, ror #8
   114c8:	push	{r4, r5, r6, lr}
   114cc:	subs	r4, r0, #0
   114d0:	beq	11544 <abort@plt+0x7f8>
   114d4:	mov	r1, #47	; 0x2f
   114d8:	bl	10d1c <strrchr@plt>
   114dc:	subs	r5, r0, #0
   114e0:	beq	11530 <abort@plt+0x7e4>
   114e4:	add	r6, r5, #1
   114e8:	sub	r3, r6, r4
   114ec:	cmp	r3, #6
   114f0:	ble	11530 <abort@plt+0x7e4>
   114f4:	mov	r2, #7
   114f8:	ldr	r1, [pc, #96]	; 11560 <abort@plt+0x814>
   114fc:	sub	r0, r5, #6
   11500:	bl	10d40 <strncmp@plt>
   11504:	cmp	r0, #0
   11508:	bne	11530 <abort@plt+0x7e4>
   1150c:	mov	r2, #3
   11510:	ldr	r1, [pc, #76]	; 11564 <abort@plt+0x818>
   11514:	mov	r0, r6
   11518:	bl	10d40 <strncmp@plt>
   1151c:	cmp	r0, #0
   11520:	movne	r4, r6
   11524:	ldreq	r3, [pc, #60]	; 11568 <abort@plt+0x81c>
   11528:	addeq	r4, r5, #4
   1152c:	streq	r4, [r3]
   11530:	ldr	r2, [pc, #52]	; 1156c <abort@plt+0x820>
   11534:	ldr	r3, [pc, #52]	; 11570 <abort@plt+0x824>
   11538:	str	r4, [r2]
   1153c:	str	r4, [r3]
   11540:	pop	{r4, r5, r6, pc}
   11544:	ldr	r3, [pc, #40]	; 11574 <abort@plt+0x828>
   11548:	mov	r2, #55	; 0x37
   1154c:	mov	r1, #1
   11550:	ldr	r3, [r3]
   11554:	ldr	r0, [pc, #28]	; 11578 <abort@plt+0x82c>
   11558:	bl	10bfc <fwrite@plt>
   1155c:	bl	10d4c <abort@plt>
   11560:	muleq	r1, ip, r4
   11564:	andeq	r7, r1, r4, lsr #9
   11568:	andeq	r8, r2, r0, lsl r1
   1156c:	andeq	r8, r2, ip, lsr r1
   11570:	andeq	r8, r2, r8, lsl r1
   11574:	andeq	r8, r2, r8, lsr #2
   11578:	andeq	r7, r1, r4, ror #8
   1157c:	push	{r4, r5, r6, lr}
   11580:	mov	r4, r0
   11584:	mov	r5, r1
   11588:	bl	1691c <abort@plt+0x5bd0>
   1158c:	ldrb	r3, [r0]
   11590:	bic	r3, r3, #32
   11594:	cmp	r3, #85	; 0x55
   11598:	bne	115f8 <abort@plt+0x8ac>
   1159c:	ldrb	r3, [r0, #1]
   115a0:	bic	r3, r3, #32
   115a4:	cmp	r3, #84	; 0x54
   115a8:	bne	11634 <abort@plt+0x8e8>
   115ac:	ldrb	r3, [r0, #2]
   115b0:	bic	r3, r3, #32
   115b4:	cmp	r3, #70	; 0x46
   115b8:	bne	11634 <abort@plt+0x8e8>
   115bc:	ldrb	r3, [r0, #3]
   115c0:	cmp	r3, #45	; 0x2d
   115c4:	bne	11634 <abort@plt+0x8e8>
   115c8:	ldrb	r3, [r0, #4]
   115cc:	cmp	r3, #56	; 0x38
   115d0:	bne	11634 <abort@plt+0x8e8>
   115d4:	ldrb	r3, [r0, #5]
   115d8:	cmp	r3, #0
   115dc:	bne	11634 <abort@plt+0x8e8>
   115e0:	ldrb	r2, [r4]
   115e4:	ldr	r3, [pc, #152]	; 11684 <abort@plt+0x938>
   115e8:	ldr	r0, [pc, #152]	; 11688 <abort@plt+0x93c>
   115ec:	cmp	r2, #96	; 0x60
   115f0:	movne	r0, r3
   115f4:	pop	{r4, r5, r6, pc}
   115f8:	cmp	r3, #71	; 0x47
   115fc:	bne	11634 <abort@plt+0x8e8>
   11600:	ldrb	r3, [r0, #1]
   11604:	bic	r3, r3, #32
   11608:	cmp	r3, #66	; 0x42
   1160c:	bne	11634 <abort@plt+0x8e8>
   11610:	ldrb	r3, [r0, #2]
   11614:	cmp	r3, #49	; 0x31
   11618:	bne	11634 <abort@plt+0x8e8>
   1161c:	ldrb	r3, [r0, #3]
   11620:	cmp	r3, #56	; 0x38
   11624:	bne	11634 <abort@plt+0x8e8>
   11628:	ldrb	r3, [r0, #4]
   1162c:	cmp	r3, #48	; 0x30
   11630:	beq	11648 <abort@plt+0x8fc>
   11634:	ldr	r3, [pc, #80]	; 1168c <abort@plt+0x940>
   11638:	cmp	r5, #9
   1163c:	ldr	r0, [pc, #76]	; 11690 <abort@plt+0x944>
   11640:	movne	r0, r3
   11644:	pop	{r4, r5, r6, pc}
   11648:	ldrb	r3, [r0, #5]
   1164c:	cmp	r3, #51	; 0x33
   11650:	bne	11634 <abort@plt+0x8e8>
   11654:	ldrb	r3, [r0, #6]
   11658:	cmp	r3, #48	; 0x30
   1165c:	bne	11634 <abort@plt+0x8e8>
   11660:	ldrb	r3, [r0, #7]
   11664:	cmp	r3, #0
   11668:	bne	11634 <abort@plt+0x8e8>
   1166c:	ldrb	r2, [r4]
   11670:	ldr	r3, [pc, #28]	; 11694 <abort@plt+0x948>
   11674:	ldr	r0, [pc, #28]	; 11698 <abort@plt+0x94c>
   11678:	cmp	r2, #96	; 0x60
   1167c:	movne	r0, r3
   11680:	pop	{r4, r5, r6, pc}
   11684:	andeq	r7, r1, r0, lsl #10
   11688:	strdeq	r7, [r1], -ip
   1168c:	andeq	r7, r1, r0, lsl r5
   11690:	andeq	r7, r1, ip, lsl #10
   11694:	andeq	r7, r1, r8, lsl #10
   11698:	andeq	r7, r1, r4, lsl #10
   1169c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116a0:	sub	sp, sp, #140	; 0x8c
   116a4:	mov	r9, r1
   116a8:	str	r3, [sp, #24]
   116ac:	mov	r3, #1
   116b0:	mov	sl, r0
   116b4:	str	r2, [sp, #44]	; 0x2c
   116b8:	str	r3, [sp, #28]
   116bc:	bl	10c14 <__ctype_get_mb_cur_max@plt>
   116c0:	ldr	r3, [sp, #180]	; 0xb4
   116c4:	mov	fp, r9
   116c8:	mov	r9, sl
   116cc:	lsr	r3, r3, #1
   116d0:	and	r3, r3, #1
   116d4:	str	r3, [sp, #40]	; 0x28
   116d8:	ldr	r3, [sp, #180]	; 0xb4
   116dc:	mov	r2, #0
   116e0:	and	r3, r3, #4
   116e4:	str	r3, [sp, #100]	; 0x64
   116e8:	ldr	r3, [sp, #180]	; 0xb4
   116ec:	str	r2, [sp, #76]	; 0x4c
   116f0:	and	r3, r3, #1
   116f4:	str	r3, [sp, #96]	; 0x60
   116f8:	str	r2, [sp, #36]	; 0x24
   116fc:	str	r2, [sp, #56]	; 0x38
   11700:	str	r2, [sp, #68]	; 0x44
   11704:	str	r2, [sp, #72]	; 0x48
   11708:	str	r2, [sp, #84]	; 0x54
   1170c:	str	r0, [sp, #80]	; 0x50
   11710:	ldr	r3, [sp, #176]	; 0xb0
   11714:	cmp	r3, #10
   11718:	ldrls	pc, [pc, r3, lsl #2]
   1171c:	b	128f4 <abort@plt+0x1ba8>
   11720:	andeq	r1, r1, ip, asr #14
   11724:	andeq	r1, r1, ip, ror #20
   11728:	andeq	r1, r1, r4, asr #23
   1172c:	andeq	r1, r1, r0, lsr #21
   11730:	andeq	r1, r1, r8, lsl ip
   11734:	strdeq	r1, [r1], -r8
   11738:	andeq	r1, r1, r0, asr #21
   1173c:	andeq	r1, r1, r4, ror #21
   11740:	andeq	r1, r1, ip, lsl #22
   11744:	andeq	r1, r1, ip, lsl #22
   11748:	andeq	r1, r1, ip, lsl #22
   1174c:	mov	r3, #0
   11750:	ldr	r1, [sp, #56]	; 0x38
   11754:	ldr	r2, [sp, #176]	; 0xb0
   11758:	ldr	lr, [sp, #176]	; 0xb0
   1175c:	mov	r8, r3
   11760:	mov	ip, r3
   11764:	str	r3, [sp, #40]	; 0x28
   11768:	mov	r3, r1
   1176c:	cmp	r2, #2
   11770:	moveq	r3, #0
   11774:	andne	r3, r3, #1
   11778:	mov	r0, r3
   1177c:	str	r3, [sp, #92]	; 0x5c
   11780:	ldr	r3, [sp, #68]	; 0x44
   11784:	sub	lr, lr, #2
   11788:	adds	r2, r3, #0
   1178c:	movne	r2, #1
   11790:	and	r3, r1, ip
   11794:	and	r3, r2, r3
   11798:	clz	lr, lr
   1179c:	str	r3, [sp, #88]	; 0x58
   117a0:	lsr	lr, lr, #5
   117a4:	mov	r3, ip
   117a8:	and	r3, r3, lr
   117ac:	mov	sl, #0
   117b0:	and	r0, r2, r0
   117b4:	str	r3, [sp, #64]	; 0x40
   117b8:	eor	r3, r1, #1
   117bc:	str	lr, [sp, #52]	; 0x34
   117c0:	str	r0, [sp, #48]	; 0x30
   117c4:	str	r3, [sp, #60]	; 0x3c
   117c8:	ldr	r3, [sp, #24]
   117cc:	cmn	r3, #1
   117d0:	beq	11d00 <abort@plt+0xfb4>
   117d4:	subs	r7, r3, sl
   117d8:	movne	r7, #1
   117dc:	cmp	r7, #0
   117e0:	beq	11d18 <abort@plt+0xfcc>
   117e4:	ldr	r3, [sp, #48]	; 0x30
   117e8:	cmp	r3, #0
   117ec:	beq	12084 <abort@plt+0x1338>
   117f0:	ldr	r2, [sp, #68]	; 0x44
   117f4:	ldr	r1, [sp, #24]
   117f8:	cmp	r2, #1
   117fc:	mov	r3, r2
   11800:	movls	r3, #0
   11804:	movhi	r3, #1
   11808:	cmn	r1, #1
   1180c:	movne	r3, #0
   11810:	cmp	r3, #0
   11814:	add	r4, sl, r2
   11818:	beq	11828 <abort@plt+0xadc>
   1181c:	ldr	r0, [sp, #44]	; 0x2c
   11820:	bl	10c98 <strlen@plt>
   11824:	str	r0, [sp, #24]
   11828:	ldr	r3, [sp, #24]
   1182c:	cmp	r3, r4
   11830:	ldr	r3, [sp, #44]	; 0x2c
   11834:	add	r5, r3, sl
   11838:	bcc	1208c <abort@plt+0x1340>
   1183c:	mov	r0, r5
   11840:	ldr	r2, [sp, #68]	; 0x44
   11844:	ldr	r1, [sp, #72]	; 0x48
   11848:	bl	10bb4 <memcmp@plt>
   1184c:	cmp	r0, #0
   11850:	bne	1208c <abort@plt+0x1340>
   11854:	ldr	r3, [sp, #40]	; 0x28
   11858:	cmp	r3, #0
   1185c:	bne	12a48 <abort@plt+0x1cfc>
   11860:	ldrb	r4, [r5]
   11864:	cmp	r4, #126	; 0x7e
   11868:	ldrls	pc, [pc, r4, lsl #2]
   1186c:	b	12984 <abort@plt+0x1c38>
   11870:	andeq	r1, r1, r4, asr #30
   11874:	andeq	r2, r1, r4, lsl #19
   11878:	andeq	r2, r1, r4, lsl #19
   1187c:	andeq	r2, r1, r4, lsl #19
   11880:	andeq	r2, r1, r4, lsl #19
   11884:	andeq	r2, r1, r4, lsl #19
   11888:	andeq	r2, r1, r4, lsl #19
   1188c:	andeq	r1, r1, r0, lsr pc
   11890:	andeq	r1, r1, ip, lsl pc
   11894:	strdeq	r1, [r1], -r8
   11898:	ldrdeq	r1, [r1], -r8
   1189c:	andeq	r1, r1, r8, lsl #30
   118a0:	andeq	r1, r1, r0, asr #28
   118a4:	andeq	r2, r1, r4, ror r0
   118a8:	andeq	r2, r1, r4, lsl #19
   118ac:	andeq	r2, r1, r4, lsl #19
   118b0:	andeq	r2, r1, r4, lsl #19
   118b4:	andeq	r2, r1, r4, lsl #19
   118b8:	andeq	r2, r1, r4, lsl #19
   118bc:	andeq	r2, r1, r4, lsl #19
   118c0:	andeq	r2, r1, r4, lsl #19
   118c4:	andeq	r2, r1, r4, lsl #19
   118c8:	andeq	r2, r1, r4, lsl #19
   118cc:	andeq	r2, r1, r4, lsl #19
   118d0:	andeq	r2, r1, r4, lsl #19
   118d4:	andeq	r2, r1, r4, lsl #19
   118d8:	andeq	r2, r1, r4, lsl #19
   118dc:	andeq	r2, r1, r4, lsl #19
   118e0:	andeq	r2, r1, r4, lsl #19
   118e4:	andeq	r2, r1, r4, lsl #19
   118e8:	andeq	r2, r1, r4, lsl #19
   118ec:	andeq	r2, r1, r4, lsl #19
   118f0:	andeq	r2, r1, r4, rrx
   118f4:	andeq	r2, r1, r4, asr #32
   118f8:	andeq	r2, r1, r4, asr #32
   118fc:	andeq	r2, r1, r4, lsr #32
   11900:	andeq	r2, r1, r4, asr #32
   11904:	andeq	r1, r1, r0, lsr lr
   11908:	andeq	r2, r1, r4, asr #32
   1190c:	andeq	r1, r1, ip, lsl #28
   11910:	andeq	r2, r1, r4, asr #32
   11914:	andeq	r2, r1, r4, asr #32
   11918:	andeq	r2, r1, r4, asr #32
   1191c:	andeq	r1, r1, r0, lsr lr
   11920:	andeq	r1, r1, r0, lsr lr
   11924:	andeq	r1, r1, r0, lsr lr
   11928:	andeq	r1, r1, r0, lsr lr
   1192c:	andeq	r1, r1, r0, lsr lr
   11930:	andeq	r1, r1, r0, lsr lr
   11934:	andeq	r1, r1, r0, lsr lr
   11938:	andeq	r1, r1, r0, lsr lr
   1193c:	andeq	r1, r1, r0, lsr lr
   11940:	andeq	r1, r1, r0, lsr lr
   11944:	andeq	r1, r1, r0, lsr lr
   11948:	andeq	r1, r1, r0, lsr lr
   1194c:	andeq	r1, r1, r0, lsr lr
   11950:	andeq	r1, r1, r0, lsr lr
   11954:	andeq	r1, r1, r0, lsr lr
   11958:	andeq	r1, r1, r0, lsr lr
   1195c:	andeq	r2, r1, r4, asr #32
   11960:	andeq	r2, r1, r4, asr #32
   11964:	andeq	r2, r1, r4, asr #32
   11968:	andeq	r2, r1, r4, asr #32
   1196c:			; <UNDEFINED> instruction: 0x00011dbc
   11970:	andeq	r2, r1, r4, lsl #19
   11974:	andeq	r1, r1, r0, lsr lr
   11978:	andeq	r1, r1, r0, lsr lr
   1197c:	andeq	r1, r1, r0, lsr lr
   11980:	andeq	r1, r1, r0, lsr lr
   11984:	andeq	r1, r1, r0, lsr lr
   11988:	andeq	r1, r1, r0, lsr lr
   1198c:	andeq	r1, r1, r0, lsr lr
   11990:	andeq	r1, r1, r0, lsr lr
   11994:	andeq	r1, r1, r0, lsr lr
   11998:	andeq	r1, r1, r0, lsr lr
   1199c:	andeq	r1, r1, r0, lsr lr
   119a0:	andeq	r1, r1, r0, lsr lr
   119a4:	andeq	r1, r1, r0, lsr lr
   119a8:	andeq	r1, r1, r0, lsr lr
   119ac:	andeq	r1, r1, r0, lsr lr
   119b0:	andeq	r1, r1, r0, lsr lr
   119b4:	andeq	r1, r1, r0, lsr lr
   119b8:	andeq	r1, r1, r0, lsr lr
   119bc:	andeq	r1, r1, r0, lsr lr
   119c0:	andeq	r1, r1, r0, lsr lr
   119c4:	andeq	r1, r1, r0, lsr lr
   119c8:	andeq	r1, r1, r0, lsr lr
   119cc:	andeq	r1, r1, r0, lsr lr
   119d0:	andeq	r1, r1, r0, lsr lr
   119d4:	andeq	r1, r1, r0, lsr lr
   119d8:	andeq	r1, r1, r0, lsr lr
   119dc:	andeq	r2, r1, r4, asr #32
   119e0:	andeq	r1, r1, r8, lsl #27
   119e4:	andeq	r1, r1, r0, lsr lr
   119e8:	andeq	r2, r1, r4, asr #32
   119ec:	andeq	r1, r1, r0, lsr lr
   119f0:	andeq	r2, r1, r4, asr #32
   119f4:	andeq	r1, r1, r0, lsr lr
   119f8:	andeq	r1, r1, r0, lsr lr
   119fc:	andeq	r1, r1, r0, lsr lr
   11a00:	andeq	r1, r1, r0, lsr lr
   11a04:	andeq	r1, r1, r0, lsr lr
   11a08:	andeq	r1, r1, r0, lsr lr
   11a0c:	andeq	r1, r1, r0, lsr lr
   11a10:	andeq	r1, r1, r0, lsr lr
   11a14:	andeq	r1, r1, r0, lsr lr
   11a18:	andeq	r1, r1, r0, lsr lr
   11a1c:	andeq	r1, r1, r0, lsr lr
   11a20:	andeq	r1, r1, r0, lsr lr
   11a24:	andeq	r1, r1, r0, lsr lr
   11a28:	andeq	r1, r1, r0, lsr lr
   11a2c:	andeq	r1, r1, r0, lsr lr
   11a30:	andeq	r1, r1, r0, lsr lr
   11a34:	andeq	r1, r1, r0, lsr lr
   11a38:	andeq	r1, r1, r0, lsr lr
   11a3c:	andeq	r1, r1, r0, lsr lr
   11a40:	andeq	r1, r1, r0, lsr lr
   11a44:	andeq	r1, r1, r0, lsr lr
   11a48:	andeq	r1, r1, r0, lsr lr
   11a4c:	andeq	r1, r1, r0, lsr lr
   11a50:	andeq	r1, r1, r0, lsr lr
   11a54:	andeq	r1, r1, r0, lsr lr
   11a58:	andeq	r1, r1, r0, lsr lr
   11a5c:	andeq	r1, r1, r0, asr #24
   11a60:	andeq	r2, r1, r4, asr #32
   11a64:	andeq	r1, r1, r0, asr #24
   11a68:	andeq	r2, r1, r4, lsr #32
   11a6c:	mov	r3, #1
   11a70:	str	r3, [sp, #40]	; 0x28
   11a74:	str	r3, [sp, #68]	; 0x44
   11a78:	mov	r8, #0
   11a7c:	ldr	r3, [pc, #4056]	; 12a5c <abort@plt+0x1d10>
   11a80:	str	r3, [sp, #72]	; 0x48
   11a84:	mov	r3, #2
   11a88:	str	r3, [sp, #176]	; 0xb0
   11a8c:	ldr	r1, [sp, #56]	; 0x38
   11a90:	mov	r2, r3
   11a94:	ldr	ip, [sp, #40]	; 0x28
   11a98:	mov	lr, r3
   11a9c:	b	11768 <abort@plt+0xa1c>
   11aa0:	mov	r3, #1
   11aa4:	str	r3, [sp, #56]	; 0x38
   11aa8:	str	r3, [sp, #68]	; 0x44
   11aac:	str	r3, [sp, #40]	; 0x28
   11ab0:	ldr	r3, [pc, #4004]	; 12a5c <abort@plt+0x1d10>
   11ab4:	mov	r8, #0
   11ab8:	str	r3, [sp, #72]	; 0x48
   11abc:	b	11a84 <abort@plt+0xd38>
   11ac0:	mov	r3, #1
   11ac4:	str	r3, [sp, #56]	; 0x38
   11ac8:	str	r3, [sp, #68]	; 0x44
   11acc:	str	r3, [sp, #40]	; 0x28
   11ad0:	ldr	r3, [pc, #3976]	; 12a60 <abort@plt+0x1d14>
   11ad4:	mov	r8, #0
   11ad8:	str	r3, [sp, #72]	; 0x48
   11adc:	mov	r3, #5
   11ae0:	b	11a88 <abort@plt+0xd3c>
   11ae4:	mov	r3, #0
   11ae8:	str	r3, [sp, #40]	; 0x28
   11aec:	mov	r3, #1
   11af0:	str	r3, [sp, #56]	; 0x38
   11af4:	mov	r8, #0
   11af8:	mov	r1, r3
   11afc:	ldr	r2, [sp, #176]	; 0xb0
   11b00:	ldr	ip, [sp, #40]	; 0x28
   11b04:	ldr	lr, [sp, #176]	; 0xb0
   11b08:	b	11768 <abort@plt+0xa1c>
   11b0c:	ldr	r3, [sp, #176]	; 0xb0
   11b10:	cmp	r3, #10
   11b14:	beq	11b58 <abort@plt+0xe0c>
   11b18:	mov	r2, #5
   11b1c:	ldr	r1, [pc, #3904]	; 12a64 <abort@plt+0x1d18>
   11b20:	mov	r0, #0
   11b24:	bl	10bcc <dcgettext@plt>
   11b28:	ldr	r2, [pc, #3892]	; 12a64 <abort@plt+0x1d18>
   11b2c:	cmp	r0, r2
   11b30:	str	r0, [sp, #188]	; 0xbc
   11b34:	beq	12bf0 <abort@plt+0x1ea4>
   11b38:	mov	r2, #5
   11b3c:	ldr	r1, [pc, #3864]	; 12a5c <abort@plt+0x1d10>
   11b40:	mov	r0, #0
   11b44:	bl	10bcc <dcgettext@plt>
   11b48:	ldr	r2, [pc, #3852]	; 12a5c <abort@plt+0x1d10>
   11b4c:	cmp	r0, r2
   11b50:	str	r0, [sp, #192]	; 0xc0
   11b54:	beq	12be0 <abort@plt+0x1e94>
   11b58:	ldr	r8, [sp, #40]	; 0x28
   11b5c:	cmp	r8, #0
   11b60:	movne	r8, #0
   11b64:	bne	11b94 <abort@plt+0xe48>
   11b68:	ldr	r3, [sp, #188]	; 0xbc
   11b6c:	ldrb	r3, [r3]
   11b70:	cmp	r3, #0
   11b74:	beq	11b94 <abort@plt+0xe48>
   11b78:	ldr	r2, [sp, #188]	; 0xbc
   11b7c:	cmp	fp, r8
   11b80:	strbhi	r3, [r9, r8]
   11b84:	ldrb	r3, [r2, #1]!
   11b88:	add	r8, r8, #1
   11b8c:	cmp	r3, #0
   11b90:	bne	11b7c <abort@plt+0xe30>
   11b94:	ldr	r0, [sp, #192]	; 0xc0
   11b98:	bl	10c98 <strlen@plt>
   11b9c:	ldr	r3, [sp, #192]	; 0xc0
   11ba0:	ldr	r2, [sp, #176]	; 0xb0
   11ba4:	str	r3, [sp, #72]	; 0x48
   11ba8:	mov	r3, #1
   11bac:	str	r3, [sp, #56]	; 0x38
   11bb0:	mov	r1, r3
   11bb4:	ldr	ip, [sp, #40]	; 0x28
   11bb8:	ldr	lr, [sp, #176]	; 0xb0
   11bbc:	str	r0, [sp, #68]	; 0x44
   11bc0:	b	11768 <abort@plt+0xa1c>
   11bc4:	ldr	r3, [sp, #40]	; 0x28
   11bc8:	cmp	r3, #0
   11bcc:	beq	12874 <abort@plt+0x1b28>
   11bd0:	mov	r3, #1
   11bd4:	str	r3, [sp, #68]	; 0x44
   11bd8:	ldr	r3, [pc, #3708]	; 12a5c <abort@plt+0x1d10>
   11bdc:	str	r3, [sp, #72]	; 0x48
   11be0:	mov	r8, #0
   11be4:	ldr	r1, [sp, #56]	; 0x38
   11be8:	ldr	r2, [sp, #176]	; 0xb0
   11bec:	ldr	ip, [sp, #40]	; 0x28
   11bf0:	ldr	lr, [sp, #176]	; 0xb0
   11bf4:	b	11768 <abort@plt+0xa1c>
   11bf8:	ldr	r3, [sp, #40]	; 0x28
   11bfc:	cmp	r3, #0
   11c00:	beq	128f8 <abort@plt+0x1bac>
   11c04:	str	r3, [sp, #56]	; 0x38
   11c08:	mov	r3, #1
   11c0c:	str	r3, [sp, #68]	; 0x44
   11c10:	ldr	r3, [pc, #3656]	; 12a60 <abort@plt+0x1d14>
   11c14:	b	11bdc <abort@plt+0xe90>
   11c18:	ldr	r3, [sp, #40]	; 0x28
   11c1c:	cmp	r3, #0
   11c20:	mov	r3, #1
   11c24:	streq	r3, [sp, #56]	; 0x38
   11c28:	beq	12874 <abort@plt+0x1b28>
   11c2c:	str	r3, [sp, #68]	; 0x44
   11c30:	ldr	r3, [pc, #3620]	; 12a5c <abort@plt+0x1d10>
   11c34:	mov	r8, #0
   11c38:	str	r3, [sp, #72]	; 0x48
   11c3c:	b	11a84 <abort@plt+0xd38>
   11c40:	ldr	r3, [sp, #24]
   11c44:	ldr	r6, [sp, #48]	; 0x30
   11c48:	cmn	r3, #1
   11c4c:	beq	122a8 <abort@plt+0x155c>
   11c50:	subs	r3, r3, #1
   11c54:	movne	r3, #1
   11c58:	cmp	r3, #0
   11c5c:	beq	12028 <abort@plt+0x12dc>
   11c60:	ldr	r1, [sp, #52]	; 0x34
   11c64:	mov	r7, r3
   11c68:	mov	r3, #0
   11c6c:	str	r3, [sp, #32]
   11c70:	ldr	r3, [sp, #60]	; 0x3c
   11c74:	orr	r2, r1, r3
   11c78:	ldr	r3, [sp, #40]	; 0x28
   11c7c:	eor	r2, r2, #1
   11c80:	orr	r2, r3, r2
   11c84:	tst	r2, #255	; 0xff
   11c88:	bne	125ac <abort@plt+0x1860>
   11c8c:	cmp	r6, #0
   11c90:	bne	11e6c <abort@plt+0x1120>
   11c94:	ldr	r3, [sp, #36]	; 0x24
   11c98:	add	sl, sl, #1
   11c9c:	and	r3, r3, r7
   11ca0:	uxtb	r6, r3
   11ca4:	cmp	r6, #0
   11ca8:	beq	11cd4 <abort@plt+0xf88>
   11cac:	cmp	fp, r8
   11cb0:	movhi	r3, #39	; 0x27
   11cb4:	strbhi	r3, [r9, r8]
   11cb8:	add	r3, r8, #1
   11cbc:	cmp	fp, r3
   11cc0:	movhi	r2, #39	; 0x27
   11cc4:	add	r8, r8, #2
   11cc8:	strbhi	r2, [r9, r3]
   11ccc:	mov	r3, #0
   11cd0:	str	r3, [sp, #36]	; 0x24
   11cd4:	ldr	r2, [sp, #32]
   11cd8:	cmp	r8, fp
   11cdc:	ldr	r3, [sp, #28]
   11ce0:	strbcc	r4, [r9, r8]
   11ce4:	cmp	r2, #0
   11ce8:	moveq	r3, #0
   11cec:	str	r3, [sp, #28]
   11cf0:	ldr	r3, [sp, #24]
   11cf4:	add	r8, r8, #1
   11cf8:	cmn	r3, #1
   11cfc:	bne	117d4 <abort@plt+0xa88>
   11d00:	ldr	r3, [sp, #44]	; 0x2c
   11d04:	ldrb	r3, [r3, sl]
   11d08:	adds	r7, r3, #0
   11d0c:	movne	r7, #1
   11d10:	cmp	r7, #0
   11d14:	bne	117e4 <abort@plt+0xa98>
   11d18:	ldr	r3, [sp, #64]	; 0x40
   11d1c:	cmp	r8, #0
   11d20:	movne	r3, #0
   11d24:	andeq	r3, r3, #1
   11d28:	cmp	r3, #0
   11d2c:	str	r3, [sp, #64]	; 0x40
   11d30:	bne	127d4 <abort@plt+0x1a88>
   11d34:	ldr	r3, [sp, #40]	; 0x28
   11d38:	ldr	r2, [sp, #52]	; 0x34
   11d3c:	eor	r3, r3, #1
   11d40:	ands	r2, r2, r3
   11d44:	beq	12c00 <abort@plt+0x1eb4>
   11d48:	ldr	r3, [sp, #76]	; 0x4c
   11d4c:	cmp	r3, #0
   11d50:	beq	12bd0 <abort@plt+0x1e84>
   11d54:	ldr	r3, [sp, #28]
   11d58:	cmp	r3, #0
   11d5c:	bne	12b8c <abort@plt+0x1e40>
   11d60:	ldr	r2, [sp, #84]	; 0x54
   11d64:	clz	r3, fp
   11d68:	cmp	r2, #0
   11d6c:	lsr	r3, r3, #5
   11d70:	moveq	r3, #0
   11d74:	cmp	r3, #0
   11d78:	beq	12b2c <abort@plt+0x1de0>
   11d7c:	mov	fp, r2
   11d80:	str	r3, [sp, #76]	; 0x4c
   11d84:	b	11710 <abort@plt+0x9c4>
   11d88:	ldr	r3, [sp, #176]	; 0xb0
   11d8c:	ldr	r6, [sp, #48]	; 0x30
   11d90:	cmp	r3, #2
   11d94:	beq	122cc <abort@plt+0x1580>
   11d98:	ldr	r3, [sp, #88]	; 0x58
   11d9c:	cmp	r3, #0
   11da0:	beq	12850 <abort@plt+0x1b04>
   11da4:	mov	r3, #0
   11da8:	add	sl, sl, #1
   11dac:	ldr	r6, [sp, #36]	; 0x24
   11db0:	str	r3, [sp, #32]
   11db4:	mov	r4, #92	; 0x5c
   11db8:	b	11ca4 <abort@plt+0xf58>
   11dbc:	ldr	r3, [sp, #176]	; 0xb0
   11dc0:	ldr	r6, [sp, #48]	; 0x30
   11dc4:	cmp	r3, #2
   11dc8:	beq	122fc <abort@plt+0x15b0>
   11dcc:	cmp	r3, #5
   11dd0:	bne	12860 <abort@plt+0x1b14>
   11dd4:	ldr	r3, [sp, #100]	; 0x64
   11dd8:	cmp	r3, #0
   11ddc:	beq	128c4 <abort@plt+0x1b78>
   11de0:	ldr	r2, [sp, #24]
   11de4:	add	r3, sl, #2
   11de8:	cmp	r2, r3
   11dec:	bls	11dfc <abort@plt+0x10b0>
   11df0:	ldrb	r4, [r5, #1]
   11df4:	cmp	r4, #63	; 0x3f
   11df8:	beq	12a6c <abort@plt+0x1d20>
   11dfc:	mov	r1, #0
   11e00:	str	r1, [sp, #32]
   11e04:	mov	r4, #63	; 0x3f
   11e08:	b	11c70 <abort@plt+0xf24>
   11e0c:	ldr	r3, [sp, #176]	; 0xb0
   11e10:	ldr	r6, [sp, #48]	; 0x30
   11e14:	cmp	r3, #2
   11e18:	beq	12328 <abort@plt+0x15dc>
   11e1c:	str	r7, [sp, #32]
   11e20:	str	r7, [sp, #76]	; 0x4c
   11e24:	mov	r1, #0
   11e28:	mov	r4, #39	; 0x27
   11e2c:	b	11c70 <abort@plt+0xf24>
   11e30:	ldr	r6, [sp, #48]	; 0x30
   11e34:	ldr	r1, [sp, #52]	; 0x34
   11e38:	str	r7, [sp, #32]
   11e3c:	b	11c70 <abort@plt+0xf24>
   11e40:	ldr	r6, [sp, #48]	; 0x30
   11e44:	ldr	r1, [sp, #52]	; 0x34
   11e48:	mov	r4, #12
   11e4c:	mov	r3, #102	; 0x66
   11e50:	ldr	r2, [sp, #56]	; 0x38
   11e54:	cmp	r2, #0
   11e58:	streq	r2, [sp, #32]
   11e5c:	beq	11c70 <abort@plt+0xf24>
   11e60:	mov	r4, r3
   11e64:	mov	r3, #0
   11e68:	str	r3, [sp, #32]
   11e6c:	ldr	r3, [sp, #40]	; 0x28
   11e70:	cmp	r3, #0
   11e74:	bne	125e4 <abort@plt+0x1898>
   11e78:	ldr	r3, [sp, #36]	; 0x24
   11e7c:	eor	r3, r3, #1
   11e80:	and	r3, r3, r1
   11e84:	ands	r3, r3, #255	; 0xff
   11e88:	beq	11ec0 <abort@plt+0x1174>
   11e8c:	cmp	fp, r8
   11e90:	movhi	r2, #39	; 0x27
   11e94:	strbhi	r2, [r9, r8]
   11e98:	add	r2, r8, #1
   11e9c:	cmp	fp, r2
   11ea0:	movhi	r1, #36	; 0x24
   11ea4:	strbhi	r1, [r9, r2]
   11ea8:	add	r2, r8, #2
   11eac:	cmp	fp, r2
   11eb0:	add	r8, r8, #3
   11eb4:	movhi	r1, #39	; 0x27
   11eb8:	strbhi	r1, [r9, r2]
   11ebc:	str	r3, [sp, #36]	; 0x24
   11ec0:	cmp	fp, r8
   11ec4:	movhi	r3, #92	; 0x5c
   11ec8:	strbhi	r3, [r9, r8]
   11ecc:	add	sl, sl, #1
   11ed0:	add	r8, r8, #1
   11ed4:	b	11cd4 <abort@plt+0xf88>
   11ed8:	ldr	r6, [sp, #48]	; 0x30
   11edc:	mov	r4, #10
   11ee0:	mov	r3, #110	; 0x6e
   11ee4:	ldr	r2, [sp, #64]	; 0x40
   11ee8:	cmp	r2, #0
   11eec:	bne	1296c <abort@plt+0x1c20>
   11ef0:	ldr	r1, [sp, #52]	; 0x34
   11ef4:	b	11e50 <abort@plt+0x1104>
   11ef8:	ldr	r6, [sp, #48]	; 0x30
   11efc:	ldr	r1, [sp, #52]	; 0x34
   11f00:	mov	r3, #116	; 0x74
   11f04:	b	11e50 <abort@plt+0x1104>
   11f08:	ldr	r6, [sp, #48]	; 0x30
   11f0c:	ldr	r1, [sp, #52]	; 0x34
   11f10:	mov	r4, #11
   11f14:	mov	r3, #118	; 0x76
   11f18:	b	11e50 <abort@plt+0x1104>
   11f1c:	ldr	r6, [sp, #48]	; 0x30
   11f20:	ldr	r1, [sp, #52]	; 0x34
   11f24:	mov	r4, #8
   11f28:	mov	r3, #98	; 0x62
   11f2c:	b	11e50 <abort@plt+0x1104>
   11f30:	ldr	r6, [sp, #48]	; 0x30
   11f34:	ldr	r1, [sp, #52]	; 0x34
   11f38:	mov	r4, #7
   11f3c:	mov	r3, #97	; 0x61
   11f40:	b	11e50 <abort@plt+0x1104>
   11f44:	ldr	r3, [sp, #56]	; 0x38
   11f48:	ldr	r6, [sp, #48]	; 0x30
   11f4c:	cmp	r3, #0
   11f50:	beq	12414 <abort@plt+0x16c8>
   11f54:	ldr	r3, [sp, #40]	; 0x28
   11f58:	cmp	r3, #0
   11f5c:	bne	12a48 <abort@plt+0x1cfc>
   11f60:	ldr	r3, [sp, #36]	; 0x24
   11f64:	ldr	r2, [sp, #52]	; 0x34
   11f68:	eor	r3, r3, #1
   11f6c:	ands	r3, r2, r3
   11f70:	moveq	r2, r8
   11f74:	beq	11fac <abort@plt+0x1260>
   11f78:	cmp	fp, r8
   11f7c:	movhi	r2, #39	; 0x27
   11f80:	strbhi	r2, [r9, r8]
   11f84:	add	r2, r8, #1
   11f88:	cmp	fp, r2
   11f8c:	movhi	r1, #36	; 0x24
   11f90:	strbhi	r1, [r9, r2]
   11f94:	add	r2, r8, #2
   11f98:	cmp	fp, r2
   11f9c:	movhi	r1, #39	; 0x27
   11fa0:	strbhi	r1, [r9, r2]
   11fa4:	add	r2, r8, #3
   11fa8:	str	r3, [sp, #36]	; 0x24
   11fac:	cmp	fp, r2
   11fb0:	movhi	r3, #92	; 0x5c
   11fb4:	strbhi	r3, [r9, r2]
   11fb8:	ldr	r3, [sp, #92]	; 0x5c
   11fbc:	add	r8, r2, #1
   11fc0:	cmp	r3, #0
   11fc4:	beq	12948 <abort@plt+0x1bfc>
   11fc8:	ldr	r1, [sp, #24]
   11fcc:	add	r3, sl, #1
   11fd0:	cmp	r1, r3
   11fd4:	bls	1200c <abort@plt+0x12c0>
   11fd8:	ldr	r1, [sp, #44]	; 0x2c
   11fdc:	ldrb	r3, [r1, r3]
   11fe0:	sub	r3, r3, #48	; 0x30
   11fe4:	cmp	r3, #9
   11fe8:	bhi	1200c <abort@plt+0x12c0>
   11fec:	cmp	fp, r8
   11ff0:	movhi	r3, #48	; 0x30
   11ff4:	strbhi	r3, [r9, r8]
   11ff8:	add	r3, r2, #2
   11ffc:	cmp	fp, r3
   12000:	add	r8, r2, #3
   12004:	movhi	r1, #48	; 0x30
   12008:	strbhi	r1, [r9, r3]
   1200c:	ldr	r3, [sp, #40]	; 0x28
   12010:	ldr	r1, [sp, #52]	; 0x34
   12014:	mov	r7, r3
   12018:	str	r3, [sp, #32]
   1201c:	mov	r4, #48	; 0x30
   12020:	b	11c70 <abort@plt+0xf24>
   12024:	ldr	r6, [sp, #48]	; 0x30
   12028:	cmp	sl, #0
   1202c:	streq	r7, [sp, #32]
   12030:	beq	12050 <abort@plt+0x1304>
   12034:	mov	r3, #0
   12038:	ldr	r1, [sp, #52]	; 0x34
   1203c:	str	r3, [sp, #32]
   12040:	b	11c70 <abort@plt+0xf24>
   12044:	ldr	r6, [sp, #48]	; 0x30
   12048:	mov	r3, #0
   1204c:	str	r3, [sp, #32]
   12050:	ldr	r3, [sp, #64]	; 0x40
   12054:	cmp	r3, #0
   12058:	bne	127d4 <abort@plt+0x1a88>
   1205c:	ldr	r1, [sp, #52]	; 0x34
   12060:	b	11c70 <abort@plt+0xf24>
   12064:	ldr	r3, [sp, #48]	; 0x30
   12068:	mov	r6, r3
   1206c:	str	r3, [sp, #32]
   12070:	b	12050 <abort@plt+0x1304>
   12074:	ldr	r6, [sp, #48]	; 0x30
   12078:	mov	r4, #13
   1207c:	mov	r3, #114	; 0x72
   12080:	b	11ee4 <abort@plt+0x1198>
   12084:	ldr	r3, [sp, #44]	; 0x2c
   12088:	add	r5, r3, sl
   1208c:	ldrb	r4, [r5]
   12090:	cmp	r4, #126	; 0x7e
   12094:	ldrls	pc, [pc, r4, lsl #2]
   12098:	b	12434 <abort@plt+0x16e8>
   1209c:	andeq	r2, r1, r4, lsl #8
   120a0:	andeq	r2, r1, r4, lsr r4
   120a4:	andeq	r2, r1, r4, lsr r4
   120a8:	andeq	r2, r1, r4, lsr r4
   120ac:	andeq	r2, r1, r4, lsr r4
   120b0:	andeq	r2, r1, r4, lsr r4
   120b4:	andeq	r2, r1, r4, lsr r4
   120b8:	strdeq	r2, [r1], -ip
   120bc:	strdeq	r2, [r1], -r4
   120c0:	andeq	r2, r1, r8, ror #7
   120c4:	andeq	r2, r1, r0, ror #7
   120c8:	ldrdeq	r2, [r1], -r8
   120cc:	ldrdeq	r2, [r1], -r0
   120d0:	andeq	r2, r1, r8, asr #7
   120d4:	andeq	r2, r1, r4, lsr r4
   120d8:	andeq	r2, r1, r4, lsr r4
   120dc:	andeq	r2, r1, r4, lsr r4
   120e0:	andeq	r2, r1, r4, lsr r4
   120e4:	andeq	r2, r1, r4, lsr r4
   120e8:	andeq	r2, r1, r4, lsr r4
   120ec:	andeq	r2, r1, r4, lsr r4
   120f0:	andeq	r2, r1, r4, lsr r4
   120f4:	andeq	r2, r1, r4, lsr r4
   120f8:	andeq	r2, r1, r4, lsr r4
   120fc:	andeq	r2, r1, r4, lsr r4
   12100:	andeq	r2, r1, r4, lsr r4
   12104:	andeq	r2, r1, r4, lsr r4
   12108:	andeq	r2, r1, r4, lsr r4
   1210c:	andeq	r2, r1, r4, lsr r4
   12110:	andeq	r2, r1, r4, lsr r4
   12114:	andeq	r2, r1, r4, lsr r4
   12118:	andeq	r2, r1, r4, lsr r4
   1211c:			; <UNDEFINED> instruction: 0x000123bc
   12120:			; <UNDEFINED> instruction: 0x000123b4
   12124:			; <UNDEFINED> instruction: 0x000123b4
   12128:	andeq	r2, r1, ip, lsr #7
   1212c:			; <UNDEFINED> instruction: 0x000123b4
   12130:	andeq	r2, r1, r4, lsr #7
   12134:			; <UNDEFINED> instruction: 0x000123b4
   12138:	andeq	r2, r1, r8, lsl r3
   1213c:			; <UNDEFINED> instruction: 0x000123b4
   12140:			; <UNDEFINED> instruction: 0x000123b4
   12144:			; <UNDEFINED> instruction: 0x000123b4
   12148:	andeq	r2, r1, r4, lsr #7
   1214c:	andeq	r2, r1, r4, lsr #7
   12150:	andeq	r2, r1, r4, lsr #7
   12154:	andeq	r2, r1, r4, lsr #7
   12158:	andeq	r2, r1, r4, lsr #7
   1215c:	andeq	r2, r1, r4, lsr #7
   12160:	andeq	r2, r1, r4, lsr #7
   12164:	andeq	r2, r1, r4, lsr #7
   12168:	andeq	r2, r1, r4, lsr #7
   1216c:	andeq	r2, r1, r4, lsr #7
   12170:	andeq	r2, r1, r4, lsr #7
   12174:	andeq	r2, r1, r4, lsr #7
   12178:	andeq	r2, r1, r4, lsr #7
   1217c:	andeq	r2, r1, r4, lsr #7
   12180:	andeq	r2, r1, r4, lsr #7
   12184:	andeq	r2, r1, r4, lsr #7
   12188:			; <UNDEFINED> instruction: 0x000123b4
   1218c:			; <UNDEFINED> instruction: 0x000123b4
   12190:			; <UNDEFINED> instruction: 0x000123b4
   12194:			; <UNDEFINED> instruction: 0x000123b4
   12198:	andeq	r2, r1, ip, ror #5
   1219c:	andeq	r2, r1, r4, lsr r4
   121a0:	andeq	r2, r1, r4, lsr #7
   121a4:	andeq	r2, r1, r4, lsr #7
   121a8:	andeq	r2, r1, r4, lsr #7
   121ac:	andeq	r2, r1, r4, lsr #7
   121b0:	andeq	r2, r1, r4, lsr #7
   121b4:	andeq	r2, r1, r4, lsr #7
   121b8:	andeq	r2, r1, r4, lsr #7
   121bc:	andeq	r2, r1, r4, lsr #7
   121c0:	andeq	r2, r1, r4, lsr #7
   121c4:	andeq	r2, r1, r4, lsr #7
   121c8:	andeq	r2, r1, r4, lsr #7
   121cc:	andeq	r2, r1, r4, lsr #7
   121d0:	andeq	r2, r1, r4, lsr #7
   121d4:	andeq	r2, r1, r4, lsr #7
   121d8:	andeq	r2, r1, r4, lsr #7
   121dc:	andeq	r2, r1, r4, lsr #7
   121e0:	andeq	r2, r1, r4, lsr #7
   121e4:	andeq	r2, r1, r4, lsr #7
   121e8:	andeq	r2, r1, r4, lsr #7
   121ec:	andeq	r2, r1, r4, lsr #7
   121f0:	andeq	r2, r1, r4, lsr #7
   121f4:	andeq	r2, r1, r4, lsr #7
   121f8:	andeq	r2, r1, r4, lsr #7
   121fc:	andeq	r2, r1, r4, lsr #7
   12200:	andeq	r2, r1, r4, lsr #7
   12204:	andeq	r2, r1, r4, lsr #7
   12208:			; <UNDEFINED> instruction: 0x000123b4
   1220c:			; <UNDEFINED> instruction: 0x000122bc
   12210:	andeq	r2, r1, r4, lsr #7
   12214:			; <UNDEFINED> instruction: 0x000123b4
   12218:	andeq	r2, r1, r4, lsr #7
   1221c:			; <UNDEFINED> instruction: 0x000123b4
   12220:	andeq	r2, r1, r4, lsr #7
   12224:	andeq	r2, r1, r4, lsr #7
   12228:	andeq	r2, r1, r4, lsr #7
   1222c:	andeq	r2, r1, r4, lsr #7
   12230:	andeq	r2, r1, r4, lsr #7
   12234:	andeq	r2, r1, r4, lsr #7
   12238:	andeq	r2, r1, r4, lsr #7
   1223c:	andeq	r2, r1, r4, lsr #7
   12240:	andeq	r2, r1, r4, lsr #7
   12244:	andeq	r2, r1, r4, lsr #7
   12248:	andeq	r2, r1, r4, lsr #7
   1224c:	andeq	r2, r1, r4, lsr #7
   12250:	andeq	r2, r1, r4, lsr #7
   12254:	andeq	r2, r1, r4, lsr #7
   12258:	andeq	r2, r1, r4, lsr #7
   1225c:	andeq	r2, r1, r4, lsr #7
   12260:	andeq	r2, r1, r4, lsr #7
   12264:	andeq	r2, r1, r4, lsr #7
   12268:	andeq	r2, r1, r4, lsr #7
   1226c:	andeq	r2, r1, r4, lsr #7
   12270:	andeq	r2, r1, r4, lsr #7
   12274:	andeq	r2, r1, r4, lsr #7
   12278:	andeq	r2, r1, r4, lsr #7
   1227c:	andeq	r2, r1, r4, lsr #7
   12280:	andeq	r2, r1, r4, lsr #7
   12284:	andeq	r2, r1, r4, lsr #7
   12288:	muleq	r1, r8, r2
   1228c:			; <UNDEFINED> instruction: 0x000123b4
   12290:	muleq	r1, r8, r2
   12294:	andeq	r2, r1, ip, lsr #7
   12298:	ldr	r3, [sp, #24]
   1229c:	mov	r6, #0
   122a0:	cmn	r3, #1
   122a4:	bne	11c50 <abort@plt+0xf04>
   122a8:	ldr	r3, [sp, #44]	; 0x2c
   122ac:	ldrb	r3, [r3, #1]
   122b0:	adds	r3, r3, #0
   122b4:	movne	r3, #1
   122b8:	b	11c58 <abort@plt+0xf0c>
   122bc:	ldr	r3, [sp, #176]	; 0xb0
   122c0:	mov	r6, #0
   122c4:	cmp	r3, #2
   122c8:	bne	11d98 <abort@plt+0x104c>
   122cc:	ldr	r3, [sp, #64]	; 0x40
   122d0:	cmp	r3, #0
   122d4:	bne	12b0c <abort@plt+0x1dc0>
   122d8:	add	sl, sl, #1
   122dc:	ldr	r6, [sp, #36]	; 0x24
   122e0:	str	r3, [sp, #32]
   122e4:	mov	r4, #92	; 0x5c
   122e8:	b	11ca4 <abort@plt+0xf58>
   122ec:	ldr	r3, [sp, #176]	; 0xb0
   122f0:	mov	r6, #0
   122f4:	cmp	r3, #2
   122f8:	bne	11dcc <abort@plt+0x1080>
   122fc:	ldr	r3, [sp, #40]	; 0x28
   12300:	cmp	r3, #0
   12304:	bne	125e8 <abort@plt+0x189c>
   12308:	mov	r1, r7
   1230c:	str	r3, [sp, #32]
   12310:	mov	r4, #63	; 0x3f
   12314:	b	11c70 <abort@plt+0xf24>
   12318:	ldr	r3, [sp, #176]	; 0xb0
   1231c:	mov	r6, #0
   12320:	cmp	r3, #2
   12324:	bne	11e1c <abort@plt+0x10d0>
   12328:	ldr	r3, [sp, #64]	; 0x40
   1232c:	cmp	r3, #0
   12330:	bne	12b0c <abort@plt+0x1dc0>
   12334:	ldr	r2, [sp, #84]	; 0x54
   12338:	adds	r3, fp, #0
   1233c:	movne	r3, #1
   12340:	cmp	r2, #0
   12344:	movne	r3, #0
   12348:	cmp	r3, #0
   1234c:	strne	fp, [sp, #84]	; 0x54
   12350:	movne	fp, #0
   12354:	bne	12384 <abort@plt+0x1638>
   12358:	cmp	fp, r8
   1235c:	movhi	r3, #39	; 0x27
   12360:	strbhi	r3, [r9, r8]
   12364:	add	r3, r8, #1
   12368:	cmp	fp, r3
   1236c:	movhi	r2, #92	; 0x5c
   12370:	strbhi	r2, [r9, r3]
   12374:	add	r3, r8, #2
   12378:	cmp	fp, r3
   1237c:	movhi	r2, #39	; 0x27
   12380:	strbhi	r2, [r9, r3]
   12384:	ldr	r3, [sp, #64]	; 0x40
   12388:	add	r8, r8, #3
   1238c:	mov	r1, r7
   12390:	str	r7, [sp, #32]
   12394:	str	r7, [sp, #76]	; 0x4c
   12398:	str	r3, [sp, #36]	; 0x24
   1239c:	mov	r4, #39	; 0x27
   123a0:	b	11c70 <abort@plt+0xf24>
   123a4:	mov	r6, #0
   123a8:	b	11e34 <abort@plt+0x10e8>
   123ac:	mov	r6, #0
   123b0:	b	12028 <abort@plt+0x12dc>
   123b4:	mov	r6, #0
   123b8:	b	12048 <abort@plt+0x12fc>
   123bc:	str	r7, [sp, #32]
   123c0:	mov	r6, #0
   123c4:	b	12050 <abort@plt+0x1304>
   123c8:	mov	r6, #0
   123cc:	b	12078 <abort@plt+0x132c>
   123d0:	mov	r6, #0
   123d4:	b	11e44 <abort@plt+0x10f8>
   123d8:	mov	r6, #0
   123dc:	b	11f0c <abort@plt+0x11c0>
   123e0:	mov	r6, #0
   123e4:	b	11edc <abort@plt+0x1190>
   123e8:	mov	r6, #0
   123ec:	mov	r3, #116	; 0x74
   123f0:	b	11ee4 <abort@plt+0x1198>
   123f4:	mov	r6, #0
   123f8:	b	11f20 <abort@plt+0x11d4>
   123fc:	mov	r6, #0
   12400:	b	11f34 <abort@plt+0x11e8>
   12404:	ldr	r3, [sp, #56]	; 0x38
   12408:	mov	r6, #0
   1240c:	cmp	r3, #0
   12410:	bne	11f54 <abort@plt+0x1208>
   12414:	ldr	r3, [sp, #96]	; 0x60
   12418:	cmp	r3, #0
   1241c:	addne	sl, sl, #1
   12420:	bne	117c8 <abort@plt+0xa7c>
   12424:	ldr	r1, [sp, #52]	; 0x34
   12428:	str	r3, [sp, #32]
   1242c:	mov	r4, r3
   12430:	b	11c70 <abort@plt+0xf24>
   12434:	mov	r6, #0
   12438:	ldr	r3, [sp, #80]	; 0x50
   1243c:	cmp	r3, #1
   12440:	bne	12630 <abort@plt+0x18e4>
   12444:	bl	10c80 <__ctype_b_loc@plt>
   12448:	ldr	r2, [sp, #80]	; 0x50
   1244c:	sxth	r3, r4
   12450:	mov	r1, r2
   12454:	lsl	r3, r3, #1
   12458:	ldr	r2, [r0]
   1245c:	ldrh	r3, [r2, r3]
   12460:	and	r3, r3, #16384	; 0x4000
   12464:	cmp	r3, #0
   12468:	movne	r3, #1
   1246c:	moveq	r3, #0
   12470:	str	r3, [sp, #32]
   12474:	moveq	r3, #1
   12478:	movne	r3, #0
   1247c:	ldr	r2, [sp, #56]	; 0x38
   12480:	and	r3, r3, r2
   12484:	ands	r3, r3, #255	; 0xff
   12488:	beq	1205c <abort@plt+0x1310>
   1248c:	add	r1, sl, r1
   12490:	mov	r0, #0
   12494:	ldr	r7, [sp, #40]	; 0x28
   12498:	ldr	r2, [sp, #36]	; 0x24
   1249c:	ldr	lr, [sp, #52]	; 0x34
   124a0:	b	12550 <abort@plt+0x1804>
   124a4:	cmp	r7, #0
   124a8:	bne	128a4 <abort@plt+0x1b58>
   124ac:	eor	r0, r2, #1
   124b0:	ands	r0, lr, r0
   124b4:	beq	124ec <abort@plt+0x17a0>
   124b8:	cmp	fp, r8
   124bc:	movhi	r2, #39	; 0x27
   124c0:	strbhi	r2, [r9, r8]
   124c4:	add	r2, r8, #1
   124c8:	cmp	fp, r2
   124cc:	movhi	ip, #36	; 0x24
   124d0:	strbhi	ip, [r9, r2]
   124d4:	add	r2, r8, #2
   124d8:	cmp	fp, r2
   124dc:	movhi	ip, #39	; 0x27
   124e0:	strbhi	ip, [r9, r2]
   124e4:	add	r8, r8, #3
   124e8:	mov	r2, r0
   124ec:	cmp	fp, r8
   124f0:	movhi	r0, #92	; 0x5c
   124f4:	strbhi	r0, [r9, r8]
   124f8:	add	r0, r8, #1
   124fc:	cmp	fp, r0
   12500:	lsrhi	ip, r4, #6
   12504:	addhi	ip, ip, #48	; 0x30
   12508:	strbhi	ip, [r9, r0]
   1250c:	add	ip, r8, #2
   12510:	cmp	fp, ip
   12514:	lsrhi	r0, r4, #3
   12518:	andhi	r0, r0, #7
   1251c:	addhi	r0, r0, #48	; 0x30
   12520:	add	sl, sl, #1
   12524:	strbhi	r0, [r9, ip]
   12528:	and	r4, r4, #7
   1252c:	cmp	sl, r1
   12530:	add	r4, r4, #48	; 0x30
   12534:	add	r8, r8, #3
   12538:	bcs	128bc <abort@plt+0x1b70>
   1253c:	mov	r0, r3
   12540:	cmp	fp, r8
   12544:	strbhi	r4, [r9, r8]
   12548:	ldrb	r4, [r5, #1]!
   1254c:	add	r8, r8, #1
   12550:	cmp	r3, #0
   12554:	bne	124a4 <abort@plt+0x1758>
   12558:	cmp	r6, #0
   1255c:	bne	12600 <abort@plt+0x18b4>
   12560:	eor	r6, r0, #1
   12564:	and	r6, r6, r2
   12568:	add	sl, sl, #1
   1256c:	cmp	r1, sl
   12570:	uxtb	r6, r6
   12574:	bls	12628 <abort@plt+0x18dc>
   12578:	cmp	r6, #0
   1257c:	beq	12540 <abort@plt+0x17f4>
   12580:	cmp	fp, r8
   12584:	movhi	r2, #39	; 0x27
   12588:	strbhi	r2, [r9, r8]
   1258c:	add	r2, r8, #1
   12590:	cmp	fp, r2
   12594:	movhi	ip, #39	; 0x27
   12598:	strbhi	ip, [r9, r2]
   1259c:	add	r8, r8, #2
   125a0:	mov	r6, r3
   125a4:	mov	r2, r3
   125a8:	b	12540 <abort@plt+0x17f4>
   125ac:	ldr	r3, [sp, #184]	; 0xb8
   125b0:	cmp	r3, #0
   125b4:	beq	11c8c <abort@plt+0xf40>
   125b8:	lsr	r2, r4, #5
   125bc:	mov	r0, r3
   125c0:	uxtb	r2, r2
   125c4:	and	r3, r4, #31
   125c8:	ldr	r2, [r0, r2, lsl #2]
   125cc:	lsr	r3, r2, r3
   125d0:	tst	r3, #1
   125d4:	beq	11c8c <abort@plt+0xf40>
   125d8:	ldr	r3, [sp, #40]	; 0x28
   125dc:	cmp	r3, #0
   125e0:	beq	11e78 <abort@plt+0x112c>
   125e4:	mov	r3, r1
   125e8:	str	r3, [sp, #64]	; 0x40
   125ec:	mov	sl, r9
   125f0:	ldr	r3, [sp, #56]	; 0x38
   125f4:	mov	r9, fp
   125f8:	ldr	r2, [sp, #64]	; 0x40
   125fc:	b	127ec <abort@plt+0x1aa0>
   12600:	cmp	fp, r8
   12604:	eor	r6, r0, #1
   12608:	movhi	ip, #92	; 0x5c
   1260c:	and	r6, r6, r2
   12610:	add	sl, sl, #1
   12614:	strbhi	ip, [r9, r8]
   12618:	cmp	r1, sl
   1261c:	add	r8, r8, #1
   12620:	uxtb	r6, r6
   12624:	bhi	12578 <abort@plt+0x182c>
   12628:	str	r2, [sp, #36]	; 0x24
   1262c:	b	11ca4 <abort@plt+0xf58>
   12630:	ldr	r3, [sp, #24]
   12634:	cmn	r3, #1
   12638:	mov	r3, #0
   1263c:	str	r3, [sp, #128]	; 0x80
   12640:	str	r3, [sp, #132]	; 0x84
   12644:	beq	12938 <abort@plt+0x1bec>
   12648:	mov	r2, r7
   1264c:	mov	r3, #0
   12650:	str	r7, [sp, #104]	; 0x68
   12654:	str	r5, [sp, #116]	; 0x74
   12658:	mov	r7, r3
   1265c:	mov	r5, r2
   12660:	str	r4, [sp, #32]
   12664:	str	r6, [sp, #108]	; 0x6c
   12668:	str	r8, [sp, #112]	; 0x70
   1266c:	ldr	r3, [sp, #44]	; 0x2c
   12670:	add	r6, sl, r7
   12674:	add	r4, r3, r6
   12678:	ldr	r3, [sp, #24]
   1267c:	mov	r1, r4
   12680:	sub	r2, r3, r6
   12684:	add	r0, sp, #124	; 0x7c
   12688:	add	r3, sp, #128	; 0x80
   1268c:	bl	16950 <abort@plt+0x5c04>
   12690:	subs	r8, r0, #0
   12694:	beq	12a1c <abort@plt+0x1cd0>
   12698:	cmn	r8, #1
   1269c:	beq	129f4 <abort@plt+0x1ca8>
   126a0:	cmn	r8, #2
   126a4:	beq	1298c <abort@plt+0x1c40>
   126a8:	ldr	r3, [sp, #64]	; 0x40
   126ac:	cmp	r3, #0
   126b0:	beq	12770 <abort@plt+0x1a24>
   126b4:	cmp	r8, #1
   126b8:	beq	12770 <abort@plt+0x1a24>
   126bc:	sub	r3, r8, #1
   126c0:	add	r6, r3, r6
   126c4:	ldr	r3, [sp, #44]	; 0x2c
   126c8:	add	r6, r3, r6
   126cc:	ldrb	r3, [r4, #1]!
   126d0:	sub	r3, r3, #91	; 0x5b
   126d4:	cmp	r3, #33	; 0x21
   126d8:	ldrls	pc, [pc, r3, lsl #2]
   126dc:	b	12768 <abort@plt+0x1a1c>
   126e0:	ldrdeq	r2, [r1], -r4
   126e4:	ldrdeq	r2, [r1], -r4
   126e8:	andeq	r2, r1, r8, ror #14
   126ec:	ldrdeq	r2, [r1], -r4
   126f0:	andeq	r2, r1, r8, ror #14
   126f4:	ldrdeq	r2, [r1], -r4
   126f8:	andeq	r2, r1, r8, ror #14
   126fc:	andeq	r2, r1, r8, ror #14
   12700:	andeq	r2, r1, r8, ror #14
   12704:	andeq	r2, r1, r8, ror #14
   12708:	andeq	r2, r1, r8, ror #14
   1270c:	andeq	r2, r1, r8, ror #14
   12710:	andeq	r2, r1, r8, ror #14
   12714:	andeq	r2, r1, r8, ror #14
   12718:	andeq	r2, r1, r8, ror #14
   1271c:	andeq	r2, r1, r8, ror #14
   12720:	andeq	r2, r1, r8, ror #14
   12724:	andeq	r2, r1, r8, ror #14
   12728:	andeq	r2, r1, r8, ror #14
   1272c:	andeq	r2, r1, r8, ror #14
   12730:	andeq	r2, r1, r8, ror #14
   12734:	andeq	r2, r1, r8, ror #14
   12738:	andeq	r2, r1, r8, ror #14
   1273c:	andeq	r2, r1, r8, ror #14
   12740:	andeq	r2, r1, r8, ror #14
   12744:	andeq	r2, r1, r8, ror #14
   12748:	andeq	r2, r1, r8, ror #14
   1274c:	andeq	r2, r1, r8, ror #14
   12750:	andeq	r2, r1, r8, ror #14
   12754:	andeq	r2, r1, r8, ror #14
   12758:	andeq	r2, r1, r8, ror #14
   1275c:	andeq	r2, r1, r8, ror #14
   12760:	andeq	r2, r1, r8, ror #14
   12764:	ldrdeq	r2, [r1], -r4
   12768:	cmp	r6, r4
   1276c:	bne	126cc <abort@plt+0x1980>
   12770:	ldr	r0, [sp, #124]	; 0x7c
   12774:	bl	10bf0 <iswprint@plt>
   12778:	add	r7, r7, r8
   1277c:	cmp	r0, #0
   12780:	add	r0, sp, #128	; 0x80
   12784:	moveq	r5, #0
   12788:	bl	10ba8 <mbsinit@plt>
   1278c:	cmp	r0, #0
   12790:	beq	1266c <abort@plt+0x1920>
   12794:	ldr	r4, [sp, #32]
   12798:	str	r5, [sp, #32]
   1279c:	ldr	r3, [sp, #32]
   127a0:	mov	r1, r7
   127a4:	eor	r3, r3, #1
   127a8:	ldr	r7, [sp, #104]	; 0x68
   127ac:	ldr	r6, [sp, #108]	; 0x6c
   127b0:	ldr	r8, [sp, #112]	; 0x70
   127b4:	ldr	r5, [sp, #116]	; 0x74
   127b8:	uxtb	r3, r3
   127bc:	cmp	r1, #1
   127c0:	bls	1247c <abort@plt+0x1730>
   127c4:	ldr	r2, [sp, #56]	; 0x38
   127c8:	and	r3, r3, r2
   127cc:	uxtb	r3, r3
   127d0:	b	1248c <abort@plt+0x1740>
   127d4:	mov	r3, #2
   127d8:	str	r3, [sp, #176]	; 0xb0
   127dc:	ldr	r2, [sp, #64]	; 0x40
   127e0:	ldr	r3, [sp, #56]	; 0x38
   127e4:	mov	sl, r9
   127e8:	mov	r9, fp
   127ec:	and	r3, r3, r2
   127f0:	tst	r3, #255	; 0xff
   127f4:	ldr	r3, [sp, #176]	; 0xb0
   127f8:	movne	r3, #4
   127fc:	str	r3, [sp, #176]	; 0xb0
   12800:	ldr	r3, [sp, #180]	; 0xb4
   12804:	mov	ip, #0
   12808:	bic	r3, r3, #2
   1280c:	str	r3, [sp, #4]
   12810:	ldr	r3, [sp, #192]	; 0xc0
   12814:	ldr	r2, [sp, #44]	; 0x2c
   12818:	str	r3, [sp, #16]
   1281c:	ldr	r3, [sp, #188]	; 0xbc
   12820:	mov	r1, r9
   12824:	str	r3, [sp, #12]
   12828:	ldr	r3, [sp, #176]	; 0xb0
   1282c:	mov	r0, sl
   12830:	str	r3, [sp]
   12834:	str	ip, [sp, #8]
   12838:	ldr	r3, [sp, #24]
   1283c:	bl	1169c <abort@plt+0x950>
   12840:	mov	fp, r0
   12844:	mov	r0, fp
   12848:	add	sp, sp, #140	; 0x8c
   1284c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12850:	mov	r4, #92	; 0x5c
   12854:	mov	r1, #0
   12858:	mov	r3, r4
   1285c:	b	11e50 <abort@plt+0x1104>
   12860:	mov	r3, #0
   12864:	ldr	r1, [sp, #52]	; 0x34
   12868:	str	r3, [sp, #32]
   1286c:	mov	r4, #63	; 0x3f
   12870:	b	11c70 <abort@plt+0xf24>
   12874:	cmp	fp, #0
   12878:	beq	128d4 <abort@plt+0x1b88>
   1287c:	mov	r3, #39	; 0x27
   12880:	strb	r3, [r9]
   12884:	mov	r3, #0
   12888:	str	r3, [sp, #40]	; 0x28
   1288c:	mov	r3, #1
   12890:	str	r3, [sp, #68]	; 0x44
   12894:	ldr	r3, [pc, #448]	; 12a5c <abort@plt+0x1d10>
   12898:	mov	r8, #1
   1289c:	str	r3, [sp, #72]	; 0x48
   128a0:	b	11a84 <abort@plt+0xd38>
   128a4:	ldr	r3, [sp, #40]	; 0x28
   128a8:	mov	sl, r9
   128ac:	str	r3, [sp, #56]	; 0x38
   128b0:	mov	r9, fp
   128b4:	ldr	r2, [sp, #64]	; 0x40
   128b8:	b	127ec <abort@plt+0x1aa0>
   128bc:	str	r2, [sp, #36]	; 0x24
   128c0:	b	11cd4 <abort@plt+0xf88>
   128c4:	mov	r1, #0
   128c8:	str	r3, [sp, #32]
   128cc:	mov	r4, #63	; 0x3f
   128d0:	b	11c70 <abort@plt+0xf24>
   128d4:	ldr	r3, [pc, #384]	; 12a5c <abort@plt+0x1d10>
   128d8:	str	r3, [sp, #72]	; 0x48
   128dc:	mov	r3, #0
   128e0:	str	r3, [sp, #40]	; 0x28
   128e4:	mov	r3, #1
   128e8:	str	r3, [sp, #68]	; 0x44
   128ec:	mov	r8, r3
   128f0:	b	11a84 <abort@plt+0xd38>
   128f4:	bl	10d4c <abort@plt>
   128f8:	cmp	fp, #0
   128fc:	beq	1295c <abort@plt+0x1c10>
   12900:	mov	r2, #1
   12904:	mov	r3, #34	; 0x22
   12908:	strb	r3, [r9]
   1290c:	mov	r8, r2
   12910:	mov	r3, r2
   12914:	str	r2, [sp, #68]	; 0x44
   12918:	str	r3, [sp, #56]	; 0x38
   1291c:	ldr	r3, [pc, #316]	; 12a60 <abort@plt+0x1d14>
   12920:	ldr	r1, [sp, #56]	; 0x38
   12924:	str	r3, [sp, #72]	; 0x48
   12928:	ldr	r2, [sp, #176]	; 0xb0
   1292c:	ldr	ip, [sp, #40]	; 0x28
   12930:	ldr	lr, [sp, #176]	; 0xb0
   12934:	b	11768 <abort@plt+0xa1c>
   12938:	ldr	r0, [sp, #44]	; 0x2c
   1293c:	bl	10c98 <strlen@plt>
   12940:	str	r0, [sp, #24]
   12944:	b	12648 <abort@plt+0x18fc>
   12948:	mov	r7, #0
   1294c:	ldr	r1, [sp, #52]	; 0x34
   12950:	str	r3, [sp, #32]
   12954:	mov	r4, #48	; 0x30
   12958:	b	11c70 <abort@plt+0xf24>
   1295c:	mov	r3, #1
   12960:	str	r3, [sp, #68]	; 0x44
   12964:	mov	r8, r3
   12968:	b	12918 <abort@plt+0x1bcc>
   1296c:	mov	r3, #2
   12970:	mov	sl, r9
   12974:	str	r3, [sp, #176]	; 0xb0
   12978:	mov	r9, fp
   1297c:	ldr	r3, [sp, #56]	; 0x38
   12980:	b	127ec <abort@plt+0x1aa0>
   12984:	ldr	r6, [sp, #48]	; 0x30
   12988:	b	12438 <abort@plt+0x16ec>
   1298c:	ldr	r0, [sp, #24]
   12990:	mov	ip, r6
   12994:	cmp	r0, ip
   12998:	mov	r1, r7
   1299c:	mov	r2, r4
   129a0:	ldr	r7, [sp, #104]	; 0x68
   129a4:	ldr	r4, [sp, #32]
   129a8:	ldr	r6, [sp, #108]	; 0x6c
   129ac:	ldr	r8, [sp, #112]	; 0x70
   129b0:	ldr	r5, [sp, #116]	; 0x74
   129b4:	bls	129e4 <abort@plt+0x1c98>
   129b8:	ldrb	r3, [r2]
   129bc:	cmp	r3, #0
   129c0:	bne	129d4 <abort@plt+0x1c88>
   129c4:	b	12af4 <abort@plt+0x1da8>
   129c8:	ldrb	r3, [r2, #1]!
   129cc:	cmp	r3, #0
   129d0:	beq	12af4 <abort@plt+0x1da8>
   129d4:	add	r1, r1, #1
   129d8:	add	r3, sl, r1
   129dc:	cmp	r0, r3
   129e0:	bhi	129c8 <abort@plt+0x1c7c>
   129e4:	mov	r2, #0
   129e8:	mov	r3, r7
   129ec:	str	r2, [sp, #32]
   129f0:	b	127bc <abort@plt+0x1a70>
   129f4:	mov	r1, r7
   129f8:	ldr	r7, [sp, #104]	; 0x68
   129fc:	mov	r2, #0
   12a00:	ldr	r4, [sp, #32]
   12a04:	ldr	r6, [sp, #108]	; 0x6c
   12a08:	ldr	r8, [sp, #112]	; 0x70
   12a0c:	ldr	r5, [sp, #116]	; 0x74
   12a10:	mov	r3, r7
   12a14:	str	r2, [sp, #32]
   12a18:	b	127bc <abort@plt+0x1a70>
   12a1c:	mov	r3, r5
   12a20:	eor	r3, r3, #1
   12a24:	ldr	r4, [sp, #32]
   12a28:	mov	r1, r7
   12a2c:	str	r5, [sp, #32]
   12a30:	ldr	r7, [sp, #104]	; 0x68
   12a34:	ldr	r6, [sp, #108]	; 0x6c
   12a38:	ldr	r8, [sp, #112]	; 0x70
   12a3c:	ldr	r5, [sp, #116]	; 0x74
   12a40:	uxtb	r3, r3
   12a44:	b	127bc <abort@plt+0x1a70>
   12a48:	mov	sl, r9
   12a4c:	str	r3, [sp, #56]	; 0x38
   12a50:	mov	r9, fp
   12a54:	ldr	r2, [sp, #64]	; 0x40
   12a58:	b	127ec <abort@plt+0x1aa0>
   12a5c:	andeq	r7, r1, r0, lsl r5
   12a60:	andeq	r7, r1, ip, lsl #10
   12a64:	andeq	r7, r1, r4, lsl r5
   12a68:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12a6c:	ldr	r2, [sp, #44]	; 0x2c
   12a70:	ldrb	r1, [r2, r3]
   12a74:	sub	r2, r1, #33	; 0x21
   12a78:	uxtb	r2, r2
   12a7c:	cmp	r2, #29
   12a80:	bhi	12b00 <abort@plt+0x1db4>
   12a84:	ldr	r0, [pc, #-36]	; 12a68 <abort@plt+0x1d1c>
   12a88:	mov	ip, #1
   12a8c:	ands	r2, r0, ip, lsl r2
   12a90:	beq	12b20 <abort@plt+0x1dd4>
   12a94:	ldr	r2, [sp, #40]	; 0x28
   12a98:	cmp	r2, #0
   12a9c:	bne	12c14 <abort@plt+0x1ec8>
   12aa0:	add	r2, r8, #1
   12aa4:	cmp	fp, r8
   12aa8:	strbhi	r4, [r9, r8]
   12aac:	cmp	fp, r2
   12ab0:	movhi	r0, #34	; 0x22
   12ab4:	strbhi	r0, [r9, r2]
   12ab8:	add	r2, r8, #2
   12abc:	cmp	fp, r2
   12ac0:	movhi	r0, #34	; 0x22
   12ac4:	strbhi	r0, [r9, r2]
   12ac8:	add	r2, r8, #3
   12acc:	cmp	fp, r2
   12ad0:	mov	sl, r3
   12ad4:	ldr	r3, [sp, #40]	; 0x28
   12ad8:	movhi	r0, #63	; 0x3f
   12adc:	mov	r4, r1
   12ae0:	strbhi	r0, [r9, r2]
   12ae4:	add	r8, r8, #4
   12ae8:	mov	r1, r3
   12aec:	str	r3, [sp, #32]
   12af0:	b	11c70 <abort@plt+0xf24>
   12af4:	str	r3, [sp, #32]
   12af8:	mov	r3, r7
   12afc:	b	127bc <abort@plt+0x1a70>
   12b00:	mov	r1, #0
   12b04:	str	r1, [sp, #32]
   12b08:	b	11c70 <abort@plt+0xf24>
   12b0c:	mov	sl, r9
   12b10:	ldr	r3, [sp, #56]	; 0x38
   12b14:	mov	r9, fp
   12b18:	ldr	r2, [sp, #64]	; 0x40
   12b1c:	b	127ec <abort@plt+0x1aa0>
   12b20:	str	r2, [sp, #32]
   12b24:	mov	r1, #0
   12b28:	b	11c70 <abort@plt+0xf24>
   12b2c:	ldr	r2, [sp, #76]	; 0x4c
   12b30:	mov	sl, r9
   12b34:	mov	r9, fp
   12b38:	mov	fp, r8
   12b3c:	ldr	r1, [sp, #72]	; 0x48
   12b40:	cmp	r1, #0
   12b44:	moveq	r3, #0
   12b48:	andne	r3, r2, #1
   12b4c:	cmp	r3, #0
   12b50:	beq	12b7c <abort@plt+0x1e30>
   12b54:	ldrb	r3, [r1]
   12b58:	cmp	r3, #0
   12b5c:	beq	12b7c <abort@plt+0x1e30>
   12b60:	mov	r2, r1
   12b64:	cmp	r9, fp
   12b68:	strbhi	r3, [sl, fp]
   12b6c:	ldrb	r3, [r2, #1]!
   12b70:	add	fp, fp, #1
   12b74:	cmp	r3, #0
   12b78:	bne	12b64 <abort@plt+0x1e18>
   12b7c:	cmp	r9, fp
   12b80:	movhi	r3, #0
   12b84:	strbhi	r3, [sl, fp]
   12b88:	b	12844 <abort@plt+0x1af8>
   12b8c:	ldr	r3, [sp, #192]	; 0xc0
   12b90:	mov	ip, #5
   12b94:	str	r3, [sp, #16]
   12b98:	ldr	r3, [sp, #188]	; 0xbc
   12b9c:	ldr	r2, [sp, #44]	; 0x2c
   12ba0:	str	r3, [sp, #12]
   12ba4:	ldr	r3, [sp, #184]	; 0xb8
   12ba8:	ldr	r1, [sp, #84]	; 0x54
   12bac:	str	r3, [sp, #8]
   12bb0:	ldr	r3, [sp, #180]	; 0xb4
   12bb4:	mov	r0, r9
   12bb8:	str	r3, [sp, #4]
   12bbc:	str	ip, [sp]
   12bc0:	ldr	r3, [sp, #24]
   12bc4:	bl	1169c <abort@plt+0x950>
   12bc8:	mov	fp, r0
   12bcc:	b	12844 <abort@plt+0x1af8>
   12bd0:	mov	sl, r9
   12bd4:	mov	r9, fp
   12bd8:	mov	fp, r8
   12bdc:	b	12b3c <abort@plt+0x1df0>
   12be0:	ldr	r1, [sp, #176]	; 0xb0
   12be4:	bl	1157c <abort@plt+0x830>
   12be8:	str	r0, [sp, #192]	; 0xc0
   12bec:	b	11b58 <abort@plt+0xe0c>
   12bf0:	ldr	r1, [sp, #176]	; 0xb0
   12bf4:	bl	1157c <abort@plt+0x830>
   12bf8:	str	r0, [sp, #188]	; 0xbc
   12bfc:	b	11b38 <abort@plt+0xdec>
   12c00:	mov	sl, r9
   12c04:	mov	r2, r3
   12c08:	mov	r9, fp
   12c0c:	mov	fp, r8
   12c10:	b	12b3c <abort@plt+0x1df0>
   12c14:	mov	sl, r9
   12c18:	mov	r9, fp
   12c1c:	b	12800 <abort@plt+0x1ab4>
   12c20:	push	{r4, r5, r6, lr}
   12c24:	mov	r5, r0
   12c28:	bl	10cb0 <__errno_location@plt>
   12c2c:	cmp	r5, #0
   12c30:	mov	r1, #48	; 0x30
   12c34:	mov	r4, r0
   12c38:	ldr	r0, [pc, #16]	; 12c50 <abort@plt+0x1f04>
   12c3c:	ldr	r6, [r4]
   12c40:	movne	r0, r5
   12c44:	bl	164bc <abort@plt+0x5770>
   12c48:	str	r6, [r4]
   12c4c:	pop	{r4, r5, r6, pc}
   12c50:	andeq	r8, r2, r0, asr #2
   12c54:	ldr	r3, [pc, #12]	; 12c68 <abort@plt+0x1f1c>
   12c58:	cmp	r0, #0
   12c5c:	moveq	r0, r3
   12c60:	ldr	r0, [r0]
   12c64:	bx	lr
   12c68:	andeq	r8, r2, r0, asr #2
   12c6c:	ldr	r3, [pc, #12]	; 12c80 <abort@plt+0x1f34>
   12c70:	cmp	r0, #0
   12c74:	moveq	r0, r3
   12c78:	str	r1, [r0]
   12c7c:	bx	lr
   12c80:	andeq	r8, r2, r0, asr #2
   12c84:	ldr	r3, [pc, #52]	; 12cc0 <abort@plt+0x1f74>
   12c88:	cmp	r0, #0
   12c8c:	moveq	r0, r3
   12c90:	add	r3, r0, #8
   12c94:	push	{lr}		; (str lr, [sp, #-4]!)
   12c98:	lsr	lr, r1, #5
   12c9c:	and	r1, r1, #31
   12ca0:	ldr	ip, [r3, lr, lsl #2]
   12ca4:	lsr	r0, ip, r1
   12ca8:	eor	r2, r2, r0
   12cac:	and	r2, r2, #1
   12cb0:	and	r0, r0, #1
   12cb4:	eor	r1, ip, r2, lsl r1
   12cb8:	str	r1, [r3, lr, lsl #2]
   12cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   12cc0:	andeq	r8, r2, r0, asr #2
   12cc4:	ldr	r3, [pc, #16]	; 12cdc <abort@plt+0x1f90>
   12cc8:	cmp	r0, #0
   12ccc:	movne	r3, r0
   12cd0:	ldr	r0, [r3, #4]
   12cd4:	str	r1, [r3, #4]
   12cd8:	bx	lr
   12cdc:	andeq	r8, r2, r0, asr #2
   12ce0:	ldr	r3, [pc, #44]	; 12d14 <abort@plt+0x1fc8>
   12ce4:	cmp	r0, #0
   12ce8:	moveq	r0, r3
   12cec:	mov	ip, #10
   12cf0:	cmp	r2, #0
   12cf4:	cmpne	r1, #0
   12cf8:	str	ip, [r0]
   12cfc:	beq	12d0c <abort@plt+0x1fc0>
   12d00:	str	r1, [r0, #40]	; 0x28
   12d04:	str	r2, [r0, #44]	; 0x2c
   12d08:	bx	lr
   12d0c:	push	{r4, lr}
   12d10:	bl	10d4c <abort@plt>
   12d14:	andeq	r8, r2, r0, asr #2
   12d18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d1c:	sub	sp, sp, #24
   12d20:	ldr	ip, [pc, #108]	; 12d94 <abort@plt+0x2048>
   12d24:	ldr	r4, [sp, #56]	; 0x38
   12d28:	mov	r9, r2
   12d2c:	cmp	r4, #0
   12d30:	moveq	r4, ip
   12d34:	mov	sl, r3
   12d38:	mov	r7, r0
   12d3c:	mov	r8, r1
   12d40:	bl	10cb0 <__errno_location@plt>
   12d44:	ldr	r3, [r4, #44]	; 0x2c
   12d48:	mov	r1, r8
   12d4c:	ldr	r6, [r0]
   12d50:	str	r3, [sp, #16]
   12d54:	ldr	r2, [r4, #40]	; 0x28
   12d58:	add	r3, r4, #8
   12d5c:	str	r3, [sp, #8]
   12d60:	str	r2, [sp, #12]
   12d64:	ldr	r2, [r4, #4]
   12d68:	mov	r5, r0
   12d6c:	str	r2, [sp, #4]
   12d70:	ldr	ip, [r4]
   12d74:	mov	r3, sl
   12d78:	mov	r2, r9
   12d7c:	mov	r0, r7
   12d80:	str	ip, [sp]
   12d84:	bl	1169c <abort@plt+0x950>
   12d88:	str	r6, [r5]
   12d8c:	add	sp, sp, #24
   12d90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d94:	andeq	r8, r2, r0, asr #2
   12d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d9c:	cmp	r2, #0
   12da0:	sub	sp, sp, #36	; 0x24
   12da4:	ldr	r4, [pc, #164]	; 12e50 <abort@plt+0x2104>
   12da8:	mov	r8, r1
   12dac:	movne	r4, r2
   12db0:	mov	r7, r0
   12db4:	bl	10cb0 <__errno_location@plt>
   12db8:	ldr	r3, [r4, #44]	; 0x2c
   12dbc:	ldr	r5, [r4, #4]
   12dc0:	add	r9, r4, #8
   12dc4:	orr	r5, r5, #1
   12dc8:	mov	r1, #0
   12dcc:	mov	r2, r7
   12dd0:	ldr	fp, [r0]
   12dd4:	str	r3, [sp, #16]
   12dd8:	ldr	r3, [r4, #40]	; 0x28
   12ddc:	stmib	sp, {r5, r9}
   12de0:	str	r3, [sp, #12]
   12de4:	ldr	r3, [r4]
   12de8:	mov	r6, r0
   12dec:	str	r3, [sp]
   12df0:	mov	r0, r1
   12df4:	mov	r3, r8
   12df8:	bl	1169c <abort@plt+0x950>
   12dfc:	add	r1, r0, #1
   12e00:	mov	r0, r1
   12e04:	str	r1, [sp, #28]
   12e08:	bl	15f78 <abort@plt+0x522c>
   12e0c:	ldr	r3, [r4, #44]	; 0x2c
   12e10:	ldr	r1, [sp, #28]
   12e14:	str	r3, [sp, #16]
   12e18:	ldr	r3, [r4, #40]	; 0x28
   12e1c:	str	r5, [sp, #4]
   12e20:	str	r3, [sp, #12]
   12e24:	str	r9, [sp, #8]
   12e28:	ldr	ip, [r4]
   12e2c:	mov	r3, r8
   12e30:	mov	r2, r7
   12e34:	str	ip, [sp]
   12e38:	mov	sl, r0
   12e3c:	bl	1169c <abort@plt+0x950>
   12e40:	mov	r0, sl
   12e44:	str	fp, [r6]
   12e48:	add	sp, sp, #36	; 0x24
   12e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e50:	andeq	r8, r2, r0, asr #2
   12e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e58:	cmp	r3, #0
   12e5c:	sub	sp, sp, #44	; 0x2c
   12e60:	ldr	r4, [pc, #192]	; 12f28 <abort@plt+0x21dc>
   12e64:	mov	r6, r2
   12e68:	movne	r4, r3
   12e6c:	mov	r9, r1
   12e70:	mov	r8, r0
   12e74:	bl	10cb0 <__errno_location@plt>
   12e78:	ldr	r3, [r4, #44]	; 0x2c
   12e7c:	ldr	r5, [r4, #4]
   12e80:	add	sl, r4, #8
   12e84:	cmp	r6, #0
   12e88:	orreq	r5, r5, #1
   12e8c:	mov	r1, #0
   12e90:	ldr	r2, [r0]
   12e94:	str	r3, [sp, #16]
   12e98:	ldr	r3, [r4, #40]	; 0x28
   12e9c:	stmib	sp, {r5, sl}
   12ea0:	str	r3, [sp, #12]
   12ea4:	ldr	r3, [r4]
   12ea8:	mov	r7, r0
   12eac:	str	r2, [sp, #28]
   12eb0:	str	r3, [sp]
   12eb4:	mov	r2, r8
   12eb8:	mov	r3, r9
   12ebc:	mov	r0, r1
   12ec0:	bl	1169c <abort@plt+0x950>
   12ec4:	add	r1, r0, #1
   12ec8:	mov	fp, r0
   12ecc:	mov	r0, r1
   12ed0:	str	r1, [sp, #36]	; 0x24
   12ed4:	bl	15f78 <abort@plt+0x522c>
   12ed8:	ldr	r3, [r4, #44]	; 0x2c
   12edc:	mov	r2, r8
   12ee0:	str	r3, [sp, #16]
   12ee4:	ldr	r3, [r4, #40]	; 0x28
   12ee8:	str	r5, [sp, #4]
   12eec:	str	r3, [sp, #12]
   12ef0:	str	sl, [sp, #8]
   12ef4:	ldr	ip, [r4]
   12ef8:	ldr	r1, [sp, #36]	; 0x24
   12efc:	mov	r3, r9
   12f00:	str	ip, [sp]
   12f04:	str	r0, [sp, #32]
   12f08:	bl	1169c <abort@plt+0x950>
   12f0c:	ldr	r2, [sp, #28]
   12f10:	cmp	r6, #0
   12f14:	str	r2, [r7]
   12f18:	ldr	r0, [sp, #32]
   12f1c:	strne	fp, [r6]
   12f20:	add	sp, sp, #44	; 0x2c
   12f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f28:	andeq	r8, r2, r0, asr #2
   12f2c:	push	{r4, r5, r6, r7, r8, lr}
   12f30:	ldr	r6, [pc, #116]	; 12fac <abort@plt+0x2260>
   12f34:	ldr	r3, [r6, #4]
   12f38:	ldr	r7, [r6]
   12f3c:	cmp	r3, #1
   12f40:	movgt	r5, r7
   12f44:	movgt	r4, #1
   12f48:	ble	12f68 <abort@plt+0x221c>
   12f4c:	ldr	r0, [r5, #12]
   12f50:	bl	16824 <abort@plt+0x5ad8>
   12f54:	ldr	r3, [r6, #4]
   12f58:	add	r4, r4, #1
   12f5c:	cmp	r3, r4
   12f60:	add	r5, r5, #8
   12f64:	bgt	12f4c <abort@plt+0x2200>
   12f68:	ldr	r0, [r7, #4]
   12f6c:	ldr	r4, [pc, #60]	; 12fb0 <abort@plt+0x2264>
   12f70:	cmp	r0, r4
   12f74:	beq	12f88 <abort@plt+0x223c>
   12f78:	bl	16824 <abort@plt+0x5ad8>
   12f7c:	mov	r3, #256	; 0x100
   12f80:	str	r4, [r6, #12]
   12f84:	str	r3, [r6, #8]
   12f88:	ldr	r4, [pc, #36]	; 12fb4 <abort@plt+0x2268>
   12f8c:	cmp	r7, r4
   12f90:	beq	12fa0 <abort@plt+0x2254>
   12f94:	mov	r0, r7
   12f98:	bl	16824 <abort@plt+0x5ad8>
   12f9c:	str	r4, [r6]
   12fa0:	mov	r3, #1
   12fa4:	str	r3, [r6, #4]
   12fa8:	pop	{r4, r5, r6, r7, r8, pc}
   12fac:	ldrdeq	r8, [r2], -r0
   12fb0:	andeq	r8, r2, r0, ror r1
   12fb4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   12fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fbc:	sub	sp, sp, #44	; 0x2c
   12fc0:	mov	r5, r0
   12fc4:	mov	sl, r1
   12fc8:	bl	10cb0 <__errno_location@plt>
   12fcc:	ldr	r4, [pc, #400]	; 13164 <abort@plt+0x2418>
   12fd0:	cmn	r5, #-2147483647	; 0x80000001
   12fd4:	ldr	r6, [r4]
   12fd8:	mov	r8, r0
   12fdc:	movne	r0, #0
   12fe0:	moveq	r0, #1
   12fe4:	ldr	r3, [r8]
   12fe8:	orrs	r0, r0, r5, lsr #31
   12fec:	str	r3, [sp, #24]
   12ff0:	bne	13160 <abort@plt+0x2414>
   12ff4:	ldr	r2, [r4, #4]
   12ff8:	cmp	r5, r2
   12ffc:	blt	1305c <abort@plt+0x2310>
   13000:	add	r7, r4, #8
   13004:	cmp	r6, r7
   13008:	str	r2, [sp, #36]	; 0x24
   1300c:	beq	13130 <abort@plt+0x23e4>
   13010:	mov	r3, #8
   13014:	sub	r2, r5, r2
   13018:	mov	r0, r6
   1301c:	str	r3, [sp]
   13020:	add	r2, r2, #1
   13024:	mvn	r3, #-2147483648	; 0x80000000
   13028:	add	r1, sp, #36	; 0x24
   1302c:	bl	16194 <abort@plt+0x5448>
   13030:	mov	r6, r0
   13034:	str	r0, [r4]
   13038:	ldr	r0, [r4, #4]
   1303c:	ldr	r2, [sp, #36]	; 0x24
   13040:	mov	r1, #0
   13044:	sub	r2, r2, r0
   13048:	add	r0, r6, r0, lsl #3
   1304c:	lsl	r2, r2, #3
   13050:	bl	10cc8 <memset@plt>
   13054:	ldr	r3, [sp, #36]	; 0x24
   13058:	str	r3, [r4, #4]
   1305c:	ldr	r4, [pc, #260]	; 13168 <abort@plt+0x241c>
   13060:	add	fp, r6, r5, lsl #3
   13064:	ldr	r9, [r6, r5, lsl #3]
   13068:	ldr	r0, [r4, #4]
   1306c:	ldr	r3, [r4]
   13070:	ldr	r7, [fp, #4]
   13074:	ldr	r1, [r4, #44]	; 0x2c
   13078:	ldr	r2, [r4, #40]	; 0x28
   1307c:	orr	r0, r0, #1
   13080:	str	r3, [sp]
   13084:	add	r3, r4, #8
   13088:	str	r0, [sp, #28]
   1308c:	str	r0, [sp, #4]
   13090:	str	r1, [sp, #16]
   13094:	str	r2, [sp, #12]
   13098:	str	r3, [sp, #8]
   1309c:	mov	r0, r7
   130a0:	mov	r1, r9
   130a4:	mvn	r3, #0
   130a8:	mov	r2, sl
   130ac:	bl	1169c <abort@plt+0x950>
   130b0:	cmp	r9, r0
   130b4:	bhi	1311c <abort@plt+0x23d0>
   130b8:	add	r3, r4, #48	; 0x30
   130bc:	add	r9, r0, #1
   130c0:	cmp	r7, r3
   130c4:	str	r9, [r6, r5, lsl #3]
   130c8:	beq	130d4 <abort@plt+0x2388>
   130cc:	mov	r0, r7
   130d0:	bl	16824 <abort@plt+0x5ad8>
   130d4:	mov	r0, r9
   130d8:	bl	15f78 <abort@plt+0x522c>
   130dc:	ldr	ip, [r4, #44]	; 0x2c
   130e0:	ldr	r3, [r4]
   130e4:	ldr	lr, [r4, #40]	; 0x28
   130e8:	ldr	r4, [pc, #124]	; 1316c <abort@plt+0x2420>
   130ec:	mov	r2, sl
   130f0:	mov	r1, r9
   130f4:	str	r0, [fp, #4]
   130f8:	str	r4, [sp, #8]
   130fc:	ldr	r4, [sp, #28]
   13100:	str	r3, [sp]
   13104:	str	r4, [sp, #4]
   13108:	str	ip, [sp, #16]
   1310c:	str	lr, [sp, #12]
   13110:	mvn	r3, #0
   13114:	mov	r7, r0
   13118:	bl	1169c <abort@plt+0x950>
   1311c:	ldr	r3, [sp, #24]
   13120:	mov	r0, r7
   13124:	str	r3, [r8]
   13128:	add	sp, sp, #44	; 0x2c
   1312c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13130:	mov	r3, #8
   13134:	sub	r2, r5, r2
   13138:	str	r3, [sp]
   1313c:	add	r1, sp, #36	; 0x24
   13140:	add	r2, r2, #1
   13144:	mvn	r3, #-2147483648	; 0x80000000
   13148:	bl	16194 <abort@plt+0x5448>
   1314c:	mov	r6, r0
   13150:	ldm	r7, {r0, r1}
   13154:	str	r6, [r4]
   13158:	stm	r6, {r0, r1}
   1315c:	b	13038 <abort@plt+0x22ec>
   13160:	bl	10d4c <abort@plt>
   13164:	ldrdeq	r8, [r2], -r0
   13168:	andeq	r8, r2, r0, asr #2
   1316c:	andeq	r8, r2, r8, asr #2
   13170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13174:	sub	sp, sp, #52	; 0x34
   13178:	mov	r5, r0
   1317c:	mov	sl, r1
   13180:	mov	fp, r2
   13184:	bl	10cb0 <__errno_location@plt>
   13188:	ldr	r4, [pc, #408]	; 13328 <abort@plt+0x25dc>
   1318c:	cmn	r5, #-2147483647	; 0x80000001
   13190:	ldr	r6, [r4]
   13194:	mov	r8, r0
   13198:	movne	r0, #0
   1319c:	moveq	r0, #1
   131a0:	ldr	r3, [r8]
   131a4:	orrs	r0, r0, r5, lsr #31
   131a8:	str	r3, [sp, #28]
   131ac:	bne	13324 <abort@plt+0x25d8>
   131b0:	ldr	r2, [r4, #4]
   131b4:	cmp	r5, r2
   131b8:	blt	13218 <abort@plt+0x24cc>
   131bc:	add	r7, r4, #8
   131c0:	cmp	r6, r7
   131c4:	str	r2, [sp, #44]	; 0x2c
   131c8:	beq	132f4 <abort@plt+0x25a8>
   131cc:	mov	r3, #8
   131d0:	sub	r2, r5, r2
   131d4:	mov	r0, r6
   131d8:	str	r3, [sp]
   131dc:	add	r2, r2, #1
   131e0:	mvn	r3, #-2147483648	; 0x80000000
   131e4:	add	r1, sp, #44	; 0x2c
   131e8:	bl	16194 <abort@plt+0x5448>
   131ec:	mov	r6, r0
   131f0:	str	r0, [r4]
   131f4:	ldr	r0, [r4, #4]
   131f8:	ldr	r2, [sp, #44]	; 0x2c
   131fc:	mov	r1, #0
   13200:	sub	r2, r2, r0
   13204:	add	r0, r6, r0, lsl #3
   13208:	lsl	r2, r2, #3
   1320c:	bl	10cc8 <memset@plt>
   13210:	ldr	r3, [sp, #44]	; 0x2c
   13214:	str	r3, [r4, #4]
   13218:	ldr	r4, [pc, #268]	; 1332c <abort@plt+0x25e0>
   1321c:	add	r3, r6, r5, lsl #3
   13220:	str	r3, [sp, #32]
   13224:	ldr	r7, [r3, #4]
   13228:	ldr	r0, [r4, #4]
   1322c:	ldr	r3, [r4]
   13230:	ldr	r9, [r6, r5, lsl #3]
   13234:	ldr	r1, [r4, #44]	; 0x2c
   13238:	ldr	r2, [r4, #40]	; 0x28
   1323c:	orr	r0, r0, #1
   13240:	str	r3, [sp]
   13244:	add	r3, r4, #8
   13248:	str	r0, [sp, #36]	; 0x24
   1324c:	str	r0, [sp, #4]
   13250:	str	r1, [sp, #16]
   13254:	str	r2, [sp, #12]
   13258:	str	r3, [sp, #8]
   1325c:	mov	r0, r7
   13260:	mov	r1, r9
   13264:	mov	r3, fp
   13268:	mov	r2, sl
   1326c:	bl	1169c <abort@plt+0x950>
   13270:	cmp	r9, r0
   13274:	bhi	132e0 <abort@plt+0x2594>
   13278:	add	r3, r4, #48	; 0x30
   1327c:	add	r9, r0, #1
   13280:	cmp	r7, r3
   13284:	str	r9, [r6, r5, lsl #3]
   13288:	beq	13294 <abort@plt+0x2548>
   1328c:	mov	r0, r7
   13290:	bl	16824 <abort@plt+0x5ad8>
   13294:	mov	r0, r9
   13298:	bl	15f78 <abort@plt+0x522c>
   1329c:	ldr	ip, [sp, #32]
   132a0:	ldr	lr, [r4, #44]	; 0x2c
   132a4:	ldr	r5, [r4, #40]	; 0x28
   132a8:	mov	r3, fp
   132ac:	mov	r2, sl
   132b0:	mov	r1, r9
   132b4:	str	r0, [ip, #4]
   132b8:	ldr	ip, [r4]
   132bc:	ldr	r4, [pc, #108]	; 13330 <abort@plt+0x25e4>
   132c0:	str	lr, [sp, #16]
   132c4:	str	r4, [sp, #8]
   132c8:	ldr	r4, [sp, #36]	; 0x24
   132cc:	str	r5, [sp, #12]
   132d0:	str	r4, [sp, #4]
   132d4:	str	ip, [sp]
   132d8:	mov	r7, r0
   132dc:	bl	1169c <abort@plt+0x950>
   132e0:	ldr	r3, [sp, #28]
   132e4:	mov	r0, r7
   132e8:	str	r3, [r8]
   132ec:	add	sp, sp, #52	; 0x34
   132f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f4:	mov	r3, #8
   132f8:	sub	r2, r5, r2
   132fc:	str	r3, [sp]
   13300:	add	r1, sp, #44	; 0x2c
   13304:	add	r2, r2, #1
   13308:	mvn	r3, #-2147483648	; 0x80000000
   1330c:	bl	16194 <abort@plt+0x5448>
   13310:	mov	r6, r0
   13314:	ldm	r7, {r0, r1}
   13318:	str	r6, [r4]
   1331c:	stm	r6, {r0, r1}
   13320:	b	131f4 <abort@plt+0x24a8>
   13324:	bl	10d4c <abort@plt>
   13328:	ldrdeq	r8, [r2], -r0
   1332c:	andeq	r8, r2, r0, asr #2
   13330:	andeq	r8, r2, r8, asr #2
   13334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13338:	sub	sp, sp, #44	; 0x2c
   1333c:	mov	sl, r0
   13340:	bl	10cb0 <__errno_location@plt>
   13344:	ldr	r4, [pc, #352]	; 134ac <abort@plt+0x2760>
   13348:	ldr	r2, [r4, #4]
   1334c:	ldr	r5, [r4]
   13350:	cmp	r2, #0
   13354:	ldr	r3, [r0]
   13358:	mov	r8, r0
   1335c:	str	r3, [sp, #28]
   13360:	bgt	133bc <abort@plt+0x2670>
   13364:	add	r6, r4, #8
   13368:	cmp	r5, r6
   1336c:	str	r2, [sp, #36]	; 0x24
   13370:	beq	1347c <abort@plt+0x2730>
   13374:	mov	r3, #8
   13378:	mov	r0, r5
   1337c:	str	r3, [sp]
   13380:	rsb	r2, r2, #1
   13384:	mvn	r3, #-2147483648	; 0x80000000
   13388:	add	r1, sp, #36	; 0x24
   1338c:	bl	16194 <abort@plt+0x5448>
   13390:	mov	r5, r0
   13394:	str	r0, [r4]
   13398:	ldr	r0, [r4, #4]
   1339c:	ldr	r2, [sp, #36]	; 0x24
   133a0:	mov	r1, #0
   133a4:	sub	r2, r2, r0
   133a8:	add	r0, r5, r0, lsl #3
   133ac:	lsl	r2, r2, #3
   133b0:	bl	10cc8 <memset@plt>
   133b4:	ldr	r3, [sp, #36]	; 0x24
   133b8:	str	r3, [r4, #4]
   133bc:	ldr	r4, [pc, #236]	; 134b0 <abort@plt+0x2764>
   133c0:	ldr	r9, [r5]
   133c4:	ldr	r6, [r5, #4]
   133c8:	ldr	r7, [r4, #4]
   133cc:	ldr	r1, [r4, #44]	; 0x2c
   133d0:	ldr	r2, [r4, #40]	; 0x28
   133d4:	ldr	r3, [r4]
   133d8:	orr	r7, r7, #1
   133dc:	add	fp, r4, #8
   133e0:	str	r1, [sp, #16]
   133e4:	str	r2, [sp, #12]
   133e8:	str	r3, [sp]
   133ec:	str	r7, [sp, #4]
   133f0:	str	fp, [sp, #8]
   133f4:	mov	r1, r9
   133f8:	mov	r0, r6
   133fc:	mvn	r3, #0
   13400:	mov	r2, sl
   13404:	bl	1169c <abort@plt+0x950>
   13408:	cmp	r9, r0
   1340c:	bhi	13468 <abort@plt+0x271c>
   13410:	add	r3, r4, #48	; 0x30
   13414:	add	r9, r0, #1
   13418:	cmp	r6, r3
   1341c:	str	r9, [r5]
   13420:	beq	1342c <abort@plt+0x26e0>
   13424:	mov	r0, r6
   13428:	bl	16824 <abort@plt+0x5ad8>
   1342c:	mov	r0, r9
   13430:	bl	15f78 <abort@plt+0x522c>
   13434:	ldr	ip, [r4, #44]	; 0x2c
   13438:	ldr	r3, [r4]
   1343c:	ldr	lr, [r4, #40]	; 0x28
   13440:	mov	r2, sl
   13444:	mov	r1, r9
   13448:	str	r0, [r5, #4]
   1344c:	str	r3, [sp]
   13450:	stmib	sp, {r7, fp}
   13454:	str	ip, [sp, #16]
   13458:	str	lr, [sp, #12]
   1345c:	mvn	r3, #0
   13460:	mov	r6, r0
   13464:	bl	1169c <abort@plt+0x950>
   13468:	ldr	r3, [sp, #28]
   1346c:	mov	r0, r6
   13470:	str	r3, [r8]
   13474:	add	sp, sp, #44	; 0x2c
   13478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1347c:	mov	r3, #8
   13480:	str	r3, [sp]
   13484:	add	r1, sp, #36	; 0x24
   13488:	rsb	r2, r2, #1
   1348c:	mvn	r3, #-2147483648	; 0x80000000
   13490:	mov	r0, #0
   13494:	bl	16194 <abort@plt+0x5448>
   13498:	mov	r5, r0
   1349c:	ldm	r6, {r0, r1}
   134a0:	str	r5, [r4]
   134a4:	stm	r5, {r0, r1}
   134a8:	b	13398 <abort@plt+0x264c>
   134ac:	ldrdeq	r8, [r2], -r0
   134b0:	andeq	r8, r2, r0, asr #2
   134b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134b8:	sub	sp, sp, #44	; 0x2c
   134bc:	mov	r9, r0
   134c0:	mov	sl, r1
   134c4:	bl	10cb0 <__errno_location@plt>
   134c8:	ldr	r4, [pc, #364]	; 1363c <abort@plt+0x28f0>
   134cc:	ldr	r2, [r4, #4]
   134d0:	ldr	r5, [r4]
   134d4:	cmp	r2, #0
   134d8:	ldr	r3, [r0]
   134dc:	mov	r7, r0
   134e0:	str	r3, [sp, #24]
   134e4:	bgt	13540 <abort@plt+0x27f4>
   134e8:	add	r6, r4, #8
   134ec:	cmp	r5, r6
   134f0:	str	r2, [sp, #36]	; 0x24
   134f4:	beq	1360c <abort@plt+0x28c0>
   134f8:	mov	r3, #8
   134fc:	mov	r0, r5
   13500:	str	r3, [sp]
   13504:	rsb	r2, r2, #1
   13508:	mvn	r3, #-2147483648	; 0x80000000
   1350c:	add	r1, sp, #36	; 0x24
   13510:	bl	16194 <abort@plt+0x5448>
   13514:	mov	r5, r0
   13518:	str	r0, [r4]
   1351c:	ldr	r0, [r4, #4]
   13520:	ldr	r2, [sp, #36]	; 0x24
   13524:	mov	r1, #0
   13528:	sub	r2, r2, r0
   1352c:	add	r0, r5, r0, lsl #3
   13530:	lsl	r2, r2, #3
   13534:	bl	10cc8 <memset@plt>
   13538:	ldr	r3, [sp, #36]	; 0x24
   1353c:	str	r3, [r4, #4]
   13540:	ldr	r4, [pc, #248]	; 13640 <abort@plt+0x28f4>
   13544:	ldr	r8, [r5]
   13548:	ldr	r6, [r5, #4]
   1354c:	ldr	r0, [r4, #4]
   13550:	ldr	r1, [r4, #44]	; 0x2c
   13554:	ldr	r2, [r4, #40]	; 0x28
   13558:	ldr	r3, [r4]
   1355c:	orr	r0, r0, #1
   13560:	add	fp, r4, #8
   13564:	str	r0, [sp, #28]
   13568:	str	r0, [sp, #4]
   1356c:	str	r1, [sp, #16]
   13570:	str	r2, [sp, #12]
   13574:	str	r3, [sp]
   13578:	str	fp, [sp, #8]
   1357c:	mov	r1, r8
   13580:	mov	r0, r6
   13584:	mov	r3, sl
   13588:	mov	r2, r9
   1358c:	bl	1169c <abort@plt+0x950>
   13590:	cmp	r8, r0
   13594:	bhi	135f8 <abort@plt+0x28ac>
   13598:	add	r3, r4, #48	; 0x30
   1359c:	add	r8, r0, #1
   135a0:	cmp	r6, r3
   135a4:	str	r8, [r5]
   135a8:	beq	135b4 <abort@plt+0x2868>
   135ac:	mov	r0, r6
   135b0:	bl	16824 <abort@plt+0x5ad8>
   135b4:	mov	r0, r8
   135b8:	bl	15f78 <abort@plt+0x522c>
   135bc:	ldr	lr, [r4, #44]	; 0x2c
   135c0:	ldr	ip, [r4]
   135c4:	mov	r3, sl
   135c8:	mov	r2, r9
   135cc:	mov	r1, r8
   135d0:	str	r0, [r5, #4]
   135d4:	ldr	r5, [r4, #40]	; 0x28
   135d8:	ldr	r4, [sp, #28]
   135dc:	str	fp, [sp, #8]
   135e0:	str	r4, [sp, #4]
   135e4:	str	lr, [sp, #16]
   135e8:	str	r5, [sp, #12]
   135ec:	str	ip, [sp]
   135f0:	mov	r6, r0
   135f4:	bl	1169c <abort@plt+0x950>
   135f8:	ldr	r3, [sp, #24]
   135fc:	mov	r0, r6
   13600:	str	r3, [r7]
   13604:	add	sp, sp, #44	; 0x2c
   13608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1360c:	mov	r3, #8
   13610:	str	r3, [sp]
   13614:	add	r1, sp, #36	; 0x24
   13618:	rsb	r2, r2, #1
   1361c:	mvn	r3, #-2147483648	; 0x80000000
   13620:	mov	r0, #0
   13624:	bl	16194 <abort@plt+0x5448>
   13628:	mov	r5, r0
   1362c:	ldm	r6, {r0, r1}
   13630:	str	r5, [r4]
   13634:	stm	r5, {r0, r1}
   13638:	b	1351c <abort@plt+0x27d0>
   1363c:	ldrdeq	r8, [r2], -r0
   13640:	andeq	r8, r2, r0, asr #2
   13644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13648:	sub	sp, sp, #132	; 0x84
   1364c:	mov	r5, r1
   13650:	mov	r4, r0
   13654:	mov	r9, r2
   13658:	add	r0, sp, #80	; 0x50
   1365c:	mov	r2, #48	; 0x30
   13660:	mov	r1, #0
   13664:	bl	10cc8 <memset@plt>
   13668:	cmp	r5, #10
   1366c:	beq	13824 <abort@plt+0x2ad8>
   13670:	add	lr, sp, #80	; 0x50
   13674:	str	r5, [sp, #80]	; 0x50
   13678:	ldm	lr!, {r0, r1, r2, r3}
   1367c:	add	ip, sp, #32
   13680:	ldr	r6, [pc, #416]	; 13828 <abort@plt+0x2adc>
   13684:	stmia	ip!, {r0, r1, r2, r3}
   13688:	ldm	lr!, {r0, r1, r2, r3}
   1368c:	stmia	ip!, {r0, r1, r2, r3}
   13690:	ldm	lr, {r0, r1, r2, r3}
   13694:	stm	ip, {r0, r1, r2, r3}
   13698:	bl	10cb0 <__errno_location@plt>
   1369c:	cmn	r4, #-2147483647	; 0x80000001
   136a0:	ldr	r5, [r6]
   136a4:	mov	r7, r0
   136a8:	movne	r0, #0
   136ac:	moveq	r0, #1
   136b0:	ldr	r3, [r7]
   136b4:	orrs	r0, r0, r4, lsr #31
   136b8:	str	r3, [sp, #24]
   136bc:	bne	13824 <abort@plt+0x2ad8>
   136c0:	ldr	r2, [r6, #4]
   136c4:	cmp	r4, r2
   136c8:	blt	13728 <abort@plt+0x29dc>
   136cc:	add	r8, r6, #8
   136d0:	cmp	r5, r8
   136d4:	str	r2, [sp, #80]	; 0x50
   136d8:	beq	137f4 <abort@plt+0x2aa8>
   136dc:	mov	r3, #8
   136e0:	sub	r2, r4, r2
   136e4:	mov	r0, r5
   136e8:	str	r3, [sp]
   136ec:	add	r2, r2, #1
   136f0:	add	r1, sp, #80	; 0x50
   136f4:	mvn	r3, #-2147483648	; 0x80000000
   136f8:	bl	16194 <abort@plt+0x5448>
   136fc:	mov	r5, r0
   13700:	str	r0, [r6]
   13704:	ldr	r0, [r6, #4]
   13708:	ldr	r2, [sp, #80]	; 0x50
   1370c:	mov	r1, #0
   13710:	sub	r2, r2, r0
   13714:	add	r0, r5, r0, lsl #3
   13718:	lsl	r2, r2, #3
   1371c:	bl	10cc8 <memset@plt>
   13720:	ldr	r3, [sp, #80]	; 0x50
   13724:	str	r3, [r6, #4]
   13728:	add	fp, r5, r4, lsl #3
   1372c:	ldr	r1, [sp, #36]	; 0x24
   13730:	ldr	r8, [r5, r4, lsl #3]
   13734:	ldr	r6, [fp, #4]
   13738:	ldr	r2, [sp, #72]	; 0x48
   1373c:	ldr	r3, [sp, #32]
   13740:	ldr	ip, [sp, #76]	; 0x4c
   13744:	orr	r1, r1, #1
   13748:	add	sl, sp, #40	; 0x28
   1374c:	str	r1, [sp, #28]
   13750:	str	r1, [sp, #4]
   13754:	str	r2, [sp, #12]
   13758:	str	r3, [sp]
   1375c:	mov	r0, r6
   13760:	mov	r1, r8
   13764:	str	ip, [sp, #16]
   13768:	str	sl, [sp, #8]
   1376c:	mvn	r3, #0
   13770:	mov	r2, r9
   13774:	bl	1169c <abort@plt+0x950>
   13778:	cmp	r8, r0
   1377c:	bhi	137e0 <abort@plt+0x2a94>
   13780:	ldr	r3, [pc, #164]	; 1382c <abort@plt+0x2ae0>
   13784:	add	r8, r0, #1
   13788:	cmp	r6, r3
   1378c:	str	r8, [r5, r4, lsl #3]
   13790:	beq	1379c <abort@plt+0x2a50>
   13794:	mov	r0, r6
   13798:	bl	16824 <abort@plt+0x5ad8>
   1379c:	mov	r0, r8
   137a0:	bl	15f78 <abort@plt+0x522c>
   137a4:	ldr	lr, [sp, #76]	; 0x4c
   137a8:	ldr	r3, [sp, #32]
   137ac:	ldr	ip, [sp, #72]	; 0x48
   137b0:	ldr	r4, [sp, #28]
   137b4:	mov	r2, r9
   137b8:	mov	r1, r8
   137bc:	str	r0, [fp, #4]
   137c0:	str	r3, [sp]
   137c4:	str	sl, [sp, #8]
   137c8:	str	r4, [sp, #4]
   137cc:	str	lr, [sp, #16]
   137d0:	str	ip, [sp, #12]
   137d4:	mvn	r3, #0
   137d8:	mov	r6, r0
   137dc:	bl	1169c <abort@plt+0x950>
   137e0:	ldr	r3, [sp, #24]
   137e4:	mov	r0, r6
   137e8:	str	r3, [r7]
   137ec:	add	sp, sp, #132	; 0x84
   137f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137f4:	mov	r3, #8
   137f8:	sub	r2, r4, r2
   137fc:	add	r1, sp, #80	; 0x50
   13800:	str	r3, [sp]
   13804:	add	r2, r2, #1
   13808:	mvn	r3, #-2147483648	; 0x80000000
   1380c:	bl	16194 <abort@plt+0x5448>
   13810:	mov	r5, r0
   13814:	ldm	r8, {r0, r1}
   13818:	str	r5, [r6]
   1381c:	stm	r5, {r0, r1}
   13820:	b	13704 <abort@plt+0x29b8>
   13824:	bl	10d4c <abort@plt>
   13828:	ldrdeq	r8, [r2], -r0
   1382c:	andeq	r8, r2, r0, ror r1
   13830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13834:	sub	sp, sp, #132	; 0x84
   13838:	mov	r5, r1
   1383c:	mov	r4, r0
   13840:	mov	r9, r2
   13844:	add	r0, sp, #80	; 0x50
   13848:	mov	r2, #48	; 0x30
   1384c:	mov	r1, #0
   13850:	mov	sl, r3
   13854:	bl	10cc8 <memset@plt>
   13858:	cmp	r5, #10
   1385c:	beq	13a18 <abort@plt+0x2ccc>
   13860:	add	lr, sp, #80	; 0x50
   13864:	str	r5, [sp, #80]	; 0x50
   13868:	ldm	lr!, {r0, r1, r2, r3}
   1386c:	add	ip, sp, #32
   13870:	ldr	r6, [pc, #420]	; 13a1c <abort@plt+0x2cd0>
   13874:	stmia	ip!, {r0, r1, r2, r3}
   13878:	ldm	lr!, {r0, r1, r2, r3}
   1387c:	stmia	ip!, {r0, r1, r2, r3}
   13880:	ldm	lr, {r0, r1, r2, r3}
   13884:	stm	ip, {r0, r1, r2, r3}
   13888:	bl	10cb0 <__errno_location@plt>
   1388c:	cmn	r4, #-2147483647	; 0x80000001
   13890:	ldr	r5, [r6]
   13894:	mov	r7, r0
   13898:	movne	r0, #0
   1389c:	moveq	r0, #1
   138a0:	ldr	r3, [r7]
   138a4:	orrs	r0, r0, r4, lsr #31
   138a8:	str	r3, [sp, #24]
   138ac:	bne	13a18 <abort@plt+0x2ccc>
   138b0:	ldr	r2, [r6, #4]
   138b4:	cmp	r4, r2
   138b8:	blt	13918 <abort@plt+0x2bcc>
   138bc:	add	r8, r6, #8
   138c0:	cmp	r5, r8
   138c4:	str	r2, [sp, #80]	; 0x50
   138c8:	beq	139e8 <abort@plt+0x2c9c>
   138cc:	mov	r3, #8
   138d0:	sub	r2, r4, r2
   138d4:	mov	r0, r5
   138d8:	str	r3, [sp]
   138dc:	add	r2, r2, #1
   138e0:	add	r1, sp, #80	; 0x50
   138e4:	mvn	r3, #-2147483648	; 0x80000000
   138e8:	bl	16194 <abort@plt+0x5448>
   138ec:	mov	r5, r0
   138f0:	str	r0, [r6]
   138f4:	ldr	r0, [r6, #4]
   138f8:	ldr	r2, [sp, #80]	; 0x50
   138fc:	mov	r1, #0
   13900:	sub	r2, r2, r0
   13904:	add	r0, r5, r0, lsl #3
   13908:	lsl	r2, r2, #3
   1390c:	bl	10cc8 <memset@plt>
   13910:	ldr	r3, [sp, #80]	; 0x50
   13914:	str	r3, [r6, #4]
   13918:	add	fp, r5, r4, lsl #3
   1391c:	ldr	r3, [sp, #32]
   13920:	ldr	r1, [sp, #36]	; 0x24
   13924:	ldr	r8, [r5, r4, lsl #3]
   13928:	ldr	r6, [fp, #4]
   1392c:	ldr	r2, [sp, #72]	; 0x48
   13930:	ldr	ip, [sp, #76]	; 0x4c
   13934:	orr	r1, r1, #1
   13938:	str	r3, [sp]
   1393c:	add	r3, sp, #40	; 0x28
   13940:	str	r1, [sp, #28]
   13944:	str	r1, [sp, #4]
   13948:	str	r2, [sp, #12]
   1394c:	str	r3, [sp, #8]
   13950:	mov	r0, r6
   13954:	mov	r1, r8
   13958:	str	ip, [sp, #16]
   1395c:	mov	r3, sl
   13960:	mov	r2, r9
   13964:	bl	1169c <abort@plt+0x950>
   13968:	cmp	r8, r0
   1396c:	bhi	139d4 <abort@plt+0x2c88>
   13970:	ldr	r3, [pc, #168]	; 13a20 <abort@plt+0x2cd4>
   13974:	add	r8, r0, #1
   13978:	cmp	r6, r3
   1397c:	str	r8, [r5, r4, lsl #3]
   13980:	beq	1398c <abort@plt+0x2c40>
   13984:	mov	r0, r6
   13988:	bl	16824 <abort@plt+0x5ad8>
   1398c:	mov	r0, r8
   13990:	bl	15f78 <abort@plt+0x522c>
   13994:	add	lr, sp, #40	; 0x28
   13998:	ldr	ip, [sp, #76]	; 0x4c
   1399c:	ldr	r4, [sp, #72]	; 0x48
   139a0:	ldr	r5, [sp, #28]
   139a4:	mov	r3, sl
   139a8:	mov	r2, r9
   139ac:	mov	r1, r8
   139b0:	str	r0, [fp, #4]
   139b4:	str	lr, [sp, #8]
   139b8:	ldr	lr, [sp, #32]
   139bc:	str	r5, [sp, #4]
   139c0:	str	ip, [sp, #16]
   139c4:	str	r4, [sp, #12]
   139c8:	str	lr, [sp]
   139cc:	mov	r6, r0
   139d0:	bl	1169c <abort@plt+0x950>
   139d4:	ldr	r3, [sp, #24]
   139d8:	mov	r0, r6
   139dc:	str	r3, [r7]
   139e0:	add	sp, sp, #132	; 0x84
   139e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139e8:	mov	r3, #8
   139ec:	sub	r2, r4, r2
   139f0:	add	r1, sp, #80	; 0x50
   139f4:	str	r3, [sp]
   139f8:	add	r2, r2, #1
   139fc:	mvn	r3, #-2147483648	; 0x80000000
   13a00:	bl	16194 <abort@plt+0x5448>
   13a04:	mov	r5, r0
   13a08:	ldm	r8, {r0, r1}
   13a0c:	str	r5, [r6]
   13a10:	stm	r5, {r0, r1}
   13a14:	b	138f4 <abort@plt+0x2ba8>
   13a18:	bl	10d4c <abort@plt>
   13a1c:	ldrdeq	r8, [r2], -r0
   13a20:	andeq	r8, r2, r0, ror r1
   13a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a28:	sub	sp, sp, #124	; 0x7c
   13a2c:	mov	r4, r0
   13a30:	mov	r9, r1
   13a34:	add	r0, sp, #72	; 0x48
   13a38:	mov	r2, #48	; 0x30
   13a3c:	mov	r1, #0
   13a40:	bl	10cc8 <memset@plt>
   13a44:	cmp	r4, #10
   13a48:	beq	13bd4 <abort@plt+0x2e88>
   13a4c:	add	lr, sp, #72	; 0x48
   13a50:	str	r4, [sp, #72]	; 0x48
   13a54:	ldm	lr!, {r0, r1, r2, r3}
   13a58:	add	ip, sp, #24
   13a5c:	ldr	r5, [pc, #372]	; 13bd8 <abort@plt+0x2e8c>
   13a60:	stmia	ip!, {r0, r1, r2, r3}
   13a64:	ldm	lr!, {r0, r1, r2, r3}
   13a68:	stmia	ip!, {r0, r1, r2, r3}
   13a6c:	ldm	lr, {r0, r1, r2, r3}
   13a70:	stm	ip, {r0, r1, r2, r3}
   13a74:	bl	10cb0 <__errno_location@plt>
   13a78:	ldr	r2, [r5, #4]
   13a7c:	ldr	r4, [r5]
   13a80:	cmp	r2, #0
   13a84:	mov	r7, r0
   13a88:	ldr	fp, [r0]
   13a8c:	bgt	13ae8 <abort@plt+0x2d9c>
   13a90:	add	r6, r5, #8
   13a94:	cmp	r4, r6
   13a98:	str	r2, [sp, #72]	; 0x48
   13a9c:	beq	13ba4 <abort@plt+0x2e58>
   13aa0:	mov	r3, #8
   13aa4:	mov	r0, r4
   13aa8:	str	r3, [sp]
   13aac:	rsb	r2, r2, #1
   13ab0:	add	r1, sp, #72	; 0x48
   13ab4:	mvn	r3, #-2147483648	; 0x80000000
   13ab8:	bl	16194 <abort@plt+0x5448>
   13abc:	mov	r4, r0
   13ac0:	str	r0, [r5]
   13ac4:	ldr	r0, [r5, #4]
   13ac8:	ldr	r2, [sp, #72]	; 0x48
   13acc:	mov	r1, #0
   13ad0:	sub	r2, r2, r0
   13ad4:	add	r0, r4, r0, lsl #3
   13ad8:	lsl	r2, r2, #3
   13adc:	bl	10cc8 <memset@plt>
   13ae0:	ldr	r3, [sp, #72]	; 0x48
   13ae4:	str	r3, [r5, #4]
   13ae8:	ldr	r6, [sp, #28]
   13aec:	ldr	r8, [r4]
   13af0:	ldr	r5, [r4, #4]
   13af4:	ldr	r2, [sp, #64]	; 0x40
   13af8:	ldr	r3, [sp, #24]
   13afc:	ldr	ip, [sp, #68]	; 0x44
   13b00:	orr	r6, r6, #1
   13b04:	add	sl, sp, #32
   13b08:	str	r2, [sp, #12]
   13b0c:	str	r3, [sp]
   13b10:	str	r6, [sp, #4]
   13b14:	mov	r1, r8
   13b18:	mov	r0, r5
   13b1c:	str	ip, [sp, #16]
   13b20:	str	sl, [sp, #8]
   13b24:	mvn	r3, #0
   13b28:	mov	r2, r9
   13b2c:	bl	1169c <abort@plt+0x950>
   13b30:	cmp	r8, r0
   13b34:	bhi	13b94 <abort@plt+0x2e48>
   13b38:	ldr	r3, [pc, #156]	; 13bdc <abort@plt+0x2e90>
   13b3c:	add	r8, r0, #1
   13b40:	cmp	r5, r3
   13b44:	str	r8, [r4]
   13b48:	beq	13b54 <abort@plt+0x2e08>
   13b4c:	mov	r0, r5
   13b50:	bl	16824 <abort@plt+0x5ad8>
   13b54:	mov	r0, r8
   13b58:	bl	15f78 <abort@plt+0x522c>
   13b5c:	ldr	lr, [sp, #68]	; 0x44
   13b60:	ldr	r3, [sp, #24]
   13b64:	ldr	ip, [sp, #64]	; 0x40
   13b68:	mov	r2, r9
   13b6c:	mov	r1, r8
   13b70:	str	r0, [r4, #4]
   13b74:	str	r3, [sp]
   13b78:	str	sl, [sp, #8]
   13b7c:	str	r6, [sp, #4]
   13b80:	str	lr, [sp, #16]
   13b84:	str	ip, [sp, #12]
   13b88:	mvn	r3, #0
   13b8c:	mov	r5, r0
   13b90:	bl	1169c <abort@plt+0x950>
   13b94:	mov	r0, r5
   13b98:	str	fp, [r7]
   13b9c:	add	sp, sp, #124	; 0x7c
   13ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ba4:	mov	r3, #8
   13ba8:	add	r1, sp, #72	; 0x48
   13bac:	str	r3, [sp]
   13bb0:	rsb	r2, r2, #1
   13bb4:	mvn	r3, #-2147483648	; 0x80000000
   13bb8:	mov	r0, #0
   13bbc:	bl	16194 <abort@plt+0x5448>
   13bc0:	mov	r4, r0
   13bc4:	ldm	r6, {r0, r1}
   13bc8:	str	r4, [r5]
   13bcc:	stm	r4, {r0, r1}
   13bd0:	b	13ac4 <abort@plt+0x2d78>
   13bd4:	bl	10d4c <abort@plt>
   13bd8:	ldrdeq	r8, [r2], -r0
   13bdc:	andeq	r8, r2, r0, ror r1
   13be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13be4:	sub	sp, sp, #132	; 0x84
   13be8:	mov	r4, r0
   13bec:	mov	r9, r1
   13bf0:	mov	sl, r2
   13bf4:	add	r0, sp, #80	; 0x50
   13bf8:	mov	r2, #48	; 0x30
   13bfc:	mov	r1, #0
   13c00:	bl	10cc8 <memset@plt>
   13c04:	cmp	r4, #10
   13c08:	beq	13d9c <abort@plt+0x3050>
   13c0c:	add	lr, sp, #80	; 0x50
   13c10:	str	r4, [sp, #80]	; 0x50
   13c14:	ldm	lr!, {r0, r1, r2, r3}
   13c18:	add	ip, sp, #32
   13c1c:	ldr	r5, [pc, #380]	; 13da0 <abort@plt+0x3054>
   13c20:	stmia	ip!, {r0, r1, r2, r3}
   13c24:	ldm	lr!, {r0, r1, r2, r3}
   13c28:	stmia	ip!, {r0, r1, r2, r3}
   13c2c:	ldm	lr, {r0, r1, r2, r3}
   13c30:	stm	ip, {r0, r1, r2, r3}
   13c34:	bl	10cb0 <__errno_location@plt>
   13c38:	ldr	r2, [r5, #4]
   13c3c:	ldr	r4, [r5]
   13c40:	cmp	r2, #0
   13c44:	ldr	r3, [r0]
   13c48:	mov	r7, r0
   13c4c:	str	r3, [sp, #28]
   13c50:	bgt	13cac <abort@plt+0x2f60>
   13c54:	add	r6, r5, #8
   13c58:	cmp	r4, r6
   13c5c:	str	r2, [sp, #80]	; 0x50
   13c60:	beq	13d6c <abort@plt+0x3020>
   13c64:	mov	r3, #8
   13c68:	mov	r0, r4
   13c6c:	str	r3, [sp]
   13c70:	rsb	r2, r2, #1
   13c74:	add	r1, sp, #80	; 0x50
   13c78:	mvn	r3, #-2147483648	; 0x80000000
   13c7c:	bl	16194 <abort@plt+0x5448>
   13c80:	mov	r4, r0
   13c84:	str	r0, [r5]
   13c88:	ldr	r0, [r5, #4]
   13c8c:	ldr	r2, [sp, #80]	; 0x50
   13c90:	mov	r1, #0
   13c94:	sub	r2, r2, r0
   13c98:	add	r0, r4, r0, lsl #3
   13c9c:	lsl	r2, r2, #3
   13ca0:	bl	10cc8 <memset@plt>
   13ca4:	ldr	r3, [sp, #80]	; 0x50
   13ca8:	str	r3, [r5, #4]
   13cac:	ldr	r6, [sp, #36]	; 0x24
   13cb0:	ldr	r8, [r4]
   13cb4:	ldr	r5, [r4, #4]
   13cb8:	ldr	r2, [sp, #72]	; 0x48
   13cbc:	ldr	r3, [sp, #32]
   13cc0:	ldr	ip, [sp, #76]	; 0x4c
   13cc4:	orr	r6, r6, #1
   13cc8:	add	fp, sp, #40	; 0x28
   13ccc:	str	r2, [sp, #12]
   13cd0:	str	r3, [sp]
   13cd4:	str	r6, [sp, #4]
   13cd8:	mov	r1, r8
   13cdc:	mov	r0, r5
   13ce0:	str	ip, [sp, #16]
   13ce4:	str	fp, [sp, #8]
   13ce8:	mov	r3, sl
   13cec:	mov	r2, r9
   13cf0:	bl	1169c <abort@plt+0x950>
   13cf4:	cmp	r8, r0
   13cf8:	bhi	13d58 <abort@plt+0x300c>
   13cfc:	ldr	r3, [pc, #160]	; 13da4 <abort@plt+0x3058>
   13d00:	add	r8, r0, #1
   13d04:	cmp	r5, r3
   13d08:	str	r8, [r4]
   13d0c:	beq	13d18 <abort@plt+0x2fcc>
   13d10:	mov	r0, r5
   13d14:	bl	16824 <abort@plt+0x5ad8>
   13d18:	mov	r0, r8
   13d1c:	bl	15f78 <abort@plt+0x522c>
   13d20:	ldr	ip, [sp, #76]	; 0x4c
   13d24:	ldr	lr, [sp, #32]
   13d28:	mov	r3, sl
   13d2c:	mov	r2, r9
   13d30:	mov	r1, r8
   13d34:	str	r0, [r4, #4]
   13d38:	ldr	r4, [sp, #72]	; 0x48
   13d3c:	str	fp, [sp, #8]
   13d40:	str	r6, [sp, #4]
   13d44:	str	ip, [sp, #16]
   13d48:	str	r4, [sp, #12]
   13d4c:	str	lr, [sp]
   13d50:	mov	r5, r0
   13d54:	bl	1169c <abort@plt+0x950>
   13d58:	ldr	r3, [sp, #28]
   13d5c:	mov	r0, r5
   13d60:	str	r3, [r7]
   13d64:	add	sp, sp, #132	; 0x84
   13d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d6c:	mov	r3, #8
   13d70:	add	r1, sp, #80	; 0x50
   13d74:	str	r3, [sp]
   13d78:	rsb	r2, r2, #1
   13d7c:	mvn	r3, #-2147483648	; 0x80000000
   13d80:	mov	r0, #0
   13d84:	bl	16194 <abort@plt+0x5448>
   13d88:	mov	r4, r0
   13d8c:	ldm	r6, {r0, r1}
   13d90:	str	r4, [r5]
   13d94:	stm	r4, {r0, r1}
   13d98:	b	13c88 <abort@plt+0x2f3c>
   13d9c:	bl	10d4c <abort@plt>
   13da0:	ldrdeq	r8, [r2], -r0
   13da4:	andeq	r8, r2, r0, ror r1
   13da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dac:	mov	r4, r2
   13db0:	ldr	lr, [pc, #432]	; 13f68 <abort@plt+0x321c>
   13db4:	mov	sl, r0
   13db8:	mov	fp, r1
   13dbc:	ldm	lr!, {r0, r1, r2, r3}
   13dc0:	sub	sp, sp, #92	; 0x5c
   13dc4:	add	ip, sp, #40	; 0x28
   13dc8:	lsr	r7, r4, #5
   13dcc:	stmia	ip!, {r0, r1, r2, r3}
   13dd0:	add	r6, sp, #48	; 0x30
   13dd4:	ldm	lr!, {r0, r1, r2, r3}
   13dd8:	and	r4, r4, #31
   13ddc:	ldr	r5, [pc, #392]	; 13f6c <abort@plt+0x3220>
   13de0:	stmia	ip!, {r0, r1, r2, r3}
   13de4:	ldm	lr, {r0, r1, r2, r3}
   13de8:	stm	ip, {r0, r1, r2, r3}
   13dec:	ldr	r2, [r6, r7, lsl #2]
   13df0:	lsr	r3, r2, r4
   13df4:	eor	r3, r3, #1
   13df8:	and	r3, r3, #1
   13dfc:	eor	r4, r2, r3, lsl r4
   13e00:	str	r4, [r6, r7, lsl #2]
   13e04:	bl	10cb0 <__errno_location@plt>
   13e08:	ldr	r2, [r5, #4]
   13e0c:	ldr	r4, [r5]
   13e10:	cmp	r2, #0
   13e14:	ldr	r3, [r0]
   13e18:	mov	r8, r0
   13e1c:	str	r3, [sp, #28]
   13e20:	bgt	13e7c <abort@plt+0x3130>
   13e24:	add	r7, r5, #8
   13e28:	cmp	r4, r7
   13e2c:	str	r2, [sp, #36]	; 0x24
   13e30:	beq	13f38 <abort@plt+0x31ec>
   13e34:	mov	r3, #8
   13e38:	mov	r0, r4
   13e3c:	str	r3, [sp]
   13e40:	rsb	r2, r2, #1
   13e44:	mvn	r3, #-2147483648	; 0x80000000
   13e48:	add	r1, sp, #36	; 0x24
   13e4c:	bl	16194 <abort@plt+0x5448>
   13e50:	mov	r4, r0
   13e54:	str	r0, [r5]
   13e58:	ldr	r0, [r5, #4]
   13e5c:	ldr	r2, [sp, #36]	; 0x24
   13e60:	mov	r1, #0
   13e64:	sub	r2, r2, r0
   13e68:	add	r0, r4, r0, lsl #3
   13e6c:	lsl	r2, r2, #3
   13e70:	bl	10cc8 <memset@plt>
   13e74:	ldr	r3, [sp, #36]	; 0x24
   13e78:	str	r3, [r5, #4]
   13e7c:	ldr	r7, [sp, #44]	; 0x2c
   13e80:	ldr	r9, [r4]
   13e84:	ldr	r5, [r4, #4]
   13e88:	ldr	r2, [sp, #80]	; 0x50
   13e8c:	ldr	r3, [sp, #40]	; 0x28
   13e90:	ldr	ip, [sp, #84]	; 0x54
   13e94:	orr	r7, r7, #1
   13e98:	str	r2, [sp, #12]
   13e9c:	str	r3, [sp]
   13ea0:	str	r7, [sp, #4]
   13ea4:	str	r6, [sp, #8]
   13ea8:	mov	r1, r9
   13eac:	mov	r0, r5
   13eb0:	str	ip, [sp, #16]
   13eb4:	mov	r3, fp
   13eb8:	mov	r2, sl
   13ebc:	bl	1169c <abort@plt+0x950>
   13ec0:	cmp	r9, r0
   13ec4:	bhi	13f24 <abort@plt+0x31d8>
   13ec8:	ldr	r3, [pc, #160]	; 13f70 <abort@plt+0x3224>
   13ecc:	add	r9, r0, #1
   13ed0:	cmp	r5, r3
   13ed4:	str	r9, [r4]
   13ed8:	beq	13ee4 <abort@plt+0x3198>
   13edc:	mov	r0, r5
   13ee0:	bl	16824 <abort@plt+0x5ad8>
   13ee4:	mov	r0, r9
   13ee8:	bl	15f78 <abort@plt+0x522c>
   13eec:	ldr	ip, [sp, #84]	; 0x54
   13ef0:	ldr	lr, [sp, #40]	; 0x28
   13ef4:	mov	r3, fp
   13ef8:	mov	r2, sl
   13efc:	mov	r1, r9
   13f00:	str	r0, [r4, #4]
   13f04:	ldr	r4, [sp, #80]	; 0x50
   13f08:	str	r6, [sp, #8]
   13f0c:	str	r7, [sp, #4]
   13f10:	str	ip, [sp, #16]
   13f14:	str	r4, [sp, #12]
   13f18:	str	lr, [sp]
   13f1c:	mov	r5, r0
   13f20:	bl	1169c <abort@plt+0x950>
   13f24:	ldr	r3, [sp, #28]
   13f28:	mov	r0, r5
   13f2c:	str	r3, [r8]
   13f30:	add	sp, sp, #92	; 0x5c
   13f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f38:	mov	r3, #8
   13f3c:	str	r3, [sp]
   13f40:	add	r1, sp, #36	; 0x24
   13f44:	rsb	r2, r2, #1
   13f48:	mvn	r3, #-2147483648	; 0x80000000
   13f4c:	mov	r0, #0
   13f50:	bl	16194 <abort@plt+0x5448>
   13f54:	mov	r4, r0
   13f58:	ldm	r7, {r0, r1}
   13f5c:	str	r4, [r5]
   13f60:	stm	r4, {r0, r1}
   13f64:	b	13e58 <abort@plt+0x310c>
   13f68:	andeq	r8, r2, r0, asr #2
   13f6c:	ldrdeq	r8, [r2], -r0
   13f70:	andeq	r8, r2, r0, ror r1
   13f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f78:	mov	r4, r1
   13f7c:	ldr	lr, [pc, #420]	; 14128 <abort@plt+0x33dc>
   13f80:	mov	r6, r0
   13f84:	sub	sp, sp, #84	; 0x54
   13f88:	ldm	lr!, {r0, r1, r2, r3}
   13f8c:	add	ip, sp, #32
   13f90:	lsr	r8, r4, #5
   13f94:	add	r5, sp, #40	; 0x28
   13f98:	stmia	ip!, {r0, r1, r2, r3}
   13f9c:	and	r4, r4, #31
   13fa0:	ldm	lr!, {r0, r1, r2, r3}
   13fa4:	ldr	r7, [pc, #384]	; 1412c <abort@plt+0x33e0>
   13fa8:	stmia	ip!, {r0, r1, r2, r3}
   13fac:	ldm	lr, {r0, r1, r2, r3}
   13fb0:	stm	ip, {r0, r1, r2, r3}
   13fb4:	ldr	r2, [r5, r8, lsl #2]
   13fb8:	lsr	r3, r2, r4
   13fbc:	eor	r3, r3, #1
   13fc0:	and	r3, r3, #1
   13fc4:	eor	r4, r2, r3, lsl r4
   13fc8:	str	r4, [r5, r8, lsl #2]
   13fcc:	bl	10cb0 <__errno_location@plt>
   13fd0:	ldr	r2, [r7, #4]
   13fd4:	ldr	r4, [r7]
   13fd8:	cmp	r2, #0
   13fdc:	mov	r9, r0
   13fe0:	ldr	sl, [r0]
   13fe4:	bgt	14040 <abort@plt+0x32f4>
   13fe8:	add	r8, r7, #8
   13fec:	cmp	r4, r8
   13ff0:	str	r2, [sp, #28]
   13ff4:	beq	140f8 <abort@plt+0x33ac>
   13ff8:	mov	r3, #8
   13ffc:	mov	r0, r4
   14000:	str	r3, [sp]
   14004:	rsb	r2, r2, #1
   14008:	mvn	r3, #-2147483648	; 0x80000000
   1400c:	add	r1, sp, #28
   14010:	bl	16194 <abort@plt+0x5448>
   14014:	mov	r4, r0
   14018:	str	r0, [r7]
   1401c:	ldr	r0, [r7, #4]
   14020:	ldr	r2, [sp, #28]
   14024:	mov	r1, #0
   14028:	sub	r2, r2, r0
   1402c:	add	r0, r4, r0, lsl #3
   14030:	lsl	r2, r2, #3
   14034:	bl	10cc8 <memset@plt>
   14038:	ldr	r3, [sp, #28]
   1403c:	str	r3, [r7, #4]
   14040:	ldr	r8, [sp, #36]	; 0x24
   14044:	ldr	fp, [r4]
   14048:	ldr	r7, [r4, #4]
   1404c:	ldr	r2, [sp, #72]	; 0x48
   14050:	ldr	r3, [sp, #32]
   14054:	ldr	ip, [sp, #76]	; 0x4c
   14058:	orr	r8, r8, #1
   1405c:	str	r2, [sp, #12]
   14060:	str	r3, [sp]
   14064:	str	r8, [sp, #4]
   14068:	str	r5, [sp, #8]
   1406c:	mov	r1, fp
   14070:	mov	r0, r7
   14074:	str	ip, [sp, #16]
   14078:	mvn	r3, #0
   1407c:	mov	r2, r6
   14080:	bl	1169c <abort@plt+0x950>
   14084:	cmp	fp, r0
   14088:	bhi	140e8 <abort@plt+0x339c>
   1408c:	ldr	r3, [pc, #156]	; 14130 <abort@plt+0x33e4>
   14090:	add	fp, r0, #1
   14094:	cmp	r7, r3
   14098:	str	fp, [r4]
   1409c:	beq	140a8 <abort@plt+0x335c>
   140a0:	mov	r0, r7
   140a4:	bl	16824 <abort@plt+0x5ad8>
   140a8:	mov	r0, fp
   140ac:	bl	15f78 <abort@plt+0x522c>
   140b0:	ldr	lr, [sp, #76]	; 0x4c
   140b4:	ldr	r3, [sp, #32]
   140b8:	ldr	ip, [sp, #72]	; 0x48
   140bc:	mov	r2, r6
   140c0:	mov	r1, fp
   140c4:	str	r0, [r4, #4]
   140c8:	str	r3, [sp]
   140cc:	str	r5, [sp, #8]
   140d0:	str	r8, [sp, #4]
   140d4:	str	lr, [sp, #16]
   140d8:	str	ip, [sp, #12]
   140dc:	mvn	r3, #0
   140e0:	mov	r7, r0
   140e4:	bl	1169c <abort@plt+0x950>
   140e8:	mov	r0, r7
   140ec:	str	sl, [r9]
   140f0:	add	sp, sp, #84	; 0x54
   140f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140f8:	mov	r3, #8
   140fc:	str	r3, [sp]
   14100:	add	r1, sp, #28
   14104:	rsb	r2, r2, #1
   14108:	mvn	r3, #-2147483648	; 0x80000000
   1410c:	mov	r0, #0
   14110:	bl	16194 <abort@plt+0x5448>
   14114:	mov	r4, r0
   14118:	ldm	r8, {r0, r1}
   1411c:	str	r4, [r7]
   14120:	stm	r4, {r0, r1}
   14124:	b	1401c <abort@plt+0x32d0>
   14128:	andeq	r8, r2, r0, asr #2
   1412c:	ldrdeq	r8, [r2], -r0
   14130:	andeq	r8, r2, r0, ror r1
   14134:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14138:	mov	r6, r0
   1413c:	ldr	lr, [pc, #404]	; 142d8 <abort@plt+0x358c>
   14140:	sub	sp, sp, #84	; 0x54
   14144:	add	ip, sp, #32
   14148:	ldm	lr!, {r0, r1, r2, r3}
   1414c:	ldr	r5, [pc, #392]	; 142dc <abort@plt+0x3590>
   14150:	stmia	ip!, {r0, r1, r2, r3}
   14154:	ldm	lr!, {r0, r1, r2, r3}
   14158:	ldr	r4, [sp, #44]	; 0x2c
   1415c:	stmia	ip!, {r0, r1, r2, r3}
   14160:	ldm	lr, {r0, r1, r2, r3}
   14164:	mvn	lr, r4
   14168:	and	lr, lr, #67108864	; 0x4000000
   1416c:	eor	lr, lr, r4
   14170:	stm	ip, {r0, r1, r2, r3}
   14174:	str	lr, [sp, #44]	; 0x2c
   14178:	bl	10cb0 <__errno_location@plt>
   1417c:	ldr	r2, [r5, #4]
   14180:	ldr	r4, [r5]
   14184:	cmp	r2, #0
   14188:	mov	r8, r0
   1418c:	ldr	sl, [r0]
   14190:	bgt	141ec <abort@plt+0x34a0>
   14194:	add	r7, r5, #8
   14198:	cmp	r4, r7
   1419c:	str	r2, [sp, #28]
   141a0:	beq	142a8 <abort@plt+0x355c>
   141a4:	mov	r3, #8
   141a8:	mov	r0, r4
   141ac:	str	r3, [sp]
   141b0:	rsb	r2, r2, #1
   141b4:	mvn	r3, #-2147483648	; 0x80000000
   141b8:	add	r1, sp, #28
   141bc:	bl	16194 <abort@plt+0x5448>
   141c0:	mov	r4, r0
   141c4:	str	r0, [r5]
   141c8:	ldr	r0, [r5, #4]
   141cc:	ldr	r2, [sp, #28]
   141d0:	mov	r1, #0
   141d4:	sub	r2, r2, r0
   141d8:	add	r0, r4, r0, lsl #3
   141dc:	lsl	r2, r2, #3
   141e0:	bl	10cc8 <memset@plt>
   141e4:	ldr	r3, [sp, #28]
   141e8:	str	r3, [r5, #4]
   141ec:	ldr	r7, [sp, #36]	; 0x24
   141f0:	ldr	r9, [r4]
   141f4:	ldr	r5, [r4, #4]
   141f8:	ldr	r2, [sp, #72]	; 0x48
   141fc:	ldr	r3, [sp, #32]
   14200:	ldr	ip, [sp, #76]	; 0x4c
   14204:	orr	r7, r7, #1
   14208:	add	fp, sp, #40	; 0x28
   1420c:	str	r2, [sp, #12]
   14210:	str	r3, [sp]
   14214:	str	r7, [sp, #4]
   14218:	mov	r1, r9
   1421c:	mov	r0, r5
   14220:	str	ip, [sp, #16]
   14224:	str	fp, [sp, #8]
   14228:	mvn	r3, #0
   1422c:	mov	r2, r6
   14230:	bl	1169c <abort@plt+0x950>
   14234:	cmp	r9, r0
   14238:	bhi	14298 <abort@plt+0x354c>
   1423c:	ldr	r3, [pc, #156]	; 142e0 <abort@plt+0x3594>
   14240:	add	r9, r0, #1
   14244:	cmp	r5, r3
   14248:	str	r9, [r4]
   1424c:	beq	14258 <abort@plt+0x350c>
   14250:	mov	r0, r5
   14254:	bl	16824 <abort@plt+0x5ad8>
   14258:	mov	r0, r9
   1425c:	bl	15f78 <abort@plt+0x522c>
   14260:	ldr	lr, [sp, #76]	; 0x4c
   14264:	ldr	r3, [sp, #32]
   14268:	ldr	ip, [sp, #72]	; 0x48
   1426c:	mov	r2, r6
   14270:	mov	r1, r9
   14274:	str	r0, [r4, #4]
   14278:	str	r3, [sp]
   1427c:	str	fp, [sp, #8]
   14280:	str	r7, [sp, #4]
   14284:	str	lr, [sp, #16]
   14288:	str	ip, [sp, #12]
   1428c:	mvn	r3, #0
   14290:	mov	r5, r0
   14294:	bl	1169c <abort@plt+0x950>
   14298:	mov	r0, r5
   1429c:	str	sl, [r8]
   142a0:	add	sp, sp, #84	; 0x54
   142a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142a8:	mov	r3, #8
   142ac:	str	r3, [sp]
   142b0:	add	r1, sp, #28
   142b4:	rsb	r2, r2, #1
   142b8:	mvn	r3, #-2147483648	; 0x80000000
   142bc:	mov	r0, #0
   142c0:	bl	16194 <abort@plt+0x5448>
   142c4:	mov	r4, r0
   142c8:	ldm	r7, {r0, r1}
   142cc:	str	r4, [r5]
   142d0:	stm	r4, {r0, r1}
   142d4:	b	141c8 <abort@plt+0x347c>
   142d8:	andeq	r8, r2, r0, asr #2
   142dc:	ldrdeq	r8, [r2], -r0
   142e0:	andeq	r8, r2, r0, ror r1
   142e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142e8:	mov	r9, r0
   142ec:	ldr	lr, [pc, #416]	; 14494 <abort@plt+0x3748>
   142f0:	mov	sl, r1
   142f4:	sub	sp, sp, #92	; 0x5c
   142f8:	ldm	lr!, {r0, r1, r2, r3}
   142fc:	add	ip, sp, #40	; 0x28
   14300:	ldr	r5, [pc, #400]	; 14498 <abort@plt+0x374c>
   14304:	stmia	ip!, {r0, r1, r2, r3}
   14308:	ldm	lr!, {r0, r1, r2, r3}
   1430c:	ldr	r4, [sp, #52]	; 0x34
   14310:	stmia	ip!, {r0, r1, r2, r3}
   14314:	ldm	lr, {r0, r1, r2, r3}
   14318:	mvn	lr, r4
   1431c:	and	lr, lr, #67108864	; 0x4000000
   14320:	eor	lr, lr, r4
   14324:	stm	ip, {r0, r1, r2, r3}
   14328:	str	lr, [sp, #52]	; 0x34
   1432c:	bl	10cb0 <__errno_location@plt>
   14330:	ldr	r2, [r5, #4]
   14334:	ldr	r4, [r5]
   14338:	cmp	r2, #0
   1433c:	ldr	r3, [r0]
   14340:	mov	r7, r0
   14344:	str	r3, [sp, #28]
   14348:	bgt	143a4 <abort@plt+0x3658>
   1434c:	add	r6, r5, #8
   14350:	cmp	r4, r6
   14354:	str	r2, [sp, #36]	; 0x24
   14358:	beq	14464 <abort@plt+0x3718>
   1435c:	mov	r3, #8
   14360:	mov	r0, r4
   14364:	str	r3, [sp]
   14368:	rsb	r2, r2, #1
   1436c:	mvn	r3, #-2147483648	; 0x80000000
   14370:	add	r1, sp, #36	; 0x24
   14374:	bl	16194 <abort@plt+0x5448>
   14378:	mov	r4, r0
   1437c:	str	r0, [r5]
   14380:	ldr	r0, [r5, #4]
   14384:	ldr	r2, [sp, #36]	; 0x24
   14388:	mov	r1, #0
   1438c:	sub	r2, r2, r0
   14390:	add	r0, r4, r0, lsl #3
   14394:	lsl	r2, r2, #3
   14398:	bl	10cc8 <memset@plt>
   1439c:	ldr	r3, [sp, #36]	; 0x24
   143a0:	str	r3, [r5, #4]
   143a4:	ldr	r6, [sp, #44]	; 0x2c
   143a8:	ldr	r8, [r4]
   143ac:	ldr	r5, [r4, #4]
   143b0:	ldr	r2, [sp, #80]	; 0x50
   143b4:	ldr	r3, [sp, #40]	; 0x28
   143b8:	ldr	ip, [sp, #84]	; 0x54
   143bc:	orr	r6, r6, #1
   143c0:	add	fp, sp, #48	; 0x30
   143c4:	str	r2, [sp, #12]
   143c8:	str	r3, [sp]
   143cc:	str	r6, [sp, #4]
   143d0:	mov	r1, r8
   143d4:	mov	r0, r5
   143d8:	str	ip, [sp, #16]
   143dc:	str	fp, [sp, #8]
   143e0:	mov	r3, sl
   143e4:	mov	r2, r9
   143e8:	bl	1169c <abort@plt+0x950>
   143ec:	cmp	r8, r0
   143f0:	bhi	14450 <abort@plt+0x3704>
   143f4:	ldr	r3, [pc, #160]	; 1449c <abort@plt+0x3750>
   143f8:	add	r8, r0, #1
   143fc:	cmp	r5, r3
   14400:	str	r8, [r4]
   14404:	beq	14410 <abort@plt+0x36c4>
   14408:	mov	r0, r5
   1440c:	bl	16824 <abort@plt+0x5ad8>
   14410:	mov	r0, r8
   14414:	bl	15f78 <abort@plt+0x522c>
   14418:	ldr	ip, [sp, #84]	; 0x54
   1441c:	ldr	lr, [sp, #40]	; 0x28
   14420:	mov	r3, sl
   14424:	mov	r2, r9
   14428:	mov	r1, r8
   1442c:	str	r0, [r4, #4]
   14430:	ldr	r4, [sp, #80]	; 0x50
   14434:	str	fp, [sp, #8]
   14438:	str	r6, [sp, #4]
   1443c:	str	ip, [sp, #16]
   14440:	str	r4, [sp, #12]
   14444:	str	lr, [sp]
   14448:	mov	r5, r0
   1444c:	bl	1169c <abort@plt+0x950>
   14450:	ldr	r3, [sp, #28]
   14454:	mov	r0, r5
   14458:	str	r3, [r7]
   1445c:	add	sp, sp, #92	; 0x5c
   14460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14464:	mov	r3, #8
   14468:	str	r3, [sp]
   1446c:	add	r1, sp, #36	; 0x24
   14470:	rsb	r2, r2, #1
   14474:	mvn	r3, #-2147483648	; 0x80000000
   14478:	mov	r0, #0
   1447c:	bl	16194 <abort@plt+0x5448>
   14480:	mov	r4, r0
   14484:	ldm	r6, {r0, r1}
   14488:	str	r4, [r5]
   1448c:	stm	r4, {r0, r1}
   14490:	b	14380 <abort@plt+0x3634>
   14494:	andeq	r8, r2, r0, asr #2
   14498:	ldrdeq	r8, [r2], -r0
   1449c:	andeq	r8, r2, r0, ror r1
   144a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144a4:	sub	sp, sp, #180	; 0xb4
   144a8:	mov	r6, r1
   144ac:	mov	r4, r0
   144b0:	mov	r9, r2
   144b4:	add	r0, sp, #80	; 0x50
   144b8:	mov	r2, #48	; 0x30
   144bc:	mov	r1, #0
   144c0:	bl	10cc8 <memset@plt>
   144c4:	cmp	r6, #10
   144c8:	beq	146a8 <abort@plt+0x395c>
   144cc:	add	r5, sp, #80	; 0x50
   144d0:	str	r6, [sp, #80]	; 0x50
   144d4:	ldm	r5!, {r0, r1, r2, r3}
   144d8:	add	ip, sp, #128	; 0x80
   144dc:	mov	r7, ip
   144e0:	add	lr, sp, #32
   144e4:	stmia	ip!, {r0, r1, r2, r3}
   144e8:	mov	r8, #67108864	; 0x4000000
   144ec:	ldm	r5!, {r0, r1, r2, r3}
   144f0:	ldr	r6, [pc, #436]	; 146ac <abort@plt+0x3960>
   144f4:	stmia	ip!, {r0, r1, r2, r3}
   144f8:	ldm	r5, {r0, r1, r2, r3}
   144fc:	stm	ip, {r0, r1, r2, r3}
   14500:	ldm	r7!, {r0, r1, r2, r3}
   14504:	stmia	lr!, {r0, r1, r2, r3}
   14508:	ldm	r7!, {r0, r1, r2, r3}
   1450c:	str	r8, [sp, #44]	; 0x2c
   14510:	stmia	lr!, {r0, r1, r2, r3}
   14514:	ldm	ip, {r0, r1, r2, r3}
   14518:	stm	lr, {r0, r1, r2, r3}
   1451c:	bl	10cb0 <__errno_location@plt>
   14520:	cmn	r4, #-2147483647	; 0x80000001
   14524:	ldr	r5, [r6]
   14528:	mov	r7, r0
   1452c:	movne	r0, #0
   14530:	moveq	r0, #1
   14534:	ldr	r3, [r7]
   14538:	orrs	r0, r0, r4, lsr #31
   1453c:	str	r3, [sp, #24]
   14540:	bne	146a8 <abort@plt+0x395c>
   14544:	ldr	r2, [r6, #4]
   14548:	cmp	r4, r2
   1454c:	blt	145ac <abort@plt+0x3860>
   14550:	add	r8, r6, #8
   14554:	cmp	r5, r8
   14558:	str	r2, [sp, #80]	; 0x50
   1455c:	beq	14678 <abort@plt+0x392c>
   14560:	mov	r3, #8
   14564:	sub	r2, r4, r2
   14568:	mov	r0, r5
   1456c:	str	r3, [sp]
   14570:	add	r2, r2, #1
   14574:	add	r1, sp, #80	; 0x50
   14578:	mvn	r3, #-2147483648	; 0x80000000
   1457c:	bl	16194 <abort@plt+0x5448>
   14580:	mov	r5, r0
   14584:	str	r0, [r6]
   14588:	ldr	r0, [r6, #4]
   1458c:	ldr	r2, [sp, #80]	; 0x50
   14590:	mov	r1, #0
   14594:	sub	r2, r2, r0
   14598:	add	r0, r5, r0, lsl #3
   1459c:	lsl	r2, r2, #3
   145a0:	bl	10cc8 <memset@plt>
   145a4:	ldr	r3, [sp, #80]	; 0x50
   145a8:	str	r3, [r6, #4]
   145ac:	add	fp, r5, r4, lsl #3
   145b0:	ldr	r1, [sp, #36]	; 0x24
   145b4:	ldr	r8, [r5, r4, lsl #3]
   145b8:	ldr	r6, [fp, #4]
   145bc:	ldr	r2, [sp, #72]	; 0x48
   145c0:	ldr	r3, [sp, #32]
   145c4:	ldr	ip, [sp, #76]	; 0x4c
   145c8:	orr	r1, r1, #1
   145cc:	add	sl, sp, #40	; 0x28
   145d0:	str	r1, [sp, #28]
   145d4:	str	r1, [sp, #4]
   145d8:	str	r2, [sp, #12]
   145dc:	str	r3, [sp]
   145e0:	mov	r0, r6
   145e4:	mov	r1, r8
   145e8:	str	ip, [sp, #16]
   145ec:	str	sl, [sp, #8]
   145f0:	mvn	r3, #0
   145f4:	mov	r2, r9
   145f8:	bl	1169c <abort@plt+0x950>
   145fc:	cmp	r8, r0
   14600:	bhi	14664 <abort@plt+0x3918>
   14604:	ldr	r3, [pc, #164]	; 146b0 <abort@plt+0x3964>
   14608:	add	r8, r0, #1
   1460c:	cmp	r6, r3
   14610:	str	r8, [r5, r4, lsl #3]
   14614:	beq	14620 <abort@plt+0x38d4>
   14618:	mov	r0, r6
   1461c:	bl	16824 <abort@plt+0x5ad8>
   14620:	mov	r0, r8
   14624:	bl	15f78 <abort@plt+0x522c>
   14628:	ldr	lr, [sp, #76]	; 0x4c
   1462c:	ldr	r3, [sp, #32]
   14630:	ldr	ip, [sp, #72]	; 0x48
   14634:	ldr	r4, [sp, #28]
   14638:	mov	r2, r9
   1463c:	mov	r1, r8
   14640:	str	r0, [fp, #4]
   14644:	str	r3, [sp]
   14648:	str	sl, [sp, #8]
   1464c:	str	r4, [sp, #4]
   14650:	str	lr, [sp, #16]
   14654:	str	ip, [sp, #12]
   14658:	mvn	r3, #0
   1465c:	mov	r6, r0
   14660:	bl	1169c <abort@plt+0x950>
   14664:	ldr	r3, [sp, #24]
   14668:	mov	r0, r6
   1466c:	str	r3, [r7]
   14670:	add	sp, sp, #180	; 0xb4
   14674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14678:	mov	r3, #8
   1467c:	sub	r2, r4, r2
   14680:	add	r1, sp, #80	; 0x50
   14684:	str	r3, [sp]
   14688:	add	r2, r2, #1
   1468c:	mvn	r3, #-2147483648	; 0x80000000
   14690:	bl	16194 <abort@plt+0x5448>
   14694:	mov	r5, r0
   14698:	ldm	r8, {r0, r1}
   1469c:	str	r5, [r6]
   146a0:	stm	r5, {r0, r1}
   146a4:	b	14588 <abort@plt+0x383c>
   146a8:	bl	10d4c <abort@plt>
   146ac:	ldrdeq	r8, [r2], -r0
   146b0:	andeq	r8, r2, r0, ror r1
   146b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146b8:	mov	r7, r1
   146bc:	ldr	lr, [pc, #492]	; 148b0 <abort@plt+0x3b64>
   146c0:	mov	r8, r2
   146c4:	mov	r4, r0
   146c8:	mov	fp, r3
   146cc:	ldm	lr!, {r0, r1, r2, r3}
   146d0:	sub	sp, sp, #100	; 0x64
   146d4:	add	ip, sp, #48	; 0x30
   146d8:	mov	sl, #10
   146dc:	stmia	ip!, {r0, r1, r2, r3}
   146e0:	cmp	r8, #0
   146e4:	cmpne	r7, #0
   146e8:	ldm	lr!, {r0, r1, r2, r3}
   146ec:	str	sl, [sp, #48]	; 0x30
   146f0:	stmia	ip!, {r0, r1, r2, r3}
   146f4:	ldm	lr, {r0, r1, r2, r3}
   146f8:	stm	ip, {r0, r1, r2, r3}
   146fc:	beq	148ac <abort@plt+0x3b60>
   14700:	str	r7, [sp, #88]	; 0x58
   14704:	str	r8, [sp, #92]	; 0x5c
   14708:	bl	10cb0 <__errno_location@plt>
   1470c:	ldr	r6, [pc, #416]	; 148b4 <abort@plt+0x3b68>
   14710:	cmn	r4, #-2147483647	; 0x80000001
   14714:	ldr	r5, [r6]
   14718:	mov	r9, r0
   1471c:	movne	r0, #0
   14720:	moveq	r0, #1
   14724:	ldr	r3, [r9]
   14728:	orrs	r0, r0, r4, lsr #31
   1472c:	str	r3, [sp, #28]
   14730:	bne	148ac <abort@plt+0x3b60>
   14734:	ldr	r2, [r6, #4]
   14738:	cmp	r4, r2
   1473c:	movlt	r3, sl
   14740:	blt	147ac <abort@plt+0x3a60>
   14744:	add	r7, r6, #8
   14748:	cmp	r5, r7
   1474c:	str	r2, [sp, #44]	; 0x2c
   14750:	beq	1487c <abort@plt+0x3b30>
   14754:	mov	r3, #8
   14758:	sub	r2, r4, r2
   1475c:	mov	r0, r5
   14760:	str	r3, [sp]
   14764:	add	r2, r2, #1
   14768:	mvn	r3, #-2147483648	; 0x80000000
   1476c:	add	r1, sp, #44	; 0x2c
   14770:	bl	16194 <abort@plt+0x5448>
   14774:	mov	r5, r0
   14778:	str	r0, [r6]
   1477c:	ldr	r0, [r6, #4]
   14780:	ldr	r2, [sp, #44]	; 0x2c
   14784:	mov	r1, #0
   14788:	sub	r2, r2, r0
   1478c:	add	r0, r5, r0, lsl #3
   14790:	lsl	r2, r2, #3
   14794:	bl	10cc8 <memset@plt>
   14798:	ldr	r3, [sp, #48]	; 0x30
   1479c:	ldr	r7, [sp, #88]	; 0x58
   147a0:	ldr	r8, [sp, #92]	; 0x5c
   147a4:	ldr	r2, [sp, #44]	; 0x2c
   147a8:	str	r2, [r6, #4]
   147ac:	add	r2, r5, r4, lsl #3
   147b0:	mov	r1, r2
   147b4:	str	r2, [sp, #32]
   147b8:	ldr	r2, [sp, #52]	; 0x34
   147bc:	ldr	r6, [r1, #4]
   147c0:	ldr	sl, [r5, r4, lsl #3]
   147c4:	orr	r2, r2, #1
   147c8:	str	r3, [sp]
   147cc:	add	r3, sp, #56	; 0x38
   147d0:	str	r2, [sp, #36]	; 0x24
   147d4:	str	r2, [sp, #4]
   147d8:	str	r3, [sp, #8]
   147dc:	mov	r0, r6
   147e0:	str	r8, [sp, #16]
   147e4:	str	r7, [sp, #12]
   147e8:	mov	r1, sl
   147ec:	mvn	r3, #0
   147f0:	mov	r2, fp
   147f4:	bl	1169c <abort@plt+0x950>
   147f8:	cmp	sl, r0
   147fc:	bhi	14868 <abort@plt+0x3b1c>
   14800:	ldr	r3, [pc, #176]	; 148b8 <abort@plt+0x3b6c>
   14804:	add	r7, r0, #1
   14808:	cmp	r6, r3
   1480c:	str	r7, [r5, r4, lsl #3]
   14810:	beq	1481c <abort@plt+0x3ad0>
   14814:	mov	r0, r6
   14818:	bl	16824 <abort@plt+0x5ad8>
   1481c:	mov	r0, r7
   14820:	bl	15f78 <abort@plt+0x522c>
   14824:	ldr	r3, [sp, #32]
   14828:	ldr	lr, [sp, #92]	; 0x5c
   1482c:	ldr	ip, [sp, #88]	; 0x58
   14830:	ldr	r4, [sp, #36]	; 0x24
   14834:	mov	r2, fp
   14838:	mov	r1, r7
   1483c:	str	r0, [r3, #4]
   14840:	add	r3, sp, #56	; 0x38
   14844:	str	r3, [sp, #8]
   14848:	ldr	r3, [sp, #48]	; 0x30
   1484c:	str	r4, [sp, #4]
   14850:	str	r3, [sp]
   14854:	str	lr, [sp, #16]
   14858:	str	ip, [sp, #12]
   1485c:	mvn	r3, #0
   14860:	mov	r6, r0
   14864:	bl	1169c <abort@plt+0x950>
   14868:	ldr	r3, [sp, #28]
   1486c:	mov	r0, r6
   14870:	str	r3, [r9]
   14874:	add	sp, sp, #100	; 0x64
   14878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1487c:	mov	r3, #8
   14880:	sub	r2, r4, r2
   14884:	str	r3, [sp]
   14888:	add	r1, sp, #44	; 0x2c
   1488c:	add	r2, r2, #1
   14890:	mvn	r3, #-2147483648	; 0x80000000
   14894:	bl	16194 <abort@plt+0x5448>
   14898:	mov	r5, r0
   1489c:	ldm	r7, {r0, r1}
   148a0:	str	r5, [r6]
   148a4:	stm	r5, {r0, r1}
   148a8:	b	1477c <abort@plt+0x3a30>
   148ac:	bl	10d4c <abort@plt>
   148b0:	andeq	r8, r2, r0, asr #2
   148b4:	ldrdeq	r8, [r2], -r0
   148b8:	andeq	r8, r2, r0, ror r1
   148bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148c0:	mov	r7, r1
   148c4:	ldr	lr, [pc, #492]	; 14ab8 <abort@plt+0x3d6c>
   148c8:	mov	r8, r2
   148cc:	mov	r4, r0
   148d0:	mov	fp, r3
   148d4:	ldm	lr!, {r0, r1, r2, r3}
   148d8:	sub	sp, sp, #100	; 0x64
   148dc:	add	ip, sp, #48	; 0x30
   148e0:	mov	sl, #10
   148e4:	stmia	ip!, {r0, r1, r2, r3}
   148e8:	cmp	r8, #0
   148ec:	cmpne	r7, #0
   148f0:	ldm	lr!, {r0, r1, r2, r3}
   148f4:	str	sl, [sp, #48]	; 0x30
   148f8:	stmia	ip!, {r0, r1, r2, r3}
   148fc:	ldm	lr, {r0, r1, r2, r3}
   14900:	stm	ip, {r0, r1, r2, r3}
   14904:	beq	14ab4 <abort@plt+0x3d68>
   14908:	str	r7, [sp, #88]	; 0x58
   1490c:	str	r8, [sp, #92]	; 0x5c
   14910:	bl	10cb0 <__errno_location@plt>
   14914:	ldr	r6, [pc, #416]	; 14abc <abort@plt+0x3d70>
   14918:	cmn	r4, #-2147483647	; 0x80000001
   1491c:	ldr	r5, [r6]
   14920:	mov	r9, r0
   14924:	movne	r0, #0
   14928:	moveq	r0, #1
   1492c:	ldr	r3, [r9]
   14930:	orrs	r0, r0, r4, lsr #31
   14934:	str	r3, [sp, #28]
   14938:	bne	14ab4 <abort@plt+0x3d68>
   1493c:	ldr	r2, [r6, #4]
   14940:	cmp	r4, r2
   14944:	movlt	r3, sl
   14948:	blt	149b4 <abort@plt+0x3c68>
   1494c:	add	r7, r6, #8
   14950:	cmp	r5, r7
   14954:	str	r2, [sp, #44]	; 0x2c
   14958:	beq	14a84 <abort@plt+0x3d38>
   1495c:	mov	r3, #8
   14960:	sub	r2, r4, r2
   14964:	mov	r0, r5
   14968:	str	r3, [sp]
   1496c:	add	r2, r2, #1
   14970:	mvn	r3, #-2147483648	; 0x80000000
   14974:	add	r1, sp, #44	; 0x2c
   14978:	bl	16194 <abort@plt+0x5448>
   1497c:	mov	r5, r0
   14980:	str	r0, [r6]
   14984:	ldr	r0, [r6, #4]
   14988:	ldr	r2, [sp, #44]	; 0x2c
   1498c:	mov	r1, #0
   14990:	sub	r2, r2, r0
   14994:	add	r0, r5, r0, lsl #3
   14998:	lsl	r2, r2, #3
   1499c:	bl	10cc8 <memset@plt>
   149a0:	ldr	r3, [sp, #48]	; 0x30
   149a4:	ldr	r7, [sp, #88]	; 0x58
   149a8:	ldr	r8, [sp, #92]	; 0x5c
   149ac:	ldr	r2, [sp, #44]	; 0x2c
   149b0:	str	r2, [r6, #4]
   149b4:	add	r2, r5, r4, lsl #3
   149b8:	mov	r1, r2
   149bc:	str	r2, [sp, #32]
   149c0:	ldr	r2, [sp, #52]	; 0x34
   149c4:	ldr	r6, [r1, #4]
   149c8:	ldr	sl, [r5, r4, lsl #3]
   149cc:	orr	r2, r2, #1
   149d0:	str	r3, [sp]
   149d4:	add	r3, sp, #56	; 0x38
   149d8:	str	r2, [sp, #36]	; 0x24
   149dc:	str	r2, [sp, #4]
   149e0:	str	r3, [sp, #8]
   149e4:	mov	r0, r6
   149e8:	str	r8, [sp, #16]
   149ec:	str	r7, [sp, #12]
   149f0:	mov	r1, sl
   149f4:	ldr	r3, [sp, #136]	; 0x88
   149f8:	mov	r2, fp
   149fc:	bl	1169c <abort@plt+0x950>
   14a00:	cmp	sl, r0
   14a04:	bhi	14a70 <abort@plt+0x3d24>
   14a08:	ldr	r3, [pc, #176]	; 14ac0 <abort@plt+0x3d74>
   14a0c:	add	r7, r0, #1
   14a10:	cmp	r6, r3
   14a14:	str	r7, [r5, r4, lsl #3]
   14a18:	beq	14a24 <abort@plt+0x3cd8>
   14a1c:	mov	r0, r6
   14a20:	bl	16824 <abort@plt+0x5ad8>
   14a24:	mov	r0, r7
   14a28:	bl	15f78 <abort@plt+0x522c>
   14a2c:	ldr	r3, [sp, #32]
   14a30:	ldr	lr, [sp, #92]	; 0x5c
   14a34:	ldr	ip, [sp, #88]	; 0x58
   14a38:	ldr	r4, [sp, #36]	; 0x24
   14a3c:	mov	r2, fp
   14a40:	mov	r1, r7
   14a44:	str	r0, [r3, #4]
   14a48:	add	r3, sp, #56	; 0x38
   14a4c:	str	r3, [sp, #8]
   14a50:	ldr	r3, [sp, #48]	; 0x30
   14a54:	str	r4, [sp, #4]
   14a58:	str	r3, [sp]
   14a5c:	str	lr, [sp, #16]
   14a60:	str	ip, [sp, #12]
   14a64:	ldr	r3, [sp, #136]	; 0x88
   14a68:	mov	r6, r0
   14a6c:	bl	1169c <abort@plt+0x950>
   14a70:	ldr	r3, [sp, #28]
   14a74:	mov	r0, r6
   14a78:	str	r3, [r9]
   14a7c:	add	sp, sp, #100	; 0x64
   14a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a84:	mov	r3, #8
   14a88:	sub	r2, r4, r2
   14a8c:	str	r3, [sp]
   14a90:	add	r1, sp, #44	; 0x2c
   14a94:	add	r2, r2, #1
   14a98:	mvn	r3, #-2147483648	; 0x80000000
   14a9c:	bl	16194 <abort@plt+0x5448>
   14aa0:	mov	r5, r0
   14aa4:	ldm	r7, {r0, r1}
   14aa8:	str	r5, [r6]
   14aac:	stm	r5, {r0, r1}
   14ab0:	b	14984 <abort@plt+0x3c38>
   14ab4:	bl	10d4c <abort@plt>
   14ab8:	andeq	r8, r2, r0, asr #2
   14abc:	ldrdeq	r8, [r2], -r0
   14ac0:	andeq	r8, r2, r0, ror r1
   14ac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ac8:	mov	r5, r0
   14acc:	ldr	lr, [pc, #452]	; 14c98 <abort@plt+0x3f4c>
   14ad0:	mov	r6, r1
   14ad4:	mov	sl, r2
   14ad8:	ldm	lr!, {r0, r1, r2, r3}
   14adc:	sub	sp, sp, #92	; 0x5c
   14ae0:	add	ip, sp, #40	; 0x28
   14ae4:	cmp	r6, #0
   14ae8:	cmpne	r5, #0
   14aec:	stmia	ip!, {r0, r1, r2, r3}
   14af0:	mov	r9, #10
   14af4:	ldm	lr!, {r0, r1, r2, r3}
   14af8:	moveq	fp, #1
   14afc:	movne	fp, #0
   14b00:	str	r9, [sp, #40]	; 0x28
   14b04:	stmia	ip!, {r0, r1, r2, r3}
   14b08:	ldm	lr, {r0, r1, r2, r3}
   14b0c:	stm	ip, {r0, r1, r2, r3}
   14b10:	beq	14c94 <abort@plt+0x3f48>
   14b14:	str	r5, [sp, #80]	; 0x50
   14b18:	str	r6, [sp, #84]	; 0x54
   14b1c:	bl	10cb0 <__errno_location@plt>
   14b20:	ldr	r7, [pc, #372]	; 14c9c <abort@plt+0x3f50>
   14b24:	ldr	r2, [r7, #4]
   14b28:	ldr	r4, [r7]
   14b2c:	cmp	r2, #0
   14b30:	ldr	r3, [r0]
   14b34:	mov	r8, r0
   14b38:	str	r3, [sp, #24]
   14b3c:	movgt	r3, r9
   14b40:	bgt	14ba8 <abort@plt+0x3e5c>
   14b44:	add	r5, r7, #8
   14b48:	cmp	r4, r5
   14b4c:	str	r2, [sp, #36]	; 0x24
   14b50:	beq	14c64 <abort@plt+0x3f18>
   14b54:	mov	r3, #8
   14b58:	mov	r0, r4
   14b5c:	str	r3, [sp]
   14b60:	rsb	r2, r2, #1
   14b64:	mvn	r3, #-2147483648	; 0x80000000
   14b68:	add	r1, sp, #36	; 0x24
   14b6c:	bl	16194 <abort@plt+0x5448>
   14b70:	mov	r4, r0
   14b74:	str	r0, [r7]
   14b78:	ldr	r0, [r7, #4]
   14b7c:	ldr	r2, [sp, #36]	; 0x24
   14b80:	mov	r1, #0
   14b84:	sub	r2, r2, r0
   14b88:	add	r0, r4, r0, lsl #3
   14b8c:	lsl	r2, r2, #3
   14b90:	bl	10cc8 <memset@plt>
   14b94:	ldr	r3, [sp, #40]	; 0x28
   14b98:	ldr	r5, [sp, #80]	; 0x50
   14b9c:	ldr	r6, [sp, #84]	; 0x54
   14ba0:	ldr	r2, [sp, #36]	; 0x24
   14ba4:	str	r2, [r7, #4]
   14ba8:	ldr	r2, [sp, #44]	; 0x2c
   14bac:	ldr	r9, [r4]
   14bb0:	ldr	r7, [r4, #4]
   14bb4:	orr	r2, r2, #1
   14bb8:	add	fp, sp, #48	; 0x30
   14bbc:	str	r2, [sp, #28]
   14bc0:	str	r2, [sp, #4]
   14bc4:	str	r3, [sp]
   14bc8:	str	r6, [sp, #16]
   14bcc:	str	r5, [sp, #12]
   14bd0:	mov	r1, r9
   14bd4:	mov	r0, r7
   14bd8:	str	fp, [sp, #8]
   14bdc:	mvn	r3, #0
   14be0:	mov	r2, sl
   14be4:	bl	1169c <abort@plt+0x950>
   14be8:	cmp	r9, r0
   14bec:	bhi	14c50 <abort@plt+0x3f04>
   14bf0:	ldr	r3, [pc, #168]	; 14ca0 <abort@plt+0x3f54>
   14bf4:	add	r5, r0, #1
   14bf8:	cmp	r7, r3
   14bfc:	str	r5, [r4]
   14c00:	beq	14c0c <abort@plt+0x3ec0>
   14c04:	mov	r0, r7
   14c08:	bl	16824 <abort@plt+0x5ad8>
   14c0c:	mov	r0, r5
   14c10:	bl	15f78 <abort@plt+0x522c>
   14c14:	ldr	lr, [sp, #84]	; 0x54
   14c18:	ldr	r3, [sp, #40]	; 0x28
   14c1c:	ldr	ip, [sp, #80]	; 0x50
   14c20:	mov	r2, sl
   14c24:	mov	r1, r5
   14c28:	str	r0, [r4, #4]
   14c2c:	ldr	r4, [sp, #28]
   14c30:	str	r3, [sp]
   14c34:	str	fp, [sp, #8]
   14c38:	str	r4, [sp, #4]
   14c3c:	str	lr, [sp, #16]
   14c40:	str	ip, [sp, #12]
   14c44:	mvn	r3, #0
   14c48:	mov	r7, r0
   14c4c:	bl	1169c <abort@plt+0x950>
   14c50:	ldr	r3, [sp, #24]
   14c54:	mov	r0, r7
   14c58:	str	r3, [r8]
   14c5c:	add	sp, sp, #92	; 0x5c
   14c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c64:	mov	r3, #8
   14c68:	str	r3, [sp]
   14c6c:	add	r1, sp, #36	; 0x24
   14c70:	rsb	r2, r2, #1
   14c74:	mov	r0, fp
   14c78:	mvn	r3, #-2147483648	; 0x80000000
   14c7c:	bl	16194 <abort@plt+0x5448>
   14c80:	mov	r4, r0
   14c84:	ldm	r5, {r0, r1}
   14c88:	str	r4, [r7]
   14c8c:	stm	r4, {r0, r1}
   14c90:	b	14b78 <abort@plt+0x3e2c>
   14c94:	bl	10d4c <abort@plt>
   14c98:	andeq	r8, r2, r0, asr #2
   14c9c:	ldrdeq	r8, [r2], -r0
   14ca0:	andeq	r8, r2, r0, ror r1
   14ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ca8:	mov	r5, r0
   14cac:	ldr	lr, [pc, #464]	; 14e84 <abort@plt+0x4138>
   14cb0:	mov	r6, r1
   14cb4:	mov	sl, r2
   14cb8:	mov	fp, r3
   14cbc:	ldm	lr!, {r0, r1, r2, r3}
   14cc0:	sub	sp, sp, #92	; 0x5c
   14cc4:	add	ip, sp, #40	; 0x28
   14cc8:	cmp	r6, #0
   14ccc:	cmpne	r5, #0
   14cd0:	stmia	ip!, {r0, r1, r2, r3}
   14cd4:	moveq	r4, #1
   14cd8:	ldm	lr!, {r0, r1, r2, r3}
   14cdc:	movne	r4, #0
   14ce0:	mov	r9, #10
   14ce4:	str	r4, [sp, #28]
   14ce8:	stmia	ip!, {r0, r1, r2, r3}
   14cec:	ldm	lr, {r0, r1, r2, r3}
   14cf0:	str	r9, [sp, #40]	; 0x28
   14cf4:	stm	ip, {r0, r1, r2, r3}
   14cf8:	beq	14e80 <abort@plt+0x4134>
   14cfc:	str	r5, [sp, #80]	; 0x50
   14d00:	str	r6, [sp, #84]	; 0x54
   14d04:	bl	10cb0 <__errno_location@plt>
   14d08:	ldr	r7, [pc, #376]	; 14e88 <abort@plt+0x413c>
   14d0c:	ldr	r2, [r7, #4]
   14d10:	ldr	r4, [r7]
   14d14:	cmp	r2, #0
   14d18:	ldr	r3, [r0]
   14d1c:	mov	r8, r0
   14d20:	str	r3, [sp, #24]
   14d24:	movgt	r3, r9
   14d28:	bgt	14d90 <abort@plt+0x4044>
   14d2c:	add	r5, r7, #8
   14d30:	cmp	r4, r5
   14d34:	str	r2, [sp, #36]	; 0x24
   14d38:	beq	14e50 <abort@plt+0x4104>
   14d3c:	mov	r3, #8
   14d40:	mov	r0, r4
   14d44:	str	r3, [sp]
   14d48:	rsb	r2, r2, #1
   14d4c:	mvn	r3, #-2147483648	; 0x80000000
   14d50:	add	r1, sp, #36	; 0x24
   14d54:	bl	16194 <abort@plt+0x5448>
   14d58:	mov	r4, r0
   14d5c:	str	r0, [r7]
   14d60:	ldr	r0, [r7, #4]
   14d64:	ldr	r2, [sp, #36]	; 0x24
   14d68:	mov	r1, #0
   14d6c:	sub	r2, r2, r0
   14d70:	add	r0, r4, r0, lsl #3
   14d74:	lsl	r2, r2, #3
   14d78:	bl	10cc8 <memset@plt>
   14d7c:	ldr	r3, [sp, #40]	; 0x28
   14d80:	ldr	r5, [sp, #80]	; 0x50
   14d84:	ldr	r6, [sp, #84]	; 0x54
   14d88:	ldr	r2, [sp, #36]	; 0x24
   14d8c:	str	r2, [r7, #4]
   14d90:	ldr	r2, [sp, #44]	; 0x2c
   14d94:	ldr	r9, [r4]
   14d98:	ldr	r7, [r4, #4]
   14d9c:	orr	r2, r2, #1
   14da0:	str	r3, [sp]
   14da4:	add	r3, sp, #48	; 0x30
   14da8:	str	r2, [sp, #28]
   14dac:	str	r2, [sp, #4]
   14db0:	str	r3, [sp, #8]
   14db4:	str	r6, [sp, #16]
   14db8:	str	r5, [sp, #12]
   14dbc:	mov	r1, r9
   14dc0:	mov	r0, r7
   14dc4:	mov	r3, fp
   14dc8:	mov	r2, sl
   14dcc:	bl	1169c <abort@plt+0x950>
   14dd0:	cmp	r9, r0
   14dd4:	bhi	14e3c <abort@plt+0x40f0>
   14dd8:	ldr	r3, [pc, #172]	; 14e8c <abort@plt+0x4140>
   14ddc:	add	r5, r0, #1
   14de0:	cmp	r7, r3
   14de4:	str	r5, [r4]
   14de8:	beq	14df4 <abort@plt+0x40a8>
   14dec:	mov	r0, r7
   14df0:	bl	16824 <abort@plt+0x5ad8>
   14df4:	mov	r0, r5
   14df8:	bl	15f78 <abort@plt+0x522c>
   14dfc:	add	lr, sp, #48	; 0x30
   14e00:	ldr	ip, [sp, #84]	; 0x54
   14e04:	mov	r1, r5
   14e08:	ldr	r5, [sp, #28]
   14e0c:	mov	r3, fp
   14e10:	mov	r2, sl
   14e14:	str	r0, [r4, #4]
   14e18:	ldr	r4, [sp, #80]	; 0x50
   14e1c:	str	lr, [sp, #8]
   14e20:	ldr	lr, [sp, #40]	; 0x28
   14e24:	str	r5, [sp, #4]
   14e28:	str	ip, [sp, #16]
   14e2c:	str	r4, [sp, #12]
   14e30:	str	lr, [sp]
   14e34:	mov	r7, r0
   14e38:	bl	1169c <abort@plt+0x950>
   14e3c:	ldr	r3, [sp, #24]
   14e40:	mov	r0, r7
   14e44:	str	r3, [r8]
   14e48:	add	sp, sp, #92	; 0x5c
   14e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e50:	mov	r3, #8
   14e54:	str	r3, [sp]
   14e58:	add	r1, sp, #36	; 0x24
   14e5c:	rsb	r2, r2, #1
   14e60:	ldr	r0, [sp, #28]
   14e64:	mvn	r3, #-2147483648	; 0x80000000
   14e68:	bl	16194 <abort@plt+0x5448>
   14e6c:	mov	r4, r0
   14e70:	ldm	r5, {r0, r1}
   14e74:	str	r4, [r7]
   14e78:	stm	r4, {r0, r1}
   14e7c:	b	14d60 <abort@plt+0x4014>
   14e80:	bl	10d4c <abort@plt>
   14e84:	andeq	r8, r2, r0, asr #2
   14e88:	ldrdeq	r8, [r2], -r0
   14e8c:	andeq	r8, r2, r0, ror r1
   14e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e94:	sub	sp, sp, #52	; 0x34
   14e98:	mov	r5, r0
   14e9c:	mov	sl, r1
   14ea0:	mov	fp, r2
   14ea4:	bl	10cb0 <__errno_location@plt>
   14ea8:	ldr	r4, [pc, #404]	; 15044 <abort@plt+0x42f8>
   14eac:	cmn	r5, #-2147483647	; 0x80000001
   14eb0:	ldr	r6, [r4]
   14eb4:	mov	r8, r0
   14eb8:	movne	r0, #0
   14ebc:	moveq	r0, #1
   14ec0:	ldr	r3, [r8]
   14ec4:	orrs	r0, r0, r5, lsr #31
   14ec8:	str	r3, [sp, #28]
   14ecc:	bne	15040 <abort@plt+0x42f4>
   14ed0:	ldr	r2, [r4, #4]
   14ed4:	cmp	r5, r2
   14ed8:	blt	14f38 <abort@plt+0x41ec>
   14edc:	add	r7, r4, #8
   14ee0:	cmp	r6, r7
   14ee4:	str	r2, [sp, #44]	; 0x2c
   14ee8:	beq	15010 <abort@plt+0x42c4>
   14eec:	mov	r3, #8
   14ef0:	sub	r2, r5, r2
   14ef4:	mov	r0, r6
   14ef8:	str	r3, [sp]
   14efc:	add	r2, r2, #1
   14f00:	mvn	r3, #-2147483648	; 0x80000000
   14f04:	add	r1, sp, #44	; 0x2c
   14f08:	bl	16194 <abort@plt+0x5448>
   14f0c:	mov	r6, r0
   14f10:	str	r0, [r4]
   14f14:	ldr	r0, [r4, #4]
   14f18:	ldr	r2, [sp, #44]	; 0x2c
   14f1c:	mov	r1, #0
   14f20:	sub	r2, r2, r0
   14f24:	add	r0, r6, r0, lsl #3
   14f28:	lsl	r2, r2, #3
   14f2c:	bl	10cc8 <memset@plt>
   14f30:	ldr	r3, [sp, #44]	; 0x2c
   14f34:	str	r3, [r4, #4]
   14f38:	ldr	r2, [r4, #56]	; 0x38
   14f3c:	add	r3, r6, r5, lsl #3
   14f40:	ldr	r1, [r4, #20]
   14f44:	ldr	r7, [r3, #4]
   14f48:	ldr	r9, [r6, r5, lsl #3]
   14f4c:	ldr	ip, [r4, #60]	; 0x3c
   14f50:	str	r3, [sp, #32]
   14f54:	ldr	r3, [r4, #16]
   14f58:	str	r2, [sp, #12]
   14f5c:	ldr	r2, [pc, #228]	; 15048 <abort@plt+0x42fc>
   14f60:	orr	r1, r1, #1
   14f64:	str	r1, [sp, #36]	; 0x24
   14f68:	str	r1, [sp, #4]
   14f6c:	str	r2, [sp, #8]
   14f70:	str	r3, [sp]
   14f74:	mov	r0, r7
   14f78:	mov	r1, r9
   14f7c:	str	ip, [sp, #16]
   14f80:	mov	r3, fp
   14f84:	mov	r2, sl
   14f88:	bl	1169c <abort@plt+0x950>
   14f8c:	cmp	r9, r0
   14f90:	bhi	14ffc <abort@plt+0x42b0>
   14f94:	ldr	r3, [pc, #176]	; 1504c <abort@plt+0x4300>
   14f98:	add	r9, r0, #1
   14f9c:	cmp	r7, r3
   14fa0:	str	r9, [r6, r5, lsl #3]
   14fa4:	beq	14fb0 <abort@plt+0x4264>
   14fa8:	mov	r0, r7
   14fac:	bl	16824 <abort@plt+0x5ad8>
   14fb0:	mov	r0, r9
   14fb4:	bl	15f78 <abort@plt+0x522c>
   14fb8:	ldr	ip, [sp, #32]
   14fbc:	ldr	lr, [r4, #60]	; 0x3c
   14fc0:	ldr	r5, [r4, #56]	; 0x38
   14fc4:	mov	r3, fp
   14fc8:	mov	r2, sl
   14fcc:	mov	r1, r9
   14fd0:	str	r0, [ip, #4]
   14fd4:	ldr	ip, [r4, #16]
   14fd8:	ldr	r4, [pc, #104]	; 15048 <abort@plt+0x42fc>
   14fdc:	str	lr, [sp, #16]
   14fe0:	str	r4, [sp, #8]
   14fe4:	ldr	r4, [sp, #36]	; 0x24
   14fe8:	str	r5, [sp, #12]
   14fec:	str	r4, [sp, #4]
   14ff0:	str	ip, [sp]
   14ff4:	mov	r7, r0
   14ff8:	bl	1169c <abort@plt+0x950>
   14ffc:	ldr	r3, [sp, #28]
   15000:	mov	r0, r7
   15004:	str	r3, [r8]
   15008:	add	sp, sp, #52	; 0x34
   1500c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15010:	mov	r3, #8
   15014:	sub	r2, r5, r2
   15018:	str	r3, [sp]
   1501c:	add	r1, sp, #44	; 0x2c
   15020:	add	r2, r2, #1
   15024:	mvn	r3, #-2147483648	; 0x80000000
   15028:	bl	16194 <abort@plt+0x5448>
   1502c:	mov	r6, r0
   15030:	ldm	r7, {r0, r1}
   15034:	str	r6, [r4]
   15038:	stm	r6, {r0, r1}
   1503c:	b	14f14 <abort@plt+0x41c8>
   15040:	bl	10d4c <abort@plt>
   15044:	ldrdeq	r8, [r2], -r0
   15048:	andeq	r8, r2, r8, ror #1
   1504c:	andeq	r8, r2, r0, ror r1
   15050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15054:	sub	sp, sp, #44	; 0x2c
   15058:	mov	r9, r0
   1505c:	mov	sl, r1
   15060:	bl	10cb0 <__errno_location@plt>
   15064:	ldr	r4, [pc, #360]	; 151d4 <abort@plt+0x4488>
   15068:	ldr	r2, [r4, #4]
   1506c:	ldr	r5, [r4]
   15070:	cmp	r2, #0
   15074:	ldr	r3, [r0]
   15078:	mov	r7, r0
   1507c:	str	r3, [sp, #24]
   15080:	bgt	150dc <abort@plt+0x4390>
   15084:	add	r6, r4, #8
   15088:	cmp	r5, r6
   1508c:	str	r2, [sp, #36]	; 0x24
   15090:	beq	151a4 <abort@plt+0x4458>
   15094:	mov	r3, #8
   15098:	mov	r0, r5
   1509c:	str	r3, [sp]
   150a0:	rsb	r2, r2, #1
   150a4:	mvn	r3, #-2147483648	; 0x80000000
   150a8:	add	r1, sp, #36	; 0x24
   150ac:	bl	16194 <abort@plt+0x5448>
   150b0:	mov	r5, r0
   150b4:	str	r0, [r4]
   150b8:	ldr	r0, [r4, #4]
   150bc:	ldr	r2, [sp, #36]	; 0x24
   150c0:	mov	r1, #0
   150c4:	sub	r2, r2, r0
   150c8:	add	r0, r5, r0, lsl #3
   150cc:	lsl	r2, r2, #3
   150d0:	bl	10cc8 <memset@plt>
   150d4:	ldr	r3, [sp, #36]	; 0x24
   150d8:	str	r3, [r4, #4]
   150dc:	ldr	r1, [r4, #20]
   150e0:	ldr	r8, [r5]
   150e4:	ldr	r6, [r5, #4]
   150e8:	ldr	r2, [r4, #56]	; 0x38
   150ec:	ldr	r3, [r4, #16]
   150f0:	ldr	ip, [r4, #60]	; 0x3c
   150f4:	ldr	fp, [pc, #220]	; 151d8 <abort@plt+0x448c>
   150f8:	orr	r1, r1, #1
   150fc:	str	r1, [sp, #28]
   15100:	str	r1, [sp, #4]
   15104:	str	r2, [sp, #12]
   15108:	str	r3, [sp]
   1510c:	mov	r1, r8
   15110:	mov	r0, r6
   15114:	str	ip, [sp, #16]
   15118:	str	fp, [sp, #8]
   1511c:	mov	r3, sl
   15120:	mov	r2, r9
   15124:	bl	1169c <abort@plt+0x950>
   15128:	cmp	r8, r0
   1512c:	bhi	15190 <abort@plt+0x4444>
   15130:	ldr	r3, [pc, #164]	; 151dc <abort@plt+0x4490>
   15134:	add	r8, r0, #1
   15138:	cmp	r6, r3
   1513c:	str	r8, [r5]
   15140:	beq	1514c <abort@plt+0x4400>
   15144:	mov	r0, r6
   15148:	bl	16824 <abort@plt+0x5ad8>
   1514c:	mov	r0, r8
   15150:	bl	15f78 <abort@plt+0x522c>
   15154:	ldr	lr, [r4, #60]	; 0x3c
   15158:	ldr	ip, [r4, #16]
   1515c:	mov	r3, sl
   15160:	mov	r2, r9
   15164:	mov	r1, r8
   15168:	str	r0, [r5, #4]
   1516c:	ldr	r5, [r4, #56]	; 0x38
   15170:	ldr	r4, [sp, #28]
   15174:	str	fp, [sp, #8]
   15178:	str	r4, [sp, #4]
   1517c:	str	lr, [sp, #16]
   15180:	str	r5, [sp, #12]
   15184:	str	ip, [sp]
   15188:	mov	r6, r0
   1518c:	bl	1169c <abort@plt+0x950>
   15190:	ldr	r3, [sp, #24]
   15194:	mov	r0, r6
   15198:	str	r3, [r7]
   1519c:	add	sp, sp, #44	; 0x2c
   151a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151a4:	mov	r3, #8
   151a8:	str	r3, [sp]
   151ac:	add	r1, sp, #36	; 0x24
   151b0:	rsb	r2, r2, #1
   151b4:	mvn	r3, #-2147483648	; 0x80000000
   151b8:	mov	r0, #0
   151bc:	bl	16194 <abort@plt+0x5448>
   151c0:	mov	r5, r0
   151c4:	ldm	r6, {r0, r1}
   151c8:	str	r5, [r4]
   151cc:	stm	r5, {r0, r1}
   151d0:	b	150b8 <abort@plt+0x436c>
   151d4:	ldrdeq	r8, [r2], -r0
   151d8:	andeq	r8, r2, r8, ror #1
   151dc:	andeq	r8, r2, r0, ror r1
   151e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151e4:	sub	sp, sp, #44	; 0x2c
   151e8:	mov	r5, r0
   151ec:	mov	sl, r1
   151f0:	bl	10cb0 <__errno_location@plt>
   151f4:	ldr	r4, [pc, #396]	; 15388 <abort@plt+0x463c>
   151f8:	cmn	r5, #-2147483647	; 0x80000001
   151fc:	ldr	r6, [r4]
   15200:	mov	r8, r0
   15204:	movne	r0, #0
   15208:	moveq	r0, #1
   1520c:	ldr	r3, [r8]
   15210:	orrs	r0, r0, r5, lsr #31
   15214:	str	r3, [sp, #24]
   15218:	bne	15384 <abort@plt+0x4638>
   1521c:	ldr	r2, [r4, #4]
   15220:	cmp	r5, r2
   15224:	blt	15284 <abort@plt+0x4538>
   15228:	add	r7, r4, #8
   1522c:	cmp	r6, r7
   15230:	str	r2, [sp, #36]	; 0x24
   15234:	beq	15354 <abort@plt+0x4608>
   15238:	mov	r3, #8
   1523c:	sub	r2, r5, r2
   15240:	mov	r0, r6
   15244:	str	r3, [sp]
   15248:	add	r2, r2, #1
   1524c:	mvn	r3, #-2147483648	; 0x80000000
   15250:	add	r1, sp, #36	; 0x24
   15254:	bl	16194 <abort@plt+0x5448>
   15258:	mov	r6, r0
   1525c:	str	r0, [r4]
   15260:	ldr	r0, [r4, #4]
   15264:	ldr	r2, [sp, #36]	; 0x24
   15268:	mov	r1, #0
   1526c:	sub	r2, r2, r0
   15270:	add	r0, r6, r0, lsl #3
   15274:	lsl	r2, r2, #3
   15278:	bl	10cc8 <memset@plt>
   1527c:	ldr	r3, [sp, #36]	; 0x24
   15280:	str	r3, [r4, #4]
   15284:	ldr	r2, [r4, #56]	; 0x38
   15288:	add	fp, r6, r5, lsl #3
   1528c:	ldr	r1, [r4, #20]
   15290:	ldr	r9, [r6, r5, lsl #3]
   15294:	ldr	r7, [fp, #4]
   15298:	ldr	r3, [r4, #16]
   1529c:	ldr	ip, [r4, #60]	; 0x3c
   152a0:	str	r2, [sp, #12]
   152a4:	ldr	r2, [pc, #224]	; 1538c <abort@plt+0x4640>
   152a8:	orr	r1, r1, #1
   152ac:	str	r1, [sp, #28]
   152b0:	str	r1, [sp, #4]
   152b4:	str	r2, [sp, #8]
   152b8:	str	r3, [sp]
   152bc:	mov	r0, r7
   152c0:	mov	r1, r9
   152c4:	str	ip, [sp, #16]
   152c8:	mvn	r3, #0
   152cc:	mov	r2, sl
   152d0:	bl	1169c <abort@plt+0x950>
   152d4:	cmp	r9, r0
   152d8:	bhi	15340 <abort@plt+0x45f4>
   152dc:	ldr	r3, [pc, #172]	; 15390 <abort@plt+0x4644>
   152e0:	add	r9, r0, #1
   152e4:	cmp	r7, r3
   152e8:	str	r9, [r6, r5, lsl #3]
   152ec:	beq	152f8 <abort@plt+0x45ac>
   152f0:	mov	r0, r7
   152f4:	bl	16824 <abort@plt+0x5ad8>
   152f8:	mov	r0, r9
   152fc:	bl	15f78 <abort@plt+0x522c>
   15300:	ldr	ip, [r4, #60]	; 0x3c
   15304:	ldr	r3, [r4, #16]
   15308:	ldr	lr, [r4, #56]	; 0x38
   1530c:	ldr	r4, [pc, #120]	; 1538c <abort@plt+0x4640>
   15310:	mov	r2, sl
   15314:	mov	r1, r9
   15318:	str	r0, [fp, #4]
   1531c:	str	r4, [sp, #8]
   15320:	ldr	r4, [sp, #28]
   15324:	str	r3, [sp]
   15328:	str	r4, [sp, #4]
   1532c:	str	ip, [sp, #16]
   15330:	str	lr, [sp, #12]
   15334:	mvn	r3, #0
   15338:	mov	r7, r0
   1533c:	bl	1169c <abort@plt+0x950>
   15340:	ldr	r3, [sp, #24]
   15344:	mov	r0, r7
   15348:	str	r3, [r8]
   1534c:	add	sp, sp, #44	; 0x2c
   15350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15354:	mov	r3, #8
   15358:	sub	r2, r5, r2
   1535c:	str	r3, [sp]
   15360:	add	r1, sp, #36	; 0x24
   15364:	add	r2, r2, #1
   15368:	mvn	r3, #-2147483648	; 0x80000000
   1536c:	bl	16194 <abort@plt+0x5448>
   15370:	mov	r6, r0
   15374:	ldm	r7, {r0, r1}
   15378:	str	r6, [r4]
   1537c:	stm	r6, {r0, r1}
   15380:	b	15260 <abort@plt+0x4514>
   15384:	bl	10d4c <abort@plt>
   15388:	ldrdeq	r8, [r2], -r0
   1538c:	andeq	r8, r2, r8, ror #1
   15390:	andeq	r8, r2, r0, ror r1
   15394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15398:	sub	sp, sp, #44	; 0x2c
   1539c:	mov	sl, r0
   153a0:	bl	10cb0 <__errno_location@plt>
   153a4:	ldr	r4, [pc, #348]	; 15508 <abort@plt+0x47bc>
   153a8:	ldr	r2, [r4, #4]
   153ac:	ldr	r5, [r4]
   153b0:	cmp	r2, #0
   153b4:	ldr	r3, [r0]
   153b8:	mov	r8, r0
   153bc:	str	r3, [sp, #28]
   153c0:	bgt	1541c <abort@plt+0x46d0>
   153c4:	add	r6, r4, #8
   153c8:	cmp	r5, r6
   153cc:	str	r2, [sp, #36]	; 0x24
   153d0:	beq	154d8 <abort@plt+0x478c>
   153d4:	mov	r3, #8
   153d8:	mov	r0, r5
   153dc:	str	r3, [sp]
   153e0:	rsb	r2, r2, #1
   153e4:	mvn	r3, #-2147483648	; 0x80000000
   153e8:	add	r1, sp, #36	; 0x24
   153ec:	bl	16194 <abort@plt+0x5448>
   153f0:	mov	r5, r0
   153f4:	str	r0, [r4]
   153f8:	ldr	r0, [r4, #4]
   153fc:	ldr	r2, [sp, #36]	; 0x24
   15400:	mov	r1, #0
   15404:	sub	r2, r2, r0
   15408:	add	r0, r5, r0, lsl #3
   1540c:	lsl	r2, r2, #3
   15410:	bl	10cc8 <memset@plt>
   15414:	ldr	r3, [sp, #36]	; 0x24
   15418:	str	r3, [r4, #4]
   1541c:	ldr	r7, [r4, #20]
   15420:	ldr	r9, [r5]
   15424:	ldr	r6, [r5, #4]
   15428:	ldr	r2, [r4, #56]	; 0x38
   1542c:	ldr	r3, [r4, #16]
   15430:	ldr	ip, [r4, #60]	; 0x3c
   15434:	ldr	fp, [pc, #208]	; 1550c <abort@plt+0x47c0>
   15438:	orr	r7, r7, #1
   1543c:	str	r2, [sp, #12]
   15440:	str	r3, [sp]
   15444:	str	r7, [sp, #4]
   15448:	mov	r1, r9
   1544c:	mov	r0, r6
   15450:	str	ip, [sp, #16]
   15454:	str	fp, [sp, #8]
   15458:	mvn	r3, #0
   1545c:	mov	r2, sl
   15460:	bl	1169c <abort@plt+0x950>
   15464:	cmp	r9, r0
   15468:	bhi	154c4 <abort@plt+0x4778>
   1546c:	ldr	r3, [pc, #156]	; 15510 <abort@plt+0x47c4>
   15470:	add	r9, r0, #1
   15474:	cmp	r6, r3
   15478:	str	r9, [r5]
   1547c:	beq	15488 <abort@plt+0x473c>
   15480:	mov	r0, r6
   15484:	bl	16824 <abort@plt+0x5ad8>
   15488:	mov	r0, r9
   1548c:	bl	15f78 <abort@plt+0x522c>
   15490:	ldr	ip, [r4, #60]	; 0x3c
   15494:	ldr	r3, [r4, #16]
   15498:	ldr	lr, [r4, #56]	; 0x38
   1549c:	mov	r2, sl
   154a0:	mov	r1, r9
   154a4:	str	r0, [r5, #4]
   154a8:	str	r3, [sp]
   154ac:	stmib	sp, {r7, fp}
   154b0:	str	ip, [sp, #16]
   154b4:	str	lr, [sp, #12]
   154b8:	mvn	r3, #0
   154bc:	mov	r6, r0
   154c0:	bl	1169c <abort@plt+0x950>
   154c4:	ldr	r3, [sp, #28]
   154c8:	mov	r0, r6
   154cc:	str	r3, [r8]
   154d0:	add	sp, sp, #44	; 0x2c
   154d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154d8:	mov	r3, #8
   154dc:	str	r3, [sp]
   154e0:	add	r1, sp, #36	; 0x24
   154e4:	rsb	r2, r2, #1
   154e8:	mvn	r3, #-2147483648	; 0x80000000
   154ec:	mov	r0, #0
   154f0:	bl	16194 <abort@plt+0x5448>
   154f4:	mov	r5, r0
   154f8:	ldm	r6, {r0, r1}
   154fc:	str	r5, [r4]
   15500:	stm	r5, {r0, r1}
   15504:	b	153f8 <abort@plt+0x46ac>
   15508:	ldrdeq	r8, [r2], -r0
   1550c:	andeq	r8, r2, r8, ror #1
   15510:	andeq	r8, r2, r0, ror r1
   15514:	push	{r4, r5, r6, lr}
   15518:	sub	sp, sp, #32
   1551c:	cmp	r1, #0
   15520:	mov	r4, r0
   15524:	ldr	r5, [sp, #48]	; 0x30
   15528:	ldr	r6, [sp, #52]	; 0x34
   1552c:	beq	15844 <abort@plt+0x4af8>
   15530:	stm	sp, {r2, r3}
   15534:	mov	r3, r1
   15538:	ldr	r2, [pc, #808]	; 15868 <abort@plt+0x4b1c>
   1553c:	mov	r1, #1
   15540:	bl	10cec <__fprintf_chk@plt>
   15544:	mov	r2, #5
   15548:	ldr	r1, [pc, #796]	; 1586c <abort@plt+0x4b20>
   1554c:	mov	r0, #0
   15550:	bl	10bcc <dcgettext@plt>
   15554:	ldr	r3, [pc, #788]	; 15870 <abort@plt+0x4b24>
   15558:	ldr	r2, [pc, #788]	; 15874 <abort@plt+0x4b28>
   1555c:	str	r3, [sp]
   15560:	mov	r1, #1
   15564:	mov	r3, r0
   15568:	mov	r0, r4
   1556c:	bl	10cec <__fprintf_chk@plt>
   15570:	mov	r1, r4
   15574:	mov	r0, #10
   15578:	bl	10bc0 <fputc_unlocked@plt>
   1557c:	mov	r2, #5
   15580:	ldr	r1, [pc, #752]	; 15878 <abort@plt+0x4b2c>
   15584:	mov	r0, #0
   15588:	bl	10bcc <dcgettext@plt>
   1558c:	mov	r1, #1
   15590:	ldr	r3, [pc, #740]	; 1587c <abort@plt+0x4b30>
   15594:	mov	r2, r0
   15598:	mov	r0, r4
   1559c:	bl	10cec <__fprintf_chk@plt>
   155a0:	mov	r1, r4
   155a4:	mov	r0, #10
   155a8:	bl	10bc0 <fputc_unlocked@plt>
   155ac:	cmp	r6, #9
   155b0:	ldrls	pc, [pc, r6, lsl #2]
   155b4:	b	1585c <abort@plt+0x4b10>
   155b8:	andeq	r5, r1, ip, lsr r6
   155bc:	andeq	r5, r1, r4, asr #12
   155c0:	andeq	r5, r1, r0, ror r6
   155c4:	andeq	r5, r1, r4, lsr #13
   155c8:	andeq	r5, r1, r0, ror #13
   155cc:	andeq	r5, r1, ip, lsl r7
   155d0:	andeq	r5, r1, r8, asr r7
   155d4:	muleq	r1, ip, r7
   155d8:	andeq	r5, r1, ip, ror #15
   155dc:	andeq	r5, r1, r0, ror #11
   155e0:	ldr	r1, [pc, #664]	; 15880 <abort@plt+0x4b34>
   155e4:	mov	r2, #5
   155e8:	mov	r0, #0
   155ec:	bl	10bcc <dcgettext@plt>
   155f0:	ldr	ip, [r5, #32]
   155f4:	ldr	r1, [r5, #28]
   155f8:	ldr	r2, [r5, #24]
   155fc:	ldr	r3, [r5]
   15600:	ldr	r6, [r5, #20]
   15604:	str	ip, [sp, #28]
   15608:	ldr	lr, [r5, #16]
   1560c:	str	r1, [sp, #24]
   15610:	ldr	ip, [r5, #12]
   15614:	str	r2, [sp, #20]
   15618:	ldr	r1, [r5, #8]
   1561c:	ldr	r2, [r5, #4]
   15620:	str	r6, [sp, #16]
   15624:	stmib	sp, {r1, ip, lr}
   15628:	mov	r1, #1
   1562c:	str	r2, [sp]
   15630:	mov	r2, r0
   15634:	mov	r0, r4
   15638:	bl	10cec <__fprintf_chk@plt>
   1563c:	add	sp, sp, #32
   15640:	pop	{r4, r5, r6, pc}
   15644:	mov	r2, #5
   15648:	ldr	r1, [pc, #564]	; 15884 <abort@plt+0x4b38>
   1564c:	mov	r0, #0
   15650:	bl	10bcc <dcgettext@plt>
   15654:	ldr	r3, [r5]
   15658:	mov	r1, #1
   1565c:	mov	r2, r0
   15660:	mov	r0, r4
   15664:	add	sp, sp, #32
   15668:	pop	{r4, r5, r6, lr}
   1566c:	b	10cec <__fprintf_chk@plt>
   15670:	mov	r2, #5
   15674:	ldr	r1, [pc, #524]	; 15888 <abort@plt+0x4b3c>
   15678:	mov	r0, #0
   1567c:	bl	10bcc <dcgettext@plt>
   15680:	ldr	r2, [r5, #4]
   15684:	ldr	r3, [r5]
   15688:	mov	r1, #1
   1568c:	str	r2, [sp, #48]	; 0x30
   15690:	mov	r2, r0
   15694:	mov	r0, r4
   15698:	add	sp, sp, #32
   1569c:	pop	{r4, r5, r6, lr}
   156a0:	b	10cec <__fprintf_chk@plt>
   156a4:	mov	r2, #5
   156a8:	ldr	r1, [pc, #476]	; 1588c <abort@plt+0x4b40>
   156ac:	mov	r0, #0
   156b0:	bl	10bcc <dcgettext@plt>
   156b4:	ldr	r1, [r5, #8]
   156b8:	ldr	r2, [r5, #4]
   156bc:	ldr	r3, [r5]
   156c0:	str	r1, [sp, #52]	; 0x34
   156c4:	str	r2, [sp, #48]	; 0x30
   156c8:	mov	r1, #1
   156cc:	mov	r2, r0
   156d0:	mov	r0, r4
   156d4:	add	sp, sp, #32
   156d8:	pop	{r4, r5, r6, lr}
   156dc:	b	10cec <__fprintf_chk@plt>
   156e0:	mov	r2, #5
   156e4:	ldr	r1, [pc, #420]	; 15890 <abort@plt+0x4b44>
   156e8:	mov	r0, #0
   156ec:	bl	10bcc <dcgettext@plt>
   156f0:	ldr	r1, [r5, #8]
   156f4:	ldr	ip, [r5, #12]
   156f8:	ldr	r2, [r5, #4]
   156fc:	ldr	r3, [r5]
   15700:	stmib	sp, {r1, ip}
   15704:	str	r2, [sp]
   15708:	mov	r1, #1
   1570c:	mov	r2, r0
   15710:	mov	r0, r4
   15714:	bl	10cec <__fprintf_chk@plt>
   15718:	b	1563c <abort@plt+0x48f0>
   1571c:	mov	r2, #5
   15720:	ldr	r1, [pc, #364]	; 15894 <abort@plt+0x4b48>
   15724:	mov	r0, #0
   15728:	bl	10bcc <dcgettext@plt>
   1572c:	add	r1, r5, #8
   15730:	ldr	r2, [r5, #4]
   15734:	ldm	r1, {r1, ip, lr}
   15738:	ldr	r3, [r5]
   1573c:	str	r2, [sp]
   15740:	stmib	sp, {r1, ip, lr}
   15744:	mov	r1, #1
   15748:	mov	r2, r0
   1574c:	mov	r0, r4
   15750:	bl	10cec <__fprintf_chk@plt>
   15754:	b	1563c <abort@plt+0x48f0>
   15758:	mov	r2, #5
   1575c:	ldr	r1, [pc, #308]	; 15898 <abort@plt+0x4b4c>
   15760:	mov	r0, #0
   15764:	bl	10bcc <dcgettext@plt>
   15768:	add	r1, r5, #8
   1576c:	ldr	r2, [r5, #4]
   15770:	ldm	r1, {r1, ip, lr}
   15774:	ldr	r6, [r5, #20]
   15778:	ldr	r3, [r5]
   1577c:	stmib	sp, {r1, ip, lr}
   15780:	mov	r1, #1
   15784:	str	r2, [sp]
   15788:	str	r6, [sp, #16]
   1578c:	mov	r2, r0
   15790:	mov	r0, r4
   15794:	bl	10cec <__fprintf_chk@plt>
   15798:	b	1563c <abort@plt+0x48f0>
   1579c:	mov	r2, #5
   157a0:	ldr	r1, [pc, #244]	; 1589c <abort@plt+0x4b50>
   157a4:	mov	r0, #0
   157a8:	bl	10bcc <dcgettext@plt>
   157ac:	ldr	r2, [r5, #24]
   157b0:	ldr	r3, [r5]
   157b4:	ldr	r6, [r5, #20]
   157b8:	ldr	lr, [r5, #16]
   157bc:	ldr	ip, [r5, #12]
   157c0:	str	r2, [sp, #20]
   157c4:	ldr	r1, [r5, #8]
   157c8:	ldr	r2, [r5, #4]
   157cc:	str	r6, [sp, #16]
   157d0:	stmib	sp, {r1, ip, lr}
   157d4:	mov	r1, #1
   157d8:	str	r2, [sp]
   157dc:	mov	r2, r0
   157e0:	mov	r0, r4
   157e4:	bl	10cec <__fprintf_chk@plt>
   157e8:	b	1563c <abort@plt+0x48f0>
   157ec:	mov	r2, #5
   157f0:	ldr	r1, [pc, #168]	; 158a0 <abort@plt+0x4b54>
   157f4:	mov	r0, #0
   157f8:	bl	10bcc <dcgettext@plt>
   157fc:	ldr	r1, [r5, #28]
   15800:	ldr	r2, [r5, #24]
   15804:	ldr	r3, [r5]
   15808:	ldr	r6, [r5, #20]
   1580c:	ldr	lr, [r5, #16]
   15810:	str	r1, [sp, #24]
   15814:	ldr	ip, [r5, #12]
   15818:	str	r2, [sp, #20]
   1581c:	ldr	r1, [r5, #8]
   15820:	ldr	r2, [r5, #4]
   15824:	str	r6, [sp, #16]
   15828:	stmib	sp, {r1, ip, lr}
   1582c:	mov	r1, #1
   15830:	str	r2, [sp]
   15834:	mov	r2, r0
   15838:	mov	r0, r4
   1583c:	bl	10cec <__fprintf_chk@plt>
   15840:	b	1563c <abort@plt+0x48f0>
   15844:	str	r3, [sp]
   15848:	mov	r1, #1
   1584c:	mov	r3, r2
   15850:	ldr	r2, [pc, #76]	; 158a4 <abort@plt+0x4b58>
   15854:	bl	10cec <__fprintf_chk@plt>
   15858:	b	15544 <abort@plt+0x47f8>
   1585c:	mov	r2, #5
   15860:	ldr	r1, [pc, #64]	; 158a8 <abort@plt+0x4b5c>
   15864:	b	155e8 <abort@plt+0x489c>
   15868:	andeq	r7, r1, r0, lsl #11
   1586c:	muleq	r1, r4, r5
   15870:	andeq	r0, r0, r6, ror #15
   15874:	andeq	r7, r1, ip, ror #16
   15878:	muleq	r1, r8, r5
   1587c:	andeq	r7, r1, r4, asr #12
   15880:	andeq	r7, r1, r4, ror r7
   15884:	andeq	r7, r1, r8, ror #12
   15888:	andeq	r7, r1, r8, ror r6
   1588c:	muleq	r1, r0, r6
   15890:	andeq	r7, r1, ip, lsr #13
   15894:	andeq	r7, r1, ip, asr #13
   15898:	strdeq	r7, [r1], -r0
   1589c:	andeq	r7, r1, r8, lsl r7
   158a0:	andeq	r7, r1, r4, asr #14
   158a4:	andeq	r7, r1, ip, lsl #11
   158a8:	andeq	r7, r1, r8, lsr #15
   158ac:	push	{r4, r5, lr}
   158b0:	sub	sp, sp, #12
   158b4:	ldr	r5, [sp, #24]
   158b8:	ldr	ip, [r5]
   158bc:	cmp	ip, #0
   158c0:	beq	158dc <abort@plt+0x4b90>
   158c4:	mov	lr, r5
   158c8:	mov	ip, #0
   158cc:	ldr	r4, [lr, #4]!
   158d0:	add	ip, ip, #1
   158d4:	cmp	r4, #0
   158d8:	bne	158cc <abort@plt+0x4b80>
   158dc:	stm	sp, {r5, ip}
   158e0:	bl	15514 <abort@plt+0x47c8>
   158e4:	add	sp, sp, #12
   158e8:	pop	{r4, r5, pc}
   158ec:	push	{r4, r5, lr}
   158f0:	sub	sp, sp, #76	; 0x4c
   158f4:	mov	r5, r0
   158f8:	ldr	ip, [sp, #88]	; 0x58
   158fc:	ldr	r0, [ip]
   15900:	cmp	r0, #0
   15904:	str	r0, [sp, #32]
   15908:	beq	15cdc <abort@plt+0x4f90>
   1590c:	ldr	r0, [ip, #4]
   15910:	cmp	r0, #0
   15914:	str	r0, [sp, #36]	; 0x24
   15918:	beq	15ce4 <abort@plt+0x4f98>
   1591c:	ldr	r0, [ip, #8]
   15920:	cmp	r0, #0
   15924:	str	r0, [sp, #40]	; 0x28
   15928:	beq	15cec <abort@plt+0x4fa0>
   1592c:	ldr	r0, [ip, #12]
   15930:	cmp	r0, #0
   15934:	str	r0, [sp, #44]	; 0x2c
   15938:	beq	15cf4 <abort@plt+0x4fa8>
   1593c:	ldr	r0, [ip, #16]
   15940:	cmp	r0, #0
   15944:	str	r0, [sp, #48]	; 0x30
   15948:	beq	15cfc <abort@plt+0x4fb0>
   1594c:	ldr	r0, [ip, #20]
   15950:	cmp	r0, #0
   15954:	str	r0, [sp, #52]	; 0x34
   15958:	beq	15d04 <abort@plt+0x4fb8>
   1595c:	ldr	r0, [ip, #24]
   15960:	cmp	r0, #0
   15964:	str	r0, [sp, #56]	; 0x38
   15968:	beq	15d0c <abort@plt+0x4fc0>
   1596c:	ldr	r0, [ip, #28]
   15970:	cmp	r0, #0
   15974:	str	r0, [sp, #60]	; 0x3c
   15978:	beq	15d14 <abort@plt+0x4fc8>
   1597c:	ldr	r0, [ip, #32]
   15980:	cmp	r0, #0
   15984:	str	r0, [sp, #64]	; 0x40
   15988:	beq	15d1c <abort@plt+0x4fd0>
   1598c:	ldr	r0, [ip, #36]	; 0x24
   15990:	cmp	r0, #0
   15994:	movne	r4, #10
   15998:	moveq	r4, #9
   1599c:	cmp	r1, #0
   159a0:	beq	15cb4 <abort@plt+0x4f68>
   159a4:	stm	sp, {r2, r3}
   159a8:	mov	r0, r5
   159ac:	mov	r3, r1
   159b0:	ldr	r2, [pc, #876]	; 15d24 <abort@plt+0x4fd8>
   159b4:	mov	r1, #1
   159b8:	bl	10cec <__fprintf_chk@plt>
   159bc:	mov	r2, #5
   159c0:	ldr	r1, [pc, #864]	; 15d28 <abort@plt+0x4fdc>
   159c4:	mov	r0, #0
   159c8:	bl	10bcc <dcgettext@plt>
   159cc:	ldr	r3, [pc, #856]	; 15d2c <abort@plt+0x4fe0>
   159d0:	ldr	r2, [pc, #856]	; 15d30 <abort@plt+0x4fe4>
   159d4:	str	r3, [sp]
   159d8:	mov	r1, #1
   159dc:	mov	r3, r0
   159e0:	mov	r0, r5
   159e4:	bl	10cec <__fprintf_chk@plt>
   159e8:	mov	r1, r5
   159ec:	mov	r0, #10
   159f0:	bl	10bc0 <fputc_unlocked@plt>
   159f4:	mov	r2, #5
   159f8:	ldr	r1, [pc, #820]	; 15d34 <abort@plt+0x4fe8>
   159fc:	mov	r0, #0
   15a00:	bl	10bcc <dcgettext@plt>
   15a04:	mov	r1, #1
   15a08:	ldr	r3, [pc, #808]	; 15d38 <abort@plt+0x4fec>
   15a0c:	mov	r2, r0
   15a10:	mov	r0, r5
   15a14:	bl	10cec <__fprintf_chk@plt>
   15a18:	mov	r1, r5
   15a1c:	mov	r0, #10
   15a20:	bl	10bc0 <fputc_unlocked@plt>
   15a24:	cmp	r4, #9
   15a28:	ldrls	pc, [pc, r4, lsl #2]
   15a2c:	b	15cd0 <abort@plt+0x4f84>
   15a30:			; <UNDEFINED> instruction: 0x00015ab4
   15a34:			; <UNDEFINED> instruction: 0x00015abc
   15a38:	andeq	r5, r1, r8, ror #21
   15a3c:	andeq	r5, r1, ip, lsl fp
   15a40:	andeq	r5, r1, r4, asr fp
   15a44:	muleq	r1, r0, fp
   15a48:	andeq	r5, r1, ip, asr #23
   15a4c:	andeq	r5, r1, r0, lsl ip
   15a50:	andeq	r5, r1, ip, asr ip
   15a54:	andeq	r5, r1, r8, asr sl
   15a58:	ldr	r1, [pc, #732]	; 15d3c <abort@plt+0x4ff0>
   15a5c:	mov	r2, #5
   15a60:	mov	r0, #0
   15a64:	bl	10bcc <dcgettext@plt>
   15a68:	ldr	ip, [sp, #64]	; 0x40
   15a6c:	ldr	r1, [sp, #60]	; 0x3c
   15a70:	ldr	r2, [sp, #56]	; 0x38
   15a74:	ldr	lr, [sp, #48]	; 0x30
   15a78:	str	ip, [sp, #28]
   15a7c:	str	r1, [sp, #24]
   15a80:	ldr	ip, [sp, #44]	; 0x2c
   15a84:	ldr	r1, [sp, #40]	; 0x28
   15a88:	ldr	r4, [sp, #52]	; 0x34
   15a8c:	str	r2, [sp, #20]
   15a90:	ldr	r2, [sp, #36]	; 0x24
   15a94:	stmib	sp, {r1, ip, lr}
   15a98:	mov	r1, #1
   15a9c:	str	r2, [sp]
   15aa0:	ldr	r3, [sp, #32]
   15aa4:	str	r4, [sp, #16]
   15aa8:	mov	r2, r0
   15aac:	mov	r0, r5
   15ab0:	bl	10cec <__fprintf_chk@plt>
   15ab4:	add	sp, sp, #76	; 0x4c
   15ab8:	pop	{r4, r5, pc}
   15abc:	mov	r2, #5
   15ac0:	ldr	r1, [pc, #632]	; 15d40 <abort@plt+0x4ff4>
   15ac4:	mov	r0, #0
   15ac8:	bl	10bcc <dcgettext@plt>
   15acc:	ldr	r3, [sp, #32]
   15ad0:	mov	r1, #1
   15ad4:	mov	r2, r0
   15ad8:	mov	r0, r5
   15adc:	add	sp, sp, #76	; 0x4c
   15ae0:	pop	{r4, r5, lr}
   15ae4:	b	10cec <__fprintf_chk@plt>
   15ae8:	mov	r2, #5
   15aec:	ldr	r1, [pc, #592]	; 15d44 <abort@plt+0x4ff8>
   15af0:	mov	r0, #0
   15af4:	bl	10bcc <dcgettext@plt>
   15af8:	ldr	r2, [sp, #36]	; 0x24
   15afc:	ldr	r3, [sp, #32]
   15b00:	str	r2, [sp, #88]	; 0x58
   15b04:	mov	r1, #1
   15b08:	mov	r2, r0
   15b0c:	mov	r0, r5
   15b10:	add	sp, sp, #76	; 0x4c
   15b14:	pop	{r4, r5, lr}
   15b18:	b	10cec <__fprintf_chk@plt>
   15b1c:	mov	r2, #5
   15b20:	ldr	r1, [pc, #544]	; 15d48 <abort@plt+0x4ffc>
   15b24:	mov	r0, #0
   15b28:	bl	10bcc <dcgettext@plt>
   15b2c:	ldr	r1, [sp, #40]	; 0x28
   15b30:	ldr	r2, [sp, #36]	; 0x24
   15b34:	str	r1, [sp, #4]
   15b38:	str	r2, [sp]
   15b3c:	ldr	r3, [sp, #32]
   15b40:	mov	r1, #1
   15b44:	mov	r2, r0
   15b48:	mov	r0, r5
   15b4c:	bl	10cec <__fprintf_chk@plt>
   15b50:	b	15ab4 <abort@plt+0x4d68>
   15b54:	mov	r2, #5
   15b58:	ldr	r1, [pc, #492]	; 15d4c <abort@plt+0x5000>
   15b5c:	mov	r0, #0
   15b60:	bl	10bcc <dcgettext@plt>
   15b64:	ldr	r1, [sp, #40]	; 0x28
   15b68:	ldr	ip, [sp, #44]	; 0x2c
   15b6c:	ldr	r2, [sp, #36]	; 0x24
   15b70:	ldr	r3, [sp, #32]
   15b74:	stmib	sp, {r1, ip}
   15b78:	str	r2, [sp]
   15b7c:	mov	r1, #1
   15b80:	mov	r2, r0
   15b84:	mov	r0, r5
   15b88:	bl	10cec <__fprintf_chk@plt>
   15b8c:	b	15ab4 <abort@plt+0x4d68>
   15b90:	mov	r2, #5
   15b94:	ldr	r1, [pc, #436]	; 15d50 <abort@plt+0x5004>
   15b98:	mov	r0, #0
   15b9c:	bl	10bcc <dcgettext@plt>
   15ba0:	add	r1, sp, #40	; 0x28
   15ba4:	ldr	r2, [sp, #36]	; 0x24
   15ba8:	ldm	r1, {r1, ip, lr}
   15bac:	ldr	r3, [sp, #32]
   15bb0:	str	r2, [sp]
   15bb4:	stmib	sp, {r1, ip, lr}
   15bb8:	mov	r1, #1
   15bbc:	mov	r2, r0
   15bc0:	mov	r0, r5
   15bc4:	bl	10cec <__fprintf_chk@plt>
   15bc8:	b	15ab4 <abort@plt+0x4d68>
   15bcc:	mov	r2, #5
   15bd0:	ldr	r1, [pc, #380]	; 15d54 <abort@plt+0x5008>
   15bd4:	mov	r0, #0
   15bd8:	bl	10bcc <dcgettext@plt>
   15bdc:	add	r1, sp, #40	; 0x28
   15be0:	ldr	r2, [sp, #36]	; 0x24
   15be4:	ldm	r1, {r1, ip, lr}
   15be8:	ldr	r4, [sp, #52]	; 0x34
   15bec:	str	r2, [sp]
   15bf0:	stmib	sp, {r1, ip, lr}
   15bf4:	mov	r1, #1
   15bf8:	ldr	r3, [sp, #32]
   15bfc:	str	r4, [sp, #16]
   15c00:	mov	r2, r0
   15c04:	mov	r0, r5
   15c08:	bl	10cec <__fprintf_chk@plt>
   15c0c:	b	15ab4 <abort@plt+0x4d68>
   15c10:	mov	r2, #5
   15c14:	ldr	r1, [pc, #316]	; 15d58 <abort@plt+0x500c>
   15c18:	mov	r0, #0
   15c1c:	bl	10bcc <dcgettext@plt>
   15c20:	add	r1, sp, #40	; 0x28
   15c24:	ldr	r2, [sp, #56]	; 0x38
   15c28:	ldm	r1, {r1, ip, lr}
   15c2c:	ldr	r4, [sp, #52]	; 0x34
   15c30:	str	r2, [sp, #20]
   15c34:	ldr	r2, [sp, #36]	; 0x24
   15c38:	stmib	sp, {r1, ip, lr}
   15c3c:	mov	r1, #1
   15c40:	str	r2, [sp]
   15c44:	ldr	r3, [sp, #32]
   15c48:	str	r4, [sp, #16]
   15c4c:	mov	r2, r0
   15c50:	mov	r0, r5
   15c54:	bl	10cec <__fprintf_chk@plt>
   15c58:	b	15ab4 <abort@plt+0x4d68>
   15c5c:	mov	r2, #5
   15c60:	ldr	r1, [pc, #244]	; 15d5c <abort@plt+0x5010>
   15c64:	mov	r0, #0
   15c68:	bl	10bcc <dcgettext@plt>
   15c6c:	ldr	r1, [sp, #60]	; 0x3c
   15c70:	ldr	r2, [sp, #56]	; 0x38
   15c74:	ldr	lr, [sp, #48]	; 0x30
   15c78:	ldr	ip, [sp, #44]	; 0x2c
   15c7c:	str	r1, [sp, #24]
   15c80:	ldr	r1, [sp, #40]	; 0x28
   15c84:	ldr	r4, [sp, #52]	; 0x34
   15c88:	str	r2, [sp, #20]
   15c8c:	ldr	r2, [sp, #36]	; 0x24
   15c90:	stmib	sp, {r1, ip, lr}
   15c94:	mov	r1, #1
   15c98:	str	r2, [sp]
   15c9c:	ldr	r3, [sp, #32]
   15ca0:	str	r4, [sp, #16]
   15ca4:	mov	r2, r0
   15ca8:	mov	r0, r5
   15cac:	bl	10cec <__fprintf_chk@plt>
   15cb0:	b	15ab4 <abort@plt+0x4d68>
   15cb4:	str	r3, [sp]
   15cb8:	mov	r1, #1
   15cbc:	mov	r3, r2
   15cc0:	mov	r0, r5
   15cc4:	ldr	r2, [pc, #148]	; 15d60 <abort@plt+0x5014>
   15cc8:	bl	10cec <__fprintf_chk@plt>
   15ccc:	b	159bc <abort@plt+0x4c70>
   15cd0:	mov	r2, #5
   15cd4:	ldr	r1, [pc, #136]	; 15d64 <abort@plt+0x5018>
   15cd8:	b	15a60 <abort@plt+0x4d14>
   15cdc:	mov	r4, r0
   15ce0:	b	1599c <abort@plt+0x4c50>
   15ce4:	mov	r4, #1
   15ce8:	b	1599c <abort@plt+0x4c50>
   15cec:	mov	r4, #2
   15cf0:	b	1599c <abort@plt+0x4c50>
   15cf4:	mov	r4, #3
   15cf8:	b	1599c <abort@plt+0x4c50>
   15cfc:	mov	r4, #4
   15d00:	b	1599c <abort@plt+0x4c50>
   15d04:	mov	r4, #5
   15d08:	b	1599c <abort@plt+0x4c50>
   15d0c:	mov	r4, #6
   15d10:	b	1599c <abort@plt+0x4c50>
   15d14:	mov	r4, #7
   15d18:	b	1599c <abort@plt+0x4c50>
   15d1c:	mov	r4, #8
   15d20:	b	1599c <abort@plt+0x4c50>
   15d24:	andeq	r7, r1, r0, lsl #11
   15d28:	muleq	r1, r4, r5
   15d2c:	andeq	r0, r0, r6, ror #15
   15d30:	andeq	r7, r1, ip, ror #16
   15d34:	muleq	r1, r8, r5
   15d38:	andeq	r7, r1, r4, asr #12
   15d3c:	andeq	r7, r1, r4, ror r7
   15d40:	andeq	r7, r1, r8, ror #12
   15d44:	andeq	r7, r1, r8, ror r6
   15d48:	muleq	r1, r0, r6
   15d4c:	andeq	r7, r1, ip, lsr #13
   15d50:	andeq	r7, r1, ip, asr #13
   15d54:	strdeq	r7, [r1], -r0
   15d58:	andeq	r7, r1, r8, lsl r7
   15d5c:	andeq	r7, r1, r4, asr #14
   15d60:	andeq	r7, r1, ip, lsl #11
   15d64:	andeq	r7, r1, r8, lsr #15
   15d68:	push	{r3}		; (str r3, [sp, #-4]!)
   15d6c:	push	{lr}		; (str lr, [sp, #-4]!)
   15d70:	sub	sp, sp, #56	; 0x38
   15d74:	add	r3, sp, #64	; 0x40
   15d78:	ldr	ip, [sp, #64]	; 0x40
   15d7c:	str	r3, [sp, #12]
   15d80:	cmp	ip, #0
   15d84:	str	ip, [sp, #16]
   15d88:	beq	15e20 <abort@plt+0x50d4>
   15d8c:	ldr	ip, [sp, #68]	; 0x44
   15d90:	cmp	ip, #0
   15d94:	str	ip, [sp, #20]
   15d98:	beq	15e40 <abort@plt+0x50f4>
   15d9c:	ldr	ip, [sp, #72]	; 0x48
   15da0:	cmp	ip, #0
   15da4:	str	ip, [sp, #24]
   15da8:	beq	15e48 <abort@plt+0x50fc>
   15dac:	ldr	ip, [sp, #76]	; 0x4c
   15db0:	cmp	ip, #0
   15db4:	str	ip, [sp, #28]
   15db8:	beq	15e50 <abort@plt+0x5104>
   15dbc:	ldr	ip, [sp, #80]	; 0x50
   15dc0:	cmp	ip, #0
   15dc4:	str	ip, [sp, #32]
   15dc8:	beq	15e58 <abort@plt+0x510c>
   15dcc:	ldr	ip, [sp, #84]	; 0x54
   15dd0:	cmp	ip, #0
   15dd4:	str	ip, [sp, #36]	; 0x24
   15dd8:	beq	15e60 <abort@plt+0x5114>
   15ddc:	ldr	ip, [sp, #88]	; 0x58
   15de0:	cmp	ip, #0
   15de4:	str	ip, [sp, #40]	; 0x28
   15de8:	beq	15e68 <abort@plt+0x511c>
   15dec:	ldr	ip, [sp, #92]	; 0x5c
   15df0:	cmp	ip, #0
   15df4:	str	ip, [sp, #44]	; 0x2c
   15df8:	beq	15e70 <abort@plt+0x5124>
   15dfc:	ldr	ip, [sp, #96]	; 0x60
   15e00:	cmp	ip, #0
   15e04:	str	ip, [sp, #48]	; 0x30
   15e08:	beq	15e78 <abort@plt+0x512c>
   15e0c:	ldr	ip, [sp, #100]	; 0x64
   15e10:	cmp	ip, #0
   15e14:	str	ip, [sp, #52]	; 0x34
   15e18:	movne	ip, #10
   15e1c:	moveq	ip, #9
   15e20:	add	r3, sp, #16
   15e24:	stm	sp, {r3, ip}
   15e28:	ldr	r3, [sp, #60]	; 0x3c
   15e2c:	bl	15514 <abort@plt+0x47c8>
   15e30:	add	sp, sp, #56	; 0x38
   15e34:	pop	{lr}		; (ldr lr, [sp], #4)
   15e38:	add	sp, sp, #4
   15e3c:	bx	lr
   15e40:	mov	ip, #1
   15e44:	b	15e20 <abort@plt+0x50d4>
   15e48:	mov	ip, #2
   15e4c:	b	15e20 <abort@plt+0x50d4>
   15e50:	mov	ip, #3
   15e54:	b	15e20 <abort@plt+0x50d4>
   15e58:	mov	ip, #4
   15e5c:	b	15e20 <abort@plt+0x50d4>
   15e60:	mov	ip, #5
   15e64:	b	15e20 <abort@plt+0x50d4>
   15e68:	mov	ip, #6
   15e6c:	b	15e20 <abort@plt+0x50d4>
   15e70:	mov	ip, #7
   15e74:	b	15e20 <abort@plt+0x50d4>
   15e78:	mov	ip, #8
   15e7c:	b	15e20 <abort@plt+0x50d4>
   15e80:	ldr	r3, [pc, #116]	; 15efc <abort@plt+0x51b0>
   15e84:	push	{r4, lr}
   15e88:	mov	r0, #10
   15e8c:	ldr	r1, [r3]
   15e90:	bl	10bc0 <fputc_unlocked@plt>
   15e94:	mov	r2, #5
   15e98:	ldr	r1, [pc, #96]	; 15f00 <abort@plt+0x51b4>
   15e9c:	mov	r0, #0
   15ea0:	bl	10bcc <dcgettext@plt>
   15ea4:	ldr	r2, [pc, #88]	; 15f04 <abort@plt+0x51b8>
   15ea8:	mov	r1, r0
   15eac:	mov	r0, #1
   15eb0:	bl	10cd4 <__printf_chk@plt>
   15eb4:	mov	r2, #5
   15eb8:	ldr	r1, [pc, #72]	; 15f08 <abort@plt+0x51bc>
   15ebc:	mov	r0, #0
   15ec0:	bl	10bcc <dcgettext@plt>
   15ec4:	ldr	r3, [pc, #64]	; 15f0c <abort@plt+0x51c0>
   15ec8:	ldr	r2, [pc, #64]	; 15f10 <abort@plt+0x51c4>
   15ecc:	mov	r1, r0
   15ed0:	mov	r0, #1
   15ed4:	bl	10cd4 <__printf_chk@plt>
   15ed8:	mov	r2, #5
   15edc:	ldr	r1, [pc, #48]	; 15f14 <abort@plt+0x51c8>
   15ee0:	mov	r0, #0
   15ee4:	bl	10bcc <dcgettext@plt>
   15ee8:	ldr	r2, [pc, #40]	; 15f18 <abort@plt+0x51cc>
   15eec:	pop	{r4, lr}
   15ef0:	mov	r1, r0
   15ef4:	mov	r0, #1
   15ef8:	b	10cd4 <__printf_chk@plt>
   15efc:	andeq	r8, r2, ip, lsr #2
   15f00:	andeq	r7, r1, r4, ror #15
   15f04:	strdeq	r7, [r1], -r8
   15f08:	andeq	r7, r1, r0, lsl r8
   15f0c:	muleq	r1, ip, r2
   15f10:	andeq	r7, r1, r4, asr #5
   15f14:	andeq	r7, r1, r4, lsr #16
   15f18:	andeq	r7, r1, ip, asr #16
   15f1c:	push	{r4, r5, r6, lr}
   15f20:	mov	r6, r0
   15f24:	mov	r5, r1
   15f28:	mov	r4, r2
   15f2c:	bl	169a4 <abort@plt+0x5c58>
   15f30:	cmp	r0, #0
   15f34:	popne	{r4, r5, r6, pc}
   15f38:	cmp	r6, #0
   15f3c:	beq	15f4c <abort@plt+0x5200>
   15f40:	cmp	r5, #0
   15f44:	cmpne	r4, #0
   15f48:	popeq	{r4, r5, r6, pc}
   15f4c:	bl	16598 <abort@plt+0x584c>
   15f50:	push	{r4, lr}
   15f54:	bl	16620 <abort@plt+0x58d4>
   15f58:	cmp	r0, #0
   15f5c:	popne	{r4, pc}
   15f60:	bl	16598 <abort@plt+0x584c>
   15f64:	push	{r4, lr}
   15f68:	bl	16620 <abort@plt+0x58d4>
   15f6c:	cmp	r0, #0
   15f70:	popne	{r4, pc}
   15f74:	bl	16598 <abort@plt+0x584c>
   15f78:	push	{r4, lr}
   15f7c:	bl	16620 <abort@plt+0x58d4>
   15f80:	cmp	r0, #0
   15f84:	popne	{r4, pc}
   15f88:	bl	16598 <abort@plt+0x584c>
   15f8c:	push	{r4, r5, r6, lr}
   15f90:	mov	r5, r0
   15f94:	mov	r4, r1
   15f98:	bl	1664c <abort@plt+0x5900>
   15f9c:	cmp	r0, #0
   15fa0:	popne	{r4, r5, r6, pc}
   15fa4:	adds	r4, r4, #0
   15fa8:	movne	r4, #1
   15fac:	cmp	r5, #0
   15fb0:	orreq	r4, r4, #1
   15fb4:	cmp	r4, #0
   15fb8:	popeq	{r4, r5, r6, pc}
   15fbc:	bl	16598 <abort@plt+0x584c>
   15fc0:	push	{r4, lr}
   15fc4:	cmp	r1, #0
   15fc8:	orreq	r1, r1, #1
   15fcc:	bl	1664c <abort@plt+0x5900>
   15fd0:	cmp	r0, #0
   15fd4:	popne	{r4, pc}
   15fd8:	bl	16598 <abort@plt+0x584c>
   15fdc:	push	{r4, r5, r6, lr}
   15fe0:	mov	r6, r0
   15fe4:	mov	r5, r1
   15fe8:	mov	r4, r2
   15fec:	bl	169a4 <abort@plt+0x5c58>
   15ff0:	cmp	r0, #0
   15ff4:	popne	{r4, r5, r6, pc}
   15ff8:	cmp	r6, #0
   15ffc:	beq	1600c <abort@plt+0x52c0>
   16000:	cmp	r5, #0
   16004:	cmpne	r4, #0
   16008:	popeq	{r4, r5, r6, pc}
   1600c:	bl	16598 <abort@plt+0x584c>
   16010:	cmp	r2, #0
   16014:	cmpne	r1, #0
   16018:	moveq	r2, #1
   1601c:	moveq	r1, r2
   16020:	push	{r4, lr}
   16024:	bl	169a4 <abort@plt+0x5c58>
   16028:	cmp	r0, #0
   1602c:	popne	{r4, pc}
   16030:	bl	16598 <abort@plt+0x584c>
   16034:	push	{r4, lr}
   16038:	mov	r2, r1
   1603c:	mov	r1, r0
   16040:	mov	r0, #0
   16044:	bl	169a4 <abort@plt+0x5c58>
   16048:	cmp	r0, #0
   1604c:	popne	{r4, pc}
   16050:	bl	16598 <abort@plt+0x584c>
   16054:	cmp	r1, #0
   16058:	cmpne	r0, #0
   1605c:	moveq	r2, #1
   16060:	movne	r2, r1
   16064:	moveq	r1, r2
   16068:	movne	r1, r0
   1606c:	push	{r4, lr}
   16070:	mov	r0, #0
   16074:	bl	169a4 <abort@plt+0x5c58>
   16078:	cmp	r0, #0
   1607c:	popne	{r4, pc}
   16080:	bl	16598 <abort@plt+0x584c>
   16084:	cmp	r0, #0
   16088:	push	{r4, r5, r6, lr}
   1608c:	mov	r5, r1
   16090:	ldr	r4, [r1]
   16094:	beq	160d0 <abort@plt+0x5384>
   16098:	lsr	r2, r4, #1
   1609c:	add	r3, r2, #1
   160a0:	mvn	r3, r3
   160a4:	cmp	r4, r3
   160a8:	bhi	160ec <abort@plt+0x53a0>
   160ac:	add	r4, r4, #1
   160b0:	add	r4, r4, r2
   160b4:	mov	r1, r4
   160b8:	mov	r2, #1
   160bc:	bl	169a4 <abort@plt+0x5c58>
   160c0:	cmp	r0, #0
   160c4:	beq	160f0 <abort@plt+0x53a4>
   160c8:	str	r4, [r5]
   160cc:	pop	{r4, r5, r6, pc}
   160d0:	cmp	r4, #0
   160d4:	moveq	r4, #64	; 0x40
   160d8:	mov	r1, r4
   160dc:	mov	r2, #1
   160e0:	bl	169a4 <abort@plt+0x5c58>
   160e4:	cmp	r0, #0
   160e8:	bne	160c8 <abort@plt+0x537c>
   160ec:	bl	16598 <abort@plt+0x584c>
   160f0:	cmp	r4, #0
   160f4:	bne	160ec <abort@plt+0x53a0>
   160f8:	str	r4, [r5]
   160fc:	pop	{r4, r5, r6, pc}
   16100:	cmp	r0, #0
   16104:	push	{r4, r5, r6, lr}
   16108:	mov	r5, r1
   1610c:	ldr	r4, [r1]
   16110:	mov	r6, r2
   16114:	beq	16158 <abort@plt+0x540c>
   16118:	lsr	r1, r4, #1
   1611c:	add	r3, r1, #1
   16120:	mvn	r3, r3
   16124:	cmp	r4, r3
   16128:	bhi	16190 <abort@plt+0x5444>
   1612c:	add	r4, r4, #1
   16130:	add	r4, r4, r1
   16134:	mov	r1, r4
   16138:	bl	169a4 <abort@plt+0x5c58>
   1613c:	cmp	r0, #0
   16140:	bne	16150 <abort@plt+0x5404>
   16144:	cmp	r4, #0
   16148:	cmpne	r6, #0
   1614c:	bne	16190 <abort@plt+0x5444>
   16150:	str	r4, [r5]
   16154:	pop	{r4, r5, r6, pc}
   16158:	cmp	r4, #0
   1615c:	bne	16178 <abort@plt+0x542c>
   16160:	mov	r1, r2
   16164:	mov	r0, #64	; 0x40
   16168:	bl	16ae4 <abort@plt+0x5d98>
   1616c:	cmp	r0, #0
   16170:	movne	r4, r0
   16174:	addeq	r4, r0, #1
   16178:	mov	r2, r6
   1617c:	mov	r1, r4
   16180:	mov	r0, #0
   16184:	bl	169a4 <abort@plt+0x5c58>
   16188:	cmp	r0, #0
   1618c:	bne	16150 <abort@plt+0x5404>
   16190:	bl	16598 <abort@plt+0x584c>
   16194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16198:	sub	sp, sp, #12
   1619c:	ldr	r6, [r1]
   161a0:	mov	r8, r1
   161a4:	mov	r9, r0
   161a8:	asrs	r4, r6, #1
   161ac:	mov	sl, r2
   161b0:	mov	fp, r3
   161b4:	ldr	r7, [sp, #48]	; 0x30
   161b8:	bmi	16334 <abort@plt+0x55e8>
   161bc:	mvn	r1, #-2147483648	; 0x80000000
   161c0:	sub	r1, r1, r4
   161c4:	cmp	r6, r1
   161c8:	movle	r1, #0
   161cc:	movgt	r1, #1
   161d0:	mvn	r3, fp
   161d4:	cmp	r1, #0
   161d8:	addeq	r4, r4, r6
   161dc:	mvnne	r4, #-2147483648	; 0x80000000
   161e0:	lsr	r3, r3, #31
   161e4:	cmp	fp, r4
   161e8:	movge	r2, #0
   161ec:	andlt	r2, r3, #1
   161f0:	cmp	r2, #0
   161f4:	beq	162e4 <abort@plt+0x5598>
   161f8:	cmp	r7, #0
   161fc:	blt	163cc <abort@plt+0x5680>
   16200:	bne	163c4 <abort@plt+0x5678>
   16204:	mov	r5, #64	; 0x40
   16208:	mov	r1, r7
   1620c:	mov	r0, r5
   16210:	str	r3, [sp, #4]
   16214:	bl	16cf0 <abort@plt+0x5fa4>
   16218:	mov	r1, r7
   1621c:	mov	r4, r0
   16220:	mov	r0, r5
   16224:	bl	16f10 <abort@plt+0x61c4>
   16228:	ldr	r3, [sp, #4]
   1622c:	sub	r5, r5, r1
   16230:	cmp	r9, #0
   16234:	sub	r2, r4, r6
   16238:	streq	r9, [r8]
   1623c:	cmp	r2, sl
   16240:	bge	162c4 <abort@plt+0x5578>
   16244:	cmp	sl, #0
   16248:	blt	16364 <abort@plt+0x5618>
   1624c:	cmp	r6, #0
   16250:	blt	16270 <abort@plt+0x5524>
   16254:	mvn	r2, #-2147483648	; 0x80000000
   16258:	sub	r2, r2, sl
   1625c:	cmp	r6, r2
   16260:	movle	r2, #0
   16264:	movgt	r2, #1
   16268:	cmp	r2, #0
   1626c:	bne	16360 <abort@plt+0x5614>
   16270:	add	r6, r6, sl
   16274:	cmp	fp, r6
   16278:	movge	r3, #0
   1627c:	andlt	r3, r3, #1
   16280:	cmp	r3, #0
   16284:	mov	r4, r6
   16288:	bne	16360 <abort@plt+0x5614>
   1628c:	cmp	r7, #0
   16290:	blt	16378 <abort@plt+0x562c>
   16294:	beq	162c0 <abort@plt+0x5574>
   16298:	cmp	r6, #0
   1629c:	blt	1641c <abort@plt+0x56d0>
   162a0:	mov	r1, r7
   162a4:	mvn	r0, #-2147483648	; 0x80000000
   162a8:	bl	16cf0 <abort@plt+0x5fa4>
   162ac:	cmp	r6, r0
   162b0:	movle	r0, #0
   162b4:	movgt	r0, #1
   162b8:	cmp	r0, #0
   162bc:	bne	16360 <abort@plt+0x5614>
   162c0:	mul	r5, r6, r7
   162c4:	mov	r1, r5
   162c8:	mov	r0, r9
   162cc:	bl	1664c <abort@plt+0x5900>
   162d0:	cmp	r0, #0
   162d4:	beq	16348 <abort@plt+0x55fc>
   162d8:	str	r4, [r8]
   162dc:	add	sp, sp, #12
   162e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162e4:	cmp	r7, #0
   162e8:	blt	163a4 <abort@plt+0x5658>
   162ec:	beq	16204 <abort@plt+0x54b8>
   162f0:	cmp	r4, #0
   162f4:	blt	163d4 <abort@plt+0x5688>
   162f8:	mov	r1, r7
   162fc:	mvn	r0, #-2147483648	; 0x80000000
   16300:	str	r3, [sp, #4]
   16304:	bl	16cf0 <abort@plt+0x5fa4>
   16308:	ldr	r3, [sp, #4]
   1630c:	cmp	r0, r4
   16310:	movge	r0, #0
   16314:	movlt	r0, #1
   16318:	cmp	r0, #0
   1631c:	mvnne	r5, #-2147483648	; 0x80000000
   16320:	bne	16208 <abort@plt+0x54bc>
   16324:	mul	r5, r7, r4
   16328:	cmp	r5, #63	; 0x3f
   1632c:	bgt	16230 <abort@plt+0x54e4>
   16330:	b	16204 <abort@plt+0x54b8>
   16334:	rsb	r1, r4, #-2147483648	; 0x80000000
   16338:	cmp	r6, r1
   1633c:	movge	r1, #0
   16340:	movlt	r1, #1
   16344:	b	161d0 <abort@plt+0x5484>
   16348:	adds	r5, r5, #0
   1634c:	movne	r5, #1
   16350:	cmp	r9, #0
   16354:	orreq	r5, r5, #1
   16358:	cmp	r5, #0
   1635c:	beq	162d8 <abort@plt+0x558c>
   16360:	bl	16598 <abort@plt+0x584c>
   16364:	rsb	r2, sl, #-2147483648	; 0x80000000
   16368:	cmp	r6, r2
   1636c:	movge	r2, #0
   16370:	movlt	r2, #1
   16374:	b	16268 <abort@plt+0x551c>
   16378:	cmp	r6, #0
   1637c:	blt	16400 <abort@plt+0x56b4>
   16380:	cmn	r7, #1
   16384:	beq	162c0 <abort@plt+0x5574>
   16388:	mov	r1, r7
   1638c:	mov	r0, #-2147483648	; 0x80000000
   16390:	bl	16cf0 <abort@plt+0x5fa4>
   16394:	cmp	r6, r0
   16398:	movle	r0, #0
   1639c:	movgt	r0, #1
   163a0:	b	162b8 <abort@plt+0x556c>
   163a4:	cmp	r4, #0
   163a8:	blt	16440 <abort@plt+0x56f4>
   163ac:	cmn	r7, #1
   163b0:	beq	16324 <abort@plt+0x55d8>
   163b4:	str	r3, [sp, #4]
   163b8:	mov	r1, r7
   163bc:	mov	r0, #-2147483648	; 0x80000000
   163c0:	b	16304 <abort@plt+0x55b8>
   163c4:	mov	r4, fp
   163c8:	b	162f8 <abort@plt+0x55ac>
   163cc:	mov	r4, fp
   163d0:	b	163ac <abort@plt+0x5660>
   163d4:	cmn	r4, #1
   163d8:	beq	16324 <abort@plt+0x55d8>
   163dc:	mov	r1, r4
   163e0:	mov	r0, #-2147483648	; 0x80000000
   163e4:	str	r3, [sp, #4]
   163e8:	bl	16cf0 <abort@plt+0x5fa4>
   163ec:	ldr	r3, [sp, #4]
   163f0:	cmp	r7, r0
   163f4:	movle	r0, #0
   163f8:	movgt	r0, #1
   163fc:	b	16318 <abort@plt+0x55cc>
   16400:	mov	r1, r7
   16404:	mvn	r0, #-2147483648	; 0x80000000
   16408:	bl	16cf0 <abort@plt+0x5fa4>
   1640c:	cmp	r6, r0
   16410:	movge	r0, #0
   16414:	movlt	r0, #1
   16418:	b	162b8 <abort@plt+0x556c>
   1641c:	cmn	r6, #1
   16420:	beq	162c0 <abort@plt+0x5574>
   16424:	mov	r1, r6
   16428:	mov	r0, #-2147483648	; 0x80000000
   1642c:	bl	16cf0 <abort@plt+0x5fa4>
   16430:	cmp	r7, r0
   16434:	movle	r0, #0
   16438:	movgt	r0, #1
   1643c:	b	162b8 <abort@plt+0x556c>
   16440:	mov	r1, r7
   16444:	mvn	r0, #-2147483648	; 0x80000000
   16448:	str	r3, [sp, #4]
   1644c:	bl	16cf0 <abort@plt+0x5fa4>
   16450:	ldr	r3, [sp, #4]
   16454:	cmp	r0, r4
   16458:	movle	r0, #0
   1645c:	movgt	r0, #1
   16460:	b	16318 <abort@plt+0x55cc>
   16464:	push	{r4, lr}
   16468:	mov	r1, #1
   1646c:	bl	165d8 <abort@plt+0x588c>
   16470:	cmp	r0, #0
   16474:	popne	{r4, pc}
   16478:	bl	16598 <abort@plt+0x584c>
   1647c:	push	{r4, lr}
   16480:	mov	r1, #1
   16484:	bl	165d8 <abort@plt+0x588c>
   16488:	cmp	r0, #0
   1648c:	popne	{r4, pc}
   16490:	bl	16598 <abort@plt+0x584c>
   16494:	push	{r4, lr}
   16498:	bl	165d8 <abort@plt+0x588c>
   1649c:	cmp	r0, #0
   164a0:	popne	{r4, pc}
   164a4:	bl	16598 <abort@plt+0x584c>
   164a8:	push	{r4, lr}
   164ac:	bl	165d8 <abort@plt+0x588c>
   164b0:	cmp	r0, #0
   164b4:	popne	{r4, pc}
   164b8:	bl	16598 <abort@plt+0x584c>
   164bc:	push	{r4, r5, r6, lr}
   164c0:	mov	r6, r0
   164c4:	mov	r0, r1
   164c8:	mov	r4, r1
   164cc:	bl	16620 <abort@plt+0x58d4>
   164d0:	subs	r5, r0, #0
   164d4:	beq	164ec <abort@plt+0x57a0>
   164d8:	mov	r2, r4
   164dc:	mov	r1, r6
   164e0:	bl	10b9c <memcpy@plt>
   164e4:	mov	r0, r5
   164e8:	pop	{r4, r5, r6, pc}
   164ec:	bl	16598 <abort@plt+0x584c>
   164f0:	push	{r4, r5, r6, lr}
   164f4:	mov	r6, r0
   164f8:	mov	r0, r1
   164fc:	mov	r4, r1
   16500:	bl	16620 <abort@plt+0x58d4>
   16504:	subs	r5, r0, #0
   16508:	beq	16520 <abort@plt+0x57d4>
   1650c:	mov	r2, r4
   16510:	mov	r1, r6
   16514:	bl	10b9c <memcpy@plt>
   16518:	mov	r0, r5
   1651c:	pop	{r4, r5, r6, pc}
   16520:	bl	16598 <abort@plt+0x584c>
   16524:	push	{r4, r5, r6, lr}
   16528:	mov	r6, r0
   1652c:	add	r0, r1, #1
   16530:	mov	r4, r1
   16534:	bl	16620 <abort@plt+0x58d4>
   16538:	subs	r5, r0, #0
   1653c:	beq	1655c <abort@plt+0x5810>
   16540:	mov	r3, #0
   16544:	mov	r1, r6
   16548:	strb	r3, [r5, r4]
   1654c:	mov	r2, r4
   16550:	bl	10b9c <memcpy@plt>
   16554:	mov	r0, r5
   16558:	pop	{r4, r5, r6, pc}
   1655c:	bl	16598 <abort@plt+0x584c>
   16560:	push	{r4, r5, r6, lr}
   16564:	mov	r6, r0
   16568:	bl	10c98 <strlen@plt>
   1656c:	add	r4, r0, #1
   16570:	mov	r0, r4
   16574:	bl	16620 <abort@plt+0x58d4>
   16578:	subs	r5, r0, #0
   1657c:	beq	16594 <abort@plt+0x5848>
   16580:	mov	r2, r4
   16584:	mov	r1, r6
   16588:	bl	10b9c <memcpy@plt>
   1658c:	mov	r0, r5
   16590:	pop	{r4, r5, r6, pc}
   16594:	bl	16598 <abort@plt+0x584c>
   16598:	ldr	r3, [pc, #44]	; 165cc <abort@plt+0x5880>
   1659c:	push	{r4, lr}
   165a0:	mov	r2, #5
   165a4:	ldr	r1, [pc, #36]	; 165d0 <abort@plt+0x5884>
   165a8:	mov	r0, #0
   165ac:	ldr	r4, [r3]
   165b0:	bl	10bcc <dcgettext@plt>
   165b4:	ldr	r2, [pc, #24]	; 165d4 <abort@plt+0x5888>
   165b8:	mov	r1, #0
   165bc:	mov	r3, r0
   165c0:	mov	r0, r4
   165c4:	bl	10c38 <error@plt>
   165c8:	bl	10d4c <abort@plt>
   165cc:	andeq	r8, r2, ip, asr #1
   165d0:	muleq	r1, ip, r8
   165d4:	andeq	r7, r1, r0, ror #8
   165d8:	cmp	r1, #0
   165dc:	cmpne	r0, #0
   165e0:	moveq	r1, #1
   165e4:	moveq	r0, r1
   165e8:	umull	r2, r3, r0, r1
   165ec:	adds	r3, r3, #0
   165f0:	movne	r3, #1
   165f4:	cmp	r2, #0
   165f8:	blt	16608 <abort@plt+0x58bc>
   165fc:	cmp	r3, #0
   16600:	bne	16608 <abort@plt+0x58bc>
   16604:	b	10b48 <calloc@plt>
   16608:	push	{r4, lr}
   1660c:	bl	10cb0 <__errno_location@plt>
   16610:	mov	r3, #12
   16614:	str	r3, [r0]
   16618:	mov	r0, #0
   1661c:	pop	{r4, pc}
   16620:	cmp	r0, #0
   16624:	moveq	r0, #1
   16628:	cmp	r0, #0
   1662c:	blt	16634 <abort@plt+0x58e8>
   16630:	b	10c44 <malloc@plt>
   16634:	push	{r4, lr}
   16638:	bl	10cb0 <__errno_location@plt>
   1663c:	mov	r3, #12
   16640:	str	r3, [r0]
   16644:	mov	r0, #0
   16648:	pop	{r4, pc}
   1664c:	cmp	r0, #0
   16650:	beq	16674 <abort@plt+0x5928>
   16654:	cmp	r1, #0
   16658:	push	{lr}		; (str lr, [sp, #-4]!)
   1665c:	sub	sp, sp, #12
   16660:	beq	1667c <abort@plt+0x5930>
   16664:	blt	16694 <abort@plt+0x5948>
   16668:	add	sp, sp, #12
   1666c:	pop	{lr}		; (ldr lr, [sp], #4)
   16670:	b	10bd8 <realloc@plt>
   16674:	mov	r0, r1
   16678:	b	16620 <abort@plt+0x58d4>
   1667c:	str	r1, [sp, #4]
   16680:	bl	16824 <abort@plt+0x5ad8>
   16684:	ldr	r3, [sp, #4]
   16688:	mov	r0, r3
   1668c:	add	sp, sp, #12
   16690:	pop	{pc}		; (ldr pc, [sp], #4)
   16694:	bl	10cb0 <__errno_location@plt>
   16698:	mov	r2, #12
   1669c:	mov	r3, #0
   166a0:	str	r2, [r0]
   166a4:	b	16688 <abort@plt+0x593c>
   166a8:	push	{r4, r5, r6, lr}
   166ac:	mov	r4, r0
   166b0:	bl	10c20 <__fpending@plt>
   166b4:	ldr	r5, [r4]
   166b8:	and	r5, r5, #32
   166bc:	mov	r6, r0
   166c0:	mov	r0, r4
   166c4:	bl	16724 <abort@plt+0x59d8>
   166c8:	cmp	r5, #0
   166cc:	mov	r4, r0
   166d0:	bne	166f0 <abort@plt+0x59a4>
   166d4:	cmp	r0, #0
   166d8:	beq	166e8 <abort@plt+0x599c>
   166dc:	cmp	r6, #0
   166e0:	beq	1670c <abort@plt+0x59c0>
   166e4:	mvn	r4, #0
   166e8:	mov	r0, r4
   166ec:	pop	{r4, r5, r6, pc}
   166f0:	cmp	r0, #0
   166f4:	bne	166e4 <abort@plt+0x5998>
   166f8:	bl	10cb0 <__errno_location@plt>
   166fc:	str	r4, [r0]
   16700:	mvn	r4, #0
   16704:	mov	r0, r4
   16708:	pop	{r4, r5, r6, pc}
   1670c:	bl	10cb0 <__errno_location@plt>
   16710:	ldr	r4, [r0]
   16714:	subs	r4, r4, #9
   16718:	mvnne	r4, #0
   1671c:	mov	r0, r4
   16720:	pop	{r4, r5, r6, pc}
   16724:	push	{r4, r5, lr}
   16728:	sub	sp, sp, #12
   1672c:	mov	r4, r0
   16730:	bl	10ce0 <fileno@plt>
   16734:	cmp	r0, #0
   16738:	mov	r0, r4
   1673c:	blt	167b8 <abort@plt+0x5a6c>
   16740:	bl	10c5c <__freading@plt>
   16744:	cmp	r0, #0
   16748:	bne	16784 <abort@plt+0x5a38>
   1674c:	mov	r0, r4
   16750:	bl	167c4 <abort@plt+0x5a78>
   16754:	cmp	r0, #0
   16758:	beq	167b4 <abort@plt+0x5a68>
   1675c:	bl	10cb0 <__errno_location@plt>
   16760:	mov	r5, r0
   16764:	mov	r0, r4
   16768:	ldr	r4, [r5]
   1676c:	bl	10cf8 <fclose@plt>
   16770:	cmp	r4, #0
   16774:	mvnne	r0, #0
   16778:	strne	r4, [r5]
   1677c:	add	sp, sp, #12
   16780:	pop	{r4, r5, pc}
   16784:	mov	r0, r4
   16788:	bl	10ce0 <fileno@plt>
   1678c:	mov	r3, #1
   16790:	str	r3, [sp]
   16794:	mov	r2, #0
   16798:	mov	r3, #0
   1679c:	bl	10c08 <lseek64@plt>
   167a0:	mvn	r3, #0
   167a4:	mvn	r2, #0
   167a8:	cmp	r1, r3
   167ac:	cmpeq	r0, r2
   167b0:	bne	1674c <abort@plt+0x5a00>
   167b4:	mov	r0, r4
   167b8:	add	sp, sp, #12
   167bc:	pop	{r4, r5, lr}
   167c0:	b	10cf8 <fclose@plt>
   167c4:	push	{r4, lr}
   167c8:	subs	r4, r0, #0
   167cc:	sub	sp, sp, #8
   167d0:	beq	167ec <abort@plt+0x5aa0>
   167d4:	bl	10c5c <__freading@plt>
   167d8:	cmp	r0, #0
   167dc:	beq	167ec <abort@plt+0x5aa0>
   167e0:	ldr	r3, [r4]
   167e4:	tst	r3, #256	; 0x100
   167e8:	bne	167fc <abort@plt+0x5ab0>
   167ec:	mov	r0, r4
   167f0:	add	sp, sp, #8
   167f4:	pop	{r4, lr}
   167f8:	b	10b78 <fflush@plt>
   167fc:	mov	r3, #1
   16800:	str	r3, [sp]
   16804:	mov	r2, #0
   16808:	mov	r3, #0
   1680c:	mov	r0, r4
   16810:	bl	1687c <abort@plt+0x5b30>
   16814:	mov	r0, r4
   16818:	add	sp, sp, #8
   1681c:	pop	{r4, lr}
   16820:	b	10b78 <fflush@plt>
   16824:	push	{r4, r5, lr}
   16828:	sub	sp, sp, #12
   1682c:	mov	r5, r0
   16830:	bl	10cb0 <__errno_location@plt>
   16834:	mov	r2, #0
   16838:	mov	r4, r0
   1683c:	ldr	r3, [r0]
   16840:	str	r2, [r4]
   16844:	mov	r0, r5
   16848:	str	r3, [sp]
   1684c:	str	r3, [sp, #4]
   16850:	bl	10b84 <free@plt>
   16854:	ldr	r3, [r4]
   16858:	add	r2, sp, #8
   1685c:	cmp	r3, #0
   16860:	moveq	r3, #4
   16864:	movne	r3, #0
   16868:	add	r3, r2, r3
   1686c:	ldr	r3, [r3, #-8]
   16870:	str	r3, [r4]
   16874:	add	sp, sp, #12
   16878:	pop	{r4, r5, pc}
   1687c:	push	{r4, r5, r6, r7, r8, lr}
   16880:	sub	sp, sp, #8
   16884:	ldmib	r0, {ip, lr}
   16888:	mov	r4, r0
   1688c:	ldr	r5, [sp, #32]
   16890:	cmp	lr, ip
   16894:	beq	168ac <abort@plt+0x5b60>
   16898:	str	r5, [sp, #32]
   1689c:	mov	r0, r4
   168a0:	add	sp, sp, #8
   168a4:	pop	{r4, r5, r6, r7, r8, lr}
   168a8:	b	10d04 <fseeko64@plt>
   168ac:	ldr	lr, [r0, #20]
   168b0:	ldr	ip, [r0, #16]
   168b4:	cmp	lr, ip
   168b8:	bne	16898 <abort@plt+0x5b4c>
   168bc:	ldr	r8, [r0, #36]	; 0x24
   168c0:	cmp	r8, #0
   168c4:	bne	16898 <abort@plt+0x5b4c>
   168c8:	mov	r6, r2
   168cc:	mov	r7, r3
   168d0:	bl	10ce0 <fileno@plt>
   168d4:	mov	r2, r6
   168d8:	mov	r3, r7
   168dc:	str	r5, [sp]
   168e0:	bl	10c08 <lseek64@plt>
   168e4:	mvn	r3, #0
   168e8:	mvn	r2, #0
   168ec:	cmp	r1, r3
   168f0:	cmpeq	r0, r2
   168f4:	beq	16914 <abort@plt+0x5bc8>
   168f8:	ldr	r3, [r4]
   168fc:	strd	r0, [r4, #80]	; 0x50
   16900:	mov	r0, r8
   16904:	bic	r3, r3, #16
   16908:	str	r3, [r4]
   1690c:	add	sp, sp, #8
   16910:	pop	{r4, r5, r6, r7, r8, pc}
   16914:	mvn	r0, #0
   16918:	b	1690c <abort@plt+0x5bc0>
   1691c:	push	{r4, lr}
   16920:	mov	r0, #14
   16924:	bl	10d28 <nl_langinfo@plt>
   16928:	cmp	r0, #0
   1692c:	beq	16944 <abort@plt+0x5bf8>
   16930:	ldrb	r2, [r0]
   16934:	ldr	r3, [pc, #16]	; 1694c <abort@plt+0x5c00>
   16938:	cmp	r2, #0
   1693c:	moveq	r0, r3
   16940:	pop	{r4, pc}
   16944:	ldr	r0, [pc]	; 1694c <abort@plt+0x5c00>
   16948:	pop	{r4, pc}
   1694c:			; <UNDEFINED> instruction: 0x000178b0
   16950:	push	{r4, r5, r6, r7, lr}
   16954:	subs	r6, r0, #0
   16958:	sub	sp, sp, #12
   1695c:	addeq	r6, sp, #4
   16960:	mov	r0, r6
   16964:	mov	r5, r2
   16968:	mov	r7, r1
   1696c:	bl	10c2c <mbrtowc@plt>
   16970:	cmp	r5, #0
   16974:	cmnne	r0, #3
   16978:	mov	r4, r0
   1697c:	bls	16998 <abort@plt+0x5c4c>
   16980:	mov	r0, #0
   16984:	bl	169f0 <abort@plt+0x5ca4>
   16988:	cmp	r0, #0
   1698c:	moveq	r4, #1
   16990:	ldrbeq	r3, [r7]
   16994:	streq	r3, [r6]
   16998:	mov	r0, r4
   1699c:	add	sp, sp, #12
   169a0:	pop	{r4, r5, r6, r7, pc}
   169a4:	push	{r4, r5, r6, lr}
   169a8:	subs	r4, r2, #0
   169ac:	mov	r6, r0
   169b0:	mov	r5, r1
   169b4:	beq	169e0 <abort@plt+0x5c94>
   169b8:	mov	r1, r4
   169bc:	mvn	r0, #0
   169c0:	bl	16ae4 <abort@plt+0x5d98>
   169c4:	cmp	r0, r5
   169c8:	bcs	169e0 <abort@plt+0x5c94>
   169cc:	bl	10cb0 <__errno_location@plt>
   169d0:	mov	r3, #12
   169d4:	str	r3, [r0]
   169d8:	mov	r0, #0
   169dc:	pop	{r4, r5, r6, pc}
   169e0:	mul	r1, r5, r4
   169e4:	mov	r0, r6
   169e8:	pop	{r4, r5, r6, lr}
   169ec:	b	1664c <abort@plt+0x5900>
   169f0:	push	{lr}		; (str lr, [sp, #-4]!)
   169f4:	sub	sp, sp, #268	; 0x10c
   169f8:	add	r1, sp, #4
   169fc:	ldr	r2, [pc, #60]	; 16a40 <abort@plt+0x5cf4>
   16a00:	bl	16a4c <abort@plt+0x5d00>
   16a04:	cmp	r0, #0
   16a08:	movne	r0, #0
   16a0c:	bne	16a38 <abort@plt+0x5cec>
   16a10:	ldr	r1, [pc, #44]	; 16a44 <abort@plt+0x5cf8>
   16a14:	add	r0, sp, #4
   16a18:	bl	10b6c <strcmp@plt>
   16a1c:	cmp	r0, #0
   16a20:	beq	16a38 <abort@plt+0x5cec>
   16a24:	add	r0, sp, #4
   16a28:	ldr	r1, [pc, #24]	; 16a48 <abort@plt+0x5cfc>
   16a2c:	bl	10b6c <strcmp@plt>
   16a30:	adds	r0, r0, #0
   16a34:	movne	r0, #1
   16a38:	add	sp, sp, #268	; 0x10c
   16a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a40:	andeq	r0, r0, r1, lsl #2
   16a44:			; <UNDEFINED> instruction: 0x000178b8
   16a48:			; <UNDEFINED> instruction: 0x000178bc
   16a4c:	push	{r4, r5, r6, lr}
   16a50:	mov	r5, r1
   16a54:	mov	r1, #0
   16a58:	mov	r4, r2
   16a5c:	bl	10d10 <setlocale@plt>
   16a60:	subs	r6, r0, #0
   16a64:	beq	16ac0 <abort@plt+0x5d74>
   16a68:	bl	10c98 <strlen@plt>
   16a6c:	cmp	r4, r0
   16a70:	bhi	16aa8 <abort@plt+0x5d5c>
   16a74:	cmp	r4, #0
   16a78:	bne	16a84 <abort@plt+0x5d38>
   16a7c:	mov	r0, #34	; 0x22
   16a80:	pop	{r4, r5, r6, pc}
   16a84:	sub	r4, r4, #1
   16a88:	mov	r1, r6
   16a8c:	mov	r2, r4
   16a90:	mov	r0, r5
   16a94:	bl	10b9c <memcpy@plt>
   16a98:	mov	r3, #0
   16a9c:	strb	r3, [r5, r4]
   16aa0:	mov	r0, #34	; 0x22
   16aa4:	pop	{r4, r5, r6, pc}
   16aa8:	add	r2, r0, #1
   16aac:	mov	r1, r6
   16ab0:	mov	r0, r5
   16ab4:	bl	10b9c <memcpy@plt>
   16ab8:	mov	r0, #0
   16abc:	pop	{r4, r5, r6, pc}
   16ac0:	cmp	r4, #0
   16ac4:	beq	16ad4 <abort@plt+0x5d88>
   16ac8:	strb	r6, [r5]
   16acc:	mov	r0, #22
   16ad0:	pop	{r4, r5, r6, pc}
   16ad4:	mov	r0, #22
   16ad8:	pop	{r4, r5, r6, pc}
   16adc:	mov	r1, #0
   16ae0:	b	10d10 <setlocale@plt>
   16ae4:	subs	r2, r1, #1
   16ae8:	bxeq	lr
   16aec:	bcc	16cc4 <abort@plt+0x5f78>
   16af0:	cmp	r0, r1
   16af4:	bls	16ca8 <abort@plt+0x5f5c>
   16af8:	tst	r1, r2
   16afc:	beq	16cb4 <abort@plt+0x5f68>
   16b00:	clz	r3, r0
   16b04:	clz	r2, r1
   16b08:	sub	r3, r2, r3
   16b0c:	rsbs	r3, r3, #31
   16b10:	addne	r3, r3, r3, lsl #1
   16b14:	mov	r2, #0
   16b18:	addne	pc, pc, r3, lsl #2
   16b1c:	nop			; (mov r0, r0)
   16b20:	cmp	r0, r1, lsl #31
   16b24:	adc	r2, r2, r2
   16b28:	subcs	r0, r0, r1, lsl #31
   16b2c:	cmp	r0, r1, lsl #30
   16b30:	adc	r2, r2, r2
   16b34:	subcs	r0, r0, r1, lsl #30
   16b38:	cmp	r0, r1, lsl #29
   16b3c:	adc	r2, r2, r2
   16b40:	subcs	r0, r0, r1, lsl #29
   16b44:	cmp	r0, r1, lsl #28
   16b48:	adc	r2, r2, r2
   16b4c:	subcs	r0, r0, r1, lsl #28
   16b50:	cmp	r0, r1, lsl #27
   16b54:	adc	r2, r2, r2
   16b58:	subcs	r0, r0, r1, lsl #27
   16b5c:	cmp	r0, r1, lsl #26
   16b60:	adc	r2, r2, r2
   16b64:	subcs	r0, r0, r1, lsl #26
   16b68:	cmp	r0, r1, lsl #25
   16b6c:	adc	r2, r2, r2
   16b70:	subcs	r0, r0, r1, lsl #25
   16b74:	cmp	r0, r1, lsl #24
   16b78:	adc	r2, r2, r2
   16b7c:	subcs	r0, r0, r1, lsl #24
   16b80:	cmp	r0, r1, lsl #23
   16b84:	adc	r2, r2, r2
   16b88:	subcs	r0, r0, r1, lsl #23
   16b8c:	cmp	r0, r1, lsl #22
   16b90:	adc	r2, r2, r2
   16b94:	subcs	r0, r0, r1, lsl #22
   16b98:	cmp	r0, r1, lsl #21
   16b9c:	adc	r2, r2, r2
   16ba0:	subcs	r0, r0, r1, lsl #21
   16ba4:	cmp	r0, r1, lsl #20
   16ba8:	adc	r2, r2, r2
   16bac:	subcs	r0, r0, r1, lsl #20
   16bb0:	cmp	r0, r1, lsl #19
   16bb4:	adc	r2, r2, r2
   16bb8:	subcs	r0, r0, r1, lsl #19
   16bbc:	cmp	r0, r1, lsl #18
   16bc0:	adc	r2, r2, r2
   16bc4:	subcs	r0, r0, r1, lsl #18
   16bc8:	cmp	r0, r1, lsl #17
   16bcc:	adc	r2, r2, r2
   16bd0:	subcs	r0, r0, r1, lsl #17
   16bd4:	cmp	r0, r1, lsl #16
   16bd8:	adc	r2, r2, r2
   16bdc:	subcs	r0, r0, r1, lsl #16
   16be0:	cmp	r0, r1, lsl #15
   16be4:	adc	r2, r2, r2
   16be8:	subcs	r0, r0, r1, lsl #15
   16bec:	cmp	r0, r1, lsl #14
   16bf0:	adc	r2, r2, r2
   16bf4:	subcs	r0, r0, r1, lsl #14
   16bf8:	cmp	r0, r1, lsl #13
   16bfc:	adc	r2, r2, r2
   16c00:	subcs	r0, r0, r1, lsl #13
   16c04:	cmp	r0, r1, lsl #12
   16c08:	adc	r2, r2, r2
   16c0c:	subcs	r0, r0, r1, lsl #12
   16c10:	cmp	r0, r1, lsl #11
   16c14:	adc	r2, r2, r2
   16c18:	subcs	r0, r0, r1, lsl #11
   16c1c:	cmp	r0, r1, lsl #10
   16c20:	adc	r2, r2, r2
   16c24:	subcs	r0, r0, r1, lsl #10
   16c28:	cmp	r0, r1, lsl #9
   16c2c:	adc	r2, r2, r2
   16c30:	subcs	r0, r0, r1, lsl #9
   16c34:	cmp	r0, r1, lsl #8
   16c38:	adc	r2, r2, r2
   16c3c:	subcs	r0, r0, r1, lsl #8
   16c40:	cmp	r0, r1, lsl #7
   16c44:	adc	r2, r2, r2
   16c48:	subcs	r0, r0, r1, lsl #7
   16c4c:	cmp	r0, r1, lsl #6
   16c50:	adc	r2, r2, r2
   16c54:	subcs	r0, r0, r1, lsl #6
   16c58:	cmp	r0, r1, lsl #5
   16c5c:	adc	r2, r2, r2
   16c60:	subcs	r0, r0, r1, lsl #5
   16c64:	cmp	r0, r1, lsl #4
   16c68:	adc	r2, r2, r2
   16c6c:	subcs	r0, r0, r1, lsl #4
   16c70:	cmp	r0, r1, lsl #3
   16c74:	adc	r2, r2, r2
   16c78:	subcs	r0, r0, r1, lsl #3
   16c7c:	cmp	r0, r1, lsl #2
   16c80:	adc	r2, r2, r2
   16c84:	subcs	r0, r0, r1, lsl #2
   16c88:	cmp	r0, r1, lsl #1
   16c8c:	adc	r2, r2, r2
   16c90:	subcs	r0, r0, r1, lsl #1
   16c94:	cmp	r0, r1
   16c98:	adc	r2, r2, r2
   16c9c:	subcs	r0, r0, r1
   16ca0:	mov	r0, r2
   16ca4:	bx	lr
   16ca8:	moveq	r0, #1
   16cac:	movne	r0, #0
   16cb0:	bx	lr
   16cb4:	clz	r2, r1
   16cb8:	rsb	r2, r2, #31
   16cbc:	lsr	r0, r0, r2
   16cc0:	bx	lr
   16cc4:	cmp	r0, #0
   16cc8:	mvnne	r0, #0
   16ccc:	b	16f30 <abort@plt+0x61e4>
   16cd0:	cmp	r1, #0
   16cd4:	beq	16cc4 <abort@plt+0x5f78>
   16cd8:	push	{r0, r1, lr}
   16cdc:	bl	16ae4 <abort@plt+0x5d98>
   16ce0:	pop	{r1, r2, lr}
   16ce4:	mul	r3, r2, r0
   16ce8:	sub	r1, r1, r3
   16cec:	bx	lr
   16cf0:	cmp	r1, #0
   16cf4:	beq	16f00 <abort@plt+0x61b4>
   16cf8:	eor	ip, r0, r1
   16cfc:	rsbmi	r1, r1, #0
   16d00:	subs	r2, r1, #1
   16d04:	beq	16ecc <abort@plt+0x6180>
   16d08:	movs	r3, r0
   16d0c:	rsbmi	r3, r0, #0
   16d10:	cmp	r3, r1
   16d14:	bls	16ed8 <abort@plt+0x618c>
   16d18:	tst	r1, r2
   16d1c:	beq	16ee8 <abort@plt+0x619c>
   16d20:	clz	r2, r3
   16d24:	clz	r0, r1
   16d28:	sub	r2, r0, r2
   16d2c:	rsbs	r2, r2, #31
   16d30:	addne	r2, r2, r2, lsl #1
   16d34:	mov	r0, #0
   16d38:	addne	pc, pc, r2, lsl #2
   16d3c:	nop			; (mov r0, r0)
   16d40:	cmp	r3, r1, lsl #31
   16d44:	adc	r0, r0, r0
   16d48:	subcs	r3, r3, r1, lsl #31
   16d4c:	cmp	r3, r1, lsl #30
   16d50:	adc	r0, r0, r0
   16d54:	subcs	r3, r3, r1, lsl #30
   16d58:	cmp	r3, r1, lsl #29
   16d5c:	adc	r0, r0, r0
   16d60:	subcs	r3, r3, r1, lsl #29
   16d64:	cmp	r3, r1, lsl #28
   16d68:	adc	r0, r0, r0
   16d6c:	subcs	r3, r3, r1, lsl #28
   16d70:	cmp	r3, r1, lsl #27
   16d74:	adc	r0, r0, r0
   16d78:	subcs	r3, r3, r1, lsl #27
   16d7c:	cmp	r3, r1, lsl #26
   16d80:	adc	r0, r0, r0
   16d84:	subcs	r3, r3, r1, lsl #26
   16d88:	cmp	r3, r1, lsl #25
   16d8c:	adc	r0, r0, r0
   16d90:	subcs	r3, r3, r1, lsl #25
   16d94:	cmp	r3, r1, lsl #24
   16d98:	adc	r0, r0, r0
   16d9c:	subcs	r3, r3, r1, lsl #24
   16da0:	cmp	r3, r1, lsl #23
   16da4:	adc	r0, r0, r0
   16da8:	subcs	r3, r3, r1, lsl #23
   16dac:	cmp	r3, r1, lsl #22
   16db0:	adc	r0, r0, r0
   16db4:	subcs	r3, r3, r1, lsl #22
   16db8:	cmp	r3, r1, lsl #21
   16dbc:	adc	r0, r0, r0
   16dc0:	subcs	r3, r3, r1, lsl #21
   16dc4:	cmp	r3, r1, lsl #20
   16dc8:	adc	r0, r0, r0
   16dcc:	subcs	r3, r3, r1, lsl #20
   16dd0:	cmp	r3, r1, lsl #19
   16dd4:	adc	r0, r0, r0
   16dd8:	subcs	r3, r3, r1, lsl #19
   16ddc:	cmp	r3, r1, lsl #18
   16de0:	adc	r0, r0, r0
   16de4:	subcs	r3, r3, r1, lsl #18
   16de8:	cmp	r3, r1, lsl #17
   16dec:	adc	r0, r0, r0
   16df0:	subcs	r3, r3, r1, lsl #17
   16df4:	cmp	r3, r1, lsl #16
   16df8:	adc	r0, r0, r0
   16dfc:	subcs	r3, r3, r1, lsl #16
   16e00:	cmp	r3, r1, lsl #15
   16e04:	adc	r0, r0, r0
   16e08:	subcs	r3, r3, r1, lsl #15
   16e0c:	cmp	r3, r1, lsl #14
   16e10:	adc	r0, r0, r0
   16e14:	subcs	r3, r3, r1, lsl #14
   16e18:	cmp	r3, r1, lsl #13
   16e1c:	adc	r0, r0, r0
   16e20:	subcs	r3, r3, r1, lsl #13
   16e24:	cmp	r3, r1, lsl #12
   16e28:	adc	r0, r0, r0
   16e2c:	subcs	r3, r3, r1, lsl #12
   16e30:	cmp	r3, r1, lsl #11
   16e34:	adc	r0, r0, r0
   16e38:	subcs	r3, r3, r1, lsl #11
   16e3c:	cmp	r3, r1, lsl #10
   16e40:	adc	r0, r0, r0
   16e44:	subcs	r3, r3, r1, lsl #10
   16e48:	cmp	r3, r1, lsl #9
   16e4c:	adc	r0, r0, r0
   16e50:	subcs	r3, r3, r1, lsl #9
   16e54:	cmp	r3, r1, lsl #8
   16e58:	adc	r0, r0, r0
   16e5c:	subcs	r3, r3, r1, lsl #8
   16e60:	cmp	r3, r1, lsl #7
   16e64:	adc	r0, r0, r0
   16e68:	subcs	r3, r3, r1, lsl #7
   16e6c:	cmp	r3, r1, lsl #6
   16e70:	adc	r0, r0, r0
   16e74:	subcs	r3, r3, r1, lsl #6
   16e78:	cmp	r3, r1, lsl #5
   16e7c:	adc	r0, r0, r0
   16e80:	subcs	r3, r3, r1, lsl #5
   16e84:	cmp	r3, r1, lsl #4
   16e88:	adc	r0, r0, r0
   16e8c:	subcs	r3, r3, r1, lsl #4
   16e90:	cmp	r3, r1, lsl #3
   16e94:	adc	r0, r0, r0
   16e98:	subcs	r3, r3, r1, lsl #3
   16e9c:	cmp	r3, r1, lsl #2
   16ea0:	adc	r0, r0, r0
   16ea4:	subcs	r3, r3, r1, lsl #2
   16ea8:	cmp	r3, r1, lsl #1
   16eac:	adc	r0, r0, r0
   16eb0:	subcs	r3, r3, r1, lsl #1
   16eb4:	cmp	r3, r1
   16eb8:	adc	r0, r0, r0
   16ebc:	subcs	r3, r3, r1
   16ec0:	cmp	ip, #0
   16ec4:	rsbmi	r0, r0, #0
   16ec8:	bx	lr
   16ecc:	teq	ip, r0
   16ed0:	rsbmi	r0, r0, #0
   16ed4:	bx	lr
   16ed8:	movcc	r0, #0
   16edc:	asreq	r0, ip, #31
   16ee0:	orreq	r0, r0, #1
   16ee4:	bx	lr
   16ee8:	clz	r2, r1
   16eec:	rsb	r2, r2, #31
   16ef0:	cmp	ip, #0
   16ef4:	lsr	r0, r3, r2
   16ef8:	rsbmi	r0, r0, #0
   16efc:	bx	lr
   16f00:	cmp	r0, #0
   16f04:	mvngt	r0, #-2147483648	; 0x80000000
   16f08:	movlt	r0, #-2147483648	; 0x80000000
   16f0c:	b	16f30 <abort@plt+0x61e4>
   16f10:	cmp	r1, #0
   16f14:	beq	16f00 <abort@plt+0x61b4>
   16f18:	push	{r0, r1, lr}
   16f1c:	bl	16cf8 <abort@plt+0x5fac>
   16f20:	pop	{r1, r2, lr}
   16f24:	mul	r3, r2, r0
   16f28:	sub	r1, r1, r3
   16f2c:	bx	lr
   16f30:	push	{r1, lr}
   16f34:	mov	r0, #8
   16f38:	bl	10b60 <raise@plt>
   16f3c:	pop	{r1, pc}
   16f40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f44:	mov	r7, r0
   16f48:	ldr	r6, [pc, #72]	; 16f98 <abort@plt+0x624c>
   16f4c:	ldr	r5, [pc, #72]	; 16f9c <abort@plt+0x6250>
   16f50:	add	r6, pc, r6
   16f54:	add	r5, pc, r5
   16f58:	sub	r6, r6, r5
   16f5c:	mov	r8, r1
   16f60:	mov	r9, r2
   16f64:	bl	10b28 <calloc@plt-0x20>
   16f68:	asrs	r6, r6, #2
   16f6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f70:	mov	r4, #0
   16f74:	add	r4, r4, #1
   16f78:	ldr	r3, [r5], #4
   16f7c:	mov	r2, r9
   16f80:	mov	r1, r8
   16f84:	mov	r0, r7
   16f88:	blx	r3
   16f8c:	cmp	r6, r4
   16f90:	bne	16f74 <abort@plt+0x6228>
   16f94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f98:			; <UNDEFINED> instruction: 0x00010fb8
   16f9c:			; <UNDEFINED> instruction: 0x00010fb0
   16fa0:	bx	lr
   16fa4:	ldr	r3, [pc, #12]	; 16fb8 <abort@plt+0x626c>
   16fa8:	mov	r1, #0
   16fac:	add	r3, pc, r3
   16fb0:	ldr	r2, [r3]
   16fb4:	b	10cbc <__cxa_atexit@plt>
   16fb8:	andeq	r1, r1, r0, lsl r1

Disassembly of section .fini:

00016fbc <.fini>:
   16fbc:	push	{r3, lr}
   16fc0:	pop	{r3, pc}
