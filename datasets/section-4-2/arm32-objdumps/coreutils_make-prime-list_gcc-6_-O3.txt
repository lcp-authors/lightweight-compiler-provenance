
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

0001056c <.init>:
   1056c:	push	{r3, lr}
   10570:	bl	10b84 <abort@plt+0x52c>
   10574:	pop	{r3, pc}

Disassembly of section .plt:

00010578 <raise@plt-0x14>:
   10578:	push	{lr}		; (str lr, [sp, #-4]!)
   1057c:	ldr	lr, [pc, #4]	; 10588 <raise@plt-0x4>
   10580:	add	lr, pc, lr
   10584:	ldr	pc, [lr, #8]!
   10588:	andeq	r1, r1, r8, ror sl

0001058c <raise@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #69632	; 0x11000
   10594:	ldr	pc, [ip, #2680]!	; 0xa78

00010598 <strtol@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #69632	; 0x11000
   105a0:	ldr	pc, [ip, #2672]!	; 0xa70

000105a4 <free@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #69632	; 0x11000
   105ac:	ldr	pc, [ip, #2664]!	; 0xa68

000105b0 <ferror@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #69632	; 0x11000
   105b8:	ldr	pc, [ip, #2656]!	; 0xa60

000105bc <fwrite@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #69632	; 0x11000
   105c4:	ldr	pc, [ip, #2648]!	; 0xa58

000105c8 <puts@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #69632	; 0x11000
   105d0:	ldr	pc, [ip, #2640]!	; 0xa50

000105d4 <malloc@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #69632	; 0x11000
   105dc:	ldr	pc, [ip, #2632]!	; 0xa48

000105e0 <__libc_start_main@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #69632	; 0x11000
   105e8:	ldr	pc, [ip, #2624]!	; 0xa40

000105ec <strerror@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #69632	; 0x11000
   105f4:	ldr	pc, [ip, #2616]!	; 0xa38

000105f8 <__gmon_start__@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #69632	; 0x11000
   10600:	ldr	pc, [ip, #2608]!	; 0xa30

00010604 <exit@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2600]!	; 0xa28

00010610 <__errno_location@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2592]!	; 0xa20

0001061c <memset@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2584]!	; 0xa18

00010628 <putchar@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2576]!	; 0xa10

00010634 <__printf_chk@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2568]!	; 0xa08

00010640 <__fprintf_chk@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #69632	; 0x11000
   10648:	ldr	pc, [ip, #2560]!	; 0xa00

0001064c <fclose@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #69632	; 0x11000
   10654:	ldr	pc, [ip, #2552]!	; 0x9f8

00010658 <abort@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

00010664 <.text>:
   10664:	cmp	r0, #2
   10668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1066c:	sub	sp, sp, #44	; 0x2c
   10670:	beq	10698 <abort@plt+0x40>
   10674:	ldr	r0, [pc, #1164]	; 10b08 <abort@plt+0x4b0>
   10678:	ldr	r3, [r1]
   1067c:	ldr	r2, [pc, #1160]	; 10b0c <abort@plt+0x4b4>
   10680:	ldr	r0, [r0]
   10684:	mov	r1, #1
   10688:	bl	10640 <__fprintf_chk@plt>
   1068c:	mov	r0, #1
   10690:	add	sp, sp, #44	; 0x2c
   10694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10698:	ldr	r0, [r1, #4]
   1069c:	mov	r2, #10
   106a0:	mov	r1, #0
   106a4:	bl	10598 <strtol@plt>
   106a8:	cmp	r0, #2
   106ac:	ble	109e8 <abort@plt+0x390>
   106b0:	tst	r0, #1
   106b4:	subeq	r0, r0, #1
   106b8:	sub	r0, r0, #1
   106bc:	asr	sl, r0, #1
   106c0:	mov	r0, sl
   106c4:	bl	10c70 <abort@plt+0x618>
   106c8:	mov	r2, sl
   106cc:	mov	r1, #1
   106d0:	mov	r5, r0
   106d4:	str	r0, [sp, #36]	; 0x24
   106d8:	bl	1061c <memset@plt>
   106dc:	mov	r0, #24
   106e0:	mul	r0, r0, sl
   106e4:	bl	10c70 <abort@plt+0x618>
   106e8:	cmp	sl, #0
   106ec:	str	r0, [sp, #32]
   106f0:	beq	10af4 <abort@plt+0x49c>
   106f4:	mov	r3, #0
   106f8:	mov	fp, r3
   106fc:	str	r3, [sp, #20]
   10700:	str	r0, [sp, #24]
   10704:	lsl	r4, fp, #1
   10708:	add	r4, r4, #3
   1070c:	mov	r8, r4
   10710:	mov	r9, #0
   10714:	lsrs	r3, r9, #1
   10718:	rrx	r2, r8
   1071c:	ldr	r3, [sp, #20]
   10720:	and	r2, r2, #7
   10724:	add	r3, r3, #1
   10728:	str	r3, [sp, #20]
   1072c:	ldr	r3, [sp, #24]
   10730:	lsl	r2, r2, #2
   10734:	mov	r1, #0
   10738:	str	r4, [r3]
   1073c:	ldr	r3, [pc, #972]	; 10b10 <abort@plt+0x4b8>
   10740:	str	r5, [sp, #28]
   10744:	mov	lr, r4
   10748:	lsr	r2, r3, r2
   1074c:	mov	r0, r2
   10750:	b	1075c <abort@plt+0x104>
   10754:	mov	r0, r2
   10758:	mov	r1, r3
   1075c:	umull	r6, r7, r0, r0
   10760:	mul	r3, r0, r1
   10764:	mul	ip, r6, r9
   10768:	add	r7, r7, r3, lsl #1
   1076c:	umull	r2, r3, r6, r8
   10770:	mla	r6, r8, r7, ip
   10774:	adds	r4, r0, r0
   10778:	adc	r5, r1, r1
   1077c:	add	r3, r6, r3
   10780:	subs	r2, r4, r2
   10784:	sbc	r3, r5, r3
   10788:	cmp	r1, r3
   1078c:	cmpeq	r0, r2
   10790:	bne	10754 <abort@plt+0xfc>
   10794:	ldr	r6, [sp, #24]
   10798:	mov	r3, r9
   1079c:	mov	r2, r8
   107a0:	strd	r0, [r6, #8]
   107a4:	mvn	r0, #0
   107a8:	mvn	r1, #0
   107ac:	mov	r4, lr
   107b0:	bl	10e6c <abort@plt+0x814>
   107b4:	mul	r3, r4, r4
   107b8:	ldr	r5, [sp, #28]
   107bc:	sub	r3, r3, #3
   107c0:	lsr	r3, r3, #1
   107c4:	cmp	sl, r3
   107c8:	strd	r0, [r6, #16]
   107cc:	bls	107e4 <abort@plt+0x18c>
   107d0:	mov	r2, #0
   107d4:	strb	r2, [r5, r3]
   107d8:	add	r3, r3, r4
   107dc:	cmp	sl, r3
   107e0:	bhi	107d0 <abort@plt+0x178>
   107e4:	add	r3, r5, fp
   107e8:	b	107f8 <abort@plt+0x1a0>
   107ec:	ldrb	r2, [r3, #1]!
   107f0:	cmp	r2, #0
   107f4:	bne	109d8 <abort@plt+0x380>
   107f8:	add	fp, fp, #1
   107fc:	cmp	sl, fp
   10800:	bhi	107ec <abort@plt+0x194>
   10804:	ldr	r0, [pc, #776]	; 10b14 <abort@plt+0x4bc>
   10808:	bl	105c8 <puts@plt>
   1080c:	mov	r2, #64	; 0x40
   10810:	ldr	r1, [pc, #768]	; 10b18 <abort@plt+0x4c0>
   10814:	mov	r0, #1
   10818:	bl	10634 <__printf_chk@plt>
   1081c:	ldr	r3, [sp, #20]
   10820:	cmp	r3, #0
   10824:	beq	109fc <abort@plt+0x3a4>
   10828:	ldr	r2, [sp, #32]
   1082c:	add	r3, r3, #8
   10830:	ldr	sl, [pc, #740]	; 10b1c <abort@plt+0x4c4>
   10834:	ldr	fp, [pc, #740]	; 10b20 <abort@plt+0x4c8>
   10838:	mov	r5, r2
   1083c:	add	r8, r2, #192	; 0xc0
   10840:	str	r3, [sp, #24]
   10844:	mov	r6, #8
   10848:	mov	r4, #2
   1084c:	b	108f8 <abort@plt+0x2a0>
   10850:	ldrd	r0, [sp]
   10854:	mov	r3, #0
   10858:	bic	r4, r0, #-268435456	; 0xf0000000
   1085c:	cmp	r1, r3
   10860:	cmpeq	r0, r4
   10864:	bne	109f4 <abort@plt+0x39c>
   10868:	ldr	r1, [pc, #692]	; 10b24 <abort@plt+0x4cc>
   1086c:	mov	r0, #1
   10870:	bl	10634 <__printf_chk@plt>
   10874:	mov	r2, #4
   10878:	mov	r3, r4
   1087c:	mov	r1, sl
   10880:	mov	r0, #1
   10884:	bl	10634 <__printf_chk@plt>
   10888:	ldrd	r2, [sp, #8]
   1088c:	orrs	r3, r2, r3
   10890:	beq	108a8 <abort@plt+0x250>
   10894:	ldr	r3, [pc, #652]	; 10b28 <abort@plt+0x4d0>
   10898:	mov	r2, #3
   1089c:	ldr	r1, [pc, #648]	; 10b2c <abort@plt+0x4d4>
   108a0:	mov	r0, #1
   108a4:	bl	10634 <__printf_chk@plt>
   108a8:	mov	r2, #28
   108ac:	mov	r1, fp
   108b0:	mov	r0, #1
   108b4:	bl	10634 <__printf_chk@plt>
   108b8:	ldr	r4, [r5]
   108bc:	mov	r3, r9
   108c0:	mov	r2, #7
   108c4:	mov	r1, sl
   108c8:	mov	r0, #1
   108cc:	add	r6, r6, r0
   108d0:	bl	10634 <__printf_chk@plt>
   108d4:	mov	r2, r4
   108d8:	ldr	r1, [pc, #592]	; 10b30 <abort@plt+0x4d8>
   108dc:	mov	r0, #1
   108e0:	bl	10634 <__printf_chk@plt>
   108e4:	ldr	r3, [sp, #24]
   108e8:	add	r5, r5, #24
   108ec:	cmp	r3, r6
   108f0:	add	r8, r8, #24
   108f4:	beq	10a00 <abort@plt+0x3a8>
   108f8:	ldr	r3, [sp, #20]
   108fc:	ldr	r7, [r8, #-192]	; 0xffffff40
   10900:	cmp	r3, r6
   10904:	bls	10afc <abort@plt+0x4a4>
   10908:	ldr	r3, [r5, #192]	; 0xc0
   1090c:	sub	r3, r3, r7
   10910:	cmp	r3, #255	; 0xff
   10914:	bhi	10b04 <abort@plt+0x4ac>
   10918:	sub	r2, r7, r4
   1091c:	ldr	r1, [pc, #528]	; 10b34 <abort@plt+0x4dc>
   10920:	mov	r0, #1
   10924:	bl	10634 <__printf_chk@plt>
   10928:	ldrd	r2, [r5, #8]
   1092c:	mov	r1, #0
   10930:	cmp	r3, r1
   10934:	bic	r9, r2, #-268435456	; 0xf0000000
   10938:	cmpeq	r2, r9
   1093c:	moveq	r4, r7
   10940:	beq	108bc <abort@plt+0x264>
   10944:	lsr	r1, r3, #24
   10948:	str	r1, [sp, #8]
   1094c:	mov	r1, #0
   10950:	str	r1, [sp, #12]
   10954:	lsr	r1, r2, #28
   10958:	str	r1, [sp]
   1095c:	ldrd	r0, [sp, #8]
   10960:	orrs	r1, r0, r1
   10964:	ldr	r1, [sp]
   10968:	orr	r1, r1, r3, lsl #4
   1096c:	lsr	r3, r3, #28
   10970:	str	r1, [sp]
   10974:	str	r3, [sp, #4]
   10978:	beq	10850 <abort@plt+0x1f8>
   1097c:	mov	r0, #40	; 0x28
   10980:	bic	r4, r1, #-268435456	; 0xf0000000
   10984:	bl	10628 <putchar@plt>
   10988:	ldrd	r0, [sp]
   1098c:	mov	r3, #0
   10990:	cmp	r1, r3
   10994:	cmpeq	r0, r4
   10998:	beq	10868 <abort@plt+0x210>
   1099c:	ldr	r7, [sp, #8]
   109a0:	ldr	r1, [pc, #380]	; 10b24 <abort@plt+0x4cc>
   109a4:	mov	r0, #1
   109a8:	bl	10634 <__printf_chk@plt>
   109ac:	mov	r3, r7
   109b0:	mov	r2, #4
   109b4:	mov	r1, sl
   109b8:	mov	r0, #1
   109bc:	bl	10634 <__printf_chk@plt>
   109c0:	mov	r2, #28
   109c4:	mov	r1, fp
   109c8:	mov	r0, #1
   109cc:	bl	10634 <__printf_chk@plt>
   109d0:	mov	r2, #7
   109d4:	b	10878 <abort@plt+0x220>
   109d8:	ldr	r3, [sp, #24]
   109dc:	add	r3, r3, #24
   109e0:	str	r3, [sp, #24]
   109e4:	b	10704 <abort@plt+0xac>
   109e8:	mov	r0, #0
   109ec:	add	sp, sp, #44	; 0x2c
   109f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109f4:	ldr	r7, [sp, #12]
   109f8:	b	109a0 <abort@plt+0x348>
   109fc:	mov	r4, #2
   10a00:	ldr	r0, [pc, #304]	; 10b38 <abort@plt+0x4e0>
   10a04:	bl	105c8 <puts@plt>
   10a08:	ldr	r3, [sp, #32]
   10a0c:	mov	ip, r3
   10a10:	ldr	lr, [r3]
   10a14:	mul	lr, lr, lr
   10a18:	add	r4, r4, #2
   10a1c:	cmp	r4, lr
   10a20:	bcc	10a84 <abort@plt+0x42c>
   10a24:	ldr	r0, [ip, #8]
   10a28:	ldr	r5, [ip, #12]
   10a2c:	ldrd	r2, [ip, #16]
   10a30:	umull	r0, r1, r0, r4
   10a34:	mla	r1, r4, r5, r1
   10a38:	cmp	r1, r3
   10a3c:	cmpeq	r0, r2
   10a40:	movhi	r1, ip
   10a44:	bhi	10a70 <abort@plt+0x418>
   10a48:	b	10a18 <abort@plt+0x3c0>
   10a4c:	ldr	r2, [r0, #32]
   10a50:	ldr	r0, [r0, #36]	; 0x24
   10a54:	add	r1, r1, #24
   10a58:	umull	r2, r3, r2, r4
   10a5c:	ldrd	r6, [r1, #16]
   10a60:	mla	r3, r4, r0, r3
   10a64:	cmp	r3, r7
   10a68:	cmpeq	r2, r6
   10a6c:	bls	10a18 <abort@plt+0x3c0>
   10a70:	ldr	r3, [r1, #24]
   10a74:	mov	r0, r1
   10a78:	mul	r3, r3, r3
   10a7c:	cmp	r4, r3
   10a80:	bcs	10a4c <abort@plt+0x3f4>
   10a84:	mov	r2, r4
   10a88:	ldr	r1, [pc, #172]	; 10b3c <abort@plt+0x4e4>
   10a8c:	ldr	r4, [pc, #172]	; 10b40 <abort@plt+0x4e8>
   10a90:	mov	r0, #1
   10a94:	bl	10634 <__printf_chk@plt>
   10a98:	ldr	r0, [sp, #36]	; 0x24
   10a9c:	bl	105a4 <free@plt>
   10aa0:	ldr	r0, [sp, #32]
   10aa4:	bl	105a4 <free@plt>
   10aa8:	ldr	r0, [r4]
   10aac:	bl	105b0 <ferror@plt>
   10ab0:	mov	r5, r0
   10ab4:	ldr	r0, [r4]
   10ab8:	bl	1064c <fclose@plt>
   10abc:	cmn	r5, r0
   10ac0:	beq	109e8 <abort@plt+0x390>
   10ac4:	ldr	r3, [pc, #60]	; 10b08 <abort@plt+0x4b0>
   10ac8:	ldr	r4, [r3]
   10acc:	bl	10610 <__errno_location@plt>
   10ad0:	ldr	r0, [r0]
   10ad4:	bl	105ec <strerror@plt>
   10ad8:	ldr	r2, [pc, #100]	; 10b44 <abort@plt+0x4ec>
   10adc:	mov	r1, #1
   10ae0:	mov	r3, r0
   10ae4:	mov	r0, r4
   10ae8:	bl	10640 <__fprintf_chk@plt>
   10aec:	mov	r0, #1
   10af0:	b	10690 <abort@plt+0x38>
   10af4:	str	sl, [sp, #20]
   10af8:	b	10804 <abort@plt+0x1ac>
   10afc:	mov	r3, #255	; 0xff
   10b00:	b	10918 <abort@plt+0x2c0>
   10b04:	bl	10658 <abort@plt>
   10b08:	andeq	r2, r2, r0, rrx
   10b0c:	muleq	r1, r8, r0
   10b10:			; <UNDEFINED> instruction: 0xf5397db1
   10b14:	ldrdeq	r1, [r1], -r0
   10b18:	strdeq	r1, [r1], -r8
   10b1c:	andeq	r1, r1, ip, ror r0
   10b20:	andeq	r1, r1, r4, lsl #1
   10b24:	andeq	r1, r1, ip, rrx
   10b28:	andeq	r1, r1, ip, lsr r1
   10b2c:	muleq	r1, r0, r0
   10b30:	andeq	r1, r1, r4, lsr #2
   10b34:	andeq	r1, r1, r4, lsl r1
   10b38:	andeq	r1, r1, r0, asr #2
   10b3c:	andeq	r1, r1, r0, ror r1
   10b40:	andeq	r2, r2, r4, rrx
   10b44:	andeq	r1, r1, ip, asr r1
   10b48:	mov	fp, #0
   10b4c:	mov	lr, #0
   10b50:	pop	{r1}		; (ldr r1, [sp], #4)
   10b54:	mov	r2, sp
   10b58:	push	{r2}		; (str r2, [sp, #-4]!)
   10b5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b60:	ldr	ip, [pc, #16]	; 10b78 <abort@plt+0x520>
   10b64:	push	{ip}		; (str ip, [sp, #-4]!)
   10b68:	ldr	r0, [pc, #12]	; 10b7c <abort@plt+0x524>
   10b6c:	ldr	r3, [pc, #12]	; 10b80 <abort@plt+0x528>
   10b70:	bl	105e0 <__libc_start_main@plt>
   10b74:	bl	10658 <abort@plt>
   10b78:	andeq	r1, r1, r0, asr #32
   10b7c:	andeq	r0, r1, r4, ror #12
   10b80:	andeq	r0, r1, r0, ror #31
   10b84:	ldr	r3, [pc, #20]	; 10ba0 <abort@plt+0x548>
   10b88:	ldr	r2, [pc, #20]	; 10ba4 <abort@plt+0x54c>
   10b8c:	add	r3, pc, r3
   10b90:	ldr	r2, [r3, r2]
   10b94:	cmp	r2, #0
   10b98:	bxeq	lr
   10b9c:	b	105f8 <__gmon_start__@plt>
   10ba0:	andeq	r1, r1, ip, ror #8
   10ba4:	andeq	r0, r0, r4, asr r0
   10ba8:	ldr	r3, [pc, #28]	; 10bcc <abort@plt+0x574>
   10bac:	ldr	r0, [pc, #28]	; 10bd0 <abort@plt+0x578>
   10bb0:	sub	r3, r3, r0
   10bb4:	cmp	r3, #6
   10bb8:	bxls	lr
   10bbc:	ldr	r3, [pc, #16]	; 10bd4 <abort@plt+0x57c>
   10bc0:	cmp	r3, #0
   10bc4:	bxeq	lr
   10bc8:	bx	r3
   10bcc:	andeq	r2, r2, r3, rrx
   10bd0:	andeq	r2, r2, r0, rrx
   10bd4:	andeq	r0, r0, r0
   10bd8:	ldr	r1, [pc, #36]	; 10c04 <abort@plt+0x5ac>
   10bdc:	ldr	r0, [pc, #36]	; 10c08 <abort@plt+0x5b0>
   10be0:	sub	r1, r1, r0
   10be4:	asr	r1, r1, #2
   10be8:	add	r1, r1, r1, lsr #31
   10bec:	asrs	r1, r1, #1
   10bf0:	bxeq	lr
   10bf4:	ldr	r3, [pc, #16]	; 10c0c <abort@plt+0x5b4>
   10bf8:	cmp	r3, #0
   10bfc:	bxeq	lr
   10c00:	bx	r3
   10c04:	andeq	r2, r2, r0, rrx
   10c08:	andeq	r2, r2, r0, rrx
   10c0c:	andeq	r0, r0, r0
   10c10:	push	{r4, lr}
   10c14:	ldr	r4, [pc, #24]	; 10c34 <abort@plt+0x5dc>
   10c18:	ldrb	r3, [r4]
   10c1c:	cmp	r3, #0
   10c20:	popne	{r4, pc}
   10c24:	bl	10ba8 <abort@plt+0x550>
   10c28:	mov	r3, #1
   10c2c:	strb	r3, [r4]
   10c30:	pop	{r4, pc}
   10c34:	andeq	r2, r2, r8, rrx
   10c38:	ldr	r0, [pc, #40]	; 10c68 <abort@plt+0x610>
   10c3c:	ldr	r3, [r0]
   10c40:	cmp	r3, #0
   10c44:	bne	10c4c <abort@plt+0x5f4>
   10c48:	b	10bd8 <abort@plt+0x580>
   10c4c:	ldr	r3, [pc, #24]	; 10c6c <abort@plt+0x614>
   10c50:	cmp	r3, #0
   10c54:	beq	10c48 <abort@plt+0x5f0>
   10c58:	push	{r4, lr}
   10c5c:	blx	r3
   10c60:	pop	{r4, lr}
   10c64:	b	10bd8 <abort@plt+0x580>
   10c68:	andeq	r1, r2, r4, lsl pc
   10c6c:	andeq	r0, r0, r0
   10c70:	push	{r4, lr}
   10c74:	bl	105d4 <malloc@plt>
   10c78:	cmp	r0, #0
   10c7c:	popne	{r4, pc}
   10c80:	ldr	r3, [pc, #24]	; 10ca0 <abort@plt+0x648>
   10c84:	mov	r2, #26
   10c88:	mov	r1, #1
   10c8c:	ldr	r3, [r3]
   10c90:	ldr	r0, [pc, #12]	; 10ca4 <abort@plt+0x64c>
   10c94:	bl	105bc <fwrite@plt>
   10c98:	mov	r0, #1
   10c9c:	bl	10604 <exit@plt>
   10ca0:	andeq	r2, r2, r0, rrx
   10ca4:	andeq	r1, r1, r0, asr r0
   10ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cac:	mov	r5, #0
   10cb0:	bic	r8, r0, #-268435456	; 0xf0000000
   10cb4:	cmp	r1, r5
   10cb8:	cmpeq	r0, r8
   10cbc:	sub	sp, sp, #12
   10cc0:	mov	r9, r2
   10cc4:	mov	fp, r3
   10cc8:	beq	10d48 <abort@plt+0x6f0>
   10ccc:	lsr	r6, r1, #24
   10cd0:	mov	r7, #0
   10cd4:	lsr	r4, r0, #28
   10cd8:	orrs	r3, r6, r7
   10cdc:	orr	r4, r4, r1, lsl #4
   10ce0:	lsr	r5, r1, #28
   10ce4:	bne	10d70 <abort@plt+0x718>
   10ce8:	mov	r3, #0
   10cec:	bic	sl, r4, #-268435456	; 0xf0000000
   10cf0:	cmp	r5, r3
   10cf4:	cmpeq	r4, sl
   10cf8:	mov	r2, sl
   10cfc:	bne	10df0 <abort@plt+0x798>
   10d00:	cmn	r9, #1
   10d04:	bne	10e1c <abort@plt+0x7c4>
   10d08:	mov	r3, sl
   10d0c:	mov	r2, #7
   10d10:	ldr	r1, [pc, #320]	; 10e58 <abort@plt+0x800>
   10d14:	mov	r0, #1
   10d18:	bl	10634 <__printf_chk@plt>
   10d1c:	mov	r2, #28
   10d20:	ldr	r1, [pc, #308]	; 10e5c <abort@plt+0x804>
   10d24:	mov	r0, #1
   10d28:	bl	10634 <__printf_chk@plt>
   10d2c:	mov	r2, #7
   10d30:	mov	r3, r8
   10d34:	ldr	r1, [pc, #284]	; 10e58 <abort@plt+0x800>
   10d38:	mov	r0, #1
   10d3c:	add	sp, sp, #12
   10d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d44:	b	10634 <__printf_chk@plt>
   10d48:	cmp	r2, #0
   10d4c:	moveq	r2, #7
   10d50:	beq	10d30 <abort@plt+0x6d8>
   10d54:	ldr	r1, [pc, #260]	; 10e60 <abort@plt+0x808>
   10d58:	mov	r0, #1
   10d5c:	bl	10634 <__printf_chk@plt>
   10d60:	sub	r2, fp, #1
   10d64:	and	r2, r2, #3
   10d68:	add	r2, r2, #1
   10d6c:	b	10d30 <abort@plt+0x6d8>
   10d70:	mov	r0, #40	; 0x28
   10d74:	bl	10628 <putchar@plt>
   10d78:	mov	r3, #0
   10d7c:	bic	sl, r4, #-268435456	; 0xf0000000
   10d80:	cmp	r5, r3
   10d84:	cmpeq	r4, sl
   10d88:	mov	r2, sl
   10d8c:	beq	10e38 <abort@plt+0x7e0>
   10d90:	mov	r3, r6
   10d94:	cmn	r9, #2
   10d98:	moveq	r2, #7
   10d9c:	bne	10df8 <abort@plt+0x7a0>
   10da0:	ldr	r1, [pc, #176]	; 10e58 <abort@plt+0x800>
   10da4:	mov	r0, #1
   10da8:	bl	10634 <__printf_chk@plt>
   10dac:	mov	r2, #28
   10db0:	ldr	r1, [pc, #164]	; 10e5c <abort@plt+0x804>
   10db4:	mov	r0, #1
   10db8:	bl	10634 <__printf_chk@plt>
   10dbc:	mov	r2, #7
   10dc0:	mov	r3, sl
   10dc4:	ldr	r1, [pc, #140]	; 10e58 <abort@plt+0x800>
   10dc8:	mov	r0, #1
   10dcc:	bl	10634 <__printf_chk@plt>
   10dd0:	orrs	r3, r6, r7
   10dd4:	beq	10d1c <abort@plt+0x6c4>
   10dd8:	add	r2, r9, #3
   10ddc:	ldr	r3, [pc, #128]	; 10e64 <abort@plt+0x80c>
   10de0:	ldr	r1, [pc, #128]	; 10e68 <abort@plt+0x810>
   10de4:	mov	r0, #1
   10de8:	bl	10634 <__printf_chk@plt>
   10dec:	b	10d1c <abort@plt+0x6c4>
   10df0:	mov	r3, r7
   10df4:	b	10d94 <abort@plt+0x73c>
   10df8:	ldr	r1, [pc, #96]	; 10e60 <abort@plt+0x808>
   10dfc:	mov	r0, #1
   10e00:	str	r3, [sp, #4]
   10e04:	bl	10634 <__printf_chk@plt>
   10e08:	sub	r2, fp, #1
   10e0c:	and	r2, r2, #3
   10e10:	add	r2, r2, #1
   10e14:	ldr	r3, [sp, #4]
   10e18:	b	10da0 <abort@plt+0x748>
   10e1c:	ldr	r1, [pc, #60]	; 10e60 <abort@plt+0x808>
   10e20:	mov	r0, #1
   10e24:	bl	10634 <__printf_chk@plt>
   10e28:	sub	r2, fp, #1
   10e2c:	and	r2, r2, #3
   10e30:	add	r2, r2, #1
   10e34:	b	10dc0 <abort@plt+0x768>
   10e38:	cmn	r9, #1
   10e3c:	bne	10e1c <abort@plt+0x7c4>
   10e40:	mov	r3, sl
   10e44:	mov	r2, #7
   10e48:	ldr	r1, [pc, #8]	; 10e58 <abort@plt+0x800>
   10e4c:	mov	r0, #1
   10e50:	bl	10634 <__printf_chk@plt>
   10e54:	b	10dd8 <abort@plt+0x780>
   10e58:	andeq	r1, r1, ip, ror r0
   10e5c:	andeq	r1, r1, r4, lsl #1
   10e60:	andeq	r1, r1, ip, rrx
   10e64:	andeq	r1, r1, ip, lsr r1
   10e68:	muleq	r1, r0, r0
   10e6c:	cmp	r3, #0
   10e70:	cmpeq	r2, #0
   10e74:	bne	10e8c <abort@plt+0x834>
   10e78:	cmp	r1, #0
   10e7c:	cmpeq	r0, #0
   10e80:	mvnne	r1, #0
   10e84:	mvnne	r0, #0
   10e88:	b	10ea8 <abort@plt+0x850>
   10e8c:	sub	sp, sp, #8
   10e90:	push	{sp, lr}
   10e94:	bl	10eb8 <abort@plt+0x860>
   10e98:	ldr	lr, [sp, #4]
   10e9c:	add	sp, sp, #8
   10ea0:	pop	{r2, r3}
   10ea4:	bx	lr
   10ea8:	push	{r1, lr}
   10eac:	mov	r0, #8
   10eb0:	bl	1058c <raise@plt>
   10eb4:	pop	{r1, pc}
   10eb8:	cmp	r1, r3
   10ebc:	push	{r4, r5, r6, r7, r8, r9, lr}
   10ec0:	cmpeq	r0, r2
   10ec4:	mov	r4, r0
   10ec8:	mov	r5, r1
   10ecc:	ldr	r9, [sp, #28]
   10ed0:	movcc	r0, #0
   10ed4:	movcc	r1, #0
   10ed8:	bcc	10fd0 <abort@plt+0x978>
   10edc:	cmp	r3, #0
   10ee0:	clzeq	ip, r2
   10ee4:	clzne	ip, r3
   10ee8:	addeq	ip, ip, #32
   10eec:	cmp	r5, #0
   10ef0:	clzeq	r1, r4
   10ef4:	addeq	r1, r1, #32
   10ef8:	clzne	r1, r5
   10efc:	sub	ip, ip, r1
   10f00:	sub	lr, ip, #32
   10f04:	lsl	r7, r3, ip
   10f08:	rsb	r8, ip, #32
   10f0c:	orr	r7, r7, r2, lsl lr
   10f10:	orr	r7, r7, r2, lsr r8
   10f14:	lsl	r6, r2, ip
   10f18:	cmp	r5, r7
   10f1c:	cmpeq	r4, r6
   10f20:	movcc	r0, #0
   10f24:	movcc	r1, #0
   10f28:	bcc	10f44 <abort@plt+0x8ec>
   10f2c:	mov	r3, #1
   10f30:	subs	r4, r4, r6
   10f34:	lsl	r1, r3, lr
   10f38:	lsl	r0, r3, ip
   10f3c:	orr	r1, r1, r3, lsr r8
   10f40:	sbc	r5, r5, r7
   10f44:	cmp	ip, #0
   10f48:	beq	10fd0 <abort@plt+0x978>
   10f4c:	lsrs	r3, r7, #1
   10f50:	rrx	r2, r6
   10f54:	mov	r6, ip
   10f58:	b	10f7c <abort@plt+0x924>
   10f5c:	subs	r4, r4, r2
   10f60:	sbc	r5, r5, r3
   10f64:	adds	r4, r4, r4
   10f68:	adc	r5, r5, r5
   10f6c:	adds	r4, r4, #1
   10f70:	adc	r5, r5, #0
   10f74:	subs	r6, r6, #1
   10f78:	beq	10f98 <abort@plt+0x940>
   10f7c:	cmp	r5, r3
   10f80:	cmpeq	r4, r2
   10f84:	bcs	10f5c <abort@plt+0x904>
   10f88:	adds	r4, r4, r4
   10f8c:	adc	r5, r5, r5
   10f90:	subs	r6, r6, #1
   10f94:	bne	10f7c <abort@plt+0x924>
   10f98:	lsr	r6, r4, ip
   10f9c:	lsr	r7, r5, ip
   10fa0:	orr	r6, r6, r5, lsl r8
   10fa4:	adds	r2, r0, r4
   10fa8:	orr	r6, r6, r5, lsr lr
   10fac:	adc	r3, r1, r5
   10fb0:	lsl	r1, r7, ip
   10fb4:	orr	r1, r1, r6, lsl lr
   10fb8:	lsl	r0, r6, ip
   10fbc:	orr	r1, r1, r6, lsr r8
   10fc0:	subs	r0, r2, r0
   10fc4:	mov	r4, r6
   10fc8:	mov	r5, r7
   10fcc:	sbc	r1, r3, r1
   10fd0:	cmp	r9, #0
   10fd4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   10fd8:	strd	r4, [r9]
   10fdc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10fe0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fe4:	mov	r7, r0
   10fe8:	ldr	r6, [pc, #72]	; 11038 <abort@plt+0x9e0>
   10fec:	ldr	r5, [pc, #72]	; 1103c <abort@plt+0x9e4>
   10ff0:	add	r6, pc, r6
   10ff4:	add	r5, pc, r5
   10ff8:	sub	r6, r6, r5
   10ffc:	mov	r8, r1
   11000:	mov	r9, r2
   11004:	bl	1056c <raise@plt-0x20>
   11008:	asrs	r6, r6, #2
   1100c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11010:	mov	r4, #0
   11014:	add	r4, r4, #1
   11018:	ldr	r3, [r5], #4
   1101c:	mov	r2, r9
   11020:	mov	r1, r8
   11024:	mov	r0, r7
   11028:	blx	r3
   1102c:	cmp	r6, r4
   11030:	bne	11014 <abort@plt+0x9bc>
   11034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11038:	andeq	r0, r1, r8, lsl pc
   1103c:	andeq	r0, r1, r0, lsl pc
   11040:	bx	lr

Disassembly of section .fini:

00011044 <.fini>:
   11044:	push	{r3, lr}
   11048:	pop	{r3, pc}
