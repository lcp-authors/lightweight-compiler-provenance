
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010d8c <.init>:
   10d8c:	push	{r3, lr}
   10d90:	bl	11c78 <Mat_VarReadNextInfo@plt+0xc50>
   10d94:	pop	{r3, pc}

Disassembly of section .plt:

00010d98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10d98:	push	{lr}		; (str lr, [sp, #-4]!)
   10d9c:	ldr	lr, [pc, #4]	; 10da8 <Mat_VarGetNumberOfFields@plt-0x4>
   10da0:	add	lr, pc, lr
   10da4:	ldr	pc, [lr, #8]!
   10da8:	andeq	r4, r1, r8, asr r2

00010dac <Mat_VarGetNumberOfFields@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #600]!	; 0x258

00010db8 <Mat_SetVerbose@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #592]!	; 0x250

00010dc4 <raise@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #584]!	; 0x248

00010dd0 <Mat_LogClose@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #576]!	; 0x240

00010ddc <Mat_VarReadNext@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #568]!	; 0x238

00010de8 <strcmp@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #560]!	; 0x230

00010df4 <Mat_Open@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #552]!	; 0x228

00010e00 <strtol@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #544]!	; 0x220

00010e0c <printf@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #536]!	; 0x218

00010e18 <Mat_VarGetCells@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #528]!	; 0x210

00010e24 <Mat_VarGetCell@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #520]!	; 0x208

00010e30 <Mat_VarCreate@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #512]!	; 0x200

00010e3c <free@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #504]!	; 0x1f8

00010e48 <Mat_Warning@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #496]!	; 0x1f0

00010e54 <Mat_VarReadDataLinear@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e60 <Mat_Message@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #480]!	; 0x1e0

00010e6c <Mat_VarReadData@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #472]!	; 0x1d8

00010e78 <Mat_VarReadDataAll@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #20, 20	; 0x14000
   10e80:	ldr	pc, [ip, #464]!	; 0x1d0

00010e84 <Mat_VarReadInfo@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #20, 20	; 0x14000
   10e8c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e90 <fwrite@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #20, 20	; 0x14000
   10e98:	ldr	pc, [ip, #448]!	; 0x1c0

00010e9c <Mat_VarGetStructFieldnames@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #20, 20	; 0x14000
   10ea4:	ldr	pc, [ip, #440]!	; 0x1b8

00010ea8 <floor@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #20, 20	; 0x14000
   10eb0:	ldr	pc, [ip, #432]!	; 0x1b0

00010eb4 <getenv@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #20, 20	; 0x14000
   10ebc:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec0 <puts@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #20, 20	; 0x14000
   10ec8:	ldr	pc, [ip, #416]!	; 0x1a0

00010ecc <malloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #20, 20	; 0x14000
   10ed4:	ldr	pc, [ip, #408]!	; 0x198

00010ed8 <log10@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #20, 20	; 0x14000
   10ee0:	ldr	pc, [ip, #400]!	; 0x190

00010ee4 <__libc_start_main@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #20, 20	; 0x14000
   10eec:	ldr	pc, [ip, #392]!	; 0x188

00010ef0 <__gmon_start__@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #20, 20	; 0x14000
   10ef8:	ldr	pc, [ip, #384]!	; 0x180

00010efc <exit@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #20, 20	; 0x14000
   10f04:	ldr	pc, [ip, #376]!	; 0x178

00010f08 <Mat_VarFree@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #20, 20	; 0x14000
   10f10:	ldr	pc, [ip, #368]!	; 0x170

00010f14 <Mat_SizeOf@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #20, 20	; 0x14000
   10f1c:	ldr	pc, [ip, #360]!	; 0x168

00010f20 <strlen@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #20, 20	; 0x14000
   10f28:	ldr	pc, [ip, #352]!	; 0x160

00010f2c <strchr@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #20, 20	; 0x14000
   10f34:	ldr	pc, [ip, #344]!	; 0x158

00010f38 <warnx@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #20, 20	; 0x14000
   10f40:	ldr	pc, [ip, #336]!	; 0x150

00010f44 <fprintf@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #20, 20	; 0x14000
   10f4c:	ldr	pc, [ip, #328]!	; 0x148

00010f50 <Mat_GetLibraryVersion@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #20, 20	; 0x14000
   10f58:	ldr	pc, [ip, #320]!	; 0x140

00010f5c <Mat_VarPrint@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #20, 20	; 0x14000
   10f64:	ldr	pc, [ip, #312]!	; 0x138

00010f68 <memset@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #20, 20	; 0x14000
   10f70:	ldr	pc, [ip, #304]!	; 0x130

00010f74 <putchar@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #20, 20	; 0x14000
   10f7c:	ldr	pc, [ip, #296]!	; 0x128

00010f80 <Mat_Close@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #20, 20	; 0x14000
   10f88:	ldr	pc, [ip, #288]!	; 0x120

00010f8c <Mat_Critical@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #20, 20	; 0x14000
   10f94:	ldr	pc, [ip, #280]!	; 0x118

00010f98 <ceil@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #20, 20	; 0x14000
   10fa0:	ldr	pc, [ip, #272]!	; 0x110

00010fa4 <Mat_LogInitFunc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #20, 20	; 0x14000
   10fac:	ldr	pc, [ip, #264]!	; 0x108

00010fb0 <Mat_VerbMessage@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #20, 20	; 0x14000
   10fb8:	ldr	pc, [ip, #256]!	; 0x100

00010fbc <Mat_VarGetCellsLinear@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #20, 20	; 0x14000
   10fc4:	ldr	pc, [ip, #248]!	; 0xf8

00010fc8 <sprintf@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #20, 20	; 0x14000
   10fd0:	ldr	pc, [ip, #240]!	; 0xf0

00010fd4 <Mat_Help@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #20, 20	; 0x14000
   10fdc:	ldr	pc, [ip, #232]!	; 0xe8

00010fe0 <Mat_VarGetStructFieldByName@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #20, 20	; 0x14000
   10fe8:	ldr	pc, [ip, #224]!	; 0xe0

00010fec <Mat_SizeOfClass@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #20, 20	; 0x14000
   10ff4:	ldr	pc, [ip, #216]!	; 0xd8

00010ff8 <Mat_VarGetSize@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #20, 20	; 0x14000
   11000:	ldr	pc, [ip, #208]!	; 0xd0

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #20, 20	; 0x14000
   1100c:	ldr	pc, [ip, #200]!	; 0xc8

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #20, 20	; 0x14000
   11018:	ldr	pc, [ip, #192]!	; 0xc0

0001101c <Mat_VarDuplicate@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #20, 20	; 0x14000
   11024:	ldr	pc, [ip, #184]!	; 0xb8

00011028 <Mat_VarReadNextInfo@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #20, 20	; 0x14000
   11030:	ldr	pc, [ip, #176]!	; 0xb0

Disassembly of section .text:

00011038 <getopt@@Base-0x2da0>:
   11038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1103c:	sub	sp, sp, #68	; 0x44
   11040:	mov	fp, r0
   11044:	mov	r4, r1
   11048:	add	r2, sp, #60	; 0x3c
   1104c:	add	r1, sp, #56	; 0x38
   11050:	add	r0, sp, #52	; 0x34
   11054:	bl	10f50 <Mat_GetLibraryVersion@plt>
   11058:	ldr	r6, [sp, #52]	; 0x34
   1105c:	cmp	r6, #1
   11060:	bne	11070 <Mat_VarReadNextInfo@plt+0x48>
   11064:	ldr	r3, [sp, #56]	; 0x38
   11068:	cmp	r3, #5
   1106c:	beq	11098 <Mat_VarReadNextInfo@plt+0x70>
   11070:	ldr	r3, [pc, #2888]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11074:	mov	r2, #55	; 0x37
   11078:	mov	r1, #1
   1107c:	ldr	r3, [r3]
   11080:	ldr	r0, [pc, #2876]	; 11bc4 <Mat_VarReadNextInfo@plt+0xb9c>
   11084:	bl	10e90 <fwrite@plt>
   11088:	mov	r6, #1
   1108c:	mov	r0, r6
   11090:	add	sp, sp, #68	; 0x44
   11094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11098:	ldr	r3, [sp, #60]	; 0x3c
   1109c:	cmp	r3, #15
   110a0:	bne	11070 <Mat_VarReadNextInfo@plt+0x48>
   110a4:	ldr	r1, [pc, #2844]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba0>
   110a8:	ldr	r0, [pc, #2844]	; 11bcc <Mat_VarReadNextInfo@plt+0xba4>
   110ac:	bl	10fa4 <Mat_LogInitFunc@plt>
   110b0:	ldr	r9, [pc, #2840]	; 11bd0 <Mat_VarReadNextInfo@plt+0xba8>
   110b4:	ldr	r2, [pc, #2840]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   110b8:	ldr	r7, [pc, #2840]	; 11bd8 <Mat_VarReadNextInfo@plt+0xbb0>
   110bc:	ldr	r3, [pc, #2840]	; 11bdc <Mat_VarReadNextInfo@plt+0xbb4>
   110c0:	mov	r5, #0
   110c4:	str	r3, [r2, #12]
   110c8:	str	r5, [sp]
   110cc:	ldr	r3, [pc, #2828]	; 11be0 <Mat_VarReadNextInfo@plt+0xbb8>
   110d0:	ldr	r2, [pc, #2828]	; 11be4 <Mat_VarReadNextInfo@plt+0xbbc>
   110d4:	mov	r1, r4
   110d8:	mov	r0, fp
   110dc:	bl	13df8 <getopt_long@@Base>
   110e0:	cmn	r0, #1
   110e4:	beq	111cc <Mat_VarReadNextInfo@plt+0x1a4>
   110e8:	cmp	r0, #100	; 0x64
   110ec:	beq	11144 <Mat_VarReadNextInfo@plt+0x11c>
   110f0:	ble	1111c <Mat_VarReadNextInfo@plt+0xf4>
   110f4:	cmp	r0, #104	; 0x68
   110f8:	beq	111ac <Mat_VarReadNextInfo@plt+0x184>
   110fc:	cmp	r0, #118	; 0x76
   11100:	beq	1119c <Mat_VarReadNextInfo@plt+0x174>
   11104:	cmp	r0, #102	; 0x66
   11108:	beq	11170 <Mat_VarReadNextInfo@plt+0x148>
   1110c:	mov	r1, r0
   11110:	ldr	r0, [pc, #2768]	; 11be8 <Mat_VarReadNextInfo@plt+0xbc0>
   11114:	bl	10e0c <printf@plt>
   11118:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   1111c:	cmp	r0, #72	; 0x48
   11120:	beq	11160 <Mat_VarReadNextInfo@plt+0x138>
   11124:	cmp	r0, #86	; 0x56
   11128:	bne	1110c <Mat_VarReadNextInfo@plt+0xe4>
   1112c:	ldr	r2, [pc, #2744]	; 11bec <Mat_VarReadNextInfo@plt+0xbc4>
   11130:	ldr	r1, [pc, #2708]	; 11bcc <Mat_VarReadNextInfo@plt+0xba4>
   11134:	ldr	r0, [pc, #2740]	; 11bf0 <Mat_VarReadNextInfo@plt+0xbc8>
   11138:	bl	10e0c <printf@plt>
   1113c:	mov	r0, #0
   11140:	bl	10efc <exit@plt>
   11144:	ldr	r2, [pc, #2696]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   11148:	mov	r3, #1
   1114c:	mov	r0, r3
   11150:	ldr	r1, [pc, #2716]	; 11bf4 <Mat_VarReadNextInfo@plt+0xbcc>
   11154:	str	r3, [r2, #8]
   11158:	bl	10fb0 <Mat_VerbMessage@plt>
   1115c:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   11160:	ldr	r0, [pc, #2704]	; 11bf8 <Mat_VarReadNextInfo@plt+0xbd0>
   11164:	bl	10fd4 <Mat_Help@plt>
   11168:	mov	r0, #0
   1116c:	bl	10efc <exit@plt>
   11170:	ldr	r8, [r9]
   11174:	cmp	r8, #0
   11178:	beq	11a5c <Mat_VarReadNextInfo@plt+0xa34>
   1117c:	ldr	r1, [pc, #2680]	; 11bfc <Mat_VarReadNextInfo@plt+0xbd4>
   11180:	mov	r0, r8
   11184:	bl	10de8 <strcmp@plt>
   11188:	cmp	r0, #0
   1118c:	bne	111bc <Mat_VarReadNextInfo@plt+0x194>
   11190:	ldr	r3, [pc, #2620]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   11194:	str	r7, [r3, #12]
   11198:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   1119c:	mov	r1, r5
   111a0:	mov	r0, #1
   111a4:	bl	10db8 <Mat_SetVerbose@plt>
   111a8:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   111ac:	ldr	r2, [pc, #2592]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   111b0:	mov	r3, #1
   111b4:	str	r3, [r2]
   111b8:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   111bc:	mov	r1, r8
   111c0:	ldr	r0, [pc, #2616]	; 11c00 <Mat_VarReadNextInfo@plt+0xbd8>
   111c4:	bl	10e48 <Mat_Warning@plt>
   111c8:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   111cc:	ldr	r5, [pc, #2608]	; 11c04 <Mat_VarReadNextInfo@plt+0xbdc>
   111d0:	ldr	r3, [r5]
   111d4:	sub	r2, fp, r3
   111d8:	cmp	r2, #0
   111dc:	ble	11ae8 <Mat_VarReadNextInfo@plt+0xac0>
   111e0:	ldr	r0, [r4, r3, lsl #2]
   111e4:	mov	r1, #0
   111e8:	bl	10df4 <Mat_Open@plt>
   111ec:	subs	r3, r0, #0
   111f0:	str	r3, [sp, #40]	; 0x28
   111f4:	ldr	r3, [r5]
   111f8:	beq	11bb0 <Mat_VarReadNextInfo@plt+0xb88>
   111fc:	add	r2, r3, #1
   11200:	cmp	fp, r2
   11204:	str	r2, [sp, #32]
   11208:	str	r2, [r5]
   1120c:	ble	119a4 <Mat_VarReadNextInfo@plt+0x97c>
   11210:	add	r3, r4, r3, lsl #2
   11214:	str	r3, [sp, #24]
   11218:	str	r6, [sp, #36]	; 0x24
   1121c:	str	fp, [sp, #44]	; 0x2c
   11220:	ldr	r3, [sp, #24]
   11224:	ldr	r6, [pc, #2524]	; 11c08 <Mat_VarReadNextInfo@plt+0xbe0>
   11228:	mov	r5, #0
   1122c:	ldr	r4, [r3, #4]
   11230:	mov	r1, #40	; 0x28
   11234:	mov	r0, r4
   11238:	bl	10f2c <strchr@plt>
   1123c:	cmp	r0, #0
   11240:	beq	1125c <Mat_VarReadNextInfo@plt+0x234>
   11244:	clz	r3, r5
   11248:	lsr	r3, r3, #5
   1124c:	cmp	r0, r5
   11250:	orrcc	r3, r3, #1
   11254:	cmp	r3, #0
   11258:	movne	r5, r0
   1125c:	ldrb	r1, [r6, #1]!
   11260:	cmp	r1, #0
   11264:	bne	11234 <Mat_VarReadNextInfo@plt+0x20c>
   11268:	cmp	r5, #0
   1126c:	beq	118f8 <Mat_VarReadNextInfo@plt+0x8d0>
   11270:	cmp	r4, r5
   11274:	moveq	r4, #0
   11278:	ldrbne	r4, [r5]
   1127c:	strbne	r1, [r5]
   11280:	ldr	r3, [sp, #24]
   11284:	ldr	r6, [sp, #40]	; 0x28
   11288:	ldr	r1, [r3, #4]!
   1128c:	mov	r0, r6
   11290:	str	r3, [sp, #24]
   11294:	bl	10e84 <Mat_VarReadInfo@plt>
   11298:	subs	sl, r0, #0
   1129c:	beq	11a8c <Mat_VarReadNextInfo@plt+0xa64>
   112a0:	ldr	r3, [pc, #2348]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   112a4:	ldr	r3, [r3, #8]
   112a8:	cmp	r3, #0
   112ac:	beq	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   112b0:	cmp	r4, #0
   112b4:	bne	11308 <Mat_VarReadNextInfo@plt+0x2e0>
   112b8:	mov	r1, sl
   112bc:	mov	r0, r6
   112c0:	bl	10e78 <Mat_VarReadDataAll@plt>
   112c4:	ldr	r3, [pc, #2312]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   112c8:	mov	r0, sl
   112cc:	ldr	r3, [r3, #12]
   112d0:	blx	r3
   112d4:	mov	r0, sl
   112d8:	bl	10f08 <Mat_VarFree@plt>
   112dc:	ldr	r3, [sp, #32]
   112e0:	ldr	r2, [sp, #44]	; 0x2c
   112e4:	add	r3, r3, #1
   112e8:	cmp	r2, r3
   112ec:	str	r3, [sp, #32]
   112f0:	bne	11220 <Mat_VarReadNextInfo@plt+0x1f8>
   112f4:	ldr	r0, [sp, #40]	; 0x28
   112f8:	bl	10f80 <Mat_Close@plt>
   112fc:	mov	r6, #0
   11300:	bl	10dd0 <Mat_LogClose@plt>
   11304:	b	1108c <Mat_VarReadNextInfo@plt+0x64>
   11308:	ldr	r6, [pc, #2296]	; 11c08 <Mat_VarReadNextInfo@plt+0xbe0>
   1130c:	mov	r9, #0
   11310:	mov	r1, #40	; 0x28
   11314:	strb	r4, [r5]
   11318:	mov	r0, r5
   1131c:	bl	10f2c <strchr@plt>
   11320:	cmp	r0, #0
   11324:	beq	11340 <Mat_VarReadNextInfo@plt+0x318>
   11328:	clz	r3, r9
   1132c:	lsr	r3, r3, #5
   11330:	cmp	r0, r9
   11334:	orrcc	r3, r3, #1
   11338:	cmp	r3, #0
   1133c:	movne	r9, r0
   11340:	ldrb	r1, [r6, #1]!
   11344:	cmp	r1, #0
   11348:	bne	11318 <Mat_VarReadNextInfo@plt+0x2f0>
   1134c:	cmp	r9, #0
   11350:	moveq	r9, r5
   11354:	ldrb	r3, [r9]
   11358:	str	r3, [sp, #16]
   1135c:	ldr	r3, [sp, #16]
   11360:	cmp	r3, #40	; 0x28
   11364:	beq	11694 <Mat_VarReadNextInfo@plt+0x66c>
   11368:	ldr	r3, [sp, #16]
   1136c:	cmp	r3, #46	; 0x2e
   11370:	beq	11590 <Mat_VarReadNextInfo@plt+0x568>
   11374:	ldr	r3, [sp, #16]
   11378:	cmp	r3, #123	; 0x7b
   1137c:	bne	1135c <Mat_VarReadNextInfo@plt+0x334>
   11380:	ldr	r3, [sl, #16]
   11384:	cmp	r3, #1
   11388:	bne	11b34 <Mat_VarReadNextInfo@plt+0xb0c>
   1138c:	add	r5, r9, #1
   11390:	mov	r1, #125	; 0x7d
   11394:	mov	r0, r5
   11398:	bl	10f2c <strchr@plt>
   1139c:	ldr	r8, [pc, #2148]	; 11c08 <Mat_VarReadNextInfo@plt+0xbe0>
   113a0:	mov	r4, #0
   113a4:	mov	r1, #40	; 0x28
   113a8:	mov	r6, r0
   113ac:	add	r7, r0, #1
   113b0:	mov	r0, r7
   113b4:	bl	10f2c <strchr@plt>
   113b8:	cmp	r0, #0
   113bc:	beq	113d8 <Mat_VarReadNextInfo@plt+0x3b0>
   113c0:	clz	r3, r4
   113c4:	lsr	r3, r3, #5
   113c8:	cmp	r0, r4
   113cc:	orrcc	r3, r3, #1
   113d0:	cmp	r3, #0
   113d4:	movne	r4, r0
   113d8:	ldrb	r1, [r8, #1]!
   113dc:	cmp	r1, #0
   113e0:	bne	113b0 <Mat_VarReadNextInfo@plt+0x388>
   113e4:	cmp	r4, #0
   113e8:	moveq	r4, r7
   113ec:	ldrb	r3, [r4]
   113f0:	cmp	r3, #0
   113f4:	strne	r3, [sp, #16]
   113f8:	ldreq	r3, [sp, #36]	; 0x24
   113fc:	movne	r3, #0
   11400:	movne	r2, #0
   11404:	str	r3, [sp, #20]
   11408:	strbne	r2, [r4]
   1140c:	mov	r3, r5
   11410:	ldr	r5, [sp, #36]	; 0x24
   11414:	b	11424 <Mat_VarReadNextInfo@plt+0x3fc>
   11418:	ldrb	r2, [r3], #1
   1141c:	cmp	r2, #44	; 0x2c
   11420:	addeq	r5, r5, #1
   11424:	cmp	r6, r3
   11428:	bne	11418 <Mat_VarReadNextInfo@plt+0x3f0>
   1142c:	lsl	fp, r5, #2
   11430:	mov	r0, fp
   11434:	bl	10ecc <malloc@plt>
   11438:	mov	r8, r0
   1143c:	mov	r0, fp
   11440:	bl	10ecc <malloc@plt>
   11444:	mov	r7, r0
   11448:	mov	r0, fp
   1144c:	bl	10ecc <malloc@plt>
   11450:	mov	fp, r6
   11454:	mov	r3, #0
   11458:	mov	r2, #1
   1145c:	mov	r6, r0
   11460:	mov	r1, #0
   11464:	str	r1, [r8, r3, lsl #2]
   11468:	str	r2, [r7, r3, lsl #2]
   1146c:	str	r2, [r6, r3, lsl #2]
   11470:	add	r3, r3, #1
   11474:	cmp	r5, r3
   11478:	bne	11460 <Mat_VarReadNextInfo@plt+0x438>
   1147c:	mov	r0, r9
   11480:	mov	r1, fp
   11484:	mov	r3, r7
   11488:	mov	r2, r8
   1148c:	str	r6, [sp]
   11490:	bl	12798 <Mat_VarReadNextInfo@plt+0x1770>
   11494:	add	r3, sl, #32
   11498:	str	r3, [sp, #4]
   1149c:	ldr	r2, [sl, #4]
   114a0:	mov	r3, r6
   114a4:	str	r2, [sp]
   114a8:	mov	r1, r8
   114ac:	mov	r2, r7
   114b0:	mov	r0, r5
   114b4:	bl	129fc <Mat_VarReadNextInfo@plt+0x19d4>
   114b8:	subs	r9, r0, #0
   114bc:	beq	11a0c <Mat_VarReadNextInfo@plt+0x9e4>
   114c0:	cmp	r5, #1
   114c4:	beq	11828 <Mat_VarReadNextInfo@plt+0x800>
   114c8:	mov	r3, r6
   114cc:	mov	r1, r8
   114d0:	mov	r2, r7
   114d4:	mov	r0, sl
   114d8:	bl	10e18 <Mat_VarGetCells@plt>
   114dc:	ldr	r1, [sl, #32]
   114e0:	mov	r3, #0
   114e4:	str	r0, [sp, #28]
   114e8:	ldr	r2, [r6, r3, lsl #2]
   114ec:	str	r2, [r1, r3, lsl #2]
   114f0:	add	r3, r3, #1
   114f4:	cmp	r5, r3
   114f8:	bne	114e8 <Mat_VarReadNextInfo@plt+0x4c0>
   114fc:	ldr	r3, [sp, #28]
   11500:	cmp	r3, #0
   11504:	beq	11a40 <Mat_VarReadNextInfo@plt+0xa18>
   11508:	sub	r5, r3, #4
   1150c:	mov	fp, #0
   11510:	b	11524 <Mat_VarReadNextInfo@plt+0x4fc>
   11514:	ldr	r0, [r5, #4]
   11518:	bl	1101c <Mat_VarDuplicate@plt>
   1151c:	add	fp, fp, #1
   11520:	str	r0, [r5, #4]!
   11524:	cmp	r9, fp
   11528:	mov	r1, #1
   1152c:	bgt	11514 <Mat_VarReadNextInfo@plt+0x4ec>
   11530:	ldr	r3, [sp, #28]
   11534:	str	r1, [sp, #8]
   11538:	str	r3, [sp, #4]
   1153c:	ldr	r3, [sl, #32]
   11540:	mov	r2, #21
   11544:	str	r3, [sp]
   11548:	ldr	r3, [sl, #4]
   1154c:	ldr	r0, [sl, #36]	; 0x24
   11550:	bl	10e30 <Mat_VarCreate@plt>
   11554:	mov	r9, r4
   11558:	mov	r5, r0
   1155c:	mov	r0, sl
   11560:	bl	10f08 <Mat_VarFree@plt>
   11564:	mov	r0, r8
   11568:	bl	10e3c <free@plt>
   1156c:	mov	r0, r7
   11570:	bl	10e3c <free@plt>
   11574:	mov	r0, r6
   11578:	mov	sl, r5
   1157c:	bl	10e3c <free@plt>
   11580:	ldr	r3, [sp, #20]
   11584:	cmp	r3, #0
   11588:	beq	1135c <Mat_VarReadNextInfo@plt+0x334>
   1158c:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11590:	ldr	r3, [sl, #16]
   11594:	add	r5, r9, #1
   11598:	cmp	r3, #2
   1159c:	beq	11904 <Mat_VarReadNextInfo@plt+0x8dc>
   115a0:	cmp	r3, #1
   115a4:	bne	11b50 <Mat_VarReadNextInfo@plt+0xb28>
   115a8:	ldr	r1, [sl, #12]
   115ac:	ldr	r0, [sl]
   115b0:	bl	13e40 <getopt_long_only@@Base+0x24>
   115b4:	ldr	r4, [pc, #1612]	; 11c08 <Mat_VarReadNextInfo@plt+0xbe0>
   115b8:	ldr	r8, [sl, #40]	; 0x28
   115bc:	mov	r9, #0
   115c0:	mov	r1, #40	; 0x28
   115c4:	mov	r6, r0
   115c8:	mov	r0, r5
   115cc:	bl	10f2c <strchr@plt>
   115d0:	cmp	r0, #0
   115d4:	beq	115f4 <Mat_VarReadNextInfo@plt+0x5cc>
   115d8:	cmp	r0, r9
   115dc:	movcs	r3, #0
   115e0:	movcc	r3, #1
   115e4:	cmp	r9, #0
   115e8:	orreq	r3, r3, #1
   115ec:	cmp	r3, #0
   115f0:	movne	r9, r0
   115f4:	ldrb	r1, [r4, #1]!
   115f8:	cmp	r1, #0
   115fc:	bne	115c8 <Mat_VarReadNextInfo@plt+0x5a0>
   11600:	cmp	r9, #0
   11604:	beq	11818 <Mat_VarReadNextInfo@plt+0x7f0>
   11608:	cmp	r5, r9
   1160c:	ldreq	r3, [sp, #36]	; 0x24
   11610:	streq	r3, [sp, #20]
   11614:	beq	1162c <Mat_VarReadNextInfo@plt+0x604>
   11618:	ldrb	r3, [r9]
   1161c:	strb	r1, [r9]
   11620:	str	r3, [sp, #16]
   11624:	mov	r3, #0
   11628:	str	r3, [sp, #20]
   1162c:	mov	r4, #0
   11630:	b	11684 <Mat_VarReadNextInfo@plt+0x65c>
   11634:	mov	r1, r4
   11638:	mov	r0, sl
   1163c:	bl	10e24 <Mat_VarGetCell@plt>
   11640:	subs	r7, r0, #0
   11644:	beq	117e4 <Mat_VarReadNextInfo@plt+0x7bc>
   11648:	ldr	r3, [r7, #16]
   1164c:	cmp	r3, #2
   11650:	bne	117e4 <Mat_VarReadNextInfo@plt+0x7bc>
   11654:	mov	r2, #0
   11658:	mov	r1, r5
   1165c:	bl	10fe0 <Mat_VarGetStructFieldByName@plt>
   11660:	cmp	r0, #0
   11664:	beq	117fc <Mat_VarReadNextInfo@plt+0x7d4>
   11668:	mov	r1, #1
   1166c:	bl	1101c <Mat_VarDuplicate@plt>
   11670:	mov	fp, r0
   11674:	mov	r0, r7
   11678:	bl	10f08 <Mat_VarFree@plt>
   1167c:	str	fp, [r8, r4, lsl #2]
   11680:	add	r4, r4, #1
   11684:	cmp	r6, r4
   11688:	bgt	11634 <Mat_VarReadNextInfo@plt+0x60c>
   1168c:	beq	11580 <Mat_VarReadNextInfo@plt+0x558>
   11690:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11694:	add	r4, r9, #1
   11698:	mov	r1, #41	; 0x29
   1169c:	mov	r0, r4
   116a0:	bl	10f2c <strchr@plt>
   116a4:	ldr	r8, [pc, #1372]	; 11c08 <Mat_VarReadNextInfo@plt+0xbe0>
   116a8:	mov	r7, #0
   116ac:	mov	r1, #40	; 0x28
   116b0:	mov	r5, r0
   116b4:	add	r6, r0, #1
   116b8:	mov	r0, r6
   116bc:	bl	10f2c <strchr@plt>
   116c0:	cmp	r0, #0
   116c4:	beq	116e0 <Mat_VarReadNextInfo@plt+0x6b8>
   116c8:	clz	r3, r7
   116cc:	lsr	r3, r3, #5
   116d0:	cmp	r0, r7
   116d4:	orrcc	r3, r3, #1
   116d8:	cmp	r3, #0
   116dc:	movne	r7, r0
   116e0:	ldrb	r1, [r8, #1]!
   116e4:	cmp	r1, #0
   116e8:	bne	116b8 <Mat_VarReadNextInfo@plt+0x690>
   116ec:	cmp	r7, #0
   116f0:	cmpne	r6, r7
   116f4:	moveq	r3, r4
   116f8:	ldreq	r4, [sp, #36]	; 0x24
   116fc:	beq	1172c <Mat_VarReadNextInfo@plt+0x704>
   11700:	ldr	r3, [pc, #1208]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11704:	strb	r1, [r7]
   11708:	mov	r2, #56	; 0x38
   1170c:	ldr	r3, [r3]
   11710:	mov	r1, #1
   11714:	ldr	r0, [pc, #1264]	; 11c0c <Mat_VarReadNextInfo@plt+0xbe4>
   11718:	bl	10e90 <fwrite@plt>
   1171c:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11720:	ldrb	r2, [r3], #1
   11724:	cmp	r2, #44	; 0x2c
   11728:	addeq	r4, r4, #1
   1172c:	cmp	r5, r3
   11730:	bne	11720 <Mat_VarReadNextInfo@plt+0x6f8>
   11734:	lsl	r8, r4, #2
   11738:	mov	r0, r8
   1173c:	bl	10ecc <malloc@plt>
   11740:	mov	r7, r0
   11744:	mov	r0, r8
   11748:	bl	10ecc <malloc@plt>
   1174c:	mov	r6, r0
   11750:	mov	r0, r8
   11754:	bl	10ecc <malloc@plt>
   11758:	mov	r8, r5
   1175c:	mov	r3, #0
   11760:	mov	r2, #1
   11764:	mov	r5, r0
   11768:	mov	r1, #0
   1176c:	str	r1, [r7, r3, lsl #2]
   11770:	str	r2, [r6, r3, lsl #2]
   11774:	str	r2, [r5, r3, lsl #2]
   11778:	add	r3, r3, #1
   1177c:	cmp	r4, r3
   11780:	bne	11768 <Mat_VarReadNextInfo@plt+0x740>
   11784:	mov	r1, r8
   11788:	mov	r0, r9
   1178c:	mov	r3, r6
   11790:	mov	r2, r7
   11794:	str	r5, [sp]
   11798:	bl	12798 <Mat_VarReadNextInfo@plt+0x1770>
   1179c:	add	r3, sl, #32
   117a0:	str	r3, [sp, #4]
   117a4:	ldr	r2, [sl, #4]
   117a8:	mov	r3, r5
   117ac:	str	r2, [sp]
   117b0:	mov	r1, r7
   117b4:	mov	r2, r6
   117b8:	mov	r0, r4
   117bc:	bl	129fc <Mat_VarReadNextInfo@plt+0x19d4>
   117c0:	subs	r8, r0, #0
   117c4:	bne	11864 <Mat_VarReadNextInfo@plt+0x83c>
   117c8:	mov	r0, r7
   117cc:	bl	10e3c <free@plt>
   117d0:	mov	r0, r6
   117d4:	bl	10e3c <free@plt>
   117d8:	mov	r0, r5
   117dc:	bl	10e3c <free@plt>
   117e0:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   117e4:	ldr	r3, [pc, #980]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   117e8:	mov	r2, r4
   117ec:	ldr	r1, [pc, #1052]	; 11c10 <Mat_VarReadNextInfo@plt+0xbe8>
   117f0:	ldr	r0, [r3]
   117f4:	bl	10f44 <fprintf@plt>
   117f8:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   117fc:	ldr	r0, [pc, #956]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11800:	mov	r2, r5
   11804:	ldr	r3, [sl, #36]	; 0x24
   11808:	ldr	r1, [pc, #1028]	; 11c14 <Mat_VarReadNextInfo@plt+0xbec>
   1180c:	ldr	r0, [r0]
   11810:	bl	10f44 <fprintf@plt>
   11814:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11818:	ldr	r3, [sp, #36]	; 0x24
   1181c:	mov	r9, r5
   11820:	str	r3, [sp, #20]
   11824:	b	1162c <Mat_VarReadNextInfo@plt+0x604>
   11828:	ldr	r3, [r6]
   1182c:	ldr	r2, [r7]
   11830:	ldr	r1, [r8]
   11834:	mov	r0, sl
   11838:	bl	10fbc <Mat_VarGetCellsLinear@plt>
   1183c:	ldr	r3, [sl, #4]
   11840:	cmp	r3, #2
   11844:	ldr	r3, [sl, #32]
   11848:	str	r0, [sp, #28]
   1184c:	beq	11a68 <Mat_VarReadNextInfo@plt+0xa40>
   11850:	mov	r2, #1
   11854:	str	r2, [sl, #4]
   11858:	ldr	r2, [r6]
   1185c:	str	r2, [r3]
   11860:	b	114fc <Mat_VarReadNextInfo@plt+0x4d4>
   11864:	ldr	r0, [sl, #16]
   11868:	bl	10fec <Mat_SizeOfClass@plt>
   1186c:	ldr	r3, [sl, #20]
   11870:	cmp	r3, #0
   11874:	mul	r8, r0, r8
   11878:	str	r0, [sl, #12]
   1187c:	str	r8, [sl]
   11880:	beq	11994 <Mat_VarReadNextInfo@plt+0x96c>
   11884:	mov	r0, #8
   11888:	bl	10ecc <malloc@plt>
   1188c:	mov	r9, r0
   11890:	str	r0, [sl, #40]	; 0x28
   11894:	mov	r0, r8
   11898:	bl	10ecc <malloc@plt>
   1189c:	str	r0, [r9]
   118a0:	mov	r0, r8
   118a4:	bl	10ecc <malloc@plt>
   118a8:	str	r0, [r9, #4]
   118ac:	ldr	r2, [sl, #40]	; 0x28
   118b0:	cmp	r2, #0
   118b4:	beq	11b68 <Mat_VarReadNextInfo@plt+0xb40>
   118b8:	cmp	r4, #1
   118bc:	beq	11aa0 <Mat_VarReadNextInfo@plt+0xa78>
   118c0:	mov	r3, r7
   118c4:	mov	r1, sl
   118c8:	str	r5, [sp, #4]
   118cc:	str	r6, [sp]
   118d0:	ldr	r0, [sp, #40]	; 0x28
   118d4:	bl	10e6c <Mat_VarReadData@plt>
   118d8:	ldr	r1, [sl, #32]
   118dc:	mov	r3, #0
   118e0:	ldr	r2, [r5, r3, lsl #2]
   118e4:	str	r2, [r1, r3, lsl #2]
   118e8:	add	r3, r3, #1
   118ec:	cmp	r4, r3
   118f0:	bne	118e0 <Mat_VarReadNextInfo@plt+0x8b8>
   118f4:	b	117c8 <Mat_VarReadNextInfo@plt+0x7a0>
   118f8:	mov	r5, r4
   118fc:	mov	r4, #0
   11900:	b	11280 <Mat_VarReadNextInfo@plt+0x258>
   11904:	ldr	r4, [pc, #764]	; 11c08 <Mat_VarReadNextInfo@plt+0xbe0>
   11908:	mov	r9, #0
   1190c:	mov	r1, #40	; 0x28
   11910:	mov	r0, r5
   11914:	bl	10f2c <strchr@plt>
   11918:	cmp	r0, #0
   1191c:	beq	1193c <Mat_VarReadNextInfo@plt+0x914>
   11920:	cmp	r0, r9
   11924:	movcs	r3, #0
   11928:	movcc	r3, #1
   1192c:	cmp	r9, #0
   11930:	orreq	r3, r3, #1
   11934:	cmp	r3, #0
   11938:	movne	r9, r0
   1193c:	ldrb	r1, [r4, #1]!
   11940:	cmp	r1, #0
   11944:	bne	11910 <Mat_VarReadNextInfo@plt+0x8e8>
   11948:	cmp	r9, #0
   1194c:	cmpne	r5, r9
   11950:	beq	11af4 <Mat_VarReadNextInfo@plt+0xacc>
   11954:	ldrb	r3, [r9]
   11958:	mov	r2, #0
   1195c:	strb	r1, [r9]
   11960:	mov	r0, sl
   11964:	mov	r1, r5
   11968:	str	r3, [sp, #16]
   1196c:	bl	10fe0 <Mat_VarGetStructFieldByName@plt>
   11970:	cmp	r0, #0
   11974:	beq	117fc <Mat_VarReadNextInfo@plt+0x7d4>
   11978:	mov	r1, #1
   1197c:	bl	1101c <Mat_VarDuplicate@plt>
   11980:	mov	r4, r0
   11984:	mov	r0, sl
   11988:	bl	10f08 <Mat_VarFree@plt>
   1198c:	mov	sl, r4
   11990:	b	1135c <Mat_VarReadNextInfo@plt+0x334>
   11994:	mov	r0, r8
   11998:	bl	10ecc <malloc@plt>
   1199c:	str	r0, [sl, #40]	; 0x28
   119a0:	b	118ac <Mat_VarReadNextInfo@plt+0x884>
   119a4:	ldr	r3, [pc, #552]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   119a8:	ldr	r5, [sp, #40]	; 0x28
   119ac:	ldr	r3, [r3, #8]
   119b0:	cmp	r3, #0
   119b4:	bne	119d0 <Mat_VarReadNextInfo@plt+0x9a8>
   119b8:	b	119f8 <Mat_VarReadNextInfo@plt+0x9d0>
   119bc:	ldr	r3, [pc, #528]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   119c0:	ldr	r3, [r3, #12]
   119c4:	blx	r3
   119c8:	mov	r0, r4
   119cc:	bl	10f08 <Mat_VarFree@plt>
   119d0:	mov	r0, r5
   119d4:	bl	10ddc <Mat_VarReadNext@plt>
   119d8:	subs	r4, r0, #0
   119dc:	bne	119bc <Mat_VarReadNextInfo@plt+0x994>
   119e0:	b	112f4 <Mat_VarReadNextInfo@plt+0x2cc>
   119e4:	ldr	r3, [pc, #488]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbac>
   119e8:	ldr	r3, [r3, #12]
   119ec:	blx	r3
   119f0:	mov	r0, r4
   119f4:	bl	10f08 <Mat_VarFree@plt>
   119f8:	mov	r0, r5
   119fc:	bl	11028 <Mat_VarReadNextInfo@plt>
   11a00:	subs	r4, r0, #0
   11a04:	bne	119e4 <Mat_VarReadNextInfo@plt+0x9bc>
   11a08:	b	112f4 <Mat_VarReadNextInfo@plt+0x2cc>
   11a0c:	ldr	r3, [pc, #428]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11a10:	mov	r2, #24
   11a14:	mov	r1, #1
   11a18:	ldr	r3, [r3]
   11a1c:	ldr	r0, [pc, #500]	; 11c18 <Mat_VarReadNextInfo@plt+0xbf0>
   11a20:	bl	10e90 <fwrite@plt>
   11a24:	mov	r0, r8
   11a28:	bl	10e3c <free@plt>
   11a2c:	mov	r0, r7
   11a30:	bl	10e3c <free@plt>
   11a34:	mov	r0, r6
   11a38:	bl	10e3c <free@plt>
   11a3c:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11a40:	ldr	r3, [pc, #376]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11a44:	mov	r2, #31
   11a48:	mov	r1, #1
   11a4c:	ldr	r3, [r3]
   11a50:	ldr	r0, [pc, #452]	; 11c1c <Mat_VarReadNextInfo@plt+0xbf4>
   11a54:	bl	10e90 <fwrite@plt>
   11a58:	b	11a24 <Mat_VarReadNextInfo@plt+0x9fc>
   11a5c:	ldr	r0, [pc, #444]	; 11c20 <Mat_VarReadNextInfo@plt+0xbf8>
   11a60:	bl	10e48 <Mat_Warning@plt>
   11a64:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   11a68:	ldr	r2, [r3]
   11a6c:	cmp	r2, #1
   11a70:	ldreq	r2, [r6]
   11a74:	streq	r2, [r3, #4]
   11a78:	beq	114fc <Mat_VarReadNextInfo@plt+0x4d4>
   11a7c:	ldr	r2, [r3, #4]
   11a80:	cmp	r2, #1
   11a84:	bne	11850 <Mat_VarReadNextInfo@plt+0x828>
   11a88:	b	11858 <Mat_VarReadNextInfo@plt+0x830>
   11a8c:	ldr	r3, [sp, #24]
   11a90:	ldr	r0, [pc, #396]	; 11c24 <Mat_VarReadNextInfo@plt+0xbfc>
   11a94:	ldr	r1, [r3]
   11a98:	bl	10e48 <Mat_Warning@plt>
   11a9c:	b	112dc <Mat_VarReadNextInfo@plt+0x2b4>
   11aa0:	ldr	r1, [r5]
   11aa4:	ldr	r3, [r6]
   11aa8:	ldr	r0, [sp, #40]	; 0x28
   11aac:	str	r1, [sp, #4]
   11ab0:	str	r3, [sp]
   11ab4:	mov	r1, sl
   11ab8:	ldr	r3, [r7]
   11abc:	bl	10e54 <Mat_VarReadDataLinear@plt>
   11ac0:	ldr	r3, [sl, #4]
   11ac4:	cmp	r3, #2
   11ac8:	ldr	r3, [sl, #32]
   11acc:	beq	11b84 <Mat_VarReadNextInfo@plt+0xb5c>
   11ad0:	mov	r2, #2
   11ad4:	str	r2, [sl, #4]
   11ad8:	ldr	r1, [r5]
   11adc:	mov	r2, #1
   11ae0:	stm	r3, {r1, r2}
   11ae4:	b	117c8 <Mat_VarReadNextInfo@plt+0x7a0>
   11ae8:	ldr	r0, [pc, #312]	; 11c28 <Mat_VarReadNextInfo@plt+0xc00>
   11aec:	bl	10f8c <Mat_Critical@plt>
   11af0:	b	1108c <Mat_VarReadNextInfo@plt+0x64>
   11af4:	mov	r2, #0
   11af8:	mov	r1, r5
   11afc:	mov	r0, sl
   11b00:	bl	10fe0 <Mat_VarGetStructFieldByName@plt>
   11b04:	cmp	r0, #0
   11b08:	beq	117fc <Mat_VarReadNextInfo@plt+0x7d4>
   11b0c:	mov	r1, #1
   11b10:	bl	1101c <Mat_VarDuplicate@plt>
   11b14:	mov	r4, r0
   11b18:	mov	r0, sl
   11b1c:	bl	10f08 <Mat_VarFree@plt>
   11b20:	mov	r1, r4
   11b24:	ldr	r0, [sp, #40]	; 0x28
   11b28:	mov	sl, r4
   11b2c:	bl	10e78 <Mat_VarReadDataAll@plt>
   11b30:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11b34:	ldr	r3, [pc, #132]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11b38:	mov	r2, #34	; 0x22
   11b3c:	mov	r1, #1
   11b40:	ldr	r3, [r3]
   11b44:	ldr	r0, [pc, #224]	; 11c2c <Mat_VarReadNextInfo@plt+0xc04>
   11b48:	bl	10e90 <fwrite@plt>
   11b4c:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11b50:	ldr	r3, [pc, #104]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11b54:	mov	r2, r5
   11b58:	ldr	r1, [pc, #208]	; 11c30 <Mat_VarReadNextInfo@plt+0xc08>
   11b5c:	ldr	r0, [r3]
   11b60:	bl	10f44 <fprintf@plt>
   11b64:	b	112c4 <Mat_VarReadNextInfo@plt+0x29c>
   11b68:	ldr	r3, [pc, #80]	; 11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11b6c:	mov	r2, #37	; 0x25
   11b70:	mov	r1, #1
   11b74:	ldr	r3, [r3]
   11b78:	ldr	r0, [pc, #180]	; 11c34 <Mat_VarReadNextInfo@plt+0xc0c>
   11b7c:	bl	10e90 <fwrite@plt>
   11b80:	b	117c8 <Mat_VarReadNextInfo@plt+0x7a0>
   11b84:	ldr	r2, [r3]
   11b88:	cmp	r2, #1
   11b8c:	ldreq	r2, [r5]
   11b90:	streq	r2, [r3, #4]
   11b94:	beq	117c8 <Mat_VarReadNextInfo@plt+0x7a0>
   11b98:	ldr	r2, [r3, #4]
   11b9c:	cmp	r2, #1
   11ba0:	ldreq	r2, [r5]
   11ba4:	streq	r2, [r3]
   11ba8:	bne	11ad0 <Mat_VarReadNextInfo@plt+0xaa8>
   11bac:	b	117c8 <Mat_VarReadNextInfo@plt+0x7a0>
   11bb0:	ldr	r0, [pc, #128]	; 11c38 <Mat_VarReadNextInfo@plt+0xc10>
   11bb4:	ldr	r1, [r4, r3, lsl #2]
   11bb8:	bl	10f8c <Mat_Critical@plt>
   11bbc:	b	1108c <Mat_VarReadNextInfo@plt+0x64>
   11bc0:	andeq	r5, r2, r0, ror #3
   11bc4:	andeq	r4, r1, ip, lsl #11
   11bc8:	andeq	r2, r1, ip, asr #14
   11bcc:	andeq	r4, r1, r4, asr #11
   11bd0:	strdeq	r5, [r2], -ip
   11bd4:	andeq	r5, r2, r8, ror #3
   11bd8:	andeq	r1, r1, r4, asr lr
   11bdc:	strheq	r2, [r1], -r4
   11be0:	andeq	r5, r2, r0, asr r1
   11be4:			; <UNDEFINED> instruction: 0x000146bc
   11be8:	andeq	r4, r1, r4, lsr #13
   11bec:	andeq	r4, r1, r4, asr #12
   11bf0:	andeq	r4, r1, ip, asr #12
   11bf4:	andeq	r4, r1, ip, asr #11
   11bf8:	andeq	r5, r2, r8, lsl #2
   11bfc:	ldrdeq	r4, [r1], -ip
   11c00:	andeq	r4, r1, r4, ror #11
   11c04:	ldrdeq	r5, [r2], -r0
   11c08:	andeq	r4, r1, r4, lsl #11
   11c0c:	strdeq	r4, [r1], -ip
   11c10:	andeq	r4, r1, r8, lsl #15
   11c14:	andeq	r4, r1, r0, ror #14
   11c18:	andeq	r4, r1, r8, lsl #16
   11c1c:	andeq	r4, r1, r8, ror #15
   11c20:	andeq	r4, r1, ip, lsl r6
   11c24:	andeq	r4, r1, r4, lsr #16
   11c28:	andeq	r4, r1, r4, asr #13
   11c2c:	andeq	r4, r1, r4, asr #15
   11c30:	andeq	r4, r1, ip, lsr #15
   11c34:	andeq	r4, r1, r8, lsr r7
   11c38:	andeq	r4, r1, r8, ror #13
   11c3c:	mov	fp, #0
   11c40:	mov	lr, #0
   11c44:	pop	{r1}		; (ldr r1, [sp], #4)
   11c48:	mov	r2, sp
   11c4c:	push	{r2}		; (str r2, [sp, #-4]!)
   11c50:	push	{r0}		; (str r0, [sp, #-4]!)
   11c54:	ldr	ip, [pc, #16]	; 11c6c <Mat_VarReadNextInfo@plt+0xc44>
   11c58:	push	{ip}		; (str ip, [sp, #-4]!)
   11c5c:	ldr	r0, [pc, #12]	; 11c70 <Mat_VarReadNextInfo@plt+0xc48>
   11c60:	ldr	r3, [pc, #12]	; 11c74 <Mat_VarReadNextInfo@plt+0xc4c>
   11c64:	bl	10ee4 <__libc_start_main@plt>
   11c68:	bl	11010 <abort@plt>
   11c6c:	strdeq	r4, [r1], -ip
   11c70:	andeq	r1, r1, r8, lsr r0
   11c74:	muleq	r1, ip, r2
   11c78:	ldr	r3, [pc, #20]	; 11c94 <Mat_VarReadNextInfo@plt+0xc6c>
   11c7c:	ldr	r2, [pc, #20]	; 11c98 <Mat_VarReadNextInfo@plt+0xc70>
   11c80:	add	r3, pc, r3
   11c84:	ldr	r2, [r3, r2]
   11c88:	cmp	r2, #0
   11c8c:	bxeq	lr
   11c90:	b	10ef0 <__gmon_start__@plt>
   11c94:	andeq	r3, r1, r8, ror r3
   11c98:	andeq	r0, r0, ip, ror #1
   11c9c:	ldr	r3, [pc, #28]	; 11cc0 <Mat_VarReadNextInfo@plt+0xc98>
   11ca0:	ldr	r0, [pc, #28]	; 11cc4 <Mat_VarReadNextInfo@plt+0xc9c>
   11ca4:	sub	r3, r3, r0
   11ca8:	cmp	r3, #6
   11cac:	bxls	lr
   11cb0:	ldr	r3, [pc, #16]	; 11cc8 <Mat_VarReadNextInfo@plt+0xca0>
   11cb4:	cmp	r3, #0
   11cb8:	bxeq	lr
   11cbc:	bx	r3
   11cc0:	ldrdeq	r5, [r2], -pc	; <UNPREDICTABLE>
   11cc4:	ldrdeq	r5, [r2], -ip
   11cc8:	andeq	r0, r0, r0
   11ccc:	ldr	r1, [pc, #36]	; 11cf8 <Mat_VarReadNextInfo@plt+0xcd0>
   11cd0:	ldr	r0, [pc, #36]	; 11cfc <Mat_VarReadNextInfo@plt+0xcd4>
   11cd4:	sub	r1, r1, r0
   11cd8:	asr	r1, r1, #2
   11cdc:	add	r1, r1, r1, lsr #31
   11ce0:	asrs	r1, r1, #1
   11ce4:	bxeq	lr
   11ce8:	ldr	r3, [pc, #16]	; 11d00 <Mat_VarReadNextInfo@plt+0xcd8>
   11cec:	cmp	r3, #0
   11cf0:	bxeq	lr
   11cf4:	bx	r3
   11cf8:	ldrdeq	r5, [r2], -ip
   11cfc:	ldrdeq	r5, [r2], -ip
   11d00:	andeq	r0, r0, r0
   11d04:	push	{r4, lr}
   11d08:	ldr	r4, [pc, #24]	; 11d28 <Mat_VarReadNextInfo@plt+0xd00>
   11d0c:	ldrb	r3, [r4]
   11d10:	cmp	r3, #0
   11d14:	popne	{r4, pc}
   11d18:	bl	11c9c <Mat_VarReadNextInfo@plt+0xc74>
   11d1c:	mov	r3, #1
   11d20:	strb	r3, [r4]
   11d24:	pop	{r4, pc}
   11d28:	andeq	r5, r2, r4, ror #3
   11d2c:	ldr	r0, [pc, #40]	; 11d5c <Mat_VarReadNextInfo@plt+0xd34>
   11d30:	ldr	r3, [r0]
   11d34:	cmp	r3, #0
   11d38:	bne	11d40 <Mat_VarReadNextInfo@plt+0xd18>
   11d3c:	b	11ccc <Mat_VarReadNextInfo@plt+0xca4>
   11d40:	ldr	r3, [pc, #24]	; 11d60 <Mat_VarReadNextInfo@plt+0xd38>
   11d44:	cmp	r3, #0
   11d48:	beq	11d3c <Mat_VarReadNextInfo@plt+0xd14>
   11d4c:	push	{r4, lr}
   11d50:	blx	r3
   11d54:	pop	{r4, lr}
   11d58:	b	11ccc <Mat_VarReadNextInfo@plt+0xca4>
   11d5c:	strdeq	r4, [r2], -ip
	...
   11d68:	sub	r0, r0, #1
   11d6c:	cmp	r0, #12
   11d70:	ldrls	pc, [pc, r0, lsl #2]
   11d74:	b	11e2c <Mat_VarReadNextInfo@plt+0xe04>
   11d78:			; <UNDEFINED> instruction: 0x00011db8
   11d7c:	andeq	r1, r1, r4, asr #27
   11d80:	ldrdeq	r1, [r1], -r0
   11d84:	ldrdeq	r1, [r1], -ip
   11d88:	andeq	r1, r1, r8, ror #27
   11d8c:	strdeq	r1, [r1], -r4
   11d90:	andeq	r1, r1, r0, lsl #28
   11d94:	andeq	r1, r1, ip, lsr #28
   11d98:	andeq	r1, r1, r4, lsl lr
   11d9c:	andeq	r1, r1, ip, lsr #28
   11da0:	andeq	r1, r1, ip, lsr #28
   11da4:	andeq	r1, r1, r0, lsr #28
   11da8:	andeq	r1, r1, ip, lsr #27
   11dac:	ldrd	r2, [r1]
   11db0:	ldr	r0, [pc, #120]	; 11e30 <Mat_VarReadNextInfo@plt+0xe08>
   11db4:	b	10e0c <printf@plt>
   11db8:	ldrsb	r1, [r1]
   11dbc:	ldr	r0, [pc, #112]	; 11e34 <Mat_VarReadNextInfo@plt+0xe0c>
   11dc0:	b	10e0c <printf@plt>
   11dc4:	ldrb	r1, [r1]
   11dc8:	ldr	r0, [pc, #104]	; 11e38 <Mat_VarReadNextInfo@plt+0xe10>
   11dcc:	b	10e0c <printf@plt>
   11dd0:	ldrsh	r1, [r1]
   11dd4:	ldr	r0, [pc, #96]	; 11e3c <Mat_VarReadNextInfo@plt+0xe14>
   11dd8:	b	10e0c <printf@plt>
   11ddc:	ldrh	r1, [r1]
   11de0:	ldr	r0, [pc, #88]	; 11e40 <Mat_VarReadNextInfo@plt+0xe18>
   11de4:	b	10e0c <printf@plt>
   11de8:	ldr	r1, [r1]
   11dec:	ldr	r0, [pc, #80]	; 11e44 <Mat_VarReadNextInfo@plt+0xe1c>
   11df0:	b	10e0c <printf@plt>
   11df4:	ldr	r1, [r1]
   11df8:	ldr	r0, [pc, #72]	; 11e48 <Mat_VarReadNextInfo@plt+0xe20>
   11dfc:	b	10e0c <printf@plt>
   11e00:	vldr	s15, [r1]
   11e04:	ldr	r0, [pc, #64]	; 11e4c <Mat_VarReadNextInfo@plt+0xe24>
   11e08:	vcvt.f64.f32	d7, s15
   11e0c:	vmov	r2, r3, d7
   11e10:	b	10e0c <printf@plt>
   11e14:	ldrd	r2, [r1]
   11e18:	ldr	r0, [pc, #44]	; 11e4c <Mat_VarReadNextInfo@plt+0xe24>
   11e1c:	b	10e0c <printf@plt>
   11e20:	ldrd	r2, [r1]
   11e24:	ldr	r0, [pc, #36]	; 11e50 <Mat_VarReadNextInfo@plt+0xe28>
   11e28:	b	10e0c <printf@plt>
   11e2c:	bx	lr
   11e30:	andeq	r4, r1, r0, ror #6
   11e34:	andeq	r4, r1, r4, ror r3
   11e38:	andeq	r4, r1, ip, ror r3
   11e3c:	andeq	r4, r1, ip, ror #6
   11e40:	andeq	r4, r1, r0, ror r3
   11e44:	andeq	r4, r1, r8, ror r4
   11e48:	andeq	r4, r1, r8, ror #6
   11e4c:	andeq	r4, r1, r4, asr r3
   11e50:	andeq	r4, r1, r8, asr r3
   11e54:	push	{r4, r5, r6, r7, lr}
   11e58:	vpush	{d8-d9}
   11e5c:	ldr	r4, [pc, #516]	; 12068 <Mat_VarReadNextInfo@plt+0x1040>
   11e60:	mov	r5, r0
   11e64:	mov	r2, #32
   11e68:	sub	sp, sp, #44	; 0x2c
   11e6c:	add	r0, sp, #8
   11e70:	mov	r1, #0
   11e74:	bl	10f68 <memset@plt>
   11e78:	ldr	r3, [r4]
   11e7c:	cmp	r3, #0
   11e80:	bne	11fbc <Mat_VarReadNextInfo@plt+0xf94>
   11e84:	ldr	r1, [r5, #36]	; 0x24
   11e88:	ldr	r0, [pc, #476]	; 1206c <Mat_VarReadNextInfo@plt+0x1044>
   11e8c:	bl	10e0c <printf@plt>
   11e90:	ldr	r3, [r5, #4]
   11e94:	cmp	r3, #0
   11e98:	ble	11fe4 <Mat_VarReadNextInfo@plt+0xfbc>
   11e9c:	ldr	r3, [r5, #32]
   11ea0:	ldr	r0, [pc, #456]	; 12070 <Mat_VarReadNextInfo@plt+0x1048>
   11ea4:	ldr	r1, [r3]
   11ea8:	bl	10e0c <printf@plt>
   11eac:	ldr	r3, [r5, #4]
   11eb0:	cmp	r3, #1
   11eb4:	ble	11f34 <Mat_VarReadNextInfo@plt+0xf0c>
   11eb8:	vldr	d9, [pc, #384]	; 12040 <Mat_VarReadNextInfo@plt+0x1018>
   11ebc:	vldr	d8, [pc, #388]	; 12048 <Mat_VarReadNextInfo@plt+0x1020>
   11ec0:	ldr	r7, [pc, #428]	; 12074 <Mat_VarReadNextInfo@plt+0x104c>
   11ec4:	mov	r6, #0
   11ec8:	mov	r4, #1
   11ecc:	b	11ee0 <Mat_VarReadNextInfo@plt+0xeb8>
   11ed0:	ldr	r3, [r5, #4]
   11ed4:	add	r4, r4, #1
   11ed8:	cmp	r3, r4
   11edc:	ble	11f34 <Mat_VarReadNextInfo@plt+0xf0c>
   11ee0:	ldr	r3, [r5, #32]
   11ee4:	ldr	r3, [r3, r4, lsl #2]
   11ee8:	vmov	s0, r3
   11eec:	vcvt.f64.u32	d0, s0
   11ef0:	bl	10ed8 <log10@plt>
   11ef4:	bl	10f98 <ceil@plt>
   11ef8:	vadd.f64	d0, d0, d9
   11efc:	vcmpe.f64	d0, d8
   11f00:	vmrs	APSR_nzcv, fpscr
   11f04:	bpl	11ed0 <Mat_VarReadNextInfo@plt+0xea8>
   11f08:	ldr	r3, [r5, #32]
   11f0c:	add	r2, sp, #8
   11f10:	add	r0, r2, r6
   11f14:	mov	r1, r7
   11f18:	ldr	r2, [r3, r4, lsl #2]
   11f1c:	bl	10fc8 <sprintf@plt>
   11f20:	ldr	r3, [r5, #4]
   11f24:	add	r4, r4, #1
   11f28:	cmp	r3, r4
   11f2c:	add	r6, r6, r0
   11f30:	bgt	11ee0 <Mat_VarReadNextInfo@plt+0xeb8>
   11f34:	add	r1, sp, #8
   11f38:	ldr	r0, [pc, #312]	; 12078 <Mat_VarReadNextInfo@plt+0x1050>
   11f3c:	bl	10e0c <printf@plt>
   11f40:	mov	r0, r5
   11f44:	bl	10ff8 <Mat_VarGetSize@plt>
   11f48:	ldr	r3, [pc, #300]	; 1207c <Mat_VarReadNextInfo@plt+0x1054>
   11f4c:	ldr	r3, [r3]
   11f50:	cmp	r3, #0
   11f54:	beq	11fac <Mat_VarReadNextInfo@plt+0xf84>
   11f58:	cmp	r0, #1073741824	; 0x40000000
   11f5c:	bhi	12020 <Mat_VarReadNextInfo@plt+0xff8>
   11f60:	cmp	r0, #1048576	; 0x100000
   11f64:	bhi	12000 <Mat_VarReadNextInfo@plt+0xfd8>
   11f68:	cmp	r0, #1024	; 0x400
   11f6c:	bls	11ff0 <Mat_VarReadNextInfo@plt+0xfc8>
   11f70:	vmov	s15, r0
   11f74:	vldr	d6, [pc, #212]	; 12050 <Mat_VarReadNextInfo@plt+0x1028>
   11f78:	ldr	r0, [pc, #256]	; 12080 <Mat_VarReadNextInfo@plt+0x1058>
   11f7c:	vcvt.f64.s32	d7, s15
   11f80:	vmul.f64	d7, d7, d6
   11f84:	vmov	r2, r3, d7
   11f88:	bl	10e0c <printf@plt>
   11f8c:	ldr	r2, [r5, #16]
   11f90:	ldr	r3, [pc, #236]	; 12084 <Mat_VarReadNextInfo@plt+0x105c>
   11f94:	ldr	r0, [pc, #236]	; 12088 <Mat_VarReadNextInfo@plt+0x1060>
   11f98:	ldr	r1, [r3, r2, lsl #2]
   11f9c:	bl	10e0c <printf@plt>
   11fa0:	add	sp, sp, #44	; 0x2c
   11fa4:	vpop	{d8-d9}
   11fa8:	pop	{r4, r5, r6, r7, pc}
   11fac:	mov	r1, r0
   11fb0:	ldr	r0, [pc, #212]	; 1208c <Mat_VarReadNextInfo@plt+0x1064>
   11fb4:	bl	10e0c <printf@plt>
   11fb8:	b	11f8c <Mat_VarReadNextInfo@plt+0xf64>
   11fbc:	ldr	r2, [pc, #204]	; 12090 <Mat_VarReadNextInfo@plt+0x1068>
   11fc0:	ldr	r3, [pc, #204]	; 12094 <Mat_VarReadNextInfo@plt+0x106c>
   11fc4:	str	r2, [sp]
   11fc8:	ldr	r1, [pc, #200]	; 12098 <Mat_VarReadNextInfo@plt+0x1070>
   11fcc:	ldr	r2, [pc, #200]	; 1209c <Mat_VarReadNextInfo@plt+0x1074>
   11fd0:	ldr	r0, [pc, #200]	; 120a0 <Mat_VarReadNextInfo@plt+0x1078>
   11fd4:	bl	10e0c <printf@plt>
   11fd8:	mov	r3, #0
   11fdc:	str	r3, [r4]
   11fe0:	b	11e84 <Mat_VarReadNextInfo@plt+0xe5c>
   11fe4:	ldr	r0, [pc, #184]	; 120a4 <Mat_VarReadNextInfo@plt+0x107c>
   11fe8:	bl	10e0c <printf@plt>
   11fec:	b	11f40 <Mat_VarReadNextInfo@plt+0xf18>
   11ff0:	mov	r1, r0
   11ff4:	ldr	r0, [pc, #172]	; 120a8 <Mat_VarReadNextInfo@plt+0x1080>
   11ff8:	bl	10e0c <printf@plt>
   11ffc:	b	11f8c <Mat_VarReadNextInfo@plt+0xf64>
   12000:	vmov	s15, r0
   12004:	vldr	d6, [pc, #76]	; 12058 <Mat_VarReadNextInfo@plt+0x1030>
   12008:	ldr	r0, [pc, #156]	; 120ac <Mat_VarReadNextInfo@plt+0x1084>
   1200c:	vcvt.f64.s32	d7, s15
   12010:	vmul.f64	d7, d7, d6
   12014:	vmov	r2, r3, d7
   12018:	bl	10e0c <printf@plt>
   1201c:	b	11f8c <Mat_VarReadNextInfo@plt+0xf64>
   12020:	vmov	s15, r0
   12024:	vldr	d6, [pc, #52]	; 12060 <Mat_VarReadNextInfo@plt+0x1038>
   12028:	ldr	r0, [pc, #128]	; 120b0 <Mat_VarReadNextInfo@plt+0x1088>
   1202c:	vcvt.f64.u32	d7, s15
   12030:	vmul.f64	d7, d7, d6
   12034:	vmov	r2, r3, d7
   12038:	bl	10e0c <printf@plt>
   1203c:	b	11f8c <Mat_VarReadNextInfo@plt+0xf64>
   12040:	andeq	r0, r0, r0
   12044:	svccc	0x00f00000	; IMB
   12048:	andeq	r0, r0, r0
   1204c:	submi	r0, r0, r0
   12050:	andeq	r0, r0, r0
   12054:	svccc	0x00500000
   12058:	andeq	r0, r0, r0
   1205c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   12060:	andeq	r0, r0, r0
   12064:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   12068:	andeq	r5, r2, r4, lsl #2
   1206c:	andeq	r4, r1, ip, asr #7
   12070:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12074:	andeq	r4, r1, r4, ror #7
   12078:	ldrdeq	r4, [r1], -ip
   1207c:	andeq	r5, r2, r8, ror #3
   12080:	andeq	r4, r1, ip, lsl r4
   12084:	andeq	r4, r1, ip, lsl #6
   12088:	andeq	r4, r1, r8, lsr r4
   1208c:	andeq	r4, r1, r0, lsr r4
   12090:	andeq	r4, r1, r4, asr #7
   12094:	andeq	r4, r1, r4, lsl #7
   12098:	muleq	r1, r4, r3
   1209c:	andeq	r4, r1, ip, lsl #7
   120a0:	muleq	r1, ip, r3
   120a4:	andeq	r4, r1, ip, ror #7
   120a8:	andeq	r4, r1, r8, lsr #8
   120ac:	andeq	r4, r1, r0, lsl r4
   120b0:	andeq	r4, r1, r4, lsl #8
   120b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b8:	subs	r4, r0, #0
   120bc:	sub	sp, sp, #12
   120c0:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   120c4:	ldr	r3, [r4, #16]
   120c8:	sub	r3, r3, #1
   120cc:	cmp	r3, #14
   120d0:	ldrls	pc, [pc, r3, lsl #2]
   120d4:	b	12308 <Mat_VarReadNextInfo@plt+0x12e0>
   120d8:	andeq	r2, r1, r0, lsr r1
   120dc:	strdeq	r2, [r1], -r0
   120e0:	andeq	r2, r1, r8, lsl #6
   120e4:	strdeq	r2, [r1], -r0
   120e8:	strdeq	r2, [r1], -r0
   120ec:	andeq	r2, r1, r4, lsl r1
   120f0:	andeq	r2, r1, r4, lsl r1
   120f4:	andeq	r2, r1, r4, lsl r1
   120f8:	andeq	r2, r1, r4, lsl r1
   120fc:	andeq	r2, r1, r4, lsl r1
   12100:	andeq	r2, r1, r4, lsl r1
   12104:	andeq	r2, r1, r4, lsl r1
   12108:	andeq	r2, r1, r4, lsl r1
   1210c:	andeq	r2, r1, r4, lsl r1
   12110:	andeq	r2, r1, r4, lsl r1
   12114:	ldr	r3, [r4, #4]
   12118:	cmp	r3, #2
   1211c:	beq	124cc <Mat_VarReadNextInfo@plt+0x14a4>
   12120:	cmp	r3, #3
   12124:	beq	12318 <Mat_VarReadNextInfo@plt+0x12f0>
   12128:	add	sp, sp, #12
   1212c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12130:	ldr	r1, [r4, #36]	; 0x24
   12134:	cmp	r1, #0
   12138:	beq	12144 <Mat_VarReadNextInfo@plt+0x111c>
   1213c:	ldr	r0, [pc, #1488]	; 12714 <Mat_VarReadNextInfo@plt+0x16ec>
   12140:	bl	10e60 <Mat_Message@plt>
   12144:	ldr	r1, [r4, #4]
   12148:	ldr	r0, [pc, #1480]	; 12718 <Mat_VarReadNextInfo@plt+0x16f0>
   1214c:	bl	10e60 <Mat_Message@plt>
   12150:	ldr	r1, [r4, #4]
   12154:	cmp	r1, #0
   12158:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   1215c:	ldr	r3, [r4, #32]
   12160:	cmp	r1, #1
   12164:	ldr	r6, [r3]
   12168:	ble	12184 <Mat_VarReadNextInfo@plt+0x115c>
   1216c:	add	r1, r3, r1, lsl #2
   12170:	add	r3, r3, #4
   12174:	ldr	r2, [r3], #4
   12178:	cmp	r3, r1
   1217c:	mul	r6, r2, r6
   12180:	bne	12174 <Mat_VarReadNextInfo@plt+0x114c>
   12184:	ldr	r5, [pc, #1424]	; 1271c <Mat_VarReadNextInfo@plt+0x16f4>
   12188:	ldr	r0, [pc, #1424]	; 12720 <Mat_VarReadNextInfo@plt+0x16f8>
   1218c:	bl	10e60 <Mat_Message@plt>
   12190:	ldr	r0, [pc, #1420]	; 12724 <Mat_VarReadNextInfo@plt+0x16fc>
   12194:	bl	10e60 <Mat_Message@plt>
   12198:	ldr	r3, [r5, #4]
   1219c:	ldr	r7, [r4, #40]	; 0x28
   121a0:	add	r3, r3, #1
   121a4:	cmp	r7, #0
   121a8:	str	r3, [r5, #4]
   121ac:	beq	121d8 <Mat_VarReadNextInfo@plt+0x11b0>
   121b0:	cmp	r6, #0
   121b4:	beq	121d8 <Mat_VarReadNextInfo@plt+0x11b0>
   121b8:	sub	r7, r7, #4
   121bc:	mov	r4, #0
   121c0:	add	r4, r4, #1
   121c4:	ldr	r0, [r7, #4]!
   121c8:	bl	120b4 <Mat_VarReadNextInfo@plt+0x108c>
   121cc:	cmp	r4, r6
   121d0:	bne	121c0 <Mat_VarReadNextInfo@plt+0x1198>
   121d4:	ldr	r3, [r5, #4]
   121d8:	sub	r3, r3, #1
   121dc:	ldr	r0, [pc, #1348]	; 12728 <Mat_VarReadNextInfo@plt+0x1700>
   121e0:	str	r3, [r5, #4]
   121e4:	add	sp, sp, #12
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121ec:	b	10e60 <Mat_Message@plt>
   121f0:	ldr	r1, [r4, #36]	; 0x24
   121f4:	cmp	r1, #0
   121f8:	beq	12204 <Mat_VarReadNextInfo@plt+0x11dc>
   121fc:	ldr	r0, [pc, #1296]	; 12714 <Mat_VarReadNextInfo@plt+0x16ec>
   12200:	bl	10e60 <Mat_Message@plt>
   12204:	ldr	r1, [r4, #4]
   12208:	ldr	r0, [pc, #1288]	; 12718 <Mat_VarReadNextInfo@plt+0x16f0>
   1220c:	bl	10e60 <Mat_Message@plt>
   12210:	ldr	r3, [r4, #4]
   12214:	cmp	r3, #0
   12218:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   1221c:	ldr	r0, [pc, #1288]	; 1272c <Mat_VarReadNextInfo@plt+0x1704>
   12220:	bl	10e60 <Mat_Message@plt>
   12224:	mov	r0, r4
   12228:	bl	10dac <Mat_VarGetNumberOfFields@plt>
   1222c:	ldr	r3, [r4, #32]
   12230:	ldr	r1, [r4, #4]
   12234:	cmp	r1, #1
   12238:	ldr	r6, [r3]
   1223c:	mov	r7, r0
   12240:	ble	1225c <Mat_VarReadNextInfo@plt+0x1234>
   12244:	add	r1, r3, r1, lsl #2
   12248:	add	r3, r3, #4
   1224c:	ldr	r2, [r3], #4
   12250:	cmp	r1, r3
   12254:	mul	r6, r2, r6
   12258:	bne	1224c <Mat_VarReadNextInfo@plt+0x1224>
   1225c:	cmp	r7, #0
   12260:	movle	r3, #0
   12264:	movgt	r3, #1
   12268:	cmp	r6, #0
   1226c:	movne	r8, #0
   12270:	andeq	r8, r3, #1
   12274:	cmp	r8, #0
   12278:	bne	12474 <Mat_VarReadNextInfo@plt+0x144c>
   1227c:	cmp	r6, #0
   12280:	moveq	r3, #0
   12284:	andne	r3, r3, #1
   12288:	cmp	r3, #0
   1228c:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   12290:	ldr	r5, [pc, #1156]	; 1271c <Mat_VarReadNextInfo@plt+0x16f4>
   12294:	mov	r1, r7
   12298:	ldr	r0, [pc, #1168]	; 12730 <Mat_VarReadNextInfo@plt+0x1708>
   1229c:	bl	10e60 <Mat_Message@plt>
   122a0:	ldr	r2, [r5, #4]
   122a4:	ldr	r3, [r4, #40]	; 0x28
   122a8:	add	r2, r2, #1
   122ac:	cmp	r3, #0
   122b0:	str	r2, [r5, #4]
   122b4:	beq	122e0 <Mat_VarReadNextInfo@plt+0x12b8>
   122b8:	mul	r6, r6, r7
   122bc:	cmp	r6, #0
   122c0:	beq	122e0 <Mat_VarReadNextInfo@plt+0x12b8>
   122c4:	sub	r7, r3, #4
   122c8:	add	r8, r8, #1
   122cc:	ldr	r0, [r7, #4]!
   122d0:	bl	120b4 <Mat_VarReadNextInfo@plt+0x108c>
   122d4:	cmp	r8, r6
   122d8:	bne	122c8 <Mat_VarReadNextInfo@plt+0x12a0>
   122dc:	ldr	r2, [r5, #4]
   122e0:	sub	r2, r2, #1
   122e4:	ldr	r0, [pc, #1084]	; 12728 <Mat_VarReadNextInfo@plt+0x1700>
   122e8:	str	r2, [r5, #4]
   122ec:	b	1230c <Mat_VarReadNextInfo@plt+0x12e4>
   122f0:	ldr	r3, [pc, #1060]	; 1271c <Mat_VarReadNextInfo@plt+0x16f4>
   122f4:	mov	r0, r4
   122f8:	ldr	r1, [r3, #8]
   122fc:	add	sp, sp, #12
   12300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12304:	b	10f5c <Mat_VarPrint@plt>
   12308:	ldr	r0, [pc, #1060]	; 12734 <Mat_VarReadNextInfo@plt+0x170c>
   1230c:	add	sp, sp, #12
   12310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12314:	b	10e60 <Mat_Message@plt>
   12318:	ldr	r3, [r4, #40]	; 0x28
   1231c:	cmp	r3, #0
   12320:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   12324:	ldr	r0, [r4, #8]
   12328:	bl	10f14 <Mat_SizeOf@plt>
   1232c:	ldr	r7, [r4, #20]
   12330:	cmp	r7, #0
   12334:	mov	fp, r0
   12338:	beq	12590 <Mat_VarReadNextInfo@plt+0x1568>
   1233c:	ldr	r2, [r4, #32]
   12340:	ldr	r3, [r4, #40]	; 0x28
   12344:	ldr	r2, [r2, #8]
   12348:	ldr	r1, [r3]
   1234c:	cmp	r2, #0
   12350:	str	r1, [sp, #4]
   12354:	ldr	sl, [r3, #4]
   12358:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   1235c:	ldr	r5, [pc, #952]	; 1271c <Mat_VarReadNextInfo@plt+0x16f4>
   12360:	mov	r7, #0
   12364:	mov	r2, r7
   12368:	ldr	r1, [r4, #36]	; 0x24
   1236c:	ldr	r0, [pc, #964]	; 12738 <Mat_VarReadNextInfo@plt+0x1710>
   12370:	bl	10e60 <Mat_Message@plt>
   12374:	ldr	r1, [r4, #32]
   12378:	ldr	r3, [r5, #4]
   1237c:	ldr	r2, [r1]
   12380:	add	r3, r3, #1
   12384:	cmp	r2, #0
   12388:	str	r3, [r5, #4]
   1238c:	beq	1244c <Mat_VarReadNextInfo@plt+0x1424>
   12390:	mov	r6, #0
   12394:	cmp	r3, #0
   12398:	movne	r9, #0
   1239c:	beq	123bc <Mat_VarReadNextInfo@plt+0x1394>
   123a0:	ldr	r0, [pc, #916]	; 1273c <Mat_VarReadNextInfo@plt+0x1714>
   123a4:	bl	10e0c <printf@plt>
   123a8:	ldr	r3, [r5, #4]
   123ac:	add	r9, r9, #1
   123b0:	cmp	r9, r3
   123b4:	bcc	123a0 <Mat_VarReadNextInfo@plt+0x1378>
   123b8:	ldr	r1, [r4, #32]
   123bc:	ldr	r3, [r1, #4]
   123c0:	cmp	r3, #0
   123c4:	beq	12428 <Mat_VarReadNextInfo@plt+0x1400>
   123c8:	mov	r8, #0
   123cc:	str	r5, [sp]
   123d0:	mov	r5, r8
   123d4:	ldr	r8, [sp, #4]
   123d8:	mla	r9, r3, r7, r5
   123dc:	ldr	r3, [r1]
   123e0:	ldr	r0, [r4, #8]
   123e4:	add	r5, r5, #1
   123e8:	mla	r9, r3, r9, r6
   123ec:	mul	r9, fp, r9
   123f0:	add	r1, r8, r9
   123f4:	bl	11d68 <Mat_VarReadNextInfo@plt+0xd40>
   123f8:	ldr	r0, [pc, #832]	; 12740 <Mat_VarReadNextInfo@plt+0x1718>
   123fc:	bl	10e0c <printf@plt>
   12400:	add	r1, sl, r9
   12404:	ldr	r0, [r4, #8]
   12408:	bl	11d68 <Mat_VarReadNextInfo@plt+0xd40>
   1240c:	ldr	r0, [pc, #816]	; 12744 <Mat_VarReadNextInfo@plt+0x171c>
   12410:	bl	10e0c <printf@plt>
   12414:	ldr	r1, [r4, #32]
   12418:	ldr	r3, [r1, #4]
   1241c:	cmp	r3, r5
   12420:	bhi	123d8 <Mat_VarReadNextInfo@plt+0x13b0>
   12424:	ldr	r5, [sp]
   12428:	mov	r0, #10
   1242c:	bl	10f74 <putchar@plt>
   12430:	ldr	r1, [r4, #32]
   12434:	add	r6, r6, #1
   12438:	ldr	r3, [r1]
   1243c:	cmp	r6, r3
   12440:	ldrcc	r3, [r5, #4]
   12444:	bcc	12394 <Mat_VarReadNextInfo@plt+0x136c>
   12448:	ldr	r3, [r5, #4]
   1244c:	sub	r3, r3, #1
   12450:	mov	r0, #10
   12454:	str	r3, [r5, #4]
   12458:	bl	10f74 <putchar@plt>
   1245c:	ldr	r3, [r4, #32]
   12460:	add	r7, r7, #1
   12464:	ldr	r3, [r3, #8]
   12468:	cmp	r7, r3
   1246c:	bcc	12364 <Mat_VarReadNextInfo@plt+0x133c>
   12470:	b	12128 <Mat_VarReadNextInfo@plt+0x1100>
   12474:	mov	r0, r4
   12478:	bl	10e9c <Mat_VarGetStructFieldnames@plt>
   1247c:	ldr	r5, [pc, #664]	; 1271c <Mat_VarReadNextInfo@plt+0x16f4>
   12480:	mov	r1, r7
   12484:	mov	r6, r0
   12488:	ldr	r0, [pc, #672]	; 12730 <Mat_VarReadNextInfo@plt+0x1708>
   1248c:	bl	10e60 <Mat_Message@plt>
   12490:	ldr	r3, [r5, #4]
   12494:	cmp	r6, #0
   12498:	add	r3, r3, #1
   1249c:	str	r3, [r5, #4]
   124a0:	beq	121d8 <Mat_VarReadNextInfo@plt+0x11b0>
   124a4:	ldr	r8, [pc, #668]	; 12748 <Mat_VarReadNextInfo@plt+0x1720>
   124a8:	sub	r6, r6, #4
   124ac:	mov	r4, #0
   124b0:	add	r4, r4, #1
   124b4:	ldr	r1, [r6, #4]!
   124b8:	mov	r0, r8
   124bc:	bl	10e60 <Mat_Message@plt>
   124c0:	cmp	r7, r4
   124c4:	bgt	124b0 <Mat_VarReadNextInfo@plt+0x1488>
   124c8:	b	121d4 <Mat_VarReadNextInfo@plt+0x11ac>
   124cc:	ldr	r3, [r4, #40]	; 0x28
   124d0:	cmp	r3, #0
   124d4:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   124d8:	ldr	r0, [r4, #8]
   124dc:	bl	10f14 <Mat_SizeOf@plt>
   124e0:	ldr	r6, [r4, #20]
   124e4:	cmp	r6, #0
   124e8:	mov	r5, r0
   124ec:	beq	12694 <Mat_VarReadNextInfo@plt+0x166c>
   124f0:	ldr	r2, [r4, #32]
   124f4:	ldr	r1, [r4, #40]	; 0x28
   124f8:	ldr	r3, [r2]
   124fc:	ldr	r9, [r1]
   12500:	cmp	r3, #0
   12504:	ldr	sl, [r1, #4]
   12508:	ldrne	r8, [pc, #560]	; 12740 <Mat_VarReadNextInfo@plt+0x1718>
   1250c:	movne	r6, #0
   12510:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   12514:	ldr	r2, [r2, #4]
   12518:	cmp	r2, #0
   1251c:	beq	12570 <Mat_VarReadNextInfo@plt+0x1548>
   12520:	mov	fp, #0
   12524:	b	1252c <Mat_VarReadNextInfo@plt+0x1504>
   12528:	ldr	r3, [r3]
   1252c:	mla	r7, r3, fp, r6
   12530:	ldr	r0, [r4, #8]
   12534:	add	fp, fp, #1
   12538:	mul	r7, r5, r7
   1253c:	add	r1, r9, r7
   12540:	bl	11d68 <Mat_VarReadNextInfo@plt+0xd40>
   12544:	mov	r0, r8
   12548:	bl	10e0c <printf@plt>
   1254c:	add	r1, sl, r7
   12550:	ldr	r0, [r4, #8]
   12554:	bl	11d68 <Mat_VarReadNextInfo@plt+0xd40>
   12558:	ldr	r0, [pc, #484]	; 12744 <Mat_VarReadNextInfo@plt+0x171c>
   1255c:	bl	10e0c <printf@plt>
   12560:	ldr	r3, [r4, #32]
   12564:	ldr	r2, [r3, #4]
   12568:	cmp	fp, r2
   1256c:	bcc	12528 <Mat_VarReadNextInfo@plt+0x1500>
   12570:	mov	r0, #10
   12574:	bl	10f74 <putchar@plt>
   12578:	ldr	r2, [r4, #32]
   1257c:	add	r6, r6, #1
   12580:	ldr	r3, [r2]
   12584:	cmp	r6, r3
   12588:	bcc	12514 <Mat_VarReadNextInfo@plt+0x14ec>
   1258c:	b	12128 <Mat_VarReadNextInfo@plt+0x1100>
   12590:	ldr	r3, [r4, #32]
   12594:	ldr	sl, [r4, #40]	; 0x28
   12598:	ldr	r3, [r3, #8]
   1259c:	cmp	r3, #0
   125a0:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   125a4:	ldr	r5, [pc, #368]	; 1271c <Mat_VarReadNextInfo@plt+0x16f4>
   125a8:	ldr	r9, [pc, #396]	; 1273c <Mat_VarReadNextInfo@plt+0x1714>
   125ac:	mov	r2, r7
   125b0:	ldr	r1, [r4, #36]	; 0x24
   125b4:	ldr	r0, [pc, #380]	; 12738 <Mat_VarReadNextInfo@plt+0x1710>
   125b8:	bl	10e60 <Mat_Message@plt>
   125bc:	ldr	r3, [r4, #32]
   125c0:	ldr	r2, [r5, #4]
   125c4:	ldr	r1, [r3]
   125c8:	add	r2, r2, #1
   125cc:	cmp	r1, #0
   125d0:	str	r2, [r5, #4]
   125d4:	beq	1266c <Mat_VarReadNextInfo@plt+0x1644>
   125d8:	mov	r6, #0
   125dc:	cmp	r2, #0
   125e0:	movne	r8, #0
   125e4:	beq	12604 <Mat_VarReadNextInfo@plt+0x15dc>
   125e8:	mov	r0, r9
   125ec:	bl	10e0c <printf@plt>
   125f0:	ldr	r3, [r5, #4]
   125f4:	add	r8, r8, #1
   125f8:	cmp	r8, r3
   125fc:	bcc	125e8 <Mat_VarReadNextInfo@plt+0x15c0>
   12600:	ldr	r3, [r4, #32]
   12604:	ldr	r1, [r3, #4]
   12608:	cmp	r1, #0
   1260c:	movne	r8, #0
   12610:	beq	12648 <Mat_VarReadNextInfo@plt+0x1620>
   12614:	mla	r1, r1, r7, r8
   12618:	ldr	r3, [r3]
   1261c:	ldr	r0, [r4, #8]
   12620:	add	r8, r8, #1
   12624:	mla	r1, r3, r1, r6
   12628:	mla	r1, fp, r1, sl
   1262c:	bl	11d68 <Mat_VarReadNextInfo@plt+0xd40>
   12630:	mov	r0, #32
   12634:	bl	10f74 <putchar@plt>
   12638:	ldr	r3, [r4, #32]
   1263c:	ldr	r1, [r3, #4]
   12640:	cmp	r1, r8
   12644:	bhi	12614 <Mat_VarReadNextInfo@plt+0x15ec>
   12648:	mov	r0, #10
   1264c:	bl	10f74 <putchar@plt>
   12650:	ldr	r3, [r4, #32]
   12654:	add	r6, r6, #1
   12658:	ldr	r2, [r3]
   1265c:	cmp	r6, r2
   12660:	ldrcc	r2, [r5, #4]
   12664:	bcc	125dc <Mat_VarReadNextInfo@plt+0x15b4>
   12668:	ldr	r2, [r5, #4]
   1266c:	sub	r2, r2, #1
   12670:	mov	r0, #10
   12674:	str	r2, [r5, #4]
   12678:	bl	10f74 <putchar@plt>
   1267c:	ldr	r3, [r4, #32]
   12680:	add	r7, r7, #1
   12684:	ldr	r3, [r3, #8]
   12688:	cmp	r7, r3
   1268c:	bcc	125ac <Mat_VarReadNextInfo@plt+0x1584>
   12690:	b	12128 <Mat_VarReadNextInfo@plt+0x1100>
   12694:	ldr	r3, [r4, #32]
   12698:	ldr	r8, [r4, #40]	; 0x28
   1269c:	ldr	r1, [r3]
   126a0:	cmp	r1, #0
   126a4:	movne	r7, #32
   126a8:	movne	r9, #10
   126ac:	beq	12128 <Mat_VarReadNextInfo@plt+0x1100>
   126b0:	ldr	r3, [r3, #4]
   126b4:	cmp	r3, #0
   126b8:	beq	126f4 <Mat_VarReadNextInfo@plt+0x16cc>
   126bc:	mov	sl, #0
   126c0:	b	126c8 <Mat_VarReadNextInfo@plt+0x16a0>
   126c4:	ldr	r1, [r3]
   126c8:	mla	r1, r1, sl, r6
   126cc:	ldr	r0, [r4, #8]
   126d0:	add	sl, sl, #1
   126d4:	mla	r1, r5, r1, r8
   126d8:	bl	11d68 <Mat_VarReadNextInfo@plt+0xd40>
   126dc:	mov	r0, r7
   126e0:	bl	10f74 <putchar@plt>
   126e4:	ldr	r3, [r4, #32]
   126e8:	ldr	r2, [r3, #4]
   126ec:	cmp	sl, r2
   126f0:	bcc	126c4 <Mat_VarReadNextInfo@plt+0x169c>
   126f4:	mov	r0, r9
   126f8:	bl	10f74 <putchar@plt>
   126fc:	ldr	r3, [r4, #32]
   12700:	add	r6, r6, #1
   12704:	ldr	r1, [r3]
   12708:	cmp	r6, r1
   1270c:	bcc	126b0 <Mat_VarReadNextInfo@plt+0x1688>
   12710:	b	12128 <Mat_VarReadNextInfo@plt+0x1100>
   12714:	andeq	r4, r1, ip, asr r4
   12718:	andeq	r4, r1, ip, ror #8
   1271c:	andeq	r5, r2, r8, ror #3
   12720:			; <UNDEFINED> instruction: 0x000144b8
   12724:	ldrdeq	r4, [r1], -r0
   12728:			; <UNDEFINED> instruction: 0x000144b4
   1272c:	andeq	r4, r1, ip, ror r4
   12730:	muleq	r1, r4, r4
   12734:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12738:	andeq	r4, r1, ip, asr #8
   1273c:	strdeq	r4, [r1], -ip
   12740:	andeq	r4, r1, r4, asr #8
   12744:	andeq	r4, r1, r8, asr #8
   12748:	andeq	r4, r1, r4, lsr #9
   1274c:	push	{r4, r5, r6, r7, r8, lr}
   12750:	mov	r7, r1
   12754:	ldr	r5, [pc, #52]	; 12790 <Mat_VarReadNextInfo@plt+0x1768>
   12758:	ldr	r3, [r5, #4]
   1275c:	cmp	r3, #0
   12760:	movgt	r4, #0
   12764:	ldrgt	r6, [pc, #40]	; 12794 <Mat_VarReadNextInfo@plt+0x176c>
   12768:	ble	12784 <Mat_VarReadNextInfo@plt+0x175c>
   1276c:	mov	r0, r6
   12770:	bl	10e0c <printf@plt>
   12774:	ldr	r3, [r5, #4]
   12778:	add	r4, r4, #1
   1277c:	cmp	r3, r4
   12780:	bgt	1276c <Mat_VarReadNextInfo@plt+0x1744>
   12784:	mov	r0, r7
   12788:	pop	{r4, r5, r6, r7, r8, lr}
   1278c:	b	10ec0 <puts@plt>
   12790:	andeq	r5, r2, r8, ror #3
   12794:	strdeq	r4, [r1], -ip
   12798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1279c:	sub	sp, sp, #12
   127a0:	mov	r6, #0
   127a4:	add	r4, r0, #1
   127a8:	mov	r5, r0
   127ac:	ldr	r9, [pc, #572]	; 129f0 <Mat_VarReadNextInfo@plt+0x19c8>
   127b0:	mov	r7, r1
   127b4:	stm	sp, {r2, r3}
   127b8:	mov	sl, r4
   127bc:	mov	fp, r6
   127c0:	mov	r8, r6
   127c4:	b	12828 <Mat_VarReadNextInfo@plt+0x1800>
   127c8:	cmp	r1, #58	; 0x3a
   127cc:	beq	12898 <Mat_VarReadNextInfo@plt+0x1870>
   127d0:	cmp	r1, #125	; 0x7d
   127d4:	cmpne	r1, #41	; 0x29
   127d8:	bne	12818 <Mat_VarReadNextInfo@plt+0x17f0>
   127dc:	strb	r8, [r4]
   127e0:	mov	r1, r9
   127e4:	mov	r0, sl
   127e8:	bl	10de8 <strcmp@plt>
   127ec:	cmp	r0, #0
   127f0:	bne	12924 <Mat_VarReadNextInfo@plt+0x18fc>
   127f4:	cmp	fp, #0
   127f8:	bne	128c4 <Mat_VarReadNextInfo@plt+0x189c>
   127fc:	ldr	r3, [sp]
   12800:	mvn	r2, #0
   12804:	str	r2, [r3, r6, lsl #2]
   12808:	ldr	r3, [sp, #48]	; 0x30
   1280c:	str	r2, [r3, r6, lsl #2]
   12810:	add	fp, fp, #1
   12814:	add	sl, r5, #2
   12818:	cmp	r4, r7
   1281c:	mov	r5, r4
   12820:	beq	12890 <Mat_VarReadNextInfo@plt+0x1868>
   12824:	add	r4, r4, #1
   12828:	ldrb	r1, [r4]
   1282c:	cmp	r1, #44	; 0x2c
   12830:	bne	127c8 <Mat_VarReadNextInfo@plt+0x17a0>
   12834:	cmp	fp, #2
   12838:	beq	128ec <Mat_VarReadNextInfo@plt+0x18c4>
   1283c:	cmp	fp, #1
   12840:	beq	128ec <Mat_VarReadNextInfo@plt+0x18c4>
   12844:	cmp	fp, #0
   12848:	bne	12878 <Mat_VarReadNextInfo@plt+0x1850>
   1284c:	strb	fp, [r4]
   12850:	mov	r1, r9
   12854:	mov	r0, sl
   12858:	bl	10de8 <strcmp@plt>
   1285c:	cmp	r0, #0
   12860:	bne	129c8 <Mat_VarReadNextInfo@plt+0x19a0>
   12864:	ldr	r3, [sp]
   12868:	mvn	r2, #0
   1286c:	str	r2, [r3, r6, lsl #2]
   12870:	ldr	r3, [sp, #48]	; 0x30
   12874:	str	r2, [r3, r6, lsl #2]
   12878:	cmp	r4, r7
   1287c:	add	sl, r5, #2
   12880:	add	r6, r6, #1
   12884:	mov	fp, #0
   12888:	mov	r5, r4
   1288c:	bne	12824 <Mat_VarReadNextInfo@plt+0x17fc>
   12890:	add	sp, sp, #12
   12894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12898:	strb	r8, [r4]
   1289c:	mov	r1, r9
   128a0:	mov	r0, sl
   128a4:	bl	10de8 <strcmp@plt>
   128a8:	cmp	r0, #0
   128ac:	bne	12958 <Mat_VarReadNextInfo@plt+0x1930>
   128b0:	cmp	fp, #0
   128b4:	ldreq	r3, [sp]
   128b8:	mvneq	r2, #0
   128bc:	streq	r2, [r3, r6, lsl #2]
   128c0:	beq	12810 <Mat_VarReadNextInfo@plt+0x17e8>
   128c4:	cmp	fp, #1
   128c8:	beq	12914 <Mat_VarReadNextInfo@plt+0x18ec>
   128cc:	cmp	fp, #2
   128d0:	beq	12914 <Mat_VarReadNextInfo@plt+0x18ec>
   128d4:	ldr	r3, [pc, #280]	; 129f4 <Mat_VarReadNextInfo@plt+0x19cc>
   128d8:	add	r2, r6, #1
   128dc:	ldr	r1, [pc, #276]	; 129f8 <Mat_VarReadNextInfo@plt+0x19d0>
   128e0:	ldr	r0, [r3]
   128e4:	bl	10f44 <fprintf@plt>
   128e8:	b	12810 <Mat_VarReadNextInfo@plt+0x17e8>
   128ec:	strb	r8, [r4]
   128f0:	mov	r1, r9
   128f4:	mov	r0, sl
   128f8:	bl	10de8 <strcmp@plt>
   128fc:	cmp	r0, #0
   12900:	bne	129ac <Mat_VarReadNextInfo@plt+0x1984>
   12904:	ldr	r3, [sp, #48]	; 0x30
   12908:	mvn	r2, #0
   1290c:	str	r2, [r3, r6, lsl #2]
   12910:	b	12878 <Mat_VarReadNextInfo@plt+0x1850>
   12914:	ldr	r3, [sp, #48]	; 0x30
   12918:	mvn	r2, #0
   1291c:	str	r2, [r3, r6, lsl #2]
   12920:	b	12810 <Mat_VarReadNextInfo@plt+0x17e8>
   12924:	mov	r0, sl
   12928:	mov	r2, #10
   1292c:	mov	r1, r8
   12930:	bl	10e00 <strtol@plt>
   12934:	cmp	fp, #0
   12938:	beq	12980 <Mat_VarReadNextInfo@plt+0x1958>
   1293c:	cmp	fp, #1
   12940:	beq	1294c <Mat_VarReadNextInfo@plt+0x1924>
   12944:	cmp	fp, #2
   12948:	bne	128d4 <Mat_VarReadNextInfo@plt+0x18ac>
   1294c:	ldr	r3, [sp, #48]	; 0x30
   12950:	str	r0, [r3, r6, lsl #2]
   12954:	b	12810 <Mat_VarReadNextInfo@plt+0x17e8>
   12958:	mov	r0, sl
   1295c:	mov	r2, #10
   12960:	mov	r1, r8
   12964:	bl	10e00 <strtol@plt>
   12968:	cmp	fp, #0
   1296c:	bne	12998 <Mat_VarReadNextInfo@plt+0x1970>
   12970:	ldr	r3, [sp]
   12974:	sub	r0, r0, #1
   12978:	str	r0, [r3, r6, lsl #2]
   1297c:	b	12810 <Mat_VarReadNextInfo@plt+0x17e8>
   12980:	ldr	r3, [sp]
   12984:	sub	r2, r0, #1
   12988:	str	r2, [r3, r6, lsl #2]
   1298c:	ldr	r3, [sp, #48]	; 0x30
   12990:	str	r0, [r3, r6, lsl #2]
   12994:	b	12810 <Mat_VarReadNextInfo@plt+0x17e8>
   12998:	cmp	fp, #1
   1299c:	bne	12944 <Mat_VarReadNextInfo@plt+0x191c>
   129a0:	ldr	r3, [sp, #4]
   129a4:	str	r0, [r3, r6, lsl #2]
   129a8:	b	12810 <Mat_VarReadNextInfo@plt+0x17e8>
   129ac:	mov	r0, sl
   129b0:	mov	r2, #10
   129b4:	mov	r1, r8
   129b8:	bl	10e00 <strtol@plt>
   129bc:	ldr	r3, [sp, #48]	; 0x30
   129c0:	str	r0, [r3, r6, lsl #2]
   129c4:	b	12878 <Mat_VarReadNextInfo@plt+0x1850>
   129c8:	mov	r2, #10
   129cc:	mov	r0, sl
   129d0:	mov	r1, r8
   129d4:	bl	10e00 <strtol@plt>
   129d8:	ldr	r2, [sp]
   129dc:	sub	r3, r0, #1
   129e0:	str	r3, [r2, r6, lsl #2]
   129e4:	ldr	r3, [sp, #48]	; 0x30
   129e8:	str	r0, [r3, r6, lsl #2]
   129ec:	b	12878 <Mat_VarReadNextInfo@plt+0x1850>
   129f0:	ldrdeq	r4, [r1], -ip
   129f4:	andeq	r5, r2, r0, ror #3
   129f8:	andeq	r4, r1, r0, ror #9
   129fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a00:	sub	sp, sp, #12
   12a04:	ldr	ip, [sp, #48]	; 0x30
   12a08:	cmp	r0, ip
   12a0c:	cmpne	r0, #1
   12a10:	movne	r6, #1
   12a14:	moveq	r6, #0
   12a18:	beq	12a2c <Mat_VarReadNextInfo@plt+0x1a04>
   12a1c:	mov	fp, #0
   12a20:	mov	r0, fp
   12a24:	add	sp, sp, #12
   12a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a2c:	cmp	r0, #1
   12a30:	mov	r9, r0
   12a34:	beq	12b98 <Mat_VarReadNextInfo@plt+0x1b70>
   12a38:	cmp	r0, #0
   12a3c:	ble	12d30 <Mat_VarReadNextInfo@plt+0x1d08>
   12a40:	ldr	r0, [r2]
   12a44:	cmp	r0, #0
   12a48:	ble	12c18 <Mat_VarReadNextInfo@plt+0x1bf0>
   12a4c:	ldr	ip, [sp, #52]	; 0x34
   12a50:	mov	fp, #1
   12a54:	mov	r4, r3
   12a58:	ldr	sl, [ip]
   12a5c:	mov	r8, r2
   12a60:	mov	r5, r1
   12a64:	mov	r7, fp
   12a68:	b	12b1c <Mat_VarReadNextInfo@plt+0x1af4>
   12a6c:	cmp	ip, #0
   12a70:	blt	12b34 <Mat_VarReadNextInfo@plt+0x1b0c>
   12a74:	ldr	r3, [sl]
   12a78:	cmp	ip, r3
   12a7c:	bhi	12c54 <Mat_VarReadNextInfo@plt+0x1c2c>
   12a80:	ldr	r1, [r5]
   12a84:	cmp	r3, r1
   12a88:	bls	12c38 <Mat_VarReadNextInfo@plt+0x1c10>
   12a8c:	cmp	ip, #0
   12a90:	movle	r3, #0
   12a94:	movgt	r3, #1
   12a98:	cmp	ip, r1
   12a9c:	movge	r3, #0
   12aa0:	cmp	r3, #0
   12aa4:	bne	12c38 <Mat_VarReadNextInfo@plt+0x1c10>
   12aa8:	add	r3, r1, #1
   12aac:	cmp	ip, r3
   12ab0:	streq	r7, [r4]
   12ab4:	moveq	ip, #1
   12ab8:	beq	12af4 <Mat_VarReadNextInfo@plt+0x1acc>
   12abc:	cmp	ip, #0
   12ac0:	ble	12af4 <Mat_VarReadNextInfo@plt+0x1acc>
   12ac4:	vmov	s15, r0
   12ac8:	sub	ip, ip, r1
   12acc:	sub	ip, ip, #1
   12ad0:	vcvt.f64.s32	d0, s15
   12ad4:	vmov	s15, ip
   12ad8:	vcvt.f64.s32	d7, s15
   12adc:	vdiv.f64	d0, d7, d0
   12ae0:	bl	10ea8 <floor@plt>
   12ae4:	vcvt.s32.f64	s0, d0
   12ae8:	vmov	r3, s0
   12aec:	add	ip, r3, #1
   12af0:	str	ip, [r4]
   12af4:	add	r6, r6, #1
   12af8:	cmp	r9, r6
   12afc:	mul	fp, ip, fp
   12b00:	beq	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12b04:	ldr	r0, [r8, #4]!
   12b08:	add	r4, r4, #4
   12b0c:	cmp	r0, #0
   12b10:	add	sl, sl, #4
   12b14:	add	r5, r5, #4
   12b18:	ble	12c18 <Mat_VarReadNextInfo@plt+0x1bf0>
   12b1c:	ldr	ip, [r4]
   12b20:	cmn	ip, #1
   12b24:	bne	12a6c <Mat_VarReadNextInfo@plt+0x1a44>
   12b28:	ldr	r3, [r5]
   12b2c:	cmn	r3, #1
   12b30:	beq	12b60 <Mat_VarReadNextInfo@plt+0x1b38>
   12b34:	cmp	r0, #1
   12b38:	beq	12b78 <Mat_VarReadNextInfo@plt+0x1b50>
   12b3c:	ldr	r3, [sl]
   12b40:	vmov	s15, r0
   12b44:	ldr	r1, [r5]
   12b48:	sub	r3, r3, #1
   12b4c:	sub	r3, r3, r1
   12b50:	vcvt.f64.s32	d0, s15
   12b54:	vmov	s15, r3
   12b58:	vcvt.f64.u32	d7, s15
   12b5c:	b	12adc <Mat_VarReadNextInfo@plt+0x1ab4>
   12b60:	str	r7, [r4]
   12b64:	ldr	r3, [sl]
   12b68:	sub	r3, r3, #1
   12b6c:	str	r3, [r5]
   12b70:	ldr	ip, [r4]
   12b74:	b	12af4 <Mat_VarReadNextInfo@plt+0x1acc>
   12b78:	ldr	ip, [sl]
   12b7c:	str	ip, [r4]
   12b80:	ldr	r3, [r5]
   12b84:	cmp	r3, #0
   12b88:	movlt	r3, #0
   12b8c:	strlt	r3, [r5]
   12b90:	ldrlt	ip, [r4]
   12b94:	b	12af4 <Mat_VarReadNextInfo@plt+0x1acc>
   12b98:	cmp	ip, #0
   12b9c:	ble	12bbc <Mat_VarReadNextInfo@plt+0x1b94>
   12ba0:	ldr	r0, [sp, #52]	; 0x34
   12ba4:	ldr	r0, [r0]
   12ba8:	add	ip, r0, ip, lsl #2
   12bac:	ldr	lr, [r0], #4
   12bb0:	cmp	ip, r0
   12bb4:	mul	r9, lr, r9
   12bb8:	bne	12bac <Mat_VarReadNextInfo@plt+0x1b84>
   12bbc:	ldr	r0, [r2]
   12bc0:	cmp	r0, #0
   12bc4:	ble	12cd8 <Mat_VarReadNextInfo@plt+0x1cb0>
   12bc8:	ldr	fp, [r3]
   12bcc:	cmp	fp, r9
   12bd0:	bgt	12cbc <Mat_VarReadNextInfo@plt+0x1c94>
   12bd4:	ldr	ip, [r1]
   12bd8:	cmp	ip, r9
   12bdc:	bge	12bfc <Mat_VarReadNextInfo@plt+0x1bd4>
   12be0:	cmp	fp, ip
   12be4:	movge	lr, #0
   12be8:	movlt	lr, #1
   12bec:	cmp	fp, #0
   12bf0:	movle	lr, #0
   12bf4:	cmp	lr, #0
   12bf8:	beq	12c70 <Mat_VarReadNextInfo@plt+0x1c48>
   12bfc:	ldr	r3, [pc, #356]	; 12d68 <Mat_VarReadNextInfo@plt+0x1d40>
   12c00:	mov	r2, #18
   12c04:	mov	r1, #1
   12c08:	ldr	r3, [r3]
   12c0c:	ldr	r0, [pc, #344]	; 12d6c <Mat_VarReadNextInfo@plt+0x1d44>
   12c10:	bl	10e90 <fwrite@plt>
   12c14:	b	12a1c <Mat_VarReadNextInfo@plt+0x19f4>
   12c18:	ldr	r3, [pc, #328]	; 12d68 <Mat_VarReadNextInfo@plt+0x1d40>
   12c1c:	mov	r2, #23
   12c20:	mov	r1, #1
   12c24:	ldr	r3, [r3]
   12c28:	ldr	r0, [pc, #320]	; 12d70 <Mat_VarReadNextInfo@plt+0x1d48>
   12c2c:	bl	10e90 <fwrite@plt>
   12c30:	mov	fp, #0
   12c34:	b	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12c38:	ldr	r3, [pc, #296]	; 12d68 <Mat_VarReadNextInfo@plt+0x1d40>
   12c3c:	add	r2, r6, #1
   12c40:	ldr	r1, [pc, #300]	; 12d74 <Mat_VarReadNextInfo@plt+0x1d4c>
   12c44:	ldr	r0, [r3]
   12c48:	bl	10f44 <fprintf@plt>
   12c4c:	mov	fp, #0
   12c50:	b	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12c54:	ldr	r3, [pc, #268]	; 12d68 <Mat_VarReadNextInfo@plt+0x1d40>
   12c58:	add	r2, r6, #1
   12c5c:	ldr	r1, [pc, #276]	; 12d78 <Mat_VarReadNextInfo@plt+0x1d50>
   12c60:	ldr	r0, [r3]
   12c64:	bl	10f44 <fprintf@plt>
   12c68:	mov	fp, #0
   12c6c:	b	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12c70:	cmn	fp, #1
   12c74:	beq	12cf4 <Mat_VarReadNextInfo@plt+0x1ccc>
   12c78:	cmp	fp, #0
   12c7c:	str	r3, [sp, #4]
   12c80:	ble	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12c84:	sub	ip, fp, ip
   12c88:	sub	ip, ip, #1
   12c8c:	vmov	s15, r0
   12c90:	vmov	s13, ip
   12c94:	vcvt.f64.s32	d7, s15
   12c98:	vcvt.f64.s32	d0, s13
   12c9c:	vdiv.f64	d0, d0, d7
   12ca0:	bl	10ea8 <floor@plt>
   12ca4:	vcvt.s32.f64	s0, d0
   12ca8:	vmov	r3, s0
   12cac:	add	fp, r3, #1
   12cb0:	ldr	r3, [sp, #4]
   12cb4:	str	fp, [r3]
   12cb8:	b	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12cbc:	ldr	r3, [pc, #164]	; 12d68 <Mat_VarReadNextInfo@plt+0x1d40>
   12cc0:	mov	r2, #17
   12cc4:	mov	r1, #1
   12cc8:	ldr	r3, [r3]
   12ccc:	ldr	r0, [pc, #168]	; 12d7c <Mat_VarReadNextInfo@plt+0x1d54>
   12cd0:	bl	10e90 <fwrite@plt>
   12cd4:	b	12a1c <Mat_VarReadNextInfo@plt+0x19f4>
   12cd8:	ldr	r3, [pc, #136]	; 12d68 <Mat_VarReadNextInfo@plt+0x1d40>
   12cdc:	mov	r2, #23
   12ce0:	mov	r1, #1
   12ce4:	ldr	r3, [r3]
   12ce8:	ldr	r0, [pc, #128]	; 12d70 <Mat_VarReadNextInfo@plt+0x1d48>
   12cec:	bl	10e90 <fwrite@plt>
   12cf0:	b	12a1c <Mat_VarReadNextInfo@plt+0x19f4>
   12cf4:	cmn	ip, #1
   12cf8:	beq	12d38 <Mat_VarReadNextInfo@plt+0x1d10>
   12cfc:	cmp	r0, #1
   12d00:	str	r9, [r3]
   12d04:	beq	12d50 <Mat_VarReadNextInfo@plt+0x1d28>
   12d08:	ldr	r1, [r1]
   12d0c:	vldr	s0, [r2]
   12d10:	sub	r9, r9, r1
   12d14:	sub	r9, r9, #1
   12d18:	str	r3, [sp, #4]
   12d1c:	vmov	s15, r9
   12d20:	vcvt.f64.s32	d0, s0
   12d24:	vcvt.f64.s32	d7, s15
   12d28:	vdiv.f64	d0, d7, d0
   12d2c:	b	12ca0 <Mat_VarReadNextInfo@plt+0x1c78>
   12d30:	mov	fp, #1
   12d34:	b	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12d38:	sub	r9, r9, #1
   12d3c:	mov	r2, #1
   12d40:	str	r2, [r3]
   12d44:	str	r9, [r1]
   12d48:	ldr	fp, [r3]
   12d4c:	b	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12d50:	ldr	r2, [r1]
   12d54:	cmp	r2, #0
   12d58:	movge	fp, r9
   12d5c:	strlt	lr, [r1]
   12d60:	ldrlt	fp, [r3]
   12d64:	b	12a20 <Mat_VarReadNextInfo@plt+0x19f8>
   12d68:	andeq	r5, r2, r0, ror #3
   12d6c:	andeq	r4, r1, r8, lsr #10
   12d70:	strdeq	r4, [r1], -ip
   12d74:	andeq	r4, r1, r0, ror #10
   12d78:	andeq	r4, r1, ip, lsr r5
   12d7c:	andeq	r4, r1, r4, lsl r5
   12d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d84:	sub	sp, sp, #44	; 0x2c
   12d88:	ldr	lr, [pc, #1196]	; 1323c <Mat_VarReadNextInfo@plt+0x2214>
   12d8c:	ldr	ip, [pc, #1196]	; 13240 <Mat_VarReadNextInfo@plt+0x2218>
   12d90:	add	lr, pc, lr
   12d94:	str	r0, [sp, #36]	; 0x24
   12d98:	ldr	r0, [lr]
   12d9c:	add	ip, pc, ip
   12da0:	ldr	r9, [pc, #1180]	; 13244 <Mat_VarReadNextInfo@plt+0x221c>
   12da4:	cmp	r0, #1
   12da8:	str	r1, [sp, #8]
   12dac:	str	r3, [sp, #16]
   12db0:	mov	r5, r2
   12db4:	ldr	r7, [ip]
   12db8:	add	r9, pc, r9
   12dbc:	beq	12f90 <Mat_VarReadNextInfo@plt+0x1f68>
   12dc0:	cmp	r0, #2
   12dc4:	beq	12f80 <Mat_VarReadNextInfo@plt+0x1f58>
   12dc8:	cmp	r0, #0
   12dcc:	beq	12f28 <Mat_VarReadNextInfo@plt+0x1f00>
   12dd0:	ldr	r3, [pc, #1136]	; 13248 <Mat_VarReadNextInfo@plt+0x2220>
   12dd4:	add	r3, pc, r3
   12dd8:	str	r3, [sp, #12]
   12ddc:	ldr	r3, [pc, #1128]	; 1324c <Mat_VarReadNextInfo@plt+0x2224>
   12de0:	mov	r1, #61	; 0x3d
   12de4:	mov	r0, r7
   12de8:	ldr	r3, [r9, r3]
   12dec:	str	r3, [sp, #24]
   12df0:	ldr	r2, [r3]
   12df4:	str	r2, [sp, #28]
   12df8:	add	r2, r2, #1
   12dfc:	str	r2, [r3]
   12e00:	str	r2, [sp, #20]
   12e04:	bl	10f2c <strchr@plt>
   12e08:	subs	r3, r0, #0
   12e0c:	str	r3, [sp, #4]
   12e10:	beq	13090 <Mat_VarReadNextInfo@plt+0x2068>
   12e14:	sub	r6, r3, r7
   12e18:	add	r3, r3, #1
   12e1c:	str	r3, [sp, #4]
   12e20:	ldr	r4, [r5]
   12e24:	cmp	r4, #0
   12e28:	beq	131f0 <Mat_VarReadNextInfo@plt+0x21c8>
   12e2c:	ldr	r2, [sp, #80]	; 0x50
   12e30:	ldr	r3, [sp, #84]	; 0x54
   12e34:	adds	r2, r2, #0
   12e38:	movne	r2, #1
   12e3c:	cmp	r6, #1
   12e40:	movne	r2, #0
   12e44:	cmp	r2, #0
   12e48:	and	fp, r3, #4
   12e4c:	bne	12f38 <Mat_VarReadNextInfo@plt+0x1f10>
   12e50:	cmp	fp, #0
   12e54:	bne	12fa0 <Mat_VarReadNextInfo@plt+0x1f78>
   12e58:	mov	r8, r5
   12e5c:	mvn	sl, #0
   12e60:	str	fp, [sp, #32]
   12e64:	mov	r2, r6
   12e68:	mov	r1, r4
   12e6c:	mov	r0, r7
   12e70:	bl	11004 <strncmp@plt>
   12e74:	cmp	r0, #0
   12e78:	mov	r0, r4
   12e7c:	bne	12eb4 <Mat_VarReadNextInfo@plt+0x1e8c>
   12e80:	bl	10f20 <strlen@plt>
   12e84:	add	r3, r5, sl, lsl #4
   12e88:	cmp	r6, r0
   12e8c:	beq	13008 <Mat_VarReadNextInfo@plt+0x1fe0>
   12e90:	cmn	sl, #1
   12e94:	moveq	sl, fp
   12e98:	beq	12eb4 <Mat_VarReadNextInfo@plt+0x1e8c>
   12e9c:	ldr	r1, [r8, #4]
   12ea0:	ldr	r2, [r3, #4]
   12ea4:	cmp	r1, r2
   12ea8:	beq	130d8 <Mat_VarReadNextInfo@plt+0x20b0>
   12eac:	mov	r3, #1
   12eb0:	str	r3, [sp, #32]
   12eb4:	ldr	r4, [r8, #16]!
   12eb8:	add	fp, fp, #1
   12ebc:	cmp	r4, #0
   12ec0:	bne	12e64 <Mat_VarReadNextInfo@plt+0x1e3c>
   12ec4:	ldr	r3, [sp, #32]
   12ec8:	cmp	r3, #0
   12ecc:	beq	12ffc <Mat_VarReadNextInfo@plt+0x1fd4>
   12ed0:	ldr	r3, [pc, #888]	; 13250 <Mat_VarReadNextInfo@plt+0x2228>
   12ed4:	ldr	r3, [r9, r3]
   12ed8:	ldr	r3, [r3]
   12edc:	cmp	r3, #0
   12ee0:	beq	12f0c <Mat_VarReadNextInfo@plt+0x1ee4>
   12ee4:	ldr	r3, [sp, #8]
   12ee8:	ldrb	r3, [r3]
   12eec:	cmp	r3, #58	; 0x3a
   12ef0:	beq	12f0c <Mat_VarReadNextInfo@plt+0x1ee4>
   12ef4:	ldr	r0, [pc, #856]	; 13254 <Mat_VarReadNextInfo@plt+0x222c>
   12ef8:	mov	r3, r7
   12efc:	mov	r2, r6
   12f00:	ldr	r1, [sp, #12]
   12f04:	add	r0, pc, r0
   12f08:	bl	10f38 <warnx@plt>
   12f0c:	ldr	r3, [pc, #836]	; 13258 <Mat_VarReadNextInfo@plt+0x2230>
   12f10:	mov	r0, #63	; 0x3f
   12f14:	mov	r2, #0
   12f18:	ldr	r3, [r9, r3]
   12f1c:	str	r2, [r3]
   12f20:	add	sp, sp, #44	; 0x2c
   12f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f28:	ldr	r3, [pc, #812]	; 1325c <Mat_VarReadNextInfo@plt+0x2234>
   12f2c:	add	r3, pc, r3
   12f30:	str	r3, [sp, #12]
   12f34:	b	12ddc <Mat_VarReadNextInfo@plt+0x1db4>
   12f38:	ldrb	r8, [r7]
   12f3c:	mov	fp, #0
   12f40:	ldrb	r3, [r4]
   12f44:	mov	r0, r4
   12f48:	cmp	r8, r3
   12f4c:	bne	12f5c <Mat_VarReadNextInfo@plt+0x1f34>
   12f50:	bl	10f20 <strlen@plt>
   12f54:	cmp	r0, #1
   12f58:	beq	13008 <Mat_VarReadNextInfo@plt+0x1fe0>
   12f5c:	add	fp, fp, #1
   12f60:	ldr	r4, [r5, fp, lsl #4]
   12f64:	cmp	r4, #0
   12f68:	bne	12f40 <Mat_VarReadNextInfo@plt+0x1f18>
   12f6c:	ldr	r3, [sp, #24]
   12f70:	ldr	r2, [sp, #28]
   12f74:	mvn	r0, #0
   12f78:	str	r2, [r3]
   12f7c:	b	12f20 <Mat_VarReadNextInfo@plt+0x1ef8>
   12f80:	ldr	r3, [pc, #728]	; 13260 <Mat_VarReadNextInfo@plt+0x2238>
   12f84:	add	r3, pc, r3
   12f88:	str	r3, [sp, #12]
   12f8c:	b	12ddc <Mat_VarReadNextInfo@plt+0x1db4>
   12f90:	ldr	r3, [pc, #716]	; 13264 <Mat_VarReadNextInfo@plt+0x223c>
   12f94:	add	r3, pc, r3
   12f98:	str	r3, [sp, #12]
   12f9c:	b	12ddc <Mat_VarReadNextInfo@plt+0x1db4>
   12fa0:	mov	r8, r2
   12fa4:	mov	fp, r2
   12fa8:	mvn	sl, #0
   12fac:	mov	r2, r6
   12fb0:	mov	r1, r4
   12fb4:	mov	r0, r7
   12fb8:	bl	11004 <strncmp@plt>
   12fbc:	cmp	r0, #0
   12fc0:	mov	r0, r4
   12fc4:	bne	12fe0 <Mat_VarReadNextInfo@plt+0x1fb8>
   12fc8:	bl	10f20 <strlen@plt>
   12fcc:	cmp	r6, r0
   12fd0:	beq	13008 <Mat_VarReadNextInfo@plt+0x1fe0>
   12fd4:	cmn	sl, #1
   12fd8:	movne	r8, #1
   12fdc:	moveq	sl, fp
   12fe0:	add	fp, fp, #1
   12fe4:	ldr	r4, [r5, fp, lsl #4]
   12fe8:	cmp	r4, #0
   12fec:	bne	12fac <Mat_VarReadNextInfo@plt+0x1f84>
   12ff0:	str	r8, [sp, #32]
   12ff4:	mov	r3, r8
   12ff8:	b	12ec8 <Mat_VarReadNextInfo@plt+0x1ea0>
   12ffc:	cmn	sl, #1
   13000:	beq	131f0 <Mat_VarReadNextInfo@plt+0x21c8>
   13004:	mov	fp, sl
   13008:	ldr	r3, [sp, #4]
   1300c:	add	r5, r5, fp, lsl #4
   13010:	cmp	r3, #0
   13014:	ldr	r2, [r5, #4]
   13018:	clz	r1, r2
   1301c:	lsr	r1, r1, #5
   13020:	moveq	r1, #0
   13024:	cmp	r1, #0
   13028:	beq	130a0 <Mat_VarReadNextInfo@plt+0x2078>
   1302c:	ldr	r3, [pc, #540]	; 13250 <Mat_VarReadNextInfo@plt+0x2228>
   13030:	ldr	r3, [r9, r3]
   13034:	ldr	r3, [r3]
   13038:	cmp	r3, #0
   1303c:	beq	1306c <Mat_VarReadNextInfo@plt+0x2044>
   13040:	ldr	r3, [sp, #8]
   13044:	ldrb	r3, [r3]
   13048:	cmp	r3, #58	; 0x3a
   1304c:	beq	1306c <Mat_VarReadNextInfo@plt+0x2044>
   13050:	ldr	r0, [pc, #528]	; 13268 <Mat_VarReadNextInfo@plt+0x2240>
   13054:	mov	r3, r7
   13058:	add	r0, pc, r0
   1305c:	mov	r2, r6
   13060:	ldr	r1, [sp, #12]
   13064:	add	r0, r0, #32
   13068:	bl	10f38 <warnx@plt>
   1306c:	ldr	r3, [r5, #8]
   13070:	cmp	r3, #0
   13074:	bne	12f0c <Mat_VarReadNextInfo@plt+0x1ee4>
   13078:	ldr	r3, [pc, #472]	; 13258 <Mat_VarReadNextInfo@plt+0x2230>
   1307c:	ldr	r2, [r5, #12]
   13080:	mov	r0, #63	; 0x3f
   13084:	ldr	r3, [r9, r3]
   13088:	str	r2, [r3]
   1308c:	b	12f20 <Mat_VarReadNextInfo@plt+0x1ef8>
   13090:	mov	r0, r7
   13094:	bl	10f20 <strlen@plt>
   13098:	mov	r6, r0
   1309c:	b	12e20 <Mat_VarReadNextInfo@plt+0x1df8>
   130a0:	sub	r1, r2, #1
   130a4:	cmp	r1, #1
   130a8:	bls	13104 <Mat_VarReadNextInfo@plt+0x20dc>
   130ac:	ldr	r3, [sp, #16]
   130b0:	cmp	r3, #0
   130b4:	strne	fp, [r3]
   130b8:	ldr	r3, [r5, #8]
   130bc:	cmp	r3, #0
   130c0:	movne	r0, #0
   130c4:	ldrne	r2, [r5, #12]
   130c8:	ldreq	r0, [r5, #12]
   130cc:	strne	r2, [r3]
   130d0:	add	sp, sp, #44	; 0x2c
   130d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130d8:	ldr	r1, [r8, #8]
   130dc:	ldr	r2, [r3, #8]
   130e0:	cmp	r1, r2
   130e4:	bne	12eac <Mat_VarReadNextInfo@plt+0x1e84>
   130e8:	ldr	r3, [r3, #12]
   130ec:	ldr	r2, [r8, #12]
   130f0:	ldr	r1, [sp, #32]
   130f4:	cmp	r2, r3
   130f8:	movne	r1, #1
   130fc:	str	r1, [sp, #32]
   13100:	b	12eb4 <Mat_VarReadNextInfo@plt+0x1e8c>
   13104:	cmp	r3, #0
   13108:	beq	131b4 <Mat_VarReadNextInfo@plt+0x218c>
   1310c:	ldr	r1, [pc, #344]	; 1326c <Mat_VarReadNextInfo@plt+0x2244>
   13110:	cmp	r2, #1
   13114:	ldr	r2, [r9, r1]
   13118:	str	r3, [r2]
   1311c:	bne	130ac <Mat_VarReadNextInfo@plt+0x2084>
   13120:	cmp	r3, #0
   13124:	bne	130ac <Mat_VarReadNextInfo@plt+0x2084>
   13128:	ldr	r3, [pc, #288]	; 13250 <Mat_VarReadNextInfo@plt+0x2228>
   1312c:	ldr	r3, [r9, r3]
   13130:	ldr	r3, [r3]
   13134:	cmp	r3, #0
   13138:	beq	13170 <Mat_VarReadNextInfo@plt+0x2148>
   1313c:	ldr	r3, [sp, #8]
   13140:	ldrb	r3, [r3]
   13144:	cmp	r3, #58	; 0x3a
   13148:	beq	13170 <Mat_VarReadNextInfo@plt+0x2148>
   1314c:	ldr	r0, [pc, #284]	; 13270 <Mat_VarReadNextInfo@plt+0x2248>
   13150:	mov	r2, r7
   13154:	add	r0, pc, r0
   13158:	ldr	r1, [sp, #12]
   1315c:	add	r0, r0, #76	; 0x4c
   13160:	bl	10f38 <warnx@plt>
   13164:	ldr	r3, [sp, #24]
   13168:	ldr	r3, [r3]
   1316c:	str	r3, [sp, #20]
   13170:	ldr	r3, [r5, #8]
   13174:	ldr	r0, [sp, #24]
   13178:	cmp	r3, #0
   1317c:	ldr	r2, [pc, #212]	; 13258 <Mat_VarReadNextInfo@plt+0x2230>
   13180:	ldr	r3, [sp, #20]
   13184:	ldreq	r1, [r5, #12]
   13188:	sub	r3, r3, #1
   1318c:	ldr	r2, [r9, r2]
   13190:	str	r3, [r0]
   13194:	ldr	r3, [sp, #8]
   13198:	movne	r1, #0
   1319c:	str	r1, [r2]
   131a0:	ldrb	r0, [r3]
   131a4:	cmp	r0, #58	; 0x3a
   131a8:	movne	r0, #63	; 0x3f
   131ac:	moveq	r0, #58	; 0x3a
   131b0:	b	12f20 <Mat_VarReadNextInfo@plt+0x1ef8>
   131b4:	cmp	r2, #1
   131b8:	bne	130ac <Mat_VarReadNextInfo@plt+0x2084>
   131bc:	ldr	r3, [sp, #28]
   131c0:	ldr	r2, [pc, #164]	; 1326c <Mat_VarReadNextInfo@plt+0x2244>
   131c4:	add	r1, r3, #2
   131c8:	ldr	r3, [sp, #24]
   131cc:	ldr	r0, [sp, #20]
   131d0:	str	r1, [r3]
   131d4:	ldr	r3, [sp, #36]	; 0x24
   131d8:	ldr	r2, [r9, r2]
   131dc:	str	r1, [sp, #20]
   131e0:	ldr	r3, [r3, r0, lsl #2]
   131e4:	str	r3, [sp, #4]
   131e8:	str	r3, [r2]
   131ec:	b	13120 <Mat_VarReadNextInfo@plt+0x20f8>
   131f0:	ldr	r3, [sp, #80]	; 0x50
   131f4:	cmp	r3, #0
   131f8:	bne	12f6c <Mat_VarReadNextInfo@plt+0x1f44>
   131fc:	ldr	r3, [pc, #76]	; 13250 <Mat_VarReadNextInfo@plt+0x2228>
   13200:	ldr	r3, [r9, r3]
   13204:	ldr	r3, [r3]
   13208:	cmp	r3, #0
   1320c:	beq	12f0c <Mat_VarReadNextInfo@plt+0x1ee4>
   13210:	ldr	r3, [sp, #8]
   13214:	ldrb	r3, [r3]
   13218:	cmp	r3, #58	; 0x3a
   1321c:	beq	12f0c <Mat_VarReadNextInfo@plt+0x1ee4>
   13220:	ldr	r0, [pc, #76]	; 13274 <Mat_VarReadNextInfo@plt+0x224c>
   13224:	mov	r2, r7
   13228:	add	r0, pc, r0
   1322c:	ldr	r1, [sp, #12]
   13230:	add	r0, r0, #112	; 0x70
   13234:	bl	10f38 <warnx@plt>
   13238:	b	12f0c <Mat_VarReadNextInfo@plt+0x1ee4>
   1323c:	andeq	r2, r1, r8, lsr #8
   13240:	andeq	r2, r1, r4, lsr r4
   13244:	andeq	r2, r1, r0, asr #4
   13248:	andeq	r1, r0, r4, ror #12
   1324c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13250:	andeq	r0, r0, r8, ror #1
   13254:	andeq	r1, r0, r4, asr #25
   13258:	strdeq	r0, [r0], -r4
   1325c:	andeq	r1, r0, ip, ror sp
   13260:	andeq	r1, r0, ip, lsr #26
   13264:	andeq	r1, r0, r8, lsl sp
   13268:	andeq	r1, r0, r0, ror fp
   1326c:	strdeq	r0, [r0], -r8
   13270:	andeq	r1, r0, r4, ror sl
   13274:	andeq	r1, r0, r0, lsr #19
   13278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1327c:	sub	sp, sp, #52	; 0x34
   13280:	cmp	r2, #0
   13284:	str	r3, [sp, #36]	; 0x24
   13288:	ldr	r3, [pc, #2676]	; 13d04 <Mat_VarReadNextInfo@plt+0x2cdc>
   1328c:	str	r2, [sp, #28]
   13290:	add	r3, pc, r3
   13294:	str	r0, [sp, #12]
   13298:	str	r3, [sp, #32]
   1329c:	beq	13698 <Mat_VarReadNextInfo@plt+0x2670>
   132a0:	ldr	r0, [pc, #2656]	; 13d08 <Mat_VarReadNextInfo@plt+0x2ce0>
   132a4:	mov	r4, r1
   132a8:	add	r0, pc, r0
   132ac:	bl	10eb4 <getenv@plt>
   132b0:	ldr	r3, [sp, #28]
   132b4:	ldrb	r3, [r3]
   132b8:	cmp	r3, #45	; 0x2d
   132bc:	str	r0, [sp, #44]	; 0x2c
   132c0:	beq	134f8 <Mat_VarReadNextInfo@plt+0x24d0>
   132c4:	adds	r2, r0, #0
   132c8:	movne	r2, #1
   132cc:	cmp	r3, #43	; 0x2b
   132d0:	orreq	r2, r2, #1
   132d4:	cmp	r2, #0
   132d8:	sub	r3, r3, #43	; 0x2b
   132dc:	ldrne	r2, [sp, #92]	; 0x5c
   132e0:	bicne	r2, r2, #1
   132e4:	strne	r2, [sp, #92]	; 0x5c
   132e8:	tst	r3, #253	; 0xfd
   132ec:	beq	13504 <Mat_VarReadNextInfo@plt+0x24dc>
   132f0:	ldr	r3, [pc, #2580]	; 13d0c <Mat_VarReadNextInfo@plt+0x2ce4>
   132f4:	ldr	r1, [sp, #32]
   132f8:	ldr	r8, [r1, r3]
   132fc:	ldr	r0, [r8]
   13300:	cmp	r0, #0
   13304:	beq	13620 <Mat_VarReadNextInfo@plt+0x25f8>
   13308:	ldr	r2, [pc, #2560]	; 13d10 <Mat_VarReadNextInfo@plt+0x2ce8>
   1330c:	ldr	r3, [pc, #2560]	; 13d14 <Mat_VarReadNextInfo@plt+0x2cec>
   13310:	mov	r0, #0
   13314:	ldr	r2, [r1, r2]
   13318:	mov	ip, r2
   1331c:	str	r2, [sp, #16]
   13320:	ldr	r3, [r1, r3]
   13324:	ldr	r1, [ip]
   13328:	str	r3, [sp, #40]	; 0x28
   1332c:	cmp	r1, r0
   13330:	str	r0, [r3]
   13334:	bne	13654 <Mat_VarReadNextInfo@plt+0x262c>
   13338:	ldr	r2, [pc, #2520]	; 13d18 <Mat_VarReadNextInfo@plt+0x2cf0>
   1333c:	ldr	r3, [pc, #2520]	; 13d1c <Mat_VarReadNextInfo@plt+0x2cf4>
   13340:	add	r2, pc, r2
   13344:	add	r3, pc, r3
   13348:	ldr	r9, [r2]
   1334c:	ldr	r2, [r3, #8]
   13350:	cmp	r1, #0
   13354:	str	r2, [sp, #8]
   13358:	ldr	r2, [sp, #92]	; 0x5c
   1335c:	mov	r1, #0
   13360:	and	r7, r2, #2
   13364:	and	r2, r2, #1
   13368:	str	r2, [sp, #20]
   1336c:	ldr	r2, [pc, #2476]	; 13d20 <Mat_VarReadNextInfo@plt+0x2cf8>
   13370:	ldr	r5, [r3, #4]
   13374:	add	r2, pc, r2
   13378:	mov	r0, r1
   1337c:	mov	r3, r1
   13380:	str	r2, [sp, #24]
   13384:	bne	13394 <Mat_VarReadNextInfo@plt+0x236c>
   13388:	ldrb	sl, [r9]
   1338c:	cmp	sl, #0
   13390:	bne	134c8 <Mat_VarReadNextInfo@plt+0x24a0>
   13394:	ldr	r2, [sp, #16]
   13398:	mov	ip, #0
   1339c:	ldr	r6, [r8]
   133a0:	str	ip, [r2]
   133a4:	ldr	r2, [sp, #12]
   133a8:	cmp	r6, r2
   133ac:	bge	136ec <Mat_VarReadNextInfo@plt+0x26c4>
   133b0:	ldr	r3, [r4, r6, lsl #2]
   133b4:	ldrb	r2, [r3]
   133b8:	cmp	r2, #45	; 0x2d
   133bc:	beq	13514 <Mat_VarReadNextInfo@plt+0x24ec>
   133c0:	cmp	r7, #0
   133c4:	bne	136a8 <Mat_VarReadNextInfo@plt+0x2680>
   133c8:	ldr	r3, [sp, #20]
   133cc:	cmp	r3, #0
   133d0:	beq	13674 <Mat_VarReadNextInfo@plt+0x264c>
   133d4:	ldr	r3, [sp, #8]
   133d8:	cmn	r3, #1
   133dc:	beq	13614 <Mat_VarReadNextInfo@plt+0x25ec>
   133e0:	cmn	r5, #1
   133e4:	beq	134ac <Mat_VarReadNextInfo@plt+0x2484>
   133e8:	sub	sl, r5, r3
   133ec:	sub	r9, r6, r5
   133f0:	mov	r0, sl
   133f4:	mov	r1, r9
   133f8:	bl	1426c <getopt_long_only@@Base+0x450>
   133fc:	subs	fp, r1, #0
   13400:	beq	1366c <Mat_VarReadNextInfo@plt+0x2644>
   13404:	mov	r0, r9
   13408:	b	13410 <Mat_VarReadNextInfo@plt+0x23e8>
   1340c:	mov	fp, r1
   13410:	mov	r1, fp
   13414:	bl	1426c <getopt_long_only@@Base+0x450>
   13418:	mov	r0, fp
   1341c:	cmp	r1, #0
   13420:	bne	1340c <Mat_VarReadNextInfo@plt+0x23e4>
   13424:	ldr	r3, [sp, #8]
   13428:	mov	r1, fp
   1342c:	sub	r0, r6, r3
   13430:	bl	1404c <getopt_long_only@@Base+0x230>
   13434:	cmp	fp, #0
   13438:	ble	13498 <Mat_VarReadNextInfo@plt+0x2470>
   1343c:	cmp	r0, #0
   13440:	ble	13498 <Mat_VarReadNextInfo@plt+0x2470>
   13444:	add	lr, fp, r5
   13448:	add	r1, r4, r5, lsl #2
   1344c:	mov	fp, r5
   13450:	mov	r3, fp
   13454:	mov	r2, r7
   13458:	str	lr, [sp, #8]
   1345c:	cmp	r3, r5
   13460:	subge	r3, r3, sl
   13464:	addlt	r3, r9, r3
   13468:	ldr	lr, [r1]
   1346c:	ldr	ip, [r4, r3, lsl #2]
   13470:	add	r2, r2, #1
   13474:	cmp	r0, r2
   13478:	str	lr, [r4, r3, lsl #2]
   1347c:	str	ip, [r1]
   13480:	bne	1345c <Mat_VarReadNextInfo@plt+0x2434>
   13484:	ldr	lr, [sp, #8]
   13488:	add	fp, fp, #1
   1348c:	cmp	lr, fp
   13490:	add	r1, r1, #4
   13494:	bne	13450 <Mat_VarReadNextInfo@plt+0x2428>
   13498:	mov	r1, #1
   1349c:	mvn	r5, #0
   134a0:	mov	r0, r1
   134a4:	sub	r3, r6, sl
   134a8:	str	r3, [sp, #8]
   134ac:	ldr	r9, [sp, #24]
   134b0:	add	r6, r6, #1
   134b4:	str	r6, [r8]
   134b8:	ldrb	sl, [r9]
   134bc:	mov	r3, #1
   134c0:	cmp	sl, #0
   134c4:	beq	13394 <Mat_VarReadNextInfo@plt+0x236c>
   134c8:	cmp	r3, #0
   134cc:	bne	13c80 <Mat_VarReadNextInfo@plt+0x2c58>
   134d0:	cmp	r0, #0
   134d4:	ldrne	r3, [pc, #2120]	; 13d24 <Mat_VarReadNextInfo@plt+0x2cfc>
   134d8:	ldrne	r2, [sp, #8]
   134dc:	addne	r3, pc, r3
   134e0:	strne	r2, [r3, #8]
   134e4:	cmp	r1, #0
   134e8:	ldrne	r3, [pc, #2104]	; 13d28 <Mat_VarReadNextInfo@plt+0x2d00>
   134ec:	addne	r3, pc, r3
   134f0:	strne	r5, [r3, #4]
   134f4:	b	13570 <Mat_VarReadNextInfo@plt+0x2548>
   134f8:	ldr	r3, [sp, #92]	; 0x5c
   134fc:	orr	r3, r3, #2
   13500:	str	r3, [sp, #92]	; 0x5c
   13504:	ldr	r3, [sp, #28]
   13508:	add	r3, r3, #1
   1350c:	str	r3, [sp, #28]
   13510:	b	132f0 <Mat_VarReadNextInfo@plt+0x22c8>
   13514:	ldrb	sl, [r3, #1]
   13518:	cmp	sl, #0
   1351c:	beq	133c0 <Mat_VarReadNextInfo@plt+0x2398>
   13520:	cmp	r0, #0
   13524:	bne	13b90 <Mat_VarReadNextInfo@plt+0x2b68>
   13528:	cmp	r1, #0
   1352c:	ldrne	r2, [pc, #2040]	; 13d2c <Mat_VarReadNextInfo@plt+0x2d04>
   13530:	addne	r2, pc, r2
   13534:	strne	r5, [r2, #4]
   13538:	ldr	r2, [pc, #2032]	; 13d30 <Mat_VarReadNextInfo@plt+0x2d08>
   1353c:	add	r2, pc, r2
   13540:	ldr	r7, [r2, #8]
   13544:	cmn	r7, #1
   13548:	beq	13558 <Mat_VarReadNextInfo@plt+0x2530>
   1354c:	ldr	r1, [r2, #4]
   13550:	cmn	r1, #1
   13554:	streq	r6, [r2, #4]
   13558:	ldr	r2, [pc, #2004]	; 13d34 <Mat_VarReadNextInfo@plt+0x2d0c>
   1355c:	add	r9, r3, #1
   13560:	add	r2, pc, r2
   13564:	cmp	sl, #45	; 0x2d
   13568:	str	r9, [r2]
   1356c:	beq	13898 <Mat_VarReadNextInfo@plt+0x2870>
   13570:	ldr	r3, [sp, #36]	; 0x24
   13574:	cmp	r3, #0
   13578:	beq	13814 <Mat_VarReadNextInfo@plt+0x27ec>
   1357c:	ldr	r3, [r8]
   13580:	ldr	r3, [r4, r3, lsl #2]
   13584:	cmp	r3, r9
   13588:	beq	13814 <Mat_VarReadNextInfo@plt+0x27ec>
   1358c:	cmp	sl, #45	; 0x2d
   13590:	beq	138c0 <Mat_VarReadNextInfo@plt+0x2898>
   13594:	ldr	r3, [sp, #92]	; 0x5c
   13598:	tst	r3, #4
   1359c:	beq	13814 <Mat_VarReadNextInfo@plt+0x27ec>
   135a0:	ldr	r3, [pc, #1936]	; 13d38 <Mat_VarReadNextInfo@plt+0x2d10>
   135a4:	mov	r0, #0
   135a8:	add	r3, pc, r3
   135ac:	cmp	sl, #58	; 0x3a
   135b0:	str	r0, [r3]
   135b4:	beq	135cc <Mat_VarReadNextInfo@plt+0x25a4>
   135b8:	mov	r1, sl
   135bc:	ldr	r0, [sp, #28]
   135c0:	bl	10f2c <strchr@plt>
   135c4:	adds	r0, r0, #0
   135c8:	movne	r0, #1
   135cc:	ldr	r3, [sp, #92]	; 0x5c
   135d0:	ldr	r2, [sp, #36]	; 0x24
   135d4:	ldr	r1, [sp, #28]
   135d8:	stm	sp, {r0, r3}
   135dc:	ldr	r3, [sp, #88]	; 0x58
   135e0:	mov	r0, r4
   135e4:	bl	12d80 <Mat_VarReadNextInfo@plt+0x1d58>
   135e8:	cmn	r0, #1
   135ec:	mov	r6, r0
   135f0:	beq	13808 <Mat_VarReadNextInfo@plt+0x27e0>
   135f4:	ldr	r3, [pc, #1856]	; 13d3c <Mat_VarReadNextInfo@plt+0x2d14>
   135f8:	ldr	r2, [pc, #1856]	; 13d40 <Mat_VarReadNextInfo@plt+0x2d18>
   135fc:	add	r3, pc, r3
   13600:	add	r2, pc, r2
   13604:	mov	r0, r6
   13608:	str	r2, [r3]
   1360c:	add	sp, sp, #52	; 0x34
   13610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13614:	str	r6, [sp, #8]
   13618:	mov	r0, #1
   1361c:	b	134ac <Mat_VarReadNextInfo@plt+0x2484>
   13620:	mov	ip, r1
   13624:	ldr	r1, [pc, #1764]	; 13d10 <Mat_VarReadNextInfo@plt+0x2ce8>
   13628:	ldr	r3, [pc, #1764]	; 13d14 <Mat_VarReadNextInfo@plt+0x2cec>
   1362c:	mov	r2, #1
   13630:	ldr	r1, [ip, r1]
   13634:	str	r2, [r8]
   13638:	mov	lr, r1
   1363c:	str	r1, [sp, #16]
   13640:	str	r2, [lr]
   13644:	ldr	r3, [ip, r3]
   13648:	mov	r1, r2
   1364c:	str	r3, [sp, #40]	; 0x28
   13650:	str	r0, [r3]
   13654:	ldr	r3, [pc, #1768]	; 13d44 <Mat_VarReadNextInfo@plt+0x2d1c>
   13658:	mvn	r2, #0
   1365c:	add	r3, pc, r3
   13660:	str	r2, [r3, #4]
   13664:	str	r2, [r3, #8]
   13668:	b	13338 <Mat_VarReadNextInfo@plt+0x2310>
   1366c:	mov	fp, r9
   13670:	b	13424 <Mat_VarReadNextInfo@plt+0x23fc>
   13674:	ldr	r3, [pc, #1740]	; 13d48 <Mat_VarReadNextInfo@plt+0x2d20>
   13678:	ldr	r2, [pc, #1740]	; 13d4c <Mat_VarReadNextInfo@plt+0x2d24>
   1367c:	add	r3, pc, r3
   13680:	add	r2, pc, r2
   13684:	cmp	r0, #0
   13688:	str	r2, [r3]
   1368c:	bne	13cf0 <Mat_VarReadNextInfo@plt+0x2cc8>
   13690:	cmp	r1, #0
   13694:	bne	13ce0 <Mat_VarReadNextInfo@plt+0x2cb8>
   13698:	mvn	r6, #0
   1369c:	mov	r0, r6
   136a0:	add	sp, sp, #52	; 0x34
   136a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136a8:	ldr	r2, [pc, #1696]	; 13d50 <Mat_VarReadNextInfo@plt+0x2d28>
   136ac:	ldr	ip, [pc, #1696]	; 13d54 <Mat_VarReadNextInfo@plt+0x2d2c>
   136b0:	add	r2, pc, r2
   136b4:	add	ip, pc, ip
   136b8:	cmp	r0, #0
   136bc:	str	ip, [r2]
   136c0:	bne	13ccc <Mat_VarReadNextInfo@plt+0x2ca4>
   136c4:	cmp	r1, #0
   136c8:	bne	13cbc <Mat_VarReadNextInfo@plt+0x2c94>
   136cc:	add	r6, r6, #1
   136d0:	ldr	r2, [sp, #40]	; 0x28
   136d4:	str	r6, [r8]
   136d8:	mov	r6, #1
   136dc:	str	r3, [r2]
   136e0:	mov	r0, r6
   136e4:	add	sp, sp, #52	; 0x34
   136e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136ec:	cmp	r0, ip
   136f0:	bne	13ca8 <Mat_VarReadNextInfo@plt+0x2c80>
   136f4:	cmp	r1, #0
   136f8:	bne	13c98 <Mat_VarReadNextInfo@plt+0x2c70>
   136fc:	ldr	r3, [pc, #1620]	; 13d58 <Mat_VarReadNextInfo@plt+0x2d30>
   13700:	ldr	r2, [pc, #1620]	; 13d5c <Mat_VarReadNextInfo@plt+0x2d34>
   13704:	add	r3, pc, r3
   13708:	ldr	r1, [pc, #1616]	; 13d60 <Mat_VarReadNextInfo@plt+0x2d38>
   1370c:	ldr	r5, [r3, #4]
   13710:	add	r2, pc, r2
   13714:	add	r1, pc, r1
   13718:	cmn	r5, #1
   1371c:	str	r1, [r2]
   13720:	beq	137f8 <Mat_VarReadNextInfo@plt+0x27d0>
   13724:	ldr	fp, [r3, #8]
   13728:	sub	r9, r6, r5
   1372c:	sub	r7, r5, fp
   13730:	mov	r0, r7
   13734:	mov	r1, r9
   13738:	bl	1426c <getopt_long_only@@Base+0x450>
   1373c:	subs	sl, r1, #0
   13740:	beq	13c90 <Mat_VarReadNextInfo@plt+0x2c68>
   13744:	mov	r0, r9
   13748:	b	13750 <Mat_VarReadNextInfo@plt+0x2728>
   1374c:	mov	sl, r1
   13750:	mov	r1, sl
   13754:	bl	1426c <getopt_long_only@@Base+0x450>
   13758:	mov	r0, sl
   1375c:	cmp	r1, #0
   13760:	bne	1374c <Mat_VarReadNextInfo@plt+0x2724>
   13764:	sub	r0, r6, fp
   13768:	mov	r1, sl
   1376c:	bl	1404c <getopt_long_only@@Base+0x230>
   13770:	cmp	sl, #0
   13774:	ble	137cc <Mat_VarReadNextInfo@plt+0x27a4>
   13778:	cmp	r0, #0
   1377c:	ble	137cc <Mat_VarReadNextInfo@plt+0x27a4>
   13780:	add	sl, sl, r5
   13784:	mov	fp, r5
   13788:	add	r1, r4, r5, lsl #2
   1378c:	mov	r3, fp
   13790:	mov	r2, #0
   13794:	cmp	r5, r3
   13798:	suble	r3, r3, r7
   1379c:	addgt	r3, r9, r3
   137a0:	ldr	lr, [r1]
   137a4:	ldr	ip, [r4, r3, lsl #2]
   137a8:	add	r2, r2, #1
   137ac:	cmp	r0, r2
   137b0:	str	lr, [r4, r3, lsl #2]
   137b4:	str	ip, [r1]
   137b8:	bne	13794 <Mat_VarReadNextInfo@plt+0x276c>
   137bc:	add	fp, fp, #1
   137c0:	cmp	sl, fp
   137c4:	add	r1, r1, #4
   137c8:	bne	1378c <Mat_VarReadNextInfo@plt+0x2764>
   137cc:	sub	r6, r6, r7
   137d0:	str	r6, [r8]
   137d4:	ldr	r3, [pc, #1416]	; 13d64 <Mat_VarReadNextInfo@plt+0x2d3c>
   137d8:	mvn	r2, #0
   137dc:	add	r3, pc, r3
   137e0:	mov	r6, r2
   137e4:	mov	r0, r6
   137e8:	str	r2, [r3, #4]
   137ec:	str	r2, [r3, #8]
   137f0:	add	sp, sp, #52	; 0x34
   137f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137f8:	ldr	r3, [r3, #8]
   137fc:	cmn	r3, #1
   13800:	strne	r3, [r8]
   13804:	b	137d4 <Mat_VarReadNextInfo@plt+0x27ac>
   13808:	ldr	r3, [pc, #1368]	; 13d68 <Mat_VarReadNextInfo@plt+0x2d40>
   1380c:	ldr	r9, [pc, r3]
   13810:	ldrb	sl, [r9]
   13814:	ldr	r7, [pc, #1360]	; 13d6c <Mat_VarReadNextInfo@plt+0x2d44>
   13818:	add	r5, r9, #1
   1381c:	add	r7, pc, r7
   13820:	cmp	sl, #58	; 0x3a
   13824:	str	r5, [r7]
   13828:	mov	r6, sl
   1382c:	beq	13988 <Mat_VarReadNextInfo@plt+0x2960>
   13830:	cmp	sl, #45	; 0x2d
   13834:	beq	13910 <Mat_VarReadNextInfo@plt+0x28e8>
   13838:	mov	r1, sl
   1383c:	ldr	r0, [sp, #28]
   13840:	bl	10f2c <strchr@plt>
   13844:	cmp	r0, #0
   13848:	beq	13988 <Mat_VarReadNextInfo@plt+0x2960>
   1384c:	ldr	r3, [sp, #36]	; 0x24
   13850:	adds	r3, r3, #0
   13854:	movne	r3, #1
   13858:	cmp	sl, #87	; 0x57
   1385c:	movne	r3, #0
   13860:	cmp	r3, #0
   13864:	beq	13900 <Mat_VarReadNextInfo@plt+0x28d8>
   13868:	ldrb	r3, [r0, #1]
   1386c:	cmp	r3, #59	; 0x3b
   13870:	movne	r6, #87	; 0x57
   13874:	beq	139f4 <Mat_VarReadNextInfo@plt+0x29cc>
   13878:	cmp	r3, #58	; 0x3a
   1387c:	beq	139b0 <Mat_VarReadNextInfo@plt+0x2988>
   13880:	ldrb	r3, [r9, #1]
   13884:	cmp	r3, #0
   13888:	ldreq	r3, [r8]
   1388c:	addeq	r3, r3, #1
   13890:	streq	r3, [r8]
   13894:	b	136e0 <Mat_VarReadNextInfo@plt+0x26b8>
   13898:	ldrb	r1, [r3, #2]
   1389c:	cmp	r1, #0
   138a0:	beq	13ba4 <Mat_VarReadNextInfo@plt+0x2b7c>
   138a4:	ldr	r1, [sp, #36]	; 0x24
   138a8:	cmp	r1, #0
   138ac:	beq	13908 <Mat_VarReadNextInfo@plt+0x28e0>
   138b0:	ldr	r3, [r8]
   138b4:	ldr	r3, [r4, r3, lsl #2]
   138b8:	cmp	r9, r3
   138bc:	beq	13814 <Mat_VarReadNextInfo@plt+0x27ec>
   138c0:	ldr	r2, [pc, #1192]	; 13d70 <Mat_VarReadNextInfo@plt+0x2d48>
   138c4:	ldr	r3, [pc, #1192]	; 13d74 <Mat_VarReadNextInfo@plt+0x2d4c>
   138c8:	add	r2, pc, r2
   138cc:	add	r3, pc, r3
   138d0:	add	r9, r9, #1
   138d4:	str	r9, [r2]
   138d8:	mov	r2, #1
   138dc:	str	r2, [r3]
   138e0:	mov	r0, #0
   138e4:	b	135cc <Mat_VarReadNextInfo@plt+0x25a4>
   138e8:	mov	r1, #45	; 0x2d
   138ec:	ldr	r0, [sp, #28]
   138f0:	bl	10f2c <strchr@plt>
   138f4:	cmp	r0, #0
   138f8:	beq	13698 <Mat_VarReadNextInfo@plt+0x2670>
   138fc:	mov	r6, #45	; 0x2d
   13900:	ldrb	r3, [r0, #1]
   13904:	b	13878 <Mat_VarReadNextInfo@plt+0x2850>
   13908:	add	r5, r3, #2
   1390c:	str	r5, [r2]
   13910:	ldrb	r3, [r9, #1]
   13914:	cmp	r3, #0
   13918:	beq	138e8 <Mat_VarReadNextInfo@plt+0x28c0>
   1391c:	mov	r6, #45	; 0x2d
   13920:	ldr	r3, [pc, #1104]	; 13d78 <Mat_VarReadNextInfo@plt+0x2d50>
   13924:	ldr	r2, [sp, #32]
   13928:	ldr	r3, [r2, r3]
   1392c:	ldr	r3, [r3]
   13930:	cmp	r3, #0
   13934:	beq	1396c <Mat_VarReadNextInfo@plt+0x2944>
   13938:	ldr	r3, [sp, #28]
   1393c:	ldrb	r3, [r3]
   13940:	cmp	r3, #58	; 0x3a
   13944:	beq	1396c <Mat_VarReadNextInfo@plt+0x2944>
   13948:	ldr	r3, [sp, #44]	; 0x2c
   1394c:	cmp	r3, #0
   13950:	beq	139a0 <Mat_VarReadNextInfo@plt+0x2978>
   13954:	ldr	r0, [pc, #1056]	; 13d7c <Mat_VarReadNextInfo@plt+0x2d54>
   13958:	add	r0, pc, r0
   1395c:	add	r0, r0, #140	; 0x8c
   13960:	mov	r1, r6
   13964:	bl	10f38 <warnx@plt>
   13968:	ldr	r2, [sp, #32]
   1396c:	ldr	r3, [pc, #1036]	; 13d80 <Mat_VarReadNextInfo@plt+0x2d58>
   13970:	ldr	r3, [r2, r3]
   13974:	str	r6, [r3]
   13978:	mov	r6, #63	; 0x3f
   1397c:	mov	r0, r6
   13980:	add	sp, sp, #52	; 0x34
   13984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13988:	ldrb	r3, [r9, #1]
   1398c:	cmp	r3, #0
   13990:	ldreq	r3, [r8]
   13994:	addeq	r3, r3, #1
   13998:	streq	r3, [r8]
   1399c:	b	13920 <Mat_VarReadNextInfo@plt+0x28f8>
   139a0:	ldr	r0, [pc, #988]	; 13d84 <Mat_VarReadNextInfo@plt+0x2d5c>
   139a4:	add	r0, pc, r0
   139a8:	add	r0, r0, #164	; 0xa4
   139ac:	b	13960 <Mat_VarReadNextInfo@plt+0x2938>
   139b0:	ldr	r2, [sp, #40]	; 0x28
   139b4:	mov	r3, #0
   139b8:	str	r3, [r2]
   139bc:	ldrb	r3, [r9, #1]
   139c0:	cmp	r3, #0
   139c4:	beq	13ae4 <Mat_VarReadNextInfo@plt+0x2abc>
   139c8:	ldr	r3, [r8]
   139cc:	str	r5, [r2]
   139d0:	ldr	r2, [pc, #944]	; 13d88 <Mat_VarReadNextInfo@plt+0x2d60>
   139d4:	add	r3, r3, #1
   139d8:	add	r2, pc, r2
   139dc:	ldr	r1, [pc, #936]	; 13d8c <Mat_VarReadNextInfo@plt+0x2d64>
   139e0:	str	r3, [r8]
   139e4:	mov	r3, r2
   139e8:	add	r1, pc, r1
   139ec:	str	r1, [r3]
   139f0:	b	136e0 <Mat_VarReadNextInfo@plt+0x26b8>
   139f4:	ldrb	r3, [r9, #1]
   139f8:	cmp	r3, #0
   139fc:	bne	13a94 <Mat_VarReadNextInfo@plt+0x2a6c>
   13a00:	ldr	r3, [r8]
   13a04:	ldr	r2, [sp, #12]
   13a08:	add	r3, r3, #1
   13a0c:	cmp	r2, r3
   13a10:	str	r3, [r8]
   13a14:	bgt	13a8c <Mat_VarReadNextInfo@plt+0x2a64>
   13a18:	ldr	r2, [pc, #880]	; 13d90 <Mat_VarReadNextInfo@plt+0x2d68>
   13a1c:	ldr	r3, [pc, #852]	; 13d78 <Mat_VarReadNextInfo@plt+0x2d50>
   13a20:	add	r2, pc, r2
   13a24:	str	r2, [r7]
   13a28:	ldr	r2, [sp, #32]
   13a2c:	ldr	r3, [r2, r3]
   13a30:	ldr	r3, [r3]
   13a34:	cmp	r3, #0
   13a38:	beq	13a60 <Mat_VarReadNextInfo@plt+0x2a38>
   13a3c:	ldr	r3, [sp, #28]
   13a40:	ldrb	r3, [r3]
   13a44:	cmp	r3, #58	; 0x3a
   13a48:	beq	13a60 <Mat_VarReadNextInfo@plt+0x2a38>
   13a4c:	ldr	r0, [pc, #832]	; 13d94 <Mat_VarReadNextInfo@plt+0x2d6c>
   13a50:	mov	r1, #87	; 0x57
   13a54:	add	r0, pc, r0
   13a58:	add	r0, r0, #188	; 0xbc
   13a5c:	bl	10f38 <warnx@plt>
   13a60:	ldr	r3, [pc, #792]	; 13d80 <Mat_VarReadNextInfo@plt+0x2d58>
   13a64:	ldr	r1, [sp, #32]
   13a68:	mov	r2, #87	; 0x57
   13a6c:	ldr	r3, [r1, r3]
   13a70:	str	r2, [r3]
   13a74:	ldr	r3, [sp, #28]
   13a78:	ldrb	r3, [r3]
   13a7c:	cmp	r3, #58	; 0x3a
   13a80:	beq	13b78 <Mat_VarReadNextInfo@plt+0x2b50>
   13a84:	mov	r6, #63	; 0x3f
   13a88:	b	136e0 <Mat_VarReadNextInfo@plt+0x26b8>
   13a8c:	ldr	r3, [r4, r3, lsl #2]
   13a90:	str	r3, [r7]
   13a94:	ldr	ip, [pc, #764]	; 13d98 <Mat_VarReadNextInfo@plt+0x2d70>
   13a98:	ldr	r2, [sp, #92]	; 0x5c
   13a9c:	add	ip, pc, ip
   13aa0:	mov	r3, #0
   13aa4:	mov	lr, #2
   13aa8:	str	r2, [sp, #4]
   13aac:	str	r3, [sp]
   13ab0:	ldr	r2, [sp, #36]	; 0x24
   13ab4:	ldr	r3, [sp, #88]	; 0x58
   13ab8:	ldr	r1, [sp, #28]
   13abc:	mov	r0, r4
   13ac0:	str	lr, [ip]
   13ac4:	bl	12d80 <Mat_VarReadNextInfo@plt+0x1d58>
   13ac8:	ldr	r3, [pc, #716]	; 13d9c <Mat_VarReadNextInfo@plt+0x2d74>
   13acc:	ldr	r2, [pc, #716]	; 13da0 <Mat_VarReadNextInfo@plt+0x2d78>
   13ad0:	add	r3, pc, r3
   13ad4:	add	r2, pc, r2
   13ad8:	str	r2, [r3]
   13adc:	mov	r6, r0
   13ae0:	b	136e0 <Mat_VarReadNextInfo@plt+0x26b8>
   13ae4:	ldrb	r3, [r0, #2]
   13ae8:	cmp	r3, #58	; 0x3a
   13aec:	ldr	r3, [r8]
   13af0:	beq	139d0 <Mat_VarReadNextInfo@plt+0x29a8>
   13af4:	ldr	r2, [sp, #12]
   13af8:	add	r3, r3, #1
   13afc:	cmp	r2, r3
   13b00:	str	r3, [r8]
   13b04:	bgt	13b80 <Mat_VarReadNextInfo@plt+0x2b58>
   13b08:	ldr	r2, [pc, #660]	; 13da4 <Mat_VarReadNextInfo@plt+0x2d7c>
   13b0c:	ldr	r1, [pc, #660]	; 13da8 <Mat_VarReadNextInfo@plt+0x2d80>
   13b10:	add	r2, pc, r2
   13b14:	add	r1, pc, r1
   13b18:	str	r1, [r2]
   13b1c:	ldr	r3, [pc, #596]	; 13d78 <Mat_VarReadNextInfo@plt+0x2d50>
   13b20:	ldr	r2, [sp, #32]
   13b24:	ldr	r3, [r2, r3]
   13b28:	ldr	r3, [r3]
   13b2c:	cmp	r3, #0
   13b30:	beq	13b5c <Mat_VarReadNextInfo@plt+0x2b34>
   13b34:	ldr	r3, [sp, #28]
   13b38:	ldrb	r3, [r3]
   13b3c:	cmp	r3, #58	; 0x3a
   13b40:	beq	13b5c <Mat_VarReadNextInfo@plt+0x2b34>
   13b44:	ldr	r0, [pc, #608]	; 13dac <Mat_VarReadNextInfo@plt+0x2d84>
   13b48:	mov	r1, r6
   13b4c:	add	r0, pc, r0
   13b50:	add	r0, r0, #188	; 0xbc
   13b54:	bl	10f38 <warnx@plt>
   13b58:	ldr	r2, [sp, #32]
   13b5c:	ldr	r3, [pc, #540]	; 13d80 <Mat_VarReadNextInfo@plt+0x2d58>
   13b60:	ldr	r3, [r2, r3]
   13b64:	str	r6, [r3]
   13b68:	ldr	r3, [sp, #28]
   13b6c:	ldrb	r3, [r3]
   13b70:	cmp	r3, #58	; 0x3a
   13b74:	bne	13a84 <Mat_VarReadNextInfo@plt+0x2a5c>
   13b78:	mov	r6, #58	; 0x3a
   13b7c:	b	136e0 <Mat_VarReadNextInfo@plt+0x26b8>
   13b80:	ldr	r1, [sp, #40]	; 0x28
   13b84:	ldr	r2, [r4, r3, lsl #2]
   13b88:	str	r2, [r1]
   13b8c:	b	139d0 <Mat_VarReadNextInfo@plt+0x29a8>
   13b90:	ldr	r2, [pc, #536]	; 13db0 <Mat_VarReadNextInfo@plt+0x2d88>
   13b94:	ldr	r0, [sp, #8]
   13b98:	add	r2, pc, r2
   13b9c:	str	r0, [r2, #8]
   13ba0:	b	13528 <Mat_VarReadNextInfo@plt+0x2500>
   13ba4:	ldr	r1, [pc, #520]	; 13db4 <Mat_VarReadNextInfo@plt+0x2d8c>
   13ba8:	ldr	r3, [pc, #520]	; 13db8 <Mat_VarReadNextInfo@plt+0x2d90>
   13bac:	add	r1, pc, r1
   13bb0:	add	r3, pc, r3
   13bb4:	ldr	fp, [r1, #4]
   13bb8:	add	r6, r6, #1
   13bbc:	cmn	fp, #1
   13bc0:	str	r6, [r8]
   13bc4:	str	r3, [r2]
   13bc8:	beq	137d4 <Mat_VarReadNextInfo@plt+0x27ac>
   13bcc:	sub	sl, fp, r7
   13bd0:	sub	r9, r6, fp
   13bd4:	mov	r0, sl
   13bd8:	mov	r1, r9
   13bdc:	bl	1426c <getopt_long_only@@Base+0x450>
   13be0:	subs	r5, r1, #0
   13be4:	beq	13c08 <Mat_VarReadNextInfo@plt+0x2be0>
   13be8:	mov	r0, r9
   13bec:	mov	r1, r5
   13bf0:	bl	1426c <getopt_long_only@@Base+0x450>
   13bf4:	mov	r0, r5
   13bf8:	cmp	r1, #0
   13bfc:	beq	13c0c <Mat_VarReadNextInfo@plt+0x2be4>
   13c00:	mov	r5, r1
   13c04:	b	13bec <Mat_VarReadNextInfo@plt+0x2bc4>
   13c08:	mov	r5, r9
   13c0c:	sub	r0, r6, r7
   13c10:	mov	r1, r5
   13c14:	bl	1404c <getopt_long_only@@Base+0x230>
   13c18:	cmp	r5, #0
   13c1c:	ble	13c74 <Mat_VarReadNextInfo@plt+0x2c4c>
   13c20:	cmp	r0, #0
   13c24:	ble	13c74 <Mat_VarReadNextInfo@plt+0x2c4c>
   13c28:	add	r5, r5, fp
   13c2c:	mov	r1, fp
   13c30:	add	r2, r4, fp, lsl #2
   13c34:	mov	r3, r1
   13c38:	mov	ip, #0
   13c3c:	cmp	fp, r3
   13c40:	suble	r3, r3, sl
   13c44:	addgt	r3, r9, r3
   13c48:	ldr	r7, [r2]
   13c4c:	ldr	lr, [r4, r3, lsl #2]
   13c50:	add	ip, ip, #1
   13c54:	cmp	r0, ip
   13c58:	str	r7, [r4, r3, lsl #2]
   13c5c:	str	lr, [r2]
   13c60:	bne	13c3c <Mat_VarReadNextInfo@plt+0x2c14>
   13c64:	add	r1, r1, #1
   13c68:	cmp	r5, r1
   13c6c:	add	r2, r2, #4
   13c70:	bne	13c34 <Mat_VarReadNextInfo@plt+0x2c0c>
   13c74:	sub	r6, r6, sl
   13c78:	str	r6, [r8]
   13c7c:	b	137d4 <Mat_VarReadNextInfo@plt+0x27ac>
   13c80:	ldr	r3, [pc, #308]	; 13dbc <Mat_VarReadNextInfo@plt+0x2d94>
   13c84:	add	r3, pc, r3
   13c88:	str	r9, [r3]
   13c8c:	b	134d0 <Mat_VarReadNextInfo@plt+0x24a8>
   13c90:	mov	sl, r9
   13c94:	b	13764 <Mat_VarReadNextInfo@plt+0x273c>
   13c98:	ldr	r3, [pc, #288]	; 13dc0 <Mat_VarReadNextInfo@plt+0x2d98>
   13c9c:	add	r3, pc, r3
   13ca0:	str	r5, [r3, #4]
   13ca4:	b	136fc <Mat_VarReadNextInfo@plt+0x26d4>
   13ca8:	ldr	r3, [pc, #276]	; 13dc4 <Mat_VarReadNextInfo@plt+0x2d9c>
   13cac:	ldr	r2, [sp, #8]
   13cb0:	add	r3, pc, r3
   13cb4:	str	r2, [r3, #8]
   13cb8:	b	136f4 <Mat_VarReadNextInfo@plt+0x26cc>
   13cbc:	ldr	r2, [pc, #260]	; 13dc8 <Mat_VarReadNextInfo@plt+0x2da0>
   13cc0:	add	r2, pc, r2
   13cc4:	str	r5, [r2, #4]
   13cc8:	b	136cc <Mat_VarReadNextInfo@plt+0x26a4>
   13ccc:	ldr	r2, [pc, #248]	; 13dcc <Mat_VarReadNextInfo@plt+0x2da4>
   13cd0:	ldr	r0, [sp, #8]
   13cd4:	add	r2, pc, r2
   13cd8:	str	r0, [r2, #8]
   13cdc:	b	136c4 <Mat_VarReadNextInfo@plt+0x269c>
   13ce0:	ldr	r3, [pc, #232]	; 13dd0 <Mat_VarReadNextInfo@plt+0x2da8>
   13ce4:	add	r3, pc, r3
   13ce8:	str	r5, [r3, #4]
   13cec:	b	13698 <Mat_VarReadNextInfo@plt+0x2670>
   13cf0:	ldr	r3, [pc, #220]	; 13dd4 <Mat_VarReadNextInfo@plt+0x2dac>
   13cf4:	ldr	r2, [sp, #8]
   13cf8:	add	r3, pc, r3
   13cfc:	str	r2, [r3, #8]
   13d00:	b	13690 <Mat_VarReadNextInfo@plt+0x2668>
   13d04:	andeq	r1, r1, r8, ror #26
   13d08:	andeq	r1, r0, ip, lsl #20
   13d0c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13d10:	andeq	r0, r0, r4, ror #1
   13d14:	strdeq	r0, [r0], -r8
   13d18:	muleq	r1, r0, lr
   13d1c:	andeq	r1, r1, r4, ror lr
   13d20:	andeq	r1, r0, r4, asr #1
   13d24:	ldrdeq	r1, [r1], -ip
   13d28:	andeq	r1, r1, ip, asr #25
   13d2c:	andeq	r1, r1, r8, lsl #25
   13d30:	andeq	r1, r1, ip, ror ip
   13d34:	andeq	r1, r1, r0, ror ip
   13d38:	andeq	r1, r1, r0, lsl ip
   13d3c:	ldrdeq	r1, [r1], -r4
   13d40:	andeq	r0, r0, r8, lsr lr
   13d44:	andeq	r1, r1, ip, asr fp
   13d48:	andeq	r1, r1, r4, asr fp
   13d4c:			; <UNDEFINED> instruction: 0x00000db8
   13d50:	andeq	r1, r1, r0, lsr #22
   13d54:	andeq	r0, r0, r4, lsl #27
   13d58:			; <UNDEFINED> instruction: 0x00011ab4
   13d5c:	andeq	r1, r1, r0, asr #21
   13d60:	andeq	r0, r0, r4, lsr #26
   13d64:	ldrdeq	r1, [r1], -ip
   13d68:	andeq	r1, r1, r4, asr #19
   13d6c:			; <UNDEFINED> instruction: 0x000119b4
   13d70:	andeq	r1, r1, r8, lsl #18
   13d74:	andeq	r1, r1, ip, ror #17
   13d78:	andeq	r0, r0, r8, ror #1
   13d7c:	andeq	r1, r0, r0, ror r2
   13d80:	strdeq	r0, [r0], -r4
   13d84:	andeq	r1, r0, r4, lsr #4
   13d88:	strdeq	r1, [r1], -r8
   13d8c:	andeq	r0, r0, r0, asr sl
   13d90:	andeq	r0, r0, r8, lsl sl
   13d94:	andeq	r1, r0, r4, ror r1
   13d98:	andeq	r1, r1, ip, lsl r7
   13d9c:	andeq	r1, r1, r0, lsl #14
   13da0:	andeq	r0, r0, r4, ror #18
   13da4:	andeq	r1, r1, r0, asr #13
   13da8:	andeq	r0, r0, r4, lsr #18
   13dac:	andeq	r1, r0, ip, ror r0
   13db0:	andeq	r1, r1, r0, lsr #12
   13db4:	andeq	r1, r1, ip, lsl #12
   13db8:	andeq	r0, r0, r8, lsl #17
   13dbc:	andeq	r1, r1, ip, asr #10
   13dc0:	andeq	r1, r1, ip, lsl r5
   13dc4:	andeq	r1, r1, r8, lsl #10
   13dc8:	strdeq	r1, [r1], -r8
   13dcc:	andeq	r1, r1, r4, ror #9
   13dd0:	ldrdeq	r1, [r1], -r4
   13dd4:	andeq	r1, r1, r0, asr #9

00013dd8 <getopt@@Base>:
   13dd8:	push	{lr}		; (str lr, [sp, #-4]!)
   13ddc:	sub	sp, sp, #12
   13de0:	mov	r3, #0
   13de4:	str	r3, [sp, #4]
   13de8:	str	r3, [sp]
   13dec:	bl	13278 <Mat_VarReadNextInfo@plt+0x2250>
   13df0:	add	sp, sp, #12
   13df4:	pop	{pc}		; (ldr pc, [sp], #4)

00013df8 <getopt_long@@Base>:
   13df8:	push	{lr}		; (str lr, [sp, #-4]!)
   13dfc:	sub	sp, sp, #12
   13e00:	mov	ip, #1
   13e04:	ldr	lr, [sp, #16]
   13e08:	str	ip, [sp, #4]
   13e0c:	str	lr, [sp]
   13e10:	bl	13278 <Mat_VarReadNextInfo@plt+0x2250>
   13e14:	add	sp, sp, #12
   13e18:	pop	{pc}		; (ldr pc, [sp], #4)

00013e1c <getopt_long_only@@Base>:
   13e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e20:	sub	sp, sp, #12
   13e24:	mov	ip, #5
   13e28:	ldr	lr, [sp, #16]
   13e2c:	str	ip, [sp, #4]
   13e30:	str	lr, [sp]
   13e34:	bl	13278 <Mat_VarReadNextInfo@plt+0x2250>
   13e38:	add	sp, sp, #12
   13e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13e40:	subs	r2, r1, #1
   13e44:	bxeq	lr
   13e48:	bcc	14020 <getopt_long_only@@Base+0x204>
   13e4c:	cmp	r0, r1
   13e50:	bls	14004 <getopt_long_only@@Base+0x1e8>
   13e54:	tst	r1, r2
   13e58:	beq	14010 <getopt_long_only@@Base+0x1f4>
   13e5c:	clz	r3, r0
   13e60:	clz	r2, r1
   13e64:	sub	r3, r2, r3
   13e68:	rsbs	r3, r3, #31
   13e6c:	addne	r3, r3, r3, lsl #1
   13e70:	mov	r2, #0
   13e74:	addne	pc, pc, r3, lsl #2
   13e78:	nop			; (mov r0, r0)
   13e7c:	cmp	r0, r1, lsl #31
   13e80:	adc	r2, r2, r2
   13e84:	subcs	r0, r0, r1, lsl #31
   13e88:	cmp	r0, r1, lsl #30
   13e8c:	adc	r2, r2, r2
   13e90:	subcs	r0, r0, r1, lsl #30
   13e94:	cmp	r0, r1, lsl #29
   13e98:	adc	r2, r2, r2
   13e9c:	subcs	r0, r0, r1, lsl #29
   13ea0:	cmp	r0, r1, lsl #28
   13ea4:	adc	r2, r2, r2
   13ea8:	subcs	r0, r0, r1, lsl #28
   13eac:	cmp	r0, r1, lsl #27
   13eb0:	adc	r2, r2, r2
   13eb4:	subcs	r0, r0, r1, lsl #27
   13eb8:	cmp	r0, r1, lsl #26
   13ebc:	adc	r2, r2, r2
   13ec0:	subcs	r0, r0, r1, lsl #26
   13ec4:	cmp	r0, r1, lsl #25
   13ec8:	adc	r2, r2, r2
   13ecc:	subcs	r0, r0, r1, lsl #25
   13ed0:	cmp	r0, r1, lsl #24
   13ed4:	adc	r2, r2, r2
   13ed8:	subcs	r0, r0, r1, lsl #24
   13edc:	cmp	r0, r1, lsl #23
   13ee0:	adc	r2, r2, r2
   13ee4:	subcs	r0, r0, r1, lsl #23
   13ee8:	cmp	r0, r1, lsl #22
   13eec:	adc	r2, r2, r2
   13ef0:	subcs	r0, r0, r1, lsl #22
   13ef4:	cmp	r0, r1, lsl #21
   13ef8:	adc	r2, r2, r2
   13efc:	subcs	r0, r0, r1, lsl #21
   13f00:	cmp	r0, r1, lsl #20
   13f04:	adc	r2, r2, r2
   13f08:	subcs	r0, r0, r1, lsl #20
   13f0c:	cmp	r0, r1, lsl #19
   13f10:	adc	r2, r2, r2
   13f14:	subcs	r0, r0, r1, lsl #19
   13f18:	cmp	r0, r1, lsl #18
   13f1c:	adc	r2, r2, r2
   13f20:	subcs	r0, r0, r1, lsl #18
   13f24:	cmp	r0, r1, lsl #17
   13f28:	adc	r2, r2, r2
   13f2c:	subcs	r0, r0, r1, lsl #17
   13f30:	cmp	r0, r1, lsl #16
   13f34:	adc	r2, r2, r2
   13f38:	subcs	r0, r0, r1, lsl #16
   13f3c:	cmp	r0, r1, lsl #15
   13f40:	adc	r2, r2, r2
   13f44:	subcs	r0, r0, r1, lsl #15
   13f48:	cmp	r0, r1, lsl #14
   13f4c:	adc	r2, r2, r2
   13f50:	subcs	r0, r0, r1, lsl #14
   13f54:	cmp	r0, r1, lsl #13
   13f58:	adc	r2, r2, r2
   13f5c:	subcs	r0, r0, r1, lsl #13
   13f60:	cmp	r0, r1, lsl #12
   13f64:	adc	r2, r2, r2
   13f68:	subcs	r0, r0, r1, lsl #12
   13f6c:	cmp	r0, r1, lsl #11
   13f70:	adc	r2, r2, r2
   13f74:	subcs	r0, r0, r1, lsl #11
   13f78:	cmp	r0, r1, lsl #10
   13f7c:	adc	r2, r2, r2
   13f80:	subcs	r0, r0, r1, lsl #10
   13f84:	cmp	r0, r1, lsl #9
   13f88:	adc	r2, r2, r2
   13f8c:	subcs	r0, r0, r1, lsl #9
   13f90:	cmp	r0, r1, lsl #8
   13f94:	adc	r2, r2, r2
   13f98:	subcs	r0, r0, r1, lsl #8
   13f9c:	cmp	r0, r1, lsl #7
   13fa0:	adc	r2, r2, r2
   13fa4:	subcs	r0, r0, r1, lsl #7
   13fa8:	cmp	r0, r1, lsl #6
   13fac:	adc	r2, r2, r2
   13fb0:	subcs	r0, r0, r1, lsl #6
   13fb4:	cmp	r0, r1, lsl #5
   13fb8:	adc	r2, r2, r2
   13fbc:	subcs	r0, r0, r1, lsl #5
   13fc0:	cmp	r0, r1, lsl #4
   13fc4:	adc	r2, r2, r2
   13fc8:	subcs	r0, r0, r1, lsl #4
   13fcc:	cmp	r0, r1, lsl #3
   13fd0:	adc	r2, r2, r2
   13fd4:	subcs	r0, r0, r1, lsl #3
   13fd8:	cmp	r0, r1, lsl #2
   13fdc:	adc	r2, r2, r2
   13fe0:	subcs	r0, r0, r1, lsl #2
   13fe4:	cmp	r0, r1, lsl #1
   13fe8:	adc	r2, r2, r2
   13fec:	subcs	r0, r0, r1, lsl #1
   13ff0:	cmp	r0, r1
   13ff4:	adc	r2, r2, r2
   13ff8:	subcs	r0, r0, r1
   13ffc:	mov	r0, r2
   14000:	bx	lr
   14004:	moveq	r0, #1
   14008:	movne	r0, #0
   1400c:	bx	lr
   14010:	clz	r2, r1
   14014:	rsb	r2, r2, #31
   14018:	lsr	r0, r0, r2
   1401c:	bx	lr
   14020:	cmp	r0, #0
   14024:	mvnne	r0, #0
   14028:	b	1428c <getopt_long_only@@Base+0x470>
   1402c:	cmp	r1, #0
   14030:	beq	14020 <getopt_long_only@@Base+0x204>
   14034:	push	{r0, r1, lr}
   14038:	bl	13e40 <getopt_long_only@@Base+0x24>
   1403c:	pop	{r1, r2, lr}
   14040:	mul	r3, r2, r0
   14044:	sub	r1, r1, r3
   14048:	bx	lr
   1404c:	cmp	r1, #0
   14050:	beq	1425c <getopt_long_only@@Base+0x440>
   14054:	eor	ip, r0, r1
   14058:	rsbmi	r1, r1, #0
   1405c:	subs	r2, r1, #1
   14060:	beq	14228 <getopt_long_only@@Base+0x40c>
   14064:	movs	r3, r0
   14068:	rsbmi	r3, r0, #0
   1406c:	cmp	r3, r1
   14070:	bls	14234 <getopt_long_only@@Base+0x418>
   14074:	tst	r1, r2
   14078:	beq	14244 <getopt_long_only@@Base+0x428>
   1407c:	clz	r2, r3
   14080:	clz	r0, r1
   14084:	sub	r2, r0, r2
   14088:	rsbs	r2, r2, #31
   1408c:	addne	r2, r2, r2, lsl #1
   14090:	mov	r0, #0
   14094:	addne	pc, pc, r2, lsl #2
   14098:	nop			; (mov r0, r0)
   1409c:	cmp	r3, r1, lsl #31
   140a0:	adc	r0, r0, r0
   140a4:	subcs	r3, r3, r1, lsl #31
   140a8:	cmp	r3, r1, lsl #30
   140ac:	adc	r0, r0, r0
   140b0:	subcs	r3, r3, r1, lsl #30
   140b4:	cmp	r3, r1, lsl #29
   140b8:	adc	r0, r0, r0
   140bc:	subcs	r3, r3, r1, lsl #29
   140c0:	cmp	r3, r1, lsl #28
   140c4:	adc	r0, r0, r0
   140c8:	subcs	r3, r3, r1, lsl #28
   140cc:	cmp	r3, r1, lsl #27
   140d0:	adc	r0, r0, r0
   140d4:	subcs	r3, r3, r1, lsl #27
   140d8:	cmp	r3, r1, lsl #26
   140dc:	adc	r0, r0, r0
   140e0:	subcs	r3, r3, r1, lsl #26
   140e4:	cmp	r3, r1, lsl #25
   140e8:	adc	r0, r0, r0
   140ec:	subcs	r3, r3, r1, lsl #25
   140f0:	cmp	r3, r1, lsl #24
   140f4:	adc	r0, r0, r0
   140f8:	subcs	r3, r3, r1, lsl #24
   140fc:	cmp	r3, r1, lsl #23
   14100:	adc	r0, r0, r0
   14104:	subcs	r3, r3, r1, lsl #23
   14108:	cmp	r3, r1, lsl #22
   1410c:	adc	r0, r0, r0
   14110:	subcs	r3, r3, r1, lsl #22
   14114:	cmp	r3, r1, lsl #21
   14118:	adc	r0, r0, r0
   1411c:	subcs	r3, r3, r1, lsl #21
   14120:	cmp	r3, r1, lsl #20
   14124:	adc	r0, r0, r0
   14128:	subcs	r3, r3, r1, lsl #20
   1412c:	cmp	r3, r1, lsl #19
   14130:	adc	r0, r0, r0
   14134:	subcs	r3, r3, r1, lsl #19
   14138:	cmp	r3, r1, lsl #18
   1413c:	adc	r0, r0, r0
   14140:	subcs	r3, r3, r1, lsl #18
   14144:	cmp	r3, r1, lsl #17
   14148:	adc	r0, r0, r0
   1414c:	subcs	r3, r3, r1, lsl #17
   14150:	cmp	r3, r1, lsl #16
   14154:	adc	r0, r0, r0
   14158:	subcs	r3, r3, r1, lsl #16
   1415c:	cmp	r3, r1, lsl #15
   14160:	adc	r0, r0, r0
   14164:	subcs	r3, r3, r1, lsl #15
   14168:	cmp	r3, r1, lsl #14
   1416c:	adc	r0, r0, r0
   14170:	subcs	r3, r3, r1, lsl #14
   14174:	cmp	r3, r1, lsl #13
   14178:	adc	r0, r0, r0
   1417c:	subcs	r3, r3, r1, lsl #13
   14180:	cmp	r3, r1, lsl #12
   14184:	adc	r0, r0, r0
   14188:	subcs	r3, r3, r1, lsl #12
   1418c:	cmp	r3, r1, lsl #11
   14190:	adc	r0, r0, r0
   14194:	subcs	r3, r3, r1, lsl #11
   14198:	cmp	r3, r1, lsl #10
   1419c:	adc	r0, r0, r0
   141a0:	subcs	r3, r3, r1, lsl #10
   141a4:	cmp	r3, r1, lsl #9
   141a8:	adc	r0, r0, r0
   141ac:	subcs	r3, r3, r1, lsl #9
   141b0:	cmp	r3, r1, lsl #8
   141b4:	adc	r0, r0, r0
   141b8:	subcs	r3, r3, r1, lsl #8
   141bc:	cmp	r3, r1, lsl #7
   141c0:	adc	r0, r0, r0
   141c4:	subcs	r3, r3, r1, lsl #7
   141c8:	cmp	r3, r1, lsl #6
   141cc:	adc	r0, r0, r0
   141d0:	subcs	r3, r3, r1, lsl #6
   141d4:	cmp	r3, r1, lsl #5
   141d8:	adc	r0, r0, r0
   141dc:	subcs	r3, r3, r1, lsl #5
   141e0:	cmp	r3, r1, lsl #4
   141e4:	adc	r0, r0, r0
   141e8:	subcs	r3, r3, r1, lsl #4
   141ec:	cmp	r3, r1, lsl #3
   141f0:	adc	r0, r0, r0
   141f4:	subcs	r3, r3, r1, lsl #3
   141f8:	cmp	r3, r1, lsl #2
   141fc:	adc	r0, r0, r0
   14200:	subcs	r3, r3, r1, lsl #2
   14204:	cmp	r3, r1, lsl #1
   14208:	adc	r0, r0, r0
   1420c:	subcs	r3, r3, r1, lsl #1
   14210:	cmp	r3, r1
   14214:	adc	r0, r0, r0
   14218:	subcs	r3, r3, r1
   1421c:	cmp	ip, #0
   14220:	rsbmi	r0, r0, #0
   14224:	bx	lr
   14228:	teq	ip, r0
   1422c:	rsbmi	r0, r0, #0
   14230:	bx	lr
   14234:	movcc	r0, #0
   14238:	asreq	r0, ip, #31
   1423c:	orreq	r0, r0, #1
   14240:	bx	lr
   14244:	clz	r2, r1
   14248:	rsb	r2, r2, #31
   1424c:	cmp	ip, #0
   14250:	lsr	r0, r3, r2
   14254:	rsbmi	r0, r0, #0
   14258:	bx	lr
   1425c:	cmp	r0, #0
   14260:	mvngt	r0, #-2147483648	; 0x80000000
   14264:	movlt	r0, #-2147483648	; 0x80000000
   14268:	b	1428c <getopt_long_only@@Base+0x470>
   1426c:	cmp	r1, #0
   14270:	beq	1425c <getopt_long_only@@Base+0x440>
   14274:	push	{r0, r1, lr}
   14278:	bl	14054 <getopt_long_only@@Base+0x238>
   1427c:	pop	{r1, r2, lr}
   14280:	mul	r3, r2, r0
   14284:	sub	r1, r1, r3
   14288:	bx	lr
   1428c:	push	{r1, lr}
   14290:	mov	r0, #8
   14294:	bl	10dc4 <raise@plt>
   14298:	pop	{r1, pc}
   1429c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142a0:	mov	r7, r0
   142a4:	ldr	r6, [pc, #72]	; 142f4 <getopt_long_only@@Base+0x4d8>
   142a8:	ldr	r5, [pc, #72]	; 142f8 <getopt_long_only@@Base+0x4dc>
   142ac:	add	r6, pc, r6
   142b0:	add	r5, pc, r5
   142b4:	sub	r6, r6, r5
   142b8:	mov	r8, r1
   142bc:	mov	r9, r2
   142c0:	bl	10d8c <Mat_VarGetNumberOfFields@plt-0x20>
   142c4:	asrs	r6, r6, #2
   142c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   142cc:	mov	r4, #0
   142d0:	add	r4, r4, #1
   142d4:	ldr	r3, [r5], #4
   142d8:	mov	r2, r9
   142dc:	mov	r1, r8
   142e0:	mov	r0, r7
   142e4:	blx	r3
   142e8:	cmp	r6, r4
   142ec:	bne	142d0 <getopt_long_only@@Base+0x4b4>
   142f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142f4:	andeq	r0, r1, r4, asr #24
   142f8:	andeq	r0, r1, ip, lsr ip
   142fc:	bx	lr

Disassembly of section .fini:

00014300 <.fini>:
   14300:	push	{r3, lr}
   14304:	pop	{r3, pc}
