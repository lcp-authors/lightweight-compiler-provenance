
../repos/coreutils/src/expr:     file format elf32-littlearm


Disassembly of section .init:

00010f08 <.init>:
   10f08:	push	{r3, lr}
   10f0c:	bl	1128c <__assert_fail@plt+0x4c>
   10f10:	pop	{r3, pc}

Disassembly of section .plt:

00010f14 <pthread_mutex_unlock@plt-0x14>:
   10f14:	push	{lr}		; (str lr, [sp, #-4]!)
   10f18:	ldr	lr, [pc, #4]	; 10f24 <pthread_mutex_unlock@plt-0x4>
   10f1c:	add	lr, pc, lr
   10f20:	ldr	pc, [lr, #8]!
   10f24:	ldrdeq	r2, [r4], -ip

00010f28 <pthread_mutex_unlock@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #270336	; 0x42000
   10f30:	ldr	pc, [ip, #220]!	; 0xdc

00010f34 <calloc@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #270336	; 0x42000
   10f3c:	ldr	pc, [ip, #212]!	; 0xd4

00010f40 <fputs_unlocked@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #270336	; 0x42000
   10f48:	ldr	pc, [ip, #204]!	; 0xcc

00010f4c <wctype@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #270336	; 0x42000
   10f54:	ldr	pc, [ip, #196]!	; 0xc4

00010f58 <wcrtomb@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #270336	; 0x42000
   10f60:	ldr	pc, [ip, #188]!	; 0xbc

00010f64 <iswctype@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #270336	; 0x42000
   10f6c:	ldr	pc, [ip, #180]!	; 0xb4

00010f70 <strcmp@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #270336	; 0x42000
   10f78:	ldr	pc, [ip, #172]!	; 0xac

00010f7c <strcspn@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #270336	; 0x42000
   10f84:	ldr	pc, [ip, #164]!	; 0xa4

00010f88 <printf@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #270336	; 0x42000
   10f90:	ldr	pc, [ip, #156]!	; 0x9c

00010f94 <pthread_mutex_destroy@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #270336	; 0x42000
   10f9c:	ldr	pc, [ip, #148]!	; 0x94

00010fa0 <fflush@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #270336	; 0x42000
   10fa8:	ldr	pc, [ip, #140]!	; 0x8c

00010fac <wcwidth@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #270336	; 0x42000
   10fb4:	ldr	pc, [ip, #132]!	; 0x84

00010fb8 <memmove@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #270336	; 0x42000
   10fc0:	ldr	pc, [ip, #124]!	; 0x7c

00010fc4 <free@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #270336	; 0x42000
   10fcc:	ldr	pc, [ip, #116]!	; 0x74

00010fd0 <pthread_mutex_lock@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #270336	; 0x42000
   10fd8:	ldr	pc, [ip, #108]!	; 0x6c

00010fdc <_exit@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #270336	; 0x42000
   10fe4:	ldr	pc, [ip, #100]!	; 0x64

00010fe8 <memcpy@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #270336	; 0x42000
   10ff0:	ldr	pc, [ip, #92]!	; 0x5c

00010ff4 <tolower@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #270336	; 0x42000
   10ffc:	ldr	pc, [ip, #84]!	; 0x54

00011000 <pthread_mutex_init@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #270336	; 0x42000
   11008:	ldr	pc, [ip, #76]!	; 0x4c

0001100c <towlower@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #270336	; 0x42000
   11014:	ldr	pc, [ip, #68]!	; 0x44

00011018 <mbsinit@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #270336	; 0x42000
   11020:	ldr	pc, [ip, #60]!	; 0x3c

00011024 <memcmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #270336	; 0x42000
   1102c:	ldr	pc, [ip, #52]!	; 0x34

00011030 <fputc_unlocked@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #270336	; 0x42000
   11038:	ldr	pc, [ip, #44]!	; 0x2c

0001103c <realloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #270336	; 0x42000
   11044:	ldr	pc, [ip, #36]!	; 0x24

00011048 <textdomain@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #270336	; 0x42000
   11050:	ldr	pc, [ip, #28]!

00011054 <iswcntrl@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #270336	; 0x42000
   1105c:	ldr	pc, [ip, #20]!

00011060 <iswprint@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #270336	; 0x42000
   11068:	ldr	pc, [ip, #12]!

0001106c <fwrite@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #270336	; 0x42000
   11074:	ldr	pc, [ip, #4]!

00011078 <lseek64@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #266240	; 0x41000
   11080:	ldr	pc, [ip, #4092]!	; 0xffc

00011084 <__ctype_get_mb_cur_max@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #266240	; 0x41000
   1108c:	ldr	pc, [ip, #4084]!	; 0xff4

00011090 <__fpending@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #266240	; 0x41000
   11098:	ldr	pc, [ip, #4076]!	; 0xfec

0001109c <ferror_unlocked@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #266240	; 0x41000
   110a4:	ldr	pc, [ip, #4068]!	; 0xfe4

000110a8 <mbrtowc@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #266240	; 0x41000
   110b0:	ldr	pc, [ip, #4060]!	; 0xfdc

000110b4 <error@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #266240	; 0x41000
   110bc:	ldr	pc, [ip, #4052]!	; 0xfd4

000110c0 <strcoll@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #266240	; 0x41000
   110c8:	ldr	pc, [ip, #4044]!	; 0xfcc

000110cc <puts@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #266240	; 0x41000
   110d4:	ldr	pc, [ip, #4036]!	; 0xfc4

000110d8 <malloc@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #266240	; 0x41000
   110e0:	ldr	pc, [ip, #4028]!	; 0xfbc

000110e4 <__libc_start_main@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #266240	; 0x41000
   110ec:	ldr	pc, [ip, #4020]!	; 0xfb4

000110f0 <__freading@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #266240	; 0x41000
   110f8:	ldr	pc, [ip, #4012]!	; 0xfac

000110fc <__gmon_start__@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #266240	; 0x41000
   11104:	ldr	pc, [ip, #4004]!	; 0xfa4

00011108 <mempcpy@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #266240	; 0x41000
   11110:	ldr	pc, [ip, #3996]!	; 0xf9c

00011114 <getopt_long@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #266240	; 0x41000
   1111c:	ldr	pc, [ip, #3988]!	; 0xf94

00011120 <__ctype_b_loc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #266240	; 0x41000
   11128:	ldr	pc, [ip, #3980]!	; 0xf8c

0001112c <exit@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #266240	; 0x41000
   11134:	ldr	pc, [ip, #3972]!	; 0xf84

00011138 <gettext@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #266240	; 0x41000
   11140:	ldr	pc, [ip, #3964]!	; 0xf7c

00011144 <strlen@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #266240	; 0x41000
   1114c:	ldr	pc, [ip, #3956]!	; 0xf74

00011150 <strchr@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #266240	; 0x41000
   11158:	ldr	pc, [ip, #3948]!	; 0xf6c

0001115c <fprintf@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #266240	; 0x41000
   11164:	ldr	pc, [ip, #3940]!	; 0xf64

00011168 <__errno_location@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #266240	; 0x41000
   11170:	ldr	pc, [ip, #3932]!	; 0xf5c

00011174 <iswalnum@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #266240	; 0x41000
   1117c:	ldr	pc, [ip, #3924]!	; 0xf54

00011180 <__cxa_atexit@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #266240	; 0x41000
   11188:	ldr	pc, [ip, #3916]!	; 0xf4c

0001118c <memset@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #266240	; 0x41000
   11194:	ldr	pc, [ip, #3908]!	; 0xf44

00011198 <btowc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #266240	; 0x41000
   111a0:	ldr	pc, [ip, #3900]!	; 0xf3c

000111a4 <fileno@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #266240	; 0x41000
   111ac:	ldr	pc, [ip, #3892]!	; 0xf34

000111b0 <memchr@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #266240	; 0x41000
   111b8:	ldr	pc, [ip, #3884]!	; 0xf2c

000111bc <fclose@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #266240	; 0x41000
   111c4:	ldr	pc, [ip, #3876]!	; 0xf24

000111c8 <fseeko64@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #266240	; 0x41000
   111d0:	ldr	pc, [ip, #3868]!	; 0xf1c

000111d4 <setlocale@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #266240	; 0x41000
   111dc:	ldr	pc, [ip, #3860]!	; 0xf14

000111e0 <toupper@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #266240	; 0x41000
   111e8:	ldr	pc, [ip, #3852]!	; 0xf0c

000111ec <strrchr@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #266240	; 0x41000
   111f4:	ldr	pc, [ip, #3844]!	; 0xf04

000111f8 <nl_langinfo@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #266240	; 0x41000
   11200:	ldr	pc, [ip, #3836]!	; 0xefc

00011204 <bindtextdomain@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #266240	; 0x41000
   1120c:	ldr	pc, [ip, #3828]!	; 0xef4

00011210 <towupper@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #266240	; 0x41000
   11218:	ldr	pc, [ip, #3820]!	; 0xeec

0001121c <strncmp@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #266240	; 0x41000
   11224:	ldr	pc, [ip, #3812]!	; 0xee4

00011228 <abort@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #266240	; 0x41000
   11230:	ldr	pc, [ip, #3804]!	; 0xedc

00011234 <putchar_unlocked@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #266240	; 0x41000
   1123c:	ldr	pc, [ip, #3796]!	; 0xed4

00011240 <__assert_fail@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #266240	; 0x41000
   11248:	ldr	pc, [ip, #3788]!	; 0xecc

Disassembly of section .text:

00011250 <.text>:
   11250:	mov	fp, #0
   11254:	mov	lr, #0
   11258:	pop	{r1}		; (ldr r1, [sp], #4)
   1125c:	mov	r2, sp
   11260:	push	{r2}		; (str r2, [sp, #-4]!)
   11264:	push	{r0}		; (str r0, [sp, #-4]!)
   11268:	ldr	ip, [pc, #16]	; 11280 <__assert_fail@plt+0x40>
   1126c:	push	{ip}		; (str ip, [sp, #-4]!)
   11270:	ldr	r0, [pc, #12]	; 11284 <__assert_fail@plt+0x44>
   11274:	ldr	r3, [pc, #12]	; 11288 <__assert_fail@plt+0x48>
   11278:	bl	110e4 <__libc_start_main@plt>
   1127c:	bl	11228 <abort@plt>
   11280:	andeq	r0, r4, r0, lsr r6
   11284:	andeq	r1, r1, r0, lsr #26
   11288:	ldrdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   1128c:	ldr	r3, [pc, #20]	; 112a8 <__assert_fail@plt+0x68>
   11290:	ldr	r2, [pc, #20]	; 112ac <__assert_fail@plt+0x6c>
   11294:	add	r3, pc, r3
   11298:	ldr	r2, [r3, r2]
   1129c:	cmp	r2, #0
   112a0:	bxeq	lr
   112a4:	b	110fc <__gmon_start__@plt>
   112a8:	andeq	r1, r4, r4, ror #26
   112ac:	andeq	r0, r0, r8, lsl r1
   112b0:	ldr	r0, [pc, #24]	; 112d0 <__assert_fail@plt+0x90>
   112b4:	ldr	r3, [pc, #24]	; 112d4 <__assert_fail@plt+0x94>
   112b8:	cmp	r3, r0
   112bc:	bxeq	lr
   112c0:	ldr	r3, [pc, #16]	; 112d8 <__assert_fail@plt+0x98>
   112c4:	cmp	r3, #0
   112c8:	bxeq	lr
   112cc:	bx	r3
   112d0:	andeq	r3, r5, r4, ror r1
   112d4:	andeq	r3, r5, r4, ror r1
   112d8:	andeq	r0, r0, r0
   112dc:	ldr	r0, [pc, #36]	; 11308 <__assert_fail@plt+0xc8>
   112e0:	ldr	r1, [pc, #36]	; 1130c <__assert_fail@plt+0xcc>
   112e4:	sub	r1, r1, r0
   112e8:	asr	r1, r1, #2
   112ec:	add	r1, r1, r1, lsr #31
   112f0:	asrs	r1, r1, #1
   112f4:	bxeq	lr
   112f8:	ldr	r3, [pc, #16]	; 11310 <__assert_fail@plt+0xd0>
   112fc:	cmp	r3, #0
   11300:	bxeq	lr
   11304:	bx	r3
   11308:	andeq	r3, r5, r4, ror r1
   1130c:	andeq	r3, r5, r4, ror r1
   11310:	andeq	r0, r0, r0
   11314:	push	{r4, lr}
   11318:	ldr	r4, [pc, #24]	; 11338 <__assert_fail@plt+0xf8>
   1131c:	ldrb	r3, [r4]
   11320:	cmp	r3, #0
   11324:	popne	{r4, pc}
   11328:	bl	112b0 <__assert_fail@plt+0x70>
   1132c:	mov	r3, #1
   11330:	strb	r3, [r4]
   11334:	pop	{r4, pc}
   11338:	muleq	r5, r4, r1
   1133c:	b	112dc <__assert_fail@plt+0x9c>
   11340:	push	{fp}		; (str fp, [sp, #-4]!)
   11344:	add	fp, sp, #0
   11348:	sub	sp, sp, #12
   1134c:	str	r0, [fp, #-8]
   11350:	ldr	r3, [fp, #-8]
   11354:	cmp	r3, #1
   11358:	beq	1136c <__assert_fail@plt+0x12c>
   1135c:	movw	r3, #12580	; 0x3124
   11360:	movt	r3, #5
   11364:	ldr	r2, [fp, #-8]
   11368:	str	r2, [r3]
   1136c:	nop	{0}
   11370:	add	sp, fp, #0
   11374:	pop	{fp}		; (ldr fp, [sp], #4)
   11378:	bx	lr
   1137c:	str	fp, [sp, #-8]!
   11380:	str	lr, [sp, #4]
   11384:	add	fp, sp, #4
   11388:	sub	sp, sp, #80	; 0x50
   1138c:	str	r0, [fp, #-80]	; 0xffffffb0
   11390:	movw	r2, #1996	; 0x7cc
   11394:	movt	r2, #4
   11398:	sub	r3, fp, #72	; 0x48
   1139c:	ldrd	r0, [r2]
   113a0:	strd	r0, [r3]
   113a4:	ldrd	r0, [r2, #8]
   113a8:	strd	r0, [r3, #8]
   113ac:	ldrd	r0, [r2, #16]
   113b0:	strd	r0, [r3, #16]
   113b4:	ldrd	r0, [r2, #24]
   113b8:	strd	r0, [r3, #24]
   113bc:	ldrd	r0, [r2, #32]
   113c0:	strd	r0, [r3, #32]
   113c4:	ldrd	r0, [r2, #40]	; 0x28
   113c8:	strd	r0, [r3, #40]	; 0x28
   113cc:	ldrd	r0, [r2, #48]	; 0x30
   113d0:	strd	r0, [r3, #48]	; 0x30
   113d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   113d8:	str	r3, [fp, #-8]
   113dc:	sub	r3, fp, #72	; 0x48
   113e0:	str	r3, [fp, #-12]
   113e4:	b	113f4 <__assert_fail@plt+0x1b4>
   113e8:	ldr	r3, [fp, #-12]
   113ec:	add	r3, r3, #8
   113f0:	str	r3, [fp, #-12]
   113f4:	ldr	r3, [fp, #-12]
   113f8:	ldr	r3, [r3]
   113fc:	cmp	r3, #0
   11400:	beq	11424 <__assert_fail@plt+0x1e4>
   11404:	ldr	r3, [fp, #-12]
   11408:	ldr	r3, [r3]
   1140c:	mov	r1, r3
   11410:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11414:	bl	10f70 <strcmp@plt>
   11418:	mov	r3, r0
   1141c:	cmp	r3, #0
   11420:	bne	113e8 <__assert_fail@plt+0x1a8>
   11424:	ldr	r3, [fp, #-12]
   11428:	ldr	r3, [r3, #4]
   1142c:	cmp	r3, #0
   11430:	beq	11440 <__assert_fail@plt+0x200>
   11434:	ldr	r3, [fp, #-12]
   11438:	ldr	r3, [r3, #4]
   1143c:	str	r3, [fp, #-8]
   11440:	movw	r0, #1624	; 0x658
   11444:	movt	r0, #4
   11448:	bl	11138 <gettext@plt>
   1144c:	mov	r3, r0
   11450:	movw	r2, #1648	; 0x670
   11454:	movt	r2, #4
   11458:	movw	r1, #1688	; 0x698
   1145c:	movt	r1, #4
   11460:	mov	r0, r3
   11464:	bl	10f88 <printf@plt>
   11468:	mov	r1, #0
   1146c:	mov	r0, #5
   11470:	bl	111d4 <setlocale@plt>
   11474:	str	r0, [fp, #-16]
   11478:	ldr	r3, [fp, #-16]
   1147c:	cmp	r3, #0
   11480:	beq	114cc <__assert_fail@plt+0x28c>
   11484:	mov	r2, #3
   11488:	movw	r1, #1704	; 0x6a8
   1148c:	movt	r1, #4
   11490:	ldr	r0, [fp, #-16]
   11494:	bl	1121c <strncmp@plt>
   11498:	mov	r3, r0
   1149c:	cmp	r3, #0
   114a0:	beq	114cc <__assert_fail@plt+0x28c>
   114a4:	movw	r0, #1708	; 0x6ac
   114a8:	movt	r0, #4
   114ac:	bl	11138 <gettext@plt>
   114b0:	mov	r2, r0
   114b4:	movw	r3, #12684	; 0x318c
   114b8:	movt	r3, #5
   114bc:	ldr	r3, [r3]
   114c0:	mov	r1, r3
   114c4:	mov	r0, r2
   114c8:	bl	10f40 <fputs_unlocked@plt>
   114cc:	movw	r0, #1780	; 0x6f4
   114d0:	movt	r0, #4
   114d4:	bl	11138 <gettext@plt>
   114d8:	mov	r3, r0
   114dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   114e0:	movw	r1, #1648	; 0x670
   114e4:	movt	r1, #4
   114e8:	mov	r0, r3
   114ec:	bl	10f88 <printf@plt>
   114f0:	movw	r0, #1808	; 0x710
   114f4:	movt	r0, #4
   114f8:	bl	11138 <gettext@plt>
   114fc:	ldr	r2, [fp, #-8]
   11500:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11504:	cmp	r2, r3
   11508:	bne	11518 <__assert_fail@plt+0x2d8>
   1150c:	movw	r3, #1860	; 0x744
   11510:	movt	r3, #4
   11514:	b	11520 <__assert_fail@plt+0x2e0>
   11518:	movw	r3, #1872	; 0x750
   1151c:	movt	r3, #4
   11520:	mov	r2, r3
   11524:	ldr	r1, [fp, #-8]
   11528:	bl	10f88 <printf@plt>
   1152c:	nop	{0}
   11530:	sub	sp, fp, #4
   11534:	ldr	fp, [sp]
   11538:	add	sp, sp, #4
   1153c:	pop	{pc}		; (ldr pc, [sp], #4)
   11540:	str	fp, [sp, #-8]!
   11544:	str	lr, [sp, #4]
   11548:	add	fp, sp, #4
   1154c:	sub	sp, sp, #128	; 0x80
   11550:	str	r0, [fp, #-128]	; 0xffffff80
   11554:	str	r1, [fp, #-132]	; 0xffffff7c
   11558:	mov	r3, #0
   1155c:	str	r3, [fp, #-8]
   11560:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11564:	ldrb	r3, [r3]
   11568:	cmp	r3, #0
   1156c:	bne	11578 <__assert_fail@plt+0x338>
   11570:	mov	r3, #0
   11574:	b	117a8 <__assert_fail@plt+0x568>
   11578:	bl	11084 <__ctype_get_mb_cur_max@plt>
   1157c:	mov	r3, r0
   11580:	cmp	r3, #1
   11584:	bls	11770 <__assert_fail@plt+0x530>
   11588:	ldr	r3, [fp, #-128]	; 0xffffff80
   1158c:	str	r3, [fp, #-108]	; 0xffffff94
   11590:	mov	r3, #0
   11594:	strb	r3, [fp, #-124]	; 0xffffff84
   11598:	sub	r3, fp, #124	; 0x7c
   1159c:	add	r3, r3, #4
   115a0:	mov	r2, #8
   115a4:	mov	r1, #0
   115a8:	mov	r0, r3
   115ac:	bl	1118c <memset@plt>
   115b0:	mov	r3, #0
   115b4:	strb	r3, [fp, #-112]	; 0xffffff90
   115b8:	b	11728 <__assert_fail@plt+0x4e8>
   115bc:	ldr	r3, [fp, #-8]
   115c0:	add	r3, r3, #1
   115c4:	str	r3, [fp, #-8]
   115c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   115cc:	cmp	r3, #1
   115d0:	bne	115fc <__assert_fail@plt+0x3bc>
   115d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   115d8:	ldrb	r3, [r3]
   115dc:	mov	r1, r3
   115e0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   115e4:	bl	20d38 <__assert_fail@plt+0xfaf8>
   115e8:	mov	r3, r0
   115ec:	cmp	r3, #0
   115f0:	beq	11710 <__assert_fail@plt+0x4d0>
   115f4:	ldr	r3, [fp, #-8]
   115f8:	b	117a8 <__assert_fail@plt+0x568>
   115fc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11600:	str	r3, [fp, #-52]	; 0xffffffcc
   11604:	mov	r3, #0
   11608:	strb	r3, [fp, #-68]	; 0xffffffbc
   1160c:	sub	r3, fp, #68	; 0x44
   11610:	add	r3, r3, #4
   11614:	mov	r2, #8
   11618:	mov	r1, #0
   1161c:	mov	r0, r3
   11620:	bl	1118c <memset@plt>
   11624:	mov	r3, #0
   11628:	strb	r3, [fp, #-56]	; 0xffffffc8
   1162c:	b	116d0 <__assert_fail@plt+0x490>
   11630:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   11634:	cmp	r3, #0
   11638:	beq	11664 <__assert_fail@plt+0x424>
   1163c:	ldrb	r3, [fp, #-100]	; 0xffffff9c
   11640:	cmp	r3, #0
   11644:	beq	11664 <__assert_fail@plt+0x424>
   11648:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1164c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11650:	cmp	r2, r3
   11654:	moveq	r3, #1
   11658:	movne	r3, #0
   1165c:	uxtb	r3, r3
   11660:	b	116a8 <__assert_fail@plt+0x468>
   11664:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11668:	ldr	r3, [fp, #-104]	; 0xffffff98
   1166c:	cmp	r2, r3
   11670:	bne	1169c <__assert_fail@plt+0x45c>
   11674:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11678:	ldr	r1, [fp, #-108]	; 0xffffff94
   1167c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11680:	mov	r0, r3
   11684:	bl	11024 <memcmp@plt>
   11688:	mov	r3, r0
   1168c:	cmp	r3, #0
   11690:	bne	1169c <__assert_fail@plt+0x45c>
   11694:	mov	r3, #1
   11698:	b	116a0 <__assert_fail@plt+0x460>
   1169c:	mov	r3, #0
   116a0:	and	r3, r3, #1
   116a4:	uxtb	r3, r3
   116a8:	cmp	r3, #0
   116ac:	beq	116b8 <__assert_fail@plt+0x478>
   116b0:	ldr	r3, [fp, #-8]
   116b4:	b	117a8 <__assert_fail@plt+0x568>
   116b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   116bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   116c0:	add	r3, r2, r3
   116c4:	str	r3, [fp, #-52]	; 0xffffffcc
   116c8:	mov	r3, #0
   116cc:	strb	r3, [fp, #-56]	; 0xffffffc8
   116d0:	sub	r3, fp, #68	; 0x44
   116d4:	mov	r0, r3
   116d8:	bl	20f48 <__assert_fail@plt+0xfd08>
   116dc:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   116e0:	eor	r3, r3, #1
   116e4:	uxtb	r3, r3
   116e8:	cmp	r3, #0
   116ec:	bne	116fc <__assert_fail@plt+0x4bc>
   116f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   116f4:	cmp	r3, #0
   116f8:	beq	11704 <__assert_fail@plt+0x4c4>
   116fc:	mov	r3, #1
   11700:	b	11708 <__assert_fail@plt+0x4c8>
   11704:	mov	r3, #0
   11708:	cmp	r3, #0
   1170c:	bne	11630 <__assert_fail@plt+0x3f0>
   11710:	ldr	r2, [fp, #-108]	; 0xffffff94
   11714:	ldr	r3, [fp, #-104]	; 0xffffff98
   11718:	add	r3, r2, r3
   1171c:	str	r3, [fp, #-108]	; 0xffffff94
   11720:	mov	r3, #0
   11724:	strb	r3, [fp, #-112]	; 0xffffff90
   11728:	sub	r3, fp, #124	; 0x7c
   1172c:	mov	r0, r3
   11730:	bl	20f48 <__assert_fail@plt+0xfd08>
   11734:	ldrb	r3, [fp, #-100]	; 0xffffff9c
   11738:	eor	r3, r3, #1
   1173c:	uxtb	r3, r3
   11740:	cmp	r3, #0
   11744:	bne	11754 <__assert_fail@plt+0x514>
   11748:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1174c:	cmp	r3, #0
   11750:	beq	1175c <__assert_fail@plt+0x51c>
   11754:	mov	r3, #1
   11758:	b	11760 <__assert_fail@plt+0x520>
   1175c:	mov	r3, #0
   11760:	cmp	r3, #0
   11764:	bne	115bc <__assert_fail@plt+0x37c>
   11768:	mov	r3, #0
   1176c:	b	117a8 <__assert_fail@plt+0x568>
   11770:	ldr	r1, [fp, #-132]	; 0xffffff7c
   11774:	ldr	r0, [fp, #-128]	; 0xffffff80
   11778:	bl	10f7c <strcspn@plt>
   1177c:	str	r0, [fp, #-12]
   11780:	ldr	r2, [fp, #-128]	; 0xffffff80
   11784:	ldr	r3, [fp, #-12]
   11788:	add	r3, r2, r3
   1178c:	ldrb	r3, [r3]
   11790:	cmp	r3, #0
   11794:	beq	117a4 <__assert_fail@plt+0x564>
   11798:	ldr	r3, [fp, #-12]
   1179c:	add	r3, r3, #1
   117a0:	b	117a8 <__assert_fail@plt+0x568>
   117a4:	mov	r3, #0
   117a8:	mov	r0, r3
   117ac:	sub	sp, fp, #4
   117b0:	ldr	fp, [sp]
   117b4:	add	sp, sp, #4
   117b8:	pop	{pc}		; (ldr pc, [sp], #4)
   117bc:	str	fp, [sp, #-8]!
   117c0:	str	lr, [sp, #4]
   117c4:	add	fp, sp, #4
   117c8:	sub	sp, sp, #96	; 0x60
   117cc:	str	r0, [fp, #-88]	; 0xffffffa8
   117d0:	str	r1, [fp, #-92]	; 0xffffffa4
   117d4:	str	r2, [fp, #-96]	; 0xffffffa0
   117d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   117dc:	bl	11144 <strlen@plt>
   117e0:	str	r0, [fp, #-24]	; 0xffffffe8
   117e4:	bl	11084 <__ctype_get_mb_cur_max@plt>
   117e8:	mov	r3, r0
   117ec:	cmp	r3, #1
   117f0:	bls	11804 <__assert_fail@plt+0x5c4>
   117f4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   117f8:	bl	20e5c <__assert_fail@plt+0xfc1c>
   117fc:	mov	r3, r0
   11800:	b	11808 <__assert_fail@plt+0x5c8>
   11804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11808:	str	r3, [fp, #-28]	; 0xffffffe4
   1180c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11810:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11814:	cmp	r2, r3
   11818:	bcc	11840 <__assert_fail@plt+0x600>
   1181c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11820:	cmp	r3, #0
   11824:	beq	11840 <__assert_fail@plt+0x600>
   11828:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1182c:	cmp	r3, #0
   11830:	beq	11840 <__assert_fail@plt+0x600>
   11834:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11838:	cmn	r3, #1
   1183c:	bne	11854 <__assert_fail@plt+0x614>
   11840:	movw	r0, #1872	; 0x750
   11844:	movt	r0, #4
   11848:	bl	3edb4 <__assert_fail@plt+0x2db74>
   1184c:	mov	r3, r0
   11850:	b	119e0 <__assert_fail@plt+0x7a0>
   11854:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11858:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1185c:	sub	r3, r2, r3
   11860:	add	r3, r3, #1
   11864:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11868:	cmp	r2, r3
   1186c:	movcc	r3, r2
   11870:	movcs	r3, r3
   11874:	str	r3, [fp, #-16]
   11878:	bl	11084 <__ctype_get_mb_cur_max@plt>
   1187c:	mov	r3, r0
   11880:	cmp	r3, #1
   11884:	bne	118c8 <__assert_fail@plt+0x688>
   11888:	ldr	r3, [fp, #-16]
   1188c:	add	r3, r3, #1
   11890:	mov	r0, r3
   11894:	bl	3e588 <__assert_fail@plt+0x2d348>
   11898:	mov	r3, r0
   1189c:	str	r3, [fp, #-8]
   118a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   118a4:	sub	r3, r3, #1
   118a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   118ac:	add	r3, r2, r3
   118b0:	ldr	r2, [fp, #-16]
   118b4:	mov	r1, r3
   118b8:	ldr	r0, [fp, #-8]
   118bc:	bl	11108 <mempcpy@plt>
   118c0:	str	r0, [fp, #-12]
   118c4:	b	119d0 <__assert_fail@plt+0x790>
   118c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118cc:	add	r3, r3, #1
   118d0:	mov	r0, r3
   118d4:	bl	3e588 <__assert_fail@plt+0x2d348>
   118d8:	mov	r3, r0
   118dc:	str	r3, [fp, #-8]
   118e0:	ldr	r3, [fp, #-8]
   118e4:	str	r3, [fp, #-12]
   118e8:	mov	r3, #1
   118ec:	str	r3, [fp, #-20]	; 0xffffffec
   118f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   118f4:	str	r3, [fp, #-68]	; 0xffffffbc
   118f8:	mov	r3, #0
   118fc:	strb	r3, [fp, #-84]	; 0xffffffac
   11900:	sub	r3, fp, #84	; 0x54
   11904:	add	r3, r3, #4
   11908:	mov	r2, #8
   1190c:	mov	r1, #0
   11910:	mov	r0, r3
   11914:	bl	1118c <memset@plt>
   11918:	mov	r3, #0
   1191c:	strb	r3, [fp, #-72]	; 0xffffffb8
   11920:	b	11984 <__assert_fail@plt+0x744>
   11924:	ldr	r2, [fp, #-20]	; 0xffffffec
   11928:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1192c:	cmp	r2, r3
   11930:	bcc	1195c <__assert_fail@plt+0x71c>
   11934:	ldr	r3, [fp, #-16]
   11938:	sub	r3, r3, #1
   1193c:	str	r3, [fp, #-16]
   11940:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11944:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11948:	mov	r1, r3
   1194c:	ldr	r0, [fp, #-12]
   11950:	bl	11108 <mempcpy@plt>
   11954:	str	r0, [fp, #-12]
   11958:	b	11960 <__assert_fail@plt+0x720>
   1195c:	nop	{0}
   11960:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11964:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11968:	add	r3, r2, r3
   1196c:	str	r3, [fp, #-68]	; 0xffffffbc
   11970:	mov	r3, #0
   11974:	strb	r3, [fp, #-72]	; 0xffffffb8
   11978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1197c:	add	r3, r3, #1
   11980:	str	r3, [fp, #-20]	; 0xffffffec
   11984:	sub	r3, fp, #84	; 0x54
   11988:	mov	r0, r3
   1198c:	bl	20f48 <__assert_fail@plt+0xfd08>
   11990:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   11994:	eor	r3, r3, #1
   11998:	uxtb	r3, r3
   1199c:	cmp	r3, #0
   119a0:	bne	119b0 <__assert_fail@plt+0x770>
   119a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   119a8:	cmp	r3, #0
   119ac:	beq	119b8 <__assert_fail@plt+0x778>
   119b0:	mov	r3, #1
   119b4:	b	119bc <__assert_fail@plt+0x77c>
   119b8:	mov	r3, #0
   119bc:	cmp	r3, #0
   119c0:	beq	119d0 <__assert_fail@plt+0x790>
   119c4:	ldr	r3, [fp, #-16]
   119c8:	cmp	r3, #0
   119cc:	bne	11924 <__assert_fail@plt+0x6e4>
   119d0:	ldr	r3, [fp, #-12]
   119d4:	mov	r2, #0
   119d8:	strb	r2, [r3]
   119dc:	ldr	r3, [fp, #-8]
   119e0:	mov	r0, r3
   119e4:	sub	sp, fp, #4
   119e8:	ldr	fp, [sp]
   119ec:	add	sp, sp, #4
   119f0:	pop	{pc}		; (ldr pc, [sp], #4)
   119f4:	str	fp, [sp, #-8]!
   119f8:	str	lr, [sp, #4]
   119fc:	add	fp, sp, #4
   11a00:	sub	sp, sp, #72	; 0x48
   11a04:	str	r0, [fp, #-72]	; 0xffffffb8
   11a08:	str	r1, [fp, #-76]	; 0xffffffb4
   11a0c:	mov	r3, #0
   11a10:	str	r3, [fp, #-8]
   11a14:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11a18:	str	r3, [fp, #-52]	; 0xffffffcc
   11a1c:	mov	r3, #0
   11a20:	strb	r3, [fp, #-68]	; 0xffffffbc
   11a24:	sub	r3, fp, #68	; 0x44
   11a28:	add	r3, r3, #4
   11a2c:	mov	r2, #8
   11a30:	mov	r1, #0
   11a34:	mov	r0, r3
   11a38:	bl	1118c <memset@plt>
   11a3c:	mov	r3, #0
   11a40:	strb	r3, [fp, #-56]	; 0xffffffc8
   11a44:	b	11a8c <__assert_fail@plt+0x84c>
   11a48:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11a4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11a50:	sub	r3, r2, r3
   11a54:	str	r3, [fp, #-12]
   11a58:	ldr	r3, [fp, #-12]
   11a5c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11a60:	cmp	r2, r3
   11a64:	bls	11ad0 <__assert_fail@plt+0x890>
   11a68:	ldr	r3, [fp, #-8]
   11a6c:	add	r3, r3, #1
   11a70:	str	r3, [fp, #-8]
   11a74:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11a78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a7c:	add	r3, r2, r3
   11a80:	str	r3, [fp, #-52]	; 0xffffffcc
   11a84:	mov	r3, #0
   11a88:	strb	r3, [fp, #-56]	; 0xffffffc8
   11a8c:	sub	r3, fp, #68	; 0x44
   11a90:	mov	r0, r3
   11a94:	bl	20f48 <__assert_fail@plt+0xfd08>
   11a98:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   11a9c:	eor	r3, r3, #1
   11aa0:	uxtb	r3, r3
   11aa4:	cmp	r3, #0
   11aa8:	bne	11ab8 <__assert_fail@plt+0x878>
   11aac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11ab0:	cmp	r3, #0
   11ab4:	beq	11ac0 <__assert_fail@plt+0x880>
   11ab8:	mov	r3, #1
   11abc:	b	11ac4 <__assert_fail@plt+0x884>
   11ac0:	mov	r3, #0
   11ac4:	cmp	r3, #0
   11ac8:	bne	11a48 <__assert_fail@plt+0x808>
   11acc:	b	11ad4 <__assert_fail@plt+0x894>
   11ad0:	nop	{0}
   11ad4:	ldr	r3, [fp, #-8]
   11ad8:	mov	r0, r3
   11adc:	sub	sp, fp, #4
   11ae0:	ldr	fp, [sp]
   11ae4:	add	sp, sp, #4
   11ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   11aec:	str	r4, [sp, #-12]!
   11af0:	str	fp, [sp, #4]
   11af4:	str	lr, [sp, #8]
   11af8:	add	fp, sp, #8
   11afc:	sub	sp, sp, #12
   11b00:	str	r0, [fp, #-16]
   11b04:	ldr	r3, [fp, #-16]
   11b08:	cmp	r3, #0
   11b0c:	beq	11b48 <__assert_fail@plt+0x908>
   11b10:	movw	r3, #12680	; 0x3188
   11b14:	movt	r3, #5
   11b18:	ldr	r4, [r3]
   11b1c:	movw	r0, #2052	; 0x804
   11b20:	movt	r0, #4
   11b24:	bl	11138 <gettext@plt>
   11b28:	mov	r1, r0
   11b2c:	movw	r3, #12708	; 0x31a4
   11b30:	movt	r3, #5
   11b34:	ldr	r3, [r3]
   11b38:	mov	r2, r3
   11b3c:	mov	r0, r4
   11b40:	bl	1115c <fprintf@plt>
   11b44:	b	11d18 <__assert_fail@plt+0xad8>
   11b48:	movw	r0, #2092	; 0x82c
   11b4c:	movt	r0, #4
   11b50:	bl	11138 <gettext@plt>
   11b54:	movw	r3, #12708	; 0x31a4
   11b58:	movt	r3, #5
   11b5c:	ldr	r1, [r3]
   11b60:	movw	r3, #12708	; 0x31a4
   11b64:	movt	r3, #5
   11b68:	ldr	r3, [r3]
   11b6c:	mov	r2, r3
   11b70:	bl	10f88 <printf@plt>
   11b74:	mov	r0, #10
   11b78:	bl	11234 <putchar_unlocked@plt>
   11b7c:	movw	r0, #2132	; 0x854
   11b80:	movt	r0, #4
   11b84:	bl	11138 <gettext@plt>
   11b88:	mov	r2, r0
   11b8c:	movw	r3, #12684	; 0x318c
   11b90:	movt	r3, #5
   11b94:	ldr	r3, [r3]
   11b98:	mov	r1, r3
   11b9c:	mov	r0, r2
   11ba0:	bl	10f40 <fputs_unlocked@plt>
   11ba4:	movw	r0, #2180	; 0x884
   11ba8:	movt	r0, #4
   11bac:	bl	11138 <gettext@plt>
   11bb0:	mov	r2, r0
   11bb4:	movw	r3, #12684	; 0x318c
   11bb8:	movt	r3, #5
   11bbc:	ldr	r3, [r3]
   11bc0:	mov	r1, r3
   11bc4:	mov	r0, r2
   11bc8:	bl	10f40 <fputs_unlocked@plt>
   11bcc:	movw	r0, #2236	; 0x8bc
   11bd0:	movt	r0, #4
   11bd4:	bl	11138 <gettext@plt>
   11bd8:	mov	r2, r0
   11bdc:	movw	r3, #12684	; 0x318c
   11be0:	movt	r3, #5
   11be4:	ldr	r3, [r3]
   11be8:	mov	r1, r3
   11bec:	mov	r0, r2
   11bf0:	bl	10f40 <fputs_unlocked@plt>
   11bf4:	movw	r0, #2512	; 0x9d0
   11bf8:	movt	r0, #4
   11bfc:	bl	11138 <gettext@plt>
   11c00:	mov	r2, r0
   11c04:	movw	r3, #12684	; 0x318c
   11c08:	movt	r3, #5
   11c0c:	ldr	r3, [r3]
   11c10:	mov	r1, r3
   11c14:	mov	r0, r2
   11c18:	bl	10f40 <fputs_unlocked@plt>
   11c1c:	movw	r0, #2804	; 0xaf4
   11c20:	movt	r0, #4
   11c24:	bl	11138 <gettext@plt>
   11c28:	mov	r2, r0
   11c2c:	movw	r3, #12684	; 0x318c
   11c30:	movt	r3, #5
   11c34:	ldr	r3, [r3]
   11c38:	mov	r1, r3
   11c3c:	mov	r0, r2
   11c40:	bl	10f40 <fputs_unlocked@plt>
   11c44:	movw	r0, #2920	; 0xb68
   11c48:	movt	r0, #4
   11c4c:	bl	11138 <gettext@plt>
   11c50:	mov	r2, r0
   11c54:	movw	r3, #12684	; 0x318c
   11c58:	movt	r3, #5
   11c5c:	ldr	r3, [r3]
   11c60:	mov	r1, r3
   11c64:	mov	r0, r2
   11c68:	bl	10f40 <fputs_unlocked@plt>
   11c6c:	movw	r0, #3108	; 0xc24
   11c70:	movt	r0, #4
   11c74:	bl	11138 <gettext@plt>
   11c78:	mov	r2, r0
   11c7c:	movw	r3, #12684	; 0x318c
   11c80:	movt	r3, #5
   11c84:	ldr	r3, [r3]
   11c88:	mov	r1, r3
   11c8c:	mov	r0, r2
   11c90:	bl	10f40 <fputs_unlocked@plt>
   11c94:	movw	r0, #3420	; 0xd5c
   11c98:	movt	r0, #4
   11c9c:	bl	11138 <gettext@plt>
   11ca0:	mov	r2, r0
   11ca4:	movw	r3, #12684	; 0x318c
   11ca8:	movt	r3, #5
   11cac:	ldr	r3, [r3]
   11cb0:	mov	r1, r3
   11cb4:	mov	r0, r2
   11cb8:	bl	10f40 <fputs_unlocked@plt>
   11cbc:	movw	r0, #3624	; 0xe28
   11cc0:	movt	r0, #4
   11cc4:	bl	11138 <gettext@plt>
   11cc8:	mov	r2, r0
   11ccc:	movw	r3, #12684	; 0x318c
   11cd0:	movt	r3, #5
   11cd4:	ldr	r3, [r3]
   11cd8:	mov	r1, r3
   11cdc:	mov	r0, r2
   11ce0:	bl	10f40 <fputs_unlocked@plt>
   11ce4:	movw	r0, #3916	; 0xf4c
   11ce8:	movt	r0, #4
   11cec:	bl	11138 <gettext@plt>
   11cf0:	mov	r2, r0
   11cf4:	movw	r3, #12684	; 0x318c
   11cf8:	movt	r3, #5
   11cfc:	ldr	r3, [r3]
   11d00:	mov	r1, r3
   11d04:	mov	r0, r2
   11d08:	bl	10f40 <fputs_unlocked@plt>
   11d0c:	movw	r0, #4072	; 0xfe8
   11d10:	movt	r0, #4
   11d14:	bl	1137c <__assert_fail@plt+0x13c>
   11d18:	ldr	r0, [fp, #-16]
   11d1c:	bl	1112c <exit@plt>
   11d20:	str	r4, [sp, #-12]!
   11d24:	str	fp, [sp, #4]
   11d28:	str	lr, [sp, #8]
   11d2c:	add	fp, sp, #8
   11d30:	sub	sp, sp, #44	; 0x2c
   11d34:	str	r0, [fp, #-24]	; 0xffffffe8
   11d38:	str	r1, [fp, #-28]	; 0xffffffe4
   11d3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11d40:	ldr	r3, [r3]
   11d44:	mov	r0, r3
   11d48:	bl	212ac <__assert_fail@plt+0x1006c>
   11d4c:	movw	r1, #1872	; 0x750
   11d50:	movt	r1, #4
   11d54:	mov	r0, #6
   11d58:	bl	111d4 <setlocale@plt>
   11d5c:	movw	r1, #4080	; 0xff0
   11d60:	movt	r1, #4
   11d64:	movw	r0, #1896	; 0x768
   11d68:	movt	r0, #4
   11d6c:	bl	11204 <bindtextdomain@plt>
   11d70:	movw	r0, #1896	; 0x768
   11d74:	movt	r0, #4
   11d78:	bl	11048 <textdomain@plt>
   11d7c:	mov	r0, #3
   11d80:	bl	11340 <__assert_fail@plt+0x100>
   11d84:	movw	r0, #13896	; 0x3648
   11d88:	movt	r0, #1
   11d8c:	bl	40634 <__assert_fail@plt+0x2f3f4>
   11d90:	mov	r3, #0
   11d94:	str	r3, [sp, #20]
   11d98:	movw	r3, #4104	; 0x1008
   11d9c:	movt	r3, #4
   11da0:	str	r3, [sp, #16]
   11da4:	movw	r3, #4116	; 0x1014
   11da8:	movt	r3, #4
   11dac:	str	r3, [sp, #12]
   11db0:	movw	r3, #4132	; 0x1024
   11db4:	movt	r3, #4
   11db8:	str	r3, [sp, #8]
   11dbc:	movw	r3, #6892	; 0x1aec
   11dc0:	movt	r3, #1
   11dc4:	str	r3, [sp, #4]
   11dc8:	movw	r3, #4144	; 0x1030
   11dcc:	movt	r3, #4
   11dd0:	str	r3, [sp]
   11dd4:	movw	r3, #1688	; 0x698
   11dd8:	movt	r3, #4
   11ddc:	movw	r2, #4072	; 0xfe8
   11de0:	movt	r2, #4
   11de4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11dec:	bl	20ae8 <__assert_fail@plt+0xf8a8>
   11df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11df4:	str	r3, [fp, #-16]
   11df8:	ldr	r3, [fp, #-16]
   11dfc:	cmp	r3, #1
   11e00:	bls	11e44 <__assert_fail@plt+0xc04>
   11e04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11e08:	add	r3, r3, #4
   11e0c:	ldr	r3, [r3]
   11e10:	movw	r1, #4160	; 0x1040
   11e14:	movt	r1, #4
   11e18:	mov	r0, r3
   11e1c:	bl	10f70 <strcmp@plt>
   11e20:	mov	r3, r0
   11e24:	cmp	r3, #0
   11e28:	bne	11e44 <__assert_fail@plt+0xc04>
   11e2c:	ldr	r3, [fp, #-16]
   11e30:	sub	r3, r3, #1
   11e34:	str	r3, [fp, #-16]
   11e38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11e3c:	add	r3, r3, #4
   11e40:	str	r3, [fp, #-28]	; 0xffffffe4
   11e44:	ldr	r3, [fp, #-16]
   11e48:	cmp	r3, #1
   11e4c:	bhi	11e78 <__assert_fail@plt+0xc38>
   11e50:	movw	r0, #4164	; 0x1044
   11e54:	movt	r0, #4
   11e58:	bl	11138 <gettext@plt>
   11e5c:	mov	r3, r0
   11e60:	mov	r2, r3
   11e64:	mov	r1, #0
   11e68:	mov	r0, #0
   11e6c:	bl	110b4 <error@plt>
   11e70:	mov	r0, #2
   11e74:	bl	11aec <__assert_fail@plt+0x8ac>
   11e78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11e7c:	add	r2, r3, #4
   11e80:	movw	r3, #12696	; 0x3198
   11e84:	movt	r3, #5
   11e88:	str	r2, [r3]
   11e8c:	mov	r0, #1
   11e90:	bl	134f0 <__assert_fail@plt+0x22b0>
   11e94:	str	r0, [fp, #-20]	; 0xffffffec
   11e98:	bl	124bc <__assert_fail@plt+0x127c>
   11e9c:	mov	r3, r0
   11ea0:	eor	r3, r3, #1
   11ea4:	uxtb	r3, r3
   11ea8:	cmp	r3, #0
   11eac:	beq	11ef4 <__assert_fail@plt+0xcb4>
   11eb0:	movw	r0, #4180	; 0x1054
   11eb4:	movt	r0, #4
   11eb8:	bl	11138 <gettext@plt>
   11ebc:	mov	r4, r0
   11ec0:	movw	r3, #12696	; 0x3198
   11ec4:	movt	r3, #5
   11ec8:	ldr	r3, [r3]
   11ecc:	ldr	r3, [r3]
   11ed0:	mov	r2, r3
   11ed4:	mov	r1, #8
   11ed8:	mov	r0, #0
   11edc:	bl	23678 <__assert_fail@plt+0x12438>
   11ee0:	mov	r3, r0
   11ee4:	mov	r2, r4
   11ee8:	mov	r1, #0
   11eec:	mov	r0, #2
   11ef0:	bl	110b4 <error@plt>
   11ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ef8:	bl	12030 <__assert_fail@plt+0xdf0>
   11efc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f00:	bl	120b8 <__assert_fail@plt+0xe78>
   11f04:	mov	r3, r0
   11f08:	mov	r0, r3
   11f0c:	bl	1112c <exit@plt>
   11f10:	str	fp, [sp, #-8]!
   11f14:	str	lr, [sp, #4]
   11f18:	add	fp, sp, #4
   11f1c:	sub	sp, sp, #16
   11f20:	str	r0, [fp, #-16]
   11f24:	mov	r0, #16
   11f28:	bl	3e588 <__assert_fail@plt+0x2d348>
   11f2c:	mov	r3, r0
   11f30:	str	r3, [fp, #-8]
   11f34:	ldr	r3, [fp, #-8]
   11f38:	mov	r2, #0
   11f3c:	str	r2, [r3]
   11f40:	ldr	r3, [fp, #-8]
   11f44:	add	r3, r3, #4
   11f48:	ldr	r1, [fp, #-16]
   11f4c:	mov	r0, r3
   11f50:	bl	18224 <__assert_fail@plt+0x6fe4>
   11f54:	ldr	r3, [fp, #-8]
   11f58:	mov	r0, r3
   11f5c:	sub	sp, fp, #4
   11f60:	ldr	fp, [sp]
   11f64:	add	sp, sp, #4
   11f68:	pop	{pc}		; (ldr pc, [sp], #4)
   11f6c:	str	fp, [sp, #-8]!
   11f70:	str	lr, [sp, #4]
   11f74:	add	fp, sp, #4
   11f78:	sub	sp, sp, #16
   11f7c:	str	r0, [fp, #-16]
   11f80:	mov	r0, #16
   11f84:	bl	3e588 <__assert_fail@plt+0x2d348>
   11f88:	mov	r3, r0
   11f8c:	str	r3, [fp, #-8]
   11f90:	ldr	r3, [fp, #-8]
   11f94:	mov	r2, #1
   11f98:	str	r2, [r3]
   11f9c:	ldr	r0, [fp, #-16]
   11fa0:	bl	3edb4 <__assert_fail@plt+0x2db74>
   11fa4:	mov	r3, r0
   11fa8:	mov	r2, r3
   11fac:	ldr	r3, [fp, #-8]
   11fb0:	str	r2, [r3, #4]
   11fb4:	ldr	r3, [fp, #-8]
   11fb8:	mov	r0, r3
   11fbc:	sub	sp, fp, #4
   11fc0:	ldr	fp, [sp]
   11fc4:	add	sp, sp, #4
   11fc8:	pop	{pc}		; (ldr pc, [sp], #4)
   11fcc:	str	fp, [sp, #-8]!
   11fd0:	str	lr, [sp, #4]
   11fd4:	add	fp, sp, #4
   11fd8:	sub	sp, sp, #8
   11fdc:	str	r0, [fp, #-8]
   11fe0:	ldr	r3, [fp, #-8]
   11fe4:	ldr	r3, [r3]
   11fe8:	cmp	r3, #1
   11fec:	bne	12004 <__assert_fail@plt+0xdc4>
   11ff0:	ldr	r3, [fp, #-8]
   11ff4:	ldr	r3, [r3, #4]
   11ff8:	mov	r0, r3
   11ffc:	bl	13798 <__assert_fail@plt+0x2558>
   12000:	b	12014 <__assert_fail@plt+0xdd4>
   12004:	ldr	r3, [fp, #-8]
   12008:	add	r3, r3, #4
   1200c:	mov	r0, r3
   12010:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   12014:	ldr	r0, [fp, #-8]
   12018:	bl	13798 <__assert_fail@plt+0x2558>
   1201c:	nop	{0}
   12020:	sub	sp, fp, #4
   12024:	ldr	fp, [sp]
   12028:	add	sp, sp, #4
   1202c:	pop	{pc}		; (ldr pc, [sp], #4)
   12030:	str	fp, [sp, #-8]!
   12034:	str	lr, [sp, #4]
   12038:	add	fp, sp, #4
   1203c:	sub	sp, sp, #8
   12040:	str	r0, [fp, #-8]
   12044:	ldr	r3, [fp, #-8]
   12048:	ldr	r3, [r3]
   1204c:	cmp	r3, #0
   12050:	beq	12060 <__assert_fail@plt+0xe20>
   12054:	cmp	r3, #1
   12058:	beq	1208c <__assert_fail@plt+0xe4c>
   1205c:	b	120a0 <__assert_fail@plt+0xe60>
   12060:	movw	r3, #12684	; 0x318c
   12064:	movt	r3, #5
   12068:	ldr	r0, [r3]
   1206c:	ldr	r3, [fp, #-8]
   12070:	add	r3, r3, #4
   12074:	mov	r2, r3
   12078:	mov	r1, #10
   1207c:	bl	202d4 <__assert_fail@plt+0xf094>
   12080:	mov	r0, #10
   12084:	bl	11234 <putchar_unlocked@plt>
   12088:	b	120a4 <__assert_fail@plt+0xe64>
   1208c:	ldr	r3, [fp, #-8]
   12090:	ldr	r3, [r3, #4]
   12094:	mov	r0, r3
   12098:	bl	110cc <puts@plt>
   1209c:	b	120a4 <__assert_fail@plt+0xe64>
   120a0:	bl	11228 <abort@plt>
   120a4:	nop	{0}
   120a8:	sub	sp, fp, #4
   120ac:	ldr	fp, [sp]
   120b0:	add	sp, sp, #4
   120b4:	pop	{pc}		; (ldr pc, [sp], #4)
   120b8:	str	fp, [sp, #-8]!
   120bc:	str	lr, [sp, #4]
   120c0:	add	fp, sp, #4
   120c4:	sub	sp, sp, #16
   120c8:	str	r0, [fp, #-16]
   120cc:	ldr	r3, [fp, #-16]
   120d0:	ldr	r3, [r3]
   120d4:	cmp	r3, #0
   120d8:	beq	120e8 <__assert_fail@plt+0xea8>
   120dc:	cmp	r3, #1
   120e0:	beq	12110 <__assert_fail@plt+0xed0>
   120e4:	b	12198 <__assert_fail@plt+0xf58>
   120e8:	ldr	r3, [fp, #-16]
   120ec:	add	r3, r3, #4
   120f0:	mov	r0, r3
   120f4:	bl	19064 <__assert_fail@plt+0x7e24>
   120f8:	mov	r3, r0
   120fc:	cmp	r3, #0
   12100:	moveq	r3, #1
   12104:	movne	r3, #0
   12108:	uxtb	r3, r3
   1210c:	b	1219c <__assert_fail@plt+0xf5c>
   12110:	ldr	r3, [fp, #-16]
   12114:	ldr	r3, [r3, #4]
   12118:	str	r3, [fp, #-8]
   1211c:	ldr	r3, [fp, #-8]
   12120:	ldrb	r3, [r3]
   12124:	cmp	r3, #0
   12128:	bne	12134 <__assert_fail@plt+0xef4>
   1212c:	mov	r3, #1
   12130:	b	1219c <__assert_fail@plt+0xf5c>
   12134:	ldr	r3, [fp, #-8]
   12138:	ldrb	r3, [r3]
   1213c:	cmp	r3, #45	; 0x2d
   12140:	moveq	r3, #1
   12144:	movne	r3, #0
   12148:	uxtb	r3, r3
   1214c:	mov	r2, r3
   12150:	ldr	r3, [fp, #-8]
   12154:	add	r3, r3, r2
   12158:	str	r3, [fp, #-8]
   1215c:	ldr	r3, [fp, #-8]
   12160:	ldrb	r3, [r3]
   12164:	cmp	r3, #48	; 0x30
   12168:	beq	12174 <__assert_fail@plt+0xf34>
   1216c:	mov	r3, #0
   12170:	b	1219c <__assert_fail@plt+0xf5c>
   12174:	ldr	r3, [fp, #-8]
   12178:	add	r3, r3, #1
   1217c:	str	r3, [fp, #-8]
   12180:	ldr	r3, [fp, #-8]
   12184:	ldrb	r3, [r3]
   12188:	cmp	r3, #0
   1218c:	bne	1215c <__assert_fail@plt+0xf1c>
   12190:	mov	r3, #1
   12194:	b	1219c <__assert_fail@plt+0xf5c>
   12198:	bl	11228 <abort@plt>
   1219c:	mov	r0, r3
   121a0:	sub	sp, fp, #4
   121a4:	ldr	fp, [sp]
   121a8:	add	sp, sp, #4
   121ac:	pop	{pc}		; (ldr pc, [sp], #4)
   121b0:	push	{fp}		; (str fp, [sp, #-4]!)
   121b4:	add	fp, sp, #0
   121b8:	sub	sp, sp, #12
   121bc:	str	r0, [fp, #-8]
   121c0:	ldr	r3, [fp, #-8]
   121c4:	ldrb	r3, [r3]
   121c8:	cmp	r3, #45	; 0x2d
   121cc:	moveq	r3, #1
   121d0:	movne	r3, #0
   121d4:	uxtb	r3, r3
   121d8:	mov	r2, r3
   121dc:	ldr	r3, [fp, #-8]
   121e0:	add	r3, r3, r2
   121e4:	str	r3, [fp, #-8]
   121e8:	ldr	r3, [fp, #-8]
   121ec:	ldrb	r3, [r3]
   121f0:	sub	r3, r3, #48	; 0x30
   121f4:	cmp	r3, #9
   121f8:	bls	12204 <__assert_fail@plt+0xfc4>
   121fc:	mov	r3, #0
   12200:	b	12224 <__assert_fail@plt+0xfe4>
   12204:	ldr	r3, [fp, #-8]
   12208:	add	r3, r3, #1
   1220c:	str	r3, [fp, #-8]
   12210:	ldr	r3, [fp, #-8]
   12214:	ldrb	r3, [r3]
   12218:	cmp	r3, #0
   1221c:	bne	121e8 <__assert_fail@plt+0xfa8>
   12220:	mov	r3, #1
   12224:	mov	r0, r3
   12228:	add	sp, fp, #0
   1222c:	pop	{fp}		; (ldr fp, [sp], #4)
   12230:	bx	lr
   12234:	str	fp, [sp, #-8]!
   12238:	str	lr, [sp, #4]
   1223c:	add	fp, sp, #4
   12240:	sub	sp, sp, #16
   12244:	str	r0, [fp, #-16]
   12248:	ldr	r3, [fp, #-16]
   1224c:	ldr	r3, [r3]
   12250:	cmp	r3, #0
   12254:	beq	12264 <__assert_fail@plt+0x1024>
   12258:	cmp	r3, #1
   1225c:	beq	122b0 <__assert_fail@plt+0x1070>
   12260:	b	122ac <__assert_fail@plt+0x106c>
   12264:	ldr	r3, [fp, #-16]
   12268:	add	r3, r3, #4
   1226c:	mov	r2, r3
   12270:	mov	r1, #10
   12274:	mov	r0, #0
   12278:	bl	1fa30 <__assert_fail@plt+0xe7f0>
   1227c:	str	r0, [fp, #-8]
   12280:	ldr	r3, [fp, #-16]
   12284:	add	r3, r3, #4
   12288:	mov	r0, r3
   1228c:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   12290:	ldr	r3, [fp, #-16]
   12294:	ldr	r2, [fp, #-8]
   12298:	str	r2, [r3, #4]
   1229c:	ldr	r3, [fp, #-16]
   122a0:	mov	r2, #1
   122a4:	str	r2, [r3]
   122a8:	b	122b4 <__assert_fail@plt+0x1074>
   122ac:	bl	11228 <abort@plt>
   122b0:	nop	{0}
   122b4:	nop	{0}
   122b8:	sub	sp, fp, #4
   122bc:	ldr	fp, [sp]
   122c0:	add	sp, sp, #4
   122c4:	pop	{pc}		; (ldr pc, [sp], #4)
   122c8:	str	fp, [sp, #-8]!
   122cc:	str	lr, [sp, #4]
   122d0:	add	fp, sp, #4
   122d4:	sub	sp, sp, #16
   122d8:	str	r0, [fp, #-16]
   122dc:	ldr	r3, [fp, #-16]
   122e0:	ldr	r3, [r3]
   122e4:	cmp	r3, #0
   122e8:	beq	122f8 <__assert_fail@plt+0x10b8>
   122ec:	cmp	r3, #1
   122f0:	beq	12300 <__assert_fail@plt+0x10c0>
   122f4:	b	12388 <__assert_fail@plt+0x1148>
   122f8:	mov	r3, #1
   122fc:	b	1238c <__assert_fail@plt+0x114c>
   12300:	ldr	r3, [fp, #-16]
   12304:	ldr	r3, [r3, #4]
   12308:	str	r3, [fp, #-8]
   1230c:	ldr	r0, [fp, #-8]
   12310:	bl	121b0 <__assert_fail@plt+0xf70>
   12314:	mov	r3, r0
   12318:	eor	r3, r3, #1
   1231c:	uxtb	r3, r3
   12320:	cmp	r3, #0
   12324:	beq	12330 <__assert_fail@plt+0x10f0>
   12328:	mov	r3, #0
   1232c:	b	1238c <__assert_fail@plt+0x114c>
   12330:	ldr	r3, [fp, #-16]
   12334:	add	r3, r3, #4
   12338:	mov	r2, #10
   1233c:	ldr	r1, [fp, #-8]
   12340:	mov	r0, r3
   12344:	bl	20288 <__assert_fail@plt+0xf048>
   12348:	mov	r3, r0
   1234c:	cmp	r3, #0
   12350:	beq	1236c <__assert_fail@plt+0x112c>
   12354:	ldr	r3, [fp, #-8]
   12358:	movw	r2, #4220	; 0x107c
   1235c:	movt	r2, #4
   12360:	mov	r1, #34	; 0x22
   12364:	mov	r0, #3
   12368:	bl	110b4 <error@plt>
   1236c:	ldr	r0, [fp, #-8]
   12370:	bl	13798 <__assert_fail@plt+0x2558>
   12374:	ldr	r3, [fp, #-16]
   12378:	mov	r2, #0
   1237c:	str	r2, [r3]
   12380:	mov	r3, #1
   12384:	b	1238c <__assert_fail@plt+0x114c>
   12388:	bl	11228 <abort@plt>
   1238c:	mov	r0, r3
   12390:	sub	sp, fp, #4
   12394:	ldr	fp, [sp]
   12398:	add	sp, sp, #4
   1239c:	pop	{pc}		; (ldr pc, [sp], #4)
   123a0:	str	fp, [sp, #-8]!
   123a4:	str	lr, [sp, #4]
   123a8:	add	fp, sp, #4
   123ac:	sub	sp, sp, #16
   123b0:	str	r0, [fp, #-16]
   123b4:	ldr	r0, [fp, #-16]
   123b8:	bl	19064 <__assert_fail@plt+0x7e24>
   123bc:	mov	r3, r0
   123c0:	cmp	r3, #0
   123c4:	bge	123d0 <__assert_fail@plt+0x1190>
   123c8:	mvn	r3, #0
   123cc:	b	12408 <__assert_fail@plt+0x11c8>
   123d0:	ldr	r0, [fp, #-16]
   123d4:	bl	1838c <__assert_fail@plt+0x714c>
   123d8:	mov	r3, r0
   123dc:	cmp	r3, #0
   123e0:	beq	12404 <__assert_fail@plt+0x11c4>
   123e4:	ldr	r0, [fp, #-16]
   123e8:	bl	185f0 <__assert_fail@plt+0x73b0>
   123ec:	str	r0, [fp, #-8]
   123f0:	ldr	r3, [fp, #-8]
   123f4:	cmn	r3, #1
   123f8:	beq	12404 <__assert_fail@plt+0x11c4>
   123fc:	ldr	r3, [fp, #-8]
   12400:	b	12408 <__assert_fail@plt+0x11c8>
   12404:	mvn	r3, #1
   12408:	mov	r0, r3
   1240c:	sub	sp, fp, #4
   12410:	ldr	fp, [sp]
   12414:	add	sp, sp, #4
   12418:	pop	{pc}		; (ldr pc, [sp], #4)
   1241c:	str	fp, [sp, #-8]!
   12420:	str	lr, [sp, #4]
   12424:	add	fp, sp, #4
   12428:	sub	sp, sp, #16
   1242c:	str	r0, [fp, #-16]
   12430:	movw	r3, #12696	; 0x3198
   12434:	movt	r3, #5
   12438:	ldr	r3, [r3]
   1243c:	ldr	r3, [r3]
   12440:	cmp	r3, #0
   12444:	bne	12450 <__assert_fail@plt+0x1210>
   12448:	mov	r3, #0
   1244c:	b	124a8 <__assert_fail@plt+0x1268>
   12450:	movw	r3, #12696	; 0x3198
   12454:	movt	r3, #5
   12458:	ldr	r3, [r3]
   1245c:	ldr	r3, [r3]
   12460:	ldr	r1, [fp, #-16]
   12464:	mov	r0, r3
   12468:	bl	10f70 <strcmp@plt>
   1246c:	mov	r3, r0
   12470:	cmp	r3, #0
   12474:	moveq	r3, #1
   12478:	movne	r3, #0
   1247c:	strb	r3, [fp, #-5]
   12480:	movw	r3, #12696	; 0x3198
   12484:	movt	r3, #5
   12488:	ldr	r2, [r3]
   1248c:	ldrb	r3, [fp, #-5]
   12490:	lsl	r3, r3, #2
   12494:	add	r2, r2, r3
   12498:	movw	r3, #12696	; 0x3198
   1249c:	movt	r3, #5
   124a0:	str	r2, [r3]
   124a4:	ldrb	r3, [fp, #-5]
   124a8:	mov	r0, r3
   124ac:	sub	sp, fp, #4
   124b0:	ldr	fp, [sp]
   124b4:	add	sp, sp, #4
   124b8:	pop	{pc}		; (ldr pc, [sp], #4)
   124bc:	push	{fp}		; (str fp, [sp, #-4]!)
   124c0:	add	fp, sp, #0
   124c4:	movw	r3, #12696	; 0x3198
   124c8:	movt	r3, #5
   124cc:	ldr	r3, [r3]
   124d0:	ldr	r3, [r3]
   124d4:	cmp	r3, #0
   124d8:	moveq	r3, #1
   124dc:	movne	r3, #0
   124e0:	uxtb	r3, r3
   124e4:	mov	r0, r3
   124e8:	add	sp, fp, #0
   124ec:	pop	{fp}		; (ldr fp, [sp], #4)
   124f0:	bx	lr
   124f4:	strd	r4, [sp, #-16]!
   124f8:	str	fp, [sp, #8]
   124fc:	str	lr, [sp, #12]
   12500:	add	fp, sp, #12
   12504:	bl	124bc <__assert_fail@plt+0x127c>
   12508:	mov	r3, r0
   1250c:	cmp	r3, #0
   12510:	beq	1255c <__assert_fail@plt+0x131c>
   12514:	movw	r0, #4224	; 0x1080
   12518:	movt	r0, #4
   1251c:	bl	11138 <gettext@plt>
   12520:	mov	r4, r0
   12524:	movw	r3, #12696	; 0x3198
   12528:	movt	r3, #5
   1252c:	ldr	r3, [r3]
   12530:	sub	r3, r3, #4
   12534:	ldr	r3, [r3]
   12538:	mov	r2, r3
   1253c:	mov	r1, #8
   12540:	mov	r0, #0
   12544:	bl	23678 <__assert_fail@plt+0x12438>
   12548:	mov	r3, r0
   1254c:	mov	r2, r4
   12550:	mov	r1, #0
   12554:	mov	r0, #2
   12558:	bl	110b4 <error@plt>
   1255c:	nop	{0}
   12560:	sub	sp, fp, #12
   12564:	ldrd	r4, [sp]
   12568:	ldr	fp, [sp, #8]
   1256c:	add	sp, sp, #12
   12570:	pop	{pc}		; (ldr pc, [sp], #4)
   12574:	str	r4, [sp, #-12]!
   12578:	str	fp, [sp, #4]
   1257c:	str	lr, [sp, #8]
   12580:	add	fp, sp, #8
   12584:	sub	sp, sp, #340	; 0x154
   12588:	str	r0, [fp, #-336]	; 0xfffffeb0
   1258c:	str	r1, [fp, #-340]	; 0xfffffeac
   12590:	ldr	r0, [fp, #-336]	; 0xfffffeb0
   12594:	bl	12234 <__assert_fail@plt+0xff4>
   12598:	ldr	r0, [fp, #-340]	; 0xfffffeac
   1259c:	bl	12234 <__assert_fail@plt+0xff4>
   125a0:	mov	r3, #0
   125a4:	str	r3, [fp, #-328]	; 0xfffffeb8
   125a8:	mov	r3, #0
   125ac:	str	r3, [fp, #-324]	; 0xfffffebc
   125b0:	mov	r3, #0
   125b4:	str	r3, [fp, #-320]	; 0xfffffec0
   125b8:	mov	r3, #0
   125bc:	str	r3, [fp, #-60]	; 0xffffffc4
   125c0:	mov	r3, #0
   125c4:	str	r3, [fp, #-56]	; 0xffffffc8
   125c8:	sub	r3, fp, #316	; 0x13c
   125cc:	str	r3, [fp, #-44]	; 0xffffffd4
   125d0:	mov	r3, #0
   125d4:	str	r3, [fp, #-40]	; 0xffffffd8
   125d8:	movw	r3, #13016	; 0x32d8
   125dc:	movt	r3, #5
   125e0:	movw	r2, #710	; 0x2c6
   125e4:	str	r2, [r3]
   125e8:	ldr	r3, [fp, #-340]	; 0xfffffeac
   125ec:	ldr	r4, [r3, #4]
   125f0:	ldr	r3, [fp, #-340]	; 0xfffffeac
   125f4:	ldr	r3, [r3, #4]
   125f8:	mov	r0, r3
   125fc:	bl	11144 <strlen@plt>
   12600:	mov	r1, r0
   12604:	sub	r3, fp, #60	; 0x3c
   12608:	mov	r2, r3
   1260c:	mov	r0, r4
   12610:	bl	291e4 <__assert_fail@plt+0x17fa4>
   12614:	str	r0, [fp, #-20]	; 0xffffffec
   12618:	ldr	r3, [fp, #-20]	; 0xffffffec
   1261c:	cmp	r3, #0
   12620:	beq	1263c <__assert_fail@plt+0x13fc>
   12624:	ldr	r3, [fp, #-20]	; 0xffffffec
   12628:	movw	r2, #4220	; 0x107c
   1262c:	movt	r2, #4
   12630:	mov	r1, #0
   12634:	mov	r0, #2
   12638:	bl	110b4 <error@plt>
   1263c:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   12640:	bfc	r3, #7, #1
   12644:	strb	r3, [fp, #-32]	; 0xffffffe0
   12648:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   1264c:	ldr	r4, [r3, #4]
   12650:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   12654:	ldr	r3, [r3, #4]
   12658:	mov	r0, r3
   1265c:	bl	11144 <strlen@plt>
   12660:	mov	r3, r0
   12664:	mov	r2, r3
   12668:	sub	r0, fp, #60	; 0x3c
   1266c:	sub	r3, fp, #328	; 0x148
   12670:	str	r3, [sp]
   12674:	mov	r3, #0
   12678:	mov	r1, r4
   1267c:	bl	3263c <__assert_fail@plt+0x213fc>
   12680:	str	r0, [fp, #-24]	; 0xffffffe8
   12684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12688:	cmp	r3, #0
   1268c:	blt	12754 <__assert_fail@plt+0x1514>
   12690:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12694:	cmp	r3, #0
   12698:	beq	1270c <__assert_fail@plt+0x14cc>
   1269c:	ldr	r3, [fp, #-320]	; 0xfffffec0
   126a0:	add	r3, r3, #4
   126a4:	ldr	r3, [r3]
   126a8:	cmp	r3, #0
   126ac:	bge	126c4 <__assert_fail@plt+0x1484>
   126b0:	movw	r0, #1872	; 0x750
   126b4:	movt	r0, #4
   126b8:	bl	11f6c <__assert_fail@plt+0xd2c>
   126bc:	str	r0, [fp, #-16]
   126c0:	b	127d0 <__assert_fail@plt+0x1590>
   126c4:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   126c8:	ldr	r3, [r3, #4]
   126cc:	ldr	r2, [fp, #-320]	; 0xfffffec0
   126d0:	add	r2, r2, #4
   126d4:	ldr	r2, [r2]
   126d8:	add	r3, r3, r2
   126dc:	mov	r2, #0
   126e0:	strb	r2, [r3]
   126e4:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   126e8:	ldr	r3, [r3, #4]
   126ec:	ldr	r2, [fp, #-324]	; 0xfffffebc
   126f0:	add	r2, r2, #4
   126f4:	ldr	r2, [r2]
   126f8:	add	r3, r3, r2
   126fc:	mov	r0, r3
   12700:	bl	11f6c <__assert_fail@plt+0xd2c>
   12704:	str	r0, [fp, #-16]
   12708:	b	127d0 <__assert_fail@plt+0x1590>
   1270c:	bl	11084 <__ctype_get_mb_cur_max@plt>
   12710:	mov	r3, r0
   12714:	cmp	r3, #1
   12718:	beq	1273c <__assert_fail@plt+0x14fc>
   1271c:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   12720:	ldr	r3, [r3, #4]
   12724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12728:	mov	r1, r2
   1272c:	mov	r0, r3
   12730:	bl	119f4 <__assert_fail@plt+0x7b4>
   12734:	mov	r3, r0
   12738:	b	12740 <__assert_fail@plt+0x1500>
   1273c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12740:	str	r3, [fp, #-28]	; 0xffffffe4
   12744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12748:	bl	11f10 <__assert_fail@plt+0xcd0>
   1274c:	str	r0, [fp, #-16]
   12750:	b	127d0 <__assert_fail@plt+0x1590>
   12754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12758:	cmn	r3, #1
   1275c:	bne	12790 <__assert_fail@plt+0x1550>
   12760:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12764:	cmp	r3, #0
   12768:	beq	12780 <__assert_fail@plt+0x1540>
   1276c:	movw	r0, #1872	; 0x750
   12770:	movt	r0, #4
   12774:	bl	11f6c <__assert_fail@plt+0xd2c>
   12778:	str	r0, [fp, #-16]
   1277c:	b	127d0 <__assert_fail@plt+0x1590>
   12780:	mov	r0, #0
   12784:	bl	11f10 <__assert_fail@plt+0xcd0>
   12788:	str	r0, [fp, #-16]
   1278c:	b	127d0 <__assert_fail@plt+0x1590>
   12790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12794:	cmn	r3, #2
   12798:	bne	127ac <__assert_fail@plt+0x156c>
   1279c:	bl	11168 <__errno_location@plt>
   127a0:	mov	r3, r0
   127a4:	ldr	r4, [r3]
   127a8:	b	127b0 <__assert_fail@plt+0x1570>
   127ac:	mov	r4, #75	; 0x4b
   127b0:	movw	r0, #4264	; 0x10a8
   127b4:	movt	r0, #4
   127b8:	bl	11138 <gettext@plt>
   127bc:	mov	r3, r0
   127c0:	mov	r2, r3
   127c4:	mov	r1, r4
   127c8:	mov	r0, #3
   127cc:	bl	110b4 <error@plt>
   127d0:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   127d4:	cmp	r3, #0
   127d8:	beq	127f4 <__assert_fail@plt+0x15b4>
   127dc:	ldr	r3, [fp, #-324]	; 0xfffffebc
   127e0:	mov	r0, r3
   127e4:	bl	13798 <__assert_fail@plt+0x2558>
   127e8:	ldr	r3, [fp, #-320]	; 0xfffffec0
   127ec:	mov	r0, r3
   127f0:	bl	13798 <__assert_fail@plt+0x2558>
   127f4:	mov	r3, #0
   127f8:	str	r3, [fp, #-44]	; 0xffffffd4
   127fc:	sub	r3, fp, #60	; 0x3c
   12800:	mov	r0, r3
   12804:	bl	2a0f8 <__assert_fail@plt+0x18eb8>
   12808:	ldr	r3, [fp, #-16]
   1280c:	mov	r0, r3
   12810:	sub	sp, fp, #8
   12814:	ldr	r4, [sp]
   12818:	ldr	fp, [sp, #4]
   1281c:	add	sp, sp, #8
   12820:	pop	{pc}		; (ldr pc, [sp], #4)
   12824:	str	r4, [sp, #-12]!
   12828:	str	fp, [sp, #4]
   1282c:	str	lr, [sp, #8]
   12830:	add	fp, sp, #8
   12834:	sub	sp, sp, #20
   12838:	mov	r3, r0
   1283c:	strb	r3, [fp, #-21]	; 0xffffffeb
   12840:	bl	124f4 <__assert_fail@plt+0x12b4>
   12844:	movw	r0, #4300	; 0x10cc
   12848:	movt	r0, #4
   1284c:	bl	1241c <__assert_fail@plt+0x11dc>
   12850:	mov	r3, r0
   12854:	cmp	r3, #0
   12858:	beq	12930 <__assert_fail@plt+0x16f0>
   1285c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12860:	mov	r0, r3
   12864:	bl	134f0 <__assert_fail@plt+0x22b0>
   12868:	str	r0, [fp, #-16]
   1286c:	bl	124bc <__assert_fail@plt+0x127c>
   12870:	mov	r3, r0
   12874:	cmp	r3, #0
   12878:	beq	128c4 <__assert_fail@plt+0x1684>
   1287c:	movw	r0, #4304	; 0x10d0
   12880:	movt	r0, #4
   12884:	bl	11138 <gettext@plt>
   12888:	mov	r4, r0
   1288c:	movw	r3, #12696	; 0x3198
   12890:	movt	r3, #5
   12894:	ldr	r3, [r3]
   12898:	sub	r3, r3, #4
   1289c:	ldr	r3, [r3]
   128a0:	mov	r2, r3
   128a4:	mov	r1, #8
   128a8:	mov	r0, #0
   128ac:	bl	23678 <__assert_fail@plt+0x12438>
   128b0:	mov	r3, r0
   128b4:	mov	r2, r4
   128b8:	mov	r1, #0
   128bc:	mov	r0, #2
   128c0:	bl	110b4 <error@plt>
   128c4:	movw	r0, #4344	; 0x10f8
   128c8:	movt	r0, #4
   128cc:	bl	1241c <__assert_fail@plt+0x11dc>
   128d0:	mov	r3, r0
   128d4:	eor	r3, r3, #1
   128d8:	uxtb	r3, r3
   128dc:	cmp	r3, #0
   128e0:	beq	12928 <__assert_fail@plt+0x16e8>
   128e4:	movw	r0, #4348	; 0x10fc
   128e8:	movt	r0, #4
   128ec:	bl	11138 <gettext@plt>
   128f0:	mov	r4, r0
   128f4:	movw	r3, #12696	; 0x3198
   128f8:	movt	r3, #5
   128fc:	ldr	r3, [r3]
   12900:	ldr	r3, [r3]
   12904:	mov	r2, r3
   12908:	mov	r1, #8
   1290c:	mov	r0, #0
   12910:	bl	23678 <__assert_fail@plt+0x12438>
   12914:	mov	r3, r0
   12918:	mov	r2, r4
   1291c:	mov	r1, #0
   12920:	mov	r0, #2
   12924:	bl	110b4 <error@plt>
   12928:	ldr	r3, [fp, #-16]
   1292c:	b	12994 <__assert_fail@plt+0x1754>
   12930:	movw	r0, #4344	; 0x10f8
   12934:	movt	r0, #4
   12938:	bl	1241c <__assert_fail@plt+0x11dc>
   1293c:	mov	r3, r0
   12940:	cmp	r3, #0
   12944:	beq	12968 <__assert_fail@plt+0x1728>
   12948:	movw	r0, #4392	; 0x1128
   1294c:	movt	r0, #4
   12950:	bl	11138 <gettext@plt>
   12954:	mov	r3, r0
   12958:	mov	r2, r3
   1295c:	mov	r1, #0
   12960:	mov	r0, #2
   12964:	bl	110b4 <error@plt>
   12968:	movw	r3, #12696	; 0x3198
   1296c:	movt	r3, #5
   12970:	ldr	r2, [r3]
   12974:	add	r1, r2, #4
   12978:	movw	r3, #12696	; 0x3198
   1297c:	movt	r3, #5
   12980:	str	r1, [r3]
   12984:	ldr	r3, [r2]
   12988:	mov	r0, r3
   1298c:	bl	11f6c <__assert_fail@plt+0xd2c>
   12990:	mov	r3, r0
   12994:	mov	r0, r3
   12998:	sub	sp, fp, #8
   1299c:	ldr	r4, [sp]
   129a0:	ldr	fp, [sp, #4]
   129a4:	add	sp, sp, #8
   129a8:	pop	{pc}		; (ldr pc, [sp], #4)
   129ac:	str	fp, [sp, #-8]!
   129b0:	str	lr, [sp, #4]
   129b4:	add	fp, sp, #4
   129b8:	sub	sp, sp, #48	; 0x30
   129bc:	mov	r3, r0
   129c0:	strb	r3, [fp, #-45]	; 0xffffffd3
   129c4:	movw	r0, #4424	; 0x1148
   129c8:	movt	r0, #4
   129cc:	bl	1241c <__assert_fail@plt+0x11dc>
   129d0:	mov	r3, r0
   129d4:	cmp	r3, #0
   129d8:	beq	12a10 <__assert_fail@plt+0x17d0>
   129dc:	bl	124f4 <__assert_fail@plt+0x12b4>
   129e0:	movw	r3, #12696	; 0x3198
   129e4:	movt	r3, #5
   129e8:	ldr	r2, [r3]
   129ec:	add	r1, r2, #4
   129f0:	movw	r3, #12696	; 0x3198
   129f4:	movt	r3, #5
   129f8:	str	r1, [r3]
   129fc:	ldr	r3, [r2]
   12a00:	mov	r0, r3
   12a04:	bl	11f6c <__assert_fail@plt+0xd2c>
   12a08:	mov	r3, r0
   12a0c:	b	12c98 <__assert_fail@plt+0x1a58>
   12a10:	movw	r0, #4428	; 0x114c
   12a14:	movt	r0, #4
   12a18:	bl	1241c <__assert_fail@plt+0x11dc>
   12a1c:	mov	r3, r0
   12a20:	cmp	r3, #0
   12a24:	beq	12a70 <__assert_fail@plt+0x1830>
   12a28:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a2c:	mov	r0, r3
   12a30:	bl	129ac <__assert_fail@plt+0x176c>
   12a34:	str	r0, [fp, #-12]
   12a38:	ldr	r0, [fp, #-12]
   12a3c:	bl	12234 <__assert_fail@plt+0xff4>
   12a40:	ldr	r3, [fp, #-12]
   12a44:	ldr	r3, [r3, #4]
   12a48:	mov	r0, r3
   12a4c:	bl	20e5c <__assert_fail@plt+0xfc1c>
   12a50:	mov	r3, r0
   12a54:	mov	r0, r3
   12a58:	bl	11f10 <__assert_fail@plt+0xcd0>
   12a5c:	str	r0, [fp, #-8]
   12a60:	ldr	r0, [fp, #-12]
   12a64:	bl	11fcc <__assert_fail@plt+0xd8c>
   12a68:	ldr	r3, [fp, #-8]
   12a6c:	b	12c98 <__assert_fail@plt+0x1a58>
   12a70:	movw	r0, #4436	; 0x1154
   12a74:	movt	r0, #4
   12a78:	bl	1241c <__assert_fail@plt+0x11dc>
   12a7c:	mov	r3, r0
   12a80:	cmp	r3, #0
   12a84:	beq	12ae8 <__assert_fail@plt+0x18a8>
   12a88:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a8c:	mov	r0, r3
   12a90:	bl	129ac <__assert_fail@plt+0x176c>
   12a94:	str	r0, [fp, #-16]
   12a98:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a9c:	mov	r0, r3
   12aa0:	bl	129ac <__assert_fail@plt+0x176c>
   12aa4:	str	r0, [fp, #-12]
   12aa8:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12aac:	cmp	r3, #0
   12ab0:	beq	12ad0 <__assert_fail@plt+0x1890>
   12ab4:	ldr	r1, [fp, #-12]
   12ab8:	ldr	r0, [fp, #-16]
   12abc:	bl	12574 <__assert_fail@plt+0x1334>
   12ac0:	str	r0, [fp, #-8]
   12ac4:	ldr	r0, [fp, #-16]
   12ac8:	bl	11fcc <__assert_fail@plt+0xd8c>
   12acc:	b	12ad8 <__assert_fail@plt+0x1898>
   12ad0:	ldr	r3, [fp, #-16]
   12ad4:	str	r3, [fp, #-8]
   12ad8:	ldr	r0, [fp, #-12]
   12adc:	bl	11fcc <__assert_fail@plt+0xd8c>
   12ae0:	ldr	r3, [fp, #-8]
   12ae4:	b	12c98 <__assert_fail@plt+0x1a58>
   12ae8:	movw	r0, #4444	; 0x115c
   12aec:	movt	r0, #4
   12af0:	bl	1241c <__assert_fail@plt+0x11dc>
   12af4:	mov	r3, r0
   12af8:	cmp	r3, #0
   12afc:	beq	12b74 <__assert_fail@plt+0x1934>
   12b00:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12b04:	mov	r0, r3
   12b08:	bl	129ac <__assert_fail@plt+0x176c>
   12b0c:	str	r0, [fp, #-16]
   12b10:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12b14:	mov	r0, r3
   12b18:	bl	129ac <__assert_fail@plt+0x176c>
   12b1c:	str	r0, [fp, #-12]
   12b20:	ldr	r0, [fp, #-16]
   12b24:	bl	12234 <__assert_fail@plt+0xff4>
   12b28:	ldr	r0, [fp, #-12]
   12b2c:	bl	12234 <__assert_fail@plt+0xff4>
   12b30:	ldr	r3, [fp, #-16]
   12b34:	ldr	r2, [r3, #4]
   12b38:	ldr	r3, [fp, #-12]
   12b3c:	ldr	r3, [r3, #4]
   12b40:	mov	r1, r3
   12b44:	mov	r0, r2
   12b48:	bl	11540 <__assert_fail@plt+0x300>
   12b4c:	str	r0, [fp, #-20]	; 0xffffffec
   12b50:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b54:	bl	11f10 <__assert_fail@plt+0xcd0>
   12b58:	str	r0, [fp, #-8]
   12b5c:	ldr	r0, [fp, #-16]
   12b60:	bl	11fcc <__assert_fail@plt+0xd8c>
   12b64:	ldr	r0, [fp, #-12]
   12b68:	bl	11fcc <__assert_fail@plt+0xd8c>
   12b6c:	ldr	r3, [fp, #-8]
   12b70:	b	12c98 <__assert_fail@plt+0x1a58>
   12b74:	movw	r0, #4452	; 0x1164
   12b78:	movt	r0, #4
   12b7c:	bl	1241c <__assert_fail@plt+0x11dc>
   12b80:	mov	r3, r0
   12b84:	cmp	r3, #0
   12b88:	beq	12c88 <__assert_fail@plt+0x1a48>
   12b8c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12b90:	mov	r0, r3
   12b94:	bl	129ac <__assert_fail@plt+0x176c>
   12b98:	str	r0, [fp, #-16]
   12b9c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12ba0:	mov	r0, r3
   12ba4:	bl	129ac <__assert_fail@plt+0x176c>
   12ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   12bac:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12bb0:	mov	r0, r3
   12bb4:	bl	129ac <__assert_fail@plt+0x176c>
   12bb8:	str	r0, [fp, #-28]	; 0xffffffe4
   12bbc:	ldr	r0, [fp, #-16]
   12bc0:	bl	12234 <__assert_fail@plt+0xff4>
   12bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bc8:	bl	122c8 <__assert_fail@plt+0x1088>
   12bcc:	mov	r3, r0
   12bd0:	eor	r3, r3, #1
   12bd4:	uxtb	r3, r3
   12bd8:	cmp	r3, #0
   12bdc:	bne	12bfc <__assert_fail@plt+0x19bc>
   12be0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12be4:	bl	122c8 <__assert_fail@plt+0x1088>
   12be8:	mov	r3, r0
   12bec:	eor	r3, r3, #1
   12bf0:	uxtb	r3, r3
   12bf4:	cmp	r3, #0
   12bf8:	beq	12c10 <__assert_fail@plt+0x19d0>
   12bfc:	movw	r0, #1872	; 0x750
   12c00:	movt	r0, #4
   12c04:	bl	11f6c <__assert_fail@plt+0xd2c>
   12c08:	str	r0, [fp, #-8]
   12c0c:	b	12c68 <__assert_fail@plt+0x1a28>
   12c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c14:	add	r3, r3, #4
   12c18:	mov	r0, r3
   12c1c:	bl	123a0 <__assert_fail@plt+0x1160>
   12c20:	str	r0, [fp, #-32]	; 0xffffffe0
   12c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c28:	add	r3, r3, #4
   12c2c:	mov	r0, r3
   12c30:	bl	123a0 <__assert_fail@plt+0x1160>
   12c34:	str	r0, [fp, #-36]	; 0xffffffdc
   12c38:	ldr	r3, [fp, #-16]
   12c3c:	ldr	r3, [r3, #4]
   12c40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12c44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12c48:	mov	r0, r3
   12c4c:	bl	117bc <__assert_fail@plt+0x57c>
   12c50:	str	r0, [fp, #-40]	; 0xffffffd8
   12c54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c58:	bl	11f6c <__assert_fail@plt+0xd2c>
   12c5c:	str	r0, [fp, #-8]
   12c60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c64:	bl	13798 <__assert_fail@plt+0x2558>
   12c68:	ldr	r0, [fp, #-16]
   12c6c:	bl	11fcc <__assert_fail@plt+0xd8c>
   12c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c74:	bl	11fcc <__assert_fail@plt+0xd8c>
   12c78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12c7c:	bl	11fcc <__assert_fail@plt+0xd8c>
   12c80:	ldr	r3, [fp, #-8]
   12c84:	b	12c98 <__assert_fail@plt+0x1a58>
   12c88:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12c8c:	mov	r0, r3
   12c90:	bl	12824 <__assert_fail@plt+0x15e4>
   12c94:	mov	r3, r0
   12c98:	mov	r0, r3
   12c9c:	sub	sp, fp, #4
   12ca0:	ldr	fp, [sp]
   12ca4:	add	sp, sp, #4
   12ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cac:	str	fp, [sp, #-8]!
   12cb0:	str	lr, [sp, #4]
   12cb4:	add	fp, sp, #4
   12cb8:	sub	sp, sp, #24
   12cbc:	mov	r3, r0
   12cc0:	strb	r3, [fp, #-21]	; 0xffffffeb
   12cc4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12cc8:	mov	r0, r3
   12ccc:	bl	129ac <__assert_fail@plt+0x176c>
   12cd0:	str	r0, [fp, #-8]
   12cd4:	movw	r0, #4460	; 0x116c
   12cd8:	movt	r0, #4
   12cdc:	bl	1241c <__assert_fail@plt+0x11dc>
   12ce0:	mov	r3, r0
   12ce4:	cmp	r3, #0
   12ce8:	beq	12d34 <__assert_fail@plt+0x1af4>
   12cec:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12cf0:	mov	r0, r3
   12cf4:	bl	129ac <__assert_fail@plt+0x176c>
   12cf8:	str	r0, [fp, #-12]
   12cfc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12d00:	cmp	r3, #0
   12d04:	beq	12d28 <__assert_fail@plt+0x1ae8>
   12d08:	ldr	r1, [fp, #-12]
   12d0c:	ldr	r0, [fp, #-8]
   12d10:	bl	12574 <__assert_fail@plt+0x1334>
   12d14:	str	r0, [fp, #-16]
   12d18:	ldr	r0, [fp, #-8]
   12d1c:	bl	11fcc <__assert_fail@plt+0xd8c>
   12d20:	ldr	r3, [fp, #-16]
   12d24:	str	r3, [fp, #-8]
   12d28:	ldr	r0, [fp, #-12]
   12d2c:	bl	11fcc <__assert_fail@plt+0xd8c>
   12d30:	b	12cd4 <__assert_fail@plt+0x1a94>
   12d34:	ldr	r3, [fp, #-8]
   12d38:	mov	r0, r3
   12d3c:	sub	sp, fp, #4
   12d40:	ldr	fp, [sp]
   12d44:	add	sp, sp, #4
   12d48:	pop	{pc}		; (ldr pc, [sp], #4)
   12d4c:	str	fp, [sp, #-8]!
   12d50:	str	lr, [sp, #4]
   12d54:	add	fp, sp, #4
   12d58:	sub	sp, sp, #24
   12d5c:	mov	r3, r0
   12d60:	strb	r3, [fp, #-21]	; 0xffffffeb
   12d64:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12d68:	mov	r0, r3
   12d6c:	bl	12cac <__assert_fail@plt+0x1a6c>
   12d70:	str	r0, [fp, #-12]
   12d74:	movw	r0, #4464	; 0x1170
   12d78:	movt	r0, #4
   12d7c:	bl	1241c <__assert_fail@plt+0x11dc>
   12d80:	mov	r3, r0
   12d84:	cmp	r3, #0
   12d88:	beq	12d98 <__assert_fail@plt+0x1b58>
   12d8c:	mov	r3, #0
   12d90:	str	r3, [fp, #-8]
   12d94:	b	12de8 <__assert_fail@plt+0x1ba8>
   12d98:	movw	r0, #4468	; 0x1174
   12d9c:	movt	r0, #4
   12da0:	bl	1241c <__assert_fail@plt+0x11dc>
   12da4:	mov	r3, r0
   12da8:	cmp	r3, #0
   12dac:	beq	12dbc <__assert_fail@plt+0x1b7c>
   12db0:	mov	r3, #1
   12db4:	str	r3, [fp, #-8]
   12db8:	b	12de8 <__assert_fail@plt+0x1ba8>
   12dbc:	movw	r0, #4472	; 0x1178
   12dc0:	movt	r0, #4
   12dc4:	bl	1241c <__assert_fail@plt+0x11dc>
   12dc8:	mov	r3, r0
   12dcc:	cmp	r3, #0
   12dd0:	beq	12de0 <__assert_fail@plt+0x1ba0>
   12dd4:	mov	r3, #2
   12dd8:	str	r3, [fp, #-8]
   12ddc:	b	12de8 <__assert_fail@plt+0x1ba8>
   12de0:	ldr	r3, [fp, #-12]
   12de4:	b	12f04 <__assert_fail@plt+0x1cc4>
   12de8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12dec:	mov	r0, r3
   12df0:	bl	12cac <__assert_fail@plt+0x1a6c>
   12df4:	str	r0, [fp, #-16]
   12df8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12dfc:	cmp	r3, #0
   12e00:	beq	12ef8 <__assert_fail@plt+0x1cb8>
   12e04:	ldr	r0, [fp, #-12]
   12e08:	bl	122c8 <__assert_fail@plt+0x1088>
   12e0c:	mov	r3, r0
   12e10:	eor	r3, r3, #1
   12e14:	uxtb	r3, r3
   12e18:	cmp	r3, #0
   12e1c:	bne	12e3c <__assert_fail@plt+0x1bfc>
   12e20:	ldr	r0, [fp, #-16]
   12e24:	bl	122c8 <__assert_fail@plt+0x1088>
   12e28:	mov	r3, r0
   12e2c:	eor	r3, r3, #1
   12e30:	uxtb	r3, r3
   12e34:	cmp	r3, #0
   12e38:	beq	12e5c <__assert_fail@plt+0x1c1c>
   12e3c:	movw	r0, #4476	; 0x117c
   12e40:	movt	r0, #4
   12e44:	bl	11138 <gettext@plt>
   12e48:	mov	r3, r0
   12e4c:	mov	r2, r3
   12e50:	mov	r1, #0
   12e54:	mov	r0, #2
   12e58:	bl	110b4 <error@plt>
   12e5c:	ldr	r3, [fp, #-8]
   12e60:	cmp	r3, #0
   12e64:	beq	12ea4 <__assert_fail@plt+0x1c64>
   12e68:	ldr	r3, [fp, #-16]
   12e6c:	add	r3, r3, #4
   12e70:	mov	r0, r3
   12e74:	bl	19064 <__assert_fail@plt+0x7e24>
   12e78:	mov	r3, r0
   12e7c:	cmp	r3, #0
   12e80:	bne	12ea4 <__assert_fail@plt+0x1c64>
   12e84:	movw	r0, #4500	; 0x1194
   12e88:	movt	r0, #4
   12e8c:	bl	11138 <gettext@plt>
   12e90:	mov	r3, r0
   12e94:	mov	r2, r3
   12e98:	mov	r1, #0
   12e9c:	mov	r0, #2
   12ea0:	bl	110b4 <error@plt>
   12ea4:	ldr	r3, [fp, #-8]
   12ea8:	cmp	r3, #0
   12eac:	beq	12ed4 <__assert_fail@plt+0x1c94>
   12eb0:	ldr	r3, [fp, #-8]
   12eb4:	cmp	r3, #1
   12eb8:	bne	12ec8 <__assert_fail@plt+0x1c88>
   12ebc:	movw	r3, #42344	; 0xa568
   12ec0:	movt	r3, #1
   12ec4:	b	12edc <__assert_fail@plt+0x1c9c>
   12ec8:	movw	r3, #42572	; 0xa64c
   12ecc:	movt	r3, #1
   12ed0:	b	12edc <__assert_fail@plt+0x1c9c>
   12ed4:	movw	r3, #39608	; 0x9ab8
   12ed8:	movt	r3, #1
   12edc:	ldr	r2, [fp, #-12]
   12ee0:	add	r0, r2, #4
   12ee4:	ldr	r2, [fp, #-12]
   12ee8:	add	r1, r2, #4
   12eec:	ldr	r2, [fp, #-16]
   12ef0:	add	r2, r2, #4
   12ef4:	blx	r3
   12ef8:	ldr	r0, [fp, #-16]
   12efc:	bl	11fcc <__assert_fail@plt+0xd8c>
   12f00:	b	12d74 <__assert_fail@plt+0x1b34>
   12f04:	mov	r0, r3
   12f08:	sub	sp, fp, #4
   12f0c:	ldr	fp, [sp]
   12f10:	add	sp, sp, #4
   12f14:	pop	{pc}		; (ldr pc, [sp], #4)
   12f18:	str	fp, [sp, #-8]!
   12f1c:	str	lr, [sp, #4]
   12f20:	add	fp, sp, #4
   12f24:	sub	sp, sp, #24
   12f28:	mov	r3, r0
   12f2c:	strb	r3, [fp, #-21]	; 0xffffffeb
   12f30:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12f34:	mov	r0, r3
   12f38:	bl	12d4c <__assert_fail@plt+0x1b0c>
   12f3c:	str	r0, [fp, #-12]
   12f40:	movw	r0, #4424	; 0x1148
   12f44:	movt	r0, #4
   12f48:	bl	1241c <__assert_fail@plt+0x11dc>
   12f4c:	mov	r3, r0
   12f50:	cmp	r3, #0
   12f54:	beq	12f64 <__assert_fail@plt+0x1d24>
   12f58:	mov	r3, #0
   12f5c:	str	r3, [fp, #-8]
   12f60:	b	12f90 <__assert_fail@plt+0x1d50>
   12f64:	movw	r0, #4520	; 0x11a8
   12f68:	movt	r0, #4
   12f6c:	bl	1241c <__assert_fail@plt+0x11dc>
   12f70:	mov	r3, r0
   12f74:	cmp	r3, #0
   12f78:	beq	12f88 <__assert_fail@plt+0x1d48>
   12f7c:	mov	r3, #1
   12f80:	str	r3, [fp, #-8]
   12f84:	b	12f90 <__assert_fail@plt+0x1d50>
   12f88:	ldr	r3, [fp, #-12]
   12f8c:	b	1304c <__assert_fail@plt+0x1e0c>
   12f90:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12f94:	mov	r0, r3
   12f98:	bl	12d4c <__assert_fail@plt+0x1b0c>
   12f9c:	str	r0, [fp, #-16]
   12fa0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12fa4:	cmp	r3, #0
   12fa8:	beq	13040 <__assert_fail@plt+0x1e00>
   12fac:	ldr	r0, [fp, #-12]
   12fb0:	bl	122c8 <__assert_fail@plt+0x1088>
   12fb4:	mov	r3, r0
   12fb8:	eor	r3, r3, #1
   12fbc:	uxtb	r3, r3
   12fc0:	cmp	r3, #0
   12fc4:	bne	12fe4 <__assert_fail@plt+0x1da4>
   12fc8:	ldr	r0, [fp, #-16]
   12fcc:	bl	122c8 <__assert_fail@plt+0x1088>
   12fd0:	mov	r3, r0
   12fd4:	eor	r3, r3, #1
   12fd8:	uxtb	r3, r3
   12fdc:	cmp	r3, #0
   12fe0:	beq	13004 <__assert_fail@plt+0x1dc4>
   12fe4:	movw	r0, #4476	; 0x117c
   12fe8:	movt	r0, #4
   12fec:	bl	11138 <gettext@plt>
   12ff0:	mov	r3, r0
   12ff4:	mov	r2, r3
   12ff8:	mov	r1, #0
   12ffc:	mov	r0, #2
   13000:	bl	110b4 <error@plt>
   13004:	ldr	r3, [fp, #-8]
   13008:	cmp	r3, #0
   1300c:	bne	1301c <__assert_fail@plt+0x1ddc>
   13010:	movw	r3, #39072	; 0x98a0
   13014:	movt	r3, #1
   13018:	b	13024 <__assert_fail@plt+0x1de4>
   1301c:	movw	r3, #39232	; 0x9940
   13020:	movt	r3, #1
   13024:	ldr	r2, [fp, #-12]
   13028:	add	r0, r2, #4
   1302c:	ldr	r2, [fp, #-12]
   13030:	add	r1, r2, #4
   13034:	ldr	r2, [fp, #-16]
   13038:	add	r2, r2, #4
   1303c:	blx	r3
   13040:	ldr	r0, [fp, #-16]
   13044:	bl	11fcc <__assert_fail@plt+0xd8c>
   13048:	b	12f40 <__assert_fail@plt+0x1d00>
   1304c:	mov	r0, r3
   13050:	sub	sp, fp, #4
   13054:	ldr	fp, [sp]
   13058:	add	sp, sp, #4
   1305c:	pop	{pc}		; (ldr pc, [sp], #4)
   13060:	strd	r4, [sp, #-16]!
   13064:	str	fp, [sp, #8]
   13068:	str	lr, [sp, #12]
   1306c:	add	fp, sp, #12
   13070:	sub	sp, sp, #40	; 0x28
   13074:	mov	r3, r0
   13078:	strb	r3, [fp, #-37]	; 0xffffffdb
   1307c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13080:	mov	r0, r3
   13084:	bl	12f18 <__assert_fail@plt+0x1cd8>
   13088:	str	r0, [fp, #-16]
   1308c:	mov	r3, #0
   13090:	strb	r3, [fp, #-21]	; 0xffffffeb
   13094:	movw	r0, #4524	; 0x11ac
   13098:	movt	r0, #4
   1309c:	bl	1241c <__assert_fail@plt+0x11dc>
   130a0:	mov	r3, r0
   130a4:	cmp	r3, #0
   130a8:	beq	130b8 <__assert_fail@plt+0x1e78>
   130ac:	mov	r3, #0
   130b0:	str	r3, [fp, #-20]	; 0xffffffec
   130b4:	b	1318c <__assert_fail@plt+0x1f4c>
   130b8:	movw	r0, #4528	; 0x11b0
   130bc:	movt	r0, #4
   130c0:	bl	1241c <__assert_fail@plt+0x11dc>
   130c4:	mov	r3, r0
   130c8:	cmp	r3, #0
   130cc:	beq	130dc <__assert_fail@plt+0x1e9c>
   130d0:	mov	r3, #1
   130d4:	str	r3, [fp, #-20]	; 0xffffffec
   130d8:	b	1318c <__assert_fail@plt+0x1f4c>
   130dc:	movw	r0, #4532	; 0x11b4
   130e0:	movt	r0, #4
   130e4:	bl	1241c <__assert_fail@plt+0x11dc>
   130e8:	mov	r3, r0
   130ec:	cmp	r3, #0
   130f0:	bne	1310c <__assert_fail@plt+0x1ecc>
   130f4:	movw	r0, #4536	; 0x11b8
   130f8:	movt	r0, #4
   130fc:	bl	1241c <__assert_fail@plt+0x11dc>
   13100:	mov	r3, r0
   13104:	cmp	r3, #0
   13108:	beq	13118 <__assert_fail@plt+0x1ed8>
   1310c:	mov	r3, #2
   13110:	str	r3, [fp, #-20]	; 0xffffffec
   13114:	b	1318c <__assert_fail@plt+0x1f4c>
   13118:	movw	r0, #4540	; 0x11bc
   1311c:	movt	r0, #4
   13120:	bl	1241c <__assert_fail@plt+0x11dc>
   13124:	mov	r3, r0
   13128:	cmp	r3, #0
   1312c:	beq	1313c <__assert_fail@plt+0x1efc>
   13130:	mov	r3, #3
   13134:	str	r3, [fp, #-20]	; 0xffffffec
   13138:	b	1318c <__assert_fail@plt+0x1f4c>
   1313c:	movw	r0, #4544	; 0x11c0
   13140:	movt	r0, #4
   13144:	bl	1241c <__assert_fail@plt+0x11dc>
   13148:	mov	r3, r0
   1314c:	cmp	r3, #0
   13150:	beq	13160 <__assert_fail@plt+0x1f20>
   13154:	mov	r3, #4
   13158:	str	r3, [fp, #-20]	; 0xffffffec
   1315c:	b	1318c <__assert_fail@plt+0x1f4c>
   13160:	movw	r0, #4548	; 0x11c4
   13164:	movt	r0, #4
   13168:	bl	1241c <__assert_fail@plt+0x11dc>
   1316c:	mov	r3, r0
   13170:	cmp	r3, #0
   13174:	beq	13184 <__assert_fail@plt+0x1f44>
   13178:	mov	r3, #5
   1317c:	str	r3, [fp, #-20]	; 0xffffffec
   13180:	b	1318c <__assert_fail@plt+0x1f4c>
   13184:	ldr	r3, [fp, #-16]
   13188:	b	133dc <__assert_fail@plt+0x219c>
   1318c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13190:	mov	r0, r3
   13194:	bl	12f18 <__assert_fail@plt+0x1cd8>
   13198:	str	r0, [fp, #-32]	; 0xffffffe0
   1319c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   131a0:	cmp	r3, #0
   131a4:	beq	133b4 <__assert_fail@plt+0x2174>
   131a8:	ldr	r0, [fp, #-16]
   131ac:	bl	12234 <__assert_fail@plt+0xff4>
   131b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131b4:	bl	12234 <__assert_fail@plt+0xff4>
   131b8:	ldr	r3, [fp, #-16]
   131bc:	ldr	r3, [r3, #4]
   131c0:	mov	r0, r3
   131c4:	bl	121b0 <__assert_fail@plt+0xf70>
   131c8:	mov	r3, r0
   131cc:	cmp	r3, #0
   131d0:	beq	13214 <__assert_fail@plt+0x1fd4>
   131d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   131d8:	ldr	r3, [r3, #4]
   131dc:	mov	r0, r3
   131e0:	bl	121b0 <__assert_fail@plt+0xf70>
   131e4:	mov	r3, r0
   131e8:	cmp	r3, #0
   131ec:	beq	13214 <__assert_fail@plt+0x1fd4>
   131f0:	ldr	r3, [fp, #-16]
   131f4:	ldr	r2, [r3, #4]
   131f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   131fc:	ldr	r3, [r3, #4]
   13200:	mov	r1, r3
   13204:	mov	r0, r2
   13208:	bl	3dcf4 <__assert_fail@plt+0x2cab4>
   1320c:	str	r0, [fp, #-28]	; 0xffffffe4
   13210:	b	13304 <__assert_fail@plt+0x20c4>
   13214:	bl	11168 <__errno_location@plt>
   13218:	mov	r2, r0
   1321c:	mov	r3, #0
   13220:	str	r3, [r2]
   13224:	ldr	r3, [fp, #-16]
   13228:	ldr	r2, [r3, #4]
   1322c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13230:	ldr	r3, [r3, #4]
   13234:	mov	r1, r3
   13238:	mov	r0, r2
   1323c:	bl	110c0 <strcoll@plt>
   13240:	str	r0, [fp, #-28]	; 0xffffffe4
   13244:	bl	11168 <__errno_location@plt>
   13248:	mov	r3, r0
   1324c:	ldr	r3, [r3]
   13250:	cmp	r3, #0
   13254:	beq	13304 <__assert_fail@plt+0x20c4>
   13258:	bl	11168 <__errno_location@plt>
   1325c:	mov	r3, r0
   13260:	ldr	r4, [r3]
   13264:	movw	r0, #4552	; 0x11c8
   13268:	movt	r0, #4
   1326c:	bl	11138 <gettext@plt>
   13270:	mov	r3, r0
   13274:	mov	r2, r3
   13278:	mov	r1, r4
   1327c:	mov	r0, #0
   13280:	bl	110b4 <error@plt>
   13284:	movw	r0, #4580	; 0x11e4
   13288:	movt	r0, #4
   1328c:	bl	11138 <gettext@plt>
   13290:	mov	r3, r0
   13294:	mov	r2, r3
   13298:	mov	r1, #0
   1329c:	mov	r0, #0
   132a0:	bl	110b4 <error@plt>
   132a4:	movw	r0, #4624	; 0x1210
   132a8:	movt	r0, #4
   132ac:	bl	11138 <gettext@plt>
   132b0:	mov	r4, r0
   132b4:	ldr	r3, [fp, #-16]
   132b8:	ldr	r3, [r3, #4]
   132bc:	mov	r2, r3
   132c0:	mov	r1, #8
   132c4:	mov	r0, #0
   132c8:	bl	23678 <__assert_fail@plt+0x12438>
   132cc:	mov	r5, r0
   132d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   132d4:	ldr	r3, [r3, #4]
   132d8:	mov	r2, r3
   132dc:	mov	r1, #8
   132e0:	mov	r0, #1
   132e4:	bl	23678 <__assert_fail@plt+0x12438>
   132e8:	mov	r3, r0
   132ec:	str	r3, [sp]
   132f0:	mov	r3, r5
   132f4:	mov	r2, r4
   132f8:	mov	r1, #0
   132fc:	mov	r0, #2
   13300:	bl	110b4 <error@plt>
   13304:	ldr	r3, [fp, #-20]	; 0xffffffec
   13308:	cmp	r3, #5
   1330c:	ldrls	pc, [pc, r3, lsl #2]
   13310:	b	133b0 <__assert_fail@plt+0x2170>
   13314:	andeq	r3, r1, ip, lsr #6
   13318:	andeq	r3, r1, ip, lsr r3
   1331c:	andeq	r3, r1, r4, asr r3
   13320:	andeq	r3, r1, ip, ror #6
   13324:	andeq	r3, r1, r4, lsl #7
   13328:	muleq	r1, r8, r3
   1332c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13330:	lsr	r3, r3, #31
   13334:	strb	r3, [fp, #-21]	; 0xffffffeb
   13338:	b	133b8 <__assert_fail@plt+0x2178>
   1333c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13340:	cmp	r3, #0
   13344:	movle	r3, #1
   13348:	movgt	r3, #0
   1334c:	strb	r3, [fp, #-21]	; 0xffffffeb
   13350:	b	133b8 <__assert_fail@plt+0x2178>
   13354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13358:	cmp	r3, #0
   1335c:	moveq	r3, #1
   13360:	movne	r3, #0
   13364:	strb	r3, [fp, #-21]	; 0xffffffeb
   13368:	b	133b8 <__assert_fail@plt+0x2178>
   1336c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13370:	cmp	r3, #0
   13374:	movne	r3, #1
   13378:	moveq	r3, #0
   1337c:	strb	r3, [fp, #-21]	; 0xffffffeb
   13380:	b	133b8 <__assert_fail@plt+0x2178>
   13384:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13388:	mvn	r3, r3
   1338c:	lsr	r3, r3, #31
   13390:	strb	r3, [fp, #-21]	; 0xffffffeb
   13394:	b	133b8 <__assert_fail@plt+0x2178>
   13398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1339c:	cmp	r3, #0
   133a0:	movgt	r3, #1
   133a4:	movle	r3, #0
   133a8:	strb	r3, [fp, #-21]	; 0xffffffeb
   133ac:	b	133b8 <__assert_fail@plt+0x2178>
   133b0:	bl	11228 <abort@plt>
   133b4:	nop	{0}
   133b8:	ldr	r0, [fp, #-16]
   133bc:	bl	11fcc <__assert_fail@plt+0xd8c>
   133c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133c4:	bl	11fcc <__assert_fail@plt+0xd8c>
   133c8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   133cc:	mov	r0, r3
   133d0:	bl	11f10 <__assert_fail@plt+0xcd0>
   133d4:	str	r0, [fp, #-16]
   133d8:	b	1308c <__assert_fail@plt+0x1e4c>
   133dc:	mov	r0, r3
   133e0:	sub	sp, fp, #12
   133e4:	ldrd	r4, [sp]
   133e8:	ldr	fp, [sp, #8]
   133ec:	add	sp, sp, #12
   133f0:	pop	{pc}		; (ldr pc, [sp], #4)
   133f4:	str	fp, [sp, #-8]!
   133f8:	str	lr, [sp, #4]
   133fc:	add	fp, sp, #4
   13400:	sub	sp, sp, #16
   13404:	mov	r3, r0
   13408:	strb	r3, [fp, #-13]
   1340c:	ldrb	r3, [fp, #-13]
   13410:	mov	r0, r3
   13414:	bl	13060 <__assert_fail@plt+0x1e20>
   13418:	str	r0, [fp, #-8]
   1341c:	movw	r0, #4660	; 0x1234
   13420:	movt	r0, #4
   13424:	bl	1241c <__assert_fail@plt+0x11dc>
   13428:	mov	r3, r0
   1342c:	cmp	r3, #0
   13430:	beq	134d0 <__assert_fail@plt+0x2290>
   13434:	ldrb	r3, [fp, #-13]
   13438:	cmp	r3, #0
   1343c:	beq	13464 <__assert_fail@plt+0x2224>
   13440:	ldr	r0, [fp, #-8]
   13444:	bl	120b8 <__assert_fail@plt+0xe78>
   13448:	mov	r3, r0
   1344c:	eor	r3, r3, #1
   13450:	uxtb	r3, r3
   13454:	cmp	r3, #0
   13458:	beq	13464 <__assert_fail@plt+0x2224>
   1345c:	mov	r3, #1
   13460:	b	13468 <__assert_fail@plt+0x2228>
   13464:	mov	r3, #0
   13468:	and	r3, r3, #1
   1346c:	uxtb	r3, r3
   13470:	mov	r0, r3
   13474:	bl	13060 <__assert_fail@plt+0x1e20>
   13478:	str	r0, [fp, #-12]
   1347c:	ldr	r0, [fp, #-8]
   13480:	bl	120b8 <__assert_fail@plt+0xe78>
   13484:	mov	r3, r0
   13488:	cmp	r3, #0
   1348c:	bne	134a4 <__assert_fail@plt+0x2264>
   13490:	ldr	r0, [fp, #-12]
   13494:	bl	120b8 <__assert_fail@plt+0xe78>
   13498:	mov	r3, r0
   1349c:	cmp	r3, #0
   134a0:	beq	134c4 <__assert_fail@plt+0x2284>
   134a4:	ldr	r0, [fp, #-8]
   134a8:	bl	11fcc <__assert_fail@plt+0xd8c>
   134ac:	ldr	r0, [fp, #-12]
   134b0:	bl	11fcc <__assert_fail@plt+0xd8c>
   134b4:	mov	r0, #0
   134b8:	bl	11f10 <__assert_fail@plt+0xcd0>
   134bc:	str	r0, [fp, #-8]
   134c0:	b	134d8 <__assert_fail@plt+0x2298>
   134c4:	ldr	r0, [fp, #-12]
   134c8:	bl	11fcc <__assert_fail@plt+0xd8c>
   134cc:	b	1341c <__assert_fail@plt+0x21dc>
   134d0:	ldr	r3, [fp, #-8]
   134d4:	b	134dc <__assert_fail@plt+0x229c>
   134d8:	b	1341c <__assert_fail@plt+0x21dc>
   134dc:	mov	r0, r3
   134e0:	sub	sp, fp, #4
   134e4:	ldr	fp, [sp]
   134e8:	add	sp, sp, #4
   134ec:	pop	{pc}		; (ldr pc, [sp], #4)
   134f0:	str	fp, [sp, #-8]!
   134f4:	str	lr, [sp, #4]
   134f8:	add	fp, sp, #4
   134fc:	sub	sp, sp, #16
   13500:	mov	r3, r0
   13504:	strb	r3, [fp, #-13]
   13508:	ldrb	r3, [fp, #-13]
   1350c:	mov	r0, r3
   13510:	bl	133f4 <__assert_fail@plt+0x21b4>
   13514:	str	r0, [fp, #-8]
   13518:	movw	r0, #4664	; 0x1238
   1351c:	movt	r0, #4
   13520:	bl	1241c <__assert_fail@plt+0x11dc>
   13524:	mov	r3, r0
   13528:	cmp	r3, #0
   1352c:	beq	135cc <__assert_fail@plt+0x238c>
   13530:	ldrb	r3, [fp, #-13]
   13534:	cmp	r3, #0
   13538:	beq	13558 <__assert_fail@plt+0x2318>
   1353c:	ldr	r0, [fp, #-8]
   13540:	bl	120b8 <__assert_fail@plt+0xe78>
   13544:	mov	r3, r0
   13548:	cmp	r3, #0
   1354c:	beq	13558 <__assert_fail@plt+0x2318>
   13550:	mov	r3, #1
   13554:	b	1355c <__assert_fail@plt+0x231c>
   13558:	mov	r3, #0
   1355c:	and	r3, r3, #1
   13560:	uxtb	r3, r3
   13564:	mov	r0, r3
   13568:	bl	133f4 <__assert_fail@plt+0x21b4>
   1356c:	str	r0, [fp, #-12]
   13570:	ldr	r0, [fp, #-8]
   13574:	bl	120b8 <__assert_fail@plt+0xe78>
   13578:	mov	r3, r0
   1357c:	cmp	r3, #0
   13580:	beq	135c0 <__assert_fail@plt+0x2380>
   13584:	ldr	r0, [fp, #-8]
   13588:	bl	11fcc <__assert_fail@plt+0xd8c>
   1358c:	ldr	r3, [fp, #-12]
   13590:	str	r3, [fp, #-8]
   13594:	ldr	r0, [fp, #-8]
   13598:	bl	120b8 <__assert_fail@plt+0xe78>
   1359c:	mov	r3, r0
   135a0:	cmp	r3, #0
   135a4:	beq	13518 <__assert_fail@plt+0x22d8>
   135a8:	ldr	r0, [fp, #-8]
   135ac:	bl	11fcc <__assert_fail@plt+0xd8c>
   135b0:	mov	r0, #0
   135b4:	bl	11f10 <__assert_fail@plt+0xcd0>
   135b8:	str	r0, [fp, #-8]
   135bc:	b	13518 <__assert_fail@plt+0x22d8>
   135c0:	ldr	r0, [fp, #-12]
   135c4:	bl	11fcc <__assert_fail@plt+0xd8c>
   135c8:	b	13518 <__assert_fail@plt+0x22d8>
   135cc:	ldr	r3, [fp, #-8]
   135d0:	mov	r0, r3
   135d4:	sub	sp, fp, #4
   135d8:	ldr	fp, [sp]
   135dc:	add	sp, sp, #4
   135e0:	pop	{pc}		; (ldr pc, [sp], #4)
   135e4:	push	{fp}		; (str fp, [sp, #-4]!)
   135e8:	add	fp, sp, #0
   135ec:	sub	sp, sp, #12
   135f0:	str	r0, [fp, #-8]
   135f4:	movw	r3, #12700	; 0x319c
   135f8:	movt	r3, #5
   135fc:	ldr	r2, [fp, #-8]
   13600:	str	r2, [r3]
   13604:	nop	{0}
   13608:	add	sp, fp, #0
   1360c:	pop	{fp}		; (ldr fp, [sp], #4)
   13610:	bx	lr
   13614:	push	{fp}		; (str fp, [sp, #-4]!)
   13618:	add	fp, sp, #0
   1361c:	sub	sp, sp, #12
   13620:	mov	r3, r0
   13624:	strb	r3, [fp, #-5]
   13628:	movw	r3, #12704	; 0x31a0
   1362c:	movt	r3, #5
   13630:	ldrb	r2, [fp, #-5]
   13634:	strb	r2, [r3]
   13638:	nop	{0}
   1363c:	add	sp, fp, #0
   13640:	pop	{fp}		; (ldr fp, [sp], #4)
   13644:	bx	lr
   13648:	str	r4, [sp, #-12]!
   1364c:	str	fp, [sp, #4]
   13650:	str	lr, [sp, #8]
   13654:	add	fp, sp, #8
   13658:	sub	sp, sp, #20
   1365c:	movw	r3, #12684	; 0x318c
   13660:	movt	r3, #5
   13664:	ldr	r3, [r3]
   13668:	mov	r0, r3
   1366c:	bl	3f104 <__assert_fail@plt+0x2dec4>
   13670:	mov	r3, r0
   13674:	cmp	r3, #0
   13678:	beq	1374c <__assert_fail@plt+0x250c>
   1367c:	movw	r3, #12704	; 0x31a0
   13680:	movt	r3, #5
   13684:	ldrb	r3, [r3]
   13688:	eor	r3, r3, #1
   1368c:	uxtb	r3, r3
   13690:	cmp	r3, #0
   13694:	bne	136ac <__assert_fail@plt+0x246c>
   13698:	bl	11168 <__errno_location@plt>
   1369c:	mov	r3, r0
   136a0:	ldr	r3, [r3]
   136a4:	cmp	r3, #32
   136a8:	beq	1374c <__assert_fail@plt+0x250c>
   136ac:	movw	r0, #4668	; 0x123c
   136b0:	movt	r0, #4
   136b4:	bl	11138 <gettext@plt>
   136b8:	str	r0, [fp, #-16]
   136bc:	movw	r3, #12700	; 0x319c
   136c0:	movt	r3, #5
   136c4:	ldr	r3, [r3]
   136c8:	cmp	r3, #0
   136cc:	beq	13718 <__assert_fail@plt+0x24d8>
   136d0:	bl	11168 <__errno_location@plt>
   136d4:	mov	r3, r0
   136d8:	ldr	r4, [r3]
   136dc:	movw	r3, #12700	; 0x319c
   136e0:	movt	r3, #5
   136e4:	ldr	r3, [r3]
   136e8:	mov	r0, r3
   136ec:	bl	23898 <__assert_fail@plt+0x12658>
   136f0:	mov	r2, r0
   136f4:	ldr	r3, [fp, #-16]
   136f8:	str	r3, [sp]
   136fc:	mov	r3, r2
   13700:	movw	r2, #4680	; 0x1248
   13704:	movt	r2, #4
   13708:	mov	r1, r4
   1370c:	mov	r0, #0
   13710:	bl	110b4 <error@plt>
   13714:	b	13738 <__assert_fail@plt+0x24f8>
   13718:	bl	11168 <__errno_location@plt>
   1371c:	mov	r3, r0
   13720:	ldr	r1, [r3]
   13724:	ldr	r3, [fp, #-16]
   13728:	movw	r2, #4688	; 0x1250
   1372c:	movt	r2, #4
   13730:	mov	r0, #0
   13734:	bl	110b4 <error@plt>
   13738:	movw	r3, #12580	; 0x3124
   1373c:	movt	r3, #5
   13740:	ldr	r3, [r3]
   13744:	mov	r0, r3
   13748:	bl	10fdc <_exit@plt>
   1374c:	movw	r3, #12680	; 0x3188
   13750:	movt	r3, #5
   13754:	ldr	r3, [r3]
   13758:	mov	r0, r3
   1375c:	bl	3f104 <__assert_fail@plt+0x2dec4>
   13760:	mov	r3, r0
   13764:	cmp	r3, #0
   13768:	beq	13780 <__assert_fail@plt+0x2540>
   1376c:	movw	r3, #12580	; 0x3124
   13770:	movt	r3, #5
   13774:	ldr	r3, [r3]
   13778:	mov	r0, r3
   1377c:	bl	10fdc <_exit@plt>
   13780:	nop	{0}
   13784:	sub	sp, fp, #8
   13788:	ldr	r4, [sp]
   1378c:	ldr	fp, [sp, #4]
   13790:	add	sp, sp, #8
   13794:	pop	{pc}		; (ldr pc, [sp], #4)
   13798:	str	r4, [sp, #-12]!
   1379c:	str	fp, [sp, #4]
   137a0:	str	lr, [sp, #8]
   137a4:	add	fp, sp, #8
   137a8:	sub	sp, sp, #20
   137ac:	str	r0, [fp, #-24]	; 0xffffffe8
   137b0:	bl	11168 <__errno_location@plt>
   137b4:	mov	r3, r0
   137b8:	ldr	r3, [r3]
   137bc:	str	r3, [fp, #-20]	; 0xffffffec
   137c0:	bl	11168 <__errno_location@plt>
   137c4:	mov	r3, r0
   137c8:	ldr	r3, [r3]
   137cc:	str	r3, [fp, #-16]
   137d0:	bl	11168 <__errno_location@plt>
   137d4:	mov	r2, r0
   137d8:	mov	r3, #0
   137dc:	str	r3, [r2]
   137e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137e4:	bl	10fc4 <free@plt>
   137e8:	bl	11168 <__errno_location@plt>
   137ec:	mov	r3, r0
   137f0:	ldr	r3, [r3]
   137f4:	cmp	r3, #0
   137f8:	moveq	r3, #1
   137fc:	movne	r3, #0
   13800:	uxtb	r3, r3
   13804:	mov	r4, r3
   13808:	bl	11168 <__errno_location@plt>
   1380c:	mov	r2, r0
   13810:	lsl	r3, r4, #2
   13814:	sub	r1, fp, #12
   13818:	add	r3, r1, r3
   1381c:	ldr	r3, [r3, #-8]
   13820:	str	r3, [r2]
   13824:	nop	{0}
   13828:	sub	sp, fp, #8
   1382c:	ldr	r4, [sp]
   13830:	ldr	fp, [sp, #4]
   13834:	add	sp, sp, #8
   13838:	pop	{pc}		; (ldr pc, [sp], #4)
   1383c:	andeq	r0, r0, r0
   13840:	str	fp, [sp, #-8]!
   13844:	str	lr, [sp, #4]
   13848:	add	fp, sp, #4
   1384c:	sub	sp, sp, #8
   13850:	str	r0, [fp, #-8]
   13854:	movw	r3, #12680	; 0x3188
   13858:	movt	r3, #5
   1385c:	ldr	r3, [r3]
   13860:	ldr	r2, [fp, #-8]
   13864:	movw	r1, #4696	; 0x1258
   13868:	movt	r1, #4
   1386c:	mov	r0, r3
   13870:	bl	1115c <fprintf@plt>
   13874:	bl	11228 <abort@plt>
   13878:	str	fp, [sp, #-8]!
   1387c:	str	lr, [sp, #4]
   13880:	add	fp, sp, #4
   13884:	sub	sp, sp, #16
   13888:	str	r0, [fp, #-16]
   1388c:	ldr	r3, [fp, #-16]
   13890:	cmp	r3, #0
   13894:	bne	138b8 <__assert_fail@plt+0x2678>
   13898:	movw	r3, #6252	; 0x186c
   1389c:	movt	r3, #4
   138a0:	movw	r2, #291	; 0x123
   138a4:	movw	r1, #4700	; 0x125c
   138a8:	movt	r1, #4
   138ac:	movw	r0, #4716	; 0x126c
   138b0:	movt	r0, #4
   138b4:	bl	11240 <__assert_fail@plt>
   138b8:	ldr	r0, [fp, #-16]
   138bc:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   138c0:	mov	r3, r0
   138c4:	str	r3, [fp, #-8]
   138c8:	ldr	r3, [fp, #-8]
   138cc:	cmp	r3, #0
   138d0:	bne	138e0 <__assert_fail@plt+0x26a0>
   138d4:	movw	r0, #4728	; 0x1278
   138d8:	movt	r0, #4
   138dc:	bl	13840 <__assert_fail@plt+0x2600>
   138e0:	ldr	r3, [fp, #-8]
   138e4:	mov	r0, r3
   138e8:	sub	sp, fp, #4
   138ec:	ldr	fp, [sp]
   138f0:	add	sp, sp, #4
   138f4:	pop	{pc}		; (ldr pc, [sp], #4)
   138f8:	str	fp, [sp, #-8]!
   138fc:	str	lr, [sp, #4]
   13900:	add	fp, sp, #4
   13904:	sub	sp, sp, #24
   13908:	str	r0, [fp, #-16]
   1390c:	str	r1, [fp, #-20]	; 0xffffffec
   13910:	str	r2, [fp, #-24]	; 0xffffffe8
   13914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13918:	ldr	r0, [fp, #-16]
   1391c:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   13920:	str	r0, [fp, #-8]
   13924:	ldr	r3, [fp, #-8]
   13928:	cmp	r3, #0
   1392c:	bne	1393c <__assert_fail@plt+0x26fc>
   13930:	movw	r0, #4776	; 0x12a8
   13934:	movt	r0, #4
   13938:	bl	13840 <__assert_fail@plt+0x2600>
   1393c:	ldr	r3, [fp, #-8]
   13940:	mov	r0, r3
   13944:	sub	sp, fp, #4
   13948:	ldr	fp, [sp]
   1394c:	add	sp, sp, #4
   13950:	pop	{pc}		; (ldr pc, [sp], #4)
   13954:	str	fp, [sp, #-8]!
   13958:	str	lr, [sp, #4]
   1395c:	add	fp, sp, #4
   13960:	sub	sp, sp, #8
   13964:	str	r0, [fp, #-8]
   13968:	str	r1, [fp, #-12]
   1396c:	ldr	r0, [fp, #-8]
   13970:	bl	13798 <__assert_fail@plt+0x2558>
   13974:	nop	{0}
   13978:	sub	sp, fp, #4
   1397c:	ldr	fp, [sp]
   13980:	add	sp, sp, #4
   13984:	pop	{pc}		; (ldr pc, [sp], #4)
   13988:	push	{fp}		; (str fp, [sp, #-4]!)
   1398c:	add	fp, sp, #0
   13990:	sub	sp, sp, #20
   13994:	str	r0, [fp, #-8]
   13998:	str	r1, [fp, #-12]
   1399c:	str	r2, [fp, #-16]
   139a0:	ldr	r3, [fp, #-8]
   139a4:	cmp	r3, #0
   139a8:	beq	139c0 <__assert_fail@plt+0x2780>
   139ac:	movw	r3, #12584	; 0x3128
   139b0:	movt	r3, #5
   139b4:	ldr	r2, [r3]
   139b8:	ldr	r3, [fp, #-8]
   139bc:	str	r2, [r3]
   139c0:	ldr	r3, [fp, #-12]
   139c4:	cmp	r3, #0
   139c8:	beq	139e0 <__assert_fail@plt+0x27a0>
   139cc:	movw	r3, #12588	; 0x312c
   139d0:	movt	r3, #5
   139d4:	ldr	r2, [r3]
   139d8:	ldr	r3, [fp, #-12]
   139dc:	str	r2, [r3]
   139e0:	ldr	r3, [fp, #-16]
   139e4:	cmp	r3, #0
   139e8:	beq	13a00 <__assert_fail@plt+0x27c0>
   139ec:	movw	r3, #12592	; 0x3130
   139f0:	movt	r3, #5
   139f4:	ldr	r2, [r3]
   139f8:	ldr	r3, [fp, #-16]
   139fc:	str	r2, [r3]
   13a00:	nop	{0}
   13a04:	add	sp, fp, #0
   13a08:	pop	{fp}		; (ldr fp, [sp], #4)
   13a0c:	bx	lr
   13a10:	push	{fp}		; (str fp, [sp, #-4]!)
   13a14:	add	fp, sp, #0
   13a18:	sub	sp, sp, #20
   13a1c:	str	r0, [fp, #-8]
   13a20:	str	r1, [fp, #-12]
   13a24:	str	r2, [fp, #-16]
   13a28:	ldr	r3, [fp, #-8]
   13a2c:	cmp	r3, #0
   13a30:	bne	13a40 <__assert_fail@plt+0x2800>
   13a34:	movw	r3, #14456	; 0x3878
   13a38:	movt	r3, #1
   13a3c:	str	r3, [fp, #-8]
   13a40:	ldr	r3, [fp, #-12]
   13a44:	cmp	r3, #0
   13a48:	bne	13a58 <__assert_fail@plt+0x2818>
   13a4c:	movw	r3, #14584	; 0x38f8
   13a50:	movt	r3, #1
   13a54:	str	r3, [fp, #-12]
   13a58:	ldr	r3, [fp, #-16]
   13a5c:	cmp	r3, #0
   13a60:	bne	13a70 <__assert_fail@plt+0x2830>
   13a64:	movw	r3, #14676	; 0x3954
   13a68:	movt	r3, #1
   13a6c:	str	r3, [fp, #-16]
   13a70:	movw	r3, #12584	; 0x3128
   13a74:	movt	r3, #5
   13a78:	ldr	r2, [fp, #-8]
   13a7c:	str	r2, [r3]
   13a80:	movw	r3, #12588	; 0x312c
   13a84:	movt	r3, #5
   13a88:	ldr	r2, [fp, #-12]
   13a8c:	str	r2, [r3]
   13a90:	movw	r3, #12592	; 0x3130
   13a94:	movt	r3, #5
   13a98:	ldr	r2, [fp, #-16]
   13a9c:	str	r2, [r3]
   13aa0:	nop	{0}
   13aa4:	add	sp, fp, #0
   13aa8:	pop	{fp}		; (ldr fp, [sp], #4)
   13aac:	bx	lr
   13ab0:	str	fp, [sp, #-8]!
   13ab4:	str	lr, [sp, #4]
   13ab8:	add	fp, sp, #4
   13abc:	sub	sp, sp, #8
   13ac0:	str	r0, [fp, #-8]
   13ac4:	movw	r3, #12584	; 0x3128
   13ac8:	movt	r3, #5
   13acc:	ldr	r3, [r3]
   13ad0:	ldr	r2, [fp, #-8]
   13ad4:	lsl	r2, r2, #2
   13ad8:	mov	r0, r2
   13adc:	blx	r3
   13ae0:	mov	r3, r0
   13ae4:	mov	r0, r3
   13ae8:	sub	sp, fp, #4
   13aec:	ldr	fp, [sp]
   13af0:	add	sp, sp, #4
   13af4:	pop	{pc}		; (ldr pc, [sp], #4)
   13af8:	str	fp, [sp, #-8]!
   13afc:	str	lr, [sp, #4]
   13b00:	add	fp, sp, #4
   13b04:	sub	sp, sp, #16
   13b08:	str	r0, [fp, #-8]
   13b0c:	str	r1, [fp, #-12]
   13b10:	str	r2, [fp, #-16]
   13b14:	ldr	r3, [fp, #-16]
   13b18:	cmp	r3, #0
   13b1c:	bgt	13b40 <__assert_fail@plt+0x2900>
   13b20:	movw	r3, #6272	; 0x1880
   13b24:	movt	r3, #4
   13b28:	mov	r2, #368	; 0x170
   13b2c:	movw	r1, #4700	; 0x125c
   13b30:	movt	r1, #4
   13b34:	movw	r0, #4716	; 0x126c
   13b38:	movt	r0, #4
   13b3c:	bl	11240 <__assert_fail@plt>
   13b40:	movw	r3, #12588	; 0x312c
   13b44:	movt	r3, #5
   13b48:	ldr	r3, [r3]
   13b4c:	ldr	r2, [fp, #-12]
   13b50:	lsl	r1, r2, #2
   13b54:	ldr	r2, [fp, #-16]
   13b58:	lsl	r2, r2, #2
   13b5c:	ldr	r0, [fp, #-8]
   13b60:	blx	r3
   13b64:	mov	r3, r0
   13b68:	mov	r0, r3
   13b6c:	sub	sp, fp, #4
   13b70:	ldr	fp, [sp]
   13b74:	add	sp, sp, #4
   13b78:	pop	{pc}		; (ldr pc, [sp], #4)
   13b7c:	str	fp, [sp, #-8]!
   13b80:	str	lr, [sp, #4]
   13b84:	add	fp, sp, #4
   13b88:	sub	sp, sp, #8
   13b8c:	str	r0, [fp, #-8]
   13b90:	str	r1, [fp, #-12]
   13b94:	movw	r3, #12592	; 0x3130
   13b98:	movt	r3, #5
   13b9c:	ldr	r3, [r3]
   13ba0:	ldr	r2, [fp, #-12]
   13ba4:	lsl	r2, r2, #2
   13ba8:	mov	r1, r2
   13bac:	ldr	r0, [fp, #-8]
   13bb0:	blx	r3
   13bb4:	nop	{0}
   13bb8:	sub	sp, fp, #4
   13bbc:	ldr	fp, [sp]
   13bc0:	add	sp, sp, #4
   13bc4:	pop	{pc}		; (ldr pc, [sp], #4)
   13bc8:	push	{fp}		; (str fp, [sp, #-4]!)
   13bcc:	add	fp, sp, #0
   13bd0:	sub	sp, sp, #28
   13bd4:	str	r0, [fp, #-16]
   13bd8:	str	r1, [fp, #-20]	; 0xffffffec
   13bdc:	str	r2, [fp, #-24]	; 0xffffffe8
   13be0:	mov	r3, #0
   13be4:	str	r3, [fp, #-8]
   13be8:	b	13c20 <__assert_fail@plt+0x29e0>
   13bec:	ldr	r3, [fp, #-8]
   13bf0:	lsl	r3, r3, #2
   13bf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13bf8:	add	r2, r2, r3
   13bfc:	ldr	r3, [fp, #-8]
   13c00:	lsl	r3, r3, #2
   13c04:	ldr	r1, [fp, #-16]
   13c08:	add	r3, r1, r3
   13c0c:	ldr	r2, [r2]
   13c10:	str	r2, [r3]
   13c14:	ldr	r3, [fp, #-8]
   13c18:	add	r3, r3, #1
   13c1c:	str	r3, [fp, #-8]
   13c20:	ldr	r2, [fp, #-8]
   13c24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c28:	cmp	r2, r3
   13c2c:	blt	13bec <__assert_fail@plt+0x29ac>
   13c30:	nop	{0}
   13c34:	add	sp, fp, #0
   13c38:	pop	{fp}		; (ldr fp, [sp], #4)
   13c3c:	bx	lr
   13c40:	push	{fp}		; (str fp, [sp, #-4]!)
   13c44:	add	fp, sp, #0
   13c48:	sub	sp, sp, #20
   13c4c:	str	r0, [fp, #-8]
   13c50:	str	r1, [fp, #-12]
   13c54:	str	r2, [fp, #-16]
   13c58:	b	13c84 <__assert_fail@plt+0x2a44>
   13c5c:	ldr	r3, [fp, #-16]
   13c60:	lsl	r3, r3, #2
   13c64:	ldr	r2, [fp, #-12]
   13c68:	add	r2, r2, r3
   13c6c:	ldr	r3, [fp, #-16]
   13c70:	lsl	r3, r3, #2
   13c74:	ldr	r1, [fp, #-8]
   13c78:	add	r3, r1, r3
   13c7c:	ldr	r2, [r2]
   13c80:	str	r2, [r3]
   13c84:	ldr	r3, [fp, #-16]
   13c88:	sub	r3, r3, #1
   13c8c:	str	r3, [fp, #-16]
   13c90:	ldr	r3, [fp, #-16]
   13c94:	cmp	r3, #0
   13c98:	bge	13c5c <__assert_fail@plt+0x2a1c>
   13c9c:	nop	{0}
   13ca0:	add	sp, fp, #0
   13ca4:	pop	{fp}		; (ldr fp, [sp], #4)
   13ca8:	bx	lr
   13cac:	push	{fp}		; (str fp, [sp, #-4]!)
   13cb0:	add	fp, sp, #0
   13cb4:	sub	sp, sp, #20
   13cb8:	str	r0, [fp, #-8]
   13cbc:	str	r1, [fp, #-12]
   13cc0:	str	r2, [fp, #-16]
   13cc4:	b	13d38 <__assert_fail@plt+0x2af8>
   13cc8:	ldr	r3, [fp, #-16]
   13ccc:	lsl	r3, r3, #2
   13cd0:	ldr	r2, [fp, #-8]
   13cd4:	add	r3, r2, r3
   13cd8:	ldr	r2, [r3]
   13cdc:	ldr	r3, [fp, #-16]
   13ce0:	lsl	r3, r3, #2
   13ce4:	ldr	r1, [fp, #-12]
   13ce8:	add	r3, r1, r3
   13cec:	ldr	r3, [r3]
   13cf0:	cmp	r2, r3
   13cf4:	beq	13d38 <__assert_fail@plt+0x2af8>
   13cf8:	ldr	r3, [fp, #-16]
   13cfc:	lsl	r3, r3, #2
   13d00:	ldr	r2, [fp, #-8]
   13d04:	add	r3, r2, r3
   13d08:	ldr	r2, [r3]
   13d0c:	ldr	r3, [fp, #-16]
   13d10:	lsl	r3, r3, #2
   13d14:	ldr	r1, [fp, #-12]
   13d18:	add	r3, r1, r3
   13d1c:	ldr	r3, [r3]
   13d20:	cmp	r2, r3
   13d24:	bls	13d30 <__assert_fail@plt+0x2af0>
   13d28:	mov	r3, #1
   13d2c:	b	13d54 <__assert_fail@plt+0x2b14>
   13d30:	mvn	r3, #0
   13d34:	b	13d54 <__assert_fail@plt+0x2b14>
   13d38:	ldr	r3, [fp, #-16]
   13d3c:	sub	r3, r3, #1
   13d40:	str	r3, [fp, #-16]
   13d44:	ldr	r3, [fp, #-16]
   13d48:	cmp	r3, #0
   13d4c:	bge	13cc8 <__assert_fail@plt+0x2a88>
   13d50:	mov	r3, #0
   13d54:	mov	r0, r3
   13d58:	add	sp, fp, #0
   13d5c:	pop	{fp}		; (ldr fp, [sp], #4)
   13d60:	bx	lr
   13d64:	str	fp, [sp, #-8]!
   13d68:	str	lr, [sp, #4]
   13d6c:	add	fp, sp, #4
   13d70:	sub	sp, sp, #16
   13d74:	str	r0, [fp, #-8]
   13d78:	str	r1, [fp, #-12]
   13d7c:	str	r2, [fp, #-16]
   13d80:	str	r3, [fp, #-20]	; 0xffffffec
   13d84:	ldr	r2, [fp, #-12]
   13d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d8c:	cmp	r2, r3
   13d90:	beq	13db4 <__assert_fail@plt+0x2b74>
   13d94:	ldr	r2, [fp, #-12]
   13d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d9c:	cmp	r2, r3
   13da0:	bge	13dac <__assert_fail@plt+0x2b6c>
   13da4:	mvn	r3, #0
   13da8:	b	13dc8 <__assert_fail@plt+0x2b88>
   13dac:	mov	r3, #1
   13db0:	b	13dc8 <__assert_fail@plt+0x2b88>
   13db4:	ldr	r2, [fp, #-12]
   13db8:	ldr	r1, [fp, #-16]
   13dbc:	ldr	r0, [fp, #-8]
   13dc0:	bl	13cac <__assert_fail@plt+0x2a6c>
   13dc4:	mov	r3, r0
   13dc8:	mov	r0, r3
   13dcc:	sub	sp, fp, #4
   13dd0:	ldr	fp, [sp]
   13dd4:	add	sp, sp, #4
   13dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13ddc:	push	{fp}		; (str fp, [sp, #-4]!)
   13de0:	add	fp, sp, #0
   13de4:	sub	sp, sp, #12
   13de8:	str	r0, [fp, #-8]
   13dec:	str	r1, [fp, #-12]
   13df0:	b	13e00 <__assert_fail@plt+0x2bc0>
   13df4:	ldr	r3, [fp, #-12]
   13df8:	sub	r3, r3, #1
   13dfc:	str	r3, [fp, #-12]
   13e00:	ldr	r3, [fp, #-12]
   13e04:	cmp	r3, #0
   13e08:	ble	13e2c <__assert_fail@plt+0x2bec>
   13e0c:	ldr	r3, [fp, #-12]
   13e10:	sub	r3, r3, #-1073741823	; 0xc0000001
   13e14:	lsl	r3, r3, #2
   13e18:	ldr	r2, [fp, #-8]
   13e1c:	add	r3, r2, r3
   13e20:	ldr	r3, [r3]
   13e24:	cmp	r3, #0
   13e28:	beq	13df4 <__assert_fail@plt+0x2bb4>
   13e2c:	ldr	r3, [fp, #-12]
   13e30:	mov	r0, r3
   13e34:	add	sp, fp, #0
   13e38:	pop	{fp}		; (ldr fp, [sp], #4)
   13e3c:	bx	lr
   13e40:	str	fp, [sp, #-8]!
   13e44:	str	lr, [sp, #4]
   13e48:	add	fp, sp, #4
   13e4c:	sub	sp, sp, #8
   13e50:	str	r0, [fp, #-8]
   13e54:	str	r1, [fp, #-12]
   13e58:	ldr	r1, [fp, #-12]
   13e5c:	ldr	r0, [fp, #-8]
   13e60:	bl	13ddc <__assert_fail@plt+0x2b9c>
   13e64:	mov	r3, r0
   13e68:	cmp	r3, #0
   13e6c:	moveq	r3, #1
   13e70:	movne	r3, #0
   13e74:	uxtb	r3, r3
   13e78:	mov	r0, r3
   13e7c:	sub	sp, fp, #4
   13e80:	ldr	fp, [sp]
   13e84:	add	sp, sp, #4
   13e88:	pop	{pc}		; (ldr pc, [sp], #4)
   13e8c:	push	{fp}		; (str fp, [sp, #-4]!)
   13e90:	add	fp, sp, #0
   13e94:	sub	sp, sp, #12
   13e98:	str	r0, [fp, #-8]
   13e9c:	str	r1, [fp, #-12]
   13ea0:	b	13ebc <__assert_fail@plt+0x2c7c>
   13ea4:	ldr	r3, [fp, #-12]
   13ea8:	lsl	r3, r3, #2
   13eac:	ldr	r2, [fp, #-8]
   13eb0:	add	r3, r2, r3
   13eb4:	mov	r2, #0
   13eb8:	str	r2, [r3]
   13ebc:	ldr	r3, [fp, #-12]
   13ec0:	sub	r3, r3, #1
   13ec4:	str	r3, [fp, #-12]
   13ec8:	ldr	r3, [fp, #-12]
   13ecc:	cmp	r3, #0
   13ed0:	bge	13ea4 <__assert_fail@plt+0x2c64>
   13ed4:	nop	{0}
   13ed8:	add	sp, fp, #0
   13edc:	pop	{fp}		; (ldr fp, [sp], #4)
   13ee0:	bx	lr
   13ee4:	str	fp, [sp, #-8]!
   13ee8:	str	lr, [sp, #4]
   13eec:	add	fp, sp, #4
   13ef0:	sub	sp, sp, #24
   13ef4:	str	r0, [fp, #-16]
   13ef8:	str	r1, [fp, #-20]	; 0xffffffec
   13efc:	str	r2, [fp, #-24]	; 0xffffffe8
   13f00:	str	r3, [fp, #-28]	; 0xffffffe4
   13f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f08:	cmp	r3, #0
   13f0c:	bgt	13f30 <__assert_fail@plt+0x2cf0>
   13f10:	movw	r3, #6292	; 0x1894
   13f14:	movt	r3, #4
   13f18:	movw	r2, #442	; 0x1ba
   13f1c:	movw	r1, #4700	; 0x125c
   13f20:	movt	r1, #4
   13f24:	movw	r0, #4824	; 0x12d8
   13f28:	movt	r0, #4
   13f2c:	bl	11240 <__assert_fail@plt>
   13f30:	mov	r3, #0
   13f34:	str	r3, [fp, #-8]
   13f38:	ldr	r3, [fp, #-8]
   13f3c:	lsl	r3, r3, #2
   13f40:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f44:	add	r3, r2, r3
   13f48:	ldr	r3, [r3]
   13f4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f50:	add	r3, r2, r3
   13f54:	str	r3, [fp, #-12]
   13f58:	ldr	r2, [fp, #-12]
   13f5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f60:	cmp	r2, r3
   13f64:	movcc	r3, #1
   13f68:	movcs	r3, #0
   13f6c:	uxtb	r3, r3
   13f70:	str	r3, [fp, #-28]	; 0xffffffe4
   13f74:	ldr	r3, [fp, #-8]
   13f78:	lsl	r3, r3, #2
   13f7c:	ldr	r2, [fp, #-16]
   13f80:	add	r3, r2, r3
   13f84:	ldr	r2, [fp, #-12]
   13f88:	str	r2, [r3]
   13f8c:	ldr	r3, [fp, #-8]
   13f90:	add	r3, r3, #1
   13f94:	str	r3, [fp, #-8]
   13f98:	ldr	r2, [fp, #-8]
   13f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fa0:	cmp	r2, r3
   13fa4:	blt	13f38 <__assert_fail@plt+0x2cf8>
   13fa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fac:	mov	r0, r3
   13fb0:	sub	sp, fp, #4
   13fb4:	ldr	fp, [sp]
   13fb8:	add	sp, sp, #4
   13fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   13fc0:	push	{fp}		; (str fp, [sp, #-4]!)
   13fc4:	add	fp, sp, #0
   13fc8:	sub	sp, sp, #44	; 0x2c
   13fcc:	str	r0, [fp, #-32]	; 0xffffffe0
   13fd0:	str	r1, [fp, #-36]	; 0xffffffdc
   13fd4:	str	r2, [fp, #-40]	; 0xffffffd8
   13fd8:	str	r3, [fp, #-44]	; 0xffffffd4
   13fdc:	mov	r3, #0
   13fe0:	str	r3, [fp, #-8]
   13fe4:	mov	r3, #0
   13fe8:	str	r3, [fp, #-12]
   13fec:	b	140a8 <__assert_fail@plt+0x2e68>
   13ff0:	ldr	r3, [fp, #-8]
   13ff4:	lsl	r3, r3, #2
   13ff8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13ffc:	add	r3, r2, r3
   14000:	ldr	r3, [r3]
   14004:	str	r3, [fp, #-16]
   14008:	ldr	r3, [fp, #-8]
   1400c:	lsl	r3, r3, #2
   14010:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14014:	add	r3, r2, r3
   14018:	ldr	r3, [r3]
   1401c:	str	r3, [fp, #-20]	; 0xffffffec
   14020:	ldr	r2, [fp, #-16]
   14024:	ldr	r3, [fp, #-12]
   14028:	add	r3, r2, r3
   1402c:	str	r3, [fp, #-24]	; 0xffffffe8
   14030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14034:	ldr	r3, [fp, #-12]
   14038:	cmp	r2, r3
   1403c:	movcc	r3, #1
   14040:	movcs	r3, #0
   14044:	uxtb	r3, r3
   14048:	str	r3, [fp, #-12]
   1404c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14050:	ldr	r3, [fp, #-20]	; 0xffffffec
   14054:	add	r3, r2, r3
   14058:	str	r3, [fp, #-24]	; 0xffffffe8
   1405c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14060:	ldr	r3, [fp, #-20]	; 0xffffffec
   14064:	cmp	r2, r3
   14068:	movcc	r3, #1
   1406c:	movcs	r3, #0
   14070:	uxtb	r3, r3
   14074:	mov	r2, r3
   14078:	ldr	r3, [fp, #-12]
   1407c:	add	r3, r3, r2
   14080:	str	r3, [fp, #-12]
   14084:	ldr	r3, [fp, #-8]
   14088:	lsl	r3, r3, #2
   1408c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14090:	add	r3, r2, r3
   14094:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14098:	str	r2, [r3]
   1409c:	ldr	r3, [fp, #-8]
   140a0:	add	r3, r3, #1
   140a4:	str	r3, [fp, #-8]
   140a8:	ldr	r2, [fp, #-8]
   140ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   140b0:	cmp	r2, r3
   140b4:	blt	13ff0 <__assert_fail@plt+0x2db0>
   140b8:	ldr	r3, [fp, #-12]
   140bc:	mov	r0, r3
   140c0:	add	sp, fp, #0
   140c4:	pop	{fp}		; (ldr fp, [sp], #4)
   140c8:	bx	lr
   140cc:	str	fp, [sp, #-8]!
   140d0:	str	lr, [sp, #4]
   140d4:	add	fp, sp, #4
   140d8:	sub	sp, sp, #24
   140dc:	str	r0, [fp, #-16]
   140e0:	str	r1, [fp, #-20]	; 0xffffffec
   140e4:	str	r2, [fp, #-24]	; 0xffffffe8
   140e8:	str	r3, [fp, #-28]	; 0xffffffe4
   140ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   140f0:	ldr	r3, [fp, #4]
   140f4:	cmp	r2, r3
   140f8:	bge	1411c <__assert_fail@plt+0x2edc>
   140fc:	movw	r3, #6304	; 0x18a0
   14100:	movt	r3, #4
   14104:	mov	r2, #480	; 0x1e0
   14108:	movw	r1, #4700	; 0x125c
   1410c:	movt	r1, #4
   14110:	movw	r0, #4832	; 0x12e0
   14114:	movt	r0, #4
   14118:	bl	11240 <__assert_fail@plt>
   1411c:	ldr	r3, [fp, #4]
   14120:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14124:	ldr	r1, [fp, #-20]	; 0xffffffec
   14128:	ldr	r0, [fp, #-16]
   1412c:	bl	13fc0 <__assert_fail@plt+0x2d80>
   14130:	str	r0, [fp, #-8]
   14134:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14138:	ldr	r3, [fp, #4]
   1413c:	cmp	r2, r3
   14140:	ble	1417c <__assert_fail@plt+0x2f3c>
   14144:	ldr	r3, [fp, #4]
   14148:	lsl	r3, r3, #2
   1414c:	ldr	r2, [fp, #-16]
   14150:	add	r0, r2, r3
   14154:	ldr	r3, [fp, #4]
   14158:	lsl	r3, r3, #2
   1415c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14160:	add	r1, r2, r3
   14164:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14168:	ldr	r3, [fp, #4]
   1416c:	sub	r2, r2, r3
   14170:	ldr	r3, [fp, #-8]
   14174:	bl	13ee4 <__assert_fail@plt+0x2ca4>
   14178:	str	r0, [fp, #-8]
   1417c:	ldr	r3, [fp, #-8]
   14180:	mov	r0, r3
   14184:	sub	sp, fp, #4
   14188:	ldr	fp, [sp]
   1418c:	add	sp, sp, #4
   14190:	pop	{pc}		; (ldr pc, [sp], #4)
   14194:	str	fp, [sp, #-8]!
   14198:	str	lr, [sp, #4]
   1419c:	add	fp, sp, #4
   141a0:	sub	sp, sp, #32
   141a4:	str	r0, [fp, #-24]	; 0xffffffe8
   141a8:	str	r1, [fp, #-28]	; 0xffffffe4
   141ac:	str	r2, [fp, #-32]	; 0xffffffe0
   141b0:	str	r3, [fp, #-36]	; 0xffffffdc
   141b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   141b8:	cmp	r3, #0
   141bc:	bgt	141e0 <__assert_fail@plt+0x2fa0>
   141c0:	movw	r3, #6312	; 0x18a8
   141c4:	movt	r3, #4
   141c8:	movw	r2, #493	; 0x1ed
   141cc:	movw	r1, #4700	; 0x125c
   141d0:	movt	r1, #4
   141d4:	movw	r0, #4824	; 0x12d8
   141d8:	movt	r0, #4
   141dc:	bl	11240 <__assert_fail@plt>
   141e0:	mov	r3, #0
   141e4:	str	r3, [fp, #-8]
   141e8:	ldr	r3, [fp, #-8]
   141ec:	lsl	r3, r3, #2
   141f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   141f4:	add	r3, r2, r3
   141f8:	ldr	r3, [r3]
   141fc:	str	r3, [fp, #-12]
   14200:	ldr	r2, [fp, #-12]
   14204:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14208:	cmp	r2, r3
   1420c:	movcc	r3, #1
   14210:	movcs	r3, #0
   14214:	uxtb	r3, r3
   14218:	str	r3, [fp, #-16]
   1421c:	ldr	r3, [fp, #-8]
   14220:	lsl	r3, r3, #2
   14224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14228:	add	r3, r2, r3
   1422c:	ldr	r1, [fp, #-12]
   14230:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14234:	sub	r2, r1, r2
   14238:	str	r2, [r3]
   1423c:	ldr	r3, [fp, #-16]
   14240:	str	r3, [fp, #-36]	; 0xffffffdc
   14244:	ldr	r3, [fp, #-8]
   14248:	add	r3, r3, #1
   1424c:	str	r3, [fp, #-8]
   14250:	ldr	r2, [fp, #-8]
   14254:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14258:	cmp	r2, r3
   1425c:	blt	141e8 <__assert_fail@plt+0x2fa8>
   14260:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14264:	mov	r0, r3
   14268:	sub	sp, fp, #4
   1426c:	ldr	fp, [sp]
   14270:	add	sp, sp, #4
   14274:	pop	{pc}		; (ldr pc, [sp], #4)
   14278:	push	{fp}		; (str fp, [sp, #-4]!)
   1427c:	add	fp, sp, #0
   14280:	sub	sp, sp, #36	; 0x24
   14284:	str	r0, [fp, #-24]	; 0xffffffe8
   14288:	str	r1, [fp, #-28]	; 0xffffffe4
   1428c:	str	r2, [fp, #-32]	; 0xffffffe0
   14290:	str	r3, [fp, #-36]	; 0xffffffdc
   14294:	mov	r3, #0
   14298:	str	r3, [fp, #-8]
   1429c:	mov	r3, #0
   142a0:	str	r3, [fp, #-12]
   142a4:	b	14358 <__assert_fail@plt+0x3118>
   142a8:	ldr	r3, [fp, #-8]
   142ac:	lsl	r3, r3, #2
   142b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   142b4:	add	r3, r2, r3
   142b8:	ldr	r3, [r3]
   142bc:	str	r3, [fp, #-16]
   142c0:	ldr	r3, [fp, #-8]
   142c4:	lsl	r3, r3, #2
   142c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   142cc:	add	r3, r2, r3
   142d0:	ldr	r3, [r3]
   142d4:	str	r3, [fp, #-20]	; 0xffffffec
   142d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   142dc:	ldr	r3, [fp, #-12]
   142e0:	add	r3, r2, r3
   142e4:	str	r3, [fp, #-20]	; 0xffffffec
   142e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   142ec:	ldr	r3, [fp, #-12]
   142f0:	cmp	r2, r3
   142f4:	movcc	r3, #1
   142f8:	movcs	r3, #0
   142fc:	uxtb	r3, r3
   14300:	str	r3, [fp, #-12]
   14304:	ldr	r2, [fp, #-16]
   14308:	ldr	r3, [fp, #-20]	; 0xffffffec
   1430c:	cmp	r2, r3
   14310:	movcc	r3, #1
   14314:	movcs	r3, #0
   14318:	uxtb	r3, r3
   1431c:	mov	r2, r3
   14320:	ldr	r3, [fp, #-12]
   14324:	add	r3, r3, r2
   14328:	str	r3, [fp, #-12]
   1432c:	ldr	r3, [fp, #-8]
   14330:	lsl	r3, r3, #2
   14334:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14338:	add	r3, r2, r3
   1433c:	ldr	r1, [fp, #-16]
   14340:	ldr	r2, [fp, #-20]	; 0xffffffec
   14344:	sub	r2, r1, r2
   14348:	str	r2, [r3]
   1434c:	ldr	r3, [fp, #-8]
   14350:	add	r3, r3, #1
   14354:	str	r3, [fp, #-8]
   14358:	ldr	r2, [fp, #-8]
   1435c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14360:	cmp	r2, r3
   14364:	blt	142a8 <__assert_fail@plt+0x3068>
   14368:	ldr	r3, [fp, #-12]
   1436c:	mov	r0, r3
   14370:	add	sp, fp, #0
   14374:	pop	{fp}		; (ldr fp, [sp], #4)
   14378:	bx	lr
   1437c:	str	fp, [sp, #-8]!
   14380:	str	lr, [sp, #4]
   14384:	add	fp, sp, #4
   14388:	sub	sp, sp, #24
   1438c:	str	r0, [fp, #-16]
   14390:	str	r1, [fp, #-20]	; 0xffffffec
   14394:	str	r2, [fp, #-24]	; 0xffffffe8
   14398:	str	r3, [fp, #-28]	; 0xffffffe4
   1439c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   143a0:	ldr	r3, [fp, #4]
   143a4:	cmp	r2, r3
   143a8:	bge	143cc <__assert_fail@plt+0x318c>
   143ac:	movw	r3, #6324	; 0x18b4
   143b0:	movt	r3, #4
   143b4:	mov	r2, #532	; 0x214
   143b8:	movw	r1, #4700	; 0x125c
   143bc:	movt	r1, #4
   143c0:	movw	r0, #4832	; 0x12e0
   143c4:	movt	r0, #4
   143c8:	bl	11240 <__assert_fail@plt>
   143cc:	ldr	r3, [fp, #4]
   143d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   143d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   143d8:	ldr	r0, [fp, #-16]
   143dc:	bl	14278 <__assert_fail@plt+0x3038>
   143e0:	str	r0, [fp, #-8]
   143e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   143e8:	ldr	r3, [fp, #4]
   143ec:	cmp	r2, r3
   143f0:	ble	1442c <__assert_fail@plt+0x31ec>
   143f4:	ldr	r3, [fp, #4]
   143f8:	lsl	r3, r3, #2
   143fc:	ldr	r2, [fp, #-16]
   14400:	add	r0, r2, r3
   14404:	ldr	r3, [fp, #4]
   14408:	lsl	r3, r3, #2
   1440c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14410:	add	r1, r2, r3
   14414:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14418:	ldr	r3, [fp, #4]
   1441c:	sub	r2, r2, r3
   14420:	ldr	r3, [fp, #-8]
   14424:	bl	14194 <__assert_fail@plt+0x2f54>
   14428:	str	r0, [fp, #-8]
   1442c:	ldr	r3, [fp, #-8]
   14430:	mov	r0, r3
   14434:	sub	sp, fp, #4
   14438:	ldr	fp, [sp]
   1443c:	add	sp, sp, #4
   14440:	pop	{pc}		; (ldr pc, [sp], #4)
   14444:	str	fp, [sp, #-8]!
   14448:	str	lr, [sp, #4]
   1444c:	add	fp, sp, #4
   14450:	sub	sp, sp, #80	; 0x50
   14454:	str	r0, [fp, #-72]	; 0xffffffb8
   14458:	str	r1, [fp, #-76]	; 0xffffffb4
   1445c:	str	r2, [fp, #-80]	; 0xffffffb0
   14460:	str	r3, [fp, #-84]	; 0xffffffac
   14464:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14468:	cmp	r3, #0
   1446c:	bgt	14490 <__assert_fail@plt+0x3250>
   14470:	movw	r3, #6332	; 0x18bc
   14474:	movt	r3, #4
   14478:	movw	r2, #545	; 0x221
   1447c:	movw	r1, #4700	; 0x125c
   14480:	movt	r1, #4
   14484:	movw	r0, #4844	; 0x12ec
   14488:	movt	r0, #4
   1448c:	bl	11240 <__assert_fail@plt>
   14490:	mov	r3, #0
   14494:	str	r3, [fp, #-8]
   14498:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1449c:	add	r2, r3, #4
   144a0:	str	r2, [fp, #-76]	; 0xffffffb4
   144a4:	ldr	r3, [r3]
   144a8:	str	r3, [fp, #-16]
   144ac:	mov	r3, #32
   144b0:	str	r3, [fp, #-20]	; 0xffffffec
   144b4:	ldr	r3, [fp, #-16]
   144b8:	str	r3, [fp, #-24]	; 0xffffffe8
   144bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   144c0:	str	r3, [fp, #-28]	; 0xffffffe4
   144c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144c8:	uxth	r3, r3
   144cc:	str	r3, [fp, #-32]	; 0xffffffe0
   144d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144d4:	lsr	r3, r3, #16
   144d8:	str	r3, [fp, #-36]	; 0xffffffdc
   144dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144e0:	uxth	r3, r3
   144e4:	str	r3, [fp, #-40]	; 0xffffffd8
   144e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144ec:	lsr	r3, r3, #16
   144f0:	str	r3, [fp, #-44]	; 0xffffffd4
   144f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   144f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   144fc:	mul	r3, r2, r3
   14500:	str	r3, [fp, #-48]	; 0xffffffd0
   14504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14508:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1450c:	mul	r3, r2, r3
   14510:	str	r3, [fp, #-52]	; 0xffffffcc
   14514:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14518:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1451c:	mul	r3, r2, r3
   14520:	str	r3, [fp, #-56]	; 0xffffffc8
   14524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14528:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1452c:	mul	r3, r2, r3
   14530:	str	r3, [fp, #-12]
   14534:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14538:	lsr	r3, r3, #16
   1453c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14540:	add	r3, r2, r3
   14544:	str	r3, [fp, #-52]	; 0xffffffcc
   14548:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1454c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14550:	add	r3, r2, r3
   14554:	str	r3, [fp, #-52]	; 0xffffffcc
   14558:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1455c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14560:	cmp	r2, r3
   14564:	bcs	14574 <__assert_fail@plt+0x3334>
   14568:	ldr	r3, [fp, #-12]
   1456c:	add	r3, r3, #65536	; 0x10000
   14570:	str	r3, [fp, #-12]
   14574:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14578:	lsr	r3, r3, #16
   1457c:	ldr	r2, [fp, #-12]
   14580:	add	r3, r2, r3
   14584:	str	r3, [fp, #-60]	; 0xffffffc4
   14588:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1458c:	lsl	r2, r3, #16
   14590:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14594:	uxth	r3, r3
   14598:	add	r3, r2, r3
   1459c:	str	r3, [fp, #-64]	; 0xffffffc0
   145a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   145a4:	ldr	r3, [fp, #-8]
   145a8:	add	r3, r2, r3
   145ac:	str	r3, [fp, #-64]	; 0xffffffc0
   145b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   145b4:	ldr	r3, [fp, #-8]
   145b8:	cmp	r2, r3
   145bc:	movcc	r3, #1
   145c0:	movcs	r3, #0
   145c4:	uxtb	r3, r3
   145c8:	mov	r2, r3
   145cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   145d0:	add	r3, r3, r2
   145d4:	str	r3, [fp, #-8]
   145d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   145dc:	add	r2, r3, #4
   145e0:	str	r2, [fp, #-72]	; 0xffffffb8
   145e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   145e8:	str	r2, [r3]
   145ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   145f0:	sub	r3, r3, #1
   145f4:	str	r3, [fp, #-80]	; 0xffffffb0
   145f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   145fc:	cmp	r3, #0
   14600:	bne	14498 <__assert_fail@plt+0x3258>
   14604:	ldr	r3, [fp, #-8]
   14608:	mov	r0, r3
   1460c:	sub	sp, fp, #4
   14610:	ldr	fp, [sp]
   14614:	add	sp, sp, #4
   14618:	pop	{pc}		; (ldr pc, [sp], #4)
   1461c:	str	fp, [sp, #-8]!
   14620:	str	lr, [sp, #4]
   14624:	add	fp, sp, #4
   14628:	sub	sp, sp, #80	; 0x50
   1462c:	str	r0, [fp, #-72]	; 0xffffffb8
   14630:	str	r1, [fp, #-76]	; 0xffffffb4
   14634:	str	r2, [fp, #-80]	; 0xffffffb0
   14638:	str	r3, [fp, #-84]	; 0xffffffac
   1463c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14640:	cmp	r3, #0
   14644:	bgt	14668 <__assert_fail@plt+0x3428>
   14648:	movw	r3, #6344	; 0x18c8
   1464c:	movt	r3, #4
   14650:	mov	r2, #568	; 0x238
   14654:	movw	r1, #4700	; 0x125c
   14658:	movt	r1, #4
   1465c:	movw	r0, #4844	; 0x12ec
   14660:	movt	r0, #4
   14664:	bl	11240 <__assert_fail@plt>
   14668:	mov	r3, #0
   1466c:	str	r3, [fp, #-8]
   14670:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14674:	add	r2, r3, #4
   14678:	str	r2, [fp, #-76]	; 0xffffffb4
   1467c:	ldr	r3, [r3]
   14680:	str	r3, [fp, #-16]
   14684:	mov	r3, #32
   14688:	str	r3, [fp, #-20]	; 0xffffffec
   1468c:	ldr	r3, [fp, #-16]
   14690:	str	r3, [fp, #-24]	; 0xffffffe8
   14694:	ldr	r3, [fp, #-84]	; 0xffffffac
   14698:	str	r3, [fp, #-28]	; 0xffffffe4
   1469c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146a0:	uxth	r3, r3
   146a4:	str	r3, [fp, #-32]	; 0xffffffe0
   146a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146ac:	lsr	r3, r3, #16
   146b0:	str	r3, [fp, #-36]	; 0xffffffdc
   146b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   146b8:	uxth	r3, r3
   146bc:	str	r3, [fp, #-40]	; 0xffffffd8
   146c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   146c4:	lsr	r3, r3, #16
   146c8:	str	r3, [fp, #-44]	; 0xffffffd4
   146cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   146d4:	mul	r3, r2, r3
   146d8:	str	r3, [fp, #-48]	; 0xffffffd0
   146dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   146e4:	mul	r3, r2, r3
   146e8:	str	r3, [fp, #-52]	; 0xffffffcc
   146ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   146f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   146f4:	mul	r3, r2, r3
   146f8:	str	r3, [fp, #-56]	; 0xffffffc8
   146fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14700:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14704:	mul	r3, r2, r3
   14708:	str	r3, [fp, #-12]
   1470c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14710:	lsr	r3, r3, #16
   14714:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14718:	add	r3, r2, r3
   1471c:	str	r3, [fp, #-52]	; 0xffffffcc
   14720:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14724:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14728:	add	r3, r2, r3
   1472c:	str	r3, [fp, #-52]	; 0xffffffcc
   14730:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14734:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14738:	cmp	r2, r3
   1473c:	bcs	1474c <__assert_fail@plt+0x350c>
   14740:	ldr	r3, [fp, #-12]
   14744:	add	r3, r3, #65536	; 0x10000
   14748:	str	r3, [fp, #-12]
   1474c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14750:	lsr	r3, r3, #16
   14754:	ldr	r2, [fp, #-12]
   14758:	add	r3, r2, r3
   1475c:	str	r3, [fp, #-60]	; 0xffffffc4
   14760:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14764:	lsl	r2, r3, #16
   14768:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1476c:	uxth	r3, r3
   14770:	add	r3, r2, r3
   14774:	str	r3, [fp, #-64]	; 0xffffffc0
   14778:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1477c:	ldr	r3, [fp, #-8]
   14780:	add	r3, r2, r3
   14784:	str	r3, [fp, #-64]	; 0xffffffc0
   14788:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1478c:	ldr	r3, [fp, #-8]
   14790:	cmp	r2, r3
   14794:	movcc	r3, #1
   14798:	movcs	r3, #0
   1479c:	uxtb	r3, r3
   147a0:	mov	r2, r3
   147a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   147a8:	add	r3, r3, r2
   147ac:	str	r3, [fp, #-8]
   147b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   147b4:	ldr	r3, [r3]
   147b8:	str	r3, [fp, #-68]	; 0xffffffbc
   147bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   147c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   147c4:	add	r3, r2, r3
   147c8:	str	r3, [fp, #-64]	; 0xffffffc0
   147cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   147d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   147d4:	cmp	r2, r3
   147d8:	movcc	r3, #1
   147dc:	movcs	r3, #0
   147e0:	uxtb	r3, r3
   147e4:	mov	r2, r3
   147e8:	ldr	r3, [fp, #-8]
   147ec:	add	r3, r3, r2
   147f0:	str	r3, [fp, #-8]
   147f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   147f8:	add	r2, r3, #4
   147fc:	str	r2, [fp, #-72]	; 0xffffffb8
   14800:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14804:	str	r2, [r3]
   14808:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1480c:	sub	r3, r3, #1
   14810:	str	r3, [fp, #-80]	; 0xffffffb0
   14814:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14818:	cmp	r3, #0
   1481c:	bne	14670 <__assert_fail@plt+0x3430>
   14820:	ldr	r3, [fp, #-8]
   14824:	mov	r0, r3
   14828:	sub	sp, fp, #4
   1482c:	ldr	fp, [sp]
   14830:	add	sp, sp, #4
   14834:	pop	{pc}		; (ldr pc, [sp], #4)
   14838:	str	fp, [sp, #-8]!
   1483c:	str	lr, [sp, #4]
   14840:	add	fp, sp, #4
   14844:	sub	sp, sp, #80	; 0x50
   14848:	str	r0, [fp, #-72]	; 0xffffffb8
   1484c:	str	r1, [fp, #-76]	; 0xffffffb4
   14850:	str	r2, [fp, #-80]	; 0xffffffb0
   14854:	str	r3, [fp, #-84]	; 0xffffffac
   14858:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1485c:	cmp	r3, #0
   14860:	bgt	14884 <__assert_fail@plt+0x3644>
   14864:	movw	r3, #6360	; 0x18d8
   14868:	movt	r3, #4
   1486c:	movw	r2, #594	; 0x252
   14870:	movw	r1, #4700	; 0x125c
   14874:	movt	r1, #4
   14878:	movw	r0, #4844	; 0x12ec
   1487c:	movt	r0, #4
   14880:	bl	11240 <__assert_fail@plt>
   14884:	mov	r3, #0
   14888:	str	r3, [fp, #-8]
   1488c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14890:	add	r2, r3, #4
   14894:	str	r2, [fp, #-76]	; 0xffffffb4
   14898:	ldr	r3, [r3]
   1489c:	str	r3, [fp, #-16]
   148a0:	mov	r3, #32
   148a4:	str	r3, [fp, #-20]	; 0xffffffec
   148a8:	ldr	r3, [fp, #-16]
   148ac:	str	r3, [fp, #-24]	; 0xffffffe8
   148b0:	ldr	r3, [fp, #-84]	; 0xffffffac
   148b4:	str	r3, [fp, #-28]	; 0xffffffe4
   148b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148bc:	uxth	r3, r3
   148c0:	str	r3, [fp, #-32]	; 0xffffffe0
   148c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148c8:	lsr	r3, r3, #16
   148cc:	str	r3, [fp, #-36]	; 0xffffffdc
   148d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   148d4:	uxth	r3, r3
   148d8:	str	r3, [fp, #-40]	; 0xffffffd8
   148dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   148e0:	lsr	r3, r3, #16
   148e4:	str	r3, [fp, #-44]	; 0xffffffd4
   148e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   148f0:	mul	r3, r2, r3
   148f4:	str	r3, [fp, #-48]	; 0xffffffd0
   148f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14900:	mul	r3, r2, r3
   14904:	str	r3, [fp, #-52]	; 0xffffffcc
   14908:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1490c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14910:	mul	r3, r2, r3
   14914:	str	r3, [fp, #-56]	; 0xffffffc8
   14918:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1491c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14920:	mul	r3, r2, r3
   14924:	str	r3, [fp, #-12]
   14928:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1492c:	lsr	r3, r3, #16
   14930:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14934:	add	r3, r2, r3
   14938:	str	r3, [fp, #-52]	; 0xffffffcc
   1493c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14940:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14944:	add	r3, r2, r3
   14948:	str	r3, [fp, #-52]	; 0xffffffcc
   1494c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14950:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14954:	cmp	r2, r3
   14958:	bcs	14968 <__assert_fail@plt+0x3728>
   1495c:	ldr	r3, [fp, #-12]
   14960:	add	r3, r3, #65536	; 0x10000
   14964:	str	r3, [fp, #-12]
   14968:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1496c:	lsr	r3, r3, #16
   14970:	ldr	r2, [fp, #-12]
   14974:	add	r3, r2, r3
   14978:	str	r3, [fp, #-60]	; 0xffffffc4
   1497c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14980:	lsl	r2, r3, #16
   14984:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14988:	uxth	r3, r3
   1498c:	add	r3, r2, r3
   14990:	str	r3, [fp, #-64]	; 0xffffffc0
   14994:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14998:	ldr	r3, [fp, #-8]
   1499c:	add	r3, r2, r3
   149a0:	str	r3, [fp, #-64]	; 0xffffffc0
   149a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   149a8:	ldr	r3, [fp, #-8]
   149ac:	cmp	r2, r3
   149b0:	movcc	r3, #1
   149b4:	movcs	r3, #0
   149b8:	uxtb	r3, r3
   149bc:	mov	r2, r3
   149c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   149c4:	add	r3, r3, r2
   149c8:	str	r3, [fp, #-8]
   149cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   149d0:	ldr	r3, [r3]
   149d4:	str	r3, [fp, #-68]	; 0xffffffbc
   149d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   149dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   149e0:	sub	r3, r2, r3
   149e4:	str	r3, [fp, #-64]	; 0xffffffc0
   149e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   149ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   149f0:	cmp	r2, r3
   149f4:	movhi	r3, #1
   149f8:	movls	r3, #0
   149fc:	uxtb	r3, r3
   14a00:	mov	r2, r3
   14a04:	ldr	r3, [fp, #-8]
   14a08:	add	r3, r3, r2
   14a0c:	str	r3, [fp, #-8]
   14a10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14a14:	add	r2, r3, #4
   14a18:	str	r2, [fp, #-72]	; 0xffffffb8
   14a1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14a20:	str	r2, [r3]
   14a24:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14a28:	sub	r3, r3, #1
   14a2c:	str	r3, [fp, #-80]	; 0xffffffb0
   14a30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14a34:	cmp	r3, #0
   14a38:	bne	1488c <__assert_fail@plt+0x364c>
   14a3c:	ldr	r3, [fp, #-8]
   14a40:	mov	r0, r3
   14a44:	sub	sp, fp, #4
   14a48:	ldr	fp, [sp]
   14a4c:	add	sp, sp, #4
   14a50:	pop	{pc}		; (ldr pc, [sp], #4)
   14a54:	str	r4, [sp, #-12]!
   14a58:	str	fp, [sp, #4]
   14a5c:	str	lr, [sp, #8]
   14a60:	add	fp, sp, #8
   14a64:	sub	sp, sp, #20
   14a68:	str	r0, [fp, #-16]
   14a6c:	str	r1, [fp, #-20]	; 0xffffffec
   14a70:	str	r2, [fp, #-24]	; 0xffffffe8
   14a74:	str	r3, [fp, #-28]	; 0xffffffe4
   14a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14a7c:	ldr	r3, [fp, #4]
   14a80:	cmp	r2, r3
   14a84:	bge	14aa8 <__assert_fail@plt+0x3868>
   14a88:	movw	r3, #6376	; 0x18e8
   14a8c:	movt	r3, #4
   14a90:	movw	r2, #618	; 0x26a
   14a94:	movw	r1, #4700	; 0x125c
   14a98:	movt	r1, #4
   14a9c:	movw	r0, #4852	; 0x12f4
   14aa0:	movt	r0, #4
   14aa4:	bl	11240 <__assert_fail@plt>
   14aa8:	ldr	r3, [fp, #4]
   14aac:	cmp	r3, #0
   14ab0:	bgt	14ad4 <__assert_fail@plt+0x3894>
   14ab4:	movw	r3, #6376	; 0x18e8
   14ab8:	movt	r3, #4
   14abc:	movw	r2, #619	; 0x26b
   14ac0:	movw	r1, #4700	; 0x125c
   14ac4:	movt	r1, #4
   14ac8:	movw	r0, #4864	; 0x1300
   14acc:	movt	r0, #4
   14ad0:	bl	11240 <__assert_fail@plt>
   14ad4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ad8:	ldr	r3, [fp, #4]
   14adc:	add	r3, r2, r3
   14ae0:	lsl	r3, r3, #2
   14ae4:	ldr	r2, [fp, #-16]
   14ae8:	add	r3, r2, r3
   14aec:	ldr	r2, [fp, #-20]	; 0xffffffec
   14af0:	cmp	r2, r3
   14af4:	bcs	14b34 <__assert_fail@plt+0x38f4>
   14af8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14afc:	lsl	r3, r3, #2
   14b00:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b04:	add	r3, r2, r3
   14b08:	ldr	r2, [fp, #-16]
   14b0c:	cmp	r2, r3
   14b10:	bcs	14b34 <__assert_fail@plt+0x38f4>
   14b14:	movw	r3, #6376	; 0x18e8
   14b18:	movt	r3, #4
   14b1c:	mov	r2, #620	; 0x26c
   14b20:	movw	r1, #4700	; 0x125c
   14b24:	movt	r1, #4
   14b28:	movw	r0, #4872	; 0x1308
   14b2c:	movt	r0, #4
   14b30:	bl	11240 <__assert_fail@plt>
   14b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b38:	ldr	r3, [fp, #4]
   14b3c:	add	r3, r2, r3
   14b40:	lsl	r3, r3, #2
   14b44:	ldr	r2, [fp, #-16]
   14b48:	add	r3, r2, r3
   14b4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b50:	cmp	r2, r3
   14b54:	bcs	14b94 <__assert_fail@plt+0x3954>
   14b58:	ldr	r3, [fp, #4]
   14b5c:	lsl	r3, r3, #2
   14b60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b64:	add	r3, r2, r3
   14b68:	ldr	r2, [fp, #-16]
   14b6c:	cmp	r2, r3
   14b70:	bcs	14b94 <__assert_fail@plt+0x3954>
   14b74:	movw	r3, #6376	; 0x18e8
   14b78:	movt	r3, #4
   14b7c:	movw	r2, #621	; 0x26d
   14b80:	movw	r1, #4700	; 0x125c
   14b84:	movt	r1, #4
   14b88:	movw	r0, #4912	; 0x1330
   14b8c:	movt	r0, #4
   14b90:	bl	11240 <__assert_fail@plt>
   14b94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b98:	ldr	r1, [r3]
   14b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ba0:	lsl	r3, r3, #2
   14ba4:	ldr	r2, [fp, #-16]
   14ba8:	add	r4, r2, r3
   14bac:	mov	r3, r1
   14bb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bb8:	ldr	r0, [fp, #-16]
   14bbc:	bl	14444 <__assert_fail@plt+0x3204>
   14bc0:	mov	r3, r0
   14bc4:	str	r3, [r4]
   14bc8:	b	14c18 <__assert_fail@plt+0x39d8>
   14bcc:	ldr	r3, [fp, #-16]
   14bd0:	add	r3, r3, #4
   14bd4:	str	r3, [fp, #-16]
   14bd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bdc:	add	r3, r3, #4
   14be0:	str	r3, [fp, #-28]	; 0xffffffe4
   14be4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14be8:	ldr	r1, [r3]
   14bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14bf0:	lsl	r3, r3, #2
   14bf4:	ldr	r2, [fp, #-16]
   14bf8:	add	r4, r2, r3
   14bfc:	mov	r3, r1
   14c00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c04:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c08:	ldr	r0, [fp, #-16]
   14c0c:	bl	1461c <__assert_fail@plt+0x33dc>
   14c10:	mov	r3, r0
   14c14:	str	r3, [r4]
   14c18:	ldr	r3, [fp, #4]
   14c1c:	sub	r3, r3, #1
   14c20:	str	r3, [fp, #4]
   14c24:	ldr	r3, [fp, #4]
   14c28:	cmp	r3, #0
   14c2c:	bgt	14bcc <__assert_fail@plt+0x398c>
   14c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c34:	lsl	r3, r3, #2
   14c38:	ldr	r2, [fp, #-16]
   14c3c:	add	r3, r2, r3
   14c40:	ldr	r3, [r3]
   14c44:	mov	r0, r3
   14c48:	sub	sp, fp, #8
   14c4c:	ldr	r4, [sp]
   14c50:	ldr	fp, [sp, #4]
   14c54:	add	sp, sp, #8
   14c58:	pop	{pc}		; (ldr pc, [sp], #4)
   14c5c:	str	fp, [sp, #-8]!
   14c60:	str	lr, [sp, #4]
   14c64:	add	fp, sp, #4
   14c68:	sub	sp, sp, #24
   14c6c:	str	r0, [fp, #-8]
   14c70:	str	r1, [fp, #-12]
   14c74:	str	r2, [fp, #-16]
   14c78:	str	r3, [fp, #-20]	; 0xffffffec
   14c7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c80:	str	r3, [sp]
   14c84:	ldr	r3, [fp, #-16]
   14c88:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c8c:	ldr	r1, [fp, #-12]
   14c90:	ldr	r0, [fp, #-8]
   14c94:	bl	14a54 <__assert_fail@plt+0x3814>
   14c98:	nop	{0}
   14c9c:	sub	sp, fp, #4
   14ca0:	ldr	fp, [sp]
   14ca4:	add	sp, sp, #4
   14ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cac:	str	fp, [sp, #-8]!
   14cb0:	str	lr, [sp, #4]
   14cb4:	add	fp, sp, #4
   14cb8:	sub	sp, sp, #24
   14cbc:	str	r0, [fp, #-8]
   14cc0:	str	r1, [fp, #-12]
   14cc4:	str	r2, [fp, #-16]
   14cc8:	ldr	r3, [fp, #-16]
   14ccc:	str	r3, [sp]
   14cd0:	ldr	r3, [fp, #-12]
   14cd4:	ldr	r2, [fp, #-16]
   14cd8:	ldr	r1, [fp, #-12]
   14cdc:	ldr	r0, [fp, #-8]
   14ce0:	bl	14a54 <__assert_fail@plt+0x3814>
   14ce4:	nop	{0}
   14ce8:	sub	sp, fp, #4
   14cec:	ldr	fp, [sp]
   14cf0:	add	sp, sp, #4
   14cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cf8:	str	fp, [sp, #-8]!
   14cfc:	str	lr, [sp, #4]
   14d00:	add	fp, sp, #4
   14d04:	sub	sp, sp, #32
   14d08:	str	r0, [fp, #-24]	; 0xffffffe8
   14d0c:	str	r1, [fp, #-28]	; 0xffffffe4
   14d10:	str	r2, [fp, #-32]	; 0xffffffe0
   14d14:	str	r3, [fp, #-36]	; 0xffffffdc
   14d18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d1c:	cmp	r3, #0
   14d20:	bgt	14d44 <__assert_fail@plt+0x3b04>
   14d24:	movw	r3, #6384	; 0x18f0
   14d28:	movt	r3, #4
   14d2c:	movw	r2, #659	; 0x293
   14d30:	movw	r1, #4700	; 0x125c
   14d34:	movt	r1, #4
   14d38:	movw	r0, #4844	; 0x12ec
   14d3c:	movt	r0, #4
   14d40:	bl	11240 <__assert_fail@plt>
   14d44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d48:	cmp	r3, #0
   14d4c:	bne	14d70 <__assert_fail@plt+0x3b30>
   14d50:	movw	r3, #6384	; 0x18f0
   14d54:	movt	r3, #4
   14d58:	mov	r2, #660	; 0x294
   14d5c:	movw	r1, #4700	; 0x125c
   14d60:	movt	r1, #4
   14d64:	movw	r0, #4952	; 0x1358
   14d68:	movt	r0, #4
   14d6c:	bl	11240 <__assert_fail@plt>
   14d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d74:	cmp	r3, #31
   14d78:	bls	14d9c <__assert_fail@plt+0x3b5c>
   14d7c:	movw	r3, #6384	; 0x18f0
   14d80:	movt	r3, #4
   14d84:	movw	r2, #661	; 0x295
   14d88:	movw	r1, #4700	; 0x125c
   14d8c:	movt	r1, #4
   14d90:	movw	r0, #4964	; 0x1364
   14d94:	movt	r0, #4
   14d98:	bl	11240 <__assert_fail@plt>
   14d9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14da0:	lsl	r3, r3, #2
   14da4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14da8:	add	r3, r2, r3
   14dac:	str	r3, [fp, #-28]	; 0xffffffe4
   14db0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14db4:	lsl	r3, r3, #2
   14db8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14dbc:	add	r3, r2, r3
   14dc0:	str	r3, [fp, #-24]	; 0xffffffe8
   14dc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14dc8:	rsb	r3, r3, #32
   14dcc:	str	r3, [fp, #-12]
   14dd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14dd4:	sub	r3, r3, #4
   14dd8:	str	r3, [fp, #-28]	; 0xffffffe4
   14ddc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14de0:	ldr	r3, [r3]
   14de4:	str	r3, [fp, #-16]
   14de8:	ldr	r2, [fp, #-16]
   14dec:	ldr	r3, [fp, #-12]
   14df0:	lsr	r3, r2, r3
   14df4:	str	r3, [fp, #-20]	; 0xffffffec
   14df8:	ldr	r2, [fp, #-16]
   14dfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e00:	lsl	r3, r2, r3
   14e04:	str	r3, [fp, #-8]
   14e08:	b	14e5c <__assert_fail@plt+0x3c1c>
   14e0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e10:	sub	r3, r3, #4
   14e14:	str	r3, [fp, #-28]	; 0xffffffe4
   14e18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e1c:	ldr	r3, [r3]
   14e20:	str	r3, [fp, #-16]
   14e24:	ldr	r2, [fp, #-16]
   14e28:	ldr	r3, [fp, #-12]
   14e2c:	lsr	r2, r2, r3
   14e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e34:	sub	r3, r3, #4
   14e38:	str	r3, [fp, #-24]	; 0xffffffe8
   14e3c:	ldr	r3, [fp, #-8]
   14e40:	orr	r2, r2, r3
   14e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e48:	str	r2, [r3]
   14e4c:	ldr	r2, [fp, #-16]
   14e50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e54:	lsl	r3, r2, r3
   14e58:	str	r3, [fp, #-8]
   14e5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e60:	sub	r3, r3, #1
   14e64:	str	r3, [fp, #-32]	; 0xffffffe0
   14e68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e6c:	cmp	r3, #0
   14e70:	bne	14e0c <__assert_fail@plt+0x3bcc>
   14e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e78:	sub	r3, r3, #4
   14e7c:	str	r3, [fp, #-24]	; 0xffffffe8
   14e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e84:	ldr	r2, [fp, #-8]
   14e88:	str	r2, [r3]
   14e8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e90:	mov	r0, r3
   14e94:	sub	sp, fp, #4
   14e98:	ldr	fp, [sp]
   14e9c:	add	sp, sp, #4
   14ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ea4:	str	fp, [sp, #-8]!
   14ea8:	str	lr, [sp, #4]
   14eac:	add	fp, sp, #4
   14eb0:	sub	sp, sp, #32
   14eb4:	str	r0, [fp, #-24]	; 0xffffffe8
   14eb8:	str	r1, [fp, #-28]	; 0xffffffe4
   14ebc:	str	r2, [fp, #-32]	; 0xffffffe0
   14ec0:	str	r3, [fp, #-36]	; 0xffffffdc
   14ec4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14ec8:	cmp	r3, #0
   14ecc:	bgt	14ef0 <__assert_fail@plt+0x3cb0>
   14ed0:	movw	r3, #6396	; 0x18fc
   14ed4:	movt	r3, #4
   14ed8:	movw	r2, #689	; 0x2b1
   14edc:	movw	r1, #4700	; 0x125c
   14ee0:	movt	r1, #4
   14ee4:	movw	r0, #4844	; 0x12ec
   14ee8:	movt	r0, #4
   14eec:	bl	11240 <__assert_fail@plt>
   14ef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ef4:	cmp	r3, #0
   14ef8:	bne	14f1c <__assert_fail@plt+0x3cdc>
   14efc:	movw	r3, #6396	; 0x18fc
   14f00:	movt	r3, #4
   14f04:	movw	r2, #690	; 0x2b2
   14f08:	movw	r1, #4700	; 0x125c
   14f0c:	movt	r1, #4
   14f10:	movw	r0, #4952	; 0x1358
   14f14:	movt	r0, #4
   14f18:	bl	11240 <__assert_fail@plt>
   14f1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14f20:	cmp	r3, #31
   14f24:	bls	14f48 <__assert_fail@plt+0x3d08>
   14f28:	movw	r3, #6396	; 0x18fc
   14f2c:	movt	r3, #4
   14f30:	movw	r2, #691	; 0x2b3
   14f34:	movw	r1, #4700	; 0x125c
   14f38:	movt	r1, #4
   14f3c:	movw	r0, #4964	; 0x1364
   14f40:	movt	r0, #4
   14f44:	bl	11240 <__assert_fail@plt>
   14f48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14f4c:	rsb	r3, r3, #32
   14f50:	str	r3, [fp, #-12]
   14f54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f58:	add	r2, r3, #4
   14f5c:	str	r2, [fp, #-28]	; 0xffffffe4
   14f60:	ldr	r3, [r3]
   14f64:	str	r3, [fp, #-16]
   14f68:	ldr	r2, [fp, #-16]
   14f6c:	ldr	r3, [fp, #-12]
   14f70:	lsl	r3, r2, r3
   14f74:	str	r3, [fp, #-20]	; 0xffffffec
   14f78:	ldr	r2, [fp, #-16]
   14f7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14f80:	lsr	r3, r2, r3
   14f84:	str	r3, [fp, #-8]
   14f88:	b	14fd4 <__assert_fail@plt+0x3d94>
   14f8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f90:	add	r2, r3, #4
   14f94:	str	r2, [fp, #-28]	; 0xffffffe4
   14f98:	ldr	r3, [r3]
   14f9c:	str	r3, [fp, #-16]
   14fa0:	ldr	r2, [fp, #-16]
   14fa4:	ldr	r3, [fp, #-12]
   14fa8:	lsl	r1, r2, r3
   14fac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14fb0:	add	r2, r3, #4
   14fb4:	str	r2, [fp, #-24]	; 0xffffffe8
   14fb8:	ldr	r2, [fp, #-8]
   14fbc:	orr	r2, r1, r2
   14fc0:	str	r2, [r3]
   14fc4:	ldr	r2, [fp, #-16]
   14fc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14fcc:	lsr	r3, r2, r3
   14fd0:	str	r3, [fp, #-8]
   14fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14fd8:	sub	r3, r3, #1
   14fdc:	str	r3, [fp, #-32]	; 0xffffffe0
   14fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14fe4:	cmp	r3, #0
   14fe8:	bne	14f8c <__assert_fail@plt+0x3d4c>
   14fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ff0:	ldr	r2, [fp, #-8]
   14ff4:	str	r2, [r3]
   14ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ffc:	mov	r0, r3
   15000:	sub	sp, fp, #4
   15004:	ldr	fp, [sp]
   15008:	add	sp, sp, #4
   1500c:	pop	{pc}		; (ldr pc, [sp], #4)
   15010:	str	fp, [sp, #-8]!
   15014:	str	lr, [sp, #4]
   15018:	add	fp, sp, #4
   1501c:	sub	sp, sp, #40	; 0x28
   15020:	str	r0, [fp, #-32]	; 0xffffffe0
   15024:	str	r1, [fp, #-36]	; 0xffffffdc
   15028:	str	r2, [fp, #-40]	; 0xffffffd8
   1502c:	str	r3, [fp, #-44]	; 0xffffffd4
   15030:	ldr	r3, [fp, #4]
   15034:	cmp	r3, #0
   15038:	beq	15068 <__assert_fail@plt+0x3e28>
   1503c:	ldr	r3, [fp, #4]
   15040:	cmn	r3, #1
   15044:	beq	15068 <__assert_fail@plt+0x3e28>
   15048:	movw	r3, #6408	; 0x1908
   1504c:	movt	r3, #4
   15050:	movw	r2, #715	; 0x2cb
   15054:	movw	r1, #4700	; 0x125c
   15058:	movt	r1, #4
   1505c:	movw	r0, #4984	; 0x1378
   15060:	movt	r0, #4
   15064:	bl	11240 <__assert_fail@plt>
   15068:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1506c:	cmp	r3, #0
   15070:	blt	15084 <__assert_fail@plt+0x3e44>
   15074:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15078:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1507c:	cmp	r2, r3
   15080:	ble	150a4 <__assert_fail@plt+0x3e64>
   15084:	movw	r3, #6408	; 0x1908
   15088:	movt	r3, #4
   1508c:	mov	r2, #716	; 0x2cc
   15090:	movw	r1, #4700	; 0x125c
   15094:	movt	r1, #4
   15098:	movw	r0, #5016	; 0x1398
   1509c:	movt	r0, #4
   150a0:	bl	11240 <__assert_fail@plt>
   150a4:	b	15104 <__assert_fail@plt+0x3ec4>
   150a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   150ac:	add	r3, r3, #1
   150b0:	str	r3, [fp, #-36]	; 0xffffffdc
   150b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   150b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150bc:	cmp	r2, r3
   150c0:	bne	150e4 <__assert_fail@plt+0x3ea4>
   150c4:	ldr	r3, [fp, #4]
   150c8:	cmp	r3, #0
   150cc:	beq	150dc <__assert_fail@plt+0x3e9c>
   150d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150d4:	lsl	r3, r3, #5
   150d8:	b	151cc <__assert_fail@plt+0x3f8c>
   150dc:	mvn	r3, #0
   150e0:	b	151cc <__assert_fail@plt+0x3f8c>
   150e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   150e8:	lsl	r3, r3, #2
   150ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   150f0:	add	r3, r2, r3
   150f4:	ldr	r3, [r3]
   150f8:	ldr	r2, [fp, #4]
   150fc:	eor	r3, r3, r2
   15100:	str	r3, [fp, #-32]	; 0xffffffe0
   15104:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15108:	cmp	r3, #0
   1510c:	beq	150a8 <__assert_fail@plt+0x3e68>
   15110:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15114:	str	r3, [fp, #-16]
   15118:	mov	r3, #0
   1511c:	str	r3, [fp, #-20]	; 0xffffffec
   15120:	ldr	r3, [fp, #-16]
   15124:	rsb	r3, r3, #0
   15128:	ldr	r2, [fp, #-16]
   1512c:	and	r3, r3, r2
   15130:	str	r3, [fp, #-8]
   15134:	mov	r3, #0
   15138:	str	r3, [fp, #-12]
   1513c:	mov	r3, #8
   15140:	str	r3, [fp, #-24]	; 0xffffffe8
   15144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15148:	cmp	r3, #31
   1514c:	bhi	1519c <__assert_fail@plt+0x3f5c>
   15150:	b	15170 <__assert_fail@plt+0x3f30>
   15154:	ldr	r2, [fp, #-8]
   15158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1515c:	lsl	r3, r2, r3
   15160:	str	r3, [fp, #-8]
   15164:	ldr	r3, [fp, #-12]
   15168:	add	r3, r3, #8
   1516c:	str	r3, [fp, #-12]
   15170:	ldr	r3, [fp, #-8]
   15174:	and	r3, r3, #-16777216	; 0xff000000
   15178:	cmp	r3, #0
   1517c:	beq	15154 <__assert_fail@plt+0x3f14>
   15180:	b	1519c <__assert_fail@plt+0x3f5c>
   15184:	ldr	r3, [fp, #-8]
   15188:	lsl	r3, r3, #1
   1518c:	str	r3, [fp, #-8]
   15190:	ldr	r3, [fp, #-12]
   15194:	add	r3, r3, #1
   15198:	str	r3, [fp, #-12]
   1519c:	ldr	r3, [fp, #-8]
   151a0:	cmp	r3, #0
   151a4:	bge	15184 <__assert_fail@plt+0x3f44>
   151a8:	ldr	r3, [fp, #-12]
   151ac:	str	r3, [fp, #-20]	; 0xffffffec
   151b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   151b4:	rsb	r3, r3, #31
   151b8:	str	r3, [fp, #-28]	; 0xffffffe4
   151bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   151c0:	lsl	r2, r3, #5
   151c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   151c8:	add	r3, r2, r3
   151cc:	mov	r0, r3
   151d0:	sub	sp, fp, #4
   151d4:	ldr	fp, [sp]
   151d8:	add	sp, sp, #4
   151dc:	pop	{pc}		; (ldr pc, [sp], #4)
   151e0:	str	fp, [sp, #-8]!
   151e4:	str	lr, [sp, #4]
   151e8:	add	fp, sp, #4
   151ec:	sub	sp, sp, #24
   151f0:	str	r0, [fp, #-16]
   151f4:	str	r1, [fp, #-20]	; 0xffffffec
   151f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   151fc:	lsr	r3, r3, #5
   15200:	str	r3, [fp, #-8]
   15204:	ldr	r3, [fp, #-8]
   15208:	lsl	r3, r3, #2
   1520c:	ldr	r2, [fp, #-16]
   15210:	add	r3, r2, r3
   15214:	ldr	r2, [r3]
   15218:	ldr	r3, [fp, #-20]	; 0xffffffec
   1521c:	and	r3, r3, #31
   15220:	mvn	r1, #0
   15224:	lsl	r3, r1, r3
   15228:	and	r0, r2, r3
   1522c:	mov	r3, #0
   15230:	str	r3, [sp]
   15234:	ldr	r3, [fp, #-8]
   15238:	ldr	r2, [fp, #-16]
   1523c:	ldr	r1, [fp, #-8]
   15240:	bl	15010 <__assert_fail@plt+0x3dd0>
   15244:	mov	r3, r0
   15248:	mov	r0, r3
   1524c:	sub	sp, fp, #4
   15250:	ldr	fp, [sp]
   15254:	add	sp, sp, #4
   15258:	pop	{pc}		; (ldr pc, [sp], #4)
   1525c:	str	fp, [sp, #-8]!
   15260:	str	lr, [sp, #4]
   15264:	add	fp, sp, #4
   15268:	sub	sp, sp, #24
   1526c:	str	r0, [fp, #-16]
   15270:	str	r1, [fp, #-20]	; 0xffffffec
   15274:	ldr	r3, [fp, #-20]	; 0xffffffec
   15278:	lsr	r3, r3, #5
   1527c:	str	r3, [fp, #-8]
   15280:	ldr	r3, [fp, #-8]
   15284:	lsl	r3, r3, #2
   15288:	ldr	r2, [fp, #-16]
   1528c:	add	r3, r2, r3
   15290:	ldr	r3, [r3]
   15294:	mvn	r2, r3
   15298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1529c:	and	r3, r3, #31
   152a0:	mvn	r1, #0
   152a4:	lsl	r3, r1, r3
   152a8:	and	r0, r2, r3
   152ac:	mvn	r3, #0
   152b0:	str	r3, [sp]
   152b4:	ldr	r3, [fp, #-8]
   152b8:	ldr	r2, [fp, #-16]
   152bc:	ldr	r1, [fp, #-8]
   152c0:	bl	15010 <__assert_fail@plt+0x3dd0>
   152c4:	mov	r3, r0
   152c8:	mov	r0, r3
   152cc:	sub	sp, fp, #4
   152d0:	ldr	fp, [sp]
   152d4:	add	sp, sp, #4
   152d8:	pop	{pc}		; (ldr pc, [sp], #4)
   152dc:	push	{fp}		; (str fp, [sp, #-4]!)
   152e0:	add	fp, sp, #0
   152e4:	sub	sp, sp, #20
   152e8:	str	r0, [fp, #-8]
   152ec:	str	r1, [fp, #-12]
   152f0:	str	r2, [fp, #-16]
   152f4:	b	1531c <__assert_fail@plt+0x40dc>
   152f8:	ldr	r3, [fp, #-12]
   152fc:	add	r2, r3, #4
   15300:	str	r2, [fp, #-12]
   15304:	ldr	r2, [r3]
   15308:	ldr	r3, [fp, #-8]
   1530c:	add	r1, r3, #4
   15310:	str	r1, [fp, #-8]
   15314:	mvn	r2, r2
   15318:	str	r2, [r3]
   1531c:	ldr	r3, [fp, #-16]
   15320:	sub	r3, r3, #1
   15324:	str	r3, [fp, #-16]
   15328:	ldr	r3, [fp, #-16]
   1532c:	cmp	r3, #0
   15330:	bge	152f8 <__assert_fail@plt+0x40b8>
   15334:	nop	{0}
   15338:	add	sp, fp, #0
   1533c:	pop	{fp}		; (ldr fp, [sp], #4)
   15340:	bx	lr
   15344:	str	fp, [sp, #-8]!
   15348:	str	lr, [sp, #4]
   1534c:	add	fp, sp, #4
   15350:	sub	sp, sp, #16
   15354:	str	r0, [fp, #-8]
   15358:	str	r1, [fp, #-12]
   1535c:	str	r2, [fp, #-16]
   15360:	b	153a8 <__assert_fail@plt+0x4168>
   15364:	ldr	r3, [fp, #-8]
   15368:	mov	r2, #0
   1536c:	str	r2, [r3]
   15370:	ldr	r3, [fp, #-16]
   15374:	sub	r3, r3, #1
   15378:	str	r3, [fp, #-16]
   1537c:	ldr	r3, [fp, #-16]
   15380:	cmp	r3, #0
   15384:	bne	15390 <__assert_fail@plt+0x4150>
   15388:	mov	r3, #0
   1538c:	b	15404 <__assert_fail@plt+0x41c4>
   15390:	ldr	r3, [fp, #-12]
   15394:	add	r3, r3, #4
   15398:	str	r3, [fp, #-12]
   1539c:	ldr	r3, [fp, #-8]
   153a0:	add	r3, r3, #4
   153a4:	str	r3, [fp, #-8]
   153a8:	ldr	r3, [fp, #-12]
   153ac:	ldr	r3, [r3]
   153b0:	cmp	r3, #0
   153b4:	beq	15364 <__assert_fail@plt+0x4124>
   153b8:	ldr	r3, [fp, #-12]
   153bc:	ldr	r3, [r3]
   153c0:	rsb	r2, r3, #0
   153c4:	ldr	r3, [fp, #-8]
   153c8:	str	r2, [r3]
   153cc:	ldr	r3, [fp, #-8]
   153d0:	add	r3, r3, #4
   153d4:	str	r3, [fp, #-8]
   153d8:	ldr	r3, [fp, #-12]
   153dc:	add	r3, r3, #4
   153e0:	str	r3, [fp, #-12]
   153e4:	ldr	r3, [fp, #-16]
   153e8:	sub	r3, r3, #1
   153ec:	str	r3, [fp, #-16]
   153f0:	ldr	r2, [fp, #-16]
   153f4:	ldr	r1, [fp, #-12]
   153f8:	ldr	r0, [fp, #-8]
   153fc:	bl	152dc <__assert_fail@plt+0x409c>
   15400:	mov	r3, #1
   15404:	mov	r0, r3
   15408:	sub	sp, fp, #4
   1540c:	ldr	fp, [sp]
   15410:	add	sp, sp, #4
   15414:	pop	{pc}		; (ldr pc, [sp], #4)
   15418:	push	{fp}		; (str fp, [sp, #-4]!)
   1541c:	add	fp, sp, #0
   15420:	sub	sp, sp, #92	; 0x5c
   15424:	str	r0, [fp, #-88]	; 0xffffffa8
   15428:	str	r1, [fp, #-92]	; 0xffffffa4
   1542c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15430:	uxth	r3, r3
   15434:	str	r3, [fp, #-28]	; 0xffffffe4
   15438:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1543c:	lsr	r3, r3, #16
   15440:	str	r3, [fp, #-32]	; 0xffffffe0
   15444:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15448:	mvn	r2, r3
   1544c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15450:	udiv	r3, r2, r3
   15454:	str	r3, [fp, #-20]	; 0xffffffec
   15458:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1545c:	mvn	r2, r3
   15460:	ldr	r3, [fp, #-20]	; 0xffffffec
   15464:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15468:	mul	r3, r1, r3
   1546c:	sub	r3, r2, r3
   15470:	lsl	r3, r3, #16
   15474:	mvn	r3, r3, lsr #16
   15478:	mvn	r3, r3, lsl #16
   1547c:	str	r3, [fp, #-8]
   15480:	ldr	r3, [fp, #-20]	; 0xffffffec
   15484:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15488:	mul	r3, r2, r3
   1548c:	str	r3, [fp, #-36]	; 0xffffffdc
   15490:	ldr	r2, [fp, #-8]
   15494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15498:	cmp	r2, r3
   1549c:	bcs	154f8 <__assert_fail@plt+0x42b8>
   154a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   154a4:	sub	r3, r3, #1
   154a8:	str	r3, [fp, #-20]	; 0xffffffec
   154ac:	ldr	r2, [fp, #-8]
   154b0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   154b4:	add	r3, r2, r3
   154b8:	str	r3, [fp, #-8]
   154bc:	ldr	r2, [fp, #-8]
   154c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   154c4:	cmp	r2, r3
   154c8:	bcc	154f8 <__assert_fail@plt+0x42b8>
   154cc:	ldr	r2, [fp, #-8]
   154d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   154d4:	cmp	r2, r3
   154d8:	bcs	154f8 <__assert_fail@plt+0x42b8>
   154dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   154e0:	sub	r3, r3, #1
   154e4:	str	r3, [fp, #-20]	; 0xffffffec
   154e8:	ldr	r2, [fp, #-8]
   154ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   154f0:	add	r3, r2, r3
   154f4:	str	r3, [fp, #-8]
   154f8:	ldr	r2, [fp, #-8]
   154fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15500:	sub	r3, r2, r3
   15504:	str	r3, [fp, #-8]
   15508:	ldr	r3, [fp, #-8]
   1550c:	lsr	r3, r3, #16
   15510:	ldr	r2, [fp, #-20]	; 0xffffffec
   15514:	mul	r3, r2, r3
   15518:	ldr	r2, [fp, #-8]
   1551c:	add	r3, r2, r3
   15520:	str	r3, [fp, #-36]	; 0xffffffdc
   15524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15528:	lsr	r3, r3, #16
   1552c:	add	r3, r3, #1
   15530:	str	r3, [fp, #-16]
   15534:	ldr	r3, [fp, #-8]
   15538:	lsl	r2, r3, #16
   1553c:	ldr	r3, [fp, #-16]
   15540:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15544:	mul	r3, r1, r3
   15548:	sub	r3, r2, r3
   1554c:	add	r3, r3, #65280	; 0xff00
   15550:	add	r3, r3, #255	; 0xff
   15554:	str	r3, [fp, #-8]
   15558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1555c:	lsl	r3, r3, #16
   15560:	ldr	r2, [fp, #-8]
   15564:	cmp	r2, r3
   15568:	bcc	15588 <__assert_fail@plt+0x4348>
   1556c:	ldr	r3, [fp, #-16]
   15570:	sub	r3, r3, #1
   15574:	str	r3, [fp, #-16]
   15578:	ldr	r2, [fp, #-8]
   1557c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15580:	add	r3, r2, r3
   15584:	str	r3, [fp, #-8]
   15588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1558c:	lsl	r3, r3, #16
   15590:	ldr	r2, [fp, #-16]
   15594:	add	r3, r2, r3
   15598:	str	r3, [fp, #-12]
   1559c:	ldr	r2, [fp, #-8]
   155a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   155a4:	cmp	r2, r3
   155a8:	bcc	155c8 <__assert_fail@plt+0x4388>
   155ac:	ldr	r3, [fp, #-12]
   155b0:	add	r3, r3, #1
   155b4:	str	r3, [fp, #-12]
   155b8:	ldr	r2, [fp, #-8]
   155bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   155c0:	sub	r3, r2, r3
   155c4:	str	r3, [fp, #-8]
   155c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155cc:	cmp	r3, #0
   155d0:	beq	157d0 <__assert_fail@plt+0x4590>
   155d4:	ldr	r3, [fp, #-8]
   155d8:	mvn	r3, r3
   155dc:	str	r3, [fp, #-8]
   155e0:	ldr	r2, [fp, #-8]
   155e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155e8:	add	r3, r2, r3
   155ec:	str	r3, [fp, #-8]
   155f0:	ldr	r2, [fp, #-8]
   155f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155f8:	cmp	r2, r3
   155fc:	bcs	15648 <__assert_fail@plt+0x4408>
   15600:	ldr	r3, [fp, #-12]
   15604:	sub	r3, r3, #1
   15608:	str	r3, [fp, #-12]
   1560c:	ldr	r2, [fp, #-8]
   15610:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15614:	cmp	r2, r3
   15618:	bcc	15638 <__assert_fail@plt+0x43f8>
   1561c:	ldr	r3, [fp, #-12]
   15620:	sub	r3, r3, #1
   15624:	str	r3, [fp, #-12]
   15628:	ldr	r2, [fp, #-8]
   1562c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15630:	sub	r3, r2, r3
   15634:	str	r3, [fp, #-8]
   15638:	ldr	r2, [fp, #-8]
   1563c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15640:	sub	r3, r2, r3
   15644:	str	r3, [fp, #-8]
   15648:	mov	r3, #32
   1564c:	str	r3, [fp, #-40]	; 0xffffffd8
   15650:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15654:	str	r3, [fp, #-44]	; 0xffffffd4
   15658:	ldr	r3, [fp, #-12]
   1565c:	str	r3, [fp, #-48]	; 0xffffffd0
   15660:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15664:	uxth	r3, r3
   15668:	str	r3, [fp, #-52]	; 0xffffffcc
   1566c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15670:	lsr	r3, r3, #16
   15674:	str	r3, [fp, #-56]	; 0xffffffc8
   15678:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1567c:	uxth	r3, r3
   15680:	str	r3, [fp, #-60]	; 0xffffffc4
   15684:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15688:	lsr	r3, r3, #16
   1568c:	str	r3, [fp, #-64]	; 0xffffffc0
   15690:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15694:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15698:	mul	r3, r2, r3
   1569c:	str	r3, [fp, #-68]	; 0xffffffbc
   156a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   156a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   156a8:	mul	r3, r2, r3
   156ac:	str	r3, [fp, #-72]	; 0xffffffb8
   156b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   156b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   156b8:	mul	r3, r2, r3
   156bc:	str	r3, [fp, #-76]	; 0xffffffb4
   156c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   156c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   156c8:	mul	r3, r2, r3
   156cc:	str	r3, [fp, #-24]	; 0xffffffe8
   156d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   156d4:	lsr	r3, r3, #16
   156d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   156dc:	add	r3, r2, r3
   156e0:	str	r3, [fp, #-72]	; 0xffffffb8
   156e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   156e8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   156ec:	add	r3, r2, r3
   156f0:	str	r3, [fp, #-72]	; 0xffffffb8
   156f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   156f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   156fc:	cmp	r2, r3
   15700:	bcs	15710 <__assert_fail@plt+0x44d0>
   15704:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15708:	add	r3, r3, #65536	; 0x10000
   1570c:	str	r3, [fp, #-24]	; 0xffffffe8
   15710:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15714:	lsr	r3, r3, #16
   15718:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1571c:	add	r3, r2, r3
   15720:	str	r3, [fp, #-80]	; 0xffffffb0
   15724:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15728:	lsl	r2, r3, #16
   1572c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15730:	uxth	r3, r3
   15734:	add	r3, r2, r3
   15738:	str	r3, [fp, #-84]	; 0xffffffac
   1573c:	ldr	r2, [fp, #-8]
   15740:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15744:	add	r3, r2, r3
   15748:	str	r3, [fp, #-8]
   1574c:	ldr	r2, [fp, #-8]
   15750:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15754:	cmp	r2, r3
   15758:	bcs	157d0 <__assert_fail@plt+0x4590>
   1575c:	ldr	r3, [fp, #-12]
   15760:	sub	r3, r3, #1
   15764:	str	r3, [fp, #-12]
   15768:	ldr	r2, [fp, #-8]
   1576c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15770:	cmp	r2, r3
   15774:	movhi	r3, #1
   15778:	movls	r3, #0
   1577c:	uxtb	r3, r3
   15780:	mov	r0, r3
   15784:	ldr	r2, [fp, #-8]
   15788:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1578c:	cmp	r2, r3
   15790:	moveq	r3, #1
   15794:	movne	r3, #0
   15798:	uxtb	r2, r3
   1579c:	ldr	r1, [fp, #-84]	; 0xffffffac
   157a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   157a4:	cmp	r1, r3
   157a8:	movhi	r3, #1
   157ac:	movls	r3, #0
   157b0:	uxtb	r3, r3
   157b4:	and	r3, r3, r2
   157b8:	uxtb	r3, r3
   157bc:	orr	r3, r0, r3
   157c0:	mov	r2, r3
   157c4:	ldr	r3, [fp, #-12]
   157c8:	sub	r3, r3, r2
   157cc:	str	r3, [fp, #-12]
   157d0:	ldr	r3, [fp, #-12]
   157d4:	mov	r0, r3
   157d8:	add	sp, fp, #0
   157dc:	pop	{fp}		; (ldr fp, [sp], #4)
   157e0:	bx	lr
   157e4:	str	fp, [sp, #-8]!
   157e8:	str	lr, [sp, #4]
   157ec:	add	fp, sp, #4
   157f0:	sub	sp, sp, #24
   157f4:	str	r0, [fp, #-24]	; 0xffffffe8
   157f8:	str	r1, [fp, #-28]	; 0xffffffe4
   157fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15800:	cmp	r3, #0
   15804:	bne	15828 <__assert_fail@plt+0x45e8>
   15808:	movw	r3, #6424	; 0x1918
   1580c:	movt	r3, #4
   15810:	movw	r2, #902	; 0x386
   15814:	movw	r1, #4700	; 0x125c
   15818:	movt	r1, #4
   1581c:	movw	r0, #5036	; 0x13ac
   15820:	movt	r0, #4
   15824:	bl	11240 <__assert_fail@plt>
   15828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1582c:	str	r3, [fp, #-8]
   15830:	mov	r3, #0
   15834:	str	r3, [fp, #-12]
   15838:	mov	r3, #8
   1583c:	str	r3, [fp, #-16]
   15840:	ldr	r3, [fp, #-16]
   15844:	cmp	r3, #31
   15848:	bhi	15898 <__assert_fail@plt+0x4658>
   1584c:	b	1586c <__assert_fail@plt+0x462c>
   15850:	ldr	r2, [fp, #-8]
   15854:	ldr	r3, [fp, #-16]
   15858:	lsl	r3, r2, r3
   1585c:	str	r3, [fp, #-8]
   15860:	ldr	r3, [fp, #-12]
   15864:	add	r3, r3, #8
   15868:	str	r3, [fp, #-12]
   1586c:	ldr	r3, [fp, #-8]
   15870:	and	r3, r3, #-16777216	; 0xff000000
   15874:	cmp	r3, #0
   15878:	beq	15850 <__assert_fail@plt+0x4610>
   1587c:	b	15898 <__assert_fail@plt+0x4658>
   15880:	ldr	r3, [fp, #-8]
   15884:	lsl	r3, r3, #1
   15888:	str	r3, [fp, #-8]
   1588c:	ldr	r3, [fp, #-12]
   15890:	add	r3, r3, #1
   15894:	str	r3, [fp, #-12]
   15898:	ldr	r3, [fp, #-8]
   1589c:	cmp	r3, #0
   158a0:	bge	15880 <__assert_fail@plt+0x4640>
   158a4:	ldr	r3, [fp, #-12]
   158a8:	str	r3, [fp, #-20]	; 0xffffffec
   158ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   158b4:	str	r2, [r3]
   158b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   158bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   158c0:	lsl	r2, r2, r3
   158c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158c8:	str	r2, [r3, #4]
   158cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158d0:	ldr	r3, [r3, #4]
   158d4:	mov	r1, #0
   158d8:	mov	r0, r3
   158dc:	bl	15418 <__assert_fail@plt+0x41d8>
   158e0:	mov	r2, r0
   158e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158e8:	str	r2, [r3, #12]
   158ec:	nop	{0}
   158f0:	sub	sp, fp, #4
   158f4:	ldr	fp, [sp]
   158f8:	add	sp, sp, #4
   158fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15900:	str	fp, [sp, #-8]!
   15904:	str	lr, [sp, #4]
   15908:	add	fp, sp, #4
   1590c:	sub	sp, sp, #32
   15910:	str	r0, [fp, #-24]	; 0xffffffe8
   15914:	str	r1, [fp, #-28]	; 0xffffffe4
   15918:	str	r2, [fp, #-32]	; 0xffffffe0
   1591c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15920:	cmp	r3, #0
   15924:	bne	15948 <__assert_fail@plt+0x4708>
   15928:	movw	r3, #6444	; 0x192c
   1592c:	movt	r3, #4
   15930:	movw	r2, #915	; 0x393
   15934:	movw	r1, #4700	; 0x125c
   15938:	movt	r1, #4
   1593c:	movw	r0, #5044	; 0x13b4
   15940:	movt	r0, #4
   15944:	bl	11240 <__assert_fail@plt>
   15948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1594c:	str	r3, [fp, #-8]
   15950:	mov	r3, #0
   15954:	str	r3, [fp, #-12]
   15958:	mov	r3, #8
   1595c:	str	r3, [fp, #-16]
   15960:	ldr	r3, [fp, #-16]
   15964:	cmp	r3, #31
   15968:	bhi	159b8 <__assert_fail@plt+0x4778>
   1596c:	b	1598c <__assert_fail@plt+0x474c>
   15970:	ldr	r2, [fp, #-8]
   15974:	ldr	r3, [fp, #-16]
   15978:	lsl	r3, r2, r3
   1597c:	str	r3, [fp, #-8]
   15980:	ldr	r3, [fp, #-12]
   15984:	add	r3, r3, #8
   15988:	str	r3, [fp, #-12]
   1598c:	ldr	r3, [fp, #-8]
   15990:	and	r3, r3, #-16777216	; 0xff000000
   15994:	cmp	r3, #0
   15998:	beq	15970 <__assert_fail@plt+0x4730>
   1599c:	b	159b8 <__assert_fail@plt+0x4778>
   159a0:	ldr	r3, [fp, #-8]
   159a4:	lsl	r3, r3, #1
   159a8:	str	r3, [fp, #-8]
   159ac:	ldr	r3, [fp, #-12]
   159b0:	add	r3, r3, #1
   159b4:	str	r3, [fp, #-12]
   159b8:	ldr	r3, [fp, #-8]
   159bc:	cmp	r3, #0
   159c0:	bge	159a0 <__assert_fail@plt+0x4760>
   159c4:	ldr	r3, [fp, #-12]
   159c8:	str	r3, [fp, #-20]	; 0xffffffec
   159cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   159d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   159d4:	str	r2, [r3]
   159d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159dc:	cmp	r3, #0
   159e0:	beq	15a18 <__assert_fail@plt+0x47d8>
   159e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   159e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159ec:	lsl	r2, r2, r3
   159f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   159f4:	rsb	r3, r3, #32
   159f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   159fc:	lsr	r3, r1, r3
   15a00:	orr	r3, r2, r3
   15a04:	str	r3, [fp, #-28]	; 0xffffffe4
   15a08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a10:	lsl	r3, r2, r3
   15a14:	str	r3, [fp, #-32]	; 0xffffffe0
   15a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15a20:	str	r2, [r3, #4]
   15a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15a2c:	str	r2, [r3, #8]
   15a30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15a38:	bl	15418 <__assert_fail@plt+0x41d8>
   15a3c:	mov	r2, r0
   15a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a44:	str	r2, [r3, #12]
   15a48:	nop	{0}
   15a4c:	sub	sp, fp, #4
   15a50:	ldr	fp, [sp]
   15a54:	add	sp, sp, #4
   15a58:	pop	{pc}		; (ldr pc, [sp], #4)
   15a5c:	str	fp, [sp, #-8]!
   15a60:	str	lr, [sp, #4]
   15a64:	add	fp, sp, #4
   15a68:	sub	sp, sp, #40	; 0x28
   15a6c:	str	r0, [fp, #-32]	; 0xffffffe0
   15a70:	str	r1, [fp, #-36]	; 0xffffffdc
   15a74:	str	r2, [fp, #-40]	; 0xffffffd8
   15a78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15a7c:	cmp	r3, #0
   15a80:	bgt	15aa4 <__assert_fail@plt+0x4864>
   15a84:	movw	r3, #6464	; 0x1940
   15a88:	movt	r3, #4
   15a8c:	mov	r2, #932	; 0x3a4
   15a90:	movw	r1, #4700	; 0x125c
   15a94:	movt	r1, #4
   15a98:	movw	r0, #5052	; 0x13bc
   15a9c:	movt	r0, #4
   15aa0:	bl	11240 <__assert_fail@plt>
   15aa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15aa8:	cmp	r3, #1
   15aac:	bne	15ac8 <__assert_fail@plt+0x4888>
   15ab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ab4:	ldr	r3, [r3]
   15ab8:	mov	r1, r3
   15abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ac0:	bl	157e4 <__assert_fail@plt+0x45a4>
   15ac4:	b	15c84 <__assert_fail@plt+0x4a44>
   15ac8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15acc:	cmp	r3, #2
   15ad0:	bne	15af8 <__assert_fail@plt+0x48b8>
   15ad4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ad8:	add	r3, r3, #4
   15adc:	ldr	r1, [r3]
   15ae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ae4:	ldr	r3, [r3]
   15ae8:	mov	r2, r3
   15aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15af0:	bl	15900 <__assert_fail@plt+0x46c0>
   15af4:	b	15c84 <__assert_fail@plt+0x4a44>
   15af8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15afc:	sub	r3, r3, #-1073741823	; 0xc0000001
   15b00:	lsl	r3, r3, #2
   15b04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15b08:	add	r3, r2, r3
   15b0c:	ldr	r3, [r3]
   15b10:	str	r3, [fp, #-8]
   15b14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15b18:	sub	r3, r3, #-1073741822	; 0xc0000002
   15b1c:	lsl	r3, r3, #2
   15b20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15b24:	add	r3, r2, r3
   15b28:	ldr	r3, [r3]
   15b2c:	str	r3, [fp, #-12]
   15b30:	ldr	r3, [fp, #-8]
   15b34:	cmp	r3, #0
   15b38:	bne	15b5c <__assert_fail@plt+0x491c>
   15b3c:	movw	r3, #6464	; 0x1940
   15b40:	movt	r3, #4
   15b44:	movw	r2, #945	; 0x3b1
   15b48:	movw	r1, #4700	; 0x125c
   15b4c:	movt	r1, #4
   15b50:	movw	r0, #5044	; 0x13b4
   15b54:	movt	r0, #4
   15b58:	bl	11240 <__assert_fail@plt>
   15b5c:	ldr	r3, [fp, #-8]
   15b60:	str	r3, [fp, #-16]
   15b64:	mov	r3, #0
   15b68:	str	r3, [fp, #-20]	; 0xffffffec
   15b6c:	mov	r3, #8
   15b70:	str	r3, [fp, #-24]	; 0xffffffe8
   15b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b78:	cmp	r3, #31
   15b7c:	bhi	15bcc <__assert_fail@plt+0x498c>
   15b80:	b	15ba0 <__assert_fail@plt+0x4960>
   15b84:	ldr	r2, [fp, #-16]
   15b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b8c:	lsl	r3, r2, r3
   15b90:	str	r3, [fp, #-16]
   15b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b98:	add	r3, r3, #8
   15b9c:	str	r3, [fp, #-20]	; 0xffffffec
   15ba0:	ldr	r3, [fp, #-16]
   15ba4:	and	r3, r3, #-16777216	; 0xff000000
   15ba8:	cmp	r3, #0
   15bac:	beq	15b84 <__assert_fail@plt+0x4944>
   15bb0:	b	15bcc <__assert_fail@plt+0x498c>
   15bb4:	ldr	r3, [fp, #-16]
   15bb8:	lsl	r3, r3, #1
   15bbc:	str	r3, [fp, #-16]
   15bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bc4:	add	r3, r3, #1
   15bc8:	str	r3, [fp, #-20]	; 0xffffffec
   15bcc:	ldr	r3, [fp, #-16]
   15bd0:	cmp	r3, #0
   15bd4:	bge	15bb4 <__assert_fail@plt+0x4974>
   15bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bdc:	str	r3, [fp, #-28]	; 0xffffffe4
   15be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15be4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15be8:	str	r2, [r3]
   15bec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bf0:	cmp	r3, #0
   15bf4:	beq	15c54 <__assert_fail@plt+0x4a14>
   15bf8:	ldr	r2, [fp, #-8]
   15bfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c00:	lsl	r2, r2, r3
   15c04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c08:	rsb	r3, r3, #32
   15c0c:	ldr	r1, [fp, #-12]
   15c10:	lsr	r3, r1, r3
   15c14:	orr	r3, r2, r3
   15c18:	str	r3, [fp, #-8]
   15c1c:	ldr	r2, [fp, #-12]
   15c20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c24:	lsl	r2, r2, r3
   15c28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15c2c:	sub	r3, r3, #-1073741821	; 0xc0000003
   15c30:	lsl	r3, r3, #2
   15c34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15c38:	add	r3, r1, r3
   15c3c:	ldr	r1, [r3]
   15c40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c44:	rsb	r3, r3, #32
   15c48:	lsr	r3, r1, r3
   15c4c:	orr	r3, r2, r3
   15c50:	str	r3, [fp, #-12]
   15c54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c58:	ldr	r2, [fp, #-8]
   15c5c:	str	r2, [r3, #4]
   15c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c64:	ldr	r2, [fp, #-12]
   15c68:	str	r2, [r3, #8]
   15c6c:	ldr	r1, [fp, #-12]
   15c70:	ldr	r0, [fp, #-8]
   15c74:	bl	15418 <__assert_fail@plt+0x41d8>
   15c78:	mov	r2, r0
   15c7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c80:	str	r2, [r3, #12]
   15c84:	nop	{0}
   15c88:	sub	sp, fp, #4
   15c8c:	ldr	fp, [sp]
   15c90:	add	sp, sp, #4
   15c94:	pop	{pc}		; (ldr pc, [sp], #4)
   15c98:	str	fp, [sp, #-8]!
   15c9c:	str	lr, [sp, #4]
   15ca0:	add	fp, sp, #4
   15ca4:	sub	sp, sp, #104	; 0x68
   15ca8:	str	r0, [fp, #-96]	; 0xffffffa0
   15cac:	str	r1, [fp, #-100]	; 0xffffff9c
   15cb0:	str	r2, [fp, #-104]	; 0xffffff98
   15cb4:	str	r3, [fp, #-108]	; 0xffffff94
   15cb8:	mov	r3, #0
   15cbc:	str	r3, [fp, #-12]
   15cc0:	mov	r3, #0
   15cc4:	str	r3, [fp, #-16]
   15cc8:	ldr	r3, [fp, #-108]	; 0xffffff94
   15ccc:	ldr	r3, [r3]
   15cd0:	cmp	r3, #0
   15cd4:	beq	15d28 <__assert_fail@plt+0x4ae8>
   15cd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15cdc:	str	r3, [fp, #-12]
   15ce0:	ldr	r3, [fp, #-12]
   15ce4:	cmp	r3, #0
   15ce8:	bne	15d00 <__assert_fail@plt+0x4ac0>
   15cec:	ldr	r3, [fp, #-104]	; 0xffffff98
   15cf0:	str	r3, [fp, #-16]
   15cf4:	ldr	r0, [fp, #-16]
   15cf8:	bl	13ab0 <__assert_fail@plt+0x2870>
   15cfc:	str	r0, [fp, #-12]
   15d00:	ldr	r3, [fp, #-108]	; 0xffffff94
   15d04:	ldr	r3, [r3]
   15d08:	ldr	r2, [fp, #-104]	; 0xffffff98
   15d0c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15d10:	ldr	r0, [fp, #-12]
   15d14:	bl	14cf8 <__assert_fail@plt+0x3ab8>
   15d18:	str	r0, [fp, #-8]
   15d1c:	ldr	r3, [fp, #-12]
   15d20:	str	r3, [fp, #-100]	; 0xffffff9c
   15d24:	b	15d30 <__assert_fail@plt+0x4af0>
   15d28:	mov	r3, #0
   15d2c:	str	r3, [fp, #-8]
   15d30:	ldr	r3, [fp, #-108]	; 0xffffff94
   15d34:	ldr	r3, [r3, #4]
   15d38:	str	r3, [fp, #-32]	; 0xffffffe0
   15d3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15d40:	ldr	r3, [r3, #12]
   15d44:	str	r3, [fp, #-36]	; 0xffffffdc
   15d48:	b	15f68 <__assert_fail@plt+0x4d28>
   15d4c:	mov	r3, #32
   15d50:	str	r3, [fp, #-40]	; 0xffffffd8
   15d54:	ldr	r3, [fp, #-8]
   15d58:	str	r3, [fp, #-44]	; 0xffffffd4
   15d5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d60:	str	r3, [fp, #-48]	; 0xffffffd0
   15d64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d68:	uxth	r3, r3
   15d6c:	str	r3, [fp, #-52]	; 0xffffffcc
   15d70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d74:	lsr	r3, r3, #16
   15d78:	str	r3, [fp, #-56]	; 0xffffffc8
   15d7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15d80:	uxth	r3, r3
   15d84:	str	r3, [fp, #-60]	; 0xffffffc4
   15d88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15d8c:	lsr	r3, r3, #16
   15d90:	str	r3, [fp, #-64]	; 0xffffffc0
   15d94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15d98:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15d9c:	mul	r3, r2, r3
   15da0:	str	r3, [fp, #-68]	; 0xffffffbc
   15da4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15da8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15dac:	mul	r3, r2, r3
   15db0:	str	r3, [fp, #-72]	; 0xffffffb8
   15db4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15db8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15dbc:	mul	r3, r2, r3
   15dc0:	str	r3, [fp, #-76]	; 0xffffffb4
   15dc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15dc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15dcc:	mul	r3, r2, r3
   15dd0:	str	r3, [fp, #-28]	; 0xffffffe4
   15dd4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15dd8:	lsr	r3, r3, #16
   15ddc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15de0:	add	r3, r2, r3
   15de4:	str	r3, [fp, #-72]	; 0xffffffb8
   15de8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15dec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15df0:	add	r3, r2, r3
   15df4:	str	r3, [fp, #-72]	; 0xffffffb8
   15df8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15dfc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15e00:	cmp	r2, r3
   15e04:	bcs	15e14 <__assert_fail@plt+0x4bd4>
   15e08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e0c:	add	r3, r3, #65536	; 0x10000
   15e10:	str	r3, [fp, #-28]	; 0xffffffe4
   15e14:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15e18:	lsr	r3, r3, #16
   15e1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15e20:	add	r3, r2, r3
   15e24:	str	r3, [fp, #-20]	; 0xffffffec
   15e28:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15e2c:	lsl	r2, r3, #16
   15e30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15e34:	uxth	r3, r3
   15e38:	add	r3, r2, r3
   15e3c:	str	r3, [fp, #-80]	; 0xffffffb0
   15e40:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e44:	lsl	r3, r3, #2
   15e48:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15e4c:	add	r3, r2, r3
   15e50:	ldr	r3, [r3]
   15e54:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15e58:	add	r3, r2, r3
   15e5c:	str	r3, [fp, #-84]	; 0xffffffac
   15e60:	ldr	r2, [fp, #-8]
   15e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e68:	add	r3, r2, r3
   15e6c:	ldr	r1, [fp, #-84]	; 0xffffffac
   15e70:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15e74:	cmp	r1, r2
   15e78:	movcc	r2, #1
   15e7c:	movcs	r2, #0
   15e80:	uxtb	r2, r2
   15e84:	add	r3, r3, r2
   15e88:	add	r3, r3, #1
   15e8c:	str	r3, [fp, #-20]	; 0xffffffec
   15e90:	ldr	r3, [fp, #-84]	; 0xffffffac
   15e94:	str	r3, [fp, #-80]	; 0xffffffb0
   15e98:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e9c:	lsl	r3, r3, #2
   15ea0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15ea4:	add	r3, r2, r3
   15ea8:	ldr	r2, [r3]
   15eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   15eb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15eb4:	mul	r3, r1, r3
   15eb8:	sub	r3, r2, r3
   15ebc:	str	r3, [fp, #-24]	; 0xffffffe8
   15ec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ec4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15ec8:	cmp	r2, r3
   15ecc:	movhi	r3, #1
   15ed0:	movls	r3, #0
   15ed4:	uxtb	r3, r3
   15ed8:	rsb	r3, r3, #0
   15edc:	str	r3, [fp, #-88]	; 0xffffffa8
   15ee0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ee4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15ee8:	add	r3, r2, r3
   15eec:	str	r3, [fp, #-20]	; 0xffffffec
   15ef0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15ef4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ef8:	and	r3, r3, r2
   15efc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f00:	add	r3, r2, r3
   15f04:	str	r3, [fp, #-24]	; 0xffffffe8
   15f08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f10:	cmp	r2, r3
   15f14:	bcc	15f34 <__assert_fail@plt+0x4cf4>
   15f18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f20:	sub	r3, r2, r3
   15f24:	str	r3, [fp, #-24]	; 0xffffffe8
   15f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f2c:	add	r3, r3, #1
   15f30:	str	r3, [fp, #-20]	; 0xffffffec
   15f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f38:	str	r3, [fp, #-8]
   15f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f40:	str	r3, [fp, #-92]	; 0xffffffa4
   15f44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f48:	cmp	r3, #0
   15f4c:	beq	15f68 <__assert_fail@plt+0x4d28>
   15f50:	ldr	r3, [fp, #-104]	; 0xffffff98
   15f54:	lsl	r3, r3, #2
   15f58:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15f5c:	add	r3, r2, r3
   15f60:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15f64:	str	r2, [r3]
   15f68:	ldr	r3, [fp, #-104]	; 0xffffff98
   15f6c:	sub	r3, r3, #1
   15f70:	str	r3, [fp, #-104]	; 0xffffff98
   15f74:	ldr	r3, [fp, #-104]	; 0xffffff98
   15f78:	cmp	r3, #0
   15f7c:	bge	15d4c <__assert_fail@plt+0x4b0c>
   15f80:	ldr	r3, [fp, #-16]
   15f84:	cmp	r3, #0
   15f88:	beq	15f98 <__assert_fail@plt+0x4d58>
   15f8c:	ldr	r1, [fp, #-16]
   15f90:	ldr	r0, [fp, #-12]
   15f94:	bl	13b7c <__assert_fail@plt+0x293c>
   15f98:	ldr	r3, [fp, #-108]	; 0xffffff94
   15f9c:	ldr	r3, [r3]
   15fa0:	ldr	r2, [fp, #-8]
   15fa4:	lsr	r3, r2, r3
   15fa8:	mov	r0, r3
   15fac:	sub	sp, fp, #4
   15fb0:	ldr	fp, [sp]
   15fb4:	add	sp, sp, #4
   15fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   15fbc:	str	fp, [sp, #-8]!
   15fc0:	str	lr, [sp, #4]
   15fc4:	add	fp, sp, #4
   15fc8:	sub	sp, sp, #176	; 0xb0
   15fcc:	str	r0, [fp, #-168]	; 0xffffff58
   15fd0:	str	r1, [fp, #-172]	; 0xffffff54
   15fd4:	str	r2, [fp, #-176]	; 0xffffff50
   15fd8:	str	r3, [fp, #-180]	; 0xffffff4c
   15fdc:	ldr	r3, [fp, #-176]	; 0xffffff50
   15fe0:	cmp	r3, #1
   15fe4:	bgt	16008 <__assert_fail@plt+0x4dc8>
   15fe8:	movw	r3, #6484	; 0x1954
   15fec:	movt	r3, #4
   15ff0:	movw	r2, #1009	; 0x3f1
   15ff4:	movw	r1, #4700	; 0x125c
   15ff8:	movt	r1, #4
   15ffc:	movw	r0, #5060	; 0x13c4
   16000:	movt	r0, #4
   16004:	bl	11240 <__assert_fail@plt>
   16008:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1600c:	ldr	r3, [r3]
   16010:	str	r3, [fp, #-32]	; 0xffffffe0
   16014:	ldr	r3, [fp, #-180]	; 0xffffff4c
   16018:	ldr	r3, [r3, #4]
   1601c:	str	r3, [fp, #-36]	; 0xffffffdc
   16020:	ldr	r3, [fp, #-180]	; 0xffffff4c
   16024:	ldr	r3, [r3, #8]
   16028:	str	r3, [fp, #-40]	; 0xffffffd8
   1602c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   16030:	ldr	r3, [r3, #12]
   16034:	str	r3, [fp, #-44]	; 0xffffffd4
   16038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1603c:	cmp	r3, #0
   16040:	beq	16060 <__assert_fail@plt+0x4e20>
   16044:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16048:	ldr	r2, [fp, #-176]	; 0xffffff50
   1604c:	ldr	r1, [fp, #-172]	; 0xffffff54
   16050:	ldr	r0, [fp, #-172]	; 0xffffff54
   16054:	bl	14cf8 <__assert_fail@plt+0x3ab8>
   16058:	str	r0, [fp, #-12]
   1605c:	b	16068 <__assert_fail@plt+0x4e28>
   16060:	mov	r3, #0
   16064:	str	r3, [fp, #-12]
   16068:	ldr	r3, [fp, #-176]	; 0xffffff50
   1606c:	sub	r3, r3, #-1073741823	; 0xc0000001
   16070:	lsl	r3, r3, #2
   16074:	ldr	r2, [fp, #-172]	; 0xffffff54
   16078:	add	r3, r2, r3
   1607c:	ldr	r3, [r3]
   16080:	str	r3, [fp, #-16]
   16084:	ldr	r3, [fp, #-176]	; 0xffffff50
   16088:	sub	r3, r3, #2
   1608c:	str	r3, [fp, #-8]
   16090:	ldr	r3, [fp, #-8]
   16094:	lsl	r3, r3, #2
   16098:	ldr	r2, [fp, #-172]	; 0xffffff54
   1609c:	add	r3, r2, r3
   160a0:	ldr	r3, [r3]
   160a4:	str	r3, [fp, #-48]	; 0xffffffd0
   160a8:	mov	r3, #32
   160ac:	str	r3, [fp, #-52]	; 0xffffffcc
   160b0:	ldr	r3, [fp, #-12]
   160b4:	str	r3, [fp, #-56]	; 0xffffffc8
   160b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   160bc:	str	r3, [fp, #-60]	; 0xffffffc4
   160c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   160c4:	uxth	r3, r3
   160c8:	str	r3, [fp, #-64]	; 0xffffffc0
   160cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   160d0:	lsr	r3, r3, #16
   160d4:	str	r3, [fp, #-68]	; 0xffffffbc
   160d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   160dc:	uxth	r3, r3
   160e0:	str	r3, [fp, #-72]	; 0xffffffb8
   160e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   160e8:	lsr	r3, r3, #16
   160ec:	str	r3, [fp, #-76]	; 0xffffffb4
   160f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   160f8:	mul	r3, r2, r3
   160fc:	str	r3, [fp, #-80]	; 0xffffffb0
   16100:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16104:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16108:	mul	r3, r2, r3
   1610c:	str	r3, [fp, #-84]	; 0xffffffac
   16110:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16114:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16118:	mul	r3, r2, r3
   1611c:	str	r3, [fp, #-88]	; 0xffffffa8
   16120:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16124:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16128:	mul	r3, r2, r3
   1612c:	str	r3, [fp, #-24]	; 0xffffffe8
   16130:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16134:	lsr	r3, r3, #16
   16138:	ldr	r2, [fp, #-84]	; 0xffffffac
   1613c:	add	r3, r2, r3
   16140:	str	r3, [fp, #-84]	; 0xffffffac
   16144:	ldr	r2, [fp, #-84]	; 0xffffffac
   16148:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1614c:	add	r3, r2, r3
   16150:	str	r3, [fp, #-84]	; 0xffffffac
   16154:	ldr	r2, [fp, #-84]	; 0xffffffac
   16158:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1615c:	cmp	r2, r3
   16160:	bcs	16170 <__assert_fail@plt+0x4f30>
   16164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16168:	add	r3, r3, #65536	; 0x10000
   1616c:	str	r3, [fp, #-24]	; 0xffffffe8
   16170:	ldr	r3, [fp, #-84]	; 0xffffffac
   16174:	lsr	r3, r3, #16
   16178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1617c:	add	r3, r2, r3
   16180:	str	r3, [fp, #-20]	; 0xffffffec
   16184:	ldr	r3, [fp, #-84]	; 0xffffffac
   16188:	lsl	r2, r3, #16
   1618c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16190:	uxth	r3, r3
   16194:	add	r3, r2, r3
   16198:	str	r3, [fp, #-92]	; 0xffffffa4
   1619c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   161a0:	ldr	r3, [fp, #-16]
   161a4:	add	r3, r2, r3
   161a8:	str	r3, [fp, #-96]	; 0xffffffa0
   161ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   161b0:	ldr	r3, [fp, #-12]
   161b4:	add	r3, r2, r3
   161b8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   161bc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   161c0:	cmp	r1, r2
   161c4:	movcc	r2, #1
   161c8:	movcs	r2, #0
   161cc:	uxtb	r2, r2
   161d0:	add	r3, r3, r2
   161d4:	str	r3, [fp, #-20]	; 0xffffffec
   161d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161dc:	str	r3, [fp, #-92]	; 0xffffffa4
   161e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   161e8:	mul	r3, r2, r3
   161ec:	ldr	r2, [fp, #-16]
   161f0:	sub	r3, r2, r3
   161f4:	str	r3, [fp, #-12]
   161f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   161fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16200:	sub	r3, r2, r3
   16204:	str	r3, [fp, #-100]	; 0xffffff9c
   16208:	ldr	r2, [fp, #-12]
   1620c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16210:	sub	r3, r2, r3
   16214:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16218:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1621c:	cmp	r1, r2
   16220:	movcc	r2, #1
   16224:	movcs	r2, #0
   16228:	uxtb	r2, r2
   1622c:	sub	r3, r3, r2
   16230:	str	r3, [fp, #-12]
   16234:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16238:	str	r3, [fp, #-16]
   1623c:	mov	r3, #32
   16240:	str	r3, [fp, #-104]	; 0xffffff98
   16244:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16248:	str	r3, [fp, #-108]	; 0xffffff94
   1624c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16250:	str	r3, [fp, #-112]	; 0xffffff90
   16254:	ldr	r3, [fp, #-108]	; 0xffffff94
   16258:	uxth	r3, r3
   1625c:	str	r3, [fp, #-116]	; 0xffffff8c
   16260:	ldr	r3, [fp, #-108]	; 0xffffff94
   16264:	lsr	r3, r3, #16
   16268:	str	r3, [fp, #-120]	; 0xffffff88
   1626c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16270:	uxth	r3, r3
   16274:	str	r3, [fp, #-124]	; 0xffffff84
   16278:	ldr	r3, [fp, #-112]	; 0xffffff90
   1627c:	lsr	r3, r3, #16
   16280:	str	r3, [fp, #-128]	; 0xffffff80
   16284:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16288:	ldr	r2, [fp, #-124]	; 0xffffff84
   1628c:	mul	r3, r2, r3
   16290:	str	r3, [fp, #-132]	; 0xffffff7c
   16294:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16298:	ldr	r2, [fp, #-128]	; 0xffffff80
   1629c:	mul	r3, r2, r3
   162a0:	str	r3, [fp, #-136]	; 0xffffff78
   162a4:	ldr	r3, [fp, #-120]	; 0xffffff88
   162a8:	ldr	r2, [fp, #-124]	; 0xffffff84
   162ac:	mul	r3, r2, r3
   162b0:	str	r3, [fp, #-140]	; 0xffffff74
   162b4:	ldr	r3, [fp, #-120]	; 0xffffff88
   162b8:	ldr	r2, [fp, #-128]	; 0xffffff80
   162bc:	mul	r3, r2, r3
   162c0:	str	r3, [fp, #-28]	; 0xffffffe4
   162c4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   162c8:	lsr	r3, r3, #16
   162cc:	ldr	r2, [fp, #-136]	; 0xffffff78
   162d0:	add	r3, r2, r3
   162d4:	str	r3, [fp, #-136]	; 0xffffff78
   162d8:	ldr	r2, [fp, #-136]	; 0xffffff78
   162dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   162e0:	add	r3, r2, r3
   162e4:	str	r3, [fp, #-136]	; 0xffffff78
   162e8:	ldr	r2, [fp, #-136]	; 0xffffff78
   162ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   162f0:	cmp	r2, r3
   162f4:	bcs	16304 <__assert_fail@plt+0x50c4>
   162f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   162fc:	add	r3, r3, #65536	; 0x10000
   16300:	str	r3, [fp, #-28]	; 0xffffffe4
   16304:	ldr	r3, [fp, #-136]	; 0xffffff78
   16308:	lsr	r3, r3, #16
   1630c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16310:	add	r3, r2, r3
   16314:	str	r3, [fp, #-144]	; 0xffffff70
   16318:	ldr	r3, [fp, #-136]	; 0xffffff78
   1631c:	lsl	r2, r3, #16
   16320:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16324:	uxth	r3, r3
   16328:	add	r3, r2, r3
   1632c:	str	r3, [fp, #-148]	; 0xffffff6c
   16330:	ldr	r2, [fp, #-16]
   16334:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16338:	sub	r3, r2, r3
   1633c:	str	r3, [fp, #-152]	; 0xffffff68
   16340:	ldr	r2, [fp, #-12]
   16344:	ldr	r3, [fp, #-144]	; 0xffffff70
   16348:	sub	r3, r2, r3
   1634c:	ldr	r1, [fp, #-16]
   16350:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16354:	cmp	r1, r2
   16358:	movcc	r2, #1
   1635c:	movcs	r2, #0
   16360:	uxtb	r2, r2
   16364:	sub	r3, r3, r2
   16368:	str	r3, [fp, #-12]
   1636c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16370:	str	r3, [fp, #-16]
   16374:	ldr	r3, [fp, #-20]	; 0xffffffec
   16378:	add	r3, r3, #1
   1637c:	str	r3, [fp, #-20]	; 0xffffffec
   16380:	ldr	r2, [fp, #-12]
   16384:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16388:	cmp	r2, r3
   1638c:	movcs	r3, #1
   16390:	movcc	r3, #0
   16394:	uxtb	r3, r3
   16398:	rsb	r3, r3, #0
   1639c:	str	r3, [fp, #-156]	; 0xffffff64
   163a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   163a4:	ldr	r3, [fp, #-156]	; 0xffffff64
   163a8:	add	r3, r2, r3
   163ac:	str	r3, [fp, #-20]	; 0xffffffec
   163b0:	ldr	r2, [fp, #-156]	; 0xffffff64
   163b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   163b8:	and	r3, r3, r2
   163bc:	ldr	r2, [fp, #-16]
   163c0:	add	r3, r2, r3
   163c4:	str	r3, [fp, #-160]	; 0xffffff60
   163c8:	ldr	r2, [fp, #-156]	; 0xffffff64
   163cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   163d0:	and	r2, r2, r3
   163d4:	ldr	r3, [fp, #-12]
   163d8:	add	r3, r2, r3
   163dc:	ldr	r1, [fp, #-160]	; 0xffffff60
   163e0:	ldr	r2, [fp, #-16]
   163e4:	cmp	r1, r2
   163e8:	movcc	r2, #1
   163ec:	movcs	r2, #0
   163f0:	uxtb	r2, r2
   163f4:	add	r3, r3, r2
   163f8:	str	r3, [fp, #-12]
   163fc:	ldr	r3, [fp, #-160]	; 0xffffff60
   16400:	str	r3, [fp, #-16]
   16404:	ldr	r2, [fp, #-12]
   16408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1640c:	cmp	r2, r3
   16410:	bcc	16484 <__assert_fail@plt+0x5244>
   16414:	ldr	r2, [fp, #-12]
   16418:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1641c:	cmp	r2, r3
   16420:	bhi	16434 <__assert_fail@plt+0x51f4>
   16424:	ldr	r2, [fp, #-16]
   16428:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1642c:	cmp	r2, r3
   16430:	bcc	16484 <__assert_fail@plt+0x5244>
   16434:	ldr	r3, [fp, #-20]	; 0xffffffec
   16438:	add	r3, r3, #1
   1643c:	str	r3, [fp, #-20]	; 0xffffffec
   16440:	ldr	r2, [fp, #-16]
   16444:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16448:	sub	r3, r2, r3
   1644c:	str	r3, [fp, #-164]	; 0xffffff5c
   16450:	ldr	r2, [fp, #-12]
   16454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16458:	sub	r3, r2, r3
   1645c:	ldr	r1, [fp, #-16]
   16460:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16464:	cmp	r1, r2
   16468:	movcc	r2, #1
   1646c:	movcs	r2, #0
   16470:	uxtb	r2, r2
   16474:	sub	r3, r3, r2
   16478:	str	r3, [fp, #-12]
   1647c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16480:	str	r3, [fp, #-16]
   16484:	ldr	r3, [fp, #-168]	; 0xffffff58
   16488:	cmp	r3, #0
   1648c:	beq	164a8 <__assert_fail@plt+0x5268>
   16490:	ldr	r3, [fp, #-8]
   16494:	lsl	r3, r3, #2
   16498:	ldr	r2, [fp, #-168]	; 0xffffff58
   1649c:	add	r3, r2, r3
   164a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   164a4:	str	r2, [r3]
   164a8:	ldr	r3, [fp, #-8]
   164ac:	sub	r3, r3, #1
   164b0:	str	r3, [fp, #-8]
   164b4:	ldr	r3, [fp, #-8]
   164b8:	cmp	r3, #0
   164bc:	bge	16090 <__assert_fail@plt+0x4e50>
   164c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   164c4:	cmp	r3, #0
   164c8:	beq	16540 <__assert_fail@plt+0x5300>
   164cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   164d0:	rsb	r3, r3, #32
   164d4:	mvn	r2, #0
   164d8:	lsr	r2, r2, r3
   164dc:	ldr	r3, [fp, #-16]
   164e0:	and	r3, r3, r2
   164e4:	cmp	r3, #0
   164e8:	beq	1650c <__assert_fail@plt+0x52cc>
   164ec:	movw	r3, #6484	; 0x1954
   164f0:	movt	r3, #4
   164f4:	movw	r2, #1036	; 0x40c
   164f8:	movw	r1, #4700	; 0x125c
   164fc:	movt	r1, #4
   16500:	movw	r0, #5068	; 0x13cc
   16504:	movt	r0, #4
   16508:	bl	11240 <__assert_fail@plt>
   1650c:	ldr	r2, [fp, #-16]
   16510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16514:	lsr	r2, r2, r3
   16518:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1651c:	rsb	r3, r3, #32
   16520:	ldr	r1, [fp, #-12]
   16524:	lsl	r3, r1, r3
   16528:	orr	r3, r2, r3
   1652c:	str	r3, [fp, #-16]
   16530:	ldr	r2, [fp, #-12]
   16534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16538:	lsr	r3, r2, r3
   1653c:	str	r3, [fp, #-12]
   16540:	ldr	r3, [fp, #-172]	; 0xffffff54
   16544:	add	r3, r3, #4
   16548:	ldr	r2, [fp, #-12]
   1654c:	str	r2, [r3]
   16550:	ldr	r3, [fp, #-172]	; 0xffffff54
   16554:	ldr	r2, [fp, #-16]
   16558:	str	r2, [r3]
   1655c:	nop	{0}
   16560:	sub	sp, fp, #4
   16564:	ldr	fp, [sp]
   16568:	add	sp, sp, #4
   1656c:	pop	{pc}		; (ldr pc, [sp], #4)
   16570:	str	fp, [sp, #-8]!
   16574:	str	lr, [sp, #4]
   16578:	add	fp, sp, #4
   1657c:	sub	sp, sp, #168	; 0xa8
   16580:	str	r0, [fp, #-160]	; 0xffffff60
   16584:	str	r1, [fp, #-164]	; 0xffffff5c
   16588:	str	r2, [fp, #-168]	; 0xffffff58
   1658c:	str	r3, [fp, #-172]	; 0xffffff54
   16590:	ldr	r3, [fp, #8]
   16594:	cmp	r3, #2
   16598:	bgt	165bc <__assert_fail@plt+0x537c>
   1659c:	movw	r3, #6504	; 0x1968
   165a0:	movt	r3, #4
   165a4:	movw	r2, #1057	; 0x421
   165a8:	movw	r1, #4700	; 0x125c
   165ac:	movt	r1, #4
   165b0:	movw	r0, #5124	; 0x1404
   165b4:	movt	r0, #4
   165b8:	bl	11240 <__assert_fail@plt>
   165bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   165c0:	ldr	r3, [fp, #8]
   165c4:	cmp	r2, r3
   165c8:	bge	165ec <__assert_fail@plt+0x53ac>
   165cc:	movw	r3, #6504	; 0x1968
   165d0:	movt	r3, #4
   165d4:	movw	r2, #1058	; 0x422
   165d8:	movw	r1, #4700	; 0x125c
   165dc:	movt	r1, #4
   165e0:	movw	r0, #5132	; 0x140c
   165e4:	movt	r0, #4
   165e8:	bl	11240 <__assert_fail@plt>
   165ec:	ldr	r3, [fp, #8]
   165f0:	sub	r3, r3, #-1073741823	; 0xc0000001
   165f4:	lsl	r3, r3, #2
   165f8:	ldr	r2, [fp, #4]
   165fc:	add	r3, r2, r3
   16600:	ldr	r3, [r3]
   16604:	str	r3, [fp, #-28]	; 0xffffffe4
   16608:	ldr	r3, [fp, #8]
   1660c:	sub	r3, r3, #-1073741822	; 0xc0000002
   16610:	lsl	r3, r3, #2
   16614:	ldr	r2, [fp, #4]
   16618:	add	r3, r2, r3
   1661c:	ldr	r3, [r3]
   16620:	str	r3, [fp, #-32]	; 0xffffffe0
   16624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16628:	cmp	r3, #0
   1662c:	blt	16650 <__assert_fail@plt+0x5410>
   16630:	movw	r3, #6504	; 0x1968
   16634:	movt	r3, #4
   16638:	movw	r2, #1063	; 0x427
   1663c:	movw	r1, #4700	; 0x125c
   16640:	movt	r1, #4
   16644:	movw	r0, #5144	; 0x1418
   16648:	movt	r0, #4
   1664c:	bl	11240 <__assert_fail@plt>
   16650:	ldr	r2, [fp, #-168]	; 0xffffff58
   16654:	ldr	r3, [fp, #8]
   16658:	sub	r3, r2, r3
   1665c:	str	r3, [fp, #-8]
   16660:	ldr	r3, [fp, #8]
   16664:	sub	r2, r3, #1
   16668:	ldr	r3, [fp, #-8]
   1666c:	add	r3, r2, r3
   16670:	lsl	r3, r3, #2
   16674:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16678:	add	r3, r2, r3
   1667c:	ldr	r3, [r3]
   16680:	str	r3, [fp, #-16]
   16684:	ldr	r2, [fp, #-172]	; 0xffffff54
   16688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1668c:	cmp	r2, r3
   16690:	bne	166f4 <__assert_fail@plt+0x54b4>
   16694:	ldr	r2, [fp, #-16]
   16698:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1669c:	cmp	r2, r3
   166a0:	bne	166f4 <__assert_fail@plt+0x54b4>
   166a4:	mvn	r3, #0
   166a8:	str	r3, [fp, #-12]
   166ac:	ldr	r3, [fp, #-8]
   166b0:	lsl	r3, r3, #2
   166b4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   166b8:	add	r0, r2, r3
   166bc:	ldr	r3, [fp, #-12]
   166c0:	ldr	r2, [fp, #8]
   166c4:	ldr	r1, [fp, #4]
   166c8:	bl	14838 <__assert_fail@plt+0x35f8>
   166cc:	ldr	r3, [fp, #8]
   166d0:	sub	r2, r3, #1
   166d4:	ldr	r3, [fp, #-8]
   166d8:	add	r3, r2, r3
   166dc:	lsl	r3, r3, #2
   166e0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   166e4:	add	r3, r2, r3
   166e8:	ldr	r3, [r3]
   166ec:	str	r3, [fp, #-172]	; 0xffffff54
   166f0:	b	16c0c <__assert_fail@plt+0x59cc>
   166f4:	mov	r3, #32
   166f8:	str	r3, [fp, #-36]	; 0xffffffdc
   166fc:	ldr	r3, [fp, #-172]	; 0xffffff54
   16700:	str	r3, [fp, #-40]	; 0xffffffd8
   16704:	ldr	r3, [fp, #12]
   16708:	str	r3, [fp, #-44]	; 0xffffffd4
   1670c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16710:	uxth	r3, r3
   16714:	str	r3, [fp, #-48]	; 0xffffffd0
   16718:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1671c:	lsr	r3, r3, #16
   16720:	str	r3, [fp, #-52]	; 0xffffffcc
   16724:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16728:	uxth	r3, r3
   1672c:	str	r3, [fp, #-56]	; 0xffffffc8
   16730:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16734:	lsr	r3, r3, #16
   16738:	str	r3, [fp, #-60]	; 0xffffffc4
   1673c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16740:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16744:	mul	r3, r2, r3
   16748:	str	r3, [fp, #-64]	; 0xffffffc0
   1674c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16750:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16754:	mul	r3, r2, r3
   16758:	str	r3, [fp, #-68]	; 0xffffffbc
   1675c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16760:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16764:	mul	r3, r2, r3
   16768:	str	r3, [fp, #-72]	; 0xffffffb8
   1676c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16770:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16774:	mul	r3, r2, r3
   16778:	str	r3, [fp, #-20]	; 0xffffffec
   1677c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16780:	lsr	r3, r3, #16
   16784:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16788:	add	r3, r2, r3
   1678c:	str	r3, [fp, #-68]	; 0xffffffbc
   16790:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16794:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16798:	add	r3, r2, r3
   1679c:	str	r3, [fp, #-68]	; 0xffffffbc
   167a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   167a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   167a8:	cmp	r2, r3
   167ac:	bcs	167bc <__assert_fail@plt+0x557c>
   167b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   167b4:	add	r3, r3, #65536	; 0x10000
   167b8:	str	r3, [fp, #-20]	; 0xffffffec
   167bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   167c0:	lsr	r3, r3, #16
   167c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   167c8:	add	r3, r2, r3
   167cc:	str	r3, [fp, #-12]
   167d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   167d4:	lsl	r2, r3, #16
   167d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   167dc:	uxth	r3, r3
   167e0:	add	r3, r2, r3
   167e4:	str	r3, [fp, #-76]	; 0xffffffb4
   167e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   167ec:	ldr	r3, [fp, #-16]
   167f0:	add	r3, r2, r3
   167f4:	str	r3, [fp, #-80]	; 0xffffffb0
   167f8:	ldr	r2, [fp, #-12]
   167fc:	ldr	r3, [fp, #-172]	; 0xffffff54
   16800:	add	r3, r2, r3
   16804:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16808:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1680c:	cmp	r1, r2
   16810:	movcc	r2, #1
   16814:	movcs	r2, #0
   16818:	uxtb	r2, r2
   1681c:	add	r3, r3, r2
   16820:	str	r3, [fp, #-12]
   16824:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16828:	str	r3, [fp, #-76]	; 0xffffffb4
   1682c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16830:	ldr	r2, [fp, #-12]
   16834:	mul	r3, r2, r3
   16838:	ldr	r2, [fp, #-16]
   1683c:	sub	r3, r2, r3
   16840:	str	r3, [fp, #-172]	; 0xffffff54
   16844:	ldr	r3, [fp, #8]
   16848:	sub	r2, r3, #2
   1684c:	ldr	r3, [fp, #-8]
   16850:	add	r3, r2, r3
   16854:	lsl	r3, r3, #2
   16858:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1685c:	add	r3, r2, r3
   16860:	ldr	r2, [r3]
   16864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16868:	sub	r3, r2, r3
   1686c:	str	r3, [fp, #-84]	; 0xffffffac
   16870:	ldr	r2, [fp, #-172]	; 0xffffff54
   16874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16878:	sub	r3, r2, r3
   1687c:	ldr	r2, [fp, #8]
   16880:	sub	r1, r2, #2
   16884:	ldr	r2, [fp, #-8]
   16888:	add	r2, r1, r2
   1688c:	lsl	r2, r2, #2
   16890:	ldr	r1, [fp, #-164]	; 0xffffff5c
   16894:	add	r2, r1, r2
   16898:	ldr	r2, [r2]
   1689c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   168a0:	cmp	r1, r2
   168a4:	movhi	r2, #1
   168a8:	movls	r2, #0
   168ac:	uxtb	r2, r2
   168b0:	sub	r3, r3, r2
   168b4:	str	r3, [fp, #-172]	; 0xffffff54
   168b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   168bc:	str	r3, [fp, #-16]
   168c0:	mov	r3, #32
   168c4:	str	r3, [fp, #-88]	; 0xffffffa8
   168c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   168cc:	str	r3, [fp, #-92]	; 0xffffffa4
   168d0:	ldr	r3, [fp, #-12]
   168d4:	str	r3, [fp, #-96]	; 0xffffffa0
   168d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   168dc:	uxth	r3, r3
   168e0:	str	r3, [fp, #-100]	; 0xffffff9c
   168e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   168e8:	lsr	r3, r3, #16
   168ec:	str	r3, [fp, #-104]	; 0xffffff98
   168f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   168f4:	uxth	r3, r3
   168f8:	str	r3, [fp, #-108]	; 0xffffff94
   168fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16900:	lsr	r3, r3, #16
   16904:	str	r3, [fp, #-112]	; 0xffffff90
   16908:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1690c:	ldr	r2, [fp, #-108]	; 0xffffff94
   16910:	mul	r3, r2, r3
   16914:	str	r3, [fp, #-116]	; 0xffffff8c
   16918:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1691c:	ldr	r2, [fp, #-112]	; 0xffffff90
   16920:	mul	r3, r2, r3
   16924:	str	r3, [fp, #-120]	; 0xffffff88
   16928:	ldr	r3, [fp, #-104]	; 0xffffff98
   1692c:	ldr	r2, [fp, #-108]	; 0xffffff94
   16930:	mul	r3, r2, r3
   16934:	str	r3, [fp, #-124]	; 0xffffff84
   16938:	ldr	r3, [fp, #-104]	; 0xffffff98
   1693c:	ldr	r2, [fp, #-112]	; 0xffffff90
   16940:	mul	r3, r2, r3
   16944:	str	r3, [fp, #-24]	; 0xffffffe8
   16948:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1694c:	lsr	r3, r3, #16
   16950:	ldr	r2, [fp, #-120]	; 0xffffff88
   16954:	add	r3, r2, r3
   16958:	str	r3, [fp, #-120]	; 0xffffff88
   1695c:	ldr	r2, [fp, #-120]	; 0xffffff88
   16960:	ldr	r3, [fp, #-124]	; 0xffffff84
   16964:	add	r3, r2, r3
   16968:	str	r3, [fp, #-120]	; 0xffffff88
   1696c:	ldr	r2, [fp, #-120]	; 0xffffff88
   16970:	ldr	r3, [fp, #-124]	; 0xffffff84
   16974:	cmp	r2, r3
   16978:	bcs	16988 <__assert_fail@plt+0x5748>
   1697c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16980:	add	r3, r3, #65536	; 0x10000
   16984:	str	r3, [fp, #-24]	; 0xffffffe8
   16988:	ldr	r3, [fp, #-120]	; 0xffffff88
   1698c:	lsr	r3, r3, #16
   16990:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16994:	add	r3, r2, r3
   16998:	str	r3, [fp, #-128]	; 0xffffff80
   1699c:	ldr	r3, [fp, #-120]	; 0xffffff88
   169a0:	lsl	r2, r3, #16
   169a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   169a8:	uxth	r3, r3
   169ac:	add	r3, r2, r3
   169b0:	str	r3, [fp, #-132]	; 0xffffff7c
   169b4:	ldr	r2, [fp, #-16]
   169b8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   169bc:	sub	r3, r2, r3
   169c0:	str	r3, [fp, #-136]	; 0xffffff78
   169c4:	ldr	r2, [fp, #-172]	; 0xffffff54
   169c8:	ldr	r3, [fp, #-128]	; 0xffffff80
   169cc:	sub	r3, r2, r3
   169d0:	ldr	r1, [fp, #-16]
   169d4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   169d8:	cmp	r1, r2
   169dc:	movcc	r2, #1
   169e0:	movcs	r2, #0
   169e4:	uxtb	r2, r2
   169e8:	sub	r3, r3, r2
   169ec:	str	r3, [fp, #-172]	; 0xffffff54
   169f0:	ldr	r3, [fp, #-136]	; 0xffffff78
   169f4:	str	r3, [fp, #-16]
   169f8:	ldr	r3, [fp, #-12]
   169fc:	add	r3, r3, #1
   16a00:	str	r3, [fp, #-12]
   16a04:	ldr	r2, [fp, #-172]	; 0xffffff54
   16a08:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16a0c:	cmp	r2, r3
   16a10:	movcs	r3, #1
   16a14:	movcc	r3, #0
   16a18:	uxtb	r3, r3
   16a1c:	rsb	r3, r3, #0
   16a20:	str	r3, [fp, #-140]	; 0xffffff74
   16a24:	ldr	r2, [fp, #-12]
   16a28:	ldr	r3, [fp, #-140]	; 0xffffff74
   16a2c:	add	r3, r2, r3
   16a30:	str	r3, [fp, #-12]
   16a34:	ldr	r2, [fp, #-140]	; 0xffffff74
   16a38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16a3c:	and	r3, r3, r2
   16a40:	ldr	r2, [fp, #-16]
   16a44:	add	r3, r2, r3
   16a48:	str	r3, [fp, #-144]	; 0xffffff70
   16a4c:	ldr	r2, [fp, #-140]	; 0xffffff74
   16a50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a54:	and	r2, r2, r3
   16a58:	ldr	r3, [fp, #-172]	; 0xffffff54
   16a5c:	add	r3, r2, r3
   16a60:	ldr	r1, [fp, #-144]	; 0xffffff70
   16a64:	ldr	r2, [fp, #-16]
   16a68:	cmp	r1, r2
   16a6c:	movcc	r2, #1
   16a70:	movcs	r2, #0
   16a74:	uxtb	r2, r2
   16a78:	add	r3, r3, r2
   16a7c:	str	r3, [fp, #-172]	; 0xffffff54
   16a80:	ldr	r3, [fp, #-144]	; 0xffffff70
   16a84:	str	r3, [fp, #-16]
   16a88:	ldr	r2, [fp, #-172]	; 0xffffff54
   16a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a90:	cmp	r2, r3
   16a94:	bcc	16b08 <__assert_fail@plt+0x58c8>
   16a98:	ldr	r2, [fp, #-172]	; 0xffffff54
   16a9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16aa0:	cmp	r2, r3
   16aa4:	bhi	16ab8 <__assert_fail@plt+0x5878>
   16aa8:	ldr	r2, [fp, #-16]
   16aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16ab0:	cmp	r2, r3
   16ab4:	bcc	16b08 <__assert_fail@plt+0x58c8>
   16ab8:	ldr	r3, [fp, #-12]
   16abc:	add	r3, r3, #1
   16ac0:	str	r3, [fp, #-12]
   16ac4:	ldr	r2, [fp, #-16]
   16ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16acc:	sub	r3, r2, r3
   16ad0:	str	r3, [fp, #-148]	; 0xffffff6c
   16ad4:	ldr	r2, [fp, #-172]	; 0xffffff54
   16ad8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16adc:	sub	r3, r2, r3
   16ae0:	ldr	r1, [fp, #-16]
   16ae4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16ae8:	cmp	r1, r2
   16aec:	movcc	r2, #1
   16af0:	movcs	r2, #0
   16af4:	uxtb	r2, r2
   16af8:	sub	r3, r3, r2
   16afc:	str	r3, [fp, #-172]	; 0xffffff54
   16b00:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16b04:	str	r3, [fp, #-16]
   16b08:	ldr	r3, [fp, #-8]
   16b0c:	lsl	r3, r3, #2
   16b10:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16b14:	add	r0, r2, r3
   16b18:	ldr	r3, [fp, #8]
   16b1c:	sub	r2, r3, #2
   16b20:	ldr	r3, [fp, #-12]
   16b24:	ldr	r1, [fp, #4]
   16b28:	bl	14838 <__assert_fail@plt+0x35f8>
   16b2c:	str	r0, [fp, #-152]	; 0xffffff68
   16b30:	ldr	r2, [fp, #-16]
   16b34:	ldr	r3, [fp, #-152]	; 0xffffff68
   16b38:	cmp	r2, r3
   16b3c:	movcc	r3, #1
   16b40:	movcs	r3, #0
   16b44:	uxtb	r3, r3
   16b48:	str	r3, [fp, #-156]	; 0xffffff64
   16b4c:	ldr	r2, [fp, #-16]
   16b50:	ldr	r3, [fp, #-152]	; 0xffffff68
   16b54:	sub	r3, r2, r3
   16b58:	str	r3, [fp, #-16]
   16b5c:	ldr	r2, [fp, #-172]	; 0xffffff54
   16b60:	ldr	r3, [fp, #-156]	; 0xffffff64
   16b64:	cmp	r2, r3
   16b68:	movcc	r3, #1
   16b6c:	movcs	r3, #0
   16b70:	uxtb	r3, r3
   16b74:	str	r3, [fp, #-152]	; 0xffffff68
   16b78:	ldr	r2, [fp, #-172]	; 0xffffff54
   16b7c:	ldr	r3, [fp, #-156]	; 0xffffff64
   16b80:	sub	r3, r2, r3
   16b84:	str	r3, [fp, #-172]	; 0xffffff54
   16b88:	ldr	r3, [fp, #8]
   16b8c:	sub	r2, r3, #2
   16b90:	ldr	r3, [fp, #-8]
   16b94:	add	r3, r2, r3
   16b98:	lsl	r3, r3, #2
   16b9c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16ba0:	add	r3, r2, r3
   16ba4:	ldr	r2, [fp, #-16]
   16ba8:	str	r2, [r3]
   16bac:	ldr	r3, [fp, #-152]	; 0xffffff68
   16bb0:	cmp	r3, #0
   16bb4:	beq	16c0c <__assert_fail@plt+0x59cc>
   16bb8:	ldr	r3, [fp, #-8]
   16bbc:	lsl	r3, r3, #2
   16bc0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16bc4:	add	r0, r2, r3
   16bc8:	ldr	r3, [fp, #-8]
   16bcc:	lsl	r3, r3, #2
   16bd0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16bd4:	add	r1, r2, r3
   16bd8:	ldr	r3, [fp, #8]
   16bdc:	sub	r3, r3, #1
   16be0:	ldr	r2, [fp, #4]
   16be4:	bl	13fc0 <__assert_fail@plt+0x2d80>
   16be8:	mov	r2, r0
   16bec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bf0:	add	r3, r2, r3
   16bf4:	ldr	r2, [fp, #-172]	; 0xffffff54
   16bf8:	add	r3, r2, r3
   16bfc:	str	r3, [fp, #-172]	; 0xffffff54
   16c00:	ldr	r3, [fp, #-12]
   16c04:	sub	r3, r3, #1
   16c08:	str	r3, [fp, #-12]
   16c0c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16c10:	cmp	r3, #0
   16c14:	beq	16c30 <__assert_fail@plt+0x59f0>
   16c18:	ldr	r3, [fp, #-8]
   16c1c:	lsl	r3, r3, #2
   16c20:	ldr	r2, [fp, #-160]	; 0xffffff60
   16c24:	add	r3, r2, r3
   16c28:	ldr	r2, [fp, #-12]
   16c2c:	str	r2, [r3]
   16c30:	ldr	r3, [fp, #-8]
   16c34:	sub	r3, r3, #1
   16c38:	str	r3, [fp, #-8]
   16c3c:	ldr	r3, [fp, #-8]
   16c40:	cmp	r3, #0
   16c44:	bge	16660 <__assert_fail@plt+0x5420>
   16c48:	ldr	r3, [fp, #8]
   16c4c:	sub	r3, r3, #-1073741823	; 0xc0000001
   16c50:	lsl	r3, r3, #2
   16c54:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16c58:	add	r3, r2, r3
   16c5c:	ldr	r2, [fp, #-172]	; 0xffffff54
   16c60:	str	r2, [r3]
   16c64:	nop	{0}
   16c68:	sub	sp, fp, #4
   16c6c:	ldr	fp, [sp]
   16c70:	add	sp, sp, #4
   16c74:	pop	{pc}		; (ldr pc, [sp], #4)
   16c78:	str	fp, [sp, #-8]!
   16c7c:	str	lr, [sp, #4]
   16c80:	add	fp, sp, #4
   16c84:	sub	sp, sp, #48	; 0x30
   16c88:	str	r0, [fp, #-24]	; 0xffffffe8
   16c8c:	str	r1, [fp, #-28]	; 0xffffffe4
   16c90:	str	r2, [fp, #-32]	; 0xffffffe0
   16c94:	str	r3, [fp, #-36]	; 0xffffffdc
   16c98:	ldr	r3, [fp, #4]
   16c9c:	cmp	r3, #0
   16ca0:	bgt	16cc4 <__assert_fail@plt+0x5a84>
   16ca4:	movw	r3, #6520	; 0x1978
   16ca8:	movt	r3, #4
   16cac:	movw	r2, #1113	; 0x459
   16cb0:	movw	r1, #4700	; 0x125c
   16cb4:	movt	r1, #4
   16cb8:	movw	r0, #5052	; 0x13bc
   16cbc:	movt	r0, #4
   16cc0:	bl	11240 <__assert_fail@plt>
   16cc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16cc8:	ldr	r3, [fp, #4]
   16ccc:	cmp	r2, r3
   16cd0:	bge	16cf4 <__assert_fail@plt+0x5ab4>
   16cd4:	movw	r3, #6520	; 0x1978
   16cd8:	movt	r3, #4
   16cdc:	movw	r2, #1114	; 0x45a
   16ce0:	movw	r1, #4700	; 0x125c
   16ce4:	movt	r1, #4
   16ce8:	movw	r0, #5132	; 0x140c
   16cec:	movt	r0, #4
   16cf0:	bl	11240 <__assert_fail@plt>
   16cf4:	ldr	r3, [fp, #4]
   16cf8:	cmp	r3, #1
   16cfc:	bne	16d24 <__assert_fail@plt+0x5ae4>
   16d00:	ldr	r3, [fp, #8]
   16d04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d10:	bl	15c98 <__assert_fail@plt+0x4a58>
   16d14:	mov	r2, r0
   16d18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d1c:	str	r2, [r3]
   16d20:	b	16ec4 <__assert_fail@plt+0x5c84>
   16d24:	ldr	r3, [fp, #4]
   16d28:	cmp	r3, #2
   16d2c:	bne	16d48 <__assert_fail@plt+0x5b08>
   16d30:	ldr	r3, [fp, #8]
   16d34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16d38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d40:	bl	15fbc <__assert_fail@plt+0x4d7c>
   16d44:	b	16ec4 <__assert_fail@plt+0x5c84>
   16d48:	ldr	r3, [fp, #8]
   16d4c:	ldr	r2, [r3, #4]
   16d50:	ldr	r3, [fp, #4]
   16d54:	sub	r3, r3, #-1073741823	; 0xc0000001
   16d58:	lsl	r3, r3, #2
   16d5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16d60:	add	r3, r1, r3
   16d64:	ldr	r3, [r3]
   16d68:	cmp	r2, r3
   16d6c:	beq	16d90 <__assert_fail@plt+0x5b50>
   16d70:	movw	r3, #6520	; 0x1978
   16d74:	movt	r3, #4
   16d78:	movw	r2, #1125	; 0x465
   16d7c:	movw	r1, #4700	; 0x125c
   16d80:	movt	r1, #4
   16d84:	movw	r0, #5176	; 0x1438
   16d88:	movt	r0, #4
   16d8c:	bl	11240 <__assert_fail@plt>
   16d90:	ldr	r3, [fp, #8]
   16d94:	ldr	r2, [r3, #8]
   16d98:	ldr	r3, [fp, #4]
   16d9c:	sub	r3, r3, #-1073741822	; 0xc0000002
   16da0:	lsl	r3, r3, #2
   16da4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16da8:	add	r3, r1, r3
   16dac:	ldr	r3, [r3]
   16db0:	cmp	r2, r3
   16db4:	beq	16dd8 <__assert_fail@plt+0x5b98>
   16db8:	movw	r3, #6520	; 0x1978
   16dbc:	movt	r3, #4
   16dc0:	movw	r2, #1126	; 0x466
   16dc4:	movw	r1, #4700	; 0x125c
   16dc8:	movt	r1, #4
   16dcc:	movw	r0, #5196	; 0x144c
   16dd0:	movt	r0, #4
   16dd4:	bl	11240 <__assert_fail@plt>
   16dd8:	ldr	r3, [fp, #8]
   16ddc:	ldr	r3, [r3, #4]
   16de0:	cmp	r3, #0
   16de4:	blt	16e08 <__assert_fail@plt+0x5bc8>
   16de8:	movw	r3, #6520	; 0x1978
   16dec:	movt	r3, #4
   16df0:	movw	r2, #1127	; 0x467
   16df4:	movw	r1, #4700	; 0x125c
   16df8:	movt	r1, #4
   16dfc:	movw	r0, #5216	; 0x1460
   16e00:	movt	r0, #4
   16e04:	bl	11240 <__assert_fail@plt>
   16e08:	ldr	r3, [fp, #8]
   16e0c:	ldr	r3, [r3]
   16e10:	str	r3, [fp, #-12]
   16e14:	ldr	r3, [fp, #-12]
   16e18:	cmp	r3, #0
   16e1c:	beq	16e3c <__assert_fail@plt+0x5bfc>
   16e20:	ldr	r3, [fp, #-12]
   16e24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16e28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e30:	bl	14cf8 <__assert_fail@plt+0x3ab8>
   16e34:	str	r0, [fp, #-8]
   16e38:	b	16e44 <__assert_fail@plt+0x5c04>
   16e3c:	mov	r3, #0
   16e40:	str	r3, [fp, #-8]
   16e44:	ldr	r3, [fp, #8]
   16e48:	ldr	r3, [r3, #12]
   16e4c:	str	r3, [sp, #8]
   16e50:	ldr	r3, [fp, #4]
   16e54:	str	r3, [sp, #4]
   16e58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16e5c:	str	r3, [sp]
   16e60:	ldr	r3, [fp, #-8]
   16e64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16e68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e70:	bl	16570 <__assert_fail@plt+0x5330>
   16e74:	ldr	r3, [fp, #-12]
   16e78:	cmp	r3, #0
   16e7c:	beq	16ec4 <__assert_fail@plt+0x5c84>
   16e80:	ldr	r3, [fp, #-12]
   16e84:	ldr	r2, [fp, #4]
   16e88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e90:	bl	14ea4 <__assert_fail@plt+0x3c64>
   16e94:	str	r0, [fp, #-16]
   16e98:	ldr	r3, [fp, #-16]
   16e9c:	cmp	r3, #0
   16ea0:	beq	16ec4 <__assert_fail@plt+0x5c84>
   16ea4:	movw	r3, #6520	; 0x1978
   16ea8:	movt	r3, #4
   16eac:	movw	r2, #1138	; 0x472
   16eb0:	movw	r1, #4700	; 0x125c
   16eb4:	movt	r1, #4
   16eb8:	movw	r0, #5252	; 0x1484
   16ebc:	movt	r0, #4
   16ec0:	bl	11240 <__assert_fail@plt>
   16ec4:	nop	{0}
   16ec8:	sub	sp, fp, #4
   16ecc:	ldr	fp, [sp]
   16ed0:	add	sp, sp, #4
   16ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ed8:	str	fp, [sp, #-8]!
   16edc:	str	lr, [sp, #4]
   16ee0:	add	fp, sp, #4
   16ee4:	sub	sp, sp, #48	; 0x30
   16ee8:	str	r0, [fp, #-32]	; 0xffffffe0
   16eec:	str	r1, [fp, #-36]	; 0xffffffdc
   16ef0:	str	r2, [fp, #-40]	; 0xffffffd8
   16ef4:	str	r3, [fp, #-44]	; 0xffffffd4
   16ef8:	mov	r3, #0
   16efc:	str	r3, [fp, #-8]
   16f00:	ldr	r3, [fp, #4]
   16f04:	cmp	r3, #0
   16f08:	bgt	16f2c <__assert_fail@plt+0x5cec>
   16f0c:	movw	r3, #6540	; 0x198c
   16f10:	movt	r3, #4
   16f14:	movw	r2, #1148	; 0x47c
   16f18:	movw	r1, #4700	; 0x125c
   16f1c:	movt	r1, #4
   16f20:	movw	r0, #5052	; 0x13bc
   16f24:	movt	r0, #4
   16f28:	bl	11240 <__assert_fail@plt>
   16f2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16f30:	ldr	r3, [fp, #4]
   16f34:	cmp	r2, r3
   16f38:	bge	16f5c <__assert_fail@plt+0x5d1c>
   16f3c:	movw	r3, #6540	; 0x198c
   16f40:	movt	r3, #4
   16f44:	movw	r2, #1149	; 0x47d
   16f48:	movw	r1, #4700	; 0x125c
   16f4c:	movt	r1, #4
   16f50:	movw	r0, #5132	; 0x140c
   16f54:	movt	r0, #4
   16f58:	bl	11240 <__assert_fail@plt>
   16f5c:	sub	r3, fp, #28
   16f60:	ldr	r2, [fp, #4]
   16f64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16f68:	mov	r0, r3
   16f6c:	bl	15a5c <__assert_fail@plt+0x481c>
   16f70:	ldr	r3, [fp, #4]
   16f74:	cmp	r3, #2
   16f78:	ble	16fe0 <__assert_fail@plt+0x5da0>
   16f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f80:	cmp	r3, #0
   16f84:	beq	16fe0 <__assert_fail@plt+0x5da0>
   16f88:	ldr	r0, [fp, #4]
   16f8c:	bl	13ab0 <__assert_fail@plt+0x2870>
   16f90:	str	r0, [fp, #-8]
   16f94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f98:	ldr	r2, [fp, #4]
   16f9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16fa0:	ldr	r0, [fp, #-8]
   16fa4:	bl	14cf8 <__assert_fail@plt+0x3ab8>
   16fa8:	str	r0, [fp, #-12]
   16fac:	ldr	r3, [fp, #-12]
   16fb0:	cmp	r3, #0
   16fb4:	beq	16fd8 <__assert_fail@plt+0x5d98>
   16fb8:	movw	r3, #6540	; 0x198c
   16fbc:	movt	r3, #4
   16fc0:	movw	r2, #1155	; 0x483
   16fc4:	movw	r1, #4700	; 0x125c
   16fc8:	movt	r1, #4
   16fcc:	movw	r0, #5252	; 0x1484
   16fd0:	movt	r0, #4
   16fd4:	bl	11240 <__assert_fail@plt>
   16fd8:	ldr	r3, [fp, #-8]
   16fdc:	str	r3, [fp, #-44]	; 0xffffffd4
   16fe0:	sub	r3, fp, #28
   16fe4:	str	r3, [sp, #4]
   16fe8:	ldr	r3, [fp, #4]
   16fec:	str	r3, [sp]
   16ff0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ff4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16ff8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17000:	bl	16c78 <__assert_fail@plt+0x5a38>
   17004:	ldr	r3, [fp, #-8]
   17008:	cmp	r3, #0
   1700c:	beq	1701c <__assert_fail@plt+0x5ddc>
   17010:	ldr	r1, [fp, #4]
   17014:	ldr	r0, [fp, #-8]
   17018:	bl	13b7c <__assert_fail@plt+0x293c>
   1701c:	nop	{0}
   17020:	sub	sp, fp, #4
   17024:	ldr	fp, [sp]
   17028:	add	sp, sp, #4
   1702c:	pop	{pc}		; (ldr pc, [sp], #4)
   17030:	push	{fp}		; (str fp, [sp, #-4]!)
   17034:	add	fp, sp, #0
   17038:	sub	sp, sp, #12
   1703c:	str	r0, [fp, #-8]
   17040:	ldr	r3, [fp, #-8]
   17044:	cmp	r3, #16
   17048:	beq	170dc <__assert_fail@plt+0x5e9c>
   1704c:	ldr	r3, [fp, #-8]
   17050:	cmp	r3, #16
   17054:	bhi	17080 <__assert_fail@plt+0x5e40>
   17058:	ldr	r3, [fp, #-8]
   1705c:	cmp	r3, #4
   17060:	beq	170cc <__assert_fail@plt+0x5e8c>
   17064:	ldr	r3, [fp, #-8]
   17068:	cmp	r3, #8
   1706c:	beq	170d4 <__assert_fail@plt+0x5e94>
   17070:	ldr	r3, [fp, #-8]
   17074:	cmp	r3, #2
   17078:	beq	170c4 <__assert_fail@plt+0x5e84>
   1707c:	b	17104 <__assert_fail@plt+0x5ec4>
   17080:	ldr	r3, [fp, #-8]
   17084:	cmp	r3, #64	; 0x40
   17088:	beq	170ec <__assert_fail@plt+0x5eac>
   1708c:	ldr	r3, [fp, #-8]
   17090:	cmp	r3, #64	; 0x40
   17094:	bhi	170a8 <__assert_fail@plt+0x5e68>
   17098:	ldr	r3, [fp, #-8]
   1709c:	cmp	r3, #32
   170a0:	beq	170e4 <__assert_fail@plt+0x5ea4>
   170a4:	b	17104 <__assert_fail@plt+0x5ec4>
   170a8:	ldr	r3, [fp, #-8]
   170ac:	cmp	r3, #128	; 0x80
   170b0:	beq	170f4 <__assert_fail@plt+0x5eb4>
   170b4:	ldr	r3, [fp, #-8]
   170b8:	cmp	r3, #256	; 0x100
   170bc:	beq	170fc <__assert_fail@plt+0x5ebc>
   170c0:	b	17104 <__assert_fail@plt+0x5ec4>
   170c4:	mov	r3, #1
   170c8:	b	17108 <__assert_fail@plt+0x5ec8>
   170cc:	mov	r3, #2
   170d0:	b	17108 <__assert_fail@plt+0x5ec8>
   170d4:	mov	r3, #3
   170d8:	b	17108 <__assert_fail@plt+0x5ec8>
   170dc:	mov	r3, #4
   170e0:	b	17108 <__assert_fail@plt+0x5ec8>
   170e4:	mov	r3, #5
   170e8:	b	17108 <__assert_fail@plt+0x5ec8>
   170ec:	mov	r3, #6
   170f0:	b	17108 <__assert_fail@plt+0x5ec8>
   170f4:	mov	r3, #7
   170f8:	b	17108 <__assert_fail@plt+0x5ec8>
   170fc:	mov	r3, #8
   17100:	b	17108 <__assert_fail@plt+0x5ec8>
   17104:	mov	r3, #0
   17108:	mov	r0, r3
   1710c:	add	sp, fp, #0
   17110:	pop	{fp}		; (ldr fp, [sp], #4)
   17114:	bx	lr
   17118:	push	{fp}		; (str fp, [sp, #-4]!)
   1711c:	add	fp, sp, #0
   17120:	sub	sp, sp, #28
   17124:	str	r0, [fp, #-24]	; 0xffffffe8
   17128:	str	r1, [fp, #-28]	; 0xffffffe4
   1712c:	mvn	r2, #0
   17130:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17134:	udiv	r3, r2, r3
   17138:	str	r3, [fp, #-16]
   1713c:	mov	r3, #1
   17140:	str	r3, [fp, #-12]
   17144:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17148:	str	r3, [fp, #-8]
   1714c:	b	1716c <__assert_fail@plt+0x5f2c>
   17150:	ldr	r3, [fp, #-8]
   17154:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17158:	mul	r3, r2, r3
   1715c:	str	r3, [fp, #-8]
   17160:	ldr	r3, [fp, #-12]
   17164:	add	r3, r3, #1
   17168:	str	r3, [fp, #-12]
   1716c:	ldr	r2, [fp, #-8]
   17170:	ldr	r3, [fp, #-16]
   17174:	cmp	r2, r3
   17178:	bls	17150 <__assert_fail@plt+0x5f10>
   1717c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17180:	ldr	r2, [fp, #-12]
   17184:	str	r2, [r3]
   17188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1718c:	ldr	r2, [fp, #-8]
   17190:	str	r2, [r3, #4]
   17194:	nop	{0}
   17198:	add	sp, fp, #0
   1719c:	pop	{fp}		; (ldr fp, [sp], #4)
   171a0:	bx	lr
   171a4:	str	fp, [sp, #-8]!
   171a8:	str	lr, [sp, #4]
   171ac:	add	fp, sp, #4
   171b0:	sub	sp, sp, #24
   171b4:	str	r0, [fp, #-24]	; 0xffffffe8
   171b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171bc:	cmp	r3, #0
   171c0:	bne	171e4 <__assert_fail@plt+0x5fa4>
   171c4:	movw	r3, #6552	; 0x1998
   171c8:	movt	r3, #4
   171cc:	movw	r2, #1210	; 0x4ba
   171d0:	movw	r1, #4700	; 0x125c
   171d4:	movt	r1, #4
   171d8:	movw	r0, #5264	; 0x1490
   171dc:	movt	r0, #4
   171e0:	bl	11240 <__assert_fail@plt>
   171e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171e8:	str	r3, [fp, #-8]
   171ec:	mov	r3, #0
   171f0:	str	r3, [fp, #-12]
   171f4:	mov	r3, #8
   171f8:	str	r3, [fp, #-16]
   171fc:	ldr	r3, [fp, #-16]
   17200:	cmp	r3, #31
   17204:	bhi	17254 <__assert_fail@plt+0x6014>
   17208:	b	17228 <__assert_fail@plt+0x5fe8>
   1720c:	ldr	r2, [fp, #-8]
   17210:	ldr	r3, [fp, #-16]
   17214:	lsl	r3, r2, r3
   17218:	str	r3, [fp, #-8]
   1721c:	ldr	r3, [fp, #-12]
   17220:	add	r3, r3, #8
   17224:	str	r3, [fp, #-12]
   17228:	ldr	r3, [fp, #-8]
   1722c:	and	r3, r3, #-16777216	; 0xff000000
   17230:	cmp	r3, #0
   17234:	beq	1720c <__assert_fail@plt+0x5fcc>
   17238:	b	17254 <__assert_fail@plt+0x6014>
   1723c:	ldr	r3, [fp, #-8]
   17240:	lsl	r3, r3, #1
   17244:	str	r3, [fp, #-8]
   17248:	ldr	r3, [fp, #-12]
   1724c:	add	r3, r3, #1
   17250:	str	r3, [fp, #-12]
   17254:	ldr	r3, [fp, #-8]
   17258:	cmp	r3, #0
   1725c:	bge	1723c <__assert_fail@plt+0x5ffc>
   17260:	ldr	r3, [fp, #-12]
   17264:	str	r3, [fp, #-20]	; 0xffffffec
   17268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1726c:	rsb	r3, r3, #32
   17270:	mov	r0, r3
   17274:	sub	sp, fp, #4
   17278:	ldr	fp, [sp]
   1727c:	add	sp, sp, #4
   17280:	pop	{pc}		; (ldr pc, [sp], #4)
   17284:	str	r4, [sp, #-12]!
   17288:	str	fp, [sp, #4]
   1728c:	str	lr, [sp, #8]
   17290:	add	fp, sp, #8
   17294:	sub	sp, sp, #44	; 0x2c
   17298:	str	r0, [fp, #-40]	; 0xffffffd8
   1729c:	str	r1, [fp, #-44]	; 0xffffffd4
   172a0:	str	r2, [fp, #-48]	; 0xffffffd0
   172a4:	str	r3, [fp, #-52]	; 0xffffffcc
   172a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172ac:	sub	r3, r3, #1
   172b0:	lsl	r4, r3, #5
   172b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172b8:	sub	r3, r3, #-1073741823	; 0xc0000001
   172bc:	lsl	r3, r3, #2
   172c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   172c4:	add	r3, r2, r3
   172c8:	ldr	r3, [r3]
   172cc:	mov	r0, r3
   172d0:	bl	171a4 <__assert_fail@plt+0x5f64>
   172d4:	mov	r3, r0
   172d8:	add	r2, r4, r3
   172dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   172e0:	add	r3, r2, r3
   172e4:	sub	r2, r3, #1
   172e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   172ec:	udiv	r3, r2, r3
   172f0:	str	r3, [fp, #-32]	; 0xffffffe0
   172f4:	mov	r2, #1
   172f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   172fc:	lsl	r3, r2, r3
   17300:	uxtb	r3, r3
   17304:	sub	r3, r3, #1
   17308:	strb	r3, [fp, #-33]	; 0xffffffdf
   1730c:	mov	r3, #0
   17310:	str	r3, [fp, #-20]	; 0xffffffec
   17314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17318:	str	r3, [fp, #-16]
   1731c:	mov	r3, #0
   17320:	str	r3, [fp, #-24]	; 0xffffffe8
   17324:	b	173e0 <__assert_fail@plt+0x61a0>
   17328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1732c:	lsl	r3, r3, #2
   17330:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17334:	add	r3, r2, r3
   17338:	ldr	r2, [r3]
   1733c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17340:	lsr	r3, r2, r3
   17344:	strb	r3, [fp, #-25]	; 0xffffffe7
   17348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1734c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17350:	add	r3, r2, r3
   17354:	str	r3, [fp, #-24]	; 0xffffffe8
   17358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1735c:	cmp	r3, #31
   17360:	bls	173c0 <__assert_fail@plt+0x6180>
   17364:	ldr	r3, [fp, #-20]	; 0xffffffec
   17368:	add	r3, r3, #1
   1736c:	str	r3, [fp, #-20]	; 0xffffffec
   17370:	ldr	r2, [fp, #-20]	; 0xffffffec
   17374:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17378:	cmp	r2, r3
   1737c:	bge	173c0 <__assert_fail@plt+0x6180>
   17380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17384:	sub	r3, r3, #32
   17388:	str	r3, [fp, #-24]	; 0xffffffe8
   1738c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17390:	lsl	r3, r3, #2
   17394:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17398:	add	r3, r2, r3
   1739c:	ldr	r2, [r3]
   173a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   173a8:	sub	r3, r1, r3
   173ac:	lsl	r3, r2, r3
   173b0:	uxtb	r2, r3
   173b4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   173b8:	orr	r3, r2, r3
   173bc:	strb	r3, [fp, #-25]	; 0xffffffe7
   173c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   173c4:	ldr	r3, [fp, #-16]
   173c8:	add	r3, r2, r3
   173cc:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   173d0:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   173d4:	and	r2, r2, r1
   173d8:	uxtb	r2, r2
   173dc:	strb	r2, [r3]
   173e0:	ldr	r3, [fp, #-16]
   173e4:	sub	r2, r3, #1
   173e8:	str	r2, [fp, #-16]
   173ec:	cmp	r3, #0
   173f0:	bne	17328 <__assert_fail@plt+0x60e8>
   173f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   173f8:	mov	r0, r3
   173fc:	sub	sp, fp, #8
   17400:	ldr	r4, [sp]
   17404:	ldr	fp, [sp, #4]
   17408:	add	sp, sp, #8
   1740c:	pop	{pc}		; (ldr pc, [sp], #4)
   17410:	str	fp, [sp, #-8]!
   17414:	str	lr, [sp, #4]
   17418:	add	fp, sp, #4
   1741c:	sub	sp, sp, #96	; 0x60
   17420:	str	r0, [fp, #-88]	; 0xffffffa8
   17424:	str	r1, [fp, #-92]	; 0xffffffa4
   17428:	str	r2, [fp, #-96]	; 0xffffffa0
   1742c:	mov	r3, #0
   17430:	str	r3, [fp, #-8]
   17434:	b	176cc <__assert_fail@plt+0x648c>
   17438:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1743c:	ldr	r3, [r3]
   17440:	rsb	r3, r3, #32
   17444:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17448:	lsr	r3, r2, r3
   1744c:	str	r3, [fp, #-24]	; 0xffffffe8
   17450:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17454:	ldr	r3, [r3]
   17458:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1745c:	lsl	r3, r2, r3
   17460:	str	r3, [fp, #-28]	; 0xffffffe4
   17464:	mov	r3, #32
   17468:	str	r3, [fp, #-32]	; 0xffffffe0
   1746c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17470:	str	r3, [fp, #-36]	; 0xffffffdc
   17474:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17478:	ldr	r3, [r3, #12]
   1747c:	str	r3, [fp, #-40]	; 0xffffffd8
   17480:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17484:	uxth	r3, r3
   17488:	str	r3, [fp, #-44]	; 0xffffffd4
   1748c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17490:	lsr	r3, r3, #16
   17494:	str	r3, [fp, #-48]	; 0xffffffd0
   17498:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1749c:	uxth	r3, r3
   174a0:	str	r3, [fp, #-52]	; 0xffffffcc
   174a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   174a8:	lsr	r3, r3, #16
   174ac:	str	r3, [fp, #-56]	; 0xffffffc8
   174b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   174b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   174b8:	mul	r3, r2, r3
   174bc:	str	r3, [fp, #-60]	; 0xffffffc4
   174c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   174c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   174c8:	mul	r3, r2, r3
   174cc:	str	r3, [fp, #-64]	; 0xffffffc0
   174d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   174d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   174d8:	mul	r3, r2, r3
   174dc:	str	r3, [fp, #-68]	; 0xffffffbc
   174e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   174e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   174e8:	mul	r3, r2, r3
   174ec:	str	r3, [fp, #-20]	; 0xffffffec
   174f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   174f4:	lsr	r3, r3, #16
   174f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   174fc:	add	r3, r2, r3
   17500:	str	r3, [fp, #-64]	; 0xffffffc0
   17504:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17508:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1750c:	add	r3, r2, r3
   17510:	str	r3, [fp, #-64]	; 0xffffffc0
   17514:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17518:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1751c:	cmp	r2, r3
   17520:	bcs	17530 <__assert_fail@plt+0x62f0>
   17524:	ldr	r3, [fp, #-20]	; 0xffffffec
   17528:	add	r3, r3, #65536	; 0x10000
   1752c:	str	r3, [fp, #-20]	; 0xffffffec
   17530:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17534:	lsr	r3, r3, #16
   17538:	ldr	r2, [fp, #-20]	; 0xffffffec
   1753c:	add	r3, r2, r3
   17540:	str	r3, [fp, #-12]
   17544:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17548:	lsl	r2, r3, #16
   1754c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17550:	uxth	r3, r3
   17554:	add	r3, r2, r3
   17558:	str	r3, [fp, #-72]	; 0xffffffb8
   1755c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17560:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17564:	add	r3, r2, r3
   17568:	str	r3, [fp, #-76]	; 0xffffffb4
   1756c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17570:	ldr	r3, [fp, #-12]
   17574:	add	r3, r2, r3
   17578:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1757c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17580:	cmp	r1, r2
   17584:	movcc	r2, #1
   17588:	movcs	r2, #0
   1758c:	uxtb	r2, r2
   17590:	add	r3, r3, r2
   17594:	add	r3, r3, #1
   17598:	str	r3, [fp, #-12]
   1759c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   175a0:	str	r3, [fp, #-72]	; 0xffffffb8
   175a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   175a8:	ldr	r3, [r3, #4]
   175ac:	ldr	r2, [fp, #-12]
   175b0:	mul	r3, r2, r3
   175b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   175b8:	sub	r3, r2, r3
   175bc:	str	r3, [fp, #-16]
   175c0:	ldr	r2, [fp, #-16]
   175c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   175c8:	cmp	r2, r3
   175cc:	movhi	r3, #1
   175d0:	movls	r3, #0
   175d4:	uxtb	r3, r3
   175d8:	rsb	r3, r3, #0
   175dc:	str	r3, [fp, #-80]	; 0xffffffb0
   175e0:	ldr	r2, [fp, #-12]
   175e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   175e8:	add	r3, r2, r3
   175ec:	str	r3, [fp, #-12]
   175f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   175f4:	ldr	r2, [r3, #4]
   175f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   175fc:	and	r3, r3, r2
   17600:	ldr	r2, [fp, #-16]
   17604:	add	r3, r2, r3
   17608:	str	r3, [fp, #-16]
   1760c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17610:	ldr	r3, [r3, #4]
   17614:	ldr	r2, [fp, #-16]
   17618:	cmp	r2, r3
   1761c:	bcc	17640 <__assert_fail@plt+0x6400>
   17620:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17624:	ldr	r3, [r3, #4]
   17628:	ldr	r2, [fp, #-16]
   1762c:	sub	r3, r2, r3
   17630:	str	r3, [fp, #-16]
   17634:	ldr	r3, [fp, #-12]
   17638:	add	r3, r3, #1
   1763c:	str	r3, [fp, #-12]
   17640:	ldr	r3, [fp, #-16]
   17644:	str	r3, [fp, #-84]	; 0xffffffac
   17648:	ldr	r3, [fp, #-12]
   1764c:	str	r3, [fp, #-92]	; 0xffffffa4
   17650:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17654:	ldr	r3, [r3]
   17658:	rsb	r3, r3, #32
   1765c:	mvn	r2, #0
   17660:	lsr	r2, r2, r3
   17664:	ldr	r3, [fp, #-84]	; 0xffffffac
   17668:	and	r3, r3, r2
   1766c:	cmp	r3, #0
   17670:	beq	17694 <__assert_fail@plt+0x6454>
   17674:	movw	r3, #6576	; 0x19b0
   17678:	movt	r3, #4
   1767c:	movw	r2, #1259	; 0x4eb
   17680:	movw	r1, #4700	; 0x125c
   17684:	movt	r1, #4
   17688:	movw	r0, #5272	; 0x1498
   1768c:	movt	r0, #4
   17690:	bl	11240 <__assert_fail@plt>
   17694:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17698:	ldr	r3, [r3]
   1769c:	ldr	r2, [fp, #-84]	; 0xffffffac
   176a0:	lsr	r3, r2, r3
   176a4:	str	r3, [fp, #-84]	; 0xffffffac
   176a8:	ldr	r3, [fp, #-8]
   176ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   176b0:	add	r3, r2, r3
   176b4:	ldr	r2, [fp, #-84]	; 0xffffffac
   176b8:	uxtb	r2, r2
   176bc:	strb	r2, [r3]
   176c0:	ldr	r3, [fp, #-8]
   176c4:	add	r3, r3, #1
   176c8:	str	r3, [fp, #-8]
   176cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   176d0:	cmp	r3, #0
   176d4:	bne	17438 <__assert_fail@plt+0x61f8>
   176d8:	ldr	r3, [fp, #-8]
   176dc:	mov	r0, r3
   176e0:	sub	sp, fp, #4
   176e4:	ldr	fp, [sp]
   176e8:	add	sp, sp, #4
   176ec:	pop	{pc}		; (ldr pc, [sp], #4)
   176f0:	str	fp, [sp, #-8]!
   176f4:	str	lr, [sp, #4]
   176f8:	add	fp, sp, #4
   176fc:	sub	sp, sp, #72	; 0x48
   17700:	str	r0, [fp, #-64]	; 0xffffffc0
   17704:	str	r1, [fp, #-68]	; 0xffffffbc
   17708:	str	r2, [fp, #-72]	; 0xffffffb8
   1770c:	str	r3, [fp, #-76]	; 0xffffffb4
   17710:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17714:	sub	r3, fp, #40	; 0x28
   17718:	mov	r1, r2
   1771c:	mov	r0, r3
   17720:	bl	157e4 <__assert_fail@plt+0x45a4>
   17724:	mov	r3, #0
   17728:	str	r3, [fp, #-8]
   1772c:	ldr	r3, [fp, #4]
   17730:	cmp	r3, #1
   17734:	ble	1781c <__assert_fail@plt+0x65dc>
   17738:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1773c:	ldr	r2, [r3, #4]
   17740:	sub	r3, fp, #56	; 0x38
   17744:	mov	r1, r2
   17748:	mov	r0, r3
   1774c:	bl	157e4 <__assert_fail@plt+0x45a4>
   17750:	sub	r3, fp, #56	; 0x38
   17754:	ldr	r2, [fp, #4]
   17758:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1775c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17760:	bl	15c98 <__assert_fail@plt+0x4a58>
   17764:	str	r0, [fp, #-20]	; 0xffffffec
   17768:	ldr	r3, [fp, #4]
   1776c:	sub	r3, r3, #-1073741823	; 0xc0000001
   17770:	lsl	r3, r3, #2
   17774:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17778:	add	r3, r2, r3
   1777c:	ldr	r3, [r3]
   17780:	cmp	r3, #0
   17784:	moveq	r3, #1
   17788:	movne	r3, #0
   1778c:	uxtb	r3, r3
   17790:	mov	r2, r3
   17794:	ldr	r3, [fp, #4]
   17798:	sub	r3, r3, r2
   1779c:	str	r3, [fp, #4]
   177a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   177a4:	ldr	r3, [fp, #-8]
   177a8:	add	r3, r2, r3
   177ac:	sub	r2, fp, #40	; 0x28
   177b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   177b4:	mov	r0, r3
   177b8:	bl	17410 <__assert_fail@plt+0x61d0>
   177bc:	str	r0, [fp, #-16]
   177c0:	ldr	r2, [fp, #-8]
   177c4:	ldr	r3, [fp, #-16]
   177c8:	add	r3, r2, r3
   177cc:	str	r3, [fp, #-8]
   177d0:	b	177fc <__assert_fail@plt+0x65bc>
   177d4:	ldr	r3, [fp, #-8]
   177d8:	add	r2, r3, #1
   177dc:	str	r2, [fp, #-8]
   177e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   177e4:	add	r3, r2, r3
   177e8:	mov	r2, #0
   177ec:	strb	r2, [r3]
   177f0:	ldr	r3, [fp, #-16]
   177f4:	add	r3, r3, #1
   177f8:	str	r3, [fp, #-16]
   177fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17800:	ldr	r3, [r3]
   17804:	ldr	r2, [fp, #-16]
   17808:	cmp	r2, r3
   1780c:	bcc	177d4 <__assert_fail@plt+0x6594>
   17810:	ldr	r3, [fp, #4]
   17814:	cmp	r3, #1
   17818:	bgt	17750 <__assert_fail@plt+0x6510>
   1781c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17820:	ldr	r3, [fp, #-8]
   17824:	add	r0, r2, r3
   17828:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1782c:	ldr	r3, [r3]
   17830:	sub	r2, fp, #40	; 0x28
   17834:	mov	r1, r3
   17838:	bl	17410 <__assert_fail@plt+0x61d0>
   1783c:	mov	r2, r0
   17840:	ldr	r3, [fp, #-8]
   17844:	add	r3, r3, r2
   17848:	str	r3, [fp, #-8]
   1784c:	mov	r3, #0
   17850:	str	r3, [fp, #-12]
   17854:	b	178c4 <__assert_fail@plt+0x6684>
   17858:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1785c:	ldr	r3, [fp, #-12]
   17860:	add	r3, r2, r3
   17864:	ldrb	r3, [r3]
   17868:	strb	r3, [fp, #-21]	; 0xffffffeb
   1786c:	ldr	r2, [fp, #-8]
   17870:	ldr	r3, [fp, #-12]
   17874:	sub	r3, r2, r3
   17878:	sub	r3, r3, #1
   1787c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17880:	add	r2, r2, r3
   17884:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17888:	ldr	r3, [fp, #-12]
   1788c:	add	r3, r1, r3
   17890:	ldrb	r2, [r2]
   17894:	strb	r2, [r3]
   17898:	ldr	r2, [fp, #-8]
   1789c:	ldr	r3, [fp, #-12]
   178a0:	sub	r3, r2, r3
   178a4:	sub	r3, r3, #1
   178a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   178ac:	add	r3, r2, r3
   178b0:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   178b4:	strb	r2, [r3]
   178b8:	ldr	r3, [fp, #-12]
   178bc:	add	r3, r3, #1
   178c0:	str	r3, [fp, #-12]
   178c4:	ldr	r3, [fp, #-12]
   178c8:	lsl	r3, r3, #1
   178cc:	add	r3, r3, #1
   178d0:	ldr	r2, [fp, #-8]
   178d4:	cmp	r2, r3
   178d8:	bhi	17858 <__assert_fail@plt+0x6618>
   178dc:	ldr	r3, [fp, #-8]
   178e0:	mov	r0, r3
   178e4:	sub	sp, fp, #4
   178e8:	ldr	fp, [sp]
   178ec:	add	sp, sp, #4
   178f0:	pop	{pc}		; (ldr pc, [sp], #4)
   178f4:	str	fp, [sp, #-8]!
   178f8:	str	lr, [sp, #4]
   178fc:	add	fp, sp, #4
   17900:	sub	sp, sp, #40	; 0x28
   17904:	str	r0, [fp, #-24]	; 0xffffffe8
   17908:	str	r1, [fp, #-28]	; 0xffffffe4
   1790c:	str	r2, [fp, #-32]	; 0xffffffe0
   17910:	str	r3, [fp, #-36]	; 0xffffffdc
   17914:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17918:	cmp	r3, #0
   1791c:	bgt	17940 <__assert_fail@plt+0x6700>
   17920:	movw	r3, #6596	; 0x19c4
   17924:	movt	r3, #4
   17928:	movw	r2, #1316	; 0x524
   1792c:	movw	r1, #4700	; 0x125c
   17930:	movt	r1, #4
   17934:	movw	r0, #5332	; 0x14d4
   17938:	movt	r0, #4
   1793c:	bl	11240 <__assert_fail@plt>
   17940:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17944:	sub	r3, r3, #-1073741823	; 0xc0000001
   17948:	lsl	r3, r3, #2
   1794c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17950:	add	r3, r2, r3
   17954:	ldr	r3, [r3]
   17958:	cmp	r3, #0
   1795c:	bne	17980 <__assert_fail@plt+0x6740>
   17960:	movw	r3, #6596	; 0x19c4
   17964:	movt	r3, #4
   17968:	movw	r2, #1317	; 0x525
   1796c:	movw	r1, #4700	; 0x125c
   17970:	movt	r1, #4
   17974:	movw	r0, #5340	; 0x14dc
   17978:	movt	r0, #4
   1797c:	bl	11240 <__assert_fail@plt>
   17980:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17984:	mov	r0, r3
   17988:	bl	17030 <__assert_fail@plt+0x5df0>
   1798c:	str	r0, [fp, #-8]
   17990:	ldr	r3, [fp, #-8]
   17994:	cmp	r3, #0
   17998:	beq	179b8 <__assert_fail@plt+0x6778>
   1799c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   179a4:	ldr	r1, [fp, #-8]
   179a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179ac:	bl	17284 <__assert_fail@plt+0x6044>
   179b0:	mov	r3, r0
   179b4:	b	179ec <__assert_fail@plt+0x67ac>
   179b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   179bc:	sub	r3, fp, #16
   179c0:	mov	r1, r2
   179c4:	mov	r0, r3
   179c8:	bl	17118 <__assert_fail@plt+0x5ed8>
   179cc:	sub	r2, fp, #16
   179d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179d4:	str	r3, [sp]
   179d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   179dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   179e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179e4:	bl	176f0 <__assert_fail@plt+0x64b0>
   179e8:	mov	r3, r0
   179ec:	mov	r0, r3
   179f0:	sub	sp, fp, #4
   179f4:	ldr	fp, [sp]
   179f8:	add	sp, sp, #4
   179fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17a00:	str	fp, [sp, #-8]!
   17a04:	str	lr, [sp, #4]
   17a08:	add	fp, sp, #4
   17a0c:	sub	sp, sp, #32
   17a10:	str	r0, [fp, #-24]	; 0xffffffe8
   17a14:	str	r1, [fp, #-28]	; 0xffffffe4
   17a18:	str	r2, [fp, #-32]	; 0xffffffe0
   17a1c:	str	r3, [fp, #-36]	; 0xffffffdc
   17a20:	mov	r3, #0
   17a24:	str	r3, [fp, #-12]
   17a28:	mov	r3, #0
   17a2c:	str	r3, [fp, #-8]
   17a30:	mov	r3, #0
   17a34:	str	r3, [fp, #-16]
   17a38:	b	17ad4 <__assert_fail@plt+0x6894>
   17a3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17a40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17a44:	add	r3, r2, r3
   17a48:	ldrb	r3, [r3]
   17a4c:	mov	r2, r3
   17a50:	ldr	r3, [fp, #-16]
   17a54:	lsl	r3, r2, r3
   17a58:	ldr	r2, [fp, #-12]
   17a5c:	orr	r3, r2, r3
   17a60:	str	r3, [fp, #-12]
   17a64:	ldr	r2, [fp, #-16]
   17a68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a6c:	add	r3, r2, r3
   17a70:	str	r3, [fp, #-16]
   17a74:	ldr	r3, [fp, #-16]
   17a78:	cmp	r3, #31
   17a7c:	bls	17ad4 <__assert_fail@plt+0x6894>
   17a80:	ldr	r3, [fp, #-16]
   17a84:	sub	r3, r3, #32
   17a88:	str	r3, [fp, #-16]
   17a8c:	ldr	r3, [fp, #-8]
   17a90:	add	r2, r3, #1
   17a94:	str	r2, [fp, #-8]
   17a98:	lsl	r3, r3, #2
   17a9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17aa0:	add	r3, r2, r3
   17aa4:	ldr	r2, [fp, #-12]
   17aa8:	str	r2, [r3]
   17aac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ab4:	add	r3, r2, r3
   17ab8:	ldrb	r3, [r3]
   17abc:	mov	r1, r3
   17ac0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ac4:	ldr	r3, [fp, #-16]
   17ac8:	sub	r3, r2, r3
   17acc:	lsr	r3, r1, r3
   17ad0:	str	r3, [fp, #-12]
   17ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ad8:	sub	r2, r3, #1
   17adc:	str	r2, [fp, #-32]	; 0xffffffe0
   17ae0:	cmp	r3, #0
   17ae4:	bne	17a3c <__assert_fail@plt+0x67fc>
   17ae8:	ldr	r3, [fp, #-12]
   17aec:	cmp	r3, #0
   17af0:	beq	17b18 <__assert_fail@plt+0x68d8>
   17af4:	ldr	r3, [fp, #-8]
   17af8:	add	r2, r3, #1
   17afc:	str	r2, [fp, #-8]
   17b00:	lsl	r3, r3, #2
   17b04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b08:	add	r3, r2, r3
   17b0c:	ldr	r2, [fp, #-12]
   17b10:	str	r2, [r3]
   17b14:	b	17b28 <__assert_fail@plt+0x68e8>
   17b18:	ldr	r1, [fp, #-8]
   17b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b20:	bl	13ddc <__assert_fail@plt+0x2b9c>
   17b24:	str	r0, [fp, #-8]
   17b28:	ldr	r3, [fp, #-8]
   17b2c:	mov	r0, r3
   17b30:	sub	sp, fp, #4
   17b34:	ldr	fp, [sp]
   17b38:	add	sp, sp, #4
   17b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b40:	str	fp, [sp, #-8]!
   17b44:	str	lr, [sp, #4]
   17b48:	add	fp, sp, #4
   17b4c:	sub	sp, sp, #40	; 0x28
   17b50:	str	r0, [fp, #-32]	; 0xffffffe0
   17b54:	str	r1, [fp, #-36]	; 0xffffffdc
   17b58:	str	r2, [fp, #-40]	; 0xffffffd8
   17b5c:	str	r3, [fp, #-44]	; 0xffffffd4
   17b60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17b64:	cmp	r3, #0
   17b68:	bne	17b8c <__assert_fail@plt+0x694c>
   17b6c:	movw	r3, #6608	; 0x19d0
   17b70:	movt	r3, #4
   17b74:	movw	r2, #1370	; 0x55a
   17b78:	movw	r1, #4700	; 0x125c
   17b7c:	movt	r1, #4
   17b80:	movw	r0, #5356	; 0x14ec
   17b84:	movt	r0, #4
   17b88:	bl	11240 <__assert_fail@plt>
   17b8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17b90:	sub	r3, r3, #1
   17b94:	ldr	r2, [fp, #4]
   17b98:	ldr	r2, [r2]
   17b9c:	udiv	r1, r3, r2
   17ba0:	mul	r2, r2, r1
   17ba4:	sub	r3, r3, r2
   17ba8:	add	r3, r3, #1
   17bac:	str	r3, [fp, #-16]
   17bb0:	mov	r3, #0
   17bb4:	str	r3, [fp, #-20]	; 0xffffffec
   17bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17bbc:	add	r2, r3, #1
   17bc0:	str	r2, [fp, #-20]	; 0xffffffec
   17bc4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17bc8:	add	r3, r2, r3
   17bcc:	ldrb	r3, [r3]
   17bd0:	str	r3, [fp, #-12]
   17bd4:	b	17c04 <__assert_fail@plt+0x69c4>
   17bd8:	ldr	r3, [fp, #-12]
   17bdc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17be0:	mul	r2, r2, r3
   17be4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17be8:	add	r1, r3, #1
   17bec:	str	r1, [fp, #-20]	; 0xffffffec
   17bf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17bf4:	add	r3, r1, r3
   17bf8:	ldrb	r3, [r3]
   17bfc:	add	r3, r2, r3
   17c00:	str	r3, [fp, #-12]
   17c04:	ldr	r3, [fp, #-16]
   17c08:	sub	r3, r3, #1
   17c0c:	str	r3, [fp, #-16]
   17c10:	ldr	r3, [fp, #-16]
   17c14:	cmp	r3, #0
   17c18:	bne	17bd8 <__assert_fail@plt+0x6998>
   17c1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c20:	ldr	r2, [fp, #-12]
   17c24:	str	r2, [r3]
   17c28:	mov	r3, #1
   17c2c:	str	r3, [fp, #-8]
   17c30:	b	17d14 <__assert_fail@plt+0x6ad4>
   17c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c38:	add	r2, r3, #1
   17c3c:	str	r2, [fp, #-20]	; 0xffffffec
   17c40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c44:	add	r3, r2, r3
   17c48:	ldrb	r3, [r3]
   17c4c:	str	r3, [fp, #-12]
   17c50:	mov	r3, #1
   17c54:	str	r3, [fp, #-16]
   17c58:	b	17c94 <__assert_fail@plt+0x6a54>
   17c5c:	ldr	r3, [fp, #-12]
   17c60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17c64:	mul	r2, r2, r3
   17c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c6c:	add	r1, r3, #1
   17c70:	str	r1, [fp, #-20]	; 0xffffffec
   17c74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c78:	add	r3, r1, r3
   17c7c:	ldrb	r3, [r3]
   17c80:	add	r3, r2, r3
   17c84:	str	r3, [fp, #-12]
   17c88:	ldr	r3, [fp, #-16]
   17c8c:	add	r3, r3, #1
   17c90:	str	r3, [fp, #-16]
   17c94:	ldr	r3, [fp, #4]
   17c98:	ldr	r3, [r3]
   17c9c:	ldr	r2, [fp, #-16]
   17ca0:	cmp	r2, r3
   17ca4:	bcc	17c5c <__assert_fail@plt+0x6a1c>
   17ca8:	ldr	r3, [fp, #4]
   17cac:	ldr	r3, [r3, #4]
   17cb0:	ldr	r2, [fp, #-8]
   17cb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17cbc:	bl	14444 <__assert_fail@plt+0x3204>
   17cc0:	str	r0, [fp, #-24]	; 0xffffffe8
   17cc4:	ldr	r3, [fp, #-12]
   17cc8:	ldr	r2, [fp, #-8]
   17ccc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17cd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17cd4:	bl	13ee4 <__assert_fail@plt+0x2ca4>
   17cd8:	mov	r2, r0
   17cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ce0:	add	r3, r3, r2
   17ce4:	str	r3, [fp, #-24]	; 0xffffffe8
   17ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cec:	cmp	r3, #0
   17cf0:	beq	17d14 <__assert_fail@plt+0x6ad4>
   17cf4:	ldr	r3, [fp, #-8]
   17cf8:	add	r2, r3, #1
   17cfc:	str	r2, [fp, #-8]
   17d00:	lsl	r3, r3, #2
   17d04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17d08:	add	r3, r2, r3
   17d0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d10:	str	r2, [r3]
   17d14:	ldr	r2, [fp, #-20]	; 0xffffffec
   17d18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d1c:	cmp	r2, r3
   17d20:	bcc	17c34 <__assert_fail@plt+0x69f4>
   17d24:	ldr	r2, [fp, #-20]	; 0xffffffec
   17d28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d2c:	cmp	r2, r3
   17d30:	beq	17d54 <__assert_fail@plt+0x6b14>
   17d34:	movw	r3, #6608	; 0x19d0
   17d38:	movt	r3, #4
   17d3c:	movw	r2, #1394	; 0x572
   17d40:	movw	r1, #4700	; 0x125c
   17d44:	movt	r1, #4
   17d48:	movw	r0, #5364	; 0x14f4
   17d4c:	movt	r0, #4
   17d50:	bl	11240 <__assert_fail@plt>
   17d54:	ldr	r3, [fp, #-8]
   17d58:	mov	r0, r3
   17d5c:	sub	sp, fp, #4
   17d60:	ldr	fp, [sp]
   17d64:	add	sp, sp, #4
   17d68:	pop	{pc}		; (ldr pc, [sp], #4)
   17d6c:	str	fp, [sp, #-8]!
   17d70:	str	lr, [sp, #4]
   17d74:	add	fp, sp, #4
   17d78:	sub	sp, sp, #40	; 0x28
   17d7c:	str	r0, [fp, #-24]	; 0xffffffe8
   17d80:	str	r1, [fp, #-28]	; 0xffffffe4
   17d84:	str	r2, [fp, #-32]	; 0xffffffe0
   17d88:	str	r3, [fp, #-36]	; 0xffffffdc
   17d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d90:	cmp	r3, #0
   17d94:	bne	17da0 <__assert_fail@plt+0x6b60>
   17d98:	mov	r3, #0
   17d9c:	b	17e10 <__assert_fail@plt+0x6bd0>
   17da0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17da4:	mov	r0, r3
   17da8:	bl	17030 <__assert_fail@plt+0x5df0>
   17dac:	str	r0, [fp, #-8]
   17db0:	ldr	r3, [fp, #-8]
   17db4:	cmp	r3, #0
   17db8:	beq	17dd8 <__assert_fail@plt+0x6b98>
   17dbc:	ldr	r3, [fp, #-8]
   17dc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17dc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dcc:	bl	17a00 <__assert_fail@plt+0x67c0>
   17dd0:	mov	r3, r0
   17dd4:	b	17e10 <__assert_fail@plt+0x6bd0>
   17dd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ddc:	sub	r3, fp, #16
   17de0:	mov	r1, r2
   17de4:	mov	r0, r3
   17de8:	bl	17118 <__assert_fail@plt+0x5ed8>
   17dec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17df0:	sub	r3, fp, #16
   17df4:	str	r3, [sp]
   17df8:	mov	r3, r2
   17dfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e08:	bl	17b40 <__assert_fail@plt+0x6900>
   17e0c:	mov	r3, r0
   17e10:	mov	r0, r3
   17e14:	sub	sp, fp, #4
   17e18:	ldr	fp, [sp]
   17e1c:	add	sp, sp, #4
   17e20:	pop	{pc}		; (ldr pc, [sp], #4)
   17e24:	push	{fp}		; (str fp, [sp, #-4]!)
   17e28:	add	fp, sp, #0
   17e2c:	sub	sp, sp, #12
   17e30:	str	r0, [fp, #-8]
   17e34:	ldr	r3, [fp, #-8]
   17e38:	mov	r2, #0
   17e3c:	str	r2, [r3]
   17e40:	ldr	r3, [fp, #-8]
   17e44:	mov	r2, #0
   17e48:	str	r2, [r3, #4]
   17e4c:	ldr	r2, [fp, #-8]
   17e50:	movw	r3, #6628	; 0x19e4
   17e54:	movt	r3, #4
   17e58:	str	r3, [r2, #8]
   17e5c:	nop	{0}
   17e60:	add	sp, fp, #0
   17e64:	pop	{fp}		; (ldr fp, [sp], #4)
   17e68:	bx	lr
   17e6c:	str	fp, [sp, #-8]!
   17e70:	str	lr, [sp, #4]
   17e74:	add	fp, sp, #4
   17e78:	sub	sp, sp, #16
   17e7c:	str	r0, [fp, #-16]
   17e80:	str	r1, [fp, #-20]	; 0xffffffec
   17e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e88:	cmp	r3, #0
   17e8c:	movne	r3, #1
   17e90:	moveq	r3, #0
   17e94:	uxtb	r3, r3
   17e98:	mov	r2, r3
   17e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ea0:	sub	r3, r3, r2
   17ea4:	str	r3, [fp, #-20]	; 0xffffffec
   17ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17eac:	lsr	r3, r3, #5
   17eb0:	add	r3, r3, #1
   17eb4:	str	r3, [fp, #-8]
   17eb8:	ldr	r3, [fp, #-16]
   17ebc:	ldr	r2, [fp, #-8]
   17ec0:	str	r2, [r3]
   17ec4:	ldr	r3, [fp, #-16]
   17ec8:	mov	r2, #0
   17ecc:	str	r2, [r3, #4]
   17ed0:	ldr	r0, [fp, #-8]
   17ed4:	bl	13ab0 <__assert_fail@plt+0x2870>
   17ed8:	mov	r2, r0
   17edc:	ldr	r3, [fp, #-16]
   17ee0:	str	r2, [r3, #8]
   17ee4:	nop	{0}
   17ee8:	sub	sp, fp, #4
   17eec:	ldr	fp, [sp]
   17ef0:	add	sp, sp, #4
   17ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ef8:	str	fp, [sp, #-8]!
   17efc:	str	lr, [sp, #4]
   17f00:	add	fp, sp, #4
   17f04:	sub	sp, sp, #8
   17f08:	str	r0, [fp, #-8]
   17f0c:	ldr	r3, [fp, #-8]
   17f10:	ldr	r3, [r3]
   17f14:	cmp	r3, #0
   17f18:	beq	17f38 <__assert_fail@plt+0x6cf8>
   17f1c:	ldr	r3, [fp, #-8]
   17f20:	ldr	r2, [r3, #8]
   17f24:	ldr	r3, [fp, #-8]
   17f28:	ldr	r3, [r3]
   17f2c:	mov	r1, r3
   17f30:	mov	r0, r2
   17f34:	bl	13b7c <__assert_fail@plt+0x293c>
   17f38:	nop	{0}
   17f3c:	sub	sp, fp, #4
   17f40:	ldr	fp, [sp]
   17f44:	add	sp, sp, #4
   17f48:	pop	{pc}		; (ldr pc, [sp], #4)
   17f4c:	str	fp, [sp, #-8]!
   17f50:	str	lr, [sp, #4]
   17f54:	add	fp, sp, #4
   17f58:	sub	sp, sp, #8
   17f5c:	str	r0, [fp, #-8]
   17f60:	str	r1, [fp, #-12]
   17f64:	ldr	r3, [fp, #-12]
   17f68:	cmp	r3, #1
   17f6c:	movge	r3, r3
   17f70:	movlt	r3, #1
   17f74:	str	r3, [fp, #-12]
   17f78:	ldr	r3, [fp, #-8]
   17f7c:	ldr	r3, [r3]
   17f80:	cmp	r3, #0
   17f84:	beq	17fb4 <__assert_fail@plt+0x6d74>
   17f88:	ldr	r3, [fp, #-8]
   17f8c:	ldr	r0, [r3, #8]
   17f90:	ldr	r3, [fp, #-8]
   17f94:	ldr	r3, [r3]
   17f98:	ldr	r2, [fp, #-12]
   17f9c:	mov	r1, r3
   17fa0:	bl	13af8 <__assert_fail@plt+0x28b8>
   17fa4:	mov	r2, r0
   17fa8:	ldr	r3, [fp, #-8]
   17fac:	str	r2, [r3, #8]
   17fb0:	b	17fc8 <__assert_fail@plt+0x6d88>
   17fb4:	ldr	r0, [fp, #-12]
   17fb8:	bl	13ab0 <__assert_fail@plt+0x2870>
   17fbc:	mov	r2, r0
   17fc0:	ldr	r3, [fp, #-8]
   17fc4:	str	r2, [r3, #8]
   17fc8:	ldr	r3, [fp, #-8]
   17fcc:	ldr	r2, [fp, #-12]
   17fd0:	str	r2, [r3]
   17fd4:	ldr	r3, [fp, #-8]
   17fd8:	ldr	r3, [r3, #4]
   17fdc:	cmp	r3, #0
   17fe0:	rsblt	r3, r3, #0
   17fe4:	ldr	r2, [fp, #-12]
   17fe8:	cmp	r2, r3
   17fec:	bge	17ffc <__assert_fail@plt+0x6dbc>
   17ff0:	ldr	r3, [fp, #-8]
   17ff4:	mov	r2, #0
   17ff8:	str	r2, [r3, #4]
   17ffc:	ldr	r3, [fp, #-8]
   18000:	ldr	r3, [r3, #8]
   18004:	mov	r0, r3
   18008:	sub	sp, fp, #4
   1800c:	ldr	fp, [sp]
   18010:	add	sp, sp, #4
   18014:	pop	{pc}		; (ldr pc, [sp], #4)
   18018:	str	r4, [sp, #-12]!
   1801c:	str	fp, [sp, #4]
   18020:	str	lr, [sp, #8]
   18024:	add	fp, sp, #8
   18028:	sub	sp, sp, #12
   1802c:	str	r0, [fp, #-16]
   18030:	str	r1, [fp, #-20]	; 0xffffffec
   18034:	ldr	r3, [fp, #-20]	; 0xffffffec
   18038:	cmp	r3, #0
   1803c:	blt	18054 <__assert_fail@plt+0x6e14>
   18040:	ldr	r3, [fp, #-20]	; 0xffffffec
   18044:	mov	r1, r3
   18048:	ldr	r0, [fp, #-16]
   1804c:	bl	180b0 <__assert_fail@plt+0x6e70>
   18050:	b	18098 <__assert_fail@plt+0x6e58>
   18054:	ldr	r3, [fp, #-16]
   18058:	mvn	r2, #0
   1805c:	str	r2, [r3, #4]
   18060:	ldr	r4, [fp, #-20]	; 0xffffffec
   18064:	ldr	r3, [fp, #-16]
   18068:	ldr	r3, [r3]
   1806c:	cmp	r3, #0
   18070:	bgt	18088 <__assert_fail@plt+0x6e48>
   18074:	mov	r1, #1
   18078:	ldr	r0, [fp, #-16]
   1807c:	bl	17f4c <__assert_fail@plt+0x6d0c>
   18080:	mov	r3, r0
   18084:	b	18090 <__assert_fail@plt+0x6e50>
   18088:	ldr	r3, [fp, #-16]
   1808c:	ldr	r3, [r3, #8]
   18090:	rsb	r2, r4, #0
   18094:	str	r2, [r3]
   18098:	nop	{0}
   1809c:	sub	sp, fp, #8
   180a0:	ldr	r4, [sp]
   180a4:	ldr	fp, [sp, #4]
   180a8:	add	sp, sp, #8
   180ac:	pop	{pc}		; (ldr pc, [sp], #4)
   180b0:	str	fp, [sp, #-8]!
   180b4:	str	lr, [sp, #4]
   180b8:	add	fp, sp, #4
   180bc:	sub	sp, sp, #8
   180c0:	str	r0, [fp, #-8]
   180c4:	str	r1, [fp, #-12]
   180c8:	ldr	r3, [fp, #-12]
   180cc:	cmp	r3, #0
   180d0:	beq	18118 <__assert_fail@plt+0x6ed8>
   180d4:	ldr	r3, [fp, #-8]
   180d8:	mov	r2, #1
   180dc:	str	r2, [r3, #4]
   180e0:	ldr	r3, [fp, #-8]
   180e4:	ldr	r3, [r3]
   180e8:	cmp	r3, #0
   180ec:	bgt	18104 <__assert_fail@plt+0x6ec4>
   180f0:	mov	r1, #1
   180f4:	ldr	r0, [fp, #-8]
   180f8:	bl	17f4c <__assert_fail@plt+0x6d0c>
   180fc:	mov	r3, r0
   18100:	b	1810c <__assert_fail@plt+0x6ecc>
   18104:	ldr	r3, [fp, #-8]
   18108:	ldr	r3, [r3, #8]
   1810c:	ldr	r2, [fp, #-12]
   18110:	str	r2, [r3]
   18114:	b	18124 <__assert_fail@plt+0x6ee4>
   18118:	ldr	r3, [fp, #-8]
   1811c:	mov	r2, #0
   18120:	str	r2, [r3, #4]
   18124:	nop	{0}
   18128:	sub	sp, fp, #4
   1812c:	ldr	fp, [sp]
   18130:	add	sp, sp, #4
   18134:	pop	{pc}		; (ldr pc, [sp], #4)
   18138:	str	fp, [sp, #-8]!
   1813c:	str	lr, [sp, #4]
   18140:	add	fp, sp, #4
   18144:	sub	sp, sp, #16
   18148:	str	r0, [fp, #-16]
   1814c:	str	r1, [fp, #-20]	; 0xffffffec
   18150:	ldr	r2, [fp, #-16]
   18154:	ldr	r3, [fp, #-20]	; 0xffffffec
   18158:	cmp	r2, r3
   1815c:	beq	181d0 <__assert_fail@plt+0x6f90>
   18160:	ldr	r3, [fp, #-20]	; 0xffffffec
   18164:	ldr	r3, [r3, #4]
   18168:	cmp	r3, #0
   1816c:	rsblt	r3, r3, #0
   18170:	str	r3, [fp, #-8]
   18174:	ldr	r3, [fp, #-16]
   18178:	ldr	r3, [r3]
   1817c:	ldr	r2, [fp, #-8]
   18180:	cmp	r2, r3
   18184:	ble	1819c <__assert_fail@plt+0x6f5c>
   18188:	ldr	r1, [fp, #-8]
   1818c:	ldr	r0, [fp, #-16]
   18190:	bl	17f4c <__assert_fail@plt+0x6d0c>
   18194:	mov	r3, r0
   18198:	b	181a4 <__assert_fail@plt+0x6f64>
   1819c:	ldr	r3, [fp, #-16]
   181a0:	ldr	r3, [r3, #8]
   181a4:	str	r3, [fp, #-12]
   181a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   181ac:	ldr	r3, [r3, #8]
   181b0:	ldr	r2, [fp, #-8]
   181b4:	mov	r1, r3
   181b8:	ldr	r0, [fp, #-12]
   181bc:	bl	13bc8 <__assert_fail@plt+0x2988>
   181c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   181c4:	ldr	r2, [r3, #4]
   181c8:	ldr	r3, [fp, #-16]
   181cc:	str	r2, [r3, #4]
   181d0:	nop	{0}
   181d4:	sub	sp, fp, #4
   181d8:	ldr	fp, [sp]
   181dc:	add	sp, sp, #4
   181e0:	pop	{pc}		; (ldr pc, [sp], #4)
   181e4:	str	fp, [sp, #-8]!
   181e8:	str	lr, [sp, #4]
   181ec:	add	fp, sp, #4
   181f0:	sub	sp, sp, #8
   181f4:	str	r0, [fp, #-8]
   181f8:	str	r1, [fp, #-12]
   181fc:	ldr	r0, [fp, #-8]
   18200:	bl	17e24 <__assert_fail@plt+0x6be4>
   18204:	ldr	r1, [fp, #-12]
   18208:	ldr	r0, [fp, #-8]
   1820c:	bl	18018 <__assert_fail@plt+0x6dd8>
   18210:	nop	{0}
   18214:	sub	sp, fp, #4
   18218:	ldr	fp, [sp]
   1821c:	add	sp, sp, #4
   18220:	pop	{pc}		; (ldr pc, [sp], #4)
   18224:	str	fp, [sp, #-8]!
   18228:	str	lr, [sp, #4]
   1822c:	add	fp, sp, #4
   18230:	sub	sp, sp, #8
   18234:	str	r0, [fp, #-8]
   18238:	str	r1, [fp, #-12]
   1823c:	ldr	r0, [fp, #-8]
   18240:	bl	17e24 <__assert_fail@plt+0x6be4>
   18244:	ldr	r1, [fp, #-12]
   18248:	ldr	r0, [fp, #-8]
   1824c:	bl	180b0 <__assert_fail@plt+0x6e70>
   18250:	nop	{0}
   18254:	sub	sp, fp, #4
   18258:	ldr	fp, [sp]
   1825c:	add	sp, sp, #4
   18260:	pop	{pc}		; (ldr pc, [sp], #4)
   18264:	str	fp, [sp, #-8]!
   18268:	str	lr, [sp, #4]
   1826c:	add	fp, sp, #4
   18270:	sub	sp, sp, #8
   18274:	str	r0, [fp, #-8]
   18278:	str	r1, [fp, #-12]
   1827c:	ldr	r0, [fp, #-8]
   18280:	bl	17e24 <__assert_fail@plt+0x6be4>
   18284:	ldr	r1, [fp, #-12]
   18288:	ldr	r0, [fp, #-8]
   1828c:	bl	18138 <__assert_fail@plt+0x6ef8>
   18290:	nop	{0}
   18294:	sub	sp, fp, #4
   18298:	ldr	fp, [sp]
   1829c:	add	sp, sp, #4
   182a0:	pop	{pc}		; (ldr pc, [sp], #4)
   182a4:	str	fp, [sp, #-8]!
   182a8:	str	lr, [sp, #4]
   182ac:	add	fp, sp, #4
   182b0:	sub	sp, sp, #8
   182b4:	str	r0, [fp, #-8]
   182b8:	mvn	r1, #-2147483648	; 0x80000000
   182bc:	ldr	r0, [fp, #-8]
   182c0:	bl	190b4 <__assert_fail@plt+0x7e74>
   182c4:	mov	r3, r0
   182c8:	cmp	r3, #0
   182cc:	bgt	182f0 <__assert_fail@plt+0x70b0>
   182d0:	mov	r1, #-2147483648	; 0x80000000
   182d4:	ldr	r0, [fp, #-8]
   182d8:	bl	190b4 <__assert_fail@plt+0x7e74>
   182dc:	mov	r3, r0
   182e0:	cmp	r3, #0
   182e4:	blt	182f0 <__assert_fail@plt+0x70b0>
   182e8:	mov	r3, #1
   182ec:	b	182f4 <__assert_fail@plt+0x70b4>
   182f0:	mov	r3, #0
   182f4:	mov	r0, r3
   182f8:	sub	sp, fp, #4
   182fc:	ldr	fp, [sp]
   18300:	add	sp, sp, #4
   18304:	pop	{pc}		; (ldr pc, [sp], #4)
   18308:	push	{fp}		; (str fp, [sp, #-4]!)
   1830c:	add	fp, sp, #0
   18310:	sub	sp, sp, #20
   18314:	str	r0, [fp, #-16]
   18318:	str	r1, [fp, #-20]	; 0xffffffec
   1831c:	mov	r3, #1
   18320:	str	r3, [fp, #-8]
   18324:	mov	r3, #0
   18328:	str	r3, [fp, #-12]
   1832c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18330:	ldr	r3, [fp, #-8]
   18334:	cmp	r2, r3
   18338:	ble	18370 <__assert_fail@plt+0x7130>
   1833c:	ldr	r3, [fp, #-8]
   18340:	lsl	r3, r3, #2
   18344:	ldr	r2, [fp, #-16]
   18348:	add	r3, r2, r3
   1834c:	ldr	r3, [r3]
   18350:	ldr	r2, [fp, #-12]
   18354:	cmp	r2, r3
   18358:	bls	18378 <__assert_fail@plt+0x7138>
   1835c:	ldr	r3, [fp, #-8]
   18360:	add	r3, r3, #1
   18364:	ldr	r2, [fp, #-20]	; 0xffffffec
   18368:	cmp	r2, r3
   1836c:	bne	18378 <__assert_fail@plt+0x7138>
   18370:	mov	r3, #1
   18374:	b	1837c <__assert_fail@plt+0x713c>
   18378:	mov	r3, #0
   1837c:	mov	r0, r3
   18380:	add	sp, fp, #0
   18384:	pop	{fp}		; (ldr fp, [sp], #4)
   18388:	bx	lr
   1838c:	str	fp, [sp, #-8]!
   18390:	str	lr, [sp, #4]
   18394:	add	fp, sp, #4
   18398:	sub	sp, sp, #16
   1839c:	str	r0, [fp, #-16]
   183a0:	ldr	r3, [fp, #-16]
   183a4:	ldr	r3, [r3, #4]
   183a8:	str	r3, [fp, #-8]
   183ac:	ldr	r3, [fp, #-8]
   183b0:	cmp	r3, #0
   183b4:	blt	183e0 <__assert_fail@plt+0x71a0>
   183b8:	ldr	r3, [fp, #-16]
   183bc:	ldr	r3, [r3, #8]
   183c0:	ldr	r1, [fp, #-8]
   183c4:	mov	r0, r3
   183c8:	bl	18308 <__assert_fail@plt+0x70c8>
   183cc:	mov	r3, r0
   183d0:	cmp	r3, #0
   183d4:	beq	183e0 <__assert_fail@plt+0x71a0>
   183d8:	mov	r3, #1
   183dc:	b	183e4 <__assert_fail@plt+0x71a4>
   183e0:	mov	r3, #0
   183e4:	mov	r0, r3
   183e8:	sub	sp, fp, #4
   183ec:	ldr	fp, [sp]
   183f0:	add	sp, sp, #4
   183f4:	pop	{pc}		; (ldr pc, [sp], #4)
   183f8:	str	fp, [sp, #-8]!
   183fc:	str	lr, [sp, #4]
   18400:	add	fp, sp, #4
   18404:	sub	sp, sp, #8
   18408:	str	r0, [fp, #-8]
   1840c:	mvn	r1, #-2147483648	; 0x80000000
   18410:	ldr	r0, [fp, #-8]
   18414:	bl	190b4 <__assert_fail@plt+0x7e74>
   18418:	mov	r3, r0
   1841c:	cmp	r3, #0
   18420:	bgt	18444 <__assert_fail@plt+0x7204>
   18424:	mov	r1, #-2147483648	; 0x80000000
   18428:	ldr	r0, [fp, #-8]
   1842c:	bl	190b4 <__assert_fail@plt+0x7e74>
   18430:	mov	r3, r0
   18434:	cmp	r3, #0
   18438:	blt	18444 <__assert_fail@plt+0x7204>
   1843c:	mov	r3, #1
   18440:	b	18448 <__assert_fail@plt+0x7208>
   18444:	mov	r3, #0
   18448:	mov	r0, r3
   1844c:	sub	sp, fp, #4
   18450:	ldr	fp, [sp]
   18454:	add	sp, sp, #4
   18458:	pop	{pc}		; (ldr pc, [sp], #4)
   1845c:	str	fp, [sp, #-8]!
   18460:	str	lr, [sp, #4]
   18464:	add	fp, sp, #4
   18468:	sub	sp, sp, #8
   1846c:	str	r0, [fp, #-8]
   18470:	ldr	r3, [fp, #-8]
   18474:	ldr	r3, [r3, #4]
   18478:	cmp	r3, #0
   1847c:	blt	184a0 <__assert_fail@plt+0x7260>
   18480:	mvn	r1, #0
   18484:	ldr	r0, [fp, #-8]
   18488:	bl	19264 <__assert_fail@plt+0x8024>
   1848c:	mov	r3, r0
   18490:	cmp	r3, #0
   18494:	bgt	184a0 <__assert_fail@plt+0x7260>
   18498:	mov	r3, #1
   1849c:	b	184a4 <__assert_fail@plt+0x7264>
   184a0:	mov	r3, #0
   184a4:	mov	r0, r3
   184a8:	sub	sp, fp, #4
   184ac:	ldr	fp, [sp]
   184b0:	add	sp, sp, #4
   184b4:	pop	{pc}		; (ldr pc, [sp], #4)
   184b8:	str	fp, [sp, #-8]!
   184bc:	str	lr, [sp, #4]
   184c0:	add	fp, sp, #4
   184c4:	sub	sp, sp, #8
   184c8:	str	r0, [fp, #-8]
   184cc:	movw	r1, #32767	; 0x7fff
   184d0:	ldr	r0, [fp, #-8]
   184d4:	bl	190b4 <__assert_fail@plt+0x7e74>
   184d8:	mov	r3, r0
   184dc:	cmp	r3, #0
   184e0:	bgt	18508 <__assert_fail@plt+0x72c8>
   184e4:	mov	r1, #32768	; 0x8000
   184e8:	movt	r1, #65535	; 0xffff
   184ec:	ldr	r0, [fp, #-8]
   184f0:	bl	190b4 <__assert_fail@plt+0x7e74>
   184f4:	mov	r3, r0
   184f8:	cmp	r3, #0
   184fc:	blt	18508 <__assert_fail@plt+0x72c8>
   18500:	mov	r3, #1
   18504:	b	1850c <__assert_fail@plt+0x72cc>
   18508:	mov	r3, #0
   1850c:	mov	r0, r3
   18510:	sub	sp, fp, #4
   18514:	ldr	fp, [sp]
   18518:	add	sp, sp, #4
   1851c:	pop	{pc}		; (ldr pc, [sp], #4)
   18520:	str	fp, [sp, #-8]!
   18524:	str	lr, [sp, #4]
   18528:	add	fp, sp, #4
   1852c:	sub	sp, sp, #8
   18530:	str	r0, [fp, #-8]
   18534:	ldr	r3, [fp, #-8]
   18538:	ldr	r3, [r3, #4]
   1853c:	cmp	r3, #0
   18540:	blt	18564 <__assert_fail@plt+0x7324>
   18544:	movw	r1, #65535	; 0xffff
   18548:	ldr	r0, [fp, #-8]
   1854c:	bl	19264 <__assert_fail@plt+0x8024>
   18550:	mov	r3, r0
   18554:	cmp	r3, #0
   18558:	bgt	18564 <__assert_fail@plt+0x7324>
   1855c:	mov	r3, #1
   18560:	b	18568 <__assert_fail@plt+0x7328>
   18564:	mov	r3, #0
   18568:	mov	r0, r3
   1856c:	sub	sp, fp, #4
   18570:	ldr	fp, [sp]
   18574:	add	sp, sp, #4
   18578:	pop	{pc}		; (ldr pc, [sp], #4)
   1857c:	str	fp, [sp, #-8]!
   18580:	str	lr, [sp, #4]
   18584:	add	fp, sp, #4
   18588:	sub	sp, sp, #16
   1858c:	str	r0, [fp, #-16]
   18590:	ldr	r0, [fp, #-16]
   18594:	bl	185f0 <__assert_fail@plt+0x73b0>
   18598:	str	r0, [fp, #-8]
   1859c:	mov	r3, #1
   185a0:	str	r3, [fp, #-12]
   185a4:	ldr	r3, [fp, #-16]
   185a8:	ldr	r3, [r3, #4]
   185ac:	cmp	r3, #0
   185b0:	bge	185d4 <__assert_fail@plt+0x7394>
   185b4:	ldr	r3, [fp, #-12]
   185b8:	rsb	r2, r3, #0
   185bc:	ldr	r1, [fp, #-8]
   185c0:	ldr	r3, [fp, #-12]
   185c4:	sub	r3, r1, r3
   185c8:	bic	r3, r3, #-2147483648	; 0x80000000
   185cc:	sub	r3, r2, r3
   185d0:	b	185dc <__assert_fail@plt+0x739c>
   185d4:	ldr	r3, [fp, #-8]
   185d8:	bic	r3, r3, #-2147483648	; 0x80000000
   185dc:	mov	r0, r3
   185e0:	sub	sp, fp, #4
   185e4:	ldr	fp, [sp]
   185e8:	add	sp, sp, #4
   185ec:	pop	{pc}		; (ldr pc, [sp], #4)
   185f0:	push	{fp}		; (str fp, [sp, #-4]!)
   185f4:	add	fp, sp, #0
   185f8:	sub	sp, sp, #12
   185fc:	str	r0, [fp, #-8]
   18600:	ldr	r3, [fp, #-8]
   18604:	ldr	r3, [r3, #4]
   18608:	cmp	r3, #0
   1860c:	beq	18620 <__assert_fail@plt+0x73e0>
   18610:	ldr	r3, [fp, #-8]
   18614:	ldr	r3, [r3, #8]
   18618:	ldr	r3, [r3]
   1861c:	b	18624 <__assert_fail@plt+0x73e4>
   18620:	mov	r3, #0
   18624:	mov	r0, r3
   18628:	add	sp, fp, #0
   1862c:	pop	{fp}		; (ldr fp, [sp], #4)
   18630:	bx	lr
   18634:	push	{fp}		; (str fp, [sp, #-4]!)
   18638:	add	fp, sp, #0
   1863c:	sub	sp, sp, #12
   18640:	str	r0, [fp, #-8]
   18644:	ldr	r3, [fp, #-8]
   18648:	ldr	r3, [r3, #4]
   1864c:	cmp	r3, #0
   18650:	rsblt	r3, r3, #0
   18654:	mov	r0, r3
   18658:	add	sp, fp, #0
   1865c:	pop	{fp}		; (ldr fp, [sp], #4)
   18660:	bx	lr
   18664:	push	{fp}		; (str fp, [sp, #-4]!)
   18668:	add	fp, sp, #0
   1866c:	sub	sp, sp, #12
   18670:	str	r0, [fp, #-8]
   18674:	str	r1, [fp, #-12]
   18678:	ldr	r3, [fp, #-12]
   1867c:	cmp	r3, #0
   18680:	blt	186bc <__assert_fail@plt+0x747c>
   18684:	ldr	r3, [fp, #-8]
   18688:	ldr	r3, [r3, #4]
   1868c:	cmp	r3, #0
   18690:	rsblt	r3, r3, #0
   18694:	ldr	r2, [fp, #-12]
   18698:	cmp	r2, r3
   1869c:	bge	186bc <__assert_fail@plt+0x747c>
   186a0:	ldr	r3, [fp, #-8]
   186a4:	ldr	r2, [r3, #8]
   186a8:	ldr	r3, [fp, #-12]
   186ac:	lsl	r3, r3, #2
   186b0:	add	r3, r2, r3
   186b4:	ldr	r3, [r3]
   186b8:	b	186c0 <__assert_fail@plt+0x7480>
   186bc:	mov	r3, #0
   186c0:	mov	r0, r3
   186c4:	add	sp, fp, #0
   186c8:	pop	{fp}		; (ldr fp, [sp], #4)
   186cc:	bx	lr
   186d0:	str	fp, [sp, #-8]!
   186d4:	str	lr, [sp, #4]
   186d8:	add	fp, sp, #4
   186dc:	sub	sp, sp, #8
   186e0:	str	r0, [fp, #-8]
   186e4:	str	r1, [fp, #-12]
   186e8:	ldr	r3, [fp, #-12]
   186ec:	cmp	r3, #0
   186f0:	movne	r3, #1
   186f4:	moveq	r3, #0
   186f8:	uxtb	r3, r3
   186fc:	mov	r2, r3
   18700:	ldr	r3, [fp, #-12]
   18704:	sub	r3, r3, r2
   18708:	lsr	r3, r3, #5
   1870c:	add	r3, r3, #1
   18710:	mov	r1, r3
   18714:	ldr	r0, [fp, #-8]
   18718:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1871c:	nop	{0}
   18720:	sub	sp, fp, #4
   18724:	ldr	fp, [sp]
   18728:	add	sp, sp, #4
   1872c:	pop	{pc}		; (ldr pc, [sp], #4)
   18730:	push	{fp}		; (str fp, [sp, #-4]!)
   18734:	add	fp, sp, #0
   18738:	sub	sp, sp, #12
   1873c:	str	r0, [fp, #-8]
   18740:	ldr	r3, [fp, #-8]
   18744:	ldr	r3, [r3, #8]
   18748:	mov	r0, r3
   1874c:	add	sp, fp, #0
   18750:	pop	{fp}		; (ldr fp, [sp], #4)
   18754:	bx	lr
   18758:	str	fp, [sp, #-8]!
   1875c:	str	lr, [sp, #4]
   18760:	add	fp, sp, #4
   18764:	sub	sp, sp, #8
   18768:	str	r0, [fp, #-8]
   1876c:	str	r1, [fp, #-12]
   18770:	ldr	r3, [fp, #-12]
   18774:	cmp	r3, #0
   18778:	bgt	1879c <__assert_fail@plt+0x755c>
   1877c:	movw	r3, #6632	; 0x19e8
   18780:	movt	r3, #4
   18784:	movw	r2, #1663	; 0x67f
   18788:	movw	r1, #4700	; 0x125c
   1878c:	movt	r1, #4
   18790:	movw	r0, #4824	; 0x12d8
   18794:	movt	r0, #4
   18798:	bl	11240 <__assert_fail@plt>
   1879c:	ldr	r3, [fp, #-8]
   187a0:	ldr	r3, [r3]
   187a4:	ldr	r2, [fp, #-12]
   187a8:	cmp	r2, r3
   187ac:	ble	187c4 <__assert_fail@plt+0x7584>
   187b0:	ldr	r1, [fp, #-12]
   187b4:	ldr	r0, [fp, #-8]
   187b8:	bl	17f4c <__assert_fail@plt+0x6d0c>
   187bc:	mov	r3, r0
   187c0:	b	187cc <__assert_fail@plt+0x758c>
   187c4:	ldr	r3, [fp, #-8]
   187c8:	ldr	r3, [r3, #8]
   187cc:	mov	r0, r3
   187d0:	sub	sp, fp, #4
   187d4:	ldr	fp, [sp]
   187d8:	add	sp, sp, #4
   187dc:	pop	{pc}		; (ldr pc, [sp], #4)
   187e0:	str	fp, [sp, #-8]!
   187e4:	str	lr, [sp, #4]
   187e8:	add	fp, sp, #4
   187ec:	sub	sp, sp, #8
   187f0:	str	r0, [fp, #-8]
   187f4:	str	r1, [fp, #-12]
   187f8:	ldr	r1, [fp, #-12]
   187fc:	ldr	r0, [fp, #-8]
   18800:	bl	18758 <__assert_fail@plt+0x7518>
   18804:	mov	r3, r0
   18808:	mov	r0, r3
   1880c:	sub	sp, fp, #4
   18810:	ldr	fp, [sp]
   18814:	add	sp, sp, #4
   18818:	pop	{pc}		; (ldr pc, [sp], #4)
   1881c:	str	fp, [sp, #-8]!
   18820:	str	lr, [sp, #4]
   18824:	add	fp, sp, #4
   18828:	sub	sp, sp, #16
   1882c:	str	r0, [fp, #-16]
   18830:	str	r1, [fp, #-20]	; 0xffffffec
   18834:	ldr	r3, [fp, #-16]
   18838:	ldr	r2, [r3, #8]
   1883c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18840:	cmp	r3, #0
   18844:	rsblt	r3, r3, #0
   18848:	mov	r1, r3
   1884c:	mov	r0, r2
   18850:	bl	13ddc <__assert_fail@plt+0x2b9c>
   18854:	str	r0, [fp, #-8]
   18858:	ldr	r3, [fp, #-20]	; 0xffffffec
   1885c:	cmp	r3, #0
   18860:	bge	18870 <__assert_fail@plt+0x7630>
   18864:	ldr	r3, [fp, #-8]
   18868:	rsb	r3, r3, #0
   1886c:	b	18874 <__assert_fail@plt+0x7634>
   18870:	ldr	r3, [fp, #-8]
   18874:	ldr	r2, [fp, #-16]
   18878:	str	r3, [r2, #4]
   1887c:	nop	{0}
   18880:	sub	sp, fp, #4
   18884:	ldr	fp, [sp]
   18888:	add	sp, sp, #4
   1888c:	pop	{pc}		; (ldr pc, [sp], #4)
   18890:	push	{fp}		; (str fp, [sp, #-4]!)
   18894:	add	fp, sp, #0
   18898:	sub	sp, sp, #20
   1889c:	str	r0, [fp, #-8]
   188a0:	str	r1, [fp, #-12]
   188a4:	str	r2, [fp, #-16]
   188a8:	ldr	r3, [fp, #-8]
   188ac:	mov	r2, #0
   188b0:	str	r2, [r3]
   188b4:	ldr	r3, [fp, #-8]
   188b8:	ldr	r2, [fp, #-12]
   188bc:	str	r2, [r3, #8]
   188c0:	ldr	r3, [fp, #-8]
   188c4:	ldr	r2, [fp, #-16]
   188c8:	str	r2, [r3, #4]
   188cc:	ldr	r3, [fp, #-8]
   188d0:	mov	r0, r3
   188d4:	add	sp, fp, #0
   188d8:	pop	{fp}		; (ldr fp, [sp], #4)
   188dc:	bx	lr
   188e0:	str	fp, [sp, #-8]!
   188e4:	str	lr, [sp, #4]
   188e8:	add	fp, sp, #4
   188ec:	sub	sp, sp, #16
   188f0:	str	r0, [fp, #-8]
   188f4:	str	r1, [fp, #-12]
   188f8:	str	r2, [fp, #-16]
   188fc:	ldr	r2, [fp, #-16]
   18900:	ldr	r1, [fp, #-12]
   18904:	ldr	r0, [fp, #-8]
   18908:	bl	18890 <__assert_fail@plt+0x7650>
   1890c:	ldr	r1, [fp, #-16]
   18910:	ldr	r0, [fp, #-8]
   18914:	bl	1881c <__assert_fail@plt+0x75dc>
   18918:	ldr	r3, [fp, #-8]
   1891c:	mov	r0, r3
   18920:	sub	sp, fp, #4
   18924:	ldr	fp, [sp]
   18928:	add	sp, sp, #4
   1892c:	pop	{pc}		; (ldr pc, [sp], #4)
   18930:	str	fp, [sp, #-8]!
   18934:	str	lr, [sp, #4]
   18938:	add	fp, sp, #4
   1893c:	sub	sp, sp, #56	; 0x38
   18940:	str	r0, [fp, #-48]	; 0xffffffd0
   18944:	vstr	d0, [fp, #-60]	; 0xffffffc4
   18948:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1894c:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18950:	vcmp.f64	d6, d7
   18954:	vmrs	APSR_nzcv, fpscr
   18958:	bne	18978 <__assert_fail@plt+0x7738>
   1895c:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18960:	vldr	d6, [pc, #608]	; 18bc8 <__assert_fail@plt+0x7988>
   18964:	vmul.f64	d7, d7, d6
   18968:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1896c:	vcmp.f64	d6, d7
   18970:	vmrs	APSR_nzcv, fpscr
   18974:	bne	18988 <__assert_fail@plt+0x7748>
   18978:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1897c:	mov	r2, #0
   18980:	str	r2, [r3, #4]
   18984:	b	18bb4 <__assert_fail@plt+0x7974>
   18988:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1898c:	vcmpe.f64	d7, #0.0
   18990:	vmrs	APSR_nzcv, fpscr
   18994:	movmi	r3, #1
   18998:	movpl	r3, #0
   1899c:	uxtb	r3, r3
   189a0:	str	r3, [fp, #-16]
   189a4:	ldr	r3, [fp, #-16]
   189a8:	cmp	r3, #0
   189ac:	beq	189bc <__assert_fail@plt+0x777c>
   189b0:	vldr	d7, [fp, #-60]	; 0xffffffc4
   189b4:	vneg.f64	d7, d7
   189b8:	vstr	d7, [fp, #-60]	; 0xffffffc4
   189bc:	vldr	d7, [fp, #-60]	; 0xffffffc4
   189c0:	vldr	d6, [pc, #520]	; 18bd0 <__assert_fail@plt+0x7990>
   189c4:	vcmpe.f64	d7, d6
   189c8:	vmrs	APSR_nzcv, fpscr
   189cc:	bpl	189e0 <__assert_fail@plt+0x77a0>
   189d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   189d4:	mov	r2, #0
   189d8:	str	r2, [r3, #4]
   189dc:	b	18bb4 <__assert_fail@plt+0x7974>
   189e0:	mov	r2, #0
   189e4:	mov	r3, #0
   189e8:	movt	r3, #16880	; 0x41f0
   189ec:	strd	r2, [fp, #-28]	; 0xffffffe4
   189f0:	vldr	d5, [pc, #472]	; 18bd0 <__assert_fail@plt+0x7990>
   189f4:	vldr	d6, [fp, #-28]	; 0xffffffe4
   189f8:	vdiv.f64	d7, d5, d6
   189fc:	vstr	d7, [fp, #-36]	; 0xffffffdc
   18a00:	mov	r3, #1
   18a04:	str	r3, [fp, #-8]
   18a08:	b	18a28 <__assert_fail@plt+0x77e8>
   18a0c:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18a10:	vldr	d7, [fp, #-36]	; 0xffffffdc
   18a14:	vmul.f64	d7, d6, d7
   18a18:	vstr	d7, [fp, #-60]	; 0xffffffc4
   18a1c:	ldr	r3, [fp, #-8]
   18a20:	add	r3, r3, #1
   18a24:	str	r3, [fp, #-8]
   18a28:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18a2c:	vldr	d7, [fp, #-28]	; 0xffffffe4
   18a30:	vcmpe.f64	d6, d7
   18a34:	vmrs	APSR_nzcv, fpscr
   18a38:	bge	18a0c <__assert_fail@plt+0x77cc>
   18a3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18a40:	ldr	r3, [r3]
   18a44:	ldr	r2, [fp, #-8]
   18a48:	cmp	r2, r3
   18a4c:	ble	18a64 <__assert_fail@plt+0x7824>
   18a50:	ldr	r1, [fp, #-8]
   18a54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18a58:	bl	17f4c <__assert_fail@plt+0x6d0c>
   18a5c:	mov	r3, r0
   18a60:	b	18a6c <__assert_fail@plt+0x782c>
   18a64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18a68:	ldr	r3, [r3, #8]
   18a6c:	str	r3, [fp, #-40]	; 0xffffffd8
   18a70:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18a74:	vcvt.u32.f64	s15, d7
   18a78:	vmov	r3, s15
   18a7c:	str	r3, [fp, #-44]	; 0xffffffd4
   18a80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a84:	vmov	s15, r3
   18a88:	vcvt.f64.u32	d7, s15
   18a8c:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18a90:	vsub.f64	d7, d6, d7
   18a94:	vstr	d7, [fp, #-60]	; 0xffffffc4
   18a98:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18a9c:	vldr	d6, [pc, #300]	; 18bd0 <__assert_fail@plt+0x7990>
   18aa0:	vcmpe.f64	d7, d6
   18aa4:	vmrs	APSR_nzcv, fpscr
   18aa8:	bmi	18acc <__assert_fail@plt+0x788c>
   18aac:	movw	r3, #6652	; 0x19fc
   18ab0:	movt	r3, #4
   18ab4:	movw	r2, #1736	; 0x6c8
   18ab8:	movw	r1, #4700	; 0x125c
   18abc:	movt	r1, #4
   18ac0:	movw	r0, #5372	; 0x14fc
   18ac4:	movt	r0, #4
   18ac8:	bl	11240 <__assert_fail@plt>
   18acc:	ldr	r3, [fp, #-8]
   18ad0:	sub	r3, r3, #1
   18ad4:	str	r3, [fp, #-12]
   18ad8:	ldr	r3, [fp, #-12]
   18adc:	lsl	r3, r3, #2
   18ae0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ae4:	add	r3, r2, r3
   18ae8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18aec:	str	r2, [r3]
   18af0:	b	18b78 <__assert_fail@plt+0x7938>
   18af4:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18af8:	vldr	d7, [fp, #-28]	; 0xffffffe4
   18afc:	vmul.f64	d7, d6, d7
   18b00:	vstr	d7, [fp, #-60]	; 0xffffffc4
   18b04:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18b08:	vcvt.u32.f64	s15, d7
   18b0c:	vmov	r3, s15
   18b10:	str	r3, [fp, #-44]	; 0xffffffd4
   18b14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b18:	vmov	s15, r3
   18b1c:	vcvt.f64.u32	d7, s15
   18b20:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18b24:	vsub.f64	d7, d6, d7
   18b28:	vstr	d7, [fp, #-60]	; 0xffffffc4
   18b2c:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18b30:	vldr	d6, [pc, #152]	; 18bd0 <__assert_fail@plt+0x7990>
   18b34:	vcmpe.f64	d7, d6
   18b38:	vmrs	APSR_nzcv, fpscr
   18b3c:	bmi	18b60 <__assert_fail@plt+0x7920>
   18b40:	movw	r3, #6652	; 0x19fc
   18b44:	movt	r3, #4
   18b48:	mov	r2, #1744	; 0x6d0
   18b4c:	movw	r1, #4700	; 0x125c
   18b50:	movt	r1, #4
   18b54:	movw	r0, #5372	; 0x14fc
   18b58:	movt	r0, #4
   18b5c:	bl	11240 <__assert_fail@plt>
   18b60:	ldr	r3, [fp, #-12]
   18b64:	lsl	r3, r3, #2
   18b68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18b6c:	add	r3, r2, r3
   18b70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18b74:	str	r2, [r3]
   18b78:	ldr	r3, [fp, #-12]
   18b7c:	sub	r3, r3, #1
   18b80:	str	r3, [fp, #-12]
   18b84:	ldr	r3, [fp, #-12]
   18b88:	cmp	r3, #0
   18b8c:	bge	18af4 <__assert_fail@plt+0x78b4>
   18b90:	ldr	r3, [fp, #-16]
   18b94:	cmp	r3, #0
   18b98:	beq	18ba8 <__assert_fail@plt+0x7968>
   18b9c:	ldr	r3, [fp, #-8]
   18ba0:	rsb	r3, r3, #0
   18ba4:	b	18bac <__assert_fail@plt+0x796c>
   18ba8:	ldr	r3, [fp, #-8]
   18bac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18bb0:	str	r3, [r2, #4]
   18bb4:	sub	sp, fp, #4
   18bb8:	ldr	fp, [sp]
   18bbc:	add	sp, sp, #4
   18bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   18bc4:	nop	{0}
   18bc8:	andeq	r0, r0, r0
   18bcc:	svccc	0x00e00000
   18bd0:	andeq	r0, r0, r0
   18bd4:	svccc	0x00f00000	; IMB
   18bd8:	str	fp, [sp, #-8]!
   18bdc:	str	lr, [sp, #4]
   18be0:	add	fp, sp, #4
   18be4:	sub	sp, sp, #16
   18be8:	str	r0, [fp, #-8]
   18bec:	vstr	d0, [fp, #-20]	; 0xffffffec
   18bf0:	ldr	r0, [fp, #-8]
   18bf4:	bl	17e24 <__assert_fail@plt+0x6be4>
   18bf8:	vldr	d0, [fp, #-20]	; 0xffffffec
   18bfc:	ldr	r0, [fp, #-8]
   18c00:	bl	18930 <__assert_fail@plt+0x76f0>
   18c04:	nop	{0}
   18c08:	sub	sp, fp, #4
   18c0c:	ldr	fp, [sp]
   18c10:	add	sp, sp, #4
   18c14:	pop	{pc}		; (ldr pc, [sp], #4)
   18c18:	push	{fp}		; (str fp, [sp, #-4]!)
   18c1c:	add	fp, sp, #0
   18c20:	sub	sp, sp, #60	; 0x3c
   18c24:	str	r0, [fp, #-56]	; 0xffffffc8
   18c28:	mov	r2, #0
   18c2c:	mov	r3, #0
   18c30:	movt	r3, #16880	; 0x41f0
   18c34:	strd	r2, [fp, #-44]	; 0xffffffd4
   18c38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18c3c:	ldr	r3, [r3, #4]
   18c40:	cmp	r3, #0
   18c44:	rsblt	r3, r3, #0
   18c48:	str	r3, [fp, #-16]
   18c4c:	ldr	r3, [fp, #-16]
   18c50:	cmp	r3, #0
   18c54:	bne	18c64 <__assert_fail@plt+0x7a24>
   18c58:	mov	r2, #0
   18c5c:	mov	r3, #0
   18c60:	b	18e14 <__assert_fail@plt+0x7bd4>
   18c64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18c68:	ldr	r2, [r3, #8]
   18c6c:	ldr	r3, [fp, #-16]
   18c70:	sub	r3, r3, #1
   18c74:	str	r3, [fp, #-16]
   18c78:	ldr	r3, [fp, #-16]
   18c7c:	lsl	r3, r3, #2
   18c80:	add	r3, r2, r3
   18c84:	ldr	r3, [r3]
   18c88:	str	r3, [fp, #-12]
   18c8c:	ldr	r3, [fp, #-12]
   18c90:	str	r3, [fp, #-32]	; 0xffffffe0
   18c94:	mov	r3, #0
   18c98:	str	r3, [fp, #-36]	; 0xffffffdc
   18c9c:	mov	r3, #8
   18ca0:	str	r3, [fp, #-48]	; 0xffffffd0
   18ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18ca8:	cmp	r3, #31
   18cac:	bhi	18cfc <__assert_fail@plt+0x7abc>
   18cb0:	b	18cd0 <__assert_fail@plt+0x7a90>
   18cb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18cb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18cbc:	lsl	r3, r2, r3
   18cc0:	str	r3, [fp, #-32]	; 0xffffffe0
   18cc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18cc8:	add	r3, r3, #8
   18ccc:	str	r3, [fp, #-36]	; 0xffffffdc
   18cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18cd4:	and	r3, r3, #-16777216	; 0xff000000
   18cd8:	cmp	r3, #0
   18cdc:	beq	18cb4 <__assert_fail@plt+0x7a74>
   18ce0:	b	18cfc <__assert_fail@plt+0x7abc>
   18ce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ce8:	lsl	r3, r3, #1
   18cec:	str	r3, [fp, #-32]	; 0xffffffe0
   18cf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18cf4:	add	r3, r3, #1
   18cf8:	str	r3, [fp, #-36]	; 0xffffffdc
   18cfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d00:	cmp	r3, #0
   18d04:	bge	18ce4 <__assert_fail@plt+0x7aa4>
   18d08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18d0c:	str	r3, [fp, #-8]
   18d10:	ldr	r3, [fp, #-8]
   18d14:	add	r3, r3, #21
   18d18:	str	r3, [fp, #-8]
   18d1c:	ldr	r3, [fp, #-8]
   18d20:	cmp	r3, #0
   18d24:	bge	18d44 <__assert_fail@plt+0x7b04>
   18d28:	ldr	r3, [fp, #-8]
   18d2c:	rsb	r3, r3, #0
   18d30:	mvn	r2, #0
   18d34:	lsl	r3, r2, r3
   18d38:	ldr	r2, [fp, #-12]
   18d3c:	and	r3, r3, r2
   18d40:	str	r3, [fp, #-12]
   18d44:	ldr	r3, [fp, #-12]
   18d48:	vmov	s15, r3
   18d4c:	vcvt.f64.u32	d7, s15
   18d50:	vstr	d7, [fp, #-28]	; 0xffffffe4
   18d54:	b	18ddc <__assert_fail@plt+0x7b9c>
   18d58:	vldr	d6, [fp, #-28]	; 0xffffffe4
   18d5c:	vldr	d7, [fp, #-44]	; 0xffffffd4
   18d60:	vmul.f64	d7, d6, d7
   18d64:	vstr	d7, [fp, #-28]	; 0xffffffe4
   18d68:	ldr	r3, [fp, #-8]
   18d6c:	cmp	r3, #0
   18d70:	ble	18ddc <__assert_fail@plt+0x7b9c>
   18d74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18d78:	ldr	r2, [r3, #8]
   18d7c:	ldr	r3, [fp, #-16]
   18d80:	lsl	r3, r3, #2
   18d84:	add	r3, r2, r3
   18d88:	ldr	r3, [r3]
   18d8c:	str	r3, [fp, #-12]
   18d90:	ldr	r3, [fp, #-8]
   18d94:	sub	r3, r3, #32
   18d98:	str	r3, [fp, #-8]
   18d9c:	ldr	r3, [fp, #-8]
   18da0:	cmp	r3, #0
   18da4:	bge	18dc4 <__assert_fail@plt+0x7b84>
   18da8:	ldr	r3, [fp, #-8]
   18dac:	rsb	r3, r3, #0
   18db0:	mvn	r2, #0
   18db4:	lsl	r3, r2, r3
   18db8:	ldr	r2, [fp, #-12]
   18dbc:	and	r3, r3, r2
   18dc0:	str	r3, [fp, #-12]
   18dc4:	ldr	r3, [fp, #-12]
   18dc8:	vmov	s15, r3
   18dcc:	vcvt.f64.u32	d7, s15
   18dd0:	vldr	d6, [fp, #-28]	; 0xffffffe4
   18dd4:	vadd.f64	d7, d6, d7
   18dd8:	vstr	d7, [fp, #-28]	; 0xffffffe4
   18ddc:	ldr	r3, [fp, #-16]
   18de0:	sub	r3, r3, #1
   18de4:	str	r3, [fp, #-16]
   18de8:	ldr	r3, [fp, #-16]
   18dec:	cmp	r3, #0
   18df0:	bge	18d58 <__assert_fail@plt+0x7b18>
   18df4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18df8:	ldr	r3, [r3, #4]
   18dfc:	cmp	r3, #0
   18e00:	bge	18e10 <__assert_fail@plt+0x7bd0>
   18e04:	vldr	d7, [fp, #-28]	; 0xffffffe4
   18e08:	vneg.f64	d7, d7
   18e0c:	vstr	d7, [fp, #-28]	; 0xffffffe4
   18e10:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18e14:	vmov	d7, r2, r3
   18e18:	vmov.f64	d0, d7
   18e1c:	add	sp, fp, #0
   18e20:	pop	{fp}		; (ldr fp, [sp], #4)
   18e24:	bx	lr
   18e28:	push	{fp}		; (str fp, [sp, #-4]!)
   18e2c:	add	fp, sp, #0
   18e30:	sub	sp, sp, #52	; 0x34
   18e34:	str	r0, [fp, #-40]	; 0xffffffd8
   18e38:	vstr	d0, [fp, #-52]	; 0xffffffcc
   18e3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e40:	ldr	r3, [r3, #4]
   18e44:	str	r3, [fp, #-12]
   18e48:	vldr	d7, [fp, #-52]	; 0xffffffcc
   18e4c:	vcmpe.f64	d7, #0.0
   18e50:	vmrs	APSR_nzcv, fpscr
   18e54:	blt	18e60 <__assert_fail@plt+0x7c20>
   18e58:	vldr	d7, [fp, #-52]	; 0xffffffcc
   18e5c:	b	18e68 <__assert_fail@plt+0x7c28>
   18e60:	vldr	d7, [fp, #-52]	; 0xffffffcc
   18e64:	vneg.f64	d7, d7
   18e68:	vstr	d7, [fp, #-52]	; 0xffffffcc
   18e6c:	ldr	r3, [fp, #-12]
   18e70:	cmp	r3, #0
   18e74:	beq	18f98 <__assert_fail@plt+0x7d58>
   18e78:	ldr	r3, [fp, #-12]
   18e7c:	cmp	r3, #0
   18e80:	rsblt	r3, r3, #0
   18e84:	str	r3, [fp, #-12]
   18e88:	mov	r2, #0
   18e8c:	mov	r3, #0
   18e90:	movt	r3, #16880	; 0x41f0
   18e94:	strd	r2, [fp, #-20]	; 0xffffffec
   18e98:	vldr	d5, [pc, #296]	; 18fc8 <__assert_fail@plt+0x7d88>
   18e9c:	vldr	d6, [fp, #-20]	; 0xffffffec
   18ea0:	vdiv.f64	d7, d5, d6
   18ea4:	vstr	d7, [fp, #-28]	; 0xffffffe4
   18ea8:	mov	r3, #1
   18eac:	str	r3, [fp, #-8]
   18eb0:	b	18ed0 <__assert_fail@plt+0x7c90>
   18eb4:	vldr	d6, [fp, #-52]	; 0xffffffcc
   18eb8:	vldr	d7, [fp, #-28]	; 0xffffffe4
   18ebc:	vmul.f64	d7, d6, d7
   18ec0:	vstr	d7, [fp, #-52]	; 0xffffffcc
   18ec4:	ldr	r3, [fp, #-8]
   18ec8:	add	r3, r3, #1
   18ecc:	str	r3, [fp, #-8]
   18ed0:	ldr	r2, [fp, #-8]
   18ed4:	ldr	r3, [fp, #-12]
   18ed8:	cmp	r2, r3
   18edc:	blt	18eb4 <__assert_fail@plt+0x7c74>
   18ee0:	vldr	d6, [fp, #-52]	; 0xffffffcc
   18ee4:	vldr	d7, [fp, #-20]	; 0xffffffec
   18ee8:	vcmpe.f64	d6, d7
   18eec:	vmrs	APSR_nzcv, fpscr
   18ef0:	blt	18efc <__assert_fail@plt+0x7cbc>
   18ef4:	mvn	r3, #0
   18ef8:	b	18fb4 <__assert_fail@plt+0x7d74>
   18efc:	ldr	r3, [fp, #-12]
   18f00:	str	r3, [fp, #-8]
   18f04:	b	18f84 <__assert_fail@plt+0x7d44>
   18f08:	vldr	d7, [fp, #-52]	; 0xffffffcc
   18f0c:	vcvt.u32.f64	s15, d7
   18f10:	vmov	r3, s15
   18f14:	str	r3, [fp, #-32]	; 0xffffffe0
   18f18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f1c:	ldr	r2, [r3, #8]
   18f20:	ldr	r3, [fp, #-8]
   18f24:	lsl	r3, r3, #2
   18f28:	add	r3, r2, r3
   18f2c:	ldr	r3, [r3]
   18f30:	str	r3, [fp, #-36]	; 0xffffffdc
   18f34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f3c:	cmp	r2, r3
   18f40:	bls	18f4c <__assert_fail@plt+0x7d0c>
   18f44:	mov	r3, #1
   18f48:	b	18fb4 <__assert_fail@plt+0x7d74>
   18f4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f54:	cmp	r2, r3
   18f58:	bcs	18f64 <__assert_fail@plt+0x7d24>
   18f5c:	mvn	r3, #0
   18f60:	b	18fb4 <__assert_fail@plt+0x7d74>
   18f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f68:	vmov	s15, r3
   18f6c:	vcvt.f64.u32	d7, s15
   18f70:	vldr	d6, [fp, #-52]	; 0xffffffcc
   18f74:	vsub.f64	d7, d6, d7
   18f78:	vldr	d6, [fp, #-20]	; 0xffffffec
   18f7c:	vmul.f64	d7, d6, d7
   18f80:	vstr	d7, [fp, #-52]	; 0xffffffcc
   18f84:	ldr	r3, [fp, #-8]
   18f88:	sub	r2, r3, #1
   18f8c:	str	r2, [fp, #-8]
   18f90:	cmp	r3, #0
   18f94:	bgt	18f08 <__assert_fail@plt+0x7cc8>
   18f98:	vldr	d7, [fp, #-52]	; 0xffffffcc
   18f9c:	vcmpe.f64	d7, #0.0
   18fa0:	vmrs	APSR_nzcv, fpscr
   18fa4:	movgt	r3, #1
   18fa8:	movle	r3, #0
   18fac:	uxtb	r3, r3
   18fb0:	rsb	r3, r3, #0
   18fb4:	mov	r0, r3
   18fb8:	add	sp, fp, #0
   18fbc:	pop	{fp}		; (ldr fp, [sp], #4)
   18fc0:	bx	lr
   18fc4:	nop	{0}
   18fc8:	andeq	r0, r0, r0
   18fcc:	svccc	0x00f00000	; IMB
   18fd0:	str	fp, [sp, #-8]!
   18fd4:	str	lr, [sp, #4]
   18fd8:	add	fp, sp, #4
   18fdc:	sub	sp, sp, #16
   18fe0:	str	r0, [fp, #-8]
   18fe4:	vstr	d0, [fp, #-20]	; 0xffffffec
   18fe8:	ldr	r3, [fp, #-8]
   18fec:	ldr	r3, [r3, #4]
   18ff0:	cmp	r3, #0
   18ff4:	bge	19028 <__assert_fail@plt+0x7de8>
   18ff8:	vldr	d7, [fp, #-20]	; 0xffffffec
   18ffc:	vcmpe.f64	d7, #0.0
   19000:	vmrs	APSR_nzcv, fpscr
   19004:	blt	19010 <__assert_fail@plt+0x7dd0>
   19008:	mvn	r3, #0
   1900c:	b	19050 <__assert_fail@plt+0x7e10>
   19010:	vldr	d0, [fp, #-20]	; 0xffffffec
   19014:	ldr	r0, [fp, #-8]
   19018:	bl	18e28 <__assert_fail@plt+0x7be8>
   1901c:	mov	r3, r0
   19020:	rsb	r3, r3, #0
   19024:	b	19050 <__assert_fail@plt+0x7e10>
   19028:	vldr	d7, [fp, #-20]	; 0xffffffec
   1902c:	vcmpe.f64	d7, #0.0
   19030:	vmrs	APSR_nzcv, fpscr
   19034:	bpl	19040 <__assert_fail@plt+0x7e00>
   19038:	mov	r3, #1
   1903c:	b	19050 <__assert_fail@plt+0x7e10>
   19040:	vldr	d0, [fp, #-20]	; 0xffffffec
   19044:	ldr	r0, [fp, #-8]
   19048:	bl	18e28 <__assert_fail@plt+0x7be8>
   1904c:	mov	r3, r0
   19050:	mov	r0, r3
   19054:	sub	sp, fp, #4
   19058:	ldr	fp, [sp]
   1905c:	add	sp, sp, #4
   19060:	pop	{pc}		; (ldr pc, [sp], #4)
   19064:	push	{fp}		; (str fp, [sp, #-4]!)
   19068:	add	fp, sp, #0
   1906c:	sub	sp, sp, #12
   19070:	str	r0, [fp, #-8]
   19074:	ldr	r3, [fp, #-8]
   19078:	ldr	r3, [r3, #4]
   1907c:	cmp	r3, #0
   19080:	movgt	r3, #1
   19084:	movle	r3, #0
   19088:	uxtb	r3, r3
   1908c:	mov	r2, r3
   19090:	ldr	r3, [fp, #-8]
   19094:	ldr	r3, [r3, #4]
   19098:	lsr	r3, r3, #31
   1909c:	uxtb	r3, r3
   190a0:	sub	r3, r2, r3
   190a4:	mov	r0, r3
   190a8:	add	sp, fp, #0
   190ac:	pop	{fp}		; (ldr fp, [sp], #4)
   190b0:	bx	lr
   190b4:	str	fp, [sp, #-8]!
   190b8:	str	lr, [sp, #4]
   190bc:	add	fp, sp, #4
   190c0:	sub	sp, sp, #16
   190c4:	str	r0, [fp, #-16]
   190c8:	str	r1, [fp, #-20]	; 0xffffffec
   190cc:	ldr	r3, [fp, #-16]
   190d0:	ldr	r3, [r3, #4]
   190d4:	str	r3, [fp, #-8]
   190d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   190dc:	cmp	r3, #0
   190e0:	blt	190fc <__assert_fail@plt+0x7ebc>
   190e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   190e8:	mov	r1, r3
   190ec:	ldr	r0, [fp, #-16]
   190f0:	bl	19140 <__assert_fail@plt+0x7f00>
   190f4:	mov	r3, r0
   190f8:	b	1912c <__assert_fail@plt+0x7eec>
   190fc:	ldr	r3, [fp, #-8]
   19100:	cmp	r3, #0
   19104:	blt	19110 <__assert_fail@plt+0x7ed0>
   19108:	mov	r3, #1
   1910c:	b	1912c <__assert_fail@plt+0x7eec>
   19110:	ldr	r3, [fp, #-20]	; 0xffffffec
   19114:	rsb	r3, r3, #0
   19118:	mov	r1, r3
   1911c:	ldr	r0, [fp, #-16]
   19120:	bl	19264 <__assert_fail@plt+0x8024>
   19124:	mov	r3, r0
   19128:	rsb	r3, r3, #0
   1912c:	mov	r0, r3
   19130:	sub	sp, fp, #4
   19134:	ldr	fp, [sp]
   19138:	add	sp, sp, #4
   1913c:	pop	{pc}		; (ldr pc, [sp], #4)
   19140:	str	fp, [sp, #-8]!
   19144:	str	lr, [sp, #4]
   19148:	add	fp, sp, #4
   1914c:	sub	sp, sp, #16
   19150:	str	r0, [fp, #-16]
   19154:	str	r1, [fp, #-20]	; 0xffffffec
   19158:	ldr	r3, [fp, #-16]
   1915c:	ldr	r3, [r3, #4]
   19160:	str	r3, [fp, #-8]
   19164:	ldr	r3, [fp, #-8]
   19168:	cmp	r3, #0
   1916c:	bge	19178 <__assert_fail@plt+0x7f38>
   19170:	mvn	r3, #0
   19174:	b	19188 <__assert_fail@plt+0x7f48>
   19178:	ldr	r1, [fp, #-20]	; 0xffffffec
   1917c:	ldr	r0, [fp, #-16]
   19180:	bl	19264 <__assert_fail@plt+0x8024>
   19184:	mov	r3, r0
   19188:	mov	r0, r3
   1918c:	sub	sp, fp, #4
   19190:	ldr	fp, [sp]
   19194:	add	sp, sp, #4
   19198:	pop	{pc}		; (ldr pc, [sp], #4)
   1919c:	str	fp, [sp, #-8]!
   191a0:	str	lr, [sp, #4]
   191a4:	add	fp, sp, #4
   191a8:	sub	sp, sp, #16
   191ac:	str	r0, [fp, #-16]
   191b0:	str	r1, [fp, #-20]	; 0xffffffec
   191b4:	ldr	r3, [fp, #-16]
   191b8:	ldr	r3, [r3, #4]
   191bc:	str	r3, [fp, #-8]
   191c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   191c4:	ldr	r3, [r3, #4]
   191c8:	str	r3, [fp, #-12]
   191cc:	ldr	r2, [fp, #-8]
   191d0:	ldr	r3, [fp, #-12]
   191d4:	cmp	r2, r3
   191d8:	beq	191fc <__assert_fail@plt+0x7fbc>
   191dc:	ldr	r2, [fp, #-8]
   191e0:	ldr	r3, [fp, #-12]
   191e4:	cmp	r2, r3
   191e8:	bge	191f4 <__assert_fail@plt+0x7fb4>
   191ec:	mvn	r3, #0
   191f0:	b	19250 <__assert_fail@plt+0x8010>
   191f4:	mov	r3, #1
   191f8:	b	19250 <__assert_fail@plt+0x8010>
   191fc:	ldr	r3, [fp, #-8]
   19200:	cmp	r3, #0
   19204:	blt	1922c <__assert_fail@plt+0x7fec>
   19208:	ldr	r3, [fp, #-16]
   1920c:	ldr	r0, [r3, #8]
   19210:	ldr	r3, [fp, #-20]	; 0xffffffec
   19214:	ldr	r3, [r3, #8]
   19218:	ldr	r2, [fp, #-8]
   1921c:	mov	r1, r3
   19220:	bl	13cac <__assert_fail@plt+0x2a6c>
   19224:	mov	r3, r0
   19228:	b	19250 <__assert_fail@plt+0x8010>
   1922c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19230:	ldr	r0, [r3, #8]
   19234:	ldr	r3, [fp, #-16]
   19238:	ldr	r1, [r3, #8]
   1923c:	ldr	r3, [fp, #-8]
   19240:	rsb	r3, r3, #0
   19244:	mov	r2, r3
   19248:	bl	13cac <__assert_fail@plt+0x2a6c>
   1924c:	mov	r3, r0
   19250:	mov	r0, r3
   19254:	sub	sp, fp, #4
   19258:	ldr	fp, [sp]
   1925c:	add	sp, sp, #4
   19260:	pop	{pc}		; (ldr pc, [sp], #4)
   19264:	str	fp, [sp, #-8]!
   19268:	str	lr, [sp, #4]
   1926c:	add	fp, sp, #4
   19270:	sub	sp, sp, #16
   19274:	str	r0, [fp, #-16]
   19278:	str	r1, [fp, #-20]	; 0xffffffec
   1927c:	ldr	r3, [fp, #-16]
   19280:	ldr	r3, [r3, #4]
   19284:	cmp	r3, #0
   19288:	rsblt	r3, r3, #0
   1928c:	str	r3, [fp, #-8]
   19290:	ldr	r3, [fp, #-16]
   19294:	ldr	r3, [r3, #8]
   19298:	ldr	r1, [fp, #-8]
   1929c:	mov	r0, r3
   192a0:	bl	18308 <__assert_fail@plt+0x70c8>
   192a4:	mov	r3, r0
   192a8:	cmp	r3, #0
   192ac:	bne	192b8 <__assert_fail@plt+0x8078>
   192b0:	mov	r3, #1
   192b4:	b	192fc <__assert_fail@plt+0x80bc>
   192b8:	ldr	r0, [fp, #-16]
   192bc:	bl	185f0 <__assert_fail@plt+0x73b0>
   192c0:	str	r0, [fp, #-12]
   192c4:	ldr	r2, [fp, #-12]
   192c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   192cc:	cmp	r2, r3
   192d0:	movhi	r3, #1
   192d4:	movls	r3, #0
   192d8:	uxtb	r3, r3
   192dc:	mov	r1, r3
   192e0:	ldr	r2, [fp, #-12]
   192e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   192e8:	cmp	r2, r3
   192ec:	movcc	r3, #1
   192f0:	movcs	r3, #0
   192f4:	uxtb	r3, r3
   192f8:	sub	r3, r1, r3
   192fc:	mov	r0, r3
   19300:	sub	sp, fp, #4
   19304:	ldr	fp, [sp]
   19308:	add	sp, sp, #4
   1930c:	pop	{pc}		; (ldr pc, [sp], #4)
   19310:	str	fp, [sp, #-8]!
   19314:	str	lr, [sp, #4]
   19318:	add	fp, sp, #4
   1931c:	sub	sp, sp, #8
   19320:	str	r0, [fp, #-8]
   19324:	str	r1, [fp, #-12]
   19328:	ldr	r3, [fp, #-8]
   1932c:	ldr	r0, [r3, #8]
   19330:	ldr	r3, [fp, #-8]
   19334:	ldr	r3, [r3, #4]
   19338:	eor	r1, r3, r3, asr #31
   1933c:	sub	r1, r1, r3, asr #31
   19340:	ldr	r3, [fp, #-12]
   19344:	ldr	r2, [r3, #8]
   19348:	ldr	r3, [fp, #-12]
   1934c:	ldr	r3, [r3, #4]
   19350:	cmp	r3, #0
   19354:	rsblt	r3, r3, #0
   19358:	bl	13d64 <__assert_fail@plt+0x2b24>
   1935c:	mov	r3, r0
   19360:	mov	r0, r3
   19364:	sub	sp, fp, #4
   19368:	ldr	fp, [sp]
   1936c:	add	sp, sp, #4
   19370:	pop	{pc}		; (ldr pc, [sp], #4)
   19374:	str	fp, [sp, #-8]!
   19378:	str	lr, [sp, #4]
   1937c:	add	fp, sp, #4
   19380:	sub	sp, sp, #8
   19384:	str	r0, [fp, #-8]
   19388:	str	r1, [fp, #-12]
   1938c:	ldr	r1, [fp, #-12]
   19390:	ldr	r0, [fp, #-8]
   19394:	bl	18138 <__assert_fail@plt+0x6ef8>
   19398:	ldr	r3, [fp, #-8]
   1939c:	ldr	r3, [r3, #4]
   193a0:	eor	r2, r3, r3, asr #31
   193a4:	sub	r2, r2, r3, asr #31
   193a8:	ldr	r3, [fp, #-8]
   193ac:	str	r2, [r3, #4]
   193b0:	nop	{0}
   193b4:	sub	sp, fp, #4
   193b8:	ldr	fp, [sp]
   193bc:	add	sp, sp, #4
   193c0:	pop	{pc}		; (ldr pc, [sp], #4)
   193c4:	str	fp, [sp, #-8]!
   193c8:	str	lr, [sp, #4]
   193cc:	add	fp, sp, #4
   193d0:	sub	sp, sp, #8
   193d4:	str	r0, [fp, #-8]
   193d8:	str	r1, [fp, #-12]
   193dc:	ldr	r1, [fp, #-12]
   193e0:	ldr	r0, [fp, #-8]
   193e4:	bl	18138 <__assert_fail@plt+0x6ef8>
   193e8:	ldr	r3, [fp, #-8]
   193ec:	ldr	r3, [r3, #4]
   193f0:	rsb	r2, r3, #0
   193f4:	ldr	r3, [fp, #-8]
   193f8:	str	r2, [r3, #4]
   193fc:	nop	{0}
   19400:	sub	sp, fp, #4
   19404:	ldr	fp, [sp]
   19408:	add	sp, sp, #4
   1940c:	pop	{pc}		; (ldr pc, [sp], #4)
   19410:	push	{fp}		; (str fp, [sp, #-4]!)
   19414:	add	fp, sp, #0
   19418:	sub	sp, sp, #28
   1941c:	str	r0, [fp, #-24]	; 0xffffffe8
   19420:	str	r1, [fp, #-28]	; 0xffffffe4
   19424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19428:	ldr	r3, [r3, #4]
   1942c:	str	r3, [fp, #-8]
   19430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19434:	ldr	r2, [r3, #4]
   19438:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1943c:	str	r2, [r3, #4]
   19440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19444:	ldr	r2, [fp, #-8]
   19448:	str	r2, [r3, #4]
   1944c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19450:	ldr	r3, [r3]
   19454:	str	r3, [fp, #-12]
   19458:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1945c:	ldr	r2, [r3]
   19460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19464:	str	r2, [r3]
   19468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1946c:	ldr	r2, [fp, #-12]
   19470:	str	r2, [r3]
   19474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19478:	ldr	r3, [r3, #8]
   1947c:	str	r3, [fp, #-16]
   19480:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19484:	ldr	r2, [r3, #8]
   19488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1948c:	str	r2, [r3, #8]
   19490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19494:	ldr	r2, [fp, #-16]
   19498:	str	r2, [r3, #8]
   1949c:	nop	{0}
   194a0:	add	sp, fp, #0
   194a4:	pop	{fp}		; (ldr fp, [sp], #4)
   194a8:	bx	lr
   194ac:	str	fp, [sp, #-8]!
   194b0:	str	lr, [sp, #4]
   194b4:	add	fp, sp, #4
   194b8:	sub	sp, sp, #32
   194bc:	str	r0, [fp, #-24]	; 0xffffffe8
   194c0:	str	r1, [fp, #-28]	; 0xffffffe4
   194c4:	str	r2, [fp, #-32]	; 0xffffffe0
   194c8:	sub	r3, fp, #16
   194cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   194d0:	mov	r0, r3
   194d4:	bl	18224 <__assert_fail@plt+0x6fe4>
   194d8:	sub	r3, fp, #16
   194dc:	mov	r2, r3
   194e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   194e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194e8:	bl	198a0 <__assert_fail@plt+0x8660>
   194ec:	sub	r3, fp, #16
   194f0:	mov	r0, r3
   194f4:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   194f8:	nop	{0}
   194fc:	sub	sp, fp, #4
   19500:	ldr	fp, [sp]
   19504:	add	sp, sp, #4
   19508:	pop	{pc}		; (ldr pc, [sp], #4)
   1950c:	str	fp, [sp, #-8]!
   19510:	str	lr, [sp, #4]
   19514:	add	fp, sp, #4
   19518:	sub	sp, sp, #16
   1951c:	str	r0, [fp, #-8]
   19520:	str	r1, [fp, #-12]
   19524:	str	r2, [fp, #-16]
   19528:	ldr	r2, [fp, #-12]
   1952c:	ldr	r1, [fp, #-16]
   19530:	ldr	r0, [fp, #-8]
   19534:	bl	19558 <__assert_fail@plt+0x8318>
   19538:	ldr	r1, [fp, #-8]
   1953c:	ldr	r0, [fp, #-8]
   19540:	bl	193c4 <__assert_fail@plt+0x8184>
   19544:	nop	{0}
   19548:	sub	sp, fp, #4
   1954c:	ldr	fp, [sp]
   19550:	add	sp, sp, #4
   19554:	pop	{pc}		; (ldr pc, [sp], #4)
   19558:	str	fp, [sp, #-8]!
   1955c:	str	lr, [sp, #4]
   19560:	add	fp, sp, #4
   19564:	sub	sp, sp, #16
   19568:	str	r0, [fp, #-8]
   1956c:	str	r1, [fp, #-12]
   19570:	str	r2, [fp, #-16]
   19574:	ldr	r1, [fp, #-16]
   19578:	ldr	r0, [fp, #-8]
   1957c:	bl	193c4 <__assert_fail@plt+0x8184>
   19580:	ldr	r2, [fp, #-12]
   19584:	ldr	r1, [fp, #-8]
   19588:	ldr	r0, [fp, #-8]
   1958c:	bl	194ac <__assert_fail@plt+0x826c>
   19590:	nop	{0}
   19594:	sub	sp, fp, #4
   19598:	ldr	fp, [sp]
   1959c:	add	sp, sp, #4
   195a0:	pop	{pc}		; (ldr pc, [sp], #4)
   195a4:	str	fp, [sp, #-8]!
   195a8:	str	lr, [sp, #4]
   195ac:	add	fp, sp, #4
   195b0:	sub	sp, sp, #48	; 0x30
   195b4:	str	r0, [fp, #-32]	; 0xffffffe0
   195b8:	str	r1, [fp, #-36]	; 0xffffffdc
   195bc:	str	r2, [fp, #-40]	; 0xffffffd8
   195c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   195c4:	ldr	r3, [r3, #4]
   195c8:	cmp	r3, #0
   195cc:	rsblt	r3, r3, #0
   195d0:	str	r3, [fp, #-8]
   195d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   195d8:	ldr	r3, [r3, #4]
   195dc:	cmp	r3, #0
   195e0:	rsblt	r3, r3, #0
   195e4:	str	r3, [fp, #-12]
   195e8:	ldr	r2, [fp, #-8]
   195ec:	ldr	r3, [fp, #-12]
   195f0:	cmp	r2, r3
   195f4:	bge	19628 <__assert_fail@plt+0x83e8>
   195f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   195fc:	str	r3, [fp, #-16]
   19600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19604:	str	r3, [fp, #-36]	; 0xffffffdc
   19608:	ldr	r3, [fp, #-16]
   1960c:	str	r3, [fp, #-40]	; 0xffffffd8
   19610:	ldr	r3, [fp, #-8]
   19614:	str	r3, [fp, #-20]	; 0xffffffec
   19618:	ldr	r3, [fp, #-12]
   1961c:	str	r3, [fp, #-8]
   19620:	ldr	r3, [fp, #-20]	; 0xffffffec
   19624:	str	r3, [fp, #-12]
   19628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1962c:	ldr	r3, [r3]
   19630:	ldr	r2, [fp, #-8]
   19634:	cmp	r2, r3
   19638:	blt	19658 <__assert_fail@plt+0x8418>
   1963c:	ldr	r3, [fp, #-8]
   19640:	add	r3, r3, #1
   19644:	mov	r1, r3
   19648:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1964c:	bl	17f4c <__assert_fail@plt+0x6d0c>
   19650:	mov	r3, r0
   19654:	b	19660 <__assert_fail@plt+0x8420>
   19658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1965c:	ldr	r3, [r3, #8]
   19660:	str	r3, [fp, #-24]	; 0xffffffe8
   19664:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19668:	ldr	r1, [r3, #8]
   1966c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19670:	ldr	r2, [r3, #8]
   19674:	ldr	r3, [fp, #-12]
   19678:	str	r3, [sp]
   1967c:	mov	r3, r2
   19680:	ldr	r2, [fp, #-8]
   19684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19688:	bl	140cc <__assert_fail@plt+0x2e8c>
   1968c:	str	r0, [fp, #-28]	; 0xffffffe4
   19690:	ldr	r3, [fp, #-8]
   19694:	lsl	r3, r3, #2
   19698:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1969c:	add	r3, r2, r3
   196a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   196a4:	str	r2, [r3]
   196a8:	ldr	r2, [fp, #-8]
   196ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   196b0:	add	r3, r2, r3
   196b4:	mov	r0, r3
   196b8:	sub	sp, fp, #4
   196bc:	ldr	fp, [sp]
   196c0:	add	sp, sp, #4
   196c4:	pop	{pc}		; (ldr pc, [sp], #4)
   196c8:	str	fp, [sp, #-8]!
   196cc:	str	lr, [sp, #4]
   196d0:	add	fp, sp, #4
   196d4:	sub	sp, sp, #48	; 0x30
   196d8:	str	r0, [fp, #-32]	; 0xffffffe0
   196dc:	str	r1, [fp, #-36]	; 0xffffffdc
   196e0:	str	r2, [fp, #-40]	; 0xffffffd8
   196e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196e8:	ldr	r3, [r3, #4]
   196ec:	cmp	r3, #0
   196f0:	rsblt	r3, r3, #0
   196f4:	str	r3, [fp, #-8]
   196f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   196fc:	ldr	r3, [r3, #4]
   19700:	cmp	r3, #0
   19704:	rsblt	r3, r3, #0
   19708:	str	r3, [fp, #-12]
   1970c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19710:	ldr	r0, [r3, #8]
   19714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19718:	ldr	r2, [r3, #8]
   1971c:	ldr	r3, [fp, #-12]
   19720:	ldr	r1, [fp, #-8]
   19724:	bl	13d64 <__assert_fail@plt+0x2b24>
   19728:	str	r0, [fp, #-16]
   1972c:	ldr	r3, [fp, #-16]
   19730:	cmp	r3, #0
   19734:	ble	197d8 <__assert_fail@plt+0x8598>
   19738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1973c:	ldr	r3, [r3]
   19740:	ldr	r2, [fp, #-8]
   19744:	cmp	r2, r3
   19748:	ble	19760 <__assert_fail@plt+0x8520>
   1974c:	ldr	r1, [fp, #-8]
   19750:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19754:	bl	17f4c <__assert_fail@plt+0x6d0c>
   19758:	mov	r3, r0
   1975c:	b	19768 <__assert_fail@plt+0x8528>
   19760:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19764:	ldr	r3, [r3, #8]
   19768:	str	r3, [fp, #-20]	; 0xffffffec
   1976c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19770:	ldr	r1, [r3, #8]
   19774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19778:	ldr	r2, [r3, #8]
   1977c:	ldr	r3, [fp, #-12]
   19780:	str	r3, [sp]
   19784:	mov	r3, r2
   19788:	ldr	r2, [fp, #-8]
   1978c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19790:	bl	1437c <__assert_fail@plt+0x313c>
   19794:	str	r0, [fp, #-24]	; 0xffffffe8
   19798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1979c:	cmp	r3, #0
   197a0:	beq	197c4 <__assert_fail@plt+0x8584>
   197a4:	movw	r3, #6664	; 0x1a08
   197a8:	movt	r3, #4
   197ac:	movw	r2, #2006	; 0x7d6
   197b0:	movw	r1, #4700	; 0x125c
   197b4:	movt	r1, #4
   197b8:	movw	r0, #5252	; 0x1484
   197bc:	movt	r0, #4
   197c0:	bl	11240 <__assert_fail@plt>
   197c4:	ldr	r1, [fp, #-8]
   197c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   197cc:	bl	13ddc <__assert_fail@plt+0x2b9c>
   197d0:	mov	r3, r0
   197d4:	b	1988c <__assert_fail@plt+0x864c>
   197d8:	ldr	r3, [fp, #-16]
   197dc:	cmp	r3, #0
   197e0:	bge	19888 <__assert_fail@plt+0x8648>
   197e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197e8:	ldr	r3, [r3]
   197ec:	ldr	r2, [fp, #-12]
   197f0:	cmp	r2, r3
   197f4:	ble	1980c <__assert_fail@plt+0x85cc>
   197f8:	ldr	r1, [fp, #-12]
   197fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19800:	bl	17f4c <__assert_fail@plt+0x6d0c>
   19804:	mov	r3, r0
   19808:	b	19814 <__assert_fail@plt+0x85d4>
   1980c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19810:	ldr	r3, [r3, #8]
   19814:	str	r3, [fp, #-20]	; 0xffffffec
   19818:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1981c:	ldr	r1, [r3, #8]
   19820:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19824:	ldr	r2, [r3, #8]
   19828:	ldr	r3, [fp, #-8]
   1982c:	str	r3, [sp]
   19830:	mov	r3, r2
   19834:	ldr	r2, [fp, #-12]
   19838:	ldr	r0, [fp, #-20]	; 0xffffffec
   1983c:	bl	1437c <__assert_fail@plt+0x313c>
   19840:	str	r0, [fp, #-28]	; 0xffffffe4
   19844:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19848:	cmp	r3, #0
   1984c:	beq	19870 <__assert_fail@plt+0x8630>
   19850:	movw	r3, #6664	; 0x1a08
   19854:	movt	r3, #4
   19858:	movw	r2, #2012	; 0x7dc
   1985c:	movw	r1, #4700	; 0x125c
   19860:	movt	r1, #4
   19864:	movw	r0, #5252	; 0x1484
   19868:	movt	r0, #4
   1986c:	bl	11240 <__assert_fail@plt>
   19870:	ldr	r1, [fp, #-12]
   19874:	ldr	r0, [fp, #-20]	; 0xffffffec
   19878:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1987c:	mov	r3, r0
   19880:	rsb	r3, r3, #0
   19884:	b	1988c <__assert_fail@plt+0x864c>
   19888:	mov	r3, #0
   1988c:	mov	r0, r3
   19890:	sub	sp, fp, #4
   19894:	ldr	fp, [sp]
   19898:	add	sp, sp, #4
   1989c:	pop	{pc}		; (ldr pc, [sp], #4)
   198a0:	str	fp, [sp, #-8]!
   198a4:	str	lr, [sp, #4]
   198a8:	add	fp, sp, #4
   198ac:	sub	sp, sp, #24
   198b0:	str	r0, [fp, #-16]
   198b4:	str	r1, [fp, #-20]	; 0xffffffec
   198b8:	str	r2, [fp, #-24]	; 0xffffffe8
   198bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   198c0:	ldr	r2, [r3, #4]
   198c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   198c8:	ldr	r3, [r3, #4]
   198cc:	eor	r3, r3, r2
   198d0:	cmp	r3, #0
   198d4:	blt	198f0 <__assert_fail@plt+0x86b0>
   198d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   198e0:	ldr	r0, [fp, #-16]
   198e4:	bl	195a4 <__assert_fail@plt+0x8364>
   198e8:	str	r0, [fp, #-8]
   198ec:	b	19904 <__assert_fail@plt+0x86c4>
   198f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   198f8:	ldr	r0, [fp, #-16]
   198fc:	bl	196c8 <__assert_fail@plt+0x8488>
   19900:	str	r0, [fp, #-8]
   19904:	ldr	r3, [fp, #-20]	; 0xffffffec
   19908:	ldr	r3, [r3, #4]
   1990c:	cmp	r3, #0
   19910:	bge	19920 <__assert_fail@plt+0x86e0>
   19914:	ldr	r3, [fp, #-8]
   19918:	rsb	r3, r3, #0
   1991c:	b	19924 <__assert_fail@plt+0x86e4>
   19920:	ldr	r3, [fp, #-8]
   19924:	ldr	r2, [fp, #-16]
   19928:	str	r3, [r2, #4]
   1992c:	nop	{0}
   19930:	sub	sp, fp, #4
   19934:	ldr	fp, [sp]
   19938:	add	sp, sp, #4
   1993c:	pop	{pc}		; (ldr pc, [sp], #4)
   19940:	str	fp, [sp, #-8]!
   19944:	str	lr, [sp, #4]
   19948:	add	fp, sp, #4
   1994c:	sub	sp, sp, #24
   19950:	str	r0, [fp, #-16]
   19954:	str	r1, [fp, #-20]	; 0xffffffec
   19958:	str	r2, [fp, #-24]	; 0xffffffe8
   1995c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19960:	ldr	r2, [r3, #4]
   19964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19968:	ldr	r3, [r3, #4]
   1996c:	eor	r3, r3, r2
   19970:	cmp	r3, #0
   19974:	blt	19990 <__assert_fail@plt+0x8750>
   19978:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1997c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19980:	ldr	r0, [fp, #-16]
   19984:	bl	196c8 <__assert_fail@plt+0x8488>
   19988:	str	r0, [fp, #-8]
   1998c:	b	199a4 <__assert_fail@plt+0x8764>
   19990:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19994:	ldr	r1, [fp, #-20]	; 0xffffffec
   19998:	ldr	r0, [fp, #-16]
   1999c:	bl	195a4 <__assert_fail@plt+0x8364>
   199a0:	str	r0, [fp, #-8]
   199a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199a8:	ldr	r3, [r3, #4]
   199ac:	cmp	r3, #0
   199b0:	bge	199c0 <__assert_fail@plt+0x8780>
   199b4:	ldr	r3, [fp, #-8]
   199b8:	rsb	r3, r3, #0
   199bc:	b	199c4 <__assert_fail@plt+0x8784>
   199c0:	ldr	r3, [fp, #-8]
   199c4:	ldr	r2, [fp, #-16]
   199c8:	str	r3, [r2, #4]
   199cc:	nop	{0}
   199d0:	sub	sp, fp, #4
   199d4:	ldr	fp, [sp]
   199d8:	add	sp, sp, #4
   199dc:	pop	{pc}		; (ldr pc, [sp], #4)
   199e0:	str	fp, [sp, #-8]!
   199e4:	str	lr, [sp, #4]
   199e8:	add	fp, sp, #4
   199ec:	sub	sp, sp, #16
   199f0:	str	r0, [fp, #-8]
   199f4:	str	r1, [fp, #-12]
   199f8:	str	r2, [fp, #-16]
   199fc:	ldr	r3, [fp, #-16]
   19a00:	cmp	r3, #0
   19a04:	bge	19a30 <__assert_fail@plt+0x87f0>
   19a08:	ldr	r3, [fp, #-16]
   19a0c:	rsb	r3, r3, #0
   19a10:	mov	r2, r3
   19a14:	ldr	r1, [fp, #-12]
   19a18:	ldr	r0, [fp, #-8]
   19a1c:	bl	19a58 <__assert_fail@plt+0x8818>
   19a20:	ldr	r1, [fp, #-8]
   19a24:	ldr	r0, [fp, #-8]
   19a28:	bl	193c4 <__assert_fail@plt+0x8184>
   19a2c:	b	19a44 <__assert_fail@plt+0x8804>
   19a30:	ldr	r3, [fp, #-16]
   19a34:	mov	r2, r3
   19a38:	ldr	r1, [fp, #-12]
   19a3c:	ldr	r0, [fp, #-8]
   19a40:	bl	19a58 <__assert_fail@plt+0x8818>
   19a44:	nop	{0}
   19a48:	sub	sp, fp, #4
   19a4c:	ldr	fp, [sp]
   19a50:	add	sp, sp, #4
   19a54:	pop	{pc}		; (ldr pc, [sp], #4)
   19a58:	str	fp, [sp, #-8]!
   19a5c:	str	lr, [sp, #4]
   19a60:	add	fp, sp, #4
   19a64:	sub	sp, sp, #32
   19a68:	str	r0, [fp, #-24]	; 0xffffffe8
   19a6c:	str	r1, [fp, #-28]	; 0xffffffe4
   19a70:	str	r2, [fp, #-32]	; 0xffffffe0
   19a74:	sub	r3, fp, #16
   19a78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19a7c:	mov	r0, r3
   19a80:	bl	18224 <__assert_fail@plt+0x6fe4>
   19a84:	sub	r3, fp, #16
   19a88:	mov	r2, r3
   19a8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a94:	bl	19ab8 <__assert_fail@plt+0x8878>
   19a98:	sub	r3, fp, #16
   19a9c:	mov	r0, r3
   19aa0:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   19aa4:	nop	{0}
   19aa8:	sub	sp, fp, #4
   19aac:	ldr	fp, [sp]
   19ab0:	add	sp, sp, #4
   19ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   19ab8:	str	fp, [sp, #-8]!
   19abc:	str	lr, [sp, #4]
   19ac0:	add	fp, sp, #4
   19ac4:	sub	sp, sp, #56	; 0x38
   19ac8:	str	r0, [fp, #-40]	; 0xffffffd8
   19acc:	str	r1, [fp, #-44]	; 0xffffffd4
   19ad0:	str	r2, [fp, #-48]	; 0xffffffd0
   19ad4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19ad8:	ldr	r3, [r3, #4]
   19adc:	str	r3, [fp, #-8]
   19ae0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ae4:	ldr	r3, [r3, #4]
   19ae8:	str	r3, [fp, #-12]
   19aec:	ldr	r3, [fp, #-8]
   19af0:	cmp	r3, #0
   19af4:	beq	19b04 <__assert_fail@plt+0x88c4>
   19af8:	ldr	r3, [fp, #-12]
   19afc:	cmp	r3, #0
   19b00:	bne	19b14 <__assert_fail@plt+0x88d4>
   19b04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19b08:	mov	r2, #0
   19b0c:	str	r2, [r3, #4]
   19b10:	b	19c5c <__assert_fail@plt+0x8a1c>
   19b14:	ldr	r2, [fp, #-8]
   19b18:	ldr	r3, [fp, #-12]
   19b1c:	eor	r3, r3, r2
   19b20:	lsr	r3, r3, #31
   19b24:	uxtb	r3, r3
   19b28:	str	r3, [fp, #-16]
   19b2c:	ldr	r3, [fp, #-8]
   19b30:	cmp	r3, #0
   19b34:	rsblt	r3, r3, #0
   19b38:	str	r3, [fp, #-8]
   19b3c:	ldr	r3, [fp, #-12]
   19b40:	cmp	r3, #0
   19b44:	rsblt	r3, r3, #0
   19b48:	str	r3, [fp, #-12]
   19b4c:	ldr	r2, [fp, #-8]
   19b50:	ldr	r3, [fp, #-12]
   19b54:	add	r3, r2, r3
   19b58:	lsl	r2, r3, #5
   19b5c:	sub	r3, fp, #36	; 0x24
   19b60:	mov	r1, r2
   19b64:	mov	r0, r3
   19b68:	bl	17e6c <__assert_fail@plt+0x6c2c>
   19b6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b70:	str	r3, [fp, #-20]	; 0xffffffec
   19b74:	ldr	r2, [fp, #-8]
   19b78:	ldr	r3, [fp, #-12]
   19b7c:	cmp	r2, r3
   19b80:	blt	19bb0 <__assert_fail@plt+0x8970>
   19b84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19b88:	ldr	r1, [r3, #8]
   19b8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19b90:	ldr	r2, [r3, #8]
   19b94:	ldr	r3, [fp, #-12]
   19b98:	str	r3, [sp]
   19b9c:	mov	r3, r2
   19ba0:	ldr	r2, [fp, #-8]
   19ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ba8:	bl	14a54 <__assert_fail@plt+0x3814>
   19bac:	b	19bd8 <__assert_fail@plt+0x8998>
   19bb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19bb4:	ldr	r1, [r3, #8]
   19bb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19bbc:	ldr	r2, [r3, #8]
   19bc0:	ldr	r3, [fp, #-8]
   19bc4:	str	r3, [sp]
   19bc8:	mov	r3, r2
   19bcc:	ldr	r2, [fp, #-12]
   19bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19bd4:	bl	14a54 <__assert_fail@plt+0x3814>
   19bd8:	ldr	r2, [fp, #-8]
   19bdc:	ldr	r3, [fp, #-12]
   19be0:	add	r3, r2, r3
   19be4:	str	r3, [fp, #-24]	; 0xffffffe8
   19be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bec:	sub	r3, r3, #-1073741823	; 0xc0000001
   19bf0:	lsl	r3, r3, #2
   19bf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   19bf8:	add	r3, r2, r3
   19bfc:	ldr	r3, [r3]
   19c00:	cmp	r3, #0
   19c04:	moveq	r3, #1
   19c08:	movne	r3, #0
   19c0c:	uxtb	r3, r3
   19c10:	mov	r2, r3
   19c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c18:	sub	r3, r3, r2
   19c1c:	str	r3, [fp, #-24]	; 0xffffffe8
   19c20:	ldr	r3, [fp, #-16]
   19c24:	cmp	r3, #0
   19c28:	beq	19c38 <__assert_fail@plt+0x89f8>
   19c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c30:	rsb	r3, r3, #0
   19c34:	b	19c3c <__assert_fail@plt+0x89fc>
   19c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c3c:	str	r3, [fp, #-32]	; 0xffffffe0
   19c40:	sub	r3, fp, #36	; 0x24
   19c44:	mov	r1, r3
   19c48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c4c:	bl	19410 <__assert_fail@plt+0x81d0>
   19c50:	sub	r3, fp, #36	; 0x24
   19c54:	mov	r0, r3
   19c58:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   19c5c:	sub	sp, fp, #4
   19c60:	ldr	fp, [sp]
   19c64:	add	sp, sp, #4
   19c68:	pop	{pc}		; (ldr pc, [sp], #4)
   19c6c:	str	fp, [sp, #-8]!
   19c70:	str	lr, [sp, #4]
   19c74:	add	fp, sp, #4
   19c78:	sub	sp, sp, #40	; 0x28
   19c7c:	str	r0, [fp, #-32]	; 0xffffffe0
   19c80:	str	r1, [fp, #-36]	; 0xffffffdc
   19c84:	str	r2, [fp, #-40]	; 0xffffffd8
   19c88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19c8c:	ldr	r3, [r3, #4]
   19c90:	cmp	r3, #0
   19c94:	rsblt	r3, r3, #0
   19c98:	str	r3, [fp, #-12]
   19c9c:	ldr	r3, [fp, #-12]
   19ca0:	cmp	r3, #0
   19ca4:	bne	19cb8 <__assert_fail@plt+0x8a78>
   19ca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19cac:	mov	r2, #0
   19cb0:	str	r2, [r3, #4]
   19cb4:	b	19dfc <__assert_fail@plt+0x8bbc>
   19cb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19cbc:	lsr	r3, r3, #5
   19cc0:	str	r3, [fp, #-16]
   19cc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19cc8:	and	r3, r3, #31
   19ccc:	str	r3, [fp, #-20]	; 0xffffffec
   19cd0:	ldr	r2, [fp, #-12]
   19cd4:	ldr	r3, [fp, #-16]
   19cd8:	add	r3, r2, r3
   19cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19ce0:	cmp	r2, #0
   19ce4:	movne	r2, #1
   19ce8:	moveq	r2, #0
   19cec:	uxtb	r2, r2
   19cf0:	add	r3, r3, r2
   19cf4:	str	r3, [fp, #-8]
   19cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19cfc:	ldr	r3, [r3]
   19d00:	ldr	r2, [fp, #-8]
   19d04:	cmp	r2, r3
   19d08:	ble	19d20 <__assert_fail@plt+0x8ae0>
   19d0c:	ldr	r1, [fp, #-8]
   19d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d14:	bl	17f4c <__assert_fail@plt+0x6d0c>
   19d18:	mov	r3, r0
   19d1c:	b	19d28 <__assert_fail@plt+0x8ae8>
   19d20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d24:	ldr	r3, [r3, #8]
   19d28:	str	r3, [fp, #-24]	; 0xffffffe8
   19d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d30:	cmp	r3, #0
   19d34:	beq	19da4 <__assert_fail@plt+0x8b64>
   19d38:	ldr	r3, [fp, #-16]
   19d3c:	lsl	r3, r3, #2
   19d40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d44:	add	r0, r2, r3
   19d48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19d4c:	ldr	r1, [r3, #8]
   19d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d54:	ldr	r2, [fp, #-12]
   19d58:	bl	14cf8 <__assert_fail@plt+0x3ab8>
   19d5c:	str	r0, [fp, #-28]	; 0xffffffe4
   19d60:	ldr	r3, [fp, #-8]
   19d64:	sub	r3, r3, #-1073741823	; 0xc0000001
   19d68:	lsl	r3, r3, #2
   19d6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d70:	add	r3, r2, r3
   19d74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19d78:	str	r2, [r3]
   19d7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d80:	cmp	r3, #0
   19d84:	moveq	r3, #1
   19d88:	movne	r3, #0
   19d8c:	uxtb	r3, r3
   19d90:	mov	r2, r3
   19d94:	ldr	r3, [fp, #-8]
   19d98:	sub	r3, r3, r2
   19d9c:	str	r3, [fp, #-8]
   19da0:	b	19dc8 <__assert_fail@plt+0x8b88>
   19da4:	ldr	r3, [fp, #-16]
   19da8:	lsl	r3, r3, #2
   19dac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19db0:	add	r0, r2, r3
   19db4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19db8:	ldr	r3, [r3, #8]
   19dbc:	ldr	r2, [fp, #-12]
   19dc0:	mov	r1, r3
   19dc4:	bl	13c40 <__assert_fail@plt+0x2a00>
   19dc8:	ldr	r1, [fp, #-16]
   19dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dd0:	bl	13e8c <__assert_fail@plt+0x2c4c>
   19dd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19dd8:	ldr	r3, [r3, #4]
   19ddc:	cmp	r3, #0
   19de0:	bge	19df0 <__assert_fail@plt+0x8bb0>
   19de4:	ldr	r3, [fp, #-8]
   19de8:	rsb	r3, r3, #0
   19dec:	b	19df4 <__assert_fail@plt+0x8bb4>
   19df0:	ldr	r3, [fp, #-8]
   19df4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19df8:	str	r3, [r2, #4]
   19dfc:	sub	sp, fp, #4
   19e00:	ldr	fp, [sp]
   19e04:	add	sp, sp, #4
   19e08:	pop	{pc}		; (ldr pc, [sp], #4)
   19e0c:	str	fp, [sp, #-8]!
   19e10:	str	lr, [sp, #4]
   19e14:	add	fp, sp, #4
   19e18:	sub	sp, sp, #32
   19e1c:	str	r0, [fp, #-24]	; 0xffffffe8
   19e20:	str	r1, [fp, #-28]	; 0xffffffe4
   19e24:	str	r2, [fp, #-32]	; 0xffffffe0
   19e28:	sub	r3, fp, #16
   19e2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19e30:	mov	r0, r3
   19e34:	bl	18224 <__assert_fail@plt+0x6fe4>
   19e38:	sub	r2, fp, #16
   19e3c:	sub	r3, fp, #16
   19e40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e44:	mov	r0, r3
   19e48:	bl	19ab8 <__assert_fail@plt+0x8878>
   19e4c:	sub	r3, fp, #16
   19e50:	mov	r2, r3
   19e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e5c:	bl	198a0 <__assert_fail@plt+0x8660>
   19e60:	sub	r3, fp, #16
   19e64:	mov	r0, r3
   19e68:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   19e6c:	nop	{0}
   19e70:	sub	sp, fp, #4
   19e74:	ldr	fp, [sp]
   19e78:	add	sp, sp, #4
   19e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   19e80:	str	fp, [sp, #-8]!
   19e84:	str	lr, [sp, #4]
   19e88:	add	fp, sp, #4
   19e8c:	sub	sp, sp, #32
   19e90:	str	r0, [fp, #-24]	; 0xffffffe8
   19e94:	str	r1, [fp, #-28]	; 0xffffffe4
   19e98:	str	r2, [fp, #-32]	; 0xffffffe0
   19e9c:	sub	r3, fp, #16
   19ea0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19ea4:	mov	r0, r3
   19ea8:	bl	18224 <__assert_fail@plt+0x6fe4>
   19eac:	sub	r2, fp, #16
   19eb0:	sub	r3, fp, #16
   19eb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19eb8:	mov	r0, r3
   19ebc:	bl	19ab8 <__assert_fail@plt+0x8878>
   19ec0:	sub	r3, fp, #16
   19ec4:	mov	r2, r3
   19ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed0:	bl	19940 <__assert_fail@plt+0x8700>
   19ed4:	sub	r3, fp, #16
   19ed8:	mov	r0, r3
   19edc:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   19ee0:	nop	{0}
   19ee4:	sub	sp, fp, #4
   19ee8:	ldr	fp, [sp]
   19eec:	add	sp, sp, #4
   19ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   19ef4:	str	fp, [sp, #-8]!
   19ef8:	str	lr, [sp, #4]
   19efc:	add	fp, sp, #4
   19f00:	sub	sp, sp, #32
   19f04:	str	r0, [fp, #-24]	; 0xffffffe8
   19f08:	str	r1, [fp, #-28]	; 0xffffffe4
   19f0c:	str	r2, [fp, #-32]	; 0xffffffe0
   19f10:	sub	r3, fp, #16
   19f14:	mov	r0, r3
   19f18:	bl	17e24 <__assert_fail@plt+0x6be4>
   19f1c:	sub	r3, fp, #16
   19f20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19f24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f28:	mov	r0, r3
   19f2c:	bl	19ab8 <__assert_fail@plt+0x8878>
   19f30:	sub	r3, fp, #16
   19f34:	mov	r2, r3
   19f38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f40:	bl	198a0 <__assert_fail@plt+0x8660>
   19f44:	sub	r3, fp, #16
   19f48:	mov	r0, r3
   19f4c:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   19f50:	nop	{0}
   19f54:	sub	sp, fp, #4
   19f58:	ldr	fp, [sp]
   19f5c:	add	sp, sp, #4
   19f60:	pop	{pc}		; (ldr pc, [sp], #4)
   19f64:	str	fp, [sp, #-8]!
   19f68:	str	lr, [sp, #4]
   19f6c:	add	fp, sp, #4
   19f70:	sub	sp, sp, #32
   19f74:	str	r0, [fp, #-24]	; 0xffffffe8
   19f78:	str	r1, [fp, #-28]	; 0xffffffe4
   19f7c:	str	r2, [fp, #-32]	; 0xffffffe0
   19f80:	sub	r3, fp, #16
   19f84:	mov	r0, r3
   19f88:	bl	17e24 <__assert_fail@plt+0x6be4>
   19f8c:	sub	r3, fp, #16
   19f90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19f94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f98:	mov	r0, r3
   19f9c:	bl	19ab8 <__assert_fail@plt+0x8878>
   19fa0:	sub	r3, fp, #16
   19fa4:	mov	r2, r3
   19fa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fb0:	bl	19940 <__assert_fail@plt+0x8700>
   19fb4:	sub	r3, fp, #16
   19fb8:	mov	r0, r3
   19fbc:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   19fc0:	nop	{0}
   19fc4:	sub	sp, fp, #4
   19fc8:	ldr	fp, [sp]
   19fcc:	add	sp, sp, #4
   19fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   19fd4:	str	fp, [sp, #-8]!
   19fd8:	str	lr, [sp, #4]
   19fdc:	add	fp, sp, #4
   19fe0:	sub	sp, sp, #88	; 0x58
   19fe4:	str	r0, [fp, #-72]	; 0xffffffb8
   19fe8:	str	r1, [fp, #-76]	; 0xffffffb4
   19fec:	str	r2, [fp, #-80]	; 0xffffffb0
   19ff0:	str	r3, [fp, #-84]	; 0xffffffac
   19ff4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19ff8:	ldr	r3, [r3, #4]
   19ffc:	str	r3, [fp, #-12]
   1a000:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a004:	ldr	r3, [r3, #4]
   1a008:	str	r3, [fp, #-16]
   1a00c:	ldr	r3, [fp, #-16]
   1a010:	cmp	r3, #0
   1a014:	bne	1a024 <__assert_fail@plt+0x8de4>
   1a018:	movw	r0, #5380	; 0x1504
   1a01c:	movt	r0, #4
   1a020:	bl	13840 <__assert_fail@plt+0x2600>
   1a024:	ldr	r3, [fp, #-12]
   1a028:	cmp	r3, #0
   1a02c:	bne	1a068 <__assert_fail@plt+0x8e28>
   1a030:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a034:	cmp	r3, #0
   1a038:	beq	1a048 <__assert_fail@plt+0x8e08>
   1a03c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a040:	mov	r2, #0
   1a044:	str	r2, [r3, #4]
   1a048:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a04c:	cmp	r3, #0
   1a050:	beq	1a060 <__assert_fail@plt+0x8e20>
   1a054:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a058:	mov	r2, #0
   1a05c:	str	r2, [r3, #4]
   1a060:	mov	r3, #0
   1a064:	b	1a3cc <__assert_fail@plt+0x918c>
   1a068:	ldr	r3, [fp, #-12]
   1a06c:	cmp	r3, #0
   1a070:	rsblt	r3, r3, #0
   1a074:	str	r3, [fp, #-20]	; 0xffffffec
   1a078:	ldr	r3, [fp, #-16]
   1a07c:	cmp	r3, #0
   1a080:	rsblt	r3, r3, #0
   1a084:	str	r3, [fp, #-24]	; 0xffffffe8
   1a088:	ldr	r2, [fp, #-16]
   1a08c:	ldr	r3, [fp, #-12]
   1a090:	eor	r3, r3, r2
   1a094:	str	r3, [fp, #-28]	; 0xffffffe4
   1a098:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a09c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0a0:	cmp	r2, r3
   1a0a4:	bge	1a180 <__assert_fail@plt+0x8f40>
   1a0a8:	ldr	r3, [fp, #4]
   1a0ac:	cmp	r3, #1
   1a0b0:	bne	1a0f8 <__assert_fail@plt+0x8eb8>
   1a0b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a0b8:	cmp	r3, #0
   1a0bc:	blt	1a0f8 <__assert_fail@plt+0x8eb8>
   1a0c0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a0c4:	cmp	r3, #0
   1a0c8:	beq	1a0dc <__assert_fail@plt+0x8e9c>
   1a0cc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a0d0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a0d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a0d8:	bl	19940 <__assert_fail@plt+0x8700>
   1a0dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a0e0:	cmp	r3, #0
   1a0e4:	beq	1a178 <__assert_fail@plt+0x8f38>
   1a0e8:	mov	r1, #1
   1a0ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a0f0:	bl	180b0 <__assert_fail@plt+0x6e70>
   1a0f4:	b	1a178 <__assert_fail@plt+0x8f38>
   1a0f8:	ldr	r3, [fp, #4]
   1a0fc:	cmp	r3, #0
   1a100:	bne	1a148 <__assert_fail@plt+0x8f08>
   1a104:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a108:	cmp	r3, #0
   1a10c:	bge	1a148 <__assert_fail@plt+0x8f08>
   1a110:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a114:	cmp	r3, #0
   1a118:	beq	1a12c <__assert_fail@plt+0x8eec>
   1a11c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a120:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a124:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a128:	bl	198a0 <__assert_fail@plt+0x8660>
   1a12c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a130:	cmp	r3, #0
   1a134:	beq	1a178 <__assert_fail@plt+0x8f38>
   1a138:	mvn	r1, #0
   1a13c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a140:	bl	18018 <__assert_fail@plt+0x6dd8>
   1a144:	b	1a178 <__assert_fail@plt+0x8f38>
   1a148:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a14c:	cmp	r3, #0
   1a150:	beq	1a160 <__assert_fail@plt+0x8f20>
   1a154:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a158:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a15c:	bl	18138 <__assert_fail@plt+0x6ef8>
   1a160:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a164:	cmp	r3, #0
   1a168:	beq	1a178 <__assert_fail@plt+0x8f38>
   1a16c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a170:	mov	r2, #0
   1a174:	str	r2, [r3, #4]
   1a178:	mov	r3, #1
   1a17c:	b	1a3cc <__assert_fail@plt+0x918c>
   1a180:	sub	r3, fp, #64	; 0x40
   1a184:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a188:	mov	r0, r3
   1a18c:	bl	18264 <__assert_fail@plt+0x7024>
   1a190:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a194:	str	r3, [fp, #-32]	; 0xffffffe0
   1a198:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a19c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a1a0:	sub	r3, r2, r3
   1a1a4:	add	r3, r3, #1
   1a1a8:	str	r3, [fp, #-36]	; 0xffffffdc
   1a1ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a1b0:	cmp	r3, #0
   1a1b4:	beq	1a1dc <__assert_fail@plt+0x8f9c>
   1a1b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1bc:	lsl	r2, r3, #5
   1a1c0:	sub	r3, fp, #52	; 0x34
   1a1c4:	mov	r1, r2
   1a1c8:	mov	r0, r3
   1a1cc:	bl	17e6c <__assert_fail@plt+0x6c2c>
   1a1d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a1d4:	str	r3, [fp, #-8]
   1a1d8:	b	1a1e4 <__assert_fail@plt+0x8fa4>
   1a1dc:	mov	r3, #0
   1a1e0:	str	r3, [fp, #-8]
   1a1e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a1e8:	ldr	r2, [r3, #8]
   1a1ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a1f0:	str	r3, [sp]
   1a1f4:	mov	r3, r2
   1a1f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a1fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a200:	ldr	r0, [fp, #-8]
   1a204:	bl	16ed8 <__assert_fail@plt+0x5c98>
   1a208:	ldr	r3, [fp, #-8]
   1a20c:	cmp	r3, #0
   1a210:	beq	1a26c <__assert_fail@plt+0x902c>
   1a214:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a218:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a21c:	lsl	r3, r3, #2
   1a220:	ldr	r2, [fp, #-8]
   1a224:	add	r3, r2, r3
   1a228:	ldr	r3, [r3]
   1a22c:	cmp	r3, #0
   1a230:	moveq	r3, #1
   1a234:	movne	r3, #0
   1a238:	uxtb	r3, r3
   1a23c:	mov	r2, r3
   1a240:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a244:	sub	r3, r3, r2
   1a248:	str	r3, [fp, #-36]	; 0xffffffdc
   1a24c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a250:	cmp	r3, #0
   1a254:	bge	1a264 <__assert_fail@plt+0x9024>
   1a258:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a25c:	rsb	r3, r3, #0
   1a260:	b	1a268 <__assert_fail@plt+0x9028>
   1a264:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a268:	str	r3, [fp, #-48]	; 0xffffffd0
   1a26c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a274:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1a278:	str	r0, [fp, #-40]	; 0xffffffd8
   1a27c:	ldr	r3, [fp, #-12]
   1a280:	cmp	r3, #0
   1a284:	bge	1a294 <__assert_fail@plt+0x9054>
   1a288:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a28c:	rsb	r3, r3, #0
   1a290:	b	1a298 <__assert_fail@plt+0x9058>
   1a294:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a298:	str	r3, [fp, #-60]	; 0xffffffc4
   1a29c:	ldr	r3, [fp, #4]
   1a2a0:	cmp	r3, #0
   1a2a4:	bne	1a304 <__assert_fail@plt+0x90c4>
   1a2a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a2ac:	cmp	r3, #0
   1a2b0:	bge	1a304 <__assert_fail@plt+0x90c4>
   1a2b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a2b8:	cmp	r3, #0
   1a2bc:	beq	1a304 <__assert_fail@plt+0x90c4>
   1a2c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a2c4:	cmp	r3, #0
   1a2c8:	beq	1a2e0 <__assert_fail@plt+0x90a0>
   1a2cc:	sub	r1, fp, #52	; 0x34
   1a2d0:	sub	r3, fp, #52	; 0x34
   1a2d4:	mov	r2, #1
   1a2d8:	mov	r0, r3
   1a2dc:	bl	1950c <__assert_fail@plt+0x82cc>
   1a2e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a2e4:	cmp	r3, #0
   1a2e8:	beq	1a368 <__assert_fail@plt+0x9128>
   1a2ec:	sub	r1, fp, #64	; 0x40
   1a2f0:	sub	r3, fp, #64	; 0x40
   1a2f4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a2f8:	mov	r0, r3
   1a2fc:	bl	198a0 <__assert_fail@plt+0x8660>
   1a300:	b	1a368 <__assert_fail@plt+0x9128>
   1a304:	ldr	r3, [fp, #4]
   1a308:	cmp	r3, #1
   1a30c:	bne	1a368 <__assert_fail@plt+0x9128>
   1a310:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a314:	cmp	r3, #0
   1a318:	blt	1a368 <__assert_fail@plt+0x9128>
   1a31c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a320:	cmp	r3, #0
   1a324:	beq	1a368 <__assert_fail@plt+0x9128>
   1a328:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a32c:	cmp	r3, #0
   1a330:	beq	1a348 <__assert_fail@plt+0x9108>
   1a334:	sub	r1, fp, #52	; 0x34
   1a338:	sub	r3, fp, #52	; 0x34
   1a33c:	mov	r2, #1
   1a340:	mov	r0, r3
   1a344:	bl	194ac <__assert_fail@plt+0x826c>
   1a348:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a34c:	cmp	r3, #0
   1a350:	beq	1a368 <__assert_fail@plt+0x9128>
   1a354:	sub	r1, fp, #64	; 0x40
   1a358:	sub	r3, fp, #64	; 0x40
   1a35c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a360:	mov	r0, r3
   1a364:	bl	19940 <__assert_fail@plt+0x8700>
   1a368:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a36c:	cmp	r3, #0
   1a370:	beq	1a390 <__assert_fail@plt+0x9150>
   1a374:	sub	r3, fp, #52	; 0x34
   1a378:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a37c:	mov	r0, r3
   1a380:	bl	19410 <__assert_fail@plt+0x81d0>
   1a384:	sub	r3, fp, #52	; 0x34
   1a388:	mov	r0, r3
   1a38c:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1a390:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a394:	cmp	r3, #0
   1a398:	beq	1a3ac <__assert_fail@plt+0x916c>
   1a39c:	sub	r3, fp, #64	; 0x40
   1a3a0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a3a4:	mov	r0, r3
   1a3a8:	bl	19410 <__assert_fail@plt+0x81d0>
   1a3ac:	sub	r3, fp, #64	; 0x40
   1a3b0:	mov	r0, r3
   1a3b4:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1a3b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a3bc:	cmp	r3, #0
   1a3c0:	movne	r3, #1
   1a3c4:	moveq	r3, #0
   1a3c8:	uxtb	r3, r3
   1a3cc:	mov	r0, r3
   1a3d0:	sub	sp, fp, #4
   1a3d4:	ldr	fp, [sp]
   1a3d8:	add	sp, sp, #4
   1a3dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3e0:	str	fp, [sp, #-8]!
   1a3e4:	str	lr, [sp, #4]
   1a3e8:	add	fp, sp, #4
   1a3ec:	sub	sp, sp, #24
   1a3f0:	str	r0, [fp, #-8]
   1a3f4:	str	r1, [fp, #-12]
   1a3f8:	str	r2, [fp, #-16]
   1a3fc:	str	r3, [fp, #-20]	; 0xffffffec
   1a400:	mov	r3, #1
   1a404:	str	r3, [sp]
   1a408:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a40c:	ldr	r2, [fp, #-16]
   1a410:	ldr	r1, [fp, #-12]
   1a414:	ldr	r0, [fp, #-8]
   1a418:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a41c:	nop	{0}
   1a420:	sub	sp, fp, #4
   1a424:	ldr	fp, [sp]
   1a428:	add	sp, sp, #4
   1a42c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a430:	str	fp, [sp, #-8]!
   1a434:	str	lr, [sp, #4]
   1a438:	add	fp, sp, #4
   1a43c:	sub	sp, sp, #24
   1a440:	str	r0, [fp, #-8]
   1a444:	str	r1, [fp, #-12]
   1a448:	str	r2, [fp, #-16]
   1a44c:	str	r3, [fp, #-20]	; 0xffffffec
   1a450:	mov	r3, #0
   1a454:	str	r3, [sp]
   1a458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a45c:	ldr	r2, [fp, #-16]
   1a460:	ldr	r1, [fp, #-12]
   1a464:	ldr	r0, [fp, #-8]
   1a468:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a46c:	nop	{0}
   1a470:	sub	sp, fp, #4
   1a474:	ldr	fp, [sp]
   1a478:	add	sp, sp, #4
   1a47c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a480:	str	fp, [sp, #-8]!
   1a484:	str	lr, [sp, #4]
   1a488:	add	fp, sp, #4
   1a48c:	sub	sp, sp, #24
   1a490:	str	r0, [fp, #-8]
   1a494:	str	r1, [fp, #-12]
   1a498:	str	r2, [fp, #-16]
   1a49c:	str	r3, [fp, #-20]	; 0xffffffec
   1a4a0:	mov	r3, #2
   1a4a4:	str	r3, [sp]
   1a4a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a4ac:	ldr	r2, [fp, #-16]
   1a4b0:	ldr	r1, [fp, #-12]
   1a4b4:	ldr	r0, [fp, #-8]
   1a4b8:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a4bc:	nop	{0}
   1a4c0:	sub	sp, fp, #4
   1a4c4:	ldr	fp, [sp]
   1a4c8:	add	sp, sp, #4
   1a4cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4d0:	str	fp, [sp, #-8]!
   1a4d4:	str	lr, [sp, #4]
   1a4d8:	add	fp, sp, #4
   1a4dc:	sub	sp, sp, #24
   1a4e0:	str	r0, [fp, #-8]
   1a4e4:	str	r1, [fp, #-12]
   1a4e8:	str	r2, [fp, #-16]
   1a4ec:	mov	r3, #1
   1a4f0:	str	r3, [sp]
   1a4f4:	ldr	r3, [fp, #-16]
   1a4f8:	ldr	r2, [fp, #-12]
   1a4fc:	mov	r1, #0
   1a500:	ldr	r0, [fp, #-8]
   1a504:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a508:	nop	{0}
   1a50c:	sub	sp, fp, #4
   1a510:	ldr	fp, [sp]
   1a514:	add	sp, sp, #4
   1a518:	pop	{pc}		; (ldr pc, [sp], #4)
   1a51c:	str	fp, [sp, #-8]!
   1a520:	str	lr, [sp, #4]
   1a524:	add	fp, sp, #4
   1a528:	sub	sp, sp, #24
   1a52c:	str	r0, [fp, #-8]
   1a530:	str	r1, [fp, #-12]
   1a534:	str	r2, [fp, #-16]
   1a538:	mov	r3, #0
   1a53c:	str	r3, [sp]
   1a540:	ldr	r3, [fp, #-16]
   1a544:	ldr	r2, [fp, #-12]
   1a548:	mov	r1, #0
   1a54c:	ldr	r0, [fp, #-8]
   1a550:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a554:	nop	{0}
   1a558:	sub	sp, fp, #4
   1a55c:	ldr	fp, [sp]
   1a560:	add	sp, sp, #4
   1a564:	pop	{pc}		; (ldr pc, [sp], #4)
   1a568:	str	fp, [sp, #-8]!
   1a56c:	str	lr, [sp, #4]
   1a570:	add	fp, sp, #4
   1a574:	sub	sp, sp, #24
   1a578:	str	r0, [fp, #-8]
   1a57c:	str	r1, [fp, #-12]
   1a580:	str	r2, [fp, #-16]
   1a584:	mov	r3, #2
   1a588:	str	r3, [sp]
   1a58c:	ldr	r3, [fp, #-16]
   1a590:	ldr	r2, [fp, #-12]
   1a594:	mov	r1, #0
   1a598:	ldr	r0, [fp, #-8]
   1a59c:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a5a0:	nop	{0}
   1a5a4:	sub	sp, fp, #4
   1a5a8:	ldr	fp, [sp]
   1a5ac:	add	sp, sp, #4
   1a5b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5b4:	str	fp, [sp, #-8]!
   1a5b8:	str	lr, [sp, #4]
   1a5bc:	add	fp, sp, #4
   1a5c0:	sub	sp, sp, #24
   1a5c4:	str	r0, [fp, #-8]
   1a5c8:	str	r1, [fp, #-12]
   1a5cc:	str	r2, [fp, #-16]
   1a5d0:	mov	r3, #1
   1a5d4:	str	r3, [sp]
   1a5d8:	ldr	r3, [fp, #-16]
   1a5dc:	ldr	r2, [fp, #-12]
   1a5e0:	ldr	r1, [fp, #-8]
   1a5e4:	mov	r0, #0
   1a5e8:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a5ec:	nop	{0}
   1a5f0:	sub	sp, fp, #4
   1a5f4:	ldr	fp, [sp]
   1a5f8:	add	sp, sp, #4
   1a5fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a600:	str	fp, [sp, #-8]!
   1a604:	str	lr, [sp, #4]
   1a608:	add	fp, sp, #4
   1a60c:	sub	sp, sp, #24
   1a610:	str	r0, [fp, #-8]
   1a614:	str	r1, [fp, #-12]
   1a618:	str	r2, [fp, #-16]
   1a61c:	mov	r3, #0
   1a620:	str	r3, [sp]
   1a624:	ldr	r3, [fp, #-16]
   1a628:	ldr	r2, [fp, #-12]
   1a62c:	ldr	r1, [fp, #-8]
   1a630:	mov	r0, #0
   1a634:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a638:	nop	{0}
   1a63c:	sub	sp, fp, #4
   1a640:	ldr	fp, [sp]
   1a644:	add	sp, sp, #4
   1a648:	pop	{pc}		; (ldr pc, [sp], #4)
   1a64c:	str	fp, [sp, #-8]!
   1a650:	str	lr, [sp, #4]
   1a654:	add	fp, sp, #4
   1a658:	sub	sp, sp, #24
   1a65c:	str	r0, [fp, #-8]
   1a660:	str	r1, [fp, #-12]
   1a664:	str	r2, [fp, #-16]
   1a668:	mov	r3, #2
   1a66c:	str	r3, [sp]
   1a670:	ldr	r3, [fp, #-16]
   1a674:	ldr	r2, [fp, #-12]
   1a678:	ldr	r1, [fp, #-8]
   1a67c:	mov	r0, #0
   1a680:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a684:	nop	{0}
   1a688:	sub	sp, fp, #4
   1a68c:	ldr	fp, [sp]
   1a690:	add	sp, sp, #4
   1a694:	pop	{pc}		; (ldr pc, [sp], #4)
   1a698:	str	fp, [sp, #-8]!
   1a69c:	str	lr, [sp, #4]
   1a6a0:	add	fp, sp, #4
   1a6a4:	sub	sp, sp, #24
   1a6a8:	str	r0, [fp, #-8]
   1a6ac:	str	r1, [fp, #-12]
   1a6b0:	str	r2, [fp, #-16]
   1a6b4:	ldr	r3, [fp, #-16]
   1a6b8:	ldr	r3, [r3, #4]
   1a6bc:	lsr	r3, r3, #31
   1a6c0:	uxtb	r3, r3
   1a6c4:	str	r3, [sp]
   1a6c8:	ldr	r3, [fp, #-16]
   1a6cc:	ldr	r2, [fp, #-12]
   1a6d0:	ldr	r1, [fp, #-8]
   1a6d4:	mov	r0, #0
   1a6d8:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1a6dc:	nop	{0}
   1a6e0:	sub	sp, fp, #4
   1a6e4:	ldr	fp, [sp]
   1a6e8:	add	sp, sp, #4
   1a6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6f0:	str	fp, [sp, #-8]!
   1a6f4:	str	lr, [sp, #4]
   1a6f8:	add	fp, sp, #4
   1a6fc:	sub	sp, sp, #40	; 0x28
   1a700:	str	r0, [fp, #-32]	; 0xffffffe0
   1a704:	str	r1, [fp, #-36]	; 0xffffffdc
   1a708:	str	r2, [fp, #-40]	; 0xffffffd8
   1a70c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a710:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a714:	ldr	r3, [r3, #4]
   1a718:	str	r3, [fp, #-16]
   1a71c:	ldr	r3, [fp, #-16]
   1a720:	cmp	r3, #0
   1a724:	bne	1a738 <__assert_fail@plt+0x94f8>
   1a728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a72c:	mov	r2, #0
   1a730:	str	r2, [r3, #4]
   1a734:	b	1a924 <__assert_fail@plt+0x96e4>
   1a738:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a73c:	lsr	r3, r3, #5
   1a740:	str	r3, [fp, #-20]	; 0xffffffec
   1a744:	ldr	r3, [fp, #-16]
   1a748:	eor	r2, r3, r3, asr #31
   1a74c:	sub	r2, r2, r3, asr #31
   1a750:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a754:	sub	r3, r2, r3
   1a758:	str	r3, [fp, #-8]
   1a75c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a760:	and	r3, r3, #31
   1a764:	str	r3, [fp, #-40]	; 0xffffffd8
   1a768:	ldr	r3, [fp, #-16]
   1a76c:	cmp	r3, #0
   1a770:	ble	1a77c <__assert_fail@plt+0x953c>
   1a774:	mov	r2, #1
   1a778:	b	1a780 <__assert_fail@plt+0x9540>
   1a77c:	mov	r2, #0
   1a780:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a784:	cmp	r2, r3
   1a788:	bne	1a800 <__assert_fail@plt+0x95c0>
   1a78c:	ldr	r3, [fp, #-8]
   1a790:	cmp	r3, #0
   1a794:	ble	1a7ec <__assert_fail@plt+0x95ac>
   1a798:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a79c:	ldr	r3, [r3, #8]
   1a7a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a7a4:	mov	r0, r3
   1a7a8:	bl	13e40 <__assert_fail@plt+0x2c00>
   1a7ac:	mov	r3, r0
   1a7b0:	cmp	r3, #0
   1a7b4:	beq	1a7ec <__assert_fail@plt+0x95ac>
   1a7b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a7bc:	ldr	r2, [r3, #8]
   1a7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7c4:	lsl	r3, r3, #2
   1a7c8:	add	r3, r2, r3
   1a7cc:	ldr	r2, [r3]
   1a7d0:	mvn	r1, #0
   1a7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a7d8:	lsl	r3, r1, r3
   1a7dc:	mvn	r3, r3
   1a7e0:	and	r3, r3, r2
   1a7e4:	cmp	r3, #0
   1a7e8:	beq	1a7f4 <__assert_fail@plt+0x95b4>
   1a7ec:	mov	r3, #1
   1a7f0:	b	1a7f8 <__assert_fail@plt+0x95b8>
   1a7f4:	mov	r3, #0
   1a7f8:	str	r3, [fp, #-12]
   1a7fc:	b	1a808 <__assert_fail@plt+0x95c8>
   1a800:	mov	r3, #0
   1a804:	str	r3, [fp, #-12]
   1a808:	ldr	r3, [fp, #-8]
   1a80c:	cmp	r3, #0
   1a810:	bgt	1a820 <__assert_fail@plt+0x95e0>
   1a814:	mov	r3, #0
   1a818:	str	r3, [fp, #-8]
   1a81c:	b	1a8e4 <__assert_fail@plt+0x96a4>
   1a820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a824:	ldr	r3, [r3]
   1a828:	ldr	r2, [fp, #-8]
   1a82c:	cmp	r2, r3
   1a830:	ble	1a848 <__assert_fail@plt+0x9608>
   1a834:	ldr	r1, [fp, #-8]
   1a838:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a83c:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1a840:	mov	r3, r0
   1a844:	b	1a850 <__assert_fail@plt+0x9610>
   1a848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a84c:	ldr	r3, [r3, #8]
   1a850:	str	r3, [fp, #-24]	; 0xffffffe8
   1a854:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a858:	cmp	r3, #0
   1a85c:	beq	1a8c0 <__assert_fail@plt+0x9680>
   1a860:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a864:	ldr	r2, [r3, #8]
   1a868:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a86c:	lsl	r3, r3, #2
   1a870:	add	r1, r2, r3
   1a874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a878:	ldr	r2, [fp, #-8]
   1a87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a880:	bl	14ea4 <__assert_fail@plt+0x3c64>
   1a884:	ldr	r3, [fp, #-8]
   1a888:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a88c:	lsl	r3, r3, #2
   1a890:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a894:	add	r3, r2, r3
   1a898:	ldr	r3, [r3]
   1a89c:	cmp	r3, #0
   1a8a0:	moveq	r3, #1
   1a8a4:	movne	r3, #0
   1a8a8:	uxtb	r3, r3
   1a8ac:	mov	r2, r3
   1a8b0:	ldr	r3, [fp, #-8]
   1a8b4:	sub	r3, r3, r2
   1a8b8:	str	r3, [fp, #-8]
   1a8bc:	b	1a8e4 <__assert_fail@plt+0x96a4>
   1a8c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a8c4:	ldr	r2, [r3, #8]
   1a8c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8cc:	lsl	r3, r3, #2
   1a8d0:	add	r3, r2, r3
   1a8d4:	ldr	r2, [fp, #-8]
   1a8d8:	mov	r1, r3
   1a8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8e0:	bl	13bc8 <__assert_fail@plt+0x2988>
   1a8e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a8e8:	ldr	r2, [fp, #-8]
   1a8ec:	str	r2, [r3, #4]
   1a8f0:	ldr	r3, [fp, #-12]
   1a8f4:	cmp	r3, #0
   1a8f8:	beq	1a90c <__assert_fail@plt+0x96cc>
   1a8fc:	mov	r2, #1
   1a900:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a904:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a908:	bl	194ac <__assert_fail@plt+0x826c>
   1a90c:	ldr	r3, [fp, #-16]
   1a910:	cmp	r3, #0
   1a914:	bge	1a924 <__assert_fail@plt+0x96e4>
   1a918:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a91c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a920:	bl	193c4 <__assert_fail@plt+0x8184>
   1a924:	sub	sp, fp, #4
   1a928:	ldr	fp, [sp]
   1a92c:	add	sp, sp, #4
   1a930:	pop	{pc}		; (ldr pc, [sp], #4)
   1a934:	str	fp, [sp, #-8]!
   1a938:	str	lr, [sp, #4]
   1a93c:	add	fp, sp, #4
   1a940:	sub	sp, sp, #48	; 0x30
   1a944:	str	r0, [fp, #-40]	; 0xffffffd8
   1a948:	str	r1, [fp, #-44]	; 0xffffffd4
   1a94c:	str	r2, [fp, #-48]	; 0xffffffd0
   1a950:	str	r3, [fp, #-52]	; 0xffffffcc
   1a954:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a958:	ldr	r3, [r3, #4]
   1a95c:	str	r3, [fp, #-8]
   1a960:	ldr	r3, [fp, #-8]
   1a964:	cmp	r3, #0
   1a968:	beq	1a978 <__assert_fail@plt+0x9738>
   1a96c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a970:	cmp	r3, #0
   1a974:	bne	1a988 <__assert_fail@plt+0x9748>
   1a978:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a97c:	mov	r2, #0
   1a980:	str	r2, [r3, #4]
   1a984:	b	1ac6c <__assert_fail@plt+0x9a2c>
   1a988:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a98c:	add	r3, r3, #31
   1a990:	lsr	r3, r3, #5
   1a994:	str	r3, [fp, #-12]
   1a998:	ldr	r3, [fp, #-12]
   1a99c:	cmp	r3, #0
   1a9a0:	bgt	1a9c4 <__assert_fail@plt+0x9784>
   1a9a4:	movw	r3, #6676	; 0x1a14
   1a9a8:	movt	r3, #4
   1a9ac:	movw	r2, #2427	; 0x97b
   1a9b0:	movw	r1, #4700	; 0x125c
   1a9b4:	movt	r1, #4
   1a9b8:	movw	r0, #5408	; 0x1520
   1a9bc:	movt	r0, #4
   1a9c0:	bl	11240 <__assert_fail@plt>
   1a9c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9c8:	ldr	r3, [r3]
   1a9cc:	ldr	r2, [fp, #-12]
   1a9d0:	cmp	r2, r3
   1a9d4:	ble	1a9ec <__assert_fail@plt+0x97ac>
   1a9d8:	ldr	r1, [fp, #-12]
   1a9dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a9e0:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1a9e4:	mov	r3, r0
   1a9e8:	b	1a9f4 <__assert_fail@plt+0x97b4>
   1a9ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9f0:	ldr	r3, [r3, #8]
   1a9f4:	str	r3, [fp, #-20]	; 0xffffffec
   1a9f8:	ldr	r3, [fp, #-8]
   1a9fc:	cmp	r3, #0
   1aa00:	rsblt	r3, r3, #0
   1aa04:	str	r3, [fp, #-24]	; 0xffffffe8
   1aa08:	ldr	r3, [fp, #-12]
   1aa0c:	lsl	r2, r3, #5
   1aa10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aa14:	sub	r3, r2, r3
   1aa18:	mvn	r2, #0
   1aa1c:	lsr	r3, r2, r3
   1aa20:	str	r3, [fp, #-28]	; 0xffffffe4
   1aa24:	ldr	r2, [fp, #-12]
   1aa28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa2c:	cmp	r2, r3
   1aa30:	ble	1ab58 <__assert_fail@plt+0x9918>
   1aa34:	ldr	r3, [fp, #-8]
   1aa38:	cmp	r3, #0
   1aa3c:	ble	1aa48 <__assert_fail@plt+0x9808>
   1aa40:	mov	r2, #1
   1aa44:	b	1aa4c <__assert_fail@plt+0x980c>
   1aa48:	mov	r2, #0
   1aa4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aa50:	cmp	r2, r3
   1aa54:	bne	1ab24 <__assert_fail@plt+0x98e4>
   1aa58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aa5c:	ldr	r3, [r3, #8]
   1aa60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aa64:	mov	r1, r3
   1aa68:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa6c:	bl	15344 <__assert_fail@plt+0x4104>
   1aa70:	mov	r3, r0
   1aa74:	cmp	r3, #0
   1aa78:	moveq	r3, #1
   1aa7c:	movne	r3, #0
   1aa80:	uxtb	r3, r3
   1aa84:	str	r3, [fp, #-32]	; 0xffffffe0
   1aa88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aa8c:	cmp	r3, #0
   1aa90:	beq	1aab4 <__assert_fail@plt+0x9874>
   1aa94:	movw	r3, #6676	; 0x1a14
   1aa98:	movt	r3, #4
   1aa9c:	movw	r2, #2443	; 0x98b
   1aaa0:	movw	r1, #4700	; 0x125c
   1aaa4:	movt	r1, #4
   1aaa8:	movw	r0, #5252	; 0x1484
   1aaac:	movt	r0, #4
   1aab0:	bl	11240 <__assert_fail@plt>
   1aab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aab8:	str	r3, [fp, #-16]
   1aabc:	b	1aae4 <__assert_fail@plt+0x98a4>
   1aac0:	ldr	r3, [fp, #-16]
   1aac4:	lsl	r3, r3, #2
   1aac8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aacc:	add	r3, r2, r3
   1aad0:	mvn	r2, #0
   1aad4:	str	r2, [r3]
   1aad8:	ldr	r3, [fp, #-16]
   1aadc:	add	r3, r3, #1
   1aae0:	str	r3, [fp, #-16]
   1aae4:	ldr	r3, [fp, #-12]
   1aae8:	sub	r3, r3, #1
   1aaec:	ldr	r2, [fp, #-16]
   1aaf0:	cmp	r2, r3
   1aaf4:	blt	1aac0 <__assert_fail@plt+0x9880>
   1aaf8:	ldr	r3, [fp, #-12]
   1aafc:	sub	r3, r3, #-1073741823	; 0xc0000001
   1ab00:	lsl	r3, r3, #2
   1ab04:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ab08:	add	r3, r2, r3
   1ab0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ab10:	str	r2, [r3]
   1ab14:	ldr	r3, [fp, #-8]
   1ab18:	rsb	r3, r3, #0
   1ab1c:	str	r3, [fp, #-8]
   1ab20:	b	1ac38 <__assert_fail@plt+0x99f8>
   1ab24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ab28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab2c:	cmp	r2, r3
   1ab30:	beq	1ab4c <__assert_fail@plt+0x990c>
   1ab34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab38:	ldr	r3, [r3, #8]
   1ab3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ab40:	mov	r1, r3
   1ab44:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab48:	bl	13bc8 <__assert_fail@plt+0x2988>
   1ab4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab50:	str	r3, [fp, #-12]
   1ab54:	b	1ac38 <__assert_fail@plt+0x99f8>
   1ab58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ab5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab60:	cmp	r2, r3
   1ab64:	beq	1ab84 <__assert_fail@plt+0x9944>
   1ab68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab6c:	ldr	r1, [r3, #8]
   1ab70:	ldr	r3, [fp, #-12]
   1ab74:	sub	r3, r3, #1
   1ab78:	mov	r2, r3
   1ab7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab80:	bl	13bc8 <__assert_fail@plt+0x2988>
   1ab84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab88:	ldr	r2, [r3, #8]
   1ab8c:	ldr	r3, [fp, #-12]
   1ab90:	sub	r3, r3, #-1073741823	; 0xc0000001
   1ab94:	lsl	r3, r3, #2
   1ab98:	add	r3, r2, r3
   1ab9c:	ldr	r1, [r3]
   1aba0:	ldr	r3, [fp, #-12]
   1aba4:	sub	r3, r3, #-1073741823	; 0xc0000001
   1aba8:	lsl	r3, r3, #2
   1abac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1abb0:	add	r3, r2, r3
   1abb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1abb8:	and	r2, r2, r1
   1abbc:	str	r2, [r3]
   1abc0:	ldr	r3, [fp, #-8]
   1abc4:	cmp	r3, #0
   1abc8:	ble	1abd4 <__assert_fail@plt+0x9994>
   1abcc:	mov	r2, #1
   1abd0:	b	1abd8 <__assert_fail@plt+0x9998>
   1abd4:	mov	r2, #0
   1abd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1abdc:	cmp	r2, r3
   1abe0:	bne	1ac38 <__assert_fail@plt+0x99f8>
   1abe4:	ldr	r2, [fp, #-12]
   1abe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1abec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1abf0:	bl	15344 <__assert_fail@plt+0x4104>
   1abf4:	ldr	r3, [fp, #-12]
   1abf8:	sub	r3, r3, #-1073741823	; 0xc0000001
   1abfc:	lsl	r3, r3, #2
   1ac00:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac04:	add	r3, r2, r3
   1ac08:	ldr	r1, [r3]
   1ac0c:	ldr	r3, [fp, #-12]
   1ac10:	sub	r3, r3, #-1073741823	; 0xc0000001
   1ac14:	lsl	r3, r3, #2
   1ac18:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac1c:	add	r3, r2, r3
   1ac20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ac24:	and	r2, r2, r1
   1ac28:	str	r2, [r3]
   1ac2c:	ldr	r3, [fp, #-8]
   1ac30:	rsb	r3, r3, #0
   1ac34:	str	r3, [fp, #-8]
   1ac38:	ldr	r1, [fp, #-12]
   1ac3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac40:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1ac44:	str	r0, [fp, #-12]
   1ac48:	ldr	r3, [fp, #-8]
   1ac4c:	cmp	r3, #0
   1ac50:	bge	1ac60 <__assert_fail@plt+0x9a20>
   1ac54:	ldr	r3, [fp, #-12]
   1ac58:	rsb	r3, r3, #0
   1ac5c:	b	1ac64 <__assert_fail@plt+0x9a24>
   1ac60:	ldr	r3, [fp, #-12]
   1ac64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ac68:	str	r3, [r2, #4]
   1ac6c:	sub	sp, fp, #4
   1ac70:	ldr	fp, [sp]
   1ac74:	add	sp, sp, #4
   1ac78:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac7c:	str	fp, [sp, #-8]!
   1ac80:	str	lr, [sp, #4]
   1ac84:	add	fp, sp, #4
   1ac88:	sub	sp, sp, #16
   1ac8c:	str	r0, [fp, #-8]
   1ac90:	str	r1, [fp, #-12]
   1ac94:	str	r2, [fp, #-16]
   1ac98:	mov	r3, #1
   1ac9c:	ldr	r2, [fp, #-16]
   1aca0:	ldr	r1, [fp, #-12]
   1aca4:	ldr	r0, [fp, #-8]
   1aca8:	bl	1a6f0 <__assert_fail@plt+0x94b0>
   1acac:	nop	{0}
   1acb0:	sub	sp, fp, #4
   1acb4:	ldr	fp, [sp]
   1acb8:	add	sp, sp, #4
   1acbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1acc0:	str	fp, [sp, #-8]!
   1acc4:	str	lr, [sp, #4]
   1acc8:	add	fp, sp, #4
   1accc:	sub	sp, sp, #16
   1acd0:	str	r0, [fp, #-8]
   1acd4:	str	r1, [fp, #-12]
   1acd8:	str	r2, [fp, #-16]
   1acdc:	mov	r3, #0
   1ace0:	ldr	r2, [fp, #-16]
   1ace4:	ldr	r1, [fp, #-12]
   1ace8:	ldr	r0, [fp, #-8]
   1acec:	bl	1a6f0 <__assert_fail@plt+0x94b0>
   1acf0:	nop	{0}
   1acf4:	sub	sp, fp, #4
   1acf8:	ldr	fp, [sp]
   1acfc:	add	sp, sp, #4
   1ad00:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad04:	str	fp, [sp, #-8]!
   1ad08:	str	lr, [sp, #4]
   1ad0c:	add	fp, sp, #4
   1ad10:	sub	sp, sp, #16
   1ad14:	str	r0, [fp, #-8]
   1ad18:	str	r1, [fp, #-12]
   1ad1c:	str	r2, [fp, #-16]
   1ad20:	mov	r3, #2
   1ad24:	ldr	r2, [fp, #-16]
   1ad28:	ldr	r1, [fp, #-12]
   1ad2c:	ldr	r0, [fp, #-8]
   1ad30:	bl	1a6f0 <__assert_fail@plt+0x94b0>
   1ad34:	nop	{0}
   1ad38:	sub	sp, fp, #4
   1ad3c:	ldr	fp, [sp]
   1ad40:	add	sp, sp, #4
   1ad44:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad48:	str	fp, [sp, #-8]!
   1ad4c:	str	lr, [sp, #4]
   1ad50:	add	fp, sp, #4
   1ad54:	sub	sp, sp, #16
   1ad58:	str	r0, [fp, #-8]
   1ad5c:	str	r1, [fp, #-12]
   1ad60:	str	r2, [fp, #-16]
   1ad64:	mov	r3, #1
   1ad68:	ldr	r2, [fp, #-16]
   1ad6c:	ldr	r1, [fp, #-12]
   1ad70:	ldr	r0, [fp, #-8]
   1ad74:	bl	1a934 <__assert_fail@plt+0x96f4>
   1ad78:	nop	{0}
   1ad7c:	sub	sp, fp, #4
   1ad80:	ldr	fp, [sp]
   1ad84:	add	sp, sp, #4
   1ad88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad8c:	str	fp, [sp, #-8]!
   1ad90:	str	lr, [sp, #4]
   1ad94:	add	fp, sp, #4
   1ad98:	sub	sp, sp, #16
   1ad9c:	str	r0, [fp, #-8]
   1ada0:	str	r1, [fp, #-12]
   1ada4:	str	r2, [fp, #-16]
   1ada8:	mov	r3, #0
   1adac:	ldr	r2, [fp, #-16]
   1adb0:	ldr	r1, [fp, #-12]
   1adb4:	ldr	r0, [fp, #-8]
   1adb8:	bl	1a934 <__assert_fail@plt+0x96f4>
   1adbc:	nop	{0}
   1adc0:	sub	sp, fp, #4
   1adc4:	ldr	fp, [sp]
   1adc8:	add	sp, sp, #4
   1adcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1add0:	str	fp, [sp, #-8]!
   1add4:	str	lr, [sp, #4]
   1add8:	add	fp, sp, #4
   1addc:	sub	sp, sp, #16
   1ade0:	str	r0, [fp, #-8]
   1ade4:	str	r1, [fp, #-12]
   1ade8:	str	r2, [fp, #-16]
   1adec:	mov	r3, #2
   1adf0:	ldr	r2, [fp, #-16]
   1adf4:	ldr	r1, [fp, #-12]
   1adf8:	ldr	r0, [fp, #-8]
   1adfc:	bl	1a934 <__assert_fail@plt+0x96f4>
   1ae00:	nop	{0}
   1ae04:	sub	sp, fp, #4
   1ae08:	ldr	fp, [sp]
   1ae0c:	add	sp, sp, #4
   1ae10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae14:	str	fp, [sp, #-8]!
   1ae18:	str	lr, [sp, #4]
   1ae1c:	add	fp, sp, #4
   1ae20:	sub	sp, sp, #32
   1ae24:	str	r0, [fp, #-16]
   1ae28:	str	r1, [fp, #-20]	; 0xffffffec
   1ae2c:	str	r2, [fp, #-24]	; 0xffffffe8
   1ae30:	mov	r3, #2
   1ae34:	str	r3, [sp]
   1ae38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae40:	mov	r1, #0
   1ae44:	ldr	r0, [fp, #-16]
   1ae48:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1ae4c:	mov	r3, r0
   1ae50:	str	r3, [fp, #-8]
   1ae54:	ldr	r3, [fp, #-8]
   1ae58:	cmp	r3, #0
   1ae5c:	beq	1ae80 <__assert_fail@plt+0x9c40>
   1ae60:	movw	r3, #6692	; 0x1a24
   1ae64:	movt	r3, #4
   1ae68:	movw	r2, #2521	; 0x9d9
   1ae6c:	movw	r1, #4700	; 0x125c
   1ae70:	movt	r1, #4
   1ae74:	movw	r0, #5252	; 0x1484
   1ae78:	movt	r0, #4
   1ae7c:	bl	11240 <__assert_fail@plt>
   1ae80:	nop	{0}
   1ae84:	sub	sp, fp, #4
   1ae88:	ldr	fp, [sp]
   1ae8c:	add	sp, sp, #4
   1ae90:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae94:	str	fp, [sp, #-8]!
   1ae98:	str	lr, [sp, #4]
   1ae9c:	add	fp, sp, #4
   1aea0:	sub	sp, sp, #16
   1aea4:	str	r0, [fp, #-8]
   1aea8:	str	r1, [fp, #-12]
   1aeac:	mov	r3, #2
   1aeb0:	str	r3, [sp]
   1aeb4:	ldr	r3, [fp, #-12]
   1aeb8:	ldr	r2, [fp, #-8]
   1aebc:	mov	r1, #0
   1aec0:	mov	r0, #0
   1aec4:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1aec8:	mov	r3, r0
   1aecc:	cmp	r3, #0
   1aed0:	moveq	r3, #1
   1aed4:	movne	r3, #0
   1aed8:	uxtb	r3, r3
   1aedc:	mov	r0, r3
   1aee0:	sub	sp, fp, #4
   1aee4:	ldr	fp, [sp]
   1aee8:	add	sp, sp, #4
   1aeec:	pop	{pc}		; (ldr pc, [sp], #4)
   1aef0:	str	fp, [sp, #-8]!
   1aef4:	str	lr, [sp, #4]
   1aef8:	add	fp, sp, #4
   1aefc:	sub	sp, sp, #32
   1af00:	str	r0, [fp, #-24]	; 0xffffffe8
   1af04:	str	r1, [fp, #-28]	; 0xffffffe4
   1af08:	str	r2, [fp, #-32]	; 0xffffffe0
   1af0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af10:	bl	19064 <__assert_fail@plt+0x7e24>
   1af14:	mov	r3, r0
   1af18:	cmp	r3, #0
   1af1c:	bne	1af44 <__assert_fail@plt+0x9d04>
   1af20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af28:	bl	1919c <__assert_fail@plt+0x7f5c>
   1af2c:	mov	r3, r0
   1af30:	cmp	r3, #0
   1af34:	moveq	r3, #1
   1af38:	movne	r3, #0
   1af3c:	uxtb	r3, r3
   1af40:	b	1af88 <__assert_fail@plt+0x9d48>
   1af44:	sub	r3, fp, #20
   1af48:	mov	r0, r3
   1af4c:	bl	17e24 <__assert_fail@plt+0x6be4>
   1af50:	sub	r3, fp, #20
   1af54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1af58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af5c:	mov	r0, r3
   1af60:	bl	19940 <__assert_fail@plt+0x8700>
   1af64:	sub	r3, fp, #20
   1af68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1af6c:	mov	r0, r3
   1af70:	bl	1ae94 <__assert_fail@plt+0x9c54>
   1af74:	str	r0, [fp, #-8]
   1af78:	sub	r3, fp, #20
   1af7c:	mov	r0, r3
   1af80:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1af84:	ldr	r3, [fp, #-8]
   1af88:	mov	r0, r3
   1af8c:	sub	sp, fp, #4
   1af90:	ldr	fp, [sp]
   1af94:	add	sp, sp, #4
   1af98:	pop	{pc}		; (ldr pc, [sp], #4)
   1af9c:	str	fp, [sp, #-8]!
   1afa0:	str	lr, [sp, #4]
   1afa4:	add	fp, sp, #4
   1afa8:	sub	sp, sp, #56	; 0x38
   1afac:	str	r0, [fp, #-40]	; 0xffffffd8
   1afb0:	str	r1, [fp, #-44]	; 0xffffffd4
   1afb4:	str	r2, [fp, #-48]	; 0xffffffd0
   1afb8:	str	r3, [fp, #-52]	; 0xffffffcc
   1afbc:	sub	r3, fp, #20
   1afc0:	mov	r0, r3
   1afc4:	bl	17e24 <__assert_fail@plt+0x6be4>
   1afc8:	sub	r3, fp, #32
   1afcc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1afd0:	mov	r0, r3
   1afd4:	bl	18224 <__assert_fail@plt+0x6fe4>
   1afd8:	sub	r2, fp, #32
   1afdc:	sub	r1, fp, #20
   1afe0:	ldr	r3, [fp, #4]
   1afe4:	str	r3, [sp]
   1afe8:	mov	r3, r2
   1afec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1aff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aff4:	bl	19fd4 <__assert_fail@plt+0x8d94>
   1aff8:	sub	r3, fp, #32
   1affc:	mov	r0, r3
   1b000:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1b004:	sub	r3, fp, #20
   1b008:	mov	r0, r3
   1b00c:	bl	185f0 <__assert_fail@plt+0x73b0>
   1b010:	str	r0, [fp, #-8]
   1b014:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b018:	cmp	r3, #0
   1b01c:	beq	1b030 <__assert_fail@plt+0x9df0>
   1b020:	sub	r3, fp, #20
   1b024:	mov	r1, r3
   1b028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b02c:	bl	19410 <__assert_fail@plt+0x81d0>
   1b030:	sub	r3, fp, #20
   1b034:	mov	r0, r3
   1b038:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1b03c:	ldr	r3, [fp, #-8]
   1b040:	mov	r0, r3
   1b044:	sub	sp, fp, #4
   1b048:	ldr	fp, [sp]
   1b04c:	add	sp, sp, #4
   1b050:	pop	{pc}		; (ldr pc, [sp], #4)
   1b054:	str	fp, [sp, #-8]!
   1b058:	str	lr, [sp, #4]
   1b05c:	add	fp, sp, #4
   1b060:	sub	sp, sp, #24
   1b064:	str	r0, [fp, #-8]
   1b068:	str	r1, [fp, #-12]
   1b06c:	str	r2, [fp, #-16]
   1b070:	str	r3, [fp, #-20]	; 0xffffffec
   1b074:	mov	r3, #1
   1b078:	str	r3, [sp]
   1b07c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b080:	ldr	r2, [fp, #-16]
   1b084:	ldr	r1, [fp, #-12]
   1b088:	ldr	r0, [fp, #-8]
   1b08c:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b090:	mov	r3, r0
   1b094:	mov	r0, r3
   1b098:	sub	sp, fp, #4
   1b09c:	ldr	fp, [sp]
   1b0a0:	add	sp, sp, #4
   1b0a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0a8:	str	fp, [sp, #-8]!
   1b0ac:	str	lr, [sp, #4]
   1b0b0:	add	fp, sp, #4
   1b0b4:	sub	sp, sp, #24
   1b0b8:	str	r0, [fp, #-8]
   1b0bc:	str	r1, [fp, #-12]
   1b0c0:	str	r2, [fp, #-16]
   1b0c4:	str	r3, [fp, #-20]	; 0xffffffec
   1b0c8:	mov	r3, #0
   1b0cc:	str	r3, [sp]
   1b0d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b0d4:	ldr	r2, [fp, #-16]
   1b0d8:	ldr	r1, [fp, #-12]
   1b0dc:	ldr	r0, [fp, #-8]
   1b0e0:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b0e4:	mov	r3, r0
   1b0e8:	mov	r0, r3
   1b0ec:	sub	sp, fp, #4
   1b0f0:	ldr	fp, [sp]
   1b0f4:	add	sp, sp, #4
   1b0f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0fc:	str	fp, [sp, #-8]!
   1b100:	str	lr, [sp, #4]
   1b104:	add	fp, sp, #4
   1b108:	sub	sp, sp, #24
   1b10c:	str	r0, [fp, #-8]
   1b110:	str	r1, [fp, #-12]
   1b114:	str	r2, [fp, #-16]
   1b118:	str	r3, [fp, #-20]	; 0xffffffec
   1b11c:	mov	r3, #2
   1b120:	str	r3, [sp]
   1b124:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b128:	ldr	r2, [fp, #-16]
   1b12c:	ldr	r1, [fp, #-12]
   1b130:	ldr	r0, [fp, #-8]
   1b134:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b138:	mov	r3, r0
   1b13c:	mov	r0, r3
   1b140:	sub	sp, fp, #4
   1b144:	ldr	fp, [sp]
   1b148:	add	sp, sp, #4
   1b14c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b150:	str	fp, [sp, #-8]!
   1b154:	str	lr, [sp, #4]
   1b158:	add	fp, sp, #4
   1b15c:	sub	sp, sp, #24
   1b160:	str	r0, [fp, #-8]
   1b164:	str	r1, [fp, #-12]
   1b168:	str	r2, [fp, #-16]
   1b16c:	mov	r3, #1
   1b170:	str	r3, [sp]
   1b174:	ldr	r3, [fp, #-16]
   1b178:	ldr	r2, [fp, #-12]
   1b17c:	mov	r1, #0
   1b180:	ldr	r0, [fp, #-8]
   1b184:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b188:	mov	r3, r0
   1b18c:	mov	r0, r3
   1b190:	sub	sp, fp, #4
   1b194:	ldr	fp, [sp]
   1b198:	add	sp, sp, #4
   1b19c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1a0:	str	fp, [sp, #-8]!
   1b1a4:	str	lr, [sp, #4]
   1b1a8:	add	fp, sp, #4
   1b1ac:	sub	sp, sp, #24
   1b1b0:	str	r0, [fp, #-8]
   1b1b4:	str	r1, [fp, #-12]
   1b1b8:	str	r2, [fp, #-16]
   1b1bc:	mov	r3, #0
   1b1c0:	str	r3, [sp]
   1b1c4:	ldr	r3, [fp, #-16]
   1b1c8:	ldr	r2, [fp, #-12]
   1b1cc:	mov	r1, #0
   1b1d0:	ldr	r0, [fp, #-8]
   1b1d4:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b1d8:	mov	r3, r0
   1b1dc:	mov	r0, r3
   1b1e0:	sub	sp, fp, #4
   1b1e4:	ldr	fp, [sp]
   1b1e8:	add	sp, sp, #4
   1b1ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1f0:	str	fp, [sp, #-8]!
   1b1f4:	str	lr, [sp, #4]
   1b1f8:	add	fp, sp, #4
   1b1fc:	sub	sp, sp, #24
   1b200:	str	r0, [fp, #-8]
   1b204:	str	r1, [fp, #-12]
   1b208:	str	r2, [fp, #-16]
   1b20c:	mov	r3, #2
   1b210:	str	r3, [sp]
   1b214:	ldr	r3, [fp, #-16]
   1b218:	ldr	r2, [fp, #-12]
   1b21c:	mov	r1, #0
   1b220:	ldr	r0, [fp, #-8]
   1b224:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b228:	mov	r3, r0
   1b22c:	mov	r0, r3
   1b230:	sub	sp, fp, #4
   1b234:	ldr	fp, [sp]
   1b238:	add	sp, sp, #4
   1b23c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b240:	str	fp, [sp, #-8]!
   1b244:	str	lr, [sp, #4]
   1b248:	add	fp, sp, #4
   1b24c:	sub	sp, sp, #24
   1b250:	str	r0, [fp, #-8]
   1b254:	str	r1, [fp, #-12]
   1b258:	str	r2, [fp, #-16]
   1b25c:	mov	r3, #1
   1b260:	str	r3, [sp]
   1b264:	ldr	r3, [fp, #-16]
   1b268:	ldr	r2, [fp, #-12]
   1b26c:	ldr	r1, [fp, #-8]
   1b270:	mov	r0, #0
   1b274:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b278:	mov	r3, r0
   1b27c:	mov	r0, r3
   1b280:	sub	sp, fp, #4
   1b284:	ldr	fp, [sp]
   1b288:	add	sp, sp, #4
   1b28c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b290:	str	fp, [sp, #-8]!
   1b294:	str	lr, [sp, #4]
   1b298:	add	fp, sp, #4
   1b29c:	sub	sp, sp, #24
   1b2a0:	str	r0, [fp, #-8]
   1b2a4:	str	r1, [fp, #-12]
   1b2a8:	str	r2, [fp, #-16]
   1b2ac:	mov	r3, #0
   1b2b0:	str	r3, [sp]
   1b2b4:	ldr	r3, [fp, #-16]
   1b2b8:	ldr	r2, [fp, #-12]
   1b2bc:	ldr	r1, [fp, #-8]
   1b2c0:	mov	r0, #0
   1b2c4:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b2c8:	mov	r3, r0
   1b2cc:	mov	r0, r3
   1b2d0:	sub	sp, fp, #4
   1b2d4:	ldr	fp, [sp]
   1b2d8:	add	sp, sp, #4
   1b2dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2e0:	str	fp, [sp, #-8]!
   1b2e4:	str	lr, [sp, #4]
   1b2e8:	add	fp, sp, #4
   1b2ec:	sub	sp, sp, #24
   1b2f0:	str	r0, [fp, #-8]
   1b2f4:	str	r1, [fp, #-12]
   1b2f8:	str	r2, [fp, #-16]
   1b2fc:	mov	r3, #2
   1b300:	str	r3, [sp]
   1b304:	ldr	r3, [fp, #-16]
   1b308:	ldr	r2, [fp, #-12]
   1b30c:	ldr	r1, [fp, #-8]
   1b310:	mov	r0, #0
   1b314:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b318:	mov	r3, r0
   1b31c:	mov	r0, r3
   1b320:	sub	sp, fp, #4
   1b324:	ldr	fp, [sp]
   1b328:	add	sp, sp, #4
   1b32c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b330:	str	fp, [sp, #-8]!
   1b334:	str	lr, [sp, #4]
   1b338:	add	fp, sp, #4
   1b33c:	sub	sp, sp, #16
   1b340:	str	r0, [fp, #-8]
   1b344:	str	r1, [fp, #-12]
   1b348:	mov	r3, #1
   1b34c:	str	r3, [sp]
   1b350:	ldr	r3, [fp, #-12]
   1b354:	ldr	r2, [fp, #-8]
   1b358:	mov	r1, #0
   1b35c:	mov	r0, #0
   1b360:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b364:	mov	r3, r0
   1b368:	mov	r0, r3
   1b36c:	sub	sp, fp, #4
   1b370:	ldr	fp, [sp]
   1b374:	add	sp, sp, #4
   1b378:	pop	{pc}		; (ldr pc, [sp], #4)
   1b37c:	str	fp, [sp, #-8]!
   1b380:	str	lr, [sp, #4]
   1b384:	add	fp, sp, #4
   1b388:	sub	sp, sp, #16
   1b38c:	str	r0, [fp, #-8]
   1b390:	str	r1, [fp, #-12]
   1b394:	mov	r3, #0
   1b398:	str	r3, [sp]
   1b39c:	ldr	r3, [fp, #-12]
   1b3a0:	ldr	r2, [fp, #-8]
   1b3a4:	mov	r1, #0
   1b3a8:	mov	r0, #0
   1b3ac:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b3b0:	mov	r3, r0
   1b3b4:	mov	r0, r3
   1b3b8:	sub	sp, fp, #4
   1b3bc:	ldr	fp, [sp]
   1b3c0:	add	sp, sp, #4
   1b3c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3c8:	str	fp, [sp, #-8]!
   1b3cc:	str	lr, [sp, #4]
   1b3d0:	add	fp, sp, #4
   1b3d4:	sub	sp, sp, #16
   1b3d8:	str	r0, [fp, #-8]
   1b3dc:	str	r1, [fp, #-12]
   1b3e0:	mov	r3, #2
   1b3e4:	str	r3, [sp]
   1b3e8:	ldr	r3, [fp, #-12]
   1b3ec:	ldr	r2, [fp, #-8]
   1b3f0:	mov	r1, #0
   1b3f4:	mov	r0, #0
   1b3f8:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b3fc:	mov	r3, r0
   1b400:	mov	r0, r3
   1b404:	sub	sp, fp, #4
   1b408:	ldr	fp, [sp]
   1b40c:	add	sp, sp, #4
   1b410:	pop	{pc}		; (ldr pc, [sp], #4)
   1b414:	str	fp, [sp, #-8]!
   1b418:	str	lr, [sp, #4]
   1b41c:	add	fp, sp, #4
   1b420:	sub	sp, sp, #24
   1b424:	str	r0, [fp, #-8]
   1b428:	str	r1, [fp, #-12]
   1b42c:	str	r2, [fp, #-16]
   1b430:	mov	r3, #0
   1b434:	str	r3, [sp]
   1b438:	ldr	r3, [fp, #-16]
   1b43c:	ldr	r2, [fp, #-12]
   1b440:	ldr	r1, [fp, #-8]
   1b444:	mov	r0, #0
   1b448:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b44c:	mov	r3, r0
   1b450:	mov	r0, r3
   1b454:	sub	sp, fp, #4
   1b458:	ldr	fp, [sp]
   1b45c:	add	sp, sp, #4
   1b460:	pop	{pc}		; (ldr pc, [sp], #4)
   1b464:	str	fp, [sp, #-8]!
   1b468:	str	lr, [sp, #4]
   1b46c:	add	fp, sp, #4
   1b470:	sub	sp, sp, #32
   1b474:	str	r0, [fp, #-16]
   1b478:	str	r1, [fp, #-20]	; 0xffffffec
   1b47c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b480:	mov	r3, #2
   1b484:	str	r3, [sp]
   1b488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b48c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b490:	mov	r1, #0
   1b494:	ldr	r0, [fp, #-16]
   1b498:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b49c:	str	r0, [fp, #-8]
   1b4a0:	ldr	r3, [fp, #-8]
   1b4a4:	cmp	r3, #0
   1b4a8:	beq	1b4cc <__assert_fail@plt+0xa28c>
   1b4ac:	movw	r3, #6708	; 0x1a34
   1b4b0:	movt	r3, #4
   1b4b4:	movw	r2, #2647	; 0xa57
   1b4b8:	movw	r1, #4700	; 0x125c
   1b4bc:	movt	r1, #4
   1b4c0:	movw	r0, #5252	; 0x1484
   1b4c4:	movt	r0, #4
   1b4c8:	bl	11240 <__assert_fail@plt>
   1b4cc:	nop	{0}
   1b4d0:	sub	sp, fp, #4
   1b4d4:	ldr	fp, [sp]
   1b4d8:	add	sp, sp, #4
   1b4dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4e0:	str	fp, [sp, #-8]!
   1b4e4:	str	lr, [sp, #4]
   1b4e8:	add	fp, sp, #4
   1b4ec:	sub	sp, sp, #16
   1b4f0:	str	r0, [fp, #-8]
   1b4f4:	str	r1, [fp, #-12]
   1b4f8:	mov	r3, #2
   1b4fc:	str	r3, [sp]
   1b500:	ldr	r3, [fp, #-12]
   1b504:	ldr	r2, [fp, #-8]
   1b508:	mov	r1, #0
   1b50c:	mov	r0, #0
   1b510:	bl	1af9c <__assert_fail@plt+0x9d5c>
   1b514:	mov	r3, r0
   1b518:	cmp	r3, #0
   1b51c:	moveq	r3, #1
   1b520:	movne	r3, #0
   1b524:	uxtb	r3, r3
   1b528:	mov	r0, r3
   1b52c:	sub	sp, fp, #4
   1b530:	ldr	fp, [sp]
   1b534:	add	sp, sp, #4
   1b538:	pop	{pc}		; (ldr pc, [sp], #4)
   1b53c:	str	fp, [sp, #-8]!
   1b540:	str	lr, [sp, #4]
   1b544:	add	fp, sp, #4
   1b548:	sub	sp, sp, #40	; 0x28
   1b54c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b550:	str	r1, [fp, #-44]	; 0xffffffd4
   1b554:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b55c:	orr	r3, r2, r3
   1b560:	cmp	r3, #0
   1b564:	bne	1b588 <__assert_fail@plt+0xa348>
   1b568:	movw	r3, #6724	; 0x1a44
   1b56c:	movt	r3, #4
   1b570:	movw	r2, #2663	; 0xa67
   1b574:	movw	r1, #4700	; 0x125c
   1b578:	movt	r1, #4
   1b57c:	movw	r0, #5416	; 0x1528
   1b580:	movt	r0, #4
   1b584:	bl	11240 <__assert_fail@plt>
   1b588:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b58c:	cmp	r3, #0
   1b590:	bne	1b59c <__assert_fail@plt+0xa35c>
   1b594:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b598:	b	1b758 <__assert_fail@plt+0xa518>
   1b59c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b5a0:	cmp	r3, #0
   1b5a4:	bne	1b5b0 <__assert_fail@plt+0xa370>
   1b5a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b5ac:	b	1b758 <__assert_fail@plt+0xa518>
   1b5b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b5b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b5b8:	orr	r3, r2, r3
   1b5bc:	str	r3, [fp, #-16]
   1b5c0:	mov	r3, #0
   1b5c4:	str	r3, [fp, #-20]	; 0xffffffec
   1b5c8:	ldr	r3, [fp, #-16]
   1b5cc:	rsb	r3, r3, #0
   1b5d0:	ldr	r2, [fp, #-16]
   1b5d4:	and	r3, r3, r2
   1b5d8:	str	r3, [fp, #-8]
   1b5dc:	mov	r3, #0
   1b5e0:	str	r3, [fp, #-12]
   1b5e4:	mov	r3, #8
   1b5e8:	str	r3, [fp, #-24]	; 0xffffffe8
   1b5ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5f0:	cmp	r3, #31
   1b5f4:	bhi	1b644 <__assert_fail@plt+0xa404>
   1b5f8:	b	1b618 <__assert_fail@plt+0xa3d8>
   1b5fc:	ldr	r2, [fp, #-8]
   1b600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b604:	lsl	r3, r2, r3
   1b608:	str	r3, [fp, #-8]
   1b60c:	ldr	r3, [fp, #-12]
   1b610:	add	r3, r3, #8
   1b614:	str	r3, [fp, #-12]
   1b618:	ldr	r3, [fp, #-8]
   1b61c:	and	r3, r3, #-16777216	; 0xff000000
   1b620:	cmp	r3, #0
   1b624:	beq	1b5fc <__assert_fail@plt+0xa3bc>
   1b628:	b	1b644 <__assert_fail@plt+0xa404>
   1b62c:	ldr	r3, [fp, #-8]
   1b630:	lsl	r3, r3, #1
   1b634:	str	r3, [fp, #-8]
   1b638:	ldr	r3, [fp, #-12]
   1b63c:	add	r3, r3, #1
   1b640:	str	r3, [fp, #-12]
   1b644:	ldr	r3, [fp, #-8]
   1b648:	cmp	r3, #0
   1b64c:	bge	1b62c <__assert_fail@plt+0xa3ec>
   1b650:	ldr	r3, [fp, #-12]
   1b654:	str	r3, [fp, #-20]	; 0xffffffec
   1b658:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b65c:	rsb	r3, r3, #31
   1b660:	str	r3, [fp, #-28]	; 0xffffffe4
   1b664:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b66c:	lsr	r3, r2, r3
   1b670:	str	r3, [fp, #-40]	; 0xffffffd8
   1b674:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b678:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b67c:	lsr	r3, r2, r3
   1b680:	str	r3, [fp, #-44]	; 0xffffffd4
   1b684:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b688:	and	r3, r3, #1
   1b68c:	cmp	r3, #0
   1b690:	bne	1b6bc <__assert_fail@plt+0xa47c>
   1b694:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b698:	str	r3, [fp, #-32]	; 0xffffffe0
   1b69c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6a0:	str	r3, [fp, #-40]	; 0xffffffd8
   1b6a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b6a8:	str	r3, [fp, #-44]	; 0xffffffd4
   1b6ac:	b	1b6bc <__assert_fail@plt+0xa47c>
   1b6b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6b4:	lsr	r3, r3, #1
   1b6b8:	str	r3, [fp, #-44]	; 0xffffffd4
   1b6bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6c0:	and	r3, r3, #1
   1b6c4:	cmp	r3, #0
   1b6c8:	beq	1b6b0 <__assert_fail@plt+0xa470>
   1b6cc:	b	1b73c <__assert_fail@plt+0xa4fc>
   1b6d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b6d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6d8:	cmp	r2, r3
   1b6dc:	bls	1b710 <__assert_fail@plt+0xa4d0>
   1b6e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b6e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b6e8:	sub	r3, r2, r3
   1b6ec:	str	r3, [fp, #-40]	; 0xffffffd8
   1b6f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b6f4:	lsr	r3, r3, #1
   1b6f8:	str	r3, [fp, #-40]	; 0xffffffd8
   1b6fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b700:	and	r3, r3, #1
   1b704:	cmp	r3, #0
   1b708:	beq	1b6f0 <__assert_fail@plt+0xa4b0>
   1b70c:	b	1b73c <__assert_fail@plt+0xa4fc>
   1b710:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b718:	sub	r3, r2, r3
   1b71c:	str	r3, [fp, #-44]	; 0xffffffd4
   1b720:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b724:	lsr	r3, r3, #1
   1b728:	str	r3, [fp, #-44]	; 0xffffffd4
   1b72c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b730:	and	r3, r3, #1
   1b734:	cmp	r3, #0
   1b738:	beq	1b720 <__assert_fail@plt+0xa4e0>
   1b73c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b744:	cmp	r2, r3
   1b748:	bne	1b6d0 <__assert_fail@plt+0xa490>
   1b74c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b750:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b754:	lsl	r3, r2, r3
   1b758:	mov	r0, r3
   1b75c:	sub	sp, fp, #4
   1b760:	ldr	fp, [sp]
   1b764:	add	sp, sp, #4
   1b768:	pop	{pc}		; (ldr pc, [sp], #4)
   1b76c:	str	fp, [sp, #-8]!
   1b770:	str	lr, [sp, #4]
   1b774:	add	fp, sp, #4
   1b778:	sub	sp, sp, #32
   1b77c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b780:	str	r1, [fp, #-28]	; 0xffffffe4
   1b784:	str	r2, [fp, #-32]	; 0xffffffe0
   1b788:	sub	r3, fp, #16
   1b78c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b790:	mov	r0, r3
   1b794:	bl	18224 <__assert_fail@plt+0x6fe4>
   1b798:	sub	r2, fp, #16
   1b79c:	sub	r3, fp, #16
   1b7a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b7a4:	mov	r0, r3
   1b7a8:	bl	1b88c <__assert_fail@plt+0xa64c>
   1b7ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7b0:	cmp	r3, #0
   1b7b4:	beq	1b7c8 <__assert_fail@plt+0xa588>
   1b7b8:	sub	r3, fp, #16
   1b7bc:	mov	r0, r3
   1b7c0:	bl	185f0 <__assert_fail@plt+0x73b0>
   1b7c4:	str	r0, [fp, #-32]	; 0xffffffe0
   1b7c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b7cc:	cmp	r3, #0
   1b7d0:	beq	1b7e4 <__assert_fail@plt+0xa5a4>
   1b7d4:	sub	r3, fp, #16
   1b7d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b7dc:	mov	r0, r3
   1b7e0:	bl	19410 <__assert_fail@plt+0x81d0>
   1b7e4:	sub	r3, fp, #16
   1b7e8:	mov	r0, r3
   1b7ec:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1b7f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7f4:	mov	r0, r3
   1b7f8:	sub	sp, fp, #4
   1b7fc:	ldr	fp, [sp]
   1b800:	add	sp, sp, #4
   1b804:	pop	{pc}		; (ldr pc, [sp], #4)
   1b808:	str	fp, [sp, #-8]!
   1b80c:	str	lr, [sp, #4]
   1b810:	add	fp, sp, #4
   1b814:	sub	sp, sp, #16
   1b818:	str	r0, [fp, #-16]
   1b81c:	ldr	r3, [fp, #-16]
   1b820:	ldr	r3, [r3, #4]
   1b824:	cmp	r3, #0
   1b828:	bgt	1b84c <__assert_fail@plt+0xa60c>
   1b82c:	movw	r3, #6736	; 0x1a50
   1b830:	movt	r3, #4
   1b834:	movw	r2, #2723	; 0xaa3
   1b838:	movw	r1, #4700	; 0x125c
   1b83c:	movt	r1, #4
   1b840:	movw	r0, #5428	; 0x1534
   1b844:	movt	r0, #4
   1b848:	bl	11240 <__assert_fail@plt>
   1b84c:	ldr	r3, [fp, #-16]
   1b850:	ldr	r3, [r3, #8]
   1b854:	mov	r1, #0
   1b858:	mov	r0, r3
   1b85c:	bl	151e0 <__assert_fail@plt+0x3fa0>
   1b860:	str	r0, [fp, #-8]
   1b864:	ldr	r2, [fp, #-8]
   1b868:	ldr	r1, [fp, #-16]
   1b86c:	ldr	r0, [fp, #-16]
   1b870:	bl	1ad04 <__assert_fail@plt+0x9ac4>
   1b874:	ldr	r3, [fp, #-8]
   1b878:	mov	r0, r3
   1b87c:	sub	sp, fp, #4
   1b880:	ldr	fp, [sp]
   1b884:	add	sp, sp, #4
   1b888:	pop	{pc}		; (ldr pc, [sp], #4)
   1b88c:	str	fp, [sp, #-8]!
   1b890:	str	lr, [sp, #4]
   1b894:	add	fp, sp, #4
   1b898:	sub	sp, sp, #64	; 0x40
   1b89c:	str	r0, [fp, #-56]	; 0xffffffc8
   1b8a0:	str	r1, [fp, #-60]	; 0xffffffc4
   1b8a4:	str	r2, [fp, #-64]	; 0xffffffc0
   1b8a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b8ac:	ldr	r3, [r3, #4]
   1b8b0:	cmp	r3, #0
   1b8b4:	bne	1b8c8 <__assert_fail@plt+0xa688>
   1b8b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b8bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b8c0:	bl	19374 <__assert_fail@plt+0x8134>
   1b8c4:	b	1baf4 <__assert_fail@plt+0xa8b4>
   1b8c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b8cc:	ldr	r3, [r3, #4]
   1b8d0:	cmp	r3, #0
   1b8d4:	bne	1b8e8 <__assert_fail@plt+0xa6a8>
   1b8d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b8dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b8e0:	bl	19374 <__assert_fail@plt+0x8134>
   1b8e4:	b	1baf4 <__assert_fail@plt+0xa8b4>
   1b8e8:	sub	r3, fp, #36	; 0x24
   1b8ec:	mov	r0, r3
   1b8f0:	bl	17e24 <__assert_fail@plt+0x6be4>
   1b8f4:	sub	r3, fp, #48	; 0x30
   1b8f8:	mov	r0, r3
   1b8fc:	bl	17e24 <__assert_fail@plt+0x6be4>
   1b900:	sub	r3, fp, #36	; 0x24
   1b904:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b908:	mov	r0, r3
   1b90c:	bl	19374 <__assert_fail@plt+0x8134>
   1b910:	sub	r3, fp, #36	; 0x24
   1b914:	mov	r0, r3
   1b918:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1b91c:	str	r0, [fp, #-8]
   1b920:	sub	r3, fp, #48	; 0x30
   1b924:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b928:	mov	r0, r3
   1b92c:	bl	19374 <__assert_fail@plt+0x8134>
   1b930:	sub	r3, fp, #48	; 0x30
   1b934:	mov	r0, r3
   1b938:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1b93c:	str	r0, [fp, #-12]
   1b940:	ldr	r2, [fp, #-12]
   1b944:	ldr	r3, [fp, #-8]
   1b948:	cmp	r2, r3
   1b94c:	movcc	r3, r2
   1b950:	movcs	r3, r3
   1b954:	str	r3, [fp, #-16]
   1b958:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b95c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b960:	cmp	r2, r3
   1b964:	bge	1b97c <__assert_fail@plt+0xa73c>
   1b968:	sub	r2, fp, #48	; 0x30
   1b96c:	sub	r3, fp, #36	; 0x24
   1b970:	mov	r1, r2
   1b974:	mov	r0, r3
   1b978:	bl	19410 <__assert_fail@plt+0x81d0>
   1b97c:	sub	r2, fp, #48	; 0x30
   1b980:	sub	r1, fp, #36	; 0x24
   1b984:	sub	r3, fp, #36	; 0x24
   1b988:	mov	r0, r3
   1b98c:	bl	1a64c <__assert_fail@plt+0x940c>
   1b990:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b994:	cmp	r3, #0
   1b998:	bne	1b9b0 <__assert_fail@plt+0xa770>
   1b99c:	sub	r3, fp, #48	; 0x30
   1b9a0:	mov	r1, r3
   1b9a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b9a8:	bl	19410 <__assert_fail@plt+0x81d0>
   1b9ac:	b	1bacc <__assert_fail@plt+0xa88c>
   1b9b0:	sub	r3, fp, #36	; 0x24
   1b9b4:	mov	r0, r3
   1b9b8:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1b9bc:	sub	r2, fp, #48	; 0x30
   1b9c0:	sub	r3, fp, #36	; 0x24
   1b9c4:	mov	r1, r2
   1b9c8:	mov	r0, r3
   1b9cc:	bl	1919c <__assert_fail@plt+0x7f5c>
   1b9d0:	str	r0, [fp, #-20]	; 0xffffffec
   1b9d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b9d8:	cmp	r3, #0
   1b9dc:	bne	1b9f4 <__assert_fail@plt+0xa7b4>
   1b9e0:	sub	r3, fp, #36	; 0x24
   1b9e4:	mov	r1, r3
   1b9e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b9ec:	bl	19410 <__assert_fail@plt+0x81d0>
   1b9f0:	b	1bacc <__assert_fail@plt+0xa88c>
   1b9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b9f8:	cmp	r3, #0
   1b9fc:	bge	1ba14 <__assert_fail@plt+0xa7d4>
   1ba00:	sub	r2, fp, #48	; 0x30
   1ba04:	sub	r3, fp, #36	; 0x24
   1ba08:	mov	r1, r2
   1ba0c:	mov	r0, r3
   1ba10:	bl	19410 <__assert_fail@plt+0x81d0>
   1ba14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba18:	cmp	r3, #1
   1ba1c:	bne	1bab4 <__assert_fail@plt+0xa874>
   1ba20:	sub	r2, fp, #48	; 0x30
   1ba24:	sub	r1, fp, #36	; 0x24
   1ba28:	sub	r3, fp, #36	; 0x24
   1ba2c:	mov	r0, r3
   1ba30:	bl	1a64c <__assert_fail@plt+0x940c>
   1ba34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ba38:	ldr	r3, [r3]
   1ba3c:	cmp	r3, #0
   1ba40:	bgt	1ba58 <__assert_fail@plt+0xa818>
   1ba44:	mov	r1, #1
   1ba48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ba4c:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1ba50:	mov	r3, r0
   1ba54:	b	1ba60 <__assert_fail@plt+0xa820>
   1ba58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ba5c:	ldr	r3, [r3, #8]
   1ba60:	str	r3, [fp, #-24]	; 0xffffffe8
   1ba64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba68:	ldr	r2, [r3]
   1ba6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ba70:	ldr	r3, [r3]
   1ba74:	mov	r1, r3
   1ba78:	mov	r0, r2
   1ba7c:	bl	1b53c <__assert_fail@plt+0xa2fc>
   1ba80:	mov	r2, r0
   1ba84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba88:	str	r2, [r3]
   1ba8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba90:	ldr	r3, [r3]
   1ba94:	cmp	r3, #0
   1ba98:	movne	r3, #1
   1ba9c:	moveq	r3, #0
   1baa0:	uxtb	r3, r3
   1baa4:	mov	r2, r3
   1baa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1baac:	str	r2, [r3, #4]
   1bab0:	b	1bacc <__assert_fail@plt+0xa88c>
   1bab4:	sub	r2, fp, #48	; 0x30
   1bab8:	sub	r1, fp, #36	; 0x24
   1babc:	sub	r3, fp, #36	; 0x24
   1bac0:	mov	r0, r3
   1bac4:	bl	19940 <__assert_fail@plt+0x8700>
   1bac8:	b	1b9b0 <__assert_fail@plt+0xa770>
   1bacc:	sub	r3, fp, #36	; 0x24
   1bad0:	mov	r0, r3
   1bad4:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1bad8:	sub	r3, fp, #48	; 0x30
   1badc:	mov	r0, r3
   1bae0:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1bae4:	ldr	r2, [fp, #-16]
   1bae8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1baec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1baf0:	bl	19c6c <__assert_fail@plt+0x8a2c>
   1baf4:	sub	sp, fp, #4
   1baf8:	ldr	fp, [sp]
   1bafc:	add	sp, sp, #4
   1bb00:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb04:	str	fp, [sp, #-8]!
   1bb08:	str	lr, [sp, #4]
   1bb0c:	add	fp, sp, #4
   1bb10:	sub	sp, sp, #136	; 0x88
   1bb14:	str	r0, [fp, #-128]	; 0xffffff80
   1bb18:	str	r1, [fp, #-132]	; 0xffffff7c
   1bb1c:	str	r2, [fp, #-136]	; 0xffffff78
   1bb20:	str	r3, [fp, #-140]	; 0xffffff74
   1bb24:	ldr	r3, [fp, #-140]	; 0xffffff74
   1bb28:	ldr	r3, [r3, #4]
   1bb2c:	cmp	r3, #0
   1bb30:	bne	1bb80 <__assert_fail@plt+0xa940>
   1bb34:	ldr	r0, [fp, #4]
   1bb38:	bl	19064 <__assert_fail@plt+0x7e24>
   1bb3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb40:	ldr	r1, [fp, #4]
   1bb44:	ldr	r0, [fp, #-128]	; 0xffffff80
   1bb48:	bl	19374 <__assert_fail@plt+0x8134>
   1bb4c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1bb50:	cmp	r3, #0
   1bb54:	beq	1bb64 <__assert_fail@plt+0xa924>
   1bb58:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1bb5c:	mov	r2, #0
   1bb60:	str	r2, [r3, #4]
   1bb64:	ldr	r3, [fp, #-136]	; 0xffffff78
   1bb68:	cmp	r3, #0
   1bb6c:	beq	1c1c8 <__assert_fail@plt+0xaf88>
   1bb70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb74:	ldr	r0, [fp, #-136]	; 0xffffff78
   1bb78:	bl	18018 <__assert_fail@plt+0x6dd8>
   1bb7c:	b	1c1c8 <__assert_fail@plt+0xaf88>
   1bb80:	ldr	r3, [fp, #4]
   1bb84:	ldr	r3, [r3, #4]
   1bb88:	cmp	r3, #0
   1bb8c:	bne	1bbdc <__assert_fail@plt+0xa99c>
   1bb90:	ldr	r0, [fp, #-140]	; 0xffffff74
   1bb94:	bl	19064 <__assert_fail@plt+0x7e24>
   1bb98:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb9c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1bba0:	ldr	r0, [fp, #-128]	; 0xffffff80
   1bba4:	bl	19374 <__assert_fail@plt+0x8134>
   1bba8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1bbac:	cmp	r3, #0
   1bbb0:	beq	1bbc0 <__assert_fail@plt+0xa980>
   1bbb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bbb8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1bbbc:	bl	18018 <__assert_fail@plt+0x6dd8>
   1bbc0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1bbc4:	cmp	r3, #0
   1bbc8:	beq	1c1d0 <__assert_fail@plt+0xaf90>
   1bbcc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1bbd0:	mov	r2, #0
   1bbd4:	str	r2, [r3, #4]
   1bbd8:	b	1c1d0 <__assert_fail@plt+0xaf90>
   1bbdc:	sub	r3, fp, #60	; 0x3c
   1bbe0:	mov	r0, r3
   1bbe4:	bl	17e24 <__assert_fail@plt+0x6be4>
   1bbe8:	sub	r3, fp, #72	; 0x48
   1bbec:	mov	r0, r3
   1bbf0:	bl	17e24 <__assert_fail@plt+0x6be4>
   1bbf4:	sub	r3, fp, #84	; 0x54
   1bbf8:	mov	r0, r3
   1bbfc:	bl	17e24 <__assert_fail@plt+0x6be4>
   1bc00:	sub	r3, fp, #96	; 0x60
   1bc04:	mov	r0, r3
   1bc08:	bl	17e24 <__assert_fail@plt+0x6be4>
   1bc0c:	sub	r3, fp, #108	; 0x6c
   1bc10:	mov	r0, r3
   1bc14:	bl	17e24 <__assert_fail@plt+0x6be4>
   1bc18:	sub	r3, fp, #120	; 0x78
   1bc1c:	mov	r0, r3
   1bc20:	bl	17e24 <__assert_fail@plt+0x6be4>
   1bc24:	sub	r3, fp, #60	; 0x3c
   1bc28:	ldr	r1, [fp, #-140]	; 0xffffff74
   1bc2c:	mov	r0, r3
   1bc30:	bl	19374 <__assert_fail@plt+0x8134>
   1bc34:	sub	r3, fp, #60	; 0x3c
   1bc38:	mov	r0, r3
   1bc3c:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1bc40:	str	r0, [fp, #-8]
   1bc44:	sub	r3, fp, #72	; 0x48
   1bc48:	ldr	r1, [fp, #4]
   1bc4c:	mov	r0, r3
   1bc50:	bl	19374 <__assert_fail@plt+0x8134>
   1bc54:	sub	r3, fp, #72	; 0x48
   1bc58:	mov	r0, r3
   1bc5c:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1bc60:	str	r0, [fp, #-12]
   1bc64:	ldr	r2, [fp, #-12]
   1bc68:	ldr	r3, [fp, #-8]
   1bc6c:	cmp	r2, r3
   1bc70:	movcc	r3, r2
   1bc74:	movcs	r3, r3
   1bc78:	str	r3, [fp, #-32]	; 0xffffffe0
   1bc7c:	ldr	r2, [fp, #-8]
   1bc80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc84:	sub	r3, r2, r3
   1bc88:	str	r3, [fp, #-8]
   1bc8c:	ldr	r2, [fp, #-12]
   1bc90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc94:	sub	r3, r2, r3
   1bc98:	str	r3, [fp, #-12]
   1bc9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bca0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1bca4:	cmp	r2, r3
   1bca8:	bge	1bd08 <__assert_fail@plt+0xaac8>
   1bcac:	sub	r2, fp, #72	; 0x48
   1bcb0:	sub	r3, fp, #60	; 0x3c
   1bcb4:	mov	r1, r2
   1bcb8:	mov	r0, r3
   1bcbc:	bl	19410 <__assert_fail@plt+0x81d0>
   1bcc0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1bcc4:	str	r3, [fp, #-36]	; 0xffffffdc
   1bcc8:	ldr	r3, [fp, #4]
   1bccc:	str	r3, [fp, #-140]	; 0xffffff74
   1bcd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bcd4:	str	r3, [fp, #4]
   1bcd8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1bcdc:	str	r3, [fp, #-40]	; 0xffffffd8
   1bce0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1bce4:	str	r3, [fp, #-132]	; 0xffffff7c
   1bce8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bcec:	str	r3, [fp, #-136]	; 0xffffff78
   1bcf0:	ldr	r3, [fp, #-8]
   1bcf4:	str	r3, [fp, #-44]	; 0xffffffd4
   1bcf8:	ldr	r3, [fp, #-12]
   1bcfc:	str	r3, [fp, #-8]
   1bd00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bd04:	str	r3, [fp, #-12]
   1bd08:	sub	r3, fp, #72	; 0x48
   1bd0c:	sub	r2, fp, #60	; 0x3c
   1bd10:	sub	r1, fp, #60	; 0x3c
   1bd14:	sub	r0, fp, #120	; 0x78
   1bd18:	bl	1a480 <__assert_fail@plt+0x9240>
   1bd1c:	sub	r1, fp, #120	; 0x78
   1bd20:	sub	r3, fp, #120	; 0x78
   1bd24:	ldr	r2, [fp, #-8]
   1bd28:	mov	r0, r3
   1bd2c:	bl	19c6c <__assert_fail@plt+0x8a2c>
   1bd30:	sub	r3, fp, #96	; 0x60
   1bd34:	ldr	r1, [fp, #-12]
   1bd38:	mov	r0, r3
   1bd3c:	bl	1e3b4 <__assert_fail@plt+0xd174>
   1bd40:	ldr	r2, [fp, #-8]
   1bd44:	ldr	r3, [fp, #-12]
   1bd48:	add	r3, r2, r3
   1bd4c:	str	r3, [fp, #-16]
   1bd50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bd54:	cmp	r3, #0
   1bd58:	ble	1bec8 <__assert_fail@plt+0xac88>
   1bd5c:	sub	r3, fp, #60	; 0x3c
   1bd60:	mov	r0, r3
   1bd64:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1bd68:	str	r0, [fp, #-20]	; 0xffffffec
   1bd6c:	ldr	r2, [fp, #-8]
   1bd70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd74:	add	r2, r2, r3
   1bd78:	sub	r3, fp, #108	; 0x6c
   1bd7c:	mov	r1, r2
   1bd80:	mov	r0, r3
   1bd84:	bl	1e3b4 <__assert_fail@plt+0xd174>
   1bd88:	ldr	r2, [fp, #-16]
   1bd8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd90:	add	r3, r2, r3
   1bd94:	str	r3, [fp, #-16]
   1bd98:	sub	r2, fp, #72	; 0x48
   1bd9c:	sub	r3, fp, #60	; 0x3c
   1bda0:	mov	r1, r2
   1bda4:	mov	r0, r3
   1bda8:	bl	1919c <__assert_fail@plt+0x7f5c>
   1bdac:	str	r0, [fp, #-48]	; 0xffffffd0
   1bdb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bdb4:	cmp	r3, #0
   1bdb8:	beq	1bedc <__assert_fail@plt+0xac9c>
   1bdbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bdc0:	cmp	r3, #0
   1bdc4:	bge	1be40 <__assert_fail@plt+0xac00>
   1bdc8:	sub	r2, fp, #60	; 0x3c
   1bdcc:	sub	r1, fp, #72	; 0x48
   1bdd0:	sub	r3, fp, #72	; 0x48
   1bdd4:	mov	r0, r3
   1bdd8:	bl	19940 <__assert_fail@plt+0x8700>
   1bddc:	sub	r2, fp, #120	; 0x78
   1bde0:	sub	r1, fp, #108	; 0x6c
   1bde4:	sub	r3, fp, #108	; 0x6c
   1bde8:	mov	r0, r3
   1bdec:	bl	198a0 <__assert_fail@plt+0x8660>
   1bdf0:	sub	r2, fp, #96	; 0x60
   1bdf4:	sub	r1, fp, #84	; 0x54
   1bdf8:	sub	r3, fp, #84	; 0x54
   1bdfc:	mov	r0, r3
   1be00:	bl	198a0 <__assert_fail@plt+0x8660>
   1be04:	sub	r3, fp, #72	; 0x48
   1be08:	mov	r0, r3
   1be0c:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1be10:	str	r0, [fp, #-20]	; 0xffffffec
   1be14:	sub	r1, fp, #120	; 0x78
   1be18:	sub	r3, fp, #120	; 0x78
   1be1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be20:	mov	r0, r3
   1be24:	bl	19c6c <__assert_fail@plt+0x8a2c>
   1be28:	sub	r1, fp, #96	; 0x60
   1be2c:	sub	r3, fp, #96	; 0x60
   1be30:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be34:	mov	r0, r3
   1be38:	bl	19c6c <__assert_fail@plt+0x8a2c>
   1be3c:	b	1beb4 <__assert_fail@plt+0xac74>
   1be40:	sub	r2, fp, #72	; 0x48
   1be44:	sub	r1, fp, #60	; 0x3c
   1be48:	sub	r3, fp, #60	; 0x3c
   1be4c:	mov	r0, r3
   1be50:	bl	19940 <__assert_fail@plt+0x8700>
   1be54:	sub	r2, fp, #120	; 0x78
   1be58:	sub	r1, fp, #108	; 0x6c
   1be5c:	sub	r3, fp, #120	; 0x78
   1be60:	mov	r0, r3
   1be64:	bl	198a0 <__assert_fail@plt+0x8660>
   1be68:	sub	r2, fp, #96	; 0x60
   1be6c:	sub	r1, fp, #84	; 0x54
   1be70:	sub	r3, fp, #96	; 0x60
   1be74:	mov	r0, r3
   1be78:	bl	198a0 <__assert_fail@plt+0x8660>
   1be7c:	sub	r3, fp, #60	; 0x3c
   1be80:	mov	r0, r3
   1be84:	bl	1b808 <__assert_fail@plt+0xa5c8>
   1be88:	str	r0, [fp, #-20]	; 0xffffffec
   1be8c:	sub	r1, fp, #108	; 0x6c
   1be90:	sub	r3, fp, #108	; 0x6c
   1be94:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be98:	mov	r0, r3
   1be9c:	bl	19c6c <__assert_fail@plt+0x8a2c>
   1bea0:	sub	r1, fp, #84	; 0x54
   1bea4:	sub	r3, fp, #84	; 0x54
   1bea8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1beac:	mov	r0, r3
   1beb0:	bl	19c6c <__assert_fail@plt+0x8a2c>
   1beb4:	ldr	r2, [fp, #-16]
   1beb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bebc:	add	r3, r2, r3
   1bec0:	str	r3, [fp, #-16]
   1bec4:	b	1bd98 <__assert_fail@plt+0xab58>
   1bec8:	sub	r3, fp, #108	; 0x6c
   1becc:	ldr	r1, [fp, #-8]
   1bed0:	mov	r0, r3
   1bed4:	bl	1e3b4 <__assert_fail@plt+0xd174>
   1bed8:	b	1bee0 <__assert_fail@plt+0xaca0>
   1bedc:	nop	{0}
   1bee0:	sub	r1, fp, #72	; 0x48
   1bee4:	sub	r3, fp, #72	; 0x48
   1bee8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1beec:	mov	r0, r3
   1bef0:	bl	19c6c <__assert_fail@plt+0x8a2c>
   1bef4:	sub	r2, fp, #84	; 0x54
   1bef8:	sub	r3, fp, #84	; 0x54
   1befc:	mov	r1, r2
   1bf00:	mov	r0, r3
   1bf04:	bl	193c4 <__assert_fail@plt+0x8184>
   1bf08:	sub	r2, fp, #72	; 0x48
   1bf0c:	sub	r3, fp, #96	; 0x60
   1bf10:	ldr	r1, [fp, #4]
   1bf14:	mov	r0, r3
   1bf18:	bl	1ae14 <__assert_fail@plt+0x9bd4>
   1bf1c:	sub	r2, fp, #96	; 0x60
   1bf20:	sub	r3, fp, #96	; 0x60
   1bf24:	mov	r1, r2
   1bf28:	mov	r0, r3
   1bf2c:	bl	19374 <__assert_fail@plt+0x8134>
   1bf30:	sub	r2, fp, #72	; 0x48
   1bf34:	sub	r3, fp, #120	; 0x78
   1bf38:	ldr	r1, [fp, #-140]	; 0xffffff74
   1bf3c:	mov	r0, r3
   1bf40:	bl	1ae14 <__assert_fail@plt+0x9bd4>
   1bf44:	sub	r2, fp, #120	; 0x78
   1bf48:	sub	r3, fp, #120	; 0x78
   1bf4c:	mov	r1, r2
   1bf50:	mov	r0, r3
   1bf54:	bl	19374 <__assert_fail@plt+0x8134>
   1bf58:	b	1c07c <__assert_fail@plt+0xae3c>
   1bf5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bf60:	cmp	r3, #0
   1bf64:	movne	r3, #1
   1bf68:	moveq	r3, #0
   1bf6c:	uxtb	r3, r3
   1bf70:	mov	r2, r3
   1bf74:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1bf78:	ldr	r3, [r3]
   1bf7c:	and	r3, r3, r2
   1bf80:	cmp	r3, #0
   1bf84:	bne	1bfb4 <__assert_fail@plt+0xad74>
   1bf88:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bf8c:	cmp	r3, #0
   1bf90:	movne	r3, #1
   1bf94:	moveq	r3, #0
   1bf98:	uxtb	r3, r3
   1bf9c:	mov	r2, r3
   1bfa0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bfa4:	ldr	r3, [r3]
   1bfa8:	and	r3, r3, r2
   1bfac:	cmp	r3, #0
   1bfb0:	beq	1bfdc <__assert_fail@plt+0xad9c>
   1bfb4:	sub	r2, fp, #96	; 0x60
   1bfb8:	sub	r1, fp, #84	; 0x54
   1bfbc:	sub	r3, fp, #84	; 0x54
   1bfc0:	mov	r0, r3
   1bfc4:	bl	19940 <__assert_fail@plt+0x8700>
   1bfc8:	sub	r2, fp, #120	; 0x78
   1bfcc:	sub	r1, fp, #108	; 0x6c
   1bfd0:	sub	r3, fp, #108	; 0x6c
   1bfd4:	mov	r0, r3
   1bfd8:	bl	198a0 <__assert_fail@plt+0x8660>
   1bfdc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bfe0:	cmp	r3, #0
   1bfe4:	movne	r3, #1
   1bfe8:	moveq	r3, #0
   1bfec:	uxtb	r3, r3
   1bff0:	mov	r2, r3
   1bff4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bff8:	ldr	r3, [r3]
   1bffc:	and	r3, r3, r2
   1c000:	cmp	r3, #0
   1c004:	bne	1c034 <__assert_fail@plt+0xadf4>
   1c008:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c00c:	cmp	r3, #0
   1c010:	movne	r3, #1
   1c014:	moveq	r3, #0
   1c018:	uxtb	r3, r3
   1c01c:	mov	r2, r3
   1c020:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c024:	ldr	r3, [r3]
   1c028:	and	r3, r3, r2
   1c02c:	cmp	r3, #0
   1c030:	beq	1c054 <__assert_fail@plt+0xae14>
   1c034:	movw	r3, #6752	; 0x1a60
   1c038:	movt	r3, #4
   1c03c:	movw	r2, #2950	; 0xb86
   1c040:	movw	r1, #4700	; 0x125c
   1c044:	movt	r1, #4
   1c048:	movw	r0, #5444	; 0x1544
   1c04c:	movt	r0, #4
   1c050:	bl	11240 <__assert_fail@plt>
   1c054:	sub	r1, fp, #84	; 0x54
   1c058:	sub	r3, fp, #84	; 0x54
   1c05c:	mov	r2, #1
   1c060:	mov	r0, r3
   1c064:	bl	1ad04 <__assert_fail@plt+0x9ac4>
   1c068:	sub	r1, fp, #108	; 0x6c
   1c06c:	sub	r3, fp, #108	; 0x6c
   1c070:	mov	r2, #1
   1c074:	mov	r0, r3
   1c078:	bl	1ad04 <__assert_fail@plt+0x9ac4>
   1c07c:	ldr	r3, [fp, #-16]
   1c080:	sub	r2, r3, #1
   1c084:	str	r2, [fp, #-16]
   1c088:	cmp	r3, #0
   1c08c:	bne	1bf5c <__assert_fail@plt+0xad1c>
   1c090:	sub	r2, fp, #96	; 0x60
   1c094:	sub	r1, fp, #84	; 0x54
   1c098:	sub	r3, fp, #96	; 0x60
   1c09c:	mov	r0, r3
   1c0a0:	bl	198a0 <__assert_fail@plt+0x8660>
   1c0a4:	sub	r2, fp, #96	; 0x60
   1c0a8:	sub	r3, fp, #84	; 0x54
   1c0ac:	mov	r1, r2
   1c0b0:	mov	r0, r3
   1c0b4:	bl	19310 <__assert_fail@plt+0x80d0>
   1c0b8:	mov	r3, r0
   1c0bc:	cmp	r3, #0
   1c0c0:	ble	1c0ec <__assert_fail@plt+0xaeac>
   1c0c4:	sub	r2, fp, #96	; 0x60
   1c0c8:	sub	r3, fp, #84	; 0x54
   1c0cc:	mov	r1, r2
   1c0d0:	mov	r0, r3
   1c0d4:	bl	19410 <__assert_fail@plt+0x81d0>
   1c0d8:	sub	r2, fp, #120	; 0x78
   1c0dc:	sub	r1, fp, #108	; 0x6c
   1c0e0:	sub	r3, fp, #108	; 0x6c
   1c0e4:	mov	r0, r3
   1c0e8:	bl	19940 <__assert_fail@plt+0x8700>
   1c0ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   1c0f0:	ldr	r3, [r3, #4]
   1c0f4:	cmp	r3, #0
   1c0f8:	bge	1c110 <__assert_fail@plt+0xaed0>
   1c0fc:	sub	r2, fp, #84	; 0x54
   1c100:	sub	r3, fp, #84	; 0x54
   1c104:	mov	r1, r2
   1c108:	mov	r0, r3
   1c10c:	bl	193c4 <__assert_fail@plt+0x8184>
   1c110:	ldr	r3, [fp, #4]
   1c114:	ldr	r3, [r3, #4]
   1c118:	cmp	r3, #0
   1c11c:	bge	1c134 <__assert_fail@plt+0xaef4>
   1c120:	sub	r2, fp, #108	; 0x6c
   1c124:	sub	r3, fp, #108	; 0x6c
   1c128:	mov	r1, r2
   1c12c:	mov	r0, r3
   1c130:	bl	193c4 <__assert_fail@plt+0x8184>
   1c134:	sub	r3, fp, #72	; 0x48
   1c138:	mov	r1, r3
   1c13c:	ldr	r0, [fp, #-128]	; 0xffffff80
   1c140:	bl	19410 <__assert_fail@plt+0x81d0>
   1c144:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1c148:	cmp	r3, #0
   1c14c:	beq	1c160 <__assert_fail@plt+0xaf20>
   1c150:	sub	r3, fp, #84	; 0x54
   1c154:	mov	r1, r3
   1c158:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1c15c:	bl	19410 <__assert_fail@plt+0x81d0>
   1c160:	ldr	r3, [fp, #-136]	; 0xffffff78
   1c164:	cmp	r3, #0
   1c168:	beq	1c17c <__assert_fail@plt+0xaf3c>
   1c16c:	sub	r3, fp, #108	; 0x6c
   1c170:	mov	r1, r3
   1c174:	ldr	r0, [fp, #-136]	; 0xffffff78
   1c178:	bl	19410 <__assert_fail@plt+0x81d0>
   1c17c:	sub	r3, fp, #60	; 0x3c
   1c180:	mov	r0, r3
   1c184:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c188:	sub	r3, fp, #72	; 0x48
   1c18c:	mov	r0, r3
   1c190:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c194:	sub	r3, fp, #84	; 0x54
   1c198:	mov	r0, r3
   1c19c:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c1a0:	sub	r3, fp, #96	; 0x60
   1c1a4:	mov	r0, r3
   1c1a8:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c1ac:	sub	r3, fp, #108	; 0x6c
   1c1b0:	mov	r0, r3
   1c1b4:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c1b8:	sub	r3, fp, #120	; 0x78
   1c1bc:	mov	r0, r3
   1c1c0:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c1c4:	b	1c1d4 <__assert_fail@plt+0xaf94>
   1c1c8:	nop	{0}
   1c1cc:	b	1c1d4 <__assert_fail@plt+0xaf94>
   1c1d0:	nop	{0}
   1c1d4:	sub	sp, fp, #4
   1c1d8:	ldr	fp, [sp]
   1c1dc:	add	sp, sp, #4
   1c1e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1e4:	str	fp, [sp, #-8]!
   1c1e8:	str	lr, [sp, #4]
   1c1ec:	add	fp, sp, #4
   1c1f0:	sub	sp, sp, #32
   1c1f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1f8:	str	r1, [fp, #-28]	; 0xffffffe4
   1c1fc:	str	r2, [fp, #-32]	; 0xffffffe0
   1c200:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c204:	ldr	r3, [r3, #4]
   1c208:	cmp	r3, #0
   1c20c:	beq	1c220 <__assert_fail@plt+0xafe0>
   1c210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c214:	ldr	r3, [r3, #4]
   1c218:	cmp	r3, #0
   1c21c:	bne	1c230 <__assert_fail@plt+0xaff0>
   1c220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c224:	mov	r2, #0
   1c228:	str	r2, [r3, #4]
   1c22c:	b	1c290 <__assert_fail@plt+0xb050>
   1c230:	sub	r3, fp, #16
   1c234:	mov	r0, r3
   1c238:	bl	17e24 <__assert_fail@plt+0x6be4>
   1c23c:	sub	r3, fp, #16
   1c240:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c244:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c248:	mov	r0, r3
   1c24c:	bl	1b88c <__assert_fail@plt+0xa64c>
   1c250:	sub	r2, fp, #16
   1c254:	sub	r3, fp, #16
   1c258:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c25c:	mov	r0, r3
   1c260:	bl	1ae14 <__assert_fail@plt+0x9bd4>
   1c264:	sub	r3, fp, #16
   1c268:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c26c:	mov	r1, r3
   1c270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c274:	bl	19ab8 <__assert_fail@plt+0x8878>
   1c278:	sub	r3, fp, #16
   1c27c:	mov	r0, r3
   1c280:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c28c:	bl	19374 <__assert_fail@plt+0x8134>
   1c290:	sub	sp, fp, #4
   1c294:	ldr	fp, [sp]
   1c298:	add	sp, sp, #4
   1c29c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2a0:	str	fp, [sp, #-8]!
   1c2a4:	str	lr, [sp, #4]
   1c2a8:	add	fp, sp, #4
   1c2ac:	sub	sp, sp, #16
   1c2b0:	str	r0, [fp, #-8]
   1c2b4:	str	r1, [fp, #-12]
   1c2b8:	str	r2, [fp, #-16]
   1c2bc:	ldr	r3, [fp, #-16]
   1c2c0:	cmp	r3, #0
   1c2c4:	beq	1c2d8 <__assert_fail@plt+0xb098>
   1c2c8:	ldr	r3, [fp, #-12]
   1c2cc:	ldr	r3, [r3, #4]
   1c2d0:	cmp	r3, #0
   1c2d4:	bne	1c2e8 <__assert_fail@plt+0xb0a8>
   1c2d8:	ldr	r3, [fp, #-8]
   1c2dc:	mov	r2, #0
   1c2e0:	str	r2, [r3, #4]
   1c2e4:	b	1c324 <__assert_fail@plt+0xb0e4>
   1c2e8:	ldr	r2, [fp, #-16]
   1c2ec:	ldr	r1, [fp, #-12]
   1c2f0:	mov	r0, #0
   1c2f4:	bl	1b76c <__assert_fail@plt+0xa52c>
   1c2f8:	mov	r2, r0
   1c2fc:	ldr	r3, [fp, #-16]
   1c300:	udiv	r3, r3, r2
   1c304:	str	r3, [fp, #-16]
   1c308:	ldr	r2, [fp, #-16]
   1c30c:	ldr	r1, [fp, #-12]
   1c310:	ldr	r0, [fp, #-8]
   1c314:	bl	19a58 <__assert_fail@plt+0x8818>
   1c318:	ldr	r1, [fp, #-8]
   1c31c:	ldr	r0, [fp, #-8]
   1c320:	bl	19374 <__assert_fail@plt+0x8134>
   1c324:	sub	sp, fp, #4
   1c328:	ldr	fp, [sp]
   1c32c:	add	sp, sp, #4
   1c330:	pop	{pc}		; (ldr pc, [sp], #4)
   1c334:	str	fp, [sp, #-8]!
   1c338:	str	lr, [sp, #4]
   1c33c:	add	fp, sp, #4
   1c340:	sub	sp, sp, #56	; 0x38
   1c344:	str	r0, [fp, #-40]	; 0xffffffd8
   1c348:	str	r1, [fp, #-44]	; 0xffffffd4
   1c34c:	str	r2, [fp, #-48]	; 0xffffffd0
   1c350:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c354:	ldr	r3, [r3, #4]
   1c358:	cmp	r3, #0
   1c35c:	beq	1c378 <__assert_fail@plt+0xb138>
   1c360:	mov	r1, #1
   1c364:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c368:	bl	19264 <__assert_fail@plt+0x8024>
   1c36c:	mov	r3, r0
   1c370:	cmp	r3, #0
   1c374:	bgt	1c380 <__assert_fail@plt+0xb140>
   1c378:	mov	r3, #0
   1c37c:	b	1c45c <__assert_fail@plt+0xb21c>
   1c380:	sub	r3, fp, #20
   1c384:	mov	r0, r3
   1c388:	bl	17e24 <__assert_fail@plt+0x6be4>
   1c38c:	sub	r3, fp, #32
   1c390:	mov	r0, r3
   1c394:	bl	17e24 <__assert_fail@plt+0x6be4>
   1c398:	sub	r1, fp, #32
   1c39c:	sub	r0, fp, #20
   1c3a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c3a4:	str	r3, [sp]
   1c3a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c3ac:	mov	r2, #0
   1c3b0:	bl	1bb04 <__assert_fail@plt+0xa8c4>
   1c3b4:	sub	r3, fp, #20
   1c3b8:	mov	r1, #1
   1c3bc:	mov	r0, r3
   1c3c0:	bl	19140 <__assert_fail@plt+0x7f00>
   1c3c4:	mov	r3, r0
   1c3c8:	cmp	r3, #0
   1c3cc:	moveq	r3, #1
   1c3d0:	movne	r3, #0
   1c3d4:	uxtb	r3, r3
   1c3d8:	str	r3, [fp, #-8]
   1c3dc:	ldr	r3, [fp, #-8]
   1c3e0:	cmp	r3, #0
   1c3e4:	beq	1c440 <__assert_fail@plt+0xb200>
   1c3e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c3ec:	cmp	r3, #0
   1c3f0:	bge	1c430 <__assert_fail@plt+0xb1f0>
   1c3f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c3f8:	ldr	r3, [r3, #4]
   1c3fc:	cmp	r3, #0
   1c400:	blt	1c41c <__assert_fail@plt+0xb1dc>
   1c404:	sub	r1, fp, #32
   1c408:	sub	r3, fp, #32
   1c40c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c410:	mov	r0, r3
   1c414:	bl	198a0 <__assert_fail@plt+0x8660>
   1c418:	b	1c430 <__assert_fail@plt+0xb1f0>
   1c41c:	sub	r1, fp, #32
   1c420:	sub	r3, fp, #32
   1c424:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c428:	mov	r0, r3
   1c42c:	bl	19940 <__assert_fail@plt+0x8700>
   1c430:	sub	r3, fp, #32
   1c434:	mov	r1, r3
   1c438:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c43c:	bl	19410 <__assert_fail@plt+0x81d0>
   1c440:	sub	r3, fp, #20
   1c444:	mov	r0, r3
   1c448:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c44c:	sub	r3, fp, #32
   1c450:	mov	r0, r3
   1c454:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c458:	ldr	r3, [fp, #-8]
   1c45c:	mov	r0, r3
   1c460:	sub	sp, fp, #4
   1c464:	ldr	fp, [sp]
   1c468:	add	sp, sp, #4
   1c46c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c470:	str	fp, [sp, #-8]!
   1c474:	str	lr, [sp, #4]
   1c478:	add	fp, sp, #4
   1c47c:	sub	sp, sp, #32
   1c480:	str	r0, [fp, #-24]	; 0xffffffe8
   1c484:	str	r1, [fp, #-28]	; 0xffffffe4
   1c488:	str	r2, [fp, #-32]	; 0xffffffe0
   1c48c:	sub	r3, fp, #20
   1c490:	mov	r1, #1
   1c494:	mov	r0, r3
   1c498:	bl	18224 <__assert_fail@plt+0x6fe4>
   1c49c:	mov	r3, #-2147483648	; 0x80000000
   1c4a0:	str	r3, [fp, #-8]
   1c4a4:	sub	r2, fp, #20
   1c4a8:	sub	r1, fp, #20
   1c4ac:	sub	r3, fp, #20
   1c4b0:	mov	r0, r3
   1c4b4:	bl	19ab8 <__assert_fail@plt+0x8878>
   1c4b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c4bc:	ldr	r3, [fp, #-8]
   1c4c0:	and	r3, r3, r2
   1c4c4:	cmp	r3, #0
   1c4c8:	beq	1c4e0 <__assert_fail@plt+0xb2a0>
   1c4cc:	sub	r1, fp, #20
   1c4d0:	sub	r3, fp, #20
   1c4d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c4d8:	mov	r0, r3
   1c4dc:	bl	19ab8 <__assert_fail@plt+0x8878>
   1c4e0:	ldr	r3, [fp, #-8]
   1c4e4:	lsr	r3, r3, #1
   1c4e8:	str	r3, [fp, #-8]
   1c4ec:	ldr	r3, [fp, #-8]
   1c4f0:	cmp	r3, #0
   1c4f4:	bne	1c4a4 <__assert_fail@plt+0xb264>
   1c4f8:	sub	r3, fp, #20
   1c4fc:	mov	r1, r3
   1c500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c504:	bl	19410 <__assert_fail@plt+0x81d0>
   1c508:	sub	r3, fp, #20
   1c50c:	mov	r0, r3
   1c510:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c514:	nop	{0}
   1c518:	sub	sp, fp, #4
   1c51c:	ldr	fp, [sp]
   1c520:	add	sp, sp, #4
   1c524:	pop	{pc}		; (ldr pc, [sp], #4)
   1c528:	str	fp, [sp, #-8]!
   1c52c:	str	lr, [sp, #4]
   1c530:	add	fp, sp, #4
   1c534:	sub	sp, sp, #32
   1c538:	str	r0, [fp, #-24]	; 0xffffffe8
   1c53c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c540:	str	r2, [fp, #-32]	; 0xffffffe0
   1c544:	sub	r3, fp, #16
   1c548:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c54c:	mov	r0, r3
   1c550:	bl	18224 <__assert_fail@plt+0x6fe4>
   1c554:	sub	r3, fp, #16
   1c558:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c55c:	mov	r1, r3
   1c560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c564:	bl	1c470 <__assert_fail@plt+0xb230>
   1c568:	sub	r3, fp, #16
   1c56c:	mov	r0, r3
   1c570:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c574:	nop	{0}
   1c578:	sub	sp, fp, #4
   1c57c:	ldr	fp, [sp]
   1c580:	add	sp, sp, #4
   1c584:	pop	{pc}		; (ldr pc, [sp], #4)
   1c588:	str	fp, [sp, #-8]!
   1c58c:	str	lr, [sp, #4]
   1c590:	add	fp, sp, #4
   1c594:	sub	sp, sp, #112	; 0x70
   1c598:	str	r0, [fp, #-96]	; 0xffffffa0
   1c59c:	str	r1, [fp, #-100]	; 0xffffff9c
   1c5a0:	str	r2, [fp, #-104]	; 0xffffff98
   1c5a4:	str	r3, [fp, #-108]	; 0xffffff94
   1c5a8:	mov	r3, #0
   1c5ac:	str	r3, [fp, #-16]
   1c5b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c5b4:	ldr	r3, [r3, #4]
   1c5b8:	cmp	r3, #0
   1c5bc:	rsblt	r3, r3, #0
   1c5c0:	str	r3, [fp, #-8]
   1c5c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c5c8:	ldr	r3, [r3, #4]
   1c5cc:	cmp	r3, #0
   1c5d0:	rsblt	r3, r3, #0
   1c5d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c5d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5dc:	cmp	r3, #0
   1c5e0:	bne	1c5f0 <__assert_fail@plt+0xb3b0>
   1c5e4:	movw	r0, #5480	; 0x1568
   1c5e8:	movt	r0, #4
   1c5ec:	bl	13840 <__assert_fail@plt+0x2600>
   1c5f0:	ldr	r3, [fp, #-8]
   1c5f4:	cmp	r3, #0
   1c5f8:	bne	1c60c <__assert_fail@plt+0xb3cc>
   1c5fc:	mov	r1, #1
   1c600:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1c604:	bl	180b0 <__assert_fail@plt+0x6e70>
   1c608:	b	1c970 <__assert_fail@plt+0xb730>
   1c60c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c610:	ldr	r3, [r3, #8]
   1c614:	str	r3, [fp, #-12]
   1c618:	sub	r3, fp, #88	; 0x58
   1c61c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c620:	ldr	r1, [fp, #-12]
   1c624:	mov	r0, r3
   1c628:	bl	15a5c <__assert_fail@plt+0x481c>
   1c62c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1c630:	str	r3, [fp, #-32]	; 0xffffffe0
   1c634:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c638:	cmp	r3, #0
   1c63c:	beq	1c6a0 <__assert_fail@plt+0xb460>
   1c640:	mov	r3, #0
   1c644:	str	r3, [fp, #-88]	; 0xffffffa8
   1c648:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c64c:	bl	13ab0 <__assert_fail@plt+0x2870>
   1c650:	str	r0, [fp, #-16]
   1c654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c658:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c65c:	ldr	r1, [fp, #-12]
   1c660:	ldr	r0, [fp, #-16]
   1c664:	bl	14cf8 <__assert_fail@plt+0x3ab8>
   1c668:	str	r0, [fp, #-36]	; 0xffffffdc
   1c66c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c670:	cmp	r3, #0
   1c674:	beq	1c698 <__assert_fail@plt+0xb458>
   1c678:	movw	r3, #6764	; 0x1a6c
   1c67c:	movt	r3, #4
   1c680:	movw	r2, #3116	; 0xc2c
   1c684:	movw	r1, #4700	; 0x125c
   1c688:	movt	r1, #4
   1c68c:	movw	r0, #5252	; 0x1484
   1c690:	movt	r0, #4
   1c694:	bl	11240 <__assert_fail@plt>
   1c698:	ldr	r3, [fp, #-16]
   1c69c:	str	r3, [fp, #-12]
   1c6a0:	sub	r3, fp, #72	; 0x48
   1c6a4:	mov	r0, r3
   1c6a8:	bl	17e24 <__assert_fail@plt+0x6be4>
   1c6ac:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c6b0:	ldr	r3, [r3, #4]
   1c6b4:	cmp	r3, #0
   1c6b8:	bge	1c6ec <__assert_fail@plt+0xb4ac>
   1c6bc:	sub	r3, fp, #72	; 0x48
   1c6c0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c6c4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1c6c8:	mov	r0, r3
   1c6cc:	bl	1c334 <__assert_fail@plt+0xb0f4>
   1c6d0:	mov	r3, r0
   1c6d4:	cmp	r3, #0
   1c6d8:	bne	1c7ec <__assert_fail@plt+0xb5ac>
   1c6dc:	movw	r0, #5504	; 0x1580
   1c6e0:	movt	r0, #4
   1c6e4:	bl	13840 <__assert_fail@plt+0x2600>
   1c6e8:	b	1c7ec <__assert_fail@plt+0xb5ac>
   1c6ec:	sub	r3, fp, #72	; 0x48
   1c6f0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1c6f4:	mov	r0, r3
   1c6f8:	bl	19374 <__assert_fail@plt+0x8134>
   1c6fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c700:	str	r3, [fp, #-20]	; 0xffffffec
   1c704:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c708:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c70c:	cmp	r2, r3
   1c710:	blt	1c740 <__assert_fail@plt+0xb500>
   1c714:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1c718:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1c71c:	sub	r3, fp, #88	; 0x58
   1c720:	str	r3, [sp, #4]
   1c724:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c728:	str	r3, [sp]
   1c72c:	ldr	r3, [fp, #-12]
   1c730:	mov	r0, #0
   1c734:	bl	16c78 <__assert_fail@plt+0x5a38>
   1c738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c73c:	str	r3, [fp, #-20]	; 0xffffffec
   1c740:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c744:	ldr	r3, [r3, #4]
   1c748:	cmp	r3, #0
   1c74c:	bge	1c7d4 <__assert_fail@plt+0xb594>
   1c750:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c754:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c758:	cmp	r2, r3
   1c75c:	ble	1c778 <__assert_fail@plt+0xb538>
   1c760:	sub	r3, fp, #72	; 0x48
   1c764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c768:	mov	r0, r3
   1c76c:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1c770:	mov	r3, r0
   1c774:	b	1c77c <__assert_fail@plt+0xb53c>
   1c778:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c77c:	str	r3, [fp, #-40]	; 0xffffffd8
   1c780:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c784:	str	r3, [sp]
   1c788:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c78c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c790:	ldr	r1, [fp, #-12]
   1c794:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c798:	bl	1437c <__assert_fail@plt+0x313c>
   1c79c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c7a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c7a4:	cmp	r3, #0
   1c7a8:	beq	1c7cc <__assert_fail@plt+0xb58c>
   1c7ac:	movw	r3, #6764	; 0x1a6c
   1c7b0:	movt	r3, #4
   1c7b4:	movw	r2, #3145	; 0xc49
   1c7b8:	movw	r1, #4700	; 0x125c
   1c7bc:	movt	r1, #4
   1c7c0:	movw	r0, #5252	; 0x1484
   1c7c4:	movt	r0, #4
   1c7c8:	bl	11240 <__assert_fail@plt>
   1c7cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7d0:	str	r3, [fp, #-20]	; 0xffffffec
   1c7d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c7d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c7dc:	mov	r0, r3
   1c7e0:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1c7e4:	mov	r3, r0
   1c7e8:	str	r3, [fp, #-68]	; 0xffffffbc
   1c7ec:	sub	r3, fp, #60	; 0x3c
   1c7f0:	mov	r1, #1
   1c7f4:	mov	r0, r3
   1c7f8:	bl	18224 <__assert_fail@plt+0x6fe4>
   1c7fc:	b	1c8c4 <__assert_fail@plt+0xb684>
   1c800:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c804:	ldr	r2, [r3, #8]
   1c808:	ldr	r3, [fp, #-8]
   1c80c:	lsl	r3, r3, #2
   1c810:	add	r3, r2, r3
   1c814:	ldr	r3, [r3]
   1c818:	str	r3, [fp, #-48]	; 0xffffffd0
   1c81c:	mov	r3, #-2147483648	; 0x80000000
   1c820:	str	r3, [fp, #-24]	; 0xffffffe8
   1c824:	sub	r2, fp, #60	; 0x3c
   1c828:	sub	r1, fp, #60	; 0x3c
   1c82c:	sub	r3, fp, #60	; 0x3c
   1c830:	mov	r0, r3
   1c834:	bl	19ab8 <__assert_fail@plt+0x8878>
   1c838:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c840:	and	r3, r3, r2
   1c844:	cmp	r3, #0
   1c848:	beq	1c860 <__assert_fail@plt+0xb620>
   1c84c:	sub	r2, fp, #72	; 0x48
   1c850:	sub	r1, fp, #60	; 0x3c
   1c854:	sub	r3, fp, #60	; 0x3c
   1c858:	mov	r0, r3
   1c85c:	bl	19ab8 <__assert_fail@plt+0x8878>
   1c860:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c868:	cmp	r2, r3
   1c86c:	bge	1c8ac <__assert_fail@plt+0xb66c>
   1c870:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c874:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c878:	sub	r3, fp, #88	; 0x58
   1c87c:	str	r3, [sp, #4]
   1c880:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c884:	str	r3, [sp]
   1c888:	ldr	r3, [fp, #-12]
   1c88c:	mov	r0, #0
   1c890:	bl	16c78 <__assert_fail@plt+0x5a38>
   1c894:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c89c:	mov	r0, r3
   1c8a0:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1c8a4:	mov	r3, r0
   1c8a8:	str	r3, [fp, #-56]	; 0xffffffc8
   1c8ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c8b0:	lsr	r3, r3, #1
   1c8b4:	str	r3, [fp, #-24]	; 0xffffffe8
   1c8b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c8bc:	cmp	r3, #0
   1c8c0:	bne	1c824 <__assert_fail@plt+0xb5e4>
   1c8c4:	ldr	r3, [fp, #-8]
   1c8c8:	sub	r3, r3, #1
   1c8cc:	str	r3, [fp, #-8]
   1c8d0:	ldr	r3, [fp, #-8]
   1c8d4:	cmp	r3, #0
   1c8d8:	bge	1c800 <__assert_fail@plt+0xb5c0>
   1c8dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c8e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c8e4:	cmp	r2, r3
   1c8e8:	bgt	1c930 <__assert_fail@plt+0xb6f0>
   1c8ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c8f0:	str	r3, [fp, #-88]	; 0xffffffa8
   1c8f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c8f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c8fc:	sub	r3, fp, #88	; 0x58
   1c900:	str	r3, [sp, #4]
   1c904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c908:	str	r3, [sp]
   1c90c:	ldr	r3, [fp, #-12]
   1c910:	mov	r0, #0
   1c914:	bl	16c78 <__assert_fail@plt+0x5a38>
   1c918:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c91c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c920:	mov	r0, r3
   1c924:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1c928:	mov	r3, r0
   1c92c:	str	r3, [fp, #-56]	; 0xffffffc8
   1c930:	ldr	r3, [fp, #-16]
   1c934:	cmp	r3, #0
   1c938:	beq	1c948 <__assert_fail@plt+0xb708>
   1c93c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c940:	ldr	r0, [fp, #-16]
   1c944:	bl	13b7c <__assert_fail@plt+0x293c>
   1c948:	sub	r3, fp, #60	; 0x3c
   1c94c:	mov	r1, r3
   1c950:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1c954:	bl	19410 <__assert_fail@plt+0x81d0>
   1c958:	sub	r3, fp, #60	; 0x3c
   1c95c:	mov	r0, r3
   1c960:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c964:	sub	r3, fp, #72	; 0x48
   1c968:	mov	r0, r3
   1c96c:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c970:	sub	sp, fp, #4
   1c974:	ldr	fp, [sp]
   1c978:	add	sp, sp, #4
   1c97c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c980:	str	fp, [sp, #-8]!
   1c984:	str	lr, [sp, #4]
   1c988:	add	fp, sp, #4
   1c98c:	sub	sp, sp, #32
   1c990:	str	r0, [fp, #-24]	; 0xffffffe8
   1c994:	str	r1, [fp, #-28]	; 0xffffffe4
   1c998:	str	r2, [fp, #-32]	; 0xffffffe0
   1c99c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c9a0:	sub	r3, fp, #16
   1c9a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c9a8:	mov	r0, r3
   1c9ac:	bl	18224 <__assert_fail@plt+0x6fe4>
   1c9b0:	sub	r2, fp, #16
   1c9b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c9b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9c0:	bl	1c588 <__assert_fail@plt+0xb348>
   1c9c4:	sub	r3, fp, #16
   1c9c8:	mov	r0, r3
   1c9cc:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1c9d0:	nop	{0}
   1c9d4:	sub	sp, fp, #4
   1c9d8:	ldr	fp, [sp]
   1c9dc:	add	sp, sp, #4
   1c9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9e4:	str	fp, [sp, #-8]!
   1c9e8:	str	lr, [sp, #4]
   1c9ec:	add	fp, sp, #4
   1c9f0:	sub	sp, sp, #64	; 0x40
   1c9f4:	str	r0, [fp, #-56]	; 0xffffffc8
   1c9f8:	str	r1, [fp, #-60]	; 0xffffffc4
   1c9fc:	str	r2, [fp, #-64]	; 0xffffffc0
   1ca00:	str	r3, [fp, #-68]	; 0xffffffbc
   1ca04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ca08:	ldr	r3, [r3, #4]
   1ca0c:	lsr	r3, r3, #31
   1ca10:	uxtb	r3, r3
   1ca14:	str	r3, [fp, #-8]
   1ca18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ca1c:	mvn	r2, r3
   1ca20:	ldr	r3, [fp, #-8]
   1ca24:	and	r3, r3, r2
   1ca28:	cmp	r3, #0
   1ca2c:	beq	1ca3c <__assert_fail@plt+0xb7fc>
   1ca30:	movw	r0, #5560	; 0x15b8
   1ca34:	movt	r0, #4
   1ca38:	bl	13840 <__assert_fail@plt+0x2600>
   1ca3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ca40:	cmp	r3, #0
   1ca44:	bne	1ca54 <__assert_fail@plt+0xb814>
   1ca48:	movw	r0, #5608	; 0x15e8
   1ca4c:	movt	r0, #4
   1ca50:	bl	13840 <__assert_fail@plt+0x2600>
   1ca54:	mov	r1, #1
   1ca58:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1ca5c:	bl	19264 <__assert_fail@plt+0x8024>
   1ca60:	mov	r3, r0
   1ca64:	cmp	r3, #0
   1ca68:	bgt	1caa0 <__assert_fail@plt+0xb860>
   1ca6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ca70:	cmp	r3, #0
   1ca74:	beq	1ca84 <__assert_fail@plt+0xb844>
   1ca78:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1ca7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ca80:	bl	18138 <__assert_fail@plt+0x6ef8>
   1ca84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ca88:	cmp	r3, #0
   1ca8c:	beq	1ccb0 <__assert_fail@plt+0xba70>
   1ca90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ca94:	mov	r2, #0
   1ca98:	str	r2, [r3, #4]
   1ca9c:	b	1ccb4 <__assert_fail@plt+0xba74>
   1caa0:	sub	r3, fp, #36	; 0x24
   1caa4:	mov	r0, r3
   1caa8:	bl	17e24 <__assert_fail@plt+0x6be4>
   1caac:	sub	r3, fp, #24
   1cab0:	mov	r0, r3
   1cab4:	bl	17e24 <__assert_fail@plt+0x6be4>
   1cab8:	mov	r1, #2
   1cabc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cac0:	bl	1f794 <__assert_fail@plt+0xe554>
   1cac4:	mov	r3, r0
   1cac8:	sub	r2, r3, #1
   1cacc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cad0:	udiv	r3, r2, r3
   1cad4:	add	r3, r3, #1
   1cad8:	str	r3, [fp, #-12]
   1cadc:	sub	r3, fp, #24
   1cae0:	ldr	r1, [fp, #-12]
   1cae4:	mov	r0, r3
   1cae8:	bl	1e3b4 <__assert_fail@plt+0xd174>
   1caec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1caf0:	cmp	r3, #2
   1caf4:	bne	1cb6c <__assert_fail@plt+0xb92c>
   1caf8:	sub	r2, fp, #24
   1cafc:	sub	r3, fp, #36	; 0x24
   1cb00:	mov	r1, r2
   1cb04:	mov	r0, r3
   1cb08:	bl	19410 <__assert_fail@plt+0x81d0>
   1cb0c:	sub	r2, fp, #36	; 0x24
   1cb10:	sub	r3, fp, #24
   1cb14:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cb18:	mov	r0, r3
   1cb1c:	bl	1a568 <__assert_fail@plt+0x9328>
   1cb20:	sub	r2, fp, #36	; 0x24
   1cb24:	sub	r1, fp, #24
   1cb28:	sub	r3, fp, #24
   1cb2c:	mov	r0, r3
   1cb30:	bl	198a0 <__assert_fail@plt+0x8660>
   1cb34:	sub	r1, fp, #24
   1cb38:	sub	r3, fp, #24
   1cb3c:	mov	r2, #1
   1cb40:	mov	r0, r3
   1cb44:	bl	1ad04 <__assert_fail@plt+0x9ac4>
   1cb48:	sub	r2, fp, #36	; 0x24
   1cb4c:	sub	r3, fp, #24
   1cb50:	mov	r1, r2
   1cb54:	mov	r0, r3
   1cb58:	bl	19310 <__assert_fail@plt+0x80d0>
   1cb5c:	mov	r3, r0
   1cb60:	cmp	r3, #0
   1cb64:	blt	1caf8 <__assert_fail@plt+0xb8b8>
   1cb68:	b	1cc44 <__assert_fail@plt+0xba04>
   1cb6c:	sub	r3, fp, #48	; 0x30
   1cb70:	mov	r0, r3
   1cb74:	bl	17e24 <__assert_fail@plt+0x6be4>
   1cb78:	ldr	r3, [fp, #-8]
   1cb7c:	cmp	r3, #0
   1cb80:	beq	1cb98 <__assert_fail@plt+0xb958>
   1cb84:	sub	r2, fp, #24
   1cb88:	sub	r3, fp, #24
   1cb8c:	mov	r1, r2
   1cb90:	mov	r0, r3
   1cb94:	bl	193c4 <__assert_fail@plt+0x8184>
   1cb98:	sub	r2, fp, #24
   1cb9c:	sub	r3, fp, #36	; 0x24
   1cba0:	mov	r1, r2
   1cba4:	mov	r0, r3
   1cba8:	bl	19410 <__assert_fail@plt+0x81d0>
   1cbac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cbb0:	sub	r2, r3, #1
   1cbb4:	sub	r1, fp, #36	; 0x24
   1cbb8:	sub	r3, fp, #24
   1cbbc:	mov	r0, r3
   1cbc0:	bl	1c470 <__assert_fail@plt+0xb230>
   1cbc4:	sub	r2, fp, #24
   1cbc8:	sub	r3, fp, #24
   1cbcc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cbd0:	mov	r0, r3
   1cbd4:	bl	1a568 <__assert_fail@plt+0x9328>
   1cbd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cbdc:	sub	r2, r3, #1
   1cbe0:	sub	r1, fp, #36	; 0x24
   1cbe4:	sub	r3, fp, #48	; 0x30
   1cbe8:	mov	r0, r3
   1cbec:	bl	19a58 <__assert_fail@plt+0x8818>
   1cbf0:	sub	r2, fp, #48	; 0x30
   1cbf4:	sub	r1, fp, #24
   1cbf8:	sub	r3, fp, #24
   1cbfc:	mov	r0, r3
   1cc00:	bl	198a0 <__assert_fail@plt+0x8660>
   1cc04:	sub	r1, fp, #24
   1cc08:	sub	r3, fp, #24
   1cc0c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1cc10:	mov	r0, r3
   1cc14:	bl	1b1f0 <__assert_fail@plt+0x9fb0>
   1cc18:	sub	r2, fp, #36	; 0x24
   1cc1c:	sub	r3, fp, #24
   1cc20:	mov	r1, r2
   1cc24:	mov	r0, r3
   1cc28:	bl	19310 <__assert_fail@plt+0x80d0>
   1cc2c:	mov	r3, r0
   1cc30:	cmp	r3, #0
   1cc34:	blt	1cb98 <__assert_fail@plt+0xb958>
   1cc38:	sub	r3, fp, #48	; 0x30
   1cc3c:	mov	r0, r3
   1cc40:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1cc44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cc48:	cmp	r3, #0
   1cc4c:	beq	1cc78 <__assert_fail@plt+0xba38>
   1cc50:	sub	r1, fp, #36	; 0x24
   1cc54:	sub	r3, fp, #24
   1cc58:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1cc5c:	mov	r0, r3
   1cc60:	bl	1c470 <__assert_fail@plt+0xb230>
   1cc64:	sub	r3, fp, #24
   1cc68:	mov	r2, r3
   1cc6c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cc70:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1cc74:	bl	19940 <__assert_fail@plt+0x8700>
   1cc78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cc7c:	cmp	r3, #0
   1cc80:	beq	1cc94 <__assert_fail@plt+0xba54>
   1cc84:	sub	r3, fp, #36	; 0x24
   1cc88:	mov	r1, r3
   1cc8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cc90:	bl	19410 <__assert_fail@plt+0x81d0>
   1cc94:	sub	r3, fp, #36	; 0x24
   1cc98:	mov	r0, r3
   1cc9c:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1cca0:	sub	r3, fp, #24
   1cca4:	mov	r0, r3
   1cca8:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1ccac:	b	1ccb4 <__assert_fail@plt+0xba74>
   1ccb0:	nop	{0}
   1ccb4:	sub	sp, fp, #4
   1ccb8:	ldr	fp, [sp]
   1ccbc:	add	sp, sp, #4
   1ccc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccc4:	str	fp, [sp, #-8]!
   1ccc8:	str	lr, [sp, #4]
   1cccc:	add	fp, sp, #4
   1ccd0:	sub	sp, sp, #32
   1ccd4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccd8:	str	r1, [fp, #-28]	; 0xffffffe4
   1ccdc:	str	r2, [fp, #-32]	; 0xffffffe0
   1cce0:	sub	r3, fp, #20
   1cce4:	mov	r0, r3
   1cce8:	bl	17e24 <__assert_fail@plt+0x6be4>
   1ccec:	sub	r1, fp, #20
   1ccf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ccf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccfc:	bl	1c9e4 <__assert_fail@plt+0xb7a4>
   1cd00:	ldr	r3, [fp, #-16]
   1cd04:	cmp	r3, #0
   1cd08:	moveq	r3, #1
   1cd0c:	movne	r3, #0
   1cd10:	uxtb	r3, r3
   1cd14:	str	r3, [fp, #-8]
   1cd18:	sub	r3, fp, #20
   1cd1c:	mov	r0, r3
   1cd20:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1cd24:	ldr	r3, [fp, #-8]
   1cd28:	mov	r0, r3
   1cd2c:	sub	sp, fp, #4
   1cd30:	ldr	fp, [sp]
   1cd34:	add	sp, sp, #4
   1cd38:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd3c:	str	fp, [sp, #-8]!
   1cd40:	str	lr, [sp, #4]
   1cd44:	add	fp, sp, #4
   1cd48:	sub	sp, sp, #16
   1cd4c:	str	r0, [fp, #-8]
   1cd50:	str	r1, [fp, #-12]
   1cd54:	str	r2, [fp, #-16]
   1cd58:	mov	r3, #2
   1cd5c:	ldr	r2, [fp, #-16]
   1cd60:	ldr	r1, [fp, #-12]
   1cd64:	ldr	r0, [fp, #-8]
   1cd68:	bl	1c9e4 <__assert_fail@plt+0xb7a4>
   1cd6c:	nop	{0}
   1cd70:	sub	sp, fp, #4
   1cd74:	ldr	fp, [sp]
   1cd78:	add	sp, sp, #4
   1cd7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd80:	str	fp, [sp, #-8]!
   1cd84:	str	lr, [sp, #4]
   1cd88:	add	fp, sp, #4
   1cd8c:	sub	sp, sp, #8
   1cd90:	str	r0, [fp, #-8]
   1cd94:	str	r1, [fp, #-12]
   1cd98:	mov	r3, #2
   1cd9c:	ldr	r2, [fp, #-12]
   1cda0:	mov	r1, #0
   1cda4:	ldr	r0, [fp, #-8]
   1cda8:	bl	1c9e4 <__assert_fail@plt+0xb7a4>
   1cdac:	nop	{0}
   1cdb0:	sub	sp, fp, #4
   1cdb4:	ldr	fp, [sp]
   1cdb8:	add	sp, sp, #4
   1cdbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdc0:	str	fp, [sp, #-8]!
   1cdc4:	str	lr, [sp, #4]
   1cdc8:	add	fp, sp, #4
   1cdcc:	sub	sp, sp, #8
   1cdd0:	str	r0, [fp, #-8]
   1cdd4:	ldr	r3, [fp, #-8]
   1cdd8:	ldr	r3, [r3, #4]
   1cddc:	cmp	r3, #0
   1cde0:	bgt	1ce00 <__assert_fail@plt+0xbbc0>
   1cde4:	ldr	r3, [fp, #-8]
   1cde8:	ldr	r3, [r3, #4]
   1cdec:	cmp	r3, #0
   1cdf0:	moveq	r3, #1
   1cdf4:	movne	r3, #0
   1cdf8:	uxtb	r3, r3
   1cdfc:	b	1ce14 <__assert_fail@plt+0xbbd4>
   1ce00:	mov	r2, #2
   1ce04:	ldr	r1, [fp, #-8]
   1ce08:	mov	r0, #0
   1ce0c:	bl	1ccc4 <__assert_fail@plt+0xba84>
   1ce10:	mov	r3, r0
   1ce14:	mov	r0, r3
   1ce18:	sub	sp, fp, #4
   1ce1c:	ldr	fp, [sp]
   1ce20:	add	sp, sp, #4
   1ce24:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce28:	str	fp, [sp, #-8]!
   1ce2c:	str	lr, [sp, #4]
   1ce30:	add	fp, sp, #4
   1ce34:	sub	sp, sp, #24
   1ce38:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce3c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ce40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce44:	cmp	r3, #0
   1ce48:	bgt	1ce6c <__assert_fail@plt+0xbc2c>
   1ce4c:	movw	r3, #6776	; 0x1a78
   1ce50:	movt	r3, #4
   1ce54:	movw	r2, #3302	; 0xce6
   1ce58:	movw	r1, #4700	; 0x125c
   1ce5c:	movt	r1, #4
   1ce60:	movw	r0, #4824	; 0x12d8
   1ce64:	movt	r0, #4
   1ce68:	bl	11240 <__assert_fail@plt>
   1ce6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce70:	sub	r3, r3, #-1073741823	; 0xc0000001
   1ce74:	lsl	r3, r3, #2
   1ce78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ce7c:	add	r3, r2, r3
   1ce80:	ldr	r3, [r3]
   1ce84:	cmp	r3, #0
   1ce88:	bne	1ceac <__assert_fail@plt+0xbc6c>
   1ce8c:	movw	r3, #6776	; 0x1a78
   1ce90:	movt	r3, #4
   1ce94:	movw	r2, #3303	; 0xce7
   1ce98:	movw	r1, #4700	; 0x125c
   1ce9c:	movt	r1, #4
   1cea0:	movw	r0, #5636	; 0x1604
   1cea4:	movt	r0, #4
   1cea8:	bl	11240 <__assert_fail@plt>
   1ceac:	sub	r3, fp, #16
   1ceb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ceb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ceb8:	mov	r0, r3
   1cebc:	bl	18890 <__assert_fail@plt+0x7650>
   1cec0:	mov	r3, r0
   1cec4:	mov	r2, #2
   1cec8:	mov	r1, r3
   1cecc:	mov	r0, #0
   1ced0:	bl	1ccc4 <__assert_fail@plt+0xba84>
   1ced4:	mov	r3, r0
   1ced8:	mov	r0, r3
   1cedc:	sub	sp, fp, #4
   1cee0:	ldr	fp, [sp]
   1cee4:	add	sp, sp, #4
   1cee8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ceec:	str	fp, [sp, #-8]!
   1cef0:	str	lr, [sp, #4]
   1cef4:	add	fp, sp, #4
   1cef8:	sub	sp, sp, #56	; 0x38
   1cefc:	str	r0, [fp, #-48]	; 0xffffffd0
   1cf00:	str	r1, [fp, #-52]	; 0xffffffcc
   1cf04:	str	r2, [fp, #-56]	; 0xffffffc8
   1cf08:	str	r3, [fp, #-60]	; 0xffffffc4
   1cf0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cf10:	cmp	r3, #0
   1cf14:	bgt	1cf38 <__assert_fail@plt+0xbcf8>
   1cf18:	movw	r3, #6800	; 0x1a90
   1cf1c:	movt	r3, #4
   1cf20:	movw	r2, #3313	; 0xcf1
   1cf24:	movw	r1, #4700	; 0x125c
   1cf28:	movt	r1, #4
   1cf2c:	movw	r0, #4824	; 0x12d8
   1cf30:	movt	r0, #4
   1cf34:	bl	11240 <__assert_fail@plt>
   1cf38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cf3c:	sub	r3, r3, #-1073741823	; 0xc0000001
   1cf40:	lsl	r3, r3, #2
   1cf44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cf48:	add	r3, r2, r3
   1cf4c:	ldr	r3, [r3]
   1cf50:	cmp	r3, #0
   1cf54:	bne	1cf78 <__assert_fail@plt+0xbd38>
   1cf58:	movw	r3, #6800	; 0x1a90
   1cf5c:	movt	r3, #4
   1cf60:	movw	r2, #3314	; 0xcf2
   1cf64:	movw	r1, #4700	; 0x125c
   1cf68:	movt	r1, #4
   1cf6c:	movw	r0, #5636	; 0x1604
   1cf70:	movt	r0, #4
   1cf74:	bl	11240 <__assert_fail@plt>
   1cf78:	sub	r3, fp, #32
   1cf7c:	mov	r0, r3
   1cf80:	bl	17e24 <__assert_fail@plt+0x6be4>
   1cf84:	sub	r3, fp, #20
   1cf88:	mov	r0, r3
   1cf8c:	bl	17e24 <__assert_fail@plt+0x6be4>
   1cf90:	sub	r3, fp, #44	; 0x2c
   1cf94:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cf98:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cf9c:	mov	r0, r3
   1cfa0:	bl	18890 <__assert_fail@plt+0x7650>
   1cfa4:	mov	r2, r0
   1cfa8:	sub	r1, fp, #32
   1cfac:	sub	r0, fp, #20
   1cfb0:	mov	r3, #2
   1cfb4:	bl	1c9e4 <__assert_fail@plt+0xb7a4>
   1cfb8:	ldr	r2, [fp, #-16]
   1cfbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cfc0:	add	r3, r3, #1
   1cfc4:	lsr	r1, r3, #31
   1cfc8:	add	r3, r1, r3
   1cfcc:	asr	r3, r3, #1
   1cfd0:	cmp	r2, r3
   1cfd4:	beq	1cff8 <__assert_fail@plt+0xbdb8>
   1cfd8:	movw	r3, #6800	; 0x1a90
   1cfdc:	movt	r3, #4
   1cfe0:	movw	r2, #3320	; 0xcf8
   1cfe4:	movw	r1, #4700	; 0x125c
   1cfe8:	movt	r1, #4
   1cfec:	movw	r0, #5652	; 0x1614
   1cff0:	movt	r0, #4
   1cff4:	bl	11240 <__assert_fail@plt>
   1cff8:	ldr	r3, [fp, #-12]
   1cffc:	ldr	r2, [fp, #-16]
   1d000:	mov	r1, r3
   1d004:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d008:	bl	13c40 <__assert_fail@plt+0x2a00>
   1d00c:	sub	r3, fp, #20
   1d010:	mov	r0, r3
   1d014:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1d018:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d01c:	str	r3, [fp, #-8]
   1d020:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d024:	cmp	r3, #0
   1d028:	beq	1d040 <__assert_fail@plt+0xbe00>
   1d02c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d030:	ldr	r2, [fp, #-8]
   1d034:	mov	r1, r3
   1d038:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d03c:	bl	13c40 <__assert_fail@plt+0x2a00>
   1d040:	sub	r3, fp, #32
   1d044:	mov	r0, r3
   1d048:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1d04c:	ldr	r3, [fp, #-8]
   1d050:	mov	r0, r3
   1d054:	sub	sp, fp, #4
   1d058:	ldr	fp, [sp]
   1d05c:	add	sp, sp, #4
   1d060:	pop	{pc}		; (ldr pc, [sp], #4)
   1d064:	str	fp, [sp, #-8]!
   1d068:	str	lr, [sp, #4]
   1d06c:	add	fp, sp, #4
   1d070:	sub	sp, sp, #16
   1d074:	str	r0, [fp, #-8]
   1d078:	str	r1, [fp, #-12]
   1d07c:	str	r2, [fp, #-16]
   1d080:	ldr	r3, [fp, #-12]
   1d084:	cmp	r3, #0
   1d088:	moveq	r3, #1
   1d08c:	movne	r3, #0
   1d090:	uxtb	r3, r3
   1d094:	mov	r2, r3
   1d098:	ldr	r3, [fp, #-12]
   1d09c:	add	r3, r2, r3
   1d0a0:	mov	r1, r3
   1d0a4:	ldr	r0, [fp, #-8]
   1d0a8:	bl	180b0 <__assert_fail@plt+0x6e70>
   1d0ac:	ldr	r3, [fp, #-16]
   1d0b0:	add	r3, r3, #1
   1d0b4:	cmp	r3, #1
   1d0b8:	bls	1d0f8 <__assert_fail@plt+0xbeb8>
   1d0bc:	b	1d0e0 <__assert_fail@plt+0xbea0>
   1d0c0:	ldr	r2, [fp, #-12]
   1d0c4:	ldr	r3, [fp, #-16]
   1d0c8:	sub	r3, r2, r3
   1d0cc:	str	r3, [fp, #-12]
   1d0d0:	ldr	r2, [fp, #-12]
   1d0d4:	ldr	r1, [fp, #-8]
   1d0d8:	ldr	r0, [fp, #-8]
   1d0dc:	bl	19a58 <__assert_fail@plt+0x8818>
   1d0e0:	ldr	r3, [fp, #-16]
   1d0e4:	add	r3, r3, #1
   1d0e8:	ldr	r2, [fp, #-12]
   1d0ec:	cmp	r2, r3
   1d0f0:	bhi	1d0c0 <__assert_fail@plt+0xbe80>
   1d0f4:	b	1d0fc <__assert_fail@plt+0xbebc>
   1d0f8:	nop	{0}
   1d0fc:	sub	sp, fp, #4
   1d100:	ldr	fp, [sp]
   1d104:	add	sp, sp, #4
   1d108:	pop	{pc}		; (ldr pc, [sp], #4)
   1d10c:	str	fp, [sp, #-8]!
   1d110:	str	lr, [sp, #4]
   1d114:	add	fp, sp, #4
   1d118:	sub	sp, sp, #8
   1d11c:	str	r0, [fp, #-8]
   1d120:	str	r1, [fp, #-12]
   1d124:	mov	r2, #2
   1d128:	ldr	r1, [fp, #-12]
   1d12c:	ldr	r0, [fp, #-8]
   1d130:	bl	1d064 <__assert_fail@plt+0xbe24>
   1d134:	nop	{0}
   1d138:	sub	sp, fp, #4
   1d13c:	ldr	fp, [sp]
   1d140:	add	sp, sp, #4
   1d144:	pop	{pc}		; (ldr pc, [sp], #4)
   1d148:	str	fp, [sp, #-8]!
   1d14c:	str	lr, [sp, #4]
   1d150:	add	fp, sp, #4
   1d154:	sub	sp, sp, #8
   1d158:	str	r0, [fp, #-8]
   1d15c:	str	r1, [fp, #-12]
   1d160:	mov	r2, #1
   1d164:	ldr	r1, [fp, #-12]
   1d168:	ldr	r0, [fp, #-8]
   1d16c:	bl	1d064 <__assert_fail@plt+0xbe24>
   1d170:	nop	{0}
   1d174:	sub	sp, fp, #4
   1d178:	ldr	fp, [sp]
   1d17c:	add	sp, sp, #4
   1d180:	pop	{pc}		; (ldr pc, [sp], #4)
   1d184:	str	fp, [sp, #-8]!
   1d188:	str	lr, [sp, #4]
   1d18c:	add	fp, sp, #4
   1d190:	sub	sp, sp, #32
   1d194:	str	r0, [fp, #-24]	; 0xffffffe8
   1d198:	str	r1, [fp, #-28]	; 0xffffffe4
   1d19c:	str	r2, [fp, #-32]	; 0xffffffe0
   1d1a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d1a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1a8:	cmp	r2, r3
   1d1ac:	movls	r3, #1
   1d1b0:	movhi	r3, #0
   1d1b4:	uxtb	r3, r3
   1d1b8:	mov	r1, r3
   1d1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1c0:	bl	180b0 <__assert_fail@plt+0x6e70>
   1d1c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1c8:	lsr	r3, r3, #1
   1d1cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d1d0:	cmp	r2, r3
   1d1d4:	bls	1d200 <__assert_fail@plt+0xbfc0>
   1d1d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d1dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1e0:	cmp	r2, r3
   1d1e4:	bhi	1d1f8 <__assert_fail@plt+0xbfb8>
   1d1e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d1ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1f0:	sub	r3, r2, r3
   1d1f4:	b	1d1fc <__assert_fail@plt+0xbfbc>
   1d1f8:	mov	r3, #0
   1d1fc:	str	r3, [fp, #-32]	; 0xffffffe0
   1d200:	sub	r3, fp, #16
   1d204:	mov	r0, r3
   1d208:	bl	17e24 <__assert_fail@plt+0x6be4>
   1d20c:	sub	r3, fp, #16
   1d210:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d214:	mov	r0, r3
   1d218:	bl	1d148 <__assert_fail@plt+0xbf08>
   1d21c:	b	1d248 <__assert_fail@plt+0xc008>
   1d220:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d224:	sub	r2, r3, #1
   1d228:	str	r2, [fp, #-28]	; 0xffffffe4
   1d22c:	mov	r2, r3
   1d230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d238:	bl	19a58 <__assert_fail@plt+0x8818>
   1d23c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d240:	sub	r3, r3, #1
   1d244:	str	r3, [fp, #-32]	; 0xffffffe0
   1d248:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d24c:	cmp	r3, #0
   1d250:	bne	1d220 <__assert_fail@plt+0xbfe0>
   1d254:	sub	r3, fp, #16
   1d258:	mov	r2, r3
   1d25c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d264:	bl	1ae14 <__assert_fail@plt+0x9bd4>
   1d268:	sub	r3, fp, #16
   1d26c:	mov	r0, r3
   1d270:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1d274:	nop	{0}
   1d278:	sub	sp, fp, #4
   1d27c:	ldr	fp, [sp]
   1d280:	add	sp, sp, #4
   1d284:	pop	{pc}		; (ldr pc, [sp], #4)
   1d288:	str	fp, [sp, #-8]!
   1d28c:	str	lr, [sp, #4]
   1d290:	add	fp, sp, #4
   1d294:	sub	sp, sp, #56	; 0x38
   1d298:	str	r0, [fp, #-56]	; 0xffffffc8
   1d29c:	str	r1, [fp, #-60]	; 0xffffffc4
   1d2a0:	mov	r3, #0
   1d2a4:	str	r3, [fp, #-12]
   1d2a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d2ac:	and	r3, r3, #1
   1d2b0:	cmp	r3, #0
   1d2b4:	bne	1d2d8 <__assert_fail@plt+0xc098>
   1d2b8:	movw	r3, #6812	; 0x1a9c
   1d2bc:	movt	r3, #4
   1d2c0:	movw	r2, #3383	; 0xd37
   1d2c4:	movw	r1, #4700	; 0x125c
   1d2c8:	movt	r1, #4
   1d2cc:	movw	r0, #5676	; 0x162c
   1d2d0:	movt	r0, #4
   1d2d4:	bl	11240 <__assert_fail@plt>
   1d2d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d2dc:	cmp	r3, #0
   1d2e0:	bne	1d304 <__assert_fail@plt+0xc0c4>
   1d2e4:	movw	r3, #6812	; 0x1a9c
   1d2e8:	movt	r3, #4
   1d2ec:	movw	r2, #3384	; 0xd38
   1d2f0:	movw	r1, #4700	; 0x125c
   1d2f4:	movt	r1, #4
   1d2f8:	movw	r0, #5684	; 0x1634
   1d2fc:	movt	r0, #4
   1d300:	bl	11240 <__assert_fail@plt>
   1d304:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d308:	lsr	r3, r3, #1
   1d30c:	str	r3, [fp, #-60]	; 0xffffffc4
   1d310:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d314:	str	r3, [fp, #-32]	; 0xffffffe0
   1d318:	mov	r3, #0
   1d31c:	str	r3, [fp, #-36]	; 0xffffffdc
   1d320:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d324:	rsb	r3, r3, #0
   1d328:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d32c:	and	r3, r3, r2
   1d330:	str	r3, [fp, #-16]
   1d334:	mov	r3, #0
   1d338:	str	r3, [fp, #-20]	; 0xffffffec
   1d33c:	mov	r3, #8
   1d340:	str	r3, [fp, #-40]	; 0xffffffd8
   1d344:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d348:	cmp	r3, #31
   1d34c:	bhi	1d39c <__assert_fail@plt+0xc15c>
   1d350:	b	1d370 <__assert_fail@plt+0xc130>
   1d354:	ldr	r2, [fp, #-16]
   1d358:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d35c:	lsl	r3, r2, r3
   1d360:	str	r3, [fp, #-16]
   1d364:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d368:	add	r3, r3, #8
   1d36c:	str	r3, [fp, #-20]	; 0xffffffec
   1d370:	ldr	r3, [fp, #-16]
   1d374:	and	r3, r3, #-16777216	; 0xff000000
   1d378:	cmp	r3, #0
   1d37c:	beq	1d354 <__assert_fail@plt+0xc114>
   1d380:	b	1d39c <__assert_fail@plt+0xc15c>
   1d384:	ldr	r3, [fp, #-16]
   1d388:	lsl	r3, r3, #1
   1d38c:	str	r3, [fp, #-16]
   1d390:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d394:	add	r3, r3, #1
   1d398:	str	r3, [fp, #-20]	; 0xffffffec
   1d39c:	ldr	r3, [fp, #-16]
   1d3a0:	cmp	r3, #0
   1d3a4:	bge	1d384 <__assert_fail@plt+0xc144>
   1d3a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d3ac:	str	r3, [fp, #-36]	; 0xffffffdc
   1d3b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d3b4:	rsb	r3, r3, #31
   1d3b8:	str	r3, [fp, #-8]
   1d3bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3c0:	lsr	r3, r3, #1
   1d3c4:	str	r3, [fp, #-56]	; 0xffffffc8
   1d3c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d3cc:	ldr	r3, [fp, #-8]
   1d3d0:	lsr	r3, r2, r3
   1d3d4:	str	r3, [fp, #-56]	; 0xffffffc8
   1d3d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d3dc:	lsr	r2, r3, #1
   1d3e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d3e4:	eor	r2, r2, r3
   1d3e8:	ldr	r3, [fp, #-8]
   1d3ec:	and	r2, r2, r3
   1d3f0:	ldr	r3, [fp, #-12]
   1d3f4:	eor	r3, r3, r2
   1d3f8:	str	r3, [fp, #-12]
   1d3fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d400:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d404:	cmp	r2, r3
   1d408:	bcs	1d474 <__assert_fail@plt+0xc234>
   1d40c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d410:	cmp	r3, #0
   1d414:	bne	1d438 <__assert_fail@plt+0xc1f8>
   1d418:	ldr	r3, [fp, #-12]
   1d41c:	and	r3, r3, #1
   1d420:	cmp	r3, #0
   1d424:	beq	1d430 <__assert_fail@plt+0xc1f0>
   1d428:	mvn	r3, #0
   1d42c:	b	1d56c <__assert_fail@plt+0xc32c>
   1d430:	mov	r3, #1
   1d434:	b	1d56c <__assert_fail@plt+0xc32c>
   1d438:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d43c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d440:	and	r2, r2, r3
   1d444:	ldr	r3, [fp, #-12]
   1d448:	eor	r3, r3, r2
   1d44c:	str	r3, [fp, #-12]
   1d450:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d454:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d458:	sub	r3, r2, r3
   1d45c:	str	r3, [fp, #-56]	; 0xffffffc8
   1d460:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d464:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d468:	sub	r3, r2, r3
   1d46c:	str	r3, [fp, #-60]	; 0xffffffc4
   1d470:	b	1d4b0 <__assert_fail@plt+0xc270>
   1d474:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d478:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d47c:	sub	r3, r2, r3
   1d480:	str	r3, [fp, #-56]	; 0xffffffc8
   1d484:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d488:	cmp	r3, #0
   1d48c:	bne	1d4b0 <__assert_fail@plt+0xc270>
   1d490:	movw	r3, #6812	; 0x1a9c
   1d494:	movt	r3, #4
   1d498:	movw	r2, #3410	; 0xd52
   1d49c:	movw	r1, #4700	; 0x125c
   1d4a0:	movt	r1, #4
   1d4a4:	movw	r0, #5684	; 0x1634
   1d4a8:	movt	r0, #4
   1d4ac:	bl	11240 <__assert_fail@plt>
   1d4b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d4b4:	str	r3, [fp, #-44]	; 0xffffffd4
   1d4b8:	mov	r3, #0
   1d4bc:	str	r3, [fp, #-48]	; 0xffffffd0
   1d4c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d4c4:	rsb	r3, r3, #0
   1d4c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d4cc:	and	r3, r3, r2
   1d4d0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4d4:	mov	r3, #0
   1d4d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d4dc:	mov	r3, #8
   1d4e0:	str	r3, [fp, #-52]	; 0xffffffcc
   1d4e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d4e8:	cmp	r3, #31
   1d4ec:	bhi	1d53c <__assert_fail@plt+0xc2fc>
   1d4f0:	b	1d510 <__assert_fail@plt+0xc2d0>
   1d4f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d4f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d4fc:	lsl	r3, r2, r3
   1d500:	str	r3, [fp, #-24]	; 0xffffffe8
   1d504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d508:	add	r3, r3, #8
   1d50c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d514:	and	r3, r3, #-16777216	; 0xff000000
   1d518:	cmp	r3, #0
   1d51c:	beq	1d4f4 <__assert_fail@plt+0xc2b4>
   1d520:	b	1d53c <__assert_fail@plt+0xc2fc>
   1d524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d528:	lsl	r3, r3, #1
   1d52c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d534:	add	r3, r3, #1
   1d538:	str	r3, [fp, #-28]	; 0xffffffe4
   1d53c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d540:	cmp	r3, #0
   1d544:	bge	1d524 <__assert_fail@plt+0xc2e4>
   1d548:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d54c:	str	r3, [fp, #-48]	; 0xffffffd0
   1d550:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d554:	rsb	r3, r3, #31
   1d558:	str	r3, [fp, #-8]
   1d55c:	ldr	r3, [fp, #-8]
   1d560:	add	r3, r3, #1
   1d564:	str	r3, [fp, #-8]
   1d568:	b	1d3c8 <__assert_fail@plt+0xc188>
   1d56c:	mov	r0, r3
   1d570:	sub	sp, fp, #4
   1d574:	ldr	fp, [sp]
   1d578:	add	sp, sp, #4
   1d57c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d580:	str	fp, [sp, #-8]!
   1d584:	str	lr, [sp, #4]
   1d588:	add	fp, sp, #4
   1d58c:	sub	sp, sp, #16
   1d590:	str	r0, [fp, #-8]
   1d594:	str	r1, [fp, #-12]
   1d598:	str	r2, [fp, #-16]
   1d59c:	ldr	r2, [fp, #-16]
   1d5a0:	ldr	r1, [fp, #-12]
   1d5a4:	ldr	r0, [fp, #-12]
   1d5a8:	bl	1a698 <__assert_fail@plt+0x9458>
   1d5ac:	ldr	r2, [fp, #-8]
   1d5b0:	ldr	r1, [fp, #-8]
   1d5b4:	ldr	r0, [fp, #-8]
   1d5b8:	bl	19ab8 <__assert_fail@plt+0x8878>
   1d5bc:	mov	r2, #2
   1d5c0:	ldr	r1, [fp, #-12]
   1d5c4:	ldr	r0, [fp, #-8]
   1d5c8:	bl	19e80 <__assert_fail@plt+0x8c40>
   1d5cc:	ldr	r2, [fp, #-16]
   1d5d0:	ldr	r1, [fp, #-8]
   1d5d4:	ldr	r0, [fp, #-8]
   1d5d8:	bl	1a64c <__assert_fail@plt+0x940c>
   1d5dc:	ldr	r2, [fp, #-12]
   1d5e0:	ldr	r1, [fp, #-12]
   1d5e4:	ldr	r0, [fp, #-12]
   1d5e8:	bl	19ab8 <__assert_fail@plt+0x8878>
   1d5ec:	nop	{0}
   1d5f0:	sub	sp, fp, #4
   1d5f4:	ldr	fp, [sp]
   1d5f8:	add	sp, sp, #4
   1d5fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1d600:	str	fp, [sp, #-8]!
   1d604:	str	lr, [sp, #4]
   1d608:	add	fp, sp, #4
   1d60c:	sub	sp, sp, #40	; 0x28
   1d610:	str	r0, [fp, #-32]	; 0xffffffe0
   1d614:	str	r1, [fp, #-36]	; 0xffffffdc
   1d618:	str	r2, [fp, #-40]	; 0xffffffd8
   1d61c:	str	r3, [fp, #-44]	; 0xffffffd4
   1d620:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d624:	cmp	r3, #0
   1d628:	bne	1d64c <__assert_fail@plt+0xc40c>
   1d62c:	movw	r3, #6832	; 0x1ab0
   1d630:	movt	r3, #4
   1d634:	movw	r2, #3442	; 0xd72
   1d638:	movw	r1, #4700	; 0x125c
   1d63c:	movt	r1, #4
   1d640:	movw	r0, #5692	; 0x163c
   1d644:	movt	r0, #4
   1d648:	bl	11240 <__assert_fail@plt>
   1d64c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d650:	cmp	r3, #1073741824	; 0x40000000
   1d654:	ble	1d678 <__assert_fail@plt+0xc438>
   1d658:	movw	r3, #6832	; 0x1ab0
   1d65c:	movt	r3, #4
   1d660:	movw	r2, #3443	; 0xd73
   1d664:	movw	r1, #4700	; 0x125c
   1d668:	movt	r1, #4
   1d66c:	movw	r0, #5700	; 0x1644
   1d670:	movt	r0, #4
   1d674:	bl	11240 <__assert_fail@plt>
   1d678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d67c:	cmp	r3, #-1073741823	; 0xc0000001
   1d680:	bge	1d6a4 <__assert_fail@plt+0xc464>
   1d684:	movw	r3, #6832	; 0x1ab0
   1d688:	movt	r3, #4
   1d68c:	movw	r2, #3444	; 0xd74
   1d690:	movw	r1, #4700	; 0x125c
   1d694:	movt	r1, #4
   1d698:	movw	r0, #5724	; 0x165c
   1d69c:	movt	r0, #4
   1d6a0:	bl	11240 <__assert_fail@plt>
   1d6a4:	mov	r1, #4
   1d6a8:	ldr	r0, [fp, #4]
   1d6ac:	bl	19140 <__assert_fail@plt+0x7f00>
   1d6b0:	mov	r3, r0
   1d6b4:	cmp	r3, #0
   1d6b8:	bgt	1d6dc <__assert_fail@plt+0xc49c>
   1d6bc:	movw	r3, #6832	; 0x1ab0
   1d6c0:	movt	r3, #4
   1d6c4:	movw	r2, #3445	; 0xd75
   1d6c8:	movw	r1, #4700	; 0x125c
   1d6cc:	movt	r1, #4
   1d6d0:	movw	r0, #5748	; 0x1674
   1d6d4:	movt	r0, #4
   1d6d8:	bl	11240 <__assert_fail@plt>
   1d6dc:	ldr	r3, [fp, #4]
   1d6e0:	ldr	r3, [r3, #4]
   1d6e4:	cmp	r3, #0
   1d6e8:	movne	r3, #1
   1d6ec:	moveq	r3, #0
   1d6f0:	uxtb	r3, r3
   1d6f4:	mov	r2, r3
   1d6f8:	ldr	r3, [fp, #4]
   1d6fc:	ldr	r3, [r3, #8]
   1d700:	ldr	r3, [r3]
   1d704:	and	r3, r3, r2
   1d708:	cmp	r3, #0
   1d70c:	bne	1d730 <__assert_fail@plt+0xc4f0>
   1d710:	movw	r3, #6832	; 0x1ab0
   1d714:	movt	r3, #4
   1d718:	movw	r2, #3446	; 0xd76
   1d71c:	movw	r1, #4700	; 0x125c
   1d720:	movt	r1, #4
   1d724:	movw	r0, #5772	; 0x168c
   1d728:	movt	r0, #4
   1d72c:	bl	11240 <__assert_fail@plt>
   1d730:	sub	r3, fp, #24
   1d734:	mov	r1, #1
   1d738:	mov	r0, r3
   1d73c:	bl	18224 <__assert_fail@plt+0x6fe4>
   1d740:	mov	r1, #1
   1d744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d748:	bl	180b0 <__assert_fail@plt+0x6e70>
   1d74c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d754:	bl	18018 <__assert_fail@plt+0x6dd8>
   1d758:	mov	r1, #2
   1d75c:	ldr	r0, [fp, #4]
   1d760:	bl	1f794 <__assert_fail@plt+0xe554>
   1d764:	mov	r3, r0
   1d768:	sub	r3, r3, #1
   1d76c:	str	r3, [fp, #-8]
   1d770:	b	1d89c <__assert_fail@plt+0xc65c>
   1d774:	sub	r1, fp, #24
   1d778:	sub	r3, fp, #24
   1d77c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d780:	mov	r0, r3
   1d784:	bl	19ab8 <__assert_fail@plt+0x8878>
   1d788:	ldr	r2, [fp, #4]
   1d78c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d794:	bl	1d580 <__assert_fail@plt+0xc340>
   1d798:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d79c:	ldr	r3, [fp, #-8]
   1d7a0:	cmp	r2, r3
   1d7a4:	beq	1d7c0 <__assert_fail@plt+0xc580>
   1d7a8:	ldr	r1, [fp, #-8]
   1d7ac:	ldr	r0, [fp, #4]
   1d7b0:	bl	1df68 <__assert_fail@plt+0xcd28>
   1d7b4:	mov	r3, r0
   1d7b8:	cmp	r3, #0
   1d7bc:	beq	1d888 <__assert_fail@plt+0xc648>
   1d7c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d7c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d7c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d7cc:	bl	199e0 <__assert_fail@plt+0x87a0>
   1d7d0:	sub	r3, fp, #24
   1d7d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d7d8:	mov	r0, r3
   1d7dc:	bl	19410 <__assert_fail@plt+0x81d0>
   1d7e0:	sub	r1, fp, #24
   1d7e4:	sub	r3, fp, #24
   1d7e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d7ec:	mov	r0, r3
   1d7f0:	bl	198a0 <__assert_fail@plt+0x8660>
   1d7f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d7f8:	cmp	r3, #0
   1d7fc:	movne	r3, #1
   1d800:	moveq	r3, #0
   1d804:	uxtb	r3, r3
   1d808:	mov	r2, r3
   1d80c:	ldr	r3, [fp, #-16]
   1d810:	ldr	r3, [r3]
   1d814:	and	r3, r3, r2
   1d818:	cmp	r3, #0
   1d81c:	beq	1d834 <__assert_fail@plt+0xc5f4>
   1d820:	sub	r1, fp, #24
   1d824:	sub	r3, fp, #24
   1d828:	ldr	r2, [fp, #4]
   1d82c:	mov	r0, r3
   1d830:	bl	198a0 <__assert_fail@plt+0x8660>
   1d834:	sub	r1, fp, #24
   1d838:	sub	r3, fp, #24
   1d83c:	mov	r2, #1
   1d840:	mov	r0, r3
   1d844:	bl	1ad04 <__assert_fail@plt+0x9ac4>
   1d848:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d84c:	lsl	r3, r3, #1
   1d850:	rsb	r3, r3, #0
   1d854:	mov	r2, r3
   1d858:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d85c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d860:	bl	199e0 <__assert_fail@plt+0x87a0>
   1d864:	sub	r3, fp, #24
   1d868:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d86c:	mov	r1, r3
   1d870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d874:	bl	198a0 <__assert_fail@plt+0x8660>
   1d878:	ldr	r2, [fp, #4]
   1d87c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d880:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d884:	bl	1a64c <__assert_fail@plt+0x940c>
   1d888:	sub	r1, fp, #24
   1d88c:	sub	r3, fp, #24
   1d890:	ldr	r2, [fp, #4]
   1d894:	mov	r0, r3
   1d898:	bl	1a64c <__assert_fail@plt+0x940c>
   1d89c:	ldr	r3, [fp, #-8]
   1d8a0:	sub	r3, r3, #1
   1d8a4:	str	r3, [fp, #-8]
   1d8a8:	ldr	r2, [fp, #-8]
   1d8ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d8b0:	cmp	r2, r3
   1d8b4:	bcs	1d774 <__assert_fail@plt+0xc534>
   1d8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8bc:	cmp	r3, #0
   1d8c0:	moveq	r3, #1
   1d8c4:	movne	r3, #0
   1d8c8:	uxtb	r3, r3
   1d8cc:	str	r3, [fp, #-12]
   1d8d0:	sub	r3, fp, #24
   1d8d4:	mov	r0, r3
   1d8d8:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1d8dc:	ldr	r3, [fp, #-12]
   1d8e0:	mov	r0, r3
   1d8e4:	sub	sp, fp, #4
   1d8e8:	ldr	fp, [sp]
   1d8ec:	add	sp, sp, #4
   1d8f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d8f4:	str	fp, [sp, #-8]!
   1d8f8:	str	lr, [sp, #4]
   1d8fc:	add	fp, sp, #4
   1d900:	sub	sp, sp, #64	; 0x40
   1d904:	str	r0, [fp, #-56]	; 0xffffffc8
   1d908:	str	r1, [fp, #-60]	; 0xffffffc4
   1d90c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d910:	ldr	r1, [r3, #8]
   1d914:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d918:	ldr	r3, [r3, #4]
   1d91c:	eor	r2, r3, r3, asr #31
   1d920:	sub	r2, r2, r3, asr #31
   1d924:	sub	r3, fp, #48	; 0x30
   1d928:	mov	r0, r3
   1d92c:	bl	18890 <__assert_fail@plt+0x7650>
   1d930:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d934:	cmp	r3, #0
   1d938:	movne	r3, #1
   1d93c:	moveq	r3, #0
   1d940:	uxtb	r3, r3
   1d944:	mov	r2, r3
   1d948:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d94c:	ldr	r3, [r3]
   1d950:	and	r3, r3, r2
   1d954:	cmp	r3, #0
   1d958:	bne	1d97c <__assert_fail@plt+0xc73c>
   1d95c:	movw	r3, #6848	; 0x1ac0
   1d960:	movt	r3, #4
   1d964:	mov	r2, #3504	; 0xdb0
   1d968:	movw	r1, #4700	; 0x125c
   1d96c:	movt	r1, #4
   1d970:	movw	r0, #5772	; 0x168c
   1d974:	movt	r0, #4
   1d978:	bl	11240 <__assert_fail@plt>
   1d97c:	sub	r3, fp, #48	; 0x30
   1d980:	mov	r2, #2
   1d984:	mov	r1, r3
   1d988:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d98c:	bl	1ccc4 <__assert_fail@plt+0xba84>
   1d990:	mov	r3, r0
   1d994:	cmp	r3, #0
   1d998:	beq	1d9a4 <__assert_fail@plt+0xc764>
   1d99c:	mov	r3, #0
   1d9a0:	b	1db3c <__assert_fail@plt+0xc8fc>
   1d9a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d9a8:	ldr	r3, [r3, #4]
   1d9ac:	cmp	r3, #1
   1d9b0:	bne	1d9c8 <__assert_fail@plt+0xc788>
   1d9b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d9b8:	ldr	r3, [r3, #8]
   1d9bc:	ldr	r3, [r3]
   1d9c0:	sub	r3, r3, #1
   1d9c4:	b	1d9cc <__assert_fail@plt+0xc78c>
   1d9c8:	mvn	r3, #0
   1d9cc:	str	r3, [fp, #-16]
   1d9d0:	mov	r3, #3
   1d9d4:	str	r3, [fp, #-12]
   1d9d8:	ldr	r2, [fp, #-12]
   1d9dc:	ldr	r3, [fp, #-16]
   1d9e0:	cmp	r2, r3
   1d9e4:	bcc	1da04 <__assert_fail@plt+0xc7c4>
   1d9e8:	ldr	r3, [fp, #-12]
   1d9ec:	cmn	r3, #1
   1d9f0:	beq	1d9fc <__assert_fail@plt+0xc7bc>
   1d9f4:	mov	r3, #2
   1d9f8:	b	1db3c <__assert_fail@plt+0xc8fc>
   1d9fc:	mov	r3, #1
   1da00:	b	1db3c <__assert_fail@plt+0xc8fc>
   1da04:	ldr	r3, [fp, #-12]
   1da08:	add	r3, r3, #2
   1da0c:	str	r3, [fp, #-12]
   1da10:	sub	r3, fp, #48	; 0x30
   1da14:	ldr	r1, [fp, #-12]
   1da18:	mov	r0, r3
   1da1c:	bl	1b3c8 <__assert_fail@plt+0xa188>
   1da20:	str	r0, [fp, #-20]	; 0xffffffec
   1da24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da28:	cmp	r3, #0
   1da2c:	bne	1da38 <__assert_fail@plt+0xc7f8>
   1da30:	mov	r3, #0
   1da34:	b	1db3c <__assert_fail@plt+0xc8fc>
   1da38:	ldr	r1, [fp, #-12]
   1da3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da40:	bl	1d288 <__assert_fail@plt+0xc048>
   1da44:	mov	r3, r0
   1da48:	cmp	r3, #1
   1da4c:	beq	1d9d8 <__assert_fail@plt+0xc798>
   1da50:	sub	r3, fp, #36	; 0x24
   1da54:	mov	r0, r3
   1da58:	bl	17e24 <__assert_fail@plt+0x6be4>
   1da5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1da60:	ldr	r3, [r3]
   1da64:	mvn	r0, r3
   1da68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1da6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1da70:	mvn	r3, #0
   1da74:	str	r3, [sp]
   1da78:	mov	r3, r1
   1da7c:	mov	r1, #0
   1da80:	bl	15010 <__assert_fail@plt+0x3dd0>
   1da84:	str	r0, [fp, #-8]
   1da88:	ldr	r3, [fp, #-12]
   1da8c:	and	r3, r3, #2
   1da90:	cmp	r3, #0
   1da94:	beq	1daa8 <__assert_fail@plt+0xc868>
   1da98:	ldr	r3, [fp, #-12]
   1da9c:	lsr	r3, r3, #2
   1daa0:	add	r3, r3, #1
   1daa4:	b	1dab4 <__assert_fail@plt+0xc874>
   1daa8:	ldr	r3, [fp, #-12]
   1daac:	lsr	r3, r3, #2
   1dab0:	rsb	r3, r3, #0
   1dab4:	str	r3, [fp, #-24]	; 0xffffffe8
   1dab8:	sub	r0, fp, #36	; 0x24
   1dabc:	sub	r3, fp, #48	; 0x30
   1dac0:	str	r3, [sp]
   1dac4:	ldr	r3, [fp, #-8]
   1dac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dacc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1dad0:	bl	1d600 <__assert_fail@plt+0xc3c0>
   1dad4:	mov	r3, r0
   1dad8:	cmp	r3, #0
   1dadc:	bne	1db1c <__assert_fail@plt+0xc8dc>
   1dae0:	b	1daf8 <__assert_fail@plt+0xc8b8>
   1dae4:	sub	r2, fp, #48	; 0x30
   1dae8:	sub	r3, fp, #36	; 0x24
   1daec:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1daf0:	mov	r0, r3
   1daf4:	bl	1d580 <__assert_fail@plt+0xc340>
   1daf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dafc:	cmp	r3, #0
   1db00:	beq	1db1c <__assert_fail@plt+0xc8dc>
   1db04:	ldr	r3, [fp, #-8]
   1db08:	sub	r3, r3, #1
   1db0c:	str	r3, [fp, #-8]
   1db10:	ldr	r3, [fp, #-8]
   1db14:	cmp	r3, #0
   1db18:	bne	1dae4 <__assert_fail@plt+0xc8a4>
   1db1c:	sub	r3, fp, #36	; 0x24
   1db20:	mov	r0, r3
   1db24:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1db28:	ldr	r3, [fp, #-8]
   1db2c:	cmp	r3, #0
   1db30:	movne	r3, #1
   1db34:	moveq	r3, #0
   1db38:	uxtb	r3, r3
   1db3c:	mov	r0, r3
   1db40:	sub	sp, fp, #4
   1db44:	ldr	fp, [sp]
   1db48:	add	sp, sp, #4
   1db4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1db50:	str	fp, [sp, #-8]!
   1db54:	str	lr, [sp, #4]
   1db58:	add	fp, sp, #4
   1db5c:	sub	sp, sp, #16
   1db60:	str	r0, [fp, #-8]
   1db64:	str	r1, [fp, #-12]
   1db68:	str	r2, [fp, #-16]
   1db6c:	str	r3, [fp, #-20]	; 0xffffffec
   1db70:	ldr	r3, [fp, #4]
   1db74:	cmp	r3, #0
   1db78:	bne	1db9c <__assert_fail@plt+0xc95c>
   1db7c:	movw	r3, #6864	; 0x1ad0
   1db80:	movt	r3, #4
   1db84:	movw	r2, #3550	; 0xdde
   1db88:	movw	r1, #4700	; 0x125c
   1db8c:	movt	r1, #4
   1db90:	movw	r0, #5788	; 0x169c
   1db94:	movt	r0, #4
   1db98:	bl	11240 <__assert_fail@plt>
   1db9c:	ldr	r3, [fp, #-8]
   1dba0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dba4:	ldr	r1, [fp, #-16]
   1dba8:	ldr	r0, [fp, #-16]
   1dbac:	bl	1c588 <__assert_fail@plt+0xb348>
   1dbb0:	mov	r1, #1
   1dbb4:	ldr	r0, [fp, #-16]
   1dbb8:	bl	19140 <__assert_fail@plt+0x7f00>
   1dbbc:	mov	r3, r0
   1dbc0:	cmp	r3, #0
   1dbc4:	beq	1dbe0 <__assert_fail@plt+0xc9a0>
   1dbc8:	ldr	r1, [fp, #-12]
   1dbcc:	ldr	r0, [fp, #-16]
   1dbd0:	bl	1919c <__assert_fail@plt+0x7f5c>
   1dbd4:	mov	r3, r0
   1dbd8:	cmp	r3, #0
   1dbdc:	bne	1dc1c <__assert_fail@plt+0xc9dc>
   1dbe0:	mov	r3, #1
   1dbe4:	b	1dc38 <__assert_fail@plt+0xc9f8>
   1dbe8:	ldr	r3, [fp, #-8]
   1dbec:	mov	r2, #2
   1dbf0:	ldr	r1, [fp, #-16]
   1dbf4:	ldr	r0, [fp, #-16]
   1dbf8:	bl	1c980 <__assert_fail@plt+0xb740>
   1dbfc:	ldr	r1, [fp, #-12]
   1dc00:	ldr	r0, [fp, #-16]
   1dc04:	bl	1919c <__assert_fail@plt+0x7f5c>
   1dc08:	mov	r3, r0
   1dc0c:	cmp	r3, #0
   1dc10:	bne	1dc1c <__assert_fail@plt+0xc9dc>
   1dc14:	mov	r3, #1
   1dc18:	b	1dc38 <__assert_fail@plt+0xc9f8>
   1dc1c:	ldr	r3, [fp, #4]
   1dc20:	sub	r3, r3, #1
   1dc24:	str	r3, [fp, #4]
   1dc28:	ldr	r3, [fp, #4]
   1dc2c:	cmp	r3, #0
   1dc30:	bne	1dbe8 <__assert_fail@plt+0xc9a8>
   1dc34:	mov	r3, #0
   1dc38:	mov	r0, r3
   1dc3c:	sub	sp, fp, #4
   1dc40:	ldr	fp, [sp]
   1dc44:	add	sp, sp, #4
   1dc48:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc4c:	str	fp, [sp, #-8]!
   1dc50:	str	lr, [sp, #4]
   1dc54:	add	fp, sp, #4
   1dc58:	sub	sp, sp, #64	; 0x40
   1dc5c:	str	r0, [fp, #-56]	; 0xffffffc8
   1dc60:	str	r1, [fp, #-60]	; 0xffffffc4
   1dc64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dc68:	ldr	r3, [r3, #4]
   1dc6c:	cmp	r3, #0
   1dc70:	movne	r3, #1
   1dc74:	moveq	r3, #0
   1dc78:	uxtb	r3, r3
   1dc7c:	mov	r2, r3
   1dc80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dc84:	ldr	r3, [r3, #8]
   1dc88:	ldr	r3, [r3]
   1dc8c:	and	r3, r3, r2
   1dc90:	cmp	r3, #0
   1dc94:	bne	1dcc0 <__assert_fail@plt+0xca80>
   1dc98:	mov	r1, #2
   1dc9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dca0:	bl	19264 <__assert_fail@plt+0x8024>
   1dca4:	mov	r3, r0
   1dca8:	cmp	r3, #0
   1dcac:	bne	1dcb8 <__assert_fail@plt+0xca78>
   1dcb0:	mov	r3, #2
   1dcb4:	b	1df54 <__assert_fail@plt+0xcd14>
   1dcb8:	mov	r3, #0
   1dcbc:	b	1df54 <__assert_fail@plt+0xcd14>
   1dcc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dcc4:	ldr	r3, [r3, #4]
   1dcc8:	cmp	r3, #0
   1dccc:	bne	1dcf0 <__assert_fail@plt+0xcab0>
   1dcd0:	movw	r3, #6880	; 0x1ae0
   1dcd4:	movt	r3, #4
   1dcd8:	movw	r2, #3590	; 0xe06
   1dcdc:	movw	r1, #4700	; 0x125c
   1dce0:	movt	r1, #4
   1dce4:	movw	r0, #5796	; 0x16a4
   1dce8:	movt	r0, #4
   1dcec:	bl	11240 <__assert_fail@plt>
   1dcf0:	mov	r1, #64	; 0x40
   1dcf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dcf8:	bl	19264 <__assert_fail@plt+0x8024>
   1dcfc:	mov	r3, r0
   1dd00:	cmp	r3, #0
   1dd04:	bge	1dd2c <__assert_fail@plt+0xcaec>
   1dd08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dd0c:	ldr	r3, [r3, #8]
   1dd10:	ldr	r3, [r3]
   1dd14:	lsr	r2, r3, #1
   1dd18:	movw	r3, #38620	; 0x96dc
   1dd1c:	movt	r3, #51561	; 0xc969
   1dd20:	lsr	r3, r3, r2
   1dd24:	and	r3, r3, #2
   1dd28:	b	1df54 <__assert_fail@plt+0xcd14>
   1dd2c:	movw	r2, #55191	; 0xd797
   1dd30:	movt	r2, #49359	; 0xc0cf
   1dd34:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1dd38:	mov	r0, #0
   1dd3c:	bl	1b76c <__assert_fail@plt+0xa52c>
   1dd40:	mov	r3, r0
   1dd44:	cmp	r3, #1
   1dd48:	beq	1dd54 <__assert_fail@plt+0xcb14>
   1dd4c:	mov	r3, #0
   1dd50:	b	1df54 <__assert_fail@plt+0xcd14>
   1dd54:	movw	r1, #961	; 0x3c1
   1dd58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dd5c:	bl	19264 <__assert_fail@plt+0x8024>
   1dd60:	mov	r3, r0
   1dd64:	cmp	r3, #0
   1dd68:	bge	1dd74 <__assert_fail@plt+0xcb34>
   1dd6c:	mov	r3, #2
   1dd70:	b	1df54 <__assert_fail@plt+0xcd14>
   1dd74:	sub	r3, fp, #28
   1dd78:	mov	r0, r3
   1dd7c:	bl	17e24 <__assert_fail@plt+0x6be4>
   1dd80:	sub	r3, fp, #40	; 0x28
   1dd84:	mov	r0, r3
   1dd88:	bl	17e24 <__assert_fail@plt+0x6be4>
   1dd8c:	sub	r3, fp, #28
   1dd90:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1dd94:	mov	r0, r3
   1dd98:	bl	19374 <__assert_fail@plt+0x8134>
   1dd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dda0:	ldr	r2, [r3]
   1dda4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dda8:	sub	r2, r2, #1
   1ddac:	str	r2, [r3]
   1ddb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ddb4:	mov	r1, #0
   1ddb8:	mov	r0, r3
   1ddbc:	bl	151e0 <__assert_fail@plt+0x3fa0>
   1ddc0:	str	r0, [fp, #-16]
   1ddc4:	sub	r1, fp, #28
   1ddc8:	sub	r3, fp, #40	; 0x28
   1ddcc:	ldr	r2, [fp, #-16]
   1ddd0:	mov	r0, r3
   1ddd4:	bl	1ad04 <__assert_fail@plt+0x9ac4>
   1ddd8:	sub	r3, fp, #52	; 0x34
   1dddc:	mov	r1, #2
   1dde0:	mov	r0, r3
   1dde4:	bl	18224 <__assert_fail@plt+0x6fe4>
   1dde8:	sub	r0, fp, #40	; 0x28
   1ddec:	sub	r2, fp, #52	; 0x34
   1ddf0:	sub	r1, fp, #28
   1ddf4:	ldr	r3, [fp, #-16]
   1ddf8:	str	r3, [sp]
   1ddfc:	mov	r3, r0
   1de00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1de04:	bl	1db50 <__assert_fail@plt+0xc910>
   1de08:	mov	r3, r0
   1de0c:	cmp	r3, #0
   1de10:	beq	1de38 <__assert_fail@plt+0xcbf8>
   1de14:	sub	r3, fp, #52	; 0x34
   1de18:	mov	r1, r3
   1de1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1de20:	bl	1d8f4 <__assert_fail@plt+0xc6b4>
   1de24:	mov	r3, r0
   1de28:	cmp	r3, #0
   1de2c:	beq	1de38 <__assert_fail@plt+0xcbf8>
   1de30:	mov	r3, #1
   1de34:	b	1de3c <__assert_fail@plt+0xcbfc>
   1de38:	mov	r3, #0
   1de3c:	str	r3, [fp, #-8]
   1de40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1de44:	sub	r3, r3, #24
   1de48:	str	r3, [fp, #-60]	; 0xffffffc4
   1de4c:	mov	r3, #0
   1de50:	str	r3, [fp, #-12]
   1de54:	b	1def8 <__assert_fail@plt+0xccb8>
   1de58:	ldr	r3, [fp, #-12]
   1de5c:	add	r3, r3, #1
   1de60:	ldr	r2, [fp, #-12]
   1de64:	mul	r3, r2, r3
   1de68:	add	r2, r3, #41	; 0x29
   1de6c:	sub	r3, fp, #52	; 0x34
   1de70:	mov	r1, r2
   1de74:	mov	r0, r3
   1de78:	bl	180b0 <__assert_fail@plt+0x6e70>
   1de7c:	sub	r2, fp, #28
   1de80:	sub	r3, fp, #52	; 0x34
   1de84:	mov	r1, r2
   1de88:	mov	r0, r3
   1de8c:	bl	1919c <__assert_fail@plt+0x7f5c>
   1de90:	mov	r3, r0
   1de94:	cmp	r3, #0
   1de98:	blt	1dec8 <__assert_fail@plt+0xcc88>
   1de9c:	ldr	r3, [fp, #-12]
   1dea0:	cmp	r3, #29
   1dea4:	bgt	1df28 <__assert_fail@plt+0xcce8>
   1dea8:	movw	r3, #6880	; 0x1ae0
   1deac:	movt	r3, #4
   1deb0:	movw	r2, #3629	; 0xe2d
   1deb4:	movw	r1, #4700	; 0x125c
   1deb8:	movt	r1, #4
   1debc:	movw	r0, #5816	; 0x16b8
   1dec0:	movt	r0, #4
   1dec4:	bl	11240 <__assert_fail@plt>
   1dec8:	sub	r0, fp, #40	; 0x28
   1decc:	sub	r2, fp, #52	; 0x34
   1ded0:	sub	r1, fp, #28
   1ded4:	ldr	r3, [fp, #-16]
   1ded8:	str	r3, [sp]
   1dedc:	mov	r3, r0
   1dee0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dee4:	bl	1db50 <__assert_fail@plt+0xc910>
   1dee8:	str	r0, [fp, #-8]
   1deec:	ldr	r3, [fp, #-12]
   1def0:	add	r3, r3, #1
   1def4:	str	r3, [fp, #-12]
   1def8:	ldr	r2, [fp, #-12]
   1defc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1df00:	cmp	r2, r3
   1df04:	movlt	r3, #1
   1df08:	movge	r3, #0
   1df0c:	uxtb	r3, r3
   1df10:	mov	r2, r3
   1df14:	ldr	r3, [fp, #-8]
   1df18:	and	r3, r3, r2
   1df1c:	cmp	r3, #0
   1df20:	bne	1de58 <__assert_fail@plt+0xcc18>
   1df24:	b	1df2c <__assert_fail@plt+0xccec>
   1df28:	nop	{0}
   1df2c:	sub	r3, fp, #28
   1df30:	mov	r0, r3
   1df34:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1df38:	sub	r3, fp, #40	; 0x28
   1df3c:	mov	r0, r3
   1df40:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1df44:	sub	r3, fp, #52	; 0x34
   1df48:	mov	r0, r3
   1df4c:	bl	17ef8 <__assert_fail@plt+0x6cb8>
   1df50:	ldr	r3, [fp, #-8]
   1df54:	mov	r0, r3
   1df58:	sub	sp, fp, #4
   1df5c:	ldr	fp, [sp]
   1df60:	add	sp, sp, #4
   1df64:	pop	{pc}		; (ldr pc, [sp], #4)
   1df68:	push	{fp}		; (str fp, [sp, #-4]!)
   1df6c:	add	fp, sp, #0
   1df70:	sub	sp, sp, #36	; 0x24
   1df74:	str	r0, [fp, #-32]	; 0xffffffe0
   1df78:	str	r1, [fp, #-36]	; 0xffffffdc
   1df7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df80:	ldr	r3, [r3, #4]
   1df84:	str	r3, [fp, #-12]
   1df88:	ldr	r3, [fp, #-12]
   1df8c:	cmp	r3, #0
   1df90:	rsblt	r3, r3, #0
   1df94:	str	r3, [fp, #-16]
   1df98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1df9c:	lsr	r3, r3, #5
   1dfa0:	str	r3, [fp, #-8]
   1dfa4:	ldr	r2, [fp, #-8]
   1dfa8:	ldr	r3, [fp, #-16]
   1dfac:	cmp	r2, r3
   1dfb0:	blt	1dfc4 <__assert_fail@plt+0xcd84>
   1dfb4:	ldr	r3, [fp, #-12]
   1dfb8:	lsr	r3, r3, #31
   1dfbc:	uxtb	r3, r3
   1dfc0:	b	1e084 <__assert_fail@plt+0xce44>
   1dfc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfc8:	and	r3, r3, #31
   1dfcc:	str	r3, [fp, #-20]	; 0xffffffec
   1dfd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dfd4:	ldr	r2, [r3, #8]
   1dfd8:	ldr	r3, [fp, #-8]
   1dfdc:	lsl	r3, r3, #2
   1dfe0:	add	r3, r2, r3
   1dfe4:	ldr	r3, [r3]
   1dfe8:	str	r3, [fp, #-24]	; 0xffffffe8
   1dfec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dff4:	lsr	r3, r2, r3
   1dff8:	and	r3, r3, #1
   1dffc:	str	r3, [fp, #-28]	; 0xffffffe4
   1e000:	ldr	r3, [fp, #-12]
   1e004:	cmp	r3, #0
   1e008:	bge	1e080 <__assert_fail@plt+0xce40>
   1e00c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e010:	cmp	r3, #0
   1e014:	beq	1e068 <__assert_fail@plt+0xce28>
   1e018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e01c:	rsb	r3, r3, #32
   1e020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e024:	lsl	r3, r2, r3
   1e028:	cmp	r3, #0
   1e02c:	beq	1e068 <__assert_fail@plt+0xce28>
   1e030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e034:	eor	r3, r3, #1
   1e038:	b	1e084 <__assert_fail@plt+0xce44>
   1e03c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e040:	ldr	r2, [r3, #8]
   1e044:	ldr	r3, [fp, #-8]
   1e048:	lsl	r3, r3, #2
   1e04c:	add	r3, r2, r3
   1e050:	ldr	r3, [r3]
   1e054:	cmp	r3, #0
   1e058:	beq	1e068 <__assert_fail@plt+0xce28>
   1e05c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e060:	eor	r3, r3, #1
   1e064:	b	1e084 <__assert_fail@plt+0xce44>
   1e068:	ldr	r3, [fp, #-8]
   1e06c:	sub	r3, r3, #1
   1e070:	str	r3, [fp, #-8]
   1e074:	ldr	r3, [fp, #-8]
   1e078:	cmp	r3, #0
   1e07c:	bge	1e03c <__assert_fail@plt+0xcdfc>
   1e080:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e084:	mov	r0, r3
   1e088:	add	sp, fp, #0
   1e08c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e090:	bx	lr
   1e094:	str	fp, [sp, #-8]!
   1e098:	str	lr, [sp, #4]
   1e09c:	add	fp, sp, #4
   1e0a0:	sub	sp, sp, #32
   1e0a4:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0a8:	str	r1, [fp, #-36]	; 0xffffffdc
   1e0ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e0b0:	ldr	r3, [r3, #4]
   1e0b4:	cmp	r3, #0
   1e0b8:	rsblt	r3, r3, #0
   1e0bc:	str	r3, [fp, #-8]
   1e0c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e0c4:	lsr	r3, r3, #5
   1e0c8:	str	r3, [fp, #-16]
   1e0cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e0d0:	and	r3, r3, #31
   1e0d4:	mov	r2, #1
   1e0d8:	lsl	r3, r2, r3
   1e0dc:	str	r3, [fp, #-20]	; 0xffffffec
   1e0e0:	ldr	r2, [fp, #-16]
   1e0e4:	ldr	r3, [fp, #-8]
   1e0e8:	cmp	r2, r3
   1e0ec:	blt	1e194 <__assert_fail@plt+0xcf54>
   1e0f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e0f4:	ldr	r3, [r3]
   1e0f8:	ldr	r2, [fp, #-16]
   1e0fc:	cmp	r2, r3
   1e100:	blt	1e120 <__assert_fail@plt+0xcee0>
   1e104:	ldr	r3, [fp, #-16]
   1e108:	add	r3, r3, #1
   1e10c:	mov	r1, r3
   1e110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e114:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1e118:	mov	r3, r0
   1e11c:	b	1e128 <__assert_fail@plt+0xcee8>
   1e120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e124:	ldr	r3, [r3, #8]
   1e128:	str	r3, [fp, #-24]	; 0xffffffe8
   1e12c:	ldr	r3, [fp, #-16]
   1e130:	lsl	r3, r3, #2
   1e134:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e138:	add	r3, r2, r3
   1e13c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e140:	str	r2, [r3]
   1e144:	ldr	r3, [fp, #-8]
   1e148:	str	r3, [fp, #-12]
   1e14c:	b	1e174 <__assert_fail@plt+0xcf34>
   1e150:	ldr	r3, [fp, #-12]
   1e154:	lsl	r3, r3, #2
   1e158:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e15c:	add	r3, r2, r3
   1e160:	mov	r2, #0
   1e164:	str	r2, [r3]
   1e168:	ldr	r3, [fp, #-12]
   1e16c:	add	r3, r3, #1
   1e170:	str	r3, [fp, #-12]
   1e174:	ldr	r2, [fp, #-12]
   1e178:	ldr	r3, [fp, #-16]
   1e17c:	cmp	r2, r3
   1e180:	blt	1e150 <__assert_fail@plt+0xcf10>
   1e184:	ldr	r3, [fp, #-16]
   1e188:	add	r3, r3, #1
   1e18c:	str	r3, [fp, #-8]
   1e190:	b	1e240 <__assert_fail@plt+0xd000>
   1e194:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e198:	ldr	r3, [r3, #8]
   1e19c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e1a0:	ldr	r3, [fp, #-16]
   1e1a4:	lsl	r3, r3, #2
   1e1a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1ac:	add	r0, r2, r3
   1e1b0:	ldr	r3, [fp, #-16]
   1e1b4:	lsl	r3, r3, #2
   1e1b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1bc:	add	r1, r2, r3
   1e1c0:	ldr	r2, [fp, #-8]
   1e1c4:	ldr	r3, [fp, #-16]
   1e1c8:	sub	r2, r2, r3
   1e1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e1d0:	bl	13ee4 <__assert_fail@plt+0x2ca4>
   1e1d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1dc:	cmp	r3, #0
   1e1e0:	beq	1e240 <__assert_fail@plt+0xd000>
   1e1e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e1e8:	ldr	r3, [r3]
   1e1ec:	ldr	r2, [fp, #-8]
   1e1f0:	cmp	r2, r3
   1e1f4:	blt	1e214 <__assert_fail@plt+0xcfd4>
   1e1f8:	ldr	r3, [fp, #-8]
   1e1fc:	add	r3, r3, #1
   1e200:	mov	r1, r3
   1e204:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e208:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1e20c:	mov	r3, r0
   1e210:	b	1e21c <__assert_fail@plt+0xcfdc>
   1e214:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e218:	ldr	r3, [r3, #8]
   1e21c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e220:	ldr	r3, [fp, #-8]
   1e224:	add	r2, r3, #1
   1e228:	str	r2, [fp, #-8]
   1e22c:	lsl	r3, r3, #2
   1e230:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e234:	add	r3, r2, r3
   1e238:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e23c:	str	r2, [r3]
   1e240:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e244:	ldr	r3, [r3, #4]
   1e248:	cmp	r3, #0
   1e24c:	bge	1e25c <__assert_fail@plt+0xd01c>
   1e250:	ldr	r3, [fp, #-8]
   1e254:	rsb	r3, r3, #0
   1e258:	b	1e260 <__assert_fail@plt+0xd020>
   1e25c:	ldr	r3, [fp, #-8]
   1e260:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e264:	str	r3, [r2, #4]
   1e268:	nop	{0}
   1e26c:	sub	sp, fp, #4
   1e270:	ldr	fp, [sp]
   1e274:	add	sp, sp, #4
   1e278:	pop	{pc}		; (ldr pc, [sp], #4)
   1e27c:	str	fp, [sp, #-8]!
   1e280:	str	lr, [sp, #4]
   1e284:	add	fp, sp, #4
   1e288:	sub	sp, sp, #32
   1e28c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e290:	str	r1, [fp, #-36]	; 0xffffffdc
   1e294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e298:	ldr	r3, [r3, #4]
   1e29c:	cmp	r3, #0
   1e2a0:	rsblt	r3, r3, #0
   1e2a4:	str	r3, [fp, #-8]
   1e2a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2ac:	ldr	r3, [r3, #8]
   1e2b0:	str	r3, [fp, #-12]
   1e2b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e2b8:	lsr	r3, r3, #5
   1e2bc:	str	r3, [fp, #-16]
   1e2c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e2c4:	and	r3, r3, #31
   1e2c8:	mov	r2, #1
   1e2cc:	lsl	r3, r2, r3
   1e2d0:	str	r3, [fp, #-20]	; 0xffffffec
   1e2d4:	ldr	r2, [fp, #-16]
   1e2d8:	ldr	r3, [fp, #-8]
   1e2dc:	cmp	r2, r3
   1e2e0:	blt	1e304 <__assert_fail@plt+0xd0c4>
   1e2e4:	movw	r3, #6900	; 0x1af4
   1e2e8:	movt	r3, #4
   1e2ec:	movw	r2, #3753	; 0xea9
   1e2f0:	movw	r1, #4700	; 0x125c
   1e2f4:	movt	r1, #4
   1e2f8:	movw	r0, #5824	; 0x16c0
   1e2fc:	movt	r0, #4
   1e300:	bl	11240 <__assert_fail@plt>
   1e304:	ldr	r3, [fp, #-16]
   1e308:	lsl	r3, r3, #2
   1e30c:	ldr	r2, [fp, #-12]
   1e310:	add	r0, r2, r3
   1e314:	ldr	r3, [fp, #-16]
   1e318:	lsl	r3, r3, #2
   1e31c:	ldr	r2, [fp, #-12]
   1e320:	add	r1, r2, r3
   1e324:	ldr	r2, [fp, #-8]
   1e328:	ldr	r3, [fp, #-16]
   1e32c:	sub	r2, r2, r3
   1e330:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e334:	bl	14194 <__assert_fail@plt+0x2f54>
   1e338:	str	r0, [fp, #-24]	; 0xffffffe8
   1e33c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e340:	cmp	r3, #0
   1e344:	beq	1e368 <__assert_fail@plt+0xd128>
   1e348:	movw	r3, #6900	; 0x1af4
   1e34c:	movt	r3, #4
   1e350:	movw	r2, #3756	; 0xeac
   1e354:	movw	r1, #4700	; 0x125c
   1e358:	movt	r1, #4
   1e35c:	movw	r0, #5252	; 0x1484
   1e360:	movt	r0, #4
   1e364:	bl	11240 <__assert_fail@plt>
   1e368:	ldr	r1, [fp, #-8]
   1e36c:	ldr	r0, [fp, #-12]
   1e370:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1e374:	str	r0, [fp, #-8]
   1e378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e37c:	ldr	r3, [r3, #4]
   1e380:	cmp	r3, #0
   1e384:	bge	1e394 <__assert_fail@plt+0xd154>
   1e388:	ldr	r3, [fp, #-8]
   1e38c:	rsb	r3, r3, #0
   1e390:	b	1e398 <__assert_fail@plt+0xd158>
   1e394:	ldr	r3, [fp, #-8]
   1e398:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e39c:	str	r3, [r2, #4]
   1e3a0:	nop	{0}
   1e3a4:	sub	sp, fp, #4
   1e3a8:	ldr	fp, [sp]
   1e3ac:	add	sp, sp, #4
   1e3b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3b4:	str	fp, [sp, #-8]!
   1e3b8:	str	lr, [sp, #4]
   1e3bc:	add	fp, sp, #4
   1e3c0:	sub	sp, sp, #8
   1e3c4:	str	r0, [fp, #-8]
   1e3c8:	str	r1, [fp, #-12]
   1e3cc:	ldr	r1, [fp, #-12]
   1e3d0:	ldr	r0, [fp, #-8]
   1e3d4:	bl	1df68 <__assert_fail@plt+0xcd28>
   1e3d8:	mov	r3, r0
   1e3dc:	cmp	r3, #0
   1e3e0:	bne	1e410 <__assert_fail@plt+0xd1d0>
   1e3e4:	ldr	r3, [fp, #-8]
   1e3e8:	ldr	r3, [r3, #4]
   1e3ec:	cmp	r3, #0
   1e3f0:	blt	1e404 <__assert_fail@plt+0xd1c4>
   1e3f4:	ldr	r1, [fp, #-12]
   1e3f8:	ldr	r0, [fp, #-8]
   1e3fc:	bl	1e094 <__assert_fail@plt+0xce54>
   1e400:	b	1e410 <__assert_fail@plt+0xd1d0>
   1e404:	ldr	r1, [fp, #-12]
   1e408:	ldr	r0, [fp, #-8]
   1e40c:	bl	1e27c <__assert_fail@plt+0xd03c>
   1e410:	nop	{0}
   1e414:	sub	sp, fp, #4
   1e418:	ldr	fp, [sp]
   1e41c:	add	sp, sp, #4
   1e420:	pop	{pc}		; (ldr pc, [sp], #4)
   1e424:	str	fp, [sp, #-8]!
   1e428:	str	lr, [sp, #4]
   1e42c:	add	fp, sp, #4
   1e430:	sub	sp, sp, #8
   1e434:	str	r0, [fp, #-8]
   1e438:	str	r1, [fp, #-12]
   1e43c:	ldr	r1, [fp, #-12]
   1e440:	ldr	r0, [fp, #-8]
   1e444:	bl	1df68 <__assert_fail@plt+0xcd28>
   1e448:	mov	r3, r0
   1e44c:	cmp	r3, #0
   1e450:	beq	1e480 <__assert_fail@plt+0xd240>
   1e454:	ldr	r3, [fp, #-8]
   1e458:	ldr	r3, [r3, #4]
   1e45c:	cmp	r3, #0
   1e460:	blt	1e474 <__assert_fail@plt+0xd234>
   1e464:	ldr	r1, [fp, #-12]
   1e468:	ldr	r0, [fp, #-8]
   1e46c:	bl	1e27c <__assert_fail@plt+0xd03c>
   1e470:	b	1e480 <__assert_fail@plt+0xd240>
   1e474:	ldr	r1, [fp, #-12]
   1e478:	ldr	r0, [fp, #-8]
   1e47c:	bl	1e094 <__assert_fail@plt+0xce54>
   1e480:	nop	{0}
   1e484:	sub	sp, fp, #4
   1e488:	ldr	fp, [sp]
   1e48c:	add	sp, sp, #4
   1e490:	pop	{pc}		; (ldr pc, [sp], #4)
   1e494:	str	fp, [sp, #-8]!
   1e498:	str	lr, [sp, #4]
   1e49c:	add	fp, sp, #4
   1e4a0:	sub	sp, sp, #8
   1e4a4:	str	r0, [fp, #-8]
   1e4a8:	str	r1, [fp, #-12]
   1e4ac:	ldr	r1, [fp, #-12]
   1e4b0:	ldr	r0, [fp, #-8]
   1e4b4:	bl	1df68 <__assert_fail@plt+0xcd28>
   1e4b8:	mov	r2, r0
   1e4bc:	ldr	r3, [fp, #-8]
   1e4c0:	ldr	r3, [r3, #4]
   1e4c4:	lsr	r3, r3, #31
   1e4c8:	uxtb	r3, r3
   1e4cc:	cmp	r2, r3
   1e4d0:	beq	1e4e4 <__assert_fail@plt+0xd2a4>
   1e4d4:	ldr	r1, [fp, #-12]
   1e4d8:	ldr	r0, [fp, #-8]
   1e4dc:	bl	1e27c <__assert_fail@plt+0xd03c>
   1e4e0:	b	1e4f0 <__assert_fail@plt+0xd2b0>
   1e4e4:	ldr	r1, [fp, #-12]
   1e4e8:	ldr	r0, [fp, #-8]
   1e4ec:	bl	1e094 <__assert_fail@plt+0xce54>
   1e4f0:	nop	{0}
   1e4f4:	sub	sp, fp, #4
   1e4f8:	ldr	fp, [sp]
   1e4fc:	add	sp, sp, #4
   1e500:	pop	{pc}		; (ldr pc, [sp], #4)
   1e504:	str	fp, [sp, #-8]!
   1e508:	str	lr, [sp, #4]
   1e50c:	add	fp, sp, #4
   1e510:	sub	sp, sp, #8
   1e514:	str	r0, [fp, #-8]
   1e518:	str	r1, [fp, #-12]
   1e51c:	mov	r2, #1
   1e520:	ldr	r1, [fp, #-12]
   1e524:	ldr	r0, [fp, #-8]
   1e528:	bl	194ac <__assert_fail@plt+0x826c>
   1e52c:	ldr	r1, [fp, #-8]
   1e530:	ldr	r0, [fp, #-8]
   1e534:	bl	193c4 <__assert_fail@plt+0x8184>
   1e538:	nop	{0}
   1e53c:	sub	sp, fp, #4
   1e540:	ldr	fp, [sp]
   1e544:	add	sp, sp, #4
   1e548:	pop	{pc}		; (ldr pc, [sp], #4)
   1e54c:	str	fp, [sp, #-8]!
   1e550:	str	lr, [sp, #4]
   1e554:	add	fp, sp, #4
   1e558:	sub	sp, sp, #88	; 0x58
   1e55c:	str	r0, [fp, #-80]	; 0xffffffb0
   1e560:	str	r1, [fp, #-84]	; 0xffffffac
   1e564:	str	r2, [fp, #-88]	; 0xffffffa8
   1e568:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e56c:	ldr	r3, [r3, #4]
   1e570:	cmp	r3, #0
   1e574:	rsblt	r3, r3, #0
   1e578:	str	r3, [fp, #-8]
   1e57c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e580:	ldr	r3, [r3, #4]
   1e584:	cmp	r3, #0
   1e588:	rsblt	r3, r3, #0
   1e58c:	str	r3, [fp, #-12]
   1e590:	ldr	r2, [fp, #-8]
   1e594:	ldr	r3, [fp, #-12]
   1e598:	cmp	r2, r3
   1e59c:	bge	1e5d0 <__assert_fail@plt+0xd390>
   1e5a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e5a4:	str	r3, [fp, #-36]	; 0xffffffdc
   1e5a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e5ac:	str	r3, [fp, #-84]	; 0xffffffac
   1e5b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e5b4:	str	r3, [fp, #-88]	; 0xffffffa8
   1e5b8:	ldr	r3, [fp, #-8]
   1e5bc:	str	r3, [fp, #-40]	; 0xffffffd8
   1e5c0:	ldr	r3, [fp, #-12]
   1e5c4:	str	r3, [fp, #-8]
   1e5c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e5cc:	str	r3, [fp, #-12]
   1e5d0:	ldr	r3, [fp, #-12]
   1e5d4:	cmp	r3, #0
   1e5d8:	bne	1e5ec <__assert_fail@plt+0xd3ac>
   1e5dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e5e0:	mov	r2, #0
   1e5e4:	str	r2, [r3, #4]
   1e5e8:	b	1e908 <__assert_fail@plt+0xd6c8>
   1e5ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e5f0:	ldr	r3, [r3, #4]
   1e5f4:	lsr	r3, r3, #31
   1e5f8:	uxtb	r3, r3
   1e5fc:	str	r3, [fp, #-24]	; 0xffffffe8
   1e600:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e604:	ldr	r3, [r3, #4]
   1e608:	lsr	r3, r3, #31
   1e60c:	uxtb	r3, r3
   1e610:	str	r3, [fp, #-28]	; 0xffffffe4
   1e614:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e61c:	and	r3, r3, r2
   1e620:	str	r3, [fp, #-32]	; 0xffffffe0
   1e624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e628:	rsb	r3, r3, #0
   1e62c:	str	r3, [fp, #-44]	; 0xffffffd4
   1e630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e634:	rsb	r3, r3, #0
   1e638:	str	r3, [fp, #-48]	; 0xffffffd0
   1e63c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e640:	rsb	r3, r3, #0
   1e644:	str	r3, [fp, #-52]	; 0xffffffcc
   1e648:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e64c:	cmp	r3, #0
   1e650:	beq	1e65c <__assert_fail@plt+0xd41c>
   1e654:	ldr	r3, [fp, #-8]
   1e658:	b	1e660 <__assert_fail@plt+0xd420>
   1e65c:	ldr	r3, [fp, #-12]
   1e660:	str	r3, [fp, #-16]
   1e664:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e668:	ldr	r3, [fp, #-16]
   1e66c:	add	r2, r2, r3
   1e670:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e674:	ldr	r3, [r3]
   1e678:	cmp	r2, r3
   1e67c:	ble	1e6a0 <__assert_fail@plt+0xd460>
   1e680:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e684:	ldr	r3, [fp, #-16]
   1e688:	add	r3, r2, r3
   1e68c:	mov	r1, r3
   1e690:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e694:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1e698:	mov	r3, r0
   1e69c:	b	1e6a8 <__assert_fail@plt+0xd468>
   1e6a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e6a4:	ldr	r3, [r3, #8]
   1e6a8:	str	r3, [fp, #-56]	; 0xffffffc8
   1e6ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e6b0:	ldr	r3, [r3, #8]
   1e6b4:	str	r3, [fp, #-60]	; 0xffffffc4
   1e6b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e6bc:	ldr	r3, [r3, #8]
   1e6c0:	str	r3, [fp, #-64]	; 0xffffffc0
   1e6c4:	mov	r3, #0
   1e6c8:	str	r3, [fp, #-20]	; 0xffffffec
   1e6cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e6d0:	lsl	r3, r3, #2
   1e6d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e6d8:	add	r3, r2, r3
   1e6dc:	ldr	r2, [r3]
   1e6e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e6e4:	eor	r3, r3, r2
   1e6e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e6ec:	add	r3, r2, r3
   1e6f0:	str	r3, [fp, #-68]	; 0xffffffbc
   1e6f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e6f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6fc:	cmp	r2, r3
   1e700:	movcc	r3, #1
   1e704:	movcs	r3, #0
   1e708:	uxtb	r3, r3
   1e70c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e710:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e714:	lsl	r3, r3, #2
   1e718:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e71c:	add	r3, r2, r3
   1e720:	ldr	r2, [r3]
   1e724:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e728:	eor	r3, r3, r2
   1e72c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e730:	add	r3, r2, r3
   1e734:	str	r3, [fp, #-72]	; 0xffffffb8
   1e738:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e73c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e740:	cmp	r2, r3
   1e744:	movcc	r3, #1
   1e748:	movcs	r3, #0
   1e74c:	uxtb	r3, r3
   1e750:	str	r3, [fp, #-28]	; 0xffffffe4
   1e754:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e758:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e75c:	and	r2, r2, r3
   1e760:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e764:	eor	r3, r3, r2
   1e768:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e76c:	add	r3, r2, r3
   1e770:	str	r3, [fp, #-76]	; 0xffffffb4
   1e774:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e77c:	cmp	r2, r3
   1e780:	movcc	r3, #1
   1e784:	movcs	r3, #0
   1e788:	uxtb	r3, r3
   1e78c:	str	r3, [fp, #-32]	; 0xffffffe0
   1e790:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e794:	lsl	r3, r3, #2
   1e798:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e79c:	add	r3, r2, r3
   1e7a0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e7a4:	str	r2, [r3]
   1e7a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e7ac:	add	r3, r3, #1
   1e7b0:	str	r3, [fp, #-20]	; 0xffffffec
   1e7b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e7b8:	ldr	r3, [fp, #-12]
   1e7bc:	cmp	r2, r3
   1e7c0:	blt	1e6cc <__assert_fail@plt+0xd48c>
   1e7c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e7c8:	cmp	r3, #0
   1e7cc:	beq	1e894 <__assert_fail@plt+0xd654>
   1e7d0:	movw	r3, #6916	; 0x1b04
   1e7d4:	movt	r3, #4
   1e7d8:	movw	r2, #3854	; 0xf0e
   1e7dc:	movw	r1, #4700	; 0x125c
   1e7e0:	movt	r1, #4
   1e7e4:	movw	r0, #5840	; 0x16d0
   1e7e8:	movt	r0, #4
   1e7ec:	bl	11240 <__assert_fail@plt>
   1e7f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e7f4:	lsl	r3, r3, #2
   1e7f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e7fc:	add	r3, r2, r3
   1e800:	ldr	r2, [r3]
   1e804:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e808:	eor	r3, r3, r2
   1e80c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e810:	add	r3, r2, r3
   1e814:	str	r3, [fp, #-68]	; 0xffffffbc
   1e818:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e81c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e820:	cmp	r2, r3
   1e824:	movcc	r3, #1
   1e828:	movcs	r3, #0
   1e82c:	uxtb	r3, r3
   1e830:	str	r3, [fp, #-24]	; 0xffffffe8
   1e834:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e838:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e83c:	and	r2, r2, r3
   1e840:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e844:	eor	r3, r3, r2
   1e848:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e84c:	add	r3, r2, r3
   1e850:	str	r3, [fp, #-76]	; 0xffffffb4
   1e854:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e858:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e85c:	cmp	r2, r3
   1e860:	movcc	r3, #1
   1e864:	movcs	r3, #0
   1e868:	uxtb	r3, r3
   1e86c:	str	r3, [fp, #-32]	; 0xffffffe0
   1e870:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e874:	lsl	r3, r3, #2
   1e878:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e87c:	add	r3, r2, r3
   1e880:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e884:	str	r2, [r3]
   1e888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e88c:	add	r3, r3, #1
   1e890:	str	r3, [fp, #-20]	; 0xffffffec
   1e894:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e898:	ldr	r3, [fp, #-16]
   1e89c:	cmp	r2, r3
   1e8a0:	blt	1e7f0 <__assert_fail@plt+0xd5b0>
   1e8a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e8a8:	cmp	r3, #0
   1e8ac:	beq	1e8d4 <__assert_fail@plt+0xd694>
   1e8b0:	ldr	r3, [fp, #-16]
   1e8b4:	add	r2, r3, #1
   1e8b8:	str	r2, [fp, #-16]
   1e8bc:	lsl	r3, r3, #2
   1e8c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e8c4:	add	r3, r2, r3
   1e8c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e8cc:	str	r2, [r3]
   1e8d0:	b	1e8e4 <__assert_fail@plt+0xd6a4>
   1e8d4:	ldr	r1, [fp, #-16]
   1e8d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e8dc:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1e8e0:	str	r0, [fp, #-16]
   1e8e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e8e8:	cmp	r3, #0
   1e8ec:	beq	1e8fc <__assert_fail@plt+0xd6bc>
   1e8f0:	ldr	r3, [fp, #-16]
   1e8f4:	rsb	r3, r3, #0
   1e8f8:	b	1e900 <__assert_fail@plt+0xd6c0>
   1e8fc:	ldr	r3, [fp, #-16]
   1e900:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1e904:	str	r3, [r2, #4]
   1e908:	sub	sp, fp, #4
   1e90c:	ldr	fp, [sp]
   1e910:	add	sp, sp, #4
   1e914:	pop	{pc}		; (ldr pc, [sp], #4)
   1e918:	str	fp, [sp, #-8]!
   1e91c:	str	lr, [sp, #4]
   1e920:	add	fp, sp, #4
   1e924:	sub	sp, sp, #88	; 0x58
   1e928:	str	r0, [fp, #-80]	; 0xffffffb0
   1e92c:	str	r1, [fp, #-84]	; 0xffffffac
   1e930:	str	r2, [fp, #-88]	; 0xffffffa8
   1e934:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e938:	ldr	r3, [r3, #4]
   1e93c:	cmp	r3, #0
   1e940:	rsblt	r3, r3, #0
   1e944:	str	r3, [fp, #-8]
   1e948:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e94c:	ldr	r3, [r3, #4]
   1e950:	cmp	r3, #0
   1e954:	rsblt	r3, r3, #0
   1e958:	str	r3, [fp, #-12]
   1e95c:	ldr	r2, [fp, #-8]
   1e960:	ldr	r3, [fp, #-12]
   1e964:	cmp	r2, r3
   1e968:	bge	1e99c <__assert_fail@plt+0xd75c>
   1e96c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e970:	str	r3, [fp, #-36]	; 0xffffffdc
   1e974:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e978:	str	r3, [fp, #-84]	; 0xffffffac
   1e97c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e980:	str	r3, [fp, #-88]	; 0xffffffa8
   1e984:	ldr	r3, [fp, #-8]
   1e988:	str	r3, [fp, #-40]	; 0xffffffd8
   1e98c:	ldr	r3, [fp, #-12]
   1e990:	str	r3, [fp, #-8]
   1e994:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e998:	str	r3, [fp, #-12]
   1e99c:	ldr	r3, [fp, #-12]
   1e9a0:	cmp	r3, #0
   1e9a4:	bne	1e9b8 <__assert_fail@plt+0xd778>
   1e9a8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1e9ac:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e9b0:	bl	18138 <__assert_fail@plt+0x6ef8>
   1e9b4:	b	1ecd4 <__assert_fail@plt+0xda94>
   1e9b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e9bc:	ldr	r3, [r3, #4]
   1e9c0:	lsr	r3, r3, #31
   1e9c4:	uxtb	r3, r3
   1e9c8:	str	r3, [fp, #-24]	; 0xffffffe8
   1e9cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e9d0:	ldr	r3, [r3, #4]
   1e9d4:	lsr	r3, r3, #31
   1e9d8:	uxtb	r3, r3
   1e9dc:	str	r3, [fp, #-28]	; 0xffffffe4
   1e9e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e9e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e9e8:	orr	r3, r2, r3
   1e9ec:	str	r3, [fp, #-32]	; 0xffffffe0
   1e9f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9f4:	rsb	r3, r3, #0
   1e9f8:	str	r3, [fp, #-44]	; 0xffffffd4
   1e9fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ea00:	rsb	r3, r3, #0
   1ea04:	str	r3, [fp, #-48]	; 0xffffffd0
   1ea08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea0c:	rsb	r3, r3, #0
   1ea10:	str	r3, [fp, #-52]	; 0xffffffcc
   1ea14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ea18:	cmp	r3, #0
   1ea1c:	beq	1ea28 <__assert_fail@plt+0xd7e8>
   1ea20:	ldr	r3, [fp, #-12]
   1ea24:	b	1ea2c <__assert_fail@plt+0xd7ec>
   1ea28:	ldr	r3, [fp, #-8]
   1ea2c:	str	r3, [fp, #-16]
   1ea30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ea34:	ldr	r3, [fp, #-16]
   1ea38:	add	r2, r2, r3
   1ea3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ea40:	ldr	r3, [r3]
   1ea44:	cmp	r2, r3
   1ea48:	ble	1ea6c <__assert_fail@plt+0xd82c>
   1ea4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ea50:	ldr	r3, [fp, #-16]
   1ea54:	add	r3, r2, r3
   1ea58:	mov	r1, r3
   1ea5c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ea60:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1ea64:	mov	r3, r0
   1ea68:	b	1ea74 <__assert_fail@plt+0xd834>
   1ea6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ea70:	ldr	r3, [r3, #8]
   1ea74:	str	r3, [fp, #-56]	; 0xffffffc8
   1ea78:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ea7c:	ldr	r3, [r3, #8]
   1ea80:	str	r3, [fp, #-60]	; 0xffffffc4
   1ea84:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ea88:	ldr	r3, [r3, #8]
   1ea8c:	str	r3, [fp, #-64]	; 0xffffffc0
   1ea90:	mov	r3, #0
   1ea94:	str	r3, [fp, #-20]	; 0xffffffec
   1ea98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea9c:	lsl	r3, r3, #2
   1eaa0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1eaa4:	add	r3, r2, r3
   1eaa8:	ldr	r2, [r3]
   1eaac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eab0:	eor	r3, r3, r2
   1eab4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eab8:	add	r3, r2, r3
   1eabc:	str	r3, [fp, #-68]	; 0xffffffbc
   1eac0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1eac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eac8:	cmp	r2, r3
   1eacc:	movcc	r3, #1
   1ead0:	movcs	r3, #0
   1ead4:	uxtb	r3, r3
   1ead8:	str	r3, [fp, #-24]	; 0xffffffe8
   1eadc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eae0:	lsl	r3, r3, #2
   1eae4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1eae8:	add	r3, r2, r3
   1eaec:	ldr	r2, [r3]
   1eaf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1eaf4:	eor	r3, r3, r2
   1eaf8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eafc:	add	r3, r2, r3
   1eb00:	str	r3, [fp, #-72]	; 0xffffffb8
   1eb04:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1eb08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eb0c:	cmp	r2, r3
   1eb10:	movcc	r3, #1
   1eb14:	movcs	r3, #0
   1eb18:	uxtb	r3, r3
   1eb1c:	str	r3, [fp, #-28]	; 0xffffffe4
   1eb20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1eb24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1eb28:	orr	r2, r2, r3
   1eb2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eb30:	eor	r3, r3, r2
   1eb34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eb38:	add	r3, r2, r3
   1eb3c:	str	r3, [fp, #-76]	; 0xffffffb4
   1eb40:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1eb44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb48:	cmp	r2, r3
   1eb4c:	movcc	r3, #1
   1eb50:	movcs	r3, #0
   1eb54:	uxtb	r3, r3
   1eb58:	str	r3, [fp, #-32]	; 0xffffffe0
   1eb5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eb60:	lsl	r3, r3, #2
   1eb64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1eb68:	add	r3, r2, r3
   1eb6c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1eb70:	str	r2, [r3]
   1eb74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eb78:	add	r3, r3, #1
   1eb7c:	str	r3, [fp, #-20]	; 0xffffffec
   1eb80:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eb84:	ldr	r3, [fp, #-12]
   1eb88:	cmp	r2, r3
   1eb8c:	blt	1ea98 <__assert_fail@plt+0xd858>
   1eb90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eb94:	cmp	r3, #0
   1eb98:	beq	1ec60 <__assert_fail@plt+0xda20>
   1eb9c:	movw	r3, #6924	; 0x1b0c
   1eba0:	movt	r3, #4
   1eba4:	movw	r2, #3927	; 0xf57
   1eba8:	movw	r1, #4700	; 0x125c
   1ebac:	movt	r1, #4
   1ebb0:	movw	r0, #5840	; 0x16d0
   1ebb4:	movt	r0, #4
   1ebb8:	bl	11240 <__assert_fail@plt>
   1ebbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ebc0:	lsl	r3, r3, #2
   1ebc4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ebc8:	add	r3, r2, r3
   1ebcc:	ldr	r2, [r3]
   1ebd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ebd4:	eor	r3, r3, r2
   1ebd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ebdc:	add	r3, r2, r3
   1ebe0:	str	r3, [fp, #-68]	; 0xffffffbc
   1ebe4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ebe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ebec:	cmp	r2, r3
   1ebf0:	movcc	r3, #1
   1ebf4:	movcs	r3, #0
   1ebf8:	uxtb	r3, r3
   1ebfc:	str	r3, [fp, #-24]	; 0xffffffe8
   1ec00:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ec04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ec08:	orr	r2, r2, r3
   1ec0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ec10:	eor	r3, r3, r2
   1ec14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ec18:	add	r3, r2, r3
   1ec1c:	str	r3, [fp, #-76]	; 0xffffffb4
   1ec20:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ec24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ec28:	cmp	r2, r3
   1ec2c:	movcc	r3, #1
   1ec30:	movcs	r3, #0
   1ec34:	uxtb	r3, r3
   1ec38:	str	r3, [fp, #-32]	; 0xffffffe0
   1ec3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec40:	lsl	r3, r3, #2
   1ec44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ec48:	add	r3, r2, r3
   1ec4c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ec50:	str	r2, [r3]
   1ec54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec58:	add	r3, r3, #1
   1ec5c:	str	r3, [fp, #-20]	; 0xffffffec
   1ec60:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ec64:	ldr	r3, [fp, #-16]
   1ec68:	cmp	r2, r3
   1ec6c:	blt	1ebbc <__assert_fail@plt+0xd97c>
   1ec70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ec74:	cmp	r3, #0
   1ec78:	beq	1eca0 <__assert_fail@plt+0xda60>
   1ec7c:	ldr	r3, [fp, #-16]
   1ec80:	add	r2, r3, #1
   1ec84:	str	r2, [fp, #-16]
   1ec88:	lsl	r3, r3, #2
   1ec8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ec90:	add	r3, r2, r3
   1ec94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ec98:	str	r2, [r3]
   1ec9c:	b	1ecb0 <__assert_fail@plt+0xda70>
   1eca0:	ldr	r1, [fp, #-16]
   1eca4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eca8:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1ecac:	str	r0, [fp, #-16]
   1ecb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ecb4:	cmp	r3, #0
   1ecb8:	beq	1ecc8 <__assert_fail@plt+0xda88>
   1ecbc:	ldr	r3, [fp, #-16]
   1ecc0:	rsb	r3, r3, #0
   1ecc4:	b	1eccc <__assert_fail@plt+0xda8c>
   1ecc8:	ldr	r3, [fp, #-16]
   1eccc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ecd0:	str	r3, [r2, #4]
   1ecd4:	sub	sp, fp, #4
   1ecd8:	ldr	fp, [sp]
   1ecdc:	add	sp, sp, #4
   1ece0:	pop	{pc}		; (ldr pc, [sp], #4)
   1ece4:	str	fp, [sp, #-8]!
   1ece8:	str	lr, [sp, #4]
   1ecec:	add	fp, sp, #4
   1ecf0:	sub	sp, sp, #88	; 0x58
   1ecf4:	str	r0, [fp, #-80]	; 0xffffffb0
   1ecf8:	str	r1, [fp, #-84]	; 0xffffffac
   1ecfc:	str	r2, [fp, #-88]	; 0xffffffa8
   1ed00:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ed04:	ldr	r3, [r3, #4]
   1ed08:	cmp	r3, #0
   1ed0c:	rsblt	r3, r3, #0
   1ed10:	str	r3, [fp, #-8]
   1ed14:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ed18:	ldr	r3, [r3, #4]
   1ed1c:	cmp	r3, #0
   1ed20:	rsblt	r3, r3, #0
   1ed24:	str	r3, [fp, #-12]
   1ed28:	ldr	r2, [fp, #-8]
   1ed2c:	ldr	r3, [fp, #-12]
   1ed30:	cmp	r2, r3
   1ed34:	bge	1ed68 <__assert_fail@plt+0xdb28>
   1ed38:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ed3c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ed40:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ed44:	str	r3, [fp, #-84]	; 0xffffffac
   1ed48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ed4c:	str	r3, [fp, #-88]	; 0xffffffa8
   1ed50:	ldr	r3, [fp, #-8]
   1ed54:	str	r3, [fp, #-36]	; 0xffffffdc
   1ed58:	ldr	r3, [fp, #-12]
   1ed5c:	str	r3, [fp, #-8]
   1ed60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ed64:	str	r3, [fp, #-12]
   1ed68:	ldr	r3, [fp, #-12]
   1ed6c:	cmp	r3, #0
   1ed70:	bne	1ed84 <__assert_fail@plt+0xdb44>
   1ed74:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ed78:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ed7c:	bl	18138 <__assert_fail@plt+0x6ef8>
   1ed80:	b	1f07c <__assert_fail@plt+0xde3c>
   1ed84:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ed88:	ldr	r3, [r3, #4]
   1ed8c:	lsr	r3, r3, #31
   1ed90:	uxtb	r3, r3
   1ed94:	str	r3, [fp, #-20]	; 0xffffffec
   1ed98:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ed9c:	ldr	r3, [r3, #4]
   1eda0:	lsr	r3, r3, #31
   1eda4:	uxtb	r3, r3
   1eda8:	str	r3, [fp, #-24]	; 0xffffffe8
   1edac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1edb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edb4:	eor	r3, r3, r2
   1edb8:	str	r3, [fp, #-28]	; 0xffffffe4
   1edbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edc0:	rsb	r3, r3, #0
   1edc4:	str	r3, [fp, #-40]	; 0xffffffd8
   1edc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edcc:	rsb	r3, r3, #0
   1edd0:	str	r3, [fp, #-44]	; 0xffffffd4
   1edd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1edd8:	rsb	r3, r3, #0
   1eddc:	str	r3, [fp, #-48]	; 0xffffffd0
   1ede0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ede4:	ldr	r3, [fp, #-8]
   1ede8:	add	r2, r2, r3
   1edec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1edf0:	ldr	r3, [r3]
   1edf4:	cmp	r2, r3
   1edf8:	ble	1ee1c <__assert_fail@plt+0xdbdc>
   1edfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ee00:	ldr	r3, [fp, #-8]
   1ee04:	add	r3, r2, r3
   1ee08:	mov	r1, r3
   1ee0c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ee10:	bl	17f4c <__assert_fail@plt+0x6d0c>
   1ee14:	mov	r3, r0
   1ee18:	b	1ee24 <__assert_fail@plt+0xdbe4>
   1ee1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ee20:	ldr	r3, [r3, #8]
   1ee24:	str	r3, [fp, #-52]	; 0xffffffcc
   1ee28:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ee2c:	ldr	r3, [r3, #8]
   1ee30:	str	r3, [fp, #-56]	; 0xffffffc8
   1ee34:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ee38:	ldr	r3, [r3, #8]
   1ee3c:	str	r3, [fp, #-60]	; 0xffffffc4
   1ee40:	mov	r3, #0
   1ee44:	str	r3, [fp, #-16]
   1ee48:	ldr	r3, [fp, #-16]
   1ee4c:	lsl	r3, r3, #2
   1ee50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ee54:	add	r3, r2, r3
   1ee58:	ldr	r2, [r3]
   1ee5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ee60:	eor	r3, r3, r2
   1ee64:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ee68:	add	r3, r2, r3
   1ee6c:	str	r3, [fp, #-64]	; 0xffffffc0
   1ee70:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ee74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee78:	cmp	r2, r3
   1ee7c:	movcc	r3, #1
   1ee80:	movcs	r3, #0
   1ee84:	uxtb	r3, r3
   1ee88:	str	r3, [fp, #-20]	; 0xffffffec
   1ee8c:	ldr	r3, [fp, #-16]
   1ee90:	lsl	r3, r3, #2
   1ee94:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ee98:	add	r3, r2, r3
   1ee9c:	ldr	r2, [r3]
   1eea0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eea4:	eor	r3, r3, r2
   1eea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eeac:	add	r3, r2, r3
   1eeb0:	str	r3, [fp, #-68]	; 0xffffffbc
   1eeb4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1eeb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eebc:	cmp	r2, r3
   1eec0:	movcc	r3, #1
   1eec4:	movcs	r3, #0
   1eec8:	uxtb	r3, r3
   1eecc:	str	r3, [fp, #-24]	; 0xffffffe8
   1eed0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1eed4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1eed8:	eor	r2, r2, r3
   1eedc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1eee0:	eor	r3, r3, r2
   1eee4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eee8:	add	r3, r2, r3
   1eeec:	str	r3, [fp, #-72]	; 0xffffffb8
   1eef0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1eef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eef8:	cmp	r2, r3
   1eefc:	movcc	r3, #1
   1ef00:	movcs	r3, #0
   1ef04:	uxtb	r3, r3
   1ef08:	str	r3, [fp, #-28]	; 0xffffffe4
   1ef0c:	ldr	r3, [fp, #-16]
   1ef10:	lsl	r3, r3, #2
   1ef14:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ef18:	add	r3, r2, r3
   1ef1c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ef20:	str	r2, [r3]
   1ef24:	ldr	r3, [fp, #-16]
   1ef28:	add	r3, r3, #1
   1ef2c:	str	r3, [fp, #-16]
   1ef30:	ldr	r2, [fp, #-16]
   1ef34:	ldr	r3, [fp, #-12]
   1ef38:	cmp	r2, r3
   1ef3c:	blt	1ee48 <__assert_fail@plt+0xdc08>
   1ef40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef44:	cmp	r3, #0
   1ef48:	beq	1f008 <__assert_fail@plt+0xddc8>
   1ef4c:	movw	r3, #6932	; 0x1b14
   1ef50:	movt	r3, #4
   1ef54:	movw	r2, #3996	; 0xf9c
   1ef58:	movw	r1, #4700	; 0x125c
   1ef5c:	movt	r1, #4
   1ef60:	movw	r0, #5840	; 0x16d0
   1ef64:	movt	r0, #4
   1ef68:	bl	11240 <__assert_fail@plt>
   1ef6c:	ldr	r3, [fp, #-16]
   1ef70:	lsl	r3, r3, #2
   1ef74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ef78:	add	r3, r2, r3
   1ef7c:	ldr	r2, [r3]
   1ef80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ef84:	eor	r3, r3, r2
   1ef88:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ef8c:	add	r3, r2, r3
   1ef90:	str	r3, [fp, #-64]	; 0xffffffc0
   1ef94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ef98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef9c:	cmp	r2, r3
   1efa0:	movcc	r3, #1
   1efa4:	movcs	r3, #0
   1efa8:	uxtb	r3, r3
   1efac:	str	r3, [fp, #-20]	; 0xffffffec
   1efb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1efb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1efb8:	eor	r3, r3, r2
   1efbc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1efc0:	add	r3, r2, r3
   1efc4:	str	r3, [fp, #-72]	; 0xffffffb8
   1efc8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1efcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1efd0:	cmp	r2, r3
   1efd4:	movcc	r3, #1
   1efd8:	movcs	r3, #0
   1efdc:	uxtb	r3, r3
   1efe0:	str	r3, [fp, #-28]	; 0xffffffe4
   1efe4:	ldr	r3, [fp, #-16]
   1efe8:	lsl	r3, r3, #2
   1efec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1eff0:	add	r3, r2, r3
   1eff4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1eff8:	str	r2, [r3]
   1effc:	ldr	r3, [fp, #-16]
   1f000:	add	r3, r3, #1
   1f004:	str	r3, [fp, #-16]
   1f008:	ldr	r2, [fp, #-16]
   1f00c:	ldr	r3, [fp, #-8]
   1f010:	cmp	r2, r3
   1f014:	blt	1ef6c <__assert_fail@plt+0xdd2c>
   1f018:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f01c:	cmp	r3, #0
   1f020:	beq	1f048 <__assert_fail@plt+0xde08>
   1f024:	ldr	r3, [fp, #-8]
   1f028:	add	r2, r3, #1
   1f02c:	str	r2, [fp, #-8]
   1f030:	lsl	r3, r3, #2
   1f034:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f038:	add	r3, r2, r3
   1f03c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f040:	str	r2, [r3]
   1f044:	b	1f058 <__assert_fail@plt+0xde18>
   1f048:	ldr	r1, [fp, #-8]
   1f04c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f050:	bl	13ddc <__assert_fail@plt+0x2b9c>
   1f054:	str	r0, [fp, #-8]
   1f058:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f05c:	cmp	r3, #0
   1f060:	beq	1f070 <__assert_fail@plt+0xde30>
   1f064:	ldr	r3, [fp, #-8]
   1f068:	rsb	r3, r3, #0
   1f06c:	b	1f074 <__assert_fail@plt+0xde34>
   1f070:	ldr	r3, [fp, #-8]
   1f074:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1f078:	str	r3, [r2, #4]
   1f07c:	sub	sp, fp, #4
   1f080:	ldr	fp, [sp]
   1f084:	add	sp, sp, #4
   1f088:	pop	{pc}		; (ldr pc, [sp], #4)
   1f08c:	push	{fp}		; (str fp, [sp, #-4]!)
   1f090:	add	fp, sp, #0
   1f094:	sub	sp, sp, #28
   1f098:	str	r0, [fp, #-24]	; 0xffffffe8
   1f09c:	mov	r3, #16
   1f0a0:	str	r3, [fp, #-12]
   1f0a4:	mov	r3, #0
   1f0a8:	str	r3, [fp, #-8]
   1f0ac:	b	1f158 <__assert_fail@plt+0xdf18>
   1f0b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0b4:	lsr	r2, r3, #1
   1f0b8:	movw	r3, #21845	; 0x5555
   1f0bc:	and	r3, r3, r2
   1f0c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f0c4:	sub	r3, r2, r3
   1f0c8:	str	r3, [fp, #-16]
   1f0cc:	ldr	r3, [fp, #-16]
   1f0d0:	lsr	r3, r3, #2
   1f0d4:	movw	r2, #13107	; 0x3333
   1f0d8:	and	r2, r2, r3
   1f0dc:	ldr	r1, [fp, #-16]
   1f0e0:	movw	r3, #13107	; 0x3333
   1f0e4:	and	r3, r3, r1
   1f0e8:	add	r3, r2, r3
   1f0ec:	str	r3, [fp, #-16]
   1f0f0:	ldr	r3, [fp, #-16]
   1f0f4:	lsr	r3, r3, #4
   1f0f8:	ldr	r2, [fp, #-16]
   1f0fc:	add	r3, r2, r3
   1f100:	str	r3, [fp, #-16]
   1f104:	ldr	r3, [fp, #-16]
   1f108:	lsr	r3, r3, #8
   1f10c:	and	r2, r3, #15
   1f110:	ldr	r3, [fp, #-16]
   1f114:	and	r3, r3, #15
   1f118:	add	r3, r2, r3
   1f11c:	str	r3, [fp, #-16]
   1f120:	ldr	r2, [fp, #-8]
   1f124:	ldr	r3, [fp, #-16]
   1f128:	add	r3, r2, r3
   1f12c:	str	r3, [fp, #-8]
   1f130:	ldr	r3, [fp, #-12]
   1f134:	cmp	r3, #31
   1f138:	bhi	1f150 <__assert_fail@plt+0xdf10>
   1f13c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f140:	ldr	r3, [fp, #-12]
   1f144:	lsr	r3, r2, r3
   1f148:	str	r3, [fp, #-24]	; 0xffffffe8
   1f14c:	b	1f158 <__assert_fail@plt+0xdf18>
   1f150:	mov	r3, #0
   1f154:	str	r3, [fp, #-24]	; 0xffffffe8
   1f158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f15c:	cmp	r3, #0
   1f160:	bne	1f0b0 <__assert_fail@plt+0xde70>
   1f164:	ldr	r3, [fp, #-8]
   1f168:	mov	r0, r3
   1f16c:	add	sp, fp, #0
   1f170:	pop	{fp}		; (ldr fp, [sp], #4)
   1f174:	bx	lr
   1f178:	str	fp, [sp, #-8]!
   1f17c:	str	lr, [sp, #4]
   1f180:	add	fp, sp, #4
   1f184:	sub	sp, sp, #16
   1f188:	str	r0, [fp, #-16]
   1f18c:	str	r1, [fp, #-20]	; 0xffffffec
   1f190:	mov	r3, #0
   1f194:	str	r3, [fp, #-12]
   1f198:	mov	r3, #0
   1f19c:	str	r3, [fp, #-8]
   1f1a0:	b	1f1dc <__assert_fail@plt+0xdf9c>
   1f1a4:	ldr	r3, [fp, #-8]
   1f1a8:	lsl	r3, r3, #2
   1f1ac:	ldr	r2, [fp, #-16]
   1f1b0:	add	r3, r2, r3
   1f1b4:	ldr	r3, [r3]
   1f1b8:	mov	r0, r3
   1f1bc:	bl	1f08c <__assert_fail@plt+0xde4c>
   1f1c0:	mov	r2, r0
   1f1c4:	ldr	r3, [fp, #-12]
   1f1c8:	add	r3, r3, r2
   1f1cc:	str	r3, [fp, #-12]
   1f1d0:	ldr	r3, [fp, #-8]
   1f1d4:	add	r3, r3, #1
   1f1d8:	str	r3, [fp, #-8]
   1f1dc:	ldr	r2, [fp, #-8]
   1f1e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f1e4:	cmp	r2, r3
   1f1e8:	blt	1f1a4 <__assert_fail@plt+0xdf64>
   1f1ec:	ldr	r3, [fp, #-12]
   1f1f0:	mov	r0, r3
   1f1f4:	sub	sp, fp, #4
   1f1f8:	ldr	fp, [sp]
   1f1fc:	add	sp, sp, #4
   1f200:	pop	{pc}		; (ldr pc, [sp], #4)
   1f204:	str	fp, [sp, #-8]!
   1f208:	str	lr, [sp, #4]
   1f20c:	add	fp, sp, #4
   1f210:	sub	sp, sp, #16
   1f214:	str	r0, [fp, #-16]
   1f218:	ldr	r3, [fp, #-16]
   1f21c:	ldr	r3, [r3, #4]
   1f220:	str	r3, [fp, #-8]
   1f224:	ldr	r3, [fp, #-8]
   1f228:	cmp	r3, #0
   1f22c:	bge	1f238 <__assert_fail@plt+0xdff8>
   1f230:	mvn	r3, #0
   1f234:	b	1f250 <__assert_fail@plt+0xe010>
   1f238:	ldr	r3, [fp, #-16]
   1f23c:	ldr	r3, [r3, #8]
   1f240:	ldr	r1, [fp, #-8]
   1f244:	mov	r0, r3
   1f248:	bl	1f178 <__assert_fail@plt+0xdf38>
   1f24c:	mov	r3, r0
   1f250:	mov	r0, r3
   1f254:	sub	sp, fp, #4
   1f258:	ldr	fp, [sp]
   1f25c:	add	sp, sp, #4
   1f260:	pop	{pc}		; (ldr pc, [sp], #4)
   1f264:	str	fp, [sp, #-8]!
   1f268:	str	lr, [sp, #4]
   1f26c:	add	fp, sp, #4
   1f270:	sub	sp, sp, #64	; 0x40
   1f274:	str	r0, [fp, #-64]	; 0xffffffc0
   1f278:	str	r1, [fp, #-68]	; 0xffffffbc
   1f27c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f280:	ldr	r3, [r3, #4]
   1f284:	str	r3, [fp, #-8]
   1f288:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f28c:	ldr	r3, [r3, #4]
   1f290:	str	r3, [fp, #-12]
   1f294:	ldr	r2, [fp, #-8]
   1f298:	ldr	r3, [fp, #-12]
   1f29c:	eor	r3, r3, r2
   1f2a0:	cmp	r3, #0
   1f2a4:	bge	1f2b0 <__assert_fail@plt+0xe070>
   1f2a8:	mvn	r3, #0
   1f2ac:	b	1f50c <__assert_fail@plt+0xe2cc>
   1f2b0:	ldr	r3, [fp, #-8]
   1f2b4:	lsr	r3, r3, #31
   1f2b8:	uxtb	r3, r3
   1f2bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1f2c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f2c4:	str	r3, [fp, #-20]	; 0xffffffec
   1f2c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f2cc:	rsb	r3, r3, #0
   1f2d0:	str	r3, [fp, #-40]	; 0xffffffd8
   1f2d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f2d8:	cmp	r3, #0
   1f2dc:	beq	1f324 <__assert_fail@plt+0xe0e4>
   1f2e0:	ldr	r3, [fp, #-12]
   1f2e4:	cmp	r3, #0
   1f2e8:	blt	1f30c <__assert_fail@plt+0xe0cc>
   1f2ec:	movw	r3, #6940	; 0x1b1c
   1f2f0:	movt	r3, #4
   1f2f4:	movw	r2, #4079	; 0xfef
   1f2f8:	movw	r1, #4700	; 0x125c
   1f2fc:	movt	r1, #4
   1f300:	movw	r0, #5848	; 0x16d8
   1f304:	movt	r0, #4
   1f308:	bl	11240 <__assert_fail@plt>
   1f30c:	ldr	r3, [fp, #-8]
   1f310:	rsb	r3, r3, #0
   1f314:	str	r3, [fp, #-8]
   1f318:	ldr	r3, [fp, #-12]
   1f31c:	rsb	r3, r3, #0
   1f320:	str	r3, [fp, #-12]
   1f324:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f328:	ldr	r3, [r3, #8]
   1f32c:	str	r3, [fp, #-28]	; 0xffffffe4
   1f330:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f334:	ldr	r3, [r3, #8]
   1f338:	str	r3, [fp, #-32]	; 0xffffffe0
   1f33c:	ldr	r2, [fp, #-8]
   1f340:	ldr	r3, [fp, #-12]
   1f344:	cmp	r2, r3
   1f348:	bge	1f37c <__assert_fail@plt+0xe13c>
   1f34c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f350:	str	r3, [fp, #-44]	; 0xffffffd4
   1f354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f358:	str	r3, [fp, #-28]	; 0xffffffe4
   1f35c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f360:	str	r3, [fp, #-32]	; 0xffffffe0
   1f364:	ldr	r3, [fp, #-8]
   1f368:	str	r3, [fp, #-48]	; 0xffffffd0
   1f36c:	ldr	r3, [fp, #-12]
   1f370:	str	r3, [fp, #-8]
   1f374:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f378:	str	r3, [fp, #-12]
   1f37c:	mov	r3, #0
   1f380:	str	r3, [fp, #-16]
   1f384:	mov	r3, #0
   1f388:	str	r3, [fp, #-36]	; 0xffffffdc
   1f38c:	b	1f448 <__assert_fail@plt+0xe208>
   1f390:	ldr	r3, [fp, #-16]
   1f394:	lsl	r3, r3, #2
   1f398:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f39c:	add	r3, r2, r3
   1f3a0:	ldr	r2, [r3]
   1f3a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f3a8:	eor	r3, r3, r2
   1f3ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f3b0:	add	r3, r2, r3
   1f3b4:	str	r3, [fp, #-52]	; 0xffffffcc
   1f3b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f3bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f3c0:	cmp	r2, r3
   1f3c4:	movcc	r3, #1
   1f3c8:	movcs	r3, #0
   1f3cc:	uxtb	r3, r3
   1f3d0:	str	r3, [fp, #-20]	; 0xffffffec
   1f3d4:	ldr	r3, [fp, #-16]
   1f3d8:	lsl	r3, r3, #2
   1f3dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f3e0:	add	r3, r2, r3
   1f3e4:	ldr	r2, [r3]
   1f3e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f3ec:	eor	r3, r3, r2
   1f3f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3f4:	add	r3, r2, r3
   1f3f8:	str	r3, [fp, #-56]	; 0xffffffc8
   1f3fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f400:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f404:	cmp	r2, r3
   1f408:	movcc	r3, #1
   1f40c:	movcs	r3, #0
   1f410:	uxtb	r3, r3
   1f414:	str	r3, [fp, #-24]	; 0xffffffe8
   1f418:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f41c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f420:	eor	r3, r3, r2
   1f424:	mov	r0, r3
   1f428:	bl	1f08c <__assert_fail@plt+0xde4c>
   1f42c:	mov	r2, r0
   1f430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f434:	add	r3, r3, r2
   1f438:	str	r3, [fp, #-36]	; 0xffffffdc
   1f43c:	ldr	r3, [fp, #-16]
   1f440:	add	r3, r3, #1
   1f444:	str	r3, [fp, #-16]
   1f448:	ldr	r2, [fp, #-16]
   1f44c:	ldr	r3, [fp, #-12]
   1f450:	cmp	r2, r3
   1f454:	blt	1f390 <__assert_fail@plt+0xe150>
   1f458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f45c:	cmp	r3, #0
   1f460:	beq	1f4f8 <__assert_fail@plt+0xe2b8>
   1f464:	movw	r3, #6940	; 0x1b1c
   1f468:	movt	r3, #4
   1f46c:	movw	r2, #4100	; 0x1004
   1f470:	movw	r1, #4700	; 0x125c
   1f474:	movt	r1, #4
   1f478:	movw	r0, #5840	; 0x16d0
   1f47c:	movt	r0, #4
   1f480:	bl	11240 <__assert_fail@plt>
   1f484:	ldr	r3, [fp, #-16]
   1f488:	lsl	r3, r3, #2
   1f48c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f490:	add	r3, r2, r3
   1f494:	ldr	r2, [r3]
   1f498:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f49c:	eor	r3, r3, r2
   1f4a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f4a4:	add	r3, r2, r3
   1f4a8:	str	r3, [fp, #-52]	; 0xffffffcc
   1f4ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f4b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f4b4:	cmp	r2, r3
   1f4b8:	movcc	r3, #1
   1f4bc:	movcs	r3, #0
   1f4c0:	uxtb	r3, r3
   1f4c4:	str	r3, [fp, #-20]	; 0xffffffec
   1f4c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f4cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f4d0:	eor	r3, r3, r2
   1f4d4:	mov	r0, r3
   1f4d8:	bl	1f08c <__assert_fail@plt+0xde4c>
   1f4dc:	mov	r2, r0
   1f4e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f4e4:	add	r3, r3, r2
   1f4e8:	str	r3, [fp, #-36]	; 0xffffffdc
   1f4ec:	ldr	r3, [fp, #-16]
   1f4f0:	add	r3, r3, #1
   1f4f4:	str	r3, [fp, #-16]
   1f4f8:	ldr	r2, [fp, #-16]
   1f4fc:	ldr	r3, [fp, #-8]
   1f500:	cmp	r2, r3
   1f504:	blt	1f484 <__assert_fail@plt+0xe244>
   1f508:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f50c:	mov	r0, r3
   1f510:	sub	sp, fp, #4
   1f514:	ldr	fp, [sp]
   1f518:	add	sp, sp, #4
   1f51c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f520:	str	fp, [sp, #-8]!
   1f524:	str	lr, [sp, #4]
   1f528:	add	fp, sp, #4
   1f52c:	sub	sp, sp, #40	; 0x28
   1f530:	str	r0, [fp, #-32]	; 0xffffffe0
   1f534:	str	r1, [fp, #-36]	; 0xffffffdc
   1f538:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f53c:	ldr	r3, [r3, #4]
   1f540:	str	r3, [fp, #-16]
   1f544:	ldr	r3, [fp, #-16]
   1f548:	cmp	r3, #0
   1f54c:	rsblt	r3, r3, #0
   1f550:	str	r3, [fp, #-20]	; 0xffffffec
   1f554:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f558:	lsr	r3, r3, #5
   1f55c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f560:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f564:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f568:	cmp	r2, r3
   1f56c:	blt	1f58c <__assert_fail@plt+0xe34c>
   1f570:	ldr	r3, [fp, #-16]
   1f574:	cmp	r3, #0
   1f578:	bge	1f584 <__assert_fail@plt+0xe344>
   1f57c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f580:	b	1f654 <__assert_fail@plt+0xe414>
   1f584:	mvn	r3, #0
   1f588:	b	1f654 <__assert_fail@plt+0xe414>
   1f58c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f590:	ldr	r3, [r3, #8]
   1f594:	str	r3, [fp, #-28]	; 0xffffffe4
   1f598:	mov	r3, #0
   1f59c:	str	r3, [fp, #-12]
   1f5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f5a4:	lsl	r3, r3, #2
   1f5a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f5ac:	add	r3, r2, r3
   1f5b0:	ldr	r3, [r3]
   1f5b4:	str	r3, [fp, #-8]
   1f5b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f5bc:	cmp	r3, #0
   1f5c0:	beq	1f634 <__assert_fail@plt+0xe3f4>
   1f5c4:	ldr	r3, [fp, #-16]
   1f5c8:	cmp	r3, #0
   1f5cc:	bge	1f618 <__assert_fail@plt+0xe3d8>
   1f5d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f5d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f5d8:	bl	13e40 <__assert_fail@plt+0x2c00>
   1f5dc:	mov	r3, r0
   1f5e0:	str	r3, [fp, #-12]
   1f5e4:	ldr	r2, [fp, #-12]
   1f5e8:	ldr	r3, [fp, #-8]
   1f5ec:	sub	r3, r2, r3
   1f5f0:	sub	r3, r3, #1
   1f5f4:	str	r3, [fp, #-8]
   1f5f8:	ldr	r2, [fp, #-8]
   1f5fc:	ldr	r3, [fp, #-12]
   1f600:	cmp	r2, r3
   1f604:	movcs	r3, #1
   1f608:	movcc	r3, #0
   1f60c:	uxtb	r3, r3
   1f610:	rsb	r3, r3, #0
   1f614:	str	r3, [fp, #-12]
   1f618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f61c:	and	r3, r3, #31
   1f620:	mvn	r2, #0
   1f624:	lsl	r3, r2, r3
   1f628:	ldr	r2, [fp, #-8]
   1f62c:	and	r3, r3, r2
   1f630:	str	r3, [fp, #-8]
   1f634:	ldr	r3, [fp, #-12]
   1f638:	str	r3, [sp]
   1f63c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f640:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f648:	ldr	r0, [fp, #-8]
   1f64c:	bl	15010 <__assert_fail@plt+0x3dd0>
   1f650:	mov	r3, r0
   1f654:	mov	r0, r3
   1f658:	sub	sp, fp, #4
   1f65c:	ldr	fp, [sp]
   1f660:	add	sp, sp, #4
   1f664:	pop	{pc}		; (ldr pc, [sp], #4)
   1f668:	str	fp, [sp, #-8]!
   1f66c:	str	lr, [sp, #4]
   1f670:	add	fp, sp, #4
   1f674:	sub	sp, sp, #40	; 0x28
   1f678:	str	r0, [fp, #-32]	; 0xffffffe0
   1f67c:	str	r1, [fp, #-36]	; 0xffffffdc
   1f680:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f684:	ldr	r3, [r3, #4]
   1f688:	str	r3, [fp, #-12]
   1f68c:	ldr	r3, [fp, #-12]
   1f690:	mvn	r3, r3
   1f694:	lsr	r3, r3, #31
   1f698:	uxtb	r3, r3
   1f69c:	rsb	r3, r3, #0
   1f6a0:	str	r3, [fp, #-16]
   1f6a4:	ldr	r3, [fp, #-12]
   1f6a8:	cmp	r3, #0
   1f6ac:	rsblt	r3, r3, #0
   1f6b0:	str	r3, [fp, #-20]	; 0xffffffec
   1f6b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f6b8:	lsr	r3, r3, #5
   1f6bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1f6c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6c8:	cmp	r2, r3
   1f6cc:	blt	1f6ec <__assert_fail@plt+0xe4ac>
   1f6d0:	ldr	r3, [fp, #-16]
   1f6d4:	cmp	r3, #0
   1f6d8:	beq	1f6e4 <__assert_fail@plt+0xe4a4>
   1f6dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f6e0:	b	1f780 <__assert_fail@plt+0xe540>
   1f6e4:	mvn	r3, #0
   1f6e8:	b	1f780 <__assert_fail@plt+0xe540>
   1f6ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6f0:	ldr	r3, [r3, #8]
   1f6f4:	str	r3, [fp, #-28]	; 0xffffffe4
   1f6f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f6fc:	lsl	r3, r3, #2
   1f700:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f704:	add	r3, r2, r3
   1f708:	ldr	r3, [r3]
   1f70c:	ldr	r2, [fp, #-16]
   1f710:	eor	r3, r3, r2
   1f714:	str	r3, [fp, #-8]
   1f718:	ldr	r3, [fp, #-16]
   1f71c:	cmp	r3, #0
   1f720:	bne	1f744 <__assert_fail@plt+0xe504>
   1f724:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f728:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f72c:	bl	13e40 <__assert_fail@plt+0x2c00>
   1f730:	mov	r3, r0
   1f734:	mov	r2, r3
   1f738:	ldr	r3, [fp, #-8]
   1f73c:	sub	r3, r3, r2
   1f740:	str	r3, [fp, #-8]
   1f744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f748:	and	r3, r3, #31
   1f74c:	mvn	r2, #0
   1f750:	lsl	r3, r2, r3
   1f754:	ldr	r2, [fp, #-8]
   1f758:	and	r3, r3, r2
   1f75c:	str	r3, [fp, #-8]
   1f760:	ldr	r3, [fp, #-16]
   1f764:	str	r3, [sp]
   1f768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f76c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f774:	ldr	r0, [fp, #-8]
   1f778:	bl	15010 <__assert_fail@plt+0x3dd0>
   1f77c:	mov	r3, r0
   1f780:	mov	r0, r3
   1f784:	sub	sp, fp, #4
   1f788:	ldr	fp, [sp]
   1f78c:	add	sp, sp, #4
   1f790:	pop	{pc}		; (ldr pc, [sp], #4)
   1f794:	str	r4, [sp, #-12]!
   1f798:	str	fp, [sp, #4]
   1f79c:	str	lr, [sp, #8]
   1f7a0:	add	fp, sp, #8
   1f7a4:	sub	sp, sp, #52	; 0x34
   1f7a8:	str	r0, [fp, #-56]	; 0xffffffc8
   1f7ac:	str	r1, [fp, #-60]	; 0xffffffc4
   1f7b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f7b4:	cmp	r3, #1
   1f7b8:	bgt	1f7dc <__assert_fail@plt+0xe59c>
   1f7bc:	movw	r3, #6952	; 0x1b28
   1f7c0:	movt	r3, #4
   1f7c4:	movw	r2, #4191	; 0x105f
   1f7c8:	movw	r1, #4700	; 0x125c
   1f7cc:	movt	r1, #4
   1f7d0:	movw	r0, #5856	; 0x16e0
   1f7d4:	movt	r0, #4
   1f7d8:	bl	11240 <__assert_fail@plt>
   1f7dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f7e0:	cmp	r3, #62	; 0x3e
   1f7e4:	ble	1f808 <__assert_fail@plt+0xe5c8>
   1f7e8:	movw	r3, #6952	; 0x1b28
   1f7ec:	movt	r3, #4
   1f7f0:	movw	r2, #4192	; 0x1060
   1f7f4:	movw	r1, #4700	; 0x125c
   1f7f8:	movt	r1, #4
   1f7fc:	movw	r0, #5868	; 0x16ec
   1f800:	movt	r0, #4
   1f804:	bl	11240 <__assert_fail@plt>
   1f808:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f80c:	ldr	r3, [r3, #4]
   1f810:	cmp	r3, #0
   1f814:	rsblt	r3, r3, #0
   1f818:	str	r3, [fp, #-24]	; 0xffffffe8
   1f81c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f820:	cmp	r3, #0
   1f824:	bne	1f830 <__assert_fail@plt+0xe5f0>
   1f828:	mov	r3, #1
   1f82c:	b	1fa18 <__assert_fail@plt+0xe7d8>
   1f830:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f834:	ldr	r3, [r3, #8]
   1f838:	str	r3, [fp, #-28]	; 0xffffffe4
   1f83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f840:	sub	r3, r3, #1
   1f844:	lsl	r4, r3, #5
   1f848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f84c:	sub	r3, r3, #-1073741823	; 0xc0000001
   1f850:	lsl	r3, r3, #2
   1f854:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f858:	add	r3, r2, r3
   1f85c:	ldr	r3, [r3]
   1f860:	mov	r0, r3
   1f864:	bl	171a4 <__assert_fail@plt+0x5f64>
   1f868:	mov	r3, r0
   1f86c:	add	r3, r4, r3
   1f870:	str	r3, [fp, #-32]	; 0xffffffe0
   1f874:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f878:	sub	r3, r3, #2
   1f87c:	cmp	r3, #30
   1f880:	ldrls	pc, [pc, r3, lsl #2]
   1f884:	b	1f964 <__assert_fail@plt+0xe724>
   1f888:	andeq	pc, r1, r4, lsl #18
   1f88c:	andeq	pc, r1, r4, ror #18
   1f890:	andeq	pc, r1, ip, lsl #18
   1f894:	andeq	pc, r1, r4, ror #18
   1f898:	andeq	pc, r1, r4, ror #18
   1f89c:	andeq	pc, r1, r4, ror #18
   1f8a0:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   1f8a4:	andeq	pc, r1, r4, ror #18
   1f8a8:	andeq	pc, r1, r4, ror #18
   1f8ac:	andeq	pc, r1, r4, ror #18
   1f8b0:	andeq	pc, r1, r4, ror #18
   1f8b4:	andeq	pc, r1, r4, ror #18
   1f8b8:	andeq	pc, r1, r4, ror #18
   1f8bc:	andeq	pc, r1, r4, ror #18
   1f8c0:	andeq	pc, r1, r8, lsr r9	; <UNPREDICTABLE>
   1f8c4:	andeq	pc, r1, r4, ror #18
   1f8c8:	andeq	pc, r1, r4, ror #18
   1f8cc:	andeq	pc, r1, r4, ror #18
   1f8d0:	andeq	pc, r1, r4, ror #18
   1f8d4:	andeq	pc, r1, r4, ror #18
   1f8d8:	andeq	pc, r1, r4, ror #18
   1f8dc:	andeq	pc, r1, r4, ror #18
   1f8e0:	andeq	pc, r1, r4, ror #18
   1f8e4:	andeq	pc, r1, r4, ror #18
   1f8e8:	andeq	pc, r1, r4, ror #18
   1f8ec:	andeq	pc, r1, r4, ror #18
   1f8f0:	andeq	pc, r1, r4, ror #18
   1f8f4:	andeq	pc, r1, r4, ror #18
   1f8f8:	andeq	pc, r1, r4, ror #18
   1f8fc:	andeq	pc, r1, r4, ror #18
   1f900:	andeq	pc, r1, r8, asr #18
   1f904:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f908:	b	1fa18 <__assert_fail@plt+0xe7d8>
   1f90c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f910:	add	r3, r3, #1
   1f914:	lsr	r3, r3, #1
   1f918:	b	1fa18 <__assert_fail@plt+0xe7d8>
   1f91c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f920:	add	r2, r3, #2
   1f924:	movw	r3, #43691	; 0xaaab
   1f928:	movt	r3, #43690	; 0xaaaa
   1f92c:	umull	r2, r3, r3, r2
   1f930:	lsr	r3, r3, #1
   1f934:	b	1fa18 <__assert_fail@plt+0xe7d8>
   1f938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f93c:	add	r3, r3, #3
   1f940:	lsr	r3, r3, #2
   1f944:	b	1fa18 <__assert_fail@plt+0xe7d8>
   1f948:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f94c:	add	r2, r3, #4
   1f950:	movw	r3, #52429	; 0xcccd
   1f954:	movt	r3, #52428	; 0xcccc
   1f958:	umull	r2, r3, r3, r2
   1f95c:	lsr	r3, r3, #2
   1f960:	b	1fa18 <__assert_fail@plt+0xe7d8>
   1f964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f968:	bl	13ab0 <__assert_fail@plt+0x2870>
   1f96c:	str	r0, [fp, #-36]	; 0xffffffdc
   1f970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f97c:	bl	13bc8 <__assert_fail@plt+0x2988>
   1f980:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f984:	sub	r3, fp, #52	; 0x34
   1f988:	mov	r1, r2
   1f98c:	mov	r0, r3
   1f990:	bl	157e4 <__assert_fail@plt+0x45a4>
   1f994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f998:	str	r3, [fp, #-16]
   1f99c:	mov	r3, #0
   1f9a0:	str	r3, [fp, #-20]	; 0xffffffec
   1f9a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f9a8:	add	r3, r3, #1
   1f9ac:	str	r3, [fp, #-20]	; 0xffffffec
   1f9b0:	sub	r3, fp, #52	; 0x34
   1f9b4:	ldr	r2, [fp, #-16]
   1f9b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f9bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f9c0:	bl	15c98 <__assert_fail@plt+0x4a58>
   1f9c4:	ldr	r3, [fp, #-16]
   1f9c8:	sub	r3, r3, #-1073741823	; 0xc0000001
   1f9cc:	lsl	r3, r3, #2
   1f9d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f9d4:	add	r3, r2, r3
   1f9d8:	ldr	r3, [r3]
   1f9dc:	cmp	r3, #0
   1f9e0:	moveq	r3, #1
   1f9e4:	movne	r3, #0
   1f9e8:	uxtb	r3, r3
   1f9ec:	mov	r2, r3
   1f9f0:	ldr	r3, [fp, #-16]
   1f9f4:	sub	r3, r3, r2
   1f9f8:	str	r3, [fp, #-16]
   1f9fc:	ldr	r3, [fp, #-16]
   1fa00:	cmp	r3, #0
   1fa04:	bgt	1f9a4 <__assert_fail@plt+0xe764>
   1fa08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fa0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fa10:	bl	13b7c <__assert_fail@plt+0x293c>
   1fa14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa18:	mov	r0, r3
   1fa1c:	sub	sp, fp, #8
   1fa20:	ldr	r4, [sp]
   1fa24:	ldr	fp, [sp, #4]
   1fa28:	add	sp, sp, #8
   1fa2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1fa30:	str	fp, [sp, #-8]!
   1fa34:	str	lr, [sp, #4]
   1fa38:	add	fp, sp, #4
   1fa3c:	sub	sp, sp, #64	; 0x40
   1fa40:	str	r0, [fp, #-48]	; 0xffffffd0
   1fa44:	str	r1, [fp, #-52]	; 0xffffffcc
   1fa48:	str	r2, [fp, #-56]	; 0xffffffc8
   1fa4c:	movw	r3, #5880	; 0x16f8
   1fa50:	movt	r3, #4
   1fa54:	str	r3, [fp, #-8]
   1fa58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fa5c:	cmp	r3, #1
   1fa60:	ble	1fa94 <__assert_fail@plt+0xe854>
   1fa64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fa68:	cmp	r3, #36	; 0x24
   1fa6c:	bgt	1fa80 <__assert_fail@plt+0xe840>
   1fa70:	movw	r3, #5944	; 0x1738
   1fa74:	movt	r3, #4
   1fa78:	str	r3, [fp, #-8]
   1fa7c:	b	1facc <__assert_fail@plt+0xe88c>
   1fa80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fa84:	cmp	r3, #62	; 0x3e
   1fa88:	ble	1facc <__assert_fail@plt+0xe88c>
   1fa8c:	mov	r3, #0
   1fa90:	b	1fd04 <__assert_fail@plt+0xeac4>
   1fa94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fa98:	cmn	r3, #1
   1fa9c:	blt	1faac <__assert_fail@plt+0xe86c>
   1faa0:	mov	r3, #10
   1faa4:	str	r3, [fp, #-52]	; 0xffffffcc
   1faa8:	b	1facc <__assert_fail@plt+0xe88c>
   1faac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fab0:	rsb	r3, r3, #0
   1fab4:	str	r3, [fp, #-52]	; 0xffffffcc
   1fab8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fabc:	cmp	r3, #36	; 0x24
   1fac0:	ble	1facc <__assert_fail@plt+0xe88c>
   1fac4:	mov	r3, #0
   1fac8:	b	1fd04 <__assert_fail@plt+0xeac4>
   1facc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fad0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fad4:	bl	1f794 <__assert_fail@plt+0xe554>
   1fad8:	mov	r3, r0
   1fadc:	add	r3, r3, #1
   1fae0:	str	r3, [fp, #-16]
   1fae4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fae8:	cmp	r3, #0
   1faec:	bne	1fb18 <__assert_fail@plt+0xe8d8>
   1faf0:	ldr	r3, [fp, #-16]
   1faf4:	add	r3, r3, #1
   1faf8:	str	r3, [fp, #-20]	; 0xffffffec
   1fafc:	movw	r3, #12584	; 0x3128
   1fb00:	movt	r3, #5
   1fb04:	ldr	r3, [r3]
   1fb08:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb0c:	blx	r3
   1fb10:	str	r0, [fp, #-48]	; 0xffffffd0
   1fb14:	b	1fb20 <__assert_fail@plt+0xe8e0>
   1fb18:	mov	r3, #0
   1fb1c:	str	r3, [fp, #-20]	; 0xffffffec
   1fb20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fb24:	ldr	r3, [r3, #4]
   1fb28:	cmp	r3, #0
   1fb2c:	rsblt	r3, r3, #0
   1fb30:	str	r3, [fp, #-24]	; 0xffffffe8
   1fb34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fb38:	cmp	r3, #0
   1fb3c:	bne	1fb58 <__assert_fail@plt+0xe918>
   1fb40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fb44:	mov	r2, #48	; 0x30
   1fb48:	strb	r2, [r3]
   1fb4c:	mov	r3, #1
   1fb50:	str	r3, [fp, #-16]
   1fb54:	b	1fca8 <__assert_fail@plt+0xea68>
   1fb58:	mov	r3, #0
   1fb5c:	str	r3, [fp, #-12]
   1fb60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fb64:	ldr	r3, [r3, #4]
   1fb68:	cmp	r3, #0
   1fb6c:	bge	1fb8c <__assert_fail@plt+0xe94c>
   1fb70:	ldr	r3, [fp, #-12]
   1fb74:	add	r2, r3, #1
   1fb78:	str	r2, [fp, #-12]
   1fb7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1fb80:	add	r3, r2, r3
   1fb84:	mov	r2, #45	; 0x2d
   1fb88:	strb	r2, [r3]
   1fb8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fb90:	mov	r0, r3
   1fb94:	bl	17030 <__assert_fail@plt+0x5df0>
   1fb98:	str	r0, [fp, #-28]	; 0xffffffe4
   1fb9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fba0:	cmp	r3, #0
   1fba4:	beq	1fbdc <__assert_fail@plt+0xe99c>
   1fba8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1fbac:	ldr	r3, [fp, #-12]
   1fbb0:	add	r0, r2, r3
   1fbb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fbb8:	ldr	r2, [r3, #8]
   1fbbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fbc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fbc4:	bl	17284 <__assert_fail@plt+0x6044>
   1fbc8:	mov	r2, r0
   1fbcc:	ldr	r3, [fp, #-12]
   1fbd0:	add	r3, r3, r2
   1fbd4:	str	r3, [fp, #-16]
   1fbd8:	b	1fc94 <__assert_fail@plt+0xea54>
   1fbdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1fbe0:	sub	r3, fp, #40	; 0x28
   1fbe4:	mov	r1, r2
   1fbe8:	mov	r0, r3
   1fbec:	bl	17118 <__assert_fail@plt+0x5ed8>
   1fbf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fbf4:	bl	13ab0 <__assert_fail@plt+0x2870>
   1fbf8:	str	r0, [fp, #-32]	; 0xffffffe0
   1fbfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fc00:	ldr	r3, [r3, #8]
   1fc04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fc08:	mov	r1, r3
   1fc0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc10:	bl	13bc8 <__assert_fail@plt+0x2988>
   1fc14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1fc18:	ldr	r3, [fp, #-12]
   1fc1c:	add	r0, r2, r3
   1fc20:	sub	r2, fp, #40	; 0x28
   1fc24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fc28:	str	r3, [sp]
   1fc2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fc34:	bl	176f0 <__assert_fail@plt+0x64b0>
   1fc38:	mov	r2, r0
   1fc3c:	ldr	r3, [fp, #-12]
   1fc40:	add	r3, r3, r2
   1fc44:	str	r3, [fp, #-16]
   1fc48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fc4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc50:	bl	13b7c <__assert_fail@plt+0x293c>
   1fc54:	b	1fc94 <__assert_fail@plt+0xea54>
   1fc58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1fc5c:	ldr	r3, [fp, #-12]
   1fc60:	add	r3, r2, r3
   1fc64:	ldrb	r3, [r3]
   1fc68:	mov	r2, r3
   1fc6c:	ldr	r3, [fp, #-8]
   1fc70:	add	r2, r3, r2
   1fc74:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1fc78:	ldr	r3, [fp, #-12]
   1fc7c:	add	r3, r1, r3
   1fc80:	ldrb	r2, [r2]
   1fc84:	strb	r2, [r3]
   1fc88:	ldr	r3, [fp, #-12]
   1fc8c:	add	r3, r3, #1
   1fc90:	str	r3, [fp, #-12]
   1fc94:	ldr	r2, [fp, #-12]
   1fc98:	ldr	r3, [fp, #-16]
   1fc9c:	cmp	r2, r3
   1fca0:	bcc	1fc58 <__assert_fail@plt+0xea18>
   1fca4:	nop	{0}
   1fca8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1fcac:	ldr	r3, [fp, #-16]
   1fcb0:	add	r3, r2, r3
   1fcb4:	mov	r2, #0
   1fcb8:	strb	r2, [r3]
   1fcbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fcc0:	cmp	r3, #0
   1fcc4:	beq	1fd00 <__assert_fail@plt+0xeac0>
   1fcc8:	ldr	r3, [fp, #-16]
   1fccc:	add	r3, r3, #1
   1fcd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fcd4:	cmp	r2, r3
   1fcd8:	beq	1fd00 <__assert_fail@plt+0xeac0>
   1fcdc:	movw	r3, #12588	; 0x312c
   1fce0:	movt	r3, #5
   1fce4:	ldr	r3, [r3]
   1fce8:	ldr	r2, [fp, #-16]
   1fcec:	add	r2, r2, #1
   1fcf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fcf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fcf8:	blx	r3
   1fcfc:	str	r0, [fp, #-48]	; 0xffffffd0
   1fd00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fd04:	mov	r0, r3
   1fd08:	sub	sp, fp, #4
   1fd0c:	ldr	fp, [sp]
   1fd10:	add	sp, sp, #4
   1fd14:	pop	{pc}		; (ldr pc, [sp], #4)
   1fd18:	str	fp, [sp, #-8]!
   1fd1c:	str	lr, [sp, #4]
   1fd20:	add	fp, sp, #4
   1fd24:	sub	sp, sp, #72	; 0x48
   1fd28:	str	r0, [fp, #-56]	; 0xffffffc8
   1fd2c:	str	r1, [fp, #-60]	; 0xffffffc4
   1fd30:	str	r2, [fp, #-64]	; 0xffffffc0
   1fd34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1fd38:	cmp	r3, #0
   1fd3c:	beq	1fd88 <__assert_fail@plt+0xeb48>
   1fd40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1fd44:	cmp	r3, #1
   1fd48:	ble	1fd58 <__assert_fail@plt+0xeb18>
   1fd4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1fd50:	cmp	r3, #62	; 0x3e
   1fd54:	ble	1fd78 <__assert_fail@plt+0xeb38>
   1fd58:	movw	r3, #6968	; 0x1b38
   1fd5c:	movt	r3, #4
   1fd60:	movw	r2, #4320	; 0x10e0
   1fd64:	movw	r1, #4700	; 0x125c
   1fd68:	movt	r1, #4
   1fd6c:	movw	r0, #5984	; 0x1760
   1fd70:	movt	r0, #4
   1fd74:	bl	11240 <__assert_fail@plt>
   1fd78:	b	1fd88 <__assert_fail@plt+0xeb48>
   1fd7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fd80:	add	r3, r3, #1
   1fd84:	str	r3, [fp, #-60]	; 0xffffffc4
   1fd88:	bl	11120 <__ctype_b_loc@plt>
   1fd8c:	mov	r3, r0
   1fd90:	ldr	r2, [r3]
   1fd94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fd98:	ldrb	r3, [r3]
   1fd9c:	lsl	r3, r3, #1
   1fda0:	add	r3, r2, r3
   1fda4:	ldrh	r3, [r3]
   1fda8:	and	r3, r3, #8192	; 0x2000
   1fdac:	cmp	r3, #0
   1fdb0:	bne	1fd7c <__assert_fail@plt+0xeb3c>
   1fdb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fdb8:	ldrb	r3, [r3]
   1fdbc:	cmp	r3, #45	; 0x2d
   1fdc0:	moveq	r3, #1
   1fdc4:	movne	r3, #0
   1fdc8:	uxtb	r3, r3
   1fdcc:	str	r3, [fp, #-24]	; 0xffffffe8
   1fdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fdd4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1fdd8:	add	r3, r2, r3
   1fddc:	str	r3, [fp, #-60]	; 0xffffffc4
   1fde0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1fde4:	cmp	r3, #0
   1fde8:	bne	1fe90 <__assert_fail@plt+0xec50>
   1fdec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fdf0:	ldrb	r3, [r3]
   1fdf4:	cmp	r3, #48	; 0x30
   1fdf8:	bne	1fe88 <__assert_fail@plt+0xec48>
   1fdfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fe00:	add	r3, r3, #1
   1fe04:	ldrb	r3, [r3]
   1fe08:	cmp	r3, #120	; 0x78
   1fe0c:	beq	1fe24 <__assert_fail@plt+0xebe4>
   1fe10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fe14:	add	r3, r3, #1
   1fe18:	ldrb	r3, [r3]
   1fe1c:	cmp	r3, #88	; 0x58
   1fe20:	bne	1fe3c <__assert_fail@plt+0xebfc>
   1fe24:	mov	r3, #16
   1fe28:	str	r3, [fp, #-64]	; 0xffffffc0
   1fe2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fe30:	add	r3, r3, #2
   1fe34:	str	r3, [fp, #-60]	; 0xffffffc4
   1fe38:	b	1fe90 <__assert_fail@plt+0xec50>
   1fe3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fe40:	add	r3, r3, #1
   1fe44:	ldrb	r3, [r3]
   1fe48:	cmp	r3, #98	; 0x62
   1fe4c:	beq	1fe64 <__assert_fail@plt+0xec24>
   1fe50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fe54:	add	r3, r3, #1
   1fe58:	ldrb	r3, [r3]
   1fe5c:	cmp	r3, #66	; 0x42
   1fe60:	bne	1fe7c <__assert_fail@plt+0xec3c>
   1fe64:	mov	r3, #2
   1fe68:	str	r3, [fp, #-64]	; 0xffffffc0
   1fe6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fe70:	add	r3, r3, #2
   1fe74:	str	r3, [fp, #-60]	; 0xffffffc4
   1fe78:	b	1fe90 <__assert_fail@plt+0xec50>
   1fe7c:	mov	r3, #8
   1fe80:	str	r3, [fp, #-64]	; 0xffffffc0
   1fe84:	b	1fe90 <__assert_fail@plt+0xec50>
   1fe88:	mov	r3, #10
   1fe8c:	str	r3, [fp, #-64]	; 0xffffffc0
   1fe90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1fe94:	ldrb	r3, [r3]
   1fe98:	cmp	r3, #0
   1fe9c:	bne	1feb4 <__assert_fail@plt+0xec74>
   1fea0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fea4:	mov	r2, #0
   1fea8:	str	r2, [r3, #4]
   1feac:	mvn	r3, #0
   1feb0:	b	20274 <__assert_fail@plt+0xf034>
   1feb4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1feb8:	bl	11144 <strlen@plt>
   1febc:	str	r0, [fp, #-28]	; 0xffffffe4
   1fec0:	movw	r3, #12584	; 0x3128
   1fec4:	movt	r3, #5
   1fec8:	ldr	r3, [r3]
   1fecc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fed0:	blx	r3
   1fed4:	str	r0, [fp, #-32]	; 0xffffffe0
   1fed8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1fedc:	cmp	r3, #36	; 0x24
   1fee0:	ble	1feec <__assert_fail@plt+0xecac>
   1fee4:	mov	r3, #36	; 0x24
   1fee8:	b	1fef0 <__assert_fail@plt+0xecb0>
   1feec:	mov	r3, #10
   1fef0:	str	r3, [fp, #-36]	; 0xffffffdc
   1fef4:	mov	r3, #0
   1fef8:	str	r3, [fp, #-16]
   1fefc:	b	2004c <__assert_fail@plt+0xee0c>
   1ff00:	bl	11120 <__ctype_b_loc@plt>
   1ff04:	mov	r3, r0
   1ff08:	ldr	r2, [r3]
   1ff0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ff10:	ldrb	r3, [r3]
   1ff14:	lsl	r3, r3, #1
   1ff18:	add	r3, r2, r3
   1ff1c:	ldrh	r3, [r3]
   1ff20:	and	r3, r3, #8192	; 0x2000
   1ff24:	cmp	r3, #0
   1ff28:	bne	2003c <__assert_fail@plt+0xedfc>
   1ff2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ff30:	ldrb	r3, [r3]
   1ff34:	cmp	r3, #47	; 0x2f
   1ff38:	bls	1ff60 <__assert_fail@plt+0xed20>
   1ff3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ff40:	ldrb	r3, [r3]
   1ff44:	cmp	r3, #57	; 0x39
   1ff48:	bhi	1ff60 <__assert_fail@plt+0xed20>
   1ff4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ff50:	ldrb	r3, [r3]
   1ff54:	sub	r3, r3, #48	; 0x30
   1ff58:	str	r3, [fp, #-20]	; 0xffffffec
   1ff5c:	b	1ffdc <__assert_fail@plt+0xed9c>
   1ff60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ff64:	ldrb	r3, [r3]
   1ff68:	cmp	r3, #96	; 0x60
   1ff6c:	bls	1ffa0 <__assert_fail@plt+0xed60>
   1ff70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ff74:	ldrb	r3, [r3]
   1ff78:	cmp	r3, #122	; 0x7a
   1ff7c:	bhi	1ffa0 <__assert_fail@plt+0xed60>
   1ff80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ff84:	ldrb	r3, [r3]
   1ff88:	mov	r2, r3
   1ff8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ff90:	add	r3, r2, r3
   1ff94:	sub	r3, r3, #97	; 0x61
   1ff98:	str	r3, [fp, #-20]	; 0xffffffec
   1ff9c:	b	1ffdc <__assert_fail@plt+0xed9c>
   1ffa0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ffa4:	ldrb	r3, [r3]
   1ffa8:	cmp	r3, #64	; 0x40
   1ffac:	bls	1ffd4 <__assert_fail@plt+0xed94>
   1ffb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ffb4:	ldrb	r3, [r3]
   1ffb8:	cmp	r3, #90	; 0x5a
   1ffbc:	bhi	1ffd4 <__assert_fail@plt+0xed94>
   1ffc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ffc4:	ldrb	r3, [r3]
   1ffc8:	sub	r3, r3, #55	; 0x37
   1ffcc:	str	r3, [fp, #-20]	; 0xffffffec
   1ffd0:	b	1ffdc <__assert_fail@plt+0xed9c>
   1ffd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ffd8:	str	r3, [fp, #-20]	; 0xffffffec
   1ffdc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ffe0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ffe4:	cmp	r2, r3
   1ffe8:	bcc	20018 <__assert_fail@plt+0xedd8>
   1ffec:	movw	r3, #12592	; 0x3130
   1fff0:	movt	r3, #5
   1fff4:	ldr	r3, [r3]
   1fff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20000:	blx	r3
   20004:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20008:	mov	r2, #0
   2000c:	str	r2, [r3, #4]
   20010:	mvn	r3, #0
   20014:	b	20274 <__assert_fail@plt+0xf034>
   20018:	ldr	r3, [fp, #-16]
   2001c:	add	r2, r3, #1
   20020:	str	r2, [fp, #-16]
   20024:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20028:	add	r3, r2, r3
   2002c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20030:	uxtb	r2, r2
   20034:	strb	r2, [r3]
   20038:	b	20040 <__assert_fail@plt+0xee00>
   2003c:	nop	{0}
   20040:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20044:	add	r3, r3, #1
   20048:	str	r3, [fp, #-60]	; 0xffffffc4
   2004c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20050:	ldrb	r3, [r3]
   20054:	cmp	r3, #0
   20058:	bne	1ff00 <__assert_fail@plt+0xecc0>
   2005c:	ldr	r3, [fp, #-16]
   20060:	cmp	r3, #0
   20064:	bne	20094 <__assert_fail@plt+0xee54>
   20068:	movw	r3, #12592	; 0x3130
   2006c:	movt	r3, #5
   20070:	ldr	r3, [r3]
   20074:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2007c:	blx	r3
   20080:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20084:	mov	r2, #0
   20088:	str	r2, [r3, #4]
   2008c:	mvn	r3, #0
   20090:	b	20274 <__assert_fail@plt+0xf034>
   20094:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20098:	mov	r0, r3
   2009c:	bl	17030 <__assert_fail@plt+0x5df0>
   200a0:	str	r0, [fp, #-40]	; 0xffffffd8
   200a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   200a8:	cmp	r3, #0
   200ac:	beq	20118 <__assert_fail@plt+0xeed8>
   200b0:	ldr	r3, [fp, #-16]
   200b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   200b8:	mul	r3, r2, r3
   200bc:	add	r3, r3, #31
   200c0:	lsr	r3, r3, #5
   200c4:	str	r3, [fp, #-12]
   200c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   200cc:	ldr	r3, [r3]
   200d0:	ldr	r2, [fp, #-12]
   200d4:	cmp	r2, r3
   200d8:	ble	200f0 <__assert_fail@plt+0xeeb0>
   200dc:	ldr	r1, [fp, #-12]
   200e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   200e4:	bl	17f4c <__assert_fail@plt+0x6d0c>
   200e8:	mov	r3, r0
   200ec:	b	200f8 <__assert_fail@plt+0xeeb8>
   200f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   200f4:	ldr	r3, [r3, #8]
   200f8:	str	r3, [fp, #-44]	; 0xffffffd4
   200fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20100:	ldr	r2, [fp, #-16]
   20104:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2010c:	bl	17a00 <__assert_fail@plt+0x67c0>
   20110:	str	r0, [fp, #-8]
   20114:	b	20204 <__assert_fail@plt+0xefc4>
   20118:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2011c:	sub	r3, fp, #52	; 0x34
   20120:	mov	r1, r2
   20124:	mov	r0, r3
   20128:	bl	17118 <__assert_fail@plt+0x5ed8>
   2012c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   20130:	ldr	r3, [fp, #-16]
   20134:	add	r3, r2, r3
   20138:	sub	r2, r3, #1
   2013c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20140:	udiv	r3, r2, r3
   20144:	str	r3, [fp, #-12]
   20148:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2014c:	ldr	r3, [r3]
   20150:	ldr	r2, [fp, #-12]
   20154:	cmp	r2, r3
   20158:	ble	20170 <__assert_fail@plt+0xef30>
   2015c:	ldr	r1, [fp, #-12]
   20160:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20164:	bl	17f4c <__assert_fail@plt+0x6d0c>
   20168:	mov	r3, r0
   2016c:	b	20178 <__assert_fail@plt+0xef38>
   20170:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20174:	ldr	r3, [r3, #8]
   20178:	str	r3, [fp, #-44]	; 0xffffffd4
   2017c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   20180:	sub	r3, fp, #52	; 0x34
   20184:	str	r3, [sp]
   20188:	mov	r3, r2
   2018c:	ldr	r2, [fp, #-16]
   20190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20194:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20198:	bl	17b40 <__assert_fail@plt+0x6900>
   2019c:	str	r0, [fp, #-8]
   201a0:	ldr	r3, [fp, #-8]
   201a4:	cmp	r3, #0
   201a8:	bgt	201cc <__assert_fail@plt+0xef8c>
   201ac:	movw	r3, #6968	; 0x1b38
   201b0:	movt	r3, #4
   201b4:	movw	r2, #4405	; 0x1135
   201b8:	movw	r1, #4700	; 0x125c
   201bc:	movt	r1, #4
   201c0:	movw	r0, #5408	; 0x1520
   201c4:	movt	r0, #4
   201c8:	bl	11240 <__assert_fail@plt>
   201cc:	ldr	r3, [fp, #-8]
   201d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   201d4:	lsl	r3, r3, #2
   201d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   201dc:	add	r3, r2, r3
   201e0:	ldr	r3, [r3]
   201e4:	cmp	r3, #0
   201e8:	moveq	r3, #1
   201ec:	movne	r3, #0
   201f0:	uxtb	r3, r3
   201f4:	mov	r2, r3
   201f8:	ldr	r3, [fp, #-8]
   201fc:	sub	r3, r3, r2
   20200:	str	r3, [fp, #-8]
   20204:	ldr	r2, [fp, #-8]
   20208:	ldr	r3, [fp, #-12]
   2020c:	cmp	r2, r3
   20210:	ble	20234 <__assert_fail@plt+0xeff4>
   20214:	movw	r3, #6968	; 0x1b38
   20218:	movt	r3, #4
   2021c:	movw	r2, #4408	; 0x1138
   20220:	movw	r1, #4700	; 0x125c
   20224:	movt	r1, #4
   20228:	movw	r0, #6024	; 0x1788
   2022c:	movt	r0, #4
   20230:	bl	11240 <__assert_fail@plt>
   20234:	movw	r3, #12592	; 0x3130
   20238:	movt	r3, #5
   2023c:	ldr	r3, [r3]
   20240:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20248:	blx	r3
   2024c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20250:	cmp	r3, #0
   20254:	beq	20264 <__assert_fail@plt+0xf024>
   20258:	ldr	r3, [fp, #-8]
   2025c:	rsb	r3, r3, #0
   20260:	b	20268 <__assert_fail@plt+0xf028>
   20264:	ldr	r3, [fp, #-8]
   20268:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2026c:	str	r3, [r2, #4]
   20270:	mov	r3, #0
   20274:	mov	r0, r3
   20278:	sub	sp, fp, #4
   2027c:	ldr	fp, [sp]
   20280:	add	sp, sp, #4
   20284:	pop	{pc}		; (ldr pc, [sp], #4)
   20288:	str	fp, [sp, #-8]!
   2028c:	str	lr, [sp, #4]
   20290:	add	fp, sp, #4
   20294:	sub	sp, sp, #16
   20298:	str	r0, [fp, #-8]
   2029c:	str	r1, [fp, #-12]
   202a0:	str	r2, [fp, #-16]
   202a4:	ldr	r0, [fp, #-8]
   202a8:	bl	17e24 <__assert_fail@plt+0x6be4>
   202ac:	ldr	r2, [fp, #-16]
   202b0:	ldr	r1, [fp, #-12]
   202b4:	ldr	r0, [fp, #-8]
   202b8:	bl	1fd18 <__assert_fail@plt+0xead8>
   202bc:	mov	r3, r0
   202c0:	mov	r0, r3
   202c4:	sub	sp, fp, #4
   202c8:	ldr	fp, [sp]
   202cc:	add	sp, sp, #4
   202d0:	pop	{pc}		; (ldr pc, [sp], #4)
   202d4:	str	fp, [sp, #-8]!
   202d8:	str	lr, [sp, #4]
   202dc:	add	fp, sp, #4
   202e0:	sub	sp, sp, #32
   202e4:	str	r0, [fp, #-24]	; 0xffffffe8
   202e8:	str	r1, [fp, #-28]	; 0xffffffe4
   202ec:	str	r2, [fp, #-32]	; 0xffffffe0
   202f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   202f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   202f8:	mov	r0, #0
   202fc:	bl	1fa30 <__assert_fail@plt+0xe7f0>
   20300:	str	r0, [fp, #-8]
   20304:	ldr	r3, [fp, #-8]
   20308:	cmp	r3, #0
   2030c:	bne	20318 <__assert_fail@plt+0xf0d8>
   20310:	mov	r3, #0
   20314:	b	20360 <__assert_fail@plt+0xf120>
   20318:	ldr	r0, [fp, #-8]
   2031c:	bl	11144 <strlen@plt>
   20320:	str	r0, [fp, #-12]
   20324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20328:	ldr	r2, [fp, #-12]
   2032c:	mov	r1, #1
   20330:	ldr	r0, [fp, #-8]
   20334:	bl	1106c <fwrite@plt>
   20338:	str	r0, [fp, #-16]
   2033c:	movw	r3, #12592	; 0x3130
   20340:	movt	r3, #5
   20344:	ldr	r3, [r3]
   20348:	ldr	r2, [fp, #-12]
   2034c:	add	r2, r2, #1
   20350:	mov	r1, r2
   20354:	ldr	r0, [fp, #-8]
   20358:	blx	r3
   2035c:	ldr	r3, [fp, #-16]
   20360:	mov	r0, r3
   20364:	sub	sp, fp, #4
   20368:	ldr	fp, [sp]
   2036c:	add	sp, sp, #4
   20370:	pop	{pc}		; (ldr pc, [sp], #4)
   20374:	push	{fp}		; (str fp, [sp, #-4]!)
   20378:	add	fp, sp, #0
   2037c:	sub	sp, sp, #12
   20380:	movw	r3, #6980	; 0x1b44
   20384:	movt	r3, #4
   20388:	str	r3, [fp, #-8]
   2038c:	ldr	r3, [fp, #-8]
   20390:	ldrb	r3, [r3]
   20394:	rsb	r3, r3, #1
   20398:	mov	r0, r3
   2039c:	add	sp, fp, #0
   203a0:	pop	{fp}		; (ldr fp, [sp], #4)
   203a4:	bx	lr
   203a8:	str	fp, [sp, #-8]!
   203ac:	str	lr, [sp, #4]
   203b0:	add	fp, sp, #4
   203b4:	sub	sp, sp, #48	; 0x30
   203b8:	str	r0, [fp, #-40]	; 0xffffffd8
   203bc:	str	r1, [fp, #-44]	; 0xffffffd4
   203c0:	str	r2, [fp, #-48]	; 0xffffffd0
   203c4:	str	r3, [fp, #-52]	; 0xffffffcc
   203c8:	ldr	r3, [fp, #8]
   203cc:	cmp	r3, #0
   203d0:	beq	203e0 <__assert_fail@plt+0xf1a0>
   203d4:	movw	r0, #6036	; 0x1794
   203d8:	movt	r0, #4
   203dc:	bl	13840 <__assert_fail@plt+0x2600>
   203e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   203e4:	cmp	r3, #1
   203e8:	beq	20418 <__assert_fail@plt+0xf1d8>
   203ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   203f0:	cmn	r3, #1
   203f4:	beq	20418 <__assert_fail@plt+0xf1d8>
   203f8:	movw	r3, #6984	; 0x1b48
   203fc:	movt	r3, #4
   20400:	movw	r2, #4468	; 0x1174
   20404:	movw	r1, #4700	; 0x125c
   20408:	movt	r1, #4
   2040c:	movw	r0, #6072	; 0x17b8
   20410:	movt	r0, #4
   20414:	bl	11240 <__assert_fail@plt>
   20418:	ldr	r3, [fp, #4]
   2041c:	cmn	r3, #1
   20420:	blt	20430 <__assert_fail@plt+0xf1f0>
   20424:	ldr	r3, [fp, #4]
   20428:	cmp	r3, #1
   2042c:	ble	20450 <__assert_fail@plt+0xf210>
   20430:	movw	r3, #6984	; 0x1b48
   20434:	movt	r3, #4
   20438:	movw	r2, #4469	; 0x1175
   2043c:	movw	r1, #4700	; 0x125c
   20440:	movt	r1, #4
   20444:	movw	r0, #6100	; 0x17d4
   20448:	movt	r0, #4
   2044c:	bl	11240 <__assert_fail@plt>
   20450:	ldr	r3, [fp, #4]
   20454:	cmp	r3, #0
   20458:	bne	20464 <__assert_fail@plt+0xf224>
   2045c:	bl	20374 <__assert_fail@plt+0xf134>
   20460:	str	r0, [fp, #4]
   20464:	ldr	r3, [fp, #12]
   20468:	str	r3, [fp, #-8]
   2046c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20470:	ldr	r3, [fp, #4]
   20474:	cmp	r2, r3
   20478:	beq	20488 <__assert_fail@plt+0xf248>
   2047c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20480:	lsl	r3, r3, #1
   20484:	b	2048c <__assert_fail@plt+0xf24c>
   20488:	mov	r3, #0
   2048c:	str	r3, [fp, #-12]
   20490:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20494:	cmp	r3, #1
   20498:	bne	204c4 <__assert_fail@plt+0xf284>
   2049c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   204a0:	sub	r3, r3, #1
   204a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   204a8:	mul	r3, r2, r3
   204ac:	ldr	r2, [fp, #-8]
   204b0:	add	r3, r2, r3
   204b4:	str	r3, [fp, #-8]
   204b8:	ldr	r3, [fp, #-12]
   204bc:	rsb	r3, r3, #0
   204c0:	str	r3, [fp, #-12]
   204c4:	ldr	r3, [fp, #4]
   204c8:	cmp	r3, #1
   204cc:	bne	204e4 <__assert_fail@plt+0xf2a4>
   204d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   204d4:	sub	r3, r3, #1
   204d8:	ldr	r2, [fp, #-8]
   204dc:	add	r3, r2, r3
   204e0:	str	r3, [fp, #-8]
   204e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   204e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   204ec:	mul	r3, r2, r3
   204f0:	add	r3, r3, #3
   204f4:	lsr	r3, r3, #2
   204f8:	str	r3, [fp, #-32]	; 0xffffffe0
   204fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20500:	ldr	r3, [r3]
   20504:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20508:	cmp	r2, r3
   2050c:	ble	20524 <__assert_fail@plt+0xf2e4>
   20510:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20514:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20518:	bl	17f4c <__assert_fail@plt+0x6d0c>
   2051c:	mov	r3, r0
   20520:	b	2052c <__assert_fail@plt+0xf2ec>
   20524:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20528:	ldr	r3, [r3, #8]
   2052c:	str	r3, [fp, #-36]	; 0xffffffdc
   20530:	mov	r3, #0
   20534:	str	r3, [fp, #-16]
   20538:	mov	r3, #0
   2053c:	str	r3, [fp, #-20]	; 0xffffffec
   20540:	mov	r3, #0
   20544:	str	r3, [fp, #-24]	; 0xffffffe8
   20548:	b	2060c <__assert_fail@plt+0xf3cc>
   2054c:	mov	r3, #0
   20550:	str	r3, [fp, #-28]	; 0xffffffe4
   20554:	b	205e0 <__assert_fail@plt+0xf3a0>
   20558:	ldr	r3, [fp, #-8]
   2055c:	ldrb	r3, [r3]
   20560:	mov	r1, r3
   20564:	ldr	r3, [fp, #-20]	; 0xffffffec
   20568:	add	r2, r3, #1
   2056c:	str	r2, [fp, #-20]	; 0xffffffec
   20570:	lsl	r3, r3, #3
   20574:	lsl	r3, r1, r3
   20578:	ldr	r2, [fp, #-16]
   2057c:	orr	r3, r2, r3
   20580:	str	r3, [fp, #-16]
   20584:	ldr	r3, [fp, #-20]	; 0xffffffec
   20588:	cmp	r3, #4
   2058c:	bne	205c0 <__assert_fail@plt+0xf380>
   20590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20594:	add	r2, r3, #1
   20598:	str	r2, [fp, #-24]	; 0xffffffe8
   2059c:	lsl	r3, r3, #2
   205a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   205a4:	add	r3, r2, r3
   205a8:	ldr	r2, [fp, #-16]
   205ac:	str	r2, [r3]
   205b0:	mov	r3, #0
   205b4:	str	r3, [fp, #-20]	; 0xffffffec
   205b8:	mov	r3, #0
   205bc:	str	r3, [fp, #-16]
   205c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   205c4:	add	r3, r3, #1
   205c8:	str	r3, [fp, #-28]	; 0xffffffe4
   205cc:	ldr	r3, [fp, #4]
   205d0:	rsb	r3, r3, #0
   205d4:	ldr	r2, [fp, #-8]
   205d8:	add	r3, r2, r3
   205dc:	str	r3, [fp, #-8]
   205e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   205e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   205e8:	cmp	r2, r3
   205ec:	bcc	20558 <__assert_fail@plt+0xf318>
   205f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   205f4:	sub	r3, r3, #1
   205f8:	str	r3, [fp, #-44]	; 0xffffffd4
   205fc:	ldr	r3, [fp, #-12]
   20600:	ldr	r2, [fp, #-8]
   20604:	add	r3, r2, r3
   20608:	str	r3, [fp, #-8]
   2060c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20610:	cmp	r3, #0
   20614:	bne	2054c <__assert_fail@plt+0xf30c>
   20618:	ldr	r3, [fp, #-20]	; 0xffffffec
   2061c:	cmp	r3, #0
   20620:	movne	r3, #1
   20624:	moveq	r3, #0
   20628:	uxtb	r3, r3
   2062c:	mov	r2, r3
   20630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20634:	add	r3, r2, r3
   20638:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2063c:	cmp	r2, r3
   20640:	beq	20664 <__assert_fail@plt+0xf424>
   20644:	movw	r3, #6984	; 0x1b48
   20648:	movt	r3, #4
   2064c:	movw	r2, #4507	; 0x119b
   20650:	movw	r1, #4700	; 0x125c
   20654:	movt	r1, #4
   20658:	movw	r0, #6128	; 0x17f0
   2065c:	movt	r0, #4
   20660:	bl	11240 <__assert_fail@plt>
   20664:	ldr	r3, [fp, #-16]
   20668:	cmp	r3, #0
   2066c:	beq	20694 <__assert_fail@plt+0xf454>
   20670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20674:	add	r2, r3, #1
   20678:	str	r2, [fp, #-24]	; 0xffffffe8
   2067c:	lsl	r3, r3, #2
   20680:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20684:	add	r3, r2, r3
   20688:	ldr	r2, [fp, #-16]
   2068c:	str	r2, [r3]
   20690:	b	206a4 <__assert_fail@plt+0xf464>
   20694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20698:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2069c:	bl	13ddc <__assert_fail@plt+0x2b9c>
   206a0:	str	r0, [fp, #-24]	; 0xffffffe8
   206a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   206a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   206ac:	str	r2, [r3, #4]
   206b0:	nop	{0}
   206b4:	sub	sp, fp, #4
   206b8:	ldr	fp, [sp]
   206bc:	add	sp, sp, #4
   206c0:	pop	{pc}		; (ldr pc, [sp], #4)
   206c4:	str	fp, [sp, #-8]!
   206c8:	str	lr, [sp, #4]
   206cc:	add	fp, sp, #4
   206d0:	sub	sp, sp, #64	; 0x40
   206d4:	str	r0, [fp, #-56]	; 0xffffffc8
   206d8:	str	r1, [fp, #-60]	; 0xffffffc4
   206dc:	str	r2, [fp, #-64]	; 0xffffffc0
   206e0:	str	r3, [fp, #-68]	; 0xffffffbc
   206e4:	ldr	r3, [fp, #8]
   206e8:	cmp	r3, #0
   206ec:	beq	206fc <__assert_fail@plt+0xf4bc>
   206f0:	movw	r0, #6152	; 0x1808
   206f4:	movt	r0, #4
   206f8:	bl	13840 <__assert_fail@plt+0x2600>
   206fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20700:	cmp	r3, #1
   20704:	beq	20734 <__assert_fail@plt+0xf4f4>
   20708:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2070c:	cmn	r3, #1
   20710:	beq	20734 <__assert_fail@plt+0xf4f4>
   20714:	movw	r3, #6996	; 0x1b54
   20718:	movt	r3, #4
   2071c:	movw	r2, #4526	; 0x11ae
   20720:	movw	r1, #4700	; 0x125c
   20724:	movt	r1, #4
   20728:	movw	r0, #6072	; 0x17b8
   2072c:	movt	r0, #4
   20730:	bl	11240 <__assert_fail@plt>
   20734:	ldr	r3, [fp, #4]
   20738:	cmn	r3, #1
   2073c:	blt	2074c <__assert_fail@plt+0xf50c>
   20740:	ldr	r3, [fp, #4]
   20744:	cmp	r3, #1
   20748:	ble	2076c <__assert_fail@plt+0xf52c>
   2074c:	movw	r3, #6996	; 0x1b54
   20750:	movt	r3, #4
   20754:	movw	r2, #4527	; 0x11af
   20758:	movw	r1, #4700	; 0x125c
   2075c:	movt	r1, #4
   20760:	movw	r0, #6100	; 0x17d4
   20764:	movt	r0, #4
   20768:	bl	11240 <__assert_fail@plt>
   2076c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20770:	cmp	r3, #0
   20774:	bne	207a8 <__assert_fail@plt+0xf568>
   20778:	ldr	r3, [fp, #12]
   2077c:	ldr	r3, [r3, #4]
   20780:	cmp	r3, #0
   20784:	beq	207a8 <__assert_fail@plt+0xf568>
   20788:	movw	r3, #6996	; 0x1b54
   2078c:	movt	r3, #4
   20790:	movw	r2, #4528	; 0x11b0
   20794:	movw	r1, #4700	; 0x125c
   20798:	movt	r1, #4
   2079c:	movw	r0, #6188	; 0x182c
   207a0:	movt	r0, #4
   207a4:	bl	11240 <__assert_fail@plt>
   207a8:	ldr	r3, [fp, #12]
   207ac:	ldr	r3, [r3, #4]
   207b0:	str	r3, [fp, #-40]	; 0xffffffd8
   207b4:	mov	r3, #0
   207b8:	str	r3, [fp, #-8]
   207bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   207c0:	cmp	r3, #0
   207c4:	beq	20ab8 <__assert_fail@plt+0xf878>
   207c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   207cc:	cmp	r3, #0
   207d0:	rsblt	r3, r3, #0
   207d4:	str	r3, [fp, #-40]	; 0xffffffd8
   207d8:	ldr	r3, [fp, #12]
   207dc:	ldr	r2, [r3, #8]
   207e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   207e4:	sub	r3, r3, #-1073741823	; 0xc0000001
   207e8:	lsl	r3, r3, #2
   207ec:	add	r3, r2, r3
   207f0:	ldr	r3, [r3]
   207f4:	str	r3, [fp, #-24]	; 0xffffffe8
   207f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207fc:	cmp	r3, #0
   20800:	bne	20824 <__assert_fail@plt+0xf5e4>
   20804:	movw	r3, #6996	; 0x1b54
   20808:	movt	r3, #4
   2080c:	movw	r2, #4548	; 0x11c4
   20810:	movw	r1, #4700	; 0x125c
   20814:	movt	r1, #4
   20818:	movw	r0, #6220	; 0x184c
   2081c:	movt	r0, #4
   20820:	bl	11240 <__assert_fail@plt>
   20824:	mov	r3, #0
   20828:	str	r3, [fp, #-12]
   2082c:	ldr	r3, [fp, #-12]
   20830:	cmp	r3, #0
   20834:	bne	20868 <__assert_fail@plt+0xf628>
   20838:	mov	r3, #8
   2083c:	str	r3, [fp, #-44]	; 0xffffffd4
   20840:	ldr	r3, [fp, #-12]
   20844:	add	r3, r3, #1
   20848:	str	r3, [fp, #-12]
   2084c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20850:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20854:	lsr	r3, r2, r3
   20858:	str	r3, [fp, #-24]	; 0xffffffe8
   2085c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20860:	cmp	r3, #0
   20864:	bne	20838 <__assert_fail@plt+0xf5f8>
   20868:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2086c:	sub	r3, r3, #1
   20870:	lsl	r2, r3, #2
   20874:	ldr	r3, [fp, #-12]
   20878:	add	r2, r2, r3
   2087c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20880:	add	r3, r2, r3
   20884:	sub	r2, r3, #1
   20888:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2088c:	udiv	r3, r2, r3
   20890:	str	r3, [fp, #-8]
   20894:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20898:	cmp	r3, #0
   2089c:	bne	208c4 <__assert_fail@plt+0xf684>
   208a0:	movw	r3, #12584	; 0x3128
   208a4:	movt	r3, #5
   208a8:	ldr	r3, [r3]
   208ac:	ldr	r2, [fp, #-8]
   208b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   208b4:	mul	r2, r1, r2
   208b8:	mov	r0, r2
   208bc:	blx	r3
   208c0:	str	r0, [fp, #-56]	; 0xffffffc8
   208c4:	ldr	r3, [fp, #4]
   208c8:	cmp	r3, #0
   208cc:	bne	208d8 <__assert_fail@plt+0xf698>
   208d0:	bl	20374 <__assert_fail@plt+0xf134>
   208d4:	str	r0, [fp, #4]
   208d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   208dc:	str	r3, [fp, #-16]
   208e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   208e4:	ldr	r3, [fp, #4]
   208e8:	cmp	r2, r3
   208ec:	beq	208fc <__assert_fail@plt+0xf6bc>
   208f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   208f4:	lsl	r3, r3, #1
   208f8:	b	20900 <__assert_fail@plt+0xf6c0>
   208fc:	mov	r3, #0
   20900:	str	r3, [fp, #-20]	; 0xffffffec
   20904:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20908:	cmp	r3, #1
   2090c:	bne	20938 <__assert_fail@plt+0xf6f8>
   20910:	ldr	r3, [fp, #-8]
   20914:	sub	r3, r3, #1
   20918:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2091c:	mul	r3, r2, r3
   20920:	ldr	r2, [fp, #-16]
   20924:	add	r3, r2, r3
   20928:	str	r3, [fp, #-16]
   2092c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20930:	rsb	r3, r3, #0
   20934:	str	r3, [fp, #-20]	; 0xffffffec
   20938:	ldr	r3, [fp, #4]
   2093c:	cmp	r3, #1
   20940:	bne	20958 <__assert_fail@plt+0xf718>
   20944:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20948:	sub	r3, r3, #1
   2094c:	ldr	r2, [fp, #-16]
   20950:	add	r3, r2, r3
   20954:	str	r3, [fp, #-16]
   20958:	mov	r3, #0
   2095c:	str	r3, [fp, #-28]	; 0xffffffe4
   20960:	mov	r3, #0
   20964:	str	r3, [fp, #-32]	; 0xffffffe0
   20968:	mov	r3, #0
   2096c:	str	r3, [fp, #-12]
   20970:	b	20a48 <__assert_fail@plt+0xf808>
   20974:	mov	r3, #0
   20978:	str	r3, [fp, #-36]	; 0xffffffdc
   2097c:	b	20a1c <__assert_fail@plt+0xf7dc>
   20980:	mov	r3, #8
   20984:	str	r3, [fp, #-48]	; 0xffffffd0
   20988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2098c:	cmp	r3, #0
   20990:	bne	209d0 <__assert_fail@plt+0xf790>
   20994:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20998:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2099c:	cmp	r2, r3
   209a0:	bge	209c8 <__assert_fail@plt+0xf788>
   209a4:	ldr	r3, [fp, #12]
   209a8:	ldr	r2, [r3, #8]
   209ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   209b0:	add	r1, r3, #1
   209b4:	str	r1, [fp, #-32]	; 0xffffffe0
   209b8:	lsl	r3, r3, #2
   209bc:	add	r3, r2, r3
   209c0:	ldr	r3, [r3]
   209c4:	str	r3, [fp, #-24]	; 0xffffffe8
   209c8:	mov	r3, #4
   209cc:	str	r3, [fp, #-28]	; 0xffffffe4
   209d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   209d4:	uxtb	r2, r3
   209d8:	ldr	r3, [fp, #-16]
   209dc:	strb	r2, [r3]
   209e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   209e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   209e8:	lsr	r3, r2, r3
   209ec:	str	r3, [fp, #-24]	; 0xffffffe8
   209f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   209f4:	sub	r3, r3, #1
   209f8:	str	r3, [fp, #-28]	; 0xffffffe4
   209fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20a00:	add	r3, r3, #1
   20a04:	str	r3, [fp, #-36]	; 0xffffffdc
   20a08:	ldr	r3, [fp, #4]
   20a0c:	rsb	r3, r3, #0
   20a10:	ldr	r2, [fp, #-16]
   20a14:	add	r3, r2, r3
   20a18:	str	r3, [fp, #-16]
   20a1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20a20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20a24:	cmp	r2, r3
   20a28:	bcc	20980 <__assert_fail@plt+0xf740>
   20a2c:	ldr	r3, [fp, #-12]
   20a30:	add	r3, r3, #1
   20a34:	str	r3, [fp, #-12]
   20a38:	ldr	r3, [fp, #-20]	; 0xffffffec
   20a3c:	ldr	r2, [fp, #-16]
   20a40:	add	r3, r2, r3
   20a44:	str	r3, [fp, #-16]
   20a48:	ldr	r2, [fp, #-12]
   20a4c:	ldr	r3, [fp, #-8]
   20a50:	cmp	r2, r3
   20a54:	bcc	20974 <__assert_fail@plt+0xf734>
   20a58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20a5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20a60:	cmp	r2, r3
   20a64:	beq	20a88 <__assert_fail@plt+0xf848>
   20a68:	movw	r3, #6996	; 0x1b54
   20a6c:	movt	r3, #4
   20a70:	movw	r2, #4611	; 0x1203
   20a74:	movw	r1, #4700	; 0x125c
   20a78:	movt	r1, #4
   20a7c:	movw	r0, #6232	; 0x1858
   20a80:	movt	r0, #4
   20a84:	bl	11240 <__assert_fail@plt>
   20a88:	ldr	r2, [fp, #-12]
   20a8c:	ldr	r3, [fp, #-8]
   20a90:	cmp	r2, r3
   20a94:	beq	20ab8 <__assert_fail@plt+0xf878>
   20a98:	movw	r3, #6996	; 0x1b54
   20a9c:	movt	r3, #4
   20aa0:	movw	r2, #4612	; 0x1204
   20aa4:	movw	r1, #4700	; 0x125c
   20aa8:	movt	r1, #4
   20aac:	movw	r0, #6240	; 0x1860
   20ab0:	movt	r0, #4
   20ab4:	bl	11240 <__assert_fail@plt>
   20ab8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20abc:	cmp	r3, #0
   20ac0:	beq	20ad0 <__assert_fail@plt+0xf890>
   20ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20ac8:	ldr	r2, [fp, #-8]
   20acc:	str	r2, [r3]
   20ad0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20ad4:	mov	r0, r3
   20ad8:	sub	sp, fp, #4
   20adc:	ldr	fp, [sp]
   20ae0:	add	sp, sp, #4
   20ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   20ae8:	str	fp, [sp, #-8]!
   20aec:	str	lr, [sp, #4]
   20af0:	add	fp, sp, #4
   20af4:	sub	sp, sp, #40	; 0x28
   20af8:	str	r0, [fp, #-24]	; 0xffffffe8
   20afc:	str	r1, [fp, #-28]	; 0xffffffe4
   20b00:	str	r2, [fp, #-32]	; 0xffffffe0
   20b04:	str	r3, [fp, #-36]	; 0xffffffdc
   20b08:	movw	r3, #12688	; 0x3190
   20b0c:	movt	r3, #5
   20b10:	ldr	r3, [r3]
   20b14:	str	r3, [fp, #-8]
   20b18:	movw	r3, #12688	; 0x3190
   20b1c:	movt	r3, #5
   20b20:	mov	r2, #0
   20b24:	str	r2, [r3]
   20b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20b2c:	cmp	r3, #2
   20b30:	bne	20bc8 <__assert_fail@plt+0xf988>
   20b34:	mov	r3, #0
   20b38:	str	r3, [sp]
   20b3c:	movw	r3, #7024	; 0x1b70
   20b40:	movt	r3, #4
   20b44:	movw	r2, #7072	; 0x1ba0
   20b48:	movt	r2, #4
   20b4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20b54:	bl	11114 <getopt_long@plt>
   20b58:	str	r0, [fp, #-12]
   20b5c:	ldr	r3, [fp, #-12]
   20b60:	cmn	r3, #1
   20b64:	beq	20bc8 <__assert_fail@plt+0xf988>
   20b68:	ldr	r3, [fp, #-12]
   20b6c:	cmp	r3, #104	; 0x68
   20b70:	beq	20b84 <__assert_fail@plt+0xf944>
   20b74:	ldr	r3, [fp, #-12]
   20b78:	cmp	r3, #118	; 0x76
   20b7c:	beq	20b94 <__assert_fail@plt+0xf954>
   20b80:	b	20bcc <__assert_fail@plt+0xf98c>
   20b84:	ldr	r3, [fp, #8]
   20b88:	mov	r0, #0
   20b8c:	blx	r3
   20b90:	b	20bcc <__assert_fail@plt+0xf98c>
   20b94:	add	r3, fp, #12
   20b98:	str	r3, [fp, #-16]
   20b9c:	movw	r3, #12684	; 0x318c
   20ba0:	movt	r3, #5
   20ba4:	ldr	r0, [r3]
   20ba8:	ldr	r3, [fp, #-16]
   20bac:	str	r3, [sp]
   20bb0:	ldr	r3, [fp, #4]
   20bb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20bb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20bbc:	bl	3e34c <__assert_fail@plt+0x2d10c>
   20bc0:	mov	r0, #0
   20bc4:	bl	1112c <exit@plt>
   20bc8:	nop	{0}
   20bcc:	movw	r3, #12688	; 0x3190
   20bd0:	movt	r3, #5
   20bd4:	ldr	r2, [fp, #-8]
   20bd8:	str	r2, [r3]
   20bdc:	movw	r3, #12672	; 0x3180
   20be0:	movt	r3, #5
   20be4:	mov	r2, #0
   20be8:	str	r2, [r3]
   20bec:	nop	{0}
   20bf0:	sub	sp, fp, #4
   20bf4:	ldr	fp, [sp]
   20bf8:	add	sp, sp, #4
   20bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   20c00:	str	fp, [sp, #-8]!
   20c04:	str	lr, [sp, #4]
   20c08:	add	fp, sp, #4
   20c0c:	sub	sp, sp, #40	; 0x28
   20c10:	str	r0, [fp, #-24]	; 0xffffffe8
   20c14:	str	r1, [fp, #-28]	; 0xffffffe4
   20c18:	str	r2, [fp, #-32]	; 0xffffffe0
   20c1c:	str	r3, [fp, #-36]	; 0xffffffdc
   20c20:	movw	r3, #12688	; 0x3190
   20c24:	movt	r3, #5
   20c28:	ldr	r3, [r3]
   20c2c:	str	r3, [fp, #-8]
   20c30:	movw	r3, #12688	; 0x3190
   20c34:	movt	r3, #5
   20c38:	mov	r2, #1
   20c3c:	str	r2, [r3]
   20c40:	ldrb	r3, [fp, #8]
   20c44:	cmp	r3, #0
   20c48:	beq	20c58 <__assert_fail@plt+0xfa18>
   20c4c:	movw	r3, #7076	; 0x1ba4
   20c50:	movt	r3, #4
   20c54:	b	20c60 <__assert_fail@plt+0xfa20>
   20c58:	movw	r3, #7072	; 0x1ba0
   20c5c:	movt	r3, #4
   20c60:	str	r3, [fp, #-12]
   20c64:	mov	r3, #0
   20c68:	str	r3, [sp]
   20c6c:	movw	r3, #7024	; 0x1b70
   20c70:	movt	r3, #4
   20c74:	ldr	r2, [fp, #-12]
   20c78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20c80:	bl	11114 <getopt_long@plt>
   20c84:	str	r0, [fp, #-16]
   20c88:	ldr	r3, [fp, #-16]
   20c8c:	cmn	r3, #1
   20c90:	beq	20d10 <__assert_fail@plt+0xfad0>
   20c94:	ldr	r3, [fp, #-16]
   20c98:	cmp	r3, #104	; 0x68
   20c9c:	beq	20cb0 <__assert_fail@plt+0xfa70>
   20ca0:	ldr	r3, [fp, #-16]
   20ca4:	cmp	r3, #118	; 0x76
   20ca8:	beq	20cc0 <__assert_fail@plt+0xfa80>
   20cac:	b	20cf4 <__assert_fail@plt+0xfab4>
   20cb0:	ldr	r3, [fp, #12]
   20cb4:	mov	r0, #0
   20cb8:	blx	r3
   20cbc:	b	20d14 <__assert_fail@plt+0xfad4>
   20cc0:	add	r3, fp, #16
   20cc4:	str	r3, [fp, #-20]	; 0xffffffec
   20cc8:	movw	r3, #12684	; 0x318c
   20ccc:	movt	r3, #5
   20cd0:	ldr	r0, [r3]
   20cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   20cd8:	str	r3, [sp]
   20cdc:	ldr	r3, [fp, #4]
   20ce0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20ce4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20ce8:	bl	3e34c <__assert_fail@plt+0x2d10c>
   20cec:	mov	r0, #0
   20cf0:	bl	1112c <exit@plt>
   20cf4:	movw	r3, #12580	; 0x3124
   20cf8:	movt	r3, #5
   20cfc:	ldr	r2, [r3]
   20d00:	ldr	r3, [fp, #12]
   20d04:	mov	r0, r2
   20d08:	blx	r3
   20d0c:	b	20d14 <__assert_fail@plt+0xfad4>
   20d10:	nop	{0}
   20d14:	movw	r3, #12688	; 0x3190
   20d18:	movt	r3, #5
   20d1c:	ldr	r2, [fp, #-8]
   20d20:	str	r2, [r3]
   20d24:	nop	{0}
   20d28:	sub	sp, fp, #4
   20d2c:	ldr	fp, [sp]
   20d30:	add	sp, sp, #4
   20d34:	pop	{pc}		; (ldr pc, [sp], #4)
   20d38:	str	fp, [sp, #-8]!
   20d3c:	str	lr, [sp, #4]
   20d40:	add	fp, sp, #4
   20d44:	sub	sp, sp, #64	; 0x40
   20d48:	str	r0, [fp, #-64]	; 0xffffffc0
   20d4c:	str	r1, [fp, #-68]	; 0xffffffbc
   20d50:	bl	11084 <__ctype_get_mb_cur_max@plt>
   20d54:	mov	r3, r0
   20d58:	cmp	r3, #1
   20d5c:	bls	20e38 <__assert_fail@plt+0xfbf8>
   20d60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20d64:	uxtb	r3, r3
   20d68:	cmp	r3, #47	; 0x2f
   20d6c:	bls	20e38 <__assert_fail@plt+0xfbf8>
   20d70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20d74:	str	r3, [fp, #-44]	; 0xffffffd4
   20d78:	mov	r3, #0
   20d7c:	strb	r3, [fp, #-60]	; 0xffffffc4
   20d80:	sub	r3, fp, #60	; 0x3c
   20d84:	add	r3, r3, #4
   20d88:	mov	r2, #8
   20d8c:	mov	r1, #0
   20d90:	mov	r0, r3
   20d94:	bl	1118c <memset@plt>
   20d98:	mov	r3, #0
   20d9c:	strb	r3, [fp, #-48]	; 0xffffffd0
   20da0:	sub	r3, fp, #60	; 0x3c
   20da4:	mov	r0, r3
   20da8:	bl	20f48 <__assert_fail@plt+0xfd08>
   20dac:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   20db0:	eor	r3, r3, #1
   20db4:	uxtb	r3, r3
   20db8:	cmp	r3, #0
   20dbc:	bne	20dcc <__assert_fail@plt+0xfb8c>
   20dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20dc4:	cmp	r3, #0
   20dc8:	beq	20dd4 <__assert_fail@plt+0xfb94>
   20dcc:	mov	r3, #1
   20dd0:	b	20dd8 <__assert_fail@plt+0xfb98>
   20dd4:	mov	r3, #0
   20dd8:	cmp	r3, #0
   20ddc:	beq	20e2c <__assert_fail@plt+0xfbec>
   20de0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20de4:	cmp	r3, #1
   20de8:	bne	20e04 <__assert_fail@plt+0xfbc4>
   20dec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20df0:	ldrb	r2, [r3]
   20df4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20df8:	uxtb	r3, r3
   20dfc:	cmp	r2, r3
   20e00:	beq	20e20 <__assert_fail@plt+0xfbe0>
   20e04:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20e0c:	add	r3, r2, r3
   20e10:	str	r3, [fp, #-44]	; 0xffffffd4
   20e14:	mov	r3, #0
   20e18:	strb	r3, [fp, #-48]	; 0xffffffd0
   20e1c:	b	20da0 <__assert_fail@plt+0xfb60>
   20e20:	nop	{0}
   20e24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20e28:	b	20e48 <__assert_fail@plt+0xfc08>
   20e2c:	nop	{0}
   20e30:	mov	r3, #0
   20e34:	b	20e48 <__assert_fail@plt+0xfc08>
   20e38:	ldr	r1, [fp, #-68]	; 0xffffffbc
   20e3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20e40:	bl	11150 <strchr@plt>
   20e44:	mov	r3, r0
   20e48:	mov	r0, r3
   20e4c:	sub	sp, fp, #4
   20e50:	ldr	fp, [sp]
   20e54:	add	sp, sp, #4
   20e58:	pop	{pc}		; (ldr pc, [sp], #4)
   20e5c:	str	fp, [sp, #-8]!
   20e60:	str	lr, [sp, #4]
   20e64:	add	fp, sp, #4
   20e68:	sub	sp, sp, #72	; 0x48
   20e6c:	str	r0, [fp, #-72]	; 0xffffffb8
   20e70:	bl	11084 <__ctype_get_mb_cur_max@plt>
   20e74:	mov	r3, r0
   20e78:	cmp	r3, #1
   20e7c:	bls	20f28 <__assert_fail@plt+0xfce8>
   20e80:	mov	r3, #0
   20e84:	str	r3, [fp, #-8]
   20e88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   20e8c:	str	r3, [fp, #-48]	; 0xffffffd0
   20e90:	mov	r3, #0
   20e94:	strb	r3, [fp, #-64]	; 0xffffffc0
   20e98:	sub	r3, fp, #64	; 0x40
   20e9c:	add	r3, r3, #4
   20ea0:	mov	r2, #8
   20ea4:	mov	r1, #0
   20ea8:	mov	r0, r3
   20eac:	bl	1118c <memset@plt>
   20eb0:	mov	r3, #0
   20eb4:	strb	r3, [fp, #-52]	; 0xffffffcc
   20eb8:	b	20ee0 <__assert_fail@plt+0xfca0>
   20ebc:	ldr	r3, [fp, #-8]
   20ec0:	add	r3, r3, #1
   20ec4:	str	r3, [fp, #-8]
   20ec8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20ecc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20ed0:	add	r3, r2, r3
   20ed4:	str	r3, [fp, #-48]	; 0xffffffd0
   20ed8:	mov	r3, #0
   20edc:	strb	r3, [fp, #-52]	; 0xffffffcc
   20ee0:	sub	r3, fp, #64	; 0x40
   20ee4:	mov	r0, r3
   20ee8:	bl	20f48 <__assert_fail@plt+0xfd08>
   20eec:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   20ef0:	eor	r3, r3, #1
   20ef4:	uxtb	r3, r3
   20ef8:	cmp	r3, #0
   20efc:	bne	20f0c <__assert_fail@plt+0xfccc>
   20f00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20f04:	cmp	r3, #0
   20f08:	beq	20f14 <__assert_fail@plt+0xfcd4>
   20f0c:	mov	r3, #1
   20f10:	b	20f18 <__assert_fail@plt+0xfcd8>
   20f14:	mov	r3, #0
   20f18:	cmp	r3, #0
   20f1c:	bne	20ebc <__assert_fail@plt+0xfc7c>
   20f20:	ldr	r3, [fp, #-8]
   20f24:	b	20f34 <__assert_fail@plt+0xfcf4>
   20f28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20f2c:	bl	11144 <strlen@plt>
   20f30:	mov	r3, r0
   20f34:	mov	r0, r3
   20f38:	sub	sp, fp, #4
   20f3c:	ldr	fp, [sp]
   20f40:	add	sp, sp, #4
   20f44:	pop	{pc}		; (ldr pc, [sp], #4)
   20f48:	strd	r4, [sp, #-20]!	; 0xffffffec
   20f4c:	str	r6, [sp, #8]
   20f50:	str	fp, [sp, #12]
   20f54:	str	lr, [sp, #16]
   20f58:	add	fp, sp, #16
   20f5c:	sub	sp, sp, #12
   20f60:	str	r0, [fp, #-24]	; 0xffffffe8
   20f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f68:	ldrb	r3, [r3, #12]
   20f6c:	cmp	r3, #0
   20f70:	bne	211a4 <__assert_fail@plt+0xff64>
   20f74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f78:	ldrb	r3, [r3]
   20f7c:	cmp	r3, #0
   20f80:	bne	21024 <__assert_fail@plt+0xfde4>
   20f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f88:	ldr	r3, [r3, #16]
   20f8c:	ldrb	r3, [r3]
   20f90:	mov	r0, r3
   20f94:	bl	3fcb0 <__assert_fail@plt+0x2ea70>
   20f98:	mov	r3, r0
   20f9c:	cmp	r3, #0
   20fa0:	beq	20fd8 <__assert_fail@plt+0xfd98>
   20fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20fa8:	mov	r2, #1
   20fac:	str	r2, [r3, #20]
   20fb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20fb4:	ldr	r3, [r3, #16]
   20fb8:	ldrb	r3, [r3]
   20fbc:	mov	r2, r3
   20fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20fc4:	str	r2, [r3, #28]
   20fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20fcc:	mov	r2, #1
   20fd0:	strb	r2, [r3, #24]
   20fd4:	b	21194 <__assert_fail@plt+0xff54>
   20fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20fdc:	add	r3, r3, #4
   20fe0:	mov	r0, r3
   20fe4:	bl	11018 <mbsinit@plt>
   20fe8:	mov	r3, r0
   20fec:	cmp	r3, #0
   20ff0:	bne	21014 <__assert_fail@plt+0xfdd4>
   20ff4:	movw	r3, #7164	; 0x1bfc
   20ff8:	movt	r3, #4
   20ffc:	mov	r2, #143	; 0x8f
   21000:	movw	r1, #7080	; 0x1ba8
   21004:	movt	r1, #4
   21008:	movw	r0, #7096	; 0x1bb8
   2100c:	movt	r0, #4
   21010:	bl	11240 <__assert_fail@plt>
   21014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21018:	mov	r2, #1
   2101c:	strb	r2, [r3]
   21020:	b	21028 <__assert_fail@plt+0xfde8>
   21024:	nop	{0}
   21028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2102c:	add	r4, r3, #28
   21030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21034:	ldr	r5, [r3, #16]
   21038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2103c:	ldr	r6, [r3, #16]
   21040:	bl	11084 <__ctype_get_mb_cur_max@plt>
   21044:	mov	r3, r0
   21048:	mov	r1, r3
   2104c:	mov	r0, r6
   21050:	bl	3d3f0 <__assert_fail@plt+0x2c1b0>
   21054:	mov	r2, r0
   21058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2105c:	add	r3, r3, #4
   21060:	mov	r1, r5
   21064:	mov	r0, r4
   21068:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   2106c:	mov	r2, r0
   21070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21074:	str	r2, [r3, #20]
   21078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2107c:	ldr	r3, [r3, #20]
   21080:	cmn	r3, #1
   21084:	bne	210a4 <__assert_fail@plt+0xfe64>
   21088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2108c:	mov	r2, #1
   21090:	str	r2, [r3, #20]
   21094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21098:	mov	r2, #0
   2109c:	strb	r2, [r3, #24]
   210a0:	b	21194 <__assert_fail@plt+0xff54>
   210a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   210a8:	ldr	r3, [r3, #20]
   210ac:	cmn	r3, #2
   210b0:	bne	210e0 <__assert_fail@plt+0xfea0>
   210b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   210b8:	ldr	r3, [r3, #16]
   210bc:	mov	r0, r3
   210c0:	bl	11144 <strlen@plt>
   210c4:	mov	r2, r0
   210c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   210cc:	str	r2, [r3, #20]
   210d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   210d4:	mov	r2, #0
   210d8:	strb	r2, [r3, #24]
   210dc:	b	21194 <__assert_fail@plt+0xff54>
   210e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   210e4:	ldr	r3, [r3, #20]
   210e8:	cmp	r3, #0
   210ec:	bne	21160 <__assert_fail@plt+0xff20>
   210f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   210f4:	mov	r2, #1
   210f8:	str	r2, [r3, #20]
   210fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21100:	ldr	r3, [r3, #16]
   21104:	ldrb	r3, [r3]
   21108:	cmp	r3, #0
   2110c:	beq	21130 <__assert_fail@plt+0xfef0>
   21110:	movw	r3, #7164	; 0x1bfc
   21114:	movt	r3, #4
   21118:	mov	r2, #171	; 0xab
   2111c:	movw	r1, #7080	; 0x1ba8
   21120:	movt	r1, #4
   21124:	movw	r0, #7120	; 0x1bd0
   21128:	movt	r0, #4
   2112c:	bl	11240 <__assert_fail@plt>
   21130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21134:	ldr	r3, [r3, #28]
   21138:	cmp	r3, #0
   2113c:	beq	21160 <__assert_fail@plt+0xff20>
   21140:	movw	r3, #7164	; 0x1bfc
   21144:	movt	r3, #4
   21148:	mov	r2, #172	; 0xac
   2114c:	movw	r1, #7080	; 0x1ba8
   21150:	movt	r1, #4
   21154:	movw	r0, #7144	; 0x1be8
   21158:	movt	r0, #4
   2115c:	bl	11240 <__assert_fail@plt>
   21160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21164:	mov	r2, #1
   21168:	strb	r2, [r3, #24]
   2116c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21170:	add	r3, r3, #4
   21174:	mov	r0, r3
   21178:	bl	11018 <mbsinit@plt>
   2117c:	mov	r3, r0
   21180:	cmp	r3, #0
   21184:	beq	21194 <__assert_fail@plt+0xff54>
   21188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2118c:	mov	r2, #0
   21190:	strb	r2, [r3]
   21194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21198:	mov	r2, #1
   2119c:	strb	r2, [r3, #12]
   211a0:	b	211a8 <__assert_fail@plt+0xff68>
   211a4:	nop	{0}
   211a8:	sub	sp, fp, #16
   211ac:	ldrd	r4, [sp]
   211b0:	ldr	r6, [sp, #8]
   211b4:	ldr	fp, [sp, #12]
   211b8:	add	sp, sp, #16
   211bc:	pop	{pc}		; (ldr pc, [sp], #4)
   211c0:	push	{fp}		; (str fp, [sp, #-4]!)
   211c4:	add	fp, sp, #0
   211c8:	sub	sp, sp, #12
   211cc:	str	r0, [fp, #-8]
   211d0:	str	r1, [fp, #-12]
   211d4:	ldr	r3, [fp, #-8]
   211d8:	ldr	r2, [r3, #16]
   211dc:	ldr	r3, [fp, #-12]
   211e0:	add	r2, r2, r3
   211e4:	ldr	r3, [fp, #-8]
   211e8:	str	r2, [r3, #16]
   211ec:	nop	{0}
   211f0:	add	sp, fp, #0
   211f4:	pop	{fp}		; (ldr fp, [sp], #4)
   211f8:	bx	lr
   211fc:	str	fp, [sp, #-8]!
   21200:	str	lr, [sp, #4]
   21204:	add	fp, sp, #4
   21208:	sub	sp, sp, #8
   2120c:	str	r0, [fp, #-8]
   21210:	str	r1, [fp, #-12]
   21214:	ldr	r3, [fp, #-12]
   21218:	ldrb	r2, [r3]
   2121c:	ldr	r3, [fp, #-8]
   21220:	strb	r2, [r3]
   21224:	ldr	r3, [fp, #-8]
   21228:	ldrb	r3, [r3]
   2122c:	cmp	r3, #0
   21230:	beq	21254 <__assert_fail@plt+0x10014>
   21234:	ldr	r3, [fp, #-8]
   21238:	add	r0, r3, #4
   2123c:	ldr	r3, [fp, #-12]
   21240:	add	r3, r3, #4
   21244:	mov	r2, #8
   21248:	mov	r1, r3
   2124c:	bl	10fe8 <memcpy@plt>
   21250:	b	2126c <__assert_fail@plt+0x1002c>
   21254:	ldr	r3, [fp, #-8]
   21258:	add	r3, r3, #4
   2125c:	mov	r2, #8
   21260:	mov	r1, #0
   21264:	mov	r0, r3
   21268:	bl	1118c <memset@plt>
   2126c:	ldr	r3, [fp, #-12]
   21270:	ldrb	r2, [r3, #12]
   21274:	ldr	r3, [fp, #-8]
   21278:	strb	r2, [r3, #12]
   2127c:	ldr	r3, [fp, #-8]
   21280:	add	r2, r3, #16
   21284:	ldr	r3, [fp, #-12]
   21288:	add	r3, r3, #16
   2128c:	mov	r1, r3
   21290:	mov	r0, r2
   21294:	bl	3fbe8 <__assert_fail@plt+0x2e9a8>
   21298:	nop	{0}
   2129c:	sub	sp, fp, #4
   212a0:	ldr	fp, [sp]
   212a4:	add	sp, sp, #4
   212a8:	pop	{pc}		; (ldr pc, [sp], #4)
   212ac:	str	fp, [sp, #-8]!
   212b0:	str	lr, [sp, #4]
   212b4:	add	fp, sp, #4
   212b8:	sub	sp, sp, #16
   212bc:	str	r0, [fp, #-16]
   212c0:	ldr	r3, [fp, #-16]
   212c4:	cmp	r3, #0
   212c8:	bne	212f0 <__assert_fail@plt+0x100b0>
   212cc:	movw	r3, #12680	; 0x3188
   212d0:	movt	r3, #5
   212d4:	ldr	r3, [r3]
   212d8:	mov	r2, #55	; 0x37
   212dc:	mov	r1, #1
   212e0:	movw	r0, #7184	; 0x1c10
   212e4:	movt	r0, #4
   212e8:	bl	1106c <fwrite@plt>
   212ec:	bl	11228 <abort@plt>
   212f0:	mov	r1, #47	; 0x2f
   212f4:	ldr	r0, [fp, #-16]
   212f8:	bl	111ec <strrchr@plt>
   212fc:	str	r0, [fp, #-8]
   21300:	ldr	r3, [fp, #-8]
   21304:	cmp	r3, #0
   21308:	beq	21318 <__assert_fail@plt+0x100d8>
   2130c:	ldr	r3, [fp, #-8]
   21310:	add	r3, r3, #1
   21314:	b	2131c <__assert_fail@plt+0x100dc>
   21318:	ldr	r3, [fp, #-16]
   2131c:	str	r3, [fp, #-12]
   21320:	ldr	r2, [fp, #-12]
   21324:	ldr	r3, [fp, #-16]
   21328:	sub	r3, r2, r3
   2132c:	cmp	r3, #6
   21330:	ble	213a0 <__assert_fail@plt+0x10160>
   21334:	ldr	r3, [fp, #-12]
   21338:	sub	r3, r3, #7
   2133c:	mov	r2, #7
   21340:	movw	r1, #7240	; 0x1c48
   21344:	movt	r1, #4
   21348:	mov	r0, r3
   2134c:	bl	1121c <strncmp@plt>
   21350:	mov	r3, r0
   21354:	cmp	r3, #0
   21358:	bne	213a0 <__assert_fail@plt+0x10160>
   2135c:	ldr	r3, [fp, #-12]
   21360:	str	r3, [fp, #-16]
   21364:	mov	r2, #3
   21368:	movw	r1, #7248	; 0x1c50
   2136c:	movt	r1, #4
   21370:	ldr	r0, [fp, #-12]
   21374:	bl	1121c <strncmp@plt>
   21378:	mov	r3, r0
   2137c:	cmp	r3, #0
   21380:	bne	213a0 <__assert_fail@plt+0x10160>
   21384:	ldr	r3, [fp, #-12]
   21388:	add	r3, r3, #3
   2138c:	str	r3, [fp, #-16]
   21390:	movw	r3, #12664	; 0x3178
   21394:	movt	r3, #5
   21398:	ldr	r2, [fp, #-16]
   2139c:	str	r2, [r3]
   213a0:	movw	r3, #12708	; 0x31a4
   213a4:	movt	r3, #5
   213a8:	ldr	r2, [fp, #-16]
   213ac:	str	r2, [r3]
   213b0:	movw	r3, #12668	; 0x317c
   213b4:	movt	r3, #5
   213b8:	ldr	r2, [fp, #-16]
   213bc:	str	r2, [r3]
   213c0:	nop	{0}
   213c4:	sub	sp, fp, #4
   213c8:	ldr	fp, [sp]
   213cc:	add	sp, sp, #4
   213d0:	pop	{pc}		; (ldr pc, [sp], #4)
   213d4:	str	fp, [sp, #-8]!
   213d8:	str	lr, [sp, #4]
   213dc:	add	fp, sp, #4
   213e0:	sub	sp, sp, #16
   213e4:	str	r0, [fp, #-16]
   213e8:	bl	11168 <__errno_location@plt>
   213ec:	mov	r3, r0
   213f0:	ldr	r3, [r3]
   213f4:	str	r3, [fp, #-8]
   213f8:	ldr	r3, [fp, #-16]
   213fc:	cmp	r3, #0
   21400:	beq	2140c <__assert_fail@plt+0x101cc>
   21404:	ldr	r3, [fp, #-16]
   21408:	b	21414 <__assert_fail@plt+0x101d4>
   2140c:	movw	r3, #12712	; 0x31a8
   21410:	movt	r3, #5
   21414:	mov	r1, #48	; 0x30
   21418:	mov	r0, r3
   2141c:	bl	3eca8 <__assert_fail@plt+0x2da68>
   21420:	mov	r3, r0
   21424:	str	r3, [fp, #-12]
   21428:	bl	11168 <__errno_location@plt>
   2142c:	mov	r2, r0
   21430:	ldr	r3, [fp, #-8]
   21434:	str	r3, [r2]
   21438:	ldr	r3, [fp, #-12]
   2143c:	mov	r0, r3
   21440:	sub	sp, fp, #4
   21444:	ldr	fp, [sp]
   21448:	add	sp, sp, #4
   2144c:	pop	{pc}		; (ldr pc, [sp], #4)
   21450:	push	{fp}		; (str fp, [sp, #-4]!)
   21454:	add	fp, sp, #0
   21458:	sub	sp, sp, #12
   2145c:	str	r0, [fp, #-8]
   21460:	ldr	r3, [fp, #-8]
   21464:	cmp	r3, #0
   21468:	beq	21474 <__assert_fail@plt+0x10234>
   2146c:	ldr	r3, [fp, #-8]
   21470:	b	2147c <__assert_fail@plt+0x1023c>
   21474:	movw	r3, #12712	; 0x31a8
   21478:	movt	r3, #5
   2147c:	ldr	r3, [r3]
   21480:	mov	r0, r3
   21484:	add	sp, fp, #0
   21488:	pop	{fp}		; (ldr fp, [sp], #4)
   2148c:	bx	lr
   21490:	push	{fp}		; (str fp, [sp, #-4]!)
   21494:	add	fp, sp, #0
   21498:	sub	sp, sp, #12
   2149c:	str	r0, [fp, #-8]
   214a0:	str	r1, [fp, #-12]
   214a4:	ldr	r3, [fp, #-8]
   214a8:	cmp	r3, #0
   214ac:	beq	214b8 <__assert_fail@plt+0x10278>
   214b0:	ldr	r3, [fp, #-8]
   214b4:	b	214c0 <__assert_fail@plt+0x10280>
   214b8:	movw	r3, #12712	; 0x31a8
   214bc:	movt	r3, #5
   214c0:	ldr	r2, [fp, #-12]
   214c4:	str	r2, [r3]
   214c8:	nop	{0}
   214cc:	add	sp, fp, #0
   214d0:	pop	{fp}		; (ldr fp, [sp], #4)
   214d4:	bx	lr
   214d8:	push	{fp}		; (str fp, [sp, #-4]!)
   214dc:	add	fp, sp, #0
   214e0:	sub	sp, sp, #36	; 0x24
   214e4:	str	r0, [fp, #-24]	; 0xffffffe8
   214e8:	mov	r3, r1
   214ec:	str	r2, [fp, #-32]	; 0xffffffe0
   214f0:	strb	r3, [fp, #-25]	; 0xffffffe7
   214f4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   214f8:	strb	r3, [fp, #-5]
   214fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21500:	cmp	r3, #0
   21504:	beq	21510 <__assert_fail@plt+0x102d0>
   21508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2150c:	b	21518 <__assert_fail@plt+0x102d8>
   21510:	movw	r3, #12712	; 0x31a8
   21514:	movt	r3, #5
   21518:	add	r2, r3, #8
   2151c:	ldrb	r3, [fp, #-5]
   21520:	lsr	r3, r3, #5
   21524:	uxtb	r3, r3
   21528:	lsl	r3, r3, #2
   2152c:	add	r3, r2, r3
   21530:	str	r3, [fp, #-12]
   21534:	ldrb	r3, [fp, #-5]
   21538:	and	r3, r3, #31
   2153c:	str	r3, [fp, #-16]
   21540:	ldr	r3, [fp, #-12]
   21544:	ldr	r2, [r3]
   21548:	ldr	r3, [fp, #-16]
   2154c:	lsr	r3, r2, r3
   21550:	and	r3, r3, #1
   21554:	str	r3, [fp, #-20]	; 0xffffffec
   21558:	ldr	r3, [fp, #-12]
   2155c:	ldr	r3, [r3]
   21560:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21564:	and	r1, r2, #1
   21568:	ldr	r2, [fp, #-20]	; 0xffffffec
   2156c:	eor	r1, r1, r2
   21570:	ldr	r2, [fp, #-16]
   21574:	lsl	r2, r1, r2
   21578:	eor	r2, r2, r3
   2157c:	ldr	r3, [fp, #-12]
   21580:	str	r2, [r3]
   21584:	ldr	r3, [fp, #-20]	; 0xffffffec
   21588:	mov	r0, r3
   2158c:	add	sp, fp, #0
   21590:	pop	{fp}		; (ldr fp, [sp], #4)
   21594:	bx	lr
   21598:	push	{fp}		; (str fp, [sp, #-4]!)
   2159c:	add	fp, sp, #0
   215a0:	sub	sp, sp, #20
   215a4:	str	r0, [fp, #-16]
   215a8:	str	r1, [fp, #-20]	; 0xffffffec
   215ac:	ldr	r3, [fp, #-16]
   215b0:	cmp	r3, #0
   215b4:	bne	215c4 <__assert_fail@plt+0x10384>
   215b8:	movw	r3, #12712	; 0x31a8
   215bc:	movt	r3, #5
   215c0:	str	r3, [fp, #-16]
   215c4:	ldr	r3, [fp, #-16]
   215c8:	ldr	r3, [r3, #4]
   215cc:	str	r3, [fp, #-8]
   215d0:	ldr	r3, [fp, #-16]
   215d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   215d8:	str	r2, [r3, #4]
   215dc:	ldr	r3, [fp, #-8]
   215e0:	mov	r0, r3
   215e4:	add	sp, fp, #0
   215e8:	pop	{fp}		; (ldr fp, [sp], #4)
   215ec:	bx	lr
   215f0:	str	fp, [sp, #-8]!
   215f4:	str	lr, [sp, #4]
   215f8:	add	fp, sp, #4
   215fc:	sub	sp, sp, #16
   21600:	str	r0, [fp, #-8]
   21604:	str	r1, [fp, #-12]
   21608:	str	r2, [fp, #-16]
   2160c:	ldr	r3, [fp, #-8]
   21610:	cmp	r3, #0
   21614:	bne	21624 <__assert_fail@plt+0x103e4>
   21618:	movw	r3, #12712	; 0x31a8
   2161c:	movt	r3, #5
   21620:	str	r3, [fp, #-8]
   21624:	ldr	r3, [fp, #-8]
   21628:	mov	r2, #10
   2162c:	str	r2, [r3]
   21630:	ldr	r3, [fp, #-12]
   21634:	cmp	r3, #0
   21638:	beq	21648 <__assert_fail@plt+0x10408>
   2163c:	ldr	r3, [fp, #-16]
   21640:	cmp	r3, #0
   21644:	bne	2164c <__assert_fail@plt+0x1040c>
   21648:	bl	11228 <abort@plt>
   2164c:	ldr	r3, [fp, #-8]
   21650:	ldr	r2, [fp, #-12]
   21654:	str	r2, [r3, #40]	; 0x28
   21658:	ldr	r3, [fp, #-8]
   2165c:	ldr	r2, [fp, #-16]
   21660:	str	r2, [r3, #44]	; 0x2c
   21664:	nop	{0}
   21668:	sub	sp, fp, #4
   2166c:	ldr	fp, [sp]
   21670:	add	sp, sp, #4
   21674:	pop	{pc}		; (ldr pc, [sp], #4)
   21678:	str	fp, [sp, #-8]!
   2167c:	str	lr, [sp, #4]
   21680:	add	fp, sp, #4
   21684:	sub	sp, sp, #56	; 0x38
   21688:	str	r0, [fp, #-56]	; 0xffffffc8
   2168c:	str	r1, [fp, #-60]	; 0xffffffc4
   21690:	sub	r1, fp, #52	; 0x34
   21694:	mov	r2, #0
   21698:	mov	r3, #0
   2169c:	strd	r2, [r1]
   216a0:	strd	r2, [r1, #8]
   216a4:	strd	r2, [r1, #16]
   216a8:	strd	r2, [r1, #24]
   216ac:	strd	r2, [r1, #32]
   216b0:	strd	r2, [r1, #40]	; 0x28
   216b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   216b8:	cmp	r3, #10
   216bc:	bne	216c4 <__assert_fail@plt+0x10484>
   216c0:	bl	11228 <abort@plt>
   216c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   216c8:	str	r3, [fp, #-52]	; 0xffffffcc
   216cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   216d0:	mov	r2, r3
   216d4:	sub	r3, fp, #52	; 0x34
   216d8:	ldrd	r0, [r3]
   216dc:	strd	r0, [r2]
   216e0:	ldrd	r0, [r3, #8]
   216e4:	strd	r0, [r2, #8]
   216e8:	ldrd	r0, [r3, #16]
   216ec:	strd	r0, [r2, #16]
   216f0:	ldrd	r0, [r3, #24]
   216f4:	strd	r0, [r2, #24]
   216f8:	ldrd	r0, [r3, #32]
   216fc:	strd	r0, [r2, #32]
   21700:	ldrd	r0, [r3, #40]	; 0x28
   21704:	strd	r0, [r2, #40]	; 0x28
   21708:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2170c:	sub	sp, fp, #4
   21710:	ldr	fp, [sp]
   21714:	add	sp, sp, #4
   21718:	pop	{pc}		; (ldr pc, [sp], #4)
   2171c:	str	fp, [sp, #-8]!
   21720:	str	lr, [sp, #4]
   21724:	add	fp, sp, #4
   21728:	sub	sp, sp, #16
   2172c:	str	r0, [fp, #-16]
   21730:	str	r1, [fp, #-20]	; 0xffffffec
   21734:	ldr	r0, [fp, #-16]
   21738:	bl	11138 <gettext@plt>
   2173c:	str	r0, [fp, #-8]
   21740:	ldr	r2, [fp, #-8]
   21744:	ldr	r3, [fp, #-16]
   21748:	cmp	r2, r3
   2174c:	beq	21758 <__assert_fail@plt+0x10518>
   21750:	ldr	r3, [fp, #-8]
   21754:	b	21808 <__assert_fail@plt+0x105c8>
   21758:	bl	3fb1c <__assert_fail@plt+0x2e8dc>
   2175c:	str	r0, [fp, #-12]
   21760:	movw	r1, #7440	; 0x1d10
   21764:	movt	r1, #4
   21768:	ldr	r0, [fp, #-12]
   2176c:	bl	3f058 <__assert_fail@plt+0x2de18>
   21770:	mov	r3, r0
   21774:	cmp	r3, #0
   21778:	bne	217a4 <__assert_fail@plt+0x10564>
   2177c:	ldr	r3, [fp, #-16]
   21780:	ldrb	r3, [r3]
   21784:	cmp	r3, #96	; 0x60
   21788:	bne	21798 <__assert_fail@plt+0x10558>
   2178c:	movw	r3, #7448	; 0x1d18
   21790:	movt	r3, #4
   21794:	b	21808 <__assert_fail@plt+0x105c8>
   21798:	movw	r3, #7452	; 0x1d1c
   2179c:	movt	r3, #4
   217a0:	b	21808 <__assert_fail@plt+0x105c8>
   217a4:	movw	r1, #7456	; 0x1d20
   217a8:	movt	r1, #4
   217ac:	ldr	r0, [fp, #-12]
   217b0:	bl	3f058 <__assert_fail@plt+0x2de18>
   217b4:	mov	r3, r0
   217b8:	cmp	r3, #0
   217bc:	bne	217e8 <__assert_fail@plt+0x105a8>
   217c0:	ldr	r3, [fp, #-16]
   217c4:	ldrb	r3, [r3]
   217c8:	cmp	r3, #96	; 0x60
   217cc:	bne	217dc <__assert_fail@plt+0x1059c>
   217d0:	movw	r3, #7464	; 0x1d28
   217d4:	movt	r3, #4
   217d8:	b	21808 <__assert_fail@plt+0x105c8>
   217dc:	movw	r3, #7468	; 0x1d2c
   217e0:	movt	r3, #4
   217e4:	b	21808 <__assert_fail@plt+0x105c8>
   217e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   217ec:	cmp	r3, #9
   217f0:	bne	21800 <__assert_fail@plt+0x105c0>
   217f4:	movw	r3, #7472	; 0x1d30
   217f8:	movt	r3, #4
   217fc:	b	21808 <__assert_fail@plt+0x105c8>
   21800:	movw	r3, #7476	; 0x1d34
   21804:	movt	r3, #4
   21808:	mov	r0, r3
   2180c:	sub	sp, fp, #4
   21810:	ldr	fp, [sp]
   21814:	add	sp, sp, #4
   21818:	pop	{pc}		; (ldr pc, [sp], #4)
   2181c:	str	r4, [sp, #-12]!
   21820:	str	fp, [sp, #4]
   21824:	str	lr, [sp, #8]
   21828:	add	fp, sp, #8
   2182c:	sub	sp, sp, #116	; 0x74
   21830:	str	r0, [fp, #-88]	; 0xffffffa8
   21834:	str	r1, [fp, #-92]	; 0xffffffa4
   21838:	str	r2, [fp, #-96]	; 0xffffffa0
   2183c:	str	r3, [fp, #-100]	; 0xffffff9c
   21840:	mov	r3, #0
   21844:	str	r3, [fp, #-20]	; 0xffffffec
   21848:	mov	r3, #0
   2184c:	str	r3, [fp, #-24]	; 0xffffffe8
   21850:	mov	r3, #0
   21854:	str	r3, [fp, #-28]	; 0xffffffe4
   21858:	mov	r3, #0
   2185c:	str	r3, [fp, #-32]	; 0xffffffe0
   21860:	mov	r3, #0
   21864:	strb	r3, [fp, #-33]	; 0xffffffdf
   21868:	bl	11084 <__ctype_get_mb_cur_max@plt>
   2186c:	mov	r3, r0
   21870:	cmp	r3, #1
   21874:	moveq	r3, #1
   21878:	movne	r3, #0
   2187c:	strb	r3, [fp, #-57]	; 0xffffffc7
   21880:	ldr	r3, [fp, #8]
   21884:	and	r3, r3, #2
   21888:	cmp	r3, #0
   2188c:	movne	r3, #1
   21890:	moveq	r3, #0
   21894:	strb	r3, [fp, #-34]	; 0xffffffde
   21898:	mov	r3, #0
   2189c:	strb	r3, [fp, #-35]	; 0xffffffdd
   218a0:	mov	r3, #0
   218a4:	strb	r3, [fp, #-36]	; 0xffffffdc
   218a8:	mov	r3, #1
   218ac:	strb	r3, [fp, #-37]	; 0xffffffdb
   218b0:	ldr	r3, [fp, #4]
   218b4:	cmp	r3, #10
   218b8:	ldrls	pc, [pc, r3, lsl #2]
   218bc:	b	21ad4 <__assert_fail@plt+0x10894>
   218c0:	andeq	r1, r2, r8, asr #21
   218c4:	andeq	r1, r2, r0, asr #20
   218c8:	andeq	r1, r2, r4, ror #20
   218cc:	andeq	r1, r2, r8, lsr sl
   218d0:	andeq	r1, r2, r8, asr #20
   218d4:	strdeq	r1, [r2], -ip
   218d8:	andeq	r1, r2, ip, ror #17
   218dc:	andeq	r1, r2, r0, ror #18
   218e0:	andeq	r1, r2, r4, ror r9
   218e4:	andeq	r1, r2, r4, ror r9
   218e8:	andeq	r1, r2, r4, ror r9
   218ec:	mov	r3, #5
   218f0:	str	r3, [fp, #4]
   218f4:	mov	r3, #1
   218f8:	strb	r3, [fp, #-34]	; 0xffffffde
   218fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21900:	eor	r3, r3, #1
   21904:	uxtb	r3, r3
   21908:	cmp	r3, #0
   2190c:	beq	21940 <__assert_fail@plt+0x10700>
   21910:	ldr	r2, [fp, #-20]	; 0xffffffec
   21914:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21918:	cmp	r2, r3
   2191c:	bcs	21934 <__assert_fail@plt+0x106f4>
   21920:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21924:	ldr	r3, [fp, #-20]	; 0xffffffec
   21928:	add	r3, r2, r3
   2192c:	mov	r2, #34	; 0x22
   21930:	strb	r2, [r3]
   21934:	ldr	r3, [fp, #-20]	; 0xffffffec
   21938:	add	r3, r3, #1
   2193c:	str	r3, [fp, #-20]	; 0xffffffec
   21940:	mov	r3, #1
   21944:	strb	r3, [fp, #-33]	; 0xffffffdf
   21948:	movw	r3, #7472	; 0x1d30
   2194c:	movt	r3, #4
   21950:	str	r3, [fp, #-28]	; 0xffffffe4
   21954:	mov	r3, #1
   21958:	str	r3, [fp, #-32]	; 0xffffffe0
   2195c:	b	21ad8 <__assert_fail@plt+0x10898>
   21960:	mov	r3, #1
   21964:	strb	r3, [fp, #-33]	; 0xffffffdf
   21968:	mov	r3, #0
   2196c:	strb	r3, [fp, #-34]	; 0xffffffde
   21970:	b	21ad8 <__assert_fail@plt+0x10898>
   21974:	ldr	r3, [fp, #4]
   21978:	cmp	r3, #10
   2197c:	beq	219a8 <__assert_fail@plt+0x10768>
   21980:	ldr	r1, [fp, #4]
   21984:	movw	r0, #7480	; 0x1d38
   21988:	movt	r0, #4
   2198c:	bl	2171c <__assert_fail@plt+0x104dc>
   21990:	str	r0, [fp, #16]
   21994:	ldr	r1, [fp, #4]
   21998:	movw	r0, #7476	; 0x1d34
   2199c:	movt	r0, #4
   219a0:	bl	2171c <__assert_fail@plt+0x104dc>
   219a4:	str	r0, [fp, #20]
   219a8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   219ac:	eor	r3, r3, #1
   219b0:	uxtb	r3, r3
   219b4:	cmp	r3, #0
   219b8:	beq	21a18 <__assert_fail@plt+0x107d8>
   219bc:	ldr	r3, [fp, #16]
   219c0:	str	r3, [fp, #-28]	; 0xffffffe4
   219c4:	b	21a08 <__assert_fail@plt+0x107c8>
   219c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   219cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   219d0:	cmp	r2, r3
   219d4:	bcs	219f0 <__assert_fail@plt+0x107b0>
   219d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   219dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   219e0:	add	r3, r2, r3
   219e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   219e8:	ldrb	r2, [r2]
   219ec:	strb	r2, [r3]
   219f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   219f4:	add	r3, r3, #1
   219f8:	str	r3, [fp, #-20]	; 0xffffffec
   219fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a00:	add	r3, r3, #1
   21a04:	str	r3, [fp, #-28]	; 0xffffffe4
   21a08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a0c:	ldrb	r3, [r3]
   21a10:	cmp	r3, #0
   21a14:	bne	219c8 <__assert_fail@plt+0x10788>
   21a18:	mov	r3, #1
   21a1c:	strb	r3, [fp, #-33]	; 0xffffffdf
   21a20:	ldr	r3, [fp, #20]
   21a24:	str	r3, [fp, #-28]	; 0xffffffe4
   21a28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21a2c:	bl	11144 <strlen@plt>
   21a30:	str	r0, [fp, #-32]	; 0xffffffe0
   21a34:	b	21ad8 <__assert_fail@plt+0x10898>
   21a38:	mov	r3, #1
   21a3c:	strb	r3, [fp, #-33]	; 0xffffffdf
   21a40:	mov	r3, #1
   21a44:	strb	r3, [fp, #-34]	; 0xffffffde
   21a48:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21a4c:	eor	r3, r3, #1
   21a50:	uxtb	r3, r3
   21a54:	cmp	r3, #0
   21a58:	beq	21a64 <__assert_fail@plt+0x10824>
   21a5c:	mov	r3, #1
   21a60:	strb	r3, [fp, #-33]	; 0xffffffdf
   21a64:	mov	r3, #2
   21a68:	str	r3, [fp, #4]
   21a6c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21a70:	eor	r3, r3, #1
   21a74:	uxtb	r3, r3
   21a78:	cmp	r3, #0
   21a7c:	beq	21ab0 <__assert_fail@plt+0x10870>
   21a80:	ldr	r2, [fp, #-20]	; 0xffffffec
   21a84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21a88:	cmp	r2, r3
   21a8c:	bcs	21aa4 <__assert_fail@plt+0x10864>
   21a90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   21a98:	add	r3, r2, r3
   21a9c:	mov	r2, #39	; 0x27
   21aa0:	strb	r2, [r3]
   21aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21aa8:	add	r3, r3, #1
   21aac:	str	r3, [fp, #-20]	; 0xffffffec
   21ab0:	movw	r3, #7476	; 0x1d34
   21ab4:	movt	r3, #4
   21ab8:	str	r3, [fp, #-28]	; 0xffffffe4
   21abc:	mov	r3, #1
   21ac0:	str	r3, [fp, #-32]	; 0xffffffe0
   21ac4:	b	21ad8 <__assert_fail@plt+0x10898>
   21ac8:	mov	r3, #0
   21acc:	strb	r3, [fp, #-34]	; 0xffffffde
   21ad0:	b	21ad8 <__assert_fail@plt+0x10898>
   21ad4:	bl	11228 <abort@plt>
   21ad8:	mov	r3, #0
   21adc:	str	r3, [fp, #-16]
   21ae0:	b	22c7c <__assert_fail@plt+0x11a3c>
   21ae4:	mov	r3, #0
   21ae8:	strb	r3, [fp, #-40]	; 0xffffffd8
   21aec:	mov	r3, #0
   21af0:	strb	r3, [fp, #-41]	; 0xffffffd7
   21af4:	mov	r3, #0
   21af8:	strb	r3, [fp, #-42]	; 0xffffffd6
   21afc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   21b00:	cmp	r3, #0
   21b04:	beq	21ba0 <__assert_fail@plt+0x10960>
   21b08:	ldr	r3, [fp, #4]
   21b0c:	cmp	r3, #2
   21b10:	beq	21ba0 <__assert_fail@plt+0x10960>
   21b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b18:	cmp	r3, #0
   21b1c:	beq	21ba0 <__assert_fail@plt+0x10960>
   21b20:	ldr	r2, [fp, #-16]
   21b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b28:	add	r4, r2, r3
   21b2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21b30:	cmn	r3, #1
   21b34:	bne	21b58 <__assert_fail@plt+0x10918>
   21b38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b3c:	cmp	r3, #1
   21b40:	bls	21b58 <__assert_fail@plt+0x10918>
   21b44:	ldr	r0, [fp, #-96]	; 0xffffffa0
   21b48:	bl	11144 <strlen@plt>
   21b4c:	str	r0, [fp, #-100]	; 0xffffff9c
   21b50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21b54:	b	21b5c <__assert_fail@plt+0x1091c>
   21b58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21b5c:	cmp	r3, r4
   21b60:	bcc	21ba0 <__assert_fail@plt+0x10960>
   21b64:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21b68:	ldr	r3, [fp, #-16]
   21b6c:	add	r3, r2, r3
   21b70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21b74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21b78:	mov	r0, r3
   21b7c:	bl	11024 <memcmp@plt>
   21b80:	mov	r3, r0
   21b84:	cmp	r3, #0
   21b88:	bne	21ba0 <__assert_fail@plt+0x10960>
   21b8c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21b90:	cmp	r3, #0
   21b94:	bne	22e38 <__assert_fail@plt+0x11bf8>
   21b98:	mov	r3, #1
   21b9c:	strb	r3, [fp, #-40]	; 0xffffffd8
   21ba0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21ba4:	ldr	r3, [fp, #-16]
   21ba8:	add	r3, r2, r3
   21bac:	ldrb	r3, [r3]
   21bb0:	strb	r3, [fp, #-38]	; 0xffffffda
   21bb4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   21bb8:	cmp	r3, #126	; 0x7e
   21bbc:	ldrls	pc, [pc, r3, lsl #2]
   21bc0:	b	223f8 <__assert_fail@plt+0x111b8>
   21bc4:	andeq	r1, r2, r0, asr #27
   21bc8:	strdeq	r2, [r2], -r8
   21bcc:	strdeq	r2, [r2], -r8
   21bd0:	strdeq	r2, [r2], -r8
   21bd4:	strdeq	r2, [r2], -r8
   21bd8:	strdeq	r2, [r2], -r8
   21bdc:	strdeq	r2, [r2], -r8
   21be0:			; <UNDEFINED> instruction: 0x000221b4
   21be4:	andeq	r2, r2, r0, asr #3
   21be8:	strdeq	r2, [r2], -r0
   21bec:	ldrdeq	r2, [r2], -r8
   21bf0:	strdeq	r2, [r2], -ip
   21bf4:	andeq	r2, r2, ip, asr #3
   21bf8:	andeq	r2, r2, r4, ror #3
   21bfc:	strdeq	r2, [r2], -r8
   21c00:	strdeq	r2, [r2], -r8
   21c04:	strdeq	r2, [r2], -r8
   21c08:	strdeq	r2, [r2], -r8
   21c0c:	strdeq	r2, [r2], -r8
   21c10:	strdeq	r2, [r2], -r8
   21c14:	strdeq	r2, [r2], -r8
   21c18:	strdeq	r2, [r2], -r8
   21c1c:	strdeq	r2, [r2], -r8
   21c20:	strdeq	r2, [r2], -r8
   21c24:	strdeq	r2, [r2], -r8
   21c28:	strdeq	r2, [r2], -r8
   21c2c:	strdeq	r2, [r2], -r8
   21c30:	strdeq	r2, [r2], -r8
   21c34:	strdeq	r2, [r2], -r8
   21c38:	strdeq	r2, [r2], -r8
   21c3c:	strdeq	r2, [r2], -r8
   21c40:	strdeq	r2, [r2], -r8
   21c44:	ldrdeq	r2, [r2], -ip
   21c48:	andeq	r2, r2, r4, ror #5
   21c4c:	andeq	r2, r2, r4, ror #5
   21c50:	ldrdeq	r2, [r2], -r0
   21c54:	andeq	r2, r2, r4, ror #5
   21c58:	andeq	r2, r2, ip, ror #7
   21c5c:	andeq	r2, r2, r4, ror #5
   21c60:	andeq	r2, r2, r0, lsl #6
   21c64:	andeq	r2, r2, r4, ror #5
   21c68:	andeq	r2, r2, r4, ror #5
   21c6c:	andeq	r2, r2, r4, ror #5
   21c70:	andeq	r2, r2, ip, ror #7
   21c74:	andeq	r2, r2, ip, ror #7
   21c78:	andeq	r2, r2, ip, ror #7
   21c7c:	andeq	r2, r2, ip, ror #7
   21c80:	andeq	r2, r2, ip, ror #7
   21c84:	andeq	r2, r2, ip, ror #7
   21c88:	andeq	r2, r2, ip, ror #7
   21c8c:	andeq	r2, r2, ip, ror #7
   21c90:	andeq	r2, r2, ip, ror #7
   21c94:	andeq	r2, r2, ip, ror #7
   21c98:	andeq	r2, r2, ip, ror #7
   21c9c:	andeq	r2, r2, ip, ror #7
   21ca0:	andeq	r2, r2, ip, ror #7
   21ca4:	andeq	r2, r2, ip, ror #7
   21ca8:	andeq	r2, r2, ip, ror #7
   21cac:	andeq	r2, r2, ip, ror #7
   21cb0:	andeq	r2, r2, r4, ror #5
   21cb4:	andeq	r2, r2, r4, ror #5
   21cb8:	andeq	r2, r2, r4, ror #5
   21cbc:	andeq	r2, r2, r4, ror #5
   21cc0:	andeq	r1, r2, r0, lsr #31
   21cc4:	strdeq	r2, [r2], -r8
   21cc8:	andeq	r2, r2, ip, ror #7
   21ccc:	andeq	r2, r2, ip, ror #7
   21cd0:	andeq	r2, r2, ip, ror #7
   21cd4:	andeq	r2, r2, ip, ror #7
   21cd8:	andeq	r2, r2, ip, ror #7
   21cdc:	andeq	r2, r2, ip, ror #7
   21ce0:	andeq	r2, r2, ip, ror #7
   21ce4:	andeq	r2, r2, ip, ror #7
   21ce8:	andeq	r2, r2, ip, ror #7
   21cec:	andeq	r2, r2, ip, ror #7
   21cf0:	andeq	r2, r2, ip, ror #7
   21cf4:	andeq	r2, r2, ip, ror #7
   21cf8:	andeq	r2, r2, ip, ror #7
   21cfc:	andeq	r2, r2, ip, ror #7
   21d00:	andeq	r2, r2, ip, ror #7
   21d04:	andeq	r2, r2, ip, ror #7
   21d08:	andeq	r2, r2, ip, ror #7
   21d0c:	andeq	r2, r2, ip, ror #7
   21d10:	andeq	r2, r2, ip, ror #7
   21d14:	andeq	r2, r2, ip, ror #7
   21d18:	andeq	r2, r2, ip, ror #7
   21d1c:	andeq	r2, r2, ip, ror #7
   21d20:	andeq	r2, r2, ip, ror #7
   21d24:	andeq	r2, r2, ip, ror #7
   21d28:	andeq	r2, r2, ip, ror #7
   21d2c:	andeq	r2, r2, ip, ror #7
   21d30:	andeq	r2, r2, r4, ror #5
   21d34:	andeq	r2, r2, r8, lsl #4
   21d38:	andeq	r2, r2, ip, ror #7
   21d3c:	andeq	r2, r2, r4, ror #5
   21d40:	andeq	r2, r2, ip, ror #7
   21d44:	andeq	r2, r2, r4, ror #5
   21d48:	andeq	r2, r2, ip, ror #7
   21d4c:	andeq	r2, r2, ip, ror #7
   21d50:	andeq	r2, r2, ip, ror #7
   21d54:	andeq	r2, r2, ip, ror #7
   21d58:	andeq	r2, r2, ip, ror #7
   21d5c:	andeq	r2, r2, ip, ror #7
   21d60:	andeq	r2, r2, ip, ror #7
   21d64:	andeq	r2, r2, ip, ror #7
   21d68:	andeq	r2, r2, ip, ror #7
   21d6c:	andeq	r2, r2, ip, ror #7
   21d70:	andeq	r2, r2, ip, ror #7
   21d74:	andeq	r2, r2, ip, ror #7
   21d78:	andeq	r2, r2, ip, ror #7
   21d7c:	andeq	r2, r2, ip, ror #7
   21d80:	andeq	r2, r2, ip, ror #7
   21d84:	andeq	r2, r2, ip, ror #7
   21d88:	andeq	r2, r2, ip, ror #7
   21d8c:	andeq	r2, r2, ip, ror #7
   21d90:	andeq	r2, r2, ip, ror #7
   21d94:	andeq	r2, r2, ip, ror #7
   21d98:	andeq	r2, r2, ip, ror #7
   21d9c:	andeq	r2, r2, ip, ror #7
   21da0:	andeq	r2, r2, ip, ror #7
   21da4:	andeq	r2, r2, ip, ror #7
   21da8:	andeq	r2, r2, ip, ror #7
   21dac:	andeq	r2, r2, ip, ror #7
   21db0:	andeq	r2, r2, r8, lsl #5
   21db4:	andeq	r2, r2, r4, ror #5
   21db8:	andeq	r2, r2, r8, lsl #5
   21dbc:	ldrdeq	r2, [r2], -r0
   21dc0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   21dc4:	cmp	r3, #0
   21dc8:	beq	21f8c <__assert_fail@plt+0x10d4c>
   21dcc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21dd0:	cmp	r3, #0
   21dd4:	bne	22e40 <__assert_fail@plt+0x11c00>
   21dd8:	mov	r3, #1
   21ddc:	strb	r3, [fp, #-41]	; 0xffffffd7
   21de0:	ldr	r3, [fp, #4]
   21de4:	cmp	r3, #2
   21de8:	bne	21e98 <__assert_fail@plt+0x10c58>
   21dec:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   21df0:	eor	r3, r3, #1
   21df4:	uxtb	r3, r3
   21df8:	cmp	r3, #0
   21dfc:	beq	21e98 <__assert_fail@plt+0x10c58>
   21e00:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e04:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21e08:	cmp	r2, r3
   21e0c:	bcs	21e24 <__assert_fail@plt+0x10be4>
   21e10:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21e14:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e18:	add	r3, r2, r3
   21e1c:	mov	r2, #39	; 0x27
   21e20:	strb	r2, [r3]
   21e24:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e28:	add	r3, r3, #1
   21e2c:	str	r3, [fp, #-20]	; 0xffffffec
   21e30:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21e38:	cmp	r2, r3
   21e3c:	bcs	21e54 <__assert_fail@plt+0x10c14>
   21e40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e48:	add	r3, r2, r3
   21e4c:	mov	r2, #36	; 0x24
   21e50:	strb	r2, [r3]
   21e54:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e58:	add	r3, r3, #1
   21e5c:	str	r3, [fp, #-20]	; 0xffffffec
   21e60:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21e68:	cmp	r2, r3
   21e6c:	bcs	21e84 <__assert_fail@plt+0x10c44>
   21e70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e78:	add	r3, r2, r3
   21e7c:	mov	r2, #39	; 0x27
   21e80:	strb	r2, [r3]
   21e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e88:	add	r3, r3, #1
   21e8c:	str	r3, [fp, #-20]	; 0xffffffec
   21e90:	mov	r3, #1
   21e94:	strb	r3, [fp, #-35]	; 0xffffffdd
   21e98:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21ea0:	cmp	r2, r3
   21ea4:	bcs	21ebc <__assert_fail@plt+0x10c7c>
   21ea8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   21eb0:	add	r3, r2, r3
   21eb4:	mov	r2, #92	; 0x5c
   21eb8:	strb	r2, [r3]
   21ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ec0:	add	r3, r3, #1
   21ec4:	str	r3, [fp, #-20]	; 0xffffffec
   21ec8:	ldr	r3, [fp, #4]
   21ecc:	cmp	r3, #2
   21ed0:	beq	21f80 <__assert_fail@plt+0x10d40>
   21ed4:	ldr	r3, [fp, #-16]
   21ed8:	add	r3, r3, #1
   21edc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   21ee0:	cmp	r2, r3
   21ee4:	bls	21f80 <__assert_fail@plt+0x10d40>
   21ee8:	ldr	r3, [fp, #-16]
   21eec:	add	r3, r3, #1
   21ef0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21ef4:	add	r3, r2, r3
   21ef8:	ldrb	r3, [r3]
   21efc:	cmp	r3, #47	; 0x2f
   21f00:	bls	21f80 <__assert_fail@plt+0x10d40>
   21f04:	ldr	r3, [fp, #-16]
   21f08:	add	r3, r3, #1
   21f0c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21f10:	add	r3, r2, r3
   21f14:	ldrb	r3, [r3]
   21f18:	cmp	r3, #57	; 0x39
   21f1c:	bhi	21f80 <__assert_fail@plt+0x10d40>
   21f20:	ldr	r2, [fp, #-20]	; 0xffffffec
   21f24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21f28:	cmp	r2, r3
   21f2c:	bcs	21f44 <__assert_fail@plt+0x10d04>
   21f30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f38:	add	r3, r2, r3
   21f3c:	mov	r2, #48	; 0x30
   21f40:	strb	r2, [r3]
   21f44:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f48:	add	r3, r3, #1
   21f4c:	str	r3, [fp, #-20]	; 0xffffffec
   21f50:	ldr	r2, [fp, #-20]	; 0xffffffec
   21f54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21f58:	cmp	r2, r3
   21f5c:	bcs	21f74 <__assert_fail@plt+0x10d34>
   21f60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f68:	add	r3, r2, r3
   21f6c:	mov	r2, #48	; 0x30
   21f70:	strb	r2, [r3]
   21f74:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f78:	add	r3, r3, #1
   21f7c:	str	r3, [fp, #-20]	; 0xffffffec
   21f80:	mov	r3, #48	; 0x30
   21f84:	strb	r3, [fp, #-38]	; 0xffffffda
   21f88:	b	229c8 <__assert_fail@plt+0x11788>
   21f8c:	ldr	r3, [fp, #8]
   21f90:	and	r3, r3, #1
   21f94:	cmp	r3, #0
   21f98:	beq	229c8 <__assert_fail@plt+0x11788>
   21f9c:	b	22c70 <__assert_fail@plt+0x11a30>
   21fa0:	ldr	r3, [fp, #4]
   21fa4:	cmp	r3, #2
   21fa8:	beq	21fbc <__assert_fail@plt+0x10d7c>
   21fac:	ldr	r3, [fp, #4]
   21fb0:	cmp	r3, #5
   21fb4:	beq	21fcc <__assert_fail@plt+0x10d8c>
   21fb8:	b	221b0 <__assert_fail@plt+0x10f70>
   21fbc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21fc0:	cmp	r3, #0
   21fc4:	beq	221a4 <__assert_fail@plt+0x10f64>
   21fc8:	b	22e74 <__assert_fail@plt+0x11c34>
   21fcc:	ldr	r3, [fp, #8]
   21fd0:	and	r3, r3, #4
   21fd4:	cmp	r3, #0
   21fd8:	beq	221ac <__assert_fail@plt+0x10f6c>
   21fdc:	ldr	r3, [fp, #-16]
   21fe0:	add	r3, r3, #2
   21fe4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   21fe8:	cmp	r2, r3
   21fec:	bls	221ac <__assert_fail@plt+0x10f6c>
   21ff0:	ldr	r3, [fp, #-16]
   21ff4:	add	r3, r3, #1
   21ff8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21ffc:	add	r3, r2, r3
   22000:	ldrb	r3, [r3]
   22004:	cmp	r3, #63	; 0x3f
   22008:	bne	221ac <__assert_fail@plt+0x10f6c>
   2200c:	ldr	r3, [fp, #-16]
   22010:	add	r3, r3, #2
   22014:	ldr	r2, [fp, #-96]	; 0xffffffa0
   22018:	add	r3, r2, r3
   2201c:	ldrb	r3, [r3]
   22020:	sub	r3, r3, #33	; 0x21
   22024:	cmp	r3, #29
   22028:	ldrls	pc, [pc, r3, lsl #2]
   2202c:	b	2219c <__assert_fail@plt+0x10f5c>
   22030:	andeq	r2, r2, r8, lsr #1
   22034:	muleq	r2, ip, r1
   22038:	muleq	r2, ip, r1
   2203c:	muleq	r2, ip, r1
   22040:	muleq	r2, ip, r1
   22044:	muleq	r2, ip, r1
   22048:	andeq	r2, r2, r8, lsr #1
   2204c:	andeq	r2, r2, r8, lsr #1
   22050:	andeq	r2, r2, r8, lsr #1
   22054:	muleq	r2, ip, r1
   22058:	muleq	r2, ip, r1
   2205c:	muleq	r2, ip, r1
   22060:	andeq	r2, r2, r8, lsr #1
   22064:	muleq	r2, ip, r1
   22068:	andeq	r2, r2, r8, lsr #1
   2206c:	muleq	r2, ip, r1
   22070:	muleq	r2, ip, r1
   22074:	muleq	r2, ip, r1
   22078:	muleq	r2, ip, r1
   2207c:	muleq	r2, ip, r1
   22080:	muleq	r2, ip, r1
   22084:	muleq	r2, ip, r1
   22088:	muleq	r2, ip, r1
   2208c:	muleq	r2, ip, r1
   22090:	muleq	r2, ip, r1
   22094:	muleq	r2, ip, r1
   22098:	muleq	r2, ip, r1
   2209c:	andeq	r2, r2, r8, lsr #1
   220a0:	andeq	r2, r2, r8, lsr #1
   220a4:	andeq	r2, r2, r8, lsr #1
   220a8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   220ac:	cmp	r3, #0
   220b0:	bne	22e48 <__assert_fail@plt+0x11c08>
   220b4:	ldr	r3, [fp, #-16]
   220b8:	add	r3, r3, #2
   220bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   220c0:	add	r3, r2, r3
   220c4:	ldrb	r3, [r3]
   220c8:	strb	r3, [fp, #-38]	; 0xffffffda
   220cc:	ldr	r3, [fp, #-16]
   220d0:	add	r3, r3, #2
   220d4:	str	r3, [fp, #-16]
   220d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   220dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   220e0:	cmp	r2, r3
   220e4:	bcs	220fc <__assert_fail@plt+0x10ebc>
   220e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   220ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   220f0:	add	r3, r2, r3
   220f4:	mov	r2, #63	; 0x3f
   220f8:	strb	r2, [r3]
   220fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   22100:	add	r3, r3, #1
   22104:	str	r3, [fp, #-20]	; 0xffffffec
   22108:	ldr	r2, [fp, #-20]	; 0xffffffec
   2210c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22110:	cmp	r2, r3
   22114:	bcs	2212c <__assert_fail@plt+0x10eec>
   22118:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2211c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22120:	add	r3, r2, r3
   22124:	mov	r2, #34	; 0x22
   22128:	strb	r2, [r3]
   2212c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22130:	add	r3, r3, #1
   22134:	str	r3, [fp, #-20]	; 0xffffffec
   22138:	ldr	r2, [fp, #-20]	; 0xffffffec
   2213c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22140:	cmp	r2, r3
   22144:	bcs	2215c <__assert_fail@plt+0x10f1c>
   22148:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2214c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22150:	add	r3, r2, r3
   22154:	mov	r2, #34	; 0x22
   22158:	strb	r2, [r3]
   2215c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22160:	add	r3, r3, #1
   22164:	str	r3, [fp, #-20]	; 0xffffffec
   22168:	ldr	r2, [fp, #-20]	; 0xffffffec
   2216c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22170:	cmp	r2, r3
   22174:	bcs	2218c <__assert_fail@plt+0x10f4c>
   22178:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2217c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22180:	add	r3, r2, r3
   22184:	mov	r2, #63	; 0x3f
   22188:	strb	r2, [r3]
   2218c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22190:	add	r3, r3, #1
   22194:	str	r3, [fp, #-20]	; 0xffffffec
   22198:	b	221a0 <__assert_fail@plt+0x10f60>
   2219c:	nop	{0}
   221a0:	b	221ac <__assert_fail@plt+0x10f6c>
   221a4:	nop	{0}
   221a8:	b	229fc <__assert_fail@plt+0x117bc>
   221ac:	nop	{0}
   221b0:	b	229fc <__assert_fail@plt+0x117bc>
   221b4:	mov	r3, #97	; 0x61
   221b8:	strb	r3, [fp, #-39]	; 0xffffffd9
   221bc:	b	22270 <__assert_fail@plt+0x11030>
   221c0:	mov	r3, #98	; 0x62
   221c4:	strb	r3, [fp, #-39]	; 0xffffffd9
   221c8:	b	22270 <__assert_fail@plt+0x11030>
   221cc:	mov	r3, #102	; 0x66
   221d0:	strb	r3, [fp, #-39]	; 0xffffffd9
   221d4:	b	22270 <__assert_fail@plt+0x11030>
   221d8:	mov	r3, #110	; 0x6e
   221dc:	strb	r3, [fp, #-39]	; 0xffffffd9
   221e0:	b	22254 <__assert_fail@plt+0x11014>
   221e4:	mov	r3, #114	; 0x72
   221e8:	strb	r3, [fp, #-39]	; 0xffffffd9
   221ec:	b	22254 <__assert_fail@plt+0x11014>
   221f0:	mov	r3, #116	; 0x74
   221f4:	strb	r3, [fp, #-39]	; 0xffffffd9
   221f8:	b	22254 <__assert_fail@plt+0x11014>
   221fc:	mov	r3, #118	; 0x76
   22200:	strb	r3, [fp, #-39]	; 0xffffffd9
   22204:	b	22270 <__assert_fail@plt+0x11030>
   22208:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2220c:	strb	r3, [fp, #-39]	; 0xffffffd9
   22210:	ldr	r3, [fp, #4]
   22214:	cmp	r3, #2
   22218:	bne	2222c <__assert_fail@plt+0x10fec>
   2221c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22220:	cmp	r3, #0
   22224:	beq	22b88 <__assert_fail@plt+0x11948>
   22228:	b	22e74 <__assert_fail@plt+0x11c34>
   2222c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   22230:	cmp	r3, #0
   22234:	beq	22250 <__assert_fail@plt+0x11010>
   22238:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2223c:	cmp	r3, #0
   22240:	beq	22250 <__assert_fail@plt+0x11010>
   22244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22248:	cmp	r3, #0
   2224c:	bne	22b90 <__assert_fail@plt+0x11950>
   22250:	nop	{0}
   22254:	ldr	r3, [fp, #4]
   22258:	cmp	r3, #2
   2225c:	bne	2226c <__assert_fail@plt+0x1102c>
   22260:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22264:	cmp	r3, #0
   22268:	bne	22e50 <__assert_fail@plt+0x11c10>
   2226c:	nop	{0}
   22270:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   22274:	cmp	r3, #0
   22278:	beq	229d0 <__assert_fail@plt+0x11790>
   2227c:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   22280:	strb	r3, [fp, #-38]	; 0xffffffda
   22284:	b	22a88 <__assert_fail@plt+0x11848>
   22288:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2228c:	cmn	r3, #1
   22290:	bne	222b4 <__assert_fail@plt+0x11074>
   22294:	ldr	r3, [fp, #-96]	; 0xffffffa0
   22298:	add	r3, r3, #1
   2229c:	ldrb	r3, [r3]
   222a0:	cmp	r3, #0
   222a4:	movne	r3, #1
   222a8:	moveq	r3, #0
   222ac:	uxtb	r3, r3
   222b0:	b	222c8 <__assert_fail@plt+0x11088>
   222b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   222b8:	cmp	r3, #1
   222bc:	movne	r3, #1
   222c0:	moveq	r3, #0
   222c4:	uxtb	r3, r3
   222c8:	cmp	r3, #0
   222cc:	bne	229d8 <__assert_fail@plt+0x11798>
   222d0:	ldr	r3, [fp, #-16]
   222d4:	cmp	r3, #0
   222d8:	bne	229e0 <__assert_fail@plt+0x117a0>
   222dc:	mov	r3, #1
   222e0:	strb	r3, [fp, #-42]	; 0xffffffd6
   222e4:	ldr	r3, [fp, #4]
   222e8:	cmp	r3, #2
   222ec:	bne	229e8 <__assert_fail@plt+0x117a8>
   222f0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   222f4:	cmp	r3, #0
   222f8:	beq	229e8 <__assert_fail@plt+0x117a8>
   222fc:	b	22e74 <__assert_fail@plt+0x11c34>
   22300:	mov	r3, #1
   22304:	strb	r3, [fp, #-36]	; 0xffffffdc
   22308:	mov	r3, #1
   2230c:	strb	r3, [fp, #-42]	; 0xffffffd6
   22310:	ldr	r3, [fp, #4]
   22314:	cmp	r3, #2
   22318:	bne	229f0 <__assert_fail@plt+0x117b0>
   2231c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22320:	cmp	r3, #0
   22324:	bne	22e58 <__assert_fail@plt+0x11c18>
   22328:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2232c:	cmp	r3, #0
   22330:	beq	22350 <__assert_fail@plt+0x11110>
   22334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22338:	cmp	r3, #0
   2233c:	bne	22350 <__assert_fail@plt+0x11110>
   22340:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22344:	str	r3, [fp, #-24]	; 0xffffffe8
   22348:	mov	r3, #0
   2234c:	str	r3, [fp, #-92]	; 0xffffffa4
   22350:	ldr	r2, [fp, #-20]	; 0xffffffec
   22354:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22358:	cmp	r2, r3
   2235c:	bcs	22374 <__assert_fail@plt+0x11134>
   22360:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22364:	ldr	r3, [fp, #-20]	; 0xffffffec
   22368:	add	r3, r2, r3
   2236c:	mov	r2, #39	; 0x27
   22370:	strb	r2, [r3]
   22374:	ldr	r3, [fp, #-20]	; 0xffffffec
   22378:	add	r3, r3, #1
   2237c:	str	r3, [fp, #-20]	; 0xffffffec
   22380:	ldr	r2, [fp, #-20]	; 0xffffffec
   22384:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22388:	cmp	r2, r3
   2238c:	bcs	223a4 <__assert_fail@plt+0x11164>
   22390:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22394:	ldr	r3, [fp, #-20]	; 0xffffffec
   22398:	add	r3, r2, r3
   2239c:	mov	r2, #92	; 0x5c
   223a0:	strb	r2, [r3]
   223a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   223a8:	add	r3, r3, #1
   223ac:	str	r3, [fp, #-20]	; 0xffffffec
   223b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   223b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   223b8:	cmp	r2, r3
   223bc:	bcs	223d4 <__assert_fail@plt+0x11194>
   223c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   223c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   223c8:	add	r3, r2, r3
   223cc:	mov	r2, #39	; 0x27
   223d0:	strb	r2, [r3]
   223d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   223d8:	add	r3, r3, #1
   223dc:	str	r3, [fp, #-20]	; 0xffffffec
   223e0:	mov	r3, #0
   223e4:	strb	r3, [fp, #-35]	; 0xffffffdd
   223e8:	b	229f0 <__assert_fail@plt+0x117b0>
   223ec:	mov	r3, #1
   223f0:	strb	r3, [fp, #-42]	; 0xffffffd6
   223f4:	b	229fc <__assert_fail@plt+0x117bc>
   223f8:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   223fc:	cmp	r3, #0
   22400:	beq	22440 <__assert_fail@plt+0x11200>
   22404:	mov	r3, #1
   22408:	str	r3, [fp, #-48]	; 0xffffffd0
   2240c:	bl	11120 <__ctype_b_loc@plt>
   22410:	mov	r3, r0
   22414:	ldr	r2, [r3]
   22418:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2241c:	lsl	r3, r3, #1
   22420:	add	r3, r2, r3
   22424:	ldrh	r3, [r3]
   22428:	and	r3, r3, #16384	; 0x4000
   2242c:	cmp	r3, #0
   22430:	movne	r3, #1
   22434:	moveq	r3, #0
   22438:	strb	r3, [fp, #-49]	; 0xffffffcf
   2243c:	b	2268c <__assert_fail@plt+0x1144c>
   22440:	sub	r3, fp, #76	; 0x4c
   22444:	mov	r2, #8
   22448:	mov	r1, #0
   2244c:	mov	r0, r3
   22450:	bl	1118c <memset@plt>
   22454:	mov	r3, #0
   22458:	str	r3, [fp, #-48]	; 0xffffffd0
   2245c:	mov	r3, #1
   22460:	strb	r3, [fp, #-49]	; 0xffffffcf
   22464:	ldr	r3, [fp, #-100]	; 0xffffff9c
   22468:	cmn	r3, #1
   2246c:	bne	2247c <__assert_fail@plt+0x1123c>
   22470:	ldr	r0, [fp, #-96]	; 0xffffffa0
   22474:	bl	11144 <strlen@plt>
   22478:	str	r0, [fp, #-100]	; 0xffffff9c
   2247c:	ldr	r2, [fp, #-16]
   22480:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22484:	add	r3, r2, r3
   22488:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2248c:	add	r1, r2, r3
   22490:	ldr	r2, [fp, #-16]
   22494:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22498:	add	r3, r2, r3
   2249c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   224a0:	sub	r2, r2, r3
   224a4:	sub	r3, fp, #76	; 0x4c
   224a8:	sub	r0, fp, #80	; 0x50
   224ac:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   224b0:	str	r0, [fp, #-64]	; 0xffffffc0
   224b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   224b8:	cmp	r3, #0
   224bc:	beq	22680 <__assert_fail@plt+0x11440>
   224c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   224c4:	cmn	r3, #1
   224c8:	bne	224d8 <__assert_fail@plt+0x11298>
   224cc:	mov	r3, #0
   224d0:	strb	r3, [fp, #-49]	; 0xffffffcf
   224d4:	b	2268c <__assert_fail@plt+0x1144c>
   224d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   224dc:	cmn	r3, #2
   224e0:	bne	22538 <__assert_fail@plt+0x112f8>
   224e4:	mov	r3, #0
   224e8:	strb	r3, [fp, #-49]	; 0xffffffcf
   224ec:	b	224fc <__assert_fail@plt+0x112bc>
   224f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   224f4:	add	r3, r3, #1
   224f8:	str	r3, [fp, #-48]	; 0xffffffd0
   224fc:	ldr	r2, [fp, #-16]
   22500:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22504:	add	r3, r2, r3
   22508:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2250c:	cmp	r2, r3
   22510:	bls	22688 <__assert_fail@plt+0x11448>
   22514:	ldr	r2, [fp, #-16]
   22518:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2251c:	add	r3, r2, r3
   22520:	ldr	r2, [fp, #-96]	; 0xffffffa0
   22524:	add	r3, r2, r3
   22528:	ldrb	r3, [r3]
   2252c:	cmp	r3, #0
   22530:	bne	224f0 <__assert_fail@plt+0x112b0>
   22534:	b	22688 <__assert_fail@plt+0x11448>
   22538:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2253c:	cmp	r3, #0
   22540:	beq	22634 <__assert_fail@plt+0x113f4>
   22544:	ldr	r3, [fp, #4]
   22548:	cmp	r3, #2
   2254c:	bne	22634 <__assert_fail@plt+0x113f4>
   22550:	mov	r3, #1
   22554:	str	r3, [fp, #-56]	; 0xffffffc8
   22558:	b	22624 <__assert_fail@plt+0x113e4>
   2255c:	ldr	r2, [fp, #-16]
   22560:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22564:	add	r2, r2, r3
   22568:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2256c:	add	r3, r2, r3
   22570:	ldr	r2, [fp, #-96]	; 0xffffffa0
   22574:	add	r3, r2, r3
   22578:	ldrb	r3, [r3]
   2257c:	sub	r3, r3, #91	; 0x5b
   22580:	cmp	r3, #33	; 0x21
   22584:	ldrls	pc, [pc, r3, lsl #2]
   22588:	b	22614 <__assert_fail@plt+0x113d4>
   2258c:	andeq	r2, r2, r4, ror lr
   22590:	andeq	r2, r2, r4, ror lr
   22594:	andeq	r2, r2, r4, lsl r6
   22598:	andeq	r2, r2, r4, ror lr
   2259c:	andeq	r2, r2, r4, lsl r6
   225a0:	andeq	r2, r2, r4, ror lr
   225a4:	andeq	r2, r2, r4, lsl r6
   225a8:	andeq	r2, r2, r4, lsl r6
   225ac:	andeq	r2, r2, r4, lsl r6
   225b0:	andeq	r2, r2, r4, lsl r6
   225b4:	andeq	r2, r2, r4, lsl r6
   225b8:	andeq	r2, r2, r4, lsl r6
   225bc:	andeq	r2, r2, r4, lsl r6
   225c0:	andeq	r2, r2, r4, lsl r6
   225c4:	andeq	r2, r2, r4, lsl r6
   225c8:	andeq	r2, r2, r4, lsl r6
   225cc:	andeq	r2, r2, r4, lsl r6
   225d0:	andeq	r2, r2, r4, lsl r6
   225d4:	andeq	r2, r2, r4, lsl r6
   225d8:	andeq	r2, r2, r4, lsl r6
   225dc:	andeq	r2, r2, r4, lsl r6
   225e0:	andeq	r2, r2, r4, lsl r6
   225e4:	andeq	r2, r2, r4, lsl r6
   225e8:	andeq	r2, r2, r4, lsl r6
   225ec:	andeq	r2, r2, r4, lsl r6
   225f0:	andeq	r2, r2, r4, lsl r6
   225f4:	andeq	r2, r2, r4, lsl r6
   225f8:	andeq	r2, r2, r4, lsl r6
   225fc:	andeq	r2, r2, r4, lsl r6
   22600:	andeq	r2, r2, r4, lsl r6
   22604:	andeq	r2, r2, r4, lsl r6
   22608:	andeq	r2, r2, r4, lsl r6
   2260c:	andeq	r2, r2, r4, lsl r6
   22610:	andeq	r2, r2, r4, ror lr
   22614:	nop	{0}
   22618:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2261c:	add	r3, r3, #1
   22620:	str	r3, [fp, #-56]	; 0xffffffc8
   22624:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22628:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2262c:	cmp	r2, r3
   22630:	bcc	2255c <__assert_fail@plt+0x1131c>
   22634:	ldr	r3, [fp, #-80]	; 0xffffffb0
   22638:	mov	r0, r3
   2263c:	bl	11060 <iswprint@plt>
   22640:	mov	r3, r0
   22644:	cmp	r3, #0
   22648:	bne	22654 <__assert_fail@plt+0x11414>
   2264c:	mov	r3, #0
   22650:	strb	r3, [fp, #-49]	; 0xffffffcf
   22654:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22658:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2265c:	add	r3, r2, r3
   22660:	str	r3, [fp, #-48]	; 0xffffffd0
   22664:	sub	r3, fp, #76	; 0x4c
   22668:	mov	r0, r3
   2266c:	bl	11018 <mbsinit@plt>
   22670:	mov	r3, r0
   22674:	cmp	r3, #0
   22678:	beq	2247c <__assert_fail@plt+0x1123c>
   2267c:	b	2268c <__assert_fail@plt+0x1144c>
   22680:	nop	{0}
   22684:	b	2268c <__assert_fail@plt+0x1144c>
   22688:	nop	{0}
   2268c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   22690:	strb	r3, [fp, #-42]	; 0xffffffd6
   22694:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22698:	cmp	r3, #1
   2269c:	bhi	226c0 <__assert_fail@plt+0x11480>
   226a0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   226a4:	cmp	r3, #0
   226a8:	beq	229f8 <__assert_fail@plt+0x117b8>
   226ac:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   226b0:	eor	r3, r3, #1
   226b4:	uxtb	r3, r3
   226b8:	cmp	r3, #0
   226bc:	beq	229f8 <__assert_fail@plt+0x117b8>
   226c0:	ldr	r2, [fp, #-16]
   226c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   226c8:	add	r3, r2, r3
   226cc:	str	r3, [fp, #-68]	; 0xffffffbc
   226d0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   226d4:	cmp	r3, #0
   226d8:	beq	2288c <__assert_fail@plt+0x1164c>
   226dc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   226e0:	eor	r3, r3, #1
   226e4:	uxtb	r3, r3
   226e8:	cmp	r3, #0
   226ec:	beq	2288c <__assert_fail@plt+0x1164c>
   226f0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   226f4:	cmp	r3, #0
   226f8:	bne	22e60 <__assert_fail@plt+0x11c20>
   226fc:	mov	r3, #1
   22700:	strb	r3, [fp, #-41]	; 0xffffffd7
   22704:	ldr	r3, [fp, #4]
   22708:	cmp	r3, #2
   2270c:	bne	227bc <__assert_fail@plt+0x1157c>
   22710:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   22714:	eor	r3, r3, #1
   22718:	uxtb	r3, r3
   2271c:	cmp	r3, #0
   22720:	beq	227bc <__assert_fail@plt+0x1157c>
   22724:	ldr	r2, [fp, #-20]	; 0xffffffec
   22728:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2272c:	cmp	r2, r3
   22730:	bcs	22748 <__assert_fail@plt+0x11508>
   22734:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22738:	ldr	r3, [fp, #-20]	; 0xffffffec
   2273c:	add	r3, r2, r3
   22740:	mov	r2, #39	; 0x27
   22744:	strb	r2, [r3]
   22748:	ldr	r3, [fp, #-20]	; 0xffffffec
   2274c:	add	r3, r3, #1
   22750:	str	r3, [fp, #-20]	; 0xffffffec
   22754:	ldr	r2, [fp, #-20]	; 0xffffffec
   22758:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2275c:	cmp	r2, r3
   22760:	bcs	22778 <__assert_fail@plt+0x11538>
   22764:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22768:	ldr	r3, [fp, #-20]	; 0xffffffec
   2276c:	add	r3, r2, r3
   22770:	mov	r2, #36	; 0x24
   22774:	strb	r2, [r3]
   22778:	ldr	r3, [fp, #-20]	; 0xffffffec
   2277c:	add	r3, r3, #1
   22780:	str	r3, [fp, #-20]	; 0xffffffec
   22784:	ldr	r2, [fp, #-20]	; 0xffffffec
   22788:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2278c:	cmp	r2, r3
   22790:	bcs	227a8 <__assert_fail@plt+0x11568>
   22794:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22798:	ldr	r3, [fp, #-20]	; 0xffffffec
   2279c:	add	r3, r2, r3
   227a0:	mov	r2, #39	; 0x27
   227a4:	strb	r2, [r3]
   227a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   227ac:	add	r3, r3, #1
   227b0:	str	r3, [fp, #-20]	; 0xffffffec
   227b4:	mov	r3, #1
   227b8:	strb	r3, [fp, #-35]	; 0xffffffdd
   227bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   227c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   227c4:	cmp	r2, r3
   227c8:	bcs	227e0 <__assert_fail@plt+0x115a0>
   227cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   227d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   227d4:	add	r3, r2, r3
   227d8:	mov	r2, #92	; 0x5c
   227dc:	strb	r2, [r3]
   227e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   227e4:	add	r3, r3, #1
   227e8:	str	r3, [fp, #-20]	; 0xffffffec
   227ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   227f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   227f4:	cmp	r2, r3
   227f8:	bcs	22820 <__assert_fail@plt+0x115e0>
   227fc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   22800:	lsr	r3, r3, #6
   22804:	uxtb	r2, r3
   22808:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2280c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22810:	add	r3, r1, r3
   22814:	add	r2, r2, #48	; 0x30
   22818:	uxtb	r2, r2
   2281c:	strb	r2, [r3]
   22820:	ldr	r3, [fp, #-20]	; 0xffffffec
   22824:	add	r3, r3, #1
   22828:	str	r3, [fp, #-20]	; 0xffffffec
   2282c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22830:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22834:	cmp	r2, r3
   22838:	bcs	22868 <__assert_fail@plt+0x11628>
   2283c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   22840:	lsr	r3, r3, #3
   22844:	uxtb	r3, r3
   22848:	and	r3, r3, #7
   2284c:	uxtb	r2, r3
   22850:	ldr	r1, [fp, #-88]	; 0xffffffa8
   22854:	ldr	r3, [fp, #-20]	; 0xffffffec
   22858:	add	r3, r1, r3
   2285c:	add	r2, r2, #48	; 0x30
   22860:	uxtb	r2, r2
   22864:	strb	r2, [r3]
   22868:	ldr	r3, [fp, #-20]	; 0xffffffec
   2286c:	add	r3, r3, #1
   22870:	str	r3, [fp, #-20]	; 0xffffffec
   22874:	ldrb	r3, [fp, #-38]	; 0xffffffda
   22878:	and	r3, r3, #7
   2287c:	uxtb	r3, r3
   22880:	add	r3, r3, #48	; 0x30
   22884:	strb	r3, [fp, #-38]	; 0xffffffda
   22888:	b	228d0 <__assert_fail@plt+0x11690>
   2288c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   22890:	cmp	r3, #0
   22894:	beq	228d0 <__assert_fail@plt+0x11690>
   22898:	ldr	r2, [fp, #-20]	; 0xffffffec
   2289c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   228a0:	cmp	r2, r3
   228a4:	bcs	228bc <__assert_fail@plt+0x1167c>
   228a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   228ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   228b0:	add	r3, r2, r3
   228b4:	mov	r2, #92	; 0x5c
   228b8:	strb	r2, [r3]
   228bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   228c0:	add	r3, r3, #1
   228c4:	str	r3, [fp, #-20]	; 0xffffffec
   228c8:	mov	r3, #0
   228cc:	strb	r3, [fp, #-40]	; 0xffffffd8
   228d0:	ldr	r3, [fp, #-16]
   228d4:	add	r3, r3, #1
   228d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   228dc:	cmp	r2, r3
   228e0:	bls	229c0 <__assert_fail@plt+0x11780>
   228e4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   228e8:	cmp	r3, #0
   228ec:	beq	2296c <__assert_fail@plt+0x1172c>
   228f0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   228f4:	eor	r3, r3, #1
   228f8:	uxtb	r3, r3
   228fc:	cmp	r3, #0
   22900:	beq	2296c <__assert_fail@plt+0x1172c>
   22904:	ldr	r2, [fp, #-20]	; 0xffffffec
   22908:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2290c:	cmp	r2, r3
   22910:	bcs	22928 <__assert_fail@plt+0x116e8>
   22914:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22918:	ldr	r3, [fp, #-20]	; 0xffffffec
   2291c:	add	r3, r2, r3
   22920:	mov	r2, #39	; 0x27
   22924:	strb	r2, [r3]
   22928:	ldr	r3, [fp, #-20]	; 0xffffffec
   2292c:	add	r3, r3, #1
   22930:	str	r3, [fp, #-20]	; 0xffffffec
   22934:	ldr	r2, [fp, #-20]	; 0xffffffec
   22938:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2293c:	cmp	r2, r3
   22940:	bcs	22958 <__assert_fail@plt+0x11718>
   22944:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22948:	ldr	r3, [fp, #-20]	; 0xffffffec
   2294c:	add	r3, r2, r3
   22950:	mov	r2, #39	; 0x27
   22954:	strb	r2, [r3]
   22958:	ldr	r3, [fp, #-20]	; 0xffffffec
   2295c:	add	r3, r3, #1
   22960:	str	r3, [fp, #-20]	; 0xffffffec
   22964:	mov	r3, #0
   22968:	strb	r3, [fp, #-35]	; 0xffffffdd
   2296c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22970:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22974:	cmp	r2, r3
   22978:	bcs	22990 <__assert_fail@plt+0x11750>
   2297c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22980:	ldr	r3, [fp, #-20]	; 0xffffffec
   22984:	add	r3, r2, r3
   22988:	ldrb	r2, [fp, #-38]	; 0xffffffda
   2298c:	strb	r2, [r3]
   22990:	ldr	r3, [fp, #-20]	; 0xffffffec
   22994:	add	r3, r3, #1
   22998:	str	r3, [fp, #-20]	; 0xffffffec
   2299c:	ldr	r3, [fp, #-16]
   229a0:	add	r3, r3, #1
   229a4:	str	r3, [fp, #-16]
   229a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   229ac:	ldr	r3, [fp, #-16]
   229b0:	add	r3, r2, r3
   229b4:	ldrb	r3, [r3]
   229b8:	strb	r3, [fp, #-38]	; 0xffffffda
   229bc:	b	226d0 <__assert_fail@plt+0x11490>
   229c0:	nop	{0}
   229c4:	b	22b9c <__assert_fail@plt+0x1195c>
   229c8:	nop	{0}
   229cc:	b	229fc <__assert_fail@plt+0x117bc>
   229d0:	nop	{0}
   229d4:	b	229fc <__assert_fail@plt+0x117bc>
   229d8:	nop	{0}
   229dc:	b	229fc <__assert_fail@plt+0x117bc>
   229e0:	nop	{0}
   229e4:	b	229fc <__assert_fail@plt+0x117bc>
   229e8:	nop	{0}
   229ec:	b	229fc <__assert_fail@plt+0x117bc>
   229f0:	nop	{0}
   229f4:	b	229fc <__assert_fail@plt+0x117bc>
   229f8:	nop	{0}
   229fc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   22a00:	eor	r3, r3, #1
   22a04:	uxtb	r3, r3
   22a08:	cmp	r3, #0
   22a0c:	bne	22a1c <__assert_fail@plt+0x117dc>
   22a10:	ldr	r3, [fp, #4]
   22a14:	cmp	r3, #2
   22a18:	bne	22a30 <__assert_fail@plt+0x117f0>
   22a1c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22a20:	eor	r3, r3, #1
   22a24:	uxtb	r3, r3
   22a28:	cmp	r3, #0
   22a2c:	bne	22a70 <__assert_fail@plt+0x11830>
   22a30:	ldr	r3, [fp, #12]
   22a34:	cmp	r3, #0
   22a38:	beq	22a70 <__assert_fail@plt+0x11830>
   22a3c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   22a40:	lsr	r3, r3, #5
   22a44:	uxtb	r3, r3
   22a48:	lsl	r3, r3, #2
   22a4c:	ldr	r2, [fp, #12]
   22a50:	add	r3, r2, r3
   22a54:	ldr	r2, [r3]
   22a58:	ldrb	r3, [fp, #-38]	; 0xffffffda
   22a5c:	and	r3, r3, #31
   22a60:	lsr	r3, r2, r3
   22a64:	and	r3, r3, #1
   22a68:	cmp	r3, #0
   22a6c:	bne	22a84 <__assert_fail@plt+0x11844>
   22a70:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   22a74:	eor	r3, r3, #1
   22a78:	uxtb	r3, r3
   22a7c:	cmp	r3, #0
   22a80:	bne	22b98 <__assert_fail@plt+0x11958>
   22a84:	nop	{0}
   22a88:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22a8c:	cmp	r3, #0
   22a90:	bne	22e68 <__assert_fail@plt+0x11c28>
   22a94:	mov	r3, #1
   22a98:	strb	r3, [fp, #-41]	; 0xffffffd7
   22a9c:	ldr	r3, [fp, #4]
   22aa0:	cmp	r3, #2
   22aa4:	bne	22b54 <__assert_fail@plt+0x11914>
   22aa8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   22aac:	eor	r3, r3, #1
   22ab0:	uxtb	r3, r3
   22ab4:	cmp	r3, #0
   22ab8:	beq	22b54 <__assert_fail@plt+0x11914>
   22abc:	ldr	r2, [fp, #-20]	; 0xffffffec
   22ac0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22ac4:	cmp	r2, r3
   22ac8:	bcs	22ae0 <__assert_fail@plt+0x118a0>
   22acc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   22ad4:	add	r3, r2, r3
   22ad8:	mov	r2, #39	; 0x27
   22adc:	strb	r2, [r3]
   22ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   22ae4:	add	r3, r3, #1
   22ae8:	str	r3, [fp, #-20]	; 0xffffffec
   22aec:	ldr	r2, [fp, #-20]	; 0xffffffec
   22af0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22af4:	cmp	r2, r3
   22af8:	bcs	22b10 <__assert_fail@plt+0x118d0>
   22afc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b04:	add	r3, r2, r3
   22b08:	mov	r2, #36	; 0x24
   22b0c:	strb	r2, [r3]
   22b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b14:	add	r3, r3, #1
   22b18:	str	r3, [fp, #-20]	; 0xffffffec
   22b1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22b20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22b24:	cmp	r2, r3
   22b28:	bcs	22b40 <__assert_fail@plt+0x11900>
   22b2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22b30:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b34:	add	r3, r2, r3
   22b38:	mov	r2, #39	; 0x27
   22b3c:	strb	r2, [r3]
   22b40:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b44:	add	r3, r3, #1
   22b48:	str	r3, [fp, #-20]	; 0xffffffec
   22b4c:	mov	r3, #1
   22b50:	strb	r3, [fp, #-35]	; 0xffffffdd
   22b54:	ldr	r2, [fp, #-20]	; 0xffffffec
   22b58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22b5c:	cmp	r2, r3
   22b60:	bcs	22b78 <__assert_fail@plt+0x11938>
   22b64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22b68:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b6c:	add	r3, r2, r3
   22b70:	mov	r2, #92	; 0x5c
   22b74:	strb	r2, [r3]
   22b78:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b7c:	add	r3, r3, #1
   22b80:	str	r3, [fp, #-20]	; 0xffffffec
   22b84:	b	22b9c <__assert_fail@plt+0x1195c>
   22b88:	nop	{0}
   22b8c:	b	22b9c <__assert_fail@plt+0x1195c>
   22b90:	nop	{0}
   22b94:	b	22b9c <__assert_fail@plt+0x1195c>
   22b98:	nop	{0}
   22b9c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   22ba0:	cmp	r3, #0
   22ba4:	beq	22c24 <__assert_fail@plt+0x119e4>
   22ba8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   22bac:	eor	r3, r3, #1
   22bb0:	uxtb	r3, r3
   22bb4:	cmp	r3, #0
   22bb8:	beq	22c24 <__assert_fail@plt+0x119e4>
   22bbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   22bc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22bc4:	cmp	r2, r3
   22bc8:	bcs	22be0 <__assert_fail@plt+0x119a0>
   22bcc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   22bd4:	add	r3, r2, r3
   22bd8:	mov	r2, #39	; 0x27
   22bdc:	strb	r2, [r3]
   22be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   22be4:	add	r3, r3, #1
   22be8:	str	r3, [fp, #-20]	; 0xffffffec
   22bec:	ldr	r2, [fp, #-20]	; 0xffffffec
   22bf0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22bf4:	cmp	r2, r3
   22bf8:	bcs	22c10 <__assert_fail@plt+0x119d0>
   22bfc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22c00:	ldr	r3, [fp, #-20]	; 0xffffffec
   22c04:	add	r3, r2, r3
   22c08:	mov	r2, #39	; 0x27
   22c0c:	strb	r2, [r3]
   22c10:	ldr	r3, [fp, #-20]	; 0xffffffec
   22c14:	add	r3, r3, #1
   22c18:	str	r3, [fp, #-20]	; 0xffffffec
   22c1c:	mov	r3, #0
   22c20:	strb	r3, [fp, #-35]	; 0xffffffdd
   22c24:	ldr	r2, [fp, #-20]	; 0xffffffec
   22c28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22c2c:	cmp	r2, r3
   22c30:	bcs	22c48 <__assert_fail@plt+0x11a08>
   22c34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   22c3c:	add	r3, r2, r3
   22c40:	ldrb	r2, [fp, #-38]	; 0xffffffda
   22c44:	strb	r2, [r3]
   22c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   22c4c:	add	r3, r3, #1
   22c50:	str	r3, [fp, #-20]	; 0xffffffec
   22c54:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   22c58:	eor	r3, r3, #1
   22c5c:	uxtb	r3, r3
   22c60:	cmp	r3, #0
   22c64:	beq	22c70 <__assert_fail@plt+0x11a30>
   22c68:	mov	r3, #0
   22c6c:	strb	r3, [fp, #-37]	; 0xffffffdb
   22c70:	ldr	r3, [fp, #-16]
   22c74:	add	r3, r3, #1
   22c78:	str	r3, [fp, #-16]
   22c7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   22c80:	cmn	r3, #1
   22c84:	bne	22cac <__assert_fail@plt+0x11a6c>
   22c88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   22c8c:	ldr	r3, [fp, #-16]
   22c90:	add	r3, r2, r3
   22c94:	ldrb	r3, [r3]
   22c98:	cmp	r3, #0
   22c9c:	movne	r3, #1
   22ca0:	moveq	r3, #0
   22ca4:	uxtb	r3, r3
   22ca8:	b	22cc4 <__assert_fail@plt+0x11a84>
   22cac:	ldr	r2, [fp, #-16]
   22cb0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   22cb4:	cmp	r2, r3
   22cb8:	movne	r3, #1
   22cbc:	moveq	r3, #0
   22cc0:	uxtb	r3, r3
   22cc4:	cmp	r3, #0
   22cc8:	bne	21ae4 <__assert_fail@plt+0x108a4>
   22ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   22cd0:	cmp	r3, #0
   22cd4:	bne	22cf0 <__assert_fail@plt+0x11ab0>
   22cd8:	ldr	r3, [fp, #4]
   22cdc:	cmp	r3, #2
   22ce0:	bne	22cf0 <__assert_fail@plt+0x11ab0>
   22ce4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22ce8:	cmp	r3, #0
   22cec:	bne	22e70 <__assert_fail@plt+0x11c30>
   22cf0:	ldr	r3, [fp, #4]
   22cf4:	cmp	r3, #2
   22cf8:	bne	22d98 <__assert_fail@plt+0x11b58>
   22cfc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22d00:	eor	r3, r3, #1
   22d04:	uxtb	r3, r3
   22d08:	cmp	r3, #0
   22d0c:	beq	22d98 <__assert_fail@plt+0x11b58>
   22d10:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   22d14:	cmp	r3, #0
   22d18:	beq	22d98 <__assert_fail@plt+0x11b58>
   22d1c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   22d20:	cmp	r3, #0
   22d24:	beq	22d6c <__assert_fail@plt+0x11b2c>
   22d28:	ldr	r3, [fp, #20]
   22d2c:	str	r3, [sp, #16]
   22d30:	ldr	r3, [fp, #16]
   22d34:	str	r3, [sp, #12]
   22d38:	ldr	r3, [fp, #12]
   22d3c:	str	r3, [sp, #8]
   22d40:	ldr	r3, [fp, #8]
   22d44:	str	r3, [sp, #4]
   22d48:	mov	r3, #5
   22d4c:	str	r3, [sp]
   22d50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   22d54:	ldr	r2, [fp, #-96]	; 0xffffffa0
   22d58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22d5c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   22d60:	bl	2181c <__assert_fail@plt+0x105dc>
   22d64:	mov	r3, r0
   22d68:	b	22ed8 <__assert_fail@plt+0x11c98>
   22d6c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22d70:	cmp	r3, #0
   22d74:	bne	22d98 <__assert_fail@plt+0x11b58>
   22d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d7c:	cmp	r3, #0
   22d80:	beq	22d98 <__assert_fail@plt+0x11b58>
   22d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d88:	str	r3, [fp, #-92]	; 0xffffffa4
   22d8c:	mov	r3, #0
   22d90:	str	r3, [fp, #-20]	; 0xffffffec
   22d94:	b	218b0 <__assert_fail@plt+0x10670>
   22d98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22d9c:	cmp	r3, #0
   22da0:	beq	22e0c <__assert_fail@plt+0x11bcc>
   22da4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22da8:	eor	r3, r3, #1
   22dac:	uxtb	r3, r3
   22db0:	cmp	r3, #0
   22db4:	beq	22e0c <__assert_fail@plt+0x11bcc>
   22db8:	b	22dfc <__assert_fail@plt+0x11bbc>
   22dbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   22dc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22dc4:	cmp	r2, r3
   22dc8:	bcs	22de4 <__assert_fail@plt+0x11ba4>
   22dcc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   22dd4:	add	r3, r2, r3
   22dd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22ddc:	ldrb	r2, [r2]
   22de0:	strb	r2, [r3]
   22de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22de8:	add	r3, r3, #1
   22dec:	str	r3, [fp, #-20]	; 0xffffffec
   22df0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22df4:	add	r3, r3, #1
   22df8:	str	r3, [fp, #-28]	; 0xffffffe4
   22dfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22e00:	ldrb	r3, [r3]
   22e04:	cmp	r3, #0
   22e08:	bne	22dbc <__assert_fail@plt+0x11b7c>
   22e0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22e10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22e14:	cmp	r2, r3
   22e18:	bcs	22e30 <__assert_fail@plt+0x11bf0>
   22e1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   22e24:	add	r3, r2, r3
   22e28:	mov	r2, #0
   22e2c:	strb	r2, [r3]
   22e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   22e34:	b	22ed8 <__assert_fail@plt+0x11c98>
   22e38:	nop	{0}
   22e3c:	b	22e74 <__assert_fail@plt+0x11c34>
   22e40:	nop	{0}
   22e44:	b	22e74 <__assert_fail@plt+0x11c34>
   22e48:	nop	{0}
   22e4c:	b	22e74 <__assert_fail@plt+0x11c34>
   22e50:	nop	{0}
   22e54:	b	22e74 <__assert_fail@plt+0x11c34>
   22e58:	nop	{0}
   22e5c:	b	22e74 <__assert_fail@plt+0x11c34>
   22e60:	nop	{0}
   22e64:	b	22e74 <__assert_fail@plt+0x11c34>
   22e68:	nop	{0}
   22e6c:	b	22e74 <__assert_fail@plt+0x11c34>
   22e70:	nop	{0}
   22e74:	ldr	r3, [fp, #4]
   22e78:	cmp	r3, #2
   22e7c:	bne	22e94 <__assert_fail@plt+0x11c54>
   22e80:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   22e84:	cmp	r3, #0
   22e88:	beq	22e94 <__assert_fail@plt+0x11c54>
   22e8c:	mov	r3, #4
   22e90:	str	r3, [fp, #4]
   22e94:	ldr	r3, [fp, #8]
   22e98:	bic	r3, r3, #2
   22e9c:	ldr	r2, [fp, #20]
   22ea0:	str	r2, [sp, #16]
   22ea4:	ldr	r2, [fp, #16]
   22ea8:	str	r2, [sp, #12]
   22eac:	mov	r2, #0
   22eb0:	str	r2, [sp, #8]
   22eb4:	str	r3, [sp, #4]
   22eb8:	ldr	r3, [fp, #4]
   22ebc:	str	r3, [sp]
   22ec0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   22ec4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   22ec8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   22ecc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   22ed0:	bl	2181c <__assert_fail@plt+0x105dc>
   22ed4:	mov	r3, r0
   22ed8:	mov	r0, r3
   22edc:	sub	sp, fp, #8
   22ee0:	ldr	r4, [sp]
   22ee4:	ldr	fp, [sp, #4]
   22ee8:	add	sp, sp, #8
   22eec:	pop	{pc}		; (ldr pc, [sp], #4)
   22ef0:	str	fp, [sp, #-8]!
   22ef4:	str	lr, [sp, #4]
   22ef8:	add	fp, sp, #4
   22efc:	sub	sp, sp, #56	; 0x38
   22f00:	str	r0, [fp, #-24]	; 0xffffffe8
   22f04:	str	r1, [fp, #-28]	; 0xffffffe4
   22f08:	str	r2, [fp, #-32]	; 0xffffffe0
   22f0c:	str	r3, [fp, #-36]	; 0xffffffdc
   22f10:	ldr	r3, [fp, #4]
   22f14:	cmp	r3, #0
   22f18:	beq	22f24 <__assert_fail@plt+0x11ce4>
   22f1c:	ldr	r3, [fp, #4]
   22f20:	b	22f2c <__assert_fail@plt+0x11cec>
   22f24:	movw	r3, #12712	; 0x31a8
   22f28:	movt	r3, #5
   22f2c:	str	r3, [fp, #-8]
   22f30:	bl	11168 <__errno_location@plt>
   22f34:	mov	r3, r0
   22f38:	ldr	r3, [r3]
   22f3c:	str	r3, [fp, #-12]
   22f40:	ldr	r3, [fp, #-8]
   22f44:	ldr	r3, [r3]
   22f48:	ldr	r2, [fp, #-8]
   22f4c:	ldr	r2, [r2, #4]
   22f50:	ldr	r1, [fp, #-8]
   22f54:	add	r1, r1, #8
   22f58:	ldr	r0, [fp, #-8]
   22f5c:	ldr	r0, [r0, #40]	; 0x28
   22f60:	ldr	ip, [fp, #-8]
   22f64:	ldr	ip, [ip, #44]	; 0x2c
   22f68:	str	ip, [sp, #16]
   22f6c:	str	r0, [sp, #12]
   22f70:	str	r1, [sp, #8]
   22f74:	str	r2, [sp, #4]
   22f78:	str	r3, [sp]
   22f7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22f80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22f84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22f8c:	bl	2181c <__assert_fail@plt+0x105dc>
   22f90:	str	r0, [fp, #-16]
   22f94:	bl	11168 <__errno_location@plt>
   22f98:	mov	r2, r0
   22f9c:	ldr	r3, [fp, #-12]
   22fa0:	str	r3, [r2]
   22fa4:	ldr	r3, [fp, #-16]
   22fa8:	mov	r0, r3
   22fac:	sub	sp, fp, #4
   22fb0:	ldr	fp, [sp]
   22fb4:	add	sp, sp, #4
   22fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   22fbc:	str	fp, [sp, #-8]!
   22fc0:	str	lr, [sp, #4]
   22fc4:	add	fp, sp, #4
   22fc8:	sub	sp, sp, #16
   22fcc:	str	r0, [fp, #-8]
   22fd0:	str	r1, [fp, #-12]
   22fd4:	str	r2, [fp, #-16]
   22fd8:	ldr	r3, [fp, #-16]
   22fdc:	mov	r2, #0
   22fe0:	ldr	r1, [fp, #-12]
   22fe4:	ldr	r0, [fp, #-8]
   22fe8:	bl	23004 <__assert_fail@plt+0x11dc4>
   22fec:	mov	r3, r0
   22ff0:	mov	r0, r3
   22ff4:	sub	sp, fp, #4
   22ff8:	ldr	fp, [sp]
   22ffc:	add	sp, sp, #4
   23000:	pop	{pc}		; (ldr pc, [sp], #4)
   23004:	str	fp, [sp, #-8]!
   23008:	str	lr, [sp, #4]
   2300c:	add	fp, sp, #4
   23010:	sub	sp, sp, #64	; 0x40
   23014:	str	r0, [fp, #-32]	; 0xffffffe0
   23018:	str	r1, [fp, #-36]	; 0xffffffdc
   2301c:	str	r2, [fp, #-40]	; 0xffffffd8
   23020:	str	r3, [fp, #-44]	; 0xffffffd4
   23024:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23028:	cmp	r3, #0
   2302c:	beq	23038 <__assert_fail@plt+0x11df8>
   23030:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23034:	b	23040 <__assert_fail@plt+0x11e00>
   23038:	movw	r3, #12712	; 0x31a8
   2303c:	movt	r3, #5
   23040:	str	r3, [fp, #-8]
   23044:	bl	11168 <__errno_location@plt>
   23048:	mov	r3, r0
   2304c:	ldr	r3, [r3]
   23050:	str	r3, [fp, #-12]
   23054:	ldr	r3, [fp, #-8]
   23058:	ldr	r3, [r3, #4]
   2305c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23060:	cmp	r2, #0
   23064:	moveq	r2, #1
   23068:	movne	r2, #0
   2306c:	uxtb	r2, r2
   23070:	orr	r3, r3, r2
   23074:	str	r3, [fp, #-16]
   23078:	ldr	r3, [fp, #-8]
   2307c:	ldr	r3, [r3]
   23080:	ldr	r2, [fp, #-8]
   23084:	add	r2, r2, #8
   23088:	ldr	r1, [fp, #-8]
   2308c:	ldr	r1, [r1, #40]	; 0x28
   23090:	ldr	r0, [fp, #-8]
   23094:	ldr	r0, [r0, #44]	; 0x2c
   23098:	str	r0, [sp, #16]
   2309c:	str	r1, [sp, #12]
   230a0:	str	r2, [sp, #8]
   230a4:	ldr	r2, [fp, #-16]
   230a8:	str	r2, [sp, #4]
   230ac:	str	r3, [sp]
   230b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   230b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   230b8:	mov	r1, #0
   230bc:	mov	r0, #0
   230c0:	bl	2181c <__assert_fail@plt+0x105dc>
   230c4:	mov	r3, r0
   230c8:	add	r3, r3, #1
   230cc:	str	r3, [fp, #-20]	; 0xffffffec
   230d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   230d4:	bl	3e608 <__assert_fail@plt+0x2d3c8>
   230d8:	mov	r3, r0
   230dc:	str	r3, [fp, #-24]	; 0xffffffe8
   230e0:	ldr	r3, [fp, #-8]
   230e4:	ldr	r3, [r3]
   230e8:	ldr	r2, [fp, #-8]
   230ec:	add	r2, r2, #8
   230f0:	ldr	r1, [fp, #-8]
   230f4:	ldr	r1, [r1, #40]	; 0x28
   230f8:	ldr	r0, [fp, #-8]
   230fc:	ldr	r0, [r0, #44]	; 0x2c
   23100:	str	r0, [sp, #16]
   23104:	str	r1, [sp, #12]
   23108:	str	r2, [sp, #8]
   2310c:	ldr	r2, [fp, #-16]
   23110:	str	r2, [sp, #4]
   23114:	str	r3, [sp]
   23118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2311c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23120:	ldr	r1, [fp, #-20]	; 0xffffffec
   23124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23128:	bl	2181c <__assert_fail@plt+0x105dc>
   2312c:	bl	11168 <__errno_location@plt>
   23130:	mov	r2, r0
   23134:	ldr	r3, [fp, #-12]
   23138:	str	r3, [r2]
   2313c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23140:	cmp	r3, #0
   23144:	beq	23158 <__assert_fail@plt+0x11f18>
   23148:	ldr	r3, [fp, #-20]	; 0xffffffec
   2314c:	sub	r2, r3, #1
   23150:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23154:	str	r2, [r3]
   23158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2315c:	mov	r0, r3
   23160:	sub	sp, fp, #4
   23164:	ldr	fp, [sp]
   23168:	add	sp, sp, #4
   2316c:	pop	{pc}		; (ldr pc, [sp], #4)
   23170:	str	fp, [sp, #-8]!
   23174:	str	lr, [sp, #4]
   23178:	add	fp, sp, #4
   2317c:	sub	sp, sp, #8
   23180:	movw	r3, #12608	; 0x3140
   23184:	movt	r3, #5
   23188:	ldr	r3, [r3]
   2318c:	str	r3, [fp, #-12]
   23190:	mov	r3, #1
   23194:	str	r3, [fp, #-8]
   23198:	b	231c4 <__assert_fail@plt+0x11f84>
   2319c:	ldr	r3, [fp, #-8]
   231a0:	lsl	r3, r3, #3
   231a4:	ldr	r2, [fp, #-12]
   231a8:	add	r3, r2, r3
   231ac:	ldr	r3, [r3, #4]
   231b0:	mov	r0, r3
   231b4:	bl	13798 <__assert_fail@plt+0x2558>
   231b8:	ldr	r3, [fp, #-8]
   231bc:	add	r3, r3, #1
   231c0:	str	r3, [fp, #-8]
   231c4:	movw	r3, #12596	; 0x3134
   231c8:	movt	r3, #5
   231cc:	ldr	r3, [r3]
   231d0:	ldr	r2, [fp, #-8]
   231d4:	cmp	r2, r3
   231d8:	blt	2319c <__assert_fail@plt+0x11f5c>
   231dc:	ldr	r3, [fp, #-12]
   231e0:	ldr	r2, [r3, #4]
   231e4:	movw	r3, #12760	; 0x31d8
   231e8:	movt	r3, #5
   231ec:	cmp	r2, r3
   231f0:	beq	23228 <__assert_fail@plt+0x11fe8>
   231f4:	ldr	r3, [fp, #-12]
   231f8:	ldr	r3, [r3, #4]
   231fc:	mov	r0, r3
   23200:	bl	13798 <__assert_fail@plt+0x2558>
   23204:	movw	r3, #12600	; 0x3138
   23208:	movt	r3, #5
   2320c:	mov	r2, #256	; 0x100
   23210:	str	r2, [r3]
   23214:	movw	r3, #12600	; 0x3138
   23218:	movt	r3, #5
   2321c:	movw	r2, #12760	; 0x31d8
   23220:	movt	r2, #5
   23224:	str	r2, [r3, #4]
   23228:	ldr	r2, [fp, #-12]
   2322c:	movw	r3, #12600	; 0x3138
   23230:	movt	r3, #5
   23234:	cmp	r2, r3
   23238:	beq	23258 <__assert_fail@plt+0x12018>
   2323c:	ldr	r0, [fp, #-12]
   23240:	bl	13798 <__assert_fail@plt+0x2558>
   23244:	movw	r3, #12608	; 0x3140
   23248:	movt	r3, #5
   2324c:	movw	r2, #12600	; 0x3138
   23250:	movt	r2, #5
   23254:	str	r2, [r3]
   23258:	movw	r3, #12596	; 0x3134
   2325c:	movt	r3, #5
   23260:	mov	r2, #1
   23264:	str	r2, [r3]
   23268:	nop	{0}
   2326c:	sub	sp, fp, #4
   23270:	ldr	fp, [sp]
   23274:	add	sp, sp, #4
   23278:	pop	{pc}		; (ldr pc, [sp], #4)
   2327c:	str	fp, [sp, #-8]!
   23280:	str	lr, [sp, #4]
   23284:	add	fp, sp, #4
   23288:	sub	sp, sp, #80	; 0x50
   2328c:	str	r0, [fp, #-48]	; 0xffffffd0
   23290:	str	r1, [fp, #-52]	; 0xffffffcc
   23294:	str	r2, [fp, #-56]	; 0xffffffc8
   23298:	str	r3, [fp, #-60]	; 0xffffffc4
   2329c:	bl	11168 <__errno_location@plt>
   232a0:	mov	r3, r0
   232a4:	ldr	r3, [r3]
   232a8:	str	r3, [fp, #-16]
   232ac:	movw	r3, #12608	; 0x3140
   232b0:	movt	r3, #5
   232b4:	ldr	r3, [r3]
   232b8:	str	r3, [fp, #-8]
   232bc:	mvn	r3, #-2147483648	; 0x80000000
   232c0:	str	r3, [fp, #-20]	; 0xffffffec
   232c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   232c8:	cmp	r3, #0
   232cc:	blt	232e0 <__assert_fail@plt+0x120a0>
   232d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   232d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   232d8:	cmp	r2, r3
   232dc:	blt	232e4 <__assert_fail@plt+0x120a4>
   232e0:	bl	11228 <abort@plt>
   232e4:	movw	r3, #12596	; 0x3134
   232e8:	movt	r3, #5
   232ec:	ldr	r3, [r3]
   232f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   232f4:	cmp	r2, r3
   232f8:	blt	233f0 <__assert_fail@plt+0x121b0>
   232fc:	ldr	r2, [fp, #-8]
   23300:	movw	r3, #12600	; 0x3138
   23304:	movt	r3, #5
   23308:	cmp	r2, r3
   2330c:	moveq	r3, #1
   23310:	movne	r3, #0
   23314:	strb	r3, [fp, #-21]	; 0xffffffeb
   23318:	movw	r3, #12596	; 0x3134
   2331c:	movt	r3, #5
   23320:	ldr	r3, [r3]
   23324:	str	r3, [fp, #-40]	; 0xffffffd8
   23328:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2332c:	cmp	r3, #0
   23330:	beq	2333c <__assert_fail@plt+0x120fc>
   23334:	mov	r0, #0
   23338:	b	23340 <__assert_fail@plt+0x12100>
   2333c:	ldr	r0, [fp, #-8]
   23340:	movw	r3, #12596	; 0x3134
   23344:	movt	r3, #5
   23348:	ldr	r3, [r3]
   2334c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23350:	sub	r3, r2, r3
   23354:	add	r2, r3, #1
   23358:	sub	r1, fp, #40	; 0x28
   2335c:	mov	r3, #8
   23360:	str	r3, [sp]
   23364:	ldr	r3, [fp, #-20]	; 0xffffffec
   23368:	bl	3e968 <__assert_fail@plt+0x2d728>
   2336c:	str	r0, [fp, #-8]
   23370:	movw	r3, #12608	; 0x3140
   23374:	movt	r3, #5
   23378:	ldr	r2, [fp, #-8]
   2337c:	str	r2, [r3]
   23380:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   23384:	cmp	r3, #0
   23388:	beq	233a4 <__assert_fail@plt+0x12164>
   2338c:	ldr	r2, [fp, #-8]
   23390:	movw	r3, #12600	; 0x3138
   23394:	movt	r3, #5
   23398:	mov	r1, r2
   2339c:	ldrd	r2, [r3]
   233a0:	strd	r2, [r1]
   233a4:	movw	r3, #12596	; 0x3134
   233a8:	movt	r3, #5
   233ac:	ldr	r3, [r3]
   233b0:	lsl	r3, r3, #3
   233b4:	ldr	r2, [fp, #-8]
   233b8:	add	r0, r2, r3
   233bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   233c0:	movw	r3, #12596	; 0x3134
   233c4:	movt	r3, #5
   233c8:	ldr	r3, [r3]
   233cc:	sub	r3, r2, r3
   233d0:	lsl	r3, r3, #3
   233d4:	mov	r2, r3
   233d8:	mov	r1, #0
   233dc:	bl	1118c <memset@plt>
   233e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   233e4:	movw	r3, #12596	; 0x3134
   233e8:	movt	r3, #5
   233ec:	str	r2, [r3]
   233f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   233f4:	lsl	r3, r3, #3
   233f8:	ldr	r2, [fp, #-8]
   233fc:	add	r3, r2, r3
   23400:	ldr	r3, [r3]
   23404:	str	r3, [fp, #-28]	; 0xffffffe4
   23408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2340c:	lsl	r3, r3, #3
   23410:	ldr	r2, [fp, #-8]
   23414:	add	r3, r2, r3
   23418:	ldr	r3, [r3, #4]
   2341c:	str	r3, [fp, #-12]
   23420:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23424:	ldr	r3, [r3, #4]
   23428:	orr	r3, r3, #1
   2342c:	str	r3, [fp, #-32]	; 0xffffffe0
   23430:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23434:	ldr	r3, [r3]
   23438:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2343c:	add	r2, r2, #8
   23440:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23444:	ldr	r1, [r1, #40]	; 0x28
   23448:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2344c:	ldr	r0, [r0, #44]	; 0x2c
   23450:	str	r0, [sp, #16]
   23454:	str	r1, [sp, #12]
   23458:	str	r2, [sp, #8]
   2345c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23460:	str	r2, [sp, #4]
   23464:	str	r3, [sp]
   23468:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2346c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   23470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23474:	ldr	r0, [fp, #-12]
   23478:	bl	2181c <__assert_fail@plt+0x105dc>
   2347c:	str	r0, [fp, #-36]	; 0xffffffdc
   23480:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23484:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23488:	cmp	r2, r3
   2348c:	bhi	23544 <__assert_fail@plt+0x12304>
   23490:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23494:	add	r3, r3, #1
   23498:	str	r3, [fp, #-28]	; 0xffffffe4
   2349c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   234a0:	lsl	r3, r3, #3
   234a4:	ldr	r2, [fp, #-8]
   234a8:	add	r3, r2, r3
   234ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   234b0:	str	r2, [r3]
   234b4:	ldr	r2, [fp, #-12]
   234b8:	movw	r3, #12760	; 0x31d8
   234bc:	movt	r3, #5
   234c0:	cmp	r2, r3
   234c4:	beq	234d0 <__assert_fail@plt+0x12290>
   234c8:	ldr	r0, [fp, #-12]
   234cc:	bl	13798 <__assert_fail@plt+0x2558>
   234d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   234d4:	bl	3e608 <__assert_fail@plt+0x2d3c8>
   234d8:	mov	r3, r0
   234dc:	str	r3, [fp, #-12]
   234e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   234e4:	lsl	r3, r3, #3
   234e8:	ldr	r2, [fp, #-8]
   234ec:	add	r3, r2, r3
   234f0:	ldr	r2, [fp, #-12]
   234f4:	str	r2, [r3, #4]
   234f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   234fc:	ldr	r3, [r3]
   23500:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23504:	add	r2, r2, #8
   23508:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2350c:	ldr	r1, [r1, #40]	; 0x28
   23510:	ldr	r0, [fp, #-60]	; 0xffffffc4
   23514:	ldr	r0, [r0, #44]	; 0x2c
   23518:	str	r0, [sp, #16]
   2351c:	str	r1, [sp, #12]
   23520:	str	r2, [sp, #8]
   23524:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23528:	str	r2, [sp, #4]
   2352c:	str	r3, [sp]
   23530:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23534:	ldr	r2, [fp, #-52]	; 0xffffffcc
   23538:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2353c:	ldr	r0, [fp, #-12]
   23540:	bl	2181c <__assert_fail@plt+0x105dc>
   23544:	bl	11168 <__errno_location@plt>
   23548:	mov	r2, r0
   2354c:	ldr	r3, [fp, #-16]
   23550:	str	r3, [r2]
   23554:	ldr	r3, [fp, #-12]
   23558:	mov	r0, r3
   2355c:	sub	sp, fp, #4
   23560:	ldr	fp, [sp]
   23564:	add	sp, sp, #4
   23568:	pop	{pc}		; (ldr pc, [sp], #4)
   2356c:	str	fp, [sp, #-8]!
   23570:	str	lr, [sp, #4]
   23574:	add	fp, sp, #4
   23578:	sub	sp, sp, #8
   2357c:	str	r0, [fp, #-8]
   23580:	str	r1, [fp, #-12]
   23584:	movw	r3, #12712	; 0x31a8
   23588:	movt	r3, #5
   2358c:	mvn	r2, #0
   23590:	ldr	r1, [fp, #-12]
   23594:	ldr	r0, [fp, #-8]
   23598:	bl	2327c <__assert_fail@plt+0x1203c>
   2359c:	mov	r3, r0
   235a0:	mov	r0, r3
   235a4:	sub	sp, fp, #4
   235a8:	ldr	fp, [sp]
   235ac:	add	sp, sp, #4
   235b0:	pop	{pc}		; (ldr pc, [sp], #4)
   235b4:	str	fp, [sp, #-8]!
   235b8:	str	lr, [sp, #4]
   235bc:	add	fp, sp, #4
   235c0:	sub	sp, sp, #16
   235c4:	str	r0, [fp, #-8]
   235c8:	str	r1, [fp, #-12]
   235cc:	str	r2, [fp, #-16]
   235d0:	movw	r3, #12712	; 0x31a8
   235d4:	movt	r3, #5
   235d8:	ldr	r2, [fp, #-16]
   235dc:	ldr	r1, [fp, #-12]
   235e0:	ldr	r0, [fp, #-8]
   235e4:	bl	2327c <__assert_fail@plt+0x1203c>
   235e8:	mov	r3, r0
   235ec:	mov	r0, r3
   235f0:	sub	sp, fp, #4
   235f4:	ldr	fp, [sp]
   235f8:	add	sp, sp, #4
   235fc:	pop	{pc}		; (ldr pc, [sp], #4)
   23600:	str	fp, [sp, #-8]!
   23604:	str	lr, [sp, #4]
   23608:	add	fp, sp, #4
   2360c:	sub	sp, sp, #8
   23610:	str	r0, [fp, #-8]
   23614:	ldr	r1, [fp, #-8]
   23618:	mov	r0, #0
   2361c:	bl	2356c <__assert_fail@plt+0x1232c>
   23620:	mov	r3, r0
   23624:	mov	r0, r3
   23628:	sub	sp, fp, #4
   2362c:	ldr	fp, [sp]
   23630:	add	sp, sp, #4
   23634:	pop	{pc}		; (ldr pc, [sp], #4)
   23638:	str	fp, [sp, #-8]!
   2363c:	str	lr, [sp, #4]
   23640:	add	fp, sp, #4
   23644:	sub	sp, sp, #8
   23648:	str	r0, [fp, #-8]
   2364c:	str	r1, [fp, #-12]
   23650:	ldr	r2, [fp, #-12]
   23654:	ldr	r1, [fp, #-8]
   23658:	mov	r0, #0
   2365c:	bl	235b4 <__assert_fail@plt+0x12374>
   23660:	mov	r3, r0
   23664:	mov	r0, r3
   23668:	sub	sp, fp, #4
   2366c:	ldr	fp, [sp]
   23670:	add	sp, sp, #4
   23674:	pop	{pc}		; (ldr pc, [sp], #4)
   23678:	str	fp, [sp, #-8]!
   2367c:	str	lr, [sp, #4]
   23680:	add	fp, sp, #4
   23684:	sub	sp, sp, #64	; 0x40
   23688:	str	r0, [fp, #-56]	; 0xffffffc8
   2368c:	str	r1, [fp, #-60]	; 0xffffffc4
   23690:	str	r2, [fp, #-64]	; 0xffffffc0
   23694:	sub	r3, fp, #52	; 0x34
   23698:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2369c:	mov	r0, r3
   236a0:	bl	21678 <__assert_fail@plt+0x10438>
   236a4:	sub	r3, fp, #52	; 0x34
   236a8:	mvn	r2, #0
   236ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   236b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   236b4:	bl	2327c <__assert_fail@plt+0x1203c>
   236b8:	mov	r3, r0
   236bc:	mov	r0, r3
   236c0:	sub	sp, fp, #4
   236c4:	ldr	fp, [sp]
   236c8:	add	sp, sp, #4
   236cc:	pop	{pc}		; (ldr pc, [sp], #4)
   236d0:	str	fp, [sp, #-8]!
   236d4:	str	lr, [sp, #4]
   236d8:	add	fp, sp, #4
   236dc:	sub	sp, sp, #64	; 0x40
   236e0:	str	r0, [fp, #-56]	; 0xffffffc8
   236e4:	str	r1, [fp, #-60]	; 0xffffffc4
   236e8:	str	r2, [fp, #-64]	; 0xffffffc0
   236ec:	str	r3, [fp, #-68]	; 0xffffffbc
   236f0:	sub	r3, fp, #52	; 0x34
   236f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   236f8:	mov	r0, r3
   236fc:	bl	21678 <__assert_fail@plt+0x10438>
   23700:	sub	r3, fp, #52	; 0x34
   23704:	ldr	r2, [fp, #-68]	; 0xffffffbc
   23708:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2370c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23710:	bl	2327c <__assert_fail@plt+0x1203c>
   23714:	mov	r3, r0
   23718:	mov	r0, r3
   2371c:	sub	sp, fp, #4
   23720:	ldr	fp, [sp]
   23724:	add	sp, sp, #4
   23728:	pop	{pc}		; (ldr pc, [sp], #4)
   2372c:	str	fp, [sp, #-8]!
   23730:	str	lr, [sp, #4]
   23734:	add	fp, sp, #4
   23738:	sub	sp, sp, #8
   2373c:	str	r0, [fp, #-8]
   23740:	str	r1, [fp, #-12]
   23744:	ldr	r2, [fp, #-12]
   23748:	ldr	r1, [fp, #-8]
   2374c:	mov	r0, #0
   23750:	bl	23678 <__assert_fail@plt+0x12438>
   23754:	mov	r3, r0
   23758:	mov	r0, r3
   2375c:	sub	sp, fp, #4
   23760:	ldr	fp, [sp]
   23764:	add	sp, sp, #4
   23768:	pop	{pc}		; (ldr pc, [sp], #4)
   2376c:	str	fp, [sp, #-8]!
   23770:	str	lr, [sp, #4]
   23774:	add	fp, sp, #4
   23778:	sub	sp, sp, #16
   2377c:	str	r0, [fp, #-8]
   23780:	str	r1, [fp, #-12]
   23784:	str	r2, [fp, #-16]
   23788:	ldr	r3, [fp, #-16]
   2378c:	ldr	r2, [fp, #-12]
   23790:	ldr	r1, [fp, #-8]
   23794:	mov	r0, #0
   23798:	bl	236d0 <__assert_fail@plt+0x12490>
   2379c:	mov	r3, r0
   237a0:	mov	r0, r3
   237a4:	sub	sp, fp, #4
   237a8:	ldr	fp, [sp]
   237ac:	add	sp, sp, #4
   237b0:	pop	{pc}		; (ldr pc, [sp], #4)
   237b4:	str	fp, [sp, #-8]!
   237b8:	str	lr, [sp, #4]
   237bc:	add	fp, sp, #4
   237c0:	sub	sp, sp, #64	; 0x40
   237c4:	str	r0, [fp, #-56]	; 0xffffffc8
   237c8:	str	r1, [fp, #-60]	; 0xffffffc4
   237cc:	mov	r3, r2
   237d0:	strb	r3, [fp, #-61]	; 0xffffffc3
   237d4:	movw	r2, #12712	; 0x31a8
   237d8:	movt	r2, #5
   237dc:	sub	r3, fp, #52	; 0x34
   237e0:	ldrd	r0, [r2]
   237e4:	strd	r0, [r3]
   237e8:	ldrd	r0, [r2, #8]
   237ec:	strd	r0, [r3, #8]
   237f0:	ldrd	r0, [r2, #16]
   237f4:	strd	r0, [r3, #16]
   237f8:	ldrd	r0, [r2, #24]
   237fc:	strd	r0, [r3, #24]
   23800:	ldrd	r0, [r2, #32]
   23804:	strd	r0, [r3, #32]
   23808:	ldrd	r0, [r2, #40]	; 0x28
   2380c:	strd	r0, [r3, #40]	; 0x28
   23810:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   23814:	sub	r3, fp, #52	; 0x34
   23818:	mov	r2, #1
   2381c:	mov	r0, r3
   23820:	bl	214d8 <__assert_fail@plt+0x10298>
   23824:	sub	r3, fp, #52	; 0x34
   23828:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2382c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   23830:	mov	r0, #0
   23834:	bl	2327c <__assert_fail@plt+0x1203c>
   23838:	mov	r3, r0
   2383c:	mov	r0, r3
   23840:	sub	sp, fp, #4
   23844:	ldr	fp, [sp]
   23848:	add	sp, sp, #4
   2384c:	pop	{pc}		; (ldr pc, [sp], #4)
   23850:	str	fp, [sp, #-8]!
   23854:	str	lr, [sp, #4]
   23858:	add	fp, sp, #4
   2385c:	sub	sp, sp, #8
   23860:	str	r0, [fp, #-8]
   23864:	mov	r3, r1
   23868:	strb	r3, [fp, #-9]
   2386c:	ldrb	r3, [fp, #-9]
   23870:	mov	r2, r3
   23874:	mvn	r1, #0
   23878:	ldr	r0, [fp, #-8]
   2387c:	bl	237b4 <__assert_fail@plt+0x12574>
   23880:	mov	r3, r0
   23884:	mov	r0, r3
   23888:	sub	sp, fp, #4
   2388c:	ldr	fp, [sp]
   23890:	add	sp, sp, #4
   23894:	pop	{pc}		; (ldr pc, [sp], #4)
   23898:	str	fp, [sp, #-8]!
   2389c:	str	lr, [sp, #4]
   238a0:	add	fp, sp, #4
   238a4:	sub	sp, sp, #8
   238a8:	str	r0, [fp, #-8]
   238ac:	mov	r1, #58	; 0x3a
   238b0:	ldr	r0, [fp, #-8]
   238b4:	bl	23850 <__assert_fail@plt+0x12610>
   238b8:	mov	r3, r0
   238bc:	mov	r0, r3
   238c0:	sub	sp, fp, #4
   238c4:	ldr	fp, [sp]
   238c8:	add	sp, sp, #4
   238cc:	pop	{pc}		; (ldr pc, [sp], #4)
   238d0:	str	fp, [sp, #-8]!
   238d4:	str	lr, [sp, #4]
   238d8:	add	fp, sp, #4
   238dc:	sub	sp, sp, #8
   238e0:	str	r0, [fp, #-8]
   238e4:	str	r1, [fp, #-12]
   238e8:	mov	r2, #58	; 0x3a
   238ec:	ldr	r1, [fp, #-12]
   238f0:	ldr	r0, [fp, #-8]
   238f4:	bl	237b4 <__assert_fail@plt+0x12574>
   238f8:	mov	r3, r0
   238fc:	mov	r0, r3
   23900:	sub	sp, fp, #4
   23904:	ldr	fp, [sp]
   23908:	add	sp, sp, #4
   2390c:	pop	{pc}		; (ldr pc, [sp], #4)
   23910:	str	fp, [sp, #-8]!
   23914:	str	lr, [sp, #4]
   23918:	add	fp, sp, #4
   2391c:	sub	sp, sp, #112	; 0x70
   23920:	str	r0, [fp, #-56]	; 0xffffffc8
   23924:	str	r1, [fp, #-60]	; 0xffffffc4
   23928:	str	r2, [fp, #-64]	; 0xffffffc0
   2392c:	sub	r3, fp, #116	; 0x74
   23930:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23934:	mov	r0, r3
   23938:	bl	21678 <__assert_fail@plt+0x10438>
   2393c:	sub	r3, fp, #52	; 0x34
   23940:	sub	r2, fp, #116	; 0x74
   23944:	ldrd	r0, [r2]
   23948:	strd	r0, [r3]
   2394c:	ldrd	r0, [r2, #8]
   23950:	strd	r0, [r3, #8]
   23954:	ldrd	r0, [r2, #16]
   23958:	strd	r0, [r3, #16]
   2395c:	ldrd	r0, [r2, #24]
   23960:	strd	r0, [r3, #24]
   23964:	ldrd	r0, [r2, #32]
   23968:	strd	r0, [r3, #32]
   2396c:	ldrd	r0, [r2, #40]	; 0x28
   23970:	strd	r0, [r3, #40]	; 0x28
   23974:	sub	r3, fp, #52	; 0x34
   23978:	mov	r2, #1
   2397c:	mov	r1, #58	; 0x3a
   23980:	mov	r0, r3
   23984:	bl	214d8 <__assert_fail@plt+0x10298>
   23988:	sub	r3, fp, #52	; 0x34
   2398c:	mvn	r2, #0
   23990:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23994:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23998:	bl	2327c <__assert_fail@plt+0x1203c>
   2399c:	mov	r3, r0
   239a0:	mov	r0, r3
   239a4:	sub	sp, fp, #4
   239a8:	ldr	fp, [sp]
   239ac:	add	sp, sp, #4
   239b0:	pop	{pc}		; (ldr pc, [sp], #4)
   239b4:	str	fp, [sp, #-8]!
   239b8:	str	lr, [sp, #4]
   239bc:	add	fp, sp, #4
   239c0:	sub	sp, sp, #24
   239c4:	str	r0, [fp, #-8]
   239c8:	str	r1, [fp, #-12]
   239cc:	str	r2, [fp, #-16]
   239d0:	str	r3, [fp, #-20]	; 0xffffffec
   239d4:	mvn	r3, #0
   239d8:	str	r3, [sp]
   239dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   239e0:	ldr	r2, [fp, #-16]
   239e4:	ldr	r1, [fp, #-12]
   239e8:	ldr	r0, [fp, #-8]
   239ec:	bl	23a08 <__assert_fail@plt+0x127c8>
   239f0:	mov	r3, r0
   239f4:	mov	r0, r3
   239f8:	sub	sp, fp, #4
   239fc:	ldr	fp, [sp]
   23a00:	add	sp, sp, #4
   23a04:	pop	{pc}		; (ldr pc, [sp], #4)
   23a08:	str	fp, [sp, #-8]!
   23a0c:	str	lr, [sp, #4]
   23a10:	add	fp, sp, #4
   23a14:	sub	sp, sp, #64	; 0x40
   23a18:	str	r0, [fp, #-56]	; 0xffffffc8
   23a1c:	str	r1, [fp, #-60]	; 0xffffffc4
   23a20:	str	r2, [fp, #-64]	; 0xffffffc0
   23a24:	str	r3, [fp, #-68]	; 0xffffffbc
   23a28:	movw	r2, #12712	; 0x31a8
   23a2c:	movt	r2, #5
   23a30:	sub	r3, fp, #52	; 0x34
   23a34:	ldrd	r0, [r2]
   23a38:	strd	r0, [r3]
   23a3c:	ldrd	r0, [r2, #8]
   23a40:	strd	r0, [r3, #8]
   23a44:	ldrd	r0, [r2, #16]
   23a48:	strd	r0, [r3, #16]
   23a4c:	ldrd	r0, [r2, #24]
   23a50:	strd	r0, [r3, #24]
   23a54:	ldrd	r0, [r2, #32]
   23a58:	strd	r0, [r3, #32]
   23a5c:	ldrd	r0, [r2, #40]	; 0x28
   23a60:	strd	r0, [r3, #40]	; 0x28
   23a64:	sub	r3, fp, #52	; 0x34
   23a68:	ldr	r2, [fp, #-64]	; 0xffffffc0
   23a6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   23a70:	mov	r0, r3
   23a74:	bl	215f0 <__assert_fail@plt+0x103b0>
   23a78:	sub	r3, fp, #52	; 0x34
   23a7c:	ldr	r2, [fp, #4]
   23a80:	ldr	r1, [fp, #-68]	; 0xffffffbc
   23a84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23a88:	bl	2327c <__assert_fail@plt+0x1203c>
   23a8c:	mov	r3, r0
   23a90:	mov	r0, r3
   23a94:	sub	sp, fp, #4
   23a98:	ldr	fp, [sp]
   23a9c:	add	sp, sp, #4
   23aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   23aa4:	str	fp, [sp, #-8]!
   23aa8:	str	lr, [sp, #4]
   23aac:	add	fp, sp, #4
   23ab0:	sub	sp, sp, #16
   23ab4:	str	r0, [fp, #-8]
   23ab8:	str	r1, [fp, #-12]
   23abc:	str	r2, [fp, #-16]
   23ac0:	ldr	r3, [fp, #-16]
   23ac4:	ldr	r2, [fp, #-12]
   23ac8:	ldr	r1, [fp, #-8]
   23acc:	mov	r0, #0
   23ad0:	bl	239b4 <__assert_fail@plt+0x12774>
   23ad4:	mov	r3, r0
   23ad8:	mov	r0, r3
   23adc:	sub	sp, fp, #4
   23ae0:	ldr	fp, [sp]
   23ae4:	add	sp, sp, #4
   23ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   23aec:	str	fp, [sp, #-8]!
   23af0:	str	lr, [sp, #4]
   23af4:	add	fp, sp, #4
   23af8:	sub	sp, sp, #24
   23afc:	str	r0, [fp, #-8]
   23b00:	str	r1, [fp, #-12]
   23b04:	str	r2, [fp, #-16]
   23b08:	str	r3, [fp, #-20]	; 0xffffffec
   23b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b10:	str	r3, [sp]
   23b14:	ldr	r3, [fp, #-16]
   23b18:	ldr	r2, [fp, #-12]
   23b1c:	ldr	r1, [fp, #-8]
   23b20:	mov	r0, #0
   23b24:	bl	23a08 <__assert_fail@plt+0x127c8>
   23b28:	mov	r3, r0
   23b2c:	mov	r0, r3
   23b30:	sub	sp, fp, #4
   23b34:	ldr	fp, [sp]
   23b38:	add	sp, sp, #4
   23b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   23b40:	str	fp, [sp, #-8]!
   23b44:	str	lr, [sp, #4]
   23b48:	add	fp, sp, #4
   23b4c:	sub	sp, sp, #16
   23b50:	str	r0, [fp, #-8]
   23b54:	str	r1, [fp, #-12]
   23b58:	str	r2, [fp, #-16]
   23b5c:	movw	r3, #12612	; 0x3144
   23b60:	movt	r3, #5
   23b64:	ldr	r2, [fp, #-16]
   23b68:	ldr	r1, [fp, #-12]
   23b6c:	ldr	r0, [fp, #-8]
   23b70:	bl	2327c <__assert_fail@plt+0x1203c>
   23b74:	mov	r3, r0
   23b78:	mov	r0, r3
   23b7c:	sub	sp, fp, #4
   23b80:	ldr	fp, [sp]
   23b84:	add	sp, sp, #4
   23b88:	pop	{pc}		; (ldr pc, [sp], #4)
   23b8c:	str	fp, [sp, #-8]!
   23b90:	str	lr, [sp, #4]
   23b94:	add	fp, sp, #4
   23b98:	sub	sp, sp, #8
   23b9c:	str	r0, [fp, #-8]
   23ba0:	str	r1, [fp, #-12]
   23ba4:	ldr	r2, [fp, #-12]
   23ba8:	ldr	r1, [fp, #-8]
   23bac:	mov	r0, #0
   23bb0:	bl	23b40 <__assert_fail@plt+0x12900>
   23bb4:	mov	r3, r0
   23bb8:	mov	r0, r3
   23bbc:	sub	sp, fp, #4
   23bc0:	ldr	fp, [sp]
   23bc4:	add	sp, sp, #4
   23bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   23bcc:	str	fp, [sp, #-8]!
   23bd0:	str	lr, [sp, #4]
   23bd4:	add	fp, sp, #4
   23bd8:	sub	sp, sp, #8
   23bdc:	str	r0, [fp, #-8]
   23be0:	str	r1, [fp, #-12]
   23be4:	mvn	r2, #0
   23be8:	ldr	r1, [fp, #-12]
   23bec:	ldr	r0, [fp, #-8]
   23bf0:	bl	23b40 <__assert_fail@plt+0x12900>
   23bf4:	mov	r3, r0
   23bf8:	mov	r0, r3
   23bfc:	sub	sp, fp, #4
   23c00:	ldr	fp, [sp]
   23c04:	add	sp, sp, #4
   23c08:	pop	{pc}		; (ldr pc, [sp], #4)
   23c0c:	str	fp, [sp, #-8]!
   23c10:	str	lr, [sp, #4]
   23c14:	add	fp, sp, #4
   23c18:	sub	sp, sp, #8
   23c1c:	str	r0, [fp, #-8]
   23c20:	ldr	r1, [fp, #-8]
   23c24:	mov	r0, #0
   23c28:	bl	23bcc <__assert_fail@plt+0x1298c>
   23c2c:	mov	r3, r0
   23c30:	mov	r0, r3
   23c34:	sub	sp, fp, #4
   23c38:	ldr	fp, [sp]
   23c3c:	add	sp, sp, #4
   23c40:	pop	{pc}		; (ldr pc, [sp], #4)
   23c44:	push	{fp}		; (str fp, [sp, #-4]!)
   23c48:	add	fp, sp, #0
   23c4c:	mvn	r3, #0
   23c50:	mov	r0, r3
   23c54:	add	sp, fp, #0
   23c58:	pop	{fp}		; (ldr fp, [sp], #4)
   23c5c:	bx	lr
   23c60:	push	{fp}		; (str fp, [sp, #-4]!)
   23c64:	add	fp, sp, #0
   23c68:	sub	sp, sp, #12
   23c6c:	str	r0, [fp, #-8]
   23c70:	str	r1, [fp, #-12]
   23c74:	ldr	r3, [fp, #-12]
   23c78:	add	r2, r3, #31
   23c7c:	cmp	r3, #0
   23c80:	movlt	r3, r2
   23c84:	movge	r3, r3
   23c88:	asr	r3, r3, #5
   23c8c:	mov	r0, r3
   23c90:	mov	r3, r0
   23c94:	lsl	r3, r3, #2
   23c98:	ldr	r2, [fp, #-8]
   23c9c:	add	r3, r2, r3
   23ca0:	ldr	r1, [r3]
   23ca4:	ldr	r3, [fp, #-12]
   23ca8:	rsbs	r2, r3, #0
   23cac:	and	r3, r3, #31
   23cb0:	and	r2, r2, #31
   23cb4:	rsbpl	r3, r2, #0
   23cb8:	mov	r2, #1
   23cbc:	lsl	r2, r2, r3
   23cc0:	mov	r3, r0
   23cc4:	lsl	r3, r3, #2
   23cc8:	ldr	r0, [fp, #-8]
   23ccc:	add	r3, r0, r3
   23cd0:	orr	r2, r1, r2
   23cd4:	str	r2, [r3]
   23cd8:	nop	{0}
   23cdc:	add	sp, fp, #0
   23ce0:	pop	{fp}		; (ldr fp, [sp], #4)
   23ce4:	bx	lr
   23ce8:	push	{fp}		; (str fp, [sp, #-4]!)
   23cec:	add	fp, sp, #0
   23cf0:	sub	sp, sp, #12
   23cf4:	str	r0, [fp, #-8]
   23cf8:	str	r1, [fp, #-12]
   23cfc:	ldr	r3, [fp, #-12]
   23d00:	add	r2, r3, #31
   23d04:	cmp	r3, #0
   23d08:	movlt	r3, r2
   23d0c:	movge	r3, r3
   23d10:	asr	r3, r3, #5
   23d14:	mov	r0, r3
   23d18:	mov	r3, r0
   23d1c:	lsl	r3, r3, #2
   23d20:	ldr	r2, [fp, #-8]
   23d24:	add	r3, r2, r3
   23d28:	ldr	r1, [r3]
   23d2c:	ldr	r3, [fp, #-12]
   23d30:	rsbs	r2, r3, #0
   23d34:	and	r3, r3, #31
   23d38:	and	r2, r2, #31
   23d3c:	rsbpl	r3, r2, #0
   23d40:	mov	r2, #1
   23d44:	lsl	r3, r2, r3
   23d48:	mvn	r2, r3
   23d4c:	mov	r3, r0
   23d50:	lsl	r3, r3, #2
   23d54:	ldr	r0, [fp, #-8]
   23d58:	add	r3, r0, r3
   23d5c:	and	r2, r2, r1
   23d60:	str	r2, [r3]
   23d64:	nop	{0}
   23d68:	add	sp, fp, #0
   23d6c:	pop	{fp}		; (ldr fp, [sp], #4)
   23d70:	bx	lr
   23d74:	push	{fp}		; (str fp, [sp, #-4]!)
   23d78:	add	fp, sp, #0
   23d7c:	sub	sp, sp, #12
   23d80:	str	r0, [fp, #-8]
   23d84:	str	r1, [fp, #-12]
   23d88:	ldr	r3, [fp, #-12]
   23d8c:	add	r2, r3, #31
   23d90:	cmp	r3, #0
   23d94:	movlt	r3, r2
   23d98:	movge	r3, r3
   23d9c:	asr	r3, r3, #5
   23da0:	lsl	r3, r3, #2
   23da4:	ldr	r2, [fp, #-8]
   23da8:	add	r3, r2, r3
   23dac:	ldr	r2, [r3]
   23db0:	ldr	r3, [fp, #-12]
   23db4:	rsbs	r1, r3, #0
   23db8:	and	r3, r3, #31
   23dbc:	and	r1, r1, #31
   23dc0:	rsbpl	r3, r1, #0
   23dc4:	lsr	r3, r2, r3
   23dc8:	and	r3, r3, #1
   23dcc:	cmp	r3, #0
   23dd0:	movne	r3, #1
   23dd4:	moveq	r3, #0
   23dd8:	uxtb	r3, r3
   23ddc:	mov	r0, r3
   23de0:	add	sp, fp, #0
   23de4:	pop	{fp}		; (ldr fp, [sp], #4)
   23de8:	bx	lr
   23dec:	str	fp, [sp, #-8]!
   23df0:	str	lr, [sp, #4]
   23df4:	add	fp, sp, #4
   23df8:	sub	sp, sp, #8
   23dfc:	str	r0, [fp, #-8]
   23e00:	mov	r2, #32
   23e04:	mov	r1, #0
   23e08:	ldr	r0, [fp, #-8]
   23e0c:	bl	1118c <memset@plt>
   23e10:	nop	{0}
   23e14:	sub	sp, fp, #4
   23e18:	ldr	fp, [sp]
   23e1c:	add	sp, sp, #4
   23e20:	pop	{pc}		; (ldr pc, [sp], #4)
   23e24:	str	fp, [sp, #-8]!
   23e28:	str	lr, [sp, #4]
   23e2c:	add	fp, sp, #4
   23e30:	sub	sp, sp, #8
   23e34:	str	r0, [fp, #-8]
   23e38:	mov	r2, #32
   23e3c:	mvn	r1, #0
   23e40:	ldr	r0, [fp, #-8]
   23e44:	bl	1118c <memset@plt>
   23e48:	nop	{0}
   23e4c:	sub	sp, fp, #4
   23e50:	ldr	fp, [sp]
   23e54:	add	sp, sp, #4
   23e58:	pop	{pc}		; (ldr pc, [sp], #4)
   23e5c:	str	fp, [sp, #-8]!
   23e60:	str	lr, [sp, #4]
   23e64:	add	fp, sp, #4
   23e68:	sub	sp, sp, #8
   23e6c:	str	r0, [fp, #-8]
   23e70:	str	r1, [fp, #-12]
   23e74:	mov	r2, #32
   23e78:	ldr	r1, [fp, #-12]
   23e7c:	ldr	r0, [fp, #-8]
   23e80:	bl	10fe8 <memcpy@plt>
   23e84:	nop	{0}
   23e88:	sub	sp, fp, #4
   23e8c:	ldr	fp, [sp]
   23e90:	add	sp, sp, #4
   23e94:	pop	{pc}		; (ldr pc, [sp], #4)
   23e98:	push	{fp}		; (str fp, [sp, #-4]!)
   23e9c:	add	fp, sp, #0
   23ea0:	sub	sp, sp, #20
   23ea4:	str	r0, [fp, #-16]
   23ea8:	mov	r3, #0
   23eac:	str	r3, [fp, #-8]
   23eb0:	b	23eec <__assert_fail@plt+0x12cac>
   23eb4:	ldr	r3, [fp, #-8]
   23eb8:	lsl	r3, r3, #2
   23ebc:	ldr	r2, [fp, #-16]
   23ec0:	add	r3, r2, r3
   23ec4:	ldr	r2, [r3]
   23ec8:	ldr	r3, [fp, #-8]
   23ecc:	lsl	r3, r3, #2
   23ed0:	ldr	r1, [fp, #-16]
   23ed4:	add	r3, r1, r3
   23ed8:	mvn	r2, r2
   23edc:	str	r2, [r3]
   23ee0:	ldr	r3, [fp, #-8]
   23ee4:	add	r3, r3, #1
   23ee8:	str	r3, [fp, #-8]
   23eec:	ldr	r3, [fp, #-8]
   23ef0:	cmp	r3, #7
   23ef4:	ble	23eb4 <__assert_fail@plt+0x12c74>
   23ef8:	nop	{0}
   23efc:	add	sp, fp, #0
   23f00:	pop	{fp}		; (ldr fp, [sp], #4)
   23f04:	bx	lr
   23f08:	push	{fp}		; (str fp, [sp, #-4]!)
   23f0c:	add	fp, sp, #0
   23f10:	sub	sp, sp, #20
   23f14:	str	r0, [fp, #-16]
   23f18:	str	r1, [fp, #-20]	; 0xffffffec
   23f1c:	mov	r3, #0
   23f20:	str	r3, [fp, #-8]
   23f24:	b	23f74 <__assert_fail@plt+0x12d34>
   23f28:	ldr	r3, [fp, #-8]
   23f2c:	lsl	r3, r3, #2
   23f30:	ldr	r2, [fp, #-16]
   23f34:	add	r3, r2, r3
   23f38:	ldr	r1, [r3]
   23f3c:	ldr	r3, [fp, #-8]
   23f40:	lsl	r3, r3, #2
   23f44:	ldr	r2, [fp, #-20]	; 0xffffffec
   23f48:	add	r3, r2, r3
   23f4c:	ldr	r2, [r3]
   23f50:	ldr	r3, [fp, #-8]
   23f54:	lsl	r3, r3, #2
   23f58:	ldr	r0, [fp, #-16]
   23f5c:	add	r3, r0, r3
   23f60:	orr	r2, r1, r2
   23f64:	str	r2, [r3]
   23f68:	ldr	r3, [fp, #-8]
   23f6c:	add	r3, r3, #1
   23f70:	str	r3, [fp, #-8]
   23f74:	ldr	r3, [fp, #-8]
   23f78:	cmp	r3, #7
   23f7c:	ble	23f28 <__assert_fail@plt+0x12ce8>
   23f80:	nop	{0}
   23f84:	add	sp, fp, #0
   23f88:	pop	{fp}		; (ldr fp, [sp], #4)
   23f8c:	bx	lr
   23f90:	push	{fp}		; (str fp, [sp, #-4]!)
   23f94:	add	fp, sp, #0
   23f98:	sub	sp, sp, #20
   23f9c:	str	r0, [fp, #-16]
   23fa0:	str	r1, [fp, #-20]	; 0xffffffec
   23fa4:	mov	r3, #0
   23fa8:	str	r3, [fp, #-8]
   23fac:	b	23ffc <__assert_fail@plt+0x12dbc>
   23fb0:	ldr	r3, [fp, #-8]
   23fb4:	lsl	r3, r3, #2
   23fb8:	ldr	r2, [fp, #-16]
   23fbc:	add	r3, r2, r3
   23fc0:	ldr	r1, [r3]
   23fc4:	ldr	r3, [fp, #-8]
   23fc8:	lsl	r3, r3, #2
   23fcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   23fd0:	add	r3, r2, r3
   23fd4:	ldr	r2, [r3]
   23fd8:	ldr	r3, [fp, #-8]
   23fdc:	lsl	r3, r3, #2
   23fe0:	ldr	r0, [fp, #-16]
   23fe4:	add	r3, r0, r3
   23fe8:	and	r2, r2, r1
   23fec:	str	r2, [r3]
   23ff0:	ldr	r3, [fp, #-8]
   23ff4:	add	r3, r3, #1
   23ff8:	str	r3, [fp, #-8]
   23ffc:	ldr	r3, [fp, #-8]
   24000:	cmp	r3, #7
   24004:	ble	23fb0 <__assert_fail@plt+0x12d70>
   24008:	nop	{0}
   2400c:	add	sp, fp, #0
   24010:	pop	{fp}		; (ldr fp, [sp], #4)
   24014:	bx	lr
   24018:	push	{fp}		; (str fp, [sp, #-4]!)
   2401c:	add	fp, sp, #0
   24020:	sub	sp, sp, #20
   24024:	str	r0, [fp, #-16]
   24028:	str	r1, [fp, #-20]	; 0xffffffec
   2402c:	ldr	r3, [fp, #-16]
   24030:	ldr	r3, [r3, #80]	; 0x50
   24034:	cmp	r3, #1
   24038:	bne	24044 <__assert_fail@plt+0x12e04>
   2403c:	mov	r3, #1
   24040:	b	240ac <__assert_fail@plt+0x12e6c>
   24044:	mov	r3, #1
   24048:	str	r3, [fp, #-8]
   2404c:	b	24084 <__assert_fail@plt+0x12e44>
   24050:	ldr	r3, [fp, #-16]
   24054:	ldr	r2, [r3, #8]
   24058:	ldr	r1, [fp, #-20]	; 0xffffffec
   2405c:	ldr	r3, [fp, #-8]
   24060:	add	r3, r1, r3
   24064:	lsl	r3, r3, #2
   24068:	add	r3, r2, r3
   2406c:	ldr	r3, [r3]
   24070:	cmn	r3, #1
   24074:	bne	240a4 <__assert_fail@plt+0x12e64>
   24078:	ldr	r3, [fp, #-8]
   2407c:	add	r3, r3, #1
   24080:	str	r3, [fp, #-8]
   24084:	ldr	r2, [fp, #-20]	; 0xffffffec
   24088:	ldr	r3, [fp, #-8]
   2408c:	add	r2, r2, r3
   24090:	ldr	r3, [fp, #-16]
   24094:	ldr	r3, [r3, #28]
   24098:	cmp	r2, r3
   2409c:	blt	24050 <__assert_fail@plt+0x12e10>
   240a0:	b	240a8 <__assert_fail@plt+0x12e68>
   240a4:	nop	{0}
   240a8:	ldr	r3, [fp, #-8]
   240ac:	mov	r0, r3
   240b0:	add	sp, fp, #0
   240b4:	pop	{fp}		; (ldr fp, [sp], #4)
   240b8:	bx	lr
   240bc:	push	{fp}		; (str fp, [sp, #-4]!)
   240c0:	add	fp, sp, #0
   240c4:	sub	sp, sp, #12
   240c8:	str	r0, [fp, #-8]
   240cc:	str	r1, [fp, #-12]
   240d0:	ldr	r3, [fp, #-8]
   240d4:	ldr	r3, [r3, #80]	; 0x50
   240d8:	cmp	r3, #1
   240dc:	bne	240f8 <__assert_fail@plt+0x12eb8>
   240e0:	ldr	r3, [fp, #-8]
   240e4:	ldr	r2, [r3, #4]
   240e8:	ldr	r3, [fp, #-12]
   240ec:	add	r3, r2, r3
   240f0:	ldrb	r3, [r3]
   240f4:	b	24110 <__assert_fail@plt+0x12ed0>
   240f8:	ldr	r3, [fp, #-8]
   240fc:	ldr	r2, [r3, #8]
   24100:	ldr	r3, [fp, #-12]
   24104:	lsl	r3, r3, #2
   24108:	add	r3, r2, r3
   2410c:	ldr	r3, [r3]
   24110:	mov	r0, r3
   24114:	add	sp, fp, #0
   24118:	pop	{fp}		; (ldr fp, [sp], #4)
   2411c:	bx	lr
   24120:	push	{fp}		; (str fp, [sp, #-4]!)
   24124:	add	fp, sp, #0
   24128:	sub	sp, sp, #12
   2412c:	str	r0, [fp, #-8]
   24130:	str	r1, [fp, #-12]
   24134:	mov	r3, #1
   24138:	mov	r0, r3
   2413c:	add	sp, fp, #0
   24140:	pop	{fp}		; (ldr fp, [sp], #4)
   24144:	bx	lr
   24148:	str	fp, [sp, #-8]!
   2414c:	str	lr, [sp, #4]
   24150:	add	fp, sp, #4
   24154:	sub	sp, sp, #32
   24158:	str	r0, [fp, #-16]
   2415c:	str	r1, [fp, #-20]	; 0xffffffec
   24160:	str	r2, [fp, #-24]	; 0xffffffe8
   24164:	str	r3, [fp, #-28]	; 0xffffffe4
   24168:	ldr	r3, [fp, #12]
   2416c:	ldr	r3, [r3, #92]	; 0x5c
   24170:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24174:	cmp	r2, r3
   24178:	bge	24188 <__assert_fail@plt+0x12f48>
   2417c:	ldr	r3, [fp, #12]
   24180:	ldr	r3, [r3, #92]	; 0x5c
   24184:	str	r3, [fp, #-28]	; 0xffffffe4
   24188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2418c:	add	r3, r3, #1
   24190:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24194:	cmp	r2, r3
   24198:	movlt	r3, r2
   2419c:	movge	r3, r3
   241a0:	str	r3, [fp, #-8]
   241a4:	ldr	r3, [fp, #12]
   241a8:	str	r3, [sp, #4]
   241ac:	ldrb	r3, [fp, #8]
   241b0:	str	r3, [sp]
   241b4:	ldr	r3, [fp, #4]
   241b8:	ldr	r2, [fp, #-16]
   241bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   241c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   241c4:	bl	24668 <__assert_fail@plt+0x13428>
   241c8:	ldr	r1, [fp, #-8]
   241cc:	ldr	r0, [fp, #-16]
   241d0:	bl	244bc <__assert_fail@plt+0x1327c>
   241d4:	str	r0, [fp, #-12]
   241d8:	ldr	r3, [fp, #-12]
   241dc:	cmp	r3, #0
   241e0:	movne	r3, #1
   241e4:	moveq	r3, #0
   241e8:	uxtb	r3, r3
   241ec:	cmp	r3, #0
   241f0:	beq	241fc <__assert_fail@plt+0x12fbc>
   241f4:	ldr	r3, [fp, #-12]
   241f8:	b	24298 <__assert_fail@plt+0x13058>
   241fc:	ldr	r3, [fp, #12]
   24200:	add	r2, r3, #96	; 0x60
   24204:	ldr	r3, [fp, #-16]
   24208:	str	r2, [r3, #68]	; 0x44
   2420c:	ldr	r3, [fp, #12]
   24210:	ldrb	r3, [r3, #88]	; 0x58
   24214:	ubfx	r3, r3, #4, #1
   24218:	uxtb	r3, r3
   2421c:	mov	r2, r3
   24220:	ldr	r3, [fp, #-16]
   24224:	strb	r2, [r3, #78]	; 0x4e
   24228:	ldr	r3, [fp, #-16]
   2422c:	ldrb	r3, [r3, #75]	; 0x4b
   24230:	cmp	r3, #0
   24234:	beq	24244 <__assert_fail@plt+0x13004>
   24238:	ldr	r3, [fp, #-16]
   2423c:	ldr	r3, [r3, #4]
   24240:	b	24248 <__assert_fail@plt+0x13008>
   24244:	ldr	r3, [fp, #-20]	; 0xffffffec
   24248:	ldr	r2, [fp, #-16]
   2424c:	str	r3, [r2, #4]
   24250:	ldr	r3, [fp, #-16]
   24254:	ldrb	r3, [r3, #75]	; 0x4b
   24258:	cmp	r3, #0
   2425c:	bne	24278 <__assert_fail@plt+0x13038>
   24260:	ldr	r3, [fp, #12]
   24264:	ldr	r3, [r3, #92]	; 0x5c
   24268:	cmp	r3, #1
   2426c:	bgt	24278 <__assert_fail@plt+0x13038>
   24270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24274:	b	2427c <__assert_fail@plt+0x1303c>
   24278:	mov	r3, #0
   2427c:	ldr	r2, [fp, #-16]
   24280:	str	r3, [r2, #28]
   24284:	ldr	r3, [fp, #-16]
   24288:	ldr	r2, [r3, #28]
   2428c:	ldr	r3, [fp, #-16]
   24290:	str	r2, [r3, #32]
   24294:	mov	r3, #0
   24298:	mov	r0, r3
   2429c:	sub	sp, fp, #4
   242a0:	ldr	fp, [sp]
   242a4:	add	sp, sp, #4
   242a8:	pop	{pc}		; (ldr pc, [sp], #4)
   242ac:	str	fp, [sp, #-8]!
   242b0:	str	lr, [sp, #4]
   242b4:	add	fp, sp, #4
   242b8:	sub	sp, sp, #32
   242bc:	str	r0, [fp, #-16]
   242c0:	str	r1, [fp, #-20]	; 0xffffffec
   242c4:	str	r2, [fp, #-24]	; 0xffffffe8
   242c8:	str	r3, [fp, #-28]	; 0xffffffe4
   242cc:	mov	r2, #84	; 0x54
   242d0:	mov	r1, #0
   242d4:	ldr	r0, [fp, #-16]
   242d8:	bl	1118c <memset@plt>
   242dc:	ldr	r3, [fp, #8]
   242e0:	str	r3, [sp, #4]
   242e4:	ldrb	r3, [fp, #4]
   242e8:	str	r3, [sp]
   242ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   242f0:	ldr	r2, [fp, #-16]
   242f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   242f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   242fc:	bl	24668 <__assert_fail@plt+0x13428>
   24300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24304:	cmp	r3, #0
   24308:	ble	24348 <__assert_fail@plt+0x13108>
   2430c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24310:	add	r3, r3, #1
   24314:	mov	r1, r3
   24318:	ldr	r0, [fp, #-16]
   2431c:	bl	244bc <__assert_fail@plt+0x1327c>
   24320:	str	r0, [fp, #-8]
   24324:	ldr	r3, [fp, #-8]
   24328:	cmp	r3, #0
   2432c:	movne	r3, #1
   24330:	moveq	r3, #0
   24334:	uxtb	r3, r3
   24338:	cmp	r3, #0
   2433c:	beq	24348 <__assert_fail@plt+0x13108>
   24340:	ldr	r3, [fp, #-8]
   24344:	b	244a8 <__assert_fail@plt+0x13268>
   24348:	ldr	r3, [fp, #-16]
   2434c:	ldrb	r3, [r3, #75]	; 0x4b
   24350:	cmp	r3, #0
   24354:	beq	24364 <__assert_fail@plt+0x13124>
   24358:	ldr	r3, [fp, #-16]
   2435c:	ldr	r3, [r3, #4]
   24360:	b	24368 <__assert_fail@plt+0x13128>
   24364:	ldr	r3, [fp, #-20]	; 0xffffffec
   24368:	ldr	r2, [fp, #-16]
   2436c:	str	r3, [r2, #4]
   24370:	ldrb	r3, [fp, #4]
   24374:	cmp	r3, #0
   24378:	beq	24440 <__assert_fail@plt+0x13200>
   2437c:	ldr	r3, [fp, #8]
   24380:	ldr	r3, [r3, #92]	; 0x5c
   24384:	cmp	r3, #1
   24388:	ble	24434 <__assert_fail@plt+0x131f4>
   2438c:	ldr	r0, [fp, #-16]
   24390:	bl	24aec <__assert_fail@plt+0x138ac>
   24394:	str	r0, [fp, #-8]
   24398:	ldr	r3, [fp, #-8]
   2439c:	cmp	r3, #0
   243a0:	movne	r3, #1
   243a4:	moveq	r3, #0
   243a8:	uxtb	r3, r3
   243ac:	cmp	r3, #0
   243b0:	beq	243bc <__assert_fail@plt+0x1317c>
   243b4:	ldr	r3, [fp, #-8]
   243b8:	b	244a8 <__assert_fail@plt+0x13268>
   243bc:	ldr	r3, [fp, #-16]
   243c0:	ldr	r3, [r3, #32]
   243c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   243c8:	cmp	r2, r3
   243cc:	ble	24498 <__assert_fail@plt+0x13258>
   243d0:	ldr	r3, [fp, #-16]
   243d4:	ldr	r2, [r3, #36]	; 0x24
   243d8:	ldr	r3, [fp, #-16]
   243dc:	ldr	r1, [r3, #28]
   243e0:	ldr	r3, [fp, #8]
   243e4:	ldr	r3, [r3, #92]	; 0x5c
   243e8:	add	r3, r1, r3
   243ec:	cmp	r2, r3
   243f0:	bgt	244a0 <__assert_fail@plt+0x13260>
   243f4:	ldr	r3, [fp, #-16]
   243f8:	ldr	r3, [r3, #36]	; 0x24
   243fc:	lsl	r3, r3, #1
   24400:	mov	r1, r3
   24404:	ldr	r0, [fp, #-16]
   24408:	bl	244bc <__assert_fail@plt+0x1327c>
   2440c:	str	r0, [fp, #-8]
   24410:	ldr	r3, [fp, #-8]
   24414:	cmp	r3, #0
   24418:	movne	r3, #1
   2441c:	moveq	r3, #0
   24420:	uxtb	r3, r3
   24424:	cmp	r3, #0
   24428:	beq	2438c <__assert_fail@plt+0x1314c>
   2442c:	ldr	r3, [fp, #-8]
   24430:	b	244a8 <__assert_fail@plt+0x13268>
   24434:	ldr	r0, [fp, #-16]
   24438:	bl	257d8 <__assert_fail@plt+0x14598>
   2443c:	b	244a4 <__assert_fail@plt+0x13264>
   24440:	ldr	r3, [fp, #8]
   24444:	ldr	r3, [r3, #92]	; 0x5c
   24448:	cmp	r3, #1
   2444c:	ble	2445c <__assert_fail@plt+0x1321c>
   24450:	ldr	r0, [fp, #-16]
   24454:	bl	24768 <__assert_fail@plt+0x13528>
   24458:	b	244a4 <__assert_fail@plt+0x13264>
   2445c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24460:	cmp	r3, #0
   24464:	beq	24474 <__assert_fail@plt+0x13234>
   24468:	ldr	r0, [fp, #-16]
   2446c:	bl	258e4 <__assert_fail@plt+0x146a4>
   24470:	b	244a4 <__assert_fail@plt+0x13264>
   24474:	ldr	r3, [fp, #-16]
   24478:	ldr	r2, [r3, #36]	; 0x24
   2447c:	ldr	r3, [fp, #-16]
   24480:	str	r2, [r3, #28]
   24484:	ldr	r3, [fp, #-16]
   24488:	ldr	r2, [r3, #36]	; 0x24
   2448c:	ldr	r3, [fp, #-16]
   24490:	str	r2, [r3, #32]
   24494:	b	244a4 <__assert_fail@plt+0x13264>
   24498:	nop	{0}
   2449c:	b	244a4 <__assert_fail@plt+0x13264>
   244a0:	nop	{0}
   244a4:	mov	r3, #0
   244a8:	mov	r0, r3
   244ac:	sub	sp, fp, #4
   244b0:	ldr	fp, [sp]
   244b4:	add	sp, sp, #4
   244b8:	pop	{pc}		; (ldr pc, [sp], #4)
   244bc:	str	fp, [sp, #-8]!
   244c0:	str	lr, [sp, #4]
   244c4:	add	fp, sp, #4
   244c8:	sub	sp, sp, #24
   244cc:	str	r0, [fp, #-24]	; 0xffffffe8
   244d0:	str	r1, [fp, #-28]	; 0xffffffe4
   244d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244d8:	ldr	r3, [r3, #80]	; 0x50
   244dc:	cmp	r3, #1
   244e0:	ble	245e8 <__assert_fail@plt+0x133a8>
   244e4:	mov	r3, #4
   244e8:	str	r3, [fp, #-8]
   244ec:	mvn	r2, #0
   244f0:	ldr	r3, [fp, #-8]
   244f4:	udiv	r3, r2, r3
   244f8:	cmp	r3, #0
   244fc:	blt	24510 <__assert_fail@plt+0x132d0>
   24500:	mvn	r2, #0
   24504:	ldr	r3, [fp, #-8]
   24508:	udiv	r3, r2, r3
   2450c:	b	24514 <__assert_fail@plt+0x132d4>
   24510:	mvn	r3, #-2147483648	; 0x80000000
   24514:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24518:	cmp	r3, r2
   2451c:	movcc	r3, #1
   24520:	movcs	r3, #0
   24524:	uxtb	r3, r3
   24528:	cmp	r3, #0
   2452c:	beq	24538 <__assert_fail@plt+0x132f8>
   24530:	mov	r3, #12
   24534:	b	24654 <__assert_fail@plt+0x13414>
   24538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2453c:	ldr	r2, [r3, #8]
   24540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24544:	lsl	r3, r3, #2
   24548:	mov	r1, r3
   2454c:	mov	r0, r2
   24550:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   24554:	str	r0, [fp, #-12]
   24558:	ldr	r3, [fp, #-12]
   2455c:	cmp	r3, #0
   24560:	moveq	r3, #1
   24564:	movne	r3, #0
   24568:	uxtb	r3, r3
   2456c:	cmp	r3, #0
   24570:	beq	2457c <__assert_fail@plt+0x1333c>
   24574:	mov	r3, #12
   24578:	b	24654 <__assert_fail@plt+0x13414>
   2457c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24580:	ldr	r2, [fp, #-12]
   24584:	str	r2, [r3, #8]
   24588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2458c:	ldr	r3, [r3, #12]
   24590:	cmp	r3, #0
   24594:	beq	245e8 <__assert_fail@plt+0x133a8>
   24598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2459c:	ldr	r2, [r3, #12]
   245a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   245a4:	lsl	r3, r3, #2
   245a8:	mov	r1, r3
   245ac:	mov	r0, r2
   245b0:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   245b4:	str	r0, [fp, #-16]
   245b8:	ldr	r3, [fp, #-16]
   245bc:	cmp	r3, #0
   245c0:	moveq	r3, #1
   245c4:	movne	r3, #0
   245c8:	uxtb	r3, r3
   245cc:	cmp	r3, #0
   245d0:	beq	245dc <__assert_fail@plt+0x1339c>
   245d4:	mov	r3, #12
   245d8:	b	24654 <__assert_fail@plt+0x13414>
   245dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   245e0:	ldr	r2, [fp, #-16]
   245e4:	str	r2, [r3, #12]
   245e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   245ec:	ldrb	r3, [r3, #75]	; 0x4b
   245f0:	cmp	r3, #0
   245f4:	beq	24644 <__assert_fail@plt+0x13404>
   245f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   245fc:	ldr	r3, [r3, #4]
   24600:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24604:	mov	r1, r2
   24608:	mov	r0, r3
   2460c:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   24610:	str	r0, [fp, #-20]	; 0xffffffec
   24614:	ldr	r3, [fp, #-20]	; 0xffffffec
   24618:	cmp	r3, #0
   2461c:	moveq	r3, #1
   24620:	movne	r3, #0
   24624:	uxtb	r3, r3
   24628:	cmp	r3, #0
   2462c:	beq	24638 <__assert_fail@plt+0x133f8>
   24630:	mov	r3, #12
   24634:	b	24654 <__assert_fail@plt+0x13414>
   24638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2463c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24640:	str	r2, [r3, #4]
   24644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24648:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2464c:	str	r2, [r3, #36]	; 0x24
   24650:	mov	r3, #0
   24654:	mov	r0, r3
   24658:	sub	sp, fp, #4
   2465c:	ldr	fp, [sp]
   24660:	add	sp, sp, #4
   24664:	pop	{pc}		; (ldr pc, [sp], #4)
   24668:	push	{fp}		; (str fp, [sp, #-4]!)
   2466c:	add	fp, sp, #0
   24670:	sub	sp, sp, #20
   24674:	str	r0, [fp, #-8]
   24678:	str	r1, [fp, #-12]
   2467c:	str	r2, [fp, #-16]
   24680:	str	r3, [fp, #-20]	; 0xffffffec
   24684:	ldr	r3, [fp, #-16]
   24688:	ldr	r2, [fp, #-8]
   2468c:	str	r2, [r3]
   24690:	ldr	r3, [fp, #-16]
   24694:	ldr	r2, [fp, #-12]
   24698:	str	r2, [r3, #48]	; 0x30
   2469c:	ldr	r3, [fp, #-16]
   246a0:	ldr	r2, [fp, #-12]
   246a4:	str	r2, [r3, #44]	; 0x2c
   246a8:	ldr	r3, [fp, #-16]
   246ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   246b0:	str	r2, [r3, #64]	; 0x40
   246b4:	ldrb	r2, [fp, #4]
   246b8:	ldr	r3, [fp, #-16]
   246bc:	strb	r2, [r3, #72]	; 0x48
   246c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   246c4:	cmp	r3, #0
   246c8:	bne	246d8 <__assert_fail@plt+0x13498>
   246cc:	ldrb	r3, [fp, #4]
   246d0:	cmp	r3, #0
   246d4:	beq	246e0 <__assert_fail@plt+0x134a0>
   246d8:	mov	r3, #1
   246dc:	b	246e4 <__assert_fail@plt+0x134a4>
   246e0:	mov	r3, #0
   246e4:	uxtb	r2, r3
   246e8:	ldr	r3, [fp, #-16]
   246ec:	strb	r2, [r3, #75]	; 0x4b
   246f0:	ldr	r3, [fp, #8]
   246f4:	ldr	r2, [r3, #92]	; 0x5c
   246f8:	ldr	r3, [fp, #-16]
   246fc:	str	r2, [r3, #80]	; 0x50
   24700:	ldr	r3, [fp, #8]
   24704:	ldrb	r3, [r3, #88]	; 0x58
   24708:	ubfx	r3, r3, #2, #1
   2470c:	uxtb	r3, r3
   24710:	mov	r2, r3
   24714:	ldr	r3, [fp, #-16]
   24718:	strb	r2, [r3, #73]	; 0x49
   2471c:	ldr	r3, [fp, #8]
   24720:	ldrb	r3, [r3, #88]	; 0x58
   24724:	ubfx	r3, r3, #3, #1
   24728:	uxtb	r3, r3
   2472c:	mov	r2, r3
   24730:	ldr	r3, [fp, #-16]
   24734:	strb	r2, [r3, #74]	; 0x4a
   24738:	ldr	r3, [fp, #-16]
   2473c:	ldr	r2, [r3, #48]	; 0x30
   24740:	ldr	r3, [fp, #-16]
   24744:	str	r2, [r3, #56]	; 0x38
   24748:	ldr	r3, [fp, #-16]
   2474c:	ldr	r2, [r3, #56]	; 0x38
   24750:	ldr	r3, [fp, #-16]
   24754:	str	r2, [r3, #52]	; 0x34
   24758:	nop	{0}
   2475c:	add	sp, fp, #0
   24760:	pop	{fp}		; (ldr fp, [sp], #4)
   24764:	bx	lr
   24768:	str	fp, [sp, #-8]!
   2476c:	str	lr, [sp, #4]
   24770:	add	fp, sp, #4
   24774:	sub	sp, sp, #112	; 0x70
   24778:	str	r0, [fp, #-112]	; 0xffffff90
   2477c:	ldr	r3, [fp, #-112]	; 0xffffff90
   24780:	ldr	r2, [r3, #36]	; 0x24
   24784:	ldr	r3, [fp, #-112]	; 0xffffff90
   24788:	ldr	r3, [r3, #48]	; 0x30
   2478c:	cmp	r2, r3
   24790:	movlt	r3, r2
   24794:	movge	r3, r3
   24798:	str	r3, [fp, #-24]	; 0xffffffe8
   2479c:	ldr	r3, [fp, #-112]	; 0xffffff90
   247a0:	ldr	r3, [r3, #28]
   247a4:	str	r3, [fp, #-8]
   247a8:	b	24ab0 <__assert_fail@plt+0x13870>
   247ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   247b0:	ldr	r3, [fp, #-8]
   247b4:	sub	r3, r2, r3
   247b8:	str	r3, [fp, #-28]	; 0xffffffe4
   247bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   247c0:	sub	r1, fp, #104	; 0x68
   247c4:	add	r3, r3, #16
   247c8:	ldrd	r2, [r3]
   247cc:	strd	r2, [r1]
   247d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   247d4:	ldr	r3, [r3, #64]	; 0x40
   247d8:	cmp	r3, #0
   247dc:	movne	r3, #1
   247e0:	moveq	r3, #0
   247e4:	uxtb	r3, r3
   247e8:	cmp	r3, #0
   247ec:	beq	248ac <__assert_fail@plt+0x1366c>
   247f0:	mov	r3, #0
   247f4:	str	r3, [fp, #-20]	; 0xffffffec
   247f8:	b	2487c <__assert_fail@plt+0x1363c>
   247fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   24800:	ldr	r3, [r3]
   24804:	ldr	r2, [fp, #-112]	; 0xffffff90
   24808:	ldr	r1, [r2, #24]
   2480c:	ldr	r2, [fp, #-8]
   24810:	add	r1, r1, r2
   24814:	ldr	r2, [fp, #-20]	; 0xffffffec
   24818:	add	r2, r1, r2
   2481c:	add	r3, r3, r2
   24820:	ldrb	r3, [r3]
   24824:	str	r3, [fp, #-32]	; 0xffffffe0
   24828:	ldr	r3, [fp, #-112]	; 0xffffff90
   2482c:	ldr	r2, [r3, #64]	; 0x40
   24830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24834:	add	r2, r2, r3
   24838:	ldr	r3, [fp, #-112]	; 0xffffff90
   2483c:	ldr	r3, [r3, #4]
   24840:	ldr	r0, [fp, #-8]
   24844:	ldr	r1, [fp, #-20]	; 0xffffffec
   24848:	add	r1, r0, r1
   2484c:	add	r3, r3, r1
   24850:	ldrb	r2, [r2]
   24854:	strb	r2, [r3]
   24858:	ldrb	r1, [r3]
   2485c:	sub	r2, fp, #96	; 0x60
   24860:	ldr	r3, [fp, #-20]	; 0xffffffec
   24864:	add	r3, r2, r3
   24868:	mov	r2, r1
   2486c:	strb	r2, [r3]
   24870:	ldr	r3, [fp, #-20]	; 0xffffffec
   24874:	add	r3, r3, #1
   24878:	str	r3, [fp, #-20]	; 0xffffffec
   2487c:	ldr	r3, [fp, #-112]	; 0xffffff90
   24880:	ldr	r3, [r3, #80]	; 0x50
   24884:	ldr	r2, [fp, #-20]	; 0xffffffec
   24888:	cmp	r2, r3
   2488c:	bge	248a0 <__assert_fail@plt+0x13660>
   24890:	ldr	r2, [fp, #-20]	; 0xffffffec
   24894:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24898:	cmp	r2, r3
   2489c:	blt	247fc <__assert_fail@plt+0x135bc>
   248a0:	sub	r3, fp, #96	; 0x60
   248a4:	str	r3, [fp, #-16]
   248a8:	b	248d0 <__assert_fail@plt+0x13690>
   248ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   248b0:	ldr	r2, [r3]
   248b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   248b8:	ldr	r3, [r3, #24]
   248bc:	mov	r1, r3
   248c0:	ldr	r3, [fp, #-8]
   248c4:	add	r3, r1, r3
   248c8:	add	r3, r2, r3
   248cc:	str	r3, [fp, #-16]
   248d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   248d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   248d8:	add	r3, r3, #16
   248dc:	sub	r0, fp, #108	; 0x6c
   248e0:	ldr	r1, [fp, #-16]
   248e4:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   248e8:	str	r0, [fp, #-12]
   248ec:	ldr	r3, [fp, #-12]
   248f0:	cmn	r3, #1
   248f4:	moveq	r3, #1
   248f8:	movne	r3, #0
   248fc:	uxtb	r3, r3
   24900:	cmp	r3, #0
   24904:	bne	24924 <__assert_fail@plt+0x136e4>
   24908:	ldr	r3, [fp, #-12]
   2490c:	cmp	r3, #0
   24910:	moveq	r3, #1
   24914:	movne	r3, #0
   24918:	uxtb	r3, r3
   2491c:	cmp	r3, #0
   24920:	beq	2492c <__assert_fail@plt+0x136ec>
   24924:	mov	r3, #1
   24928:	b	24930 <__assert_fail@plt+0x136f0>
   2492c:	mov	r3, #0
   24930:	cmp	r3, #0
   24934:	bne	24990 <__assert_fail@plt+0x13750>
   24938:	ldr	r3, [fp, #-12]
   2493c:	cmn	r3, #2
   24940:	moveq	r3, #1
   24944:	movne	r3, #0
   24948:	uxtb	r3, r3
   2494c:	cmp	r3, #0
   24950:	beq	24984 <__assert_fail@plt+0x13744>
   24954:	ldr	r3, [fp, #-112]	; 0xffffff90
   24958:	ldr	r2, [r3, #36]	; 0x24
   2495c:	ldr	r3, [fp, #-112]	; 0xffffff90
   24960:	ldr	r3, [r3, #48]	; 0x30
   24964:	cmp	r2, r3
   24968:	movge	r3, #1
   2496c:	movlt	r3, #0
   24970:	uxtb	r3, r3
   24974:	cmp	r3, #0
   24978:	beq	24984 <__assert_fail@plt+0x13744>
   2497c:	mov	r3, #1
   24980:	b	24988 <__assert_fail@plt+0x13748>
   24984:	mov	r3, #0
   24988:	cmp	r3, #0
   2498c:	beq	24a0c <__assert_fail@plt+0x137cc>
   24990:	mov	r3, #1
   24994:	str	r3, [fp, #-12]
   24998:	ldr	r3, [fp, #-112]	; 0xffffff90
   2499c:	ldr	r3, [r3]
   249a0:	ldr	r2, [fp, #-112]	; 0xffffff90
   249a4:	ldr	r1, [r2, #24]
   249a8:	ldr	r2, [fp, #-8]
   249ac:	add	r2, r1, r2
   249b0:	add	r3, r3, r2
   249b4:	ldrb	r3, [r3]
   249b8:	str	r3, [fp, #-108]	; 0xffffff94
   249bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   249c0:	ldr	r3, [r3, #64]	; 0x40
   249c4:	cmp	r3, #0
   249c8:	movne	r3, #1
   249cc:	moveq	r3, #0
   249d0:	uxtb	r3, r3
   249d4:	cmp	r3, #0
   249d8:	beq	249f4 <__assert_fail@plt+0x137b4>
   249dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   249e0:	ldr	r2, [r3, #64]	; 0x40
   249e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   249e8:	add	r3, r2, r3
   249ec:	ldrb	r3, [r3]
   249f0:	str	r3, [fp, #-108]	; 0xffffff94
   249f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   249f8:	add	r1, r3, #16
   249fc:	sub	r3, fp, #104	; 0x68
   24a00:	ldrd	r2, [r3]
   24a04:	strd	r2, [r1]
   24a08:	b	24a40 <__assert_fail@plt+0x13800>
   24a0c:	ldr	r3, [fp, #-12]
   24a10:	cmn	r3, #2
   24a14:	moveq	r3, #1
   24a18:	movne	r3, #0
   24a1c:	uxtb	r3, r3
   24a20:	cmp	r3, #0
   24a24:	beq	24a40 <__assert_fail@plt+0x13800>
   24a28:	ldr	r3, [fp, #-112]	; 0xffffff90
   24a2c:	add	r1, r3, #16
   24a30:	sub	r3, fp, #104	; 0x68
   24a34:	ldrd	r2, [r3]
   24a38:	strd	r2, [r1]
   24a3c:	b	24ac0 <__assert_fail@plt+0x13880>
   24a40:	ldr	r3, [fp, #-112]	; 0xffffff90
   24a44:	ldr	r2, [r3, #8]
   24a48:	ldr	r3, [fp, #-8]
   24a4c:	add	r1, r3, #1
   24a50:	str	r1, [fp, #-8]
   24a54:	lsl	r3, r3, #2
   24a58:	add	r3, r2, r3
   24a5c:	ldr	r2, [fp, #-108]	; 0xffffff94
   24a60:	str	r2, [r3]
   24a64:	ldr	r2, [fp, #-8]
   24a68:	ldr	r3, [fp, #-12]
   24a6c:	add	r3, r2, r3
   24a70:	sub	r3, r3, #1
   24a74:	str	r3, [fp, #-28]	; 0xffffffe4
   24a78:	b	24aa0 <__assert_fail@plt+0x13860>
   24a7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   24a80:	ldr	r2, [r3, #8]
   24a84:	ldr	r3, [fp, #-8]
   24a88:	add	r1, r3, #1
   24a8c:	str	r1, [fp, #-8]
   24a90:	lsl	r3, r3, #2
   24a94:	add	r3, r2, r3
   24a98:	mvn	r2, #0
   24a9c:	str	r2, [r3]
   24aa0:	ldr	r2, [fp, #-8]
   24aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24aa8:	cmp	r2, r3
   24aac:	blt	24a7c <__assert_fail@plt+0x1383c>
   24ab0:	ldr	r2, [fp, #-8]
   24ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24ab8:	cmp	r2, r3
   24abc:	blt	247ac <__assert_fail@plt+0x1356c>
   24ac0:	ldr	r3, [fp, #-112]	; 0xffffff90
   24ac4:	ldr	r2, [fp, #-8]
   24ac8:	str	r2, [r3, #28]
   24acc:	ldr	r3, [fp, #-112]	; 0xffffff90
   24ad0:	ldr	r2, [fp, #-8]
   24ad4:	str	r2, [r3, #32]
   24ad8:	nop	{0}
   24adc:	sub	sp, fp, #4
   24ae0:	ldr	fp, [sp]
   24ae4:	add	sp, sp, #4
   24ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   24aec:	str	fp, [sp, #-8]!
   24af0:	str	lr, [sp, #4]
   24af4:	add	fp, sp, #4
   24af8:	sub	sp, sp, #160	; 0xa0
   24afc:	str	r0, [fp, #-160]	; 0xffffff60
   24b00:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b04:	ldr	r3, [r3, #28]
   24b08:	str	r3, [fp, #-12]
   24b0c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b10:	ldr	r2, [r3, #36]	; 0x24
   24b14:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b18:	ldr	r3, [r3, #48]	; 0x30
   24b1c:	cmp	r2, r3
   24b20:	movlt	r3, r2
   24b24:	movge	r3, r3
   24b28:	str	r3, [fp, #-16]
   24b2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b30:	ldrb	r3, [r3, #74]	; 0x4a
   24b34:	cmp	r3, #0
   24b38:	bne	24ed8 <__assert_fail@plt+0x13c98>
   24b3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b40:	ldr	r3, [r3, #64]	; 0x40
   24b44:	cmp	r3, #0
   24b48:	bne	24ed8 <__assert_fail@plt+0x13c98>
   24b4c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b50:	ldrb	r3, [r3, #76]	; 0x4c
   24b54:	cmp	r3, #0
   24b58:	bne	24ed8 <__assert_fail@plt+0x13c98>
   24b5c:	b	24ea8 <__assert_fail@plt+0x13c68>
   24b60:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b64:	ldr	r3, [r3]
   24b68:	ldr	r2, [fp, #-160]	; 0xffffff60
   24b6c:	ldr	r1, [r2, #24]
   24b70:	ldr	r2, [fp, #-12]
   24b74:	add	r2, r1, r2
   24b78:	add	r3, r3, r2
   24b7c:	ldrb	r3, [r3]
   24b80:	strb	r3, [fp, #-37]	; 0xffffffdb
   24b84:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   24b88:	bic	r3, r3, #127	; 0x7f
   24b8c:	cmp	r3, #0
   24b90:	bne	24c18 <__assert_fail@plt+0x139d8>
   24b94:	ldr	r3, [fp, #-160]	; 0xffffff60
   24b98:	add	r3, r3, #16
   24b9c:	mov	r0, r3
   24ba0:	bl	11018 <mbsinit@plt>
   24ba4:	mov	r3, r0
   24ba8:	cmp	r3, #0
   24bac:	beq	24c18 <__assert_fail@plt+0x139d8>
   24bb0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   24bb4:	mov	r0, r3
   24bb8:	bl	11210 <towupper@plt>
   24bbc:	str	r0, [fp, #-44]	; 0xffffffd4
   24bc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24bc4:	bic	r3, r3, #127	; 0x7f
   24bc8:	cmp	r3, #0
   24bcc:	bne	24c18 <__assert_fail@plt+0x139d8>
   24bd0:	ldr	r3, [fp, #-160]	; 0xffffff60
   24bd4:	ldr	r2, [r3, #4]
   24bd8:	ldr	r3, [fp, #-12]
   24bdc:	add	r3, r2, r3
   24be0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   24be4:	uxtb	r2, r2
   24be8:	strb	r2, [r3]
   24bec:	ldr	r3, [fp, #-160]	; 0xffffff60
   24bf0:	ldr	r2, [r3, #8]
   24bf4:	ldr	r3, [fp, #-12]
   24bf8:	lsl	r3, r3, #2
   24bfc:	add	r3, r2, r3
   24c00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   24c04:	str	r2, [r3]
   24c08:	ldr	r3, [fp, #-12]
   24c0c:	add	r3, r3, #1
   24c10:	str	r3, [fp, #-12]
   24c14:	b	24ea8 <__assert_fail@plt+0x13c68>
   24c18:	ldr	r2, [fp, #-16]
   24c1c:	ldr	r3, [fp, #-12]
   24c20:	sub	r3, r2, r3
   24c24:	str	r3, [fp, #-48]	; 0xffffffd0
   24c28:	ldr	r3, [fp, #-160]	; 0xffffff60
   24c2c:	sub	r1, fp, #80	; 0x50
   24c30:	add	r3, r3, #16
   24c34:	ldrd	r2, [r3]
   24c38:	strd	r2, [r1]
   24c3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24c40:	ldr	r2, [r3]
   24c44:	ldr	r3, [fp, #-160]	; 0xffffff60
   24c48:	ldr	r3, [r3, #24]
   24c4c:	mov	r1, r3
   24c50:	ldr	r3, [fp, #-12]
   24c54:	add	r3, r1, r3
   24c58:	add	r1, r2, r3
   24c5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24c60:	ldr	r3, [fp, #-160]	; 0xffffff60
   24c64:	add	r3, r3, #16
   24c68:	sub	r0, fp, #148	; 0x94
   24c6c:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   24c70:	str	r0, [fp, #-52]	; 0xffffffcc
   24c74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24c78:	cmp	r3, #0
   24c7c:	movne	r3, #1
   24c80:	moveq	r3, #0
   24c84:	uxtb	r3, r3
   24c88:	cmp	r3, #0
   24c8c:	beq	24de4 <__assert_fail@plt+0x13ba4>
   24c90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24c94:	cmn	r3, #3
   24c98:	movls	r3, #1
   24c9c:	movhi	r3, #0
   24ca0:	uxtb	r3, r3
   24ca4:	cmp	r3, #0
   24ca8:	beq	24de4 <__assert_fail@plt+0x13ba4>
   24cac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   24cb0:	mov	r0, r3
   24cb4:	bl	11210 <towupper@plt>
   24cb8:	str	r0, [fp, #-56]	; 0xffffffc8
   24cbc:	ldr	r3, [fp, #-148]	; 0xffffff6c
   24cc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   24cc4:	cmp	r2, r3
   24cc8:	beq	24d34 <__assert_fail@plt+0x13af4>
   24ccc:	sub	r2, fp, #80	; 0x50
   24cd0:	sub	r3, fp, #144	; 0x90
   24cd4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24cd8:	mov	r0, r3
   24cdc:	bl	10f58 <wcrtomb@plt>
   24ce0:	str	r0, [fp, #-60]	; 0xffffffc4
   24ce4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24ce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24cec:	cmp	r2, r3
   24cf0:	moveq	r3, #1
   24cf4:	movne	r3, #0
   24cf8:	uxtb	r3, r3
   24cfc:	cmp	r3, #0
   24d00:	beq	24d28 <__assert_fail@plt+0x13ae8>
   24d04:	ldr	r3, [fp, #-160]	; 0xffffff60
   24d08:	ldr	r2, [r3, #4]
   24d0c:	ldr	r3, [fp, #-12]
   24d10:	add	r3, r2, r3
   24d14:	sub	r1, fp, #144	; 0x90
   24d18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24d1c:	mov	r0, r3
   24d20:	bl	10fe8 <memcpy@plt>
   24d24:	b	24d70 <__assert_fail@plt+0x13b30>
   24d28:	ldr	r3, [fp, #-12]
   24d2c:	str	r3, [fp, #-8]
   24d30:	b	24eec <__assert_fail@plt+0x13cac>
   24d34:	ldr	r3, [fp, #-160]	; 0xffffff60
   24d38:	ldr	r2, [r3, #4]
   24d3c:	ldr	r3, [fp, #-12]
   24d40:	add	r0, r2, r3
   24d44:	ldr	r3, [fp, #-160]	; 0xffffff60
   24d48:	ldr	r2, [r3]
   24d4c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24d50:	ldr	r3, [r3, #24]
   24d54:	mov	r1, r3
   24d58:	ldr	r3, [fp, #-12]
   24d5c:	add	r3, r1, r3
   24d60:	add	r3, r2, r3
   24d64:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24d68:	mov	r1, r3
   24d6c:	bl	10fe8 <memcpy@plt>
   24d70:	ldr	r3, [fp, #-160]	; 0xffffff60
   24d74:	ldr	r2, [r3, #8]
   24d78:	ldr	r3, [fp, #-12]
   24d7c:	add	r1, r3, #1
   24d80:	str	r1, [fp, #-12]
   24d84:	lsl	r3, r3, #2
   24d88:	add	r3, r2, r3
   24d8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   24d90:	str	r2, [r3]
   24d94:	ldr	r2, [fp, #-12]
   24d98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24d9c:	add	r3, r2, r3
   24da0:	sub	r3, r3, #1
   24da4:	str	r3, [fp, #-48]	; 0xffffffd0
   24da8:	b	24dd0 <__assert_fail@plt+0x13b90>
   24dac:	ldr	r3, [fp, #-160]	; 0xffffff60
   24db0:	ldr	r2, [r3, #8]
   24db4:	ldr	r3, [fp, #-12]
   24db8:	add	r1, r3, #1
   24dbc:	str	r1, [fp, #-12]
   24dc0:	lsl	r3, r3, #2
   24dc4:	add	r3, r2, r3
   24dc8:	mvn	r2, #0
   24dcc:	str	r2, [r3]
   24dd0:	ldr	r2, [fp, #-12]
   24dd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24dd8:	cmp	r2, r3
   24ddc:	blt	24dac <__assert_fail@plt+0x13b6c>
   24de0:	b	24ea8 <__assert_fail@plt+0x13c68>
   24de4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24de8:	cmn	r3, #1
   24dec:	beq	24e20 <__assert_fail@plt+0x13be0>
   24df0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24df4:	cmp	r3, #0
   24df8:	beq	24e20 <__assert_fail@plt+0x13be0>
   24dfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24e00:	cmn	r3, #2
   24e04:	bne	24e90 <__assert_fail@plt+0x13c50>
   24e08:	ldr	r3, [fp, #-160]	; 0xffffff60
   24e0c:	ldr	r2, [r3, #36]	; 0x24
   24e10:	ldr	r3, [fp, #-160]	; 0xffffff60
   24e14:	ldr	r3, [r3, #48]	; 0x30
   24e18:	cmp	r2, r3
   24e1c:	blt	24e90 <__assert_fail@plt+0x13c50>
   24e20:	ldr	r3, [fp, #-160]	; 0xffffff60
   24e24:	ldr	r2, [r3, #4]
   24e28:	ldr	r3, [fp, #-12]
   24e2c:	add	r3, r2, r3
   24e30:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   24e34:	strb	r2, [r3]
   24e38:	ldr	r3, [fp, #-160]	; 0xffffff60
   24e3c:	ldr	r2, [r3, #8]
   24e40:	ldr	r3, [fp, #-12]
   24e44:	add	r1, r3, #1
   24e48:	str	r1, [fp, #-12]
   24e4c:	lsl	r3, r3, #2
   24e50:	add	r3, r2, r3
   24e54:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   24e58:	str	r2, [r3]
   24e5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24e60:	cmn	r3, #1
   24e64:	moveq	r3, #1
   24e68:	movne	r3, #0
   24e6c:	uxtb	r3, r3
   24e70:	cmp	r3, #0
   24e74:	beq	24ea8 <__assert_fail@plt+0x13c68>
   24e78:	ldr	r3, [fp, #-160]	; 0xffffff60
   24e7c:	add	r1, r3, #16
   24e80:	sub	r3, fp, #80	; 0x50
   24e84:	ldrd	r2, [r3]
   24e88:	strd	r2, [r1]
   24e8c:	b	24ea8 <__assert_fail@plt+0x13c68>
   24e90:	ldr	r3, [fp, #-160]	; 0xffffff60
   24e94:	add	r1, r3, #16
   24e98:	sub	r3, fp, #80	; 0x50
   24e9c:	ldrd	r2, [r3]
   24ea0:	strd	r2, [r1]
   24ea4:	b	24eb8 <__assert_fail@plt+0x13c78>
   24ea8:	ldr	r2, [fp, #-12]
   24eac:	ldr	r3, [fp, #-16]
   24eb0:	cmp	r2, r3
   24eb4:	blt	24b60 <__assert_fail@plt+0x13920>
   24eb8:	ldr	r3, [fp, #-160]	; 0xffffff60
   24ebc:	ldr	r2, [fp, #-12]
   24ec0:	str	r2, [r3, #28]
   24ec4:	ldr	r3, [fp, #-160]	; 0xffffff60
   24ec8:	ldr	r2, [fp, #-12]
   24ecc:	str	r2, [r3, #32]
   24ed0:	mov	r3, #0
   24ed4:	b	25624 <__assert_fail@plt+0x143e4>
   24ed8:	ldr	r3, [fp, #-160]	; 0xffffff60
   24edc:	ldr	r3, [r3, #32]
   24ee0:	str	r3, [fp, #-8]
   24ee4:	b	255f8 <__assert_fail@plt+0x143b8>
   24ee8:	nop	{0}
   24eec:	ldr	r2, [fp, #-16]
   24ef0:	ldr	r3, [fp, #-12]
   24ef4:	sub	r3, r2, r3
   24ef8:	str	r3, [fp, #-48]	; 0xffffffd0
   24efc:	ldr	r3, [fp, #-160]	; 0xffffff60
   24f00:	sub	r1, fp, #80	; 0x50
   24f04:	add	r3, r3, #16
   24f08:	ldrd	r2, [r3]
   24f0c:	strd	r2, [r1]
   24f10:	ldr	r3, [fp, #-160]	; 0xffffff60
   24f14:	ldr	r3, [r3, #64]	; 0x40
   24f18:	cmp	r3, #0
   24f1c:	movne	r3, #1
   24f20:	moveq	r3, #0
   24f24:	uxtb	r3, r3
   24f28:	cmp	r3, #0
   24f2c:	beq	24fcc <__assert_fail@plt+0x13d8c>
   24f30:	mov	r3, #0
   24f34:	str	r3, [fp, #-24]	; 0xffffffe8
   24f38:	b	24f9c <__assert_fail@plt+0x13d5c>
   24f3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24f40:	ldr	r3, [r3]
   24f44:	ldr	r2, [fp, #-160]	; 0xffffff60
   24f48:	ldr	r1, [r2, #24]
   24f4c:	ldr	r2, [fp, #-8]
   24f50:	add	r1, r1, r2
   24f54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24f58:	add	r2, r1, r2
   24f5c:	add	r3, r3, r2
   24f60:	ldrb	r3, [r3]
   24f64:	str	r3, [fp, #-64]	; 0xffffffc0
   24f68:	ldr	r3, [fp, #-160]	; 0xffffff60
   24f6c:	ldr	r2, [r3, #64]	; 0x40
   24f70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   24f74:	add	r3, r2, r3
   24f78:	ldrb	r1, [r3]
   24f7c:	sub	r2, fp, #144	; 0x90
   24f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f84:	add	r3, r2, r3
   24f88:	mov	r2, r1
   24f8c:	strb	r2, [r3]
   24f90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f94:	add	r3, r3, #1
   24f98:	str	r3, [fp, #-24]	; 0xffffffe8
   24f9c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24fa0:	ldr	r3, [r3, #80]	; 0x50
   24fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24fa8:	cmp	r2, r3
   24fac:	bge	24fc0 <__assert_fail@plt+0x13d80>
   24fb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24fb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24fb8:	cmp	r2, r3
   24fbc:	blt	24f3c <__assert_fail@plt+0x13cfc>
   24fc0:	sub	r3, fp, #144	; 0x90
   24fc4:	str	r3, [fp, #-20]	; 0xffffffec
   24fc8:	b	24ff0 <__assert_fail@plt+0x13db0>
   24fcc:	ldr	r3, [fp, #-160]	; 0xffffff60
   24fd0:	ldr	r2, [r3]
   24fd4:	ldr	r3, [fp, #-160]	; 0xffffff60
   24fd8:	ldr	r3, [r3, #24]
   24fdc:	mov	r1, r3
   24fe0:	ldr	r3, [fp, #-8]
   24fe4:	add	r3, r1, r3
   24fe8:	add	r3, r2, r3
   24fec:	str	r3, [fp, #-20]	; 0xffffffec
   24ff0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24ff4:	ldr	r3, [fp, #-160]	; 0xffffff60
   24ff8:	add	r3, r3, #16
   24ffc:	sub	r0, fp, #152	; 0x98
   25000:	ldr	r1, [fp, #-20]	; 0xffffffec
   25004:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   25008:	str	r0, [fp, #-52]	; 0xffffffcc
   2500c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25010:	cmp	r3, #0
   25014:	movne	r3, #1
   25018:	moveq	r3, #0
   2501c:	uxtb	r3, r3
   25020:	cmp	r3, #0
   25024:	beq	25484 <__assert_fail@plt+0x14244>
   25028:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2502c:	cmn	r3, #3
   25030:	movls	r3, #1
   25034:	movhi	r3, #0
   25038:	uxtb	r3, r3
   2503c:	cmp	r3, #0
   25040:	beq	25484 <__assert_fail@plt+0x14244>
   25044:	ldr	r3, [fp, #-152]	; 0xffffff68
   25048:	mov	r0, r3
   2504c:	bl	11210 <towupper@plt>
   25050:	str	r0, [fp, #-68]	; 0xffffffbc
   25054:	ldr	r3, [fp, #-152]	; 0xffffff68
   25058:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2505c:	cmp	r2, r3
   25060:	beq	25368 <__assert_fail@plt+0x14128>
   25064:	sub	r2, fp, #80	; 0x50
   25068:	sub	r3, fp, #144	; 0x90
   2506c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   25070:	mov	r0, r3
   25074:	bl	10f58 <wcrtomb@plt>
   25078:	str	r0, [fp, #-72]	; 0xffffffb8
   2507c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25080:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25084:	cmp	r2, r3
   25088:	moveq	r3, #1
   2508c:	movne	r3, #0
   25090:	uxtb	r3, r3
   25094:	cmp	r3, #0
   25098:	beq	250c0 <__assert_fail@plt+0x13e80>
   2509c:	ldr	r3, [fp, #-160]	; 0xffffff60
   250a0:	ldr	r2, [r3, #4]
   250a4:	ldr	r3, [fp, #-12]
   250a8:	add	r3, r2, r3
   250ac:	sub	r1, fp, #144	; 0x90
   250b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   250b4:	mov	r0, r3
   250b8:	bl	10fe8 <memcpy@plt>
   250bc:	b	25388 <__assert_fail@plt+0x14148>
   250c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   250c4:	cmn	r3, #1
   250c8:	beq	25344 <__assert_fail@plt+0x14104>
   250cc:	ldr	r2, [fp, #-12]
   250d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   250d4:	add	r3, r2, r3
   250d8:	ldr	r2, [fp, #-160]	; 0xffffff60
   250dc:	ldr	r2, [r2, #36]	; 0x24
   250e0:	cmp	r3, r2
   250e4:	bls	25100 <__assert_fail@plt+0x13ec0>
   250e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   250ec:	add	r1, r3, #16
   250f0:	sub	r3, fp, #80	; 0x50
   250f4:	ldrd	r2, [r3]
   250f8:	strd	r2, [r1]
   250fc:	b	25608 <__assert_fail@plt+0x143c8>
   25100:	ldr	r3, [fp, #-160]	; 0xffffff60
   25104:	ldr	r3, [r3, #12]
   25108:	cmp	r3, #0
   2510c:	bne	2514c <__assert_fail@plt+0x13f0c>
   25110:	ldr	r3, [fp, #-160]	; 0xffffff60
   25114:	ldr	r3, [r3, #36]	; 0x24
   25118:	lsl	r3, r3, #2
   2511c:	mov	r0, r3
   25120:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   25124:	mov	r3, r0
   25128:	mov	r2, r3
   2512c:	ldr	r3, [fp, #-160]	; 0xffffff60
   25130:	str	r2, [r3, #12]
   25134:	ldr	r3, [fp, #-160]	; 0xffffff60
   25138:	ldr	r3, [r3, #12]
   2513c:	cmp	r3, #0
   25140:	bne	2514c <__assert_fail@plt+0x13f0c>
   25144:	mov	r3, #12
   25148:	b	25624 <__assert_fail@plt+0x143e4>
   2514c:	ldr	r3, [fp, #-160]	; 0xffffff60
   25150:	ldrb	r3, [r3, #76]	; 0x4c
   25154:	cmp	r3, #0
   25158:	bne	251ac <__assert_fail@plt+0x13f6c>
   2515c:	mov	r3, #0
   25160:	str	r3, [fp, #-28]	; 0xffffffe4
   25164:	b	25190 <__assert_fail@plt+0x13f50>
   25168:	ldr	r3, [fp, #-160]	; 0xffffff60
   2516c:	ldr	r2, [r3, #12]
   25170:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25174:	lsl	r3, r3, #2
   25178:	add	r3, r2, r3
   2517c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25180:	str	r2, [r3]
   25184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25188:	add	r3, r3, #1
   2518c:	str	r3, [fp, #-28]	; 0xffffffe4
   25190:	ldr	r3, [fp, #-12]
   25194:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25198:	cmp	r2, r3
   2519c:	bcc	25168 <__assert_fail@plt+0x13f28>
   251a0:	ldr	r3, [fp, #-160]	; 0xffffff60
   251a4:	mov	r2, #1
   251a8:	strb	r2, [r3, #76]	; 0x4c
   251ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   251b0:	ldr	r2, [r3, #4]
   251b4:	ldr	r3, [fp, #-12]
   251b8:	add	r3, r2, r3
   251bc:	sub	r1, fp, #144	; 0x90
   251c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   251c4:	mov	r0, r3
   251c8:	bl	10fe8 <memcpy@plt>
   251cc:	ldr	r3, [fp, #-160]	; 0xffffff60
   251d0:	ldr	r2, [r3, #8]
   251d4:	ldr	r3, [fp, #-12]
   251d8:	lsl	r3, r3, #2
   251dc:	add	r3, r2, r3
   251e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   251e4:	str	r2, [r3]
   251e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   251ec:	ldr	r2, [r3, #12]
   251f0:	ldr	r3, [fp, #-12]
   251f4:	lsl	r3, r3, #2
   251f8:	add	r3, r2, r3
   251fc:	ldr	r2, [fp, #-8]
   25200:	str	r2, [r3]
   25204:	mov	r3, #1
   25208:	str	r3, [fp, #-28]	; 0xffffffe4
   2520c:	b	2528c <__assert_fail@plt+0x1404c>
   25210:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25214:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25218:	cmp	r2, r3
   2521c:	bcc	2522c <__assert_fail@plt+0x13fec>
   25220:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25224:	sub	r3, r3, #1
   25228:	b	25230 <__assert_fail@plt+0x13ff0>
   2522c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25230:	ldr	r2, [fp, #-8]
   25234:	add	r0, r3, r2
   25238:	ldr	r3, [fp, #-160]	; 0xffffff60
   2523c:	ldr	r2, [r3, #12]
   25240:	ldr	r1, [fp, #-12]
   25244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25248:	add	r3, r1, r3
   2524c:	lsl	r3, r3, #2
   25250:	add	r3, r2, r3
   25254:	mov	r2, r0
   25258:	str	r2, [r3]
   2525c:	ldr	r3, [fp, #-160]	; 0xffffff60
   25260:	ldr	r2, [r3, #8]
   25264:	ldr	r1, [fp, #-12]
   25268:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2526c:	add	r3, r1, r3
   25270:	lsl	r3, r3, #2
   25274:	add	r3, r2, r3
   25278:	mvn	r2, #0
   2527c:	str	r2, [r3]
   25280:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25284:	add	r3, r3, #1
   25288:	str	r3, [fp, #-28]	; 0xffffffe4
   2528c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25290:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25294:	cmp	r2, r3
   25298:	bcc	25210 <__assert_fail@plt+0x13fd0>
   2529c:	ldr	r3, [fp, #-160]	; 0xffffff60
   252a0:	ldr	r3, [r3, #48]	; 0x30
   252a4:	mov	r1, r3
   252a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   252ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   252b0:	sub	r3, r2, r3
   252b4:	add	r3, r1, r3
   252b8:	mov	r2, r3
   252bc:	ldr	r3, [fp, #-160]	; 0xffffff60
   252c0:	str	r2, [r3, #48]	; 0x30
   252c4:	ldr	r3, [fp, #-160]	; 0xffffff60
   252c8:	ldr	r3, [r3, #52]	; 0x34
   252cc:	ldr	r2, [fp, #-8]
   252d0:	cmp	r2, r3
   252d4:	bge	25300 <__assert_fail@plt+0x140c0>
   252d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   252dc:	ldr	r3, [r3, #56]	; 0x38
   252e0:	mov	r1, r3
   252e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   252e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   252ec:	sub	r3, r2, r3
   252f0:	add	r3, r1, r3
   252f4:	mov	r2, r3
   252f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   252fc:	str	r2, [r3, #56]	; 0x38
   25300:	ldr	r3, [fp, #-160]	; 0xffffff60
   25304:	ldr	r2, [r3, #36]	; 0x24
   25308:	ldr	r3, [fp, #-160]	; 0xffffff60
   2530c:	ldr	r3, [r3, #48]	; 0x30
   25310:	cmp	r2, r3
   25314:	movlt	r3, r2
   25318:	movge	r3, r3
   2531c:	str	r3, [fp, #-16]
   25320:	ldr	r2, [fp, #-12]
   25324:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25328:	add	r3, r2, r3
   2532c:	str	r3, [fp, #-12]
   25330:	ldr	r2, [fp, #-8]
   25334:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25338:	add	r3, r2, r3
   2533c:	str	r3, [fp, #-8]
   25340:	b	255f8 <__assert_fail@plt+0x143b8>
   25344:	ldr	r3, [fp, #-160]	; 0xffffff60
   25348:	ldr	r2, [r3, #4]
   2534c:	ldr	r3, [fp, #-12]
   25350:	add	r3, r2, r3
   25354:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25358:	ldr	r1, [fp, #-20]	; 0xffffffec
   2535c:	mov	r0, r3
   25360:	bl	10fe8 <memcpy@plt>
   25364:	b	25388 <__assert_fail@plt+0x14148>
   25368:	ldr	r3, [fp, #-160]	; 0xffffff60
   2536c:	ldr	r2, [r3, #4]
   25370:	ldr	r3, [fp, #-12]
   25374:	add	r3, r2, r3
   25378:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2537c:	ldr	r1, [fp, #-20]	; 0xffffffec
   25380:	mov	r0, r3
   25384:	bl	10fe8 <memcpy@plt>
   25388:	ldr	r3, [fp, #-160]	; 0xffffff60
   2538c:	ldrb	r3, [r3, #76]	; 0x4c
   25390:	cmp	r3, #0
   25394:	movne	r3, #1
   25398:	moveq	r3, #0
   2539c:	uxtb	r3, r3
   253a0:	cmp	r3, #0
   253a4:	beq	25400 <__assert_fail@plt+0x141c0>
   253a8:	mov	r3, #0
   253ac:	str	r3, [fp, #-32]	; 0xffffffe0
   253b0:	b	253f0 <__assert_fail@plt+0x141b0>
   253b4:	ldr	r2, [fp, #-8]
   253b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253bc:	add	r0, r2, r3
   253c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   253c4:	ldr	r2, [r3, #12]
   253c8:	ldr	r1, [fp, #-12]
   253cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253d0:	add	r3, r1, r3
   253d4:	lsl	r3, r3, #2
   253d8:	add	r3, r2, r3
   253dc:	mov	r2, r0
   253e0:	str	r2, [r3]
   253e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253e8:	add	r3, r3, #1
   253ec:	str	r3, [fp, #-32]	; 0xffffffe0
   253f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   253f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   253f8:	cmp	r2, r3
   253fc:	bcc	253b4 <__assert_fail@plt+0x14174>
   25400:	ldr	r2, [fp, #-8]
   25404:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25408:	add	r3, r2, r3
   2540c:	str	r3, [fp, #-8]
   25410:	ldr	r3, [fp, #-160]	; 0xffffff60
   25414:	ldr	r2, [r3, #8]
   25418:	ldr	r3, [fp, #-12]
   2541c:	add	r1, r3, #1
   25420:	str	r1, [fp, #-12]
   25424:	lsl	r3, r3, #2
   25428:	add	r3, r2, r3
   2542c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25430:	str	r2, [r3]
   25434:	ldr	r2, [fp, #-12]
   25438:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2543c:	add	r3, r2, r3
   25440:	sub	r3, r3, #1
   25444:	str	r3, [fp, #-48]	; 0xffffffd0
   25448:	b	25470 <__assert_fail@plt+0x14230>
   2544c:	ldr	r3, [fp, #-160]	; 0xffffff60
   25450:	ldr	r2, [r3, #8]
   25454:	ldr	r3, [fp, #-12]
   25458:	add	r1, r3, #1
   2545c:	str	r1, [fp, #-12]
   25460:	lsl	r3, r3, #2
   25464:	add	r3, r2, r3
   25468:	mvn	r2, #0
   2546c:	str	r2, [r3]
   25470:	ldr	r2, [fp, #-12]
   25474:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25478:	cmp	r2, r3
   2547c:	blt	2544c <__assert_fail@plt+0x1420c>
   25480:	b	255f8 <__assert_fail@plt+0x143b8>
   25484:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25488:	cmn	r3, #1
   2548c:	beq	254c0 <__assert_fail@plt+0x14280>
   25490:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25494:	cmp	r3, #0
   25498:	beq	254c0 <__assert_fail@plt+0x14280>
   2549c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   254a0:	cmn	r3, #2
   254a4:	bne	255d8 <__assert_fail@plt+0x14398>
   254a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   254ac:	ldr	r2, [r3, #36]	; 0x24
   254b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   254b4:	ldr	r3, [r3, #48]	; 0x30
   254b8:	cmp	r2, r3
   254bc:	blt	255d8 <__assert_fail@plt+0x14398>
   254c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   254c4:	ldr	r3, [r3]
   254c8:	ldr	r2, [fp, #-160]	; 0xffffff60
   254cc:	ldr	r1, [r2, #24]
   254d0:	ldr	r2, [fp, #-8]
   254d4:	add	r2, r1, r2
   254d8:	add	r3, r3, r2
   254dc:	ldrb	r3, [r3]
   254e0:	str	r3, [fp, #-36]	; 0xffffffdc
   254e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   254e8:	ldr	r3, [r3, #64]	; 0x40
   254ec:	cmp	r3, #0
   254f0:	movne	r3, #1
   254f4:	moveq	r3, #0
   254f8:	uxtb	r3, r3
   254fc:	cmp	r3, #0
   25500:	beq	2551c <__assert_fail@plt+0x142dc>
   25504:	ldr	r3, [fp, #-160]	; 0xffffff60
   25508:	ldr	r2, [r3, #64]	; 0x40
   2550c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25510:	add	r3, r2, r3
   25514:	ldrb	r3, [r3]
   25518:	str	r3, [fp, #-36]	; 0xffffffdc
   2551c:	ldr	r3, [fp, #-160]	; 0xffffff60
   25520:	ldr	r2, [r3, #4]
   25524:	ldr	r3, [fp, #-12]
   25528:	add	r3, r2, r3
   2552c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25530:	uxtb	r2, r2
   25534:	strb	r2, [r3]
   25538:	ldr	r3, [fp, #-160]	; 0xffffff60
   2553c:	ldrb	r3, [r3, #76]	; 0x4c
   25540:	cmp	r3, #0
   25544:	movne	r3, #1
   25548:	moveq	r3, #0
   2554c:	uxtb	r3, r3
   25550:	cmp	r3, #0
   25554:	beq	25574 <__assert_fail@plt+0x14334>
   25558:	ldr	r3, [fp, #-160]	; 0xffffff60
   2555c:	ldr	r2, [r3, #12]
   25560:	ldr	r3, [fp, #-12]
   25564:	lsl	r3, r3, #2
   25568:	add	r3, r2, r3
   2556c:	ldr	r2, [fp, #-8]
   25570:	str	r2, [r3]
   25574:	ldr	r3, [fp, #-8]
   25578:	add	r3, r3, #1
   2557c:	str	r3, [fp, #-8]
   25580:	ldr	r3, [fp, #-160]	; 0xffffff60
   25584:	ldr	r2, [r3, #8]
   25588:	ldr	r3, [fp, #-12]
   2558c:	add	r1, r3, #1
   25590:	str	r1, [fp, #-12]
   25594:	lsl	r3, r3, #2
   25598:	add	r3, r2, r3
   2559c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   255a0:	str	r2, [r3]
   255a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   255a8:	cmn	r3, #1
   255ac:	moveq	r3, #1
   255b0:	movne	r3, #0
   255b4:	uxtb	r3, r3
   255b8:	cmp	r3, #0
   255bc:	beq	255f4 <__assert_fail@plt+0x143b4>
   255c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   255c4:	add	r1, r3, #16
   255c8:	sub	r3, fp, #80	; 0x50
   255cc:	ldrd	r2, [r3]
   255d0:	strd	r2, [r1]
   255d4:	b	255f4 <__assert_fail@plt+0x143b4>
   255d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   255dc:	add	r1, r3, #16
   255e0:	sub	r3, fp, #80	; 0x50
   255e4:	ldrd	r2, [r3]
   255e8:	strd	r2, [r1]
   255ec:	nop	{0}
   255f0:	b	25608 <__assert_fail@plt+0x143c8>
   255f4:	nop	{0}
   255f8:	ldr	r2, [fp, #-12]
   255fc:	ldr	r3, [fp, #-16]
   25600:	cmp	r2, r3
   25604:	blt	24ee8 <__assert_fail@plt+0x13ca8>
   25608:	ldr	r3, [fp, #-160]	; 0xffffff60
   2560c:	ldr	r2, [fp, #-12]
   25610:	str	r2, [r3, #28]
   25614:	ldr	r3, [fp, #-160]	; 0xffffff60
   25618:	ldr	r2, [fp, #-8]
   2561c:	str	r2, [r3, #32]
   25620:	mov	r3, #0
   25624:	mov	r0, r3
   25628:	sub	sp, fp, #4
   2562c:	ldr	fp, [sp]
   25630:	add	sp, sp, #4
   25634:	pop	{pc}		; (ldr pc, [sp], #4)
   25638:	str	fp, [sp, #-8]!
   2563c:	str	lr, [sp, #4]
   25640:	add	fp, sp, #4
   25644:	sub	sp, sp, #48	; 0x30
   25648:	str	r0, [fp, #-40]	; 0xffffffd8
   2564c:	str	r1, [fp, #-44]	; 0xffffffd4
   25650:	str	r2, [fp, #-48]	; 0xffffffd0
   25654:	mvn	r3, #0
   25658:	str	r3, [fp, #-16]
   2565c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25660:	ldr	r2, [r3, #24]
   25664:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25668:	ldr	r3, [r3, #32]
   2566c:	add	r3, r2, r3
   25670:	str	r3, [fp, #-8]
   25674:	b	257a4 <__assert_fail@plt+0x14564>
   25678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2567c:	ldr	r2, [r3, #44]	; 0x2c
   25680:	ldr	r3, [fp, #-8]
   25684:	sub	r3, r2, r3
   25688:	str	r3, [fp, #-20]	; 0xffffffec
   2568c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25690:	sub	r1, fp, #28
   25694:	add	r3, r3, #16
   25698:	ldrd	r2, [r3]
   2569c:	strd	r2, [r1]
   256a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   256a4:	ldr	r2, [r3]
   256a8:	ldr	r3, [fp, #-8]
   256ac:	add	r1, r2, r3
   256b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   256b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   256b8:	add	r3, r3, #16
   256bc:	sub	r0, fp, #32
   256c0:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   256c4:	str	r0, [fp, #-12]
   256c8:	ldr	r3, [fp, #-12]
   256cc:	cmn	r3, #2
   256d0:	moveq	r3, #1
   256d4:	movne	r3, #0
   256d8:	uxtb	r3, r3
   256dc:	cmp	r3, #0
   256e0:	bne	25700 <__assert_fail@plt+0x144c0>
   256e4:	ldr	r3, [fp, #-12]
   256e8:	cmn	r3, #1
   256ec:	moveq	r3, #1
   256f0:	movne	r3, #0
   256f4:	uxtb	r3, r3
   256f8:	cmp	r3, #0
   256fc:	beq	25708 <__assert_fail@plt+0x144c8>
   25700:	mov	r3, #1
   25704:	b	2570c <__assert_fail@plt+0x144cc>
   25708:	mov	r3, #0
   2570c:	cmp	r3, #0
   25710:	bne	25730 <__assert_fail@plt+0x144f0>
   25714:	ldr	r3, [fp, #-12]
   25718:	cmp	r3, #0
   2571c:	moveq	r3, #1
   25720:	movne	r3, #0
   25724:	uxtb	r3, r3
   25728:	cmp	r3, #0
   2572c:	beq	2578c <__assert_fail@plt+0x1454c>
   25730:	ldr	r3, [fp, #-12]
   25734:	cmp	r3, #0
   25738:	beq	25748 <__assert_fail@plt+0x14508>
   2573c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25740:	cmp	r3, #0
   25744:	bne	25754 <__assert_fail@plt+0x14514>
   25748:	mov	r3, #0
   2574c:	str	r3, [fp, #-16]
   25750:	b	2576c <__assert_fail@plt+0x1452c>
   25754:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25758:	ldr	r2, [r3]
   2575c:	ldr	r3, [fp, #-8]
   25760:	add	r3, r2, r3
   25764:	ldrb	r3, [r3]
   25768:	str	r3, [fp, #-16]
   2576c:	mov	r3, #1
   25770:	str	r3, [fp, #-12]
   25774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25778:	add	r1, r3, #16
   2577c:	sub	r3, fp, #28
   25780:	ldrd	r2, [r3]
   25784:	strd	r2, [r1]
   25788:	b	25794 <__assert_fail@plt+0x14554>
   2578c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25790:	str	r3, [fp, #-16]
   25794:	ldr	r2, [fp, #-8]
   25798:	ldr	r3, [fp, #-12]
   2579c:	add	r3, r2, r3
   257a0:	str	r3, [fp, #-8]
   257a4:	ldr	r2, [fp, #-8]
   257a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   257ac:	cmp	r2, r3
   257b0:	blt	25678 <__assert_fail@plt+0x14438>
   257b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   257b8:	ldr	r2, [fp, #-16]
   257bc:	str	r2, [r3]
   257c0:	ldr	r3, [fp, #-8]
   257c4:	mov	r0, r3
   257c8:	sub	sp, fp, #4
   257cc:	ldr	fp, [sp]
   257d0:	add	sp, sp, #4
   257d4:	pop	{pc}		; (ldr pc, [sp], #4)
   257d8:	str	fp, [sp, #-8]!
   257dc:	str	lr, [sp, #4]
   257e0:	add	fp, sp, #4
   257e4:	sub	sp, sp, #24
   257e8:	str	r0, [fp, #-24]	; 0xffffffe8
   257ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   257f0:	ldr	r2, [r3, #36]	; 0x24
   257f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   257f8:	ldr	r3, [r3, #48]	; 0x30
   257fc:	cmp	r2, r3
   25800:	movlt	r3, r2
   25804:	movge	r3, r3
   25808:	str	r3, [fp, #-16]
   2580c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25810:	ldr	r3, [r3, #28]
   25814:	str	r3, [fp, #-8]
   25818:	b	258a8 <__assert_fail@plt+0x14668>
   2581c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25820:	ldr	r3, [r3]
   25824:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25828:	ldr	r1, [r2, #24]
   2582c:	ldr	r2, [fp, #-8]
   25830:	add	r2, r1, r2
   25834:	add	r3, r3, r2
   25838:	ldrb	r3, [r3]
   2583c:	str	r3, [fp, #-12]
   25840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25844:	ldr	r3, [r3, #64]	; 0x40
   25848:	cmp	r3, #0
   2584c:	movne	r3, #1
   25850:	moveq	r3, #0
   25854:	uxtb	r3, r3
   25858:	cmp	r3, #0
   2585c:	beq	25878 <__assert_fail@plt+0x14638>
   25860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25864:	ldr	r2, [r3, #64]	; 0x40
   25868:	ldr	r3, [fp, #-12]
   2586c:	add	r3, r2, r3
   25870:	ldrb	r3, [r3]
   25874:	str	r3, [fp, #-12]
   25878:	ldr	r0, [fp, #-12]
   2587c:	bl	111e0 <toupper@plt>
   25880:	mov	r1, r0
   25884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25888:	ldr	r2, [r3, #4]
   2588c:	ldr	r3, [fp, #-8]
   25890:	add	r3, r2, r3
   25894:	uxtb	r2, r1
   25898:	strb	r2, [r3]
   2589c:	ldr	r3, [fp, #-8]
   258a0:	add	r3, r3, #1
   258a4:	str	r3, [fp, #-8]
   258a8:	ldr	r2, [fp, #-8]
   258ac:	ldr	r3, [fp, #-16]
   258b0:	cmp	r2, r3
   258b4:	blt	2581c <__assert_fail@plt+0x145dc>
   258b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   258bc:	ldr	r2, [fp, #-8]
   258c0:	str	r2, [r3, #28]
   258c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   258c8:	ldr	r2, [fp, #-8]
   258cc:	str	r2, [r3, #32]
   258d0:	nop	{0}
   258d4:	sub	sp, fp, #4
   258d8:	ldr	fp, [sp]
   258dc:	add	sp, sp, #4
   258e0:	pop	{pc}		; (ldr pc, [sp], #4)
   258e4:	push	{fp}		; (str fp, [sp, #-4]!)
   258e8:	add	fp, sp, #0
   258ec:	sub	sp, sp, #28
   258f0:	str	r0, [fp, #-24]	; 0xffffffe8
   258f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   258f8:	ldr	r2, [r3, #36]	; 0x24
   258fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25900:	ldr	r3, [r3, #48]	; 0x30
   25904:	cmp	r2, r3
   25908:	movlt	r3, r2
   2590c:	movge	r3, r3
   25910:	str	r3, [fp, #-12]
   25914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25918:	ldr	r3, [r3, #28]
   2591c:	str	r3, [fp, #-8]
   25920:	b	2597c <__assert_fail@plt+0x1473c>
   25924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25928:	ldr	r3, [r3]
   2592c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25930:	ldr	r1, [r2, #24]
   25934:	ldr	r2, [fp, #-8]
   25938:	add	r2, r1, r2
   2593c:	add	r3, r3, r2
   25940:	ldrb	r3, [r3]
   25944:	str	r3, [fp, #-16]
   25948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2594c:	ldr	r2, [r3, #64]	; 0x40
   25950:	ldr	r3, [fp, #-16]
   25954:	add	r2, r2, r3
   25958:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2595c:	ldr	r1, [r3, #4]
   25960:	ldr	r3, [fp, #-8]
   25964:	add	r3, r1, r3
   25968:	ldrb	r2, [r2]
   2596c:	strb	r2, [r3]
   25970:	ldr	r3, [fp, #-8]
   25974:	add	r3, r3, #1
   25978:	str	r3, [fp, #-8]
   2597c:	ldr	r2, [fp, #-8]
   25980:	ldr	r3, [fp, #-12]
   25984:	cmp	r2, r3
   25988:	blt	25924 <__assert_fail@plt+0x146e4>
   2598c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25990:	ldr	r2, [fp, #-8]
   25994:	str	r2, [r3, #28]
   25998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2599c:	ldr	r2, [fp, #-8]
   259a0:	str	r2, [r3, #32]
   259a4:	nop	{0}
   259a8:	add	sp, fp, #0
   259ac:	pop	{fp}		; (ldr fp, [sp], #4)
   259b0:	bx	lr
   259b4:	str	fp, [sp, #-8]!
   259b8:	str	lr, [sp, #4]
   259bc:	add	fp, sp, #4
   259c0:	sub	sp, sp, #104	; 0x68
   259c4:	str	r0, [fp, #-96]	; 0xffffffa0
   259c8:	str	r1, [fp, #-100]	; 0xffffff9c
   259cc:	str	r2, [fp, #-104]	; 0xffffff98
   259d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   259d4:	ldr	r3, [r3, #24]
   259d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   259dc:	cmp	r2, r3
   259e0:	movge	r3, #1
   259e4:	movlt	r3, #0
   259e8:	uxtb	r3, r3
   259ec:	cmp	r3, #0
   259f0:	beq	25a0c <__assert_fail@plt+0x147cc>
   259f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   259f8:	ldr	r3, [r3, #24]
   259fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   25a00:	sub	r3, r2, r3
   25a04:	str	r3, [fp, #-8]
   25a08:	b	25ad0 <__assert_fail@plt+0x14890>
   25a0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a10:	ldr	r3, [r3, #80]	; 0x50
   25a14:	cmp	r3, #1
   25a18:	ble	25a34 <__assert_fail@plt+0x147f4>
   25a1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a20:	add	r3, r3, #16
   25a24:	mov	r2, #8
   25a28:	mov	r1, #0
   25a2c:	mov	r0, r3
   25a30:	bl	1118c <memset@plt>
   25a34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a38:	ldr	r2, [r3, #44]	; 0x2c
   25a3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a40:	str	r2, [r3, #48]	; 0x30
   25a44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a48:	ldr	r2, [r3, #52]	; 0x34
   25a4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a50:	str	r2, [r3, #56]	; 0x38
   25a54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a58:	mov	r2, #0
   25a5c:	str	r2, [r3, #28]
   25a60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a64:	mov	r2, #0
   25a68:	str	r2, [r3, #24]
   25a6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a70:	mov	r2, #0
   25a74:	str	r2, [r3, #32]
   25a78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25a7c:	mov	r2, #0
   25a80:	strb	r2, [r3, #76]	; 0x4c
   25a84:	ldr	r3, [fp, #-104]	; 0xffffff98
   25a88:	and	r3, r3, #1
   25a8c:	cmp	r3, #0
   25a90:	beq	25a9c <__assert_fail@plt+0x1485c>
   25a94:	mov	r2, #4
   25a98:	b	25aa0 <__assert_fail@plt+0x14860>
   25a9c:	mov	r2, #6
   25aa0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25aa4:	str	r2, [r3, #60]	; 0x3c
   25aa8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25aac:	ldrb	r3, [r3, #75]	; 0x4b
   25ab0:	cmp	r3, #0
   25ab4:	bne	25ac8 <__assert_fail@plt+0x14888>
   25ab8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25abc:	ldr	r2, [r3]
   25ac0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ac4:	str	r2, [r3, #4]
   25ac8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   25acc:	str	r3, [fp, #-8]
   25ad0:	ldr	r3, [fp, #-8]
   25ad4:	cmp	r3, #0
   25ad8:	movne	r3, #1
   25adc:	moveq	r3, #0
   25ae0:	uxtb	r3, r3
   25ae4:	cmp	r3, #0
   25ae8:	beq	26508 <__assert_fail@plt+0x152c8>
   25aec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25af0:	ldr	r3, [r3, #32]
   25af4:	ldr	r2, [fp, #-8]
   25af8:	cmp	r2, r3
   25afc:	movlt	r3, #1
   25b00:	movge	r3, #0
   25b04:	uxtb	r3, r3
   25b08:	cmp	r3, #0
   25b0c:	beq	26008 <__assert_fail@plt+0x14dc8>
   25b10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25b14:	ldrb	r3, [r3, #76]	; 0x4c
   25b18:	cmp	r3, #0
   25b1c:	beq	25f1c <__assert_fail@plt+0x14cdc>
   25b20:	mov	r3, #0
   25b24:	str	r3, [fp, #-12]
   25b28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25b2c:	ldr	r3, [r3, #28]
   25b30:	str	r3, [fp, #-16]
   25b34:	ldr	r2, [fp, #-16]
   25b38:	ldr	r3, [fp, #-12]
   25b3c:	add	r3, r2, r3
   25b40:	lsr	r2, r3, #31
   25b44:	add	r3, r2, r3
   25b48:	asr	r3, r3, #1
   25b4c:	str	r3, [fp, #-20]	; 0xffffffec
   25b50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25b54:	ldr	r2, [r3, #12]
   25b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b5c:	lsl	r3, r3, #2
   25b60:	add	r3, r2, r3
   25b64:	ldr	r3, [r3]
   25b68:	ldr	r2, [fp, #-8]
   25b6c:	cmp	r2, r3
   25b70:	bge	25b80 <__assert_fail@plt+0x14940>
   25b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b78:	str	r3, [fp, #-16]
   25b7c:	b	25bb0 <__assert_fail@plt+0x14970>
   25b80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25b84:	ldr	r2, [r3, #12]
   25b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b8c:	lsl	r3, r3, #2
   25b90:	add	r3, r2, r3
   25b94:	ldr	r3, [r3]
   25b98:	ldr	r2, [fp, #-8]
   25b9c:	cmp	r2, r3
   25ba0:	ble	25bc4 <__assert_fail@plt+0x14984>
   25ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ba8:	add	r3, r3, #1
   25bac:	str	r3, [fp, #-12]
   25bb0:	ldr	r2, [fp, #-12]
   25bb4:	ldr	r3, [fp, #-16]
   25bb8:	cmp	r2, r3
   25bbc:	blt	25b34 <__assert_fail@plt+0x148f4>
   25bc0:	b	25bc8 <__assert_fail@plt+0x14988>
   25bc4:	nop	{0}
   25bc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25bcc:	ldr	r2, [r3, #12]
   25bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25bd4:	lsl	r3, r3, #2
   25bd8:	add	r3, r2, r3
   25bdc:	ldr	r3, [r3]
   25be0:	ldr	r2, [fp, #-8]
   25be4:	cmp	r2, r3
   25be8:	ble	25bf8 <__assert_fail@plt+0x149b8>
   25bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   25bf0:	add	r3, r3, #1
   25bf4:	str	r3, [fp, #-20]	; 0xffffffec
   25bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25bfc:	sub	r3, r3, #1
   25c00:	ldr	r2, [fp, #-104]	; 0xffffff98
   25c04:	mov	r1, r3
   25c08:	ldr	r0, [fp, #-96]	; 0xffffffa0
   25c0c:	bl	26a20 <__assert_fail@plt+0x157e0>
   25c10:	mov	r2, r0
   25c14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25c18:	str	r2, [r3, #60]	; 0x3c
   25c1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25c20:	ldr	r3, [r3, #28]
   25c24:	ldr	r2, [fp, #-8]
   25c28:	cmp	r2, r3
   25c2c:	bge	25d6c <__assert_fail@plt+0x14b2c>
   25c30:	ldr	r2, [fp, #-20]	; 0xffffffec
   25c34:	ldr	r3, [fp, #-8]
   25c38:	cmp	r2, r3
   25c3c:	bne	25d6c <__assert_fail@plt+0x14b2c>
   25c40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25c44:	ldr	r2, [r3, #12]
   25c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c4c:	lsl	r3, r3, #2
   25c50:	add	r3, r2, r3
   25c54:	ldr	r3, [r3]
   25c58:	ldr	r2, [fp, #-8]
   25c5c:	cmp	r2, r3
   25c60:	bne	25d6c <__assert_fail@plt+0x14b2c>
   25c64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25c68:	ldr	r0, [r3, #8]
   25c6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25c70:	ldr	r2, [r3, #8]
   25c74:	ldr	r3, [fp, #-8]
   25c78:	lsl	r3, r3, #2
   25c7c:	add	r1, r2, r3
   25c80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25c84:	ldr	r2, [r3, #28]
   25c88:	ldr	r3, [fp, #-8]
   25c8c:	sub	r3, r2, r3
   25c90:	lsl	r3, r3, #2
   25c94:	mov	r2, r3
   25c98:	bl	10fb8 <memmove@plt>
   25c9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ca0:	ldr	r0, [r3, #4]
   25ca4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ca8:	ldr	r2, [r3, #4]
   25cac:	ldr	r3, [fp, #-8]
   25cb0:	add	r1, r2, r3
   25cb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25cb8:	ldr	r2, [r3, #28]
   25cbc:	ldr	r3, [fp, #-8]
   25cc0:	sub	r3, r2, r3
   25cc4:	mov	r2, r3
   25cc8:	bl	10fb8 <memmove@plt>
   25ccc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25cd0:	ldr	r2, [r3, #28]
   25cd4:	ldr	r3, [fp, #-8]
   25cd8:	sub	r2, r2, r3
   25cdc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ce0:	str	r2, [r3, #28]
   25ce4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ce8:	ldr	r2, [r3, #32]
   25cec:	ldr	r3, [fp, #-8]
   25cf0:	sub	r2, r2, r3
   25cf4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25cf8:	str	r2, [r3, #32]
   25cfc:	mov	r3, #0
   25d00:	str	r3, [fp, #-12]
   25d04:	b	25d54 <__assert_fail@plt+0x14b14>
   25d08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25d0c:	ldr	r2, [r3, #12]
   25d10:	ldr	r1, [fp, #-12]
   25d14:	ldr	r3, [fp, #-8]
   25d18:	add	r3, r1, r3
   25d1c:	lsl	r3, r3, #2
   25d20:	add	r3, r2, r3
   25d24:	ldr	r1, [r3]
   25d28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25d2c:	ldr	r2, [r3, #12]
   25d30:	ldr	r3, [fp, #-12]
   25d34:	lsl	r3, r3, #2
   25d38:	add	r3, r2, r3
   25d3c:	ldr	r2, [fp, #-8]
   25d40:	sub	r2, r1, r2
   25d44:	str	r2, [r3]
   25d48:	ldr	r3, [fp, #-12]
   25d4c:	add	r3, r3, #1
   25d50:	str	r3, [fp, #-12]
   25d54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25d58:	ldr	r3, [r3, #28]
   25d5c:	ldr	r2, [fp, #-12]
   25d60:	cmp	r2, r3
   25d64:	blt	25d08 <__assert_fail@plt+0x14ac8>
   25d68:	b	264e0 <__assert_fail@plt+0x152a0>
   25d6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25d70:	ldr	r2, [r3, #44]	; 0x2c
   25d74:	ldr	r3, [fp, #-100]	; 0xffffff9c
   25d78:	sub	r2, r2, r3
   25d7c:	ldr	r3, [fp, #-8]
   25d80:	add	r2, r2, r3
   25d84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25d88:	str	r2, [r3, #48]	; 0x30
   25d8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25d90:	ldr	r2, [r3, #52]	; 0x34
   25d94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   25d98:	sub	r2, r2, r3
   25d9c:	ldr	r3, [fp, #-8]
   25da0:	add	r2, r2, r3
   25da4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25da8:	str	r2, [r3, #56]	; 0x38
   25dac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25db0:	mov	r2, #0
   25db4:	strb	r2, [r3, #76]	; 0x4c
   25db8:	b	25dc8 <__assert_fail@plt+0x14b88>
   25dbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   25dc0:	sub	r3, r3, #1
   25dc4:	str	r3, [fp, #-20]	; 0xffffffec
   25dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25dcc:	cmp	r3, #0
   25dd0:	ble	25e2c <__assert_fail@plt+0x14bec>
   25dd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25dd8:	ldr	r2, [r3, #12]
   25ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   25de0:	sub	r3, r3, #-1073741823	; 0xc0000001
   25de4:	lsl	r3, r3, #2
   25de8:	add	r3, r2, r3
   25dec:	ldr	r3, [r3]
   25df0:	ldr	r2, [fp, #-8]
   25df4:	cmp	r2, r3
   25df8:	beq	25dbc <__assert_fail@plt+0x14b7c>
   25dfc:	b	25e2c <__assert_fail@plt+0x14bec>
   25e00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25e04:	ldr	r2, [r3, #8]
   25e08:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e0c:	lsl	r3, r3, #2
   25e10:	add	r3, r2, r3
   25e14:	ldr	r3, [r3]
   25e18:	cmn	r3, #1
   25e1c:	bne	25e44 <__assert_fail@plt+0x14c04>
   25e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e24:	add	r3, r3, #1
   25e28:	str	r3, [fp, #-20]	; 0xffffffec
   25e2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25e30:	ldr	r3, [r3, #28]
   25e34:	ldr	r2, [fp, #-20]	; 0xffffffec
   25e38:	cmp	r2, r3
   25e3c:	blt	25e00 <__assert_fail@plt+0x14bc0>
   25e40:	b	25e48 <__assert_fail@plt+0x14c08>
   25e44:	nop	{0}
   25e48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25e4c:	ldr	r3, [r3, #28]
   25e50:	ldr	r2, [fp, #-20]	; 0xffffffec
   25e54:	cmp	r2, r3
   25e58:	bne	25e6c <__assert_fail@plt+0x14c2c>
   25e5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25e60:	mov	r2, #0
   25e64:	str	r2, [r3, #28]
   25e68:	b	25f08 <__assert_fail@plt+0x14cc8>
   25e6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25e70:	ldr	r2, [r3, #12]
   25e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e78:	lsl	r3, r3, #2
   25e7c:	add	r3, r2, r3
   25e80:	ldr	r2, [r3]
   25e84:	ldr	r3, [fp, #-8]
   25e88:	sub	r2, r2, r3
   25e8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25e90:	str	r2, [r3, #28]
   25e94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25e98:	ldr	r3, [r3, #28]
   25e9c:	cmp	r3, #0
   25ea0:	beq	25f08 <__assert_fail@plt+0x14cc8>
   25ea4:	mov	r3, #0
   25ea8:	str	r3, [fp, #-12]
   25eac:	b	25ed8 <__assert_fail@plt+0x14c98>
   25eb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25eb4:	ldr	r2, [r3, #8]
   25eb8:	ldr	r3, [fp, #-12]
   25ebc:	lsl	r3, r3, #2
   25ec0:	add	r3, r2, r3
   25ec4:	mvn	r2, #0
   25ec8:	str	r2, [r3]
   25ecc:	ldr	r3, [fp, #-12]
   25ed0:	add	r3, r3, #1
   25ed4:	str	r3, [fp, #-12]
   25ed8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25edc:	ldr	r3, [r3, #28]
   25ee0:	ldr	r2, [fp, #-12]
   25ee4:	cmp	r2, r3
   25ee8:	blt	25eb0 <__assert_fail@plt+0x14c70>
   25eec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ef0:	ldr	r0, [r3, #4]
   25ef4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ef8:	ldr	r3, [r3, #28]
   25efc:	mov	r2, r3
   25f00:	mov	r1, #255	; 0xff
   25f04:	bl	1118c <memset@plt>
   25f08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f0c:	ldr	r2, [r3, #28]
   25f10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f14:	str	r2, [r3, #32]
   25f18:	b	264e0 <__assert_fail@plt+0x152a0>
   25f1c:	ldr	r3, [fp, #-8]
   25f20:	sub	r3, r3, #1
   25f24:	ldr	r2, [fp, #-104]	; 0xffffff98
   25f28:	mov	r1, r3
   25f2c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   25f30:	bl	26a20 <__assert_fail@plt+0x157e0>
   25f34:	mov	r2, r0
   25f38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f3c:	str	r2, [r3, #60]	; 0x3c
   25f40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f44:	ldr	r3, [r3, #80]	; 0x50
   25f48:	cmp	r3, #1
   25f4c:	ble	25f88 <__assert_fail@plt+0x14d48>
   25f50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f54:	ldr	r0, [r3, #8]
   25f58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f5c:	ldr	r2, [r3, #8]
   25f60:	ldr	r3, [fp, #-8]
   25f64:	lsl	r3, r3, #2
   25f68:	add	r1, r2, r3
   25f6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f70:	ldr	r2, [r3, #28]
   25f74:	ldr	r3, [fp, #-8]
   25f78:	sub	r3, r2, r3
   25f7c:	lsl	r3, r3, #2
   25f80:	mov	r2, r3
   25f84:	bl	10fb8 <memmove@plt>
   25f88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f8c:	ldrb	r3, [r3, #75]	; 0x4b
   25f90:	cmp	r3, #0
   25f94:	beq	25fc8 <__assert_fail@plt+0x14d88>
   25f98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25f9c:	ldr	r0, [r3, #4]
   25fa0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25fa4:	ldr	r2, [r3, #4]
   25fa8:	ldr	r3, [fp, #-8]
   25fac:	add	r1, r2, r3
   25fb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25fb4:	ldr	r2, [r3, #28]
   25fb8:	ldr	r3, [fp, #-8]
   25fbc:	sub	r3, r2, r3
   25fc0:	mov	r2, r3
   25fc4:	bl	10fb8 <memmove@plt>
   25fc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25fcc:	ldr	r2, [r3, #28]
   25fd0:	ldr	r3, [fp, #-8]
   25fd4:	sub	r2, r2, r3
   25fd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25fdc:	str	r2, [r3, #28]
   25fe0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25fe4:	ldr	r2, [r3, #32]
   25fe8:	ldr	r3, [fp, #-8]
   25fec:	sub	r2, r2, r3
   25ff0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ff4:	str	r2, [r3, #32]
   25ff8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25ffc:	ldr	r3, [r3, #28]
   26000:	cmp	r3, #0
   26004:	b	264e0 <__assert_fail@plt+0x152a0>
   26008:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2600c:	ldr	r3, [r3, #28]
   26010:	str	r3, [fp, #-48]	; 0xffffffd0
   26014:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26018:	ldrb	r3, [r3, #76]	; 0x4c
   2601c:	cmp	r3, #0
   26020:	beq	26070 <__assert_fail@plt+0x14e30>
   26024:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26028:	ldr	r2, [r3, #44]	; 0x2c
   2602c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   26030:	sub	r2, r2, r3
   26034:	ldr	r3, [fp, #-8]
   26038:	add	r2, r2, r3
   2603c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26040:	str	r2, [r3, #48]	; 0x30
   26044:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26048:	ldr	r2, [r3, #52]	; 0x34
   2604c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   26050:	sub	r2, r2, r3
   26054:	ldr	r3, [fp, #-8]
   26058:	add	r2, r2, r3
   2605c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26060:	str	r2, [r3, #56]	; 0x38
   26064:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26068:	mov	r2, #0
   2606c:	strb	r2, [r3, #76]	; 0x4c
   26070:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26074:	mov	r2, #0
   26078:	str	r2, [r3, #28]
   2607c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26080:	ldr	r3, [r3, #80]	; 0x50
   26084:	cmp	r3, #1
   26088:	ble	2642c <__assert_fail@plt+0x151ec>
   2608c:	mvn	r3, #0
   26090:	str	r3, [fp, #-68]	; 0xffffffbc
   26094:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26098:	ldrb	r3, [r3, #73]	; 0x49
   2609c:	cmp	r3, #0
   260a0:	beq	262b0 <__assert_fail@plt+0x15070>
   260a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   260a8:	ldr	r3, [r3]
   260ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   260b0:	ldr	r2, [r2, #24]
   260b4:	add	r3, r3, r2
   260b8:	str	r3, [fp, #-52]	; 0xffffffcc
   260bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   260c0:	ldr	r3, [r3, #80]	; 0x50
   260c4:	ldr	r2, [fp, #-8]
   260c8:	sub	r3, r2, r3
   260cc:	mov	r2, r3
   260d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   260d4:	add	r3, r3, r2
   260d8:	str	r3, [fp, #-32]	; 0xffffffe0
   260dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   260e0:	ldr	r3, [r3]
   260e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   260e8:	cmp	r2, r3
   260ec:	bcs	260fc <__assert_fail@plt+0x14ebc>
   260f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   260f4:	ldr	r3, [r3]
   260f8:	str	r3, [fp, #-32]	; 0xffffffe0
   260fc:	ldr	r3, [fp, #-8]
   26100:	sub	r3, r3, #1
   26104:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26108:	add	r3, r2, r3
   2610c:	str	r3, [fp, #-28]	; 0xffffffe4
   26110:	b	26298 <__assert_fail@plt+0x15058>
   26114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26118:	ldrb	r3, [r3]
   2611c:	and	r3, r3, #192	; 0xc0
   26120:	cmp	r3, #128	; 0x80
   26124:	beq	2628c <__assert_fail@plt+0x1504c>
   26128:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2612c:	ldr	r3, [r3, #48]	; 0x30
   26130:	mov	r2, r3
   26134:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26138:	add	r2, r3, r2
   2613c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26140:	sub	r3, r2, r3
   26144:	str	r3, [fp, #-56]	; 0xffffffc8
   26148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2614c:	str	r3, [fp, #-36]	; 0xffffffdc
   26150:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26154:	ldr	r3, [r3, #64]	; 0x40
   26158:	cmp	r3, #0
   2615c:	movne	r3, #1
   26160:	moveq	r3, #0
   26164:	uxtb	r3, r3
   26168:	cmp	r3, #0
   2616c:	beq	261dc <__assert_fail@plt+0x14f9c>
   26170:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26174:	cmp	r3, #6
   26178:	movlt	r3, r3
   2617c:	movge	r3, #6
   26180:	str	r3, [fp, #-40]	; 0xffffffd8
   26184:	b	261bc <__assert_fail@plt+0x14f7c>
   26188:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2618c:	ldr	r3, [r3, #64]	; 0x40
   26190:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26198:	add	r2, r1, r2
   2619c:	ldrb	r2, [r2]
   261a0:	add	r3, r3, r2
   261a4:	ldrb	r1, [r3]
   261a8:	sub	r2, fp, #88	; 0x58
   261ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   261b0:	add	r3, r2, r3
   261b4:	mov	r2, r1
   261b8:	strb	r2, [r3]
   261bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   261c0:	sub	r3, r3, #1
   261c4:	str	r3, [fp, #-40]	; 0xffffffd8
   261c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   261cc:	cmp	r3, #0
   261d0:	bge	26188 <__assert_fail@plt+0x14f48>
   261d4:	sub	r3, fp, #88	; 0x58
   261d8:	str	r3, [fp, #-36]	; 0xffffffdc
   261dc:	sub	r3, fp, #76	; 0x4c
   261e0:	mov	r2, #8
   261e4:	mov	r1, #0
   261e8:	mov	r0, r3
   261ec:	bl	1118c <memset@plt>
   261f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   261f4:	sub	r3, fp, #76	; 0x4c
   261f8:	sub	r0, fp, #80	; 0x50
   261fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26200:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   26204:	str	r0, [fp, #-60]	; 0xffffffc4
   26208:	ldr	r3, [fp, #-8]
   2620c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26210:	add	r2, r2, r3
   26214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26218:	sub	r3, r2, r3
   2621c:	mov	r2, r3
   26220:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26224:	cmp	r3, r2
   26228:	bcc	262ac <__assert_fail@plt+0x1506c>
   2622c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26230:	cmn	r3, #3
   26234:	bhi	262ac <__assert_fail@plt+0x1506c>
   26238:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2623c:	add	r3, r3, #16
   26240:	mov	r2, #8
   26244:	mov	r1, #0
   26248:	mov	r0, r3
   2624c:	bl	1118c <memset@plt>
   26250:	ldr	r3, [fp, #-8]
   26254:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26258:	add	r2, r2, r3
   2625c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26260:	sub	r3, r2, r3
   26264:	mov	r2, r3
   26268:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2626c:	sub	r3, r3, r2
   26270:	mov	r2, r3
   26274:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26278:	str	r2, [r3, #28]
   2627c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26280:	str	r3, [fp, #-68]	; 0xffffffbc
   26284:	nop	{0}
   26288:	b	262ac <__assert_fail@plt+0x1506c>
   2628c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26290:	sub	r3, r3, #1
   26294:	str	r3, [fp, #-28]	; 0xffffffe4
   26298:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2629c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   262a0:	cmp	r2, r3
   262a4:	bcs	26114 <__assert_fail@plt+0x14ed4>
   262a8:	b	262b0 <__assert_fail@plt+0x15070>
   262ac:	nop	{0}
   262b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   262b4:	cmn	r3, #1
   262b8:	bne	262e4 <__assert_fail@plt+0x150a4>
   262bc:	sub	r3, fp, #68	; 0x44
   262c0:	mov	r2, r3
   262c4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   262c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   262cc:	bl	25638 <__assert_fail@plt+0x143f8>
   262d0:	mov	r2, r0
   262d4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   262d8:	sub	r2, r2, r3
   262dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   262e0:	str	r2, [r3, #28]
   262e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   262e8:	cmn	r3, #1
   262ec:	bne	26318 <__assert_fail@plt+0x150d8>
   262f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   262f4:	sub	r3, r3, #1
   262f8:	ldr	r2, [fp, #-104]	; 0xffffff98
   262fc:	mov	r1, r3
   26300:	ldr	r0, [fp, #-96]	; 0xffffffa0
   26304:	bl	26a20 <__assert_fail@plt+0x157e0>
   26308:	mov	r2, r0
   2630c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26310:	str	r2, [r3, #60]	; 0x3c
   26314:	b	26394 <__assert_fail@plt+0x15154>
   26318:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2631c:	ldrb	r3, [r3, #78]	; 0x4e
   26320:	cmp	r3, #0
   26324:	movne	r3, #1
   26328:	moveq	r3, #0
   2632c:	uxtb	r3, r3
   26330:	cmp	r3, #0
   26334:	beq	2635c <__assert_fail@plt+0x1511c>
   26338:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2633c:	mov	r0, r3
   26340:	bl	11174 <iswalnum@plt>
   26344:	mov	r3, r0
   26348:	cmp	r3, #0
   2634c:	bne	26388 <__assert_fail@plt+0x15148>
   26350:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26354:	cmp	r3, #95	; 0x5f
   26358:	beq	26388 <__assert_fail@plt+0x15148>
   2635c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26360:	cmp	r3, #10
   26364:	bne	26380 <__assert_fail@plt+0x15140>
   26368:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2636c:	ldrb	r3, [r3, #77]	; 0x4d
   26370:	cmp	r3, #0
   26374:	beq	26380 <__assert_fail@plt+0x15140>
   26378:	mov	r3, #2
   2637c:	b	2638c <__assert_fail@plt+0x1514c>
   26380:	mov	r3, #0
   26384:	b	2638c <__assert_fail@plt+0x1514c>
   26388:	mov	r3, #1
   2638c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   26390:	str	r3, [r2, #60]	; 0x3c
   26394:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26398:	ldr	r3, [r3, #28]
   2639c:	cmp	r3, #0
   263a0:	beq	26418 <__assert_fail@plt+0x151d8>
   263a4:	mov	r3, #0
   263a8:	str	r3, [fp, #-24]	; 0xffffffe8
   263ac:	b	263d8 <__assert_fail@plt+0x15198>
   263b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   263b4:	ldr	r2, [r3, #8]
   263b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   263bc:	lsl	r3, r3, #2
   263c0:	add	r3, r2, r3
   263c4:	mvn	r2, #0
   263c8:	str	r2, [r3]
   263cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   263d0:	add	r3, r3, #1
   263d4:	str	r3, [fp, #-24]	; 0xffffffe8
   263d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   263dc:	ldr	r3, [r3, #28]
   263e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   263e4:	cmp	r2, r3
   263e8:	blt	263b0 <__assert_fail@plt+0x15170>
   263ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   263f0:	ldrb	r3, [r3, #75]	; 0x4b
   263f4:	cmp	r3, #0
   263f8:	beq	26418 <__assert_fail@plt+0x151d8>
   263fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26400:	ldr	r0, [r3, #4]
   26404:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26408:	ldr	r3, [r3, #28]
   2640c:	mov	r2, r3
   26410:	mov	r1, #255	; 0xff
   26414:	bl	1118c <memset@plt>
   26418:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2641c:	ldr	r2, [r3, #28]
   26420:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26424:	str	r2, [r3, #32]
   26428:	b	264e0 <__assert_fail@plt+0x152a0>
   2642c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26430:	ldr	r2, [r3]
   26434:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26438:	ldr	r1, [r3, #24]
   2643c:	ldr	r3, [fp, #-8]
   26440:	add	r3, r1, r3
   26444:	sub	r3, r3, #1
   26448:	add	r3, r2, r3
   2644c:	ldrb	r3, [r3]
   26450:	str	r3, [fp, #-44]	; 0xffffffd4
   26454:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26458:	mov	r2, #0
   2645c:	str	r2, [r3, #32]
   26460:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26464:	ldr	r3, [r3, #64]	; 0x40
   26468:	cmp	r3, #0
   2646c:	beq	26488 <__assert_fail@plt+0x15248>
   26470:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26474:	ldr	r2, [r3, #64]	; 0x40
   26478:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2647c:	add	r3, r2, r3
   26480:	ldrb	r3, [r3]
   26484:	str	r3, [fp, #-44]	; 0xffffffd4
   26488:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2648c:	ldr	r3, [r3, #68]	; 0x44
   26490:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26494:	mov	r0, r3
   26498:	bl	23d74 <__assert_fail@plt+0x12b34>
   2649c:	mov	r3, r0
   264a0:	cmp	r3, #0
   264a4:	bne	264d4 <__assert_fail@plt+0x15294>
   264a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   264ac:	cmp	r3, #10
   264b0:	bne	264cc <__assert_fail@plt+0x1528c>
   264b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   264b8:	ldrb	r3, [r3, #77]	; 0x4d
   264bc:	cmp	r3, #0
   264c0:	beq	264cc <__assert_fail@plt+0x1528c>
   264c4:	mov	r3, #2
   264c8:	b	264d8 <__assert_fail@plt+0x15298>
   264cc:	mov	r3, #0
   264d0:	b	264d8 <__assert_fail@plt+0x15298>
   264d4:	mov	r3, #1
   264d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   264dc:	str	r3, [r2, #60]	; 0x3c
   264e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   264e4:	ldrb	r3, [r3, #75]	; 0x4b
   264e8:	cmp	r3, #0
   264ec:	bne	26508 <__assert_fail@plt+0x152c8>
   264f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   264f4:	ldr	r2, [r3, #4]
   264f8:	ldr	r3, [fp, #-8]
   264fc:	add	r2, r2, r3
   26500:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26504:	str	r2, [r3, #4]
   26508:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2650c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   26510:	str	r2, [r3, #24]
   26514:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26518:	ldr	r2, [r3, #48]	; 0x30
   2651c:	ldr	r3, [fp, #-8]
   26520:	sub	r2, r2, r3
   26524:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26528:	str	r2, [r3, #48]	; 0x30
   2652c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26530:	ldr	r2, [r3, #56]	; 0x38
   26534:	ldr	r3, [fp, #-8]
   26538:	sub	r2, r2, r3
   2653c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26540:	str	r2, [r3, #56]	; 0x38
   26544:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26548:	ldr	r3, [r3, #80]	; 0x50
   2654c:	cmp	r3, #1
   26550:	ble	265a0 <__assert_fail@plt+0x15360>
   26554:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26558:	ldrb	r3, [r3, #72]	; 0x48
   2655c:	cmp	r3, #0
   26560:	beq	26594 <__assert_fail@plt+0x15354>
   26564:	ldr	r0, [fp, #-96]	; 0xffffffa0
   26568:	bl	24aec <__assert_fail@plt+0x138ac>
   2656c:	str	r0, [fp, #-64]	; 0xffffffc0
   26570:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26574:	cmp	r3, #0
   26578:	movne	r3, #1
   2657c:	moveq	r3, #0
   26580:	uxtb	r3, r3
   26584:	cmp	r3, #0
   26588:	beq	265f8 <__assert_fail@plt+0x153b8>
   2658c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26590:	b	26608 <__assert_fail@plt+0x153c8>
   26594:	ldr	r0, [fp, #-96]	; 0xffffffa0
   26598:	bl	24768 <__assert_fail@plt+0x13528>
   2659c:	b	265f8 <__assert_fail@plt+0x153b8>
   265a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   265a4:	ldrb	r3, [r3, #75]	; 0x4b
   265a8:	cmp	r3, #0
   265ac:	beq	265e8 <__assert_fail@plt+0x153a8>
   265b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   265b4:	ldrb	r3, [r3, #72]	; 0x48
   265b8:	cmp	r3, #0
   265bc:	beq	265cc <__assert_fail@plt+0x1538c>
   265c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   265c4:	bl	257d8 <__assert_fail@plt+0x14598>
   265c8:	b	265f8 <__assert_fail@plt+0x153b8>
   265cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   265d0:	ldr	r3, [r3, #64]	; 0x40
   265d4:	cmp	r3, #0
   265d8:	beq	265f8 <__assert_fail@plt+0x153b8>
   265dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   265e0:	bl	258e4 <__assert_fail@plt+0x146a4>
   265e4:	b	265f8 <__assert_fail@plt+0x153b8>
   265e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   265ec:	ldr	r2, [r3, #48]	; 0x30
   265f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   265f4:	str	r2, [r3, #28]
   265f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   265fc:	mov	r2, #0
   26600:	str	r2, [r3, #40]	; 0x28
   26604:	mov	r3, #0
   26608:	mov	r0, r3
   2660c:	sub	sp, fp, #4
   26610:	ldr	fp, [sp]
   26614:	add	sp, sp, #4
   26618:	pop	{pc}		; (ldr pc, [sp], #4)
   2661c:	push	{fp}		; (str fp, [sp, #-4]!)
   26620:	add	fp, sp, #0
   26624:	sub	sp, sp, #20
   26628:	str	r0, [fp, #-16]
   2662c:	str	r1, [fp, #-20]	; 0xffffffec
   26630:	ldr	r3, [fp, #-16]
   26634:	ldrb	r3, [r3, #75]	; 0x4b
   26638:	cmp	r3, #0
   2663c:	moveq	r3, #1
   26640:	movne	r3, #0
   26644:	uxtb	r3, r3
   26648:	cmp	r3, #0
   2664c:	beq	26674 <__assert_fail@plt+0x15434>
   26650:	ldr	r3, [fp, #-16]
   26654:	ldr	r3, [r3, #4]
   26658:	ldr	r2, [fp, #-16]
   2665c:	ldr	r1, [r2, #40]	; 0x28
   26660:	ldr	r2, [fp, #-20]	; 0xffffffec
   26664:	add	r2, r1, r2
   26668:	add	r3, r3, r2
   2666c:	ldrb	r3, [r3]
   26670:	b	267d8 <__assert_fail@plt+0x15598>
   26674:	ldr	r3, [fp, #-16]
   26678:	ldr	r3, [r3, #80]	; 0x50
   2667c:	cmp	r3, #1
   26680:	ble	26728 <__assert_fail@plt+0x154e8>
   26684:	ldr	r3, [fp, #-16]
   26688:	ldr	r2, [r3, #8]
   2668c:	ldr	r3, [fp, #-16]
   26690:	ldr	r1, [r3, #40]	; 0x28
   26694:	ldr	r3, [fp, #-20]	; 0xffffffec
   26698:	add	r3, r1, r3
   2669c:	lsl	r3, r3, #2
   266a0:	add	r3, r2, r3
   266a4:	ldr	r3, [r3]
   266a8:	cmn	r3, #1
   266ac:	beq	26704 <__assert_fail@plt+0x154c4>
   266b0:	ldr	r3, [fp, #-16]
   266b4:	ldr	r2, [r3, #28]
   266b8:	ldr	r3, [fp, #-16]
   266bc:	ldr	r1, [r3, #40]	; 0x28
   266c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   266c4:	add	r3, r1, r3
   266c8:	add	r3, r3, #1
   266cc:	cmp	r2, r3
   266d0:	beq	26728 <__assert_fail@plt+0x154e8>
   266d4:	ldr	r3, [fp, #-16]
   266d8:	ldr	r2, [r3, #8]
   266dc:	ldr	r3, [fp, #-16]
   266e0:	ldr	r1, [r3, #40]	; 0x28
   266e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   266e8:	add	r3, r1, r3
   266ec:	add	r3, r3, #1
   266f0:	lsl	r3, r3, #2
   266f4:	add	r3, r2, r3
   266f8:	ldr	r3, [r3]
   266fc:	cmn	r3, #1
   26700:	bne	26728 <__assert_fail@plt+0x154e8>
   26704:	ldr	r3, [fp, #-16]
   26708:	ldr	r3, [r3, #4]
   2670c:	ldr	r2, [fp, #-16]
   26710:	ldr	r1, [r2, #40]	; 0x28
   26714:	ldr	r2, [fp, #-20]	; 0xffffffec
   26718:	add	r2, r1, r2
   2671c:	add	r3, r3, r2
   26720:	ldrb	r3, [r3]
   26724:	b	267d8 <__assert_fail@plt+0x15598>
   26728:	ldr	r3, [fp, #-16]
   2672c:	ldr	r3, [r3, #40]	; 0x28
   26730:	ldr	r2, [fp, #-20]	; 0xffffffec
   26734:	add	r3, r2, r3
   26738:	str	r3, [fp, #-8]
   2673c:	ldr	r3, [fp, #-16]
   26740:	ldrb	r3, [r3, #76]	; 0x4c
   26744:	cmp	r3, #0
   26748:	beq	26768 <__assert_fail@plt+0x15528>
   2674c:	ldr	r3, [fp, #-16]
   26750:	ldr	r2, [r3, #12]
   26754:	ldr	r3, [fp, #-8]
   26758:	lsl	r3, r3, #2
   2675c:	add	r3, r2, r3
   26760:	ldr	r3, [r3]
   26764:	str	r3, [fp, #-8]
   26768:	ldr	r3, [fp, #-16]
   2676c:	ldr	r3, [r3]
   26770:	ldr	r2, [fp, #-16]
   26774:	ldr	r1, [r2, #24]
   26778:	ldr	r2, [fp, #-8]
   2677c:	add	r2, r1, r2
   26780:	add	r3, r3, r2
   26784:	ldrb	r3, [r3]
   26788:	str	r3, [fp, #-12]
   2678c:	ldr	r3, [fp, #-16]
   26790:	ldrb	r3, [r3, #76]	; 0x4c
   26794:	cmp	r3, #0
   26798:	beq	267d0 <__assert_fail@plt+0x15590>
   2679c:	ldr	r3, [fp, #-12]
   267a0:	bic	r3, r3, #127	; 0x7f
   267a4:	cmp	r3, #0
   267a8:	beq	267d0 <__assert_fail@plt+0x15590>
   267ac:	ldr	r3, [fp, #-16]
   267b0:	ldr	r3, [r3, #4]
   267b4:	ldr	r2, [fp, #-16]
   267b8:	ldr	r1, [r2, #40]	; 0x28
   267bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   267c0:	add	r2, r1, r2
   267c4:	add	r3, r3, r2
   267c8:	ldrb	r3, [r3]
   267cc:	b	267d8 <__assert_fail@plt+0x15598>
   267d0:	ldr	r3, [fp, #-12]
   267d4:	uxtb	r3, r3
   267d8:	mov	r0, r3
   267dc:	add	sp, fp, #0
   267e0:	pop	{fp}		; (ldr fp, [sp], #4)
   267e4:	bx	lr
   267e8:	str	r4, [sp, #-12]!
   267ec:	str	fp, [sp, #4]
   267f0:	str	lr, [sp, #8]
   267f4:	add	fp, sp, #8
   267f8:	sub	sp, sp, #20
   267fc:	str	r0, [fp, #-24]	; 0xffffffe8
   26800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26804:	ldrb	r3, [r3, #75]	; 0x4b
   26808:	cmp	r3, #0
   2680c:	moveq	r3, #1
   26810:	movne	r3, #0
   26814:	uxtb	r3, r3
   26818:	cmp	r3, #0
   2681c:	beq	26848 <__assert_fail@plt+0x15608>
   26820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26824:	ldr	r2, [r3, #4]
   26828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2682c:	ldr	r3, [r3, #40]	; 0x28
   26830:	add	r0, r3, #1
   26834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26838:	str	r0, [r1, #40]	; 0x28
   2683c:	add	r3, r2, r3
   26840:	ldrb	r3, [r3]
   26844:	b	269a0 <__assert_fail@plt+0x15760>
   26848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2684c:	ldrb	r3, [r3, #76]	; 0x4c
   26850:	cmp	r3, #0
   26854:	beq	26970 <__assert_fail@plt+0x15730>
   26858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2685c:	ldr	r2, [r3, #40]	; 0x28
   26860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26864:	ldr	r3, [r3, #28]
   26868:	cmp	r2, r3
   2686c:	beq	268bc <__assert_fail@plt+0x1567c>
   26870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26874:	ldr	r2, [r3, #8]
   26878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2687c:	ldr	r3, [r3, #40]	; 0x28
   26880:	lsl	r3, r3, #2
   26884:	add	r3, r2, r3
   26888:	ldr	r3, [r3]
   2688c:	cmn	r3, #1
   26890:	bne	268bc <__assert_fail@plt+0x1567c>
   26894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26898:	ldr	r2, [r3, #4]
   2689c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268a0:	ldr	r3, [r3, #40]	; 0x28
   268a4:	add	r0, r3, #1
   268a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   268ac:	str	r0, [r1, #40]	; 0x28
   268b0:	add	r3, r2, r3
   268b4:	ldrb	r3, [r3]
   268b8:	b	269a0 <__assert_fail@plt+0x15760>
   268bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268c0:	ldr	r2, [r3, #12]
   268c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268c8:	ldr	r3, [r3, #40]	; 0x28
   268cc:	lsl	r3, r3, #2
   268d0:	add	r3, r2, r3
   268d4:	ldr	r3, [r3]
   268d8:	str	r3, [fp, #-16]
   268dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268e0:	ldr	r3, [r3]
   268e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   268e8:	ldr	r1, [r2, #24]
   268ec:	ldr	r2, [fp, #-16]
   268f0:	add	r2, r1, r2
   268f4:	add	r3, r3, r2
   268f8:	ldrb	r3, [r3]
   268fc:	str	r3, [fp, #-20]	; 0xffffffec
   26900:	ldr	r3, [fp, #-20]	; 0xffffffec
   26904:	bic	r3, r3, #127	; 0x7f
   26908:	cmp	r3, #0
   2690c:	beq	26938 <__assert_fail@plt+0x156f8>
   26910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26914:	ldr	r2, [r3, #4]
   26918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2691c:	ldr	r3, [r3, #40]	; 0x28
   26920:	add	r0, r3, #1
   26924:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26928:	str	r0, [r1, #40]	; 0x28
   2692c:	add	r3, r2, r3
   26930:	ldrb	r3, [r3]
   26934:	b	269a0 <__assert_fail@plt+0x15760>
   26938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2693c:	ldr	r4, [r3, #40]	; 0x28
   26940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26944:	ldr	r3, [r3, #40]	; 0x28
   26948:	mov	r1, r3
   2694c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26950:	bl	24018 <__assert_fail@plt+0x12dd8>
   26954:	mov	r3, r0
   26958:	add	r2, r4, r3
   2695c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26960:	str	r2, [r3, #40]	; 0x28
   26964:	ldr	r3, [fp, #-20]	; 0xffffffec
   26968:	uxtb	r3, r3
   2696c:	b	269a0 <__assert_fail@plt+0x15760>
   26970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26974:	ldr	r2, [r3]
   26978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2697c:	ldr	r1, [r3, #24]
   26980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26984:	ldr	r3, [r3, #40]	; 0x28
   26988:	add	ip, r3, #1
   2698c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26990:	str	ip, [r0, #40]	; 0x28
   26994:	add	r3, r1, r3
   26998:	add	r3, r2, r3
   2699c:	ldrb	r3, [r3]
   269a0:	mov	r0, r3
   269a4:	sub	sp, fp, #8
   269a8:	ldr	r4, [sp]
   269ac:	ldr	fp, [sp, #4]
   269b0:	add	sp, sp, #8
   269b4:	pop	{pc}		; (ldr pc, [sp], #4)
   269b8:	str	fp, [sp, #-8]!
   269bc:	str	lr, [sp, #4]
   269c0:	add	fp, sp, #4
   269c4:	sub	sp, sp, #8
   269c8:	str	r0, [fp, #-8]
   269cc:	ldr	r3, [fp, #-8]
   269d0:	ldr	r3, [r3, #8]
   269d4:	mov	r0, r3
   269d8:	bl	13798 <__assert_fail@plt+0x2558>
   269dc:	ldr	r3, [fp, #-8]
   269e0:	ldr	r3, [r3, #12]
   269e4:	mov	r0, r3
   269e8:	bl	13798 <__assert_fail@plt+0x2558>
   269ec:	ldr	r3, [fp, #-8]
   269f0:	ldrb	r3, [r3, #75]	; 0x4b
   269f4:	cmp	r3, #0
   269f8:	beq	26a0c <__assert_fail@plt+0x157cc>
   269fc:	ldr	r3, [fp, #-8]
   26a00:	ldr	r3, [r3, #4]
   26a04:	mov	r0, r3
   26a08:	bl	13798 <__assert_fail@plt+0x2558>
   26a0c:	nop	{0}
   26a10:	sub	sp, fp, #4
   26a14:	ldr	fp, [sp]
   26a18:	add	sp, sp, #4
   26a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   26a20:	str	fp, [sp, #-8]!
   26a24:	str	lr, [sp, #4]
   26a28:	add	fp, sp, #4
   26a2c:	sub	sp, sp, #32
   26a30:	str	r0, [fp, #-24]	; 0xffffffe8
   26a34:	str	r1, [fp, #-28]	; 0xffffffe4
   26a38:	str	r2, [fp, #-32]	; 0xffffffe0
   26a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26a40:	lsr	r3, r3, #31
   26a44:	uxtb	r3, r3
   26a48:	cmp	r3, #0
   26a4c:	beq	26a5c <__assert_fail@plt+0x1581c>
   26a50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26a54:	ldr	r3, [r3, #60]	; 0x3c
   26a58:	b	26c00 <__assert_fail@plt+0x159c0>
   26a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26a60:	ldr	r3, [r3, #48]	; 0x30
   26a64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26a68:	cmp	r2, r3
   26a6c:	moveq	r3, #1
   26a70:	movne	r3, #0
   26a74:	uxtb	r3, r3
   26a78:	cmp	r3, #0
   26a7c:	beq	26aa0 <__assert_fail@plt+0x15860>
   26a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a84:	and	r3, r3, #2
   26a88:	cmp	r3, #0
   26a8c:	beq	26a98 <__assert_fail@plt+0x15858>
   26a90:	mov	r3, #8
   26a94:	b	26c00 <__assert_fail@plt+0x159c0>
   26a98:	mov	r3, #10
   26a9c:	b	26c00 <__assert_fail@plt+0x159c0>
   26aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26aa4:	ldr	r3, [r3, #80]	; 0x50
   26aa8:	cmp	r3, #1
   26aac:	ble	26b98 <__assert_fail@plt+0x15958>
   26ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26ab4:	str	r3, [fp, #-8]
   26ab8:	b	26ae8 <__assert_fail@plt+0x158a8>
   26abc:	ldr	r3, [fp, #-8]
   26ac0:	cmp	r3, #0
   26ac4:	ldr	r3, [fp, #-8]
   26ac8:	sub	r3, r3, #1
   26acc:	str	r3, [fp, #-8]
   26ad0:	ldr	r3, [fp, #-8]
   26ad4:	cmp	r3, #0
   26ad8:	bge	26ae8 <__assert_fail@plt+0x158a8>
   26adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26ae0:	ldr	r3, [r3, #60]	; 0x3c
   26ae4:	b	26c00 <__assert_fail@plt+0x159c0>
   26ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26aec:	ldr	r2, [r3, #8]
   26af0:	ldr	r3, [fp, #-8]
   26af4:	lsl	r3, r3, #2
   26af8:	add	r3, r2, r3
   26afc:	ldr	r3, [r3]
   26b00:	cmn	r3, #1
   26b04:	beq	26abc <__assert_fail@plt+0x1587c>
   26b08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b0c:	ldr	r2, [r3, #8]
   26b10:	ldr	r3, [fp, #-8]
   26b14:	lsl	r3, r3, #2
   26b18:	add	r3, r2, r3
   26b1c:	ldr	r3, [r3]
   26b20:	str	r3, [fp, #-12]
   26b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b28:	ldrb	r3, [r3, #78]	; 0x4e
   26b2c:	cmp	r3, #0
   26b30:	movne	r3, #1
   26b34:	moveq	r3, #0
   26b38:	uxtb	r3, r3
   26b3c:	cmp	r3, #0
   26b40:	beq	26b6c <__assert_fail@plt+0x1592c>
   26b44:	ldr	r0, [fp, #-12]
   26b48:	bl	11174 <iswalnum@plt>
   26b4c:	mov	r3, r0
   26b50:	cmp	r3, #0
   26b54:	bne	26b64 <__assert_fail@plt+0x15924>
   26b58:	ldr	r3, [fp, #-12]
   26b5c:	cmp	r3, #95	; 0x5f
   26b60:	bne	26b6c <__assert_fail@plt+0x1592c>
   26b64:	mov	r3, #1
   26b68:	b	26c00 <__assert_fail@plt+0x159c0>
   26b6c:	ldr	r3, [fp, #-12]
   26b70:	cmp	r3, #10
   26b74:	bne	26b90 <__assert_fail@plt+0x15950>
   26b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b7c:	ldrb	r3, [r3, #77]	; 0x4d
   26b80:	cmp	r3, #0
   26b84:	beq	26b90 <__assert_fail@plt+0x15950>
   26b88:	mov	r3, #2
   26b8c:	b	26c00 <__assert_fail@plt+0x159c0>
   26b90:	mov	r3, #0
   26b94:	b	26c00 <__assert_fail@plt+0x159c0>
   26b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b9c:	ldr	r2, [r3, #4]
   26ba0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26ba4:	add	r3, r2, r3
   26ba8:	ldrb	r3, [r3]
   26bac:	str	r3, [fp, #-16]
   26bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26bb4:	ldr	r3, [r3, #68]	; 0x44
   26bb8:	ldr	r1, [fp, #-16]
   26bbc:	mov	r0, r3
   26bc0:	bl	23d74 <__assert_fail@plt+0x12b34>
   26bc4:	mov	r3, r0
   26bc8:	cmp	r3, #0
   26bcc:	beq	26bd8 <__assert_fail@plt+0x15998>
   26bd0:	mov	r3, #1
   26bd4:	b	26c00 <__assert_fail@plt+0x159c0>
   26bd8:	ldr	r3, [fp, #-16]
   26bdc:	cmp	r3, #10
   26be0:	bne	26bfc <__assert_fail@plt+0x159bc>
   26be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26be8:	ldrb	r3, [r3, #77]	; 0x4d
   26bec:	cmp	r3, #0
   26bf0:	beq	26bfc <__assert_fail@plt+0x159bc>
   26bf4:	mov	r3, #2
   26bf8:	b	26c00 <__assert_fail@plt+0x159c0>
   26bfc:	mov	r3, #0
   26c00:	mov	r0, r3
   26c04:	sub	sp, fp, #4
   26c08:	ldr	fp, [sp]
   26c0c:	add	sp, sp, #4
   26c10:	pop	{pc}		; (ldr pc, [sp], #4)
   26c14:	str	fp, [sp, #-8]!
   26c18:	str	lr, [sp, #4]
   26c1c:	add	fp, sp, #4
   26c20:	sub	sp, sp, #8
   26c24:	str	r0, [fp, #-8]
   26c28:	str	r1, [fp, #-12]
   26c2c:	ldr	r3, [fp, #-8]
   26c30:	ldr	r2, [fp, #-12]
   26c34:	str	r2, [r3]
   26c38:	ldr	r3, [fp, #-8]
   26c3c:	mov	r2, #0
   26c40:	str	r2, [r3, #4]
   26c44:	ldr	r3, [fp, #-12]
   26c48:	lsl	r3, r3, #2
   26c4c:	mov	r0, r3
   26c50:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   26c54:	mov	r3, r0
   26c58:	mov	r2, r3
   26c5c:	ldr	r3, [fp, #-8]
   26c60:	str	r2, [r3, #8]
   26c64:	ldr	r3, [fp, #-8]
   26c68:	ldr	r3, [r3, #8]
   26c6c:	cmp	r3, #0
   26c70:	moveq	r3, #1
   26c74:	movne	r3, #0
   26c78:	uxtb	r3, r3
   26c7c:	cmp	r3, #0
   26c80:	beq	26c8c <__assert_fail@plt+0x15a4c>
   26c84:	mov	r3, #12
   26c88:	b	26c90 <__assert_fail@plt+0x15a50>
   26c8c:	mov	r3, #0
   26c90:	mov	r0, r3
   26c94:	sub	sp, fp, #4
   26c98:	ldr	fp, [sp]
   26c9c:	add	sp, sp, #4
   26ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   26ca4:	str	fp, [sp, #-8]!
   26ca8:	str	lr, [sp, #4]
   26cac:	add	fp, sp, #4
   26cb0:	sub	sp, sp, #8
   26cb4:	str	r0, [fp, #-8]
   26cb8:	str	r1, [fp, #-12]
   26cbc:	ldr	r3, [fp, #-8]
   26cc0:	mov	r2, #1
   26cc4:	str	r2, [r3]
   26cc8:	ldr	r3, [fp, #-8]
   26ccc:	mov	r2, #1
   26cd0:	str	r2, [r3, #4]
   26cd4:	mov	r0, #4
   26cd8:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   26cdc:	mov	r3, r0
   26ce0:	mov	r2, r3
   26ce4:	ldr	r3, [fp, #-8]
   26ce8:	str	r2, [r3, #8]
   26cec:	ldr	r3, [fp, #-8]
   26cf0:	ldr	r3, [r3, #8]
   26cf4:	cmp	r3, #0
   26cf8:	moveq	r3, #1
   26cfc:	movne	r3, #0
   26d00:	uxtb	r3, r3
   26d04:	cmp	r3, #0
   26d08:	beq	26d30 <__assert_fail@plt+0x15af0>
   26d0c:	ldr	r3, [fp, #-8]
   26d10:	mov	r2, #0
   26d14:	str	r2, [r3, #4]
   26d18:	ldr	r3, [fp, #-8]
   26d1c:	ldr	r2, [r3, #4]
   26d20:	ldr	r3, [fp, #-8]
   26d24:	str	r2, [r3]
   26d28:	mov	r3, #12
   26d2c:	b	26d44 <__assert_fail@plt+0x15b04>
   26d30:	ldr	r3, [fp, #-8]
   26d34:	ldr	r3, [r3, #8]
   26d38:	ldr	r2, [fp, #-12]
   26d3c:	str	r2, [r3]
   26d40:	mov	r3, #0
   26d44:	mov	r0, r3
   26d48:	sub	sp, fp, #4
   26d4c:	ldr	fp, [sp]
   26d50:	add	sp, sp, #4
   26d54:	pop	{pc}		; (ldr pc, [sp], #4)
   26d58:	str	fp, [sp, #-8]!
   26d5c:	str	lr, [sp, #4]
   26d60:	add	fp, sp, #4
   26d64:	sub	sp, sp, #16
   26d68:	str	r0, [fp, #-8]
   26d6c:	str	r1, [fp, #-12]
   26d70:	str	r2, [fp, #-16]
   26d74:	ldr	r3, [fp, #-8]
   26d78:	mov	r2, #2
   26d7c:	str	r2, [r3]
   26d80:	mov	r0, #8
   26d84:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   26d88:	mov	r3, r0
   26d8c:	mov	r2, r3
   26d90:	ldr	r3, [fp, #-8]
   26d94:	str	r2, [r3, #8]
   26d98:	ldr	r3, [fp, #-8]
   26d9c:	ldr	r3, [r3, #8]
   26da0:	cmp	r3, #0
   26da4:	moveq	r3, #1
   26da8:	movne	r3, #0
   26dac:	uxtb	r3, r3
   26db0:	cmp	r3, #0
   26db4:	beq	26dc0 <__assert_fail@plt+0x15b80>
   26db8:	mov	r3, #12
   26dbc:	b	26e5c <__assert_fail@plt+0x15c1c>
   26dc0:	ldr	r2, [fp, #-12]
   26dc4:	ldr	r3, [fp, #-16]
   26dc8:	cmp	r2, r3
   26dcc:	bne	26df0 <__assert_fail@plt+0x15bb0>
   26dd0:	ldr	r3, [fp, #-8]
   26dd4:	mov	r2, #1
   26dd8:	str	r2, [r3, #4]
   26ddc:	ldr	r3, [fp, #-8]
   26de0:	ldr	r3, [r3, #8]
   26de4:	ldr	r2, [fp, #-12]
   26de8:	str	r2, [r3]
   26dec:	b	26e58 <__assert_fail@plt+0x15c18>
   26df0:	ldr	r3, [fp, #-8]
   26df4:	mov	r2, #2
   26df8:	str	r2, [r3, #4]
   26dfc:	ldr	r2, [fp, #-12]
   26e00:	ldr	r3, [fp, #-16]
   26e04:	cmp	r2, r3
   26e08:	bge	26e34 <__assert_fail@plt+0x15bf4>
   26e0c:	ldr	r3, [fp, #-8]
   26e10:	ldr	r3, [r3, #8]
   26e14:	ldr	r2, [fp, #-12]
   26e18:	str	r2, [r3]
   26e1c:	ldr	r3, [fp, #-8]
   26e20:	ldr	r3, [r3, #8]
   26e24:	add	r3, r3, #4
   26e28:	ldr	r2, [fp, #-16]
   26e2c:	str	r2, [r3]
   26e30:	b	26e58 <__assert_fail@plt+0x15c18>
   26e34:	ldr	r3, [fp, #-8]
   26e38:	ldr	r3, [r3, #8]
   26e3c:	ldr	r2, [fp, #-16]
   26e40:	str	r2, [r3]
   26e44:	ldr	r3, [fp, #-8]
   26e48:	ldr	r3, [r3, #8]
   26e4c:	add	r3, r3, #4
   26e50:	ldr	r2, [fp, #-12]
   26e54:	str	r2, [r3]
   26e58:	mov	r3, #0
   26e5c:	mov	r0, r3
   26e60:	sub	sp, fp, #4
   26e64:	ldr	fp, [sp]
   26e68:	add	sp, sp, #4
   26e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   26e70:	str	fp, [sp, #-8]!
   26e74:	str	lr, [sp, #4]
   26e78:	add	fp, sp, #4
   26e7c:	sub	sp, sp, #8
   26e80:	str	r0, [fp, #-8]
   26e84:	str	r1, [fp, #-12]
   26e88:	ldr	r3, [fp, #-12]
   26e8c:	ldr	r2, [r3, #4]
   26e90:	ldr	r3, [fp, #-8]
   26e94:	str	r2, [r3, #4]
   26e98:	ldr	r3, [fp, #-12]
   26e9c:	ldr	r3, [r3, #4]
   26ea0:	cmp	r3, #0
   26ea4:	ble	26f48 <__assert_fail@plt+0x15d08>
   26ea8:	ldr	r3, [fp, #-8]
   26eac:	ldr	r2, [r3, #4]
   26eb0:	ldr	r3, [fp, #-8]
   26eb4:	str	r2, [r3]
   26eb8:	ldr	r3, [fp, #-8]
   26ebc:	ldr	r3, [r3]
   26ec0:	lsl	r3, r3, #2
   26ec4:	mov	r0, r3
   26ec8:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   26ecc:	mov	r3, r0
   26ed0:	mov	r2, r3
   26ed4:	ldr	r3, [fp, #-8]
   26ed8:	str	r2, [r3, #8]
   26edc:	ldr	r3, [fp, #-8]
   26ee0:	ldr	r3, [r3, #8]
   26ee4:	cmp	r3, #0
   26ee8:	moveq	r3, #1
   26eec:	movne	r3, #0
   26ef0:	uxtb	r3, r3
   26ef4:	cmp	r3, #0
   26ef8:	beq	26f20 <__assert_fail@plt+0x15ce0>
   26efc:	ldr	r3, [fp, #-8]
   26f00:	mov	r2, #0
   26f04:	str	r2, [r3, #4]
   26f08:	ldr	r3, [fp, #-8]
   26f0c:	ldr	r2, [r3, #4]
   26f10:	ldr	r3, [fp, #-8]
   26f14:	str	r2, [r3]
   26f18:	mov	r3, #12
   26f1c:	b	26f5c <__assert_fail@plt+0x15d1c>
   26f20:	ldr	r3, [fp, #-8]
   26f24:	ldr	r0, [r3, #8]
   26f28:	ldr	r3, [fp, #-12]
   26f2c:	ldr	r1, [r3, #8]
   26f30:	ldr	r3, [fp, #-12]
   26f34:	ldr	r3, [r3, #4]
   26f38:	lsl	r3, r3, #2
   26f3c:	mov	r2, r3
   26f40:	bl	10fe8 <memcpy@plt>
   26f44:	b	26f58 <__assert_fail@plt+0x15d18>
   26f48:	mov	r2, #12
   26f4c:	mov	r1, #0
   26f50:	ldr	r0, [fp, #-8]
   26f54:	bl	1118c <memset@plt>
   26f58:	mov	r3, #0
   26f5c:	mov	r0, r3
   26f60:	sub	sp, fp, #4
   26f64:	ldr	fp, [sp]
   26f68:	add	sp, sp, #4
   26f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   26f70:	str	fp, [sp, #-8]!
   26f74:	str	lr, [sp, #4]
   26f78:	add	fp, sp, #4
   26f7c:	sub	sp, sp, #48	; 0x30
   26f80:	str	r0, [fp, #-40]	; 0xffffffd8
   26f84:	str	r1, [fp, #-44]	; 0xffffffd4
   26f88:	str	r2, [fp, #-48]	; 0xffffffd0
   26f8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26f90:	ldr	r3, [r3, #4]
   26f94:	cmp	r3, #0
   26f98:	beq	26fac <__assert_fail@plt+0x15d6c>
   26f9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26fa0:	ldr	r3, [r3, #4]
   26fa4:	cmp	r3, #0
   26fa8:	bne	26fb4 <__assert_fail@plt+0x15d74>
   26fac:	mov	r3, #0
   26fb0:	b	27400 <__assert_fail@plt+0x161c0>
   26fb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26fb8:	ldr	r2, [r3, #4]
   26fbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26fc0:	ldr	r3, [r3, #4]
   26fc4:	add	r2, r2, r3
   26fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26fcc:	ldr	r3, [r3, #4]
   26fd0:	add	r2, r2, r3
   26fd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26fd8:	ldr	r3, [r3]
   26fdc:	cmp	r2, r3
   26fe0:	ble	27064 <__assert_fail@plt+0x15e24>
   26fe4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26fe8:	ldr	r2, [r3, #4]
   26fec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26ff0:	ldr	r3, [r3, #4]
   26ff4:	add	r2, r2, r3
   26ff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26ffc:	ldr	r3, [r3]
   27000:	add	r3, r2, r3
   27004:	str	r3, [fp, #-32]	; 0xffffffe0
   27008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2700c:	ldr	r2, [r3, #8]
   27010:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27014:	lsl	r3, r3, #2
   27018:	mov	r1, r3
   2701c:	mov	r0, r2
   27020:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   27024:	str	r0, [fp, #-36]	; 0xffffffdc
   27028:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2702c:	cmp	r3, #0
   27030:	moveq	r3, #1
   27034:	movne	r3, #0
   27038:	uxtb	r3, r3
   2703c:	cmp	r3, #0
   27040:	beq	2704c <__assert_fail@plt+0x15e0c>
   27044:	mov	r3, #12
   27048:	b	27400 <__assert_fail@plt+0x161c0>
   2704c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27050:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27054:	str	r2, [r3, #8]
   27058:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2705c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27060:	str	r2, [r3]
   27064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27068:	ldr	r2, [r3, #4]
   2706c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27070:	ldr	r3, [r3, #4]
   27074:	add	r2, r2, r3
   27078:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2707c:	ldr	r3, [r3, #4]
   27080:	add	r3, r2, r3
   27084:	str	r3, [fp, #-28]	; 0xffffffe4
   27088:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2708c:	ldr	r3, [r3, #4]
   27090:	sub	r3, r3, #1
   27094:	str	r3, [fp, #-8]
   27098:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2709c:	ldr	r3, [r3, #4]
   270a0:	sub	r3, r3, #1
   270a4:	str	r3, [fp, #-12]
   270a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   270ac:	ldr	r3, [r3, #4]
   270b0:	sub	r3, r3, #1
   270b4:	str	r3, [fp, #-20]	; 0xffffffec
   270b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   270bc:	ldr	r2, [r3, #8]
   270c0:	ldr	r3, [fp, #-8]
   270c4:	lsl	r3, r3, #2
   270c8:	add	r3, r2, r3
   270cc:	ldr	r2, [r3]
   270d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   270d4:	ldr	r1, [r3, #8]
   270d8:	ldr	r3, [fp, #-12]
   270dc:	lsl	r3, r3, #2
   270e0:	add	r3, r1, r3
   270e4:	ldr	r3, [r3]
   270e8:	cmp	r2, r3
   270ec:	bne	271f8 <__assert_fail@plt+0x15fb8>
   270f0:	b	27100 <__assert_fail@plt+0x15ec0>
   270f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   270f8:	sub	r3, r3, #1
   270fc:	str	r3, [fp, #-20]	; 0xffffffec
   27100:	ldr	r3, [fp, #-20]	; 0xffffffec
   27104:	cmp	r3, #0
   27108:	blt	27144 <__assert_fail@plt+0x15f04>
   2710c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27110:	ldr	r2, [r3, #8]
   27114:	ldr	r3, [fp, #-20]	; 0xffffffec
   27118:	lsl	r3, r3, #2
   2711c:	add	r3, r2, r3
   27120:	ldr	r2, [r3]
   27124:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27128:	ldr	r1, [r3, #8]
   2712c:	ldr	r3, [fp, #-8]
   27130:	lsl	r3, r3, #2
   27134:	add	r3, r1, r3
   27138:	ldr	r3, [r3]
   2713c:	cmp	r2, r3
   27140:	bgt	270f4 <__assert_fail@plt+0x15eb4>
   27144:	ldr	r3, [fp, #-20]	; 0xffffffec
   27148:	cmp	r3, #0
   2714c:	blt	27188 <__assert_fail@plt+0x15f48>
   27150:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27154:	ldr	r2, [r3, #8]
   27158:	ldr	r3, [fp, #-20]	; 0xffffffec
   2715c:	lsl	r3, r3, #2
   27160:	add	r3, r2, r3
   27164:	ldr	r2, [r3]
   27168:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2716c:	ldr	r1, [r3, #8]
   27170:	ldr	r3, [fp, #-8]
   27174:	lsl	r3, r3, #2
   27178:	add	r3, r1, r3
   2717c:	ldr	r3, [r3]
   27180:	cmp	r2, r3
   27184:	beq	271c4 <__assert_fail@plt+0x15f84>
   27188:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2718c:	ldr	r2, [r3, #8]
   27190:	ldr	r3, [fp, #-8]
   27194:	lsl	r3, r3, #2
   27198:	add	r2, r2, r3
   2719c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   271a0:	ldr	r1, [r3, #8]
   271a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   271a8:	sub	r3, r3, #1
   271ac:	str	r3, [fp, #-28]	; 0xffffffe4
   271b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   271b4:	lsl	r3, r3, #2
   271b8:	add	r3, r1, r3
   271bc:	ldr	r2, [r2]
   271c0:	str	r2, [r3]
   271c4:	ldr	r3, [fp, #-8]
   271c8:	sub	r3, r3, #1
   271cc:	str	r3, [fp, #-8]
   271d0:	ldr	r3, [fp, #-8]
   271d4:	cmp	r3, #0
   271d8:	blt	2726c <__assert_fail@plt+0x1602c>
   271dc:	ldr	r3, [fp, #-12]
   271e0:	sub	r3, r3, #1
   271e4:	str	r3, [fp, #-12]
   271e8:	ldr	r3, [fp, #-12]
   271ec:	cmp	r3, #0
   271f0:	blt	2726c <__assert_fail@plt+0x1602c>
   271f4:	b	270b8 <__assert_fail@plt+0x15e78>
   271f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   271fc:	ldr	r2, [r3, #8]
   27200:	ldr	r3, [fp, #-8]
   27204:	lsl	r3, r3, #2
   27208:	add	r3, r2, r3
   2720c:	ldr	r2, [r3]
   27210:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27214:	ldr	r1, [r3, #8]
   27218:	ldr	r3, [fp, #-12]
   2721c:	lsl	r3, r3, #2
   27220:	add	r3, r1, r3
   27224:	ldr	r3, [r3]
   27228:	cmp	r2, r3
   2722c:	bge	2724c <__assert_fail@plt+0x1600c>
   27230:	ldr	r3, [fp, #-12]
   27234:	sub	r3, r3, #1
   27238:	str	r3, [fp, #-12]
   2723c:	ldr	r3, [fp, #-12]
   27240:	cmp	r3, #0
   27244:	bge	270b8 <__assert_fail@plt+0x15e78>
   27248:	b	2726c <__assert_fail@plt+0x1602c>
   2724c:	ldr	r3, [fp, #-8]
   27250:	sub	r3, r3, #1
   27254:	str	r3, [fp, #-8]
   27258:	ldr	r3, [fp, #-8]
   2725c:	cmp	r3, #0
   27260:	blt	27268 <__assert_fail@plt+0x16028>
   27264:	b	270b8 <__assert_fail@plt+0x15e78>
   27268:	nop	{0}
   2726c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27270:	ldr	r3, [r3, #4]
   27274:	sub	r3, r3, #1
   27278:	str	r3, [fp, #-20]	; 0xffffffec
   2727c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27280:	ldr	r2, [r3, #4]
   27284:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27288:	ldr	r3, [r3, #4]
   2728c:	add	r2, r2, r3
   27290:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27294:	ldr	r3, [r3, #4]
   27298:	add	r3, r2, r3
   2729c:	sub	r3, r3, #1
   272a0:	str	r3, [fp, #-16]
   272a4:	ldr	r2, [fp, #-16]
   272a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   272ac:	sub	r3, r2, r3
   272b0:	add	r3, r3, #1
   272b4:	str	r3, [fp, #-24]	; 0xffffffe8
   272b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   272bc:	ldr	r2, [r3, #4]
   272c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   272c4:	add	r2, r2, r3
   272c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   272cc:	str	r2, [r3, #4]
   272d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   272d4:	cmp	r3, #0
   272d8:	ble	273d0 <__assert_fail@plt+0x16190>
   272dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   272e0:	cmp	r3, #0
   272e4:	blt	273d0 <__assert_fail@plt+0x16190>
   272e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   272ec:	ldr	r2, [r3, #8]
   272f0:	ldr	r3, [fp, #-16]
   272f4:	lsl	r3, r3, #2
   272f8:	add	r3, r2, r3
   272fc:	ldr	r2, [r3]
   27300:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27304:	ldr	r1, [r3, #8]
   27308:	ldr	r3, [fp, #-20]	; 0xffffffec
   2730c:	lsl	r3, r3, #2
   27310:	add	r3, r1, r3
   27314:	ldr	r3, [r3]
   27318:	cmp	r2, r3
   2731c:	ble	27378 <__assert_fail@plt+0x16138>
   27320:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27324:	ldr	r2, [r3, #8]
   27328:	ldr	r3, [fp, #-16]
   2732c:	sub	r1, r3, #1
   27330:	str	r1, [fp, #-16]
   27334:	lsl	r3, r3, #2
   27338:	add	r2, r2, r3
   2733c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27340:	ldr	r1, [r3, #8]
   27344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27348:	sub	r0, r3, #1
   2734c:	str	r0, [fp, #-24]	; 0xffffffe8
   27350:	ldr	r0, [fp, #-20]	; 0xffffffec
   27354:	add	r3, r3, r0
   27358:	lsl	r3, r3, #2
   2735c:	add	r3, r1, r3
   27360:	ldr	r2, [r2]
   27364:	str	r2, [r3]
   27368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2736c:	cmp	r3, #0
   27370:	bne	272e8 <__assert_fail@plt+0x160a8>
   27374:	b	273d0 <__assert_fail@plt+0x16190>
   27378:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2737c:	ldr	r2, [r3, #8]
   27380:	ldr	r3, [fp, #-20]	; 0xffffffec
   27384:	lsl	r3, r3, #2
   27388:	add	r2, r2, r3
   2738c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27390:	ldr	r1, [r3, #8]
   27394:	ldr	r0, [fp, #-20]	; 0xffffffec
   27398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2739c:	add	r3, r0, r3
   273a0:	lsl	r3, r3, #2
   273a4:	add	r3, r1, r3
   273a8:	ldr	r2, [r2]
   273ac:	str	r2, [r3]
   273b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   273b4:	sub	r3, r3, #1
   273b8:	str	r3, [fp, #-20]	; 0xffffffec
   273bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   273c0:	cmp	r3, #0
   273c4:	blt	273cc <__assert_fail@plt+0x1618c>
   273c8:	b	272e8 <__assert_fail@plt+0x160a8>
   273cc:	nop	{0}
   273d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   273d4:	ldr	r0, [r3, #8]
   273d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   273dc:	ldr	r2, [r3, #8]
   273e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   273e4:	lsl	r3, r3, #2
   273e8:	add	r1, r2, r3
   273ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   273f0:	lsl	r3, r3, #2
   273f4:	mov	r2, r3
   273f8:	bl	10fe8 <memcpy@plt>
   273fc:	mov	r3, #0
   27400:	mov	r0, r3
   27404:	sub	sp, fp, #4
   27408:	ldr	fp, [sp]
   2740c:	add	sp, sp, #4
   27410:	pop	{pc}		; (ldr pc, [sp], #4)
   27414:	str	fp, [sp, #-8]!
   27418:	str	lr, [sp, #4]
   2741c:	add	fp, sp, #4
   27420:	sub	sp, sp, #32
   27424:	str	r0, [fp, #-24]	; 0xffffffe8
   27428:	str	r1, [fp, #-28]	; 0xffffffe4
   2742c:	str	r2, [fp, #-32]	; 0xffffffe0
   27430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27434:	cmp	r3, #0
   27438:	beq	274d0 <__assert_fail@plt+0x16290>
   2743c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27440:	ldr	r3, [r3, #4]
   27444:	cmp	r3, #0
   27448:	ble	274d0 <__assert_fail@plt+0x16290>
   2744c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27450:	cmp	r3, #0
   27454:	beq	274d0 <__assert_fail@plt+0x16290>
   27458:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2745c:	ldr	r3, [r3, #4]
   27460:	cmp	r3, #0
   27464:	ble	274d0 <__assert_fail@plt+0x16290>
   27468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2746c:	ldr	r2, [r3, #4]
   27470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27474:	ldr	r3, [r3, #4]
   27478:	add	r2, r2, r3
   2747c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27480:	str	r2, [r3]
   27484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27488:	ldr	r3, [r3]
   2748c:	lsl	r3, r3, #2
   27490:	mov	r0, r3
   27494:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   27498:	mov	r3, r0
   2749c:	mov	r2, r3
   274a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   274a4:	str	r2, [r3, #8]
   274a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   274ac:	ldr	r3, [r3, #8]
   274b0:	cmp	r3, #0
   274b4:	moveq	r3, #1
   274b8:	movne	r3, #0
   274bc:	uxtb	r3, r3
   274c0:	cmp	r3, #0
   274c4:	beq	27548 <__assert_fail@plt+0x16308>
   274c8:	mov	r3, #12
   274cc:	b	27788 <__assert_fail@plt+0x16548>
   274d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   274d4:	cmp	r3, #0
   274d8:	beq	27500 <__assert_fail@plt+0x162c0>
   274dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   274e0:	ldr	r3, [r3, #4]
   274e4:	cmp	r3, #0
   274e8:	ble	27500 <__assert_fail@plt+0x162c0>
   274ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   274f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   274f4:	bl	26e70 <__assert_fail@plt+0x15c30>
   274f8:	mov	r3, r0
   274fc:	b	27788 <__assert_fail@plt+0x16548>
   27500:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27504:	cmp	r3, #0
   27508:	beq	27530 <__assert_fail@plt+0x162f0>
   2750c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27510:	ldr	r3, [r3, #4]
   27514:	cmp	r3, #0
   27518:	ble	27530 <__assert_fail@plt+0x162f0>
   2751c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27524:	bl	26e70 <__assert_fail@plt+0x15c30>
   27528:	mov	r3, r0
   2752c:	b	27788 <__assert_fail@plt+0x16548>
   27530:	mov	r2, #12
   27534:	mov	r1, #0
   27538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2753c:	bl	1118c <memset@plt>
   27540:	mov	r3, #0
   27544:	b	27788 <__assert_fail@plt+0x16548>
   27548:	mov	r3, #0
   2754c:	str	r3, [fp, #-16]
   27550:	ldr	r3, [fp, #-16]
   27554:	str	r3, [fp, #-12]
   27558:	ldr	r3, [fp, #-12]
   2755c:	str	r3, [fp, #-8]
   27560:	b	27664 <__assert_fail@plt+0x16424>
   27564:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27568:	ldr	r2, [r3, #8]
   2756c:	ldr	r3, [fp, #-8]
   27570:	lsl	r3, r3, #2
   27574:	add	r3, r2, r3
   27578:	ldr	r2, [r3]
   2757c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27580:	ldr	r1, [r3, #8]
   27584:	ldr	r3, [fp, #-12]
   27588:	lsl	r3, r3, #2
   2758c:	add	r3, r1, r3
   27590:	ldr	r3, [r3]
   27594:	cmp	r2, r3
   27598:	ble	275e0 <__assert_fail@plt+0x163a0>
   2759c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   275a0:	ldr	r2, [r3, #8]
   275a4:	ldr	r3, [fp, #-12]
   275a8:	add	r1, r3, #1
   275ac:	str	r1, [fp, #-12]
   275b0:	lsl	r3, r3, #2
   275b4:	add	r2, r2, r3
   275b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   275bc:	ldr	r1, [r3, #8]
   275c0:	ldr	r3, [fp, #-16]
   275c4:	add	r0, r3, #1
   275c8:	str	r0, [fp, #-16]
   275cc:	lsl	r3, r3, #2
   275d0:	add	r3, r1, r3
   275d4:	ldr	r2, [r2]
   275d8:	str	r2, [r3]
   275dc:	b	27664 <__assert_fail@plt+0x16424>
   275e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   275e4:	ldr	r2, [r3, #8]
   275e8:	ldr	r3, [fp, #-8]
   275ec:	lsl	r3, r3, #2
   275f0:	add	r3, r2, r3
   275f4:	ldr	r2, [r3]
   275f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   275fc:	ldr	r1, [r3, #8]
   27600:	ldr	r3, [fp, #-12]
   27604:	lsl	r3, r3, #2
   27608:	add	r3, r1, r3
   2760c:	ldr	r3, [r3]
   27610:	cmp	r2, r3
   27614:	bne	27624 <__assert_fail@plt+0x163e4>
   27618:	ldr	r3, [fp, #-12]
   2761c:	add	r3, r3, #1
   27620:	str	r3, [fp, #-12]
   27624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27628:	ldr	r2, [r3, #8]
   2762c:	ldr	r3, [fp, #-8]
   27630:	add	r1, r3, #1
   27634:	str	r1, [fp, #-8]
   27638:	lsl	r3, r3, #2
   2763c:	add	r2, r2, r3
   27640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27644:	ldr	r1, [r3, #8]
   27648:	ldr	r3, [fp, #-16]
   2764c:	add	r0, r3, #1
   27650:	str	r0, [fp, #-16]
   27654:	lsl	r3, r3, #2
   27658:	add	r3, r1, r3
   2765c:	ldr	r2, [r2]
   27660:	str	r2, [r3]
   27664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27668:	ldr	r3, [r3, #4]
   2766c:	ldr	r2, [fp, #-8]
   27670:	cmp	r2, r3
   27674:	bge	2768c <__assert_fail@plt+0x1644c>
   27678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2767c:	ldr	r3, [r3, #4]
   27680:	ldr	r2, [fp, #-12]
   27684:	cmp	r2, r3
   27688:	blt	27564 <__assert_fail@plt+0x16324>
   2768c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27690:	ldr	r3, [r3, #4]
   27694:	ldr	r2, [fp, #-8]
   27698:	cmp	r2, r3
   2769c:	bge	27704 <__assert_fail@plt+0x164c4>
   276a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   276a4:	ldr	r2, [r3, #8]
   276a8:	ldr	r3, [fp, #-16]
   276ac:	lsl	r3, r3, #2
   276b0:	add	r0, r2, r3
   276b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   276b8:	ldr	r2, [r3, #8]
   276bc:	ldr	r3, [fp, #-8]
   276c0:	lsl	r3, r3, #2
   276c4:	add	r1, r2, r3
   276c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   276cc:	ldr	r2, [r3, #4]
   276d0:	ldr	r3, [fp, #-8]
   276d4:	sub	r3, r2, r3
   276d8:	lsl	r3, r3, #2
   276dc:	mov	r2, r3
   276e0:	bl	10fe8 <memcpy@plt>
   276e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   276e8:	ldr	r2, [r3, #4]
   276ec:	ldr	r3, [fp, #-8]
   276f0:	sub	r3, r2, r3
   276f4:	ldr	r2, [fp, #-16]
   276f8:	add	r3, r2, r3
   276fc:	str	r3, [fp, #-16]
   27700:	b	27778 <__assert_fail@plt+0x16538>
   27704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27708:	ldr	r3, [r3, #4]
   2770c:	ldr	r2, [fp, #-12]
   27710:	cmp	r2, r3
   27714:	bge	27778 <__assert_fail@plt+0x16538>
   27718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2771c:	ldr	r2, [r3, #8]
   27720:	ldr	r3, [fp, #-16]
   27724:	lsl	r3, r3, #2
   27728:	add	r0, r2, r3
   2772c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27730:	ldr	r2, [r3, #8]
   27734:	ldr	r3, [fp, #-12]
   27738:	lsl	r3, r3, #2
   2773c:	add	r1, r2, r3
   27740:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27744:	ldr	r2, [r3, #4]
   27748:	ldr	r3, [fp, #-12]
   2774c:	sub	r3, r2, r3
   27750:	lsl	r3, r3, #2
   27754:	mov	r2, r3
   27758:	bl	10fe8 <memcpy@plt>
   2775c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27760:	ldr	r2, [r3, #4]
   27764:	ldr	r3, [fp, #-12]
   27768:	sub	r3, r2, r3
   2776c:	ldr	r2, [fp, #-16]
   27770:	add	r3, r2, r3
   27774:	str	r3, [fp, #-16]
   27778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2777c:	ldr	r2, [fp, #-16]
   27780:	str	r2, [r3, #4]
   27784:	mov	r3, #0
   27788:	mov	r0, r3
   2778c:	sub	sp, fp, #4
   27790:	ldr	fp, [sp]
   27794:	add	sp, sp, #4
   27798:	pop	{pc}		; (ldr pc, [sp], #4)
   2779c:	str	fp, [sp, #-8]!
   277a0:	str	lr, [sp, #4]
   277a4:	add	fp, sp, #4
   277a8:	sub	sp, sp, #32
   277ac:	str	r0, [fp, #-32]	; 0xffffffe0
   277b0:	str	r1, [fp, #-36]	; 0xffffffdc
   277b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   277b8:	cmp	r3, #0
   277bc:	beq	277d0 <__assert_fail@plt+0x16590>
   277c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   277c4:	ldr	r3, [r3, #4]
   277c8:	cmp	r3, #0
   277cc:	bne	277d8 <__assert_fail@plt+0x16598>
   277d0:	mov	r3, #0
   277d4:	b	27be8 <__assert_fail@plt+0x169a8>
   277d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   277dc:	ldr	r2, [r3]
   277e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   277e4:	ldr	r3, [r3, #4]
   277e8:	lsl	r1, r3, #1
   277ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   277f0:	ldr	r3, [r3, #4]
   277f4:	add	r3, r1, r3
   277f8:	cmp	r2, r3
   277fc:	bge	27878 <__assert_fail@plt+0x16638>
   27800:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27804:	ldr	r2, [r3, #4]
   27808:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2780c:	ldr	r3, [r3]
   27810:	add	r3, r2, r3
   27814:	lsl	r3, r3, #1
   27818:	str	r3, [fp, #-24]	; 0xffffffe8
   2781c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27820:	ldr	r2, [r3, #8]
   27824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27828:	lsl	r3, r3, #2
   2782c:	mov	r1, r3
   27830:	mov	r0, r2
   27834:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   27838:	str	r0, [fp, #-28]	; 0xffffffe4
   2783c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27840:	cmp	r3, #0
   27844:	moveq	r3, #1
   27848:	movne	r3, #0
   2784c:	uxtb	r3, r3
   27850:	cmp	r3, #0
   27854:	beq	27860 <__assert_fail@plt+0x16620>
   27858:	mov	r3, #12
   2785c:	b	27be8 <__assert_fail@plt+0x169a8>
   27860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27868:	str	r2, [r3, #8]
   2786c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27870:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27874:	str	r2, [r3]
   27878:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2787c:	ldr	r3, [r3, #4]
   27880:	cmp	r3, #0
   27884:	moveq	r3, #1
   27888:	movne	r3, #0
   2788c:	uxtb	r3, r3
   27890:	cmp	r3, #0
   27894:	beq	278e0 <__assert_fail@plt+0x166a0>
   27898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2789c:	ldr	r3, [r3, #8]
   278a0:	cmp	r3, #0
   278a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   278a8:	ldr	r2, [r3, #4]
   278ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   278b0:	str	r2, [r3, #4]
   278b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   278b8:	ldr	r0, [r3, #8]
   278bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   278c0:	ldr	r1, [r3, #8]
   278c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   278c8:	ldr	r3, [r3, #4]
   278cc:	lsl	r3, r3, #2
   278d0:	mov	r2, r3
   278d4:	bl	10fe8 <memcpy@plt>
   278d8:	mov	r3, #0
   278dc:	b	27be8 <__assert_fail@plt+0x169a8>
   278e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   278e4:	ldr	r2, [r3, #4]
   278e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   278ec:	ldr	r3, [r3, #4]
   278f0:	lsl	r3, r3, #1
   278f4:	add	r3, r2, r3
   278f8:	str	r3, [fp, #-16]
   278fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27900:	ldr	r3, [r3, #4]
   27904:	sub	r3, r3, #1
   27908:	str	r3, [fp, #-8]
   2790c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27910:	ldr	r3, [r3, #4]
   27914:	sub	r3, r3, #1
   27918:	str	r3, [fp, #-12]
   2791c:	b	27a00 <__assert_fail@plt+0x167c0>
   27920:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27924:	ldr	r2, [r3, #8]
   27928:	ldr	r3, [fp, #-12]
   2792c:	lsl	r3, r3, #2
   27930:	add	r3, r2, r3
   27934:	ldr	r2, [r3]
   27938:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2793c:	ldr	r1, [r3, #8]
   27940:	ldr	r3, [fp, #-8]
   27944:	lsl	r3, r3, #2
   27948:	add	r3, r1, r3
   2794c:	ldr	r3, [r3]
   27950:	cmp	r2, r3
   27954:	bne	27974 <__assert_fail@plt+0x16734>
   27958:	ldr	r3, [fp, #-8]
   2795c:	sub	r3, r3, #1
   27960:	str	r3, [fp, #-8]
   27964:	ldr	r3, [fp, #-12]
   27968:	sub	r3, r3, #1
   2796c:	str	r3, [fp, #-12]
   27970:	b	27a00 <__assert_fail@plt+0x167c0>
   27974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27978:	ldr	r2, [r3, #8]
   2797c:	ldr	r3, [fp, #-12]
   27980:	lsl	r3, r3, #2
   27984:	add	r3, r2, r3
   27988:	ldr	r2, [r3]
   2798c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27990:	ldr	r1, [r3, #8]
   27994:	ldr	r3, [fp, #-8]
   27998:	lsl	r3, r3, #2
   2799c:	add	r3, r1, r3
   279a0:	ldr	r3, [r3]
   279a4:	cmp	r2, r3
   279a8:	bge	279f4 <__assert_fail@plt+0x167b4>
   279ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   279b0:	ldr	r2, [r3, #8]
   279b4:	ldr	r3, [fp, #-8]
   279b8:	sub	r1, r3, #1
   279bc:	str	r1, [fp, #-8]
   279c0:	lsl	r3, r3, #2
   279c4:	add	r2, r2, r3
   279c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   279cc:	ldr	r1, [r3, #8]
   279d0:	ldr	r3, [fp, #-16]
   279d4:	sub	r3, r3, #1
   279d8:	str	r3, [fp, #-16]
   279dc:	ldr	r3, [fp, #-16]
   279e0:	lsl	r3, r3, #2
   279e4:	add	r3, r1, r3
   279e8:	ldr	r2, [r2]
   279ec:	str	r2, [r3]
   279f0:	b	27a00 <__assert_fail@plt+0x167c0>
   279f4:	ldr	r3, [fp, #-12]
   279f8:	sub	r3, r3, #1
   279fc:	str	r3, [fp, #-12]
   27a00:	ldr	r3, [fp, #-8]
   27a04:	cmp	r3, #0
   27a08:	blt	27a18 <__assert_fail@plt+0x167d8>
   27a0c:	ldr	r3, [fp, #-12]
   27a10:	cmp	r3, #0
   27a14:	bge	27920 <__assert_fail@plt+0x166e0>
   27a18:	ldr	r3, [fp, #-8]
   27a1c:	cmp	r3, #0
   27a20:	blt	27a68 <__assert_fail@plt+0x16828>
   27a24:	ldr	r3, [fp, #-8]
   27a28:	add	r3, r3, #1
   27a2c:	ldr	r2, [fp, #-16]
   27a30:	sub	r3, r2, r3
   27a34:	str	r3, [fp, #-16]
   27a38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a3c:	ldr	r2, [r3, #8]
   27a40:	ldr	r3, [fp, #-16]
   27a44:	lsl	r3, r3, #2
   27a48:	add	r0, r2, r3
   27a4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27a50:	ldr	r1, [r3, #8]
   27a54:	ldr	r3, [fp, #-8]
   27a58:	add	r3, r3, #1
   27a5c:	lsl	r3, r3, #2
   27a60:	mov	r2, r3
   27a64:	bl	10fe8 <memcpy@plt>
   27a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a6c:	ldr	r3, [r3, #4]
   27a70:	sub	r3, r3, #1
   27a74:	str	r3, [fp, #-12]
   27a78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a7c:	ldr	r2, [r3, #4]
   27a80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27a84:	ldr	r3, [r3, #4]
   27a88:	lsl	r3, r3, #1
   27a8c:	add	r3, r2, r3
   27a90:	sub	r3, r3, #1
   27a94:	str	r3, [fp, #-8]
   27a98:	ldr	r2, [fp, #-8]
   27a9c:	ldr	r3, [fp, #-16]
   27aa0:	sub	r3, r2, r3
   27aa4:	add	r3, r3, #1
   27aa8:	str	r3, [fp, #-20]	; 0xffffffec
   27aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   27ab0:	cmp	r3, #0
   27ab4:	bne	27ac0 <__assert_fail@plt+0x16880>
   27ab8:	mov	r3, #0
   27abc:	b	27be8 <__assert_fail@plt+0x169a8>
   27ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ac4:	ldr	r2, [r3, #4]
   27ac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   27acc:	add	r2, r2, r3
   27ad0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ad4:	str	r2, [r3, #4]
   27ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27adc:	ldr	r2, [r3, #8]
   27ae0:	ldr	r3, [fp, #-8]
   27ae4:	lsl	r3, r3, #2
   27ae8:	add	r3, r2, r3
   27aec:	ldr	r2, [r3]
   27af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27af4:	ldr	r1, [r3, #8]
   27af8:	ldr	r3, [fp, #-12]
   27afc:	lsl	r3, r3, #2
   27b00:	add	r3, r1, r3
   27b04:	ldr	r3, [r3]
   27b08:	cmp	r2, r3
   27b0c:	ble	27b68 <__assert_fail@plt+0x16928>
   27b10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b14:	ldr	r2, [r3, #8]
   27b18:	ldr	r3, [fp, #-8]
   27b1c:	sub	r1, r3, #1
   27b20:	str	r1, [fp, #-8]
   27b24:	lsl	r3, r3, #2
   27b28:	add	r2, r2, r3
   27b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b30:	ldr	r1, [r3, #8]
   27b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b38:	sub	r0, r3, #1
   27b3c:	str	r0, [fp, #-20]	; 0xffffffec
   27b40:	ldr	r0, [fp, #-12]
   27b44:	add	r3, r3, r0
   27b48:	lsl	r3, r3, #2
   27b4c:	add	r3, r1, r3
   27b50:	ldr	r2, [r2]
   27b54:	str	r2, [r3]
   27b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b5c:	cmp	r3, #0
   27b60:	bne	27ad8 <__assert_fail@plt+0x16898>
   27b64:	b	27be4 <__assert_fail@plt+0x169a4>
   27b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b6c:	ldr	r2, [r3, #8]
   27b70:	ldr	r3, [fp, #-12]
   27b74:	lsl	r3, r3, #2
   27b78:	add	r2, r2, r3
   27b7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b80:	ldr	r1, [r3, #8]
   27b84:	ldr	r0, [fp, #-12]
   27b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b8c:	add	r3, r0, r3
   27b90:	lsl	r3, r3, #2
   27b94:	add	r3, r1, r3
   27b98:	ldr	r2, [r2]
   27b9c:	str	r2, [r3]
   27ba0:	ldr	r3, [fp, #-12]
   27ba4:	sub	r3, r3, #1
   27ba8:	str	r3, [fp, #-12]
   27bac:	ldr	r3, [fp, #-12]
   27bb0:	cmp	r3, #0
   27bb4:	bge	27ad8 <__assert_fail@plt+0x16898>
   27bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27bbc:	ldr	r0, [r3, #8]
   27bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27bc4:	ldr	r2, [r3, #8]
   27bc8:	ldr	r3, [fp, #-16]
   27bcc:	lsl	r3, r3, #2
   27bd0:	add	r1, r2, r3
   27bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27bd8:	lsl	r3, r3, #2
   27bdc:	mov	r2, r3
   27be0:	bl	10fe8 <memcpy@plt>
   27be4:	mov	r3, #0
   27be8:	mov	r0, r3
   27bec:	sub	sp, fp, #4
   27bf0:	ldr	fp, [sp]
   27bf4:	add	sp, sp, #4
   27bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   27bfc:	str	fp, [sp, #-8]!
   27c00:	str	lr, [sp, #4]
   27c04:	add	fp, sp, #4
   27c08:	sub	sp, sp, #16
   27c0c:	str	r0, [fp, #-16]
   27c10:	str	r1, [fp, #-20]	; 0xffffffec
   27c14:	ldr	r3, [fp, #-16]
   27c18:	ldr	r3, [r3]
   27c1c:	cmp	r3, #0
   27c20:	bne	27c58 <__assert_fail@plt+0x16a18>
   27c24:	ldr	r1, [fp, #-20]	; 0xffffffec
   27c28:	ldr	r0, [fp, #-16]
   27c2c:	bl	26ca4 <__assert_fail@plt+0x15a64>
   27c30:	mov	r3, r0
   27c34:	cmp	r3, #0
   27c38:	moveq	r3, #1
   27c3c:	movne	r3, #0
   27c40:	uxtb	r3, r3
   27c44:	cmp	r3, #0
   27c48:	movne	r3, #1
   27c4c:	moveq	r3, #0
   27c50:	uxtb	r3, r3
   27c54:	b	27e68 <__assert_fail@plt+0x16c28>
   27c58:	ldr	r3, [fp, #-16]
   27c5c:	ldr	r3, [r3, #4]
   27c60:	cmp	r3, #0
   27c64:	bne	27ca0 <__assert_fail@plt+0x16a60>
   27c68:	ldr	r3, [fp, #-16]
   27c6c:	ldr	r3, [r3, #8]
   27c70:	cmp	r3, #0
   27c74:	ldr	r3, [fp, #-16]
   27c78:	ldr	r3, [r3, #8]
   27c7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27c80:	str	r2, [r3]
   27c84:	ldr	r3, [fp, #-16]
   27c88:	ldr	r3, [r3, #4]
   27c8c:	add	r2, r3, #1
   27c90:	ldr	r3, [fp, #-16]
   27c94:	str	r2, [r3, #4]
   27c98:	mov	r3, #1
   27c9c:	b	27e68 <__assert_fail@plt+0x16c28>
   27ca0:	ldr	r3, [fp, #-16]
   27ca4:	ldr	r2, [r3]
   27ca8:	ldr	r3, [fp, #-16]
   27cac:	ldr	r3, [r3, #4]
   27cb0:	cmp	r2, r3
   27cb4:	bne	27d20 <__assert_fail@plt+0x16ae0>
   27cb8:	ldr	r3, [fp, #-16]
   27cbc:	ldr	r3, [r3]
   27cc0:	lsl	r2, r3, #1
   27cc4:	ldr	r3, [fp, #-16]
   27cc8:	str	r2, [r3]
   27ccc:	ldr	r3, [fp, #-16]
   27cd0:	ldr	r2, [r3, #8]
   27cd4:	ldr	r3, [fp, #-16]
   27cd8:	ldr	r3, [r3]
   27cdc:	lsl	r3, r3, #2
   27ce0:	mov	r1, r3
   27ce4:	mov	r0, r2
   27ce8:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   27cec:	str	r0, [fp, #-12]
   27cf0:	ldr	r3, [fp, #-12]
   27cf4:	cmp	r3, #0
   27cf8:	moveq	r3, #1
   27cfc:	movne	r3, #0
   27d00:	uxtb	r3, r3
   27d04:	cmp	r3, #0
   27d08:	beq	27d14 <__assert_fail@plt+0x16ad4>
   27d0c:	mov	r3, #0
   27d10:	b	27e68 <__assert_fail@plt+0x16c28>
   27d14:	ldr	r3, [fp, #-16]
   27d18:	ldr	r2, [fp, #-12]
   27d1c:	str	r2, [r3, #8]
   27d20:	ldr	r3, [fp, #-16]
   27d24:	ldr	r3, [r3, #8]
   27d28:	ldr	r3, [r3]
   27d2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27d30:	cmp	r2, r3
   27d34:	bge	27d98 <__assert_fail@plt+0x16b58>
   27d38:	ldr	r3, [fp, #-16]
   27d3c:	ldr	r3, [r3, #4]
   27d40:	str	r3, [fp, #-8]
   27d44:	b	27d88 <__assert_fail@plt+0x16b48>
   27d48:	ldr	r3, [fp, #-16]
   27d4c:	ldr	r2, [r3, #8]
   27d50:	ldr	r3, [fp, #-8]
   27d54:	sub	r3, r3, #-1073741823	; 0xc0000001
   27d58:	lsl	r3, r3, #2
   27d5c:	add	r2, r2, r3
   27d60:	ldr	r3, [fp, #-16]
   27d64:	ldr	r1, [r3, #8]
   27d68:	ldr	r3, [fp, #-8]
   27d6c:	lsl	r3, r3, #2
   27d70:	add	r3, r1, r3
   27d74:	ldr	r2, [r2]
   27d78:	str	r2, [r3]
   27d7c:	ldr	r3, [fp, #-8]
   27d80:	sub	r3, r3, #1
   27d84:	str	r3, [fp, #-8]
   27d88:	ldr	r3, [fp, #-8]
   27d8c:	cmp	r3, #0
   27d90:	bgt	27d48 <__assert_fail@plt+0x16b08>
   27d94:	b	27e34 <__assert_fail@plt+0x16bf4>
   27d98:	ldr	r3, [fp, #-16]
   27d9c:	ldr	r3, [r3, #4]
   27da0:	str	r3, [fp, #-8]
   27da4:	b	27de8 <__assert_fail@plt+0x16ba8>
   27da8:	ldr	r3, [fp, #-16]
   27dac:	ldr	r2, [r3, #8]
   27db0:	ldr	r3, [fp, #-8]
   27db4:	sub	r3, r3, #-1073741823	; 0xc0000001
   27db8:	lsl	r3, r3, #2
   27dbc:	add	r2, r2, r3
   27dc0:	ldr	r3, [fp, #-16]
   27dc4:	ldr	r1, [r3, #8]
   27dc8:	ldr	r3, [fp, #-8]
   27dcc:	lsl	r3, r3, #2
   27dd0:	add	r3, r1, r3
   27dd4:	ldr	r2, [r2]
   27dd8:	str	r2, [r3]
   27ddc:	ldr	r3, [fp, #-8]
   27de0:	sub	r3, r3, #1
   27de4:	str	r3, [fp, #-8]
   27de8:	ldr	r3, [fp, #-16]
   27dec:	ldr	r2, [r3, #8]
   27df0:	ldr	r3, [fp, #-8]
   27df4:	sub	r3, r3, #-1073741823	; 0xc0000001
   27df8:	lsl	r3, r3, #2
   27dfc:	add	r3, r2, r3
   27e00:	ldr	r3, [r3]
   27e04:	ldr	r2, [fp, #-20]	; 0xffffffec
   27e08:	cmp	r2, r3
   27e0c:	blt	27da8 <__assert_fail@plt+0x16b68>
   27e10:	ldr	r3, [fp, #-16]
   27e14:	ldr	r2, [r3, #8]
   27e18:	ldr	r3, [fp, #-8]
   27e1c:	sub	r3, r3, #-1073741823	; 0xc0000001
   27e20:	lsl	r3, r3, #2
   27e24:	add	r3, r2, r3
   27e28:	ldr	r3, [r3]
   27e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27e30:	cmp	r2, r3
   27e34:	ldr	r3, [fp, #-16]
   27e38:	ldr	r2, [r3, #8]
   27e3c:	ldr	r3, [fp, #-8]
   27e40:	lsl	r3, r3, #2
   27e44:	add	r3, r2, r3
   27e48:	ldr	r2, [fp, #-20]	; 0xffffffec
   27e4c:	str	r2, [r3]
   27e50:	ldr	r3, [fp, #-16]
   27e54:	ldr	r3, [r3, #4]
   27e58:	add	r2, r3, #1
   27e5c:	ldr	r3, [fp, #-16]
   27e60:	str	r2, [r3, #4]
   27e64:	mov	r3, #1
   27e68:	mov	r0, r3
   27e6c:	sub	sp, fp, #4
   27e70:	ldr	fp, [sp]
   27e74:	add	sp, sp, #4
   27e78:	pop	{pc}		; (ldr pc, [sp], #4)
   27e7c:	str	fp, [sp, #-8]!
   27e80:	str	lr, [sp, #4]
   27e84:	add	fp, sp, #4
   27e88:	sub	sp, sp, #16
   27e8c:	str	r0, [fp, #-16]
   27e90:	str	r1, [fp, #-20]	; 0xffffffec
   27e94:	ldr	r3, [fp, #-16]
   27e98:	ldr	r2, [r3]
   27e9c:	ldr	r3, [fp, #-16]
   27ea0:	ldr	r3, [r3, #4]
   27ea4:	cmp	r2, r3
   27ea8:	bne	27f18 <__assert_fail@plt+0x16cd8>
   27eac:	ldr	r3, [fp, #-16]
   27eb0:	ldr	r3, [r3]
   27eb4:	add	r3, r3, #1
   27eb8:	lsl	r2, r3, #1
   27ebc:	ldr	r3, [fp, #-16]
   27ec0:	str	r2, [r3]
   27ec4:	ldr	r3, [fp, #-16]
   27ec8:	ldr	r2, [r3, #8]
   27ecc:	ldr	r3, [fp, #-16]
   27ed0:	ldr	r3, [r3]
   27ed4:	lsl	r3, r3, #2
   27ed8:	mov	r1, r3
   27edc:	mov	r0, r2
   27ee0:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   27ee4:	str	r0, [fp, #-8]
   27ee8:	ldr	r3, [fp, #-8]
   27eec:	cmp	r3, #0
   27ef0:	moveq	r3, #1
   27ef4:	movne	r3, #0
   27ef8:	uxtb	r3, r3
   27efc:	cmp	r3, #0
   27f00:	beq	27f0c <__assert_fail@plt+0x16ccc>
   27f04:	mov	r3, #0
   27f08:	b	27f48 <__assert_fail@plt+0x16d08>
   27f0c:	ldr	r3, [fp, #-16]
   27f10:	ldr	r2, [fp, #-8]
   27f14:	str	r2, [r3, #8]
   27f18:	ldr	r3, [fp, #-16]
   27f1c:	ldr	r2, [r3, #8]
   27f20:	ldr	r3, [fp, #-16]
   27f24:	ldr	r3, [r3, #4]
   27f28:	add	r0, r3, #1
   27f2c:	ldr	r1, [fp, #-16]
   27f30:	str	r0, [r1, #4]
   27f34:	lsl	r3, r3, #2
   27f38:	add	r3, r2, r3
   27f3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27f40:	str	r2, [r3]
   27f44:	mov	r3, #1
   27f48:	mov	r0, r3
   27f4c:	sub	sp, fp, #4
   27f50:	ldr	fp, [sp]
   27f54:	add	sp, sp, #4
   27f58:	pop	{pc}		; (ldr pc, [sp], #4)
   27f5c:	push	{fp}		; (str fp, [sp, #-4]!)
   27f60:	add	fp, sp, #0
   27f64:	sub	sp, sp, #20
   27f68:	str	r0, [fp, #-16]
   27f6c:	str	r1, [fp, #-20]	; 0xffffffec
   27f70:	ldr	r3, [fp, #-16]
   27f74:	cmp	r3, #0
   27f78:	beq	27fa0 <__assert_fail@plt+0x16d60>
   27f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f80:	cmp	r3, #0
   27f84:	beq	27fa0 <__assert_fail@plt+0x16d60>
   27f88:	ldr	r3, [fp, #-16]
   27f8c:	ldr	r2, [r3, #4]
   27f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f94:	ldr	r3, [r3, #4]
   27f98:	cmp	r2, r3
   27f9c:	beq	27fa8 <__assert_fail@plt+0x16d68>
   27fa0:	mov	r3, #0
   27fa4:	b	28014 <__assert_fail@plt+0x16dd4>
   27fa8:	ldr	r3, [fp, #-16]
   27fac:	ldr	r3, [r3, #4]
   27fb0:	str	r3, [fp, #-8]
   27fb4:	b	27ff8 <__assert_fail@plt+0x16db8>
   27fb8:	ldr	r3, [fp, #-16]
   27fbc:	ldr	r2, [r3, #8]
   27fc0:	ldr	r3, [fp, #-8]
   27fc4:	lsl	r3, r3, #2
   27fc8:	add	r3, r2, r3
   27fcc:	ldr	r2, [r3]
   27fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   27fd4:	ldr	r1, [r3, #8]
   27fd8:	ldr	r3, [fp, #-8]
   27fdc:	lsl	r3, r3, #2
   27fe0:	add	r3, r1, r3
   27fe4:	ldr	r3, [r3]
   27fe8:	cmp	r2, r3
   27fec:	beq	27ff8 <__assert_fail@plt+0x16db8>
   27ff0:	mov	r3, #0
   27ff4:	b	28014 <__assert_fail@plt+0x16dd4>
   27ff8:	ldr	r3, [fp, #-8]
   27ffc:	sub	r3, r3, #1
   28000:	str	r3, [fp, #-8]
   28004:	ldr	r3, [fp, #-8]
   28008:	cmp	r3, #0
   2800c:	bge	27fb8 <__assert_fail@plt+0x16d78>
   28010:	mov	r3, #1
   28014:	mov	r0, r3
   28018:	add	sp, fp, #0
   2801c:	pop	{fp}		; (ldr fp, [sp], #4)
   28020:	bx	lr
   28024:	push	{fp}		; (str fp, [sp, #-4]!)
   28028:	add	fp, sp, #0
   2802c:	sub	sp, sp, #28
   28030:	str	r0, [fp, #-24]	; 0xffffffe8
   28034:	str	r1, [fp, #-28]	; 0xffffffe4
   28038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2803c:	ldr	r3, [r3, #4]
   28040:	cmp	r3, #0
   28044:	bgt	28050 <__assert_fail@plt+0x16e10>
   28048:	mov	r3, #0
   2804c:	b	28100 <__assert_fail@plt+0x16ec0>
   28050:	mov	r3, #0
   28054:	str	r3, [fp, #-8]
   28058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2805c:	ldr	r3, [r3, #4]
   28060:	sub	r3, r3, #1
   28064:	str	r3, [fp, #-12]
   28068:	b	280bc <__assert_fail@plt+0x16e7c>
   2806c:	ldr	r2, [fp, #-8]
   28070:	ldr	r3, [fp, #-12]
   28074:	add	r3, r2, r3
   28078:	lsr	r3, r3, #1
   2807c:	str	r3, [fp, #-16]
   28080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28084:	ldr	r2, [r3, #8]
   28088:	ldr	r3, [fp, #-16]
   2808c:	lsl	r3, r3, #2
   28090:	add	r3, r2, r3
   28094:	ldr	r3, [r3]
   28098:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2809c:	cmp	r2, r3
   280a0:	ble	280b4 <__assert_fail@plt+0x16e74>
   280a4:	ldr	r3, [fp, #-16]
   280a8:	add	r3, r3, #1
   280ac:	str	r3, [fp, #-8]
   280b0:	b	280bc <__assert_fail@plt+0x16e7c>
   280b4:	ldr	r3, [fp, #-16]
   280b8:	str	r3, [fp, #-12]
   280bc:	ldr	r2, [fp, #-8]
   280c0:	ldr	r3, [fp, #-12]
   280c4:	cmp	r2, r3
   280c8:	bcc	2806c <__assert_fail@plt+0x16e2c>
   280cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   280d0:	ldr	r2, [r3, #8]
   280d4:	ldr	r3, [fp, #-8]
   280d8:	lsl	r3, r3, #2
   280dc:	add	r3, r2, r3
   280e0:	ldr	r3, [r3]
   280e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   280e8:	cmp	r2, r3
   280ec:	bne	280fc <__assert_fail@plt+0x16ebc>
   280f0:	ldr	r3, [fp, #-8]
   280f4:	add	r3, r3, #1
   280f8:	b	28100 <__assert_fail@plt+0x16ec0>
   280fc:	mov	r3, #0
   28100:	mov	r0, r3
   28104:	add	sp, fp, #0
   28108:	pop	{fp}		; (ldr fp, [sp], #4)
   2810c:	bx	lr
   28110:	push	{fp}		; (str fp, [sp, #-4]!)
   28114:	add	fp, sp, #0
   28118:	sub	sp, sp, #12
   2811c:	str	r0, [fp, #-8]
   28120:	str	r1, [fp, #-12]
   28124:	ldr	r3, [fp, #-12]
   28128:	cmp	r3, #0
   2812c:	blt	281b4 <__assert_fail@plt+0x16f74>
   28130:	ldr	r3, [fp, #-8]
   28134:	ldr	r3, [r3, #4]
   28138:	ldr	r2, [fp, #-12]
   2813c:	cmp	r2, r3
   28140:	bge	281b4 <__assert_fail@plt+0x16f74>
   28144:	ldr	r3, [fp, #-8]
   28148:	ldr	r3, [r3, #4]
   2814c:	sub	r2, r3, #1
   28150:	ldr	r3, [fp, #-8]
   28154:	str	r2, [r3, #4]
   28158:	b	2819c <__assert_fail@plt+0x16f5c>
   2815c:	ldr	r3, [fp, #-8]
   28160:	ldr	r2, [r3, #8]
   28164:	ldr	r3, [fp, #-12]
   28168:	add	r3, r3, #1
   2816c:	lsl	r3, r3, #2
   28170:	add	r2, r2, r3
   28174:	ldr	r3, [fp, #-8]
   28178:	ldr	r1, [r3, #8]
   2817c:	ldr	r3, [fp, #-12]
   28180:	lsl	r3, r3, #2
   28184:	add	r3, r1, r3
   28188:	ldr	r2, [r2]
   2818c:	str	r2, [r3]
   28190:	ldr	r3, [fp, #-12]
   28194:	add	r3, r3, #1
   28198:	str	r3, [fp, #-12]
   2819c:	ldr	r3, [fp, #-8]
   281a0:	ldr	r3, [r3, #4]
   281a4:	ldr	r2, [fp, #-12]
   281a8:	cmp	r2, r3
   281ac:	blt	2815c <__assert_fail@plt+0x16f1c>
   281b0:	b	281b8 <__assert_fail@plt+0x16f78>
   281b4:	nop	{0}
   281b8:	add	sp, fp, #0
   281bc:	pop	{fp}		; (ldr fp, [sp], #4)
   281c0:	bx	lr
   281c4:	str	fp, [sp, #-8]!
   281c8:	str	lr, [sp, #4]
   281cc:	add	fp, sp, #4
   281d0:	sub	sp, sp, #48	; 0x30
   281d4:	str	r0, [fp, #-40]	; 0xffffffd8
   281d8:	sub	r3, fp, #48	; 0x30
   281dc:	stm	r3, {r1, r2}
   281e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   281e4:	ldr	r2, [r3, #8]
   281e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   281ec:	ldr	r3, [r3, #4]
   281f0:	cmp	r2, r3
   281f4:	movcs	r3, #1
   281f8:	movcc	r3, #0
   281fc:	uxtb	r3, r3
   28200:	cmp	r3, #0
   28204:	beq	28448 <__assert_fail@plt+0x17208>
   28208:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2820c:	ldr	r3, [r3, #4]
   28210:	lsl	r3, r3, #1
   28214:	str	r3, [fp, #-8]
   28218:	mov	r3, #12
   2821c:	str	r3, [fp, #-12]
   28220:	mvn	r2, #0
   28224:	ldr	r3, [fp, #-12]
   28228:	udiv	r3, r2, r3
   2822c:	cmp	r3, #0
   28230:	blt	28244 <__assert_fail@plt+0x17004>
   28234:	mvn	r2, #0
   28238:	ldr	r3, [fp, #-12]
   2823c:	udiv	r3, r2, r3
   28240:	b	28248 <__assert_fail@plt+0x17008>
   28244:	mvn	r3, #-2147483648	; 0x80000000
   28248:	ldr	r2, [fp, #-8]
   2824c:	cmp	r3, r2
   28250:	movcc	r3, #1
   28254:	movcs	r3, #0
   28258:	uxtb	r3, r3
   2825c:	cmp	r3, #0
   28260:	beq	2826c <__assert_fail@plt+0x1702c>
   28264:	mvn	r3, #0
   28268:	b	28594 <__assert_fail@plt+0x17354>
   2826c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28270:	ldr	r2, [r3]
   28274:	ldr	r3, [fp, #-8]
   28278:	lsl	r3, r3, #3
   2827c:	mov	r1, r3
   28280:	mov	r0, r2
   28284:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   28288:	str	r0, [fp, #-16]
   2828c:	ldr	r3, [fp, #-16]
   28290:	cmp	r3, #0
   28294:	moveq	r3, #1
   28298:	movne	r3, #0
   2829c:	uxtb	r3, r3
   282a0:	cmp	r3, #0
   282a4:	beq	282b0 <__assert_fail@plt+0x17070>
   282a8:	mvn	r3, #0
   282ac:	b	28594 <__assert_fail@plt+0x17354>
   282b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   282b4:	ldr	r2, [fp, #-16]
   282b8:	str	r2, [r3]
   282bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   282c0:	ldr	r2, [r3, #12]
   282c4:	ldr	r3, [fp, #-8]
   282c8:	lsl	r3, r3, #2
   282cc:	mov	r1, r3
   282d0:	mov	r0, r2
   282d4:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   282d8:	str	r0, [fp, #-20]	; 0xffffffec
   282dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   282e0:	ldr	r2, [r3, #16]
   282e4:	ldr	r3, [fp, #-8]
   282e8:	lsl	r3, r3, #2
   282ec:	mov	r1, r3
   282f0:	mov	r0, r2
   282f4:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   282f8:	str	r0, [fp, #-24]	; 0xffffffe8
   282fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28300:	ldr	r0, [r3, #20]
   28304:	ldr	r2, [fp, #-8]
   28308:	mov	r3, r2
   2830c:	lsl	r3, r3, #1
   28310:	add	r3, r3, r2
   28314:	lsl	r3, r3, #2
   28318:	mov	r1, r3
   2831c:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   28320:	str	r0, [fp, #-28]	; 0xffffffe4
   28324:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28328:	ldr	r0, [r3, #24]
   2832c:	ldr	r2, [fp, #-8]
   28330:	mov	r3, r2
   28334:	lsl	r3, r3, #1
   28338:	add	r3, r3, r2
   2833c:	lsl	r3, r3, #2
   28340:	mov	r1, r3
   28344:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   28348:	str	r0, [fp, #-32]	; 0xffffffe0
   2834c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28350:	cmp	r3, #0
   28354:	moveq	r3, #1
   28358:	movne	r3, #0
   2835c:	uxtb	r3, r3
   28360:	cmp	r3, #0
   28364:	bne	28384 <__assert_fail@plt+0x17144>
   28368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2836c:	cmp	r3, #0
   28370:	moveq	r3, #1
   28374:	movne	r3, #0
   28378:	uxtb	r3, r3
   2837c:	cmp	r3, #0
   28380:	beq	2838c <__assert_fail@plt+0x1714c>
   28384:	mov	r3, #1
   28388:	b	28390 <__assert_fail@plt+0x17150>
   2838c:	mov	r3, #0
   28390:	cmp	r3, #0
   28394:	bne	283b4 <__assert_fail@plt+0x17174>
   28398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2839c:	cmp	r3, #0
   283a0:	moveq	r3, #1
   283a4:	movne	r3, #0
   283a8:	uxtb	r3, r3
   283ac:	cmp	r3, #0
   283b0:	beq	283bc <__assert_fail@plt+0x1717c>
   283b4:	mov	r3, #1
   283b8:	b	283c0 <__assert_fail@plt+0x17180>
   283bc:	mov	r3, #0
   283c0:	cmp	r3, #0
   283c4:	bne	283e4 <__assert_fail@plt+0x171a4>
   283c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   283cc:	cmp	r3, #0
   283d0:	moveq	r3, #1
   283d4:	movne	r3, #0
   283d8:	uxtb	r3, r3
   283dc:	cmp	r3, #0
   283e0:	beq	2840c <__assert_fail@plt+0x171cc>
   283e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   283e8:	bl	13798 <__assert_fail@plt+0x2558>
   283ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   283f0:	bl	13798 <__assert_fail@plt+0x2558>
   283f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   283f8:	bl	13798 <__assert_fail@plt+0x2558>
   283fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28400:	bl	13798 <__assert_fail@plt+0x2558>
   28404:	mvn	r3, #0
   28408:	b	28594 <__assert_fail@plt+0x17354>
   2840c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28410:	ldr	r2, [fp, #-20]	; 0xffffffec
   28414:	str	r2, [r3, #12]
   28418:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2841c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28420:	str	r2, [r3, #16]
   28424:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28428:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2842c:	str	r2, [r3, #20]
   28430:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28434:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28438:	str	r2, [r3, #24]
   2843c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28440:	ldr	r2, [fp, #-8]
   28444:	str	r2, [r3, #4]
   28448:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2844c:	ldr	r2, [r3]
   28450:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28454:	ldr	r3, [r3, #8]
   28458:	lsl	r3, r3, #3
   2845c:	add	r3, r2, r3
   28460:	mov	r1, r3
   28464:	sub	r3, fp, #48	; 0x30
   28468:	ldrd	r2, [r3]
   2846c:	strd	r2, [r1]
   28470:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28474:	ldr	r2, [r3]
   28478:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2847c:	ldr	r3, [r3, #8]
   28480:	lsl	r3, r3, #3
   28484:	add	r2, r2, r3
   28488:	ldr	r3, [r2, #4]
   2848c:	bfc	r3, #8, #10
   28490:	str	r3, [r2, #4]
   28494:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   28498:	cmp	r3, #5
   2849c:	bne	284b0 <__assert_fail@plt+0x17270>
   284a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   284a4:	ldr	r3, [r3, #92]	; 0x5c
   284a8:	cmp	r3, #1
   284ac:	bgt	284bc <__assert_fail@plt+0x1727c>
   284b0:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   284b4:	cmp	r3, #6
   284b8:	bne	284c4 <__assert_fail@plt+0x17284>
   284bc:	mov	r1, #1
   284c0:	b	284c8 <__assert_fail@plt+0x17288>
   284c4:	mov	r1, #0
   284c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   284cc:	ldr	r2, [r3]
   284d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   284d4:	ldr	r3, [r3, #8]
   284d8:	lsl	r3, r3, #3
   284dc:	add	r2, r2, r3
   284e0:	mov	r3, r1
   284e4:	and	r3, r3, #1
   284e8:	uxtb	r1, r3
   284ec:	ldrb	r3, [r2, #6]
   284f0:	bfi	r3, r1, #4, #1
   284f4:	strb	r3, [r2, #6]
   284f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   284fc:	ldr	r2, [r3, #12]
   28500:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28504:	ldr	r3, [r3, #8]
   28508:	lsl	r3, r3, #2
   2850c:	add	r3, r2, r3
   28510:	mvn	r2, #0
   28514:	str	r2, [r3]
   28518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2851c:	ldr	r1, [r3, #20]
   28520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28524:	ldr	r2, [r3, #8]
   28528:	mov	r3, r2
   2852c:	lsl	r3, r3, #1
   28530:	add	r3, r3, r2
   28534:	lsl	r3, r3, #2
   28538:	add	r3, r1, r3
   2853c:	mov	r2, #12
   28540:	mov	r1, #0
   28544:	mov	r0, r3
   28548:	bl	1118c <memset@plt>
   2854c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28550:	ldr	r1, [r3, #24]
   28554:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28558:	ldr	r2, [r3, #8]
   2855c:	mov	r3, r2
   28560:	lsl	r3, r3, #1
   28564:	add	r3, r3, r2
   28568:	lsl	r3, r3, #2
   2856c:	add	r3, r1, r3
   28570:	mov	r2, #12
   28574:	mov	r1, #0
   28578:	mov	r0, r3
   2857c:	bl	1118c <memset@plt>
   28580:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28584:	ldr	r3, [r3, #8]
   28588:	add	r1, r3, #1
   2858c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28590:	str	r1, [r2, #8]
   28594:	mov	r0, r3
   28598:	sub	sp, fp, #4
   2859c:	ldr	fp, [sp]
   285a0:	add	sp, sp, #4
   285a4:	pop	{pc}		; (ldr pc, [sp], #4)
   285a8:	push	{fp}		; (str fp, [sp, #-4]!)
   285ac:	add	fp, sp, #0
   285b0:	sub	sp, sp, #20
   285b4:	str	r0, [fp, #-16]
   285b8:	str	r1, [fp, #-20]	; 0xffffffec
   285bc:	ldr	r3, [fp, #-16]
   285c0:	ldr	r3, [r3, #4]
   285c4:	mov	r2, r3
   285c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   285cc:	add	r3, r3, r2
   285d0:	str	r3, [fp, #-8]
   285d4:	mov	r3, #0
   285d8:	str	r3, [fp, #-12]
   285dc:	b	28614 <__assert_fail@plt+0x173d4>
   285e0:	ldr	r3, [fp, #-16]
   285e4:	ldr	r2, [r3, #8]
   285e8:	ldr	r3, [fp, #-12]
   285ec:	lsl	r3, r3, #2
   285f0:	add	r3, r2, r3
   285f4:	ldr	r3, [r3]
   285f8:	mov	r2, r3
   285fc:	ldr	r3, [fp, #-8]
   28600:	add	r3, r3, r2
   28604:	str	r3, [fp, #-8]
   28608:	ldr	r3, [fp, #-12]
   2860c:	add	r3, r3, #1
   28610:	str	r3, [fp, #-12]
   28614:	ldr	r3, [fp, #-16]
   28618:	ldr	r3, [r3, #4]
   2861c:	ldr	r2, [fp, #-12]
   28620:	cmp	r2, r3
   28624:	blt	285e0 <__assert_fail@plt+0x173a0>
   28628:	ldr	r3, [fp, #-8]
   2862c:	mov	r0, r3
   28630:	add	sp, fp, #0
   28634:	pop	{fp}		; (ldr fp, [sp], #4)
   28638:	bx	lr
   2863c:	str	fp, [sp, #-8]!
   28640:	str	lr, [sp, #4]
   28644:	add	fp, sp, #4
   28648:	sub	sp, sp, #40	; 0x28
   2864c:	str	r0, [fp, #-32]	; 0xffffffe0
   28650:	str	r1, [fp, #-36]	; 0xffffffdc
   28654:	str	r2, [fp, #-40]	; 0xffffffd8
   28658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2865c:	mov	r2, #0
   28660:	str	r2, [r3]
   28664:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28668:	ldr	r3, [r3, #4]
   2866c:	cmp	r3, #0
   28670:	moveq	r3, #1
   28674:	movne	r3, #0
   28678:	uxtb	r3, r3
   2867c:	cmp	r3, #0
   28680:	beq	28698 <__assert_fail@plt+0x17458>
   28684:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28688:	mov	r2, #0
   2868c:	str	r2, [r3]
   28690:	mov	r3, #0
   28694:	b	287a0 <__assert_fail@plt+0x17560>
   28698:	mov	r1, #0
   2869c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   286a0:	bl	285a8 <__assert_fail@plt+0x17368>
   286a4:	str	r0, [fp, #-12]
   286a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   286ac:	ldr	r1, [r3, #32]
   286b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   286b4:	ldr	r2, [r3, #68]	; 0x44
   286b8:	ldr	r3, [fp, #-12]
   286bc:	and	r2, r2, r3
   286c0:	mov	r3, r2
   286c4:	lsl	r3, r3, #1
   286c8:	add	r3, r3, r2
   286cc:	lsl	r3, r3, #2
   286d0:	add	r3, r1, r3
   286d4:	str	r3, [fp, #-16]
   286d8:	mov	r3, #0
   286dc:	str	r3, [fp, #-8]
   286e0:	b	2874c <__assert_fail@plt+0x1750c>
   286e4:	ldr	r3, [fp, #-16]
   286e8:	ldr	r2, [r3, #8]
   286ec:	ldr	r3, [fp, #-8]
   286f0:	lsl	r3, r3, #2
   286f4:	add	r3, r2, r3
   286f8:	ldr	r3, [r3]
   286fc:	str	r3, [fp, #-20]	; 0xffffffec
   28700:	ldr	r3, [fp, #-20]	; 0xffffffec
   28704:	ldr	r3, [r3]
   28708:	ldr	r2, [fp, #-12]
   2870c:	cmp	r2, r3
   28710:	bne	2873c <__assert_fail@plt+0x174fc>
   28714:	ldr	r3, [fp, #-20]	; 0xffffffec
   28718:	add	r3, r3, #4
   2871c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28720:	mov	r0, r3
   28724:	bl	27f5c <__assert_fail@plt+0x16d1c>
   28728:	mov	r3, r0
   2872c:	cmp	r3, #0
   28730:	beq	28740 <__assert_fail@plt+0x17500>
   28734:	ldr	r3, [fp, #-20]	; 0xffffffec
   28738:	b	287a0 <__assert_fail@plt+0x17560>
   2873c:	nop	{0}
   28740:	ldr	r3, [fp, #-8]
   28744:	add	r3, r3, #1
   28748:	str	r3, [fp, #-8]
   2874c:	ldr	r3, [fp, #-16]
   28750:	ldr	r3, [r3]
   28754:	ldr	r2, [fp, #-8]
   28758:	cmp	r2, r3
   2875c:	blt	286e4 <__assert_fail@plt+0x174a4>
   28760:	ldr	r2, [fp, #-12]
   28764:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28768:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2876c:	bl	28c10 <__assert_fail@plt+0x179d0>
   28770:	str	r0, [fp, #-24]	; 0xffffffe8
   28774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28778:	cmp	r3, #0
   2877c:	moveq	r3, #1
   28780:	movne	r3, #0
   28784:	uxtb	r3, r3
   28788:	cmp	r3, #0
   2878c:	beq	2879c <__assert_fail@plt+0x1755c>
   28790:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28794:	mov	r2, #12
   28798:	str	r2, [r3]
   2879c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   287a0:	mov	r0, r3
   287a4:	sub	sp, fp, #4
   287a8:	ldr	fp, [sp]
   287ac:	add	sp, sp, #4
   287b0:	pop	{pc}		; (ldr pc, [sp], #4)
   287b4:	str	fp, [sp, #-8]!
   287b8:	str	lr, [sp, #4]
   287bc:	add	fp, sp, #4
   287c0:	sub	sp, sp, #40	; 0x28
   287c4:	str	r0, [fp, #-32]	; 0xffffffe0
   287c8:	str	r1, [fp, #-36]	; 0xffffffdc
   287cc:	str	r2, [fp, #-40]	; 0xffffffd8
   287d0:	str	r3, [fp, #-44]	; 0xffffffd4
   287d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   287d8:	mov	r2, #0
   287dc:	str	r2, [r3]
   287e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   287e4:	ldr	r3, [r3, #4]
   287e8:	cmp	r3, #0
   287ec:	bne	28804 <__assert_fail@plt+0x175c4>
   287f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   287f4:	mov	r2, #0
   287f8:	str	r2, [r3]
   287fc:	mov	r3, #0
   28800:	b	2892c <__assert_fail@plt+0x176ec>
   28804:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2880c:	bl	285a8 <__assert_fail@plt+0x17368>
   28810:	str	r0, [fp, #-12]
   28814:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28818:	ldr	r1, [r3, #32]
   2881c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28820:	ldr	r2, [r3, #68]	; 0x44
   28824:	ldr	r3, [fp, #-12]
   28828:	and	r2, r2, r3
   2882c:	mov	r3, r2
   28830:	lsl	r3, r3, #1
   28834:	add	r3, r3, r2
   28838:	lsl	r3, r3, #2
   2883c:	add	r3, r1, r3
   28840:	str	r3, [fp, #-16]
   28844:	mov	r3, #0
   28848:	str	r3, [fp, #-8]
   2884c:	b	288d4 <__assert_fail@plt+0x17694>
   28850:	ldr	r3, [fp, #-16]
   28854:	ldr	r2, [r3, #8]
   28858:	ldr	r3, [fp, #-8]
   2885c:	lsl	r3, r3, #2
   28860:	add	r3, r2, r3
   28864:	ldr	r3, [r3]
   28868:	str	r3, [fp, #-20]	; 0xffffffec
   2886c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28870:	ldr	r3, [r3]
   28874:	ldr	r2, [fp, #-12]
   28878:	cmp	r2, r3
   2887c:	bne	288c8 <__assert_fail@plt+0x17688>
   28880:	ldr	r3, [fp, #-20]	; 0xffffffec
   28884:	ldrb	r3, [r3, #52]	; 0x34
   28888:	ubfx	r3, r3, #0, #4
   2888c:	uxtb	r3, r3
   28890:	mov	r2, r3
   28894:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28898:	cmp	r3, r2
   2889c:	bne	288c8 <__assert_fail@plt+0x17688>
   288a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   288a4:	ldr	r3, [r3, #40]	; 0x28
   288a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   288ac:	mov	r0, r3
   288b0:	bl	27f5c <__assert_fail@plt+0x16d1c>
   288b4:	mov	r3, r0
   288b8:	cmp	r3, #0
   288bc:	beq	288c8 <__assert_fail@plt+0x17688>
   288c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   288c4:	b	2892c <__assert_fail@plt+0x176ec>
   288c8:	ldr	r3, [fp, #-8]
   288cc:	add	r3, r3, #1
   288d0:	str	r3, [fp, #-8]
   288d4:	ldr	r3, [fp, #-16]
   288d8:	ldr	r3, [r3]
   288dc:	ldr	r2, [fp, #-8]
   288e0:	cmp	r2, r3
   288e4:	blt	28850 <__assert_fail@plt+0x17610>
   288e8:	ldr	r3, [fp, #-12]
   288ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   288f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   288f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   288f8:	bl	28e54 <__assert_fail@plt+0x17c14>
   288fc:	str	r0, [fp, #-24]	; 0xffffffe8
   28900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28904:	cmp	r3, #0
   28908:	moveq	r3, #1
   2890c:	movne	r3, #0
   28910:	uxtb	r3, r3
   28914:	cmp	r3, #0
   28918:	beq	28928 <__assert_fail@plt+0x176e8>
   2891c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28920:	mov	r2, #12
   28924:	str	r2, [r3]
   28928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2892c:	mov	r0, r3
   28930:	sub	sp, fp, #4
   28934:	ldr	fp, [sp]
   28938:	add	sp, sp, #4
   2893c:	pop	{pc}		; (ldr pc, [sp], #4)
   28940:	str	fp, [sp, #-8]!
   28944:	str	lr, [sp, #4]
   28948:	add	fp, sp, #4
   2894c:	sub	sp, sp, #40	; 0x28
   28950:	str	r0, [fp, #-32]	; 0xffffffe0
   28954:	str	r1, [fp, #-36]	; 0xffffffdc
   28958:	str	r2, [fp, #-40]	; 0xffffffd8
   2895c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28960:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28964:	str	r2, [r3]
   28968:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2896c:	add	r2, r3, #16
   28970:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28974:	ldr	r3, [r3, #8]
   28978:	mov	r1, r3
   2897c:	mov	r0, r2
   28980:	bl	26c14 <__assert_fail@plt+0x159d4>
   28984:	str	r0, [fp, #-12]
   28988:	ldr	r3, [fp, #-12]
   2898c:	cmp	r3, #0
   28990:	movne	r3, #1
   28994:	moveq	r3, #0
   28998:	uxtb	r3, r3
   2899c:	cmp	r3, #0
   289a0:	beq	289ac <__assert_fail@plt+0x1776c>
   289a4:	mov	r3, #12
   289a8:	b	28b40 <__assert_fail@plt+0x17900>
   289ac:	mov	r3, #0
   289b0:	str	r3, [fp, #-8]
   289b4:	b	28a34 <__assert_fail@plt+0x177f4>
   289b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   289bc:	ldr	r2, [r3, #12]
   289c0:	ldr	r3, [fp, #-8]
   289c4:	lsl	r3, r3, #2
   289c8:	add	r3, r2, r3
   289cc:	ldr	r3, [r3]
   289d0:	str	r3, [fp, #-16]
   289d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   289d8:	ldr	r2, [r3]
   289dc:	ldr	r3, [fp, #-16]
   289e0:	lsl	r3, r3, #3
   289e4:	add	r3, r2, r3
   289e8:	ldrb	r3, [r3, #4]
   289ec:	and	r3, r3, #8
   289f0:	cmp	r3, #0
   289f4:	bne	28a28 <__assert_fail@plt+0x177e8>
   289f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   289fc:	add	r3, r3, #16
   28a00:	ldr	r1, [fp, #-16]
   28a04:	mov	r0, r3
   28a08:	bl	27e7c <__assert_fail@plt+0x16c3c>
   28a0c:	mov	r3, r0
   28a10:	eor	r3, r3, #1
   28a14:	uxtb	r3, r3
   28a18:	cmp	r3, #0
   28a1c:	beq	28a28 <__assert_fail@plt+0x177e8>
   28a20:	mov	r3, #12
   28a24:	b	28b40 <__assert_fail@plt+0x17900>
   28a28:	ldr	r3, [fp, #-8]
   28a2c:	add	r3, r3, #1
   28a30:	str	r3, [fp, #-8]
   28a34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28a38:	ldr	r3, [r3, #8]
   28a3c:	ldr	r2, [fp, #-8]
   28a40:	cmp	r2, r3
   28a44:	blt	289b8 <__assert_fail@plt+0x17778>
   28a48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28a4c:	ldr	r1, [r3, #32]
   28a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28a54:	ldr	r2, [r3, #68]	; 0x44
   28a58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28a5c:	and	r2, r2, r3
   28a60:	mov	r3, r2
   28a64:	lsl	r3, r3, #1
   28a68:	add	r3, r3, r2
   28a6c:	lsl	r3, r3, #2
   28a70:	add	r3, r1, r3
   28a74:	str	r3, [fp, #-20]	; 0xffffffec
   28a78:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a7c:	ldr	r2, [r3, #4]
   28a80:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a84:	ldr	r3, [r3]
   28a88:	cmp	r2, r3
   28a8c:	movle	r3, #1
   28a90:	movgt	r3, #0
   28a94:	uxtb	r3, r3
   28a98:	cmp	r3, #0
   28a9c:	beq	28b10 <__assert_fail@plt+0x178d0>
   28aa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   28aa4:	ldr	r3, [r3]
   28aa8:	add	r3, r3, #1
   28aac:	lsl	r3, r3, #1
   28ab0:	str	r3, [fp, #-24]	; 0xffffffe8
   28ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   28ab8:	ldr	r2, [r3, #8]
   28abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ac0:	lsl	r3, r3, #2
   28ac4:	mov	r1, r3
   28ac8:	mov	r0, r2
   28acc:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   28ad0:	str	r0, [fp, #-28]	; 0xffffffe4
   28ad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28ad8:	cmp	r3, #0
   28adc:	moveq	r3, #1
   28ae0:	movne	r3, #0
   28ae4:	uxtb	r3, r3
   28ae8:	cmp	r3, #0
   28aec:	beq	28af8 <__assert_fail@plt+0x178b8>
   28af0:	mov	r3, #12
   28af4:	b	28b40 <__assert_fail@plt+0x17900>
   28af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28afc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28b00:	str	r2, [r3, #8]
   28b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   28b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28b0c:	str	r2, [r3, #4]
   28b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   28b14:	ldr	r2, [r3, #8]
   28b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   28b1c:	ldr	r3, [r3]
   28b20:	add	r0, r3, #1
   28b24:	ldr	r1, [fp, #-20]	; 0xffffffec
   28b28:	str	r0, [r1]
   28b2c:	lsl	r3, r3, #2
   28b30:	add	r3, r2, r3
   28b34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28b38:	str	r2, [r3]
   28b3c:	mov	r3, #0
   28b40:	mov	r0, r3
   28b44:	sub	sp, fp, #4
   28b48:	ldr	fp, [sp]
   28b4c:	add	sp, sp, #4
   28b50:	pop	{pc}		; (ldr pc, [sp], #4)
   28b54:	str	fp, [sp, #-8]!
   28b58:	str	lr, [sp, #4]
   28b5c:	add	fp, sp, #4
   28b60:	sub	sp, sp, #8
   28b64:	str	r0, [fp, #-8]
   28b68:	ldr	r3, [fp, #-8]
   28b6c:	ldr	r3, [r3, #24]
   28b70:	mov	r0, r3
   28b74:	bl	13798 <__assert_fail@plt+0x2558>
   28b78:	ldr	r3, [fp, #-8]
   28b7c:	ldr	r3, [r3, #36]	; 0x24
   28b80:	mov	r0, r3
   28b84:	bl	13798 <__assert_fail@plt+0x2558>
   28b88:	ldr	r3, [fp, #-8]
   28b8c:	ldr	r2, [r3, #40]	; 0x28
   28b90:	ldr	r3, [fp, #-8]
   28b94:	add	r3, r3, #4
   28b98:	cmp	r2, r3
   28b9c:	beq	28bc4 <__assert_fail@plt+0x17984>
   28ba0:	ldr	r3, [fp, #-8]
   28ba4:	ldr	r3, [r3, #40]	; 0x28
   28ba8:	ldr	r3, [r3, #8]
   28bac:	mov	r0, r3
   28bb0:	bl	13798 <__assert_fail@plt+0x2558>
   28bb4:	ldr	r3, [fp, #-8]
   28bb8:	ldr	r3, [r3, #40]	; 0x28
   28bbc:	mov	r0, r3
   28bc0:	bl	13798 <__assert_fail@plt+0x2558>
   28bc4:	ldr	r3, [fp, #-8]
   28bc8:	ldr	r3, [r3, #12]
   28bcc:	mov	r0, r3
   28bd0:	bl	13798 <__assert_fail@plt+0x2558>
   28bd4:	ldr	r3, [fp, #-8]
   28bd8:	ldr	r3, [r3, #48]	; 0x30
   28bdc:	mov	r0, r3
   28be0:	bl	13798 <__assert_fail@plt+0x2558>
   28be4:	ldr	r3, [fp, #-8]
   28be8:	ldr	r3, [r3, #44]	; 0x2c
   28bec:	mov	r0, r3
   28bf0:	bl	13798 <__assert_fail@plt+0x2558>
   28bf4:	ldr	r0, [fp, #-8]
   28bf8:	bl	13798 <__assert_fail@plt+0x2558>
   28bfc:	nop	{0}
   28c00:	sub	sp, fp, #4
   28c04:	ldr	fp, [sp]
   28c08:	add	sp, sp, #4
   28c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   28c10:	str	fp, [sp, #-8]!
   28c14:	str	lr, [sp, #4]
   28c18:	add	fp, sp, #4
   28c1c:	sub	sp, sp, #40	; 0x28
   28c20:	str	r0, [fp, #-32]	; 0xffffffe0
   28c24:	str	r1, [fp, #-36]	; 0xffffffdc
   28c28:	str	r2, [fp, #-40]	; 0xffffffd8
   28c2c:	mov	r1, #1
   28c30:	mov	r0, #56	; 0x38
   28c34:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   28c38:	mov	r3, r0
   28c3c:	str	r3, [fp, #-12]
   28c40:	ldr	r3, [fp, #-12]
   28c44:	cmp	r3, #0
   28c48:	moveq	r3, #1
   28c4c:	movne	r3, #0
   28c50:	uxtb	r3, r3
   28c54:	cmp	r3, #0
   28c58:	beq	28c64 <__assert_fail@plt+0x17a24>
   28c5c:	mov	r3, #0
   28c60:	b	28e40 <__assert_fail@plt+0x17c00>
   28c64:	ldr	r3, [fp, #-12]
   28c68:	add	r3, r3, #4
   28c6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28c70:	mov	r0, r3
   28c74:	bl	26e70 <__assert_fail@plt+0x15c30>
   28c78:	str	r0, [fp, #-16]
   28c7c:	ldr	r3, [fp, #-16]
   28c80:	cmp	r3, #0
   28c84:	movne	r3, #1
   28c88:	moveq	r3, #0
   28c8c:	uxtb	r3, r3
   28c90:	cmp	r3, #0
   28c94:	beq	28ca8 <__assert_fail@plt+0x17a68>
   28c98:	ldr	r0, [fp, #-12]
   28c9c:	bl	13798 <__assert_fail@plt+0x2558>
   28ca0:	mov	r3, #0
   28ca4:	b	28e40 <__assert_fail@plt+0x17c00>
   28ca8:	ldr	r3, [fp, #-12]
   28cac:	add	r2, r3, #4
   28cb0:	ldr	r3, [fp, #-12]
   28cb4:	str	r2, [r3, #40]	; 0x28
   28cb8:	mov	r3, #0
   28cbc:	str	r3, [fp, #-8]
   28cc0:	b	28de8 <__assert_fail@plt+0x17ba8>
   28cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28cc8:	ldr	r2, [r3]
   28ccc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28cd0:	ldr	r1, [r3, #8]
   28cd4:	ldr	r3, [fp, #-8]
   28cd8:	lsl	r3, r3, #2
   28cdc:	add	r3, r1, r3
   28ce0:	ldr	r3, [r3]
   28ce4:	lsl	r3, r3, #3
   28ce8:	add	r3, r2, r3
   28cec:	str	r3, [fp, #-20]	; 0xffffffec
   28cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   28cf4:	ldrb	r3, [r3, #4]
   28cf8:	str	r3, [fp, #-24]	; 0xffffffe8
   28cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d00:	cmp	r3, #1
   28d04:	bne	28d24 <__assert_fail@plt+0x17ae4>
   28d08:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d0c:	ldr	r2, [r3, #4]
   28d10:	mov	r3, #65280	; 0xff00
   28d14:	movt	r3, #3
   28d18:	and	r3, r3, r2
   28d1c:	cmp	r3, #0
   28d20:	beq	28dd8 <__assert_fail@plt+0x17b98>
   28d24:	ldr	r3, [fp, #-12]
   28d28:	ldrb	r3, [r3, #52]	; 0x34
   28d2c:	ubfx	r3, r3, #5, #1
   28d30:	uxtb	r2, r3
   28d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d38:	ldrb	r3, [r3, #6]
   28d3c:	ubfx	r3, r3, #4, #1
   28d40:	uxtb	r3, r3
   28d44:	orr	r3, r2, r3
   28d48:	uxtb	r1, r3
   28d4c:	ldr	r2, [fp, #-12]
   28d50:	ldrb	r3, [r2, #52]	; 0x34
   28d54:	bfi	r3, r1, #5, #1
   28d58:	strb	r3, [r2, #52]	; 0x34
   28d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d60:	cmp	r3, #2
   28d64:	bne	28d7c <__assert_fail@plt+0x17b3c>
   28d68:	ldr	r2, [fp, #-12]
   28d6c:	ldrb	r3, [r2, #52]	; 0x34
   28d70:	orr	r3, r3, #16
   28d74:	strb	r3, [r2, #52]	; 0x34
   28d78:	b	28ddc <__assert_fail@plt+0x17b9c>
   28d7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d80:	cmp	r3, #4
   28d84:	bne	28d9c <__assert_fail@plt+0x17b5c>
   28d88:	ldr	r2, [fp, #-12]
   28d8c:	ldrb	r3, [r2, #52]	; 0x34
   28d90:	orr	r3, r3, #64	; 0x40
   28d94:	strb	r3, [r2, #52]	; 0x34
   28d98:	b	28ddc <__assert_fail@plt+0x17b9c>
   28d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28da0:	cmp	r3, #12
   28da4:	beq	28dc4 <__assert_fail@plt+0x17b84>
   28da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28dac:	ldr	r2, [r3, #4]
   28db0:	mov	r3, #65280	; 0xff00
   28db4:	movt	r3, #3
   28db8:	and	r3, r3, r2
   28dbc:	cmp	r3, #0
   28dc0:	beq	28ddc <__assert_fail@plt+0x17b9c>
   28dc4:	ldr	r2, [fp, #-12]
   28dc8:	ldrb	r3, [r2, #52]	; 0x34
   28dcc:	orr	r3, r3, #128	; 0x80
   28dd0:	strb	r3, [r2, #52]	; 0x34
   28dd4:	b	28ddc <__assert_fail@plt+0x17b9c>
   28dd8:	nop	{0}
   28ddc:	ldr	r3, [fp, #-8]
   28de0:	add	r3, r3, #1
   28de4:	str	r3, [fp, #-8]
   28de8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28dec:	ldr	r3, [r3, #4]
   28df0:	ldr	r2, [fp, #-8]
   28df4:	cmp	r2, r3
   28df8:	blt	28cc4 <__assert_fail@plt+0x17a84>
   28dfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28e00:	ldr	r1, [fp, #-12]
   28e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28e08:	bl	28940 <__assert_fail@plt+0x17700>
   28e0c:	str	r0, [fp, #-16]
   28e10:	ldr	r3, [fp, #-16]
   28e14:	cmp	r3, #0
   28e18:	movne	r3, #1
   28e1c:	moveq	r3, #0
   28e20:	uxtb	r3, r3
   28e24:	cmp	r3, #0
   28e28:	beq	28e3c <__assert_fail@plt+0x17bfc>
   28e2c:	ldr	r0, [fp, #-12]
   28e30:	bl	28b54 <__assert_fail@plt+0x17914>
   28e34:	mov	r3, #0
   28e38:	str	r3, [fp, #-12]
   28e3c:	ldr	r3, [fp, #-12]
   28e40:	mov	r0, r3
   28e44:	sub	sp, fp, #4
   28e48:	ldr	fp, [sp]
   28e4c:	add	sp, sp, #4
   28e50:	pop	{pc}		; (ldr pc, [sp], #4)
   28e54:	str	fp, [sp, #-8]!
   28e58:	str	lr, [sp, #4]
   28e5c:	add	fp, sp, #4
   28e60:	sub	sp, sp, #48	; 0x30
   28e64:	str	r0, [fp, #-40]	; 0xffffffd8
   28e68:	str	r1, [fp, #-44]	; 0xffffffd4
   28e6c:	str	r2, [fp, #-48]	; 0xffffffd0
   28e70:	str	r3, [fp, #-52]	; 0xffffffcc
   28e74:	mov	r3, #0
   28e78:	str	r3, [fp, #-12]
   28e7c:	mov	r1, #1
   28e80:	mov	r0, #56	; 0x38
   28e84:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   28e88:	mov	r3, r0
   28e8c:	str	r3, [fp, #-16]
   28e90:	ldr	r3, [fp, #-16]
   28e94:	cmp	r3, #0
   28e98:	moveq	r3, #1
   28e9c:	movne	r3, #0
   28ea0:	uxtb	r3, r3
   28ea4:	cmp	r3, #0
   28ea8:	beq	28eb4 <__assert_fail@plt+0x17c74>
   28eac:	mov	r3, #0
   28eb0:	b	291d0 <__assert_fail@plt+0x17f90>
   28eb4:	ldr	r3, [fp, #-16]
   28eb8:	add	r3, r3, #4
   28ebc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28ec0:	mov	r0, r3
   28ec4:	bl	26e70 <__assert_fail@plt+0x15c30>
   28ec8:	str	r0, [fp, #-20]	; 0xffffffec
   28ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   28ed0:	cmp	r3, #0
   28ed4:	movne	r3, #1
   28ed8:	moveq	r3, #0
   28edc:	uxtb	r3, r3
   28ee0:	cmp	r3, #0
   28ee4:	beq	28ef8 <__assert_fail@plt+0x17cb8>
   28ee8:	ldr	r0, [fp, #-16]
   28eec:	bl	13798 <__assert_fail@plt+0x2558>
   28ef0:	mov	r3, #0
   28ef4:	b	291d0 <__assert_fail@plt+0x17f90>
   28ef8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28efc:	and	r3, r3, #15
   28f00:	uxtb	r1, r3
   28f04:	ldr	r2, [fp, #-16]
   28f08:	ldrb	r3, [r2, #52]	; 0x34
   28f0c:	bfi	r3, r1, #0, #4
   28f10:	strb	r3, [r2, #52]	; 0x34
   28f14:	ldr	r3, [fp, #-16]
   28f18:	add	r2, r3, #4
   28f1c:	ldr	r3, [fp, #-16]
   28f20:	str	r2, [r3, #40]	; 0x28
   28f24:	mov	r3, #0
   28f28:	str	r3, [fp, #-8]
   28f2c:	b	29178 <__assert_fail@plt+0x17f38>
   28f30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28f34:	ldr	r2, [r3]
   28f38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28f3c:	ldr	r1, [r3, #8]
   28f40:	ldr	r3, [fp, #-8]
   28f44:	lsl	r3, r3, #2
   28f48:	add	r3, r1, r3
   28f4c:	ldr	r3, [r3]
   28f50:	lsl	r3, r3, #3
   28f54:	add	r3, r2, r3
   28f58:	str	r3, [fp, #-24]	; 0xffffffe8
   28f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f60:	ldrb	r3, [r3, #4]
   28f64:	str	r3, [fp, #-28]	; 0xffffffe4
   28f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f6c:	ldr	r3, [r3, #4]
   28f70:	ubfx	r3, r3, #8, #10
   28f74:	uxth	r3, r3
   28f78:	str	r3, [fp, #-32]	; 0xffffffe0
   28f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28f80:	cmp	r3, #1
   28f84:	bne	28f94 <__assert_fail@plt+0x17d54>
   28f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28f8c:	cmp	r3, #0
   28f90:	beq	29168 <__assert_fail@plt+0x17f28>
   28f94:	ldr	r3, [fp, #-16]
   28f98:	ldrb	r3, [r3, #52]	; 0x34
   28f9c:	ubfx	r3, r3, #5, #1
   28fa0:	uxtb	r2, r3
   28fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28fa8:	ldrb	r3, [r3, #6]
   28fac:	ubfx	r3, r3, #4, #1
   28fb0:	uxtb	r3, r3
   28fb4:	orr	r3, r2, r3
   28fb8:	uxtb	r1, r3
   28fbc:	ldr	r2, [fp, #-16]
   28fc0:	ldrb	r3, [r2, #52]	; 0x34
   28fc4:	bfi	r3, r1, #5, #1
   28fc8:	strb	r3, [r2, #52]	; 0x34
   28fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28fd0:	cmp	r3, #2
   28fd4:	bne	28fec <__assert_fail@plt+0x17dac>
   28fd8:	ldr	r2, [fp, #-16]
   28fdc:	ldrb	r3, [r2, #52]	; 0x34
   28fe0:	orr	r3, r3, #16
   28fe4:	strb	r3, [r2, #52]	; 0x34
   28fe8:	b	29008 <__assert_fail@plt+0x17dc8>
   28fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28ff0:	cmp	r3, #4
   28ff4:	bne	29008 <__assert_fail@plt+0x17dc8>
   28ff8:	ldr	r2, [fp, #-16]
   28ffc:	ldrb	r3, [r2, #52]	; 0x34
   29000:	orr	r3, r3, #64	; 0x40
   29004:	strb	r3, [r2, #52]	; 0x34
   29008:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2900c:	cmp	r3, #0
   29010:	beq	2916c <__assert_fail@plt+0x17f2c>
   29014:	ldr	r3, [fp, #-16]
   29018:	ldr	r2, [r3, #40]	; 0x28
   2901c:	ldr	r3, [fp, #-16]
   29020:	add	r3, r3, #4
   29024:	cmp	r2, r3
   29028:	bne	290bc <__assert_fail@plt+0x17e7c>
   2902c:	mov	r0, #12
   29030:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   29034:	mov	r3, r0
   29038:	str	r3, [fp, #-36]	; 0xffffffdc
   2903c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29040:	cmp	r3, #0
   29044:	moveq	r3, #1
   29048:	movne	r3, #0
   2904c:	uxtb	r3, r3
   29050:	cmp	r3, #0
   29054:	beq	29068 <__assert_fail@plt+0x17e28>
   29058:	ldr	r0, [fp, #-16]
   2905c:	bl	28b54 <__assert_fail@plt+0x17914>
   29060:	mov	r3, #0
   29064:	b	291d0 <__assert_fail@plt+0x17f90>
   29068:	ldr	r3, [fp, #-16]
   2906c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   29070:	str	r2, [r3, #40]	; 0x28
   29074:	ldr	r3, [fp, #-16]
   29078:	ldr	r3, [r3, #40]	; 0x28
   2907c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29080:	mov	r0, r3
   29084:	bl	26e70 <__assert_fail@plt+0x15c30>
   29088:	mov	r3, r0
   2908c:	cmp	r3, #0
   29090:	beq	290a4 <__assert_fail@plt+0x17e64>
   29094:	ldr	r0, [fp, #-16]
   29098:	bl	28b54 <__assert_fail@plt+0x17914>
   2909c:	mov	r3, #0
   290a0:	b	291d0 <__assert_fail@plt+0x17f90>
   290a4:	mov	r3, #0
   290a8:	str	r3, [fp, #-12]
   290ac:	ldr	r2, [fp, #-16]
   290b0:	ldrb	r3, [r2, #52]	; 0x34
   290b4:	orr	r3, r3, #128	; 0x80
   290b8:	strb	r3, [r2, #52]	; 0x34
   290bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   290c0:	and	r3, r3, #1
   290c4:	cmp	r3, #0
   290c8:	beq	290dc <__assert_fail@plt+0x17e9c>
   290cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   290d0:	and	r3, r3, #1
   290d4:	cmp	r3, #0
   290d8:	beq	2913c <__assert_fail@plt+0x17efc>
   290dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   290e0:	and	r3, r3, #2
   290e4:	cmp	r3, #0
   290e8:	beq	290fc <__assert_fail@plt+0x17ebc>
   290ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   290f0:	and	r3, r3, #1
   290f4:	cmp	r3, #0
   290f8:	bne	2913c <__assert_fail@plt+0x17efc>
   290fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29100:	and	r3, r3, #16
   29104:	cmp	r3, #0
   29108:	beq	2911c <__assert_fail@plt+0x17edc>
   2910c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29110:	and	r3, r3, #2
   29114:	cmp	r3, #0
   29118:	beq	2913c <__assert_fail@plt+0x17efc>
   2911c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29120:	and	r3, r3, #64	; 0x40
   29124:	cmp	r3, #0
   29128:	beq	2916c <__assert_fail@plt+0x17f2c>
   2912c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29130:	and	r3, r3, #4
   29134:	cmp	r3, #0
   29138:	bne	2916c <__assert_fail@plt+0x17f2c>
   2913c:	ldr	r3, [fp, #-16]
   29140:	add	r0, r3, #4
   29144:	ldr	r2, [fp, #-8]
   29148:	ldr	r3, [fp, #-12]
   2914c:	sub	r3, r2, r3
   29150:	mov	r1, r3
   29154:	bl	28110 <__assert_fail@plt+0x16ed0>
   29158:	ldr	r3, [fp, #-12]
   2915c:	add	r3, r3, #1
   29160:	str	r3, [fp, #-12]
   29164:	b	2916c <__assert_fail@plt+0x17f2c>
   29168:	nop	{0}
   2916c:	ldr	r3, [fp, #-8]
   29170:	add	r3, r3, #1
   29174:	str	r3, [fp, #-8]
   29178:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2917c:	ldr	r3, [r3, #4]
   29180:	ldr	r2, [fp, #-8]
   29184:	cmp	r2, r3
   29188:	blt	28f30 <__assert_fail@plt+0x17cf0>
   2918c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   29190:	ldr	r1, [fp, #-16]
   29194:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29198:	bl	28940 <__assert_fail@plt+0x17700>
   2919c:	str	r0, [fp, #-20]	; 0xffffffec
   291a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   291a4:	cmp	r3, #0
   291a8:	movne	r3, #1
   291ac:	moveq	r3, #0
   291b0:	uxtb	r3, r3
   291b4:	cmp	r3, #0
   291b8:	beq	291cc <__assert_fail@plt+0x17f8c>
   291bc:	ldr	r0, [fp, #-16]
   291c0:	bl	28b54 <__assert_fail@plt+0x17914>
   291c4:	mov	r3, #0
   291c8:	str	r3, [fp, #-16]
   291cc:	ldr	r3, [fp, #-16]
   291d0:	mov	r0, r3
   291d4:	sub	sp, fp, #4
   291d8:	ldr	fp, [sp]
   291dc:	add	sp, sp, #4
   291e0:	pop	{pc}		; (ldr pc, [sp], #4)
   291e4:	str	fp, [sp, #-8]!
   291e8:	str	lr, [sp, #4]
   291ec:	add	fp, sp, #4
   291f0:	sub	sp, sp, #24
   291f4:	str	r0, [fp, #-16]
   291f8:	str	r1, [fp, #-20]	; 0xffffffec
   291fc:	str	r2, [fp, #-24]	; 0xffffffe8
   29200:	movw	r3, #13016	; 0x32d8
   29204:	movt	r3, #5
   29208:	ldr	r3, [r3]
   2920c:	and	r3, r3, #33554432	; 0x2000000
   29210:	cmp	r3, #0
   29214:	movne	r3, #1
   29218:	moveq	r3, #0
   2921c:	uxtb	r1, r3
   29220:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29224:	ldrb	r3, [r2, #28]
   29228:	bfi	r3, r1, #4, #1
   2922c:	strb	r3, [r2, #28]
   29230:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29234:	ldrb	r3, [r2, #28]
   29238:	orr	r3, r3, #128	; 0x80
   2923c:	strb	r3, [r2, #28]
   29240:	movw	r3, #13016	; 0x32d8
   29244:	movt	r3, #5
   29248:	ldr	r3, [r3]
   2924c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29250:	ldr	r1, [fp, #-16]
   29254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29258:	bl	2a1d4 <__assert_fail@plt+0x18f94>
   2925c:	str	r0, [fp, #-8]
   29260:	ldr	r3, [fp, #-8]
   29264:	cmp	r3, #0
   29268:	bne	29274 <__assert_fail@plt+0x18034>
   2926c:	mov	r3, #0
   29270:	b	2929c <__assert_fail@plt+0x1805c>
   29274:	movw	r3, #7868	; 0x1ebc
   29278:	movt	r3, #4
   2927c:	ldr	r2, [fp, #-8]
   29280:	ldr	r2, [r3, r2, lsl #2]
   29284:	movw	r3, #7484	; 0x1d3c
   29288:	movt	r3, #4
   2928c:	add	r3, r2, r3
   29290:	mov	r0, r3
   29294:	bl	11138 <gettext@plt>
   29298:	mov	r3, r0
   2929c:	mov	r0, r3
   292a0:	sub	sp, fp, #4
   292a4:	ldr	fp, [sp]
   292a8:	add	sp, sp, #4
   292ac:	pop	{pc}		; (ldr pc, [sp], #4)
   292b0:	push	{fp}		; (str fp, [sp, #-4]!)
   292b4:	add	fp, sp, #0
   292b8:	sub	sp, sp, #20
   292bc:	str	r0, [fp, #-16]
   292c0:	movw	r3, #13016	; 0x32d8
   292c4:	movt	r3, #5
   292c8:	ldr	r3, [r3]
   292cc:	str	r3, [fp, #-8]
   292d0:	movw	r3, #13016	; 0x32d8
   292d4:	movt	r3, #5
   292d8:	ldr	r2, [fp, #-16]
   292dc:	str	r2, [r3]
   292e0:	ldr	r3, [fp, #-8]
   292e4:	mov	r0, r3
   292e8:	add	sp, fp, #0
   292ec:	pop	{fp}		; (ldr fp, [sp], #4)
   292f0:	bx	lr
   292f4:	str	fp, [sp, #-8]!
   292f8:	str	lr, [sp, #4]
   292fc:	add	fp, sp, #4
   29300:	sub	sp, sp, #16
   29304:	str	r0, [fp, #-16]
   29308:	ldr	r3, [fp, #-16]
   2930c:	ldr	r3, [r3]
   29310:	str	r3, [fp, #-8]
   29314:	ldr	r3, [fp, #-16]
   29318:	ldr	r3, [r3, #16]
   2931c:	str	r3, [fp, #-12]
   29320:	mov	r2, #256	; 0x100
   29324:	mov	r1, #0
   29328:	ldr	r0, [fp, #-12]
   2932c:	bl	1118c <memset@plt>
   29330:	ldr	r3, [fp, #-8]
   29334:	ldr	r3, [r3, #36]	; 0x24
   29338:	ldr	r2, [fp, #-12]
   2933c:	mov	r1, r3
   29340:	ldr	r0, [fp, #-16]
   29344:	bl	29400 <__assert_fail@plt+0x181c0>
   29348:	ldr	r3, [fp, #-8]
   2934c:	ldr	r2, [r3, #36]	; 0x24
   29350:	ldr	r3, [fp, #-8]
   29354:	ldr	r3, [r3, #40]	; 0x28
   29358:	cmp	r2, r3
   2935c:	beq	29378 <__assert_fail@plt+0x18138>
   29360:	ldr	r3, [fp, #-8]
   29364:	ldr	r3, [r3, #40]	; 0x28
   29368:	ldr	r2, [fp, #-12]
   2936c:	mov	r1, r3
   29370:	ldr	r0, [fp, #-16]
   29374:	bl	29400 <__assert_fail@plt+0x181c0>
   29378:	ldr	r3, [fp, #-8]
   2937c:	ldr	r2, [r3, #36]	; 0x24
   29380:	ldr	r3, [fp, #-8]
   29384:	ldr	r3, [r3, #44]	; 0x2c
   29388:	cmp	r2, r3
   2938c:	beq	293a8 <__assert_fail@plt+0x18168>
   29390:	ldr	r3, [fp, #-8]
   29394:	ldr	r3, [r3, #44]	; 0x2c
   29398:	ldr	r2, [fp, #-12]
   2939c:	mov	r1, r3
   293a0:	ldr	r0, [fp, #-16]
   293a4:	bl	29400 <__assert_fail@plt+0x181c0>
   293a8:	ldr	r3, [fp, #-8]
   293ac:	ldr	r2, [r3, #36]	; 0x24
   293b0:	ldr	r3, [fp, #-8]
   293b4:	ldr	r3, [r3, #48]	; 0x30
   293b8:	cmp	r2, r3
   293bc:	beq	293d8 <__assert_fail@plt+0x18198>
   293c0:	ldr	r3, [fp, #-8]
   293c4:	ldr	r3, [r3, #48]	; 0x30
   293c8:	ldr	r2, [fp, #-12]
   293cc:	mov	r1, r3
   293d0:	ldr	r0, [fp, #-16]
   293d4:	bl	29400 <__assert_fail@plt+0x181c0>
   293d8:	ldr	r2, [fp, #-16]
   293dc:	ldrb	r3, [r2, #28]
   293e0:	orr	r3, r3, #8
   293e4:	strb	r3, [r2, #28]
   293e8:	mov	r3, #0
   293ec:	mov	r0, r3
   293f0:	sub	sp, fp, #4
   293f4:	ldr	fp, [sp]
   293f8:	add	sp, sp, #4
   293fc:	pop	{pc}		; (ldr pc, [sp], #4)
   29400:	str	fp, [sp, #-8]!
   29404:	str	lr, [sp, #4]
   29408:	add	fp, sp, #4
   2940c:	sub	sp, sp, #440	; 0x1b8
   29410:	str	r0, [fp, #-432]	; 0xfffffe50
   29414:	str	r1, [fp, #-436]	; 0xfffffe4c
   29418:	str	r2, [fp, #-440]	; 0xfffffe48
   2941c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   29420:	ldr	r3, [r3]
   29424:	str	r3, [fp, #-36]	; 0xffffffdc
   29428:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2942c:	ldr	r3, [r3, #92]	; 0x5c
   29430:	cmp	r3, #1
   29434:	bne	29454 <__assert_fail@plt+0x18214>
   29438:	ldr	r3, [fp, #-432]	; 0xfffffe50
   2943c:	ldr	r3, [r3, #12]
   29440:	and	r3, r3, #4194304	; 0x400000
   29444:	cmp	r3, #0
   29448:	beq	29454 <__assert_fail@plt+0x18214>
   2944c:	mov	r3, #1
   29450:	b	29458 <__assert_fail@plt+0x18218>
   29454:	mov	r3, #0
   29458:	strb	r3, [fp, #-37]	; 0xffffffdb
   2945c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   29460:	and	r3, r3, #1
   29464:	strb	r3, [fp, #-37]	; 0xffffffdb
   29468:	mov	r3, #0
   2946c:	str	r3, [fp, #-8]
   29470:	b	29b14 <__assert_fail@plt+0x188d4>
   29474:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   29478:	ldr	r2, [r3, #12]
   2947c:	ldr	r3, [fp, #-8]
   29480:	lsl	r3, r3, #2
   29484:	add	r3, r2, r3
   29488:	ldr	r3, [r3]
   2948c:	str	r3, [fp, #-12]
   29490:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29494:	ldr	r2, [r3]
   29498:	ldr	r3, [fp, #-12]
   2949c:	lsl	r3, r3, #3
   294a0:	add	r3, r2, r3
   294a4:	ldrb	r3, [r3, #4]
   294a8:	str	r3, [fp, #-44]	; 0xffffffd4
   294ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   294b0:	cmp	r3, #1
   294b4:	bne	296e8 <__assert_fail@plt+0x184a8>
   294b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   294bc:	ldr	r2, [r3]
   294c0:	ldr	r3, [fp, #-12]
   294c4:	lsl	r3, r3, #3
   294c8:	add	r3, r2, r3
   294cc:	ldrb	r3, [r3]
   294d0:	mov	r2, r3
   294d4:	ldr	r3, [fp, #-440]	; 0xfffffe48
   294d8:	str	r3, [fp, #-56]	; 0xffffffc8
   294dc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   294e0:	strb	r3, [fp, #-57]	; 0xffffffc7
   294e4:	str	r2, [fp, #-64]	; 0xffffffc0
   294e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   294ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   294f0:	add	r3, r2, r3
   294f4:	mov	r2, #1
   294f8:	strb	r2, [r3]
   294fc:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   29500:	cmp	r3, #0
   29504:	beq	29528 <__assert_fail@plt+0x182e8>
   29508:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2950c:	bl	10ff4 <tolower@plt>
   29510:	mov	r3, r0
   29514:	mov	r2, r3
   29518:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2951c:	add	r3, r3, r2
   29520:	mov	r2, #1
   29524:	strb	r2, [r3]
   29528:	ldr	r3, [fp, #-432]	; 0xfffffe50
   2952c:	ldr	r3, [r3, #12]
   29530:	and	r3, r3, #4194304	; 0x400000
   29534:	cmp	r3, #0
   29538:	beq	29b08 <__assert_fail@plt+0x188c8>
   2953c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29540:	ldr	r3, [r3, #92]	; 0x5c
   29544:	cmp	r3, #1
   29548:	ble	29b08 <__assert_fail@plt+0x188c8>
   2954c:	sub	r3, fp, #140	; 0x8c
   29550:	str	r3, [fp, #-16]
   29554:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29558:	ldr	r2, [r3]
   2955c:	ldr	r3, [fp, #-12]
   29560:	lsl	r3, r3, #3
   29564:	add	r2, r2, r3
   29568:	ldr	r3, [fp, #-16]
   2956c:	add	r1, r3, #1
   29570:	str	r1, [fp, #-16]
   29574:	ldrb	r2, [r2]
   29578:	strb	r2, [r3]
   2957c:	b	295a8 <__assert_fail@plt+0x18368>
   29580:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29584:	ldr	r2, [r3]
   29588:	ldr	r3, [fp, #-12]
   2958c:	lsl	r3, r3, #3
   29590:	add	r2, r2, r3
   29594:	ldr	r3, [fp, #-16]
   29598:	add	r1, r3, #1
   2959c:	str	r1, [fp, #-16]
   295a0:	ldrb	r2, [r2]
   295a4:	strb	r2, [r3]
   295a8:	ldr	r3, [fp, #-12]
   295ac:	add	r3, r3, #1
   295b0:	str	r3, [fp, #-12]
   295b4:	ldr	r2, [fp, #-12]
   295b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   295bc:	ldr	r3, [r3, #8]
   295c0:	cmp	r2, r3
   295c4:	bcs	29610 <__assert_fail@plt+0x183d0>
   295c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   295cc:	ldr	r2, [r3]
   295d0:	ldr	r3, [fp, #-12]
   295d4:	lsl	r3, r3, #3
   295d8:	add	r3, r2, r3
   295dc:	ldrb	r3, [r3, #4]
   295e0:	cmp	r3, #1
   295e4:	bne	29610 <__assert_fail@plt+0x183d0>
   295e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   295ec:	ldr	r2, [r3]
   295f0:	ldr	r3, [fp, #-12]
   295f4:	lsl	r3, r3, #3
   295f8:	add	r3, r2, r3
   295fc:	ldrb	r3, [r3, #6]
   29600:	and	r3, r3, #32
   29604:	uxtb	r3, r3
   29608:	cmp	r3, #0
   2960c:	bne	29580 <__assert_fail@plt+0x18340>
   29610:	sub	r3, fp, #152	; 0x98
   29614:	mov	r2, #8
   29618:	mov	r1, #0
   2961c:	mov	r0, r3
   29620:	bl	1118c <memset@plt>
   29624:	sub	r3, fp, #140	; 0x8c
   29628:	ldr	r2, [fp, #-16]
   2962c:	sub	r3, r2, r3
   29630:	mov	r2, r3
   29634:	sub	r3, fp, #152	; 0x98
   29638:	sub	r1, fp, #140	; 0x8c
   2963c:	sub	r0, fp, #144	; 0x90
   29640:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   29644:	mov	r1, r0
   29648:	sub	r3, fp, #140	; 0x8c
   2964c:	ldr	r2, [fp, #-16]
   29650:	sub	r3, r2, r3
   29654:	cmp	r1, r3
   29658:	bne	29b08 <__assert_fail@plt+0x188c8>
   2965c:	ldr	r3, [fp, #-144]	; 0xffffff70
   29660:	mov	r0, r3
   29664:	bl	1100c <towlower@plt>
   29668:	mov	r1, r0
   2966c:	sub	r2, fp, #152	; 0x98
   29670:	sub	r3, fp, #140	; 0x8c
   29674:	mov	r0, r3
   29678:	bl	10f58 <wcrtomb@plt>
   2967c:	mov	r3, r0
   29680:	cmn	r3, #1
   29684:	beq	29b08 <__assert_fail@plt+0x188c8>
   29688:	ldrb	r3, [fp, #-140]	; 0xffffff74
   2968c:	mov	r2, r3
   29690:	ldr	r3, [fp, #-440]	; 0xfffffe48
   29694:	str	r3, [fp, #-68]	; 0xffffffbc
   29698:	mov	r3, #0
   2969c:	strb	r3, [fp, #-69]	; 0xffffffbb
   296a0:	str	r2, [fp, #-76]	; 0xffffffb4
   296a4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   296a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   296ac:	add	r3, r2, r3
   296b0:	mov	r2, #1
   296b4:	strb	r2, [r3]
   296b8:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   296bc:	cmp	r3, #0
   296c0:	beq	29b08 <__assert_fail@plt+0x188c8>
   296c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   296c8:	bl	10ff4 <tolower@plt>
   296cc:	mov	r3, r0
   296d0:	mov	r2, r3
   296d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   296d8:	add	r3, r3, r2
   296dc:	mov	r2, #1
   296e0:	strb	r2, [r3]
   296e4:	b	29b08 <__assert_fail@plt+0x188c8>
   296e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   296ec:	cmp	r3, #3
   296f0:	bne	297f0 <__assert_fail@plt+0x185b0>
   296f4:	mov	r3, #0
   296f8:	str	r3, [fp, #-20]	; 0xffffffec
   296fc:	mov	r3, #0
   29700:	str	r3, [fp, #-24]	; 0xffffffe8
   29704:	b	297e0 <__assert_fail@plt+0x185a0>
   29708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2970c:	ldr	r2, [r3]
   29710:	ldr	r3, [fp, #-12]
   29714:	lsl	r3, r3, #3
   29718:	add	r3, r2, r3
   2971c:	ldr	r2, [r3]
   29720:	ldr	r3, [fp, #-20]	; 0xffffffec
   29724:	lsl	r3, r3, #2
   29728:	add	r3, r2, r3
   2972c:	ldr	r3, [r3]
   29730:	str	r3, [fp, #-48]	; 0xffffffd0
   29734:	mov	r3, #0
   29738:	str	r3, [fp, #-28]	; 0xffffffe4
   2973c:	b	297c8 <__assert_fail@plt+0x18588>
   29740:	ldr	r2, [fp, #-48]	; 0xffffffd0
   29744:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29748:	lsr	r3, r2, r3
   2974c:	and	r3, r3, #1
   29750:	cmp	r3, #0
   29754:	beq	297b0 <__assert_fail@plt+0x18570>
   29758:	ldr	r3, [fp, #-440]	; 0xfffffe48
   2975c:	str	r3, [fp, #-80]	; 0xffffffb0
   29760:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   29764:	strb	r3, [fp, #-81]	; 0xffffffaf
   29768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2976c:	str	r3, [fp, #-88]	; 0xffffffa8
   29770:	ldr	r3, [fp, #-88]	; 0xffffffa8
   29774:	ldr	r2, [fp, #-80]	; 0xffffffb0
   29778:	add	r3, r2, r3
   2977c:	mov	r2, #1
   29780:	strb	r2, [r3]
   29784:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   29788:	cmp	r3, #0
   2978c:	beq	297b0 <__assert_fail@plt+0x18570>
   29790:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29794:	bl	10ff4 <tolower@plt>
   29798:	mov	r3, r0
   2979c:	mov	r2, r3
   297a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   297a4:	add	r3, r3, r2
   297a8:	mov	r2, #1
   297ac:	strb	r2, [r3]
   297b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   297b4:	add	r3, r3, #1
   297b8:	str	r3, [fp, #-28]	; 0xffffffe4
   297bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   297c0:	add	r3, r3, #1
   297c4:	str	r3, [fp, #-24]	; 0xffffffe8
   297c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   297cc:	cmp	r3, #31
   297d0:	ble	29740 <__assert_fail@plt+0x18500>
   297d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   297d8:	add	r3, r3, #1
   297dc:	str	r3, [fp, #-20]	; 0xffffffec
   297e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   297e4:	cmp	r3, #7
   297e8:	ble	29708 <__assert_fail@plt+0x184c8>
   297ec:	b	29b08 <__assert_fail@plt+0x188c8>
   297f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   297f4:	cmp	r3, #6
   297f8:	bne	29ab4 <__assert_fail@plt+0x18874>
   297fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29800:	ldr	r2, [r3]
   29804:	ldr	r3, [fp, #-12]
   29808:	lsl	r3, r3, #3
   2980c:	add	r3, r2, r3
   29810:	ldr	r3, [r3]
   29814:	str	r3, [fp, #-52]	; 0xffffffcc
   29818:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2981c:	ldr	r3, [r3, #92]	; 0x5c
   29820:	cmp	r3, #1
   29824:	ble	29918 <__assert_fail@plt+0x186d8>
   29828:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2982c:	ldr	r3, [r3, #36]	; 0x24
   29830:	cmp	r3, #0
   29834:	bne	29860 <__assert_fail@plt+0x18620>
   29838:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2983c:	ldrb	r3, [r3, #16]
   29840:	and	r3, r3, #1
   29844:	uxtb	r3, r3
   29848:	cmp	r3, #0
   2984c:	bne	29860 <__assert_fail@plt+0x18620>
   29850:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29854:	ldr	r3, [r3, #32]
   29858:	cmp	r3, #0
   2985c:	beq	29918 <__assert_fail@plt+0x186d8>
   29860:	mov	r3, #0
   29864:	strb	r3, [fp, #-153]	; 0xffffff67
   29868:	sub	r3, fp, #164	; 0xa4
   2986c:	mov	r2, #8
   29870:	mov	r1, #0
   29874:	mov	r0, r3
   29878:	bl	1118c <memset@plt>
   2987c:	sub	r3, fp, #164	; 0xa4
   29880:	sub	r1, fp, #153	; 0x99
   29884:	mov	r2, #1
   29888:	mov	r0, #0
   2988c:	bl	3fd10 <__assert_fail@plt+0x2ead0>
   29890:	mov	r3, r0
   29894:	cmn	r3, #2
   29898:	bne	298f8 <__assert_fail@plt+0x186b8>
   2989c:	ldrb	r3, [fp, #-153]	; 0xffffff67
   298a0:	mov	r2, r3
   298a4:	ldr	r3, [fp, #-440]	; 0xfffffe48
   298a8:	str	r3, [fp, #-92]	; 0xffffffa4
   298ac:	mov	r3, #0
   298b0:	strb	r3, [fp, #-93]	; 0xffffffa3
   298b4:	str	r2, [fp, #-100]	; 0xffffff9c
   298b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   298bc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   298c0:	add	r3, r2, r3
   298c4:	mov	r2, #1
   298c8:	strb	r2, [r3]
   298cc:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   298d0:	cmp	r3, #0
   298d4:	beq	298f8 <__assert_fail@plt+0x186b8>
   298d8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   298dc:	bl	10ff4 <tolower@plt>
   298e0:	mov	r3, r0
   298e4:	mov	r2, r3
   298e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   298ec:	add	r3, r3, r2
   298f0:	mov	r2, #1
   298f4:	strb	r2, [r3]
   298f8:	ldrb	r3, [fp, #-153]	; 0xffffff67
   298fc:	add	r3, r3, #1
   29900:	uxtb	r3, r3
   29904:	strb	r3, [fp, #-153]	; 0xffffff67
   29908:	ldrb	r3, [fp, #-153]	; 0xffffff67
   2990c:	cmp	r3, #0
   29910:	bne	29868 <__assert_fail@plt+0x18628>
   29914:	b	29b08 <__assert_fail@plt+0x188c8>
   29918:	mov	r3, #0
   2991c:	str	r3, [fp, #-32]	; 0xffffffe0
   29920:	b	29a9c <__assert_fail@plt+0x1885c>
   29924:	sub	r3, fp, #172	; 0xac
   29928:	mov	r2, #8
   2992c:	mov	r1, #0
   29930:	mov	r0, r3
   29934:	bl	1118c <memset@plt>
   29938:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2993c:	ldr	r2, [r3]
   29940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29944:	lsl	r3, r3, #2
   29948:	add	r3, r2, r3
   2994c:	ldr	r1, [r3]
   29950:	sub	r2, fp, #172	; 0xac
   29954:	sub	r3, fp, #428	; 0x1ac
   29958:	mov	r0, r3
   2995c:	bl	10f58 <wcrtomb@plt>
   29960:	mov	r3, r0
   29964:	cmn	r3, #1
   29968:	beq	299cc <__assert_fail@plt+0x1878c>
   2996c:	sub	r3, fp, #428	; 0x1ac
   29970:	ldrb	r3, [r3]
   29974:	mov	r2, r3
   29978:	ldr	r3, [fp, #-440]	; 0xfffffe48
   2997c:	str	r3, [fp, #-104]	; 0xffffff98
   29980:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   29984:	strb	r3, [fp, #-105]	; 0xffffff97
   29988:	str	r2, [fp, #-112]	; 0xffffff90
   2998c:	ldr	r3, [fp, #-112]	; 0xffffff90
   29990:	ldr	r2, [fp, #-104]	; 0xffffff98
   29994:	add	r3, r2, r3
   29998:	mov	r2, #1
   2999c:	strb	r2, [r3]
   299a0:	ldrb	r3, [fp, #-105]	; 0xffffff97
   299a4:	cmp	r3, #0
   299a8:	beq	299cc <__assert_fail@plt+0x1878c>
   299ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   299b0:	bl	10ff4 <tolower@plt>
   299b4:	mov	r3, r0
   299b8:	mov	r2, r3
   299bc:	ldr	r3, [fp, #-104]	; 0xffffff98
   299c0:	add	r3, r3, r2
   299c4:	mov	r2, #1
   299c8:	strb	r2, [r3]
   299cc:	ldr	r3, [fp, #-432]	; 0xfffffe50
   299d0:	ldr	r3, [r3, #12]
   299d4:	and	r3, r3, #4194304	; 0x400000
   299d8:	cmp	r3, #0
   299dc:	beq	29a90 <__assert_fail@plt+0x18850>
   299e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   299e4:	ldr	r3, [r3, #92]	; 0x5c
   299e8:	cmp	r3, #1
   299ec:	ble	29a90 <__assert_fail@plt+0x18850>
   299f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   299f4:	ldr	r2, [r3]
   299f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   299fc:	lsl	r3, r3, #2
   29a00:	add	r3, r2, r3
   29a04:	ldr	r3, [r3]
   29a08:	mov	r0, r3
   29a0c:	bl	1100c <towlower@plt>
   29a10:	mov	r1, r0
   29a14:	sub	r2, fp, #172	; 0xac
   29a18:	sub	r3, fp, #428	; 0x1ac
   29a1c:	mov	r0, r3
   29a20:	bl	10f58 <wcrtomb@plt>
   29a24:	mov	r3, r0
   29a28:	cmn	r3, #1
   29a2c:	beq	29a90 <__assert_fail@plt+0x18850>
   29a30:	sub	r3, fp, #428	; 0x1ac
   29a34:	ldrb	r3, [r3]
   29a38:	mov	r2, r3
   29a3c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   29a40:	str	r3, [fp, #-116]	; 0xffffff8c
   29a44:	mov	r3, #0
   29a48:	strb	r3, [fp, #-117]	; 0xffffff8b
   29a4c:	str	r2, [fp, #-124]	; 0xffffff84
   29a50:	ldr	r3, [fp, #-124]	; 0xffffff84
   29a54:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29a58:	add	r3, r2, r3
   29a5c:	mov	r2, #1
   29a60:	strb	r2, [r3]
   29a64:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   29a68:	cmp	r3, #0
   29a6c:	beq	29a90 <__assert_fail@plt+0x18850>
   29a70:	ldr	r0, [fp, #-124]	; 0xffffff84
   29a74:	bl	10ff4 <tolower@plt>
   29a78:	mov	r3, r0
   29a7c:	mov	r2, r3
   29a80:	ldr	r3, [fp, #-116]	; 0xffffff8c
   29a84:	add	r3, r3, r2
   29a88:	mov	r2, #1
   29a8c:	strb	r2, [r3]
   29a90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a94:	add	r3, r3, #1
   29a98:	str	r3, [fp, #-32]	; 0xffffffe0
   29a9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29aa0:	ldr	r3, [r3, #20]
   29aa4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29aa8:	cmp	r2, r3
   29aac:	blt	29924 <__assert_fail@plt+0x186e4>
   29ab0:	b	29b08 <__assert_fail@plt+0x188c8>
   29ab4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29ab8:	cmp	r3, #5
   29abc:	beq	29ad8 <__assert_fail@plt+0x18898>
   29ac0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29ac4:	cmp	r3, #7
   29ac8:	beq	29ad8 <__assert_fail@plt+0x18898>
   29acc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29ad0:	cmp	r3, #2
   29ad4:	bne	29b08 <__assert_fail@plt+0x188c8>
   29ad8:	mov	r2, #256	; 0x100
   29adc:	mov	r1, #1
   29ae0:	ldr	r0, [fp, #-440]	; 0xfffffe48
   29ae4:	bl	1118c <memset@plt>
   29ae8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29aec:	cmp	r3, #2
   29af0:	bne	29b2c <__assert_fail@plt+0x188ec>
   29af4:	ldr	r2, [fp, #-432]	; 0xfffffe50
   29af8:	ldrb	r3, [r2, #28]
   29afc:	orr	r3, r3, #1
   29b00:	strb	r3, [r2, #28]
   29b04:	b	29b2c <__assert_fail@plt+0x188ec>
   29b08:	ldr	r3, [fp, #-8]
   29b0c:	add	r3, r3, #1
   29b10:	str	r3, [fp, #-8]
   29b14:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   29b18:	ldr	r3, [r3, #8]
   29b1c:	ldr	r2, [fp, #-8]
   29b20:	cmp	r2, r3
   29b24:	blt	29474 <__assert_fail@plt+0x18234>
   29b28:	b	29b30 <__assert_fail@plt+0x188f0>
   29b2c:	nop	{0}
   29b30:	sub	sp, fp, #4
   29b34:	ldr	fp, [sp]
   29b38:	add	sp, sp, #4
   29b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   29b40:	str	fp, [sp, #-8]!
   29b44:	str	lr, [sp, #4]
   29b48:	add	fp, sp, #4
   29b4c:	sub	sp, sp, #24
   29b50:	str	r0, [fp, #-16]
   29b54:	str	r1, [fp, #-20]	; 0xffffffec
   29b58:	str	r2, [fp, #-24]	; 0xffffffe8
   29b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29b60:	and	r3, r3, #1
   29b64:	cmp	r3, #0
   29b68:	beq	29b78 <__assert_fail@plt+0x18938>
   29b6c:	movw	r3, #45820	; 0xb2fc
   29b70:	movt	r3, #3
   29b74:	b	29b80 <__assert_fail@plt+0x18940>
   29b78:	movw	r3, #710	; 0x2c6
   29b7c:	movt	r3, #257	; 0x101
   29b80:	str	r3, [fp, #-12]
   29b84:	ldr	r3, [fp, #-16]
   29b88:	mov	r2, #0
   29b8c:	str	r2, [r3]
   29b90:	ldr	r3, [fp, #-16]
   29b94:	mov	r2, #0
   29b98:	str	r2, [r3, #4]
   29b9c:	ldr	r3, [fp, #-16]
   29ba0:	mov	r2, #0
   29ba4:	str	r2, [r3, #8]
   29ba8:	mov	r0, #256	; 0x100
   29bac:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   29bb0:	mov	r3, r0
   29bb4:	mov	r2, r3
   29bb8:	ldr	r3, [fp, #-16]
   29bbc:	str	r2, [r3, #16]
   29bc0:	ldr	r3, [fp, #-16]
   29bc4:	ldr	r3, [r3, #16]
   29bc8:	cmp	r3, #0
   29bcc:	moveq	r3, #1
   29bd0:	movne	r3, #0
   29bd4:	uxtb	r3, r3
   29bd8:	cmp	r3, #0
   29bdc:	beq	29be8 <__assert_fail@plt+0x189a8>
   29be0:	mov	r3, #12
   29be4:	b	29cfc <__assert_fail@plt+0x18abc>
   29be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29bec:	lsl	r3, r3, #21
   29bf0:	and	r3, r3, #4194304	; 0x400000
   29bf4:	ldr	r2, [fp, #-12]
   29bf8:	orr	r3, r2, r3
   29bfc:	str	r3, [fp, #-12]
   29c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29c04:	and	r3, r3, #4
   29c08:	cmp	r3, #0
   29c0c:	beq	29c3c <__assert_fail@plt+0x189fc>
   29c10:	ldr	r3, [fp, #-12]
   29c14:	bic	r3, r3, #64	; 0x40
   29c18:	str	r3, [fp, #-12]
   29c1c:	ldr	r3, [fp, #-12]
   29c20:	orr	r3, r3, #256	; 0x100
   29c24:	str	r3, [fp, #-12]
   29c28:	ldr	r2, [fp, #-16]
   29c2c:	ldrb	r3, [r2, #28]
   29c30:	orr	r3, r3, #128	; 0x80
   29c34:	strb	r3, [r2, #28]
   29c38:	b	29c4c <__assert_fail@plt+0x18a0c>
   29c3c:	ldr	r2, [fp, #-16]
   29c40:	ldrb	r3, [r2, #28]
   29c44:	bfc	r3, #7, #1
   29c48:	strb	r3, [r2, #28]
   29c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29c50:	and	r3, r3, #8
   29c54:	cmp	r3, #0
   29c58:	movne	r3, #1
   29c5c:	moveq	r3, #0
   29c60:	uxtb	r1, r3
   29c64:	ldr	r2, [fp, #-16]
   29c68:	ldrb	r3, [r2, #28]
   29c6c:	bfi	r3, r1, #4, #1
   29c70:	strb	r3, [r2, #28]
   29c74:	ldr	r3, [fp, #-16]
   29c78:	mov	r2, #0
   29c7c:	str	r2, [r3, #20]
   29c80:	ldr	r0, [fp, #-20]	; 0xffffffec
   29c84:	bl	11144 <strlen@plt>
   29c88:	mov	r2, r0
   29c8c:	ldr	r3, [fp, #-12]
   29c90:	ldr	r1, [fp, #-20]	; 0xffffffec
   29c94:	ldr	r0, [fp, #-16]
   29c98:	bl	2a1d4 <__assert_fail@plt+0x18f94>
   29c9c:	str	r0, [fp, #-8]
   29ca0:	ldr	r3, [fp, #-8]
   29ca4:	cmp	r3, #16
   29ca8:	bne	29cb4 <__assert_fail@plt+0x18a74>
   29cac:	mov	r3, #8
   29cb0:	str	r3, [fp, #-8]
   29cb4:	ldr	r3, [fp, #-8]
   29cb8:	cmp	r3, #0
   29cbc:	moveq	r3, #1
   29cc0:	movne	r3, #0
   29cc4:	uxtb	r3, r3
   29cc8:	cmp	r3, #0
   29ccc:	beq	29cdc <__assert_fail@plt+0x18a9c>
   29cd0:	ldr	r0, [fp, #-16]
   29cd4:	bl	292f4 <__assert_fail@plt+0x180b4>
   29cd8:	b	29cf8 <__assert_fail@plt+0x18ab8>
   29cdc:	ldr	r3, [fp, #-16]
   29ce0:	ldr	r3, [r3, #16]
   29ce4:	mov	r0, r3
   29ce8:	bl	13798 <__assert_fail@plt+0x2558>
   29cec:	ldr	r3, [fp, #-16]
   29cf0:	mov	r2, #0
   29cf4:	str	r2, [r3, #16]
   29cf8:	ldr	r3, [fp, #-8]
   29cfc:	mov	r0, r3
   29d00:	sub	sp, fp, #4
   29d04:	ldr	fp, [sp]
   29d08:	add	sp, sp, #4
   29d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   29d10:	str	fp, [sp, #-8]!
   29d14:	str	lr, [sp, #4]
   29d18:	add	fp, sp, #4
   29d1c:	sub	sp, sp, #32
   29d20:	str	r0, [fp, #-24]	; 0xffffffe8
   29d24:	str	r1, [fp, #-28]	; 0xffffffe4
   29d28:	str	r2, [fp, #-32]	; 0xffffffe0
   29d2c:	str	r3, [fp, #-36]	; 0xffffffdc
   29d30:	mov	r3, #17
   29d34:	str	r3, [fp, #-12]
   29d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29d3c:	lsr	r3, r3, #31
   29d40:	uxtb	r3, r3
   29d44:	cmp	r3, #0
   29d48:	bne	29d6c <__assert_fail@plt+0x18b2c>
   29d4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29d50:	ldr	r3, [fp, #-12]
   29d54:	cmp	r2, r3
   29d58:	movge	r3, #1
   29d5c:	movlt	r3, #0
   29d60:	uxtb	r3, r3
   29d64:	cmp	r3, #0
   29d68:	beq	29d70 <__assert_fail@plt+0x18b30>
   29d6c:	bl	11228 <abort@plt>
   29d70:	movw	r3, #7868	; 0x1ebc
   29d74:	movt	r3, #4
   29d78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29d7c:	ldr	r2, [r3, r2, lsl #2]
   29d80:	movw	r3, #7484	; 0x1d3c
   29d84:	movt	r3, #4
   29d88:	add	r3, r2, r3
   29d8c:	mov	r0, r3
   29d90:	bl	11138 <gettext@plt>
   29d94:	str	r0, [fp, #-16]
   29d98:	ldr	r0, [fp, #-16]
   29d9c:	bl	11144 <strlen@plt>
   29da0:	mov	r3, r0
   29da4:	add	r3, r3, #1
   29da8:	str	r3, [fp, #-20]	; 0xffffffec
   29dac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29db0:	cmp	r3, #0
   29db4:	movne	r3, #1
   29db8:	moveq	r3, #0
   29dbc:	uxtb	r3, r3
   29dc0:	cmp	r3, #0
   29dc4:	beq	29e20 <__assert_fail@plt+0x18be0>
   29dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   29dcc:	str	r3, [fp, #-8]
   29dd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   29dd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29dd8:	cmp	r2, r3
   29ddc:	movhi	r3, #1
   29de0:	movls	r3, #0
   29de4:	uxtb	r3, r3
   29de8:	cmp	r3, #0
   29dec:	beq	29e10 <__assert_fail@plt+0x18bd0>
   29df0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29df4:	sub	r3, r3, #1
   29df8:	str	r3, [fp, #-8]
   29dfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29e00:	ldr	r3, [fp, #-8]
   29e04:	add	r3, r2, r3
   29e08:	mov	r2, #0
   29e0c:	strb	r2, [r3]
   29e10:	ldr	r2, [fp, #-8]
   29e14:	ldr	r1, [fp, #-16]
   29e18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e1c:	bl	10fe8 <memcpy@plt>
   29e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   29e24:	mov	r0, r3
   29e28:	sub	sp, fp, #4
   29e2c:	ldr	fp, [sp]
   29e30:	add	sp, sp, #4
   29e34:	pop	{pc}		; (ldr pc, [sp], #4)
   29e38:	str	fp, [sp, #-8]!
   29e3c:	str	lr, [sp, #4]
   29e40:	add	fp, sp, #4
   29e44:	sub	sp, sp, #24
   29e48:	str	r0, [fp, #-24]	; 0xffffffe8
   29e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29e50:	ldr	r3, [r3]
   29e54:	cmp	r3, #0
   29e58:	beq	29ea4 <__assert_fail@plt+0x18c64>
   29e5c:	mov	r3, #0
   29e60:	str	r3, [fp, #-8]
   29e64:	b	29e90 <__assert_fail@plt+0x18c50>
   29e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29e6c:	ldr	r2, [r3]
   29e70:	ldr	r3, [fp, #-8]
   29e74:	lsl	r3, r3, #3
   29e78:	add	r3, r2, r3
   29e7c:	mov	r0, r3
   29e80:	bl	3224c <__assert_fail@plt+0x2100c>
   29e84:	ldr	r3, [fp, #-8]
   29e88:	add	r3, r3, #1
   29e8c:	str	r3, [fp, #-8]
   29e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29e94:	ldr	r2, [r3, #8]
   29e98:	ldr	r3, [fp, #-8]
   29e9c:	cmp	r2, r3
   29ea0:	bhi	29e68 <__assert_fail@plt+0x18c28>
   29ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ea8:	ldr	r3, [r3, #12]
   29eac:	mov	r0, r3
   29eb0:	bl	13798 <__assert_fail@plt+0x2558>
   29eb4:	mov	r3, #0
   29eb8:	str	r3, [fp, #-8]
   29ebc:	b	29f80 <__assert_fail@plt+0x18d40>
   29ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ec4:	ldr	r3, [r3, #24]
   29ec8:	cmp	r3, #0
   29ecc:	beq	29efc <__assert_fail@plt+0x18cbc>
   29ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ed4:	ldr	r1, [r3, #24]
   29ed8:	ldr	r2, [fp, #-8]
   29edc:	mov	r3, r2
   29ee0:	lsl	r3, r3, #1
   29ee4:	add	r3, r3, r2
   29ee8:	lsl	r3, r3, #2
   29eec:	add	r3, r1, r3
   29ef0:	ldr	r3, [r3, #8]
   29ef4:	mov	r0, r3
   29ef8:	bl	13798 <__assert_fail@plt+0x2558>
   29efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f00:	ldr	r3, [r3, #28]
   29f04:	cmp	r3, #0
   29f08:	beq	29f38 <__assert_fail@plt+0x18cf8>
   29f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f10:	ldr	r1, [r3, #28]
   29f14:	ldr	r2, [fp, #-8]
   29f18:	mov	r3, r2
   29f1c:	lsl	r3, r3, #1
   29f20:	add	r3, r3, r2
   29f24:	lsl	r3, r3, #2
   29f28:	add	r3, r1, r3
   29f2c:	ldr	r3, [r3, #8]
   29f30:	mov	r0, r3
   29f34:	bl	13798 <__assert_fail@plt+0x2558>
   29f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f3c:	ldr	r3, [r3, #20]
   29f40:	cmp	r3, #0
   29f44:	beq	29f74 <__assert_fail@plt+0x18d34>
   29f48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f4c:	ldr	r1, [r3, #20]
   29f50:	ldr	r2, [fp, #-8]
   29f54:	mov	r3, r2
   29f58:	lsl	r3, r3, #1
   29f5c:	add	r3, r3, r2
   29f60:	lsl	r3, r3, #2
   29f64:	add	r3, r1, r3
   29f68:	ldr	r3, [r3, #8]
   29f6c:	mov	r0, r3
   29f70:	bl	13798 <__assert_fail@plt+0x2558>
   29f74:	ldr	r3, [fp, #-8]
   29f78:	add	r3, r3, #1
   29f7c:	str	r3, [fp, #-8]
   29f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f84:	ldr	r2, [r3, #8]
   29f88:	ldr	r3, [fp, #-8]
   29f8c:	cmp	r2, r3
   29f90:	bhi	29ec0 <__assert_fail@plt+0x18c80>
   29f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f98:	ldr	r3, [r3, #20]
   29f9c:	mov	r0, r3
   29fa0:	bl	13798 <__assert_fail@plt+0x2558>
   29fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29fa8:	ldr	r3, [r3, #24]
   29fac:	mov	r0, r3
   29fb0:	bl	13798 <__assert_fail@plt+0x2558>
   29fb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29fb8:	ldr	r3, [r3, #28]
   29fbc:	mov	r0, r3
   29fc0:	bl	13798 <__assert_fail@plt+0x2558>
   29fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29fc8:	ldr	r3, [r3]
   29fcc:	mov	r0, r3
   29fd0:	bl	13798 <__assert_fail@plt+0x2558>
   29fd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29fd8:	ldr	r3, [r3, #32]
   29fdc:	cmp	r3, #0
   29fe0:	beq	2a094 <__assert_fail@plt+0x18e54>
   29fe4:	mov	r3, #0
   29fe8:	str	r3, [fp, #-8]
   29fec:	b	2a080 <__assert_fail@plt+0x18e40>
   29ff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ff4:	ldr	r1, [r3, #32]
   29ff8:	ldr	r2, [fp, #-8]
   29ffc:	mov	r3, r2
   2a000:	lsl	r3, r3, #1
   2a004:	add	r3, r3, r2
   2a008:	lsl	r3, r3, #2
   2a00c:	add	r3, r1, r3
   2a010:	str	r3, [fp, #-16]
   2a014:	mov	r3, #0
   2a018:	str	r3, [fp, #-12]
   2a01c:	b	2a050 <__assert_fail@plt+0x18e10>
   2a020:	ldr	r3, [fp, #-16]
   2a024:	ldr	r2, [r3, #8]
   2a028:	ldr	r3, [fp, #-12]
   2a02c:	lsl	r3, r3, #2
   2a030:	add	r3, r2, r3
   2a034:	ldr	r3, [r3]
   2a038:	str	r3, [fp, #-20]	; 0xffffffec
   2a03c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a040:	bl	28b54 <__assert_fail@plt+0x17914>
   2a044:	ldr	r3, [fp, #-12]
   2a048:	add	r3, r3, #1
   2a04c:	str	r3, [fp, #-12]
   2a050:	ldr	r3, [fp, #-16]
   2a054:	ldr	r3, [r3]
   2a058:	ldr	r2, [fp, #-12]
   2a05c:	cmp	r2, r3
   2a060:	blt	2a020 <__assert_fail@plt+0x18de0>
   2a064:	ldr	r3, [fp, #-16]
   2a068:	ldr	r3, [r3, #8]
   2a06c:	mov	r0, r3
   2a070:	bl	13798 <__assert_fail@plt+0x2558>
   2a074:	ldr	r3, [fp, #-8]
   2a078:	add	r3, r3, #1
   2a07c:	str	r3, [fp, #-8]
   2a080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a084:	ldr	r2, [r3, #68]	; 0x44
   2a088:	ldr	r3, [fp, #-8]
   2a08c:	cmp	r2, r3
   2a090:	bcs	29ff0 <__assert_fail@plt+0x18db0>
   2a094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a098:	ldr	r3, [r3, #32]
   2a09c:	mov	r0, r3
   2a0a0:	bl	13798 <__assert_fail@plt+0x2558>
   2a0a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a0a8:	ldr	r2, [r3, #60]	; 0x3c
   2a0ac:	movw	r3, #7936	; 0x1f00
   2a0b0:	movt	r3, #4
   2a0b4:	cmp	r2, r3
   2a0b8:	beq	2a0cc <__assert_fail@plt+0x18e8c>
   2a0bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a0c0:	ldr	r3, [r3, #60]	; 0x3c
   2a0c4:	mov	r0, r3
   2a0c8:	bl	13798 <__assert_fail@plt+0x2558>
   2a0cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a0d0:	ldr	r3, [r3, #132]	; 0x84
   2a0d4:	mov	r0, r3
   2a0d8:	bl	13798 <__assert_fail@plt+0x2558>
   2a0dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a0e0:	bl	13798 <__assert_fail@plt+0x2558>
   2a0e4:	nop	{0}
   2a0e8:	sub	sp, fp, #4
   2a0ec:	ldr	fp, [sp]
   2a0f0:	add	sp, sp, #4
   2a0f4:	pop	{pc}		; (ldr pc, [sp], #4)
   2a0f8:	str	fp, [sp, #-8]!
   2a0fc:	str	lr, [sp, #4]
   2a100:	add	fp, sp, #4
   2a104:	sub	sp, sp, #16
   2a108:	str	r0, [fp, #-16]
   2a10c:	ldr	r3, [fp, #-16]
   2a110:	ldr	r3, [r3]
   2a114:	str	r3, [fp, #-8]
   2a118:	ldr	r3, [fp, #-8]
   2a11c:	cmp	r3, #0
   2a120:	movne	r3, #1
   2a124:	moveq	r3, #0
   2a128:	uxtb	r3, r3
   2a12c:	cmp	r3, #0
   2a130:	beq	2a170 <__assert_fail@plt+0x18f30>
   2a134:	movw	r3, #0
   2a138:	movt	r3, #0
   2a13c:	cmp	r3, #0
   2a140:	bne	2a154 <__assert_fail@plt+0x18f14>
   2a144:	movw	r3, #0
   2a148:	movt	r3, #0
   2a14c:	cmp	r3, #0
   2a150:	beq	2a168 <__assert_fail@plt+0x18f28>
   2a154:	ldr	r3, [fp, #-8]
   2a158:	add	r3, r3, #136	; 0x88
   2a15c:	mov	r0, r3
   2a160:	bl	10f94 <pthread_mutex_destroy@plt>
   2a164:	nop	{0}
   2a168:	ldr	r0, [fp, #-8]
   2a16c:	bl	29e38 <__assert_fail@plt+0x18bf8>
   2a170:	ldr	r3, [fp, #-16]
   2a174:	mov	r2, #0
   2a178:	str	r2, [r3]
   2a17c:	ldr	r3, [fp, #-16]
   2a180:	mov	r2, #0
   2a184:	str	r2, [r3, #4]
   2a188:	ldr	r3, [fp, #-16]
   2a18c:	ldr	r3, [r3, #16]
   2a190:	mov	r0, r3
   2a194:	bl	13798 <__assert_fail@plt+0x2558>
   2a198:	ldr	r3, [fp, #-16]
   2a19c:	mov	r2, #0
   2a1a0:	str	r2, [r3, #16]
   2a1a4:	ldr	r3, [fp, #-16]
   2a1a8:	ldr	r3, [r3, #20]
   2a1ac:	mov	r0, r3
   2a1b0:	bl	13798 <__assert_fail@plt+0x2558>
   2a1b4:	ldr	r3, [fp, #-16]
   2a1b8:	mov	r2, #0
   2a1bc:	str	r2, [r3, #20]
   2a1c0:	nop	{0}
   2a1c4:	sub	sp, fp, #4
   2a1c8:	ldr	fp, [sp]
   2a1cc:	add	sp, sp, #4
   2a1d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a1d4:	str	fp, [sp, #-8]!
   2a1d8:	str	lr, [sp, #4]
   2a1dc:	add	fp, sp, #4
   2a1e0:	sub	sp, sp, #120	; 0x78
   2a1e4:	str	r0, [fp, #-104]	; 0xffffff98
   2a1e8:	str	r1, [fp, #-108]	; 0xffffff94
   2a1ec:	str	r2, [fp, #-112]	; 0xffffff90
   2a1f0:	str	r3, [fp, #-116]	; 0xffffff8c
   2a1f4:	mov	r3, #0
   2a1f8:	str	r3, [fp, #-12]
   2a1fc:	ldr	r2, [fp, #-104]	; 0xffffff98
   2a200:	ldrb	r3, [r2, #28]
   2a204:	bfc	r3, #3, #1
   2a208:	strb	r3, [r2, #28]
   2a20c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a210:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2a214:	str	r2, [r3, #12]
   2a218:	ldr	r2, [fp, #-104]	; 0xffffff98
   2a21c:	ldrb	r3, [r2, #28]
   2a220:	bfc	r3, #6, #1
   2a224:	strb	r3, [r2, #28]
   2a228:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a22c:	ldrb	r3, [r3, #28]
   2a230:	ubfx	r3, r3, #6, #1
   2a234:	uxtb	r1, r3
   2a238:	ldr	r2, [fp, #-104]	; 0xffffff98
   2a23c:	ldrb	r3, [r2, #28]
   2a240:	bfi	r3, r1, #5, #1
   2a244:	strb	r3, [r2, #28]
   2a248:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a24c:	mov	r2, #0
   2a250:	str	r2, [r3, #8]
   2a254:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a258:	mov	r2, #0
   2a25c:	str	r2, [r3, #24]
   2a260:	ldr	r2, [fp, #-104]	; 0xffffff98
   2a264:	ldrb	r3, [r2, #28]
   2a268:	bfc	r3, #0, #1
   2a26c:	strb	r3, [r2, #28]
   2a270:	ldr	r2, [fp, #-104]	; 0xffffff98
   2a274:	ldrb	r3, [r2, #28]
   2a278:	bfc	r3, #1, #2
   2a27c:	strb	r3, [r2, #28]
   2a280:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a284:	ldr	r3, [r3]
   2a288:	str	r3, [fp, #-8]
   2a28c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a290:	ldr	r3, [r3, #4]
   2a294:	cmp	r3, #159	; 0x9f
   2a298:	movls	r3, #1
   2a29c:	movhi	r3, #0
   2a2a0:	uxtb	r3, r3
   2a2a4:	cmp	r3, #0
   2a2a8:	beq	2a2f0 <__assert_fail@plt+0x190b0>
   2a2ac:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a2b0:	ldr	r3, [r3]
   2a2b4:	mov	r1, #160	; 0xa0
   2a2b8:	mov	r0, r3
   2a2bc:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   2a2c0:	str	r0, [fp, #-8]
   2a2c4:	ldr	r3, [fp, #-8]
   2a2c8:	cmp	r3, #0
   2a2cc:	bne	2a2d8 <__assert_fail@plt+0x19098>
   2a2d0:	mov	r3, #12
   2a2d4:	b	2a62c <__assert_fail@plt+0x193ec>
   2a2d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a2dc:	mov	r2, #160	; 0xa0
   2a2e0:	str	r2, [r3, #4]
   2a2e4:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a2e8:	ldr	r2, [fp, #-8]
   2a2ec:	str	r2, [r3]
   2a2f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a2f4:	mov	r2, #160	; 0xa0
   2a2f8:	str	r2, [r3, #8]
   2a2fc:	ldr	r1, [fp, #-112]	; 0xffffff90
   2a300:	ldr	r0, [fp, #-8]
   2a304:	bl	2a640 <__assert_fail@plt+0x19400>
   2a308:	mov	r3, r0
   2a30c:	str	r3, [fp, #-12]
   2a310:	ldr	r3, [fp, #-12]
   2a314:	cmp	r3, #0
   2a318:	moveq	r3, #1
   2a31c:	movne	r3, #0
   2a320:	uxtb	r3, r3
   2a324:	cmp	r3, #0
   2a328:	beq	2a3ac <__assert_fail@plt+0x1916c>
   2a32c:	movw	r3, #0
   2a330:	movt	r3, #0
   2a334:	cmp	r3, #0
   2a338:	bne	2a34c <__assert_fail@plt+0x1910c>
   2a33c:	movw	r3, #0
   2a340:	movt	r3, #0
   2a344:	cmp	r3, #0
   2a348:	beq	2a354 <__assert_fail@plt+0x19114>
   2a34c:	mov	r3, #1
   2a350:	b	2a358 <__assert_fail@plt+0x19118>
   2a354:	mov	r3, #0
   2a358:	cmp	r3, #0
   2a35c:	beq	2a398 <__assert_fail@plt+0x19158>
   2a360:	ldr	r3, [fp, #-8]
   2a364:	add	r3, r3, #136	; 0x88
   2a368:	mov	r1, #0
   2a36c:	mov	r0, r3
   2a370:	bl	11000 <pthread_mutex_init@plt>
   2a374:	mov	r3, r0
   2a378:	cmp	r3, #0
   2a37c:	movne	r3, #1
   2a380:	moveq	r3, #0
   2a384:	uxtb	r3, r3
   2a388:	cmp	r3, #0
   2a38c:	beq	2a398 <__assert_fail@plt+0x19158>
   2a390:	mov	r3, #1
   2a394:	b	2a39c <__assert_fail@plt+0x1915c>
   2a398:	mov	r3, #0
   2a39c:	cmp	r3, #0
   2a3a0:	beq	2a3ac <__assert_fail@plt+0x1916c>
   2a3a4:	mov	r3, #12
   2a3a8:	str	r3, [fp, #-12]
   2a3ac:	ldr	r3, [fp, #-12]
   2a3b0:	cmp	r3, #0
   2a3b4:	movne	r3, #1
   2a3b8:	moveq	r3, #0
   2a3bc:	uxtb	r3, r3
   2a3c0:	cmp	r3, #0
   2a3c4:	beq	2a3f0 <__assert_fail@plt+0x191b0>
   2a3c8:	ldr	r0, [fp, #-8]
   2a3cc:	bl	29e38 <__assert_fail@plt+0x18bf8>
   2a3d0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a3d4:	mov	r2, #0
   2a3d8:	str	r2, [r3]
   2a3dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a3e0:	mov	r2, #0
   2a3e4:	str	r2, [r3, #4]
   2a3e8:	ldr	r3, [fp, #-12]
   2a3ec:	b	2a62c <__assert_fail@plt+0x193ec>
   2a3f0:	ldr	r1, [fp, #-112]	; 0xffffff90
   2a3f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a3f8:	ldr	ip, [r3, #20]
   2a3fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2a400:	and	r3, r3, #4194304	; 0x400000
   2a404:	cmp	r3, #0
   2a408:	movne	r3, #1
   2a40c:	moveq	r3, #0
   2a410:	uxtb	r3, r3
   2a414:	sub	r0, fp, #96	; 0x60
   2a418:	ldr	r2, [fp, #-8]
   2a41c:	str	r2, [sp, #4]
   2a420:	str	r3, [sp]
   2a424:	mov	r3, ip
   2a428:	mov	r2, r1
   2a42c:	ldr	r1, [fp, #-108]	; 0xffffff94
   2a430:	bl	242ac <__assert_fail@plt+0x1306c>
   2a434:	mov	r3, r0
   2a438:	str	r3, [fp, #-12]
   2a43c:	ldr	r3, [fp, #-12]
   2a440:	cmp	r3, #0
   2a444:	movne	r3, #1
   2a448:	moveq	r3, #0
   2a44c:	uxtb	r3, r3
   2a450:	cmp	r3, #0
   2a454:	beq	2a4dc <__assert_fail@plt+0x1929c>
   2a458:	nop	{0}
   2a45c:	b	2a46c <__assert_fail@plt+0x1922c>
   2a460:	nop	{0}
   2a464:	b	2a46c <__assert_fail@plt+0x1922c>
   2a468:	nop	{0}
   2a46c:	ldr	r0, [fp, #-104]	; 0xffffff98
   2a470:	bl	2ac70 <__assert_fail@plt+0x19a30>
   2a474:	sub	r3, fp, #96	; 0x60
   2a478:	mov	r0, r3
   2a47c:	bl	269b8 <__assert_fail@plt+0x15778>
   2a480:	movw	r3, #0
   2a484:	movt	r3, #0
   2a488:	cmp	r3, #0
   2a48c:	bne	2a4a0 <__assert_fail@plt+0x19260>
   2a490:	movw	r3, #0
   2a494:	movt	r3, #0
   2a498:	cmp	r3, #0
   2a49c:	beq	2a4b4 <__assert_fail@plt+0x19274>
   2a4a0:	ldr	r3, [fp, #-8]
   2a4a4:	add	r3, r3, #136	; 0x88
   2a4a8:	mov	r0, r3
   2a4ac:	bl	10f94 <pthread_mutex_destroy@plt>
   2a4b0:	nop	{0}
   2a4b4:	ldr	r0, [fp, #-8]
   2a4b8:	bl	29e38 <__assert_fail@plt+0x18bf8>
   2a4bc:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a4c0:	mov	r2, #0
   2a4c4:	str	r2, [r3]
   2a4c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a4cc:	mov	r2, #0
   2a4d0:	str	r2, [r3, #4]
   2a4d4:	ldr	r3, [fp, #-12]
   2a4d8:	b	2a62c <__assert_fail@plt+0x193ec>
   2a4dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a4e0:	mov	r2, #0
   2a4e4:	str	r2, [r3, #24]
   2a4e8:	sub	r3, fp, #12
   2a4ec:	sub	r0, fp, #96	; 0x60
   2a4f0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2a4f4:	ldr	r1, [fp, #-104]	; 0xffffff98
   2a4f8:	bl	2e358 <__assert_fail@plt+0x1d118>
   2a4fc:	mov	r2, r0
   2a500:	ldr	r3, [fp, #-8]
   2a504:	str	r2, [r3, #52]	; 0x34
   2a508:	ldr	r3, [fp, #-8]
   2a50c:	ldr	r3, [r3, #52]	; 0x34
   2a510:	cmp	r3, #0
   2a514:	moveq	r3, #1
   2a518:	movne	r3, #0
   2a51c:	uxtb	r3, r3
   2a520:	cmp	r3, #0
   2a524:	bne	2a460 <__assert_fail@plt+0x19220>
   2a528:	ldr	r0, [fp, #-104]	; 0xffffff98
   2a52c:	bl	2b42c <__assert_fail@plt+0x1a1ec>
   2a530:	mov	r3, r0
   2a534:	str	r3, [fp, #-12]
   2a538:	ldr	r3, [fp, #-12]
   2a53c:	cmp	r3, #0
   2a540:	movne	r3, #1
   2a544:	moveq	r3, #0
   2a548:	uxtb	r3, r3
   2a54c:	cmp	r3, #0
   2a550:	bne	2a468 <__assert_fail@plt+0x19228>
   2a554:	ldr	r3, [fp, #-8]
   2a558:	ldrb	r3, [r3, #88]	; 0x58
   2a55c:	and	r3, r3, #4
   2a560:	uxtb	r3, r3
   2a564:	cmp	r3, #0
   2a568:	beq	2a594 <__assert_fail@plt+0x19354>
   2a56c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2a570:	and	r3, r3, #4194304	; 0x400000
   2a574:	cmp	r3, #0
   2a578:	bne	2a594 <__assert_fail@plt+0x19354>
   2a57c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a580:	ldr	r3, [r3, #20]
   2a584:	cmp	r3, #0
   2a588:	bne	2a594 <__assert_fail@plt+0x19354>
   2a58c:	ldr	r0, [fp, #-8]
   2a590:	bl	2b10c <__assert_fail@plt+0x19ecc>
   2a594:	ldr	r0, [fp, #-8]
   2a598:	bl	2ad1c <__assert_fail@plt+0x19adc>
   2a59c:	mov	r3, r0
   2a5a0:	str	r3, [fp, #-12]
   2a5a4:	ldr	r0, [fp, #-104]	; 0xffffff98
   2a5a8:	bl	2ac70 <__assert_fail@plt+0x19a30>
   2a5ac:	sub	r3, fp, #96	; 0x60
   2a5b0:	mov	r0, r3
   2a5b4:	bl	269b8 <__assert_fail@plt+0x15778>
   2a5b8:	ldr	r3, [fp, #-12]
   2a5bc:	cmp	r3, #0
   2a5c0:	movne	r3, #1
   2a5c4:	moveq	r3, #0
   2a5c8:	uxtb	r3, r3
   2a5cc:	cmp	r3, #0
   2a5d0:	beq	2a628 <__assert_fail@plt+0x193e8>
   2a5d4:	movw	r3, #0
   2a5d8:	movt	r3, #0
   2a5dc:	cmp	r3, #0
   2a5e0:	bne	2a5f4 <__assert_fail@plt+0x193b4>
   2a5e4:	movw	r3, #0
   2a5e8:	movt	r3, #0
   2a5ec:	cmp	r3, #0
   2a5f0:	beq	2a608 <__assert_fail@plt+0x193c8>
   2a5f4:	ldr	r3, [fp, #-8]
   2a5f8:	add	r3, r3, #136	; 0x88
   2a5fc:	mov	r0, r3
   2a600:	bl	10f94 <pthread_mutex_destroy@plt>
   2a604:	nop	{0}
   2a608:	ldr	r0, [fp, #-8]
   2a60c:	bl	29e38 <__assert_fail@plt+0x18bf8>
   2a610:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a614:	mov	r2, #0
   2a618:	str	r2, [r3]
   2a61c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2a620:	mov	r2, #0
   2a624:	str	r2, [r3, #4]
   2a628:	ldr	r3, [fp, #-12]
   2a62c:	mov	r0, r3
   2a630:	sub	sp, fp, #4
   2a634:	ldr	fp, [sp]
   2a638:	add	sp, sp, #4
   2a63c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a640:	str	fp, [sp, #-8]!
   2a644:	str	lr, [sp, #4]
   2a648:	add	fp, sp, #4
   2a64c:	sub	sp, sp, #40	; 0x28
   2a650:	str	r0, [fp, #-40]	; 0xffffffd8
   2a654:	str	r1, [fp, #-44]	; 0xffffffd4
   2a658:	mov	r3, #4
   2a65c:	str	r3, [fp, #-24]	; 0xffffffe8
   2a660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a664:	cmp	r3, #12
   2a668:	bls	2a678 <__assert_fail@plt+0x19438>
   2a66c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a670:	cmp	r3, #8
   2a674:	bls	2a6dc <__assert_fail@plt+0x1949c>
   2a678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a67c:	cmp	r3, #12
   2a680:	bls	2a6dc <__assert_fail@plt+0x1949c>
   2a684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a688:	cmp	r3, #12
   2a68c:	bls	2a6dc <__assert_fail@plt+0x1949c>
   2a690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a694:	cmp	r3, #12
   2a698:	bls	2a6a8 <__assert_fail@plt+0x19468>
   2a69c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a6a0:	cmp	r3, #8
   2a6a4:	bls	2a6d0 <__assert_fail@plt+0x19490>
   2a6a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a6ac:	cmp	r3, #12
   2a6b0:	bls	2a6c8 <__assert_fail@plt+0x19488>
   2a6b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a6b8:	cmp	r3, #8
   2a6bc:	movcs	r3, r3
   2a6c0:	movcc	r3, #8
   2a6c4:	b	2a6d8 <__assert_fail@plt+0x19498>
   2a6c8:	mov	r3, #12
   2a6cc:	b	2a6d8 <__assert_fail@plt+0x19498>
   2a6d0:	mov	r3, #8
   2a6d4:	b	2a6e0 <__assert_fail@plt+0x194a0>
   2a6d8:	b	2a6e0 <__assert_fail@plt+0x194a0>
   2a6dc:	mov	r3, #12
   2a6e0:	str	r3, [fp, #-28]	; 0xffffffe4
   2a6e4:	mov	r2, #160	; 0xa0
   2a6e8:	mov	r1, #0
   2a6ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a6f0:	bl	1118c <memset@plt>
   2a6f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a6f8:	mov	r2, #31
   2a6fc:	str	r2, [r3, #64]	; 0x40
   2a700:	mvn	r2, #0
   2a704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a708:	udiv	r3, r2, r3
   2a70c:	cmp	r3, #0
   2a710:	blt	2a728 <__assert_fail@plt+0x194e8>
   2a714:	mvn	r2, #0
   2a718:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a71c:	udiv	r3, r2, r3
   2a720:	lsr	r3, r3, #1
   2a724:	b	2a72c <__assert_fail@plt+0x194ec>
   2a728:	mvn	r3, #-1073741824	; 0xc0000000
   2a72c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a730:	cmp	r3, r2
   2a734:	movls	r3, #1
   2a738:	movhi	r3, #0
   2a73c:	uxtb	r3, r3
   2a740:	cmp	r3, #0
   2a744:	beq	2a750 <__assert_fail@plt+0x19510>
   2a748:	mov	r3, #12
   2a74c:	b	2aa80 <__assert_fail@plt+0x19840>
   2a750:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a754:	add	r2, r3, #1
   2a758:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a75c:	str	r2, [r3, #4]
   2a760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a764:	ldr	r3, [r3, #4]
   2a768:	lsl	r3, r3, #3
   2a76c:	mov	r0, r3
   2a770:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   2a774:	mov	r3, r0
   2a778:	mov	r2, r3
   2a77c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a780:	str	r2, [r3]
   2a784:	mov	r3, #1
   2a788:	str	r3, [fp, #-8]
   2a78c:	ldr	r2, [fp, #-8]
   2a790:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a794:	cmp	r2, r3
   2a798:	bhi	2a7ac <__assert_fail@plt+0x1956c>
   2a79c:	ldr	r3, [fp, #-8]
   2a7a0:	lsl	r3, r3, #1
   2a7a4:	str	r3, [fp, #-8]
   2a7a8:	b	2a78c <__assert_fail@plt+0x1954c>
   2a7ac:	nop	{0}
   2a7b0:	ldr	r1, [fp, #-8]
   2a7b4:	mov	r0, #12
   2a7b8:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   2a7bc:	mov	r3, r0
   2a7c0:	mov	r2, r3
   2a7c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a7c8:	str	r2, [r3, #32]
   2a7cc:	ldr	r3, [fp, #-8]
   2a7d0:	sub	r2, r3, #1
   2a7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a7d8:	str	r2, [r3, #68]	; 0x44
   2a7dc:	bl	11084 <__ctype_get_mb_cur_max@plt>
   2a7e0:	mov	r3, r0
   2a7e4:	mov	r2, r3
   2a7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a7ec:	str	r2, [r3, #92]	; 0x5c
   2a7f0:	mov	r0, #14
   2a7f4:	bl	111f8 <nl_langinfo@plt>
   2a7f8:	str	r0, [fp, #-32]	; 0xffffffe0
   2a7fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a800:	ldrb	r3, [r3]
   2a804:	cmp	r3, #85	; 0x55
   2a808:	beq	2a81c <__assert_fail@plt+0x195dc>
   2a80c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a810:	ldrb	r3, [r3]
   2a814:	cmp	r3, #117	; 0x75
   2a818:	bne	2a8c0 <__assert_fail@plt+0x19680>
   2a81c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a820:	add	r3, r3, #1
   2a824:	ldrb	r3, [r3]
   2a828:	cmp	r3, #84	; 0x54
   2a82c:	beq	2a844 <__assert_fail@plt+0x19604>
   2a830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a834:	add	r3, r3, #1
   2a838:	ldrb	r3, [r3]
   2a83c:	cmp	r3, #116	; 0x74
   2a840:	bne	2a8c0 <__assert_fail@plt+0x19680>
   2a844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a848:	add	r3, r3, #2
   2a84c:	ldrb	r3, [r3]
   2a850:	cmp	r3, #70	; 0x46
   2a854:	beq	2a86c <__assert_fail@plt+0x1962c>
   2a858:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a85c:	add	r3, r3, #2
   2a860:	ldrb	r3, [r3]
   2a864:	cmp	r3, #102	; 0x66
   2a868:	bne	2a8c0 <__assert_fail@plt+0x19680>
   2a86c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a870:	add	r3, r3, #3
   2a874:	ldrb	r3, [r3]
   2a878:	cmp	r3, #45	; 0x2d
   2a87c:	bne	2a888 <__assert_fail@plt+0x19648>
   2a880:	mov	r3, #4
   2a884:	b	2a88c <__assert_fail@plt+0x1964c>
   2a888:	mov	r3, #3
   2a88c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a890:	add	r3, r2, r3
   2a894:	movw	r1, #7968	; 0x1f20
   2a898:	movt	r1, #4
   2a89c:	mov	r0, r3
   2a8a0:	bl	10f70 <strcmp@plt>
   2a8a4:	mov	r3, r0
   2a8a8:	cmp	r3, #0
   2a8ac:	bne	2a8c0 <__assert_fail@plt+0x19680>
   2a8b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a8b4:	ldrb	r3, [r2, #88]	; 0x58
   2a8b8:	orr	r3, r3, #4
   2a8bc:	strb	r3, [r2, #88]	; 0x58
   2a8c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a8c4:	ldrb	r3, [r2, #88]	; 0x58
   2a8c8:	bfc	r3, #3, #1
   2a8cc:	strb	r3, [r2, #88]	; 0x58
   2a8d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a8d4:	ldr	r3, [r3, #92]	; 0x5c
   2a8d8:	cmp	r3, #1
   2a8dc:	ble	2aa34 <__assert_fail@plt+0x197f4>
   2a8e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a8e4:	ldrb	r3, [r3, #88]	; 0x58
   2a8e8:	and	r3, r3, #4
   2a8ec:	uxtb	r3, r3
   2a8f0:	cmp	r3, #0
   2a8f4:	beq	2a90c <__assert_fail@plt+0x196cc>
   2a8f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a8fc:	movw	r3, #7936	; 0x1f00
   2a900:	movt	r3, #4
   2a904:	str	r3, [r2, #60]	; 0x3c
   2a908:	b	2aa34 <__assert_fail@plt+0x197f4>
   2a90c:	mov	r1, #1
   2a910:	mov	r0, #32
   2a914:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   2a918:	mov	r3, r0
   2a91c:	mov	r2, r3
   2a920:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a924:	str	r2, [r3, #60]	; 0x3c
   2a928:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a92c:	ldr	r3, [r3, #60]	; 0x3c
   2a930:	cmp	r3, #0
   2a934:	moveq	r3, #1
   2a938:	movne	r3, #0
   2a93c:	uxtb	r3, r3
   2a940:	cmp	r3, #0
   2a944:	beq	2a950 <__assert_fail@plt+0x19710>
   2a948:	mov	r3, #12
   2a94c:	b	2aa80 <__assert_fail@plt+0x19840>
   2a950:	mov	r3, #0
   2a954:	str	r3, [fp, #-12]
   2a958:	mov	r3, #0
   2a95c:	str	r3, [fp, #-20]	; 0xffffffec
   2a960:	b	2aa28 <__assert_fail@plt+0x197e8>
   2a964:	mov	r3, #0
   2a968:	str	r3, [fp, #-16]
   2a96c:	b	2aa10 <__assert_fail@plt+0x197d0>
   2a970:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a974:	bl	11198 <btowc@plt>
   2a978:	str	r0, [fp, #-36]	; 0xffffffdc
   2a97c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a980:	cmn	r3, #1
   2a984:	beq	2a9c8 <__assert_fail@plt+0x19788>
   2a988:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a98c:	ldr	r2, [r3, #60]	; 0x3c
   2a990:	ldr	r3, [fp, #-12]
   2a994:	lsl	r3, r3, #2
   2a998:	add	r3, r2, r3
   2a99c:	ldr	r1, [r3]
   2a9a0:	mov	r2, #1
   2a9a4:	ldr	r3, [fp, #-16]
   2a9a8:	lsl	r2, r2, r3
   2a9ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a9b0:	ldr	r0, [r3, #60]	; 0x3c
   2a9b4:	ldr	r3, [fp, #-12]
   2a9b8:	lsl	r3, r3, #2
   2a9bc:	add	r3, r0, r3
   2a9c0:	orr	r2, r1, r2
   2a9c4:	str	r2, [r3]
   2a9c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a9cc:	bic	r3, r3, #127	; 0x7f
   2a9d0:	cmp	r3, #0
   2a9d4:	bne	2a9f8 <__assert_fail@plt+0x197b8>
   2a9d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a9dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a9e0:	cmp	r2, r3
   2a9e4:	beq	2a9f8 <__assert_fail@plt+0x197b8>
   2a9e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a9ec:	ldrb	r3, [r2, #88]	; 0x58
   2a9f0:	orr	r3, r3, #8
   2a9f4:	strb	r3, [r2, #88]	; 0x58
   2a9f8:	ldr	r3, [fp, #-16]
   2a9fc:	add	r3, r3, #1
   2aa00:	str	r3, [fp, #-16]
   2aa04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa08:	add	r3, r3, #1
   2aa0c:	str	r3, [fp, #-20]	; 0xffffffec
   2aa10:	ldr	r3, [fp, #-16]
   2aa14:	cmp	r3, #31
   2aa18:	ble	2a970 <__assert_fail@plt+0x19730>
   2aa1c:	ldr	r3, [fp, #-12]
   2aa20:	add	r3, r3, #1
   2aa24:	str	r3, [fp, #-12]
   2aa28:	ldr	r3, [fp, #-12]
   2aa2c:	cmp	r3, #7
   2aa30:	ble	2a964 <__assert_fail@plt+0x19724>
   2aa34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aa38:	ldr	r3, [r3]
   2aa3c:	cmp	r3, #0
   2aa40:	moveq	r3, #1
   2aa44:	movne	r3, #0
   2aa48:	uxtb	r3, r3
   2aa4c:	cmp	r3, #0
   2aa50:	bne	2aa74 <__assert_fail@plt+0x19834>
   2aa54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aa58:	ldr	r3, [r3, #32]
   2aa5c:	cmp	r3, #0
   2aa60:	moveq	r3, #1
   2aa64:	movne	r3, #0
   2aa68:	uxtb	r3, r3
   2aa6c:	cmp	r3, #0
   2aa70:	beq	2aa7c <__assert_fail@plt+0x1983c>
   2aa74:	mov	r3, #12
   2aa78:	b	2aa80 <__assert_fail@plt+0x19840>
   2aa7c:	mov	r3, #0
   2aa80:	mov	r0, r3
   2aa84:	sub	sp, fp, #4
   2aa88:	ldr	fp, [sp]
   2aa8c:	add	sp, sp, #4
   2aa90:	pop	{pc}		; (ldr pc, [sp], #4)
   2aa94:	str	fp, [sp, #-8]!
   2aa98:	str	lr, [sp, #4]
   2aa9c:	add	fp, sp, #4
   2aaa0:	sub	sp, sp, #40	; 0x28
   2aaa4:	str	r0, [fp, #-40]	; 0xffffffd8
   2aaa8:	mov	r3, #0
   2aaac:	str	r3, [fp, #-8]
   2aab0:	mov	r3, #0
   2aab4:	str	r3, [fp, #-16]
   2aab8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2aabc:	ldrb	r3, [r2, #88]	; 0x58
   2aac0:	orr	r3, r3, #16
   2aac4:	strb	r3, [r2, #88]	; 0x58
   2aac8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aacc:	ldrb	r3, [r3, #88]	; 0x58
   2aad0:	and	r3, r3, #8
   2aad4:	uxtb	r3, r3
   2aad8:	cmp	r3, #0
   2aadc:	moveq	r3, #1
   2aae0:	movne	r3, #0
   2aae4:	uxtb	r3, r3
   2aae8:	cmp	r3, #0
   2aaec:	beq	2abac <__assert_fail@plt+0x1996c>
   2aaf0:	mov	r3, #0
   2aaf4:	str	r3, [fp, #-20]	; 0xffffffec
   2aaf8:	mov	r3, #0
   2aafc:	movt	r3, #1023	; 0x3ff
   2ab00:	str	r3, [fp, #-24]	; 0xffffffe8
   2ab04:	mvn	r3, #2013265921	; 0x78000001
   2ab08:	str	r3, [fp, #-28]	; 0xffffffe4
   2ab0c:	mvn	r3, #-134217727	; 0xf8000001
   2ab10:	str	r3, [fp, #-32]	; 0xffffffe0
   2ab14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab18:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ab1c:	str	r2, [r3, #96]	; 0x60
   2ab20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ab28:	str	r2, [r3, #100]	; 0x64
   2ab2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ab34:	str	r2, [r3, #104]	; 0x68
   2ab38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ab40:	str	r2, [r3, #108]	; 0x6c
   2ab44:	mov	r3, #4
   2ab48:	str	r3, [fp, #-8]
   2ab4c:	mov	r3, #128	; 0x80
   2ab50:	str	r3, [fp, #-16]
   2ab54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ab58:	ldrb	r3, [r3, #88]	; 0x58
   2ab5c:	ubfx	r3, r3, #2, #1
   2ab60:	uxtb	r3, r3
   2ab64:	cmp	r3, #0
   2ab68:	beq	2abac <__assert_fail@plt+0x1996c>
   2ab6c:	ldr	r3, [fp, #-8]
   2ab70:	add	r3, r3, #24
   2ab74:	lsl	r3, r3, #2
   2ab78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ab7c:	add	r0, r2, r3
   2ab80:	ldr	r3, [fp, #-16]
   2ab84:	rsb	r3, r3, #256	; 0x100
   2ab88:	add	r2, r3, #7
   2ab8c:	cmp	r3, #0
   2ab90:	movlt	r3, r2
   2ab94:	movge	r3, r3
   2ab98:	asr	r3, r3, #3
   2ab9c:	mov	r2, r3
   2aba0:	mov	r1, #0
   2aba4:	bl	1118c <memset@plt>
   2aba8:	b	2ac60 <__assert_fail@plt+0x19a20>
   2abac:	nop	{0}
   2abb0:	b	2ac54 <__assert_fail@plt+0x19a14>
   2abb4:	mov	r3, #0
   2abb8:	str	r3, [fp, #-12]
   2abbc:	b	2ac3c <__assert_fail@plt+0x199fc>
   2abc0:	bl	11120 <__ctype_b_loc@plt>
   2abc4:	mov	r3, r0
   2abc8:	ldr	r2, [r3]
   2abcc:	ldr	r3, [fp, #-16]
   2abd0:	lsl	r3, r3, #1
   2abd4:	add	r3, r2, r3
   2abd8:	ldrh	r3, [r3]
   2abdc:	and	r3, r3, #8
   2abe0:	cmp	r3, #0
   2abe4:	bne	2abf4 <__assert_fail@plt+0x199b4>
   2abe8:	ldr	r3, [fp, #-16]
   2abec:	cmp	r3, #95	; 0x5f
   2abf0:	bne	2ac24 <__assert_fail@plt+0x199e4>
   2abf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2abf8:	ldr	r2, [fp, #-8]
   2abfc:	add	r2, r2, #24
   2ac00:	ldr	r2, [r3, r2, lsl #2]
   2ac04:	mov	r1, #1
   2ac08:	ldr	r3, [fp, #-12]
   2ac0c:	lsl	r3, r1, r3
   2ac10:	orr	r1, r2, r3
   2ac14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ac18:	ldr	r2, [fp, #-8]
   2ac1c:	add	r2, r2, #24
   2ac20:	str	r1, [r3, r2, lsl #2]
   2ac24:	ldr	r3, [fp, #-12]
   2ac28:	add	r3, r3, #1
   2ac2c:	str	r3, [fp, #-12]
   2ac30:	ldr	r3, [fp, #-16]
   2ac34:	add	r3, r3, #1
   2ac38:	str	r3, [fp, #-16]
   2ac3c:	ldr	r3, [fp, #-12]
   2ac40:	cmp	r3, #31
   2ac44:	ble	2abc0 <__assert_fail@plt+0x19980>
   2ac48:	ldr	r3, [fp, #-8]
   2ac4c:	add	r3, r3, #1
   2ac50:	str	r3, [fp, #-8]
   2ac54:	ldr	r3, [fp, #-8]
   2ac58:	cmp	r3, #7
   2ac5c:	ble	2abb4 <__assert_fail@plt+0x19974>
   2ac60:	sub	sp, fp, #4
   2ac64:	ldr	fp, [sp]
   2ac68:	add	sp, sp, #4
   2ac6c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ac70:	str	fp, [sp, #-8]!
   2ac74:	str	lr, [sp, #4]
   2ac78:	add	fp, sp, #4
   2ac7c:	sub	sp, sp, #24
   2ac80:	str	r0, [fp, #-24]	; 0xffffffe8
   2ac84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac88:	ldr	r3, [r3]
   2ac8c:	str	r3, [fp, #-12]
   2ac90:	ldr	r3, [fp, #-12]
   2ac94:	ldr	r3, [r3, #56]	; 0x38
   2ac98:	str	r3, [fp, #-8]
   2ac9c:	b	2acbc <__assert_fail@plt+0x19a7c>
   2aca0:	ldr	r3, [fp, #-8]
   2aca4:	ldr	r3, [r3]
   2aca8:	str	r3, [fp, #-16]
   2acac:	ldr	r0, [fp, #-8]
   2acb0:	bl	13798 <__assert_fail@plt+0x2558>
   2acb4:	ldr	r3, [fp, #-16]
   2acb8:	str	r3, [fp, #-8]
   2acbc:	ldr	r3, [fp, #-8]
   2acc0:	cmp	r3, #0
   2acc4:	bne	2aca0 <__assert_fail@plt+0x19a60>
   2acc8:	ldr	r3, [fp, #-12]
   2accc:	mov	r2, #0
   2acd0:	str	r2, [r3, #56]	; 0x38
   2acd4:	ldr	r3, [fp, #-12]
   2acd8:	mov	r2, #31
   2acdc:	str	r2, [r3, #64]	; 0x40
   2ace0:	ldr	r3, [fp, #-12]
   2ace4:	mov	r2, #0
   2ace8:	str	r2, [r3, #52]	; 0x34
   2acec:	ldr	r3, [fp, #-12]
   2acf0:	ldr	r3, [r3, #16]
   2acf4:	mov	r0, r3
   2acf8:	bl	13798 <__assert_fail@plt+0x2558>
   2acfc:	ldr	r3, [fp, #-12]
   2ad00:	mov	r2, #0
   2ad04:	str	r2, [r3, #16]
   2ad08:	nop	{0}
   2ad0c:	sub	sp, fp, #4
   2ad10:	ldr	fp, [sp]
   2ad14:	add	sp, sp, #4
   2ad18:	pop	{pc}		; (ldr pc, [sp], #4)
   2ad1c:	str	fp, [sp, #-8]!
   2ad20:	str	lr, [sp, #4]
   2ad24:	add	fp, sp, #4
   2ad28:	sub	sp, sp, #56	; 0x38
   2ad2c:	str	r0, [fp, #-56]	; 0xffffffc8
   2ad30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ad34:	ldr	r3, [r3, #52]	; 0x34
   2ad38:	ldr	r3, [r3, #12]
   2ad3c:	ldr	r3, [r3, #28]
   2ad40:	str	r3, [fp, #-16]
   2ad44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ad48:	ldr	r2, [fp, #-16]
   2ad4c:	str	r2, [r3, #72]	; 0x48
   2ad50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ad54:	ldr	r1, [r3, #24]
   2ad58:	ldr	r2, [fp, #-16]
   2ad5c:	mov	r3, r2
   2ad60:	lsl	r3, r3, #1
   2ad64:	add	r3, r3, r2
   2ad68:	lsl	r3, r3, #2
   2ad6c:	add	r2, r1, r3
   2ad70:	sub	r3, fp, #52	; 0x34
   2ad74:	mov	r1, r2
   2ad78:	mov	r0, r3
   2ad7c:	bl	26e70 <__assert_fail@plt+0x15c30>
   2ad80:	mov	r3, r0
   2ad84:	str	r3, [fp, #-40]	; 0xffffffd8
   2ad88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ad8c:	cmp	r3, #0
   2ad90:	movne	r3, #1
   2ad94:	moveq	r3, #0
   2ad98:	uxtb	r3, r3
   2ad9c:	cmp	r3, #0
   2ada0:	beq	2adac <__assert_fail@plt+0x19b6c>
   2ada4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ada8:	b	2b0f8 <__assert_fail@plt+0x19eb8>
   2adac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2adb0:	ldr	r3, [r3, #76]	; 0x4c
   2adb4:	cmp	r3, #0
   2adb8:	ble	2af78 <__assert_fail@plt+0x19d38>
   2adbc:	mov	r3, #0
   2adc0:	str	r3, [fp, #-8]
   2adc4:	b	2af68 <__assert_fail@plt+0x19d28>
   2adc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2adcc:	ldr	r3, [fp, #-8]
   2add0:	lsl	r3, r3, #2
   2add4:	add	r3, r2, r3
   2add8:	ldr	r3, [r3]
   2addc:	str	r3, [fp, #-20]	; 0xffffffec
   2ade0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ade4:	ldr	r2, [r3]
   2ade8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2adec:	lsl	r3, r3, #3
   2adf0:	add	r3, r2, r3
   2adf4:	ldrb	r3, [r3, #4]
   2adf8:	str	r3, [fp, #-24]	; 0xffffffe8
   2adfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae00:	cmp	r3, #4
   2ae04:	bne	2af50 <__assert_fail@plt+0x19d10>
   2ae08:	mov	r3, #0
   2ae0c:	str	r3, [fp, #-12]
   2ae10:	b	2ae80 <__assert_fail@plt+0x19c40>
   2ae14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ae18:	ldr	r2, [r3]
   2ae1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ae20:	ldr	r3, [fp, #-12]
   2ae24:	lsl	r3, r3, #2
   2ae28:	add	r3, r1, r3
   2ae2c:	ldr	r3, [r3]
   2ae30:	lsl	r3, r3, #3
   2ae34:	add	r3, r2, r3
   2ae38:	str	r3, [fp, #-28]	; 0xffffffe4
   2ae3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae40:	ldrb	r3, [r3, #4]
   2ae44:	cmp	r3, #9
   2ae48:	bne	2ae74 <__assert_fail@plt+0x19c34>
   2ae4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae50:	ldr	r2, [r3]
   2ae54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ae58:	ldr	r1, [r3]
   2ae5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae60:	lsl	r3, r3, #3
   2ae64:	add	r3, r1, r3
   2ae68:	ldr	r3, [r3]
   2ae6c:	cmp	r2, r3
   2ae70:	beq	2ae94 <__assert_fail@plt+0x19c54>
   2ae74:	ldr	r3, [fp, #-12]
   2ae78:	add	r3, r3, #1
   2ae7c:	str	r3, [fp, #-12]
   2ae80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ae84:	ldr	r2, [fp, #-12]
   2ae88:	cmp	r2, r3
   2ae8c:	blt	2ae14 <__assert_fail@plt+0x19bd4>
   2ae90:	b	2ae98 <__assert_fail@plt+0x19c58>
   2ae94:	nop	{0}
   2ae98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ae9c:	ldr	r2, [fp, #-12]
   2aea0:	cmp	r2, r3
   2aea4:	beq	2af58 <__assert_fail@plt+0x19d18>
   2aea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aeac:	cmp	r3, #4
   2aeb0:	bne	2af5c <__assert_fail@plt+0x19d1c>
   2aeb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2aeb8:	ldr	r1, [r3, #20]
   2aebc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2aec0:	mov	r3, r2
   2aec4:	lsl	r3, r3, #1
   2aec8:	add	r3, r3, r2
   2aecc:	lsl	r3, r3, #2
   2aed0:	add	r3, r1, r3
   2aed4:	ldr	r3, [r3, #8]
   2aed8:	ldr	r3, [r3]
   2aedc:	str	r3, [fp, #-32]	; 0xffffffe0
   2aee0:	sub	r3, fp, #52	; 0x34
   2aee4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2aee8:	mov	r0, r3
   2aeec:	bl	28024 <__assert_fail@plt+0x16de4>
   2aef0:	mov	r3, r0
   2aef4:	cmp	r3, #0
   2aef8:	bne	2af5c <__assert_fail@plt+0x19d1c>
   2aefc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2af00:	ldr	r1, [r3, #24]
   2af04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2af08:	mov	r3, r2
   2af0c:	lsl	r3, r3, #1
   2af10:	add	r3, r3, r2
   2af14:	lsl	r3, r3, #2
   2af18:	add	r2, r1, r3
   2af1c:	sub	r3, fp, #52	; 0x34
   2af20:	mov	r1, r2
   2af24:	mov	r0, r3
   2af28:	bl	2779c <__assert_fail@plt+0x1655c>
   2af2c:	str	r0, [fp, #-36]	; 0xffffffdc
   2af30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2af34:	cmp	r3, #0
   2af38:	beq	2af44 <__assert_fail@plt+0x19d04>
   2af3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2af40:	b	2b0f8 <__assert_fail@plt+0x19eb8>
   2af44:	mov	r3, #0
   2af48:	str	r3, [fp, #-8]
   2af4c:	b	2af5c <__assert_fail@plt+0x19d1c>
   2af50:	nop	{0}
   2af54:	b	2af5c <__assert_fail@plt+0x19d1c>
   2af58:	nop	{0}
   2af5c:	ldr	r3, [fp, #-8]
   2af60:	add	r3, r3, #1
   2af64:	str	r3, [fp, #-8]
   2af68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2af6c:	ldr	r2, [fp, #-8]
   2af70:	cmp	r2, r3
   2af74:	blt	2adc8 <__assert_fail@plt+0x19b88>
   2af78:	sub	r2, fp, #52	; 0x34
   2af7c:	sub	r0, fp, #40	; 0x28
   2af80:	mov	r3, #0
   2af84:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2af88:	bl	287b4 <__assert_fail@plt+0x17574>
   2af8c:	mov	r2, r0
   2af90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2af94:	str	r2, [r3, #36]	; 0x24
   2af98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2af9c:	ldr	r3, [r3, #36]	; 0x24
   2afa0:	cmp	r3, #0
   2afa4:	moveq	r3, #1
   2afa8:	movne	r3, #0
   2afac:	uxtb	r3, r3
   2afb0:	cmp	r3, #0
   2afb4:	beq	2afc0 <__assert_fail@plt+0x19d80>
   2afb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2afbc:	b	2b0f8 <__assert_fail@plt+0x19eb8>
   2afc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2afc4:	ldr	r3, [r3, #36]	; 0x24
   2afc8:	ldrb	r3, [r3, #52]	; 0x34
   2afcc:	bic	r3, r3, #127	; 0x7f
   2afd0:	uxtb	r3, r3
   2afd4:	cmp	r3, #0
   2afd8:	beq	2b0b8 <__assert_fail@plt+0x19e78>
   2afdc:	sub	r2, fp, #52	; 0x34
   2afe0:	sub	r0, fp, #40	; 0x28
   2afe4:	mov	r3, #1
   2afe8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2afec:	bl	287b4 <__assert_fail@plt+0x17574>
   2aff0:	mov	r2, r0
   2aff4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2aff8:	str	r2, [r3, #40]	; 0x28
   2affc:	sub	r2, fp, #52	; 0x34
   2b000:	sub	r0, fp, #40	; 0x28
   2b004:	mov	r3, #2
   2b008:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2b00c:	bl	287b4 <__assert_fail@plt+0x17574>
   2b010:	mov	r2, r0
   2b014:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b018:	str	r2, [r3, #44]	; 0x2c
   2b01c:	sub	r2, fp, #52	; 0x34
   2b020:	sub	r0, fp, #40	; 0x28
   2b024:	mov	r3, #6
   2b028:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2b02c:	bl	287b4 <__assert_fail@plt+0x17574>
   2b030:	mov	r2, r0
   2b034:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b038:	str	r2, [r3, #48]	; 0x30
   2b03c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b040:	ldr	r3, [r3, #40]	; 0x28
   2b044:	cmp	r3, #0
   2b048:	moveq	r3, #1
   2b04c:	movne	r3, #0
   2b050:	uxtb	r3, r3
   2b054:	cmp	r3, #0
   2b058:	bne	2b07c <__assert_fail@plt+0x19e3c>
   2b05c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b060:	ldr	r3, [r3, #44]	; 0x2c
   2b064:	cmp	r3, #0
   2b068:	moveq	r3, #1
   2b06c:	movne	r3, #0
   2b070:	uxtb	r3, r3
   2b074:	cmp	r3, #0
   2b078:	beq	2b084 <__assert_fail@plt+0x19e44>
   2b07c:	mov	r3, #1
   2b080:	b	2b088 <__assert_fail@plt+0x19e48>
   2b084:	mov	r3, #0
   2b088:	cmp	r3, #0
   2b08c:	bne	2b0b0 <__assert_fail@plt+0x19e70>
   2b090:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b094:	ldr	r3, [r3, #48]	; 0x30
   2b098:	cmp	r3, #0
   2b09c:	moveq	r3, #1
   2b0a0:	movne	r3, #0
   2b0a4:	uxtb	r3, r3
   2b0a8:	cmp	r3, #0
   2b0ac:	beq	2b0e8 <__assert_fail@plt+0x19ea8>
   2b0b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b0b4:	b	2b0f8 <__assert_fail@plt+0x19eb8>
   2b0b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0bc:	ldr	r2, [r3, #36]	; 0x24
   2b0c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0c4:	str	r2, [r3, #48]	; 0x30
   2b0c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0cc:	ldr	r2, [r3, #48]	; 0x30
   2b0d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0d4:	str	r2, [r3, #44]	; 0x2c
   2b0d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0dc:	ldr	r2, [r3, #44]	; 0x2c
   2b0e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0e4:	str	r2, [r3, #40]	; 0x28
   2b0e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b0ec:	mov	r0, r3
   2b0f0:	bl	13798 <__assert_fail@plt+0x2558>
   2b0f4:	mov	r3, #0
   2b0f8:	mov	r0, r3
   2b0fc:	sub	sp, fp, #4
   2b100:	ldr	fp, [sp]
   2b104:	add	sp, sp, #4
   2b108:	pop	{pc}		; (ldr pc, [sp], #4)
   2b10c:	str	fp, [sp, #-8]!
   2b110:	str	lr, [sp, #4]
   2b114:	add	fp, sp, #4
   2b118:	sub	sp, sp, #24
   2b11c:	str	r0, [fp, #-24]	; 0xffffffe8
   2b120:	mov	r3, #0
   2b124:	strb	r3, [fp, #-13]
   2b128:	mov	r3, #0
   2b12c:	strb	r3, [fp, #-14]
   2b130:	mov	r3, #0
   2b134:	str	r3, [fp, #-8]
   2b138:	b	2b2ac <__assert_fail@plt+0x1a06c>
   2b13c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b140:	ldr	r2, [r3]
   2b144:	ldr	r3, [fp, #-8]
   2b148:	lsl	r3, r3, #3
   2b14c:	add	r3, r2, r3
   2b150:	ldrb	r3, [r3, #4]
   2b154:	sub	r3, r3, #1
   2b158:	cmp	r3, #11
   2b15c:	ldrls	pc, [pc, r3, lsl #2]
   2b160:	b	2b290 <__assert_fail@plt+0x1a050>
   2b164:	muleq	r2, r4, r1
   2b168:	muleq	r2, r4, r2
   2b16c:	andeq	fp, r2, ip, lsl r2
   2b170:	muleq	r2, r4, r2
   2b174:	andeq	fp, r2, r0, lsl r2
   2b178:	andeq	fp, r2, r8, lsl #8
   2b17c:	muleq	r2, r0, r2
   2b180:	muleq	r2, r4, r2
   2b184:	muleq	r2, r4, r2
   2b188:	muleq	r2, r4, r2
   2b18c:	muleq	r2, r4, r2
   2b190:	andeq	fp, r2, r4, asr #3
   2b194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b198:	ldr	r2, [r3]
   2b19c:	ldr	r3, [fp, #-8]
   2b1a0:	lsl	r3, r3, #3
   2b1a4:	add	r3, r2, r3
   2b1a8:	ldrb	r3, [r3]
   2b1ac:	sxtb	r3, r3
   2b1b0:	cmp	r3, #0
   2b1b4:	bge	2b29c <__assert_fail@plt+0x1a05c>
   2b1b8:	mov	r3, #1
   2b1bc:	strb	r3, [fp, #-13]
   2b1c0:	b	2b29c <__assert_fail@plt+0x1a05c>
   2b1c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b1c8:	ldr	r2, [r3]
   2b1cc:	ldr	r3, [fp, #-8]
   2b1d0:	lsl	r3, r3, #3
   2b1d4:	add	r3, r2, r3
   2b1d8:	ldr	r3, [r3]
   2b1dc:	cmp	r3, #32
   2b1e0:	beq	2b208 <__assert_fail@plt+0x19fc8>
   2b1e4:	cmp	r3, #32
   2b1e8:	bhi	2b1f8 <__assert_fail@plt+0x19fb8>
   2b1ec:	cmp	r3, #16
   2b1f0:	beq	2b208 <__assert_fail@plt+0x19fc8>
   2b1f4:	b	2b410 <__assert_fail@plt+0x1a1d0>
   2b1f8:	cmp	r3, #64	; 0x40
   2b1fc:	beq	2b208 <__assert_fail@plt+0x19fc8>
   2b200:	cmp	r3, #128	; 0x80
   2b204:	bne	2b410 <__assert_fail@plt+0x1a1d0>
   2b208:	nop	{0}
   2b20c:	b	2b2a0 <__assert_fail@plt+0x1a060>
   2b210:	mov	r3, #1
   2b214:	strb	r3, [fp, #-14]
   2b218:	b	2b2a0 <__assert_fail@plt+0x1a060>
   2b21c:	mov	r3, #0
   2b220:	str	r3, [fp, #-20]	; 0xffffffec
   2b224:	mov	r3, #4
   2b228:	str	r3, [fp, #-12]
   2b22c:	b	2b27c <__assert_fail@plt+0x1a03c>
   2b230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b234:	ldr	r2, [r3]
   2b238:	ldr	r3, [fp, #-8]
   2b23c:	lsl	r3, r3, #3
   2b240:	add	r3, r2, r3
   2b244:	ldr	r2, [r3]
   2b248:	ldr	r3, [fp, #-12]
   2b24c:	lsl	r3, r3, #2
   2b250:	add	r3, r2, r3
   2b254:	ldr	r2, [r3]
   2b258:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b25c:	lsr	r3, r2, r3
   2b260:	cmp	r3, #0
   2b264:	bne	2b418 <__assert_fail@plt+0x1a1d8>
   2b268:	mov	r3, #0
   2b26c:	str	r3, [fp, #-20]	; 0xffffffec
   2b270:	ldr	r3, [fp, #-12]
   2b274:	add	r3, r3, #1
   2b278:	str	r3, [fp, #-12]
   2b27c:	ldr	r3, [fp, #-12]
   2b280:	cmp	r3, #7
   2b284:	ble	2b230 <__assert_fail@plt+0x19ff0>
   2b288:	nop	{0}
   2b28c:	b	2b2a0 <__assert_fail@plt+0x1a060>
   2b290:	bl	11228 <abort@plt>
   2b294:	nop	{0}
   2b298:	b	2b2a0 <__assert_fail@plt+0x1a060>
   2b29c:	nop	{0}
   2b2a0:	ldr	r3, [fp, #-8]
   2b2a4:	add	r3, r3, #1
   2b2a8:	str	r3, [fp, #-8]
   2b2ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b2b0:	ldr	r2, [r3, #8]
   2b2b4:	ldr	r3, [fp, #-8]
   2b2b8:	cmp	r2, r3
   2b2bc:	bhi	2b13c <__assert_fail@plt+0x19efc>
   2b2c0:	ldrb	r3, [fp, #-13]
   2b2c4:	cmp	r3, #0
   2b2c8:	bne	2b2d8 <__assert_fail@plt+0x1a098>
   2b2cc:	ldrb	r3, [fp, #-14]
   2b2d0:	cmp	r3, #0
   2b2d4:	beq	2b3a8 <__assert_fail@plt+0x1a168>
   2b2d8:	mov	r3, #0
   2b2dc:	str	r3, [fp, #-8]
   2b2e0:	b	2b394 <__assert_fail@plt+0x1a154>
   2b2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b2e8:	ldr	r2, [r3]
   2b2ec:	ldr	r3, [fp, #-8]
   2b2f0:	lsl	r3, r3, #3
   2b2f4:	add	r3, r2, r3
   2b2f8:	ldrb	r3, [r3, #4]
   2b2fc:	cmp	r3, #1
   2b300:	bne	2b34c <__assert_fail@plt+0x1a10c>
   2b304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b308:	ldr	r2, [r3]
   2b30c:	ldr	r3, [fp, #-8]
   2b310:	lsl	r3, r3, #3
   2b314:	add	r3, r2, r3
   2b318:	ldrb	r3, [r3]
   2b31c:	sxtb	r3, r3
   2b320:	cmp	r3, #0
   2b324:	bge	2b34c <__assert_fail@plt+0x1a10c>
   2b328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b32c:	ldr	r2, [r3]
   2b330:	ldr	r3, [fp, #-8]
   2b334:	lsl	r3, r3, #3
   2b338:	add	r2, r2, r3
   2b33c:	ldrb	r3, [r2, #6]
   2b340:	bfc	r3, #5, #1
   2b344:	strb	r3, [r2, #6]
   2b348:	b	2b388 <__assert_fail@plt+0x1a148>
   2b34c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b350:	ldr	r2, [r3]
   2b354:	ldr	r3, [fp, #-8]
   2b358:	lsl	r3, r3, #3
   2b35c:	add	r3, r2, r3
   2b360:	ldrb	r3, [r3, #4]
   2b364:	cmp	r3, #5
   2b368:	bne	2b388 <__assert_fail@plt+0x1a148>
   2b36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b370:	ldr	r2, [r3]
   2b374:	ldr	r3, [fp, #-8]
   2b378:	lsl	r3, r3, #3
   2b37c:	add	r3, r2, r3
   2b380:	mov	r2, #7
   2b384:	strb	r2, [r3, #4]
   2b388:	ldr	r3, [fp, #-8]
   2b38c:	add	r3, r3, #1
   2b390:	str	r3, [fp, #-8]
   2b394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b398:	ldr	r2, [r3, #8]
   2b39c:	ldr	r3, [fp, #-8]
   2b3a0:	cmp	r2, r3
   2b3a4:	bhi	2b2e4 <__assert_fail@plt+0x1a0a4>
   2b3a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b3ac:	mov	r2, #1
   2b3b0:	str	r2, [r3, #92]	; 0x5c
   2b3b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b3b8:	ldrb	r3, [r2, #88]	; 0x58
   2b3bc:	bfc	r3, #2, #1
   2b3c0:	strb	r3, [r2, #88]	; 0x58
   2b3c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b3c8:	ldr	r3, [r3, #76]	; 0x4c
   2b3cc:	cmp	r3, #0
   2b3d0:	bgt	2b3e0 <__assert_fail@plt+0x1a1a0>
   2b3d4:	ldrb	r3, [fp, #-14]
   2b3d8:	cmp	r3, #0
   2b3dc:	beq	2b3e8 <__assert_fail@plt+0x1a1a8>
   2b3e0:	mov	r3, #1
   2b3e4:	b	2b3ec <__assert_fail@plt+0x1a1ac>
   2b3e8:	mov	r3, #0
   2b3ec:	and	r3, r3, #1
   2b3f0:	uxtb	r1, r3
   2b3f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b3f8:	ldrb	r3, [r2, #88]	; 0x58
   2b3fc:	bfi	r3, r1, #1, #1
   2b400:	strb	r3, [r2, #88]	; 0x58
   2b404:	b	2b41c <__assert_fail@plt+0x1a1dc>
   2b408:	nop	{0}
   2b40c:	b	2b41c <__assert_fail@plt+0x1a1dc>
   2b410:	nop	{0}
   2b414:	b	2b41c <__assert_fail@plt+0x1a1dc>
   2b418:	nop	{0}
   2b41c:	sub	sp, fp, #4
   2b420:	ldr	fp, [sp]
   2b424:	add	sp, sp, #4
   2b428:	pop	{pc}		; (ldr pc, [sp], #4)
   2b42c:	str	fp, [sp, #-8]!
   2b430:	str	lr, [sp, #4]
   2b434:	add	fp, sp, #4
   2b438:	sub	sp, sp, #24
   2b43c:	str	r0, [fp, #-24]	; 0xffffffe8
   2b440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b444:	ldr	r3, [r3]
   2b448:	str	r3, [fp, #-16]
   2b44c:	ldr	r3, [fp, #-16]
   2b450:	ldr	r3, [r3, #4]
   2b454:	lsl	r3, r3, #2
   2b458:	mov	r0, r3
   2b45c:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   2b460:	mov	r3, r0
   2b464:	mov	r2, r3
   2b468:	ldr	r3, [fp, #-16]
   2b46c:	str	r2, [r3, #12]
   2b470:	ldr	r3, [fp, #-16]
   2b474:	ldr	r3, [r3, #4]
   2b478:	lsl	r3, r3, #2
   2b47c:	mov	r0, r3
   2b480:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   2b484:	mov	r3, r0
   2b488:	mov	r2, r3
   2b48c:	ldr	r3, [fp, #-16]
   2b490:	str	r2, [r3, #16]
   2b494:	ldr	r3, [fp, #-16]
   2b498:	ldr	r2, [r3, #4]
   2b49c:	mov	r3, r2
   2b4a0:	lsl	r3, r3, #1
   2b4a4:	add	r3, r3, r2
   2b4a8:	lsl	r3, r3, #2
   2b4ac:	mov	r0, r3
   2b4b0:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   2b4b4:	mov	r3, r0
   2b4b8:	mov	r2, r3
   2b4bc:	ldr	r3, [fp, #-16]
   2b4c0:	str	r2, [r3, #20]
   2b4c4:	ldr	r3, [fp, #-16]
   2b4c8:	ldr	r2, [r3, #4]
   2b4cc:	mov	r3, r2
   2b4d0:	lsl	r3, r3, #1
   2b4d4:	add	r3, r3, r2
   2b4d8:	lsl	r3, r3, #2
   2b4dc:	mov	r0, r3
   2b4e0:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   2b4e4:	mov	r3, r0
   2b4e8:	mov	r2, r3
   2b4ec:	ldr	r3, [fp, #-16]
   2b4f0:	str	r2, [r3, #24]
   2b4f4:	ldr	r3, [fp, #-16]
   2b4f8:	ldr	r3, [r3, #12]
   2b4fc:	cmp	r3, #0
   2b500:	moveq	r3, #1
   2b504:	movne	r3, #0
   2b508:	uxtb	r3, r3
   2b50c:	cmp	r3, #0
   2b510:	bne	2b534 <__assert_fail@plt+0x1a2f4>
   2b514:	ldr	r3, [fp, #-16]
   2b518:	ldr	r3, [r3, #16]
   2b51c:	cmp	r3, #0
   2b520:	moveq	r3, #1
   2b524:	movne	r3, #0
   2b528:	uxtb	r3, r3
   2b52c:	cmp	r3, #0
   2b530:	beq	2b53c <__assert_fail@plt+0x1a2fc>
   2b534:	mov	r3, #1
   2b538:	b	2b540 <__assert_fail@plt+0x1a300>
   2b53c:	mov	r3, #0
   2b540:	cmp	r3, #0
   2b544:	bne	2b568 <__assert_fail@plt+0x1a328>
   2b548:	ldr	r3, [fp, #-16]
   2b54c:	ldr	r3, [r3, #20]
   2b550:	cmp	r3, #0
   2b554:	moveq	r3, #1
   2b558:	movne	r3, #0
   2b55c:	uxtb	r3, r3
   2b560:	cmp	r3, #0
   2b564:	beq	2b570 <__assert_fail@plt+0x1a330>
   2b568:	mov	r3, #1
   2b56c:	b	2b574 <__assert_fail@plt+0x1a334>
   2b570:	mov	r3, #0
   2b574:	cmp	r3, #0
   2b578:	bne	2b59c <__assert_fail@plt+0x1a35c>
   2b57c:	ldr	r3, [fp, #-16]
   2b580:	ldr	r3, [r3, #24]
   2b584:	cmp	r3, #0
   2b588:	moveq	r3, #1
   2b58c:	movne	r3, #0
   2b590:	uxtb	r3, r3
   2b594:	cmp	r3, #0
   2b598:	beq	2b5a4 <__assert_fail@plt+0x1a364>
   2b59c:	mov	r3, #12
   2b5a0:	b	2b894 <__assert_fail@plt+0x1a654>
   2b5a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b5a8:	ldr	r3, [r3, #24]
   2b5ac:	lsl	r3, r3, #2
   2b5b0:	mov	r0, r3
   2b5b4:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   2b5b8:	mov	r3, r0
   2b5bc:	mov	r2, r3
   2b5c0:	ldr	r3, [fp, #-16]
   2b5c4:	str	r2, [r3, #132]	; 0x84
   2b5c8:	ldr	r3, [fp, #-16]
   2b5cc:	ldr	r3, [r3, #132]	; 0x84
   2b5d0:	cmp	r3, #0
   2b5d4:	beq	2b6c4 <__assert_fail@plt+0x1a484>
   2b5d8:	mov	r3, #0
   2b5dc:	str	r3, [fp, #-12]
   2b5e0:	b	2b60c <__assert_fail@plt+0x1a3cc>
   2b5e4:	ldr	r3, [fp, #-16]
   2b5e8:	ldr	r2, [r3, #132]	; 0x84
   2b5ec:	ldr	r3, [fp, #-12]
   2b5f0:	lsl	r3, r3, #2
   2b5f4:	add	r3, r2, r3
   2b5f8:	ldr	r2, [fp, #-12]
   2b5fc:	str	r2, [r3]
   2b600:	ldr	r3, [fp, #-12]
   2b604:	add	r3, r3, #1
   2b608:	str	r3, [fp, #-12]
   2b60c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b610:	ldr	r2, [r3, #24]
   2b614:	ldr	r3, [fp, #-12]
   2b618:	cmp	r2, r3
   2b61c:	bhi	2b5e4 <__assert_fail@plt+0x1a3a4>
   2b620:	ldr	r3, [fp, #-16]
   2b624:	ldr	r3, [r3, #52]	; 0x34
   2b628:	ldr	r2, [fp, #-16]
   2b62c:	movw	r1, #47808	; 0xbac0
   2b630:	movt	r1, #2
   2b634:	mov	r0, r3
   2b638:	bl	2b9c8 <__assert_fail@plt+0x1a788>
   2b63c:	mov	r3, #0
   2b640:	str	r3, [fp, #-12]
   2b644:	b	2b678 <__assert_fail@plt+0x1a438>
   2b648:	ldr	r3, [fp, #-16]
   2b64c:	ldr	r2, [r3, #132]	; 0x84
   2b650:	ldr	r3, [fp, #-12]
   2b654:	lsl	r3, r3, #2
   2b658:	add	r3, r2, r3
   2b65c:	ldr	r3, [r3]
   2b660:	ldr	r2, [fp, #-12]
   2b664:	cmp	r2, r3
   2b668:	bne	2b690 <__assert_fail@plt+0x1a450>
   2b66c:	ldr	r3, [fp, #-12]
   2b670:	add	r3, r3, #1
   2b674:	str	r3, [fp, #-12]
   2b678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b67c:	ldr	r2, [r3, #24]
   2b680:	ldr	r3, [fp, #-12]
   2b684:	cmp	r2, r3
   2b688:	bhi	2b648 <__assert_fail@plt+0x1a408>
   2b68c:	b	2b694 <__assert_fail@plt+0x1a454>
   2b690:	nop	{0}
   2b694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b698:	ldr	r2, [r3, #24]
   2b69c:	ldr	r3, [fp, #-12]
   2b6a0:	cmp	r2, r3
   2b6a4:	bne	2b6c4 <__assert_fail@plt+0x1a484>
   2b6a8:	ldr	r3, [fp, #-16]
   2b6ac:	ldr	r3, [r3, #132]	; 0x84
   2b6b0:	mov	r0, r3
   2b6b4:	bl	13798 <__assert_fail@plt+0x2558>
   2b6b8:	ldr	r3, [fp, #-16]
   2b6bc:	mov	r2, #0
   2b6c0:	str	r2, [r3, #132]	; 0x84
   2b6c4:	ldr	r3, [fp, #-16]
   2b6c8:	ldr	r3, [r3, #52]	; 0x34
   2b6cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b6d0:	movw	r1, #48192	; 0xbc40
   2b6d4:	movt	r1, #2
   2b6d8:	mov	r0, r3
   2b6dc:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2b6e0:	str	r0, [fp, #-8]
   2b6e4:	ldr	r3, [fp, #-8]
   2b6e8:	cmp	r3, #0
   2b6ec:	movne	r3, #1
   2b6f0:	moveq	r3, #0
   2b6f4:	uxtb	r3, r3
   2b6f8:	cmp	r3, #0
   2b6fc:	beq	2b708 <__assert_fail@plt+0x1a4c8>
   2b700:	ldr	r3, [fp, #-8]
   2b704:	b	2b894 <__assert_fail@plt+0x1a654>
   2b708:	ldr	r3, [fp, #-16]
   2b70c:	ldr	r3, [r3, #52]	; 0x34
   2b710:	ldr	r2, [fp, #-16]
   2b714:	movw	r1, #49028	; 0xbf84
   2b718:	movt	r1, #2
   2b71c:	mov	r0, r3
   2b720:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2b724:	str	r0, [fp, #-8]
   2b728:	ldr	r3, [fp, #-8]
   2b72c:	cmp	r3, #0
   2b730:	movne	r3, #1
   2b734:	moveq	r3, #0
   2b738:	uxtb	r3, r3
   2b73c:	cmp	r3, #0
   2b740:	beq	2b74c <__assert_fail@plt+0x1a50c>
   2b744:	ldr	r3, [fp, #-8]
   2b748:	b	2b894 <__assert_fail@plt+0x1a654>
   2b74c:	ldr	r3, [fp, #-16]
   2b750:	ldr	r3, [r3, #52]	; 0x34
   2b754:	ldr	r2, [fp, #-16]
   2b758:	movw	r1, #49300	; 0xc094
   2b75c:	movt	r1, #2
   2b760:	mov	r0, r3
   2b764:	bl	2b9c8 <__assert_fail@plt+0x1a788>
   2b768:	ldr	r3, [fp, #-16]
   2b76c:	ldr	r3, [r3, #52]	; 0x34
   2b770:	ldr	r2, [fp, #-16]
   2b774:	movw	r1, #49512	; 0xc168
   2b778:	movt	r1, #2
   2b77c:	mov	r0, r3
   2b780:	bl	2b9c8 <__assert_fail@plt+0x1a788>
   2b784:	str	r0, [fp, #-8]
   2b788:	ldr	r3, [fp, #-8]
   2b78c:	cmp	r3, #0
   2b790:	movne	r3, #1
   2b794:	moveq	r3, #0
   2b798:	uxtb	r3, r3
   2b79c:	cmp	r3, #0
   2b7a0:	beq	2b7ac <__assert_fail@plt+0x1a56c>
   2b7a4:	ldr	r3, [fp, #-8]
   2b7a8:	b	2b894 <__assert_fail@plt+0x1a654>
   2b7ac:	ldr	r0, [fp, #-16]
   2b7b0:	bl	2cd58 <__assert_fail@plt+0x1bb18>
   2b7b4:	str	r0, [fp, #-8]
   2b7b8:	ldr	r3, [fp, #-8]
   2b7bc:	cmp	r3, #0
   2b7c0:	movne	r3, #1
   2b7c4:	moveq	r3, #0
   2b7c8:	uxtb	r3, r3
   2b7cc:	cmp	r3, #0
   2b7d0:	beq	2b7dc <__assert_fail@plt+0x1a59c>
   2b7d4:	ldr	r3, [fp, #-8]
   2b7d8:	b	2b894 <__assert_fail@plt+0x1a654>
   2b7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b7e0:	ldrb	r3, [r3, #28]
   2b7e4:	and	r3, r3, #16
   2b7e8:	uxtb	r3, r3
   2b7ec:	cmp	r3, #0
   2b7f0:	bne	2b81c <__assert_fail@plt+0x1a5dc>
   2b7f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b7f8:	ldr	r3, [r3, #24]
   2b7fc:	cmp	r3, #0
   2b800:	beq	2b81c <__assert_fail@plt+0x1a5dc>
   2b804:	ldr	r3, [fp, #-16]
   2b808:	ldrb	r3, [r3, #88]	; 0x58
   2b80c:	and	r3, r3, #1
   2b810:	uxtb	r3, r3
   2b814:	cmp	r3, #0
   2b818:	bne	2b82c <__assert_fail@plt+0x1a5ec>
   2b81c:	ldr	r3, [fp, #-16]
   2b820:	ldr	r3, [r3, #76]	; 0x4c
   2b824:	cmp	r3, #0
   2b828:	beq	2b890 <__assert_fail@plt+0x1a650>
   2b82c:	ldr	r3, [fp, #-16]
   2b830:	ldr	r2, [r3, #8]
   2b834:	mov	r3, r2
   2b838:	lsl	r3, r3, #1
   2b83c:	add	r3, r3, r2
   2b840:	lsl	r3, r3, #2
   2b844:	mov	r0, r3
   2b848:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   2b84c:	mov	r3, r0
   2b850:	mov	r2, r3
   2b854:	ldr	r3, [fp, #-16]
   2b858:	str	r2, [r3, #28]
   2b85c:	ldr	r3, [fp, #-16]
   2b860:	ldr	r3, [r3, #28]
   2b864:	cmp	r3, #0
   2b868:	moveq	r3, #1
   2b86c:	movne	r3, #0
   2b870:	uxtb	r3, r3
   2b874:	cmp	r3, #0
   2b878:	beq	2b884 <__assert_fail@plt+0x1a644>
   2b87c:	mov	r3, #12
   2b880:	b	2b894 <__assert_fail@plt+0x1a654>
   2b884:	ldr	r0, [fp, #-16]
   2b888:	bl	2cbd0 <__assert_fail@plt+0x1b990>
   2b88c:	str	r0, [fp, #-8]
   2b890:	ldr	r3, [fp, #-8]
   2b894:	mov	r0, r3
   2b898:	sub	sp, fp, #4
   2b89c:	ldr	fp, [sp]
   2b8a0:	add	sp, sp, #4
   2b8a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b8a8:	str	fp, [sp, #-8]!
   2b8ac:	str	lr, [sp, #4]
   2b8b0:	add	fp, sp, #4
   2b8b4:	sub	sp, sp, #32
   2b8b8:	str	r0, [fp, #-24]	; 0xffffffe8
   2b8bc:	str	r1, [fp, #-28]	; 0xffffffe4
   2b8c0:	str	r2, [fp, #-32]	; 0xffffffe0
   2b8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b8c8:	str	r3, [fp, #-8]
   2b8cc:	b	2b8fc <__assert_fail@plt+0x1a6bc>
   2b8d0:	ldr	r3, [fp, #-8]
   2b8d4:	ldr	r3, [r3, #4]
   2b8d8:	cmp	r3, #0
   2b8dc:	beq	2b8f0 <__assert_fail@plt+0x1a6b0>
   2b8e0:	ldr	r3, [fp, #-8]
   2b8e4:	ldr	r3, [r3, #4]
   2b8e8:	str	r3, [fp, #-8]
   2b8ec:	b	2b8fc <__assert_fail@plt+0x1a6bc>
   2b8f0:	ldr	r3, [fp, #-8]
   2b8f4:	ldr	r3, [r3, #8]
   2b8f8:	str	r3, [fp, #-8]
   2b8fc:	ldr	r3, [fp, #-8]
   2b900:	ldr	r3, [r3, #4]
   2b904:	cmp	r3, #0
   2b908:	bne	2b8d0 <__assert_fail@plt+0x1a690>
   2b90c:	ldr	r3, [fp, #-8]
   2b910:	ldr	r3, [r3, #8]
   2b914:	cmp	r3, #0
   2b918:	bne	2b8d0 <__assert_fail@plt+0x1a690>
   2b91c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b920:	ldr	r1, [fp, #-8]
   2b924:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b928:	blx	r3
   2b92c:	str	r0, [fp, #-12]
   2b930:	ldr	r3, [fp, #-12]
   2b934:	cmp	r3, #0
   2b938:	movne	r3, #1
   2b93c:	moveq	r3, #0
   2b940:	uxtb	r3, r3
   2b944:	cmp	r3, #0
   2b948:	beq	2b954 <__assert_fail@plt+0x1a714>
   2b94c:	ldr	r3, [fp, #-12]
   2b950:	b	2b9b4 <__assert_fail@plt+0x1a774>
   2b954:	ldr	r3, [fp, #-8]
   2b958:	ldr	r3, [r3]
   2b95c:	cmp	r3, #0
   2b960:	bne	2b96c <__assert_fail@plt+0x1a72c>
   2b964:	mov	r3, #0
   2b968:	b	2b9b4 <__assert_fail@plt+0x1a774>
   2b96c:	ldr	r3, [fp, #-8]
   2b970:	str	r3, [fp, #-16]
   2b974:	ldr	r3, [fp, #-8]
   2b978:	ldr	r3, [r3]
   2b97c:	str	r3, [fp, #-8]
   2b980:	ldr	r3, [fp, #-8]
   2b984:	ldr	r3, [r3, #8]
   2b988:	ldr	r2, [fp, #-16]
   2b98c:	cmp	r2, r3
   2b990:	beq	2b91c <__assert_fail@plt+0x1a6dc>
   2b994:	ldr	r3, [fp, #-8]
   2b998:	ldr	r3, [r3, #8]
   2b99c:	cmp	r3, #0
   2b9a0:	beq	2b91c <__assert_fail@plt+0x1a6dc>
   2b9a4:	ldr	r3, [fp, #-8]
   2b9a8:	ldr	r3, [r3, #8]
   2b9ac:	str	r3, [fp, #-8]
   2b9b0:	b	2b8fc <__assert_fail@plt+0x1a6bc>
   2b9b4:	mov	r0, r3
   2b9b8:	sub	sp, fp, #4
   2b9bc:	ldr	fp, [sp]
   2b9c0:	add	sp, sp, #4
   2b9c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b9c8:	str	fp, [sp, #-8]!
   2b9cc:	str	lr, [sp, #4]
   2b9d0:	add	fp, sp, #4
   2b9d4:	sub	sp, sp, #32
   2b9d8:	str	r0, [fp, #-24]	; 0xffffffe8
   2b9dc:	str	r1, [fp, #-28]	; 0xffffffe4
   2b9e0:	str	r2, [fp, #-32]	; 0xffffffe0
   2b9e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b9e8:	str	r3, [fp, #-8]
   2b9ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b9f0:	ldr	r1, [fp, #-8]
   2b9f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b9f8:	blx	r3
   2b9fc:	str	r0, [fp, #-16]
   2ba00:	ldr	r3, [fp, #-16]
   2ba04:	cmp	r3, #0
   2ba08:	movne	r3, #1
   2ba0c:	moveq	r3, #0
   2ba10:	uxtb	r3, r3
   2ba14:	cmp	r3, #0
   2ba18:	beq	2ba24 <__assert_fail@plt+0x1a7e4>
   2ba1c:	ldr	r3, [fp, #-16]
   2ba20:	b	2baac <__assert_fail@plt+0x1a86c>
   2ba24:	ldr	r3, [fp, #-8]
   2ba28:	ldr	r3, [r3, #4]
   2ba2c:	cmp	r3, #0
   2ba30:	beq	2ba44 <__assert_fail@plt+0x1a804>
   2ba34:	ldr	r3, [fp, #-8]
   2ba38:	ldr	r3, [r3, #4]
   2ba3c:	str	r3, [fp, #-8]
   2ba40:	b	2b9ec <__assert_fail@plt+0x1a7ac>
   2ba44:	mov	r3, #0
   2ba48:	str	r3, [fp, #-12]
   2ba4c:	b	2ba78 <__assert_fail@plt+0x1a838>
   2ba50:	ldr	r3, [fp, #-8]
   2ba54:	str	r3, [fp, #-12]
   2ba58:	ldr	r3, [fp, #-8]
   2ba5c:	ldr	r3, [r3]
   2ba60:	str	r3, [fp, #-8]
   2ba64:	ldr	r3, [fp, #-8]
   2ba68:	cmp	r3, #0
   2ba6c:	bne	2ba78 <__assert_fail@plt+0x1a838>
   2ba70:	mov	r3, #0
   2ba74:	b	2baac <__assert_fail@plt+0x1a86c>
   2ba78:	ldr	r3, [fp, #-8]
   2ba7c:	ldr	r3, [r3, #8]
   2ba80:	ldr	r2, [fp, #-12]
   2ba84:	cmp	r2, r3
   2ba88:	beq	2ba50 <__assert_fail@plt+0x1a810>
   2ba8c:	ldr	r3, [fp, #-8]
   2ba90:	ldr	r3, [r3, #8]
   2ba94:	cmp	r3, #0
   2ba98:	beq	2ba50 <__assert_fail@plt+0x1a810>
   2ba9c:	ldr	r3, [fp, #-8]
   2baa0:	ldr	r3, [r3, #8]
   2baa4:	str	r3, [fp, #-8]
   2baa8:	b	2b9ec <__assert_fail@plt+0x1a7ac>
   2baac:	mov	r0, r3
   2bab0:	sub	sp, fp, #4
   2bab4:	ldr	fp, [sp]
   2bab8:	add	sp, sp, #4
   2babc:	pop	{pc}		; (ldr pc, [sp], #4)
   2bac0:	push	{fp}		; (str fp, [sp, #-4]!)
   2bac4:	add	fp, sp, #0
   2bac8:	sub	sp, sp, #28
   2bacc:	str	r0, [fp, #-24]	; 0xffffffe8
   2bad0:	str	r1, [fp, #-28]	; 0xffffffe4
   2bad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bad8:	str	r3, [fp, #-8]
   2badc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bae0:	ldrb	r3, [r3, #24]
   2bae4:	cmp	r3, #4
   2bae8:	bne	2bb50 <__assert_fail@plt+0x1a910>
   2baec:	ldr	r3, [fp, #-8]
   2baf0:	ldr	r3, [r3, #132]	; 0x84
   2baf4:	cmp	r3, #0
   2baf8:	beq	2bb50 <__assert_fail@plt+0x1a910>
   2bafc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb00:	ldr	r3, [r3, #20]
   2bb04:	str	r3, [fp, #-12]
   2bb08:	ldr	r3, [fp, #-8]
   2bb0c:	ldr	r2, [r3, #132]	; 0x84
   2bb10:	ldr	r3, [fp, #-12]
   2bb14:	lsl	r3, r3, #2
   2bb18:	add	r3, r2, r3
   2bb1c:	ldr	r2, [r3]
   2bb20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb24:	str	r2, [r3, #20]
   2bb28:	ldr	r3, [fp, #-8]
   2bb2c:	ldr	r3, [r3, #80]	; 0x50
   2bb30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bb34:	ldr	r2, [r2, #20]
   2bb38:	mov	r1, #1
   2bb3c:	lsl	r2, r1, r2
   2bb40:	orr	r2, r3, r2
   2bb44:	ldr	r3, [fp, #-8]
   2bb48:	str	r2, [r3, #80]	; 0x50
   2bb4c:	b	2bc2c <__assert_fail@plt+0x1a9ec>
   2bb50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb54:	ldrb	r3, [r3, #24]
   2bb58:	cmp	r3, #17
   2bb5c:	bne	2bc2c <__assert_fail@plt+0x1a9ec>
   2bb60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb64:	ldr	r3, [r3, #4]
   2bb68:	cmp	r3, #0
   2bb6c:	beq	2bc2c <__assert_fail@plt+0x1a9ec>
   2bb70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb74:	ldr	r3, [r3, #4]
   2bb78:	ldrb	r3, [r3, #24]
   2bb7c:	cmp	r3, #17
   2bb80:	bne	2bc2c <__assert_fail@plt+0x1a9ec>
   2bb84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb88:	ldr	r3, [r3, #4]
   2bb8c:	ldr	r3, [r3, #20]
   2bb90:	str	r3, [fp, #-16]
   2bb94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb98:	ldr	r3, [r3, #4]
   2bb9c:	ldr	r2, [r3, #4]
   2bba0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bba4:	str	r2, [r3, #4]
   2bba8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bbac:	ldr	r3, [r3, #4]
   2bbb0:	cmp	r3, #0
   2bbb4:	beq	2bbc8 <__assert_fail@plt+0x1a988>
   2bbb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bbbc:	ldr	r3, [r3, #4]
   2bbc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bbc4:	str	r2, [r3]
   2bbc8:	ldr	r3, [fp, #-8]
   2bbcc:	ldr	r2, [r3, #132]	; 0x84
   2bbd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bbd4:	ldr	r3, [r3, #20]
   2bbd8:	lsl	r3, r3, #2
   2bbdc:	add	r2, r2, r3
   2bbe0:	ldr	r3, [fp, #-8]
   2bbe4:	ldr	r1, [r3, #132]	; 0x84
   2bbe8:	ldr	r3, [fp, #-16]
   2bbec:	lsl	r3, r3, #2
   2bbf0:	add	r3, r1, r3
   2bbf4:	ldr	r2, [r2]
   2bbf8:	str	r2, [r3]
   2bbfc:	ldr	r3, [fp, #-16]
   2bc00:	cmp	r3, #31
   2bc04:	bgt	2bc2c <__assert_fail@plt+0x1a9ec>
   2bc08:	ldr	r3, [fp, #-8]
   2bc0c:	ldr	r2, [r3, #80]	; 0x50
   2bc10:	mov	r1, #1
   2bc14:	ldr	r3, [fp, #-16]
   2bc18:	lsl	r3, r1, r3
   2bc1c:	mvn	r3, r3
   2bc20:	and	r2, r2, r3
   2bc24:	ldr	r3, [fp, #-8]
   2bc28:	str	r2, [r3, #80]	; 0x50
   2bc2c:	mov	r3, #0
   2bc30:	mov	r0, r3
   2bc34:	add	sp, fp, #0
   2bc38:	pop	{fp}		; (ldr fp, [sp], #4)
   2bc3c:	bx	lr
   2bc40:	str	fp, [sp, #-8]!
   2bc44:	str	lr, [sp, #4]
   2bc48:	add	fp, sp, #4
   2bc4c:	sub	sp, sp, #16
   2bc50:	str	r0, [fp, #-16]
   2bc54:	str	r1, [fp, #-20]	; 0xffffffec
   2bc58:	ldr	r3, [fp, #-16]
   2bc5c:	str	r3, [fp, #-8]
   2bc60:	mov	r3, #0
   2bc64:	str	r3, [fp, #-12]
   2bc68:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc6c:	ldr	r3, [r3, #4]
   2bc70:	cmp	r3, #0
   2bc74:	beq	2bcd0 <__assert_fail@plt+0x1aa90>
   2bc78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc7c:	ldr	r3, [r3, #4]
   2bc80:	ldrb	r3, [r3, #24]
   2bc84:	cmp	r3, #17
   2bc88:	bne	2bcd0 <__assert_fail@plt+0x1aa90>
   2bc8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc90:	ldr	r2, [r3, #4]
   2bc94:	sub	r3, fp, #12
   2bc98:	ldr	r1, [fp, #-8]
   2bc9c:	mov	r0, r3
   2bca0:	bl	2bd50 <__assert_fail@plt+0x1ab10>
   2bca4:	mov	r2, r0
   2bca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcac:	str	r2, [r3, #4]
   2bcb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcb4:	ldr	r3, [r3, #4]
   2bcb8:	cmp	r3, #0
   2bcbc:	beq	2bcd0 <__assert_fail@plt+0x1aa90>
   2bcc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcc4:	ldr	r3, [r3, #4]
   2bcc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bccc:	str	r2, [r3]
   2bcd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcd4:	ldr	r3, [r3, #8]
   2bcd8:	cmp	r3, #0
   2bcdc:	beq	2bd38 <__assert_fail@plt+0x1aaf8>
   2bce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bce4:	ldr	r3, [r3, #8]
   2bce8:	ldrb	r3, [r3, #24]
   2bcec:	cmp	r3, #17
   2bcf0:	bne	2bd38 <__assert_fail@plt+0x1aaf8>
   2bcf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcf8:	ldr	r2, [r3, #8]
   2bcfc:	sub	r3, fp, #12
   2bd00:	ldr	r1, [fp, #-8]
   2bd04:	mov	r0, r3
   2bd08:	bl	2bd50 <__assert_fail@plt+0x1ab10>
   2bd0c:	mov	r2, r0
   2bd10:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd14:	str	r2, [r3, #8]
   2bd18:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd1c:	ldr	r3, [r3, #8]
   2bd20:	cmp	r3, #0
   2bd24:	beq	2bd38 <__assert_fail@plt+0x1aaf8>
   2bd28:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd2c:	ldr	r3, [r3, #8]
   2bd30:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bd34:	str	r2, [r3]
   2bd38:	ldr	r3, [fp, #-12]
   2bd3c:	mov	r0, r3
   2bd40:	sub	sp, fp, #4
   2bd44:	ldr	fp, [sp]
   2bd48:	add	sp, sp, #4
   2bd4c:	pop	{pc}		; (ldr pc, [sp], #4)
   2bd50:	str	fp, [sp, #-8]!
   2bd54:	str	lr, [sp, #4]
   2bd58:	add	fp, sp, #4
   2bd5c:	sub	sp, sp, #40	; 0x28
   2bd60:	str	r0, [fp, #-32]	; 0xffffffe0
   2bd64:	str	r1, [fp, #-36]	; 0xffffffdc
   2bd68:	str	r2, [fp, #-40]	; 0xffffffd8
   2bd6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bd70:	ldr	r3, [r3]
   2bd74:	str	r3, [fp, #-8]
   2bd78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bd7c:	ldr	r3, [r3, #4]
   2bd80:	str	r3, [fp, #-12]
   2bd84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bd88:	ldrb	r3, [r3, #28]
   2bd8c:	and	r3, r3, #16
   2bd90:	uxtb	r3, r3
   2bd94:	cmp	r3, #0
   2bd98:	beq	2bde8 <__assert_fail@plt+0x1aba8>
   2bd9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bda0:	ldr	r3, [r3, #4]
   2bda4:	cmp	r3, #0
   2bda8:	beq	2bde8 <__assert_fail@plt+0x1aba8>
   2bdac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bdb0:	ldr	r3, [r3, #20]
   2bdb4:	cmp	r3, #31
   2bdb8:	bgt	2bddc <__assert_fail@plt+0x1ab9c>
   2bdbc:	ldr	r3, [fp, #-8]
   2bdc0:	ldr	r2, [r3, #80]	; 0x50
   2bdc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bdc8:	ldr	r3, [r3, #20]
   2bdcc:	lsr	r3, r2, r3
   2bdd0:	and	r3, r3, #1
   2bdd4:	cmp	r3, #0
   2bdd8:	bne	2bde8 <__assert_fail@plt+0x1aba8>
   2bddc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bde0:	ldr	r3, [r3, #4]
   2bde4:	b	2bf70 <__assert_fail@plt+0x1ad30>
   2bde8:	mov	r3, #8
   2bdec:	mov	r2, #0
   2bdf0:	mov	r1, #0
   2bdf4:	ldr	r0, [fp, #-8]
   2bdf8:	bl	32000 <__assert_fail@plt+0x20dc0>
   2bdfc:	str	r0, [fp, #-16]
   2be00:	mov	r3, #9
   2be04:	mov	r2, #0
   2be08:	mov	r1, #0
   2be0c:	ldr	r0, [fp, #-8]
   2be10:	bl	32000 <__assert_fail@plt+0x20dc0>
   2be14:	str	r0, [fp, #-20]	; 0xffffffec
   2be18:	ldr	r3, [fp, #-12]
   2be1c:	cmp	r3, #0
   2be20:	beq	2be40 <__assert_fail@plt+0x1ac00>
   2be24:	mov	r3, #16
   2be28:	ldr	r2, [fp, #-20]	; 0xffffffec
   2be2c:	ldr	r1, [fp, #-12]
   2be30:	ldr	r0, [fp, #-8]
   2be34:	bl	32000 <__assert_fail@plt+0x20dc0>
   2be38:	mov	r3, r0
   2be3c:	b	2be44 <__assert_fail@plt+0x1ac04>
   2be40:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be44:	str	r3, [fp, #-24]	; 0xffffffe8
   2be48:	mov	r3, #16
   2be4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2be50:	ldr	r1, [fp, #-16]
   2be54:	ldr	r0, [fp, #-8]
   2be58:	bl	32000 <__assert_fail@plt+0x20dc0>
   2be5c:	str	r0, [fp, #-28]	; 0xffffffe4
   2be60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2be64:	cmp	r3, #0
   2be68:	moveq	r3, #1
   2be6c:	movne	r3, #0
   2be70:	uxtb	r3, r3
   2be74:	cmp	r3, #0
   2be78:	bne	2be98 <__assert_fail@plt+0x1ac58>
   2be7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be80:	cmp	r3, #0
   2be84:	moveq	r3, #1
   2be88:	movne	r3, #0
   2be8c:	uxtb	r3, r3
   2be90:	cmp	r3, #0
   2be94:	beq	2bea0 <__assert_fail@plt+0x1ac60>
   2be98:	mov	r3, #1
   2be9c:	b	2bea4 <__assert_fail@plt+0x1ac64>
   2bea0:	mov	r3, #0
   2bea4:	cmp	r3, #0
   2bea8:	bne	2bec8 <__assert_fail@plt+0x1ac88>
   2beac:	ldr	r3, [fp, #-16]
   2beb0:	cmp	r3, #0
   2beb4:	moveq	r3, #1
   2beb8:	movne	r3, #0
   2bebc:	uxtb	r3, r3
   2bec0:	cmp	r3, #0
   2bec4:	beq	2bed0 <__assert_fail@plt+0x1ac90>
   2bec8:	mov	r3, #1
   2becc:	b	2bed4 <__assert_fail@plt+0x1ac94>
   2bed0:	mov	r3, #0
   2bed4:	cmp	r3, #0
   2bed8:	bne	2bef8 <__assert_fail@plt+0x1acb8>
   2bedc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bee0:	cmp	r3, #0
   2bee4:	moveq	r3, #1
   2bee8:	movne	r3, #0
   2beec:	uxtb	r3, r3
   2bef0:	cmp	r3, #0
   2bef4:	beq	2bf0c <__assert_fail@plt+0x1accc>
   2bef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2befc:	mov	r2, #12
   2bf00:	str	r2, [r3]
   2bf04:	mov	r3, #0
   2bf08:	b	2bf70 <__assert_fail@plt+0x1ad30>
   2bf0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bf10:	ldr	r2, [r3, #20]
   2bf14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bf18:	str	r2, [r3, #20]
   2bf1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bf20:	ldr	r2, [r3, #20]
   2bf24:	ldr	r3, [fp, #-16]
   2bf28:	str	r2, [r3, #20]
   2bf2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bf30:	ldrb	r3, [r3, #26]
   2bf34:	ubfx	r3, r3, #3, #1
   2bf38:	uxtb	r1, r3
   2bf3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bf40:	ldrb	r3, [r2, #26]
   2bf44:	bfi	r3, r1, #3, #1
   2bf48:	strb	r3, [r2, #26]
   2bf4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bf50:	ldrb	r3, [r3, #26]
   2bf54:	ubfx	r3, r3, #3, #1
   2bf58:	uxtb	r1, r3
   2bf5c:	ldr	r2, [fp, #-16]
   2bf60:	ldrb	r3, [r2, #26]
   2bf64:	bfi	r3, r1, #3, #1
   2bf68:	strb	r3, [r2, #26]
   2bf6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bf70:	mov	r0, r3
   2bf74:	sub	sp, fp, #4
   2bf78:	ldr	fp, [sp]
   2bf7c:	add	sp, sp, #4
   2bf80:	pop	{pc}		; (ldr pc, [sp], #4)
   2bf84:	str	fp, [sp, #-8]!
   2bf88:	str	lr, [sp, #4]
   2bf8c:	add	fp, sp, #4
   2bf90:	sub	sp, sp, #16
   2bf94:	str	r0, [fp, #-16]
   2bf98:	str	r1, [fp, #-20]	; 0xffffffec
   2bf9c:	ldr	r3, [fp, #-16]
   2bfa0:	str	r3, [fp, #-8]
   2bfa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfa8:	ldrb	r3, [r3, #24]
   2bfac:	cmp	r3, #16
   2bfb0:	bne	2bfe0 <__assert_fail@plt+0x1ada0>
   2bfb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfb8:	ldr	r3, [r3, #4]
   2bfbc:	ldr	r2, [r3, #12]
   2bfc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfc4:	str	r2, [r3, #12]
   2bfc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfcc:	ldr	r3, [r3, #4]
   2bfd0:	ldr	r2, [r3, #28]
   2bfd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfd8:	str	r2, [r3, #28]
   2bfdc:	b	2c07c <__assert_fail@plt+0x1ae3c>
   2bfe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bfe8:	str	r2, [r3, #12]
   2bfec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bff0:	add	r3, r3, #20
   2bff4:	ldm	r3, {r1, r2}
   2bff8:	ldr	r0, [fp, #-8]
   2bffc:	bl	281c4 <__assert_fail@plt+0x16f84>
   2c000:	mov	r2, r0
   2c004:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c008:	str	r2, [r3, #28]
   2c00c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c010:	ldr	r3, [r3, #28]
   2c014:	cmn	r3, #1
   2c018:	moveq	r3, #1
   2c01c:	movne	r3, #0
   2c020:	uxtb	r3, r3
   2c024:	cmp	r3, #0
   2c028:	beq	2c034 <__assert_fail@plt+0x1adf4>
   2c02c:	mov	r3, #12
   2c030:	b	2c080 <__assert_fail@plt+0x1ae40>
   2c034:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c038:	ldrb	r3, [r3, #24]
   2c03c:	cmp	r3, #12
   2c040:	bne	2c07c <__assert_fail@plt+0x1ae3c>
   2c044:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c048:	ldr	r1, [r3, #20]
   2c04c:	ldr	r3, [fp, #-8]
   2c050:	ldr	r2, [r3]
   2c054:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c058:	ldr	r3, [r3, #28]
   2c05c:	lsl	r3, r3, #3
   2c060:	add	r2, r2, r3
   2c064:	mov	r3, r1
   2c068:	ubfx	r3, r3, #0, #10
   2c06c:	uxth	r1, r3
   2c070:	ldr	r3, [r2, #4]
   2c074:	bfi	r3, r1, #8, #10
   2c078:	str	r3, [r2, #4]
   2c07c:	mov	r3, #0
   2c080:	mov	r0, r3
   2c084:	sub	sp, fp, #4
   2c088:	ldr	fp, [sp]
   2c08c:	add	sp, sp, #4
   2c090:	pop	{pc}		; (ldr pc, [sp], #4)
   2c094:	push	{fp}		; (str fp, [sp, #-4]!)
   2c098:	add	fp, sp, #0
   2c09c:	sub	sp, sp, #12
   2c0a0:	str	r0, [fp, #-8]
   2c0a4:	str	r1, [fp, #-12]
   2c0a8:	ldr	r3, [fp, #-12]
   2c0ac:	ldrb	r3, [r3, #24]
   2c0b0:	cmp	r3, #11
   2c0b4:	beq	2c0c4 <__assert_fail@plt+0x1ae84>
   2c0b8:	cmp	r3, #16
   2c0bc:	beq	2c0d8 <__assert_fail@plt+0x1ae98>
   2c0c0:	b	2c108 <__assert_fail@plt+0x1aec8>
   2c0c4:	ldr	r3, [fp, #-12]
   2c0c8:	ldr	r3, [r3, #4]
   2c0cc:	ldr	r2, [fp, #-12]
   2c0d0:	str	r2, [r3, #16]
   2c0d4:	b	2c154 <__assert_fail@plt+0x1af14>
   2c0d8:	ldr	r3, [fp, #-12]
   2c0dc:	ldr	r2, [r3, #8]
   2c0e0:	ldr	r3, [fp, #-12]
   2c0e4:	ldr	r3, [r3, #4]
   2c0e8:	ldr	r2, [r2, #12]
   2c0ec:	str	r2, [r3, #16]
   2c0f0:	ldr	r3, [fp, #-12]
   2c0f4:	ldr	r3, [r3, #8]
   2c0f8:	ldr	r2, [fp, #-12]
   2c0fc:	ldr	r2, [r2, #16]
   2c100:	str	r2, [r3, #16]
   2c104:	b	2c154 <__assert_fail@plt+0x1af14>
   2c108:	ldr	r3, [fp, #-12]
   2c10c:	ldr	r3, [r3, #4]
   2c110:	cmp	r3, #0
   2c114:	beq	2c12c <__assert_fail@plt+0x1aeec>
   2c118:	ldr	r3, [fp, #-12]
   2c11c:	ldr	r3, [r3, #4]
   2c120:	ldr	r2, [fp, #-12]
   2c124:	ldr	r2, [r2, #16]
   2c128:	str	r2, [r3, #16]
   2c12c:	ldr	r3, [fp, #-12]
   2c130:	ldr	r3, [r3, #8]
   2c134:	cmp	r3, #0
   2c138:	beq	2c150 <__assert_fail@plt+0x1af10>
   2c13c:	ldr	r3, [fp, #-12]
   2c140:	ldr	r3, [r3, #8]
   2c144:	ldr	r2, [fp, #-12]
   2c148:	ldr	r2, [r2, #16]
   2c14c:	str	r2, [r3, #16]
   2c150:	nop	{0}
   2c154:	mov	r3, #0
   2c158:	mov	r0, r3
   2c15c:	add	sp, fp, #0
   2c160:	pop	{fp}		; (ldr fp, [sp], #4)
   2c164:	bx	lr
   2c168:	str	fp, [sp, #-8]!
   2c16c:	str	lr, [sp, #4]
   2c170:	add	fp, sp, #4
   2c174:	sub	sp, sp, #32
   2c178:	str	r0, [fp, #-32]	; 0xffffffe0
   2c17c:	str	r1, [fp, #-36]	; 0xffffffdc
   2c180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c184:	str	r3, [fp, #-20]	; 0xffffffec
   2c188:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c18c:	ldr	r3, [r3, #28]
   2c190:	str	r3, [fp, #-24]	; 0xffffffe8
   2c194:	mov	r3, #0
   2c198:	str	r3, [fp, #-8]
   2c19c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c1a0:	ldrb	r3, [r3, #24]
   2c1a4:	sub	r3, r3, #2
   2c1a8:	cmp	r3, #14
   2c1ac:	ldrls	pc, [pc, r3, lsl #2]
   2c1b0:	b	2c384 <__assert_fail@plt+0x1b144>
   2c1b4:	strdeq	ip, [r2], -r0
   2c1b8:	andeq	ip, r2, r4, lsl #7
   2c1bc:	andeq	ip, r2, r8, lsl #6
   2c1c0:	andeq	ip, r2, r4, lsl #7
   2c1c4:	andeq	ip, r2, r4, lsl #7
   2c1c8:	andeq	ip, r2, r4, lsl #7
   2c1cc:	andeq	ip, r2, r8, asr #5
   2c1d0:	andeq	ip, r2, r8, asr #5
   2c1d4:	andeq	ip, r2, r0, lsl #4
   2c1d8:	andeq	ip, r2, r0, lsl #4
   2c1dc:	andeq	ip, r2, r8, asr #5
   2c1e0:	andeq	ip, r2, r4, lsl #7
   2c1e4:	andeq	ip, r2, r4, lsl #7
   2c1e8:	andeq	ip, r2, r4, lsl #7
   2c1ec:			; <UNDEFINED> instruction: 0x0002c3bc
   2c1f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c1f4:	ldr	r3, [r3, #16]
   2c1f8:	cmp	r3, #0
   2c1fc:	b	2c3c8 <__assert_fail@plt+0x1b188>
   2c200:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c204:	ldrb	r3, [r2, #88]	; 0x58
   2c208:	orr	r3, r3, #1
   2c20c:	strb	r3, [r2, #88]	; 0x58
   2c210:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c214:	ldr	r3, [r3, #4]
   2c218:	cmp	r3, #0
   2c21c:	beq	2c238 <__assert_fail@plt+0x1aff8>
   2c220:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c224:	ldr	r3, [r3, #4]
   2c228:	ldr	r3, [r3, #12]
   2c22c:	ldr	r3, [r3, #28]
   2c230:	str	r3, [fp, #-12]
   2c234:	b	2c248 <__assert_fail@plt+0x1b008>
   2c238:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c23c:	ldr	r3, [r3, #16]
   2c240:	ldr	r3, [r3, #28]
   2c244:	str	r3, [fp, #-12]
   2c248:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c24c:	ldr	r3, [r3, #8]
   2c250:	cmp	r3, #0
   2c254:	beq	2c270 <__assert_fail@plt+0x1b030>
   2c258:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c25c:	ldr	r3, [r3, #8]
   2c260:	ldr	r3, [r3, #12]
   2c264:	ldr	r3, [r3, #28]
   2c268:	str	r3, [fp, #-16]
   2c26c:	b	2c280 <__assert_fail@plt+0x1b040>
   2c270:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c274:	ldr	r3, [r3, #16]
   2c278:	ldr	r3, [r3, #28]
   2c27c:	str	r3, [fp, #-16]
   2c280:	ldr	r3, [fp, #-12]
   2c284:	cmp	r3, #0
   2c288:	ldr	r3, [fp, #-16]
   2c28c:	cmp	r3, #0
   2c290:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c294:	ldr	r1, [r3, #20]
   2c298:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c29c:	mov	r3, r2
   2c2a0:	lsl	r3, r3, #1
   2c2a4:	add	r3, r3, r2
   2c2a8:	lsl	r3, r3, #2
   2c2ac:	add	r3, r1, r3
   2c2b0:	ldr	r2, [fp, #-16]
   2c2b4:	ldr	r1, [fp, #-12]
   2c2b8:	mov	r0, r3
   2c2bc:	bl	26d58 <__assert_fail@plt+0x15b18>
   2c2c0:	str	r0, [fp, #-8]
   2c2c4:	b	2c3c8 <__assert_fail@plt+0x1b188>
   2c2c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c2cc:	ldr	r1, [r3, #20]
   2c2d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c2d4:	mov	r3, r2
   2c2d8:	lsl	r3, r3, #1
   2c2dc:	add	r3, r3, r2
   2c2e0:	lsl	r3, r3, #2
   2c2e4:	add	r2, r1, r3
   2c2e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c2ec:	ldr	r3, [r3, #16]
   2c2f0:	ldr	r3, [r3, #28]
   2c2f4:	mov	r1, r3
   2c2f8:	mov	r0, r2
   2c2fc:	bl	26ca4 <__assert_fail@plt+0x15a64>
   2c300:	str	r0, [fp, #-8]
   2c304:	b	2c3c8 <__assert_fail@plt+0x1b188>
   2c308:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c30c:	ldr	r2, [r3, #16]
   2c310:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c314:	ldr	r1, [r3, #12]
   2c318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c31c:	lsl	r3, r3, #2
   2c320:	add	r3, r1, r3
   2c324:	ldr	r2, [r2, #28]
   2c328:	str	r2, [r3]
   2c32c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c330:	ldrb	r3, [r3, #24]
   2c334:	cmp	r3, #4
   2c338:	bne	2c3c4 <__assert_fail@plt+0x1b184>
   2c33c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c340:	ldr	r1, [r3, #20]
   2c344:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c348:	mov	r3, r2
   2c34c:	lsl	r3, r3, #1
   2c350:	add	r3, r3, r2
   2c354:	lsl	r3, r3, #2
   2c358:	add	r0, r1, r3
   2c35c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c360:	ldr	r2, [r3, #12]
   2c364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c368:	lsl	r3, r3, #2
   2c36c:	add	r3, r2, r3
   2c370:	ldr	r3, [r3]
   2c374:	mov	r1, r3
   2c378:	bl	26ca4 <__assert_fail@plt+0x15a64>
   2c37c:	str	r0, [fp, #-8]
   2c380:	b	2c3c4 <__assert_fail@plt+0x1b184>
   2c384:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c388:	ldrb	r3, [r3, #24]
   2c38c:	and	r3, r3, #8
   2c390:	cmp	r3, #0
   2c394:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c398:	ldr	r2, [r3, #16]
   2c39c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c3a0:	ldr	r1, [r3, #12]
   2c3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3a8:	lsl	r3, r3, #2
   2c3ac:	add	r3, r1, r3
   2c3b0:	ldr	r2, [r2, #28]
   2c3b4:	str	r2, [r3]
   2c3b8:	b	2c3c8 <__assert_fail@plt+0x1b188>
   2c3bc:	nop	{0}
   2c3c0:	b	2c3c8 <__assert_fail@plt+0x1b188>
   2c3c4:	nop	{0}
   2c3c8:	ldr	r3, [fp, #-8]
   2c3cc:	mov	r0, r3
   2c3d0:	sub	sp, fp, #4
   2c3d4:	ldr	fp, [sp]
   2c3d8:	add	sp, sp, #4
   2c3dc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c3e0:	str	fp, [sp, #-8]!
   2c3e4:	str	lr, [sp, #4]
   2c3e8:	add	fp, sp, #4
   2c3ec:	sub	sp, sp, #56	; 0x38
   2c3f0:	str	r0, [fp, #-40]	; 0xffffffd8
   2c3f4:	str	r1, [fp, #-44]	; 0xffffffd4
   2c3f8:	str	r2, [fp, #-48]	; 0xffffffd0
   2c3fc:	str	r3, [fp, #-52]	; 0xffffffcc
   2c400:	ldr	r3, [fp, #4]
   2c404:	str	r3, [fp, #-16]
   2c408:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c40c:	str	r3, [fp, #-8]
   2c410:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c414:	str	r3, [fp, #-12]
   2c418:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c41c:	ldr	r2, [r3]
   2c420:	ldr	r3, [fp, #-8]
   2c424:	lsl	r3, r3, #3
   2c428:	add	r3, r2, r3
   2c42c:	ldrb	r3, [r3, #4]
   2c430:	cmp	r3, #4
   2c434:	bne	2c534 <__assert_fail@plt+0x1b2f4>
   2c438:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c43c:	ldr	r2, [r3, #12]
   2c440:	ldr	r3, [fp, #-8]
   2c444:	lsl	r3, r3, #2
   2c448:	add	r3, r2, r3
   2c44c:	ldr	r3, [r3]
   2c450:	str	r3, [fp, #-20]	; 0xffffffec
   2c454:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c458:	ldr	r1, [r3, #20]
   2c45c:	ldr	r2, [fp, #-12]
   2c460:	mov	r3, r2
   2c464:	lsl	r3, r3, #1
   2c468:	add	r3, r3, r2
   2c46c:	lsl	r3, r3, #2
   2c470:	add	r3, r1, r3
   2c474:	mov	r2, #0
   2c478:	str	r2, [r3, #4]
   2c47c:	ldr	r2, [fp, #-16]
   2c480:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c484:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c488:	bl	2ca8c <__assert_fail@plt+0x1b84c>
   2c48c:	str	r0, [fp, #-24]	; 0xffffffe8
   2c490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c494:	cmn	r3, #1
   2c498:	moveq	r3, #1
   2c49c:	movne	r3, #0
   2c4a0:	uxtb	r3, r3
   2c4a4:	cmp	r3, #0
   2c4a8:	beq	2c4b4 <__assert_fail@plt+0x1b274>
   2c4ac:	mov	r3, #12
   2c4b0:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c4b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c4b8:	ldr	r2, [r3, #12]
   2c4bc:	ldr	r3, [fp, #-8]
   2c4c0:	lsl	r3, r3, #2
   2c4c4:	add	r2, r2, r3
   2c4c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c4cc:	ldr	r1, [r3, #12]
   2c4d0:	ldr	r3, [fp, #-12]
   2c4d4:	lsl	r3, r3, #2
   2c4d8:	add	r3, r1, r3
   2c4dc:	ldr	r2, [r2]
   2c4e0:	str	r2, [r3]
   2c4e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c4e8:	ldr	r1, [r3, #20]
   2c4ec:	ldr	r2, [fp, #-12]
   2c4f0:	mov	r3, r2
   2c4f4:	lsl	r3, r3, #1
   2c4f8:	add	r3, r3, r2
   2c4fc:	lsl	r3, r3, #2
   2c500:	add	r3, r1, r3
   2c504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c508:	mov	r0, r3
   2c50c:	bl	27bfc <__assert_fail@plt+0x169bc>
   2c510:	mov	r3, r0
   2c514:	strb	r3, [fp, #-25]	; 0xffffffe7
   2c518:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c51c:	eor	r3, r3, #1
   2c520:	uxtb	r3, r3
   2c524:	cmp	r3, #0
   2c528:	beq	2c980 <__assert_fail@plt+0x1b740>
   2c52c:	mov	r3, #12
   2c530:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c534:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c538:	ldr	r1, [r3, #20]
   2c53c:	ldr	r2, [fp, #-8]
   2c540:	mov	r3, r2
   2c544:	lsl	r3, r3, #1
   2c548:	add	r3, r3, r2
   2c54c:	lsl	r3, r3, #2
   2c550:	add	r3, r1, r3
   2c554:	ldr	r3, [r3, #4]
   2c558:	cmp	r3, #0
   2c55c:	bne	2c594 <__assert_fail@plt+0x1b354>
   2c560:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c564:	ldr	r2, [r3, #12]
   2c568:	ldr	r3, [fp, #-8]
   2c56c:	lsl	r3, r3, #2
   2c570:	add	r2, r2, r3
   2c574:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c578:	ldr	r1, [r3, #12]
   2c57c:	ldr	r3, [fp, #-12]
   2c580:	lsl	r3, r3, #2
   2c584:	add	r3, r1, r3
   2c588:	ldr	r2, [r2]
   2c58c:	str	r2, [r3]
   2c590:	b	2c998 <__assert_fail@plt+0x1b758>
   2c594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c598:	ldr	r1, [r3, #20]
   2c59c:	ldr	r2, [fp, #-8]
   2c5a0:	mov	r3, r2
   2c5a4:	lsl	r3, r3, #1
   2c5a8:	add	r3, r3, r2
   2c5ac:	lsl	r3, r3, #2
   2c5b0:	add	r3, r1, r3
   2c5b4:	ldr	r3, [r3, #4]
   2c5b8:	cmp	r3, #1
   2c5bc:	bne	2c73c <__assert_fail@plt+0x1b4fc>
   2c5c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c5c4:	ldr	r1, [r3, #20]
   2c5c8:	ldr	r2, [fp, #-8]
   2c5cc:	mov	r3, r2
   2c5d0:	lsl	r3, r3, #1
   2c5d4:	add	r3, r3, r2
   2c5d8:	lsl	r3, r3, #2
   2c5dc:	add	r3, r1, r3
   2c5e0:	ldr	r3, [r3, #8]
   2c5e4:	ldr	r3, [r3]
   2c5e8:	str	r3, [fp, #-20]	; 0xffffffec
   2c5ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c5f0:	ldr	r1, [r3, #20]
   2c5f4:	ldr	r2, [fp, #-12]
   2c5f8:	mov	r3, r2
   2c5fc:	lsl	r3, r3, #1
   2c600:	add	r3, r3, r2
   2c604:	lsl	r3, r3, #2
   2c608:	add	r3, r1, r3
   2c60c:	mov	r2, #0
   2c610:	str	r2, [r3, #4]
   2c614:	ldr	r2, [fp, #-8]
   2c618:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c61c:	cmp	r2, r3
   2c620:	bne	2c684 <__assert_fail@plt+0x1b444>
   2c624:	ldr	r2, [fp, #-12]
   2c628:	ldr	r3, [fp, #-8]
   2c62c:	cmp	r2, r3
   2c630:	beq	2c684 <__assert_fail@plt+0x1b444>
   2c634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c638:	ldr	r1, [r3, #20]
   2c63c:	ldr	r2, [fp, #-12]
   2c640:	mov	r3, r2
   2c644:	lsl	r3, r3, #1
   2c648:	add	r3, r3, r2
   2c64c:	lsl	r3, r3, #2
   2c650:	add	r3, r1, r3
   2c654:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c658:	mov	r0, r3
   2c65c:	bl	27bfc <__assert_fail@plt+0x169bc>
   2c660:	mov	r3, r0
   2c664:	strb	r3, [fp, #-25]	; 0xffffffe7
   2c668:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c66c:	eor	r3, r3, #1
   2c670:	uxtb	r3, r3
   2c674:	cmp	r3, #0
   2c678:	beq	2c994 <__assert_fail@plt+0x1b754>
   2c67c:	mov	r3, #12
   2c680:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c684:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c688:	ldr	r2, [r3]
   2c68c:	ldr	r3, [fp, #-8]
   2c690:	lsl	r3, r3, #3
   2c694:	add	r3, r2, r3
   2c698:	ldr	r3, [r3, #4]
   2c69c:	ubfx	r3, r3, #8, #10
   2c6a0:	uxth	r3, r3
   2c6a4:	mov	r2, r3
   2c6a8:	ldr	r3, [fp, #-16]
   2c6ac:	orr	r3, r3, r2
   2c6b0:	str	r3, [fp, #-16]
   2c6b4:	ldr	r2, [fp, #-16]
   2c6b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c6bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c6c0:	bl	2ca8c <__assert_fail@plt+0x1b84c>
   2c6c4:	str	r0, [fp, #-24]	; 0xffffffe8
   2c6c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c6cc:	cmn	r3, #1
   2c6d0:	moveq	r3, #1
   2c6d4:	movne	r3, #0
   2c6d8:	uxtb	r3, r3
   2c6dc:	cmp	r3, #0
   2c6e0:	beq	2c6ec <__assert_fail@plt+0x1b4ac>
   2c6e4:	mov	r3, #12
   2c6e8:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c6ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c6f0:	ldr	r1, [r3, #20]
   2c6f4:	ldr	r2, [fp, #-12]
   2c6f8:	mov	r3, r2
   2c6fc:	lsl	r3, r3, #1
   2c700:	add	r3, r3, r2
   2c704:	lsl	r3, r3, #2
   2c708:	add	r3, r1, r3
   2c70c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c710:	mov	r0, r3
   2c714:	bl	27bfc <__assert_fail@plt+0x169bc>
   2c718:	mov	r3, r0
   2c71c:	strb	r3, [fp, #-25]	; 0xffffffe7
   2c720:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c724:	eor	r3, r3, #1
   2c728:	uxtb	r3, r3
   2c72c:	cmp	r3, #0
   2c730:	beq	2c980 <__assert_fail@plt+0x1b740>
   2c734:	mov	r3, #12
   2c738:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c73c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c740:	ldr	r1, [r3, #20]
   2c744:	ldr	r2, [fp, #-8]
   2c748:	mov	r3, r2
   2c74c:	lsl	r3, r3, #1
   2c750:	add	r3, r3, r2
   2c754:	lsl	r3, r3, #2
   2c758:	add	r3, r1, r3
   2c75c:	ldr	r3, [r3, #8]
   2c760:	ldr	r3, [r3]
   2c764:	str	r3, [fp, #-20]	; 0xffffffec
   2c768:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c76c:	ldr	r1, [r3, #20]
   2c770:	ldr	r2, [fp, #-12]
   2c774:	mov	r3, r2
   2c778:	lsl	r3, r3, #1
   2c77c:	add	r3, r3, r2
   2c780:	lsl	r3, r3, #2
   2c784:	add	r3, r1, r3
   2c788:	mov	r2, #0
   2c78c:	str	r2, [r3, #4]
   2c790:	ldr	r2, [fp, #-16]
   2c794:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c798:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c79c:	bl	2c9b0 <__assert_fail@plt+0x1b770>
   2c7a0:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c7a8:	cmn	r3, #1
   2c7ac:	bne	2c87c <__assert_fail@plt+0x1b63c>
   2c7b0:	ldr	r2, [fp, #-16]
   2c7b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c7b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c7bc:	bl	2ca8c <__assert_fail@plt+0x1b84c>
   2c7c0:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c7c8:	cmn	r3, #1
   2c7cc:	moveq	r3, #1
   2c7d0:	movne	r3, #0
   2c7d4:	uxtb	r3, r3
   2c7d8:	cmp	r3, #0
   2c7dc:	beq	2c7e8 <__assert_fail@plt+0x1b5a8>
   2c7e0:	mov	r3, #12
   2c7e4:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c7ec:	ldr	r1, [r3, #20]
   2c7f0:	ldr	r2, [fp, #-12]
   2c7f4:	mov	r3, r2
   2c7f8:	lsl	r3, r3, #1
   2c7fc:	add	r3, r3, r2
   2c800:	lsl	r3, r3, #2
   2c804:	add	r3, r1, r3
   2c808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c80c:	mov	r0, r3
   2c810:	bl	27bfc <__assert_fail@plt+0x169bc>
   2c814:	mov	r3, r0
   2c818:	strb	r3, [fp, #-25]	; 0xffffffe7
   2c81c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c820:	eor	r3, r3, #1
   2c824:	uxtb	r3, r3
   2c828:	cmp	r3, #0
   2c82c:	beq	2c838 <__assert_fail@plt+0x1b5f8>
   2c830:	mov	r3, #12
   2c834:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c838:	ldr	r3, [fp, #-16]
   2c83c:	str	r3, [sp]
   2c840:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c844:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c848:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c84c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c850:	bl	2c3e0 <__assert_fail@plt+0x1b1a0>
   2c854:	str	r0, [fp, #-32]	; 0xffffffe0
   2c858:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c85c:	cmp	r3, #0
   2c860:	movne	r3, #1
   2c864:	moveq	r3, #0
   2c868:	uxtb	r3, r3
   2c86c:	cmp	r3, #0
   2c870:	beq	2c8cc <__assert_fail@plt+0x1b68c>
   2c874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c878:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c87c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c880:	ldr	r1, [r3, #20]
   2c884:	ldr	r2, [fp, #-12]
   2c888:	mov	r3, r2
   2c88c:	lsl	r3, r3, #1
   2c890:	add	r3, r3, r2
   2c894:	lsl	r3, r3, #2
   2c898:	add	r3, r1, r3
   2c89c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c8a0:	mov	r0, r3
   2c8a4:	bl	27bfc <__assert_fail@plt+0x169bc>
   2c8a8:	mov	r3, r0
   2c8ac:	strb	r3, [fp, #-25]	; 0xffffffe7
   2c8b0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c8b4:	eor	r3, r3, #1
   2c8b8:	uxtb	r3, r3
   2c8bc:	cmp	r3, #0
   2c8c0:	beq	2c8cc <__assert_fail@plt+0x1b68c>
   2c8c4:	mov	r3, #12
   2c8c8:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c8cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c8d0:	ldr	r1, [r3, #20]
   2c8d4:	ldr	r2, [fp, #-8]
   2c8d8:	mov	r3, r2
   2c8dc:	lsl	r3, r3, #1
   2c8e0:	add	r3, r3, r2
   2c8e4:	lsl	r3, r3, #2
   2c8e8:	add	r3, r1, r3
   2c8ec:	ldr	r3, [r3, #8]
   2c8f0:	ldr	r3, [r3, #4]
   2c8f4:	str	r3, [fp, #-20]	; 0xffffffec
   2c8f8:	ldr	r2, [fp, #-16]
   2c8fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c900:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c904:	bl	2ca8c <__assert_fail@plt+0x1b84c>
   2c908:	str	r0, [fp, #-24]	; 0xffffffe8
   2c90c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c910:	cmn	r3, #1
   2c914:	moveq	r3, #1
   2c918:	movne	r3, #0
   2c91c:	uxtb	r3, r3
   2c920:	cmp	r3, #0
   2c924:	beq	2c930 <__assert_fail@plt+0x1b6f0>
   2c928:	mov	r3, #12
   2c92c:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c930:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c934:	ldr	r1, [r3, #20]
   2c938:	ldr	r2, [fp, #-12]
   2c93c:	mov	r3, r2
   2c940:	lsl	r3, r3, #1
   2c944:	add	r3, r3, r2
   2c948:	lsl	r3, r3, #2
   2c94c:	add	r3, r1, r3
   2c950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c954:	mov	r0, r3
   2c958:	bl	27bfc <__assert_fail@plt+0x169bc>
   2c95c:	mov	r3, r0
   2c960:	strb	r3, [fp, #-25]	; 0xffffffe7
   2c964:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2c968:	eor	r3, r3, #1
   2c96c:	uxtb	r3, r3
   2c970:	cmp	r3, #0
   2c974:	beq	2c980 <__assert_fail@plt+0x1b740>
   2c978:	mov	r3, #12
   2c97c:	b	2c99c <__assert_fail@plt+0x1b75c>
   2c980:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c984:	str	r3, [fp, #-8]
   2c988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c98c:	str	r3, [fp, #-12]
   2c990:	b	2c418 <__assert_fail@plt+0x1b1d8>
   2c994:	nop	{0}
   2c998:	mov	r3, #0
   2c99c:	mov	r0, r3
   2c9a0:	sub	sp, fp, #4
   2c9a4:	ldr	fp, [sp]
   2c9a8:	add	sp, sp, #4
   2c9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2c9b0:	push	{fp}		; (str fp, [sp, #-4]!)
   2c9b4:	add	fp, sp, #0
   2c9b8:	sub	sp, sp, #28
   2c9bc:	str	r0, [fp, #-16]
   2c9c0:	str	r1, [fp, #-20]	; 0xffffffec
   2c9c4:	str	r2, [fp, #-24]	; 0xffffffe8
   2c9c8:	ldr	r3, [fp, #-16]
   2c9cc:	ldr	r3, [r3, #8]
   2c9d0:	sub	r3, r3, #1
   2c9d4:	str	r3, [fp, #-8]
   2c9d8:	b	2ca44 <__assert_fail@plt+0x1b804>
   2c9dc:	ldr	r3, [fp, #-16]
   2c9e0:	ldr	r2, [r3, #16]
   2c9e4:	ldr	r3, [fp, #-8]
   2c9e8:	lsl	r3, r3, #2
   2c9ec:	add	r3, r2, r3
   2c9f0:	ldr	r3, [r3]
   2c9f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c9f8:	cmp	r2, r3
   2c9fc:	bne	2ca38 <__assert_fail@plt+0x1b7f8>
   2ca00:	ldr	r3, [fp, #-16]
   2ca04:	ldr	r2, [r3]
   2ca08:	ldr	r3, [fp, #-8]
   2ca0c:	lsl	r3, r3, #3
   2ca10:	add	r3, r2, r3
   2ca14:	ldr	r3, [r3, #4]
   2ca18:	ubfx	r3, r3, #8, #10
   2ca1c:	uxth	r3, r3
   2ca20:	mov	r2, r3
   2ca24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca28:	cmp	r3, r2
   2ca2c:	bne	2ca38 <__assert_fail@plt+0x1b7f8>
   2ca30:	ldr	r3, [fp, #-8]
   2ca34:	b	2ca7c <__assert_fail@plt+0x1b83c>
   2ca38:	ldr	r3, [fp, #-8]
   2ca3c:	sub	r3, r3, #1
   2ca40:	str	r3, [fp, #-8]
   2ca44:	ldr	r3, [fp, #-16]
   2ca48:	ldr	r2, [r3]
   2ca4c:	ldr	r3, [fp, #-8]
   2ca50:	lsl	r3, r3, #3
   2ca54:	add	r3, r2, r3
   2ca58:	ldrb	r3, [r3, #6]
   2ca5c:	and	r3, r3, #4
   2ca60:	uxtb	r3, r3
   2ca64:	cmp	r3, #0
   2ca68:	beq	2ca78 <__assert_fail@plt+0x1b838>
   2ca6c:	ldr	r3, [fp, #-8]
   2ca70:	cmp	r3, #0
   2ca74:	bgt	2c9dc <__assert_fail@plt+0x1b79c>
   2ca78:	mvn	r3, #0
   2ca7c:	mov	r0, r3
   2ca80:	add	sp, fp, #0
   2ca84:	pop	{fp}		; (ldr fp, [sp], #4)
   2ca88:	bx	lr
   2ca8c:	str	fp, [sp, #-8]!
   2ca90:	str	lr, [sp, #4]
   2ca94:	add	fp, sp, #4
   2ca98:	sub	sp, sp, #24
   2ca9c:	str	r0, [fp, #-16]
   2caa0:	str	r1, [fp, #-20]	; 0xffffffec
   2caa4:	str	r2, [fp, #-24]	; 0xffffffe8
   2caa8:	ldr	r3, [fp, #-16]
   2caac:	ldr	r2, [r3]
   2cab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cab4:	lsl	r3, r3, #3
   2cab8:	add	r3, r2, r3
   2cabc:	ldm	r3, {r1, r2}
   2cac0:	ldr	r0, [fp, #-16]
   2cac4:	bl	281c4 <__assert_fail@plt+0x16f84>
   2cac8:	str	r0, [fp, #-8]
   2cacc:	ldr	r3, [fp, #-8]
   2cad0:	cmn	r3, #1
   2cad4:	movne	r3, #1
   2cad8:	moveq	r3, #0
   2cadc:	uxtb	r3, r3
   2cae0:	cmp	r3, #0
   2cae4:	beq	2cbb8 <__assert_fail@plt+0x1b978>
   2cae8:	ldr	r3, [fp, #-16]
   2caec:	ldr	r2, [r3]
   2caf0:	ldr	r3, [fp, #-8]
   2caf4:	lsl	r3, r3, #3
   2caf8:	add	r2, r2, r3
   2cafc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cb00:	ubfx	r3, r3, #0, #10
   2cb04:	uxth	r1, r3
   2cb08:	ldr	r3, [r2, #4]
   2cb0c:	bfi	r3, r1, #8, #10
   2cb10:	str	r3, [r2, #4]
   2cb14:	ldr	r3, [fp, #-16]
   2cb18:	ldr	r2, [r3]
   2cb1c:	ldr	r3, [fp, #-8]
   2cb20:	lsl	r3, r3, #3
   2cb24:	add	r3, r2, r3
   2cb28:	ldr	r3, [r3, #4]
   2cb2c:	ubfx	r3, r3, #8, #10
   2cb30:	uxth	r1, r3
   2cb34:	ldr	r3, [fp, #-16]
   2cb38:	ldr	r2, [r3]
   2cb3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb40:	lsl	r3, r3, #3
   2cb44:	add	r3, r2, r3
   2cb48:	ldr	r3, [r3, #4]
   2cb4c:	ubfx	r3, r3, #8, #10
   2cb50:	uxth	r3, r3
   2cb54:	ldr	r2, [fp, #-16]
   2cb58:	ldr	r0, [r2]
   2cb5c:	ldr	r2, [fp, #-8]
   2cb60:	lsl	r2, r2, #3
   2cb64:	add	r2, r0, r2
   2cb68:	orr	r3, r1, r3
   2cb6c:	uxth	r1, r3
   2cb70:	ldr	r3, [r2, #4]
   2cb74:	bfi	r3, r1, #8, #10
   2cb78:	str	r3, [r2, #4]
   2cb7c:	ldr	r3, [fp, #-16]
   2cb80:	ldr	r2, [r3]
   2cb84:	ldr	r3, [fp, #-8]
   2cb88:	lsl	r3, r3, #3
   2cb8c:	add	r2, r2, r3
   2cb90:	ldrb	r3, [r2, #6]
   2cb94:	orr	r3, r3, #4
   2cb98:	strb	r3, [r2, #6]
   2cb9c:	ldr	r3, [fp, #-16]
   2cba0:	ldr	r2, [r3, #16]
   2cba4:	ldr	r3, [fp, #-8]
   2cba8:	lsl	r3, r3, #2
   2cbac:	add	r3, r2, r3
   2cbb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cbb4:	str	r2, [r3]
   2cbb8:	ldr	r3, [fp, #-8]
   2cbbc:	mov	r0, r3
   2cbc0:	sub	sp, fp, #4
   2cbc4:	ldr	fp, [sp]
   2cbc8:	add	sp, sp, #4
   2cbcc:	pop	{pc}		; (ldr pc, [sp], #4)
   2cbd0:	str	fp, [sp, #-8]!
   2cbd4:	str	lr, [sp, #4]
   2cbd8:	add	fp, sp, #4
   2cbdc:	sub	sp, sp, #24
   2cbe0:	str	r0, [fp, #-24]	; 0xffffffe8
   2cbe4:	mov	r3, #0
   2cbe8:	str	r3, [fp, #-12]
   2cbec:	b	2cc2c <__assert_fail@plt+0x1b9ec>
   2cbf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cbf4:	ldr	r1, [r3, #28]
   2cbf8:	ldr	r2, [fp, #-12]
   2cbfc:	mov	r3, r2
   2cc00:	lsl	r3, r3, #1
   2cc04:	add	r3, r3, r2
   2cc08:	lsl	r3, r3, #2
   2cc0c:	add	r3, r1, r3
   2cc10:	mov	r2, #12
   2cc14:	mov	r1, #0
   2cc18:	mov	r0, r3
   2cc1c:	bl	1118c <memset@plt>
   2cc20:	ldr	r3, [fp, #-12]
   2cc24:	add	r3, r3, #1
   2cc28:	str	r3, [fp, #-12]
   2cc2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc30:	ldr	r2, [r3, #8]
   2cc34:	ldr	r3, [fp, #-12]
   2cc38:	cmp	r2, r3
   2cc3c:	bhi	2cbf0 <__assert_fail@plt+0x1b9b0>
   2cc40:	mov	r3, #0
   2cc44:	str	r3, [fp, #-8]
   2cc48:	b	2cd2c <__assert_fail@plt+0x1baec>
   2cc4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc50:	ldr	r1, [r3, #24]
   2cc54:	ldr	r2, [fp, #-8]
   2cc58:	mov	r3, r2
   2cc5c:	lsl	r3, r3, #1
   2cc60:	add	r3, r3, r2
   2cc64:	lsl	r3, r3, #2
   2cc68:	add	r3, r1, r3
   2cc6c:	ldr	r3, [r3, #8]
   2cc70:	str	r3, [fp, #-16]
   2cc74:	mov	r3, #0
   2cc78:	str	r3, [fp, #-12]
   2cc7c:	b	2ccf0 <__assert_fail@plt+0x1bab0>
   2cc80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc84:	ldr	r2, [r3, #28]
   2cc88:	ldr	r3, [fp, #-12]
   2cc8c:	lsl	r3, r3, #2
   2cc90:	ldr	r1, [fp, #-16]
   2cc94:	add	r3, r1, r3
   2cc98:	ldr	r3, [r3]
   2cc9c:	mov	r1, r3
   2cca0:	mov	r3, r1
   2cca4:	lsl	r3, r3, #1
   2cca8:	add	r3, r3, r1
   2ccac:	lsl	r3, r3, #2
   2ccb0:	add	r3, r2, r3
   2ccb4:	ldr	r1, [fp, #-8]
   2ccb8:	mov	r0, r3
   2ccbc:	bl	27e7c <__assert_fail@plt+0x16c3c>
   2ccc0:	mov	r3, r0
   2ccc4:	strb	r3, [fp, #-17]	; 0xffffffef
   2ccc8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2cccc:	eor	r3, r3, #1
   2ccd0:	uxtb	r3, r3
   2ccd4:	cmp	r3, #0
   2ccd8:	beq	2cce4 <__assert_fail@plt+0x1baa4>
   2ccdc:	mov	r3, #12
   2cce0:	b	2cd44 <__assert_fail@plt+0x1bb04>
   2cce4:	ldr	r3, [fp, #-12]
   2cce8:	add	r3, r3, #1
   2ccec:	str	r3, [fp, #-12]
   2ccf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ccf4:	ldr	r1, [r3, #24]
   2ccf8:	ldr	r2, [fp, #-8]
   2ccfc:	mov	r3, r2
   2cd00:	lsl	r3, r3, #1
   2cd04:	add	r3, r3, r2
   2cd08:	lsl	r3, r3, #2
   2cd0c:	add	r3, r1, r3
   2cd10:	ldr	r3, [r3, #4]
   2cd14:	ldr	r2, [fp, #-12]
   2cd18:	cmp	r2, r3
   2cd1c:	blt	2cc80 <__assert_fail@plt+0x1ba40>
   2cd20:	ldr	r3, [fp, #-8]
   2cd24:	add	r3, r3, #1
   2cd28:	str	r3, [fp, #-8]
   2cd2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cd30:	ldr	r2, [r3, #8]
   2cd34:	ldr	r3, [fp, #-8]
   2cd38:	cmp	r2, r3
   2cd3c:	bhi	2cc4c <__assert_fail@plt+0x1ba0c>
   2cd40:	mov	r3, #0
   2cd44:	mov	r0, r3
   2cd48:	sub	sp, fp, #4
   2cd4c:	ldr	fp, [sp]
   2cd50:	add	sp, sp, #4
   2cd54:	pop	{pc}		; (ldr pc, [sp], #4)
   2cd58:	str	fp, [sp, #-8]!
   2cd5c:	str	lr, [sp, #4]
   2cd60:	add	fp, sp, #4
   2cd64:	sub	sp, sp, #32
   2cd68:	str	r0, [fp, #-32]	; 0xffffffe0
   2cd6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cd70:	ldr	r3, [r3, #8]
   2cd74:	cmp	r3, #0
   2cd78:	mov	r3, #0
   2cd7c:	strb	r3, [fp, #-9]
   2cd80:	mov	r3, #0
   2cd84:	str	r3, [fp, #-8]
   2cd88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cd8c:	ldr	r2, [r3, #8]
   2cd90:	ldr	r3, [fp, #-8]
   2cd94:	cmp	r2, r3
   2cd98:	bne	2cdc8 <__assert_fail@plt+0x1bb88>
   2cd9c:	ldrb	r3, [fp, #-9]
   2cda0:	eor	r3, r3, #1
   2cda4:	uxtb	r3, r3
   2cda8:	cmp	r3, #0
   2cdac:	beq	2cdb8 <__assert_fail@plt+0x1bb78>
   2cdb0:	mov	r3, #0
   2cdb4:	b	2ceb0 <__assert_fail@plt+0x1bc70>
   2cdb8:	mov	r3, #0
   2cdbc:	strb	r3, [fp, #-9]
   2cdc0:	mov	r3, #0
   2cdc4:	str	r3, [fp, #-8]
   2cdc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cdcc:	ldr	r1, [r3, #24]
   2cdd0:	ldr	r2, [fp, #-8]
   2cdd4:	mov	r3, r2
   2cdd8:	lsl	r3, r3, #1
   2cddc:	add	r3, r3, r2
   2cde0:	lsl	r3, r3, #2
   2cde4:	add	r3, r1, r3
   2cde8:	ldr	r3, [r3, #4]
   2cdec:	cmn	r3, #1
   2cdf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cdf4:	ldr	r1, [r3, #24]
   2cdf8:	ldr	r2, [fp, #-8]
   2cdfc:	mov	r3, r2
   2ce00:	lsl	r3, r3, #1
   2ce04:	add	r3, r3, r2
   2ce08:	lsl	r3, r3, #2
   2ce0c:	add	r3, r1, r3
   2ce10:	ldr	r3, [r3, #4]
   2ce14:	cmp	r3, #0
   2ce18:	bne	2ce9c <__assert_fail@plt+0x1bc5c>
   2ce1c:	sub	r0, fp, #28
   2ce20:	mov	r3, #1
   2ce24:	ldr	r2, [fp, #-8]
   2ce28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ce2c:	bl	2cec4 <__assert_fail@plt+0x1bc84>
   2ce30:	str	r0, [fp, #-16]
   2ce34:	ldr	r3, [fp, #-16]
   2ce38:	cmp	r3, #0
   2ce3c:	movne	r3, #1
   2ce40:	moveq	r3, #0
   2ce44:	uxtb	r3, r3
   2ce48:	cmp	r3, #0
   2ce4c:	beq	2ce58 <__assert_fail@plt+0x1bc18>
   2ce50:	ldr	r3, [fp, #-16]
   2ce54:	b	2ceb0 <__assert_fail@plt+0x1bc70>
   2ce58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ce5c:	ldr	r1, [r3, #24]
   2ce60:	ldr	r2, [fp, #-8]
   2ce64:	mov	r3, r2
   2ce68:	lsl	r3, r3, #1
   2ce6c:	add	r3, r3, r2
   2ce70:	lsl	r3, r3, #2
   2ce74:	add	r3, r1, r3
   2ce78:	ldr	r3, [r3, #4]
   2ce7c:	cmp	r3, #0
   2ce80:	bne	2cea0 <__assert_fail@plt+0x1bc60>
   2ce84:	mov	r3, #1
   2ce88:	strb	r3, [fp, #-9]
   2ce8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ce90:	mov	r0, r3
   2ce94:	bl	13798 <__assert_fail@plt+0x2558>
   2ce98:	b	2cea0 <__assert_fail@plt+0x1bc60>
   2ce9c:	nop	{0}
   2cea0:	ldr	r3, [fp, #-8]
   2cea4:	add	r3, r3, #1
   2cea8:	str	r3, [fp, #-8]
   2ceac:	b	2cd88 <__assert_fail@plt+0x1bb48>
   2ceb0:	mov	r0, r3
   2ceb4:	sub	sp, fp, #4
   2ceb8:	ldr	fp, [sp]
   2cebc:	add	sp, sp, #4
   2cec0:	pop	{pc}		; (ldr pc, [sp], #4)
   2cec4:	str	fp, [sp, #-8]!
   2cec8:	str	lr, [sp, #4]
   2cecc:	add	fp, sp, #4
   2ced0:	sub	sp, sp, #64	; 0x40
   2ced4:	str	r0, [fp, #-48]	; 0xffffffd0
   2ced8:	str	r1, [fp, #-52]	; 0xffffffcc
   2cedc:	str	r2, [fp, #-56]	; 0xffffffc8
   2cee0:	strb	r3, [fp, #-57]	; 0xffffffc7
   2cee4:	mov	r3, #0
   2cee8:	strb	r3, [fp, #-9]
   2ceec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cef0:	ldr	r1, [r3, #20]
   2cef4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2cef8:	mov	r3, r2
   2cefc:	lsl	r3, r3, #1
   2cf00:	add	r3, r3, r2
   2cf04:	lsl	r3, r3, #2
   2cf08:	add	r3, r1, r3
   2cf0c:	ldr	r3, [r3, #4]
   2cf10:	add	r2, r3, #1
   2cf14:	sub	r3, fp, #32
   2cf18:	mov	r1, r2
   2cf1c:	mov	r0, r3
   2cf20:	bl	26c14 <__assert_fail@plt+0x159d4>
   2cf24:	str	r0, [fp, #-16]
   2cf28:	ldr	r3, [fp, #-16]
   2cf2c:	cmp	r3, #0
   2cf30:	movne	r3, #1
   2cf34:	moveq	r3, #0
   2cf38:	uxtb	r3, r3
   2cf3c:	cmp	r3, #0
   2cf40:	beq	2cf4c <__assert_fail@plt+0x1bd0c>
   2cf44:	ldr	r3, [fp, #-16]
   2cf48:	b	2d334 <__assert_fail@plt+0x1c0f4>
   2cf4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cf50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cf54:	add	r1, r3, #1
   2cf58:	str	r1, [fp, #-28]	; 0xffffffe4
   2cf5c:	lsl	r3, r3, #2
   2cf60:	add	r3, r2, r3
   2cf64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2cf68:	str	r2, [r3]
   2cf6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cf70:	ldr	r1, [r3, #24]
   2cf74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2cf78:	mov	r3, r2
   2cf7c:	lsl	r3, r3, #1
   2cf80:	add	r3, r3, r2
   2cf84:	lsl	r3, r3, #2
   2cf88:	add	r3, r1, r3
   2cf8c:	mvn	r2, #0
   2cf90:	str	r2, [r3, #4]
   2cf94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cf98:	ldr	r2, [r3]
   2cf9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cfa0:	lsl	r3, r3, #3
   2cfa4:	add	r3, r2, r3
   2cfa8:	ldr	r2, [r3, #4]
   2cfac:	mov	r3, #65280	; 0xff00
   2cfb0:	movt	r3, #3
   2cfb4:	and	r3, r3, r2
   2cfb8:	cmp	r3, #0
   2cfbc:	beq	2d098 <__assert_fail@plt+0x1be58>
   2cfc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cfc4:	ldr	r1, [r3, #20]
   2cfc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2cfcc:	mov	r3, r2
   2cfd0:	lsl	r3, r3, #1
   2cfd4:	add	r3, r3, r2
   2cfd8:	lsl	r3, r3, #2
   2cfdc:	add	r3, r1, r3
   2cfe0:	ldr	r3, [r3, #4]
   2cfe4:	cmp	r3, #0
   2cfe8:	beq	2d098 <__assert_fail@plt+0x1be58>
   2cfec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cff0:	ldr	r1, [r3]
   2cff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cff8:	ldr	r0, [r3, #20]
   2cffc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d000:	mov	r3, r2
   2d004:	lsl	r3, r3, #1
   2d008:	add	r3, r3, r2
   2d00c:	lsl	r3, r3, #2
   2d010:	add	r3, r0, r3
   2d014:	ldr	r3, [r3, #8]
   2d018:	ldr	r3, [r3]
   2d01c:	lsl	r3, r3, #3
   2d020:	add	r3, r1, r3
   2d024:	ldrb	r3, [r3, #6]
   2d028:	and	r3, r3, #4
   2d02c:	uxtb	r3, r3
   2d030:	cmp	r3, #0
   2d034:	bne	2d098 <__assert_fail@plt+0x1be58>
   2d038:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d03c:	ldr	r2, [r3]
   2d040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d044:	lsl	r3, r3, #3
   2d048:	add	r3, r2, r3
   2d04c:	ldr	r3, [r3, #4]
   2d050:	ubfx	r3, r3, #8, #10
   2d054:	uxth	r3, r3
   2d058:	str	r3, [sp]
   2d05c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d060:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d064:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d068:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2d06c:	bl	2c3e0 <__assert_fail@plt+0x1b1a0>
   2d070:	str	r0, [fp, #-16]
   2d074:	ldr	r3, [fp, #-16]
   2d078:	cmp	r3, #0
   2d07c:	movne	r3, #1
   2d080:	moveq	r3, #0
   2d084:	uxtb	r3, r3
   2d088:	cmp	r3, #0
   2d08c:	beq	2d098 <__assert_fail@plt+0x1be58>
   2d090:	ldr	r3, [fp, #-16]
   2d094:	b	2d334 <__assert_fail@plt+0x1c0f4>
   2d098:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d09c:	ldr	r2, [r3]
   2d0a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d0a4:	lsl	r3, r3, #3
   2d0a8:	add	r3, r2, r3
   2d0ac:	ldrb	r3, [r3, #4]
   2d0b0:	and	r3, r3, #8
   2d0b4:	cmp	r3, #0
   2d0b8:	beq	2d290 <__assert_fail@plt+0x1c050>
   2d0bc:	mov	r3, #0
   2d0c0:	str	r3, [fp, #-8]
   2d0c4:	b	2d260 <__assert_fail@plt+0x1c020>
   2d0c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d0cc:	ldr	r1, [r3, #20]
   2d0d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d0d4:	mov	r3, r2
   2d0d8:	lsl	r3, r3, #1
   2d0dc:	add	r3, r3, r2
   2d0e0:	lsl	r3, r3, #2
   2d0e4:	add	r3, r1, r3
   2d0e8:	ldr	r2, [r3, #8]
   2d0ec:	ldr	r3, [fp, #-8]
   2d0f0:	lsl	r3, r3, #2
   2d0f4:	add	r3, r2, r3
   2d0f8:	ldr	r3, [r3]
   2d0fc:	str	r3, [fp, #-20]	; 0xffffffec
   2d100:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d104:	ldr	r1, [r3, #24]
   2d108:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d10c:	mov	r3, r2
   2d110:	lsl	r3, r3, #1
   2d114:	add	r3, r3, r2
   2d118:	lsl	r3, r3, #2
   2d11c:	add	r3, r1, r3
   2d120:	ldr	r3, [r3, #4]
   2d124:	cmn	r3, #1
   2d128:	bne	2d138 <__assert_fail@plt+0x1bef8>
   2d12c:	mov	r3, #1
   2d130:	strb	r3, [fp, #-9]
   2d134:	b	2d254 <__assert_fail@plt+0x1c014>
   2d138:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d13c:	ldr	r1, [r3, #24]
   2d140:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d144:	mov	r3, r2
   2d148:	lsl	r3, r3, #1
   2d14c:	add	r3, r3, r2
   2d150:	lsl	r3, r3, #2
   2d154:	add	r3, r1, r3
   2d158:	ldr	r3, [r3, #4]
   2d15c:	cmp	r3, #0
   2d160:	bne	2d1a0 <__assert_fail@plt+0x1bf60>
   2d164:	sub	r0, fp, #44	; 0x2c
   2d168:	mov	r3, #0
   2d16c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d170:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d174:	bl	2cec4 <__assert_fail@plt+0x1bc84>
   2d178:	str	r0, [fp, #-16]
   2d17c:	ldr	r3, [fp, #-16]
   2d180:	cmp	r3, #0
   2d184:	movne	r3, #1
   2d188:	moveq	r3, #0
   2d18c:	uxtb	r3, r3
   2d190:	cmp	r3, #0
   2d194:	beq	2d1d8 <__assert_fail@plt+0x1bf98>
   2d198:	ldr	r3, [fp, #-16]
   2d19c:	b	2d334 <__assert_fail@plt+0x1c0f4>
   2d1a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d1a4:	ldr	r1, [r3, #24]
   2d1a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d1ac:	mov	r3, r2
   2d1b0:	lsl	r3, r3, #1
   2d1b4:	add	r3, r3, r2
   2d1b8:	lsl	r3, r3, #2
   2d1bc:	add	r3, r1, r3
   2d1c0:	sub	r1, fp, #44	; 0x2c
   2d1c4:	mov	r0, r3
   2d1c8:	ldrd	r2, [r0]
   2d1cc:	strd	r2, [r1]
   2d1d0:	ldr	r3, [r0, #8]
   2d1d4:	str	r3, [r1, #8]
   2d1d8:	sub	r2, fp, #44	; 0x2c
   2d1dc:	sub	r3, fp, #32
   2d1e0:	mov	r1, r2
   2d1e4:	mov	r0, r3
   2d1e8:	bl	2779c <__assert_fail@plt+0x1655c>
   2d1ec:	str	r0, [fp, #-16]
   2d1f0:	ldr	r3, [fp, #-16]
   2d1f4:	cmp	r3, #0
   2d1f8:	movne	r3, #1
   2d1fc:	moveq	r3, #0
   2d200:	uxtb	r3, r3
   2d204:	cmp	r3, #0
   2d208:	beq	2d214 <__assert_fail@plt+0x1bfd4>
   2d20c:	ldr	r3, [fp, #-16]
   2d210:	b	2d334 <__assert_fail@plt+0x1c0f4>
   2d214:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d218:	ldr	r1, [r3, #24]
   2d21c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d220:	mov	r3, r2
   2d224:	lsl	r3, r3, #1
   2d228:	add	r3, r3, r2
   2d22c:	lsl	r3, r3, #2
   2d230:	add	r3, r1, r3
   2d234:	ldr	r3, [r3, #4]
   2d238:	cmp	r3, #0
   2d23c:	bne	2d254 <__assert_fail@plt+0x1c014>
   2d240:	mov	r3, #1
   2d244:	strb	r3, [fp, #-9]
   2d248:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d24c:	mov	r0, r3
   2d250:	bl	13798 <__assert_fail@plt+0x2558>
   2d254:	ldr	r3, [fp, #-8]
   2d258:	add	r3, r3, #1
   2d25c:	str	r3, [fp, #-8]
   2d260:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d264:	ldr	r1, [r3, #20]
   2d268:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d26c:	mov	r3, r2
   2d270:	lsl	r3, r3, #1
   2d274:	add	r3, r3, r2
   2d278:	lsl	r3, r3, #2
   2d27c:	add	r3, r1, r3
   2d280:	ldr	r3, [r3, #4]
   2d284:	ldr	r2, [fp, #-8]
   2d288:	cmp	r2, r3
   2d28c:	blt	2d0c8 <__assert_fail@plt+0x1be88>
   2d290:	ldrb	r3, [fp, #-9]
   2d294:	cmp	r3, #0
   2d298:	beq	2d2dc <__assert_fail@plt+0x1c09c>
   2d29c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   2d2a0:	eor	r3, r3, #1
   2d2a4:	uxtb	r3, r3
   2d2a8:	cmp	r3, #0
   2d2ac:	beq	2d2dc <__assert_fail@plt+0x1c09c>
   2d2b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d2b4:	ldr	r1, [r3, #24]
   2d2b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d2bc:	mov	r3, r2
   2d2c0:	lsl	r3, r3, #1
   2d2c4:	add	r3, r3, r2
   2d2c8:	lsl	r3, r3, #2
   2d2cc:	add	r3, r1, r3
   2d2d0:	mov	r2, #0
   2d2d4:	str	r2, [r3, #4]
   2d2d8:	b	2d314 <__assert_fail@plt+0x1c0d4>
   2d2dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d2e0:	ldr	r1, [r3, #24]
   2d2e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2d2e8:	mov	r3, r2
   2d2ec:	lsl	r3, r3, #1
   2d2f0:	add	r3, r3, r2
   2d2f4:	lsl	r3, r3, #2
   2d2f8:	add	r3, r1, r3
   2d2fc:	mov	r0, r3
   2d300:	sub	r1, fp, #32
   2d304:	ldrd	r2, [r1]
   2d308:	strd	r2, [r0]
   2d30c:	ldr	r3, [r1, #8]
   2d310:	str	r3, [r0, #8]
   2d314:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d318:	mov	r0, r3
   2d31c:	sub	r1, fp, #32
   2d320:	ldrd	r2, [r1]
   2d324:	strd	r2, [r0]
   2d328:	ldr	r3, [r1, #8]
   2d32c:	str	r3, [r0, #8]
   2d330:	mov	r3, #0
   2d334:	mov	r0, r3
   2d338:	sub	sp, fp, #4
   2d33c:	ldr	fp, [sp]
   2d340:	add	sp, sp, #4
   2d344:	pop	{pc}		; (ldr pc, [sp], #4)
   2d348:	str	fp, [sp, #-8]!
   2d34c:	str	lr, [sp, #4]
   2d350:	add	fp, sp, #4
   2d354:	sub	sp, sp, #16
   2d358:	str	r0, [fp, #-8]
   2d35c:	str	r1, [fp, #-12]
   2d360:	str	r2, [fp, #-16]
   2d364:	ldr	r2, [fp, #-16]
   2d368:	ldr	r1, [fp, #-12]
   2d36c:	ldr	r0, [fp, #-8]
   2d370:	bl	2d3a0 <__assert_fail@plt+0x1c160>
   2d374:	mov	r2, r0
   2d378:	ldr	r3, [fp, #-12]
   2d37c:	ldr	r3, [r3, #40]	; 0x28
   2d380:	add	r2, r2, r3
   2d384:	ldr	r3, [fp, #-12]
   2d388:	str	r2, [r3, #40]	; 0x28
   2d38c:	nop	{0}
   2d390:	sub	sp, fp, #4
   2d394:	ldr	fp, [sp]
   2d398:	add	sp, sp, #4
   2d39c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d3a0:	str	fp, [sp, #-8]!
   2d3a4:	str	lr, [sp, #4]
   2d3a8:	add	fp, sp, #4
   2d3ac:	sub	sp, sp, #40	; 0x28
   2d3b0:	str	r0, [fp, #-32]	; 0xffffffe0
   2d3b4:	str	r1, [fp, #-36]	; 0xffffffdc
   2d3b8:	str	r2, [fp, #-40]	; 0xffffffd8
   2d3bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d3c0:	ldr	r2, [r3, #56]	; 0x38
   2d3c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d3c8:	ldr	r3, [r3, #40]	; 0x28
   2d3cc:	cmp	r2, r3
   2d3d0:	bgt	2d3e8 <__assert_fail@plt+0x1c1a8>
   2d3d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d3d8:	mov	r2, #2
   2d3dc:	strb	r2, [r3, #4]
   2d3e0:	mov	r3, #0
   2d3e4:	b	2e094 <__assert_fail@plt+0x1ce54>
   2d3e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d3ec:	ldr	r3, [r3, #4]
   2d3f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d3f4:	ldr	r2, [r2, #40]	; 0x28
   2d3f8:	add	r3, r3, r2
   2d3fc:	ldrb	r3, [r3]
   2d400:	strb	r3, [fp, #-5]
   2d404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d408:	ldrb	r2, [fp, #-5]
   2d40c:	strb	r2, [r3]
   2d410:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d414:	ldrb	r3, [r2, #6]
   2d418:	bfc	r3, #6, #1
   2d41c:	strb	r3, [r2, #6]
   2d420:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d424:	ldrb	r3, [r2, #6]
   2d428:	bfc	r3, #5, #1
   2d42c:	strb	r3, [r2, #6]
   2d430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d434:	ldr	r3, [r3, #80]	; 0x50
   2d438:	cmp	r3, #1
   2d43c:	ble	2d4a0 <__assert_fail@plt+0x1c260>
   2d440:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d444:	ldr	r2, [r3, #40]	; 0x28
   2d448:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d44c:	ldr	r3, [r3, #28]
   2d450:	cmp	r2, r3
   2d454:	beq	2d4a0 <__assert_fail@plt+0x1c260>
   2d458:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d45c:	ldr	r2, [r3, #8]
   2d460:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d464:	ldr	r3, [r3, #40]	; 0x28
   2d468:	lsl	r3, r3, #2
   2d46c:	add	r3, r2, r3
   2d470:	ldr	r3, [r3]
   2d474:	cmn	r3, #1
   2d478:	bne	2d4a0 <__assert_fail@plt+0x1c260>
   2d47c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d480:	mov	r2, #1
   2d484:	strb	r2, [r3, #4]
   2d488:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d48c:	ldrb	r3, [r2, #6]
   2d490:	orr	r3, r3, #32
   2d494:	strb	r3, [r2, #6]
   2d498:	mov	r3, #1
   2d49c:	b	2e094 <__assert_fail@plt+0x1ce54>
   2d4a0:	ldrb	r3, [fp, #-5]
   2d4a4:	cmp	r3, #92	; 0x5c
   2d4a8:	bne	2dad8 <__assert_fail@plt+0x1c898>
   2d4ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d4b0:	ldr	r3, [r3, #40]	; 0x28
   2d4b4:	add	r2, r3, #1
   2d4b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d4bc:	ldr	r3, [r3, #48]	; 0x30
   2d4c0:	cmp	r2, r3
   2d4c4:	blt	2d4dc <__assert_fail@plt+0x1c29c>
   2d4c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d4cc:	mov	r2, #36	; 0x24
   2d4d0:	strb	r2, [r3, #4]
   2d4d4:	mov	r3, #1
   2d4d8:	b	2e094 <__assert_fail@plt+0x1ce54>
   2d4dc:	mov	r1, #1
   2d4e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d4e4:	bl	2661c <__assert_fail@plt+0x153dc>
   2d4e8:	mov	r3, r0
   2d4ec:	strb	r3, [fp, #-6]
   2d4f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d4f4:	ldrb	r2, [fp, #-6]
   2d4f8:	strb	r2, [r3]
   2d4fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d500:	mov	r2, #1
   2d504:	strb	r2, [r3, #4]
   2d508:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d50c:	ldr	r3, [r3, #80]	; 0x50
   2d510:	cmp	r3, #1
   2d514:	ble	2d584 <__assert_fail@plt+0x1c344>
   2d518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d51c:	ldr	r3, [r3, #40]	; 0x28
   2d520:	add	r3, r3, #1
   2d524:	mov	r1, r3
   2d528:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d52c:	bl	240bc <__assert_fail@plt+0x12e7c>
   2d530:	str	r0, [fp, #-12]
   2d534:	ldr	r0, [fp, #-12]
   2d538:	bl	11174 <iswalnum@plt>
   2d53c:	mov	r3, r0
   2d540:	cmp	r3, #0
   2d544:	bne	2d554 <__assert_fail@plt+0x1c314>
   2d548:	ldr	r3, [fp, #-12]
   2d54c:	cmp	r3, #95	; 0x5f
   2d550:	bne	2d55c <__assert_fail@plt+0x1c31c>
   2d554:	mov	r3, #1
   2d558:	b	2d560 <__assert_fail@plt+0x1c320>
   2d55c:	mov	r3, #0
   2d560:	cmp	r3, #0
   2d564:	movne	r3, #1
   2d568:	moveq	r3, #0
   2d56c:	uxtb	r1, r3
   2d570:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d574:	ldrb	r3, [r2, #6]
   2d578:	bfi	r3, r1, #6, #1
   2d57c:	strb	r3, [r2, #6]
   2d580:	b	2d5e4 <__assert_fail@plt+0x1c3a4>
   2d584:	bl	11120 <__ctype_b_loc@plt>
   2d588:	mov	r3, r0
   2d58c:	ldr	r2, [r3]
   2d590:	ldrb	r3, [fp, #-6]
   2d594:	lsl	r3, r3, #1
   2d598:	add	r3, r2, r3
   2d59c:	ldrh	r3, [r3]
   2d5a0:	and	r3, r3, #8
   2d5a4:	cmp	r3, #0
   2d5a8:	bne	2d5b8 <__assert_fail@plt+0x1c378>
   2d5ac:	ldrb	r3, [fp, #-6]
   2d5b0:	cmp	r3, #95	; 0x5f
   2d5b4:	bne	2d5c0 <__assert_fail@plt+0x1c380>
   2d5b8:	mov	r3, #1
   2d5bc:	b	2d5c4 <__assert_fail@plt+0x1c384>
   2d5c0:	mov	r3, #0
   2d5c4:	cmp	r3, #0
   2d5c8:	movne	r3, #1
   2d5cc:	moveq	r3, #0
   2d5d0:	uxtb	r1, r3
   2d5d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d5d8:	ldrb	r3, [r2, #6]
   2d5dc:	bfi	r3, r1, #6, #1
   2d5e0:	strb	r3, [r2, #6]
   2d5e4:	ldrb	r3, [fp, #-6]
   2d5e8:	sub	r3, r3, #39	; 0x27
   2d5ec:	cmp	r3, #86	; 0x56
   2d5f0:	ldrls	pc, [pc, r3, lsl #2]
   2d5f4:	b	2da3c <__assert_fail@plt+0x1c7fc>
   2d5f8:	andeq	sp, r2, r0, lsl r9
   2d5fc:	andeq	sp, r2, ip, lsr r9
   2d600:	andeq	sp, r2, ip, asr r9
   2d604:	andeq	sp, r2, ip, lsr sl
   2d608:	andeq	sp, r2, ip, ror r9
   2d60c:	andeq	sp, r2, ip, lsr sl
   2d610:	andeq	sp, r2, ip, lsr sl
   2d614:	andeq	sp, r2, ip, lsr sl
   2d618:	andeq	sp, r2, ip, lsr sl
   2d61c:	andeq	sp, r2, ip, lsr sl
   2d620:	andeq	sp, r2, r4, lsl #15
   2d624:	andeq	sp, r2, r4, lsl #15
   2d628:	andeq	sp, r2, r4, lsl #15
   2d62c:	andeq	sp, r2, r4, lsl #15
   2d630:	andeq	sp, r2, r4, lsl #15
   2d634:	andeq	sp, r2, r4, lsl #15
   2d638:	andeq	sp, r2, r4, lsl #15
   2d63c:	andeq	sp, r2, r4, lsl #15
   2d640:	andeq	sp, r2, r4, lsl #15
   2d644:	andeq	sp, r2, ip, lsr sl
   2d648:	andeq	sp, r2, ip, lsr sl
   2d64c:			; <UNDEFINED> instruction: 0x0002d7b4
   2d650:	andeq	sp, r2, ip, lsr sl
   2d654:	andeq	sp, r2, r0, ror #15
   2d658:	andeq	sp, r2, ip, lsr #19
   2d65c:	andeq	sp, r2, ip, lsr sl
   2d660:	andeq	sp, r2, ip, lsr sl
   2d664:	andeq	sp, r2, r8, lsr r8
   2d668:	andeq	sp, r2, ip, lsr sl
   2d66c:	andeq	sp, r2, ip, lsr sl
   2d670:	andeq	sp, r2, ip, lsr sl
   2d674:	andeq	sp, r2, ip, lsr sl
   2d678:	andeq	sp, r2, ip, lsr sl
   2d67c:	andeq	sp, r2, ip, lsr sl
   2d680:	andeq	sp, r2, ip, lsr sl
   2d684:	andeq	sp, r2, ip, lsr sl
   2d688:	andeq	sp, r2, ip, lsr sl
   2d68c:	andeq	sp, r2, ip, lsr sl
   2d690:	andeq	sp, r2, ip, lsr sl
   2d694:	andeq	sp, r2, ip, lsr sl
   2d698:	andeq	sp, r2, ip, lsr sl
   2d69c:	andeq	sp, r2, ip, lsr sl
   2d6a0:	andeq	sp, r2, ip, lsr sl
   2d6a4:	andeq	sp, r2, ip, lsr sl
   2d6a8:	andeq	sp, r2, r4, asr #17
   2d6ac:	andeq	sp, r2, ip, lsr sl
   2d6b0:	andeq	sp, r2, ip, lsr sl
   2d6b4:	andeq	sp, r2, ip, lsr sl
   2d6b8:	andeq	sp, r2, r4, lsl #17
   2d6bc:	andeq	sp, r2, ip, lsr sl
   2d6c0:	andeq	sp, r2, ip, lsr sl
   2d6c4:	andeq	sp, r2, ip, lsr sl
   2d6c8:	andeq	sp, r2, ip, lsr sl
   2d6cc:	andeq	sp, r2, ip, lsr sl
   2d6d0:	andeq	sp, r2, ip, lsr sl
   2d6d4:	andeq	sp, r2, ip, lsr sl
   2d6d8:	andeq	sp, r2, ip, lsr sl
   2d6dc:	andeq	sp, r2, r4, ror #17
   2d6e0:	andeq	sp, r2, ip, lsr sl
   2d6e4:	andeq	sp, r2, ip, lsl #16
   2d6e8:	andeq	sp, r2, ip, lsr sl
   2d6ec:	andeq	sp, r2, ip, lsr sl
   2d6f0:	andeq	sp, r2, ip, lsr sl
   2d6f4:	andeq	sp, r2, ip, lsr sl
   2d6f8:	andeq	sp, r2, ip, lsr sl
   2d6fc:	andeq	sp, r2, ip, lsr sl
   2d700:	andeq	sp, r2, ip, lsr sl
   2d704:	andeq	sp, r2, ip, lsr sl
   2d708:	andeq	sp, r2, ip, lsr sl
   2d70c:	andeq	sp, r2, ip, lsr sl
   2d710:	andeq	sp, r2, ip, lsr sl
   2d714:	andeq	sp, r2, ip, lsr sl
   2d718:	andeq	sp, r2, ip, lsr sl
   2d71c:	andeq	sp, r2, ip, lsr sl
   2d720:	andeq	sp, r2, ip, lsr sl
   2d724:	andeq	sp, r2, ip, lsr sl
   2d728:	andeq	sp, r2, r4, lsr #17
   2d72c:	andeq	sp, r2, ip, lsr sl
   2d730:	andeq	sp, r2, ip, lsr sl
   2d734:	andeq	sp, r2, ip, lsr sl
   2d738:	andeq	sp, r2, r4, ror #16
   2d73c:	andeq	sp, r2, ip, lsr sl
   2d740:	andeq	sp, r2, ip, lsr sl
   2d744:	andeq	sp, r2, ip, lsr sl
   2d748:	ldrdeq	sp, [r2], -ip
   2d74c:	andeq	sp, r2, r4, asr r7
   2d750:	andeq	sp, r2, ip, lsl #20
   2d754:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d758:	and	r3, r3, #1024	; 0x400
   2d75c:	cmp	r3, #0
   2d760:	bne	2da44 <__assert_fail@plt+0x1c804>
   2d764:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d768:	and	r3, r3, #32768	; 0x8000
   2d76c:	cmp	r3, #0
   2d770:	bne	2da44 <__assert_fail@plt+0x1c804>
   2d774:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d778:	mov	r2, #10
   2d77c:	strb	r2, [r3, #4]
   2d780:	b	2da44 <__assert_fail@plt+0x1c804>
   2d784:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d788:	and	r3, r3, #16384	; 0x4000
   2d78c:	cmp	r3, #0
   2d790:	bne	2da4c <__assert_fail@plt+0x1c80c>
   2d794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d798:	mov	r2, #4
   2d79c:	strb	r2, [r3, #4]
   2d7a0:	ldrb	r3, [fp, #-6]
   2d7a4:	sub	r2, r3, #49	; 0x31
   2d7a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d7ac:	str	r2, [r3]
   2d7b0:	b	2da4c <__assert_fail@plt+0x1c80c>
   2d7b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d7b8:	and	r3, r3, #524288	; 0x80000
   2d7bc:	cmp	r3, #0
   2d7c0:	bne	2da54 <__assert_fail@plt+0x1c814>
   2d7c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d7c8:	mov	r2, #12
   2d7cc:	strb	r2, [r3, #4]
   2d7d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d7d4:	mov	r2, #6
   2d7d8:	str	r2, [r3]
   2d7dc:	b	2da54 <__assert_fail@plt+0x1c814>
   2d7e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d7e4:	and	r3, r3, #524288	; 0x80000
   2d7e8:	cmp	r3, #0
   2d7ec:	bne	2da5c <__assert_fail@plt+0x1c81c>
   2d7f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d7f4:	mov	r2, #12
   2d7f8:	strb	r2, [r3, #4]
   2d7fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d800:	mov	r2, #9
   2d804:	str	r2, [r3]
   2d808:	b	2da5c <__assert_fail@plt+0x1c81c>
   2d80c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d810:	and	r3, r3, #524288	; 0x80000
   2d814:	cmp	r3, #0
   2d818:	bne	2da64 <__assert_fail@plt+0x1c824>
   2d81c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d820:	mov	r2, #12
   2d824:	strb	r2, [r3, #4]
   2d828:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d82c:	mov	r2, #256	; 0x100
   2d830:	str	r2, [r3]
   2d834:	b	2da64 <__assert_fail@plt+0x1c824>
   2d838:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d83c:	and	r3, r3, #524288	; 0x80000
   2d840:	cmp	r3, #0
   2d844:	bne	2da6c <__assert_fail@plt+0x1c82c>
   2d848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d84c:	mov	r2, #12
   2d850:	strb	r2, [r3, #4]
   2d854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d858:	mov	r2, #512	; 0x200
   2d85c:	str	r2, [r3]
   2d860:	b	2da6c <__assert_fail@plt+0x1c82c>
   2d864:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d868:	and	r3, r3, #524288	; 0x80000
   2d86c:	cmp	r3, #0
   2d870:	bne	2da74 <__assert_fail@plt+0x1c834>
   2d874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d878:	mov	r2, #32
   2d87c:	strb	r2, [r3, #4]
   2d880:	b	2da74 <__assert_fail@plt+0x1c834>
   2d884:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d888:	and	r3, r3, #524288	; 0x80000
   2d88c:	cmp	r3, #0
   2d890:	bne	2da7c <__assert_fail@plt+0x1c83c>
   2d894:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d898:	mov	r2, #33	; 0x21
   2d89c:	strb	r2, [r3, #4]
   2d8a0:	b	2da7c <__assert_fail@plt+0x1c83c>
   2d8a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d8a8:	and	r3, r3, #524288	; 0x80000
   2d8ac:	cmp	r3, #0
   2d8b0:	bne	2da84 <__assert_fail@plt+0x1c844>
   2d8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d8b8:	mov	r2, #34	; 0x22
   2d8bc:	strb	r2, [r3, #4]
   2d8c0:	b	2da84 <__assert_fail@plt+0x1c844>
   2d8c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d8c8:	and	r3, r3, #524288	; 0x80000
   2d8cc:	cmp	r3, #0
   2d8d0:	bne	2da8c <__assert_fail@plt+0x1c84c>
   2d8d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d8d8:	mov	r2, #35	; 0x23
   2d8dc:	strb	r2, [r3, #4]
   2d8e0:	b	2da8c <__assert_fail@plt+0x1c84c>
   2d8e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d8e8:	and	r3, r3, #524288	; 0x80000
   2d8ec:	cmp	r3, #0
   2d8f0:	bne	2da94 <__assert_fail@plt+0x1c854>
   2d8f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d8f8:	mov	r2, #12
   2d8fc:	strb	r2, [r3, #4]
   2d900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d904:	mov	r2, #64	; 0x40
   2d908:	str	r2, [r3]
   2d90c:	b	2da94 <__assert_fail@plt+0x1c854>
   2d910:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d914:	and	r3, r3, #524288	; 0x80000
   2d918:	cmp	r3, #0
   2d91c:	bne	2da9c <__assert_fail@plt+0x1c85c>
   2d920:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d924:	mov	r2, #12
   2d928:	strb	r2, [r3, #4]
   2d92c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d930:	mov	r2, #128	; 0x80
   2d934:	str	r2, [r3]
   2d938:	b	2da9c <__assert_fail@plt+0x1c85c>
   2d93c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d940:	and	r3, r3, #8192	; 0x2000
   2d944:	cmp	r3, #0
   2d948:	bne	2daa4 <__assert_fail@plt+0x1c864>
   2d94c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d950:	mov	r2, #8
   2d954:	strb	r2, [r3, #4]
   2d958:	b	2daa4 <__assert_fail@plt+0x1c864>
   2d95c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d960:	and	r3, r3, #8192	; 0x2000
   2d964:	cmp	r3, #0
   2d968:	bne	2daac <__assert_fail@plt+0x1c86c>
   2d96c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d970:	mov	r2, #9
   2d974:	strb	r2, [r3, #4]
   2d978:	b	2daac <__assert_fail@plt+0x1c86c>
   2d97c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d980:	and	r3, r3, #1024	; 0x400
   2d984:	cmp	r3, #0
   2d988:	bne	2dab4 <__assert_fail@plt+0x1c874>
   2d98c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d990:	and	r3, r3, #2
   2d994:	cmp	r3, #0
   2d998:	beq	2dab4 <__assert_fail@plt+0x1c874>
   2d99c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d9a0:	mov	r2, #18
   2d9a4:	strb	r2, [r3, #4]
   2d9a8:	b	2dab4 <__assert_fail@plt+0x1c874>
   2d9ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d9b0:	and	r3, r3, #1024	; 0x400
   2d9b4:	cmp	r3, #0
   2d9b8:	bne	2dabc <__assert_fail@plt+0x1c87c>
   2d9bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d9c0:	and	r3, r3, #2
   2d9c4:	cmp	r3, #0
   2d9c8:	beq	2dabc <__assert_fail@plt+0x1c87c>
   2d9cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d9d0:	mov	r2, #19
   2d9d4:	strb	r2, [r3, #4]
   2d9d8:	b	2dabc <__assert_fail@plt+0x1c87c>
   2d9dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d9e0:	and	r3, r3, #512	; 0x200
   2d9e4:	cmp	r3, #0
   2d9e8:	beq	2dac4 <__assert_fail@plt+0x1c884>
   2d9ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d9f0:	and	r3, r3, #4096	; 0x1000
   2d9f4:	cmp	r3, #0
   2d9f8:	bne	2dac4 <__assert_fail@plt+0x1c884>
   2d9fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2da00:	mov	r2, #23
   2da04:	strb	r2, [r3, #4]
   2da08:	b	2dac4 <__assert_fail@plt+0x1c884>
   2da0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2da10:	and	r3, r3, #512	; 0x200
   2da14:	cmp	r3, #0
   2da18:	beq	2dacc <__assert_fail@plt+0x1c88c>
   2da1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2da20:	and	r3, r3, #4096	; 0x1000
   2da24:	cmp	r3, #0
   2da28:	bne	2dacc <__assert_fail@plt+0x1c88c>
   2da2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2da30:	mov	r2, #24
   2da34:	strb	r2, [r3, #4]
   2da38:	b	2dacc <__assert_fail@plt+0x1c88c>
   2da3c:	nop	{0}
   2da40:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da44:	nop	{0}
   2da48:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da4c:	nop	{0}
   2da50:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da54:	nop	{0}
   2da58:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da5c:	nop	{0}
   2da60:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da64:	nop	{0}
   2da68:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da6c:	nop	{0}
   2da70:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da74:	nop	{0}
   2da78:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da7c:	nop	{0}
   2da80:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da84:	nop	{0}
   2da88:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da8c:	nop	{0}
   2da90:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da94:	nop	{0}
   2da98:	b	2dad0 <__assert_fail@plt+0x1c890>
   2da9c:	nop	{0}
   2daa0:	b	2dad0 <__assert_fail@plt+0x1c890>
   2daa4:	nop	{0}
   2daa8:	b	2dad0 <__assert_fail@plt+0x1c890>
   2daac:	nop	{0}
   2dab0:	b	2dad0 <__assert_fail@plt+0x1c890>
   2dab4:	nop	{0}
   2dab8:	b	2dad0 <__assert_fail@plt+0x1c890>
   2dabc:	nop	{0}
   2dac0:	b	2dad0 <__assert_fail@plt+0x1c890>
   2dac4:	nop	{0}
   2dac8:	b	2dad0 <__assert_fail@plt+0x1c890>
   2dacc:	nop	{0}
   2dad0:	mov	r3, #2
   2dad4:	b	2e094 <__assert_fail@plt+0x1ce54>
   2dad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dadc:	mov	r2, #1
   2dae0:	strb	r2, [r3, #4]
   2dae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dae8:	ldr	r3, [r3, #80]	; 0x50
   2daec:	cmp	r3, #1
   2daf0:	ble	2db5c <__assert_fail@plt+0x1c91c>
   2daf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2daf8:	ldr	r3, [r3, #40]	; 0x28
   2dafc:	mov	r1, r3
   2db00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2db04:	bl	240bc <__assert_fail@plt+0x12e7c>
   2db08:	str	r0, [fp, #-16]
   2db0c:	ldr	r0, [fp, #-16]
   2db10:	bl	11174 <iswalnum@plt>
   2db14:	mov	r3, r0
   2db18:	cmp	r3, #0
   2db1c:	bne	2db2c <__assert_fail@plt+0x1c8ec>
   2db20:	ldr	r3, [fp, #-16]
   2db24:	cmp	r3, #95	; 0x5f
   2db28:	bne	2db34 <__assert_fail@plt+0x1c8f4>
   2db2c:	mov	r3, #1
   2db30:	b	2db38 <__assert_fail@plt+0x1c8f8>
   2db34:	mov	r3, #0
   2db38:	cmp	r3, #0
   2db3c:	movne	r3, #1
   2db40:	moveq	r3, #0
   2db44:	uxtb	r1, r3
   2db48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2db4c:	ldrb	r3, [r2, #6]
   2db50:	bfi	r3, r1, #6, #1
   2db54:	strb	r3, [r2, #6]
   2db58:	b	2dbbc <__assert_fail@plt+0x1c97c>
   2db5c:	bl	11120 <__ctype_b_loc@plt>
   2db60:	mov	r3, r0
   2db64:	ldr	r2, [r3]
   2db68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2db6c:	ldrb	r3, [r3]
   2db70:	lsl	r3, r3, #1
   2db74:	add	r3, r2, r3
   2db78:	ldrh	r3, [r3]
   2db7c:	and	r3, r3, #8
   2db80:	cmp	r3, #0
   2db84:	bne	2db98 <__assert_fail@plt+0x1c958>
   2db88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2db8c:	ldrb	r3, [r3]
   2db90:	cmp	r3, #95	; 0x5f
   2db94:	bne	2dba0 <__assert_fail@plt+0x1c960>
   2db98:	mov	r3, #1
   2db9c:	b	2dba4 <__assert_fail@plt+0x1c964>
   2dba0:	mov	r3, #0
   2dba4:	and	r3, r3, #1
   2dba8:	uxtb	r1, r3
   2dbac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2dbb0:	ldrb	r3, [r2, #6]
   2dbb4:	bfi	r3, r1, #6, #1
   2dbb8:	strb	r3, [r2, #6]
   2dbbc:	ldrb	r3, [fp, #-5]
   2dbc0:	sub	r3, r3, #10
   2dbc4:	cmp	r3, #115	; 0x73
   2dbc8:	ldrls	pc, [pc, r3, lsl #2]
   2dbcc:	b	2e03c <__assert_fail@plt+0x1cdfc>
   2dbd0:	andeq	sp, r2, r0, lsr #27
   2dbd4:	andeq	lr, r2, ip, lsr r0
   2dbd8:	andeq	lr, r2, ip, lsr r0
   2dbdc:	andeq	lr, r2, ip, lsr r0
   2dbe0:	andeq	lr, r2, ip, lsr r0
   2dbe4:	andeq	lr, r2, ip, lsr r0
   2dbe8:	andeq	lr, r2, ip, lsr r0
   2dbec:	andeq	lr, r2, ip, lsr r0
   2dbf0:	andeq	lr, r2, ip, lsr r0
   2dbf4:	andeq	lr, r2, ip, lsr r0
   2dbf8:	andeq	lr, r2, ip, lsr r0
   2dbfc:	andeq	lr, r2, ip, lsr r0
   2dc00:	andeq	lr, r2, ip, lsr r0
   2dc04:	andeq	lr, r2, ip, lsr r0
   2dc08:	andeq	lr, r2, ip, lsr r0
   2dc0c:	andeq	lr, r2, ip, lsr r0
   2dc10:	andeq	lr, r2, ip, lsr r0
   2dc14:	andeq	lr, r2, ip, lsr r0
   2dc18:	andeq	lr, r2, ip, lsr r0
   2dc1c:	andeq	lr, r2, ip, lsr r0
   2dc20:	andeq	lr, r2, ip, lsr r0
   2dc24:	andeq	lr, r2, ip, lsr r0
   2dc28:	andeq	lr, r2, ip, lsr r0
   2dc2c:	andeq	lr, r2, ip, lsr r0
   2dc30:	andeq	lr, r2, ip, lsr r0
   2dc34:	andeq	lr, r2, ip, lsr r0
   2dc38:	andeq	sp, r2, r0, lsr #31
   2dc3c:	andeq	lr, r2, ip, lsr r0
   2dc40:	andeq	lr, r2, ip, lsr r0
   2dc44:	andeq	lr, r2, ip, lsr r0
   2dc48:	andeq	sp, r2, r0, asr #29
   2dc4c:	andeq	sp, r2, r0, ror #29
   2dc50:	strdeq	sp, [r2], -r0
   2dc54:	andeq	sp, r2, r0, lsl #28
   2dc58:	andeq	lr, r2, ip, lsr r0
   2dc5c:	andeq	lr, r2, ip, lsr r0
   2dc60:	andeq	sp, r2, r0, lsl pc
   2dc64:	andeq	lr, r2, ip, lsr r0
   2dc68:	andeq	lr, r2, ip, lsr r0
   2dc6c:	andeq	lr, r2, ip, lsr r0
   2dc70:	andeq	lr, r2, ip, lsr r0
   2dc74:	andeq	lr, r2, ip, lsr r0
   2dc78:	andeq	lr, r2, ip, lsr r0
   2dc7c:	andeq	lr, r2, ip, lsr r0
   2dc80:	andeq	lr, r2, ip, lsr r0
   2dc84:	andeq	lr, r2, ip, lsr r0
   2dc88:	andeq	lr, r2, ip, lsr r0
   2dc8c:	andeq	lr, r2, ip, lsr r0
   2dc90:	andeq	lr, r2, ip, lsr r0
   2dc94:	andeq	lr, r2, ip, lsr r0
   2dc98:	andeq	lr, r2, ip, lsr r0
   2dc9c:	andeq	lr, r2, ip, lsr r0
   2dca0:	andeq	lr, r2, ip, lsr r0
   2dca4:	andeq	sp, r2, r0, lsr lr
   2dca8:	andeq	lr, r2, ip, lsr r0
   2dcac:	andeq	lr, r2, ip, lsr r0
   2dcb0:	andeq	lr, r2, ip, lsr r0
   2dcb4:	andeq	lr, r2, ip, lsr r0
   2dcb8:	andeq	lr, r2, ip, lsr r0
   2dcbc:	andeq	lr, r2, ip, lsr r0
   2dcc0:	andeq	lr, r2, ip, lsr r0
   2dcc4:	andeq	lr, r2, ip, lsr r0
   2dcc8:	andeq	lr, r2, ip, lsr r0
   2dccc:	andeq	lr, r2, ip, lsr r0
   2dcd0:	andeq	lr, r2, ip, lsr r0
   2dcd4:	andeq	lr, r2, ip, lsr r0
   2dcd8:	andeq	lr, r2, ip, lsr r0
   2dcdc:	andeq	lr, r2, ip, lsr r0
   2dce0:	andeq	lr, r2, ip, lsr r0
   2dce4:	andeq	lr, r2, ip, lsr r0
   2dce8:	andeq	lr, r2, ip, lsr r0
   2dcec:	andeq	lr, r2, ip, lsr r0
   2dcf0:	andeq	lr, r2, ip, lsr r0
   2dcf4:	andeq	lr, r2, ip, lsr r0
   2dcf8:	andeq	lr, r2, ip, lsr r0
   2dcfc:	andeq	lr, r2, ip, lsr r0
   2dd00:	andeq	lr, r2, ip, lsr r0
   2dd04:	andeq	lr, r2, ip, lsr r0
   2dd08:	andeq	lr, r2, ip, lsr r0
   2dd0c:	andeq	lr, r2, ip, lsr r0
   2dd10:	andeq	lr, r2, ip, lsr r0
   2dd14:	andeq	sp, r2, r0, lsl #30
   2dd18:	andeq	lr, r2, ip, lsr r0
   2dd1c:	andeq	lr, r2, ip, lsr r0
   2dd20:	andeq	sp, r2, r0, lsr #30
   2dd24:	andeq	lr, r2, ip, lsr r0
   2dd28:	andeq	lr, r2, ip, lsr r0
   2dd2c:	andeq	lr, r2, ip, lsr r0
   2dd30:	andeq	lr, r2, ip, lsr r0
   2dd34:	andeq	lr, r2, ip, lsr r0
   2dd38:	andeq	lr, r2, ip, lsr r0
   2dd3c:	andeq	lr, r2, ip, lsr r0
   2dd40:	andeq	lr, r2, ip, lsr r0
   2dd44:	andeq	lr, r2, ip, lsr r0
   2dd48:	andeq	lr, r2, ip, lsr r0
   2dd4c:	andeq	lr, r2, ip, lsr r0
   2dd50:	andeq	lr, r2, ip, lsr r0
   2dd54:	andeq	lr, r2, ip, lsr r0
   2dd58:	andeq	lr, r2, ip, lsr r0
   2dd5c:	andeq	lr, r2, ip, lsr r0
   2dd60:	andeq	lr, r2, ip, lsr r0
   2dd64:	andeq	lr, r2, ip, lsr r0
   2dd68:	andeq	lr, r2, ip, lsr r0
   2dd6c:	andeq	lr, r2, ip, lsr r0
   2dd70:	andeq	lr, r2, ip, lsr r0
   2dd74:	andeq	lr, r2, ip, lsr r0
   2dd78:	andeq	lr, r2, ip, lsr r0
   2dd7c:	andeq	lr, r2, ip, lsr r0
   2dd80:	andeq	lr, r2, ip, lsr r0
   2dd84:	andeq	lr, r2, ip, lsr r0
   2dd88:	andeq	lr, r2, ip, lsr r0
   2dd8c:	andeq	lr, r2, ip, lsr r0
   2dd90:	andeq	lr, r2, ip, lsr r0
   2dd94:	andeq	sp, r2, r0, ror #28
   2dd98:	andeq	sp, r2, r0, asr #27
   2dd9c:	muleq	r2, r0, lr
   2dda0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dda4:	and	r3, r3, #2048	; 0x800
   2dda8:	cmp	r3, #0
   2ddac:	beq	2e044 <__assert_fail@plt+0x1ce04>
   2ddb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ddb4:	mov	r2, #10
   2ddb8:	strb	r2, [r3, #4]
   2ddbc:	b	2e044 <__assert_fail@plt+0x1ce04>
   2ddc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ddc4:	and	r3, r3, #1024	; 0x400
   2ddc8:	cmp	r3, #0
   2ddcc:	bne	2e04c <__assert_fail@plt+0x1ce0c>
   2ddd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ddd4:	and	r3, r3, #32768	; 0x8000
   2ddd8:	cmp	r3, #0
   2dddc:	beq	2e04c <__assert_fail@plt+0x1ce0c>
   2dde0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dde4:	mov	r2, #10
   2dde8:	strb	r2, [r3, #4]
   2ddec:	b	2e04c <__assert_fail@plt+0x1ce0c>
   2ddf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ddf4:	mov	r2, #11
   2ddf8:	strb	r2, [r3, #4]
   2ddfc:	b	2e090 <__assert_fail@plt+0x1ce50>
   2de00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de04:	and	r3, r3, #1024	; 0x400
   2de08:	cmp	r3, #0
   2de0c:	bne	2e054 <__assert_fail@plt+0x1ce14>
   2de10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de14:	and	r3, r3, #2
   2de18:	cmp	r3, #0
   2de1c:	bne	2e054 <__assert_fail@plt+0x1ce14>
   2de20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de24:	mov	r2, #18
   2de28:	strb	r2, [r3, #4]
   2de2c:	b	2e054 <__assert_fail@plt+0x1ce14>
   2de30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de34:	and	r3, r3, #1024	; 0x400
   2de38:	cmp	r3, #0
   2de3c:	bne	2e05c <__assert_fail@plt+0x1ce1c>
   2de40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de44:	and	r3, r3, #2
   2de48:	cmp	r3, #0
   2de4c:	bne	2e05c <__assert_fail@plt+0x1ce1c>
   2de50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de54:	mov	r2, #19
   2de58:	strb	r2, [r3, #4]
   2de5c:	b	2e05c <__assert_fail@plt+0x1ce1c>
   2de60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de64:	and	r3, r3, #512	; 0x200
   2de68:	cmp	r3, #0
   2de6c:	beq	2e064 <__assert_fail@plt+0x1ce24>
   2de70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de74:	and	r3, r3, #4096	; 0x1000
   2de78:	cmp	r3, #0
   2de7c:	beq	2e064 <__assert_fail@plt+0x1ce24>
   2de80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de84:	mov	r2, #23
   2de88:	strb	r2, [r3, #4]
   2de8c:	b	2e064 <__assert_fail@plt+0x1ce24>
   2de90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de94:	and	r3, r3, #512	; 0x200
   2de98:	cmp	r3, #0
   2de9c:	beq	2e06c <__assert_fail@plt+0x1ce2c>
   2dea0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dea4:	and	r3, r3, #4096	; 0x1000
   2dea8:	cmp	r3, #0
   2deac:	beq	2e06c <__assert_fail@plt+0x1ce2c>
   2deb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2deb4:	mov	r2, #24
   2deb8:	strb	r2, [r3, #4]
   2debc:	b	2e06c <__assert_fail@plt+0x1ce2c>
   2dec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dec4:	and	r3, r3, #8192	; 0x2000
   2dec8:	cmp	r3, #0
   2decc:	beq	2e074 <__assert_fail@plt+0x1ce34>
   2ded0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ded4:	mov	r2, #8
   2ded8:	strb	r2, [r3, #4]
   2dedc:	b	2e074 <__assert_fail@plt+0x1ce34>
   2dee0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dee4:	and	r3, r3, #8192	; 0x2000
   2dee8:	cmp	r3, #0
   2deec:	beq	2e07c <__assert_fail@plt+0x1ce3c>
   2def0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2def4:	mov	r2, #9
   2def8:	strb	r2, [r3, #4]
   2defc:	b	2e07c <__assert_fail@plt+0x1ce3c>
   2df00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df04:	mov	r2, #20
   2df08:	strb	r2, [r3, #4]
   2df0c:	b	2e090 <__assert_fail@plt+0x1ce50>
   2df10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df14:	mov	r2, #5
   2df18:	strb	r2, [r3, #4]
   2df1c:	b	2e090 <__assert_fail@plt+0x1ce50>
   2df20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2df24:	mov	r3, #8
   2df28:	movt	r3, #128	; 0x80
   2df2c:	and	r3, r3, r2
   2df30:	cmp	r3, #0
   2df34:	bne	2df84 <__assert_fail@plt+0x1cd44>
   2df38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2df3c:	ldr	r3, [r3, #40]	; 0x28
   2df40:	cmp	r3, #0
   2df44:	beq	2df84 <__assert_fail@plt+0x1cd44>
   2df48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2df4c:	ldr	r2, [r3, #4]
   2df50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2df54:	ldr	r3, [r3, #40]	; 0x28
   2df58:	sub	r3, r3, #1
   2df5c:	add	r3, r2, r3
   2df60:	ldrb	r3, [r3]
   2df64:	strb	r3, [fp, #-17]	; 0xffffffef
   2df68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2df6c:	and	r3, r3, #2048	; 0x800
   2df70:	cmp	r3, #0
   2df74:	beq	2e084 <__assert_fail@plt+0x1ce44>
   2df78:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2df7c:	cmp	r3, #10
   2df80:	bne	2e084 <__assert_fail@plt+0x1ce44>
   2df84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df88:	mov	r2, #12
   2df8c:	strb	r2, [r3, #4]
   2df90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df94:	mov	r2, #16
   2df98:	str	r2, [r3]
   2df9c:	b	2e090 <__assert_fail@plt+0x1ce50>
   2dfa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dfa4:	and	r3, r3, #8
   2dfa8:	cmp	r3, #0
   2dfac:	bne	2e020 <__assert_fail@plt+0x1cde0>
   2dfb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dfb4:	ldr	r3, [r3, #40]	; 0x28
   2dfb8:	add	r2, r3, #1
   2dfbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dfc0:	ldr	r3, [r3, #48]	; 0x30
   2dfc4:	cmp	r2, r3
   2dfc8:	beq	2e020 <__assert_fail@plt+0x1cde0>
   2dfcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dfd0:	ldr	r3, [r3, #40]	; 0x28
   2dfd4:	add	r2, r3, #1
   2dfd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dfdc:	str	r2, [r3, #40]	; 0x28
   2dfe0:	sub	r3, fp, #28
   2dfe4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2dfe8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2dfec:	mov	r0, r3
   2dff0:	bl	2d3a0 <__assert_fail@plt+0x1c160>
   2dff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dff8:	ldr	r3, [r3, #40]	; 0x28
   2dffc:	sub	r2, r3, #1
   2e000:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e004:	str	r2, [r3, #40]	; 0x28
   2e008:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   2e00c:	cmp	r3, #10
   2e010:	beq	2e020 <__assert_fail@plt+0x1cde0>
   2e014:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   2e018:	cmp	r3, #9
   2e01c:	bne	2e08c <__assert_fail@plt+0x1ce4c>
   2e020:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e024:	mov	r2, #12
   2e028:	strb	r2, [r3, #4]
   2e02c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e030:	mov	r2, #32
   2e034:	str	r2, [r3]
   2e038:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e03c:	nop	{0}
   2e040:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e044:	nop	{0}
   2e048:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e04c:	nop	{0}
   2e050:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e054:	nop	{0}
   2e058:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e05c:	nop	{0}
   2e060:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e064:	nop	{0}
   2e068:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e06c:	nop	{0}
   2e070:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e074:	nop	{0}
   2e078:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e07c:	nop	{0}
   2e080:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e084:	nop	{0}
   2e088:	b	2e090 <__assert_fail@plt+0x1ce50>
   2e08c:	nop	{0}
   2e090:	mov	r3, #1
   2e094:	mov	r0, r3
   2e098:	sub	sp, fp, #4
   2e09c:	ldr	fp, [sp]
   2e0a0:	add	sp, sp, #4
   2e0a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e0a8:	push	{fp}		; (str fp, [sp, #-4]!)
   2e0ac:	add	fp, sp, #0
   2e0b0:	sub	sp, sp, #36	; 0x24
   2e0b4:	str	r0, [fp, #-24]	; 0xffffffe8
   2e0b8:	str	r1, [fp, #-28]	; 0xffffffe4
   2e0bc:	str	r2, [fp, #-32]	; 0xffffffe0
   2e0c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e0c4:	ldr	r2, [r3, #56]	; 0x38
   2e0c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e0cc:	ldr	r3, [r3, #40]	; 0x28
   2e0d0:	cmp	r2, r3
   2e0d4:	bgt	2e0ec <__assert_fail@plt+0x1ceac>
   2e0d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e0dc:	mov	r2, #2
   2e0e0:	strb	r2, [r3, #4]
   2e0e4:	mov	r3, #0
   2e0e8:	b	2e348 <__assert_fail@plt+0x1d108>
   2e0ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e0f0:	ldr	r3, [r3, #4]
   2e0f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e0f8:	ldr	r2, [r2, #40]	; 0x28
   2e0fc:	add	r3, r3, r2
   2e100:	ldrb	r3, [r3]
   2e104:	strb	r3, [fp, #-13]
   2e108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e10c:	ldrb	r2, [fp, #-13]
   2e110:	strb	r2, [r3]
   2e114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e118:	ldr	r3, [r3, #80]	; 0x50
   2e11c:	cmp	r3, #1
   2e120:	ble	2e174 <__assert_fail@plt+0x1cf34>
   2e124:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e128:	ldr	r2, [r3, #40]	; 0x28
   2e12c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e130:	ldr	r3, [r3, #28]
   2e134:	cmp	r2, r3
   2e138:	beq	2e174 <__assert_fail@plt+0x1cf34>
   2e13c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e140:	ldr	r2, [r3, #8]
   2e144:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e148:	ldr	r3, [r3, #40]	; 0x28
   2e14c:	lsl	r3, r3, #2
   2e150:	add	r3, r2, r3
   2e154:	ldr	r3, [r3]
   2e158:	cmn	r3, #1
   2e15c:	bne	2e174 <__assert_fail@plt+0x1cf34>
   2e160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e164:	mov	r2, #1
   2e168:	strb	r2, [r3, #4]
   2e16c:	mov	r3, #1
   2e170:	b	2e348 <__assert_fail@plt+0x1d108>
   2e174:	ldrb	r3, [fp, #-13]
   2e178:	cmp	r3, #92	; 0x5c
   2e17c:	bne	2e1fc <__assert_fail@plt+0x1cfbc>
   2e180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e184:	and	r3, r3, #1
   2e188:	cmp	r3, #0
   2e18c:	beq	2e1fc <__assert_fail@plt+0x1cfbc>
   2e190:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e194:	ldr	r3, [r3, #40]	; 0x28
   2e198:	add	r2, r3, #1
   2e19c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e1a0:	ldr	r3, [r3, #48]	; 0x30
   2e1a4:	cmp	r2, r3
   2e1a8:	bge	2e1fc <__assert_fail@plt+0x1cfbc>
   2e1ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e1b0:	ldr	r3, [r3, #40]	; 0x28
   2e1b4:	add	r2, r3, #1
   2e1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e1bc:	str	r2, [r3, #40]	; 0x28
   2e1c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e1c4:	ldr	r3, [r3, #4]
   2e1c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e1cc:	ldr	r2, [r2, #40]	; 0x28
   2e1d0:	add	r3, r3, r2
   2e1d4:	ldrb	r3, [r3]
   2e1d8:	strb	r3, [fp, #-14]
   2e1dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e1e0:	ldrb	r2, [fp, #-14]
   2e1e4:	strb	r2, [r3]
   2e1e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e1ec:	mov	r2, #1
   2e1f0:	strb	r2, [r3, #4]
   2e1f4:	mov	r3, #1
   2e1f8:	b	2e348 <__assert_fail@plt+0x1d108>
   2e1fc:	ldrb	r3, [fp, #-13]
   2e200:	cmp	r3, #91	; 0x5b
   2e204:	bne	2e2ec <__assert_fail@plt+0x1d0ac>
   2e208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e20c:	ldr	r3, [r3, #40]	; 0x28
   2e210:	add	r2, r3, #1
   2e214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e218:	ldr	r3, [r3, #48]	; 0x30
   2e21c:	cmp	r2, r3
   2e220:	bge	2e248 <__assert_fail@plt+0x1d008>
   2e224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e228:	ldr	r2, [r3, #4]
   2e22c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e230:	ldr	r3, [r3, #40]	; 0x28
   2e234:	add	r3, r3, #1
   2e238:	add	r3, r2, r3
   2e23c:	ldrb	r3, [r3]
   2e240:	strb	r3, [fp, #-5]
   2e244:	b	2e250 <__assert_fail@plt+0x1d010>
   2e248:	mov	r3, #0
   2e24c:	strb	r3, [fp, #-5]
   2e250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e254:	ldrb	r2, [fp, #-5]
   2e258:	strb	r2, [r3]
   2e25c:	mov	r3, #2
   2e260:	str	r3, [fp, #-12]
   2e264:	ldrb	r3, [fp, #-5]
   2e268:	cmp	r3, #58	; 0x3a
   2e26c:	beq	2e2a0 <__assert_fail@plt+0x1d060>
   2e270:	cmp	r3, #61	; 0x3d
   2e274:	beq	2e290 <__assert_fail@plt+0x1d050>
   2e278:	cmp	r3, #46	; 0x2e
   2e27c:	bne	2e2c0 <__assert_fail@plt+0x1d080>
   2e280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e284:	mov	r2, #26
   2e288:	strb	r2, [r3, #4]
   2e28c:	b	2e2e4 <__assert_fail@plt+0x1d0a4>
   2e290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e294:	mov	r2, #28
   2e298:	strb	r2, [r3, #4]
   2e29c:	b	2e2e4 <__assert_fail@plt+0x1d0a4>
   2e2a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e2a4:	and	r3, r3, #4
   2e2a8:	cmp	r3, #0
   2e2ac:	beq	2e2c0 <__assert_fail@plt+0x1d080>
   2e2b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2b4:	mov	r2, #30
   2e2b8:	strb	r2, [r3, #4]
   2e2bc:	b	2e2e4 <__assert_fail@plt+0x1d0a4>
   2e2c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2c4:	mov	r2, #1
   2e2c8:	strb	r2, [r3, #4]
   2e2cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2d0:	ldrb	r2, [fp, #-13]
   2e2d4:	strb	r2, [r3]
   2e2d8:	mov	r3, #1
   2e2dc:	str	r3, [fp, #-12]
   2e2e0:	nop	{0}
   2e2e4:	ldr	r3, [fp, #-12]
   2e2e8:	b	2e348 <__assert_fail@plt+0x1d108>
   2e2ec:	ldrb	r3, [fp, #-13]
   2e2f0:	cmp	r3, #93	; 0x5d
   2e2f4:	beq	2e318 <__assert_fail@plt+0x1d0d8>
   2e2f8:	cmp	r3, #94	; 0x5e
   2e2fc:	beq	2e328 <__assert_fail@plt+0x1d0e8>
   2e300:	cmp	r3, #45	; 0x2d
   2e304:	bne	2e338 <__assert_fail@plt+0x1d0f8>
   2e308:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e30c:	mov	r2, #22
   2e310:	strb	r2, [r3, #4]
   2e314:	b	2e344 <__assert_fail@plt+0x1d104>
   2e318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e31c:	mov	r2, #21
   2e320:	strb	r2, [r3, #4]
   2e324:	b	2e344 <__assert_fail@plt+0x1d104>
   2e328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e32c:	mov	r2, #25
   2e330:	strb	r2, [r3, #4]
   2e334:	b	2e344 <__assert_fail@plt+0x1d104>
   2e338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e33c:	mov	r2, #1
   2e340:	strb	r2, [r3, #4]
   2e344:	mov	r3, #1
   2e348:	mov	r0, r3
   2e34c:	add	sp, fp, #0
   2e350:	pop	{fp}		; (ldr fp, [sp], #4)
   2e354:	bx	lr
   2e358:	str	fp, [sp, #-8]!
   2e35c:	str	lr, [sp, #4]
   2e360:	add	fp, sp, #4
   2e364:	sub	sp, sp, #48	; 0x30
   2e368:	str	r0, [fp, #-32]	; 0xffffffe0
   2e36c:	str	r1, [fp, #-36]	; 0xffffffdc
   2e370:	str	r2, [fp, #-40]	; 0xffffffd8
   2e374:	str	r3, [fp, #-44]	; 0xffffffd4
   2e378:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e37c:	ldr	r3, [r3]
   2e380:	str	r3, [fp, #-12]
   2e384:	ldr	r3, [fp, #-12]
   2e388:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e38c:	str	r2, [r3, #128]	; 0x80
   2e390:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e394:	orr	r2, r3, #8388608	; 0x800000
   2e398:	sub	r3, fp, #28
   2e39c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e3a0:	mov	r0, r3
   2e3a4:	bl	2d348 <__assert_fail@plt+0x1c108>
   2e3a8:	sub	r2, fp, #28
   2e3ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e3b0:	str	r3, [sp, #4]
   2e3b4:	mov	r3, #0
   2e3b8:	str	r3, [sp]
   2e3bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e3c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e3c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e3c8:	bl	2e4c0 <__assert_fail@plt+0x1d280>
   2e3cc:	str	r0, [fp, #-16]
   2e3d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e3d4:	ldr	r3, [r3]
   2e3d8:	cmp	r3, #0
   2e3dc:	movne	r3, #1
   2e3e0:	moveq	r3, #0
   2e3e4:	uxtb	r3, r3
   2e3e8:	cmp	r3, #0
   2e3ec:	beq	2e414 <__assert_fail@plt+0x1d1d4>
   2e3f0:	ldr	r3, [fp, #-16]
   2e3f4:	cmp	r3, #0
   2e3f8:	moveq	r3, #1
   2e3fc:	movne	r3, #0
   2e400:	uxtb	r3, r3
   2e404:	cmp	r3, #0
   2e408:	beq	2e414 <__assert_fail@plt+0x1d1d4>
   2e40c:	mov	r3, #0
   2e410:	b	2e4ac <__assert_fail@plt+0x1d26c>
   2e414:	mov	r3, #2
   2e418:	mov	r2, #0
   2e41c:	mov	r1, #0
   2e420:	ldr	r0, [fp, #-12]
   2e424:	bl	32000 <__assert_fail@plt+0x20dc0>
   2e428:	str	r0, [fp, #-20]	; 0xffffffec
   2e42c:	ldr	r3, [fp, #-16]
   2e430:	cmp	r3, #0
   2e434:	beq	2e454 <__assert_fail@plt+0x1d214>
   2e438:	mov	r3, #16
   2e43c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e440:	ldr	r1, [fp, #-16]
   2e444:	ldr	r0, [fp, #-12]
   2e448:	bl	32000 <__assert_fail@plt+0x20dc0>
   2e44c:	str	r0, [fp, #-8]
   2e450:	b	2e45c <__assert_fail@plt+0x1d21c>
   2e454:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e458:	str	r3, [fp, #-8]
   2e45c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e460:	cmp	r3, #0
   2e464:	moveq	r3, #1
   2e468:	movne	r3, #0
   2e46c:	uxtb	r3, r3
   2e470:	cmp	r3, #0
   2e474:	bne	2e494 <__assert_fail@plt+0x1d254>
   2e478:	ldr	r3, [fp, #-8]
   2e47c:	cmp	r3, #0
   2e480:	moveq	r3, #1
   2e484:	movne	r3, #0
   2e488:	uxtb	r3, r3
   2e48c:	cmp	r3, #0
   2e490:	beq	2e4a8 <__assert_fail@plt+0x1d268>
   2e494:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e498:	mov	r2, #12
   2e49c:	str	r2, [r3]
   2e4a0:	mov	r3, #0
   2e4a4:	b	2e4ac <__assert_fail@plt+0x1d26c>
   2e4a8:	ldr	r3, [fp, #-8]
   2e4ac:	mov	r0, r3
   2e4b0:	sub	sp, fp, #4
   2e4b4:	ldr	fp, [sp]
   2e4b8:	add	sp, sp, #4
   2e4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2e4c0:	str	fp, [sp, #-8]!
   2e4c4:	str	lr, [sp, #4]
   2e4c8:	add	fp, sp, #4
   2e4cc:	sub	sp, sp, #48	; 0x30
   2e4d0:	str	r0, [fp, #-32]	; 0xffffffe0
   2e4d4:	str	r1, [fp, #-36]	; 0xffffffdc
   2e4d8:	str	r2, [fp, #-40]	; 0xffffffd8
   2e4dc:	str	r3, [fp, #-44]	; 0xffffffd4
   2e4e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e4e4:	ldr	r3, [r3]
   2e4e8:	str	r3, [fp, #-16]
   2e4ec:	mov	r3, #0
   2e4f0:	str	r3, [fp, #-12]
   2e4f4:	ldr	r3, [fp, #-16]
   2e4f8:	ldr	r3, [r3, #84]	; 0x54
   2e4fc:	str	r3, [fp, #-20]	; 0xffffffec
   2e500:	ldr	r3, [fp, #8]
   2e504:	str	r3, [sp, #4]
   2e508:	ldr	r3, [fp, #4]
   2e50c:	str	r3, [sp]
   2e510:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e514:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e518:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e51c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e520:	bl	2e6f8 <__assert_fail@plt+0x1d4b8>
   2e524:	str	r0, [fp, #-8]
   2e528:	ldr	r3, [fp, #8]
   2e52c:	ldr	r3, [r3]
   2e530:	cmp	r3, #0
   2e534:	movne	r3, #1
   2e538:	moveq	r3, #0
   2e53c:	uxtb	r3, r3
   2e540:	cmp	r3, #0
   2e544:	beq	2e6d0 <__assert_fail@plt+0x1d490>
   2e548:	ldr	r3, [fp, #-8]
   2e54c:	cmp	r3, #0
   2e550:	moveq	r3, #1
   2e554:	movne	r3, #0
   2e558:	uxtb	r3, r3
   2e55c:	cmp	r3, #0
   2e560:	beq	2e6d0 <__assert_fail@plt+0x1d490>
   2e564:	mov	r3, #0
   2e568:	b	2e6e4 <__assert_fail@plt+0x1d4a4>
   2e56c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e570:	orr	r3, r3, #8388608	; 0x800000
   2e574:	mov	r2, r3
   2e578:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e57c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e580:	bl	2d348 <__assert_fail@plt+0x1c108>
   2e584:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e588:	ldrb	r3, [r3, #4]
   2e58c:	cmp	r3, #10
   2e590:	beq	2e680 <__assert_fail@plt+0x1d440>
   2e594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e598:	ldrb	r3, [r3, #4]
   2e59c:	cmp	r3, #2
   2e5a0:	beq	2e680 <__assert_fail@plt+0x1d440>
   2e5a4:	ldr	r3, [fp, #4]
   2e5a8:	cmp	r3, #0
   2e5ac:	beq	2e5c0 <__assert_fail@plt+0x1d380>
   2e5b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e5b4:	ldrb	r3, [r3, #4]
   2e5b8:	cmp	r3, #9
   2e5bc:	beq	2e680 <__assert_fail@plt+0x1d440>
   2e5c0:	ldr	r3, [fp, #-16]
   2e5c4:	ldr	r3, [r3, #84]	; 0x54
   2e5c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2e5cc:	ldr	r3, [fp, #-16]
   2e5d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e5d4:	str	r2, [r3, #84]	; 0x54
   2e5d8:	ldr	r3, [fp, #8]
   2e5dc:	str	r3, [sp, #4]
   2e5e0:	ldr	r3, [fp, #4]
   2e5e4:	str	r3, [sp]
   2e5e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e5ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e5f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e5f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e5f8:	bl	2e6f8 <__assert_fail@plt+0x1d4b8>
   2e5fc:	str	r0, [fp, #-12]
   2e600:	ldr	r3, [fp, #8]
   2e604:	ldr	r3, [r3]
   2e608:	cmp	r3, #0
   2e60c:	movne	r3, #1
   2e610:	moveq	r3, #0
   2e614:	uxtb	r3, r3
   2e618:	cmp	r3, #0
   2e61c:	beq	2e664 <__assert_fail@plt+0x1d424>
   2e620:	ldr	r3, [fp, #-12]
   2e624:	cmp	r3, #0
   2e628:	moveq	r3, #1
   2e62c:	movne	r3, #0
   2e630:	uxtb	r3, r3
   2e634:	cmp	r3, #0
   2e638:	beq	2e664 <__assert_fail@plt+0x1d424>
   2e63c:	ldr	r3, [fp, #-8]
   2e640:	cmp	r3, #0
   2e644:	beq	2e65c <__assert_fail@plt+0x1d41c>
   2e648:	mov	r2, #0
   2e64c:	movw	r1, #8936	; 0x22e8
   2e650:	movt	r1, #3
   2e654:	ldr	r0, [fp, #-8]
   2e658:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2e65c:	mov	r3, #0
   2e660:	b	2e6e4 <__assert_fail@plt+0x1d4a4>
   2e664:	ldr	r3, [fp, #-16]
   2e668:	ldr	r2, [r3, #84]	; 0x54
   2e66c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e670:	orr	r2, r2, r3
   2e674:	ldr	r3, [fp, #-16]
   2e678:	str	r2, [r3, #84]	; 0x54
   2e67c:	b	2e688 <__assert_fail@plt+0x1d448>
   2e680:	mov	r3, #0
   2e684:	str	r3, [fp, #-12]
   2e688:	mov	r3, #10
   2e68c:	ldr	r2, [fp, #-12]
   2e690:	ldr	r1, [fp, #-8]
   2e694:	ldr	r0, [fp, #-16]
   2e698:	bl	32000 <__assert_fail@plt+0x20dc0>
   2e69c:	str	r0, [fp, #-8]
   2e6a0:	ldr	r3, [fp, #-8]
   2e6a4:	cmp	r3, #0
   2e6a8:	moveq	r3, #1
   2e6ac:	movne	r3, #0
   2e6b0:	uxtb	r3, r3
   2e6b4:	cmp	r3, #0
   2e6b8:	beq	2e6d0 <__assert_fail@plt+0x1d490>
   2e6bc:	ldr	r3, [fp, #8]
   2e6c0:	mov	r2, #12
   2e6c4:	str	r2, [r3]
   2e6c8:	mov	r3, #0
   2e6cc:	b	2e6e4 <__assert_fail@plt+0x1d4a4>
   2e6d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e6d4:	ldrb	r3, [r3, #4]
   2e6d8:	cmp	r3, #10
   2e6dc:	beq	2e56c <__assert_fail@plt+0x1d32c>
   2e6e0:	ldr	r3, [fp, #-8]
   2e6e4:	mov	r0, r3
   2e6e8:	sub	sp, fp, #4
   2e6ec:	ldr	fp, [sp]
   2e6f0:	add	sp, sp, #4
   2e6f4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e6f8:	str	fp, [sp, #-8]!
   2e6fc:	str	lr, [sp, #4]
   2e700:	add	fp, sp, #4
   2e704:	sub	sp, sp, #40	; 0x28
   2e708:	str	r0, [fp, #-24]	; 0xffffffe8
   2e70c:	str	r1, [fp, #-28]	; 0xffffffe4
   2e710:	str	r2, [fp, #-32]	; 0xffffffe0
   2e714:	str	r3, [fp, #-36]	; 0xffffffdc
   2e718:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e71c:	ldr	r3, [r3]
   2e720:	str	r3, [fp, #-12]
   2e724:	ldr	r3, [fp, #8]
   2e728:	str	r3, [sp, #4]
   2e72c:	ldr	r3, [fp, #4]
   2e730:	str	r3, [sp]
   2e734:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e738:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e73c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e744:	bl	2e908 <__assert_fail@plt+0x1d6c8>
   2e748:	str	r0, [fp, #-8]
   2e74c:	ldr	r3, [fp, #8]
   2e750:	ldr	r3, [r3]
   2e754:	cmp	r3, #0
   2e758:	movne	r3, #1
   2e75c:	moveq	r3, #0
   2e760:	uxtb	r3, r3
   2e764:	cmp	r3, #0
   2e768:	beq	2e8b4 <__assert_fail@plt+0x1d674>
   2e76c:	ldr	r3, [fp, #-8]
   2e770:	cmp	r3, #0
   2e774:	moveq	r3, #1
   2e778:	movne	r3, #0
   2e77c:	uxtb	r3, r3
   2e780:	cmp	r3, #0
   2e784:	beq	2e8b4 <__assert_fail@plt+0x1d674>
   2e788:	mov	r3, #0
   2e78c:	b	2e8f4 <__assert_fail@plt+0x1d6b4>
   2e790:	ldr	r3, [fp, #8]
   2e794:	str	r3, [sp, #4]
   2e798:	ldr	r3, [fp, #4]
   2e79c:	str	r3, [sp]
   2e7a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e7a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e7a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e7b0:	bl	2e908 <__assert_fail@plt+0x1d6c8>
   2e7b4:	str	r0, [fp, #-16]
   2e7b8:	ldr	r3, [fp, #8]
   2e7bc:	ldr	r3, [r3]
   2e7c0:	cmp	r3, #0
   2e7c4:	movne	r3, #1
   2e7c8:	moveq	r3, #0
   2e7cc:	uxtb	r3, r3
   2e7d0:	cmp	r3, #0
   2e7d4:	beq	2e81c <__assert_fail@plt+0x1d5dc>
   2e7d8:	ldr	r3, [fp, #-16]
   2e7dc:	cmp	r3, #0
   2e7e0:	moveq	r3, #1
   2e7e4:	movne	r3, #0
   2e7e8:	uxtb	r3, r3
   2e7ec:	cmp	r3, #0
   2e7f0:	beq	2e81c <__assert_fail@plt+0x1d5dc>
   2e7f4:	ldr	r3, [fp, #-8]
   2e7f8:	cmp	r3, #0
   2e7fc:	beq	2e814 <__assert_fail@plt+0x1d5d4>
   2e800:	mov	r2, #0
   2e804:	movw	r1, #8936	; 0x22e8
   2e808:	movt	r1, #3
   2e80c:	ldr	r0, [fp, #-8]
   2e810:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2e814:	mov	r3, #0
   2e818:	b	2e8f4 <__assert_fail@plt+0x1d6b4>
   2e81c:	ldr	r3, [fp, #-8]
   2e820:	cmp	r3, #0
   2e824:	beq	2e8a0 <__assert_fail@plt+0x1d660>
   2e828:	ldr	r3, [fp, #-16]
   2e82c:	cmp	r3, #0
   2e830:	beq	2e8a0 <__assert_fail@plt+0x1d660>
   2e834:	mov	r3, #16
   2e838:	ldr	r2, [fp, #-16]
   2e83c:	ldr	r1, [fp, #-8]
   2e840:	ldr	r0, [fp, #-12]
   2e844:	bl	32000 <__assert_fail@plt+0x20dc0>
   2e848:	str	r0, [fp, #-20]	; 0xffffffec
   2e84c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e850:	cmp	r3, #0
   2e854:	bne	2e894 <__assert_fail@plt+0x1d654>
   2e858:	mov	r2, #0
   2e85c:	movw	r1, #8936	; 0x22e8
   2e860:	movt	r1, #3
   2e864:	ldr	r0, [fp, #-16]
   2e868:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2e86c:	mov	r2, #0
   2e870:	movw	r1, #8936	; 0x22e8
   2e874:	movt	r1, #3
   2e878:	ldr	r0, [fp, #-8]
   2e87c:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2e880:	ldr	r3, [fp, #8]
   2e884:	mov	r2, #12
   2e888:	str	r2, [r3]
   2e88c:	mov	r3, #0
   2e890:	b	2e8f4 <__assert_fail@plt+0x1d6b4>
   2e894:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e898:	str	r3, [fp, #-8]
   2e89c:	b	2e8b4 <__assert_fail@plt+0x1d674>
   2e8a0:	ldr	r3, [fp, #-8]
   2e8a4:	cmp	r3, #0
   2e8a8:	bne	2e8b4 <__assert_fail@plt+0x1d674>
   2e8ac:	ldr	r3, [fp, #-16]
   2e8b0:	str	r3, [fp, #-8]
   2e8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e8b8:	ldrb	r3, [r3, #4]
   2e8bc:	cmp	r3, #10
   2e8c0:	beq	2e8f0 <__assert_fail@plt+0x1d6b0>
   2e8c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e8c8:	ldrb	r3, [r3, #4]
   2e8cc:	cmp	r3, #2
   2e8d0:	beq	2e8f0 <__assert_fail@plt+0x1d6b0>
   2e8d4:	ldr	r3, [fp, #4]
   2e8d8:	cmp	r3, #0
   2e8dc:	beq	2e790 <__assert_fail@plt+0x1d550>
   2e8e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e8e4:	ldrb	r3, [r3, #4]
   2e8e8:	cmp	r3, #9
   2e8ec:	bne	2e790 <__assert_fail@plt+0x1d550>
   2e8f0:	ldr	r3, [fp, #-8]
   2e8f4:	mov	r0, r3
   2e8f8:	sub	sp, fp, #4
   2e8fc:	ldr	fp, [sp]
   2e900:	add	sp, sp, #4
   2e904:	pop	{pc}		; (ldr pc, [sp], #4)
   2e908:	str	fp, [sp, #-8]!
   2e90c:	str	lr, [sp, #4]
   2e910:	add	fp, sp, #4
   2e914:	sub	sp, sp, #48	; 0x30
   2e918:	str	r0, [fp, #-32]	; 0xffffffe0
   2e91c:	str	r1, [fp, #-36]	; 0xffffffdc
   2e920:	str	r2, [fp, #-40]	; 0xffffffd8
   2e924:	str	r3, [fp, #-44]	; 0xffffffd4
   2e928:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e92c:	ldr	r3, [r3]
   2e930:	str	r3, [fp, #-16]
   2e934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e938:	ldrb	r3, [r3, #4]
   2e93c:	sub	r3, r3, #1
   2e940:	cmp	r3, #35	; 0x23
   2e944:	ldrls	pc, [pc, r3, lsl #2]
   2e948:	b	2f140 <__assert_fail@plt+0x1df00>
   2e94c:	ldrdeq	lr, [r2], -ip
   2e950:	andeq	pc, r2, r8, lsr r1	; <UNPREDICTABLE>
   2e954:	andeq	pc, r2, r0, asr #2
   2e958:	strdeq	lr, [r2], -r0
   2e95c:			; <UNDEFINED> instruction: 0x0002efb4
   2e960:	andeq	pc, r2, r0, asr #2
   2e964:	andeq	pc, r2, r0, asr #2
   2e968:	andeq	lr, r2, ip, lsl fp
   2e96c:	andeq	lr, r2, r0, asr sp
   2e970:	andeq	pc, r2, r8, lsr r1	; <UNPREDICTABLE>
   2e974:	andeq	lr, r2, r0, ror #25
   2e978:	ldrdeq	lr, [r2], -r8
   2e97c:	andeq	pc, r2, r0, asr #2
   2e980:	andeq	pc, r2, r0, asr #2
   2e984:	andeq	pc, r2, r0, asr #2
   2e988:	andeq	pc, r2, r0, asr #2
   2e98c:	andeq	pc, r2, r0, asr #2
   2e990:	andeq	lr, r2, r0, ror #25
   2e994:	andeq	lr, r2, r0, ror #25
   2e998:	andeq	lr, r2, ip, lsl #23
   2e99c:	andeq	pc, r2, r0, asr #2
   2e9a0:	andeq	pc, r2, r0, asr #2
   2e9a4:			; <UNDEFINED> instruction: 0x0002ecbc
   2e9a8:	andeq	lr, r2, r4, lsl #27
   2e9ac:	andeq	pc, r2, r0, asr #2
   2e9b0:	andeq	pc, r2, r0, asr #2
   2e9b4:	andeq	pc, r2, r0, asr #2
   2e9b8:	andeq	pc, r2, r0, asr #2
   2e9bc:	andeq	pc, r2, r0, asr #2
   2e9c0:	andeq	pc, r2, r0, asr #2
   2e9c4:	andeq	pc, r2, r0, asr #2
   2e9c8:	andeq	pc, r2, r0, lsr #32
   2e9cc:	andeq	pc, r2, r0, lsr #32
   2e9d0:	andeq	pc, r2, ip, lsr #1
   2e9d4:	andeq	pc, r2, ip, lsr #1
   2e9d8:	andeq	pc, r2, r0, asr #2
   2e9dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e9e0:	mov	r2, #0
   2e9e4:	mov	r1, #0
   2e9e8:	ldr	r0, [fp, #-16]
   2e9ec:	bl	32068 <__assert_fail@plt+0x20e28>
   2e9f0:	str	r0, [fp, #-8]
   2e9f4:	ldr	r3, [fp, #-8]
   2e9f8:	cmp	r3, #0
   2e9fc:	moveq	r3, #1
   2ea00:	movne	r3, #0
   2ea04:	uxtb	r3, r3
   2ea08:	cmp	r3, #0
   2ea0c:	beq	2ea24 <__assert_fail@plt+0x1d7e4>
   2ea10:	ldr	r3, [fp, #8]
   2ea14:	mov	r2, #12
   2ea18:	str	r2, [r3]
   2ea1c:	mov	r3, #0
   2ea20:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ea24:	ldr	r3, [fp, #-16]
   2ea28:	ldr	r3, [r3, #92]	; 0x5c
   2ea2c:	cmp	r3, #1
   2ea30:	ble	2f154 <__assert_fail@plt+0x1df14>
   2ea34:	b	2eac4 <__assert_fail@plt+0x1d884>
   2ea38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ea3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ea40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ea44:	bl	2d348 <__assert_fail@plt+0x1c108>
   2ea48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ea4c:	mov	r2, #0
   2ea50:	mov	r1, #0
   2ea54:	ldr	r0, [fp, #-16]
   2ea58:	bl	32068 <__assert_fail@plt+0x20e28>
   2ea5c:	str	r0, [fp, #-20]	; 0xffffffec
   2ea60:	mov	r3, #16
   2ea64:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ea68:	ldr	r1, [fp, #-8]
   2ea6c:	ldr	r0, [fp, #-16]
   2ea70:	bl	32000 <__assert_fail@plt+0x20dc0>
   2ea74:	str	r0, [fp, #-8]
   2ea78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea7c:	cmp	r3, #0
   2ea80:	moveq	r3, #1
   2ea84:	movne	r3, #0
   2ea88:	uxtb	r3, r3
   2ea8c:	cmp	r3, #0
   2ea90:	bne	2eab0 <__assert_fail@plt+0x1d870>
   2ea94:	ldr	r3, [fp, #-8]
   2ea98:	cmp	r3, #0
   2ea9c:	moveq	r3, #1
   2eaa0:	movne	r3, #0
   2eaa4:	uxtb	r3, r3
   2eaa8:	cmp	r3, #0
   2eaac:	beq	2eac4 <__assert_fail@plt+0x1d884>
   2eab0:	ldr	r3, [fp, #8]
   2eab4:	mov	r2, #12
   2eab8:	str	r2, [r3]
   2eabc:	mov	r3, #0
   2eac0:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2eac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eac8:	ldr	r2, [r3, #56]	; 0x38
   2eacc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ead0:	ldr	r3, [r3, #40]	; 0x28
   2ead4:	cmp	r2, r3
   2ead8:	ble	2f154 <__assert_fail@plt+0x1df14>
   2eadc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eae0:	ldr	r2, [r3, #40]	; 0x28
   2eae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eae8:	ldr	r3, [r3, #28]
   2eaec:	cmp	r2, r3
   2eaf0:	beq	2f154 <__assert_fail@plt+0x1df14>
   2eaf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eaf8:	ldr	r2, [r3, #8]
   2eafc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eb00:	ldr	r3, [r3, #40]	; 0x28
   2eb04:	lsl	r3, r3, #2
   2eb08:	add	r3, r2, r3
   2eb0c:	ldr	r3, [r3]
   2eb10:	cmn	r3, #1
   2eb14:	beq	2ea38 <__assert_fail@plt+0x1d7f8>
   2eb18:	b	2f154 <__assert_fail@plt+0x1df14>
   2eb1c:	ldr	r3, [fp, #4]
   2eb20:	add	r3, r3, #1
   2eb24:	ldr	r2, [fp, #8]
   2eb28:	str	r2, [sp, #4]
   2eb2c:	str	r3, [sp]
   2eb30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2eb34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2eb38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eb3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eb40:	bl	2f2ec <__assert_fail@plt+0x1e0ac>
   2eb44:	str	r0, [fp, #-8]
   2eb48:	ldr	r3, [fp, #8]
   2eb4c:	ldr	r3, [r3]
   2eb50:	cmp	r3, #0
   2eb54:	movne	r3, #1
   2eb58:	moveq	r3, #0
   2eb5c:	uxtb	r3, r3
   2eb60:	cmp	r3, #0
   2eb64:	beq	2f15c <__assert_fail@plt+0x1df1c>
   2eb68:	ldr	r3, [fp, #-8]
   2eb6c:	cmp	r3, #0
   2eb70:	moveq	r3, #1
   2eb74:	movne	r3, #0
   2eb78:	uxtb	r3, r3
   2eb7c:	cmp	r3, #0
   2eb80:	beq	2f15c <__assert_fail@plt+0x1df1c>
   2eb84:	mov	r3, #0
   2eb88:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2eb8c:	ldr	r3, [fp, #8]
   2eb90:	str	r3, [sp]
   2eb94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2eb98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2eb9c:	ldr	r1, [fp, #-16]
   2eba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eba4:	bl	300ac <__assert_fail@plt+0x1ee6c>
   2eba8:	str	r0, [fp, #-8]
   2ebac:	ldr	r3, [fp, #8]
   2ebb0:	ldr	r3, [r3]
   2ebb4:	cmp	r3, #0
   2ebb8:	movne	r3, #1
   2ebbc:	moveq	r3, #0
   2ebc0:	uxtb	r3, r3
   2ebc4:	cmp	r3, #0
   2ebc8:	beq	2f164 <__assert_fail@plt+0x1df24>
   2ebcc:	ldr	r3, [fp, #-8]
   2ebd0:	cmp	r3, #0
   2ebd4:	moveq	r3, #1
   2ebd8:	movne	r3, #0
   2ebdc:	uxtb	r3, r3
   2ebe0:	cmp	r3, #0
   2ebe4:	beq	2f164 <__assert_fail@plt+0x1df24>
   2ebe8:	mov	r3, #0
   2ebec:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ebf0:	ldr	r3, [fp, #-16]
   2ebf4:	ldr	r3, [r3, #84]	; 0x54
   2ebf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ebfc:	ldr	r2, [r2]
   2ec00:	mov	r1, #1
   2ec04:	lsl	r2, r1, r2
   2ec08:	and	r3, r3, r2
   2ec0c:	cmp	r3, #0
   2ec10:	bne	2ec28 <__assert_fail@plt+0x1d9e8>
   2ec14:	ldr	r3, [fp, #8]
   2ec18:	mov	r2, #6
   2ec1c:	str	r2, [r3]
   2ec20:	mov	r3, #0
   2ec24:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ec28:	ldr	r3, [fp, #-16]
   2ec2c:	ldr	r3, [r3, #80]	; 0x50
   2ec30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ec34:	ldr	r2, [r2]
   2ec38:	mov	r1, #1
   2ec3c:	lsl	r2, r1, r2
   2ec40:	orr	r2, r3, r2
   2ec44:	ldr	r3, [fp, #-16]
   2ec48:	str	r2, [r3, #80]	; 0x50
   2ec4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ec50:	mov	r2, #0
   2ec54:	mov	r1, #0
   2ec58:	ldr	r0, [fp, #-16]
   2ec5c:	bl	32068 <__assert_fail@plt+0x20e28>
   2ec60:	str	r0, [fp, #-8]
   2ec64:	ldr	r3, [fp, #-8]
   2ec68:	cmp	r3, #0
   2ec6c:	moveq	r3, #1
   2ec70:	movne	r3, #0
   2ec74:	uxtb	r3, r3
   2ec78:	cmp	r3, #0
   2ec7c:	beq	2ec94 <__assert_fail@plt+0x1da54>
   2ec80:	ldr	r3, [fp, #8]
   2ec84:	mov	r2, #12
   2ec88:	str	r2, [r3]
   2ec8c:	mov	r3, #0
   2ec90:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ec94:	ldr	r3, [fp, #-16]
   2ec98:	ldr	r3, [r3, #76]	; 0x4c
   2ec9c:	add	r2, r3, #1
   2eca0:	ldr	r3, [fp, #-16]
   2eca4:	str	r2, [r3, #76]	; 0x4c
   2eca8:	ldr	r2, [fp, #-16]
   2ecac:	ldrb	r3, [r2, #88]	; 0x58
   2ecb0:	orr	r3, r3, #2
   2ecb4:	strb	r3, [r2, #88]	; 0x58
   2ecb8:	b	2f188 <__assert_fail@plt+0x1df48>
   2ecbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ecc0:	and	r3, r3, #16777216	; 0x1000000
   2ecc4:	cmp	r3, #0
   2ecc8:	beq	2ece0 <__assert_fail@plt+0x1daa0>
   2eccc:	ldr	r3, [fp, #8]
   2ecd0:	mov	r2, #13
   2ecd4:	str	r2, [r3]
   2ecd8:	mov	r3, #0
   2ecdc:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ece0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ece4:	and	r3, r3, #32
   2ece8:	cmp	r3, #0
   2ecec:	beq	2ed04 <__assert_fail@plt+0x1dac4>
   2ecf0:	ldr	r3, [fp, #8]
   2ecf4:	mov	r2, #13
   2ecf8:	str	r2, [r3]
   2ecfc:	mov	r3, #0
   2ed00:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ed04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ed08:	and	r3, r3, #16
   2ed0c:	cmp	r3, #0
   2ed10:	beq	2ed50 <__assert_fail@plt+0x1db10>
   2ed14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ed18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ed1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ed20:	bl	2d348 <__assert_fail@plt+0x1c108>
   2ed24:	ldr	r3, [fp, #8]
   2ed28:	str	r3, [sp, #4]
   2ed2c:	ldr	r3, [fp, #4]
   2ed30:	str	r3, [sp]
   2ed34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ed38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ed3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ed40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ed44:	bl	2e908 <__assert_fail@plt+0x1d6c8>
   2ed48:	mov	r3, r0
   2ed4c:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ed50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ed54:	ldrb	r3, [r3, #4]
   2ed58:	cmp	r3, #9
   2ed5c:	bne	2ed84 <__assert_fail@plt+0x1db44>
   2ed60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ed64:	and	r3, r3, #131072	; 0x20000
   2ed68:	cmp	r3, #0
   2ed6c:	bne	2ed84 <__assert_fail@plt+0x1db44>
   2ed70:	ldr	r3, [fp, #8]
   2ed74:	mov	r2, #16
   2ed78:	str	r2, [r3]
   2ed7c:	mov	r3, #0
   2ed80:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ed84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ed88:	mov	r2, #1
   2ed8c:	strb	r2, [r3, #4]
   2ed90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ed94:	mov	r2, #0
   2ed98:	mov	r1, #0
   2ed9c:	ldr	r0, [fp, #-16]
   2eda0:	bl	32068 <__assert_fail@plt+0x20e28>
   2eda4:	str	r0, [fp, #-8]
   2eda8:	ldr	r3, [fp, #-8]
   2edac:	cmp	r3, #0
   2edb0:	moveq	r3, #1
   2edb4:	movne	r3, #0
   2edb8:	uxtb	r3, r3
   2edbc:	cmp	r3, #0
   2edc0:	beq	2f16c <__assert_fail@plt+0x1df2c>
   2edc4:	ldr	r3, [fp, #8]
   2edc8:	mov	r2, #12
   2edcc:	str	r2, [r3]
   2edd0:	mov	r3, #0
   2edd4:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2edd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2eddc:	ldr	r2, [r3]
   2ede0:	movw	r3, #783	; 0x30f
   2ede4:	and	r3, r3, r2
   2ede8:	cmp	r3, #0
   2edec:	beq	2ee10 <__assert_fail@plt+0x1dbd0>
   2edf0:	ldr	r3, [fp, #-16]
   2edf4:	ldrb	r3, [r3, #88]	; 0x58
   2edf8:	and	r3, r3, #16
   2edfc:	uxtb	r3, r3
   2ee00:	cmp	r3, #0
   2ee04:	bne	2ee10 <__assert_fail@plt+0x1dbd0>
   2ee08:	ldr	r0, [fp, #-16]
   2ee0c:	bl	2aa94 <__assert_fail@plt+0x19854>
   2ee10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee14:	ldr	r3, [r3]
   2ee18:	cmp	r3, #256	; 0x100
   2ee1c:	beq	2ee30 <__assert_fail@plt+0x1dbf0>
   2ee20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee24:	ldr	r3, [r3]
   2ee28:	cmp	r3, #512	; 0x200
   2ee2c:	bne	2ef50 <__assert_fail@plt+0x1dd10>
   2ee30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee34:	ldr	r3, [r3]
   2ee38:	cmp	r3, #256	; 0x100
   2ee3c:	bne	2ee74 <__assert_fail@plt+0x1dc34>
   2ee40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee44:	mov	r2, #6
   2ee48:	str	r2, [r3]
   2ee4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee50:	mov	r2, #0
   2ee54:	mov	r1, #0
   2ee58:	ldr	r0, [fp, #-16]
   2ee5c:	bl	32068 <__assert_fail@plt+0x20e28>
   2ee60:	str	r0, [fp, #-12]
   2ee64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee68:	mov	r2, #9
   2ee6c:	str	r2, [r3]
   2ee70:	b	2eea4 <__assert_fail@plt+0x1dc64>
   2ee74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee78:	mov	r2, #5
   2ee7c:	str	r2, [r3]
   2ee80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee84:	mov	r2, #0
   2ee88:	mov	r1, #0
   2ee8c:	ldr	r0, [fp, #-16]
   2ee90:	bl	32068 <__assert_fail@plt+0x20e28>
   2ee94:	str	r0, [fp, #-12]
   2ee98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ee9c:	mov	r2, #10
   2eea0:	str	r2, [r3]
   2eea4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2eea8:	mov	r2, #0
   2eeac:	mov	r1, #0
   2eeb0:	ldr	r0, [fp, #-16]
   2eeb4:	bl	32068 <__assert_fail@plt+0x20e28>
   2eeb8:	str	r0, [fp, #-24]	; 0xffffffe8
   2eebc:	mov	r3, #10
   2eec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eec4:	ldr	r1, [fp, #-12]
   2eec8:	ldr	r0, [fp, #-16]
   2eecc:	bl	32000 <__assert_fail@plt+0x20dc0>
   2eed0:	str	r0, [fp, #-8]
   2eed4:	ldr	r3, [fp, #-12]
   2eed8:	cmp	r3, #0
   2eedc:	moveq	r3, #1
   2eee0:	movne	r3, #0
   2eee4:	uxtb	r3, r3
   2eee8:	cmp	r3, #0
   2eeec:	bne	2ef0c <__assert_fail@plt+0x1dccc>
   2eef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eef4:	cmp	r3, #0
   2eef8:	moveq	r3, #1
   2eefc:	movne	r3, #0
   2ef00:	uxtb	r3, r3
   2ef04:	cmp	r3, #0
   2ef08:	beq	2ef14 <__assert_fail@plt+0x1dcd4>
   2ef0c:	mov	r3, #1
   2ef10:	b	2ef18 <__assert_fail@plt+0x1dcd8>
   2ef14:	mov	r3, #0
   2ef18:	cmp	r3, #0
   2ef1c:	bne	2ef3c <__assert_fail@plt+0x1dcfc>
   2ef20:	ldr	r3, [fp, #-8]
   2ef24:	cmp	r3, #0
   2ef28:	moveq	r3, #1
   2ef2c:	movne	r3, #0
   2ef30:	uxtb	r3, r3
   2ef34:	cmp	r3, #0
   2ef38:	beq	2ef98 <__assert_fail@plt+0x1dd58>
   2ef3c:	ldr	r3, [fp, #8]
   2ef40:	mov	r2, #12
   2ef44:	str	r2, [r3]
   2ef48:	mov	r3, #0
   2ef4c:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ef50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ef54:	mov	r2, #0
   2ef58:	mov	r1, #0
   2ef5c:	ldr	r0, [fp, #-16]
   2ef60:	bl	32068 <__assert_fail@plt+0x20e28>
   2ef64:	str	r0, [fp, #-8]
   2ef68:	ldr	r3, [fp, #-8]
   2ef6c:	cmp	r3, #0
   2ef70:	moveq	r3, #1
   2ef74:	movne	r3, #0
   2ef78:	uxtb	r3, r3
   2ef7c:	cmp	r3, #0
   2ef80:	beq	2ef9c <__assert_fail@plt+0x1dd5c>
   2ef84:	ldr	r3, [fp, #8]
   2ef88:	mov	r2, #12
   2ef8c:	str	r2, [r3]
   2ef90:	mov	r3, #0
   2ef94:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2ef98:	nop	{0}
   2ef9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2efa0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2efa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2efa8:	bl	2d348 <__assert_fail@plt+0x1c108>
   2efac:	ldr	r3, [fp, #-8]
   2efb0:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2efb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2efb8:	mov	r2, #0
   2efbc:	mov	r1, #0
   2efc0:	ldr	r0, [fp, #-16]
   2efc4:	bl	32068 <__assert_fail@plt+0x20e28>
   2efc8:	str	r0, [fp, #-8]
   2efcc:	ldr	r3, [fp, #-8]
   2efd0:	cmp	r3, #0
   2efd4:	moveq	r3, #1
   2efd8:	movne	r3, #0
   2efdc:	uxtb	r3, r3
   2efe0:	cmp	r3, #0
   2efe4:	beq	2effc <__assert_fail@plt+0x1ddbc>
   2efe8:	ldr	r3, [fp, #8]
   2efec:	mov	r2, #12
   2eff0:	str	r2, [r3]
   2eff4:	mov	r3, #0
   2eff8:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2effc:	ldr	r3, [fp, #-16]
   2f000:	ldr	r3, [r3, #92]	; 0x5c
   2f004:	cmp	r3, #1
   2f008:	ble	2f174 <__assert_fail@plt+0x1df34>
   2f00c:	ldr	r2, [fp, #-16]
   2f010:	ldrb	r3, [r2, #88]	; 0x58
   2f014:	orr	r3, r3, #2
   2f018:	strb	r3, [r2, #88]	; 0x58
   2f01c:	b	2f174 <__assert_fail@plt+0x1df34>
   2f020:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f024:	ldr	r1, [r3, #64]	; 0x40
   2f028:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f02c:	ldrb	r3, [r3, #4]
   2f030:	cmp	r3, #33	; 0x21
   2f034:	moveq	r3, #1
   2f038:	movne	r3, #0
   2f03c:	uxtb	r3, r3
   2f040:	ldr	r2, [fp, #8]
   2f044:	str	r2, [sp, #4]
   2f048:	str	r3, [sp]
   2f04c:	movw	r3, #7972	; 0x1f24
   2f050:	movt	r3, #4
   2f054:	movw	r2, #7976	; 0x1f28
   2f058:	movt	r2, #4
   2f05c:	ldr	r0, [fp, #-16]
   2f060:	bl	31b80 <__assert_fail@plt+0x20940>
   2f064:	str	r0, [fp, #-8]
   2f068:	ldr	r3, [fp, #8]
   2f06c:	ldr	r3, [r3]
   2f070:	cmp	r3, #0
   2f074:	movne	r3, #1
   2f078:	moveq	r3, #0
   2f07c:	uxtb	r3, r3
   2f080:	cmp	r3, #0
   2f084:	beq	2f17c <__assert_fail@plt+0x1df3c>
   2f088:	ldr	r3, [fp, #-8]
   2f08c:	cmp	r3, #0
   2f090:	moveq	r3, #1
   2f094:	movne	r3, #0
   2f098:	uxtb	r3, r3
   2f09c:	cmp	r3, #0
   2f0a0:	beq	2f17c <__assert_fail@plt+0x1df3c>
   2f0a4:	mov	r3, #0
   2f0a8:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2f0ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f0b0:	ldr	r1, [r3, #64]	; 0x40
   2f0b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f0b8:	ldrb	r3, [r3, #4]
   2f0bc:	cmp	r3, #35	; 0x23
   2f0c0:	moveq	r3, #1
   2f0c4:	movne	r3, #0
   2f0c8:	uxtb	r3, r3
   2f0cc:	ldr	r2, [fp, #8]
   2f0d0:	str	r2, [sp, #4]
   2f0d4:	str	r3, [sp]
   2f0d8:	movw	r3, #7984	; 0x1f30
   2f0dc:	movt	r3, #4
   2f0e0:	movw	r2, #7988	; 0x1f34
   2f0e4:	movt	r2, #4
   2f0e8:	ldr	r0, [fp, #-16]
   2f0ec:	bl	31b80 <__assert_fail@plt+0x20940>
   2f0f0:	str	r0, [fp, #-8]
   2f0f4:	ldr	r3, [fp, #8]
   2f0f8:	ldr	r3, [r3]
   2f0fc:	cmp	r3, #0
   2f100:	movne	r3, #1
   2f104:	moveq	r3, #0
   2f108:	uxtb	r3, r3
   2f10c:	cmp	r3, #0
   2f110:	beq	2f184 <__assert_fail@plt+0x1df44>
   2f114:	ldr	r3, [fp, #-8]
   2f118:	cmp	r3, #0
   2f11c:	moveq	r3, #1
   2f120:	movne	r3, #0
   2f124:	uxtb	r3, r3
   2f128:	cmp	r3, #0
   2f12c:	beq	2f184 <__assert_fail@plt+0x1df44>
   2f130:	mov	r3, #0
   2f134:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2f138:	mov	r3, #0
   2f13c:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2f140:	ldr	r3, [fp, #8]
   2f144:	mov	r2, #5
   2f148:	str	r2, [r3]
   2f14c:	mov	r3, #0
   2f150:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2f154:	nop	{0}
   2f158:	b	2f188 <__assert_fail@plt+0x1df48>
   2f15c:	nop	{0}
   2f160:	b	2f188 <__assert_fail@plt+0x1df48>
   2f164:	nop	{0}
   2f168:	b	2f188 <__assert_fail@plt+0x1df48>
   2f16c:	nop	{0}
   2f170:	b	2f188 <__assert_fail@plt+0x1df48>
   2f174:	nop	{0}
   2f178:	b	2f188 <__assert_fail@plt+0x1df48>
   2f17c:	nop	{0}
   2f180:	b	2f188 <__assert_fail@plt+0x1df48>
   2f184:	nop	{0}
   2f188:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2f18c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f194:	bl	2d348 <__assert_fail@plt+0x1c108>
   2f198:	b	2f294 <__assert_fail@plt+0x1e054>
   2f19c:	ldr	r3, [fp, #8]
   2f1a0:	str	r3, [sp, #4]
   2f1a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f1a8:	str	r3, [sp]
   2f1ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f1b0:	ldr	r2, [fp, #-16]
   2f1b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f1b8:	ldr	r0, [fp, #-8]
   2f1bc:	bl	2f4b8 <__assert_fail@plt+0x1e278>
   2f1c0:	str	r0, [fp, #-28]	; 0xffffffe4
   2f1c4:	ldr	r3, [fp, #8]
   2f1c8:	ldr	r3, [r3]
   2f1cc:	cmp	r3, #0
   2f1d0:	movne	r3, #1
   2f1d4:	moveq	r3, #0
   2f1d8:	uxtb	r3, r3
   2f1dc:	cmp	r3, #0
   2f1e0:	beq	2f228 <__assert_fail@plt+0x1dfe8>
   2f1e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f1e8:	cmp	r3, #0
   2f1ec:	moveq	r3, #1
   2f1f0:	movne	r3, #0
   2f1f4:	uxtb	r3, r3
   2f1f8:	cmp	r3, #0
   2f1fc:	beq	2f228 <__assert_fail@plt+0x1dfe8>
   2f200:	ldr	r3, [fp, #-8]
   2f204:	cmp	r3, #0
   2f208:	beq	2f220 <__assert_fail@plt+0x1dfe0>
   2f20c:	mov	r2, #0
   2f210:	movw	r1, #8936	; 0x22e8
   2f214:	movt	r1, #3
   2f218:	ldr	r0, [fp, #-8]
   2f21c:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2f220:	mov	r3, #0
   2f224:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2f228:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f22c:	str	r3, [fp, #-8]
   2f230:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f234:	and	r3, r3, #16777216	; 0x1000000
   2f238:	cmp	r3, #0
   2f23c:	beq	2f294 <__assert_fail@plt+0x1e054>
   2f240:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f244:	ldrb	r3, [r3, #4]
   2f248:	cmp	r3, #11
   2f24c:	beq	2f260 <__assert_fail@plt+0x1e020>
   2f250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f254:	ldrb	r3, [r3, #4]
   2f258:	cmp	r3, #23
   2f25c:	bne	2f294 <__assert_fail@plt+0x1e054>
   2f260:	ldr	r3, [fp, #-8]
   2f264:	cmp	r3, #0
   2f268:	beq	2f280 <__assert_fail@plt+0x1e040>
   2f26c:	mov	r2, #0
   2f270:	movw	r1, #8936	; 0x22e8
   2f274:	movt	r1, #3
   2f278:	ldr	r0, [fp, #-8]
   2f27c:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2f280:	ldr	r3, [fp, #8]
   2f284:	mov	r2, #13
   2f288:	str	r2, [r3]
   2f28c:	mov	r3, #0
   2f290:	b	2f2d8 <__assert_fail@plt+0x1e098>
   2f294:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f298:	ldrb	r3, [r3, #4]
   2f29c:	cmp	r3, #11
   2f2a0:	beq	2f19c <__assert_fail@plt+0x1df5c>
   2f2a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f2a8:	ldrb	r3, [r3, #4]
   2f2ac:	cmp	r3, #18
   2f2b0:	beq	2f19c <__assert_fail@plt+0x1df5c>
   2f2b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f2b8:	ldrb	r3, [r3, #4]
   2f2bc:	cmp	r3, #19
   2f2c0:	beq	2f19c <__assert_fail@plt+0x1df5c>
   2f2c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f2c8:	ldrb	r3, [r3, #4]
   2f2cc:	cmp	r3, #23
   2f2d0:	beq	2f19c <__assert_fail@plt+0x1df5c>
   2f2d4:	ldr	r3, [fp, #-8]
   2f2d8:	mov	r0, r3
   2f2dc:	sub	sp, fp, #4
   2f2e0:	ldr	fp, [sp]
   2f2e4:	add	sp, sp, #4
   2f2e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2f2ec:	str	fp, [sp, #-8]!
   2f2f0:	str	lr, [sp, #4]
   2f2f4:	add	fp, sp, #4
   2f2f8:	sub	sp, sp, #40	; 0x28
   2f2fc:	str	r0, [fp, #-24]	; 0xffffffe8
   2f300:	str	r1, [fp, #-28]	; 0xffffffe4
   2f304:	str	r2, [fp, #-32]	; 0xffffffe0
   2f308:	str	r3, [fp, #-36]	; 0xffffffdc
   2f30c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f310:	ldr	r3, [r3]
   2f314:	str	r3, [fp, #-12]
   2f318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f31c:	ldr	r3, [r3, #24]
   2f320:	add	r1, r3, #1
   2f324:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f328:	str	r1, [r2, #24]
   2f32c:	str	r3, [fp, #-16]
   2f330:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f334:	orr	r3, r3, #8388608	; 0x800000
   2f338:	mov	r2, r3
   2f33c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f344:	bl	2d348 <__assert_fail@plt+0x1c108>
   2f348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f34c:	ldrb	r3, [r3, #4]
   2f350:	cmp	r3, #9
   2f354:	bne	2f364 <__assert_fail@plt+0x1e124>
   2f358:	mov	r3, #0
   2f35c:	str	r3, [fp, #-8]
   2f360:	b	2f420 <__assert_fail@plt+0x1e1e0>
   2f364:	ldr	r3, [fp, #8]
   2f368:	str	r3, [sp, #4]
   2f36c:	ldr	r3, [fp, #4]
   2f370:	str	r3, [sp]
   2f374:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f378:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f37c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f384:	bl	2e4c0 <__assert_fail@plt+0x1d280>
   2f388:	str	r0, [fp, #-8]
   2f38c:	ldr	r3, [fp, #8]
   2f390:	ldr	r3, [r3]
   2f394:	cmp	r3, #0
   2f398:	moveq	r3, #1
   2f39c:	movne	r3, #0
   2f3a0:	uxtb	r3, r3
   2f3a4:	cmp	r3, #0
   2f3a8:	beq	2f3f8 <__assert_fail@plt+0x1e1b8>
   2f3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f3b0:	ldrb	r3, [r3, #4]
   2f3b4:	cmp	r3, #9
   2f3b8:	movne	r3, #1
   2f3bc:	moveq	r3, #0
   2f3c0:	uxtb	r3, r3
   2f3c4:	cmp	r3, #0
   2f3c8:	beq	2f3f8 <__assert_fail@plt+0x1e1b8>
   2f3cc:	ldr	r3, [fp, #-8]
   2f3d0:	cmp	r3, #0
   2f3d4:	beq	2f3ec <__assert_fail@plt+0x1e1ac>
   2f3d8:	mov	r2, #0
   2f3dc:	movw	r1, #8936	; 0x22e8
   2f3e0:	movt	r1, #3
   2f3e4:	ldr	r0, [fp, #-8]
   2f3e8:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2f3ec:	ldr	r3, [fp, #8]
   2f3f0:	mov	r2, #8
   2f3f4:	str	r2, [r3]
   2f3f8:	ldr	r3, [fp, #8]
   2f3fc:	ldr	r3, [r3]
   2f400:	cmp	r3, #0
   2f404:	movne	r3, #1
   2f408:	moveq	r3, #0
   2f40c:	uxtb	r3, r3
   2f410:	cmp	r3, #0
   2f414:	beq	2f420 <__assert_fail@plt+0x1e1e0>
   2f418:	mov	r3, #0
   2f41c:	b	2f4a4 <__assert_fail@plt+0x1e264>
   2f420:	ldr	r3, [fp, #-16]
   2f424:	cmp	r3, #8
   2f428:	bhi	2f44c <__assert_fail@plt+0x1e20c>
   2f42c:	ldr	r3, [fp, #-12]
   2f430:	ldr	r3, [r3, #84]	; 0x54
   2f434:	mov	r1, #1
   2f438:	ldr	r2, [fp, #-16]
   2f43c:	lsl	r2, r1, r2
   2f440:	orr	r2, r3, r2
   2f444:	ldr	r3, [fp, #-12]
   2f448:	str	r2, [r3, #84]	; 0x54
   2f44c:	mov	r3, #17
   2f450:	mov	r2, #0
   2f454:	ldr	r1, [fp, #-8]
   2f458:	ldr	r0, [fp, #-12]
   2f45c:	bl	32000 <__assert_fail@plt+0x20dc0>
   2f460:	str	r0, [fp, #-8]
   2f464:	ldr	r3, [fp, #-8]
   2f468:	cmp	r3, #0
   2f46c:	moveq	r3, #1
   2f470:	movne	r3, #0
   2f474:	uxtb	r3, r3
   2f478:	cmp	r3, #0
   2f47c:	beq	2f494 <__assert_fail@plt+0x1e254>
   2f480:	ldr	r3, [fp, #8]
   2f484:	mov	r2, #12
   2f488:	str	r2, [r3]
   2f48c:	mov	r3, #0
   2f490:	b	2f4a4 <__assert_fail@plt+0x1e264>
   2f494:	ldr	r2, [fp, #-16]
   2f498:	ldr	r3, [fp, #-8]
   2f49c:	str	r2, [r3, #20]
   2f4a0:	ldr	r3, [fp, #-8]
   2f4a4:	mov	r0, r3
   2f4a8:	sub	sp, fp, #4
   2f4ac:	ldr	fp, [sp]
   2f4b0:	add	sp, sp, #4
   2f4b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2f4b8:	str	fp, [sp, #-8]!
   2f4bc:	str	lr, [sp, #4]
   2f4c0:	add	fp, sp, #4
   2f4c4:	sub	sp, sp, #56	; 0x38
   2f4c8:	str	r0, [fp, #-48]	; 0xffffffd0
   2f4cc:	str	r1, [fp, #-52]	; 0xffffffcc
   2f4d0:	str	r2, [fp, #-56]	; 0xffffffc8
   2f4d4:	str	r3, [fp, #-60]	; 0xffffffc4
   2f4d8:	mov	r3, #0
   2f4dc:	str	r3, [fp, #-8]
   2f4e0:	mov	r3, #0
   2f4e4:	str	r3, [fp, #-12]
   2f4e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f4ec:	ldr	r3, [r3, #40]	; 0x28
   2f4f0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f4f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f4f8:	sub	r1, fp, #40	; 0x28
   2f4fc:	ldrd	r2, [r3]
   2f500:	strd	r2, [r1]
   2f504:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f508:	ldrb	r3, [r3, #4]
   2f50c:	cmp	r3, #23
   2f510:	bne	2f790 <__assert_fail@plt+0x1e550>
   2f514:	mov	r3, #0
   2f518:	str	r3, [fp, #-24]	; 0xffffffe8
   2f51c:	ldr	r2, [fp, #4]
   2f520:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f524:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2f528:	bl	31e64 <__assert_fail@plt+0x20c24>
   2f52c:	str	r0, [fp, #-20]	; 0xffffffec
   2f530:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f534:	cmn	r3, #1
   2f538:	bne	2f57c <__assert_fail@plt+0x1e33c>
   2f53c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f540:	ldrb	r3, [r3, #4]
   2f544:	cmp	r3, #1
   2f548:	bne	2f568 <__assert_fail@plt+0x1e328>
   2f54c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f550:	ldrb	r3, [r3]
   2f554:	cmp	r3, #44	; 0x2c
   2f558:	bne	2f568 <__assert_fail@plt+0x1e328>
   2f55c:	mov	r3, #0
   2f560:	str	r3, [fp, #-20]	; 0xffffffec
   2f564:	b	2f57c <__assert_fail@plt+0x1e33c>
   2f568:	ldr	r3, [fp, #8]
   2f56c:	mov	r2, #10
   2f570:	str	r2, [r3]
   2f574:	mov	r3, #0
   2f578:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f57c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f580:	cmn	r3, #2
   2f584:	movne	r3, #1
   2f588:	moveq	r3, #0
   2f58c:	uxtb	r3, r3
   2f590:	cmp	r3, #0
   2f594:	beq	2f5f0 <__assert_fail@plt+0x1e3b0>
   2f598:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f59c:	ldrb	r3, [r3, #4]
   2f5a0:	cmp	r3, #24
   2f5a4:	beq	2f5e8 <__assert_fail@plt+0x1e3a8>
   2f5a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f5ac:	ldrb	r3, [r3, #4]
   2f5b0:	cmp	r3, #1
   2f5b4:	bne	2f5e0 <__assert_fail@plt+0x1e3a0>
   2f5b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f5bc:	ldrb	r3, [r3]
   2f5c0:	cmp	r3, #44	; 0x2c
   2f5c4:	bne	2f5e0 <__assert_fail@plt+0x1e3a0>
   2f5c8:	ldr	r2, [fp, #4]
   2f5cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f5d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2f5d4:	bl	31e64 <__assert_fail@plt+0x20c24>
   2f5d8:	mov	r3, r0
   2f5dc:	b	2f5ec <__assert_fail@plt+0x1e3ac>
   2f5e0:	mvn	r3, #1
   2f5e4:	b	2f5ec <__assert_fail@plt+0x1e3ac>
   2f5e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f5ec:	str	r3, [fp, #-24]	; 0xffffffe8
   2f5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f5f4:	cmn	r3, #2
   2f5f8:	moveq	r3, #1
   2f5fc:	movne	r3, #0
   2f600:	uxtb	r3, r3
   2f604:	cmp	r3, #0
   2f608:	bne	2f628 <__assert_fail@plt+0x1e3e8>
   2f60c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f610:	cmn	r3, #2
   2f614:	moveq	r3, #1
   2f618:	movne	r3, #0
   2f61c:	uxtb	r3, r3
   2f620:	cmp	r3, #0
   2f624:	beq	2f6b0 <__assert_fail@plt+0x1e470>
   2f628:	ldr	r3, [fp, #4]
   2f62c:	and	r3, r3, #2097152	; 0x200000
   2f630:	cmp	r3, #0
   2f634:	moveq	r3, #1
   2f638:	movne	r3, #0
   2f63c:	uxtb	r3, r3
   2f640:	cmp	r3, #0
   2f644:	beq	2f67c <__assert_fail@plt+0x1e43c>
   2f648:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f64c:	ldrb	r3, [r3, #4]
   2f650:	cmp	r3, #2
   2f654:	bne	2f668 <__assert_fail@plt+0x1e428>
   2f658:	ldr	r3, [fp, #8]
   2f65c:	mov	r2, #9
   2f660:	str	r2, [r3]
   2f664:	b	2f674 <__assert_fail@plt+0x1e434>
   2f668:	ldr	r3, [fp, #8]
   2f66c:	mov	r2, #10
   2f670:	str	r2, [r3]
   2f674:	mov	r3, #0
   2f678:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f67c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f680:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f684:	str	r2, [r3, #40]	; 0x28
   2f688:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f68c:	mov	r1, r3
   2f690:	sub	r3, fp, #40	; 0x28
   2f694:	ldrd	r2, [r3]
   2f698:	strd	r2, [r1]
   2f69c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f6a0:	mov	r2, #1
   2f6a4:	strb	r2, [r3, #4]
   2f6a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f6ac:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f6b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f6b4:	cmn	r3, #1
   2f6b8:	movne	r3, #1
   2f6bc:	moveq	r3, #0
   2f6c0:	uxtb	r3, r3
   2f6c4:	cmp	r3, #0
   2f6c8:	beq	2f6f4 <__assert_fail@plt+0x1e4b4>
   2f6cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f6d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f6d4:	cmp	r2, r3
   2f6d8:	movgt	r3, #1
   2f6dc:	movle	r3, #0
   2f6e0:	uxtb	r3, r3
   2f6e4:	cmp	r3, #0
   2f6e8:	beq	2f6f4 <__assert_fail@plt+0x1e4b4>
   2f6ec:	mov	r3, #1
   2f6f0:	b	2f6f8 <__assert_fail@plt+0x1e4b8>
   2f6f4:	mov	r3, #0
   2f6f8:	cmp	r3, #0
   2f6fc:	bne	2f720 <__assert_fail@plt+0x1e4e0>
   2f700:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f704:	ldrb	r3, [r3, #4]
   2f708:	cmp	r3, #24
   2f70c:	movne	r3, #1
   2f710:	moveq	r3, #0
   2f714:	uxtb	r3, r3
   2f718:	cmp	r3, #0
   2f71c:	beq	2f734 <__assert_fail@plt+0x1e4f4>
   2f720:	ldr	r3, [fp, #8]
   2f724:	mov	r2, #10
   2f728:	str	r2, [r3]
   2f72c:	mov	r3, #0
   2f730:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f734:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f738:	cmn	r3, #1
   2f73c:	bne	2f75c <__assert_fail@plt+0x1e51c>
   2f740:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f744:	movw	r2, #32767	; 0x7fff
   2f748:	cmp	r3, r2
   2f74c:	movgt	r3, #1
   2f750:	movle	r3, #0
   2f754:	uxtb	r3, r3
   2f758:	b	2f774 <__assert_fail@plt+0x1e534>
   2f75c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f760:	movw	r2, #32767	; 0x7fff
   2f764:	cmp	r3, r2
   2f768:	movgt	r3, #1
   2f76c:	movle	r3, #0
   2f770:	uxtb	r3, r3
   2f774:	cmp	r3, #0
   2f778:	beq	2f7cc <__assert_fail@plt+0x1e58c>
   2f77c:	ldr	r3, [fp, #8]
   2f780:	mov	r2, #15
   2f784:	str	r2, [r3]
   2f788:	mov	r3, #0
   2f78c:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f790:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f794:	ldrb	r3, [r3, #4]
   2f798:	cmp	r3, #18
   2f79c:	moveq	r3, #1
   2f7a0:	movne	r3, #0
   2f7a4:	uxtb	r3, r3
   2f7a8:	str	r3, [fp, #-20]	; 0xffffffec
   2f7ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f7b0:	ldrb	r3, [r3, #4]
   2f7b4:	cmp	r3, #19
   2f7b8:	bne	2f7c4 <__assert_fail@plt+0x1e584>
   2f7bc:	mov	r3, #1
   2f7c0:	b	2f7c8 <__assert_fail@plt+0x1e588>
   2f7c4:	mvn	r3, #0
   2f7c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2f7cc:	ldr	r2, [fp, #4]
   2f7d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f7d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f7d8:	bl	2d348 <__assert_fail@plt+0x1c108>
   2f7dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f7e0:	cmp	r3, #0
   2f7e4:	moveq	r3, #1
   2f7e8:	movne	r3, #0
   2f7ec:	uxtb	r3, r3
   2f7f0:	cmp	r3, #0
   2f7f4:	beq	2f800 <__assert_fail@plt+0x1e5c0>
   2f7f8:	mov	r3, #0
   2f7fc:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f800:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f804:	cmp	r3, #0
   2f808:	moveq	r3, #1
   2f80c:	movne	r3, #0
   2f810:	uxtb	r3, r3
   2f814:	cmp	r3, #0
   2f818:	beq	2f854 <__assert_fail@plt+0x1e614>
   2f81c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f820:	cmp	r3, #0
   2f824:	moveq	r3, #1
   2f828:	movne	r3, #0
   2f82c:	uxtb	r3, r3
   2f830:	cmp	r3, #0
   2f834:	beq	2f854 <__assert_fail@plt+0x1e614>
   2f838:	mov	r2, #0
   2f83c:	movw	r1, #8936	; 0x22e8
   2f840:	movt	r1, #3
   2f844:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f848:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2f84c:	mov	r3, #0
   2f850:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f854:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f858:	cmp	r3, #0
   2f85c:	movgt	r3, #1
   2f860:	movle	r3, #0
   2f864:	uxtb	r3, r3
   2f868:	cmp	r3, #0
   2f86c:	beq	2f950 <__assert_fail@plt+0x1e710>
   2f870:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f874:	str	r3, [fp, #-8]
   2f878:	mov	r3, #2
   2f87c:	str	r3, [fp, #-16]
   2f880:	b	2f8f0 <__assert_fail@plt+0x1e6b0>
   2f884:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2f888:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f88c:	bl	32328 <__assert_fail@plt+0x210e8>
   2f890:	str	r0, [fp, #-48]	; 0xffffffd0
   2f894:	mov	r3, #16
   2f898:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f89c:	ldr	r1, [fp, #-8]
   2f8a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f8a4:	bl	32000 <__assert_fail@plt+0x20dc0>
   2f8a8:	str	r0, [fp, #-8]
   2f8ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f8b0:	cmp	r3, #0
   2f8b4:	moveq	r3, #1
   2f8b8:	movne	r3, #0
   2f8bc:	uxtb	r3, r3
   2f8c0:	cmp	r3, #0
   2f8c4:	bne	2fac0 <__assert_fail@plt+0x1e880>
   2f8c8:	ldr	r3, [fp, #-8]
   2f8cc:	cmp	r3, #0
   2f8d0:	moveq	r3, #1
   2f8d4:	movne	r3, #0
   2f8d8:	uxtb	r3, r3
   2f8dc:	cmp	r3, #0
   2f8e0:	bne	2fac0 <__assert_fail@plt+0x1e880>
   2f8e4:	ldr	r3, [fp, #-16]
   2f8e8:	add	r3, r3, #1
   2f8ec:	str	r3, [fp, #-16]
   2f8f0:	ldr	r2, [fp, #-16]
   2f8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f8f8:	cmp	r2, r3
   2f8fc:	ble	2f884 <__assert_fail@plt+0x1e644>
   2f900:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f904:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f908:	cmp	r2, r3
   2f90c:	bne	2f918 <__assert_fail@plt+0x1e6d8>
   2f910:	ldr	r3, [fp, #-8]
   2f914:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2f918:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2f91c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f920:	bl	32328 <__assert_fail@plt+0x210e8>
   2f924:	str	r0, [fp, #-48]	; 0xffffffd0
   2f928:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f92c:	cmp	r3, #0
   2f930:	moveq	r3, #1
   2f934:	movne	r3, #0
   2f938:	uxtb	r3, r3
   2f93c:	cmp	r3, #0
   2f940:	bne	2fac8 <__assert_fail@plt+0x1e888>
   2f944:	ldr	r3, [fp, #-8]
   2f948:	str	r3, [fp, #-12]
   2f94c:	b	2f958 <__assert_fail@plt+0x1e718>
   2f950:	mov	r3, #0
   2f954:	str	r3, [fp, #-12]
   2f958:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f95c:	ldrb	r3, [r3, #24]
   2f960:	cmp	r3, #17
   2f964:	bne	2f98c <__assert_fail@plt+0x1e74c>
   2f968:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f96c:	ldr	r3, [r3, #20]
   2f970:	str	r3, [fp, #-32]	; 0xffffffe0
   2f974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f978:	mov	r2, r3
   2f97c:	movw	r1, #8680	; 0x21e8
   2f980:	movt	r1, #3
   2f984:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f988:	bl	2b8a8 <__assert_fail@plt+0x1a668>
   2f98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f990:	cmn	r3, #1
   2f994:	bne	2f9a0 <__assert_fail@plt+0x1e760>
   2f998:	mov	r3, #11
   2f99c:	b	2f9a4 <__assert_fail@plt+0x1e764>
   2f9a0:	mov	r3, #10
   2f9a4:	mov	r2, #0
   2f9a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2f9ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f9b0:	bl	32000 <__assert_fail@plt+0x20dc0>
   2f9b4:	str	r0, [fp, #-8]
   2f9b8:	ldr	r3, [fp, #-8]
   2f9bc:	cmp	r3, #0
   2f9c0:	moveq	r3, #1
   2f9c4:	movne	r3, #0
   2f9c8:	uxtb	r3, r3
   2f9cc:	cmp	r3, #0
   2f9d0:	bne	2fad0 <__assert_fail@plt+0x1e890>
   2f9d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f9d8:	add	r3, r3, #2
   2f9dc:	str	r3, [fp, #-16]
   2f9e0:	b	2fa84 <__assert_fail@plt+0x1e844>
   2f9e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2f9e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f9ec:	bl	32328 <__assert_fail@plt+0x210e8>
   2f9f0:	str	r0, [fp, #-48]	; 0xffffffd0
   2f9f4:	mov	r3, #16
   2f9f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f9fc:	ldr	r1, [fp, #-8]
   2fa00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2fa04:	bl	32000 <__assert_fail@plt+0x20dc0>
   2fa08:	str	r0, [fp, #-8]
   2fa0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fa10:	cmp	r3, #0
   2fa14:	moveq	r3, #1
   2fa18:	movne	r3, #0
   2fa1c:	uxtb	r3, r3
   2fa20:	cmp	r3, #0
   2fa24:	bne	2fad8 <__assert_fail@plt+0x1e898>
   2fa28:	ldr	r3, [fp, #-8]
   2fa2c:	cmp	r3, #0
   2fa30:	moveq	r3, #1
   2fa34:	movne	r3, #0
   2fa38:	uxtb	r3, r3
   2fa3c:	cmp	r3, #0
   2fa40:	bne	2fad8 <__assert_fail@plt+0x1e898>
   2fa44:	mov	r3, #10
   2fa48:	mov	r2, #0
   2fa4c:	ldr	r1, [fp, #-8]
   2fa50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2fa54:	bl	32000 <__assert_fail@plt+0x20dc0>
   2fa58:	str	r0, [fp, #-8]
   2fa5c:	ldr	r3, [fp, #-8]
   2fa60:	cmp	r3, #0
   2fa64:	moveq	r3, #1
   2fa68:	movne	r3, #0
   2fa6c:	uxtb	r3, r3
   2fa70:	cmp	r3, #0
   2fa74:	bne	2fae0 <__assert_fail@plt+0x1e8a0>
   2fa78:	ldr	r3, [fp, #-16]
   2fa7c:	add	r3, r3, #1
   2fa80:	str	r3, [fp, #-16]
   2fa84:	ldr	r2, [fp, #-16]
   2fa88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fa8c:	cmp	r2, r3
   2fa90:	ble	2f9e4 <__assert_fail@plt+0x1e7a4>
   2fa94:	ldr	r3, [fp, #-12]
   2fa98:	cmp	r3, #0
   2fa9c:	beq	2fab8 <__assert_fail@plt+0x1e878>
   2faa0:	mov	r3, #16
   2faa4:	ldr	r2, [fp, #-8]
   2faa8:	ldr	r1, [fp, #-12]
   2faac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2fab0:	bl	32000 <__assert_fail@plt+0x20dc0>
   2fab4:	str	r0, [fp, #-8]
   2fab8:	ldr	r3, [fp, #-8]
   2fabc:	b	2faf4 <__assert_fail@plt+0x1e8b4>
   2fac0:	nop	{0}
   2fac4:	b	2fae4 <__assert_fail@plt+0x1e8a4>
   2fac8:	nop	{0}
   2facc:	b	2fae4 <__assert_fail@plt+0x1e8a4>
   2fad0:	nop	{0}
   2fad4:	b	2fae4 <__assert_fail@plt+0x1e8a4>
   2fad8:	nop	{0}
   2fadc:	b	2fae4 <__assert_fail@plt+0x1e8a4>
   2fae0:	nop	{0}
   2fae4:	ldr	r3, [fp, #8]
   2fae8:	mov	r2, #12
   2faec:	str	r2, [r3]
   2faf0:	mov	r3, #0
   2faf4:	mov	r0, r3
   2faf8:	sub	sp, fp, #4
   2fafc:	ldr	fp, [sp]
   2fb00:	add	sp, sp, #4
   2fb04:	pop	{pc}		; (ldr pc, [sp], #4)
   2fb08:	str	fp, [sp, #-8]!
   2fb0c:	str	lr, [sp, #4]
   2fb10:	add	fp, sp, #4
   2fb14:	sub	sp, sp, #8
   2fb18:	mov	r3, r0
   2fb1c:	str	r1, [fp, #-12]
   2fb20:	strb	r3, [fp, #-5]
   2fb24:	ldr	r3, [fp, #-12]
   2fb28:	ldr	r3, [r3, #92]	; 0x5c
   2fb2c:	cmp	r3, #1
   2fb30:	ble	2fb48 <__assert_fail@plt+0x1e908>
   2fb34:	ldrb	r3, [fp, #-5]
   2fb38:	mov	r0, r3
   2fb3c:	bl	11198 <btowc@plt>
   2fb40:	mov	r3, r0
   2fb44:	b	2fb4c <__assert_fail@plt+0x1e90c>
   2fb48:	ldrb	r3, [fp, #-5]
   2fb4c:	mov	r0, r3
   2fb50:	sub	sp, fp, #4
   2fb54:	ldr	fp, [sp]
   2fb58:	add	sp, sp, #4
   2fb5c:	pop	{pc}		; (ldr pc, [sp], #4)
   2fb60:	str	fp, [sp, #-8]!
   2fb64:	str	lr, [sp, #4]
   2fb68:	add	fp, sp, #4
   2fb6c:	sub	sp, sp, #48	; 0x30
   2fb70:	str	r0, [fp, #-40]	; 0xffffffd8
   2fb74:	str	r1, [fp, #-44]	; 0xffffffd4
   2fb78:	str	r2, [fp, #-48]	; 0xffffffd0
   2fb7c:	str	r3, [fp, #-52]	; 0xffffffcc
   2fb80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fb84:	ldr	r3, [r3]
   2fb88:	cmp	r3, #2
   2fb8c:	moveq	r3, #1
   2fb90:	movne	r3, #0
   2fb94:	uxtb	r3, r3
   2fb98:	cmp	r3, #0
   2fb9c:	bne	2fbc0 <__assert_fail@plt+0x1e980>
   2fba0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fba4:	ldr	r3, [r3]
   2fba8:	cmp	r3, #4
   2fbac:	moveq	r3, #1
   2fbb0:	movne	r3, #0
   2fbb4:	uxtb	r3, r3
   2fbb8:	cmp	r3, #0
   2fbbc:	beq	2fbc8 <__assert_fail@plt+0x1e988>
   2fbc0:	mov	r3, #1
   2fbc4:	b	2fbcc <__assert_fail@plt+0x1e98c>
   2fbc8:	mov	r3, #0
   2fbcc:	cmp	r3, #0
   2fbd0:	bne	2fbf4 <__assert_fail@plt+0x1e9b4>
   2fbd4:	ldr	r3, [fp, #4]
   2fbd8:	ldr	r3, [r3]
   2fbdc:	cmp	r3, #2
   2fbe0:	moveq	r3, #1
   2fbe4:	movne	r3, #0
   2fbe8:	uxtb	r3, r3
   2fbec:	cmp	r3, #0
   2fbf0:	beq	2fbfc <__assert_fail@plt+0x1e9bc>
   2fbf4:	mov	r3, #1
   2fbf8:	b	2fc00 <__assert_fail@plt+0x1e9c0>
   2fbfc:	mov	r3, #0
   2fc00:	cmp	r3, #0
   2fc04:	bne	2fc28 <__assert_fail@plt+0x1e9e8>
   2fc08:	ldr	r3, [fp, #4]
   2fc0c:	ldr	r3, [r3]
   2fc10:	cmp	r3, #4
   2fc14:	moveq	r3, #1
   2fc18:	movne	r3, #0
   2fc1c:	uxtb	r3, r3
   2fc20:	cmp	r3, #0
   2fc24:	beq	2fc30 <__assert_fail@plt+0x1e9f0>
   2fc28:	mov	r3, #11
   2fc2c:	b	3001c <__assert_fail@plt+0x1eddc>
   2fc30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fc34:	ldr	r3, [r3]
   2fc38:	cmp	r3, #3
   2fc3c:	moveq	r3, #1
   2fc40:	movne	r3, #0
   2fc44:	uxtb	r3, r3
   2fc48:	cmp	r3, #0
   2fc4c:	beq	2fc84 <__assert_fail@plt+0x1ea44>
   2fc50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fc54:	ldr	r3, [r3, #4]
   2fc58:	mov	r0, r3
   2fc5c:	bl	11144 <strlen@plt>
   2fc60:	mov	r3, r0
   2fc64:	cmp	r3, #1
   2fc68:	movhi	r3, #1
   2fc6c:	movls	r3, #0
   2fc70:	uxtb	r3, r3
   2fc74:	cmp	r3, #0
   2fc78:	beq	2fc84 <__assert_fail@plt+0x1ea44>
   2fc7c:	mov	r3, #1
   2fc80:	b	2fc88 <__assert_fail@plt+0x1ea48>
   2fc84:	mov	r3, #0
   2fc88:	cmp	r3, #0
   2fc8c:	bne	2fcf0 <__assert_fail@plt+0x1eab0>
   2fc90:	ldr	r3, [fp, #4]
   2fc94:	ldr	r3, [r3]
   2fc98:	cmp	r3, #3
   2fc9c:	moveq	r3, #1
   2fca0:	movne	r3, #0
   2fca4:	uxtb	r3, r3
   2fca8:	cmp	r3, #0
   2fcac:	beq	2fce4 <__assert_fail@plt+0x1eaa4>
   2fcb0:	ldr	r3, [fp, #4]
   2fcb4:	ldr	r3, [r3, #4]
   2fcb8:	mov	r0, r3
   2fcbc:	bl	11144 <strlen@plt>
   2fcc0:	mov	r3, r0
   2fcc4:	cmp	r3, #1
   2fcc8:	movhi	r3, #1
   2fccc:	movls	r3, #0
   2fcd0:	uxtb	r3, r3
   2fcd4:	cmp	r3, #0
   2fcd8:	beq	2fce4 <__assert_fail@plt+0x1eaa4>
   2fcdc:	mov	r3, #1
   2fce0:	b	2fce8 <__assert_fail@plt+0x1eaa8>
   2fce4:	mov	r3, #0
   2fce8:	cmp	r3, #0
   2fcec:	beq	2fcf8 <__assert_fail@plt+0x1eab8>
   2fcf0:	mov	r3, #3
   2fcf4:	b	3001c <__assert_fail@plt+0x1eddc>
   2fcf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fcfc:	ldr	r3, [r3]
   2fd00:	cmp	r3, #0
   2fd04:	bne	2fd14 <__assert_fail@plt+0x1ead4>
   2fd08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fd0c:	ldrb	r3, [r3, #4]
   2fd10:	b	2fd38 <__assert_fail@plt+0x1eaf8>
   2fd14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fd18:	ldr	r3, [r3]
   2fd1c:	cmp	r3, #3
   2fd20:	bne	2fd34 <__assert_fail@plt+0x1eaf4>
   2fd24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fd28:	ldr	r3, [r3, #4]
   2fd2c:	ldrb	r3, [r3]
   2fd30:	b	2fd38 <__assert_fail@plt+0x1eaf8>
   2fd34:	mov	r3, #0
   2fd38:	str	r3, [fp, #-12]
   2fd3c:	ldr	r3, [fp, #4]
   2fd40:	ldr	r3, [r3]
   2fd44:	cmp	r3, #0
   2fd48:	bne	2fd58 <__assert_fail@plt+0x1eb18>
   2fd4c:	ldr	r3, [fp, #4]
   2fd50:	ldrb	r3, [r3, #4]
   2fd54:	b	2fd7c <__assert_fail@plt+0x1eb3c>
   2fd58:	ldr	r3, [fp, #4]
   2fd5c:	ldr	r3, [r3]
   2fd60:	cmp	r3, #3
   2fd64:	bne	2fd78 <__assert_fail@plt+0x1eb38>
   2fd68:	ldr	r3, [fp, #4]
   2fd6c:	ldr	r3, [r3, #4]
   2fd70:	ldrb	r3, [r3]
   2fd74:	b	2fd7c <__assert_fail@plt+0x1eb3c>
   2fd78:	mov	r3, #0
   2fd7c:	str	r3, [fp, #-16]
   2fd80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fd84:	ldr	r3, [r3]
   2fd88:	cmp	r3, #0
   2fd8c:	beq	2fda0 <__assert_fail@plt+0x1eb60>
   2fd90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fd94:	ldr	r3, [r3]
   2fd98:	cmp	r3, #3
   2fd9c:	bne	2fdbc <__assert_fail@plt+0x1eb7c>
   2fda0:	ldr	r3, [fp, #-12]
   2fda4:	uxtb	r3, r3
   2fda8:	ldr	r1, [fp, #8]
   2fdac:	mov	r0, r3
   2fdb0:	bl	2fb08 <__assert_fail@plt+0x1e8c8>
   2fdb4:	mov	r3, r0
   2fdb8:	b	2fdc4 <__assert_fail@plt+0x1eb84>
   2fdbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2fdc0:	ldr	r3, [r3, #4]
   2fdc4:	str	r3, [fp, #-20]	; 0xffffffec
   2fdc8:	ldr	r3, [fp, #4]
   2fdcc:	ldr	r3, [r3]
   2fdd0:	cmp	r3, #0
   2fdd4:	beq	2fde8 <__assert_fail@plt+0x1eba8>
   2fdd8:	ldr	r3, [fp, #4]
   2fddc:	ldr	r3, [r3]
   2fde0:	cmp	r3, #3
   2fde4:	bne	2fe04 <__assert_fail@plt+0x1ebc4>
   2fde8:	ldr	r3, [fp, #-16]
   2fdec:	uxtb	r3, r3
   2fdf0:	ldr	r1, [fp, #8]
   2fdf4:	mov	r0, r3
   2fdf8:	bl	2fb08 <__assert_fail@plt+0x1e8c8>
   2fdfc:	mov	r3, r0
   2fe00:	b	2fe0c <__assert_fail@plt+0x1ebcc>
   2fe04:	ldr	r3, [fp, #4]
   2fe08:	ldr	r3, [r3, #4]
   2fe0c:	str	r3, [fp, #-24]	; 0xffffffe8
   2fe10:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe14:	cmn	r3, #1
   2fe18:	beq	2fe28 <__assert_fail@plt+0x1ebe8>
   2fe1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe20:	cmn	r3, #1
   2fe24:	bne	2fe30 <__assert_fail@plt+0x1ebf0>
   2fe28:	mov	r3, #3
   2fe2c:	b	3001c <__assert_fail@plt+0x1eddc>
   2fe30:	ldr	r3, [fp, #12]
   2fe34:	and	r3, r3, #65536	; 0x10000
   2fe38:	cmp	r3, #0
   2fe3c:	movne	r3, #1
   2fe40:	moveq	r3, #0
   2fe44:	uxtb	r3, r3
   2fe48:	cmp	r3, #0
   2fe4c:	beq	2fe78 <__assert_fail@plt+0x1ec38>
   2fe50:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fe54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe58:	cmp	r2, r3
   2fe5c:	movhi	r3, #1
   2fe60:	movls	r3, #0
   2fe64:	uxtb	r3, r3
   2fe68:	cmp	r3, #0
   2fe6c:	beq	2fe78 <__assert_fail@plt+0x1ec38>
   2fe70:	mov	r3, #11
   2fe74:	b	3001c <__assert_fail@plt+0x1eddc>
   2fe78:	ldr	r3, [fp, #8]
   2fe7c:	ldr	r3, [r3, #92]	; 0x5c
   2fe80:	cmp	r3, #1
   2fe84:	ble	2ffc4 <__assert_fail@plt+0x1ed84>
   2fe88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fe8c:	ldr	r2, [r3]
   2fe90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fe94:	ldr	r3, [r3, #32]
   2fe98:	cmp	r2, r3
   2fe9c:	moveq	r3, #1
   2fea0:	movne	r3, #0
   2fea4:	uxtb	r3, r3
   2fea8:	cmp	r3, #0
   2feac:	beq	2ff78 <__assert_fail@plt+0x1ed38>
   2feb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2feb4:	ldr	r3, [r3, #32]
   2feb8:	lsl	r3, r3, #1
   2febc:	add	r3, r3, #1
   2fec0:	str	r3, [fp, #-28]	; 0xffffffe4
   2fec4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fec8:	ldr	r2, [r3, #4]
   2fecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fed0:	lsl	r3, r3, #2
   2fed4:	mov	r1, r3
   2fed8:	mov	r0, r2
   2fedc:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   2fee0:	str	r0, [fp, #-32]	; 0xffffffe0
   2fee4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fee8:	ldr	r2, [r3, #8]
   2feec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fef0:	lsl	r3, r3, #2
   2fef4:	mov	r1, r3
   2fef8:	mov	r0, r2
   2fefc:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   2ff00:	str	r0, [fp, #-36]	; 0xffffffdc
   2ff04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ff08:	cmp	r3, #0
   2ff0c:	moveq	r3, #1
   2ff10:	movne	r3, #0
   2ff14:	uxtb	r3, r3
   2ff18:	cmp	r3, #0
   2ff1c:	bne	2ff3c <__assert_fail@plt+0x1ecfc>
   2ff20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ff24:	cmp	r3, #0
   2ff28:	moveq	r3, #1
   2ff2c:	movne	r3, #0
   2ff30:	uxtb	r3, r3
   2ff34:	cmp	r3, #0
   2ff38:	beq	2ff54 <__assert_fail@plt+0x1ed14>
   2ff3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ff40:	bl	13798 <__assert_fail@plt+0x2558>
   2ff44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ff48:	bl	13798 <__assert_fail@plt+0x2558>
   2ff4c:	mov	r3, #12
   2ff50:	b	3001c <__assert_fail@plt+0x1eddc>
   2ff54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ff58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ff5c:	str	r2, [r3, #4]
   2ff60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ff64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ff68:	str	r2, [r3, #8]
   2ff6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ff70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ff74:	str	r2, [r3]
   2ff78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ff7c:	ldr	r2, [r3, #4]
   2ff80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ff84:	ldr	r3, [r3, #32]
   2ff88:	lsl	r3, r3, #2
   2ff8c:	add	r3, r2, r3
   2ff90:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ff94:	str	r2, [r3]
   2ff98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ff9c:	ldr	r2, [r3, #8]
   2ffa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ffa4:	ldr	r3, [r3, #32]
   2ffa8:	add	r0, r3, #1
   2ffac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ffb0:	str	r0, [r1, #32]
   2ffb4:	lsl	r3, r3, #2
   2ffb8:	add	r3, r2, r3
   2ffbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ffc0:	str	r2, [r3]
   2ffc4:	mov	r3, #0
   2ffc8:	str	r3, [fp, #-8]
   2ffcc:	b	3000c <__assert_fail@plt+0x1edcc>
   2ffd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ffd4:	ldr	r3, [fp, #-8]
   2ffd8:	cmp	r2, r3
   2ffdc:	bhi	30000 <__assert_fail@plt+0x1edc0>
   2ffe0:	ldr	r2, [fp, #-8]
   2ffe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ffe8:	cmp	r2, r3
   2ffec:	bhi	30000 <__assert_fail@plt+0x1edc0>
   2fff0:	ldr	r3, [fp, #-8]
   2fff4:	mov	r1, r3
   2fff8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2fffc:	bl	23c60 <__assert_fail@plt+0x12a20>
   30000:	ldr	r3, [fp, #-8]
   30004:	add	r3, r3, #1
   30008:	str	r3, [fp, #-8]
   3000c:	ldr	r3, [fp, #-8]
   30010:	cmp	r3, #255	; 0xff
   30014:	bls	2ffd0 <__assert_fail@plt+0x1ed90>
   30018:	mov	r3, #0
   3001c:	mov	r0, r3
   30020:	sub	sp, fp, #4
   30024:	ldr	fp, [sp]
   30028:	add	sp, sp, #4
   3002c:	pop	{pc}		; (ldr pc, [sp], #4)
   30030:	str	fp, [sp, #-8]!
   30034:	str	lr, [sp, #4]
   30038:	add	fp, sp, #4
   3003c:	sub	sp, sp, #24
   30040:	str	r0, [fp, #-16]
   30044:	str	r1, [fp, #-20]	; 0xffffffec
   30048:	str	r2, [fp, #-24]	; 0xffffffe8
   3004c:	str	r3, [fp, #-28]	; 0xffffffe4
   30050:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30054:	bl	11144 <strlen@plt>
   30058:	str	r0, [fp, #-8]
   3005c:	ldr	r3, [fp, #-8]
   30060:	cmp	r3, #1
   30064:	movne	r3, #1
   30068:	moveq	r3, #0
   3006c:	uxtb	r3, r3
   30070:	cmp	r3, #0
   30074:	beq	30080 <__assert_fail@plt+0x1ee40>
   30078:	mov	r3, #3
   3007c:	b	30098 <__assert_fail@plt+0x1ee58>
   30080:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30084:	ldrb	r3, [r3]
   30088:	mov	r1, r3
   3008c:	ldr	r0, [fp, #-16]
   30090:	bl	23c60 <__assert_fail@plt+0x12a20>
   30094:	mov	r3, #0
   30098:	mov	r0, r3
   3009c:	sub	sp, fp, #4
   300a0:	ldr	fp, [sp]
   300a4:	add	sp, sp, #4
   300a8:	pop	{pc}		; (ldr pc, [sp], #4)
   300ac:	str	fp, [sp, #-8]!
   300b0:	str	lr, [sp, #4]
   300b4:	add	fp, sp, #4
   300b8:	sub	sp, sp, #248	; 0xf8
   300bc:	str	r0, [fp, #-200]	; 0xffffff38
   300c0:	str	r1, [fp, #-204]	; 0xffffff34
   300c4:	str	r2, [fp, #-208]	; 0xffffff30
   300c8:	str	r3, [fp, #-212]	; 0xffffff2c
   300cc:	mov	r3, #0
   300d0:	str	r3, [fp, #-40]	; 0xffffffd8
   300d4:	mov	r3, #0
   300d8:	str	r3, [fp, #-44]	; 0xffffffd4
   300dc:	mov	r3, #0
   300e0:	str	r3, [fp, #-48]	; 0xffffffd0
   300e4:	mov	r3, #0
   300e8:	str	r3, [fp, #-52]	; 0xffffffcc
   300ec:	mov	r3, #0
   300f0:	str	r3, [fp, #-56]	; 0xffffffc8
   300f4:	mov	r3, #0
   300f8:	str	r3, [fp, #-60]	; 0xffffffc4
   300fc:	mov	r3, #0
   30100:	str	r3, [fp, #-92]	; 0xffffffa4
   30104:	mov	r3, #0
   30108:	str	r3, [fp, #-96]	; 0xffffffa0
   3010c:	mov	r3, #0
   30110:	str	r3, [fp, #-8]
   30114:	mov	r3, #0
   30118:	str	r3, [fp, #-100]	; 0xffffff9c
   3011c:	mov	r3, #0
   30120:	str	r3, [fp, #-104]	; 0xffffff98
   30124:	mov	r3, #0
   30128:	strb	r3, [fp, #-9]
   3012c:	mov	r3, #1
   30130:	strb	r3, [fp, #-21]	; 0xffffffeb
   30134:	mov	r1, #1
   30138:	mov	r0, #32
   3013c:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   30140:	mov	r3, r0
   30144:	str	r3, [fp, #-64]	; 0xffffffc0
   30148:	mov	r1, #1
   3014c:	mov	r0, #40	; 0x28
   30150:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   30154:	mov	r3, r0
   30158:	str	r3, [fp, #-68]	; 0xffffffbc
   3015c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   30160:	cmp	r3, #0
   30164:	moveq	r3, #1
   30168:	movne	r3, #0
   3016c:	uxtb	r3, r3
   30170:	cmp	r3, #0
   30174:	bne	30194 <__assert_fail@plt+0x1ef54>
   30178:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3017c:	cmp	r3, #0
   30180:	moveq	r3, #1
   30184:	movne	r3, #0
   30188:	uxtb	r3, r3
   3018c:	cmp	r3, #0
   30190:	beq	301b8 <__assert_fail@plt+0x1ef78>
   30194:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30198:	bl	13798 <__assert_fail@plt+0x2558>
   3019c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   301a0:	bl	13798 <__assert_fail@plt+0x2558>
   301a4:	ldr	r3, [fp, #4]
   301a8:	mov	r2, #12
   301ac:	str	r2, [r3]
   301b0:	mov	r3, #0
   301b4:	b	30a40 <__assert_fail@plt+0x1f800>
   301b8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   301bc:	ldr	r1, [fp, #-200]	; 0xffffff38
   301c0:	ldr	r0, [fp, #-208]	; 0xffffff30
   301c4:	bl	2e0a8 <__assert_fail@plt+0x1ce68>
   301c8:	str	r0, [fp, #-20]	; 0xffffffec
   301cc:	ldr	r3, [fp, #-208]	; 0xffffff30
   301d0:	ldrb	r3, [r3, #4]
   301d4:	cmp	r3, #2
   301d8:	moveq	r3, #1
   301dc:	movne	r3, #0
   301e0:	uxtb	r3, r3
   301e4:	cmp	r3, #0
   301e8:	beq	301fc <__assert_fail@plt+0x1efbc>
   301ec:	ldr	r3, [fp, #4]
   301f0:	mov	r2, #2
   301f4:	str	r2, [r3]
   301f8:	b	30a2c <__assert_fail@plt+0x1f7ec>
   301fc:	ldr	r3, [fp, #-208]	; 0xffffff30
   30200:	ldrb	r3, [r3, #4]
   30204:	cmp	r3, #25
   30208:	bne	3029c <__assert_fail@plt+0x1f05c>
   3020c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   30210:	ldrb	r3, [r2, #16]
   30214:	orr	r3, r3, #1
   30218:	strb	r3, [r2, #16]
   3021c:	mov	r3, #1
   30220:	strb	r3, [fp, #-9]
   30224:	ldr	r3, [fp, #-212]	; 0xffffff2c
   30228:	and	r3, r3, #256	; 0x100
   3022c:	cmp	r3, #0
   30230:	beq	30240 <__assert_fail@plt+0x1f000>
   30234:	mov	r1, #10
   30238:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3023c:	bl	23c60 <__assert_fail@plt+0x12a20>
   30240:	ldr	r3, [fp, #-200]	; 0xffffff38
   30244:	ldr	r2, [r3, #40]	; 0x28
   30248:	ldr	r3, [fp, #-20]	; 0xffffffec
   3024c:	add	r2, r2, r3
   30250:	ldr	r3, [fp, #-200]	; 0xffffff38
   30254:	str	r2, [r3, #40]	; 0x28
   30258:	ldr	r2, [fp, #-212]	; 0xffffff2c
   3025c:	ldr	r1, [fp, #-200]	; 0xffffff38
   30260:	ldr	r0, [fp, #-208]	; 0xffffff30
   30264:	bl	2e0a8 <__assert_fail@plt+0x1ce68>
   30268:	str	r0, [fp, #-20]	; 0xffffffec
   3026c:	ldr	r3, [fp, #-208]	; 0xffffff30
   30270:	ldrb	r3, [r3, #4]
   30274:	cmp	r3, #2
   30278:	moveq	r3, #1
   3027c:	movne	r3, #0
   30280:	uxtb	r3, r3
   30284:	cmp	r3, #0
   30288:	beq	3029c <__assert_fail@plt+0x1f05c>
   3028c:	ldr	r3, [fp, #4]
   30290:	mov	r2, #2
   30294:	str	r2, [r3]
   30298:	b	30a2c <__assert_fail@plt+0x1f7ec>
   3029c:	ldr	r3, [fp, #-208]	; 0xffffff30
   302a0:	ldrb	r3, [r3, #4]
   302a4:	cmp	r3, #21
   302a8:	bne	302b8 <__assert_fail@plt+0x1f078>
   302ac:	ldr	r3, [fp, #-208]	; 0xffffff30
   302b0:	mov	r2, #1
   302b4:	strb	r2, [r3, #4]
   302b8:	mov	r3, #0
   302bc:	str	r3, [fp, #-28]	; 0xffffffe4
   302c0:	mov	r3, #0
   302c4:	strb	r3, [fp, #-29]	; 0xffffffe3
   302c8:	sub	r3, fp, #192	; 0xc0
   302cc:	str	r3, [fp, #-108]	; 0xffffff94
   302d0:	mov	r3, #3
   302d4:	str	r3, [fp, #-112]	; 0xffffff90
   302d8:	sub	r0, fp, #112	; 0x70
   302dc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   302e0:	str	r3, [sp, #8]
   302e4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   302e8:	str	r3, [sp, #4]
   302ec:	ldr	r3, [fp, #-204]	; 0xffffff34
   302f0:	str	r3, [sp]
   302f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   302f8:	ldr	r2, [fp, #-208]	; 0xffffff30
   302fc:	ldr	r1, [fp, #-200]	; 0xffffff38
   30300:	bl	30a54 <__assert_fail@plt+0x1f814>
   30304:	str	r0, [fp, #-72]	; 0xffffffb8
   30308:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3030c:	cmp	r3, #0
   30310:	movne	r3, #1
   30314:	moveq	r3, #0
   30318:	uxtb	r3, r3
   3031c:	cmp	r3, #0
   30320:	beq	30334 <__assert_fail@plt+0x1f0f4>
   30324:	ldr	r3, [fp, #4]
   30328:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3032c:	str	r2, [r3]
   30330:	b	30a2c <__assert_fail@plt+0x1f7ec>
   30334:	mov	r3, #0
   30338:	strb	r3, [fp, #-21]	; 0xffffffeb
   3033c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   30340:	ldr	r1, [fp, #-200]	; 0xffffff38
   30344:	ldr	r0, [fp, #-208]	; 0xffffff30
   30348:	bl	2e0a8 <__assert_fail@plt+0x1ce68>
   3034c:	str	r0, [fp, #-20]	; 0xffffffec
   30350:	ldr	r3, [fp, #-112]	; 0xffffff90
   30354:	cmp	r3, #4
   30358:	beq	30440 <__assert_fail@plt+0x1f200>
   3035c:	ldr	r3, [fp, #-112]	; 0xffffff90
   30360:	cmp	r3, #2
   30364:	beq	30440 <__assert_fail@plt+0x1f200>
   30368:	ldr	r3, [fp, #-208]	; 0xffffff30
   3036c:	ldrb	r3, [r3, #4]
   30370:	cmp	r3, #2
   30374:	moveq	r3, #1
   30378:	movne	r3, #0
   3037c:	uxtb	r3, r3
   30380:	cmp	r3, #0
   30384:	beq	30398 <__assert_fail@plt+0x1f158>
   30388:	ldr	r3, [fp, #4]
   3038c:	mov	r2, #7
   30390:	str	r2, [r3]
   30394:	b	30a2c <__assert_fail@plt+0x1f7ec>
   30398:	ldr	r3, [fp, #-208]	; 0xffffff30
   3039c:	ldrb	r3, [r3, #4]
   303a0:	cmp	r3, #22
   303a4:	bne	30440 <__assert_fail@plt+0x1f200>
   303a8:	ldr	r3, [fp, #-200]	; 0xffffff38
   303ac:	ldr	r2, [r3, #40]	; 0x28
   303b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   303b4:	add	r2, r2, r3
   303b8:	ldr	r3, [fp, #-200]	; 0xffffff38
   303bc:	str	r2, [r3, #40]	; 0x28
   303c0:	sub	r3, fp, #128	; 0x80
   303c4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   303c8:	ldr	r1, [fp, #-200]	; 0xffffff38
   303cc:	mov	r0, r3
   303d0:	bl	2e0a8 <__assert_fail@plt+0x1ce68>
   303d4:	str	r0, [fp, #-28]	; 0xffffffe4
   303d8:	ldrb	r3, [fp, #-124]	; 0xffffff84
   303dc:	cmp	r3, #2
   303e0:	moveq	r3, #1
   303e4:	movne	r3, #0
   303e8:	uxtb	r3, r3
   303ec:	cmp	r3, #0
   303f0:	beq	30404 <__assert_fail@plt+0x1f1c4>
   303f4:	ldr	r3, [fp, #4]
   303f8:	mov	r2, #7
   303fc:	str	r2, [r3]
   30400:	b	30a2c <__assert_fail@plt+0x1f7ec>
   30404:	ldrb	r3, [fp, #-124]	; 0xffffff84
   30408:	cmp	r3, #21
   3040c:	bne	30438 <__assert_fail@plt+0x1f1f8>
   30410:	ldr	r3, [fp, #-200]	; 0xffffff38
   30414:	ldr	r2, [r3, #40]	; 0x28
   30418:	ldr	r3, [fp, #-20]	; 0xffffffec
   3041c:	sub	r2, r2, r3
   30420:	ldr	r3, [fp, #-200]	; 0xffffff38
   30424:	str	r2, [r3, #40]	; 0x28
   30428:	ldr	r3, [fp, #-208]	; 0xffffff30
   3042c:	mov	r2, #1
   30430:	strb	r2, [r3, #4]
   30434:	b	30440 <__assert_fail@plt+0x1f200>
   30438:	mov	r3, #1
   3043c:	strb	r3, [fp, #-29]	; 0xffffffe3
   30440:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   30444:	cmp	r3, #0
   30448:	beq	3055c <__assert_fail@plt+0x1f31c>
   3044c:	sub	r3, fp, #160	; 0xa0
   30450:	str	r3, [fp, #-116]	; 0xffffff8c
   30454:	mov	r3, #3
   30458:	str	r3, [fp, #-120]	; 0xffffff88
   3045c:	sub	r2, fp, #128	; 0x80
   30460:	sub	r0, fp, #120	; 0x78
   30464:	mov	r3, #1
   30468:	str	r3, [sp, #8]
   3046c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   30470:	str	r3, [sp, #4]
   30474:	ldr	r3, [fp, #-204]	; 0xffffff34
   30478:	str	r3, [sp]
   3047c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30480:	ldr	r1, [fp, #-200]	; 0xffffff38
   30484:	bl	30a54 <__assert_fail@plt+0x1f814>
   30488:	str	r0, [fp, #-72]	; 0xffffffb8
   3048c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   30490:	cmp	r3, #0
   30494:	movne	r3, #1
   30498:	moveq	r3, #0
   3049c:	uxtb	r3, r3
   304a0:	cmp	r3, #0
   304a4:	beq	304b8 <__assert_fail@plt+0x1f278>
   304a8:	ldr	r3, [fp, #4]
   304ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   304b0:	str	r2, [r3]
   304b4:	b	30a2c <__assert_fail@plt+0x1f7ec>
   304b8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   304bc:	ldr	r1, [fp, #-200]	; 0xffffff38
   304c0:	ldr	r0, [fp, #-208]	; 0xffffff30
   304c4:	bl	2e0a8 <__assert_fail@plt+0x1ce68>
   304c8:	str	r0, [fp, #-20]	; 0xffffffec
   304cc:	sub	r1, fp, #112	; 0x70
   304d0:	sub	r2, fp, #96	; 0x60
   304d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   304d8:	str	r3, [sp, #32]
   304dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   304e0:	str	r3, [sp, #28]
   304e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   304e8:	str	r3, [sp, #24]
   304ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   304f0:	str	r3, [sp, #20]
   304f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   304f8:	str	r3, [sp, #16]
   304fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   30500:	str	r3, [sp, #12]
   30504:	ldr	r3, [fp, #-212]	; 0xffffff2c
   30508:	str	r3, [sp, #8]
   3050c:	ldr	r3, [fp, #-204]	; 0xffffff34
   30510:	str	r3, [sp, #4]
   30514:	sub	r3, fp, #120	; 0x78
   30518:	str	r3, [sp]
   3051c:	mov	r3, r1
   30520:	ldr	r1, [fp, #-68]	; 0xffffffbc
   30524:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30528:	bl	2fb60 <__assert_fail@plt+0x1e920>
   3052c:	mov	r2, r0
   30530:	ldr	r3, [fp, #4]
   30534:	str	r2, [r3]
   30538:	ldr	r3, [fp, #4]
   3053c:	ldr	r3, [r3]
   30540:	cmp	r3, #0
   30544:	movne	r3, #1
   30548:	moveq	r3, #0
   3054c:	uxtb	r3, r3
   30550:	cmp	r3, #0
   30554:	beq	30758 <__assert_fail@plt+0x1f518>
   30558:	b	30a2c <__assert_fail@plt+0x1f7ec>
   3055c:	ldr	r3, [fp, #-112]	; 0xffffff90
   30560:	cmp	r3, #4
   30564:	ldrls	pc, [pc, r3, lsl #2]
   30568:	b	306f0 <__assert_fail@plt+0x1f4b0>
   3056c:	andeq	r0, r3, r0, lsl #11
   30570:	muleq	r3, r4, r5
   30574:	andeq	r0, r3, r4, asr #12
   30578:	andeq	r0, r3, r8, lsl #13
   3057c:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30580:	ldrb	r3, [fp, #-108]	; 0xffffff94
   30584:	mov	r1, r3
   30588:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3058c:	bl	23c60 <__assert_fail@plt+0x12a20>
   30590:	b	30758 <__assert_fail@plt+0x1f518>
   30594:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30598:	ldr	r3, [r3, #20]
   3059c:	ldr	r2, [fp, #-8]
   305a0:	cmp	r2, r3
   305a4:	moveq	r3, #1
   305a8:	movne	r3, #0
   305ac:	uxtb	r3, r3
   305b0:	cmp	r3, #0
   305b4:	beq	30614 <__assert_fail@plt+0x1f3d4>
   305b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   305bc:	ldr	r3, [r3, #20]
   305c0:	lsl	r3, r3, #1
   305c4:	add	r3, r3, #1
   305c8:	str	r3, [fp, #-8]
   305cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   305d0:	ldr	r2, [r3]
   305d4:	ldr	r3, [fp, #-8]
   305d8:	lsl	r3, r3, #2
   305dc:	mov	r1, r3
   305e0:	mov	r0, r2
   305e4:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   305e8:	str	r0, [fp, #-76]	; 0xffffffb4
   305ec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   305f0:	cmp	r3, #0
   305f4:	moveq	r3, #1
   305f8:	movne	r3, #0
   305fc:	uxtb	r3, r3
   30600:	cmp	r3, #0
   30604:	bne	309fc <__assert_fail@plt+0x1f7bc>
   30608:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3060c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   30610:	str	r2, [r3]
   30614:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30618:	ldr	r2, [r3]
   3061c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30620:	ldr	r3, [r3, #20]
   30624:	add	r0, r3, #1
   30628:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3062c:	str	r0, [r1, #20]
   30630:	lsl	r3, r3, #2
   30634:	add	r3, r2, r3
   30638:	ldr	r2, [fp, #-108]	; 0xffffff94
   3063c:	str	r2, [r3]
   30640:	b	30758 <__assert_fail@plt+0x1f518>
   30644:	ldr	r3, [fp, #-108]	; 0xffffff94
   30648:	sub	r2, fp, #100	; 0x64
   3064c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   30650:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30654:	bl	30d98 <__assert_fail@plt+0x1fb58>
   30658:	mov	r2, r0
   3065c:	ldr	r3, [fp, #4]
   30660:	str	r2, [r3]
   30664:	ldr	r3, [fp, #4]
   30668:	ldr	r3, [r3]
   3066c:	cmp	r3, #0
   30670:	movne	r3, #1
   30674:	moveq	r3, #0
   30678:	uxtb	r3, r3
   3067c:	cmp	r3, #0
   30680:	beq	3074c <__assert_fail@plt+0x1f50c>
   30684:	b	30a2c <__assert_fail@plt+0x1f7ec>
   30688:	ldr	r1, [fp, #-108]	; 0xffffff94
   3068c:	sub	r2, fp, #92	; 0x5c
   30690:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30694:	str	r3, [sp, #12]
   30698:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3069c:	str	r3, [sp, #8]
   306a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   306a4:	str	r3, [sp, #4]
   306a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   306ac:	str	r3, [sp]
   306b0:	mov	r3, r1
   306b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   306b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   306bc:	bl	30030 <__assert_fail@plt+0x1edf0>
   306c0:	mov	r2, r0
   306c4:	ldr	r3, [fp, #4]
   306c8:	str	r2, [r3]
   306cc:	ldr	r3, [fp, #4]
   306d0:	ldr	r3, [r3]
   306d4:	cmp	r3, #0
   306d8:	movne	r3, #1
   306dc:	moveq	r3, #0
   306e0:	uxtb	r3, r3
   306e4:	cmp	r3, #0
   306e8:	beq	30754 <__assert_fail@plt+0x1f514>
   306ec:	b	30a2c <__assert_fail@plt+0x1f7ec>
   306f0:	ldr	r3, [fp, #-200]	; 0xffffff38
   306f4:	ldr	r0, [r3, #64]	; 0x40
   306f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   306fc:	sub	r1, fp, #104	; 0x68
   30700:	ldr	r2, [fp, #-212]	; 0xffffff2c
   30704:	str	r2, [sp, #4]
   30708:	str	r3, [sp]
   3070c:	mov	r3, r1
   30710:	ldr	r2, [fp, #-68]	; 0xffffffbc
   30714:	ldr	r1, [fp, #-64]	; 0xffffffc0
   30718:	bl	30e10 <__assert_fail@plt+0x1fbd0>
   3071c:	mov	r2, r0
   30720:	ldr	r3, [fp, #4]
   30724:	str	r2, [r3]
   30728:	ldr	r3, [fp, #4]
   3072c:	ldr	r3, [r3]
   30730:	cmp	r3, #0
   30734:	movne	r3, #1
   30738:	moveq	r3, #0
   3073c:	uxtb	r3, r3
   30740:	cmp	r3, #0
   30744:	bne	30a28 <__assert_fail@plt+0x1f7e8>
   30748:	b	30758 <__assert_fail@plt+0x1f518>
   3074c:	nop	{0}
   30750:	b	30758 <__assert_fail@plt+0x1f518>
   30754:	nop	{0}
   30758:	ldr	r3, [fp, #-208]	; 0xffffff30
   3075c:	ldrb	r3, [r3, #4]
   30760:	cmp	r3, #2
   30764:	moveq	r3, #1
   30768:	movne	r3, #0
   3076c:	uxtb	r3, r3
   30770:	cmp	r3, #0
   30774:	beq	3078c <__assert_fail@plt+0x1f54c>
   30778:	ldr	r3, [fp, #4]
   3077c:	mov	r2, #7
   30780:	str	r2, [r3]
   30784:	nop	{0}
   30788:	b	30a2c <__assert_fail@plt+0x1f7ec>
   3078c:	ldr	r3, [fp, #-208]	; 0xffffff30
   30790:	ldrb	r3, [r3, #4]
   30794:	cmp	r3, #21
   30798:	bne	302b8 <__assert_fail@plt+0x1f078>
   3079c:	ldr	r3, [fp, #-200]	; 0xffffff38
   307a0:	ldr	r2, [r3, #40]	; 0x28
   307a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   307a8:	add	r2, r2, r3
   307ac:	ldr	r3, [fp, #-200]	; 0xffffff38
   307b0:	str	r2, [r3, #40]	; 0x28
   307b4:	ldrb	r3, [fp, #-9]
   307b8:	cmp	r3, #0
   307bc:	bne	307c4 <__assert_fail@plt+0x1f584>
   307c0:	b	307cc <__assert_fail@plt+0x1f58c>
   307c4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   307c8:	bl	23e98 <__assert_fail@plt+0x12c58>
   307cc:	ldr	r3, [fp, #-204]	; 0xffffff34
   307d0:	ldr	r3, [r3, #92]	; 0x5c
   307d4:	cmp	r3, #1
   307d8:	ble	307f0 <__assert_fail@plt+0x1f5b0>
   307dc:	ldr	r3, [fp, #-204]	; 0xffffff34
   307e0:	ldr	r3, [r3, #60]	; 0x3c
   307e4:	mov	r1, r3
   307e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   307ec:	bl	23f90 <__assert_fail@plt+0x12d50>
   307f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   307f4:	ldr	r3, [r3, #20]
   307f8:	cmp	r3, #0
   307fc:	bne	30868 <__assert_fail@plt+0x1f628>
   30800:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30804:	ldr	r3, [r3, #24]
   30808:	cmp	r3, #0
   3080c:	bne	30868 <__assert_fail@plt+0x1f628>
   30810:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30814:	ldr	r3, [r3, #28]
   30818:	cmp	r3, #0
   3081c:	bne	30868 <__assert_fail@plt+0x1f628>
   30820:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30824:	ldr	r3, [r3, #32]
   30828:	cmp	r3, #0
   3082c:	bne	30868 <__assert_fail@plt+0x1f628>
   30830:	ldr	r3, [fp, #-204]	; 0xffffff34
   30834:	ldr	r3, [r3, #92]	; 0x5c
   30838:	cmp	r3, #1
   3083c:	ble	309a0 <__assert_fail@plt+0x1f760>
   30840:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30844:	ldr	r3, [r3, #36]	; 0x24
   30848:	cmp	r3, #0
   3084c:	bne	30868 <__assert_fail@plt+0x1f628>
   30850:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30854:	ldrb	r3, [r3, #16]
   30858:	and	r3, r3, #1
   3085c:	uxtb	r3, r3
   30860:	cmp	r3, #0
   30864:	beq	309a0 <__assert_fail@plt+0x1f760>
   30868:	ldr	r2, [fp, #-204]	; 0xffffff34
   3086c:	ldrb	r3, [r2, #88]	; 0x58
   30870:	orr	r3, r3, #2
   30874:	strb	r3, [r2, #88]	; 0x58
   30878:	mov	r3, #6
   3087c:	strb	r3, [fp, #-84]	; 0xffffffac
   30880:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30884:	str	r3, [fp, #-88]	; 0xffffffa8
   30888:	sub	r3, fp, #88	; 0x58
   3088c:	mov	r2, #0
   30890:	mov	r1, #0
   30894:	ldr	r0, [fp, #-204]	; 0xffffff34
   30898:	bl	32068 <__assert_fail@plt+0x20e28>
   3089c:	str	r0, [fp, #-80]	; 0xffffffb0
   308a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   308a4:	cmp	r3, #0
   308a8:	moveq	r3, #1
   308ac:	movne	r3, #0
   308b0:	uxtb	r3, r3
   308b4:	cmp	r3, #0
   308b8:	bne	30a04 <__assert_fail@plt+0x1f7c4>
   308bc:	mov	r3, #0
   308c0:	str	r3, [fp, #-36]	; 0xffffffdc
   308c4:	b	308f0 <__assert_fail@plt+0x1f6b0>
   308c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   308cc:	lsl	r3, r3, #2
   308d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   308d4:	add	r3, r2, r3
   308d8:	ldr	r3, [r3]
   308dc:	cmp	r3, #0
   308e0:	bne	30900 <__assert_fail@plt+0x1f6c0>
   308e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   308e8:	add	r3, r3, #1
   308ec:	str	r3, [fp, #-36]	; 0xffffffdc
   308f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   308f4:	cmp	r3, #7
   308f8:	ble	308c8 <__assert_fail@plt+0x1f688>
   308fc:	b	30904 <__assert_fail@plt+0x1f6c4>
   30900:	nop	{0}
   30904:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30908:	cmp	r3, #7
   3090c:	bgt	3098c <__assert_fail@plt+0x1f74c>
   30910:	mov	r3, #3
   30914:	strb	r3, [fp, #-84]	; 0xffffffac
   30918:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3091c:	str	r3, [fp, #-88]	; 0xffffffa8
   30920:	sub	r3, fp, #88	; 0x58
   30924:	mov	r2, #0
   30928:	mov	r1, #0
   3092c:	ldr	r0, [fp, #-204]	; 0xffffff34
   30930:	bl	32068 <__assert_fail@plt+0x20e28>
   30934:	str	r0, [fp, #-16]
   30938:	ldr	r3, [fp, #-16]
   3093c:	cmp	r3, #0
   30940:	moveq	r3, #1
   30944:	movne	r3, #0
   30948:	uxtb	r3, r3
   3094c:	cmp	r3, #0
   30950:	bne	30a0c <__assert_fail@plt+0x1f7cc>
   30954:	mov	r3, #10
   30958:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3095c:	ldr	r1, [fp, #-16]
   30960:	ldr	r0, [fp, #-204]	; 0xffffff34
   30964:	bl	32000 <__assert_fail@plt+0x20dc0>
   30968:	str	r0, [fp, #-16]
   3096c:	ldr	r3, [fp, #-16]
   30970:	cmp	r3, #0
   30974:	moveq	r3, #1
   30978:	movne	r3, #0
   3097c:	uxtb	r3, r3
   30980:	cmp	r3, #0
   30984:	beq	309f0 <__assert_fail@plt+0x1f7b0>
   30988:	b	30a18 <__assert_fail@plt+0x1f7d8>
   3098c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30990:	bl	13798 <__assert_fail@plt+0x2558>
   30994:	ldr	r3, [fp, #-80]	; 0xffffffb0
   30998:	str	r3, [fp, #-16]
   3099c:	b	309f0 <__assert_fail@plt+0x1f7b0>
   309a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   309a4:	bl	31f90 <__assert_fail@plt+0x20d50>
   309a8:	mov	r3, #3
   309ac:	strb	r3, [fp, #-84]	; 0xffffffac
   309b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   309b4:	str	r3, [fp, #-88]	; 0xffffffa8
   309b8:	sub	r3, fp, #88	; 0x58
   309bc:	mov	r2, #0
   309c0:	mov	r1, #0
   309c4:	ldr	r0, [fp, #-204]	; 0xffffff34
   309c8:	bl	32068 <__assert_fail@plt+0x20e28>
   309cc:	str	r0, [fp, #-16]
   309d0:	ldr	r3, [fp, #-16]
   309d4:	cmp	r3, #0
   309d8:	moveq	r3, #1
   309dc:	movne	r3, #0
   309e0:	uxtb	r3, r3
   309e4:	cmp	r3, #0
   309e8:	bne	30a14 <__assert_fail@plt+0x1f7d4>
   309ec:	b	309f4 <__assert_fail@plt+0x1f7b4>
   309f0:	nop	{0}
   309f4:	ldr	r3, [fp, #-16]
   309f8:	b	30a40 <__assert_fail@plt+0x1f800>
   309fc:	nop	{0}
   30a00:	b	30a18 <__assert_fail@plt+0x1f7d8>
   30a04:	nop	{0}
   30a08:	b	30a18 <__assert_fail@plt+0x1f7d8>
   30a0c:	nop	{0}
   30a10:	b	30a18 <__assert_fail@plt+0x1f7d8>
   30a14:	nop	{0}
   30a18:	ldr	r3, [fp, #4]
   30a1c:	mov	r2, #12
   30a20:	str	r2, [r3]
   30a24:	b	30a2c <__assert_fail@plt+0x1f7ec>
   30a28:	nop	{0}
   30a2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30a30:	bl	13798 <__assert_fail@plt+0x2558>
   30a34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   30a38:	bl	31f90 <__assert_fail@plt+0x20d50>
   30a3c:	mov	r3, #0
   30a40:	mov	r0, r3
   30a44:	sub	sp, fp, #4
   30a48:	ldr	fp, [sp]
   30a4c:	add	sp, sp, #4
   30a50:	pop	{pc}		; (ldr pc, [sp], #4)
   30a54:	str	fp, [sp, #-8]!
   30a58:	str	lr, [sp, #4]
   30a5c:	add	fp, sp, #4
   30a60:	sub	sp, sp, #32
   30a64:	str	r0, [fp, #-24]	; 0xffffffe8
   30a68:	str	r1, [fp, #-28]	; 0xffffffe4
   30a6c:	str	r2, [fp, #-32]	; 0xffffffe0
   30a70:	str	r3, [fp, #-36]	; 0xffffffdc
   30a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30a78:	ldr	r3, [r3, #40]	; 0x28
   30a7c:	mov	r1, r3
   30a80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30a84:	bl	24018 <__assert_fail@plt+0x12dd8>
   30a88:	str	r0, [fp, #-8]
   30a8c:	ldr	r3, [fp, #-8]
   30a90:	cmp	r3, #1
   30a94:	ble	30ae4 <__assert_fail@plt+0x1f8a4>
   30a98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a9c:	mov	r2, #1
   30aa0:	str	r2, [r3]
   30aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30aa8:	ldr	r3, [r3, #40]	; 0x28
   30aac:	mov	r1, r3
   30ab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30ab4:	bl	240bc <__assert_fail@plt+0x12e7c>
   30ab8:	mov	r2, r0
   30abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ac0:	str	r2, [r3, #4]
   30ac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30ac8:	ldr	r2, [r3, #40]	; 0x28
   30acc:	ldr	r3, [fp, #-8]
   30ad0:	add	r2, r2, r3
   30ad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30ad8:	str	r2, [r3, #40]	; 0x28
   30adc:	mov	r3, #0
   30ae0:	b	30bc0 <__assert_fail@plt+0x1f980>
   30ae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30ae8:	ldr	r2, [r3, #40]	; 0x28
   30aec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30af0:	add	r2, r2, r3
   30af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30af8:	str	r2, [r3, #40]	; 0x28
   30afc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b00:	ldrb	r3, [r3, #4]
   30b04:	cmp	r3, #26
   30b08:	beq	30b2c <__assert_fail@plt+0x1f8ec>
   30b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b10:	ldrb	r3, [r3, #4]
   30b14:	cmp	r3, #30
   30b18:	beq	30b2c <__assert_fail@plt+0x1f8ec>
   30b1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b20:	ldrb	r3, [r3, #4]
   30b24:	cmp	r3, #28
   30b28:	bne	30b44 <__assert_fail@plt+0x1f904>
   30b2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30b30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b38:	bl	30bd4 <__assert_fail@plt+0x1f994>
   30b3c:	mov	r3, r0
   30b40:	b	30bc0 <__assert_fail@plt+0x1f980>
   30b44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b48:	ldrb	r3, [r3, #4]
   30b4c:	cmp	r3, #22
   30b50:	moveq	r3, #1
   30b54:	movne	r3, #0
   30b58:	uxtb	r3, r3
   30b5c:	cmp	r3, #0
   30b60:	beq	30ba0 <__assert_fail@plt+0x1f960>
   30b64:	ldrb	r3, [fp, #12]
   30b68:	eor	r3, r3, #1
   30b6c:	uxtb	r3, r3
   30b70:	cmp	r3, #0
   30b74:	beq	30ba0 <__assert_fail@plt+0x1f960>
   30b78:	sub	r3, fp, #16
   30b7c:	ldr	r2, [fp, #8]
   30b80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30b84:	mov	r0, r3
   30b88:	bl	2e0a8 <__assert_fail@plt+0x1ce68>
   30b8c:	ldrb	r3, [fp, #-12]
   30b90:	cmp	r3, #21
   30b94:	beq	30ba0 <__assert_fail@plt+0x1f960>
   30b98:	mov	r3, #11
   30b9c:	b	30bc0 <__assert_fail@plt+0x1f980>
   30ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ba4:	mov	r2, #0
   30ba8:	str	r2, [r3]
   30bac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30bb0:	ldrb	r2, [r3]
   30bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30bb8:	strb	r2, [r3, #4]
   30bbc:	mov	r3, #0
   30bc0:	mov	r0, r3
   30bc4:	sub	sp, fp, #4
   30bc8:	ldr	fp, [sp]
   30bcc:	add	sp, sp, #4
   30bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   30bd4:	str	fp, [sp, #-8]!
   30bd8:	str	lr, [sp, #4]
   30bdc:	add	fp, sp, #4
   30be0:	sub	sp, sp, #32
   30be4:	str	r0, [fp, #-24]	; 0xffffffe8
   30be8:	str	r1, [fp, #-28]	; 0xffffffe4
   30bec:	str	r2, [fp, #-32]	; 0xffffffe0
   30bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30bf4:	ldrb	r3, [r3]
   30bf8:	strb	r3, [fp, #-13]
   30bfc:	mov	r3, #0
   30c00:	str	r3, [fp, #-12]
   30c04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c08:	ldr	r2, [r3, #56]	; 0x38
   30c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c10:	ldr	r3, [r3, #40]	; 0x28
   30c14:	cmp	r2, r3
   30c18:	bgt	30c24 <__assert_fail@plt+0x1f9e4>
   30c1c:	mov	r3, #7
   30c20:	b	30d84 <__assert_fail@plt+0x1fb44>
   30c24:	ldr	r3, [fp, #-12]
   30c28:	cmp	r3, #31
   30c2c:	ble	30c38 <__assert_fail@plt+0x1f9f8>
   30c30:	mov	r3, #7
   30c34:	b	30d84 <__assert_fail@plt+0x1fb44>
   30c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30c3c:	ldrb	r3, [r3, #4]
   30c40:	cmp	r3, #30
   30c44:	bne	30c5c <__assert_fail@plt+0x1fa1c>
   30c48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30c4c:	bl	267e8 <__assert_fail@plt+0x155a8>
   30c50:	mov	r3, r0
   30c54:	strb	r3, [fp, #-5]
   30c58:	b	30c84 <__assert_fail@plt+0x1fa44>
   30c5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c60:	ldr	r2, [r3, #4]
   30c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c68:	ldr	r3, [r3, #40]	; 0x28
   30c6c:	add	r0, r3, #1
   30c70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30c74:	str	r0, [r1, #40]	; 0x28
   30c78:	add	r3, r2, r3
   30c7c:	ldrb	r3, [r3]
   30c80:	strb	r3, [fp, #-5]
   30c84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c88:	ldr	r2, [r3, #56]	; 0x38
   30c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c90:	ldr	r3, [r3, #40]	; 0x28
   30c94:	cmp	r2, r3
   30c98:	bgt	30ca4 <__assert_fail@plt+0x1fa64>
   30c9c:	mov	r3, #7
   30ca0:	b	30d84 <__assert_fail@plt+0x1fb44>
   30ca4:	ldrb	r2, [fp, #-5]
   30ca8:	ldrb	r3, [fp, #-13]
   30cac:	cmp	r2, r3
   30cb0:	bne	30cd4 <__assert_fail@plt+0x1fa94>
   30cb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30cb8:	ldr	r3, [r3, #4]
   30cbc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30cc0:	ldr	r2, [r2, #40]	; 0x28
   30cc4:	add	r3, r3, r2
   30cc8:	ldrb	r3, [r3]
   30ccc:	cmp	r3, #93	; 0x5d
   30cd0:	beq	30cfc <__assert_fail@plt+0x1fabc>
   30cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30cd8:	ldr	r2, [r3, #4]
   30cdc:	ldr	r3, [fp, #-12]
   30ce0:	add	r3, r2, r3
   30ce4:	ldrb	r2, [fp, #-5]
   30ce8:	strb	r2, [r3]
   30cec:	ldr	r3, [fp, #-12]
   30cf0:	add	r3, r3, #1
   30cf4:	str	r3, [fp, #-12]
   30cf8:	b	30c24 <__assert_fail@plt+0x1f9e4>
   30cfc:	nop	{0}
   30d00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30d04:	ldr	r3, [r3, #40]	; 0x28
   30d08:	add	r2, r3, #1
   30d0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30d10:	str	r2, [r3, #40]	; 0x28
   30d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d18:	ldr	r2, [r3, #4]
   30d1c:	ldr	r3, [fp, #-12]
   30d20:	add	r3, r2, r3
   30d24:	mov	r2, #0
   30d28:	strb	r2, [r3]
   30d2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30d30:	ldrb	r3, [r3, #4]
   30d34:	cmp	r3, #28
   30d38:	beq	30d5c <__assert_fail@plt+0x1fb1c>
   30d3c:	cmp	r3, #30
   30d40:	beq	30d6c <__assert_fail@plt+0x1fb2c>
   30d44:	cmp	r3, #26
   30d48:	bne	30d7c <__assert_fail@plt+0x1fb3c>
   30d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d50:	mov	r2, #3
   30d54:	str	r2, [r3]
   30d58:	b	30d80 <__assert_fail@plt+0x1fb40>
   30d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d60:	mov	r2, #2
   30d64:	str	r2, [r3]
   30d68:	b	30d80 <__assert_fail@plt+0x1fb40>
   30d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d70:	mov	r2, #4
   30d74:	str	r2, [r3]
   30d78:	b	30d80 <__assert_fail@plt+0x1fb40>
   30d7c:	nop	{0}
   30d80:	mov	r3, #0
   30d84:	mov	r0, r3
   30d88:	sub	sp, fp, #4
   30d8c:	ldr	fp, [sp]
   30d90:	add	sp, sp, #4
   30d94:	pop	{pc}		; (ldr pc, [sp], #4)
   30d98:	str	fp, [sp, #-8]!
   30d9c:	str	lr, [sp, #4]
   30da0:	add	fp, sp, #4
   30da4:	sub	sp, sp, #16
   30da8:	str	r0, [fp, #-8]
   30dac:	str	r1, [fp, #-12]
   30db0:	str	r2, [fp, #-16]
   30db4:	str	r3, [fp, #-20]	; 0xffffffec
   30db8:	ldr	r0, [fp, #-20]	; 0xffffffec
   30dbc:	bl	11144 <strlen@plt>
   30dc0:	mov	r3, r0
   30dc4:	cmp	r3, #1
   30dc8:	movne	r3, #1
   30dcc:	moveq	r3, #0
   30dd0:	uxtb	r3, r3
   30dd4:	cmp	r3, #0
   30dd8:	beq	30de4 <__assert_fail@plt+0x1fba4>
   30ddc:	mov	r3, #3
   30de0:	b	30dfc <__assert_fail@plt+0x1fbbc>
   30de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   30de8:	ldrb	r3, [r3]
   30dec:	mov	r1, r3
   30df0:	ldr	r0, [fp, #-8]
   30df4:	bl	23c60 <__assert_fail@plt+0x12a20>
   30df8:	mov	r3, #0
   30dfc:	mov	r0, r3
   30e00:	sub	sp, fp, #4
   30e04:	ldr	fp, [sp]
   30e08:	add	sp, sp, #4
   30e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   30e10:	str	r4, [sp, #-12]!
   30e14:	str	fp, [sp, #4]
   30e18:	str	lr, [sp, #8]
   30e1c:	add	fp, sp, #8
   30e20:	sub	sp, sp, #36	; 0x24
   30e24:	str	r0, [fp, #-32]	; 0xffffffe0
   30e28:	str	r1, [fp, #-36]	; 0xffffffdc
   30e2c:	str	r2, [fp, #-40]	; 0xffffffd8
   30e30:	str	r3, [fp, #-44]	; 0xffffffd4
   30e34:	ldr	r3, [fp, #4]
   30e38:	str	r3, [fp, #-20]	; 0xffffffec
   30e3c:	ldr	r3, [fp, #8]
   30e40:	and	r3, r3, #4194304	; 0x400000
   30e44:	cmp	r3, #0
   30e48:	beq	30e90 <__assert_fail@plt+0x1fc50>
   30e4c:	movw	r1, #7996	; 0x1f3c
   30e50:	movt	r1, #4
   30e54:	ldr	r0, [fp, #-20]	; 0xffffffec
   30e58:	bl	10f70 <strcmp@plt>
   30e5c:	mov	r3, r0
   30e60:	cmp	r3, #0
   30e64:	beq	30e84 <__assert_fail@plt+0x1fc44>
   30e68:	movw	r1, #8004	; 0x1f44
   30e6c:	movt	r1, #4
   30e70:	ldr	r0, [fp, #-20]	; 0xffffffec
   30e74:	bl	10f70 <strcmp@plt>
   30e78:	mov	r3, r0
   30e7c:	cmp	r3, #0
   30e80:	bne	30e90 <__assert_fail@plt+0x1fc50>
   30e84:	movw	r3, #8012	; 0x1f4c
   30e88:	movt	r3, #4
   30e8c:	str	r3, [fp, #-20]	; 0xffffffec
   30e90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30e94:	ldr	r2, [r3]
   30e98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30e9c:	ldr	r3, [r3, #36]	; 0x24
   30ea0:	cmp	r2, r3
   30ea4:	moveq	r3, #1
   30ea8:	movne	r3, #0
   30eac:	uxtb	r3, r3
   30eb0:	cmp	r3, #0
   30eb4:	beq	30f28 <__assert_fail@plt+0x1fce8>
   30eb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30ebc:	ldr	r3, [r3, #36]	; 0x24
   30ec0:	lsl	r3, r3, #1
   30ec4:	add	r3, r3, #1
   30ec8:	str	r3, [fp, #-24]	; 0xffffffe8
   30ecc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30ed0:	ldr	r2, [r3, #12]
   30ed4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ed8:	lsl	r3, r3, #2
   30edc:	mov	r1, r3
   30ee0:	mov	r0, r2
   30ee4:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   30ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   30eec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30ef0:	cmp	r3, #0
   30ef4:	moveq	r3, #1
   30ef8:	movne	r3, #0
   30efc:	uxtb	r3, r3
   30f00:	cmp	r3, #0
   30f04:	beq	30f10 <__assert_fail@plt+0x1fcd0>
   30f08:	mov	r3, #12
   30f0c:	b	31b68 <__assert_fail@plt+0x20928>
   30f10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30f18:	str	r2, [r3, #12]
   30f1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30f20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30f24:	str	r2, [r3]
   30f28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f2c:	ldr	r2, [r3, #12]
   30f30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30f34:	ldr	r3, [r3, #36]	; 0x24
   30f38:	add	r0, r3, #1
   30f3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   30f40:	str	r0, [r1, #36]	; 0x24
   30f44:	lsl	r3, r3, #2
   30f48:	add	r4, r2, r3
   30f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30f50:	bl	10f4c <wctype@plt>
   30f54:	mov	r3, r0
   30f58:	str	r3, [r4]
   30f5c:	movw	r1, #7976	; 0x1f28
   30f60:	movt	r1, #4
   30f64:	ldr	r0, [fp, #-20]	; 0xffffffec
   30f68:	bl	10f70 <strcmp@plt>
   30f6c:	mov	r3, r0
   30f70:	cmp	r3, #0
   30f74:	bne	3105c <__assert_fail@plt+0x1fe1c>
   30f78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30f7c:	cmp	r3, #0
   30f80:	movne	r3, #1
   30f84:	moveq	r3, #0
   30f88:	uxtb	r3, r3
   30f8c:	cmp	r3, #0
   30f90:	beq	31000 <__assert_fail@plt+0x1fdc0>
   30f94:	mov	r3, #0
   30f98:	str	r3, [fp, #-16]
   30f9c:	b	30ff0 <__assert_fail@plt+0x1fdb0>
   30fa0:	bl	11120 <__ctype_b_loc@plt>
   30fa4:	mov	r3, r0
   30fa8:	ldr	r2, [r3]
   30fac:	ldr	r3, [fp, #-16]
   30fb0:	lsl	r3, r3, #1
   30fb4:	add	r3, r2, r3
   30fb8:	ldrh	r3, [r3]
   30fbc:	and	r3, r3, #8
   30fc0:	cmp	r3, #0
   30fc4:	beq	30fe4 <__assert_fail@plt+0x1fda4>
   30fc8:	ldr	r3, [fp, #-16]
   30fcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30fd0:	add	r3, r2, r3
   30fd4:	ldrb	r3, [r3]
   30fd8:	mov	r1, r3
   30fdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30fe0:	bl	23c60 <__assert_fail@plt+0x12a20>
   30fe4:	ldr	r3, [fp, #-16]
   30fe8:	add	r3, r3, #1
   30fec:	str	r3, [fp, #-16]
   30ff0:	ldr	r3, [fp, #-16]
   30ff4:	cmp	r3, #255	; 0xff
   30ff8:	ble	30fa0 <__assert_fail@plt+0x1fd60>
   30ffc:	b	31b64 <__assert_fail@plt+0x20924>
   31000:	mov	r3, #0
   31004:	str	r3, [fp, #-16]
   31008:	b	3104c <__assert_fail@plt+0x1fe0c>
   3100c:	bl	11120 <__ctype_b_loc@plt>
   31010:	mov	r3, r0
   31014:	ldr	r2, [r3]
   31018:	ldr	r3, [fp, #-16]
   3101c:	lsl	r3, r3, #1
   31020:	add	r3, r2, r3
   31024:	ldrh	r3, [r3]
   31028:	and	r3, r3, #8
   3102c:	cmp	r3, #0
   31030:	beq	31040 <__assert_fail@plt+0x1fe00>
   31034:	ldr	r1, [fp, #-16]
   31038:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3103c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31040:	ldr	r3, [fp, #-16]
   31044:	add	r3, r3, #1
   31048:	str	r3, [fp, #-16]
   3104c:	ldr	r3, [fp, #-16]
   31050:	cmp	r3, #255	; 0xff
   31054:	ble	3100c <__assert_fail@plt+0x1fdcc>
   31058:	b	31b64 <__assert_fail@plt+0x20924>
   3105c:	movw	r1, #8020	; 0x1f54
   31060:	movt	r1, #4
   31064:	ldr	r0, [fp, #-20]	; 0xffffffec
   31068:	bl	10f70 <strcmp@plt>
   3106c:	mov	r3, r0
   31070:	cmp	r3, #0
   31074:	bne	3115c <__assert_fail@plt+0x1ff1c>
   31078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3107c:	cmp	r3, #0
   31080:	movne	r3, #1
   31084:	moveq	r3, #0
   31088:	uxtb	r3, r3
   3108c:	cmp	r3, #0
   31090:	beq	31100 <__assert_fail@plt+0x1fec0>
   31094:	mov	r3, #0
   31098:	str	r3, [fp, #-16]
   3109c:	b	310f0 <__assert_fail@plt+0x1feb0>
   310a0:	bl	11120 <__ctype_b_loc@plt>
   310a4:	mov	r3, r0
   310a8:	ldr	r2, [r3]
   310ac:	ldr	r3, [fp, #-16]
   310b0:	lsl	r3, r3, #1
   310b4:	add	r3, r2, r3
   310b8:	ldrh	r3, [r3]
   310bc:	and	r3, r3, #2
   310c0:	cmp	r3, #0
   310c4:	beq	310e4 <__assert_fail@plt+0x1fea4>
   310c8:	ldr	r3, [fp, #-16]
   310cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   310d0:	add	r3, r2, r3
   310d4:	ldrb	r3, [r3]
   310d8:	mov	r1, r3
   310dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   310e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   310e4:	ldr	r3, [fp, #-16]
   310e8:	add	r3, r3, #1
   310ec:	str	r3, [fp, #-16]
   310f0:	ldr	r3, [fp, #-16]
   310f4:	cmp	r3, #255	; 0xff
   310f8:	ble	310a0 <__assert_fail@plt+0x1fe60>
   310fc:	b	31b64 <__assert_fail@plt+0x20924>
   31100:	mov	r3, #0
   31104:	str	r3, [fp, #-16]
   31108:	b	3114c <__assert_fail@plt+0x1ff0c>
   3110c:	bl	11120 <__ctype_b_loc@plt>
   31110:	mov	r3, r0
   31114:	ldr	r2, [r3]
   31118:	ldr	r3, [fp, #-16]
   3111c:	lsl	r3, r3, #1
   31120:	add	r3, r2, r3
   31124:	ldrh	r3, [r3]
   31128:	and	r3, r3, #2
   3112c:	cmp	r3, #0
   31130:	beq	31140 <__assert_fail@plt+0x1ff00>
   31134:	ldr	r1, [fp, #-16]
   31138:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3113c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31140:	ldr	r3, [fp, #-16]
   31144:	add	r3, r3, #1
   31148:	str	r3, [fp, #-16]
   3114c:	ldr	r3, [fp, #-16]
   31150:	cmp	r3, #255	; 0xff
   31154:	ble	3110c <__assert_fail@plt+0x1fecc>
   31158:	b	31b64 <__assert_fail@plt+0x20924>
   3115c:	movw	r1, #8004	; 0x1f44
   31160:	movt	r1, #4
   31164:	ldr	r0, [fp, #-20]	; 0xffffffec
   31168:	bl	10f70 <strcmp@plt>
   3116c:	mov	r3, r0
   31170:	cmp	r3, #0
   31174:	bne	3125c <__assert_fail@plt+0x2001c>
   31178:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3117c:	cmp	r3, #0
   31180:	movne	r3, #1
   31184:	moveq	r3, #0
   31188:	uxtb	r3, r3
   3118c:	cmp	r3, #0
   31190:	beq	31200 <__assert_fail@plt+0x1ffc0>
   31194:	mov	r3, #0
   31198:	str	r3, [fp, #-16]
   3119c:	b	311f0 <__assert_fail@plt+0x1ffb0>
   311a0:	bl	11120 <__ctype_b_loc@plt>
   311a4:	mov	r3, r0
   311a8:	ldr	r2, [r3]
   311ac:	ldr	r3, [fp, #-16]
   311b0:	lsl	r3, r3, #1
   311b4:	add	r3, r2, r3
   311b8:	ldrh	r3, [r3]
   311bc:	and	r3, r3, #512	; 0x200
   311c0:	cmp	r3, #0
   311c4:	beq	311e4 <__assert_fail@plt+0x1ffa4>
   311c8:	ldr	r3, [fp, #-16]
   311cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   311d0:	add	r3, r2, r3
   311d4:	ldrb	r3, [r3]
   311d8:	mov	r1, r3
   311dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   311e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   311e4:	ldr	r3, [fp, #-16]
   311e8:	add	r3, r3, #1
   311ec:	str	r3, [fp, #-16]
   311f0:	ldr	r3, [fp, #-16]
   311f4:	cmp	r3, #255	; 0xff
   311f8:	ble	311a0 <__assert_fail@plt+0x1ff60>
   311fc:	b	31b64 <__assert_fail@plt+0x20924>
   31200:	mov	r3, #0
   31204:	str	r3, [fp, #-16]
   31208:	b	3124c <__assert_fail@plt+0x2000c>
   3120c:	bl	11120 <__ctype_b_loc@plt>
   31210:	mov	r3, r0
   31214:	ldr	r2, [r3]
   31218:	ldr	r3, [fp, #-16]
   3121c:	lsl	r3, r3, #1
   31220:	add	r3, r2, r3
   31224:	ldrh	r3, [r3]
   31228:	and	r3, r3, #512	; 0x200
   3122c:	cmp	r3, #0
   31230:	beq	31240 <__assert_fail@plt+0x20000>
   31234:	ldr	r1, [fp, #-16]
   31238:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3123c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31240:	ldr	r3, [fp, #-16]
   31244:	add	r3, r3, #1
   31248:	str	r3, [fp, #-16]
   3124c:	ldr	r3, [fp, #-16]
   31250:	cmp	r3, #255	; 0xff
   31254:	ble	3120c <__assert_fail@plt+0x1ffcc>
   31258:	b	31b64 <__assert_fail@plt+0x20924>
   3125c:	movw	r1, #7988	; 0x1f34
   31260:	movt	r1, #4
   31264:	ldr	r0, [fp, #-20]	; 0xffffffec
   31268:	bl	10f70 <strcmp@plt>
   3126c:	mov	r3, r0
   31270:	cmp	r3, #0
   31274:	bne	3135c <__assert_fail@plt+0x2011c>
   31278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3127c:	cmp	r3, #0
   31280:	movne	r3, #1
   31284:	moveq	r3, #0
   31288:	uxtb	r3, r3
   3128c:	cmp	r3, #0
   31290:	beq	31300 <__assert_fail@plt+0x200c0>
   31294:	mov	r3, #0
   31298:	str	r3, [fp, #-16]
   3129c:	b	312f0 <__assert_fail@plt+0x200b0>
   312a0:	bl	11120 <__ctype_b_loc@plt>
   312a4:	mov	r3, r0
   312a8:	ldr	r2, [r3]
   312ac:	ldr	r3, [fp, #-16]
   312b0:	lsl	r3, r3, #1
   312b4:	add	r3, r2, r3
   312b8:	ldrh	r3, [r3]
   312bc:	and	r3, r3, #8192	; 0x2000
   312c0:	cmp	r3, #0
   312c4:	beq	312e4 <__assert_fail@plt+0x200a4>
   312c8:	ldr	r3, [fp, #-16]
   312cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   312d0:	add	r3, r2, r3
   312d4:	ldrb	r3, [r3]
   312d8:	mov	r1, r3
   312dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   312e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   312e4:	ldr	r3, [fp, #-16]
   312e8:	add	r3, r3, #1
   312ec:	str	r3, [fp, #-16]
   312f0:	ldr	r3, [fp, #-16]
   312f4:	cmp	r3, #255	; 0xff
   312f8:	ble	312a0 <__assert_fail@plt+0x20060>
   312fc:	b	31b64 <__assert_fail@plt+0x20924>
   31300:	mov	r3, #0
   31304:	str	r3, [fp, #-16]
   31308:	b	3134c <__assert_fail@plt+0x2010c>
   3130c:	bl	11120 <__ctype_b_loc@plt>
   31310:	mov	r3, r0
   31314:	ldr	r2, [r3]
   31318:	ldr	r3, [fp, #-16]
   3131c:	lsl	r3, r3, #1
   31320:	add	r3, r2, r3
   31324:	ldrh	r3, [r3]
   31328:	and	r3, r3, #8192	; 0x2000
   3132c:	cmp	r3, #0
   31330:	beq	31340 <__assert_fail@plt+0x20100>
   31334:	ldr	r1, [fp, #-16]
   31338:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3133c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31340:	ldr	r3, [fp, #-16]
   31344:	add	r3, r3, #1
   31348:	str	r3, [fp, #-16]
   3134c:	ldr	r3, [fp, #-16]
   31350:	cmp	r3, #255	; 0xff
   31354:	ble	3130c <__assert_fail@plt+0x200cc>
   31358:	b	31b64 <__assert_fail@plt+0x20924>
   3135c:	movw	r1, #8012	; 0x1f4c
   31360:	movt	r1, #4
   31364:	ldr	r0, [fp, #-20]	; 0xffffffec
   31368:	bl	10f70 <strcmp@plt>
   3136c:	mov	r3, r0
   31370:	cmp	r3, #0
   31374:	bne	3145c <__assert_fail@plt+0x2021c>
   31378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3137c:	cmp	r3, #0
   31380:	movne	r3, #1
   31384:	moveq	r3, #0
   31388:	uxtb	r3, r3
   3138c:	cmp	r3, #0
   31390:	beq	31400 <__assert_fail@plt+0x201c0>
   31394:	mov	r3, #0
   31398:	str	r3, [fp, #-16]
   3139c:	b	313f0 <__assert_fail@plt+0x201b0>
   313a0:	bl	11120 <__ctype_b_loc@plt>
   313a4:	mov	r3, r0
   313a8:	ldr	r2, [r3]
   313ac:	ldr	r3, [fp, #-16]
   313b0:	lsl	r3, r3, #1
   313b4:	add	r3, r2, r3
   313b8:	ldrh	r3, [r3]
   313bc:	and	r3, r3, #1024	; 0x400
   313c0:	cmp	r3, #0
   313c4:	beq	313e4 <__assert_fail@plt+0x201a4>
   313c8:	ldr	r3, [fp, #-16]
   313cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   313d0:	add	r3, r2, r3
   313d4:	ldrb	r3, [r3]
   313d8:	mov	r1, r3
   313dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   313e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   313e4:	ldr	r3, [fp, #-16]
   313e8:	add	r3, r3, #1
   313ec:	str	r3, [fp, #-16]
   313f0:	ldr	r3, [fp, #-16]
   313f4:	cmp	r3, #255	; 0xff
   313f8:	ble	313a0 <__assert_fail@plt+0x20160>
   313fc:	b	31b64 <__assert_fail@plt+0x20924>
   31400:	mov	r3, #0
   31404:	str	r3, [fp, #-16]
   31408:	b	3144c <__assert_fail@plt+0x2020c>
   3140c:	bl	11120 <__ctype_b_loc@plt>
   31410:	mov	r3, r0
   31414:	ldr	r2, [r3]
   31418:	ldr	r3, [fp, #-16]
   3141c:	lsl	r3, r3, #1
   31420:	add	r3, r2, r3
   31424:	ldrh	r3, [r3]
   31428:	and	r3, r3, #1024	; 0x400
   3142c:	cmp	r3, #0
   31430:	beq	31440 <__assert_fail@plt+0x20200>
   31434:	ldr	r1, [fp, #-16]
   31438:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3143c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31440:	ldr	r3, [fp, #-16]
   31444:	add	r3, r3, #1
   31448:	str	r3, [fp, #-16]
   3144c:	ldr	r3, [fp, #-16]
   31450:	cmp	r3, #255	; 0xff
   31454:	ble	3140c <__assert_fail@plt+0x201cc>
   31458:	b	31b64 <__assert_fail@plt+0x20924>
   3145c:	movw	r1, #8028	; 0x1f5c
   31460:	movt	r1, #4
   31464:	ldr	r0, [fp, #-20]	; 0xffffffec
   31468:	bl	10f70 <strcmp@plt>
   3146c:	mov	r3, r0
   31470:	cmp	r3, #0
   31474:	bne	3155c <__assert_fail@plt+0x2031c>
   31478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3147c:	cmp	r3, #0
   31480:	movne	r3, #1
   31484:	moveq	r3, #0
   31488:	uxtb	r3, r3
   3148c:	cmp	r3, #0
   31490:	beq	31500 <__assert_fail@plt+0x202c0>
   31494:	mov	r3, #0
   31498:	str	r3, [fp, #-16]
   3149c:	b	314f0 <__assert_fail@plt+0x202b0>
   314a0:	bl	11120 <__ctype_b_loc@plt>
   314a4:	mov	r3, r0
   314a8:	ldr	r2, [r3]
   314ac:	ldr	r3, [fp, #-16]
   314b0:	lsl	r3, r3, #1
   314b4:	add	r3, r2, r3
   314b8:	ldrh	r3, [r3]
   314bc:	and	r3, r3, #2048	; 0x800
   314c0:	cmp	r3, #0
   314c4:	beq	314e4 <__assert_fail@plt+0x202a4>
   314c8:	ldr	r3, [fp, #-16]
   314cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   314d0:	add	r3, r2, r3
   314d4:	ldrb	r3, [r3]
   314d8:	mov	r1, r3
   314dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   314e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   314e4:	ldr	r3, [fp, #-16]
   314e8:	add	r3, r3, #1
   314ec:	str	r3, [fp, #-16]
   314f0:	ldr	r3, [fp, #-16]
   314f4:	cmp	r3, #255	; 0xff
   314f8:	ble	314a0 <__assert_fail@plt+0x20260>
   314fc:	b	31b64 <__assert_fail@plt+0x20924>
   31500:	mov	r3, #0
   31504:	str	r3, [fp, #-16]
   31508:	b	3154c <__assert_fail@plt+0x2030c>
   3150c:	bl	11120 <__ctype_b_loc@plt>
   31510:	mov	r3, r0
   31514:	ldr	r2, [r3]
   31518:	ldr	r3, [fp, #-16]
   3151c:	lsl	r3, r3, #1
   31520:	add	r3, r2, r3
   31524:	ldrh	r3, [r3]
   31528:	and	r3, r3, #2048	; 0x800
   3152c:	cmp	r3, #0
   31530:	beq	31540 <__assert_fail@plt+0x20300>
   31534:	ldr	r1, [fp, #-16]
   31538:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3153c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31540:	ldr	r3, [fp, #-16]
   31544:	add	r3, r3, #1
   31548:	str	r3, [fp, #-16]
   3154c:	ldr	r3, [fp, #-16]
   31550:	cmp	r3, #255	; 0xff
   31554:	ble	3150c <__assert_fail@plt+0x202cc>
   31558:	b	31b64 <__assert_fail@plt+0x20924>
   3155c:	movw	r1, #8036	; 0x1f64
   31560:	movt	r1, #4
   31564:	ldr	r0, [fp, #-20]	; 0xffffffec
   31568:	bl	10f70 <strcmp@plt>
   3156c:	mov	r3, r0
   31570:	cmp	r3, #0
   31574:	bne	3165c <__assert_fail@plt+0x2041c>
   31578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3157c:	cmp	r3, #0
   31580:	movne	r3, #1
   31584:	moveq	r3, #0
   31588:	uxtb	r3, r3
   3158c:	cmp	r3, #0
   31590:	beq	31600 <__assert_fail@plt+0x203c0>
   31594:	mov	r3, #0
   31598:	str	r3, [fp, #-16]
   3159c:	b	315f0 <__assert_fail@plt+0x203b0>
   315a0:	bl	11120 <__ctype_b_loc@plt>
   315a4:	mov	r3, r0
   315a8:	ldr	r2, [r3]
   315ac:	ldr	r3, [fp, #-16]
   315b0:	lsl	r3, r3, #1
   315b4:	add	r3, r2, r3
   315b8:	ldrh	r3, [r3]
   315bc:	and	r3, r3, #16384	; 0x4000
   315c0:	cmp	r3, #0
   315c4:	beq	315e4 <__assert_fail@plt+0x203a4>
   315c8:	ldr	r3, [fp, #-16]
   315cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   315d0:	add	r3, r2, r3
   315d4:	ldrb	r3, [r3]
   315d8:	mov	r1, r3
   315dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   315e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   315e4:	ldr	r3, [fp, #-16]
   315e8:	add	r3, r3, #1
   315ec:	str	r3, [fp, #-16]
   315f0:	ldr	r3, [fp, #-16]
   315f4:	cmp	r3, #255	; 0xff
   315f8:	ble	315a0 <__assert_fail@plt+0x20360>
   315fc:	b	31b64 <__assert_fail@plt+0x20924>
   31600:	mov	r3, #0
   31604:	str	r3, [fp, #-16]
   31608:	b	3164c <__assert_fail@plt+0x2040c>
   3160c:	bl	11120 <__ctype_b_loc@plt>
   31610:	mov	r3, r0
   31614:	ldr	r2, [r3]
   31618:	ldr	r3, [fp, #-16]
   3161c:	lsl	r3, r3, #1
   31620:	add	r3, r2, r3
   31624:	ldrh	r3, [r3]
   31628:	and	r3, r3, #16384	; 0x4000
   3162c:	cmp	r3, #0
   31630:	beq	31640 <__assert_fail@plt+0x20400>
   31634:	ldr	r1, [fp, #-16]
   31638:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3163c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31640:	ldr	r3, [fp, #-16]
   31644:	add	r3, r3, #1
   31648:	str	r3, [fp, #-16]
   3164c:	ldr	r3, [fp, #-16]
   31650:	cmp	r3, #255	; 0xff
   31654:	ble	3160c <__assert_fail@plt+0x203cc>
   31658:	b	31b64 <__assert_fail@plt+0x20924>
   3165c:	movw	r1, #7996	; 0x1f3c
   31660:	movt	r1, #4
   31664:	ldr	r0, [fp, #-20]	; 0xffffffec
   31668:	bl	10f70 <strcmp@plt>
   3166c:	mov	r3, r0
   31670:	cmp	r3, #0
   31674:	bne	3175c <__assert_fail@plt+0x2051c>
   31678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3167c:	cmp	r3, #0
   31680:	movne	r3, #1
   31684:	moveq	r3, #0
   31688:	uxtb	r3, r3
   3168c:	cmp	r3, #0
   31690:	beq	31700 <__assert_fail@plt+0x204c0>
   31694:	mov	r3, #0
   31698:	str	r3, [fp, #-16]
   3169c:	b	316f0 <__assert_fail@plt+0x204b0>
   316a0:	bl	11120 <__ctype_b_loc@plt>
   316a4:	mov	r3, r0
   316a8:	ldr	r2, [r3]
   316ac:	ldr	r3, [fp, #-16]
   316b0:	lsl	r3, r3, #1
   316b4:	add	r3, r2, r3
   316b8:	ldrh	r3, [r3]
   316bc:	and	r3, r3, #256	; 0x100
   316c0:	cmp	r3, #0
   316c4:	beq	316e4 <__assert_fail@plt+0x204a4>
   316c8:	ldr	r3, [fp, #-16]
   316cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   316d0:	add	r3, r2, r3
   316d4:	ldrb	r3, [r3]
   316d8:	mov	r1, r3
   316dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   316e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   316e4:	ldr	r3, [fp, #-16]
   316e8:	add	r3, r3, #1
   316ec:	str	r3, [fp, #-16]
   316f0:	ldr	r3, [fp, #-16]
   316f4:	cmp	r3, #255	; 0xff
   316f8:	ble	316a0 <__assert_fail@plt+0x20460>
   316fc:	b	31b64 <__assert_fail@plt+0x20924>
   31700:	mov	r3, #0
   31704:	str	r3, [fp, #-16]
   31708:	b	3174c <__assert_fail@plt+0x2050c>
   3170c:	bl	11120 <__ctype_b_loc@plt>
   31710:	mov	r3, r0
   31714:	ldr	r2, [r3]
   31718:	ldr	r3, [fp, #-16]
   3171c:	lsl	r3, r3, #1
   31720:	add	r3, r2, r3
   31724:	ldrh	r3, [r3]
   31728:	and	r3, r3, #256	; 0x100
   3172c:	cmp	r3, #0
   31730:	beq	31740 <__assert_fail@plt+0x20500>
   31734:	ldr	r1, [fp, #-16]
   31738:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3173c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31740:	ldr	r3, [fp, #-16]
   31744:	add	r3, r3, #1
   31748:	str	r3, [fp, #-16]
   3174c:	ldr	r3, [fp, #-16]
   31750:	cmp	r3, #255	; 0xff
   31754:	ble	3170c <__assert_fail@plt+0x204cc>
   31758:	b	31b64 <__assert_fail@plt+0x20924>
   3175c:	movw	r1, #8044	; 0x1f6c
   31760:	movt	r1, #4
   31764:	ldr	r0, [fp, #-20]	; 0xffffffec
   31768:	bl	10f70 <strcmp@plt>
   3176c:	mov	r3, r0
   31770:	cmp	r3, #0
   31774:	bne	3185c <__assert_fail@plt+0x2061c>
   31778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3177c:	cmp	r3, #0
   31780:	movne	r3, #1
   31784:	moveq	r3, #0
   31788:	uxtb	r3, r3
   3178c:	cmp	r3, #0
   31790:	beq	31800 <__assert_fail@plt+0x205c0>
   31794:	mov	r3, #0
   31798:	str	r3, [fp, #-16]
   3179c:	b	317f0 <__assert_fail@plt+0x205b0>
   317a0:	bl	11120 <__ctype_b_loc@plt>
   317a4:	mov	r3, r0
   317a8:	ldr	r2, [r3]
   317ac:	ldr	r3, [fp, #-16]
   317b0:	lsl	r3, r3, #1
   317b4:	add	r3, r2, r3
   317b8:	ldrh	r3, [r3]
   317bc:	and	r3, r3, #1
   317c0:	cmp	r3, #0
   317c4:	beq	317e4 <__assert_fail@plt+0x205a4>
   317c8:	ldr	r3, [fp, #-16]
   317cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   317d0:	add	r3, r2, r3
   317d4:	ldrb	r3, [r3]
   317d8:	mov	r1, r3
   317dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   317e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   317e4:	ldr	r3, [fp, #-16]
   317e8:	add	r3, r3, #1
   317ec:	str	r3, [fp, #-16]
   317f0:	ldr	r3, [fp, #-16]
   317f4:	cmp	r3, #255	; 0xff
   317f8:	ble	317a0 <__assert_fail@plt+0x20560>
   317fc:	b	31b64 <__assert_fail@plt+0x20924>
   31800:	mov	r3, #0
   31804:	str	r3, [fp, #-16]
   31808:	b	3184c <__assert_fail@plt+0x2060c>
   3180c:	bl	11120 <__ctype_b_loc@plt>
   31810:	mov	r3, r0
   31814:	ldr	r2, [r3]
   31818:	ldr	r3, [fp, #-16]
   3181c:	lsl	r3, r3, #1
   31820:	add	r3, r2, r3
   31824:	ldrh	r3, [r3]
   31828:	and	r3, r3, #1
   3182c:	cmp	r3, #0
   31830:	beq	31840 <__assert_fail@plt+0x20600>
   31834:	ldr	r1, [fp, #-16]
   31838:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3183c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31840:	ldr	r3, [fp, #-16]
   31844:	add	r3, r3, #1
   31848:	str	r3, [fp, #-16]
   3184c:	ldr	r3, [fp, #-16]
   31850:	cmp	r3, #255	; 0xff
   31854:	ble	3180c <__assert_fail@plt+0x205cc>
   31858:	b	31b64 <__assert_fail@plt+0x20924>
   3185c:	movw	r1, #8052	; 0x1f74
   31860:	movt	r1, #4
   31864:	ldr	r0, [fp, #-20]	; 0xffffffec
   31868:	bl	10f70 <strcmp@plt>
   3186c:	mov	r3, r0
   31870:	cmp	r3, #0
   31874:	bne	3195c <__assert_fail@plt+0x2071c>
   31878:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3187c:	cmp	r3, #0
   31880:	movne	r3, #1
   31884:	moveq	r3, #0
   31888:	uxtb	r3, r3
   3188c:	cmp	r3, #0
   31890:	beq	31900 <__assert_fail@plt+0x206c0>
   31894:	mov	r3, #0
   31898:	str	r3, [fp, #-16]
   3189c:	b	318f0 <__assert_fail@plt+0x206b0>
   318a0:	bl	11120 <__ctype_b_loc@plt>
   318a4:	mov	r3, r0
   318a8:	ldr	r2, [r3]
   318ac:	ldr	r3, [fp, #-16]
   318b0:	lsl	r3, r3, #1
   318b4:	add	r3, r2, r3
   318b8:	ldrh	r3, [r3]
   318bc:	sxth	r3, r3
   318c0:	cmp	r3, #0
   318c4:	bge	318e4 <__assert_fail@plt+0x206a4>
   318c8:	ldr	r3, [fp, #-16]
   318cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   318d0:	add	r3, r2, r3
   318d4:	ldrb	r3, [r3]
   318d8:	mov	r1, r3
   318dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   318e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   318e4:	ldr	r3, [fp, #-16]
   318e8:	add	r3, r3, #1
   318ec:	str	r3, [fp, #-16]
   318f0:	ldr	r3, [fp, #-16]
   318f4:	cmp	r3, #255	; 0xff
   318f8:	ble	318a0 <__assert_fail@plt+0x20660>
   318fc:	b	31b64 <__assert_fail@plt+0x20924>
   31900:	mov	r3, #0
   31904:	str	r3, [fp, #-16]
   31908:	b	3194c <__assert_fail@plt+0x2070c>
   3190c:	bl	11120 <__ctype_b_loc@plt>
   31910:	mov	r3, r0
   31914:	ldr	r2, [r3]
   31918:	ldr	r3, [fp, #-16]
   3191c:	lsl	r3, r3, #1
   31920:	add	r3, r2, r3
   31924:	ldrh	r3, [r3]
   31928:	sxth	r3, r3
   3192c:	cmp	r3, #0
   31930:	bge	31940 <__assert_fail@plt+0x20700>
   31934:	ldr	r1, [fp, #-16]
   31938:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3193c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31940:	ldr	r3, [fp, #-16]
   31944:	add	r3, r3, #1
   31948:	str	r3, [fp, #-16]
   3194c:	ldr	r3, [fp, #-16]
   31950:	cmp	r3, #255	; 0xff
   31954:	ble	3190c <__assert_fail@plt+0x206cc>
   31958:	b	31b64 <__assert_fail@plt+0x20924>
   3195c:	movw	r1, #8060	; 0x1f7c
   31960:	movt	r1, #4
   31964:	ldr	r0, [fp, #-20]	; 0xffffffec
   31968:	bl	10f70 <strcmp@plt>
   3196c:	mov	r3, r0
   31970:	cmp	r3, #0
   31974:	bne	31a5c <__assert_fail@plt+0x2081c>
   31978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3197c:	cmp	r3, #0
   31980:	movne	r3, #1
   31984:	moveq	r3, #0
   31988:	uxtb	r3, r3
   3198c:	cmp	r3, #0
   31990:	beq	31a00 <__assert_fail@plt+0x207c0>
   31994:	mov	r3, #0
   31998:	str	r3, [fp, #-16]
   3199c:	b	319f0 <__assert_fail@plt+0x207b0>
   319a0:	bl	11120 <__ctype_b_loc@plt>
   319a4:	mov	r3, r0
   319a8:	ldr	r2, [r3]
   319ac:	ldr	r3, [fp, #-16]
   319b0:	lsl	r3, r3, #1
   319b4:	add	r3, r2, r3
   319b8:	ldrh	r3, [r3]
   319bc:	and	r3, r3, #4
   319c0:	cmp	r3, #0
   319c4:	beq	319e4 <__assert_fail@plt+0x207a4>
   319c8:	ldr	r3, [fp, #-16]
   319cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   319d0:	add	r3, r2, r3
   319d4:	ldrb	r3, [r3]
   319d8:	mov	r1, r3
   319dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   319e0:	bl	23c60 <__assert_fail@plt+0x12a20>
   319e4:	ldr	r3, [fp, #-16]
   319e8:	add	r3, r3, #1
   319ec:	str	r3, [fp, #-16]
   319f0:	ldr	r3, [fp, #-16]
   319f4:	cmp	r3, #255	; 0xff
   319f8:	ble	319a0 <__assert_fail@plt+0x20760>
   319fc:	b	31b64 <__assert_fail@plt+0x20924>
   31a00:	mov	r3, #0
   31a04:	str	r3, [fp, #-16]
   31a08:	b	31a4c <__assert_fail@plt+0x2080c>
   31a0c:	bl	11120 <__ctype_b_loc@plt>
   31a10:	mov	r3, r0
   31a14:	ldr	r2, [r3]
   31a18:	ldr	r3, [fp, #-16]
   31a1c:	lsl	r3, r3, #1
   31a20:	add	r3, r2, r3
   31a24:	ldrh	r3, [r3]
   31a28:	and	r3, r3, #4
   31a2c:	cmp	r3, #0
   31a30:	beq	31a40 <__assert_fail@plt+0x20800>
   31a34:	ldr	r1, [fp, #-16]
   31a38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31a3c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31a40:	ldr	r3, [fp, #-16]
   31a44:	add	r3, r3, #1
   31a48:	str	r3, [fp, #-16]
   31a4c:	ldr	r3, [fp, #-16]
   31a50:	cmp	r3, #255	; 0xff
   31a54:	ble	31a0c <__assert_fail@plt+0x207cc>
   31a58:	b	31b64 <__assert_fail@plt+0x20924>
   31a5c:	movw	r1, #8068	; 0x1f84
   31a60:	movt	r1, #4
   31a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   31a68:	bl	10f70 <strcmp@plt>
   31a6c:	mov	r3, r0
   31a70:	cmp	r3, #0
   31a74:	bne	31b5c <__assert_fail@plt+0x2091c>
   31a78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a7c:	cmp	r3, #0
   31a80:	movne	r3, #1
   31a84:	moveq	r3, #0
   31a88:	uxtb	r3, r3
   31a8c:	cmp	r3, #0
   31a90:	beq	31b00 <__assert_fail@plt+0x208c0>
   31a94:	mov	r3, #0
   31a98:	str	r3, [fp, #-16]
   31a9c:	b	31af0 <__assert_fail@plt+0x208b0>
   31aa0:	bl	11120 <__ctype_b_loc@plt>
   31aa4:	mov	r3, r0
   31aa8:	ldr	r2, [r3]
   31aac:	ldr	r3, [fp, #-16]
   31ab0:	lsl	r3, r3, #1
   31ab4:	add	r3, r2, r3
   31ab8:	ldrh	r3, [r3]
   31abc:	and	r3, r3, #4096	; 0x1000
   31ac0:	cmp	r3, #0
   31ac4:	beq	31ae4 <__assert_fail@plt+0x208a4>
   31ac8:	ldr	r3, [fp, #-16]
   31acc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31ad0:	add	r3, r2, r3
   31ad4:	ldrb	r3, [r3]
   31ad8:	mov	r1, r3
   31adc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31ae0:	bl	23c60 <__assert_fail@plt+0x12a20>
   31ae4:	ldr	r3, [fp, #-16]
   31ae8:	add	r3, r3, #1
   31aec:	str	r3, [fp, #-16]
   31af0:	ldr	r3, [fp, #-16]
   31af4:	cmp	r3, #255	; 0xff
   31af8:	ble	31aa0 <__assert_fail@plt+0x20860>
   31afc:	b	31b64 <__assert_fail@plt+0x20924>
   31b00:	mov	r3, #0
   31b04:	str	r3, [fp, #-16]
   31b08:	b	31b4c <__assert_fail@plt+0x2090c>
   31b0c:	bl	11120 <__ctype_b_loc@plt>
   31b10:	mov	r3, r0
   31b14:	ldr	r2, [r3]
   31b18:	ldr	r3, [fp, #-16]
   31b1c:	lsl	r3, r3, #1
   31b20:	add	r3, r2, r3
   31b24:	ldrh	r3, [r3]
   31b28:	and	r3, r3, #4096	; 0x1000
   31b2c:	cmp	r3, #0
   31b30:	beq	31b40 <__assert_fail@plt+0x20900>
   31b34:	ldr	r1, [fp, #-16]
   31b38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31b3c:	bl	23c60 <__assert_fail@plt+0x12a20>
   31b40:	ldr	r3, [fp, #-16]
   31b44:	add	r3, r3, #1
   31b48:	str	r3, [fp, #-16]
   31b4c:	ldr	r3, [fp, #-16]
   31b50:	cmp	r3, #255	; 0xff
   31b54:	ble	31b0c <__assert_fail@plt+0x208cc>
   31b58:	b	31b64 <__assert_fail@plt+0x20924>
   31b5c:	mov	r3, #4
   31b60:	b	31b68 <__assert_fail@plt+0x20928>
   31b64:	mov	r3, #0
   31b68:	mov	r0, r3
   31b6c:	sub	sp, fp, #8
   31b70:	ldr	r4, [sp]
   31b74:	ldr	fp, [sp, #4]
   31b78:	add	sp, sp, #8
   31b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   31b80:	str	fp, [sp, #-8]!
   31b84:	str	lr, [sp, #4]
   31b88:	add	fp, sp, #4
   31b8c:	sub	sp, sp, #56	; 0x38
   31b90:	str	r0, [fp, #-40]	; 0xffffffd8
   31b94:	str	r1, [fp, #-44]	; 0xffffffd4
   31b98:	str	r2, [fp, #-48]	; 0xffffffd0
   31b9c:	str	r3, [fp, #-52]	; 0xffffffcc
   31ba0:	mov	r3, #0
   31ba4:	str	r3, [fp, #-28]	; 0xffffffe4
   31ba8:	mov	r1, #1
   31bac:	mov	r0, #32
   31bb0:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   31bb4:	mov	r3, r0
   31bb8:	str	r3, [fp, #-8]
   31bbc:	ldr	r3, [fp, #-8]
   31bc0:	cmp	r3, #0
   31bc4:	moveq	r3, #1
   31bc8:	movne	r3, #0
   31bcc:	uxtb	r3, r3
   31bd0:	cmp	r3, #0
   31bd4:	beq	31bec <__assert_fail@plt+0x209ac>
   31bd8:	ldr	r3, [fp, #8]
   31bdc:	mov	r2, #12
   31be0:	str	r2, [r3]
   31be4:	mov	r3, #0
   31be8:	b	31e50 <__assert_fail@plt+0x20c10>
   31bec:	mov	r1, #1
   31bf0:	mov	r0, #40	; 0x28
   31bf4:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   31bf8:	mov	r3, r0
   31bfc:	str	r3, [fp, #-12]
   31c00:	ldr	r3, [fp, #-12]
   31c04:	cmp	r3, #0
   31c08:	moveq	r3, #1
   31c0c:	movne	r3, #0
   31c10:	uxtb	r3, r3
   31c14:	cmp	r3, #0
   31c18:	beq	31c38 <__assert_fail@plt+0x209f8>
   31c1c:	ldr	r0, [fp, #-8]
   31c20:	bl	13798 <__assert_fail@plt+0x2558>
   31c24:	ldr	r3, [fp, #8]
   31c28:	mov	r2, #12
   31c2c:	str	r2, [r3]
   31c30:	mov	r3, #0
   31c34:	b	31e50 <__assert_fail@plt+0x20c10>
   31c38:	ldr	r2, [fp, #-12]
   31c3c:	ldrb	r3, [r2, #16]
   31c40:	ldrb	r1, [fp, #4]
   31c44:	bfi	r3, r1, #0, #1
   31c48:	strb	r3, [r2, #16]
   31c4c:	sub	r2, fp, #28
   31c50:	mov	r3, #0
   31c54:	str	r3, [sp, #4]
   31c58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31c5c:	str	r3, [sp]
   31c60:	mov	r3, r2
   31c64:	ldr	r2, [fp, #-12]
   31c68:	ldr	r1, [fp, #-8]
   31c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31c70:	bl	30e10 <__assert_fail@plt+0x1fbd0>
   31c74:	str	r0, [fp, #-16]
   31c78:	ldr	r3, [fp, #-16]
   31c7c:	cmp	r3, #0
   31c80:	movne	r3, #1
   31c84:	moveq	r3, #0
   31c88:	uxtb	r3, r3
   31c8c:	cmp	r3, #0
   31c90:	beq	31cd8 <__assert_fail@plt+0x20a98>
   31c94:	ldr	r0, [fp, #-8]
   31c98:	bl	13798 <__assert_fail@plt+0x2558>
   31c9c:	ldr	r0, [fp, #-12]
   31ca0:	bl	31f90 <__assert_fail@plt+0x20d50>
   31ca4:	ldr	r3, [fp, #8]
   31ca8:	ldr	r2, [fp, #-16]
   31cac:	str	r2, [r3]
   31cb0:	mov	r3, #0
   31cb4:	b	31e50 <__assert_fail@plt+0x20c10>
   31cb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31cbc:	ldrb	r3, [r3]
   31cc0:	mov	r1, r3
   31cc4:	ldr	r0, [fp, #-8]
   31cc8:	bl	23c60 <__assert_fail@plt+0x12a20>
   31ccc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31cd0:	add	r3, r3, #1
   31cd4:	str	r3, [fp, #-52]	; 0xffffffcc
   31cd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31cdc:	ldrb	r3, [r3]
   31ce0:	cmp	r3, #0
   31ce4:	bne	31cb8 <__assert_fail@plt+0x20a78>
   31ce8:	ldrb	r3, [fp, #4]
   31cec:	cmp	r3, #0
   31cf0:	beq	31cfc <__assert_fail@plt+0x20abc>
   31cf4:	ldr	r0, [fp, #-8]
   31cf8:	bl	23e98 <__assert_fail@plt+0x12c58>
   31cfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d00:	ldr	r3, [r3, #92]	; 0x5c
   31d04:	cmp	r3, #1
   31d08:	ble	31d20 <__assert_fail@plt+0x20ae0>
   31d0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d10:	ldr	r3, [r3, #60]	; 0x3c
   31d14:	mov	r1, r3
   31d18:	ldr	r0, [fp, #-8]
   31d1c:	bl	23f90 <__assert_fail@plt+0x12d50>
   31d20:	sub	r1, fp, #36	; 0x24
   31d24:	mov	r2, #0
   31d28:	mov	r3, #0
   31d2c:	strd	r2, [r1]
   31d30:	ldr	r3, [fp, #-8]
   31d34:	str	r3, [fp, #-36]	; 0xffffffdc
   31d38:	mov	r3, #3
   31d3c:	strb	r3, [fp, #-32]	; 0xffffffe0
   31d40:	sub	r3, fp, #36	; 0x24
   31d44:	mov	r2, #0
   31d48:	mov	r1, #0
   31d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31d50:	bl	32068 <__assert_fail@plt+0x20e28>
   31d54:	str	r0, [fp, #-20]	; 0xffffffec
   31d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   31d5c:	cmp	r3, #0
   31d60:	moveq	r3, #1
   31d64:	movne	r3, #0
   31d68:	uxtb	r3, r3
   31d6c:	cmp	r3, #0
   31d70:	bne	31e24 <__assert_fail@plt+0x20be4>
   31d74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d78:	ldr	r3, [r3, #92]	; 0x5c
   31d7c:	cmp	r3, #1
   31d80:	ble	31e14 <__assert_fail@plt+0x20bd4>
   31d84:	mov	r3, #6
   31d88:	strb	r3, [fp, #-32]	; 0xffffffe0
   31d8c:	ldr	r3, [fp, #-12]
   31d90:	str	r3, [fp, #-36]	; 0xffffffdc
   31d94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31d98:	ldrb	r3, [r2, #88]	; 0x58
   31d9c:	orr	r3, r3, #2
   31da0:	strb	r3, [r2, #88]	; 0x58
   31da4:	sub	r3, fp, #36	; 0x24
   31da8:	mov	r2, #0
   31dac:	mov	r1, #0
   31db0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31db4:	bl	32068 <__assert_fail@plt+0x20e28>
   31db8:	str	r0, [fp, #-24]	; 0xffffffe8
   31dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31dc0:	cmp	r3, #0
   31dc4:	moveq	r3, #1
   31dc8:	movne	r3, #0
   31dcc:	uxtb	r3, r3
   31dd0:	cmp	r3, #0
   31dd4:	bne	31e2c <__assert_fail@plt+0x20bec>
   31dd8:	mov	r3, #10
   31ddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31de0:	ldr	r1, [fp, #-20]	; 0xffffffec
   31de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31de8:	bl	32000 <__assert_fail@plt+0x20dc0>
   31dec:	str	r0, [fp, #-20]	; 0xffffffec
   31df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31df4:	cmp	r3, #0
   31df8:	movne	r3, #1
   31dfc:	moveq	r3, #0
   31e00:	uxtb	r3, r3
   31e04:	cmp	r3, #0
   31e08:	beq	31e30 <__assert_fail@plt+0x20bf0>
   31e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e10:	b	31e50 <__assert_fail@plt+0x20c10>
   31e14:	ldr	r0, [fp, #-12]
   31e18:	bl	31f90 <__assert_fail@plt+0x20d50>
   31e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e20:	b	31e50 <__assert_fail@plt+0x20c10>
   31e24:	nop	{0}
   31e28:	b	31e30 <__assert_fail@plt+0x20bf0>
   31e2c:	nop	{0}
   31e30:	ldr	r0, [fp, #-8]
   31e34:	bl	13798 <__assert_fail@plt+0x2558>
   31e38:	ldr	r0, [fp, #-12]
   31e3c:	bl	31f90 <__assert_fail@plt+0x20d50>
   31e40:	ldr	r3, [fp, #8]
   31e44:	mov	r2, #12
   31e48:	str	r2, [r3]
   31e4c:	mov	r3, #0
   31e50:	mov	r0, r3
   31e54:	sub	sp, fp, #4
   31e58:	ldr	fp, [sp]
   31e5c:	add	sp, sp, #4
   31e60:	pop	{pc}		; (ldr pc, [sp], #4)
   31e64:	str	fp, [sp, #-8]!
   31e68:	str	lr, [sp, #4]
   31e6c:	add	fp, sp, #4
   31e70:	sub	sp, sp, #24
   31e74:	str	r0, [fp, #-16]
   31e78:	str	r1, [fp, #-20]	; 0xffffffec
   31e7c:	str	r2, [fp, #-24]	; 0xffffffe8
   31e80:	mvn	r3, #0
   31e84:	str	r3, [fp, #-8]
   31e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31e8c:	ldr	r1, [fp, #-16]
   31e90:	ldr	r0, [fp, #-20]	; 0xffffffec
   31e94:	bl	2d348 <__assert_fail@plt+0x1c108>
   31e98:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e9c:	ldrb	r3, [r3]
   31ea0:	strb	r3, [fp, #-9]
   31ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   31ea8:	ldrb	r3, [r3, #4]
   31eac:	cmp	r3, #2
   31eb0:	moveq	r3, #1
   31eb4:	movne	r3, #0
   31eb8:	uxtb	r3, r3
   31ebc:	cmp	r3, #0
   31ec0:	beq	31ecc <__assert_fail@plt+0x20c8c>
   31ec4:	mvn	r3, #1
   31ec8:	b	31f7c <__assert_fail@plt+0x20d3c>
   31ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   31ed0:	ldrb	r3, [r3, #4]
   31ed4:	cmp	r3, #24
   31ed8:	beq	31f78 <__assert_fail@plt+0x20d38>
   31edc:	ldrb	r3, [fp, #-9]
   31ee0:	cmp	r3, #44	; 0x2c
   31ee4:	beq	31f78 <__assert_fail@plt+0x20d38>
   31ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   31eec:	ldrb	r3, [r3, #4]
   31ef0:	cmp	r3, #1
   31ef4:	bne	31f6c <__assert_fail@plt+0x20d2c>
   31ef8:	ldrb	r3, [fp, #-9]
   31efc:	cmp	r3, #47	; 0x2f
   31f00:	bls	31f6c <__assert_fail@plt+0x20d2c>
   31f04:	ldrb	r3, [fp, #-9]
   31f08:	cmp	r3, #57	; 0x39
   31f0c:	bhi	31f6c <__assert_fail@plt+0x20d2c>
   31f10:	ldr	r3, [fp, #-8]
   31f14:	cmn	r3, #2
   31f18:	beq	31f6c <__assert_fail@plt+0x20d2c>
   31f1c:	ldr	r3, [fp, #-8]
   31f20:	cmn	r3, #1
   31f24:	bne	31f34 <__assert_fail@plt+0x20cf4>
   31f28:	ldrb	r3, [fp, #-9]
   31f2c:	sub	r3, r3, #48	; 0x30
   31f30:	b	31f70 <__assert_fail@plt+0x20d30>
   31f34:	ldr	r2, [fp, #-8]
   31f38:	mov	r3, r2
   31f3c:	lsl	r3, r3, #2
   31f40:	add	r3, r3, r2
   31f44:	lsl	r3, r3, #1
   31f48:	mov	r2, r3
   31f4c:	ldrb	r3, [fp, #-9]
   31f50:	add	r3, r2, r3
   31f54:	movw	r2, #32816	; 0x8030
   31f58:	cmp	r3, r2
   31f5c:	movlt	r3, r3
   31f60:	movge	r3, r2
   31f64:	sub	r3, r3, #48	; 0x30
   31f68:	b	31f70 <__assert_fail@plt+0x20d30>
   31f6c:	mvn	r3, #1
   31f70:	str	r3, [fp, #-8]
   31f74:	b	31e88 <__assert_fail@plt+0x20c48>
   31f78:	ldr	r3, [fp, #-8]
   31f7c:	mov	r0, r3
   31f80:	sub	sp, fp, #4
   31f84:	ldr	fp, [sp]
   31f88:	add	sp, sp, #4
   31f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   31f90:	str	fp, [sp, #-8]!
   31f94:	str	lr, [sp, #4]
   31f98:	add	fp, sp, #4
   31f9c:	sub	sp, sp, #8
   31fa0:	str	r0, [fp, #-8]
   31fa4:	ldr	r3, [fp, #-8]
   31fa8:	ldr	r3, [r3]
   31fac:	mov	r0, r3
   31fb0:	bl	13798 <__assert_fail@plt+0x2558>
   31fb4:	ldr	r3, [fp, #-8]
   31fb8:	ldr	r3, [r3, #4]
   31fbc:	mov	r0, r3
   31fc0:	bl	13798 <__assert_fail@plt+0x2558>
   31fc4:	ldr	r3, [fp, #-8]
   31fc8:	ldr	r3, [r3, #8]
   31fcc:	mov	r0, r3
   31fd0:	bl	13798 <__assert_fail@plt+0x2558>
   31fd4:	ldr	r3, [fp, #-8]
   31fd8:	ldr	r3, [r3, #12]
   31fdc:	mov	r0, r3
   31fe0:	bl	13798 <__assert_fail@plt+0x2558>
   31fe4:	ldr	r0, [fp, #-8]
   31fe8:	bl	13798 <__assert_fail@plt+0x2558>
   31fec:	nop	{0}
   31ff0:	sub	sp, fp, #4
   31ff4:	ldr	fp, [sp]
   31ff8:	add	sp, sp, #4
   31ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   32000:	str	fp, [sp, #-8]!
   32004:	str	lr, [sp, #4]
   32008:	add	fp, sp, #4
   3200c:	sub	sp, sp, #24
   32010:	str	r0, [fp, #-16]
   32014:	str	r1, [fp, #-20]	; 0xffffffec
   32018:	str	r2, [fp, #-24]	; 0xffffffe8
   3201c:	str	r3, [fp, #-28]	; 0xffffffe4
   32020:	sub	r1, fp, #12
   32024:	mov	r2, #0
   32028:	mov	r3, #0
   3202c:	strd	r2, [r1]
   32030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32034:	uxtb	r3, r3
   32038:	strb	r3, [fp, #-8]
   3203c:	sub	r3, fp, #12
   32040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32044:	ldr	r1, [fp, #-20]	; 0xffffffec
   32048:	ldr	r0, [fp, #-16]
   3204c:	bl	32068 <__assert_fail@plt+0x20e28>
   32050:	mov	r3, r0
   32054:	mov	r0, r3
   32058:	sub	sp, fp, #4
   3205c:	ldr	fp, [sp]
   32060:	add	sp, sp, #4
   32064:	pop	{pc}		; (ldr pc, [sp], #4)
   32068:	str	fp, [sp, #-8]!
   3206c:	str	lr, [sp, #4]
   32070:	add	fp, sp, #4
   32074:	sub	sp, sp, #24
   32078:	str	r0, [fp, #-16]
   3207c:	str	r1, [fp, #-20]	; 0xffffffec
   32080:	str	r2, [fp, #-24]	; 0xffffffe8
   32084:	str	r3, [fp, #-28]	; 0xffffffe4
   32088:	ldr	r3, [fp, #-16]
   3208c:	ldr	r3, [r3, #64]	; 0x40
   32090:	cmp	r3, #31
   32094:	moveq	r3, #1
   32098:	movne	r3, #0
   3209c:	uxtb	r3, r3
   320a0:	cmp	r3, #0
   320a4:	beq	320f4 <__assert_fail@plt+0x20eb4>
   320a8:	mov	r0, #996	; 0x3e4
   320ac:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   320b0:	mov	r3, r0
   320b4:	str	r3, [fp, #-8]
   320b8:	ldr	r3, [fp, #-8]
   320bc:	cmp	r3, #0
   320c0:	bne	320cc <__assert_fail@plt+0x20e8c>
   320c4:	mov	r3, #0
   320c8:	b	321d4 <__assert_fail@plt+0x20f94>
   320cc:	ldr	r3, [fp, #-16]
   320d0:	ldr	r2, [r3, #56]	; 0x38
   320d4:	ldr	r3, [fp, #-8]
   320d8:	str	r2, [r3]
   320dc:	ldr	r3, [fp, #-16]
   320e0:	ldr	r2, [fp, #-8]
   320e4:	str	r2, [r3, #56]	; 0x38
   320e8:	ldr	r3, [fp, #-16]
   320ec:	mov	r2, #0
   320f0:	str	r2, [r3, #64]	; 0x40
   320f4:	ldr	r3, [fp, #-16]
   320f8:	ldr	r2, [r3, #56]	; 0x38
   320fc:	ldr	r3, [fp, #-16]
   32100:	ldr	r3, [r3, #64]	; 0x40
   32104:	add	r0, r3, #1
   32108:	ldr	r1, [fp, #-16]
   3210c:	str	r0, [r1, #64]	; 0x40
   32110:	lsl	r3, r3, #5
   32114:	add	r3, r2, r3
   32118:	add	r3, r3, #4
   3211c:	str	r3, [fp, #-12]
   32120:	ldr	r3, [fp, #-12]
   32124:	mov	r2, #0
   32128:	str	r2, [r3]
   3212c:	ldr	r3, [fp, #-12]
   32130:	ldr	r2, [fp, #-20]	; 0xffffffec
   32134:	str	r2, [r3, #4]
   32138:	ldr	r3, [fp, #-12]
   3213c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32140:	str	r2, [r3, #8]
   32144:	ldr	r3, [fp, #-12]
   32148:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3214c:	add	r1, r3, #20
   32150:	mov	r3, r2
   32154:	ldrd	r2, [r3]
   32158:	strd	r2, [r1]
   3215c:	ldr	r2, [fp, #-12]
   32160:	ldrb	r3, [r2, #26]
   32164:	bfc	r3, #2, #1
   32168:	strb	r3, [r2, #26]
   3216c:	ldr	r2, [fp, #-12]
   32170:	ldrb	r3, [r2, #26]
   32174:	bfc	r3, #3, #1
   32178:	strb	r3, [r2, #26]
   3217c:	ldr	r3, [fp, #-12]
   32180:	mov	r2, #0
   32184:	str	r2, [r3, #12]
   32188:	ldr	r3, [fp, #-12]
   3218c:	mov	r2, #0
   32190:	str	r2, [r3, #16]
   32194:	ldr	r3, [fp, #-12]
   32198:	mvn	r2, #0
   3219c:	str	r2, [r3, #28]
   321a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   321a4:	cmp	r3, #0
   321a8:	beq	321b8 <__assert_fail@plt+0x20f78>
   321ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   321b0:	ldr	r2, [fp, #-12]
   321b4:	str	r2, [r3]
   321b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   321bc:	cmp	r3, #0
   321c0:	beq	321d0 <__assert_fail@plt+0x20f90>
   321c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   321c8:	ldr	r2, [fp, #-12]
   321cc:	str	r2, [r3]
   321d0:	ldr	r3, [fp, #-12]
   321d4:	mov	r0, r3
   321d8:	sub	sp, fp, #4
   321dc:	ldr	fp, [sp]
   321e0:	add	sp, sp, #4
   321e4:	pop	{pc}		; (ldr pc, [sp], #4)
   321e8:	push	{fp}		; (str fp, [sp, #-4]!)
   321ec:	add	fp, sp, #0
   321f0:	sub	sp, sp, #20
   321f4:	str	r0, [fp, #-16]
   321f8:	str	r1, [fp, #-20]	; 0xffffffec
   321fc:	ldr	r3, [fp, #-16]
   32200:	str	r3, [fp, #-8]
   32204:	ldr	r3, [fp, #-20]	; 0xffffffec
   32208:	ldrb	r3, [r3, #24]
   3220c:	cmp	r3, #17
   32210:	bne	32238 <__assert_fail@plt+0x20ff8>
   32214:	ldr	r3, [fp, #-20]	; 0xffffffec
   32218:	ldr	r3, [r3, #20]
   3221c:	ldr	r2, [fp, #-8]
   32220:	cmp	r2, r3
   32224:	bne	32238 <__assert_fail@plt+0x20ff8>
   32228:	ldr	r2, [fp, #-20]	; 0xffffffec
   3222c:	ldrb	r3, [r2, #26]
   32230:	orr	r3, r3, #8
   32234:	strb	r3, [r2, #26]
   32238:	mov	r3, #0
   3223c:	mov	r0, r3
   32240:	add	sp, fp, #0
   32244:	pop	{fp}		; (ldr fp, [sp], #4)
   32248:	bx	lr
   3224c:	str	fp, [sp, #-8]!
   32250:	str	lr, [sp, #4]
   32254:	add	fp, sp, #4
   32258:	sub	sp, sp, #8
   3225c:	str	r0, [fp, #-8]
   32260:	ldr	r3, [fp, #-8]
   32264:	ldrb	r3, [r3, #4]
   32268:	cmp	r3, #6
   3226c:	bne	3229c <__assert_fail@plt+0x2105c>
   32270:	ldr	r3, [fp, #-8]
   32274:	ldrb	r3, [r3, #6]
   32278:	and	r3, r3, #4
   3227c:	uxtb	r3, r3
   32280:	cmp	r3, #0
   32284:	bne	3229c <__assert_fail@plt+0x2105c>
   32288:	ldr	r3, [fp, #-8]
   3228c:	ldr	r3, [r3]
   32290:	mov	r0, r3
   32294:	bl	31f90 <__assert_fail@plt+0x20d50>
   32298:	b	322d4 <__assert_fail@plt+0x21094>
   3229c:	ldr	r3, [fp, #-8]
   322a0:	ldrb	r3, [r3, #4]
   322a4:	cmp	r3, #3
   322a8:	bne	322d4 <__assert_fail@plt+0x21094>
   322ac:	ldr	r3, [fp, #-8]
   322b0:	ldrb	r3, [r3, #6]
   322b4:	and	r3, r3, #4
   322b8:	uxtb	r3, r3
   322bc:	cmp	r3, #0
   322c0:	bne	322d4 <__assert_fail@plt+0x21094>
   322c4:	ldr	r3, [fp, #-8]
   322c8:	ldr	r3, [r3]
   322cc:	mov	r0, r3
   322d0:	bl	13798 <__assert_fail@plt+0x2558>
   322d4:	nop	{0}
   322d8:	sub	sp, fp, #4
   322dc:	ldr	fp, [sp]
   322e0:	add	sp, sp, #4
   322e4:	pop	{pc}		; (ldr pc, [sp], #4)
   322e8:	str	fp, [sp, #-8]!
   322ec:	str	lr, [sp, #4]
   322f0:	add	fp, sp, #4
   322f4:	sub	sp, sp, #8
   322f8:	str	r0, [fp, #-8]
   322fc:	str	r1, [fp, #-12]
   32300:	ldr	r3, [fp, #-12]
   32304:	add	r3, r3, #20
   32308:	mov	r0, r3
   3230c:	bl	3224c <__assert_fail@plt+0x2100c>
   32310:	mov	r3, #0
   32314:	mov	r0, r3
   32318:	sub	sp, fp, #4
   3231c:	ldr	fp, [sp]
   32320:	add	sp, sp, #4
   32324:	pop	{pc}		; (ldr pc, [sp], #4)
   32328:	str	fp, [sp, #-8]!
   3232c:	str	lr, [sp, #4]
   32330:	add	fp, sp, #4
   32334:	sub	sp, sp, #32
   32338:	str	r0, [fp, #-32]	; 0xffffffe0
   3233c:	str	r1, [fp, #-36]	; 0xffffffdc
   32340:	sub	r3, fp, #24
   32344:	str	r3, [fp, #-12]
   32348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3234c:	ldr	r3, [r3]
   32350:	str	r3, [fp, #-16]
   32354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32358:	str	r3, [fp, #-8]
   3235c:	ldr	r3, [fp, #-8]
   32360:	add	r3, r3, #20
   32364:	mov	r2, #0
   32368:	mov	r1, #0
   3236c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32370:	bl	32068 <__assert_fail@plt+0x20e28>
   32374:	mov	r2, r0
   32378:	ldr	r3, [fp, #-12]
   3237c:	str	r2, [r3]
   32380:	ldr	r3, [fp, #-12]
   32384:	ldr	r3, [r3]
   32388:	cmp	r3, #0
   3238c:	bne	32398 <__assert_fail@plt+0x21158>
   32390:	mov	r3, #0
   32394:	b	32474 <__assert_fail@plt+0x21234>
   32398:	ldr	r3, [fp, #-12]
   3239c:	ldr	r3, [r3]
   323a0:	ldr	r2, [fp, #-16]
   323a4:	str	r2, [r3]
   323a8:	ldr	r3, [fp, #-12]
   323ac:	ldr	r2, [r3]
   323b0:	ldrb	r3, [r2, #26]
   323b4:	orr	r3, r3, #4
   323b8:	strb	r3, [r2, #26]
   323bc:	ldr	r3, [fp, #-12]
   323c0:	ldr	r3, [r3]
   323c4:	str	r3, [fp, #-16]
   323c8:	ldr	r3, [fp, #-8]
   323cc:	ldr	r3, [r3, #4]
   323d0:	cmp	r3, #0
   323d4:	beq	323f4 <__assert_fail@plt+0x211b4>
   323d8:	ldr	r3, [fp, #-8]
   323dc:	ldr	r3, [r3, #4]
   323e0:	str	r3, [fp, #-8]
   323e4:	ldr	r3, [fp, #-16]
   323e8:	add	r3, r3, #4
   323ec:	str	r3, [fp, #-12]
   323f0:	b	3235c <__assert_fail@plt+0x2111c>
   323f4:	mov	r3, #0
   323f8:	str	r3, [fp, #-20]	; 0xffffffec
   323fc:	b	32434 <__assert_fail@plt+0x211f4>
   32400:	ldr	r3, [fp, #-8]
   32404:	str	r3, [fp, #-20]	; 0xffffffec
   32408:	ldr	r3, [fp, #-8]
   3240c:	ldr	r3, [r3]
   32410:	str	r3, [fp, #-8]
   32414:	ldr	r3, [fp, #-16]
   32418:	ldr	r3, [r3]
   3241c:	str	r3, [fp, #-16]
   32420:	ldr	r3, [fp, #-8]
   32424:	cmp	r3, #0
   32428:	bne	32434 <__assert_fail@plt+0x211f4>
   3242c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32430:	b	32474 <__assert_fail@plt+0x21234>
   32434:	ldr	r3, [fp, #-8]
   32438:	ldr	r3, [r3, #8]
   3243c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32440:	cmp	r2, r3
   32444:	beq	32400 <__assert_fail@plt+0x211c0>
   32448:	ldr	r3, [fp, #-8]
   3244c:	ldr	r3, [r3, #8]
   32450:	cmp	r3, #0
   32454:	beq	32400 <__assert_fail@plt+0x211c0>
   32458:	ldr	r3, [fp, #-8]
   3245c:	ldr	r3, [r3, #8]
   32460:	str	r3, [fp, #-8]
   32464:	ldr	r3, [fp, #-16]
   32468:	add	r3, r3, #8
   3246c:	str	r3, [fp, #-12]
   32470:	b	3235c <__assert_fail@plt+0x2111c>
   32474:	mov	r0, r3
   32478:	sub	sp, fp, #4
   3247c:	ldr	fp, [sp]
   32480:	add	sp, sp, #4
   32484:	pop	{pc}		; (ldr pc, [sp], #4)
   32488:	str	fp, [sp, #-8]!
   3248c:	str	lr, [sp, #4]
   32490:	add	fp, sp, #4
   32494:	sub	sp, sp, #56	; 0x38
   32498:	str	r0, [fp, #-24]	; 0xffffffe8
   3249c:	str	r1, [fp, #-28]	; 0xffffffe4
   324a0:	str	r2, [fp, #-32]	; 0xffffffe0
   324a4:	str	r3, [fp, #-36]	; 0xffffffdc
   324a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   324ac:	ldr	r3, [r3]
   324b0:	str	r3, [fp, #-20]	; 0xffffffec
   324b4:	ldr	r3, [fp, #4]
   324b8:	bic	r3, r3, #7
   324bc:	cmp	r3, #0
   324c0:	beq	324cc <__assert_fail@plt+0x2128c>
   324c4:	mov	r3, #2
   324c8:	b	32628 <__assert_fail@plt+0x213e8>
   324cc:	ldr	r3, [fp, #4]
   324d0:	and	r3, r3, #4
   324d4:	cmp	r3, #0
   324d8:	beq	324f8 <__assert_fail@plt+0x212b8>
   324dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   324e0:	ldr	r3, [r3]
   324e4:	str	r3, [fp, #-12]
   324e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   324ec:	ldr	r3, [r3, #4]
   324f0:	str	r3, [fp, #-16]
   324f4:	b	32510 <__assert_fail@plt+0x212d0>
   324f8:	mov	r3, #0
   324fc:	str	r3, [fp, #-12]
   32500:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32504:	bl	11144 <strlen@plt>
   32508:	mov	r3, r0
   3250c:	str	r3, [fp, #-16]
   32510:	movw	r3, #0
   32514:	movt	r3, #0
   32518:	cmp	r3, #0
   3251c:	bne	32530 <__assert_fail@plt+0x212f0>
   32520:	movw	r3, #0
   32524:	movt	r3, #0
   32528:	cmp	r3, #0
   3252c:	beq	32544 <__assert_fail@plt+0x21304>
   32530:	ldr	r3, [fp, #-20]	; 0xffffffec
   32534:	add	r3, r3, #136	; 0x88
   32538:	mov	r0, r3
   3253c:	bl	10fd0 <pthread_mutex_lock@plt>
   32540:	nop	{0}
   32544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32548:	ldrb	r3, [r3, #28]
   3254c:	and	r3, r3, #16
   32550:	uxtb	r3, r3
   32554:	cmp	r3, #0
   32558:	beq	325a0 <__assert_fail@plt+0x21360>
   3255c:	ldr	r3, [fp, #4]
   32560:	str	r3, [sp, #16]
   32564:	mov	r3, #0
   32568:	str	r3, [sp, #12]
   3256c:	mov	r3, #0
   32570:	str	r3, [sp, #8]
   32574:	ldr	r3, [fp, #-16]
   32578:	str	r3, [sp, #4]
   3257c:	ldr	r3, [fp, #-16]
   32580:	str	r3, [sp]
   32584:	ldr	r3, [fp, #-12]
   32588:	ldr	r2, [fp, #-16]
   3258c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32594:	bl	33220 <__assert_fail@plt+0x21fe0>
   32598:	str	r0, [fp, #-8]
   3259c:	b	325e0 <__assert_fail@plt+0x213a0>
   325a0:	ldr	r3, [fp, #4]
   325a4:	str	r3, [sp, #16]
   325a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   325ac:	str	r3, [sp, #12]
   325b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   325b4:	str	r3, [sp, #8]
   325b8:	ldr	r3, [fp, #-16]
   325bc:	str	r3, [sp, #4]
   325c0:	ldr	r3, [fp, #-16]
   325c4:	str	r3, [sp]
   325c8:	ldr	r3, [fp, #-12]
   325cc:	ldr	r2, [fp, #-16]
   325d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   325d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   325d8:	bl	33220 <__assert_fail@plt+0x21fe0>
   325dc:	str	r0, [fp, #-8]
   325e0:	movw	r3, #0
   325e4:	movt	r3, #0
   325e8:	cmp	r3, #0
   325ec:	bne	32600 <__assert_fail@plt+0x213c0>
   325f0:	movw	r3, #0
   325f4:	movt	r3, #0
   325f8:	cmp	r3, #0
   325fc:	beq	32614 <__assert_fail@plt+0x213d4>
   32600:	ldr	r3, [fp, #-20]	; 0xffffffec
   32604:	add	r3, r3, #136	; 0x88
   32608:	mov	r0, r3
   3260c:	bl	10f28 <pthread_mutex_unlock@plt>
   32610:	nop	{0}
   32614:	ldr	r3, [fp, #-8]
   32618:	cmp	r3, #0
   3261c:	movne	r3, #1
   32620:	moveq	r3, #0
   32624:	uxtb	r3, r3
   32628:	mov	r0, r3
   3262c:	sub	sp, fp, #4
   32630:	ldr	fp, [sp]
   32634:	add	sp, sp, #4
   32638:	pop	{pc}		; (ldr pc, [sp], #4)
   3263c:	str	fp, [sp, #-8]!
   32640:	str	lr, [sp, #4]
   32644:	add	fp, sp, #4
   32648:	sub	sp, sp, #32
   3264c:	str	r0, [fp, #-8]
   32650:	str	r1, [fp, #-12]
   32654:	str	r2, [fp, #-16]
   32658:	str	r3, [fp, #-20]	; 0xffffffec
   3265c:	mov	r3, #1
   32660:	str	r3, [sp, #12]
   32664:	ldr	r3, [fp, #4]
   32668:	str	r3, [sp, #8]
   3266c:	ldr	r3, [fp, #-16]
   32670:	str	r3, [sp, #4]
   32674:	mov	r3, #0
   32678:	str	r3, [sp]
   3267c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32680:	ldr	r2, [fp, #-16]
   32684:	ldr	r1, [fp, #-12]
   32688:	ldr	r0, [fp, #-8]
   3268c:	bl	329c8 <__assert_fail@plt+0x21788>
   32690:	mov	r3, r0
   32694:	mov	r0, r3
   32698:	sub	sp, fp, #4
   3269c:	ldr	fp, [sp]
   326a0:	add	sp, sp, #4
   326a4:	pop	{pc}		; (ldr pc, [sp], #4)
   326a8:	str	fp, [sp, #-8]!
   326ac:	str	lr, [sp, #4]
   326b0:	add	fp, sp, #4
   326b4:	sub	sp, sp, #32
   326b8:	str	r0, [fp, #-8]
   326bc:	str	r1, [fp, #-12]
   326c0:	str	r2, [fp, #-16]
   326c4:	str	r3, [fp, #-20]	; 0xffffffec
   326c8:	mov	r3, #0
   326cc:	str	r3, [sp, #12]
   326d0:	ldr	r3, [fp, #8]
   326d4:	str	r3, [sp, #8]
   326d8:	ldr	r3, [fp, #-16]
   326dc:	str	r3, [sp, #4]
   326e0:	ldr	r3, [fp, #4]
   326e4:	str	r3, [sp]
   326e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   326ec:	ldr	r2, [fp, #-16]
   326f0:	ldr	r1, [fp, #-12]
   326f4:	ldr	r0, [fp, #-8]
   326f8:	bl	329c8 <__assert_fail@plt+0x21788>
   326fc:	mov	r3, r0
   32700:	mov	r0, r3
   32704:	sub	sp, fp, #4
   32708:	ldr	fp, [sp]
   3270c:	add	sp, sp, #4
   32710:	pop	{pc}		; (ldr pc, [sp], #4)
   32714:	str	fp, [sp, #-8]!
   32718:	str	lr, [sp, #4]
   3271c:	add	fp, sp, #4
   32720:	sub	sp, sp, #40	; 0x28
   32724:	str	r0, [fp, #-8]
   32728:	str	r1, [fp, #-12]
   3272c:	str	r2, [fp, #-16]
   32730:	str	r3, [fp, #-20]	; 0xffffffec
   32734:	mov	r3, #1
   32738:	str	r3, [sp, #20]
   3273c:	ldr	r3, [fp, #16]
   32740:	str	r3, [sp, #16]
   32744:	ldr	r3, [fp, #12]
   32748:	str	r3, [sp, #12]
   3274c:	mov	r3, #0
   32750:	str	r3, [sp, #8]
   32754:	ldr	r3, [fp, #8]
   32758:	str	r3, [sp, #4]
   3275c:	ldr	r3, [fp, #4]
   32760:	str	r3, [sp]
   32764:	ldr	r3, [fp, #-20]	; 0xffffffec
   32768:	ldr	r2, [fp, #-16]
   3276c:	ldr	r1, [fp, #-12]
   32770:	ldr	r0, [fp, #-8]
   32774:	bl	3280c <__assert_fail@plt+0x215cc>
   32778:	mov	r3, r0
   3277c:	mov	r0, r3
   32780:	sub	sp, fp, #4
   32784:	ldr	fp, [sp]
   32788:	add	sp, sp, #4
   3278c:	pop	{pc}		; (ldr pc, [sp], #4)
   32790:	str	fp, [sp, #-8]!
   32794:	str	lr, [sp, #4]
   32798:	add	fp, sp, #4
   3279c:	sub	sp, sp, #40	; 0x28
   327a0:	str	r0, [fp, #-8]
   327a4:	str	r1, [fp, #-12]
   327a8:	str	r2, [fp, #-16]
   327ac:	str	r3, [fp, #-20]	; 0xffffffec
   327b0:	mov	r3, #0
   327b4:	str	r3, [sp, #20]
   327b8:	ldr	r3, [fp, #20]
   327bc:	str	r3, [sp, #16]
   327c0:	ldr	r3, [fp, #16]
   327c4:	str	r3, [sp, #12]
   327c8:	ldr	r3, [fp, #12]
   327cc:	str	r3, [sp, #8]
   327d0:	ldr	r3, [fp, #8]
   327d4:	str	r3, [sp, #4]
   327d8:	ldr	r3, [fp, #4]
   327dc:	str	r3, [sp]
   327e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   327e4:	ldr	r2, [fp, #-16]
   327e8:	ldr	r1, [fp, #-12]
   327ec:	ldr	r0, [fp, #-8]
   327f0:	bl	3280c <__assert_fail@plt+0x215cc>
   327f4:	mov	r3, r0
   327f8:	mov	r0, r3
   327fc:	sub	sp, fp, #4
   32800:	ldr	fp, [sp]
   32804:	add	sp, sp, #4
   32808:	pop	{pc}		; (ldr pc, [sp], #4)
   3280c:	str	fp, [sp, #-8]!
   32810:	str	lr, [sp, #4]
   32814:	add	fp, sp, #4
   32818:	sub	sp, sp, #48	; 0x30
   3281c:	str	r0, [fp, #-24]	; 0xffffffe8
   32820:	str	r1, [fp, #-28]	; 0xffffffe4
   32824:	str	r2, [fp, #-32]	; 0xffffffe0
   32828:	str	r3, [fp, #-36]	; 0xffffffdc
   3282c:	mov	r3, #0
   32830:	str	r3, [fp, #-12]
   32834:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32838:	lsr	r3, r3, #31
   3283c:	uxtb	r3, r3
   32840:	cmp	r3, #0
   32844:	bne	3285c <__assert_fail@plt+0x2161c>
   32848:	ldr	r3, [fp, #4]
   3284c:	lsr	r3, r3, #31
   32850:	uxtb	r3, r3
   32854:	cmp	r3, #0
   32858:	beq	32864 <__assert_fail@plt+0x21624>
   3285c:	mov	r3, #1
   32860:	b	32868 <__assert_fail@plt+0x21628>
   32864:	mov	r3, #0
   32868:	cmp	r3, #0
   3286c:	bne	32884 <__assert_fail@plt+0x21644>
   32870:	ldr	r3, [fp, #20]
   32874:	lsr	r3, r3, #31
   32878:	uxtb	r3, r3
   3287c:	cmp	r3, #0
   32880:	beq	3288c <__assert_fail@plt+0x2164c>
   32884:	mov	r3, #1
   32888:	b	32890 <__assert_fail@plt+0x21650>
   3288c:	mov	r3, #0
   32890:	cmp	r3, #0
   32894:	bne	328c8 <__assert_fail@plt+0x21688>
   32898:	mov	r1, #0
   3289c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   328a0:	ldr	r3, [fp, #4]
   328a4:	adds	r3, r2, r3
   328a8:	bvc	328b0 <__assert_fail@plt+0x21670>
   328ac:	mov	r1, #1
   328b0:	str	r3, [fp, #-20]	; 0xffffffec
   328b4:	mov	r3, r1
   328b8:	and	r3, r3, #1
   328bc:	uxtb	r3, r3
   328c0:	cmp	r3, #0
   328c4:	beq	328d0 <__assert_fail@plt+0x21690>
   328c8:	mvn	r3, #1
   328cc:	b	329b4 <__assert_fail@plt+0x21774>
   328d0:	ldr	r3, [fp, #4]
   328d4:	cmp	r3, #0
   328d8:	ble	32968 <__assert_fail@plt+0x21728>
   328dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   328e0:	cmp	r3, #0
   328e4:	ble	3295c <__assert_fail@plt+0x2171c>
   328e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   328ec:	mov	r0, r3
   328f0:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   328f4:	mov	r3, r0
   328f8:	str	r3, [fp, #-12]
   328fc:	ldr	r3, [fp, #-12]
   32900:	cmp	r3, #0
   32904:	moveq	r3, #1
   32908:	movne	r3, #0
   3290c:	uxtb	r3, r3
   32910:	cmp	r3, #0
   32914:	beq	32920 <__assert_fail@plt+0x216e0>
   32918:	mvn	r3, #1
   3291c:	b	329b4 <__assert_fail@plt+0x21774>
   32920:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32924:	mov	r2, r3
   32928:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3292c:	ldr	r0, [fp, #-12]
   32930:	bl	10fe8 <memcpy@plt>
   32934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32938:	ldr	r2, [fp, #-12]
   3293c:	add	r3, r2, r3
   32940:	ldr	r2, [fp, #4]
   32944:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32948:	mov	r0, r3
   3294c:	bl	10fe8 <memcpy@plt>
   32950:	ldr	r3, [fp, #-12]
   32954:	str	r3, [fp, #-8]
   32958:	b	32970 <__assert_fail@plt+0x21730>
   3295c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32960:	str	r3, [fp, #-8]
   32964:	b	32970 <__assert_fail@plt+0x21730>
   32968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3296c:	str	r3, [fp, #-8]
   32970:	ldr	r2, [fp, #-20]	; 0xffffffec
   32974:	ldrb	r3, [fp, #24]
   32978:	str	r3, [sp, #12]
   3297c:	ldr	r3, [fp, #16]
   32980:	str	r3, [sp, #8]
   32984:	ldr	r3, [fp, #20]
   32988:	str	r3, [sp, #4]
   3298c:	ldr	r3, [fp, #12]
   32990:	str	r3, [sp]
   32994:	ldr	r3, [fp, #8]
   32998:	ldr	r1, [fp, #-8]
   3299c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   329a0:	bl	329c8 <__assert_fail@plt+0x21788>
   329a4:	str	r0, [fp, #-16]
   329a8:	ldr	r0, [fp, #-12]
   329ac:	bl	13798 <__assert_fail@plt+0x2558>
   329b0:	ldr	r3, [fp, #-16]
   329b4:	mov	r0, r3
   329b8:	sub	sp, fp, #4
   329bc:	ldr	fp, [sp]
   329c0:	add	sp, sp, #4
   329c4:	pop	{pc}		; (ldr pc, [sp], #4)
   329c8:	str	fp, [sp, #-8]!
   329cc:	str	lr, [sp, #4]
   329d0:	add	fp, sp, #4
   329d4:	sub	sp, sp, #72	; 0x48
   329d8:	str	r0, [fp, #-40]	; 0xffffffd8
   329dc:	str	r1, [fp, #-44]	; 0xffffffd4
   329e0:	str	r2, [fp, #-48]	; 0xffffffd0
   329e4:	str	r3, [fp, #-52]	; 0xffffffcc
   329e8:	mov	r3, #0
   329ec:	str	r3, [fp, #-20]	; 0xffffffec
   329f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   329f4:	ldr	r3, [r3]
   329f8:	str	r3, [fp, #-24]	; 0xffffffe8
   329fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32a00:	ldr	r3, [fp, #4]
   32a04:	add	r3, r2, r3
   32a08:	str	r3, [fp, #-16]
   32a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32a10:	lsr	r3, r3, #31
   32a14:	uxtb	r3, r3
   32a18:	cmp	r3, #0
   32a1c:	bne	32a40 <__assert_fail@plt+0x21800>
   32a20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32a24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32a28:	cmp	r2, r3
   32a2c:	movgt	r3, #1
   32a30:	movle	r3, #0
   32a34:	uxtb	r3, r3
   32a38:	cmp	r3, #0
   32a3c:	beq	32a48 <__assert_fail@plt+0x21808>
   32a40:	mvn	r3, #0
   32a44:	b	32e74 <__assert_fail@plt+0x21c34>
   32a48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   32a4c:	ldr	r3, [fp, #-16]
   32a50:	cmp	r2, r3
   32a54:	movlt	r3, #1
   32a58:	movge	r3, #0
   32a5c:	uxtb	r3, r3
   32a60:	cmp	r3, #0
   32a64:	bne	32ab4 <__assert_fail@plt+0x21874>
   32a68:	ldr	r3, [fp, #4]
   32a6c:	mvn	r3, r3
   32a70:	lsr	r3, r3, #31
   32a74:	uxtb	r3, r3
   32a78:	cmp	r3, #0
   32a7c:	beq	32aa8 <__assert_fail@plt+0x21868>
   32a80:	ldr	r2, [fp, #-16]
   32a84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32a88:	cmp	r2, r3
   32a8c:	movlt	r3, #1
   32a90:	movge	r3, #0
   32a94:	uxtb	r3, r3
   32a98:	cmp	r3, #0
   32a9c:	beq	32aa8 <__assert_fail@plt+0x21868>
   32aa0:	mov	r3, #1
   32aa4:	b	32aac <__assert_fail@plt+0x2186c>
   32aa8:	mov	r3, #0
   32aac:	cmp	r3, #0
   32ab0:	beq	32ac0 <__assert_fail@plt+0x21880>
   32ab4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32ab8:	str	r3, [fp, #-16]
   32abc:	b	32b24 <__assert_fail@plt+0x218e4>
   32ac0:	ldr	r3, [fp, #-16]
   32ac4:	lsr	r3, r3, #31
   32ac8:	uxtb	r3, r3
   32acc:	cmp	r3, #0
   32ad0:	bne	32b1c <__assert_fail@plt+0x218dc>
   32ad4:	ldr	r3, [fp, #4]
   32ad8:	lsr	r3, r3, #31
   32adc:	uxtb	r3, r3
   32ae0:	cmp	r3, #0
   32ae4:	beq	32b10 <__assert_fail@plt+0x218d0>
   32ae8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32aec:	ldr	r3, [fp, #-16]
   32af0:	cmp	r2, r3
   32af4:	movle	r3, #1
   32af8:	movgt	r3, #0
   32afc:	uxtb	r3, r3
   32b00:	cmp	r3, #0
   32b04:	beq	32b10 <__assert_fail@plt+0x218d0>
   32b08:	mov	r3, #1
   32b0c:	b	32b14 <__assert_fail@plt+0x218d4>
   32b10:	mov	r3, #0
   32b14:	cmp	r3, #0
   32b18:	beq	32b24 <__assert_fail@plt+0x218e4>
   32b1c:	mov	r3, #0
   32b20:	str	r3, [fp, #-16]
   32b24:	movw	r3, #0
   32b28:	movt	r3, #0
   32b2c:	cmp	r3, #0
   32b30:	bne	32b44 <__assert_fail@plt+0x21904>
   32b34:	movw	r3, #0
   32b38:	movt	r3, #0
   32b3c:	cmp	r3, #0
   32b40:	beq	32b58 <__assert_fail@plt+0x21918>
   32b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32b48:	add	r3, r3, #136	; 0x88
   32b4c:	mov	r0, r3
   32b50:	bl	10fd0 <pthread_mutex_lock@plt>
   32b54:	nop	{0}
   32b58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32b5c:	ldrb	r3, [r3, #28]
   32b60:	lsr	r3, r3, #5
   32b64:	uxtb	r3, r3
   32b68:	and	r3, r3, #1
   32b6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32b70:	orr	r3, r2, r3
   32b74:	str	r3, [fp, #-20]	; 0xffffffec
   32b78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32b7c:	ldrb	r3, [r3, #28]
   32b80:	lsr	r3, r3, #5
   32b84:	uxtb	r3, r3
   32b88:	and	r3, r3, #2
   32b8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32b90:	orr	r3, r2, r3
   32b94:	str	r3, [fp, #-20]	; 0xffffffec
   32b98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32b9c:	ldr	r3, [fp, #-16]
   32ba0:	cmp	r2, r3
   32ba4:	bge	32bd8 <__assert_fail@plt+0x21998>
   32ba8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32bac:	ldr	r3, [r3, #16]
   32bb0:	cmp	r3, #0
   32bb4:	beq	32bd8 <__assert_fail@plt+0x21998>
   32bb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32bbc:	ldrb	r3, [r3, #28]
   32bc0:	and	r3, r3, #8
   32bc4:	uxtb	r3, r3
   32bc8:	cmp	r3, #0
   32bcc:	bne	32bd8 <__assert_fail@plt+0x21998>
   32bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32bd4:	bl	292f4 <__assert_fail@plt+0x180b4>
   32bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32bdc:	ldrb	r3, [r3, #28]
   32be0:	ubfx	r3, r3, #4, #1
   32be4:	uxtb	r3, r3
   32be8:	cmp	r3, #0
   32bec:	beq	32bf8 <__assert_fail@plt+0x219b8>
   32bf0:	mov	r3, #0
   32bf4:	str	r3, [fp, #12]
   32bf8:	ldr	r3, [fp, #12]
   32bfc:	cmp	r3, #0
   32c00:	bne	32c10 <__assert_fail@plt+0x219d0>
   32c04:	mov	r3, #1
   32c08:	str	r3, [fp, #-8]
   32c0c:	b	32cac <__assert_fail@plt+0x21a6c>
   32c10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32c14:	ldrb	r3, [r3, #28]
   32c18:	and	r3, r3, #6
   32c1c:	uxtb	r3, r3
   32c20:	cmp	r3, #4
   32c24:	moveq	r3, #1
   32c28:	movne	r3, #0
   32c2c:	uxtb	r3, r3
   32c30:	cmp	r3, #0
   32c34:	beq	32c9c <__assert_fail@plt+0x21a5c>
   32c38:	ldr	r3, [fp, #12]
   32c3c:	ldr	r2, [r3]
   32c40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32c44:	ldr	r3, [r3, #24]
   32c48:	cmp	r2, r3
   32c4c:	movls	r3, #1
   32c50:	movhi	r3, #0
   32c54:	uxtb	r3, r3
   32c58:	cmp	r3, #0
   32c5c:	beq	32c9c <__assert_fail@plt+0x21a5c>
   32c60:	ldr	r3, [fp, #12]
   32c64:	ldr	r3, [r3]
   32c68:	str	r3, [fp, #-8]
   32c6c:	ldr	r3, [fp, #-8]
   32c70:	cmp	r3, #0
   32c74:	movle	r3, #1
   32c78:	movgt	r3, #0
   32c7c:	uxtb	r3, r3
   32c80:	cmp	r3, #0
   32c84:	beq	32cac <__assert_fail@plt+0x21a6c>
   32c88:	mov	r3, #0
   32c8c:	str	r3, [fp, #12]
   32c90:	mov	r3, #1
   32c94:	str	r3, [fp, #-8]
   32c98:	b	32cac <__assert_fail@plt+0x21a6c>
   32c9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32ca0:	ldr	r3, [r3, #24]
   32ca4:	add	r3, r3, #1
   32ca8:	str	r3, [fp, #-8]
   32cac:	ldr	r3, [fp, #-8]
   32cb0:	lsl	r3, r3, #3
   32cb4:	mov	r0, r3
   32cb8:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   32cbc:	mov	r3, r0
   32cc0:	str	r3, [fp, #-28]	; 0xffffffe4
   32cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32cc8:	cmp	r3, #0
   32ccc:	moveq	r3, #1
   32cd0:	movne	r3, #0
   32cd4:	uxtb	r3, r3
   32cd8:	cmp	r3, #0
   32cdc:	beq	32cec <__assert_fail@plt+0x21aac>
   32ce0:	mvn	r3, #1
   32ce4:	str	r3, [fp, #-12]
   32ce8:	b	32e3c <__assert_fail@plt+0x21bfc>
   32cec:	ldr	r3, [fp, #-8]
   32cf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   32cf4:	str	r2, [sp, #16]
   32cf8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32cfc:	str	r2, [sp, #12]
   32d00:	str	r3, [sp, #8]
   32d04:	ldr	r3, [fp, #8]
   32d08:	str	r3, [sp, #4]
   32d0c:	ldr	r3, [fp, #-16]
   32d10:	str	r3, [sp]
   32d14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32d18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   32d1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   32d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32d24:	bl	33220 <__assert_fail@plt+0x21fe0>
   32d28:	str	r0, [fp, #-32]	; 0xffffffe0
   32d2c:	mov	r3, #0
   32d30:	str	r3, [fp, #-12]
   32d34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32d38:	cmp	r3, #0
   32d3c:	beq	32d60 <__assert_fail@plt+0x21b20>
   32d40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32d44:	cmp	r3, #1
   32d48:	bne	32d54 <__assert_fail@plt+0x21b14>
   32d4c:	mvn	r3, #0
   32d50:	b	32d58 <__assert_fail@plt+0x21b18>
   32d54:	mvn	r3, #1
   32d58:	str	r3, [fp, #-12]
   32d5c:	b	32dd8 <__assert_fail@plt+0x21b98>
   32d60:	ldr	r3, [fp, #12]
   32d64:	cmp	r3, #0
   32d68:	beq	32dd8 <__assert_fail@plt+0x21b98>
   32d6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32d70:	ldrb	r3, [r3, #28]
   32d74:	ubfx	r3, r3, #1, #2
   32d78:	uxtb	r3, r3
   32d7c:	ldr	r2, [fp, #-8]
   32d80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32d84:	ldr	r0, [fp, #12]
   32d88:	bl	32e88 <__assert_fail@plt+0x21c48>
   32d8c:	mov	r3, r0
   32d90:	and	r3, r3, #3
   32d94:	uxtb	r1, r3
   32d98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   32d9c:	ldrb	r3, [r2, #28]
   32da0:	bfi	r3, r1, #1, #2
   32da4:	strb	r3, [r2, #28]
   32da8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32dac:	ldrb	r3, [r3, #28]
   32db0:	and	r3, r3, #6
   32db4:	uxtb	r3, r3
   32db8:	cmp	r3, #0
   32dbc:	moveq	r3, #1
   32dc0:	movne	r3, #0
   32dc4:	uxtb	r3, r3
   32dc8:	cmp	r3, #0
   32dcc:	beq	32dd8 <__assert_fail@plt+0x21b98>
   32dd0:	mvn	r3, #1
   32dd4:	str	r3, [fp, #-12]
   32dd8:	ldr	r3, [fp, #-12]
   32ddc:	cmp	r3, #0
   32de0:	moveq	r3, #1
   32de4:	movne	r3, #0
   32de8:	uxtb	r3, r3
   32dec:	cmp	r3, #0
   32df0:	beq	32e34 <__assert_fail@plt+0x21bf4>
   32df4:	ldrb	r3, [fp, #16]
   32df8:	cmp	r3, #0
   32dfc:	beq	32e28 <__assert_fail@plt+0x21be8>
   32e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32e04:	ldr	r3, [r3]
   32e08:	ldr	r2, [fp, #-52]	; 0xffffffcc
   32e0c:	cmp	r2, r3
   32e10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32e14:	ldr	r2, [r3, #4]
   32e18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32e1c:	sub	r3, r2, r3
   32e20:	str	r3, [fp, #-12]
   32e24:	b	32e34 <__assert_fail@plt+0x21bf4>
   32e28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32e2c:	ldr	r3, [r3]
   32e30:	str	r3, [fp, #-12]
   32e34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32e38:	bl	13798 <__assert_fail@plt+0x2558>
   32e3c:	movw	r3, #0
   32e40:	movt	r3, #0
   32e44:	cmp	r3, #0
   32e48:	bne	32e5c <__assert_fail@plt+0x21c1c>
   32e4c:	movw	r3, #0
   32e50:	movt	r3, #0
   32e54:	cmp	r3, #0
   32e58:	beq	32e70 <__assert_fail@plt+0x21c30>
   32e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32e60:	add	r3, r3, #136	; 0x88
   32e64:	mov	r0, r3
   32e68:	bl	10f28 <pthread_mutex_unlock@plt>
   32e6c:	nop	{0}
   32e70:	ldr	r3, [fp, #-12]
   32e74:	mov	r0, r3
   32e78:	sub	sp, fp, #4
   32e7c:	ldr	fp, [sp]
   32e80:	add	sp, sp, #4
   32e84:	pop	{pc}		; (ldr pc, [sp], #4)
   32e88:	str	fp, [sp, #-8]!
   32e8c:	str	lr, [sp, #4]
   32e90:	add	fp, sp, #4
   32e94:	sub	sp, sp, #40	; 0x28
   32e98:	str	r0, [fp, #-32]	; 0xffffffe0
   32e9c:	str	r1, [fp, #-36]	; 0xffffffdc
   32ea0:	str	r2, [fp, #-40]	; 0xffffffd8
   32ea4:	str	r3, [fp, #-44]	; 0xffffffd4
   32ea8:	mov	r3, #1
   32eac:	str	r3, [fp, #-8]
   32eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32eb4:	add	r3, r3, #1
   32eb8:	str	r3, [fp, #-16]
   32ebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32ec0:	cmp	r3, #0
   32ec4:	bne	32f78 <__assert_fail@plt+0x21d38>
   32ec8:	ldr	r3, [fp, #-16]
   32ecc:	lsl	r3, r3, #2
   32ed0:	mov	r0, r3
   32ed4:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   32ed8:	mov	r3, r0
   32edc:	mov	r2, r3
   32ee0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32ee4:	str	r2, [r3, #4]
   32ee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32eec:	ldr	r3, [r3, #4]
   32ef0:	cmp	r3, #0
   32ef4:	moveq	r3, #1
   32ef8:	movne	r3, #0
   32efc:	uxtb	r3, r3
   32f00:	cmp	r3, #0
   32f04:	beq	32f10 <__assert_fail@plt+0x21cd0>
   32f08:	mov	r3, #0
   32f0c:	b	33160 <__assert_fail@plt+0x21f20>
   32f10:	ldr	r3, [fp, #-16]
   32f14:	lsl	r3, r3, #2
   32f18:	mov	r0, r3
   32f1c:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   32f20:	mov	r3, r0
   32f24:	mov	r2, r3
   32f28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32f2c:	str	r2, [r3, #8]
   32f30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32f34:	ldr	r3, [r3, #8]
   32f38:	cmp	r3, #0
   32f3c:	moveq	r3, #1
   32f40:	movne	r3, #0
   32f44:	uxtb	r3, r3
   32f48:	cmp	r3, #0
   32f4c:	beq	32f68 <__assert_fail@plt+0x21d28>
   32f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32f54:	ldr	r3, [r3, #4]
   32f58:	mov	r0, r3
   32f5c:	bl	13798 <__assert_fail@plt+0x2558>
   32f60:	mov	r3, #0
   32f64:	b	33160 <__assert_fail@plt+0x21f20>
   32f68:	ldr	r2, [fp, #-16]
   32f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32f70:	str	r2, [r3]
   32f74:	b	33080 <__assert_fail@plt+0x21e40>
   32f78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32f7c:	cmp	r3, #1
   32f80:	bne	33060 <__assert_fail@plt+0x21e20>
   32f84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32f88:	ldr	r2, [r3]
   32f8c:	ldr	r3, [fp, #-16]
   32f90:	cmp	r2, r3
   32f94:	movcc	r3, #1
   32f98:	movcs	r3, #0
   32f9c:	uxtb	r3, r3
   32fa0:	cmp	r3, #0
   32fa4:	beq	33080 <__assert_fail@plt+0x21e40>
   32fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32fac:	ldr	r2, [r3, #4]
   32fb0:	ldr	r3, [fp, #-16]
   32fb4:	lsl	r3, r3, #2
   32fb8:	mov	r1, r3
   32fbc:	mov	r0, r2
   32fc0:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   32fc4:	str	r0, [fp, #-20]	; 0xffffffec
   32fc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   32fcc:	cmp	r3, #0
   32fd0:	moveq	r3, #1
   32fd4:	movne	r3, #0
   32fd8:	uxtb	r3, r3
   32fdc:	cmp	r3, #0
   32fe0:	beq	32fec <__assert_fail@plt+0x21dac>
   32fe4:	mov	r3, #0
   32fe8:	b	33160 <__assert_fail@plt+0x21f20>
   32fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32ff0:	ldr	r2, [r3, #8]
   32ff4:	ldr	r3, [fp, #-16]
   32ff8:	lsl	r3, r3, #2
   32ffc:	mov	r1, r3
   33000:	mov	r0, r2
   33004:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   33008:	str	r0, [fp, #-24]	; 0xffffffe8
   3300c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33010:	cmp	r3, #0
   33014:	moveq	r3, #1
   33018:	movne	r3, #0
   3301c:	uxtb	r3, r3
   33020:	cmp	r3, #0
   33024:	beq	33038 <__assert_fail@plt+0x21df8>
   33028:	ldr	r0, [fp, #-20]	; 0xffffffec
   3302c:	bl	13798 <__assert_fail@plt+0x2558>
   33030:	mov	r3, #0
   33034:	b	33160 <__assert_fail@plt+0x21f20>
   33038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3303c:	ldr	r2, [fp, #-20]	; 0xffffffec
   33040:	str	r2, [r3, #4]
   33044:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33048:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3304c:	str	r2, [r3, #8]
   33050:	ldr	r2, [fp, #-16]
   33054:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33058:	str	r2, [r3]
   3305c:	b	33080 <__assert_fail@plt+0x21e40>
   33060:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33064:	cmp	r3, #2
   33068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3306c:	ldr	r2, [r3]
   33070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33074:	cmp	r2, r3
   33078:	mov	r3, #2
   3307c:	str	r3, [fp, #-8]
   33080:	mov	r3, #0
   33084:	str	r3, [fp, #-12]
   33088:	b	330f0 <__assert_fail@plt+0x21eb0>
   3308c:	ldr	r3, [fp, #-12]
   33090:	lsl	r3, r3, #3
   33094:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33098:	add	r2, r2, r3
   3309c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   330a0:	ldr	r1, [r3, #4]
   330a4:	ldr	r3, [fp, #-12]
   330a8:	lsl	r3, r3, #2
   330ac:	add	r3, r1, r3
   330b0:	ldr	r2, [r2]
   330b4:	str	r2, [r3]
   330b8:	ldr	r3, [fp, #-12]
   330bc:	lsl	r3, r3, #3
   330c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   330c4:	add	r2, r2, r3
   330c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   330cc:	ldr	r1, [r3, #8]
   330d0:	ldr	r3, [fp, #-12]
   330d4:	lsl	r3, r3, #2
   330d8:	add	r3, r1, r3
   330dc:	ldr	r2, [r2, #4]
   330e0:	str	r2, [r3]
   330e4:	ldr	r3, [fp, #-12]
   330e8:	add	r3, r3, #1
   330ec:	str	r3, [fp, #-12]
   330f0:	ldr	r2, [fp, #-12]
   330f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   330f8:	cmp	r2, r3
   330fc:	blt	3308c <__assert_fail@plt+0x21e4c>
   33100:	b	33148 <__assert_fail@plt+0x21f08>
   33104:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33108:	ldr	r2, [r3, #8]
   3310c:	ldr	r3, [fp, #-12]
   33110:	lsl	r3, r3, #2
   33114:	add	r3, r2, r3
   33118:	mvn	r2, #0
   3311c:	str	r2, [r3]
   33120:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33124:	ldr	r1, [r2, #4]
   33128:	ldr	r2, [fp, #-12]
   3312c:	lsl	r2, r2, #2
   33130:	add	r2, r1, r2
   33134:	ldr	r3, [r3]
   33138:	str	r3, [r2]
   3313c:	ldr	r3, [fp, #-12]
   33140:	add	r3, r3, #1
   33144:	str	r3, [fp, #-12]
   33148:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3314c:	ldr	r2, [r3]
   33150:	ldr	r3, [fp, #-12]
   33154:	cmp	r2, r3
   33158:	bhi	33104 <__assert_fail@plt+0x21ec4>
   3315c:	ldr	r3, [fp, #-8]
   33160:	mov	r0, r3
   33164:	sub	sp, fp, #4
   33168:	ldr	fp, [sp]
   3316c:	add	sp, sp, #4
   33170:	pop	{pc}		; (ldr pc, [sp], #4)
   33174:	push	{fp}		; (str fp, [sp, #-4]!)
   33178:	add	fp, sp, #0
   3317c:	sub	sp, sp, #20
   33180:	str	r0, [fp, #-8]
   33184:	str	r1, [fp, #-12]
   33188:	str	r2, [fp, #-16]
   3318c:	str	r3, [fp, #-20]	; 0xffffffec
   33190:	ldr	r3, [fp, #-16]
   33194:	cmp	r3, #0
   33198:	beq	331d8 <__assert_fail@plt+0x21f98>
   3319c:	ldr	r2, [fp, #-8]
   331a0:	ldrb	r3, [r2, #28]
   331a4:	mov	r1, #1
   331a8:	bfi	r3, r1, #1, #2
   331ac:	strb	r3, [r2, #28]
   331b0:	ldr	r3, [fp, #-12]
   331b4:	ldr	r2, [fp, #-16]
   331b8:	str	r2, [r3]
   331bc:	ldr	r3, [fp, #-12]
   331c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   331c4:	str	r2, [r3, #4]
   331c8:	ldr	r3, [fp, #-12]
   331cc:	ldr	r2, [fp, #4]
   331d0:	str	r2, [r3, #8]
   331d4:	b	33210 <__assert_fail@plt+0x21fd0>
   331d8:	ldr	r2, [fp, #-8]
   331dc:	ldrb	r3, [r2, #28]
   331e0:	bfc	r3, #1, #2
   331e4:	strb	r3, [r2, #28]
   331e8:	ldr	r3, [fp, #-12]
   331ec:	mov	r2, #0
   331f0:	str	r2, [r3]
   331f4:	ldr	r3, [fp, #-12]
   331f8:	mov	r2, #0
   331fc:	str	r2, [r3, #8]
   33200:	ldr	r3, [fp, #-12]
   33204:	ldr	r2, [r3, #8]
   33208:	ldr	r3, [fp, #-12]
   3320c:	str	r2, [r3, #4]
   33210:	nop	{0}
   33214:	add	sp, fp, #0
   33218:	pop	{fp}		; (ldr fp, [sp], #4)
   3321c:	bx	lr
   33220:	str	fp, [sp, #-8]!
   33224:	str	lr, [sp, #4]
   33228:	add	fp, sp, #4
   3322c:	sub	sp, sp, #240	; 0xf0
   33230:	str	r0, [fp, #-216]	; 0xffffff28
   33234:	str	r1, [fp, #-220]	; 0xffffff24
   33238:	str	r2, [fp, #-224]	; 0xffffff20
   3323c:	str	r3, [fp, #-228]	; 0xffffff1c
   33240:	ldr	r3, [fp, #-216]	; 0xffffff28
   33244:	ldr	r3, [r3]
   33248:	str	r3, [fp, #-20]	; 0xffffffec
   3324c:	mvn	r3, #0
   33250:	str	r3, [fp, #-24]	; 0xffffffe8
   33254:	sub	r3, fp, #208	; 0xd0
   33258:	mov	r2, #136	; 0x88
   3325c:	mov	r1, #0
   33260:	mov	r0, r3
   33264:	bl	1118c <memset@plt>
   33268:	ldr	r3, [fp, #-20]	; 0xffffffec
   3326c:	str	r3, [fp, #-124]	; 0xffffff84
   33270:	ldr	r3, [fp, #-216]	; 0xffffff28
   33274:	ldr	r3, [r3, #16]
   33278:	cmp	r3, #0
   3327c:	beq	332cc <__assert_fail@plt+0x2208c>
   33280:	ldr	r3, [fp, #-216]	; 0xffffff28
   33284:	ldrb	r3, [r3, #28]
   33288:	and	r3, r3, #8
   3328c:	uxtb	r3, r3
   33290:	cmp	r3, #0
   33294:	beq	332cc <__assert_fail@plt+0x2208c>
   33298:	ldr	r2, [fp, #-228]	; 0xffffff1c
   3329c:	ldr	r3, [fp, #4]
   332a0:	cmp	r2, r3
   332a4:	beq	332cc <__assert_fail@plt+0x2208c>
   332a8:	ldr	r3, [fp, #-216]	; 0xffffff28
   332ac:	ldrb	r3, [r3, #28]
   332b0:	and	r3, r3, #1
   332b4:	uxtb	r3, r3
   332b8:	cmp	r3, #0
   332bc:	bne	332cc <__assert_fail@plt+0x2208c>
   332c0:	ldr	r3, [fp, #-216]	; 0xffffff28
   332c4:	ldr	r3, [r3, #16]
   332c8:	b	332d0 <__assert_fail@plt+0x22090>
   332cc:	mov	r3, #0
   332d0:	str	r3, [fp, #-28]	; 0xffffffe4
   332d4:	ldr	r3, [fp, #-216]	; 0xffffff28
   332d8:	ldr	r3, [r3, #20]
   332dc:	str	r3, [fp, #-32]	; 0xffffffe0
   332e0:	ldr	r3, [fp, #-216]	; 0xffffff28
   332e4:	ldr	r3, [r3, #24]
   332e8:	ldr	r2, [fp, #12]
   332ec:	cmp	r2, r3
   332f0:	bls	3330c <__assert_fail@plt+0x220cc>
   332f4:	ldr	r3, [fp, #-216]	; 0xffffff28
   332f8:	ldr	r3, [r3, #24]
   332fc:	ldr	r2, [fp, #12]
   33300:	sub	r3, r2, r3
   33304:	sub	r3, r3, #1
   33308:	b	33310 <__assert_fail@plt+0x220d0>
   3330c:	mov	r3, #0
   33310:	str	r3, [fp, #-36]	; 0xffffffdc
   33314:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33318:	ldr	r2, [fp, #12]
   3331c:	sub	r3, r2, r3
   33320:	str	r3, [fp, #12]
   33324:	ldr	r3, [fp, #-216]	; 0xffffff28
   33328:	ldr	r3, [r3, #8]
   3332c:	cmp	r3, #0
   33330:	moveq	r3, #1
   33334:	movne	r3, #0
   33338:	uxtb	r3, r3
   3333c:	cmp	r3, #0
   33340:	bne	33364 <__assert_fail@plt+0x22124>
   33344:	ldr	r3, [fp, #-20]	; 0xffffffec
   33348:	ldr	r3, [r3, #36]	; 0x24
   3334c:	cmp	r3, #0
   33350:	moveq	r3, #1
   33354:	movne	r3, #0
   33358:	uxtb	r3, r3
   3335c:	cmp	r3, #0
   33360:	beq	3336c <__assert_fail@plt+0x2212c>
   33364:	mov	r3, #1
   33368:	b	33370 <__assert_fail@plt+0x22130>
   3336c:	mov	r3, #0
   33370:	cmp	r3, #0
   33374:	bne	33398 <__assert_fail@plt+0x22158>
   33378:	ldr	r3, [fp, #-20]	; 0xffffffec
   3337c:	ldr	r3, [r3, #40]	; 0x28
   33380:	cmp	r3, #0
   33384:	moveq	r3, #1
   33388:	movne	r3, #0
   3338c:	uxtb	r3, r3
   33390:	cmp	r3, #0
   33394:	beq	333a0 <__assert_fail@plt+0x22160>
   33398:	mov	r3, #1
   3339c:	b	333a4 <__assert_fail@plt+0x22164>
   333a0:	mov	r3, #0
   333a4:	cmp	r3, #0
   333a8:	bne	333cc <__assert_fail@plt+0x2218c>
   333ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   333b0:	ldr	r3, [r3, #44]	; 0x2c
   333b4:	cmp	r3, #0
   333b8:	moveq	r3, #1
   333bc:	movne	r3, #0
   333c0:	uxtb	r3, r3
   333c4:	cmp	r3, #0
   333c8:	beq	333d4 <__assert_fail@plt+0x22194>
   333cc:	mov	r3, #1
   333d0:	b	333d8 <__assert_fail@plt+0x22198>
   333d4:	mov	r3, #0
   333d8:	cmp	r3, #0
   333dc:	bne	33400 <__assert_fail@plt+0x221c0>
   333e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   333e4:	ldr	r3, [r3, #48]	; 0x30
   333e8:	cmp	r3, #0
   333ec:	moveq	r3, #1
   333f0:	movne	r3, #0
   333f4:	uxtb	r3, r3
   333f8:	cmp	r3, #0
   333fc:	beq	33408 <__assert_fail@plt+0x221c8>
   33400:	mov	r3, #1
   33404:	b	34148 <__assert_fail@plt+0x22f08>
   33408:	ldr	r3, [fp, #4]
   3340c:	cmp	r3, #0
   33410:	blt	33424 <__assert_fail@plt+0x221e4>
   33414:	ldr	r2, [fp, #4]
   33418:	ldr	r3, [fp, #-224]	; 0xffffff20
   3341c:	cmp	r2, r3
   33420:	ble	33424 <__assert_fail@plt+0x221e4>
   33424:	ldr	r3, [fp, #-20]	; 0xffffffec
   33428:	ldr	r3, [r3, #36]	; 0x24
   3342c:	ldr	r3, [r3, #8]
   33430:	cmp	r3, #0
   33434:	bne	334a8 <__assert_fail@plt+0x22268>
   33438:	ldr	r3, [fp, #-20]	; 0xffffffec
   3343c:	ldr	r3, [r3, #40]	; 0x28
   33440:	ldr	r3, [r3, #8]
   33444:	cmp	r3, #0
   33448:	bne	334a8 <__assert_fail@plt+0x22268>
   3344c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33450:	ldr	r3, [r3, #44]	; 0x2c
   33454:	ldr	r3, [r3, #8]
   33458:	cmp	r3, #0
   3345c:	beq	33478 <__assert_fail@plt+0x22238>
   33460:	ldr	r3, [fp, #-216]	; 0xffffff28
   33464:	ldrb	r3, [r3, #28]
   33468:	bic	r3, r3, #127	; 0x7f
   3346c:	uxtb	r3, r3
   33470:	cmp	r3, #0
   33474:	bne	334a8 <__assert_fail@plt+0x22268>
   33478:	ldr	r3, [fp, #-228]	; 0xffffff1c
   3347c:	cmp	r3, #0
   33480:	beq	33498 <__assert_fail@plt+0x22258>
   33484:	ldr	r3, [fp, #4]
   33488:	cmp	r3, #0
   3348c:	beq	33498 <__assert_fail@plt+0x22258>
   33490:	mov	r3, #1
   33494:	b	34148 <__assert_fail@plt+0x22f08>
   33498:	mov	r3, #0
   3349c:	str	r3, [fp, #4]
   334a0:	ldr	r3, [fp, #4]
   334a4:	str	r3, [fp, #-228]	; 0xffffff1c
   334a8:	ldr	r3, [fp, #12]
   334ac:	cmp	r3, #0
   334b0:	bne	334c4 <__assert_fail@plt+0x22284>
   334b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   334b8:	ldr	r3, [r3, #76]	; 0x4c
   334bc:	cmp	r3, #0
   334c0:	beq	334cc <__assert_fail@plt+0x2228c>
   334c4:	mov	r3, #1
   334c8:	b	334d0 <__assert_fail@plt+0x22290>
   334cc:	mov	r3, #0
   334d0:	strb	r3, [fp, #-37]	; 0xffffffdb
   334d4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   334d8:	and	r3, r3, #1
   334dc:	strb	r3, [fp, #-37]	; 0xffffffdb
   334e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   334e4:	ldr	r3, [r3, #8]
   334e8:	add	r3, r3, #1
   334ec:	mov	ip, r3
   334f0:	ldr	r3, [fp, #-216]	; 0xffffff28
   334f4:	ldr	r3, [r3, #20]
   334f8:	ldr	r2, [fp, #-216]	; 0xffffff28
   334fc:	ldr	r2, [r2, #12]
   33500:	and	r2, r2, #4194304	; 0x400000
   33504:	cmp	r2, #0
   33508:	movne	r2, #1
   3350c:	moveq	r2, #0
   33510:	uxtb	r2, r2
   33514:	sub	r0, fp, #208	; 0xd0
   33518:	ldr	r1, [fp, #-20]	; 0xffffffec
   3351c:	str	r1, [sp, #8]
   33520:	str	r2, [sp, #4]
   33524:	str	r3, [sp]
   33528:	mov	r3, ip
   3352c:	ldr	r2, [fp, #-224]	; 0xffffff20
   33530:	ldr	r1, [fp, #-220]	; 0xffffff24
   33534:	bl	24148 <__assert_fail@plt+0x12f08>
   33538:	str	r0, [fp, #-8]
   3353c:	ldr	r3, [fp, #-8]
   33540:	cmp	r3, #0
   33544:	movne	r3, #1
   33548:	moveq	r3, #0
   3354c:	uxtb	r3, r3
   33550:	cmp	r3, #0
   33554:	bne	340d4 <__assert_fail@plt+0x22e94>
   33558:	ldr	r3, [fp, #8]
   3355c:	str	r3, [fp, #-152]	; 0xffffff68
   33560:	ldr	r3, [fp, #8]
   33564:	str	r3, [fp, #-156]	; 0xffffff64
   33568:	ldr	r3, [fp, #-216]	; 0xffffff28
   3356c:	ldrb	r3, [r3, #28]
   33570:	ubfx	r3, r3, #7, #1
   33574:	uxtb	r3, r3
   33578:	strb	r3, [fp, #-131]	; 0xffffff7d
   3357c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33580:	ldr	r3, [r3, #76]	; 0x4c
   33584:	lsl	r2, r3, #1
   33588:	sub	r3, fp, #208	; 0xd0
   3358c:	ldr	r1, [fp, #20]
   33590:	mov	r0, r3
   33594:	bl	3c984 <__assert_fail@plt+0x2b744>
   33598:	str	r0, [fp, #-8]
   3359c:	ldr	r3, [fp, #-8]
   335a0:	cmp	r3, #0
   335a4:	movne	r3, #1
   335a8:	moveq	r3, #0
   335ac:	uxtb	r3, r3
   335b0:	cmp	r3, #0
   335b4:	bne	340dc <__assert_fail@plt+0x22e9c>
   335b8:	ldr	r3, [fp, #12]
   335bc:	cmp	r3, #1
   335c0:	bhi	335dc <__assert_fail@plt+0x2239c>
   335c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   335c8:	ldrb	r3, [r3, #88]	; 0x58
   335cc:	and	r3, r3, #2
   335d0:	uxtb	r3, r3
   335d4:	cmp	r3, #0
   335d8:	beq	33648 <__assert_fail@plt+0x22408>
   335dc:	ldr	r3, [fp, #-172]	; 0xffffff54
   335e0:	cmn	r3, #-1073741822	; 0xc0000002
   335e4:	movhi	r3, #1
   335e8:	movls	r3, #0
   335ec:	uxtb	r3, r3
   335f0:	cmp	r3, #0
   335f4:	beq	33604 <__assert_fail@plt+0x223c4>
   335f8:	mov	r3, #12
   335fc:	str	r3, [fp, #-8]
   33600:	b	34110 <__assert_fail@plt+0x22ed0>
   33604:	ldr	r3, [fp, #-172]	; 0xffffff54
   33608:	add	r3, r3, #1
   3360c:	lsl	r3, r3, #2
   33610:	mov	r0, r3
   33614:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   33618:	mov	r3, r0
   3361c:	str	r3, [fp, #-108]	; 0xffffff94
   33620:	ldr	r3, [fp, #-108]	; 0xffffff94
   33624:	cmp	r3, #0
   33628:	moveq	r3, #1
   3362c:	movne	r3, #0
   33630:	uxtb	r3, r3
   33634:	cmp	r3, #0
   33638:	beq	33648 <__assert_fail@plt+0x22408>
   3363c:	mov	r3, #12
   33640:	str	r3, [fp, #-8]
   33644:	b	34110 <__assert_fail@plt+0x22ed0>
   33648:	ldr	r3, [fp, #-228]	; 0xffffff1c
   3364c:	str	r3, [fp, #-72]	; 0xffffffb8
   33650:	ldr	r3, [fp, #20]
   33654:	and	r3, r3, #1
   33658:	cmp	r3, #0
   3365c:	beq	33668 <__assert_fail@plt+0x22428>
   33660:	mov	r3, #4
   33664:	b	3366c <__assert_fail@plt+0x2242c>
   33668:	mov	r3, #6
   3366c:	str	r3, [fp, #-148]	; 0xffffff6c
   33670:	ldr	r2, [fp, #4]
   33674:	ldr	r3, [fp, #-228]	; 0xffffff1c
   33678:	cmp	r2, r3
   3367c:	bge	33688 <__assert_fail@plt+0x22448>
   33680:	mvn	r3, #0
   33684:	b	3368c <__assert_fail@plt+0x2244c>
   33688:	mov	r3, #1
   3368c:	str	r3, [fp, #-44]	; 0xffffffd4
   33690:	ldr	r2, [fp, #-228]	; 0xffffff1c
   33694:	ldr	r3, [fp, #4]
   33698:	cmp	r2, r3
   3369c:	movlt	r3, r2
   336a0:	movge	r3, r3
   336a4:	str	r3, [fp, #-48]	; 0xffffffd0
   336a8:	ldr	r2, [fp, #4]
   336ac:	ldr	r3, [fp, #-228]	; 0xffffff1c
   336b0:	cmp	r2, r3
   336b4:	movge	r3, r2
   336b8:	movlt	r3, r3
   336bc:	str	r3, [fp, #-52]	; 0xffffffcc
   336c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   336c4:	ldr	r3, [r3, #92]	; 0x5c
   336c8:	cmp	r3, #1
   336cc:	moveq	r3, #1
   336d0:	movne	r3, #0
   336d4:	strb	r3, [fp, #-53]	; 0xffffffcb
   336d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   336dc:	cmp	r3, #0
   336e0:	beq	33758 <__assert_fail@plt+0x22518>
   336e4:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   336e8:	cmp	r3, #0
   336ec:	bne	33710 <__assert_fail@plt+0x224d0>
   336f0:	ldr	r3, [fp, #-216]	; 0xffffff28
   336f4:	ldr	r3, [r3, #12]
   336f8:	and	r3, r3, #4194304	; 0x400000
   336fc:	cmp	r3, #0
   33700:	bne	33718 <__assert_fail@plt+0x224d8>
   33704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33708:	cmp	r3, #0
   3370c:	bne	33718 <__assert_fail@plt+0x224d8>
   33710:	mov	r2, #4
   33714:	b	3371c <__assert_fail@plt+0x224dc>
   33718:	mov	r2, #0
   3371c:	ldr	r1, [fp, #-228]	; 0xffffff1c
   33720:	ldr	r3, [fp, #4]
   33724:	cmp	r1, r3
   33728:	bgt	33734 <__assert_fail@plt+0x224f4>
   3372c:	mov	r3, #2
   33730:	b	33738 <__assert_fail@plt+0x224f8>
   33734:	mov	r3, #0
   33738:	orr	r3, r2, r3
   3373c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33740:	cmp	r2, #0
   33744:	movne	r2, #1
   33748:	moveq	r2, #0
   3374c:	uxtb	r2, r2
   33750:	orr	r3, r3, r2
   33754:	b	3375c <__assert_fail@plt+0x2251c>
   33758:	mov	r3, #8
   3375c:	str	r3, [fp, #-60]	; 0xffffffc4
   33760:	mov	r3, #1
   33764:	str	r3, [fp, #-8]
   33768:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3376c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   33770:	cmp	r2, r3
   33774:	bgt	340e4 <__assert_fail@plt+0x22ea4>
   33778:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3377c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   33780:	cmp	r2, r3
   33784:	blt	340e4 <__assert_fail@plt+0x22ea4>
   33788:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3378c:	sub	r3, r3, #4
   33790:	cmp	r3, #4
   33794:	ldrls	pc, [pc, r3, lsl #2]
   33798:	b	339b0 <__assert_fail@plt+0x22770>
   3379c:	andeq	r3, r3, r4, lsl #19
   337a0:	andeq	r3, r3, r4, lsl #19
   337a4:	andeq	r3, r3, r8, lsr #16
   337a8:			; <UNDEFINED> instruction: 0x000337bc
   337ac:			; <UNDEFINED> instruction: 0x00033abc
   337b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   337b4:	add	r3, r3, #1
   337b8:	str	r3, [fp, #-72]	; 0xffffffb8
   337bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   337c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   337c4:	cmp	r2, r3
   337c8:	movgt	r3, #1
   337cc:	movle	r3, #0
   337d0:	uxtb	r3, r3
   337d4:	cmp	r3, #0
   337d8:	beq	33878 <__assert_fail@plt+0x22638>
   337dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   337e0:	mov	r2, r3
   337e4:	ldr	r3, [fp, #-220]	; 0xffffff24
   337e8:	add	r3, r3, r2
   337ec:	ldrb	r3, [r3]
   337f0:	mov	r2, r3
   337f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   337f8:	add	r3, r3, r2
   337fc:	ldrb	r3, [r3]
   33800:	mov	r2, r3
   33804:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33808:	add	r3, r3, r2
   3380c:	ldrb	r3, [r3]
   33810:	cmp	r3, #0
   33814:	beq	337b0 <__assert_fail@plt+0x22570>
   33818:	b	33878 <__assert_fail@plt+0x22638>
   3381c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33820:	add	r3, r3, #1
   33824:	str	r3, [fp, #-72]	; 0xffffffb8
   33828:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3382c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   33830:	cmp	r2, r3
   33834:	movgt	r3, #1
   33838:	movle	r3, #0
   3383c:	uxtb	r3, r3
   33840:	cmp	r3, #0
   33844:	beq	33880 <__assert_fail@plt+0x22640>
   33848:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3384c:	mov	r2, r3
   33850:	ldr	r3, [fp, #-220]	; 0xffffff24
   33854:	add	r3, r3, r2
   33858:	ldrb	r3, [r3]
   3385c:	mov	r2, r3
   33860:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33864:	add	r3, r3, r2
   33868:	ldrb	r3, [r3]
   3386c:	cmp	r3, #0
   33870:	beq	3381c <__assert_fail@plt+0x225dc>
   33874:	b	33880 <__assert_fail@plt+0x22640>
   33878:	nop	{0}
   3387c:	b	33884 <__assert_fail@plt+0x22644>
   33880:	nop	{0}
   33884:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33888:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3388c:	cmp	r2, r3
   33890:	moveq	r3, #1
   33894:	movne	r3, #0
   33898:	uxtb	r3, r3
   3389c:	cmp	r3, #0
   338a0:	beq	33ac4 <__assert_fail@plt+0x22884>
   338a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   338a8:	ldr	r2, [fp, #-224]	; 0xffffff20
   338ac:	cmp	r2, r3
   338b0:	ble	338cc <__assert_fail@plt+0x2268c>
   338b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   338b8:	mov	r2, r3
   338bc:	ldr	r3, [fp, #-220]	; 0xffffff24
   338c0:	add	r3, r3, r2
   338c4:	ldrb	r3, [r3]
   338c8:	b	338d0 <__assert_fail@plt+0x22690>
   338cc:	mov	r3, #0
   338d0:	str	r3, [fp, #-64]	; 0xffffffc0
   338d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   338d8:	cmp	r3, #0
   338dc:	beq	338f4 <__assert_fail@plt+0x226b4>
   338e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   338e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   338e8:	add	r3, r2, r3
   338ec:	ldrb	r3, [r3]
   338f0:	b	338f8 <__assert_fail@plt+0x226b8>
   338f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   338f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   338fc:	add	r3, r2, r3
   33900:	ldrb	r3, [r3]
   33904:	cmp	r3, #0
   33908:	bne	33ac4 <__assert_fail@plt+0x22884>
   3390c:	b	34110 <__assert_fail@plt+0x22ed0>
   33910:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33914:	ldr	r2, [fp, #-224]	; 0xffffff20
   33918:	cmp	r2, r3
   3391c:	ble	33938 <__assert_fail@plt+0x226f8>
   33920:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33924:	mov	r2, r3
   33928:	ldr	r3, [fp, #-220]	; 0xffffff24
   3392c:	add	r3, r3, r2
   33930:	ldrb	r3, [r3]
   33934:	b	3393c <__assert_fail@plt+0x226fc>
   33938:	mov	r3, #0
   3393c:	str	r3, [fp, #-64]	; 0xffffffc0
   33940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33944:	cmp	r3, #0
   33948:	beq	33960 <__assert_fail@plt+0x22720>
   3394c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33950:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33954:	add	r3, r2, r3
   33958:	ldrb	r3, [r3]
   3395c:	b	33964 <__assert_fail@plt+0x22724>
   33960:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33964:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33968:	add	r3, r2, r3
   3396c:	ldrb	r3, [r3]
   33970:	cmp	r3, #0
   33974:	bne	33998 <__assert_fail@plt+0x22758>
   33978:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3397c:	sub	r3, r3, #1
   33980:	str	r3, [fp, #-72]	; 0xffffffb8
   33984:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33988:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3398c:	cmp	r2, r3
   33990:	ble	33910 <__assert_fail@plt+0x226d0>
   33994:	b	3399c <__assert_fail@plt+0x2275c>
   33998:	nop	{0}
   3399c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   339a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   339a4:	cmp	r2, r3
   339a8:	ble	33acc <__assert_fail@plt+0x2288c>
   339ac:	b	34110 <__assert_fail@plt+0x22ed0>
   339b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   339b4:	ldr	r3, [fp, #-184]	; 0xffffff48
   339b8:	sub	r3, r2, r3
   339bc:	str	r3, [fp, #-12]
   339c0:	ldr	r3, [fp, #-176]	; 0xffffff50
   339c4:	mov	r2, r3
   339c8:	ldr	r3, [fp, #-12]
   339cc:	cmp	r3, r2
   339d0:	movcs	r3, #1
   339d4:	movcc	r3, #0
   339d8:	uxtb	r3, r3
   339dc:	cmp	r3, #0
   339e0:	beq	33a28 <__assert_fail@plt+0x227e8>
   339e4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   339e8:	sub	r3, fp, #208	; 0xd0
   339ec:	ldr	r2, [fp, #20]
   339f0:	mov	r0, r3
   339f4:	bl	259b4 <__assert_fail@plt+0x14774>
   339f8:	str	r0, [fp, #-8]
   339fc:	ldr	r3, [fp, #-8]
   33a00:	cmp	r3, #0
   33a04:	movne	r3, #1
   33a08:	moveq	r3, #0
   33a0c:	uxtb	r3, r3
   33a10:	cmp	r3, #0
   33a14:	bne	340ec <__assert_fail@plt+0x22eac>
   33a18:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33a1c:	ldr	r3, [fp, #-184]	; 0xffffff48
   33a20:	sub	r3, r2, r3
   33a24:	str	r3, [fp, #-12]
   33a28:	ldr	r3, [fp, #-180]	; 0xffffff4c
   33a2c:	mov	r2, r3
   33a30:	ldr	r3, [fp, #-12]
   33a34:	cmp	r3, r2
   33a38:	bcs	33a50 <__assert_fail@plt+0x22810>
   33a3c:	ldr	r2, [fp, #-204]	; 0xffffff34
   33a40:	ldr	r3, [fp, #-12]
   33a44:	add	r3, r2, r3
   33a48:	ldrb	r3, [r3]
   33a4c:	b	33a54 <__assert_fail@plt+0x22814>
   33a50:	mov	r3, #0
   33a54:	str	r3, [fp, #-64]	; 0xffffffc0
   33a58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33a5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33a60:	add	r3, r2, r3
   33a64:	ldrb	r3, [r3]
   33a68:	cmp	r3, #0
   33a6c:	bne	33ab4 <__assert_fail@plt+0x22874>
   33a70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33a74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33a78:	add	r3, r2, r3
   33a7c:	str	r3, [fp, #-72]	; 0xffffffb8
   33a80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33a84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   33a88:	cmp	r2, r3
   33a8c:	bgt	33aa0 <__assert_fail@plt+0x22860>
   33a90:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33a94:	ldr	r2, [fp, #-52]	; 0xffffffcc
   33a98:	cmp	r2, r3
   33a9c:	bge	33aac <__assert_fail@plt+0x2286c>
   33aa0:	mov	r3, #1
   33aa4:	str	r3, [fp, #-8]
   33aa8:	b	34110 <__assert_fail@plt+0x22ed0>
   33aac:	nop	{0}
   33ab0:	b	339b0 <__assert_fail@plt+0x22770>
   33ab4:	nop	{0}
   33ab8:	b	33ad0 <__assert_fail@plt+0x22890>
   33abc:	nop	{0}
   33ac0:	b	33ad0 <__assert_fail@plt+0x22890>
   33ac4:	nop	{0}
   33ac8:	b	33ad0 <__assert_fail@plt+0x22890>
   33acc:	nop	{0}
   33ad0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   33ad4:	sub	r3, fp, #208	; 0xd0
   33ad8:	ldr	r2, [fp, #20]
   33adc:	mov	r0, r3
   33ae0:	bl	259b4 <__assert_fail@plt+0x14774>
   33ae4:	str	r0, [fp, #-8]
   33ae8:	ldr	r3, [fp, #-8]
   33aec:	cmp	r3, #0
   33af0:	movne	r3, #1
   33af4:	moveq	r3, #0
   33af8:	uxtb	r3, r3
   33afc:	cmp	r3, #0
   33b00:	bne	340f4 <__assert_fail@plt+0x22eb4>
   33b04:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   33b08:	eor	r3, r3, #1
   33b0c:	uxtb	r3, r3
   33b10:	cmp	r3, #0
   33b14:	beq	33b34 <__assert_fail@plt+0x228f4>
   33b18:	ldr	r3, [fp, #-180]	; 0xffffff4c
   33b1c:	cmp	r3, #0
   33b20:	beq	33b34 <__assert_fail@plt+0x228f4>
   33b24:	ldr	r3, [fp, #-200]	; 0xffffff38
   33b28:	ldr	r3, [r3]
   33b2c:	cmn	r3, #1
   33b30:	beq	33cbc <__assert_fail@plt+0x22a7c>
   33b34:	mov	r3, #0
   33b38:	str	r3, [fp, #-88]	; 0xffffffa8
   33b3c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   33b40:	str	r3, [fp, #-100]	; 0xffffff9c
   33b44:	ldr	r3, [fp, #-100]	; 0xffffff9c
   33b48:	str	r3, [fp, #-104]	; 0xffffff98
   33b4c:	ldr	r2, [fp, #-228]	; 0xffffff1c
   33b50:	ldr	r3, [fp, #4]
   33b54:	cmp	r2, r3
   33b58:	bgt	33b64 <__assert_fail@plt+0x22924>
   33b5c:	sub	r3, fp, #72	; 0x48
   33b60:	b	33b68 <__assert_fail@plt+0x22928>
   33b64:	mov	r3, #0
   33b68:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   33b6c:	sub	r0, fp, #208	; 0xd0
   33b70:	mov	r2, r3
   33b74:	bl	344d4 <__assert_fail@plt+0x23294>
   33b78:	str	r0, [fp, #-24]	; 0xffffffe8
   33b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33b80:	cmn	r3, #1
   33b84:	beq	33cac <__assert_fail@plt+0x22a6c>
   33b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33b8c:	cmn	r3, #2
   33b90:	moveq	r3, #1
   33b94:	movne	r3, #0
   33b98:	uxtb	r3, r3
   33b9c:	cmp	r3, #0
   33ba0:	beq	33bb0 <__assert_fail@plt+0x22970>
   33ba4:	mov	r3, #12
   33ba8:	str	r3, [fp, #-8]
   33bac:	b	34110 <__assert_fail@plt+0x22ed0>
   33bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33bb4:	str	r3, [fp, #-116]	; 0xffffff8c
   33bb8:	ldr	r3, [fp, #-216]	; 0xffffff28
   33bbc:	ldrb	r3, [r3, #28]
   33bc0:	and	r3, r3, #16
   33bc4:	uxtb	r3, r3
   33bc8:	cmp	r3, #0
   33bcc:	bne	33bdc <__assert_fail@plt+0x2299c>
   33bd0:	ldr	r3, [fp, #12]
   33bd4:	cmp	r3, #1
   33bd8:	bhi	33bec <__assert_fail@plt+0x229ac>
   33bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   33be0:	ldr	r3, [r3, #76]	; 0x4c
   33be4:	cmp	r3, #0
   33be8:	beq	33c20 <__assert_fail@plt+0x229e0>
   33bec:	ldr	r2, [fp, #-108]	; 0xffffff94
   33bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33bf4:	lsl	r3, r3, #2
   33bf8:	add	r3, r2, r3
   33bfc:	ldr	r3, [r3]
   33c00:	str	r3, [fp, #-68]	; 0xffffffbc
   33c04:	sub	r3, fp, #208	; 0xd0
   33c08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33c0c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   33c10:	mov	r0, r3
   33c14:	bl	34bb4 <__assert_fail@plt+0x23974>
   33c18:	mov	r3, r0
   33c1c:	str	r3, [fp, #-112]	; 0xffffff90
   33c20:	ldr	r3, [fp, #-216]	; 0xffffff28
   33c24:	ldrb	r3, [r3, #28]
   33c28:	and	r3, r3, #16
   33c2c:	uxtb	r3, r3
   33c30:	cmp	r3, #0
   33c34:	bne	33c5c <__assert_fail@plt+0x22a1c>
   33c38:	ldr	r3, [fp, #12]
   33c3c:	cmp	r3, #1
   33c40:	bls	33c5c <__assert_fail@plt+0x22a1c>
   33c44:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c48:	ldrb	r3, [r3, #88]	; 0x58
   33c4c:	and	r3, r3, #1
   33c50:	uxtb	r3, r3
   33c54:	cmp	r3, #0
   33c58:	bne	33c6c <__assert_fail@plt+0x22a2c>
   33c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c60:	ldr	r3, [r3, #76]	; 0x4c
   33c64:	cmp	r3, #0
   33c68:	beq	33cd8 <__assert_fail@plt+0x22a98>
   33c6c:	sub	r3, fp, #208	; 0xd0
   33c70:	mov	r0, r3
   33c74:	bl	3415c <__assert_fail@plt+0x22f1c>
   33c78:	str	r0, [fp, #-8]
   33c7c:	ldr	r3, [fp, #-8]
   33c80:	cmp	r3, #0
   33c84:	beq	33cd4 <__assert_fail@plt+0x22a94>
   33c88:	ldr	r3, [fp, #-8]
   33c8c:	cmp	r3, #1
   33c90:	movne	r3, #1
   33c94:	moveq	r3, #0
   33c98:	uxtb	r3, r3
   33c9c:	cmp	r3, #0
   33ca0:	bne	340fc <__assert_fail@plt+0x22ebc>
   33ca4:	mvn	r3, #0
   33ca8:	str	r3, [fp, #-24]	; 0xffffffe8
   33cac:	sub	r3, fp, #208	; 0xd0
   33cb0:	mov	r0, r3
   33cb4:	bl	3cae8 <__assert_fail@plt+0x2b8a8>
   33cb8:	b	33cc0 <__assert_fail@plt+0x22a80>
   33cbc:	nop	{0}
   33cc0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33cc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33cc8:	add	r3, r2, r3
   33ccc:	str	r3, [fp, #-72]	; 0xffffffb8
   33cd0:	b	33760 <__assert_fail@plt+0x22520>
   33cd4:	nop	{0}
   33cd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33cdc:	cmn	r3, #1
   33ce0:	ldr	r3, [fp, #-8]
   33ce4:	cmp	r3, #0
   33ce8:	ldr	r3, [fp, #12]
   33cec:	cmp	r3, #0
   33cf0:	beq	34104 <__assert_fail@plt+0x22ec4>
   33cf4:	mov	r3, #1
   33cf8:	str	r3, [fp, #-16]
   33cfc:	b	33d3c <__assert_fail@plt+0x22afc>
   33d00:	ldr	r3, [fp, #-16]
   33d04:	lsl	r3, r3, #3
   33d08:	ldr	r2, [fp, #16]
   33d0c:	add	r3, r2, r3
   33d10:	mvn	r2, #0
   33d14:	str	r2, [r3, #4]
   33d18:	ldr	r2, [fp, #-16]
   33d1c:	lsl	r2, r2, #3
   33d20:	ldr	r1, [fp, #16]
   33d24:	add	r2, r1, r2
   33d28:	ldr	r3, [r3, #4]
   33d2c:	str	r3, [r2]
   33d30:	ldr	r3, [fp, #-16]
   33d34:	add	r3, r3, #1
   33d38:	str	r3, [fp, #-16]
   33d3c:	ldr	r3, [fp, #-16]
   33d40:	ldr	r2, [fp, #12]
   33d44:	cmp	r2, r3
   33d48:	bhi	33d00 <__assert_fail@plt+0x22ac0>
   33d4c:	ldr	r3, [fp, #16]
   33d50:	mov	r2, #0
   33d54:	str	r2, [r3]
   33d58:	ldr	r2, [fp, #-116]	; 0xffffff8c
   33d5c:	ldr	r3, [fp, #16]
   33d60:	str	r2, [r3, #4]
   33d64:	ldr	r3, [fp, #-216]	; 0xffffff28
   33d68:	ldrb	r3, [r3, #28]
   33d6c:	and	r3, r3, #16
   33d70:	uxtb	r3, r3
   33d74:	cmp	r3, #0
   33d78:	bne	33dfc <__assert_fail@plt+0x22bbc>
   33d7c:	ldr	r3, [fp, #12]
   33d80:	cmp	r3, #1
   33d84:	bls	33dfc <__assert_fail@plt+0x22bbc>
   33d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   33d8c:	ldrb	r3, [r3, #88]	; 0x58
   33d90:	and	r3, r3, #1
   33d94:	uxtb	r3, r3
   33d98:	cmp	r3, #0
   33d9c:	beq	33db8 <__assert_fail@plt+0x22b78>
   33da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33da4:	ldr	r3, [r3, #76]	; 0x4c
   33da8:	cmp	r3, #0
   33dac:	ble	33db8 <__assert_fail@plt+0x22b78>
   33db0:	mov	r3, #1
   33db4:	b	33dbc <__assert_fail@plt+0x22b7c>
   33db8:	mov	r3, #0
   33dbc:	and	r3, r3, #1
   33dc0:	uxtb	r3, r3
   33dc4:	sub	r1, fp, #208	; 0xd0
   33dc8:	str	r3, [sp]
   33dcc:	ldr	r3, [fp, #16]
   33dd0:	ldr	r2, [fp, #12]
   33dd4:	ldr	r0, [fp, #-216]	; 0xffffff28
   33dd8:	bl	35b44 <__assert_fail@plt+0x24904>
   33ddc:	str	r0, [fp, #-8]
   33de0:	ldr	r3, [fp, #-8]
   33de4:	cmp	r3, #0
   33de8:	movne	r3, #1
   33dec:	moveq	r3, #0
   33df0:	uxtb	r3, r3
   33df4:	cmp	r3, #0
   33df8:	bne	3410c <__assert_fail@plt+0x22ecc>
   33dfc:	mov	r3, #0
   33e00:	str	r3, [fp, #-16]
   33e04:	b	33f6c <__assert_fail@plt+0x22d2c>
   33e08:	ldr	r3, [fp, #-16]
   33e0c:	lsl	r3, r3, #3
   33e10:	ldr	r2, [fp, #16]
   33e14:	add	r3, r2, r3
   33e18:	ldr	r3, [r3]
   33e1c:	cmn	r3, #1
   33e20:	beq	33f60 <__assert_fail@plt+0x22d20>
   33e24:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   33e28:	cmp	r3, #0
   33e2c:	movne	r3, #1
   33e30:	moveq	r3, #0
   33e34:	uxtb	r3, r3
   33e38:	cmp	r3, #0
   33e3c:	beq	33f00 <__assert_fail@plt+0x22cc0>
   33e40:	ldr	r3, [fp, #-16]
   33e44:	lsl	r3, r3, #3
   33e48:	ldr	r2, [fp, #16]
   33e4c:	add	r3, r2, r3
   33e50:	ldr	r2, [r3]
   33e54:	ldr	r3, [fp, #-180]	; 0xffffff4c
   33e58:	cmp	r2, r3
   33e5c:	bne	33e68 <__assert_fail@plt+0x22c28>
   33e60:	ldr	r3, [fp, #-176]	; 0xffffff50
   33e64:	b	33e8c <__assert_fail@plt+0x22c4c>
   33e68:	ldr	r2, [fp, #-196]	; 0xffffff3c
   33e6c:	ldr	r3, [fp, #-16]
   33e70:	lsl	r3, r3, #3
   33e74:	ldr	r1, [fp, #16]
   33e78:	add	r3, r1, r3
   33e7c:	ldr	r3, [r3]
   33e80:	lsl	r3, r3, #2
   33e84:	add	r3, r2, r3
   33e88:	ldr	r3, [r3]
   33e8c:	ldr	r2, [fp, #-16]
   33e90:	lsl	r2, r2, #3
   33e94:	ldr	r1, [fp, #16]
   33e98:	add	r2, r1, r2
   33e9c:	str	r3, [r2]
   33ea0:	ldr	r3, [fp, #-16]
   33ea4:	lsl	r3, r3, #3
   33ea8:	ldr	r2, [fp, #16]
   33eac:	add	r3, r2, r3
   33eb0:	ldr	r2, [r3, #4]
   33eb4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   33eb8:	cmp	r2, r3
   33ebc:	bne	33ec8 <__assert_fail@plt+0x22c88>
   33ec0:	ldr	r3, [fp, #-176]	; 0xffffff50
   33ec4:	b	33eec <__assert_fail@plt+0x22cac>
   33ec8:	ldr	r2, [fp, #-196]	; 0xffffff3c
   33ecc:	ldr	r3, [fp, #-16]
   33ed0:	lsl	r3, r3, #3
   33ed4:	ldr	r1, [fp, #16]
   33ed8:	add	r3, r1, r3
   33edc:	ldr	r3, [r3, #4]
   33ee0:	lsl	r3, r3, #2
   33ee4:	add	r3, r2, r3
   33ee8:	ldr	r3, [r3]
   33eec:	ldr	r2, [fp, #-16]
   33ef0:	lsl	r2, r2, #3
   33ef4:	ldr	r1, [fp, #16]
   33ef8:	add	r2, r1, r2
   33efc:	str	r3, [r2, #4]
   33f00:	ldr	r3, [fp, #-16]
   33f04:	lsl	r3, r3, #3
   33f08:	ldr	r2, [fp, #16]
   33f0c:	add	r3, r2, r3
   33f10:	ldr	r1, [r3]
   33f14:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33f18:	ldr	r3, [fp, #-16]
   33f1c:	lsl	r3, r3, #3
   33f20:	ldr	r0, [fp, #16]
   33f24:	add	r3, r0, r3
   33f28:	add	r2, r1, r2
   33f2c:	str	r2, [r3]
   33f30:	ldr	r3, [fp, #-16]
   33f34:	lsl	r3, r3, #3
   33f38:	ldr	r2, [fp, #16]
   33f3c:	add	r3, r2, r3
   33f40:	ldr	r1, [r3, #4]
   33f44:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33f48:	ldr	r3, [fp, #-16]
   33f4c:	lsl	r3, r3, #3
   33f50:	ldr	r0, [fp, #16]
   33f54:	add	r3, r0, r3
   33f58:	add	r2, r1, r2
   33f5c:	str	r2, [r3, #4]
   33f60:	ldr	r3, [fp, #-16]
   33f64:	add	r3, r3, #1
   33f68:	str	r3, [fp, #-16]
   33f6c:	ldr	r3, [fp, #-16]
   33f70:	ldr	r2, [fp, #12]
   33f74:	cmp	r2, r3
   33f78:	bhi	33e08 <__assert_fail@plt+0x22bc8>
   33f7c:	mov	r3, #0
   33f80:	str	r3, [fp, #-16]
   33f84:	b	33fd4 <__assert_fail@plt+0x22d94>
   33f88:	ldr	r2, [fp, #-16]
   33f8c:	ldr	r3, [fp, #12]
   33f90:	add	r3, r2, r3
   33f94:	lsl	r3, r3, #3
   33f98:	ldr	r2, [fp, #16]
   33f9c:	add	r3, r2, r3
   33fa0:	mvn	r2, #0
   33fa4:	str	r2, [r3]
   33fa8:	ldr	r2, [fp, #-16]
   33fac:	ldr	r3, [fp, #12]
   33fb0:	add	r3, r2, r3
   33fb4:	lsl	r3, r3, #3
   33fb8:	ldr	r2, [fp, #16]
   33fbc:	add	r3, r2, r3
   33fc0:	mvn	r2, #0
   33fc4:	str	r2, [r3, #4]
   33fc8:	ldr	r3, [fp, #-16]
   33fcc:	add	r3, r3, #1
   33fd0:	str	r3, [fp, #-16]
   33fd4:	ldr	r2, [fp, #-16]
   33fd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33fdc:	cmp	r2, r3
   33fe0:	blt	33f88 <__assert_fail@plt+0x22d48>
   33fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33fe8:	ldr	r3, [r3, #132]	; 0x84
   33fec:	cmp	r3, #0
   33ff0:	beq	34104 <__assert_fail@plt+0x22ec4>
   33ff4:	mov	r3, #0
   33ff8:	str	r3, [fp, #-16]
   33ffc:	b	340b8 <__assert_fail@plt+0x22e78>
   34000:	ldr	r3, [fp, #-20]	; 0xffffffec
   34004:	ldr	r2, [r3, #132]	; 0x84
   34008:	ldr	r3, [fp, #-16]
   3400c:	lsl	r3, r3, #2
   34010:	add	r3, r2, r3
   34014:	ldr	r3, [r3]
   34018:	ldr	r2, [fp, #-16]
   3401c:	cmp	r2, r3
   34020:	beq	340ac <__assert_fail@plt+0x22e6c>
   34024:	ldr	r3, [fp, #-20]	; 0xffffffec
   34028:	ldr	r2, [r3, #132]	; 0x84
   3402c:	ldr	r3, [fp, #-16]
   34030:	lsl	r3, r3, #2
   34034:	add	r3, r2, r3
   34038:	ldr	r3, [r3]
   3403c:	add	r3, r3, #1
   34040:	lsl	r3, r3, #3
   34044:	ldr	r2, [fp, #16]
   34048:	add	r2, r2, r3
   3404c:	ldr	r3, [fp, #-16]
   34050:	add	r3, r3, #1
   34054:	lsl	r3, r3, #3
   34058:	ldr	r1, [fp, #16]
   3405c:	add	r3, r1, r3
   34060:	ldr	r2, [r2]
   34064:	str	r2, [r3]
   34068:	ldr	r3, [fp, #-20]	; 0xffffffec
   3406c:	ldr	r2, [r3, #132]	; 0x84
   34070:	ldr	r3, [fp, #-16]
   34074:	lsl	r3, r3, #2
   34078:	add	r3, r2, r3
   3407c:	ldr	r3, [r3]
   34080:	add	r3, r3, #1
   34084:	lsl	r3, r3, #3
   34088:	ldr	r2, [fp, #16]
   3408c:	add	r2, r2, r3
   34090:	ldr	r3, [fp, #-16]
   34094:	add	r3, r3, #1
   34098:	lsl	r3, r3, #3
   3409c:	ldr	r1, [fp, #16]
   340a0:	add	r3, r1, r3
   340a4:	ldr	r2, [r2, #4]
   340a8:	str	r2, [r3, #4]
   340ac:	ldr	r3, [fp, #-16]
   340b0:	add	r3, r3, #1
   340b4:	str	r3, [fp, #-16]
   340b8:	ldr	r3, [fp, #-16]
   340bc:	add	r3, r3, #1
   340c0:	mov	r2, r3
   340c4:	ldr	r3, [fp, #12]
   340c8:	cmp	r3, r2
   340cc:	bhi	34000 <__assert_fail@plt+0x22dc0>
   340d0:	b	34104 <__assert_fail@plt+0x22ec4>
   340d4:	nop	{0}
   340d8:	b	34110 <__assert_fail@plt+0x22ed0>
   340dc:	nop	{0}
   340e0:	b	34110 <__assert_fail@plt+0x22ed0>
   340e4:	nop	{0}
   340e8:	b	34110 <__assert_fail@plt+0x22ed0>
   340ec:	nop	{0}
   340f0:	b	34110 <__assert_fail@plt+0x22ed0>
   340f4:	nop	{0}
   340f8:	b	34110 <__assert_fail@plt+0x22ed0>
   340fc:	nop	{0}
   34100:	b	34110 <__assert_fail@plt+0x22ed0>
   34104:	nop	{0}
   34108:	b	34110 <__assert_fail@plt+0x22ed0>
   3410c:	nop	{0}
   34110:	ldr	r3, [fp, #-108]	; 0xffffff94
   34114:	mov	r0, r3
   34118:	bl	13798 <__assert_fail@plt+0x2558>
   3411c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34120:	ldr	r3, [r3, #76]	; 0x4c
   34124:	cmp	r3, #0
   34128:	beq	34138 <__assert_fail@plt+0x22ef8>
   3412c:	sub	r3, fp, #208	; 0xd0
   34130:	mov	r0, r3
   34134:	bl	3cc1c <__assert_fail@plt+0x2b9dc>
   34138:	sub	r3, fp, #208	; 0xd0
   3413c:	mov	r0, r3
   34140:	bl	269b8 <__assert_fail@plt+0x15778>
   34144:	ldr	r3, [fp, #-8]
   34148:	mov	r0, r3
   3414c:	sub	sp, fp, #4
   34150:	ldr	fp, [sp]
   34154:	add	sp, sp, #4
   34158:	pop	{pc}		; (ldr pc, [sp], #4)
   3415c:	str	fp, [sp, #-8]!
   34160:	str	lr, [sp, #4]
   34164:	add	fp, sp, #4
   34168:	sub	sp, sp, #72	; 0x48
   3416c:	str	r0, [fp, #-64]	; 0xffffffc0
   34170:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34174:	ldr	r3, [r3, #84]	; 0x54
   34178:	str	r3, [fp, #-28]	; 0xffffffe4
   3417c:	mov	r3, #0
   34180:	str	r3, [fp, #-24]	; 0xffffffe8
   34184:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34188:	ldr	r3, [r3, #100]	; 0x64
   3418c:	cmp	r3, #0
   34190:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34194:	ldr	r3, [r3, #92]	; 0x5c
   34198:	str	r3, [fp, #-12]
   3419c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   341a0:	ldr	r3, [r3, #96]	; 0x60
   341a4:	str	r3, [fp, #-8]
   341a8:	ldr	r3, [fp, #-12]
   341ac:	cmn	r3, #-1073741822	; 0xc0000002
   341b0:	movhi	r3, #1
   341b4:	movls	r3, #0
   341b8:	uxtb	r3, r3
   341bc:	cmp	r3, #0
   341c0:	beq	341cc <__assert_fail@plt+0x22f8c>
   341c4:	mov	r3, #12
   341c8:	b	344c0 <__assert_fail@plt+0x23280>
   341cc:	ldr	r3, [fp, #-12]
   341d0:	add	r3, r3, #1
   341d4:	lsl	r3, r3, #2
   341d8:	mov	r0, r3
   341dc:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   341e0:	mov	r3, r0
   341e4:	str	r3, [fp, #-20]	; 0xffffffec
   341e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   341ec:	cmp	r3, #0
   341f0:	moveq	r3, #1
   341f4:	movne	r3, #0
   341f8:	uxtb	r3, r3
   341fc:	cmp	r3, #0
   34200:	beq	34210 <__assert_fail@plt+0x22fd0>
   34204:	mov	r3, #12
   34208:	str	r3, [fp, #-16]
   3420c:	b	344ac <__assert_fail@plt+0x2326c>
   34210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34214:	ldr	r3, [r3, #76]	; 0x4c
   34218:	cmp	r3, #0
   3421c:	beq	343e4 <__assert_fail@plt+0x231a4>
   34220:	ldr	r3, [fp, #-12]
   34224:	add	r3, r3, #1
   34228:	lsl	r3, r3, #2
   3422c:	mov	r0, r3
   34230:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   34234:	mov	r3, r0
   34238:	str	r3, [fp, #-24]	; 0xffffffe8
   3423c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34240:	cmp	r3, #0
   34244:	moveq	r3, #1
   34248:	movne	r3, #0
   3424c:	uxtb	r3, r3
   34250:	cmp	r3, #0
   34254:	beq	34264 <__assert_fail@plt+0x23024>
   34258:	mov	r3, #12
   3425c:	str	r3, [fp, #-16]
   34260:	b	344ac <__assert_fail@plt+0x2326c>
   34264:	ldr	r3, [fp, #-12]
   34268:	add	r3, r3, #1
   3426c:	lsl	r3, r3, #2
   34270:	mov	r2, r3
   34274:	mov	r1, #0
   34278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3427c:	bl	1118c <memset@plt>
   34280:	sub	r0, fp, #56	; 0x38
   34284:	ldr	r3, [fp, #-12]
   34288:	str	r3, [sp]
   3428c:	ldr	r3, [fp, #-8]
   34290:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34294:	ldr	r1, [fp, #-20]	; 0xffffffec
   34298:	bl	3d374 <__assert_fail@plt+0x2c134>
   3429c:	sub	r3, fp, #56	; 0x38
   342a0:	mov	r1, r3
   342a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   342a8:	bl	361bc <__assert_fail@plt+0x24f7c>
   342ac:	str	r0, [fp, #-16]
   342b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   342b4:	mov	r0, r3
   342b8:	bl	13798 <__assert_fail@plt+0x2558>
   342bc:	ldr	r3, [fp, #-16]
   342c0:	cmp	r3, #0
   342c4:	movne	r3, #1
   342c8:	moveq	r3, #0
   342cc:	uxtb	r3, r3
   342d0:	cmp	r3, #0
   342d4:	bne	344a0 <__assert_fail@plt+0x23260>
   342d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   342dc:	ldr	r3, [r3]
   342e0:	cmp	r3, #0
   342e4:	bne	34398 <__assert_fail@plt+0x23158>
   342e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   342ec:	ldr	r3, [r3]
   342f0:	cmp	r3, #0
   342f4:	bne	34398 <__assert_fail@plt+0x23158>
   342f8:	ldr	r3, [fp, #-12]
   342fc:	sub	r3, r3, #1
   34300:	str	r3, [fp, #-12]
   34304:	ldr	r3, [fp, #-12]
   34308:	cmp	r3, #0
   3430c:	bge	3431c <__assert_fail@plt+0x230dc>
   34310:	mov	r3, #1
   34314:	str	r3, [fp, #-16]
   34318:	b	344ac <__assert_fail@plt+0x2326c>
   3431c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34320:	ldr	r2, [r3, #100]	; 0x64
   34324:	ldr	r3, [fp, #-12]
   34328:	lsl	r3, r3, #2
   3432c:	add	r3, r2, r3
   34330:	ldr	r3, [r3]
   34334:	cmp	r3, #0
   34338:	beq	342f8 <__assert_fail@plt+0x230b8>
   3433c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34340:	ldr	r2, [r3, #100]	; 0x64
   34344:	ldr	r3, [fp, #-12]
   34348:	lsl	r3, r3, #2
   3434c:	add	r3, r2, r3
   34350:	ldr	r3, [r3]
   34354:	ldrb	r3, [r3, #52]	; 0x34
   34358:	and	r3, r3, #16
   3435c:	uxtb	r3, r3
   34360:	cmp	r3, #0
   34364:	beq	342f8 <__assert_fail@plt+0x230b8>
   34368:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3436c:	ldr	r2, [r3, #100]	; 0x64
   34370:	ldr	r3, [fp, #-12]
   34374:	lsl	r3, r3, #2
   34378:	add	r3, r2, r3
   3437c:	ldr	r3, [r3]
   34380:	ldr	r2, [fp, #-12]
   34384:	mov	r1, r3
   34388:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3438c:	bl	34bb4 <__assert_fail@plt+0x23974>
   34390:	str	r0, [fp, #-8]
   34394:	b	34264 <__assert_fail@plt+0x23024>
   34398:	ldr	r3, [fp, #-12]
   3439c:	add	r3, r3, #1
   343a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   343a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   343ac:	bl	367a4 <__assert_fail@plt+0x25564>
   343b0:	str	r0, [fp, #-16]
   343b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   343b8:	bl	13798 <__assert_fail@plt+0x2558>
   343bc:	mov	r3, #0
   343c0:	str	r3, [fp, #-24]	; 0xffffffe8
   343c4:	ldr	r3, [fp, #-16]
   343c8:	cmp	r3, #0
   343cc:	movne	r3, #1
   343d0:	moveq	r3, #0
   343d4:	uxtb	r3, r3
   343d8:	cmp	r3, #0
   343dc:	beq	34458 <__assert_fail@plt+0x23218>
   343e0:	b	344ac <__assert_fail@plt+0x2326c>
   343e4:	sub	r0, fp, #56	; 0x38
   343e8:	ldr	r3, [fp, #-12]
   343ec:	str	r3, [sp]
   343f0:	ldr	r3, [fp, #-8]
   343f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   343fc:	bl	3d374 <__assert_fail@plt+0x2c134>
   34400:	sub	r3, fp, #56	; 0x38
   34404:	mov	r1, r3
   34408:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3440c:	bl	361bc <__assert_fail@plt+0x24f7c>
   34410:	str	r0, [fp, #-16]
   34414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34418:	mov	r0, r3
   3441c:	bl	13798 <__assert_fail@plt+0x2558>
   34420:	ldr	r3, [fp, #-16]
   34424:	cmp	r3, #0
   34428:	movne	r3, #1
   3442c:	moveq	r3, #0
   34430:	uxtb	r3, r3
   34434:	cmp	r3, #0
   34438:	bne	344a8 <__assert_fail@plt+0x23268>
   3443c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34440:	ldr	r3, [r3]
   34444:	cmp	r3, #0
   34448:	bne	34458 <__assert_fail@plt+0x23218>
   3444c:	mov	r3, #1
   34450:	str	r3, [fp, #-16]
   34454:	b	344ac <__assert_fail@plt+0x2326c>
   34458:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3445c:	ldr	r3, [r3, #100]	; 0x64
   34460:	mov	r0, r3
   34464:	bl	13798 <__assert_fail@plt+0x2558>
   34468:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3446c:	ldr	r2, [fp, #-20]	; 0xffffffec
   34470:	str	r2, [r3, #100]	; 0x64
   34474:	mov	r3, #0
   34478:	str	r3, [fp, #-20]	; 0xffffffec
   3447c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34480:	ldr	r2, [fp, #-8]
   34484:	str	r2, [r3, #96]	; 0x60
   34488:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3448c:	ldr	r2, [fp, #-12]
   34490:	str	r2, [r3, #92]	; 0x5c
   34494:	mov	r3, #0
   34498:	str	r3, [fp, #-16]
   3449c:	b	344ac <__assert_fail@plt+0x2326c>
   344a0:	nop	{0}
   344a4:	b	344ac <__assert_fail@plt+0x2326c>
   344a8:	nop	{0}
   344ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   344b0:	bl	13798 <__assert_fail@plt+0x2558>
   344b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   344b8:	bl	13798 <__assert_fail@plt+0x2558>
   344bc:	ldr	r3, [fp, #-16]
   344c0:	mov	r0, r3
   344c4:	sub	sp, fp, #4
   344c8:	ldr	fp, [sp]
   344cc:	add	sp, sp, #4
   344d0:	pop	{pc}		; (ldr pc, [sp], #4)
   344d4:	str	fp, [sp, #-8]!
   344d8:	str	lr, [sp, #4]
   344dc:	add	fp, sp, #4
   344e0:	sub	sp, sp, #80	; 0x50
   344e4:	str	r0, [fp, #-72]	; 0xffffffb8
   344e8:	mov	r3, r1
   344ec:	str	r2, [fp, #-80]	; 0xffffffb0
   344f0:	strb	r3, [fp, #-73]	; 0xffffffb7
   344f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   344f8:	ldr	r3, [r3, #84]	; 0x54
   344fc:	str	r3, [fp, #-28]	; 0xffffffe4
   34500:	mov	r3, #0
   34504:	str	r3, [fp, #-8]
   34508:	mvn	r3, #0
   3450c:	str	r3, [fp, #-12]
   34510:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34514:	ldr	r3, [r3, #40]	; 0x28
   34518:	str	r3, [fp, #-32]	; 0xffffffe0
   3451c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   34520:	cmp	r3, #0
   34524:	movne	r3, #1
   34528:	moveq	r3, #0
   3452c:	strb	r3, [fp, #-17]	; 0xffffffef
   34530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34534:	str	r3, [fp, #-24]	; 0xffffffe8
   34538:	mov	r3, #0
   3453c:	str	r3, [fp, #-64]	; 0xffffffc0
   34540:	sub	r3, fp, #64	; 0x40
   34544:	str	r3, [fp, #-44]	; 0xffffffd4
   34548:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3454c:	str	r3, [fp, #-48]	; 0xffffffd0
   34550:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34554:	str	r3, [fp, #-52]	; 0xffffffcc
   34558:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3455c:	ldr	r3, [r3, #84]	; 0x54
   34560:	str	r3, [fp, #-56]	; 0xffffffc8
   34564:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34568:	ldr	r3, [r3, #36]	; 0x24
   3456c:	ldrb	r3, [r3, #52]	; 0x34
   34570:	bic	r3, r3, #127	; 0x7f
   34574:	uxtb	r3, r3
   34578:	cmp	r3, #0
   3457c:	beq	3465c <__assert_fail@plt+0x2341c>
   34580:	ldr	r0, [fp, #-48]	; 0xffffffd0
   34584:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34588:	sub	r1, r3, #1
   3458c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   34590:	ldr	r3, [r3, #88]	; 0x58
   34594:	mov	r2, r3
   34598:	bl	26a20 <__assert_fail@plt+0x157e0>
   3459c:	str	r0, [fp, #-60]	; 0xffffffc4
   345a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   345a4:	and	r3, r3, #1
   345a8:	cmp	r3, #0
   345ac:	beq	345bc <__assert_fail@plt+0x2337c>
   345b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   345b4:	ldr	r3, [r3, #40]	; 0x28
   345b8:	b	34664 <__assert_fail@plt+0x23424>
   345bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   345c0:	cmp	r3, #0
   345c4:	bne	345d4 <__assert_fail@plt+0x23394>
   345c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   345cc:	ldr	r3, [r3, #36]	; 0x24
   345d0:	b	34664 <__assert_fail@plt+0x23424>
   345d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   345d8:	and	r3, r3, #4
   345dc:	cmp	r3, #0
   345e0:	beq	34600 <__assert_fail@plt+0x233c0>
   345e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   345e8:	and	r3, r3, #2
   345ec:	cmp	r3, #0
   345f0:	beq	34600 <__assert_fail@plt+0x233c0>
   345f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   345f8:	ldr	r3, [r3, #48]	; 0x30
   345fc:	b	34664 <__assert_fail@plt+0x23424>
   34600:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34604:	and	r3, r3, #2
   34608:	cmp	r3, #0
   3460c:	beq	3461c <__assert_fail@plt+0x233dc>
   34610:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34614:	ldr	r3, [r3, #44]	; 0x2c
   34618:	b	34664 <__assert_fail@plt+0x23424>
   3461c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34620:	and	r3, r3, #4
   34624:	cmp	r3, #0
   34628:	beq	34650 <__assert_fail@plt+0x23410>
   3462c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34630:	ldr	r3, [r3, #36]	; 0x24
   34634:	ldr	r2, [r3, #40]	; 0x28
   34638:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3463c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   34640:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34644:	bl	287b4 <__assert_fail@plt+0x17574>
   34648:	mov	r3, r0
   3464c:	b	34664 <__assert_fail@plt+0x23424>
   34650:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34654:	ldr	r3, [r3, #36]	; 0x24
   34658:	b	34664 <__assert_fail@plt+0x23424>
   3465c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34660:	ldr	r3, [r3, #36]	; 0x24
   34664:	str	r3, [fp, #-16]
   34668:	ldr	r3, [fp, #-16]
   3466c:	cmp	r3, #0
   34670:	moveq	r3, #1
   34674:	movne	r3, #0
   34678:	uxtb	r3, r3
   3467c:	cmp	r3, #0
   34680:	beq	34694 <__assert_fail@plt+0x23454>
   34684:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34688:	cmp	r3, #12
   3468c:	mvn	r3, #1
   34690:	b	34a84 <__assert_fail@plt+0x23844>
   34694:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34698:	ldr	r3, [r3, #100]	; 0x64
   3469c:	cmp	r3, #0
   346a0:	beq	34774 <__assert_fail@plt+0x23534>
   346a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   346a8:	ldr	r2, [r3, #100]	; 0x64
   346ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   346b0:	lsl	r3, r3, #2
   346b4:	add	r3, r2, r3
   346b8:	ldr	r2, [fp, #-16]
   346bc:	str	r2, [r3]
   346c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   346c4:	ldr	r3, [r3, #76]	; 0x4c
   346c8:	cmp	r3, #0
   346cc:	beq	34774 <__assert_fail@plt+0x23534>
   346d0:	mov	r3, #0
   346d4:	strb	r3, [fp, #-17]	; 0xffffffef
   346d8:	ldr	r3, [fp, #-16]
   346dc:	add	r3, r3, #4
   346e0:	mov	r2, #0
   346e4:	mov	r1, r3
   346e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   346ec:	bl	384b0 <__assert_fail@plt+0x27270>
   346f0:	mov	r3, r0
   346f4:	str	r3, [fp, #-64]	; 0xffffffc0
   346f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   346fc:	cmp	r3, #0
   34700:	movne	r3, #1
   34704:	moveq	r3, #0
   34708:	uxtb	r3, r3
   3470c:	cmp	r3, #0
   34710:	beq	3471c <__assert_fail@plt+0x234dc>
   34714:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34718:	b	34a84 <__assert_fail@plt+0x23844>
   3471c:	ldr	r3, [fp, #-16]
   34720:	ldrb	r3, [r3, #52]	; 0x34
   34724:	and	r3, r3, #64	; 0x40
   34728:	uxtb	r3, r3
   3472c:	cmp	r3, #0
   34730:	beq	34774 <__assert_fail@plt+0x23534>
   34734:	ldr	r3, [fp, #-16]
   34738:	add	r3, r3, #4
   3473c:	mov	r1, r3
   34740:	ldr	r0, [fp, #-72]	; 0xffffffb8
   34744:	bl	38a18 <__assert_fail@plt+0x277d8>
   34748:	mov	r3, r0
   3474c:	str	r3, [fp, #-64]	; 0xffffffc0
   34750:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34754:	cmp	r3, #0
   34758:	movne	r3, #1
   3475c:	moveq	r3, #0
   34760:	uxtb	r3, r3
   34764:	cmp	r3, #0
   34768:	beq	34774 <__assert_fail@plt+0x23534>
   3476c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34770:	b	34a84 <__assert_fail@plt+0x23844>
   34774:	ldr	r3, [fp, #-16]
   34778:	ldrb	r3, [r3, #52]	; 0x34
   3477c:	ubfx	r3, r3, #4, #1
   34780:	uxtb	r3, r3
   34784:	cmp	r3, #0
   34788:	beq	34a3c <__assert_fail@plt+0x237fc>
   3478c:	ldr	r3, [fp, #-16]
   34790:	ldrb	r3, [r3, #52]	; 0x34
   34794:	bic	r3, r3, #127	; 0x7f
   34798:	uxtb	r3, r3
   3479c:	cmp	r3, #0
   347a0:	beq	347c0 <__assert_fail@plt+0x23580>
   347a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   347a8:	ldr	r1, [fp, #-16]
   347ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   347b0:	bl	34bb4 <__assert_fail@plt+0x23974>
   347b4:	mov	r3, r0
   347b8:	cmp	r3, #0
   347bc:	beq	34a3c <__assert_fail@plt+0x237fc>
   347c0:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   347c4:	eor	r3, r3, #1
   347c8:	uxtb	r3, r3
   347cc:	cmp	r3, #0
   347d0:	beq	347dc <__assert_fail@plt+0x2359c>
   347d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   347d8:	b	34a84 <__assert_fail@plt+0x23844>
   347dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   347e0:	str	r3, [fp, #-12]
   347e4:	mov	r3, #1
   347e8:	str	r3, [fp, #-8]
   347ec:	b	34a3c <__assert_fail@plt+0x237fc>
   347f0:	ldr	r3, [fp, #-16]
   347f4:	str	r3, [fp, #-36]	; 0xffffffdc
   347f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   347fc:	ldr	r3, [r3, #40]	; 0x28
   34800:	add	r3, r3, #1
   34804:	str	r3, [fp, #-40]	; 0xffffffd8
   34808:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3480c:	ldr	r3, [r3, #36]	; 0x24
   34810:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34814:	cmp	r2, r3
   34818:	movge	r3, #1
   3481c:	movlt	r3, #0
   34820:	uxtb	r3, r3
   34824:	cmp	r3, #0
   34828:	beq	34844 <__assert_fail@plt+0x23604>
   3482c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34830:	ldr	r2, [r3, #36]	; 0x24
   34834:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34838:	ldr	r3, [r3, #48]	; 0x30
   3483c:	cmp	r2, r3
   34840:	blt	34880 <__assert_fail@plt+0x23640>
   34844:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34848:	ldr	r3, [r3, #28]
   3484c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34850:	cmp	r2, r3
   34854:	movge	r3, #1
   34858:	movlt	r3, #0
   3485c:	uxtb	r3, r3
   34860:	cmp	r3, #0
   34864:	beq	348c8 <__assert_fail@plt+0x23688>
   34868:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3486c:	ldr	r2, [r3, #28]
   34870:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34874:	ldr	r3, [r3, #48]	; 0x30
   34878:	cmp	r2, r3
   3487c:	bge	348c8 <__assert_fail@plt+0x23688>
   34880:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34884:	add	r3, r3, #1
   34888:	mov	r1, r3
   3488c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   34890:	bl	3c7c8 <__assert_fail@plt+0x2b588>
   34894:	mov	r3, r0
   34898:	str	r3, [fp, #-64]	; 0xffffffc0
   3489c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   348a0:	cmp	r3, #0
   348a4:	movne	r3, #1
   348a8:	moveq	r3, #0
   348ac:	uxtb	r3, r3
   348b0:	cmp	r3, #0
   348b4:	beq	348c8 <__assert_fail@plt+0x23688>
   348b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   348bc:	cmp	r3, #12
   348c0:	mvn	r3, #1
   348c4:	b	34a84 <__assert_fail@plt+0x23844>
   348c8:	sub	r3, fp, #64	; 0x40
   348cc:	ldr	r2, [fp, #-16]
   348d0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   348d4:	mov	r0, r3
   348d8:	bl	37f50 <__assert_fail@plt+0x26d10>
   348dc:	str	r0, [fp, #-16]
   348e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   348e4:	ldr	r3, [r3, #100]	; 0x64
   348e8:	cmp	r3, #0
   348ec:	beq	34908 <__assert_fail@plt+0x236c8>
   348f0:	sub	r3, fp, #64	; 0x40
   348f4:	ldr	r2, [fp, #-16]
   348f8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   348fc:	mov	r0, r3
   34900:	bl	38108 <__assert_fail@plt+0x26ec8>
   34904:	str	r0, [fp, #-16]
   34908:	ldr	r3, [fp, #-16]
   3490c:	cmp	r3, #0
   34910:	bne	34988 <__assert_fail@plt+0x23748>
   34914:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34918:	cmp	r3, #0
   3491c:	movne	r3, #1
   34920:	moveq	r3, #0
   34924:	uxtb	r3, r3
   34928:	cmp	r3, #0
   3492c:	beq	34938 <__assert_fail@plt+0x236f8>
   34930:	mvn	r3, #1
   34934:	b	34a84 <__assert_fail@plt+0x23844>
   34938:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3493c:	ldr	r3, [r3, #100]	; 0x64
   34940:	cmp	r3, #0
   34944:	beq	34a5c <__assert_fail@plt+0x2381c>
   34948:	ldr	r3, [fp, #-8]
   3494c:	cmp	r3, #0
   34950:	beq	34968 <__assert_fail@plt+0x23728>
   34954:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   34958:	eor	r3, r3, #1
   3495c:	uxtb	r3, r3
   34960:	cmp	r3, #0
   34964:	bne	34a5c <__assert_fail@plt+0x2381c>
   34968:	sub	r3, fp, #64	; 0x40
   3496c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34970:	mov	r0, r3
   34974:	bl	383e0 <__assert_fail@plt+0x271a0>
   34978:	str	r0, [fp, #-16]
   3497c:	ldr	r3, [fp, #-16]
   34980:	cmp	r3, #0
   34984:	beq	34a5c <__assert_fail@plt+0x2381c>
   34988:	ldrb	r3, [fp, #-17]	; 0xffffffef
   3498c:	cmp	r3, #0
   34990:	beq	349b8 <__assert_fail@plt+0x23778>
   34994:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34998:	ldr	r3, [fp, #-16]
   3499c:	cmp	r2, r3
   349a0:	bne	349b0 <__assert_fail@plt+0x23770>
   349a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   349a8:	str	r3, [fp, #-24]	; 0xffffffe8
   349ac:	b	349b8 <__assert_fail@plt+0x23778>
   349b0:	mov	r3, #0
   349b4:	strb	r3, [fp, #-17]	; 0xffffffef
   349b8:	ldr	r3, [fp, #-16]
   349bc:	ldrb	r3, [r3, #52]	; 0x34
   349c0:	and	r3, r3, #16
   349c4:	uxtb	r3, r3
   349c8:	cmp	r3, #0
   349cc:	beq	34a3c <__assert_fail@plt+0x237fc>
   349d0:	ldr	r3, [fp, #-16]
   349d4:	ldrb	r3, [r3, #52]	; 0x34
   349d8:	bic	r3, r3, #127	; 0x7f
   349dc:	uxtb	r3, r3
   349e0:	cmp	r3, #0
   349e4:	beq	34a0c <__assert_fail@plt+0x237cc>
   349e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   349ec:	ldr	r3, [r3, #40]	; 0x28
   349f0:	mov	r2, r3
   349f4:	ldr	r1, [fp, #-16]
   349f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   349fc:	bl	34bb4 <__assert_fail@plt+0x23974>
   34a00:	mov	r3, r0
   34a04:	cmp	r3, #0
   34a08:	beq	34a3c <__assert_fail@plt+0x237fc>
   34a0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34a10:	ldr	r3, [r3, #40]	; 0x28
   34a14:	str	r3, [fp, #-12]
   34a18:	mov	r3, #1
   34a1c:	str	r3, [fp, #-8]
   34a20:	mov	r3, #0
   34a24:	str	r3, [fp, #-80]	; 0xffffffb0
   34a28:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   34a2c:	eor	r3, r3, #1
   34a30:	uxtb	r3, r3
   34a34:	cmp	r3, #0
   34a38:	bne	34a58 <__assert_fail@plt+0x23818>
   34a3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34a40:	ldr	r2, [r3, #56]	; 0x38
   34a44:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34a48:	ldr	r3, [r3, #40]	; 0x28
   34a4c:	cmp	r2, r3
   34a50:	bgt	347f0 <__assert_fail@plt+0x235b0>
   34a54:	b	34a5c <__assert_fail@plt+0x2381c>
   34a58:	nop	{0}
   34a5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   34a60:	cmp	r3, #0
   34a64:	beq	34a80 <__assert_fail@plt+0x23840>
   34a68:	ldr	r3, [fp, #-80]	; 0xffffffb0
   34a6c:	ldr	r2, [r3]
   34a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34a74:	add	r2, r2, r3
   34a78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   34a7c:	str	r2, [r3]
   34a80:	ldr	r3, [fp, #-12]
   34a84:	mov	r0, r3
   34a88:	sub	sp, fp, #4
   34a8c:	ldr	fp, [sp]
   34a90:	add	sp, sp, #4
   34a94:	pop	{pc}		; (ldr pc, [sp], #4)
   34a98:	push	{fp}		; (str fp, [sp, #-4]!)
   34a9c:	add	fp, sp, #0
   34aa0:	sub	sp, sp, #28
   34aa4:	str	r0, [fp, #-16]
   34aa8:	str	r1, [fp, #-20]	; 0xffffffec
   34aac:	str	r2, [fp, #-24]	; 0xffffffe8
   34ab0:	ldr	r3, [fp, #-16]
   34ab4:	ldr	r2, [r3]
   34ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   34abc:	lsl	r3, r3, #3
   34ac0:	add	r3, r2, r3
   34ac4:	ldrb	r3, [r3, #4]
   34ac8:	str	r3, [fp, #-8]
   34acc:	ldr	r3, [fp, #-16]
   34ad0:	ldr	r2, [r3]
   34ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   34ad8:	lsl	r3, r3, #3
   34adc:	add	r3, r2, r3
   34ae0:	ldr	r3, [r3, #4]
   34ae4:	ubfx	r3, r3, #8, #10
   34ae8:	uxth	r3, r3
   34aec:	str	r3, [fp, #-12]
   34af0:	ldr	r3, [fp, #-8]
   34af4:	cmp	r3, #2
   34af8:	beq	34b04 <__assert_fail@plt+0x238c4>
   34afc:	mov	r3, #0
   34b00:	b	34ba4 <__assert_fail@plt+0x23964>
   34b04:	ldr	r3, [fp, #-12]
   34b08:	cmp	r3, #0
   34b0c:	bne	34b18 <__assert_fail@plt+0x238d8>
   34b10:	mov	r3, #1
   34b14:	b	34ba4 <__assert_fail@plt+0x23964>
   34b18:	ldr	r3, [fp, #-12]
   34b1c:	and	r3, r3, #4
   34b20:	cmp	r3, #0
   34b24:	beq	34b38 <__assert_fail@plt+0x238f8>
   34b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34b2c:	and	r3, r3, #1
   34b30:	cmp	r3, #0
   34b34:	beq	34b98 <__assert_fail@plt+0x23958>
   34b38:	ldr	r3, [fp, #-12]
   34b3c:	and	r3, r3, #8
   34b40:	cmp	r3, #0
   34b44:	beq	34b58 <__assert_fail@plt+0x23918>
   34b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34b4c:	and	r3, r3, #1
   34b50:	cmp	r3, #0
   34b54:	bne	34b98 <__assert_fail@plt+0x23958>
   34b58:	ldr	r3, [fp, #-12]
   34b5c:	and	r3, r3, #32
   34b60:	cmp	r3, #0
   34b64:	beq	34b78 <__assert_fail@plt+0x23938>
   34b68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34b6c:	and	r3, r3, #2
   34b70:	cmp	r3, #0
   34b74:	beq	34b98 <__assert_fail@plt+0x23958>
   34b78:	ldr	r3, [fp, #-12]
   34b7c:	and	r3, r3, #128	; 0x80
   34b80:	cmp	r3, #0
   34b84:	beq	34ba0 <__assert_fail@plt+0x23960>
   34b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34b8c:	and	r3, r3, #8
   34b90:	cmp	r3, #0
   34b94:	bne	34ba0 <__assert_fail@plt+0x23960>
   34b98:	mov	r3, #0
   34b9c:	b	34ba4 <__assert_fail@plt+0x23964>
   34ba0:	mov	r3, #1
   34ba4:	mov	r0, r3
   34ba8:	add	sp, fp, #0
   34bac:	pop	{fp}		; (ldr fp, [sp], #4)
   34bb0:	bx	lr
   34bb4:	str	fp, [sp, #-8]!
   34bb8:	str	lr, [sp, #4]
   34bbc:	add	fp, sp, #4
   34bc0:	sub	sp, sp, #24
   34bc4:	str	r0, [fp, #-16]
   34bc8:	str	r1, [fp, #-20]	; 0xffffffec
   34bcc:	str	r2, [fp, #-24]	; 0xffffffe8
   34bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   34bd4:	ldrb	r3, [r3, #52]	; 0x34
   34bd8:	and	r3, r3, #16
   34bdc:	uxtb	r3, r3
   34be0:	cmp	r3, #0
   34be4:	ldr	r0, [fp, #-16]
   34be8:	ldr	r3, [fp, #-16]
   34bec:	ldr	r3, [r3, #88]	; 0x58
   34bf0:	mov	r2, r3
   34bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34bf8:	bl	26a20 <__assert_fail@plt+0x157e0>
   34bfc:	str	r0, [fp, #-12]
   34c00:	mov	r3, #0
   34c04:	str	r3, [fp, #-8]
   34c08:	b	34c6c <__assert_fail@plt+0x23a2c>
   34c0c:	ldr	r3, [fp, #-16]
   34c10:	ldr	r0, [r3, #84]	; 0x54
   34c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   34c18:	ldr	r2, [r3, #12]
   34c1c:	ldr	r3, [fp, #-8]
   34c20:	lsl	r3, r3, #2
   34c24:	add	r3, r2, r3
   34c28:	ldr	r3, [r3]
   34c2c:	ldr	r2, [fp, #-12]
   34c30:	mov	r1, r3
   34c34:	bl	34a98 <__assert_fail@plt+0x23858>
   34c38:	mov	r3, r0
   34c3c:	cmp	r3, #0
   34c40:	beq	34c60 <__assert_fail@plt+0x23a20>
   34c44:	ldr	r3, [fp, #-20]	; 0xffffffec
   34c48:	ldr	r2, [r3, #12]
   34c4c:	ldr	r3, [fp, #-8]
   34c50:	lsl	r3, r3, #2
   34c54:	add	r3, r2, r3
   34c58:	ldr	r3, [r3]
   34c5c:	b	34c84 <__assert_fail@plt+0x23a44>
   34c60:	ldr	r3, [fp, #-8]
   34c64:	add	r3, r3, #1
   34c68:	str	r3, [fp, #-8]
   34c6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34c70:	ldr	r3, [r3, #8]
   34c74:	ldr	r2, [fp, #-8]
   34c78:	cmp	r2, r3
   34c7c:	blt	34c0c <__assert_fail@plt+0x239cc>
   34c80:	mov	r3, #0
   34c84:	mov	r0, r3
   34c88:	sub	sp, fp, #4
   34c8c:	ldr	fp, [sp]
   34c90:	add	sp, sp, #4
   34c94:	pop	{pc}		; (ldr pc, [sp], #4)
   34c98:	str	fp, [sp, #-8]!
   34c9c:	str	lr, [sp, #4]
   34ca0:	add	fp, sp, #4
   34ca4:	sub	sp, sp, #88	; 0x58
   34ca8:	str	r0, [fp, #-64]	; 0xffffffc0
   34cac:	str	r1, [fp, #-68]	; 0xffffffbc
   34cb0:	str	r2, [fp, #-72]	; 0xffffffb8
   34cb4:	str	r3, [fp, #-76]	; 0xffffffb4
   34cb8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34cbc:	ldr	r3, [r3, #84]	; 0x54
   34cc0:	str	r3, [fp, #-20]	; 0xffffffec
   34cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   34cc8:	ldr	r2, [r3]
   34ccc:	ldr	r3, [fp, #8]
   34cd0:	lsl	r3, r3, #3
   34cd4:	add	r3, r2, r3
   34cd8:	ldrb	r3, [r3, #4]
   34cdc:	and	r3, r3, #8
   34ce0:	cmp	r3, #0
   34ce4:	beq	34e7c <__assert_fail@plt+0x23c3c>
   34ce8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34cec:	ldr	r2, [r3, #100]	; 0x64
   34cf0:	ldr	r3, [fp, #4]
   34cf4:	ldr	r3, [r3]
   34cf8:	lsl	r3, r3, #2
   34cfc:	add	r3, r2, r3
   34d00:	ldr	r3, [r3]
   34d04:	add	r3, r3, #4
   34d08:	str	r3, [fp, #-24]	; 0xffffffe8
   34d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34d10:	ldr	r1, [r3, #20]
   34d14:	ldr	r2, [fp, #8]
   34d18:	mov	r3, r2
   34d1c:	lsl	r3, r3, #1
   34d20:	add	r3, r3, r2
   34d24:	lsl	r3, r3, #2
   34d28:	add	r3, r1, r3
   34d2c:	str	r3, [fp, #-28]	; 0xffffffe4
   34d30:	ldr	r1, [fp, #8]
   34d34:	ldr	r0, [fp, #12]
   34d38:	bl	28024 <__assert_fail@plt+0x16de4>
   34d3c:	mov	r3, r0
   34d40:	cmp	r3, #0
   34d44:	bne	34d78 <__assert_fail@plt+0x23b38>
   34d48:	ldr	r1, [fp, #8]
   34d4c:	ldr	r0, [fp, #12]
   34d50:	bl	27bfc <__assert_fail@plt+0x169bc>
   34d54:	mov	r3, r0
   34d58:	strb	r3, [fp, #-29]	; 0xffffffe3
   34d5c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   34d60:	eor	r3, r3, #1
   34d64:	uxtb	r3, r3
   34d68:	cmp	r3, #0
   34d6c:	beq	34d78 <__assert_fail@plt+0x23b38>
   34d70:	mvn	r3, #1
   34d74:	b	35214 <__assert_fail@plt+0x23fd4>
   34d78:	mvn	r3, #0
   34d7c:	str	r3, [fp, #-8]
   34d80:	mov	r3, #0
   34d84:	str	r3, [fp, #-12]
   34d88:	b	34e58 <__assert_fail@plt+0x23c18>
   34d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34d90:	ldr	r2, [r3, #8]
   34d94:	ldr	r3, [fp, #-12]
   34d98:	lsl	r3, r3, #2
   34d9c:	add	r3, r2, r3
   34da0:	ldr	r3, [r3]
   34da4:	str	r3, [fp, #-36]	; 0xffffffdc
   34da8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   34dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34db0:	bl	28024 <__assert_fail@plt+0x16de4>
   34db4:	mov	r3, r0
   34db8:	cmp	r3, #0
   34dbc:	beq	34e48 <__assert_fail@plt+0x23c08>
   34dc0:	ldr	r3, [fp, #-8]
   34dc4:	cmn	r3, #1
   34dc8:	bne	34dd8 <__assert_fail@plt+0x23b98>
   34dcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34dd0:	str	r3, [fp, #-8]
   34dd4:	b	34e4c <__assert_fail@plt+0x23c0c>
   34dd8:	ldr	r1, [fp, #-8]
   34ddc:	ldr	r0, [fp, #12]
   34de0:	bl	28024 <__assert_fail@plt+0x16de4>
   34de4:	mov	r3, r0
   34de8:	cmp	r3, #0
   34dec:	beq	34df8 <__assert_fail@plt+0x23bb8>
   34df0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34df4:	b	35214 <__assert_fail@plt+0x23fd4>
   34df8:	ldr	r3, [fp, #16]
   34dfc:	cmp	r3, #0
   34e00:	beq	34e70 <__assert_fail@plt+0x23c30>
   34e04:	ldr	r3, [fp, #4]
   34e08:	ldr	r1, [r3]
   34e0c:	ldr	r3, [fp, #12]
   34e10:	str	r3, [sp, #8]
   34e14:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34e18:	str	r3, [sp, #4]
   34e1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34e20:	str	r3, [sp]
   34e24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34e28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34e2c:	ldr	r0, [fp, #16]
   34e30:	bl	35228 <__assert_fail@plt+0x23fe8>
   34e34:	mov	r3, r0
   34e38:	cmp	r3, #0
   34e3c:	beq	34e70 <__assert_fail@plt+0x23c30>
   34e40:	mvn	r3, #1
   34e44:	b	35214 <__assert_fail@plt+0x23fd4>
   34e48:	nop	{0}
   34e4c:	ldr	r3, [fp, #-12]
   34e50:	add	r3, r3, #1
   34e54:	str	r3, [fp, #-12]
   34e58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34e5c:	ldr	r3, [r3, #4]
   34e60:	ldr	r2, [fp, #-12]
   34e64:	cmp	r2, r3
   34e68:	blt	34d8c <__assert_fail@plt+0x23b4c>
   34e6c:	b	34e74 <__assert_fail@plt+0x23c34>
   34e70:	nop	{0}
   34e74:	ldr	r3, [fp, #-8]
   34e78:	b	35214 <__assert_fail@plt+0x23fd4>
   34e7c:	mov	r3, #0
   34e80:	str	r3, [fp, #-16]
   34e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   34e88:	ldr	r2, [r3]
   34e8c:	ldr	r3, [fp, #8]
   34e90:	lsl	r3, r3, #3
   34e94:	add	r3, r2, r3
   34e98:	ldrb	r3, [r3, #4]
   34e9c:	str	r3, [fp, #-40]	; 0xffffffd8
   34ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   34ea4:	ldr	r2, [r3]
   34ea8:	ldr	r3, [fp, #8]
   34eac:	lsl	r3, r3, #3
   34eb0:	add	r3, r2, r3
   34eb4:	ldrb	r3, [r3, #6]
   34eb8:	and	r3, r3, #16
   34ebc:	uxtb	r3, r3
   34ec0:	cmp	r3, #0
   34ec4:	beq	34ee8 <__assert_fail@plt+0x23ca8>
   34ec8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   34ecc:	ldr	r3, [fp, #4]
   34ed0:	ldr	r3, [r3]
   34ed4:	ldr	r1, [fp, #8]
   34ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   34edc:	bl	3c018 <__assert_fail@plt+0x2add8>
   34ee0:	str	r0, [fp, #-16]
   34ee4:	b	350e4 <__assert_fail@plt+0x23ea4>
   34ee8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34eec:	cmp	r3, #4
   34ef0:	bne	350e4 <__assert_fail@plt+0x23ea4>
   34ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   34ef8:	ldr	r2, [r3]
   34efc:	ldr	r3, [fp, #8]
   34f00:	lsl	r3, r3, #3
   34f04:	add	r3, r2, r3
   34f08:	ldr	r3, [r3]
   34f0c:	add	r3, r3, #1
   34f10:	str	r3, [fp, #-44]	; 0xffffffd4
   34f14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   34f18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34f1c:	cmp	r2, r3
   34f20:	bge	34f54 <__assert_fail@plt+0x23d14>
   34f24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34f28:	lsl	r3, r3, #3
   34f2c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34f30:	add	r3, r2, r3
   34f34:	ldr	r2, [r3, #4]
   34f38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34f3c:	lsl	r3, r3, #3
   34f40:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34f44:	add	r3, r1, r3
   34f48:	ldr	r3, [r3]
   34f4c:	sub	r3, r2, r3
   34f50:	str	r3, [fp, #-16]
   34f54:	ldr	r3, [fp, #16]
   34f58:	cmp	r3, #0
   34f5c:	beq	3503c <__assert_fail@plt+0x23dfc>
   34f60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   34f64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34f68:	cmp	r2, r3
   34f6c:	bge	34fa8 <__assert_fail@plt+0x23d68>
   34f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34f74:	lsl	r3, r3, #3
   34f78:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34f7c:	add	r3, r2, r3
   34f80:	ldr	r3, [r3]
   34f84:	cmn	r3, #1
   34f88:	beq	34fa8 <__assert_fail@plt+0x23d68>
   34f8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34f90:	lsl	r3, r3, #3
   34f94:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34f98:	add	r3, r2, r3
   34f9c:	ldr	r3, [r3, #4]
   34fa0:	cmn	r3, #1
   34fa4:	bne	34fb0 <__assert_fail@plt+0x23d70>
   34fa8:	mvn	r3, #0
   34fac:	b	35214 <__assert_fail@plt+0x23fd4>
   34fb0:	ldr	r3, [fp, #-16]
   34fb4:	cmp	r3, #0
   34fb8:	beq	3503c <__assert_fail@plt+0x23dfc>
   34fbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34fc0:	ldr	r3, [r3, #4]
   34fc4:	str	r3, [fp, #-48]	; 0xffffffd0
   34fc8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34fcc:	ldr	r2, [r3, #28]
   34fd0:	ldr	r3, [fp, #4]
   34fd4:	ldr	r3, [r3]
   34fd8:	sub	r3, r2, r3
   34fdc:	ldr	r2, [fp, #-16]
   34fe0:	cmp	r2, r3
   34fe4:	bgt	35034 <__assert_fail@plt+0x23df4>
   34fe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34fec:	lsl	r3, r3, #3
   34ff0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34ff4:	add	r3, r2, r3
   34ff8:	ldr	r3, [r3]
   34ffc:	mov	r2, r3
   35000:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35004:	add	r0, r3, r2
   35008:	ldr	r3, [fp, #4]
   3500c:	ldr	r3, [r3]
   35010:	mov	r2, r3
   35014:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35018:	add	r3, r3, r2
   3501c:	ldr	r2, [fp, #-16]
   35020:	mov	r1, r3
   35024:	bl	11024 <memcmp@plt>
   35028:	mov	r3, r0
   3502c:	cmp	r3, #0
   35030:	beq	3503c <__assert_fail@plt+0x23dfc>
   35034:	mvn	r3, #0
   35038:	b	35214 <__assert_fail@plt+0x23fd4>
   3503c:	ldr	r3, [fp, #-16]
   35040:	cmp	r3, #0
   35044:	bne	350e4 <__assert_fail@plt+0x23ea4>
   35048:	ldr	r1, [fp, #8]
   3504c:	ldr	r0, [fp, #12]
   35050:	bl	27bfc <__assert_fail@plt+0x169bc>
   35054:	mov	r3, r0
   35058:	strb	r3, [fp, #-49]	; 0xffffffcf
   3505c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   35060:	eor	r3, r3, #1
   35064:	uxtb	r3, r3
   35068:	cmp	r3, #0
   3506c:	beq	35078 <__assert_fail@plt+0x23e38>
   35070:	mvn	r3, #1
   35074:	b	35214 <__assert_fail@plt+0x23fd4>
   35078:	ldr	r3, [fp, #-20]	; 0xffffffec
   3507c:	ldr	r1, [r3, #20]
   35080:	ldr	r2, [fp, #8]
   35084:	mov	r3, r2
   35088:	lsl	r3, r3, #1
   3508c:	add	r3, r3, r2
   35090:	lsl	r3, r3, #2
   35094:	add	r3, r1, r3
   35098:	ldr	r3, [r3, #8]
   3509c:	ldr	r3, [r3]
   350a0:	str	r3, [fp, #-56]	; 0xffffffc8
   350a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   350a8:	ldr	r2, [r3, #100]	; 0x64
   350ac:	ldr	r3, [fp, #4]
   350b0:	ldr	r3, [r3]
   350b4:	lsl	r3, r3, #2
   350b8:	add	r3, r2, r3
   350bc:	ldr	r3, [r3]
   350c0:	add	r3, r3, #4
   350c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   350c8:	mov	r0, r3
   350cc:	bl	28024 <__assert_fail@plt+0x16de4>
   350d0:	mov	r3, r0
   350d4:	cmp	r3, #0
   350d8:	beq	350e4 <__assert_fail@plt+0x23ea4>
   350dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   350e0:	b	35214 <__assert_fail@plt+0x23fd4>
   350e4:	ldr	r3, [fp, #-16]
   350e8:	cmp	r3, #0
   350ec:	bne	35124 <__assert_fail@plt+0x23ee4>
   350f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   350f4:	ldr	r2, [r3]
   350f8:	ldr	r3, [fp, #8]
   350fc:	lsl	r3, r3, #3
   35100:	add	r1, r2, r3
   35104:	ldr	r3, [fp, #4]
   35108:	ldr	r3, [r3]
   3510c:	mov	r2, r3
   35110:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35114:	bl	3c588 <__assert_fail@plt+0x2b348>
   35118:	mov	r3, r0
   3511c:	cmp	r3, #0
   35120:	beq	35210 <__assert_fail@plt+0x23fd0>
   35124:	ldr	r3, [fp, #-20]	; 0xffffffec
   35128:	ldr	r2, [r3, #12]
   3512c:	ldr	r3, [fp, #8]
   35130:	lsl	r3, r3, #2
   35134:	add	r3, r2, r3
   35138:	ldr	r3, [r3]
   3513c:	str	r3, [fp, #-60]	; 0xffffffc4
   35140:	ldr	r3, [fp, #-16]
   35144:	cmp	r3, #0
   35148:	bne	3515c <__assert_fail@plt+0x23f1c>
   3514c:	ldr	r3, [fp, #4]
   35150:	ldr	r3, [r3]
   35154:	add	r3, r3, #1
   35158:	b	3516c <__assert_fail@plt+0x23f2c>
   3515c:	ldr	r3, [fp, #4]
   35160:	ldr	r2, [r3]
   35164:	ldr	r3, [fp, #-16]
   35168:	add	r3, r2, r3
   3516c:	ldr	r2, [fp, #4]
   35170:	str	r3, [r2]
   35174:	ldr	r3, [fp, #16]
   35178:	cmp	r3, #0
   3517c:	beq	351fc <__assert_fail@plt+0x23fbc>
   35180:	ldr	r3, [fp, #4]
   35184:	ldr	r2, [r3]
   35188:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3518c:	ldr	r3, [r3, #92]	; 0x5c
   35190:	cmp	r2, r3
   35194:	bgt	351f4 <__assert_fail@plt+0x23fb4>
   35198:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3519c:	ldr	r2, [r3, #100]	; 0x64
   351a0:	ldr	r3, [fp, #4]
   351a4:	ldr	r3, [r3]
   351a8:	lsl	r3, r3, #2
   351ac:	add	r3, r2, r3
   351b0:	ldr	r3, [r3]
   351b4:	cmp	r3, #0
   351b8:	beq	351f4 <__assert_fail@plt+0x23fb4>
   351bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   351c0:	ldr	r2, [r3, #100]	; 0x64
   351c4:	ldr	r3, [fp, #4]
   351c8:	ldr	r3, [r3]
   351cc:	lsl	r3, r3, #2
   351d0:	add	r3, r2, r3
   351d4:	ldr	r3, [r3]
   351d8:	add	r3, r3, #4
   351dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   351e0:	mov	r0, r3
   351e4:	bl	28024 <__assert_fail@plt+0x16de4>
   351e8:	mov	r3, r0
   351ec:	cmp	r3, #0
   351f0:	bne	351fc <__assert_fail@plt+0x23fbc>
   351f4:	mvn	r3, #0
   351f8:	b	35214 <__assert_fail@plt+0x23fd4>
   351fc:	ldr	r3, [fp, #12]
   35200:	mov	r2, #0
   35204:	str	r2, [r3, #4]
   35208:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3520c:	b	35214 <__assert_fail@plt+0x23fd4>
   35210:	mvn	r3, #0
   35214:	mov	r0, r3
   35218:	sub	sp, fp, #4
   3521c:	ldr	fp, [sp]
   35220:	add	sp, sp, #4
   35224:	pop	{pc}		; (ldr pc, [sp], #4)
   35228:	str	r4, [sp, #-12]!
   3522c:	str	fp, [sp, #4]
   35230:	str	lr, [sp, #8]
   35234:	add	fp, sp, #8
   35238:	sub	sp, sp, #36	; 0x24
   3523c:	str	r0, [fp, #-32]	; 0xffffffe0
   35240:	str	r1, [fp, #-36]	; 0xffffffdc
   35244:	str	r2, [fp, #-40]	; 0xffffffd8
   35248:	str	r3, [fp, #-44]	; 0xffffffd4
   3524c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35250:	ldr	r3, [r3]
   35254:	add	r1, r3, #1
   35258:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3525c:	str	r1, [r2]
   35260:	str	r3, [fp, #-16]
   35264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35268:	ldr	r2, [r3]
   3526c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35270:	ldr	r3, [r3, #4]
   35274:	cmp	r2, r3
   35278:	bne	352e0 <__assert_fail@plt+0x240a0>
   3527c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35280:	ldr	r0, [r3, #8]
   35284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35288:	ldr	r3, [r3, #4]
   3528c:	mov	r2, r3
   35290:	mov	r3, r2
   35294:	lsl	r3, r3, #1
   35298:	add	r3, r3, r2
   3529c:	lsl	r3, r3, #4
   352a0:	mov	r1, r3
   352a4:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   352a8:	str	r0, [fp, #-20]	; 0xffffffec
   352ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   352b0:	cmp	r3, #0
   352b4:	bne	352c0 <__assert_fail@plt+0x24080>
   352b8:	mov	r3, #12
   352bc:	b	3544c <__assert_fail@plt+0x2420c>
   352c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352c4:	ldr	r3, [r3, #4]
   352c8:	lsl	r2, r3, #1
   352cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352d0:	str	r2, [r3, #4]
   352d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   352dc:	str	r2, [r3, #8]
   352e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352e4:	ldr	r1, [r3, #8]
   352e8:	ldr	r2, [fp, #-16]
   352ec:	mov	r3, r2
   352f0:	lsl	r3, r3, #1
   352f4:	add	r3, r3, r2
   352f8:	lsl	r3, r3, #3
   352fc:	add	r3, r1, r3
   35300:	ldr	r2, [fp, #-36]	; 0xffffffdc
   35304:	str	r2, [r3]
   35308:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3530c:	ldr	r1, [r3, #8]
   35310:	ldr	r2, [fp, #-16]
   35314:	mov	r3, r2
   35318:	lsl	r3, r3, #1
   3531c:	add	r3, r3, r2
   35320:	lsl	r3, r3, #3
   35324:	add	r3, r1, r3
   35328:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3532c:	str	r2, [r3, #4]
   35330:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35334:	lsl	r0, r3, #4
   35338:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3533c:	ldr	r1, [r3, #8]
   35340:	ldr	r2, [fp, #-16]
   35344:	mov	r3, r2
   35348:	lsl	r3, r3, #1
   3534c:	add	r3, r3, r2
   35350:	lsl	r3, r3, #3
   35354:	add	r4, r1, r3
   35358:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3535c:	mov	r3, r0
   35360:	str	r3, [r4, #8]
   35364:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35368:	ldr	r1, [r3, #8]
   3536c:	ldr	r2, [fp, #-16]
   35370:	mov	r3, r2
   35374:	lsl	r3, r3, #1
   35378:	add	r3, r3, r2
   3537c:	lsl	r3, r3, #3
   35380:	add	r3, r1, r3
   35384:	ldr	r3, [r3, #8]
   35388:	cmp	r3, #0
   3538c:	bne	35398 <__assert_fail@plt+0x24158>
   35390:	mov	r3, #12
   35394:	b	3544c <__assert_fail@plt+0x2420c>
   35398:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3539c:	ldr	r1, [r3, #8]
   353a0:	ldr	r2, [fp, #-16]
   353a4:	mov	r3, r2
   353a8:	lsl	r3, r3, #1
   353ac:	add	r3, r3, r2
   353b0:	lsl	r3, r3, #3
   353b4:	add	r3, r1, r3
   353b8:	ldr	r0, [r3, #8]
   353bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   353c0:	lsl	r3, r3, #3
   353c4:	mov	r2, r3
   353c8:	ldr	r1, [fp, #4]
   353cc:	bl	10fe8 <memcpy@plt>
   353d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   353d4:	ldr	r1, [r3, #8]
   353d8:	ldr	r2, [fp, #-16]
   353dc:	mov	r3, r2
   353e0:	lsl	r3, r3, #1
   353e4:	add	r3, r3, r2
   353e8:	lsl	r3, r3, #3
   353ec:	add	r3, r1, r3
   353f0:	ldr	r2, [r3, #8]
   353f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   353f8:	lsl	r3, r3, #3
   353fc:	add	r0, r2, r3
   35400:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35404:	lsl	r3, r3, #3
   35408:	mov	r2, r3
   3540c:	ldr	r1, [fp, #8]
   35410:	bl	10fe8 <memcpy@plt>
   35414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35418:	ldr	r1, [r3, #8]
   3541c:	ldr	r2, [fp, #-16]
   35420:	mov	r3, r2
   35424:	lsl	r3, r3, #1
   35428:	add	r3, r3, r2
   3542c:	lsl	r3, r3, #3
   35430:	add	r3, r1, r3
   35434:	add	r3, r3, #12
   35438:	ldr	r1, [fp, #12]
   3543c:	mov	r0, r3
   35440:	bl	26e70 <__assert_fail@plt+0x15c30>
   35444:	str	r0, [fp, #-24]	; 0xffffffe8
   35448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3544c:	mov	r0, r3
   35450:	sub	sp, fp, #8
   35454:	ldr	r4, [sp]
   35458:	ldr	fp, [sp, #4]
   3545c:	add	sp, sp, #8
   35460:	pop	{pc}		; (ldr pc, [sp], #4)
   35464:	str	fp, [sp, #-8]!
   35468:	str	lr, [sp, #4]
   3546c:	add	fp, sp, #4
   35470:	sub	sp, sp, #24
   35474:	str	r0, [fp, #-16]
   35478:	str	r1, [fp, #-20]	; 0xffffffec
   3547c:	str	r2, [fp, #-24]	; 0xffffffe8
   35480:	str	r3, [fp, #-28]	; 0xffffffe4
   35484:	ldr	r3, [fp, #-16]
   35488:	cmp	r3, #0
   3548c:	beq	354a0 <__assert_fail@plt+0x24260>
   35490:	ldr	r3, [fp, #-16]
   35494:	ldr	r3, [r3]
   35498:	cmp	r3, #0
   3549c:	bne	354a8 <__assert_fail@plt+0x24268>
   354a0:	mvn	r3, #0
   354a4:	b	35634 <__assert_fail@plt+0x243f4>
   354a8:	ldr	r3, [fp, #-16]
   354ac:	ldr	r3, [r3]
   354b0:	sub	r2, r3, #1
   354b4:	ldr	r3, [fp, #-16]
   354b8:	str	r2, [r3]
   354bc:	ldr	r3, [fp, #-16]
   354c0:	ldr	r3, [r3]
   354c4:	str	r3, [fp, #-8]
   354c8:	ldr	r3, [fp, #-16]
   354cc:	ldr	r1, [r3, #8]
   354d0:	ldr	r2, [fp, #-8]
   354d4:	mov	r3, r2
   354d8:	lsl	r3, r3, #1
   354dc:	add	r3, r3, r2
   354e0:	lsl	r3, r3, #3
   354e4:	add	r3, r1, r3
   354e8:	ldr	r2, [r3]
   354ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   354f0:	str	r2, [r3]
   354f4:	ldr	r3, [fp, #-16]
   354f8:	ldr	r1, [r3, #8]
   354fc:	ldr	r2, [fp, #-8]
   35500:	mov	r3, r2
   35504:	lsl	r3, r3, #1
   35508:	add	r3, r3, r2
   3550c:	lsl	r3, r3, #3
   35510:	add	r3, r1, r3
   35514:	ldr	r1, [r3, #8]
   35518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3551c:	lsl	r3, r3, #3
   35520:	mov	r2, r3
   35524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35528:	bl	10fe8 <memcpy@plt>
   3552c:	ldr	r3, [fp, #-16]
   35530:	ldr	r1, [r3, #8]
   35534:	ldr	r2, [fp, #-8]
   35538:	mov	r3, r2
   3553c:	lsl	r3, r3, #1
   35540:	add	r3, r3, r2
   35544:	lsl	r3, r3, #3
   35548:	add	r3, r1, r3
   3554c:	ldr	r2, [r3, #8]
   35550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35554:	lsl	r3, r3, #3
   35558:	add	r1, r2, r3
   3555c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35560:	lsl	r3, r3, #3
   35564:	mov	r2, r3
   35568:	ldr	r0, [fp, #4]
   3556c:	bl	10fe8 <memcpy@plt>
   35570:	ldr	r3, [fp, #8]
   35574:	ldr	r3, [r3, #8]
   35578:	mov	r0, r3
   3557c:	bl	13798 <__assert_fail@plt+0x2558>
   35580:	ldr	r3, [fp, #-16]
   35584:	ldr	r1, [r3, #8]
   35588:	ldr	r2, [fp, #-8]
   3558c:	mov	r3, r2
   35590:	lsl	r3, r3, #1
   35594:	add	r3, r3, r2
   35598:	lsl	r3, r3, #3
   3559c:	add	r3, r1, r3
   355a0:	ldr	r3, [r3, #8]
   355a4:	mov	r0, r3
   355a8:	bl	13798 <__assert_fail@plt+0x2558>
   355ac:	ldr	r3, [fp, #-16]
   355b0:	ldr	r1, [r3, #8]
   355b4:	ldr	r2, [fp, #-8]
   355b8:	mov	r3, r2
   355bc:	lsl	r3, r3, #1
   355c0:	add	r3, r3, r2
   355c4:	lsl	r3, r3, #3
   355c8:	add	r3, r1, r3
   355cc:	ldr	r2, [fp, #8]
   355d0:	mov	r0, r2
   355d4:	add	r1, r3, #12
   355d8:	ldrd	r2, [r1]
   355dc:	strd	r2, [r0]
   355e0:	ldr	r3, [r1, #8]
   355e4:	str	r3, [r0, #8]
   355e8:	ldr	r3, [fp, #-16]
   355ec:	ldr	r1, [r3, #8]
   355f0:	ldr	r2, [fp, #-8]
   355f4:	mov	r3, r2
   355f8:	lsl	r3, r3, #1
   355fc:	add	r3, r3, r2
   35600:	lsl	r3, r3, #3
   35604:	add	r3, r1, r3
   35608:	ldr	r3, [r3, #4]
   3560c:	cmp	r3, #0
   35610:	ldr	r3, [fp, #-16]
   35614:	ldr	r1, [r3, #8]
   35618:	ldr	r2, [fp, #-8]
   3561c:	mov	r3, r2
   35620:	lsl	r3, r3, #1
   35624:	add	r3, r3, r2
   35628:	lsl	r3, r3, #3
   3562c:	add	r3, r1, r3
   35630:	ldr	r3, [r3, #4]
   35634:	mov	r0, r3
   35638:	sub	sp, fp, #4
   3563c:	ldr	fp, [sp]
   35640:	add	sp, sp, #4
   35644:	pop	{pc}		; (ldr pc, [sp], #4)
   35648:	push	{fp}		; (str fp, [sp, #-4]!)
   3564c:	add	fp, sp, #0
   35650:	sub	sp, sp, #12
   35654:	str	r0, [fp, #-8]
   35658:	str	r1, [fp, #-12]
   3565c:	nop	{0}
   35660:	add	sp, fp, #0
   35664:	pop	{fp}		; (ldr fp, [sp], #4)
   35668:	bx	lr
   3566c:	str	fp, [sp, #-8]!
   35670:	str	lr, [sp, #4]
   35674:	add	fp, sp, #4
   35678:	sub	sp, sp, #8
   3567c:	str	r0, [fp, #-8]
   35680:	ldr	r3, [fp, #-8]
   35684:	ldr	r2, [r3, #8]
   35688:	ldr	r3, [fp, #-8]
   3568c:	add	r3, r3, #12
   35690:	cmp	r2, r3
   35694:	beq	356a8 <__assert_fail@plt+0x24468>
   35698:	ldr	r3, [fp, #-8]
   3569c:	ldr	r3, [r3, #8]
   356a0:	mov	r0, r3
   356a4:	bl	13798 <__assert_fail@plt+0x2558>
   356a8:	nop	{0}
   356ac:	sub	sp, fp, #4
   356b0:	ldr	fp, [sp]
   356b4:	add	sp, sp, #4
   356b8:	pop	{pc}		; (ldr pc, [sp], #4)
   356bc:	push	{fp}		; (str fp, [sp, #-4]!)
   356c0:	add	fp, sp, #0
   356c4:	sub	sp, sp, #12
   356c8:	str	r0, [fp, #-8]
   356cc:	ldr	r3, [fp, #-8]
   356d0:	mov	r2, #0
   356d4:	str	r2, [r3]
   356d8:	ldr	r3, [fp, #-8]
   356dc:	mov	r2, #16
   356e0:	str	r2, [r3, #4]
   356e4:	ldr	r3, [fp, #-8]
   356e8:	add	r2, r3, #12
   356ec:	ldr	r3, [fp, #-8]
   356f0:	str	r2, [r3, #8]
   356f4:	nop	{0}
   356f8:	add	sp, fp, #0
   356fc:	pop	{fp}		; (ldr fp, [sp], #4)
   35700:	bx	lr
   35704:	str	fp, [sp, #-8]!
   35708:	str	lr, [sp, #4]
   3570c:	add	fp, sp, #4
   35710:	sub	sp, sp, #8
   35714:	str	r0, [fp, #-8]
   35718:	ldr	r3, [fp, #-8]
   3571c:	ldr	r2, [r3, #8]
   35720:	ldr	r3, [fp, #-8]
   35724:	ldr	r3, [r3]
   35728:	mov	r1, r3
   3572c:	mov	r0, r2
   35730:	bl	35648 <__assert_fail@plt+0x24408>
   35734:	ldr	r0, [fp, #-8]
   35738:	bl	3566c <__assert_fail@plt+0x2442c>
   3573c:	ldr	r0, [fp, #-8]
   35740:	bl	356bc <__assert_fail@plt+0x2447c>
   35744:	nop	{0}
   35748:	sub	sp, fp, #4
   3574c:	ldr	fp, [sp]
   35750:	add	sp, sp, #4
   35754:	pop	{pc}		; (ldr pc, [sp], #4)
   35758:	str	fp, [sp, #-8]!
   3575c:	str	lr, [sp, #4]
   35760:	add	fp, sp, #4
   35764:	sub	sp, sp, #8
   35768:	str	r0, [fp, #-8]
   3576c:	ldr	r3, [fp, #-8]
   35770:	ldr	r2, [r3, #8]
   35774:	ldr	r3, [fp, #-8]
   35778:	ldr	r3, [r3]
   3577c:	mov	r1, r3
   35780:	mov	r0, r2
   35784:	bl	35648 <__assert_fail@plt+0x24408>
   35788:	ldr	r0, [fp, #-8]
   3578c:	bl	3566c <__assert_fail@plt+0x2442c>
   35790:	ldr	r3, [fp, #-8]
   35794:	add	r2, r3, #12
   35798:	ldr	r3, [fp, #-8]
   3579c:	str	r2, [r3, #8]
   357a0:	ldr	r3, [fp, #-8]
   357a4:	mov	r2, #0
   357a8:	str	r2, [r3]
   357ac:	bl	23c44 <__assert_fail@plt+0x12a04>
   357b0:	mov	r2, r0
   357b4:	ldr	r3, [fp, #-8]
   357b8:	str	r2, [r3, #4]
   357bc:	nop	{0}
   357c0:	sub	sp, fp, #4
   357c4:	ldr	fp, [sp]
   357c8:	add	sp, sp, #4
   357cc:	pop	{pc}		; (ldr pc, [sp], #4)
   357d0:	push	{fp}		; (str fp, [sp, #-4]!)
   357d4:	add	fp, sp, #0
   357d8:	sub	sp, sp, #12
   357dc:	str	r0, [fp, #-8]
   357e0:	ldr	r3, [fp, #-8]
   357e4:	ldr	r3, [r3, #8]
   357e8:	mov	r0, r3
   357ec:	add	sp, fp, #0
   357f0:	pop	{fp}		; (ldr fp, [sp], #4)
   357f4:	bx	lr
   357f8:	str	fp, [sp, #-8]!
   357fc:	str	lr, [sp, #4]
   35800:	add	fp, sp, #4
   35804:	sub	sp, sp, #16
   35808:	str	r0, [fp, #-8]
   3580c:	sub	r3, fp, #16
   35810:	stm	r3, {r1, r2}
   35814:	ldr	r0, [fp, #-8]
   35818:	ldr	r3, [fp, #-8]
   3581c:	add	r3, r3, #12
   35820:	mov	r2, #8
   35824:	mov	r1, r3
   35828:	bl	3f1e8 <__assert_fail@plt+0x2dfa8>
   3582c:	mov	r3, r0
   35830:	eor	r3, r3, #1
   35834:	uxtb	r3, r3
   35838:	cmp	r3, #0
   3583c:	beq	3584c <__assert_fail@plt+0x2460c>
   35840:	ldr	r0, [fp, #-8]
   35844:	bl	35758 <__assert_fail@plt+0x24518>
   35848:	b	35880 <__assert_fail@plt+0x24640>
   3584c:	ldr	r3, [fp, #-8]
   35850:	ldr	r2, [r3, #8]
   35854:	ldr	r3, [fp, #-8]
   35858:	ldr	r3, [r3]
   3585c:	add	r0, r3, #1
   35860:	ldr	r1, [fp, #-8]
   35864:	str	r0, [r1]
   35868:	lsl	r3, r3, #3
   3586c:	add	r3, r2, r3
   35870:	mov	r1, r3
   35874:	sub	r3, fp, #16
   35878:	ldrd	r2, [r3]
   3587c:	strd	r2, [r1]
   35880:	sub	sp, fp, #4
   35884:	ldr	fp, [sp]
   35888:	add	sp, sp, #4
   3588c:	pop	{pc}		; (ldr pc, [sp], #4)
   35890:	push	{fp}		; (str fp, [sp, #-4]!)
   35894:	add	fp, sp, #0
   35898:	sub	sp, sp, #20
   3589c:	str	r0, [fp, #-16]
   358a0:	ldr	r3, [fp, #-16]
   358a4:	ldr	r2, [r3, #8]
   358a8:	ldr	r3, [fp, #-16]
   358ac:	ldr	r3, [r3]
   358b0:	lsl	r3, r3, #3
   358b4:	add	r3, r2, r3
   358b8:	str	r3, [fp, #-8]
   358bc:	ldr	r3, [fp, #-16]
   358c0:	ldr	r3, [r3]
   358c4:	add	r2, r3, #1
   358c8:	ldr	r3, [fp, #-16]
   358cc:	str	r2, [r3]
   358d0:	ldr	r3, [fp, #-8]
   358d4:	mov	r0, r3
   358d8:	add	sp, fp, #0
   358dc:	pop	{fp}		; (ldr fp, [sp], #4)
   358e0:	bx	lr
   358e4:	str	fp, [sp, #-8]!
   358e8:	str	lr, [sp, #4]
   358ec:	add	fp, sp, #4
   358f0:	sub	sp, sp, #8
   358f4:	str	r0, [fp, #-8]
   358f8:	ldr	r0, [fp, #-8]
   358fc:	ldr	r3, [fp, #-8]
   35900:	add	r3, r3, #12
   35904:	mov	r2, #8
   35908:	mov	r1, r3
   3590c:	bl	3f1e8 <__assert_fail@plt+0x2dfa8>
   35910:	mov	r3, r0
   35914:	eor	r3, r3, #1
   35918:	uxtb	r3, r3
   3591c:	cmp	r3, #0
   35920:	beq	35934 <__assert_fail@plt+0x246f4>
   35924:	ldr	r0, [fp, #-8]
   35928:	bl	35758 <__assert_fail@plt+0x24518>
   3592c:	mov	r3, #0
   35930:	b	35940 <__assert_fail@plt+0x24700>
   35934:	ldr	r0, [fp, #-8]
   35938:	bl	35890 <__assert_fail@plt+0x24650>
   3593c:	mov	r3, r0
   35940:	mov	r0, r3
   35944:	sub	sp, fp, #4
   35948:	ldr	fp, [sp]
   3594c:	add	sp, sp, #4
   35950:	pop	{pc}		; (ldr pc, [sp], #4)
   35954:	str	fp, [sp, #-8]!
   35958:	str	lr, [sp, #4]
   3595c:	add	fp, sp, #4
   35960:	sub	sp, sp, #16
   35964:	str	r0, [fp, #-16]
   35968:	str	r1, [fp, #-20]	; 0xffffffec
   3596c:	ldr	r3, [fp, #-16]
   35970:	ldr	r3, [r3]
   35974:	ldr	r2, [fp, #-20]	; 0xffffffec
   35978:	cmp	r2, r3
   3597c:	bls	359c4 <__assert_fail@plt+0x24784>
   35980:	ldr	r0, [fp, #-16]
   35984:	ldr	r3, [fp, #-16]
   35988:	add	r2, r3, #12
   3598c:	mov	r3, #8
   35990:	ldr	r1, [fp, #-20]	; 0xffffffec
   35994:	bl	3f56c <__assert_fail@plt+0x2e32c>
   35998:	mov	r3, r0
   3599c:	strb	r3, [fp, #-5]
   359a0:	ldrb	r3, [fp, #-5]
   359a4:	eor	r3, r3, #1
   359a8:	uxtb	r3, r3
   359ac:	cmp	r3, #0
   359b0:	beq	359bc <__assert_fail@plt+0x2477c>
   359b4:	ldr	r0, [fp, #-16]
   359b8:	bl	35758 <__assert_fail@plt+0x24518>
   359bc:	ldrb	r3, [fp, #-5]
   359c0:	b	35a00 <__assert_fail@plt+0x247c0>
   359c4:	ldr	r3, [fp, #-16]
   359c8:	ldr	r2, [r3, #8]
   359cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   359d0:	lsl	r3, r3, #3
   359d4:	add	r0, r2, r3
   359d8:	ldr	r3, [fp, #-16]
   359dc:	ldr	r2, [r3]
   359e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   359e4:	sub	r3, r2, r3
   359e8:	mov	r1, r3
   359ec:	bl	35648 <__assert_fail@plt+0x24408>
   359f0:	ldr	r3, [fp, #-16]
   359f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   359f8:	str	r2, [r3]
   359fc:	mov	r3, #1
   35a00:	mov	r0, r3
   35a04:	sub	sp, fp, #4
   35a08:	ldr	fp, [sp]
   35a0c:	add	sp, sp, #4
   35a10:	pop	{pc}		; (ldr pc, [sp], #4)
   35a14:	push	{fp}		; (str fp, [sp, #-4]!)
   35a18:	add	fp, sp, #0
   35a1c:	sub	sp, sp, #20
   35a20:	str	r0, [fp, #-16]
   35a24:	ldr	r3, [fp, #-16]
   35a28:	ldr	r3, [r3]
   35a2c:	cmp	r3, #0
   35a30:	beq	35a50 <__assert_fail@plt+0x24810>
   35a34:	ldr	r3, [fp, #-16]
   35a38:	ldr	r3, [r3]
   35a3c:	sub	r3, r3, #1
   35a40:	str	r3, [fp, #-8]
   35a44:	ldr	r3, [fp, #-16]
   35a48:	ldr	r2, [fp, #-8]
   35a4c:	str	r2, [r3]
   35a50:	nop	{0}
   35a54:	add	sp, fp, #0
   35a58:	pop	{fp}		; (ldr fp, [sp], #4)
   35a5c:	bx	lr
   35a60:	str	fp, [sp, #-8]!
   35a64:	str	lr, [sp, #4]
   35a68:	add	fp, sp, #4
   35a6c:	sub	sp, sp, #8
   35a70:	str	r0, [fp, #-8]
   35a74:	ldr	r3, [fp, #-8]
   35a78:	ldr	r2, [r3, #8]
   35a7c:	ldr	r3, [fp, #-8]
   35a80:	ldr	r3, [r3]
   35a84:	mov	r1, r3
   35a88:	mov	r0, r2
   35a8c:	bl	35648 <__assert_fail@plt+0x24408>
   35a90:	ldr	r3, [fp, #-8]
   35a94:	mov	r2, #0
   35a98:	str	r2, [r3]
   35a9c:	nop	{0}
   35aa0:	sub	sp, fp, #4
   35aa4:	ldr	fp, [sp]
   35aa8:	add	sp, sp, #4
   35aac:	pop	{pc}		; (ldr pc, [sp], #4)
   35ab0:	str	fp, [sp, #-8]!
   35ab4:	str	lr, [sp, #4]
   35ab8:	add	fp, sp, #4
   35abc:	sub	sp, sp, #16
   35ac0:	str	r0, [fp, #-16]
   35ac4:	str	r1, [fp, #-20]	; 0xffffffec
   35ac8:	ldr	r0, [fp, #-16]
   35acc:	ldr	r3, [fp, #-16]
   35ad0:	add	r1, r3, #12
   35ad4:	sub	r3, fp, #12
   35ad8:	mov	r2, #8
   35adc:	bl	3f424 <__assert_fail@plt+0x2e1e4>
   35ae0:	mov	r3, r0
   35ae4:	cmp	r3, #0
   35ae8:	beq	35b14 <__assert_fail@plt+0x248d4>
   35aec:	ldr	r0, [fp, #-16]
   35af0:	bl	356bc <__assert_fail@plt+0x2447c>
   35af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   35af8:	cmp	r3, #0
   35afc:	beq	35b0c <__assert_fail@plt+0x248cc>
   35b00:	ldr	r2, [fp, #-8]
   35b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   35b08:	str	r2, [r3]
   35b0c:	ldr	r3, [fp, #-12]
   35b10:	b	35b30 <__assert_fail@plt+0x248f0>
   35b14:	ldr	r0, [fp, #-16]
   35b18:	bl	35704 <__assert_fail@plt+0x244c4>
   35b1c:	bl	11168 <__errno_location@plt>
   35b20:	mov	r2, r0
   35b24:	mov	r3, #12
   35b28:	str	r3, [r2]
   35b2c:	mov	r3, #0
   35b30:	mov	r0, r3
   35b34:	sub	sp, fp, #4
   35b38:	ldr	fp, [sp]
   35b3c:	add	sp, sp, #4
   35b40:	pop	{pc}		; (ldr pc, [sp], #4)
   35b44:	str	fp, [sp, #-8]!
   35b48:	str	lr, [sp, #4]
   35b4c:	add	fp, sp, #4
   35b50:	sub	sp, sp, #224	; 0xe0
   35b54:	str	r0, [fp, #-200]	; 0xffffff38
   35b58:	str	r1, [fp, #-204]	; 0xffffff34
   35b5c:	str	r2, [fp, #-208]	; 0xffffff30
   35b60:	str	r3, [fp, #-212]	; 0xffffff2c
   35b64:	ldr	r3, [fp, #-200]	; 0xffffff38
   35b68:	ldr	r3, [r3]
   35b6c:	str	r3, [fp, #-20]	; 0xffffffec
   35b70:	mov	r3, #0
   35b74:	str	r3, [fp, #-52]	; 0xffffffcc
   35b78:	mov	r3, #2
   35b7c:	str	r3, [fp, #-48]	; 0xffffffd0
   35b80:	mov	r3, #0
   35b84:	str	r3, [fp, #-44]	; 0xffffffd4
   35b88:	sub	r3, fp, #192	; 0xc0
   35b8c:	mov	r0, r3
   35b90:	bl	356bc <__assert_fail@plt+0x2447c>
   35b94:	ldr	r3, [fp, #-208]	; 0xffffff30
   35b98:	cmp	r3, #1
   35b9c:	ldr	r3, [fp, #-204]	; 0xffffff34
   35ba0:	ldr	r3, [r3, #100]	; 0x64
   35ba4:	cmp	r3, #0
   35ba8:	ldrb	r3, [fp, #4]
   35bac:	cmp	r3, #0
   35bb0:	beq	35c08 <__assert_fail@plt+0x249c8>
   35bb4:	sub	r3, fp, #52	; 0x34
   35bb8:	str	r3, [fp, #-12]
   35bbc:	ldr	r3, [fp, #-12]
   35bc0:	ldr	r3, [r3, #4]
   35bc4:	mov	r2, r3
   35bc8:	mov	r3, r2
   35bcc:	lsl	r3, r3, #1
   35bd0:	add	r3, r3, r2
   35bd4:	lsl	r3, r3, #3
   35bd8:	mov	r0, r3
   35bdc:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   35be0:	mov	r3, r0
   35be4:	mov	r2, r3
   35be8:	ldr	r3, [fp, #-12]
   35bec:	str	r2, [r3, #8]
   35bf0:	ldr	r3, [fp, #-12]
   35bf4:	ldr	r3, [r3, #8]
   35bf8:	cmp	r3, #0
   35bfc:	bne	35c10 <__assert_fail@plt+0x249d0>
   35c00:	mov	r3, #12
   35c04:	b	35f14 <__assert_fail@plt+0x24cd4>
   35c08:	mov	r3, #0
   35c0c:	str	r3, [fp, #-12]
   35c10:	ldr	r3, [fp, #-20]	; 0xffffffec
   35c14:	ldr	r3, [r3, #72]	; 0x48
   35c18:	str	r3, [fp, #-8]
   35c1c:	sub	r3, fp, #40	; 0x28
   35c20:	mov	r2, #12
   35c24:	mov	r1, #0
   35c28:	mov	r0, r3
   35c2c:	bl	1118c <memset@plt>
   35c30:	sub	r3, fp, #192	; 0xc0
   35c34:	ldr	r1, [fp, #-208]	; 0xffffff30
   35c38:	mov	r0, r3
   35c3c:	bl	35954 <__assert_fail@plt+0x24714>
   35c40:	mov	r3, r0
   35c44:	eor	r3, r3, #1
   35c48:	uxtb	r3, r3
   35c4c:	cmp	r3, #0
   35c50:	beq	35c70 <__assert_fail@plt+0x24a30>
   35c54:	sub	r3, fp, #192	; 0xc0
   35c58:	mov	r0, r3
   35c5c:	bl	35704 <__assert_fail@plt+0x244c4>
   35c60:	ldr	r0, [fp, #-12]
   35c64:	bl	35f28 <__assert_fail@plt+0x24ce8>
   35c68:	mov	r3, #12
   35c6c:	b	35f14 <__assert_fail@plt+0x24cd4>
   35c70:	sub	r3, fp, #192	; 0xc0
   35c74:	mov	r0, r3
   35c78:	bl	357d0 <__assert_fail@plt+0x24590>
   35c7c:	str	r0, [fp, #-24]	; 0xffffffe8
   35c80:	ldr	r3, [fp, #-208]	; 0xffffff30
   35c84:	lsl	r3, r3, #3
   35c88:	mov	r2, r3
   35c8c:	ldr	r1, [fp, #-212]	; 0xffffff2c
   35c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35c94:	bl	10fe8 <memcpy@plt>
   35c98:	ldr	r3, [fp, #-212]	; 0xffffff2c
   35c9c:	ldr	r3, [r3]
   35ca0:	str	r3, [fp, #-28]	; 0xffffffe4
   35ca4:	b	35edc <__assert_fail@plt+0x24c9c>
   35ca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35cac:	ldr	r2, [fp, #-208]	; 0xffffff30
   35cb0:	str	r2, [sp, #4]
   35cb4:	str	r3, [sp]
   35cb8:	ldr	r3, [fp, #-8]
   35cbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35cc0:	ldr	r1, [fp, #-212]	; 0xffffff2c
   35cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   35cc8:	bl	35ff4 <__assert_fail@plt+0x24db4>
   35ccc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   35cd0:	ldr	r2, [r3, #4]
   35cd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35cd8:	cmp	r2, r3
   35cdc:	bne	35cf4 <__assert_fail@plt+0x24ab4>
   35ce0:	ldr	r3, [fp, #-204]	; 0xffffff34
   35ce4:	ldr	r3, [r3, #96]	; 0x60
   35ce8:	ldr	r2, [fp, #-8]
   35cec:	cmp	r2, r3
   35cf0:	beq	35d1c <__assert_fail@plt+0x24adc>
   35cf4:	ldr	r3, [fp, #-12]
   35cf8:	cmp	r3, #0
   35cfc:	beq	35df0 <__assert_fail@plt+0x24bb0>
   35d00:	sub	r3, fp, #40	; 0x28
   35d04:	ldr	r1, [fp, #-8]
   35d08:	mov	r0, r3
   35d0c:	bl	28024 <__assert_fail@plt+0x16de4>
   35d10:	mov	r3, r0
   35d14:	cmp	r3, #0
   35d18:	beq	35df0 <__assert_fail@plt+0x24bb0>
   35d1c:	mvn	r3, #0
   35d20:	str	r3, [fp, #-8]
   35d24:	ldr	r3, [fp, #-12]
   35d28:	cmp	r3, #0
   35d2c:	beq	35dbc <__assert_fail@plt+0x24b7c>
   35d30:	mov	r3, #0
   35d34:	str	r3, [fp, #-16]
   35d38:	b	35dac <__assert_fail@plt+0x24b6c>
   35d3c:	ldr	r3, [fp, #-16]
   35d40:	lsl	r3, r3, #3
   35d44:	ldr	r2, [fp, #-212]	; 0xffffff2c
   35d48:	add	r3, r2, r3
   35d4c:	ldr	r3, [r3]
   35d50:	cmp	r3, #0
   35d54:	blt	35da0 <__assert_fail@plt+0x24b60>
   35d58:	ldr	r3, [fp, #-16]
   35d5c:	lsl	r3, r3, #3
   35d60:	ldr	r2, [fp, #-212]	; 0xffffff2c
   35d64:	add	r3, r2, r3
   35d68:	ldr	r3, [r3, #4]
   35d6c:	cmn	r3, #1
   35d70:	bne	35da0 <__assert_fail@plt+0x24b60>
   35d74:	ldr	r2, [fp, #-208]	; 0xffffff30
   35d78:	sub	r1, fp, #28
   35d7c:	sub	r3, fp, #40	; 0x28
   35d80:	str	r3, [sp, #4]
   35d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35d88:	str	r3, [sp]
   35d8c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   35d90:	ldr	r0, [fp, #-12]
   35d94:	bl	35464 <__assert_fail@plt+0x24224>
   35d98:	str	r0, [fp, #-8]
   35d9c:	b	35dbc <__assert_fail@plt+0x24b7c>
   35da0:	ldr	r3, [fp, #-16]
   35da4:	add	r3, r3, #1
   35da8:	str	r3, [fp, #-16]
   35dac:	ldr	r3, [fp, #-16]
   35db0:	ldr	r2, [fp, #-208]	; 0xffffff30
   35db4:	cmp	r2, r3
   35db8:	bhi	35d3c <__assert_fail@plt+0x24afc>
   35dbc:	ldr	r3, [fp, #-8]
   35dc0:	cmp	r3, #0
   35dc4:	bge	35df0 <__assert_fail@plt+0x24bb0>
   35dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35dcc:	mov	r0, r3
   35dd0:	bl	13798 <__assert_fail@plt+0x2558>
   35dd4:	sub	r3, fp, #192	; 0xc0
   35dd8:	mov	r0, r3
   35ddc:	bl	35704 <__assert_fail@plt+0x244c4>
   35de0:	ldr	r0, [fp, #-12]
   35de4:	bl	35f28 <__assert_fail@plt+0x24ce8>
   35de8:	mov	r3, r0
   35dec:	b	35f14 <__assert_fail@plt+0x24cd4>
   35df0:	ldr	r1, [fp, #-208]	; 0xffffff30
   35df4:	ldr	r3, [fp, #-12]
   35df8:	str	r3, [sp, #12]
   35dfc:	sub	r3, fp, #40	; 0x28
   35e00:	str	r3, [sp, #8]
   35e04:	ldr	r3, [fp, #-8]
   35e08:	str	r3, [sp, #4]
   35e0c:	sub	r3, fp, #28
   35e10:	str	r3, [sp]
   35e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35e18:	ldr	r2, [fp, #-212]	; 0xffffff2c
   35e1c:	ldr	r0, [fp, #-204]	; 0xffffff34
   35e20:	bl	34c98 <__assert_fail@plt+0x23a58>
   35e24:	str	r0, [fp, #-8]
   35e28:	ldr	r3, [fp, #-8]
   35e2c:	lsr	r3, r3, #31
   35e30:	uxtb	r3, r3
   35e34:	cmp	r3, #0
   35e38:	beq	35edc <__assert_fail@plt+0x24c9c>
   35e3c:	ldr	r3, [fp, #-8]
   35e40:	cmn	r3, #2
   35e44:	moveq	r3, #1
   35e48:	movne	r3, #0
   35e4c:	uxtb	r3, r3
   35e50:	cmp	r3, #0
   35e54:	beq	35e80 <__assert_fail@plt+0x24c40>
   35e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35e5c:	mov	r0, r3
   35e60:	bl	13798 <__assert_fail@plt+0x2558>
   35e64:	sub	r3, fp, #192	; 0xc0
   35e68:	mov	r0, r3
   35e6c:	bl	35704 <__assert_fail@plt+0x244c4>
   35e70:	ldr	r0, [fp, #-12]
   35e74:	bl	35f28 <__assert_fail@plt+0x24ce8>
   35e78:	mov	r3, #12
   35e7c:	b	35f14 <__assert_fail@plt+0x24cd4>
   35e80:	ldr	r2, [fp, #-208]	; 0xffffff30
   35e84:	sub	r1, fp, #28
   35e88:	sub	r3, fp, #40	; 0x28
   35e8c:	str	r3, [sp, #4]
   35e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35e94:	str	r3, [sp]
   35e98:	ldr	r3, [fp, #-212]	; 0xffffff2c
   35e9c:	ldr	r0, [fp, #-12]
   35ea0:	bl	35464 <__assert_fail@plt+0x24224>
   35ea4:	str	r0, [fp, #-8]
   35ea8:	ldr	r3, [fp, #-8]
   35eac:	cmp	r3, #0
   35eb0:	bge	35edc <__assert_fail@plt+0x24c9c>
   35eb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35eb8:	mov	r0, r3
   35ebc:	bl	13798 <__assert_fail@plt+0x2558>
   35ec0:	sub	r3, fp, #192	; 0xc0
   35ec4:	mov	r0, r3
   35ec8:	bl	35704 <__assert_fail@plt+0x244c4>
   35ecc:	ldr	r0, [fp, #-12]
   35ed0:	bl	35f28 <__assert_fail@plt+0x24ce8>
   35ed4:	mov	r3, #1
   35ed8:	b	35f14 <__assert_fail@plt+0x24cd4>
   35edc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   35ee0:	ldr	r2, [r3, #4]
   35ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35ee8:	cmp	r2, r3
   35eec:	bge	35ca8 <__assert_fail@plt+0x24a68>
   35ef0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35ef4:	mov	r0, r3
   35ef8:	bl	13798 <__assert_fail@plt+0x2558>
   35efc:	sub	r3, fp, #192	; 0xc0
   35f00:	mov	r0, r3
   35f04:	bl	35704 <__assert_fail@plt+0x244c4>
   35f08:	ldr	r0, [fp, #-12]
   35f0c:	bl	35f28 <__assert_fail@plt+0x24ce8>
   35f10:	mov	r3, r0
   35f14:	mov	r0, r3
   35f18:	sub	sp, fp, #4
   35f1c:	ldr	fp, [sp]
   35f20:	add	sp, sp, #4
   35f24:	pop	{pc}		; (ldr pc, [sp], #4)
   35f28:	str	fp, [sp, #-8]!
   35f2c:	str	lr, [sp, #4]
   35f30:	add	fp, sp, #4
   35f34:	sub	sp, sp, #16
   35f38:	str	r0, [fp, #-16]
   35f3c:	ldr	r3, [fp, #-16]
   35f40:	cmp	r3, #0
   35f44:	beq	35fdc <__assert_fail@plt+0x24d9c>
   35f48:	mov	r3, #0
   35f4c:	str	r3, [fp, #-8]
   35f50:	b	35fb8 <__assert_fail@plt+0x24d78>
   35f54:	ldr	r3, [fp, #-16]
   35f58:	ldr	r1, [r3, #8]
   35f5c:	ldr	r2, [fp, #-8]
   35f60:	mov	r3, r2
   35f64:	lsl	r3, r3, #1
   35f68:	add	r3, r3, r2
   35f6c:	lsl	r3, r3, #3
   35f70:	add	r3, r1, r3
   35f74:	ldr	r3, [r3, #20]
   35f78:	mov	r0, r3
   35f7c:	bl	13798 <__assert_fail@plt+0x2558>
   35f80:	ldr	r3, [fp, #-16]
   35f84:	ldr	r1, [r3, #8]
   35f88:	ldr	r2, [fp, #-8]
   35f8c:	mov	r3, r2
   35f90:	lsl	r3, r3, #1
   35f94:	add	r3, r3, r2
   35f98:	lsl	r3, r3, #3
   35f9c:	add	r3, r1, r3
   35fa0:	ldr	r3, [r3, #8]
   35fa4:	mov	r0, r3
   35fa8:	bl	13798 <__assert_fail@plt+0x2558>
   35fac:	ldr	r3, [fp, #-8]
   35fb0:	add	r3, r3, #1
   35fb4:	str	r3, [fp, #-8]
   35fb8:	ldr	r3, [fp, #-16]
   35fbc:	ldr	r3, [r3]
   35fc0:	ldr	r2, [fp, #-8]
   35fc4:	cmp	r2, r3
   35fc8:	blt	35f54 <__assert_fail@plt+0x24d14>
   35fcc:	ldr	r3, [fp, #-16]
   35fd0:	ldr	r3, [r3, #8]
   35fd4:	mov	r0, r3
   35fd8:	bl	13798 <__assert_fail@plt+0x2558>
   35fdc:	mov	r3, #0
   35fe0:	mov	r0, r3
   35fe4:	sub	sp, fp, #4
   35fe8:	ldr	fp, [sp]
   35fec:	add	sp, sp, #4
   35ff0:	pop	{pc}		; (ldr pc, [sp], #4)
   35ff4:	str	fp, [sp, #-8]!
   35ff8:	str	lr, [sp, #4]
   35ffc:	add	fp, sp, #4
   36000:	sub	sp, sp, #32
   36004:	str	r0, [fp, #-24]	; 0xffffffe8
   36008:	str	r1, [fp, #-28]	; 0xffffffe4
   3600c:	str	r2, [fp, #-32]	; 0xffffffe0
   36010:	str	r3, [fp, #-36]	; 0xffffffdc
   36014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36018:	ldr	r2, [r3]
   3601c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36020:	lsl	r3, r3, #3
   36024:	add	r3, r2, r3
   36028:	ldrb	r3, [r3, #4]
   3602c:	str	r3, [fp, #-8]
   36030:	ldr	r3, [fp, #-8]
   36034:	cmp	r3, #8
   36038:	bne	360a0 <__assert_fail@plt+0x24e60>
   3603c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36040:	ldr	r2, [r3]
   36044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36048:	lsl	r3, r3, #3
   3604c:	add	r3, r2, r3
   36050:	ldr	r3, [r3]
   36054:	add	r3, r3, #1
   36058:	str	r3, [fp, #-12]
   3605c:	ldr	r2, [fp, #-12]
   36060:	ldr	r3, [fp, #8]
   36064:	cmp	r2, r3
   36068:	bge	361a8 <__assert_fail@plt+0x24f68>
   3606c:	ldr	r3, [fp, #-12]
   36070:	lsl	r3, r3, #3
   36074:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36078:	add	r3, r2, r3
   3607c:	ldr	r2, [fp, #4]
   36080:	str	r2, [r3]
   36084:	ldr	r3, [fp, #-12]
   36088:	lsl	r3, r3, #3
   3608c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36090:	add	r3, r2, r3
   36094:	mvn	r2, #0
   36098:	str	r2, [r3, #4]
   3609c:	b	361a8 <__assert_fail@plt+0x24f68>
   360a0:	ldr	r3, [fp, #-8]
   360a4:	cmp	r3, #9
   360a8:	bne	361a8 <__assert_fail@plt+0x24f68>
   360ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   360b0:	ldr	r2, [r3]
   360b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   360b8:	lsl	r3, r3, #3
   360bc:	add	r3, r2, r3
   360c0:	ldr	r3, [r3]
   360c4:	add	r3, r3, #1
   360c8:	str	r3, [fp, #-16]
   360cc:	ldr	r2, [fp, #-16]
   360d0:	ldr	r3, [fp, #8]
   360d4:	cmp	r2, r3
   360d8:	bge	361a8 <__assert_fail@plt+0x24f68>
   360dc:	ldr	r3, [fp, #-16]
   360e0:	lsl	r3, r3, #3
   360e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   360e8:	add	r3, r2, r3
   360ec:	ldr	r3, [r3]
   360f0:	ldr	r2, [fp, #4]
   360f4:	cmp	r2, r3
   360f8:	ble	36130 <__assert_fail@plt+0x24ef0>
   360fc:	ldr	r3, [fp, #-16]
   36100:	lsl	r3, r3, #3
   36104:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36108:	add	r3, r2, r3
   3610c:	ldr	r2, [fp, #4]
   36110:	str	r2, [r3, #4]
   36114:	ldr	r3, [fp, #8]
   36118:	lsl	r3, r3, #3
   3611c:	mov	r2, r3
   36120:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36128:	bl	10fe8 <memcpy@plt>
   3612c:	b	361a8 <__assert_fail@plt+0x24f68>
   36130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36134:	ldr	r2, [r3]
   36138:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3613c:	lsl	r3, r3, #3
   36140:	add	r3, r2, r3
   36144:	ldrb	r3, [r3, #6]
   36148:	and	r3, r3, #8
   3614c:	uxtb	r3, r3
   36150:	cmp	r3, #0
   36154:	beq	36190 <__assert_fail@plt+0x24f50>
   36158:	ldr	r3, [fp, #-16]
   3615c:	lsl	r3, r3, #3
   36160:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36164:	add	r3, r2, r3
   36168:	ldr	r3, [r3]
   3616c:	cmn	r3, #1
   36170:	beq	36190 <__assert_fail@plt+0x24f50>
   36174:	ldr	r3, [fp, #8]
   36178:	lsl	r3, r3, #3
   3617c:	mov	r2, r3
   36180:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36184:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36188:	bl	10fe8 <memcpy@plt>
   3618c:	b	361a8 <__assert_fail@plt+0x24f68>
   36190:	ldr	r3, [fp, #-16]
   36194:	lsl	r3, r3, #3
   36198:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3619c:	add	r3, r2, r3
   361a0:	ldr	r2, [fp, #4]
   361a4:	str	r2, [r3, #4]
   361a8:	nop	{0}
   361ac:	sub	sp, fp, #4
   361b0:	ldr	fp, [sp]
   361b4:	add	sp, sp, #4
   361b8:	pop	{pc}		; (ldr pc, [sp], #4)
   361bc:	str	fp, [sp, #-8]!
   361c0:	str	lr, [sp, #4]
   361c4:	add	fp, sp, #4
   361c8:	sub	sp, sp, #32
   361cc:	str	r0, [fp, #-32]	; 0xffffffe0
   361d0:	str	r1, [fp, #-36]	; 0xffffffdc
   361d4:	mov	r3, #0
   361d8:	str	r3, [fp, #-12]
   361dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   361e0:	ldr	r3, [r3, #12]
   361e4:	str	r3, [fp, #-16]
   361e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   361ec:	ldr	r3, [r3, #100]	; 0x64
   361f0:	cmp	r3, #0
   361f4:	beq	36218 <__assert_fail@plt+0x24fd8>
   361f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   361fc:	ldr	r2, [r3, #100]	; 0x64
   36200:	ldr	r3, [fp, #-16]
   36204:	lsl	r3, r3, #2
   36208:	add	r3, r2, r3
   3620c:	ldr	r3, [r3]
   36210:	cmp	r3, #0
   36214:	bne	36218 <__assert_fail@plt+0x24fd8>
   36218:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3621c:	ldr	r2, [r3, #8]
   36220:	sub	r3, fp, #28
   36224:	mov	r1, r2
   36228:	mov	r0, r3
   3622c:	bl	26ca4 <__assert_fail@plt+0x15a64>
   36230:	str	r0, [fp, #-8]
   36234:	ldr	r3, [fp, #-8]
   36238:	cmp	r3, #0
   3623c:	movne	r3, #1
   36240:	moveq	r3, #0
   36244:	uxtb	r3, r3
   36248:	cmp	r3, #0
   3624c:	beq	36258 <__assert_fail@plt+0x25018>
   36250:	ldr	r3, [fp, #-8]
   36254:	b	363e0 <__assert_fail@plt+0x251a0>
   36258:	sub	r3, fp, #28
   3625c:	ldr	r2, [fp, #-16]
   36260:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36264:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36268:	bl	36934 <__assert_fail@plt+0x256f4>
   3626c:	str	r0, [fp, #-8]
   36270:	ldr	r3, [fp, #-8]
   36274:	cmp	r3, #0
   36278:	movne	r3, #1
   3627c:	moveq	r3, #0
   36280:	uxtb	r3, r3
   36284:	cmp	r3, #0
   36288:	bne	363bc <__assert_fail@plt+0x2517c>
   3628c:	b	363a4 <__assert_fail@plt+0x25164>
   36290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36294:	ldr	r2, [r3]
   36298:	ldr	r3, [fp, #-16]
   3629c:	lsl	r3, r3, #2
   362a0:	add	r3, r2, r3
   362a4:	ldr	r3, [r3]
   362a8:	cmp	r3, #0
   362ac:	bne	362bc <__assert_fail@plt+0x2507c>
   362b0:	ldr	r3, [fp, #-12]
   362b4:	add	r3, r3, #1
   362b8:	b	362c0 <__assert_fail@plt+0x25080>
   362bc:	mov	r3, #0
   362c0:	str	r3, [fp, #-12]
   362c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   362c8:	ldr	r3, [r3, #120]	; 0x78
   362cc:	ldr	r2, [fp, #-12]
   362d0:	cmp	r2, r3
   362d4:	ble	36308 <__assert_fail@plt+0x250c8>
   362d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   362dc:	ldr	r0, [r3]
   362e0:	ldr	r3, [fp, #-16]
   362e4:	lsl	r3, r3, #2
   362e8:	mov	r2, r3
   362ec:	mov	r1, #0
   362f0:	bl	1118c <memset@plt>
   362f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   362f8:	mov	r0, r3
   362fc:	bl	13798 <__assert_fail@plt+0x2558>
   36300:	mov	r3, #0
   36304:	b	363e0 <__assert_fail@plt+0x251a0>
   36308:	mov	r3, #0
   3630c:	str	r3, [fp, #-24]	; 0xffffffe8
   36310:	ldr	r3, [fp, #-16]
   36314:	sub	r3, r3, #1
   36318:	str	r3, [fp, #-16]
   3631c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36320:	ldr	r2, [r3, #100]	; 0x64
   36324:	ldr	r3, [fp, #-16]
   36328:	lsl	r3, r3, #2
   3632c:	add	r3, r2, r3
   36330:	ldr	r3, [r3]
   36334:	cmp	r3, #0
   36338:	beq	36370 <__assert_fail@plt+0x25130>
   3633c:	sub	r3, fp, #28
   36340:	ldr	r2, [fp, #-16]
   36344:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3634c:	bl	363f4 <__assert_fail@plt+0x251b4>
   36350:	str	r0, [fp, #-8]
   36354:	ldr	r3, [fp, #-8]
   36358:	cmp	r3, #0
   3635c:	movne	r3, #1
   36360:	moveq	r3, #0
   36364:	uxtb	r3, r3
   36368:	cmp	r3, #0
   3636c:	bne	363c4 <__assert_fail@plt+0x25184>
   36370:	sub	r3, fp, #28
   36374:	ldr	r2, [fp, #-16]
   36378:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3637c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36380:	bl	36934 <__assert_fail@plt+0x256f4>
   36384:	str	r0, [fp, #-8]
   36388:	ldr	r3, [fp, #-8]
   3638c:	cmp	r3, #0
   36390:	movne	r3, #1
   36394:	moveq	r3, #0
   36398:	uxtb	r3, r3
   3639c:	cmp	r3, #0
   363a0:	bne	363cc <__assert_fail@plt+0x2518c>
   363a4:	ldr	r3, [fp, #-16]
   363a8:	cmp	r3, #0
   363ac:	bgt	36290 <__assert_fail@plt+0x25050>
   363b0:	mov	r3, #0
   363b4:	str	r3, [fp, #-8]
   363b8:	b	363d0 <__assert_fail@plt+0x25190>
   363bc:	nop	{0}
   363c0:	b	363d0 <__assert_fail@plt+0x25190>
   363c4:	nop	{0}
   363c8:	b	363d0 <__assert_fail@plt+0x25190>
   363cc:	nop	{0}
   363d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   363d4:	mov	r0, r3
   363d8:	bl	13798 <__assert_fail@plt+0x2558>
   363dc:	ldr	r3, [fp, #-8]
   363e0:	mov	r0, r3
   363e4:	sub	sp, fp, #4
   363e8:	ldr	fp, [sp]
   363ec:	add	sp, sp, #4
   363f0:	pop	{pc}		; (ldr pc, [sp], #4)
   363f4:	str	fp, [sp, #-8]!
   363f8:	str	lr, [sp, #4]
   363fc:	add	fp, sp, #4
   36400:	sub	sp, sp, #56	; 0x38
   36404:	str	r0, [fp, #-40]	; 0xffffffd8
   36408:	str	r1, [fp, #-44]	; 0xffffffd4
   3640c:	str	r2, [fp, #-48]	; 0xffffffd0
   36410:	str	r3, [fp, #-52]	; 0xffffffcc
   36414:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36418:	ldr	r3, [r3, #84]	; 0x54
   3641c:	str	r3, [fp, #-16]
   36420:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36424:	ldr	r2, [r3, #100]	; 0x64
   36428:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3642c:	lsl	r3, r3, #2
   36430:	add	r3, r2, r3
   36434:	ldr	r3, [r3]
   36438:	add	r3, r3, #16
   3643c:	str	r3, [fp, #-20]	; 0xffffffec
   36440:	mov	r3, #0
   36444:	str	r3, [fp, #-8]
   36448:	b	3664c <__assert_fail@plt+0x2540c>
   3644c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36450:	ldr	r2, [r3, #8]
   36454:	ldr	r3, [fp, #-8]
   36458:	lsl	r3, r3, #2
   3645c:	add	r3, r2, r3
   36460:	ldr	r3, [r3]
   36464:	str	r3, [fp, #-24]	; 0xffffffe8
   36468:	mov	r3, #0
   3646c:	str	r3, [fp, #-12]
   36470:	ldr	r3, [fp, #-16]
   36474:	ldr	r2, [r3]
   36478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3647c:	lsl	r3, r3, #3
   36480:	add	r3, r2, r3
   36484:	ldrb	r3, [r3, #4]
   36488:	and	r3, r3, #8
   3648c:	cmp	r3, #0
   36490:	ldr	r3, [fp, #-16]
   36494:	ldr	r2, [r3]
   36498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3649c:	lsl	r3, r3, #3
   364a0:	add	r3, r2, r3
   364a4:	ldrb	r3, [r3, #6]
   364a8:	and	r3, r3, #16
   364ac:	uxtb	r3, r3
   364b0:	cmp	r3, #0
   364b4:	beq	364dc <__assert_fail@plt+0x2529c>
   364b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   364bc:	ldr	r3, [r3, #12]
   364c0:	str	r3, [sp]
   364c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   364c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   364cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   364d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   364d4:	bl	37e50 <__assert_fail@plt+0x26c10>
   364d8:	str	r0, [fp, #-12]
   364dc:	ldr	r3, [fp, #-12]
   364e0:	cmp	r3, #0
   364e4:	bne	36590 <__assert_fail@plt+0x25350>
   364e8:	ldr	r3, [fp, #-16]
   364ec:	ldr	r2, [r3]
   364f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   364f4:	lsl	r3, r3, #3
   364f8:	add	r3, r2, r3
   364fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   36500:	mov	r1, r3
   36504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36508:	bl	3c588 <__assert_fail@plt+0x2b348>
   3650c:	mov	r3, r0
   36510:	cmp	r3, #0
   36514:	beq	36590 <__assert_fail@plt+0x25350>
   36518:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3651c:	ldr	r2, [r3]
   36520:	ldr	r3, [fp, #-48]	; 0xffffffd0
   36524:	add	r3, r3, #1
   36528:	lsl	r3, r3, #2
   3652c:	add	r3, r2, r3
   36530:	ldr	r3, [r3]
   36534:	cmp	r3, #0
   36538:	beq	36590 <__assert_fail@plt+0x25350>
   3653c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36540:	ldr	r2, [r3]
   36544:	ldr	r3, [fp, #-48]	; 0xffffffd0
   36548:	add	r3, r3, #1
   3654c:	lsl	r3, r3, #2
   36550:	add	r3, r2, r3
   36554:	ldr	r3, [r3]
   36558:	add	r0, r3, #4
   3655c:	ldr	r3, [fp, #-16]
   36560:	ldr	r2, [r3, #12]
   36564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36568:	lsl	r3, r3, #2
   3656c:	add	r3, r2, r3
   36570:	ldr	r3, [r3]
   36574:	mov	r1, r3
   36578:	bl	28024 <__assert_fail@plt+0x16de4>
   3657c:	mov	r3, r0
   36580:	cmp	r3, #0
   36584:	beq	36590 <__assert_fail@plt+0x25350>
   36588:	mov	r3, #1
   3658c:	str	r3, [fp, #-12]
   36590:	ldr	r3, [fp, #-12]
   36594:	cmp	r3, #0
   36598:	beq	36634 <__assert_fail@plt+0x253f4>
   3659c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   365a0:	ldr	r3, [r3, #20]
   365a4:	cmp	r3, #0
   365a8:	beq	36604 <__assert_fail@plt+0x253c4>
   365ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   365b0:	ldr	r3, [fp, #-12]
   365b4:	add	r3, r2, r3
   365b8:	str	r3, [fp, #-28]	; 0xffffffe4
   365bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   365c0:	add	r1, r3, #16
   365c4:	ldr	r3, [fp, #-16]
   365c8:	ldr	r2, [r3, #12]
   365cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   365d0:	lsl	r3, r3, #2
   365d4:	add	r3, r2, r3
   365d8:	ldr	r2, [r3]
   365dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   365e0:	str	r3, [sp, #4]
   365e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   365e8:	str	r3, [sp]
   365ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   365f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   365f4:	bl	36fec <__assert_fail@plt+0x25dac>
   365f8:	mov	r3, r0
   365fc:	cmp	r3, #0
   36600:	bne	3663c <__assert_fail@plt+0x253fc>
   36604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36608:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3660c:	bl	27bfc <__assert_fail@plt+0x169bc>
   36610:	mov	r3, r0
   36614:	strb	r3, [fp, #-29]	; 0xffffffe3
   36618:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   3661c:	eor	r3, r3, #1
   36620:	uxtb	r3, r3
   36624:	cmp	r3, #0
   36628:	beq	36640 <__assert_fail@plt+0x25400>
   3662c:	mov	r3, #12
   36630:	b	36664 <__assert_fail@plt+0x25424>
   36634:	nop	{0}
   36638:	b	36640 <__assert_fail@plt+0x25400>
   3663c:	nop	{0}
   36640:	ldr	r3, [fp, #-8]
   36644:	add	r3, r3, #1
   36648:	str	r3, [fp, #-8]
   3664c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36650:	ldr	r3, [r3, #4]
   36654:	ldr	r2, [fp, #-8]
   36658:	cmp	r2, r3
   3665c:	blt	3644c <__assert_fail@plt+0x2520c>
   36660:	mov	r3, #0
   36664:	mov	r0, r3
   36668:	sub	sp, fp, #4
   3666c:	ldr	fp, [sp]
   36670:	add	sp, sp, #4
   36674:	pop	{pc}		; (ldr pc, [sp], #4)
   36678:	str	fp, [sp, #-8]!
   3667c:	str	lr, [sp, #4]
   36680:	add	fp, sp, #4
   36684:	sub	sp, sp, #16
   36688:	str	r0, [fp, #-16]
   3668c:	str	r1, [fp, #-20]	; 0xffffffec
   36690:	ldr	r3, [fp, #-16]
   36694:	ldr	r3, [r3, #104]	; 0x68
   36698:	str	r3, [fp, #-8]
   3669c:	ldr	r3, [fp, #-16]
   366a0:	ldr	r3, [r3, #36]	; 0x24
   366a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   366a8:	cmp	r2, r3
   366ac:	blt	366c8 <__assert_fail@plt+0x25488>
   366b0:	ldr	r3, [fp, #-16]
   366b4:	ldr	r2, [r3, #36]	; 0x24
   366b8:	ldr	r3, [fp, #-16]
   366bc:	ldr	r3, [r3, #48]	; 0x30
   366c0:	cmp	r2, r3
   366c4:	blt	366f4 <__assert_fail@plt+0x254b4>
   366c8:	ldr	r3, [fp, #-16]
   366cc:	ldr	r3, [r3, #28]
   366d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   366d4:	cmp	r2, r3
   366d8:	blt	36730 <__assert_fail@plt+0x254f0>
   366dc:	ldr	r3, [fp, #-16]
   366e0:	ldr	r2, [r3, #28]
   366e4:	ldr	r3, [fp, #-16]
   366e8:	ldr	r3, [r3, #48]	; 0x30
   366ec:	cmp	r2, r3
   366f0:	bge	36730 <__assert_fail@plt+0x254f0>
   366f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   366f8:	add	r3, r3, #1
   366fc:	mov	r1, r3
   36700:	ldr	r0, [fp, #-16]
   36704:	bl	3c7c8 <__assert_fail@plt+0x2b588>
   36708:	str	r0, [fp, #-12]
   3670c:	ldr	r3, [fp, #-12]
   36710:	cmp	r3, #0
   36714:	movne	r3, #1
   36718:	moveq	r3, #0
   3671c:	uxtb	r3, r3
   36720:	cmp	r3, #0
   36724:	beq	36730 <__assert_fail@plt+0x254f0>
   36728:	ldr	r3, [fp, #-12]
   3672c:	b	36790 <__assert_fail@plt+0x25550>
   36730:	ldr	r2, [fp, #-8]
   36734:	ldr	r3, [fp, #-20]	; 0xffffffec
   36738:	cmp	r2, r3
   3673c:	bge	3678c <__assert_fail@plt+0x2554c>
   36740:	ldr	r3, [fp, #-16]
   36744:	ldr	r3, [r3, #100]	; 0x64
   36748:	cmp	r3, #0
   3674c:	ldr	r3, [fp, #-16]
   36750:	ldr	r2, [r3, #100]	; 0x64
   36754:	ldr	r3, [fp, #-8]
   36758:	add	r3, r3, #1
   3675c:	lsl	r3, r3, #2
   36760:	add	r0, r2, r3
   36764:	ldr	r2, [fp, #-20]	; 0xffffffec
   36768:	ldr	r3, [fp, #-8]
   3676c:	sub	r3, r2, r3
   36770:	lsl	r3, r3, #2
   36774:	mov	r2, r3
   36778:	mov	r1, #0
   3677c:	bl	1118c <memset@plt>
   36780:	ldr	r3, [fp, #-16]
   36784:	ldr	r2, [fp, #-20]	; 0xffffffec
   36788:	str	r2, [r3, #104]	; 0x68
   3678c:	mov	r3, #0
   36790:	mov	r0, r3
   36794:	sub	sp, fp, #4
   36798:	ldr	fp, [sp]
   3679c:	add	sp, sp, #4
   367a0:	pop	{pc}		; (ldr pc, [sp], #4)
   367a4:	str	r4, [sp, #-12]!
   367a8:	str	fp, [sp, #4]
   367ac:	str	lr, [sp, #8]
   367b0:	add	fp, sp, #8
   367b4:	sub	sp, sp, #44	; 0x2c
   367b8:	str	r0, [fp, #-40]	; 0xffffffd8
   367bc:	str	r1, [fp, #-44]	; 0xffffffd4
   367c0:	str	r2, [fp, #-48]	; 0xffffffd0
   367c4:	str	r3, [fp, #-52]	; 0xffffffcc
   367c8:	mov	r3, #0
   367cc:	str	r3, [fp, #-16]
   367d0:	b	36908 <__assert_fail@plt+0x256c8>
   367d4:	ldr	r3, [fp, #-16]
   367d8:	lsl	r3, r3, #2
   367dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   367e0:	add	r3, r2, r3
   367e4:	ldr	r3, [r3]
   367e8:	cmp	r3, #0
   367ec:	bne	3681c <__assert_fail@plt+0x255dc>
   367f0:	ldr	r3, [fp, #-16]
   367f4:	lsl	r3, r3, #2
   367f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   367fc:	add	r2, r2, r3
   36800:	ldr	r3, [fp, #-16]
   36804:	lsl	r3, r3, #2
   36808:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3680c:	add	r3, r1, r3
   36810:	ldr	r2, [r2]
   36814:	str	r2, [r3]
   36818:	b	368fc <__assert_fail@plt+0x256bc>
   3681c:	ldr	r3, [fp, #-16]
   36820:	lsl	r3, r3, #2
   36824:	ldr	r2, [fp, #-48]	; 0xffffffd0
   36828:	add	r3, r2, r3
   3682c:	ldr	r3, [r3]
   36830:	cmp	r3, #0
   36834:	beq	368fc <__assert_fail@plt+0x256bc>
   36838:	ldr	r3, [fp, #-16]
   3683c:	lsl	r3, r3, #2
   36840:	ldr	r2, [fp, #-44]	; 0xffffffd4
   36844:	add	r3, r2, r3
   36848:	ldr	r3, [r3]
   3684c:	add	r1, r3, #4
   36850:	ldr	r3, [fp, #-16]
   36854:	lsl	r3, r3, #2
   36858:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3685c:	add	r3, r2, r3
   36860:	ldr	r3, [r3]
   36864:	add	r2, r3, #4
   36868:	sub	r3, fp, #32
   3686c:	mov	r0, r3
   36870:	bl	27414 <__assert_fail@plt+0x161d4>
   36874:	mov	r3, r0
   36878:	str	r3, [fp, #-20]	; 0xffffffec
   3687c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36880:	cmp	r3, #0
   36884:	movne	r3, #1
   36888:	moveq	r3, #0
   3688c:	uxtb	r3, r3
   36890:	cmp	r3, #0
   36894:	beq	368a0 <__assert_fail@plt+0x25660>
   36898:	ldr	r3, [fp, #-20]	; 0xffffffec
   3689c:	b	3691c <__assert_fail@plt+0x256dc>
   368a0:	ldr	r3, [fp, #-16]
   368a4:	lsl	r3, r3, #2
   368a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   368ac:	add	r4, r2, r3
   368b0:	sub	r2, fp, #32
   368b4:	sub	r3, fp, #20
   368b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   368bc:	mov	r0, r3
   368c0:	bl	2863c <__assert_fail@plt+0x173fc>
   368c4:	mov	r3, r0
   368c8:	str	r3, [r4]
   368cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   368d0:	mov	r0, r3
   368d4:	bl	13798 <__assert_fail@plt+0x2558>
   368d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   368dc:	cmp	r3, #0
   368e0:	movne	r3, #1
   368e4:	moveq	r3, #0
   368e8:	uxtb	r3, r3
   368ec:	cmp	r3, #0
   368f0:	beq	368fc <__assert_fail@plt+0x256bc>
   368f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   368f8:	b	3691c <__assert_fail@plt+0x256dc>
   368fc:	ldr	r3, [fp, #-16]
   36900:	add	r3, r3, #1
   36904:	str	r3, [fp, #-16]
   36908:	ldr	r2, [fp, #-16]
   3690c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36910:	cmp	r2, r3
   36914:	blt	367d4 <__assert_fail@plt+0x25594>
   36918:	mov	r3, #0
   3691c:	mov	r0, r3
   36920:	sub	sp, fp, #8
   36924:	ldr	r4, [sp]
   36928:	ldr	fp, [sp, #4]
   3692c:	add	sp, sp, #8
   36930:	pop	{pc}		; (ldr pc, [sp], #4)
   36934:	str	r4, [sp, #-12]!
   36938:	str	fp, [sp, #4]
   3693c:	str	lr, [sp, #8]
   36940:	add	fp, sp, #8
   36944:	sub	sp, sp, #44	; 0x2c
   36948:	str	r0, [fp, #-32]	; 0xffffffe0
   3694c:	str	r1, [fp, #-36]	; 0xffffffdc
   36950:	str	r2, [fp, #-40]	; 0xffffffd8
   36954:	str	r3, [fp, #-44]	; 0xffffffd4
   36958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3695c:	ldr	r3, [r3, #84]	; 0x54
   36960:	str	r3, [fp, #-16]
   36964:	mov	r3, #0
   36968:	str	r3, [fp, #-24]	; 0xffffffe8
   3696c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36970:	ldr	r2, [r3, #100]	; 0x64
   36974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36978:	lsl	r3, r3, #2
   3697c:	add	r3, r2, r3
   36980:	ldr	r3, [r3]
   36984:	cmp	r3, #0
   36988:	beq	369ac <__assert_fail@plt+0x2576c>
   3698c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36990:	ldr	r2, [r3, #100]	; 0x64
   36994:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36998:	lsl	r3, r3, #2
   3699c:	add	r3, r2, r3
   369a0:	ldr	r3, [r3]
   369a4:	add	r3, r3, #4
   369a8:	b	369b0 <__assert_fail@plt+0x25770>
   369ac:	mov	r3, #0
   369b0:	str	r3, [fp, #-20]	; 0xffffffec
   369b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   369b8:	ldr	r3, [r3, #4]
   369bc:	cmp	r3, #0
   369c0:	bne	369e4 <__assert_fail@plt+0x257a4>
   369c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   369c8:	ldr	r2, [r3]
   369cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   369d0:	lsl	r3, r3, #2
   369d4:	add	r3, r2, r3
   369d8:	mov	r2, #0
   369dc:	str	r2, [r3]
   369e0:	b	36aec <__assert_fail@plt+0x258ac>
   369e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   369e8:	cmp	r3, #0
   369ec:	beq	36a98 <__assert_fail@plt+0x25858>
   369f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   369f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   369f8:	ldr	r0, [fp, #-16]
   369fc:	bl	36b80 <__assert_fail@plt+0x25940>
   36a00:	mov	r3, r0
   36a04:	str	r3, [fp, #-24]	; 0xffffffe8
   36a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36a0c:	cmp	r3, #0
   36a10:	movne	r3, #1
   36a14:	moveq	r3, #0
   36a18:	uxtb	r3, r3
   36a1c:	cmp	r3, #0
   36a20:	beq	36a2c <__assert_fail@plt+0x257ec>
   36a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36a28:	b	36b68 <__assert_fail@plt+0x25928>
   36a2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36a30:	ldr	r3, [r3, #20]
   36a34:	cmp	r3, #0
   36a38:	beq	36a98 <__assert_fail@plt+0x25858>
   36a3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36a40:	add	r1, r3, #16
   36a44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36a48:	ldr	r3, [r3, #116]	; 0x74
   36a4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36a50:	str	r2, [sp, #4]
   36a54:	str	r3, [sp]
   36a58:	mov	r3, r1
   36a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   36a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36a64:	ldr	r0, [fp, #-16]
   36a68:	bl	37574 <__assert_fail@plt+0x26334>
   36a6c:	mov	r3, r0
   36a70:	str	r3, [fp, #-24]	; 0xffffffe8
   36a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36a78:	cmp	r3, #0
   36a7c:	movne	r3, #1
   36a80:	moveq	r3, #0
   36a84:	uxtb	r3, r3
   36a88:	cmp	r3, #0
   36a8c:	beq	36a98 <__assert_fail@plt+0x25858>
   36a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36a94:	b	36b68 <__assert_fail@plt+0x25928>
   36a98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36a9c:	ldr	r2, [r3]
   36aa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36aa4:	lsl	r3, r3, #2
   36aa8:	add	r4, r2, r3
   36aac:	sub	r3, fp, #24
   36ab0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   36ab4:	ldr	r1, [fp, #-16]
   36ab8:	mov	r0, r3
   36abc:	bl	2863c <__assert_fail@plt+0x173fc>
   36ac0:	mov	r3, r0
   36ac4:	str	r3, [r4]
   36ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36acc:	cmp	r3, #0
   36ad0:	movne	r3, #1
   36ad4:	moveq	r3, #0
   36ad8:	uxtb	r3, r3
   36adc:	cmp	r3, #0
   36ae0:	beq	36aec <__assert_fail@plt+0x258ac>
   36ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36ae8:	b	36b68 <__assert_fail@plt+0x25928>
   36aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   36af0:	cmp	r3, #0
   36af4:	beq	36b64 <__assert_fail@plt+0x25924>
   36af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36afc:	ldr	r2, [r3, #100]	; 0x64
   36b00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36b04:	lsl	r3, r3, #2
   36b08:	add	r3, r2, r3
   36b0c:	ldr	r3, [r3]
   36b10:	ldrb	r3, [r3, #52]	; 0x34
   36b14:	and	r3, r3, #64	; 0x40
   36b18:	uxtb	r3, r3
   36b1c:	cmp	r3, #0
   36b20:	beq	36b64 <__assert_fail@plt+0x25924>
   36b24:	ldr	r3, [fp, #-20]	; 0xffffffec
   36b28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36b2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36b30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36b34:	bl	37998 <__assert_fail@plt+0x26758>
   36b38:	mov	r3, r0
   36b3c:	str	r3, [fp, #-24]	; 0xffffffe8
   36b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36b44:	cmp	r3, #0
   36b48:	movne	r3, #1
   36b4c:	moveq	r3, #0
   36b50:	uxtb	r3, r3
   36b54:	cmp	r3, #0
   36b58:	beq	36b64 <__assert_fail@plt+0x25924>
   36b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36b60:	b	36b68 <__assert_fail@plt+0x25928>
   36b64:	mov	r3, #0
   36b68:	mov	r0, r3
   36b6c:	sub	sp, fp, #8
   36b70:	ldr	r4, [sp]
   36b74:	ldr	fp, [sp, #4]
   36b78:	add	sp, sp, #8
   36b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   36b80:	str	fp, [sp, #-8]!
   36b84:	str	lr, [sp, #4]
   36b88:	add	fp, sp, #4
   36b8c:	sub	sp, sp, #32
   36b90:	str	r0, [fp, #-24]	; 0xffffffe8
   36b94:	str	r1, [fp, #-28]	; 0xffffffe4
   36b98:	str	r2, [fp, #-32]	; 0xffffffe0
   36b9c:	mov	r3, #0
   36ba0:	str	r3, [fp, #-16]
   36ba4:	sub	r3, fp, #16
   36ba8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36bac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36bb0:	mov	r0, r3
   36bb4:	bl	2863c <__assert_fail@plt+0x173fc>
   36bb8:	str	r0, [fp, #-12]
   36bbc:	ldr	r3, [fp, #-16]
   36bc0:	cmp	r3, #0
   36bc4:	movne	r3, #1
   36bc8:	moveq	r3, #0
   36bcc:	uxtb	r3, r3
   36bd0:	cmp	r3, #0
   36bd4:	beq	36be0 <__assert_fail@plt+0x259a0>
   36bd8:	ldr	r3, [fp, #-16]
   36bdc:	b	36cf4 <__assert_fail@plt+0x25ab4>
   36be0:	ldr	r3, [fp, #-12]
   36be4:	ldr	r3, [r3, #28]
   36be8:	cmp	r3, #0
   36bec:	bne	36cd8 <__assert_fail@plt+0x25a98>
   36bf0:	ldr	r3, [fp, #-12]
   36bf4:	add	r2, r3, #28
   36bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36bfc:	ldr	r3, [r3, #4]
   36c00:	mov	r1, r3
   36c04:	mov	r0, r2
   36c08:	bl	26c14 <__assert_fail@plt+0x159d4>
   36c0c:	mov	r3, r0
   36c10:	str	r3, [fp, #-16]
   36c14:	ldr	r3, [fp, #-16]
   36c18:	cmp	r3, #0
   36c1c:	movne	r3, #1
   36c20:	moveq	r3, #0
   36c24:	uxtb	r3, r3
   36c28:	cmp	r3, #0
   36c2c:	beq	36c38 <__assert_fail@plt+0x259f8>
   36c30:	mov	r3, #12
   36c34:	b	36cf4 <__assert_fail@plt+0x25ab4>
   36c38:	mov	r3, #0
   36c3c:	str	r3, [fp, #-8]
   36c40:	b	36cc4 <__assert_fail@plt+0x25a84>
   36c44:	ldr	r3, [fp, #-12]
   36c48:	add	r0, r3, #28
   36c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36c50:	ldr	r2, [r3, #28]
   36c54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36c58:	ldr	r1, [r3, #8]
   36c5c:	ldr	r3, [fp, #-8]
   36c60:	lsl	r3, r3, #2
   36c64:	add	r3, r1, r3
   36c68:	ldr	r3, [r3]
   36c6c:	mov	r1, r3
   36c70:	mov	r3, r1
   36c74:	lsl	r3, r3, #1
   36c78:	add	r3, r3, r1
   36c7c:	lsl	r3, r3, #2
   36c80:	add	r3, r2, r3
   36c84:	mov	r1, r3
   36c88:	bl	2779c <__assert_fail@plt+0x1655c>
   36c8c:	mov	r3, r0
   36c90:	str	r3, [fp, #-16]
   36c94:	ldr	r3, [fp, #-16]
   36c98:	cmp	r3, #0
   36c9c:	movne	r3, #1
   36ca0:	moveq	r3, #0
   36ca4:	uxtb	r3, r3
   36ca8:	cmp	r3, #0
   36cac:	beq	36cb8 <__assert_fail@plt+0x25a78>
   36cb0:	mov	r3, #12
   36cb4:	b	36cf4 <__assert_fail@plt+0x25ab4>
   36cb8:	ldr	r3, [fp, #-8]
   36cbc:	add	r3, r3, #1
   36cc0:	str	r3, [fp, #-8]
   36cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36cc8:	ldr	r3, [r3, #4]
   36ccc:	ldr	r2, [fp, #-8]
   36cd0:	cmp	r2, r3
   36cd4:	blt	36c44 <__assert_fail@plt+0x25a04>
   36cd8:	ldr	r3, [fp, #-12]
   36cdc:	add	r3, r3, #28
   36ce0:	mov	r2, r3
   36ce4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36ce8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36cec:	bl	26f70 <__assert_fail@plt+0x15d30>
   36cf0:	mov	r3, r0
   36cf4:	mov	r0, r3
   36cf8:	sub	sp, fp, #4
   36cfc:	ldr	fp, [sp]
   36d00:	add	sp, sp, #4
   36d04:	pop	{pc}		; (ldr pc, [sp], #4)
   36d08:	str	fp, [sp, #-8]!
   36d0c:	str	lr, [sp, #4]
   36d10:	add	fp, sp, #4
   36d14:	sub	sp, sp, #64	; 0x40
   36d18:	str	r0, [fp, #-56]	; 0xffffffc8
   36d1c:	str	r1, [fp, #-60]	; 0xffffffc4
   36d20:	str	r2, [fp, #-64]	; 0xffffffc0
   36d24:	str	r3, [fp, #-68]	; 0xffffffbc
   36d28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36d2c:	ldr	r1, [r3, #28]
   36d30:	ldr	r2, [fp, #-60]	; 0xffffffc4
   36d34:	mov	r3, r2
   36d38:	lsl	r3, r3, #1
   36d3c:	add	r3, r3, r2
   36d40:	lsl	r3, r3, #2
   36d44:	add	r3, r1, r3
   36d48:	str	r3, [fp, #-12]
   36d4c:	sub	r3, fp, #48	; 0x30
   36d50:	mov	r2, #12
   36d54:	mov	r1, #0
   36d58:	mov	r0, r3
   36d5c:	bl	1118c <memset@plt>
   36d60:	mov	r3, #0
   36d64:	str	r3, [fp, #-8]
   36d68:	b	36f2c <__assert_fail@plt+0x25cec>
   36d6c:	ldr	r3, [fp, #-12]
   36d70:	ldr	r2, [r3, #8]
   36d74:	ldr	r3, [fp, #-8]
   36d78:	lsl	r3, r3, #2
   36d7c:	add	r3, r2, r3
   36d80:	ldr	r3, [r3]
   36d84:	str	r3, [fp, #-16]
   36d88:	ldr	r2, [fp, #-16]
   36d8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36d90:	cmp	r2, r3
   36d94:	beq	36f1c <__assert_fail@plt+0x25cdc>
   36d98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36d9c:	ldr	r2, [r3]
   36da0:	ldr	r3, [fp, #-16]
   36da4:	lsl	r3, r3, #3
   36da8:	add	r3, r2, r3
   36dac:	ldrb	r3, [r3, #4]
   36db0:	and	r3, r3, #8
   36db4:	cmp	r3, #0
   36db8:	beq	36f20 <__assert_fail@plt+0x25ce0>
   36dbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36dc0:	ldr	r1, [r3, #20]
   36dc4:	ldr	r2, [fp, #-16]
   36dc8:	mov	r3, r2
   36dcc:	lsl	r3, r3, #1
   36dd0:	add	r3, r3, r2
   36dd4:	lsl	r3, r3, #2
   36dd8:	add	r3, r1, r3
   36ddc:	ldr	r3, [r3, #8]
   36de0:	ldr	r3, [r3]
   36de4:	str	r3, [fp, #-20]	; 0xffffffec
   36de8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36dec:	ldr	r1, [r3, #20]
   36df0:	ldr	r2, [fp, #-16]
   36df4:	mov	r3, r2
   36df8:	lsl	r3, r3, #1
   36dfc:	add	r3, r3, r2
   36e00:	lsl	r3, r3, #2
   36e04:	add	r3, r1, r3
   36e08:	ldr	r3, [r3, #4]
   36e0c:	cmp	r3, #1
   36e10:	ble	36e44 <__assert_fail@plt+0x25c04>
   36e14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36e18:	ldr	r1, [r3, #20]
   36e1c:	ldr	r2, [fp, #-16]
   36e20:	mov	r3, r2
   36e24:	lsl	r3, r3, #1
   36e28:	add	r3, r3, r2
   36e2c:	lsl	r3, r3, #2
   36e30:	add	r3, r1, r3
   36e34:	ldr	r3, [r3, #8]
   36e38:	add	r3, r3, #4
   36e3c:	ldr	r3, [r3]
   36e40:	b	36e48 <__assert_fail@plt+0x25c08>
   36e44:	mvn	r3, #0
   36e48:	str	r3, [fp, #-24]	; 0xffffffe8
   36e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36e50:	ldr	r0, [fp, #-12]
   36e54:	bl	28024 <__assert_fail@plt+0x16de4>
   36e58:	mov	r3, r0
   36e5c:	cmp	r3, #0
   36e60:	bne	36e7c <__assert_fail@plt+0x25c3c>
   36e64:	ldr	r1, [fp, #-20]	; 0xffffffec
   36e68:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36e6c:	bl	28024 <__assert_fail@plt+0x16de4>
   36e70:	mov	r3, r0
   36e74:	cmp	r3, #0
   36e78:	bne	36eb8 <__assert_fail@plt+0x25c78>
   36e7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36e80:	cmp	r3, #0
   36e84:	ble	36f20 <__assert_fail@plt+0x25ce0>
   36e88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36e8c:	ldr	r0, [fp, #-12]
   36e90:	bl	28024 <__assert_fail@plt+0x16de4>
   36e94:	mov	r3, r0
   36e98:	cmp	r3, #0
   36e9c:	bne	36f20 <__assert_fail@plt+0x25ce0>
   36ea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36ea4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36ea8:	bl	28024 <__assert_fail@plt+0x16de4>
   36eac:	mov	r3, r0
   36eb0:	cmp	r3, #0
   36eb4:	beq	36f20 <__assert_fail@plt+0x25ce0>
   36eb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36ebc:	ldr	r1, [r3, #28]
   36ec0:	ldr	r2, [fp, #-16]
   36ec4:	mov	r3, r2
   36ec8:	lsl	r3, r3, #1
   36ecc:	add	r3, r3, r2
   36ed0:	lsl	r3, r3, #2
   36ed4:	add	r2, r1, r3
   36ed8:	sub	r3, fp, #48	; 0x30
   36edc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   36ee0:	mov	r0, r3
   36ee4:	bl	26f70 <__assert_fail@plt+0x15d30>
   36ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   36eec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36ef0:	cmp	r3, #0
   36ef4:	movne	r3, #1
   36ef8:	moveq	r3, #0
   36efc:	uxtb	r3, r3
   36f00:	cmp	r3, #0
   36f04:	beq	36f20 <__assert_fail@plt+0x25ce0>
   36f08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36f0c:	mov	r0, r3
   36f10:	bl	13798 <__assert_fail@plt+0x2558>
   36f14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36f18:	b	36fd8 <__assert_fail@plt+0x25d98>
   36f1c:	nop	{0}
   36f20:	ldr	r3, [fp, #-8]
   36f24:	add	r3, r3, #1
   36f28:	str	r3, [fp, #-8]
   36f2c:	ldr	r3, [fp, #-12]
   36f30:	ldr	r3, [r3, #4]
   36f34:	ldr	r2, [fp, #-8]
   36f38:	cmp	r2, r3
   36f3c:	blt	36d6c <__assert_fail@plt+0x25b2c>
   36f40:	mov	r3, #0
   36f44:	str	r3, [fp, #-8]
   36f48:	b	36fb4 <__assert_fail@plt+0x25d74>
   36f4c:	ldr	r3, [fp, #-12]
   36f50:	ldr	r2, [r3, #8]
   36f54:	ldr	r3, [fp, #-8]
   36f58:	lsl	r3, r3, #2
   36f5c:	add	r3, r2, r3
   36f60:	ldr	r3, [r3]
   36f64:	str	r3, [fp, #-32]	; 0xffffffe0
   36f68:	sub	r3, fp, #48	; 0x30
   36f6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36f70:	mov	r0, r3
   36f74:	bl	28024 <__assert_fail@plt+0x16de4>
   36f78:	mov	r3, r0
   36f7c:	cmp	r3, #0
   36f80:	bne	36fa8 <__assert_fail@plt+0x25d68>
   36f84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36f88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36f8c:	bl	28024 <__assert_fail@plt+0x16de4>
   36f90:	mov	r3, r0
   36f94:	sub	r3, r3, #1
   36f98:	str	r3, [fp, #-36]	; 0xffffffdc
   36f9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36fa0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36fa4:	bl	28110 <__assert_fail@plt+0x16ed0>
   36fa8:	ldr	r3, [fp, #-8]
   36fac:	add	r3, r3, #1
   36fb0:	str	r3, [fp, #-8]
   36fb4:	ldr	r3, [fp, #-12]
   36fb8:	ldr	r3, [r3, #4]
   36fbc:	ldr	r2, [fp, #-8]
   36fc0:	cmp	r2, r3
   36fc4:	blt	36f4c <__assert_fail@plt+0x25d0c>
   36fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36fcc:	mov	r0, r3
   36fd0:	bl	13798 <__assert_fail@plt+0x2558>
   36fd4:	mov	r3, #0
   36fd8:	mov	r0, r3
   36fdc:	sub	sp, fp, #4
   36fe0:	ldr	fp, [sp]
   36fe4:	add	sp, sp, #4
   36fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   36fec:	str	fp, [sp, #-8]!
   36ff0:	str	lr, [sp, #4]
   36ff4:	add	fp, sp, #4
   36ff8:	sub	sp, sp, #56	; 0x38
   36ffc:	str	r0, [fp, #-40]	; 0xffffffd8
   37000:	str	r1, [fp, #-44]	; 0xffffffd4
   37004:	str	r2, [fp, #-48]	; 0xffffffd0
   37008:	str	r3, [fp, #-52]	; 0xffffffcc
   3700c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37010:	ldr	r3, [r3, #84]	; 0x54
   37014:	str	r3, [fp, #-12]
   37018:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3701c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37020:	bl	3cf84 <__assert_fail@plt+0x2bd44>
   37024:	str	r0, [fp, #-16]
   37028:	ldr	r1, [fp, #8]
   3702c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37030:	bl	3cf84 <__assert_fail@plt+0x2bd44>
   37034:	str	r0, [fp, #-20]	; 0xffffffec
   37038:	mov	r3, #0
   3703c:	str	r3, [fp, #-8]
   37040:	b	37140 <__assert_fail@plt+0x25f00>
   37044:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37048:	ldr	r2, [r3, #116]	; 0x74
   3704c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37050:	ldr	r1, [r3, #8]
   37054:	ldr	r3, [fp, #-8]
   37058:	lsl	r3, r3, #2
   3705c:	add	r3, r1, r3
   37060:	ldr	r3, [r3]
   37064:	mov	r1, r3
   37068:	mov	r3, r1
   3706c:	lsl	r3, r3, #1
   37070:	add	r3, r3, r1
   37074:	lsl	r3, r3, #3
   37078:	add	r3, r2, r3
   3707c:	str	r3, [fp, #-24]	; 0xffffffe8
   37080:	ldr	r3, [fp, #-12]
   37084:	ldr	r2, [r3]
   37088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3708c:	ldr	r3, [r3]
   37090:	lsl	r3, r3, #3
   37094:	add	r3, r2, r3
   37098:	ldr	r3, [r3]
   3709c:	str	r3, [fp, #-28]	; 0xffffffe4
   370a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   370a4:	ldr	r2, [r3, #8]
   370a8:	ldr	r3, [fp, #-8]
   370ac:	lsl	r3, r3, #2
   370b0:	add	r3, r2, r3
   370b4:	ldr	r1, [r3]
   370b8:	ldr	r3, [fp, #-16]
   370bc:	str	r3, [sp, #4]
   370c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   370c4:	str	r3, [sp]
   370c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   370cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   370d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   370d4:	bl	37464 <__assert_fail@plt+0x26224>
   370d8:	str	r0, [fp, #-32]	; 0xffffffe0
   370dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   370e0:	ldr	r2, [r3, #8]
   370e4:	ldr	r3, [fp, #-8]
   370e8:	lsl	r3, r3, #2
   370ec:	add	r3, r2, r3
   370f0:	ldr	r1, [r3]
   370f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   370f8:	str	r3, [sp, #4]
   370fc:	ldr	r3, [fp, #8]
   37100:	str	r3, [sp]
   37104:	ldr	r3, [fp, #4]
   37108:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3710c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37110:	bl	37464 <__assert_fail@plt+0x26224>
   37114:	str	r0, [fp, #-36]	; 0xffffffdc
   37118:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3711c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37120:	cmp	r2, r3
   37124:	bne	37138 <__assert_fail@plt+0x25ef8>
   37128:	ldr	r3, [fp, #-8]
   3712c:	add	r3, r3, #1
   37130:	str	r3, [fp, #-8]
   37134:	b	37140 <__assert_fail@plt+0x25f00>
   37138:	mov	r3, #1
   3713c:	b	37158 <__assert_fail@plt+0x25f18>
   37140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37144:	ldr	r3, [r3, #4]
   37148:	ldr	r2, [fp, #-8]
   3714c:	cmp	r2, r3
   37150:	blt	37044 <__assert_fail@plt+0x25e04>
   37154:	mov	r3, #0
   37158:	mov	r0, r3
   3715c:	sub	sp, fp, #4
   37160:	ldr	fp, [sp]
   37164:	add	sp, sp, #4
   37168:	pop	{pc}		; (ldr pc, [sp], #4)
   3716c:	str	fp, [sp, #-8]!
   37170:	str	lr, [sp, #4]
   37174:	add	fp, sp, #4
   37178:	sub	sp, sp, #56	; 0x38
   3717c:	str	r0, [fp, #-40]	; 0xffffffd8
   37180:	str	r1, [fp, #-44]	; 0xffffffd4
   37184:	str	r2, [fp, #-48]	; 0xffffffd0
   37188:	str	r3, [fp, #-52]	; 0xffffffcc
   3718c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37190:	ldr	r3, [r3, #84]	; 0x54
   37194:	str	r3, [fp, #-16]
   37198:	ldr	r3, [fp, #-16]
   3719c:	ldr	r1, [r3, #24]
   371a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   371a4:	mov	r3, r2
   371a8:	lsl	r3, r3, #1
   371ac:	add	r3, r3, r2
   371b0:	lsl	r3, r3, #2
   371b4:	add	r3, r1, r3
   371b8:	str	r3, [fp, #-20]	; 0xffffffec
   371bc:	mov	r3, #0
   371c0:	str	r3, [fp, #-8]
   371c4:	b	37430 <__assert_fail@plt+0x261f0>
   371c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   371cc:	ldr	r2, [r3, #8]
   371d0:	ldr	r3, [fp, #-8]
   371d4:	lsl	r3, r3, #2
   371d8:	add	r3, r2, r3
   371dc:	ldr	r3, [r3]
   371e0:	str	r3, [fp, #-24]	; 0xffffffe8
   371e4:	ldr	r3, [fp, #-16]
   371e8:	ldr	r2, [r3]
   371ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   371f0:	lsl	r3, r3, #3
   371f4:	add	r3, r2, r3
   371f8:	ldrb	r3, [r3, #4]
   371fc:	cmp	r3, #8
   37200:	beq	37390 <__assert_fail@plt+0x26150>
   37204:	cmp	r3, #9
   37208:	beq	373cc <__assert_fail@plt+0x2618c>
   3720c:	cmp	r3, #4
   37210:	bne	37408 <__assert_fail@plt+0x261c8>
   37214:	ldr	r3, [fp, #4]
   37218:	cmn	r3, #1
   3721c:	beq	37410 <__assert_fail@plt+0x261d0>
   37220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37224:	ldr	r1, [r3, #116]	; 0x74
   37228:	ldr	r2, [fp, #4]
   3722c:	mov	r3, r2
   37230:	lsl	r3, r3, #1
   37234:	add	r3, r3, r2
   37238:	lsl	r3, r3, #3
   3723c:	add	r3, r1, r3
   37240:	str	r3, [fp, #-12]
   37244:	ldr	r3, [fp, #-12]
   37248:	ldr	r3, [r3]
   3724c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37250:	cmp	r2, r3
   37254:	bne	37368 <__assert_fail@plt+0x26128>
   37258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3725c:	cmp	r3, #31
   37260:	bgt	37280 <__assert_fail@plt+0x26040>
   37264:	ldr	r3, [fp, #-12]
   37268:	ldr	r2, [r3, #16]
   3726c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37270:	lsr	r3, r2, r3
   37274:	and	r3, r3, #1
   37278:	cmp	r3, #0
   3727c:	beq	37370 <__assert_fail@plt+0x26130>
   37280:	ldr	r3, [fp, #-16]
   37284:	ldr	r1, [r3, #20]
   37288:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3728c:	mov	r3, r2
   37290:	lsl	r3, r3, #1
   37294:	add	r3, r3, r2
   37298:	lsl	r3, r3, #2
   3729c:	add	r3, r1, r3
   372a0:	ldr	r3, [r3, #8]
   372a4:	ldr	r3, [r3]
   372a8:	str	r3, [fp, #-28]	; 0xffffffe4
   372ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   372b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   372b4:	cmp	r2, r3
   372b8:	bne	372dc <__assert_fail@plt+0x2609c>
   372bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   372c0:	and	r3, r3, #1
   372c4:	cmp	r3, #0
   372c8:	beq	372d4 <__assert_fail@plt+0x26094>
   372cc:	mvn	r3, #0
   372d0:	b	37450 <__assert_fail@plt+0x26210>
   372d4:	mov	r3, #0
   372d8:	b	37450 <__assert_fail@plt+0x26210>
   372dc:	ldr	r3, [fp, #4]
   372e0:	str	r3, [sp]
   372e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   372e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   372ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   372f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   372f4:	bl	3716c <__assert_fail@plt+0x25f2c>
   372f8:	str	r0, [fp, #-32]	; 0xffffffe0
   372fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37300:	cmn	r3, #1
   37304:	bne	37310 <__assert_fail@plt+0x260d0>
   37308:	mvn	r3, #0
   3730c:	b	37450 <__assert_fail@plt+0x26210>
   37310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37314:	cmp	r3, #0
   37318:	bne	37334 <__assert_fail@plt+0x260f4>
   3731c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37320:	and	r3, r3, #2
   37324:	cmp	r3, #0
   37328:	beq	37334 <__assert_fail@plt+0x260f4>
   3732c:	mov	r3, #0
   37330:	b	37450 <__assert_fail@plt+0x26210>
   37334:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37338:	cmp	r3, #31
   3733c:	bgt	37374 <__assert_fail@plt+0x26134>
   37340:	ldr	r3, [fp, #-12]
   37344:	ldr	r2, [r3, #16]
   37348:	mov	r1, #1
   3734c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37350:	lsl	r3, r1, r3
   37354:	mvn	r3, r3
   37358:	and	r2, r2, r3
   3735c:	ldr	r3, [fp, #-12]
   37360:	str	r2, [r3, #16]
   37364:	b	37374 <__assert_fail@plt+0x26134>
   37368:	nop	{0}
   3736c:	b	37374 <__assert_fail@plt+0x26134>
   37370:	nop	{0}
   37374:	ldr	r3, [fp, #-12]
   37378:	add	r2, r3, #24
   3737c:	str	r2, [fp, #-12]
   37380:	ldrb	r3, [r3, #20]
   37384:	cmp	r3, #0
   37388:	bne	37244 <__assert_fail@plt+0x26004>
   3738c:	b	37410 <__assert_fail@plt+0x261d0>
   37390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37394:	and	r3, r3, #1
   37398:	cmp	r3, #0
   3739c:	beq	37418 <__assert_fail@plt+0x261d8>
   373a0:	ldr	r3, [fp, #-16]
   373a4:	ldr	r2, [r3]
   373a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   373ac:	lsl	r3, r3, #3
   373b0:	add	r3, r2, r3
   373b4:	ldr	r3, [r3]
   373b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   373bc:	cmp	r2, r3
   373c0:	bne	37418 <__assert_fail@plt+0x261d8>
   373c4:	mvn	r3, #0
   373c8:	b	37450 <__assert_fail@plt+0x26210>
   373cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   373d0:	and	r3, r3, #2
   373d4:	cmp	r3, #0
   373d8:	beq	37420 <__assert_fail@plt+0x261e0>
   373dc:	ldr	r3, [fp, #-16]
   373e0:	ldr	r2, [r3]
   373e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   373e8:	lsl	r3, r3, #3
   373ec:	add	r3, r2, r3
   373f0:	ldr	r3, [r3]
   373f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   373f8:	cmp	r2, r3
   373fc:	bne	37420 <__assert_fail@plt+0x261e0>
   37400:	mov	r3, #0
   37404:	b	37450 <__assert_fail@plt+0x26210>
   37408:	nop	{0}
   3740c:	b	37424 <__assert_fail@plt+0x261e4>
   37410:	nop	{0}
   37414:	b	37424 <__assert_fail@plt+0x261e4>
   37418:	nop	{0}
   3741c:	b	37424 <__assert_fail@plt+0x261e4>
   37420:	nop	{0}
   37424:	ldr	r3, [fp, #-8]
   37428:	add	r3, r3, #1
   3742c:	str	r3, [fp, #-8]
   37430:	ldr	r3, [fp, #-20]	; 0xffffffec
   37434:	ldr	r3, [r3, #4]
   37438:	ldr	r2, [fp, #-8]
   3743c:	cmp	r2, r3
   37440:	blt	371c8 <__assert_fail@plt+0x25f88>
   37444:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37448:	asr	r3, r3, #1
   3744c:	and	r3, r3, #1
   37450:	mov	r0, r3
   37454:	sub	sp, fp, #4
   37458:	ldr	fp, [sp]
   3745c:	add	sp, sp, #4
   37460:	pop	{pc}		; (ldr pc, [sp], #4)
   37464:	str	fp, [sp, #-8]!
   37468:	str	lr, [sp, #4]
   3746c:	add	fp, sp, #4
   37470:	sub	sp, sp, #32
   37474:	str	r0, [fp, #-16]
   37478:	str	r1, [fp, #-20]	; 0xffffffec
   3747c:	str	r2, [fp, #-24]	; 0xffffffe8
   37480:	str	r3, [fp, #-28]	; 0xffffffe4
   37484:	ldr	r3, [fp, #-16]
   37488:	ldr	r1, [r3, #116]	; 0x74
   3748c:	ldr	r2, [fp, #-20]	; 0xffffffec
   37490:	mov	r3, r2
   37494:	lsl	r3, r3, #1
   37498:	add	r3, r3, r2
   3749c:	lsl	r3, r3, #3
   374a0:	add	r3, r1, r3
   374a4:	str	r3, [fp, #-8]
   374a8:	ldr	r3, [fp, #-8]
   374ac:	ldr	r3, [r3, #8]
   374b0:	ldr	r2, [fp, #4]
   374b4:	cmp	r2, r3
   374b8:	bge	374c4 <__assert_fail@plt+0x26284>
   374bc:	mvn	r3, #0
   374c0:	b	37560 <__assert_fail@plt+0x26320>
   374c4:	ldr	r3, [fp, #-8]
   374c8:	ldr	r3, [r3, #12]
   374cc:	ldr	r2, [fp, #4]
   374d0:	cmp	r2, r3
   374d4:	ble	374e0 <__assert_fail@plt+0x262a0>
   374d8:	mov	r3, #1
   374dc:	b	37560 <__assert_fail@plt+0x26320>
   374e0:	ldr	r3, [fp, #-8]
   374e4:	ldr	r3, [r3, #8]
   374e8:	ldr	r2, [fp, #4]
   374ec:	cmp	r2, r3
   374f0:	moveq	r3, #1
   374f4:	movne	r3, #0
   374f8:	uxtb	r3, r3
   374fc:	str	r3, [fp, #-12]
   37500:	ldr	r3, [fp, #-8]
   37504:	ldr	r3, [r3, #12]
   37508:	ldr	r2, [fp, #4]
   3750c:	cmp	r2, r3
   37510:	bne	3751c <__assert_fail@plt+0x262dc>
   37514:	mov	r3, #2
   37518:	b	37520 <__assert_fail@plt+0x262e0>
   3751c:	mov	r3, #0
   37520:	ldr	r2, [fp, #-12]
   37524:	orr	r3, r2, r3
   37528:	str	r3, [fp, #-12]
   3752c:	ldr	r3, [fp, #-12]
   37530:	cmp	r3, #0
   37534:	bne	37540 <__assert_fail@plt+0x26300>
   37538:	mov	r3, #0
   3753c:	b	37560 <__assert_fail@plt+0x26320>
   37540:	ldr	r3, [fp, #8]
   37544:	str	r3, [sp]
   37548:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3754c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37550:	ldr	r1, [fp, #-12]
   37554:	ldr	r0, [fp, #-16]
   37558:	bl	3716c <__assert_fail@plt+0x25f2c>
   3755c:	mov	r3, r0
   37560:	mov	r0, r3
   37564:	sub	sp, fp, #4
   37568:	ldr	fp, [sp]
   3756c:	add	sp, sp, #4
   37570:	pop	{pc}		; (ldr pc, [sp], #4)
   37574:	str	fp, [sp, #-8]!
   37578:	str	lr, [sp, #4]
   3757c:	add	fp, sp, #4
   37580:	sub	sp, sp, #64	; 0x40
   37584:	str	r0, [fp, #-56]	; 0xffffffc8
   37588:	str	r1, [fp, #-60]	; 0xffffffc4
   3758c:	str	r2, [fp, #-64]	; 0xffffffc0
   37590:	str	r3, [fp, #-68]	; 0xffffffbc
   37594:	mov	r3, #0
   37598:	str	r3, [fp, #-12]
   3759c:	b	3796c <__assert_fail@plt+0x2672c>
   375a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   375a4:	ldr	r2, [r3, #8]
   375a8:	ldr	r3, [fp, #-12]
   375ac:	lsl	r3, r3, #2
   375b0:	add	r3, r2, r3
   375b4:	ldr	r3, [r3]
   375b8:	mov	r2, r3
   375bc:	mov	r3, r2
   375c0:	lsl	r3, r3, #1
   375c4:	add	r3, r3, r2
   375c8:	lsl	r3, r3, #3
   375cc:	mov	r2, r3
   375d0:	ldr	r3, [fp, #4]
   375d4:	add	r3, r3, r2
   375d8:	str	r3, [fp, #-24]	; 0xffffffe8
   375dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   375e0:	ldr	r3, [r3, #8]
   375e4:	ldr	r2, [fp, #8]
   375e8:	cmp	r2, r3
   375ec:	ble	3795c <__assert_fail@plt+0x2671c>
   375f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   375f4:	ldr	r3, [r3, #4]
   375f8:	ldr	r2, [fp, #8]
   375fc:	cmp	r2, r3
   37600:	bgt	3795c <__assert_fail@plt+0x2671c>
   37604:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37608:	ldr	r2, [r3]
   3760c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37610:	ldr	r3, [r3]
   37614:	lsl	r3, r3, #3
   37618:	add	r3, r2, r3
   3761c:	ldr	r3, [r3]
   37620:	str	r3, [fp, #-28]	; 0xffffffe4
   37624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37628:	ldr	r3, [r3, #12]
   3762c:	ldr	r2, [fp, #8]
   37630:	cmp	r2, r3
   37634:	bne	37878 <__assert_fail@plt+0x26638>
   37638:	mvn	r3, #0
   3763c:	str	r3, [fp, #-16]
   37640:	mvn	r3, #0
   37644:	str	r3, [fp, #-20]	; 0xffffffec
   37648:	mov	r3, #0
   3764c:	str	r3, [fp, #-8]
   37650:	b	3770c <__assert_fail@plt+0x264cc>
   37654:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37658:	ldr	r2, [r3, #8]
   3765c:	ldr	r3, [fp, #-8]
   37660:	lsl	r3, r3, #2
   37664:	add	r3, r2, r3
   37668:	ldr	r3, [r3]
   3766c:	str	r3, [fp, #-32]	; 0xffffffe0
   37670:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37674:	ldr	r2, [r3]
   37678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3767c:	lsl	r3, r3, #3
   37680:	add	r3, r2, r3
   37684:	ldrb	r3, [r3, #4]
   37688:	str	r3, [fp, #-36]	; 0xffffffdc
   3768c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37690:	cmp	r3, #8
   37694:	bne	376c8 <__assert_fail@plt+0x26488>
   37698:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3769c:	ldr	r2, [r3]
   376a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   376a4:	lsl	r3, r3, #3
   376a8:	add	r3, r2, r3
   376ac:	ldr	r3, [r3]
   376b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   376b4:	cmp	r2, r3
   376b8:	bne	376c8 <__assert_fail@plt+0x26488>
   376bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   376c0:	str	r3, [fp, #-16]
   376c4:	b	37700 <__assert_fail@plt+0x264c0>
   376c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   376cc:	cmp	r3, #9
   376d0:	bne	37700 <__assert_fail@plt+0x264c0>
   376d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   376d8:	ldr	r2, [r3]
   376dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   376e0:	lsl	r3, r3, #3
   376e4:	add	r3, r2, r3
   376e8:	ldr	r3, [r3]
   376ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   376f0:	cmp	r2, r3
   376f4:	bne	37700 <__assert_fail@plt+0x264c0>
   376f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   376fc:	str	r3, [fp, #-20]	; 0xffffffec
   37700:	ldr	r3, [fp, #-8]
   37704:	add	r3, r3, #1
   37708:	str	r3, [fp, #-8]
   3770c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37710:	ldr	r3, [r3, #4]
   37714:	ldr	r2, [fp, #-8]
   37718:	cmp	r2, r3
   3771c:	blt	37654 <__assert_fail@plt+0x26414>
   37720:	ldr	r3, [fp, #-16]
   37724:	cmp	r3, #0
   37728:	blt	37768 <__assert_fail@plt+0x26528>
   3772c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37730:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37734:	ldr	r1, [fp, #-16]
   37738:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3773c:	bl	36d08 <__assert_fail@plt+0x25ac8>
   37740:	str	r0, [fp, #-40]	; 0xffffffd8
   37744:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37748:	cmp	r3, #0
   3774c:	movne	r3, #1
   37750:	moveq	r3, #0
   37754:	uxtb	r3, r3
   37758:	cmp	r3, #0
   3775c:	beq	37768 <__assert_fail@plt+0x26528>
   37760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37764:	b	37984 <__assert_fail@plt+0x26744>
   37768:	ldr	r3, [fp, #-20]	; 0xffffffec
   3776c:	cmp	r3, #0
   37770:	blt	37960 <__assert_fail@plt+0x26720>
   37774:	mov	r3, #0
   37778:	str	r3, [fp, #-8]
   3777c:	b	37860 <__assert_fail@plt+0x26620>
   37780:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37784:	ldr	r2, [r3, #8]
   37788:	ldr	r3, [fp, #-8]
   3778c:	lsl	r3, r3, #2
   37790:	add	r3, r2, r3
   37794:	ldr	r3, [r3]
   37798:	str	r3, [fp, #-44]	; 0xffffffd4
   3779c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   377a0:	ldr	r1, [r3, #28]
   377a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   377a8:	mov	r3, r2
   377ac:	lsl	r3, r3, #1
   377b0:	add	r3, r3, r2
   377b4:	lsl	r3, r3, #2
   377b8:	add	r3, r1, r3
   377bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   377c0:	mov	r0, r3
   377c4:	bl	28024 <__assert_fail@plt+0x16de4>
   377c8:	mov	r3, r0
   377cc:	cmp	r3, #0
   377d0:	bne	37854 <__assert_fail@plt+0x26614>
   377d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   377d8:	ldr	r1, [r3, #24]
   377dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   377e0:	mov	r3, r2
   377e4:	lsl	r3, r3, #1
   377e8:	add	r3, r3, r2
   377ec:	lsl	r3, r3, #2
   377f0:	add	r3, r1, r3
   377f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   377f8:	mov	r0, r3
   377fc:	bl	28024 <__assert_fail@plt+0x16de4>
   37800:	mov	r3, r0
   37804:	cmp	r3, #0
   37808:	bne	37854 <__assert_fail@plt+0x26614>
   3780c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37810:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37814:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37818:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3781c:	bl	36d08 <__assert_fail@plt+0x25ac8>
   37820:	str	r0, [fp, #-40]	; 0xffffffd8
   37824:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37828:	cmp	r3, #0
   3782c:	movne	r3, #1
   37830:	moveq	r3, #0
   37834:	uxtb	r3, r3
   37838:	cmp	r3, #0
   3783c:	beq	37848 <__assert_fail@plt+0x26608>
   37840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37844:	b	37984 <__assert_fail@plt+0x26744>
   37848:	ldr	r3, [fp, #-8]
   3784c:	sub	r3, r3, #1
   37850:	str	r3, [fp, #-8]
   37854:	ldr	r3, [fp, #-8]
   37858:	add	r3, r3, #1
   3785c:	str	r3, [fp, #-8]
   37860:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37864:	ldr	r3, [r3, #4]
   37868:	ldr	r2, [fp, #-8]
   3786c:	cmp	r2, r3
   37870:	blt	37780 <__assert_fail@plt+0x26540>
   37874:	b	37960 <__assert_fail@plt+0x26720>
   37878:	mov	r3, #0
   3787c:	str	r3, [fp, #-8]
   37880:	b	37944 <__assert_fail@plt+0x26704>
   37884:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37888:	ldr	r2, [r3, #8]
   3788c:	ldr	r3, [fp, #-8]
   37890:	lsl	r3, r3, #2
   37894:	add	r3, r2, r3
   37898:	ldr	r3, [r3]
   3789c:	str	r3, [fp, #-48]	; 0xffffffd0
   378a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   378a4:	ldr	r2, [r3]
   378a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   378ac:	lsl	r3, r3, #3
   378b0:	add	r3, r2, r3
   378b4:	ldrb	r3, [r3, #4]
   378b8:	str	r3, [fp, #-52]	; 0xffffffcc
   378bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   378c0:	cmp	r3, #9
   378c4:	beq	378d4 <__assert_fail@plt+0x26694>
   378c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   378cc:	cmp	r3, #8
   378d0:	bne	37938 <__assert_fail@plt+0x266f8>
   378d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   378d8:	ldr	r2, [r3]
   378dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   378e0:	lsl	r3, r3, #3
   378e4:	add	r3, r2, r3
   378e8:	ldr	r3, [r3]
   378ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   378f0:	cmp	r2, r3
   378f4:	bne	37934 <__assert_fail@plt+0x266f4>
   378f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   378fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37900:	ldr	r1, [fp, #-48]	; 0xffffffd0
   37904:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37908:	bl	36d08 <__assert_fail@plt+0x25ac8>
   3790c:	str	r0, [fp, #-40]	; 0xffffffd8
   37910:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37914:	cmp	r3, #0
   37918:	movne	r3, #1
   3791c:	moveq	r3, #0
   37920:	uxtb	r3, r3
   37924:	cmp	r3, #0
   37928:	beq	37938 <__assert_fail@plt+0x266f8>
   3792c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37930:	b	37984 <__assert_fail@plt+0x26744>
   37934:	nop	{0}
   37938:	ldr	r3, [fp, #-8]
   3793c:	add	r3, r3, #1
   37940:	str	r3, [fp, #-8]
   37944:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37948:	ldr	r3, [r3, #4]
   3794c:	ldr	r2, [fp, #-8]
   37950:	cmp	r2, r3
   37954:	blt	37884 <__assert_fail@plt+0x26644>
   37958:	b	37960 <__assert_fail@plt+0x26720>
   3795c:	nop	{0}
   37960:	ldr	r3, [fp, #-12]
   37964:	add	r3, r3, #1
   37968:	str	r3, [fp, #-12]
   3796c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37970:	ldr	r3, [r3, #4]
   37974:	ldr	r2, [fp, #-12]
   37978:	cmp	r2, r3
   3797c:	blt	375a0 <__assert_fail@plt+0x26360>
   37980:	mov	r3, #0
   37984:	mov	r0, r3
   37988:	sub	sp, fp, #4
   3798c:	ldr	fp, [sp]
   37990:	add	sp, sp, #4
   37994:	pop	{pc}		; (ldr pc, [sp], #4)
   37998:	str	fp, [sp, #-8]!
   3799c:	str	lr, [sp, #4]
   379a0:	add	fp, sp, #4
   379a4:	sub	sp, sp, #104	; 0x68
   379a8:	str	r0, [fp, #-88]	; 0xffffffa8
   379ac:	str	r1, [fp, #-92]	; 0xffffffa4
   379b0:	str	r2, [fp, #-96]	; 0xffffffa0
   379b4:	str	r3, [fp, #-100]	; 0xffffff9c
   379b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   379bc:	ldr	r3, [r3, #84]	; 0x54
   379c0:	str	r3, [fp, #-24]	; 0xffffffe8
   379c4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   379c8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   379cc:	bl	3cf84 <__assert_fail@plt+0x2bd44>
   379d0:	str	r0, [fp, #-28]	; 0xffffffe4
   379d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   379d8:	cmn	r3, #1
   379dc:	bne	379e8 <__assert_fail@plt+0x267a8>
   379e0:	mov	r3, #0
   379e4:	b	37e3c <__assert_fail@plt+0x26bfc>
   379e8:	mov	r3, #0
   379ec:	str	r3, [fp, #-84]	; 0xffffffac
   379f0:	mov	r3, #0
   379f4:	str	r3, [fp, #-12]
   379f8:	b	37dec <__assert_fail@plt+0x26bac>
   379fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   37a00:	ldr	r2, [r3, #8]
   37a04:	ldr	r3, [fp, #-12]
   37a08:	lsl	r3, r3, #2
   37a0c:	add	r3, r2, r3
   37a10:	ldr	r3, [r3]
   37a14:	str	r3, [fp, #-32]	; 0xffffffe0
   37a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37a1c:	ldr	r2, [r3]
   37a20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37a24:	lsl	r3, r3, #3
   37a28:	add	r3, r2, r3
   37a2c:	ldrb	r3, [r3, #4]
   37a30:	str	r3, [fp, #-36]	; 0xffffffdc
   37a34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37a38:	ldr	r3, [r3, #8]
   37a3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37a40:	cmp	r2, r3
   37a44:	bne	37a5c <__assert_fail@plt+0x2681c>
   37a48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37a4c:	ldr	r3, [r3, #12]
   37a50:	ldr	r2, [fp, #-96]	; 0xffffffa0
   37a54:	cmp	r2, r3
   37a58:	beq	37dd4 <__assert_fail@plt+0x26b94>
   37a5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37a60:	cmp	r3, #4
   37a64:	bne	37ddc <__assert_fail@plt+0x26b9c>
   37a68:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37a6c:	ldr	r1, [r3, #116]	; 0x74
   37a70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   37a74:	mov	r3, r2
   37a78:	lsl	r3, r3, #1
   37a7c:	add	r3, r3, r2
   37a80:	lsl	r3, r3, #3
   37a84:	add	r3, r1, r3
   37a88:	str	r3, [fp, #-20]	; 0xffffffec
   37a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37a90:	str	r3, [fp, #-16]
   37a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   37a98:	ldr	r3, [r3]
   37a9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37aa0:	cmp	r2, r3
   37aa4:	bne	37da0 <__assert_fail@plt+0x26b60>
   37aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   37aac:	ldr	r2, [r3, #12]
   37ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   37ab4:	ldr	r3, [r3, #8]
   37ab8:	sub	r3, r2, r3
   37abc:	str	r3, [fp, #-40]	; 0xffffffd8
   37ac0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   37ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37ac8:	add	r3, r2, r3
   37acc:	str	r3, [fp, #-44]	; 0xffffffd4
   37ad0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37ad4:	cmp	r3, #0
   37ad8:	beq	37af8 <__assert_fail@plt+0x268b8>
   37adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37ae0:	ldr	r2, [r3, #12]
   37ae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37ae8:	lsl	r3, r3, #2
   37aec:	add	r3, r2, r3
   37af0:	ldr	r3, [r3]
   37af4:	b	37b20 <__assert_fail@plt+0x268e0>
   37af8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37afc:	ldr	r1, [r3, #20]
   37b00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37b04:	mov	r3, r2
   37b08:	lsl	r3, r3, #1
   37b0c:	add	r3, r3, r2
   37b10:	lsl	r3, r3, #2
   37b14:	add	r3, r1, r3
   37b18:	ldr	r3, [r3, #8]
   37b1c:	ldr	r3, [r3]
   37b20:	str	r3, [fp, #-48]	; 0xffffffd0
   37b24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37b28:	ldr	r3, [r3, #12]
   37b2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   37b30:	cmp	r2, r3
   37b34:	bgt	37da8 <__assert_fail@plt+0x26b68>
   37b38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37b3c:	ldr	r2, [r3]
   37b40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37b44:	lsl	r3, r3, #2
   37b48:	add	r3, r2, r3
   37b4c:	ldr	r3, [r3]
   37b50:	cmp	r3, #0
   37b54:	beq	37da8 <__assert_fail@plt+0x26b68>
   37b58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37b5c:	ldr	r2, [r3]
   37b60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37b64:	lsl	r3, r3, #2
   37b68:	add	r3, r2, r3
   37b6c:	ldr	r3, [r3]
   37b70:	cmp	r3, #0
   37b74:	beq	37da8 <__assert_fail@plt+0x26b68>
   37b78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37b7c:	ldr	r2, [r3]
   37b80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37b84:	lsl	r3, r3, #2
   37b88:	add	r3, r2, r3
   37b8c:	ldr	r3, [r3]
   37b90:	add	r3, r3, #4
   37b94:	ldr	r1, [fp, #-48]	; 0xffffffd0
   37b98:	mov	r0, r3
   37b9c:	bl	28024 <__assert_fail@plt+0x16de4>
   37ba0:	mov	r3, r0
   37ba4:	cmp	r3, #0
   37ba8:	beq	37da8 <__assert_fail@plt+0x26b68>
   37bac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37bb0:	add	r1, r3, #16
   37bb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37bb8:	str	r3, [sp, #4]
   37bbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37bc0:	str	r3, [sp]
   37bc4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   37bc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37bcc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37bd0:	bl	36fec <__assert_fail@plt+0x25dac>
   37bd4:	mov	r3, r0
   37bd8:	cmp	r3, #0
   37bdc:	bne	37da8 <__assert_fail@plt+0x26b68>
   37be0:	ldr	r3, [fp, #-84]	; 0xffffffac
   37be4:	cmp	r3, #0
   37be8:	bne	37c50 <__assert_fail@plt+0x26a10>
   37bec:	ldr	r2, [fp, #-92]	; 0xffffffa4
   37bf0:	sub	r3, fp, #84	; 0x54
   37bf4:	ldrd	r0, [r2]
   37bf8:	strd	r0, [r3]
   37bfc:	ldrd	r0, [r2, #8]
   37c00:	strd	r0, [r3, #8]
   37c04:	ldrd	r0, [r2, #16]
   37c08:	strd	r0, [r3, #16]
   37c0c:	ldr	r2, [r2, #24]
   37c10:	str	r2, [r3, #24]
   37c14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37c18:	add	r2, r3, #16
   37c1c:	sub	r3, fp, #84	; 0x54
   37c20:	add	r3, r3, #16
   37c24:	mov	r1, r2
   37c28:	mov	r0, r3
   37c2c:	bl	26e70 <__assert_fail@plt+0x15c30>
   37c30:	str	r0, [fp, #-8]
   37c34:	ldr	r3, [fp, #-8]
   37c38:	cmp	r3, #0
   37c3c:	movne	r3, #1
   37c40:	moveq	r3, #0
   37c44:	uxtb	r3, r3
   37c48:	cmp	r3, #0
   37c4c:	bne	37e0c <__assert_fail@plt+0x26bcc>
   37c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37c54:	str	r3, [fp, #-76]	; 0xffffffb4
   37c58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   37c5c:	str	r3, [fp, #-72]	; 0xffffffb8
   37c60:	sub	r3, fp, #84	; 0x54
   37c64:	add	r3, r3, #16
   37c68:	ldr	r1, [fp, #-16]
   37c6c:	mov	r0, r3
   37c70:	bl	27bfc <__assert_fail@plt+0x169bc>
   37c74:	mov	r3, r0
   37c78:	strb	r3, [fp, #-49]	; 0xffffffcf
   37c7c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   37c80:	eor	r3, r3, #1
   37c84:	uxtb	r3, r3
   37c88:	cmp	r3, #0
   37c8c:	beq	37c9c <__assert_fail@plt+0x26a5c>
   37c90:	mov	r3, #12
   37c94:	str	r3, [fp, #-8]
   37c98:	b	37e20 <__assert_fail@plt+0x26be0>
   37c9c:	ldr	r2, [fp, #-84]	; 0xffffffac
   37ca0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   37ca4:	lsl	r3, r3, #2
   37ca8:	add	r3, r2, r3
   37cac:	ldr	r3, [r3]
   37cb0:	str	r3, [fp, #-56]	; 0xffffffc8
   37cb4:	sub	r3, fp, #84	; 0x54
   37cb8:	mov	r1, r3
   37cbc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37cc0:	bl	361bc <__assert_fail@plt+0x24f7c>
   37cc4:	str	r0, [fp, #-8]
   37cc8:	ldr	r3, [fp, #-8]
   37ccc:	cmp	r3, #0
   37cd0:	movne	r3, #1
   37cd4:	moveq	r3, #0
   37cd8:	uxtb	r3, r3
   37cdc:	cmp	r3, #0
   37ce0:	bne	37e14 <__assert_fail@plt+0x26bd4>
   37ce4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37ce8:	ldr	r3, [r3, #4]
   37cec:	cmp	r3, #0
   37cf0:	beq	37d30 <__assert_fail@plt+0x26af0>
   37cf4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37cf8:	ldr	r1, [r3, #4]
   37cfc:	ldr	r2, [fp, #-84]	; 0xffffffac
   37d00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   37d04:	add	r3, r3, #1
   37d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d0c:	bl	367a4 <__assert_fail@plt+0x25564>
   37d10:	str	r0, [fp, #-8]
   37d14:	ldr	r3, [fp, #-8]
   37d18:	cmp	r3, #0
   37d1c:	movne	r3, #1
   37d20:	moveq	r3, #0
   37d24:	uxtb	r3, r3
   37d28:	cmp	r3, #0
   37d2c:	bne	37e1c <__assert_fail@plt+0x26bdc>
   37d30:	ldr	r2, [fp, #-84]	; 0xffffffac
   37d34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   37d38:	lsl	r3, r3, #2
   37d3c:	add	r3, r2, r3
   37d40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37d44:	str	r2, [r3]
   37d48:	sub	r3, fp, #84	; 0x54
   37d4c:	add	r3, r3, #16
   37d50:	ldr	r1, [fp, #-16]
   37d54:	mov	r0, r3
   37d58:	bl	28024 <__assert_fail@plt+0x16de4>
   37d5c:	mov	r3, r0
   37d60:	sub	r2, r3, #1
   37d64:	sub	r3, fp, #84	; 0x54
   37d68:	add	r3, r3, #16
   37d6c:	mov	r1, r2
   37d70:	mov	r0, r3
   37d74:	bl	28110 <__assert_fail@plt+0x16ed0>
   37d78:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37d7c:	ldr	r1, [r3, #116]	; 0x74
   37d80:	ldr	r2, [fp, #-16]
   37d84:	mov	r3, r2
   37d88:	lsl	r3, r3, #1
   37d8c:	add	r3, r3, r2
   37d90:	lsl	r3, r3, #3
   37d94:	add	r3, r1, r3
   37d98:	str	r3, [fp, #-20]	; 0xffffffec
   37d9c:	b	37dac <__assert_fail@plt+0x26b6c>
   37da0:	nop	{0}
   37da4:	b	37dac <__assert_fail@plt+0x26b6c>
   37da8:	nop	{0}
   37dac:	ldr	r3, [fp, #-16]
   37db0:	add	r3, r3, #1
   37db4:	str	r3, [fp, #-16]
   37db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   37dbc:	add	r2, r3, #24
   37dc0:	str	r2, [fp, #-20]	; 0xffffffec
   37dc4:	ldrb	r3, [r3, #20]
   37dc8:	cmp	r3, #0
   37dcc:	bne	37a94 <__assert_fail@plt+0x26854>
   37dd0:	b	37de0 <__assert_fail@plt+0x26ba0>
   37dd4:	nop	{0}
   37dd8:	b	37de0 <__assert_fail@plt+0x26ba0>
   37ddc:	nop	{0}
   37de0:	ldr	r3, [fp, #-12]
   37de4:	add	r3, r3, #1
   37de8:	str	r3, [fp, #-12]
   37dec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   37df0:	ldr	r3, [r3, #4]
   37df4:	ldr	r2, [fp, #-12]
   37df8:	cmp	r2, r3
   37dfc:	blt	379fc <__assert_fail@plt+0x267bc>
   37e00:	mov	r3, #0
   37e04:	str	r3, [fp, #-8]
   37e08:	b	37e20 <__assert_fail@plt+0x26be0>
   37e0c:	nop	{0}
   37e10:	b	37e20 <__assert_fail@plt+0x26be0>
   37e14:	nop	{0}
   37e18:	b	37e20 <__assert_fail@plt+0x26be0>
   37e1c:	nop	{0}
   37e20:	ldr	r3, [fp, #-84]	; 0xffffffac
   37e24:	cmp	r3, #0
   37e28:	beq	37e38 <__assert_fail@plt+0x26bf8>
   37e2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37e30:	mov	r0, r3
   37e34:	bl	13798 <__assert_fail@plt+0x2558>
   37e38:	ldr	r3, [fp, #-8]
   37e3c:	mov	r0, r3
   37e40:	sub	sp, fp, #4
   37e44:	ldr	fp, [sp]
   37e48:	add	sp, sp, #4
   37e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   37e50:	str	fp, [sp, #-8]!
   37e54:	str	lr, [sp, #4]
   37e58:	add	fp, sp, #4
   37e5c:	sub	sp, sp, #24
   37e60:	str	r0, [fp, #-16]
   37e64:	str	r1, [fp, #-20]	; 0xffffffec
   37e68:	str	r2, [fp, #-24]	; 0xffffffe8
   37e6c:	str	r3, [fp, #-28]	; 0xffffffe4
   37e70:	ldr	r3, [fp, #-16]
   37e74:	ldr	r3, [r3, #84]	; 0x54
   37e78:	str	r3, [fp, #-12]
   37e7c:	ldr	r2, [fp, #-16]
   37e80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37e88:	ldr	r0, [fp, #-12]
   37e8c:	bl	3c018 <__assert_fail@plt+0x2add8>
   37e90:	str	r0, [fp, #-8]
   37e94:	ldr	r3, [fp, #-8]
   37e98:	cmp	r3, #0
   37e9c:	ble	37f38 <__assert_fail@plt+0x26cf8>
   37ea0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   37ea4:	ldr	r3, [fp, #-8]
   37ea8:	add	r3, r2, r3
   37eac:	ldr	r2, [fp, #4]
   37eb0:	cmp	r2, r3
   37eb4:	blt	37f38 <__assert_fail@plt+0x26cf8>
   37eb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   37ebc:	ldr	r2, [r3]
   37ec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37ec4:	ldr	r3, [fp, #-8]
   37ec8:	add	r3, r1, r3
   37ecc:	lsl	r3, r3, #2
   37ed0:	add	r3, r2, r3
   37ed4:	ldr	r3, [r3]
   37ed8:	cmp	r3, #0
   37edc:	beq	37f30 <__assert_fail@plt+0x26cf0>
   37ee0:	ldr	r3, [fp, #-20]	; 0xffffffec
   37ee4:	ldr	r2, [r3]
   37ee8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37eec:	ldr	r3, [fp, #-8]
   37ef0:	add	r3, r1, r3
   37ef4:	lsl	r3, r3, #2
   37ef8:	add	r3, r2, r3
   37efc:	ldr	r3, [r3]
   37f00:	add	r0, r3, #4
   37f04:	ldr	r3, [fp, #-12]
   37f08:	ldr	r2, [r3, #12]
   37f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37f10:	lsl	r3, r3, #2
   37f14:	add	r3, r2, r3
   37f18:	ldr	r3, [r3]
   37f1c:	mov	r1, r3
   37f20:	bl	28024 <__assert_fail@plt+0x16de4>
   37f24:	mov	r3, r0
   37f28:	cmp	r3, #0
   37f2c:	bne	37f38 <__assert_fail@plt+0x26cf8>
   37f30:	mov	r3, #0
   37f34:	str	r3, [fp, #-8]
   37f38:	ldr	r3, [fp, #-8]
   37f3c:	mov	r0, r3
   37f40:	sub	sp, fp, #4
   37f44:	ldr	fp, [sp]
   37f48:	add	sp, sp, #4
   37f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   37f50:	str	fp, [sp, #-8]!
   37f54:	str	lr, [sp, #4]
   37f58:	add	fp, sp, #4
   37f5c:	sub	sp, sp, #32
   37f60:	str	r0, [fp, #-24]	; 0xffffffe8
   37f64:	str	r1, [fp, #-28]	; 0xffffffe4
   37f68:	str	r2, [fp, #-32]	; 0xffffffe0
   37f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37f70:	ldrb	r3, [r3, #52]	; 0x34
   37f74:	ubfx	r3, r3, #5, #1
   37f78:	uxtb	r3, r3
   37f7c:	cmp	r3, #0
   37f80:	beq	37fc4 <__assert_fail@plt+0x26d84>
   37f84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   37f88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37f8c:	bl	385e0 <__assert_fail@plt+0x273a0>
   37f90:	mov	r2, r0
   37f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37f98:	str	r2, [r3]
   37f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37fa0:	ldr	r3, [r3]
   37fa4:	cmp	r3, #0
   37fa8:	movne	r3, #1
   37fac:	moveq	r3, #0
   37fb0:	uxtb	r3, r3
   37fb4:	cmp	r3, #0
   37fb8:	beq	37fc4 <__assert_fail@plt+0x26d84>
   37fbc:	mov	r3, #0
   37fc0:	b	380f4 <__assert_fail@plt+0x26eb4>
   37fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37fc8:	ldr	r2, [r3, #4]
   37fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37fd0:	ldr	r3, [r3, #40]	; 0x28
   37fd4:	add	r0, r3, #1
   37fd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37fdc:	str	r0, [r1, #40]	; 0x28
   37fe0:	add	r3, r2, r3
   37fe4:	ldrb	r3, [r3]
   37fe8:	strb	r3, [fp, #-5]
   37fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37ff0:	ldr	r3, [r3, #44]	; 0x2c
   37ff4:	str	r3, [fp, #-12]
   37ff8:	ldr	r3, [fp, #-12]
   37ffc:	cmp	r3, #0
   38000:	movne	r3, #1
   38004:	moveq	r3, #0
   38008:	uxtb	r3, r3
   3800c:	cmp	r3, #0
   38010:	beq	3802c <__assert_fail@plt+0x26dec>
   38014:	ldrb	r3, [fp, #-5]
   38018:	lsl	r3, r3, #2
   3801c:	ldr	r2, [fp, #-12]
   38020:	add	r3, r2, r3
   38024:	ldr	r3, [r3]
   38028:	b	380f4 <__assert_fail@plt+0x26eb4>
   3802c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38030:	ldr	r3, [r3, #48]	; 0x30
   38034:	str	r3, [fp, #-12]
   38038:	ldr	r3, [fp, #-12]
   3803c:	cmp	r3, #0
   38040:	movne	r3, #1
   38044:	moveq	r3, #0
   38048:	uxtb	r3, r3
   3804c:	cmp	r3, #0
   38050:	beq	380bc <__assert_fail@plt+0x26e7c>
   38054:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3805c:	ldr	r3, [r3, #40]	; 0x28
   38060:	sub	r1, r3, #1
   38064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38068:	ldr	r3, [r3, #88]	; 0x58
   3806c:	mov	r2, r3
   38070:	bl	26a20 <__assert_fail@plt+0x157e0>
   38074:	str	r0, [fp, #-16]
   38078:	ldr	r3, [fp, #-16]
   3807c:	and	r3, r3, #1
   38080:	cmp	r3, #0
   38084:	beq	380a4 <__assert_fail@plt+0x26e64>
   38088:	ldrb	r3, [fp, #-5]
   3808c:	add	r3, r3, #256	; 0x100
   38090:	lsl	r3, r3, #2
   38094:	ldr	r2, [fp, #-12]
   38098:	add	r3, r2, r3
   3809c:	ldr	r3, [r3]
   380a0:	b	380f4 <__assert_fail@plt+0x26eb4>
   380a4:	ldrb	r3, [fp, #-5]
   380a8:	lsl	r3, r3, #2
   380ac:	ldr	r2, [fp, #-12]
   380b0:	add	r3, r2, r3
   380b4:	ldr	r3, [r3]
   380b8:	b	380f4 <__assert_fail@plt+0x26eb4>
   380bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   380c0:	ldr	r3, [r3, #84]	; 0x54
   380c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   380c8:	mov	r0, r3
   380cc:	bl	3ab2c <__assert_fail@plt+0x298ec>
   380d0:	mov	r3, r0
   380d4:	eor	r3, r3, #1
   380d8:	uxtb	r3, r3
   380dc:	cmp	r3, #0
   380e0:	beq	37fec <__assert_fail@plt+0x26dac>
   380e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   380e8:	mov	r2, #12
   380ec:	str	r2, [r3]
   380f0:	mov	r3, #0
   380f4:	mov	r0, r3
   380f8:	sub	sp, fp, #4
   380fc:	ldr	fp, [sp]
   38100:	add	sp, sp, #4
   38104:	pop	{pc}		; (ldr pc, [sp], #4)
   38108:	str	r4, [sp, #-12]!
   3810c:	str	fp, [sp, #4]
   38110:	str	lr, [sp, #8]
   38114:	add	fp, sp, #8
   38118:	sub	sp, sp, #60	; 0x3c
   3811c:	str	r0, [fp, #-56]	; 0xffffffc8
   38120:	str	r1, [fp, #-60]	; 0xffffffc4
   38124:	str	r2, [fp, #-64]	; 0xffffffc0
   38128:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3812c:	ldr	r3, [r3, #84]	; 0x54
   38130:	str	r3, [fp, #-20]	; 0xffffffec
   38134:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38138:	ldr	r3, [r3, #40]	; 0x28
   3813c:	str	r3, [fp, #-24]	; 0xffffffe8
   38140:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38144:	ldr	r3, [r3, #104]	; 0x68
   38148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3814c:	cmp	r2, r3
   38150:	ble	38180 <__assert_fail@plt+0x26f40>
   38154:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38158:	ldr	r2, [r3, #100]	; 0x64
   3815c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38160:	lsl	r3, r3, #2
   38164:	add	r3, r2, r3
   38168:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3816c:	str	r2, [r3]
   38170:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38174:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38178:	str	r2, [r3, #104]	; 0x68
   3817c:	b	382e0 <__assert_fail@plt+0x270a0>
   38180:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38184:	ldr	r2, [r3, #100]	; 0x64
   38188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3818c:	lsl	r3, r3, #2
   38190:	add	r3, r2, r3
   38194:	ldr	r3, [r3]
   38198:	cmp	r3, #0
   3819c:	bne	381c0 <__assert_fail@plt+0x26f80>
   381a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   381a4:	ldr	r2, [r3, #100]	; 0x64
   381a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   381ac:	lsl	r3, r3, #2
   381b0:	add	r3, r2, r3
   381b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   381b8:	str	r2, [r3]
   381bc:	b	382e0 <__assert_fail@plt+0x270a0>
   381c0:	mov	r3, #0
   381c4:	str	r3, [fp, #-16]
   381c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   381cc:	ldr	r2, [r3, #100]	; 0x64
   381d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   381d4:	lsl	r3, r3, #2
   381d8:	add	r3, r2, r3
   381dc:	ldr	r3, [r3]
   381e0:	str	r3, [fp, #-28]	; 0xffffffe4
   381e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   381e8:	ldr	r3, [r3, #40]	; 0x28
   381ec:	str	r3, [fp, #-32]	; 0xffffffe0
   381f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   381f4:	cmp	r3, #0
   381f8:	beq	38250 <__assert_fail@plt+0x27010>
   381fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38200:	ldr	r3, [r3, #40]	; 0x28
   38204:	str	r3, [fp, #-16]
   38208:	sub	r3, fp, #48	; 0x30
   3820c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38210:	ldr	r1, [fp, #-16]
   38214:	mov	r0, r3
   38218:	bl	27414 <__assert_fail@plt+0x161d4>
   3821c:	mov	r2, r0
   38220:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38224:	str	r2, [r3]
   38228:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3822c:	ldr	r3, [r3]
   38230:	cmp	r3, #0
   38234:	movne	r3, #1
   38238:	moveq	r3, #0
   3823c:	uxtb	r3, r3
   38240:	cmp	r3, #0
   38244:	beq	3826c <__assert_fail@plt+0x2702c>
   38248:	mov	r3, #0
   3824c:	b	383c8 <__assert_fail@plt+0x27188>
   38250:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38254:	sub	r1, fp, #48	; 0x30
   38258:	mov	r0, r3
   3825c:	ldrd	r2, [r0]
   38260:	strd	r2, [r1]
   38264:	ldr	r3, [r0, #8]
   38268:	str	r3, [r1, #8]
   3826c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   38270:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38274:	ldr	r3, [r3, #40]	; 0x28
   38278:	sub	r1, r3, #1
   3827c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38280:	ldr	r3, [r3, #88]	; 0x58
   38284:	mov	r2, r3
   38288:	bl	26a20 <__assert_fail@plt+0x157e0>
   3828c:	str	r0, [fp, #-36]	; 0xffffffdc
   38290:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38294:	ldr	r2, [r3, #100]	; 0x64
   38298:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3829c:	lsl	r3, r3, #2
   382a0:	add	r4, r2, r3
   382a4:	sub	r2, fp, #48	; 0x30
   382a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   382ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   382b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   382b4:	bl	287b4 <__assert_fail@plt+0x17574>
   382b8:	mov	r3, r0
   382bc:	str	r3, [r4]
   382c0:	ldr	r3, [r4]
   382c4:	str	r3, [fp, #-64]	; 0xffffffc0
   382c8:	ldr	r3, [fp, #-16]
   382cc:	cmp	r3, #0
   382d0:	beq	382e0 <__assert_fail@plt+0x270a0>
   382d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   382d8:	mov	r0, r3
   382dc:	bl	13798 <__assert_fail@plt+0x2558>
   382e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   382e4:	ldr	r3, [r3, #76]	; 0x4c
   382e8:	cmp	r3, #0
   382ec:	beq	383c4 <__assert_fail@plt+0x27184>
   382f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   382f4:	cmp	r3, #0
   382f8:	beq	383c4 <__assert_fail@plt+0x27184>
   382fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38300:	add	r3, r3, #4
   38304:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38308:	mov	r1, r3
   3830c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   38310:	bl	384b0 <__assert_fail@plt+0x27270>
   38314:	mov	r2, r0
   38318:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3831c:	str	r2, [r3]
   38320:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38324:	ldr	r3, [r3]
   38328:	cmp	r3, #0
   3832c:	movne	r3, #1
   38330:	moveq	r3, #0
   38334:	uxtb	r3, r3
   38338:	cmp	r3, #0
   3833c:	beq	38348 <__assert_fail@plt+0x27108>
   38340:	mov	r3, #0
   38344:	b	383c8 <__assert_fail@plt+0x27188>
   38348:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3834c:	ldrb	r3, [r3, #52]	; 0x34
   38350:	and	r3, r3, #64	; 0x40
   38354:	uxtb	r3, r3
   38358:	cmp	r3, #0
   3835c:	beq	383c4 <__assert_fail@plt+0x27184>
   38360:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38364:	add	r3, r3, #4
   38368:	mov	r1, r3
   3836c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   38370:	bl	38a18 <__assert_fail@plt+0x277d8>
   38374:	mov	r2, r0
   38378:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3837c:	str	r2, [r3]
   38380:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38384:	ldr	r3, [r3]
   38388:	cmp	r3, #0
   3838c:	movne	r3, #1
   38390:	moveq	r3, #0
   38394:	uxtb	r3, r3
   38398:	cmp	r3, #0
   3839c:	beq	383a8 <__assert_fail@plt+0x27168>
   383a0:	mov	r3, #0
   383a4:	b	383c8 <__assert_fail@plt+0x27188>
   383a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   383ac:	ldr	r2, [r3, #100]	; 0x64
   383b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   383b4:	lsl	r3, r3, #2
   383b8:	add	r3, r2, r3
   383bc:	ldr	r3, [r3]
   383c0:	str	r3, [fp, #-64]	; 0xffffffc0
   383c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   383c8:	mov	r0, r3
   383cc:	sub	sp, fp, #8
   383d0:	ldr	r4, [sp]
   383d4:	ldr	fp, [sp, #4]
   383d8:	add	sp, sp, #8
   383dc:	pop	{pc}		; (ldr pc, [sp], #4)
   383e0:	str	fp, [sp, #-8]!
   383e4:	str	lr, [sp, #4]
   383e8:	add	fp, sp, #4
   383ec:	sub	sp, sp, #24
   383f0:	str	r0, [fp, #-24]	; 0xffffffe8
   383f4:	str	r1, [fp, #-28]	; 0xffffffe4
   383f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   383fc:	ldr	r3, [r3, #104]	; 0x68
   38400:	str	r3, [fp, #-12]
   38404:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38408:	ldr	r3, [r3, #40]	; 0x28
   3840c:	str	r3, [fp, #-8]
   38410:	ldr	r3, [fp, #-8]
   38414:	add	r3, r3, #1
   38418:	str	r3, [fp, #-8]
   3841c:	ldr	r2, [fp, #-8]
   38420:	ldr	r3, [fp, #-12]
   38424:	cmp	r2, r3
   38428:	ble	38434 <__assert_fail@plt+0x271f4>
   3842c:	mov	r3, #0
   38430:	b	3849c <__assert_fail@plt+0x2725c>
   38434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38438:	ldr	r3, [r3, #40]	; 0x28
   3843c:	add	r2, r3, #1
   38440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38444:	str	r2, [r3, #40]	; 0x28
   38448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3844c:	ldr	r2, [r3, #100]	; 0x64
   38450:	ldr	r3, [fp, #-8]
   38454:	lsl	r3, r3, #2
   38458:	add	r3, r2, r3
   3845c:	ldr	r3, [r3]
   38460:	cmp	r3, #0
   38464:	beq	38410 <__assert_fail@plt+0x271d0>
   38468:	mov	r2, #0
   3846c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38474:	bl	38108 <__assert_fail@plt+0x26ec8>
   38478:	str	r0, [fp, #-16]
   3847c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38480:	ldr	r3, [r3]
   38484:	cmp	r3, #0
   38488:	bne	38498 <__assert_fail@plt+0x27258>
   3848c:	ldr	r3, [fp, #-16]
   38490:	cmp	r3, #0
   38494:	beq	383f8 <__assert_fail@plt+0x271b8>
   38498:	ldr	r3, [fp, #-16]
   3849c:	mov	r0, r3
   384a0:	sub	sp, fp, #4
   384a4:	ldr	fp, [sp]
   384a8:	add	sp, sp, #4
   384ac:	pop	{pc}		; (ldr pc, [sp], #4)
   384b0:	str	fp, [sp, #-8]!
   384b4:	str	lr, [sp, #4]
   384b8:	add	fp, sp, #4
   384bc:	sub	sp, sp, #32
   384c0:	str	r0, [fp, #-24]	; 0xffffffe8
   384c4:	str	r1, [fp, #-28]	; 0xffffffe4
   384c8:	str	r2, [fp, #-32]	; 0xffffffe0
   384cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   384d0:	ldr	r3, [r3, #84]	; 0x54
   384d4:	str	r3, [fp, #-12]
   384d8:	mov	r3, #0
   384dc:	str	r3, [fp, #-8]
   384e0:	b	385b4 <__assert_fail@plt+0x27374>
   384e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   384e8:	ldr	r2, [r3, #8]
   384ec:	ldr	r3, [fp, #-8]
   384f0:	lsl	r3, r3, #2
   384f4:	add	r3, r2, r3
   384f8:	ldr	r3, [r3]
   384fc:	str	r3, [fp, #-16]
   38500:	ldr	r3, [fp, #-12]
   38504:	ldr	r2, [r3]
   38508:	ldr	r3, [fp, #-16]
   3850c:	lsl	r3, r3, #3
   38510:	add	r3, r2, r3
   38514:	ldrb	r3, [r3, #4]
   38518:	cmp	r3, #8
   3851c:	bne	385a8 <__assert_fail@plt+0x27368>
   38520:	ldr	r3, [fp, #-12]
   38524:	ldr	r2, [r3]
   38528:	ldr	r3, [fp, #-16]
   3852c:	lsl	r3, r3, #3
   38530:	add	r3, r2, r3
   38534:	ldr	r3, [r3]
   38538:	cmp	r3, #31
   3853c:	bgt	385a8 <__assert_fail@plt+0x27368>
   38540:	ldr	r3, [fp, #-12]
   38544:	ldr	r2, [r3, #80]	; 0x50
   38548:	ldr	r3, [fp, #-12]
   3854c:	ldr	r1, [r3]
   38550:	ldr	r3, [fp, #-16]
   38554:	lsl	r3, r3, #3
   38558:	add	r3, r1, r3
   3855c:	ldr	r3, [r3]
   38560:	lsr	r3, r2, r3
   38564:	and	r3, r3, #1
   38568:	cmp	r3, #0
   3856c:	beq	385a8 <__assert_fail@plt+0x27368>
   38570:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38574:	ldr	r1, [fp, #-16]
   38578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3857c:	bl	3d088 <__assert_fail@plt+0x2be48>
   38580:	str	r0, [fp, #-20]	; 0xffffffec
   38584:	ldr	r3, [fp, #-20]	; 0xffffffec
   38588:	cmp	r3, #0
   3858c:	movne	r3, #1
   38590:	moveq	r3, #0
   38594:	uxtb	r3, r3
   38598:	cmp	r3, #0
   3859c:	beq	385a8 <__assert_fail@plt+0x27368>
   385a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   385a4:	b	385cc <__assert_fail@plt+0x2738c>
   385a8:	ldr	r3, [fp, #-8]
   385ac:	add	r3, r3, #1
   385b0:	str	r3, [fp, #-8]
   385b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   385b8:	ldr	r3, [r3, #4]
   385bc:	ldr	r2, [fp, #-8]
   385c0:	cmp	r2, r3
   385c4:	blt	384e4 <__assert_fail@plt+0x272a4>
   385c8:	mov	r3, #0
   385cc:	mov	r0, r3
   385d0:	sub	sp, fp, #4
   385d4:	ldr	fp, [sp]
   385d8:	add	sp, sp, #4
   385dc:	pop	{pc}		; (ldr pc, [sp], #4)
   385e0:	str	r4, [sp, #-12]!
   385e4:	str	fp, [sp, #4]
   385e8:	str	lr, [sp, #8]
   385ec:	add	fp, sp, #8
   385f0:	sub	sp, sp, #60	; 0x3c
   385f4:	str	r0, [fp, #-64]	; 0xffffffc0
   385f8:	str	r1, [fp, #-68]	; 0xffffffbc
   385fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38600:	ldr	r3, [r3, #84]	; 0x54
   38604:	str	r3, [fp, #-20]	; 0xffffffec
   38608:	mov	r3, #0
   3860c:	str	r3, [fp, #-16]
   38610:	b	389e8 <__assert_fail@plt+0x277a8>
   38614:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38618:	ldr	r2, [r3, #12]
   3861c:	ldr	r3, [fp, #-16]
   38620:	lsl	r3, r3, #2
   38624:	add	r3, r2, r3
   38628:	ldr	r3, [r3]
   3862c:	str	r3, [fp, #-24]	; 0xffffffe8
   38630:	ldr	r3, [fp, #-20]	; 0xffffffec
   38634:	ldr	r2, [r3]
   38638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3863c:	lsl	r3, r3, #3
   38640:	add	r3, r2, r3
   38644:	ldrb	r3, [r3, #6]
   38648:	and	r3, r3, #16
   3864c:	uxtb	r3, r3
   38650:	cmp	r3, #0
   38654:	beq	389c8 <__assert_fail@plt+0x27788>
   38658:	ldr	r3, [fp, #-20]	; 0xffffffec
   3865c:	ldr	r2, [r3]
   38660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38664:	lsl	r3, r3, #3
   38668:	add	r3, r2, r3
   3866c:	ldr	r2, [r3, #4]
   38670:	mov	r3, #65280	; 0xff00
   38674:	movt	r3, #3
   38678:	and	r3, r3, r2
   3867c:	cmp	r3, #0
   38680:	beq	38794 <__assert_fail@plt+0x27554>
   38684:	ldr	r0, [fp, #-64]	; 0xffffffc0
   38688:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3868c:	ldr	r1, [r3, #40]	; 0x28
   38690:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38694:	ldr	r3, [r3, #88]	; 0x58
   38698:	mov	r2, r3
   3869c:	bl	26a20 <__assert_fail@plt+0x157e0>
   386a0:	str	r0, [fp, #-28]	; 0xffffffe4
   386a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   386a8:	ldr	r2, [r3]
   386ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   386b0:	lsl	r3, r3, #3
   386b4:	add	r3, r2, r3
   386b8:	ldr	r3, [r3, #4]
   386bc:	ubfx	r3, r3, #8, #10
   386c0:	uxth	r3, r3
   386c4:	and	r3, r3, #4
   386c8:	cmp	r3, #0
   386cc:	beq	386e0 <__assert_fail@plt+0x274a0>
   386d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   386d4:	and	r3, r3, #1
   386d8:	cmp	r3, #0
   386dc:	beq	389d0 <__assert_fail@plt+0x27790>
   386e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   386e4:	ldr	r2, [r3]
   386e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   386ec:	lsl	r3, r3, #3
   386f0:	add	r3, r2, r3
   386f4:	ldr	r3, [r3, #4]
   386f8:	ubfx	r3, r3, #8, #10
   386fc:	uxth	r3, r3
   38700:	and	r3, r3, #8
   38704:	cmp	r3, #0
   38708:	beq	3871c <__assert_fail@plt+0x274dc>
   3870c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38710:	and	r3, r3, #1
   38714:	cmp	r3, #0
   38718:	bne	389d0 <__assert_fail@plt+0x27790>
   3871c:	ldr	r3, [fp, #-20]	; 0xffffffec
   38720:	ldr	r2, [r3]
   38724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38728:	lsl	r3, r3, #3
   3872c:	add	r3, r2, r3
   38730:	ldr	r3, [r3, #4]
   38734:	ubfx	r3, r3, #8, #10
   38738:	uxth	r3, r3
   3873c:	and	r3, r3, #32
   38740:	cmp	r3, #0
   38744:	beq	38758 <__assert_fail@plt+0x27518>
   38748:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3874c:	and	r3, r3, #2
   38750:	cmp	r3, #0
   38754:	beq	389d0 <__assert_fail@plt+0x27790>
   38758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3875c:	ldr	r2, [r3]
   38760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38764:	lsl	r3, r3, #3
   38768:	add	r3, r2, r3
   3876c:	ldr	r3, [r3, #4]
   38770:	ubfx	r3, r3, #8, #10
   38774:	uxth	r3, r3
   38778:	and	r3, r3, #128	; 0x80
   3877c:	cmp	r3, #0
   38780:	beq	38794 <__assert_fail@plt+0x27554>
   38784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38788:	and	r3, r3, #8
   3878c:	cmp	r3, #0
   38790:	beq	389d0 <__assert_fail@plt+0x27790>
   38794:	ldr	r2, [fp, #-64]	; 0xffffffc0
   38798:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3879c:	ldr	r3, [r3, #40]	; 0x28
   387a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   387a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   387a8:	bl	3c018 <__assert_fail@plt+0x2add8>
   387ac:	str	r0, [fp, #-32]	; 0xffffffe0
   387b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   387b4:	cmp	r3, #0
   387b8:	beq	389d8 <__assert_fail@plt+0x27798>
   387bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   387c0:	ldr	r3, [r3, #40]	; 0x28
   387c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   387c8:	add	r3, r2, r3
   387cc:	str	r3, [fp, #-36]	; 0xffffffdc
   387d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   387d4:	ldr	r2, [r3, #120]	; 0x78
   387d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   387dc:	cmp	r2, r3
   387e0:	movge	r2, r2
   387e4:	movlt	r2, r3
   387e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   387ec:	str	r2, [r3, #120]	; 0x78
   387f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   387f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   387f8:	bl	36678 <__assert_fail@plt+0x25438>
   387fc:	mov	r3, r0
   38800:	str	r3, [fp, #-48]	; 0xffffffd0
   38804:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38808:	cmp	r3, #0
   3880c:	movne	r3, #1
   38810:	moveq	r3, #0
   38814:	uxtb	r3, r3
   38818:	cmp	r3, #0
   3881c:	beq	38828 <__assert_fail@plt+0x275e8>
   38820:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38824:	b	38a00 <__assert_fail@plt+0x277c0>
   38828:	ldr	r3, [fp, #-20]	; 0xffffffec
   3882c:	ldr	r2, [r3, #12]
   38830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38834:	lsl	r3, r3, #2
   38838:	add	r3, r2, r3
   3883c:	ldr	r3, [r3]
   38840:	cmn	r3, #1
   38844:	ldr	r3, [fp, #-20]	; 0xffffffec
   38848:	ldr	r2, [r3, #24]
   3884c:	ldr	r3, [fp, #-20]	; 0xffffffec
   38850:	ldr	r1, [r3, #12]
   38854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38858:	lsl	r3, r3, #2
   3885c:	add	r3, r1, r3
   38860:	ldr	r3, [r3]
   38864:	mov	r1, r3
   38868:	mov	r3, r1
   3886c:	lsl	r3, r3, #1
   38870:	add	r3, r3, r1
   38874:	lsl	r3, r3, #2
   38878:	add	r3, r2, r3
   3887c:	str	r3, [fp, #-40]	; 0xffffffd8
   38880:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38884:	ldr	r2, [r3, #100]	; 0x64
   38888:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3888c:	lsl	r3, r3, #2
   38890:	add	r3, r2, r3
   38894:	ldr	r3, [r3]
   38898:	str	r3, [fp, #-44]	; 0xffffffd4
   3889c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   388a0:	cmp	r3, #0
   388a4:	bne	388c8 <__assert_fail@plt+0x27688>
   388a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   388ac:	sub	r1, fp, #60	; 0x3c
   388b0:	mov	r0, r3
   388b4:	ldrd	r2, [r0]
   388b8:	strd	r2, [r1]
   388bc:	ldr	r3, [r0, #8]
   388c0:	str	r3, [r1, #8]
   388c4:	b	3890c <__assert_fail@plt+0x276cc>
   388c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   388cc:	ldr	r1, [r3, #40]	; 0x28
   388d0:	sub	r3, fp, #60	; 0x3c
   388d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   388d8:	mov	r0, r3
   388dc:	bl	27414 <__assert_fail@plt+0x161d4>
   388e0:	mov	r3, r0
   388e4:	str	r3, [fp, #-48]	; 0xffffffd0
   388e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   388ec:	cmp	r3, #0
   388f0:	movne	r3, #1
   388f4:	moveq	r3, #0
   388f8:	uxtb	r3, r3
   388fc:	cmp	r3, #0
   38900:	beq	3890c <__assert_fail@plt+0x276cc>
   38904:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38908:	b	38a00 <__assert_fail@plt+0x277c0>
   3890c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   38910:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38914:	sub	r1, r3, #1
   38918:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3891c:	ldr	r3, [r3, #88]	; 0x58
   38920:	mov	r2, r3
   38924:	bl	26a20 <__assert_fail@plt+0x157e0>
   38928:	str	r0, [fp, #-28]	; 0xffffffe4
   3892c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38930:	ldr	r2, [r3, #100]	; 0x64
   38934:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38938:	lsl	r3, r3, #2
   3893c:	add	r4, r2, r3
   38940:	sub	r2, fp, #60	; 0x3c
   38944:	sub	r0, fp, #48	; 0x30
   38948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3894c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38950:	bl	287b4 <__assert_fail@plt+0x17574>
   38954:	mov	r3, r0
   38958:	str	r3, [r4]
   3895c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38960:	cmp	r3, #0
   38964:	beq	38974 <__assert_fail@plt+0x27734>
   38968:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3896c:	mov	r0, r3
   38970:	bl	13798 <__assert_fail@plt+0x2558>
   38974:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38978:	ldr	r2, [r3, #100]	; 0x64
   3897c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38980:	lsl	r3, r3, #2
   38984:	add	r3, r2, r3
   38988:	ldr	r3, [r3]
   3898c:	cmp	r3, #0
   38990:	moveq	r3, #1
   38994:	movne	r3, #0
   38998:	uxtb	r3, r3
   3899c:	cmp	r3, #0
   389a0:	beq	389dc <__assert_fail@plt+0x2779c>
   389a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   389a8:	cmp	r3, #0
   389ac:	movne	r3, #1
   389b0:	moveq	r3, #0
   389b4:	uxtb	r3, r3
   389b8:	cmp	r3, #0
   389bc:	beq	389dc <__assert_fail@plt+0x2779c>
   389c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   389c4:	b	38a00 <__assert_fail@plt+0x277c0>
   389c8:	nop	{0}
   389cc:	b	389dc <__assert_fail@plt+0x2779c>
   389d0:	nop	{0}
   389d4:	b	389dc <__assert_fail@plt+0x2779c>
   389d8:	nop	{0}
   389dc:	ldr	r3, [fp, #-16]
   389e0:	add	r3, r3, #1
   389e4:	str	r3, [fp, #-16]
   389e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   389ec:	ldr	r3, [r3, #8]
   389f0:	ldr	r2, [fp, #-16]
   389f4:	cmp	r2, r3
   389f8:	blt	38614 <__assert_fail@plt+0x273d4>
   389fc:	mov	r3, #0
   38a00:	mov	r0, r3
   38a04:	sub	sp, fp, #8
   38a08:	ldr	r4, [sp]
   38a0c:	ldr	fp, [sp, #4]
   38a10:	add	sp, sp, #8
   38a14:	pop	{pc}		; (ldr pc, [sp], #4)
   38a18:	str	r4, [sp, #-12]!
   38a1c:	str	fp, [sp, #4]
   38a20:	str	lr, [sp, #8]
   38a24:	add	fp, sp, #8
   38a28:	sub	sp, sp, #84	; 0x54
   38a2c:	str	r0, [fp, #-88]	; 0xffffffa8
   38a30:	str	r1, [fp, #-92]	; 0xffffffa4
   38a34:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38a38:	ldr	r3, [r3, #84]	; 0x54
   38a3c:	str	r3, [fp, #-24]	; 0xffffffe8
   38a40:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38a44:	ldr	r3, [r3, #40]	; 0x28
   38a48:	str	r3, [fp, #-28]	; 0xffffffe4
   38a4c:	mov	r3, #0
   38a50:	str	r3, [fp, #-16]
   38a54:	b	38fc4 <__assert_fail@plt+0x27d84>
   38a58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   38a5c:	ldr	r2, [r3, #8]
   38a60:	ldr	r3, [fp, #-16]
   38a64:	lsl	r3, r3, #2
   38a68:	add	r3, r2, r3
   38a6c:	ldr	r3, [r3]
   38a70:	str	r3, [fp, #-32]	; 0xffffffe0
   38a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38a78:	ldr	r2, [r3]
   38a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38a80:	lsl	r3, r3, #3
   38a84:	add	r3, r2, r3
   38a88:	str	r3, [fp, #-36]	; 0xffffffdc
   38a8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38a90:	ldrb	r3, [r3, #4]
   38a94:	cmp	r3, #4
   38a98:	bne	38fac <__assert_fail@plt+0x27d6c>
   38a9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38aa0:	ldr	r2, [r3, #4]
   38aa4:	mov	r3, #65280	; 0xff00
   38aa8:	movt	r3, #3
   38aac:	and	r3, r3, r2
   38ab0:	cmp	r3, #0
   38ab4:	beq	38b84 <__assert_fail@plt+0x27944>
   38ab8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38abc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38ac0:	ldr	r3, [r3, #88]	; 0x58
   38ac4:	mov	r2, r3
   38ac8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38acc:	bl	26a20 <__assert_fail@plt+0x157e0>
   38ad0:	str	r0, [fp, #-40]	; 0xffffffd8
   38ad4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38ad8:	ldr	r3, [r3, #4]
   38adc:	ubfx	r3, r3, #8, #10
   38ae0:	uxth	r3, r3
   38ae4:	and	r3, r3, #4
   38ae8:	cmp	r3, #0
   38aec:	beq	38b00 <__assert_fail@plt+0x278c0>
   38af0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38af4:	and	r3, r3, #1
   38af8:	cmp	r3, #0
   38afc:	beq	38fb4 <__assert_fail@plt+0x27d74>
   38b00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38b04:	ldr	r3, [r3, #4]
   38b08:	ubfx	r3, r3, #8, #10
   38b0c:	uxth	r3, r3
   38b10:	and	r3, r3, #8
   38b14:	cmp	r3, #0
   38b18:	beq	38b2c <__assert_fail@plt+0x278ec>
   38b1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38b20:	and	r3, r3, #1
   38b24:	cmp	r3, #0
   38b28:	bne	38fb4 <__assert_fail@plt+0x27d74>
   38b2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38b30:	ldr	r3, [r3, #4]
   38b34:	ubfx	r3, r3, #8, #10
   38b38:	uxth	r3, r3
   38b3c:	and	r3, r3, #32
   38b40:	cmp	r3, #0
   38b44:	beq	38b58 <__assert_fail@plt+0x27918>
   38b48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38b4c:	and	r3, r3, #2
   38b50:	cmp	r3, #0
   38b54:	beq	38fb4 <__assert_fail@plt+0x27d74>
   38b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38b5c:	ldr	r3, [r3, #4]
   38b60:	ubfx	r3, r3, #8, #10
   38b64:	uxth	r3, r3
   38b68:	and	r3, r3, #128	; 0x80
   38b6c:	cmp	r3, #0
   38b70:	beq	38b84 <__assert_fail@plt+0x27944>
   38b74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38b78:	and	r3, r3, #8
   38b7c:	cmp	r3, #0
   38b80:	beq	38fb4 <__assert_fail@plt+0x27d74>
   38b84:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38b88:	ldr	r3, [r3, #108]	; 0x6c
   38b8c:	str	r3, [fp, #-20]	; 0xffffffec
   38b90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38b94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38b98:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38b9c:	bl	39014 <__assert_fail@plt+0x27dd4>
   38ba0:	mov	r3, r0
   38ba4:	str	r3, [fp, #-68]	; 0xffffffbc
   38ba8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38bac:	cmp	r3, #0
   38bb0:	movne	r3, #1
   38bb4:	moveq	r3, #0
   38bb8:	uxtb	r3, r3
   38bbc:	cmp	r3, #0
   38bc0:	bne	38fe4 <__assert_fail@plt+0x27da4>
   38bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38bc8:	ldr	r2, [r3, #12]
   38bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38bd0:	lsl	r3, r3, #2
   38bd4:	add	r3, r2, r3
   38bd8:	ldr	r3, [r3]
   38bdc:	cmn	r3, #1
   38be0:	b	38f94 <__assert_fail@plt+0x27d54>
   38be4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38be8:	ldr	r1, [r3, #116]	; 0x74
   38bec:	ldr	r2, [fp, #-20]	; 0xffffffec
   38bf0:	mov	r3, r2
   38bf4:	lsl	r3, r3, #1
   38bf8:	add	r3, r3, r2
   38bfc:	lsl	r3, r3, #3
   38c00:	add	r3, r1, r3
   38c04:	str	r3, [fp, #-44]	; 0xffffffd4
   38c08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38c0c:	ldr	r3, [r3]
   38c10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38c14:	cmp	r2, r3
   38c18:	bne	38f84 <__assert_fail@plt+0x27d44>
   38c1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38c20:	ldr	r3, [r3, #4]
   38c24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38c28:	cmp	r2, r3
   38c2c:	bne	38f84 <__assert_fail@plt+0x27d44>
   38c30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38c34:	ldr	r2, [r3, #12]
   38c38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38c3c:	ldr	r3, [r3, #8]
   38c40:	sub	r3, r2, r3
   38c44:	str	r3, [fp, #-48]	; 0xffffffd0
   38c48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38c4c:	cmp	r3, #0
   38c50:	bne	38ca0 <__assert_fail@plt+0x27a60>
   38c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38c58:	ldr	r1, [r3, #24]
   38c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38c60:	ldr	r0, [r3, #20]
   38c64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38c68:	mov	r3, r2
   38c6c:	lsl	r3, r3, #1
   38c70:	add	r3, r3, r2
   38c74:	lsl	r3, r3, #2
   38c78:	add	r3, r0, r3
   38c7c:	ldr	r3, [r3, #8]
   38c80:	ldr	r3, [r3]
   38c84:	mov	r2, r3
   38c88:	mov	r3, r2
   38c8c:	lsl	r3, r3, #1
   38c90:	add	r3, r3, r2
   38c94:	lsl	r3, r3, #2
   38c98:	add	r3, r1, r3
   38c9c:	b	38cd8 <__assert_fail@plt+0x27a98>
   38ca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38ca4:	ldr	r2, [r3, #24]
   38ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38cac:	ldr	r1, [r3, #12]
   38cb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38cb4:	lsl	r3, r3, #2
   38cb8:	add	r3, r1, r3
   38cbc:	ldr	r3, [r3]
   38cc0:	mov	r1, r3
   38cc4:	mov	r3, r1
   38cc8:	lsl	r3, r3, #1
   38ccc:	add	r3, r3, r1
   38cd0:	lsl	r3, r3, #2
   38cd4:	add	r3, r2, r3
   38cd8:	str	r3, [fp, #-52]	; 0xffffffcc
   38cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38ce0:	ldr	r2, [r3, #12]
   38ce4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38ce8:	add	r2, r2, r3
   38cec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38cf0:	ldr	r3, [r3, #8]
   38cf4:	sub	r3, r2, r3
   38cf8:	str	r3, [fp, #-56]	; 0xffffffc8
   38cfc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38d00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38d04:	sub	r1, r3, #1
   38d08:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38d0c:	ldr	r3, [r3, #88]	; 0x58
   38d10:	mov	r2, r3
   38d14:	bl	26a20 <__assert_fail@plt+0x157e0>
   38d18:	str	r0, [fp, #-40]	; 0xffffffd8
   38d1c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38d20:	ldr	r2, [r3, #100]	; 0x64
   38d24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38d28:	lsl	r3, r3, #2
   38d2c:	add	r3, r2, r3
   38d30:	ldr	r3, [r3]
   38d34:	str	r3, [fp, #-60]	; 0xffffffc4
   38d38:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38d3c:	ldr	r2, [r3, #100]	; 0x64
   38d40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38d44:	lsl	r3, r3, #2
   38d48:	add	r3, r2, r3
   38d4c:	ldr	r3, [r3]
   38d50:	cmp	r3, #0
   38d54:	beq	38d78 <__assert_fail@plt+0x27b38>
   38d58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38d5c:	ldr	r2, [r3, #100]	; 0x64
   38d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38d64:	lsl	r3, r3, #2
   38d68:	add	r3, r2, r3
   38d6c:	ldr	r3, [r3]
   38d70:	ldr	r3, [r3, #8]
   38d74:	b	38d7c <__assert_fail@plt+0x27b3c>
   38d78:	mov	r3, #0
   38d7c:	str	r3, [fp, #-64]	; 0xffffffc0
   38d80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38d84:	cmp	r3, #0
   38d88:	bne	38e0c <__assert_fail@plt+0x27bcc>
   38d8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38d90:	ldr	r2, [r3, #100]	; 0x64
   38d94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38d98:	lsl	r3, r3, #2
   38d9c:	add	r4, r2, r3
   38da0:	sub	r0, fp, #68	; 0x44
   38da4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38da8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38db0:	bl	287b4 <__assert_fail@plt+0x17574>
   38db4:	mov	r3, r0
   38db8:	str	r3, [r4]
   38dbc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38dc0:	ldr	r2, [r3, #100]	; 0x64
   38dc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38dc8:	lsl	r3, r3, #2
   38dcc:	add	r3, r2, r3
   38dd0:	ldr	r3, [r3]
   38dd4:	cmp	r3, #0
   38dd8:	moveq	r3, #1
   38ddc:	movne	r3, #0
   38de0:	uxtb	r3, r3
   38de4:	cmp	r3, #0
   38de8:	beq	38ee8 <__assert_fail@plt+0x27ca8>
   38dec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38df0:	cmp	r3, #0
   38df4:	movne	r3, #1
   38df8:	moveq	r3, #0
   38dfc:	uxtb	r3, r3
   38e00:	cmp	r3, #0
   38e04:	beq	38ee8 <__assert_fail@plt+0x27ca8>
   38e08:	b	38ff8 <__assert_fail@plt+0x27db8>
   38e0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38e10:	ldr	r1, [r3, #40]	; 0x28
   38e14:	sub	r3, fp, #80	; 0x50
   38e18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38e1c:	mov	r0, r3
   38e20:	bl	27414 <__assert_fail@plt+0x161d4>
   38e24:	mov	r3, r0
   38e28:	str	r3, [fp, #-68]	; 0xffffffbc
   38e2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38e30:	cmp	r3, #0
   38e34:	movne	r3, #1
   38e38:	moveq	r3, #0
   38e3c:	uxtb	r3, r3
   38e40:	cmp	r3, #0
   38e44:	beq	38e58 <__assert_fail@plt+0x27c18>
   38e48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38e4c:	mov	r0, r3
   38e50:	bl	13798 <__assert_fail@plt+0x2558>
   38e54:	b	38ff8 <__assert_fail@plt+0x27db8>
   38e58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38e5c:	ldr	r2, [r3, #100]	; 0x64
   38e60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38e64:	lsl	r3, r3, #2
   38e68:	add	r4, r2, r3
   38e6c:	sub	r2, fp, #80	; 0x50
   38e70:	sub	r0, fp, #68	; 0x44
   38e74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38e7c:	bl	287b4 <__assert_fail@plt+0x17574>
   38e80:	mov	r3, r0
   38e84:	str	r3, [r4]
   38e88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38e8c:	mov	r0, r3
   38e90:	bl	13798 <__assert_fail@plt+0x2558>
   38e94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38e98:	ldr	r2, [r3, #100]	; 0x64
   38e9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38ea0:	lsl	r3, r3, #2
   38ea4:	add	r3, r2, r3
   38ea8:	ldr	r3, [r3]
   38eac:	cmp	r3, #0
   38eb0:	moveq	r3, #1
   38eb4:	movne	r3, #0
   38eb8:	uxtb	r3, r3
   38ebc:	cmp	r3, #0
   38ec0:	beq	38ee8 <__assert_fail@plt+0x27ca8>
   38ec4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38ec8:	cmp	r3, #0
   38ecc:	movne	r3, #1
   38ed0:	moveq	r3, #0
   38ed4:	uxtb	r3, r3
   38ed8:	cmp	r3, #0
   38edc:	beq	38ee8 <__assert_fail@plt+0x27ca8>
   38ee0:	nop	{0}
   38ee4:	b	38ff8 <__assert_fail@plt+0x27db8>
   38ee8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38eec:	cmp	r3, #0
   38ef0:	bne	38f88 <__assert_fail@plt+0x27d48>
   38ef4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38ef8:	ldr	r2, [r3, #100]	; 0x64
   38efc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38f00:	lsl	r3, r3, #2
   38f04:	add	r3, r2, r3
   38f08:	ldr	r3, [r3]
   38f0c:	ldr	r3, [r3, #8]
   38f10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   38f14:	cmp	r2, r3
   38f18:	bge	38f88 <__assert_fail@plt+0x27d48>
   38f1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38f20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38f24:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38f28:	bl	384b0 <__assert_fail@plt+0x27270>
   38f2c:	mov	r3, r0
   38f30:	str	r3, [fp, #-68]	; 0xffffffbc
   38f34:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38f38:	cmp	r3, #0
   38f3c:	movne	r3, #1
   38f40:	moveq	r3, #0
   38f44:	uxtb	r3, r3
   38f48:	cmp	r3, #0
   38f4c:	bne	38fec <__assert_fail@plt+0x27dac>
   38f50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38f54:	ldr	r0, [fp, #-88]	; 0xffffffa8
   38f58:	bl	38a18 <__assert_fail@plt+0x277d8>
   38f5c:	mov	r3, r0
   38f60:	str	r3, [fp, #-68]	; 0xffffffbc
   38f64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38f68:	cmp	r3, #0
   38f6c:	movne	r3, #1
   38f70:	moveq	r3, #0
   38f74:	uxtb	r3, r3
   38f78:	cmp	r3, #0
   38f7c:	bne	38ff4 <__assert_fail@plt+0x27db4>
   38f80:	b	38f88 <__assert_fail@plt+0x27d48>
   38f84:	nop	{0}
   38f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   38f8c:	add	r3, r3, #1
   38f90:	str	r3, [fp, #-20]	; 0xffffffec
   38f94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38f98:	ldr	r3, [r3, #108]	; 0x6c
   38f9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   38fa0:	cmp	r2, r3
   38fa4:	blt	38be4 <__assert_fail@plt+0x279a4>
   38fa8:	b	38fb8 <__assert_fail@plt+0x27d78>
   38fac:	nop	{0}
   38fb0:	b	38fb8 <__assert_fail@plt+0x27d78>
   38fb4:	nop	{0}
   38fb8:	ldr	r3, [fp, #-16]
   38fbc:	add	r3, r3, #1
   38fc0:	str	r3, [fp, #-16]
   38fc4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   38fc8:	ldr	r3, [r3, #4]
   38fcc:	ldr	r2, [fp, #-16]
   38fd0:	cmp	r2, r3
   38fd4:	blt	38a58 <__assert_fail@plt+0x27818>
   38fd8:	mov	r3, #0
   38fdc:	str	r3, [fp, #-68]	; 0xffffffbc
   38fe0:	b	38ff8 <__assert_fail@plt+0x27db8>
   38fe4:	nop	{0}
   38fe8:	b	38ff8 <__assert_fail@plt+0x27db8>
   38fec:	nop	{0}
   38ff0:	b	38ff8 <__assert_fail@plt+0x27db8>
   38ff4:	nop	{0}
   38ff8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38ffc:	mov	r0, r3
   39000:	sub	sp, fp, #8
   39004:	ldr	r4, [sp]
   39008:	ldr	fp, [sp, #4]
   3900c:	add	sp, sp, #8
   39010:	pop	{pc}		; (ldr pc, [sp], #4)
   39014:	str	fp, [sp, #-8]!
   39018:	str	lr, [sp, #4]
   3901c:	add	fp, sp, #4
   39020:	sub	sp, sp, #96	; 0x60
   39024:	str	r0, [fp, #-72]	; 0xffffffb8
   39028:	str	r1, [fp, #-76]	; 0xffffffb4
   3902c:	str	r2, [fp, #-80]	; 0xffffffb0
   39030:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39034:	ldr	r3, [r3, #84]	; 0x54
   39038:	str	r3, [fp, #-32]	; 0xffffffe0
   3903c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39040:	ldr	r3, [r3, #4]
   39044:	str	r3, [fp, #-12]
   39048:	ldr	r1, [fp, #-80]	; 0xffffffb0
   3904c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   39050:	bl	3cf84 <__assert_fail@plt+0x2bd44>
   39054:	str	r0, [fp, #-36]	; 0xffffffdc
   39058:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3905c:	cmn	r3, #1
   39060:	beq	390bc <__assert_fail@plt+0x27e7c>
   39064:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39068:	ldr	r1, [r3, #116]	; 0x74
   3906c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39070:	mov	r3, r2
   39074:	lsl	r3, r3, #1
   39078:	add	r3, r3, r2
   3907c:	lsl	r3, r3, #3
   39080:	add	r3, r1, r3
   39084:	str	r3, [fp, #-16]
   39088:	ldr	r3, [fp, #-16]
   3908c:	ldr	r3, [r3]
   39090:	ldr	r2, [fp, #-76]	; 0xffffffb4
   39094:	cmp	r2, r3
   39098:	bne	390a4 <__assert_fail@plt+0x27e64>
   3909c:	mov	r3, #0
   390a0:	b	3963c <__assert_fail@plt+0x283fc>
   390a4:	ldr	r3, [fp, #-16]
   390a8:	add	r2, r3, #24
   390ac:	str	r2, [fp, #-16]
   390b0:	ldrb	r3, [r3, #20]
   390b4:	cmp	r3, #0
   390b8:	bne	39088 <__assert_fail@plt+0x27e48>
   390bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   390c0:	ldr	r2, [r3]
   390c4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   390c8:	lsl	r3, r3, #3
   390cc:	add	r3, r2, r3
   390d0:	ldr	r3, [r3]
   390d4:	str	r3, [fp, #-40]	; 0xffffffd8
   390d8:	mov	r3, #0
   390dc:	str	r3, [fp, #-8]
   390e0:	b	39624 <__assert_fail@plt+0x283e4>
   390e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   390e8:	ldr	r2, [r3, #132]	; 0x84
   390ec:	ldr	r3, [fp, #-8]
   390f0:	lsl	r3, r3, #2
   390f4:	add	r3, r2, r3
   390f8:	ldr	r3, [r3]
   390fc:	str	r3, [fp, #-44]	; 0xffffffd4
   39100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39104:	ldr	r2, [r3]
   39108:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3910c:	ldr	r3, [r3, #4]
   39110:	lsl	r3, r3, #3
   39114:	add	r3, r2, r3
   39118:	ldr	r3, [r3]
   3911c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   39120:	cmp	r2, r3
   39124:	bne	395fc <__assert_fail@plt+0x283bc>
   39128:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3912c:	ldr	r3, [r3]
   39130:	str	r3, [fp, #-24]	; 0xffffffe8
   39134:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39138:	str	r3, [fp, #-28]	; 0xffffffe4
   3913c:	mov	r3, #0
   39140:	str	r3, [fp, #-20]	; 0xffffffec
   39144:	b	392d4 <__assert_fail@plt+0x28094>
   39148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3914c:	ldr	r2, [r3, #20]
   39150:	ldr	r3, [fp, #-20]	; 0xffffffec
   39154:	lsl	r3, r3, #2
   39158:	add	r3, r2, r3
   3915c:	ldr	r3, [r3]
   39160:	str	r3, [fp, #-48]	; 0xffffffd0
   39164:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39168:	ldr	r2, [r3, #4]
   3916c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39170:	sub	r3, r2, r3
   39174:	str	r3, [fp, #-52]	; 0xffffffcc
   39178:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3917c:	cmp	r3, #0
   39180:	ble	39248 <__assert_fail@plt+0x28008>
   39184:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39188:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3918c:	add	r2, r2, r3
   39190:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39194:	ldr	r3, [r3, #28]
   39198:	cmp	r2, r3
   3919c:	movgt	r3, #1
   391a0:	movle	r3, #0
   391a4:	uxtb	r3, r3
   391a8:	cmp	r3, #0
   391ac:	beq	39218 <__assert_fail@plt+0x27fd8>
   391b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   391b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   391b8:	add	r2, r2, r3
   391bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   391c0:	ldr	r3, [r3, #48]	; 0x30
   391c4:	cmp	r2, r3
   391c8:	bgt	392ec <__assert_fail@plt+0x280ac>
   391cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   391d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   391d4:	add	r3, r2, r3
   391d8:	mov	r1, r3
   391dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   391e0:	bl	36678 <__assert_fail@plt+0x25438>
   391e4:	str	r0, [fp, #-56]	; 0xffffffc8
   391e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   391ec:	cmp	r3, #0
   391f0:	movne	r3, #1
   391f4:	moveq	r3, #0
   391f8:	uxtb	r3, r3
   391fc:	cmp	r3, #0
   39200:	beq	3920c <__assert_fail@plt+0x27fcc>
   39204:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39208:	b	3963c <__assert_fail@plt+0x283fc>
   3920c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39210:	ldr	r3, [r3, #4]
   39214:	str	r3, [fp, #-12]
   39218:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3921c:	ldr	r2, [fp, #-12]
   39220:	add	r0, r2, r3
   39224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39228:	ldr	r2, [fp, #-12]
   3922c:	add	r3, r2, r3
   39230:	ldr	r2, [fp, #-52]	; 0xffffffcc
   39234:	mov	r1, r3
   39238:	bl	11024 <memcmp@plt>
   3923c:	mov	r3, r0
   39240:	cmp	r3, #0
   39244:	bne	392f4 <__assert_fail@plt+0x280b4>
   39248:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3924c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39250:	add	r3, r2, r3
   39254:	str	r3, [fp, #-28]	; 0xffffffe4
   39258:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3925c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39260:	add	r3, r2, r3
   39264:	str	r3, [fp, #-24]	; 0xffffffe8
   39268:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3926c:	str	r3, [sp]
   39270:	ldr	r3, [fp, #-76]	; 0xffffffb4
   39274:	ldr	r2, [fp, #-48]	; 0xffffffd0
   39278:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3927c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   39280:	bl	39650 <__assert_fail@plt+0x28410>
   39284:	str	r0, [fp, #-56]	; 0xffffffc8
   39288:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3928c:	ldr	r3, [r3, #4]
   39290:	str	r3, [fp, #-12]
   39294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39298:	cmp	r3, #1
   3929c:	beq	392c4 <__assert_fail@plt+0x28084>
   392a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   392a4:	cmp	r3, #0
   392a8:	movne	r3, #1
   392ac:	moveq	r3, #0
   392b0:	uxtb	r3, r3
   392b4:	cmp	r3, #0
   392b8:	beq	392c8 <__assert_fail@plt+0x28088>
   392bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   392c0:	b	3963c <__assert_fail@plt+0x283fc>
   392c4:	nop	{0}
   392c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   392cc:	add	r3, r3, #1
   392d0:	str	r3, [fp, #-20]	; 0xffffffec
   392d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   392d8:	ldr	r3, [r3, #16]
   392dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   392e0:	cmp	r2, r3
   392e4:	blt	39148 <__assert_fail@plt+0x27f08>
   392e8:	b	392f8 <__assert_fail@plt+0x280b8>
   392ec:	nop	{0}
   392f0:	b	392f8 <__assert_fail@plt+0x280b8>
   392f4:	nop	{0}
   392f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   392fc:	ldr	r3, [r3, #16]
   39300:	ldr	r2, [fp, #-20]	; 0xffffffec
   39304:	cmp	r2, r3
   39308:	blt	39604 <__assert_fail@plt+0x283c4>
   3930c:	ldr	r3, [fp, #-20]	; 0xffffffec
   39310:	cmp	r3, #0
   39314:	ble	395e8 <__assert_fail@plt+0x283a8>
   39318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3931c:	add	r3, r3, #1
   39320:	str	r3, [fp, #-24]	; 0xffffffe8
   39324:	b	395e8 <__assert_fail@plt+0x283a8>
   39328:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3932c:	ldr	r3, [r3]
   39330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39334:	sub	r3, r2, r3
   39338:	str	r3, [fp, #-60]	; 0xffffffc4
   3933c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39340:	cmp	r3, #0
   39344:	ble	39400 <__assert_fail@plt+0x281c0>
   39348:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3934c:	ldr	r3, [r3, #28]
   39350:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39354:	cmp	r2, r3
   39358:	movge	r3, #1
   3935c:	movlt	r3, #0
   39360:	uxtb	r3, r3
   39364:	cmp	r3, #0
   39368:	beq	393c8 <__assert_fail@plt+0x28188>
   3936c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39370:	ldr	r3, [r3, #48]	; 0x30
   39374:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39378:	cmp	r2, r3
   3937c:	bge	3960c <__assert_fail@plt+0x283cc>
   39380:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39384:	add	r3, r3, #1
   39388:	mov	r1, r3
   3938c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   39390:	bl	3c7c8 <__assert_fail@plt+0x2b588>
   39394:	str	r0, [fp, #-56]	; 0xffffffc8
   39398:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3939c:	cmp	r3, #0
   393a0:	movne	r3, #1
   393a4:	moveq	r3, #0
   393a8:	uxtb	r3, r3
   393ac:	cmp	r3, #0
   393b0:	beq	393bc <__assert_fail@plt+0x2817c>
   393b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   393b8:	b	3963c <__assert_fail@plt+0x283fc>
   393bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   393c0:	ldr	r3, [r3, #4]
   393c4:	str	r3, [fp, #-12]
   393c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   393cc:	add	r2, r3, #1
   393d0:	str	r2, [fp, #-28]	; 0xffffffe4
   393d4:	mov	r2, r3
   393d8:	ldr	r3, [fp, #-12]
   393dc:	add	r3, r3, r2
   393e0:	ldrb	r2, [r3]
   393e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   393e8:	sub	r3, r3, #1
   393ec:	ldr	r1, [fp, #-12]
   393f0:	add	r3, r1, r3
   393f4:	ldrb	r3, [r3]
   393f8:	cmp	r2, r3
   393fc:	bne	39614 <__assert_fail@plt+0x283d4>
   39400:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39404:	ldr	r2, [r3, #100]	; 0x64
   39408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3940c:	lsl	r3, r3, #2
   39410:	add	r3, r2, r3
   39414:	ldr	r3, [r3]
   39418:	cmp	r3, #0
   3941c:	beq	395c0 <__assert_fail@plt+0x28380>
   39420:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39424:	ldr	r2, [r3, #100]	; 0x64
   39428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3942c:	lsl	r3, r3, #2
   39430:	add	r3, r2, r3
   39434:	ldr	r3, [r3]
   39438:	add	r3, r3, #4
   3943c:	str	r3, [fp, #-64]	; 0xffffffc0
   39440:	mov	r3, #9
   39444:	ldr	r2, [fp, #-40]	; 0xffffffd8
   39448:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3944c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39450:	bl	39758 <__assert_fail@plt+0x28518>
   39454:	str	r0, [fp, #-68]	; 0xffffffbc
   39458:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3945c:	cmn	r3, #1
   39460:	beq	395c8 <__assert_fail@plt+0x28388>
   39464:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39468:	ldr	r3, [r3, #8]
   3946c:	cmp	r3, #0
   39470:	bne	394bc <__assert_fail@plt+0x2827c>
   39474:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39478:	ldr	r3, [r3]
   3947c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39480:	sub	r3, r2, r3
   39484:	add	r3, r3, #1
   39488:	mov	r1, r3
   3948c:	mov	r0, #12
   39490:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   39494:	mov	r3, r0
   39498:	mov	r2, r3
   3949c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   394a0:	str	r2, [r3, #8]
   394a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   394a8:	ldr	r3, [r3, #8]
   394ac:	cmp	r3, #0
   394b0:	bne	394bc <__assert_fail@plt+0x2827c>
   394b4:	mov	r3, #12
   394b8:	b	3963c <__assert_fail@plt+0x283fc>
   394bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   394c0:	ldr	r1, [r3, #8]
   394c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   394c8:	ldr	r2, [r3, #4]
   394cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   394d0:	ldr	r0, [r3]
   394d4:	mov	r3, #9
   394d8:	str	r3, [sp, #8]
   394dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   394e0:	str	r3, [sp, #4]
   394e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   394e8:	str	r3, [sp]
   394ec:	mov	r3, r0
   394f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   394f4:	bl	3981c <__assert_fail@plt+0x285dc>
   394f8:	str	r0, [fp, #-56]	; 0xffffffc8
   394fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39500:	cmp	r3, #1
   39504:	beq	395d0 <__assert_fail@plt+0x28390>
   39508:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3950c:	cmp	r3, #0
   39510:	movne	r3, #1
   39514:	moveq	r3, #0
   39518:	uxtb	r3, r3
   3951c:	cmp	r3, #0
   39520:	beq	3952c <__assert_fail@plt+0x282ec>
   39524:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39528:	b	3963c <__assert_fail@plt+0x283fc>
   3952c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39530:	ldr	r1, [fp, #-68]	; 0xffffffbc
   39534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39538:	bl	3d22c <__assert_fail@plt+0x2bfec>
   3953c:	str	r0, [fp, #-48]	; 0xffffffd0
   39540:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39544:	cmp	r3, #0
   39548:	moveq	r3, #1
   3954c:	movne	r3, #0
   39550:	uxtb	r3, r3
   39554:	cmp	r3, #0
   39558:	beq	39564 <__assert_fail@plt+0x28324>
   3955c:	mov	r3, #12
   39560:	b	3963c <__assert_fail@plt+0x283fc>
   39564:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39568:	str	r3, [sp]
   3956c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   39570:	ldr	r2, [fp, #-48]	; 0xffffffd0
   39574:	ldr	r1, [fp, #-44]	; 0xffffffd4
   39578:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3957c:	bl	39650 <__assert_fail@plt+0x28410>
   39580:	str	r0, [fp, #-56]	; 0xffffffc8
   39584:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39588:	ldr	r3, [r3, #4]
   3958c:	str	r3, [fp, #-12]
   39590:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39594:	cmp	r3, #1
   39598:	beq	395d8 <__assert_fail@plt+0x28398>
   3959c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   395a0:	cmp	r3, #0
   395a4:	movne	r3, #1
   395a8:	moveq	r3, #0
   395ac:	uxtb	r3, r3
   395b0:	cmp	r3, #0
   395b4:	beq	395dc <__assert_fail@plt+0x2839c>
   395b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   395bc:	b	3963c <__assert_fail@plt+0x283fc>
   395c0:	nop	{0}
   395c4:	b	395dc <__assert_fail@plt+0x2839c>
   395c8:	nop	{0}
   395cc:	b	395dc <__assert_fail@plt+0x2839c>
   395d0:	nop	{0}
   395d4:	b	395dc <__assert_fail@plt+0x2839c>
   395d8:	nop	{0}
   395dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   395e0:	add	r3, r3, #1
   395e4:	str	r3, [fp, #-24]	; 0xffffffe8
   395e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   395ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   395f0:	cmp	r2, r3
   395f4:	ble	39328 <__assert_fail@plt+0x280e8>
   395f8:	b	39618 <__assert_fail@plt+0x283d8>
   395fc:	nop	{0}
   39600:	b	39618 <__assert_fail@plt+0x283d8>
   39604:	nop	{0}
   39608:	b	39618 <__assert_fail@plt+0x283d8>
   3960c:	nop	{0}
   39610:	b	39618 <__assert_fail@plt+0x283d8>
   39614:	nop	{0}
   39618:	ldr	r3, [fp, #-8]
   3961c:	add	r3, r3, #1
   39620:	str	r3, [fp, #-8]
   39624:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39628:	ldr	r3, [r3, #124]	; 0x7c
   3962c:	ldr	r2, [fp, #-8]
   39630:	cmp	r2, r3
   39634:	blt	390e4 <__assert_fail@plt+0x27ea4>
   39638:	mov	r3, #0
   3963c:	mov	r0, r3
   39640:	sub	sp, fp, #4
   39644:	ldr	fp, [sp]
   39648:	add	sp, sp, #4
   3964c:	pop	{pc}		; (ldr pc, [sp], #4)
   39650:	str	fp, [sp, #-8]!
   39654:	str	lr, [sp, #4]
   39658:	add	fp, sp, #4
   3965c:	sub	sp, sp, #40	; 0x28
   39660:	str	r0, [fp, #-16]
   39664:	str	r1, [fp, #-20]	; 0xffffffec
   39668:	str	r2, [fp, #-24]	; 0xffffffe8
   3966c:	str	r3, [fp, #-28]	; 0xffffffe4
   39670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39674:	add	r1, r3, #8
   39678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3967c:	ldr	r2, [r3]
   39680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39684:	ldr	r0, [r3, #4]
   39688:	mov	r3, #8
   3968c:	str	r3, [sp, #8]
   39690:	ldr	r3, [fp, #4]
   39694:	str	r3, [sp, #4]
   39698:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3969c:	str	r3, [sp]
   396a0:	mov	r3, r0
   396a4:	ldr	r0, [fp, #-16]
   396a8:	bl	3981c <__assert_fail@plt+0x285dc>
   396ac:	str	r0, [fp, #-8]
   396b0:	ldr	r3, [fp, #-8]
   396b4:	cmp	r3, #0
   396b8:	beq	396c4 <__assert_fail@plt+0x28484>
   396bc:	ldr	r3, [fp, #-8]
   396c0:	b	39744 <__assert_fail@plt+0x28504>
   396c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   396c8:	ldr	r2, [r3]
   396cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   396d0:	ldr	r3, [r3, #4]
   396d4:	str	r3, [sp]
   396d8:	mov	r3, r2
   396dc:	ldr	r2, [fp, #4]
   396e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   396e4:	ldr	r0, [fp, #-16]
   396e8:	bl	3cc6c <__assert_fail@plt+0x2ba2c>
   396ec:	str	r0, [fp, #-8]
   396f0:	ldr	r3, [fp, #-8]
   396f4:	cmp	r3, #0
   396f8:	movne	r3, #1
   396fc:	moveq	r3, #0
   39700:	uxtb	r3, r3
   39704:	cmp	r3, #0
   39708:	beq	39714 <__assert_fail@plt+0x284d4>
   3970c:	ldr	r3, [fp, #-8]
   39710:	b	39744 <__assert_fail@plt+0x28504>
   39714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39718:	ldr	r2, [r3, #4]
   3971c:	ldr	r3, [fp, #4]
   39720:	add	r2, r2, r3
   39724:	ldr	r3, [fp, #-20]	; 0xffffffec
   39728:	ldr	r3, [r3]
   3972c:	sub	r3, r2, r3
   39730:	str	r3, [fp, #-12]
   39734:	ldr	r1, [fp, #-12]
   39738:	ldr	r0, [fp, #-16]
   3973c:	bl	36678 <__assert_fail@plt+0x25438>
   39740:	mov	r3, r0
   39744:	mov	r0, r3
   39748:	sub	sp, fp, #4
   3974c:	ldr	fp, [sp]
   39750:	add	sp, sp, #4
   39754:	pop	{pc}		; (ldr pc, [sp], #4)
   39758:	push	{fp}		; (str fp, [sp, #-4]!)
   3975c:	add	fp, sp, #0
   39760:	sub	sp, sp, #36	; 0x24
   39764:	str	r0, [fp, #-24]	; 0xffffffe8
   39768:	str	r1, [fp, #-28]	; 0xffffffe4
   3976c:	str	r2, [fp, #-32]	; 0xffffffe0
   39770:	str	r3, [fp, #-36]	; 0xffffffdc
   39774:	mov	r3, #0
   39778:	str	r3, [fp, #-8]
   3977c:	b	397f4 <__assert_fail@plt+0x285b4>
   39780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39784:	ldr	r2, [r3, #8]
   39788:	ldr	r3, [fp, #-8]
   3978c:	lsl	r3, r3, #2
   39790:	add	r3, r2, r3
   39794:	ldr	r3, [r3]
   39798:	str	r3, [fp, #-12]
   3979c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   397a0:	ldr	r2, [r3]
   397a4:	ldr	r3, [fp, #-12]
   397a8:	lsl	r3, r3, #3
   397ac:	add	r3, r2, r3
   397b0:	str	r3, [fp, #-16]
   397b4:	ldr	r3, [fp, #-16]
   397b8:	ldrb	r3, [r3, #4]
   397bc:	mov	r2, r3
   397c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   397c4:	cmp	r3, r2
   397c8:	bne	397e8 <__assert_fail@plt+0x285a8>
   397cc:	ldr	r3, [fp, #-16]
   397d0:	ldr	r3, [r3]
   397d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   397d8:	cmp	r2, r3
   397dc:	bne	397e8 <__assert_fail@plt+0x285a8>
   397e0:	ldr	r3, [fp, #-12]
   397e4:	b	3980c <__assert_fail@plt+0x285cc>
   397e8:	ldr	r3, [fp, #-8]
   397ec:	add	r3, r3, #1
   397f0:	str	r3, [fp, #-8]
   397f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   397f8:	ldr	r3, [r3, #4]
   397fc:	ldr	r2, [fp, #-8]
   39800:	cmp	r2, r3
   39804:	blt	39780 <__assert_fail@plt+0x28540>
   39808:	mvn	r3, #0
   3980c:	mov	r0, r3
   39810:	add	sp, fp, #0
   39814:	pop	{fp}		; (ldr fp, [sp], #4)
   39818:	bx	lr
   3981c:	str	fp, [sp, #-8]!
   39820:	str	lr, [sp, #4]
   39824:	add	fp, sp, #4
   39828:	sub	sp, sp, #96	; 0x60
   3982c:	str	r0, [fp, #-80]	; 0xffffffb0
   39830:	str	r1, [fp, #-84]	; 0xffffffac
   39834:	str	r2, [fp, #-88]	; 0xffffffa8
   39838:	str	r3, [fp, #-92]	; 0xffffffa4
   3983c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39840:	ldr	r3, [r3, #84]	; 0x54
   39844:	str	r3, [fp, #-20]	; 0xffffffec
   39848:	mov	r3, #0
   3984c:	str	r3, [fp, #-60]	; 0xffffffc4
   39850:	mov	r3, #0
   39854:	str	r3, [fp, #-16]
   39858:	ldr	r3, [fp, #-20]	; 0xffffffec
   3985c:	ldr	r2, [r3]
   39860:	ldr	r3, [fp, #-88]	; 0xffffffa8
   39864:	lsl	r3, r3, #3
   39868:	add	r3, r2, r3
   3986c:	ldr	r3, [r3]
   39870:	str	r3, [fp, #-24]	; 0xffffffe8
   39874:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39878:	ldr	r2, [r3, #120]	; 0x78
   3987c:	ldr	r3, [fp, #8]
   39880:	add	r2, r2, r3
   39884:	ldr	r3, [fp, #-84]	; 0xffffffac
   39888:	ldr	r3, [r3, #4]
   3988c:	cmp	r2, r3
   39890:	movge	r3, #1
   39894:	movlt	r3, #0
   39898:	uxtb	r3, r3
   3989c:	cmp	r3, #0
   398a0:	beq	399bc <__assert_fail@plt+0x2877c>
   398a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   398a8:	ldr	r3, [r3, #4]
   398ac:	str	r3, [fp, #-28]	; 0xffffffe4
   398b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   398b4:	ldr	r2, [r3, #120]	; 0x78
   398b8:	ldr	r3, [fp, #8]
   398bc:	add	r3, r2, r3
   398c0:	add	r3, r3, #1
   398c4:	str	r3, [fp, #-32]	; 0xffffffe0
   398c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   398cc:	movw	r3, #65535	; 0xffff
   398d0:	movt	r3, #32767	; 0x7fff
   398d4:	sub	r3, r3, r2
   398d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   398dc:	cmp	r2, r3
   398e0:	movgt	r3, #1
   398e4:	movle	r3, #0
   398e8:	uxtb	r3, r3
   398ec:	cmp	r3, #0
   398f0:	beq	398fc <__assert_fail@plt+0x286bc>
   398f4:	mov	r3, #12
   398f8:	b	39fb8 <__assert_fail@plt+0x28d78>
   398fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39904:	add	r3, r2, r3
   39908:	str	r3, [fp, #-36]	; 0xffffffdc
   3990c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39910:	cmn	r3, #-1073741823	; 0xc0000001
   39914:	movhi	r3, #1
   39918:	movls	r3, #0
   3991c:	uxtb	r3, r3
   39920:	cmp	r3, #0
   39924:	beq	39930 <__assert_fail@plt+0x286f0>
   39928:	mov	r3, #12
   3992c:	b	39fb8 <__assert_fail@plt+0x28d78>
   39930:	ldr	r3, [fp, #-84]	; 0xffffffac
   39934:	ldr	r2, [r3, #8]
   39938:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3993c:	lsl	r3, r3, #2
   39940:	mov	r1, r3
   39944:	mov	r0, r2
   39948:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3994c:	str	r0, [fp, #-40]	; 0xffffffd8
   39950:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39954:	cmp	r3, #0
   39958:	moveq	r3, #1
   3995c:	movne	r3, #0
   39960:	uxtb	r3, r3
   39964:	cmp	r3, #0
   39968:	beq	39974 <__assert_fail@plt+0x28734>
   3996c:	mov	r3, #12
   39970:	b	39fb8 <__assert_fail@plt+0x28d78>
   39974:	ldr	r3, [fp, #-84]	; 0xffffffac
   39978:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3997c:	str	r2, [r3, #8]
   39980:	ldr	r3, [fp, #-84]	; 0xffffffac
   39984:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39988:	str	r2, [r3, #4]
   3998c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39990:	lsl	r3, r3, #2
   39994:	ldr	r2, [fp, #-40]	; 0xffffffd8
   39998:	add	r0, r2, r3
   3999c:	ldr	r3, [fp, #-84]	; 0xffffffac
   399a0:	ldr	r2, [r3, #4]
   399a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   399a8:	sub	r3, r2, r3
   399ac:	lsl	r3, r3, #2
   399b0:	mov	r2, r3
   399b4:	mov	r1, #0
   399b8:	bl	1118c <memset@plt>
   399bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   399c0:	ldr	r3, [r3]
   399c4:	cmp	r3, #0
   399c8:	beq	399d8 <__assert_fail@plt+0x28798>
   399cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   399d0:	ldr	r3, [r3]
   399d4:	b	399dc <__assert_fail@plt+0x2879c>
   399d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   399dc:	str	r3, [fp, #-8]
   399e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   399e4:	ldr	r3, [r3, #100]	; 0x64
   399e8:	str	r3, [fp, #-44]	; 0xffffffd4
   399ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   399f0:	ldr	r3, [r3, #40]	; 0x28
   399f4:	str	r3, [fp, #-48]	; 0xffffffd0
   399f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   399fc:	ldr	r2, [r3, #8]
   39a00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39a04:	str	r2, [r3, #100]	; 0x64
   39a08:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39a0c:	ldr	r2, [fp, #-8]
   39a10:	str	r2, [r3, #40]	; 0x28
   39a14:	ldr	r0, [fp, #-80]	; 0xffffffb0
   39a18:	ldr	r3, [fp, #-8]
   39a1c:	sub	r1, r3, #1
   39a20:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39a24:	ldr	r3, [r3, #88]	; 0x58
   39a28:	mov	r2, r3
   39a2c:	bl	26a20 <__assert_fail@plt+0x157e0>
   39a30:	str	r0, [fp, #-52]	; 0xffffffcc
   39a34:	ldr	r2, [fp, #-8]
   39a38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39a3c:	cmp	r2, r3
   39a40:	bne	39acc <__assert_fail@plt+0x2888c>
   39a44:	sub	r3, fp, #72	; 0x48
   39a48:	ldr	r1, [fp, #-88]	; 0xffffffa8
   39a4c:	mov	r0, r3
   39a50:	bl	26ca4 <__assert_fail@plt+0x15a64>
   39a54:	mov	r3, r0
   39a58:	str	r3, [fp, #-60]	; 0xffffffc4
   39a5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39a60:	cmp	r3, #0
   39a64:	movne	r3, #1
   39a68:	moveq	r3, #0
   39a6c:	uxtb	r3, r3
   39a70:	cmp	r3, #0
   39a74:	beq	39a80 <__assert_fail@plt+0x28840>
   39a78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39a7c:	b	39fb8 <__assert_fail@plt+0x28d78>
   39a80:	sub	r1, fp, #72	; 0x48
   39a84:	ldr	r3, [fp, #12]
   39a88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39a90:	bl	3a308 <__assert_fail@plt+0x290c8>
   39a94:	mov	r3, r0
   39a98:	str	r3, [fp, #-60]	; 0xffffffc4
   39a9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39aa0:	cmp	r3, #0
   39aa4:	movne	r3, #1
   39aa8:	moveq	r3, #0
   39aac:	uxtb	r3, r3
   39ab0:	cmp	r3, #0
   39ab4:	beq	39b64 <__assert_fail@plt+0x28924>
   39ab8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39abc:	mov	r0, r3
   39ac0:	bl	13798 <__assert_fail@plt+0x2558>
   39ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39ac8:	b	39fb8 <__assert_fail@plt+0x28d78>
   39acc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39ad0:	ldr	r2, [r3, #100]	; 0x64
   39ad4:	ldr	r3, [fp, #-8]
   39ad8:	lsl	r3, r3, #2
   39adc:	add	r3, r2, r3
   39ae0:	ldr	r3, [r3]
   39ae4:	str	r3, [fp, #-16]
   39ae8:	ldr	r3, [fp, #-16]
   39aec:	cmp	r3, #0
   39af0:	beq	39b50 <__assert_fail@plt+0x28910>
   39af4:	ldr	r3, [fp, #-16]
   39af8:	ldrb	r3, [r3, #52]	; 0x34
   39afc:	and	r3, r3, #64	; 0x40
   39b00:	uxtb	r3, r3
   39b04:	cmp	r3, #0
   39b08:	beq	39b50 <__assert_fail@plt+0x28910>
   39b0c:	ldr	r3, [fp, #-16]
   39b10:	add	r2, r3, #4
   39b14:	sub	r3, fp, #72	; 0x48
   39b18:	mov	r1, r2
   39b1c:	mov	r0, r3
   39b20:	bl	26e70 <__assert_fail@plt+0x15c30>
   39b24:	mov	r3, r0
   39b28:	str	r3, [fp, #-60]	; 0xffffffc4
   39b2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39b30:	cmp	r3, #0
   39b34:	movne	r3, #1
   39b38:	moveq	r3, #0
   39b3c:	uxtb	r3, r3
   39b40:	cmp	r3, #0
   39b44:	beq	39b64 <__assert_fail@plt+0x28924>
   39b48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39b4c:	b	39fb8 <__assert_fail@plt+0x28d78>
   39b50:	sub	r3, fp, #72	; 0x48
   39b54:	mov	r2, #12
   39b58:	mov	r1, #0
   39b5c:	mov	r0, r3
   39b60:	bl	1118c <memset@plt>
   39b64:	ldr	r2, [fp, #-8]
   39b68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39b6c:	cmp	r2, r3
   39b70:	beq	39b98 <__assert_fail@plt+0x28958>
   39b74:	ldr	r3, [fp, #-16]
   39b78:	cmp	r3, #0
   39b7c:	beq	39c78 <__assert_fail@plt+0x28a38>
   39b80:	ldr	r3, [fp, #-16]
   39b84:	ldrb	r3, [r3, #52]	; 0x34
   39b88:	and	r3, r3, #64	; 0x40
   39b8c:	uxtb	r3, r3
   39b90:	cmp	r3, #0
   39b94:	beq	39c78 <__assert_fail@plt+0x28a38>
   39b98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   39b9c:	cmp	r3, #0
   39ba0:	beq	39bf8 <__assert_fail@plt+0x289b8>
   39ba4:	sub	r1, fp, #72	; 0x48
   39ba8:	ldr	r3, [fp, #12]
   39bac:	str	r3, [sp]
   39bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39bb4:	ldr	r2, [fp, #-8]
   39bb8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   39bbc:	bl	3a6f0 <__assert_fail@plt+0x294b0>
   39bc0:	mov	r3, r0
   39bc4:	str	r3, [fp, #-60]	; 0xffffffc4
   39bc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39bcc:	cmp	r3, #0
   39bd0:	movne	r3, #1
   39bd4:	moveq	r3, #0
   39bd8:	uxtb	r3, r3
   39bdc:	cmp	r3, #0
   39be0:	beq	39bf8 <__assert_fail@plt+0x289b8>
   39be4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39be8:	mov	r0, r3
   39bec:	bl	13798 <__assert_fail@plt+0x2558>
   39bf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39bf4:	b	39fb8 <__assert_fail@plt+0x28d78>
   39bf8:	sub	r2, fp, #72	; 0x48
   39bfc:	sub	r0, fp, #60	; 0x3c
   39c00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39c04:	ldr	r1, [fp, #-20]	; 0xffffffec
   39c08:	bl	287b4 <__assert_fail@plt+0x17574>
   39c0c:	str	r0, [fp, #-16]
   39c10:	ldr	r3, [fp, #-16]
   39c14:	cmp	r3, #0
   39c18:	moveq	r3, #1
   39c1c:	movne	r3, #0
   39c20:	uxtb	r3, r3
   39c24:	cmp	r3, #0
   39c28:	beq	39c5c <__assert_fail@plt+0x28a1c>
   39c2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39c30:	cmp	r3, #0
   39c34:	movne	r3, #1
   39c38:	moveq	r3, #0
   39c3c:	uxtb	r3, r3
   39c40:	cmp	r3, #0
   39c44:	beq	39c5c <__assert_fail@plt+0x28a1c>
   39c48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39c4c:	mov	r0, r3
   39c50:	bl	13798 <__assert_fail@plt+0x2558>
   39c54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39c58:	b	39fb8 <__assert_fail@plt+0x28d78>
   39c5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39c60:	ldr	r2, [r3, #100]	; 0x64
   39c64:	ldr	r3, [fp, #-8]
   39c68:	lsl	r3, r3, #2
   39c6c:	add	r3, r2, r3
   39c70:	ldr	r2, [fp, #-16]
   39c74:	str	r2, [r3]
   39c78:	mov	r3, #0
   39c7c:	str	r3, [fp, #-12]
   39c80:	b	39eec <__assert_fail@plt+0x28cac>
   39c84:	mov	r3, #0
   39c88:	str	r3, [fp, #-68]	; 0xffffffbc
   39c8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39c90:	ldr	r2, [r3, #100]	; 0x64
   39c94:	ldr	r3, [fp, #-8]
   39c98:	add	r3, r3, #1
   39c9c:	lsl	r3, r3, #2
   39ca0:	add	r3, r2, r3
   39ca4:	ldr	r3, [r3]
   39ca8:	cmp	r3, #0
   39cac:	beq	39d18 <__assert_fail@plt+0x28ad8>
   39cb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39cb4:	ldr	r2, [r3, #100]	; 0x64
   39cb8:	ldr	r3, [fp, #-8]
   39cbc:	add	r3, r3, #1
   39cc0:	lsl	r3, r3, #2
   39cc4:	add	r3, r2, r3
   39cc8:	ldr	r3, [r3]
   39ccc:	add	r2, r3, #4
   39cd0:	sub	r3, fp, #72	; 0x48
   39cd4:	mov	r1, r2
   39cd8:	mov	r0, r3
   39cdc:	bl	2779c <__assert_fail@plt+0x1655c>
   39ce0:	mov	r3, r0
   39ce4:	str	r3, [fp, #-60]	; 0xffffffc4
   39ce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39cec:	cmp	r3, #0
   39cf0:	movne	r3, #1
   39cf4:	moveq	r3, #0
   39cf8:	uxtb	r3, r3
   39cfc:	cmp	r3, #0
   39d00:	beq	39d18 <__assert_fail@plt+0x28ad8>
   39d04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39d08:	mov	r0, r3
   39d0c:	bl	13798 <__assert_fail@plt+0x2558>
   39d10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39d14:	b	39fb8 <__assert_fail@plt+0x28d78>
   39d18:	ldr	r3, [fp, #-16]
   39d1c:	cmp	r3, #0
   39d20:	beq	39d74 <__assert_fail@plt+0x28b34>
   39d24:	ldr	r3, [fp, #-16]
   39d28:	add	r2, r3, #16
   39d2c:	sub	r3, fp, #72	; 0x48
   39d30:	ldr	r1, [fp, #-8]
   39d34:	ldr	r0, [fp, #-80]	; 0xffffffb0
   39d38:	bl	39fcc <__assert_fail@plt+0x28d8c>
   39d3c:	mov	r3, r0
   39d40:	str	r3, [fp, #-60]	; 0xffffffc4
   39d44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39d48:	cmp	r3, #0
   39d4c:	movne	r3, #1
   39d50:	moveq	r3, #0
   39d54:	uxtb	r3, r3
   39d58:	cmp	r3, #0
   39d5c:	beq	39d74 <__assert_fail@plt+0x28b34>
   39d60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39d64:	mov	r0, r3
   39d68:	bl	13798 <__assert_fail@plt+0x2558>
   39d6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39d70:	b	39fb8 <__assert_fail@plt+0x28d78>
   39d74:	ldr	r3, [fp, #-8]
   39d78:	add	r3, r3, #1
   39d7c:	str	r3, [fp, #-8]
   39d80:	ldr	r3, [fp, #-68]	; 0xffffffbc
   39d84:	cmp	r3, #0
   39d88:	beq	39e2c <__assert_fail@plt+0x28bec>
   39d8c:	sub	r1, fp, #72	; 0x48
   39d90:	ldr	r3, [fp, #12]
   39d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   39d9c:	bl	3a308 <__assert_fail@plt+0x290c8>
   39da0:	mov	r3, r0
   39da4:	str	r3, [fp, #-60]	; 0xffffffc4
   39da8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39dac:	cmp	r3, #0
   39db0:	movne	r3, #1
   39db4:	moveq	r3, #0
   39db8:	uxtb	r3, r3
   39dbc:	cmp	r3, #0
   39dc0:	beq	39dd8 <__assert_fail@plt+0x28b98>
   39dc4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39dc8:	mov	r0, r3
   39dcc:	bl	13798 <__assert_fail@plt+0x2558>
   39dd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39dd4:	b	39fb8 <__assert_fail@plt+0x28d78>
   39dd8:	sub	r1, fp, #72	; 0x48
   39ddc:	ldr	r3, [fp, #12]
   39de0:	str	r3, [sp]
   39de4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39de8:	ldr	r2, [fp, #-8]
   39dec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   39df0:	bl	3a6f0 <__assert_fail@plt+0x294b0>
   39df4:	mov	r3, r0
   39df8:	str	r3, [fp, #-60]	; 0xffffffc4
   39dfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39e00:	cmp	r3, #0
   39e04:	movne	r3, #1
   39e08:	moveq	r3, #0
   39e0c:	uxtb	r3, r3
   39e10:	cmp	r3, #0
   39e14:	beq	39e2c <__assert_fail@plt+0x28bec>
   39e18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39e1c:	mov	r0, r3
   39e20:	bl	13798 <__assert_fail@plt+0x2558>
   39e24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39e28:	b	39fb8 <__assert_fail@plt+0x28d78>
   39e2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   39e30:	ldr	r3, [fp, #-8]
   39e34:	sub	r1, r3, #1
   39e38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39e3c:	ldr	r3, [r3, #88]	; 0x58
   39e40:	mov	r2, r3
   39e44:	bl	26a20 <__assert_fail@plt+0x157e0>
   39e48:	str	r0, [fp, #-52]	; 0xffffffcc
   39e4c:	sub	r2, fp, #72	; 0x48
   39e50:	sub	r0, fp, #60	; 0x3c
   39e54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39e58:	ldr	r1, [fp, #-20]	; 0xffffffec
   39e5c:	bl	287b4 <__assert_fail@plt+0x17574>
   39e60:	str	r0, [fp, #-16]
   39e64:	ldr	r3, [fp, #-16]
   39e68:	cmp	r3, #0
   39e6c:	moveq	r3, #1
   39e70:	movne	r3, #0
   39e74:	uxtb	r3, r3
   39e78:	cmp	r3, #0
   39e7c:	beq	39eb0 <__assert_fail@plt+0x28c70>
   39e80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39e84:	cmp	r3, #0
   39e88:	movne	r3, #1
   39e8c:	moveq	r3, #0
   39e90:	uxtb	r3, r3
   39e94:	cmp	r3, #0
   39e98:	beq	39eb0 <__assert_fail@plt+0x28c70>
   39e9c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39ea0:	mov	r0, r3
   39ea4:	bl	13798 <__assert_fail@plt+0x2558>
   39ea8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39eac:	b	39fb8 <__assert_fail@plt+0x28d78>
   39eb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39eb4:	ldr	r2, [r3, #100]	; 0x64
   39eb8:	ldr	r3, [fp, #-8]
   39ebc:	lsl	r3, r3, #2
   39ec0:	add	r3, r2, r3
   39ec4:	ldr	r2, [fp, #-16]
   39ec8:	str	r2, [r3]
   39ecc:	ldr	r3, [fp, #-16]
   39ed0:	cmp	r3, #0
   39ed4:	bne	39ee4 <__assert_fail@plt+0x28ca4>
   39ed8:	ldr	r3, [fp, #-12]
   39edc:	add	r3, r3, #1
   39ee0:	b	39ee8 <__assert_fail@plt+0x28ca8>
   39ee4:	mov	r3, #0
   39ee8:	str	r3, [fp, #-12]
   39eec:	ldr	r2, [fp, #-8]
   39ef0:	ldr	r3, [fp, #8]
   39ef4:	cmp	r2, r3
   39ef8:	bge	39f10 <__assert_fail@plt+0x28cd0>
   39efc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39f00:	ldr	r3, [r3, #120]	; 0x78
   39f04:	ldr	r2, [fp, #-12]
   39f08:	cmp	r2, r3
   39f0c:	ble	39c84 <__assert_fail@plt+0x28a44>
   39f10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39f14:	mov	r0, r3
   39f18:	bl	13798 <__assert_fail@plt+0x2558>
   39f1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39f20:	ldr	r2, [r3, #100]	; 0x64
   39f24:	ldr	r3, [fp, #8]
   39f28:	lsl	r3, r3, #2
   39f2c:	add	r3, r2, r3
   39f30:	ldr	r3, [r3]
   39f34:	cmp	r3, #0
   39f38:	beq	39f5c <__assert_fail@plt+0x28d1c>
   39f3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39f40:	ldr	r2, [r3, #100]	; 0x64
   39f44:	ldr	r3, [fp, #8]
   39f48:	lsl	r3, r3, #2
   39f4c:	add	r3, r2, r3
   39f50:	ldr	r3, [r3]
   39f54:	add	r3, r3, #4
   39f58:	b	39f60 <__assert_fail@plt+0x28d20>
   39f5c:	mov	r3, #0
   39f60:	str	r3, [fp, #-56]	; 0xffffffc8
   39f64:	ldr	r3, [fp, #-84]	; 0xffffffac
   39f68:	ldr	r2, [fp, #-8]
   39f6c:	str	r2, [r3]
   39f70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39f74:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39f78:	str	r2, [r3, #100]	; 0x64
   39f7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39f80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   39f84:	str	r2, [r3, #40]	; 0x28
   39f88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39f8c:	cmp	r3, #0
   39f90:	beq	39fb4 <__assert_fail@plt+0x28d74>
   39f94:	ldr	r1, [fp, #4]
   39f98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   39f9c:	bl	28024 <__assert_fail@plt+0x16de4>
   39fa0:	mov	r3, r0
   39fa4:	cmp	r3, #0
   39fa8:	beq	39fb4 <__assert_fail@plt+0x28d74>
   39fac:	mov	r3, #0
   39fb0:	b	39fb8 <__assert_fail@plt+0x28d78>
   39fb4:	mov	r3, #1
   39fb8:	mov	r0, r3
   39fbc:	sub	sp, fp, #4
   39fc0:	ldr	fp, [sp]
   39fc4:	add	sp, sp, #4
   39fc8:	pop	{pc}		; (ldr pc, [sp], #4)
   39fcc:	str	r4, [sp, #-12]!
   39fd0:	str	fp, [sp, #4]
   39fd4:	str	lr, [sp, #8]
   39fd8:	add	fp, sp, #8
   39fdc:	sub	sp, sp, #68	; 0x44
   39fe0:	str	r0, [fp, #-64]	; 0xffffffc0
   39fe4:	str	r1, [fp, #-68]	; 0xffffffbc
   39fe8:	str	r2, [fp, #-72]	; 0xffffffb8
   39fec:	str	r3, [fp, #-76]	; 0xffffffb4
   39ff0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39ff4:	ldr	r3, [r3, #84]	; 0x54
   39ff8:	str	r3, [fp, #-24]	; 0xffffffe8
   39ffc:	mov	r3, #0
   3a000:	str	r3, [fp, #-48]	; 0xffffffd0
   3a004:	sub	r3, fp, #60	; 0x3c
   3a008:	mov	r2, #12
   3a00c:	mov	r1, #0
   3a010:	mov	r0, r3
   3a014:	bl	1118c <memset@plt>
   3a018:	mov	r3, #0
   3a01c:	str	r3, [fp, #-16]
   3a020:	b	3a2cc <__assert_fail@plt+0x2908c>
   3a024:	mov	r3, #0
   3a028:	str	r3, [fp, #-20]	; 0xffffffec
   3a02c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3a030:	ldr	r2, [r3, #8]
   3a034:	ldr	r3, [fp, #-16]
   3a038:	lsl	r3, r3, #2
   3a03c:	add	r3, r2, r3
   3a040:	ldr	r3, [r3]
   3a044:	str	r3, [fp, #-28]	; 0xffffffe4
   3a048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a04c:	ldr	r2, [r3]
   3a050:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a054:	lsl	r3, r3, #3
   3a058:	add	r3, r2, r3
   3a05c:	ldrb	r3, [r3, #4]
   3a060:	and	r3, r3, #8
   3a064:	cmp	r3, #0
   3a068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a06c:	ldr	r2, [r3]
   3a070:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a074:	lsl	r3, r3, #3
   3a078:	add	r3, r2, r3
   3a07c:	ldrb	r3, [r3, #6]
   3a080:	and	r3, r3, #16
   3a084:	uxtb	r3, r3
   3a088:	cmp	r3, #0
   3a08c:	beq	3a230 <__assert_fail@plt+0x28ff0>
   3a090:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3a094:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3a098:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3a09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a0a0:	bl	3c018 <__assert_fail@plt+0x2add8>
   3a0a4:	str	r0, [fp, #-20]	; 0xffffffec
   3a0a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0ac:	cmp	r3, #1
   3a0b0:	ble	3a230 <__assert_fail@plt+0x28ff0>
   3a0b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a0b8:	ldr	r2, [r3, #12]
   3a0bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a0c0:	lsl	r3, r3, #2
   3a0c4:	add	r3, r2, r3
   3a0c8:	ldr	r3, [r3]
   3a0cc:	str	r3, [fp, #-32]	; 0xffffffe0
   3a0d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3a0d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0d8:	add	r3, r2, r3
   3a0dc:	str	r3, [fp, #-36]	; 0xffffffdc
   3a0e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a0e4:	ldr	r2, [r3, #100]	; 0x64
   3a0e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a0ec:	lsl	r3, r3, #2
   3a0f0:	add	r3, r2, r3
   3a0f4:	ldr	r3, [r3]
   3a0f8:	str	r3, [fp, #-40]	; 0xffffffd8
   3a0fc:	mov	r3, #0
   3a100:	str	r3, [fp, #-56]	; 0xffffffc8
   3a104:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a108:	cmp	r3, #0
   3a10c:	beq	3a160 <__assert_fail@plt+0x28f20>
   3a110:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a114:	add	r2, r3, #4
   3a118:	sub	r3, fp, #60	; 0x3c
   3a11c:	mov	r1, r2
   3a120:	mov	r0, r3
   3a124:	bl	2779c <__assert_fail@plt+0x1655c>
   3a128:	mov	r3, r0
   3a12c:	str	r3, [fp, #-48]	; 0xffffffd0
   3a130:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a134:	cmp	r3, #0
   3a138:	movne	r3, #1
   3a13c:	moveq	r3, #0
   3a140:	uxtb	r3, r3
   3a144:	cmp	r3, #0
   3a148:	beq	3a160 <__assert_fail@plt+0x28f20>
   3a14c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a150:	mov	r0, r3
   3a154:	bl	13798 <__assert_fail@plt+0x2558>
   3a158:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a15c:	b	3a2f0 <__assert_fail@plt+0x290b0>
   3a160:	sub	r3, fp, #60	; 0x3c
   3a164:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a168:	mov	r0, r3
   3a16c:	bl	27bfc <__assert_fail@plt+0x169bc>
   3a170:	mov	r3, r0
   3a174:	strb	r3, [fp, #-41]	; 0xffffffd7
   3a178:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3a17c:	eor	r3, r3, #1
   3a180:	uxtb	r3, r3
   3a184:	cmp	r3, #0
   3a188:	beq	3a1a0 <__assert_fail@plt+0x28f60>
   3a18c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a190:	mov	r0, r3
   3a194:	bl	13798 <__assert_fail@plt+0x2558>
   3a198:	mov	r3, #12
   3a19c:	b	3a2f0 <__assert_fail@plt+0x290b0>
   3a1a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a1a4:	ldr	r2, [r3, #100]	; 0x64
   3a1a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a1ac:	lsl	r3, r3, #2
   3a1b0:	add	r4, r2, r3
   3a1b4:	sub	r2, fp, #60	; 0x3c
   3a1b8:	sub	r3, fp, #48	; 0x30
   3a1bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3a1c0:	mov	r0, r3
   3a1c4:	bl	2863c <__assert_fail@plt+0x173fc>
   3a1c8:	mov	r3, r0
   3a1cc:	str	r3, [r4]
   3a1d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a1d4:	ldr	r2, [r3, #100]	; 0x64
   3a1d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a1dc:	lsl	r3, r3, #2
   3a1e0:	add	r3, r2, r3
   3a1e4:	ldr	r3, [r3]
   3a1e8:	cmp	r3, #0
   3a1ec:	moveq	r3, #1
   3a1f0:	movne	r3, #0
   3a1f4:	uxtb	r3, r3
   3a1f8:	cmp	r3, #0
   3a1fc:	beq	3a230 <__assert_fail@plt+0x28ff0>
   3a200:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a204:	cmp	r3, #0
   3a208:	movne	r3, #1
   3a20c:	moveq	r3, #0
   3a210:	uxtb	r3, r3
   3a214:	cmp	r3, #0
   3a218:	beq	3a230 <__assert_fail@plt+0x28ff0>
   3a21c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a220:	mov	r0, r3
   3a224:	bl	13798 <__assert_fail@plt+0x2558>
   3a228:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a22c:	b	3a2f0 <__assert_fail@plt+0x290b0>
   3a230:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a234:	cmp	r3, #0
   3a238:	bne	3a26c <__assert_fail@plt+0x2902c>
   3a23c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a240:	ldr	r2, [r3]
   3a244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a248:	lsl	r3, r3, #3
   3a24c:	add	r3, r2, r3
   3a250:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3a254:	mov	r1, r3
   3a258:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3a25c:	bl	3c588 <__assert_fail@plt+0x2b348>
   3a260:	mov	r3, r0
   3a264:	cmp	r3, #0
   3a268:	beq	3a2c0 <__assert_fail@plt+0x29080>
   3a26c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a270:	ldr	r2, [r3, #12]
   3a274:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a278:	lsl	r3, r3, #2
   3a27c:	add	r3, r2, r3
   3a280:	ldr	r3, [r3]
   3a284:	mov	r1, r3
   3a288:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3a28c:	bl	27bfc <__assert_fail@plt+0x169bc>
   3a290:	mov	r3, r0
   3a294:	strb	r3, [fp, #-41]	; 0xffffffd7
   3a298:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3a29c:	eor	r3, r3, #1
   3a2a0:	uxtb	r3, r3
   3a2a4:	cmp	r3, #0
   3a2a8:	beq	3a2c0 <__assert_fail@plt+0x29080>
   3a2ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a2b0:	mov	r0, r3
   3a2b4:	bl	13798 <__assert_fail@plt+0x2558>
   3a2b8:	mov	r3, #12
   3a2bc:	b	3a2f0 <__assert_fail@plt+0x290b0>
   3a2c0:	ldr	r3, [fp, #-16]
   3a2c4:	add	r3, r3, #1
   3a2c8:	str	r3, [fp, #-16]
   3a2cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3a2d0:	ldr	r3, [r3, #4]
   3a2d4:	ldr	r2, [fp, #-16]
   3a2d8:	cmp	r2, r3
   3a2dc:	blt	3a024 <__assert_fail@plt+0x28de4>
   3a2e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a2e4:	mov	r0, r3
   3a2e8:	bl	13798 <__assert_fail@plt+0x2558>
   3a2ec:	mov	r3, #0
   3a2f0:	mov	r0, r3
   3a2f4:	sub	sp, fp, #8
   3a2f8:	ldr	r4, [sp]
   3a2fc:	ldr	fp, [sp, #4]
   3a300:	add	sp, sp, #8
   3a304:	pop	{pc}		; (ldr pc, [sp], #4)
   3a308:	str	fp, [sp, #-8]!
   3a30c:	str	lr, [sp, #4]
   3a310:	add	fp, sp, #4
   3a314:	sub	sp, sp, #56	; 0x38
   3a318:	str	r0, [fp, #-40]	; 0xffffffd8
   3a31c:	str	r1, [fp, #-44]	; 0xffffffd4
   3a320:	str	r2, [fp, #-48]	; 0xffffffd0
   3a324:	str	r3, [fp, #-52]	; 0xffffffcc
   3a328:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a32c:	ldr	r3, [r3, #4]
   3a330:	cmp	r3, #0
   3a334:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a338:	ldr	r2, [r3, #4]
   3a33c:	sub	r3, fp, #36	; 0x24
   3a340:	mov	r1, r2
   3a344:	mov	r0, r3
   3a348:	bl	26c14 <__assert_fail@plt+0x159d4>
   3a34c:	str	r0, [fp, #-12]
   3a350:	ldr	r3, [fp, #-12]
   3a354:	cmp	r3, #0
   3a358:	movne	r3, #1
   3a35c:	moveq	r3, #0
   3a360:	uxtb	r3, r3
   3a364:	cmp	r3, #0
   3a368:	beq	3a374 <__assert_fail@plt+0x29134>
   3a36c:	ldr	r3, [fp, #-12]
   3a370:	b	3a4c8 <__assert_fail@plt+0x29288>
   3a374:	mov	r3, #0
   3a378:	str	r3, [fp, #-8]
   3a37c:	b	3a484 <__assert_fail@plt+0x29244>
   3a380:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a384:	ldr	r2, [r3, #8]
   3a388:	ldr	r3, [fp, #-8]
   3a38c:	lsl	r3, r3, #2
   3a390:	add	r3, r2, r3
   3a394:	ldr	r3, [r3]
   3a398:	str	r3, [fp, #-16]
   3a39c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a3a0:	ldr	r1, [r3, #24]
   3a3a4:	ldr	r2, [fp, #-16]
   3a3a8:	mov	r3, r2
   3a3ac:	lsl	r3, r3, #1
   3a3b0:	add	r3, r3, r2
   3a3b4:	lsl	r3, r3, #2
   3a3b8:	add	r3, r1, r3
   3a3bc:	str	r3, [fp, #-20]	; 0xffffffec
   3a3c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a3c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3a3c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a3cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a3d0:	bl	39758 <__assert_fail@plt+0x28518>
   3a3d4:	str	r0, [fp, #-24]	; 0xffffffe8
   3a3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a3dc:	cmn	r3, #1
   3a3e0:	bne	3a428 <__assert_fail@plt+0x291e8>
   3a3e4:	sub	r3, fp, #36	; 0x24
   3a3e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a3ec:	mov	r0, r3
   3a3f0:	bl	2779c <__assert_fail@plt+0x1655c>
   3a3f4:	str	r0, [fp, #-12]
   3a3f8:	ldr	r3, [fp, #-12]
   3a3fc:	cmp	r3, #0
   3a400:	movne	r3, #1
   3a404:	moveq	r3, #0
   3a408:	uxtb	r3, r3
   3a40c:	cmp	r3, #0
   3a410:	beq	3a478 <__assert_fail@plt+0x29238>
   3a414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a418:	mov	r0, r3
   3a41c:	bl	13798 <__assert_fail@plt+0x2558>
   3a420:	ldr	r3, [fp, #-12]
   3a424:	b	3a4c8 <__assert_fail@plt+0x29288>
   3a428:	sub	r1, fp, #36	; 0x24
   3a42c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a430:	str	r3, [sp]
   3a434:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a438:	ldr	r2, [fp, #-16]
   3a43c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a440:	bl	3a4dc <__assert_fail@plt+0x2929c>
   3a444:	str	r0, [fp, #-12]
   3a448:	ldr	r3, [fp, #-12]
   3a44c:	cmp	r3, #0
   3a450:	movne	r3, #1
   3a454:	moveq	r3, #0
   3a458:	uxtb	r3, r3
   3a45c:	cmp	r3, #0
   3a460:	beq	3a478 <__assert_fail@plt+0x29238>
   3a464:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a468:	mov	r0, r3
   3a46c:	bl	13798 <__assert_fail@plt+0x2558>
   3a470:	ldr	r3, [fp, #-12]
   3a474:	b	3a4c8 <__assert_fail@plt+0x29288>
   3a478:	ldr	r3, [fp, #-8]
   3a47c:	add	r3, r3, #1
   3a480:	str	r3, [fp, #-8]
   3a484:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a488:	ldr	r3, [r3, #4]
   3a48c:	ldr	r2, [fp, #-8]
   3a490:	cmp	r2, r3
   3a494:	blt	3a380 <__assert_fail@plt+0x29140>
   3a498:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a49c:	ldr	r3, [r3, #8]
   3a4a0:	mov	r0, r3
   3a4a4:	bl	13798 <__assert_fail@plt+0x2558>
   3a4a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a4ac:	mov	r0, r3
   3a4b0:	sub	r1, fp, #36	; 0x24
   3a4b4:	ldrd	r2, [r1]
   3a4b8:	strd	r2, [r0]
   3a4bc:	ldr	r3, [r1, #8]
   3a4c0:	str	r3, [r0, #8]
   3a4c4:	mov	r3, #0
   3a4c8:	mov	r0, r3
   3a4cc:	sub	sp, fp, #4
   3a4d0:	ldr	fp, [sp]
   3a4d4:	add	sp, sp, #4
   3a4d8:	pop	{pc}		; (ldr pc, [sp], #4)
   3a4dc:	str	fp, [sp, #-8]!
   3a4e0:	str	lr, [sp, #4]
   3a4e4:	add	fp, sp, #4
   3a4e8:	sub	sp, sp, #40	; 0x28
   3a4ec:	str	r0, [fp, #-24]	; 0xffffffe8
   3a4f0:	str	r1, [fp, #-28]	; 0xffffffe4
   3a4f4:	str	r2, [fp, #-32]	; 0xffffffe0
   3a4f8:	str	r3, [fp, #-36]	; 0xffffffdc
   3a4fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a500:	str	r3, [fp, #-8]
   3a504:	b	3a6b0 <__assert_fail@plt+0x29470>
   3a508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a50c:	ldr	r2, [r3]
   3a510:	ldr	r3, [fp, #-8]
   3a514:	lsl	r3, r3, #3
   3a518:	add	r3, r2, r3
   3a51c:	ldrb	r3, [r3, #4]
   3a520:	mov	r2, r3
   3a524:	ldr	r3, [fp, #4]
   3a528:	cmp	r3, r2
   3a52c:	bne	3a590 <__assert_fail@plt+0x29350>
   3a530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a534:	ldr	r2, [r3]
   3a538:	ldr	r3, [fp, #-8]
   3a53c:	lsl	r3, r3, #3
   3a540:	add	r3, r2, r3
   3a544:	ldr	r3, [r3]
   3a548:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a54c:	cmp	r2, r3
   3a550:	bne	3a590 <__assert_fail@plt+0x29350>
   3a554:	ldr	r3, [fp, #4]
   3a558:	cmp	r3, #9
   3a55c:	bne	3a6cc <__assert_fail@plt+0x2948c>
   3a560:	ldr	r1, [fp, #-8]
   3a564:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a568:	bl	27bfc <__assert_fail@plt+0x169bc>
   3a56c:	mov	r3, r0
   3a570:	strb	r3, [fp, #-9]
   3a574:	ldrb	r3, [fp, #-9]
   3a578:	eor	r3, r3, #1
   3a57c:	uxtb	r3, r3
   3a580:	cmp	r3, #0
   3a584:	beq	3a6cc <__assert_fail@plt+0x2948c>
   3a588:	mov	r3, #12
   3a58c:	b	3a6dc <__assert_fail@plt+0x2949c>
   3a590:	ldr	r1, [fp, #-8]
   3a594:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a598:	bl	27bfc <__assert_fail@plt+0x169bc>
   3a59c:	mov	r3, r0
   3a5a0:	strb	r3, [fp, #-9]
   3a5a4:	ldrb	r3, [fp, #-9]
   3a5a8:	eor	r3, r3, #1
   3a5ac:	uxtb	r3, r3
   3a5b0:	cmp	r3, #0
   3a5b4:	beq	3a5c0 <__assert_fail@plt+0x29380>
   3a5b8:	mov	r3, #12
   3a5bc:	b	3a6dc <__assert_fail@plt+0x2949c>
   3a5c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a5c4:	ldr	r1, [r3, #20]
   3a5c8:	ldr	r2, [fp, #-8]
   3a5cc:	mov	r3, r2
   3a5d0:	lsl	r3, r3, #1
   3a5d4:	add	r3, r3, r2
   3a5d8:	lsl	r3, r3, #2
   3a5dc:	add	r3, r1, r3
   3a5e0:	ldr	r3, [r3, #4]
   3a5e4:	cmp	r3, #0
   3a5e8:	beq	3a6d4 <__assert_fail@plt+0x29494>
   3a5ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a5f0:	ldr	r1, [r3, #20]
   3a5f4:	ldr	r2, [fp, #-8]
   3a5f8:	mov	r3, r2
   3a5fc:	lsl	r3, r3, #1
   3a600:	add	r3, r3, r2
   3a604:	lsl	r3, r3, #2
   3a608:	add	r3, r1, r3
   3a60c:	ldr	r3, [r3, #4]
   3a610:	cmp	r3, #2
   3a614:	bne	3a684 <__assert_fail@plt+0x29444>
   3a618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a61c:	ldr	r1, [r3, #20]
   3a620:	ldr	r2, [fp, #-8]
   3a624:	mov	r3, r2
   3a628:	lsl	r3, r3, #1
   3a62c:	add	r3, r3, r2
   3a630:	lsl	r3, r3, #2
   3a634:	add	r3, r1, r3
   3a638:	ldr	r3, [r3, #8]
   3a63c:	add	r3, r3, #4
   3a640:	ldr	r2, [r3]
   3a644:	ldr	r3, [fp, #4]
   3a648:	str	r3, [sp]
   3a64c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a650:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3a654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a658:	bl	3a4dc <__assert_fail@plt+0x2929c>
   3a65c:	str	r0, [fp, #-16]
   3a660:	ldr	r3, [fp, #-16]
   3a664:	cmp	r3, #0
   3a668:	movne	r3, #1
   3a66c:	moveq	r3, #0
   3a670:	uxtb	r3, r3
   3a674:	cmp	r3, #0
   3a678:	beq	3a684 <__assert_fail@plt+0x29444>
   3a67c:	ldr	r3, [fp, #-16]
   3a680:	b	3a6dc <__assert_fail@plt+0x2949c>
   3a684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a688:	ldr	r1, [r3, #20]
   3a68c:	ldr	r2, [fp, #-8]
   3a690:	mov	r3, r2
   3a694:	lsl	r3, r3, #1
   3a698:	add	r3, r3, r2
   3a69c:	lsl	r3, r3, #2
   3a6a0:	add	r3, r1, r3
   3a6a4:	ldr	r3, [r3, #8]
   3a6a8:	ldr	r3, [r3]
   3a6ac:	str	r3, [fp, #-8]
   3a6b0:	ldr	r1, [fp, #-8]
   3a6b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a6b8:	bl	28024 <__assert_fail@plt+0x16de4>
   3a6bc:	mov	r3, r0
   3a6c0:	cmp	r3, #0
   3a6c4:	beq	3a508 <__assert_fail@plt+0x292c8>
   3a6c8:	b	3a6d8 <__assert_fail@plt+0x29498>
   3a6cc:	nop	{0}
   3a6d0:	b	3a6d8 <__assert_fail@plt+0x29498>
   3a6d4:	nop	{0}
   3a6d8:	mov	r3, #0
   3a6dc:	mov	r0, r3
   3a6e0:	sub	sp, fp, #4
   3a6e4:	ldr	fp, [sp]
   3a6e8:	add	sp, sp, #4
   3a6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3a6f0:	str	r4, [sp, #-12]!
   3a6f4:	str	fp, [sp, #4]
   3a6f8:	str	lr, [sp, #8]
   3a6fc:	add	fp, sp, #8
   3a700:	sub	sp, sp, #84	; 0x54
   3a704:	str	r0, [fp, #-80]	; 0xffffffb0
   3a708:	str	r1, [fp, #-84]	; 0xffffffac
   3a70c:	str	r2, [fp, #-88]	; 0xffffffa8
   3a710:	str	r3, [fp, #-92]	; 0xffffffa4
   3a714:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a718:	ldr	r3, [r3, #84]	; 0x54
   3a71c:	str	r3, [fp, #-20]	; 0xffffffec
   3a720:	ldr	r1, [fp, #-88]	; 0xffffffa8
   3a724:	ldr	r0, [fp, #-80]	; 0xffffffb0
   3a728:	bl	3cf84 <__assert_fail@plt+0x2bd44>
   3a72c:	str	r0, [fp, #-24]	; 0xffffffe8
   3a730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a734:	cmn	r3, #1
   3a738:	bne	3a744 <__assert_fail@plt+0x29504>
   3a73c:	mov	r3, #0
   3a740:	b	3ab14 <__assert_fail@plt+0x298d4>
   3a744:	nop	{0}
   3a748:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a74c:	ldr	r1, [r3, #116]	; 0x74
   3a750:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a754:	mov	r3, r2
   3a758:	lsl	r3, r3, #1
   3a75c:	add	r3, r3, r2
   3a760:	lsl	r3, r3, #3
   3a764:	add	r3, r1, r3
   3a768:	str	r3, [fp, #-16]
   3a76c:	ldr	r3, [fp, #-16]
   3a770:	ldr	r3, [r3]
   3a774:	mov	r1, r3
   3a778:	ldr	r0, [fp, #-84]	; 0xffffffac
   3a77c:	bl	28024 <__assert_fail@plt+0x16de4>
   3a780:	mov	r3, r0
   3a784:	cmp	r3, #0
   3a788:	beq	3aae4 <__assert_fail@plt+0x298a4>
   3a78c:	ldr	r3, [fp, #-16]
   3a790:	ldr	r2, [r3, #12]
   3a794:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3a798:	add	r2, r2, r3
   3a79c:	ldr	r3, [fp, #-16]
   3a7a0:	ldr	r3, [r3, #8]
   3a7a4:	sub	r3, r2, r3
   3a7a8:	str	r3, [fp, #-28]	; 0xffffffe4
   3a7ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3a7b0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3a7b4:	cmp	r2, r3
   3a7b8:	bne	3a8f8 <__assert_fail@plt+0x296b8>
   3a7bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a7c0:	ldr	r2, [r3, #20]
   3a7c4:	ldr	r3, [fp, #-16]
   3a7c8:	ldr	r3, [r3]
   3a7cc:	mov	r1, r3
   3a7d0:	mov	r3, r1
   3a7d4:	lsl	r3, r3, #1
   3a7d8:	add	r3, r3, r1
   3a7dc:	lsl	r3, r3, #2
   3a7e0:	add	r3, r2, r3
   3a7e4:	ldr	r3, [r3, #8]
   3a7e8:	ldr	r3, [r3]
   3a7ec:	str	r3, [fp, #-32]	; 0xffffffe0
   3a7f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a7f4:	ldr	r0, [fp, #-84]	; 0xffffffac
   3a7f8:	bl	28024 <__assert_fail@plt+0x16de4>
   3a7fc:	mov	r3, r0
   3a800:	cmp	r3, #0
   3a804:	bne	3aaec <__assert_fail@plt+0x298ac>
   3a808:	sub	r3, fp, #60	; 0x3c
   3a80c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a810:	mov	r0, r3
   3a814:	bl	26ca4 <__assert_fail@plt+0x15a64>
   3a818:	mov	r3, r0
   3a81c:	str	r3, [fp, #-48]	; 0xffffffd0
   3a820:	sub	r1, fp, #60	; 0x3c
   3a824:	ldr	r3, [fp, #4]
   3a828:	ldr	r2, [fp, #-92]	; 0xffffffa4
   3a82c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a830:	bl	3a308 <__assert_fail@plt+0x290c8>
   3a834:	str	r0, [fp, #-36]	; 0xffffffdc
   3a838:	sub	r3, fp, #60	; 0x3c
   3a83c:	mov	r1, r3
   3a840:	ldr	r0, [fp, #-84]	; 0xffffffac
   3a844:	bl	2779c <__assert_fail@plt+0x1655c>
   3a848:	str	r0, [fp, #-40]	; 0xffffffd8
   3a84c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a850:	mov	r0, r3
   3a854:	bl	13798 <__assert_fail@plt+0x2558>
   3a858:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a85c:	cmp	r3, #0
   3a860:	movne	r3, #1
   3a864:	moveq	r3, #0
   3a868:	uxtb	r3, r3
   3a86c:	cmp	r3, #0
   3a870:	bne	3a890 <__assert_fail@plt+0x29650>
   3a874:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a878:	cmp	r3, #0
   3a87c:	movne	r3, #1
   3a880:	moveq	r3, #0
   3a884:	uxtb	r3, r3
   3a888:	cmp	r3, #0
   3a88c:	beq	3a898 <__assert_fail@plt+0x29658>
   3a890:	mov	r3, #1
   3a894:	b	3a89c <__assert_fail@plt+0x2965c>
   3a898:	mov	r3, #0
   3a89c:	cmp	r3, #0
   3a8a0:	bne	3a8c0 <__assert_fail@plt+0x29680>
   3a8a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a8a8:	cmp	r3, #0
   3a8ac:	movne	r3, #1
   3a8b0:	moveq	r3, #0
   3a8b4:	uxtb	r3, r3
   3a8b8:	cmp	r3, #0
   3a8bc:	beq	3a748 <__assert_fail@plt+0x29508>
   3a8c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a8c4:	cmp	r3, #0
   3a8c8:	bne	3a8e8 <__assert_fail@plt+0x296a8>
   3a8cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a8d0:	cmp	r3, #0
   3a8d4:	beq	3a8e0 <__assert_fail@plt+0x296a0>
   3a8d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a8dc:	b	3a8ec <__assert_fail@plt+0x296ac>
   3a8e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a8e4:	b	3a8ec <__assert_fail@plt+0x296ac>
   3a8e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a8ec:	str	r3, [fp, #-48]	; 0xffffffd0
   3a8f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a8f4:	b	3ab14 <__assert_fail@plt+0x298d4>
   3a8f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a8fc:	ldr	r2, [r3, #12]
   3a900:	ldr	r3, [fp, #-16]
   3a904:	ldr	r3, [r3]
   3a908:	lsl	r3, r3, #2
   3a90c:	add	r3, r2, r3
   3a910:	ldr	r3, [r3]
   3a914:	str	r3, [fp, #-32]	; 0xffffffe0
   3a918:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a91c:	ldr	r2, [r3, #100]	; 0x64
   3a920:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a924:	lsl	r3, r3, #2
   3a928:	add	r3, r2, r3
   3a92c:	ldr	r3, [r3]
   3a930:	cmp	r3, #0
   3a934:	beq	3aa18 <__assert_fail@plt+0x297d8>
   3a938:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a93c:	ldr	r2, [r3, #100]	; 0x64
   3a940:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a944:	lsl	r3, r3, #2
   3a948:	add	r3, r2, r3
   3a94c:	ldr	r3, [r3]
   3a950:	add	r3, r3, #4
   3a954:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a958:	mov	r0, r3
   3a95c:	bl	28024 <__assert_fail@plt+0x16de4>
   3a960:	mov	r3, r0
   3a964:	cmp	r3, #0
   3a968:	bne	3aaf4 <__assert_fail@plt+0x298b4>
   3a96c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a970:	ldr	r2, [r3, #100]	; 0x64
   3a974:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a978:	lsl	r3, r3, #2
   3a97c:	add	r3, r2, r3
   3a980:	ldr	r3, [r3]
   3a984:	add	r2, r3, #4
   3a988:	sub	r3, fp, #72	; 0x48
   3a98c:	mov	r1, r2
   3a990:	mov	r0, r3
   3a994:	bl	26e70 <__assert_fail@plt+0x15c30>
   3a998:	mov	r3, r0
   3a99c:	str	r3, [fp, #-48]	; 0xffffffd0
   3a9a0:	sub	r3, fp, #72	; 0x48
   3a9a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a9a8:	mov	r0, r3
   3a9ac:	bl	27bfc <__assert_fail@plt+0x169bc>
   3a9b0:	mov	r3, r0
   3a9b4:	strb	r3, [fp, #-41]	; 0xffffffd7
   3a9b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a9bc:	cmp	r3, #0
   3a9c0:	movne	r3, #1
   3a9c4:	moveq	r3, #0
   3a9c8:	uxtb	r3, r3
   3a9cc:	cmp	r3, #0
   3a9d0:	bne	3a9e8 <__assert_fail@plt+0x297a8>
   3a9d4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3a9d8:	eor	r3, r3, #1
   3a9dc:	uxtb	r3, r3
   3a9e0:	cmp	r3, #0
   3a9e4:	beq	3aa54 <__assert_fail@plt+0x29814>
   3a9e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a9ec:	mov	r0, r3
   3a9f0:	bl	13798 <__assert_fail@plt+0x2558>
   3a9f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a9f8:	cmp	r3, #0
   3a9fc:	beq	3aa08 <__assert_fail@plt+0x297c8>
   3aa00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aa04:	b	3aa0c <__assert_fail@plt+0x297cc>
   3aa08:	mov	r3, #12
   3aa0c:	str	r3, [fp, #-48]	; 0xffffffd0
   3aa10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aa14:	b	3ab14 <__assert_fail@plt+0x298d4>
   3aa18:	sub	r3, fp, #72	; 0x48
   3aa1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3aa20:	mov	r0, r3
   3aa24:	bl	26ca4 <__assert_fail@plt+0x15a64>
   3aa28:	mov	r3, r0
   3aa2c:	str	r3, [fp, #-48]	; 0xffffffd0
   3aa30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aa34:	cmp	r3, #0
   3aa38:	movne	r3, #1
   3aa3c:	moveq	r3, #0
   3aa40:	uxtb	r3, r3
   3aa44:	cmp	r3, #0
   3aa48:	beq	3aa54 <__assert_fail@plt+0x29814>
   3aa4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aa50:	b	3ab14 <__assert_fail@plt+0x298d4>
   3aa54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3aa58:	ldr	r2, [r3, #100]	; 0x64
   3aa5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aa60:	lsl	r3, r3, #2
   3aa64:	add	r4, r2, r3
   3aa68:	sub	r2, fp, #72	; 0x48
   3aa6c:	sub	r3, fp, #48	; 0x30
   3aa70:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aa74:	mov	r0, r3
   3aa78:	bl	2863c <__assert_fail@plt+0x173fc>
   3aa7c:	mov	r3, r0
   3aa80:	str	r3, [r4]
   3aa84:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3aa88:	mov	r0, r3
   3aa8c:	bl	13798 <__assert_fail@plt+0x2558>
   3aa90:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3aa94:	ldr	r2, [r3, #100]	; 0x64
   3aa98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aa9c:	lsl	r3, r3, #2
   3aaa0:	add	r3, r2, r3
   3aaa4:	ldr	r3, [r3]
   3aaa8:	cmp	r3, #0
   3aaac:	moveq	r3, #1
   3aab0:	movne	r3, #0
   3aab4:	uxtb	r3, r3
   3aab8:	cmp	r3, #0
   3aabc:	beq	3aaf8 <__assert_fail@plt+0x298b8>
   3aac0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aac4:	cmp	r3, #0
   3aac8:	movne	r3, #1
   3aacc:	moveq	r3, #0
   3aad0:	uxtb	r3, r3
   3aad4:	cmp	r3, #0
   3aad8:	beq	3aaf8 <__assert_fail@plt+0x298b8>
   3aadc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aae0:	b	3ab14 <__assert_fail@plt+0x298d4>
   3aae4:	nop	{0}
   3aae8:	b	3aaf8 <__assert_fail@plt+0x298b8>
   3aaec:	nop	{0}
   3aaf0:	b	3aaf8 <__assert_fail@plt+0x298b8>
   3aaf4:	nop	{0}
   3aaf8:	ldr	r3, [fp, #-16]
   3aafc:	add	r2, r3, #24
   3ab00:	str	r2, [fp, #-16]
   3ab04:	ldrb	r3, [r3, #20]
   3ab08:	cmp	r3, #0
   3ab0c:	bne	3a76c <__assert_fail@plt+0x2952c>
   3ab10:	mov	r3, #0
   3ab14:	mov	r0, r3
   3ab18:	sub	sp, fp, #8
   3ab1c:	ldr	r4, [sp]
   3ab20:	ldr	fp, [sp, #4]
   3ab24:	add	sp, sp, #8
   3ab28:	pop	{pc}		; (ldr pc, [sp], #4)
   3ab2c:	str	fp, [sp, #-8]!
   3ab30:	str	lr, [sp, #4]
   3ab34:	add	fp, sp, #4
   3ab38:	sub	sp, sp, #14400	; 0x3840
   3ab3c:	sub	sp, sp, #32
   3ab40:	sub	r3, fp, #12288	; 0x3000
   3ab44:	sub	r3, r3, #4
   3ab48:	str	r0, [r3, #-2140]	; 0xfffff7a4
   3ab4c:	sub	r3, fp, #12288	; 0x3000
   3ab50:	sub	r3, r3, #4
   3ab54:	str	r1, [r3, #-2144]	; 0xfffff7a0
   3ab58:	mov	r3, #0
   3ab5c:	strb	r3, [fp, #-17]	; 0xffffffef
   3ab60:	sub	r3, fp, #12288	; 0x3000
   3ab64:	sub	r3, r3, #4
   3ab68:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3ab6c:	mov	r2, #0
   3ab70:	str	r2, [r3, #44]	; 0x2c
   3ab74:	sub	r3, fp, #12288	; 0x3000
   3ab78:	sub	r3, r3, #4
   3ab7c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3ab80:	ldr	r2, [r3, #44]	; 0x2c
   3ab84:	sub	r3, fp, #12288	; 0x3000
   3ab88:	sub	r3, r3, #4
   3ab8c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3ab90:	str	r2, [r3, #48]	; 0x30
   3ab94:	sub	r3, fp, #14400	; 0x3840
   3ab98:	sub	r3, r3, #4
   3ab9c:	sub	r3, r3, #20
   3aba0:	sub	r2, fp, #6208	; 0x1840
   3aba4:	sub	r2, r2, #4
   3aba8:	sub	r2, r2, #20
   3abac:	sub	r1, fp, #12288	; 0x3000
   3abb0:	sub	r1, r1, #4
   3abb4:	sub	r0, fp, #12288	; 0x3000
   3abb8:	sub	r0, r0, #4
   3abbc:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   3abc0:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   3abc4:	bl	3b5d8 <__assert_fail@plt+0x2a398>
   3abc8:	str	r0, [fp, #-36]	; 0xffffffdc
   3abcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3abd0:	cmp	r3, #0
   3abd4:	movle	r3, #1
   3abd8:	movgt	r3, #0
   3abdc:	uxtb	r3, r3
   3abe0:	cmp	r3, #0
   3abe4:	beq	3ac58 <__assert_fail@plt+0x29a18>
   3abe8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3abec:	cmp	r3, #0
   3abf0:	bne	3ac50 <__assert_fail@plt+0x29a10>
   3abf4:	mov	r1, #256	; 0x100
   3abf8:	mov	r0, #4
   3abfc:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   3ac00:	mov	r3, r0
   3ac04:	mov	r2, r3
   3ac08:	sub	r3, fp, #12288	; 0x3000
   3ac0c:	sub	r3, r3, #4
   3ac10:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3ac14:	str	r2, [r3, #44]	; 0x2c
   3ac18:	sub	r3, fp, #12288	; 0x3000
   3ac1c:	sub	r3, r3, #4
   3ac20:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3ac24:	ldr	r3, [r3, #44]	; 0x2c
   3ac28:	cmp	r3, #0
   3ac2c:	moveq	r3, #1
   3ac30:	movne	r3, #0
   3ac34:	uxtb	r3, r3
   3ac38:	cmp	r3, #0
   3ac3c:	beq	3ac48 <__assert_fail@plt+0x29a08>
   3ac40:	mov	r3, #0
   3ac44:	b	3b5c4 <__assert_fail@plt+0x2a384>
   3ac48:	mov	r3, #1
   3ac4c:	b	3b5c4 <__assert_fail@plt+0x2a384>
   3ac50:	mov	r3, #0
   3ac54:	b	3b5c4 <__assert_fail@plt+0x2a384>
   3ac58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ac5c:	add	r2, r3, #1
   3ac60:	sub	r3, fp, #3120	; 0xc30
   3ac64:	sub	r3, r3, #4
   3ac68:	sub	r3, r3, #4
   3ac6c:	mov	r1, r2
   3ac70:	mov	r0, r3
   3ac74:	bl	26c14 <__assert_fail@plt+0x159d4>
   3ac78:	mov	r3, r0
   3ac7c:	str	r3, [fp, #-44]	; 0xffffffd4
   3ac80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ac84:	cmp	r3, #0
   3ac88:	movne	r3, #1
   3ac8c:	moveq	r3, #0
   3ac90:	uxtb	r3, r3
   3ac94:	cmp	r3, #0
   3ac98:	beq	3ad38 <__assert_fail@plt+0x29af8>
   3ac9c:	nop	{0}
   3aca0:	b	3acc8 <__assert_fail@plt+0x29a88>
   3aca4:	nop	{0}
   3aca8:	b	3acc8 <__assert_fail@plt+0x29a88>
   3acac:	nop	{0}
   3acb0:	b	3acc8 <__assert_fail@plt+0x29a88>
   3acb4:	nop	{0}
   3acb8:	b	3acc8 <__assert_fail@plt+0x29a88>
   3acbc:	nop	{0}
   3acc0:	b	3acc8 <__assert_fail@plt+0x29a88>
   3acc4:	nop	{0}
   3acc8:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   3accc:	mov	r0, r3
   3acd0:	bl	13798 <__assert_fail@plt+0x2558>
   3acd4:	mov	r3, #0
   3acd8:	str	r3, [fp, #-8]
   3acdc:	b	3ad20 <__assert_fail@plt+0x29ae0>
   3ace0:	ldr	r2, [fp, #-8]
   3ace4:	mov	r3, r2
   3ace8:	lsl	r3, r3, #1
   3acec:	add	r3, r3, r2
   3acf0:	lsl	r3, r3, #2
   3acf4:	mov	r2, r3
   3acf8:	sub	r3, fp, #6208	; 0x1840
   3acfc:	sub	r3, r3, #4
   3ad00:	sub	r3, r3, #20
   3ad04:	add	r3, r3, r2
   3ad08:	ldr	r3, [r3, #8]
   3ad0c:	mov	r0, r3
   3ad10:	bl	13798 <__assert_fail@plt+0x2558>
   3ad14:	ldr	r3, [fp, #-8]
   3ad18:	add	r3, r3, #1
   3ad1c:	str	r3, [fp, #-8]
   3ad20:	ldr	r2, [fp, #-8]
   3ad24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ad28:	cmp	r2, r3
   3ad2c:	blt	3ace0 <__assert_fail@plt+0x29aa0>
   3ad30:	mov	r3, #0
   3ad34:	b	3b5c4 <__assert_fail@plt+0x2a384>
   3ad38:	sub	r3, fp, #3152	; 0xc50
   3ad3c:	sub	r3, r3, #4
   3ad40:	sub	r3, r3, #4
   3ad44:	mov	r0, r3
   3ad48:	bl	23dec <__assert_fail@plt+0x12bac>
   3ad4c:	mov	r3, #0
   3ad50:	str	r3, [fp, #-8]
   3ad54:	b	3b120 <__assert_fail@plt+0x29ee0>
   3ad58:	mov	r3, #0
   3ad5c:	str	r3, [fp, #-3124]	; 0xfffff3cc
   3ad60:	mov	r3, #0
   3ad64:	str	r3, [fp, #-12]
   3ad68:	b	3ae48 <__assert_fail@plt+0x29c08>
   3ad6c:	sub	r3, fp, #12288	; 0x3000
   3ad70:	sub	r3, r3, #4
   3ad74:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   3ad78:	ldr	r1, [r3, #12]
   3ad7c:	sub	r3, fp, #4096	; 0x1000
   3ad80:	sub	r3, r3, #4
   3ad84:	mov	r0, r3
   3ad88:	ldr	r2, [fp, #-8]
   3ad8c:	mov	r3, r2
   3ad90:	lsl	r3, r3, #1
   3ad94:	add	r3, r3, r2
   3ad98:	lsl	r3, r3, #2
   3ad9c:	add	r3, r0, r3
   3ada0:	sub	r3, r3, #2112	; 0x840
   3ada4:	sub	r3, r3, #12
   3ada8:	ldr	r2, [r3]
   3adac:	ldr	r3, [fp, #-12]
   3adb0:	lsl	r3, r3, #2
   3adb4:	add	r3, r2, r3
   3adb8:	ldr	r3, [r3]
   3adbc:	lsl	r3, r3, #2
   3adc0:	add	r3, r1, r3
   3adc4:	ldr	r3, [r3]
   3adc8:	str	r3, [fp, #-40]	; 0xffffffd8
   3adcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3add0:	cmn	r3, #1
   3add4:	beq	3ae3c <__assert_fail@plt+0x29bfc>
   3add8:	sub	r3, fp, #12288	; 0x3000
   3addc:	sub	r3, r3, #4
   3ade0:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   3ade4:	ldr	r1, [r3, #24]
   3ade8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3adec:	mov	r3, r2
   3adf0:	lsl	r3, r3, #1
   3adf4:	add	r3, r3, r2
   3adf8:	lsl	r3, r3, #2
   3adfc:	add	r2, r1, r3
   3ae00:	sub	r3, fp, #3120	; 0xc30
   3ae04:	sub	r3, r3, #4
   3ae08:	sub	r3, r3, #4
   3ae0c:	mov	r1, r2
   3ae10:	mov	r0, r3
   3ae14:	bl	2779c <__assert_fail@plt+0x1655c>
   3ae18:	mov	r3, r0
   3ae1c:	str	r3, [fp, #-44]	; 0xffffffd4
   3ae20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ae24:	cmp	r3, #0
   3ae28:	movne	r3, #1
   3ae2c:	moveq	r3, #0
   3ae30:	uxtb	r3, r3
   3ae34:	cmp	r3, #0
   3ae38:	bne	3aca4 <__assert_fail@plt+0x29a64>
   3ae3c:	ldr	r3, [fp, #-12]
   3ae40:	add	r3, r3, #1
   3ae44:	str	r3, [fp, #-12]
   3ae48:	sub	r3, fp, #4096	; 0x1000
   3ae4c:	sub	r3, r3, #4
   3ae50:	mov	r1, r3
   3ae54:	ldr	r2, [fp, #-8]
   3ae58:	mov	r3, r2
   3ae5c:	lsl	r3, r3, #1
   3ae60:	add	r3, r3, r2
   3ae64:	lsl	r3, r3, #2
   3ae68:	add	r3, r1, r3
   3ae6c:	sub	r3, r3, #2128	; 0x850
   3ae70:	ldr	r3, [r3]
   3ae74:	ldr	r2, [fp, #-12]
   3ae78:	cmp	r2, r3
   3ae7c:	blt	3ad6c <__assert_fail@plt+0x29b2c>
   3ae80:	sub	r2, fp, #3120	; 0xc30
   3ae84:	sub	r2, r2, #4
   3ae88:	sub	r2, r2, #4
   3ae8c:	sub	r3, fp, #12288	; 0x3000
   3ae90:	sub	r3, r3, #4
   3ae94:	mov	r1, r3
   3ae98:	sub	r0, fp, #44	; 0x2c
   3ae9c:	mov	r3, #0
   3aea0:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   3aea4:	bl	287b4 <__assert_fail@plt+0x17574>
   3aea8:	mov	r2, r0
   3aeac:	ldr	r3, [fp, #-8]
   3aeb0:	lsl	r3, r3, #2
   3aeb4:	sub	r1, fp, #4
   3aeb8:	add	r3, r1, r3
   3aebc:	str	r2, [r3, #-1064]	; 0xfffffbd8
   3aec0:	ldr	r3, [fp, #-8]
   3aec4:	lsl	r3, r3, #2
   3aec8:	sub	r2, fp, #4
   3aecc:	add	r3, r2, r3
   3aed0:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   3aed4:	cmp	r3, #0
   3aed8:	moveq	r3, #1
   3aedc:	movne	r3, #0
   3aee0:	uxtb	r3, r3
   3aee4:	cmp	r3, #0
   3aee8:	beq	3af08 <__assert_fail@plt+0x29cc8>
   3aeec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3aef0:	cmp	r3, #0
   3aef4:	movne	r3, #1
   3aef8:	moveq	r3, #0
   3aefc:	uxtb	r3, r3
   3af00:	cmp	r3, #0
   3af04:	bne	3acac <__assert_fail@plt+0x29a6c>
   3af08:	ldr	r3, [fp, #-8]
   3af0c:	lsl	r3, r3, #2
   3af10:	sub	r2, fp, #4
   3af14:	add	r3, r2, r3
   3af18:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   3af1c:	ldrb	r3, [r3, #52]	; 0x34
   3af20:	bic	r3, r3, #127	; 0x7f
   3af24:	uxtb	r3, r3
   3af28:	cmp	r3, #0
   3af2c:	beq	3b094 <__assert_fail@plt+0x29e54>
   3af30:	sub	r2, fp, #3120	; 0xc30
   3af34:	sub	r2, r2, #4
   3af38:	sub	r2, r2, #4
   3af3c:	sub	r3, fp, #12288	; 0x3000
   3af40:	sub	r3, r3, #4
   3af44:	mov	r1, r3
   3af48:	sub	r0, fp, #44	; 0x2c
   3af4c:	mov	r3, #1
   3af50:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   3af54:	bl	287b4 <__assert_fail@plt+0x17574>
   3af58:	mov	r2, r0
   3af5c:	ldr	r3, [fp, #-8]
   3af60:	lsl	r3, r3, #2
   3af64:	sub	r1, fp, #4
   3af68:	add	r3, r1, r3
   3af6c:	str	r2, [r3, #-2088]	; 0xfffff7d8
   3af70:	ldr	r3, [fp, #-8]
   3af74:	lsl	r3, r3, #2
   3af78:	sub	r2, fp, #4
   3af7c:	add	r3, r2, r3
   3af80:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   3af84:	cmp	r3, #0
   3af88:	moveq	r3, #1
   3af8c:	movne	r3, #0
   3af90:	uxtb	r3, r3
   3af94:	cmp	r3, #0
   3af98:	beq	3afb8 <__assert_fail@plt+0x29d78>
   3af9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3afa0:	cmp	r3, #0
   3afa4:	movne	r3, #1
   3afa8:	moveq	r3, #0
   3afac:	uxtb	r3, r3
   3afb0:	cmp	r3, #0
   3afb4:	bne	3acb4 <__assert_fail@plt+0x29a74>
   3afb8:	ldr	r3, [fp, #-8]
   3afbc:	lsl	r3, r3, #2
   3afc0:	sub	r2, fp, #4
   3afc4:	add	r3, r2, r3
   3afc8:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   3afcc:	ldr	r3, [fp, #-8]
   3afd0:	lsl	r3, r3, #2
   3afd4:	sub	r1, fp, #4
   3afd8:	add	r3, r1, r3
   3afdc:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   3afe0:	cmp	r2, r3
   3afe4:	beq	3b008 <__assert_fail@plt+0x29dc8>
   3afe8:	sub	r3, fp, #12288	; 0x3000
   3afec:	sub	r3, r3, #4
   3aff0:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   3aff4:	ldr	r3, [r3, #92]	; 0x5c
   3aff8:	cmp	r3, #1
   3affc:	ble	3b008 <__assert_fail@plt+0x29dc8>
   3b000:	mov	r3, #1
   3b004:	strb	r3, [fp, #-17]	; 0xffffffef
   3b008:	sub	r2, fp, #3120	; 0xc30
   3b00c:	sub	r2, r2, #4
   3b010:	sub	r2, r2, #4
   3b014:	sub	r3, fp, #12288	; 0x3000
   3b018:	sub	r3, r3, #4
   3b01c:	mov	r1, r3
   3b020:	sub	r0, fp, #44	; 0x2c
   3b024:	mov	r3, #2
   3b028:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   3b02c:	bl	287b4 <__assert_fail@plt+0x17574>
   3b030:	mov	r2, r0
   3b034:	ldr	r3, [fp, #-8]
   3b038:	lsl	r3, r3, #2
   3b03c:	sub	r1, fp, #4
   3b040:	add	r3, r1, r3
   3b044:	str	r2, [r3, #-3112]	; 0xfffff3d8
   3b048:	ldr	r3, [fp, #-8]
   3b04c:	lsl	r3, r3, #2
   3b050:	sub	r2, fp, #4
   3b054:	add	r3, r2, r3
   3b058:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   3b05c:	cmp	r3, #0
   3b060:	moveq	r3, #1
   3b064:	movne	r3, #0
   3b068:	uxtb	r3, r3
   3b06c:	cmp	r3, #0
   3b070:	beq	3b0e4 <__assert_fail@plt+0x29ea4>
   3b074:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b078:	cmp	r3, #0
   3b07c:	movne	r3, #1
   3b080:	moveq	r3, #0
   3b084:	uxtb	r3, r3
   3b088:	cmp	r3, #0
   3b08c:	beq	3b0e4 <__assert_fail@plt+0x29ea4>
   3b090:	b	3acc8 <__assert_fail@plt+0x29a88>
   3b094:	ldr	r3, [fp, #-8]
   3b098:	lsl	r3, r3, #2
   3b09c:	sub	r2, fp, #4
   3b0a0:	add	r3, r2, r3
   3b0a4:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   3b0a8:	ldr	r3, [fp, #-8]
   3b0ac:	lsl	r3, r3, #2
   3b0b0:	sub	r1, fp, #4
   3b0b4:	add	r3, r1, r3
   3b0b8:	str	r2, [r3, #-2088]	; 0xfffff7d8
   3b0bc:	ldr	r3, [fp, #-8]
   3b0c0:	lsl	r3, r3, #2
   3b0c4:	sub	r2, fp, #4
   3b0c8:	add	r3, r2, r3
   3b0cc:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   3b0d0:	ldr	r3, [fp, #-8]
   3b0d4:	lsl	r3, r3, #2
   3b0d8:	sub	r1, fp, #4
   3b0dc:	add	r3, r1, r3
   3b0e0:	str	r2, [r3, #-3112]	; 0xfffff3d8
   3b0e4:	sub	r3, fp, #14400	; 0x3840
   3b0e8:	sub	r3, r3, #4
   3b0ec:	sub	r3, r3, #20
   3b0f0:	ldr	r2, [fp, #-8]
   3b0f4:	lsl	r2, r2, #5
   3b0f8:	add	r2, r3, r2
   3b0fc:	sub	r3, fp, #3152	; 0xc50
   3b100:	sub	r3, r3, #4
   3b104:	sub	r3, r3, #4
   3b108:	mov	r1, r2
   3b10c:	mov	r0, r3
   3b110:	bl	23f08 <__assert_fail@plt+0x12cc8>
   3b114:	ldr	r3, [fp, #-8]
   3b118:	add	r3, r3, #1
   3b11c:	str	r3, [fp, #-8]
   3b120:	ldr	r2, [fp, #-8]
   3b124:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b128:	cmp	r2, r3
   3b12c:	blt	3ad58 <__assert_fail@plt+0x29b18>
   3b130:	ldrb	r3, [fp, #-17]	; 0xffffffef
   3b134:	cmp	r3, #0
   3b138:	bne	3b2f4 <__assert_fail@plt+0x2a0b4>
   3b13c:	mov	r1, #256	; 0x100
   3b140:	mov	r0, #4
   3b144:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   3b148:	mov	r3, r0
   3b14c:	mov	r2, r3
   3b150:	sub	r3, fp, #12288	; 0x3000
   3b154:	sub	r3, r3, #4
   3b158:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3b15c:	str	r2, [r3, #44]	; 0x2c
   3b160:	sub	r3, fp, #12288	; 0x3000
   3b164:	sub	r3, r3, #4
   3b168:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3b16c:	ldr	r3, [r3, #44]	; 0x2c
   3b170:	str	r3, [fp, #-32]	; 0xffffffe0
   3b174:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b178:	cmp	r3, #0
   3b17c:	moveq	r3, #1
   3b180:	movne	r3, #0
   3b184:	uxtb	r3, r3
   3b188:	cmp	r3, #0
   3b18c:	bne	3acbc <__assert_fail@plt+0x29a7c>
   3b190:	mov	r3, #0
   3b194:	str	r3, [fp, #-8]
   3b198:	b	3b2e4 <__assert_fail@plt+0x2a0a4>
   3b19c:	ldr	r3, [fp, #-8]
   3b1a0:	lsl	r3, r3, #5
   3b1a4:	str	r3, [fp, #-16]
   3b1a8:	ldr	r3, [fp, #-8]
   3b1ac:	lsl	r3, r3, #2
   3b1b0:	sub	r2, fp, #4
   3b1b4:	add	r3, r2, r3
   3b1b8:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   3b1bc:	str	r3, [fp, #-24]	; 0xffffffe8
   3b1c0:	mov	r3, #1
   3b1c4:	str	r3, [fp, #-28]	; 0xffffffe4
   3b1c8:	b	3b2cc <__assert_fail@plt+0x2a08c>
   3b1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b1d0:	and	r3, r3, #1
   3b1d4:	cmp	r3, #0
   3b1d8:	beq	3b2a8 <__assert_fail@plt+0x2a068>
   3b1dc:	mov	r3, #0
   3b1e0:	str	r3, [fp, #-12]
   3b1e4:	b	3b1f4 <__assert_fail@plt+0x29fb4>
   3b1e8:	ldr	r3, [fp, #-12]
   3b1ec:	add	r3, r3, #1
   3b1f0:	str	r3, [fp, #-12]
   3b1f4:	sub	r3, fp, #12288	; 0x3000
   3b1f8:	sub	r3, r3, #4
   3b1fc:	mov	r1, r3
   3b200:	ldr	r3, [fp, #-12]
   3b204:	lsl	r2, r3, #3
   3b208:	ldr	r3, [fp, #-8]
   3b20c:	add	r3, r2, r3
   3b210:	lsl	r3, r3, #2
   3b214:	add	r3, r1, r3
   3b218:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   3b21c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b220:	and	r3, r3, r2
   3b224:	cmp	r3, #0
   3b228:	beq	3b1e8 <__assert_fail@plt+0x29fa8>
   3b22c:	sub	r3, fp, #12288	; 0x3000
   3b230:	sub	r3, r3, #4
   3b234:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   3b238:	ldr	r2, [fp, #-8]
   3b23c:	add	r2, r2, #24
   3b240:	ldr	r2, [r3, r2, lsl #2]
   3b244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b248:	and	r3, r3, r2
   3b24c:	cmp	r3, #0
   3b250:	beq	3b280 <__assert_fail@plt+0x2a040>
   3b254:	ldr	r3, [fp, #-16]
   3b258:	lsl	r3, r3, #2
   3b25c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b260:	add	r2, r2, r3
   3b264:	ldr	r3, [fp, #-12]
   3b268:	lsl	r3, r3, #2
   3b26c:	sub	r1, fp, #4
   3b270:	add	r3, r1, r3
   3b274:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   3b278:	str	r3, [r2]
   3b27c:	b	3b2a8 <__assert_fail@plt+0x2a068>
   3b280:	ldr	r3, [fp, #-16]
   3b284:	lsl	r3, r3, #2
   3b288:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b28c:	add	r2, r2, r3
   3b290:	ldr	r3, [fp, #-12]
   3b294:	lsl	r3, r3, #2
   3b298:	sub	r1, fp, #4
   3b29c:	add	r3, r1, r3
   3b2a0:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   3b2a4:	str	r3, [r2]
   3b2a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b2ac:	lsl	r3, r3, #1
   3b2b0:	str	r3, [fp, #-28]	; 0xffffffe4
   3b2b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b2b8:	lsr	r3, r3, #1
   3b2bc:	str	r3, [fp, #-24]	; 0xffffffe8
   3b2c0:	ldr	r3, [fp, #-16]
   3b2c4:	add	r3, r3, #1
   3b2c8:	str	r3, [fp, #-16]
   3b2cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b2d0:	cmp	r3, #0
   3b2d4:	bne	3b1cc <__assert_fail@plt+0x29f8c>
   3b2d8:	ldr	r3, [fp, #-8]
   3b2dc:	add	r3, r3, #1
   3b2e0:	str	r3, [fp, #-8]
   3b2e4:	ldr	r3, [fp, #-8]
   3b2e8:	cmp	r3, #7
   3b2ec:	ble	3b19c <__assert_fail@plt+0x29f5c>
   3b2f0:	b	3b480 <__assert_fail@plt+0x2a240>
   3b2f4:	mov	r1, #512	; 0x200
   3b2f8:	mov	r0, #4
   3b2fc:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   3b300:	mov	r3, r0
   3b304:	mov	r2, r3
   3b308:	sub	r3, fp, #12288	; 0x3000
   3b30c:	sub	r3, r3, #4
   3b310:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3b314:	str	r2, [r3, #48]	; 0x30
   3b318:	sub	r3, fp, #12288	; 0x3000
   3b31c:	sub	r3, r3, #4
   3b320:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3b324:	ldr	r3, [r3, #48]	; 0x30
   3b328:	str	r3, [fp, #-32]	; 0xffffffe0
   3b32c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b330:	cmp	r3, #0
   3b334:	moveq	r3, #1
   3b338:	movne	r3, #0
   3b33c:	uxtb	r3, r3
   3b340:	cmp	r3, #0
   3b344:	bne	3acc4 <__assert_fail@plt+0x29a84>
   3b348:	mov	r3, #0
   3b34c:	str	r3, [fp, #-8]
   3b350:	b	3b474 <__assert_fail@plt+0x2a234>
   3b354:	ldr	r3, [fp, #-8]
   3b358:	lsl	r3, r3, #5
   3b35c:	str	r3, [fp, #-16]
   3b360:	ldr	r3, [fp, #-8]
   3b364:	lsl	r3, r3, #2
   3b368:	sub	r2, fp, #4
   3b36c:	add	r3, r2, r3
   3b370:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   3b374:	str	r3, [fp, #-24]	; 0xffffffe8
   3b378:	mov	r3, #1
   3b37c:	str	r3, [fp, #-28]	; 0xffffffe4
   3b380:	b	3b45c <__assert_fail@plt+0x2a21c>
   3b384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b388:	and	r3, r3, #1
   3b38c:	cmp	r3, #0
   3b390:	beq	3b438 <__assert_fail@plt+0x2a1f8>
   3b394:	mov	r3, #0
   3b398:	str	r3, [fp, #-12]
   3b39c:	b	3b3ac <__assert_fail@plt+0x2a16c>
   3b3a0:	ldr	r3, [fp, #-12]
   3b3a4:	add	r3, r3, #1
   3b3a8:	str	r3, [fp, #-12]
   3b3ac:	sub	r3, fp, #12288	; 0x3000
   3b3b0:	sub	r3, r3, #4
   3b3b4:	mov	r1, r3
   3b3b8:	ldr	r3, [fp, #-12]
   3b3bc:	lsl	r2, r3, #3
   3b3c0:	ldr	r3, [fp, #-8]
   3b3c4:	add	r3, r2, r3
   3b3c8:	lsl	r3, r3, #2
   3b3cc:	add	r3, r1, r3
   3b3d0:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   3b3d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b3d8:	and	r3, r3, r2
   3b3dc:	cmp	r3, #0
   3b3e0:	beq	3b3a0 <__assert_fail@plt+0x2a160>
   3b3e4:	ldr	r3, [fp, #-16]
   3b3e8:	lsl	r3, r3, #2
   3b3ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b3f0:	add	r2, r2, r3
   3b3f4:	ldr	r3, [fp, #-12]
   3b3f8:	lsl	r3, r3, #2
   3b3fc:	sub	r1, fp, #4
   3b400:	add	r3, r1, r3
   3b404:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   3b408:	str	r3, [r2]
   3b40c:	ldr	r3, [fp, #-16]
   3b410:	add	r3, r3, #256	; 0x100
   3b414:	lsl	r3, r3, #2
   3b418:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b41c:	add	r2, r2, r3
   3b420:	ldr	r3, [fp, #-12]
   3b424:	lsl	r3, r3, #2
   3b428:	sub	r1, fp, #4
   3b42c:	add	r3, r1, r3
   3b430:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   3b434:	str	r3, [r2]
   3b438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b43c:	lsl	r3, r3, #1
   3b440:	str	r3, [fp, #-28]	; 0xffffffe4
   3b444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b448:	lsr	r3, r3, #1
   3b44c:	str	r3, [fp, #-24]	; 0xffffffe8
   3b450:	ldr	r3, [fp, #-16]
   3b454:	add	r3, r3, #1
   3b458:	str	r3, [fp, #-16]
   3b45c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b460:	cmp	r3, #0
   3b464:	bne	3b384 <__assert_fail@plt+0x2a144>
   3b468:	ldr	r3, [fp, #-8]
   3b46c:	add	r3, r3, #1
   3b470:	str	r3, [fp, #-8]
   3b474:	ldr	r3, [fp, #-8]
   3b478:	cmp	r3, #7
   3b47c:	ble	3b354 <__assert_fail@plt+0x2a114>
   3b480:	sub	r3, fp, #3152	; 0xc50
   3b484:	sub	r3, r3, #4
   3b488:	sub	r3, r3, #4
   3b48c:	mov	r1, #10
   3b490:	mov	r0, r3
   3b494:	bl	23d74 <__assert_fail@plt+0x12b34>
   3b498:	mov	r3, r0
   3b49c:	cmp	r3, #0
   3b4a0:	beq	3b558 <__assert_fail@plt+0x2a318>
   3b4a4:	mov	r3, #0
   3b4a8:	str	r3, [fp, #-12]
   3b4ac:	b	3b540 <__assert_fail@plt+0x2a300>
   3b4b0:	sub	r3, fp, #14400	; 0x3840
   3b4b4:	sub	r3, r3, #4
   3b4b8:	sub	r3, r3, #20
   3b4bc:	ldr	r2, [fp, #-12]
   3b4c0:	lsl	r2, r2, #5
   3b4c4:	add	r3, r3, r2
   3b4c8:	mov	r1, #10
   3b4cc:	mov	r0, r3
   3b4d0:	bl	23d74 <__assert_fail@plt+0x12b34>
   3b4d4:	mov	r3, r0
   3b4d8:	cmp	r3, #0
   3b4dc:	beq	3b534 <__assert_fail@plt+0x2a2f4>
   3b4e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b4e4:	add	r2, r3, #40	; 0x28
   3b4e8:	ldr	r3, [fp, #-12]
   3b4ec:	lsl	r3, r3, #2
   3b4f0:	sub	r1, fp, #4
   3b4f4:	add	r3, r1, r3
   3b4f8:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   3b4fc:	str	r3, [r2]
   3b500:	ldrb	r3, [fp, #-17]	; 0xffffffef
   3b504:	cmp	r3, #0
   3b508:	beq	3b554 <__assert_fail@plt+0x2a314>
   3b50c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b510:	add	r3, r3, #1056	; 0x420
   3b514:	add	r3, r3, #8
   3b518:	ldr	r2, [fp, #-12]
   3b51c:	lsl	r2, r2, #2
   3b520:	sub	r1, fp, #4
   3b524:	add	r2, r1, r2
   3b528:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   3b52c:	str	r2, [r3]
   3b530:	b	3b554 <__assert_fail@plt+0x2a314>
   3b534:	ldr	r3, [fp, #-12]
   3b538:	add	r3, r3, #1
   3b53c:	str	r3, [fp, #-12]
   3b540:	ldr	r2, [fp, #-12]
   3b544:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b548:	cmp	r2, r3
   3b54c:	blt	3b4b0 <__assert_fail@plt+0x2a270>
   3b550:	b	3b558 <__assert_fail@plt+0x2a318>
   3b554:	nop	{0}
   3b558:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   3b55c:	mov	r0, r3
   3b560:	bl	13798 <__assert_fail@plt+0x2558>
   3b564:	mov	r3, #0
   3b568:	str	r3, [fp, #-8]
   3b56c:	b	3b5b0 <__assert_fail@plt+0x2a370>
   3b570:	ldr	r2, [fp, #-8]
   3b574:	mov	r3, r2
   3b578:	lsl	r3, r3, #1
   3b57c:	add	r3, r3, r2
   3b580:	lsl	r3, r3, #2
   3b584:	mov	r2, r3
   3b588:	sub	r3, fp, #6208	; 0x1840
   3b58c:	sub	r3, r3, #4
   3b590:	sub	r3, r3, #20
   3b594:	add	r3, r3, r2
   3b598:	ldr	r3, [r3, #8]
   3b59c:	mov	r0, r3
   3b5a0:	bl	13798 <__assert_fail@plt+0x2558>
   3b5a4:	ldr	r3, [fp, #-8]
   3b5a8:	add	r3, r3, #1
   3b5ac:	str	r3, [fp, #-8]
   3b5b0:	ldr	r2, [fp, #-8]
   3b5b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b5b8:	cmp	r2, r3
   3b5bc:	blt	3b570 <__assert_fail@plt+0x2a330>
   3b5c0:	mov	r3, #1
   3b5c4:	mov	r0, r3
   3b5c8:	sub	sp, fp, #4
   3b5cc:	ldr	fp, [sp]
   3b5d0:	add	sp, sp, #4
   3b5d4:	pop	{pc}		; (ldr pc, [sp], #4)
   3b5d8:	str	fp, [sp, #-8]!
   3b5dc:	str	lr, [sp, #4]
   3b5e0:	add	fp, sp, #4
   3b5e4:	sub	sp, sp, #176	; 0xb0
   3b5e8:	str	r0, [fp, #-168]	; 0xffffff58
   3b5ec:	str	r1, [fp, #-172]	; 0xffffff54
   3b5f0:	str	r2, [fp, #-176]	; 0xffffff50
   3b5f4:	str	r3, [fp, #-180]	; 0xffffff4c
   3b5f8:	ldr	r3, [fp, #-172]	; 0xffffff54
   3b5fc:	add	r3, r3, #4
   3b600:	str	r3, [fp, #-44]	; 0xffffffd4
   3b604:	sub	r3, fp, #100	; 0x64
   3b608:	mov	r0, r3
   3b60c:	bl	23dec <__assert_fail@plt+0x12bac>
   3b610:	mov	r3, #0
   3b614:	str	r3, [fp, #-20]	; 0xffffffec
   3b618:	mov	r3, #0
   3b61c:	str	r3, [fp, #-8]
   3b620:	b	3bf74 <__assert_fail@plt+0x2ad34>
   3b624:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b628:	ldr	r2, [r3]
   3b62c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b630:	ldr	r1, [r3, #8]
   3b634:	ldr	r3, [fp, #-8]
   3b638:	lsl	r3, r3, #2
   3b63c:	add	r3, r1, r3
   3b640:	ldr	r3, [r3]
   3b644:	lsl	r3, r3, #3
   3b648:	add	r3, r2, r3
   3b64c:	str	r3, [fp, #-48]	; 0xffffffd0
   3b650:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b654:	ldrb	r3, [r3, #4]
   3b658:	str	r3, [fp, #-52]	; 0xffffffcc
   3b65c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b660:	ldr	r3, [r3, #4]
   3b664:	ubfx	r3, r3, #8, #10
   3b668:	uxth	r3, r3
   3b66c:	str	r3, [fp, #-56]	; 0xffffffc8
   3b670:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b674:	cmp	r3, #1
   3b678:	bne	3b69c <__assert_fail@plt+0x2a45c>
   3b67c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b680:	ldrb	r3, [r3]
   3b684:	mov	r2, r3
   3b688:	sub	r3, fp, #100	; 0x64
   3b68c:	mov	r1, r2
   3b690:	mov	r0, r3
   3b694:	bl	23c60 <__assert_fail@plt+0x12a20>
   3b698:	b	3b7bc <__assert_fail@plt+0x2a57c>
   3b69c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b6a0:	cmp	r3, #3
   3b6a4:	bne	3b6c4 <__assert_fail@plt+0x2a484>
   3b6a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b6ac:	ldr	r2, [r3]
   3b6b0:	sub	r3, fp, #100	; 0x64
   3b6b4:	mov	r1, r2
   3b6b8:	mov	r0, r3
   3b6bc:	bl	23f08 <__assert_fail@plt+0x12cc8>
   3b6c0:	b	3b7bc <__assert_fail@plt+0x2a57c>
   3b6c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b6c8:	cmp	r3, #5
   3b6cc:	bne	3b754 <__assert_fail@plt+0x2a514>
   3b6d0:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b6d4:	ldr	r3, [r3, #92]	; 0x5c
   3b6d8:	cmp	r3, #1
   3b6dc:	ble	3b6fc <__assert_fail@plt+0x2a4bc>
   3b6e0:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b6e4:	ldr	r2, [r3, #60]	; 0x3c
   3b6e8:	sub	r3, fp, #100	; 0x64
   3b6ec:	mov	r1, r2
   3b6f0:	mov	r0, r3
   3b6f4:	bl	23f08 <__assert_fail@plt+0x12cc8>
   3b6f8:	b	3b708 <__assert_fail@plt+0x2a4c8>
   3b6fc:	sub	r3, fp, #100	; 0x64
   3b700:	mov	r0, r3
   3b704:	bl	23e24 <__assert_fail@plt+0x12be4>
   3b708:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b70c:	ldr	r3, [r3, #128]	; 0x80
   3b710:	and	r3, r3, #64	; 0x40
   3b714:	cmp	r3, #0
   3b718:	bne	3b72c <__assert_fail@plt+0x2a4ec>
   3b71c:	sub	r3, fp, #100	; 0x64
   3b720:	mov	r1, #10
   3b724:	mov	r0, r3
   3b728:	bl	23ce8 <__assert_fail@plt+0x12aa8>
   3b72c:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b730:	ldr	r3, [r3, #128]	; 0x80
   3b734:	and	r3, r3, #128	; 0x80
   3b738:	cmp	r3, #0
   3b73c:	beq	3b7bc <__assert_fail@plt+0x2a57c>
   3b740:	sub	r3, fp, #100	; 0x64
   3b744:	mov	r1, #0
   3b748:	mov	r0, r3
   3b74c:	bl	23ce8 <__assert_fail@plt+0x12aa8>
   3b750:	b	3b7bc <__assert_fail@plt+0x2a57c>
   3b754:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b758:	cmp	r3, #7
   3b75c:	bne	3bf4c <__assert_fail@plt+0x2ad0c>
   3b760:	sub	r3, fp, #100	; 0x64
   3b764:	mov	r2, #16
   3b768:	mvn	r1, #0
   3b76c:	mov	r0, r3
   3b770:	bl	1118c <memset@plt>
   3b774:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b778:	ldr	r3, [r3, #128]	; 0x80
   3b77c:	and	r3, r3, #64	; 0x40
   3b780:	cmp	r3, #0
   3b784:	bne	3b798 <__assert_fail@plt+0x2a558>
   3b788:	sub	r3, fp, #100	; 0x64
   3b78c:	mov	r1, #10
   3b790:	mov	r0, r3
   3b794:	bl	23ce8 <__assert_fail@plt+0x12aa8>
   3b798:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b79c:	ldr	r3, [r3, #128]	; 0x80
   3b7a0:	and	r3, r3, #128	; 0x80
   3b7a4:	cmp	r3, #0
   3b7a8:	beq	3b7bc <__assert_fail@plt+0x2a57c>
   3b7ac:	sub	r3, fp, #100	; 0x64
   3b7b0:	mov	r1, #0
   3b7b4:	mov	r0, r3
   3b7b8:	bl	23ce8 <__assert_fail@plt+0x12aa8>
   3b7bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b7c0:	cmp	r3, #0
   3b7c4:	beq	3bb54 <__assert_fail@plt+0x2a914>
   3b7c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b7cc:	and	r3, r3, #32
   3b7d0:	cmp	r3, #0
   3b7d4:	beq	3b818 <__assert_fail@plt+0x2a5d8>
   3b7d8:	sub	r3, fp, #100	; 0x64
   3b7dc:	mov	r1, #10
   3b7e0:	mov	r0, r3
   3b7e4:	bl	23d74 <__assert_fail@plt+0x12b34>
   3b7e8:	mov	r3, r0
   3b7ec:	strb	r3, [fp, #-57]	; 0xffffffc7
   3b7f0:	sub	r3, fp, #100	; 0x64
   3b7f4:	mov	r0, r3
   3b7f8:	bl	23dec <__assert_fail@plt+0x12bac>
   3b7fc:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   3b800:	cmp	r3, #0
   3b804:	beq	3bf54 <__assert_fail@plt+0x2ad14>
   3b808:	sub	r3, fp, #100	; 0x64
   3b80c:	mov	r1, #10
   3b810:	mov	r0, r3
   3b814:	bl	23c60 <__assert_fail@plt+0x12a20>
   3b818:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b81c:	and	r3, r3, #128	; 0x80
   3b820:	cmp	r3, #0
   3b824:	beq	3b838 <__assert_fail@plt+0x2a5f8>
   3b828:	sub	r3, fp, #100	; 0x64
   3b82c:	mov	r0, r3
   3b830:	bl	23dec <__assert_fail@plt+0x12bac>
   3b834:	b	3bf68 <__assert_fail@plt+0x2ad28>
   3b838:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b83c:	and	r3, r3, #4
   3b840:	cmp	r3, #0
   3b844:	beq	3b9c4 <__assert_fail@plt+0x2a784>
   3b848:	mov	r3, #0
   3b84c:	str	r3, [fp, #-24]	; 0xffffffe8
   3b850:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b854:	cmp	r3, #1
   3b858:	bne	3b884 <__assert_fail@plt+0x2a644>
   3b85c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b860:	ldrb	r3, [r3, #6]
   3b864:	and	r3, r3, #64	; 0x40
   3b868:	uxtb	r3, r3
   3b86c:	cmp	r3, #0
   3b870:	bne	3b884 <__assert_fail@plt+0x2a644>
   3b874:	sub	r3, fp, #100	; 0x64
   3b878:	mov	r0, r3
   3b87c:	bl	23dec <__assert_fail@plt+0x12bac>
   3b880:	b	3bf68 <__assert_fail@plt+0x2ad28>
   3b884:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b888:	ldr	r3, [r3, #92]	; 0x5c
   3b88c:	cmp	r3, #1
   3b890:	ble	3b938 <__assert_fail@plt+0x2a6f8>
   3b894:	mov	r3, #0
   3b898:	str	r3, [fp, #-12]
   3b89c:	b	3b928 <__assert_fail@plt+0x2a6e8>
   3b8a0:	ldr	r3, [fp, #-12]
   3b8a4:	lsl	r3, r3, #2
   3b8a8:	sub	r2, fp, #4
   3b8ac:	add	r3, r2, r3
   3b8b0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3b8b4:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b8b8:	ldr	r1, [fp, #-12]
   3b8bc:	add	r1, r1, #24
   3b8c0:	ldr	r1, [r3, r1, lsl #2]
   3b8c4:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b8c8:	ldr	r0, [r3, #60]	; 0x3c
   3b8cc:	ldr	r3, [fp, #-12]
   3b8d0:	lsl	r3, r3, #2
   3b8d4:	add	r3, r0, r3
   3b8d8:	ldr	r3, [r3]
   3b8dc:	mvn	r3, r3
   3b8e0:	orr	r3, r1, r3
   3b8e4:	and	r2, r2, r3
   3b8e8:	ldr	r3, [fp, #-12]
   3b8ec:	lsl	r3, r3, #2
   3b8f0:	sub	r1, fp, #4
   3b8f4:	add	r3, r1, r3
   3b8f8:	str	r2, [r3, #-96]	; 0xffffffa0
   3b8fc:	ldr	r3, [fp, #-12]
   3b900:	lsl	r3, r3, #2
   3b904:	sub	r2, fp, #4
   3b908:	add	r3, r2, r3
   3b90c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3b910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b914:	orr	r3, r2, r3
   3b918:	str	r3, [fp, #-24]	; 0xffffffe8
   3b91c:	ldr	r3, [fp, #-12]
   3b920:	add	r3, r3, #1
   3b924:	str	r3, [fp, #-12]
   3b928:	ldr	r3, [fp, #-12]
   3b92c:	cmp	r3, #7
   3b930:	ble	3b8a0 <__assert_fail@plt+0x2a660>
   3b934:	b	3b9b8 <__assert_fail@plt+0x2a778>
   3b938:	mov	r3, #0
   3b93c:	str	r3, [fp, #-12]
   3b940:	b	3b9ac <__assert_fail@plt+0x2a76c>
   3b944:	ldr	r3, [fp, #-12]
   3b948:	lsl	r3, r3, #2
   3b94c:	sub	r2, fp, #4
   3b950:	add	r3, r2, r3
   3b954:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3b958:	ldr	r3, [fp, #-168]	; 0xffffff58
   3b95c:	ldr	r1, [fp, #-12]
   3b960:	add	r1, r1, #24
   3b964:	ldr	r3, [r3, r1, lsl #2]
   3b968:	and	r2, r2, r3
   3b96c:	ldr	r3, [fp, #-12]
   3b970:	lsl	r3, r3, #2
   3b974:	sub	r1, fp, #4
   3b978:	add	r3, r1, r3
   3b97c:	str	r2, [r3, #-96]	; 0xffffffa0
   3b980:	ldr	r3, [fp, #-12]
   3b984:	lsl	r3, r3, #2
   3b988:	sub	r2, fp, #4
   3b98c:	add	r3, r2, r3
   3b990:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3b994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b998:	orr	r3, r2, r3
   3b99c:	str	r3, [fp, #-24]	; 0xffffffe8
   3b9a0:	ldr	r3, [fp, #-12]
   3b9a4:	add	r3, r3, #1
   3b9a8:	str	r3, [fp, #-12]
   3b9ac:	ldr	r3, [fp, #-12]
   3b9b0:	cmp	r3, #7
   3b9b4:	ble	3b944 <__assert_fail@plt+0x2a704>
   3b9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b9bc:	cmp	r3, #0
   3b9c0:	beq	3bf5c <__assert_fail@plt+0x2ad1c>
   3b9c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b9c8:	and	r3, r3, #8
   3b9cc:	cmp	r3, #0
   3b9d0:	beq	3bb54 <__assert_fail@plt+0x2a914>
   3b9d4:	mov	r3, #0
   3b9d8:	str	r3, [fp, #-28]	; 0xffffffe4
   3b9dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b9e0:	cmp	r3, #1
   3b9e4:	bne	3ba10 <__assert_fail@plt+0x2a7d0>
   3b9e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b9ec:	ldrb	r3, [r3, #6]
   3b9f0:	and	r3, r3, #64	; 0x40
   3b9f4:	uxtb	r3, r3
   3b9f8:	cmp	r3, #0
   3b9fc:	beq	3ba10 <__assert_fail@plt+0x2a7d0>
   3ba00:	sub	r3, fp, #100	; 0x64
   3ba04:	mov	r0, r3
   3ba08:	bl	23dec <__assert_fail@plt+0x12bac>
   3ba0c:	b	3bf68 <__assert_fail@plt+0x2ad28>
   3ba10:	ldr	r3, [fp, #-168]	; 0xffffff58
   3ba14:	ldr	r3, [r3, #92]	; 0x5c
   3ba18:	cmp	r3, #1
   3ba1c:	ble	3bac4 <__assert_fail@plt+0x2a884>
   3ba20:	mov	r3, #0
   3ba24:	str	r3, [fp, #-12]
   3ba28:	b	3bab4 <__assert_fail@plt+0x2a874>
   3ba2c:	ldr	r3, [fp, #-12]
   3ba30:	lsl	r3, r3, #2
   3ba34:	sub	r2, fp, #4
   3ba38:	add	r3, r2, r3
   3ba3c:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3ba40:	ldr	r3, [fp, #-168]	; 0xffffff58
   3ba44:	ldr	r1, [fp, #-12]
   3ba48:	add	r1, r1, #24
   3ba4c:	ldr	r1, [r3, r1, lsl #2]
   3ba50:	ldr	r3, [fp, #-168]	; 0xffffff58
   3ba54:	ldr	r0, [r3, #60]	; 0x3c
   3ba58:	ldr	r3, [fp, #-12]
   3ba5c:	lsl	r3, r3, #2
   3ba60:	add	r3, r0, r3
   3ba64:	ldr	r3, [r3]
   3ba68:	and	r3, r3, r1
   3ba6c:	mvn	r3, r3
   3ba70:	and	r2, r2, r3
   3ba74:	ldr	r3, [fp, #-12]
   3ba78:	lsl	r3, r3, #2
   3ba7c:	sub	r1, fp, #4
   3ba80:	add	r3, r1, r3
   3ba84:	str	r2, [r3, #-96]	; 0xffffffa0
   3ba88:	ldr	r3, [fp, #-12]
   3ba8c:	lsl	r3, r3, #2
   3ba90:	sub	r2, fp, #4
   3ba94:	add	r3, r2, r3
   3ba98:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3ba9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3baa0:	orr	r3, r2, r3
   3baa4:	str	r3, [fp, #-28]	; 0xffffffe4
   3baa8:	ldr	r3, [fp, #-12]
   3baac:	add	r3, r3, #1
   3bab0:	str	r3, [fp, #-12]
   3bab4:	ldr	r3, [fp, #-12]
   3bab8:	cmp	r3, #7
   3babc:	ble	3ba2c <__assert_fail@plt+0x2a7ec>
   3bac0:	b	3bb48 <__assert_fail@plt+0x2a908>
   3bac4:	mov	r3, #0
   3bac8:	str	r3, [fp, #-12]
   3bacc:	b	3bb3c <__assert_fail@plt+0x2a8fc>
   3bad0:	ldr	r3, [fp, #-12]
   3bad4:	lsl	r3, r3, #2
   3bad8:	sub	r2, fp, #4
   3badc:	add	r3, r2, r3
   3bae0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3bae4:	ldr	r3, [fp, #-168]	; 0xffffff58
   3bae8:	ldr	r1, [fp, #-12]
   3baec:	add	r1, r1, #24
   3baf0:	ldr	r3, [r3, r1, lsl #2]
   3baf4:	mvn	r3, r3
   3baf8:	and	r2, r2, r3
   3bafc:	ldr	r3, [fp, #-12]
   3bb00:	lsl	r3, r3, #2
   3bb04:	sub	r1, fp, #4
   3bb08:	add	r3, r1, r3
   3bb0c:	str	r2, [r3, #-96]	; 0xffffffa0
   3bb10:	ldr	r3, [fp, #-12]
   3bb14:	lsl	r3, r3, #2
   3bb18:	sub	r2, fp, #4
   3bb1c:	add	r3, r2, r3
   3bb20:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3bb24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3bb28:	orr	r3, r2, r3
   3bb2c:	str	r3, [fp, #-28]	; 0xffffffe4
   3bb30:	ldr	r3, [fp, #-12]
   3bb34:	add	r3, r3, #1
   3bb38:	str	r3, [fp, #-12]
   3bb3c:	ldr	r3, [fp, #-12]
   3bb40:	cmp	r3, #7
   3bb44:	ble	3bad0 <__assert_fail@plt+0x2a890>
   3bb48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bb4c:	cmp	r3, #0
   3bb50:	beq	3bf64 <__assert_fail@plt+0x2ad24>
   3bb54:	mov	r3, #0
   3bb58:	str	r3, [fp, #-12]
   3bb5c:	b	3be88 <__assert_fail@plt+0x2ac48>
   3bb60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3bb64:	cmp	r3, #1
   3bb68:	bne	3bba4 <__assert_fail@plt+0x2a964>
   3bb6c:	ldr	r3, [fp, #-12]
   3bb70:	lsl	r3, r3, #5
   3bb74:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3bb78:	add	r2, r2, r3
   3bb7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3bb80:	ldrb	r3, [r3]
   3bb84:	mov	r1, r3
   3bb88:	mov	r0, r2
   3bb8c:	bl	23d74 <__assert_fail@plt+0x12b34>
   3bb90:	mov	r3, r0
   3bb94:	eor	r3, r3, #1
   3bb98:	uxtb	r3, r3
   3bb9c:	cmp	r3, #0
   3bba0:	bne	3be70 <__assert_fail@plt+0x2ac30>
   3bba4:	mov	r3, #0
   3bba8:	str	r3, [fp, #-32]	; 0xffffffe0
   3bbac:	mov	r3, #0
   3bbb0:	str	r3, [fp, #-16]
   3bbb4:	b	3bc28 <__assert_fail@plt+0x2a9e8>
   3bbb8:	ldr	r3, [fp, #-16]
   3bbbc:	lsl	r3, r3, #2
   3bbc0:	sub	r2, fp, #4
   3bbc4:	add	r3, r2, r3
   3bbc8:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3bbcc:	ldr	r3, [fp, #-12]
   3bbd0:	lsl	r3, r3, #5
   3bbd4:	ldr	r1, [fp, #-180]	; 0xffffff4c
   3bbd8:	add	r3, r1, r3
   3bbdc:	ldr	r1, [fp, #-16]
   3bbe0:	ldr	r3, [r3, r1, lsl #2]
   3bbe4:	and	r2, r2, r3
   3bbe8:	ldr	r3, [fp, #-16]
   3bbec:	lsl	r3, r3, #2
   3bbf0:	sub	r1, fp, #4
   3bbf4:	add	r3, r1, r3
   3bbf8:	str	r2, [r3, #-160]	; 0xffffff60
   3bbfc:	ldr	r3, [fp, #-16]
   3bc00:	lsl	r3, r3, #2
   3bc04:	sub	r2, fp, #4
   3bc08:	add	r3, r2, r3
   3bc0c:	ldr	r3, [r3, #-160]	; 0xffffff60
   3bc10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3bc14:	orr	r3, r2, r3
   3bc18:	str	r3, [fp, #-32]	; 0xffffffe0
   3bc1c:	ldr	r3, [fp, #-16]
   3bc20:	add	r3, r3, #1
   3bc24:	str	r3, [fp, #-16]
   3bc28:	ldr	r3, [fp, #-16]
   3bc2c:	cmp	r3, #7
   3bc30:	ble	3bbb8 <__assert_fail@plt+0x2a978>
   3bc34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3bc38:	cmp	r3, #0
   3bc3c:	beq	3be78 <__assert_fail@plt+0x2ac38>
   3bc40:	mov	r3, #0
   3bc44:	str	r3, [fp, #-40]	; 0xffffffd8
   3bc48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3bc4c:	str	r3, [fp, #-36]	; 0xffffffdc
   3bc50:	mov	r3, #0
   3bc54:	str	r3, [fp, #-16]
   3bc58:	b	3bd38 <__assert_fail@plt+0x2aaf8>
   3bc5c:	ldr	r3, [fp, #-16]
   3bc60:	lsl	r3, r3, #2
   3bc64:	sub	r2, fp, #4
   3bc68:	add	r3, r2, r3
   3bc6c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3bc70:	mvn	r2, r3
   3bc74:	ldr	r3, [fp, #-12]
   3bc78:	lsl	r3, r3, #5
   3bc7c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   3bc80:	add	r3, r1, r3
   3bc84:	ldr	r1, [fp, #-16]
   3bc88:	ldr	r3, [r3, r1, lsl #2]
   3bc8c:	and	r2, r2, r3
   3bc90:	ldr	r3, [fp, #-16]
   3bc94:	lsl	r3, r3, #2
   3bc98:	sub	r1, fp, #4
   3bc9c:	add	r3, r1, r3
   3bca0:	str	r2, [r3, #-128]	; 0xffffff80
   3bca4:	ldr	r3, [fp, #-16]
   3bca8:	lsl	r3, r3, #2
   3bcac:	sub	r2, fp, #4
   3bcb0:	add	r3, r2, r3
   3bcb4:	ldr	r3, [r3, #-128]	; 0xffffff80
   3bcb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3bcbc:	orr	r3, r2, r3
   3bcc0:	str	r3, [fp, #-36]	; 0xffffffdc
   3bcc4:	ldr	r3, [fp, #-16]
   3bcc8:	lsl	r3, r3, #2
   3bccc:	sub	r2, fp, #4
   3bcd0:	add	r3, r2, r3
   3bcd4:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3bcd8:	ldr	r3, [fp, #-12]
   3bcdc:	lsl	r3, r3, #5
   3bce0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   3bce4:	add	r3, r1, r3
   3bce8:	ldr	r1, [fp, #-16]
   3bcec:	ldr	r3, [r3, r1, lsl #2]
   3bcf0:	mvn	r3, r3
   3bcf4:	and	r2, r2, r3
   3bcf8:	ldr	r3, [fp, #-16]
   3bcfc:	lsl	r3, r3, #2
   3bd00:	sub	r1, fp, #4
   3bd04:	add	r3, r1, r3
   3bd08:	str	r2, [r3, #-96]	; 0xffffffa0
   3bd0c:	ldr	r3, [fp, #-16]
   3bd10:	lsl	r3, r3, #2
   3bd14:	sub	r2, fp, #4
   3bd18:	add	r3, r2, r3
   3bd1c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3bd20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3bd24:	orr	r3, r2, r3
   3bd28:	str	r3, [fp, #-40]	; 0xffffffd8
   3bd2c:	ldr	r3, [fp, #-16]
   3bd30:	add	r3, r3, #1
   3bd34:	str	r3, [fp, #-16]
   3bd38:	ldr	r3, [fp, #-16]
   3bd3c:	cmp	r3, #7
   3bd40:	ble	3bc5c <__assert_fail@plt+0x2aa1c>
   3bd44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3bd48:	cmp	r3, #0
   3bd4c:	beq	3be04 <__assert_fail@plt+0x2abc4>
   3bd50:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bd54:	lsl	r3, r3, #5
   3bd58:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3bd5c:	add	r3, r2, r3
   3bd60:	sub	r2, fp, #132	; 0x84
   3bd64:	mov	r1, r2
   3bd68:	mov	r0, r3
   3bd6c:	bl	23e5c <__assert_fail@plt+0x12c1c>
   3bd70:	ldr	r3, [fp, #-12]
   3bd74:	lsl	r3, r3, #5
   3bd78:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3bd7c:	add	r3, r2, r3
   3bd80:	sub	r2, fp, #164	; 0xa4
   3bd84:	mov	r1, r2
   3bd88:	mov	r0, r3
   3bd8c:	bl	23e5c <__assert_fail@plt+0x12c1c>
   3bd90:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bd94:	mov	r3, r2
   3bd98:	lsl	r3, r3, #1
   3bd9c:	add	r3, r3, r2
   3bda0:	lsl	r3, r3, #2
   3bda4:	mov	r2, r3
   3bda8:	ldr	r3, [fp, #-176]	; 0xffffff50
   3bdac:	add	r0, r3, r2
   3bdb0:	ldr	r2, [fp, #-12]
   3bdb4:	mov	r3, r2
   3bdb8:	lsl	r3, r3, #1
   3bdbc:	add	r3, r3, r2
   3bdc0:	lsl	r3, r3, #2
   3bdc4:	mov	r2, r3
   3bdc8:	ldr	r3, [fp, #-176]	; 0xffffff50
   3bdcc:	add	r3, r3, r2
   3bdd0:	mov	r1, r3
   3bdd4:	bl	26e70 <__assert_fail@plt+0x15c30>
   3bdd8:	str	r0, [fp, #-64]	; 0xffffffc0
   3bddc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3bde0:	cmp	r3, #0
   3bde4:	movne	r3, #1
   3bde8:	moveq	r3, #0
   3bdec:	uxtb	r3, r3
   3bdf0:	cmp	r3, #0
   3bdf4:	bne	3bf98 <__assert_fail@plt+0x2ad58>
   3bdf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bdfc:	add	r3, r3, #1
   3be00:	str	r3, [fp, #-20]	; 0xffffffec
   3be04:	ldr	r2, [fp, #-12]
   3be08:	mov	r3, r2
   3be0c:	lsl	r3, r3, #1
   3be10:	add	r3, r3, r2
   3be14:	lsl	r3, r3, #2
   3be18:	mov	r2, r3
   3be1c:	ldr	r3, [fp, #-176]	; 0xffffff50
   3be20:	add	r0, r3, r2
   3be24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3be28:	ldr	r2, [r3, #8]
   3be2c:	ldr	r3, [fp, #-8]
   3be30:	lsl	r3, r3, #2
   3be34:	add	r3, r2, r3
   3be38:	ldr	r3, [r3]
   3be3c:	mov	r1, r3
   3be40:	bl	27bfc <__assert_fail@plt+0x169bc>
   3be44:	mov	r3, r0
   3be48:	strb	r3, [fp, #-65]	; 0xffffffbf
   3be4c:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   3be50:	eor	r3, r3, #1
   3be54:	uxtb	r3, r3
   3be58:	cmp	r3, #0
   3be5c:	bne	3bfa0 <__assert_fail@plt+0x2ad60>
   3be60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3be64:	cmp	r3, #0
   3be68:	beq	3be9c <__assert_fail@plt+0x2ac5c>
   3be6c:	b	3be7c <__assert_fail@plt+0x2ac3c>
   3be70:	nop	{0}
   3be74:	b	3be7c <__assert_fail@plt+0x2ac3c>
   3be78:	nop	{0}
   3be7c:	ldr	r3, [fp, #-12]
   3be80:	add	r3, r3, #1
   3be84:	str	r3, [fp, #-12]
   3be88:	ldr	r2, [fp, #-12]
   3be8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3be90:	cmp	r2, r3
   3be94:	blt	3bb60 <__assert_fail@plt+0x2a920>
   3be98:	b	3bea0 <__assert_fail@plt+0x2ac60>
   3be9c:	nop	{0}
   3bea0:	ldr	r2, [fp, #-12]
   3bea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bea8:	cmp	r2, r3
   3beac:	bne	3bf68 <__assert_fail@plt+0x2ad28>
   3beb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3beb4:	lsl	r3, r3, #5
   3beb8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3bebc:	add	r3, r2, r3
   3bec0:	sub	r2, fp, #100	; 0x64
   3bec4:	mov	r1, r2
   3bec8:	mov	r0, r3
   3becc:	bl	23e5c <__assert_fail@plt+0x12c1c>
   3bed0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bed4:	mov	r3, r2
   3bed8:	lsl	r3, r3, #1
   3bedc:	add	r3, r3, r2
   3bee0:	lsl	r3, r3, #2
   3bee4:	mov	r2, r3
   3bee8:	ldr	r3, [fp, #-176]	; 0xffffff50
   3beec:	add	r0, r3, r2
   3bef0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3bef4:	ldr	r2, [r3, #8]
   3bef8:	ldr	r3, [fp, #-8]
   3befc:	lsl	r3, r3, #2
   3bf00:	add	r3, r2, r3
   3bf04:	ldr	r3, [r3]
   3bf08:	mov	r1, r3
   3bf0c:	bl	26ca4 <__assert_fail@plt+0x15a64>
   3bf10:	str	r0, [fp, #-64]	; 0xffffffc0
   3bf14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3bf18:	cmp	r3, #0
   3bf1c:	movne	r3, #1
   3bf20:	moveq	r3, #0
   3bf24:	uxtb	r3, r3
   3bf28:	cmp	r3, #0
   3bf2c:	bne	3bfa8 <__assert_fail@plt+0x2ad68>
   3bf30:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf34:	add	r3, r3, #1
   3bf38:	str	r3, [fp, #-20]	; 0xffffffec
   3bf3c:	sub	r3, fp, #100	; 0x64
   3bf40:	mov	r0, r3
   3bf44:	bl	23dec <__assert_fail@plt+0x12bac>
   3bf48:	b	3bf68 <__assert_fail@plt+0x2ad28>
   3bf4c:	nop	{0}
   3bf50:	b	3bf68 <__assert_fail@plt+0x2ad28>
   3bf54:	nop	{0}
   3bf58:	b	3bf68 <__assert_fail@plt+0x2ad28>
   3bf5c:	nop	{0}
   3bf60:	b	3bf68 <__assert_fail@plt+0x2ad28>
   3bf64:	nop	{0}
   3bf68:	ldr	r3, [fp, #-8]
   3bf6c:	add	r3, r3, #1
   3bf70:	str	r3, [fp, #-8]
   3bf74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3bf78:	ldr	r3, [r3, #4]
   3bf7c:	ldr	r2, [fp, #-8]
   3bf80:	cmp	r2, r3
   3bf84:	blt	3b624 <__assert_fail@plt+0x2a3e4>
   3bf88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf8c:	cmp	r3, #256	; 0x100
   3bf90:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf94:	b	3c004 <__assert_fail@plt+0x2adc4>
   3bf98:	nop	{0}
   3bf9c:	b	3bfac <__assert_fail@plt+0x2ad6c>
   3bfa0:	nop	{0}
   3bfa4:	b	3bfac <__assert_fail@plt+0x2ad6c>
   3bfa8:	nop	{0}
   3bfac:	mov	r3, #0
   3bfb0:	str	r3, [fp, #-12]
   3bfb4:	b	3bff0 <__assert_fail@plt+0x2adb0>
   3bfb8:	ldr	r2, [fp, #-12]
   3bfbc:	mov	r3, r2
   3bfc0:	lsl	r3, r3, #1
   3bfc4:	add	r3, r3, r2
   3bfc8:	lsl	r3, r3, #2
   3bfcc:	mov	r2, r3
   3bfd0:	ldr	r3, [fp, #-176]	; 0xffffff50
   3bfd4:	add	r3, r3, r2
   3bfd8:	ldr	r3, [r3, #8]
   3bfdc:	mov	r0, r3
   3bfe0:	bl	13798 <__assert_fail@plt+0x2558>
   3bfe4:	ldr	r3, [fp, #-12]
   3bfe8:	add	r3, r3, #1
   3bfec:	str	r3, [fp, #-12]
   3bff0:	ldr	r2, [fp, #-12]
   3bff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bff8:	cmp	r2, r3
   3bffc:	blt	3bfb8 <__assert_fail@plt+0x2ad78>
   3c000:	mvn	r3, #0
   3c004:	mov	r0, r3
   3c008:	sub	sp, fp, #4
   3c00c:	ldr	fp, [sp]
   3c010:	add	sp, sp, #4
   3c014:	pop	{pc}		; (ldr pc, [sp], #4)
   3c018:	str	fp, [sp, #-8]!
   3c01c:	str	lr, [sp, #4]
   3c020:	add	fp, sp, #4
   3c024:	sub	sp, sp, #56	; 0x38
   3c028:	str	r0, [fp, #-48]	; 0xffffffd0
   3c02c:	str	r1, [fp, #-52]	; 0xffffffcc
   3c030:	str	r2, [fp, #-56]	; 0xffffffc8
   3c034:	str	r3, [fp, #-60]	; 0xffffffc4
   3c038:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c03c:	ldr	r2, [r3]
   3c040:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3c044:	lsl	r3, r3, #3
   3c048:	add	r3, r2, r3
   3c04c:	str	r3, [fp, #-20]	; 0xffffffec
   3c050:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c054:	ldrb	r3, [r3, #4]
   3c058:	cmp	r3, #7
   3c05c:	moveq	r3, #1
   3c060:	movne	r3, #0
   3c064:	uxtb	r3, r3
   3c068:	cmp	r3, #0
   3c06c:	beq	3c288 <__assert_fail@plt+0x2b048>
   3c070:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c074:	ldr	r2, [r3, #4]
   3c078:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3c07c:	add	r3, r2, r3
   3c080:	ldrb	r3, [r3]
   3c084:	strb	r3, [fp, #-21]	; 0xffffffeb
   3c088:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c08c:	cmp	r3, #193	; 0xc1
   3c090:	movls	r3, #1
   3c094:	movhi	r3, #0
   3c098:	uxtb	r3, r3
   3c09c:	cmp	r3, #0
   3c0a0:	beq	3c0ac <__assert_fail@plt+0x2ae6c>
   3c0a4:	mov	r3, #0
   3c0a8:	b	3c574 <__assert_fail@plt+0x2b334>
   3c0ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3c0b0:	add	r2, r3, #1
   3c0b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c0b8:	ldr	r3, [r3, #48]	; 0x30
   3c0bc:	cmp	r2, r3
   3c0c0:	blt	3c0cc <__assert_fail@plt+0x2ae8c>
   3c0c4:	mov	r3, #0
   3c0c8:	b	3c574 <__assert_fail@plt+0x2b334>
   3c0cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c0d0:	ldr	r2, [r3, #4]
   3c0d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3c0d8:	add	r3, r3, #1
   3c0dc:	add	r3, r2, r3
   3c0e0:	ldrb	r3, [r3]
   3c0e4:	strb	r3, [fp, #-22]	; 0xffffffea
   3c0e8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c0ec:	cmp	r3, #223	; 0xdf
   3c0f0:	bhi	3c11c <__assert_fail@plt+0x2aedc>
   3c0f4:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   3c0f8:	cmp	r3, #0
   3c0fc:	bge	3c10c <__assert_fail@plt+0x2aecc>
   3c100:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3c104:	cmp	r3, #191	; 0xbf
   3c108:	bls	3c114 <__assert_fail@plt+0x2aed4>
   3c10c:	mov	r3, #0
   3c110:	b	3c574 <__assert_fail@plt+0x2b334>
   3c114:	mov	r3, #2
   3c118:	b	3c574 <__assert_fail@plt+0x2b334>
   3c11c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c120:	cmp	r3, #239	; 0xef
   3c124:	bhi	3c150 <__assert_fail@plt+0x2af10>
   3c128:	mov	r3, #3
   3c12c:	str	r3, [fp, #-8]
   3c130:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c134:	cmp	r3, #224	; 0xe0
   3c138:	bne	3c1f4 <__assert_fail@plt+0x2afb4>
   3c13c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3c140:	cmp	r3, #159	; 0x9f
   3c144:	bhi	3c1f4 <__assert_fail@plt+0x2afb4>
   3c148:	mov	r3, #0
   3c14c:	b	3c574 <__assert_fail@plt+0x2b334>
   3c150:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c154:	cmp	r3, #247	; 0xf7
   3c158:	bhi	3c184 <__assert_fail@plt+0x2af44>
   3c15c:	mov	r3, #4
   3c160:	str	r3, [fp, #-8]
   3c164:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c168:	cmp	r3, #240	; 0xf0
   3c16c:	bne	3c1f4 <__assert_fail@plt+0x2afb4>
   3c170:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3c174:	cmp	r3, #143	; 0x8f
   3c178:	bhi	3c1f4 <__assert_fail@plt+0x2afb4>
   3c17c:	mov	r3, #0
   3c180:	b	3c574 <__assert_fail@plt+0x2b334>
   3c184:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c188:	cmp	r3, #251	; 0xfb
   3c18c:	bhi	3c1b8 <__assert_fail@plt+0x2af78>
   3c190:	mov	r3, #5
   3c194:	str	r3, [fp, #-8]
   3c198:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c19c:	cmp	r3, #248	; 0xf8
   3c1a0:	bne	3c1f4 <__assert_fail@plt+0x2afb4>
   3c1a4:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3c1a8:	cmp	r3, #135	; 0x87
   3c1ac:	bhi	3c1f4 <__assert_fail@plt+0x2afb4>
   3c1b0:	mov	r3, #0
   3c1b4:	b	3c574 <__assert_fail@plt+0x2b334>
   3c1b8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c1bc:	cmp	r3, #253	; 0xfd
   3c1c0:	bhi	3c1ec <__assert_fail@plt+0x2afac>
   3c1c4:	mov	r3, #6
   3c1c8:	str	r3, [fp, #-8]
   3c1cc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3c1d0:	cmp	r3, #252	; 0xfc
   3c1d4:	bne	3c1f4 <__assert_fail@plt+0x2afb4>
   3c1d8:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3c1dc:	cmp	r3, #131	; 0x83
   3c1e0:	bhi	3c1f4 <__assert_fail@plt+0x2afb4>
   3c1e4:	mov	r3, #0
   3c1e8:	b	3c574 <__assert_fail@plt+0x2b334>
   3c1ec:	mov	r3, #0
   3c1f0:	b	3c574 <__assert_fail@plt+0x2b334>
   3c1f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3c1f8:	ldr	r3, [fp, #-8]
   3c1fc:	add	r2, r2, r3
   3c200:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c204:	ldr	r3, [r3, #48]	; 0x30
   3c208:	cmp	r2, r3
   3c20c:	ble	3c218 <__assert_fail@plt+0x2afd8>
   3c210:	mov	r3, #0
   3c214:	b	3c574 <__assert_fail@plt+0x2b334>
   3c218:	mov	r3, #1
   3c21c:	str	r3, [fp, #-12]
   3c220:	b	3c270 <__assert_fail@plt+0x2b030>
   3c224:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c228:	ldr	r3, [r3, #4]
   3c22c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3c230:	ldr	r2, [fp, #-12]
   3c234:	add	r2, r1, r2
   3c238:	add	r3, r3, r2
   3c23c:	ldrb	r3, [r3]
   3c240:	strb	r3, [fp, #-22]	; 0xffffffea
   3c244:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   3c248:	cmp	r3, #0
   3c24c:	bge	3c25c <__assert_fail@plt+0x2b01c>
   3c250:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3c254:	cmp	r3, #191	; 0xbf
   3c258:	bls	3c264 <__assert_fail@plt+0x2b024>
   3c25c:	mov	r3, #0
   3c260:	b	3c574 <__assert_fail@plt+0x2b334>
   3c264:	ldr	r3, [fp, #-12]
   3c268:	add	r3, r3, #1
   3c26c:	str	r3, [fp, #-12]
   3c270:	ldr	r2, [fp, #-12]
   3c274:	ldr	r3, [fp, #-8]
   3c278:	cmp	r2, r3
   3c27c:	blt	3c224 <__assert_fail@plt+0x2afe4>
   3c280:	ldr	r3, [fp, #-8]
   3c284:	b	3c574 <__assert_fail@plt+0x2b334>
   3c288:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3c28c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3c290:	bl	24018 <__assert_fail@plt+0x12dd8>
   3c294:	str	r0, [fp, #-8]
   3c298:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c29c:	ldrb	r3, [r3, #4]
   3c2a0:	cmp	r3, #5
   3c2a4:	bne	3c32c <__assert_fail@plt+0x2b0ec>
   3c2a8:	ldr	r3, [fp, #-8]
   3c2ac:	cmp	r3, #1
   3c2b0:	bgt	3c2bc <__assert_fail@plt+0x2b07c>
   3c2b4:	mov	r3, #0
   3c2b8:	b	3c574 <__assert_fail@plt+0x2b334>
   3c2bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c2c0:	ldr	r3, [r3, #128]	; 0x80
   3c2c4:	and	r3, r3, #64	; 0x40
   3c2c8:	cmp	r3, #0
   3c2cc:	bne	3c2ec <__assert_fail@plt+0x2b0ac>
   3c2d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c2d4:	ldr	r2, [r3, #4]
   3c2d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3c2dc:	add	r3, r2, r3
   3c2e0:	ldrb	r3, [r3]
   3c2e4:	cmp	r3, #10
   3c2e8:	beq	3c31c <__assert_fail@plt+0x2b0dc>
   3c2ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c2f0:	ldr	r3, [r3, #128]	; 0x80
   3c2f4:	and	r3, r3, #128	; 0x80
   3c2f8:	cmp	r3, #0
   3c2fc:	beq	3c324 <__assert_fail@plt+0x2b0e4>
   3c300:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c304:	ldr	r2, [r3, #4]
   3c308:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3c30c:	add	r3, r2, r3
   3c310:	ldrb	r3, [r3]
   3c314:	cmp	r3, #0
   3c318:	bne	3c324 <__assert_fail@plt+0x2b0e4>
   3c31c:	mov	r3, #0
   3c320:	b	3c574 <__assert_fail@plt+0x2b334>
   3c324:	ldr	r3, [fp, #-8]
   3c328:	b	3c574 <__assert_fail@plt+0x2b334>
   3c32c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3c330:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3c334:	bl	24120 <__assert_fail@plt+0x12ee0>
   3c338:	str	r0, [fp, #-28]	; 0xffffffe4
   3c33c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c340:	cmp	r3, #1
   3c344:	bgt	3c354 <__assert_fail@plt+0x2b114>
   3c348:	ldr	r3, [fp, #-8]
   3c34c:	cmp	r3, #1
   3c350:	ble	3c360 <__assert_fail@plt+0x2b120>
   3c354:	ldr	r3, [fp, #-8]
   3c358:	cmp	r3, #0
   3c35c:	bne	3c368 <__assert_fail@plt+0x2b128>
   3c360:	mov	r3, #0
   3c364:	b	3c574 <__assert_fail@plt+0x2b334>
   3c368:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c36c:	ldrb	r3, [r3, #4]
   3c370:	cmp	r3, #6
   3c374:	bne	3c570 <__assert_fail@plt+0x2b330>
   3c378:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c37c:	ldr	r3, [r3]
   3c380:	str	r3, [fp, #-32]	; 0xffffffe0
   3c384:	mov	r3, #0
   3c388:	str	r3, [fp, #-16]
   3c38c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c390:	ldr	r3, [r3, #32]
   3c394:	cmp	r3, #0
   3c398:	bne	3c3bc <__assert_fail@plt+0x2b17c>
   3c39c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c3a0:	ldr	r3, [r3, #36]	; 0x24
   3c3a4:	cmp	r3, #0
   3c3a8:	bne	3c3bc <__assert_fail@plt+0x2b17c>
   3c3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c3b0:	ldr	r3, [r3, #20]
   3c3b4:	cmp	r3, #0
   3c3b8:	beq	3c3d0 <__assert_fail@plt+0x2b190>
   3c3bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3c3c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3c3c4:	bl	240bc <__assert_fail@plt+0x12e7c>
   3c3c8:	mov	r3, r0
   3c3cc:	b	3c3d4 <__assert_fail@plt+0x2b194>
   3c3d0:	mov	r3, #0
   3c3d4:	str	r3, [fp, #-36]	; 0xffffffdc
   3c3d8:	mov	r3, #0
   3c3dc:	str	r3, [fp, #-12]
   3c3e0:	b	3c420 <__assert_fail@plt+0x2b1e0>
   3c3e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c3e8:	ldr	r2, [r3]
   3c3ec:	ldr	r3, [fp, #-12]
   3c3f0:	lsl	r3, r3, #2
   3c3f4:	add	r3, r2, r3
   3c3f8:	ldr	r3, [r3]
   3c3fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c400:	cmp	r2, r3
   3c404:	bne	3c414 <__assert_fail@plt+0x2b1d4>
   3c408:	ldr	r3, [fp, #-8]
   3c40c:	str	r3, [fp, #-16]
   3c410:	b	3c524 <__assert_fail@plt+0x2b2e4>
   3c414:	ldr	r3, [fp, #-12]
   3c418:	add	r3, r3, #1
   3c41c:	str	r3, [fp, #-12]
   3c420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c424:	ldr	r3, [r3, #20]
   3c428:	ldr	r2, [fp, #-12]
   3c42c:	cmp	r2, r3
   3c430:	blt	3c3e4 <__assert_fail@plt+0x2b1a4>
   3c434:	mov	r3, #0
   3c438:	str	r3, [fp, #-12]
   3c43c:	b	3c48c <__assert_fail@plt+0x2b24c>
   3c440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c444:	ldr	r2, [r3, #12]
   3c448:	ldr	r3, [fp, #-12]
   3c44c:	lsl	r3, r3, #2
   3c450:	add	r3, r2, r3
   3c454:	ldr	r3, [r3]
   3c458:	str	r3, [fp, #-40]	; 0xffffffd8
   3c45c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3c460:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3c464:	bl	10f64 <iswctype@plt>
   3c468:	mov	r3, r0
   3c46c:	cmp	r3, #0
   3c470:	beq	3c480 <__assert_fail@plt+0x2b240>
   3c474:	ldr	r3, [fp, #-8]
   3c478:	str	r3, [fp, #-16]
   3c47c:	b	3c524 <__assert_fail@plt+0x2b2e4>
   3c480:	ldr	r3, [fp, #-12]
   3c484:	add	r3, r3, #1
   3c488:	str	r3, [fp, #-12]
   3c48c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c490:	ldr	r3, [r3, #36]	; 0x24
   3c494:	ldr	r2, [fp, #-12]
   3c498:	cmp	r2, r3
   3c49c:	blt	3c440 <__assert_fail@plt+0x2b200>
   3c4a0:	mov	r3, #0
   3c4a4:	str	r3, [fp, #-12]
   3c4a8:	b	3c50c <__assert_fail@plt+0x2b2cc>
   3c4ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c4b0:	ldr	r2, [r3, #4]
   3c4b4:	ldr	r3, [fp, #-12]
   3c4b8:	lsl	r3, r3, #2
   3c4bc:	add	r3, r2, r3
   3c4c0:	ldr	r3, [r3]
   3c4c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c4c8:	cmp	r2, r3
   3c4cc:	bcc	3c500 <__assert_fail@plt+0x2b2c0>
   3c4d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c4d4:	ldr	r2, [r3, #8]
   3c4d8:	ldr	r3, [fp, #-12]
   3c4dc:	lsl	r3, r3, #2
   3c4e0:	add	r3, r2, r3
   3c4e4:	ldr	r3, [r3]
   3c4e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c4ec:	cmp	r2, r3
   3c4f0:	bhi	3c500 <__assert_fail@plt+0x2b2c0>
   3c4f4:	ldr	r3, [fp, #-8]
   3c4f8:	str	r3, [fp, #-16]
   3c4fc:	b	3c524 <__assert_fail@plt+0x2b2e4>
   3c500:	ldr	r3, [fp, #-12]
   3c504:	add	r3, r3, #1
   3c508:	str	r3, [fp, #-12]
   3c50c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c510:	ldr	r3, [r3, #32]
   3c514:	ldr	r2, [fp, #-12]
   3c518:	cmp	r2, r3
   3c51c:	blt	3c4ac <__assert_fail@plt+0x2b26c>
   3c520:	nop	{0}
   3c524:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c528:	ldrb	r3, [r3, #16]
   3c52c:	and	r3, r3, #1
   3c530:	uxtb	r3, r3
   3c534:	cmp	r3, #0
   3c538:	bne	3c544 <__assert_fail@plt+0x2b304>
   3c53c:	ldr	r3, [fp, #-16]
   3c540:	b	3c574 <__assert_fail@plt+0x2b334>
   3c544:	ldr	r3, [fp, #-16]
   3c548:	cmp	r3, #0
   3c54c:	ble	3c558 <__assert_fail@plt+0x2b318>
   3c550:	mov	r3, #0
   3c554:	b	3c574 <__assert_fail@plt+0x2b334>
   3c558:	ldr	r2, [fp, #-8]
   3c55c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c560:	cmp	r2, r3
   3c564:	movge	r3, r2
   3c568:	movlt	r3, r3
   3c56c:	b	3c574 <__assert_fail@plt+0x2b334>
   3c570:	mov	r3, #0
   3c574:	mov	r0, r3
   3c578:	sub	sp, fp, #4
   3c57c:	ldr	fp, [sp]
   3c580:	add	sp, sp, #4
   3c584:	pop	{pc}		; (ldr pc, [sp], #4)
   3c588:	str	fp, [sp, #-8]!
   3c58c:	str	lr, [sp, #4]
   3c590:	add	fp, sp, #4
   3c594:	sub	sp, sp, #24
   3c598:	str	r0, [fp, #-16]
   3c59c:	str	r1, [fp, #-20]	; 0xffffffec
   3c5a0:	str	r2, [fp, #-24]	; 0xffffffe8
   3c5a4:	ldr	r3, [fp, #-16]
   3c5a8:	ldr	r2, [r3, #4]
   3c5ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c5b0:	add	r3, r2, r3
   3c5b4:	ldrb	r3, [r3]
   3c5b8:	strb	r3, [fp, #-5]
   3c5bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c5c0:	ldrb	r3, [r3, #4]
   3c5c4:	sub	r3, r3, #1
   3c5c8:	cmp	r3, #6
   3c5cc:	ldrls	pc, [pc, r3, lsl #2]
   3c5d0:	b	3c6a4 <__assert_fail@plt+0x2b464>
   3c5d4:	strdeq	ip, [r3], -r0
   3c5d8:	andeq	ip, r3, r4, lsr #13
   3c5dc:	andeq	ip, r3, ip, lsl #12
   3c5e0:	andeq	ip, r3, r4, lsr #13
   3c5e4:	andeq	ip, r3, r4, asr r6
   3c5e8:	andeq	ip, r3, r4, lsr #13
   3c5ec:	andeq	ip, r3, r0, asr #12
   3c5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c5f4:	ldrb	r3, [r3]
   3c5f8:	ldrb	r2, [fp, #-5]
   3c5fc:	cmp	r2, r3
   3c600:	beq	3c6ac <__assert_fail@plt+0x2b46c>
   3c604:	mov	r3, #0
   3c608:	b	3c7b4 <__assert_fail@plt+0x2b574>
   3c60c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c610:	ldr	r3, [r3]
   3c614:	ldrb	r2, [fp, #-5]
   3c618:	mov	r1, r2
   3c61c:	mov	r0, r3
   3c620:	bl	23d74 <__assert_fail@plt+0x12b34>
   3c624:	mov	r3, r0
   3c628:	eor	r3, r3, #1
   3c62c:	uxtb	r3, r3
   3c630:	cmp	r3, #0
   3c634:	beq	3c6b4 <__assert_fail@plt+0x2b474>
   3c638:	mov	r3, #0
   3c63c:	b	3c7b4 <__assert_fail@plt+0x2b574>
   3c640:	ldrsb	r3, [fp, #-5]
   3c644:	cmp	r3, #0
   3c648:	bge	3c654 <__assert_fail@plt+0x2b414>
   3c64c:	mov	r3, #0
   3c650:	b	3c7b4 <__assert_fail@plt+0x2b574>
   3c654:	ldrb	r3, [fp, #-5]
   3c658:	cmp	r3, #10
   3c65c:	bne	3c678 <__assert_fail@plt+0x2b438>
   3c660:	ldr	r3, [fp, #-16]
   3c664:	ldr	r3, [r3, #84]	; 0x54
   3c668:	ldr	r3, [r3, #128]	; 0x80
   3c66c:	and	r3, r3, #64	; 0x40
   3c670:	cmp	r3, #0
   3c674:	beq	3c69c <__assert_fail@plt+0x2b45c>
   3c678:	ldrb	r3, [fp, #-5]
   3c67c:	cmp	r3, #0
   3c680:	bne	3c6bc <__assert_fail@plt+0x2b47c>
   3c684:	ldr	r3, [fp, #-16]
   3c688:	ldr	r3, [r3, #84]	; 0x54
   3c68c:	ldr	r3, [r3, #128]	; 0x80
   3c690:	and	r3, r3, #128	; 0x80
   3c694:	cmp	r3, #0
   3c698:	beq	3c6bc <__assert_fail@plt+0x2b47c>
   3c69c:	mov	r3, #0
   3c6a0:	b	3c7b4 <__assert_fail@plt+0x2b574>
   3c6a4:	mov	r3, #0
   3c6a8:	b	3c7b4 <__assert_fail@plt+0x2b574>
   3c6ac:	nop	{0}
   3c6b0:	b	3c6c0 <__assert_fail@plt+0x2b480>
   3c6b4:	nop	{0}
   3c6b8:	b	3c6c0 <__assert_fail@plt+0x2b480>
   3c6bc:	nop	{0}
   3c6c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c6c4:	ldr	r2, [r3, #4]
   3c6c8:	mov	r3, #65280	; 0xff00
   3c6cc:	movt	r3, #3
   3c6d0:	and	r3, r3, r2
   3c6d4:	cmp	r3, #0
   3c6d8:	beq	3c7b0 <__assert_fail@plt+0x2b570>
   3c6dc:	ldr	r0, [fp, #-16]
   3c6e0:	ldr	r3, [fp, #-16]
   3c6e4:	ldr	r3, [r3, #88]	; 0x58
   3c6e8:	mov	r2, r3
   3c6ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c6f0:	bl	26a20 <__assert_fail@plt+0x157e0>
   3c6f4:	str	r0, [fp, #-12]
   3c6f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c6fc:	ldr	r3, [r3, #4]
   3c700:	ubfx	r3, r3, #8, #10
   3c704:	uxth	r3, r3
   3c708:	and	r3, r3, #4
   3c70c:	cmp	r3, #0
   3c710:	beq	3c724 <__assert_fail@plt+0x2b4e4>
   3c714:	ldr	r3, [fp, #-12]
   3c718:	and	r3, r3, #1
   3c71c:	cmp	r3, #0
   3c720:	beq	3c7a8 <__assert_fail@plt+0x2b568>
   3c724:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c728:	ldr	r3, [r3, #4]
   3c72c:	ubfx	r3, r3, #8, #10
   3c730:	uxth	r3, r3
   3c734:	and	r3, r3, #8
   3c738:	cmp	r3, #0
   3c73c:	beq	3c750 <__assert_fail@plt+0x2b510>
   3c740:	ldr	r3, [fp, #-12]
   3c744:	and	r3, r3, #1
   3c748:	cmp	r3, #0
   3c74c:	bne	3c7a8 <__assert_fail@plt+0x2b568>
   3c750:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c754:	ldr	r3, [r3, #4]
   3c758:	ubfx	r3, r3, #8, #10
   3c75c:	uxth	r3, r3
   3c760:	and	r3, r3, #32
   3c764:	cmp	r3, #0
   3c768:	beq	3c77c <__assert_fail@plt+0x2b53c>
   3c76c:	ldr	r3, [fp, #-12]
   3c770:	and	r3, r3, #2
   3c774:	cmp	r3, #0
   3c778:	beq	3c7a8 <__assert_fail@plt+0x2b568>
   3c77c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c780:	ldr	r3, [r3, #4]
   3c784:	ubfx	r3, r3, #8, #10
   3c788:	uxth	r3, r3
   3c78c:	and	r3, r3, #128	; 0x80
   3c790:	cmp	r3, #0
   3c794:	beq	3c7b0 <__assert_fail@plt+0x2b570>
   3c798:	ldr	r3, [fp, #-12]
   3c79c:	and	r3, r3, #8
   3c7a0:	cmp	r3, #0
   3c7a4:	bne	3c7b0 <__assert_fail@plt+0x2b570>
   3c7a8:	mov	r3, #0
   3c7ac:	b	3c7b4 <__assert_fail@plt+0x2b574>
   3c7b0:	mov	r3, #1
   3c7b4:	mov	r0, r3
   3c7b8:	sub	sp, fp, #4
   3c7bc:	ldr	fp, [sp]
   3c7c0:	add	sp, sp, #4
   3c7c4:	pop	{pc}		; (ldr pc, [sp], #4)
   3c7c8:	str	fp, [sp, #-8]!
   3c7cc:	str	lr, [sp, #4]
   3c7d0:	add	fp, sp, #4
   3c7d4:	sub	sp, sp, #24
   3c7d8:	str	r0, [fp, #-24]	; 0xffffffe8
   3c7dc:	str	r1, [fp, #-28]	; 0xffffffe4
   3c7e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c7e4:	str	r3, [fp, #-8]
   3c7e8:	ldr	r3, [fp, #-8]
   3c7ec:	ldr	r3, [r3, #36]	; 0x24
   3c7f0:	cmn	r3, #-536870910	; 0xe0000002
   3c7f4:	movhi	r3, #1
   3c7f8:	movls	r3, #0
   3c7fc:	uxtb	r3, r3
   3c800:	cmp	r3, #0
   3c804:	beq	3c810 <__assert_fail@plt+0x2b5d0>
   3c808:	mov	r3, #12
   3c80c:	b	3c970 <__assert_fail@plt+0x2b730>
   3c810:	ldr	r3, [fp, #-8]
   3c814:	ldr	r3, [r3, #36]	; 0x24
   3c818:	lsl	r2, r3, #1
   3c81c:	ldr	r3, [fp, #-8]
   3c820:	ldr	r3, [r3, #48]	; 0x30
   3c824:	cmp	r2, r3
   3c828:	movlt	r2, r2
   3c82c:	movge	r2, r3
   3c830:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c834:	cmp	r2, r3
   3c838:	movge	r3, r2
   3c83c:	movlt	r3, r3
   3c840:	mov	r1, r3
   3c844:	ldr	r0, [fp, #-8]
   3c848:	bl	244bc <__assert_fail@plt+0x1327c>
   3c84c:	str	r0, [fp, #-12]
   3c850:	ldr	r3, [fp, #-12]
   3c854:	cmp	r3, #0
   3c858:	movne	r3, #1
   3c85c:	moveq	r3, #0
   3c860:	uxtb	r3, r3
   3c864:	cmp	r3, #0
   3c868:	beq	3c874 <__assert_fail@plt+0x2b634>
   3c86c:	ldr	r3, [fp, #-12]
   3c870:	b	3c970 <__assert_fail@plt+0x2b730>
   3c874:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c878:	ldr	r3, [r3, #100]	; 0x64
   3c87c:	cmp	r3, #0
   3c880:	beq	3c8dc <__assert_fail@plt+0x2b69c>
   3c884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c888:	ldr	r2, [r3, #100]	; 0x64
   3c88c:	ldr	r3, [fp, #-8]
   3c890:	ldr	r3, [r3, #36]	; 0x24
   3c894:	add	r3, r3, #1
   3c898:	lsl	r3, r3, #2
   3c89c:	mov	r1, r3
   3c8a0:	mov	r0, r2
   3c8a4:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3c8a8:	str	r0, [fp, #-16]
   3c8ac:	ldr	r3, [fp, #-16]
   3c8b0:	cmp	r3, #0
   3c8b4:	moveq	r3, #1
   3c8b8:	movne	r3, #0
   3c8bc:	uxtb	r3, r3
   3c8c0:	cmp	r3, #0
   3c8c4:	beq	3c8d0 <__assert_fail@plt+0x2b690>
   3c8c8:	mov	r3, #12
   3c8cc:	b	3c970 <__assert_fail@plt+0x2b730>
   3c8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c8d4:	ldr	r2, [fp, #-16]
   3c8d8:	str	r2, [r3, #100]	; 0x64
   3c8dc:	ldr	r3, [fp, #-8]
   3c8e0:	ldrb	r3, [r3, #72]	; 0x48
   3c8e4:	cmp	r3, #0
   3c8e8:	beq	3c938 <__assert_fail@plt+0x2b6f8>
   3c8ec:	ldr	r3, [fp, #-8]
   3c8f0:	ldr	r3, [r3, #80]	; 0x50
   3c8f4:	cmp	r3, #1
   3c8f8:	ble	3c92c <__assert_fail@plt+0x2b6ec>
   3c8fc:	ldr	r0, [fp, #-8]
   3c900:	bl	24aec <__assert_fail@plt+0x138ac>
   3c904:	str	r0, [fp, #-12]
   3c908:	ldr	r3, [fp, #-12]
   3c90c:	cmp	r3, #0
   3c910:	movne	r3, #1
   3c914:	moveq	r3, #0
   3c918:	uxtb	r3, r3
   3c91c:	cmp	r3, #0
   3c920:	beq	3c96c <__assert_fail@plt+0x2b72c>
   3c924:	ldr	r3, [fp, #-12]
   3c928:	b	3c970 <__assert_fail@plt+0x2b730>
   3c92c:	ldr	r0, [fp, #-8]
   3c930:	bl	257d8 <__assert_fail@plt+0x14598>
   3c934:	b	3c96c <__assert_fail@plt+0x2b72c>
   3c938:	ldr	r3, [fp, #-8]
   3c93c:	ldr	r3, [r3, #80]	; 0x50
   3c940:	cmp	r3, #1
   3c944:	ble	3c954 <__assert_fail@plt+0x2b714>
   3c948:	ldr	r0, [fp, #-8]
   3c94c:	bl	24768 <__assert_fail@plt+0x13528>
   3c950:	b	3c96c <__assert_fail@plt+0x2b72c>
   3c954:	ldr	r3, [fp, #-8]
   3c958:	ldr	r3, [r3, #64]	; 0x40
   3c95c:	cmp	r3, #0
   3c960:	beq	3c96c <__assert_fail@plt+0x2b72c>
   3c964:	ldr	r0, [fp, #-8]
   3c968:	bl	258e4 <__assert_fail@plt+0x146a4>
   3c96c:	mov	r3, #0
   3c970:	mov	r0, r3
   3c974:	sub	sp, fp, #4
   3c978:	ldr	fp, [sp]
   3c97c:	add	sp, sp, #4
   3c980:	pop	{pc}		; (ldr pc, [sp], #4)
   3c984:	str	fp, [sp, #-8]!
   3c988:	str	lr, [sp, #4]
   3c98c:	add	fp, sp, #4
   3c990:	sub	sp, sp, #24
   3c994:	str	r0, [fp, #-16]
   3c998:	str	r1, [fp, #-20]	; 0xffffffec
   3c99c:	str	r2, [fp, #-24]	; 0xffffffe8
   3c9a0:	ldr	r3, [fp, #-16]
   3c9a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c9a8:	str	r2, [r3, #88]	; 0x58
   3c9ac:	ldr	r3, [fp, #-16]
   3c9b0:	mvn	r2, #0
   3c9b4:	str	r2, [r3, #92]	; 0x5c
   3c9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c9bc:	cmp	r3, #0
   3c9c0:	ble	3caac <__assert_fail@plt+0x2b86c>
   3c9c4:	mov	r3, #24
   3c9c8:	str	r3, [fp, #-8]
   3c9cc:	mvn	r2, #0
   3c9d0:	ldr	r3, [fp, #-8]
   3c9d4:	udiv	r3, r2, r3
   3c9d8:	cmp	r3, #0
   3c9dc:	blt	3c9f0 <__assert_fail@plt+0x2b7b0>
   3c9e0:	mvn	r2, #0
   3c9e4:	ldr	r3, [fp, #-8]
   3c9e8:	udiv	r3, r2, r3
   3c9ec:	b	3c9f4 <__assert_fail@plt+0x2b7b4>
   3c9f0:	mvn	r3, #-2147483648	; 0x80000000
   3c9f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c9f8:	cmp	r3, r2
   3c9fc:	movcc	r3, #1
   3ca00:	movcs	r3, #0
   3ca04:	uxtb	r3, r3
   3ca08:	cmp	r3, #0
   3ca0c:	beq	3ca18 <__assert_fail@plt+0x2b7d8>
   3ca10:	mov	r3, #12
   3ca14:	b	3cad4 <__assert_fail@plt+0x2b894>
   3ca18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ca1c:	mov	r3, r2
   3ca20:	lsl	r3, r3, #1
   3ca24:	add	r3, r3, r2
   3ca28:	lsl	r3, r3, #3
   3ca2c:	mov	r0, r3
   3ca30:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3ca34:	mov	r3, r0
   3ca38:	mov	r2, r3
   3ca3c:	ldr	r3, [fp, #-16]
   3ca40:	str	r2, [r3, #116]	; 0x74
   3ca44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ca48:	lsl	r3, r3, #2
   3ca4c:	mov	r0, r3
   3ca50:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3ca54:	mov	r3, r0
   3ca58:	mov	r2, r3
   3ca5c:	ldr	r3, [fp, #-16]
   3ca60:	str	r2, [r3, #132]	; 0x84
   3ca64:	ldr	r3, [fp, #-16]
   3ca68:	ldr	r3, [r3, #116]	; 0x74
   3ca6c:	cmp	r3, #0
   3ca70:	moveq	r3, #1
   3ca74:	movne	r3, #0
   3ca78:	uxtb	r3, r3
   3ca7c:	cmp	r3, #0
   3ca80:	bne	3caa4 <__assert_fail@plt+0x2b864>
   3ca84:	ldr	r3, [fp, #-16]
   3ca88:	ldr	r3, [r3, #132]	; 0x84
   3ca8c:	cmp	r3, #0
   3ca90:	moveq	r3, #1
   3ca94:	movne	r3, #0
   3ca98:	uxtb	r3, r3
   3ca9c:	cmp	r3, #0
   3caa0:	beq	3caac <__assert_fail@plt+0x2b86c>
   3caa4:	mov	r3, #12
   3caa8:	b	3cad4 <__assert_fail@plt+0x2b894>
   3caac:	ldr	r3, [fp, #-16]
   3cab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cab4:	str	r2, [r3, #112]	; 0x70
   3cab8:	ldr	r3, [fp, #-16]
   3cabc:	mov	r2, #1
   3cac0:	str	r2, [r3, #120]	; 0x78
   3cac4:	ldr	r3, [fp, #-16]
   3cac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cacc:	str	r2, [r3, #128]	; 0x80
   3cad0:	mov	r3, #0
   3cad4:	mov	r0, r3
   3cad8:	sub	sp, fp, #4
   3cadc:	ldr	fp, [sp]
   3cae0:	add	sp, sp, #4
   3cae4:	pop	{pc}		; (ldr pc, [sp], #4)
   3cae8:	str	fp, [sp, #-8]!
   3caec:	str	lr, [sp, #4]
   3caf0:	add	fp, sp, #4
   3caf4:	sub	sp, sp, #24
   3caf8:	str	r0, [fp, #-24]	; 0xffffffe8
   3cafc:	mov	r3, #0
   3cb00:	str	r3, [fp, #-8]
   3cb04:	b	3cbdc <__assert_fail@plt+0x2b99c>
   3cb08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cb0c:	ldr	r2, [r3, #132]	; 0x84
   3cb10:	ldr	r3, [fp, #-8]
   3cb14:	lsl	r3, r3, #2
   3cb18:	add	r3, r2, r3
   3cb1c:	ldr	r3, [r3]
   3cb20:	str	r3, [fp, #-16]
   3cb24:	mov	r3, #0
   3cb28:	str	r3, [fp, #-12]
   3cb2c:	b	3cb70 <__assert_fail@plt+0x2b930>
   3cb30:	ldr	r3, [fp, #-16]
   3cb34:	ldr	r2, [r3, #20]
   3cb38:	ldr	r3, [fp, #-12]
   3cb3c:	lsl	r3, r3, #2
   3cb40:	add	r3, r2, r3
   3cb44:	ldr	r3, [r3]
   3cb48:	str	r3, [fp, #-20]	; 0xffffffec
   3cb4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cb50:	ldr	r3, [r3, #16]
   3cb54:	mov	r0, r3
   3cb58:	bl	13798 <__assert_fail@plt+0x2558>
   3cb5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3cb60:	bl	13798 <__assert_fail@plt+0x2558>
   3cb64:	ldr	r3, [fp, #-12]
   3cb68:	add	r3, r3, #1
   3cb6c:	str	r3, [fp, #-12]
   3cb70:	ldr	r3, [fp, #-16]
   3cb74:	ldr	r3, [r3, #16]
   3cb78:	ldr	r2, [fp, #-12]
   3cb7c:	cmp	r2, r3
   3cb80:	blt	3cb30 <__assert_fail@plt+0x2b8f0>
   3cb84:	ldr	r3, [fp, #-16]
   3cb88:	ldr	r3, [r3, #20]
   3cb8c:	mov	r0, r3
   3cb90:	bl	13798 <__assert_fail@plt+0x2558>
   3cb94:	ldr	r3, [fp, #-16]
   3cb98:	ldr	r3, [r3, #8]
   3cb9c:	cmp	r3, #0
   3cba0:	beq	3cbc8 <__assert_fail@plt+0x2b988>
   3cba4:	ldr	r3, [fp, #-16]
   3cba8:	ldr	r3, [r3, #8]
   3cbac:	ldr	r3, [r3, #8]
   3cbb0:	mov	r0, r3
   3cbb4:	bl	13798 <__assert_fail@plt+0x2558>
   3cbb8:	ldr	r3, [fp, #-16]
   3cbbc:	ldr	r3, [r3, #8]
   3cbc0:	mov	r0, r3
   3cbc4:	bl	13798 <__assert_fail@plt+0x2558>
   3cbc8:	ldr	r0, [fp, #-16]
   3cbcc:	bl	13798 <__assert_fail@plt+0x2558>
   3cbd0:	ldr	r3, [fp, #-8]
   3cbd4:	add	r3, r3, #1
   3cbd8:	str	r3, [fp, #-8]
   3cbdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cbe0:	ldr	r3, [r3, #124]	; 0x7c
   3cbe4:	ldr	r2, [fp, #-8]
   3cbe8:	cmp	r2, r3
   3cbec:	blt	3cb08 <__assert_fail@plt+0x2b8c8>
   3cbf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cbf4:	mov	r2, #0
   3cbf8:	str	r2, [r3, #124]	; 0x7c
   3cbfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cc00:	mov	r2, #0
   3cc04:	str	r2, [r3, #108]	; 0x6c
   3cc08:	nop	{0}
   3cc0c:	sub	sp, fp, #4
   3cc10:	ldr	fp, [sp]
   3cc14:	add	sp, sp, #4
   3cc18:	pop	{pc}		; (ldr pc, [sp], #4)
   3cc1c:	str	fp, [sp, #-8]!
   3cc20:	str	lr, [sp, #4]
   3cc24:	add	fp, sp, #4
   3cc28:	sub	sp, sp, #8
   3cc2c:	str	r0, [fp, #-8]
   3cc30:	ldr	r0, [fp, #-8]
   3cc34:	bl	3cae8 <__assert_fail@plt+0x2b8a8>
   3cc38:	ldr	r3, [fp, #-8]
   3cc3c:	ldr	r3, [r3, #132]	; 0x84
   3cc40:	mov	r0, r3
   3cc44:	bl	13798 <__assert_fail@plt+0x2558>
   3cc48:	ldr	r3, [fp, #-8]
   3cc4c:	ldr	r3, [r3, #116]	; 0x74
   3cc50:	mov	r0, r3
   3cc54:	bl	13798 <__assert_fail@plt+0x2558>
   3cc58:	nop	{0}
   3cc5c:	sub	sp, fp, #4
   3cc60:	ldr	fp, [sp]
   3cc64:	add	sp, sp, #4
   3cc68:	pop	{pc}		; (ldr pc, [sp], #4)
   3cc6c:	str	fp, [sp, #-8]!
   3cc70:	str	lr, [sp, #4]
   3cc74:	add	fp, sp, #4
   3cc78:	sub	sp, sp, #24
   3cc7c:	str	r0, [fp, #-16]
   3cc80:	str	r1, [fp, #-20]	; 0xffffffec
   3cc84:	str	r2, [fp, #-24]	; 0xffffffe8
   3cc88:	str	r3, [fp, #-28]	; 0xffffffe4
   3cc8c:	ldr	r3, [fp, #-16]
   3cc90:	ldr	r2, [r3, #108]	; 0x6c
   3cc94:	ldr	r3, [fp, #-16]
   3cc98:	ldr	r3, [r3, #112]	; 0x70
   3cc9c:	cmp	r2, r3
   3cca0:	blt	3cd78 <__assert_fail@plt+0x2bb38>
   3cca4:	ldr	r3, [fp, #-16]
   3cca8:	ldr	r0, [r3, #116]	; 0x74
   3ccac:	ldr	r3, [fp, #-16]
   3ccb0:	ldr	r3, [r3, #112]	; 0x70
   3ccb4:	mov	r2, r3
   3ccb8:	mov	r3, r2
   3ccbc:	lsl	r3, r3, #1
   3ccc0:	add	r3, r3, r2
   3ccc4:	lsl	r3, r3, #4
   3ccc8:	mov	r1, r3
   3cccc:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3ccd0:	str	r0, [fp, #-8]
   3ccd4:	ldr	r3, [fp, #-8]
   3ccd8:	cmp	r3, #0
   3ccdc:	moveq	r3, #1
   3cce0:	movne	r3, #0
   3cce4:	uxtb	r3, r3
   3cce8:	cmp	r3, #0
   3ccec:	beq	3cd08 <__assert_fail@plt+0x2bac8>
   3ccf0:	ldr	r3, [fp, #-16]
   3ccf4:	ldr	r3, [r3, #116]	; 0x74
   3ccf8:	mov	r0, r3
   3ccfc:	bl	13798 <__assert_fail@plt+0x2558>
   3cd00:	mov	r3, #12
   3cd04:	b	3cf70 <__assert_fail@plt+0x2bd30>
   3cd08:	ldr	r3, [fp, #-16]
   3cd0c:	ldr	r2, [fp, #-8]
   3cd10:	str	r2, [r3, #116]	; 0x74
   3cd14:	ldr	r3, [fp, #-16]
   3cd18:	ldr	r2, [r3, #116]	; 0x74
   3cd1c:	ldr	r3, [fp, #-16]
   3cd20:	ldr	r3, [r3, #108]	; 0x6c
   3cd24:	mov	r1, r3
   3cd28:	mov	r3, r1
   3cd2c:	lsl	r3, r3, #1
   3cd30:	add	r3, r3, r1
   3cd34:	lsl	r3, r3, #3
   3cd38:	add	r0, r2, r3
   3cd3c:	ldr	r3, [fp, #-16]
   3cd40:	ldr	r3, [r3, #112]	; 0x70
   3cd44:	mov	r2, r3
   3cd48:	mov	r3, r2
   3cd4c:	lsl	r3, r3, #1
   3cd50:	add	r3, r3, r2
   3cd54:	lsl	r3, r3, #3
   3cd58:	mov	r2, r3
   3cd5c:	mov	r1, #0
   3cd60:	bl	1118c <memset@plt>
   3cd64:	ldr	r3, [fp, #-16]
   3cd68:	ldr	r3, [r3, #112]	; 0x70
   3cd6c:	lsl	r2, r3, #1
   3cd70:	ldr	r3, [fp, #-16]
   3cd74:	str	r2, [r3, #112]	; 0x70
   3cd78:	ldr	r3, [fp, #-16]
   3cd7c:	ldr	r3, [r3, #108]	; 0x6c
   3cd80:	cmp	r3, #0
   3cd84:	ble	3cdf8 <__assert_fail@plt+0x2bbb8>
   3cd88:	ldr	r3, [fp, #-16]
   3cd8c:	ldr	r2, [r3, #116]	; 0x74
   3cd90:	ldr	r3, [fp, #-16]
   3cd94:	ldr	r3, [r3, #108]	; 0x6c
   3cd98:	mov	r1, r3
   3cd9c:	mov	r3, r1
   3cda0:	lsl	r3, r3, #1
   3cda4:	add	r3, r3, r1
   3cda8:	lsl	r3, r3, #3
   3cdac:	sub	r3, r3, #24
   3cdb0:	add	r3, r2, r3
   3cdb4:	ldr	r3, [r3, #4]
   3cdb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cdbc:	cmp	r2, r3
   3cdc0:	bne	3cdf8 <__assert_fail@plt+0x2bbb8>
   3cdc4:	ldr	r3, [fp, #-16]
   3cdc8:	ldr	r2, [r3, #116]	; 0x74
   3cdcc:	ldr	r3, [fp, #-16]
   3cdd0:	ldr	r3, [r3, #108]	; 0x6c
   3cdd4:	mov	r1, r3
   3cdd8:	mov	r3, r1
   3cddc:	lsl	r3, r3, #1
   3cde0:	add	r3, r3, r1
   3cde4:	lsl	r3, r3, #3
   3cde8:	sub	r3, r3, #24
   3cdec:	add	r3, r2, r3
   3cdf0:	mov	r2, #1
   3cdf4:	strb	r2, [r3, #20]
   3cdf8:	ldr	r3, [fp, #-16]
   3cdfc:	ldr	r2, [r3, #116]	; 0x74
   3ce00:	ldr	r3, [fp, #-16]
   3ce04:	ldr	r3, [r3, #108]	; 0x6c
   3ce08:	mov	r1, r3
   3ce0c:	mov	r3, r1
   3ce10:	lsl	r3, r3, #1
   3ce14:	add	r3, r3, r1
   3ce18:	lsl	r3, r3, #3
   3ce1c:	add	r3, r2, r3
   3ce20:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ce24:	str	r2, [r3]
   3ce28:	ldr	r3, [fp, #-16]
   3ce2c:	ldr	r2, [r3, #116]	; 0x74
   3ce30:	ldr	r3, [fp, #-16]
   3ce34:	ldr	r3, [r3, #108]	; 0x6c
   3ce38:	mov	r1, r3
   3ce3c:	mov	r3, r1
   3ce40:	lsl	r3, r3, #1
   3ce44:	add	r3, r3, r1
   3ce48:	lsl	r3, r3, #3
   3ce4c:	add	r3, r2, r3
   3ce50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ce54:	str	r2, [r3, #4]
   3ce58:	ldr	r3, [fp, #-16]
   3ce5c:	ldr	r2, [r3, #116]	; 0x74
   3ce60:	ldr	r3, [fp, #-16]
   3ce64:	ldr	r3, [r3, #108]	; 0x6c
   3ce68:	mov	r1, r3
   3ce6c:	mov	r3, r1
   3ce70:	lsl	r3, r3, #1
   3ce74:	add	r3, r3, r1
   3ce78:	lsl	r3, r3, #3
   3ce7c:	add	r3, r2, r3
   3ce80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3ce84:	str	r2, [r3, #8]
   3ce88:	ldr	r3, [fp, #-16]
   3ce8c:	ldr	r2, [r3, #116]	; 0x74
   3ce90:	ldr	r3, [fp, #-16]
   3ce94:	ldr	r3, [r3, #108]	; 0x6c
   3ce98:	mov	r1, r3
   3ce9c:	mov	r3, r1
   3cea0:	lsl	r3, r3, #1
   3cea4:	add	r3, r3, r1
   3cea8:	lsl	r3, r3, #3
   3ceac:	add	r3, r2, r3
   3ceb0:	ldr	r2, [fp, #4]
   3ceb4:	str	r2, [r3, #12]
   3ceb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3cebc:	ldr	r3, [fp, #4]
   3cec0:	cmp	r2, r3
   3cec4:	bne	3ced0 <__assert_fail@plt+0x2bc90>
   3cec8:	mvn	r2, #0
   3cecc:	b	3ced4 <__assert_fail@plt+0x2bc94>
   3ced0:	mov	r2, #0
   3ced4:	ldr	r3, [fp, #-16]
   3ced8:	ldr	r1, [r3, #116]	; 0x74
   3cedc:	ldr	r3, [fp, #-16]
   3cee0:	ldr	r3, [r3, #108]	; 0x6c
   3cee4:	mov	r0, r3
   3cee8:	mov	r3, r0
   3ceec:	lsl	r3, r3, #1
   3cef0:	add	r3, r3, r0
   3cef4:	lsl	r3, r3, #3
   3cef8:	add	r3, r1, r3
   3cefc:	str	r2, [r3, #16]
   3cf00:	ldr	r3, [fp, #-16]
   3cf04:	ldr	r2, [r3, #116]	; 0x74
   3cf08:	ldr	r3, [fp, #-16]
   3cf0c:	ldr	r3, [r3, #108]	; 0x6c
   3cf10:	add	r0, r3, #1
   3cf14:	ldr	r1, [fp, #-16]
   3cf18:	str	r0, [r1, #108]	; 0x6c
   3cf1c:	mov	r1, r3
   3cf20:	mov	r3, r1
   3cf24:	lsl	r3, r3, #1
   3cf28:	add	r3, r3, r1
   3cf2c:	lsl	r3, r3, #3
   3cf30:	add	r3, r2, r3
   3cf34:	mov	r2, #0
   3cf38:	strb	r2, [r3, #20]
   3cf3c:	ldr	r3, [fp, #-16]
   3cf40:	ldr	r2, [r3, #120]	; 0x78
   3cf44:	ldr	r1, [fp, #4]
   3cf48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cf4c:	sub	r3, r1, r3
   3cf50:	cmp	r2, r3
   3cf54:	bge	3cf6c <__assert_fail@plt+0x2bd2c>
   3cf58:	ldr	r2, [fp, #4]
   3cf5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cf60:	sub	r2, r2, r3
   3cf64:	ldr	r3, [fp, #-16]
   3cf68:	str	r2, [r3, #120]	; 0x78
   3cf6c:	mov	r3, #0
   3cf70:	mov	r0, r3
   3cf74:	sub	sp, fp, #4
   3cf78:	ldr	fp, [sp]
   3cf7c:	add	sp, sp, #4
   3cf80:	pop	{pc}		; (ldr pc, [sp], #4)
   3cf84:	push	{fp}		; (str fp, [sp, #-4]!)
   3cf88:	add	fp, sp, #0
   3cf8c:	sub	sp, sp, #28
   3cf90:	str	r0, [fp, #-24]	; 0xffffffe8
   3cf94:	str	r1, [fp, #-28]	; 0xffffffe4
   3cf98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cf9c:	ldr	r3, [r3, #108]	; 0x6c
   3cfa0:	str	r3, [fp, #-12]
   3cfa4:	ldr	r3, [fp, #-12]
   3cfa8:	str	r3, [fp, #-16]
   3cfac:	mov	r3, #0
   3cfb0:	str	r3, [fp, #-8]
   3cfb4:	b	3d01c <__assert_fail@plt+0x2bddc>
   3cfb8:	ldr	r2, [fp, #-8]
   3cfbc:	ldr	r3, [fp, #-12]
   3cfc0:	add	r3, r2, r3
   3cfc4:	lsr	r2, r3, #31
   3cfc8:	add	r3, r2, r3
   3cfcc:	asr	r3, r3, #1
   3cfd0:	str	r3, [fp, #-20]	; 0xffffffec
   3cfd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cfd8:	ldr	r1, [r3, #116]	; 0x74
   3cfdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cfe0:	mov	r3, r2
   3cfe4:	lsl	r3, r3, #1
   3cfe8:	add	r3, r3, r2
   3cfec:	lsl	r3, r3, #3
   3cff0:	add	r3, r1, r3
   3cff4:	ldr	r3, [r3, #4]
   3cff8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3cffc:	cmp	r2, r3
   3d000:	ble	3d014 <__assert_fail@plt+0x2bdd4>
   3d004:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d008:	add	r3, r3, #1
   3d00c:	str	r3, [fp, #-8]
   3d010:	b	3d01c <__assert_fail@plt+0x2bddc>
   3d014:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d018:	str	r3, [fp, #-12]
   3d01c:	ldr	r2, [fp, #-8]
   3d020:	ldr	r3, [fp, #-12]
   3d024:	cmp	r2, r3
   3d028:	blt	3cfb8 <__assert_fail@plt+0x2bd78>
   3d02c:	ldr	r2, [fp, #-8]
   3d030:	ldr	r3, [fp, #-16]
   3d034:	cmp	r2, r3
   3d038:	bge	3d074 <__assert_fail@plt+0x2be34>
   3d03c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d040:	ldr	r1, [r3, #116]	; 0x74
   3d044:	ldr	r2, [fp, #-8]
   3d048:	mov	r3, r2
   3d04c:	lsl	r3, r3, #1
   3d050:	add	r3, r3, r2
   3d054:	lsl	r3, r3, #3
   3d058:	add	r3, r1, r3
   3d05c:	ldr	r3, [r3, #4]
   3d060:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d064:	cmp	r2, r3
   3d068:	bne	3d074 <__assert_fail@plt+0x2be34>
   3d06c:	ldr	r3, [fp, #-8]
   3d070:	b	3d078 <__assert_fail@plt+0x2be38>
   3d074:	mvn	r3, #0
   3d078:	mov	r0, r3
   3d07c:	add	sp, fp, #0
   3d080:	pop	{fp}		; (ldr fp, [sp], #4)
   3d084:	bx	lr
   3d088:	str	r4, [sp, #-12]!
   3d08c:	str	fp, [sp, #4]
   3d090:	str	lr, [sp, #8]
   3d094:	add	fp, sp, #8
   3d098:	sub	sp, sp, #28
   3d09c:	str	r0, [fp, #-24]	; 0xffffffe8
   3d0a0:	str	r1, [fp, #-28]	; 0xffffffe4
   3d0a4:	str	r2, [fp, #-32]	; 0xffffffe0
   3d0a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d0ac:	ldr	r3, [r3, #132]	; 0x84
   3d0b0:	cmp	r3, #0
   3d0b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d0b8:	ldr	r3, [r3, #128]	; 0x80
   3d0bc:	cmp	r3, #0
   3d0c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d0c4:	ldr	r2, [r3, #124]	; 0x7c
   3d0c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d0cc:	ldr	r3, [r3, #128]	; 0x80
   3d0d0:	cmp	r2, r3
   3d0d4:	moveq	r3, #1
   3d0d8:	movne	r3, #0
   3d0dc:	uxtb	r3, r3
   3d0e0:	cmp	r3, #0
   3d0e4:	beq	3d154 <__assert_fail@plt+0x2bf14>
   3d0e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d0ec:	ldr	r3, [r3, #128]	; 0x80
   3d0f0:	lsl	r3, r3, #1
   3d0f4:	str	r3, [fp, #-16]
   3d0f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d0fc:	ldr	r2, [r3, #132]	; 0x84
   3d100:	ldr	r3, [fp, #-16]
   3d104:	lsl	r3, r3, #2
   3d108:	mov	r1, r3
   3d10c:	mov	r0, r2
   3d110:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3d114:	str	r0, [fp, #-20]	; 0xffffffec
   3d118:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d11c:	cmp	r3, #0
   3d120:	moveq	r3, #1
   3d124:	movne	r3, #0
   3d128:	uxtb	r3, r3
   3d12c:	cmp	r3, #0
   3d130:	beq	3d13c <__assert_fail@plt+0x2befc>
   3d134:	mov	r3, #12
   3d138:	b	3d214 <__assert_fail@plt+0x2bfd4>
   3d13c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d140:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d144:	str	r2, [r3, #132]	; 0x84
   3d148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d14c:	ldr	r2, [fp, #-16]
   3d150:	str	r2, [r3, #128]	; 0x80
   3d154:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d158:	ldr	r2, [r3, #132]	; 0x84
   3d15c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d160:	ldr	r3, [r3, #124]	; 0x7c
   3d164:	lsl	r3, r3, #2
   3d168:	add	r4, r2, r3
   3d16c:	mov	r1, #24
   3d170:	mov	r0, #1
   3d174:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   3d178:	mov	r3, r0
   3d17c:	str	r3, [r4]
   3d180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d184:	ldr	r2, [r3, #132]	; 0x84
   3d188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d18c:	ldr	r3, [r3, #124]	; 0x7c
   3d190:	lsl	r3, r3, #2
   3d194:	add	r3, r2, r3
   3d198:	ldr	r3, [r3]
   3d19c:	cmp	r3, #0
   3d1a0:	moveq	r3, #1
   3d1a4:	movne	r3, #0
   3d1a8:	uxtb	r3, r3
   3d1ac:	cmp	r3, #0
   3d1b0:	beq	3d1bc <__assert_fail@plt+0x2bf7c>
   3d1b4:	mov	r3, #12
   3d1b8:	b	3d214 <__assert_fail@plt+0x2bfd4>
   3d1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d1c0:	ldr	r2, [r3, #132]	; 0x84
   3d1c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d1c8:	ldr	r3, [r3, #124]	; 0x7c
   3d1cc:	lsl	r3, r3, #2
   3d1d0:	add	r3, r2, r3
   3d1d4:	ldr	r3, [r3]
   3d1d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d1dc:	str	r2, [r3, #4]
   3d1e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d1e4:	ldr	r2, [r3, #132]	; 0x84
   3d1e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d1ec:	ldr	r3, [r3, #124]	; 0x7c
   3d1f0:	add	r0, r3, #1
   3d1f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d1f8:	str	r0, [r1, #124]	; 0x7c
   3d1fc:	lsl	r3, r3, #2
   3d200:	add	r3, r2, r3
   3d204:	ldr	r3, [r3]
   3d208:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d20c:	str	r2, [r3]
   3d210:	mov	r3, #0
   3d214:	mov	r0, r3
   3d218:	sub	sp, fp, #8
   3d21c:	ldr	r4, [sp]
   3d220:	ldr	fp, [sp, #4]
   3d224:	add	sp, sp, #8
   3d228:	pop	{pc}		; (ldr pc, [sp], #4)
   3d22c:	str	fp, [sp, #-8]!
   3d230:	str	lr, [sp, #4]
   3d234:	add	fp, sp, #4
   3d238:	sub	sp, sp, #32
   3d23c:	str	r0, [fp, #-24]	; 0xffffffe8
   3d240:	str	r1, [fp, #-28]	; 0xffffffe4
   3d244:	str	r2, [fp, #-32]	; 0xffffffe0
   3d248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d24c:	ldr	r2, [r3, #16]
   3d250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d254:	ldr	r3, [r3, #12]
   3d258:	cmp	r2, r3
   3d25c:	moveq	r3, #1
   3d260:	movne	r3, #0
   3d264:	uxtb	r3, r3
   3d268:	cmp	r3, #0
   3d26c:	beq	3d2e0 <__assert_fail@plt+0x2c0a0>
   3d270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d274:	ldr	r3, [r3, #12]
   3d278:	lsl	r3, r3, #1
   3d27c:	add	r3, r3, #1
   3d280:	str	r3, [fp, #-8]
   3d284:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d288:	ldr	r2, [r3, #20]
   3d28c:	ldr	r3, [fp, #-8]
   3d290:	lsl	r3, r3, #2
   3d294:	mov	r1, r3
   3d298:	mov	r0, r2
   3d29c:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3d2a0:	str	r0, [fp, #-12]
   3d2a4:	ldr	r3, [fp, #-12]
   3d2a8:	cmp	r3, #0
   3d2ac:	moveq	r3, #1
   3d2b0:	movne	r3, #0
   3d2b4:	uxtb	r3, r3
   3d2b8:	cmp	r3, #0
   3d2bc:	beq	3d2c8 <__assert_fail@plt+0x2c088>
   3d2c0:	mov	r3, #0
   3d2c4:	b	3d360 <__assert_fail@plt+0x2c120>
   3d2c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d2cc:	ldr	r2, [fp, #-12]
   3d2d0:	str	r2, [r3, #20]
   3d2d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d2d8:	ldr	r2, [fp, #-8]
   3d2dc:	str	r2, [r3, #12]
   3d2e0:	mov	r1, #20
   3d2e4:	mov	r0, #1
   3d2e8:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   3d2ec:	mov	r3, r0
   3d2f0:	str	r3, [fp, #-16]
   3d2f4:	ldr	r3, [fp, #-16]
   3d2f8:	cmp	r3, #0
   3d2fc:	movne	r3, #1
   3d300:	moveq	r3, #0
   3d304:	uxtb	r3, r3
   3d308:	cmp	r3, #0
   3d30c:	beq	3d35c <__assert_fail@plt+0x2c11c>
   3d310:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d314:	ldr	r2, [r3, #20]
   3d318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d31c:	ldr	r3, [r3, #16]
   3d320:	lsl	r3, r3, #2
   3d324:	add	r3, r2, r3
   3d328:	ldr	r2, [fp, #-16]
   3d32c:	str	r2, [r3]
   3d330:	ldr	r3, [fp, #-16]
   3d334:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d338:	str	r2, [r3]
   3d33c:	ldr	r3, [fp, #-16]
   3d340:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d344:	str	r2, [r3, #4]
   3d348:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d34c:	ldr	r3, [r3, #16]
   3d350:	add	r2, r3, #1
   3d354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d358:	str	r2, [r3, #16]
   3d35c:	ldr	r3, [fp, #-16]
   3d360:	mov	r0, r3
   3d364:	sub	sp, fp, #4
   3d368:	ldr	fp, [sp]
   3d36c:	add	sp, sp, #4
   3d370:	pop	{pc}		; (ldr pc, [sp], #4)
   3d374:	str	fp, [sp, #-8]!
   3d378:	str	lr, [sp, #4]
   3d37c:	add	fp, sp, #4
   3d380:	sub	sp, sp, #16
   3d384:	str	r0, [fp, #-8]
   3d388:	str	r1, [fp, #-12]
   3d38c:	str	r2, [fp, #-16]
   3d390:	str	r3, [fp, #-20]	; 0xffffffec
   3d394:	ldr	r3, [fp, #-8]
   3d398:	ldr	r2, [fp, #-12]
   3d39c:	str	r2, [r3]
   3d3a0:	ldr	r3, [fp, #-8]
   3d3a4:	ldr	r2, [fp, #-16]
   3d3a8:	str	r2, [r3, #4]
   3d3ac:	ldr	r3, [fp, #-8]
   3d3b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d3b4:	str	r2, [r3, #8]
   3d3b8:	ldr	r3, [fp, #-8]
   3d3bc:	ldr	r2, [fp, #4]
   3d3c0:	str	r2, [r3, #12]
   3d3c4:	ldr	r3, [fp, #-8]
   3d3c8:	add	r3, r3, #16
   3d3cc:	mov	r2, #12
   3d3d0:	mov	r1, #0
   3d3d4:	mov	r0, r3
   3d3d8:	bl	1118c <memset@plt>
   3d3dc:	nop	{0}
   3d3e0:	sub	sp, fp, #4
   3d3e4:	ldr	fp, [sp]
   3d3e8:	add	sp, sp, #4
   3d3ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3d3f0:	str	fp, [sp, #-8]!
   3d3f4:	str	lr, [sp, #4]
   3d3f8:	add	fp, sp, #4
   3d3fc:	sub	sp, sp, #16
   3d400:	str	r0, [fp, #-16]
   3d404:	str	r1, [fp, #-20]	; 0xffffffec
   3d408:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d40c:	mov	r1, #0
   3d410:	ldr	r0, [fp, #-16]
   3d414:	bl	111b0 <memchr@plt>
   3d418:	str	r0, [fp, #-8]
   3d41c:	ldr	r3, [fp, #-8]
   3d420:	cmp	r3, #0
   3d424:	beq	3d43c <__assert_fail@plt+0x2c1fc>
   3d428:	ldr	r2, [fp, #-8]
   3d42c:	ldr	r3, [fp, #-16]
   3d430:	sub	r3, r2, r3
   3d434:	add	r3, r3, #1
   3d438:	b	3d440 <__assert_fail@plt+0x2c200>
   3d43c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d440:	mov	r0, r3
   3d444:	sub	sp, fp, #4
   3d448:	ldr	fp, [sp]
   3d44c:	add	sp, sp, #4
   3d450:	pop	{pc}		; (ldr pc, [sp], #4)
   3d454:	push	{fp}		; (str fp, [sp, #-4]!)
   3d458:	add	fp, sp, #0
   3d45c:	sub	sp, sp, #20
   3d460:	str	r0, [fp, #-8]
   3d464:	str	r1, [fp, #-12]
   3d468:	mov	r3, r2
   3d46c:	strb	r3, [fp, #-13]
   3d470:	ldr	r3, [fp, #-8]
   3d474:	ldrb	r3, [r3]
   3d478:	ldrb	r2, [fp, #-13]
   3d47c:	cmp	r2, r3
   3d480:	bne	3d55c <__assert_fail@plt+0x2c31c>
   3d484:	ldr	r3, [fp, #-12]
   3d488:	ldrb	r3, [r3]
   3d48c:	ldrb	r2, [fp, #-13]
   3d490:	cmp	r2, r3
   3d494:	bne	3d55c <__assert_fail@plt+0x2c31c>
   3d498:	b	3d4b8 <__assert_fail@plt+0x2c278>
   3d49c:	ldr	r3, [fp, #-8]
   3d4a0:	ldrb	r3, [r3]
   3d4a4:	sub	r3, r3, #48	; 0x30
   3d4a8:	cmp	r3, #9
   3d4ac:	bls	3d4b8 <__assert_fail@plt+0x2c278>
   3d4b0:	mov	r3, #0
   3d4b4:	b	3d62c <__assert_fail@plt+0x2c3ec>
   3d4b8:	ldr	r3, [fp, #-8]
   3d4bc:	add	r3, r3, #1
   3d4c0:	str	r3, [fp, #-8]
   3d4c4:	ldr	r3, [fp, #-8]
   3d4c8:	ldrb	r2, [r3]
   3d4cc:	ldr	r3, [fp, #-12]
   3d4d0:	add	r3, r3, #1
   3d4d4:	str	r3, [fp, #-12]
   3d4d8:	ldr	r3, [fp, #-12]
   3d4dc:	ldrb	r3, [r3]
   3d4e0:	cmp	r2, r3
   3d4e4:	beq	3d49c <__assert_fail@plt+0x2c25c>
   3d4e8:	ldr	r3, [fp, #-8]
   3d4ec:	ldrb	r3, [r3]
   3d4f0:	sub	r3, r3, #48	; 0x30
   3d4f4:	cmp	r3, #9
   3d4f8:	bhi	3d52c <__assert_fail@plt+0x2c2ec>
   3d4fc:	ldr	r3, [fp, #-12]
   3d500:	ldrb	r3, [r3]
   3d504:	sub	r3, r3, #48	; 0x30
   3d508:	cmp	r3, #9
   3d50c:	bhi	3d52c <__assert_fail@plt+0x2c2ec>
   3d510:	ldr	r3, [fp, #-8]
   3d514:	ldrb	r3, [r3]
   3d518:	mov	r2, r3
   3d51c:	ldr	r3, [fp, #-12]
   3d520:	ldrb	r3, [r3]
   3d524:	sub	r3, r2, r3
   3d528:	b	3d62c <__assert_fail@plt+0x2c3ec>
   3d52c:	ldr	r3, [fp, #-8]
   3d530:	ldrb	r3, [r3]
   3d534:	sub	r3, r3, #48	; 0x30
   3d538:	cmp	r3, #9
   3d53c:	bls	3d57c <__assert_fail@plt+0x2c33c>
   3d540:	ldr	r3, [fp, #-12]
   3d544:	ldrb	r3, [r3]
   3d548:	sub	r3, r3, #48	; 0x30
   3d54c:	cmp	r3, #9
   3d550:	bls	3d5e0 <__assert_fail@plt+0x2c3a0>
   3d554:	mov	r3, #0
   3d558:	b	3d62c <__assert_fail@plt+0x2c3ec>
   3d55c:	ldr	r3, [fp, #-8]
   3d560:	add	r2, r3, #1
   3d564:	str	r2, [fp, #-8]
   3d568:	ldrb	r3, [r3]
   3d56c:	ldrb	r2, [fp, #-13]
   3d570:	cmp	r2, r3
   3d574:	bne	3d5c0 <__assert_fail@plt+0x2c380>
   3d578:	b	3d580 <__assert_fail@plt+0x2c340>
   3d57c:	nop	{0}
   3d580:	b	3d590 <__assert_fail@plt+0x2c350>
   3d584:	ldr	r3, [fp, #-8]
   3d588:	add	r3, r3, #1
   3d58c:	str	r3, [fp, #-8]
   3d590:	ldr	r3, [fp, #-8]
   3d594:	ldrb	r3, [r3]
   3d598:	cmp	r3, #48	; 0x30
   3d59c:	beq	3d584 <__assert_fail@plt+0x2c344>
   3d5a0:	ldr	r3, [fp, #-8]
   3d5a4:	ldrb	r3, [r3]
   3d5a8:	sub	r3, r3, #48	; 0x30
   3d5ac:	cmp	r3, #9
   3d5b0:	movls	r3, #1
   3d5b4:	movhi	r3, #0
   3d5b8:	uxtb	r3, r3
   3d5bc:	b	3d62c <__assert_fail@plt+0x2c3ec>
   3d5c0:	ldr	r3, [fp, #-12]
   3d5c4:	add	r2, r3, #1
   3d5c8:	str	r2, [fp, #-12]
   3d5cc:	ldrb	r3, [r3]
   3d5d0:	ldrb	r2, [fp, #-13]
   3d5d4:	cmp	r2, r3
   3d5d8:	bne	3d628 <__assert_fail@plt+0x2c3e8>
   3d5dc:	b	3d5e4 <__assert_fail@plt+0x2c3a4>
   3d5e0:	nop	{0}
   3d5e4:	b	3d5f4 <__assert_fail@plt+0x2c3b4>
   3d5e8:	ldr	r3, [fp, #-12]
   3d5ec:	add	r3, r3, #1
   3d5f0:	str	r3, [fp, #-12]
   3d5f4:	ldr	r3, [fp, #-12]
   3d5f8:	ldrb	r3, [r3]
   3d5fc:	cmp	r3, #48	; 0x30
   3d600:	beq	3d5e8 <__assert_fail@plt+0x2c3a8>
   3d604:	ldr	r3, [fp, #-12]
   3d608:	ldrb	r3, [r3]
   3d60c:	sub	r3, r3, #48	; 0x30
   3d610:	cmp	r3, #9
   3d614:	movls	r3, #1
   3d618:	movhi	r3, #0
   3d61c:	uxtb	r3, r3
   3d620:	rsb	r3, r3, #0
   3d624:	b	3d62c <__assert_fail@plt+0x2c3ec>
   3d628:	mov	r3, #0
   3d62c:	mov	r0, r3
   3d630:	add	sp, fp, #0
   3d634:	pop	{fp}		; (ldr fp, [sp], #4)
   3d638:	bx	lr
   3d63c:	str	fp, [sp, #-8]!
   3d640:	str	lr, [sp, #4]
   3d644:	add	fp, sp, #4
   3d648:	sub	sp, sp, #32
   3d64c:	str	r0, [fp, #-24]	; 0xffffffe8
   3d650:	str	r1, [fp, #-28]	; 0xffffffe4
   3d654:	str	r2, [fp, #-32]	; 0xffffffe0
   3d658:	str	r3, [fp, #-36]	; 0xffffffdc
   3d65c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d660:	ldrb	r3, [r3]
   3d664:	strb	r3, [fp, #-5]
   3d668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d66c:	ldrb	r3, [r3]
   3d670:	strb	r3, [fp, #-6]
   3d674:	ldrb	r3, [fp, #-5]
   3d678:	cmp	r3, #45	; 0x2d
   3d67c:	bne	3d998 <__assert_fail@plt+0x2c758>
   3d680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d684:	add	r3, r3, #1
   3d688:	str	r3, [fp, #-24]	; 0xffffffe8
   3d68c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d690:	ldrb	r3, [r3]
   3d694:	strb	r3, [fp, #-5]
   3d698:	ldrb	r3, [fp, #-5]
   3d69c:	cmp	r3, #48	; 0x30
   3d6a0:	beq	3d680 <__assert_fail@plt+0x2c440>
   3d6a4:	ldrb	r3, [fp, #-5]
   3d6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d6ac:	cmp	r2, r3
   3d6b0:	beq	3d680 <__assert_fail@plt+0x2c440>
   3d6b4:	ldrb	r3, [fp, #-6]
   3d6b8:	cmp	r3, #45	; 0x2d
   3d6bc:	beq	3d794 <__assert_fail@plt+0x2c554>
   3d6c0:	ldrb	r3, [fp, #-5]
   3d6c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d6c8:	cmp	r2, r3
   3d6cc:	bne	3d6f4 <__assert_fail@plt+0x2c4b4>
   3d6d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d6d4:	add	r3, r3, #1
   3d6d8:	str	r3, [fp, #-24]	; 0xffffffe8
   3d6dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d6e0:	ldrb	r3, [r3]
   3d6e4:	strb	r3, [fp, #-5]
   3d6e8:	ldrb	r3, [fp, #-5]
   3d6ec:	cmp	r3, #48	; 0x30
   3d6f0:	beq	3d6d0 <__assert_fail@plt+0x2c490>
   3d6f4:	ldrb	r3, [fp, #-5]
   3d6f8:	sub	r3, r3, #48	; 0x30
   3d6fc:	cmp	r3, #9
   3d700:	bhi	3d724 <__assert_fail@plt+0x2c4e4>
   3d704:	mvn	r3, #0
   3d708:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3d70c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d710:	add	r3, r3, #1
   3d714:	str	r3, [fp, #-28]	; 0xffffffe4
   3d718:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d71c:	ldrb	r3, [r3]
   3d720:	strb	r3, [fp, #-6]
   3d724:	ldrb	r3, [fp, #-6]
   3d728:	cmp	r3, #48	; 0x30
   3d72c:	beq	3d70c <__assert_fail@plt+0x2c4cc>
   3d730:	ldrb	r3, [fp, #-6]
   3d734:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d738:	cmp	r2, r3
   3d73c:	beq	3d70c <__assert_fail@plt+0x2c4cc>
   3d740:	ldrb	r3, [fp, #-6]
   3d744:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d748:	cmp	r2, r3
   3d74c:	bne	3d774 <__assert_fail@plt+0x2c534>
   3d750:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d754:	add	r3, r3, #1
   3d758:	str	r3, [fp, #-28]	; 0xffffffe4
   3d75c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d760:	ldrb	r3, [r3]
   3d764:	strb	r3, [fp, #-6]
   3d768:	ldrb	r3, [fp, #-6]
   3d76c:	cmp	r3, #48	; 0x30
   3d770:	beq	3d750 <__assert_fail@plt+0x2c510>
   3d774:	ldrb	r3, [fp, #-6]
   3d778:	sub	r3, r3, #48	; 0x30
   3d77c:	cmp	r3, #9
   3d780:	movls	r3, #1
   3d784:	movhi	r3, #0
   3d788:	uxtb	r3, r3
   3d78c:	rsb	r3, r3, #0
   3d790:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3d794:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d798:	add	r3, r3, #1
   3d79c:	str	r3, [fp, #-28]	; 0xffffffe4
   3d7a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d7a4:	ldrb	r3, [r3]
   3d7a8:	strb	r3, [fp, #-6]
   3d7ac:	ldrb	r3, [fp, #-6]
   3d7b0:	cmp	r3, #48	; 0x30
   3d7b4:	beq	3d794 <__assert_fail@plt+0x2c554>
   3d7b8:	ldrb	r3, [fp, #-6]
   3d7bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d7c0:	cmp	r2, r3
   3d7c4:	beq	3d794 <__assert_fail@plt+0x2c554>
   3d7c8:	b	3d81c <__assert_fail@plt+0x2c5dc>
   3d7cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d7d0:	add	r3, r3, #1
   3d7d4:	str	r3, [fp, #-24]	; 0xffffffe8
   3d7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d7dc:	ldrb	r3, [r3]
   3d7e0:	strb	r3, [fp, #-5]
   3d7e4:	ldrb	r3, [fp, #-5]
   3d7e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d7ec:	cmp	r2, r3
   3d7f0:	beq	3d7cc <__assert_fail@plt+0x2c58c>
   3d7f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d7f8:	add	r3, r3, #1
   3d7fc:	str	r3, [fp, #-28]	; 0xffffffe4
   3d800:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d804:	ldrb	r3, [r3]
   3d808:	strb	r3, [fp, #-6]
   3d80c:	ldrb	r3, [fp, #-6]
   3d810:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d814:	cmp	r2, r3
   3d818:	beq	3d7f4 <__assert_fail@plt+0x2c5b4>
   3d81c:	ldrb	r2, [fp, #-5]
   3d820:	ldrb	r3, [fp, #-6]
   3d824:	cmp	r2, r3
   3d828:	bne	3d83c <__assert_fail@plt+0x2c5fc>
   3d82c:	ldrb	r3, [fp, #-5]
   3d830:	sub	r3, r3, #48	; 0x30
   3d834:	cmp	r3, #9
   3d838:	bls	3d7cc <__assert_fail@plt+0x2c58c>
   3d83c:	ldrb	r3, [fp, #-5]
   3d840:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d844:	cmp	r2, r3
   3d848:	bne	3d85c <__assert_fail@plt+0x2c61c>
   3d84c:	ldrb	r3, [fp, #-6]
   3d850:	sub	r3, r3, #48	; 0x30
   3d854:	cmp	r3, #9
   3d858:	bhi	3d87c <__assert_fail@plt+0x2c63c>
   3d85c:	ldrb	r3, [fp, #-6]
   3d860:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d864:	cmp	r2, r3
   3d868:	bne	3d89c <__assert_fail@plt+0x2c65c>
   3d86c:	ldrb	r3, [fp, #-5]
   3d870:	sub	r3, r3, #48	; 0x30
   3d874:	cmp	r3, #9
   3d878:	bls	3d89c <__assert_fail@plt+0x2c65c>
   3d87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d880:	uxtb	r3, r3
   3d884:	mov	r2, r3
   3d888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d88c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d890:	bl	3d454 <__assert_fail@plt+0x2c214>
   3d894:	mov	r3, r0
   3d898:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3d89c:	ldrb	r2, [fp, #-6]
   3d8a0:	ldrb	r3, [fp, #-5]
   3d8a4:	sub	r3, r2, r3
   3d8a8:	str	r3, [fp, #-20]	; 0xffffffec
   3d8ac:	mov	r3, #0
   3d8b0:	str	r3, [fp, #-12]
   3d8b4:	b	3d8ec <__assert_fail@plt+0x2c6ac>
   3d8b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d8bc:	add	r3, r3, #1
   3d8c0:	str	r3, [fp, #-24]	; 0xffffffe8
   3d8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d8c8:	ldrb	r3, [r3]
   3d8cc:	strb	r3, [fp, #-5]
   3d8d0:	ldrb	r3, [fp, #-5]
   3d8d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d8d8:	cmp	r2, r3
   3d8dc:	beq	3d8b8 <__assert_fail@plt+0x2c678>
   3d8e0:	ldr	r3, [fp, #-12]
   3d8e4:	add	r3, r3, #1
   3d8e8:	str	r3, [fp, #-12]
   3d8ec:	ldrb	r3, [fp, #-5]
   3d8f0:	sub	r3, r3, #48	; 0x30
   3d8f4:	cmp	r3, #9
   3d8f8:	bls	3d8b8 <__assert_fail@plt+0x2c678>
   3d8fc:	mov	r3, #0
   3d900:	str	r3, [fp, #-16]
   3d904:	b	3d93c <__assert_fail@plt+0x2c6fc>
   3d908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d90c:	add	r3, r3, #1
   3d910:	str	r3, [fp, #-28]	; 0xffffffe4
   3d914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d918:	ldrb	r3, [r3]
   3d91c:	strb	r3, [fp, #-6]
   3d920:	ldrb	r3, [fp, #-6]
   3d924:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d928:	cmp	r2, r3
   3d92c:	beq	3d908 <__assert_fail@plt+0x2c6c8>
   3d930:	ldr	r3, [fp, #-16]
   3d934:	add	r3, r3, #1
   3d938:	str	r3, [fp, #-16]
   3d93c:	ldrb	r3, [fp, #-6]
   3d940:	sub	r3, r3, #48	; 0x30
   3d944:	cmp	r3, #9
   3d948:	bls	3d908 <__assert_fail@plt+0x2c6c8>
   3d94c:	ldr	r2, [fp, #-12]
   3d950:	ldr	r3, [fp, #-16]
   3d954:	cmp	r2, r3
   3d958:	beq	3d97c <__assert_fail@plt+0x2c73c>
   3d95c:	ldr	r2, [fp, #-12]
   3d960:	ldr	r3, [fp, #-16]
   3d964:	cmp	r2, r3
   3d968:	bcs	3d974 <__assert_fail@plt+0x2c734>
   3d96c:	mov	r3, #1
   3d970:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3d974:	mvn	r3, #0
   3d978:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3d97c:	ldr	r3, [fp, #-12]
   3d980:	cmp	r3, #0
   3d984:	bne	3d990 <__assert_fail@plt+0x2c750>
   3d988:	mov	r3, #0
   3d98c:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3d990:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d994:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3d998:	ldrb	r3, [fp, #-6]
   3d99c:	cmp	r3, #45	; 0x2d
   3d9a0:	bne	3dac0 <__assert_fail@plt+0x2c880>
   3d9a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d9a8:	add	r3, r3, #1
   3d9ac:	str	r3, [fp, #-28]	; 0xffffffe4
   3d9b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d9b4:	ldrb	r3, [r3]
   3d9b8:	strb	r3, [fp, #-6]
   3d9bc:	ldrb	r3, [fp, #-6]
   3d9c0:	cmp	r3, #48	; 0x30
   3d9c4:	beq	3d9a4 <__assert_fail@plt+0x2c764>
   3d9c8:	ldrb	r3, [fp, #-6]
   3d9cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d9d0:	cmp	r2, r3
   3d9d4:	beq	3d9a4 <__assert_fail@plt+0x2c764>
   3d9d8:	ldrb	r3, [fp, #-6]
   3d9dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d9e0:	cmp	r2, r3
   3d9e4:	bne	3da0c <__assert_fail@plt+0x2c7cc>
   3d9e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d9ec:	add	r3, r3, #1
   3d9f0:	str	r3, [fp, #-28]	; 0xffffffe4
   3d9f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d9f8:	ldrb	r3, [r3]
   3d9fc:	strb	r3, [fp, #-6]
   3da00:	ldrb	r3, [fp, #-6]
   3da04:	cmp	r3, #48	; 0x30
   3da08:	beq	3d9e8 <__assert_fail@plt+0x2c7a8>
   3da0c:	ldrb	r3, [fp, #-6]
   3da10:	sub	r3, r3, #48	; 0x30
   3da14:	cmp	r3, #9
   3da18:	bhi	3da3c <__assert_fail@plt+0x2c7fc>
   3da1c:	mov	r3, #1
   3da20:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3da24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da28:	add	r3, r3, #1
   3da2c:	str	r3, [fp, #-24]	; 0xffffffe8
   3da30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da34:	ldrb	r3, [r3]
   3da38:	strb	r3, [fp, #-5]
   3da3c:	ldrb	r3, [fp, #-5]
   3da40:	cmp	r3, #48	; 0x30
   3da44:	beq	3da24 <__assert_fail@plt+0x2c7e4>
   3da48:	ldrb	r3, [fp, #-5]
   3da4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3da50:	cmp	r2, r3
   3da54:	beq	3da24 <__assert_fail@plt+0x2c7e4>
   3da58:	ldrb	r3, [fp, #-5]
   3da5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3da60:	cmp	r2, r3
   3da64:	bne	3da8c <__assert_fail@plt+0x2c84c>
   3da68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da6c:	add	r3, r3, #1
   3da70:	str	r3, [fp, #-24]	; 0xffffffe8
   3da74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da78:	ldrb	r3, [r3]
   3da7c:	strb	r3, [fp, #-5]
   3da80:	ldrb	r3, [fp, #-5]
   3da84:	cmp	r3, #48	; 0x30
   3da88:	beq	3da68 <__assert_fail@plt+0x2c828>
   3da8c:	ldrb	r3, [fp, #-5]
   3da90:	sub	r3, r3, #48	; 0x30
   3da94:	cmp	r3, #9
   3da98:	movls	r3, #1
   3da9c:	movhi	r3, #0
   3daa0:	uxtb	r3, r3
   3daa4:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3daa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3daac:	add	r3, r3, #1
   3dab0:	str	r3, [fp, #-24]	; 0xffffffe8
   3dab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dab8:	ldrb	r3, [r3]
   3dabc:	strb	r3, [fp, #-5]
   3dac0:	ldrb	r3, [fp, #-5]
   3dac4:	cmp	r3, #48	; 0x30
   3dac8:	beq	3daa8 <__assert_fail@plt+0x2c868>
   3dacc:	ldrb	r3, [fp, #-5]
   3dad0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3dad4:	cmp	r2, r3
   3dad8:	beq	3daa8 <__assert_fail@plt+0x2c868>
   3dadc:	b	3daf8 <__assert_fail@plt+0x2c8b8>
   3dae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dae4:	add	r3, r3, #1
   3dae8:	str	r3, [fp, #-28]	; 0xffffffe4
   3daec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3daf0:	ldrb	r3, [r3]
   3daf4:	strb	r3, [fp, #-6]
   3daf8:	ldrb	r3, [fp, #-6]
   3dafc:	cmp	r3, #48	; 0x30
   3db00:	beq	3dae0 <__assert_fail@plt+0x2c8a0>
   3db04:	ldrb	r3, [fp, #-6]
   3db08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3db0c:	cmp	r2, r3
   3db10:	beq	3dae0 <__assert_fail@plt+0x2c8a0>
   3db14:	b	3db68 <__assert_fail@plt+0x2c928>
   3db18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3db1c:	add	r3, r3, #1
   3db20:	str	r3, [fp, #-24]	; 0xffffffe8
   3db24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3db28:	ldrb	r3, [r3]
   3db2c:	strb	r3, [fp, #-5]
   3db30:	ldrb	r3, [fp, #-5]
   3db34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3db38:	cmp	r2, r3
   3db3c:	beq	3db18 <__assert_fail@plt+0x2c8d8>
   3db40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3db44:	add	r3, r3, #1
   3db48:	str	r3, [fp, #-28]	; 0xffffffe4
   3db4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3db50:	ldrb	r3, [r3]
   3db54:	strb	r3, [fp, #-6]
   3db58:	ldrb	r3, [fp, #-6]
   3db5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3db60:	cmp	r2, r3
   3db64:	beq	3db40 <__assert_fail@plt+0x2c900>
   3db68:	ldrb	r2, [fp, #-5]
   3db6c:	ldrb	r3, [fp, #-6]
   3db70:	cmp	r2, r3
   3db74:	bne	3db88 <__assert_fail@plt+0x2c948>
   3db78:	ldrb	r3, [fp, #-5]
   3db7c:	sub	r3, r3, #48	; 0x30
   3db80:	cmp	r3, #9
   3db84:	bls	3db18 <__assert_fail@plt+0x2c8d8>
   3db88:	ldrb	r3, [fp, #-5]
   3db8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3db90:	cmp	r2, r3
   3db94:	bne	3dba8 <__assert_fail@plt+0x2c968>
   3db98:	ldrb	r3, [fp, #-6]
   3db9c:	sub	r3, r3, #48	; 0x30
   3dba0:	cmp	r3, #9
   3dba4:	bhi	3dbc8 <__assert_fail@plt+0x2c988>
   3dba8:	ldrb	r3, [fp, #-6]
   3dbac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3dbb0:	cmp	r2, r3
   3dbb4:	bne	3dbe8 <__assert_fail@plt+0x2c9a8>
   3dbb8:	ldrb	r3, [fp, #-5]
   3dbbc:	sub	r3, r3, #48	; 0x30
   3dbc0:	cmp	r3, #9
   3dbc4:	bls	3dbe8 <__assert_fail@plt+0x2c9a8>
   3dbc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3dbcc:	uxtb	r3, r3
   3dbd0:	mov	r2, r3
   3dbd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3dbd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dbdc:	bl	3d454 <__assert_fail@plt+0x2c214>
   3dbe0:	mov	r3, r0
   3dbe4:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3dbe8:	ldrb	r2, [fp, #-5]
   3dbec:	ldrb	r3, [fp, #-6]
   3dbf0:	sub	r3, r2, r3
   3dbf4:	str	r3, [fp, #-20]	; 0xffffffec
   3dbf8:	mov	r3, #0
   3dbfc:	str	r3, [fp, #-12]
   3dc00:	b	3dc38 <__assert_fail@plt+0x2c9f8>
   3dc04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dc08:	add	r3, r3, #1
   3dc0c:	str	r3, [fp, #-24]	; 0xffffffe8
   3dc10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dc14:	ldrb	r3, [r3]
   3dc18:	strb	r3, [fp, #-5]
   3dc1c:	ldrb	r3, [fp, #-5]
   3dc20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3dc24:	cmp	r2, r3
   3dc28:	beq	3dc04 <__assert_fail@plt+0x2c9c4>
   3dc2c:	ldr	r3, [fp, #-12]
   3dc30:	add	r3, r3, #1
   3dc34:	str	r3, [fp, #-12]
   3dc38:	ldrb	r3, [fp, #-5]
   3dc3c:	sub	r3, r3, #48	; 0x30
   3dc40:	cmp	r3, #9
   3dc44:	bls	3dc04 <__assert_fail@plt+0x2c9c4>
   3dc48:	mov	r3, #0
   3dc4c:	str	r3, [fp, #-16]
   3dc50:	b	3dc88 <__assert_fail@plt+0x2ca48>
   3dc54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dc58:	add	r3, r3, #1
   3dc5c:	str	r3, [fp, #-28]	; 0xffffffe4
   3dc60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dc64:	ldrb	r3, [r3]
   3dc68:	strb	r3, [fp, #-6]
   3dc6c:	ldrb	r3, [fp, #-6]
   3dc70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3dc74:	cmp	r2, r3
   3dc78:	beq	3dc54 <__assert_fail@plt+0x2ca14>
   3dc7c:	ldr	r3, [fp, #-16]
   3dc80:	add	r3, r3, #1
   3dc84:	str	r3, [fp, #-16]
   3dc88:	ldrb	r3, [fp, #-6]
   3dc8c:	sub	r3, r3, #48	; 0x30
   3dc90:	cmp	r3, #9
   3dc94:	bls	3dc54 <__assert_fail@plt+0x2ca14>
   3dc98:	ldr	r2, [fp, #-12]
   3dc9c:	ldr	r3, [fp, #-16]
   3dca0:	cmp	r2, r3
   3dca4:	beq	3dcc8 <__assert_fail@plt+0x2ca88>
   3dca8:	ldr	r2, [fp, #-12]
   3dcac:	ldr	r3, [fp, #-16]
   3dcb0:	cmp	r2, r3
   3dcb4:	bcs	3dcc0 <__assert_fail@plt+0x2ca80>
   3dcb8:	mvn	r3, #0
   3dcbc:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3dcc0:	mov	r3, #1
   3dcc4:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3dcc8:	ldr	r3, [fp, #-12]
   3dccc:	cmp	r3, #0
   3dcd0:	bne	3dcdc <__assert_fail@plt+0x2ca9c>
   3dcd4:	mov	r3, #0
   3dcd8:	b	3dce0 <__assert_fail@plt+0x2caa0>
   3dcdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dce0:	mov	r0, r3
   3dce4:	sub	sp, fp, #4
   3dce8:	ldr	fp, [sp]
   3dcec:	add	sp, sp, #4
   3dcf0:	pop	{pc}		; (ldr pc, [sp], #4)
   3dcf4:	str	fp, [sp, #-8]!
   3dcf8:	str	lr, [sp, #4]
   3dcfc:	add	fp, sp, #4
   3dd00:	sub	sp, sp, #8
   3dd04:	str	r0, [fp, #-8]
   3dd08:	str	r1, [fp, #-12]
   3dd0c:	mov	r3, #256	; 0x100
   3dd10:	mov	r2, #256	; 0x100
   3dd14:	ldr	r1, [fp, #-12]
   3dd18:	ldr	r0, [fp, #-8]
   3dd1c:	bl	3d63c <__assert_fail@plt+0x2c3fc>
   3dd20:	mov	r3, r0
   3dd24:	mov	r0, r3
   3dd28:	sub	sp, fp, #4
   3dd2c:	ldr	fp, [sp]
   3dd30:	add	sp, sp, #4
   3dd34:	pop	{pc}		; (ldr pc, [sp], #4)
   3dd38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3dd3c:	strd	r6, [sp, #8]
   3dd40:	str	fp, [sp, #16]
   3dd44:	str	lr, [sp, #20]
   3dd48:	add	fp, sp, #20
   3dd4c:	sub	sp, sp, #48	; 0x30
   3dd50:	str	r0, [fp, #-24]	; 0xffffffe8
   3dd54:	str	r1, [fp, #-28]	; 0xffffffe4
   3dd58:	str	r2, [fp, #-32]	; 0xffffffe0
   3dd5c:	str	r3, [fp, #-36]	; 0xffffffdc
   3dd60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dd64:	cmp	r3, #0
   3dd68:	beq	3dd90 <__assert_fail@plt+0x2cb50>
   3dd6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dd70:	str	r3, [sp]
   3dd74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3dd78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3dd7c:	movw	r1, #8076	; 0x1f8c
   3dd80:	movt	r1, #4
   3dd84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dd88:	bl	1115c <fprintf@plt>
   3dd8c:	b	3dda8 <__assert_fail@plt+0x2cb68>
   3dd90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dd94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3dd98:	movw	r1, #8088	; 0x1f98
   3dd9c:	movt	r1, #4
   3dda0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dda4:	bl	1115c <fprintf@plt>
   3dda8:	movw	r0, #8096	; 0x1fa0
   3ddac:	movt	r0, #4
   3ddb0:	bl	11138 <gettext@plt>
   3ddb4:	mov	r2, r0
   3ddb8:	movw	r3, #2022	; 0x7e6
   3ddbc:	movw	r1, #8880	; 0x22b0
   3ddc0:	movt	r1, #4
   3ddc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ddc8:	bl	1115c <fprintf@plt>
   3ddcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ddd0:	mov	r0, #10
   3ddd4:	bl	11030 <fputc_unlocked@plt>
   3ddd8:	movw	r0, #8100	; 0x1fa4
   3dddc:	movt	r0, #4
   3dde0:	bl	11138 <gettext@plt>
   3dde4:	mov	r3, r0
   3dde8:	movw	r2, #8272	; 0x2050
   3ddec:	movt	r2, #4
   3ddf0:	mov	r1, r3
   3ddf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ddf8:	bl	1115c <fprintf@plt>
   3ddfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3de00:	mov	r0, #10
   3de04:	bl	11030 <fputc_unlocked@plt>
   3de08:	ldr	r3, [fp, #8]
   3de0c:	cmp	r3, #9
   3de10:	ldrls	pc, [pc, r3, lsl #2]
   3de14:	b	3e1f4 <__assert_fail@plt+0x2cfb4>
   3de18:	andeq	lr, r3, r0, lsr #5
   3de1c:	andeq	sp, r3, r0, asr #28
   3de20:	andeq	sp, r3, r8, ror #28
   3de24:	muleq	r3, r8, lr
   3de28:	ldrdeq	sp, [r3], -ip
   3de2c:	andeq	sp, r3, r8, lsr pc
   3de30:	andeq	sp, r3, r4, lsr #31
   3de34:	andeq	lr, r3, r0, lsr #32
   3de38:	andeq	lr, r3, ip, lsr #1
   3de3c:	andeq	lr, r3, r8, asr #2
   3de40:	movw	r0, #8308	; 0x2074
   3de44:	movt	r0, #4
   3de48:	bl	11138 <gettext@plt>
   3de4c:	mov	r1, r0
   3de50:	ldr	r3, [fp, #4]
   3de54:	ldr	r3, [r3]
   3de58:	mov	r2, r3
   3de5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de60:	bl	1115c <fprintf@plt>
   3de64:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3de68:	movw	r0, #8324	; 0x2084
   3de6c:	movt	r0, #4
   3de70:	bl	11138 <gettext@plt>
   3de74:	mov	r1, r0
   3de78:	ldr	r3, [fp, #4]
   3de7c:	ldr	r2, [r3]
   3de80:	ldr	r3, [fp, #4]
   3de84:	add	r3, r3, #4
   3de88:	ldr	r3, [r3]
   3de8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de90:	bl	1115c <fprintf@plt>
   3de94:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3de98:	movw	r0, #8348	; 0x209c
   3de9c:	movt	r0, #4
   3dea0:	bl	11138 <gettext@plt>
   3dea4:	ldr	r3, [fp, #4]
   3dea8:	ldr	r2, [r3]
   3deac:	ldr	r3, [fp, #4]
   3deb0:	add	r3, r3, #4
   3deb4:	ldr	r1, [r3]
   3deb8:	ldr	r3, [fp, #4]
   3debc:	add	r3, r3, #8
   3dec0:	ldr	r3, [r3]
   3dec4:	str	r3, [sp]
   3dec8:	mov	r3, r1
   3decc:	mov	r1, r0
   3ded0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ded4:	bl	1115c <fprintf@plt>
   3ded8:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3dedc:	movw	r0, #8376	; 0x20b8
   3dee0:	movt	r0, #4
   3dee4:	bl	11138 <gettext@plt>
   3dee8:	mov	ip, r0
   3deec:	ldr	r3, [fp, #4]
   3def0:	ldr	r1, [r3]
   3def4:	ldr	r3, [fp, #4]
   3def8:	add	r3, r3, #4
   3defc:	ldr	r0, [r3]
   3df00:	ldr	r3, [fp, #4]
   3df04:	add	r3, r3, #8
   3df08:	ldr	r3, [r3]
   3df0c:	ldr	r2, [fp, #4]
   3df10:	add	r2, r2, #12
   3df14:	ldr	r2, [r2]
   3df18:	str	r2, [sp, #4]
   3df1c:	str	r3, [sp]
   3df20:	mov	r3, r0
   3df24:	mov	r2, r1
   3df28:	mov	r1, ip
   3df2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df30:	bl	1115c <fprintf@plt>
   3df34:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3df38:	movw	r0, #8408	; 0x20d8
   3df3c:	movt	r0, #4
   3df40:	bl	11138 <gettext@plt>
   3df44:	mov	lr, r0
   3df48:	ldr	r3, [fp, #4]
   3df4c:	ldr	r0, [r3]
   3df50:	ldr	r3, [fp, #4]
   3df54:	add	r3, r3, #4
   3df58:	ldr	ip, [r3]
   3df5c:	ldr	r3, [fp, #4]
   3df60:	add	r3, r3, #8
   3df64:	ldr	r3, [r3]
   3df68:	ldr	r2, [fp, #4]
   3df6c:	add	r2, r2, #12
   3df70:	ldr	r2, [r2]
   3df74:	ldr	r1, [fp, #4]
   3df78:	add	r1, r1, #16
   3df7c:	ldr	r1, [r1]
   3df80:	str	r1, [sp, #8]
   3df84:	str	r2, [sp, #4]
   3df88:	str	r3, [sp]
   3df8c:	mov	r3, ip
   3df90:	mov	r2, r0
   3df94:	mov	r1, lr
   3df98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df9c:	bl	1115c <fprintf@plt>
   3dfa0:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3dfa4:	movw	r0, #8444	; 0x20fc
   3dfa8:	movt	r0, #4
   3dfac:	bl	11138 <gettext@plt>
   3dfb0:	mov	r4, r0
   3dfb4:	ldr	r3, [fp, #4]
   3dfb8:	ldr	ip, [r3]
   3dfbc:	ldr	r3, [fp, #4]
   3dfc0:	add	r3, r3, #4
   3dfc4:	ldr	lr, [r3]
   3dfc8:	ldr	r3, [fp, #4]
   3dfcc:	add	r3, r3, #8
   3dfd0:	ldr	r3, [r3]
   3dfd4:	ldr	r2, [fp, #4]
   3dfd8:	add	r2, r2, #12
   3dfdc:	ldr	r2, [r2]
   3dfe0:	ldr	r1, [fp, #4]
   3dfe4:	add	r1, r1, #16
   3dfe8:	ldr	r1, [r1]
   3dfec:	ldr	r0, [fp, #4]
   3dff0:	add	r0, r0, #20
   3dff4:	ldr	r0, [r0]
   3dff8:	str	r0, [sp, #12]
   3dffc:	str	r1, [sp, #8]
   3e000:	str	r2, [sp, #4]
   3e004:	str	r3, [sp]
   3e008:	mov	r3, lr
   3e00c:	mov	r2, ip
   3e010:	mov	r1, r4
   3e014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e018:	bl	1115c <fprintf@plt>
   3e01c:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3e020:	movw	r0, #8484	; 0x2124
   3e024:	movt	r0, #4
   3e028:	bl	11138 <gettext@plt>
   3e02c:	mov	r5, r0
   3e030:	ldr	r3, [fp, #4]
   3e034:	ldr	lr, [r3]
   3e038:	ldr	r3, [fp, #4]
   3e03c:	add	r3, r3, #4
   3e040:	ldr	r4, [r3]
   3e044:	ldr	r3, [fp, #4]
   3e048:	add	r3, r3, #8
   3e04c:	ldr	r3, [r3]
   3e050:	ldr	r2, [fp, #4]
   3e054:	add	r2, r2, #12
   3e058:	ldr	r2, [r2]
   3e05c:	ldr	r1, [fp, #4]
   3e060:	add	r1, r1, #16
   3e064:	ldr	r1, [r1]
   3e068:	ldr	r0, [fp, #4]
   3e06c:	add	r0, r0, #20
   3e070:	ldr	r0, [r0]
   3e074:	ldr	ip, [fp, #4]
   3e078:	add	ip, ip, #24
   3e07c:	ldr	ip, [ip]
   3e080:	str	ip, [sp, #16]
   3e084:	str	r0, [sp, #12]
   3e088:	str	r1, [sp, #8]
   3e08c:	str	r2, [sp, #4]
   3e090:	str	r3, [sp]
   3e094:	mov	r3, r4
   3e098:	mov	r2, lr
   3e09c:	mov	r1, r5
   3e0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e0a4:	bl	1115c <fprintf@plt>
   3e0a8:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3e0ac:	movw	r0, #8528	; 0x2150
   3e0b0:	movt	r0, #4
   3e0b4:	bl	11138 <gettext@plt>
   3e0b8:	mov	r6, r0
   3e0bc:	ldr	r3, [fp, #4]
   3e0c0:	ldr	r4, [r3]
   3e0c4:	ldr	r3, [fp, #4]
   3e0c8:	add	r3, r3, #4
   3e0cc:	ldr	r5, [r3]
   3e0d0:	ldr	r3, [fp, #4]
   3e0d4:	add	r3, r3, #8
   3e0d8:	ldr	r3, [r3]
   3e0dc:	ldr	r2, [fp, #4]
   3e0e0:	add	r2, r2, #12
   3e0e4:	ldr	r2, [r2]
   3e0e8:	ldr	r1, [fp, #4]
   3e0ec:	add	r1, r1, #16
   3e0f0:	ldr	r1, [r1]
   3e0f4:	ldr	r0, [fp, #4]
   3e0f8:	add	r0, r0, #20
   3e0fc:	ldr	r0, [r0]
   3e100:	ldr	ip, [fp, #4]
   3e104:	add	ip, ip, #24
   3e108:	ldr	ip, [ip]
   3e10c:	ldr	lr, [fp, #4]
   3e110:	add	lr, lr, #28
   3e114:	ldr	lr, [lr]
   3e118:	str	lr, [sp, #20]
   3e11c:	str	ip, [sp, #16]
   3e120:	str	r0, [sp, #12]
   3e124:	str	r1, [sp, #8]
   3e128:	str	r2, [sp, #4]
   3e12c:	str	r3, [sp]
   3e130:	mov	r3, r5
   3e134:	mov	r2, r4
   3e138:	mov	r1, r6
   3e13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e140:	bl	1115c <fprintf@plt>
   3e144:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3e148:	movw	r0, #8576	; 0x2180
   3e14c:	movt	r0, #4
   3e150:	bl	11138 <gettext@plt>
   3e154:	mov	r7, r0
   3e158:	ldr	r3, [fp, #4]
   3e15c:	ldr	r5, [r3]
   3e160:	ldr	r3, [fp, #4]
   3e164:	add	r3, r3, #4
   3e168:	ldr	r6, [r3]
   3e16c:	ldr	r3, [fp, #4]
   3e170:	add	r3, r3, #8
   3e174:	ldr	r3, [r3]
   3e178:	ldr	r2, [fp, #4]
   3e17c:	add	r2, r2, #12
   3e180:	ldr	r2, [r2]
   3e184:	ldr	r1, [fp, #4]
   3e188:	add	r1, r1, #16
   3e18c:	ldr	r1, [r1]
   3e190:	ldr	r0, [fp, #4]
   3e194:	add	r0, r0, #20
   3e198:	ldr	r0, [r0]
   3e19c:	ldr	ip, [fp, #4]
   3e1a0:	add	ip, ip, #24
   3e1a4:	ldr	ip, [ip]
   3e1a8:	ldr	lr, [fp, #4]
   3e1ac:	add	lr, lr, #28
   3e1b0:	ldr	lr, [lr]
   3e1b4:	ldr	r4, [fp, #4]
   3e1b8:	add	r4, r4, #32
   3e1bc:	ldr	r4, [r4]
   3e1c0:	str	r4, [sp, #24]
   3e1c4:	str	lr, [sp, #20]
   3e1c8:	str	ip, [sp, #16]
   3e1cc:	str	r0, [sp, #12]
   3e1d0:	str	r1, [sp, #8]
   3e1d4:	str	r2, [sp, #4]
   3e1d8:	str	r3, [sp]
   3e1dc:	mov	r3, r6
   3e1e0:	mov	r2, r5
   3e1e4:	mov	r1, r7
   3e1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e1ec:	bl	1115c <fprintf@plt>
   3e1f0:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3e1f4:	movw	r0, #8628	; 0x21b4
   3e1f8:	movt	r0, #4
   3e1fc:	bl	11138 <gettext@plt>
   3e200:	mov	r7, r0
   3e204:	ldr	r3, [fp, #4]
   3e208:	ldr	r5, [r3]
   3e20c:	ldr	r3, [fp, #4]
   3e210:	add	r3, r3, #4
   3e214:	ldr	r6, [r3]
   3e218:	ldr	r3, [fp, #4]
   3e21c:	add	r3, r3, #8
   3e220:	ldr	r3, [r3]
   3e224:	ldr	r2, [fp, #4]
   3e228:	add	r2, r2, #12
   3e22c:	ldr	r2, [r2]
   3e230:	ldr	r1, [fp, #4]
   3e234:	add	r1, r1, #16
   3e238:	ldr	r1, [r1]
   3e23c:	ldr	r0, [fp, #4]
   3e240:	add	r0, r0, #20
   3e244:	ldr	r0, [r0]
   3e248:	ldr	ip, [fp, #4]
   3e24c:	add	ip, ip, #24
   3e250:	ldr	ip, [ip]
   3e254:	ldr	lr, [fp, #4]
   3e258:	add	lr, lr, #28
   3e25c:	ldr	lr, [lr]
   3e260:	ldr	r4, [fp, #4]
   3e264:	add	r4, r4, #32
   3e268:	ldr	r4, [r4]
   3e26c:	str	r4, [sp, #24]
   3e270:	str	lr, [sp, #20]
   3e274:	str	ip, [sp, #16]
   3e278:	str	r0, [sp, #12]
   3e27c:	str	r1, [sp, #8]
   3e280:	str	r2, [sp, #4]
   3e284:	str	r3, [sp]
   3e288:	mov	r3, r6
   3e28c:	mov	r2, r5
   3e290:	mov	r1, r7
   3e294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e298:	bl	1115c <fprintf@plt>
   3e29c:	b	3e2a4 <__assert_fail@plt+0x2d064>
   3e2a0:	nop	{0}
   3e2a4:	nop	{0}
   3e2a8:	sub	sp, fp, #20
   3e2ac:	ldrd	r4, [sp]
   3e2b0:	ldrd	r6, [sp, #8]
   3e2b4:	ldr	fp, [sp, #16]
   3e2b8:	add	sp, sp, #20
   3e2bc:	pop	{pc}		; (ldr pc, [sp], #4)
   3e2c0:	str	fp, [sp, #-8]!
   3e2c4:	str	lr, [sp, #4]
   3e2c8:	add	fp, sp, #4
   3e2cc:	sub	sp, sp, #32
   3e2d0:	str	r0, [fp, #-16]
   3e2d4:	str	r1, [fp, #-20]	; 0xffffffec
   3e2d8:	str	r2, [fp, #-24]	; 0xffffffe8
   3e2dc:	str	r3, [fp, #-28]	; 0xffffffe4
   3e2e0:	mov	r3, #0
   3e2e4:	str	r3, [fp, #-8]
   3e2e8:	b	3e2f8 <__assert_fail@plt+0x2d0b8>
   3e2ec:	ldr	r3, [fp, #-8]
   3e2f0:	add	r3, r3, #1
   3e2f4:	str	r3, [fp, #-8]
   3e2f8:	ldr	r3, [fp, #-8]
   3e2fc:	lsl	r3, r3, #2
   3e300:	ldr	r2, [fp, #4]
   3e304:	add	r3, r2, r3
   3e308:	ldr	r3, [r3]
   3e30c:	cmp	r3, #0
   3e310:	bne	3e2ec <__assert_fail@plt+0x2d0ac>
   3e314:	ldr	r3, [fp, #-8]
   3e318:	str	r3, [sp, #4]
   3e31c:	ldr	r3, [fp, #4]
   3e320:	str	r3, [sp]
   3e324:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e32c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e330:	ldr	r0, [fp, #-16]
   3e334:	bl	3dd38 <__assert_fail@plt+0x2caf8>
   3e338:	nop	{0}
   3e33c:	sub	sp, fp, #4
   3e340:	ldr	fp, [sp]
   3e344:	add	sp, sp, #4
   3e348:	pop	{pc}		; (ldr pc, [sp], #4)
   3e34c:	str	fp, [sp, #-8]!
   3e350:	str	lr, [sp, #4]
   3e354:	add	fp, sp, #4
   3e358:	sub	sp, sp, #72	; 0x48
   3e35c:	str	r0, [fp, #-56]	; 0xffffffc8
   3e360:	str	r1, [fp, #-60]	; 0xffffffc4
   3e364:	str	r2, [fp, #-64]	; 0xffffffc0
   3e368:	str	r3, [fp, #-68]	; 0xffffffbc
   3e36c:	mov	r3, #0
   3e370:	str	r3, [fp, #-8]
   3e374:	b	3e384 <__assert_fail@plt+0x2d144>
   3e378:	ldr	r3, [fp, #-8]
   3e37c:	add	r3, r3, #1
   3e380:	str	r3, [fp, #-8]
   3e384:	ldr	r3, [fp, #-8]
   3e388:	cmp	r3, #9
   3e38c:	bhi	3e3d0 <__assert_fail@plt+0x2d190>
   3e390:	ldr	r3, [fp, #4]
   3e394:	add	r2, r3, #4
   3e398:	str	r2, [fp, #4]
   3e39c:	ldr	r2, [r3]
   3e3a0:	ldr	r3, [fp, #-8]
   3e3a4:	lsl	r3, r3, #2
   3e3a8:	sub	r1, fp, #4
   3e3ac:	add	r3, r1, r3
   3e3b0:	str	r2, [r3, #-44]	; 0xffffffd4
   3e3b4:	ldr	r3, [fp, #-8]
   3e3b8:	lsl	r3, r3, #2
   3e3bc:	sub	r2, fp, #4
   3e3c0:	add	r3, r2, r3
   3e3c4:	ldr	r3, [r3, #-44]	; 0xffffffd4
   3e3c8:	cmp	r3, #0
   3e3cc:	bne	3e378 <__assert_fail@plt+0x2d138>
   3e3d0:	ldr	r3, [fp, #-8]
   3e3d4:	str	r3, [sp, #4]
   3e3d8:	sub	r3, fp, #48	; 0x30
   3e3dc:	str	r3, [sp]
   3e3e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3e3e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3e3e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3e3ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3e3f0:	bl	3dd38 <__assert_fail@plt+0x2caf8>
   3e3f4:	nop	{0}
   3e3f8:	sub	sp, fp, #4
   3e3fc:	ldr	fp, [sp]
   3e400:	add	sp, sp, #4
   3e404:	pop	{pc}		; (ldr pc, [sp], #4)
   3e408:	push	{r3}		; (str r3, [sp, #-4]!)
   3e40c:	str	fp, [sp, #-8]!
   3e410:	str	lr, [sp, #4]
   3e414:	add	fp, sp, #4
   3e418:	sub	sp, sp, #36	; 0x24
   3e41c:	str	r0, [fp, #-20]	; 0xffffffec
   3e420:	str	r1, [fp, #-24]	; 0xffffffe8
   3e424:	str	r2, [fp, #-28]	; 0xffffffe4
   3e428:	add	r3, fp, #8
   3e42c:	str	r3, [fp, #-12]
   3e430:	ldr	r3, [fp, #-12]
   3e434:	str	r3, [sp]
   3e438:	ldr	r3, [fp, #4]
   3e43c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e444:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e448:	bl	3e34c <__assert_fail@plt+0x2d10c>
   3e44c:	nop	{0}
   3e450:	sub	sp, fp, #4
   3e454:	ldr	fp, [sp]
   3e458:	ldr	lr, [sp, #4]
   3e45c:	add	sp, sp, #8
   3e460:	add	sp, sp, #4
   3e464:	bx	lr
   3e468:	str	fp, [sp, #-8]!
   3e46c:	str	lr, [sp, #4]
   3e470:	add	fp, sp, #4
   3e474:	movw	r3, #12684	; 0x318c
   3e478:	movt	r3, #5
   3e47c:	ldr	r3, [r3]
   3e480:	mov	r1, r3
   3e484:	mov	r0, #10
   3e488:	bl	11030 <fputc_unlocked@plt>
   3e48c:	movw	r0, #8688	; 0x21f0
   3e490:	movt	r0, #4
   3e494:	bl	11138 <gettext@plt>
   3e498:	mov	r3, r0
   3e49c:	movw	r1, #8708	; 0x2204
   3e4a0:	movt	r1, #4
   3e4a4:	mov	r0, r3
   3e4a8:	bl	10f88 <printf@plt>
   3e4ac:	movw	r0, #8732	; 0x221c
   3e4b0:	movt	r0, #4
   3e4b4:	bl	11138 <gettext@plt>
   3e4b8:	mov	r3, r0
   3e4bc:	movw	r2, #8752	; 0x2230
   3e4c0:	movt	r2, #4
   3e4c4:	movw	r1, #8792	; 0x2258
   3e4c8:	movt	r1, #4
   3e4cc:	mov	r0, r3
   3e4d0:	bl	10f88 <printf@plt>
   3e4d4:	movw	r0, #8808	; 0x2268
   3e4d8:	movt	r0, #4
   3e4dc:	bl	11138 <gettext@plt>
   3e4e0:	mov	r3, r0
   3e4e4:	movw	r1, #8848	; 0x2290
   3e4e8:	movt	r1, #4
   3e4ec:	mov	r0, r3
   3e4f0:	bl	10f88 <printf@plt>
   3e4f4:	nop	{0}
   3e4f8:	sub	sp, fp, #4
   3e4fc:	ldr	fp, [sp]
   3e500:	add	sp, sp, #4
   3e504:	pop	{pc}		; (ldr pc, [sp], #4)
   3e508:	str	fp, [sp, #-8]!
   3e50c:	str	lr, [sp, #4]
   3e510:	add	fp, sp, #4
   3e514:	sub	sp, sp, #16
   3e518:	str	r0, [fp, #-8]
   3e51c:	str	r1, [fp, #-12]
   3e520:	str	r2, [fp, #-16]
   3e524:	ldr	r2, [fp, #-16]
   3e528:	ldr	r1, [fp, #-12]
   3e52c:	ldr	r0, [fp, #-8]
   3e530:	bl	3e6ec <__assert_fail@plt+0x2d4ac>
   3e534:	mov	r3, r0
   3e538:	mov	r0, r3
   3e53c:	sub	sp, fp, #4
   3e540:	ldr	fp, [sp]
   3e544:	add	sp, sp, #4
   3e548:	pop	{pc}		; (ldr pc, [sp], #4)
   3e54c:	str	fp, [sp, #-8]!
   3e550:	str	lr, [sp, #4]
   3e554:	add	fp, sp, #4
   3e558:	sub	sp, sp, #8
   3e55c:	str	r0, [fp, #-8]
   3e560:	ldr	r3, [fp, #-8]
   3e564:	cmp	r3, #0
   3e568:	bne	3e570 <__assert_fail@plt+0x2d330>
   3e56c:	bl	3edfc <__assert_fail@plt+0x2dbbc>
   3e570:	ldr	r3, [fp, #-8]
   3e574:	mov	r0, r3
   3e578:	sub	sp, fp, #4
   3e57c:	ldr	fp, [sp]
   3e580:	add	sp, sp, #4
   3e584:	pop	{pc}		; (ldr pc, [sp], #4)
   3e588:	str	fp, [sp, #-8]!
   3e58c:	str	lr, [sp, #4]
   3e590:	add	fp, sp, #4
   3e594:	sub	sp, sp, #8
   3e598:	str	r0, [fp, #-8]
   3e59c:	ldr	r0, [fp, #-8]
   3e5a0:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3e5a4:	mov	r3, r0
   3e5a8:	mov	r0, r3
   3e5ac:	bl	3e54c <__assert_fail@plt+0x2d30c>
   3e5b0:	mov	r3, r0
   3e5b4:	mov	r0, r3
   3e5b8:	sub	sp, fp, #4
   3e5bc:	ldr	fp, [sp]
   3e5c0:	add	sp, sp, #4
   3e5c4:	pop	{pc}		; (ldr pc, [sp], #4)
   3e5c8:	str	fp, [sp, #-8]!
   3e5cc:	str	lr, [sp, #4]
   3e5d0:	add	fp, sp, #4
   3e5d4:	sub	sp, sp, #8
   3e5d8:	str	r0, [fp, #-8]
   3e5dc:	ldr	r0, [fp, #-8]
   3e5e0:	bl	3f9d4 <__assert_fail@plt+0x2e794>
   3e5e4:	mov	r3, r0
   3e5e8:	mov	r0, r3
   3e5ec:	bl	3e54c <__assert_fail@plt+0x2d30c>
   3e5f0:	mov	r3, r0
   3e5f4:	mov	r0, r3
   3e5f8:	sub	sp, fp, #4
   3e5fc:	ldr	fp, [sp]
   3e600:	add	sp, sp, #4
   3e604:	pop	{pc}		; (ldr pc, [sp], #4)
   3e608:	str	fp, [sp, #-8]!
   3e60c:	str	lr, [sp, #4]
   3e610:	add	fp, sp, #4
   3e614:	sub	sp, sp, #8
   3e618:	str	r0, [fp, #-8]
   3e61c:	ldr	r0, [fp, #-8]
   3e620:	bl	3e588 <__assert_fail@plt+0x2d348>
   3e624:	mov	r3, r0
   3e628:	mov	r0, r3
   3e62c:	sub	sp, fp, #4
   3e630:	ldr	fp, [sp]
   3e634:	add	sp, sp, #4
   3e638:	pop	{pc}		; (ldr pc, [sp], #4)
   3e63c:	str	fp, [sp, #-8]!
   3e640:	str	lr, [sp, #4]
   3e644:	add	fp, sp, #4
   3e648:	sub	sp, sp, #16
   3e64c:	str	r0, [fp, #-16]
   3e650:	str	r1, [fp, #-20]	; 0xffffffec
   3e654:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e658:	ldr	r0, [fp, #-16]
   3e65c:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3e660:	str	r0, [fp, #-8]
   3e664:	ldr	r3, [fp, #-8]
   3e668:	cmp	r3, #0
   3e66c:	bne	3e68c <__assert_fail@plt+0x2d44c>
   3e670:	ldr	r3, [fp, #-16]
   3e674:	cmp	r3, #0
   3e678:	beq	3e688 <__assert_fail@plt+0x2d448>
   3e67c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e680:	cmp	r3, #0
   3e684:	beq	3e68c <__assert_fail@plt+0x2d44c>
   3e688:	bl	3edfc <__assert_fail@plt+0x2dbbc>
   3e68c:	ldr	r3, [fp, #-8]
   3e690:	mov	r0, r3
   3e694:	sub	sp, fp, #4
   3e698:	ldr	fp, [sp]
   3e69c:	add	sp, sp, #4
   3e6a0:	pop	{pc}		; (ldr pc, [sp], #4)
   3e6a4:	str	fp, [sp, #-8]!
   3e6a8:	str	lr, [sp, #4]
   3e6ac:	add	fp, sp, #4
   3e6b0:	sub	sp, sp, #8
   3e6b4:	str	r0, [fp, #-8]
   3e6b8:	str	r1, [fp, #-12]
   3e6bc:	ldr	r1, [fp, #-12]
   3e6c0:	ldr	r0, [fp, #-8]
   3e6c4:	bl	3fa0c <__assert_fail@plt+0x2e7cc>
   3e6c8:	mov	r3, r0
   3e6cc:	mov	r0, r3
   3e6d0:	bl	3e54c <__assert_fail@plt+0x2d30c>
   3e6d4:	mov	r3, r0
   3e6d8:	mov	r0, r3
   3e6dc:	sub	sp, fp, #4
   3e6e0:	ldr	fp, [sp]
   3e6e4:	add	sp, sp, #4
   3e6e8:	pop	{pc}		; (ldr pc, [sp], #4)
   3e6ec:	str	fp, [sp, #-8]!
   3e6f0:	str	lr, [sp, #4]
   3e6f4:	add	fp, sp, #4
   3e6f8:	sub	sp, sp, #24
   3e6fc:	str	r0, [fp, #-16]
   3e700:	str	r1, [fp, #-20]	; 0xffffffec
   3e704:	str	r2, [fp, #-24]	; 0xffffffe8
   3e708:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e70c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e710:	ldr	r0, [fp, #-16]
   3e714:	bl	3fdc8 <__assert_fail@plt+0x2eb88>
   3e718:	str	r0, [fp, #-8]
   3e71c:	ldr	r3, [fp, #-8]
   3e720:	cmp	r3, #0
   3e724:	bne	3e750 <__assert_fail@plt+0x2d510>
   3e728:	ldr	r3, [fp, #-16]
   3e72c:	cmp	r3, #0
   3e730:	beq	3e74c <__assert_fail@plt+0x2d50c>
   3e734:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e738:	cmp	r3, #0
   3e73c:	beq	3e750 <__assert_fail@plt+0x2d510>
   3e740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e744:	cmp	r3, #0
   3e748:	beq	3e750 <__assert_fail@plt+0x2d510>
   3e74c:	bl	3edfc <__assert_fail@plt+0x2dbbc>
   3e750:	ldr	r3, [fp, #-8]
   3e754:	mov	r0, r3
   3e758:	sub	sp, fp, #4
   3e75c:	ldr	fp, [sp]
   3e760:	add	sp, sp, #4
   3e764:	pop	{pc}		; (ldr pc, [sp], #4)
   3e768:	str	fp, [sp, #-8]!
   3e76c:	str	lr, [sp, #4]
   3e770:	add	fp, sp, #4
   3e774:	sub	sp, sp, #16
   3e778:	str	r0, [fp, #-8]
   3e77c:	str	r1, [fp, #-12]
   3e780:	str	r2, [fp, #-16]
   3e784:	ldr	r2, [fp, #-16]
   3e788:	ldr	r1, [fp, #-12]
   3e78c:	ldr	r0, [fp, #-8]
   3e790:	bl	3faac <__assert_fail@plt+0x2e86c>
   3e794:	mov	r3, r0
   3e798:	mov	r0, r3
   3e79c:	bl	3e54c <__assert_fail@plt+0x2d30c>
   3e7a0:	mov	r3, r0
   3e7a4:	mov	r0, r3
   3e7a8:	sub	sp, fp, #4
   3e7ac:	ldr	fp, [sp]
   3e7b0:	add	sp, sp, #4
   3e7b4:	pop	{pc}		; (ldr pc, [sp], #4)
   3e7b8:	str	fp, [sp, #-8]!
   3e7bc:	str	lr, [sp, #4]
   3e7c0:	add	fp, sp, #4
   3e7c4:	sub	sp, sp, #8
   3e7c8:	str	r0, [fp, #-8]
   3e7cc:	str	r1, [fp, #-12]
   3e7d0:	ldr	r2, [fp, #-12]
   3e7d4:	ldr	r1, [fp, #-8]
   3e7d8:	mov	r0, #0
   3e7dc:	bl	3e6ec <__assert_fail@plt+0x2d4ac>
   3e7e0:	mov	r3, r0
   3e7e4:	mov	r0, r3
   3e7e8:	sub	sp, fp, #4
   3e7ec:	ldr	fp, [sp]
   3e7f0:	add	sp, sp, #4
   3e7f4:	pop	{pc}		; (ldr pc, [sp], #4)
   3e7f8:	str	fp, [sp, #-8]!
   3e7fc:	str	lr, [sp, #4]
   3e800:	add	fp, sp, #4
   3e804:	sub	sp, sp, #8
   3e808:	str	r0, [fp, #-8]
   3e80c:	str	r1, [fp, #-12]
   3e810:	ldr	r2, [fp, #-12]
   3e814:	ldr	r1, [fp, #-8]
   3e818:	mov	r0, #0
   3e81c:	bl	3e768 <__assert_fail@plt+0x2d528>
   3e820:	mov	r3, r0
   3e824:	mov	r0, r3
   3e828:	sub	sp, fp, #4
   3e82c:	ldr	fp, [sp]
   3e830:	add	sp, sp, #4
   3e834:	pop	{pc}		; (ldr pc, [sp], #4)
   3e838:	str	fp, [sp, #-8]!
   3e83c:	str	lr, [sp, #4]
   3e840:	add	fp, sp, #4
   3e844:	sub	sp, sp, #8
   3e848:	str	r0, [fp, #-8]
   3e84c:	str	r1, [fp, #-12]
   3e850:	mov	r2, #1
   3e854:	ldr	r1, [fp, #-12]
   3e858:	ldr	r0, [fp, #-8]
   3e85c:	bl	3e878 <__assert_fail@plt+0x2d638>
   3e860:	mov	r3, r0
   3e864:	mov	r0, r3
   3e868:	sub	sp, fp, #4
   3e86c:	ldr	fp, [sp]
   3e870:	add	sp, sp, #4
   3e874:	pop	{pc}		; (ldr pc, [sp], #4)
   3e878:	str	fp, [sp, #-8]!
   3e87c:	str	lr, [sp, #4]
   3e880:	add	fp, sp, #4
   3e884:	sub	sp, sp, #24
   3e888:	str	r0, [fp, #-16]
   3e88c:	str	r1, [fp, #-20]	; 0xffffffec
   3e890:	str	r2, [fp, #-24]	; 0xffffffe8
   3e894:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e898:	ldr	r3, [r3]
   3e89c:	str	r3, [fp, #-8]
   3e8a0:	ldr	r3, [fp, #-16]
   3e8a4:	cmp	r3, #0
   3e8a8:	bne	3e8f0 <__assert_fail@plt+0x2d6b0>
   3e8ac:	ldr	r3, [fp, #-8]
   3e8b0:	cmp	r3, #0
   3e8b4:	bne	3e92c <__assert_fail@plt+0x2d6ec>
   3e8b8:	mov	r2, #64	; 0x40
   3e8bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e8c0:	udiv	r3, r2, r3
   3e8c4:	str	r3, [fp, #-8]
   3e8c8:	ldr	r3, [fp, #-8]
   3e8cc:	cmp	r3, #0
   3e8d0:	moveq	r3, #1
   3e8d4:	movne	r3, #0
   3e8d8:	uxtb	r3, r3
   3e8dc:	mov	r2, r3
   3e8e0:	ldr	r3, [fp, #-8]
   3e8e4:	add	r3, r2, r3
   3e8e8:	str	r3, [fp, #-8]
   3e8ec:	b	3e92c <__assert_fail@plt+0x2d6ec>
   3e8f0:	ldr	r2, [fp, #-8]
   3e8f4:	ldr	r3, [fp, #-8]
   3e8f8:	lsr	r3, r3, #1
   3e8fc:	add	r3, r3, #1
   3e900:	mov	r1, #0
   3e904:	adds	r3, r2, r3
   3e908:	bcc	3e910 <__assert_fail@plt+0x2d6d0>
   3e90c:	mov	r1, #1
   3e910:	str	r3, [fp, #-8]
   3e914:	mov	r3, r1
   3e918:	and	r3, r3, #1
   3e91c:	uxtb	r3, r3
   3e920:	cmp	r3, #0
   3e924:	beq	3e92c <__assert_fail@plt+0x2d6ec>
   3e928:	bl	3edfc <__assert_fail@plt+0x2dbbc>
   3e92c:	ldr	r3, [fp, #-8]
   3e930:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e934:	mov	r1, r3
   3e938:	ldr	r0, [fp, #-16]
   3e93c:	bl	3e6ec <__assert_fail@plt+0x2d4ac>
   3e940:	str	r0, [fp, #-16]
   3e944:	ldr	r2, [fp, #-8]
   3e948:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e94c:	str	r2, [r3]
   3e950:	ldr	r3, [fp, #-16]
   3e954:	mov	r0, r3
   3e958:	sub	sp, fp, #4
   3e95c:	ldr	fp, [sp]
   3e960:	add	sp, sp, #4
   3e964:	pop	{pc}		; (ldr pc, [sp], #4)
   3e968:	str	fp, [sp, #-8]!
   3e96c:	str	lr, [sp, #4]
   3e970:	add	fp, sp, #4
   3e974:	sub	sp, sp, #32
   3e978:	str	r0, [fp, #-24]	; 0xffffffe8
   3e97c:	str	r1, [fp, #-28]	; 0xffffffe4
   3e980:	str	r2, [fp, #-32]	; 0xffffffe0
   3e984:	str	r3, [fp, #-36]	; 0xffffffdc
   3e988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e98c:	ldr	r3, [r3]
   3e990:	str	r3, [fp, #-8]
   3e994:	ldr	r3, [fp, #-8]
   3e998:	asr	r3, r3, #1
   3e99c:	mov	r1, #0
   3e9a0:	ldr	r2, [fp, #-8]
   3e9a4:	adds	r3, r2, r3
   3e9a8:	bvc	3e9b0 <__assert_fail@plt+0x2d770>
   3e9ac:	mov	r1, #1
   3e9b0:	str	r3, [fp, #-16]
   3e9b4:	mov	r3, r1
   3e9b8:	and	r3, r3, #1
   3e9bc:	uxtb	r3, r3
   3e9c0:	cmp	r3, #0
   3e9c4:	beq	3e9d0 <__assert_fail@plt+0x2d790>
   3e9c8:	mvn	r3, #-2147483648	; 0x80000000
   3e9cc:	str	r3, [fp, #-16]
   3e9d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e9d4:	cmp	r3, #0
   3e9d8:	blt	3e9f4 <__assert_fail@plt+0x2d7b4>
   3e9dc:	ldr	r3, [fp, #-16]
   3e9e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3e9e4:	cmp	r2, r3
   3e9e8:	bge	3e9f4 <__assert_fail@plt+0x2d7b4>
   3e9ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e9f0:	str	r3, [fp, #-16]
   3e9f4:	ldr	r2, [fp, #-16]
   3e9f8:	mov	lr, #0
   3e9fc:	ldr	r3, [fp, #4]
   3ea00:	smull	r2, r3, r2, r3
   3ea04:	mov	r0, #0
   3ea08:	mov	r1, #0
   3ea0c:	mov	r0, r3
   3ea10:	asr	r1, r3, #31
   3ea14:	asr	ip, r2, #31
   3ea18:	cmp	ip, r0
   3ea1c:	beq	3ea24 <__assert_fail@plt+0x2d7e4>
   3ea20:	mov	lr, #1
   3ea24:	mov	r3, r2
   3ea28:	str	r3, [fp, #-20]	; 0xffffffec
   3ea2c:	mov	r3, lr
   3ea30:	and	r3, r3, #1
   3ea34:	uxtb	r3, r3
   3ea38:	cmp	r3, #0
   3ea3c:	beq	3ea48 <__assert_fail@plt+0x2d808>
   3ea40:	mvn	r3, #-2147483648	; 0x80000000
   3ea44:	b	3ea60 <__assert_fail@plt+0x2d820>
   3ea48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ea4c:	cmp	r3, #63	; 0x3f
   3ea50:	bgt	3ea5c <__assert_fail@plt+0x2d81c>
   3ea54:	mov	r3, #64	; 0x40
   3ea58:	b	3ea60 <__assert_fail@plt+0x2d820>
   3ea5c:	mov	r3, #0
   3ea60:	str	r3, [fp, #-12]
   3ea64:	ldr	r3, [fp, #-12]
   3ea68:	cmp	r3, #0
   3ea6c:	beq	3eaa4 <__assert_fail@plt+0x2d864>
   3ea70:	ldr	r2, [fp, #-12]
   3ea74:	ldr	r3, [fp, #4]
   3ea78:	sdiv	r3, r2, r3
   3ea7c:	str	r3, [fp, #-16]
   3ea80:	ldr	r3, [fp, #-12]
   3ea84:	ldr	r2, [fp, #4]
   3ea88:	sdiv	r2, r3, r2
   3ea8c:	ldr	r1, [fp, #4]
   3ea90:	mul	r2, r1, r2
   3ea94:	sub	r3, r3, r2
   3ea98:	ldr	r2, [fp, #-12]
   3ea9c:	sub	r3, r2, r3
   3eaa0:	str	r3, [fp, #-20]	; 0xffffffec
   3eaa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3eaa8:	cmp	r3, #0
   3eaac:	bne	3eabc <__assert_fail@plt+0x2d87c>
   3eab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3eab4:	mov	r2, #0
   3eab8:	str	r2, [r3]
   3eabc:	ldr	r2, [fp, #-16]
   3eac0:	ldr	r3, [fp, #-8]
   3eac4:	sub	r3, r2, r3
   3eac8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3eacc:	cmp	r2, r3
   3ead0:	ble	3eb70 <__assert_fail@plt+0x2d930>
   3ead4:	mov	r1, #0
   3ead8:	ldr	r2, [fp, #-8]
   3eadc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3eae0:	adds	r3, r2, r3
   3eae4:	bvc	3eaec <__assert_fail@plt+0x2d8ac>
   3eae8:	mov	r1, #1
   3eaec:	str	r3, [fp, #-16]
   3eaf0:	mov	r3, r1
   3eaf4:	and	r3, r3, #1
   3eaf8:	uxtb	r3, r3
   3eafc:	cmp	r3, #0
   3eb00:	bne	3eb6c <__assert_fail@plt+0x2d92c>
   3eb04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3eb08:	cmp	r3, #0
   3eb0c:	blt	3eb20 <__assert_fail@plt+0x2d8e0>
   3eb10:	ldr	r3, [fp, #-16]
   3eb14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3eb18:	cmp	r2, r3
   3eb1c:	blt	3eb6c <__assert_fail@plt+0x2d92c>
   3eb20:	ldr	r2, [fp, #-16]
   3eb24:	mov	lr, #0
   3eb28:	ldr	r3, [fp, #4]
   3eb2c:	smull	r2, r3, r2, r3
   3eb30:	mov	r0, #0
   3eb34:	mov	r1, #0
   3eb38:	mov	r0, r3
   3eb3c:	asr	r1, r3, #31
   3eb40:	asr	ip, r2, #31
   3eb44:	cmp	ip, r0
   3eb48:	beq	3eb50 <__assert_fail@plt+0x2d910>
   3eb4c:	mov	lr, #1
   3eb50:	mov	r3, r2
   3eb54:	str	r3, [fp, #-20]	; 0xffffffec
   3eb58:	mov	r3, lr
   3eb5c:	and	r3, r3, #1
   3eb60:	uxtb	r3, r3
   3eb64:	cmp	r3, #0
   3eb68:	beq	3eb70 <__assert_fail@plt+0x2d930>
   3eb6c:	bl	3edfc <__assert_fail@plt+0x2dbbc>
   3eb70:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eb74:	mov	r1, r3
   3eb78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eb7c:	bl	3e63c <__assert_fail@plt+0x2d3fc>
   3eb80:	str	r0, [fp, #-24]	; 0xffffffe8
   3eb84:	ldr	r2, [fp, #-16]
   3eb88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3eb8c:	str	r2, [r3]
   3eb90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3eb94:	mov	r0, r3
   3eb98:	sub	sp, fp, #4
   3eb9c:	ldr	fp, [sp]
   3eba0:	add	sp, sp, #4
   3eba4:	pop	{pc}		; (ldr pc, [sp], #4)
   3eba8:	str	fp, [sp, #-8]!
   3ebac:	str	lr, [sp, #4]
   3ebb0:	add	fp, sp, #4
   3ebb4:	sub	sp, sp, #8
   3ebb8:	str	r0, [fp, #-8]
   3ebbc:	mov	r1, #1
   3ebc0:	ldr	r0, [fp, #-8]
   3ebc4:	bl	3ec18 <__assert_fail@plt+0x2d9d8>
   3ebc8:	mov	r3, r0
   3ebcc:	mov	r0, r3
   3ebd0:	sub	sp, fp, #4
   3ebd4:	ldr	fp, [sp]
   3ebd8:	add	sp, sp, #4
   3ebdc:	pop	{pc}		; (ldr pc, [sp], #4)
   3ebe0:	str	fp, [sp, #-8]!
   3ebe4:	str	lr, [sp, #4]
   3ebe8:	add	fp, sp, #4
   3ebec:	sub	sp, sp, #8
   3ebf0:	str	r0, [fp, #-8]
   3ebf4:	mov	r1, #1
   3ebf8:	ldr	r0, [fp, #-8]
   3ebfc:	bl	3ec60 <__assert_fail@plt+0x2da20>
   3ec00:	mov	r3, r0
   3ec04:	mov	r0, r3
   3ec08:	sub	sp, fp, #4
   3ec0c:	ldr	fp, [sp]
   3ec10:	add	sp, sp, #4
   3ec14:	pop	{pc}		; (ldr pc, [sp], #4)
   3ec18:	str	fp, [sp, #-8]!
   3ec1c:	str	lr, [sp, #4]
   3ec20:	add	fp, sp, #4
   3ec24:	sub	sp, sp, #8
   3ec28:	str	r0, [fp, #-8]
   3ec2c:	str	r1, [fp, #-12]
   3ec30:	ldr	r1, [fp, #-12]
   3ec34:	ldr	r0, [fp, #-8]
   3ec38:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   3ec3c:	mov	r3, r0
   3ec40:	mov	r0, r3
   3ec44:	bl	3e54c <__assert_fail@plt+0x2d30c>
   3ec48:	mov	r3, r0
   3ec4c:	mov	r0, r3
   3ec50:	sub	sp, fp, #4
   3ec54:	ldr	fp, [sp]
   3ec58:	add	sp, sp, #4
   3ec5c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ec60:	str	fp, [sp, #-8]!
   3ec64:	str	lr, [sp, #4]
   3ec68:	add	fp, sp, #4
   3ec6c:	sub	sp, sp, #8
   3ec70:	str	r0, [fp, #-8]
   3ec74:	str	r1, [fp, #-12]
   3ec78:	ldr	r1, [fp, #-12]
   3ec7c:	ldr	r0, [fp, #-8]
   3ec80:	bl	3fa68 <__assert_fail@plt+0x2e828>
   3ec84:	mov	r3, r0
   3ec88:	mov	r0, r3
   3ec8c:	bl	3e54c <__assert_fail@plt+0x2d30c>
   3ec90:	mov	r3, r0
   3ec94:	mov	r0, r3
   3ec98:	sub	sp, fp, #4
   3ec9c:	ldr	fp, [sp]
   3eca0:	add	sp, sp, #4
   3eca4:	pop	{pc}		; (ldr pc, [sp], #4)
   3eca8:	str	fp, [sp, #-8]!
   3ecac:	str	lr, [sp, #4]
   3ecb0:	add	fp, sp, #4
   3ecb4:	sub	sp, sp, #8
   3ecb8:	str	r0, [fp, #-8]
   3ecbc:	str	r1, [fp, #-12]
   3ecc0:	ldr	r0, [fp, #-12]
   3ecc4:	bl	3e588 <__assert_fail@plt+0x2d348>
   3ecc8:	mov	r3, r0
   3eccc:	ldr	r2, [fp, #-12]
   3ecd0:	ldr	r1, [fp, #-8]
   3ecd4:	mov	r0, r3
   3ecd8:	bl	10fe8 <memcpy@plt>
   3ecdc:	mov	r3, r0
   3ece0:	mov	r0, r3
   3ece4:	sub	sp, fp, #4
   3ece8:	ldr	fp, [sp]
   3ecec:	add	sp, sp, #4
   3ecf0:	pop	{pc}		; (ldr pc, [sp], #4)
   3ecf4:	str	fp, [sp, #-8]!
   3ecf8:	str	lr, [sp, #4]
   3ecfc:	add	fp, sp, #4
   3ed00:	sub	sp, sp, #8
   3ed04:	str	r0, [fp, #-8]
   3ed08:	str	r1, [fp, #-12]
   3ed0c:	ldr	r0, [fp, #-12]
   3ed10:	bl	3e5c8 <__assert_fail@plt+0x2d388>
   3ed14:	mov	r3, r0
   3ed18:	mov	r0, r3
   3ed1c:	ldr	r3, [fp, #-12]
   3ed20:	mov	r2, r3
   3ed24:	ldr	r1, [fp, #-8]
   3ed28:	bl	10fe8 <memcpy@plt>
   3ed2c:	mov	r3, r0
   3ed30:	mov	r0, r3
   3ed34:	sub	sp, fp, #4
   3ed38:	ldr	fp, [sp]
   3ed3c:	add	sp, sp, #4
   3ed40:	pop	{pc}		; (ldr pc, [sp], #4)
   3ed44:	str	fp, [sp, #-8]!
   3ed48:	str	lr, [sp, #4]
   3ed4c:	add	fp, sp, #4
   3ed50:	sub	sp, sp, #16
   3ed54:	str	r0, [fp, #-16]
   3ed58:	str	r1, [fp, #-20]	; 0xffffffec
   3ed5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed60:	add	r3, r3, #1
   3ed64:	mov	r0, r3
   3ed68:	bl	3e5c8 <__assert_fail@plt+0x2d388>
   3ed6c:	mov	r3, r0
   3ed70:	str	r3, [fp, #-8]
   3ed74:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed78:	ldr	r2, [fp, #-8]
   3ed7c:	add	r3, r2, r3
   3ed80:	mov	r2, #0
   3ed84:	strb	r2, [r3]
   3ed88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed8c:	mov	r2, r3
   3ed90:	ldr	r1, [fp, #-16]
   3ed94:	ldr	r0, [fp, #-8]
   3ed98:	bl	10fe8 <memcpy@plt>
   3ed9c:	mov	r3, r0
   3eda0:	mov	r0, r3
   3eda4:	sub	sp, fp, #4
   3eda8:	ldr	fp, [sp]
   3edac:	add	sp, sp, #4
   3edb0:	pop	{pc}		; (ldr pc, [sp], #4)
   3edb4:	str	fp, [sp, #-8]!
   3edb8:	str	lr, [sp, #4]
   3edbc:	add	fp, sp, #4
   3edc0:	sub	sp, sp, #8
   3edc4:	str	r0, [fp, #-8]
   3edc8:	ldr	r0, [fp, #-8]
   3edcc:	bl	11144 <strlen@plt>
   3edd0:	mov	r3, r0
   3edd4:	add	r3, r3, #1
   3edd8:	mov	r1, r3
   3eddc:	ldr	r0, [fp, #-8]
   3ede0:	bl	3eca8 <__assert_fail@plt+0x2da68>
   3ede4:	mov	r3, r0
   3ede8:	mov	r0, r3
   3edec:	sub	sp, fp, #4
   3edf0:	ldr	fp, [sp]
   3edf4:	add	sp, sp, #4
   3edf8:	pop	{pc}		; (ldr pc, [sp], #4)
   3edfc:	strd	r4, [sp, #-16]!
   3ee00:	str	fp, [sp, #8]
   3ee04:	str	lr, [sp, #12]
   3ee08:	add	fp, sp, #12
   3ee0c:	movw	r3, #12580	; 0x3124
   3ee10:	movt	r3, #5
   3ee14:	ldr	r4, [r3]
   3ee18:	movw	r0, #8928	; 0x22e0
   3ee1c:	movt	r0, #4
   3ee20:	bl	11138 <gettext@plt>
   3ee24:	mov	r3, r0
   3ee28:	movw	r2, #8948	; 0x22f4
   3ee2c:	movt	r2, #4
   3ee30:	mov	r1, #0
   3ee34:	mov	r0, r4
   3ee38:	bl	110b4 <error@plt>
   3ee3c:	bl	11228 <abort@plt>
   3ee40:	str	fp, [sp, #-8]!
   3ee44:	str	lr, [sp, #4]
   3ee48:	add	fp, sp, #4
   3ee4c:	sub	sp, sp, #16
   3ee50:	str	r0, [fp, #-16]
   3ee54:	str	r1, [fp, #-20]	; 0xffffffec
   3ee58:	ldr	r3, [fp, #-16]
   3ee5c:	cmp	r3, #0
   3ee60:	beq	3ee70 <__assert_fail@plt+0x2dc30>
   3ee64:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ee68:	cmp	r3, #0
   3ee6c:	bne	3ee80 <__assert_fail@plt+0x2dc40>
   3ee70:	mov	r3, #1
   3ee74:	str	r3, [fp, #-20]	; 0xffffffec
   3ee78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ee7c:	str	r3, [fp, #-16]
   3ee80:	mov	ip, #0
   3ee84:	ldr	r2, [fp, #-16]
   3ee88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ee8c:	umull	r0, r1, r2, r3
   3ee90:	mov	r2, #0
   3ee94:	mov	r3, #0
   3ee98:	mov	r2, r1
   3ee9c:	mov	r3, #0
   3eea0:	cmp	r2, #0
   3eea4:	beq	3eeac <__assert_fail@plt+0x2dc6c>
   3eea8:	mov	ip, #1
   3eeac:	cmp	r0, #0
   3eeb0:	bge	3eeb8 <__assert_fail@plt+0x2dc78>
   3eeb4:	mov	ip, #1
   3eeb8:	mov	r3, ip
   3eebc:	and	r3, r3, #1
   3eec0:	uxtb	r3, r3
   3eec4:	cmp	r3, #0
   3eec8:	beq	3eee4 <__assert_fail@plt+0x2dca4>
   3eecc:	bl	11168 <__errno_location@plt>
   3eed0:	mov	r2, r0
   3eed4:	mov	r3, #12
   3eed8:	str	r3, [r2]
   3eedc:	mov	r3, #0
   3eee0:	b	3eefc <__assert_fail@plt+0x2dcbc>
   3eee4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3eee8:	ldr	r0, [fp, #-16]
   3eeec:	bl	10f34 <calloc@plt>
   3eef0:	mov	r3, r0
   3eef4:	str	r3, [fp, #-8]
   3eef8:	ldr	r3, [fp, #-8]
   3eefc:	mov	r0, r3
   3ef00:	sub	sp, fp, #4
   3ef04:	ldr	fp, [sp]
   3ef08:	add	sp, sp, #4
   3ef0c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ef10:	str	fp, [sp, #-8]!
   3ef14:	str	lr, [sp, #4]
   3ef18:	add	fp, sp, #4
   3ef1c:	sub	sp, sp, #16
   3ef20:	str	r0, [fp, #-16]
   3ef24:	ldr	r3, [fp, #-16]
   3ef28:	cmp	r3, #0
   3ef2c:	bne	3ef38 <__assert_fail@plt+0x2dcf8>
   3ef30:	mov	r3, #1
   3ef34:	str	r3, [fp, #-16]
   3ef38:	mov	r2, #0
   3ef3c:	ldr	r3, [fp, #-16]
   3ef40:	cmp	r3, #0
   3ef44:	bge	3ef4c <__assert_fail@plt+0x2dd0c>
   3ef48:	mov	r2, #1
   3ef4c:	mov	r3, r2
   3ef50:	and	r3, r3, #1
   3ef54:	uxtb	r3, r3
   3ef58:	cmp	r3, #0
   3ef5c:	beq	3ef78 <__assert_fail@plt+0x2dd38>
   3ef60:	bl	11168 <__errno_location@plt>
   3ef64:	mov	r2, r0
   3ef68:	mov	r3, #12
   3ef6c:	str	r3, [r2]
   3ef70:	mov	r3, #0
   3ef74:	b	3ef8c <__assert_fail@plt+0x2dd4c>
   3ef78:	ldr	r0, [fp, #-16]
   3ef7c:	bl	110d8 <malloc@plt>
   3ef80:	mov	r3, r0
   3ef84:	str	r3, [fp, #-8]
   3ef88:	ldr	r3, [fp, #-8]
   3ef8c:	mov	r0, r3
   3ef90:	sub	sp, fp, #4
   3ef94:	ldr	fp, [sp]
   3ef98:	add	sp, sp, #4
   3ef9c:	pop	{pc}		; (ldr pc, [sp], #4)
   3efa0:	str	fp, [sp, #-8]!
   3efa4:	str	lr, [sp, #4]
   3efa8:	add	fp, sp, #4
   3efac:	sub	sp, sp, #16
   3efb0:	str	r0, [fp, #-16]
   3efb4:	str	r1, [fp, #-20]	; 0xffffffec
   3efb8:	ldr	r3, [fp, #-16]
   3efbc:	cmp	r3, #0
   3efc0:	bne	3efd4 <__assert_fail@plt+0x2dd94>
   3efc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3efc8:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3efcc:	mov	r3, r0
   3efd0:	b	3f044 <__assert_fail@plt+0x2de04>
   3efd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3efd8:	cmp	r3, #0
   3efdc:	bne	3eff0 <__assert_fail@plt+0x2ddb0>
   3efe0:	ldr	r0, [fp, #-16]
   3efe4:	bl	13798 <__assert_fail@plt+0x2558>
   3efe8:	mov	r3, #0
   3efec:	b	3f044 <__assert_fail@plt+0x2de04>
   3eff0:	mov	r2, #0
   3eff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eff8:	cmp	r3, #0
   3effc:	bge	3f004 <__assert_fail@plt+0x2ddc4>
   3f000:	mov	r2, #1
   3f004:	mov	r3, r2
   3f008:	and	r3, r3, #1
   3f00c:	uxtb	r3, r3
   3f010:	cmp	r3, #0
   3f014:	beq	3f030 <__assert_fail@plt+0x2ddf0>
   3f018:	bl	11168 <__errno_location@plt>
   3f01c:	mov	r2, r0
   3f020:	mov	r3, #12
   3f024:	str	r3, [r2]
   3f028:	mov	r3, #0
   3f02c:	b	3f044 <__assert_fail@plt+0x2de04>
   3f030:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f034:	ldr	r0, [fp, #-16]
   3f038:	bl	1103c <realloc@plt>
   3f03c:	str	r0, [fp, #-8]
   3f040:	ldr	r3, [fp, #-8]
   3f044:	mov	r0, r3
   3f048:	sub	sp, fp, #4
   3f04c:	ldr	fp, [sp]
   3f050:	add	sp, sp, #4
   3f054:	pop	{pc}		; (ldr pc, [sp], #4)
   3f058:	strd	r4, [sp, #-16]!
   3f05c:	str	fp, [sp, #8]
   3f060:	str	lr, [sp, #12]
   3f064:	add	fp, sp, #12
   3f068:	sub	sp, sp, #16
   3f06c:	str	r0, [fp, #-24]	; 0xffffffe8
   3f070:	str	r1, [fp, #-28]	; 0xffffffe4
   3f074:	ldr	r5, [fp, #-24]	; 0xffffffe8
   3f078:	ldr	r4, [fp, #-28]	; 0xffffffe4
   3f07c:	cmp	r5, r4
   3f080:	bne	3f08c <__assert_fail@plt+0x2de4c>
   3f084:	mov	r3, #0
   3f088:	b	3f0ec <__assert_fail@plt+0x2deac>
   3f08c:	ldrb	r3, [r5]
   3f090:	mov	r0, r3
   3f094:	bl	40314 <__assert_fail@plt+0x2f0d4>
   3f098:	mov	r3, r0
   3f09c:	strb	r3, [fp, #-13]
   3f0a0:	ldrb	r3, [r4]
   3f0a4:	mov	r0, r3
   3f0a8:	bl	40314 <__assert_fail@plt+0x2f0d4>
   3f0ac:	mov	r3, r0
   3f0b0:	strb	r3, [fp, #-14]
   3f0b4:	ldrb	r3, [fp, #-13]
   3f0b8:	cmp	r3, #0
   3f0bc:	beq	3f0dc <__assert_fail@plt+0x2de9c>
   3f0c0:	add	r5, r5, #1
   3f0c4:	add	r4, r4, #1
   3f0c8:	ldrb	r2, [fp, #-13]
   3f0cc:	ldrb	r3, [fp, #-14]
   3f0d0:	cmp	r2, r3
   3f0d4:	beq	3f08c <__assert_fail@plt+0x2de4c>
   3f0d8:	b	3f0e0 <__assert_fail@plt+0x2dea0>
   3f0dc:	nop	{0}
   3f0e0:	ldrb	r2, [fp, #-13]
   3f0e4:	ldrb	r3, [fp, #-14]
   3f0e8:	sub	r3, r2, r3
   3f0ec:	mov	r0, r3
   3f0f0:	sub	sp, fp, #12
   3f0f4:	ldrd	r4, [sp]
   3f0f8:	ldr	fp, [sp, #8]
   3f0fc:	add	sp, sp, #12
   3f100:	pop	{pc}		; (ldr pc, [sp], #4)
   3f104:	str	fp, [sp, #-8]!
   3f108:	str	lr, [sp, #4]
   3f10c:	add	fp, sp, #4
   3f110:	sub	sp, sp, #16
   3f114:	str	r0, [fp, #-16]
   3f118:	ldr	r0, [fp, #-16]
   3f11c:	bl	11090 <__fpending@plt>
   3f120:	mov	r3, r0
   3f124:	cmp	r3, #0
   3f128:	movne	r3, #1
   3f12c:	moveq	r3, #0
   3f130:	strb	r3, [fp, #-5]
   3f134:	ldr	r0, [fp, #-16]
   3f138:	bl	1109c <ferror_unlocked@plt>
   3f13c:	mov	r3, r0
   3f140:	cmp	r3, #0
   3f144:	movne	r3, #1
   3f148:	moveq	r3, #0
   3f14c:	strb	r3, [fp, #-6]
   3f150:	ldr	r0, [fp, #-16]
   3f154:	bl	3f6ec <__assert_fail@plt+0x2e4ac>
   3f158:	mov	r3, r0
   3f15c:	cmp	r3, #0
   3f160:	movne	r3, #1
   3f164:	moveq	r3, #0
   3f168:	strb	r3, [fp, #-7]
   3f16c:	ldrb	r3, [fp, #-6]
   3f170:	cmp	r3, #0
   3f174:	bne	3f1a4 <__assert_fail@plt+0x2df64>
   3f178:	ldrb	r3, [fp, #-7]
   3f17c:	cmp	r3, #0
   3f180:	beq	3f1d0 <__assert_fail@plt+0x2df90>
   3f184:	ldrb	r3, [fp, #-5]
   3f188:	cmp	r3, #0
   3f18c:	bne	3f1a4 <__assert_fail@plt+0x2df64>
   3f190:	bl	11168 <__errno_location@plt>
   3f194:	mov	r3, r0
   3f198:	ldr	r3, [r3]
   3f19c:	cmp	r3, #9
   3f1a0:	beq	3f1d0 <__assert_fail@plt+0x2df90>
   3f1a4:	ldrb	r3, [fp, #-7]
   3f1a8:	eor	r3, r3, #1
   3f1ac:	uxtb	r3, r3
   3f1b0:	cmp	r3, #0
   3f1b4:	beq	3f1c8 <__assert_fail@plt+0x2df88>
   3f1b8:	bl	11168 <__errno_location@plt>
   3f1bc:	mov	r2, r0
   3f1c0:	mov	r3, #0
   3f1c4:	str	r3, [r2]
   3f1c8:	mvn	r3, #0
   3f1cc:	b	3f1d4 <__assert_fail@plt+0x2df94>
   3f1d0:	mov	r3, #0
   3f1d4:	mov	r0, r3
   3f1d8:	sub	sp, fp, #4
   3f1dc:	ldr	fp, [sp]
   3f1e0:	add	sp, sp, #4
   3f1e4:	pop	{pc}		; (ldr pc, [sp], #4)
   3f1e8:	str	fp, [sp, #-8]!
   3f1ec:	str	lr, [sp, #4]
   3f1f0:	add	fp, sp, #4
   3f1f4:	sub	sp, sp, #32
   3f1f8:	str	r0, [fp, #-24]	; 0xffffffe8
   3f1fc:	str	r1, [fp, #-28]	; 0xffffffe4
   3f200:	str	r2, [fp, #-32]	; 0xffffffe0
   3f204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f208:	ldr	r3, [r3, #4]
   3f20c:	cmp	r3, #0
   3f210:	bne	3f250 <__assert_fail@plt+0x2e010>
   3f214:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f218:	cmp	r3, #3
   3f21c:	bhi	3f22c <__assert_fail@plt+0x2dfec>
   3f220:	mov	r3, #16
   3f224:	str	r3, [fp, #-8]
   3f228:	b	3f29c <__assert_fail@plt+0x2e05c>
   3f22c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f230:	cmp	r3, #7
   3f234:	bhi	3f244 <__assert_fail@plt+0x2e004>
   3f238:	mov	r3, #8
   3f23c:	str	r3, [fp, #-8]
   3f240:	b	3f29c <__assert_fail@plt+0x2e05c>
   3f244:	mov	r3, #4
   3f248:	str	r3, [fp, #-8]
   3f24c:	b	3f29c <__assert_fail@plt+0x2e05c>
   3f250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f254:	ldr	r2, [r3, #4]
   3f258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f25c:	ldr	r3, [r3, #4]
   3f260:	lsr	r3, r3, #1
   3f264:	add	r3, r2, r3
   3f268:	add	r3, r3, #1
   3f26c:	str	r3, [fp, #-8]
   3f270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f274:	ldr	r3, [r3, #4]
   3f278:	ldr	r2, [fp, #-8]
   3f27c:	cmp	r2, r3
   3f280:	bhi	3f29c <__assert_fail@plt+0x2e05c>
   3f284:	bl	11168 <__errno_location@plt>
   3f288:	mov	r2, r0
   3f28c:	mov	r3, #12
   3f290:	str	r3, [r2]
   3f294:	mov	r3, #0
   3f298:	b	3f3a4 <__assert_fail@plt+0x2e164>
   3f29c:	mov	ip, #0
   3f2a0:	ldr	r2, [fp, #-8]
   3f2a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f2a8:	umull	r0, r1, r2, r3
   3f2ac:	mov	r2, #0
   3f2b0:	mov	r3, #0
   3f2b4:	mov	r2, r1
   3f2b8:	mov	r3, #0
   3f2bc:	cmp	r2, #0
   3f2c0:	beq	3f2c8 <__assert_fail@plt+0x2e088>
   3f2c4:	mov	ip, #1
   3f2c8:	mov	r3, r0
   3f2cc:	str	r3, [fp, #-16]
   3f2d0:	mov	r3, ip
   3f2d4:	and	r3, r3, #1
   3f2d8:	uxtb	r3, r3
   3f2dc:	cmp	r3, #0
   3f2e0:	beq	3f2ec <__assert_fail@plt+0x2e0ac>
   3f2e4:	mov	r3, #0
   3f2e8:	b	3f3a4 <__assert_fail@plt+0x2e164>
   3f2ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f2f0:	ldr	r3, [r3, #8]
   3f2f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3f2f8:	cmp	r2, r3
   3f2fc:	bne	3f358 <__assert_fail@plt+0x2e118>
   3f300:	ldr	r3, [fp, #-16]
   3f304:	mov	r0, r3
   3f308:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3f30c:	mov	r3, r0
   3f310:	str	r3, [fp, #-12]
   3f314:	ldr	r3, [fp, #-12]
   3f318:	cmp	r3, #0
   3f31c:	beq	3f374 <__assert_fail@plt+0x2e134>
   3f320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f324:	ldr	r3, [r3, #8]
   3f328:	cmp	r3, #0
   3f32c:	beq	3f374 <__assert_fail@plt+0x2e134>
   3f330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f334:	ldr	r1, [r3, #8]
   3f338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f33c:	ldr	r3, [r3]
   3f340:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3f344:	mul	r3, r2, r3
   3f348:	mov	r2, r3
   3f34c:	ldr	r0, [fp, #-12]
   3f350:	bl	10fe8 <memcpy@plt>
   3f354:	b	3f374 <__assert_fail@plt+0x2e134>
   3f358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f35c:	ldr	r3, [r3, #8]
   3f360:	ldr	r2, [fp, #-16]
   3f364:	mov	r1, r2
   3f368:	mov	r0, r3
   3f36c:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3f370:	str	r0, [fp, #-12]
   3f374:	ldr	r3, [fp, #-12]
   3f378:	cmp	r3, #0
   3f37c:	bne	3f388 <__assert_fail@plt+0x2e148>
   3f380:	mov	r3, #0
   3f384:	b	3f3a4 <__assert_fail@plt+0x2e164>
   3f388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f38c:	ldr	r2, [fp, #-12]
   3f390:	str	r2, [r3, #8]
   3f394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f398:	ldr	r2, [fp, #-8]
   3f39c:	str	r2, [r3, #4]
   3f3a0:	mov	r3, #1
   3f3a4:	mov	r0, r3
   3f3a8:	sub	sp, fp, #4
   3f3ac:	ldr	fp, [sp]
   3f3b0:	add	sp, sp, #4
   3f3b4:	pop	{pc}		; (ldr pc, [sp], #4)
   3f3b8:	push	{fp}		; (str fp, [sp, #-4]!)
   3f3bc:	add	fp, sp, #0
   3f3c0:	mvn	r3, #0
   3f3c4:	mov	r0, r3
   3f3c8:	add	sp, fp, #0
   3f3cc:	pop	{fp}		; (ldr fp, [sp], #4)
   3f3d0:	bx	lr
   3f3d4:	str	r4, [sp, #-12]!
   3f3d8:	str	fp, [sp, #4]
   3f3dc:	str	lr, [sp, #8]
   3f3e0:	add	fp, sp, #8
   3f3e4:	sub	sp, sp, #12
   3f3e8:	str	r0, [fp, #-16]
   3f3ec:	ldr	r3, [fp, #-16]
   3f3f0:	ldr	r4, [r3, #4]
   3f3f4:	bl	3f3b8 <__assert_fail@plt+0x2e178>
   3f3f8:	mov	r3, r0
   3f3fc:	cmp	r4, r3
   3f400:	moveq	r3, #1
   3f404:	movne	r3, #0
   3f408:	uxtb	r3, r3
   3f40c:	mov	r0, r3
   3f410:	sub	sp, fp, #8
   3f414:	ldr	r4, [sp]
   3f418:	ldr	fp, [sp, #4]
   3f41c:	add	sp, sp, #8
   3f420:	pop	{pc}		; (ldr pc, [sp], #4)
   3f424:	str	fp, [sp, #-8]!
   3f428:	str	lr, [sp, #4]
   3f42c:	add	fp, sp, #4
   3f430:	sub	sp, sp, #32
   3f434:	str	r0, [fp, #-24]	; 0xffffffe8
   3f438:	str	r1, [fp, #-28]	; 0xffffffe4
   3f43c:	str	r2, [fp, #-32]	; 0xffffffe0
   3f440:	str	r3, [fp, #-36]	; 0xffffffdc
   3f444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f448:	bl	3f3d4 <__assert_fail@plt+0x2e194>
   3f44c:	mov	r3, r0
   3f450:	cmp	r3, #0
   3f454:	beq	3f460 <__assert_fail@plt+0x2e220>
   3f458:	mov	r3, #0
   3f45c:	b	3f558 <__assert_fail@plt+0x2e318>
   3f460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f464:	ldr	r3, [r3]
   3f468:	str	r3, [fp, #-8]
   3f46c:	ldr	r3, [fp, #-8]
   3f470:	cmp	r3, #0
   3f474:	bne	3f4bc <__assert_fail@plt+0x2e27c>
   3f478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f47c:	ldr	r3, [r3, #8]
   3f480:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3f484:	cmp	r2, r3
   3f488:	beq	3f49c <__assert_fail@plt+0x2e25c>
   3f48c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f490:	ldr	r3, [r3, #8]
   3f494:	mov	r0, r3
   3f498:	bl	13798 <__assert_fail@plt+0x2558>
   3f49c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3f4a0:	mov	r2, #0
   3f4a4:	str	r2, [r3]
   3f4a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3f4ac:	mov	r2, #0
   3f4b0:	str	r2, [r3, #4]
   3f4b4:	mov	r3, #1
   3f4b8:	b	3f558 <__assert_fail@plt+0x2e318>
   3f4bc:	ldr	r3, [fp, #-8]
   3f4c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3f4c4:	mul	r3, r2, r3
   3f4c8:	str	r3, [fp, #-12]
   3f4cc:	ldr	r0, [fp, #-12]
   3f4d0:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3f4d4:	mov	r3, r0
   3f4d8:	str	r3, [fp, #-16]
   3f4dc:	ldr	r3, [fp, #-16]
   3f4e0:	cmp	r3, #0
   3f4e4:	beq	3f554 <__assert_fail@plt+0x2e314>
   3f4e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f4ec:	ldr	r3, [r3, #8]
   3f4f0:	cmp	r3, #0
   3f4f4:	beq	3f510 <__assert_fail@plt+0x2e2d0>
   3f4f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f4fc:	ldr	r3, [r3, #8]
   3f500:	ldr	r2, [fp, #-12]
   3f504:	mov	r1, r3
   3f508:	ldr	r0, [fp, #-16]
   3f50c:	bl	10fe8 <memcpy@plt>
   3f510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f514:	ldr	r3, [r3, #8]
   3f518:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3f51c:	cmp	r2, r3
   3f520:	beq	3f534 <__assert_fail@plt+0x2e2f4>
   3f524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f528:	ldr	r3, [r3, #8]
   3f52c:	mov	r0, r3
   3f530:	bl	13798 <__assert_fail@plt+0x2558>
   3f534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3f538:	ldr	r2, [fp, #-16]
   3f53c:	str	r2, [r3]
   3f540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3f544:	ldr	r2, [fp, #-8]
   3f548:	str	r2, [r3, #4]
   3f54c:	mov	r3, #1
   3f550:	b	3f558 <__assert_fail@plt+0x2e318>
   3f554:	mov	r3, #0
   3f558:	mov	r0, r3
   3f55c:	sub	sp, fp, #4
   3f560:	ldr	fp, [sp]
   3f564:	add	sp, sp, #4
   3f568:	pop	{pc}		; (ldr pc, [sp], #4)
   3f56c:	str	fp, [sp, #-8]!
   3f570:	str	lr, [sp, #4]
   3f574:	add	fp, sp, #4
   3f578:	sub	sp, sp, #24
   3f57c:	str	r0, [fp, #-16]
   3f580:	str	r1, [fp, #-20]	; 0xffffffec
   3f584:	str	r2, [fp, #-24]	; 0xffffffe8
   3f588:	str	r3, [fp, #-28]	; 0xffffffe4
   3f58c:	ldr	r3, [fp, #-16]
   3f590:	ldr	r3, [r3, #4]
   3f594:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f598:	cmp	r2, r3
   3f59c:	bhi	3f5b4 <__assert_fail@plt+0x2e374>
   3f5a0:	ldr	r3, [fp, #-16]
   3f5a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f5a8:	str	r2, [r3]
   3f5ac:	mov	r3, #1
   3f5b0:	b	3f6d8 <__assert_fail@plt+0x2e498>
   3f5b4:	mov	ip, #0
   3f5b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f5bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3f5c0:	umull	r0, r1, r2, r3
   3f5c4:	mov	r2, #0
   3f5c8:	mov	r3, #0
   3f5cc:	mov	r2, r1
   3f5d0:	mov	r3, #0
   3f5d4:	cmp	r2, #0
   3f5d8:	beq	3f5e0 <__assert_fail@plt+0x2e3a0>
   3f5dc:	mov	ip, #1
   3f5e0:	mov	r3, r0
   3f5e4:	str	r3, [fp, #-12]
   3f5e8:	mov	r3, ip
   3f5ec:	and	r3, r3, #1
   3f5f0:	uxtb	r3, r3
   3f5f4:	cmp	r3, #0
   3f5f8:	beq	3f614 <__assert_fail@plt+0x2e3d4>
   3f5fc:	bl	11168 <__errno_location@plt>
   3f600:	mov	r2, r0
   3f604:	mov	r3, #12
   3f608:	str	r3, [r2]
   3f60c:	mov	r3, #0
   3f610:	b	3f6d8 <__assert_fail@plt+0x2e498>
   3f614:	ldr	r3, [fp, #-16]
   3f618:	ldr	r3, [r3, #8]
   3f61c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f620:	cmp	r2, r3
   3f624:	bne	3f680 <__assert_fail@plt+0x2e440>
   3f628:	ldr	r3, [fp, #-12]
   3f62c:	mov	r0, r3
   3f630:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3f634:	mov	r3, r0
   3f638:	str	r3, [fp, #-8]
   3f63c:	ldr	r3, [fp, #-8]
   3f640:	cmp	r3, #0
   3f644:	beq	3f69c <__assert_fail@plt+0x2e45c>
   3f648:	ldr	r3, [fp, #-16]
   3f64c:	ldr	r3, [r3, #8]
   3f650:	cmp	r3, #0
   3f654:	beq	3f69c <__assert_fail@plt+0x2e45c>
   3f658:	ldr	r3, [fp, #-16]
   3f65c:	ldr	r1, [r3, #8]
   3f660:	ldr	r3, [fp, #-16]
   3f664:	ldr	r3, [r3]
   3f668:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3f66c:	mul	r3, r2, r3
   3f670:	mov	r2, r3
   3f674:	ldr	r0, [fp, #-8]
   3f678:	bl	10fe8 <memcpy@plt>
   3f67c:	b	3f69c <__assert_fail@plt+0x2e45c>
   3f680:	ldr	r3, [fp, #-16]
   3f684:	ldr	r3, [r3, #8]
   3f688:	ldr	r2, [fp, #-12]
   3f68c:	mov	r1, r2
   3f690:	mov	r0, r3
   3f694:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3f698:	str	r0, [fp, #-8]
   3f69c:	ldr	r3, [fp, #-8]
   3f6a0:	cmp	r3, #0
   3f6a4:	bne	3f6b0 <__assert_fail@plt+0x2e470>
   3f6a8:	mov	r3, #0
   3f6ac:	b	3f6d8 <__assert_fail@plt+0x2e498>
   3f6b0:	ldr	r3, [fp, #-16]
   3f6b4:	ldr	r2, [fp, #-8]
   3f6b8:	str	r2, [r3, #8]
   3f6bc:	ldr	r3, [fp, #-16]
   3f6c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f6c4:	str	r2, [r3, #4]
   3f6c8:	ldr	r3, [fp, #-16]
   3f6cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f6d0:	str	r2, [r3]
   3f6d4:	mov	r3, #1
   3f6d8:	mov	r0, r3
   3f6dc:	sub	sp, fp, #4
   3f6e0:	ldr	fp, [sp]
   3f6e4:	add	sp, sp, #4
   3f6e8:	pop	{pc}		; (ldr pc, [sp], #4)
   3f6ec:	str	fp, [sp, #-8]!
   3f6f0:	str	lr, [sp, #4]
   3f6f4:	add	fp, sp, #4
   3f6f8:	sub	sp, sp, #32
   3f6fc:	str	r0, [fp, #-24]	; 0xffffffe8
   3f700:	mov	r3, #0
   3f704:	str	r3, [fp, #-8]
   3f708:	mov	r3, #0
   3f70c:	str	r3, [fp, #-12]
   3f710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f714:	bl	111a4 <fileno@plt>
   3f718:	str	r0, [fp, #-16]
   3f71c:	ldr	r3, [fp, #-16]
   3f720:	cmp	r3, #0
   3f724:	bge	3f738 <__assert_fail@plt+0x2e4f8>
   3f728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f72c:	bl	111bc <fclose@plt>
   3f730:	mov	r3, r0
   3f734:	b	3f7dc <__assert_fail@plt+0x2e59c>
   3f738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f73c:	bl	110f0 <__freading@plt>
   3f740:	mov	r3, r0
   3f744:	cmp	r3, #0
   3f748:	beq	3f784 <__assert_fail@plt+0x2e544>
   3f74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f750:	bl	111a4 <fileno@plt>
   3f754:	mov	r1, r0
   3f758:	mov	r3, #1
   3f75c:	str	r3, [sp]
   3f760:	mov	r2, #0
   3f764:	mov	r3, #0
   3f768:	mov	r0, r1
   3f76c:	bl	11078 <lseek64@plt>
   3f770:	mvn	r2, #0
   3f774:	mvn	r3, #0
   3f778:	cmp	r1, r3
   3f77c:	cmpeq	r0, r2
   3f780:	beq	3f7a8 <__assert_fail@plt+0x2e568>
   3f784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f788:	bl	3f844 <__assert_fail@plt+0x2e604>
   3f78c:	mov	r3, r0
   3f790:	cmp	r3, #0
   3f794:	beq	3f7a8 <__assert_fail@plt+0x2e568>
   3f798:	bl	11168 <__errno_location@plt>
   3f79c:	mov	r3, r0
   3f7a0:	ldr	r3, [r3]
   3f7a4:	str	r3, [fp, #-8]
   3f7a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f7ac:	bl	111bc <fclose@plt>
   3f7b0:	str	r0, [fp, #-12]
   3f7b4:	ldr	r3, [fp, #-8]
   3f7b8:	cmp	r3, #0
   3f7bc:	beq	3f7d8 <__assert_fail@plt+0x2e598>
   3f7c0:	bl	11168 <__errno_location@plt>
   3f7c4:	mov	r2, r0
   3f7c8:	ldr	r3, [fp, #-8]
   3f7cc:	str	r3, [r2]
   3f7d0:	mvn	r3, #0
   3f7d4:	str	r3, [fp, #-12]
   3f7d8:	ldr	r3, [fp, #-12]
   3f7dc:	mov	r0, r3
   3f7e0:	sub	sp, fp, #4
   3f7e4:	ldr	fp, [sp]
   3f7e8:	add	sp, sp, #4
   3f7ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3f7f0:	str	fp, [sp, #-8]!
   3f7f4:	str	lr, [sp, #4]
   3f7f8:	add	fp, sp, #4
   3f7fc:	sub	sp, sp, #16
   3f800:	str	r0, [fp, #-8]
   3f804:	ldr	r3, [fp, #-8]
   3f808:	ldr	r3, [r3]
   3f80c:	and	r3, r3, #256	; 0x100
   3f810:	cmp	r3, #0
   3f814:	beq	3f830 <__assert_fail@plt+0x2e5f0>
   3f818:	mov	r3, #1
   3f81c:	str	r3, [sp]
   3f820:	mov	r2, #0
   3f824:	mov	r3, #0
   3f828:	ldr	r0, [fp, #-8]
   3f82c:	bl	3f8b0 <__assert_fail@plt+0x2e670>
   3f830:	nop	{0}
   3f834:	sub	sp, fp, #4
   3f838:	ldr	fp, [sp]
   3f83c:	add	sp, sp, #4
   3f840:	pop	{pc}		; (ldr pc, [sp], #4)
   3f844:	str	fp, [sp, #-8]!
   3f848:	str	lr, [sp, #4]
   3f84c:	add	fp, sp, #4
   3f850:	sub	sp, sp, #8
   3f854:	str	r0, [fp, #-8]
   3f858:	ldr	r3, [fp, #-8]
   3f85c:	cmp	r3, #0
   3f860:	beq	3f878 <__assert_fail@plt+0x2e638>
   3f864:	ldr	r0, [fp, #-8]
   3f868:	bl	110f0 <__freading@plt>
   3f86c:	mov	r3, r0
   3f870:	cmp	r3, #0
   3f874:	bne	3f888 <__assert_fail@plt+0x2e648>
   3f878:	ldr	r0, [fp, #-8]
   3f87c:	bl	10fa0 <fflush@plt>
   3f880:	mov	r3, r0
   3f884:	b	3f89c <__assert_fail@plt+0x2e65c>
   3f888:	ldr	r0, [fp, #-8]
   3f88c:	bl	3f7f0 <__assert_fail@plt+0x2e5b0>
   3f890:	ldr	r0, [fp, #-8]
   3f894:	bl	10fa0 <fflush@plt>
   3f898:	mov	r3, r0
   3f89c:	mov	r0, r3
   3f8a0:	sub	sp, fp, #4
   3f8a4:	ldr	fp, [sp]
   3f8a8:	add	sp, sp, #4
   3f8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   3f8b0:	str	fp, [sp, #-8]!
   3f8b4:	str	lr, [sp, #4]
   3f8b8:	add	fp, sp, #4
   3f8bc:	sub	sp, sp, #32
   3f8c0:	str	r0, [fp, #-16]
   3f8c4:	strd	r2, [fp, #-28]	; 0xffffffe4
   3f8c8:	ldr	r3, [fp, #-16]
   3f8cc:	ldr	r2, [r3, #8]
   3f8d0:	ldr	r3, [fp, #-16]
   3f8d4:	ldr	r3, [r3, #4]
   3f8d8:	cmp	r2, r3
   3f8dc:	bne	3f974 <__assert_fail@plt+0x2e734>
   3f8e0:	ldr	r3, [fp, #-16]
   3f8e4:	ldr	r2, [r3, #20]
   3f8e8:	ldr	r3, [fp, #-16]
   3f8ec:	ldr	r3, [r3, #16]
   3f8f0:	cmp	r2, r3
   3f8f4:	bne	3f974 <__assert_fail@plt+0x2e734>
   3f8f8:	ldr	r3, [fp, #-16]
   3f8fc:	ldr	r3, [r3, #36]	; 0x24
   3f900:	cmp	r3, #0
   3f904:	bne	3f974 <__assert_fail@plt+0x2e734>
   3f908:	ldr	r0, [fp, #-16]
   3f90c:	bl	111a4 <fileno@plt>
   3f910:	mov	r1, r0
   3f914:	ldr	r3, [fp, #4]
   3f918:	str	r3, [sp]
   3f91c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3f920:	mov	r0, r1
   3f924:	bl	11078 <lseek64@plt>
   3f928:	strd	r0, [fp, #-12]
   3f92c:	ldrd	r2, [fp, #-12]
   3f930:	mvn	r0, #0
   3f934:	mvn	r1, #0
   3f938:	cmp	r3, r1
   3f93c:	cmpeq	r2, r0
   3f940:	bne	3f94c <__assert_fail@plt+0x2e70c>
   3f944:	mvn	r3, #0
   3f948:	b	3f98c <__assert_fail@plt+0x2e74c>
   3f94c:	ldr	r3, [fp, #-16]
   3f950:	ldr	r3, [r3]
   3f954:	bic	r2, r3, #16
   3f958:	ldr	r3, [fp, #-16]
   3f95c:	str	r2, [r3]
   3f960:	ldr	r1, [fp, #-16]
   3f964:	ldrd	r2, [fp, #-12]
   3f968:	strd	r2, [r1, #80]	; 0x50
   3f96c:	mov	r3, #0
   3f970:	b	3f98c <__assert_fail@plt+0x2e74c>
   3f974:	ldr	r3, [fp, #4]
   3f978:	str	r3, [sp]
   3f97c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3f980:	ldr	r0, [fp, #-16]
   3f984:	bl	111c8 <fseeko64@plt>
   3f988:	mov	r3, r0
   3f98c:	mov	r0, r3
   3f990:	sub	sp, fp, #4
   3f994:	ldr	fp, [sp]
   3f998:	add	sp, sp, #4
   3f99c:	pop	{pc}		; (ldr pc, [sp], #4)
   3f9a0:	str	fp, [sp, #-8]!
   3f9a4:	str	lr, [sp, #4]
   3f9a8:	add	fp, sp, #4
   3f9ac:	bl	11168 <__errno_location@plt>
   3f9b0:	mov	r2, r0
   3f9b4:	mov	r3, #12
   3f9b8:	str	r3, [r2]
   3f9bc:	mov	r3, #0
   3f9c0:	mov	r0, r3
   3f9c4:	sub	sp, fp, #4
   3f9c8:	ldr	fp, [sp]
   3f9cc:	add	sp, sp, #4
   3f9d0:	pop	{pc}		; (ldr pc, [sp], #4)
   3f9d4:	str	fp, [sp, #-8]!
   3f9d8:	str	lr, [sp, #4]
   3f9dc:	add	fp, sp, #4
   3f9e0:	sub	sp, sp, #8
   3f9e4:	str	r0, [fp, #-8]
   3f9e8:	ldr	r3, [fp, #-8]
   3f9ec:	mov	r0, r3
   3f9f0:	bl	3ef10 <__assert_fail@plt+0x2dcd0>
   3f9f4:	mov	r3, r0
   3f9f8:	mov	r0, r3
   3f9fc:	sub	sp, fp, #4
   3fa00:	ldr	fp, [sp]
   3fa04:	add	sp, sp, #4
   3fa08:	pop	{pc}		; (ldr pc, [sp], #4)
   3fa0c:	str	fp, [sp, #-8]!
   3fa10:	str	lr, [sp, #4]
   3fa14:	add	fp, sp, #4
   3fa18:	sub	sp, sp, #8
   3fa1c:	str	r0, [fp, #-8]
   3fa20:	str	r1, [fp, #-12]
   3fa24:	ldr	r3, [fp, #-12]
   3fa28:	cmp	r3, #0
   3fa2c:	moveq	r3, #1
   3fa30:	movne	r3, #0
   3fa34:	uxtb	r3, r3
   3fa38:	mov	r2, r3
   3fa3c:	ldr	r3, [fp, #-12]
   3fa40:	orr	r3, r2, r3
   3fa44:	mov	r1, r3
   3fa48:	ldr	r0, [fp, #-8]
   3fa4c:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3fa50:	mov	r3, r0
   3fa54:	mov	r0, r3
   3fa58:	sub	sp, fp, #4
   3fa5c:	ldr	fp, [sp]
   3fa60:	add	sp, sp, #4
   3fa64:	pop	{pc}		; (ldr pc, [sp], #4)
   3fa68:	str	fp, [sp, #-8]!
   3fa6c:	str	lr, [sp, #4]
   3fa70:	add	fp, sp, #4
   3fa74:	sub	sp, sp, #8
   3fa78:	str	r0, [fp, #-8]
   3fa7c:	str	r1, [fp, #-12]
   3fa80:	ldr	r3, [fp, #-8]
   3fa84:	ldr	r2, [fp, #-12]
   3fa88:	mov	r1, r2
   3fa8c:	mov	r0, r3
   3fa90:	bl	3ee40 <__assert_fail@plt+0x2dc00>
   3fa94:	mov	r3, r0
   3fa98:	mov	r0, r3
   3fa9c:	sub	sp, fp, #4
   3faa0:	ldr	fp, [sp]
   3faa4:	add	sp, sp, #4
   3faa8:	pop	{pc}		; (ldr pc, [sp], #4)
   3faac:	str	fp, [sp, #-8]!
   3fab0:	str	lr, [sp, #4]
   3fab4:	add	fp, sp, #4
   3fab8:	sub	sp, sp, #16
   3fabc:	str	r0, [fp, #-8]
   3fac0:	str	r1, [fp, #-12]
   3fac4:	str	r2, [fp, #-16]
   3fac8:	ldr	r3, [fp, #-12]
   3facc:	cmp	r3, #0
   3fad0:	beq	3fae0 <__assert_fail@plt+0x2e8a0>
   3fad4:	ldr	r3, [fp, #-16]
   3fad8:	cmp	r3, #0
   3fadc:	bne	3faf0 <__assert_fail@plt+0x2e8b0>
   3fae0:	mov	r3, #1
   3fae4:	str	r3, [fp, #-16]
   3fae8:	ldr	r3, [fp, #-16]
   3faec:	str	r3, [fp, #-12]
   3faf0:	ldr	r3, [fp, #-12]
   3faf4:	ldr	r2, [fp, #-16]
   3faf8:	mov	r1, r3
   3fafc:	ldr	r0, [fp, #-8]
   3fb00:	bl	3fdc8 <__assert_fail@plt+0x2eb88>
   3fb04:	mov	r3, r0
   3fb08:	mov	r0, r3
   3fb0c:	sub	sp, fp, #4
   3fb10:	ldr	fp, [sp]
   3fb14:	add	sp, sp, #4
   3fb18:	pop	{pc}		; (ldr pc, [sp], #4)
   3fb1c:	str	fp, [sp, #-8]!
   3fb20:	str	lr, [sp, #4]
   3fb24:	add	fp, sp, #4
   3fb28:	sub	sp, sp, #8
   3fb2c:	mov	r0, #14
   3fb30:	bl	111f8 <nl_langinfo@plt>
   3fb34:	str	r0, [fp, #-8]
   3fb38:	ldr	r3, [fp, #-8]
   3fb3c:	cmp	r3, #0
   3fb40:	bne	3fb50 <__assert_fail@plt+0x2e910>
   3fb44:	movw	r3, #8952	; 0x22f8
   3fb48:	movt	r3, #4
   3fb4c:	str	r3, [fp, #-8]
   3fb50:	ldr	r3, [fp, #-8]
   3fb54:	ldrb	r3, [r3]
   3fb58:	cmp	r3, #0
   3fb5c:	bne	3fb6c <__assert_fail@plt+0x2e92c>
   3fb60:	movw	r3, #8956	; 0x22fc
   3fb64:	movt	r3, #4
   3fb68:	str	r3, [fp, #-8]
   3fb6c:	ldr	r3, [fp, #-8]
   3fb70:	mov	r0, r3
   3fb74:	sub	sp, fp, #4
   3fb78:	ldr	fp, [sp]
   3fb7c:	add	sp, sp, #4
   3fb80:	pop	{pc}		; (ldr pc, [sp], #4)
   3fb84:	str	fp, [sp, #-8]!
   3fb88:	str	lr, [sp, #4]
   3fb8c:	add	fp, sp, #4
   3fb90:	sub	sp, sp, #16
   3fb94:	str	r0, [fp, #-16]
   3fb98:	ldr	r0, [fp, #-16]
   3fb9c:	bl	10fac <wcwidth@plt>
   3fba0:	str	r0, [fp, #-8]
   3fba4:	ldr	r3, [fp, #-8]
   3fba8:	cmp	r3, #0
   3fbac:	bge	3fbd0 <__assert_fail@plt+0x2e990>
   3fbb0:	ldr	r0, [fp, #-16]
   3fbb4:	bl	11054 <iswcntrl@plt>
   3fbb8:	mov	r3, r0
   3fbbc:	cmp	r3, #0
   3fbc0:	moveq	r3, #1
   3fbc4:	movne	r3, #0
   3fbc8:	uxtb	r3, r3
   3fbcc:	b	3fbd4 <__assert_fail@plt+0x2e994>
   3fbd0:	ldr	r3, [fp, #-8]
   3fbd4:	mov	r0, r3
   3fbd8:	sub	sp, fp, #4
   3fbdc:	ldr	fp, [sp]
   3fbe0:	add	sp, sp, #4
   3fbe4:	pop	{pc}		; (ldr pc, [sp], #4)
   3fbe8:	str	fp, [sp, #-8]!
   3fbec:	str	lr, [sp, #4]
   3fbf0:	add	fp, sp, #4
   3fbf4:	sub	sp, sp, #8
   3fbf8:	str	r0, [fp, #-8]
   3fbfc:	str	r1, [fp, #-12]
   3fc00:	ldr	r3, [fp, #-12]
   3fc04:	ldr	r2, [r3]
   3fc08:	ldr	r3, [fp, #-12]
   3fc0c:	add	r3, r3, #16
   3fc10:	cmp	r2, r3
   3fc14:	bne	3fc4c <__assert_fail@plt+0x2ea0c>
   3fc18:	ldr	r3, [fp, #-8]
   3fc1c:	add	r0, r3, #16
   3fc20:	ldr	r3, [fp, #-12]
   3fc24:	add	r1, r3, #16
   3fc28:	ldr	r3, [fp, #-12]
   3fc2c:	ldr	r3, [r3, #4]
   3fc30:	mov	r2, r3
   3fc34:	bl	10fe8 <memcpy@plt>
   3fc38:	ldr	r3, [fp, #-8]
   3fc3c:	add	r2, r3, #16
   3fc40:	ldr	r3, [fp, #-8]
   3fc44:	str	r2, [r3]
   3fc48:	b	3fc5c <__assert_fail@plt+0x2ea1c>
   3fc4c:	ldr	r3, [fp, #-12]
   3fc50:	ldr	r2, [r3]
   3fc54:	ldr	r3, [fp, #-8]
   3fc58:	str	r2, [r3]
   3fc5c:	ldr	r3, [fp, #-12]
   3fc60:	ldr	r2, [r3, #4]
   3fc64:	ldr	r3, [fp, #-8]
   3fc68:	str	r2, [r3, #4]
   3fc6c:	ldr	r3, [fp, #-12]
   3fc70:	ldrb	r2, [r3, #8]
   3fc74:	ldr	r3, [fp, #-8]
   3fc78:	strb	r2, [r3, #8]
   3fc7c:	ldr	r3, [fp, #-8]
   3fc80:	ldrb	r3, [r3, #8]
   3fc84:	cmp	r3, #0
   3fc88:	beq	3fc9c <__assert_fail@plt+0x2ea5c>
   3fc8c:	ldr	r3, [fp, #-12]
   3fc90:	ldr	r2, [r3, #12]
   3fc94:	ldr	r3, [fp, #-8]
   3fc98:	str	r2, [r3, #12]
   3fc9c:	nop	{0}
   3fca0:	sub	sp, fp, #4
   3fca4:	ldr	fp, [sp]
   3fca8:	add	sp, sp, #4
   3fcac:	pop	{pc}		; (ldr pc, [sp], #4)
   3fcb0:	push	{fp}		; (str fp, [sp, #-4]!)
   3fcb4:	add	fp, sp, #0
   3fcb8:	sub	sp, sp, #12
   3fcbc:	mov	r3, r0
   3fcc0:	strb	r3, [fp, #-5]
   3fcc4:	ldrb	r3, [fp, #-5]
   3fcc8:	lsr	r3, r3, #5
   3fccc:	uxtb	r3, r3
   3fcd0:	mov	r2, r3
   3fcd4:	movw	r3, #8964	; 0x2304
   3fcd8:	movt	r3, #4
   3fcdc:	ldr	r2, [r3, r2, lsl #2]
   3fce0:	ldrb	r3, [fp, #-5]
   3fce4:	and	r3, r3, #31
   3fce8:	lsr	r3, r2, r3
   3fcec:	and	r3, r3, #1
   3fcf0:	cmp	r3, #0
   3fcf4:	movne	r3, #1
   3fcf8:	moveq	r3, #0
   3fcfc:	uxtb	r3, r3
   3fd00:	mov	r0, r3
   3fd04:	add	sp, fp, #0
   3fd08:	pop	{fp}		; (ldr fp, [sp], #4)
   3fd0c:	bx	lr
   3fd10:	str	fp, [sp, #-8]!
   3fd14:	str	lr, [sp, #4]
   3fd18:	add	fp, sp, #4
   3fd1c:	sub	sp, sp, #32
   3fd20:	str	r0, [fp, #-24]	; 0xffffffe8
   3fd24:	str	r1, [fp, #-28]	; 0xffffffe4
   3fd28:	str	r2, [fp, #-32]	; 0xffffffe0
   3fd2c:	str	r3, [fp, #-36]	; 0xffffffdc
   3fd30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fd34:	cmp	r3, #0
   3fd38:	bne	3fd44 <__assert_fail@plt+0x2eb04>
   3fd3c:	sub	r3, fp, #16
   3fd40:	str	r3, [fp, #-24]	; 0xffffffe8
   3fd44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3fd48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3fd4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3fd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3fd54:	bl	110a8 <mbrtowc@plt>
   3fd58:	str	r0, [fp, #-8]
   3fd5c:	ldr	r3, [fp, #-8]
   3fd60:	cmn	r3, #3
   3fd64:	bls	3fdb0 <__assert_fail@plt+0x2eb70>
   3fd68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3fd6c:	cmp	r3, #0
   3fd70:	beq	3fdb0 <__assert_fail@plt+0x2eb70>
   3fd74:	mov	r0, #0
   3fd78:	bl	40394 <__assert_fail@plt+0x2f154>
   3fd7c:	mov	r3, r0
   3fd80:	eor	r3, r3, #1
   3fd84:	uxtb	r3, r3
   3fd88:	cmp	r3, #0
   3fd8c:	beq	3fdb0 <__assert_fail@plt+0x2eb70>
   3fd90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3fd94:	ldrb	r3, [r3]
   3fd98:	strb	r3, [fp, #-9]
   3fd9c:	ldrb	r2, [fp, #-9]
   3fda0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fda4:	str	r2, [r3]
   3fda8:	mov	r3, #1
   3fdac:	b	3fdb4 <__assert_fail@plt+0x2eb74>
   3fdb0:	ldr	r3, [fp, #-8]
   3fdb4:	mov	r0, r3
   3fdb8:	sub	sp, fp, #4
   3fdbc:	ldr	fp, [sp]
   3fdc0:	add	sp, sp, #4
   3fdc4:	pop	{pc}		; (ldr pc, [sp], #4)
   3fdc8:	str	fp, [sp, #-8]!
   3fdcc:	str	lr, [sp, #4]
   3fdd0:	add	fp, sp, #4
   3fdd4:	sub	sp, sp, #24
   3fdd8:	str	r0, [fp, #-16]
   3fddc:	str	r1, [fp, #-20]	; 0xffffffec
   3fde0:	str	r2, [fp, #-24]	; 0xffffffe8
   3fde4:	mov	ip, #0
   3fde8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3fdec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fdf0:	umull	r0, r1, r2, r3
   3fdf4:	mov	r2, #0
   3fdf8:	mov	r3, #0
   3fdfc:	mov	r2, r1
   3fe00:	mov	r3, #0
   3fe04:	cmp	r2, #0
   3fe08:	beq	3fe10 <__assert_fail@plt+0x2ebd0>
   3fe0c:	mov	ip, #1
   3fe10:	mov	r3, r0
   3fe14:	str	r3, [fp, #-8]
   3fe18:	mov	r3, ip
   3fe1c:	and	r3, r3, #1
   3fe20:	uxtb	r3, r3
   3fe24:	cmp	r3, #0
   3fe28:	beq	3fe44 <__assert_fail@plt+0x2ec04>
   3fe2c:	bl	11168 <__errno_location@plt>
   3fe30:	mov	r2, r0
   3fe34:	mov	r3, #12
   3fe38:	str	r3, [r2]
   3fe3c:	mov	r3, #0
   3fe40:	b	3fe58 <__assert_fail@plt+0x2ec18>
   3fe44:	ldr	r3, [fp, #-8]
   3fe48:	mov	r1, r3
   3fe4c:	ldr	r0, [fp, #-16]
   3fe50:	bl	3efa0 <__assert_fail@plt+0x2dd60>
   3fe54:	mov	r3, r0
   3fe58:	mov	r0, r3
   3fe5c:	sub	sp, fp, #4
   3fe60:	ldr	fp, [sp]
   3fe64:	add	sp, sp, #4
   3fe68:	pop	{pc}		; (ldr pc, [sp], #4)
   3fe6c:	push	{fp}		; (str fp, [sp, #-4]!)
   3fe70:	add	fp, sp, #0
   3fe74:	sub	sp, sp, #12
   3fe78:	str	r0, [fp, #-8]
   3fe7c:	ldr	r3, [fp, #-8]
   3fe80:	cmp	r3, #90	; 0x5a
   3fe84:	bgt	3fea8 <__assert_fail@plt+0x2ec68>
   3fe88:	ldr	r3, [fp, #-8]
   3fe8c:	cmp	r3, #65	; 0x41
   3fe90:	bge	3feb8 <__assert_fail@plt+0x2ec78>
   3fe94:	ldr	r3, [fp, #-8]
   3fe98:	sub	r3, r3, #48	; 0x30
   3fe9c:	cmp	r3, #9
   3fea0:	bhi	3fec0 <__assert_fail@plt+0x2ec80>
   3fea4:	b	3feb8 <__assert_fail@plt+0x2ec78>
   3fea8:	ldr	r3, [fp, #-8]
   3feac:	sub	r3, r3, #97	; 0x61
   3feb0:	cmp	r3, #25
   3feb4:	bhi	3fec0 <__assert_fail@plt+0x2ec80>
   3feb8:	mov	r3, #1
   3febc:	b	3fec4 <__assert_fail@plt+0x2ec84>
   3fec0:	mov	r3, #0
   3fec4:	mov	r0, r3
   3fec8:	add	sp, fp, #0
   3fecc:	pop	{fp}		; (ldr fp, [sp], #4)
   3fed0:	bx	lr
   3fed4:	push	{fp}		; (str fp, [sp, #-4]!)
   3fed8:	add	fp, sp, #0
   3fedc:	sub	sp, sp, #12
   3fee0:	str	r0, [fp, #-8]
   3fee4:	ldr	r3, [fp, #-8]
   3fee8:	cmp	r3, #65	; 0x41
   3feec:	blt	3ff14 <__assert_fail@plt+0x2ecd4>
   3fef0:	ldr	r3, [fp, #-8]
   3fef4:	cmp	r3, #90	; 0x5a
   3fef8:	ble	3ff0c <__assert_fail@plt+0x2eccc>
   3fefc:	ldr	r3, [fp, #-8]
   3ff00:	sub	r3, r3, #97	; 0x61
   3ff04:	cmp	r3, #25
   3ff08:	bhi	3ff14 <__assert_fail@plt+0x2ecd4>
   3ff0c:	mov	r3, #1
   3ff10:	b	3ff18 <__assert_fail@plt+0x2ecd8>
   3ff14:	mov	r3, #0
   3ff18:	mov	r0, r3
   3ff1c:	add	sp, fp, #0
   3ff20:	pop	{fp}		; (ldr fp, [sp], #4)
   3ff24:	bx	lr
   3ff28:	push	{fp}		; (str fp, [sp, #-4]!)
   3ff2c:	add	fp, sp, #0
   3ff30:	sub	sp, sp, #12
   3ff34:	str	r0, [fp, #-8]
   3ff38:	ldr	r3, [fp, #-8]
   3ff3c:	cmp	r3, #127	; 0x7f
   3ff40:	bhi	3ff4c <__assert_fail@plt+0x2ed0c>
   3ff44:	mov	r3, #1
   3ff48:	b	3ff50 <__assert_fail@plt+0x2ed10>
   3ff4c:	mov	r3, #0
   3ff50:	mov	r0, r3
   3ff54:	add	sp, fp, #0
   3ff58:	pop	{fp}		; (ldr fp, [sp], #4)
   3ff5c:	bx	lr
   3ff60:	push	{fp}		; (str fp, [sp, #-4]!)
   3ff64:	add	fp, sp, #0
   3ff68:	sub	sp, sp, #12
   3ff6c:	str	r0, [fp, #-8]
   3ff70:	ldr	r3, [fp, #-8]
   3ff74:	cmp	r3, #32
   3ff78:	beq	3ff88 <__assert_fail@plt+0x2ed48>
   3ff7c:	ldr	r3, [fp, #-8]
   3ff80:	cmp	r3, #9
   3ff84:	bne	3ff90 <__assert_fail@plt+0x2ed50>
   3ff88:	mov	r3, #1
   3ff8c:	b	3ff94 <__assert_fail@plt+0x2ed54>
   3ff90:	mov	r3, #0
   3ff94:	and	r3, r3, #1
   3ff98:	uxtb	r3, r3
   3ff9c:	mov	r0, r3
   3ffa0:	add	sp, fp, #0
   3ffa4:	pop	{fp}		; (ldr fp, [sp], #4)
   3ffa8:	bx	lr
   3ffac:	push	{fp}		; (str fp, [sp, #-4]!)
   3ffb0:	add	fp, sp, #0
   3ffb4:	sub	sp, sp, #12
   3ffb8:	str	r0, [fp, #-8]
   3ffbc:	ldr	r3, [fp, #-8]
   3ffc0:	cmp	r3, #0
   3ffc4:	blt	3ffe8 <__assert_fail@plt+0x2eda8>
   3ffc8:	ldr	r3, [fp, #-8]
   3ffcc:	cmp	r3, #31
   3ffd0:	ble	3ffe0 <__assert_fail@plt+0x2eda0>
   3ffd4:	ldr	r3, [fp, #-8]
   3ffd8:	cmp	r3, #127	; 0x7f
   3ffdc:	bne	3ffe8 <__assert_fail@plt+0x2eda8>
   3ffe0:	mov	r3, #1
   3ffe4:	b	3ffec <__assert_fail@plt+0x2edac>
   3ffe8:	mov	r3, #0
   3ffec:	mov	r0, r3
   3fff0:	add	sp, fp, #0
   3fff4:	pop	{fp}		; (ldr fp, [sp], #4)
   3fff8:	bx	lr
   3fffc:	push	{fp}		; (str fp, [sp, #-4]!)
   40000:	add	fp, sp, #0
   40004:	sub	sp, sp, #12
   40008:	str	r0, [fp, #-8]
   4000c:	ldr	r3, [fp, #-8]
   40010:	sub	r3, r3, #48	; 0x30
   40014:	cmp	r3, #9
   40018:	bhi	40024 <__assert_fail@plt+0x2ede4>
   4001c:	mov	r3, #1
   40020:	b	40028 <__assert_fail@plt+0x2ede8>
   40024:	mov	r3, #0
   40028:	mov	r0, r3
   4002c:	add	sp, fp, #0
   40030:	pop	{fp}		; (ldr fp, [sp], #4)
   40034:	bx	lr
   40038:	push	{fp}		; (str fp, [sp, #-4]!)
   4003c:	add	fp, sp, #0
   40040:	sub	sp, sp, #12
   40044:	str	r0, [fp, #-8]
   40048:	ldr	r3, [fp, #-8]
   4004c:	sub	r3, r3, #33	; 0x21
   40050:	cmp	r3, #93	; 0x5d
   40054:	bhi	40060 <__assert_fail@plt+0x2ee20>
   40058:	mov	r3, #1
   4005c:	b	40064 <__assert_fail@plt+0x2ee24>
   40060:	mov	r3, #0
   40064:	mov	r0, r3
   40068:	add	sp, fp, #0
   4006c:	pop	{fp}		; (ldr fp, [sp], #4)
   40070:	bx	lr
   40074:	push	{fp}		; (str fp, [sp, #-4]!)
   40078:	add	fp, sp, #0
   4007c:	sub	sp, sp, #12
   40080:	str	r0, [fp, #-8]
   40084:	ldr	r3, [fp, #-8]
   40088:	sub	r3, r3, #97	; 0x61
   4008c:	cmp	r3, #25
   40090:	bhi	4009c <__assert_fail@plt+0x2ee5c>
   40094:	mov	r3, #1
   40098:	b	400a0 <__assert_fail@plt+0x2ee60>
   4009c:	mov	r3, #0
   400a0:	mov	r0, r3
   400a4:	add	sp, fp, #0
   400a8:	pop	{fp}		; (ldr fp, [sp], #4)
   400ac:	bx	lr
   400b0:	push	{fp}		; (str fp, [sp, #-4]!)
   400b4:	add	fp, sp, #0
   400b8:	sub	sp, sp, #12
   400bc:	str	r0, [fp, #-8]
   400c0:	ldr	r3, [fp, #-8]
   400c4:	sub	r3, r3, #32
   400c8:	cmp	r3, #94	; 0x5e
   400cc:	bhi	400d8 <__assert_fail@plt+0x2ee98>
   400d0:	mov	r3, #1
   400d4:	b	400dc <__assert_fail@plt+0x2ee9c>
   400d8:	mov	r3, #0
   400dc:	mov	r0, r3
   400e0:	add	sp, fp, #0
   400e4:	pop	{fp}		; (ldr fp, [sp], #4)
   400e8:	bx	lr
   400ec:	push	{fp}		; (str fp, [sp, #-4]!)
   400f0:	add	fp, sp, #0
   400f4:	sub	sp, sp, #12
   400f8:	str	r0, [fp, #-8]
   400fc:	ldr	r3, [fp, #-8]
   40100:	cmp	r3, #64	; 0x40
   40104:	bgt	40128 <__assert_fail@plt+0x2eee8>
   40108:	ldr	r3, [fp, #-8]
   4010c:	cmp	r3, #58	; 0x3a
   40110:	bge	40150 <__assert_fail@plt+0x2ef10>
   40114:	ldr	r3, [fp, #-8]
   40118:	sub	r3, r3, #33	; 0x21
   4011c:	cmp	r3, #14
   40120:	bhi	40158 <__assert_fail@plt+0x2ef18>
   40124:	b	40150 <__assert_fail@plt+0x2ef10>
   40128:	ldr	r3, [fp, #-8]
   4012c:	cmp	r3, #91	; 0x5b
   40130:	blt	40158 <__assert_fail@plt+0x2ef18>
   40134:	ldr	r3, [fp, #-8]
   40138:	cmp	r3, #96	; 0x60
   4013c:	ble	40150 <__assert_fail@plt+0x2ef10>
   40140:	ldr	r3, [fp, #-8]
   40144:	sub	r3, r3, #123	; 0x7b
   40148:	cmp	r3, #3
   4014c:	bhi	40158 <__assert_fail@plt+0x2ef18>
   40150:	mov	r3, #1
   40154:	b	4015c <__assert_fail@plt+0x2ef1c>
   40158:	mov	r3, #0
   4015c:	mov	r0, r3
   40160:	add	sp, fp, #0
   40164:	pop	{fp}		; (ldr fp, [sp], #4)
   40168:	bx	lr
   4016c:	push	{fp}		; (str fp, [sp, #-4]!)
   40170:	add	fp, sp, #0
   40174:	sub	sp, sp, #12
   40178:	str	r0, [fp, #-8]
   4017c:	ldr	r3, [fp, #-8]
   40180:	cmp	r3, #9
   40184:	blt	401a8 <__assert_fail@plt+0x2ef68>
   40188:	ldr	r3, [fp, #-8]
   4018c:	cmp	r3, #13
   40190:	ble	401a0 <__assert_fail@plt+0x2ef60>
   40194:	ldr	r3, [fp, #-8]
   40198:	cmp	r3, #32
   4019c:	bne	401a8 <__assert_fail@plt+0x2ef68>
   401a0:	mov	r3, #1
   401a4:	b	401ac <__assert_fail@plt+0x2ef6c>
   401a8:	mov	r3, #0
   401ac:	mov	r0, r3
   401b0:	add	sp, fp, #0
   401b4:	pop	{fp}		; (ldr fp, [sp], #4)
   401b8:	bx	lr
   401bc:	push	{fp}		; (str fp, [sp, #-4]!)
   401c0:	add	fp, sp, #0
   401c4:	sub	sp, sp, #12
   401c8:	str	r0, [fp, #-8]
   401cc:	ldr	r3, [fp, #-8]
   401d0:	sub	r3, r3, #65	; 0x41
   401d4:	cmp	r3, #25
   401d8:	bhi	401e4 <__assert_fail@plt+0x2efa4>
   401dc:	mov	r3, #1
   401e0:	b	401e8 <__assert_fail@plt+0x2efa8>
   401e4:	mov	r3, #0
   401e8:	mov	r0, r3
   401ec:	add	sp, fp, #0
   401f0:	pop	{fp}		; (ldr fp, [sp], #4)
   401f4:	bx	lr
   401f8:	push	{fp}		; (str fp, [sp, #-4]!)
   401fc:	add	fp, sp, #0
   40200:	sub	sp, sp, #12
   40204:	str	r0, [fp, #-8]
   40208:	ldr	r3, [fp, #-8]
   4020c:	sub	r3, r3, #48	; 0x30
   40210:	cmp	r3, #54	; 0x36
   40214:	ldrls	pc, [pc, r3, lsl #2]
   40218:	b	40300 <__assert_fail@plt+0x2f0c0>
   4021c:	strdeq	r0, [r4], -r8
   40220:	strdeq	r0, [r4], -r8
   40224:	strdeq	r0, [r4], -r8
   40228:	strdeq	r0, [r4], -r8
   4022c:	strdeq	r0, [r4], -r8
   40230:	strdeq	r0, [r4], -r8
   40234:	strdeq	r0, [r4], -r8
   40238:	strdeq	r0, [r4], -r8
   4023c:	strdeq	r0, [r4], -r8
   40240:	strdeq	r0, [r4], -r8
   40244:	andeq	r0, r4, r0, lsl #6
   40248:	andeq	r0, r4, r0, lsl #6
   4024c:	andeq	r0, r4, r0, lsl #6
   40250:	andeq	r0, r4, r0, lsl #6
   40254:	andeq	r0, r4, r0, lsl #6
   40258:	andeq	r0, r4, r0, lsl #6
   4025c:	andeq	r0, r4, r0, lsl #6
   40260:	strdeq	r0, [r4], -r8
   40264:	strdeq	r0, [r4], -r8
   40268:	strdeq	r0, [r4], -r8
   4026c:	strdeq	r0, [r4], -r8
   40270:	strdeq	r0, [r4], -r8
   40274:	strdeq	r0, [r4], -r8
   40278:	andeq	r0, r4, r0, lsl #6
   4027c:	andeq	r0, r4, r0, lsl #6
   40280:	andeq	r0, r4, r0, lsl #6
   40284:	andeq	r0, r4, r0, lsl #6
   40288:	andeq	r0, r4, r0, lsl #6
   4028c:	andeq	r0, r4, r0, lsl #6
   40290:	andeq	r0, r4, r0, lsl #6
   40294:	andeq	r0, r4, r0, lsl #6
   40298:	andeq	r0, r4, r0, lsl #6
   4029c:	andeq	r0, r4, r0, lsl #6
   402a0:	andeq	r0, r4, r0, lsl #6
   402a4:	andeq	r0, r4, r0, lsl #6
   402a8:	andeq	r0, r4, r0, lsl #6
   402ac:	andeq	r0, r4, r0, lsl #6
   402b0:	andeq	r0, r4, r0, lsl #6
   402b4:	andeq	r0, r4, r0, lsl #6
   402b8:	andeq	r0, r4, r0, lsl #6
   402bc:	andeq	r0, r4, r0, lsl #6
   402c0:	andeq	r0, r4, r0, lsl #6
   402c4:	andeq	r0, r4, r0, lsl #6
   402c8:	andeq	r0, r4, r0, lsl #6
   402cc:	andeq	r0, r4, r0, lsl #6
   402d0:	andeq	r0, r4, r0, lsl #6
   402d4:	andeq	r0, r4, r0, lsl #6
   402d8:	andeq	r0, r4, r0, lsl #6
   402dc:	andeq	r0, r4, r0, lsl #6
   402e0:	strdeq	r0, [r4], -r8
   402e4:	strdeq	r0, [r4], -r8
   402e8:	strdeq	r0, [r4], -r8
   402ec:	strdeq	r0, [r4], -r8
   402f0:	strdeq	r0, [r4], -r8
   402f4:	strdeq	r0, [r4], -r8
   402f8:	mov	r3, #1
   402fc:	b	40304 <__assert_fail@plt+0x2f0c4>
   40300:	mov	r3, #0
   40304:	mov	r0, r3
   40308:	add	sp, fp, #0
   4030c:	pop	{fp}		; (ldr fp, [sp], #4)
   40310:	bx	lr
   40314:	push	{fp}		; (str fp, [sp, #-4]!)
   40318:	add	fp, sp, #0
   4031c:	sub	sp, sp, #12
   40320:	str	r0, [fp, #-8]
   40324:	ldr	r3, [fp, #-8]
   40328:	sub	r3, r3, #65	; 0x41
   4032c:	cmp	r3, #25
   40330:	bhi	40340 <__assert_fail@plt+0x2f100>
   40334:	ldr	r3, [fp, #-8]
   40338:	add	r3, r3, #32
   4033c:	b	40344 <__assert_fail@plt+0x2f104>
   40340:	ldr	r3, [fp, #-8]
   40344:	mov	r0, r3
   40348:	add	sp, fp, #0
   4034c:	pop	{fp}		; (ldr fp, [sp], #4)
   40350:	bx	lr
   40354:	push	{fp}		; (str fp, [sp, #-4]!)
   40358:	add	fp, sp, #0
   4035c:	sub	sp, sp, #12
   40360:	str	r0, [fp, #-8]
   40364:	ldr	r3, [fp, #-8]
   40368:	sub	r3, r3, #97	; 0x61
   4036c:	cmp	r3, #25
   40370:	bhi	40380 <__assert_fail@plt+0x2f140>
   40374:	ldr	r3, [fp, #-8]
   40378:	sub	r3, r3, #32
   4037c:	b	40384 <__assert_fail@plt+0x2f144>
   40380:	ldr	r3, [fp, #-8]
   40384:	mov	r0, r3
   40388:	add	sp, fp, #0
   4038c:	pop	{fp}		; (ldr fp, [sp], #4)
   40390:	bx	lr
   40394:	str	fp, [sp, #-8]!
   40398:	str	lr, [sp, #4]
   4039c:	add	fp, sp, #4
   403a0:	sub	sp, sp, #272	; 0x110
   403a4:	str	r0, [fp, #-272]	; 0xfffffef0
   403a8:	sub	r3, fp, #264	; 0x108
   403ac:	movw	r2, #257	; 0x101
   403b0:	mov	r1, r3
   403b4:	ldr	r0, [fp, #-272]	; 0xfffffef0
   403b8:	bl	40558 <__assert_fail@plt+0x2f318>
   403bc:	mov	r3, r0
   403c0:	cmp	r3, #0
   403c4:	beq	403d0 <__assert_fail@plt+0x2f190>
   403c8:	mov	r3, #0
   403cc:	b	40424 <__assert_fail@plt+0x2f1e4>
   403d0:	sub	r3, fp, #264	; 0x108
   403d4:	movw	r1, #8996	; 0x2324
   403d8:	movt	r1, #4
   403dc:	mov	r0, r3
   403e0:	bl	10f70 <strcmp@plt>
   403e4:	mov	r3, r0
   403e8:	cmp	r3, #0
   403ec:	beq	40418 <__assert_fail@plt+0x2f1d8>
   403f0:	sub	r3, fp, #264	; 0x108
   403f4:	movw	r1, #9000	; 0x2328
   403f8:	movt	r1, #4
   403fc:	mov	r0, r3
   40400:	bl	10f70 <strcmp@plt>
   40404:	mov	r3, r0
   40408:	cmp	r3, #0
   4040c:	beq	40418 <__assert_fail@plt+0x2f1d8>
   40410:	mov	r3, #1
   40414:	b	4041c <__assert_fail@plt+0x2f1dc>
   40418:	mov	r3, #0
   4041c:	and	r3, r3, #1
   40420:	uxtb	r3, r3
   40424:	mov	r0, r3
   40428:	sub	sp, fp, #4
   4042c:	ldr	fp, [sp]
   40430:	add	sp, sp, #4
   40434:	pop	{pc}		; (ldr pc, [sp], #4)
   40438:	str	fp, [sp, #-8]!
   4043c:	str	lr, [sp, #4]
   40440:	add	fp, sp, #4
   40444:	sub	sp, sp, #16
   40448:	str	r0, [fp, #-16]
   4044c:	mov	r1, #0
   40450:	ldr	r0, [fp, #-16]
   40454:	bl	111d4 <setlocale@plt>
   40458:	str	r0, [fp, #-8]
   4045c:	ldr	r3, [fp, #-8]
   40460:	mov	r0, r3
   40464:	sub	sp, fp, #4
   40468:	ldr	fp, [sp]
   4046c:	add	sp, sp, #4
   40470:	pop	{pc}		; (ldr pc, [sp], #4)
   40474:	str	fp, [sp, #-8]!
   40478:	str	lr, [sp, #4]
   4047c:	add	fp, sp, #4
   40480:	sub	sp, sp, #24
   40484:	str	r0, [fp, #-16]
   40488:	str	r1, [fp, #-20]	; 0xffffffec
   4048c:	str	r2, [fp, #-24]	; 0xffffffe8
   40490:	ldr	r0, [fp, #-16]
   40494:	bl	40438 <__assert_fail@plt+0x2f1f8>
   40498:	str	r0, [fp, #-8]
   4049c:	ldr	r3, [fp, #-8]
   404a0:	cmp	r3, #0
   404a4:	bne	404c8 <__assert_fail@plt+0x2f288>
   404a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   404ac:	cmp	r3, #0
   404b0:	beq	404c0 <__assert_fail@plt+0x2f280>
   404b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   404b8:	mov	r2, #0
   404bc:	strb	r2, [r3]
   404c0:	mov	r3, #22
   404c4:	b	40544 <__assert_fail@plt+0x2f304>
   404c8:	ldr	r0, [fp, #-8]
   404cc:	bl	11144 <strlen@plt>
   404d0:	str	r0, [fp, #-12]
   404d4:	ldr	r2, [fp, #-12]
   404d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   404dc:	cmp	r2, r3
   404e0:	bcs	40504 <__assert_fail@plt+0x2f2c4>
   404e4:	ldr	r3, [fp, #-12]
   404e8:	add	r3, r3, #1
   404ec:	mov	r2, r3
   404f0:	ldr	r1, [fp, #-8]
   404f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   404f8:	bl	10fe8 <memcpy@plt>
   404fc:	mov	r3, #0
   40500:	b	40544 <__assert_fail@plt+0x2f304>
   40504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40508:	cmp	r3, #0
   4050c:	beq	40540 <__assert_fail@plt+0x2f300>
   40510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40514:	sub	r3, r3, #1
   40518:	mov	r2, r3
   4051c:	ldr	r1, [fp, #-8]
   40520:	ldr	r0, [fp, #-20]	; 0xffffffec
   40524:	bl	10fe8 <memcpy@plt>
   40528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4052c:	sub	r3, r3, #1
   40530:	ldr	r2, [fp, #-20]	; 0xffffffec
   40534:	add	r3, r2, r3
   40538:	mov	r2, #0
   4053c:	strb	r2, [r3]
   40540:	mov	r3, #34	; 0x22
   40544:	mov	r0, r3
   40548:	sub	sp, fp, #4
   4054c:	ldr	fp, [sp]
   40550:	add	sp, sp, #4
   40554:	pop	{pc}		; (ldr pc, [sp], #4)
   40558:	str	fp, [sp, #-8]!
   4055c:	str	lr, [sp, #4]
   40560:	add	fp, sp, #4
   40564:	sub	sp, sp, #16
   40568:	str	r0, [fp, #-8]
   4056c:	str	r1, [fp, #-12]
   40570:	str	r2, [fp, #-16]
   40574:	ldr	r2, [fp, #-16]
   40578:	ldr	r1, [fp, #-12]
   4057c:	ldr	r0, [fp, #-8]
   40580:	bl	40474 <__assert_fail@plt+0x2f234>
   40584:	mov	r3, r0
   40588:	mov	r0, r3
   4058c:	sub	sp, fp, #4
   40590:	ldr	fp, [sp]
   40594:	add	sp, sp, #4
   40598:	pop	{pc}		; (ldr pc, [sp], #4)
   4059c:	str	fp, [sp, #-8]!
   405a0:	str	lr, [sp, #4]
   405a4:	add	fp, sp, #4
   405a8:	sub	sp, sp, #8
   405ac:	str	r0, [fp, #-8]
   405b0:	ldr	r0, [fp, #-8]
   405b4:	bl	40438 <__assert_fail@plt+0x2f1f8>
   405b8:	mov	r3, r0
   405bc:	mov	r0, r3
   405c0:	sub	sp, fp, #4
   405c4:	ldr	fp, [sp]
   405c8:	add	sp, sp, #4
   405cc:	pop	{pc}		; (ldr pc, [sp], #4)
   405d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   405d4:	mov	r7, r0
   405d8:	ldr	r6, [pc, #72]	; 40628 <__assert_fail@plt+0x2f3e8>
   405dc:	ldr	r5, [pc, #72]	; 4062c <__assert_fail@plt+0x2f3ec>
   405e0:	add	r6, pc, r6
   405e4:	add	r5, pc, r5
   405e8:	sub	r6, r6, r5
   405ec:	mov	r8, r1
   405f0:	mov	r9, r2
   405f4:	bl	10f08 <pthread_mutex_unlock@plt-0x20>
   405f8:	asrs	r6, r6, #2
   405fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   40600:	mov	r4, #0
   40604:	add	r4, r4, #1
   40608:	ldr	r3, [r5], #4
   4060c:	mov	r2, r9
   40610:	mov	r1, r8
   40614:	mov	r0, r7
   40618:	blx	r3
   4061c:	cmp	r6, r4
   40620:	bne	40604 <__assert_fail@plt+0x2f3c4>
   40624:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40628:	andeq	r2, r1, ip, lsr #18
   4062c:	andeq	r2, r1, r4, lsr #18
   40630:	bx	lr
   40634:	ldr	r3, [pc, #12]	; 40648 <__assert_fail@plt+0x2f408>
   40638:	mov	r1, #0
   4063c:	add	r3, pc, r3
   40640:	ldr	r2, [r3]
   40644:	b	11180 <__cxa_atexit@plt>
   40648:	ldrdeq	r2, [r1], -ip

Disassembly of section .fini:

0004064c <.fini>:
   4064c:	push	{r3, lr}
   40650:	pop	{r3, pc}
