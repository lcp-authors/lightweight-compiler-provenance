
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011a60 <.init>:
   11a60:	push	{r3, lr}
   11a64:	bl	11fc0 <__assert_fail@plt+0x48>
   11a68:	pop	{r3, pc}

Disassembly of section .plt:

00011a6c <calloc@plt-0x14>:
   11a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11a70:	ldr	lr, [pc, #4]	; 11a7c <calloc@plt-0x4>
   11a74:	add	lr, pc, lr
   11a78:	ldr	pc, [lr, #8]!
   11a7c:	andeq	sp, r1, r4, lsl #11

00011a80 <calloc@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #118784	; 0x1d000
   11a88:	ldr	pc, [ip, #1412]!	; 0x584

00011a8c <fputs_unlocked@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #118784	; 0x1d000
   11a94:	ldr	pc, [ip, #1404]!	; 0x57c

00011a98 <__getdelim@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #118784	; 0x1d000
   11aa0:	ldr	pc, [ip, #1396]!	; 0x574

00011aa4 <getpwnam@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #118784	; 0x1d000
   11aac:	ldr	pc, [ip, #1388]!	; 0x56c

00011ab0 <strcmp@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #118784	; 0x1d000
   11ab8:	ldr	pc, [ip, #1380]!	; 0x564

00011abc <strtol@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #118784	; 0x1d000
   11ac4:	ldr	pc, [ip, #1372]!	; 0x55c

00011ac8 <setsockopt@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #118784	; 0x1d000
   11ad0:	ldr	pc, [ip, #1364]!	; 0x554

00011ad4 <strcspn@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #118784	; 0x1d000
   11adc:	ldr	pc, [ip, #1356]!	; 0x54c

00011ae0 <pause@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #118784	; 0x1d000
   11ae8:	ldr	pc, [ip, #1348]!	; 0x544

00011aec <printf@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #118784	; 0x1d000
   11af4:	ldr	pc, [ip, #1340]!	; 0x53c

00011af8 <read@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #118784	; 0x1d000
   11b00:	ldr	pc, [ip, #1332]!	; 0x534

00011b04 <getprotobyname@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #118784	; 0x1d000
   11b0c:	ldr	pc, [ip, #1324]!	; 0x52c

00011b10 <sigprocmask@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #118784	; 0x1d000
   11b18:	ldr	pc, [ip, #1316]!	; 0x524

00011b1c <memmove@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #118784	; 0x1d000
   11b24:	ldr	pc, [ip, #1308]!	; 0x51c

00011b28 <strchrnul@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #118784	; 0x1d000
   11b30:	ldr	pc, [ip, #1300]!	; 0x514

00011b34 <free@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #118784	; 0x1d000
   11b3c:	ldr	pc, [ip, #1292]!	; 0x50c

00011b40 <gai_strerror@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #118784	; 0x1d000
   11b48:	ldr	pc, [ip, #1284]!	; 0x504

00011b4c <strndup@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #118784	; 0x1d000
   11b54:	ldr	pc, [ip, #1276]!	; 0x4fc

00011b58 <_exit@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #118784	; 0x1d000
   11b60:	ldr	pc, [ip, #1268]!	; 0x4f4

00011b64 <memcpy@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #118784	; 0x1d000
   11b6c:	ldr	pc, [ip, #1260]!	; 0x4ec

00011b70 <signal@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #118784	; 0x1d000
   11b78:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b7c <time@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #118784	; 0x1d000
   11b84:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b88 <fwrite_unlocked@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #118784	; 0x1d000
   11b90:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b94 <select@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #118784	; 0x1d000
   11b9c:	ldr	pc, [ip, #1228]!	; 0x4cc

00011ba0 <sleep@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #118784	; 0x1d000
   11ba8:	ldr	pc, [ip, #1220]!	; 0x4c4

00011bac <ctime@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #118784	; 0x1d000
   11bb4:	ldr	pc, [ip, #1212]!	; 0x4bc

00011bb8 <recvfrom@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #118784	; 0x1d000
   11bc0:	ldr	pc, [ip, #1204]!	; 0x4b4

00011bc4 <strdup@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #118784	; 0x1d000
   11bcc:	ldr	pc, [ip, #1196]!	; 0x4ac

00011bd0 <alarm@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #118784	; 0x1d000
   11bd8:	ldr	pc, [ip, #1188]!	; 0x4a4

00011bdc <sysconf@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #118784	; 0x1d000
   11be4:	ldr	pc, [ip, #1180]!	; 0x49c

00011be8 <dup2@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #118784	; 0x1d000
   11bf0:	ldr	pc, [ip, #1172]!	; 0x494

00011bf4 <realloc@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #118784	; 0x1d000
   11bfc:	ldr	pc, [ip, #1164]!	; 0x48c

00011c00 <initgroups@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #118784	; 0x1d000
   11c08:	ldr	pc, [ip, #1156]!	; 0x484

00011c0c <chdir@plt>:
   11c0c:	add	ip, pc, #0, 12
   11c10:	add	ip, ip, #118784	; 0x1d000
   11c14:	ldr	pc, [ip, #1148]!	; 0x47c

00011c18 <strcasecmp@plt>:
   11c18:	add	ip, pc, #0, 12
   11c1c:	add	ip, ip, #118784	; 0x1d000
   11c20:	ldr	pc, [ip, #1140]!	; 0x474

00011c24 <funlockfile@plt>:
   11c24:	add	ip, pc, #0, 12
   11c28:	add	ip, ip, #118784	; 0x1d000
   11c2c:	ldr	pc, [ip, #1132]!	; 0x46c

00011c30 <accept@plt>:
   11c30:	add	ip, pc, #0, 12
   11c34:	add	ip, ip, #118784	; 0x1d000
   11c38:	ldr	pc, [ip, #1124]!	; 0x464

00011c3c <sigaction@plt>:
   11c3c:	add	ip, pc, #0, 12
   11c40:	add	ip, ip, #118784	; 0x1d000
   11c44:	ldr	pc, [ip, #1116]!	; 0x45c

00011c48 <fwrite@plt>:
   11c48:	add	ip, pc, #0, 12
   11c4c:	add	ip, ip, #118784	; 0x1d000
   11c50:	ldr	pc, [ip, #1108]!	; 0x454

00011c54 <strcat@plt>:
   11c54:	add	ip, pc, #0, 12
   11c58:	add	ip, ip, #118784	; 0x1d000
   11c5c:	ldr	pc, [ip, #1100]!	; 0x44c

00011c60 <gettimeofday@plt>:
   11c60:	add	ip, pc, #0, 12
   11c64:	add	ip, ip, #118784	; 0x1d000
   11c68:	ldr	pc, [ip, #1092]!	; 0x444

00011c6c <error@plt>:
   11c6c:	add	ip, pc, #0, 12
   11c70:	add	ip, ip, #118784	; 0x1d000
   11c74:	ldr	pc, [ip, #1084]!	; 0x43c

00011c78 <opendir@plt>:
   11c78:	add	ip, pc, #0, 12
   11c7c:	add	ip, ip, #118784	; 0x1d000
   11c80:	ldr	pc, [ip, #1076]!	; 0x434

00011c84 <open64@plt>:
   11c84:	add	ip, pc, #0, 12
   11c88:	add	ip, ip, #118784	; 0x1d000
   11c8c:	ldr	pc, [ip, #1068]!	; 0x42c

00011c90 <getenv@plt>:
   11c90:	add	ip, pc, #0, 12
   11c94:	add	ip, ip, #118784	; 0x1d000
   11c98:	ldr	pc, [ip, #1060]!	; 0x424

00011c9c <setgid@plt>:
   11c9c:	add	ip, pc, #0, 12
   11ca0:	add	ip, ip, #118784	; 0x1d000
   11ca4:	ldr	pc, [ip, #1052]!	; 0x41c

00011ca8 <malloc@plt>:
   11ca8:	add	ip, pc, #0, 12
   11cac:	add	ip, ip, #118784	; 0x1d000
   11cb0:	ldr	pc, [ip, #1044]!	; 0x414

00011cb4 <sigaddset@plt>:
   11cb4:	add	ip, pc, #0, 12
   11cb8:	add	ip, ip, #118784	; 0x1d000
   11cbc:	ldr	pc, [ip, #1036]!	; 0x40c

00011cc0 <__libc_start_main@plt>:
   11cc0:	add	ip, pc, #0, 12
   11cc4:	add	ip, ip, #118784	; 0x1d000
   11cc8:	ldr	pc, [ip, #1028]!	; 0x404

00011ccc <strerror@plt>:
   11ccc:	add	ip, pc, #0, 12
   11cd0:	add	ip, ip, #118784	; 0x1d000
   11cd4:	ldr	pc, [ip, #1020]!	; 0x3fc

00011cd8 <__ctype_tolower_loc@plt>:
   11cd8:	add	ip, pc, #0, 12
   11cdc:	add	ip, ip, #118784	; 0x1d000
   11ce0:	ldr	pc, [ip, #1012]!	; 0x3f4

00011ce4 <__gmon_start__@plt>:
   11ce4:	add	ip, pc, #0, 12
   11ce8:	add	ip, ip, #118784	; 0x1d000
   11cec:	ldr	pc, [ip, #1004]!	; 0x3ec

00011cf0 <__ctype_b_loc@plt>:
   11cf0:	add	ip, pc, #0, 12
   11cf4:	add	ip, ip, #118784	; 0x1d000
   11cf8:	ldr	pc, [ip, #996]!	; 0x3e4

00011cfc <getpid@plt>:
   11cfc:	add	ip, pc, #0, 12
   11d00:	add	ip, ip, #118784	; 0x1d000
   11d04:	ldr	pc, [ip, #988]!	; 0x3dc

00011d08 <exit@plt>:
   11d08:	add	ip, pc, #0, 12
   11d0c:	add	ip, ip, #118784	; 0x1d000
   11d10:	ldr	pc, [ip, #980]!	; 0x3d4

00011d14 <bcmp@plt>:
   11d14:	add	ip, pc, #0, 12
   11d18:	add	ip, ip, #118784	; 0x1d000
   11d1c:	ldr	pc, [ip, #972]!	; 0x3cc

00011d20 <strtoul@plt>:
   11d20:	add	ip, pc, #0, 12
   11d24:	add	ip, ip, #118784	; 0x1d000
   11d28:	ldr	pc, [ip, #964]!	; 0x3c4

00011d2c <strlen@plt>:
   11d2c:	add	ip, pc, #0, 12
   11d30:	add	ip, ip, #118784	; 0x1d000
   11d34:	ldr	pc, [ip, #956]!	; 0x3bc

00011d38 <setsid@plt>:
   11d38:	add	ip, pc, #0, 12
   11d3c:	add	ip, ip, #118784	; 0x1d000
   11d40:	ldr	pc, [ip, #948]!	; 0x3b4

00011d44 <strchr@plt>:
   11d44:	add	ip, pc, #0, 12
   11d48:	add	ip, ip, #118784	; 0x1d000
   11d4c:	ldr	pc, [ip, #940]!	; 0x3ac

00011d50 <setenv@plt>:
   11d50:	add	ip, pc, #0, 12
   11d54:	add	ip, ip, #118784	; 0x1d000
   11d58:	ldr	pc, [ip, #932]!	; 0x3a4

00011d5c <fprintf@plt>:
   11d5c:	add	ip, pc, #0, 12
   11d60:	add	ip, ip, #118784	; 0x1d000
   11d64:	ldr	pc, [ip, #924]!	; 0x39c

00011d68 <execv@plt>:
   11d68:	add	ip, pc, #0, 12
   11d6c:	add	ip, ip, #118784	; 0x1d000
   11d70:	ldr	pc, [ip, #916]!	; 0x394

00011d74 <__errno_location@plt>:
   11d74:	add	ip, pc, #0, 12
   11d78:	add	ip, ip, #118784	; 0x1d000
   11d7c:	ldr	pc, [ip, #908]!	; 0x38c

00011d80 <snprintf@plt>:
   11d80:	add	ip, pc, #0, 12
   11d84:	add	ip, ip, #118784	; 0x1d000
   11d88:	ldr	pc, [ip, #900]!	; 0x384

00011d8c <strerror_r@plt>:
   11d8c:	add	ip, pc, #0, 12
   11d90:	add	ip, ip, #118784	; 0x1d000
   11d94:	ldr	pc, [ip, #892]!	; 0x37c

00011d98 <bind@plt>:
   11d98:	add	ip, pc, #0, 12
   11d9c:	add	ip, ip, #118784	; 0x1d000
   11da0:	ldr	pc, [ip, #884]!	; 0x374

00011da4 <memset@plt>:
   11da4:	add	ip, pc, #0, 12
   11da8:	add	ip, ip, #118784	; 0x1d000
   11dac:	ldr	pc, [ip, #876]!	; 0x36c

00011db0 <strncpy@plt>:
   11db0:	add	ip, pc, #0, 12
   11db4:	add	ip, ip, #118784	; 0x1d000
   11db8:	ldr	pc, [ip, #868]!	; 0x364

00011dbc <sigsuspend@plt>:
   11dbc:	add	ip, pc, #0, 12
   11dc0:	add	ip, ip, #118784	; 0x1d000
   11dc4:	ldr	pc, [ip, #860]!	; 0x35c

00011dc8 <wait3@plt>:
   11dc8:	add	ip, pc, #0, 12
   11dcc:	add	ip, ip, #118784	; 0x1d000
   11dd0:	ldr	pc, [ip, #852]!	; 0x354

00011dd4 <write@plt>:
   11dd4:	add	ip, pc, #0, 12
   11dd8:	add	ip, ip, #118784	; 0x1d000
   11ddc:	ldr	pc, [ip, #844]!	; 0x34c

00011de0 <memchr@plt>:
   11de0:	add	ip, pc, #0, 12
   11de4:	add	ip, ip, #118784	; 0x1d000
   11de8:	ldr	pc, [ip, #836]!	; 0x344

00011dec <fclose@plt>:
   11dec:	add	ip, pc, #0, 12
   11df0:	add	ip, ip, #118784	; 0x1d000
   11df4:	ldr	pc, [ip, #828]!	; 0x33c

00011df8 <sendto@plt>:
   11df8:	add	ip, pc, #0, 12
   11dfc:	add	ip, ip, #118784	; 0x1d000
   11e00:	ldr	pc, [ip, #820]!	; 0x334

00011e04 <__overflow@plt>:
   11e04:	add	ip, pc, #0, 12
   11e08:	add	ip, ip, #118784	; 0x1d000
   11e0c:	ldr	pc, [ip, #812]!	; 0x32c

00011e10 <sigemptyset@plt>:
   11e10:	add	ip, pc, #0, 12
   11e14:	add	ip, ip, #118784	; 0x1d000
   11e18:	ldr	pc, [ip, #804]!	; 0x324

00011e1c <fork@plt>:
   11e1c:	add	ip, pc, #0, 12
   11e20:	add	ip, ip, #118784	; 0x1d000
   11e24:	ldr	pc, [ip, #796]!	; 0x31c

00011e28 <getnameinfo@plt>:
   11e28:	add	ip, pc, #0, 12
   11e2c:	add	ip, ip, #118784	; 0x1d000
   11e30:	ldr	pc, [ip, #788]!	; 0x314

00011e34 <strrchr@plt>:
   11e34:	add	ip, pc, #0, 12
   11e38:	add	ip, ip, #118784	; 0x1d000
   11e3c:	ldr	pc, [ip, #780]!	; 0x30c

00011e40 <listen@plt>:
   11e40:	add	ip, pc, #0, 12
   11e44:	add	ip, ip, #118784	; 0x1d000
   11e48:	ldr	pc, [ip, #772]!	; 0x304

00011e4c <vfprintf@plt>:
   11e4c:	add	ip, pc, #0, 12
   11e50:	add	ip, ip, #118784	; 0x1d000
   11e54:	ldr	pc, [ip, #764]!	; 0x2fc

00011e58 <fputc@plt>:
   11e58:	add	ip, pc, #0, 12
   11e5c:	add	ip, ip, #118784	; 0x1d000
   11e60:	ldr	pc, [ip, #756]!	; 0x2f4

00011e64 <syslog@plt>:
   11e64:	add	ip, pc, #0, 12
   11e68:	add	ip, ip, #118784	; 0x1d000
   11e6c:	ldr	pc, [ip, #748]!	; 0x2ec

00011e70 <setuid@plt>:
   11e70:	add	ip, pc, #0, 12
   11e74:	add	ip, ip, #118784	; 0x1d000
   11e78:	ldr	pc, [ip, #740]!	; 0x2e4

00011e7c <sprintf@plt>:
   11e7c:	add	ip, pc, #0, 12
   11e80:	add	ip, ip, #118784	; 0x1d000
   11e84:	ldr	pc, [ip, #732]!	; 0x2dc

00011e88 <readdir64@plt>:
   11e88:	add	ip, pc, #0, 12
   11e8c:	add	ip, ip, #118784	; 0x1d000
   11e90:	ldr	pc, [ip, #724]!	; 0x2d4

00011e94 <openlog@plt>:
   11e94:	add	ip, pc, #0, 12
   11e98:	add	ip, ip, #118784	; 0x1d000
   11e9c:	ldr	pc, [ip, #716]!	; 0x2cc

00011ea0 <getsockname@plt>:
   11ea0:	add	ip, pc, #0, 12
   11ea4:	add	ip, ip, #118784	; 0x1d000
   11ea8:	ldr	pc, [ip, #708]!	; 0x2c4

00011eac <flockfile@plt>:
   11eac:	add	ip, pc, #0, 12
   11eb0:	add	ip, ip, #118784	; 0x1d000
   11eb4:	ldr	pc, [ip, #700]!	; 0x2bc

00011eb8 <vsnprintf@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #118784	; 0x1d000
   11ec0:	ldr	pc, [ip, #692]!	; 0x2b4

00011ec4 <fopen64@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #118784	; 0x1d000
   11ecc:	ldr	pc, [ip, #684]!	; 0x2ac

00011ed0 <qsort@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #118784	; 0x1d000
   11ed8:	ldr	pc, [ip, #676]!	; 0x2a4

00011edc <getpeername@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #118784	; 0x1d000
   11ee4:	ldr	pc, [ip, #668]!	; 0x29c

00011ee8 <freeaddrinfo@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #118784	; 0x1d000
   11ef0:	ldr	pc, [ip, #660]!	; 0x294

00011ef4 <getaddrinfo@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #118784	; 0x1d000
   11efc:	ldr	pc, [ip, #652]!	; 0x28c

00011f00 <socket@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #118784	; 0x1d000
   11f08:	ldr	pc, [ip, #644]!	; 0x284

00011f0c <__xstat64@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #118784	; 0x1d000
   11f14:	ldr	pc, [ip, #636]!	; 0x27c

00011f18 <unsetenv@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #118784	; 0x1d000
   11f20:	ldr	pc, [ip, #628]!	; 0x274

00011f24 <strncmp@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #118784	; 0x1d000
   11f2c:	ldr	pc, [ip, #620]!	; 0x26c

00011f30 <abort@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #118784	; 0x1d000
   11f38:	ldr	pc, [ip, #612]!	; 0x264

00011f3c <recv@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #118784	; 0x1d000
   11f44:	ldr	pc, [ip, #604]!	; 0x25c

00011f48 <close@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #118784	; 0x1d000
   11f50:	ldr	pc, [ip, #596]!	; 0x254

00011f54 <closedir@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #118784	; 0x1d000
   11f5c:	ldr	pc, [ip, #588]!	; 0x24c

00011f60 <getgrnam@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #118784	; 0x1d000
   11f68:	ldr	pc, [ip, #580]!	; 0x244

00011f6c <strspn@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #118784	; 0x1d000
   11f74:	ldr	pc, [ip, #572]!	; 0x23c

00011f78 <__assert_fail@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #118784	; 0x1d000
   11f80:	ldr	pc, [ip, #564]!	; 0x234

Disassembly of section .text:

00011f84 <daemon@@Base-0x4784>:
   11f84:	mov	fp, #0
   11f88:	mov	lr, #0
   11f8c:	pop	{r1}		; (ldr r1, [sp], #4)
   11f90:	mov	r2, sp
   11f94:	push	{r2}		; (str r2, [sp, #-4]!)
   11f98:	push	{r0}		; (str r0, [sp, #-4]!)
   11f9c:	ldr	ip, [pc, #16]	; 11fb4 <__assert_fail@plt+0x3c>
   11fa0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa4:	ldr	r0, [pc, #12]	; 11fb8 <__assert_fail@plt+0x40>
   11fa8:	ldr	r3, [pc, #12]	; 11fbc <__assert_fail@plt+0x44>
   11fac:	bl	11cc0 <__libc_start_main@plt>
   11fb0:	bl	11f30 <abort@plt>
   11fb4:	andeq	sp, r1, r8, lsr #6
   11fb8:			; <UNDEFINED> instruction: 0x000155b4
   11fbc:	andeq	sp, r1, r8, asr #5
   11fc0:	ldr	r3, [pc, #20]	; 11fdc <__assert_fail@plt+0x64>
   11fc4:	ldr	r2, [pc, #20]	; 11fe0 <__assert_fail@plt+0x68>
   11fc8:	add	r3, pc, r3
   11fcc:	ldr	r2, [r3, r2]
   11fd0:	cmp	r2, #0
   11fd4:	bxeq	lr
   11fd8:	b	11ce4 <__gmon_start__@plt>
   11fdc:	andeq	sp, r1, r0, lsr r0
   11fe0:			; <UNDEFINED> instruction: 0x000001b8
   11fe4:	ldr	r0, [pc, #24]	; 12004 <__assert_fail@plt+0x8c>
   11fe8:	ldr	r3, [pc, #24]	; 12008 <__assert_fail@plt+0x90>
   11fec:	cmp	r3, r0
   11ff0:	bxeq	lr
   11ff4:	ldr	r3, [pc, #16]	; 1200c <__assert_fail@plt+0x94>
   11ff8:	cmp	r3, #0
   11ffc:	bxeq	lr
   12000:	bx	r3
   12004:	andeq	pc, r2, r8, lsr #7
   12008:	andeq	pc, r2, r8, lsr #7
   1200c:	andeq	r0, r0, r0
   12010:	ldr	r0, [pc, #36]	; 1203c <__assert_fail@plt+0xc4>
   12014:	ldr	r1, [pc, #36]	; 12040 <__assert_fail@plt+0xc8>
   12018:	sub	r1, r1, r0
   1201c:	asr	r1, r1, #2
   12020:	add	r1, r1, r1, lsr #31
   12024:	asrs	r1, r1, #1
   12028:	bxeq	lr
   1202c:	ldr	r3, [pc, #16]	; 12044 <__assert_fail@plt+0xcc>
   12030:	cmp	r3, #0
   12034:	bxeq	lr
   12038:	bx	r3
   1203c:	andeq	pc, r2, r8, lsr #7
   12040:	andeq	pc, r2, r8, lsr #7
   12044:	andeq	r0, r0, r0
   12048:	push	{r4, lr}
   1204c:	ldr	r4, [pc, #24]	; 1206c <__assert_fail@plt+0xf4>
   12050:	ldrb	r3, [r4]
   12054:	cmp	r3, #0
   12058:	popne	{r4, pc}
   1205c:	bl	11fe4 <__assert_fail@plt+0x6c>
   12060:	mov	r3, #1
   12064:	strb	r3, [r4]
   12068:	pop	{r4, pc}
   1206c:			; <UNDEFINED> instruction: 0x0002f3b8
   12070:	b	12010 <__assert_fail@plt+0x98>
   12074:	push	{r4, r5, fp, lr}
   12078:	add	fp, sp, #8
   1207c:	sub	sp, sp, #8
   12080:	sub	sp, sp, #8192	; 0x2000
   12084:	mov	r4, r0
   12088:	ldr	r0, [r1, #12]
   1208c:	mov	r1, r4
   12090:	bl	15044 <__assert_fail@plt+0x30cc>
   12094:	add	r5, sp, #4
   12098:	mov	r0, r4
   1209c:	mov	r1, r5
   120a0:	mov	r2, #8192	; 0x2000
   120a4:	bl	11af8 <read@plt>
   120a8:	cmp	r0, #1
   120ac:	blt	120c8 <__assert_fail@plt+0x150>
   120b0:	mov	r2, r0
   120b4:	mov	r0, r4
   120b8:	mov	r1, r5
   120bc:	bl	11dd4 <write@plt>
   120c0:	cmp	r0, #0
   120c4:	bgt	12098 <__assert_fail@plt+0x120>
   120c8:	mov	r0, #0
   120cc:	bl	11d08 <exit@plt>
   120d0:	push	{r4, r5, r6, sl, fp, lr}
   120d4:	add	fp, sp, #16
   120d8:	sub	sp, sp, #144	; 0x90
   120dc:	sub	sp, sp, #8192	; 0x2000
   120e0:	mov	r4, r0
   120e4:	add	r0, sp, #140	; 0x8c
   120e8:	mov	r5, #128	; 0x80
   120ec:	add	r6, sp, #12
   120f0:	add	r1, sp, #144	; 0x90
   120f4:	mov	r2, #8192	; 0x2000
   120f8:	mov	r3, #0
   120fc:	str	r0, [sp, #4]
   12100:	mov	r0, r4
   12104:	str	r5, [sp, #140]	; 0x8c
   12108:	str	r6, [sp]
   1210c:	bl	11bb8 <recvfrom@plt>
   12110:	cmp	r0, #0
   12114:	bmi	12134 <__assert_fail@plt+0x1bc>
   12118:	mov	r2, r0
   1211c:	add	r1, sp, #144	; 0x90
   12120:	mov	r0, r4
   12124:	mov	r3, #0
   12128:	str	r6, [sp]
   1212c:	str	r5, [sp, #4]
   12130:	bl	11df8 <sendto@plt>
   12134:	sub	sp, fp, #16
   12138:	pop	{r4, r5, r6, sl, fp, pc}
   1213c:	push	{r4, r5, fp, lr}
   12140:	add	fp, sp, #8
   12144:	sub	sp, sp, #8
   12148:	sub	sp, sp, #8192	; 0x2000
   1214c:	mov	r4, r0
   12150:	ldr	r0, [r1, #12]
   12154:	mov	r1, r4
   12158:	bl	15044 <__assert_fail@plt+0x30cc>
   1215c:	add	r5, sp, #4
   12160:	mov	r0, r4
   12164:	mov	r1, r5
   12168:	mov	r2, #8192	; 0x2000
   1216c:	bl	11af8 <read@plt>
   12170:	cmp	r0, #0
   12174:	bgt	12160 <__assert_fail@plt+0x1e8>
   12178:	beq	1218c <__assert_fail@plt+0x214>
   1217c:	bl	11d74 <__errno_location@plt>
   12180:	ldr	r0, [r0]
   12184:	cmp	r0, #4
   12188:	beq	12160 <__assert_fail@plt+0x1e8>
   1218c:	mov	r0, #0
   12190:	bl	11d08 <exit@plt>
   12194:	push	{r4, r5, fp, lr}
   12198:	add	fp, sp, #8
   1219c:	sub	sp, sp, #8192	; 0x2000
   121a0:	mov	r1, sp
   121a4:	mov	r2, #8192	; 0x2000
   121a8:	bl	11af8 <read@plt>
   121ac:	sub	sp, fp, #8
   121b0:	pop	{r4, r5, fp, pc}
   121b4:	push	{r4, r5, fp, lr}
   121b8:	add	fp, sp, #8
   121bc:	sub	sp, sp, #16
   121c0:	mov	r4, r0
   121c4:	add	r0, sp, #8
   121c8:	mov	r1, #0
   121cc:	mov	r5, #0
   121d0:	bl	11c60 <gettimeofday@plt>
   121d4:	cmn	r0, #1
   121d8:	ble	121f4 <__assert_fail@plt+0x27c>
   121dc:	ldr	r0, [sp, #8]
   121e0:	movw	r1, #32384	; 0x7e80
   121e4:	movt	r1, #33706	; 0x83aa
   121e8:	add	r0, r0, r1
   121ec:	rev	r5, r0
   121f0:	b	12208 <__assert_fail@plt+0x290>
   121f4:	movw	r0, #62400	; 0xf3c0
   121f8:	movt	r0, #2
   121fc:	ldrb	r0, [r0]
   12200:	cmp	r0, #0
   12204:	bne	12224 <__assert_fail@plt+0x2ac>
   12208:	add	r1, sp, #4
   1220c:	mov	r0, r4
   12210:	mov	r2, #4
   12214:	str	r5, [sp, #4]
   12218:	bl	11dd4 <write@plt>
   1221c:	sub	sp, fp, #8
   12220:	pop	{r4, r5, fp, pc}
   12224:	movw	r0, #62384	; 0xf3b0
   12228:	mov	r1, #26
   1222c:	mov	r2, #1
   12230:	movt	r0, #2
   12234:	ldr	r3, [r0]
   12238:	movw	r0, #55587	; 0xd923
   1223c:	movt	r0, #1
   12240:	bl	11c48 <fwrite@plt>
   12244:	b	12208 <__assert_fail@plt+0x290>
   12248:	push	{r4, r5, r6, sl, fp, lr}
   1224c:	add	fp, sp, #16
   12250:	sub	sp, sp, #152	; 0x98
   12254:	mov	r4, r0
   12258:	mov	r0, #128	; 0x80
   1225c:	add	r5, sp, #12
   12260:	sub	r1, fp, #28
   12264:	mov	r2, #4
   12268:	mov	r3, #0
   1226c:	str	r0, [sp, #8]
   12270:	add	r0, sp, #8
   12274:	str	r5, [sp]
   12278:	str	r0, [sp, #4]
   1227c:	mov	r0, r4
   12280:	bl	11bb8 <recvfrom@plt>
   12284:	cmp	r0, #0
   12288:	bmi	122f4 <__assert_fail@plt+0x37c>
   1228c:	sub	r0, fp, #24
   12290:	mov	r1, #0
   12294:	mov	r6, #0
   12298:	bl	11c60 <gettimeofday@plt>
   1229c:	cmn	r0, #1
   122a0:	ble	122bc <__assert_fail@plt+0x344>
   122a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122a8:	movw	r1, #32384	; 0x7e80
   122ac:	movt	r1, #33706	; 0x83aa
   122b0:	add	r0, r0, r1
   122b4:	rev	r6, r0
   122b8:	b	122d0 <__assert_fail@plt+0x358>
   122bc:	movw	r0, #62400	; 0xf3c0
   122c0:	movt	r0, #2
   122c4:	ldrb	r0, [r0]
   122c8:	cmp	r0, #0
   122cc:	bne	122fc <__assert_fail@plt+0x384>
   122d0:	mov	r0, #128	; 0x80
   122d4:	sub	r1, fp, #28
   122d8:	mov	r2, #4
   122dc:	mov	r3, #0
   122e0:	str	r6, [fp, #-28]	; 0xffffffe4
   122e4:	str	r5, [sp]
   122e8:	str	r0, [sp, #4]
   122ec:	mov	r0, r4
   122f0:	bl	11df8 <sendto@plt>
   122f4:	sub	sp, fp, #16
   122f8:	pop	{r4, r5, r6, sl, fp, pc}
   122fc:	movw	r0, #62384	; 0xf3b0
   12300:	mov	r1, #26
   12304:	mov	r2, #1
   12308:	movt	r0, #2
   1230c:	ldr	r3, [r0]
   12310:	movw	r0, #55587	; 0xd923
   12314:	movt	r0, #1
   12318:	bl	11c48 <fwrite@plt>
   1231c:	b	122d0 <__assert_fail@plt+0x358>
   12320:	push	{r4, r5, r6, r7, fp, lr}
   12324:	add	fp, sp, #16
   12328:	sub	sp, sp, #264	; 0x108
   1232c:	mov	r4, r0
   12330:	mov	r0, #0
   12334:	bl	11b7c <time@plt>
   12338:	str	r0, [sp, #4]
   1233c:	add	r0, sp, #4
   12340:	bl	11bac <ctime@plt>
   12344:	movw	r1, #55614	; 0xd93e
   12348:	add	r5, sp, #8
   1234c:	mov	r2, r0
   12350:	movt	r1, #1
   12354:	mov	r0, r5
   12358:	bl	11e7c <sprintf@plt>
   1235c:	mov	r0, r5
   12360:	bl	11d2c <strlen@plt>
   12364:	mov	r2, r0
   12368:	mov	r0, r4
   1236c:	mov	r1, r5
   12370:	bl	11dd4 <write@plt>
   12374:	sub	sp, fp, #16
   12378:	pop	{r4, r5, r6, r7, fp, pc}
   1237c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12380:	add	fp, sp, #24
   12384:	sub	sp, sp, #400	; 0x190
   12388:	mov	r4, r0
   1238c:	mov	r0, #0
   12390:	bl	11b7c <time@plt>
   12394:	str	r0, [sp, #140]	; 0x8c
   12398:	add	r0, sp, #8
   1239c:	mov	r6, #128	; 0x80
   123a0:	add	r7, sp, #12
   123a4:	add	r1, sp, #144	; 0x90
   123a8:	mov	r2, #256	; 0x100
   123ac:	mov	r3, #0
   123b0:	str	r0, [sp, #4]
   123b4:	mov	r0, r4
   123b8:	str	r6, [sp, #8]
   123bc:	str	r7, [sp]
   123c0:	bl	11bb8 <recvfrom@plt>
   123c4:	cmp	r0, #0
   123c8:	bmi	12410 <__assert_fail@plt+0x498>
   123cc:	add	r0, sp, #140	; 0x8c
   123d0:	bl	11bac <ctime@plt>
   123d4:	movw	r1, #55614	; 0xd93e
   123d8:	add	r5, sp, #144	; 0x90
   123dc:	mov	r2, r0
   123e0:	movt	r1, #1
   123e4:	mov	r0, r5
   123e8:	bl	11e7c <sprintf@plt>
   123ec:	mov	r0, r5
   123f0:	bl	11d2c <strlen@plt>
   123f4:	mov	r2, r0
   123f8:	mov	r0, r4
   123fc:	mov	r1, r5
   12400:	mov	r3, #0
   12404:	str	r7, [sp]
   12408:	str	r6, [sp, #4]
   1240c:	bl	11df8 <sendto@plt>
   12410:	sub	sp, fp, #24
   12414:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12418:	push	{fp, lr}
   1241c:	mov	fp, sp
   12420:	sub	sp, sp, #80	; 0x50
   12424:	mov	r8, r0
   12428:	ldr	r0, [r1, #12]
   1242c:	mov	r1, r8
   12430:	bl	15044 <__assert_fail@plt+0x30cc>
   12434:	movw	r9, #62964	; 0xf5f4
   12438:	movt	r9, #2
   1243c:	ldr	r0, [r9]
   12440:	cmp	r0, #0
   12444:	bne	1249c <__assert_fail@plt+0x524>
   12448:	movw	r0, #62704	; 0xf4f0
   1244c:	mov	r4, #0
   12450:	movt	r0, #2
   12454:	str	r0, [r9]
   12458:	bl	11cf0 <__ctype_b_loc@plt>
   1245c:	mov	r1, #0
   12460:	b	12474 <__assert_fail@plt+0x4fc>
   12464:	add	r1, r1, #1
   12468:	add	r4, r4, #2
   1246c:	cmp	r1, #129	; 0x81
   12470:	beq	1249c <__assert_fail@plt+0x524>
   12474:	ldr	r2, [r0]
   12478:	add	r2, r2, r4
   1247c:	ldrb	r2, [r2, #1]
   12480:	tst	r2, #64	; 0x40
   12484:	beq	12464 <__assert_fail@plt+0x4ec>
   12488:	ldr	r2, [r9]
   1248c:	add	r3, r2, #1
   12490:	str	r3, [r9]
   12494:	strb	r1, [r2]
   12498:	b	12464 <__assert_fail@plt+0x4ec>
   1249c:	movw	sl, #62704	; 0xf4f0
   124a0:	movw	r0, #2573	; 0xa0d
   124a4:	mov	r6, sp
   124a8:	movt	sl, #2
   124ac:	strh	r0, [sp, #72]	; 0x48
   124b0:	mov	r7, sl
   124b4:	b	124f4 <__assert_fail@plt+0x57c>
   124b8:	mov	r2, r4
   124bc:	bl	11b1c <memmove@plt>
   124c0:	add	r0, r6, r4
   124c4:	rsb	r2, r4, #72	; 0x48
   124c8:	mov	r1, sl
   124cc:	bl	11b64 <memcpy@plt>
   124d0:	add	r7, r7, #1
   124d4:	mov	r0, r8
   124d8:	mov	r1, r6
   124dc:	mov	r2, #74	; 0x4a
   124e0:	cmp	r7, r5
   124e4:	moveq	r7, sl
   124e8:	bl	11dd4 <write@plt>
   124ec:	cmp	r0, #74	; 0x4a
   124f0:	bne	12518 <__assert_fail@plt+0x5a0>
   124f4:	ldr	r5, [r9]
   124f8:	mov	r0, r6
   124fc:	mov	r1, r7
   12500:	sub	r4, r5, r7
   12504:	cmp	r4, #72	; 0x48
   12508:	blt	124b8 <__assert_fail@plt+0x540>
   1250c:	mov	r2, #72	; 0x48
   12510:	bl	11b1c <memmove@plt>
   12514:	b	124d0 <__assert_fail@plt+0x558>
   12518:	mov	r0, #0
   1251c:	bl	11d08 <exit@plt>
   12520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12524:	add	fp, sp, #28
   12528:	sub	sp, sp, #220	; 0xdc
   1252c:	movw	r7, #62964	; 0xf5f4
   12530:	mov	r8, r0
   12534:	movw	r4, #62704	; 0xf4f0
   12538:	movw	r9, #62640	; 0xf4b0
   1253c:	movt	r7, #2
   12540:	movt	r4, #2
   12544:	movt	r9, #2
   12548:	ldr	r0, [r7]
   1254c:	cmp	r0, #0
   12550:	bne	125a4 <__assert_fail@plt+0x62c>
   12554:	str	r4, [r7]
   12558:	mov	r5, #0
   1255c:	bl	11cf0 <__ctype_b_loc@plt>
   12560:	mov	r1, #0
   12564:	b	12578 <__assert_fail@plt+0x600>
   12568:	add	r1, r1, #1
   1256c:	add	r5, r5, #2
   12570:	cmp	r1, #129	; 0x81
   12574:	beq	125a0 <__assert_fail@plt+0x628>
   12578:	ldr	r2, [r0]
   1257c:	add	r2, r2, r5
   12580:	ldrb	r2, [r2, #1]
   12584:	tst	r2, #64	; 0x40
   12588:	beq	12568 <__assert_fail@plt+0x5f0>
   1258c:	ldr	r2, [r7]
   12590:	add	r3, r2, #1
   12594:	str	r3, [r7]
   12598:	strb	r1, [r2]
   1259c:	b	12568 <__assert_fail@plt+0x5f0>
   125a0:	str	r4, [r9]
   125a4:	mov	r0, #128	; 0x80
   125a8:	add	r6, sp, #8
   125ac:	add	sl, sp, #88	; 0x58
   125b0:	mov	r2, #74	; 0x4a
   125b4:	mov	r3, #0
   125b8:	str	r0, [sp, #84]	; 0x54
   125bc:	add	r0, sp, #84	; 0x54
   125c0:	mov	r1, r6
   125c4:	str	sl, [sp]
   125c8:	str	r0, [sp, #4]
   125cc:	mov	r0, r8
   125d0:	bl	11bb8 <recvfrom@plt>
   125d4:	cmp	r0, #0
   125d8:	bmi	12668 <__assert_fail@plt+0x6f0>
   125dc:	ldr	r5, [r9]
   125e0:	ldr	r9, [r7]
   125e4:	sub	r7, r9, r5
   125e8:	cmp	r7, #72	; 0x48
   125ec:	blt	12604 <__assert_fail@plt+0x68c>
   125f0:	add	r0, sp, #8
   125f4:	mov	r1, r5
   125f8:	mov	r2, #72	; 0x48
   125fc:	bl	11b1c <memmove@plt>
   12600:	b	12628 <__assert_fail@plt+0x6b0>
   12604:	mov	r0, r6
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	11b1c <memmove@plt>
   12614:	movw	r1, #62704	; 0xf4f0
   12618:	add	r0, r6, r7
   1261c:	rsb	r2, r7, #72	; 0x48
   12620:	movt	r1, #2
   12624:	bl	11b64 <memcpy@plt>
   12628:	add	r0, r5, #1
   1262c:	add	r1, sp, #8
   12630:	mov	r2, #74	; 0x4a
   12634:	mov	r3, #0
   12638:	str	sl, [sp]
   1263c:	cmp	r0, r9
   12640:	movne	r4, r0
   12644:	movw	r0, #62640	; 0xf4b0
   12648:	movt	r0, #2
   1264c:	str	r4, [r0]
   12650:	movw	r0, #2573	; 0xa0d
   12654:	strh	r0, [sp, #80]	; 0x50
   12658:	mov	r0, #128	; 0x80
   1265c:	str	r0, [sp, #4]
   12660:	mov	r0, r8
   12664:	bl	11df8 <sendto@plt>
   12668:	sub	sp, fp, #28
   1266c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12670:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12674:	add	fp, sp, #24
   12678:	sub	sp, sp, #264	; 0x108
   1267c:	mov	r4, r0
   12680:	mov	r6, #0
   12684:	add	r5, sp, #1
   12688:	movw	r8, #258	; 0x102
   1268c:	mov	r9, #1
   12690:	movw	r7, #9217	; 0x2401
   12694:	sub	r2, r8, r6
   12698:	mov	r0, r4
   1269c:	mov	r1, r5
   126a0:	bl	11af8 <read@plt>
   126a4:	cmp	r0, #0
   126a8:	beq	126f0 <__assert_fail@plt+0x778>
   126ac:	bmi	12854 <__assert_fail@plt+0x8dc>
   126b0:	add	r1, r0, r6
   126b4:	b	126c8 <__assert_fail@plt+0x750>
   126b8:	subs	r0, r0, #1
   126bc:	add	r5, r5, #1
   126c0:	add	r6, r6, #1
   126c4:	beq	126e0 <__assert_fail@plt+0x768>
   126c8:	ldrb	r2, [r5]
   126cc:	cmp	r2, #13
   126d0:	bhi	126b8 <__assert_fail@plt+0x740>
   126d4:	tst	r7, r9, lsl r2
   126d8:	beq	126b8 <__assert_fail@plt+0x740>
   126dc:	b	126f0 <__assert_fail@plt+0x778>
   126e0:	cmp	r1, r8
   126e4:	mov	r6, r1
   126e8:	blt	12694 <__assert_fail@plt+0x71c>
   126ec:	b	126fc <__assert_fail@plt+0x784>
   126f0:	mov	r1, r6
   126f4:	cmn	r6, #1
   126f8:	ble	12854 <__assert_fail@plt+0x8dc>
   126fc:	add	r0, sp, #1
   12700:	mov	r2, #0
   12704:	strb	r2, [r0, r1]
   12708:	movw	r0, #62400	; 0xf3c0
   1270c:	movt	r0, #2
   12710:	ldrb	r0, [r0]
   12714:	cmp	r0, #0
   12718:	bne	12818 <__assert_fail@plt+0x8a0>
   1271c:	movw	r1, #55678	; 0xd97e
   12720:	add	r0, sp, #1
   12724:	movt	r1, #1
   12728:	bl	11c18 <strcasecmp@plt>
   1272c:	movw	r1, #63000	; 0xf618
   12730:	cmp	r0, #0
   12734:	movt	r1, #2
   12738:	ldr	r5, [r1]
   1273c:	beq	127b0 <__assert_fail@plt+0x838>
   12740:	cmp	r5, #0
   12744:	beq	12838 <__assert_fail@plt+0x8c0>
   12748:	add	r6, sp, #1
   1274c:	b	1275c <__assert_fail@plt+0x7e4>
   12750:	ldr	r5, [r5, #220]	; 0xdc
   12754:	cmp	r5, #0
   12758:	beq	12838 <__assert_fail@plt+0x8c0>
   1275c:	ldr	r7, [r5, #64]	; 0x40
   12760:	sub	r0, r7, #1
   12764:	cmp	r0, #1
   12768:	bhi	12750 <__assert_fail@plt+0x7d8>
   1276c:	ldr	r1, [r5, #12]
   12770:	mov	r0, r6
   12774:	bl	11c18 <strcasecmp@plt>
   12778:	cmp	r0, #0
   1277c:	bne	12750 <__assert_fail@plt+0x7d8>
   12780:	cmp	r7, #2
   12784:	bne	1279c <__assert_fail@plt+0x824>
   12788:	movw	r1, #55683	; 0xd983
   1278c:	mov	r0, r4
   12790:	mov	r2, #5
   12794:	movt	r1, #1
   12798:	bl	11dd4 <write@plt>
   1279c:	mov	r0, r4
   127a0:	mov	r1, r5
   127a4:	bl	129d8 <__assert_fail@plt+0xa60>
   127a8:	sub	sp, fp, #24
   127ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   127b0:	cmp	r5, #0
   127b4:	beq	12810 <__assert_fail@plt+0x898>
   127b8:	movw	r6, #55711	; 0xd99f
   127bc:	movt	r6, #1
   127c0:	b	127d0 <__assert_fail@plt+0x858>
   127c4:	ldr	r5, [r5, #220]	; 0xdc
   127c8:	cmp	r5, #0
   127cc:	beq	12810 <__assert_fail@plt+0x898>
   127d0:	ldr	r0, [r5, #64]	; 0x40
   127d4:	sub	r0, r0, #1
   127d8:	cmp	r0, #1
   127dc:	bhi	127c4 <__assert_fail@plt+0x84c>
   127e0:	ldr	r7, [r5, #12]
   127e4:	mov	r0, r7
   127e8:	bl	11d2c <strlen@plt>
   127ec:	mov	r2, r0
   127f0:	mov	r0, r4
   127f4:	mov	r1, r7
   127f8:	bl	11dd4 <write@plt>
   127fc:	mov	r0, r4
   12800:	mov	r1, r6
   12804:	mov	r2, #2
   12808:	bl	11dd4 <write@plt>
   1280c:	b	127c4 <__assert_fail@plt+0x84c>
   12810:	mov	r0, #1
   12814:	bl	11b58 <_exit@plt>
   12818:	movw	r0, #62384	; 0xf3b0
   1281c:	movw	r1, #55652	; 0xd964
   12820:	add	r2, sp, #1
   12824:	movt	r0, #2
   12828:	movt	r1, #1
   1282c:	ldr	r0, [r0]
   12830:	bl	11d5c <fprintf@plt>
   12834:	b	1271c <__assert_fail@plt+0x7a4>
   12838:	movw	r1, #55689	; 0xd989
   1283c:	mov	r0, r4
   12840:	mov	r2, #24
   12844:	movt	r1, #1
   12848:	bl	11dd4 <write@plt>
   1284c:	mov	r0, #1
   12850:	bl	11d08 <exit@plt>
   12854:	movw	r1, #55622	; 0xd946
   12858:	mov	r0, r4
   1285c:	mov	r2, #29
   12860:	movt	r1, #1
   12864:	bl	11dd4 <write@plt>
   12868:	mov	r0, #1
   1286c:	bl	11b58 <_exit@plt>
   12870:	push	{r4, r5, r6, r7, fp, lr}
   12874:	add	fp, sp, #16
   12878:	movw	r6, #61940	; 0xf1f4
   1287c:	mov	r5, r0
   12880:	mov	r4, #0
   12884:	movt	r6, #2
   12888:	ldr	r0, [r6]
   1288c:	cmp	r0, #0
   12890:	beq	128cc <__assert_fail@plt+0x954>
   12894:	ldr	r7, [r5, #16]
   12898:	b	128a8 <__assert_fail@plt+0x930>
   1289c:	ldr	r0, [r6, #16]!
   128a0:	cmp	r0, #0
   128a4:	beq	128cc <__assert_fail@plt+0x954>
   128a8:	ldr	r1, [r6, #4]
   128ac:	cmp	r1, r7
   128b0:	bne	1289c <__assert_fail@plt+0x924>
   128b4:	ldr	r1, [r5, #12]
   128b8:	bl	11ab0 <strcmp@plt>
   128bc:	cmp	r0, #0
   128c0:	bne	1289c <__assert_fail@plt+0x924>
   128c4:	mov	r0, r6
   128c8:	pop	{r4, r5, r6, r7, fp, pc}
   128cc:	mov	r0, r4
   128d0:	pop	{r4, r5, r6, r7, fp, pc}
   128d4:	push	{r4, r5, r6, r7, fp, lr}
   128d8:	add	fp, sp, #16
   128dc:	sub	sp, sp, #144	; 0x90
   128e0:	mov	r6, sp
   128e4:	mov	r4, r1
   128e8:	mov	r5, r0
   128ec:	mov	r1, #0
   128f0:	mov	r2, #140	; 0x8c
   128f4:	mov	r0, r6
   128f8:	bl	11da4 <memset@plt>
   128fc:	orr	r7, r6, #4
   12900:	mov	r0, r7
   12904:	bl	11e10 <sigemptyset@plt>
   12908:	mov	r0, r7
   1290c:	mov	r1, r5
   12910:	bl	11cb4 <sigaddset@plt>
   12914:	mov	r0, #268435456	; 0x10000000
   12918:	mov	r1, r6
   1291c:	mov	r2, #0
   12920:	str	r0, [sp, #132]	; 0x84
   12924:	mov	r0, r5
   12928:	str	r4, [sp]
   1292c:	bl	11c3c <sigaction@plt>
   12930:	sub	sp, fp, #16
   12934:	pop	{r4, r5, r6, r7, fp, pc}
   12938:	push	{r4, r5, fp, lr}
   1293c:	add	fp, sp, #8
   12940:	sub	sp, sp, #128	; 0x80
   12944:	mov	r5, sp
   12948:	mov	r4, r0
   1294c:	mov	r0, r5
   12950:	bl	11e10 <sigemptyset@plt>
   12954:	mov	r0, r5
   12958:	mov	r1, #17
   1295c:	bl	11cb4 <sigaddset@plt>
   12960:	mov	r0, r5
   12964:	mov	r1, #1
   12968:	bl	11cb4 <sigaddset@plt>
   1296c:	mov	r0, r5
   12970:	mov	r1, #14
   12974:	bl	11cb4 <sigaddset@plt>
   12978:	mov	r0, #0
   1297c:	mov	r1, r5
   12980:	mov	r2, r4
   12984:	bl	11b10 <sigprocmask@plt>
   12988:	sub	sp, fp, #8
   1298c:	pop	{r4, r5, fp, pc}
   12990:	cmp	r0, #0
   12994:	beq	129a8 <__assert_fail@plt+0xa30>
   12998:	mov	r1, r0
   1299c:	mov	r0, #2
   129a0:	mov	r2, #0
   129a4:	b	11b10 <sigprocmask@plt>
   129a8:	push	{r4, sl, fp, lr}
   129ac:	add	fp, sp, #8
   129b0:	sub	sp, sp, #128	; 0x80
   129b4:	mov	r4, sp
   129b8:	mov	r0, r4
   129bc:	bl	11e10 <sigemptyset@plt>
   129c0:	mov	r0, #2
   129c4:	mov	r1, r4
   129c8:	mov	r2, #0
   129cc:	bl	11b10 <sigprocmask@plt>
   129d0:	sub	sp, fp, #8
   129d4:	pop	{r4, sl, fp, pc}
   129d8:	push	{r4, r5, r6, sl, fp, lr}
   129dc:	add	fp, sp, #16
   129e0:	sub	sp, sp, #56	; 0x38
   129e4:	mov	r5, r0
   129e8:	ldr	r0, [r1, #44]	; 0x2c
   129ec:	mov	r4, r1
   129f0:	cmp	r0, #0
   129f4:	beq	12a10 <__assert_fail@plt+0xa98>
   129f8:	ldr	r2, [r0, #12]
   129fc:	mov	r0, r5
   12a00:	mov	r1, r4
   12a04:	sub	sp, fp, #16
   12a08:	pop	{r4, r5, r6, sl, fp, lr}
   12a0c:	bx	r2
   12a10:	movw	r0, #62400	; 0xf3c0
   12a14:	movt	r0, #2
   12a18:	ldrb	r0, [r0]
   12a1c:	cmp	r0, #0
   12a20:	beq	12a4c <__assert_fail@plt+0xad4>
   12a24:	movw	r0, #62384	; 0xf3b0
   12a28:	movt	r0, #2
   12a2c:	ldr	r6, [r0]
   12a30:	bl	11cfc <getpid@plt>
   12a34:	ldr	r3, [r4, #48]	; 0x30
   12a38:	movw	r1, #54289	; 0xd411
   12a3c:	mov	r2, r0
   12a40:	mov	r0, r6
   12a44:	movt	r1, #1
   12a48:	bl	11d5c <fprintf@plt>
   12a4c:	mov	r0, r5
   12a50:	mov	r1, #0
   12a54:	mov	r6, #0
   12a58:	bl	11be8 <dup2@plt>
   12a5c:	mov	r0, r5
   12a60:	bl	11f48 <close@plt>
   12a64:	mov	r0, #0
   12a68:	mov	r1, #1
   12a6c:	bl	11be8 <dup2@plt>
   12a70:	mov	r0, #0
   12a74:	mov	r1, #2
   12a78:	bl	11be8 <dup2@plt>
   12a7c:	ldr	r0, [r4, #36]	; 0x24
   12a80:	bl	11aa4 <getpwnam@plt>
   12a84:	cmp	r0, #0
   12a88:	bne	12ad4 <__assert_fail@plt+0xb5c>
   12a8c:	ldr	r2, [r4, #12]
   12a90:	ldr	r3, [r4, #20]
   12a94:	ldr	r0, [r4, #36]	; 0x24
   12a98:	movw	r1, #54302	; 0xd41e
   12a9c:	movt	r1, #1
   12aa0:	str	r0, [sp]
   12aa4:	mov	r0, #3
   12aa8:	bl	11e64 <syslog@plt>
   12aac:	ldr	r0, [r4, #16]
   12ab0:	cmp	r0, #1
   12ab4:	beq	12acc <__assert_fail@plt+0xb54>
   12ab8:	add	r1, sp, #6
   12abc:	mov	r0, #0
   12ac0:	mov	r2, #50	; 0x32
   12ac4:	mov	r3, #0
   12ac8:	bl	11f3c <recv@plt>
   12acc:	mov	r0, #1
   12ad0:	bl	11b58 <_exit@plt>
   12ad4:	mov	r5, r0
   12ad8:	ldr	r0, [r4, #40]	; 0x28
   12adc:	cmp	r0, #0
   12ae0:	beq	12b18 <__assert_fail@plt+0xba0>
   12ae4:	ldrb	r1, [r0]
   12ae8:	cmp	r1, #0
   12aec:	beq	12b18 <__assert_fail@plt+0xba0>
   12af0:	bl	11f60 <getgrnam@plt>
   12af4:	mov	r6, r0
   12af8:	cmp	r0, #0
   12afc:	bne	12b18 <__assert_fail@plt+0xba0>
   12b00:	ldr	r0, [r4, #40]	; 0x28
   12b04:	ldr	r2, [r4, #12]
   12b08:	ldr	r3, [r4, #20]
   12b0c:	movw	r1, #54326	; 0xd436
   12b10:	movt	r1, #1
   12b14:	b	12aa0 <__assert_fail@plt+0xb28>
   12b18:	ldr	r0, [r5, #8]
   12b1c:	cmp	r0, #0
   12b20:	bne	12b6c <__assert_fail@plt+0xbf4>
   12b24:	ldr	r0, [r4, #48]	; 0x30
   12b28:	ldr	r1, [r4, #52]	; 0x34
   12b2c:	bl	11d68 <execv@plt>
   12b30:	ldr	r0, [r4, #16]
   12b34:	cmp	r0, #1
   12b38:	beq	12b50 <__assert_fail@plt+0xbd8>
   12b3c:	add	r1, sp, #6
   12b40:	mov	r0, #0
   12b44:	mov	r2, #50	; 0x32
   12b48:	mov	r3, #0
   12b4c:	bl	11f3c <recv@plt>
   12b50:	ldr	r2, [r4, #48]	; 0x30
   12b54:	movw	r1, #54401	; 0xd481
   12b58:	mov	r0, #3
   12b5c:	movt	r1, #1
   12b60:	bl	11e64 <syslog@plt>
   12b64:	mov	r0, #1
   12b68:	bl	11b58 <_exit@plt>
   12b6c:	cmp	r6, #0
   12b70:	beq	12b80 <__assert_fail@plt+0xc08>
   12b74:	ldr	r0, [r6, #8]
   12b78:	cmp	r0, #0
   12b7c:	bne	12bac <__assert_fail@plt+0xc34>
   12b80:	ldr	r0, [r5, #12]
   12b84:	bl	11c9c <setgid@plt>
   12b88:	cmn	r0, #1
   12b8c:	bgt	12b98 <__assert_fail@plt+0xc20>
   12b90:	ldr	r3, [r5, #12]
   12b94:	b	12bbc <__assert_fail@plt+0xc44>
   12b98:	ldr	r0, [r5]
   12b9c:	cmp	r6, #0
   12ba0:	bne	12bd0 <__assert_fail@plt+0xc58>
   12ba4:	ldr	r1, [r5, #12]
   12ba8:	b	12bdc <__assert_fail@plt+0xc64>
   12bac:	bl	11c9c <setgid@plt>
   12bb0:	cmp	r0, #0
   12bb4:	bpl	12bcc <__assert_fail@plt+0xc54>
   12bb8:	ldr	r3, [r6, #8]
   12bbc:	ldr	r2, [r4, #12]
   12bc0:	movw	r1, #54351	; 0xd44f
   12bc4:	movt	r1, #1
   12bc8:	b	12c00 <__assert_fail@plt+0xc88>
   12bcc:	ldr	r0, [r5]
   12bd0:	ldr	r1, [r6, #8]
   12bd4:	cmp	r1, #0
   12bd8:	ldreq	r1, [r5, #12]
   12bdc:	bl	11c00 <initgroups@plt>
   12be0:	ldr	r0, [r5, #8]
   12be4:	bl	11e70 <setuid@plt>
   12be8:	cmn	r0, #1
   12bec:	bgt	12b24 <__assert_fail@plt+0xbac>
   12bf0:	ldr	r3, [r5, #8]
   12bf4:	ldr	r2, [r4, #12]
   12bf8:	movw	r1, #54376	; 0xd468
   12bfc:	movt	r1, #1
   12c00:	mov	r0, #3
   12c04:	bl	11e64 <syslog@plt>
   12c08:	mov	r0, #1
   12c0c:	bl	11b58 <_exit@plt>
   12c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c14:	add	fp, sp, #28
   12c18:	sub	sp, sp, #4
   12c1c:	mov	r0, sp
   12c20:	mov	r1, #1
   12c24:	mov	r2, #0
   12c28:	mov	r6, #1
   12c2c:	bl	11dc8 <wait3@plt>
   12c30:	cmp	r0, #1
   12c34:	blt	12d54 <__assert_fail@plt+0xddc>
   12c38:	movw	r4, #62400	; 0xf3c0
   12c3c:	movw	r9, #62836	; 0xf574
   12c40:	movw	r8, #62968	; 0xf5f8
   12c44:	movw	r7, #54446	; 0xd4ae
   12c48:	mov	r5, r0
   12c4c:	movt	r4, #2
   12c50:	movt	r9, #2
   12c54:	movt	r8, #2
   12c58:	movt	r7, #1
   12c5c:	b	12c7c <__assert_fail@plt+0xd04>
   12c60:	mov	r0, sp
   12c64:	mov	r1, #1
   12c68:	mov	r2, #0
   12c6c:	bl	11dc8 <wait3@plt>
   12c70:	mov	r5, r0
   12c74:	cmp	r0, #1
   12c78:	blt	12d54 <__assert_fail@plt+0xddc>
   12c7c:	ldrb	r0, [r4]
   12c80:	cmp	r0, #0
   12c84:	bne	12d30 <__assert_fail@plt+0xdb8>
   12c88:	movw	r0, #63000	; 0xf618
   12c8c:	movt	r0, #2
   12c90:	ldr	sl, [r0]
   12c94:	b	12cd8 <__assert_fail@plt+0xd60>
   12c98:	ldrb	r0, [r4]
   12c9c:	cmp	r0, #0
   12ca0:	bne	12d0c <__assert_fail@plt+0xd94>
   12ca4:	ldr	r0, [sl, #60]	; 0x3c
   12ca8:	asr	r1, r0, #31
   12cac:	add	r1, r0, r1, lsr #27
   12cb0:	and	r0, r0, #31
   12cb4:	asr	r1, r1, #5
   12cb8:	ldr	r2, [r9, r1, lsl #2]
   12cbc:	orr	r0, r2, r6, lsl r0
   12cc0:	str	r0, [r9, r1, lsl #2]
   12cc4:	ldr	r0, [r8]
   12cc8:	add	r0, r0, #1
   12ccc:	str	r0, [r8]
   12cd0:	str	r6, [sl, #24]
   12cd4:	ldr	sl, [sl, #220]	; 0xdc
   12cd8:	cmp	sl, #0
   12cdc:	beq	12c60 <__assert_fail@plt+0xce8>
   12ce0:	ldr	r0, [sl, #24]
   12ce4:	cmp	r0, r5
   12ce8:	bne	12cd4 <__assert_fail@plt+0xd5c>
   12cec:	ldr	r3, [sp]
   12cf0:	cmp	r3, #0
   12cf4:	beq	12c98 <__assert_fail@plt+0xd20>
   12cf8:	ldr	r2, [sl, #48]	; 0x30
   12cfc:	mov	r0, #4
   12d00:	mov	r1, r7
   12d04:	bl	11e64 <syslog@plt>
   12d08:	b	12c98 <__assert_fail@plt+0xd20>
   12d0c:	movw	r0, #62384	; 0xf3b0
   12d10:	ldr	r2, [sl, #12]
   12d14:	ldr	r3, [sl, #60]	; 0x3c
   12d18:	movw	r1, #54467	; 0xd4c3
   12d1c:	movt	r0, #2
   12d20:	movt	r1, #1
   12d24:	ldr	r0, [r0]
   12d28:	bl	11d5c <fprintf@plt>
   12d2c:	b	12ca4 <__assert_fail@plt+0xd2c>
   12d30:	movw	r0, #62384	; 0xf3b0
   12d34:	ldr	r3, [sp]
   12d38:	movw	r1, #54423	; 0xd497
   12d3c:	mov	r2, r5
   12d40:	movt	r0, #2
   12d44:	movt	r1, #1
   12d48:	ldr	r0, [r0]
   12d4c:	bl	11d5c <fprintf@plt>
   12d50:	b	12c88 <__assert_fail@plt+0xd10>
   12d54:	sub	sp, fp, #28
   12d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d5c:	push	{fp, lr}
   12d60:	mov	fp, sp
   12d64:	movw	r1, #55713	; 0xd9a1
   12d68:	cmp	r0, #0
   12d6c:	movt	r1, #1
   12d70:	moveq	r0, r1
   12d74:	bl	11bc4 <strdup@plt>
   12d78:	cmp	r0, #0
   12d7c:	popne	{fp, pc}
   12d80:	movw	r1, #54487	; 0xd4d7
   12d84:	mov	r0, #3
   12d88:	movt	r1, #1
   12d8c:	bl	11e64 <syslog@plt>
   12d90:	mvn	r0, #0
   12d94:	bl	11d08 <exit@plt>
   12d98:	push	{r4, r5, r6, sl, fp, lr}
   12d9c:	add	fp, sp, #16
   12da0:	mov	r4, r0
   12da4:	mov	r0, r1
   12da8:	mov	r5, r1
   12dac:	bl	18134 <argp_parse@@Base+0x1a10>
   12db0:	cmp	r0, #0
   12db4:	beq	12dd0 <__assert_fail@plt+0xe58>
   12db8:	ldr	r1, [r4]
   12dbc:	mov	r2, r5
   12dc0:	mov	r6, r0
   12dc4:	bl	11b64 <memcpy@plt>
   12dc8:	str	r6, [r4]
   12dcc:	pop	{r4, r5, r6, sl, fp, pc}
   12dd0:	movw	r1, #54498	; 0xd4e2
   12dd4:	mov	r0, #3
   12dd8:	movt	r1, #1
   12ddc:	bl	11e64 <syslog@plt>
   12de0:	mvn	r0, #0
   12de4:	bl	11d08 <exit@plt>
   12de8:	push	{r4, r5, r6, sl, fp, lr}
   12dec:	add	fp, sp, #16
   12df0:	mov	r4, r0
   12df4:	ldr	r0, [r0]
   12df8:	cmp	r0, #0
   12dfc:	beq	12e2c <__assert_fail@plt+0xeb4>
   12e00:	bl	11d2c <strlen@plt>
   12e04:	add	r5, r0, #1
   12e08:	mov	r0, r5
   12e0c:	bl	18134 <argp_parse@@Base+0x1a10>
   12e10:	cmp	r0, #0
   12e14:	beq	12e30 <__assert_fail@plt+0xeb8>
   12e18:	ldr	r1, [r4]
   12e1c:	mov	r2, r5
   12e20:	mov	r6, r0
   12e24:	bl	11b64 <memcpy@plt>
   12e28:	str	r6, [r4]
   12e2c:	pop	{r4, r5, r6, sl, fp, pc}
   12e30:	movw	r1, #54498	; 0xd4e2
   12e34:	mov	r0, #3
   12e38:	movt	r1, #1
   12e3c:	bl	11e64 <syslog@plt>
   12e40:	mvn	r0, #0
   12e44:	bl	11d08 <exit@plt>
   12e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e4c:	add	fp, sp, #28
   12e50:	sub	sp, sp, #44	; 0x2c
   12e54:	mov	ip, r0
   12e58:	movw	r0, #62384	; 0xf3b0
   12e5c:	ldr	r4, [r1, #64]	; 0x40
   12e60:	ldm	r1, {r2, r3}
   12e64:	movt	r0, #2
   12e68:	ldr	r0, [r0]
   12e6c:	sub	r7, r4, #1
   12e70:	cmp	r7, #1
   12e74:	bhi	12e94 <__assert_fail@plt+0xf1c>
   12e78:	movw	r5, #54592	; 0xd540
   12e7c:	movw	lr, #55430	; 0xd886
   12e80:	cmp	r4, #2
   12e84:	movt	r5, #1
   12e88:	movt	lr, #1
   12e8c:	moveq	lr, r5
   12e90:	b	12ea8 <__assert_fail@plt+0xf30>
   12e94:	ldr	r4, [r1, #8]
   12e98:	movw	lr, #54603	; 0xd54b
   12e9c:	movt	lr, #1
   12ea0:	cmp	r4, #0
   12ea4:	movne	lr, r4
   12ea8:	ldr	r4, [r1, #44]	; 0x2c
   12eac:	ldr	r8, [r1, #36]	; 0x24
   12eb0:	ldr	r9, [r1, #40]	; 0x28
   12eb4:	ldr	r6, [r1, #12]
   12eb8:	ldr	r7, [r1, #20]
   12ebc:	ldr	sl, [r1, #24]
   12ec0:	ldr	r5, [r1, #28]
   12ec4:	cmp	r4, #0
   12ec8:	beq	12ed4 <__assert_fail@plt+0xf5c>
   12ecc:	ldr	r4, [r4]
   12ed0:	b	12edc <__assert_fail@plt+0xf64>
   12ed4:	movw	r4, #54605	; 0xd54d
   12ed8:	movt	r4, #1
   12edc:	ldr	r1, [r1, #48]	; 0x30
   12ee0:	str	r4, [sp, #32]
   12ee4:	str	r1, [sp, #36]	; 0x24
   12ee8:	add	r1, sp, #8
   12eec:	stm	sp, {ip, lr}
   12ef0:	stm	r1, {r6, r7, sl}
   12ef4:	add	r1, sp, #20
   12ef8:	stm	r1, {r5, r8, r9}
   12efc:	movw	r1, #54509	; 0xd4ed
   12f00:	movt	r1, #1
   12f04:	bl	11d5c <fprintf@plt>
   12f08:	sub	sp, fp, #28
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f14:	add	fp, sp, #28
   12f18:	sub	sp, sp, #20
   12f1c:	movw	r7, #54683	; 0xd59b
   12f20:	mov	r4, r0
   12f24:	mov	r0, #1
   12f28:	mov	r8, #2
   12f2c:	mov	sl, #4
   12f30:	add	r9, sp, #12
   12f34:	add	r6, sp, #16
   12f38:	movt	r7, #1
   12f3c:	add	r5, r4, #72	; 0x48
   12f40:	str	r0, [sp, #16]
   12f44:	b	12f8c <__assert_fail@plt+0x1014>
   12f48:	ldrb	r1, [r4, #70]	; 0x46
   12f4c:	cmp	r1, #0
   12f50:	beq	130c0 <__assert_fail@plt+0x1148>
   12f54:	strh	r8, [r4, #68]	; 0x44
   12f58:	ldr	r0, [r4, #60]	; 0x3c
   12f5c:	bl	11f48 <close@plt>
   12f60:	b	12f8c <__assert_fail@plt+0x1014>
   12f64:	bl	11d74 <__errno_location@plt>
   12f68:	ldr	r0, [r0]
   12f6c:	cmp	r0, #97	; 0x61
   12f70:	ldrheq	r1, [r4, #68]	; 0x44
   12f74:	cmpeq	r1, #10
   12f78:	bne	13100 <__assert_fail@plt+0x1188>
   12f7c:	ldrb	r1, [r4, #70]	; 0x46
   12f80:	cmp	r1, #0
   12f84:	beq	13100 <__assert_fail@plt+0x1188>
   12f88:	strh	r8, [r4, #68]	; 0x44
   12f8c:	ldr	r1, [r4, #16]
   12f90:	ldrh	r0, [r4, #68]	; 0x44
   12f94:	mov	r2, #0
   12f98:	bl	11f00 <socket@plt>
   12f9c:	cmn	r0, #1
   12fa0:	str	r0, [r4, #60]	; 0x3c
   12fa4:	ble	12f64 <__assert_fail@plt+0xfec>
   12fa8:	ldrh	r1, [r4, #68]	; 0x44
   12fac:	cmp	r1, #10
   12fb0:	bne	12ff0 <__assert_fail@plt+0x1078>
   12fb4:	ldrb	r1, [r4, #70]	; 0x46
   12fb8:	mov	r2, #26
   12fbc:	mov	r3, r9
   12fc0:	str	sl, [sp]
   12fc4:	clz	r1, r1
   12fc8:	lsr	r1, r1, #5
   12fcc:	str	r1, [sp, #12]
   12fd0:	mov	r1, #41	; 0x29
   12fd4:	bl	11ac8 <setsockopt@plt>
   12fd8:	cmn	r0, #1
   12fdc:	bgt	12ff0 <__assert_fail@plt+0x1078>
   12fe0:	movw	r1, #54654	; 0xd57e
   12fe4:	mov	r0, #3
   12fe8:	movt	r1, #1
   12fec:	bl	11e64 <syslog@plt>
   12ff0:	ldr	r0, [r4, #20]
   12ff4:	mov	r1, r7
   12ff8:	mov	r2, #3
   12ffc:	bl	11f24 <strncmp@plt>
   13000:	cmp	r0, #0
   13004:	bne	1305c <__assert_fail@plt+0x10e4>
   13008:	movw	r0, #62972	; 0xf5fc
   1300c:	movt	r0, #2
   13010:	ldrb	r0, [r0]
   13014:	tst	r0, #1
   13018:	beq	1305c <__assert_fail@plt+0x10e4>
   1301c:	ldr	r0, [r4, #60]	; 0x3c
   13020:	mov	r1, #1
   13024:	mov	r2, #1
   13028:	mov	r3, r6
   1302c:	str	sl, [sp]
   13030:	bl	11ac8 <setsockopt@plt>
   13034:	cmn	r0, #1
   13038:	bgt	1305c <__assert_fail@plt+0x10e4>
   1303c:	bl	11d74 <__errno_location@plt>
   13040:	ldr	r0, [r0]
   13044:	cmp	r0, #13
   13048:	beq	1305c <__assert_fail@plt+0x10e4>
   1304c:	movw	r1, #54687	; 0xd59f
   13050:	mov	r0, #3
   13054:	movt	r1, #1
   13058:	bl	11e64 <syslog@plt>
   1305c:	ldr	r0, [r4, #60]	; 0x3c
   13060:	mov	r1, #1
   13064:	mov	r2, #2
   13068:	mov	r3, r6
   1306c:	str	sl, [sp]
   13070:	bl	11ac8 <setsockopt@plt>
   13074:	cmn	r0, #1
   13078:	bgt	1308c <__assert_fail@plt+0x1114>
   1307c:	movw	r1, #54713	; 0xd5b9
   13080:	mov	r0, #3
   13084:	movt	r1, #1
   13088:	bl	11e64 <syslog@plt>
   1308c:	ldr	r0, [r4, #60]	; 0x3c
   13090:	ldr	r2, [r4, #200]	; 0xc8
   13094:	mov	r1, r5
   13098:	bl	11d98 <bind@plt>
   1309c:	cmn	r0, #1
   130a0:	bgt	13198 <__assert_fail@plt+0x1220>
   130a4:	bl	11d74 <__errno_location@plt>
   130a8:	ldr	r0, [r0]
   130ac:	orr	r1, r0, #2
   130b0:	cmp	r1, #99	; 0x63
   130b4:	ldrheq	r1, [r4, #68]	; 0x44
   130b8:	cmpeq	r1, #10
   130bc:	beq	12f48 <__assert_fail@plt+0xfd0>
   130c0:	movw	r1, #62400	; 0xf3c0
   130c4:	ldr	r5, [r4, #8]
   130c8:	movt	r1, #2
   130cc:	ldrb	r1, [r1]
   130d0:	cmp	r5, #0
   130d4:	beq	13134 <__assert_fail@plt+0x11bc>
   130d8:	cmp	r1, #0
   130dc:	bne	131a0 <__assert_fail@plt+0x1228>
   130e0:	ldr	r0, [r4, #20]
   130e4:	ldr	r3, [r4, #12]
   130e8:	movw	r1, #54773	; 0xd5f5
   130ec:	mov	r2, r5
   130f0:	movt	r1, #1
   130f4:	str	r0, [sp]
   130f8:	mov	r0, #3
   130fc:	b	13150 <__assert_fail@plt+0x11d8>
   13100:	movw	r1, #62400	; 0xf3c0
   13104:	movt	r1, #2
   13108:	ldrb	r1, [r1]
   1310c:	cmp	r1, #0
   13110:	bne	131e0 <__assert_fail@plt+0x1268>
   13114:	ldr	r2, [r4, #12]
   13118:	ldr	r3, [r4, #20]
   1311c:	movw	r1, #54636	; 0xd56c
   13120:	mov	r0, #3
   13124:	movt	r1, #1
   13128:	bl	11e64 <syslog@plt>
   1312c:	mov	r4, #1
   13130:	b	1318c <__assert_fail@plt+0x1214>
   13134:	cmp	r1, #0
   13138:	bne	13218 <__assert_fail@plt+0x12a0>
   1313c:	ldr	r2, [r4, #12]
   13140:	ldr	r3, [r4, #20]
   13144:	movw	r1, #54776	; 0xd5f8
   13148:	mov	r0, #3
   1314c:	movt	r1, #1
   13150:	bl	11e64 <syslog@plt>
   13154:	ldr	r0, [r4, #60]	; 0x3c
   13158:	bl	11f48 <close@plt>
   1315c:	mvn	r0, #0
   13160:	str	r0, [r4, #60]	; 0x3c
   13164:	movw	r0, #62988	; 0xf60c
   13168:	mov	r4, #1
   1316c:	movt	r0, #2
   13170:	ldr	r1, [r0]
   13174:	cmp	r1, #0
   13178:	bne	1318c <__assert_fail@plt+0x1214>
   1317c:	mov	r4, #1
   13180:	str	r4, [r0]
   13184:	mov	r0, #600	; 0x258
   13188:	bl	11bd0 <alarm@plt>
   1318c:	mov	r0, r4
   13190:	sub	sp, fp, #28
   13194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13198:	mov	r4, #0
   1319c:	b	1318c <__assert_fail@plt+0x1214>
   131a0:	movw	r1, #62384	; 0xf3b0
   131a4:	ldr	r8, [r4, #12]
   131a8:	ldr	r7, [r4, #20]
   131ac:	movt	r1, #2
   131b0:	ldr	r6, [r1]
   131b4:	bl	11ccc <strerror@plt>
   131b8:	movw	r1, #54743	; 0xd5d7
   131bc:	str	r0, [sp, #4]
   131c0:	mov	r0, r6
   131c4:	mov	r2, r5
   131c8:	mov	r3, r8
   131cc:	str	r7, [sp]
   131d0:	movt	r1, #1
   131d4:	bl	11d5c <fprintf@plt>
   131d8:	ldr	r5, [r4, #8]
   131dc:	b	130e0 <__assert_fail@plt+0x1168>
   131e0:	movw	r1, #62384	; 0xf3b0
   131e4:	ldr	r5, [r4, #12]
   131e8:	ldr	r6, [r4, #20]
   131ec:	movt	r1, #2
   131f0:	ldr	r7, [r1]
   131f4:	bl	11ccc <strerror@plt>
   131f8:	movw	r1, #54608	; 0xd550
   131fc:	str	r0, [sp]
   13200:	mov	r0, r7
   13204:	mov	r2, r5
   13208:	mov	r3, r6
   1320c:	movt	r1, #1
   13210:	bl	11d5c <fprintf@plt>
   13214:	b	13114 <__assert_fail@plt+0x119c>
   13218:	movw	r1, #62384	; 0xf3b0
   1321c:	ldr	r5, [r4, #12]
   13220:	ldr	r6, [r4, #20]
   13224:	movt	r1, #2
   13228:	ldr	r7, [r1]
   1322c:	bl	11ccc <strerror@plt>
   13230:	movw	r1, #54792	; 0xd608
   13234:	str	r0, [sp]
   13238:	mov	r0, r7
   1323c:	mov	r2, r5
   13240:	mov	r3, r6
   13244:	movt	r1, #1
   13248:	bl	11d5c <fprintf@plt>
   1324c:	b	1313c <__assert_fail@plt+0x11c4>
   13250:	push	{r4, sl, fp, lr}
   13254:	add	fp, sp, #8
   13258:	mov	r4, r0
   1325c:	mov	r0, #1
   13260:	strh	r0, [r4, #32]
   13264:	ldr	r0, [r4, #60]	; 0x3c
   13268:	cmn	r0, #1
   1326c:	beq	13274 <__assert_fail@plt+0x12fc>
   13270:	pop	{r4, sl, fp, pc}
   13274:	mov	r0, r4
   13278:	bl	12f10 <__assert_fail@plt+0xf98>
   1327c:	cmp	r0, #0
   13280:	popne	{r4, sl, fp, pc}
   13284:	ldr	r0, [r4, #16]
   13288:	cmp	r0, #1
   1328c:	bne	1329c <__assert_fail@plt+0x1324>
   13290:	ldr	r0, [r4, #60]	; 0x3c
   13294:	mov	r1, #10
   13298:	bl	11e40 <listen@plt>
   1329c:	ldr	r3, [r4, #60]	; 0x3c
   132a0:	movw	ip, #62836	; 0xf574
   132a4:	mov	r2, #1
   132a8:	movt	ip, #2
   132ac:	asr	r0, r3, #31
   132b0:	and	r1, r3, #31
   132b4:	add	r0, r3, r0, lsr #27
   132b8:	asr	r0, r0, #5
   132bc:	ldr	lr, [ip, r0, lsl #2]
   132c0:	orr	r1, lr, r2, lsl r1
   132c4:	str	r1, [ip, r0, lsl #2]
   132c8:	movw	r0, #62968	; 0xf5f8
   132cc:	movt	r0, #2
   132d0:	ldr	r1, [r0]
   132d4:	add	r1, r1, #1
   132d8:	str	r1, [r0]
   132dc:	movw	r0, #62832	; 0xf570
   132e0:	movt	r0, #2
   132e4:	ldr	r1, [r0]
   132e8:	cmp	r3, r1
   132ec:	strgt	r3, [r0]
   132f0:	movw	r0, #62400	; 0xf3c0
   132f4:	movt	r0, #2
   132f8:	ldrb	r0, [r0]
   132fc:	cmp	r0, #0
   13300:	beq	13270 <__assert_fail@plt+0x12f8>
   13304:	movw	r0, #62384	; 0xf3b0
   13308:	ldr	r2, [r4, #48]	; 0x30
   1330c:	movw	r1, #54819	; 0xd623
   13310:	movt	r0, #2
   13314:	movt	r1, #1
   13318:	ldr	r0, [r0]
   1331c:	pop	{r4, sl, fp, lr}
   13320:	b	11d5c <fprintf@plt>
   13324:	push	{r4, sl, fp, lr}
   13328:	add	fp, sp, #8
   1332c:	movw	r0, #62988	; 0xf60c
   13330:	mov	r1, #0
   13334:	movt	r0, #2
   13338:	str	r1, [r0]
   1333c:	movw	r0, #63000	; 0xf618
   13340:	movt	r0, #2
   13344:	ldr	r4, [r0]
   13348:	cmp	r4, #0
   1334c:	bne	13360 <__assert_fail@plt+0x13e8>
   13350:	b	13384 <__assert_fail@plt+0x140c>
   13354:	ldr	r4, [r4, #220]	; 0xdc
   13358:	cmp	r4, #0
   1335c:	beq	13384 <__assert_fail@plt+0x140c>
   13360:	ldr	r0, [r4, #60]	; 0x3c
   13364:	cmn	r0, #1
   13368:	bne	13354 <__assert_fail@plt+0x13dc>
   1336c:	ldr	r0, [r4, #64]	; 0x40
   13370:	sub	r0, r0, #1
   13374:	cmp	r0, #2
   13378:	movcs	r0, r4
   1337c:	blcs	12f10 <__assert_fail@plt+0xf98>
   13380:	b	13354 <__assert_fail@plt+0x13dc>
   13384:	pop	{r4, sl, fp, pc}
   13388:	push	{r4, sl, fp, lr}
   1338c:	add	fp, sp, #8
   13390:	mov	r4, r0
   13394:	ldr	r0, [r0, #60]	; 0x3c
   13398:	cmp	r0, #0
   1339c:	bmi	133e0 <__assert_fail@plt+0x1468>
   133a0:	movw	r1, #62968	; 0xf5f8
   133a4:	movw	ip, #62836	; 0xf574
   133a8:	mov	r3, #1
   133ac:	movt	r1, #2
   133b0:	movt	ip, #2
   133b4:	ldr	r2, [r1]
   133b8:	sub	r2, r2, #1
   133bc:	str	r2, [r1]
   133c0:	lsr	r1, r0, #5
   133c4:	and	r2, r0, #31
   133c8:	ldr	lr, [ip, r1, lsl #2]
   133cc:	bic	r2, lr, r3, lsl r2
   133d0:	str	r2, [ip, r1, lsl #2]
   133d4:	bl	11f48 <close@plt>
   133d8:	mvn	r0, #0
   133dc:	str	r0, [r4, #60]	; 0x3c
   133e0:	mov	r0, #0
   133e4:	str	r0, [r4, #208]	; 0xd0
   133e8:	ldr	r0, [r4, #24]
   133ec:	cmp	r0, #2
   133f0:	movge	r0, #1
   133f4:	strge	r0, [r4, #24]
   133f8:	pop	{r4, sl, fp, pc}
   133fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13400:	add	fp, sp, #28
   13404:	sub	sp, sp, #308	; 0x134
   13408:	movw	r8, #63000	; 0xf618
   1340c:	movw	r7, #62400	; 0xf3c0
   13410:	mov	r5, r0
   13414:	movt	r8, #2
   13418:	movt	r7, #2
   1341c:	ldr	r9, [r8]
   13420:	cmp	r9, #0
   13424:	beq	135dc <__assert_fail@plt+0x1664>
   13428:	add	r6, r5, #72	; 0x48
   1342c:	b	1343c <__assert_fail@plt+0x14c4>
   13430:	ldr	r9, [r9, #220]	; 0xdc
   13434:	cmp	r9, #0
   13438:	beq	135dc <__assert_fail@plt+0x1664>
   1343c:	add	r0, r9, #72	; 0x48
   13440:	mov	r1, r6
   13444:	mov	r2, #128	; 0x80
   13448:	bl	11d14 <bcmp@plt>
   1344c:	cmp	r0, #0
   13450:	bne	13430 <__assert_fail@plt+0x14b8>
   13454:	ldr	r1, [r5, #12]
   13458:	ldr	r0, [r9, #12]
   1345c:	bl	11ab0 <strcmp@plt>
   13460:	cmp	r0, #0
   13464:	bne	13430 <__assert_fail@plt+0x14b8>
   13468:	ldr	r1, [r5, #20]
   1346c:	ldr	r0, [r9, #20]
   13470:	bl	11ab0 <strcmp@plt>
   13474:	cmp	r0, #0
   13478:	bne	13430 <__assert_fail@plt+0x14b8>
   1347c:	ldr	r0, [r5, #64]	; 0x40
   13480:	ldr	r1, [r9, #64]	; 0x40
   13484:	sub	r0, r0, #1
   13488:	sub	r1, r1, #1
   1348c:	cmp	r0, #2
   13490:	mov	r0, #0
   13494:	movwcc	r0, #1
   13498:	cmp	r1, #2
   1349c:	mov	r1, #0
   134a0:	movwcc	r1, #1
   134a4:	cmp	r1, r0
   134a8:	bne	13430 <__assert_fail@plt+0x14b8>
   134ac:	sub	r6, fp, #160	; 0xa0
   134b0:	mov	r0, r6
   134b4:	bl	11e10 <sigemptyset@plt>
   134b8:	mov	r0, r6
   134bc:	mov	r1, #17
   134c0:	bl	11cb4 <sigaddset@plt>
   134c4:	mov	r0, r6
   134c8:	mov	r1, #1
   134cc:	bl	11cb4 <sigaddset@plt>
   134d0:	mov	r0, r6
   134d4:	mov	r1, #14
   134d8:	bl	11cb4 <sigaddset@plt>
   134dc:	add	r2, sp, #48	; 0x30
   134e0:	mov	r0, #0
   134e4:	mov	r1, r6
   134e8:	bl	11b10 <sigprocmask@plt>
   134ec:	ldr	r0, [r5, #44]	; 0x2c
   134f0:	cmp	r0, #0
   134f4:	bne	13518 <__assert_fail@plt+0x15a0>
   134f8:	ldr	r1, [r9, #24]
   134fc:	ldr	r0, [r5, #24]
   13500:	cmp	r1, #1
   13504:	beq	13514 <__assert_fail@plt+0x159c>
   13508:	cmp	r0, #0
   1350c:	bne	13518 <__assert_fail@plt+0x15a0>
   13510:	mov	r0, #0
   13514:	str	r0, [r9, #24]
   13518:	ldr	r0, [r5, #36]	; 0x24
   1351c:	cmp	r0, #0
   13520:	ldrne	r1, [r9, #36]	; 0x24
   13524:	strne	r0, [r9, #36]	; 0x24
   13528:	strne	r1, [r5, #36]	; 0x24
   1352c:	ldr	r0, [r5, #40]	; 0x28
   13530:	cmp	r0, #0
   13534:	ldrne	r1, [r9, #40]	; 0x28
   13538:	strne	r0, [r9, #40]	; 0x28
   1353c:	strne	r1, [r5, #40]	; 0x28
   13540:	ldr	r0, [r5, #48]	; 0x30
   13544:	cmp	r0, #0
   13548:	ldrne	r1, [r9, #48]	; 0x30
   1354c:	strne	r0, [r9, #48]	; 0x30
   13550:	strne	r1, [r5, #48]	; 0x30
   13554:	ldr	r1, [r9, #52]	; 0x34
   13558:	ldr	r0, [r9, #56]	; 0x38
   1355c:	bl	1642c <__assert_fail@plt+0x44b4>
   13560:	ldr	r0, [r5, #56]	; 0x38
   13564:	add	r1, sp, #48	; 0x30
   13568:	mov	r2, #0
   1356c:	str	r0, [r9, #56]	; 0x38
   13570:	ldr	r0, [r5, #52]	; 0x34
   13574:	str	r0, [r9, #52]	; 0x34
   13578:	mov	r0, #0
   1357c:	str	r0, [r5, #52]	; 0x34
   13580:	str	r0, [r5, #56]	; 0x38
   13584:	mov	r0, #1
   13588:	strh	r0, [r9, #32]
   1358c:	mov	r0, #2
   13590:	bl	11b10 <sigprocmask@plt>
   13594:	ldrb	r0, [r7]
   13598:	cmp	r0, #0
   1359c:	beq	1384c <__assert_fail@plt+0x18d4>
   135a0:	movw	r0, #62384	; 0xf3b0
   135a4:	ldr	r7, [r9, #64]	; 0x40
   135a8:	ldm	r9, {r2, r3}
   135ac:	movt	r0, #2
   135b0:	ldr	r0, [r0]
   135b4:	sub	r1, r7, #1
   135b8:	cmp	r1, #1
   135bc:	bhi	13920 <__assert_fail@plt+0x19a8>
   135c0:	movw	r6, #54592	; 0xd540
   135c4:	movw	r1, #55430	; 0xd886
   135c8:	cmp	r7, #2
   135cc:	movt	r6, #1
   135d0:	movt	r1, #1
   135d4:	moveq	r1, r6
   135d8:	b	13934 <__assert_fail@plt+0x19bc>
   135dc:	ldrb	r0, [r7]
   135e0:	cmp	r0, #0
   135e4:	bne	13858 <__assert_fail@plt+0x18e0>
   135e8:	mov	r0, #224	; 0xe0
   135ec:	bl	18134 <argp_parse@@Base+0x1a10>
   135f0:	cmp	r0, #0
   135f4:	beq	139bc <__assert_fail@plt+0x1a44>
   135f8:	mov	r1, r5
   135fc:	mov	r2, #224	; 0xe0
   13600:	mov	r9, r0
   13604:	bl	11b64 <memcpy@plt>
   13608:	ldr	r0, [r9, #8]
   1360c:	cmp	r0, #0
   13610:	beq	13640 <__assert_fail@plt+0x16c8>
   13614:	bl	11d2c <strlen@plt>
   13618:	add	r5, r0, #1
   1361c:	mov	r0, r5
   13620:	bl	18134 <argp_parse@@Base+0x1a10>
   13624:	cmp	r0, #0
   13628:	beq	139a4 <__assert_fail@plt+0x1a2c>
   1362c:	ldr	r1, [r9, #8]
   13630:	mov	r2, r5
   13634:	mov	r6, r0
   13638:	bl	11b64 <memcpy@plt>
   1363c:	str	r6, [r9, #8]
   13640:	ldr	r0, [r9, #12]
   13644:	cmp	r0, #0
   13648:	beq	13678 <__assert_fail@plt+0x1700>
   1364c:	bl	11d2c <strlen@plt>
   13650:	add	r5, r0, #1
   13654:	mov	r0, r5
   13658:	bl	18134 <argp_parse@@Base+0x1a10>
   1365c:	cmp	r0, #0
   13660:	beq	139a4 <__assert_fail@plt+0x1a2c>
   13664:	ldr	r1, [r9, #12]
   13668:	mov	r2, r5
   1366c:	mov	r6, r0
   13670:	bl	11b64 <memcpy@plt>
   13674:	str	r6, [r9, #12]
   13678:	ldr	r0, [r9, #20]
   1367c:	cmp	r0, #0
   13680:	beq	136b0 <__assert_fail@plt+0x1738>
   13684:	bl	11d2c <strlen@plt>
   13688:	add	r5, r0, #1
   1368c:	mov	r0, r5
   13690:	bl	18134 <argp_parse@@Base+0x1a10>
   13694:	cmp	r0, #0
   13698:	beq	139a4 <__assert_fail@plt+0x1a2c>
   1369c:	ldr	r1, [r9, #20]
   136a0:	mov	r2, r5
   136a4:	mov	r6, r0
   136a8:	bl	11b64 <memcpy@plt>
   136ac:	str	r6, [r9, #20]
   136b0:	ldr	r0, [r9, #36]	; 0x24
   136b4:	cmp	r0, #0
   136b8:	beq	136e8 <__assert_fail@plt+0x1770>
   136bc:	bl	11d2c <strlen@plt>
   136c0:	add	r5, r0, #1
   136c4:	mov	r0, r5
   136c8:	bl	18134 <argp_parse@@Base+0x1a10>
   136cc:	cmp	r0, #0
   136d0:	beq	139a4 <__assert_fail@plt+0x1a2c>
   136d4:	ldr	r1, [r9, #36]	; 0x24
   136d8:	mov	r2, r5
   136dc:	mov	r6, r0
   136e0:	bl	11b64 <memcpy@plt>
   136e4:	str	r6, [r9, #36]	; 0x24
   136e8:	ldr	r0, [r9, #40]	; 0x28
   136ec:	cmp	r0, #0
   136f0:	beq	13720 <__assert_fail@plt+0x17a8>
   136f4:	bl	11d2c <strlen@plt>
   136f8:	add	r5, r0, #1
   136fc:	mov	r0, r5
   13700:	bl	18134 <argp_parse@@Base+0x1a10>
   13704:	cmp	r0, #0
   13708:	beq	139a4 <__assert_fail@plt+0x1a2c>
   1370c:	ldr	r1, [r9, #40]	; 0x28
   13710:	mov	r2, r5
   13714:	mov	r6, r0
   13718:	bl	11b64 <memcpy@plt>
   1371c:	str	r6, [r9, #40]	; 0x28
   13720:	ldr	r0, [r9, #48]	; 0x30
   13724:	cmp	r0, #0
   13728:	beq	13758 <__assert_fail@plt+0x17e0>
   1372c:	bl	11d2c <strlen@plt>
   13730:	add	r5, r0, #1
   13734:	mov	r0, r5
   13738:	bl	18134 <argp_parse@@Base+0x1a10>
   1373c:	cmp	r0, #0
   13740:	beq	139a4 <__assert_fail@plt+0x1a2c>
   13744:	ldr	r1, [r9, #48]	; 0x30
   13748:	mov	r2, r5
   1374c:	mov	r6, r0
   13750:	bl	11b64 <memcpy@plt>
   13754:	str	r6, [r9, #48]	; 0x30
   13758:	ldr	r0, [r9, #56]	; 0x38
   1375c:	lsl	r6, r0, #2
   13760:	mov	r0, r6
   13764:	bl	18134 <argp_parse@@Base+0x1a10>
   13768:	cmp	r0, #0
   1376c:	beq	139a4 <__assert_fail@plt+0x1a2c>
   13770:	ldr	r1, [r9, #52]	; 0x34
   13774:	mov	r2, r6
   13778:	mov	r5, r0
   1377c:	bl	11b64 <memcpy@plt>
   13780:	str	r5, [r9, #52]	; 0x34
   13784:	ldr	r1, [r9, #56]	; 0x38
   13788:	cmp	r1, #0
   1378c:	beq	137e4 <__assert_fail@plt+0x186c>
   13790:	mov	r4, #0
   13794:	ldr	r0, [r5, r4, lsl #2]
   13798:	cmp	r0, #0
   1379c:	beq	137d0 <__assert_fail@plt+0x1858>
   137a0:	bl	11d2c <strlen@plt>
   137a4:	add	r6, r0, #1
   137a8:	mov	r0, r6
   137ac:	bl	18134 <argp_parse@@Base+0x1a10>
   137b0:	cmp	r0, #0
   137b4:	beq	139a4 <__assert_fail@plt+0x1a2c>
   137b8:	ldr	r1, [r5, r4, lsl #2]
   137bc:	mov	r2, r6
   137c0:	mov	r7, r0
   137c4:	bl	11b64 <memcpy@plt>
   137c8:	str	r7, [r5, r4, lsl #2]
   137cc:	ldr	r1, [r9, #56]	; 0x38
   137d0:	add	r4, r4, #1
   137d4:	cmp	r4, r1
   137d8:	bcs	137e4 <__assert_fail@plt+0x186c>
   137dc:	ldr	r5, [r9, #52]	; 0x34
   137e0:	b	13794 <__assert_fail@plt+0x181c>
   137e4:	mvn	r0, #0
   137e8:	sub	r5, fp, #160	; 0xa0
   137ec:	str	r0, [r9, #60]	; 0x3c
   137f0:	mov	r0, r5
   137f4:	bl	11e10 <sigemptyset@plt>
   137f8:	mov	r0, r5
   137fc:	mov	r1, #17
   13800:	bl	11cb4 <sigaddset@plt>
   13804:	mov	r0, r5
   13808:	mov	r1, #1
   1380c:	bl	11cb4 <sigaddset@plt>
   13810:	mov	r0, r5
   13814:	mov	r1, #14
   13818:	bl	11cb4 <sigaddset@plt>
   1381c:	add	r6, sp, #48	; 0x30
   13820:	mov	r0, #0
   13824:	mov	r1, r5
   13828:	mov	r2, r6
   1382c:	bl	11b10 <sigprocmask@plt>
   13830:	ldr	r0, [r8]
   13834:	mov	r1, r6
   13838:	mov	r2, #0
   1383c:	str	r9, [r8]
   13840:	str	r0, [r9, #220]	; 0xdc
   13844:	mov	r0, #2
   13848:	bl	11b10 <sigprocmask@plt>
   1384c:	mov	r0, r9
   13850:	sub	sp, fp, #28
   13854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13858:	movw	r0, #62384	; 0xf3b0
   1385c:	ldr	r7, [r5, #64]	; 0x40
   13860:	ldr	r2, [r5, #4]
   13864:	ldr	r3, [r5]
   13868:	movt	r0, #2
   1386c:	ldr	r0, [r0]
   13870:	sub	r1, r7, #1
   13874:	str	r2, [sp, #44]	; 0x2c
   13878:	cmp	r1, #1
   1387c:	bhi	1389c <__assert_fail@plt+0x1924>
   13880:	movw	r6, #54592	; 0xd540
   13884:	movw	r1, #55430	; 0xd886
   13888:	cmp	r7, #2
   1388c:	movt	r6, #1
   13890:	movt	r1, #1
   13894:	moveq	r1, r6
   13898:	b	138b0 <__assert_fail@plt+0x1938>
   1389c:	ldr	r7, [r5, #8]
   138a0:	movw	r1, #54603	; 0xd54b
   138a4:	movt	r1, #1
   138a8:	cmp	r7, #0
   138ac:	movne	r1, r7
   138b0:	add	r9, r5, #20
   138b4:	ldr	r4, [r5, #44]	; 0x2c
   138b8:	ldr	lr, [r5, #36]	; 0x24
   138bc:	ldr	r2, [r5, #40]	; 0x28
   138c0:	ldr	sl, [r5, #12]
   138c4:	ldm	r9, {r6, r7, r9}
   138c8:	cmp	r4, #0
   138cc:	bne	138dc <__assert_fail@plt+0x1964>
   138d0:	movw	r4, #54605	; 0xd54d
   138d4:	movt	r4, #1
   138d8:	b	138e0 <__assert_fail@plt+0x1968>
   138dc:	ldr	r4, [r4]
   138e0:	ldr	ip, [r5, #48]	; 0x30
   138e4:	str	r4, [sp, #32]
   138e8:	movw	r4, #54845	; 0xd63d
   138ec:	movt	r4, #1
   138f0:	str	r4, [sp]
   138f4:	str	ip, [sp, #36]	; 0x24
   138f8:	stmib	sp, {r1, sl}
   138fc:	add	r1, sp, #12
   13900:	stm	r1, {r6, r7, r9, lr}
   13904:	str	r2, [sp, #28]
   13908:	mov	r2, r3
   1390c:	ldr	r3, [sp, #44]	; 0x2c
   13910:	movw	r1, #54509	; 0xd4ed
   13914:	movt	r1, #1
   13918:	bl	11d5c <fprintf@plt>
   1391c:	b	135e8 <__assert_fail@plt+0x1670>
   13920:	ldr	r7, [r9, #8]
   13924:	movw	r1, #54603	; 0xd54b
   13928:	movt	r1, #1
   1392c:	cmp	r7, #0
   13930:	movne	r1, r7
   13934:	ldr	r4, [r9, #44]	; 0x2c
   13938:	ldr	lr, [r9, #36]	; 0x24
   1393c:	ldr	ip, [r9, #40]	; 0x28
   13940:	ldr	sl, [r9, #12]
   13944:	ldr	r8, [r9, #20]
   13948:	ldr	r6, [r9, #24]
   1394c:	ldr	r7, [r9, #28]
   13950:	cmp	r4, #0
   13954:	bne	13964 <__assert_fail@plt+0x19ec>
   13958:	movw	r4, #54605	; 0xd54d
   1395c:	movt	r4, #1
   13960:	b	13968 <__assert_fail@plt+0x19f0>
   13964:	ldr	r4, [r4]
   13968:	ldr	r5, [r9, #48]	; 0x30
   1396c:	str	r4, [sp, #32]
   13970:	movw	r4, #54840	; 0xd638
   13974:	movt	r4, #1
   13978:	str	r4, [sp]
   1397c:	str	r5, [sp, #36]	; 0x24
   13980:	stmib	sp, {r1, sl}
   13984:	add	r1, sp, #16
   13988:	str	r8, [sp, #12]
   1398c:	stm	r1, {r6, r7, lr}
   13990:	movw	r1, #54509	; 0xd4ed
   13994:	str	ip, [sp, #28]
   13998:	movt	r1, #1
   1399c:	bl	11d5c <fprintf@plt>
   139a0:	b	1384c <__assert_fail@plt+0x18d4>
   139a4:	movw	r1, #54498	; 0xd4e2
   139a8:	movt	r1, #1
   139ac:	mov	r0, #3
   139b0:	bl	11e64 <syslog@plt>
   139b4:	mvn	r0, #0
   139b8:	bl	11d08 <exit@plt>
   139bc:	movw	r1, #55321	; 0xd819
   139c0:	movt	r1, #1
   139c4:	b	139ac <__assert_fail@plt+0x1a34>
   139c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   139cc:	add	fp, sp, #24
   139d0:	sub	sp, sp, #32
   139d4:	ldr	r7, [r0, #8]
   139d8:	mov	r8, r2
   139dc:	mov	r9, r1
   139e0:	mov	r6, r0
   139e4:	cmp	r7, #0
   139e8:	beq	13a5c <__assert_fail@plt+0x1ae4>
   139ec:	movw	r1, #54850	; 0xd642
   139f0:	mov	r0, r7
   139f4:	movt	r1, #1
   139f8:	bl	11f6c <strspn@plt>
   139fc:	mov	r4, r0
   13a00:	mov	r0, r7
   13a04:	bl	11d2c <strlen@plt>
   13a08:	mov	r5, #1
   13a0c:	cmp	r4, r0
   13a10:	beq	13a60 <__assert_fail@plt+0x1ae8>
   13a14:	mov	r0, r7
   13a18:	mov	r1, #58	; 0x3a
   13a1c:	bl	11d44 <strchr@plt>
   13a20:	cmp	r0, #0
   13a24:	beq	13a40 <__assert_fail@plt+0x1ac8>
   13a28:	movw	r1, #54862	; 0xd64e
   13a2c:	mov	r0, r7
   13a30:	movt	r1, #1
   13a34:	bl	11f6c <strspn@plt>
   13a38:	cmp	r0, #0
   13a3c:	bne	13a60 <__assert_fail@plt+0x1ae8>
   13a40:	cmp	r7, #0
   13a44:	beq	13a5c <__assert_fail@plt+0x1ae4>
   13a48:	movw	r0, #62400	; 0xf3c0
   13a4c:	movt	r0, #2
   13a50:	ldrb	r0, [r0]
   13a54:	cmp	r0, #0
   13a58:	bne	13ad8 <__assert_fail@plt+0x1b60>
   13a5c:	mov	r5, #0
   13a60:	vmov.i32	q8, #0	; 0x00000000
   13a64:	mov	r0, sp
   13a68:	add	r1, r0, #16
   13a6c:	add	r0, r0, #4
   13a70:	vst1.32	{d16-d17}, [r1]
   13a74:	vst1.32	{d16-d17}, [r0]
   13a78:	mov	r0, #1
   13a7c:	str	r0, [sp]
   13a80:	mov	r0, #5
   13a84:	ldrb	r1, [r6, #70]	; 0x46
   13a88:	cmp	r1, #0
   13a8c:	beq	13aa4 <__assert_fail@plt+0x1b2c>
   13a90:	ldrh	r1, [r6, #68]	; 0x44
   13a94:	cmp	r1, #2
   13a98:	movne	r0, #9
   13a9c:	strne	r0, [sp]
   13aa0:	movne	r0, #13
   13aa4:	cmp	r5, #0
   13aa8:	add	r2, r6, #8
   13aac:	mov	r3, r8
   13ab0:	strne	r0, [sp]
   13ab4:	ldrh	r0, [r6, #68]	; 0x44
   13ab8:	str	r0, [sp, #4]
   13abc:	ldm	r2, {r0, r1, r2}
   13ac0:	str	r9, [sp, #12]
   13ac4:	str	r2, [sp, #8]
   13ac8:	mov	r2, sp
   13acc:	bl	11ef4 <getaddrinfo@plt>
   13ad0:	sub	sp, fp, #24
   13ad4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ad8:	movw	r0, #62384	; 0xf3b0
   13adc:	movw	r1, #54887	; 0xd667
   13ae0:	mov	r2, r7
   13ae4:	movt	r0, #2
   13ae8:	movt	r1, #1
   13aec:	ldr	r0, [r0]
   13af0:	bl	11d5c <fprintf@plt>
   13af4:	b	13a5c <__assert_fail@plt+0x1ae4>
   13af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13afc:	add	fp, sp, #28
   13b00:	sub	sp, sp, #4
   13b04:	vpush	{d8-d9}
   13b08:	sub	sp, sp, #24
   13b0c:	ldr	r5, [r0, #20]
   13b10:	movw	r6, #54683	; 0xd59b
   13b14:	mov	r4, r0
   13b18:	mov	r2, #3
   13b1c:	movt	r6, #1
   13b20:	mov	r1, r6
   13b24:	mov	r0, r5
   13b28:	bl	11f24 <strncmp@plt>
   13b2c:	cmp	r0, #0
   13b30:	beq	13b58 <__assert_fail@plt+0x1be0>
   13b34:	movw	r6, #54910	; 0xd67e
   13b38:	mov	r0, r5
   13b3c:	mov	r2, #3
   13b40:	movt	r6, #1
   13b44:	mov	r1, r6
   13b48:	bl	11f24 <strncmp@plt>
   13b4c:	cmp	r0, #0
   13b50:	moveq	r5, r6
   13b54:	mov	r6, r5
   13b58:	mov	r0, r6
   13b5c:	bl	11b04 <getprotobyname@plt>
   13b60:	cmp	r0, #0
   13b64:	beq	13c74 <__assert_fail@plt+0x1cfc>
   13b68:	ldr	r1, [r0, #8]
   13b6c:	mov	r5, r0
   13b70:	add	r2, sp, #20
   13b74:	mov	r0, r4
   13b78:	bl	139c8 <__assert_fail@plt+0x1a50>
   13b7c:	cmn	r0, #9
   13b80:	bne	13bb8 <__assert_fail@plt+0x1c40>
   13b84:	ldrh	r1, [r4, #68]	; 0x44
   13b88:	mvn	r0, #8
   13b8c:	cmp	r1, #10
   13b90:	bne	13c8c <__assert_fail@plt+0x1d14>
   13b94:	ldrb	r1, [r4, #70]	; 0x46
   13b98:	cmp	r1, #0
   13b9c:	beq	13c8c <__assert_fail@plt+0x1d14>
   13ba0:	mov	r0, #2
   13ba4:	add	r2, sp, #20
   13ba8:	strh	r0, [r4, #68]	; 0x44
   13bac:	mov	r0, r4
   13bb0:	ldr	r1, [r5, #8]
   13bb4:	bl	139c8 <__assert_fail@plt+0x1a50>
   13bb8:	cmn	r0, #11
   13bbc:	beq	13c94 <__assert_fail@plt+0x1d1c>
   13bc0:	cmp	r0, #0
   13bc4:	bne	13c8c <__assert_fail@plt+0x1d14>
   13bc8:	ldr	r7, [sp, #20]
   13bcc:	mov	r5, #0
   13bd0:	mov	r0, #0
   13bd4:	cmp	r7, #0
   13bd8:	beq	13c6c <__assert_fail@plt+0x1cf4>
   13bdc:	add	r6, r4, #72	; 0x48
   13be0:	vmov.i32	q4, #0	; 0x00000000
   13be4:	add	r0, r6, #96	; 0x60
   13be8:	add	r8, r6, #64	; 0x40
   13bec:	add	r9, r6, #48	; 0x30
   13bf0:	add	sl, r6, #32
   13bf4:	add	r5, r6, #16
   13bf8:	str	r0, [sp, #16]
   13bfc:	add	r0, r6, #80	; 0x50
   13c00:	str	r0, [sp, #12]
   13c04:	mov	r0, r6
   13c08:	mov	r1, #112	; 0x70
   13c0c:	vst1.32	{d8-d9}, [r8]
   13c10:	vst1.32	{d8-d9}, [r9]
   13c14:	vst1.32	{d8-d9}, [sl]
   13c18:	vst1.32	{d8-d9}, [r5]
   13c1c:	vst1.32	{d8-d9}, [r0], r1
   13c20:	vst1.32	{d8-d9}, [r0]
   13c24:	ldr	r0, [sp, #16]
   13c28:	vst1.32	{d8-d9}, [r0]
   13c2c:	ldr	r0, [sp, #12]
   13c30:	vst1.32	{d8-d9}, [r0]
   13c34:	mov	r0, r6
   13c38:	ldr	r2, [r7, #16]
   13c3c:	ldr	r1, [r7, #20]
   13c40:	bl	11b64 <memcpy@plt>
   13c44:	ldr	r0, [r7, #16]
   13c48:	str	r0, [r4, #200]	; 0xc8
   13c4c:	mov	r0, r4
   13c50:	bl	133fc <__assert_fail@plt+0x1484>
   13c54:	bl	13250 <__assert_fail@plt+0x12d8>
   13c58:	ldr	r7, [r7, #28]
   13c5c:	cmp	r7, #0
   13c60:	bne	13c04 <__assert_fail@plt+0x1c8c>
   13c64:	ldr	r0, [sp, #20]
   13c68:	mov	r5, #0
   13c6c:	bl	11ee8 <freeaddrinfo@plt>
   13c70:	b	13d04 <__assert_fail@plt+0x1d8c>
   13c74:	ldr	r2, [r4, #20]
   13c78:	movw	r1, #54914	; 0xd682
   13c7c:	mov	r0, #3
   13c80:	movt	r1, #1
   13c84:	bl	11e64 <syslog@plt>
   13c88:	b	13d00 <__assert_fail@plt+0x1d88>
   13c8c:	bl	11b40 <gai_strerror@plt>
   13c90:	b	13ca0 <__assert_fail@plt+0x1d28>
   13c94:	bl	11d74 <__errno_location@plt>
   13c98:	ldr	r0, [r0]
   13c9c:	bl	11ccc <strerror@plt>
   13ca0:	mov	r5, r0
   13ca4:	movw	r0, #62400	; 0xf3c0
   13ca8:	ldr	r2, [r4, #8]
   13cac:	movt	r0, #2
   13cb0:	ldrb	r0, [r0]
   13cb4:	cmp	r2, #0
   13cb8:	beq	13cdc <__assert_fail@plt+0x1d64>
   13cbc:	cmp	r0, #0
   13cc0:	bne	13d18 <__assert_fail@plt+0x1da0>
   13cc4:	ldr	r0, [r4, #20]
   13cc8:	ldr	r3, [r4, #12]
   13ccc:	movw	r1, #54970	; 0xd6ba
   13cd0:	movt	r1, #1
   13cd4:	stm	sp, {r0, r5}
   13cd8:	b	13cf8 <__assert_fail@plt+0x1d80>
   13cdc:	cmp	r0, #0
   13ce0:	bne	13d44 <__assert_fail@plt+0x1dcc>
   13ce4:	ldr	r2, [r4, #12]
   13ce8:	ldr	r3, [r4, #20]
   13cec:	movw	r1, #54973	; 0xd6bd
   13cf0:	str	r5, [sp]
   13cf4:	movt	r1, #1
   13cf8:	mov	r0, #3
   13cfc:	bl	11e64 <syslog@plt>
   13d00:	mov	r5, #1
   13d04:	mov	r0, r5
   13d08:	sub	sp, fp, #48	; 0x30
   13d0c:	vpop	{d8-d9}
   13d10:	add	sp, sp, #4
   13d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d18:	movw	r0, #62384	; 0xf3b0
   13d1c:	ldr	r1, [r4, #20]
   13d20:	ldr	r3, [r4, #12]
   13d24:	movt	r0, #2
   13d28:	ldr	r0, [r0]
   13d2c:	stm	sp, {r1, r5}
   13d30:	movw	r1, #54935	; 0xd697
   13d34:	movt	r1, #1
   13d38:	bl	11d5c <fprintf@plt>
   13d3c:	ldr	r2, [r4, #8]
   13d40:	b	13cc4 <__assert_fail@plt+0x1d4c>
   13d44:	movw	r0, #62384	; 0xf3b0
   13d48:	ldr	r2, [r4, #12]
   13d4c:	ldr	r3, [r4, #20]
   13d50:	movw	r1, #54996	; 0xd6d4
   13d54:	str	r5, [sp]
   13d58:	movt	r0, #2
   13d5c:	movt	r1, #1
   13d60:	ldr	r0, [r0]
   13d64:	bl	11d5c <fprintf@plt>
   13d68:	b	13ce4 <__assert_fail@plt+0x1d6c>
   13d6c:	movw	r1, #54324	; 0xd434
   13d70:	movt	r1, #1
   13d74:	b	11ec4 <fopen64@plt>
   13d78:	cmp	r0, #0
   13d7c:	bxeq	lr
   13d80:	b	11dec <fclose@plt>
   13d84:	push	{r4, sl, fp, lr}
   13d88:	add	fp, sp, #8
   13d8c:	mov	r4, r0
   13d90:	ldr	r0, [r0, #8]
   13d94:	bl	17a00 <argp_parse@@Base+0x12dc>
   13d98:	ldr	r0, [r4, #12]
   13d9c:	bl	17a00 <argp_parse@@Base+0x12dc>
   13da0:	ldr	r0, [r4, #20]
   13da4:	bl	17a00 <argp_parse@@Base+0x12dc>
   13da8:	ldr	r0, [r4, #36]	; 0x24
   13dac:	bl	17a00 <argp_parse@@Base+0x12dc>
   13db0:	ldr	r0, [r4, #40]	; 0x28
   13db4:	bl	17a00 <argp_parse@@Base+0x12dc>
   13db8:	ldr	r0, [r4, #48]	; 0x30
   13dbc:	bl	17a00 <argp_parse@@Base+0x12dc>
   13dc0:	ldr	r1, [r4, #52]	; 0x34
   13dc4:	ldr	r0, [r4, #56]	; 0x38
   13dc8:	pop	{r4, sl, fp, lr}
   13dcc:	b	1642c <__assert_fail@plt+0x44b4>
   13dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dd4:	add	fp, sp, #28
   13dd8:	sub	sp, sp, #4
   13ddc:	movw	r6, #62992	; 0xf610
   13de0:	mov	r4, r0
   13de4:	movt	r6, #2
   13de8:	ldr	r0, [r6]
   13dec:	cmp	r0, #0
   13df0:	beq	13e7c <__assert_fail@plt+0x1f04>
   13df4:	movw	r9, #62984	; 0xf608
   13df8:	movt	r9, #2
   13dfc:	ldr	r1, [r9]
   13e00:	add	r0, r0, r1
   13e04:	movw	r1, #55028	; 0xd6f4
   13e08:	movt	r1, #1
   13e0c:	bl	11ad4 <strcspn@plt>
   13e10:	mov	r5, r0
   13e14:	add	r0, r0, #1
   13e18:	bl	18134 <argp_parse@@Base+0x1a10>
   13e1c:	cmp	r0, #0
   13e20:	str	r0, [r4, #8]
   13e24:	beq	13e88 <__assert_fail@plt+0x1f10>
   13e28:	ldr	r8, [r9]
   13e2c:	ldr	r6, [r6]
   13e30:	mov	r2, r5
   13e34:	mov	r7, r0
   13e38:	add	r1, r6, r8
   13e3c:	bl	11b64 <memcpy@plt>
   13e40:	mov	sl, #0
   13e44:	add	r0, r8, r5
   13e48:	strb	sl, [r7, r5]
   13e4c:	str	r0, [r9]
   13e50:	ldrb	r1, [r6, r0]
   13e54:	cmp	r1, #0
   13e58:	beq	13e68 <__assert_fail@plt+0x1ef0>
   13e5c:	add	r0, r0, #1
   13e60:	str	r0, [r9]
   13e64:	b	13e7c <__assert_fail@plt+0x1f04>
   13e68:	mov	r0, r6
   13e6c:	bl	17a00 <argp_parse@@Base+0x12dc>
   13e70:	movw	r0, #62992	; 0xf610
   13e74:	movt	r0, #2
   13e78:	str	sl, [r0]
   13e7c:	mov	r0, r4
   13e80:	sub	sp, fp, #28
   13e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e88:	movw	r1, #55030	; 0xd6f6
   13e8c:	mov	r0, #3
   13e90:	movt	r1, #1
   13e94:	bl	11e64 <syslog@plt>
   13e98:	mvn	r0, #0
   13e9c:	bl	11d08 <exit@plt>
   13ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ea4:	add	fp, sp, #28
   13ea8:	sub	sp, sp, #28
   13eac:	mov	r9, r0
   13eb0:	movw	r0, #62992	; 0xf610
   13eb4:	mov	r4, #0
   13eb8:	movt	r0, #2
   13ebc:	str	r4, [sp, #24]
   13ec0:	str	r4, [sp, #20]
   13ec4:	ldr	r0, [r0]
   13ec8:	cmp	r0, #0
   13ecc:	beq	13ee4 <__assert_fail@plt+0x1f6c>
   13ed0:	movw	sl, #62416	; 0xf3d0
   13ed4:	movt	sl, #2
   13ed8:	mov	r0, sl
   13edc:	bl	13dd0 <__assert_fail@plt+0x1e58>
   13ee0:	b	1464c <__assert_fail@plt+0x26d4>
   13ee4:	movw	sl, #62416	; 0xf3d0
   13ee8:	mov	r7, r2
   13eec:	str	r1, [sp, #12]
   13ef0:	mov	r1, #0
   13ef4:	mov	r2, #224	; 0xe0
   13ef8:	movt	sl, #2
   13efc:	mov	r0, sl
   13f00:	bl	11da4 <memset@plt>
   13f04:	movw	r6, #62404	; 0xf3c4
   13f08:	movw	r5, #62408	; 0xf3c8
   13f0c:	add	r8, sp, #24
   13f10:	mov	r1, #0
   13f14:	mov	r0, #0
   13f18:	movt	r6, #2
   13f1c:	movt	r5, #2
   13f20:	bl	1642c <__assert_fail@plt+0x44b4>
   13f24:	ldr	r0, [sl, #8]
   13f28:	bl	17a00 <argp_parse@@Base+0x12dc>
   13f2c:	ldr	r0, [sl, #12]
   13f30:	bl	17a00 <argp_parse@@Base+0x12dc>
   13f34:	ldr	r0, [sl, #20]
   13f38:	bl	17a00 <argp_parse@@Base+0x12dc>
   13f3c:	ldr	r0, [sl, #36]	; 0x24
   13f40:	bl	17a00 <argp_parse@@Base+0x12dc>
   13f44:	ldr	r0, [sl, #40]	; 0x28
   13f48:	bl	17a00 <argp_parse@@Base+0x12dc>
   13f4c:	ldr	r0, [sl, #48]	; 0x30
   13f50:	bl	17a00 <argp_parse@@Base+0x12dc>
   13f54:	ldr	r1, [sl, #52]	; 0x34
   13f58:	ldr	r0, [sl, #56]	; 0x38
   13f5c:	bl	1642c <__assert_fail@plt+0x44b4>
   13f60:	mov	r0, sl
   13f64:	mov	r1, #0
   13f68:	mov	r2, #224	; 0xe0
   13f6c:	bl	11da4 <memset@plt>
   13f70:	mov	r0, r6
   13f74:	mov	r1, r5
   13f78:	mov	r2, #10
   13f7c:	mov	r3, r9
   13f80:	bl	11a98 <__getdelim@plt>
   13f84:	cmp	r0, #0
   13f88:	bmi	14648 <__assert_fail@plt+0x26d0>
   13f8c:	cmp	r0, #0
   13f90:	beq	13fb4 <__assert_fail@plt+0x203c>
   13f94:	ldr	r1, [r6]
   13f98:	sub	r0, r0, #1
   13f9c:	ldrb	r2, [r1, r0]
   13fa0:	cmp	r2, #10
   13fa4:	strbeq	r4, [r1, r0]
   13fa8:	ldr	r0, [r7]
   13fac:	add	r0, r0, #1
   13fb0:	str	r0, [r7]
   13fb4:	ldr	r0, [r6]
   13fb8:	ldrb	r1, [r0]
   13fbc:	cmp	r1, #35	; 0x23
   13fc0:	cmpne	r1, #0
   13fc4:	bne	13fe8 <__assert_fail@plt+0x2070>
   13fc8:	mov	r0, r6
   13fcc:	mov	r1, r5
   13fd0:	mov	r2, #10
   13fd4:	mov	r3, r9
   13fd8:	bl	11a98 <__getdelim@plt>
   13fdc:	cmp	r0, #0
   13fe0:	bpl	13f8c <__assert_fail@plt+0x2014>
   13fe4:	b	14648 <__assert_fail@plt+0x26d0>
   13fe8:	movw	r1, #55713	; 0xd9a1
   13fec:	mov	r2, r8
   13ff0:	add	r3, sp, #20
   13ff4:	movt	r1, #1
   13ff8:	bl	160d8 <__assert_fail@plt+0x4160>
   13ffc:	cmp	r0, #0
   14000:	bne	14618 <__assert_fail@plt+0x26a0>
   14004:	ldr	r0, [sp, #24]
   14008:	cmp	r0, #5
   1400c:	bgt	140a0 <__assert_fail@plt+0x2128>
   14010:	cmp	r0, #1
   14014:	bne	1413c <__assert_fail@plt+0x21c4>
   14018:	ldr	r0, [sp, #20]
   1401c:	ldr	r8, [r0]
   14020:	mov	r0, r8
   14024:	bl	11d2c <strlen@plt>
   14028:	sub	r0, r0, #1
   1402c:	ldrb	r1, [r8, r0]
   14030:	cmp	r1, #58	; 0x3a
   14034:	bne	1413c <__assert_fail@plt+0x21c4>
   14038:	mov	r1, #0
   1403c:	strb	r1, [r8, r0]
   14040:	movw	r0, #63004	; 0xf61c
   14044:	movt	r0, #2
   14048:	ldr	r0, [r0]
   1404c:	bl	17a00 <argp_parse@@Base+0x12dc>
   14050:	ldr	r0, [sp, #20]
   14054:	movw	r1, #54603	; 0xd54b
   14058:	movt	r1, #1
   1405c:	ldr	r8, [r0]
   14060:	mov	r0, r8
   14064:	bl	11ab0 <strcmp@plt>
   14068:	cmp	r0, #0
   1406c:	beq	14618 <__assert_fail@plt+0x26a0>
   14070:	movw	r0, #55713	; 0xd9a1
   14074:	cmp	r8, #0
   14078:	movt	r0, #1
   1407c:	moveq	r8, r0
   14080:	mov	r0, r8
   14084:	bl	11bc4 <strdup@plt>
   14088:	cmp	r0, #0
   1408c:	beq	14770 <__assert_fail@plt+0x27f8>
   14090:	movw	r1, #63004	; 0xf61c
   14094:	movt	r1, #2
   14098:	str	r0, [r1]
   1409c:	b	14618 <__assert_fail@plt+0x26a0>
   140a0:	ldr	r0, [sp, #12]
   140a4:	mov	r1, #58	; 0x3a
   140a8:	str	r0, [sl]
   140ac:	ldr	r0, [r7]
   140b0:	str	r0, [sl, #4]
   140b4:	ldr	r0, [sp, #20]
   140b8:	ldr	r8, [r0]
   140bc:	mov	r0, r8
   140c0:	bl	11e34 <strrchr@plt>
   140c4:	cmp	r0, #0
   140c8:	beq	14150 <__assert_fail@plt+0x21d8>
   140cc:	movw	r1, #54603	; 0xd54b
   140d0:	mov	r4, r0
   140d4:	mov	r0, #0
   140d8:	movt	r1, #1
   140dc:	strb	r0, [r4], #1
   140e0:	mov	r0, r8
   140e4:	bl	11ab0 <strcmp@plt>
   140e8:	cmp	r0, #0
   140ec:	beq	1412c <__assert_fail@plt+0x21b4>
   140f0:	movw	r0, #55713	; 0xd9a1
   140f4:	cmp	r8, #0
   140f8:	movt	r0, #1
   140fc:	moveq	r8, r0
   14100:	mov	r0, r8
   14104:	bl	11bc4 <strdup@plt>
   14108:	cmp	r0, #0
   1410c:	beq	14770 <__assert_fail@plt+0x27f8>
   14110:	movw	r2, #62984	; 0xf608
   14114:	mov	r1, #0
   14118:	movt	r2, #2
   1411c:	str	r1, [r2]
   14120:	movw	r1, #62992	; 0xf610
   14124:	movt	r1, #2
   14128:	str	r0, [r1]
   1412c:	mov	r8, r4
   14130:	movw	r4, #55713	; 0xd9a1
   14134:	movt	r4, #1
   14138:	b	1419c <__assert_fail@plt+0x2224>
   1413c:	ldr	r3, [r7]
   14140:	movw	r1, #55041	; 0xd701
   14144:	mov	r0, #3
   14148:	movt	r1, #1
   1414c:	b	14610 <__assert_fail@plt+0x2698>
   14150:	movw	r0, #63004	; 0xf61c
   14154:	movw	r4, #55713	; 0xd9a1
   14158:	movt	r0, #2
   1415c:	movt	r4, #1
   14160:	ldr	r0, [r0]
   14164:	cmp	r0, #0
   14168:	beq	1419c <__assert_fail@plt+0x2224>
   1416c:	bl	11bc4 <strdup@plt>
   14170:	cmp	r0, #0
   14174:	beq	14770 <__assert_fail@plt+0x27f8>
   14178:	movw	r2, #62984	; 0xf608
   1417c:	mov	r1, #0
   14180:	movt	r2, #2
   14184:	str	r1, [r2]
   14188:	movw	r1, #62992	; 0xf610
   1418c:	movt	r1, #2
   14190:	str	r0, [r1]
   14194:	ldr	r0, [sp, #20]
   14198:	ldr	r8, [r0]
   1419c:	movw	r1, #62132	; 0xf2b4
   141a0:	mov	r0, r8
   141a4:	mov	r2, #7
   141a8:	movt	r1, #2
   141ac:	bl	11f24 <strncmp@plt>
   141b0:	cmp	r0, #0
   141b4:	beq	141dc <__assert_fail@plt+0x2264>
   141b8:	cmp	r8, #0
   141bc:	moveq	r8, r4
   141c0:	mov	r0, r8
   141c4:	bl	11bc4 <strdup@plt>
   141c8:	cmp	r0, #0
   141cc:	beq	14770 <__assert_fail@plt+0x27f8>
   141d0:	mov	r1, #0
   141d4:	str	r1, [sl, #64]	; 0x40
   141d8:	b	14210 <__assert_fail@plt+0x2298>
   141dc:	mov	r0, r8
   141e0:	ldrb	r1, [r0, #7]!
   141e4:	cmp	r1, #43	; 0x2b
   141e8:	bne	141fc <__assert_fail@plt+0x2284>
   141ec:	mov	r0, #2
   141f0:	str	r0, [sl, #64]	; 0x40
   141f4:	add	r0, r8, #8
   141f8:	b	14204 <__assert_fail@plt+0x228c>
   141fc:	mov	r1, #1
   14200:	str	r1, [sl, #64]	; 0x40
   14204:	bl	11bc4 <strdup@plt>
   14208:	cmp	r0, #0
   1420c:	beq	14770 <__assert_fail@plt+0x27f8>
   14210:	ldr	r4, [sp, #20]
   14214:	str	r0, [sl, #12]
   14218:	movw	r1, #55067	; 0xd71b
   1421c:	movt	r1, #1
   14220:	ldr	r8, [r4, #4]
   14224:	mov	r0, r8
   14228:	bl	11ab0 <strcmp@plt>
   1422c:	cmp	r0, #0
   14230:	beq	142b8 <__assert_fail@plt+0x2340>
   14234:	movw	r1, #55074	; 0xd722
   14238:	mov	r0, r8
   1423c:	movt	r1, #1
   14240:	bl	11ab0 <strcmp@plt>
   14244:	cmp	r0, #0
   14248:	beq	142c0 <__assert_fail@plt+0x2348>
   1424c:	movw	r1, #55080	; 0xd728
   14250:	mov	r0, r8
   14254:	movt	r1, #1
   14258:	bl	11ab0 <strcmp@plt>
   1425c:	cmp	r0, #0
   14260:	beq	142c8 <__assert_fail@plt+0x2350>
   14264:	movw	r1, #55084	; 0xd72c
   14268:	mov	r0, r8
   1426c:	movt	r1, #1
   14270:	bl	11ab0 <strcmp@plt>
   14274:	cmp	r0, #0
   14278:	beq	142d0 <__assert_fail@plt+0x2358>
   1427c:	movw	r1, #55094	; 0xd736
   14280:	mov	r0, r8
   14284:	movt	r1, #1
   14288:	bl	11ab0 <strcmp@plt>
   1428c:	cmp	r0, #0
   14290:	beq	142d8 <__assert_fail@plt+0x2360>
   14294:	ldr	r3, [r7]
   14298:	ldr	r2, [sp, #12]
   1429c:	movw	r1, #55098	; 0xd73a
   142a0:	mov	r0, #4
   142a4:	movt	r1, #1
   142a8:	bl	11e64 <syslog@plt>
   142ac:	ldr	r4, [sp, #20]
   142b0:	mvn	r0, #0
   142b4:	b	142dc <__assert_fail@plt+0x2364>
   142b8:	mov	r0, #1
   142bc:	b	142dc <__assert_fail@plt+0x2364>
   142c0:	mov	r0, #2
   142c4:	b	142dc <__assert_fail@plt+0x2364>
   142c8:	mov	r0, #4
   142cc:	b	142dc <__assert_fail@plt+0x2364>
   142d0:	mov	r0, #5
   142d4:	b	142dc <__assert_fail@plt+0x2364>
   142d8:	mov	r0, #3
   142dc:	str	r0, [sl, #16]
   142e0:	ldr	r0, [r4, #8]
   142e4:	movw	r1, #55713	; 0xd9a1
   142e8:	movt	r1, #1
   142ec:	cmp	r0, #0
   142f0:	moveq	r0, r1
   142f4:	bl	11bc4 <strdup@plt>
   142f8:	cmp	r0, #0
   142fc:	beq	14770 <__assert_fail@plt+0x27f8>
   14300:	movw	r1, #54683	; 0xd59b
   14304:	mov	r8, r0
   14308:	mov	r0, #1
   1430c:	mov	r2, #3
   14310:	strb	r0, [sl, #70]	; 0x46
   14314:	mov	r0, #2
   14318:	movt	r1, #1
   1431c:	strh	r0, [sl, #68]	; 0x44
   14320:	mov	r0, r8
   14324:	str	r8, [sl, #20]
   14328:	bl	11f24 <strncmp@plt>
   1432c:	cmp	r0, #0
   14330:	beq	14350 <__assert_fail@plt+0x23d8>
   14334:	movw	r1, #54910	; 0xd67e
   14338:	mov	r0, r8
   1433c:	mov	r2, #3
   14340:	movt	r1, #1
   14344:	bl	11f24 <strncmp@plt>
   14348:	cmp	r0, #0
   1434c:	bne	1437c <__assert_fail@plt+0x2404>
   14350:	ldrb	r0, [r8, #3]
   14354:	cmp	r0, #52	; 0x34
   14358:	beq	14374 <__assert_fail@plt+0x23fc>
   1435c:	cmp	r0, #54	; 0x36
   14360:	bne	1437c <__assert_fail@plt+0x2404>
   14364:	mov	r0, #0
   14368:	strb	r0, [sl, #70]	; 0x46
   1436c:	mov	r0, #10
   14370:	b	14378 <__assert_fail@plt+0x2400>
   14374:	mov	r0, #2
   14378:	strh	r0, [sl, #68]	; 0x44
   1437c:	ldr	r0, [sp, #20]
   14380:	mov	r1, #46	; 0x2e
   14384:	ldr	r4, [r0, #12]
   14388:	mov	r0, r4
   1438c:	bl	11d44 <strchr@plt>
   14390:	cmp	r0, #0
   14394:	beq	143b0 <__assert_fail@plt+0x2438>
   14398:	mov	r8, r0
   1439c:	mov	r0, #0
   143a0:	strb	r0, [r8], #1
   143a4:	ldr	r0, [sp, #20]
   143a8:	ldr	r4, [r0, #12]
   143ac:	b	143b4 <__assert_fail@plt+0x243c>
   143b0:	mov	r8, #0
   143b4:	movw	r1, #55124	; 0xd754
   143b8:	mov	r0, r4
   143bc:	movt	r1, #1
   143c0:	bl	11ab0 <strcmp@plt>
   143c4:	cmp	r0, #0
   143c8:	beq	14408 <__assert_fail@plt+0x2490>
   143cc:	movw	r1, #55122	; 0xd752
   143d0:	mov	r0, r4
   143d4:	movt	r1, #1
   143d8:	bl	11ab0 <strcmp@plt>
   143dc:	cmp	r0, #0
   143e0:	beq	14410 <__assert_fail@plt+0x2498>
   143e4:	ldr	r3, [r7]
   143e8:	ldr	r2, [sp, #12]
   143ec:	movw	r1, #55129	; 0xd759
   143f0:	mov	r0, #4
   143f4:	movt	r1, #1
   143f8:	bl	11e64 <syslog@plt>
   143fc:	cmp	r8, #0
   14400:	bne	14420 <__assert_fail@plt+0x24a8>
   14404:	b	14460 <__assert_fail@plt+0x24e8>
   14408:	mov	r0, #1
   1440c:	b	14414 <__assert_fail@plt+0x249c>
   14410:	mov	r0, #0
   14414:	str	r0, [sl, #24]
   14418:	cmp	r8, #0
   1441c:	beq	14460 <__assert_fail@plt+0x24e8>
   14420:	mov	r0, r8
   14424:	add	r1, sp, #16
   14428:	mov	r2, #10
   1442c:	bl	11d20 <strtoul@plt>
   14430:	str	r0, [sl, #28]
   14434:	ldr	r0, [sp, #16]
   14438:	ldrb	r0, [r0]
   1443c:	cmp	r0, #0
   14440:	beq	14460 <__assert_fail@plt+0x24e8>
   14444:	ldr	r3, [r7]
   14448:	ldr	r2, [sp, #12]
   1444c:	movw	r1, #55151	; 0xd76f
   14450:	mov	r0, #4
   14454:	str	r8, [sp]
   14458:	movt	r1, #1
   1445c:	bl	11e64 <syslog@plt>
   14460:	ldr	r0, [sl, #64]	; 0x40
   14464:	sub	r0, r0, #1
   14468:	cmp	r0, #1
   1446c:	bhi	144b4 <__assert_fail@plt+0x253c>
   14470:	mov	r0, #0
   14474:	movw	r1, #54683	; 0xd59b
   14478:	mov	r2, #3
   1447c:	str	r0, [sl, #24]
   14480:	movt	r1, #1
   14484:	ldr	r0, [sl, #20]
   14488:	bl	11f24 <strncmp@plt>
   1448c:	cmp	r0, #0
   14490:	beq	144a8 <__assert_fail@plt+0x2530>
   14494:	ldr	r0, [sl, #12]
   14498:	ldr	r3, [r7]
   1449c:	movw	r1, #55179	; 0xd78b
   144a0:	movt	r1, #1
   144a4:	b	14608 <__assert_fail@plt+0x2690>
   144a8:	ldr	r0, [sl, #16]
   144ac:	cmp	r0, #1
   144b0:	bne	145f8 <__assert_fail@plt+0x2680>
   144b4:	ldr	r0, [sp, #20]
   144b8:	movw	r1, #55713	; 0xd9a1
   144bc:	movt	r1, #1
   144c0:	ldr	r0, [r0, #16]
   144c4:	cmp	r0, #0
   144c8:	moveq	r0, r1
   144cc:	bl	11bc4 <strdup@plt>
   144d0:	cmp	r0, #0
   144d4:	beq	14770 <__assert_fail@plt+0x27f8>
   144d8:	mov	r1, #58	; 0x3a
   144dc:	mov	r8, r0
   144e0:	str	r0, [sl, #36]	; 0x24
   144e4:	bl	11d44 <strchr@plt>
   144e8:	cmp	r0, #0
   144ec:	bne	14504 <__assert_fail@plt+0x258c>
   144f0:	mov	r0, r8
   144f4:	mov	r1, #46	; 0x2e
   144f8:	bl	11d44 <strchr@plt>
   144fc:	cmp	r0, #0
   14500:	beq	1462c <__assert_fail@plt+0x26b4>
   14504:	mov	r4, #0
   14508:	strb	r4, [r0], #1
   1450c:	bl	11bc4 <strdup@plt>
   14510:	cmp	r0, #0
   14514:	beq	14770 <__assert_fail@plt+0x27f8>
   14518:	str	r0, [sl, #40]	; 0x28
   1451c:	ldr	r0, [sp, #20]
   14520:	movw	r1, #55713	; 0xd9a1
   14524:	movt	r1, #1
   14528:	ldr	r0, [r0, #20]
   1452c:	cmp	r0, #0
   14530:	moveq	r0, r1
   14534:	bl	11bc4 <strdup@plt>
   14538:	cmp	r0, #0
   1453c:	beq	14770 <__assert_fail@plt+0x27f8>
   14540:	movw	r1, #55268	; 0xd7e4
   14544:	str	r0, [sl, #48]	; 0x30
   14548:	movt	r1, #1
   1454c:	bl	11ab0 <strcmp@plt>
   14550:	cmp	r0, #0
   14554:	bne	14764 <__assert_fail@plt+0x27ec>
   14558:	movw	r1, #61940	; 0xf1f4
   1455c:	movt	r1, #2
   14560:	ldr	r0, [r1]
   14564:	cmp	r0, #0
   14568:	beq	145d8 <__assert_fail@plt+0x2660>
   1456c:	mov	r2, r1
   14570:	ldr	r1, [sl, #12]
   14574:	ldr	r3, [sl, #16]
   14578:	str	r7, [sp, #8]
   1457c:	mov	r4, r2
   14580:	b	14590 <__assert_fail@plt+0x2618>
   14584:	ldr	r0, [r4, #16]!
   14588:	cmp	r0, #0
   1458c:	beq	145d0 <__assert_fail@plt+0x2658>
   14590:	ldr	r2, [r4, #4]
   14594:	cmp	r2, r3
   14598:	bne	14584 <__assert_fail@plt+0x260c>
   1459c:	mov	r8, sl
   145a0:	mov	r7, r9
   145a4:	mov	sl, r1
   145a8:	mov	r9, r3
   145ac:	bl	11ab0 <strcmp@plt>
   145b0:	mov	r3, r9
   145b4:	mov	r9, r7
   145b8:	ldr	r7, [sp, #8]
   145bc:	mov	r1, sl
   145c0:	mov	sl, r8
   145c4:	cmp	r0, #0
   145c8:	bne	14584 <__assert_fail@plt+0x260c>
   145cc:	b	14658 <__assert_fail@plt+0x26e0>
   145d0:	mov	r4, #0
   145d4:	b	145dc <__assert_fail@plt+0x2664>
   145d8:	ldr	r1, [sl, #12]
   145dc:	str	r4, [sl, #44]	; 0x2c
   145e0:	mov	r0, #3
   145e4:	ldr	r3, [r7]
   145e8:	str	r1, [sp]
   145ec:	movw	r1, #55277	; 0xd7ed
   145f0:	movt	r1, #1
   145f4:	b	14610 <__assert_fail@plt+0x2698>
   145f8:	ldr	r0, [sl, #12]
   145fc:	ldr	r3, [r7]
   14600:	movw	r1, #55222	; 0xd7b6
   14604:	movt	r1, #1
   14608:	str	r0, [sp]
   1460c:	mov	r0, #3
   14610:	ldr	r2, [sp, #12]
   14614:	bl	11e64 <syslog@plt>
   14618:	ldr	r1, [sp, #20]
   1461c:	ldr	r0, [sp, #24]
   14620:	mov	r4, #0
   14624:	add	r8, sp, #24
   14628:	b	13f20 <__assert_fail@plt+0x1fa8>
   1462c:	movw	r0, #55713	; 0xd9a1
   14630:	movt	r0, #1
   14634:	bl	11bc4 <strdup@plt>
   14638:	cmp	r0, #0
   1463c:	mov	r4, #0
   14640:	bne	14518 <__assert_fail@plt+0x25a0>
   14644:	b	14770 <__assert_fail@plt+0x27f8>
   14648:	mov	sl, #0
   1464c:	mov	r0, sl
   14650:	sub	sp, fp, #28
   14654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14658:	ldrsh	r1, [r4, #10]
   1465c:	movw	r0, #62416	; 0xf3d0
   14660:	movt	r0, #2
   14664:	str	r4, [r0, #44]	; 0x2c
   14668:	str	r1, [r0, #24]
   1466c:	ldr	r0, [sp, #24]
   14670:	sub	r1, r0, #5
   14674:	sub	r0, r0, #4
   14678:	str	r1, [sl, #56]	; 0x38
   1467c:	mov	r1, #4
   14680:	bl	180e0 <argp_parse@@Base+0x19bc>
   14684:	cmp	r0, #0
   14688:	str	r0, [sl, #52]	; 0x34
   1468c:	beq	14788 <__assert_fail@plt+0x2810>
   14690:	ldr	r1, [sl, #56]	; 0x38
   14694:	mov	r6, #0
   14698:	mov	r7, #0
   1469c:	cmp	r1, #0
   146a0:	beq	1474c <__assert_fail@plt+0x27d4>
   146a4:	ldr	r2, [sp, #20]
   146a8:	mov	r7, #1
   146ac:	cmp	r1, #1
   146b0:	ldr	r3, [r2, #24]
   146b4:	str	r3, [r0]
   146b8:	mov	r0, #0
   146bc:	str	r0, [r2, #24]
   146c0:	beq	14704 <__assert_fail@plt+0x278c>
   146c4:	mov	r2, #0
   146c8:	ldr	r7, [sp, #20]
   146cc:	ldr	r3, [sl, #52]	; 0x34
   146d0:	add	r7, r7, r2, lsl #2
   146d4:	add	r3, r3, r2, lsl #2
   146d8:	ldr	r7, [r7, #28]
   146dc:	str	r7, [r3, #4]
   146e0:	ldr	r3, [sp, #20]
   146e4:	add	r3, r3, r2, lsl #2
   146e8:	str	r0, [r3, #28]
   146ec:	add	r3, r2, #1
   146f0:	add	r2, r2, #2
   146f4:	cmp	r2, r1
   146f8:	mov	r2, r3
   146fc:	bcc	146c8 <__assert_fail@plt+0x2750>
   14700:	add	r7, r3, #1
   14704:	cmp	r1, #1
   14708:	bne	1474c <__assert_fail@plt+0x27d4>
   1470c:	ldr	r5, [sl, #48]	; 0x30
   14710:	mov	r1, #47	; 0x2f
   14714:	mov	r0, r5
   14718:	bl	11e34 <strrchr@plt>
   1471c:	cmp	r0, #0
   14720:	addne	r5, r0, #1
   14724:	movw	r0, #55713	; 0xd9a1
   14728:	movt	r0, #1
   1472c:	cmp	r5, #0
   14730:	moveq	r5, r0
   14734:	mov	r0, r5
   14738:	bl	11bc4 <strdup@plt>
   1473c:	cmp	r0, #0
   14740:	beq	14770 <__assert_fail@plt+0x27f8>
   14744:	ldr	r1, [sl, #52]	; 0x34
   14748:	str	r0, [r1]
   1474c:	ldr	r0, [sl, #52]	; 0x34
   14750:	str	r6, [r0, r7, lsl #2]
   14754:	ldr	r1, [sp, #20]
   14758:	ldr	r0, [sp, #24]
   1475c:	bl	1642c <__assert_fail@plt+0x44b4>
   14760:	b	13ed8 <__assert_fail@plt+0x1f60>
   14764:	mov	r0, #0
   14768:	str	r0, [sl, #44]	; 0x2c
   1476c:	b	1466c <__assert_fail@plt+0x26f4>
   14770:	movw	r1, #54487	; 0xd4d7
   14774:	mov	r0, #3
   14778:	movt	r1, #1
   1477c:	bl	11e64 <syslog@plt>
   14780:	mvn	r0, #0
   14784:	bl	11d08 <exit@plt>
   14788:	ldr	r3, [r7]
   1478c:	ldr	r2, [sp, #12]
   14790:	movw	r1, #55313	; 0xd811
   14794:	mov	r0, #3
   14798:	movt	r1, #1
   1479c:	bl	11e64 <syslog@plt>
   147a0:	mvn	r0, #0
   147a4:	bl	11d08 <exit@plt>
   147a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147ac:	add	fp, sp, #28
   147b0:	sub	sp, sp, #324	; 0x144
   147b4:	movw	r1, #54324	; 0xd434
   147b8:	mov	r4, r0
   147bc:	mov	r0, #0
   147c0:	movt	r1, #1
   147c4:	str	r0, [sp, #60]	; 0x3c
   147c8:	mov	r0, r4
   147cc:	bl	11ec4 <fopen64@plt>
   147d0:	cmp	r0, #0
   147d4:	beq	14b3c <__assert_fail@plt+0x2bc4>
   147d8:	add	r2, sp, #60	; 0x3c
   147dc:	mov	r1, r4
   147e0:	mov	r5, r0
   147e4:	bl	13ea0 <__assert_fail@plt+0x1f28>
   147e8:	cmp	r0, #0
   147ec:	beq	14910 <__assert_fail@plt+0x2998>
   147f0:	movw	r9, #55336	; 0xd828
   147f4:	movw	sl, #62992	; 0xf610
   147f8:	mov	r6, r0
   147fc:	add	r7, sp, #60	; 0x3c
   14800:	movt	r9, #1
   14804:	movt	sl, #2
   14808:	b	14844 <__assert_fail@plt+0x28cc>
   1480c:	ldr	r0, [r6, #36]	; 0x24
   14810:	ldr	r2, [r6, #12]
   14814:	ldr	r3, [r6, #20]
   14818:	mov	r1, r9
   1481c:	str	r0, [sp]
   14820:	mov	r0, #3
   14824:	bl	11e64 <syslog@plt>
   14828:	mov	r0, r5
   1482c:	mov	r1, r4
   14830:	mov	r2, r7
   14834:	bl	13ea0 <__assert_fail@plt+0x1f28>
   14838:	mov	r6, r0
   1483c:	cmp	r0, #0
   14840:	beq	14910 <__assert_fail@plt+0x2998>
   14844:	ldr	r0, [r6, #36]	; 0x24
   14848:	bl	11aa4 <getpwnam@plt>
   1484c:	cmp	r0, #0
   14850:	beq	1480c <__assert_fail@plt+0x2894>
   14854:	ldr	r0, [r6, #40]	; 0x28
   14858:	cmp	r0, #0
   1485c:	beq	14878 <__assert_fail@plt+0x2900>
   14860:	ldrb	r1, [r0]
   14864:	cmp	r1, #0
   14868:	beq	14878 <__assert_fail@plt+0x2900>
   1486c:	bl	11f60 <getgrnam@plt>
   14870:	cmp	r0, #0
   14874:	beq	148f8 <__assert_fail@plt+0x2980>
   14878:	ldr	r0, [r6, #64]	; 0x40
   1487c:	sub	r0, r0, #1
   14880:	cmp	r0, #1
   14884:	bhi	148a4 <__assert_fail@plt+0x292c>
   14888:	mov	r0, #1
   1488c:	strh	r0, [r6, #32]
   14890:	mvn	r0, #0
   14894:	str	r0, [r6, #60]	; 0x3c
   14898:	mov	r0, r6
   1489c:	bl	133fc <__assert_fail@plt+0x1484>
   148a0:	b	148ac <__assert_fail@plt+0x2934>
   148a4:	mov	r0, r6
   148a8:	bl	13af8 <__assert_fail@plt+0x1b80>
   148ac:	ldr	r0, [r6, #8]
   148b0:	ldr	r8, [sl]
   148b4:	bl	17a00 <argp_parse@@Base+0x12dc>
   148b8:	cmp	r8, #0
   148bc:	bne	14828 <__assert_fail@plt+0x28b0>
   148c0:	ldr	r0, [r6, #12]
   148c4:	bl	17a00 <argp_parse@@Base+0x12dc>
   148c8:	ldr	r0, [r6, #20]
   148cc:	bl	17a00 <argp_parse@@Base+0x12dc>
   148d0:	ldr	r0, [r6, #36]	; 0x24
   148d4:	bl	17a00 <argp_parse@@Base+0x12dc>
   148d8:	ldr	r0, [r6, #40]	; 0x28
   148dc:	bl	17a00 <argp_parse@@Base+0x12dc>
   148e0:	ldr	r0, [r6, #48]	; 0x30
   148e4:	bl	17a00 <argp_parse@@Base+0x12dc>
   148e8:	ldr	r1, [r6, #52]	; 0x34
   148ec:	ldr	r0, [r6, #56]	; 0x38
   148f0:	bl	1642c <__assert_fail@plt+0x44b4>
   148f4:	b	14828 <__assert_fail@plt+0x28b0>
   148f8:	ldr	r0, [r6, #40]	; 0x28
   148fc:	ldr	r2, [r6, #12]
   14900:	ldr	r3, [r6, #20]
   14904:	movw	r1, #55378	; 0xd852
   14908:	movt	r1, #1
   1490c:	b	1481c <__assert_fail@plt+0x28a4>
   14910:	mov	r0, r5
   14914:	bl	11dec <fclose@plt>
   14918:	sub	r4, fp, #160	; 0xa0
   1491c:	mov	r0, r4
   14920:	bl	11e10 <sigemptyset@plt>
   14924:	mov	r0, r4
   14928:	mov	r1, #17
   1492c:	bl	11cb4 <sigaddset@plt>
   14930:	mov	r0, r4
   14934:	mov	r1, #1
   14938:	mov	r6, #1
   1493c:	bl	11cb4 <sigaddset@plt>
   14940:	mov	r0, r4
   14944:	mov	r1, #14
   14948:	bl	11cb4 <sigaddset@plt>
   1494c:	add	r2, sp, #64	; 0x40
   14950:	mov	r0, #0
   14954:	mov	r1, r4
   14958:	mov	r7, #0
   1495c:	bl	11b10 <sigprocmask@plt>
   14960:	movw	r5, #63000	; 0xf618
   14964:	movt	r5, #2
   14968:	ldr	r4, [r5]
   1496c:	cmp	r4, #0
   14970:	beq	14b24 <__assert_fail@plt+0x2bac>
   14974:	movw	sl, #62968	; 0xf5f8
   14978:	movw	r8, #62836	; 0xf574
   1497c:	movw	r9, #62400	; 0xf3c0
   14980:	movt	sl, #2
   14984:	movt	r8, #2
   14988:	movt	r9, #2
   1498c:	ldrh	r0, [r4, #32]
   14990:	cmp	r0, #0
   14994:	bne	14a8c <__assert_fail@plt+0x2b14>
   14998:	ldr	r0, [r4, #220]	; 0xdc
   1499c:	str	r0, [r5]
   149a0:	ldr	r0, [r4, #60]	; 0x3c
   149a4:	cmp	r0, #0
   149a8:	bmi	149e8 <__assert_fail@plt+0x2a70>
   149ac:	ldr	r1, [sl]
   149b0:	and	r3, r0, #31
   149b4:	sub	r1, r1, #1
   149b8:	str	r1, [sl]
   149bc:	lsr	r1, r0, #5
   149c0:	ldr	r2, [r8, r1, lsl #2]
   149c4:	bic	r2, r2, r6, lsl r3
   149c8:	str	r2, [r8, r1, lsl #2]
   149cc:	bl	11f48 <close@plt>
   149d0:	mvn	r0, #0
   149d4:	str	r7, [r4, #208]	; 0xd0
   149d8:	str	r0, [r4, #60]	; 0x3c
   149dc:	ldr	r0, [r4, #24]
   149e0:	cmp	r0, #2
   149e4:	strge	r6, [r4, #24]
   149e8:	ldrb	r0, [r9]
   149ec:	cmp	r0, #0
   149f0:	bne	14a48 <__assert_fail@plt+0x2ad0>
   149f4:	ldr	r0, [r4, #8]
   149f8:	bl	17a00 <argp_parse@@Base+0x12dc>
   149fc:	ldr	r0, [r4, #12]
   14a00:	bl	17a00 <argp_parse@@Base+0x12dc>
   14a04:	ldr	r0, [r4, #20]
   14a08:	bl	17a00 <argp_parse@@Base+0x12dc>
   14a0c:	ldr	r0, [r4, #36]	; 0x24
   14a10:	bl	17a00 <argp_parse@@Base+0x12dc>
   14a14:	ldr	r0, [r4, #40]	; 0x28
   14a18:	bl	17a00 <argp_parse@@Base+0x12dc>
   14a1c:	ldr	r0, [r4, #48]	; 0x30
   14a20:	bl	17a00 <argp_parse@@Base+0x12dc>
   14a24:	ldr	r1, [r4, #52]	; 0x34
   14a28:	ldr	r0, [r4, #56]	; 0x38
   14a2c:	bl	1642c <__assert_fail@plt+0x44b4>
   14a30:	mov	r0, r4
   14a34:	bl	17a00 <argp_parse@@Base+0x12dc>
   14a38:	ldr	r4, [r5]
   14a3c:	cmp	r4, #0
   14a40:	bne	1498c <__assert_fail@plt+0x2a14>
   14a44:	b	14b24 <__assert_fail@plt+0x2bac>
   14a48:	movw	r0, #62384	; 0xf3b0
   14a4c:	ldm	r4, {r2, r7}
   14a50:	str	r7, [sp, #48]	; 0x30
   14a54:	movt	r0, #2
   14a58:	ldr	r3, [r0]
   14a5c:	ldr	r0, [r4, #64]	; 0x40
   14a60:	str	r2, [sp, #56]	; 0x38
   14a64:	sub	r1, r0, #1
   14a68:	str	r3, [sp, #52]	; 0x34
   14a6c:	cmp	r1, #1
   14a70:	bhi	14a94 <__assert_fail@plt+0x2b1c>
   14a74:	movw	r1, #55430	; 0xd886
   14a78:	cmp	r0, #2
   14a7c:	movw	r0, #54592	; 0xd540
   14a80:	movt	r1, #1
   14a84:	movt	r0, #1
   14a88:	b	14aa4 <__assert_fail@plt+0x2b2c>
   14a8c:	add	r5, r4, #220	; 0xdc
   14a90:	b	14a38 <__assert_fail@plt+0x2ac0>
   14a94:	ldr	r1, [r4, #8]
   14a98:	movw	r0, #54603	; 0xd54b
   14a9c:	movt	r0, #1
   14aa0:	cmp	r1, #0
   14aa4:	moveq	r1, r0
   14aa8:	ldr	r0, [r4, #40]	; 0x28
   14aac:	movw	lr, #54605	; 0xd54d
   14ab0:	ldr	r7, [r4, #36]	; 0x24
   14ab4:	ldr	r6, [r4, #12]
   14ab8:	ldr	ip, [r4, #20]
   14abc:	ldr	r2, [r4, #24]
   14ac0:	ldr	r3, [r4, #28]
   14ac4:	movt	lr, #1
   14ac8:	str	r0, [sp, #44]	; 0x2c
   14acc:	ldr	r0, [r4, #44]	; 0x2c
   14ad0:	cmp	r0, #0
   14ad4:	ldrne	lr, [r0]
   14ad8:	ldr	r0, [r4, #48]	; 0x30
   14adc:	str	r0, [sp, #36]	; 0x24
   14ae0:	movw	r0, #55421	; 0xd87d
   14ae4:	str	lr, [sp, #32]
   14ae8:	movt	r0, #1
   14aec:	stm	sp, {r0, r1, r6, ip}
   14af0:	add	r0, sp, #16
   14af4:	movw	r1, #54509	; 0xd4ed
   14af8:	stm	r0, {r2, r3, r7}
   14afc:	ldr	r0, [sp, #44]	; 0x2c
   14b00:	ldr	r2, [sp, #56]	; 0x38
   14b04:	ldr	r3, [sp, #48]	; 0x30
   14b08:	movt	r1, #1
   14b0c:	str	r0, [sp, #28]
   14b10:	ldr	r0, [sp, #52]	; 0x34
   14b14:	bl	11d5c <fprintf@plt>
   14b18:	mov	r7, #0
   14b1c:	mov	r6, #1
   14b20:	b	149f4 <__assert_fail@plt+0x2a7c>
   14b24:	add	r1, sp, #64	; 0x40
   14b28:	mov	r0, #2
   14b2c:	mov	r2, #0
   14b30:	bl	11b10 <sigprocmask@plt>
   14b34:	sub	sp, fp, #28
   14b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b3c:	movw	r1, #54416	; 0xd490
   14b40:	mov	r0, #3
   14b44:	mov	r2, r4
   14b48:	movt	r1, #1
   14b4c:	bl	11e64 <syslog@plt>
   14b50:	sub	sp, fp, #28
   14b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b5c:	add	fp, sp, #24
   14b60:	sub	sp, sp, #224	; 0xe0
   14b64:	movw	r0, #63000	; 0xf618
   14b68:	movt	r0, #2
   14b6c:	ldr	r5, [r0]
   14b70:	cmp	r5, #0
   14b74:	beq	14d44 <__assert_fail@plt+0x2dcc>
   14b78:	movw	r4, #55430	; 0xd886
   14b7c:	mov	r6, #0
   14b80:	mov	r7, #0
   14b84:	movt	r4, #1
   14b88:	b	14bac <__assert_fail@plt+0x2c34>
   14b8c:	ldr	r0, [r5, #12]
   14b90:	mov	r1, r4
   14b94:	bl	11ab0 <strcmp@plt>
   14b98:	cmp	r0, #0
   14b9c:	beq	14bd8 <__assert_fail@plt+0x2c60>
   14ba0:	ldr	r5, [r5, #220]	; 0xdc
   14ba4:	cmp	r5, #0
   14ba8:	beq	14bec <__assert_fail@plt+0x2c74>
   14bac:	ldrh	r0, [r5, #32]
   14bb0:	cmp	r0, #0
   14bb4:	beq	14ba0 <__assert_fail@plt+0x2c28>
   14bb8:	ldr	r0, [r5, #64]	; 0x40
   14bbc:	sub	r0, r0, #1
   14bc0:	cmp	r0, #1
   14bc4:	bhi	14b8c <__assert_fail@plt+0x2c14>
   14bc8:	mov	r7, #1
   14bcc:	cmp	r6, #0
   14bd0:	beq	14b8c <__assert_fail@plt+0x2c14>
   14bd4:	b	14d44 <__assert_fail@plt+0x2dcc>
   14bd8:	cmp	r7, #0
   14bdc:	bne	14d44 <__assert_fail@plt+0x2dcc>
   14be0:	mov	r6, #1
   14be4:	mov	r7, #0
   14be8:	b	14ba0 <__assert_fail@plt+0x2c28>
   14bec:	cmp	r7, #0
   14bf0:	beq	14d44 <__assert_fail@plt+0x2dcc>
   14bf4:	cmp	r6, #0
   14bf8:	bne	14d44 <__assert_fail@plt+0x2dcc>
   14bfc:	mov	r0, sp
   14c00:	mov	r1, #0
   14c04:	mov	r2, #220	; 0xdc
   14c08:	add	r0, r0, #4
   14c0c:	bl	11da4 <memset@plt>
   14c10:	movw	r0, #55426	; 0xd882
   14c14:	movt	r0, #1
   14c18:	str	r0, [sp]
   14c1c:	movw	r0, #55430	; 0xd886
   14c20:	movt	r0, #1
   14c24:	bl	11bc4 <strdup@plt>
   14c28:	cmp	r0, #0
   14c2c:	beq	14e04 <__assert_fail@plt+0x2e8c>
   14c30:	mov	r4, r0
   14c34:	mov	r0, #1
   14c38:	strh	r0, [sp, #32]
   14c3c:	str	r0, [sp, #16]
   14c40:	movw	r0, #55437	; 0xd88d
   14c44:	str	r4, [sp, #12]
   14c48:	movt	r0, #1
   14c4c:	bl	11bc4 <strdup@plt>
   14c50:	cmp	r0, #0
   14c54:	beq	14e04 <__assert_fail@plt+0x2e8c>
   14c58:	mov	r5, r0
   14c5c:	str	r0, [sp, #36]	; 0x24
   14c60:	movw	r0, #55713	; 0xd9a1
   14c64:	movt	r0, #1
   14c68:	bl	11bc4 <strdup@plt>
   14c6c:	cmp	r0, #0
   14c70:	beq	14e04 <__assert_fail@plt+0x2e8c>
   14c74:	movw	r7, #61940	; 0xf1f4
   14c78:	mov	r6, r0
   14c7c:	str	r0, [sp, #40]	; 0x28
   14c80:	movt	r7, #2
   14c84:	ldr	r0, [r7]
   14c88:	cmp	r0, #0
   14c8c:	bne	14ca0 <__assert_fail@plt+0x2d28>
   14c90:	b	14d4c <__assert_fail@plt+0x2dd4>
   14c94:	ldr	r0, [r7, #16]!
   14c98:	cmp	r0, #0
   14c9c:	beq	14d4c <__assert_fail@plt+0x2dd4>
   14ca0:	ldr	r1, [r7, #4]
   14ca4:	cmp	r1, #1
   14ca8:	bne	14c94 <__assert_fail@plt+0x2d1c>
   14cac:	mov	r1, r4
   14cb0:	bl	11ab0 <strcmp@plt>
   14cb4:	cmp	r0, #0
   14cb8:	bne	14c94 <__assert_fail@plt+0x2d1c>
   14cbc:	ldrsh	r0, [r7, #10]
   14cc0:	str	r7, [sp, #44]	; 0x2c
   14cc4:	str	r0, [sp, #24]
   14cc8:	movw	r0, #55268	; 0xd7e4
   14ccc:	movt	r0, #1
   14cd0:	bl	11bc4 <strdup@plt>
   14cd4:	cmp	r0, #0
   14cd8:	beq	14e04 <__assert_fail@plt+0x2e8c>
   14cdc:	mov	r1, #0
   14ce0:	str	r1, [sp, #64]	; 0x40
   14ce4:	mvn	r1, #0
   14ce8:	str	r1, [sp, #60]	; 0x3c
   14cec:	str	r0, [sp, #48]	; 0x30
   14cf0:	movw	r0, #55489	; 0xd8c1
   14cf4:	movt	r0, #1
   14cf8:	bl	11bc4 <strdup@plt>
   14cfc:	cmp	r0, #0
   14d00:	beq	14e04 <__assert_fail@plt+0x2e8c>
   14d04:	mov	r1, #1
   14d08:	strb	r1, [sp, #70]	; 0x46
   14d0c:	mov	r1, #10
   14d10:	strh	r1, [sp, #68]	; 0x44
   14d14:	str	r0, [sp, #20]
   14d18:	movw	r0, #62400	; 0xf3c0
   14d1c:	movt	r0, #2
   14d20:	ldrb	r0, [r0]
   14d24:	cmp	r0, #0
   14d28:	bne	14de0 <__assert_fail@plt+0x2e68>
   14d2c:	movw	r1, #55526	; 0xd8e6
   14d30:	mov	r0, #6
   14d34:	movt	r1, #1
   14d38:	bl	11e64 <syslog@plt>
   14d3c:	mov	r0, sp
   14d40:	bl	13af8 <__assert_fail@plt+0x1b80>
   14d44:	sub	sp, fp, #24
   14d48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d4c:	mov	r0, #0
   14d50:	str	r0, [sp, #44]	; 0x2c
   14d54:	mov	r0, #0
   14d58:	bl	17a00 <argp_parse@@Base+0x12dc>
   14d5c:	mov	r0, r4
   14d60:	bl	17a00 <argp_parse@@Base+0x12dc>
   14d64:	mov	r0, #0
   14d68:	bl	17a00 <argp_parse@@Base+0x12dc>
   14d6c:	mov	r0, r5
   14d70:	bl	17a00 <argp_parse@@Base+0x12dc>
   14d74:	mov	r0, r6
   14d78:	bl	17a00 <argp_parse@@Base+0x12dc>
   14d7c:	mov	r0, #0
   14d80:	bl	17a00 <argp_parse@@Base+0x12dc>
   14d84:	mov	r0, #0
   14d88:	mov	r1, #0
   14d8c:	bl	1642c <__assert_fail@plt+0x44b4>
   14d90:	movw	r0, #62400	; 0xf3c0
   14d94:	movt	r0, #2
   14d98:	ldrb	r0, [r0]
   14d9c:	cmp	r0, #0
   14da0:	bne	14dbc <__assert_fail@plt+0x2e44>
   14da4:	movw	r1, #55442	; 0xd892
   14da8:	mov	r0, #3
   14dac:	movt	r1, #1
   14db0:	bl	11e64 <syslog@plt>
   14db4:	sub	sp, fp, #24
   14db8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14dbc:	movw	r0, #62384	; 0xf3b0
   14dc0:	mov	r1, #46	; 0x2e
   14dc4:	mov	r2, #1
   14dc8:	movt	r0, #2
   14dcc:	ldr	r3, [r0]
   14dd0:	movw	r0, #55442	; 0xd892
   14dd4:	movt	r0, #1
   14dd8:	bl	11c48 <fwrite@plt>
   14ddc:	b	14da4 <__assert_fail@plt+0x2e2c>
   14de0:	movw	r0, #62384	; 0xf3b0
   14de4:	mov	r1, #31
   14de8:	mov	r2, #1
   14dec:	movt	r0, #2
   14df0:	ldr	r3, [r0]
   14df4:	movw	r0, #55494	; 0xd8c6
   14df8:	movt	r0, #1
   14dfc:	bl	11c48 <fwrite@plt>
   14e00:	b	14d2c <__assert_fail@plt+0x2db4>
   14e04:	movw	r1, #54487	; 0xd4d7
   14e08:	mov	r0, #3
   14e0c:	movt	r1, #1
   14e10:	bl	11e64 <syslog@plt>
   14e14:	mvn	r0, #0
   14e18:	bl	11d08 <exit@plt>
   14e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e20:	add	fp, sp, #28
   14e24:	sub	sp, sp, #220	; 0xdc
   14e28:	mov	r9, r0
   14e2c:	movw	r0, #63000	; 0xf618
   14e30:	movt	r0, #2
   14e34:	ldr	r0, [r0]
   14e38:	cmp	r0, #0
   14e3c:	beq	14e54 <__assert_fail@plt+0x2edc>
   14e40:	mov	r1, #0
   14e44:	strh	r1, [r0, #32]
   14e48:	ldr	r0, [r0, #220]	; 0xdc
   14e4c:	cmp	r0, #0
   14e50:	bne	14e44 <__assert_fail@plt+0x2ecc>
   14e54:	movw	sl, #62996	; 0xf614
   14e58:	movt	sl, #2
   14e5c:	ldr	r0, [sl]
   14e60:	ldr	r1, [r0]
   14e64:	cmp	r1, #0
   14e68:	beq	15014 <__assert_fail@plt+0x309c>
   14e6c:	movw	r7, #54416	; 0xd490
   14e70:	mov	r4, #0
   14e74:	add	r5, sp, #8
   14e78:	str	r9, [sp, #4]
   14e7c:	movt	r7, #1
   14e80:	b	14ea4 <__assert_fail@plt+0x2f2c>
   14e84:	ldr	r0, [sl]
   14e88:	ldr	r0, [r0, r4, lsl #2]
   14e8c:	bl	147a8 <__assert_fail@plt+0x2830>
   14e90:	ldr	r0, [sl]
   14e94:	add	r4, r4, #1
   14e98:	ldr	r1, [r0, r4, lsl #2]
   14e9c:	cmp	r1, #0
   14ea0:	beq	15014 <__assert_fail@plt+0x309c>
   14ea4:	mov	r0, #3
   14ea8:	mov	r2, r5
   14eac:	bl	11f0c <__xstat64@plt>
   14eb0:	cmp	r0, #0
   14eb4:	beq	14ed8 <__assert_fail@plt+0x2f60>
   14eb8:	cmp	r9, #0
   14ebc:	beq	14fd8 <__assert_fail@plt+0x3060>
   14ec0:	ldr	r0, [sl]
   14ec4:	mov	r1, r7
   14ec8:	ldr	r2, [r0, r4, lsl #2]
   14ecc:	mov	r0, #3
   14ed0:	bl	11e64 <syslog@plt>
   14ed4:	b	14e90 <__assert_fail@plt+0x2f18>
   14ed8:	ldr	r0, [sp, #24]
   14edc:	and	r0, r0, #61440	; 0xf000
   14ee0:	cmp	r0, #32768	; 0x8000
   14ee4:	beq	14e84 <__assert_fail@plt+0x2f0c>
   14ee8:	cmp	r0, #16384	; 0x4000
   14eec:	bne	14e90 <__assert_fail@plt+0x2f18>
   14ef0:	ldr	r0, [sl]
   14ef4:	ldr	r0, [r0, r4, lsl #2]
   14ef8:	bl	11c78 <opendir@plt>
   14efc:	cmp	r0, #0
   14f00:	beq	14e90 <__assert_fail@plt+0x2f18>
   14f04:	mov	r6, r0
   14f08:	bl	11e88 <readdir64@plt>
   14f0c:	cmp	r0, #0
   14f10:	beq	14fbc <__assert_fail@plt+0x3044>
   14f14:	mov	r7, r0
   14f18:	b	14f38 <__assert_fail@plt+0x2fc0>
   14f1c:	mov	r0, r8
   14f20:	bl	17a00 <argp_parse@@Base+0x12dc>
   14f24:	mov	r0, r6
   14f28:	bl	11e88 <readdir64@plt>
   14f2c:	mov	r7, r0
   14f30:	cmp	r0, #0
   14f34:	beq	14fbc <__assert_fail@plt+0x3044>
   14f38:	ldr	r0, [sl]
   14f3c:	ldr	r0, [r0, r4, lsl #2]
   14f40:	bl	11d2c <strlen@plt>
   14f44:	add	r9, r7, #19
   14f48:	mov	r5, r0
   14f4c:	mov	r0, r9
   14f50:	bl	11d2c <strlen@plt>
   14f54:	add	r0, r5, r0
   14f58:	mov	r1, #1
   14f5c:	add	r0, r0, #2
   14f60:	bl	180e0 <argp_parse@@Base+0x19bc>
   14f64:	cmp	r0, #0
   14f68:	beq	14f24 <__assert_fail@plt+0x2fac>
   14f6c:	mov	r8, r0
   14f70:	ldr	r0, [sl]
   14f74:	movw	r1, #55557	; 0xd905
   14f78:	mov	r3, r9
   14f7c:	movt	r1, #1
   14f80:	ldr	r2, [r0, r4, lsl #2]
   14f84:	mov	r0, r8
   14f88:	bl	11e7c <sprintf@plt>
   14f8c:	mov	r0, #3
   14f90:	mov	r1, r8
   14f94:	add	r2, sp, #112	; 0x70
   14f98:	bl	11f0c <__xstat64@plt>
   14f9c:	cmp	r0, #0
   14fa0:	bne	14f1c <__assert_fail@plt+0x2fa4>
   14fa4:	ldr	r0, [sp, #128]	; 0x80
   14fa8:	and	r0, r0, #61440	; 0xf000
   14fac:	cmp	r0, #32768	; 0x8000
   14fb0:	moveq	r0, r8
   14fb4:	bleq	147a8 <__assert_fail@plt+0x2830>
   14fb8:	b	14f1c <__assert_fail@plt+0x2fa4>
   14fbc:	mov	r0, r6
   14fc0:	bl	11f54 <closedir@plt>
   14fc4:	ldr	r9, [sp, #4]
   14fc8:	movw	r7, #54416	; 0xd490
   14fcc:	add	r5, sp, #8
   14fd0:	movt	r7, #1
   14fd4:	b	14e90 <__assert_fail@plt+0x2f18>
   14fd8:	ldr	r0, [sl]
   14fdc:	ldr	r8, [r0, r4, lsl #2]
   14fe0:	movw	r0, #62384	; 0xf3b0
   14fe4:	movt	r0, #2
   14fe8:	ldr	r6, [r0]
   14fec:	bl	11d74 <__errno_location@plt>
   14ff0:	ldr	r0, [r0]
   14ff4:	bl	11ccc <strerror@plt>
   14ff8:	movw	r1, #55563	; 0xd90b
   14ffc:	mov	r3, r0
   15000:	mov	r0, r6
   15004:	mov	r2, r8
   15008:	movt	r1, #1
   1500c:	bl	11d5c <fprintf@plt>
   15010:	b	14e90 <__assert_fail@plt+0x2f18>
   15014:	movw	r4, #62404	; 0xf3c4
   15018:	movt	r4, #2
   1501c:	ldr	r0, [r4]
   15020:	bl	17a00 <argp_parse@@Base+0x12dc>
   15024:	movw	r0, #62408	; 0xf3c8
   15028:	mov	r1, #0
   1502c:	movt	r0, #2
   15030:	str	r1, [r4]
   15034:	str	r1, [r0]
   15038:	bl	14b58 <__assert_fail@plt+0x2be0>
   1503c:	sub	sp, fp, #28
   15040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15044:	push	{r4, r5, r6, sl, fp, lr}
   15048:	add	fp, sp, #16
   1504c:	sub	sp, sp, #304	; 0x130
   15050:	mov	r5, r0
   15054:	movw	r0, #62976	; 0xf600
   15058:	mov	r3, r1
   1505c:	sub	r1, fp, #148	; 0x94
   15060:	sub	r2, fp, #20
   15064:	movt	r0, #2
   15068:	ldr	r0, [r0]
   1506c:	ldr	r4, [r0]
   15070:	mov	r0, #128	; 0x80
   15074:	str	r0, [fp, #-20]	; 0xffffffec
   15078:	mov	r0, r3
   1507c:	bl	11edc <getpeername@plt>
   15080:	cmp	r0, #0
   15084:	bne	150bc <__assert_fail@plt+0x3144>
   15088:	mov	r1, #0
   1508c:	mov	r0, #1
   15090:	add	r6, sp, #12
   15094:	mov	r3, #80	; 0x50
   15098:	str	r0, [sp, #8]
   1509c:	str	r1, [sp]
   150a0:	str	r1, [sp, #4]
   150a4:	sub	r0, fp, #148	; 0x94
   150a8:	mov	r1, #128	; 0x80
   150ac:	mov	r2, r6
   150b0:	bl	11e28 <getnameinfo@plt>
   150b4:	cmp	r0, #0
   150b8:	beq	15120 <__assert_fail@plt+0x31a8>
   150bc:	movw	r2, #58994	; 0xe672
   150c0:	add	r0, sp, #92	; 0x5c
   150c4:	movt	r2, #1
   150c8:	mov	r1, #80	; 0x50
   150cc:	mov	r3, r5
   150d0:	bl	11d80 <snprintf@plt>
   150d4:	movw	r5, #62980	; 0xf604
   150d8:	add	r1, sp, #92	; 0x5c
   150dc:	movt	r5, #2
   150e0:	ldr	r0, [r5]
   150e4:	sub	r2, r0, r4
   150e8:	mov	r0, r4
   150ec:	bl	11db0 <strncpy@plt>
   150f0:	bl	11d2c <strlen@plt>
   150f4:	ldr	r1, [r5]
   150f8:	add	r0, r4, r0
   150fc:	cmp	r0, r1
   15100:	bcs	15118 <__assert_fail@plt+0x31a0>
   15104:	mov	r1, #32
   15108:	strb	r1, [r0], #1
   1510c:	ldr	r2, [r5]
   15110:	cmp	r0, r2
   15114:	bcc	15108 <__assert_fail@plt+0x3190>
   15118:	sub	sp, fp, #16
   1511c:	pop	{r4, r5, r6, sl, fp, pc}
   15120:	movw	r2, #55578	; 0xd91a
   15124:	str	r6, [sp]
   15128:	add	r0, sp, #92	; 0x5c
   1512c:	movt	r2, #1
   15130:	b	150c8 <__assert_fail@plt+0x3150>
   15134:	push	{r4, r5, fp, lr}
   15138:	add	fp, sp, #8
   1513c:	movw	r4, #62964	; 0xf5f4
   15140:	movw	r0, #62704	; 0xf4f0
   15144:	mov	r5, #0
   15148:	movt	r4, #2
   1514c:	movt	r0, #2
   15150:	str	r0, [r4]
   15154:	bl	11cf0 <__ctype_b_loc@plt>
   15158:	mov	r1, #0
   1515c:	b	15170 <__assert_fail@plt+0x31f8>
   15160:	add	r1, r1, #1
   15164:	add	r5, r5, #2
   15168:	cmp	r1, #129	; 0x81
   1516c:	beq	15198 <__assert_fail@plt+0x3220>
   15170:	ldr	r2, [r0]
   15174:	add	r2, r2, r5
   15178:	ldrb	r2, [r2, #1]
   1517c:	tst	r2, #64	; 0x40
   15180:	beq	15160 <__assert_fail@plt+0x31e8>
   15184:	ldr	r2, [r4]
   15188:	add	r3, r2, #1
   1518c:	str	r3, [r4]
   15190:	strb	r1, [r2]
   15194:	b	15160 <__assert_fail@plt+0x31e8>
   15198:	pop	{r4, r5, fp, pc}
   1519c:	push	{r4, sl, fp, lr}
   151a0:	add	fp, sp, #8
   151a4:	sub	sp, sp, #8
   151a8:	mov	r0, sp
   151ac:	mov	r1, #0
   151b0:	mov	r4, #0
   151b4:	bl	11c60 <gettimeofday@plt>
   151b8:	cmn	r0, #1
   151bc:	ble	151d8 <__assert_fail@plt+0x3260>
   151c0:	ldr	r0, [sp]
   151c4:	movw	r1, #32384	; 0x7e80
   151c8:	movt	r1, #33706	; 0x83aa
   151cc:	add	r0, r0, r1
   151d0:	rev	r4, r0
   151d4:	b	151ec <__assert_fail@plt+0x3274>
   151d8:	movw	r0, #62400	; 0xf3c0
   151dc:	movt	r0, #2
   151e0:	ldrb	r0, [r0]
   151e4:	cmp	r0, #0
   151e8:	bne	151f8 <__assert_fail@plt+0x3280>
   151ec:	mov	r0, r4
   151f0:	sub	sp, fp, #8
   151f4:	pop	{r4, sl, fp, pc}
   151f8:	movw	r0, #62384	; 0xf3b0
   151fc:	mov	r1, #26
   15200:	mov	r2, #1
   15204:	movt	r0, #2
   15208:	ldr	r3, [r0]
   1520c:	movw	r0, #55587	; 0xd923
   15210:	movt	r0, #1
   15214:	bl	11c48 <fwrite@plt>
   15218:	b	151ec <__assert_fail@plt+0x3274>
   1521c:	push	{r4, r5, r6, sl, fp, lr}
   15220:	add	fp, sp, #16
   15224:	sub	sp, sp, #344	; 0x158
   15228:	mov	r6, r0
   1522c:	mov	r0, #128	; 0x80
   15230:	mov	r5, r1
   15234:	movw	r1, #55720	; 0xd9a8
   15238:	mov	r4, r2
   1523c:	mov	r2, #1
   15240:	str	r0, [sp, #12]
   15244:	movw	r0, #55714	; 0xd9a2
   15248:	movt	r1, #1
   1524c:	movt	r0, #1
   15250:	bl	11d50 <setenv@plt>
   15254:	movw	r0, #55724	; 0xd9ac
   15258:	movt	r0, #1
   1525c:	bl	11f18 <unsetenv@plt>
   15260:	movw	r0, #55735	; 0xd9b7
   15264:	movt	r0, #1
   15268:	bl	11f18 <unsetenv@plt>
   1526c:	movw	r0, #55748	; 0xd9c4
   15270:	movt	r0, #1
   15274:	bl	11f18 <unsetenv@plt>
   15278:	movw	r0, #55761	; 0xd9d1
   1527c:	movt	r0, #1
   15280:	bl	11f18 <unsetenv@plt>
   15284:	movw	r0, #55773	; 0xd9dd
   15288:	movt	r0, #1
   1528c:	bl	11f18 <unsetenv@plt>
   15290:	movw	r0, #55787	; 0xd9eb
   15294:	movt	r0, #1
   15298:	bl	11f18 <unsetenv@plt>
   1529c:	add	r1, sp, #16
   152a0:	add	r2, sp, #12
   152a4:	mov	r0, r6
   152a8:	bl	11ea0 <getsockname@plt>
   152ac:	movw	r6, #62644	; 0xf4b4
   152b0:	cmn	r0, #1
   152b4:	movt	r6, #2
   152b8:	ble	1530c <__assert_fail@plt+0x3394>
   152bc:	ldr	r1, [sp, #12]
   152c0:	mov	r0, #3
   152c4:	mov	r2, #16
   152c8:	sub	r3, fp, #32
   152cc:	str	r3, [sp]
   152d0:	str	r2, [sp, #4]
   152d4:	str	r0, [sp, #8]
   152d8:	add	r0, sp, #16
   152dc:	add	r2, sp, #144	; 0x90
   152e0:	mov	r3, #184	; 0xb8
   152e4:	bl	11e28 <getnameinfo@plt>
   152e8:	cmp	r0, #0
   152ec:	beq	15320 <__assert_fail@plt+0x33a8>
   152f0:	bl	11b40 <gai_strerror@plt>
   152f4:	movw	r1, #55895	; 0xda57
   152f8:	mov	r2, r0
   152fc:	mov	r0, #4
   15300:	movt	r1, #1
   15304:	bl	11e64 <syslog@plt>
   15308:	b	153ac <__assert_fail@plt+0x3434>
   1530c:	movw	r1, #55801	; 0xd9f9
   15310:	movt	r1, #1
   15314:	mov	r0, #4
   15318:	bl	11e64 <syslog@plt>
   1531c:	b	1541c <__assert_fail@plt+0x34a4>
   15320:	movw	r0, #55724	; 0xd9ac
   15324:	add	r1, sp, #144	; 0x90
   15328:	mov	r2, #1
   1532c:	movt	r0, #1
   15330:	bl	11d50 <setenv@plt>
   15334:	cmn	r0, #1
   15338:	ble	15370 <__assert_fail@plt+0x33f8>
   1533c:	movw	r0, #62400	; 0xf3c0
   15340:	movt	r0, #2
   15344:	ldrb	r0, [r0]
   15348:	cmp	r0, #0
   1534c:	beq	15380 <__assert_fail@plt+0x3408>
   15350:	movw	r0, #62384	; 0xf3b0
   15354:	movw	r1, #55843	; 0xda23
   15358:	add	r2, sp, #144	; 0x90
   1535c:	movt	r0, #2
   15360:	movt	r1, #1
   15364:	ldr	r0, [r0]
   15368:	bl	11d5c <fprintf@plt>
   1536c:	b	15380 <__assert_fail@plt+0x3408>
   15370:	movw	r1, #55819	; 0xda0b
   15374:	mov	r0, #4
   15378:	movt	r1, #1
   1537c:	bl	11e64 <syslog@plt>
   15380:	movw	r0, #55748	; 0xd9c4
   15384:	sub	r1, fp, #32
   15388:	mov	r2, #1
   1538c:	movt	r0, #1
   15390:	bl	11d50 <setenv@plt>
   15394:	cmn	r0, #1
   15398:	bgt	153ac <__assert_fail@plt+0x3434>
   1539c:	movw	r1, #55869	; 0xda3d
   153a0:	mov	r0, #4
   153a4:	movt	r1, #1
   153a8:	bl	11e64 <syslog@plt>
   153ac:	ldrb	r0, [r6]
   153b0:	cmp	r0, #1
   153b4:	bne	1541c <__assert_fail@plt+0x34a4>
   153b8:	ldr	r1, [sp, #12]
   153bc:	mov	r0, #0
   153c0:	add	r2, sp, #144	; 0x90
   153c4:	mov	r3, #184	; 0xb8
   153c8:	str	r0, [sp]
   153cc:	str	r0, [sp, #4]
   153d0:	str	r0, [sp, #8]
   153d4:	add	r0, sp, #16
   153d8:	bl	11e28 <getnameinfo@plt>
   153dc:	cmp	r0, #0
   153e0:	beq	15400 <__assert_fail@plt+0x3488>
   153e4:	bl	11b40 <gai_strerror@plt>
   153e8:	movw	r1, #55895	; 0xda57
   153ec:	mov	r2, r0
   153f0:	mov	r0, #4
   153f4:	movt	r1, #1
   153f8:	bl	11e64 <syslog@plt>
   153fc:	b	1541c <__assert_fail@plt+0x34a4>
   15400:	movw	r0, #55735	; 0xd9b7
   15404:	add	r1, sp, #144	; 0x90
   15408:	mov	r2, #1
   1540c:	movt	r0, #1
   15410:	bl	11d50 <setenv@plt>
   15414:	cmn	r0, #1
   15418:	ble	1556c <__assert_fail@plt+0x35f4>
   1541c:	mov	r0, #3
   15420:	mov	r1, #16
   15424:	sub	r2, fp, #32
   15428:	mov	r3, #184	; 0xb8
   1542c:	str	r2, [sp]
   15430:	str	r1, [sp, #4]
   15434:	str	r0, [sp, #8]
   15438:	add	r2, sp, #144	; 0x90
   1543c:	mov	r0, r5
   15440:	mov	r1, r4
   15444:	bl	11e28 <getnameinfo@plt>
   15448:	cmp	r0, #0
   1544c:	beq	15470 <__assert_fail@plt+0x34f8>
   15450:	bl	11b40 <gai_strerror@plt>
   15454:	movw	r1, #55895	; 0xda57
   15458:	mov	r2, r0
   1545c:	mov	r0, #4
   15460:	movt	r1, #1
   15464:	bl	11e64 <syslog@plt>
   15468:	sub	sp, fp, #16
   1546c:	pop	{r4, r5, r6, sl, fp, pc}
   15470:	movw	r0, #55761	; 0xd9d1
   15474:	add	r1, sp, #144	; 0x90
   15478:	mov	r2, #1
   1547c:	movt	r0, #1
   15480:	bl	11d50 <setenv@plt>
   15484:	cmn	r0, #1
   15488:	ble	154c0 <__assert_fail@plt+0x3548>
   1548c:	movw	r0, #62400	; 0xf3c0
   15490:	movt	r0, #2
   15494:	ldrb	r0, [r0]
   15498:	cmp	r0, #0
   1549c:	beq	154d0 <__assert_fail@plt+0x3558>
   154a0:	movw	r0, #62384	; 0xf3b0
   154a4:	movw	r1, #55960	; 0xda98
   154a8:	add	r2, sp, #144	; 0x90
   154ac:	movt	r0, #2
   154b0:	movt	r1, #1
   154b4:	ldr	r0, [r0]
   154b8:	bl	11d5c <fprintf@plt>
   154bc:	b	154d0 <__assert_fail@plt+0x3558>
   154c0:	movw	r1, #55936	; 0xda80
   154c4:	mov	r0, #4
   154c8:	movt	r1, #1
   154cc:	bl	11e64 <syslog@plt>
   154d0:	movw	r0, #55773	; 0xd9dd
   154d4:	sub	r1, fp, #32
   154d8:	mov	r2, #1
   154dc:	movt	r0, #1
   154e0:	bl	11d50 <setenv@plt>
   154e4:	cmn	r0, #1
   154e8:	bgt	154fc <__assert_fail@plt+0x3584>
   154ec:	movw	r1, #55987	; 0xdab3
   154f0:	mov	r0, #4
   154f4:	movt	r1, #1
   154f8:	bl	11e64 <syslog@plt>
   154fc:	ldrb	r0, [r6]
   15500:	cmp	r0, #1
   15504:	bne	15564 <__assert_fail@plt+0x35ec>
   15508:	mov	r0, #0
   1550c:	add	r2, sp, #144	; 0x90
   15510:	mov	r1, r4
   15514:	mov	r3, #184	; 0xb8
   15518:	str	r0, [sp]
   1551c:	str	r0, [sp, #4]
   15520:	str	r0, [sp, #8]
   15524:	mov	r0, r5
   15528:	bl	11e28 <getnameinfo@plt>
   1552c:	cmp	r0, #0
   15530:	bne	15450 <__assert_fail@plt+0x34d8>
   15534:	movw	r0, #55787	; 0xd9eb
   15538:	add	r1, sp, #144	; 0x90
   1553c:	mov	r2, #1
   15540:	movt	r0, #1
   15544:	bl	11d50 <setenv@plt>
   15548:	cmn	r0, #1
   1554c:	ble	15578 <__assert_fail@plt+0x3600>
   15550:	movw	r0, #62400	; 0xf3c0
   15554:	movt	r0, #2
   15558:	ldrb	r0, [r0]
   1555c:	cmp	r0, #0
   15560:	bne	15590 <__assert_fail@plt+0x3618>
   15564:	sub	sp, fp, #16
   15568:	pop	{r4, r5, r6, sl, fp, pc}
   1556c:	movw	r1, #55911	; 0xda67
   15570:	movt	r1, #1
   15574:	b	15314 <__assert_fail@plt+0x339c>
   15578:	movw	r1, #56013	; 0xdacd
   1557c:	mov	r0, #4
   15580:	movt	r1, #1
   15584:	bl	11e64 <syslog@plt>
   15588:	sub	sp, fp, #16
   1558c:	pop	{r4, r5, r6, sl, fp, pc}
   15590:	movw	r0, #62384	; 0xf3b0
   15594:	movw	r1, #56039	; 0xdae7
   15598:	add	r2, sp, #144	; 0x90
   1559c:	movt	r0, #2
   155a0:	movt	r1, #1
   155a4:	ldr	r0, [r0]
   155a8:	bl	11d5c <fprintf@plt>
   155ac:	sub	sp, fp, #16
   155b0:	pop	{r4, r5, r6, sl, fp, pc}
   155b4:	push	{r4, r5, fp, lr}
   155b8:	add	fp, sp, #8
   155bc:	sub	sp, sp, #296	; 0x128
   155c0:	mov	r5, r0
   155c4:	ldr	r0, [r1]
   155c8:	mov	r6, r2
   155cc:	mov	r4, r1
   155d0:	bl	17af0 <argp_parse@@Base+0x13cc>
   155d4:	movw	r0, #62976	; 0xf600
   155d8:	cmp	r6, #0
   155dc:	movt	r0, #2
   155e0:	str	r4, [r0]
   155e4:	beq	155f8 <__assert_fail@plt+0x3680>
   155e8:	ldr	r0, [r6]
   155ec:	cmp	r0, #0
   155f0:	moveq	r6, r4
   155f4:	b	155fc <__assert_fail@plt+0x3684>
   155f8:	mov	r6, r4
   155fc:	ldr	r0, [r6], #4
   15600:	cmp	r0, #0
   15604:	bne	155fc <__assert_fail@plt+0x3684>
   15608:	ldr	r6, [r6, #-8]
   1560c:	mov	r0, r6
   15610:	bl	11d2c <strlen@plt>
   15614:	movw	r1, #63008	; 0xf620
   15618:	movw	r2, #56068	; 0xdb04
   1561c:	add	r0, r6, r0
   15620:	movt	r1, #2
   15624:	movt	r2, #1
   15628:	str	r2, [r1]
   1562c:	movw	r1, #62980	; 0xf604
   15630:	movt	r1, #2
   15634:	str	r0, [r1]
   15638:	movw	r0, #56092	; 0xdb1c
   1563c:	movw	r1, #61900	; 0xf1cc
   15640:	movt	r0, #1
   15644:	movt	r1, #2
   15648:	bl	17908 <argp_parse@@Base+0x11e4>
   1564c:	mov	r0, #0
   15650:	add	r1, sp, #148	; 0x94
   15654:	mov	r2, r4
   15658:	mov	r3, #0
   1565c:	str	r0, [sp, #4]
   15660:	movw	r0, #62140	; 0xf2bc
   15664:	str	r1, [sp]
   15668:	mov	r1, r5
   1566c:	movt	r0, #2
   15670:	bl	16724 <argp_parse@@Base>
   15674:	movw	r0, #62644	; 0xf4b4
   15678:	movw	r6, #62996	; 0xf614
   1567c:	movt	r0, #2
   15680:	movt	r6, #2
   15684:	ldrb	r0, [r0]
   15688:	cmp	r0, #1
   1568c:	movweq	r1, #62645	; 0xf4b5
   15690:	moveq	r0, #1
   15694:	movteq	r1, #2
   15698:	strbeq	r0, [r1]
   1569c:	ldr	r0, [sp, #148]	; 0x94
   156a0:	cmp	r0, r5
   156a4:	bge	156f8 <__assert_fail@plt+0x3780>
   156a8:	sub	r0, r5, r0
   156ac:	mov	r1, #4
   156b0:	add	r0, r0, #1
   156b4:	bl	180e0 <argp_parse@@Base+0x19bc>
   156b8:	str	r0, [r6]
   156bc:	ldr	r0, [sp, #148]	; 0x94
   156c0:	cmp	r0, r5
   156c4:	bge	15740 <__assert_fail@plt+0x37c8>
   156c8:	mov	r7, #0
   156cc:	ldr	r0, [r4, r0, lsl #2]
   156d0:	bl	11bc4 <strdup@plt>
   156d4:	ldr	r1, [r6]
   156d8:	str	r0, [r1, r7]
   156dc:	add	r7, r7, #4
   156e0:	ldr	r0, [sp, #148]	; 0x94
   156e4:	add	r0, r0, #1
   156e8:	cmp	r0, r5
   156ec:	str	r0, [sp, #148]	; 0x94
   156f0:	blt	156cc <__assert_fail@plt+0x3754>
   156f4:	b	15740 <__assert_fail@plt+0x37c8>
   156f8:	mov	r0, #3
   156fc:	mov	r1, #4
   15700:	bl	180e0 <argp_parse@@Base+0x19bc>
   15704:	str	r0, [r6]
   15708:	movw	r0, #56098	; 0xdb22
   1570c:	movt	r0, #1
   15710:	bl	11bc4 <strdup@plt>
   15714:	cmp	r0, #0
   15718:	beq	15f84 <__assert_fail@plt+0x400c>
   1571c:	ldr	r1, [r6]
   15720:	str	r0, [r1]
   15724:	movw	r0, #56124	; 0xdb3c
   15728:	movt	r0, #1
   1572c:	bl	11bc4 <strdup@plt>
   15730:	cmp	r0, #0
   15734:	beq	15f84 <__assert_fail@plt+0x400c>
   15738:	ldr	r1, [r6]
   1573c:	str	r0, [r1, #4]
   15740:	movw	r0, #62400	; 0xf3c0
   15744:	movt	r0, #2
   15748:	ldrb	r0, [r0]
   1574c:	cmp	r0, #0
   15750:	bne	15768 <__assert_fail@plt+0x37f0>
   15754:	mov	r0, #0
   15758:	mov	r1, #0
   1575c:	bl	16708 <daemon@@Base>
   15760:	cmn	r0, #1
   15764:	ble	15f9c <__assert_fail@plt+0x4024>
   15768:	movw	r0, #56092	; 0xdb1c
   1576c:	mov	r1, #17
   15770:	mov	r2, #24
   15774:	movt	r0, #1
   15778:	bl	11e94 <openlog@plt>
   1577c:	movw	r0, #62646	; 0xf4b6
   15780:	movt	r0, #2
   15784:	ldrb	r0, [r0]
   15788:	cmp	r0, #0
   1578c:	bne	15814 <__assert_fail@plt+0x389c>
   15790:	movw	r5, #62168	; 0xf2d8
   15794:	movw	r1, #55096	; 0xd738
   15798:	movt	r5, #2
   1579c:	movt	r1, #1
   157a0:	ldr	r0, [r5]
   157a4:	bl	11ec4 <fopen64@plt>
   157a8:	cmp	r0, #0
   157ac:	beq	157ec <__assert_fail@plt+0x3874>
   157b0:	mov	r4, r0
   157b4:	movw	r0, #62400	; 0xf3c0
   157b8:	movt	r0, #2
   157bc:	ldrb	r0, [r0]
   157c0:	cmp	r0, #0
   157c4:	bne	15f64 <__assert_fail@plt+0x3fec>
   157c8:	bl	11cfc <getpid@plt>
   157cc:	movw	r1, #54483	; 0xd4d3
   157d0:	mov	r2, r0
   157d4:	mov	r0, r4
   157d8:	movt	r1, #1
   157dc:	bl	11d5c <fprintf@plt>
   157e0:	mov	r0, r4
   157e4:	bl	11dec <fclose@plt>
   157e8:	b	15814 <__assert_fail@plt+0x389c>
   157ec:	ldr	r4, [r5]
   157f0:	bl	11d74 <__errno_location@plt>
   157f4:	ldr	r0, [r0]
   157f8:	bl	11ccc <strerror@plt>
   157fc:	movw	r1, #56208	; 0xdb90
   15800:	mov	r3, r0
   15804:	mov	r0, #2
   15808:	mov	r2, r4
   1580c:	movt	r1, #1
   15810:	bl	11e64 <syslog@plt>
   15814:	add	r4, sp, #152	; 0x98
   15818:	mov	r1, #0
   1581c:	mov	r2, #140	; 0x8c
   15820:	mov	r8, #0
   15824:	mov	r0, r4
   15828:	bl	11da4 <memset@plt>
   1582c:	orr	r5, r4, #4
   15830:	mov	r0, r5
   15834:	bl	11e10 <sigemptyset@plt>
   15838:	mov	r0, r5
   1583c:	mov	r1, #14
   15840:	bl	11cb4 <sigaddset@plt>
   15844:	movw	r0, #13092	; 0x3324
   15848:	mov	r7, #268435456	; 0x10000000
   1584c:	mov	r1, r4
   15850:	mov	r2, #0
   15854:	movt	r0, #1
   15858:	str	r7, [sp, #284]	; 0x11c
   1585c:	str	r0, [sp, #152]	; 0x98
   15860:	mov	r0, #14
   15864:	bl	11c3c <sigaction@plt>
   15868:	mov	r0, #0
   1586c:	bl	14e1c <__assert_fail@plt+0x2ea4>
   15870:	mov	r0, r4
   15874:	mov	r1, #0
   15878:	mov	r2, #140	; 0x8c
   1587c:	bl	11da4 <memset@plt>
   15880:	mov	r0, r5
   15884:	bl	11e10 <sigemptyset@plt>
   15888:	mov	r0, r5
   1588c:	mov	r1, #1
   15890:	bl	11cb4 <sigaddset@plt>
   15894:	movw	r0, #19996	; 0x4e1c
   15898:	str	r7, [sp, #284]	; 0x11c
   1589c:	mov	r1, r4
   158a0:	mov	r2, #0
   158a4:	movt	r0, #1
   158a8:	str	r0, [sp, #152]	; 0x98
   158ac:	mov	r0, #1
   158b0:	bl	11c3c <sigaction@plt>
   158b4:	mov	r0, r4
   158b8:	mov	r1, #0
   158bc:	mov	r2, #140	; 0x8c
   158c0:	bl	11da4 <memset@plt>
   158c4:	mov	r0, r5
   158c8:	bl	11e10 <sigemptyset@plt>
   158cc:	mov	r0, r5
   158d0:	mov	r1, #17
   158d4:	bl	11cb4 <sigaddset@plt>
   158d8:	movw	r0, #11280	; 0x2c10
   158dc:	str	r7, [sp, #284]	; 0x11c
   158e0:	mov	r1, r4
   158e4:	mov	r2, #0
   158e8:	movt	r0, #1
   158ec:	str	r0, [sp, #152]	; 0x98
   158f0:	mov	r0, #17
   158f4:	bl	11c3c <sigaction@plt>
   158f8:	mov	r0, r4
   158fc:	mov	r1, #0
   15900:	mov	r2, #140	; 0x8c
   15904:	bl	11da4 <memset@plt>
   15908:	mov	r0, r5
   1590c:	bl	11e10 <sigemptyset@plt>
   15910:	mov	r0, r5
   15914:	mov	r1, #13
   15918:	bl	11cb4 <sigaddset@plt>
   1591c:	str	r7, [sp, #284]	; 0x11c
   15920:	mov	r7, #1
   15924:	mov	r0, #13
   15928:	mov	r1, r4
   1592c:	mov	r2, #0
   15930:	str	r7, [sp, #152]	; 0x98
   15934:	bl	11c3c <sigaction@plt>
   15938:	add	r5, sp, #152	; 0x98
   1593c:	mov	r1, #120	; 0x78
   15940:	mov	r2, #99	; 0x63
   15944:	mov	r0, r5
   15948:	bl	11da4 <memset@plt>
   1594c:	movw	r0, #56227	; 0xdba3
   15950:	mov	r1, r5
   15954:	mov	r2, #1
   15958:	strb	r8, [sp, #251]	; 0xfb
   1595c:	movt	r0, #1
   15960:	bl	11d50 <setenv@plt>
   15964:	movw	r5, #62968	; 0xf5f8
   15968:	add	r6, sp, #16
   1596c:	movt	r5, #2
   15970:	b	1598c <__assert_fail@plt+0x3a14>
   15974:	cmn	r9, #1
   15978:	ble	15f40 <__assert_fail@plt+0x3fc8>
   1597c:	mov	r0, #1
   15980:	bl	11ba0 <sleep@plt>
   15984:	movw	r5, #62968	; 0xf5f8
   15988:	movt	r5, #2
   1598c:	ldr	r0, [r5]
   15990:	cmp	r0, #0
   15994:	bne	15a0c <__assert_fail@plt+0x3a94>
   15998:	mov	r0, r6
   1599c:	bl	11e10 <sigemptyset@plt>
   159a0:	mov	r0, r4
   159a4:	bl	11e10 <sigemptyset@plt>
   159a8:	mov	r0, r4
   159ac:	mov	r1, #17
   159b0:	bl	11cb4 <sigaddset@plt>
   159b4:	mov	r0, r4
   159b8:	mov	r1, #1
   159bc:	bl	11cb4 <sigaddset@plt>
   159c0:	mov	r0, r4
   159c4:	mov	r1, #14
   159c8:	bl	11cb4 <sigaddset@plt>
   159cc:	mov	r0, #0
   159d0:	mov	r1, r4
   159d4:	mov	r2, #0
   159d8:	bl	11b10 <sigprocmask@plt>
   159dc:	ldr	r0, [r5]
   159e0:	cmp	r0, #0
   159e4:	bne	159f4 <__assert_fail@plt+0x3a7c>
   159e8:	mov	r0, r6
   159ec:	bl	11dbc <sigsuspend@plt>
   159f0:	b	159dc <__assert_fail@plt+0x3a64>
   159f4:	mov	r0, r4
   159f8:	bl	11e10 <sigemptyset@plt>
   159fc:	mov	r0, #2
   15a00:	mov	r1, r4
   15a04:	mov	r2, #0
   15a08:	bl	11b10 <sigprocmask@plt>
   15a0c:	movw	r1, #62836	; 0xf574
   15a10:	mov	r0, r6
   15a14:	mov	r2, #128	; 0x80
   15a18:	movt	r1, #2
   15a1c:	bl	11b64 <memcpy@plt>
   15a20:	movw	r0, #62832	; 0xf570
   15a24:	mov	r1, #0
   15a28:	mov	r2, #0
   15a2c:	mov	r3, #0
   15a30:	movt	r0, #2
   15a34:	str	r1, [sp]
   15a38:	mov	r1, r6
   15a3c:	ldr	r0, [r0]
   15a40:	add	r0, r0, #1
   15a44:	bl	11b94 <select@plt>
   15a48:	mov	r9, r0
   15a4c:	cmp	r0, #1
   15a50:	blt	15974 <__assert_fail@plt+0x39fc>
   15a54:	movw	r0, #63000	; 0xf618
   15a58:	movt	r0, #2
   15a5c:	ldr	r8, [r0]
   15a60:	cmp	r8, #0
   15a64:	beq	15984 <__assert_fail@plt+0x3a0c>
   15a68:	ldr	r0, [r8, #60]	; 0x3c
   15a6c:	cmn	r0, #1
   15a70:	beq	15f00 <__assert_fail@plt+0x3f88>
   15a74:	asr	r1, r0, #31
   15a78:	add	r1, r0, r1, lsr #27
   15a7c:	and	r0, r0, #31
   15a80:	asr	r1, r1, #5
   15a84:	ldr	r1, [r6, r1, lsl #2]
   15a88:	tst	r1, r7, lsl r0
   15a8c:	beq	15f00 <__assert_fail@plt+0x3f88>
   15a90:	movw	r0, #62400	; 0xf3c0
   15a94:	movt	r0, #2
   15a98:	ldrb	r0, [r0]
   15a9c:	cmp	r0, #0
   15aa0:	bne	15e34 <__assert_fail@plt+0x3ebc>
   15aa4:	ldr	r0, [r8, #24]
   15aa8:	mov	r5, r6
   15aac:	sub	r9, r9, #1
   15ab0:	cmp	r0, #0
   15ab4:	bne	15b24 <__assert_fail@plt+0x3bac>
   15ab8:	ldr	r0, [r8, #16]
   15abc:	cmp	r0, #1
   15ac0:	bne	15b24 <__assert_fail@plt+0x3bac>
   15ac4:	mov	r0, #128	; 0x80
   15ac8:	mov	r1, r4
   15acc:	add	r2, sp, #8
   15ad0:	str	r0, [sp, #8]
   15ad4:	ldr	r0, [r8, #60]	; 0x3c
   15ad8:	bl	11c30 <accept@plt>
   15adc:	mov	sl, r0
   15ae0:	movw	r0, #62400	; 0xf3c0
   15ae4:	movt	r0, #2
   15ae8:	ldrb	r0, [r0]
   15aec:	cmp	r0, #0
   15af0:	bne	15eb4 <__assert_fail@plt+0x3f3c>
   15af4:	cmn	sl, #1
   15af8:	ble	15ed8 <__assert_fail@plt+0x3f60>
   15afc:	movw	r0, #62645	; 0xf4b5
   15b00:	movt	r0, #2
   15b04:	ldrb	r0, [r0]
   15b08:	cmp	r0, #1
   15b0c:	bne	15b28 <__assert_fail@plt+0x3bb0>
   15b10:	ldr	r2, [sp, #8]
   15b14:	mov	r0, sl
   15b18:	mov	r1, r4
   15b1c:	bl	1521c <__assert_fail@plt+0x32a4>
   15b20:	b	15b28 <__assert_fail@plt+0x3bb0>
   15b24:	ldr	sl, [r8, #60]	; 0x3c
   15b28:	mov	r0, r4
   15b2c:	bl	11e10 <sigemptyset@plt>
   15b30:	mov	r0, r4
   15b34:	mov	r1, #17
   15b38:	bl	11cb4 <sigaddset@plt>
   15b3c:	mov	r0, r4
   15b40:	mov	r1, #1
   15b44:	bl	11cb4 <sigaddset@plt>
   15b48:	mov	r0, r4
   15b4c:	mov	r1, #14
   15b50:	bl	11cb4 <sigaddset@plt>
   15b54:	mov	r0, #0
   15b58:	mov	r1, r4
   15b5c:	mov	r2, #0
   15b60:	bl	11b10 <sigprocmask@plt>
   15b64:	ldr	r0, [r8, #44]	; 0x2c
   15b68:	cmp	r0, #0
   15b6c:	beq	15b7c <__assert_fail@plt+0x3c04>
   15b70:	ldrh	r0, [r0, #8]
   15b74:	cmp	r0, #0
   15b78:	beq	15cd4 <__assert_fail@plt+0x3d5c>
   15b7c:	ldr	r1, [r8, #208]	; 0xd0
   15b80:	add	r0, r1, #1
   15b84:	cmp	r1, #0
   15b88:	str	r0, [r8, #208]	; 0xd0
   15b8c:	beq	15bfc <__assert_fail@plt+0x3c84>
   15b90:	ldr	r1, [r8, #28]
   15b94:	mov	r2, #0
   15b98:	cmp	r0, r1
   15b9c:	movwhi	r2, #1
   15ba0:	cmp	r1, #0
   15ba4:	movwne	r1, #1
   15ba8:	tst	r2, r1
   15bac:	bne	15bc4 <__assert_fail@plt+0x3c4c>
   15bb0:	movw	r1, #61896	; 0xf1c8
   15bb4:	movt	r1, #2
   15bb8:	ldr	r1, [r1]
   15bbc:	cmp	r0, r1
   15bc0:	bcc	15c08 <__assert_fail@plt+0x3c90>
   15bc4:	add	r0, sp, #8
   15bc8:	mov	r1, #0
   15bcc:	bl	11c60 <gettimeofday@plt>
   15bd0:	mov	r0, r8
   15bd4:	ldr	r2, [sp, #8]
   15bd8:	ldr	r1, [r0, #212]!	; 0xd4
   15bdc:	sub	r1, r2, r1
   15be0:	cmp	r1, #61	; 0x3d
   15be4:	blt	15db0 <__assert_fail@plt+0x3e38>
   15be8:	ldr	r1, [sp, #8]
   15bec:	ldr	r2, [sp, #12]
   15bf0:	stm	r0, {r1, r2}
   15bf4:	str	r7, [r8, #208]	; 0xd0
   15bf8:	b	15c08 <__assert_fail@plt+0x3c90>
   15bfc:	add	r0, r8, #212	; 0xd4
   15c00:	mov	r1, #0
   15c04:	bl	11c60 <gettimeofday@plt>
   15c08:	bl	11e1c <fork@plt>
   15c0c:	cmn	r0, #1
   15c10:	ble	15c80 <__assert_fail@plt+0x3d08>
   15c14:	mov	r7, #1
   15c18:	cmp	r0, #0
   15c1c:	beq	15cd8 <__assert_fail@plt+0x3d60>
   15c20:	ldr	r1, [r8, #24]
   15c24:	mov	r6, #0
   15c28:	cmp	r1, #0
   15c2c:	beq	15cdc <__assert_fail@plt+0x3d64>
   15c30:	str	r0, [r8, #24]
   15c34:	ldr	r0, [r8, #60]	; 0x3c
   15c38:	cmp	r0, #0
   15c3c:	bmi	15cdc <__assert_fail@plt+0x3d64>
   15c40:	movw	r2, #62836	; 0xf574
   15c44:	lsr	r1, r0, #5
   15c48:	mov	r7, #1
   15c4c:	and	r0, r0, #31
   15c50:	movt	r2, #2
   15c54:	mov	r3, r2
   15c58:	ldr	r2, [r2, r1, lsl #2]
   15c5c:	bic	r0, r2, r7, lsl r0
   15c60:	str	r0, [r3, r1, lsl #2]
   15c64:	movw	r0, #62968	; 0xf5f8
   15c68:	movt	r0, #2
   15c6c:	mov	r1, r0
   15c70:	ldr	r0, [r0]
   15c74:	sub	r0, r0, #1
   15c78:	str	r0, [r1]
   15c7c:	b	15cdc <__assert_fail@plt+0x3d64>
   15c80:	movw	r1, #56338	; 0xdc12
   15c84:	mov	r0, #3
   15c88:	movt	r1, #1
   15c8c:	bl	11e64 <syslog@plt>
   15c90:	ldr	r0, [r8, #24]
   15c94:	cmp	r0, #0
   15c98:	bne	15cb0 <__assert_fail@plt+0x3d38>
   15c9c:	ldr	r0, [r8, #16]
   15ca0:	cmp	r0, #1
   15ca4:	bne	15cb0 <__assert_fail@plt+0x3d38>
   15ca8:	mov	r0, sl
   15cac:	bl	11f48 <close@plt>
   15cb0:	mov	r0, r4
   15cb4:	bl	11e10 <sigemptyset@plt>
   15cb8:	mov	r0, #2
   15cbc:	mov	r1, r4
   15cc0:	mov	r2, #0
   15cc4:	bl	11b10 <sigprocmask@plt>
   15cc8:	mov	r0, #1
   15ccc:	bl	11ba0 <sleep@plt>
   15cd0:	b	15efc <__assert_fail@plt+0x3f84>
   15cd4:	mov	r7, #0
   15cd8:	mov	r6, #1
   15cdc:	mov	r0, r4
   15ce0:	bl	11e10 <sigemptyset@plt>
   15ce4:	mov	r0, #2
   15ce8:	mov	r1, r4
   15cec:	mov	r2, #0
   15cf0:	bl	11b10 <sigprocmask@plt>
   15cf4:	cmp	r6, #0
   15cf8:	beq	15d80 <__assert_fail@plt+0x3e08>
   15cfc:	movw	r1, #62400	; 0xf3c0
   15d00:	eor	r0, r7, #1
   15d04:	movt	r1, #2
   15d08:	ldrb	r1, [r1]
   15d0c:	clz	r1, r1
   15d10:	lsr	r1, r1, #5
   15d14:	orrs	r0, r0, r1
   15d18:	bne	15d20 <__assert_fail@plt+0x3da8>
   15d1c:	bl	11d38 <setsid@plt>
   15d20:	cmp	r7, #0
   15d24:	beq	15d74 <__assert_fail@plt+0x3dfc>
   15d28:	movw	r0, #62400	; 0xf3c0
   15d2c:	movt	r0, #2
   15d30:	ldrb	r0, [r0]
   15d34:	cmp	r0, #0
   15d38:	bne	15f18 <__assert_fail@plt+0x3fa0>
   15d3c:	movw	r0, #62832	; 0xf570
   15d40:	movt	r0, #2
   15d44:	ldr	r7, [r0]
   15d48:	cmp	r7, #3
   15d4c:	bge	15d60 <__assert_fail@plt+0x3de8>
   15d50:	b	15d74 <__assert_fail@plt+0x3dfc>
   15d54:	sub	r7, r7, #1
   15d58:	cmp	r7, #2
   15d5c:	ble	15d74 <__assert_fail@plt+0x3dfc>
   15d60:	cmp	sl, r7
   15d64:	beq	15d54 <__assert_fail@plt+0x3ddc>
   15d68:	mov	r0, r7
   15d6c:	bl	11f48 <close@plt>
   15d70:	b	15d54 <__assert_fail@plt+0x3ddc>
   15d74:	mov	r0, sl
   15d78:	mov	r1, r8
   15d7c:	bl	129d8 <__assert_fail@plt+0xa60>
   15d80:	ldr	r0, [r8, #24]
   15d84:	cmp	r0, #0
   15d88:	beq	15d94 <__assert_fail@plt+0x3e1c>
   15d8c:	mov	r7, #1
   15d90:	b	15efc <__assert_fail@plt+0x3f84>
   15d94:	ldr	r0, [r8, #16]
   15d98:	mov	r7, #1
   15d9c:	cmp	r0, #1
   15da0:	bne	15efc <__assert_fail@plt+0x3f84>
   15da4:	mov	r0, sl
   15da8:	bl	11f48 <close@plt>
   15dac:	b	15efc <__assert_fail@plt+0x3f84>
   15db0:	ldr	r2, [r8, #12]
   15db4:	ldr	r3, [r8, #20]
   15db8:	movw	r1, #56287	; 0xdbdf
   15dbc:	mov	r0, #3
   15dc0:	movt	r1, #1
   15dc4:	bl	11e64 <syslog@plt>
   15dc8:	ldr	r0, [r8, #60]	; 0x3c
   15dcc:	cmp	r0, #0
   15dd0:	bmi	15e18 <__assert_fail@plt+0x3ea0>
   15dd4:	movw	r1, #62968	; 0xf5f8
   15dd8:	and	r3, r0, #31
   15ddc:	movt	r1, #2
   15de0:	mov	r2, r1
   15de4:	ldr	r1, [r1]
   15de8:	sub	r1, r1, #1
   15dec:	str	r1, [r2]
   15df0:	movw	r2, #62836	; 0xf574
   15df4:	lsr	r1, r0, #5
   15df8:	movt	r2, #2
   15dfc:	mov	r6, r2
   15e00:	ldr	r2, [r2, r1, lsl #2]
   15e04:	bic	r2, r2, r7, lsl r3
   15e08:	str	r2, [r6, r1, lsl #2]
   15e0c:	bl	11f48 <close@plt>
   15e10:	mvn	r0, #0
   15e14:	str	r0, [r8, #60]	; 0x3c
   15e18:	mov	r0, #0
   15e1c:	str	r0, [r8, #208]	; 0xd0
   15e20:	ldr	r0, [r8, #24]
   15e24:	cmp	r0, #2
   15e28:	blt	15e54 <__assert_fail@plt+0x3edc>
   15e2c:	str	r7, [r8, #24]
   15e30:	b	15e70 <__assert_fail@plt+0x3ef8>
   15e34:	movw	r0, #62384	; 0xf3b0
   15e38:	ldr	r2, [r8, #12]
   15e3c:	movw	r1, #55660	; 0xd96c
   15e40:	movt	r0, #2
   15e44:	movt	r1, #1
   15e48:	ldr	r0, [r0]
   15e4c:	bl	11d5c <fprintf@plt>
   15e50:	b	15aa4 <__assert_fail@plt+0x3b2c>
   15e54:	cmp	r0, #0
   15e58:	bne	15e70 <__assert_fail@plt+0x3ef8>
   15e5c:	ldr	r0, [r8, #16]
   15e60:	cmp	r0, #1
   15e64:	bne	15e70 <__assert_fail@plt+0x3ef8>
   15e68:	mov	r0, sl
   15e6c:	bl	11f48 <close@plt>
   15e70:	mov	r0, r4
   15e74:	bl	11e10 <sigemptyset@plt>
   15e78:	mov	r0, #2
   15e7c:	mov	r1, r4
   15e80:	mov	r2, #0
   15e84:	bl	11b10 <sigprocmask@plt>
   15e88:	movw	r0, #62988	; 0xf60c
   15e8c:	movt	r0, #2
   15e90:	ldr	r0, [r0]
   15e94:	cmp	r0, #0
   15e98:	bne	15efc <__assert_fail@plt+0x3f84>
   15e9c:	movw	r0, #62988	; 0xf60c
   15ea0:	movt	r0, #2
   15ea4:	str	r7, [r0]
   15ea8:	mov	r0, #600	; 0x258
   15eac:	bl	11bd0 <alarm@plt>
   15eb0:	b	15efc <__assert_fail@plt+0x3f84>
   15eb4:	movw	r0, #62384	; 0xf3b0
   15eb8:	movw	r1, #56250	; 0xdbba
   15ebc:	mov	r2, sl
   15ec0:	movt	r0, #2
   15ec4:	movt	r1, #1
   15ec8:	ldr	r0, [r0]
   15ecc:	bl	11d5c <fprintf@plt>
   15ed0:	cmn	sl, #1
   15ed4:	bgt	15afc <__assert_fail@plt+0x3b84>
   15ed8:	bl	11d74 <__errno_location@plt>
   15edc:	ldr	r0, [r0]
   15ee0:	cmp	r0, #4
   15ee4:	beq	15efc <__assert_fail@plt+0x3f84>
   15ee8:	ldr	r2, [r8, #12]
   15eec:	movw	r1, #56267	; 0xdbcb
   15ef0:	mov	r0, #4
   15ef4:	movt	r1, #1
   15ef8:	bl	11e64 <syslog@plt>
   15efc:	mov	r6, r5
   15f00:	cmp	r9, #0
   15f04:	beq	15984 <__assert_fail@plt+0x3a0c>
   15f08:	ldr	r8, [r8, #220]	; 0xdc
   15f0c:	cmp	r8, #0
   15f10:	bne	15a68 <__assert_fail@plt+0x3af0>
   15f14:	b	15984 <__assert_fail@plt+0x3a0c>
   15f18:	movw	r0, #62832	; 0xf570
   15f1c:	movw	r1, #56347	; 0xdc1b
   15f20:	movt	r0, #2
   15f24:	movt	r1, #1
   15f28:	ldr	r2, [r0]
   15f2c:	movw	r0, #62384	; 0xf3b0
   15f30:	movt	r0, #2
   15f34:	ldr	r0, [r0]
   15f38:	bl	11d5c <fprintf@plt>
   15f3c:	b	15d3c <__assert_fail@plt+0x3dc4>
   15f40:	bl	11d74 <__errno_location@plt>
   15f44:	ldr	r0, [r0]
   15f48:	cmp	r0, #4
   15f4c:	beq	1597c <__assert_fail@plt+0x3a04>
   15f50:	movw	r1, #56239	; 0xdbaf
   15f54:	mov	r0, #4
   15f58:	movt	r1, #1
   15f5c:	bl	11e64 <syslog@plt>
   15f60:	b	1597c <__assert_fail@plt+0x3a04>
   15f64:	movw	r0, #62384	; 0xf3b0
   15f68:	ldr	r2, [r5]
   15f6c:	movw	r1, #56183	; 0xdb77
   15f70:	movt	r0, #2
   15f74:	movt	r1, #1
   15f78:	ldr	r0, [r0]
   15f7c:	bl	11d5c <fprintf@plt>
   15f80:	b	157c8 <__assert_fail@plt+0x3850>
   15f84:	movw	r1, #54487	; 0xd4d7
   15f88:	mov	r0, #3
   15f8c:	movt	r1, #1
   15f90:	bl	11e64 <syslog@plt>
   15f94:	mvn	r0, #0
   15f98:	bl	11d08 <exit@plt>
   15f9c:	ldr	r2, [r4]
   15fa0:	movw	r1, #56147	; 0xdb53
   15fa4:	mov	r0, #27
   15fa8:	movt	r1, #1
   15fac:	bl	11e64 <syslog@plt>
   15fb0:	mov	r0, #1
   15fb4:	bl	11d08 <exit@plt>
   15fb8:	push	{r4, r5, fp, lr}
   15fbc:	add	fp, sp, #8
   15fc0:	sub	sp, sp, #8
   15fc4:	mov	r5, r1
   15fc8:	mov	r4, #7
   15fcc:	cmp	r0, #111	; 0x6f
   15fd0:	ble	15ffc <__assert_fail@plt+0x4084>
   15fd4:	cmp	r0, #112	; 0x70
   15fd8:	beq	16034 <__assert_fail@plt+0x40bc>
   15fdc:	cmp	r0, #256	; 0x100
   15fe0:	beq	16058 <__assert_fail@plt+0x40e0>
   15fe4:	movw	r1, #257	; 0x101
   15fe8:	cmp	r0, r1
   15fec:	bne	160bc <__assert_fail@plt+0x4144>
   15ff0:	movw	r0, #62644	; 0xf4b4
   15ff4:	movt	r0, #2
   15ff8:	b	160b0 <__assert_fail@plt+0x4138>
   15ffc:	cmp	r0, #82	; 0x52
   16000:	beq	16064 <__assert_fail@plt+0x40ec>
   16004:	cmp	r0, #100	; 0x64
   16008:	bne	160bc <__assert_fail@plt+0x4144>
   1600c:	movw	r0, #62400	; 0xf3c0
   16010:	mov	r1, #1
   16014:	movt	r0, #2
   16018:	strb	r1, [r0]
   1601c:	movw	r0, #62972	; 0xf5fc
   16020:	movt	r0, #2
   16024:	ldr	r1, [r0]
   16028:	orr	r1, r1, #1
   1602c:	str	r1, [r0]
   16030:	b	160b8 <__assert_fail@plt+0x4140>
   16034:	cmp	r5, #0
   16038:	beq	160a8 <__assert_fail@plt+0x4130>
   1603c:	ldrb	r0, [r5]
   16040:	cmp	r0, #0
   16044:	beq	160a8 <__assert_fail@plt+0x4130>
   16048:	movw	r0, #62168	; 0xf2d8
   1604c:	movt	r0, #2
   16050:	str	r5, [r0]
   16054:	b	160b8 <__assert_fail@plt+0x4140>
   16058:	movw	r0, #62645	; 0xf4b5
   1605c:	movt	r0, #2
   16060:	b	160b0 <__assert_fail@plt+0x4138>
   16064:	add	r1, sp, #4
   16068:	mov	r0, r5
   1606c:	mov	r2, #0
   16070:	mov	r4, #0
   16074:	bl	11abc <strtol@plt>
   16078:	cmp	r0, #1
   1607c:	blt	16090 <__assert_fail@plt+0x4118>
   16080:	ldr	r1, [sp, #4]
   16084:	ldrb	r1, [r1]
   16088:	cmp	r1, #0
   1608c:	beq	160c8 <__assert_fail@plt+0x4150>
   16090:	movw	r1, #56695	; 0xdd77
   16094:	mov	r0, #3
   16098:	mov	r2, r5
   1609c:	movt	r1, #1
   160a0:	bl	11e64 <syslog@plt>
   160a4:	b	160bc <__assert_fail@plt+0x4144>
   160a8:	movw	r0, #62646	; 0xf4b6
   160ac:	movt	r0, #2
   160b0:	mov	r1, #1
   160b4:	strb	r1, [r0]
   160b8:	mov	r4, #0
   160bc:	mov	r0, r4
   160c0:	sub	sp, fp, #8
   160c4:	pop	{r4, r5, fp, pc}
   160c8:	movw	r1, #61896	; 0xf1c8
   160cc:	movt	r1, #2
   160d0:	str	r0, [r1]
   160d4:	b	160b8 <__assert_fail@plt+0x4140>
   160d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160dc:	add	fp, sp, #28
   160e0:	sub	sp, sp, #20
   160e4:	mov	r6, r3
   160e8:	mov	sl, r2
   160ec:	str	r1, [sp, #16]
   160f0:	mov	r7, r0
   160f4:	bl	11d2c <strlen@plt>
   160f8:	mov	r4, r0
   160fc:	mov	r0, #0
   16100:	sub	r5, r7, #1
   16104:	str	r0, [sl]
   16108:	str	r0, [r6]
   1610c:	cmp	r4, #1
   16110:	blt	1623c <__assert_fail@plt+0x42c4>
   16114:	bl	11cf0 <__ctype_b_loc@plt>
   16118:	ldrb	r1, [r5, r4]
   1611c:	ldr	r0, [r0]
   16120:	sub	r4, r4, #1
   16124:	add	r0, r0, r1, lsl #1
   16128:	ldrb	r0, [r0, #1]
   1612c:	tst	r0, #32
   16130:	bne	1610c <__assert_fail@plt+0x4194>
   16134:	str	r6, [sp, #4]
   16138:	add	r9, r4, #1
   1613c:	add	r6, r7, #1
   16140:	mov	r5, #0
   16144:	mov	r8, #1
   16148:	mov	r4, #1
   1614c:	str	r7, [sp, #12]
   16150:	b	1616c <__assert_fail@plt+0x41f4>
   16154:	mov	r7, r5
   16158:	add	r5, r7, #1
   1615c:	ldr	r7, [sp, #12]
   16160:	add	r4, r4, #1
   16164:	cmp	r5, r9
   16168:	bge	16244 <__assert_fail@plt+0x42cc>
   1616c:	cmp	r5, r9
   16170:	str	r4, [sl]
   16174:	bge	16198 <__assert_fail@plt+0x4220>
   16178:	ldrb	r0, [r7, r5]
   1617c:	cmp	r0, #32
   16180:	cmpne	r0, #9
   16184:	bne	16198 <__assert_fail@plt+0x4220>
   16188:	add	r5, r5, #1
   1618c:	cmp	r9, r5
   16190:	bne	16178 <__assert_fail@plt+0x4200>
   16194:	mov	r5, r9
   16198:	ldrb	r0, [r7, r5]
   1619c:	cmp	r0, #39	; 0x27
   161a0:	cmpne	r0, #34	; 0x22
   161a4:	bne	161d8 <__assert_fail@plt+0x4260>
   161a8:	ldrb	r1, [r6, r5]
   161ac:	add	r7, r5, #1
   161b0:	cmp	r7, r9
   161b4:	bge	161c8 <__assert_fail@plt+0x4250>
   161b8:	cmp	r1, r0
   161bc:	mov	r5, r7
   161c0:	bne	161a8 <__assert_fail@plt+0x4230>
   161c4:	b	16158 <__assert_fail@plt+0x41e0>
   161c8:	add	r5, r5, #1
   161cc:	cmp	r1, #34	; 0x22
   161d0:	bne	161e4 <__assert_fail@plt+0x426c>
   161d4:	b	16154 <__assert_fail@plt+0x41dc>
   161d8:	mov	r1, r0
   161dc:	cmp	r1, #34	; 0x22
   161e0:	beq	16154 <__assert_fail@plt+0x41dc>
   161e4:	ldr	r0, [sp, #16]
   161e8:	bl	11d44 <strchr@plt>
   161ec:	cmp	r0, #0
   161f0:	bne	16154 <__assert_fail@plt+0x41dc>
   161f4:	b	16208 <__assert_fail@plt+0x4290>
   161f8:	ldr	r0, [sp, #16]
   161fc:	bl	11d44 <strchr@plt>
   16200:	cmp	r0, #0
   16204:	bne	16158 <__assert_fail@plt+0x41e0>
   16208:	mov	r7, r5
   1620c:	add	r5, r5, #1
   16210:	cmp	r5, r9
   16214:	bge	16158 <__assert_fail@plt+0x41e0>
   16218:	ldrb	r1, [r6, r7]
   1621c:	sub	r0, r1, #9
   16220:	cmp	r0, #25
   16224:	bhi	161f8 <__assert_fail@plt+0x4280>
   16228:	movw	r2, #1
   1622c:	movt	r2, #640	; 0x280
   16230:	tst	r2, r8, lsl r0
   16234:	beq	161f8 <__assert_fail@plt+0x4280>
   16238:	b	16158 <__assert_fail@plt+0x41e0>
   1623c:	mov	r4, #1
   16240:	b	16420 <__assert_fail@plt+0x44a8>
   16244:	mov	r0, r4
   16248:	mov	r1, #4
   1624c:	bl	180e0 <argp_parse@@Base+0x19bc>
   16250:	ldr	r1, [sp, #4]
   16254:	mov	r2, #0
   16258:	str	r0, [r1]
   1625c:	ldr	r1, [sl]
   16260:	cmp	r1, #1
   16264:	blt	16414 <__assert_fail@plt+0x449c>
   16268:	mov	r1, #0
   1626c:	mov	r5, #0
   16270:	str	sl, [sp]
   16274:	cmp	r5, r9
   16278:	str	r1, [sp, #8]
   1627c:	bge	162a0 <__assert_fail@plt+0x4328>
   16280:	ldrb	r0, [r7, r5]
   16284:	cmp	r0, #32
   16288:	cmpne	r0, #9
   1628c:	bne	162a0 <__assert_fail@plt+0x4328>
   16290:	add	r5, r5, #1
   16294:	cmp	r9, r5
   16298:	bne	16280 <__assert_fail@plt+0x4308>
   1629c:	mov	r5, r9
   162a0:	ldrb	r4, [r7, r5]
   162a4:	cmp	r4, #39	; 0x27
   162a8:	beq	162bc <__assert_fail@plt+0x4344>
   162ac:	cmp	r4, #34	; 0x22
   162b0:	mov	r1, r4
   162b4:	mov	r8, r5
   162b8:	bne	162e4 <__assert_fail@plt+0x436c>
   162bc:	mov	r0, r5
   162c0:	ldrb	r1, [r6, r0]
   162c4:	add	sl, r0, #1
   162c8:	cmp	sl, r9
   162cc:	bge	162e0 <__assert_fail@plt+0x4368>
   162d0:	cmp	r1, r4
   162d4:	mov	r0, sl
   162d8:	bne	162c0 <__assert_fail@plt+0x4348>
   162dc:	b	1631c <__assert_fail@plt+0x43a4>
   162e0:	add	r8, r0, #1
   162e4:	cmp	r1, #34	; 0x22
   162e8:	bne	16308 <__assert_fail@plt+0x4390>
   162ec:	mov	sl, r8
   162f0:	cmp	r4, #39	; 0x27
   162f4:	bne	16324 <__assert_fail@plt+0x43ac>
   162f8:	ldrb	r0, [r7, sl]
   162fc:	cmp	r0, #39	; 0x27
   16300:	bne	1638c <__assert_fail@plt+0x4414>
   16304:	b	16338 <__assert_fail@plt+0x43c0>
   16308:	ldr	r0, [sp, #16]
   1630c:	bl	11d44 <strchr@plt>
   16310:	cmp	r0, #0
   16314:	beq	16354 <__assert_fail@plt+0x43dc>
   16318:	mov	sl, r8
   1631c:	cmp	r4, #39	; 0x27
   16320:	beq	162f8 <__assert_fail@plt+0x4380>
   16324:	cmp	r4, #34	; 0x22
   16328:	bne	1638c <__assert_fail@plt+0x4414>
   1632c:	ldrb	r0, [r7, sl]
   16330:	cmp	r0, #34	; 0x22
   16334:	bne	1638c <__assert_fail@plt+0x4414>
   16338:	sub	r0, sl, #1
   1633c:	add	r5, r5, #1
   16340:	b	16390 <__assert_fail@plt+0x4418>
   16344:	ldr	r0, [sp, #16]
   16348:	bl	11d44 <strchr@plt>
   1634c:	cmp	r0, #0
   16350:	bne	1631c <__assert_fail@plt+0x43a4>
   16354:	mov	sl, r8
   16358:	add	r8, r8, #1
   1635c:	cmp	r8, r9
   16360:	bge	1631c <__assert_fail@plt+0x43a4>
   16364:	ldrb	r1, [r6, sl]
   16368:	sub	r0, r1, #9
   1636c:	cmp	r0, #25
   16370:	bhi	16344 <__assert_fail@plt+0x43cc>
   16374:	movw	r2, #1
   16378:	mov	r3, #1
   1637c:	movt	r2, #640	; 0x280
   16380:	tst	r2, r3, lsl r0
   16384:	beq	16344 <__assert_fail@plt+0x43cc>
   16388:	b	1631c <__assert_fail@plt+0x43a4>
   1638c:	mov	r0, sl
   16390:	sub	r7, r0, r5
   16394:	mov	r1, #1
   16398:	mov	r4, #1
   1639c:	add	r0, r7, #2
   163a0:	bl	180e0 <argp_parse@@Base+0x19bc>
   163a4:	ldr	r8, [sp, #4]
   163a8:	ldr	r2, [sp, #8]
   163ac:	ldr	r1, [r8]
   163b0:	str	r0, [r1, r2, lsl #2]
   163b4:	ldr	r0, [r8]
   163b8:	ldr	r0, [r0, r2, lsl #2]
   163bc:	cmp	r0, #0
   163c0:	beq	16420 <__assert_fail@plt+0x44a8>
   163c4:	add	r4, r7, #1
   163c8:	ldr	r7, [sp, #12]
   163cc:	mov	r1, r5
   163d0:	add	r5, sl, #1
   163d4:	mov	r2, r4
   163d8:	add	r1, r7, r1
   163dc:	bl	11b64 <memcpy@plt>
   163e0:	ldr	r1, [sp, #8]
   163e4:	ldr	r0, [r8]
   163e8:	mov	r2, #0
   163ec:	ldr	r0, [r0, r1, lsl #2]
   163f0:	add	r1, r1, #1
   163f4:	strb	r2, [r0, r4]
   163f8:	ldr	r0, [sp]
   163fc:	ldr	r0, [r0]
   16400:	cmp	r1, r0
   16404:	blt	16274 <__assert_fail@plt+0x42fc>
   16408:	ldr	r0, [r8]
   1640c:	mov	r2, #0
   16410:	b	16418 <__assert_fail@plt+0x44a0>
   16414:	mov	r1, #0
   16418:	mov	r4, #0
   1641c:	str	r2, [r0, r1, lsl #2]
   16420:	mov	r0, r4
   16424:	sub	sp, fp, #28
   16428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1642c:	push	{r4, r5, r6, sl, fp, lr}
   16430:	add	fp, sp, #16
   16434:	mov	r4, r1
   16438:	cmp	r0, #1
   1643c:	blt	1645c <__assert_fail@plt+0x44e4>
   16440:	mov	r5, r0
   16444:	sub	r6, r4, #4
   16448:	ldr	r0, [r6, r5, lsl #2]
   1644c:	bl	17a00 <argp_parse@@Base+0x12dc>
   16450:	sub	r5, r5, #1
   16454:	cmp	r5, #0
   16458:	bgt	16448 <__assert_fail@plt+0x44d0>
   1645c:	mov	r0, r4
   16460:	bl	17a00 <argp_parse@@Base+0x12dc>
   16464:	mov	r0, #1
   16468:	pop	{r4, r5, r6, sl, fp, pc}
   1646c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16470:	add	fp, sp, #28
   16474:	sub	sp, sp, #4
   16478:	cmp	r2, #0
   1647c:	beq	16520 <__assert_fail@plt+0x45a8>
   16480:	mov	r4, r0
   16484:	mov	r0, #1
   16488:	mov	r5, r2
   1648c:	mov	r7, r1
   16490:	bl	18134 <argp_parse@@Base+0x1a10>
   16494:	cmp	r0, #0
   16498:	beq	16520 <__assert_fail@plt+0x45a8>
   1649c:	mov	r9, #0
   164a0:	mov	r6, r0
   164a4:	cmp	r4, #1
   164a8:	strb	r9, [r0]
   164ac:	blt	16570 <__assert_fail@plt+0x45f8>
   164b0:	str	r5, [sp]
   164b4:	mov	r5, #0
   164b8:	mov	sl, #32
   164bc:	mov	r8, #0
   164c0:	b	164dc <__assert_fail@plt+0x4564>
   164c4:	ldr	r1, [r7, r8, lsl #2]
   164c8:	mov	r0, r6
   164cc:	bl	11c54 <strcat@plt>
   164d0:	add	r8, r8, #1
   164d4:	cmp	r4, r8
   164d8:	beq	16528 <__assert_fail@plt+0x45b0>
   164dc:	ldr	r0, [r7, r8, lsl #2]
   164e0:	bl	11d2c <strlen@plt>
   164e4:	add	r0, r5, r0
   164e8:	add	r5, r0, #2
   164ec:	mov	r0, r6
   164f0:	mov	r1, r5
   164f4:	bl	18164 <argp_parse@@Base+0x1a40>
   164f8:	cmp	r0, #0
   164fc:	beq	16520 <__assert_fail@plt+0x45a8>
   16500:	mov	r6, r0
   16504:	cmp	r8, #0
   16508:	beq	164c4 <__assert_fail@plt+0x454c>
   1650c:	mov	r0, r6
   16510:	bl	11d2c <strlen@plt>
   16514:	add	r0, r6, r0
   16518:	strh	sl, [r0]
   1651c:	b	164c4 <__assert_fail@plt+0x454c>
   16520:	mov	r9, #1
   16524:	b	16574 <__assert_fail@plt+0x45fc>
   16528:	ldrb	r0, [r6]
   1652c:	ldr	r5, [sp]
   16530:	cmp	r0, #0
   16534:	beq	16570 <__assert_fail@plt+0x45f8>
   16538:	mov	r0, r6
   1653c:	bl	11d2c <strlen@plt>
   16540:	add	r0, r0, r6
   16544:	ldrb	r1, [r0, #-1]!
   16548:	cmp	r1, #32
   1654c:	bne	16570 <__assert_fail@plt+0x45f8>
   16550:	mov	r4, #0
   16554:	strb	r4, [r0]
   16558:	mov	r0, r6
   1655c:	bl	11d2c <strlen@plt>
   16560:	add	r0, r0, r6
   16564:	ldrb	r1, [r0, #-1]!
   16568:	cmp	r1, #32
   1656c:	beq	16554 <__assert_fail@plt+0x45dc>
   16570:	str	r6, [r5]
   16574:	mov	r0, r9
   16578:	sub	sp, fp, #28
   1657c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16580:	push	{r4, sl, fp, lr}
   16584:	add	fp, sp, #8
   16588:	mov	r0, #0
   1658c:	bl	11bd0 <alarm@plt>
   16590:	mov	r4, r0
   16594:	mov	r0, #14
   16598:	mov	r1, #0
   1659c:	bl	11b70 <signal@plt>
   165a0:	cmp	r4, #0
   165a4:	popne	{r4, sl, fp, pc}
   165a8:	movw	r2, #56769	; 0xddc1
   165ac:	mov	r0, #1
   165b0:	mov	r1, #0
   165b4:	movt	r2, #1
   165b8:	pop	{r4, sl, fp, lr}
   165bc:	b	11c6c <error@plt>
   165c0:	push	{r4, r5, r6, r7, fp, lr}
   165c4:	add	fp, sp, #16
   165c8:	mov	r7, r2
   165cc:	mov	r5, r1
   165d0:	mov	r6, r0
   165d4:	bl	11cfc <getpid@plt>
   165d8:	mov	r4, r0
   165dc:	bl	11e1c <fork@plt>
   165e0:	cmn	r0, #1
   165e4:	beq	16650 <__assert_fail@plt+0x46d8>
   165e8:	cmp	r0, #0
   165ec:	bne	166dc <__assert_fail@plt+0x4764>
   165f0:	bl	11d38 <setsid@plt>
   165f4:	mov	r1, r0
   165f8:	mvn	r0, #0
   165fc:	cmn	r1, #1
   16600:	beq	16650 <__assert_fail@plt+0x46d8>
   16604:	mov	r0, #1
   16608:	mov	r1, #1
   1660c:	bl	11b70 <signal@plt>
   16610:	bl	11e1c <fork@plt>
   16614:	cmn	r0, #1
   16618:	beq	16650 <__assert_fail@plt+0x46d8>
   1661c:	cmp	r0, #0
   16620:	bne	16700 <__assert_fail@plt+0x4788>
   16624:	cmp	r6, #0
   16628:	bne	16644 <__assert_fail@plt+0x46cc>
   1662c:	movw	r0, #58208	; 0xe360
   16630:	movt	r0, #1
   16634:	bl	11c0c <chdir@plt>
   16638:	cmp	r0, #0
   1663c:	mvn	r0, #0
   16640:	bmi	16650 <__assert_fail@plt+0x46d8>
   16644:	cmp	r5, #0
   16648:	beq	16654 <__assert_fail@plt+0x46dc>
   1664c:	mov	r0, r4
   16650:	pop	{r4, r5, r6, r7, fp, pc}
   16654:	mov	r0, #4
   16658:	bl	11bdc <sysconf@plt>
   1665c:	cmn	r0, #1
   16660:	mov	r5, r0
   16664:	movweq	r5, #64	; 0x40
   16668:	cmp	r5, #1
   1666c:	blt	16688 <__assert_fail@plt+0x4710>
   16670:	mov	r6, #0
   16674:	mov	r0, r6
   16678:	bl	11f48 <close@plt>
   1667c:	add	r6, r6, #1
   16680:	cmp	r5, r6
   16684:	bne	16674 <__assert_fail@plt+0x46fc>
   16688:	movw	r0, #56797	; 0xdddd
   1668c:	mov	r1, #2
   16690:	mov	r2, #0
   16694:	movt	r0, #1
   16698:	bl	11c84 <open64@plt>
   1669c:	cmn	r0, #1
   166a0:	beq	1664c <__assert_fail@plt+0x46d4>
   166a4:	mov	r1, #0
   166a8:	mov	r5, r0
   166ac:	bl	11be8 <dup2@plt>
   166b0:	mov	r0, r5
   166b4:	mov	r1, #1
   166b8:	bl	11be8 <dup2@plt>
   166bc:	mov	r0, r5
   166c0:	mov	r1, #2
   166c4:	bl	11be8 <dup2@plt>
   166c8:	cmp	r5, #3
   166cc:	blt	1664c <__assert_fail@plt+0x46d4>
   166d0:	mov	r0, r5
   166d4:	bl	11f48 <close@plt>
   166d8:	b	1664c <__assert_fail@plt+0x46d4>
   166dc:	cmp	r7, #1
   166e0:	blt	16700 <__assert_fail@plt+0x4788>
   166e4:	movw	r1, #25984	; 0x6580
   166e8:	mov	r0, #14
   166ec:	movt	r1, #1
   166f0:	bl	11b70 <signal@plt>
   166f4:	mov	r0, r7
   166f8:	bl	11bd0 <alarm@plt>
   166fc:	bl	11ae0 <pause@plt>
   16700:	mov	r0, #0
   16704:	bl	11b58 <_exit@plt>

00016708 <daemon@@Base>:
   16708:	push	{fp, lr}
   1670c:	mov	fp, sp
   16710:	mov	r2, #0
   16714:	bl	165c0 <__assert_fail@plt+0x4648>
   16718:	cmn	r0, #1
   1671c:	movwne	r0, #0
   16720:	pop	{fp, pc}

00016724 <argp_parse@@Base>:
   16724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16728:	add	fp, sp, #28
   1672c:	sub	sp, sp, #212	; 0xd4
   16730:	mov	r4, r3
   16734:	mov	r6, r2
   16738:	mov	r7, r1
   1673c:	mov	r5, r0
   16740:	tst	r3, #1
   16744:	bne	16784 <argp_parse@@Base+0x60>
   16748:	movw	r0, #62380	; 0xf3ac
   1674c:	movt	r0, #2
   16750:	ldr	r1, [r0]
   16754:	cmp	r1, #0
   16758:	bne	16764 <argp_parse@@Base+0x40>
   1675c:	ldr	r1, [r6]
   16760:	str	r1, [r0]
   16764:	movw	r8, #62376	; 0xf3a8
   16768:	movt	r8, #2
   1676c:	ldr	r0, [r8]
   16770:	cmp	r0, #0
   16774:	bne	16784 <argp_parse@@Base+0x60>
   16778:	ldr	r0, [r6]
   1677c:	bl	1797c <argp_parse@@Base+0x1258>
   16780:	str	r0, [r8]
   16784:	tst	r4, #16
   16788:	str	r6, [fp, #-228]	; 0xffffff1c
   1678c:	str	r7, [fp, #-232]	; 0xffffff18
   16790:	bne	16840 <argp_parse@@Base+0x11c>
   16794:	mov	r1, sp
   16798:	sub	r3, r1, #64	; 0x40
   1679c:	mov	sp, r3
   167a0:	mov	r2, sp
   167a4:	sub	r0, r2, #32
   167a8:	mov	sp, r0
   167ac:	vmov.i32	q8, #0	; 0x00000000
   167b0:	sub	r2, r2, #20
   167b4:	cmp	r5, #0
   167b8:	vst1.32	{d16-d17}, [r2]
   167bc:	mov	r2, r0
   167c0:	vst1.64	{d16-d17}, [r2]!
   167c4:	str	r3, [r2]
   167c8:	sub	r2, r1, #32
   167cc:	sub	r1, r1, #48	; 0x30
   167d0:	vst1.64	{d16-d17}, [r2]
   167d4:	vst1.64	{d16-d17}, [r1]
   167d8:	mov	r1, #48	; 0x30
   167dc:	mov	r2, r3
   167e0:	vst1.64	{d16-d17}, [r2], r1
   167e4:	vst1.64	{d16-d17}, [r2]
   167e8:	movw	r2, #56808	; 0xdde8
   167ec:	strne	r5, [r3], #16
   167f0:	movt	r2, #1
   167f4:	mov	r1, r3
   167f8:	str	r2, [r1], #16
   167fc:	movw	r2, #63012	; 0xf624
   16800:	movt	r2, #2
   16804:	ldr	r2, [r2]
   16808:	cmp	r2, #0
   1680c:	bne	16824 <argp_parse@@Base+0x100>
   16810:	movw	r2, #62652	; 0xf4bc
   16814:	movt	r2, #2
   16818:	ldr	r2, [r2]
   1681c:	cmp	r2, #0
   16820:	beq	16834 <argp_parse@@Base+0x110>
   16824:	movw	r2, #56836	; 0xde04
   16828:	mov	r3, r1
   1682c:	movt	r2, #1
   16830:	str	r2, [r1]
   16834:	mov	r1, #0
   16838:	str	r1, [r3, #16]
   1683c:	b	16844 <argp_parse@@Base+0x120>
   16840:	mov	r0, r5
   16844:	vmov.i32	q8, #0	; 0x00000000
   16848:	sub	r9, fp, #96	; 0x60
   1684c:	mov	r7, #12
   16850:	mov	r5, #0
   16854:	cmp	r0, #0
   16858:	str	r4, [fp, #-224]	; 0xffffff20
   1685c:	str	r0, [fp, #-236]	; 0xffffff14
   16860:	mov	r1, r9
   16864:	str	r5, [fp, #-52]	; 0xffffffcc
   16868:	str	r5, [fp, #-56]	; 0xffffffc8
   1686c:	str	r5, [fp, #-60]	; 0xffffffc4
   16870:	vst1.64	{d16-d17}, [r1], r7
   16874:	vst1.32	{d16-d17}, [r1]
   16878:	mov	r1, #1
   1687c:	bic	r3, r1, r4, lsr #2
   16880:	str	r3, [fp, #-64]	; 0xffffffc0
   16884:	beq	168bc <argp_parse@@Base+0x198>
   16888:	sub	r1, fp, #64	; 0x40
   1688c:	bl	17574 <argp_parse@@Base+0xe50>
   16890:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16894:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16898:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1689c:	mov	r6, #16
   168a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   168a4:	add	r2, r2, r2, lsl #3
   168a8:	add	r1, r6, r1, lsl #4
   168ac:	mov	r6, #36	; 0x24
   168b0:	lsl	r5, r0, #2
   168b4:	add	r8, r6, r2, lsl #2
   168b8:	b	168c4 <argp_parse@@Base+0x1a0>
   168bc:	mov	r8, #36	; 0x24
   168c0:	mov	r1, #16
   168c4:	add	r4, r8, r5
   168c8:	add	sl, r4, r1
   168cc:	add	r0, r3, sl
   168d0:	add	r0, r0, #1
   168d4:	bl	18134 <argp_parse@@Base+0x1a10>
   168d8:	cmp	r0, #0
   168dc:	str	r0, [fp, #-100]	; 0xffffff9c
   168e0:	beq	17314 <argp_parse@@Base+0xbf0>
   168e4:	mov	r6, r0
   168e8:	mov	r0, #12
   168ec:	sub	r1, fp, #220	; 0xdc
   168f0:	mov	r2, r5
   168f4:	vld1.64	{d16-d17}, [r9], r0
   168f8:	add	r0, r1, #20
   168fc:	add	r7, r6, r8
   16900:	add	r8, r6, r4
   16904:	add	r4, r6, sl
   16908:	vld1.32	{d18-d19}, [r9]
   1690c:	mov	r9, r1
   16910:	vst1.32	{d16-d17}, [r0]
   16914:	add	r0, r1, #32
   16918:	mov	r1, #0
   1691c:	vst1.32	{d18-d19}, [r0]
   16920:	mov	r0, #1
   16924:	str	r6, [fp, #-172]	; 0xffffff54
   16928:	str	r0, [fp, #-204]	; 0xffffff34
   1692c:	str	r0, [fp, #-208]	; 0xffffff30
   16930:	mov	r0, r7
   16934:	str	r7, [fp, #-164]	; 0xffffff5c
   16938:	str	r8, [fp, #-212]	; 0xffffff2c
   1693c:	str	r4, [fp, #-216]	; 0xffffff28
   16940:	bl	11da4 <memset@plt>
   16944:	ldr	sl, [fp, #-224]	; 0xffffff20
   16948:	mov	r0, #45	; 0x2d
   1694c:	str	r7, [fp, #-36]	; 0xffffffdc
   16950:	str	r8, [fp, #-40]	; 0xffffffd8
   16954:	str	r4, [fp, #-44]	; 0xffffffd4
   16958:	str	r9, [fp, #-48]	; 0xffffffd0
   1695c:	tst	sl, #8
   16960:	moveq	r0, #43	; 0x2b
   16964:	tsteq	sl, #4
   16968:	beq	16f64 <argp_parse@@Base+0x840>
   1696c:	add	r1, r4, #1
   16970:	strb	r0, [r4]
   16974:	str	r1, [fp, #-44]	; 0xffffffd4
   16978:	ldr	r0, [fp, #-236]	; 0xffffff14
   1697c:	ldr	r5, [fp, #-228]	; 0xffffff1c
   16980:	ldr	r9, [fp, #-232]	; 0xffffff18
   16984:	mov	r3, #0
   16988:	strb	r3, [r1]
   1698c:	str	r3, [r8]
   16990:	cmp	r0, #0
   16994:	str	r0, [fp, #-220]	; 0xffffff24
   16998:	beq	169d0 <argp_parse@@Base+0x2ac>
   1699c:	sub	sp, sp, #8
   169a0:	sub	r1, fp, #48	; 0x30
   169a4:	mov	r2, #0
   169a8:	mov	r3, r6
   169ac:	str	r1, [sp]
   169b0:	mov	r1, #0
   169b4:	bl	17654 <argp_parse@@Base+0xf30>
   169b8:	add	sp, sp, #8
   169bc:	str	r0, [fp, #-168]	; 0xffffff58
   169c0:	mov	r6, r0
   169c4:	ldr	r3, [fp, #-220]	; 0xffffff24
   169c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   169cc:	b	169d8 <argp_parse@@Base+0x2b4>
   169d0:	mov	r4, r6
   169d4:	str	r6, [fp, #-168]	; 0xffffff58
   169d8:	vmov.i32	q8, #0	; 0x00000000
   169dc:	sub	r1, fp, #220	; 0xdc
   169e0:	mov	r7, #0
   169e4:	mov	r0, #1
   169e8:	mov	r8, r5
   169ec:	cmp	r4, r6
   169f0:	mov	r2, r1
   169f4:	add	r1, r1, #84	; 0x54
   169f8:	str	r7, [fp, #-116]	; 0xffffff8c
   169fc:	str	r7, [fp, #-120]	; 0xffffff88
   16a00:	vst1.32	{d16-d17}, [r1]
   16a04:	str	sl, [fp, #-140]	; 0xffffff74
   16a08:	str	r5, [fp, #-148]	; 0xffffff6c
   16a0c:	str	r9, [fp, #-152]	; 0xffffff68
   16a10:	str	r3, [fp, #-156]	; 0xffffff64
   16a14:	str	r2, [fp, #-104]	; 0xffffff98
   16a18:	str	r7, [fp, #-144]	; 0xffffff70
   16a1c:	str	r0, [fp, #-160]	; 0xffffff60
   16a20:	movw	r0, #62384	; 0xf3b0
   16a24:	add	sl, r2, #64	; 0x40
   16a28:	movt	r0, #2
   16a2c:	ldr	r0, [r0]
   16a30:	str	r0, [fp, #-112]	; 0xffffff90
   16a34:	movw	r0, #62388	; 0xf3b4
   16a38:	movt	r0, #2
   16a3c:	ldr	r0, [r0]
   16a40:	str	r0, [fp, #-108]	; 0xffffff94
   16a44:	bcs	16b24 <argp_parse@@Base+0x400>
   16a48:	ldr	r0, [fp, #12]
   16a4c:	str	r0, [r4, #24]
   16a50:	b	16aa8 <argp_parse@@Base+0x384>
   16a54:	ldr	r0, [r4, #32]
   16a58:	mov	r1, #0
   16a5c:	mov	r2, sl
   16a60:	str	r0, [fp, #-120]	; 0xffffff88
   16a64:	ldr	r0, [r4, #24]
   16a68:	str	r0, [fp, #-128]	; 0xffffff80
   16a6c:	ldr	r0, [r4, #28]
   16a70:	str	r0, [fp, #-124]	; 0xffffff84
   16a74:	ldr	r0, [r4, #12]
   16a78:	str	r0, [fp, #-136]	; 0xffffff78
   16a7c:	movw	r0, #6
   16a80:	movt	r0, #256	; 0x100
   16a84:	sub	r0, r0, #3
   16a88:	blx	r3
   16a8c:	mov	r7, r0
   16a90:	ldr	r0, [fp, #-120]	; 0xffffff88
   16a94:	str	r0, [r4, #32]
   16a98:	ldr	r0, [fp, #-168]	; 0xffffff58
   16a9c:	add	r4, r4, #36	; 0x24
   16aa0:	cmp	r4, r0
   16aa4:	bcs	16b18 <argp_parse@@Base+0x3f4>
   16aa8:	cmp	r7, #7
   16aac:	cmpne	r7, #0
   16ab0:	bne	17314 <argp_parse@@Base+0xbf0>
   16ab4:	ldr	r0, [r4, #16]
   16ab8:	cmp	r0, #0
   16abc:	beq	16ad0 <argp_parse@@Base+0x3ac>
   16ac0:	ldr	r1, [r4, #20]
   16ac4:	ldr	r0, [r0, #28]
   16ac8:	ldr	r0, [r0, r1, lsl #2]
   16acc:	str	r0, [r4, #24]
   16ad0:	ldr	r3, [r4]
   16ad4:	cmp	r3, #0
   16ad8:	bne	16a54 <argp_parse@@Base+0x330>
   16adc:	ldr	r0, [r4, #4]
   16ae0:	mov	r7, #7
   16ae4:	ldr	r0, [r0, #16]
   16ae8:	cmp	r0, #0
   16aec:	beq	16a98 <argp_parse@@Base+0x374>
   16af0:	ldr	r0, [r0]
   16af4:	cmp	r0, #0
   16af8:	beq	16a98 <argp_parse@@Base+0x374>
   16afc:	ldr	r0, [r4, #24]
   16b00:	ldr	r1, [r4, #28]
   16b04:	str	r0, [r1]
   16b08:	ldr	r3, [r4]
   16b0c:	cmp	r3, #0
   16b10:	bne	16a54 <argp_parse@@Base+0x330>
   16b14:	b	16a98 <argp_parse@@Base+0x374>
   16b18:	cmp	r7, #7
   16b1c:	cmpne	r7, #0
   16b20:	bne	17314 <argp_parse@@Base+0xbf0>
   16b24:	ldr	r0, [fp, #-140]	; 0xffffff74
   16b28:	tst	r0, #2
   16b2c:	bne	16b3c <argp_parse@@Base+0x418>
   16b30:	mov	r0, #1
   16b34:	str	r0, [fp, #-204]	; 0xffffff34
   16b38:	b	16b64 <argp_parse@@Base+0x440>
   16b3c:	mov	r1, #0
   16b40:	tst	r0, #1
   16b44:	str	r1, [fp, #-204]	; 0xffffff34
   16b48:	beq	16b64 <argp_parse@@Base+0x440>
   16b4c:	ldr	r0, [fp, #-152]	; 0xffffff68
   16b50:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16b54:	sub	r1, r1, #4
   16b58:	add	r0, r0, #1
   16b5c:	str	r1, [fp, #-148]	; 0xffffff6c
   16b60:	str	r0, [fp, #-152]	; 0xffffff68
   16b64:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16b68:	cmp	r0, r8
   16b6c:	beq	16b80 <argp_parse@@Base+0x45c>
   16b70:	movw	r0, #62376	; 0xf3a8
   16b74:	movt	r0, #2
   16b78:	ldr	r0, [r0]
   16b7c:	b	16b90 <argp_parse@@Base+0x46c>
   16b80:	ldr	r0, [r8]
   16b84:	cmp	r0, #0
   16b88:	beq	16b70 <argp_parse@@Base+0x44c>
   16b8c:	bl	1797c <argp_parse@@Base+0x1258>
   16b90:	str	r0, [fp, #-116]	; 0xffffff8c
   16b94:	sub	r0, fp, #220	; 0xdc
   16b98:	mov	r8, #0
   16b9c:	add	r6, r0, #12
   16ba0:	b	16bb4 <argp_parse@@Base+0x490>
   16ba4:	cmp	r0, #7
   16ba8:	beq	16f6c <argp_parse@@Base+0x848>
   16bac:	cmp	r0, #0
   16bb0:	bne	17104 <argp_parse@@Base+0x9e0>
   16bb4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16bb8:	cmp	r0, #0
   16bbc:	beq	16bd0 <argp_parse@@Base+0x4ac>
   16bc0:	ldr	r9, [fp, #-144]	; 0xffffff70
   16bc4:	cmp	r9, r0
   16bc8:	bge	16c84 <argp_parse@@Base+0x560>
   16bcc:	str	r8, [fp, #-132]	; 0xffffff7c
   16bd0:	ldr	r0, [fp, #-160]	; 0xffffff60
   16bd4:	ldr	r9, [fp, #-144]	; 0xffffff70
   16bd8:	cmp	r0, #0
   16bdc:	beq	16c84 <argp_parse@@Base+0x560>
   16be0:	mvn	r0, #0
   16be4:	str	r0, [fp, #-200]	; 0xffffff38
   16be8:	str	r9, [fp, #-208]	; 0xffffff30
   16bec:	ldr	r2, [fp, #-216]	; 0xffffff28
   16bf0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16bf4:	ldr	r0, [fp, #-152]	; 0xffffff68
   16bf8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16bfc:	ldrb	r7, [fp, #-140]	; 0xffffff74
   16c00:	sub	sp, sp, #8
   16c04:	tst	r7, #64	; 0x40
   16c08:	bne	16c1c <argp_parse@@Base+0x4f8>
   16c0c:	str	r8, [sp]
   16c10:	str	r6, [sp, #4]
   16c14:	bl	17a54 <argp_parse@@Base+0x1330>
   16c18:	b	16c28 <argp_parse@@Base+0x504>
   16c1c:	str	r8, [sp]
   16c20:	str	r6, [sp, #4]
   16c24:	bl	17ab8 <argp_parse@@Base+0x1394>
   16c28:	add	sp, sp, #8
   16c2c:	ldr	r9, [fp, #-208]	; 0xffffff30
   16c30:	mov	r7, r0
   16c34:	cmn	r0, #1
   16c38:	str	r9, [fp, #-144]	; 0xffffff70
   16c3c:	beq	16c58 <argp_parse@@Base+0x534>
   16c40:	cmp	r7, #63	; 0x3f
   16c44:	beq	16e20 <argp_parse@@Base+0x6fc>
   16c48:	cmp	r7, #1
   16c4c:	bne	16e30 <argp_parse@@Base+0x70c>
   16c50:	ldr	r7, [fp, #-196]	; 0xffffff3c
   16c54:	b	16cbc <argp_parse@@Base+0x598>
   16c58:	cmp	r9, #2
   16c5c:	str	r8, [fp, #-160]	; 0xffffff60
   16c60:	blt	16c84 <argp_parse@@Base+0x560>
   16c64:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16c68:	movw	r1, #57291	; 0xdfcb
   16c6c:	movt	r1, #1
   16c70:	add	r0, r0, r9, lsl #2
   16c74:	ldr	r0, [r0, #-4]
   16c78:	bl	11ab0 <strcmp@plt>
   16c7c:	cmp	r0, #0
   16c80:	streq	r9, [fp, #-132]	; 0xffffff7c
   16c84:	ldr	r2, [fp, #-152]	; 0xffffff68
   16c88:	mov	r1, #1
   16c8c:	mov	r0, #7
   16c90:	cmp	r9, r2
   16c94:	bge	16f88 <argp_parse@@Base+0x864>
   16c98:	ldrb	r2, [fp, #-140]	; 0xffffff74
   16c9c:	tst	r2, #4
   16ca0:	bne	16f88 <argp_parse@@Base+0x864>
   16ca4:	add	r0, r9, #1
   16ca8:	str	r0, [fp, #-144]	; 0xffffff70
   16cac:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16cb0:	ldr	r7, [r1, r9, lsl #2]
   16cb4:	mov	r9, r0
   16cb8:	str	r7, [fp, #-196]	; 0xffffff3c
   16cbc:	sub	r0, r9, #1
   16cc0:	str	r0, [fp, #-144]	; 0xffffff70
   16cc4:	ldr	r1, [fp, #-172]	; 0xffffff54
   16cc8:	ldr	r2, [fp, #-168]	; 0xffffff58
   16ccc:	cmp	r1, r2
   16cd0:	bcs	16f6c <argp_parse@@Base+0x848>
   16cd4:	add	r4, r1, #24
   16cd8:	add	r1, r0, #1
   16cdc:	str	r1, [fp, #-144]	; 0xffffff70
   16ce0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16ce4:	cmp	r3, #0
   16ce8:	beq	16d88 <argp_parse@@Base+0x664>
   16cec:	ldr	r0, [r4, #8]
   16cf0:	mov	r1, r7
   16cf4:	mov	r2, sl
   16cf8:	mov	r5, #0
   16cfc:	str	r0, [fp, #-120]	; 0xffffff88
   16d00:	ldr	r0, [r4]
   16d04:	str	r0, [fp, #-128]	; 0xffffff80
   16d08:	ldr	r0, [r4, #4]
   16d0c:	str	r0, [fp, #-124]	; 0xffffff84
   16d10:	ldr	r0, [r4, #-12]
   16d14:	str	r0, [fp, #-136]	; 0xffffff78
   16d18:	mov	r0, #0
   16d1c:	blx	r3
   16d20:	ldr	r1, [fp, #-120]	; 0xffffff88
   16d24:	cmp	r0, #7
   16d28:	str	r1, [r4, #8]
   16d2c:	bne	16dbc <argp_parse@@Base+0x698>
   16d30:	ldr	r0, [fp, #-144]	; 0xffffff70
   16d34:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16d38:	sub	r0, r0, #1
   16d3c:	cmp	r3, #0
   16d40:	str	r0, [fp, #-144]	; 0xffffff70
   16d44:	beq	16d8c <argp_parse@@Base+0x668>
   16d48:	ldr	r0, [r4]
   16d4c:	mov	r1, #0
   16d50:	mov	r2, sl
   16d54:	str	r0, [fp, #-128]	; 0xffffff80
   16d58:	ldr	r0, [r4, #4]
   16d5c:	str	r0, [fp, #-124]	; 0xffffff84
   16d60:	ldr	r0, [r4, #-12]
   16d64:	str	r0, [fp, #-136]	; 0xffffff78
   16d68:	movw	r0, #6
   16d6c:	movt	r0, #256	; 0x100
   16d70:	blx	r3
   16d74:	ldr	r1, [fp, #-120]	; 0xffffff88
   16d78:	str	r1, [r4, #8]
   16d7c:	cmp	r0, #7
   16d80:	beq	16d98 <argp_parse@@Base+0x674>
   16d84:	b	16db4 <argp_parse@@Base+0x690>
   16d88:	str	r0, [fp, #-144]	; 0xffffff70
   16d8c:	mov	r0, #7
   16d90:	cmp	r0, #7
   16d94:	bne	16db4 <argp_parse@@Base+0x690>
   16d98:	ldr	r2, [fp, #-168]	; 0xffffff58
   16d9c:	add	r1, r4, #12
   16da0:	cmp	r1, r2
   16da4:	bcs	16db4 <argp_parse@@Base+0x690>
   16da8:	ldr	r0, [fp, #-144]	; 0xffffff70
   16dac:	add	r4, r4, #36	; 0x24
   16db0:	b	16cd8 <argp_parse@@Base+0x5b4>
   16db4:	movw	r5, #6
   16db8:	movt	r5, #256	; 0x100
   16dbc:	cmp	r0, #0
   16dc0:	bne	16ba4 <argp_parse@@Base+0x480>
   16dc4:	movw	r0, #6
   16dc8:	movt	r0, #256	; 0x100
   16dcc:	cmp	r5, r0
   16dd0:	bne	16dfc <argp_parse@@Base+0x6d8>
   16dd4:	ldr	r0, [fp, #-152]	; 0xffffff68
   16dd8:	str	r0, [fp, #-144]	; 0xffffff70
   16ddc:	cmp	r0, r9
   16de0:	blt	16e08 <argp_parse@@Base+0x6e4>
   16de4:	ldr	r1, [r4, #-12]
   16de8:	sub	r0, r0, r9
   16dec:	add	r0, r0, r1
   16df0:	add	r0, r0, #1
   16df4:	str	r0, [r4, #-12]
   16df8:	b	16e10 <argp_parse@@Base+0x6ec>
   16dfc:	ldr	r0, [fp, #-144]	; 0xffffff70
   16e00:	cmp	r0, r9
   16e04:	bge	16de4 <argp_parse@@Base+0x6c0>
   16e08:	mov	r0, #1
   16e0c:	str	r0, [fp, #-160]	; 0xffffff60
   16e10:	mov	r0, #0
   16e14:	cmp	r0, #0
   16e18:	beq	16bb4 <argp_parse@@Base+0x490>
   16e1c:	b	17104 <argp_parse@@Base+0x9e0>
   16e20:	ldr	r0, [fp, #-200]	; 0xffffff38
   16e24:	cmn	r0, #1
   16e28:	beq	16e98 <argp_parse@@Base+0x774>
   16e2c:	b	17354 <argp_parse@@Base+0xc30>
   16e30:	cmp	r8, r7, asr #24
   16e34:	beq	16e98 <argp_parse@@Base+0x774>
   16e38:	asr	r0, r7, #24
   16e3c:	ldr	r1, [fp, #-172]	; 0xffffff54
   16e40:	sub	r0, r0, #1
   16e44:	add	r0, r0, r0, lsl #3
   16e48:	ldr	r3, [r1, r0, lsl #2]
   16e4c:	cmp	r3, #0
   16e50:	beq	17320 <argp_parse@@Base+0xbfc>
   16e54:	add	r4, r1, r0, lsl #2
   16e58:	tst	r7, #8388608	; 0x800000
   16e5c:	mov	r2, sl
   16e60:	ldr	r0, [r4, #32]!
   16e64:	str	r0, [fp, #-120]	; 0xffffff88
   16e68:	ldr	r0, [r4, #-8]
   16e6c:	str	r0, [fp, #-128]	; 0xffffff80
   16e70:	ldr	r0, [r4, #-4]
   16e74:	str	r0, [fp, #-124]	; 0xffffff84
   16e78:	ldr	r0, [r4, #-20]	; 0xffffffec
   16e7c:	str	r0, [fp, #-136]	; 0xffffff78
   16e80:	bic	r0, r7, #-16777216	; 0xff000000
   16e84:	ldr	r1, [fp, #-196]	; 0xffffff3c
   16e88:	orrne	r0, r0, #-16777216	; 0xff000000
   16e8c:	blx	r3
   16e90:	mov	r1, #0
   16e94:	b	16f28 <argp_parse@@Base+0x804>
   16e98:	ldr	r0, [fp, #-216]	; 0xffffff28
   16e9c:	mov	r1, r7
   16ea0:	bl	11d44 <strchr@plt>
   16ea4:	cmp	r0, #0
   16ea8:	beq	16f40 <argp_parse@@Base+0x81c>
   16eac:	ldr	r1, [fp, #-172]	; 0xffffff54
   16eb0:	ldr	r2, [fp, #-168]	; 0xffffff58
   16eb4:	cmp	r1, r2
   16eb8:	bcs	16f40 <argp_parse@@Base+0x81c>
   16ebc:	add	r1, r1, #24
   16ec0:	ldr	r3, [r1, #-16]
   16ec4:	cmp	r3, r0
   16ec8:	bhi	16ee4 <argp_parse@@Base+0x7c0>
   16ecc:	add	r3, r1, #36	; 0x24
   16ed0:	add	r1, r1, #12
   16ed4:	cmp	r1, r2
   16ed8:	mov	r1, r3
   16edc:	bcc	16ec0 <argp_parse@@Base+0x79c>
   16ee0:	b	16f40 <argp_parse@@Base+0x81c>
   16ee4:	ldr	r3, [r1, #-24]	; 0xffffffe8
   16ee8:	cmp	r3, #0
   16eec:	beq	16f40 <argp_parse@@Base+0x81c>
   16ef0:	mov	r4, r1
   16ef4:	mov	r2, sl
   16ef8:	ldr	r0, [r4, #8]!
   16efc:	str	r0, [fp, #-120]	; 0xffffff88
   16f00:	ldr	r0, [r1]
   16f04:	str	r0, [fp, #-128]	; 0xffffff80
   16f08:	ldr	r0, [r1, #4]
   16f0c:	str	r0, [fp, #-124]	; 0xffffff84
   16f10:	ldr	r0, [r1, #-12]
   16f14:	str	r0, [fp, #-136]	; 0xffffff78
   16f18:	mov	r0, r7
   16f1c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   16f20:	blx	r3
   16f24:	mov	r1, #1
   16f28:	ldr	r2, [fp, #-120]	; 0xffffff88
   16f2c:	cmp	r0, #7
   16f30:	str	r2, [r4]
   16f34:	bne	16bac <argp_parse@@Base+0x488>
   16f38:	cmp	r1, #0
   16f3c:	beq	17320 <argp_parse@@Base+0xbfc>
   16f40:	movw	r1, #57294	; 0xdfce
   16f44:	movw	r3, #57032	; 0xdec8
   16f48:	mov	r0, sl
   16f4c:	mov	r2, r7
   16f50:	movt	r1, #1
   16f54:	movt	r3, #1
   16f58:	bl	197b4 <argp_error@@Base>
   16f5c:	mov	r0, #0
   16f60:	b	16f74 <argp_parse@@Base+0x850>
   16f64:	mov	r1, r4
   16f68:	b	16978 <argp_parse@@Base+0x254>
   16f6c:	mov	r7, #1
   16f70:	mov	r0, #1
   16f74:	add	r1, r7, #1
   16f78:	clz	r1, r1
   16f7c:	lsr	r1, r1, #5
   16f80:	orr	r1, r1, r0
   16f84:	mov	r0, #7
   16f88:	subs	r7, r0, #7
   16f8c:	movne	r7, r0
   16f90:	cmp	r1, #0
   16f94:	moveq	r7, r0
   16f98:	cmp	r7, #0
   16f9c:	beq	1703c <argp_parse@@Base+0x918>
   16fa0:	cmp	r7, #0
   16fa4:	beq	171e8 <argp_parse@@Base+0xac4>
   16fa8:	cmp	r7, #7
   16fac:	bne	16fc4 <argp_parse@@Base+0x8a0>
   16fb0:	ldr	r1, [fp, #-112]	; 0xffffff90
   16fb4:	mov	r0, sl
   16fb8:	mov	r2, #260	; 0x104
   16fbc:	bl	196f8 <argp_state_help@@Base>
   16fc0:	mov	r7, #7
   16fc4:	ldr	r4, [fp, #-172]	; 0xffffff54
   16fc8:	ldr	r0, [fp, #-168]	; 0xffffff58
   16fcc:	cmp	r4, r0
   16fd0:	bcs	1728c <argp_parse@@Base+0xb68>
   16fd4:	movw	r1, #6
   16fd8:	movt	r1, #256	; 0x100
   16fdc:	sub	r6, r1, #1
   16fe0:	b	16ff0 <argp_parse@@Base+0x8cc>
   16fe4:	add	r4, r4, #36	; 0x24
   16fe8:	cmp	r4, r0
   16fec:	bcs	170e8 <argp_parse@@Base+0x9c4>
   16ff0:	ldr	r3, [r4]
   16ff4:	cmp	r3, #0
   16ff8:	beq	16fe4 <argp_parse@@Base+0x8c0>
   16ffc:	ldr	r0, [r4, #32]
   17000:	mov	r1, #0
   17004:	mov	r2, sl
   17008:	str	r0, [fp, #-120]	; 0xffffff88
   1700c:	ldr	r0, [r4, #24]
   17010:	str	r0, [fp, #-128]	; 0xffffff80
   17014:	ldr	r0, [r4, #28]
   17018:	str	r0, [fp, #-124]	; 0xffffff84
   1701c:	ldr	r0, [r4, #12]
   17020:	str	r0, [fp, #-136]	; 0xffffff78
   17024:	mov	r0, r6
   17028:	blx	r3
   1702c:	ldr	r0, [fp, #-120]	; 0xffffff88
   17030:	str	r0, [r4, #32]
   17034:	ldr	r0, [fp, #-168]	; 0xffffff58
   17038:	b	16fe4 <argp_parse@@Base+0x8c0>
   1703c:	ldr	r1, [fp, #-152]	; 0xffffff68
   17040:	ldr	r0, [fp, #-144]	; 0xffffff70
   17044:	cmp	r0, r1
   17048:	bne	170f0 <argp_parse@@Base+0x9cc>
   1704c:	ldr	r4, [fp, #-172]	; 0xffffff54
   17050:	ldr	r1, [fp, #-168]	; 0xffffff58
   17054:	mov	r0, #0
   17058:	cmp	r4, r1
   1705c:	bcs	17110 <argp_parse@@Base+0x9ec>
   17060:	movw	r0, #6
   17064:	mov	r7, #0
   17068:	movt	r0, #256	; 0x100
   1706c:	sub	r6, r0, #4
   17070:	mov	r0, #0
   17074:	b	170bc <argp_parse@@Base+0x998>
   17078:	ldr	r0, [r4, #32]
   1707c:	mov	r1, #0
   17080:	mov	r2, sl
   17084:	str	r0, [fp, #-120]	; 0xffffff88
   17088:	ldr	r0, [r4, #24]
   1708c:	str	r0, [fp, #-128]	; 0xffffff80
   17090:	ldr	r0, [r4, #28]
   17094:	str	r7, [fp, #-136]	; 0xffffff78
   17098:	str	r0, [fp, #-124]	; 0xffffff84
   1709c:	mov	r0, r6
   170a0:	blx	r3
   170a4:	ldr	r1, [fp, #-120]	; 0xffffff88
   170a8:	str	r1, [r4, #32]
   170ac:	ldr	r1, [fp, #-168]	; 0xffffff58
   170b0:	add	r4, r4, #36	; 0x24
   170b4:	cmp	r4, r1
   170b8:	bcs	1710c <argp_parse@@Base+0x9e8>
   170bc:	cmp	r0, #7
   170c0:	cmpne	r0, #0
   170c4:	bne	1710c <argp_parse@@Base+0x9e8>
   170c8:	ldr	r2, [r4, #12]
   170cc:	cmp	r2, #0
   170d0:	bne	170b0 <argp_parse@@Base+0x98c>
   170d4:	ldr	r3, [r4]
   170d8:	cmp	r3, #0
   170dc:	bne	17078 <argp_parse@@Base+0x954>
   170e0:	mov	r0, #7
   170e4:	b	170b0 <argp_parse@@Base+0x98c>
   170e8:	ldr	r4, [fp, #-172]	; 0xffffff54
   170ec:	b	1728c <argp_parse@@Base+0xb68>
   170f0:	ldr	r1, [fp, #8]
   170f4:	cmp	r1, #0
   170f8:	beq	171a0 <argp_parse@@Base+0xa7c>
   170fc:	str	r0, [r1]
   17100:	b	171e8 <argp_parse@@Base+0xac4>
   17104:	mov	r1, #0
   17108:	b	16f88 <argp_parse@@Base+0x864>
   1710c:	ldr	r4, [fp, #-172]	; 0xffffff54
   17110:	sub	r7, r1, #36	; 0x24
   17114:	cmp	r7, r4
   17118:	bcc	17194 <argp_parse@@Base+0xa70>
   1711c:	movw	r1, #6
   17120:	movt	r1, #256	; 0x100
   17124:	sub	r6, r1, #5
   17128:	b	17174 <argp_parse@@Base+0xa50>
   1712c:	ldr	r0, [r7, #32]
   17130:	mov	r1, #0
   17134:	mov	r2, sl
   17138:	str	r0, [fp, #-120]	; 0xffffff88
   1713c:	ldr	r0, [r7, #24]
   17140:	str	r0, [fp, #-128]	; 0xffffff80
   17144:	ldr	r0, [r7, #28]
   17148:	str	r0, [fp, #-124]	; 0xffffff84
   1714c:	ldr	r0, [r7, #12]
   17150:	str	r0, [fp, #-136]	; 0xffffff78
   17154:	mov	r0, r6
   17158:	blx	r3
   1715c:	ldr	r1, [fp, #-120]	; 0xffffff88
   17160:	str	r1, [r7, #32]
   17164:	ldr	r4, [fp, #-172]	; 0xffffff54
   17168:	sub	r7, r7, #36	; 0x24
   1716c:	cmp	r7, r4
   17170:	bcc	17194 <argp_parse@@Base+0xa70>
   17174:	cmp	r0, #7
   17178:	cmpne	r0, #0
   1717c:	bne	171cc <argp_parse@@Base+0xaa8>
   17180:	ldr	r3, [r7]
   17184:	cmp	r3, #0
   17188:	bne	1712c <argp_parse@@Base+0xa08>
   1718c:	mov	r0, #7
   17190:	b	17168 <argp_parse@@Base+0xa44>
   17194:	subs	r7, r0, #7
   17198:	movne	r7, r0
   1719c:	b	171d0 <argp_parse@@Base+0xaac>
   171a0:	ldrb	r0, [fp, #-140]	; 0xffffff74
   171a4:	tst	r0, #2
   171a8:	bne	16fb0 <argp_parse@@Base+0x88c>
   171ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   171b0:	cmp	r0, #0
   171b4:	beq	16fb0 <argp_parse@@Base+0x88c>
   171b8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   171bc:	movw	r1, #57315	; 0xdfe3
   171c0:	movt	r1, #1
   171c4:	bl	11d5c <fprintf@plt>
   171c8:	b	16fb0 <argp_parse@@Base+0x88c>
   171cc:	mov	r7, r0
   171d0:	ldr	r1, [fp, #8]
   171d4:	cmp	r1, #0
   171d8:	ldrne	r0, [fp, #-144]	; 0xffffff70
   171dc:	strne	r0, [r1]
   171e0:	cmp	r7, #0
   171e4:	bne	16fa8 <argp_parse@@Base+0x884>
   171e8:	ldr	r0, [fp, #-168]	; 0xffffff58
   171ec:	ldr	r4, [fp, #-172]	; 0xffffff54
   171f0:	mov	r7, #0
   171f4:	sub	r5, r0, #36	; 0x24
   171f8:	cmp	r5, r4
   171fc:	bcc	1728c <argp_parse@@Base+0xb68>
   17200:	movw	r1, #6
   17204:	mov	r0, #0
   17208:	movt	r1, #256	; 0x100
   1720c:	sub	r6, r1, #2
   17210:	b	1725c <argp_parse@@Base+0xb38>
   17214:	ldr	r0, [r5, #32]
   17218:	mov	r1, #0
   1721c:	mov	r2, sl
   17220:	str	r0, [fp, #-120]	; 0xffffff88
   17224:	ldr	r0, [r5, #24]
   17228:	str	r0, [fp, #-128]	; 0xffffff80
   1722c:	ldr	r0, [r5, #28]
   17230:	str	r0, [fp, #-124]	; 0xffffff84
   17234:	ldr	r0, [r5, #12]
   17238:	str	r0, [fp, #-136]	; 0xffffff78
   1723c:	mov	r0, r6
   17240:	blx	r3
   17244:	ldr	r1, [fp, #-120]	; 0xffffff88
   17248:	str	r1, [r5, #32]
   1724c:	ldr	r4, [fp, #-172]	; 0xffffff54
   17250:	sub	r5, r5, #36	; 0x24
   17254:	cmp	r5, r4
   17258:	bcc	17284 <argp_parse@@Base+0xb60>
   1725c:	cmp	r0, #7
   17260:	cmpne	r0, #0
   17264:	bne	1727c <argp_parse@@Base+0xb58>
   17268:	ldr	r3, [r5]
   1726c:	cmp	r3, #0
   17270:	bne	17214 <argp_parse@@Base+0xaf0>
   17274:	mov	r0, #7
   17278:	b	17250 <argp_parse@@Base+0xb2c>
   1727c:	mov	r7, r0
   17280:	b	1728c <argp_parse@@Base+0xb68>
   17284:	subs	r7, r0, #7
   17288:	movne	r7, r0
   1728c:	ldr	r0, [fp, #-168]	; 0xffffff58
   17290:	sub	r6, r0, #36	; 0x24
   17294:	cmp	r6, r4
   17298:	bcc	17304 <argp_parse@@Base+0xbe0>
   1729c:	movw	r0, #6
   172a0:	movt	r0, #256	; 0x100
   172a4:	add	r5, r0, #1
   172a8:	b	172b8 <argp_parse@@Base+0xb94>
   172ac:	sub	r6, r6, #36	; 0x24
   172b0:	cmp	r6, r4
   172b4:	bcc	17304 <argp_parse@@Base+0xbe0>
   172b8:	ldr	r3, [r6]
   172bc:	cmp	r3, #0
   172c0:	beq	172ac <argp_parse@@Base+0xb88>
   172c4:	ldr	r0, [r6, #32]
   172c8:	mov	r1, #0
   172cc:	mov	r2, sl
   172d0:	str	r0, [fp, #-120]	; 0xffffff88
   172d4:	ldr	r0, [r6, #24]
   172d8:	str	r0, [fp, #-128]	; 0xffffff80
   172dc:	ldr	r0, [r6, #28]
   172e0:	str	r0, [fp, #-124]	; 0xffffff84
   172e4:	ldr	r0, [r6, #12]
   172e8:	str	r0, [fp, #-136]	; 0xffffff78
   172ec:	mov	r0, r5
   172f0:	blx	r3
   172f4:	ldr	r0, [fp, #-120]	; 0xffffff88
   172f8:	str	r0, [r6, #32]
   172fc:	ldr	r4, [fp, #-172]	; 0xffffff54
   17300:	b	172ac <argp_parse@@Base+0xb88>
   17304:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17308:	bl	17a00 <argp_parse@@Base+0x12dc>
   1730c:	cmp	r7, #7
   17310:	movweq	r7, #22
   17314:	mov	r0, r7
   17318:	sub	sp, fp, #28
   1731c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17320:	ldr	r0, [fp, #-212]	; 0xffffff2c
   17324:	ldr	r1, [r0, #12]
   17328:	cmp	r1, r7
   1732c:	beq	1735c <argp_parse@@Base+0xc38>
   17330:	ldr	r1, [r0]
   17334:	cmp	r1, #0
   17338:	beq	1735c <argp_parse@@Base+0xc38>
   1733c:	add	r1, r0, #16
   17340:	ldr	r0, [r0, #28]
   17344:	cmp	r0, r7
   17348:	mov	r0, r1
   1734c:	bne	17330 <argp_parse@@Base+0xc0c>
   17350:	b	17360 <argp_parse@@Base+0xc3c>
   17354:	mov	r1, #0
   17358:	b	16f84 <argp_parse@@Base+0x860>
   1735c:	mov	r1, r0
   17360:	ldr	r0, [r1]
   17364:	movw	r1, #57302	; 0xdfd6
   17368:	movw	r3, #57032	; 0xdec8
   1736c:	movw	r2, #57311	; 0xdfdf
   17370:	movt	r1, #1
   17374:	movt	r3, #1
   17378:	movt	r2, #1
   1737c:	cmp	r0, #0
   17380:	movne	r2, r0
   17384:	mov	r0, sl
   17388:	b	16f58 <argp_parse@@Base+0x834>
   1738c:	mov	ip, r0
   17390:	mov	r0, #0
   17394:	cmp	r1, #0
   17398:	beq	173c8 <argp_parse@@Base+0xca4>
   1739c:	ldr	r3, [r1, #52]	; 0x34
   173a0:	ldr	r1, [r3, #48]	; 0x30
   173a4:	ldr	r3, [r3, #52]	; 0x34
   173a8:	cmp	r1, r3
   173ac:	bxcs	lr
   173b0:	ldr	r2, [r1, #4]
   173b4:	cmp	r2, ip
   173b8:	beq	173c4 <argp_parse@@Base+0xca0>
   173bc:	add	r1, r1, #36	; 0x24
   173c0:	b	173a8 <argp_parse@@Base+0xc84>
   173c4:	ldr	r0, [r1, #24]
   173c8:	bx	lr
   173cc:	push	{r4, r5, r6, sl, fp, lr}
   173d0:	add	fp, sp, #16
   173d4:	mov	r5, r2
   173d8:	mov	r6, r1
   173dc:	mov	r4, #7
   173e0:	cmn	r0, #3
   173e4:	bgt	17408 <argp_parse@@Base+0xce4>
   173e8:	cmn	r0, #4
   173ec:	beq	17434 <argp_parse@@Base+0xd10>
   173f0:	cmn	r0, #3
   173f4:	bne	174d0 <argp_parse@@Base+0xdac>
   173f8:	ldr	r1, [r5, #48]	; 0x30
   173fc:	mov	r0, r5
   17400:	movw	r2, #513	; 0x201
   17404:	b	17424 <argp_parse@@Base+0xd00>
   17408:	cmn	r0, #2
   1740c:	beq	17490 <argp_parse@@Base+0xd6c>
   17410:	cmp	r0, #63	; 0x3f
   17414:	bne	174d0 <argp_parse@@Base+0xdac>
   17418:	ldr	r1, [r5, #48]	; 0x30
   1741c:	mov	r0, r5
   17420:	movw	r2, #634	; 0x27a
   17424:	bl	196f8 <argp_state_help@@Base>
   17428:	mov	r4, #0
   1742c:	mov	r0, r4
   17430:	pop	{r4, r5, r6, sl, fp, pc}
   17434:	movw	r0, #57229	; 0xdf8d
   17438:	cmp	r6, #0
   1743c:	mov	r1, #0
   17440:	mov	r2, #10
   17444:	mov	r4, #0
   17448:	movt	r0, #1
   1744c:	movne	r0, r6
   17450:	bl	11abc <strtol@plt>
   17454:	movw	r5, #62648	; 0xf4b8
   17458:	movt	r5, #2
   1745c:	str	r0, [r5]
   17460:	ldr	r0, [r5]
   17464:	subs	r0, r0, #1
   17468:	str	r0, [r5]
   1746c:	blt	174d0 <argp_parse@@Base+0xdac>
   17470:	mov	r0, #1
   17474:	bl	11ba0 <sleep@plt>
   17478:	ldr	r0, [r5]
   1747c:	sub	r1, r0, #1
   17480:	cmp	r0, #0
   17484:	str	r1, [r5]
   17488:	bgt	17470 <argp_parse@@Base+0xd4c>
   1748c:	b	174d0 <argp_parse@@Base+0xdac>
   17490:	movw	r0, #62380	; 0xf3ac
   17494:	movt	r0, #2
   17498:	str	r6, [r0]
   1749c:	mov	r0, r6
   174a0:	bl	1797c <argp_parse@@Base+0x1258>
   174a4:	movw	r1, #62376	; 0xf3a8
   174a8:	str	r0, [r5, #40]	; 0x28
   174ac:	mov	r4, #0
   174b0:	movt	r1, #2
   174b4:	str	r0, [r1]
   174b8:	ldr	r0, [r5, #16]
   174bc:	and	r0, r0, #3
   174c0:	cmp	r0, #1
   174c4:	bne	174d0 <argp_parse@@Base+0xdac>
   174c8:	ldr	r0, [r5, #8]
   174cc:	str	r6, [r0]
   174d0:	mov	r0, r4
   174d4:	pop	{r4, r5, r6, sl, fp, pc}
   174d8:	push	{r4, sl, fp, lr}
   174dc:	add	fp, sp, #8
   174e0:	mov	r1, r0
   174e4:	mov	r0, #7
   174e8:	cmp	r1, #86	; 0x56
   174ec:	popne	{r4, sl, fp, pc}
   174f0:	movw	r0, #62652	; 0xf4bc
   174f4:	mov	r4, r2
   174f8:	movt	r0, #2
   174fc:	ldr	r2, [r0]
   17500:	cmp	r2, #0
   17504:	beq	17518 <argp_parse@@Base+0xdf4>
   17508:	ldr	r0, [r4, #48]	; 0x30
   1750c:	mov	r1, r4
   17510:	blx	r2
   17514:	b	17558 <argp_parse@@Base+0xe34>
   17518:	movw	r0, #63012	; 0xf624
   1751c:	movt	r0, #2
   17520:	ldr	r2, [r0]
   17524:	cmp	r2, #0
   17528:	beq	17540 <argp_parse@@Base+0xe1c>
   1752c:	ldr	r0, [r4, #48]	; 0x30
   17530:	movw	r1, #57442	; 0xe062
   17534:	movt	r1, #1
   17538:	bl	11d5c <fprintf@plt>
   1753c:	b	17558 <argp_parse@@Base+0xe34>
   17540:	movw	r1, #58498	; 0xe482
   17544:	movw	r2, #57256	; 0xdfa8
   17548:	mov	r0, r4
   1754c:	movt	r1, #1
   17550:	movt	r2, #1
   17554:	bl	197b4 <argp_error@@Base>
   17558:	ldrb	r1, [r4, #16]
   1755c:	mov	r0, #0
   17560:	tst	r1, #32
   17564:	beq	1756c <argp_parse@@Base+0xe48>
   17568:	pop	{r4, sl, fp, pc}
   1756c:	mov	r0, #0
   17570:	bl	11d08 <exit@plt>
   17574:	push	{r4, r5, fp, lr}
   17578:	add	fp, sp, #8
   1757c:	ldr	r2, [r0]
   17580:	ldr	ip, [r0, #16]
   17584:	mov	r4, r1
   17588:	cmp	r2, #0
   1758c:	beq	175f8 <argp_parse@@Base+0xed4>
   17590:	ldr	r0, [r4, #8]
   17594:	mov	r3, #0
   17598:	add	r0, r0, #1
   1759c:	str	r0, [r4, #8]
   175a0:	mov	r0, #0
   175a4:	b	175b0 <argp_parse@@Base+0xe8c>
   175a8:	add	r3, r3, #3
   175ac:	add	r0, r0, #1
   175b0:	add	r5, r2, r3, lsl #3
   175b4:	ldr	r1, [r5, #4]
   175b8:	cmp	r1, #0
   175bc:	bne	175a8 <argp_parse@@Base+0xe84>
   175c0:	ldr	r1, [r2, r3, lsl #3]
   175c4:	cmp	r1, #0
   175c8:	bne	175a8 <argp_parse@@Base+0xe84>
   175cc:	ldr	r1, [r5, #16]
   175d0:	cmp	r1, #0
   175d4:	bne	175a8 <argp_parse@@Base+0xe84>
   175d8:	ldr	r1, [r5, #20]
   175dc:	cmp	r1, #0
   175e0:	bne	175a8 <argp_parse@@Base+0xe84>
   175e4:	ldr	r1, [r4]
   175e8:	mov	r2, r4
   175ec:	add	r1, r1, r3
   175f0:	str	r1, [r2], #4
   175f4:	b	1760c <argp_parse@@Base+0xee8>
   175f8:	ldr	r0, [r0, #4]
   175fc:	cmp	r0, #0
   17600:	beq	17618 <argp_parse@@Base+0xef4>
   17604:	add	r2, r4, #8
   17608:	mov	r0, #1
   1760c:	ldr	r1, [r2]
   17610:	add	r0, r1, r0
   17614:	str	r0, [r2]
   17618:	cmp	ip, #0
   1761c:	beq	17650 <argp_parse@@Base+0xf2c>
   17620:	ldr	r0, [ip]
   17624:	cmp	r0, #0
   17628:	popeq	{r4, r5, fp, pc}
   1762c:	add	r5, ip, #16
   17630:	mov	r1, r4
   17634:	bl	17574 <argp_parse@@Base+0xe50>
   17638:	ldr	r0, [r4, #12]
   1763c:	add	r0, r0, #1
   17640:	str	r0, [r4, #12]
   17644:	ldr	r0, [r5], #16
   17648:	cmp	r0, #0
   1764c:	bne	17630 <argp_parse@@Base+0xf0c>
   17650:	pop	{r4, r5, fp, pc}
   17654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17658:	add	fp, sp, #28
   1765c:	sub	sp, sp, #28
   17660:	ldr	sl, [r0]
   17664:	ldr	r5, [r0, #16]
   17668:	ldr	r6, [fp, #8]
   1766c:	mov	r7, r3
   17670:	cmp	sl, #0
   17674:	beq	17844 <argp_parse@@Base+0x1120>
   17678:	str	r0, [sp, #8]
   1767c:	add	r0, sp, #16
   17680:	mov	r8, sl
   17684:	str	r2, [sp, #12]
   17688:	stm	r0, {r1, r5, r7}
   1768c:	b	17700 <argp_parse@@Base+0xfdc>
   17690:	ldr	r0, [r6, #8]
   17694:	str	r5, [r0]
   17698:	ldr	r1, [sl, #8]
   1769c:	cmp	r1, #0
   176a0:	beq	17824 <argp_parse@@Base+0x1100>
   176a4:	ldrb	r1, [sl, #12]
   176a8:	tst	r1, #1
   176ac:	mov	r1, #2
   176b0:	movweq	r1, #1
   176b4:	mov	r5, #0
   176b8:	stmib	r0, {r1, r5}
   176bc:	ldr	r1, [r8, #4]
   176c0:	ldr	r2, [r7, #48]	; 0x30
   176c4:	ldr	r3, [sp, #24]
   176c8:	cmp	r1, #0
   176cc:	sub	r2, r3, r2
   176d0:	mov	r3, #956301312	; 0x39000000
   176d4:	ldreq	r1, [sl, #4]
   176d8:	lsr	r2, r2, #2
   176dc:	mul	r2, r2, r3
   176e0:	bic	r1, r1, #-16777216	; 0xff000000
   176e4:	orr	r1, r2, r1
   176e8:	add	r1, r1, #16777216	; 0x1000000
   176ec:	str	r1, [r0, #12]
   176f0:	add	r1, r0, #16
   176f4:	str	r1, [r6, #8]
   176f8:	str	r5, [r0, #16]
   176fc:	add	r8, r8, #24
   17700:	ldr	r5, [r8, #4]
   17704:	cmp	r5, #0
   17708:	bne	17730 <argp_parse@@Base+0x100c>
   1770c:	ldr	r0, [r8]
   17710:	cmp	r0, #0
   17714:	bne	17730 <argp_parse@@Base+0x100c>
   17718:	ldr	r0, [r8, #16]
   1771c:	cmp	r0, #0
   17720:	bne	17730 <argp_parse@@Base+0x100c>
   17724:	ldr	r0, [r8, #20]
   17728:	cmp	r0, #0
   1772c:	beq	1782c <argp_parse@@Base+0x1108>
   17730:	ldr	r0, [r8, #12]
   17734:	tst	r0, #4
   17738:	moveq	sl, r8
   1773c:	ldrb	r1, [sl, #12]
   17740:	tst	r1, #8
   17744:	bne	176fc <argp_parse@@Base+0xfd8>
   17748:	sub	r1, r5, #1
   1774c:	cmp	r1, #254	; 0xfe
   17750:	bhi	177d0 <argp_parse@@Base+0x10ac>
   17754:	ands	r0, r0, #8
   17758:	bne	177d0 <argp_parse@@Base+0x10ac>
   1775c:	bl	11cf0 <__ctype_b_loc@plt>
   17760:	ldr	r0, [r0]
   17764:	add	r0, r0, r5, lsl #1
   17768:	ldrb	r0, [r0, #1]
   1776c:	tst	r0, #64	; 0x40
   17770:	beq	177d0 <argp_parse@@Base+0x10ac>
   17774:	ldr	r0, [r6, #4]
   17778:	add	r1, r0, #1
   1777c:	str	r1, [r6, #4]
   17780:	strb	r5, [r0]
   17784:	ldr	r0, [sl, #8]
   17788:	cmp	r0, #0
   1778c:	beq	177c4 <argp_parse@@Base+0x10a0>
   17790:	ldr	r0, [r6, #4]
   17794:	add	r1, r0, #1
   17798:	str	r1, [r6, #4]
   1779c:	mov	r1, #58	; 0x3a
   177a0:	strb	r1, [r0]
   177a4:	ldrb	r0, [sl, #12]
   177a8:	tst	r0, #1
   177ac:	beq	177c4 <argp_parse@@Base+0x10a0>
   177b0:	ldr	r0, [r6, #4]
   177b4:	add	r1, r0, #1
   177b8:	str	r1, [r6, #4]
   177bc:	mov	r1, #58	; 0x3a
   177c0:	strb	r1, [r0]
   177c4:	ldr	r0, [r6, #4]
   177c8:	mov	r1, #0
   177cc:	strb	r1, [r0]
   177d0:	ldr	r5, [r8]
   177d4:	cmp	r5, #0
   177d8:	beq	176fc <argp_parse@@Base+0xfd8>
   177dc:	ldr	r7, [r6]
   177e0:	ldr	r9, [r7, #8]
   177e4:	ldr	r0, [r9]
   177e8:	cmp	r0, #0
   177ec:	beq	17690 <argp_parse@@Base+0xf6c>
   177f0:	mov	r4, r9
   177f4:	mov	r1, r5
   177f8:	bl	11ab0 <strcmp@plt>
   177fc:	cmp	r0, #0
   17800:	beq	17814 <argp_parse@@Base+0x10f0>
   17804:	ldr	r0, [r4, #16]!
   17808:	cmp	r0, #0
   1780c:	bne	177f4 <argp_parse@@Base+0x10d0>
   17810:	b	17690 <argp_parse@@Base+0xf6c>
   17814:	sub	r0, r4, r9
   17818:	cmn	r0, #1
   1781c:	bgt	176fc <argp_parse@@Base+0xfd8>
   17820:	b	17690 <argp_parse@@Base+0xf6c>
   17824:	mov	r1, #0
   17828:	b	176b4 <argp_parse@@Base+0xf90>
   1782c:	ldr	r0, [sp, #8]
   17830:	add	r7, sp, #16
   17834:	ldr	r2, [sp, #12]
   17838:	ldm	r7, {r1, r5, r7}
   1783c:	ldr	r3, [r0, #4]
   17840:	b	17850 <argp_parse@@Base+0x112c>
   17844:	ldr	r3, [r0, #4]
   17848:	cmp	r3, #0
   1784c:	beq	178f4 <argp_parse@@Base+0x11d0>
   17850:	str	r0, [r7, #4]
   17854:	str	r3, [r7]
   17858:	mov	r0, #0
   1785c:	cmp	r5, #0
   17860:	add	ip, r7, #12
   17864:	ldr	r3, [r6, #4]
   17868:	str	r0, [r7, #32]
   1786c:	str	r0, [r7, #24]
   17870:	stm	ip, {r0, r1, r2}
   17874:	str	r0, [r7, #28]
   17878:	str	r3, [r7, #8]
   1787c:	beq	178a4 <argp_parse@@Base+0x1180>
   17880:	ldr	r1, [r5, r0, lsl #2]
   17884:	add	r0, r0, #4
   17888:	cmp	r1, #0
   1788c:	bne	17880 <argp_parse@@Base+0x115c>
   17890:	ldr	r1, [r6, #12]
   17894:	add	r0, r1, r0
   17898:	str	r1, [r7, #28]
   1789c:	sub	r0, r0, #4
   178a0:	str	r0, [r6, #12]
   178a4:	add	r3, r7, #36	; 0x24
   178a8:	cmp	r5, #0
   178ac:	beq	178e8 <argp_parse@@Base+0x11c4>
   178b0:	ldr	r0, [r5]
   178b4:	cmp	r0, #0
   178b8:	beq	178e8 <argp_parse@@Base+0x11c4>
   178bc:	add	r4, r5, #16
   178c0:	mov	r5, #0
   178c4:	mov	r1, r7
   178c8:	mov	r2, r5
   178cc:	str	r6, [sp]
   178d0:	bl	17654 <argp_parse@@Base+0xf30>
   178d4:	mov	r3, r0
   178d8:	ldr	r0, [r4, r5, lsl #4]
   178dc:	add	r5, r5, #1
   178e0:	cmp	r0, #0
   178e4:	bne	178c4 <argp_parse@@Base+0x11a0>
   178e8:	mov	r0, r3
   178ec:	sub	sp, fp, #28
   178f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178f4:	mov	r3, r7
   178f8:	mov	r7, #0
   178fc:	cmp	r5, #0
   17900:	bne	178b0 <argp_parse@@Base+0x118c>
   17904:	b	178e8 <argp_parse@@Base+0x11c4>
   17908:	movw	r2, #62656	; 0xf4c0
   1790c:	movt	r2, #2
   17910:	str	r0, [r2]
   17914:	movw	r0, #62652	; 0xf4bc
   17918:	movw	r2, #31032	; 0x7938
   1791c:	movt	r0, #2
   17920:	movt	r2, #1
   17924:	str	r2, [r0]
   17928:	movw	r0, #62660	; 0xf4c4
   1792c:	movt	r0, #2
   17930:	str	r1, [r0]
   17934:	bx	lr
   17938:	push	{fp, lr}
   1793c:	mov	fp, sp
   17940:	sub	sp, sp, #8
   17944:	movw	r2, #62660	; 0xf4c4
   17948:	movw	r1, #62656	; 0xf4c0
   1794c:	movw	r3, #57353	; 0xe009
   17950:	movt	r2, #2
   17954:	movt	r1, #2
   17958:	movt	r3, #1
   1795c:	ldr	r2, [r2]
   17960:	ldr	r1, [r1]
   17964:	str	r2, [sp]
   17968:	movw	r2, #57339	; 0xdffb
   1796c:	movt	r2, #1
   17970:	bl	17e14 <argp_parse@@Base+0x16f0>
   17974:	mov	sp, fp
   17978:	pop	{fp, pc}
   1797c:	sub	r0, r0, #1
   17980:	ldrb	r3, [r0, #1]!
   17984:	cmp	r3, #47	; 0x2f
   17988:	beq	17980 <argp_parse@@Base+0x125c>
   1798c:	mov	r2, #0
   17990:	mov	r1, r0
   17994:	b	179a0 <argp_parse@@Base+0x127c>
   17998:	ldrb	r3, [r1, #1]!
   1799c:	mov	r2, #1
   179a0:	uxtb	r3, r3
   179a4:	cmp	r3, #47	; 0x2f
   179a8:	beq	17998 <argp_parse@@Base+0x1274>
   179ac:	cmp	r3, #0
   179b0:	bxeq	lr
   179b4:	tst	r2, #1
   179b8:	mov	r2, #0
   179bc:	movne	r0, r1
   179c0:	ldrb	r3, [r1, #1]!
   179c4:	b	179a0 <argp_parse@@Base+0x127c>
   179c8:	push	{r4, sl, fp, lr}
   179cc:	add	fp, sp, #8
   179d0:	mov	r4, r0
   179d4:	bl	11d2c <strlen@plt>
   179d8:	mov	r1, r0
   179dc:	sub	r2, r4, #1
   179e0:	mov	r0, r1
   179e4:	cmp	r1, #2
   179e8:	bcc	179fc <argp_parse@@Base+0x12d8>
   179ec:	ldrb	r3, [r2, r0]
   179f0:	sub	r1, r0, #1
   179f4:	cmp	r3, #47	; 0x2f
   179f8:	beq	179e0 <argp_parse@@Base+0x12bc>
   179fc:	pop	{r4, sl, fp, pc}
   17a00:	push	{r4, r5, r6, sl, fp, lr}
   17a04:	add	fp, sp, #16
   17a08:	mov	r4, r0
   17a0c:	bl	11d74 <__errno_location@plt>
   17a10:	ldr	r6, [r0]
   17a14:	mov	r5, r0
   17a18:	mov	r0, r4
   17a1c:	bl	11b34 <free@plt>
   17a20:	str	r6, [r5]
   17a24:	pop	{r4, r5, r6, sl, fp, pc}
   17a28:	push	{fp, lr}
   17a2c:	mov	fp, sp
   17a30:	sub	sp, sp, #16
   17a34:	mov	ip, #0
   17a38:	str	ip, [sp, #8]
   17a3c:	str	ip, [sp, #4]
   17a40:	ldr	ip, [fp, #8]
   17a44:	str	ip, [sp]
   17a48:	bl	1ca5c <argp_failure@@Base+0x3164>
   17a4c:	mov	sp, fp
   17a50:	pop	{fp, pc}
   17a54:	push	{fp, lr}
   17a58:	mov	fp, sp
   17a5c:	sub	sp, sp, #16
   17a60:	mov	ip, #0
   17a64:	str	ip, [sp, #12]
   17a68:	str	ip, [sp, #4]
   17a6c:	ldr	ip, [fp, #12]
   17a70:	str	ip, [sp, #8]
   17a74:	ldr	ip, [fp, #8]
   17a78:	str	ip, [sp]
   17a7c:	bl	1b7c0 <argp_failure@@Base+0x1ec8>
   17a80:	mov	sp, fp
   17a84:	pop	{fp, pc}
   17a88:	push	{fp, lr}
   17a8c:	mov	fp, sp
   17a90:	sub	sp, sp, #16
   17a94:	mov	ip, #0
   17a98:	str	ip, [sp, #8]
   17a9c:	mov	ip, #1
   17aa0:	str	ip, [sp, #4]
   17aa4:	ldr	ip, [fp, #8]
   17aa8:	str	ip, [sp]
   17aac:	bl	1ca5c <argp_failure@@Base+0x3164>
   17ab0:	mov	sp, fp
   17ab4:	pop	{fp, pc}
   17ab8:	push	{fp, lr}
   17abc:	mov	fp, sp
   17ac0:	sub	sp, sp, #16
   17ac4:	mov	ip, #0
   17ac8:	str	ip, [sp, #12]
   17acc:	mov	ip, #1
   17ad0:	str	ip, [sp, #4]
   17ad4:	ldr	ip, [fp, #12]
   17ad8:	str	ip, [sp, #8]
   17adc:	ldr	ip, [fp, #8]
   17ae0:	str	ip, [sp]
   17ae4:	bl	1b7c0 <argp_failure@@Base+0x1ec8>
   17ae8:	mov	sp, fp
   17aec:	pop	{fp, pc}
   17af0:	push	{r4, r5, fp, lr}
   17af4:	add	fp, sp, #8
   17af8:	cmp	r0, #0
   17afc:	beq	17b90 <argp_parse@@Base+0x146c>
   17b00:	mov	r1, #47	; 0x2f
   17b04:	mov	r4, r0
   17b08:	bl	11e34 <strrchr@plt>
   17b0c:	cmp	r0, #0
   17b10:	mov	r5, r4
   17b14:	addne	r5, r0, #1
   17b18:	sub	r0, r5, r4
   17b1c:	cmp	r0, #7
   17b20:	blt	17b74 <argp_parse@@Base+0x1450>
   17b24:	movw	r1, #57422	; 0xe04e
   17b28:	sub	r0, r5, #7
   17b2c:	mov	r2, #7
   17b30:	movt	r1, #1
   17b34:	bl	11f24 <strncmp@plt>
   17b38:	cmp	r0, #0
   17b3c:	bne	17b74 <argp_parse@@Base+0x1450>
   17b40:	movw	r1, #57430	; 0xe056
   17b44:	mov	r0, r5
   17b48:	mov	r2, #3
   17b4c:	movt	r1, #1
   17b50:	bl	11f24 <strncmp@plt>
   17b54:	cmp	r0, #0
   17b58:	beq	17b64 <argp_parse@@Base+0x1440>
   17b5c:	mov	r4, r5
   17b60:	b	17b74 <argp_parse@@Base+0x1450>
   17b64:	movw	r0, #62376	; 0xf3a8
   17b68:	add	r4, r5, #3
   17b6c:	movt	r0, #2
   17b70:	str	r4, [r0]
   17b74:	movw	r0, #62380	; 0xf3ac
   17b78:	movt	r0, #2
   17b7c:	str	r4, [r0]
   17b80:	movw	r0, #62664	; 0xf4c8
   17b84:	movt	r0, #2
   17b88:	str	r4, [r0]
   17b8c:	pop	{r4, r5, fp, pc}
   17b90:	movw	r0, #62384	; 0xf3b0
   17b94:	mov	r1, #55	; 0x37
   17b98:	mov	r2, #1
   17b9c:	movt	r0, #2
   17ba0:	ldr	r3, [r0]
   17ba4:	movw	r0, #57366	; 0xe016
   17ba8:	movt	r0, #1
   17bac:	bl	11c48 <fwrite@plt>
   17bb0:	bl	11f30 <abort@plt>
   17bb4:	push	{r4, r5, r6, r7, fp, lr}
   17bb8:	add	fp, sp, #16
   17bbc:	sub	sp, sp, #32
   17bc0:	ldr	r7, [fp, #12]
   17bc4:	ldr	r6, [fp, #8]
   17bc8:	mov	r4, r2
   17bcc:	mov	r5, r0
   17bd0:	cmp	r1, #0
   17bd4:	beq	17bf4 <argp_parse@@Base+0x14d0>
   17bd8:	mov	r2, r1
   17bdc:	movw	r1, #57434	; 0xe05a
   17be0:	str	r3, [sp]
   17be4:	mov	r0, r5
   17be8:	mov	r3, r4
   17bec:	movt	r1, #1
   17bf0:	b	17c04 <argp_parse@@Base+0x14e0>
   17bf4:	movw	r1, #57446	; 0xe066
   17bf8:	mov	r0, r5
   17bfc:	mov	r2, r4
   17c00:	movt	r1, #1
   17c04:	bl	11d5c <fprintf@plt>
   17c08:	movw	r1, #58210	; 0xe362
   17c0c:	movw	r2, #57453	; 0xe06d
   17c10:	mov	r0, r5
   17c14:	movw	r3, #2022	; 0x7e6
   17c18:	movt	r1, #1
   17c1c:	movt	r2, #1
   17c20:	bl	11d5c <fprintf@plt>
   17c24:	mov	r0, #10
   17c28:	mov	r1, r5
   17c2c:	bl	11e58 <fputc@plt>
   17c30:	movw	r1, #57457	; 0xe071
   17c34:	movw	r2, #57628	; 0xe11c
   17c38:	mov	r0, r5
   17c3c:	movt	r1, #1
   17c40:	movt	r2, #1
   17c44:	bl	11d5c <fprintf@plt>
   17c48:	mov	r0, #10
   17c4c:	mov	r1, r5
   17c50:	bl	11e58 <fputc@plt>
   17c54:	cmp	r7, #9
   17c58:	bhi	17c94 <argp_parse@@Base+0x1570>
   17c5c:	add	r0, pc, #0
   17c60:	ldr	pc, [r0, r7, lsl #2]
   17c64:	andeq	r7, r1, ip, lsl #25
   17c68:	andeq	r7, r1, r8, asr #25
   17c6c:	andeq	r7, r1, r4, ror #25
   17c70:	andeq	r7, r1, r0, lsl #26
   17c74:	andeq	r7, r1, r8, lsl sp
   17c78:	andeq	r7, r1, r4, lsr sp
   17c7c:	andeq	r7, r1, r0, asr sp
   17c80:	andeq	r7, r1, r4, ror sp
   17c84:	ldrdeq	r7, [r1], -r4
   17c88:	andeq	r7, r1, r0, lsr #27
   17c8c:	sub	sp, fp, #16
   17c90:	pop	{r4, r5, r6, r7, fp, pc}
   17c94:	add	r7, r6, #8
   17c98:	add	lr, r6, #20
   17c9c:	ldm	r6, {r2, r3}
   17ca0:	ldr	r6, [r6, #32]
   17ca4:	ldm	r7, {r0, r1, r7}
   17ca8:	ldm	lr, {r4, ip, lr}
   17cac:	stm	sp, {r0, r1, r7}
   17cb0:	movw	r1, #57981	; 0xe27d
   17cb4:	add	r0, sp, #12
   17cb8:	stm	r0, {r4, ip, lr}
   17cbc:	str	r6, [sp, #24]
   17cc0:	movt	r1, #1
   17cc4:	b	17e04 <argp_parse@@Base+0x16e0>
   17cc8:	ldr	r2, [r6]
   17ccc:	movw	r1, #57662	; 0xe13e
   17cd0:	mov	r0, r5
   17cd4:	movt	r1, #1
   17cd8:	sub	sp, fp, #16
   17cdc:	pop	{r4, r5, r6, r7, fp, lr}
   17ce0:	b	11d5c <fprintf@plt>
   17ce4:	ldm	r6, {r2, r3}
   17ce8:	movw	r1, #57678	; 0xe14e
   17cec:	mov	r0, r5
   17cf0:	movt	r1, #1
   17cf4:	sub	sp, fp, #16
   17cf8:	pop	{r4, r5, r6, r7, fp, lr}
   17cfc:	b	11d5c <fprintf@plt>
   17d00:	ldr	r0, [r6, #8]
   17d04:	movw	r1, #57701	; 0xe165
   17d08:	ldm	r6, {r2, r3}
   17d0c:	movt	r1, #1
   17d10:	str	r0, [sp]
   17d14:	b	17e04 <argp_parse@@Base+0x16e0>
   17d18:	ldr	r0, [r6, #8]
   17d1c:	ldm	r6, {r2, r3}
   17d20:	ldr	r1, [r6, #12]
   17d24:	stm	sp, {r0, r1}
   17d28:	movw	r1, #57729	; 0xe181
   17d2c:	movt	r1, #1
   17d30:	b	17e04 <argp_parse@@Base+0x16e0>
   17d34:	add	r7, r6, #8
   17d38:	ldm	r6, {r2, r3}
   17d3c:	ldm	r7, {r0, r1, r7}
   17d40:	stm	sp, {r0, r1, r7}
   17d44:	movw	r1, #57761	; 0xe1a1
   17d48:	movt	r1, #1
   17d4c:	b	17e04 <argp_parse@@Base+0x16e0>
   17d50:	add	r7, r6, #8
   17d54:	ldm	r6, {r2, r3}
   17d58:	ldr	r6, [r6, #20]
   17d5c:	ldm	r7, {r0, r1, r7}
   17d60:	stm	sp, {r0, r1, r7}
   17d64:	movw	r1, #57797	; 0xe1c5
   17d68:	str	r6, [sp, #12]
   17d6c:	movt	r1, #1
   17d70:	b	17e04 <argp_parse@@Base+0x16e0>
   17d74:	add	r7, r6, #8
   17d78:	ldm	r6, {r2, r3}
   17d7c:	ldr	r4, [r6, #20]
   17d80:	ldr	r6, [r6, #24]
   17d84:	ldm	r7, {r0, r1, r7}
   17d88:	stm	sp, {r0, r1, r7}
   17d8c:	movw	r1, #57837	; 0xe1ed
   17d90:	str	r4, [sp, #12]
   17d94:	str	r6, [sp, #16]
   17d98:	movt	r1, #1
   17d9c:	b	17e04 <argp_parse@@Base+0x16e0>
   17da0:	add	r7, r6, #8
   17da4:	add	lr, r6, #20
   17da8:	ldm	r6, {r2, r3}
   17dac:	ldr	r6, [r6, #32]
   17db0:	ldm	r7, {r0, r1, r7}
   17db4:	ldm	lr, {r4, ip, lr}
   17db8:	stm	sp, {r0, r1, r7}
   17dbc:	movw	r1, #57929	; 0xe249
   17dc0:	add	r0, sp, #12
   17dc4:	stm	r0, {r4, ip, lr}
   17dc8:	str	r6, [sp, #24]
   17dcc:	movt	r1, #1
   17dd0:	b	17e04 <argp_parse@@Base+0x16e0>
   17dd4:	add	r7, r6, #8
   17dd8:	ldm	r6, {r2, r3}
   17ddc:	ldr	r4, [r6, #20]
   17de0:	ldr	ip, [r6, #24]
   17de4:	ldr	r6, [r6, #28]
   17de8:	ldm	r7, {r0, r1, r7}
   17dec:	stm	sp, {r0, r1, r7}
   17df0:	movw	r1, #57881	; 0xe219
   17df4:	str	r4, [sp, #12]
   17df8:	str	ip, [sp, #16]
   17dfc:	str	r6, [sp, #20]
   17e00:	movt	r1, #1
   17e04:	mov	r0, r5
   17e08:	bl	11d5c <fprintf@plt>
   17e0c:	sub	sp, fp, #16
   17e10:	pop	{r4, r5, r6, r7, fp, pc}
   17e14:	push	{r4, sl, fp, lr}
   17e18:	add	fp, sp, #8
   17e1c:	sub	sp, sp, #8
   17e20:	ldr	ip, [fp, #8]
   17e24:	mov	lr, #0
   17e28:	ldr	r4, [ip, lr, lsl #2]
   17e2c:	add	lr, lr, #1
   17e30:	cmp	r4, #0
   17e34:	bne	17e28 <argp_parse@@Base+0x1704>
   17e38:	sub	r4, lr, #1
   17e3c:	str	ip, [sp]
   17e40:	str	r4, [sp, #4]
   17e44:	bl	17bb4 <argp_parse@@Base+0x1490>
   17e48:	sub	sp, fp, #8
   17e4c:	pop	{r4, sl, fp, pc}
   17e50:	push	{fp, lr}
   17e54:	mov	fp, sp
   17e58:	sub	sp, sp, #48	; 0x30
   17e5c:	ldr	ip, [fp, #8]
   17e60:	ldr	lr, [ip]
   17e64:	cmp	lr, #0
   17e68:	str	lr, [sp, #8]
   17e6c:	beq	17f08 <argp_parse@@Base+0x17e4>
   17e70:	ldr	lr, [ip, #4]
   17e74:	cmp	lr, #0
   17e78:	str	lr, [sp, #12]
   17e7c:	beq	17f10 <argp_parse@@Base+0x17ec>
   17e80:	ldr	lr, [ip, #8]
   17e84:	cmp	lr, #0
   17e88:	str	lr, [sp, #16]
   17e8c:	beq	17f18 <argp_parse@@Base+0x17f4>
   17e90:	ldr	lr, [ip, #12]
   17e94:	cmp	lr, #0
   17e98:	str	lr, [sp, #20]
   17e9c:	beq	17f20 <argp_parse@@Base+0x17fc>
   17ea0:	ldr	lr, [ip, #16]
   17ea4:	cmp	lr, #0
   17ea8:	str	lr, [sp, #24]
   17eac:	beq	17f28 <argp_parse@@Base+0x1804>
   17eb0:	ldr	lr, [ip, #20]
   17eb4:	cmp	lr, #0
   17eb8:	str	lr, [sp, #28]
   17ebc:	beq	17f30 <argp_parse@@Base+0x180c>
   17ec0:	ldr	lr, [ip, #24]
   17ec4:	cmp	lr, #0
   17ec8:	str	lr, [sp, #32]
   17ecc:	beq	17f38 <argp_parse@@Base+0x1814>
   17ed0:	ldr	lr, [ip, #28]
   17ed4:	cmp	lr, #0
   17ed8:	str	lr, [sp, #36]	; 0x24
   17edc:	beq	17f40 <argp_parse@@Base+0x181c>
   17ee0:	ldr	lr, [ip, #32]
   17ee4:	cmp	lr, #0
   17ee8:	str	lr, [sp, #40]	; 0x28
   17eec:	beq	17f48 <argp_parse@@Base+0x1824>
   17ef0:	ldr	lr, [ip, #36]	; 0x24
   17ef4:	mov	ip, #10
   17ef8:	cmp	lr, #0
   17efc:	str	lr, [sp, #44]	; 0x2c
   17f00:	movweq	ip, #9
   17f04:	b	17f4c <argp_parse@@Base+0x1828>
   17f08:	mov	ip, #0
   17f0c:	b	17f4c <argp_parse@@Base+0x1828>
   17f10:	mov	ip, #1
   17f14:	b	17f4c <argp_parse@@Base+0x1828>
   17f18:	mov	ip, #2
   17f1c:	b	17f4c <argp_parse@@Base+0x1828>
   17f20:	mov	ip, #3
   17f24:	b	17f4c <argp_parse@@Base+0x1828>
   17f28:	mov	ip, #4
   17f2c:	b	17f4c <argp_parse@@Base+0x1828>
   17f30:	mov	ip, #5
   17f34:	b	17f4c <argp_parse@@Base+0x1828>
   17f38:	mov	ip, #6
   17f3c:	b	17f4c <argp_parse@@Base+0x1828>
   17f40:	mov	ip, #7
   17f44:	b	17f4c <argp_parse@@Base+0x1828>
   17f48:	mov	ip, #8
   17f4c:	add	lr, sp, #8
   17f50:	str	ip, [sp, #4]
   17f54:	str	lr, [sp]
   17f58:	bl	17bb4 <argp_parse@@Base+0x1490>
   17f5c:	mov	sp, fp
   17f60:	pop	{fp, pc}
   17f64:	push	{fp, lr}
   17f68:	mov	fp, sp
   17f6c:	sub	sp, sp, #56	; 0x38
   17f70:	add	ip, fp, #8
   17f74:	str	ip, [sp, #12]
   17f78:	ldr	lr, [fp, #8]
   17f7c:	cmp	lr, #0
   17f80:	str	lr, [sp, #16]
   17f84:	beq	18020 <argp_parse@@Base+0x18fc>
   17f88:	ldr	lr, [ip, #4]
   17f8c:	cmp	lr, #0
   17f90:	str	lr, [sp, #20]
   17f94:	beq	18028 <argp_parse@@Base+0x1904>
   17f98:	ldr	lr, [ip, #8]
   17f9c:	cmp	lr, #0
   17fa0:	str	lr, [sp, #24]
   17fa4:	beq	18030 <argp_parse@@Base+0x190c>
   17fa8:	ldr	lr, [ip, #12]
   17fac:	cmp	lr, #0
   17fb0:	str	lr, [sp, #28]
   17fb4:	beq	18038 <argp_parse@@Base+0x1914>
   17fb8:	ldr	lr, [ip, #16]
   17fbc:	cmp	lr, #0
   17fc0:	str	lr, [sp, #32]
   17fc4:	beq	18040 <argp_parse@@Base+0x191c>
   17fc8:	ldr	lr, [ip, #20]
   17fcc:	cmp	lr, #0
   17fd0:	str	lr, [sp, #36]	; 0x24
   17fd4:	beq	18048 <argp_parse@@Base+0x1924>
   17fd8:	ldr	lr, [ip, #24]
   17fdc:	cmp	lr, #0
   17fe0:	str	lr, [sp, #40]	; 0x28
   17fe4:	beq	18050 <argp_parse@@Base+0x192c>
   17fe8:	ldr	lr, [ip, #28]
   17fec:	cmp	lr, #0
   17ff0:	str	lr, [sp, #44]	; 0x2c
   17ff4:	beq	18058 <argp_parse@@Base+0x1934>
   17ff8:	ldr	lr, [ip, #32]
   17ffc:	cmp	lr, #0
   18000:	str	lr, [sp, #48]	; 0x30
   18004:	beq	18060 <argp_parse@@Base+0x193c>
   18008:	ldr	lr, [ip, #36]	; 0x24
   1800c:	mov	ip, #10
   18010:	cmp	lr, #0
   18014:	str	lr, [sp, #52]	; 0x34
   18018:	movweq	ip, #9
   1801c:	b	18064 <argp_parse@@Base+0x1940>
   18020:	mov	ip, #0
   18024:	b	18064 <argp_parse@@Base+0x1940>
   18028:	mov	ip, #1
   1802c:	b	18064 <argp_parse@@Base+0x1940>
   18030:	mov	ip, #2
   18034:	b	18064 <argp_parse@@Base+0x1940>
   18038:	mov	ip, #3
   1803c:	b	18064 <argp_parse@@Base+0x1940>
   18040:	mov	ip, #4
   18044:	b	18064 <argp_parse@@Base+0x1940>
   18048:	mov	ip, #5
   1804c:	b	18064 <argp_parse@@Base+0x1940>
   18050:	mov	ip, #6
   18054:	b	18064 <argp_parse@@Base+0x1940>
   18058:	mov	ip, #7
   1805c:	b	18064 <argp_parse@@Base+0x1940>
   18060:	mov	ip, #8
   18064:	add	lr, sp, #16
   18068:	str	ip, [sp, #4]
   1806c:	str	lr, [sp]
   18070:	bl	17bb4 <argp_parse@@Base+0x1490>
   18074:	mov	sp, fp
   18078:	pop	{fp, pc}
   1807c:	push	{fp, lr}
   18080:	mov	fp, sp
   18084:	movw	r0, #62388	; 0xf3b4
   18088:	movt	r0, #2
   1808c:	ldr	r1, [r0]
   18090:	mov	r0, #10
   18094:	bl	11e58 <fputc@plt>
   18098:	movw	r0, #58041	; 0xe2b9
   1809c:	movw	r1, #58061	; 0xe2cd
   180a0:	movt	r0, #1
   180a4:	movt	r1, #1
   180a8:	bl	11aec <printf@plt>
   180ac:	movw	r0, #58083	; 0xe2e3
   180b0:	movw	r1, #57339	; 0xdffb
   180b4:	movw	r2, #58103	; 0xe2f7
   180b8:	movt	r0, #1
   180bc:	movt	r1, #1
   180c0:	movt	r2, #1
   180c4:	bl	11aec <printf@plt>
   180c8:	movw	r0, #58142	; 0xe31e
   180cc:	movw	r1, #58181	; 0xe345
   180d0:	movt	r0, #1
   180d4:	movt	r1, #1
   180d8:	pop	{fp, lr}
   180dc:	b	11aec <printf@plt>
   180e0:	clz	r2, r1
   180e4:	clz	r3, r0
   180e8:	lsr	r2, r2, #5
   180ec:	lsr	r3, r3, #5
   180f0:	orrs	r2, r3, r2
   180f4:	movwne	r1, #1
   180f8:	movwne	r0, #1
   180fc:	cmp	r1, #0
   18100:	beq	18130 <argp_parse@@Base+0x1a0c>
   18104:	mvn	r2, #-2147483648	; 0x80000000
   18108:	udiv	r2, r2, r1
   1810c:	cmp	r2, r0
   18110:	bcs	18130 <argp_parse@@Base+0x1a0c>
   18114:	push	{fp, lr}
   18118:	mov	fp, sp
   1811c:	bl	11d74 <__errno_location@plt>
   18120:	mov	r1, #12
   18124:	str	r1, [r0]
   18128:	mov	r0, #0
   1812c:	pop	{fp, pc}
   18130:	b	11a80 <calloc@plt>
   18134:	cmp	r0, #0
   18138:	movweq	r0, #1
   1813c:	cmn	r0, #1
   18140:	ble	18148 <argp_parse@@Base+0x1a24>
   18144:	b	11ca8 <malloc@plt>
   18148:	push	{fp, lr}
   1814c:	mov	fp, sp
   18150:	bl	11d74 <__errno_location@plt>
   18154:	mov	r1, #12
   18158:	str	r1, [r0]
   1815c:	mov	r0, #0
   18160:	pop	{fp, pc}
   18164:	push	{fp, lr}
   18168:	mov	fp, sp
   1816c:	cmp	r0, #0
   18170:	beq	1818c <argp_parse@@Base+0x1a68>
   18174:	cmp	r1, #0
   18178:	beq	18198 <argp_parse@@Base+0x1a74>
   1817c:	cmn	r1, #1
   18180:	ble	181a4 <argp_parse@@Base+0x1a80>
   18184:	pop	{fp, lr}
   18188:	b	11bf4 <realloc@plt>
   1818c:	mov	r0, r1
   18190:	pop	{fp, lr}
   18194:	b	18134 <argp_parse@@Base+0x1a10>
   18198:	bl	17a00 <argp_parse@@Base+0x12dc>
   1819c:	mov	r0, #0
   181a0:	pop	{fp, pc}
   181a4:	bl	11d74 <__errno_location@plt>
   181a8:	mov	r1, #12
   181ac:	str	r1, [r0]
   181b0:	mov	r0, #0
   181b4:	pop	{fp, pc}

000181b8 <argp_help@@Base>:
   181b8:	push	{fp, lr}
   181bc:	mov	fp, sp
   181c0:	sub	sp, sp, #8
   181c4:	mov	ip, r2
   181c8:	mov	r2, r1
   181cc:	str	r3, [sp]
   181d0:	mov	r1, #0
   181d4:	mov	r3, ip
   181d8:	bl	181e4 <argp_help@@Base+0x2c>
   181dc:	mov	sp, fp
   181e0:	pop	{fp, pc}
   181e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181e8:	add	fp, sp, #28
   181ec:	sub	sp, sp, #108	; 0x6c
   181f0:	cmp	r2, #0
   181f4:	str	r3, [fp, #-92]	; 0xffffffa4
   181f8:	str	r1, [fp, #-100]	; 0xffffff9c
   181fc:	str	r0, [fp, #-108]	; 0xffffff94
   18200:	beq	19580 <argp_help@@Base+0x13c8>
   18204:	ldr	r0, [fp, #8]
   18208:	mov	r4, r2
   1820c:	str	r0, [fp, #-96]	; 0xffffffa0
   18210:	mov	r0, r2
   18214:	bl	11eac <flockfile@plt>
   18218:	movw	r9, #62320	; 0xf370
   1821c:	movt	r9, #2
   18220:	ldr	r0, [r9, #36]	; 0x24
   18224:	cmp	r0, #0
   18228:	bne	18744 <argp_help@@Base+0x58c>
   1822c:	movw	r0, #58373	; 0xe405
   18230:	movt	r0, #1
   18234:	bl	11c90 <getenv@plt>
   18238:	mov	r8, r0
   1823c:	mov	r0, #32
   18240:	mov	r1, r9
   18244:	add	r3, r9, #16
   18248:	sub	r2, fp, #88	; 0x58
   1824c:	vld1.64	{d16-d17}, [r1], r0
   18250:	vld1.64	{d18-d19}, [r3]
   18254:	add	r7, r2, #16
   18258:	cmp	r8, #0
   1825c:	vldr	d20, [r1]
   18260:	mov	r1, r2
   18264:	vst1.64	{d16-d17}, [r1], r0
   18268:	vst1.64	{d18-d19}, [r7]
   1826c:	vstr	d20, [r1]
   18270:	beq	18744 <argp_help@@Base+0x58c>
   18274:	ldrb	r5, [r8]
   18278:	str	r7, [fp, #-116]	; 0xffffff8c
   1827c:	str	r3, [fp, #-112]	; 0xffffff90
   18280:	str	r4, [fp, #-132]	; 0xffffff7c
   18284:	cmp	r5, #0
   18288:	beq	18654 <argp_help@@Base+0x49c>
   1828c:	movw	r7, #59032	; 0xe698
   18290:	movt	r7, #1
   18294:	bl	11cf0 <__ctype_b_loc@plt>
   18298:	str	r0, [fp, #-104]	; 0xffffff98
   1829c:	b	182d0 <argp_help@@Base+0x118>
   182a0:	ldrb	r0, [r6, #15]
   182a4:	sub	r1, fp, #88	; 0x58
   182a8:	str	r5, [r1, r0]
   182ac:	mov	r8, r4
   182b0:	movw	r9, #62320	; 0xf370
   182b4:	ldrb	r0, [r8], #1
   182b8:	movt	r9, #2
   182bc:	cmp	r0, #44	; 0x2c
   182c0:	movne	r8, r4
   182c4:	ldrb	r5, [r8]
   182c8:	cmp	r5, #0
   182cc:	beq	18654 <argp_help@@Base+0x49c>
   182d0:	ldr	r0, [fp, #-104]	; 0xffffff98
   182d4:	uxtb	r1, r5
   182d8:	ldr	r0, [r0]
   182dc:	add	r1, r0, r1, lsl #1
   182e0:	ldrh	r1, [r1]
   182e4:	tst	r1, #8192	; 0x2000
   182e8:	beq	182f8 <argp_help@@Base+0x140>
   182ec:	ldrb	r5, [r8, #1]!
   182f0:	add	r1, r0, r5, lsl #1
   182f4:	b	182e0 <argp_help@@Base+0x128>
   182f8:	tst	r1, #1024	; 0x400
   182fc:	beq	18628 <argp_help@@Base+0x470>
   18300:	mov	r3, r5
   18304:	mov	r2, r8
   18308:	b	18310 <argp_help@@Base+0x158>
   1830c:	ldrb	r3, [r2, #1]!
   18310:	uxtb	r6, r3
   18314:	add	r1, r0, r6, lsl #1
   18318:	ldrh	r1, [r1]
   1831c:	tst	r1, #8
   18320:	bne	1830c <argp_help@@Base+0x154>
   18324:	cmp	r6, #95	; 0x5f
   18328:	cmpne	r6, #45	; 0x2d
   1832c:	beq	1830c <argp_help@@Base+0x154>
   18330:	tst	r1, #8192	; 0x2000
   18334:	mov	r4, r2
   18338:	beq	18354 <argp_help@@Base+0x19c>
   1833c:	mov	r4, r2
   18340:	ldrb	r3, [r4, #1]!
   18344:	add	r1, r0, r3, lsl #1
   18348:	ldrh	r1, [r1]
   1834c:	tst	r1, #8192	; 0x2000
   18350:	bne	18340 <argp_help@@Base+0x188>
   18354:	sub	r9, r2, r8
   18358:	uxtb	r2, r3
   1835c:	cmp	r2, #0
   18360:	cmpne	r2, #44	; 0x2c
   18364:	bne	183b4 <argp_help@@Base+0x1fc>
   18368:	uxtb	r0, r5
   1836c:	mov	sl, #1
   18370:	cmp	r0, #110	; 0x6e
   18374:	bne	183ac <argp_help@@Base+0x1f4>
   18378:	ldrb	r0, [r8, #1]
   1837c:	mov	sl, #1
   18380:	cmp	r0, #111	; 0x6f
   18384:	bne	183ac <argp_help@@Base+0x1f4>
   18388:	ldrb	r0, [r8, #2]
   1838c:	mov	sl, #1
   18390:	cmp	r0, #45	; 0x2d
   18394:	bne	183ac <argp_help@@Base+0x1f4>
   18398:	sub	r9, r9, #3
   1839c:	add	r8, r8, #3
   183a0:	mov	r5, #0
   183a4:	mov	sl, #1
   183a8:	b	18438 <argp_help@@Base+0x280>
   183ac:	mov	r5, #1
   183b0:	b	18438 <argp_help@@Base+0x280>
   183b4:	cmp	r2, #61	; 0x3d
   183b8:	bne	183d0 <argp_help@@Base+0x218>
   183bc:	ldrb	r1, [r4, #1]!
   183c0:	add	r1, r0, r1, lsl #1
   183c4:	ldrh	r1, [r1]
   183c8:	tst	r1, #8192	; 0x2000
   183cc:	bne	183bc <argp_help@@Base+0x204>
   183d0:	mov	sl, #0
   183d4:	tst	r1, #2048	; 0x800
   183d8:	bne	183e4 <argp_help@@Base+0x22c>
   183dc:	mov	r5, #0
   183e0:	b	18438 <argp_help@@Base+0x280>
   183e4:	mov	r0, r4
   183e8:	mov	r1, #0
   183ec:	mov	r2, #10
   183f0:	bl	11abc <strtol@plt>
   183f4:	mov	r5, r0
   183f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   183fc:	sub	r4, r4, #1
   18400:	ldr	r0, [r0]
   18404:	ldrb	r1, [r4, #1]!
   18408:	add	r1, r0, r1, lsl #1
   1840c:	ldrh	r1, [r1]
   18410:	tst	r1, #2048	; 0x800
   18414:	bne	18404 <argp_help@@Base+0x24c>
   18418:	mov	sl, #0
   1841c:	tst	r1, #8192	; 0x2000
   18420:	beq	18438 <argp_help@@Base+0x280>
   18424:	ldrb	r1, [r4, #1]!
   18428:	add	r1, r0, r1, lsl #1
   1842c:	ldrb	r1, [r1, #1]
   18430:	tst	r1, #32
   18434:	bne	18424 <argp_help@@Base+0x26c>
   18438:	mov	r0, r7
   1843c:	bl	11d2c <strlen@plt>
   18440:	cmp	r0, r9
   18444:	bne	18464 <argp_help@@Base+0x2ac>
   18448:	mov	r0, r8
   1844c:	mov	r1, r7
   18450:	mov	r2, r9
   18454:	bl	11f24 <strncmp@plt>
   18458:	cmp	r0, #0
   1845c:	mov	r6, r7
   18460:	beq	185e8 <argp_help@@Base+0x430>
   18464:	add	r6, r7, #16
   18468:	mov	r0, r6
   1846c:	bl	11d2c <strlen@plt>
   18470:	cmp	r0, r9
   18474:	bne	18490 <argp_help@@Base+0x2d8>
   18478:	mov	r0, r8
   1847c:	mov	r1, r6
   18480:	mov	r2, r9
   18484:	bl	11f24 <strncmp@plt>
   18488:	cmp	r0, #0
   1848c:	beq	185e8 <argp_help@@Base+0x430>
   18490:	add	r6, r7, #32
   18494:	mov	r0, r6
   18498:	bl	11d2c <strlen@plt>
   1849c:	cmp	r0, r9
   184a0:	bne	184bc <argp_help@@Base+0x304>
   184a4:	mov	r0, r8
   184a8:	mov	r1, r6
   184ac:	mov	r2, r9
   184b0:	bl	11f24 <strncmp@plt>
   184b4:	cmp	r0, #0
   184b8:	beq	185e8 <argp_help@@Base+0x430>
   184bc:	add	r6, r7, #48	; 0x30
   184c0:	mov	r0, r6
   184c4:	bl	11d2c <strlen@plt>
   184c8:	cmp	r0, r9
   184cc:	bne	184e8 <argp_help@@Base+0x330>
   184d0:	mov	r0, r8
   184d4:	mov	r1, r6
   184d8:	mov	r2, r9
   184dc:	bl	11f24 <strncmp@plt>
   184e0:	cmp	r0, #0
   184e4:	beq	185e8 <argp_help@@Base+0x430>
   184e8:	add	r6, r7, #64	; 0x40
   184ec:	mov	r0, r6
   184f0:	bl	11d2c <strlen@plt>
   184f4:	cmp	r0, r9
   184f8:	bne	18514 <argp_help@@Base+0x35c>
   184fc:	mov	r0, r8
   18500:	mov	r1, r6
   18504:	mov	r2, r9
   18508:	bl	11f24 <strncmp@plt>
   1850c:	cmp	r0, #0
   18510:	beq	185e8 <argp_help@@Base+0x430>
   18514:	add	r6, r7, #80	; 0x50
   18518:	mov	r0, r6
   1851c:	bl	11d2c <strlen@plt>
   18520:	cmp	r0, r9
   18524:	bne	18540 <argp_help@@Base+0x388>
   18528:	mov	r0, r8
   1852c:	mov	r1, r6
   18530:	mov	r2, r9
   18534:	bl	11f24 <strncmp@plt>
   18538:	cmp	r0, #0
   1853c:	beq	185e8 <argp_help@@Base+0x430>
   18540:	add	r6, r7, #96	; 0x60
   18544:	mov	r0, r6
   18548:	bl	11d2c <strlen@plt>
   1854c:	cmp	r0, r9
   18550:	bne	1856c <argp_help@@Base+0x3b4>
   18554:	mov	r0, r8
   18558:	mov	r1, r6
   1855c:	mov	r2, r9
   18560:	bl	11f24 <strncmp@plt>
   18564:	cmp	r0, #0
   18568:	beq	185e8 <argp_help@@Base+0x430>
   1856c:	add	r6, r7, #112	; 0x70
   18570:	mov	r0, r6
   18574:	bl	11d2c <strlen@plt>
   18578:	cmp	r0, r9
   1857c:	bne	18598 <argp_help@@Base+0x3e0>
   18580:	mov	r0, r8
   18584:	mov	r1, r6
   18588:	mov	r2, r9
   1858c:	bl	11f24 <strncmp@plt>
   18590:	cmp	r0, #0
   18594:	beq	185e8 <argp_help@@Base+0x430>
   18598:	add	r6, r7, #128	; 0x80
   1859c:	mov	r0, r6
   185a0:	bl	11d2c <strlen@plt>
   185a4:	cmp	r0, r9
   185a8:	bne	185c4 <argp_help@@Base+0x40c>
   185ac:	mov	r0, r8
   185b0:	mov	r1, r6
   185b4:	mov	r2, r9
   185b8:	bl	11f24 <strncmp@plt>
   185bc:	cmp	r0, #0
   185c0:	beq	185e8 <argp_help@@Base+0x430>
   185c4:	sub	sp, sp, #8
   185c8:	str	r9, [sp]
   185cc:	str	r8, [sp, #4]
   185d0:	movw	r3, #58434	; 0xe442
   185d4:	mov	r1, #0
   185d8:	mov	r2, #0
   185dc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   185e0:	movt	r3, #1
   185e4:	b	1861c <argp_help@@Base+0x464>
   185e8:	cmp	sl, #0
   185ec:	beq	182a0 <argp_help@@Base+0xe8>
   185f0:	ldrb	r0, [r6, #14]
   185f4:	cmp	r0, #0
   185f8:	bne	182a0 <argp_help@@Base+0xe8>
   185fc:	sub	sp, sp, #8
   18600:	str	r9, [sp]
   18604:	str	r8, [sp, #4]
   18608:	movw	r3, #58387	; 0xe413
   1860c:	mov	r1, #0
   18610:	mov	r2, #0
   18614:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18618:	movt	r3, #1
   1861c:	bl	198f8 <argp_failure@@Base>
   18620:	add	sp, sp, #8
   18624:	b	182ac <argp_help@@Base+0xf4>
   18628:	tst	r5, #255	; 0xff
   1862c:	beq	18654 <argp_help@@Base+0x49c>
   18630:	sub	sp, sp, #8
   18634:	str	r8, [sp]
   18638:	movw	r3, #58472	; 0xe468
   1863c:	mov	r1, #0
   18640:	mov	r2, #0
   18644:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18648:	movt	r3, #1
   1864c:	bl	198f8 <argp_failure@@Base>
   18650:	add	sp, sp, #8
   18654:	ldr	r2, [fp, #-80]	; 0xffffffb0
   18658:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1865c:	movw	r0, #59032	; 0xe698
   18660:	movt	r0, #1
   18664:	cmp	r2, r1
   18668:	bge	186ec <argp_help@@Base+0x534>
   1866c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18670:	cmp	r2, r1
   18674:	bge	186f4 <argp_help@@Base+0x53c>
   18678:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1867c:	cmp	r2, r1
   18680:	bge	186fc <argp_help@@Base+0x544>
   18684:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18688:	cmp	r2, r1
   1868c:	bge	18704 <argp_help@@Base+0x54c>
   18690:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18694:	cmp	r2, r1
   18698:	bge	1870c <argp_help@@Base+0x554>
   1869c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   186a0:	ldr	r4, [fp, #-132]	; 0xffffff7c
   186a4:	cmp	r2, r1
   186a8:	bge	196f0 <argp_help@@Base+0x1538>
   186ac:	ldr	r0, [fp, #-116]	; 0xffffff8c
   186b0:	sub	r1, fp, #88	; 0x58
   186b4:	mov	r2, r1
   186b8:	mov	r1, r9
   186bc:	vld1.64	{d16-d17}, [r0]
   186c0:	mov	r0, #32
   186c4:	vld1.64	{d18-d19}, [r2], r0
   186c8:	ldr	r0, [fp, #-112]	; 0xffffff90
   186cc:	vst1.64	{d16-d17}, [r0]
   186d0:	mov	r0, #36	; 0x24
   186d4:	vst1.64	{d18-d19}, [r1], r0
   186d8:	mov	r0, #1
   186dc:	str	r0, [r1]
   186e0:	ldr	r0, [r2]
   186e4:	str	r0, [r9, #32]
   186e8:	b	18744 <argp_help@@Base+0x58c>
   186ec:	add	r0, r0, #32
   186f0:	b	18710 <argp_help@@Base+0x558>
   186f4:	add	r0, r0, #48	; 0x30
   186f8:	b	18710 <argp_help@@Base+0x558>
   186fc:	add	r0, r0, #64	; 0x40
   18700:	b	18710 <argp_help@@Base+0x558>
   18704:	add	r0, r0, #80	; 0x50
   18708:	b	18710 <argp_help@@Base+0x558>
   1870c:	add	r0, r0, #96	; 0x60
   18710:	ldr	r4, [fp, #-132]	; 0xffffff7c
   18714:	sub	sp, sp, #8
   18718:	movw	r1, #58553	; 0xe4b9
   1871c:	str	r0, [sp, #4]
   18720:	movw	r3, #58501	; 0xe485
   18724:	mov	r2, #0
   18728:	movt	r1, #1
   1872c:	movt	r3, #1
   18730:	str	r1, [sp]
   18734:	mov	r1, #0
   18738:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1873c:	bl	198f8 <argp_failure@@Base>
   18740:	add	sp, sp, #8
   18744:	ldr	r2, [r9, #32]
   18748:	mov	r0, r4
   1874c:	mov	r1, #0
   18750:	mov	r3, #0
   18754:	mov	r5, #0
   18758:	bl	1cb58 <argp_failure@@Base+0x3260>
   1875c:	cmp	r0, #0
   18760:	beq	18b30 <argp_help@@Base+0x978>
   18764:	mov	sl, r0
   18768:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1876c:	str	r4, [fp, #-132]	; 0xffffff7c
   18770:	tst	r0, #11
   18774:	beq	1891c <argp_help@@Base+0x764>
   18778:	ldr	r0, [fp, #-108]	; 0xffffff94
   1877c:	mov	r1, #0
   18780:	bl	19aec <argp_failure@@Base+0x1f4>
   18784:	ldr	r9, [r0, #4]
   18788:	mov	r5, r0
   1878c:	cmp	r9, #0
   18790:	beq	18914 <argp_help@@Base+0x75c>
   18794:	ldr	r4, [r5]
   18798:	movw	r7, #55678	; 0xd97e
   1879c:	str	r5, [fp, #-112]	; 0xffffff90
   187a0:	mov	r5, r9
   187a4:	movt	r7, #1
   187a8:	str	r4, [fp, #-104]	; 0xffffff98
   187ac:	b	187bc <argp_help@@Base+0x604>
   187b0:	subs	r5, r5, #1
   187b4:	add	r4, r4, #28
   187b8:	beq	18814 <argp_help@@Base+0x65c>
   187bc:	ldr	r6, [r4, #4]
   187c0:	cmp	r6, #0
   187c4:	beq	187b0 <argp_help@@Base+0x5f8>
   187c8:	ldr	r0, [r4]
   187cc:	add	r8, r0, #12
   187d0:	b	187e0 <argp_help@@Base+0x628>
   187d4:	subs	r6, r6, #1
   187d8:	add	r8, r8, #24
   187dc:	beq	187b0 <argp_help@@Base+0x5f8>
   187e0:	ldr	r0, [r8, #-12]
   187e4:	cmp	r0, #0
   187e8:	beq	187d4 <argp_help@@Base+0x61c>
   187ec:	ldrb	r1, [r8]
   187f0:	tst	r1, #2
   187f4:	bne	187d4 <argp_help@@Base+0x61c>
   187f8:	mov	r1, r7
   187fc:	bl	11ab0 <strcmp@plt>
   18800:	cmp	r0, #0
   18804:	bne	187d4 <argp_help@@Base+0x61c>
   18808:	cmp	r4, #0
   1880c:	mvnne	r0, #0
   18810:	strne	r0, [r4, #12]
   18814:	ldr	r4, [fp, #-104]	; 0xffffff98
   18818:	movw	r8, #57248	; 0xdfa0
   1881c:	mov	r5, r9
   18820:	movt	r8, #1
   18824:	b	18834 <argp_help@@Base+0x67c>
   18828:	subs	r5, r5, #1
   1882c:	add	r4, r4, #28
   18830:	beq	1888c <argp_help@@Base+0x6d4>
   18834:	ldr	r6, [r4, #4]
   18838:	cmp	r6, #0
   1883c:	beq	18828 <argp_help@@Base+0x670>
   18840:	ldr	r0, [r4]
   18844:	add	r7, r0, #12
   18848:	b	18858 <argp_help@@Base+0x6a0>
   1884c:	subs	r6, r6, #1
   18850:	add	r7, r7, #24
   18854:	beq	18828 <argp_help@@Base+0x670>
   18858:	ldr	r0, [r7, #-12]
   1885c:	cmp	r0, #0
   18860:	beq	1884c <argp_help@@Base+0x694>
   18864:	ldrb	r1, [r7]
   18868:	tst	r1, #2
   1886c:	bne	1884c <argp_help@@Base+0x694>
   18870:	mov	r1, r8
   18874:	bl	11ab0 <strcmp@plt>
   18878:	cmp	r0, #0
   1887c:	bne	1884c <argp_help@@Base+0x694>
   18880:	cmp	r4, #0
   18884:	mvnne	r0, #0
   18888:	strne	r0, [r4, #12]
   1888c:	ldr	r0, [fp, #-104]	; 0xffffff98
   18890:	ldr	r5, [fp, #-112]	; 0xffffff90
   18894:	sub	r2, r9, #1
   18898:	and	r6, r9, #3
   1889c:	mov	r1, #0
   188a0:	cmp	r2, #3
   188a4:	mov	r2, r0
   188a8:	bcc	188e4 <argp_help@@Base+0x72c>
   188ac:	sub	r3, r9, r6
   188b0:	mov	r1, #0
   188b4:	mov	r2, r0
   188b8:	add	r7, r1, #3
   188bc:	str	r1, [r2, #24]
   188c0:	str	r7, [r2, #108]	; 0x6c
   188c4:	add	r7, r1, #2
   188c8:	str	r7, [r2, #80]	; 0x50
   188cc:	add	r7, r1, #1
   188d0:	add	r1, r1, #4
   188d4:	str	r7, [r2, #52]	; 0x34
   188d8:	add	r2, r2, #112	; 0x70
   188dc:	cmp	r3, r1
   188e0:	bne	188b8 <argp_help@@Base+0x700>
   188e4:	cmp	r6, #0
   188e8:	beq	18900 <argp_help@@Base+0x748>
   188ec:	add	r2, r2, #24
   188f0:	str	r1, [r2], #28
   188f4:	subs	r6, r6, #1
   188f8:	add	r1, r1, #1
   188fc:	bne	188f0 <argp_help@@Base+0x738>
   18900:	movw	r3, #44408	; 0xad78
   18904:	mov	r1, r9
   18908:	mov	r2, #28
   1890c:	movt	r3, #1
   18910:	bl	11ed0 <qsort@plt>
   18914:	movw	r9, #62320	; 0xf370
   18918:	movt	r9, #2
   1891c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18920:	str	r5, [fp, #-112]	; 0xffffff90
   18924:	tst	r0, #3
   18928:	beq	18b40 <argp_help@@Base+0x988>
   1892c:	ldr	r0, [fp, #-108]	; 0xffffff94
   18930:	bl	1a1ac <argp_failure@@Base+0x8b4>
   18934:	mov	r2, r0
   18938:	add	r0, r0, #7
   1893c:	bic	r0, r0, #7
   18940:	sub	r5, sp, r0
   18944:	mov	sp, r5
   18948:	mov	r0, r5
   1894c:	mov	r1, #0
   18950:	bl	11da4 <memset@plt>
   18954:	movw	r7, #58284	; 0xe3ac
   18958:	movw	r6, #58291	; 0xe3b3
   1895c:	movt	r7, #1
   18960:	movt	r6, #1
   18964:	b	18988 <argp_help@@Base+0x7d0>
   18968:	add	r1, r0, #1
   1896c:	str	r1, [sl, #28]
   18970:	mov	r1, #10
   18974:	strb	r1, [r0]
   18978:	cmp	r7, #0
   1897c:	mov	r7, r6
   18980:	str	r4, [fp, #-92]	; 0xffffffa4
   18984:	beq	18b28 <argp_help@@Base+0x970>
   18988:	ldr	r1, [sl, #24]
   1898c:	ldr	r2, [sl, #28]
   18990:	ldr	r0, [sl, #16]
   18994:	ldr	r4, [r9, #28]
   18998:	sub	r1, r2, r1
   1899c:	cmp	r1, r0
   189a0:	bls	189ac <argp_help@@Base+0x7f4>
   189a4:	mov	r0, sl
   189a8:	bl	1cc24 <argp_failure@@Base+0x332c>
   189ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   189b0:	movw	r1, #58278	; 0xe3a6
   189b4:	ldr	r9, [sl, #12]
   189b8:	mov	r0, sl
   189bc:	mov	r2, r7
   189c0:	str	r4, [sl, #12]
   189c4:	str	r5, [fp, #-88]	; 0xffffffa8
   189c8:	movt	r1, #1
   189cc:	bl	1d240 <argp_failure@@Base+0x3948>
   189d0:	movw	r0, #62320	; 0xf370
   189d4:	ldr	r1, [sl, #24]
   189d8:	ldr	r2, [sl, #28]
   189dc:	movt	r0, #2
   189e0:	ldr	r4, [r0, #28]
   189e4:	ldr	r0, [sl, #16]
   189e8:	sub	r1, r2, r1
   189ec:	cmp	r1, r0
   189f0:	bls	189fc <argp_help@@Base+0x844>
   189f4:	mov	r0, sl
   189f8:	bl	1cc24 <argp_failure@@Base+0x332c>
   189fc:	ldr	r8, [sl, #4]
   18a00:	str	r4, [sl, #4]
   18a04:	ldr	r4, [fp, #-92]	; 0xffffffa4
   18a08:	tst	r4, #2
   18a0c:	bne	18a24 <argp_help@@Base+0x86c>
   18a10:	ldr	r0, [fp, #-112]	; 0xffffff90
   18a14:	mov	r1, sl
   18a18:	bl	1a220 <argp_failure@@Base+0x928>
   18a1c:	orr	r4, r4, #2
   18a20:	b	18a88 <argp_help@@Base+0x8d0>
   18a24:	ldr	r0, [fp, #-112]	; 0xffffff90
   18a28:	ldr	r0, [r0, #4]
   18a2c:	cmp	r0, #0
   18a30:	beq	18a88 <argp_help@@Base+0x8d0>
   18a34:	ldr	r0, [sl, #28]
   18a38:	ldr	r1, [sl, #32]
   18a3c:	add	r2, r0, #12
   18a40:	cmp	r2, r1
   18a44:	bls	18a60 <argp_help@@Base+0x8a8>
   18a48:	mov	r0, sl
   18a4c:	mov	r1, #12
   18a50:	bl	1d154 <argp_failure@@Base+0x385c>
   18a54:	cmp	r0, #0
   18a58:	beq	18a88 <argp_help@@Base+0x8d0>
   18a5c:	ldr	r0, [sl, #28]
   18a60:	movw	r1, #59016	; 0xe688
   18a64:	movt	r1, #1
   18a68:	vldr	d16, [r1]
   18a6c:	movw	r1, #11822	; 0x2e2e
   18a70:	movt	r1, #23854	; 0x5d2e
   18a74:	str	r1, [r0, #8]
   18a78:	vst1.8	{d16}, [r0]
   18a7c:	ldr	r0, [sl, #28]
   18a80:	add	r0, r0, #12
   18a84:	str	r0, [sl, #28]
   18a88:	sub	sp, sp, #8
   18a8c:	str	sl, [sp]
   18a90:	sub	r2, fp, #88	; 0x58
   18a94:	mov	r3, #1
   18a98:	ldr	r0, [fp, #-108]	; 0xffffff94
   18a9c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18aa0:	bl	1a5f0 <argp_failure@@Base+0xcf8>
   18aa4:	add	sp, sp, #8
   18aa8:	mov	r7, r0
   18aac:	ldr	r2, [sl, #24]
   18ab0:	ldr	r0, [sl, #28]
   18ab4:	ldr	r1, [sl, #16]
   18ab8:	sub	r2, r0, r2
   18abc:	cmp	r2, r1
   18ac0:	bls	18adc <argp_help@@Base+0x924>
   18ac4:	mov	r0, sl
   18ac8:	bl	1cc24 <argp_failure@@Base+0x332c>
   18acc:	ldr	r2, [sl, #24]
   18ad0:	ldr	r0, [sl, #28]
   18ad4:	ldr	r1, [sl, #16]
   18ad8:	sub	r2, r0, r2
   18adc:	cmp	r2, r1
   18ae0:	str	r9, [sl, #12]
   18ae4:	bls	18af4 <argp_help@@Base+0x93c>
   18ae8:	mov	r0, sl
   18aec:	bl	1cc24 <argp_failure@@Base+0x332c>
   18af0:	ldr	r0, [sl, #28]
   18af4:	str	r8, [sl, #4]
   18af8:	movw	r9, #62320	; 0xf370
   18afc:	ldr	r1, [sl, #32]
   18b00:	movt	r9, #2
   18b04:	cmp	r0, r1
   18b08:	bcc	18968 <argp_help@@Base+0x7b0>
   18b0c:	mov	r0, sl
   18b10:	mov	r1, #1
   18b14:	bl	1d154 <argp_failure@@Base+0x385c>
   18b18:	cmp	r0, #0
   18b1c:	beq	18978 <argp_help@@Base+0x7c0>
   18b20:	ldr	r0, [sl, #28]
   18b24:	b	18968 <argp_help@@Base+0x7b0>
   18b28:	mov	r5, #1
   18b2c:	b	18b44 <argp_help@@Base+0x98c>
   18b30:	mov	r0, r4
   18b34:	sub	sp, fp, #28
   18b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b3c:	b	11c24 <funlockfile@plt>
   18b40:	mov	r5, #0
   18b44:	ldr	r4, [fp, #-92]	; 0xffffffa4
   18b48:	tst	r4, #16
   18b4c:	bne	18b64 <argp_help@@Base+0x9ac>
   18b50:	tst	r4, #4
   18b54:	bne	18b94 <argp_help@@Base+0x9dc>
   18b58:	tst	r4, #8
   18b5c:	bne	18bb8 <argp_help@@Base+0xa00>
   18b60:	b	19480 <argp_help@@Base+0x12c8>
   18b64:	sub	sp, sp, #8
   18b68:	mov	r0, #1
   18b6c:	mov	r2, #0
   18b70:	mov	r3, #0
   18b74:	stm	sp, {r0, sl}
   18b78:	ldr	r0, [fp, #-108]	; 0xffffff94
   18b7c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18b80:	bl	1a8e8 <argp_failure@@Base+0xff0>
   18b84:	add	sp, sp, #8
   18b88:	orr	r5, r0, r5
   18b8c:	tst	r4, #4
   18b90:	beq	18b58 <argp_help@@Base+0x9a0>
   18b94:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18b98:	movw	r1, #58298	; 0xe3ba
   18b9c:	mov	r0, sl
   18ba0:	movt	r1, #1
   18ba4:	mov	r3, r2
   18ba8:	bl	1d240 <argp_failure@@Base+0x3948>
   18bac:	mov	r5, #1
   18bb0:	tst	r4, #8
   18bb4:	beq	19480 <argp_help@@Base+0x12c8>
   18bb8:	ldr	r0, [fp, #-112]	; 0xffffff90
   18bbc:	ldr	r1, [r0, #4]
   18bc0:	cmp	r1, #0
   18bc4:	beq	19480 <argp_help@@Base+0x12c8>
   18bc8:	cmp	r5, #0
   18bcc:	beq	18c2c <argp_help@@Base+0xa74>
   18bd0:	ldr	r0, [sl, #28]
   18bd4:	ldr	r1, [sl, #32]
   18bd8:	ldr	r5, [fp, #-112]	; 0xffffff90
   18bdc:	cmp	r0, r1
   18be0:	bcc	18bfc <argp_help@@Base+0xa44>
   18be4:	mov	r0, sl
   18be8:	mov	r1, #1
   18bec:	bl	1d154 <argp_failure@@Base+0x385c>
   18bf0:	cmp	r0, #0
   18bf4:	beq	18c0c <argp_help@@Base+0xa54>
   18bf8:	ldr	r0, [sl, #28]
   18bfc:	add	r1, r0, #1
   18c00:	str	r1, [sl, #28]
   18c04:	mov	r1, #10
   18c08:	strb	r1, [r0]
   18c0c:	ldr	r1, [r5, #4]
   18c10:	mov	r0, #0
   18c14:	str	r0, [fp, #-44]	; 0xffffffd4
   18c18:	str	r0, [fp, #-48]	; 0xffffffd0
   18c1c:	str	r0, [fp, #-40]	; 0xffffffd8
   18c20:	cmp	r1, #0
   18c24:	bne	18c3c <argp_help@@Base+0xa84>
   18c28:	b	1947c <argp_help@@Base+0x12c4>
   18c2c:	mov	r0, #0
   18c30:	str	r0, [fp, #-44]	; 0xffffffd4
   18c34:	str	r0, [fp, #-48]	; 0xffffffd0
   18c38:	str	r0, [fp, #-40]	; 0xffffffd8
   18c3c:	add	r0, sl, #28
   18c40:	str	r0, [fp, #-96]	; 0xffffffa0
   18c44:	ldr	r0, [fp, #-112]	; 0xffffff90
   18c48:	str	r4, [fp, #-92]	; 0xffffffa4
   18c4c:	ldr	r5, [r0]
   18c50:	b	18c6c <argp_help@@Base+0xab4>
   18c54:	ldr	r1, [fp, #-116]	; 0xffffff8c
   18c58:	ldr	r0, [fp, #-120]	; 0xffffff88
   18c5c:	add	r5, r5, #28
   18c60:	subs	r1, r1, #1
   18c64:	str	r0, [sl, #12]
   18c68:	beq	19468 <argp_help@@Base+0x12b0>
   18c6c:	str	r1, [fp, #-116]	; 0xffffff8c
   18c70:	ldr	r1, [sl, #24]
   18c74:	ldr	r2, [sl, #28]
   18c78:	ldr	r0, [sl, #16]
   18c7c:	ldr	r8, [r5]
   18c80:	mov	r4, r5
   18c84:	ldr	r5, [r5, #8]
   18c88:	sub	r1, r2, r1
   18c8c:	cmp	r1, r0
   18c90:	bls	18c9c <argp_help@@Base+0xae4>
   18c94:	mov	r0, sl
   18c98:	bl	1cc24 <argp_failure@@Base+0x332c>
   18c9c:	mov	r0, #0
   18ca0:	mov	r3, #0
   18ca4:	ldr	r2, [sl, #4]
   18ca8:	ldr	r1, [sl, #12]
   18cac:	str	r0, [fp, #-128]	; 0xffffff80
   18cb0:	str	r3, [sl, #4]
   18cb4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18cb8:	str	r4, [fp, #-104]	; 0xffffff98
   18cbc:	str	r1, [fp, #-120]	; 0xffffff88
   18cc0:	str	r2, [fp, #-124]	; 0xffffff84
   18cc4:	str	r0, [fp, #-72]	; 0xffffffb8
   18cc8:	mov	r0, #1
   18ccc:	str	r0, [fp, #-76]	; 0xffffffb4
   18cd0:	sub	r0, fp, #48	; 0x30
   18cd4:	str	r0, [fp, #-80]	; 0xffffffb0
   18cd8:	str	sl, [fp, #-84]	; 0xffffffac
   18cdc:	str	r4, [fp, #-88]	; 0xffffffa8
   18ce0:	ldrb	r0, [r8, #12]
   18ce4:	tst	r0, #8
   18ce8:	bne	18d2c <argp_help@@Base+0xb74>
   18cec:	ldr	r0, [r4, #4]
   18cf0:	cmp	r0, #0
   18cf4:	beq	18d2c <argp_help@@Base+0xb74>
   18cf8:	add	r1, r8, #12
   18cfc:	b	18d0c <argp_help@@Base+0xb54>
   18d00:	add	r1, r1, #24
   18d04:	subs	r0, r0, #1
   18d08:	beq	18d2c <argp_help@@Base+0xb74>
   18d0c:	ldr	r2, [r1, #-12]
   18d10:	cmp	r2, #0
   18d14:	beq	18d00 <argp_help@@Base+0xb48>
   18d18:	ldrb	r2, [r1]
   18d1c:	tst	r2, #2
   18d20:	bne	18d00 <argp_help@@Base+0xb48>
   18d24:	mov	r0, #1
   18d28:	str	r0, [fp, #-128]	; 0xffffff80
   18d2c:	ldr	r1, [sl, #24]
   18d30:	ldr	r2, [sl, #28]
   18d34:	ldr	r0, [sl, #16]
   18d38:	ldr	r4, [r9, #8]
   18d3c:	sub	r1, r2, r1
   18d40:	cmp	r1, r0
   18d44:	bls	18d50 <argp_help@@Base+0xb98>
   18d48:	mov	r0, sl
   18d4c:	bl	1cc24 <argp_failure@@Base+0x332c>
   18d50:	ldr	r0, [fp, #-104]	; 0xffffff98
   18d54:	str	r4, [sl, #12]
   18d58:	ldr	r7, [r0, #4]
   18d5c:	cmp	r7, #0
   18d60:	beq	18ec4 <argp_help@@Base+0xd0c>
   18d64:	add	r9, r8, #12
   18d68:	b	18d88 <argp_help@@Base+0xbd0>
   18d6c:	cmp	r2, #0
   18d70:	movne	r0, #1
   18d74:	strne	r0, [fp, #-40]	; 0xffffffd8
   18d78:	add	r5, r5, #1
   18d7c:	add	r9, r9, #24
   18d80:	subs	r7, r7, #1
   18d84:	beq	18ec4 <argp_help@@Base+0xd0c>
   18d88:	ldr	r4, [r9]
   18d8c:	tst	r4, #8
   18d90:	bne	18d7c <argp_help@@Base+0xbc4>
   18d94:	ldr	r6, [r9, #-8]
   18d98:	sub	r0, r6, #1
   18d9c:	cmp	r0, #254	; 0xfe
   18da0:	bhi	18d7c <argp_help@@Base+0xbc4>
   18da4:	bl	11cf0 <__ctype_b_loc@plt>
   18da8:	ldr	r0, [r0]
   18dac:	add	r0, r0, r6, lsl #1
   18db0:	ldrb	r0, [r0, #1]
   18db4:	tst	r0, #64	; 0x40
   18db8:	beq	18d7c <argp_help@@Base+0xbc4>
   18dbc:	ldrb	r0, [r5]
   18dc0:	cmp	r6, r0
   18dc4:	bne	18d7c <argp_help@@Base+0xbc4>
   18dc8:	tst	r4, #2
   18dcc:	bne	18d78 <argp_help@@Base+0xbc0>
   18dd0:	movw	r0, #62320	; 0xf370
   18dd4:	sub	r1, fp, #88	; 0x58
   18dd8:	movt	r0, #2
   18ddc:	ldr	r0, [r0, #8]
   18de0:	bl	1b308 <argp_failure@@Base+0x1a10>
   18de4:	ldr	r0, [sl, #28]
   18de8:	ldr	r1, [sl, #32]
   18dec:	cmp	r0, r1
   18df0:	bcc	18e10 <argp_help@@Base+0xc58>
   18df4:	mov	r0, sl
   18df8:	mov	r1, #1
   18dfc:	bl	1d154 <argp_failure@@Base+0x385c>
   18e00:	cmp	r0, #0
   18e04:	beq	18e24 <argp_help@@Base+0xc6c>
   18e08:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18e0c:	ldr	r0, [r0]
   18e10:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18e14:	add	r1, r0, #1
   18e18:	str	r1, [r2]
   18e1c:	mov	r1, #45	; 0x2d
   18e20:	strb	r1, [r0]
   18e24:	ldr	r0, [sl, #28]
   18e28:	ldr	r1, [sl, #32]
   18e2c:	ldrb	r4, [r5]
   18e30:	cmp	r0, r1
   18e34:	bcc	18e54 <argp_help@@Base+0xc9c>
   18e38:	mov	r0, sl
   18e3c:	mov	r1, #1
   18e40:	bl	1d154 <argp_failure@@Base+0x385c>
   18e44:	cmp	r0, #0
   18e48:	beq	18e64 <argp_help@@Base+0xcac>
   18e4c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18e50:	ldr	r0, [r0]
   18e54:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18e58:	add	r1, r0, #1
   18e5c:	str	r1, [r2]
   18e60:	strb	r4, [r0]
   18e64:	ldr	r0, [fp, #-128]	; 0xffffff80
   18e68:	ldr	r2, [r8, #8]
   18e6c:	cmp	r0, #0
   18e70:	beq	18e88 <argp_help@@Base+0xcd0>
   18e74:	movw	r0, #62320	; 0xf370
   18e78:	movt	r0, #2
   18e7c:	ldr	r0, [r0]
   18e80:	cmp	r0, #0
   18e84:	beq	18d6c <argp_help@@Base+0xbb4>
   18e88:	cmp	r2, #0
   18e8c:	beq	18d78 <argp_help@@Base+0xbc0>
   18e90:	ldrb	r0, [r8, #12]
   18e94:	tst	r0, #1
   18e98:	bne	18eb0 <argp_help@@Base+0xcf8>
   18e9c:	movw	r1, #58497	; 0xe481
   18ea0:	mov	r0, sl
   18ea4:	movt	r1, #1
   18ea8:	bl	1d240 <argp_failure@@Base+0x3948>
   18eac:	b	18d78 <argp_help@@Base+0xbc0>
   18eb0:	movw	r1, #55582	; 0xd91e
   18eb4:	mov	r0, sl
   18eb8:	movt	r1, #1
   18ebc:	bl	1d240 <argp_failure@@Base+0x3948>
   18ec0:	b	18d78 <argp_help@@Base+0xbc0>
   18ec4:	ldrb	r0, [r8, #12]
   18ec8:	movw	r9, #62320	; 0xf370
   18ecc:	movt	r9, #2
   18ed0:	tst	r0, #8
   18ed4:	bne	18f94 <argp_help@@Base+0xddc>
   18ed8:	ldr	r1, [sl, #24]
   18edc:	ldr	r2, [sl, #28]
   18ee0:	ldr	r0, [sl, #16]
   18ee4:	ldr	r4, [r9, #12]
   18ee8:	sub	r1, r2, r1
   18eec:	cmp	r1, r0
   18ef0:	bls	18efc <argp_help@@Base+0xd44>
   18ef4:	mov	r0, sl
   18ef8:	bl	1cc24 <argp_failure@@Base+0x332c>
   18efc:	ldr	r0, [fp, #-104]	; 0xffffff98
   18f00:	str	r4, [sl, #12]
   18f04:	ldr	r4, [r0, #4]
   18f08:	cmp	r4, #0
   18f0c:	beq	1906c <argp_help@@Base+0xeb4>
   18f10:	add	r5, r8, #12
   18f14:	b	18f34 <argp_help@@Base+0xd7c>
   18f18:	movw	r1, #58998	; 0xe676
   18f1c:	mov	r0, sl
   18f20:	movt	r1, #1
   18f24:	bl	1d240 <argp_failure@@Base+0x3948>
   18f28:	add	r5, r5, #24
   18f2c:	subs	r4, r4, #1
   18f30:	beq	1906c <argp_help@@Base+0xeb4>
   18f34:	ldr	r0, [r5, #-12]
   18f38:	cmp	r0, #0
   18f3c:	beq	18f28 <argp_help@@Base+0xd70>
   18f40:	ldrb	r0, [r5]
   18f44:	tst	r0, #2
   18f48:	bne	18f28 <argp_help@@Base+0xd70>
   18f4c:	ldr	r0, [r9, #12]
   18f50:	sub	r1, fp, #88	; 0x58
   18f54:	bl	1b308 <argp_failure@@Base+0x1a10>
   18f58:	ldr	r2, [r5, #-12]
   18f5c:	movw	r1, #58993	; 0xe671
   18f60:	mov	r0, sl
   18f64:	movt	r1, #1
   18f68:	bl	1d240 <argp_failure@@Base+0x3948>
   18f6c:	ldr	r2, [r8, #8]
   18f70:	cmp	r2, #0
   18f74:	beq	18f28 <argp_help@@Base+0xd70>
   18f78:	ldrb	r0, [r8, #12]
   18f7c:	tst	r0, #1
   18f80:	beq	18f18 <argp_help@@Base+0xd60>
   18f84:	movw	r1, #59002	; 0xe67a
   18f88:	mov	r0, sl
   18f8c:	movt	r1, #1
   18f90:	b	18f24 <argp_help@@Base+0xd6c>
   18f94:	ldr	r1, [sl, #24]
   18f98:	ldr	r2, [sl, #28]
   18f9c:	ldr	r0, [sl, #16]
   18fa0:	ldr	r4, [r9, #16]
   18fa4:	sub	r1, r2, r1
   18fa8:	cmp	r1, r0
   18fac:	bls	18fb8 <argp_help@@Base+0xe00>
   18fb0:	mov	r0, sl
   18fb4:	bl	1cc24 <argp_failure@@Base+0x332c>
   18fb8:	ldr	r0, [fp, #-104]	; 0xffffff98
   18fbc:	str	r4, [sl, #12]
   18fc0:	ldr	r6, [r0, #4]
   18fc4:	cmp	r6, #0
   18fc8:	beq	1906c <argp_help@@Base+0xeb4>
   18fcc:	add	r4, r8, #12
   18fd0:	b	18ffc <argp_help@@Base+0xe44>
   18fd4:	mov	r1, r5
   18fd8:	mov	r2, r7
   18fdc:	bl	11b64 <memcpy@plt>
   18fe0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   18fe4:	ldr	r0, [r1]
   18fe8:	add	r0, r0, r7
   18fec:	str	r0, [r1]
   18ff0:	add	r4, r4, #24
   18ff4:	subs	r6, r6, #1
   18ff8:	beq	1906c <argp_help@@Base+0xeb4>
   18ffc:	ldr	r0, [r4, #-12]
   19000:	cmp	r0, #0
   19004:	beq	18ff0 <argp_help@@Base+0xe38>
   19008:	ldrb	r0, [r4]
   1900c:	tst	r0, #2
   19010:	bne	18ff0 <argp_help@@Base+0xe38>
   19014:	ldr	r0, [r9, #16]
   19018:	sub	r1, fp, #88	; 0x58
   1901c:	bl	1b308 <argp_failure@@Base+0x1a10>
   19020:	ldr	r5, [r4, #-12]
   19024:	mov	r0, r5
   19028:	bl	11d2c <strlen@plt>
   1902c:	cmp	r0, #0
   19030:	beq	18ff0 <argp_help@@Base+0xe38>
   19034:	mov	r7, r0
   19038:	ldr	r0, [sl, #28]
   1903c:	ldr	r1, [sl, #32]
   19040:	add	r2, r0, r7
   19044:	cmp	r2, r1
   19048:	bls	18fd4 <argp_help@@Base+0xe1c>
   1904c:	mov	r0, sl
   19050:	mov	r1, r7
   19054:	bl	1d154 <argp_failure@@Base+0x385c>
   19058:	cmp	r0, #0
   1905c:	beq	18ff0 <argp_help@@Base+0xe38>
   19060:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19064:	ldr	r0, [r0]
   19068:	b	18fd4 <argp_help@@Base+0xe1c>
   1906c:	ldr	r1, [sl, #24]
   19070:	ldr	r2, [sl, #28]
   19074:	ldr	r0, [sl, #16]
   19078:	sub	r1, r2, r1
   1907c:	cmp	r1, r0
   19080:	bls	1908c <argp_help@@Base+0xed4>
   19084:	mov	r0, sl
   19088:	bl	1cc24 <argp_failure@@Base+0x332c>
   1908c:	mov	r0, #0
   19090:	ldr	r5, [fp, #-104]	; 0xffffff98
   19094:	str	r0, [sl, #4]
   19098:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1909c:	cmp	r0, #0
   190a0:	beq	190f8 <argp_help@@Base+0xf40>
   190a4:	ldrb	r0, [r8, #12]
   190a8:	tst	r0, #8
   190ac:	bne	190d8 <argp_help@@Base+0xf20>
   190b0:	ldr	r4, [r8, #4]
   190b4:	sub	r0, r4, #1
   190b8:	cmp	r0, #254	; 0xfe
   190bc:	bhi	190d8 <argp_help@@Base+0xf20>
   190c0:	bl	11cf0 <__ctype_b_loc@plt>
   190c4:	ldr	r0, [r0]
   190c8:	add	r0, r0, r4, lsl #1
   190cc:	ldrb	r0, [r0, #1]
   190d0:	tst	r0, #64	; 0x40
   190d4:	bne	19418 <argp_help@@Base+0x1260>
   190d8:	ldr	r0, [r8]
   190dc:	cmp	r0, #0
   190e0:	bne	19418 <argp_help@@Base+0x1260>
   190e4:	ldr	r1, [r5, #20]
   190e8:	ldr	r0, [r8, #16]
   190ec:	sub	r2, fp, #88	; 0x58
   190f0:	bl	1b514 <argp_failure@@Base+0x1c1c>
   190f4:	b	19414 <argp_help@@Base+0x125c>
   190f8:	ldr	r6, [r5, #20]
   190fc:	ldr	r9, [r8, #16]
   19100:	cmp	r6, #0
   19104:	mov	r7, r9
   19108:	beq	19144 <argp_help@@Base+0xf8c>
   1910c:	ldr	r0, [r6, #20]
   19110:	mov	r7, r9
   19114:	cmp	r0, #0
   19118:	beq	19144 <argp_help@@Base+0xf8c>
   1911c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19120:	ldr	r7, [r8, #4]
   19124:	mov	r0, r6
   19128:	bl	1738c <argp_parse@@Base+0xc68>
   1912c:	ldr	r3, [r6, #20]
   19130:	mov	r2, r0
   19134:	mov	r0, r7
   19138:	mov	r1, r9
   1913c:	blx	r3
   19140:	mov	r7, r0
   19144:	cmp	r7, #0
   19148:	beq	193a4 <argp_help@@Base+0x11ec>
   1914c:	ldrb	r0, [r7]
   19150:	cmp	r0, #0
   19154:	beq	19394 <argp_help@@Base+0x11dc>
   19158:	ldr	r1, [sl, #24]
   1915c:	ldr	r2, [sl, #28]
   19160:	ldr	r0, [sl, #16]
   19164:	mov	r8, r5
   19168:	sub	r1, r2, r1
   1916c:	cmp	r1, r0
   19170:	bls	1918c <argp_help@@Base+0xfd4>
   19174:	mov	r0, sl
   19178:	bl	1cc24 <argp_failure@@Base+0x332c>
   1917c:	ldr	r1, [sl, #24]
   19180:	ldr	r2, [sl, #28]
   19184:	ldr	r0, [sl, #16]
   19188:	sub	r1, r2, r1
   1918c:	movw	r2, #62320	; 0xf370
   19190:	ldr	r5, [sl, #20]
   19194:	cmp	r1, r0
   19198:	movt	r2, #2
   1919c:	ldr	r4, [r2, #20]
   191a0:	mov	r6, r4
   191a4:	bls	191cc <argp_help@@Base+0x1014>
   191a8:	mov	r0, sl
   191ac:	bl	1cc24 <argp_failure@@Base+0x332c>
   191b0:	movw	r0, #62320	; 0xf370
   191b4:	ldr	r1, [sl, #24]
   191b8:	ldr	r2, [sl, #28]
   191bc:	movt	r0, #2
   191c0:	ldr	r6, [r0, #20]
   191c4:	ldr	r0, [sl, #16]
   191c8:	sub	r1, r2, r1
   191cc:	bic	r5, r5, r5, asr #31
   191d0:	str	r4, [sl, #4]
   191d4:	cmp	r1, r0
   191d8:	mov	r4, r6
   191dc:	bls	191f4 <argp_help@@Base+0x103c>
   191e0:	mov	r0, sl
   191e4:	bl	1cc24 <argp_failure@@Base+0x332c>
   191e8:	movw	r0, #62320	; 0xf370
   191ec:	movt	r0, #2
   191f0:	ldr	r4, [r0, #20]
   191f4:	add	r0, r4, #3
   191f8:	str	r6, [sl, #12]
   191fc:	cmp	r5, r0
   19200:	bls	1924c <argp_help@@Base+0x1094>
   19204:	ldr	r0, [sl, #28]
   19208:	ldr	r1, [sl, #32]
   1920c:	mov	r5, r8
   19210:	cmp	r0, r1
   19214:	bcc	19234 <argp_help@@Base+0x107c>
   19218:	mov	r0, sl
   1921c:	mov	r1, #1
   19220:	bl	1d154 <argp_failure@@Base+0x385c>
   19224:	cmp	r0, #0
   19228:	beq	19334 <argp_help@@Base+0x117c>
   1922c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19230:	ldr	r0, [r0]
   19234:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19238:	add	r1, r0, #1
   1923c:	str	r1, [r2]
   19240:	mov	r1, #10
   19244:	strb	r1, [r0]
   19248:	b	19334 <argp_help@@Base+0x117c>
   1924c:	cmp	r5, r4
   19250:	bcs	192e0 <argp_help@@Base+0x1128>
   19254:	ldr	r1, [sl, #24]
   19258:	ldr	r2, [sl, #28]
   1925c:	ldr	r0, [sl, #16]
   19260:	sub	r1, r2, r1
   19264:	cmp	r1, r0
   19268:	bls	19274 <argp_help@@Base+0x10bc>
   1926c:	mov	r0, sl
   19270:	bl	1cc24 <argp_failure@@Base+0x332c>
   19274:	ldr	r0, [sl, #20]
   19278:	mov	r5, r8
   1927c:	cmp	r0, #0
   19280:	subgt	r4, r4, r0
   19284:	cmp	r4, #1
   19288:	bge	192ac <argp_help@@Base+0x10f4>
   1928c:	b	19334 <argp_help@@Base+0x117c>
   19290:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19294:	add	r1, r0, #1
   19298:	str	r1, [r2]
   1929c:	mov	r1, #32
   192a0:	strb	r1, [r0]
   192a4:	cmp	r4, #0
   192a8:	ble	19334 <argp_help@@Base+0x117c>
   192ac:	ldr	r0, [sl, #28]
   192b0:	ldr	r1, [sl, #32]
   192b4:	sub	r4, r4, #1
   192b8:	cmp	r0, r1
   192bc:	bcc	19290 <argp_help@@Base+0x10d8>
   192c0:	mov	r0, sl
   192c4:	mov	r1, #1
   192c8:	bl	1d154 <argp_failure@@Base+0x385c>
   192cc:	cmp	r0, #0
   192d0:	beq	192a4 <argp_help@@Base+0x10ec>
   192d4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   192d8:	ldr	r0, [r0]
   192dc:	b	19290 <argp_help@@Base+0x10d8>
   192e0:	ldr	r0, [sl, #28]
   192e4:	ldr	r1, [sl, #32]
   192e8:	mov	r5, r8
   192ec:	add	r2, r0, #3
   192f0:	cmp	r2, r1
   192f4:	bls	19314 <argp_help@@Base+0x115c>
   192f8:	mov	r0, sl
   192fc:	mov	r1, #3
   19300:	bl	1d154 <argp_failure@@Base+0x385c>
   19304:	cmp	r0, #0
   19308:	beq	19334 <argp_help@@Base+0x117c>
   1930c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19310:	ldr	r0, [r0]
   19314:	mov	r1, #32
   19318:	strb	r1, [r0, #2]
   1931c:	movw	r1, #8224	; 0x2020
   19320:	strh	r1, [r0]
   19324:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19328:	ldr	r0, [r1]
   1932c:	add	r0, r0, #3
   19330:	str	r0, [r1]
   19334:	mov	r0, r7
   19338:	bl	11d2c <strlen@plt>
   1933c:	cmp	r0, #0
   19340:	beq	19394 <argp_help@@Base+0x11dc>
   19344:	mov	r8, r0
   19348:	ldr	r0, [sl, #28]
   1934c:	ldr	r1, [sl, #32]
   19350:	add	r2, r0, r8
   19354:	cmp	r2, r1
   19358:	bls	19378 <argp_help@@Base+0x11c0>
   1935c:	mov	r0, sl
   19360:	mov	r1, r8
   19364:	bl	1d154 <argp_failure@@Base+0x385c>
   19368:	cmp	r0, #0
   1936c:	beq	19394 <argp_help@@Base+0x11dc>
   19370:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19374:	ldr	r0, [r0]
   19378:	mov	r1, r7
   1937c:	mov	r2, r8
   19380:	bl	11b64 <memcpy@plt>
   19384:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19388:	ldr	r0, [r1]
   1938c:	add	r0, r0, r8
   19390:	str	r0, [r1]
   19394:	cmp	r7, r9
   19398:	beq	193a4 <argp_help@@Base+0x11ec>
   1939c:	mov	r0, r7
   193a0:	bl	17a00 <argp_parse@@Base+0x12dc>
   193a4:	ldr	r2, [sl, #24]
   193a8:	ldr	r0, [sl, #28]
   193ac:	ldr	r1, [sl, #16]
   193b0:	sub	r2, r0, r2
   193b4:	cmp	r2, r1
   193b8:	bls	193c8 <argp_help@@Base+0x1210>
   193bc:	mov	r0, sl
   193c0:	bl	1cc24 <argp_failure@@Base+0x332c>
   193c4:	ldr	r0, [sl, #28]
   193c8:	mov	r1, #0
   193cc:	movw	r9, #62320	; 0xf370
   193d0:	str	r1, [sl, #4]
   193d4:	movt	r9, #2
   193d8:	ldr	r1, [sl, #32]
   193dc:	cmp	r0, r1
   193e0:	bcc	19400 <argp_help@@Base+0x1248>
   193e4:	mov	r0, sl
   193e8:	mov	r1, #1
   193ec:	bl	1d154 <argp_failure@@Base+0x385c>
   193f0:	cmp	r0, #0
   193f4:	beq	19414 <argp_help@@Base+0x125c>
   193f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   193fc:	ldr	r0, [r0]
   19400:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19404:	add	r1, r0, #1
   19408:	str	r1, [r2]
   1940c:	mov	r1, #10
   19410:	strb	r1, [r0]
   19414:	str	r5, [fp, #-48]	; 0xffffffd0
   19418:	ldr	r1, [sl, #24]
   1941c:	ldr	r2, [sl, #28]
   19420:	ldr	r0, [sl, #16]
   19424:	sub	r1, r2, r1
   19428:	cmp	r1, r0
   1942c:	bls	19448 <argp_help@@Base+0x1290>
   19430:	mov	r0, sl
   19434:	bl	1cc24 <argp_failure@@Base+0x332c>
   19438:	ldr	r1, [sl, #24]
   1943c:	ldr	r2, [sl, #28]
   19440:	ldr	r0, [sl, #16]
   19444:	sub	r1, r2, r1
   19448:	ldr	r2, [fp, #-124]	; 0xffffff84
   1944c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19450:	cmp	r1, r0
   19454:	str	r2, [sl, #4]
   19458:	bls	18c54 <argp_help@@Base+0xa9c>
   1945c:	mov	r0, sl
   19460:	bl	1cc24 <argp_failure@@Base+0x332c>
   19464:	b	18c54 <argp_help@@Base+0xa9c>
   19468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1946c:	cmp	r0, #0
   19470:	ldrne	r0, [r9, #4]
   19474:	cmpne	r0, #0
   19478:	bne	19588 <argp_help@@Base+0x13d0>
   1947c:	mov	r5, #1
   19480:	tst	r4, #32
   19484:	beq	194b0 <argp_help@@Base+0x12f8>
   19488:	sub	sp, sp, #8
   1948c:	mov	r0, #0
   19490:	mov	r2, #1
   19494:	mov	r3, r5
   19498:	stm	sp, {r0, sl}
   1949c:	ldr	r0, [fp, #-108]	; 0xffffff94
   194a0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   194a4:	bl	1a8e8 <argp_failure@@Base+0xff0>
   194a8:	add	sp, sp, #8
   194ac:	orr	r5, r0, r5
   194b0:	tst	r4, #64	; 0x40
   194b4:	beq	19520 <argp_help@@Base+0x1368>
   194b8:	movw	r4, #63008	; 0xf620
   194bc:	movt	r4, #2
   194c0:	ldr	r0, [r4]
   194c4:	cmp	r0, #0
   194c8:	beq	19520 <argp_help@@Base+0x1368>
   194cc:	cmp	r5, #0
   194d0:	beq	1950c <argp_help@@Base+0x1354>
   194d4:	ldr	r0, [sl, #28]
   194d8:	ldr	r1, [sl, #32]
   194dc:	cmp	r0, r1
   194e0:	bcc	194fc <argp_help@@Base+0x1344>
   194e4:	mov	r0, sl
   194e8:	mov	r1, #1
   194ec:	bl	1d154 <argp_failure@@Base+0x385c>
   194f0:	cmp	r0, #0
   194f4:	beq	1950c <argp_help@@Base+0x1354>
   194f8:	ldr	r0, [sl, #28]
   194fc:	add	r1, r0, #1
   19500:	str	r1, [sl, #28]
   19504:	mov	r1, #10
   19508:	strb	r1, [r0]
   1950c:	ldr	r2, [r4]
   19510:	movw	r1, #58353	; 0xe3f1
   19514:	mov	r0, sl
   19518:	movt	r1, #1
   1951c:	bl	1d240 <argp_failure@@Base+0x3948>
   19520:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19524:	bl	11c24 <funlockfile@plt>
   19528:	ldr	r5, [fp, #-112]	; 0xffffff90
   1952c:	cmp	r5, #0
   19530:	beq	19578 <argp_help@@Base+0x13c0>
   19534:	ldr	r0, [r5, #12]
   19538:	cmp	r0, #0
   1953c:	beq	19554 <argp_help@@Base+0x139c>
   19540:	ldr	r4, [r0, #24]
   19544:	bl	17a00 <argp_parse@@Base+0x12dc>
   19548:	cmp	r4, #0
   1954c:	mov	r0, r4
   19550:	bne	19540 <argp_help@@Base+0x1388>
   19554:	ldr	r0, [r5, #4]
   19558:	cmp	r0, #0
   1955c:	beq	19570 <argp_help@@Base+0x13b8>
   19560:	ldr	r0, [r5]
   19564:	bl	17a00 <argp_parse@@Base+0x12dc>
   19568:	ldr	r0, [r5, #8]
   1956c:	bl	17a00 <argp_parse@@Base+0x12dc>
   19570:	mov	r0, r5
   19574:	bl	17a00 <argp_parse@@Base+0x12dc>
   19578:	mov	r0, sl
   1957c:	bl	1cbe0 <argp_failure@@Base+0x32e8>
   19580:	sub	sp, fp, #28
   19584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19588:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1958c:	movw	r5, #58877	; 0xe5fd
   19590:	movt	r5, #1
   19594:	cmp	r0, #0
   19598:	beq	195e8 <argp_help@@Base+0x1430>
   1959c:	ldr	r6, [r0]
   195a0:	cmp	r6, #0
   195a4:	beq	195e8 <argp_help@@Base+0x1430>
   195a8:	ldr	r0, [r6, #20]
   195ac:	cmp	r0, #0
   195b0:	beq	195e8 <argp_help@@Base+0x1430>
   195b4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   195b8:	mov	r0, r6
   195bc:	bl	1738c <argp_parse@@Base+0xc68>
   195c0:	ldr	r3, [r6, #20]
   195c4:	movw	r1, #58877	; 0xe5fd
   195c8:	mov	r2, r0
   195cc:	movw	r0, #5
   195d0:	movt	r0, #512	; 0x200
   195d4:	movt	r1, #1
   195d8:	blx	r3
   195dc:	mov	r5, r0
   195e0:	cmp	r0, #0
   195e4:	beq	1947c <argp_help@@Base+0x12c4>
   195e8:	ldrb	r0, [r5]
   195ec:	cmp	r0, #0
   195f0:	beq	196d4 <argp_help@@Base+0x151c>
   195f4:	ldr	r0, [sl, #28]
   195f8:	ldr	r1, [sl, #32]
   195fc:	cmp	r0, r1
   19600:	bcc	19620 <argp_help@@Base+0x1468>
   19604:	mov	r0, sl
   19608:	mov	r1, #1
   1960c:	bl	1d154 <argp_failure@@Base+0x385c>
   19610:	cmp	r0, #0
   19614:	beq	19634 <argp_help@@Base+0x147c>
   19618:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1961c:	ldr	r0, [r0]
   19620:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19624:	add	r1, r0, #1
   19628:	str	r1, [r2]
   1962c:	mov	r1, #10
   19630:	strb	r1, [r0]
   19634:	mov	r0, r5
   19638:	bl	11d2c <strlen@plt>
   1963c:	cmp	r0, #0
   19640:	beq	19694 <argp_help@@Base+0x14dc>
   19644:	mov	r6, r0
   19648:	ldr	r0, [sl, #28]
   1964c:	ldr	r1, [sl, #32]
   19650:	add	r2, r0, r6
   19654:	cmp	r2, r1
   19658:	bls	19678 <argp_help@@Base+0x14c0>
   1965c:	mov	r0, sl
   19660:	mov	r1, r6
   19664:	bl	1d154 <argp_failure@@Base+0x385c>
   19668:	cmp	r0, #0
   1966c:	beq	19694 <argp_help@@Base+0x14dc>
   19670:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19674:	ldr	r0, [r0]
   19678:	mov	r1, r5
   1967c:	mov	r2, r6
   19680:	bl	11b64 <memcpy@plt>
   19684:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19688:	ldr	r0, [r1]
   1968c:	add	r0, r0, r6
   19690:	str	r0, [r1]
   19694:	ldr	r0, [sl, #28]
   19698:	ldr	r1, [sl, #32]
   1969c:	cmp	r0, r1
   196a0:	bcc	196c0 <argp_help@@Base+0x1508>
   196a4:	mov	r0, sl
   196a8:	mov	r1, #1
   196ac:	bl	1d154 <argp_failure@@Base+0x385c>
   196b0:	cmp	r0, #0
   196b4:	beq	196d4 <argp_help@@Base+0x151c>
   196b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   196bc:	ldr	r0, [r0]
   196c0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   196c4:	add	r1, r0, #1
   196c8:	str	r1, [r2]
   196cc:	mov	r1, #10
   196d0:	strb	r1, [r0]
   196d4:	movw	r0, #58877	; 0xe5fd
   196d8:	movt	r0, #1
   196dc:	cmp	r5, r0
   196e0:	beq	1947c <argp_help@@Base+0x12c4>
   196e4:	mov	r0, r5
   196e8:	bl	17a00 <argp_parse@@Base+0x12dc>
   196ec:	b	1947c <argp_help@@Base+0x12c4>
   196f0:	add	r0, r0, #112	; 0x70
   196f4:	b	18714 <argp_help@@Base+0x55c>

000196f8 <argp_state_help@@Base>:
   196f8:	push	{r4, r5, fp, lr}
   196fc:	add	fp, sp, #8
   19700:	sub	sp, sp, #8
   19704:	mov	r4, r2
   19708:	mov	r2, r1
   1970c:	cmp	r0, #0
   19710:	beq	1975c <argp_state_help@@Base+0x64>
   19714:	cmp	r2, #0
   19718:	beq	19794 <argp_state_help@@Base+0x9c>
   1971c:	ldr	r1, [r0, #16]
   19720:	mov	r5, r0
   19724:	ands	r0, r1, #2
   19728:	bne	19794 <argp_state_help@@Base+0x9c>
   1972c:	ldr	r3, [r5, #40]	; 0x28
   19730:	ldr	r0, [r5]
   19734:	and	r1, r1, #64	; 0x40
   19738:	orr	r4, r4, r1, lsl #1
   1973c:	mov	r1, r5
   19740:	str	r3, [sp]
   19744:	mov	r3, r4
   19748:	bl	181e4 <argp_help@@Base+0x2c>
   1974c:	ldrb	r0, [r5, #16]
   19750:	tst	r0, #32
   19754:	beq	19784 <argp_state_help@@Base+0x8c>
   19758:	b	19794 <argp_state_help@@Base+0x9c>
   1975c:	cmp	r2, #0
   19760:	beq	19794 <argp_state_help@@Base+0x9c>
   19764:	movw	r0, #62376	; 0xf3a8
   19768:	mov	r1, #0
   1976c:	mov	r3, r4
   19770:	movt	r0, #2
   19774:	ldr	r0, [r0]
   19778:	str	r0, [sp]
   1977c:	mov	r0, #0
   19780:	bl	181e4 <argp_help@@Base+0x2c>
   19784:	tst	r4, #256	; 0x100
   19788:	bne	1979c <argp_state_help@@Base+0xa4>
   1978c:	tst	r4, #512	; 0x200
   19790:	bne	197ac <argp_state_help@@Base+0xb4>
   19794:	sub	sp, fp, #8
   19798:	pop	{r4, r5, fp, pc}
   1979c:	movw	r0, #62372	; 0xf3a4
   197a0:	movt	r0, #2
   197a4:	ldr	r0, [r0]
   197a8:	bl	11d08 <exit@plt>
   197ac:	mov	r0, #0
   197b0:	bl	11d08 <exit@plt>

000197b4 <argp_error@@Base>:
   197b4:	sub	sp, sp, #8
   197b8:	push	{r4, r5, r6, sl, fp, lr}
   197bc:	add	fp, sp, #16
   197c0:	sub	sp, sp, #8
   197c4:	mov	r6, r1
   197c8:	mov	r4, r0
   197cc:	cmp	r0, #0
   197d0:	str	r2, [fp, #8]
   197d4:	str	r3, [fp, #12]
   197d8:	beq	197f0 <argp_error@@Base+0x3c>
   197dc:	ldrb	r0, [r4, #16]
   197e0:	tst	r0, #2
   197e4:	bne	198b8 <argp_error@@Base+0x104>
   197e8:	add	r0, r4, #44	; 0x2c
   197ec:	b	197f8 <argp_error@@Base+0x44>
   197f0:	movw	r0, #62384	; 0xf3b0
   197f4:	movt	r0, #2
   197f8:	ldr	r5, [r0]
   197fc:	cmp	r5, #0
   19800:	beq	198b8 <argp_error@@Base+0x104>
   19804:	mov	r0, r5
   19808:	bl	11eac <flockfile@plt>
   1980c:	add	r0, fp, #8
   19810:	cmp	r4, #0
   19814:	mov	r1, r5
   19818:	str	r0, [sp, #4]
   1981c:	movw	r0, #62376	; 0xf3a8
   19820:	movt	r0, #2
   19824:	addne	r0, r4, #40	; 0x28
   19828:	ldr	r0, [r0]
   1982c:	bl	11a8c <fputs_unlocked@plt>
   19830:	ldr	r0, [r5, #20]
   19834:	ldr	r1, [r5, #24]
   19838:	cmp	r0, r1
   1983c:	bcs	198c8 <argp_error@@Base+0x114>
   19840:	add	r1, r0, #1
   19844:	str	r1, [r5, #20]
   19848:	mov	r1, #58	; 0x3a
   1984c:	strb	r1, [r0]
   19850:	ldr	r0, [r5, #20]
   19854:	ldr	r1, [r5, #24]
   19858:	cmp	r0, r1
   1985c:	bcs	198d8 <argp_error@@Base+0x124>
   19860:	add	r1, r0, #1
   19864:	str	r1, [r5, #20]
   19868:	mov	r1, #32
   1986c:	strb	r1, [r0]
   19870:	ldr	r2, [sp, #4]
   19874:	mov	r0, r5
   19878:	mov	r1, r6
   1987c:	bl	11e4c <vfprintf@plt>
   19880:	ldr	r0, [r5, #20]
   19884:	ldr	r1, [r5, #24]
   19888:	cmp	r0, r1
   1988c:	bcs	198e8 <argp_error@@Base+0x134>
   19890:	add	r1, r0, #1
   19894:	str	r1, [r5, #20]
   19898:	mov	r1, #10
   1989c:	strb	r1, [r0]
   198a0:	mov	r0, r4
   198a4:	mov	r1, r5
   198a8:	mov	r2, #260	; 0x104
   198ac:	bl	196f8 <argp_state_help@@Base>
   198b0:	mov	r0, r5
   198b4:	bl	11c24 <funlockfile@plt>
   198b8:	sub	sp, fp, #16
   198bc:	pop	{r4, r5, r6, sl, fp, lr}
   198c0:	add	sp, sp, #8
   198c4:	bx	lr
   198c8:	mov	r0, r5
   198cc:	mov	r1, #58	; 0x3a
   198d0:	bl	11e04 <__overflow@plt>
   198d4:	b	19850 <argp_error@@Base+0x9c>
   198d8:	mov	r0, r5
   198dc:	mov	r1, #32
   198e0:	bl	11e04 <__overflow@plt>
   198e4:	b	19870 <argp_error@@Base+0xbc>
   198e8:	mov	r0, r5
   198ec:	mov	r1, #10
   198f0:	bl	11e04 <__overflow@plt>
   198f4:	b	198a0 <argp_error@@Base+0xec>

000198f8 <argp_failure@@Base>:
   198f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   198fc:	add	fp, sp, #24
   19900:	sub	sp, sp, #200	; 0xc8
   19904:	mov	r4, r3
   19908:	mov	r7, r2
   1990c:	mov	r8, r1
   19910:	mov	r5, r0
   19914:	cmp	r0, #0
   19918:	beq	19930 <argp_failure@@Base+0x38>
   1991c:	ldrb	r0, [r5, #16]
   19920:	tst	r0, #2
   19924:	bne	19a94 <argp_failure@@Base+0x19c>
   19928:	add	r0, r5, #44	; 0x2c
   1992c:	b	19938 <argp_failure@@Base+0x40>
   19930:	movw	r0, #62384	; 0xf3b0
   19934:	movt	r0, #2
   19938:	ldr	r6, [r0]
   1993c:	cmp	r6, #0
   19940:	beq	19a94 <argp_failure@@Base+0x19c>
   19944:	mov	r0, r6
   19948:	bl	11eac <flockfile@plt>
   1994c:	movw	r0, #62376	; 0xf3a8
   19950:	cmp	r5, #0
   19954:	mov	r1, r6
   19958:	movt	r0, #2
   1995c:	addne	r0, r5, #40	; 0x28
   19960:	ldr	r0, [r0]
   19964:	bl	11a8c <fputs_unlocked@plt>
   19968:	cmp	r4, #0
   1996c:	beq	199c8 <argp_failure@@Base+0xd0>
   19970:	add	r0, fp, #8
   19974:	str	r0, [sp]
   19978:	ldr	r0, [r6, #20]
   1997c:	ldr	r1, [r6, #24]
   19980:	cmp	r0, r1
   19984:	bcs	19aac <argp_failure@@Base+0x1b4>
   19988:	add	r1, r0, #1
   1998c:	str	r1, [r6, #20]
   19990:	mov	r1, #58	; 0x3a
   19994:	strb	r1, [r0]
   19998:	ldr	r0, [r6, #20]
   1999c:	ldr	r1, [r6, #24]
   199a0:	cmp	r0, r1
   199a4:	bcs	19abc <argp_failure@@Base+0x1c4>
   199a8:	add	r1, r0, #1
   199ac:	str	r1, [r6, #20]
   199b0:	mov	r1, #32
   199b4:	strb	r1, [r0]
   199b8:	ldr	r2, [sp]
   199bc:	mov	r0, r6
   199c0:	mov	r1, r4
   199c4:	bl	11e4c <vfprintf@plt>
   199c8:	cmp	r7, #0
   199cc:	beq	19a4c <argp_failure@@Base+0x154>
   199d0:	ldr	r0, [r6, #20]
   199d4:	ldr	r1, [r6, #24]
   199d8:	cmp	r0, r1
   199dc:	bcs	19acc <argp_failure@@Base+0x1d4>
   199e0:	add	r1, r0, #1
   199e4:	str	r1, [r6, #20]
   199e8:	mov	r1, #58	; 0x3a
   199ec:	strb	r1, [r0]
   199f0:	ldr	r0, [r6, #20]
   199f4:	ldr	r1, [r6, #24]
   199f8:	cmp	r0, r1
   199fc:	bcs	19adc <argp_failure@@Base+0x1e4>
   19a00:	add	r1, r0, #1
   19a04:	str	r1, [r6, #20]
   19a08:	mov	r1, #32
   19a0c:	strb	r1, [r0]
   19a10:	mov	r1, sp
   19a14:	mov	r0, r7
   19a18:	mov	r2, #200	; 0xc8
   19a1c:	bl	11d8c <strerror_r@plt>
   19a20:	cmp	r0, #0
   19a24:	bne	19a44 <argp_failure@@Base+0x14c>
   19a28:	mov	r0, r7
   19a2c:	bl	11ccc <strerror@plt>
   19a30:	mov	r1, r0
   19a34:	movw	r0, #58257	; 0xe391
   19a38:	cmp	r1, #0
   19a3c:	movt	r0, #1
   19a40:	movne	r0, r1
   19a44:	mov	r1, r6
   19a48:	bl	11a8c <fputs_unlocked@plt>
   19a4c:	ldr	r0, [r6, #20]
   19a50:	ldr	r1, [r6, #24]
   19a54:	cmp	r0, r1
   19a58:	bcs	19a9c <argp_failure@@Base+0x1a4>
   19a5c:	add	r1, r0, #1
   19a60:	str	r1, [r6, #20]
   19a64:	mov	r1, #10
   19a68:	strb	r1, [r0]
   19a6c:	mov	r0, r6
   19a70:	bl	11c24 <funlockfile@plt>
   19a74:	cmp	r8, #0
   19a78:	beq	19a94 <argp_failure@@Base+0x19c>
   19a7c:	cmp	r5, #0
   19a80:	ldrbne	r0, [r5, #16]
   19a84:	tstne	r0, #32
   19a88:	bne	19a94 <argp_failure@@Base+0x19c>
   19a8c:	mov	r0, r8
   19a90:	bl	11d08 <exit@plt>
   19a94:	sub	sp, fp, #24
   19a98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19a9c:	mov	r0, r6
   19aa0:	mov	r1, #10
   19aa4:	bl	11e04 <__overflow@plt>
   19aa8:	b	19a6c <argp_failure@@Base+0x174>
   19aac:	mov	r0, r6
   19ab0:	mov	r1, #58	; 0x3a
   19ab4:	bl	11e04 <__overflow@plt>
   19ab8:	b	19998 <argp_failure@@Base+0xa0>
   19abc:	mov	r0, r6
   19ac0:	mov	r1, #32
   19ac4:	bl	11e04 <__overflow@plt>
   19ac8:	b	199b8 <argp_failure@@Base+0xc0>
   19acc:	mov	r0, r6
   19ad0:	mov	r1, #58	; 0x3a
   19ad4:	bl	11e04 <__overflow@plt>
   19ad8:	b	199f0 <argp_failure@@Base+0xf8>
   19adc:	mov	r0, r6
   19ae0:	mov	r1, #32
   19ae4:	bl	11e04 <__overflow@plt>
   19ae8:	b	19a10 <argp_failure@@Base+0x118>
   19aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19af0:	add	fp, sp, #28
   19af4:	sub	sp, sp, #44	; 0x2c
   19af8:	ldr	r4, [r0]
   19afc:	ldr	r7, [r0, #16]
   19b00:	mov	r8, r0
   19b04:	mov	r0, #16
   19b08:	mov	sl, r1
   19b0c:	bl	18134 <argp_parse@@Base+0x1a10>
   19b10:	cmp	r0, #0
   19b14:	beq	1a14c <argp_failure@@Base+0x854>
   19b18:	mov	r9, r0
   19b1c:	mov	r0, #0
   19b20:	cmp	r4, #0
   19b24:	str	r8, [sp, #32]
   19b28:	mov	r1, r9
   19b2c:	str	r9, [fp, #-32]	; 0xffffffe0
   19b30:	str	r0, [r1, #12]!
   19b34:	str	r1, [sp, #12]
   19b38:	str	r0, [r1, #-8]
   19b3c:	beq	19d94 <argp_failure@@Base+0x49c>
   19b40:	ldrb	r0, [r4, #12]
   19b44:	str	r7, [sp, #8]
   19b48:	tst	r0, #4
   19b4c:	bne	1a164 <argp_failure@@Base+0x86c>
   19b50:	add	r5, r4, #12
   19b54:	mov	r6, #0
   19b58:	mov	r9, #0
   19b5c:	b	19b64 <argp_failure@@Base+0x26c>
   19b60:	add	r5, r5, #24
   19b64:	ldr	r7, [r5, #-8]
   19b68:	cmp	r7, #0
   19b6c:	bne	19b94 <argp_failure@@Base+0x29c>
   19b70:	ldr	r0, [r5, #-12]
   19b74:	cmp	r0, #0
   19b78:	bne	19b94 <argp_failure@@Base+0x29c>
   19b7c:	ldr	r0, [r5, #4]
   19b80:	cmp	r0, #0
   19b84:	bne	19b94 <argp_failure@@Base+0x29c>
   19b88:	ldr	r0, [r5, #8]
   19b8c:	cmp	r0, #0
   19b90:	beq	19bdc <argp_failure@@Base+0x2e4>
   19b94:	ldr	r0, [r5]
   19b98:	tst	r0, #4
   19b9c:	bne	19bac <argp_failure@@Base+0x2b4>
   19ba0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19ba4:	add	r6, r6, #1
   19ba8:	str	r6, [r1, #4]
   19bac:	sub	r1, r7, #1
   19bb0:	cmp	r1, #254	; 0xfe
   19bb4:	bhi	19b60 <argp_failure@@Base+0x268>
   19bb8:	ands	r0, r0, #8
   19bbc:	bne	19b60 <argp_failure@@Base+0x268>
   19bc0:	bl	11cf0 <__ctype_b_loc@plt>
   19bc4:	ldr	r0, [r0]
   19bc8:	add	r0, r0, r7, lsl #1
   19bcc:	ldrb	r0, [r0, #1]
   19bd0:	tst	r0, #64	; 0x40
   19bd4:	addne	r9, r9, #1
   19bd8:	b	19b60 <argp_failure@@Base+0x268>
   19bdc:	rsb	r0, r6, r6, lsl #3
   19be0:	lsl	r0, r0, #2
   19be4:	bl	18134 <argp_parse@@Base+0x1a10>
   19be8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19bec:	mov	r5, r0
   19bf0:	str	r0, [r1]
   19bf4:	add	r0, r9, #1
   19bf8:	mov	r8, r1
   19bfc:	bl	18134 <argp_parse@@Base+0x1a10>
   19c00:	cmp	r5, #0
   19c04:	str	r0, [r8, #8]
   19c08:	movne	r7, r0
   19c0c:	cmpne	r0, #0
   19c10:	bne	19c34 <argp_failure@@Base+0x33c>
   19c14:	movw	r0, #58657	; 0xe521
   19c18:	movw	r1, #58565	; 0xe4c5
   19c1c:	movw	r3, #58577	; 0xe4d1
   19c20:	movw	r2, #474	; 0x1da
   19c24:	movt	r0, #1
   19c28:	movt	r1, #1
   19c2c:	movt	r3, #1
   19c30:	bl	11f78 <__assert_fail@plt>
   19c34:	movw	r0, #37450	; 0x924a
   19c38:	movt	r0, #2340	; 0x924
   19c3c:	cmp	r6, r0
   19c40:	bcs	1a17c <argp_failure@@Base+0x884>
   19c44:	mov	r9, #0
   19c48:	mov	r0, #0
   19c4c:	b	19c5c <argp_failure@@Base+0x364>
   19c50:	mov	r4, r0
   19c54:	add	r5, r5, #28
   19c58:	mov	r0, r8
   19c5c:	ldr	r1, [r4, #4]
   19c60:	cmp	r1, #0
   19c64:	bne	19c8c <argp_failure@@Base+0x394>
   19c68:	ldr	r2, [r4]
   19c6c:	cmp	r2, #0
   19c70:	bne	19c8c <argp_failure@@Base+0x394>
   19c74:	ldr	r2, [r4, #16]
   19c78:	cmp	r2, #0
   19c7c:	bne	19c8c <argp_failure@@Base+0x394>
   19c80:	ldr	r2, [r4, #20]
   19c84:	cmp	r2, #0
   19c88:	beq	19d80 <argp_failure@@Base+0x488>
   19c8c:	stm	r5, {r4, r9}
   19c90:	str	r7, [r5, #8]
   19c94:	ldr	r8, [r4, #20]
   19c98:	cmp	r8, #0
   19c9c:	bne	19cb8 <argp_failure@@Base+0x3c0>
   19ca0:	ldr	r2, [r4]
   19ca4:	cmp	r2, #0
   19ca8:	bne	19cb4 <argp_failure@@Base+0x3bc>
   19cac:	cmp	r1, #0
   19cb0:	addeq	r0, r0, #1
   19cb4:	mov	r8, r0
   19cb8:	ldr	r0, [sp, #32]
   19cbc:	mov	r1, #0
   19cc0:	str	r8, [r5, #12]
   19cc4:	str	sl, [r5, #16]
   19cc8:	str	r0, [r5, #20]
   19ccc:	add	r0, r1, #1
   19cd0:	str	r0, [r5, #4]
   19cd4:	ldrb	r0, [r4, #12]
   19cd8:	tst	r0, #8
   19cdc:	bne	19d34 <argp_failure@@Base+0x43c>
   19ce0:	ldr	r6, [r4, #4]
   19ce4:	sub	r0, r6, #1
   19ce8:	cmp	r0, #254	; 0xfe
   19cec:	bhi	19d34 <argp_failure@@Base+0x43c>
   19cf0:	bl	11cf0 <__ctype_b_loc@plt>
   19cf4:	ldr	r0, [r0]
   19cf8:	add	r0, r0, r6, lsl #1
   19cfc:	ldrb	r0, [r0, #1]
   19d00:	tst	r0, #64	; 0x40
   19d04:	beq	19d34 <argp_failure@@Base+0x43c>
   19d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d0c:	ldr	r0, [r0, #8]
   19d10:	cmp	r0, r7
   19d14:	bcs	19d30 <argp_failure@@Base+0x438>
   19d18:	ldrb	r1, [r0], #1
   19d1c:	uxtb	r2, r6
   19d20:	cmp	r1, r2
   19d24:	beq	19d34 <argp_failure@@Base+0x43c>
   19d28:	cmp	r7, r0
   19d2c:	bne	19d18 <argp_failure@@Base+0x420>
   19d30:	strb	r6, [r7], #1
   19d34:	ldr	r1, [r4, #28]
   19d38:	add	r0, r4, #24
   19d3c:	cmp	r1, #0
   19d40:	bne	19d68 <argp_failure@@Base+0x470>
   19d44:	ldr	r1, [r0]
   19d48:	cmp	r1, #0
   19d4c:	bne	19d68 <argp_failure@@Base+0x470>
   19d50:	ldr	r1, [r4, #40]	; 0x28
   19d54:	cmp	r1, #0
   19d58:	bne	19d68 <argp_failure@@Base+0x470>
   19d5c:	ldr	r1, [r4, #44]	; 0x2c
   19d60:	cmp	r1, #0
   19d64:	beq	19c50 <argp_failure@@Base+0x358>
   19d68:	ldrb	r1, [r4, #36]	; 0x24
   19d6c:	tst	r1, #4
   19d70:	beq	19c50 <argp_failure@@Base+0x358>
   19d74:	ldr	r1, [r5, #4]
   19d78:	mov	r4, r0
   19d7c:	b	19ccc <argp_failure@@Base+0x3d4>
   19d80:	mov	r0, #0
   19d84:	ldr	r8, [sp, #32]
   19d88:	ldr	r9, [fp, #-32]	; 0xffffffe0
   19d8c:	strb	r0, [r7]
   19d90:	ldr	r7, [sp, #8]
   19d94:	cmp	r7, #0
   19d98:	beq	1a120 <argp_failure@@Base+0x828>
   19d9c:	ldr	r0, [r7]
   19da0:	cmp	r0, #0
   19da4:	beq	1a120 <argp_failure@@Base+0x828>
   19da8:	str	sl, [sp]
   19dac:	b	19de4 <argp_failure@@Base+0x4ec>
   19db0:	ldr	r5, [sp, #20]
   19db4:	mov	r9, r6
   19db8:	ldr	r1, [r5]
   19dbc:	ldr	r2, [r5, #8]
   19dc0:	str	r1, [r6]
   19dc4:	stmib	r6, {r0, r2}
   19dc8:	mov	r0, #0
   19dcc:	str	r0, [r5, #4]
   19dd0:	mov	r0, r5
   19dd4:	bl	17a00 <argp_parse@@Base+0x12dc>
   19dd8:	ldr	r0, [r7, #16]!
   19ddc:	cmp	r0, #0
   19de0:	beq	1a120 <argp_failure@@Base+0x828>
   19de4:	ldr	r4, [r7, #12]
   19de8:	cmp	r4, #0
   19dec:	beq	19df8 <argp_failure@@Base+0x500>
   19df0:	ldr	r5, [r7, #8]
   19df4:	b	19e08 <argp_failure@@Base+0x510>
   19df8:	ldr	r5, [r7, #8]
   19dfc:	mov	r1, sl
   19e00:	cmp	r5, #0
   19e04:	beq	19e60 <argp_failure@@Base+0x568>
   19e08:	ldr	r6, [r8, #16]
   19e0c:	mov	r0, #28
   19e10:	bl	18134 <argp_parse@@Base+0x1a10>
   19e14:	mov	r1, r0
   19e18:	cmp	r0, #0
   19e1c:	beq	19e60 <argp_failure@@Base+0x568>
   19e20:	sub	r0, r7, r6
   19e24:	cmp	sl, #0
   19e28:	str	r5, [r1]
   19e2c:	asr	r0, r0, #4
   19e30:	stmib	r1, {r0, r4, sl}
   19e34:	str	r8, [r1, #16]
   19e38:	beq	19e48 <argp_failure@@Base+0x550>
   19e3c:	ldr	r0, [sl, #20]
   19e40:	add	r0, r0, #1
   19e44:	b	19e4c <argp_failure@@Base+0x554>
   19e48:	mov	r0, #0
   19e4c:	ldr	r3, [sp, #12]
   19e50:	str	r0, [r1, #20]
   19e54:	ldr	r2, [r3]
   19e58:	str	r1, [r3]
   19e5c:	str	r2, [r1, #24]
   19e60:	ldr	r0, [r7]
   19e64:	bl	19aec <argp_failure@@Base+0x1f4>
   19e68:	ldr	r1, [sp, #12]
   19e6c:	mov	r5, r0
   19e70:	ldr	r2, [r1]
   19e74:	mov	r0, r1
   19e78:	add	r1, r2, #24
   19e7c:	cmp	r2, #0
   19e80:	bne	19e70 <argp_failure@@Base+0x578>
   19e84:	ldr	r1, [r5, #12]
   19e88:	str	r1, [r0]
   19e8c:	mov	r0, #0
   19e90:	str	r0, [r5, #12]
   19e94:	ldr	r0, [r5, #4]
   19e98:	cmp	r0, #0
   19e9c:	beq	19dd0 <argp_failure@@Base+0x4d8>
   19ea0:	mov	r6, r9
   19ea4:	ldr	r9, [r9, #4]
   19ea8:	str	r5, [sp, #20]
   19eac:	cmp	r9, #0
   19eb0:	beq	19db0 <argp_failure@@Base+0x4b8>
   19eb4:	add	r4, r9, r0
   19eb8:	rsb	r0, r4, r4, lsl #3
   19ebc:	lsl	r0, r0, #2
   19ec0:	bl	18134 <argp_parse@@Base+0x1a10>
   19ec4:	ldr	r5, [r6, #8]
   19ec8:	str	r0, [sp, #16]
   19ecc:	mov	r8, r6
   19ed0:	mov	r0, r5
   19ed4:	bl	11d2c <strlen@plt>
   19ed8:	mov	r6, r0
   19edc:	ldr	r0, [sp, #20]
   19ee0:	ldr	r0, [r0, #8]
   19ee4:	bl	11d2c <strlen@plt>
   19ee8:	add	r0, r6, r0
   19eec:	str	r6, [sp, #24]
   19ef0:	add	r0, r0, #1
   19ef4:	bl	18134 <argp_parse@@Base+0x1a10>
   19ef8:	ldr	r1, [sp, #16]
   19efc:	cmp	r1, #0
   19f00:	cmpne	r0, #0
   19f04:	beq	1a12c <argp_failure@@Base+0x834>
   19f08:	str	r0, [sp, #28]
   19f0c:	movw	r0, #37450	; 0x924a
   19f10:	str	r4, [sp, #4]
   19f14:	movt	r0, #2340	; 0x924
   19f18:	cmp	r4, r0
   19f1c:	bcs	1a194 <argp_failure@@Base+0x89c>
   19f20:	ldr	r1, [r8]
   19f24:	ldr	r8, [sp, #16]
   19f28:	rsb	r4, r9, r9, lsl #3
   19f2c:	lsl	r2, r4, #2
   19f30:	mov	r0, r8
   19f34:	bl	11b64 <memcpy@plt>
   19f38:	ldr	r2, [sp, #20]
   19f3c:	add	r0, r8, r4, lsl #2
   19f40:	ldm	r2, {r1, r2}
   19f44:	rsb	r2, r2, r2, lsl #3
   19f48:	lsl	r2, r2, #2
   19f4c:	bl	11b64 <memcpy@plt>
   19f50:	ldr	r6, [sp, #28]
   19f54:	ldr	r2, [sp, #24]
   19f58:	mov	r1, r5
   19f5c:	mov	r0, r6
   19f60:	bl	11b64 <memcpy@plt>
   19f64:	tst	r9, #1
   19f68:	mov	r0, r9
   19f6c:	mov	r4, r8
   19f70:	beq	19f90 <argp_failure@@Base+0x698>
   19f74:	ldr	r1, [sp, #16]
   19f78:	ldr	r0, [r1, #8]
   19f7c:	add	r4, r1, #28
   19f80:	sub	r0, r0, r5
   19f84:	add	r0, r6, r0
   19f88:	str	r0, [r1, #8]
   19f8c:	sub	r0, r9, #1
   19f90:	cmp	r9, #1
   19f94:	beq	19fc4 <argp_failure@@Base+0x6cc>
   19f98:	ldr	r1, [r4, #8]
   19f9c:	ldr	r2, [r4, #36]	; 0x24
   19fa0:	subs	r0, r0, #2
   19fa4:	sub	r1, r1, r5
   19fa8:	add	r1, r6, r1
   19fac:	str	r1, [r4, #8]
   19fb0:	sub	r1, r2, r5
   19fb4:	add	r1, r6, r1
   19fb8:	str	r1, [r4, #36]	; 0x24
   19fbc:	add	r4, r4, #56	; 0x38
   19fc0:	bne	19f98 <argp_failure@@Base+0x6a0>
   19fc4:	ldr	r0, [sp, #24]
   19fc8:	str	r7, [sp, #8]
   19fcc:	add	r0, r6, r0
   19fd0:	str	r0, [sp, #36]	; 0x24
   19fd4:	ldr	r0, [sp, #20]
   19fd8:	ldr	r5, [r0, #4]
   19fdc:	cmp	r5, #0
   19fe0:	beq	1a098 <argp_failure@@Base+0x7a0>
   19fe4:	ldr	r6, [r0, #8]
   19fe8:	b	19ff8 <argp_failure@@Base+0x700>
   19fec:	subs	r5, r5, #1
   19ff0:	add	r4, r4, #28
   19ff4:	beq	1a098 <argp_failure@@Base+0x7a0>
   19ff8:	ldr	r0, [sp, #36]	; 0x24
   19ffc:	str	r0, [r4, #8]
   1a000:	ldr	sl, [r4, #4]
   1a004:	cmp	sl, #0
   1a008:	beq	19fec <argp_failure@@Base+0x6f4>
   1a00c:	ldr	r9, [r4]
   1a010:	b	1a030 <argp_failure@@Base+0x738>
   1a014:	ldr	r0, [sp, #36]	; 0x24
   1a018:	strb	r8, [r0], #1
   1a01c:	str	r0, [sp, #36]	; 0x24
   1a020:	add	r6, r6, #1
   1a024:	subs	sl, sl, #1
   1a028:	add	r9, r9, #24
   1a02c:	beq	19fec <argp_failure@@Base+0x6f4>
   1a030:	ldrb	r0, [r9, #12]
   1a034:	tst	r0, #8
   1a038:	bne	1a024 <argp_failure@@Base+0x72c>
   1a03c:	ldr	r7, [r9, #4]
   1a040:	sub	r0, r7, #1
   1a044:	cmp	r0, #254	; 0xfe
   1a048:	bhi	1a024 <argp_failure@@Base+0x72c>
   1a04c:	ldrb	r8, [r6]
   1a050:	bl	11cf0 <__ctype_b_loc@plt>
   1a054:	cmp	r7, r8
   1a058:	bne	1a024 <argp_failure@@Base+0x72c>
   1a05c:	ldr	r0, [r0]
   1a060:	add	r0, r0, r7, lsl #1
   1a064:	ldrh	r0, [r0]
   1a068:	ands	r0, r0, #16384	; 0x4000
   1a06c:	beq	1a024 <argp_failure@@Base+0x72c>
   1a070:	ldr	r0, [sp, #24]
   1a074:	ldr	r1, [sp, #28]
   1a078:	cmp	r0, #1
   1a07c:	blt	1a014 <argp_failure@@Base+0x71c>
   1a080:	ldrb	r2, [r1], #1
   1a084:	cmp	r2, r8
   1a088:	beq	1a020 <argp_failure@@Base+0x728>
   1a08c:	subs	r0, r0, #1
   1a090:	bne	1a080 <argp_failure@@Base+0x788>
   1a094:	b	1a014 <argp_failure@@Base+0x71c>
   1a098:	ldr	r1, [sp, #36]	; 0x24
   1a09c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1a0a0:	mov	r0, #0
   1a0a4:	strb	r0, [r1]
   1a0a8:	ldr	r0, [r9]
   1a0ac:	bl	17a00 <argp_parse@@Base+0x12dc>
   1a0b0:	ldr	r0, [r9, #8]
   1a0b4:	bl	17a00 <argp_parse@@Base+0x12dc>
   1a0b8:	ldr	r0, [sp, #16]
   1a0bc:	ldr	r5, [sp, #20]
   1a0c0:	str	r0, [r9]
   1a0c4:	ldr	r0, [sp, #4]
   1a0c8:	str	r0, [r9, #4]
   1a0cc:	ldr	r0, [sp, #28]
   1a0d0:	str	r0, [r9, #8]
   1a0d4:	ldr	r0, [r5, #12]
   1a0d8:	cmp	r0, #0
   1a0dc:	beq	1a0f4 <argp_failure@@Base+0x7fc>
   1a0e0:	ldr	r4, [r0, #24]
   1a0e4:	bl	17a00 <argp_parse@@Base+0x12dc>
   1a0e8:	cmp	r4, #0
   1a0ec:	mov	r0, r4
   1a0f0:	bne	1a0e0 <argp_failure@@Base+0x7e8>
   1a0f4:	ldr	r0, [r5, #4]
   1a0f8:	ldr	sl, [sp]
   1a0fc:	ldr	r8, [sp, #32]
   1a100:	ldr	r7, [sp, #8]
   1a104:	cmp	r0, #0
   1a108:	beq	19dd0 <argp_failure@@Base+0x4d8>
   1a10c:	ldr	r0, [r5]
   1a110:	bl	17a00 <argp_parse@@Base+0x12dc>
   1a114:	ldr	r0, [r5, #8]
   1a118:	bl	17a00 <argp_parse@@Base+0x12dc>
   1a11c:	b	19dd0 <argp_failure@@Base+0x4d8>
   1a120:	mov	r0, r9
   1a124:	sub	sp, fp, #28
   1a128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a12c:	movw	r0, #58749	; 0xe57d
   1a130:	movw	r1, #58565	; 0xe4c5
   1a134:	movw	r3, #58774	; 0xe596
   1a138:	movw	r2, #970	; 0x3ca
   1a13c:	movt	r0, #1
   1a140:	movt	r1, #1
   1a144:	movt	r3, #1
   1a148:	bl	11f78 <__assert_fail@plt>
   1a14c:	movw	r0, #58561	; 0xe4c1
   1a150:	movw	r1, #58565	; 0xe4c5
   1a154:	movw	r3, #58577	; 0xe4d1
   1a158:	movw	r2, #450	; 0x1c2
   1a15c:	movt	r0, #1
   1a160:	b	19c28 <argp_failure@@Base+0x330>
   1a164:	movw	r0, #58641	; 0xe511
   1a168:	movw	r1, #58565	; 0xe4c5
   1a16c:	movw	r3, #58577	; 0xe4d1
   1a170:	mov	r2, #460	; 0x1cc
   1a174:	movt	r0, #1
   1a178:	b	19c28 <argp_failure@@Base+0x330>
   1a17c:	movw	r0, #58692	; 0xe544
   1a180:	movw	r1, #58565	; 0xe4c5
   1a184:	movw	r3, #58577	; 0xe4d1
   1a188:	mov	r2, #476	; 0x1dc
   1a18c:	movt	r0, #1
   1a190:	b	19c28 <argp_failure@@Base+0x330>
   1a194:	movw	r0, #58697	; 0xe549
   1a198:	movw	r1, #58565	; 0xe4c5
   1a19c:	movw	r3, #58774	; 0xe596
   1a1a0:	mov	r2, #972	; 0x3cc
   1a1a4:	movt	r0, #1
   1a1a8:	b	1a140 <argp_failure@@Base+0x848>
   1a1ac:	push	{r4, r5, fp, lr}
   1a1b0:	add	fp, sp, #8
   1a1b4:	mov	r1, r0
   1a1b8:	ldr	r0, [r0, #8]
   1a1bc:	ldr	r5, [r1, #16]
   1a1c0:	cmp	r0, #0
   1a1c4:	beq	1a1e8 <argp_failure@@Base+0x8f0>
   1a1c8:	mov	r1, #10
   1a1cc:	bl	11d44 <strchr@plt>
   1a1d0:	cmp	r0, #0
   1a1d4:	mov	r4, r0
   1a1d8:	movwne	r4, #1
   1a1dc:	cmp	r5, #0
   1a1e0:	bne	1a1f4 <argp_failure@@Base+0x8fc>
   1a1e4:	b	1a218 <argp_failure@@Base+0x920>
   1a1e8:	mov	r4, #0
   1a1ec:	cmp	r5, #0
   1a1f0:	beq	1a218 <argp_failure@@Base+0x920>
   1a1f4:	ldr	r0, [r5]
   1a1f8:	cmp	r0, #0
   1a1fc:	beq	1a218 <argp_failure@@Base+0x920>
   1a200:	add	r5, r5, #16
   1a204:	bl	1a1ac <argp_failure@@Base+0x8b4>
   1a208:	add	r4, r0, r4
   1a20c:	ldr	r0, [r5], #16
   1a210:	cmp	r0, #0
   1a214:	bne	1a204 <argp_failure@@Base+0x90c>
   1a218:	mov	r0, r4
   1a21c:	pop	{r4, r5, fp, pc}
   1a220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a224:	add	fp, sp, #28
   1a228:	sub	sp, sp, #28
   1a22c:	ldr	r4, [r0, #4]
   1a230:	str	r1, [fp, #-40]	; 0xffffffd8
   1a234:	cmp	r4, #0
   1a238:	beq	1a5e8 <argp_failure@@Base+0xcf0>
   1a23c:	mov	r5, r0
   1a240:	ldr	r0, [r0, #8]
   1a244:	bl	11d2c <strlen@plt>
   1a248:	add	r0, r0, #8
   1a24c:	bic	r0, r0, #7
   1a250:	sub	r0, sp, r0
   1a254:	mov	sp, r0
   1a258:	ldr	r7, [r5]
   1a25c:	str	r0, [fp, #-52]	; 0xffffffcc
   1a260:	str	r0, [fp, #-48]	; 0xffffffd0
   1a264:	str	r5, [fp, #-44]	; 0xffffffd4
   1a268:	b	1a280 <argp_failure@@Base+0x988>
   1a26c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1a270:	ldr	r6, [fp, #-44]	; 0xffffffd4
   1a274:	add	r7, r7, #28
   1a278:	subs	r4, r4, #1
   1a27c:	beq	1a338 <argp_failure@@Base+0xa40>
   1a280:	ldr	r6, [r7, #4]
   1a284:	str	r4, [fp, #-36]	; 0xffffffdc
   1a288:	cmp	r6, #0
   1a28c:	beq	1a26c <argp_failure@@Base+0x974>
   1a290:	ldr	r4, [r7]
   1a294:	ldr	r5, [r7, #8]
   1a298:	mov	sl, r4
   1a29c:	b	1a2b0 <argp_failure@@Base+0x9b8>
   1a2a0:	add	r5, r5, #1
   1a2a4:	subs	r6, r6, #1
   1a2a8:	add	sl, sl, #24
   1a2ac:	beq	1a26c <argp_failure@@Base+0x974>
   1a2b0:	ldr	r8, [sl, #12]
   1a2b4:	tst	r8, #8
   1a2b8:	bne	1a2a4 <argp_failure@@Base+0x9ac>
   1a2bc:	ldr	r9, [sl, #4]
   1a2c0:	sub	r0, r9, #1
   1a2c4:	cmp	r0, #254	; 0xfe
   1a2c8:	bhi	1a2a4 <argp_failure@@Base+0x9ac>
   1a2cc:	bl	11cf0 <__ctype_b_loc@plt>
   1a2d0:	ldr	r0, [r0]
   1a2d4:	add	r0, r0, r9, lsl #1
   1a2d8:	ldrb	r0, [r0, #1]
   1a2dc:	tst	r0, #64	; 0x40
   1a2e0:	beq	1a2a4 <argp_failure@@Base+0x9ac>
   1a2e4:	ldrb	r0, [r5]
   1a2e8:	cmp	r9, r0
   1a2ec:	bne	1a2a4 <argp_failure@@Base+0x9ac>
   1a2f0:	tst	r8, #4
   1a2f4:	moveq	r4, sl
   1a2f8:	tst	r8, #2
   1a2fc:	bne	1a2a0 <argp_failure@@Base+0x9a8>
   1a300:	ldr	r0, [sl, #8]
   1a304:	cmp	r0, #0
   1a308:	bne	1a2a0 <argp_failure@@Base+0x9a8>
   1a30c:	ldr	r0, [r4, #8]
   1a310:	cmp	r0, #0
   1a314:	bne	1a2a0 <argp_failure@@Base+0x9a8>
   1a318:	ldr	r0, [r4, #12]
   1a31c:	orr	r0, r0, r8
   1a320:	tst	r0, #16
   1a324:	bne	1a2a0 <argp_failure@@Base+0x9a8>
   1a328:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a32c:	strb	r9, [r0], #1
   1a330:	str	r0, [fp, #-48]	; 0xffffffd0
   1a334:	b	1a2a0 <argp_failure@@Base+0x9a8>
   1a338:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a33c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a340:	cmp	r1, r2
   1a344:	bls	1a360 <argp_failure@@Base+0xa68>
   1a348:	mov	r0, #0
   1a34c:	strb	r0, [r1]
   1a350:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a354:	movw	r1, #58818	; 0xe5c2
   1a358:	movt	r1, #1
   1a35c:	bl	1d240 <argp_failure@@Base+0x3948>
   1a360:	ldr	r5, [r6, #4]
   1a364:	cmp	r5, #0
   1a368:	beq	1a5e8 <argp_failure@@Base+0xcf0>
   1a36c:	ldr	r8, [r6]
   1a370:	b	1a380 <argp_failure@@Base+0xa88>
   1a374:	subs	r5, r5, #1
   1a378:	add	r8, r8, #28
   1a37c:	beq	1a524 <argp_failure@@Base+0xc2c>
   1a380:	ldr	r9, [r8, #4]
   1a384:	cmp	r9, #0
   1a388:	beq	1a374 <argp_failure@@Base+0xa7c>
   1a38c:	ldr	sl, [r8]
   1a390:	ldr	r4, [r8, #8]
   1a394:	str	sl, [fp, #-36]	; 0xffffffdc
   1a398:	b	1a3c0 <argp_failure@@Base+0xac8>
   1a39c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3a0:	movw	r1, #58825	; 0xe5c9
   1a3a4:	mov	r2, r7
   1a3a8:	movt	r1, #1
   1a3ac:	bl	1d240 <argp_failure@@Base+0x3948>
   1a3b0:	add	r4, r4, #1
   1a3b4:	subs	r9, r9, #1
   1a3b8:	add	sl, sl, #24
   1a3bc:	beq	1a374 <argp_failure@@Base+0xa7c>
   1a3c0:	ldr	r6, [sl, #12]
   1a3c4:	tst	r6, #8
   1a3c8:	bne	1a3b4 <argp_failure@@Base+0xabc>
   1a3cc:	ldr	r7, [sl, #4]
   1a3d0:	sub	r0, r7, #1
   1a3d4:	cmp	r0, #254	; 0xfe
   1a3d8:	bhi	1a3b4 <argp_failure@@Base+0xabc>
   1a3dc:	bl	11cf0 <__ctype_b_loc@plt>
   1a3e0:	ldr	r0, [r0]
   1a3e4:	add	r0, r0, r7, lsl #1
   1a3e8:	ldrb	r0, [r0, #1]
   1a3ec:	tst	r0, #64	; 0x40
   1a3f0:	beq	1a3b4 <argp_failure@@Base+0xabc>
   1a3f4:	ldrb	r0, [r4]
   1a3f8:	cmp	r7, r0
   1a3fc:	bne	1a3b4 <argp_failure@@Base+0xabc>
   1a400:	tst	r6, #4
   1a404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a408:	moveq	r0, sl
   1a40c:	tst	r6, #2
   1a410:	str	r0, [fp, #-36]	; 0xffffffdc
   1a414:	bne	1a3b0 <argp_failure@@Base+0xab8>
   1a418:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a41c:	ldr	r3, [sl, #8]
   1a420:	ldr	r0, [r0, #12]
   1a424:	cmp	r3, #0
   1a428:	orr	r0, r0, r6
   1a42c:	bne	1a438 <argp_failure@@Base+0xb40>
   1a430:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a434:	ldr	r3, [r1, #8]
   1a438:	tst	r0, #16
   1a43c:	bne	1a3b0 <argp_failure@@Base+0xab8>
   1a440:	cmp	r3, #0
   1a444:	beq	1a3b0 <argp_failure@@Base+0xab8>
   1a448:	tst	r0, #1
   1a44c:	bne	1a39c <argp_failure@@Base+0xaa4>
   1a450:	mov	r0, r3
   1a454:	str	r3, [fp, #-48]	; 0xffffffd0
   1a458:	bl	11d2c <strlen@plt>
   1a45c:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1a460:	add	r6, r0, #6
   1a464:	ldr	r2, [r7, #24]
   1a468:	ldr	r0, [r7, #28]
   1a46c:	ldr	r1, [r7, #16]
   1a470:	sub	r2, r0, r2
   1a474:	cmp	r2, r1
   1a478:	bls	1a488 <argp_failure@@Base+0xb90>
   1a47c:	mov	r0, r7
   1a480:	bl	1cc24 <argp_failure@@Base+0x332c>
   1a484:	ldr	r0, [r7, #28]
   1a488:	ldr	r3, [r7, #20]
   1a48c:	ldr	r2, [r7, #8]
   1a490:	ldr	r1, [r7, #32]
   1a494:	cmp	r3, #0
   1a498:	addgt	r6, r6, r3
   1a49c:	cmp	r6, r2
   1a4a0:	bcs	1a4d8 <argp_failure@@Base+0xbe0>
   1a4a4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1a4a8:	cmp	r0, r1
   1a4ac:	bcc	1a4c8 <argp_failure@@Base+0xbd0>
   1a4b0:	mov	r0, r7
   1a4b4:	mov	r1, #1
   1a4b8:	bl	1d154 <argp_failure@@Base+0x385c>
   1a4bc:	cmp	r0, #0
   1a4c0:	beq	1a50c <argp_failure@@Base+0xc14>
   1a4c4:	ldr	r0, [r7, #28]
   1a4c8:	add	r1, r0, #1
   1a4cc:	str	r1, [r7, #28]
   1a4d0:	mov	r1, #32
   1a4d4:	b	1a508 <argp_failure@@Base+0xc10>
   1a4d8:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1a4dc:	cmp	r0, r1
   1a4e0:	bcc	1a4fc <argp_failure@@Base+0xc04>
   1a4e4:	mov	r0, r7
   1a4e8:	mov	r1, #1
   1a4ec:	bl	1d154 <argp_failure@@Base+0x385c>
   1a4f0:	cmp	r0, #0
   1a4f4:	beq	1a50c <argp_failure@@Base+0xc14>
   1a4f8:	ldr	r0, [r7, #28]
   1a4fc:	add	r1, r0, #1
   1a500:	str	r1, [r7, #28]
   1a504:	mov	r1, #10
   1a508:	strb	r1, [r0]
   1a50c:	ldr	r2, [sl, #4]
   1a510:	movw	r1, #58836	; 0xe5d4
   1a514:	mov	r0, r7
   1a518:	mov	r3, r6
   1a51c:	movt	r1, #1
   1a520:	b	1a3ac <argp_failure@@Base+0xab4>
   1a524:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a528:	ldr	r4, [r0, #4]
   1a52c:	cmp	r4, #0
   1a530:	beq	1a5e8 <argp_failure@@Base+0xcf0>
   1a534:	ldr	r6, [r0]
   1a538:	movw	sl, #58869	; 0xe5f5
   1a53c:	movw	r9, #58845	; 0xe5dd
   1a540:	movt	sl, #1
   1a544:	movt	r9, #1
   1a548:	b	1a558 <argp_failure@@Base+0xc60>
   1a54c:	subs	r4, r4, #1
   1a550:	add	r6, r6, #28
   1a554:	beq	1a5e8 <argp_failure@@Base+0xcf0>
   1a558:	ldr	r7, [r6, #4]
   1a55c:	cmp	r7, #0
   1a560:	beq	1a54c <argp_failure@@Base+0xc54>
   1a564:	ldr	r8, [r6]
   1a568:	mov	r5, r8
   1a56c:	b	1a588 <argp_failure@@Base+0xc90>
   1a570:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a574:	mov	r1, sl
   1a578:	bl	1d240 <argp_failure@@Base+0x3948>
   1a57c:	subs	r7, r7, #1
   1a580:	add	r5, r5, #24
   1a584:	beq	1a54c <argp_failure@@Base+0xc54>
   1a588:	ldr	r2, [r5]
   1a58c:	cmp	r2, #0
   1a590:	beq	1a57c <argp_failure@@Base+0xc84>
   1a594:	ldr	r0, [r5, #12]
   1a598:	tst	r0, #4
   1a59c:	moveq	r8, r5
   1a5a0:	tst	r0, #2
   1a5a4:	bne	1a57c <argp_failure@@Base+0xc84>
   1a5a8:	ldr	r3, [r5, #8]
   1a5ac:	ldr	r1, [r8, #12]
   1a5b0:	cmp	r3, #0
   1a5b4:	orr	r0, r1, r0
   1a5b8:	ldreq	r3, [r8, #8]
   1a5bc:	tst	r0, #16
   1a5c0:	bne	1a57c <argp_failure@@Base+0xc84>
   1a5c4:	cmp	r3, #0
   1a5c8:	beq	1a570 <argp_failure@@Base+0xc78>
   1a5cc:	tst	r0, #1
   1a5d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a5d4:	movne	r1, r9
   1a5d8:	movweq	r1, #58858	; 0xe5ea
   1a5dc:	movteq	r1, #1
   1a5e0:	bl	1d240 <argp_failure@@Base+0x3948>
   1a5e4:	b	1a57c <argp_failure@@Base+0xc84>
   1a5e8:	sub	sp, fp, #28
   1a5ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a5f4:	add	fp, sp, #28
   1a5f8:	sub	sp, sp, #28
   1a5fc:	ldr	r5, [r0, #8]
   1a600:	mov	r7, r0
   1a604:	ldr	sl, [r0, #16]
   1a608:	ldr	r0, [r2]
   1a60c:	mov	r4, r3
   1a610:	mov	r9, r2
   1a614:	mov	r8, r1
   1a618:	cmp	r7, #0
   1a61c:	mov	r6, r5
   1a620:	str	r0, [sp, #20]
   1a624:	beq	1a660 <argp_failure@@Base+0xd68>
   1a628:	ldr	r0, [r7, #20]
   1a62c:	mov	r6, r5
   1a630:	cmp	r0, #0
   1a634:	beq	1a660 <argp_failure@@Base+0xd68>
   1a638:	mov	r0, r7
   1a63c:	mov	r1, r8
   1a640:	bl	1738c <argp_parse@@Base+0xc68>
   1a644:	ldr	r3, [r7, #20]
   1a648:	mov	r2, r0
   1a64c:	movw	r0, #6
   1a650:	mov	r1, r5
   1a654:	movt	r0, #512	; 0x200
   1a658:	blx	r3
   1a65c:	mov	r6, r0
   1a660:	cmp	r6, #0
   1a664:	beq	1a6c8 <argp_failure@@Base+0xdd0>
   1a668:	mov	r0, r6
   1a66c:	mov	r1, #10
   1a670:	bl	11b28 <strchrnul@plt>
   1a674:	mov	r7, r0
   1a678:	ldrb	r0, [r0]
   1a67c:	str	r5, [sp, #12]
   1a680:	str	r6, [sp, #16]
   1a684:	stmib	sp, {r8, sl}
   1a688:	cmp	r0, #0
   1a68c:	beq	1a6e0 <argp_failure@@Base+0xde8>
   1a690:	ldr	r0, [sp, #20]
   1a694:	ldrb	r6, [r0]
   1a698:	cmp	r6, #0
   1a69c:	beq	1a6ec <argp_failure@@Base+0xdf4>
   1a6a0:	mov	r8, #0
   1a6a4:	add	sl, r7, #1
   1a6a8:	mov	r1, #10
   1a6ac:	mov	r0, sl
   1a6b0:	bl	11b28 <strchrnul@plt>
   1a6b4:	add	r8, r8, #1
   1a6b8:	mov	r7, r0
   1a6bc:	cmp	r8, r6
   1a6c0:	bcc	1a6a4 <argp_failure@@Base+0xdac>
   1a6c4:	b	1a6f0 <argp_failure@@Base+0xdf8>
   1a6c8:	mov	r0, #0
   1a6cc:	mov	r7, #0
   1a6d0:	str	r0, [sp, #24]
   1a6d4:	cmp	sl, #0
   1a6d8:	bne	1a850 <argp_failure@@Base+0xf58>
   1a6dc:	b	1a894 <argp_failure@@Base+0xf9c>
   1a6e0:	mov	r0, #0
   1a6e4:	mov	sl, r6
   1a6e8:	b	1a700 <argp_failure@@Base+0xe08>
   1a6ec:	ldr	sl, [sp, #16]
   1a6f0:	ldr	r0, [r9]
   1a6f4:	add	r0, r0, #1
   1a6f8:	str	r0, [r9]
   1a6fc:	mov	r0, #1
   1a700:	str	r0, [sp, #24]
   1a704:	ldr	r8, [fp, #8]
   1a708:	sub	r2, r7, sl
   1a70c:	add	r6, r2, #1
   1a710:	ldr	r3, [r8, #24]
   1a714:	ldr	r0, [r8, #28]
   1a718:	ldr	r1, [r8, #16]
   1a71c:	sub	r3, r0, r3
   1a720:	cmp	r3, r1
   1a724:	bls	1a73c <argp_failure@@Base+0xe44>
   1a728:	mov	r0, r8
   1a72c:	mov	r5, r2
   1a730:	bl	1cc24 <argp_failure@@Base+0x332c>
   1a734:	ldr	r0, [r8, #28]
   1a738:	mov	r2, r5
   1a73c:	ldr	r3, [r8, #20]
   1a740:	ldr	r5, [r8, #8]
   1a744:	ldr	r1, [r8, #32]
   1a748:	cmp	r3, #0
   1a74c:	addgt	r6, r6, r3
   1a750:	cmp	r6, r5
   1a754:	bcs	1a79c <argp_failure@@Base+0xea4>
   1a758:	ldr	r8, [sp, #4]
   1a75c:	cmp	r0, r1
   1a760:	bcc	1a788 <argp_failure@@Base+0xe90>
   1a764:	ldr	r6, [fp, #8]
   1a768:	mov	r1, #1
   1a76c:	mov	r5, r2
   1a770:	mov	r0, r6
   1a774:	bl	1d154 <argp_failure@@Base+0x385c>
   1a778:	mov	r2, r5
   1a77c:	cmp	r0, #0
   1a780:	beq	1a7e0 <argp_failure@@Base+0xee8>
   1a784:	ldr	r0, [r6, #28]
   1a788:	ldr	r6, [fp, #8]
   1a78c:	add	r1, r0, #1
   1a790:	str	r1, [r6, #28]
   1a794:	mov	r1, #32
   1a798:	b	1a7dc <argp_failure@@Base+0xee4>
   1a79c:	ldr	r8, [sp, #4]
   1a7a0:	cmp	r0, r1
   1a7a4:	bcc	1a7cc <argp_failure@@Base+0xed4>
   1a7a8:	ldr	r6, [fp, #8]
   1a7ac:	mov	r1, #1
   1a7b0:	mov	r5, r2
   1a7b4:	mov	r0, r6
   1a7b8:	bl	1d154 <argp_failure@@Base+0x385c>
   1a7bc:	mov	r2, r5
   1a7c0:	cmp	r0, #0
   1a7c4:	beq	1a7e0 <argp_failure@@Base+0xee8>
   1a7c8:	ldr	r0, [r6, #28]
   1a7cc:	ldr	r6, [fp, #8]
   1a7d0:	add	r1, r0, #1
   1a7d4:	str	r1, [r6, #28]
   1a7d8:	mov	r1, #10
   1a7dc:	strb	r1, [r0]
   1a7e0:	ldr	r0, [r6, #28]
   1a7e4:	ldr	r1, [r6, #32]
   1a7e8:	add	r3, r0, r2
   1a7ec:	cmp	r3, r1
   1a7f0:	bls	1a818 <argp_failure@@Base+0xf20>
   1a7f4:	mov	r0, r6
   1a7f8:	mov	r1, r2
   1a7fc:	mov	r5, r2
   1a800:	bl	1d154 <argp_failure@@Base+0x385c>
   1a804:	cmp	r0, #0
   1a808:	beq	1a830 <argp_failure@@Base+0xf38>
   1a80c:	ldr	r6, [fp, #8]
   1a810:	mov	r2, r5
   1a814:	ldr	r0, [r6, #28]
   1a818:	mov	r1, sl
   1a81c:	mov	r5, r2
   1a820:	bl	11b64 <memcpy@plt>
   1a824:	ldr	r0, [r6, #28]
   1a828:	add	r0, r0, r5
   1a82c:	str	r0, [r6, #28]
   1a830:	ldr	r0, [sp, #16]
   1a834:	ldr	r1, [sp, #12]
   1a838:	cmp	r0, r1
   1a83c:	beq	1a844 <argp_failure@@Base+0xf4c>
   1a840:	bl	17a00 <argp_parse@@Base+0x12dc>
   1a844:	ldr	sl, [sp, #8]
   1a848:	cmp	sl, #0
   1a84c:	beq	1a894 <argp_failure@@Base+0xf9c>
   1a850:	ldr	r0, [sl]
   1a854:	cmp	r0, #0
   1a858:	beq	1a894 <argp_failure@@Base+0xf9c>
   1a85c:	add	r6, sl, #16
   1a860:	ldr	r5, [fp, #8]
   1a864:	ldr	sl, [sp, #24]
   1a868:	mov	r1, r8
   1a86c:	mov	r2, r9
   1a870:	mov	r3, r4
   1a874:	str	r5, [sp]
   1a878:	bl	1a5f0 <argp_failure@@Base+0xcf8>
   1a87c:	clz	r0, r0
   1a880:	lsr	r4, r0, #5
   1a884:	ldr	r0, [r6], #16
   1a888:	cmp	r0, #0
   1a88c:	bne	1a868 <argp_failure@@Base+0xf70>
   1a890:	b	1a898 <argp_failure@@Base+0xfa0>
   1a894:	ldr	sl, [sp, #24]
   1a898:	cmp	sl, #0
   1a89c:	cmpne	r4, #0
   1a8a0:	bne	1a8b4 <argp_failure@@Base+0xfbc>
   1a8a4:	clz	r0, r4
   1a8a8:	lsr	r0, r0, #5
   1a8ac:	sub	sp, fp, #28
   1a8b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8b4:	ldr	r2, [sp, #20]
   1a8b8:	ldrb	r1, [r7]
   1a8bc:	ldrb	r0, [r2]
   1a8c0:	cmp	r1, #0
   1a8c4:	beq	1a8d8 <argp_failure@@Base+0xfe0>
   1a8c8:	add	r0, r0, #1
   1a8cc:	mov	r4, #0
   1a8d0:	strb	r0, [r2]
   1a8d4:	b	1a8a4 <argp_failure@@Base+0xfac>
   1a8d8:	cmp	r0, #0
   1a8dc:	movne	r0, #0
   1a8e0:	strbne	r0, [r2]
   1a8e4:	b	1a8a4 <argp_failure@@Base+0xfac>
   1a8e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8ec:	add	fp, sp, #28
   1a8f0:	sub	sp, sp, #28
   1a8f4:	ldr	r5, [r0, #12]
   1a8f8:	mov	r4, r0
   1a8fc:	ldr	r0, [r0, #16]
   1a900:	mov	sl, #0
   1a904:	str	r3, [sp, #24]
   1a908:	str	r1, [sp, #20]
   1a90c:	str	r2, [sp, #16]
   1a910:	cmp	r5, #0
   1a914:	str	r0, [sp, #8]
   1a918:	beq	1a958 <argp_failure@@Base+0x1060>
   1a91c:	mov	r0, r5
   1a920:	mov	r1, #11
   1a924:	mov	r6, r2
   1a928:	bl	11d44 <strchr@plt>
   1a92c:	cmp	r0, #0
   1a930:	mov	r8, r0
   1a934:	mov	r9, r0
   1a938:	subne	r8, r8, r5
   1a93c:	cmp	r6, #0
   1a940:	movne	r8, #0
   1a944:	cmp	r0, #0
   1a948:	addne	r9, r9, #1
   1a94c:	cmp	r6, #0
   1a950:	moveq	r9, r5
   1a954:	b	1a960 <argp_failure@@Base+0x1068>
   1a958:	mov	r8, #0
   1a95c:	mov	r9, #0
   1a960:	ldr	r0, [r4, #20]
   1a964:	movw	r5, #1
   1a968:	str	r4, [sp, #12]
   1a96c:	movt	r5, #512	; 0x200
   1a970:	cmp	r0, #0
   1a974:	beq	1aa70 <argp_failure@@Base+0x1178>
   1a978:	cmp	r8, #0
   1a97c:	beq	1a990 <argp_failure@@Base+0x1098>
   1a980:	mov	r0, r9
   1a984:	mov	r1, r8
   1a988:	bl	11b4c <strndup@plt>
   1a98c:	mov	r9, r0
   1a990:	ldr	r1, [sp, #20]
   1a994:	mov	r0, r4
   1a998:	bl	1738c <argp_parse@@Base+0xc68>
   1a99c:	mov	sl, r0
   1a9a0:	ldr	r0, [sp, #16]
   1a9a4:	ldr	r3, [r4, #20]
   1a9a8:	mov	r1, r9
   1a9ac:	mov	r2, sl
   1a9b0:	cmp	r0, #0
   1a9b4:	mov	r0, r5
   1a9b8:	addne	r0, r0, #1
   1a9bc:	blx	r3
   1a9c0:	mov	r6, r0
   1a9c4:	cmp	r6, #0
   1a9c8:	beq	1aa7c <argp_failure@@Base+0x1184>
   1a9cc:	ldr	r0, [sp, #24]
   1a9d0:	cmp	r0, #0
   1a9d4:	beq	1aa14 <argp_failure@@Base+0x111c>
   1a9d8:	ldr	r0, [fp, #12]
   1a9dc:	ldr	r2, [r0, #28]
   1a9e0:	ldr	r1, [r0, #32]
   1a9e4:	cmp	r2, r1
   1a9e8:	bcc	1aa04 <argp_failure@@Base+0x110c>
   1a9ec:	mov	r1, #1
   1a9f0:	bl	1d154 <argp_failure@@Base+0x385c>
   1a9f4:	cmp	r0, #0
   1a9f8:	beq	1aa14 <argp_failure@@Base+0x111c>
   1a9fc:	ldr	r0, [fp, #12]
   1aa00:	ldr	r2, [r0, #28]
   1aa04:	add	r1, r2, #1
   1aa08:	str	r1, [r0, #28]
   1aa0c:	mov	r1, #10
   1aa10:	strb	r1, [r2]
   1aa14:	cmp	r8, #0
   1aa18:	beq	1aa88 <argp_failure@@Base+0x1190>
   1aa1c:	cmp	r6, r9
   1aa20:	bne	1aa88 <argp_failure@@Base+0x1190>
   1aa24:	ldr	r4, [fp, #12]
   1aa28:	mov	r7, r5
   1aa2c:	ldr	r0, [r4, #28]
   1aa30:	ldr	r1, [r4, #32]
   1aa34:	add	r2, r0, r8
   1aa38:	cmp	r2, r1
   1aa3c:	bls	1aa58 <argp_failure@@Base+0x1160>
   1aa40:	mov	r0, r4
   1aa44:	mov	r1, r8
   1aa48:	bl	1d154 <argp_failure@@Base+0x385c>
   1aa4c:	cmp	r0, #0
   1aa50:	beq	1aae8 <argp_failure@@Base+0x11f0>
   1aa54:	ldr	r0, [r4, #28]
   1aa58:	mov	r1, r9
   1aa5c:	mov	r2, r8
   1aa60:	bl	11b64 <memcpy@plt>
   1aa64:	ldr	r0, [r4, #28]
   1aa68:	add	r0, r0, r8
   1aa6c:	b	1aae4 <argp_failure@@Base+0x11ec>
   1aa70:	mov	r6, r9
   1aa74:	cmp	r6, #0
   1aa78:	bne	1a9cc <argp_failure@@Base+0x10d4>
   1aa7c:	mov	r4, sl
   1aa80:	mov	sl, #0
   1aa84:	b	1ab70 <argp_failure@@Base+0x1278>
   1aa88:	mov	r0, r6
   1aa8c:	mov	r7, r5
   1aa90:	bl	11d2c <strlen@plt>
   1aa94:	ldr	r4, [fp, #12]
   1aa98:	cmp	r0, #0
   1aa9c:	beq	1aae8 <argp_failure@@Base+0x11f0>
   1aaa0:	mov	r5, r0
   1aaa4:	ldr	r0, [r4, #28]
   1aaa8:	ldr	r1, [r4, #32]
   1aaac:	add	r2, r0, r5
   1aab0:	cmp	r2, r1
   1aab4:	bls	1aad0 <argp_failure@@Base+0x11d8>
   1aab8:	mov	r0, r4
   1aabc:	mov	r1, r5
   1aac0:	bl	1d154 <argp_failure@@Base+0x385c>
   1aac4:	cmp	r0, #0
   1aac8:	beq	1aae8 <argp_failure@@Base+0x11f0>
   1aacc:	ldr	r0, [r4, #28]
   1aad0:	mov	r1, r6
   1aad4:	mov	r2, r5
   1aad8:	bl	11b64 <memcpy@plt>
   1aadc:	ldr	r0, [r4, #28]
   1aae0:	add	r0, r0, r5
   1aae4:	str	r0, [r4, #28]
   1aae8:	ldr	r1, [r4, #24]
   1aaec:	ldr	r2, [r4, #28]
   1aaf0:	ldr	r0, [r4, #16]
   1aaf4:	sub	r1, r2, r1
   1aaf8:	cmp	r1, r0
   1aafc:	bls	1ab08 <argp_failure@@Base+0x1210>
   1ab00:	mov	r0, r4
   1ab04:	bl	1cc24 <argp_failure@@Base+0x332c>
   1ab08:	ldr	r1, [r4, #20]
   1ab0c:	ldr	r0, [r4, #4]
   1ab10:	mov	r5, r7
   1ab14:	bic	r1, r1, r1, asr #31
   1ab18:	cmp	r1, r0
   1ab1c:	bls	1ab58 <argp_failure@@Base+0x1260>
   1ab20:	ldr	r0, [r4, #28]
   1ab24:	ldr	r1, [r4, #32]
   1ab28:	cmp	r0, r1
   1ab2c:	bcc	1ab48 <argp_failure@@Base+0x1250>
   1ab30:	mov	r0, r4
   1ab34:	mov	r1, #1
   1ab38:	bl	1d154 <argp_failure@@Base+0x385c>
   1ab3c:	cmp	r0, #0
   1ab40:	beq	1ab58 <argp_failure@@Base+0x1260>
   1ab44:	ldr	r0, [r4, #28]
   1ab48:	add	r1, r0, #1
   1ab4c:	str	r1, [r4, #28]
   1ab50:	mov	r1, #10
   1ab54:	strb	r1, [r0]
   1ab58:	mov	r4, sl
   1ab5c:	mov	sl, #1
   1ab60:	cmp	r6, r9
   1ab64:	beq	1ab70 <argp_failure@@Base+0x1278>
   1ab68:	mov	r0, r6
   1ab6c:	bl	17a00 <argp_parse@@Base+0x12dc>
   1ab70:	cmp	r8, #0
   1ab74:	cmpne	r9, #0
   1ab78:	bne	1ad5c <argp_failure@@Base+0x1464>
   1ab7c:	ldr	r7, [sp, #16]
   1ab80:	ldr	r6, [sp, #24]
   1ab84:	ldr	r9, [sp, #20]
   1ab88:	ldr	r8, [fp, #12]
   1ab8c:	cmp	r7, #0
   1ab90:	beq	1acf8 <argp_failure@@Base+0x1400>
   1ab94:	ldr	r0, [sp, #12]
   1ab98:	ldr	r3, [r0, #20]
   1ab9c:	cmp	r3, #0
   1aba0:	beq	1ace8 <argp_failure@@Base+0x13f0>
   1aba4:	add	r0, r5, #3
   1aba8:	mov	r1, #0
   1abac:	mov	r2, r4
   1abb0:	blx	r3
   1abb4:	cmp	r0, #0
   1abb8:	beq	1ace8 <argp_failure@@Base+0x13f0>
   1abbc:	mov	r4, r0
   1abc0:	orrs	r0, sl, r6
   1abc4:	beq	1ac00 <argp_failure@@Base+0x1308>
   1abc8:	ldr	r0, [r8, #28]
   1abcc:	ldr	r1, [r8, #32]
   1abd0:	cmp	r0, r1
   1abd4:	bcc	1abf0 <argp_failure@@Base+0x12f8>
   1abd8:	mov	r0, r8
   1abdc:	mov	r1, #1
   1abe0:	bl	1d154 <argp_failure@@Base+0x385c>
   1abe4:	cmp	r0, #0
   1abe8:	beq	1ac00 <argp_failure@@Base+0x1308>
   1abec:	ldr	r0, [r8, #28]
   1abf0:	add	r1, r0, #1
   1abf4:	str	r1, [r8, #28]
   1abf8:	mov	r1, #10
   1abfc:	strb	r1, [r0]
   1ac00:	mov	r0, r4
   1ac04:	bl	11d2c <strlen@plt>
   1ac08:	cmp	r0, #0
   1ac0c:	beq	1ac58 <argp_failure@@Base+0x1360>
   1ac10:	mov	r5, r0
   1ac14:	ldr	r0, [r8, #28]
   1ac18:	ldr	r1, [r8, #32]
   1ac1c:	add	r2, r0, r5
   1ac20:	cmp	r2, r1
   1ac24:	bls	1ac40 <argp_failure@@Base+0x1348>
   1ac28:	mov	r0, r8
   1ac2c:	mov	r1, r5
   1ac30:	bl	1d154 <argp_failure@@Base+0x385c>
   1ac34:	cmp	r0, #0
   1ac38:	beq	1ac58 <argp_failure@@Base+0x1360>
   1ac3c:	ldr	r0, [r8, #28]
   1ac40:	mov	r1, r4
   1ac44:	mov	r2, r5
   1ac48:	bl	11b64 <memcpy@plt>
   1ac4c:	ldr	r0, [r8, #28]
   1ac50:	add	r0, r0, r5
   1ac54:	str	r0, [r8, #28]
   1ac58:	mov	r0, r4
   1ac5c:	bl	17a00 <argp_parse@@Base+0x12dc>
   1ac60:	ldr	r1, [r8, #24]
   1ac64:	ldr	r2, [r8, #28]
   1ac68:	ldr	r0, [r8, #16]
   1ac6c:	sub	r1, r2, r1
   1ac70:	cmp	r1, r0
   1ac74:	bls	1ac80 <argp_failure@@Base+0x1388>
   1ac78:	mov	r0, r8
   1ac7c:	bl	1cc24 <argp_failure@@Base+0x332c>
   1ac80:	ldr	r1, [r8, #20]
   1ac84:	ldr	r0, [r8, #4]
   1ac88:	ldr	r4, [sp, #8]
   1ac8c:	mov	sl, #1
   1ac90:	bic	r1, r1, r1, asr #31
   1ac94:	cmp	r1, r0
   1ac98:	bls	1acfc <argp_failure@@Base+0x1404>
   1ac9c:	ldr	r0, [r8, #28]
   1aca0:	ldr	r1, [r8, #32]
   1aca4:	cmp	r0, r1
   1aca8:	bcc	1acc8 <argp_failure@@Base+0x13d0>
   1acac:	mov	r0, r8
   1acb0:	mov	r1, #1
   1acb4:	mov	sl, #1
   1acb8:	bl	1d154 <argp_failure@@Base+0x385c>
   1acbc:	cmp	r0, #0
   1acc0:	beq	1acfc <argp_failure@@Base+0x1404>
   1acc4:	ldr	r0, [r8, #28]
   1acc8:	add	r1, r0, #1
   1accc:	mov	sl, #1
   1acd0:	str	r1, [r8, #28]
   1acd4:	mov	r1, #10
   1acd8:	strb	r1, [r0]
   1acdc:	cmp	r4, #0
   1ace0:	bne	1ad04 <argp_failure@@Base+0x140c>
   1ace4:	b	1ad50 <argp_failure@@Base+0x1458>
   1ace8:	ldr	r4, [sp, #8]
   1acec:	cmp	r4, #0
   1acf0:	bne	1ad04 <argp_failure@@Base+0x140c>
   1acf4:	b	1ad50 <argp_failure@@Base+0x1458>
   1acf8:	ldr	r4, [sp, #8]
   1acfc:	cmp	r4, #0
   1ad00:	beq	1ad50 <argp_failure@@Base+0x1458>
   1ad04:	ldr	r0, [r4]
   1ad08:	cmp	r0, #0
   1ad0c:	beq	1ad50 <argp_failure@@Base+0x1458>
   1ad10:	mov	r1, r4
   1ad14:	ldr	r4, [fp, #8]
   1ad18:	add	r5, r1, #16
   1ad1c:	cmp	r4, #0
   1ad20:	cmpne	sl, #0
   1ad24:	bne	1ad50 <argp_failure@@Base+0x1458>
   1ad28:	orrs	r3, sl, r6
   1ad2c:	mov	r1, r9
   1ad30:	mov	r2, r7
   1ad34:	stm	sp, {r4, r8}
   1ad38:	movwne	r3, #1
   1ad3c:	bl	1a8e8 <argp_failure@@Base+0xff0>
   1ad40:	orr	sl, r0, sl
   1ad44:	ldr	r0, [r5], #16
   1ad48:	cmp	r0, #0
   1ad4c:	bne	1ad1c <argp_failure@@Base+0x1424>
   1ad50:	mov	r0, sl
   1ad54:	sub	sp, fp, #28
   1ad58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad5c:	ldr	r0, [sp, #12]
   1ad60:	ldr	r0, [r0, #20]
   1ad64:	cmp	r0, #0
   1ad68:	beq	1ab7c <argp_failure@@Base+0x1284>
   1ad6c:	mov	r0, r9
   1ad70:	bl	17a00 <argp_parse@@Base+0x12dc>
   1ad74:	b	1ab7c <argp_failure@@Base+0x1284>
   1ad78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad7c:	add	fp, sp, #28
   1ad80:	sub	sp, sp, #28
   1ad84:	mov	r7, r0
   1ad88:	ldr	r0, [r0, #16]
   1ad8c:	mov	r6, r1
   1ad90:	cmp	r0, #0
   1ad94:	beq	1adb4 <argp_failure@@Base+0x14bc>
   1ad98:	mov	r2, r0
   1ad9c:	mov	r1, r2
   1ada0:	ldr	r2, [r2, #12]
   1ada4:	cmp	r2, #0
   1ada8:	bne	1ad9c <argp_failure@@Base+0x14a4>
   1adac:	add	r2, r1, #8
   1adb0:	b	1adb8 <argp_failure@@Base+0x14c0>
   1adb4:	add	r2, r7, #12
   1adb8:	ldr	r1, [r6, #16]
   1adbc:	ldr	r3, [r2]
   1adc0:	cmp	r1, #0
   1adc4:	beq	1ade4 <argp_failure@@Base+0x14ec>
   1adc8:	mov	r2, r1
   1adcc:	mov	r5, r2
   1add0:	ldr	r2, [r2, #12]
   1add4:	cmp	r2, #0
   1add8:	bne	1adcc <argp_failure@@Base+0x14d4>
   1addc:	add	r2, r5, #8
   1ade0:	b	1ade8 <argp_failure@@Base+0x14f0>
   1ade4:	add	r2, r6, #12
   1ade8:	ldr	r5, [r2]
   1adec:	orr	r4, r5, r3
   1adf0:	sub	r2, r3, r5
   1adf4:	cmn	r4, #1
   1adf8:	mov	r4, r2
   1adfc:	suble	r4, r5, r3
   1ae00:	ands	r3, r5, r3
   1ae04:	movmi	r4, r2
   1ae08:	cmp	r4, #0
   1ae0c:	bne	1ae2c <argp_failure@@Base+0x1534>
   1ae10:	cmp	r0, #0
   1ae14:	mov	r4, r0
   1ae18:	movwne	r4, #1
   1ae1c:	cmp	r1, #0
   1ae20:	subne	r4, r4, #1
   1ae24:	cmp	r4, #0
   1ae28:	beq	1ae38 <argp_failure@@Base+0x1540>
   1ae2c:	mov	r0, r4
   1ae30:	sub	sp, fp, #28
   1ae34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae38:	cmp	r0, #0
   1ae3c:	beq	1aeac <argp_failure@@Base+0x15b4>
   1ae40:	ldr	r3, [r1, #20]
   1ae44:	ldr	r2, [r0, #20]
   1ae48:	cmp	r2, r3
   1ae4c:	ble	1ae74 <argp_failure@@Base+0x157c>
   1ae50:	ldr	r0, [r0, #12]
   1ae54:	ldr	r2, [r0, #20]
   1ae58:	cmp	r2, r3
   1ae5c:	bgt	1ae50 <argp_failure@@Base+0x1558>
   1ae60:	bl	1b29c <argp_failure@@Base+0x19a4>
   1ae64:	cmp	r0, #0
   1ae68:	mov	r4, r0
   1ae6c:	movweq	r4, #1
   1ae70:	b	1ae2c <argp_failure@@Base+0x1534>
   1ae74:	bge	1ae9c <argp_failure@@Base+0x15a4>
   1ae78:	ldr	r1, [r1, #12]
   1ae7c:	ldr	r3, [r1, #20]
   1ae80:	cmp	r2, r3
   1ae84:	blt	1ae78 <argp_failure@@Base+0x1580>
   1ae88:	bl	1b29c <argp_failure@@Base+0x19a4>
   1ae8c:	cmp	r0, #0
   1ae90:	mov	r4, r0
   1ae94:	mvneq	r4, #0
   1ae98:	b	1ae2c <argp_failure@@Base+0x1534>
   1ae9c:	bl	1b29c <argp_failure@@Base+0x19a4>
   1aea0:	mov	r4, r0
   1aea4:	cmp	r0, #0
   1aea8:	bne	1ae2c <argp_failure@@Base+0x1534>
   1aeac:	ldr	r0, [r7, #12]
   1aeb0:	ldr	r1, [r6, #12]
   1aeb4:	orr	r2, r1, r0
   1aeb8:	sub	r3, r0, r1
   1aebc:	cmn	r2, #1
   1aec0:	mov	r4, r3
   1aec4:	suble	r4, r1, r0
   1aec8:	ands	r0, r1, r0
   1aecc:	movmi	r4, r3
   1aed0:	cmp	r4, #0
   1aed4:	bne	1ae2c <argp_failure@@Base+0x1534>
   1aed8:	ldr	r3, [r7, #4]
   1aedc:	mov	sl, #0
   1aee0:	cmp	r3, #0
   1aee4:	beq	1af24 <argp_failure@@Base+0x162c>
   1aee8:	ldr	r0, [r7]
   1aeec:	mov	r1, r3
   1aef0:	add	r0, r0, #12
   1aef4:	b	1af04 <argp_failure@@Base+0x160c>
   1aef8:	add	r0, r0, #24
   1aefc:	subs	r1, r1, #1
   1af00:	beq	1af20 <argp_failure@@Base+0x1628>
   1af04:	ldr	sl, [r0, #-12]
   1af08:	cmp	sl, #0
   1af0c:	beq	1aef8 <argp_failure@@Base+0x1600>
   1af10:	ldrb	r2, [r0]
   1af14:	tst	r2, #2
   1af18:	bne	1aef8 <argp_failure@@Base+0x1600>
   1af1c:	b	1af24 <argp_failure@@Base+0x162c>
   1af20:	mov	sl, #0
   1af24:	ldr	r8, [r6, #4]
   1af28:	cmp	r8, #0
   1af2c:	beq	1af68 <argp_failure@@Base+0x1670>
   1af30:	ldr	r0, [r6]
   1af34:	mov	r1, r8
   1af38:	add	r0, r0, #12
   1af3c:	b	1af4c <argp_failure@@Base+0x1654>
   1af40:	add	r0, r0, #24
   1af44:	subs	r1, r1, #1
   1af48:	beq	1af68 <argp_failure@@Base+0x1670>
   1af4c:	ldr	r5, [r0, #-12]
   1af50:	cmp	r5, #0
   1af54:	beq	1af40 <argp_failure@@Base+0x1648>
   1af58:	ldrb	r2, [r0]
   1af5c:	tst	r2, #2
   1af60:	bne	1af40 <argp_failure@@Base+0x1648>
   1af64:	b	1af6c <argp_failure@@Base+0x1674>
   1af68:	mov	r5, #0
   1af6c:	ldr	r4, [r7]
   1af70:	mov	r9, #0
   1af74:	cmp	sl, #0
   1af78:	str	r3, [sp, #20]
   1af7c:	str	r8, [sp, #16]
   1af80:	ldr	r1, [r4, #12]
   1af84:	str	r4, [sp, #4]
   1af88:	beq	1aff0 <argp_failure@@Base+0x16f8>
   1af8c:	ands	r0, r1, #8
   1af90:	beq	1aff0 <argp_failure@@Base+0x16f8>
   1af94:	str	r1, [sp, #24]
   1af98:	bl	11cf0 <__ctype_b_loc@plt>
   1af9c:	ldrb	r1, [sl]
   1afa0:	ldr	r0, [r0]
   1afa4:	add	r2, r0, r1, lsl #1
   1afa8:	ldrb	r2, [r2, #1]
   1afac:	tst	r2, #32
   1afb0:	beq	1afbc <argp_failure@@Base+0x16c4>
   1afb4:	ldrb	r1, [sl, #1]!
   1afb8:	b	1afa4 <argp_failure@@Base+0x16ac>
   1afbc:	subs	r4, r1, #45	; 0x2d
   1afc0:	movwne	r4, #1
   1afc4:	cmp	r1, #0
   1afc8:	beq	1afe8 <argp_failure@@Base+0x16f0>
   1afcc:	uxtb	r1, r1
   1afd0:	ldrb	r1, [r0, r1, lsl #1]
   1afd4:	tst	r1, #8
   1afd8:	bne	1afe8 <argp_failure@@Base+0x16f0>
   1afdc:	ldrb	r1, [sl, #1]!
   1afe0:	cmp	r1, #0
   1afe4:	bne	1afcc <argp_failure@@Base+0x16d4>
   1afe8:	ldr	r1, [sp, #24]
   1afec:	b	1aff4 <argp_failure@@Base+0x16fc>
   1aff0:	mov	r4, #0
   1aff4:	ldr	r0, [r6]
   1aff8:	cmp	r5, #0
   1affc:	str	r0, [sp, #8]
   1b000:	ldr	r0, [r0, #12]
   1b004:	str	r0, [sp, #12]
   1b008:	andsne	r0, r0, #8
   1b00c:	beq	1b068 <argp_failure@@Base+0x1770>
   1b010:	mov	r8, r1
   1b014:	bl	11cf0 <__ctype_b_loc@plt>
   1b018:	ldrb	r1, [r5]
   1b01c:	ldr	r0, [r0]
   1b020:	add	r2, r0, r1, lsl #1
   1b024:	ldrb	r2, [r2, #1]
   1b028:	tst	r2, #32
   1b02c:	beq	1b038 <argp_failure@@Base+0x1740>
   1b030:	ldrb	r1, [r5, #1]!
   1b034:	b	1b020 <argp_failure@@Base+0x1728>
   1b038:	subs	r9, r1, #45	; 0x2d
   1b03c:	movwne	r9, #1
   1b040:	cmp	r1, #0
   1b044:	beq	1b064 <argp_failure@@Base+0x176c>
   1b048:	uxtb	r1, r1
   1b04c:	ldrb	r1, [r0, r1, lsl #1]
   1b050:	tst	r1, #8
   1b054:	bne	1b064 <argp_failure@@Base+0x176c>
   1b058:	ldrb	r1, [r5, #1]!
   1b05c:	cmp	r1, #0
   1b060:	bne	1b048 <argp_failure@@Base+0x1750>
   1b064:	mov	r1, r8
   1b068:	subs	r4, r4, r9
   1b06c:	bne	1ae2c <argp_failure@@Base+0x1534>
   1b070:	ldr	r0, [sp, #20]
   1b074:	mov	r2, #0
   1b078:	cmp	r0, #0
   1b07c:	beq	1b114 <argp_failure@@Base+0x181c>
   1b080:	sub	r8, r0, #1
   1b084:	ldr	r0, [sp, #4]
   1b088:	ldr	r4, [r7, #8]
   1b08c:	add	r9, r0, #36	; 0x24
   1b090:	tst	r1, #8
   1b094:	beq	1b0bc <argp_failure@@Base+0x17c4>
   1b098:	mov	r2, #0
   1b09c:	cmp	r8, #0
   1b0a0:	beq	1b114 <argp_failure@@Base+0x181c>
   1b0a4:	cmp	r2, #0
   1b0a8:	bne	1b114 <argp_failure@@Base+0x181c>
   1b0ac:	ldr	r1, [r9], #24
   1b0b0:	sub	r8, r8, #1
   1b0b4:	tst	r1, #8
   1b0b8:	bne	1b098 <argp_failure@@Base+0x17a0>
   1b0bc:	ldr	r7, [r9, #-32]	; 0xffffffe0
   1b0c0:	sub	r0, r7, #1
   1b0c4:	cmp	r0, #254	; 0xfe
   1b0c8:	bhi	1b098 <argp_failure@@Base+0x17a0>
   1b0cc:	str	r1, [sp, #24]
   1b0d0:	bl	11cf0 <__ctype_b_loc@plt>
   1b0d4:	ldr	r0, [r0]
   1b0d8:	add	r0, r0, r7, lsl #1
   1b0dc:	ldrb	r0, [r0, #1]
   1b0e0:	tst	r0, #64	; 0x40
   1b0e4:	beq	1b098 <argp_failure@@Base+0x17a0>
   1b0e8:	ldrb	r0, [r4]
   1b0ec:	mov	r2, r7
   1b0f0:	cmp	r7, r0
   1b0f4:	bne	1b098 <argp_failure@@Base+0x17a0>
   1b0f8:	ldr	r0, [sp, #24]
   1b0fc:	add	r4, r4, #1
   1b100:	tst	r0, #2
   1b104:	mov	r0, #0
   1b108:	movne	r2, r0
   1b10c:	cmp	r8, #0
   1b110:	bne	1b0a4 <argp_failure@@Base+0x17ac>
   1b114:	ldr	r3, [sp, #16]
   1b118:	mov	r9, #0
   1b11c:	mov	r0, r2
   1b120:	str	r2, [sp, #24]
   1b124:	cmp	r3, #0
   1b128:	beq	1b1c4 <argp_failure@@Base+0x18cc>
   1b12c:	ldr	r0, [sp, #8]
   1b130:	ldr	r6, [r6, #8]
   1b134:	ldr	r4, [sp, #12]
   1b138:	sub	r7, r3, #1
   1b13c:	add	r8, r0, #36	; 0x24
   1b140:	tst	r4, #8
   1b144:	bne	1b150 <argp_failure@@Base+0x1858>
   1b148:	b	1b174 <argp_failure@@Base+0x187c>
   1b14c:	ldr	r2, [sp, #24]
   1b150:	mov	r9, #0
   1b154:	cmp	r7, #0
   1b158:	beq	1b1c4 <argp_failure@@Base+0x18cc>
   1b15c:	cmp	r9, #0
   1b160:	bne	1b1c4 <argp_failure@@Base+0x18cc>
   1b164:	ldr	r4, [r8], #24
   1b168:	sub	r7, r7, #1
   1b16c:	tst	r4, #8
   1b170:	bne	1b150 <argp_failure@@Base+0x1858>
   1b174:	ldr	r9, [r8, #-32]	; 0xffffffe0
   1b178:	sub	r0, r9, #1
   1b17c:	cmp	r0, #254	; 0xfe
   1b180:	bhi	1b150 <argp_failure@@Base+0x1858>
   1b184:	bl	11cf0 <__ctype_b_loc@plt>
   1b188:	ldr	r0, [r0]
   1b18c:	add	r0, r0, r9, lsl #1
   1b190:	ldrb	r0, [r0, #1]
   1b194:	tst	r0, #64	; 0x40
   1b198:	beq	1b14c <argp_failure@@Base+0x1854>
   1b19c:	ldrb	r0, [r6]
   1b1a0:	ldr	r2, [sp, #24]
   1b1a4:	cmp	r9, r0
   1b1a8:	bne	1b150 <argp_failure@@Base+0x1858>
   1b1ac:	tst	r4, #2
   1b1b0:	mov	r0, #0
   1b1b4:	add	r6, r6, #1
   1b1b8:	movne	r9, r0
   1b1bc:	cmp	r7, #0
   1b1c0:	bne	1b15c <argp_failure@@Base+0x1864>
   1b1c4:	tst	r2, #255	; 0xff
   1b1c8:	mov	r6, r2
   1b1cc:	bne	1b1e4 <argp_failure@@Base+0x18ec>
   1b1d0:	cmp	sl, #0
   1b1d4:	beq	1b1e0 <argp_failure@@Base+0x18e8>
   1b1d8:	ldrb	r6, [sl]
   1b1dc:	b	1b1e4 <argp_failure@@Base+0x18ec>
   1b1e0:	mov	r6, #0
   1b1e4:	tst	r9, #255	; 0xff
   1b1e8:	mov	r7, r9
   1b1ec:	bne	1b204 <argp_failure@@Base+0x190c>
   1b1f0:	cmp	r5, #0
   1b1f4:	beq	1b200 <argp_failure@@Base+0x1908>
   1b1f8:	ldrb	r7, [r5]
   1b1fc:	b	1b204 <argp_failure@@Base+0x190c>
   1b200:	mov	r7, #0
   1b204:	bl	11cd8 <__ctype_tolower_loc@plt>
   1b208:	ldr	r2, [r0]
   1b20c:	uxtb	r0, r7
   1b210:	uxtb	r1, r6
   1b214:	ldr	r3, [r2, r0, lsl #2]
   1b218:	ldr	r2, [r2, r1, lsl #2]
   1b21c:	subs	r4, r2, r3
   1b220:	subseq	r4, r0, r1
   1b224:	bne	1ae2c <argp_failure@@Base+0x1534>
   1b228:	ldr	r0, [sp, #24]
   1b22c:	uxtb	r4, r0
   1b230:	cmp	r4, #0
   1b234:	movwne	r4, #1
   1b238:	tst	r9, #255	; 0xff
   1b23c:	subne	r4, r4, #1
   1b240:	cmp	r4, #0
   1b244:	bne	1ae2c <argp_failure@@Base+0x1534>
   1b248:	ldr	r0, [sp, #24]
   1b24c:	tst	r0, #255	; 0xff
   1b250:	beq	1b25c <argp_failure@@Base+0x1964>
   1b254:	mov	r4, #0
   1b258:	b	1ae2c <argp_failure@@Base+0x1534>
   1b25c:	cmp	sl, #0
   1b260:	mov	r4, sl
   1b264:	movwne	r4, #1
   1b268:	cmp	r5, #0
   1b26c:	subne	r4, r4, #1
   1b270:	cmp	r4, #0
   1b274:	bne	1ae2c <argp_failure@@Base+0x1534>
   1b278:	cmp	sl, #0
   1b27c:	beq	1b254 <argp_failure@@Base+0x195c>
   1b280:	mov	r0, sl
   1b284:	mov	r1, r5
   1b288:	bl	11c18 <strcasecmp@plt>
   1b28c:	cmp	r0, #0
   1b290:	mov	r4, r0
   1b294:	moveq	r4, #0
   1b298:	b	1ae2c <argp_failure@@Base+0x1534>
   1b29c:	push	{r4, r5, fp, lr}
   1b2a0:	add	fp, sp, #8
   1b2a4:	mov	r4, r1
   1b2a8:	mov	r5, r0
   1b2ac:	ldr	r1, [r1, #12]
   1b2b0:	ldr	r0, [r0, #12]
   1b2b4:	cmp	r0, r1
   1b2b8:	beq	1b2cc <argp_failure@@Base+0x19d4>
   1b2bc:	bl	1b29c <argp_failure@@Base+0x19a4>
   1b2c0:	cmp	r0, #0
   1b2c4:	beq	1b2cc <argp_failure@@Base+0x19d4>
   1b2c8:	pop	{r4, r5, fp, pc}
   1b2cc:	ldr	r1, [r5, #8]
   1b2d0:	ldr	r2, [r4, #8]
   1b2d4:	orr	r0, r2, r1
   1b2d8:	sub	r3, r1, r2
   1b2dc:	cmn	r0, #1
   1b2e0:	mov	r0, r3
   1b2e4:	suble	r0, r2, r1
   1b2e8:	ands	r1, r2, r1
   1b2ec:	movmi	r0, r3
   1b2f0:	cmp	r0, #0
   1b2f4:	popne	{r4, r5, fp, pc}
   1b2f8:	ldr	r0, [r5, #4]
   1b2fc:	ldr	r1, [r4, #4]
   1b300:	sub	r0, r1, r0
   1b304:	pop	{r4, r5, fp, pc}
   1b308:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b30c:	add	fp, sp, #24
   1b310:	mov	r4, r0
   1b314:	ldr	r0, [r1, #12]
   1b318:	mov	r5, r1
   1b31c:	cmp	r0, #0
   1b320:	beq	1b39c <argp_failure@@Base+0x1aa4>
   1b324:	ldr	r1, [r5, #8]
   1b328:	ldr	r0, [r5]
   1b32c:	ldr	r6, [r1]
   1b330:	ldr	r7, [r0, #16]
   1b334:	cmp	r6, #0
   1b338:	ldrne	r1, [r1, #4]
   1b33c:	cmpne	r1, #0
   1b340:	bne	1b3e4 <argp_failure@@Base+0x1aec>
   1b344:	cmp	r7, #0
   1b348:	beq	1b484 <argp_failure@@Base+0x1b8c>
   1b34c:	ldr	r0, [r7]
   1b350:	cmp	r0, #0
   1b354:	beq	1b484 <argp_failure@@Base+0x1b8c>
   1b358:	ldrb	r1, [r0]
   1b35c:	cmp	r1, #0
   1b360:	beq	1b484 <argp_failure@@Base+0x1b8c>
   1b364:	cmp	r6, #0
   1b368:	beq	1b448 <argp_failure@@Base+0x1b50>
   1b36c:	ldr	r1, [r6, #16]
   1b370:	cmp	r1, r7
   1b374:	beq	1b484 <argp_failure@@Base+0x1b8c>
   1b378:	cmp	r1, #0
   1b37c:	beq	1b43c <argp_failure@@Base+0x1b44>
   1b380:	ldr	r1, [r1, #12]
   1b384:	cmp	r1, r7
   1b388:	cmpne	r1, #0
   1b38c:	bne	1b380 <argp_failure@@Base+0x1a88>
   1b390:	cmp	r1, r7
   1b394:	bne	1b448 <argp_failure@@Base+0x1b50>
   1b398:	b	1b484 <argp_failure@@Base+0x1b8c>
   1b39c:	ldr	r6, [r5, #4]
   1b3a0:	ldr	r0, [r6, #28]
   1b3a4:	ldr	r1, [r6, #32]
   1b3a8:	add	r2, r0, #2
   1b3ac:	cmp	r2, r1
   1b3b0:	bls	1b3cc <argp_failure@@Base+0x1ad4>
   1b3b4:	mov	r0, r6
   1b3b8:	mov	r1, #2
   1b3bc:	bl	1d154 <argp_failure@@Base+0x385c>
   1b3c0:	cmp	r0, #0
   1b3c4:	beq	1b48c <argp_failure@@Base+0x1b94>
   1b3c8:	ldr	r0, [r6, #28]
   1b3cc:	movw	r1, #8236	; 0x202c
   1b3d0:	strh	r1, [r0]
   1b3d4:	ldr	r0, [r6, #28]
   1b3d8:	add	r0, r0, #2
   1b3dc:	str	r0, [r6, #28]
   1b3e0:	b	1b48c <argp_failure@@Base+0x1b94>
   1b3e4:	ldr	r1, [r6, #12]
   1b3e8:	ldr	r0, [r0, #12]
   1b3ec:	cmp	r0, r1
   1b3f0:	beq	1b344 <argp_failure@@Base+0x1a4c>
   1b3f4:	ldr	r8, [r5, #4]
   1b3f8:	ldr	r0, [r8, #28]
   1b3fc:	ldr	r1, [r8, #32]
   1b400:	cmp	r0, r1
   1b404:	bcc	1b420 <argp_failure@@Base+0x1b28>
   1b408:	mov	r0, r8
   1b40c:	mov	r1, #1
   1b410:	bl	1d154 <argp_failure@@Base+0x385c>
   1b414:	cmp	r0, #0
   1b418:	beq	1b344 <argp_failure@@Base+0x1a4c>
   1b41c:	ldr	r0, [r8, #28]
   1b420:	add	r1, r0, #1
   1b424:	str	r1, [r8, #28]
   1b428:	mov	r1, #10
   1b42c:	strb	r1, [r0]
   1b430:	cmp	r7, #0
   1b434:	bne	1b34c <argp_failure@@Base+0x1a54>
   1b438:	b	1b484 <argp_failure@@Base+0x1b8c>
   1b43c:	mov	r1, #0
   1b440:	cmp	r1, r7
   1b444:	beq	1b484 <argp_failure@@Base+0x1b8c>
   1b448:	ldr	r1, [r5, #4]
   1b44c:	mov	r2, r5
   1b450:	ldr	r8, [r1, #12]
   1b454:	ldr	r1, [r7, #16]
   1b458:	bl	1b514 <argp_failure@@Base+0x1c1c>
   1b45c:	ldr	r6, [r5, #4]
   1b460:	ldr	r1, [r6, #24]
   1b464:	ldr	r2, [r6, #28]
   1b468:	ldr	r0, [r6, #16]
   1b46c:	sub	r1, r2, r1
   1b470:	cmp	r1, r0
   1b474:	bls	1b480 <argp_failure@@Base+0x1b88>
   1b478:	mov	r0, r6
   1b47c:	bl	1cc24 <argp_failure@@Base+0x332c>
   1b480:	str	r8, [r6, #12]
   1b484:	mov	r0, #0
   1b488:	str	r0, [r5, #12]
   1b48c:	ldr	r5, [r5, #4]
   1b490:	ldr	r1, [r5, #24]
   1b494:	ldr	r2, [r5, #28]
   1b498:	ldr	r0, [r5, #16]
   1b49c:	sub	r1, r2, r1
   1b4a0:	cmp	r1, r0
   1b4a4:	bls	1b4b0 <argp_failure@@Base+0x1bb8>
   1b4a8:	mov	r0, r5
   1b4ac:	bl	1cc24 <argp_failure@@Base+0x332c>
   1b4b0:	ldr	r0, [r5, #20]
   1b4b4:	cmp	r0, #0
   1b4b8:	subgt	r4, r4, r0
   1b4bc:	cmp	r4, #1
   1b4c0:	blt	1b510 <argp_failure@@Base+0x1c18>
   1b4c4:	mov	r6, #32
   1b4c8:	b	1b4e0 <argp_failure@@Base+0x1be8>
   1b4cc:	add	r1, r0, #1
   1b4d0:	str	r1, [r5, #28]
   1b4d4:	strb	r6, [r0]
   1b4d8:	cmp	r4, #0
   1b4dc:	ble	1b510 <argp_failure@@Base+0x1c18>
   1b4e0:	ldr	r0, [r5, #28]
   1b4e4:	ldr	r1, [r5, #32]
   1b4e8:	sub	r4, r4, #1
   1b4ec:	cmp	r0, r1
   1b4f0:	bcc	1b4cc <argp_failure@@Base+0x1bd4>
   1b4f4:	mov	r0, r5
   1b4f8:	mov	r1, #1
   1b4fc:	bl	1d154 <argp_failure@@Base+0x385c>
   1b500:	cmp	r0, #0
   1b504:	beq	1b4d8 <argp_failure@@Base+0x1be0>
   1b508:	ldr	r0, [r5, #28]
   1b50c:	b	1b4cc <argp_failure@@Base+0x1bd4>
   1b510:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b518:	add	fp, sp, #28
   1b51c:	sub	sp, sp, #4
   1b520:	mov	r9, r2
   1b524:	mov	r8, r0
   1b528:	cmp	r1, #0
   1b52c:	mov	r6, r0
   1b530:	beq	1b570 <argp_failure@@Base+0x1c78>
   1b534:	ldr	r0, [r1, #20]
   1b538:	mov	r4, r1
   1b53c:	mov	r6, r8
   1b540:	cmp	r0, #0
   1b544:	beq	1b570 <argp_failure@@Base+0x1c78>
   1b548:	ldr	r1, [r9, #16]
   1b54c:	mov	r0, r4
   1b550:	bl	1738c <argp_parse@@Base+0xc68>
   1b554:	ldr	r3, [r4, #20]
   1b558:	mov	r2, r0
   1b55c:	movw	r0, #3
   1b560:	mov	r1, r8
   1b564:	movt	r0, #512	; 0x200
   1b568:	blx	r3
   1b56c:	mov	r6, r0
   1b570:	cmp	r6, #0
   1b574:	beq	1b7a0 <argp_failure@@Base+0x1ea8>
   1b578:	ldrb	r0, [r6]
   1b57c:	cmp	r0, #0
   1b580:	beq	1b794 <argp_failure@@Base+0x1e9c>
   1b584:	ldr	r0, [r9, #8]
   1b588:	ldr	r0, [r0]
   1b58c:	cmp	r0, #0
   1b590:	beq	1b5d0 <argp_failure@@Base+0x1cd8>
   1b594:	ldr	r4, [r9, #4]
   1b598:	ldr	r0, [r4, #28]
   1b59c:	ldr	r1, [r4, #32]
   1b5a0:	cmp	r0, r1
   1b5a4:	bcc	1b5c0 <argp_failure@@Base+0x1cc8>
   1b5a8:	mov	r0, r4
   1b5ac:	mov	r1, #1
   1b5b0:	bl	1d154 <argp_failure@@Base+0x385c>
   1b5b4:	cmp	r0, #0
   1b5b8:	beq	1b5d0 <argp_failure@@Base+0x1cd8>
   1b5bc:	ldr	r0, [r4, #28]
   1b5c0:	add	r1, r0, #1
   1b5c4:	str	r1, [r4, #28]
   1b5c8:	mov	r1, #10
   1b5cc:	strb	r1, [r0]
   1b5d0:	ldr	r7, [r9, #4]
   1b5d4:	movw	sl, #62320	; 0xf370
   1b5d8:	movt	sl, #2
   1b5dc:	ldr	r4, [sl, #24]
   1b5e0:	ldr	r1, [r7, #24]
   1b5e4:	ldr	r2, [r7, #28]
   1b5e8:	ldr	r0, [r7, #16]
   1b5ec:	sub	r1, r2, r1
   1b5f0:	cmp	r1, r0
   1b5f4:	bls	1b600 <argp_failure@@Base+0x1d08>
   1b5f8:	mov	r0, r7
   1b5fc:	bl	1cc24 <argp_failure@@Base+0x332c>
   1b600:	ldr	r0, [r7, #20]
   1b604:	cmp	r0, #0
   1b608:	subgt	r4, r4, r0
   1b60c:	cmp	r4, #1
   1b610:	blt	1b660 <argp_failure@@Base+0x1d68>
   1b614:	mov	r5, #32
   1b618:	b	1b630 <argp_failure@@Base+0x1d38>
   1b61c:	add	r1, r0, #1
   1b620:	str	r1, [r7, #28]
   1b624:	strb	r5, [r0]
   1b628:	cmp	r4, #0
   1b62c:	ble	1b660 <argp_failure@@Base+0x1d68>
   1b630:	ldr	r0, [r7, #28]
   1b634:	ldr	r1, [r7, #32]
   1b638:	sub	r4, r4, #1
   1b63c:	cmp	r0, r1
   1b640:	bcc	1b61c <argp_failure@@Base+0x1d24>
   1b644:	mov	r0, r7
   1b648:	mov	r1, #1
   1b64c:	bl	1d154 <argp_failure@@Base+0x385c>
   1b650:	cmp	r0, #0
   1b654:	beq	1b628 <argp_failure@@Base+0x1d30>
   1b658:	ldr	r0, [r7, #28]
   1b65c:	b	1b61c <argp_failure@@Base+0x1d24>
   1b660:	ldr	r4, [r9, #4]
   1b664:	ldr	r5, [sl, #24]
   1b668:	ldr	r1, [r4, #24]
   1b66c:	ldr	r2, [r4, #28]
   1b670:	ldr	r0, [r4, #16]
   1b674:	mov	r7, r4
   1b678:	sub	r1, r2, r1
   1b67c:	mov	r2, sl
   1b680:	mov	sl, r5
   1b684:	cmp	r1, r0
   1b688:	bls	1b6b0 <argp_failure@@Base+0x1db8>
   1b68c:	mov	r0, r4
   1b690:	mov	r7, r2
   1b694:	bl	1cc24 <argp_failure@@Base+0x332c>
   1b698:	ldr	sl, [r7, #24]
   1b69c:	ldr	r7, [r9, #4]
   1b6a0:	ldr	r1, [r7, #24]
   1b6a4:	ldr	r2, [r7, #28]
   1b6a8:	ldr	r0, [r7, #16]
   1b6ac:	sub	r1, r2, r1
   1b6b0:	str	r5, [r4, #4]
   1b6b4:	cmp	r1, r0
   1b6b8:	mov	r5, r7
   1b6bc:	bls	1b6cc <argp_failure@@Base+0x1dd4>
   1b6c0:	mov	r0, r7
   1b6c4:	bl	1cc24 <argp_failure@@Base+0x332c>
   1b6c8:	ldr	r5, [r9, #4]
   1b6cc:	mov	r0, r6
   1b6d0:	str	sl, [r7, #12]
   1b6d4:	bl	11d2c <strlen@plt>
   1b6d8:	cmp	r0, #0
   1b6dc:	beq	1b728 <argp_failure@@Base+0x1e30>
   1b6e0:	mov	r4, r0
   1b6e4:	ldr	r0, [r5, #28]
   1b6e8:	ldr	r1, [r5, #32]
   1b6ec:	add	r2, r0, r4
   1b6f0:	cmp	r2, r1
   1b6f4:	bls	1b710 <argp_failure@@Base+0x1e18>
   1b6f8:	mov	r0, r5
   1b6fc:	mov	r1, r4
   1b700:	bl	1d154 <argp_failure@@Base+0x385c>
   1b704:	cmp	r0, #0
   1b708:	beq	1b728 <argp_failure@@Base+0x1e30>
   1b70c:	ldr	r0, [r5, #28]
   1b710:	mov	r1, r6
   1b714:	mov	r2, r4
   1b718:	bl	11b64 <memcpy@plt>
   1b71c:	ldr	r0, [r5, #28]
   1b720:	add	r0, r0, r4
   1b724:	str	r0, [r5, #28]
   1b728:	ldr	r5, [r9, #4]
   1b72c:	ldr	r2, [r5, #24]
   1b730:	ldr	r0, [r5, #28]
   1b734:	ldr	r1, [r5, #16]
   1b738:	mov	r4, r5
   1b73c:	sub	r2, r0, r2
   1b740:	cmp	r2, r1
   1b744:	bls	1b758 <argp_failure@@Base+0x1e60>
   1b748:	mov	r0, r5
   1b74c:	bl	1cc24 <argp_failure@@Base+0x332c>
   1b750:	ldr	r4, [r9, #4]
   1b754:	ldr	r0, [r4, #28]
   1b758:	mov	r1, #0
   1b75c:	str	r1, [r5, #4]
   1b760:	ldr	r1, [r4, #32]
   1b764:	cmp	r0, r1
   1b768:	bcc	1b784 <argp_failure@@Base+0x1e8c>
   1b76c:	mov	r0, r4
   1b770:	mov	r1, #1
   1b774:	bl	1d154 <argp_failure@@Base+0x385c>
   1b778:	cmp	r0, #0
   1b77c:	beq	1b794 <argp_failure@@Base+0x1e9c>
   1b780:	ldr	r0, [r4, #28]
   1b784:	add	r1, r0, #1
   1b788:	str	r1, [r4, #28]
   1b78c:	mov	r1, #10
   1b790:	strb	r1, [r0]
   1b794:	ldr	r0, [r9, #8]
   1b798:	mov	r1, #1
   1b79c:	str	r1, [r0, #4]
   1b7a0:	cmp	r6, r8
   1b7a4:	beq	1b7b8 <argp_failure@@Base+0x1ec0>
   1b7a8:	mov	r0, r6
   1b7ac:	sub	sp, fp, #28
   1b7b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7b4:	b	17a00 <argp_parse@@Base+0x12dc>
   1b7b8:	sub	sp, fp, #28
   1b7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7c4:	add	fp, sp, #28
   1b7c8:	sub	sp, sp, #92	; 0x5c
   1b7cc:	mvn	r4, #0
   1b7d0:	cmp	r0, #1
   1b7d4:	blt	1c2b8 <argp_failure@@Base+0x29c0>
   1b7d8:	ldr	ip, [fp, #16]
   1b7dc:	mov	r9, r2
   1b7e0:	mov	r2, r0
   1b7e4:	mov	r8, r1
   1b7e8:	mov	r0, #0
   1b7ec:	str	r3, [fp, #-48]	; 0xffffffd0
   1b7f0:	ldr	r6, [ip]
   1b7f4:	ldr	r4, [ip, #4]
   1b7f8:	str	r0, [ip, #12]
   1b7fc:	cmp	r6, #0
   1b800:	beq	1b824 <argp_failure@@Base+0x1f2c>
   1b804:	ldr	r0, [ip, #16]
   1b808:	cmp	r0, #0
   1b80c:	beq	1b82c <argp_failure@@Base+0x1f34>
   1b810:	ldrb	r0, [r9]
   1b814:	cmp	r0, #45	; 0x2d
   1b818:	cmpne	r0, #43	; 0x2b
   1b81c:	addeq	r9, r9, #1
   1b820:	b	1b8a0 <argp_failure@@Base+0x1fa8>
   1b824:	mov	r6, #1
   1b828:	str	r6, [ip]
   1b82c:	mov	r0, #0
   1b830:	str	r6, [ip, #28]
   1b834:	str	r6, [ip, #32]
   1b838:	str	r0, [ip, #20]
   1b83c:	ldrb	r1, [r9]
   1b840:	cmp	r1, #43	; 0x2b
   1b844:	beq	1b854 <argp_failure@@Base+0x1f5c>
   1b848:	cmp	r1, #45	; 0x2d
   1b84c:	bne	1b860 <argp_failure@@Base+0x1f68>
   1b850:	mov	r0, #2
   1b854:	str	r0, [ip, #24]
   1b858:	add	r9, r9, #1
   1b85c:	b	1b898 <argp_failure@@Base+0x1fa0>
   1b860:	ldr	r0, [fp, #20]
   1b864:	cmp	r0, #0
   1b868:	bne	1b890 <argp_failure@@Base+0x1f98>
   1b86c:	movw	r0, #59249	; 0xe771
   1b870:	mov	r5, ip
   1b874:	mov	r7, r2
   1b878:	movt	r0, #1
   1b87c:	bl	11c90 <getenv@plt>
   1b880:	mov	r2, r7
   1b884:	mov	ip, r5
   1b888:	cmp	r0, #0
   1b88c:	beq	1c2c4 <argp_failure@@Base+0x29cc>
   1b890:	mov	r0, #0
   1b894:	str	r0, [ip, #24]
   1b898:	mov	r0, #1
   1b89c:	str	r0, [ip, #16]
   1b8a0:	ldrb	r0, [r9]
   1b8a4:	ldr	r5, [ip, #20]
   1b8a8:	str	r8, [fp, #-32]	; 0xffffffe0
   1b8ac:	subs	r1, r0, #58	; 0x3a
   1b8b0:	movne	r1, r4
   1b8b4:	cmp	r5, #0
   1b8b8:	str	r1, [fp, #-44]	; 0xffffffd4
   1b8bc:	beq	1b928 <argp_failure@@Base+0x2030>
   1b8c0:	ldrb	r0, [r5]
   1b8c4:	cmp	r0, #0
   1b8c8:	beq	1b928 <argp_failure@@Base+0x2030>
   1b8cc:	str	r2, [fp, #-36]	; 0xffffffdc
   1b8d0:	add	r8, r5, #1
   1b8d4:	mov	r0, r9
   1b8d8:	mov	r7, ip
   1b8dc:	str	r8, [ip, #20]
   1b8e0:	ldrb	r4, [r5]
   1b8e4:	mov	r1, r4
   1b8e8:	bl	11d44 <strchr@plt>
   1b8ec:	ldrb	r1, [r5, #1]
   1b8f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b8f4:	cmp	r1, #0
   1b8f8:	orr	r1, r4, #1
   1b8fc:	addeq	r6, r6, #1
   1b900:	streq	r6, [r7]
   1b904:	cmp	r1, #59	; 0x3b
   1b908:	cmpne	r0, #0
   1b90c:	bne	1b988 <argp_failure@@Base+0x2090>
   1b910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b914:	cmp	r0, #0
   1b918:	bne	1c2f8 <argp_failure@@Base+0x2a00>
   1b91c:	str	r4, [r7, #8]
   1b920:	mov	r4, #63	; 0x3f
   1b924:	b	1c2b8 <argp_failure@@Base+0x29c0>
   1b928:	mov	r3, ip
   1b92c:	str	r9, [sp, #48]	; 0x30
   1b930:	mov	r5, ip
   1b934:	ldr	r9, [r3, #32]!
   1b938:	cmp	r9, r6
   1b93c:	strgt	r6, [r3]
   1b940:	movgt	r9, r6
   1b944:	ldr	r7, [r5, #28]!
   1b948:	cmp	r7, r6
   1b94c:	strgt	r6, [r5]
   1b950:	movgt	r7, r6
   1b954:	ldr	r4, [ip, #24]
   1b958:	cmp	r4, #1
   1b95c:	bne	1be00 <argp_failure@@Base+0x2508>
   1b960:	cmp	r7, r9
   1b964:	cmpne	r9, r6
   1b968:	bne	1ba0c <argp_failure@@Base+0x2114>
   1b96c:	cmp	r9, r6
   1b970:	mov	r1, r5
   1b974:	mov	r0, r6
   1b978:	bne	1bdac <argp_failure@@Base+0x24b4>
   1b97c:	cmp	r6, r2
   1b980:	blt	1bdd0 <argp_failure@@Base+0x24d8>
   1b984:	b	1bdec <argp_failure@@Base+0x24f4>
   1b988:	ldrb	r2, [r0]
   1b98c:	ldrb	r1, [r0, #1]
   1b990:	cmp	r2, #87	; 0x57
   1b994:	bne	1b9e4 <argp_failure@@Base+0x20ec>
   1b998:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b99c:	cmp	r2, #0
   1b9a0:	beq	1b9e4 <argp_failure@@Base+0x20ec>
   1b9a4:	cmp	r1, #59	; 0x3b
   1b9a8:	bne	1b9e4 <argp_failure@@Base+0x20ec>
   1b9ac:	ldrb	r0, [r8]
   1b9b0:	cmp	r0, #0
   1b9b4:	bne	1c328 <argp_failure@@Base+0x2a30>
   1b9b8:	cmp	r6, r3
   1b9bc:	bne	1c320 <argp_failure@@Base+0x2a28>
   1b9c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b9c4:	cmp	r0, #0
   1b9c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b9cc:	bne	1c420 <argp_failure@@Base+0x2b28>
   1b9d0:	str	r4, [r7, #8]
   1b9d4:	ldrb	r4, [r9]
   1b9d8:	cmp	r4, #58	; 0x3a
   1b9dc:	movwne	r4, #63	; 0x3f
   1b9e0:	b	1c2b8 <argp_failure@@Base+0x29c0>
   1b9e4:	cmp	r1, #58	; 0x3a
   1b9e8:	bne	1c2b8 <argp_failure@@Base+0x29c0>
   1b9ec:	ldrb	r0, [r0, #2]
   1b9f0:	ldrb	r1, [r8]
   1b9f4:	cmp	r0, #58	; 0x3a
   1b9f8:	bne	1bf08 <argp_failure@@Base+0x2610>
   1b9fc:	cmp	r1, #0
   1ba00:	bne	1bf10 <argp_failure@@Base+0x2618>
   1ba04:	mov	r0, #0
   1ba08:	b	1c3e8 <argp_failure@@Base+0x2af0>
   1ba0c:	cmp	r6, r9
   1ba10:	str	r4, [sp, #28]
   1ba14:	str	r5, [sp, #56]	; 0x38
   1ba18:	str	r7, [fp, #-40]	; 0xffffffd8
   1ba1c:	str	r3, [sp, #52]	; 0x34
   1ba20:	str	r2, [fp, #-36]	; 0xffffffdc
   1ba24:	ble	1bd88 <argp_failure@@Base+0x2490>
   1ba28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba2c:	cmp	r0, r9
   1ba30:	bge	1bd88 <argp_failure@@Base+0x2490>
   1ba34:	add	r0, r8, r9, lsl #2
   1ba38:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1ba3c:	mov	r2, r6
   1ba40:	str	r0, [fp, #-52]	; 0xffffffcc
   1ba44:	sub	r0, r8, r9, lsl #2
   1ba48:	str	r0, [sp, #32]
   1ba4c:	rsb	r0, r9, #1
   1ba50:	add	r0, r8, r0, lsl #2
   1ba54:	str	r0, [sp, #44]	; 0x2c
   1ba58:	mvn	r0, r9
   1ba5c:	str	r0, [fp, #-56]	; 0xffffffc8
   1ba60:	add	r0, r8, r0, lsl #2
   1ba64:	add	r0, r0, #4
   1ba68:	str	r0, [sp, #24]
   1ba6c:	add	r0, r8, #4
   1ba70:	str	r0, [sp, #60]	; 0x3c
   1ba74:	b	1ba88 <argp_failure@@Base+0x2190>
   1ba78:	mov	r2, sl
   1ba7c:	cmp	r2, r9
   1ba80:	cmpgt	r9, lr
   1ba84:	ble	1bd88 <argp_failure@@Base+0x2490>
   1ba88:	sub	r4, r9, lr
   1ba8c:	sub	r0, r2, r9
   1ba90:	cmp	r0, r4
   1ba94:	ble	1bb44 <argp_failure@@Base+0x224c>
   1ba98:	sub	sl, r2, r4
   1ba9c:	cmp	r4, #1
   1baa0:	blt	1ba78 <argp_failure@@Base+0x2180>
   1baa4:	mov	r3, #0
   1baa8:	cmp	r4, #4
   1baac:	bcc	1bc2c <argp_failure@@Base+0x2334>
   1bab0:	add	r5, r8, r2, lsl #2
   1bab4:	add	r1, r8, lr, lsl #2
   1bab8:	cmp	r1, r5
   1babc:	bcs	1bad0 <argp_failure@@Base+0x21d8>
   1bac0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bac4:	add	r5, r8, sl, lsl #2
   1bac8:	cmp	r5, r0
   1bacc:	bcc	1bc2c <argp_failure@@Base+0x2334>
   1bad0:	bic	r3, r4, #3
   1bad4:	mov	r0, #1
   1bad8:	str	sl, [sp, #40]	; 0x28
   1badc:	subs	r5, r3, #4
   1bae0:	add	r5, r0, r5, lsr #2
   1bae4:	and	r0, r5, #1
   1bae8:	str	r0, [sp, #36]	; 0x24
   1baec:	beq	1bbe8 <argp_failure@@Base+0x22f0>
   1baf0:	sub	r8, r5, r0
   1baf4:	ldr	r0, [sp, #24]
   1baf8:	add	r5, r2, lr
   1bafc:	mov	r7, #0
   1bb00:	add	sl, r0, r5, lsl #2
   1bb04:	mov	r5, #0
   1bb08:	add	ip, r1, r5
   1bb0c:	add	r0, sl, r5
   1bb10:	add	r5, r5, #32
   1bb14:	subs	r8, r8, #2
   1bb18:	add	r7, r7, #8
   1bb1c:	vld1.32	{d16-d17}, [r0]
   1bb20:	vld1.32	{d18-d19}, [ip]
   1bb24:	vst1.32	{d16-d17}, [ip]!
   1bb28:	vst1.32	{d18-d19}, [r0]!
   1bb2c:	vld1.32	{d16-d17}, [r0]
   1bb30:	vld1.32	{d18-d19}, [ip]
   1bb34:	vst1.32	{d16-d17}, [ip]
   1bb38:	vst1.32	{d18-d19}, [r0]
   1bb3c:	bne	1bb08 <argp_failure@@Base+0x2210>
   1bb40:	b	1bbec <argp_failure@@Base+0x22f4>
   1bb44:	cmp	r0, #1
   1bb48:	blt	1bd7c <argp_failure@@Base+0x2484>
   1bb4c:	mov	sl, #0
   1bb50:	cmp	r0, #3
   1bb54:	bls	1bcf8 <argp_failure@@Base+0x2400>
   1bb58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb5c:	add	r1, r3, r2, lsl #2
   1bb60:	add	r8, r3, lr, lsl #2
   1bb64:	cmp	r8, r1
   1bb68:	bcs	1bb84 <argp_failure@@Base+0x228c>
   1bb6c:	ldr	r3, [sp, #32]
   1bb70:	add	r1, r2, lr
   1bb74:	add	r1, r3, r1, lsl #2
   1bb78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bb7c:	cmp	r3, r1
   1bb80:	bcc	1bcf8 <argp_failure@@Base+0x2400>
   1bb84:	bic	sl, r0, #3
   1bb88:	mov	r3, #1
   1bb8c:	subs	r1, sl, #4
   1bb90:	add	r1, r3, r1, lsr #2
   1bb94:	and	r3, r1, #1
   1bb98:	str	r3, [sp, #40]	; 0x28
   1bb9c:	beq	1bcb8 <argp_failure@@Base+0x23c0>
   1bba0:	sub	r7, r3, r1
   1bba4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bba8:	mov	r1, #0
   1bbac:	mov	ip, #32
   1bbb0:	mov	r5, r3
   1bbb4:	mov	r4, r8
   1bbb8:	adds	r7, r7, #2
   1bbbc:	add	r1, r1, #8
   1bbc0:	vld1.32	{d16-d17}, [r5]!
   1bbc4:	vld1.32	{d18-d19}, [r4]!
   1bbc8:	vst1.32	{d16-d17}, [r8], ip
   1bbcc:	vst1.32	{d18-d19}, [r3], ip
   1bbd0:	vld1.32	{d16-d17}, [r5]
   1bbd4:	vld1.32	{d18-d19}, [r4]
   1bbd8:	vst1.32	{d16-d17}, [r4]
   1bbdc:	vst1.32	{d18-d19}, [r5]
   1bbe0:	bne	1bbb0 <argp_failure@@Base+0x22b8>
   1bbe4:	b	1bcbc <argp_failure@@Base+0x23c4>
   1bbe8:	mov	r7, #0
   1bbec:	ldr	r0, [sp, #36]	; 0x24
   1bbf0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1bbf4:	ldr	sl, [sp, #40]	; 0x28
   1bbf8:	cmp	r0, #0
   1bbfc:	beq	1bc20 <argp_failure@@Base+0x2328>
   1bc00:	add	r0, r7, lr
   1bc04:	add	r1, r7, sl
   1bc08:	add	r0, r8, r0, lsl #2
   1bc0c:	add	r1, r8, r1, lsl #2
   1bc10:	vld1.32	{d16-d17}, [r1]
   1bc14:	vld1.32	{d18-d19}, [r0]
   1bc18:	vst1.32	{d16-d17}, [r0]
   1bc1c:	vst1.32	{d18-d19}, [r1]
   1bc20:	ldr	ip, [fp, #16]
   1bc24:	cmp	r4, r3
   1bc28:	beq	1ba78 <argp_failure@@Base+0x2180>
   1bc2c:	mvn	r0, r3
   1bc30:	tst	r4, #1
   1bc34:	add	r1, r9, r0
   1bc38:	beq	1bc58 <argp_failure@@Base+0x2360>
   1bc3c:	add	r0, r3, lr
   1bc40:	add	r5, r3, sl
   1bc44:	orr	r3, r3, #1
   1bc48:	ldr	r7, [r8, r0, lsl #2]
   1bc4c:	ldr	r4, [r8, r5, lsl #2]
   1bc50:	str	r4, [r8, r0, lsl #2]
   1bc54:	str	r7, [r8, r5, lsl #2]
   1bc58:	cmp	r1, lr
   1bc5c:	beq	1ba78 <argp_failure@@Base+0x2180>
   1bc60:	ldr	r4, [sp, #60]	; 0x3c
   1bc64:	add	r0, lr, r3
   1bc68:	sub	r1, r9, r3
   1bc6c:	add	r4, r4, r0, lsl #2
   1bc70:	add	r0, r2, lr
   1bc74:	ldr	r2, [sp, #44]	; 0x2c
   1bc78:	add	r0, r0, r3
   1bc7c:	add	r2, r2, r0, lsl #2
   1bc80:	ldr	r0, [r4, #-4]
   1bc84:	ldr	r3, [r2, #-4]
   1bc88:	sub	r1, r1, #2
   1bc8c:	cmp	lr, r1
   1bc90:	str	r3, [r4, #-4]
   1bc94:	str	r0, [r2, #-4]
   1bc98:	ldr	r0, [r4]
   1bc9c:	ldr	r3, [r2]
   1bca0:	str	r3, [r4]
   1bca4:	str	r0, [r2]
   1bca8:	add	r2, r2, #8
   1bcac:	add	r4, r4, #8
   1bcb0:	bne	1bc80 <argp_failure@@Base+0x2388>
   1bcb4:	b	1ba78 <argp_failure@@Base+0x2180>
   1bcb8:	mov	r1, #0
   1bcbc:	ldr	r3, [sp, #40]	; 0x28
   1bcc0:	ldr	ip, [fp, #16]
   1bcc4:	cmp	r3, #0
   1bcc8:	beq	1bcf0 <argp_failure@@Base+0x23f8>
   1bccc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1bcd0:	add	r3, r1, lr
   1bcd4:	add	r1, r1, r9
   1bcd8:	add	r3, r4, r3, lsl #2
   1bcdc:	add	r1, r4, r1, lsl #2
   1bce0:	vld1.32	{d16-d17}, [r1]
   1bce4:	vld1.32	{d18-d19}, [r3]
   1bce8:	vst1.32	{d16-d17}, [r3]
   1bcec:	vst1.32	{d18-d19}, [r1]
   1bcf0:	cmp	r0, sl
   1bcf4:	beq	1bd7c <argp_failure@@Base+0x2484>
   1bcf8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1bcfc:	tst	r0, #1
   1bd00:	mov	r4, sl
   1bd04:	add	r1, r2, r1
   1bd08:	beq	1bd2c <argp_failure@@Base+0x2434>
   1bd0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd10:	add	r7, sl, r9
   1bd14:	add	r4, sl, lr
   1bd18:	ldr	r5, [r3, r7, lsl #2]
   1bd1c:	ldr	r8, [r3, r4, lsl #2]
   1bd20:	str	r5, [r3, r4, lsl #2]
   1bd24:	orr	r4, sl, #1
   1bd28:	str	r8, [r3, r7, lsl #2]
   1bd2c:	cmp	r1, sl
   1bd30:	beq	1bd7c <argp_failure@@Base+0x2484>
   1bd34:	ldr	r3, [sp, #60]	; 0x3c
   1bd38:	add	r1, lr, r4
   1bd3c:	add	r4, r9, r4
   1bd40:	add	r1, r3, r1, lsl #2
   1bd44:	add	r3, r3, r4, lsl #2
   1bd48:	sub	r4, r4, r2
   1bd4c:	ldr	r7, [r1, #-4]
   1bd50:	ldr	r5, [r3, #-4]
   1bd54:	adds	r4, r4, #2
   1bd58:	str	r5, [r1, #-4]
   1bd5c:	str	r7, [r3, #-4]
   1bd60:	ldr	r7, [r1]
   1bd64:	ldr	r5, [r3]
   1bd68:	str	r5, [r1]
   1bd6c:	str	r7, [r3]
   1bd70:	add	r1, r1, #8
   1bd74:	add	r3, r3, #8
   1bd78:	bne	1bd4c <argp_failure@@Base+0x2454>
   1bd7c:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1bd80:	add	lr, r0, lr
   1bd84:	b	1ba7c <argp_failure@@Base+0x2184>
   1bd88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd8c:	ldr	r3, [sp, #52]	; 0x34
   1bd90:	ldr	r5, [sp, #56]	; 0x38
   1bd94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd98:	ldr	r4, [sp, #28]
   1bd9c:	add	r0, r0, r6
   1bda0:	mov	r1, r3
   1bda4:	sub	r0, r0, r9
   1bda8:	str	r0, [r5]
   1bdac:	mov	r7, r0
   1bdb0:	str	r6, [r1]
   1bdb4:	cmp	r6, r2
   1bdb8:	blt	1bdd0 <argp_failure@@Base+0x24d8>
   1bdbc:	b	1bdec <argp_failure@@Base+0x24f4>
   1bdc0:	add	r6, r6, #1
   1bdc4:	cmp	r2, r6
   1bdc8:	str	r6, [ip]
   1bdcc:	beq	1bdf4 <argp_failure@@Base+0x24fc>
   1bdd0:	ldr	r0, [r8, r6, lsl #2]
   1bdd4:	ldrb	r1, [r0]
   1bdd8:	cmp	r1, #45	; 0x2d
   1bddc:	bne	1bdc0 <argp_failure@@Base+0x24c8>
   1bde0:	ldrb	r0, [r0, #1]
   1bde4:	cmp	r0, #0
   1bde8:	beq	1bdc0 <argp_failure@@Base+0x24c8>
   1bdec:	mov	r9, r6
   1bdf0:	b	1bdf8 <argp_failure@@Base+0x2500>
   1bdf4:	mov	r9, r2
   1bdf8:	mov	r6, r9
   1bdfc:	str	r9, [r3]
   1be00:	cmp	r6, r2
   1be04:	beq	1c2ac <argp_failure@@Base+0x29b4>
   1be08:	mov	sl, r4
   1be0c:	movw	r4, #57291	; 0xdfcb
   1be10:	ldr	r0, [r8, r6, lsl #2]
   1be14:	str	r5, [sp, #56]	; 0x38
   1be18:	str	r7, [fp, #-40]	; 0xffffffd8
   1be1c:	str	r3, [sp, #52]	; 0x34
   1be20:	str	r2, [fp, #-36]	; 0xffffffdc
   1be24:	movt	r4, #1
   1be28:	mov	r1, r4
   1be2c:	bl	11ab0 <strcmp@plt>
   1be30:	cmp	r0, #0
   1be34:	beq	1beb8 <argp_failure@@Base+0x25c0>
   1be38:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be3c:	ldr	ip, [fp, #16]
   1be40:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1be44:	cmp	r6, r2
   1be48:	beq	1c2ac <argp_failure@@Base+0x29b4>
   1be4c:	ldr	r5, [r8, r6, lsl #2]
   1be50:	mov	r3, r4
   1be54:	mvn	r4, #0
   1be58:	ldrb	r0, [r5]
   1be5c:	cmp	r0, #45	; 0x2d
   1be60:	bne	1bef0 <argp_failure@@Base+0x25f8>
   1be64:	mov	r7, r5
   1be68:	ldrb	r1, [r7, #1]!
   1be6c:	cmp	r1, #0
   1be70:	beq	1bef0 <argp_failure@@Base+0x25f8>
   1be74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be78:	cmp	r0, #0
   1be7c:	beq	1c410 <argp_failure@@Base+0x2b18>
   1be80:	ldr	r9, [fp, #12]
   1be84:	cmp	r1, #45	; 0x2d
   1be88:	bne	1c374 <argp_failure@@Base+0x2a7c>
   1be8c:	add	r0, r5, #2
   1be90:	mov	r1, r8
   1be94:	str	r0, [ip, #20]
   1be98:	ldr	r0, [fp, #8]
   1be9c:	stm	sp, {r0, r9, ip}
   1bea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bea4:	str	r3, [sp, #16]
   1bea8:	str	r0, [sp, #12]
   1beac:	mov	r0, r2
   1beb0:	ldr	r2, [sp, #48]	; 0x30
   1beb4:	b	1c364 <argp_failure@@Base+0x2a6c>
   1beb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bebc:	ldr	ip, [fp, #16]
   1bec0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1bec4:	add	r2, r6, #1
   1bec8:	cmp	r0, r9
   1becc:	str	r2, [ip]
   1bed0:	cmpne	r9, r2
   1bed4:	bne	1bf20 <argp_failure@@Base+0x2628>
   1bed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bedc:	ldr	r1, [sp, #56]	; 0x38
   1bee0:	cmp	r0, r9
   1bee4:	mov	r0, r2
   1bee8:	beq	1c294 <argp_failure@@Base+0x299c>
   1beec:	b	1c29c <argp_failure@@Base+0x29a4>
   1bef0:	cmp	sl, #0
   1bef4:	addne	r0, r6, #1
   1bef8:	strne	r5, [ip, #12]
   1befc:	movne	r4, #1
   1bf00:	strne	r0, [ip]
   1bf04:	b	1c2b8 <argp_failure@@Base+0x29c0>
   1bf08:	cmp	r1, #0
   1bf0c:	beq	1c2cc <argp_failure@@Base+0x29d4>
   1bf10:	add	r0, r6, #1
   1bf14:	str	r8, [r7, #12]
   1bf18:	str	r0, [r7]
   1bf1c:	b	1c3ec <argp_failure@@Base+0x2af4>
   1bf20:	cmp	r6, r9
   1bf24:	str	r2, [sp, #48]	; 0x30
   1bf28:	blt	1c274 <argp_failure@@Base+0x297c>
   1bf2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bf30:	cmp	r0, r9
   1bf34:	bge	1c274 <argp_failure@@Base+0x297c>
   1bf38:	add	r0, r8, r9, lsl #2
   1bf3c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1bf40:	str	r0, [fp, #-44]	; 0xffffffd4
   1bf44:	sub	r0, r8, r9, lsl #2
   1bf48:	str	r0, [sp, #44]	; 0x2c
   1bf4c:	rsb	r0, r9, #1
   1bf50:	add	r0, r8, r0, lsl #2
   1bf54:	str	r0, [fp, #-56]	; 0xffffffc8
   1bf58:	mvn	r0, r9
   1bf5c:	str	r0, [fp, #-48]	; 0xffffffd0
   1bf60:	add	r0, r8, r0, lsl #2
   1bf64:	add	r0, r0, #4
   1bf68:	str	r0, [sp, #40]	; 0x28
   1bf6c:	add	r0, r8, #4
   1bf70:	str	r0, [fp, #-52]	; 0xffffffcc
   1bf74:	ldr	r0, [sp, #48]	; 0x30
   1bf78:	b	1bf8c <argp_failure@@Base+0x2694>
   1bf7c:	mov	r0, r3
   1bf80:	cmp	r0, r9
   1bf84:	cmpgt	r9, ip
   1bf88:	ble	1c274 <argp_failure@@Base+0x297c>
   1bf8c:	sub	r4, r9, ip
   1bf90:	sub	sl, r0, r9
   1bf94:	cmp	sl, r4
   1bf98:	ble	1c044 <argp_failure@@Base+0x274c>
   1bf9c:	sub	r3, r0, r4
   1bfa0:	cmp	r4, #1
   1bfa4:	blt	1bf7c <argp_failure@@Base+0x2684>
   1bfa8:	mov	r1, #0
   1bfac:	cmp	r4, #4
   1bfb0:	bcc	1c124 <argp_failure@@Base+0x282c>
   1bfb4:	add	r2, r8, r0, lsl #2
   1bfb8:	add	r7, r8, ip, lsl #2
   1bfbc:	cmp	r7, r2
   1bfc0:	bcs	1bfd4 <argp_failure@@Base+0x26dc>
   1bfc4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1bfc8:	add	r2, r8, r3, lsl #2
   1bfcc:	cmp	r2, r5
   1bfd0:	bcc	1c124 <argp_failure@@Base+0x282c>
   1bfd4:	bic	r1, r4, #3
   1bfd8:	mov	r6, #1
   1bfdc:	subs	r2, r1, #4
   1bfe0:	add	r2, r6, r2, lsr #2
   1bfe4:	and	r6, r2, #1
   1bfe8:	str	r6, [sp, #60]	; 0x3c
   1bfec:	beq	1c0e4 <argp_failure@@Base+0x27ec>
   1bff0:	ldr	r5, [sp, #40]	; 0x28
   1bff4:	sub	r2, r6, r2
   1bff8:	add	r6, ip, r0
   1bffc:	add	lr, r5, r6, lsl #2
   1c000:	mov	r5, #0
   1c004:	mov	r6, #0
   1c008:	add	sl, r7, r5
   1c00c:	add	r8, lr, r5
   1c010:	adds	r2, r2, #2
   1c014:	add	r5, r5, #32
   1c018:	add	r6, r6, #8
   1c01c:	vld1.32	{d16-d17}, [r8]
   1c020:	vld1.32	{d18-d19}, [sl]
   1c024:	vst1.32	{d16-d17}, [sl]!
   1c028:	vst1.32	{d18-d19}, [r8]!
   1c02c:	vld1.32	{d16-d17}, [r8]
   1c030:	vld1.32	{d18-d19}, [sl]
   1c034:	vst1.32	{d16-d17}, [sl]
   1c038:	vst1.32	{d18-d19}, [r8]
   1c03c:	bne	1c008 <argp_failure@@Base+0x2710>
   1c040:	b	1c0e8 <argp_failure@@Base+0x27f0>
   1c044:	cmp	sl, #1
   1c048:	blt	1c26c <argp_failure@@Base+0x2974>
   1c04c:	mov	r1, #0
   1c050:	cmp	sl, #3
   1c054:	bls	1c1ec <argp_failure@@Base+0x28f4>
   1c058:	add	r2, r8, r0, lsl #2
   1c05c:	add	r7, r8, ip, lsl #2
   1c060:	cmp	r7, r2
   1c064:	bcs	1c080 <argp_failure@@Base+0x2788>
   1c068:	ldr	r3, [sp, #44]	; 0x2c
   1c06c:	add	r2, ip, r0
   1c070:	add	r2, r3, r2, lsl #2
   1c074:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c078:	cmp	r3, r2
   1c07c:	bcc	1c1ec <argp_failure@@Base+0x28f4>
   1c080:	bic	r1, sl, #3
   1c084:	mov	r3, #1
   1c088:	subs	r2, r1, #4
   1c08c:	add	r2, r3, r2, lsr #2
   1c090:	and	r3, r2, #1
   1c094:	str	r3, [sp, #60]	; 0x3c
   1c098:	beq	1c1b0 <argp_failure@@Base+0x28b8>
   1c09c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1c0a0:	sub	r6, r3, r2
   1c0a4:	mov	r4, #0
   1c0a8:	mov	lr, #32
   1c0ac:	mov	r2, r5
   1c0b0:	mov	r3, r7
   1c0b4:	adds	r6, r6, #2
   1c0b8:	add	r4, r4, #8
   1c0bc:	vld1.32	{d16-d17}, [r2]!
   1c0c0:	vld1.32	{d18-d19}, [r3]!
   1c0c4:	vst1.32	{d16-d17}, [r7], lr
   1c0c8:	vst1.32	{d18-d19}, [r5], lr
   1c0cc:	vld1.32	{d16-d17}, [r2]
   1c0d0:	vld1.32	{d18-d19}, [r3]
   1c0d4:	vst1.32	{d16-d17}, [r3]
   1c0d8:	vst1.32	{d18-d19}, [r2]
   1c0dc:	bne	1c0ac <argp_failure@@Base+0x27b4>
   1c0e0:	b	1c1b4 <argp_failure@@Base+0x28bc>
   1c0e4:	mov	r6, #0
   1c0e8:	ldr	r2, [sp, #60]	; 0x3c
   1c0ec:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1c0f0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1c0f4:	cmp	r2, #0
   1c0f8:	beq	1c11c <argp_failure@@Base+0x2824>
   1c0fc:	add	r2, r6, ip
   1c100:	add	r7, r6, r3
   1c104:	add	r2, r8, r2, lsl #2
   1c108:	add	r7, r8, r7, lsl #2
   1c10c:	vld1.32	{d16-d17}, [r7]
   1c110:	vld1.32	{d18-d19}, [r2]
   1c114:	vst1.32	{d16-d17}, [r2]
   1c118:	vst1.32	{d18-d19}, [r7]
   1c11c:	cmp	r4, r1
   1c120:	beq	1bf7c <argp_failure@@Base+0x2684>
   1c124:	mvn	r2, r1
   1c128:	tst	r4, #1
   1c12c:	add	r2, r9, r2
   1c130:	beq	1c150 <argp_failure@@Base+0x2858>
   1c134:	add	r7, r1, ip
   1c138:	add	r5, r1, r3
   1c13c:	orr	r1, r1, #1
   1c140:	ldr	r6, [r8, r7, lsl #2]
   1c144:	ldr	r4, [r8, r5, lsl #2]
   1c148:	str	r4, [r8, r7, lsl #2]
   1c14c:	str	r6, [r8, r5, lsl #2]
   1c150:	cmp	r2, ip
   1c154:	beq	1bf7c <argp_failure@@Base+0x2684>
   1c158:	add	r0, ip, r0
   1c15c:	sub	r2, r9, r1
   1c160:	add	r7, ip, r1
   1c164:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1c168:	add	r0, r0, r1
   1c16c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c170:	add	r7, r4, r7, lsl #2
   1c174:	add	r0, r1, r0, lsl #2
   1c178:	ldr	r1, [r7, #-4]
   1c17c:	ldr	r6, [r0, #-4]
   1c180:	sub	r2, r2, #2
   1c184:	cmp	ip, r2
   1c188:	str	r6, [r7, #-4]
   1c18c:	str	r1, [r0, #-4]
   1c190:	ldr	r1, [r7]
   1c194:	ldr	r6, [r0]
   1c198:	str	r6, [r7]
   1c19c:	str	r1, [r0]
   1c1a0:	add	r0, r0, #8
   1c1a4:	add	r7, r7, #8
   1c1a8:	bne	1c178 <argp_failure@@Base+0x2880>
   1c1ac:	b	1bf7c <argp_failure@@Base+0x2684>
   1c1b0:	mov	r4, #0
   1c1b4:	ldr	r2, [sp, #60]	; 0x3c
   1c1b8:	cmp	r2, #0
   1c1bc:	beq	1c1e0 <argp_failure@@Base+0x28e8>
   1c1c0:	add	r2, r4, ip
   1c1c4:	add	r3, r4, r9
   1c1c8:	add	r2, r8, r2, lsl #2
   1c1cc:	add	r3, r8, r3, lsl #2
   1c1d0:	vld1.32	{d16-d17}, [r3]
   1c1d4:	vld1.32	{d18-d19}, [r2]
   1c1d8:	vst1.32	{d16-d17}, [r2]
   1c1dc:	vst1.32	{d18-d19}, [r3]
   1c1e0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1c1e4:	cmp	sl, r1
   1c1e8:	beq	1c26c <argp_failure@@Base+0x2974>
   1c1ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c1f0:	tst	sl, #1
   1c1f4:	mov	r3, r1
   1c1f8:	add	r2, r0, r2
   1c1fc:	beq	1c21c <argp_failure@@Base+0x2924>
   1c200:	add	r6, r1, r9
   1c204:	add	r3, r1, ip
   1c208:	ldr	r5, [r8, r6, lsl #2]
   1c20c:	ldr	r7, [r8, r3, lsl #2]
   1c210:	str	r5, [r8, r3, lsl #2]
   1c214:	orr	r3, r1, #1
   1c218:	str	r7, [r8, r6, lsl #2]
   1c21c:	cmp	r2, r1
   1c220:	beq	1c26c <argp_failure@@Base+0x2974>
   1c224:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c228:	add	r1, ip, r3
   1c22c:	add	r3, r9, r3
   1c230:	add	r1, r2, r1, lsl #2
   1c234:	add	r2, r2, r3, lsl #2
   1c238:	sub	r3, r3, r0
   1c23c:	ldr	r7, [r1, #-4]
   1c240:	ldr	r6, [r2, #-4]
   1c244:	adds	r3, r3, #2
   1c248:	str	r6, [r1, #-4]
   1c24c:	str	r7, [r2, #-4]
   1c250:	ldr	r7, [r1]
   1c254:	ldr	r6, [r2]
   1c258:	str	r6, [r1]
   1c25c:	str	r7, [r2]
   1c260:	add	r1, r1, #8
   1c264:	add	r2, r2, #8
   1c268:	bne	1c23c <argp_failure@@Base+0x2944>
   1c26c:	add	ip, sl, ip
   1c270:	b	1bf80 <argp_failure@@Base+0x2688>
   1c274:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c278:	ldr	r2, [sp, #48]	; 0x30
   1c27c:	ldr	r1, [sp, #56]	; 0x38
   1c280:	ldr	ip, [fp, #16]
   1c284:	add	r0, r0, r2
   1c288:	sub	r0, r0, r9
   1c28c:	str	r0, [r1]
   1c290:	ldr	r1, [sp, #52]	; 0x34
   1c294:	str	r2, [r1]
   1c298:	str	r0, [fp, #-40]	; 0xffffffd8
   1c29c:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1c2a0:	str	lr, [ip]
   1c2a4:	str	lr, [ip, #32]
   1c2a8:	mov	r9, lr
   1c2ac:	cmp	r7, r9
   1c2b0:	mvn	r4, #0
   1c2b4:	strne	r7, [ip]
   1c2b8:	mov	r0, r4
   1c2bc:	sub	sp, fp, #28
   1c2c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2c4:	mov	r0, #1
   1c2c8:	b	1b894 <argp_failure@@Base+0x1f9c>
   1c2cc:	cmp	r6, r3
   1c2d0:	bne	1c3d8 <argp_failure@@Base+0x2ae0>
   1c2d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c2d8:	cmp	r0, #0
   1c2dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c2e0:	bne	1c444 <argp_failure@@Base+0x2b4c>
   1c2e4:	str	r4, [r7, #8]
   1c2e8:	ldrb	r4, [r9]
   1c2ec:	cmp	r4, #58	; 0x3a
   1c2f0:	movwne	r4, #63	; 0x3f
   1c2f4:	b	1c3ec <argp_failure@@Base+0x2af4>
   1c2f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c2fc:	movw	r1, #59176	; 0xe728
   1c300:	mov	r3, r4
   1c304:	movt	r1, #1
   1c308:	ldr	r2, [r0]
   1c30c:	movw	r0, #62384	; 0xf3b0
   1c310:	movt	r0, #2
   1c314:	ldr	r0, [r0]
   1c318:	bl	11d5c <fprintf@plt>
   1c31c:	b	1b91c <argp_failure@@Base+0x2024>
   1c320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c324:	ldr	r8, [r0, r6, lsl #2]
   1c328:	ldr	r2, [fp, #8]
   1c32c:	movw	r1, #59245	; 0xe76d
   1c330:	str	r8, [r7, #12]
   1c334:	mov	r0, #0
   1c338:	movt	r1, #1
   1c33c:	str	r0, [r7, #12]
   1c340:	str	r8, [r7, #20]
   1c344:	str	r2, [sp]
   1c348:	stmib	sp, {r0, r7}
   1c34c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c350:	str	r1, [sp, #16]
   1c354:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c358:	mov	r2, r9
   1c35c:	str	r0, [sp, #12]
   1c360:	mov	r0, r3
   1c364:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c368:	bl	1c468 <argp_failure@@Base+0x2b70>
   1c36c:	sub	sp, fp, #28
   1c370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c374:	cmp	r9, #0
   1c378:	beq	1c410 <argp_failure@@Base+0x2b18>
   1c37c:	ldrb	r0, [r5, #2]
   1c380:	cmp	r0, #0
   1c384:	beq	1c3f8 <argp_failure@@Base+0x2b00>
   1c388:	ldr	r1, [fp, #8]
   1c38c:	movw	r0, #57292	; 0xdfcc
   1c390:	str	r7, [ip, #20]
   1c394:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c398:	movt	r0, #1
   1c39c:	stm	sp, {r1, r9, ip}
   1c3a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c3a4:	str	r0, [sp, #16]
   1c3a8:	mov	r0, r2
   1c3ac:	ldr	r2, [sp, #48]	; 0x30
   1c3b0:	str	r1, [sp, #12]
   1c3b4:	mov	r1, r8
   1c3b8:	bl	1c468 <argp_failure@@Base+0x2b70>
   1c3bc:	ldr	ip, [fp, #16]
   1c3c0:	mov	r4, r0
   1c3c4:	cmn	r0, #1
   1c3c8:	bne	1c2b8 <argp_failure@@Base+0x29c0>
   1c3cc:	ldr	r6, [ip]
   1c3d0:	ldr	r5, [r8, r6, lsl #2]
   1c3d4:	b	1c410 <argp_failure@@Base+0x2b18>
   1c3d8:	add	r0, r6, #1
   1c3dc:	str	r0, [r7]
   1c3e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3e4:	ldr	r0, [r0, r6, lsl #2]
   1c3e8:	str	r0, [r7, #12]
   1c3ec:	mov	r0, #0
   1c3f0:	str	r0, [r7, #20]
   1c3f4:	b	1c2b8 <argp_failure@@Base+0x29c0>
   1c3f8:	ldr	r0, [sp, #48]	; 0x30
   1c3fc:	bl	11d44 <strchr@plt>
   1c400:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c404:	ldr	ip, [fp, #16]
   1c408:	cmp	r0, #0
   1c40c:	beq	1c388 <argp_failure@@Base+0x2a90>
   1c410:	ldr	r9, [sp, #48]	; 0x30
   1c414:	add	r5, r5, #1
   1c418:	str	r5, [ip, #20]
   1c41c:	b	1b8d0 <argp_failure@@Base+0x1fd8>
   1c420:	ldr	r2, [r0]
   1c424:	movw	r0, #62384	; 0xf3b0
   1c428:	movw	r1, #59204	; 0xe744
   1c42c:	mov	r3, r4
   1c430:	movt	r0, #2
   1c434:	movt	r1, #1
   1c438:	ldr	r0, [r0]
   1c43c:	bl	11d5c <fprintf@plt>
   1c440:	b	1b9d0 <argp_failure@@Base+0x20d8>
   1c444:	ldr	r2, [r0]
   1c448:	movw	r0, #62384	; 0xf3b0
   1c44c:	movw	r1, #59204	; 0xe744
   1c450:	mov	r3, r4
   1c454:	movt	r0, #2
   1c458:	movt	r1, #1
   1c45c:	ldr	r0, [r0]
   1c460:	bl	11d5c <fprintf@plt>
   1c464:	b	1c2e4 <argp_failure@@Base+0x29ec>
   1c468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c46c:	add	fp, sp, #28
   1c470:	sub	sp, sp, #44	; 0x2c
   1c474:	str	r0, [sp, #12]
   1c478:	ldr	r0, [fp, #16]
   1c47c:	ldr	r5, [fp, #8]
   1c480:	str	r2, [sp, #16]
   1c484:	str	r1, [sp, #20]
   1c488:	ldr	r9, [r0, #20]
   1c48c:	mov	r6, r9
   1c490:	b	1c498 <argp_failure@@Base+0x2ba0>
   1c494:	add	r6, r6, #1
   1c498:	ldrb	r0, [r6]
   1c49c:	cmp	r0, #0
   1c4a0:	cmpne	r0, #61	; 0x3d
   1c4a4:	bne	1c494 <argp_failure@@Base+0x2b9c>
   1c4a8:	ldr	sl, [r3]
   1c4ac:	mvn	ip, #0
   1c4b0:	str	r3, [fp, #-32]	; 0xffffffe0
   1c4b4:	cmp	sl, #0
   1c4b8:	beq	1c6c8 <argp_failure@@Base+0x2dd0>
   1c4bc:	sub	r4, r6, r9
   1c4c0:	mov	r8, #0
   1c4c4:	mov	r5, sl
   1c4c8:	mov	r7, r3
   1c4cc:	b	1c4e0 <argp_failure@@Base+0x2be8>
   1c4d0:	ldr	r5, [r7, #16]!
   1c4d4:	add	r8, r8, #1
   1c4d8:	cmp	r5, #0
   1c4dc:	beq	1c514 <argp_failure@@Base+0x2c1c>
   1c4e0:	mov	r0, r5
   1c4e4:	mov	r1, r9
   1c4e8:	mov	r2, r4
   1c4ec:	bl	11f24 <strncmp@plt>
   1c4f0:	cmp	r0, #0
   1c4f4:	bne	1c4d0 <argp_failure@@Base+0x2bd8>
   1c4f8:	mov	r0, r5
   1c4fc:	bl	11d2c <strlen@plt>
   1c500:	cmp	r4, r0
   1c504:	bne	1c4d0 <argp_failure@@Base+0x2bd8>
   1c508:	ldr	r5, [fp, #8]
   1c50c:	mov	ip, r8
   1c510:	b	1c778 <argp_failure@@Base+0x2e80>
   1c514:	cmp	sl, #0
   1c518:	beq	1c6f4 <argp_failure@@Base+0x2dfc>
   1c51c:	mvn	r0, #0
   1c520:	str	r4, [sp, #36]	; 0x24
   1c524:	mov	r4, #0
   1c528:	mov	r5, #0
   1c52c:	mov	r7, #0
   1c530:	str	r0, [sp, #24]
   1c534:	mov	r0, #0
   1c538:	str	r0, [sp, #32]
   1c53c:	mov	r0, #0
   1c540:	str	r0, [sp, #8]
   1c544:	mov	r0, #0
   1c548:	str	r0, [sp, #28]
   1c54c:	ldr	r2, [sp, #36]	; 0x24
   1c550:	mov	r0, sl
   1c554:	mov	r1, r9
   1c558:	bl	11f24 <strncmp@plt>
   1c55c:	cmp	r0, #0
   1c560:	beq	1c594 <argp_failure@@Base+0x2c9c>
   1c564:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c568:	mov	r1, r4
   1c56c:	add	r0, r3, r5, lsl #4
   1c570:	ldr	sl, [r0, #16]
   1c574:	cmp	sl, #0
   1c578:	beq	1c6e0 <argp_failure@@Base+0x2de8>
   1c57c:	ldr	r0, [fp, #16]
   1c580:	add	r1, r1, #16
   1c584:	add	r5, r5, #1
   1c588:	mov	r4, r1
   1c58c:	ldr	r9, [r0, #20]
   1c590:	b	1c54c <argp_failure@@Base+0x2c54>
   1c594:	cmp	r7, #0
   1c598:	beq	1c64c <argp_failure@@Base+0x2d54>
   1c59c:	ldr	r0, [fp, #12]
   1c5a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5a4:	cmp	r0, #0
   1c5a8:	bne	1c5d0 <argp_failure@@Base+0x2cd8>
   1c5ac:	add	r0, r3, r5, lsl #4
   1c5b0:	ldr	r2, [r7, #4]
   1c5b4:	ldr	r1, [r0, #4]
   1c5b8:	cmp	r2, r1
   1c5bc:	bne	1c5d0 <argp_failure@@Base+0x2cd8>
   1c5c0:	ldr	r1, [r0, #8]
   1c5c4:	ldr	r2, [r7, #8]
   1c5c8:	cmp	r2, r1
   1c5cc:	beq	1c684 <argp_failure@@Base+0x2d8c>
   1c5d0:	ldr	r0, [sp, #32]
   1c5d4:	mov	r1, r4
   1c5d8:	cmp	r0, #0
   1c5dc:	bne	1c56c <argp_failure@@Base+0x2c74>
   1c5e0:	ldr	r0, [fp, #20]
   1c5e4:	cmp	r0, #0
   1c5e8:	beq	1c660 <argp_failure@@Base+0x2d68>
   1c5ec:	ldr	r9, [sp, #28]
   1c5f0:	mov	r0, #0
   1c5f4:	str	r0, [sp, #32]
   1c5f8:	cmp	r9, #0
   1c5fc:	bne	1c674 <argp_failure@@Base+0x2d7c>
   1c600:	mov	r0, r8
   1c604:	bl	18134 <argp_parse@@Base+0x1a10>
   1c608:	cmp	r0, #0
   1c60c:	beq	1c6b4 <argp_failure@@Base+0x2dbc>
   1c610:	mov	r9, r0
   1c614:	mov	r0, #0
   1c618:	mov	r1, #0
   1c61c:	mov	r2, r8
   1c620:	str	r0, [sp, #32]
   1c624:	mov	r0, r9
   1c628:	bl	11da4 <memset@plt>
   1c62c:	ldr	r0, [sp, #24]
   1c630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c634:	mov	r1, #1
   1c638:	mov	r2, #1
   1c63c:	str	r1, [sp, #8]
   1c640:	mov	r1, r4
   1c644:	strb	r2, [r9, r0]
   1c648:	b	1c674 <argp_failure@@Base+0x2d7c>
   1c64c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c650:	mov	r1, r4
   1c654:	str	r5, [sp, #24]
   1c658:	add	r7, r3, r4
   1c65c:	b	1c56c <argp_failure@@Base+0x2c74>
   1c660:	ldr	r9, [sp, #28]
   1c664:	mov	r0, #1
   1c668:	str	r0, [sp, #32]
   1c66c:	cmp	r9, #0
   1c670:	beq	1c6a8 <argp_failure@@Base+0x2db0>
   1c674:	mov	r0, #1
   1c678:	str	r9, [sp, #28]
   1c67c:	strb	r0, [r9, r5]
   1c680:	b	1c56c <argp_failure@@Base+0x2c74>
   1c684:	ldr	r1, [sp, #32]
   1c688:	cmp	r1, #0
   1c68c:	bne	1c568 <argp_failure@@Base+0x2c70>
   1c690:	ldr	r0, [r0, #12]
   1c694:	ldr	r1, [r7, #12]
   1c698:	cmp	r1, r0
   1c69c:	mov	r1, r4
   1c6a0:	bne	1c5e0 <argp_failure@@Base+0x2ce8>
   1c6a4:	b	1c56c <argp_failure@@Base+0x2c74>
   1c6a8:	mov	r0, #0
   1c6ac:	str	r0, [sp, #28]
   1c6b0:	b	1c56c <argp_failure@@Base+0x2c74>
   1c6b4:	mov	r0, #1
   1c6b8:	str	r0, [sp, #32]
   1c6bc:	mov	r0, #0
   1c6c0:	str	r0, [sp, #28]
   1c6c4:	b	1c564 <argp_failure@@Base+0x2c6c>
   1c6c8:	mov	r0, #0
   1c6cc:	mov	r8, #0
   1c6d0:	mov	r7, #0
   1c6d4:	mov	sl, #0
   1c6d8:	mov	r4, #0
   1c6dc:	b	1c70c <argp_failure@@Base+0x2e14>
   1c6e0:	ldr	r5, [fp, #8]
   1c6e4:	ldr	ip, [sp, #24]
   1c6e8:	ldr	sl, [sp, #28]
   1c6ec:	ldr	r4, [sp, #8]
   1c6f0:	b	1c710 <argp_failure@@Base+0x2e18>
   1c6f4:	ldr	r5, [fp, #8]
   1c6f8:	mov	r0, #0
   1c6fc:	mov	r7, #0
   1c700:	mov	sl, #0
   1c704:	mov	r4, #0
   1c708:	mvn	ip, #0
   1c70c:	str	r0, [sp, #32]
   1c710:	cmp	sl, #0
   1c714:	ldreq	r0, [sp, #32]
   1c718:	cmpeq	r0, #0
   1c71c:	beq	1c770 <argp_failure@@Base+0x2e78>
   1c720:	ldr	r0, [fp, #20]
   1c724:	cmp	r0, #0
   1c728:	bne	1c8dc <argp_failure@@Base+0x2fe4>
   1c72c:	cmp	r4, #0
   1c730:	beq	1c73c <argp_failure@@Base+0x2e44>
   1c734:	mov	r0, sl
   1c738:	bl	17a00 <argp_parse@@Base+0x12dc>
   1c73c:	ldr	r0, [fp, #16]
   1c740:	ldr	r4, [r0, #20]
   1c744:	mov	r5, r0
   1c748:	mov	r0, r4
   1c74c:	bl	11d2c <strlen@plt>
   1c750:	mov	r1, #0
   1c754:	add	r0, r4, r0
   1c758:	str	r1, [r5, #8]
   1c75c:	str	r0, [r5, #20]
   1c760:	ldr	r0, [r5]
   1c764:	add	r0, r0, #1
   1c768:	str	r0, [r5]
   1c76c:	b	1c8a0 <argp_failure@@Base+0x2fa8>
   1c770:	cmp	r7, #0
   1c774:	beq	1c810 <argp_failure@@Base+0x2f18>
   1c778:	ldr	r1, [fp, #16]
   1c77c:	mov	r0, #0
   1c780:	str	r0, [r1, #20]
   1c784:	mov	r2, r1
   1c788:	ldr	r1, [r1]
   1c78c:	add	r0, r1, #1
   1c790:	str	r0, [r2]
   1c794:	ldrb	r3, [r6]
   1c798:	ldr	r2, [r7, #4]
   1c79c:	cmp	r3, #0
   1c7a0:	beq	1c7bc <argp_failure@@Base+0x2ec4>
   1c7a4:	cmp	r2, #0
   1c7a8:	beq	1c888 <argp_failure@@Base+0x2f90>
   1c7ac:	ldr	r1, [fp, #16]
   1c7b0:	add	r0, r6, #1
   1c7b4:	str	r0, [r1, #12]
   1c7b8:	b	1c7e8 <argp_failure@@Base+0x2ef0>
   1c7bc:	cmp	r2, #1
   1c7c0:	bne	1c7e8 <argp_failure@@Base+0x2ef0>
   1c7c4:	ldr	r2, [sp, #12]
   1c7c8:	cmp	r0, r2
   1c7cc:	bge	1c8ac <argp_failure@@Base+0x2fb4>
   1c7d0:	ldr	r2, [fp, #16]
   1c7d4:	add	r1, r1, #2
   1c7d8:	str	r1, [r2]
   1c7dc:	ldr	r1, [sp, #20]
   1c7e0:	ldr	r0, [r1, r0, lsl #2]
   1c7e4:	str	r0, [r2, #12]
   1c7e8:	cmp	r5, #0
   1c7ec:	strne	ip, [r5]
   1c7f0:	ldr	r1, [r7, #8]
   1c7f4:	ldr	r0, [r7, #12]
   1c7f8:	cmp	r1, #0
   1c7fc:	beq	1c8d4 <argp_failure@@Base+0x2fdc>
   1c800:	str	r0, [r1]
   1c804:	mov	r0, #0
   1c808:	sub	sp, fp, #28
   1c80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c810:	ldr	r0, [fp, #12]
   1c814:	cmp	r0, #0
   1c818:	beq	1c85c <argp_failure@@Base+0x2f64>
   1c81c:	ldr	r0, [fp, #16]
   1c820:	ldr	r1, [sp, #20]
   1c824:	ldr	r0, [r0]
   1c828:	ldr	r0, [r1, r0, lsl #2]
   1c82c:	ldrb	r0, [r0, #1]
   1c830:	cmp	r0, #45	; 0x2d
   1c834:	beq	1c85c <argp_failure@@Base+0x2f64>
   1c838:	ldr	r0, [fp, #16]
   1c83c:	ldr	r0, [r0, #20]
   1c840:	ldrb	r1, [r0]
   1c844:	ldr	r0, [sp, #16]
   1c848:	bl	11d44 <strchr@plt>
   1c84c:	mov	r1, r0
   1c850:	mvn	r0, #0
   1c854:	cmp	r1, #0
   1c858:	bne	1c8d4 <argp_failure@@Base+0x2fdc>
   1c85c:	ldr	r0, [fp, #20]
   1c860:	cmp	r0, #0
   1c864:	bne	1c9c8 <argp_failure@@Base+0x30d0>
   1c868:	ldr	r1, [fp, #16]
   1c86c:	mov	r0, #0
   1c870:	str	r0, [r1, #20]
   1c874:	str	r0, [r1, #8]
   1c878:	ldr	r0, [r1]
   1c87c:	add	r0, r0, #1
   1c880:	str	r0, [r1]
   1c884:	b	1c8a0 <argp_failure@@Base+0x2fa8>
   1c888:	ldr	r0, [fp, #20]
   1c88c:	cmp	r0, #0
   1c890:	bne	1c9fc <argp_failure@@Base+0x3104>
   1c894:	ldr	r0, [r7, #12]
   1c898:	ldr	r1, [fp, #16]
   1c89c:	str	r0, [r1, #8]
   1c8a0:	mov	r0, #63	; 0x3f
   1c8a4:	sub	sp, fp, #28
   1c8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8ac:	ldr	r0, [fp, #20]
   1c8b0:	cmp	r0, #0
   1c8b4:	bne	1ca2c <argp_failure@@Base+0x3134>
   1c8b8:	ldr	r0, [r7, #12]
   1c8bc:	ldr	r1, [fp, #16]
   1c8c0:	str	r0, [r1, #8]
   1c8c4:	ldr	r0, [sp, #16]
   1c8c8:	ldrb	r0, [r0]
   1c8cc:	cmp	r0, #58	; 0x3a
   1c8d0:	movwne	r0, #63	; 0x3f
   1c8d4:	sub	sp, fp, #28
   1c8d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8dc:	movw	r5, #62384	; 0xf3b0
   1c8e0:	ldr	r1, [sp, #32]
   1c8e4:	movt	r5, #2
   1c8e8:	ldr	r0, [r5]
   1c8ec:	cmp	r1, #0
   1c8f0:	beq	1c924 <argp_failure@@Base+0x302c>
   1c8f4:	ldr	r1, [sp, #20]
   1c8f8:	ldr	r3, [fp, #24]
   1c8fc:	ldr	r2, [r1]
   1c900:	ldr	r1, [fp, #16]
   1c904:	ldr	r1, [r1, #20]
   1c908:	str	r1, [sp]
   1c90c:	movw	r1, #59265	; 0xe781
   1c910:	movt	r1, #1
   1c914:	bl	11d5c <fprintf@plt>
   1c918:	cmp	r4, #0
   1c91c:	bne	1c734 <argp_failure@@Base+0x2e3c>
   1c920:	b	1c73c <argp_failure@@Base+0x2e44>
   1c924:	bl	11eac <flockfile@plt>
   1c928:	ldr	r1, [fp, #16]
   1c92c:	ldr	r0, [sp, #20]
   1c930:	ldr	r9, [fp, #24]
   1c934:	ldr	r1, [r1, #20]
   1c938:	ldr	r2, [r0]
   1c93c:	ldr	r0, [r5]
   1c940:	mov	r3, r9
   1c944:	str	r1, [sp]
   1c948:	movw	r1, #59297	; 0xe7a1
   1c94c:	movt	r1, #1
   1c950:	bl	11d5c <fprintf@plt>
   1c954:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c958:	cmp	r8, #0
   1c95c:	beq	1c9a8 <argp_failure@@Base+0x30b0>
   1c960:	mov	r6, sl
   1c964:	ldrb	r0, [r6]
   1c968:	cmp	r0, #0
   1c96c:	bne	1c984 <argp_failure@@Base+0x308c>
   1c970:	add	r1, r1, #16
   1c974:	add	r6, r6, #1
   1c978:	subs	r8, r8, #1
   1c97c:	bne	1c964 <argp_failure@@Base+0x306c>
   1c980:	b	1c9a8 <argp_failure@@Base+0x30b0>
   1c984:	ldr	r3, [r1]
   1c988:	ldr	r0, [r5]
   1c98c:	mov	r7, r1
   1c990:	movw	r1, #59344	; 0xe7d0
   1c994:	mov	r2, r9
   1c998:	movt	r1, #1
   1c99c:	bl	11d5c <fprintf@plt>
   1c9a0:	mov	r1, r7
   1c9a4:	b	1c970 <argp_failure@@Base+0x3078>
   1c9a8:	ldr	r1, [r5]
   1c9ac:	mov	r0, #10
   1c9b0:	bl	11e58 <fputc@plt>
   1c9b4:	ldr	r0, [r5]
   1c9b8:	bl	11c24 <funlockfile@plt>
   1c9bc:	cmp	r4, #0
   1c9c0:	bne	1c734 <argp_failure@@Base+0x2e3c>
   1c9c4:	b	1c73c <argp_failure@@Base+0x2e44>
   1c9c8:	ldr	r1, [fp, #16]
   1c9cc:	ldr	r0, [sp, #20]
   1c9d0:	ldr	r3, [fp, #24]
   1c9d4:	ldr	r2, [r0]
   1c9d8:	movw	r0, #62384	; 0xf3b0
   1c9dc:	ldr	r1, [r1, #20]
   1c9e0:	movt	r0, #2
   1c9e4:	ldr	r0, [r0]
   1c9e8:	str	r1, [sp]
   1c9ec:	movw	r1, #59352	; 0xe7d8
   1c9f0:	movt	r1, #1
   1c9f4:	bl	11d5c <fprintf@plt>
   1c9f8:	b	1c868 <argp_failure@@Base+0x2f70>
   1c9fc:	ldr	r0, [sp, #20]
   1ca00:	ldr	r1, [r7]
   1ca04:	ldr	r3, [fp, #24]
   1ca08:	ldr	r2, [r0]
   1ca0c:	movw	r0, #62384	; 0xf3b0
   1ca10:	str	r1, [sp]
   1ca14:	movw	r1, #59384	; 0xe7f8
   1ca18:	movt	r0, #2
   1ca1c:	movt	r1, #1
   1ca20:	ldr	r0, [r0]
   1ca24:	bl	11d5c <fprintf@plt>
   1ca28:	b	1c894 <argp_failure@@Base+0x2f9c>
   1ca2c:	ldr	r0, [sp, #20]
   1ca30:	ldr	r1, [r7]
   1ca34:	ldr	r3, [fp, #24]
   1ca38:	ldr	r2, [r0]
   1ca3c:	movw	r0, #62384	; 0xf3b0
   1ca40:	str	r1, [sp]
   1ca44:	movw	r1, #59429	; 0xe825
   1ca48:	movt	r0, #2
   1ca4c:	movt	r1, #1
   1ca50:	ldr	r0, [r0]
   1ca54:	bl	11d5c <fprintf@plt>
   1ca58:	b	1c8b8 <argp_failure@@Base+0x2fc0>
   1ca5c:	push	{r4, r5, r6, r7, fp, lr}
   1ca60:	add	fp, sp, #16
   1ca64:	sub	sp, sp, #16
   1ca68:	movw	r7, #62360	; 0xf398
   1ca6c:	movw	r6, #62668	; 0xf4cc
   1ca70:	movw	r5, #62364	; 0xf39c
   1ca74:	movt	r7, #2
   1ca78:	movt	r5, #2
   1ca7c:	movt	r6, #2
   1ca80:	ldr	r4, [r7]
   1ca84:	ldr	r5, [r5]
   1ca88:	str	r6, [sp, #8]
   1ca8c:	stm	r6, {r4, r5}
   1ca90:	ldr	r5, [fp, #16]
   1ca94:	str	r5, [sp, #12]
   1ca98:	ldr	r5, [fp, #12]
   1ca9c:	str	r5, [sp, #4]
   1caa0:	ldr	r5, [fp, #8]
   1caa4:	str	r5, [sp]
   1caa8:	bl	1b7c0 <argp_failure@@Base+0x1ec8>
   1caac:	ldr	r1, [r6]
   1cab0:	ldr	r3, [r6, #12]
   1cab4:	ldr	r2, [r6, #8]
   1cab8:	str	r1, [r7]
   1cabc:	movw	r1, #63016	; 0xf628
   1cac0:	movt	r1, #2
   1cac4:	str	r3, [r1]
   1cac8:	movw	r1, #62368	; 0xf3a0
   1cacc:	movt	r1, #2
   1cad0:	str	r2, [r1]
   1cad4:	sub	sp, fp, #16
   1cad8:	pop	{r4, r5, r6, r7, fp, pc}
   1cadc:	push	{r4, r5, r6, sl, fp, lr}
   1cae0:	add	fp, sp, #16
   1cae4:	sub	sp, sp, #16
   1cae8:	movw	r6, #62360	; 0xf398
   1caec:	movw	r5, #62668	; 0xf4cc
   1caf0:	movw	r4, #62364	; 0xf39c
   1caf4:	movt	r6, #2
   1caf8:	movt	r4, #2
   1cafc:	movt	r5, #2
   1cb00:	ldr	r3, [r6]
   1cb04:	ldr	r4, [r4]
   1cb08:	stm	r5, {r3, r4}
   1cb0c:	mov	r4, #0
   1cb10:	mov	r3, #1
   1cb14:	str	r4, [sp]
   1cb18:	stmib	sp, {r4, r5}
   1cb1c:	str	r3, [sp, #12]
   1cb20:	mov	r3, #0
   1cb24:	bl	1b7c0 <argp_failure@@Base+0x1ec8>
   1cb28:	ldr	r1, [r5]
   1cb2c:	ldr	r3, [r5, #12]
   1cb30:	ldr	r2, [r5, #8]
   1cb34:	str	r1, [r6]
   1cb38:	movw	r1, #63016	; 0xf628
   1cb3c:	movt	r1, #2
   1cb40:	str	r3, [r1]
   1cb44:	movw	r1, #62368	; 0xf3a0
   1cb48:	movt	r1, #2
   1cb4c:	str	r2, [r1]
   1cb50:	sub	sp, fp, #16
   1cb54:	pop	{r4, r5, r6, sl, fp, pc}
   1cb58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cb5c:	add	fp, sp, #24
   1cb60:	mov	r7, r0
   1cb64:	mov	r0, #36	; 0x24
   1cb68:	mov	r8, r3
   1cb6c:	mov	r9, r2
   1cb70:	mov	r6, r1
   1cb74:	bl	18134 <argp_parse@@Base+0x1a10>
   1cb78:	cmp	r0, #0
   1cb7c:	beq	1cbc4 <argp_failure@@Base+0x32cc>
   1cb80:	mov	r5, #0
   1cb84:	str	r7, [r0]
   1cb88:	stmib	r0, {r6, r9}
   1cb8c:	str	r8, [r0, #12]
   1cb90:	mov	r4, r0
   1cb94:	str	r5, [r0, #16]
   1cb98:	str	r5, [r0, #20]
   1cb9c:	mov	r0, #200	; 0xc8
   1cba0:	bl	18134 <argp_parse@@Base+0x1a10>
   1cba4:	cmp	r0, #0
   1cba8:	str	r0, [r4, #24]
   1cbac:	beq	1cbd0 <argp_failure@@Base+0x32d8>
   1cbb0:	add	r1, r0, #200	; 0xc8
   1cbb4:	str	r0, [r4, #28]
   1cbb8:	mov	r0, r4
   1cbbc:	str	r1, [r4, #32]
   1cbc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cbc4:	mov	r5, #0
   1cbc8:	mov	r0, r5
   1cbcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cbd0:	mov	r0, r4
   1cbd4:	bl	17a00 <argp_parse@@Base+0x12dc>
   1cbd8:	mov	r0, r5
   1cbdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cbe0:	push	{r4, sl, fp, lr}
   1cbe4:	add	fp, sp, #8
   1cbe8:	mov	r4, r0
   1cbec:	bl	1cc24 <argp_failure@@Base+0x332c>
   1cbf0:	ldr	r0, [r4, #24]
   1cbf4:	ldr	r1, [r4, #28]
   1cbf8:	cmp	r1, r0
   1cbfc:	bls	1cc10 <argp_failure@@Base+0x3318>
   1cc00:	ldr	r3, [r4]
   1cc04:	sub	r2, r1, r0
   1cc08:	mov	r1, #1
   1cc0c:	bl	11b88 <fwrite_unlocked@plt>
   1cc10:	ldr	r0, [r4, #24]
   1cc14:	bl	17a00 <argp_parse@@Base+0x12dc>
   1cc18:	mov	r0, r4
   1cc1c:	pop	{r4, sl, fp, lr}
   1cc20:	b	17a00 <argp_parse@@Base+0x12dc>
   1cc24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc28:	add	fp, sp, #28
   1cc2c:	sub	sp, sp, #12
   1cc30:	mov	sl, r0
   1cc34:	ldr	r0, [r0, #16]
   1cc38:	ldr	r1, [sl, #24]
   1cc3c:	ldr	r8, [sl, #28]
   1cc40:	add	r5, r1, r0
   1cc44:	cmp	r5, r8
   1cc48:	bcs	1d140 <argp_failure@@Base+0x3848>
   1cc4c:	ldr	r7, [sl, #20]
   1cc50:	mov	r3, #32
   1cc54:	cmp	r7, #0
   1cc58:	bne	1cc90 <argp_failure@@Base+0x3398>
   1cc5c:	b	1cc98 <argp_failure@@Base+0x33a0>
   1cc60:	ldr	r0, [sp, #8]
   1cc64:	cmp	r7, #0
   1cc68:	mvneq	r7, #0
   1cc6c:	str	r7, [sl, #20]
   1cc70:	sub	r0, r0, r6
   1cc74:	add	r0, r0, r9
   1cc78:	add	r8, r5, r0
   1cc7c:	str	r8, [sl, #28]
   1cc80:	cmp	r5, r8
   1cc84:	bcs	1d140 <argp_failure@@Base+0x3848>
   1cc88:	cmp	r7, #0
   1cc8c:	beq	1cc98 <argp_failure@@Base+0x33a0>
   1cc90:	mov	r9, r5
   1cc94:	b	1cd38 <argp_failure@@Base+0x3440>
   1cc98:	ldr	r7, [sl, #4]
   1cc9c:	cmp	r7, #0
   1cca0:	beq	1ce68 <argp_failure@@Base+0x3570>
   1cca4:	ldr	r1, [sl, #32]
   1cca8:	add	r0, r8, r7
   1ccac:	mov	r4, r7
   1ccb0:	cmp	r0, r1
   1ccb4:	bcs	1ccec <argp_failure@@Base+0x33f4>
   1ccb8:	add	r9, r5, r7
   1ccbc:	sub	r2, r8, r5
   1ccc0:	mov	r1, r5
   1ccc4:	mov	r0, r9
   1ccc8:	bl	11b1c <memmove@plt>
   1cccc:	ldr	r0, [sl, #28]
   1ccd0:	mov	r1, #32
   1ccd4:	mov	r2, r7
   1ccd8:	add	r0, r0, r7
   1ccdc:	str	r0, [sl, #28]
   1cce0:	mov	r0, r5
   1cce4:	bl	11da4 <memset@plt>
   1cce8:	b	1cd30 <argp_failure@@Base+0x3438>
   1ccec:	ldr	r0, [sl]
   1ccf0:	ldr	r1, [r0, #20]
   1ccf4:	ldr	r2, [r0, #24]
   1ccf8:	cmp	r1, r2
   1ccfc:	bcs	1cd18 <argp_failure@@Base+0x3420>
   1cd00:	add	r2, r1, #1
   1cd04:	str	r2, [r0, #20]
   1cd08:	strb	r3, [r1]
   1cd0c:	subs	r4, r4, #1
   1cd10:	bne	1ccec <argp_failure@@Base+0x33f4>
   1cd14:	b	1cd2c <argp_failure@@Base+0x3434>
   1cd18:	mov	r1, #32
   1cd1c:	bl	11e04 <__overflow@plt>
   1cd20:	mov	r3, #32
   1cd24:	subs	r4, r4, #1
   1cd28:	bne	1ccec <argp_failure@@Base+0x33f4>
   1cd2c:	mov	r9, r5
   1cd30:	str	r7, [sl, #20]
   1cd34:	ldr	r8, [sl, #28]
   1cd38:	sub	r6, r8, r9
   1cd3c:	mov	r0, r9
   1cd40:	mov	r1, #10
   1cd44:	mov	r2, r6
   1cd48:	bl	11de0 <memchr@plt>
   1cd4c:	cmn	r7, #1
   1cd50:	mov	r4, r0
   1cd54:	movle	r7, #0
   1cd58:	strle	r7, [sl, #20]
   1cd5c:	cmp	r4, #0
   1cd60:	beq	1cd94 <argp_failure@@Base+0x349c>
   1cd64:	ldr	r5, [sl, #8]
   1cd68:	sub	r0, r4, r9
   1cd6c:	mov	r3, #32
   1cd70:	add	r0, r0, r7
   1cd74:	cmp	r0, r5
   1cd78:	bge	1cda8 <argp_failure@@Base+0x34b0>
   1cd7c:	mov	r7, #0
   1cd80:	add	r5, r4, #1
   1cd84:	str	r7, [sl, #20]
   1cd88:	cmp	r5, r8
   1cd8c:	bcc	1cc88 <argp_failure@@Base+0x3390>
   1cd90:	b	1d140 <argp_failure@@Base+0x3848>
   1cd94:	ldr	r5, [sl, #8]
   1cd98:	add	r0, r7, r6
   1cd9c:	mov	r4, r8
   1cda0:	cmp	r0, r5
   1cda4:	bcc	1d124 <argp_failure@@Base+0x382c>
   1cda8:	ldr	r0, [sl, #12]
   1cdac:	cmn	r0, #1
   1cdb0:	str	r0, [sp, #4]
   1cdb4:	ble	1ce04 <argp_failure@@Base+0x350c>
   1cdb8:	subs	r0, r5, r7
   1cdbc:	mov	r1, #0
   1cdc0:	str	r6, [sp, #8]
   1cdc4:	add	r5, r9, r0
   1cdc8:	bmi	1ce60 <argp_failure@@Base+0x3568>
   1cdcc:	str	r0, [sp]
   1cdd0:	bl	11cf0 <__ctype_b_loc@plt>
   1cdd4:	ldr	r0, [r0]
   1cdd8:	mov	r7, r5
   1cddc:	ldrb	r1, [r7]
   1cde0:	ldrb	r1, [r0, r1, lsl #1]
   1cde4:	tst	r1, #1
   1cde8:	bne	1ce70 <argp_failure@@Base+0x3578>
   1cdec:	sub	r7, r7, #1
   1cdf0:	cmp	r7, r9
   1cdf4:	bcs	1cddc <argp_failure@@Base+0x34e4>
   1cdf8:	ldr	r0, [sp]
   1cdfc:	mov	r1, #0
   1ce00:	b	1ce78 <argp_failure@@Base+0x3580>
   1ce04:	mov	r0, r6
   1ce08:	sub	r6, r5, #1
   1ce0c:	cmp	r4, r8
   1ce10:	bcs	1d12c <argp_failure@@Base+0x3834>
   1ce14:	sub	r0, r6, r7
   1ce18:	sub	r2, r8, r4
   1ce1c:	mov	r1, r4
   1ce20:	add	r0, r9, r0
   1ce24:	bl	11b1c <memmove@plt>
   1ce28:	ldr	r0, [sl, #20]
   1ce2c:	ldr	r1, [sl, #28]
   1ce30:	mov	r7, #0
   1ce34:	mov	r3, #32
   1ce38:	add	r5, r9, r5
   1ce3c:	str	r7, [sl, #20]
   1ce40:	sub	r0, r6, r0
   1ce44:	add	r0, r9, r0
   1ce48:	sub	r0, r4, r0
   1ce4c:	add	r8, r1, r0
   1ce50:	str	r8, [sl, #28]
   1ce54:	cmp	r5, r8
   1ce58:	bcc	1cc88 <argp_failure@@Base+0x3390>
   1ce5c:	b	1d140 <argp_failure@@Base+0x3848>
   1ce60:	mov	r7, r5
   1ce64:	b	1ce78 <argp_failure@@Base+0x3580>
   1ce68:	mov	r7, #0
   1ce6c:	b	1cc90 <argp_failure@@Base+0x3398>
   1ce70:	ldr	r0, [sp]
   1ce74:	mov	r1, #1
   1ce78:	add	r6, r7, #1
   1ce7c:	cmp	r6, r9
   1ce80:	bls	1cec0 <argp_failure@@Base+0x35c8>
   1ce84:	cmp	r1, #0
   1ce88:	beq	1cf24 <argp_failure@@Base+0x362c>
   1ce8c:	ldr	r4, [sp, #4]
   1ce90:	sub	r1, r7, #1
   1ce94:	mov	r7, r1
   1ce98:	cmp	r1, r9
   1ce9c:	bcc	1cf28 <argp_failure@@Base+0x3630>
   1cea0:	bl	11cf0 <__ctype_b_loc@plt>
   1cea4:	mov	r1, r7
   1cea8:	ldr	r0, [r0]
   1ceac:	ldrb	r2, [r1], #-1
   1ceb0:	ldrb	r0, [r0, r2, lsl #1]
   1ceb4:	tst	r0, #1
   1ceb8:	bne	1ce94 <argp_failure@@Base+0x359c>
   1cebc:	b	1cf28 <argp_failure@@Base+0x3630>
   1cec0:	cmp	r5, r4
   1cec4:	bcs	1cef8 <argp_failure@@Base+0x3600>
   1cec8:	add	r0, r9, r0
   1cecc:	add	r1, r0, #1
   1ced0:	mov	r5, r1
   1ced4:	cmp	r1, r4
   1ced8:	bcs	1cef8 <argp_failure@@Base+0x3600>
   1cedc:	bl	11cf0 <__ctype_b_loc@plt>
   1cee0:	mov	r1, r5
   1cee4:	ldr	r0, [r0]
   1cee8:	ldrb	r2, [r1], #1
   1ceec:	ldrb	r0, [r0, r2, lsl #1]
   1cef0:	tst	r0, #1
   1cef4:	beq	1ced0 <argp_failure@@Base+0x35d8>
   1cef8:	cmp	r5, r4
   1cefc:	beq	1d0f8 <argp_failure@@Base+0x3800>
   1cf00:	bl	11cf0 <__ctype_b_loc@plt>
   1cf04:	ldr	r0, [r0]
   1cf08:	mov	r6, r5
   1cf0c:	ldrb	r1, [r6, #1]!
   1cf10:	ldrb	r1, [r0, r1, lsl #1]
   1cf14:	tst	r1, #1
   1cf18:	bne	1cf0c <argp_failure@@Base+0x3614>
   1cf1c:	ldr	r4, [sp, #4]
   1cf20:	b	1cf2c <argp_failure@@Base+0x3634>
   1cf24:	ldr	r4, [sp, #4]
   1cf28:	add	r5, r7, #1
   1cf2c:	mov	r3, #32
   1cf30:	add	r0, r8, #1
   1cf34:	cmp	r6, r0
   1cf38:	beq	1cf5c <argp_failure@@Base+0x3664>
   1cf3c:	cmp	r8, r6
   1cf40:	bls	1cfc4 <argp_failure@@Base+0x36cc>
   1cf44:	mvn	r0, r5
   1cf48:	add	r0, r0, r6
   1cf4c:	cmp	r0, r4
   1cf50:	bge	1cfc4 <argp_failure@@Base+0x36cc>
   1cf54:	ldr	r0, [sl, #32]
   1cf58:	b	1cf74 <argp_failure@@Base+0x367c>
   1cf5c:	cmp	r8, r6
   1cf60:	bls	1cfc4 <argp_failure@@Base+0x36cc>
   1cf64:	ldr	r0, [sl, #32]
   1cf68:	sub	r1, r0, r5
   1cf6c:	cmp	r1, r4
   1cf70:	bgt	1cfc4 <argp_failure@@Base+0x36cc>
   1cf74:	sub	r0, r0, r8
   1cf78:	add	r1, r4, #1
   1cf7c:	cmp	r0, r1
   1cf80:	ble	1cfd0 <argp_failure@@Base+0x36d8>
   1cf84:	mov	r0, r4
   1cf88:	sub	r4, r8, r6
   1cf8c:	add	r7, r5, #1
   1cf90:	mov	r1, r6
   1cf94:	add	r0, r7, r0
   1cf98:	mov	r2, r4
   1cf9c:	bl	11b1c <memmove@plt>
   1cfa0:	ldr	r0, [sl, #12]
   1cfa4:	mov	r1, #10
   1cfa8:	mov	r3, #32
   1cfac:	strb	r1, [r5]
   1cfb0:	mov	r5, r7
   1cfb4:	add	r6, r7, r0
   1cfb8:	add	r0, r6, r4
   1cfbc:	sub	r0, r0, r9
   1cfc0:	b	1d020 <argp_failure@@Base+0x3728>
   1cfc4:	mov	r0, #10
   1cfc8:	strb	r0, [r5], #1
   1cfcc:	b	1d024 <argp_failure@@Base+0x372c>
   1cfd0:	ldr	r0, [sl, #24]
   1cfd4:	cmp	r5, r0
   1cfd8:	bls	1cff0 <argp_failure@@Base+0x36f8>
   1cfdc:	ldr	r3, [sl]
   1cfe0:	sub	r2, r5, r0
   1cfe4:	mov	r1, #1
   1cfe8:	bl	11b88 <fwrite_unlocked@plt>
   1cfec:	mov	r3, #32
   1cff0:	ldr	r0, [sl]
   1cff4:	ldr	r1, [r0, #20]
   1cff8:	ldr	r2, [r0, #24]
   1cffc:	cmp	r1, r2
   1d000:	bcs	1d114 <argp_failure@@Base+0x381c>
   1d004:	add	r2, r1, #1
   1d008:	str	r2, [r0, #20]
   1d00c:	mov	r0, #10
   1d010:	strb	r0, [r1]
   1d014:	ldr	r5, [sl, #24]
   1d018:	sub	r0, r8, r5
   1d01c:	mov	r9, r5
   1d020:	str	r0, [sp, #8]
   1d024:	ldr	r7, [sl, #12]
   1d028:	sub	r0, r6, r5
   1d02c:	cmp	r0, r7
   1d030:	bge	1d0a8 <argp_failure@@Base+0x37b0>
   1d034:	ldr	r0, [sp, #8]
   1d038:	add	r0, r9, r0
   1d03c:	add	r0, r0, #1
   1d040:	cmp	r6, r0
   1d044:	bne	1d058 <argp_failure@@Base+0x3760>
   1d048:	ldr	r0, [sl, #32]
   1d04c:	sub	r0, r0, r6
   1d050:	cmp	r0, r7
   1d054:	bge	1d0a8 <argp_failure@@Base+0x37b0>
   1d058:	cmp	r7, #1
   1d05c:	blt	1d0cc <argp_failure@@Base+0x37d4>
   1d060:	mov	r4, #0
   1d064:	ldr	r0, [sl]
   1d068:	ldr	r1, [r0, #20]
   1d06c:	ldr	r2, [r0, #24]
   1d070:	cmp	r1, r2
   1d074:	bcs	1d098 <argp_failure@@Base+0x37a0>
   1d078:	add	r2, r1, #1
   1d07c:	str	r2, [r0, #20]
   1d080:	strb	r3, [r1]
   1d084:	ldr	r7, [sl, #12]
   1d088:	add	r4, r4, #1
   1d08c:	cmp	r4, r7
   1d090:	blt	1d064 <argp_failure@@Base+0x376c>
   1d094:	b	1d0cc <argp_failure@@Base+0x37d4>
   1d098:	mov	r1, #32
   1d09c:	bl	11e04 <__overflow@plt>
   1d0a0:	mov	r3, #32
   1d0a4:	b	1d084 <argp_failure@@Base+0x378c>
   1d0a8:	cmp	r7, #1
   1d0ac:	blt	1d0cc <argp_failure@@Base+0x37d4>
   1d0b0:	mov	r0, #0
   1d0b4:	strb	r3, [r5, r0]
   1d0b8:	add	r0, r0, #1
   1d0bc:	ldr	r7, [sl, #12]
   1d0c0:	cmp	r0, r7
   1d0c4:	blt	1d0b4 <argp_failure@@Base+0x37bc>
   1d0c8:	add	r5, r5, r0
   1d0cc:	cmp	r5, r6
   1d0d0:	bcs	1cc60 <argp_failure@@Base+0x3368>
   1d0d4:	ldr	r0, [sp, #8]
   1d0d8:	mov	r1, r6
   1d0dc:	add	r0, r9, r0
   1d0e0:	sub	r2, r0, r6
   1d0e4:	mov	r0, r5
   1d0e8:	bl	11b1c <memmove@plt>
   1d0ec:	ldr	r7, [sl, #12]
   1d0f0:	mov	r3, #32
   1d0f4:	b	1cc60 <argp_failure@@Base+0x3368>
   1d0f8:	mov	r7, #0
   1d0fc:	add	r5, r4, #1
   1d100:	mov	r3, #32
   1d104:	str	r7, [sl, #20]
   1d108:	cmp	r5, r8
   1d10c:	bcc	1cc88 <argp_failure@@Base+0x3390>
   1d110:	b	1d140 <argp_failure@@Base+0x3848>
   1d114:	mov	r1, #10
   1d118:	bl	11e04 <__overflow@plt>
   1d11c:	mov	r3, #32
   1d120:	b	1d014 <argp_failure@@Base+0x371c>
   1d124:	str	r0, [sl, #20]
   1d128:	b	1d140 <argp_failure@@Base+0x3848>
   1d12c:	add	r0, r7, r0
   1d130:	str	r0, [sl, #20]
   1d134:	sub	r0, r6, r0
   1d138:	add	r8, r8, r0
   1d13c:	str	r8, [sl, #28]
   1d140:	ldr	r0, [sl, #24]
   1d144:	sub	r0, r8, r0
   1d148:	str	r0, [sl, #16]
   1d14c:	sub	sp, fp, #28
   1d150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d154:	push	{r4, r5, r6, sl, fp, lr}
   1d158:	add	fp, sp, #16
   1d15c:	mov	r4, r0
   1d160:	mov	r5, r1
   1d164:	ldr	r0, [r0, #28]
   1d168:	mov	r6, #1
   1d16c:	ldr	r1, [r4, #32]
   1d170:	sub	r0, r1, r0
   1d174:	cmp	r0, r5
   1d178:	bcs	1d238 <argp_failure@@Base+0x3940>
   1d17c:	mov	r0, r4
   1d180:	bl	1cc24 <argp_failure@@Base+0x332c>
   1d184:	ldr	r0, [r4, #24]
   1d188:	ldr	r1, [r4, #28]
   1d18c:	ldr	r3, [r4]
   1d190:	sub	r2, r1, r0
   1d194:	mov	r1, #1
   1d198:	bl	11b88 <fwrite_unlocked@plt>
   1d19c:	mov	r1, r0
   1d1a0:	ldr	r0, [r4, #24]
   1d1a4:	ldr	r2, [r4, #28]
   1d1a8:	sub	r3, r2, r0
   1d1ac:	cmp	r1, r3
   1d1b0:	bne	1d204 <argp_failure@@Base+0x390c>
   1d1b4:	mov	r1, #0
   1d1b8:	mov	r6, #1
   1d1bc:	str	r1, [r4, #16]
   1d1c0:	str	r0, [r4, #28]
   1d1c4:	ldr	r1, [r4, #32]
   1d1c8:	sub	r1, r1, r0
   1d1cc:	cmp	r1, r5
   1d1d0:	bcs	1d238 <argp_failure@@Base+0x3940>
   1d1d4:	adds	r5, r1, r5
   1d1d8:	bcs	1d228 <argp_failure@@Base+0x3930>
   1d1dc:	mov	r1, r5
   1d1e0:	bl	18164 <argp_parse@@Base+0x1a40>
   1d1e4:	cmp	r0, #0
   1d1e8:	beq	1d228 <argp_failure@@Base+0x3930>
   1d1ec:	str	r0, [r4, #24]
   1d1f0:	add	r1, r0, r5
   1d1f4:	str	r0, [r4, #28]
   1d1f8:	mov	r0, r6
   1d1fc:	str	r1, [r4, #32]
   1d200:	pop	{r4, r5, r6, sl, fp, pc}
   1d204:	sub	r2, r2, r1
   1d208:	str	r2, [r4, #28]
   1d20c:	sub	r2, r2, r0
   1d210:	ldr	r3, [r4, #16]
   1d214:	sub	r3, r3, r1
   1d218:	add	r1, r0, r1
   1d21c:	str	r3, [r4, #16]
   1d220:	bl	11b1c <memmove@plt>
   1d224:	b	1d234 <argp_failure@@Base+0x393c>
   1d228:	bl	11d74 <__errno_location@plt>
   1d22c:	mov	r1, #12
   1d230:	str	r1, [r0]
   1d234:	mov	r6, #0
   1d238:	mov	r0, r6
   1d23c:	pop	{r4, r5, r6, sl, fp, pc}
   1d240:	sub	sp, sp, #8
   1d244:	push	{r4, r5, r6, r7, fp, lr}
   1d248:	add	fp, sp, #16
   1d24c:	sub	sp, sp, #8
   1d250:	mov	r5, r1
   1d254:	mov	r4, r0
   1d258:	mov	r1, #150	; 0x96
   1d25c:	add	r6, fp, #8
   1d260:	str	r2, [fp, #8]
   1d264:	str	r3, [fp, #12]
   1d268:	mov	r0, r4
   1d26c:	bl	1d154 <argp_failure@@Base+0x385c>
   1d270:	cmp	r0, #0
   1d274:	beq	1d2b4 <argp_failure@@Base+0x39bc>
   1d278:	str	r6, [sp, #4]
   1d27c:	mov	r2, r5
   1d280:	mov	r3, r6
   1d284:	ldr	r0, [r4, #28]
   1d288:	ldr	r1, [r4, #32]
   1d28c:	sub	r7, r1, r0
   1d290:	mov	r1, r7
   1d294:	bl	11eb8 <vsnprintf@plt>
   1d298:	add	r1, r0, #1
   1d29c:	cmp	r0, r7
   1d2a0:	bcs	1d268 <argp_failure@@Base+0x3970>
   1d2a4:	ldr	r1, [r4, #28]
   1d2a8:	add	r1, r1, r0
   1d2ac:	str	r1, [r4, #28]
   1d2b0:	b	1d2b8 <argp_failure@@Base+0x39c0>
   1d2b4:	mvn	r0, #0
   1d2b8:	sub	sp, fp, #16
   1d2bc:	pop	{r4, r5, r6, r7, fp, lr}
   1d2c0:	add	sp, sp, #8
   1d2c4:	bx	lr
   1d2c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d2cc:	mov	r7, r0
   1d2d0:	ldr	r6, [pc, #72]	; 1d320 <argp_failure@@Base+0x3a28>
   1d2d4:	ldr	r5, [pc, #72]	; 1d324 <argp_failure@@Base+0x3a2c>
   1d2d8:	add	r6, pc, r6
   1d2dc:	add	r5, pc, r5
   1d2e0:	sub	r6, r6, r5
   1d2e4:	mov	r8, r1
   1d2e8:	mov	r9, r2
   1d2ec:	bl	11a60 <calloc@plt-0x20>
   1d2f0:	asrs	r6, r6, #2
   1d2f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d2f8:	mov	r4, #0
   1d2fc:	add	r4, r4, #1
   1d300:	ldr	r3, [r5], #4
   1d304:	mov	r2, r9
   1d308:	mov	r1, r8
   1d30c:	mov	r0, r7
   1d310:	blx	r3
   1d314:	cmp	r6, r4
   1d318:	bne	1d2fc <argp_failure@@Base+0x3a04>
   1d31c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d320:	andeq	r1, r1, r4, lsr #24
   1d324:	andeq	r1, r1, ip, lsl ip
   1d328:	bx	lr

Disassembly of section .fini:

0001d32c <.fini>:
   1d32c:	push	{r3, lr}
   1d330:	pop	{r3, pc}
