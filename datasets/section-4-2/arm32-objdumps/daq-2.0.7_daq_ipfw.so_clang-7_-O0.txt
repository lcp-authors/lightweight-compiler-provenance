
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000734 <_init>:
 734:	push	{r3, lr}
 738:	bl	868 <call_weak_fn>
 73c:	pop	{r3, pc}

Disassembly of section .plt:

00000740 <.plt>:
 740:	push	{lr}		; (str lr, [sp, #-4]!)
 744:	ldr	lr, [pc, #4]	; 750 <.plt+0x10>
 748:	add	lr, pc, lr
 74c:	ldr	pc, [lr, #8]!
 750:	.word	0x000118b0

00000754 <calloc@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2224]!	; 0x8b0

00000760 <strcmp@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2216]!	; 0x8a8

0000076c <__cxa_finalize@plt>:
 76c:	add	ip, pc, #0, 12
 770:	add	ip, ip, #69632	; 0x11000
 774:	ldr	pc, [ip, #2208]!	; 0x8a0

00000778 <strtol@plt>:
 778:	add	ip, pc, #0, 12
 77c:	add	ip, ip, #69632	; 0x11000
 780:	ldr	pc, [ip, #2200]!	; 0x898

00000784 <free@plt>:
 784:	add	ip, pc, #0, 12
 788:	add	ip, ip, #69632	; 0x11000
 78c:	ldr	pc, [ip, #2192]!	; 0x890

00000790 <memcpy@plt>:
 790:	add	ip, pc, #0, 12
 794:	add	ip, ip, #69632	; 0x11000
 798:	ldr	pc, [ip, #2184]!	; 0x888

0000079c <select@plt>:
 79c:	add	ip, pc, #0, 12
 7a0:	add	ip, ip, #69632	; 0x11000
 7a4:	ldr	pc, [ip, #2176]!	; 0x880

000007a8 <recvfrom@plt>:
 7a8:	add	ip, pc, #0, 12
 7ac:	add	ip, ip, #69632	; 0x11000
 7b0:	ldr	pc, [ip, #2168]!	; 0x878

000007b4 <strdup@plt>:
 7b4:	add	ip, pc, #0, 12
 7b8:	add	ip, ip, #69632	; 0x11000
 7bc:	ldr	pc, [ip, #2160]!	; 0x870

000007c0 <htons@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2152]!	; 0x868

000007cc <gettimeofday@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2144]!	; 0x860

000007d8 <malloc@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2136]!	; 0x858

000007e4 <sfbpf_compile@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2128]!	; 0x850

000007f0 <strerror@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2120]!	; 0x848

000007fc <__gmon_start__@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2112]!	; 0x840

00000808 <__errno_location@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2104]!	; 0x838

00000814 <snprintf@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2096]!	; 0x830

00000820 <bind@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2088]!	; 0x828

0000082c <memset@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2080]!	; 0x820

00000838 <sendto@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2072]!	; 0x818

00000844 <sfbpf_filter@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #2064]!	; 0x810

00000850 <socket@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #2056]!	; 0x808

0000085c <close@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #2048]!	; 0x800

Disassembly of section .text:

00000868 <call_weak_fn>:
     868:	ldr	r3, [pc, #20]	; 884 <call_weak_fn+0x1c>
     86c:	ldr	r2, [pc, #20]	; 888 <call_weak_fn+0x20>
     870:	add	r3, pc, r3
     874:	ldr	r2, [r3, r2]
     878:	cmp	r2, #0
     87c:	bxeq	lr
     880:	b	7fc <__gmon_start__@plt>
     884:	.word	0x00011788
     888:	.word	0x00000070

0000088c <deregister_tm_clones>:
     88c:	ldr	r0, [pc, #44]	; 8c0 <deregister_tm_clones+0x34>
     890:	ldr	r3, [pc, #44]	; 8c4 <deregister_tm_clones+0x38>
     894:	add	r0, pc, r0
     898:	add	r3, pc, r3
     89c:	cmp	r3, r0
     8a0:	ldr	r3, [pc, #32]	; 8c8 <deregister_tm_clones+0x3c>
     8a4:	add	r3, pc, r3
     8a8:	bxeq	lr
     8ac:	ldr	r2, [pc, #24]	; 8cc <deregister_tm_clones+0x40>
     8b0:	ldr	r3, [r3, r2]
     8b4:	cmp	r3, #0
     8b8:	bxeq	lr
     8bc:	bx	r3
     8c0:	.word	0x00011848
     8c4:	.word	0x00011844
     8c8:	.word	0x00011754
     8cc:	.word	0x0000006c

000008d0 <register_tm_clones>:
     8d0:	ldr	r0, [pc, #56]	; 910 <register_tm_clones+0x40>
     8d4:	ldr	r3, [pc, #56]	; 914 <register_tm_clones+0x44>
     8d8:	add	r0, pc, r0
     8dc:	add	r3, pc, r3
     8e0:	sub	r1, r3, r0
     8e4:	ldr	r3, [pc, #44]	; 918 <register_tm_clones+0x48>
     8e8:	asr	r1, r1, #2
     8ec:	add	r3, pc, r3
     8f0:	add	r1, r1, r1, lsr #31
     8f4:	asrs	r1, r1, #1
     8f8:	bxeq	lr
     8fc:	ldr	r2, [pc, #24]	; 91c <register_tm_clones+0x4c>
     900:	ldr	r3, [r3, r2]
     904:	cmp	r3, #0
     908:	bxeq	lr
     90c:	bx	r3
     910:	.word	0x00011804
     914:	.word	0x00011800
     918:	.word	0x0001170c
     91c:	.word	0x00000074

00000920 <__do_global_dtors_aux>:
     920:	ldr	r3, [pc, #76]	; 974 <__do_global_dtors_aux+0x54>
     924:	ldr	r2, [pc, #76]	; 978 <__do_global_dtors_aux+0x58>
     928:	add	r3, pc, r3
     92c:	add	r2, pc, r2
     930:	ldrb	r3, [r3]
     934:	cmp	r3, #0
     938:	bxne	lr
     93c:	ldr	r3, [pc, #56]	; 97c <__do_global_dtors_aux+0x5c>
     940:	push	{r4, lr}
     944:	ldr	r3, [r2, r3]
     948:	cmp	r3, #0
     94c:	beq	95c <__do_global_dtors_aux+0x3c>
     950:	ldr	r3, [pc, #40]	; 980 <__do_global_dtors_aux+0x60>
     954:	ldr	r0, [pc, r3]
     958:	bl	76c <__cxa_finalize@plt>
     95c:	bl	88c <deregister_tm_clones>
     960:	ldr	r3, [pc, #28]	; 984 <__do_global_dtors_aux+0x64>
     964:	mov	r2, #1
     968:	add	r3, pc, r3
     96c:	strb	r2, [r3]
     970:	pop	{r4, pc}
     974:	.word	0x000117b4
     978:	.word	0x000116cc
     97c:	.word	0x00000068
     980:	.word	0x0001171c
     984:	.word	0x00011774

00000988 <frame_dummy>:
     988:	b	8d0 <register_tm_clones>

0000098c <ipfw_daq_initialize>:
     98c:	push	{fp, lr}
     990:	mov	fp, sp
     994:	sub	sp, sp, #32
     998:	str	r0, [fp, #-8]
     99c:	str	r1, [fp, #-12]
     9a0:	str	r2, [sp, #16]
     9a4:	str	r3, [sp, #12]
     9a8:	movw	r0, #1
     9ac:	movw	r1, #416	; 0x1a0
     9b0:	bl	754 <calloc@plt>
     9b4:	str	r0, [sp, #8]
     9b8:	ldr	r0, [sp, #8]
     9bc:	movw	r1, #0
     9c0:	cmp	r0, r1
     9c4:	bne	9f4 <ipfw_daq_initialize+0x68>
     9c8:	ldr	r0, [pc, #236]	; abc <ipfw_daq_initialize+0x130>
     9cc:	add	r2, pc, r0
     9d0:	ldr	r0, [pc, #232]	; ac0 <ipfw_daq_initialize+0x134>
     9d4:	add	r3, pc, r0
     9d8:	ldr	r0, [sp, #16]
     9dc:	ldr	r1, [sp, #12]
     9e0:	bl	814 <snprintf@plt>
     9e4:	mvn	r1, #1
     9e8:	str	r1, [fp, #-4]
     9ec:	str	r0, [sp, #4]
     9f0:	b	ab0 <ipfw_daq_initialize+0x124>
     9f4:	ldr	r0, [sp, #8]
     9f8:	ldr	r1, [fp, #-8]
     9fc:	ldr	r2, [sp, #16]
     a00:	ldr	r3, [sp, #12]
     a04:	bl	1438 <ipfw_daq_get_setup>
     a08:	cmp	r0, #0
     a0c:	beq	a24 <ipfw_daq_initialize+0x98>
     a10:	ldr	r0, [sp, #8]
     a14:	bl	1230 <ipfw_daq_shutdown>
     a18:	mvn	r0, #0
     a1c:	str	r0, [fp, #-4]
     a20:	b	ab0 <ipfw_daq_initialize+0x124>
     a24:	ldr	r0, [sp, #8]
     a28:	ldr	r0, [r0, #24]
     a2c:	bl	7d8 <malloc@plt>
     a30:	ldr	lr, [sp, #8]
     a34:	str	r0, [lr, #28]
     a38:	ldr	r0, [sp, #8]
     a3c:	ldr	r0, [r0, #28]
     a40:	movw	lr, #0
     a44:	cmp	r0, lr
     a48:	bne	a84 <ipfw_daq_initialize+0xf8>
     a4c:	ldr	r0, [pc, #112]	; ac4 <ipfw_daq_initialize+0x138>
     a50:	add	r2, pc, r0
     a54:	ldr	r0, [pc, #108]	; ac8 <ipfw_daq_initialize+0x13c>
     a58:	add	r3, pc, r0
     a5c:	ldr	r0, [sp, #16]
     a60:	ldr	r1, [sp, #12]
     a64:	bl	814 <snprintf@plt>
     a68:	ldr	r1, [sp, #8]
     a6c:	str	r0, [sp]
     a70:	mov	r0, r1
     a74:	bl	1230 <ipfw_daq_shutdown>
     a78:	mvn	r0, #1
     a7c:	str	r0, [fp, #-4]
     a80:	b	ab0 <ipfw_daq_initialize+0x124>
     a84:	ldr	r0, [sp, #8]
     a88:	mvn	r1, #0
     a8c:	str	r1, [r0]
     a90:	ldr	r0, [sp, #8]
     a94:	movw	r1, #1
     a98:	str	r1, [r0, #316]	; 0x13c
     a9c:	ldr	r0, [sp, #8]
     aa0:	ldr	r1, [fp, #-12]
     aa4:	str	r0, [r1]
     aa8:	movw	r0, #0
     aac:	str	r0, [fp, #-4]
     ab0:	ldr	r0, [fp, #-4]
     ab4:	mov	sp, fp
     ab8:	pop	{fp, pc}
     abc:	.word	0x00000ebd
     ac0:	.word	0x00000ede
     ac4:	.word	0x00000e76
     ac8:	.word	0x00000e5a

00000acc <ipfw_daq_set_filter>:
     acc:	push	{fp, lr}
     ad0:	mov	fp, sp
     ad4:	sub	sp, sp, #32
     ad8:	str	r0, [fp, #-8]
     adc:	str	r1, [fp, #-12]
     ae0:	ldr	r0, [fp, #-8]
     ae4:	str	r0, [sp, #16]
     ae8:	ldr	r0, [sp, #16]
     aec:	ldr	r0, [r0, #24]
     af0:	ldr	r3, [fp, #-12]
     af4:	movw	r1, #228	; 0xe4
     af8:	add	r2, sp, #8
     afc:	movw	ip, #1
     b00:	str	ip, [sp]
     b04:	movw	ip, #0
     b08:	str	ip, [sp, #4]
     b0c:	bl	7e4 <sfbpf_compile@plt>
     b10:	cmp	r0, #0
     b14:	bge	b24 <ipfw_daq_set_filter+0x58>
     b18:	mvn	r0, #0
     b1c:	str	r0, [fp, #-4]
     b20:	b	b90 <ipfw_daq_set_filter+0xc4>
     b24:	ldr	r0, [sp, #16]
     b28:	ldr	r0, [r0, #32]
     b2c:	movw	r1, #0
     b30:	cmp	r0, r1
     b34:	beq	b44 <ipfw_daq_set_filter+0x78>
     b38:	ldr	r0, [sp, #16]
     b3c:	ldr	r0, [r0, #32]
     b40:	bl	784 <free@plt>
     b44:	ldr	r0, [sp, #16]
     b48:	ldr	r0, [r0, #296]	; 0x128
     b4c:	movw	r1, #0
     b50:	cmp	r0, r1
     b54:	beq	b64 <ipfw_daq_set_filter+0x98>
     b58:	ldr	r0, [sp, #16]
     b5c:	ldr	r0, [r0, #296]	; 0x128
     b60:	bl	784 <free@plt>
     b64:	ldr	r0, [fp, #-12]
     b68:	bl	7b4 <strdup@plt>
     b6c:	ldr	lr, [sp, #16]
     b70:	str	r0, [lr, #32]
     b74:	ldr	r0, [sp, #16]
     b78:	ldr	lr, [sp, #8]
     b7c:	str	lr, [r0, #292]	; 0x124
     b80:	ldr	lr, [sp, #12]
     b84:	str	lr, [r0, #296]	; 0x128
     b88:	movw	r0, #0
     b8c:	str	r0, [fp, #-4]
     b90:	ldr	r0, [fp, #-4]
     b94:	mov	sp, fp
     b98:	pop	{fp, pc}

00000b9c <ipfw_daq_start>:
     b9c:	push	{fp, lr}
     ba0:	mov	fp, sp
     ba4:	sub	sp, sp, #48	; 0x30
     ba8:	str	r0, [fp, #-8]
     bac:	ldr	r0, [fp, #-8]
     bb0:	str	r0, [fp, #-12]
     bb4:	ldr	r0, [fp, #-12]
     bb8:	ldr	r0, [r0, #8]
     bbc:	movw	r1, #3
     bc0:	movw	r2, #254	; 0xfe
     bc4:	bl	850 <socket@plt>
     bc8:	ldr	r1, [fp, #-12]
     bcc:	str	r0, [r1]
     bd0:	cmn	r0, #1
     bd4:	bne	c2c <ipfw_daq_start+0x90>
     bd8:	ldr	r0, [fp, #-12]
     bdc:	add	r0, r0, #36	; 0x24
     be0:	str	r0, [fp, #-20]	; 0xffffffec
     be4:	bl	808 <__errno_location@plt>
     be8:	ldr	r0, [r0]
     bec:	bl	7f0 <strerror@plt>
     bf0:	ldr	lr, [pc, #216]	; cd0 <ipfw_daq_start+0x134>
     bf4:	add	r2, pc, lr
     bf8:	ldr	lr, [pc, #212]	; cd4 <ipfw_daq_start+0x138>
     bfc:	add	r3, pc, lr
     c00:	ldr	lr, [fp, #-20]	; 0xffffffec
     c04:	str	r0, [sp, #24]
     c08:	mov	r0, lr
     c0c:	movw	r1, #256	; 0x100
     c10:	ldr	ip, [sp, #24]
     c14:	str	ip, [sp]
     c18:	bl	814 <snprintf@plt>
     c1c:	mvn	r1, #0
     c20:	str	r1, [fp, #-4]
     c24:	str	r0, [sp, #20]
     c28:	b	cbc <ipfw_daq_start+0x120>
     c2c:	ldr	r0, [fp, #-12]
     c30:	ldr	r0, [r0]
     c34:	ldr	r1, [fp, #-12]
     c38:	add	r1, r1, #300	; 0x12c
     c3c:	str	r1, [fp, #-16]
     c40:	ldr	r1, [fp, #-16]
     c44:	movw	r2, #16
     c48:	bl	820 <bind@plt>
     c4c:	cmn	r0, #1
     c50:	bne	ca8 <ipfw_daq_start+0x10c>
     c54:	ldr	r0, [fp, #-12]
     c58:	add	r0, r0, #36	; 0x24
     c5c:	str	r0, [sp, #16]
     c60:	bl	808 <__errno_location@plt>
     c64:	ldr	r0, [r0]
     c68:	bl	7f0 <strerror@plt>
     c6c:	ldr	lr, [pc, #84]	; cc8 <ipfw_daq_start+0x12c>
     c70:	add	r2, pc, lr
     c74:	ldr	lr, [pc, #80]	; ccc <ipfw_daq_start+0x130>
     c78:	add	r3, pc, lr
     c7c:	ldr	lr, [sp, #16]
     c80:	str	r0, [sp, #12]
     c84:	mov	r0, lr
     c88:	movw	r1, #256	; 0x100
     c8c:	ldr	ip, [sp, #12]
     c90:	str	ip, [sp]
     c94:	bl	814 <snprintf@plt>
     c98:	mvn	r1, #0
     c9c:	str	r1, [fp, #-4]
     ca0:	str	r0, [sp, #8]
     ca4:	b	cbc <ipfw_daq_start+0x120>
     ca8:	ldr	r0, [fp, #-12]
     cac:	movw	r1, #2
     cb0:	str	r1, [r0, #316]	; 0x13c
     cb4:	movw	r0, #0
     cb8:	str	r0, [fp, #-4]
     cbc:	ldr	r0, [fp, #-4]
     cc0:	mov	sp, fp
     cc4:	pop	{fp, pc}
     cc8:	.word	0x00000d1e
     ccc:	.word	0x00000d07
     cd0:	.word	0x00000d66
     cd4:	.word	0x00000d83

00000cd8 <ipfw_daq_acquire>:
     cd8:	push	{r4, r5, fp, lr}
     cdc:	add	fp, sp, #8
     ce0:	sub	sp, sp, #304	; 0x130
     ce4:	ldr	ip, [fp, #8]
     ce8:	str	r0, [fp, #-16]
     cec:	str	r1, [fp, #-20]	; 0xffffffec
     cf0:	str	r2, [fp, #-24]	; 0xffffffe8
     cf4:	str	r3, [fp, #-28]	; 0xffffffe4
     cf8:	ldr	r0, [fp, #-16]
     cfc:	str	r0, [fp, #-32]	; 0xffffffe0
     d00:	movw	r0, #0
     d04:	str	r0, [sp, #148]	; 0x94
     d08:	str	r0, [sp, #144]	; 0x90
     d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
     d10:	cmp	r0, #0
     d14:	str	ip, [sp, #60]	; 0x3c
     d18:	bne	d28 <ipfw_daq_acquire+0x50>
     d1c:	mvn	r0, #0
     d20:	str	r0, [sp, #56]	; 0x38
     d24:	b	d30 <ipfw_daq_acquire+0x58>
     d28:	ldr	r0, [fp, #-20]	; 0xffffffec
     d2c:	str	r0, [sp, #56]	; 0x38
     d30:	ldr	r0, [sp, #56]	; 0x38
     d34:	ldr	r1, [fp, #-32]	; 0xffffffe0
     d38:	str	r0, [r1, #12]
     d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     d40:	ldr	r0, [r0, #12]
     d44:	cmp	r0, #0
     d48:	movw	r0, #1
     d4c:	str	r0, [sp, #52]	; 0x34
     d50:	blt	d70 <ipfw_daq_acquire+0x98>
     d54:	ldr	r0, [sp, #148]	; 0x94
     d58:	ldr	r1, [fp, #-32]	; 0xffffffe0
     d5c:	ldr	r1, [r1, #12]
     d60:	cmp	r0, r1
     d64:	movw	r0, #0
     d68:	movlt	r0, #1
     d6c:	str	r0, [sp, #52]	; 0x34
     d70:	ldr	r0, [sp, #52]	; 0x34
     d74:	tst	r0, #1
     d78:	beq	110c <ipfw_daq_acquire+0x434>
     d7c:	b	d80 <ipfw_daq_acquire+0xa8>
     d80:	add	r0, sp, #152	; 0x98
     d84:	str	r0, [sp, #132]	; 0x84
     d88:	movw	r0, #0
     d8c:	str	r0, [sp, #136]	; 0x88
     d90:	ldr	r0, [sp, #136]	; 0x88
     d94:	cmp	r0, #32
     d98:	bcs	dc0 <ipfw_daq_acquire+0xe8>
     d9c:	ldr	r0, [sp, #132]	; 0x84
     da0:	ldr	r1, [sp, #136]	; 0x88
     da4:	add	r0, r0, r1, lsl #2
     da8:	movw	r1, #0
     dac:	str	r1, [r0]
     db0:	ldr	r0, [sp, #136]	; 0x88
     db4:	add	r0, r0, #1
     db8:	str	r0, [sp, #136]	; 0x88
     dbc:	b	d90 <ipfw_daq_acquire+0xb8>
     dc0:	b	dc4 <ipfw_daq_acquire+0xec>
     dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dc8:	ldr	r0, [r0]
     dcc:	asr	r1, r0, #31
     dd0:	add	r1, r0, r1, lsr #27
     dd4:	bic	r2, r1, #31
     dd8:	sub	r0, r0, r2
     ddc:	mov	r2, #1
     de0:	lsl	r0, r2, r0
     de4:	add	r2, sp, #152	; 0x98
     de8:	asr	r1, r1, #5
     dec:	add	r1, r2, r1, lsl #2
     df0:	ldr	r2, [r1]
     df4:	orr	r0, r2, r0
     df8:	str	r0, [r1]
     dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e00:	ldr	r0, [r0, #20]
     e04:	str	r0, [sp, #140]	; 0x8c
     e08:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e0c:	ldr	r0, [r0]
     e10:	add	r0, r0, #1
     e14:	add	r1, sp, #152	; 0x98
     e18:	movw	r2, #0
     e1c:	str	r2, [sp, #48]	; 0x30
     e20:	ldr	r3, [sp, #48]	; 0x30
     e24:	add	ip, sp, #140	; 0x8c
     e28:	str	ip, [sp]
     e2c:	bl	79c <select@plt>
     e30:	cmp	r0, #0
     e34:	bge	ea0 <ipfw_daq_acquire+0x1c8>
     e38:	bl	808 <__errno_location@plt>
     e3c:	ldr	r0, [r0]
     e40:	cmp	r0, #4
     e44:	bne	e4c <ipfw_daq_acquire+0x174>
     e48:	b	110c <ipfw_daq_acquire+0x434>
     e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e50:	add	r0, r0, #36	; 0x24
     e54:	str	r0, [sp, #44]	; 0x2c
     e58:	bl	808 <__errno_location@plt>
     e5c:	ldr	r0, [r0]
     e60:	bl	7f0 <strerror@plt>
     e64:	ldr	lr, [pc, #704]	; 112c <ipfw_daq_acquire+0x454>
     e68:	add	r2, pc, lr
     e6c:	ldr	lr, [pc, #700]	; 1130 <ipfw_daq_acquire+0x458>
     e70:	add	r3, pc, lr
     e74:	ldr	lr, [sp, #44]	; 0x2c
     e78:	str	r0, [sp, #40]	; 0x28
     e7c:	mov	r0, lr
     e80:	movw	r1, #256	; 0x100
     e84:	ldr	ip, [sp, #40]	; 0x28
     e88:	str	ip, [sp]
     e8c:	bl	814 <snprintf@plt>
     e90:	mvn	r1, #0
     e94:	str	r1, [fp, #-12]
     e98:	str	r0, [sp, #36]	; 0x24
     e9c:	b	1114 <ipfw_daq_acquire+0x43c>
     ea0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ea4:	ldr	r0, [r0]
     ea8:	asr	r1, r0, #31
     eac:	add	r1, r0, r1, lsr #27
     eb0:	asr	r2, r1, #5
     eb4:	add	r3, sp, #152	; 0x98
     eb8:	ldr	r2, [r3, r2, lsl #2]
     ebc:	bic	r1, r1, #31
     ec0:	sub	r0, r0, r1
     ec4:	movw	r1, #1
     ec8:	lsl	r0, r1, r0
     ecc:	and	r0, r2, r0
     ed0:	cmp	r0, #0
     ed4:	beq	1108 <ipfw_daq_acquire+0x430>
     ed8:	movw	r0, #16
     edc:	str	r0, [sp, #128]	; 0x80
     ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ee4:	ldr	r0, [r0]
     ee8:	ldr	r1, [fp, #-32]	; 0xffffffe0
     eec:	ldr	r1, [r1, #28]
     ef0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     ef4:	ldr	r2, [r2, #24]
     ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     efc:	add	r3, r3, #300	; 0x12c
     f00:	str	r3, [sp, #64]	; 0x40
     f04:	ldr	r3, [sp, #64]	; 0x40
     f08:	movw	ip, #0
     f0c:	str	r3, [sp, #32]
     f10:	mov	r3, ip
     f14:	ldr	ip, [sp, #32]
     f18:	str	ip, [sp]
     f1c:	add	lr, sp, #128	; 0x80
     f20:	str	lr, [sp, #4]
     f24:	bl	7a8 <recvfrom@plt>
     f28:	str	r0, [sp, #124]	; 0x7c
     f2c:	cmn	r0, #1
     f30:	bne	f9c <ipfw_daq_acquire+0x2c4>
     f34:	bl	808 <__errno_location@plt>
     f38:	ldr	r0, [r0]
     f3c:	cmp	r0, #4
     f40:	beq	f98 <ipfw_daq_acquire+0x2c0>
     f44:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f48:	add	r0, r0, #36	; 0x24
     f4c:	str	r0, [sp, #28]
     f50:	bl	808 <__errno_location@plt>
     f54:	ldr	r0, [r0]
     f58:	bl	7f0 <strerror@plt>
     f5c:	ldr	lr, [pc, #448]	; 1124 <ipfw_daq_acquire+0x44c>
     f60:	add	r2, pc, lr
     f64:	ldr	lr, [pc, #444]	; 1128 <ipfw_daq_acquire+0x450>
     f68:	add	r3, pc, lr
     f6c:	ldr	lr, [sp, #28]
     f70:	str	r0, [sp, #24]
     f74:	mov	r0, lr
     f78:	movw	r1, #256	; 0x100
     f7c:	ldr	ip, [sp, #24]
     f80:	str	ip, [sp]
     f84:	bl	814 <snprintf@plt>
     f88:	mvn	r1, #0
     f8c:	str	r1, [fp, #-12]
     f90:	str	r0, [sp, #20]
     f94:	b	1114 <ipfw_daq_acquire+0x43c>
     f98:	b	f9c <ipfw_daq_acquire+0x2c4>
     f9c:	ldr	r1, [sp, #124]	; 0x7c
     fa0:	add	r0, sp, #72	; 0x48
     fa4:	bl	16d0 <SetPktHdr>
     fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fac:	ldr	r1, [r0, #320]	; 0x140
     fb0:	ldr	lr, [r0, #324]	; 0x144
     fb4:	adds	r1, r1, #1
     fb8:	adc	lr, lr, #0
     fbc:	str	r1, [r0, #320]	; 0x140
     fc0:	str	lr, [r0, #324]	; 0x144
     fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fc8:	ldr	r0, [r0, #296]	; 0x128
     fcc:	movw	r1, #0
     fd0:	cmp	r0, r1
     fd4:	beq	1024 <ipfw_daq_acquire+0x34c>
     fd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fdc:	ldr	r0, [r0, #296]	; 0x128
     fe0:	ldr	r1, [fp, #-32]	; 0xffffffe0
     fe4:	ldr	r1, [r1, #28]
     fe8:	ldr	r2, [sp, #80]	; 0x50
     fec:	ldr	r3, [sp, #80]	; 0x50
     ff0:	bl	844 <sfbpf_filter@plt>
     ff4:	cmp	r0, #0
     ff8:	bne	1024 <ipfw_daq_acquire+0x34c>
     ffc:	mov	r0, #0
    1000:	str	r0, [sp, #68]	; 0x44
    1004:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1008:	ldr	r1, [r0, #344]	; 0x158
    100c:	ldr	r2, [r0, #348]	; 0x15c
    1010:	adds	r1, r1, #1
    1014:	adc	r2, r2, #0
    1018:	str	r1, [r0, #344]	; 0x158
    101c:	str	r2, [r0, #348]	; 0x15c
    1020:	b	10a0 <ipfw_daq_acquire+0x3c8>
    1024:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1028:	ldr	r1, [fp, #-32]	; 0xffffffe0
    102c:	ldr	r2, [r1, #28]
    1030:	movw	r1, #0
    1034:	str	r0, [sp, #16]
    1038:	mov	r0, r1
    103c:	add	r1, sp, #72	; 0x48
    1040:	ldr	r3, [sp, #16]
    1044:	blx	r3
    1048:	str	r0, [sp, #68]	; 0x44
    104c:	ldr	r0, [sp, #68]	; 0x44
    1050:	cmp	r0, #7
    1054:	bcc	1060 <ipfw_daq_acquire+0x388>
    1058:	movw	r0, #1
    105c:	str	r0, [sp, #68]	; 0x44
    1060:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1064:	ldr	r1, [sp, #68]	; 0x44
    1068:	add	r0, r0, r1, lsl #3
    106c:	ldr	r1, [r0, #360]	; 0x168
    1070:	ldr	r2, [r0, #364]	; 0x16c
    1074:	adds	r1, r1, #1
    1078:	adc	r2, r2, #0
    107c:	str	r1, [r0, #360]	; 0x168
    1080:	str	r2, [r0, #364]	; 0x16c
    1084:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1088:	ldr	r1, [r0, #336]	; 0x150
    108c:	ldr	r2, [r0, #340]	; 0x154
    1090:	adds	r1, r1, #1
    1094:	adc	r2, r2, #0
    1098:	str	r1, [r0, #336]	; 0x150
    109c:	str	r2, [r0, #340]	; 0x154
    10a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10a4:	ldr	r0, [r0, #16]
    10a8:	cmp	r0, #0
    10ac:	bne	10d8 <ipfw_daq_acquire+0x400>
    10b0:	ldr	r0, [pc, #104]	; 1120 <ipfw_daq_acquire+0x448>
    10b4:	add	r0, pc, r0
    10b8:	ldr	r1, [sp, #68]	; 0x44
    10bc:	ldr	r2, [pc, #112]	; 1134 <ipfw_daq_acquire+0x45c>
    10c0:	add	r2, pc, r2
    10c4:	add	r1, r2, r1, lsl #2
    10c8:	ldr	r1, [r1]
    10cc:	cmp	r1, #0
    10d0:	str	r0, [sp, #12]
    10d4:	beq	10fc <ipfw_daq_acquire+0x424>
    10d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    10e0:	ldr	r2, [r1, #28]
    10e4:	ldr	r3, [sp, #84]	; 0x54
    10e8:	add	r1, sp, #72	; 0x48
    10ec:	movw	ip, #0
    10f0:	str	ip, [sp]
    10f4:	bl	17a0 <ipfw_daq_forward>
    10f8:	str	r0, [sp, #8]
    10fc:	ldr	r0, [sp, #148]	; 0x94
    1100:	add	r0, r0, #1
    1104:	str	r0, [sp, #148]	; 0x94
    1108:	b	d3c <ipfw_daq_acquire+0x64>
    110c:	movw	r0, #0
    1110:	str	r0, [fp, #-12]
    1114:	ldr	r0, [fp, #-12]
    1118:	sub	sp, fp, #8
    111c:	pop	{r4, r5, fp, pc}
    1120:	.word	0x00000994
    1124:	.word	0x00000a87
    1128:	.word	0x00000a6e
    112c:	.word	0x00000b49
    1130:	.word	0x00000b66
    1134:	.word	0x00000988

00001138 <ipfw_daq_inject>:
    1138:	push	{fp, lr}
    113c:	mov	fp, sp
    1140:	sub	sp, sp, #32
    1144:	ldr	ip, [fp, #8]
    1148:	str	r0, [fp, #-4]
    114c:	str	r1, [fp, #-8]
    1150:	str	r2, [fp, #-12]
    1154:	str	r3, [sp, #16]
    1158:	ldr	r0, [fp, #-4]
    115c:	str	r0, [sp, #12]
    1160:	ldr	r0, [sp, #12]
    1164:	ldr	r1, [fp, #-8]
    1168:	ldr	r2, [fp, #-12]
    116c:	ldr	r3, [sp, #16]
    1170:	movw	lr, #0
    1174:	str	lr, [sp]
    1178:	str	ip, [sp, #4]
    117c:	bl	17a0 <ipfw_daq_forward>
    1180:	str	r0, [sp, #8]
    1184:	ldr	r0, [sp, #8]
    1188:	cmp	r0, #0
    118c:	bne	11ac <ipfw_daq_inject+0x74>
    1190:	ldr	r0, [sp, #12]
    1194:	ldr	r1, [r0, #352]	; 0x160
    1198:	ldr	r2, [r0, #356]	; 0x164
    119c:	adds	r1, r1, #1
    11a0:	adc	r2, r2, #0
    11a4:	str	r1, [r0, #352]	; 0x160
    11a8:	str	r2, [r0, #356]	; 0x164
    11ac:	ldr	r0, [sp, #8]
    11b0:	mov	sp, fp
    11b4:	pop	{fp, pc}

000011b8 <ipfw_daq_breakloop>:
    11b8:	sub	sp, sp, #8
    11bc:	str	r0, [sp, #4]
    11c0:	ldr	r0, [sp, #4]
    11c4:	str	r0, [sp]
    11c8:	ldr	r0, [sp]
    11cc:	movw	r1, #0
    11d0:	str	r1, [r0, #12]
    11d4:	mov	r0, r1
    11d8:	add	sp, sp, #8
    11dc:	bx	lr

000011e0 <ipfw_daq_stop>:
    11e0:	push	{fp, lr}
    11e4:	mov	fp, sp
    11e8:	sub	sp, sp, #16
    11ec:	str	r0, [fp, #-4]
    11f0:	ldr	r0, [fp, #-4]
    11f4:	str	r0, [sp, #8]
    11f8:	ldr	r0, [sp, #8]
    11fc:	ldr	r0, [r0]
    1200:	bl	85c <close@plt>
    1204:	ldr	lr, [sp, #8]
    1208:	mvn	r1, #0
    120c:	str	r1, [lr]
    1210:	ldr	r1, [sp, #8]
    1214:	movw	lr, #3
    1218:	str	lr, [r1, #316]	; 0x13c
    121c:	movw	r1, #0
    1220:	str	r0, [sp, #4]
    1224:	mov	r0, r1
    1228:	mov	sp, fp
    122c:	pop	{fp, pc}

00001230 <ipfw_daq_shutdown>:
    1230:	push	{fp, lr}
    1234:	mov	fp, sp
    1238:	sub	sp, sp, #8
    123c:	str	r0, [sp, #4]
    1240:	ldr	r0, [sp, #4]
    1244:	str	r0, [sp]
    1248:	ldr	r0, [sp]
    124c:	ldr	r0, [r0, #32]
    1250:	movw	r1, #0
    1254:	cmp	r0, r1
    1258:	beq	1268 <ipfw_daq_shutdown+0x38>
    125c:	ldr	r0, [sp]
    1260:	ldr	r0, [r0, #32]
    1264:	bl	784 <free@plt>
    1268:	ldr	r0, [sp]
    126c:	ldr	r0, [r0, #28]
    1270:	movw	r1, #0
    1274:	cmp	r0, r1
    1278:	beq	1288 <ipfw_daq_shutdown+0x58>
    127c:	ldr	r0, [sp]
    1280:	ldr	r0, [r0, #28]
    1284:	bl	784 <free@plt>
    1288:	ldr	r0, [sp]
    128c:	bl	784 <free@plt>
    1290:	mov	sp, fp
    1294:	pop	{fp, pc}

00001298 <ipfw_daq_check_status>:
    1298:	sub	sp, sp, #8
    129c:	str	r0, [sp, #4]
    12a0:	ldr	r0, [sp, #4]
    12a4:	str	r0, [sp]
    12a8:	ldr	r0, [sp]
    12ac:	ldr	r0, [r0, #316]	; 0x13c
    12b0:	add	sp, sp, #8
    12b4:	bx	lr

000012b8 <ipfw_daq_get_stats>:
    12b8:	push	{fp, lr}
    12bc:	mov	fp, sp
    12c0:	sub	sp, sp, #16
    12c4:	str	r0, [fp, #-4]
    12c8:	str	r1, [sp, #8]
    12cc:	ldr	r0, [fp, #-4]
    12d0:	str	r0, [sp, #4]
    12d4:	ldr	r0, [sp, #8]
    12d8:	ldr	r1, [sp, #4]
    12dc:	add	r1, r1, #320	; 0x140
    12e0:	movw	r2, #96	; 0x60
    12e4:	bl	790 <memcpy@plt>
    12e8:	movw	r0, #0
    12ec:	mov	sp, fp
    12f0:	pop	{fp, pc}

000012f4 <ipfw_daq_reset_stats>:
    12f4:	push	{fp, lr}
    12f8:	mov	fp, sp
    12fc:	sub	sp, sp, #8
    1300:	str	r0, [sp, #4]
    1304:	ldr	r0, [sp, #4]
    1308:	str	r0, [sp]
    130c:	ldr	r0, [sp]
    1310:	add	r0, r0, #320	; 0x140
    1314:	movw	r1, #0
    1318:	and	r1, r1, #255	; 0xff
    131c:	movw	r2, #96	; 0x60
    1320:	bl	82c <memset@plt>
    1324:	mov	sp, fp
    1328:	pop	{fp, pc}

0000132c <ipfw_daq_get_snaplen>:
    132c:	sub	sp, sp, #8
    1330:	str	r0, [sp, #4]
    1334:	ldr	r0, [sp, #4]
    1338:	str	r0, [sp]
    133c:	ldr	r0, [sp]
    1340:	ldr	r0, [r0, #24]
    1344:	add	sp, sp, #8
    1348:	bx	lr

0000134c <ipfw_daq_get_capabilities>:
    134c:	sub	sp, sp, #4
    1350:	str	r0, [sp]
    1354:	movw	r0, #743	; 0x2e7
    1358:	add	sp, sp, #4
    135c:	bx	lr

00001360 <ipfw_daq_get_datalink_type>:
    1360:	sub	sp, sp, #4
    1364:	str	r0, [sp]
    1368:	movw	r0, #228	; 0xe4
    136c:	add	sp, sp, #4
    1370:	bx	lr

00001374 <ipfw_daq_get_errbuf>:
    1374:	sub	sp, sp, #8
    1378:	str	r0, [sp, #4]
    137c:	ldr	r0, [sp, #4]
    1380:	str	r0, [sp]
    1384:	ldr	r0, [sp]
    1388:	add	r0, r0, #36	; 0x24
    138c:	add	sp, sp, #8
    1390:	bx	lr

00001394 <ipfw_daq_set_errbuf>:
    1394:	push	{fp, lr}
    1398:	mov	fp, sp
    139c:	sub	sp, sp, #32
    13a0:	str	r0, [fp, #-4]
    13a4:	str	r1, [fp, #-8]
    13a8:	ldr	r0, [fp, #-4]
    13ac:	str	r0, [fp, #-12]
    13b0:	ldr	r0, [fp, #-12]
    13b4:	add	r0, r0, #36	; 0x24
    13b8:	ldr	r1, [fp, #-8]
    13bc:	movw	r2, #0
    13c0:	cmp	r1, r2
    13c4:	str	r0, [sp, #16]
    13c8:	beq	13d8 <ipfw_daq_set_errbuf+0x44>
    13cc:	ldr	r0, [fp, #-8]
    13d0:	str	r0, [sp, #12]
    13d4:	b	13e8 <ipfw_daq_set_errbuf+0x54>
    13d8:	ldr	r0, [pc, #56]	; 1418 <ipfw_daq_set_errbuf+0x84>
    13dc:	add	r0, pc, r0
    13e0:	str	r0, [sp, #12]
    13e4:	b	13e8 <ipfw_daq_set_errbuf+0x54>
    13e8:	ldr	r0, [sp, #12]
    13ec:	ldr	r1, [pc, #40]	; 141c <ipfw_daq_set_errbuf+0x88>
    13f0:	add	r2, pc, r1
    13f4:	ldr	r1, [sp, #16]
    13f8:	str	r0, [sp, #8]
    13fc:	mov	r0, r1
    1400:	movw	r1, #256	; 0x100
    1404:	ldr	r3, [sp, #8]
    1408:	bl	814 <snprintf@plt>
    140c:	str	r0, [sp, #4]
    1410:	mov	sp, fp
    1414:	pop	{fp, pc}
    1418:	.word	0x00000530
    141c:	.word	0x00000654

00001420 <ipfw_daq_get_device_index>:
    1420:	sub	sp, sp, #8
    1424:	str	r0, [sp, #4]
    1428:	str	r1, [sp]
    142c:	mvn	r0, #3
    1430:	add	sp, sp, #8
    1434:	bx	lr

00001438 <ipfw_daq_get_setup>:
    1438:	push	{fp, lr}
    143c:	mov	fp, sp
    1440:	sub	sp, sp, #56	; 0x38
    1444:	str	r0, [fp, #-8]
    1448:	str	r1, [fp, #-12]
    144c:	str	r2, [fp, #-16]
    1450:	str	r3, [fp, #-20]	; 0xffffffec
    1454:	ldr	r0, [fp, #-8]
    1458:	movw	r1, #2
    145c:	str	r1, [r0, #8]
    1460:	ldr	r0, [fp, #-8]
    1464:	movw	r1, #8000	; 0x1f40
    1468:	str	r1, [r0, #4]
    146c:	ldr	r0, [fp, #-12]
    1470:	ldr	r0, [r0, #20]
    1474:	str	r0, [fp, #-24]	; 0xffffffe8
    1478:	ldr	r0, [fp, #-24]	; 0xffffffe8
    147c:	movw	r1, #0
    1480:	cmp	r0, r1
    1484:	beq	15f8 <ipfw_daq_get_setup+0x1c0>
    1488:	ldr	r0, [fp, #-24]	; 0xffffffe8
    148c:	ldr	r0, [r0, #4]
    1490:	movw	r1, #0
    1494:	cmp	r0, r1
    1498:	beq	14b0 <ipfw_daq_get_setup+0x78>
    149c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14a0:	ldr	r0, [r0, #4]
    14a4:	ldrsb	r0, [r0]
    14a8:	cmp	r0, #0
    14ac:	bne	14e8 <ipfw_daq_get_setup+0xb0>
    14b0:	ldr	r0, [pc, #508]	; 16b4 <ipfw_daq_get_setup+0x27c>
    14b4:	add	r2, pc, r0
    14b8:	ldr	r0, [pc, #504]	; 16b8 <ipfw_daq_get_setup+0x280>
    14bc:	add	r3, pc, r0
    14c0:	ldr	r0, [fp, #-16]
    14c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    14c8:	ldr	ip, [fp, #-24]	; 0xffffffe8
    14cc:	ldr	ip, [ip]
    14d0:	str	ip, [sp]
    14d4:	bl	814 <snprintf@plt>
    14d8:	mvn	r1, #0
    14dc:	str	r1, [fp, #-4]
    14e0:	str	r0, [sp, #24]
    14e4:	b	16a8 <ipfw_daq_get_setup+0x270>
    14e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14ec:	ldr	r0, [r0]
    14f0:	ldr	r1, [pc, #468]	; 16cc <ipfw_daq_get_setup+0x294>
    14f4:	add	r1, pc, r1
    14f8:	bl	760 <strcmp@plt>
    14fc:	cmp	r0, #0
    1500:	bne	159c <ipfw_daq_get_setup+0x164>
    1504:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1508:	ldr	r0, [r0, #4]
    150c:	str	r0, [sp, #28]
    1510:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1514:	ldr	r0, [r0, #4]
    1518:	add	r1, sp, #28
    151c:	movw	r2, #0
    1520:	bl	778 <strtol@plt>
    1524:	ldr	r1, [fp, #-8]
    1528:	str	r0, [r1, #4]
    152c:	ldr	r0, [sp, #28]
    1530:	ldrb	r0, [r0]
    1534:	cmp	r0, #0
    1538:	bne	1560 <ipfw_daq_get_setup+0x128>
    153c:	ldr	r0, [fp, #-8]
    1540:	ldr	r0, [r0, #4]
    1544:	cmp	r0, #0
    1548:	ble	1560 <ipfw_daq_get_setup+0x128>
    154c:	ldr	r0, [fp, #-8]
    1550:	ldr	r0, [r0, #4]
    1554:	movw	r1, #65535	; 0xffff
    1558:	cmp	r0, r1
    155c:	ble	1598 <ipfw_daq_get_setup+0x160>
    1560:	ldr	r0, [pc, #340]	; 16bc <ipfw_daq_get_setup+0x284>
    1564:	add	r2, pc, r0
    1568:	ldr	r0, [pc, #336]	; 16c0 <ipfw_daq_get_setup+0x288>
    156c:	add	r3, pc, r0
    1570:	ldr	r0, [fp, #-16]
    1574:	ldr	r1, [fp, #-20]	; 0xffffffec
    1578:	ldr	ip, [fp, #-24]	; 0xffffffe8
    157c:	ldr	ip, [ip, #4]
    1580:	str	ip, [sp]
    1584:	bl	814 <snprintf@plt>
    1588:	mvn	r1, #0
    158c:	str	r1, [fp, #-4]
    1590:	str	r0, [sp, #20]
    1594:	b	16a8 <ipfw_daq_get_setup+0x270>
    1598:	b	15e0 <ipfw_daq_get_setup+0x1a8>
    159c:	ldr	r0, [pc, #288]	; 16c4 <ipfw_daq_get_setup+0x28c>
    15a0:	add	r2, pc, r0
    15a4:	ldr	r0, [pc, #284]	; 16c8 <ipfw_daq_get_setup+0x290>
    15a8:	add	r3, pc, r0
    15ac:	ldr	r0, [fp, #-16]
    15b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    15b4:	ldr	ip, [fp, #-24]	; 0xffffffe8
    15b8:	ldr	ip, [ip]
    15bc:	ldr	lr, [fp, #-24]	; 0xffffffe8
    15c0:	ldr	lr, [lr, #4]
    15c4:	str	ip, [sp]
    15c8:	str	lr, [sp, #4]
    15cc:	bl	814 <snprintf@plt>
    15d0:	mvn	r1, #0
    15d4:	str	r1, [fp, #-4]
    15d8:	str	r0, [sp, #16]
    15dc:	b	16a8 <ipfw_daq_get_setup+0x270>
    15e0:	b	15e4 <ipfw_daq_get_setup+0x1ac>
    15e4:	b	15e8 <ipfw_daq_get_setup+0x1b0>
    15e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15ec:	ldr	r0, [r0, #8]
    15f0:	str	r0, [fp, #-24]	; 0xffffffe8
    15f4:	b	1478 <ipfw_daq_get_setup+0x40>
    15f8:	ldr	r0, [fp, #-12]
    15fc:	ldr	r0, [r0, #4]
    1600:	cmp	r0, #0
    1604:	beq	1618 <ipfw_daq_get_setup+0x1e0>
    1608:	ldr	r0, [fp, #-12]
    160c:	ldr	r0, [r0, #4]
    1610:	str	r0, [sp, #12]
    1614:	b	1624 <ipfw_daq_get_setup+0x1ec>
    1618:	movw	r0, #65535	; 0xffff
    161c:	str	r0, [sp, #12]
    1620:	b	1624 <ipfw_daq_get_setup+0x1ec>
    1624:	ldr	r0, [sp, #12]
    1628:	ldr	r1, [fp, #-8]
    162c:	str	r0, [r1, #24]
    1630:	ldr	r0, [fp, #-12]
    1634:	ldr	r0, [r0, #8]
    1638:	ldr	r1, [fp, #-8]
    163c:	str	r0, [r1, #20]
    1640:	ldr	r0, [fp, #-12]
    1644:	ldr	r0, [r0, #12]
    1648:	cmp	r0, #0
    164c:	movw	r0, #0
    1650:	moveq	r0, #1
    1654:	and	r0, r0, #1
    1658:	ldr	r1, [fp, #-8]
    165c:	str	r0, [r1, #16]
    1660:	ldr	r0, [fp, #-8]
    1664:	ldr	r0, [r0, #8]
    1668:	ldr	r1, [fp, #-8]
    166c:	add	r1, r1, #300	; 0x12c
    1670:	strh	r0, [r1]
    1674:	ldr	r0, [fp, #-8]
    1678:	movw	r1, #0
    167c:	str	r1, [r0, #304]	; 0x130
    1680:	ldr	r0, [fp, #-8]
    1684:	ldr	r0, [r0, #4]
    1688:	uxth	r0, r0
    168c:	bl	7c0 <htons@plt>
    1690:	ldr	r1, [fp, #-8]
    1694:	movw	lr, #302	; 0x12e
    1698:	add	r1, r1, lr
    169c:	strh	r0, [r1]
    16a0:	movw	r0, #0
    16a4:	str	r0, [fp, #-4]
    16a8:	ldr	r0, [fp, #-4]
    16ac:	mov	sp, fp
    16b0:	pop	{fp, pc}
    16b4:	.word	0x0000043a
    16b8:	.word	0x00000451
    16bc:	.word	0x000003c1
    16c0:	.word	0x000003a1
    16c4:	.word	0x00000398
    16c8:	.word	0x00000365
    16cc:	.word	0x0000042c

000016d0 <SetPktHdr>:
    16d0:	push	{fp, lr}
    16d4:	mov	fp, sp
    16d8:	sub	sp, sp, #16
    16dc:	ldr	r2, [pc, #184]	; 179c <SetPktHdr+0xcc>
    16e0:	add	r2, pc, r2
    16e4:	mov	r3, r2
    16e8:	str	r0, [fp, #-4]
    16ec:	str	r1, [sp, #8]
    16f0:	mov	r0, r3
    16f4:	movw	r1, #0
    16f8:	and	r1, r1, #255	; 0xff
    16fc:	movw	r3, #8
    1700:	str	r2, [sp, #4]
    1704:	mov	r2, r3
    1708:	bl	82c <memset@plt>
    170c:	ldr	r0, [sp, #4]
    1710:	movw	r1, #0
    1714:	bl	7cc <gettimeofday@plt>
    1718:	ldr	r1, [pc, #120]	; 1798 <SetPktHdr+0xc8>
    171c:	add	r1, pc, r1
    1720:	ldr	r2, [r1]
    1724:	ldr	r3, [fp, #-4]
    1728:	str	r2, [r3]
    172c:	ldr	r1, [r1, #4]
    1730:	ldr	r2, [fp, #-4]
    1734:	str	r1, [r2, #4]
    1738:	ldr	r1, [sp, #8]
    173c:	ldr	r2, [fp, #-4]
    1740:	str	r1, [r2, #8]
    1744:	ldr	r1, [sp, #8]
    1748:	ldr	r2, [fp, #-4]
    174c:	str	r1, [r2, #12]
    1750:	ldr	r1, [fp, #-4]
    1754:	mvn	r2, #0
    1758:	str	r2, [r1, #16]
    175c:	ldr	r1, [fp, #-4]
    1760:	str	r2, [r1, #20]
    1764:	ldr	r1, [fp, #-4]
    1768:	str	r2, [r1, #24]
    176c:	ldr	r1, [fp, #-4]
    1770:	str	r2, [r1, #28]
    1774:	ldr	r1, [fp, #-4]
    1778:	movw	r2, #0
    177c:	str	r2, [r1, #32]
    1780:	ldr	r1, [fp, #-4]
    1784:	movw	r2, #0
    1788:	strh	r2, [r1, #48]	; 0x30
    178c:	str	r0, [sp]
    1790:	mov	sp, fp
    1794:	pop	{fp, pc}
    1798:	.word	0x000109c4
    179c:	.word	0x00010a00

000017a0 <ipfw_daq_forward>:
    17a0:	push	{r4, sl, fp, lr}
    17a4:	add	fp, sp, #8
    17a8:	sub	sp, sp, #56	; 0x38
    17ac:	ldr	ip, [fp, #8]
    17b0:	str	r0, [fp, #-16]
    17b4:	str	r1, [fp, #-20]	; 0xffffffec
    17b8:	str	r2, [fp, #-24]	; 0xffffffe8
    17bc:	str	r3, [fp, #-28]	; 0xffffffe4
    17c0:	ldr	r0, [fp, #-16]
    17c4:	ldr	r0, [r0]
    17c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    17d0:	ldr	r3, [fp, #-16]
    17d4:	add	r3, r3, #300	; 0x12c
    17d8:	str	r3, [sp, #28]
    17dc:	ldr	r3, [sp, #28]
    17e0:	movw	lr, #0
    17e4:	str	r3, [sp, #24]
    17e8:	mov	r3, lr
    17ec:	ldr	lr, [sp, #24]
    17f0:	str	lr, [sp]
    17f4:	movw	r4, #16
    17f8:	str	r4, [sp, #4]
    17fc:	str	ip, [sp, #20]
    1800:	bl	838 <sendto@plt>
    1804:	str	r0, [sp, #32]
    1808:	ldr	r0, [sp, #32]
    180c:	cmn	r0, #1
    1810:	bne	1868 <ipfw_daq_forward+0xc8>
    1814:	ldr	r0, [fp, #-16]
    1818:	add	r0, r0, #36	; 0x24
    181c:	str	r0, [sp, #16]
    1820:	bl	808 <__errno_location@plt>
    1824:	ldr	r0, [r0]
    1828:	bl	7f0 <strerror@plt>
    182c:	ldr	lr, [pc, #72]	; 187c <ipfw_daq_forward+0xdc>
    1830:	add	r2, pc, lr
    1834:	ldr	lr, [pc, #68]	; 1880 <ipfw_daq_forward+0xe0>
    1838:	add	r3, pc, lr
    183c:	ldr	lr, [sp, #16]
    1840:	str	r0, [sp, #12]
    1844:	mov	r0, lr
    1848:	movw	r1, #256	; 0x100
    184c:	ldr	ip, [sp, #12]
    1850:	str	ip, [sp]
    1854:	bl	814 <snprintf@plt>
    1858:	mvn	r1, #0
    185c:	str	r1, [fp, #-12]
    1860:	str	r0, [sp, #8]
    1864:	b	1870 <ipfw_daq_forward+0xd0>
    1868:	movw	r0, #0
    186c:	str	r0, [fp, #-12]
    1870:	ldr	r0, [fp, #-12]
    1874:	sub	sp, fp, #8
    1878:	pop	{r4, sl, fp, pc}
    187c:	.word	0x000001de
    1880:	.word	0x000001fb

Disassembly of section .fini:

00001884 <_fini>:
    1884:	push	{r3, lr}
    1888:	pop	{r3, pc}
