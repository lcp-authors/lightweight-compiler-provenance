
../repos/charybdis/modules/.libs/m_cap.so:     file format elf32-littlearm


Disassembly of section .init:

000006f4 <_init>:
 6f4:	push	{r3, lr}
 6f8:	bl	7b0 <call_weak_fn>
 6fc:	pop	{r3, pc}

Disassembly of section .plt:

00000700 <.plt>:
 700:	push	{lr}		; (str lr, [sp, #-4]!)
 704:	ldr	lr, [pc, #4]	; 710 <.plt+0x10>
 708:	add	lr, pc, lr
 70c:	ldr	pc, [lr, #8]!
 710:	.word	0x000118f0

00000714 <__cxa_finalize@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2288]!	; 0x8f0

00000720 <strtol@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2280]!	; 0x8e8

0000072c <sendto_one@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2272]!	; 0x8e0

00000738 <rb_snprintf_try_append@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2264]!	; 0x8d8

00000744 <rb_dictionary_foreach_start@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2256]!	; 0x8d0

00000750 <__gmon_start__@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2248]!	; 0x8c8

0000075c <strchr@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2240]!	; 0x8c0

00000768 <capability_find@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2232]!	; 0x8b8

00000774 <rb_dictionary_foreach_cur@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2224]!	; 0x8b0

00000780 <rb_strlcpy@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2216]!	; 0x8a8

0000078c <register_local_user@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2208]!	; 0x8a0

00000798 <rb_dictionary_foreach_next@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2200]!	; 0x898

000007a4 <irccmp@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2192]!	; 0x890

Disassembly of section .text:

000007b0 <call_weak_fn>:
     7b0:	ldr	r3, [pc, #20]	; 7cc <call_weak_fn+0x1c>
     7b4:	ldr	r2, [pc, #20]	; 7d0 <call_weak_fn+0x20>
     7b8:	add	r3, pc, r3
     7bc:	ldr	r2, [r3, r2]
     7c0:	cmp	r2, #0
     7c4:	bxeq	lr
     7c8:	b	750 <__gmon_start__@plt>
     7cc:	.word	0x00011840
     7d0:	.word	0x00000048

000007d4 <deregister_tm_clones>:
     7d4:	ldr	r0, [pc, #44]	; 808 <deregister_tm_clones+0x34>
     7d8:	ldr	r3, [pc, #44]	; 80c <deregister_tm_clones+0x38>
     7dc:	add	r0, pc, r0
     7e0:	add	r3, pc, r3
     7e4:	cmp	r3, r0
     7e8:	ldr	r3, [pc, #32]	; 810 <deregister_tm_clones+0x3c>
     7ec:	add	r3, pc, r3
     7f0:	bxeq	lr
     7f4:	ldr	r2, [pc, #24]	; 814 <deregister_tm_clones+0x40>
     7f8:	ldr	r3, [r3, r2]
     7fc:	cmp	r3, #0
     800:	bxeq	lr
     804:	bx	r3
     808:	.word	0x000118f4
     80c:	.word	0x000118f0
     810:	.word	0x0001180c
     814:	.word	0x00000044

00000818 <register_tm_clones>:
     818:	ldr	r0, [pc, #56]	; 858 <register_tm_clones+0x40>
     81c:	ldr	r3, [pc, #56]	; 85c <register_tm_clones+0x44>
     820:	add	r0, pc, r0
     824:	add	r3, pc, r3
     828:	sub	r1, r3, r0
     82c:	ldr	r3, [pc, #44]	; 860 <register_tm_clones+0x48>
     830:	asr	r1, r1, #2
     834:	add	r3, pc, r3
     838:	add	r1, r1, r1, lsr #31
     83c:	asrs	r1, r1, #1
     840:	bxeq	lr
     844:	ldr	r2, [pc, #24]	; 864 <register_tm_clones+0x4c>
     848:	ldr	r3, [r3, r2]
     84c:	cmp	r3, #0
     850:	bxeq	lr
     854:	bx	r3
     858:	.word	0x000118b0
     85c:	.word	0x000118ac
     860:	.word	0x000117c4
     864:	.word	0x00000058

00000868 <__do_global_dtors_aux>:
     868:	ldr	r3, [pc, #76]	; 8bc <__do_global_dtors_aux+0x54>
     86c:	ldr	r2, [pc, #76]	; 8c0 <__do_global_dtors_aux+0x58>
     870:	add	r3, pc, r3
     874:	add	r2, pc, r2
     878:	ldrb	r3, [r3]
     87c:	cmp	r3, #0
     880:	bxne	lr
     884:	ldr	r3, [pc, #56]	; 8c4 <__do_global_dtors_aux+0x5c>
     888:	push	{r4, lr}
     88c:	ldr	r3, [r2, r3]
     890:	cmp	r3, #0
     894:	beq	8a4 <__do_global_dtors_aux+0x3c>
     898:	ldr	r3, [pc, #40]	; 8c8 <__do_global_dtors_aux+0x60>
     89c:	ldr	r0, [pc, r3]
     8a0:	bl	714 <__cxa_finalize@plt>
     8a4:	bl	7d4 <deregister_tm_clones>
     8a8:	ldr	r3, [pc, #28]	; 8cc <__do_global_dtors_aux+0x64>
     8ac:	mov	r2, #1
     8b0:	add	r3, pc, r3
     8b4:	strb	r2, [r3]
     8b8:	pop	{r4, pc}
     8bc:	.word	0x00011860
     8c0:	.word	0x00011784
     8c4:	.word	0x00000040
     8c8:	.word	0x000117bc
     8cc:	.word	0x00011820

000008d0 <frame_dummy>:
     8d0:	b	818 <register_tm_clones>

000008d4 <m_cap>:
     8d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     8d8:	add	fp, sp, #28
     8dc:	sub	sp, sp, #12
     8e0:	str	r2, [sp, #8]
     8e4:	mov	r7, #5
     8e8:	mov	r6, #0
     8ec:	ldr	r9, [fp, #8]
     8f0:	ldr	r5, [r9, #4]
     8f4:	ldr	r8, [pc, #172]	; 9a8 <m_cap+0xd4>
     8f8:	add	r8, pc, r8
     8fc:	add	r0, r7, r6
     900:	mov	sl, r8
     904:	lsr	r4, r0, #1
     908:	mov	r0, r5
     90c:	ldr	r1, [sl, r4, lsl #3]!
     910:	bl	7a4 <irccmp@plt>
     914:	cmp	r0, #0
     918:	blt	930 <m_cap+0x5c>
     91c:	beq	940 <m_cap+0x6c>
     920:	add	r6, r4, #1
     924:	cmp	r6, r7
     928:	bcc	8fc <m_cap+0x28>
     92c:	b	964 <m_cap+0x90>
     930:	mov	r7, r4
     934:	cmp	r6, r7
     938:	bcc	8fc <m_cap+0x28>
     93c:	b	964 <m_cap+0x90>
     940:	cmp	sl, #0
     944:	beq	964 <m_cap+0x90>
     948:	add	r0, r8, r4, lsl #3
     94c:	ldr	r1, [r9, #8]
     950:	ldr	r2, [r0, #4]
     954:	ldr	r0, [sp, #8]
     958:	sub	sp, fp, #28
     95c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     960:	bx	r2
     964:	ldr	r0, [sp, #8]
     968:	ldr	r2, [r9, #4]
     96c:	mov	r7, r0
     970:	ldrb	r1, [r7, #88]!	; 0x58
     974:	str	r2, [sp]
     978:	ldr	r3, [pc, #44]	; 9ac <m_cap+0xd8>
     97c:	cmp	r1, #0
     980:	ldr	r1, [pc, #40]	; 9b0 <m_cap+0xdc>
     984:	add	r3, pc, r3
     988:	movne	r3, r7
     98c:	ldr	r1, [pc, r1]
     990:	add	r2, r1, #88	; 0x58
     994:	ldr	r1, [pc, #24]	; 9b4 <m_cap+0xe0>
     998:	add	r1, pc, r1
     99c:	bl	72c <sendto_one@plt>
     9a0:	sub	sp, fp, #28
     9a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     9a8:	.word	0x000115d0
     9ac:	.word	0x00001016
     9b0:	.word	0x000116c8
     9b4:	.word	0x00000fdc

000009b8 <cap_ack>:
     9b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     9bc:	add	fp, sp, #28
     9c0:	sub	sp, sp, #12
     9c4:	mov	r4, r0
     9c8:	mov	r0, #0
     9cc:	cmp	r1, #0
     9d0:	str	r0, [sp, #8]
     9d4:	ldrbne	r0, [r1]
     9d8:	cmpne	r0, #0
     9dc:	bne	9e8 <cap_ack+0x30>
     9e0:	sub	sp, fp, #28
     9e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     9e8:	add	r3, sp, #4
     9ec:	mov	r0, r1
     9f0:	add	r2, sp, #8
     9f4:	mov	r1, r3
     9f8:	bl	1260 <clicap_find>
     9fc:	ldr	r2, [r4, #432]	; 0x1b0
     a00:	cmp	r0, #0
     a04:	ldr	r1, [r2, #296]!	; 0x128
     a08:	beq	b84 <cap_ack+0x1cc>
     a0c:	ldr	r9, [pc, #396]	; ba0 <cap_ack+0x1e8>
     a10:	ldr	sl, [pc, #396]	; ba4 <cap_ack+0x1ec>
     a14:	mov	r3, #1
     a18:	mov	r7, #0
     a1c:	mov	r8, #0
     a20:	ldr	sl, [pc, sl]
     a24:	add	r9, pc, r9
     a28:	ldr	r2, [r0, #4]
     a2c:	tst	r1, r3, lsl r2
     a30:	beq	a84 <cap_ack+0xcc>
     a34:	b	a58 <cap_ack+0xa0>
     a38:	cmp	r6, #0
     a3c:	streq	r3, [sp, #8]
     a40:	strne	r6, [r9]
     a44:	ldr	r1, [r4, #432]	; 0x1b0
     a48:	ldr	r1, [r1, #296]	; 0x128
     a4c:	ldr	r2, [r0, #4]
     a50:	tst	r1, r3, lsl r2
     a54:	beq	a84 <cap_ack+0xcc>
     a58:	lsl	r1, r3, r2
     a5c:	ldr	r2, [sp, #4]
     a60:	cmp	r2, #0
     a64:	beq	a80 <cap_ack+0xc8>
     a68:	ldr	r0, [r0, #12]
     a6c:	cmp	r0, #0
     a70:	ldrbne	r0, [r0, #8]
     a74:	tstne	r0, #1
     a78:	orreq	r7, r1, r7
     a7c:	b	a84 <cap_ack+0xcc>
     a80:	orr	r8, r1, r8
     a84:	mov	r0, #0
     a88:	str	r0, [sp, #4]
     a8c:	ldr	r0, [sp, #8]
     a90:	cmp	r0, #0
     a94:	bne	b78 <cap_ack+0x1c0>
     a98:	ldr	r5, [pc, #264]	; ba8 <cap_ack+0x1f0>
     a9c:	ldr	r5, [pc, r5]
     aa0:	ldrb	r0, [r5]
     aa4:	cmp	r0, #0
     aa8:	beq	ad4 <cap_ack+0x11c>
     aac:	add	r1, r5, #1
     ab0:	uxtb	r2, r0
     ab4:	ldrb	r2, [sl, r2, lsl #2]
     ab8:	tst	r2, #32
     abc:	beq	af8 <cap_ack+0x140>
     ac0:	str	r1, [r9]
     ac4:	ldrb	r0, [r1], #1
     ac8:	cmp	r0, #0
     acc:	bne	ab0 <cap_ack+0xf8>
     ad0:	b	b70 <cap_ack+0x1b8>
     ad4:	mov	r0, #0
     ad8:	cmp	r5, #0
     adc:	beq	b70 <cap_ack+0x1b8>
     ae0:	uxtb	r0, r0
     ae4:	cmp	r0, #45	; 0x2d
     ae8:	beq	b08 <cap_ack+0x150>
     aec:	cmp	r0, #0
     af0:	bne	b24 <cap_ack+0x16c>
     af4:	b	b70 <cap_ack+0x1b8>
     af8:	sub	r5, r1, #1
     afc:	cmp	r5, #0
     b00:	bne	ae0 <cap_ack+0x128>
     b04:	b	b70 <cap_ack+0x1b8>
     b08:	add	r0, r5, #1
     b0c:	str	r3, [sp, #4]
     b10:	str	r0, [r9]
     b14:	ldrb	r1, [r5, #1]
     b18:	mov	r5, r0
     b1c:	cmp	r1, #0
     b20:	beq	b78 <cap_ack+0x1c0>
     b24:	mov	r0, r5
     b28:	mov	r1, #32
     b2c:	bl	75c <strchr@plt>
     b30:	cmp	r0, #0
     b34:	beq	b48 <cap_ack+0x190>
     b38:	mov	r6, r0
     b3c:	mov	r0, #0
     b40:	strb	r0, [r6], #1
     b44:	b	b4c <cap_ack+0x194>
     b48:	mov	r6, #0
     b4c:	ldr	r0, [pc, #88]	; bac <cap_ack+0x1f4>
     b50:	mov	r1, r5
     b54:	ldr	r0, [pc, r0]
     b58:	ldr	r0, [r0]
     b5c:	bl	768 <capability_find@plt>
     b60:	cmp	r0, #0
     b64:	mov	r3, #1
     b68:	bne	a38 <cap_ack+0x80>
     b6c:	b	b78 <cap_ack+0x1c0>
     b70:	mov	r0, #1
     b74:	str	r0, [sp, #8]
     b78:	ldr	r2, [r4, #432]	; 0x1b0
     b7c:	ldr	r1, [r2, #296]!	; 0x128
     b80:	b	b8c <cap_ack+0x1d4>
     b84:	mov	r8, #0
     b88:	mov	r7, #0
     b8c:	orr	r0, r1, r8
     b90:	bic	r0, r0, r7
     b94:	str	r0, [r2]
     b98:	sub	sp, fp, #28
     b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ba0:	.word	0x000118b0
     ba4:	.word	0x00011628
     ba8:	.word	0x00011838
     bac:	.word	0x000114f0

00000bb0 <cap_end>:
     bb0:	ldrh	r1, [r0, #80]	; 0x50
     bb4:	cmp	r1, #9
     bb8:	bcc	bc4 <cap_end+0x14>
     bbc:	cmp	r1, #16
     bc0:	bxne	lr
     bc4:	ldr	r1, [r0, #64]	; 0x40
     bc8:	bic	r2, r1, #16
     bcc:	tst	r1, #8
     bd0:	str	r2, [r0, #64]	; 0x40
     bd4:	ldrbne	r1, [r0, #88]	; 0x58
     bd8:	cmpne	r1, #0
     bdc:	bne	be4 <cap_end+0x34>
     be0:	bx	lr
     be4:	mov	r1, r0
     be8:	b	78c <register_local_user@plt>

00000bec <cap_list>:
     bec:	ldr	r1, [r0, #432]	; 0x1b0
     bf0:	ldr	r2, [r1, #296]	; 0x128
     bf4:	ldr	r1, [pc, #12]	; c08 <cap_list+0x1c>
     bf8:	cmp	r2, #0
     bfc:	add	r1, pc, r1
     c00:	mvneq	r2, #0
     c04:	b	1404 <clicap_generate>
     c08:	.word	0x00000da4

00000c0c <cap_ls>:
     c0c:	push	{r4, sl, fp, lr}
     c10:	add	fp, sp, #8
     c14:	mov	r4, r0
     c18:	ldrh	r0, [r0, #80]	; 0x50
     c1c:	cmp	r0, #9
     c20:	bcc	c2c <cap_ls+0x20>
     c24:	cmp	r0, #16
     c28:	bne	c38 <cap_ls+0x2c>
     c2c:	ldr	r0, [r4, #64]	; 0x40
     c30:	orr	r0, r0, #16
     c34:	str	r0, [r4, #64]	; 0x40
     c38:	cmp	r1, #0
     c3c:	ldrbne	r0, [r1]
     c40:	cmpne	r0, #0
     c44:	bne	c60 <cap_ls+0x54>
     c48:	ldr	r1, [pc, #92]	; cac <cap_ls+0xa0>
     c4c:	mov	r0, r4
     c50:	mov	r2, #0
     c54:	add	r1, pc, r1
     c58:	pop	{r4, sl, fp, lr}
     c5c:	b	1404 <clicap_generate>
     c60:	mov	r0, r1
     c64:	mov	r1, #0
     c68:	mov	r2, #10
     c6c:	bl	720 <strtol@plt>
     c70:	movw	r1, #302	; 0x12e
     c74:	cmp	r0, r1
     c78:	blt	c48 <cap_ls+0x3c>
     c7c:	ldr	r0, [r4, #64]	; 0x40
     c80:	ldr	r1, [r4, #432]	; 0x1b0
     c84:	orr	r0, r0, #524288	; 0x80000
     c88:	str	r0, [r4, #64]	; 0x40
     c8c:	ldr	r0, [pc, #20]	; ca8 <cap_ls+0x9c>
     c90:	ldr	r0, [pc, r0]
     c94:	ldr	r2, [r1, #296]	; 0x128
     c98:	ldr	r0, [r0]
     c9c:	orr	r0, r2, r0
     ca0:	str	r0, [r1, #296]	; 0x128
     ca4:	b	c48 <cap_ls+0x3c>
     ca8:	.word	0x000113bc
     cac:	.word	0x00000d51

00000cb0 <cap_req>:
     cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     cb4:	add	fp, sp, #28
     cb8:	sub	sp, sp, #52	; 0x34
     cbc:	mov	r9, r0
     cc0:	mov	r0, #0
     cc4:	mov	r5, r1
     cc8:	str	r0, [fp, #-32]	; 0xffffffe0
     ccc:	ldrh	r0, [r9, #80]	; 0x50
     cd0:	cmp	r0, #9
     cd4:	bcc	ce0 <cap_req+0x30>
     cd8:	cmp	r0, #16
     cdc:	bne	cec <cap_req+0x3c>
     ce0:	ldr	r0, [r9, #64]	; 0x40
     ce4:	orr	r0, r0, #16
     ce8:	str	r0, [r9, #64]	; 0x40
     cec:	cmp	r5, #0
     cf0:	ldrbne	r0, [r5]
     cf4:	cmpne	r0, #0
     cf8:	bne	d04 <cap_req+0x54>
     cfc:	sub	sp, fp, #28
     d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d04:	ldr	r0, [pc, #1236]	; 11e0 <cap_req+0x530>
     d08:	mov	r7, #0
     d0c:	mov	r6, r9
     d10:	add	r0, pc, r0
     d14:	strb	r7, [r0]
     d18:	ldrb	r1, [r6, #88]!	; 0x58
     d1c:	ldr	r2, [pc, #1216]	; 11e4 <cap_req+0x534>
     d20:	cmp	r1, #0
     d24:	add	r2, pc, r2
     d28:	mov	r1, r6
     d2c:	moveq	r1, r2
     d30:	str	r1, [sp]
     d34:	ldr	r1, [pc, #1196]	; 11e8 <cap_req+0x538>
     d38:	ldr	r1, [pc, r1]
     d3c:	ldr	r2, [pc, #1192]	; 11ec <cap_req+0x53c>
     d40:	add	r4, r1, #88	; 0x58
     d44:	add	r2, pc, r2
     d48:	movw	r1, #511	; 0x1ff
     d4c:	mov	r3, r4
     d50:	bl	738 <rb_snprintf_try_append@plt>
     d54:	mov	r8, r0
     d58:	ldr	r0, [pc, #1168]	; 11f0 <cap_req+0x540>
     d5c:	sub	r1, fp, #36	; 0x24
     d60:	sub	r2, fp, #32
     d64:	add	r0, pc, r0
     d68:	strb	r7, [r0]
     d6c:	strb	r7, [r0, #511]	; 0x1ff
     d70:	mov	r0, r5
     d74:	bl	1260 <clicap_find>
     d78:	cmp	r0, #0
     d7c:	str	r5, [sp, #28]
     d80:	str	r6, [sp, #24]
     d84:	str	r4, [sp, #20]
     d88:	beq	1130 <cap_req+0x480>
     d8c:	mov	sl, r0
     d90:	movw	r0, #507	; 0x1fb
     d94:	ldr	r6, [fp, #-36]	; 0xffffffdc
     d98:	mov	r7, #1
     d9c:	mov	r4, #0
     da0:	mov	r5, #0
     da4:	sub	r0, r0, r8
     da8:	str	r0, [sp, #32]
     dac:	add	r0, r9, #64	; 0x40
     db0:	str	r0, [sp, #16]
     db4:	mov	r0, #0
     db8:	ldr	r8, [pc, #1076]	; 11f4 <cap_req+0x544>
     dbc:	str	r0, [sp, #36]	; 0x24
     dc0:	add	r8, pc, r8
     dc4:	cmp	r6, #0
     dc8:	beq	1000 <cap_req+0x350>
     dcc:	ldr	r0, [sl, #12]
     dd0:	cmp	r0, #0
     dd4:	ldrbne	r1, [r0, #8]
     dd8:	tstne	r1, #1
     ddc:	bne	119c <cap_req+0x4ec>
     de0:	ldr	r1, [sl, #4]
     de4:	ldr	r6, [pc, #1036]	; 11f8 <cap_req+0x548>
     de8:	orr	r4, r4, r7, lsl r1
     dec:	add	r6, pc, r6
     df0:	cmp	r0, #0
     df4:	beq	e0c <cap_req+0x15c>
     df8:	ldrb	r0, [r0, #8]
     dfc:	tst	r0, #2
     e00:	ldr	r0, [pc, #1012]	; 11fc <cap_req+0x54c>
     e04:	add	r0, pc, r0
     e08:	movne	r6, r0
     e0c:	ldr	r7, [pc, #1004]	; 1200 <cap_req+0x550>
     e10:	ldr	r1, [sl]
     e14:	rsb	r0, r5, r5, lsl #9
     e18:	str	r6, [sp]
     e1c:	add	r7, pc, r7
     e20:	str	r1, [sp, #4]
     e24:	ldrb	r0, [r7, r0]!
     e28:	ldr	r3, [pc, #980]	; 1204 <cap_req+0x554>
     e2c:	ldr	r1, [sp, #32]
     e30:	ldr	r2, [pc, #976]	; 1208 <cap_req+0x558>
     e34:	cmp	r0, #0
     e38:	add	r3, pc, r3
     e3c:	mov	r0, r7
     e40:	add	r2, pc, r2
     e44:	moveq	r3, r8
     e48:	bl	738 <rb_snprintf_try_append@plt>
     e4c:	cmn	r0, #1
     e50:	str	r4, [sp, #40]	; 0x28
     e54:	ble	ebc <cap_req+0x20c>
     e58:	mov	ip, r5
     e5c:	mov	r0, #0
     e60:	str	r0, [fp, #-36]	; 0xffffffdc
     e64:	ldr	r0, [fp, #-32]	; 0xffffffe0
     e68:	cmp	r0, #0
     e6c:	bne	10cc <cap_req+0x41c>
     e70:	ldr	r7, [pc, #924]	; 1214 <cap_req+0x564>
     e74:	ldr	r7, [pc, r7]
     e78:	ldrb	r0, [r7]
     e7c:	cmp	r0, #0
     e80:	beq	f30 <cap_req+0x280>
     e84:	ldr	r4, [pc, #912]	; 121c <cap_req+0x56c>
     e88:	ldr	r3, [pc, #912]	; 1220 <cap_req+0x570>
     e8c:	add	r1, r7, #1
     e90:	ldr	r3, [pc, r3]
     e94:	add	r4, pc, r4
     e98:	uxtb	r2, r0
     e9c:	ldrb	r2, [r3, r2, lsl #2]
     ea0:	tst	r2, #32
     ea4:	beq	fa8 <cap_req+0x2f8>
     ea8:	str	r1, [r4]
     eac:	ldrb	r0, [r1], #1
     eb0:	cmp	r0, #0
     eb4:	bne	e98 <cap_req+0x1e8>
     eb8:	b	10c4 <cap_req+0x414>
     ebc:	ldrb	r0, [r7]
     ec0:	cmp	r0, #0
     ec4:	beq	e58 <cap_req+0x1a8>
     ec8:	cmp	r5, #1
     ecc:	bgt	e58 <cap_req+0x1a8>
     ed0:	ldr	r0, [sp, #16]
     ed4:	ldr	r0, [r0]
     ed8:	ands	r0, r0, #524288	; 0x80000
     edc:	beq	e58 <cap_req+0x1a8>
     ee0:	add	r0, r5, #1
     ee4:	mov	r1, #0
     ee8:	mov	r3, r8
     eec:	str	r0, [sp, #12]
     ef0:	rsb	r0, r0, r0, lsl #9
     ef4:	ldr	r7, [pc, #784]	; 120c <cap_req+0x55c>
     ef8:	add	r7, pc, r7
     efc:	strb	r1, [r7, r0]!
     f00:	ldr	r0, [sl]
     f04:	str	r6, [sp]
     f08:	ldr	r1, [sp, #32]
     f0c:	str	r0, [sp, #4]
     f10:	mov	r0, r7
     f14:	ldr	r2, [pc, #756]	; 1210 <cap_req+0x560>
     f18:	add	r2, pc, r2
     f1c:	bl	738 <rb_snprintf_try_append@plt>
     f20:	cmp	r0, #0
     f24:	blt	1080 <cap_req+0x3d0>
     f28:	ldr	ip, [sp, #12]
     f2c:	b	e5c <cap_req+0x1ac>
     f30:	ldr	r4, [pc, #736]	; 1218 <cap_req+0x568>
     f34:	mov	r0, #0
     f38:	add	r4, pc, r4
     f3c:	cmp	r7, #0
     f40:	beq	10c4 <cap_req+0x414>
     f44:	uxtb	r0, r0
     f48:	cmp	r0, #45	; 0x2d
     f4c:	beq	f60 <cap_req+0x2b0>
     f50:	mov	r6, #0
     f54:	cmp	r0, #0
     f58:	bne	f80 <cap_req+0x2d0>
     f5c:	b	10c4 <cap_req+0x414>
     f60:	add	r0, r7, #1
     f64:	mov	r6, #1
     f68:	str	r0, [r4]
     f6c:	str	r6, [fp, #-36]	; 0xffffffdc
     f70:	ldrb	r1, [r7, #1]
     f74:	mov	r7, r0
     f78:	cmp	r1, #0
     f7c:	beq	11a4 <cap_req+0x4f4>
     f80:	mov	r0, r7
     f84:	mov	r1, #32
     f88:	mov	r5, ip
     f8c:	bl	75c <strchr@plt>
     f90:	cmp	r0, #0
     f94:	beq	fb8 <cap_req+0x308>
     f98:	mov	r8, r0
     f9c:	mov	r0, #0
     fa0:	strb	r0, [r8], #1
     fa4:	b	fbc <cap_req+0x30c>
     fa8:	sub	r7, r1, #1
     fac:	cmp	r7, #0
     fb0:	bne	f44 <cap_req+0x294>
     fb4:	b	10c4 <cap_req+0x414>
     fb8:	mov	r8, #0
     fbc:	ldr	r0, [pc, #628]	; 1238 <cap_req+0x588>
     fc0:	mov	r1, r7
     fc4:	ldr	r0, [pc, r0]
     fc8:	ldr	r0, [r0]
     fcc:	bl	768 <capability_find@plt>
     fd0:	cmp	r0, #0
     fd4:	beq	11a4 <cap_req+0x4f4>
     fd8:	mov	sl, r0
     fdc:	cmp	r8, #0
     fe0:	beq	103c <cap_req+0x38c>
     fe4:	str	r8, [r4]
     fe8:	ldr	r4, [sp, #40]	; 0x28
     fec:	mov	r7, #1
     ff0:	ldr	r8, [pc, #580]	; 123c <cap_req+0x58c>
     ff4:	add	r8, pc, r8
     ff8:	cmp	r6, #0
     ffc:	bne	dcc <cap_req+0x11c>
    1000:	ldrb	r0, [sl, #8]
    1004:	tst	r0, #1
    1008:	bne	119c <cap_req+0x4ec>
    100c:	ldr	r0, [sl, #12]
    1010:	cmp	r0, #0
    1014:	beq	105c <cap_req+0x3ac>
    1018:	ldr	r1, [r0]
    101c:	cmp	r1, #0
    1020:	beq	1060 <cap_req+0x3b0>
    1024:	mov	r0, r9
    1028:	blx	r1
    102c:	cmp	r0, #0
    1030:	beq	119c <cap_req+0x4ec>
    1034:	ldr	r0, [sl, #12]
    1038:	b	1060 <cap_req+0x3b0>
    103c:	mov	r7, #1
    1040:	ldr	r4, [sp, #40]	; 0x28
    1044:	str	r7, [fp, #-32]	; 0xffffffe0
    1048:	ldr	r8, [pc, #496]	; 1240 <cap_req+0x590>
    104c:	add	r8, pc, r8
    1050:	cmp	r6, #0
    1054:	bne	dcc <cap_req+0x11c>
    1058:	b	1000 <cap_req+0x350>
    105c:	mov	r0, #0
    1060:	ldr	r1, [sl, #4]
    1064:	ldr	r2, [sp, #36]	; 0x24
    1068:	mov	r6, r8
    106c:	orr	r2, r2, r7, lsl r1
    1070:	str	r2, [sp, #36]	; 0x24
    1074:	cmp	r0, #0
    1078:	bne	df8 <cap_req+0x148>
    107c:	b	e0c <cap_req+0x15c>
    1080:	ldrb	r0, [r7]
    1084:	cmp	r0, #0
    1088:	beq	f28 <cap_req+0x278>
    108c:	cmp	r5, #0
    1090:	bgt	f28 <cap_req+0x278>
    1094:	ldr	r0, [sp, #16]
    1098:	ldr	ip, [sp, #12]
    109c:	ldr	r0, [r0]
    10a0:	ands	r0, r0, #524288	; 0x80000
    10a4:	beq	e5c <cap_req+0x1ac>
    10a8:	ldr	r1, [pc, #428]	; 125c <cap_req+0x5ac>
    10ac:	add	ip, r5, #2
    10b0:	mov	r2, #0
    10b4:	rsb	r0, ip, ip, lsl #9
    10b8:	add	r1, pc, r1
    10bc:	strb	r2, [r1, r0]
    10c0:	b	e5c <cap_req+0x1ac>
    10c4:	mov	r0, #1
    10c8:	str	r0, [fp, #-32]	; 0xffffffe0
    10cc:	cmp	ip, #0
    10d0:	beq	114c <cap_req+0x49c>
    10d4:	ldr	r0, [pc, #328]	; 1224 <cap_req+0x574>
    10d8:	add	r0, pc, r0
    10dc:	str	r0, [sp]
    10e0:	mov	r7, r0
    10e4:	mov	r0, r9
    10e8:	ldr	r5, [pc, #312]	; 1228 <cap_req+0x578>
    10ec:	ldr	r6, [pc, #312]	; 122c <cap_req+0x57c>
    10f0:	ldr	r3, [pc, #312]	; 1230 <cap_req+0x580>
    10f4:	add	r5, pc, r5
    10f8:	add	r6, pc, r6
    10fc:	add	r3, pc, r3
    1100:	mov	r1, r5
    1104:	mov	r2, r6
    1108:	bl	72c <sendto_one@plt>
    110c:	movw	r0, #511	; 0x1ff
    1110:	mov	r1, r5
    1114:	mov	r2, r6
    1118:	add	r0, r7, r0
    111c:	str	r0, [sp]
    1120:	mov	r0, r9
    1124:	ldr	r3, [pc, #264]	; 1234 <cap_req+0x584>
    1128:	add	r3, pc, r3
    112c:	b	1174 <cap_req+0x4c4>
    1130:	mov	r0, #0
    1134:	str	r0, [sp, #36]	; 0x24
    1138:	ldr	r0, [fp, #-32]	; 0xffffffe0
    113c:	cmp	r0, #0
    1140:	mov	r0, #0
    1144:	str	r0, [sp, #40]	; 0x28
    1148:	beq	11a4 <cap_req+0x4f4>
    114c:	ldr	r0, [pc, #248]	; 124c <cap_req+0x59c>
    1150:	add	r0, pc, r0
    1154:	str	r0, [sp]
    1158:	mov	r0, r9
    115c:	ldr	r1, [pc, #236]	; 1250 <cap_req+0x5a0>
    1160:	ldr	r2, [pc, #236]	; 1254 <cap_req+0x5a4>
    1164:	ldr	r3, [pc, #236]	; 1258 <cap_req+0x5a8>
    1168:	add	r1, pc, r1
    116c:	add	r2, pc, r2
    1170:	add	r3, pc, r3
    1174:	bl	72c <sendto_one@plt>
    1178:	ldr	r0, [r9, #432]	; 0x1b0
    117c:	ldr	r2, [sp, #36]	; 0x24
    1180:	ldr	r1, [r0, #296]	; 0x128
    1184:	orr	r1, r1, r2
    1188:	ldr	r2, [sp, #40]	; 0x28
    118c:	bic	r1, r1, r2
    1190:	str	r1, [r0, #296]	; 0x128
    1194:	sub	sp, fp, #28
    1198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    119c:	mov	r0, #0
    11a0:	str	r0, [fp, #-32]	; 0xffffffe0
    11a4:	ldr	r1, [sp, #28]
    11a8:	ldrb	r0, [r9, #88]	; 0x58
    11ac:	ldr	r3, [sp, #24]
    11b0:	str	r1, [sp]
    11b4:	cmp	r0, #0
    11b8:	ldr	r0, [pc, #132]	; 1244 <cap_req+0x594>
    11bc:	ldr	r1, [pc, #132]	; 1248 <cap_req+0x598>
    11c0:	ldr	r2, [sp, #20]
    11c4:	add	r0, pc, r0
    11c8:	add	r1, pc, r1
    11cc:	moveq	r3, r0
    11d0:	mov	r0, r9
    11d4:	bl	72c <sendto_one@plt>
    11d8:	sub	sp, fp, #28
    11dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11e0:	.word	0x000119c6
    11e4:	.word	0x00000c76
    11e8:	.word	0x0001131c
    11ec:	.word	0x00000c88
    11f0:	.word	0x00011b71
    11f4:	.word	0x00000c09
    11f8:	.word	0x00000bef
    11fc:	.word	0x00000bd9
    1200:	.word	0x00011ab9
    1204:	.word	0x00000b90
    1208:	.word	0x00000b81
    120c:	.word	0x000119dd
    1210:	.word	0x00000aa9
    1214:	.word	0x00011460
    1218:	.word	0x0001139c
    121c:	.word	0x00011440
    1220:	.word	0x000111b8
    1224:	.word	0x000117fd
    1228:	.word	0x000008cd
    122c:	.word	0x000115de
    1230:	.word	0x000008b0
    1234:	.word	0x00000886
    1238:	.word	0x00011080
    123c:	.word	0x000009d5
    1240:	.word	0x0000097d
    1244:	.word	0x000007d6
    1248:	.word	0x00000817
    124c:	.word	0x00011785
    1250:	.word	0x00000859
    1254:	.word	0x0001156a
    1258:	.word	0x0000083e
    125c:	.word	0x0001181d

00001260 <clicap_find>:
    1260:	push	{r4, r5, r6, r7, fp, lr}
    1264:	add	fp, sp, #16
    1268:	mov	r7, #0
    126c:	mov	r4, r2
    1270:	mov	r5, r1
    1274:	cmp	r0, #0
    1278:	str	r7, [r1]
    127c:	beq	12a4 <clicap_find+0x44>
    1280:	ldr	r6, [pc, #348]	; 13e4 <clicap_find+0x184>
    1284:	mov	r1, r0
    1288:	mov	r2, #512	; 0x200
    128c:	add	r6, pc, r6
    1290:	mov	r0, r6
    1294:	bl	780 <rb_strlcpy@plt>
    1298:	ldr	r0, [pc, #328]	; 13e8 <clicap_find+0x188>
    129c:	add	r0, pc, r0
    12a0:	str	r6, [r0]
    12a4:	ldr	r0, [r4]
    12a8:	cmp	r0, #0
    12ac:	beq	12b8 <clicap_find+0x58>
    12b0:	mov	r0, r7
    12b4:	pop	{r4, r5, r6, r7, fp, pc}
    12b8:	ldr	r6, [pc, #300]	; 13ec <clicap_find+0x18c>
    12bc:	ldr	r6, [pc, r6]
    12c0:	ldrb	r0, [r6]
    12c4:	cmp	r0, #0
    12c8:	beq	1304 <clicap_find+0xa4>
    12cc:	ldr	r2, [pc, #284]	; 13f0 <clicap_find+0x190>
    12d0:	add	r1, r6, #1
    12d4:	ldr	r2, [pc, r2]
    12d8:	ldr	r3, [pc, #276]	; 13f4 <clicap_find+0x194>
    12dc:	add	r3, pc, r3
    12e0:	uxtb	r7, r0
    12e4:	ldrb	r7, [r2, r7, lsl #2]
    12e8:	tst	r7, #32
    12ec:	beq	1328 <clicap_find+0xc8>
    12f0:	str	r1, [r3]
    12f4:	ldrb	r0, [r1], #1
    12f8:	cmp	r0, #0
    12fc:	bne	12e0 <clicap_find+0x80>
    1300:	b	1334 <clicap_find+0xd4>
    1304:	mov	r0, #0
    1308:	cmp	r6, #0
    130c:	beq	1334 <clicap_find+0xd4>
    1310:	uxtb	r0, r0
    1314:	cmp	r0, #45	; 0x2d
    1318:	beq	1348 <clicap_find+0xe8>
    131c:	cmp	r0, #0
    1320:	beq	1334 <clicap_find+0xd4>
    1324:	b	1370 <clicap_find+0x110>
    1328:	sub	r6, r1, #1
    132c:	cmp	r6, #0
    1330:	bne	1310 <clicap_find+0xb0>
    1334:	mov	r0, #1
    1338:	str	r0, [r4]
    133c:	mov	r7, #0
    1340:	mov	r0, r7
    1344:	pop	{r4, r5, r6, r7, fp, pc}
    1348:	mov	r0, #1
    134c:	str	r0, [r5]
    1350:	add	r0, r6, #1
    1354:	ldr	r1, [pc, #156]	; 13f8 <clicap_find+0x198>
    1358:	add	r1, pc, r1
    135c:	str	r0, [r1]
    1360:	ldrb	r1, [r6, #1]
    1364:	mov	r6, r0
    1368:	cmp	r1, #0
    136c:	beq	133c <clicap_find+0xdc>
    1370:	mov	r0, r6
    1374:	mov	r1, #32
    1378:	bl	75c <strchr@plt>
    137c:	cmp	r0, #0
    1380:	mov	r5, #0
    1384:	mov	r7, #0
    1388:	movne	r1, #0
    138c:	strbne	r1, [r0], #1
    1390:	mov	r1, r6
    1394:	movne	r5, r0
    1398:	ldr	r0, [pc, #92]	; 13fc <clicap_find+0x19c>
    139c:	ldr	r0, [pc, r0]
    13a0:	ldr	r0, [r0]
    13a4:	bl	768 <capability_find@plt>
    13a8:	cmp	r0, #0
    13ac:	beq	12b0 <clicap_find+0x50>
    13b0:	cmp	r5, #0
    13b4:	beq	13d0 <clicap_find+0x170>
    13b8:	ldr	r1, [pc, #64]	; 1400 <clicap_find+0x1a0>
    13bc:	add	r1, pc, r1
    13c0:	str	r5, [r1]
    13c4:	mov	r7, r0
    13c8:	mov	r0, r7
    13cc:	pop	{r4, r5, r6, r7, fp, pc}
    13d0:	mov	r1, #1
    13d4:	str	r1, [r4]
    13d8:	mov	r7, r0
    13dc:	mov	r0, r7
    13e0:	pop	{r4, r5, r6, r7, fp, pc}
    13e4:	.word	0x00010e48
    13e8:	.word	0x00011038
    13ec:	.word	0x00011018
    13f0:	.word	0x00010d74
    13f4:	.word	0x00010ff8
    13f8:	.word	0x00010f7c
    13fc:	.word	0x00010ca8
    1400:	.word	0x00010f18

00001404 <clicap_generate>:
    1404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1408:	add	fp, sp, #28
    140c:	sub	sp, sp, #28
    1410:	mov	r4, r0
    1414:	ldr	r0, [pc, #1184]	; 18bc <clicap_generate+0x4b8>
    1418:	mov	r6, r2
    141c:	mov	r2, #0
    1420:	add	r0, pc, r0
    1424:	strb	r2, [r0]
    1428:	mov	r2, r4
    142c:	ldrb	r3, [r2, #88]!	; 0x58
    1430:	ldr	r7, [pc, #1160]	; 18c0 <clicap_generate+0x4bc>
    1434:	str	r1, [sp, #4]
    1438:	add	r7, pc, r7
    143c:	cmp	r3, #0
    1440:	movne	r7, r2
    1444:	str	r7, [sp]
    1448:	ldr	r1, [pc, #1140]	; 18c4 <clicap_generate+0x4c0>
    144c:	ldr	r1, [pc, r1]
    1450:	ldr	r2, [pc, #1136]	; 18c8 <clicap_generate+0x4c4>
    1454:	add	r3, r1, #88	; 0x58
    1458:	add	r2, pc, r2
    145c:	movw	r1, #511	; 0x1ff
    1460:	bl	738 <rb_snprintf_try_append@plt>
    1464:	cmn	r6, #1
    1468:	beq	1698 <clicap_generate+0x294>
    146c:	mov	r5, r0
    1470:	cmn	r0, #1
    1474:	ble	1698 <clicap_generate+0x294>
    1478:	ldr	r1, [pc, #1104]	; 18d0 <clicap_generate+0x4cc>
    147c:	mov	r0, #0
    1480:	add	r7, sp, #20
    1484:	add	r1, pc, r1
    1488:	strb	r0, [r1]
    148c:	mov	r1, r7
    1490:	ldr	r8, [pc, #1084]	; 18d4 <clicap_generate+0x4d0>
    1494:	ldr	r8, [pc, r8]
    1498:	ldr	r0, [r8]
    149c:	ldr	r0, [r0, #4]
    14a0:	bl	744 <rb_dictionary_foreach_start@plt>
    14a4:	ldr	r0, [r8]
    14a8:	mov	r1, r7
    14ac:	ldr	r0, [r0, #4]
    14b0:	bl	774 <rb_dictionary_foreach_cur@plt>
    14b4:	cmp	r0, #0
    14b8:	beq	1888 <clicap_generate+0x484>
    14bc:	mov	r7, r0
    14c0:	movw	r0, #507	; 0x1fb
    14c4:	cmp	r6, #0
    14c8:	sub	r0, r0, r5
    14cc:	str	r0, [sp, #16]
    14d0:	add	r0, r4, #64	; 0x40
    14d4:	str	r0, [sp, #12]
    14d8:	beq	16a4 <clicap_generate+0x2a0>
    14dc:	ldr	r6, [pc, #1064]	; 190c <clicap_generate+0x508>
    14e0:	ldr	r5, [pc, #1064]	; 1910 <clicap_generate+0x50c>
    14e4:	mov	r9, #1
    14e8:	add	sl, sp, #20
    14ec:	add	r6, pc, r6
    14f0:	add	r5, pc, r5
    14f4:	ldr	r1, [r4, #432]	; 0x1b0
    14f8:	ldr	r0, [r7, #4]
    14fc:	ldr	r1, [r1, #296]	; 0x128
    1500:	tst	r1, r9, lsl r0
    1504:	beq	1668 <clicap_generate+0x264>
    1508:	ldrb	r0, [r7, #8]
    150c:	tst	r0, #1
    1510:	bne	1668 <clicap_generate+0x264>
    1514:	ldr	r0, [r7, #12]
    1518:	cmp	r0, #0
    151c:	ldrne	r1, [r0]
    1520:	cmpne	r1, #0
    1524:	bne	1658 <clicap_generate+0x254>
    1528:	ldr	r0, [pc, #996]	; 1914 <clicap_generate+0x510>
    152c:	ldr	r1, [r7]
    1530:	mov	r3, r5
    1534:	add	r0, pc, r0
    1538:	ldrb	r2, [r0]
    153c:	stm	sp, {r1, r6}
    1540:	str	r6, [sp, #8]
    1544:	ldr	r1, [sp, #16]
    1548:	cmp	r2, #0
    154c:	ldr	r2, [pc, #964]	; 1918 <clicap_generate+0x514>
    1550:	moveq	r3, r6
    1554:	add	r2, pc, r2
    1558:	bl	738 <rb_snprintf_try_append@plt>
    155c:	cmn	r0, #1
    1560:	bgt	1668 <clicap_generate+0x264>
    1564:	ldr	r0, [pc, #944]	; 191c <clicap_generate+0x518>
    1568:	add	r0, pc, r0
    156c:	ldrb	r0, [r0]
    1570:	cmp	r0, #0
    1574:	beq	1668 <clicap_generate+0x264>
    1578:	ldr	r0, [sp, #12]
    157c:	ldrb	r0, [r0, #2]
    1580:	tst	r0, #8
    1584:	beq	1668 <clicap_generate+0x264>
    1588:	ldr	r5, [pc, #912]	; 1920 <clicap_generate+0x51c>
    158c:	mov	r0, r4
    1590:	add	r5, pc, r5
    1594:	str	r5, [sp]
    1598:	ldr	r1, [pc, #900]	; 1924 <clicap_generate+0x520>
    159c:	ldr	r2, [pc, #900]	; 1928 <clicap_generate+0x524>
    15a0:	ldr	r3, [pc, #900]	; 192c <clicap_generate+0x528>
    15a4:	add	r1, pc, r1
    15a8:	add	r2, pc, r2
    15ac:	add	r3, pc, r3
    15b0:	bl	72c <sendto_one@plt>
    15b4:	mov	r0, #0
    15b8:	mov	r3, r6
    15bc:	strb	r0, [r5]
    15c0:	ldr	r0, [r7]
    15c4:	stm	sp, {r0, r6}
    15c8:	str	r6, [sp, #8]
    15cc:	mov	r0, r5
    15d0:	ldr	r5, [pc, #856]	; 1930 <clicap_generate+0x52c>
    15d4:	ldr	r1, [sp, #16]
    15d8:	ldr	r2, [pc, #852]	; 1934 <clicap_generate+0x530>
    15dc:	add	r2, pc, r2
    15e0:	add	r5, pc, r5
    15e4:	bl	738 <rb_snprintf_try_append@plt>
    15e8:	cmn	r0, #1
    15ec:	bgt	1668 <clicap_generate+0x264>
    15f0:	ldr	r0, [pc, #832]	; 1938 <clicap_generate+0x534>
    15f4:	add	r0, pc, r0
    15f8:	ldrb	r0, [r0]
    15fc:	cmp	r0, #0
    1600:	beq	1668 <clicap_generate+0x264>
    1604:	ldr	r0, [sp, #12]
    1608:	ldrb	r0, [r0, #2]
    160c:	tst	r0, #8
    1610:	beq	1668 <clicap_generate+0x264>
    1614:	ldr	r0, [pc, #816]	; 194c <clicap_generate+0x548>
    1618:	add	r0, pc, r0
    161c:	str	r0, [sp]
    1620:	mov	r5, r0
    1624:	mov	r0, r4
    1628:	ldr	r1, [pc, #800]	; 1950 <clicap_generate+0x54c>
    162c:	ldr	r2, [pc, #800]	; 1954 <clicap_generate+0x550>
    1630:	ldr	r3, [pc, #800]	; 1958 <clicap_generate+0x554>
    1634:	add	r1, pc, r1
    1638:	add	r2, pc, r2
    163c:	add	r3, pc, r3
    1640:	bl	72c <sendto_one@plt>
    1644:	mov	r0, #0
    1648:	strb	r0, [r5]
    164c:	ldr	r5, [pc, #776]	; 195c <clicap_generate+0x558>
    1650:	add	r5, pc, r5
    1654:	b	1668 <clicap_generate+0x264>
    1658:	mov	r0, r4
    165c:	blx	r1
    1660:	cmp	r0, #0
    1664:	bne	1528 <clicap_generate+0x124>
    1668:	ldr	r0, [r8]
    166c:	mov	r1, sl
    1670:	ldr	r0, [r0, #4]
    1674:	bl	798 <rb_dictionary_foreach_next@plt>
    1678:	ldr	r0, [r8]
    167c:	mov	r1, sl
    1680:	ldr	r0, [r0, #4]
    1684:	bl	774 <rb_dictionary_foreach_cur@plt>
    1688:	mov	r7, r0
    168c:	cmp	r0, #0
    1690:	bne	14f4 <clicap_generate+0xf0>
    1694:	b	1888 <clicap_generate+0x484>
    1698:	ldr	r1, [pc, #556]	; 18cc <clicap_generate+0x4c8>
    169c:	add	r1, pc, r1
    16a0:	b	189c <clicap_generate+0x498>
    16a4:	add	sl, sp, #20
    16a8:	b	177c <clicap_generate+0x378>
    16ac:	ldr	r9, [pc, #572]	; 18f0 <clicap_generate+0x4ec>
    16b0:	mov	r0, r4
    16b4:	add	r9, pc, r9
    16b8:	str	r9, [sp]
    16bc:	ldr	r1, [pc, #560]	; 18f4 <clicap_generate+0x4f0>
    16c0:	ldr	r2, [pc, #560]	; 18f8 <clicap_generate+0x4f4>
    16c4:	ldr	r3, [pc, #560]	; 18fc <clicap_generate+0x4f8>
    16c8:	add	r1, pc, r1
    16cc:	add	r2, pc, r2
    16d0:	add	r3, pc, r3
    16d4:	bl	72c <sendto_one@plt>
    16d8:	mov	r0, #0
    16dc:	strb	r0, [r9]
    16e0:	ldr	r0, [r7]
    16e4:	stm	sp, {r0, r5, r6}
    16e8:	mov	r0, r9
    16ec:	ldr	r1, [sp, #16]
    16f0:	ldr	r2, [pc, #520]	; 1900 <clicap_generate+0x4fc>
    16f4:	ldr	r3, [pc, #520]	; 1904 <clicap_generate+0x500>
    16f8:	add	r2, pc, r2
    16fc:	add	r3, pc, r3
    1700:	bl	738 <rb_snprintf_try_append@plt>
    1704:	cmn	r0, #1
    1708:	bgt	185c <clicap_generate+0x458>
    170c:	ldr	r0, [pc, #500]	; 1908 <clicap_generate+0x504>
    1710:	add	r0, pc, r0
    1714:	ldrb	r0, [r0]
    1718:	cmp	r0, #0
    171c:	beq	185c <clicap_generate+0x458>
    1720:	ldr	r0, [sp, #12]
    1724:	ldrb	r0, [r0, #2]
    1728:	tst	r0, #8
    172c:	beq	185c <clicap_generate+0x458>
    1730:	ldr	r0, [pc, #552]	; 1960 <clicap_generate+0x55c>
    1734:	add	r0, pc, r0
    1738:	str	r0, [sp]
    173c:	mov	r5, r0
    1740:	mov	r0, r4
    1744:	ldr	r1, [pc, #536]	; 1964 <clicap_generate+0x560>
    1748:	ldr	r2, [pc, #536]	; 1968 <clicap_generate+0x564>
    174c:	ldr	r3, [pc, #536]	; 196c <clicap_generate+0x568>
    1750:	add	r1, pc, r1
    1754:	add	r2, pc, r2
    1758:	add	r3, pc, r3
    175c:	bl	72c <sendto_one@plt>
    1760:	mov	r0, #0
    1764:	strb	r0, [r5]
    1768:	b	185c <clicap_generate+0x458>
    176c:	mov	r0, r4
    1770:	blx	r1
    1774:	mov	r9, r0
    1778:	b	17cc <clicap_generate+0x3c8>
    177c:	ldrb	r0, [r7, #8]
    1780:	tst	r0, #1
    1784:	bne	185c <clicap_generate+0x458>
    1788:	ldr	r5, [r7, #12]
    178c:	mov	r9, #0
    1790:	cmp	r5, #0
    1794:	beq	17cc <clicap_generate+0x3c8>
    1798:	ldr	r1, [r5]
    179c:	cmp	r1, #0
    17a0:	beq	17b4 <clicap_generate+0x3b0>
    17a4:	mov	r0, r4
    17a8:	blx	r1
    17ac:	cmp	r0, #0
    17b0:	beq	185c <clicap_generate+0x458>
    17b4:	ldr	r0, [sp, #12]
    17b8:	ldrb	r0, [r0, #2]
    17bc:	tst	r0, #8
    17c0:	ldrne	r1, [r5, #4]
    17c4:	cmpne	r1, #0
    17c8:	bne	176c <clicap_generate+0x368>
    17cc:	mov	ip, r4
    17d0:	ldr	r4, [pc, #256]	; 18d8 <clicap_generate+0x4d4>
    17d4:	ldr	r0, [pc, #256]	; 18dc <clicap_generate+0x4d8>
    17d8:	ldr	r1, [r7]
    17dc:	cmp	r9, #0
    17e0:	add	r0, pc, r0
    17e4:	add	r4, pc, r4
    17e8:	ldrb	r2, [r0]
    17ec:	ldr	r3, [pc, #236]	; 18e0 <clicap_generate+0x4dc>
    17f0:	mov	r6, r4
    17f4:	mov	r5, r4
    17f8:	movne	r6, r9
    17fc:	cmp	r9, #0
    1800:	add	r3, pc, r3
    1804:	movne	r5, r3
    1808:	cmp	r2, #0
    180c:	stm	sp, {r1, r5, r6}
    1810:	ldr	r3, [pc, #204]	; 18e4 <clicap_generate+0x4e0>
    1814:	ldr	r1, [sp, #16]
    1818:	ldr	r2, [pc, #200]	; 18e8 <clicap_generate+0x4e4>
    181c:	add	r3, pc, r3
    1820:	add	r2, pc, r2
    1824:	moveq	r3, r4
    1828:	mov	r4, ip
    182c:	bl	738 <rb_snprintf_try_append@plt>
    1830:	cmn	r0, #1
    1834:	bgt	185c <clicap_generate+0x458>
    1838:	ldr	r0, [pc, #172]	; 18ec <clicap_generate+0x4e8>
    183c:	add	r0, pc, r0
    1840:	ldrb	r0, [r0]
    1844:	cmp	r0, #0
    1848:	beq	185c <clicap_generate+0x458>
    184c:	ldr	r0, [sp, #12]
    1850:	ldrb	r0, [r0, #2]
    1854:	tst	r0, #8
    1858:	bne	16ac <clicap_generate+0x2a8>
    185c:	ldr	r0, [r8]
    1860:	mov	r1, sl
    1864:	ldr	r0, [r0, #4]
    1868:	bl	798 <rb_dictionary_foreach_next@plt>
    186c:	ldr	r0, [r8]
    1870:	mov	r1, sl
    1874:	ldr	r0, [r0, #4]
    1878:	bl	774 <rb_dictionary_foreach_cur@plt>
    187c:	mov	r7, r0
    1880:	cmp	r0, #0
    1884:	bne	177c <clicap_generate+0x378>
    1888:	ldr	r0, [pc, #172]	; 193c <clicap_generate+0x538>
    188c:	add	r0, pc, r0
    1890:	str	r0, [sp]
    1894:	ldr	r1, [pc, #164]	; 1940 <clicap_generate+0x53c>
    1898:	add	r1, pc, r1
    189c:	ldr	r2, [pc, #160]	; 1944 <clicap_generate+0x540>
    18a0:	ldr	r3, [pc, #160]	; 1948 <clicap_generate+0x544>
    18a4:	mov	r0, r4
    18a8:	add	r2, pc, r2
    18ac:	add	r3, pc, r3
    18b0:	bl	72c <sendto_one@plt>
    18b4:	sub	sp, fp, #28
    18b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18bc:	.word	0x00010eb8
    18c0:	.word	0x00000562
    18c4:	.word	0x00010c08
    18c8:	.word	0x00000559
    18cc:	.word	0x00000327
    18d0:	.word	0x00011053
    18d4:	.word	0x00010bb0
    18d8:	.word	0x000001e5
    18dc:	.word	0x00010cf7
    18e0:	.word	0x000001ca
    18e4:	.word	0x000001ac
    18e8:	.word	0x0000019f
    18ec:	.word	0x00010c9b
    18f0:	.word	0x00010e23
    18f4:	.word	0x000002f9
    18f8:	.word	0x00010c0c
    18fc:	.word	0x000002dc
    1900:	.word	0x000002c7
    1904:	.word	0x000002cd
    1908:	.word	0x00010dc7
    190c:	.word	0x000004dd
    1910:	.word	0x000004d8
    1914:	.word	0x00010fa3
    1918:	.word	0x0000046b
    191c:	.word	0x00010f6f
    1920:	.word	0x00010f47
    1924:	.word	0x0000041d
    1928:	.word	0x00010d30
    192c:	.word	0x00000400
    1930:	.word	0x000003e8
    1934:	.word	0x000003e3
    1938:	.word	0x00010ee3
    193c:	.word	0x00010c4b
    1940:	.word	0x00000129
    1944:	.word	0x00010a30
    1948:	.word	0x00000102
    194c:	.word	0x00010ebf
    1950:	.word	0x0000038d
    1954:	.word	0x00010ca0
    1958:	.word	0x00000370
    195c:	.word	0x00000378
    1960:	.word	0x00010da3
    1964:	.word	0x00000271
    1968:	.word	0x00010b84
    196c:	.word	0x00000254

Disassembly of section .fini:

00001970 <_fini>:
    1970:	push	{r3, lr}
    1974:	pop	{r3, pc}
