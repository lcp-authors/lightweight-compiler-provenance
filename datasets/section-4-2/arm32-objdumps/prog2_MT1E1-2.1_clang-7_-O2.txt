
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010c6c <.init>:
   10c6c:	push	{r3, lr}
   10c70:	bl	10d70 <_start@@Base+0x3c>
   10c74:	pop	{r3, pc}

Disassembly of section .plt:

00010c78 <calloc@plt-0x14>:
   10c78:	push	{lr}		; (str lr, [sp, #-4]!)
   10c7c:	ldr	lr, [pc, #4]	; 10c88 <calloc@plt-0x4>
   10c80:	add	lr, pc, lr
   10c84:	ldr	pc, [lr, #8]!
   10c88:	andeq	r2, r1, r8, ror r3

00010c8c <calloc@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #73728	; 0x12000
   10c94:	ldr	pc, [ip, #888]!	; 0x378

00010c98 <strcmp@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #880]!	; 0x370

00010ca4 <free@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #872]!	; 0x368

00010cb0 <realloc@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #864]!	; 0x360

00010cbc <fwrite@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #856]!	; 0x358

00010cc8 <strcpy@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #848]!	; 0x350

00010cd4 <puts@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #840]!	; 0x348

00010ce0 <malloc@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #832]!	; 0x340

00010cec <__libc_start_main@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #824]!	; 0x338

00010cf8 <__gmon_start__@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #816]!	; 0x330

00010d04 <strlen@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #808]!	; 0x328

00010d10 <fprintf@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #800]!	; 0x320

00010d1c <putchar@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #792]!	; 0x318

00010d28 <abort@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #784]!	; 0x310

Disassembly of section .text:

00010d34 <_start@@Base>:
   10d34:	mov	fp, #0
   10d38:	mov	lr, #0
   10d3c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d40:	mov	r2, sp
   10d44:	push	{r2}		; (str r2, [sp, #-4]!)
   10d48:	push	{r0}		; (str r0, [sp, #-4]!)
   10d4c:	ldr	ip, [pc, #16]	; 10d64 <_start@@Base+0x30>
   10d50:	push	{ip}		; (str ip, [sp, #-4]!)
   10d54:	ldr	r0, [pc, #12]	; 10d68 <_start@@Base+0x34>
   10d58:	ldr	r3, [pc, #12]	; 10d6c <_start@@Base+0x38>
   10d5c:	bl	10cec <__libc_start_main@plt>
   10d60:	bl	10d28 <abort@plt>
   10d64:	strdeq	r2, [r1], -r4
   10d68:	andeq	r1, r1, r0, ror r0
   10d6c:	muleq	r1, r4, r1
   10d70:	ldr	r3, [pc, #20]	; 10d8c <_start@@Base+0x58>
   10d74:	ldr	r2, [pc, #20]	; 10d90 <_start@@Base+0x5c>
   10d78:	add	r3, pc, r3
   10d7c:	ldr	r2, [r3, r2]
   10d80:	cmp	r2, #0
   10d84:	bxeq	lr
   10d88:	b	10cf8 <__gmon_start__@plt>
   10d8c:	andeq	r2, r1, r0, lsl #5
   10d90:	andeq	r0, r0, ip, asr #32
   10d94:	ldr	r0, [pc, #24]	; 10db4 <_start@@Base+0x80>
   10d98:	ldr	r3, [pc, #24]	; 10db8 <_start@@Base+0x84>
   10d9c:	cmp	r3, r0
   10da0:	bxeq	lr
   10da4:	ldr	r3, [pc, #16]	; 10dbc <_start@@Base+0x88>
   10da8:	cmp	r3, #0
   10dac:	bxeq	lr
   10db0:	bx	r3
   10db4:	andeq	r3, r2, ip, lsr #3
   10db8:	andeq	r3, r2, ip, lsr #3
   10dbc:	andeq	r0, r0, r0
   10dc0:	ldr	r0, [pc, #36]	; 10dec <_start@@Base+0xb8>
   10dc4:	ldr	r1, [pc, #36]	; 10df0 <_start@@Base+0xbc>
   10dc8:	sub	r1, r1, r0
   10dcc:	asr	r1, r1, #2
   10dd0:	add	r1, r1, r1, lsr #31
   10dd4:	asrs	r1, r1, #1
   10dd8:	bxeq	lr
   10ddc:	ldr	r3, [pc, #16]	; 10df4 <_start@@Base+0xc0>
   10de0:	cmp	r3, #0
   10de4:	bxeq	lr
   10de8:	bx	r3
   10dec:	andeq	r3, r2, ip, lsr #3
   10df0:	andeq	r3, r2, ip, lsr #3
   10df4:	andeq	r0, r0, r0
   10df8:	push	{r4, lr}
   10dfc:	ldr	r4, [pc, #24]	; 10e1c <_start@@Base+0xe8>
   10e00:	ldrb	r3, [r4]
   10e04:	cmp	r3, #0
   10e08:	popne	{r4, pc}
   10e0c:	bl	10d94 <_start@@Base+0x60>
   10e10:	mov	r3, #1
   10e14:	strb	r3, [r4]
   10e18:	pop	{r4, pc}
   10e1c:	andeq	r3, r2, ip, lsr #3
   10e20:	b	10dc0 <_start@@Base+0x8c>

00010e24 <tira_carta@@Base>:
   10e24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e28:	add	fp, sp, #24
   10e2c:	ldr	r8, [r0]
   10e30:	ldr	r4, [r1]
   10e34:	mov	r5, r0
   10e38:	ldr	r6, [r8]
   10e3c:	ldr	r0, [r4]
   10e40:	mov	r1, r6
   10e44:	bl	10c98 <strcmp@plt>
   10e48:	mov	r7, #0
   10e4c:	cmp	r0, #0
   10e50:	beq	10e70 <tira_carta@@Base+0x4c>
   10e54:	ldr	r4, [r4, #4]
   10e58:	mov	r1, r6
   10e5c:	ldr	r0, [r4]
   10e60:	bl	10c98 <strcmp@plt>
   10e64:	add	r7, r7, #1
   10e68:	cmp	r0, #0
   10e6c:	bne	10e54 <tira_carta@@Base+0x30>
   10e70:	mov	r0, r5
   10e74:	mov	r1, r8
   10e78:	bl	11f4c <lista_remove@@Base>
   10e7c:	mov	r0, r7
   10e80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010e84 <faz_jogada@@Base>:
   10e84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e88:	add	fp, sp, #28
   10e8c:	sub	sp, sp, #20
   10e90:	ldr	r4, [r0]
   10e94:	str	r0, [sp, #16]
   10e98:	str	r2, [sp, #12]
   10e9c:	mov	r7, r1
   10ea0:	lsl	r0, r4, #2
   10ea4:	bl	10ce0 <malloc@plt>
   10ea8:	mov	r6, r0
   10eac:	mvn	r5, #0
   10eb0:	cmp	r4, #1
   10eb4:	blt	10f68 <faz_jogada@@Base+0xe4>
   10eb8:	mov	r8, #0
   10ebc:	str	r6, [sp, #8]
   10ec0:	str	r7, [sp, #4]
   10ec4:	ldr	r0, [sp, #12]
   10ec8:	ldr	r4, [r7]
   10ecc:	ldr	r9, [r0]
   10ed0:	ldr	r6, [r4]
   10ed4:	ldr	r0, [r9]
   10ed8:	mov	r1, r6
   10edc:	bl	10c98 <strcmp@plt>
   10ee0:	cmp	r0, #0
   10ee4:	mov	sl, #0
   10ee8:	beq	10f0c <faz_jogada@@Base+0x88>
   10eec:	mov	sl, #0
   10ef0:	ldr	r9, [r9, #4]
   10ef4:	mov	r1, r6
   10ef8:	ldr	r0, [r9]
   10efc:	bl	10c98 <strcmp@plt>
   10f00:	add	sl, sl, #1
   10f04:	cmp	r0, #0
   10f08:	bne	10ef0 <faz_jogada@@Base+0x6c>
   10f0c:	ldr	r7, [sp, #4]
   10f10:	mov	r1, r4
   10f14:	mov	r0, r7
   10f18:	bl	11f4c <lista_remove@@Base>
   10f1c:	ldr	r6, [sp, #8]
   10f20:	ldr	r0, [sp, #16]
   10f24:	str	sl, [r6, r8, lsl #2]
   10f28:	add	r8, r8, #1
   10f2c:	ldr	r0, [r0]
   10f30:	cmp	r8, r0
   10f34:	blt	10ec4 <faz_jogada@@Base+0x40>
   10f38:	cmp	r0, #1
   10f3c:	blt	10f68 <faz_jogada@@Base+0xe4>
   10f40:	mov	r1, #0
   10f44:	mvn	r5, #0
   10f48:	mvn	r2, #0
   10f4c:	ldr	r3, [r6, r1, lsl #2]
   10f50:	cmp	r3, r2
   10f54:	movgt	r5, r1
   10f58:	add	r1, r1, #1
   10f5c:	movgt	r2, r3
   10f60:	cmp	r0, r1
   10f64:	bne	10f4c <faz_jogada@@Base+0xc8>
   10f68:	mov	r0, r6
   10f6c:	bl	10ca4 <free@plt>
   10f70:	ldr	r0, [sp, #16]
   10f74:	ldr	r0, [r0, #8]
   10f78:	ldr	r0, [r0, r5, lsl #2]
   10f7c:	sub	sp, fp, #28
   10f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010f84 <numero_vitorias@@Base>:
   10f84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f88:	add	fp, sp, #24
   10f8c:	ldr	r6, [r0]
   10f90:	cmp	r6, #1
   10f94:	movlt	r5, #0
   10f98:	movlt	r0, r5
   10f9c:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   10fa0:	ldr	r7, [r0, #8]
   10fa4:	mov	r8, r1
   10fa8:	mov	r5, #0
   10fac:	mov	r4, #0
   10fb0:	ldr	r1, [r7, r4, lsl #2]
   10fb4:	mov	r0, r8
   10fb8:	bl	10c98 <strcmp@plt>
   10fbc:	cmp	r0, #0
   10fc0:	add	r4, r4, #1
   10fc4:	addeq	r5, r5, #1
   10fc8:	cmp	r4, r6
   10fcc:	blt	10fb0 <numero_vitorias@@Base+0x2c>
   10fd0:	mov	r0, r5
   10fd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010fd8 <insere_carta@@Base>:
   10fd8:	push	{fp, lr}
   10fdc:	mov	fp, sp
   10fe0:	sub	sp, sp, #8
   10fe4:	cmp	r1, #7
   10fe8:	bgt	11000 <insere_carta@@Base+0x28>
   10fec:	mov	r2, #0
   10ff0:	add	r1, r1, #50	; 0x32
   10ff4:	strb	r2, [sp, #5]
   10ff8:	strb	r1, [sp, #4]
   10ffc:	b	1105c <insere_carta@@Base+0x84>
   11000:	sub	r1, r1, #8
   11004:	cmp	r1, #4
   11008:	bhi	1105c <insere_carta@@Base+0x84>
   1100c:	add	r2, pc, #4
   11010:	ldr	r1, [r2, r1, lsl #2]
   11014:	add	pc, r2, r1
   11018:	andeq	r0, r0, r4, lsl r0
   1101c:	andeq	r0, r0, r4, lsr #32
   11020:	andeq	r0, r0, ip, lsr #32
   11024:	andeq	r0, r0, r4, lsr r0
   11028:	andeq	r0, r0, ip, lsr r0
   1102c:	mov	r1, #0
   11030:	strb	r1, [sp, #6]
   11034:	movw	r1, #12337	; 0x3031
   11038:	b	11058 <insere_carta@@Base+0x80>
   1103c:	mov	r1, #74	; 0x4a
   11040:	b	11058 <insere_carta@@Base+0x80>
   11044:	mov	r1, #81	; 0x51
   11048:	b	11058 <insere_carta@@Base+0x80>
   1104c:	mov	r1, #75	; 0x4b
   11050:	b	11058 <insere_carta@@Base+0x80>
   11054:	mov	r1, #65	; 0x41
   11058:	strh	r1, [sp, #4]
   1105c:	ldr	r2, [r0]
   11060:	add	r1, sp, #4
   11064:	bl	11e58 <lista_insere@@Base>
   11068:	mov	sp, fp
   1106c:	pop	{fp, pc}

00011070 <main@@Base>:
   11070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11074:	add	fp, sp, #28
   11078:	sub	sp, sp, #20
   1107c:	bl	11988 <vetor_novo@@Base>
   11080:	ldr	r4, [pc, #2196]	; 1191c <main@@Base+0x8ac>
   11084:	mov	r2, #0
   11088:	mov	r5, r0
   1108c:	mov	r7, #0
   11090:	ldr	r4, [pc, r4]
   11094:	ldr	r1, [r4]
   11098:	bl	11ad4 <vetor_insere@@Base>
   1109c:	ldr	r1, [r4, #4]
   110a0:	mov	r0, r5
   110a4:	mov	r2, #1
   110a8:	bl	11ad4 <vetor_insere@@Base>
   110ac:	ldr	r1, [r4, #8]
   110b0:	mov	r0, r5
   110b4:	mov	r2, #2
   110b8:	bl	11ad4 <vetor_insere@@Base>
   110bc:	ldr	r1, [r4, #12]
   110c0:	mov	r0, r5
   110c4:	mov	r2, #3
   110c8:	str	r5, [sp, #8]
   110cc:	bl	11ad4 <vetor_insere@@Base>
   110d0:	bl	11db0 <lista_nova@@Base>
   110d4:	ldr	r5, [pc, #2116]	; 11920 <main@@Base+0x8b0>
   110d8:	mov	r4, r0
   110dc:	add	r6, sp, #16
   110e0:	mov	r8, #75	; 0x4b
   110e4:	mov	r9, #65	; 0x41
   110e8:	mov	sl, #0
   110ec:	ldr	r5, [pc, r5]
   110f0:	b	11158 <main@@Base+0xe8>
   110f4:	sub	r0, r0, #8
   110f8:	cmp	r0, #4
   110fc:	bhi	11170 <main@@Base+0x100>
   11100:	add	r1, pc, #4
   11104:	ldr	r0, [r1, r0, lsl #2]
   11108:	add	pc, r1, r0
   1110c:	andeq	r0, r0, r4, lsl r0
   11110:	andeq	r0, r0, r4, lsr #32
   11114:	andeq	r0, r0, r0, lsr r0
   11118:	andeq	r0, r0, ip, lsr r0
   1111c:	andeq	r0, r0, r4, asr #32
   11120:	movw	r0, #12337	; 0x3031
   11124:	strb	r7, [sp, #18]
   11128:	strh	r0, [sp, #16]
   1112c:	b	11170 <main@@Base+0x100>
   11130:	mov	r0, #74	; 0x4a
   11134:	strh	r0, [sp, #16]
   11138:	b	11170 <main@@Base+0x100>
   1113c:	mov	r0, #81	; 0x51
   11140:	strh	r0, [sp, #16]
   11144:	b	11170 <main@@Base+0x100>
   11148:	strh	r8, [sp, #16]
   1114c:	b	11170 <main@@Base+0x100>
   11150:	strh	r9, [sp, #16]
   11154:	b	11170 <main@@Base+0x100>
   11158:	ldr	r0, [r5, sl, lsl #2]
   1115c:	cmp	r0, #7
   11160:	bgt	110f4 <main@@Base+0x84>
   11164:	add	r0, r0, #50	; 0x32
   11168:	strb	r7, [sp, #17]
   1116c:	strb	r0, [sp, #16]
   11170:	ldr	r2, [r4]
   11174:	mov	r0, r4
   11178:	mov	r1, r6
   1117c:	bl	11e58 <lista_insere@@Base>
   11180:	add	sl, sl, #1
   11184:	cmp	sl, #52	; 0x34
   11188:	bne	11158 <main@@Base+0xe8>
   1118c:	bl	11db0 <lista_nova@@Base>
   11190:	ldr	r7, [pc, #1932]	; 11924 <main@@Base+0x8b4>
   11194:	mov	r2, #0
   11198:	mov	r8, r0
   1119c:	mov	r6, #0
   111a0:	ldr	r7, [pc, r7]
   111a4:	ldr	r1, [r7]
   111a8:	bl	11e58 <lista_insere@@Base>
   111ac:	ldr	r1, [r7, #4]
   111b0:	mov	r0, r8
   111b4:	mov	r2, #0
   111b8:	bl	11e58 <lista_insere@@Base>
   111bc:	ldr	r1, [r7, #8]
   111c0:	mov	r0, r8
   111c4:	mov	r2, #0
   111c8:	bl	11e58 <lista_insere@@Base>
   111cc:	ldr	r1, [r7, #12]
   111d0:	mov	r0, r8
   111d4:	mov	r2, #0
   111d8:	bl	11e58 <lista_insere@@Base>
   111dc:	ldr	r1, [r7, #16]
   111e0:	mov	r0, r8
   111e4:	mov	r2, #0
   111e8:	bl	11e58 <lista_insere@@Base>
   111ec:	ldr	r1, [r7, #20]
   111f0:	mov	r0, r8
   111f4:	mov	r2, #0
   111f8:	bl	11e58 <lista_insere@@Base>
   111fc:	ldr	r1, [r7, #24]
   11200:	mov	r0, r8
   11204:	mov	r2, #0
   11208:	bl	11e58 <lista_insere@@Base>
   1120c:	ldr	r1, [r7, #28]
   11210:	mov	r0, r8
   11214:	mov	r2, #0
   11218:	bl	11e58 <lista_insere@@Base>
   1121c:	ldr	r1, [r7, #32]
   11220:	mov	r0, r8
   11224:	mov	r2, #0
   11228:	bl	11e58 <lista_insere@@Base>
   1122c:	ldr	r1, [r7, #36]	; 0x24
   11230:	mov	r0, r8
   11234:	mov	r2, #0
   11238:	bl	11e58 <lista_insere@@Base>
   1123c:	ldr	r1, [r7, #40]	; 0x28
   11240:	mov	r0, r8
   11244:	mov	r2, #0
   11248:	bl	11e58 <lista_insere@@Base>
   1124c:	ldr	r1, [r7, #44]	; 0x2c
   11250:	mov	r0, r8
   11254:	mov	r2, #0
   11258:	bl	11e58 <lista_insere@@Base>
   1125c:	ldr	r1, [r7, #48]	; 0x30
   11260:	mov	r0, r8
   11264:	mov	r2, #0
   11268:	bl	11e58 <lista_insere@@Base>
   1126c:	ldr	r0, [pc, #1716]	; 11928 <main@@Base+0x8b8>
   11270:	ldr	r0, [pc, r0]
   11274:	ldr	r1, [r4]
   11278:	ldr	sl, [r8]
   1127c:	ldr	r0, [r0]
   11280:	ldr	r9, [r1]
   11284:	str	r1, [sp, #4]
   11288:	str	r0, [sp, #12]
   1128c:	ldr	r0, [sl]
   11290:	mov	r1, r9
   11294:	bl	10c98 <strcmp@plt>
   11298:	cmp	r0, #0
   1129c:	mov	r7, #0
   112a0:	beq	112c4 <main@@Base+0x254>
   112a4:	mov	r7, #0
   112a8:	ldr	sl, [sl, #4]
   112ac:	mov	r1, r9
   112b0:	ldr	r0, [sl]
   112b4:	bl	10c98 <strcmp@plt>
   112b8:	add	r7, r7, #1
   112bc:	cmp	r0, #0
   112c0:	bne	112a8 <main@@Base+0x238>
   112c4:	ldr	r1, [sp, #4]
   112c8:	mov	r0, r4
   112cc:	bl	11f4c <lista_remove@@Base>
   112d0:	ldr	r1, [pc, #1620]	; 1192c <main@@Base+0x8bc>
   112d4:	ldr	r0, [sp, #12]
   112d8:	mov	r2, r7
   112dc:	add	r1, pc, r1
   112e0:	bl	10d10 <fprintf@plt>
   112e4:	ldr	r0, [pc, #1604]	; 11930 <main@@Base+0x8c0>
   112e8:	ldr	r0, [pc, r0]
   112ec:	ldr	sl, [r4]
   112f0:	ldr	r9, [r8]
   112f4:	ldr	r0, [r0]
   112f8:	ldr	r7, [sl]
   112fc:	str	r0, [sp, #12]
   11300:	ldr	r0, [r9]
   11304:	mov	r1, r7
   11308:	bl	10c98 <strcmp@plt>
   1130c:	cmp	r0, #0
   11310:	beq	11334 <main@@Base+0x2c4>
   11314:	mov	r6, #0
   11318:	ldr	r9, [r9, #4]
   1131c:	mov	r1, r7
   11320:	ldr	r0, [r9]
   11324:	bl	10c98 <strcmp@plt>
   11328:	add	r6, r6, #1
   1132c:	cmp	r0, #0
   11330:	bne	11318 <main@@Base+0x2a8>
   11334:	mov	r0, r4
   11338:	mov	r1, sl
   1133c:	bl	11f4c <lista_remove@@Base>
   11340:	ldr	r1, [pc, #1516]	; 11934 <main@@Base+0x8c4>
   11344:	ldr	r0, [sp, #12]
   11348:	mov	r2, r6
   1134c:	add	r1, pc, r1
   11350:	bl	10d10 <fprintf@plt>
   11354:	ldr	r0, [pc, #1500]	; 11938 <main@@Base+0x8c8>
   11358:	mov	r1, r4
   1135c:	ldr	r0, [pc, r0]
   11360:	ldr	sl, [r1]
   11364:	ldr	r4, [r8]
   11368:	str	r1, [sp, #12]
   1136c:	ldr	r7, [sl]
   11370:	ldr	r9, [r0]
   11374:	ldr	r0, [r4]
   11378:	mov	r1, r7
   1137c:	bl	10c98 <strcmp@plt>
   11380:	mov	r6, #0
   11384:	cmp	r0, #0
   11388:	beq	113a8 <main@@Base+0x338>
   1138c:	ldr	r4, [r4, #4]
   11390:	mov	r1, r7
   11394:	ldr	r0, [r4]
   11398:	bl	10c98 <strcmp@plt>
   1139c:	add	r6, r6, #1
   113a0:	cmp	r0, #0
   113a4:	bne	1138c <main@@Base+0x31c>
   113a8:	ldr	r4, [sp, #12]
   113ac:	mov	r1, sl
   113b0:	mov	r0, r4
   113b4:	bl	11f4c <lista_remove@@Base>
   113b8:	ldr	r1, [pc, #1404]	; 1193c <main@@Base+0x8cc>
   113bc:	mov	r0, r9
   113c0:	mov	r2, r6
   113c4:	add	r1, pc, r1
   113c8:	bl	10d10 <fprintf@plt>
   113cc:	ldr	r0, [r5, #196]	; 0xc4
   113d0:	mov	r6, r5
   113d4:	cmp	r0, #7
   113d8:	bgt	113f4 <main@@Base+0x384>
   113dc:	ldr	r5, [sp, #8]
   113e0:	mov	r1, #0
   113e4:	add	r0, r0, #50	; 0x32
   113e8:	strb	r1, [sp, #17]
   113ec:	strb	r0, [sp, #16]
   113f0:	b	11454 <main@@Base+0x3e4>
   113f4:	ldr	r5, [sp, #8]
   113f8:	sub	r0, r0, #8
   113fc:	cmp	r0, #4
   11400:	bhi	11454 <main@@Base+0x3e4>
   11404:	add	r1, pc, #4
   11408:	ldr	r0, [r1, r0, lsl #2]
   1140c:	add	pc, r1, r0
   11410:	andeq	r0, r0, r4, lsl r0
   11414:	andeq	r0, r0, r4, lsr #32
   11418:	andeq	r0, r0, ip, lsr #32
   1141c:	andeq	r0, r0, r4, lsr r0
   11420:	andeq	r0, r0, ip, lsr r0
   11424:	mov	r0, #0
   11428:	strb	r0, [sp, #18]
   1142c:	movw	r0, #12337	; 0x3031
   11430:	b	11450 <main@@Base+0x3e0>
   11434:	mov	r0, #74	; 0x4a
   11438:	b	11450 <main@@Base+0x3e0>
   1143c:	mov	r0, #81	; 0x51
   11440:	b	11450 <main@@Base+0x3e0>
   11444:	mov	r0, #75	; 0x4b
   11448:	b	11450 <main@@Base+0x3e0>
   1144c:	mov	r0, #65	; 0x41
   11450:	strh	r0, [sp, #16]
   11454:	ldr	r2, [r4]
   11458:	add	r1, sp, #16
   1145c:	mov	r0, r4
   11460:	bl	11e58 <lista_insere@@Base>
   11464:	ldr	r0, [r6, #200]	; 0xc8
   11468:	cmp	r0, #7
   1146c:	bgt	11484 <main@@Base+0x414>
   11470:	mov	r1, #0
   11474:	add	r0, r0, #50	; 0x32
   11478:	strb	r1, [sp, #17]
   1147c:	strb	r0, [sp, #16]
   11480:	b	114e0 <main@@Base+0x470>
   11484:	sub	r0, r0, #8
   11488:	cmp	r0, #4
   1148c:	bhi	114e0 <main@@Base+0x470>
   11490:	add	r1, pc, #4
   11494:	ldr	r0, [r1, r0, lsl #2]
   11498:	add	pc, r1, r0
   1149c:	andeq	r0, r0, r4, lsl r0
   114a0:	andeq	r0, r0, r4, lsr #32
   114a4:	andeq	r0, r0, ip, lsr #32
   114a8:	andeq	r0, r0, r4, lsr r0
   114ac:	andeq	r0, r0, ip, lsr r0
   114b0:	mov	r0, #0
   114b4:	strb	r0, [sp, #18]
   114b8:	movw	r0, #12337	; 0x3031
   114bc:	b	114dc <main@@Base+0x46c>
   114c0:	mov	r0, #74	; 0x4a
   114c4:	b	114dc <main@@Base+0x46c>
   114c8:	mov	r0, #81	; 0x51
   114cc:	b	114dc <main@@Base+0x46c>
   114d0:	mov	r0, #75	; 0x4b
   114d4:	b	114dc <main@@Base+0x46c>
   114d8:	mov	r0, #65	; 0x41
   114dc:	strh	r0, [sp, #16]
   114e0:	ldr	r2, [r4]
   114e4:	add	r1, sp, #16
   114e8:	mov	r0, r4
   114ec:	bl	11e58 <lista_insere@@Base>
   114f0:	ldr	r0, [r6, #204]	; 0xcc
   114f4:	cmp	r0, #7
   114f8:	bgt	11510 <main@@Base+0x4a0>
   114fc:	mov	r1, #0
   11500:	add	r0, r0, #50	; 0x32
   11504:	strb	r1, [sp, #17]
   11508:	strb	r0, [sp, #16]
   1150c:	b	1156c <main@@Base+0x4fc>
   11510:	sub	r0, r0, #8
   11514:	cmp	r0, #4
   11518:	bhi	1156c <main@@Base+0x4fc>
   1151c:	add	r1, pc, #4
   11520:	ldr	r0, [r1, r0, lsl #2]
   11524:	add	pc, r1, r0
   11528:	andeq	r0, r0, r4, lsl r0
   1152c:	andeq	r0, r0, r4, lsr #32
   11530:	andeq	r0, r0, ip, lsr #32
   11534:	andeq	r0, r0, r4, lsr r0
   11538:	andeq	r0, r0, ip, lsr r0
   1153c:	mov	r0, #0
   11540:	strb	r0, [sp, #18]
   11544:	movw	r0, #12337	; 0x3031
   11548:	b	11568 <main@@Base+0x4f8>
   1154c:	mov	r0, #74	; 0x4a
   11550:	b	11568 <main@@Base+0x4f8>
   11554:	mov	r0, #81	; 0x51
   11558:	b	11568 <main@@Base+0x4f8>
   1155c:	mov	r0, #75	; 0x4b
   11560:	b	11568 <main@@Base+0x4f8>
   11564:	mov	r0, #65	; 0x41
   11568:	strh	r0, [sp, #16]
   1156c:	ldr	r2, [r4]
   11570:	add	r1, sp, #16
   11574:	mov	r0, r4
   11578:	bl	11e58 <lista_insere@@Base>
   1157c:	mov	r7, #0
   11580:	bl	11988 <vetor_novo@@Base>
   11584:	ldr	r9, [pc, #948]	; 11940 <main@@Base+0x8d0>
   11588:	mov	r6, r0
   1158c:	add	r9, pc, r9
   11590:	b	115b4 <main@@Base+0x544>
   11594:	ldr	r0, [pc, #936]	; 11944 <main@@Base+0x8d4>
   11598:	mov	r1, #44	; 0x2c
   1159c:	mov	r2, #1
   115a0:	ldr	r0, [pc, r0]
   115a4:	ldr	r3, [r0]
   115a8:	mov	r0, r9
   115ac:	bl	10cbc <fwrite@plt>
   115b0:	b	115ec <main@@Base+0x57c>
   115b4:	mov	r0, r5
   115b8:	mov	r1, r4
   115bc:	mov	r2, r8
   115c0:	bl	10e84 <faz_jogada@@Base>
   115c4:	cmp	r0, #0
   115c8:	beq	115dc <main@@Base+0x56c>
   115cc:	mov	r1, r0
   115d0:	mov	r0, r6
   115d4:	mov	r2, r7
   115d8:	bl	11ad4 <vetor_insere@@Base>
   115dc:	mov	r0, r5
   115e0:	bl	11a9c <vetor_tamanho@@Base>
   115e4:	cmp	r0, #4
   115e8:	bne	11594 <main@@Base+0x524>
   115ec:	add	r7, r7, #1
   115f0:	cmp	r7, #13
   115f4:	bne	115b4 <main@@Base+0x544>
   115f8:	str	r8, [sp, #4]
   115fc:	ldr	r0, [pc, #836]	; 11948 <main@@Base+0x8d8>
   11600:	add	r0, pc, r0
   11604:	bl	10cd4 <puts@plt>
   11608:	ldr	r0, [r6]
   1160c:	cmp	r0, #1
   11610:	bge	118c4 <main@@Base+0x854>
   11614:	mov	r0, r6
   11618:	bl	119b8 <vetor_apaga@@Base>
   1161c:	bl	11988 <vetor_novo@@Base>
   11620:	ldr	r7, [pc, #812]	; 11954 <main@@Base+0x8e4>
   11624:	mov	r2, #0
   11628:	mov	r9, r0
   1162c:	mov	r6, #0
   11630:	ldr	r7, [pc, r7]
   11634:	ldr	r1, [r7]
   11638:	bl	11ad4 <vetor_insere@@Base>
   1163c:	ldr	r1, [r7, #4]
   11640:	mov	r0, r9
   11644:	mov	r2, #1
   11648:	bl	11ad4 <vetor_insere@@Base>
   1164c:	ldr	r1, [r7, #8]
   11650:	mov	r0, r9
   11654:	mov	r2, #2
   11658:	bl	11ad4 <vetor_insere@@Base>
   1165c:	ldr	r1, [r7, #12]
   11660:	mov	r0, r9
   11664:	mov	r2, #3
   11668:	bl	11ad4 <vetor_insere@@Base>
   1166c:	ldr	r1, [r7, #16]
   11670:	mov	r0, r9
   11674:	mov	r2, #4
   11678:	bl	11ad4 <vetor_insere@@Base>
   1167c:	ldr	r1, [r7, #20]
   11680:	mov	r0, r9
   11684:	mov	r2, #5
   11688:	bl	11ad4 <vetor_insere@@Base>
   1168c:	ldr	r1, [r7, #24]
   11690:	mov	r0, r9
   11694:	mov	r2, #6
   11698:	bl	11ad4 <vetor_insere@@Base>
   1169c:	ldr	r1, [r7, #28]
   116a0:	mov	r0, r9
   116a4:	mov	r2, #7
   116a8:	bl	11ad4 <vetor_insere@@Base>
   116ac:	ldr	r1, [r7, #32]
   116b0:	mov	r0, r9
   116b4:	mov	r2, #8
   116b8:	bl	11ad4 <vetor_insere@@Base>
   116bc:	ldr	r1, [r7, #36]	; 0x24
   116c0:	mov	r0, r9
   116c4:	mov	r2, #9
   116c8:	bl	11ad4 <vetor_insere@@Base>
   116cc:	ldr	r1, [r7, #40]	; 0x28
   116d0:	mov	r0, r9
   116d4:	mov	r2, #10
   116d8:	bl	11ad4 <vetor_insere@@Base>
   116dc:	ldr	r1, [r7, #44]	; 0x2c
   116e0:	mov	r0, r9
   116e4:	mov	r2, #11
   116e8:	bl	11ad4 <vetor_insere@@Base>
   116ec:	ldr	r1, [r7, #48]	; 0x30
   116f0:	mov	r0, r9
   116f4:	mov	r2, #12
   116f8:	bl	11ad4 <vetor_insere@@Base>
   116fc:	mov	r0, #10
   11700:	bl	10d1c <putchar@plt>
   11704:	ldr	r8, [r9]
   11708:	ldr	r0, [pc, #584]	; 11958 <main@@Base+0x8e8>
   1170c:	mov	sl, #0
   11710:	ldr	r0, [pc, r0]
   11714:	cmp	r8, #1
   11718:	ldr	r7, [r0]
   1171c:	ldr	r0, [pc, #568]	; 1195c <main@@Base+0x8ec>
   11720:	ldr	r0, [pc, r0]
   11724:	ldr	r5, [r0]
   11728:	blt	11750 <main@@Base+0x6e0>
   1172c:	ldr	r4, [r9, #8]
   11730:	mov	sl, #0
   11734:	ldr	r1, [r4], #4
   11738:	mov	r0, r7
   1173c:	bl	10c98 <strcmp@plt>
   11740:	cmp	r0, #0
   11744:	addeq	sl, sl, #1
   11748:	subs	r8, r8, #1
   1174c:	bne	11734 <main@@Base+0x6c4>
   11750:	ldr	r8, [sp, #8]
   11754:	ldr	r1, [pc, #516]	; 11960 <main@@Base+0x8f0>
   11758:	mov	r0, r5
   1175c:	mov	r2, r7
   11760:	mov	r3, sl
   11764:	add	r1, pc, r1
   11768:	bl	10d10 <fprintf@plt>
   1176c:	ldr	r4, [r9]
   11770:	ldr	r0, [pc, #492]	; 11964 <main@@Base+0x8f4>
   11774:	ldr	r0, [pc, r0]
   11778:	cmp	r4, #1
   1177c:	ldr	r7, [r0, #4]
   11780:	ldr	r0, [pc, #480]	; 11968 <main@@Base+0x8f8>
   11784:	ldr	r0, [pc, r0]
   11788:	ldr	sl, [r0]
   1178c:	blt	117b4 <main@@Base+0x744>
   11790:	ldr	r5, [r9, #8]
   11794:	mov	r6, #0
   11798:	ldr	r1, [r5], #4
   1179c:	mov	r0, r7
   117a0:	bl	10c98 <strcmp@plt>
   117a4:	cmp	r0, #0
   117a8:	addeq	r6, r6, #1
   117ac:	subs	r4, r4, #1
   117b0:	bne	11798 <main@@Base+0x728>
   117b4:	ldr	r1, [pc, #432]	; 1196c <main@@Base+0x8fc>
   117b8:	mov	r0, sl
   117bc:	mov	r2, r7
   117c0:	mov	r3, r6
   117c4:	add	r1, pc, r1
   117c8:	bl	10d10 <fprintf@plt>
   117cc:	ldr	r4, [r9]
   117d0:	ldr	r0, [pc, #408]	; 11970 <main@@Base+0x900>
   117d4:	mov	r6, #0
   117d8:	mov	sl, #0
   117dc:	ldr	r0, [pc, r0]
   117e0:	cmp	r4, #1
   117e4:	ldr	r7, [r0, #8]
   117e8:	ldr	r0, [pc, #388]	; 11974 <main@@Base+0x904>
   117ec:	ldr	r0, [pc, r0]
   117f0:	ldr	r0, [r0]
   117f4:	str	r0, [sp]
   117f8:	blt	11820 <main@@Base+0x7b0>
   117fc:	ldr	r5, [r9, #8]
   11800:	mov	sl, #0
   11804:	ldr	r1, [r5], #4
   11808:	mov	r0, r7
   1180c:	bl	10c98 <strcmp@plt>
   11810:	cmp	r0, #0
   11814:	addeq	sl, sl, #1
   11818:	subs	r4, r4, #1
   1181c:	bne	11804 <main@@Base+0x794>
   11820:	ldr	r1, [pc, #336]	; 11978 <main@@Base+0x908>
   11824:	ldr	r0, [sp]
   11828:	mov	r2, r7
   1182c:	mov	r3, sl
   11830:	add	r1, pc, r1
   11834:	bl	10d10 <fprintf@plt>
   11838:	ldr	r4, [r9]
   1183c:	ldr	r0, [pc, #312]	; 1197c <main@@Base+0x90c>
   11840:	ldr	r0, [pc, r0]
   11844:	cmp	r4, #1
   11848:	ldr	r7, [r0, #12]
   1184c:	ldr	r0, [pc, #300]	; 11980 <main@@Base+0x910>
   11850:	ldr	r0, [pc, r0]
   11854:	ldr	sl, [r0]
   11858:	blt	11880 <main@@Base+0x810>
   1185c:	ldr	r5, [r9, #8]
   11860:	mov	r6, #0
   11864:	ldr	r1, [r5], #4
   11868:	mov	r0, r7
   1186c:	bl	10c98 <strcmp@plt>
   11870:	cmp	r0, #0
   11874:	addeq	r6, r6, #1
   11878:	subs	r4, r4, #1
   1187c:	bne	11864 <main@@Base+0x7f4>
   11880:	ldr	r1, [pc, #252]	; 11984 <main@@Base+0x914>
   11884:	mov	r0, sl
   11888:	mov	r2, r7
   1188c:	mov	r3, r6
   11890:	add	r1, pc, r1
   11894:	bl	10d10 <fprintf@plt>
   11898:	mov	r0, r8
   1189c:	bl	119b8 <vetor_apaga@@Base>
   118a0:	ldr	r0, [sp, #12]
   118a4:	bl	11de0 <lista_apaga@@Base>
   118a8:	ldr	r0, [sp, #4]
   118ac:	bl	11de0 <lista_apaga@@Base>
   118b0:	mov	r0, r9
   118b4:	bl	119b8 <vetor_apaga@@Base>
   118b8:	mov	r0, #0
   118bc:	sub	sp, fp, #28
   118c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118c4:	ldr	r9, [pc, #128]	; 1194c <main@@Base+0x8dc>
   118c8:	mov	r7, #1
   118cc:	add	r9, pc, r9
   118d0:	ldr	r0, [pc, #120]	; 11950 <main@@Base+0x8e0>
   118d4:	sub	r1, r7, #1
   118d8:	ldr	r0, [pc, r0]
   118dc:	ldr	sl, [r0]
   118e0:	mov	r0, r6
   118e4:	bl	11aac <vetor_elemento@@Base>
   118e8:	mov	r3, r0
   118ec:	mov	r0, sl
   118f0:	mov	r1, r9
   118f4:	mov	r2, r7
   118f8:	bl	10d10 <fprintf@plt>
   118fc:	cmp	r7, #2
   11900:	bhi	11614 <main@@Base+0x5a4>
   11904:	ldr	r1, [r6]
   11908:	add	r0, r7, #1
   1190c:	cmp	r7, r1
   11910:	mov	r7, r0
   11914:	bge	11614 <main@@Base+0x5a4>
   11918:	b	118d0 <main@@Base+0x860>
   1191c:	andeq	r1, r1, ip, lsr #31
   11920:	andeq	r1, r1, r0, ror #30
   11924:			; <UNDEFINED> instruction: 0x00011eb0
   11928:	ldrdeq	r1, [r1], -r0
   1192c:	andeq	r0, r0, pc, asr #30
   11930:	andeq	r1, r1, r8, asr sp
   11934:	strdeq	r0, [r0], -ip
   11938:	andeq	r1, r1, r4, ror #25
   1193c:	andeq	r0, r0, r0, lsr #29
   11940:	strdeq	r0, [r0], -r5
   11944:	andeq	r1, r1, r0, lsr #21
   11948:	andeq	r0, r0, r8, ror #25
   1194c:	andeq	r0, r0, r2, ror #19
   11950:	andeq	r1, r1, r8, ror #14
   11954:	andeq	r1, r1, r8, lsl sl
   11958:	andeq	r1, r1, ip, lsr #18
   1195c:	andeq	r1, r1, r0, lsr #18
   11960:	andeq	r0, r0, r9, asr fp
   11964:	andeq	r1, r1, r8, asr #17
   11968:			; <UNDEFINED> instruction: 0x000118bc
   1196c:	strdeq	r0, [r0], -r9
   11970:	andeq	r1, r1, r0, ror #16
   11974:	andeq	r1, r1, r4, asr r8
   11978:	andeq	r0, r0, sp, lsl #21
   1197c:	strdeq	r1, [r1], -ip
   11980:	strdeq	r1, [r1], -r0
   11984:	andeq	r0, r0, sp, lsr #20

00011988 <vetor_novo@@Base>:
   11988:	push	{fp, lr}
   1198c:	mov	fp, sp
   11990:	mov	r0, #12
   11994:	bl	10ce0 <malloc@plt>
   11998:	cmp	r0, #0
   1199c:	movne	r1, #0
   119a0:	strne	r1, [r0]
   119a4:	strne	r1, [r0, #4]
   119a8:	strne	r1, [r0, #8]
   119ac:	popne	{fp, pc}
   119b0:	mov	r0, #0
   119b4:	pop	{fp, pc}

000119b8 <vetor_apaga@@Base>:
   119b8:	cmp	r0, #0
   119bc:	bxeq	lr
   119c0:	push	{r4, r5, fp, lr}
   119c4:	add	fp, sp, #8
   119c8:	ldr	r1, [r0]
   119cc:	mov	r4, r0
   119d0:	ldr	r0, [r0, #8]
   119d4:	cmp	r1, #1
   119d8:	blt	119fc <vetor_apaga@@Base+0x44>
   119dc:	mov	r5, #0
   119e0:	ldr	r0, [r0, r5, lsl #2]
   119e4:	bl	10ca4 <free@plt>
   119e8:	ldr	r1, [r4]
   119ec:	ldr	r0, [r4, #8]
   119f0:	add	r5, r5, #1
   119f4:	cmp	r5, r1
   119f8:	blt	119e0 <vetor_apaga@@Base+0x28>
   119fc:	bl	10ca4 <free@plt>
   11a00:	mov	r0, r4
   11a04:	pop	{r4, r5, fp, lr}
   11a08:	b	10ca4 <free@plt>

00011a0c <vetor_atribui@@Base>:
   11a0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a10:	add	fp, sp, #24
   11a14:	mvn	r5, #0
   11a18:	cmp	r0, #0
   11a1c:	beq	11a94 <vetor_atribui@@Base+0x88>
   11a20:	mov	r4, r1
   11a24:	cmp	r1, #0
   11a28:	blt	11a94 <vetor_atribui@@Base+0x88>
   11a2c:	mov	r7, r0
   11a30:	ldr	r0, [r0]
   11a34:	cmp	r0, r4
   11a38:	ble	11a94 <vetor_atribui@@Base+0x88>
   11a3c:	mov	r0, r2
   11a40:	mov	r8, r2
   11a44:	bl	10d04 <strlen@plt>
   11a48:	mov	r9, r0
   11a4c:	ldr	r0, [r7, #8]
   11a50:	ldr	r6, [r0, r4, lsl #2]
   11a54:	mov	r0, r6
   11a58:	bl	10d04 <strlen@plt>
   11a5c:	cmp	r9, r0
   11a60:	bls	11a84 <vetor_atribui@@Base+0x78>
   11a64:	add	r1, r9, #1
   11a68:	mov	r0, r6
   11a6c:	bl	10cb0 <realloc@plt>
   11a70:	mov	r6, r0
   11a74:	ldr	r0, [r7, #8]
   11a78:	cmp	r6, #0
   11a7c:	str	r6, [r0, r4, lsl #2]
   11a80:	beq	11a94 <vetor_atribui@@Base+0x88>
   11a84:	mov	r0, r6
   11a88:	mov	r1, r8
   11a8c:	bl	10cc8 <strcpy@plt>
   11a90:	mov	r5, r4
   11a94:	mov	r0, r5
   11a98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011a9c <vetor_tamanho@@Base>:
   11a9c:	cmp	r0, #0
   11aa0:	ldrne	r0, [r0]
   11aa4:	mvneq	r0, #0
   11aa8:	bx	lr

00011aac <vetor_elemento@@Base>:
   11aac:	mov	r2, r0
   11ab0:	mov	r0, #0
   11ab4:	cmp	r2, #0
   11ab8:	bxeq	lr
   11abc:	cmp	r1, #0
   11ac0:	ldrge	r3, [r2]
   11ac4:	cmpge	r3, r1
   11ac8:	ldrgt	r0, [r2, #8]
   11acc:	ldrgt	r0, [r0, r1, lsl #2]
   11ad0:	bx	lr

00011ad4 <vetor_insere@@Base>:
   11ad4:	push	{r4, r5, r6, r7, fp, lr}
   11ad8:	add	fp, sp, #16
   11adc:	mvn	r4, #0
   11ae0:	cmp	r0, #0
   11ae4:	beq	11ba0 <vetor_insere@@Base+0xcc>
   11ae8:	mov	r5, r2
   11aec:	cmp	r2, #0
   11af0:	blt	11ba0 <vetor_insere@@Base+0xcc>
   11af4:	mov	r6, r0
   11af8:	ldr	r0, [r0]
   11afc:	cmp	r0, r5
   11b00:	blt	11ba0 <vetor_insere@@Base+0xcc>
   11b04:	mov	r7, r1
   11b08:	ldr	r1, [r6, #4]
   11b0c:	cmp	r0, r1
   11b10:	bne	11b5c <vetor_insere@@Base+0x88>
   11b14:	lsl	r1, r0, #1
   11b18:	cmp	r0, #0
   11b1c:	movweq	r1, #1
   11b20:	str	r1, [r6, #4]
   11b24:	lsl	r1, r1, #2
   11b28:	ldr	r0, [r6, #8]
   11b2c:	bl	10cb0 <realloc@plt>
   11b30:	cmp	r0, #0
   11b34:	str	r0, [r6, #8]
   11b38:	beq	11ba0 <vetor_insere@@Base+0xcc>
   11b3c:	ldr	r0, [r6]
   11b40:	cmp	r0, r5
   11b44:	ble	11b64 <vetor_insere@@Base+0x90>
   11b48:	ldr	r1, [r6, #8]
   11b4c:	add	r2, r1, r0, lsl #2
   11b50:	ldr	r2, [r2, #-4]
   11b54:	str	r2, [r1, r0, lsl #2]
   11b58:	sub	r0, r0, #1
   11b5c:	cmp	r0, r5
   11b60:	bgt	11b48 <vetor_insere@@Base+0x74>
   11b64:	mov	r0, r7
   11b68:	bl	10d04 <strlen@plt>
   11b6c:	add	r0, r0, #1
   11b70:	mov	r1, #1
   11b74:	bl	10c8c <calloc@plt>
   11b78:	ldr	r1, [r6, #8]
   11b7c:	cmp	r0, #0
   11b80:	str	r0, [r1, r5, lsl #2]
   11b84:	beq	11ba0 <vetor_insere@@Base+0xcc>
   11b88:	mov	r1, r7
   11b8c:	bl	10cc8 <strcpy@plt>
   11b90:	ldr	r0, [r6]
   11b94:	mov	r4, r5
   11b98:	add	r0, r0, #1
   11b9c:	str	r0, [r6]
   11ba0:	mov	r0, r4
   11ba4:	pop	{r4, r5, r6, r7, fp, pc}

00011ba8 <vetor_remove@@Base>:
   11ba8:	push	{r4, r5, fp, lr}
   11bac:	add	fp, sp, #8
   11bb0:	mov	r4, r0
   11bb4:	mvn	r0, #0
   11bb8:	cmp	r4, #0
   11bbc:	popeq	{r4, r5, fp, pc}
   11bc0:	cmp	r1, #0
   11bc4:	mov	r5, r1
   11bc8:	ldrge	r1, [r4]
   11bcc:	cmpge	r1, r5
   11bd0:	bgt	11bd8 <vetor_remove@@Base+0x30>
   11bd4:	pop	{r4, r5, fp, pc}
   11bd8:	ldr	r0, [r4, #8]
   11bdc:	ldr	r0, [r0, r5, lsl #2]
   11be0:	bl	10ca4 <free@plt>
   11be4:	ldr	r0, [r4]
   11be8:	add	r1, r5, #1
   11bec:	cmp	r1, r0
   11bf0:	bge	11c18 <vetor_remove@@Base+0x70>
   11bf4:	ldr	r1, [r4, #8]
   11bf8:	add	r2, r1, r5, lsl #2
   11bfc:	ldr	r2, [r2, #4]
   11c00:	str	r2, [r1, r5, lsl #2]
   11c04:	add	r2, r5, #2
   11c08:	add	r1, r5, #1
   11c0c:	cmp	r2, r0
   11c10:	mov	r5, r1
   11c14:	blt	11bf4 <vetor_remove@@Base+0x4c>
   11c18:	sub	r0, r0, #1
   11c1c:	str	r0, [r4]
   11c20:	mov	r0, #0
   11c24:	pop	{r4, r5, fp, pc}

00011c28 <vetor_pesquisa@@Base>:
   11c28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11c2c:	add	fp, sp, #24
   11c30:	mvn	r8, #0
   11c34:	cmp	r0, #0
   11c38:	beq	11c78 <vetor_pesquisa@@Base+0x50>
   11c3c:	ldr	r6, [r0]
   11c40:	cmp	r6, #1
   11c44:	blt	11c78 <vetor_pesquisa@@Base+0x50>
   11c48:	ldr	r4, [r0, #8]
   11c4c:	mov	r5, r1
   11c50:	mov	r7, #0
   11c54:	ldr	r0, [r4, r7, lsl #2]
   11c58:	mov	r1, r5
   11c5c:	bl	10c98 <strcmp@plt>
   11c60:	cmp	r0, #0
   11c64:	moveq	r0, r7
   11c68:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   11c6c:	add	r7, r7, #1
   11c70:	cmp	r7, r6
   11c74:	blt	11c54 <vetor_pesquisa@@Base+0x2c>
   11c78:	mov	r0, r8
   11c7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011c80 <vetor_ordena@@Base>:
   11c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c84:	add	fp, sp, #28
   11c88:	sub	sp, sp, #4
   11c8c:	cmp	r0, #0
   11c90:	mvneq	r0, #0
   11c94:	subeq	sp, fp, #28
   11c98:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c9c:	ldr	r1, [r0]
   11ca0:	mov	sl, r0
   11ca4:	mov	r0, #0
   11ca8:	cmp	r1, #2
   11cac:	str	r1, [sp]
   11cb0:	blt	11d38 <vetor_ordena@@Base+0xb8>
   11cb4:	ldr	r5, [sl, #8]
   11cb8:	mov	r8, #1
   11cbc:	sub	r9, r8, #1
   11cc0:	ldr	r6, [r5, r8, lsl #2]
   11cc4:	ldr	r7, [r5, r9, lsl #2]
   11cc8:	mov	r0, r6
   11ccc:	mov	r1, r7
   11cd0:	bl	10c98 <strcmp@plt>
   11cd4:	cmn	r0, #1
   11cd8:	bgt	11d1c <vetor_ordena@@Base+0x9c>
   11cdc:	add	r0, r5, r9, lsl #2
   11ce0:	mov	r4, r9
   11ce4:	str	r7, [r0, #4]
   11ce8:	add	r0, r9, #1
   11cec:	ldr	r5, [sl, #8]
   11cf0:	cmp	r0, #2
   11cf4:	blt	11d20 <vetor_ordena@@Base+0xa0>
   11cf8:	add	r0, r5, r4, lsl #2
   11cfc:	ldr	r7, [r0, #-4]
   11d00:	mov	r0, r6
   11d04:	mov	r1, r7
   11d08:	bl	10c98 <strcmp@plt>
   11d0c:	sub	r9, r4, #1
   11d10:	cmp	r0, #0
   11d14:	blt	11cdc <vetor_ordena@@Base+0x5c>
   11d18:	b	11d20 <vetor_ordena@@Base+0xa0>
   11d1c:	mov	r4, r8
   11d20:	ldr	r0, [sp]
   11d24:	add	r8, r8, #1
   11d28:	str	r6, [r5, r4, lsl #2]
   11d2c:	cmp	r8, r0
   11d30:	blt	11cbc <vetor_ordena@@Base+0x3c>
   11d34:	mov	r0, #0
   11d38:	sub	sp, fp, #28
   11d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011d40 <novo_str@@Base>:
   11d40:	push	{r4, r5, r6, sl, fp, lr}
   11d44:	add	fp, sp, #16
   11d48:	mov	r6, r0
   11d4c:	mov	r0, #12
   11d50:	bl	10ce0 <malloc@plt>
   11d54:	mov	r5, #0
   11d58:	cmp	r0, #0
   11d5c:	beq	11d98 <novo_str@@Base+0x58>
   11d60:	mov	r4, r0
   11d64:	mov	r0, r6
   11d68:	bl	10d04 <strlen@plt>
   11d6c:	add	r0, r0, #1
   11d70:	bl	10ce0 <malloc@plt>
   11d74:	cmp	r0, #0
   11d78:	str	r0, [r4]
   11d7c:	beq	11da0 <novo_str@@Base+0x60>
   11d80:	mov	r1, r6
   11d84:	bl	10cc8 <strcpy@plt>
   11d88:	mov	r0, #0
   11d8c:	mov	r5, r4
   11d90:	str	r0, [r4, #4]
   11d94:	str	r0, [r4, #8]
   11d98:	mov	r0, r5
   11d9c:	pop	{r4, r5, r6, sl, fp, pc}
   11da0:	mov	r0, r4
   11da4:	bl	10ca4 <free@plt>
   11da8:	mov	r0, r5
   11dac:	pop	{r4, r5, r6, sl, fp, pc}

00011db0 <lista_nova@@Base>:
   11db0:	push	{fp, lr}
   11db4:	mov	fp, sp
   11db8:	mov	r0, #12
   11dbc:	bl	10ce0 <malloc@plt>
   11dc0:	cmp	r0, #0
   11dc4:	movne	r1, #0
   11dc8:	strne	r1, [r0]
   11dcc:	strne	r1, [r0, #4]
   11dd0:	strne	r1, [r0, #8]
   11dd4:	popne	{fp, pc}
   11dd8:	mov	r0, #0
   11ddc:	pop	{fp, pc}

00011de0 <lista_apaga@@Base>:
   11de0:	cmp	r0, #0
   11de4:	bxeq	lr
   11de8:	push	{r4, r5, fp, lr}
   11dec:	add	fp, sp, #8
   11df0:	mov	r4, r0
   11df4:	b	11e10 <lista_apaga@@Base+0x30>
   11df8:	ldr	r0, [r5, #4]
   11dfc:	str	r0, [r4]
   11e00:	ldr	r0, [r5]
   11e04:	bl	10ca4 <free@plt>
   11e08:	mov	r0, r5
   11e0c:	bl	10ca4 <free@plt>
   11e10:	ldr	r5, [r4]
   11e14:	cmp	r5, #0
   11e18:	bne	11df8 <lista_apaga@@Base+0x18>
   11e1c:	mov	r0, r4
   11e20:	pop	{r4, r5, fp, lr}
   11e24:	b	10ca4 <free@plt>

00011e28 <lista_tamanho@@Base>:
   11e28:	cmp	r0, #0
   11e2c:	ldrne	r0, [r0, #8]
   11e30:	mvneq	r0, #0
   11e34:	bx	lr

00011e38 <lista_inicio@@Base>:
   11e38:	cmp	r0, #0
   11e3c:	ldrne	r0, [r0]
   11e40:	moveq	r0, #0
   11e44:	bx	lr

00011e48 <lista_fim@@Base>:
   11e48:	cmp	r0, #0
   11e4c:	ldrne	r0, [r0, #4]
   11e50:	moveq	r0, #0
   11e54:	bx	lr

00011e58 <lista_insere@@Base>:
   11e58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11e5c:	add	fp, sp, #24
   11e60:	cmp	r0, #0
   11e64:	mov	r7, #0
   11e68:	movne	r6, r1
   11e6c:	cmpne	r1, #0
   11e70:	bne	11e7c <lista_insere@@Base+0x24>
   11e74:	mov	r0, r7
   11e78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e7c:	mov	r5, r0
   11e80:	mov	r0, #12
   11e84:	mov	r8, r2
   11e88:	bl	10ce0 <malloc@plt>
   11e8c:	cmp	r0, #0
   11e90:	beq	11e74 <lista_insere@@Base+0x1c>
   11e94:	mov	r4, r0
   11e98:	mov	r0, r6
   11e9c:	bl	10d04 <strlen@plt>
   11ea0:	add	r0, r0, #1
   11ea4:	bl	10ce0 <malloc@plt>
   11ea8:	cmp	r0, #0
   11eac:	str	r0, [r4]
   11eb0:	beq	11f00 <lista_insere@@Base+0xa8>
   11eb4:	mov	r1, r6
   11eb8:	bl	10cc8 <strcpy@plt>
   11ebc:	mov	r0, #0
   11ec0:	cmp	r8, #0
   11ec4:	str	r0, [r4, #4]
   11ec8:	str	r0, [r4, #8]
   11ecc:	ldr	r1, [r5, #8]
   11ed0:	ldr	r0, [r5]
   11ed4:	add	r1, r1, #1
   11ed8:	str	r1, [r5, #8]
   11edc:	beq	11f10 <lista_insere@@Base+0xb8>
   11ee0:	cmp	r0, r8
   11ee4:	beq	11f28 <lista_insere@@Base+0xd0>
   11ee8:	ldr	r0, [r8, #8]
   11eec:	str	r8, [r4, #4]
   11ef0:	str	r0, [r4, #8]
   11ef4:	str	r4, [r0, #4]
   11ef8:	str	r4, [r8, #8]
   11efc:	b	11f40 <lista_insere@@Base+0xe8>
   11f00:	mov	r0, r4
   11f04:	bl	10ca4 <free@plt>
   11f08:	mov	r0, r7
   11f0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11f10:	cmp	r0, #0
   11f14:	beq	11f38 <lista_insere@@Base+0xe0>
   11f18:	ldr	r0, [r5, #4]
   11f1c:	str	r0, [r4, #8]
   11f20:	str	r4, [r0, #4]
   11f24:	b	11f3c <lista_insere@@Base+0xe4>
   11f28:	str	r8, [r4, #4]
   11f2c:	str	r4, [r8, #8]
   11f30:	str	r4, [r5]
   11f34:	b	11f40 <lista_insere@@Base+0xe8>
   11f38:	str	r4, [r5]
   11f3c:	str	r4, [r5, #4]
   11f40:	mov	r7, r4
   11f44:	mov	r0, r7
   11f48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011f4c <lista_remove@@Base>:
   11f4c:	push	{r4, r5, fp, lr}
   11f50:	add	fp, sp, #8
   11f54:	cmp	r0, #0
   11f58:	mov	r4, #0
   11f5c:	movne	r5, r1
   11f60:	cmpne	r1, #0
   11f64:	bne	11f70 <lista_remove@@Base+0x24>
   11f68:	mov	r0, r4
   11f6c:	pop	{r4, r5, fp, pc}
   11f70:	ldr	r1, [r0, #8]
   11f74:	sub	r1, r1, #1
   11f78:	str	r1, [r0, #8]
   11f7c:	ldr	r1, [r5, #8]
   11f80:	ldr	r4, [r5, #4]
   11f84:	cmp	r1, #0
   11f88:	streq	r4, [r0]
   11f8c:	strne	r4, [r1, #4]
   11f90:	ldrne	r4, [r5, #4]
   11f94:	add	r2, r4, #8
   11f98:	cmp	r4, #0
   11f9c:	addeq	r2, r0, #4
   11fa0:	str	r1, [r2]
   11fa4:	ldr	r0, [r5]
   11fa8:	bl	10ca4 <free@plt>
   11fac:	mov	r0, r5
   11fb0:	bl	10ca4 <free@plt>
   11fb4:	mov	r0, r4
   11fb8:	pop	{r4, r5, fp, pc}

00011fbc <lista_pesquisa@@Base>:
   11fbc:	push	{r4, r5, r6, sl, fp, lr}
   11fc0:	add	fp, sp, #16
   11fc4:	cmp	r0, #0
   11fc8:	mov	r4, #0
   11fcc:	movne	r5, r1
   11fd0:	cmpne	r1, #0
   11fd4:	bne	11fe0 <lista_pesquisa@@Base+0x24>
   11fd8:	mov	r0, r4
   11fdc:	pop	{r4, r5, r6, sl, fp, pc}
   11fe0:	cmp	r2, #1
   11fe4:	bhi	11fd8 <lista_pesquisa@@Base+0x1c>
   11fe8:	cmp	r2, #0
   11fec:	beq	12024 <lista_pesquisa@@Base+0x68>
   11ff0:	ldr	r6, [r0, #4]
   11ff4:	cmp	r6, #0
   11ff8:	bne	1200c <lista_pesquisa@@Base+0x50>
   11ffc:	b	11fd8 <lista_pesquisa@@Base+0x1c>
   12000:	ldr	r6, [r6, #8]
   12004:	cmp	r6, #0
   12008:	beq	11fd8 <lista_pesquisa@@Base+0x1c>
   1200c:	ldr	r0, [r6]
   12010:	mov	r1, r5
   12014:	bl	10c98 <strcmp@plt>
   12018:	cmp	r0, #0
   1201c:	bne	12000 <lista_pesquisa@@Base+0x44>
   12020:	b	12054 <lista_pesquisa@@Base+0x98>
   12024:	ldr	r6, [r0]
   12028:	cmp	r6, #0
   1202c:	bne	12040 <lista_pesquisa@@Base+0x84>
   12030:	b	11fd8 <lista_pesquisa@@Base+0x1c>
   12034:	ldr	r6, [r6, #4]
   12038:	cmp	r6, #0
   1203c:	beq	11fd8 <lista_pesquisa@@Base+0x1c>
   12040:	ldr	r0, [r6]
   12044:	mov	r1, r5
   12048:	bl	10c98 <strcmp@plt>
   1204c:	cmp	r0, #0
   12050:	bne	12034 <lista_pesquisa@@Base+0x78>
   12054:	mov	r4, r6
   12058:	mov	r0, r4
   1205c:	pop	{r4, r5, r6, sl, fp, pc}

00012060 <lista_ordena@@Base>:
   12060:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12064:	add	fp, sp, #24
   12068:	cmp	r0, #0
   1206c:	beq	120e8 <lista_ordena@@Base+0x88>
   12070:	ldr	r0, [r0]
   12074:	mov	r8, #0
   12078:	mov	r5, r0
   1207c:	ldr	r4, [r5, #4]!
   12080:	cmp	r4, #0
   12084:	bne	120b8 <lista_ordena@@Base+0x58>
   12088:	b	120ec <lista_ordena@@Base+0x8c>
   1208c:	cmp	r7, r9
   12090:	mov	r0, r4
   12094:	ldrne	r0, [r9]
   12098:	ldrne	r1, [r7]
   1209c:	strne	r1, [r9]
   120a0:	strne	r0, [r7]
   120a4:	ldrne	r0, [r5]
   120a8:	mov	r5, r0
   120ac:	ldr	r4, [r5, #4]!
   120b0:	cmp	r4, #0
   120b4:	beq	120ec <lista_ordena@@Base+0x8c>
   120b8:	mov	r9, r0
   120bc:	mov	r7, r0
   120c0:	mov	r6, r4
   120c4:	ldr	r1, [r7]
   120c8:	ldr	r0, [r6]
   120cc:	bl	10c98 <strcmp@plt>
   120d0:	cmp	r0, #0
   120d4:	movlt	r7, r6
   120d8:	ldr	r6, [r6, #4]
   120dc:	cmp	r6, #0
   120e0:	bne	120c4 <lista_ordena@@Base+0x64>
   120e4:	b	1208c <lista_ordena@@Base+0x2c>
   120e8:	mvn	r8, #0
   120ec:	mov	r0, r8
   120f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000120f4 <lista_inverte@@Base>:
   120f4:	cmp	r0, #0
   120f8:	mvneq	r1, #0
   120fc:	moveq	r0, r1
   12100:	bxeq	lr
   12104:	ldr	r2, [r0, #8]
   12108:	mov	r1, #0
   1210c:	cmp	r2, #2
   12110:	blt	1218c <lista_inverte@@Base+0x98>
   12114:	bne	12120 <lista_inverte@@Base+0x2c>
   12118:	ldr	r2, [r0]
   1211c:	b	12168 <lista_inverte@@Base+0x74>
   12120:	push	{fp, lr}
   12124:	mov	fp, sp
   12128:	ldr	ip, [r0]
   1212c:	sub	r1, r2, #2
   12130:	ldr	r3, [ip, #4]
   12134:	mov	r2, r3
   12138:	ldr	r3, [r3, #4]
   1213c:	subs	r1, r1, #1
   12140:	ldr	lr, [r2, #8]
   12144:	str	r3, [lr, #4]
   12148:	ldr	r3, [r2, #4]
   1214c:	str	lr, [r3, #8]
   12150:	str	ip, [r2, #4]
   12154:	str	r2, [ip, #8]
   12158:	mov	ip, r2
   1215c:	bne	12134 <lista_inverte@@Base+0x40>
   12160:	str	r2, [r0]
   12164:	pop	{fp, lr}
   12168:	ldr	r3, [r0, #4]
   1216c:	mov	r1, #0
   12170:	ldr	ip, [r3, #8]
   12174:	str	ip, [r0, #4]
   12178:	str	r1, [ip, #4]
   1217c:	str	r2, [r3, #4]
   12180:	str	r1, [r3, #8]
   12184:	str	r3, [r2, #8]
   12188:	str	r3, [r0]
   1218c:	mov	r0, r1
   12190:	bx	lr

00012194 <__libc_csu_init@@Base>:
   12194:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12198:	mov	r7, r0
   1219c:	ldr	r6, [pc, #72]	; 121ec <__libc_csu_init@@Base+0x58>
   121a0:	ldr	r5, [pc, #72]	; 121f0 <__libc_csu_init@@Base+0x5c>
   121a4:	add	r6, pc, r6
   121a8:	add	r5, pc, r5
   121ac:	sub	r6, r6, r5
   121b0:	mov	r8, r1
   121b4:	mov	r9, r2
   121b8:	bl	10c6c <calloc@plt-0x20>
   121bc:	asrs	r6, r6, #2
   121c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121c4:	mov	r4, #0
   121c8:	add	r4, r4, #1
   121cc:	ldr	r3, [r5], #4
   121d0:	mov	r2, r9
   121d4:	mov	r1, r8
   121d8:	mov	r0, r7
   121dc:	blx	r3
   121e0:	cmp	r6, r4
   121e4:	bne	121c8 <__libc_csu_init@@Base+0x34>
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121ec:	andeq	r0, r1, r0, ror #26
   121f0:	andeq	r0, r1, r8, asr sp

000121f4 <__libc_csu_fini@@Base>:
   121f4:	bx	lr

Disassembly of section .fini:

000121f8 <.fini>:
   121f8:	push	{r3, lr}
   121fc:	pop	{r3, pc}
