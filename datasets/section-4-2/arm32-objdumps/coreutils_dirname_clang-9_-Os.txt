
../repos/coreutils/src/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010c54 <.init>:
   10c54:	push	{r3, lr}
   10c58:	bl	10ec0 <putchar_unlocked@plt+0x48>
   10c5c:	pop	{r3, pc}

Disassembly of section .plt:

00010c60 <calloc@plt-0x14>:
   10c60:	push	{lr}		; (str lr, [sp, #-4]!)
   10c64:	ldr	lr, [pc, #4]	; 10c70 <calloc@plt-0x4>
   10c68:	add	lr, pc, lr
   10c6c:	ldr	pc, [lr, #8]!
   10c70:	muleq	r1, r0, r3

00010c74 <calloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #912]!	; 0x390

00010c80 <fputs_unlocked@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #904]!	; 0x388

00010c8c <strcmp@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #896]!	; 0x380

00010c98 <fflush@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #888]!	; 0x378

00010ca4 <free@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #880]!	; 0x370

00010cb0 <_exit@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #872]!	; 0x368

00010cbc <memcpy@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #864]!	; 0x360

00010cc8 <mbsinit@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #856]!	; 0x358

00010cd4 <fwrite_unlocked@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #848]!	; 0x350

00010ce0 <dcgettext@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #840]!	; 0x348

00010cec <realloc@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #832]!	; 0x340

00010cf8 <textdomain@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #824]!	; 0x338

00010d04 <iswprint@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #816]!	; 0x330

00010d10 <lseek64@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #808]!	; 0x328

00010d1c <__ctype_get_mb_cur_max@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #800]!	; 0x320

00010d28 <__fpending@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #792]!	; 0x318

00010d34 <ferror_unlocked@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #784]!	; 0x310

00010d40 <mbrtowc@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #776]!	; 0x308

00010d4c <error@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #768]!	; 0x300

00010d58 <malloc@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #760]!	; 0x2f8

00010d64 <__libc_start_main@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d70 <__freading@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #744]!	; 0x2e8

00010d7c <__gmon_start__@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #736]!	; 0x2e0

00010d88 <getopt_long@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #728]!	; 0x2d8

00010d94 <__ctype_b_loc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00010da0 <exit@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dac <bcmp@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #704]!	; 0x2c0

00010db8 <strlen@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc4 <__errno_location@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd0 <__cxa_atexit@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00010ddc <memset@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #672]!	; 0x2a0

00010de8 <__printf_chk@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #664]!	; 0x298

00010df4 <fileno@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #656]!	; 0x290

00010e00 <__fprintf_chk@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #648]!	; 0x288

00010e0c <fclose@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #640]!	; 0x280

00010e18 <fseeko64@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #632]!	; 0x278

00010e24 <setlocale@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #624]!	; 0x270

00010e30 <strrchr@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #616]!	; 0x268

00010e3c <nl_langinfo@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #608]!	; 0x260

00010e48 <bindtextdomain@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #600]!	; 0x258

00010e54 <fputs@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #592]!	; 0x250

00010e60 <strncmp@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #584]!	; 0x248

00010e6c <abort@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #576]!	; 0x240

00010e78 <putchar_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #20, 20	; 0x14000
   10e80:	ldr	pc, [ip, #568]!	; 0x238

Disassembly of section .text:

00010e84 <.text>:
   10e84:	mov	fp, #0
   10e88:	mov	lr, #0
   10e8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10e90:	mov	r2, sp
   10e94:	push	{r2}		; (str r2, [sp, #-4]!)
   10e98:	push	{r0}		; (str r0, [sp, #-4]!)
   10e9c:	ldr	ip, [pc, #16]	; 10eb4 <putchar_unlocked@plt+0x3c>
   10ea0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ea4:	ldr	r0, [pc, #12]	; 10eb8 <putchar_unlocked@plt+0x40>
   10ea8:	ldr	r3, [pc, #12]	; 10ebc <putchar_unlocked@plt+0x44>
   10eac:	bl	10d64 <__libc_start_main@plt>
   10eb0:	bl	10e6c <abort@plt>
   10eb4:	andeq	r3, r1, r0, lsl #31
   10eb8:	andeq	r1, r1, r0, ror #3
   10ebc:	andeq	r3, r1, r0, lsr #30
   10ec0:	ldr	r3, [pc, #20]	; 10edc <putchar_unlocked@plt+0x64>
   10ec4:	ldr	r2, [pc, #20]	; 10ee0 <putchar_unlocked@plt+0x68>
   10ec8:	add	r3, pc, r3
   10ecc:	ldr	r2, [r3, r2]
   10ed0:	cmp	r2, #0
   10ed4:	bxeq	lr
   10ed8:	b	10d7c <__gmon_start__@plt>
   10edc:	andeq	r4, r1, r0, lsr r1
   10ee0:	strheq	r0, [r0], -ip
   10ee4:	ldr	r0, [pc, #24]	; 10f04 <putchar_unlocked@plt+0x8c>
   10ee8:	ldr	r3, [pc, #24]	; 10f08 <putchar_unlocked@plt+0x90>
   10eec:	cmp	r3, r0
   10ef0:	bxeq	lr
   10ef4:	ldr	r3, [pc, #16]	; 10f0c <putchar_unlocked@plt+0x94>
   10ef8:	cmp	r3, #0
   10efc:	bxeq	lr
   10f00:	bx	r3
   10f04:	andeq	r5, r2, r0, lsl r1
   10f08:	andeq	r5, r2, r0, lsl r1
   10f0c:	andeq	r0, r0, r0
   10f10:	ldr	r0, [pc, #36]	; 10f3c <putchar_unlocked@plt+0xc4>
   10f14:	ldr	r1, [pc, #36]	; 10f40 <putchar_unlocked@plt+0xc8>
   10f18:	sub	r1, r1, r0
   10f1c:	asr	r1, r1, #2
   10f20:	add	r1, r1, r1, lsr #31
   10f24:	asrs	r1, r1, #1
   10f28:	bxeq	lr
   10f2c:	ldr	r3, [pc, #16]	; 10f44 <putchar_unlocked@plt+0xcc>
   10f30:	cmp	r3, #0
   10f34:	bxeq	lr
   10f38:	bx	r3
   10f3c:	andeq	r5, r2, r0, lsl r1
   10f40:	andeq	r5, r2, r0, lsl r1
   10f44:	andeq	r0, r0, r0
   10f48:	push	{r4, lr}
   10f4c:	ldr	r4, [pc, #24]	; 10f6c <putchar_unlocked@plt+0xf4>
   10f50:	ldrb	r3, [r4]
   10f54:	cmp	r3, #0
   10f58:	popne	{r4, pc}
   10f5c:	bl	10ee4 <putchar_unlocked@plt+0x6c>
   10f60:	mov	r3, #1
   10f64:	strb	r3, [r4]
   10f68:	pop	{r4, pc}
   10f6c:	andeq	r5, r2, r8, lsr #2
   10f70:	b	10f10 <putchar_unlocked@plt+0x98>
   10f74:	push	{fp, lr}
   10f78:	mov	fp, sp
   10f7c:	sub	sp, sp, #64	; 0x40
   10f80:	mov	r8, r0
   10f84:	cmp	r0, #0
   10f88:	bne	111a0 <putchar_unlocked@plt+0x328>
   10f8c:	movw	r1, #16339	; 0x3fd3
   10f90:	mov	r0, #0
   10f94:	mov	r2, #5
   10f98:	movt	r1, #1
   10f9c:	bl	10ce0 <dcgettext@plt>
   10fa0:	movw	r5, #20788	; 0x5134
   10fa4:	mov	r1, r0
   10fa8:	mov	r0, #1
   10fac:	movt	r5, #2
   10fb0:	ldr	r2, [r5]
   10fb4:	bl	10de8 <__printf_chk@plt>
   10fb8:	movw	r1, #16367	; 0x3fef
   10fbc:	mov	r0, #0
   10fc0:	mov	r2, #5
   10fc4:	movt	r1, #1
   10fc8:	bl	10ce0 <dcgettext@plt>
   10fcc:	movw	r9, #20772	; 0x5124
   10fd0:	movt	r9, #2
   10fd4:	ldr	r1, [r9]
   10fd8:	bl	10c80 <fputs_unlocked@plt>
   10fdc:	movw	r1, #16519	; 0x4087
   10fe0:	mov	r0, #0
   10fe4:	mov	r2, #5
   10fe8:	movt	r1, #1
   10fec:	bl	10ce0 <dcgettext@plt>
   10ff0:	ldr	r1, [r9]
   10ff4:	bl	10c80 <fputs_unlocked@plt>
   10ff8:	movw	r1, #16580	; 0x40c4
   10ffc:	mov	r0, #0
   11000:	mov	r2, #5
   11004:	movt	r1, #1
   11008:	bl	10ce0 <dcgettext@plt>
   1100c:	ldr	r1, [r9]
   11010:	bl	10c80 <fputs_unlocked@plt>
   11014:	movw	r1, #16625	; 0x40f1
   11018:	mov	r0, #0
   1101c:	mov	r2, #5
   11020:	movt	r1, #1
   11024:	bl	10ce0 <dcgettext@plt>
   11028:	ldr	r1, [r9]
   1102c:	bl	10c80 <fputs_unlocked@plt>
   11030:	movw	r1, #16679	; 0x4127
   11034:	mov	r0, #0
   11038:	mov	r2, #5
   1103c:	movt	r1, #1
   11040:	bl	10ce0 <dcgettext@plt>
   11044:	ldr	r2, [r5]
   11048:	mov	r1, r0
   1104c:	mov	r0, #1
   11050:	mov	r3, r2
   11054:	str	r2, [sp]
   11058:	bl	10de8 <__printf_chk@plt>
   1105c:	movw	r0, #17304	; 0x4398
   11060:	add	r6, sp, #8
   11064:	movt	r0, #1
   11068:	mov	r1, r6
   1106c:	ldm	r0!, {r2, r3, r4, r5}
   11070:	stmia	r1!, {r2, r3, r4, r5}
   11074:	ldm	r0!, {r2, r3, r4, r5, r7}
   11078:	stmia	r1!, {r2, r3, r4, r5, r7}
   1107c:	ldm	r0, {r2, r3, r4, r5, r7}
   11080:	stm	r1, {r2, r3, r4, r5, r7}
   11084:	movw	r1, #16902	; 0x4206
   11088:	movw	r5, #16809	; 0x41a9
   1108c:	movt	r1, #1
   11090:	movt	r5, #1
   11094:	mov	r0, r5
   11098:	bl	10c8c <strcmp@plt>
   1109c:	cmp	r0, #0
   110a0:	ldrne	r1, [r6, #8]!
   110a4:	cmpne	r1, #0
   110a8:	bne	11094 <putchar_unlocked@plt+0x21c>
   110ac:	movw	r1, #16997	; 0x4265
   110b0:	ldr	r6, [r6, #4]
   110b4:	mov	r0, #0
   110b8:	mov	r2, #5
   110bc:	movt	r1, #1
   110c0:	bl	10ce0 <dcgettext@plt>
   110c4:	movw	r2, #16843	; 0x41cb
   110c8:	movw	r3, #17020	; 0x427c
   110cc:	mov	r1, r0
   110d0:	mov	r0, #1
   110d4:	movt	r2, #1
   110d8:	movt	r3, #1
   110dc:	bl	10de8 <__printf_chk@plt>
   110e0:	cmp	r6, #0
   110e4:	mov	r0, #5
   110e8:	mov	r1, #0
   110ec:	moveq	r6, r5
   110f0:	bl	10e24 <setlocale@plt>
   110f4:	cmp	r0, #0
   110f8:	beq	11130 <putchar_unlocked@plt+0x2b8>
   110fc:	movw	r1, #17060	; 0x42a4
   11100:	mov	r2, #3
   11104:	movt	r1, #1
   11108:	bl	10e60 <strncmp@plt>
   1110c:	cmp	r0, #0
   11110:	beq	11130 <putchar_unlocked@plt+0x2b8>
   11114:	movw	r1, #17064	; 0x42a8
   11118:	mov	r0, #0
   1111c:	mov	r2, #5
   11120:	movt	r1, #1
   11124:	bl	10ce0 <dcgettext@plt>
   11128:	ldr	r1, [r9]
   1112c:	bl	10c80 <fputs_unlocked@plt>
   11130:	movw	r1, #17135	; 0x42ef
   11134:	mov	r0, #0
   11138:	mov	r2, #5
   1113c:	movt	r1, #1
   11140:	bl	10ce0 <dcgettext@plt>
   11144:	movw	r2, #17020	; 0x427c
   11148:	mov	r1, r0
   1114c:	mov	r0, #1
   11150:	mov	r3, r5
   11154:	movt	r2, #1
   11158:	bl	10de8 <__printf_chk@plt>
   1115c:	movw	r1, #17162	; 0x430a
   11160:	mov	r0, #0
   11164:	mov	r2, #5
   11168:	movt	r1, #1
   1116c:	bl	10ce0 <dcgettext@plt>
   11170:	mov	r1, r0
   11174:	movw	r0, #16930	; 0x4222
   11178:	movw	r3, #16518	; 0x4086
   1117c:	cmp	r6, r5
   11180:	mov	r2, r6
   11184:	movt	r0, #1
   11188:	movt	r3, #1
   1118c:	moveq	r3, r0
   11190:	mov	r0, #1
   11194:	bl	10de8 <__printf_chk@plt>
   11198:	mov	r0, r8
   1119c:	bl	10da0 <exit@plt>
   111a0:	movw	r0, #20768	; 0x5120
   111a4:	movw	r1, #16300	; 0x3fac
   111a8:	mov	r2, #5
   111ac:	movt	r0, #2
   111b0:	movt	r1, #1
   111b4:	ldr	r5, [r0]
   111b8:	mov	r0, #0
   111bc:	bl	10ce0 <dcgettext@plt>
   111c0:	mov	r2, r0
   111c4:	movw	r0, #20788	; 0x5134
   111c8:	mov	r1, #1
   111cc:	movt	r0, #2
   111d0:	ldr	r3, [r0]
   111d4:	mov	r0, r5
   111d8:	bl	10e00 <__fprintf_chk@plt>
   111dc:	b	11198 <putchar_unlocked@plt+0x320>
   111e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111e4:	add	fp, sp, #28
   111e8:	sub	sp, sp, #12
   111ec:	mov	r5, r0
   111f0:	ldr	r0, [r1]
   111f4:	mov	r9, r1
   111f8:	bl	11548 <putchar_unlocked@plt+0x6d0>
   111fc:	movw	r1, #16518	; 0x4086
   11200:	mov	r0, #6
   11204:	movt	r1, #1
   11208:	bl	10e24 <setlocale@plt>
   1120c:	movw	r6, #16847	; 0x41cf
   11210:	movw	r1, #16817	; 0x41b1
   11214:	movt	r6, #1
   11218:	movt	r1, #1
   1121c:	mov	r0, r6
   11220:	bl	10e48 <bindtextdomain@plt>
   11224:	mov	r0, r6
   11228:	bl	10cf8 <textdomain@plt>
   1122c:	movw	r0, #5048	; 0x13b8
   11230:	movt	r0, #1
   11234:	bl	13f84 <putchar_unlocked@plt+0x310c>
   11238:	movw	r8, #16841	; 0x41c9
   1123c:	movw	r7, #17236	; 0x4354
   11240:	mov	r6, #10
   11244:	movt	r8, #1
   11248:	movt	r7, #1
   1124c:	mov	r0, #0
   11250:	mov	r1, r9
   11254:	mov	r2, r8
   11258:	mov	r3, r7
   1125c:	str	r0, [sp]
   11260:	mov	r0, r5
   11264:	bl	10d88 <getopt_long@plt>
   11268:	cmp	r0, #121	; 0x79
   1126c:	ble	11280 <putchar_unlocked@plt+0x408>
   11270:	cmp	r0, #122	; 0x7a
   11274:	mov	r6, #0
   11278:	beq	1124c <putchar_unlocked@plt+0x3d4>
   1127c:	b	11390 <putchar_unlocked@plt+0x518>
   11280:	cmn	r0, #1
   11284:	bne	11300 <putchar_unlocked@plt+0x488>
   11288:	movw	r4, #20760	; 0x5118
   1128c:	movt	r4, #2
   11290:	ldr	r0, [r4]
   11294:	cmp	r0, r5
   11298:	bge	1136c <putchar_unlocked@plt+0x4f4>
   1129c:	movw	r8, #17232	; 0x4350
   112a0:	movw	sl, #20772	; 0x5124
   112a4:	movt	r8, #1
   112a8:	movt	sl, #2
   112ac:	ldr	r7, [r9, r0, lsl #2]
   112b0:	mov	r0, r7
   112b4:	bl	114a0 <putchar_unlocked@plt+0x628>
   112b8:	ldr	r3, [sl]
   112bc:	cmp	r0, #0
   112c0:	mov	r2, r0
   112c4:	mov	r1, #1
   112c8:	moveq	r7, r8
   112cc:	movweq	r2, #1
   112d0:	mov	r0, r7
   112d4:	bl	10cd4 <fwrite_unlocked@plt>
   112d8:	mov	r0, r6
   112dc:	bl	10e78 <putchar_unlocked@plt>
   112e0:	ldr	r0, [r4]
   112e4:	add	r0, r0, #1
   112e8:	cmp	r0, r5
   112ec:	str	r0, [r4]
   112f0:	blt	112ac <putchar_unlocked@plt+0x434>
   112f4:	mov	r0, #0
   112f8:	sub	sp, fp, #28
   112fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11300:	cmn	r0, #3
   11304:	bne	1135c <putchar_unlocked@plt+0x4e4>
   11308:	movw	r0, #20680	; 0x50c8
   1130c:	movw	r2, #16873	; 0x41e9
   11310:	mov	r1, #0
   11314:	movw	r7, #16857	; 0x41d9
   11318:	movt	r0, #2
   1131c:	movt	r2, #1
   11320:	str	r1, [sp, #8]
   11324:	movw	r1, #16809	; 0x41a9
   11328:	movt	r7, #1
   1132c:	movt	r1, #1
   11330:	ldr	r3, [r0]
   11334:	movw	r0, #20772	; 0x5124
   11338:	str	r2, [sp, #4]
   1133c:	movw	r2, #16843	; 0x41cb
   11340:	str	r7, [sp]
   11344:	movt	r0, #2
   11348:	movt	r2, #1
   1134c:	ldr	r0, [r0]
   11350:	bl	13438 <putchar_unlocked@plt+0x25c0>
   11354:	mov	r0, #0
   11358:	bl	10da0 <exit@plt>
   1135c:	cmn	r0, #2
   11360:	bne	11390 <putchar_unlocked@plt+0x518>
   11364:	mov	r0, #0
   11368:	bl	10f74 <putchar_unlocked@plt+0xfc>
   1136c:	movw	r1, #16886	; 0x41f6
   11370:	mov	r0, #0
   11374:	mov	r2, #5
   11378:	movt	r1, #1
   1137c:	bl	10ce0 <dcgettext@plt>
   11380:	mov	r2, r0
   11384:	mov	r0, #0
   11388:	mov	r1, #0
   1138c:	bl	10d4c <error@plt>
   11390:	mov	r0, #1
   11394:	bl	10f74 <putchar_unlocked@plt+0xfc>
   11398:	movw	r1, #20780	; 0x512c
   1139c:	movt	r1, #2
   113a0:	str	r0, [r1]
   113a4:	bx	lr
   113a8:	movw	r1, #20784	; 0x5130
   113ac:	movt	r1, #2
   113b0:	strb	r0, [r1]
   113b4:	bx	lr
   113b8:	push	{r4, r5, r6, sl, fp, lr}
   113bc:	add	fp, sp, #16
   113c0:	sub	sp, sp, #8
   113c4:	movw	r0, #20772	; 0x5124
   113c8:	movt	r0, #2
   113cc:	ldr	r0, [r0]
   113d0:	bl	13b04 <putchar_unlocked@plt+0x2c8c>
   113d4:	cmp	r0, #0
   113d8:	beq	11400 <putchar_unlocked@plt+0x588>
   113dc:	movw	r0, #20784	; 0x5130
   113e0:	movt	r0, #2
   113e4:	ldrb	r0, [r0]
   113e8:	cmp	r0, #0
   113ec:	beq	11420 <putchar_unlocked@plt+0x5a8>
   113f0:	bl	10dc4 <__errno_location@plt>
   113f4:	ldr	r0, [r0]
   113f8:	cmp	r0, #32
   113fc:	bne	11420 <putchar_unlocked@plt+0x5a8>
   11400:	movw	r0, #20768	; 0x5120
   11404:	movt	r0, #2
   11408:	ldr	r0, [r0]
   1140c:	bl	13b04 <putchar_unlocked@plt+0x2c8c>
   11410:	cmp	r0, #0
   11414:	subeq	sp, fp, #16
   11418:	popeq	{r4, r5, r6, sl, fp, pc}
   1141c:	b	11490 <putchar_unlocked@plt+0x618>
   11420:	movw	r1, #17375	; 0x43df
   11424:	mov	r0, #0
   11428:	mov	r2, #5
   1142c:	movt	r1, #1
   11430:	bl	10ce0 <dcgettext@plt>
   11434:	mov	r4, r0
   11438:	movw	r0, #20780	; 0x512c
   1143c:	movt	r0, #2
   11440:	ldr	r6, [r0]
   11444:	bl	10dc4 <__errno_location@plt>
   11448:	ldr	r5, [r0]
   1144c:	cmp	r6, #0
   11450:	bne	1146c <putchar_unlocked@plt+0x5f4>
   11454:	movw	r2, #17391	; 0x43ef
   11458:	mov	r0, #0
   1145c:	mov	r1, r5
   11460:	mov	r3, r4
   11464:	movt	r2, #1
   11468:	b	1148c <putchar_unlocked@plt+0x614>
   1146c:	mov	r0, r6
   11470:	bl	12cf4 <putchar_unlocked@plt+0x1e7c>
   11474:	movw	r2, #17387	; 0x43eb
   11478:	mov	r3, r0
   1147c:	str	r4, [sp]
   11480:	mov	r0, #0
   11484:	mov	r1, r5
   11488:	movt	r2, #1
   1148c:	bl	10d4c <error@plt>
   11490:	movw	r0, #20684	; 0x50cc
   11494:	movt	r0, #2
   11498:	ldr	r0, [r0]
   1149c:	bl	10cb0 <_exit@plt>
   114a0:	push	{r4, r5, r6, sl, fp, lr}
   114a4:	add	fp, sp, #16
   114a8:	mov	r5, r0
   114ac:	mov	r4, r0
   114b0:	ldrb	r6, [r5], #-1
   114b4:	bl	13a84 <putchar_unlocked@plt+0x2c0c>
   114b8:	sub	r2, r0, r4
   114bc:	sub	r0, r6, #47	; 0x2f
   114c0:	clz	r0, r0
   114c4:	lsr	r1, r0, #5
   114c8:	mov	r0, r2
   114cc:	cmp	r2, r1
   114d0:	bls	114e4 <putchar_unlocked@plt+0x66c>
   114d4:	ldrb	r3, [r5, r0]
   114d8:	sub	r2, r0, #1
   114dc:	cmp	r3, #47	; 0x2f
   114e0:	beq	114c8 <putchar_unlocked@plt+0x650>
   114e4:	pop	{r4, r5, r6, sl, fp, pc}
   114e8:	push	{r4, r5, r6, sl, fp, lr}
   114ec:	add	fp, sp, #16
   114f0:	mov	r6, r0
   114f4:	bl	114a0 <putchar_unlocked@plt+0x628>
   114f8:	cmp	r0, #0
   114fc:	mov	r4, r0
   11500:	addeq	r0, r0, #1
   11504:	add	r0, r0, #1
   11508:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   1150c:	mov	r5, r0
   11510:	cmp	r0, #0
   11514:	beq	11540 <putchar_unlocked@plt+0x6c8>
   11518:	mov	r0, r5
   1151c:	mov	r1, r6
   11520:	mov	r2, r4
   11524:	bl	10cbc <memcpy@plt>
   11528:	cmp	r4, #0
   1152c:	moveq	r0, #46	; 0x2e
   11530:	moveq	r4, #1
   11534:	strbeq	r0, [r5]
   11538:	mov	r0, #0
   1153c:	strb	r0, [r5, r4]
   11540:	mov	r0, r5
   11544:	pop	{r4, r5, r6, sl, fp, pc}
   11548:	push	{r4, r5, fp, lr}
   1154c:	add	fp, sp, #8
   11550:	cmp	r0, #0
   11554:	beq	115e8 <putchar_unlocked@plt+0x770>
   11558:	mov	r1, #47	; 0x2f
   1155c:	mov	r4, r0
   11560:	bl	10e30 <strrchr@plt>
   11564:	cmp	r0, #0
   11568:	mov	r5, r4
   1156c:	addne	r5, r0, #1
   11570:	sub	r0, r5, r4
   11574:	cmp	r0, #7
   11578:	blt	115cc <putchar_unlocked@plt+0x754>
   1157c:	movw	r1, #17450	; 0x442a
   11580:	sub	r0, r5, #7
   11584:	mov	r2, #7
   11588:	movt	r1, #1
   1158c:	bl	10e60 <strncmp@plt>
   11590:	cmp	r0, #0
   11594:	bne	115cc <putchar_unlocked@plt+0x754>
   11598:	movw	r1, #17458	; 0x4432
   1159c:	mov	r0, r5
   115a0:	mov	r2, #3
   115a4:	movt	r1, #1
   115a8:	bl	10e60 <strncmp@plt>
   115ac:	cmp	r0, #0
   115b0:	beq	115bc <putchar_unlocked@plt+0x744>
   115b4:	mov	r4, r5
   115b8:	b	115cc <putchar_unlocked@plt+0x754>
   115bc:	movw	r0, #20752	; 0x5110
   115c0:	add	r4, r5, #3
   115c4:	movt	r0, #2
   115c8:	str	r4, [r0]
   115cc:	movw	r0, #20756	; 0x5114
   115d0:	movt	r0, #2
   115d4:	str	r4, [r0]
   115d8:	movw	r0, #20788	; 0x5134
   115dc:	movt	r0, #2
   115e0:	str	r4, [r0]
   115e4:	pop	{r4, r5, fp, pc}
   115e8:	movw	r0, #20768	; 0x5120
   115ec:	movt	r0, #2
   115f0:	ldr	r1, [r0]
   115f4:	movw	r0, #17394	; 0x43f2
   115f8:	movt	r0, #1
   115fc:	bl	10e54 <fputs@plt>
   11600:	bl	10e6c <abort@plt>
   11604:	push	{r4, r5, r6, sl, fp, lr}
   11608:	add	fp, sp, #16
   1160c:	mov	r4, r0
   11610:	movw	r0, #20792	; 0x5138
   11614:	movt	r0, #2
   11618:	cmp	r4, #0
   1161c:	moveq	r4, r0
   11620:	bl	10dc4 <__errno_location@plt>
   11624:	ldr	r6, [r0]
   11628:	mov	r5, r0
   1162c:	mov	r0, r4
   11630:	mov	r1, #48	; 0x30
   11634:	bl	13890 <putchar_unlocked@plt+0x2a18>
   11638:	str	r6, [r5]
   1163c:	pop	{r4, r5, r6, sl, fp, pc}
   11640:	movw	r1, #20792	; 0x5138
   11644:	cmp	r0, #0
   11648:	movt	r1, #2
   1164c:	movne	r1, r0
   11650:	ldr	r0, [r1]
   11654:	bx	lr
   11658:	movw	r2, #20792	; 0x5138
   1165c:	cmp	r0, #0
   11660:	movt	r2, #2
   11664:	movne	r2, r0
   11668:	str	r1, [r2]
   1166c:	bx	lr
   11670:	movw	r3, #20792	; 0x5138
   11674:	cmp	r0, #0
   11678:	and	r2, r2, #1
   1167c:	movt	r3, #2
   11680:	movne	r3, r0
   11684:	ubfx	r0, r1, #5, #3
   11688:	and	r1, r1, #31
   1168c:	add	ip, r3, r0, lsl #2
   11690:	mov	r0, #1
   11694:	ldr	r3, [ip, #8]
   11698:	and	r0, r0, r3, lsr r1
   1169c:	eor	r2, r0, r2
   116a0:	eor	r1, r3, r2, lsl r1
   116a4:	str	r1, [ip, #8]
   116a8:	bx	lr
   116ac:	movw	r2, #20792	; 0x5138
   116b0:	cmp	r0, #0
   116b4:	movt	r2, #2
   116b8:	movne	r2, r0
   116bc:	ldr	r0, [r2, #4]
   116c0:	str	r1, [r2, #4]
   116c4:	bx	lr
   116c8:	push	{fp, lr}
   116cc:	mov	fp, sp
   116d0:	movw	r3, #20792	; 0x5138
   116d4:	cmp	r0, #0
   116d8:	movt	r3, #2
   116dc:	movne	r3, r0
   116e0:	cmp	r1, #0
   116e4:	mov	r0, #10
   116e8:	cmpne	r2, #0
   116ec:	str	r0, [r3]
   116f0:	bne	116f8 <putchar_unlocked@plt+0x880>
   116f4:	bl	10e6c <abort@plt>
   116f8:	str	r1, [r3, #40]	; 0x28
   116fc:	str	r2, [r3, #44]	; 0x2c
   11700:	pop	{fp, pc}
   11704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11708:	add	fp, sp, #28
   1170c:	sub	sp, sp, #20
   11710:	mov	r7, r0
   11714:	ldr	r0, [fp, #8]
   11718:	movw	r5, #20792	; 0x5138
   1171c:	mov	r8, r3
   11720:	mov	r9, r2
   11724:	mov	sl, r1
   11728:	movt	r5, #2
   1172c:	cmp	r0, #0
   11730:	movne	r5, r0
   11734:	bl	10dc4 <__errno_location@plt>
   11738:	ldr	r2, [r5, #40]	; 0x28
   1173c:	ldr	r3, [r5, #44]	; 0x2c
   11740:	mov	r4, r0
   11744:	ldm	r5, {r0, r1}
   11748:	add	r5, r5, #8
   1174c:	ldr	r6, [r4]
   11750:	stm	sp, {r0, r1, r5}
   11754:	mov	r0, r7
   11758:	mov	r1, sl
   1175c:	str	r2, [sp, #12]
   11760:	str	r3, [sp, #16]
   11764:	mov	r2, r9
   11768:	mov	r3, r8
   1176c:	bl	1177c <putchar_unlocked@plt+0x904>
   11770:	str	r6, [r4]
   11774:	sub	sp, fp, #28
   11778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1177c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11780:	add	fp, sp, #28
   11784:	sub	sp, sp, #156	; 0x9c
   11788:	mov	r5, r0
   1178c:	add	r0, r2, #1
   11790:	mov	r6, r1
   11794:	mov	sl, r3
   11798:	str	r2, [fp, #-80]	; 0xffffffb0
   1179c:	str	r0, [sp, #72]	; 0x48
   117a0:	ldr	r0, [fp, #12]
   117a4:	and	r1, r0, #1
   117a8:	str	r1, [sp, #32]
   117ac:	and	r1, r0, #4
   117b0:	str	r1, [sp, #28]
   117b4:	ubfx	r9, r0, #1, #1
   117b8:	bl	10d1c <__ctype_get_mb_cur_max@plt>
   117bc:	str	r0, [sp, #40]	; 0x28
   117c0:	ldr	r0, [fp, #24]
   117c4:	ldr	r7, [fp, #8]
   117c8:	mov	r1, #0
   117cc:	mov	lr, #0
   117d0:	str	r5, [fp, #-84]	; 0xffffffac
   117d4:	str	r1, [sp, #60]	; 0x3c
   117d8:	mov	r1, #1
   117dc:	str	r1, [fp, #-48]	; 0xffffffd0
   117e0:	str	r0, [sp, #80]	; 0x50
   117e4:	ldr	r0, [fp, #20]
   117e8:	str	r0, [sp, #76]	; 0x4c
   117ec:	mov	r0, #0
   117f0:	str	r0, [sp, #56]	; 0x38
   117f4:	mov	r0, #0
   117f8:	str	r0, [fp, #-88]	; 0xffffffa8
   117fc:	mov	r0, #0
   11800:	str	r0, [fp, #-72]	; 0xffffffb8
   11804:	mov	r0, #0
   11808:	cmp	r7, #10
   1180c:	bhi	127e8 <putchar_unlocked@plt+0x1970>
   11810:	add	r1, pc, #24
   11814:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11818:	mov	ip, r6
   1181c:	mov	r8, #0
   11820:	mov	r2, #1
   11824:	mov	r6, #0
   11828:	mov	r3, sl
   1182c:	ldr	pc, [r1, r7, lsl #2]
   11830:	andeq	r1, r1, ip, lsl r9
   11834:	andeq	r1, r1, r0, ror r9
   11838:	andeq	r1, r1, r0, lsr r9
   1183c:	andeq	r1, r1, r4, lsl r9
   11840:	andeq	r1, r1, r4, ror #18
   11844:	muleq	r1, r8, r9
   11848:	andeq	r1, r1, r0, asr #18
   1184c:	andeq	r1, r1, ip, lsl sl
   11850:	andeq	r1, r1, ip, asr r8
   11854:	andeq	r1, r1, ip, asr r8
   11858:	muleq	r1, ip, r8
   1185c:	movw	r0, #17542	; 0x4486
   11860:	mov	r1, r7
   11864:	mov	r6, r5
   11868:	mov	r4, ip
   1186c:	mov	r5, lr
   11870:	movt	r0, #1
   11874:	bl	12f4c <putchar_unlocked@plt+0x20d4>
   11878:	str	r0, [sp, #76]	; 0x4c
   1187c:	movw	r0, #17544	; 0x4488
   11880:	mov	r1, r7
   11884:	movt	r0, #1
   11888:	bl	12f4c <putchar_unlocked@plt+0x20d4>
   1188c:	mov	lr, r5
   11890:	mov	r5, r6
   11894:	mov	ip, r4
   11898:	str	r0, [sp, #80]	; 0x50
   1189c:	mov	r8, #0
   118a0:	tst	r9, #1
   118a4:	str	lr, [sp, #44]	; 0x2c
   118a8:	bne	118e0 <putchar_unlocked@plt+0xa68>
   118ac:	ldr	r0, [sp, #76]	; 0x4c
   118b0:	ldrb	r0, [r0]
   118b4:	cmp	r0, #0
   118b8:	beq	118e0 <putchar_unlocked@plt+0xa68>
   118bc:	ldr	r1, [sp, #76]	; 0x4c
   118c0:	mov	r8, #0
   118c4:	add	r1, r1, #1
   118c8:	cmp	r8, ip
   118cc:	strbcc	r0, [r5, r8]
   118d0:	ldrb	r0, [r1, r8]
   118d4:	add	r8, r8, #1
   118d8:	cmp	r0, #0
   118dc:	bne	118c8 <putchar_unlocked@plt+0xa50>
   118e0:	ldr	r6, [sp, #80]	; 0x50
   118e4:	mov	r4, ip
   118e8:	mov	r0, r6
   118ec:	bl	10db8 <strlen@plt>
   118f0:	mov	ip, r4
   118f4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   118f8:	ldr	lr, [sp, #44]	; 0x2c
   118fc:	str	r6, [fp, #-88]	; 0xffffffa8
   11900:	str	r0, [fp, #-72]	; 0xffffffb8
   11904:	mov	r2, #1
   11908:	mov	r6, r9
   1190c:	mov	r3, sl
   11910:	b	11a1c <putchar_unlocked@plt+0xba4>
   11914:	mov	r0, #1
   11918:	b	11970 <putchar_unlocked@plt+0xaf8>
   1191c:	mov	r7, #0
   11920:	mov	r8, #0
   11924:	mov	r2, r0
   11928:	mov	r6, #0
   1192c:	b	11a1c <putchar_unlocked@plt+0xba4>
   11930:	tst	r9, #1
   11934:	bne	11970 <putchar_unlocked@plt+0xaf8>
   11938:	mov	r2, r0
   1193c:	b	119c8 <putchar_unlocked@plt+0xb50>
   11940:	mov	r0, #1
   11944:	mov	r8, #0
   11948:	mov	r7, #5
   1194c:	mov	r2, #1
   11950:	str	r0, [fp, #-72]	; 0xffffffb8
   11954:	movw	r0, #17540	; 0x4484
   11958:	movt	r0, #1
   1195c:	str	r0, [fp, #-88]	; 0xffffffa8
   11960:	b	11990 <putchar_unlocked@plt+0xb18>
   11964:	mov	r2, #1
   11968:	tst	r9, #1
   1196c:	beq	119c8 <putchar_unlocked@plt+0xb50>
   11970:	mov	r1, #1
   11974:	mov	r8, #0
   11978:	mov	r7, #2
   1197c:	mov	r2, r0
   11980:	str	r1, [fp, #-72]	; 0xffffffb8
   11984:	movw	r1, #17544	; 0x4488
   11988:	movt	r1, #1
   1198c:	str	r1, [fp, #-88]	; 0xffffffa8
   11990:	mov	r6, #1
   11994:	b	11a1c <putchar_unlocked@plt+0xba4>
   11998:	tst	r9, #1
   1199c:	beq	119ec <putchar_unlocked@plt+0xb74>
   119a0:	mov	r0, #1
   119a4:	mov	r8, #0
   119a8:	mov	r2, #1
   119ac:	mov	r6, #1
   119b0:	mov	r7, #5
   119b4:	str	r0, [fp, #-72]	; 0xffffffb8
   119b8:	movw	r0, #17540	; 0x4484
   119bc:	movt	r0, #1
   119c0:	str	r0, [fp, #-88]	; 0xffffffa8
   119c4:	b	11a1c <putchar_unlocked@plt+0xba4>
   119c8:	cmp	ip, #0
   119cc:	mov	r8, #1
   119d0:	mov	r6, #0
   119d4:	mov	r7, #2
   119d8:	movne	r0, #39	; 0x27
   119dc:	strbne	r0, [r5]
   119e0:	movw	r0, #17544	; 0x4488
   119e4:	movt	r0, #1
   119e8:	b	11a10 <putchar_unlocked@plt+0xb98>
   119ec:	cmp	ip, #0
   119f0:	mov	r8, #1
   119f4:	mov	r2, #1
   119f8:	mov	r7, #5
   119fc:	mov	r6, #0
   11a00:	movne	r0, #34	; 0x22
   11a04:	strbne	r0, [r5]
   11a08:	movw	r0, #17540	; 0x4484
   11a0c:	movt	r0, #1
   11a10:	str	r0, [fp, #-88]	; 0xffffffa8
   11a14:	mov	r0, #1
   11a18:	str	r0, [fp, #-72]	; 0xffffffb8
   11a1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11a20:	str	r7, [fp, #-68]	; 0xffffffbc
   11a24:	str	r6, [fp, #-76]	; 0xffffffb4
   11a28:	str	r2, [sp, #84]	; 0x54
   11a2c:	cmp	r0, #0
   11a30:	movwne	r0, #1
   11a34:	and	r1, r0, r6
   11a38:	and	r1, r2, r1
   11a3c:	str	r1, [sp, #48]	; 0x30
   11a40:	sub	r1, r7, #2
   11a44:	clz	r1, r1
   11a48:	lsr	r1, r1, #5
   11a4c:	and	r1, r1, r6
   11a50:	str	r1, [sp, #64]	; 0x40
   11a54:	subs	r1, r7, #2
   11a58:	eor	r7, r6, #1
   11a5c:	movwne	r1, #1
   11a60:	str	r7, [sp, #92]	; 0x5c
   11a64:	orr	r7, r1, r7
   11a68:	and	r1, r1, r2
   11a6c:	and	r0, r0, r1
   11a70:	str	r7, [sp, #68]	; 0x44
   11a74:	mov	r7, #0
   11a78:	str	r0, [fp, #-60]	; 0xffffffc4
   11a7c:	orr	r0, r1, r6
   11a80:	ldr	r1, [fp, #16]
   11a84:	eor	r0, r0, #1
   11a88:	clz	r1, r1
   11a8c:	lsr	r1, r1, #5
   11a90:	orr	r0, r1, r0
   11a94:	str	r0, [fp, #-64]	; 0xffffffc0
   11a98:	eor	r0, r2, #1
   11a9c:	str	r0, [sp, #52]	; 0x34
   11aa0:	cmn	r3, #1
   11aa4:	beq	11ab4 <putchar_unlocked@plt+0xc3c>
   11aa8:	cmp	r7, r3
   11aac:	bne	11ac0 <putchar_unlocked@plt+0xc48>
   11ab0:	b	1261c <putchar_unlocked@plt+0x17a4>
   11ab4:	ldrb	r0, [r4, r7]
   11ab8:	cmp	r0, #0
   11abc:	beq	12624 <putchar_unlocked@plt+0x17ac>
   11ac0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11ac4:	cmp	r0, #0
   11ac8:	beq	11b10 <putchar_unlocked@plt+0xc98>
   11acc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11ad0:	add	r5, r7, r0
   11ad4:	cmp	r0, #2
   11ad8:	bcc	11b24 <putchar_unlocked@plt+0xcac>
   11adc:	mov	r0, #0
   11ae0:	cmn	r3, #1
   11ae4:	str	r0, [fp, #-56]	; 0xffffffc8
   11ae8:	bne	11b2c <putchar_unlocked@plt+0xcb4>
   11aec:	mov	r0, r4
   11af0:	mov	r4, ip
   11af4:	mov	r6, lr
   11af8:	bl	10db8 <strlen@plt>
   11afc:	mov	ip, r4
   11b00:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11b04:	mov	lr, r6
   11b08:	mov	r3, r0
   11b0c:	b	11b2c <putchar_unlocked@plt+0xcb4>
   11b10:	mov	r0, #0
   11b14:	mov	sl, r3
   11b18:	str	r0, [fp, #-56]	; 0xffffffc8
   11b1c:	mov	r0, #0
   11b20:	b	11b98 <putchar_unlocked@plt+0xd20>
   11b24:	mov	r0, #0
   11b28:	str	r0, [fp, #-56]	; 0xffffffc8
   11b2c:	cmp	r5, r3
   11b30:	bls	11b44 <putchar_unlocked@plt+0xccc>
   11b34:	ldr	r5, [fp, #-84]	; 0xffffffac
   11b38:	mov	r0, #0
   11b3c:	mov	sl, r3
   11b40:	b	11b98 <putchar_unlocked@plt+0xd20>
   11b44:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11b48:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11b4c:	add	r0, r4, r7
   11b50:	mov	r5, lr
   11b54:	mov	r6, ip
   11b58:	mov	sl, r3
   11b5c:	bl	10dac <bcmp@plt>
   11b60:	ldr	r2, [sp, #92]	; 0x5c
   11b64:	cmp	r0, #0
   11b68:	ldr	r3, [fp, #-84]	; 0xffffffac
   11b6c:	mov	r1, r0
   11b70:	movwne	r1, #1
   11b74:	orr	r1, r1, r2
   11b78:	tst	r1, #1
   11b7c:	beq	126a8 <putchar_unlocked@plt+0x1830>
   11b80:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11b84:	clz	r0, r0
   11b88:	mov	lr, r5
   11b8c:	mov	ip, r6
   11b90:	mov	r5, r3
   11b94:	lsr	r0, r0, #5
   11b98:	str	r0, [fp, #-52]	; 0xffffffcc
   11b9c:	ldrb	r6, [r4, r7]
   11ba0:	cmp	r6, #126	; 0x7e
   11ba4:	bhi	120cc <putchar_unlocked@plt+0x1254>
   11ba8:	add	r3, pc, #16
   11bac:	mov	r9, #1
   11bb0:	mov	r2, #110	; 0x6e
   11bb4:	mov	r0, #97	; 0x61
   11bb8:	mov	r1, #0
   11bbc:	ldr	pc, [r3, r6, lsl #2]
   11bc0:	andeq	r1, r1, r0, lsr pc
   11bc4:	andeq	r2, r1, ip, asr #1
   11bc8:	andeq	r2, r1, ip, asr #1
   11bcc:	andeq	r2, r1, ip, asr #1
   11bd0:	andeq	r2, r1, ip, asr #1
   11bd4:	andeq	r2, r1, ip, asr #1
   11bd8:	andeq	r2, r1, ip, asr #1
   11bdc:	andeq	r2, r1, ip, asr #2
   11be0:	andeq	r1, r1, r0, lsl pc
   11be4:	andeq	r1, r1, r8, lsl #30
   11be8:	andeq	r1, r1, ip, lsl pc
   11bec:	andeq	r2, r1, r4, lsr r0
   11bf0:	andeq	r1, r1, r0, lsl #30
   11bf4:	andeq	r1, r1, r8, lsl pc
   11bf8:	andeq	r2, r1, ip, asr #1
   11bfc:	andeq	r2, r1, ip, asr #1
   11c00:	andeq	r2, r1, ip, asr #1
   11c04:	andeq	r2, r1, ip, asr #1
   11c08:	andeq	r2, r1, ip, asr #1
   11c0c:	andeq	r2, r1, ip, asr #1
   11c10:	andeq	r2, r1, ip, asr #1
   11c14:	andeq	r2, r1, ip, asr #1
   11c18:	andeq	r2, r1, ip, asr #1
   11c1c:	andeq	r2, r1, ip, asr #1
   11c20:	andeq	r2, r1, ip, asr #1
   11c24:	andeq	r2, r1, ip, asr #1
   11c28:	andeq	r2, r1, ip, asr #1
   11c2c:	andeq	r2, r1, ip, asr #1
   11c30:	andeq	r2, r1, ip, asr #1
   11c34:	andeq	r2, r1, ip, asr #1
   11c38:	andeq	r2, r1, ip, asr #1
   11c3c:	andeq	r2, r1, ip, asr #1
   11c40:			; <UNDEFINED> instruction: 0x00011eb0
   11c44:			; <UNDEFINED> instruction: 0x00011eb4
   11c48:			; <UNDEFINED> instruction: 0x00011eb4
   11c4c:	muleq	r1, r8, lr
   11c50:			; <UNDEFINED> instruction: 0x00011eb4
   11c54:			; <UNDEFINED> instruction: 0x00011dbc
   11c58:			; <UNDEFINED> instruction: 0x00011eb4
   11c5c:	andeq	r2, r1, ip, lsr r0
   11c60:			; <UNDEFINED> instruction: 0x00011eb4
   11c64:			; <UNDEFINED> instruction: 0x00011eb4
   11c68:			; <UNDEFINED> instruction: 0x00011eb4
   11c6c:			; <UNDEFINED> instruction: 0x00011dbc
   11c70:			; <UNDEFINED> instruction: 0x00011dbc
   11c74:			; <UNDEFINED> instruction: 0x00011dbc
   11c78:			; <UNDEFINED> instruction: 0x00011dbc
   11c7c:			; <UNDEFINED> instruction: 0x00011dbc
   11c80:			; <UNDEFINED> instruction: 0x00011dbc
   11c84:			; <UNDEFINED> instruction: 0x00011dbc
   11c88:			; <UNDEFINED> instruction: 0x00011dbc
   11c8c:			; <UNDEFINED> instruction: 0x00011dbc
   11c90:			; <UNDEFINED> instruction: 0x00011dbc
   11c94:			; <UNDEFINED> instruction: 0x00011dbc
   11c98:			; <UNDEFINED> instruction: 0x00011dbc
   11c9c:			; <UNDEFINED> instruction: 0x00011dbc
   11ca0:			; <UNDEFINED> instruction: 0x00011dbc
   11ca4:			; <UNDEFINED> instruction: 0x00011dbc
   11ca8:			; <UNDEFINED> instruction: 0x00011dbc
   11cac:			; <UNDEFINED> instruction: 0x00011eb4
   11cb0:			; <UNDEFINED> instruction: 0x00011eb4
   11cb4:			; <UNDEFINED> instruction: 0x00011eb4
   11cb8:			; <UNDEFINED> instruction: 0x00011eb4
   11cbc:	andeq	r2, r1, r8
   11cc0:	andeq	r2, r1, ip, asr #1
   11cc4:			; <UNDEFINED> instruction: 0x00011dbc
   11cc8:			; <UNDEFINED> instruction: 0x00011dbc
   11ccc:			; <UNDEFINED> instruction: 0x00011dbc
   11cd0:			; <UNDEFINED> instruction: 0x00011dbc
   11cd4:			; <UNDEFINED> instruction: 0x00011dbc
   11cd8:			; <UNDEFINED> instruction: 0x00011dbc
   11cdc:			; <UNDEFINED> instruction: 0x00011dbc
   11ce0:			; <UNDEFINED> instruction: 0x00011dbc
   11ce4:			; <UNDEFINED> instruction: 0x00011dbc
   11ce8:			; <UNDEFINED> instruction: 0x00011dbc
   11cec:			; <UNDEFINED> instruction: 0x00011dbc
   11cf0:			; <UNDEFINED> instruction: 0x00011dbc
   11cf4:			; <UNDEFINED> instruction: 0x00011dbc
   11cf8:			; <UNDEFINED> instruction: 0x00011dbc
   11cfc:			; <UNDEFINED> instruction: 0x00011dbc
   11d00:			; <UNDEFINED> instruction: 0x00011dbc
   11d04:			; <UNDEFINED> instruction: 0x00011dbc
   11d08:			; <UNDEFINED> instruction: 0x00011dbc
   11d0c:			; <UNDEFINED> instruction: 0x00011dbc
   11d10:			; <UNDEFINED> instruction: 0x00011dbc
   11d14:			; <UNDEFINED> instruction: 0x00011dbc
   11d18:			; <UNDEFINED> instruction: 0x00011dbc
   11d1c:			; <UNDEFINED> instruction: 0x00011dbc
   11d20:			; <UNDEFINED> instruction: 0x00011dbc
   11d24:			; <UNDEFINED> instruction: 0x00011dbc
   11d28:			; <UNDEFINED> instruction: 0x00011dbc
   11d2c:			; <UNDEFINED> instruction: 0x00011eb4
   11d30:	ldrdeq	r1, [r1], -ip
   11d34:			; <UNDEFINED> instruction: 0x00011dbc
   11d38:			; <UNDEFINED> instruction: 0x00011eb4
   11d3c:			; <UNDEFINED> instruction: 0x00011dbc
   11d40:			; <UNDEFINED> instruction: 0x00011eb4
   11d44:			; <UNDEFINED> instruction: 0x00011dbc
   11d48:			; <UNDEFINED> instruction: 0x00011dbc
   11d4c:			; <UNDEFINED> instruction: 0x00011dbc
   11d50:			; <UNDEFINED> instruction: 0x00011dbc
   11d54:			; <UNDEFINED> instruction: 0x00011dbc
   11d58:			; <UNDEFINED> instruction: 0x00011dbc
   11d5c:			; <UNDEFINED> instruction: 0x00011dbc
   11d60:			; <UNDEFINED> instruction: 0x00011dbc
   11d64:			; <UNDEFINED> instruction: 0x00011dbc
   11d68:			; <UNDEFINED> instruction: 0x00011dbc
   11d6c:			; <UNDEFINED> instruction: 0x00011dbc
   11d70:			; <UNDEFINED> instruction: 0x00011dbc
   11d74:			; <UNDEFINED> instruction: 0x00011dbc
   11d78:			; <UNDEFINED> instruction: 0x00011dbc
   11d7c:			; <UNDEFINED> instruction: 0x00011dbc
   11d80:			; <UNDEFINED> instruction: 0x00011dbc
   11d84:			; <UNDEFINED> instruction: 0x00011dbc
   11d88:			; <UNDEFINED> instruction: 0x00011dbc
   11d8c:			; <UNDEFINED> instruction: 0x00011dbc
   11d90:			; <UNDEFINED> instruction: 0x00011dbc
   11d94:			; <UNDEFINED> instruction: 0x00011dbc
   11d98:			; <UNDEFINED> instruction: 0x00011dbc
   11d9c:			; <UNDEFINED> instruction: 0x00011dbc
   11da0:			; <UNDEFINED> instruction: 0x00011dbc
   11da4:			; <UNDEFINED> instruction: 0x00011dbc
   11da8:			; <UNDEFINED> instruction: 0x00011dbc
   11dac:	andeq	r1, r1, r0, ror lr
   11db0:			; <UNDEFINED> instruction: 0x00011eb4
   11db4:	andeq	r1, r1, r0, ror lr
   11db8:	muleq	r1, r8, lr
   11dbc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11dc0:	tst	r0, #1
   11dc4:	bne	11df0 <putchar_unlocked@plt+0xf78>
   11dc8:	ldr	r1, [fp, #16]
   11dcc:	ubfx	r0, r6, #5, #3
   11dd0:	mov	r2, #1
   11dd4:	ldr	r0, [r1, r0, lsl #2]
   11dd8:	and	r1, r6, #31
   11ddc:	tst	r0, r2, lsl r1
   11de0:	beq	11df0 <putchar_unlocked@plt+0xf78>
   11de4:	mov	r0, r6
   11de8:	mov	r1, r9
   11dec:	b	11e04 <putchar_unlocked@plt+0xf8c>
   11df0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11df4:	mov	r1, r9
   11df8:	cmp	r0, #0
   11dfc:	mov	r0, r6
   11e00:	beq	12550 <putchar_unlocked@plt+0x16d8>
   11e04:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11e08:	tst	r2, #1
   11e0c:	bne	126ec <putchar_unlocked@plt+0x1874>
   11e10:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11e14:	subs	r2, r2, #2
   11e18:	movwne	r2, #1
   11e1c:	orr	r2, r2, lr
   11e20:	tst	r2, #1
   11e24:	bne	11e5c <putchar_unlocked@plt+0xfe4>
   11e28:	cmp	r8, ip
   11e2c:	mov	lr, #1
   11e30:	movcc	r2, #39	; 0x27
   11e34:	strbcc	r2, [r5, r8]
   11e38:	add	r2, r8, #1
   11e3c:	cmp	r2, ip
   11e40:	movcc	r3, #36	; 0x24
   11e44:	strbcc	r3, [r5, r2]
   11e48:	add	r2, r8, #2
   11e4c:	add	r8, r8, #3
   11e50:	cmp	r2, ip
   11e54:	movcc	r3, #39	; 0x27
   11e58:	strbcc	r3, [r5, r2]
   11e5c:	cmp	r8, ip
   11e60:	movcc	r2, #92	; 0x5c
   11e64:	strbcc	r2, [r5, r8]
   11e68:	add	r8, r8, #1
   11e6c:	b	12590 <putchar_unlocked@plt+0x1718>
   11e70:	cmp	sl, #1
   11e74:	beq	11e98 <putchar_unlocked@plt+0x1020>
   11e78:	mov	r9, #0
   11e7c:	cmn	sl, #1
   11e80:	bne	11ea4 <putchar_unlocked@plt+0x102c>
   11e84:	ldrb	r0, [r4, #1]
   11e88:	cmp	r0, #0
   11e8c:	beq	11e98 <putchar_unlocked@plt+0x1020>
   11e90:	mvn	sl, #0
   11e94:	b	11ea4 <putchar_unlocked@plt+0x102c>
   11e98:	mov	r9, #0
   11e9c:	cmp	r7, #0
   11ea0:	beq	11eb0 <putchar_unlocked@plt+0x1038>
   11ea4:	mov	r0, #0
   11ea8:	str	r0, [fp, #-56]	; 0xffffffc8
   11eac:	b	11dbc <putchar_unlocked@plt+0xf44>
   11eb0:	mov	r1, #1
   11eb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11eb8:	cmp	r0, #2
   11ebc:	bne	11ed4 <putchar_unlocked@plt+0x105c>
   11ec0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11ec4:	mov	r9, r1
   11ec8:	tst	r0, #1
   11ecc:	beq	11dbc <putchar_unlocked@plt+0xf44>
   11ed0:	b	126ec <putchar_unlocked@plt+0x1874>
   11ed4:	mov	r9, r1
   11ed8:	b	11dbc <putchar_unlocked@plt+0xf44>
   11edc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11ee0:	cmp	r0, #2
   11ee4:	bne	12128 <putchar_unlocked@plt+0x12b0>
   11ee8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11eec:	tst	r0, #1
   11ef0:	bne	126ec <putchar_unlocked@plt+0x1874>
   11ef4:	mov	r0, #0
   11ef8:	str	r0, [fp, #-56]	; 0xffffffc8
   11efc:	b	12140 <putchar_unlocked@plt+0x12c8>
   11f00:	mov	r0, #102	; 0x66
   11f04:	b	1214c <putchar_unlocked@plt+0x12d4>
   11f08:	mov	r2, #116	; 0x74
   11f0c:	b	11f1c <putchar_unlocked@plt+0x10a4>
   11f10:	mov	r0, #98	; 0x62
   11f14:	b	1214c <putchar_unlocked@plt+0x12d4>
   11f18:	mov	r2, #114	; 0x72
   11f1c:	ldr	r0, [sp, #68]	; 0x44
   11f20:	tst	r0, #1
   11f24:	mov	r0, r2
   11f28:	bne	1214c <putchar_unlocked@plt+0x12d4>
   11f2c:	b	126ec <putchar_unlocked@plt+0x1874>
   11f30:	ldr	r0, [sp, #84]	; 0x54
   11f34:	tst	r0, #1
   11f38:	beq	1216c <putchar_unlocked@plt+0x12f4>
   11f3c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11f40:	tst	r0, #1
   11f44:	bne	127d8 <putchar_unlocked@plt+0x1960>
   11f48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11f4c:	mov	r2, sl
   11f50:	subs	r0, r0, #2
   11f54:	movwne	r0, #1
   11f58:	orr	r0, r0, lr
   11f5c:	tst	r0, #1
   11f60:	bne	11f98 <putchar_unlocked@plt+0x1120>
   11f64:	cmp	r8, ip
   11f68:	mov	lr, #1
   11f6c:	movcc	r0, #39	; 0x27
   11f70:	strbcc	r0, [r5, r8]
   11f74:	add	r0, r8, #1
   11f78:	cmp	r0, ip
   11f7c:	movcc	r1, #36	; 0x24
   11f80:	strbcc	r1, [r5, r0]
   11f84:	add	r0, r8, #2
   11f88:	add	r8, r8, #3
   11f8c:	cmp	r0, ip
   11f90:	movcc	r1, #39	; 0x27
   11f94:	strbcc	r1, [r5, r0]
   11f98:	mov	r1, #1
   11f9c:	cmp	r8, ip
   11fa0:	mov	r9, #0
   11fa4:	mov	r6, #48	; 0x30
   11fa8:	str	r1, [fp, #-56]	; 0xffffffc8
   11fac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   11fb0:	movcc	r0, #92	; 0x5c
   11fb4:	strbcc	r0, [r5, r8]
   11fb8:	add	r0, r8, #1
   11fbc:	cmp	r1, #2
   11fc0:	beq	122c8 <putchar_unlocked@plt+0x1450>
   11fc4:	add	r1, r7, #1
   11fc8:	cmp	r1, r2
   11fcc:	bcs	122c8 <putchar_unlocked@plt+0x1450>
   11fd0:	ldrb	r1, [r4, r1]
   11fd4:	sub	r1, r1, #48	; 0x30
   11fd8:	uxtb	r1, r1
   11fdc:	cmp	r1, #9
   11fe0:	bhi	122c8 <putchar_unlocked@plt+0x1450>
   11fe4:	cmp	r0, ip
   11fe8:	movcc	r1, #48	; 0x30
   11fec:	strbcc	r1, [r5, r0]
   11ff0:	add	r0, r8, #2
   11ff4:	add	r8, r8, #3
   11ff8:	cmp	r0, ip
   11ffc:	movcc	r1, #48	; 0x30
   12000:	strbcc	r1, [r5, r0]
   12004:	b	11dbc <putchar_unlocked@plt+0xf44>
   12008:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1200c:	mov	r6, #63	; 0x3f
   12010:	cmp	r0, #5
   12014:	beq	122d0 <putchar_unlocked@plt+0x1458>
   12018:	mov	r1, #0
   1201c:	cmp	r0, #2
   12020:	str	r1, [fp, #-56]	; 0xffffffc8
   12024:	bne	12384 <putchar_unlocked@plt+0x150c>
   12028:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1202c:	mov	r9, #0
   12030:	b	11ec8 <putchar_unlocked@plt+0x1050>
   12034:	mov	r0, #118	; 0x76
   12038:	b	1214c <putchar_unlocked@plt+0x12d4>
   1203c:	mov	r0, #1
   12040:	mov	r6, #39	; 0x27
   12044:	str	r0, [sp, #60]	; 0x3c
   12048:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1204c:	cmp	r0, #2
   12050:	bne	120c4 <putchar_unlocked@plt+0x124c>
   12054:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12058:	tst	r0, #1
   1205c:	bne	126ec <putchar_unlocked@plt+0x1874>
   12060:	ldr	r2, [sp, #56]	; 0x38
   12064:	clz	r1, ip
   12068:	mov	lr, #0
   1206c:	lsr	r1, r1, #5
   12070:	cmp	r2, #0
   12074:	mov	r0, r2
   12078:	movwne	r0, #1
   1207c:	orrs	r0, r0, r1
   12080:	moveq	r2, ip
   12084:	moveq	ip, r0
   12088:	cmp	r8, ip
   1208c:	str	r2, [sp, #56]	; 0x38
   12090:	movcc	r0, #39	; 0x27
   12094:	strbcc	r0, [r5, r8]
   12098:	add	r0, r8, #1
   1209c:	cmp	r0, ip
   120a0:	movcc	r1, #92	; 0x5c
   120a4:	strbcc	r1, [r5, r0]
   120a8:	add	r0, r8, #2
   120ac:	add	r8, r8, #3
   120b0:	cmp	r0, ip
   120b4:	movcc	r1, #39	; 0x27
   120b8:	strbcc	r1, [r5, r0]
   120bc:	mov	r0, #0
   120c0:	str	r0, [fp, #-56]	; 0xffffffc8
   120c4:	mov	r9, #1
   120c8:	b	11dbc <putchar_unlocked@plt+0xf44>
   120cc:	ldr	r0, [sp, #40]	; 0x28
   120d0:	str	lr, [sp, #44]	; 0x2c
   120d4:	str	ip, [sp, #88]	; 0x58
   120d8:	cmp	r0, #1
   120dc:	bne	1218c <putchar_unlocked@plt+0x1314>
   120e0:	str	sl, [sp, #36]	; 0x24
   120e4:	bl	10d94 <__ctype_b_loc@plt>
   120e8:	ldr	r0, [r0]
   120ec:	ldr	r4, [fp, #-80]	; 0xffffffb0
   120f0:	mov	r1, #1
   120f4:	add	r0, r0, r6, lsl #1
   120f8:	ldrb	r0, [r0, #1]
   120fc:	ubfx	r9, r0, #6, #1
   12100:	ldr	r0, [sp, #52]	; 0x34
   12104:	ldr	lr, [sp, #44]	; 0x2c
   12108:	cmp	r1, #1
   1210c:	orr	r3, r9, r0
   12110:	bhi	1238c <putchar_unlocked@plt+0x1514>
   12114:	tst	r3, #1
   12118:	beq	1238c <putchar_unlocked@plt+0x1514>
   1211c:	ldr	sl, [sp, #36]	; 0x24
   12120:	ldr	ip, [sp, #88]	; 0x58
   12124:	b	11dbc <putchar_unlocked@plt+0xf44>
   12128:	ldr	r1, [sp, #48]	; 0x30
   1212c:	mov	r0, #0
   12130:	str	r0, [fp, #-56]	; 0xffffffc8
   12134:	mov	r0, #92	; 0x5c
   12138:	cmp	r1, #0
   1213c:	beq	1214c <putchar_unlocked@plt+0x12d4>
   12140:	mov	r6, #92	; 0x5c
   12144:	mov	r9, #0
   12148:	b	12550 <putchar_unlocked@plt+0x16d8>
   1214c:	mov	r1, #0
   12150:	mov	r9, #0
   12154:	str	r1, [fp, #-56]	; 0xffffffc8
   12158:	ldr	r1, [sp, #84]	; 0x54
   1215c:	tst	r1, #1
   12160:	mov	r1, #0
   12164:	beq	11dbc <putchar_unlocked@plt+0xf44>
   12168:	b	11e04 <putchar_unlocked@plt+0xf8c>
   1216c:	ldr	r0, [sp, #32]
   12170:	mov	r6, #0
   12174:	mov	r9, #0
   12178:	cmp	r0, #0
   1217c:	mov	r0, #0
   12180:	str	r0, [fp, #-56]	; 0xffffffc8
   12184:	beq	11dbc <putchar_unlocked@plt+0xf44>
   12188:	b	125a8 <putchar_unlocked@plt+0x1730>
   1218c:	mov	r0, #0
   12190:	cmn	sl, #1
   12194:	sub	r3, fp, #40	; 0x28
   12198:	str	r0, [fp, #-36]	; 0xffffffdc
   1219c:	str	r0, [fp, #-40]	; 0xffffffd8
   121a0:	bne	121b8 <putchar_unlocked@plt+0x1340>
   121a4:	mov	r0, r4
   121a8:	bl	10db8 <strlen@plt>
   121ac:	ldr	r4, [fp, #-80]	; 0xffffffb0
   121b0:	sub	r3, fp, #40	; 0x28
   121b4:	mov	sl, r0
   121b8:	ldr	r0, [sp, #72]	; 0x48
   121bc:	mov	r9, #1
   121c0:	mov	r1, #0
   121c4:	str	sl, [sp, #36]	; 0x24
   121c8:	add	r0, r0, r7
   121cc:	str	r0, [sp, #20]
   121d0:	add	r0, r1, r7
   121d4:	str	r1, [sp, #24]
   121d8:	add	r1, r4, r0
   121dc:	mov	r4, r0
   121e0:	sub	r2, sl, r0
   121e4:	sub	r0, fp, #44	; 0x2c
   121e8:	bl	13d80 <putchar_unlocked@plt+0x2f08>
   121ec:	cmp	r0, #0
   121f0:	beq	125fc <putchar_unlocked@plt+0x1784>
   121f4:	cmn	r0, #1
   121f8:	beq	125b4 <putchar_unlocked@plt+0x173c>
   121fc:	ldr	r2, [sp, #36]	; 0x24
   12200:	cmn	r0, #2
   12204:	beq	125bc <putchar_unlocked@plt+0x1744>
   12208:	ldr	r2, [sp, #64]	; 0x40
   1220c:	ldr	ip, [sp, #88]	; 0x58
   12210:	ldr	r4, [sp, #84]	; 0x54
   12214:	ldr	lr, [fp, #-48]	; 0xffffffd0
   12218:	cmp	r0, #2
   1221c:	mov	r1, #0
   12220:	movwcc	r1, #1
   12224:	eor	r2, r2, #1
   12228:	orrs	r1, r2, r1
   1222c:	bne	1227c <putchar_unlocked@plt+0x1404>
   12230:	ldr	r1, [sp, #24]
   12234:	ldr	r2, [sp, #20]
   12238:	add	r1, r2, r1
   1223c:	sub	r2, r0, #1
   12240:	ldrb	r3, [r1]
   12244:	sub	r5, r3, #94	; 0x5e
   12248:	cmp	r5, #30
   1224c:	bhi	12264 <putchar_unlocked@plt+0x13ec>
   12250:	mov	r4, #1
   12254:	mov	sl, #1073741829	; 0x40000005
   12258:	tst	sl, r4, lsl r5
   1225c:	ldr	r4, [sp, #84]	; 0x54
   12260:	bne	126c4 <putchar_unlocked@plt+0x184c>
   12264:	sub	r3, r3, #91	; 0x5b
   12268:	cmp	r3, #2
   1226c:	bcc	126c4 <putchar_unlocked@plt+0x184c>
   12270:	add	r1, r1, #1
   12274:	subs	r2, r2, #1
   12278:	bne	12240 <putchar_unlocked@plt+0x13c8>
   1227c:	ldr	r5, [sp, #24]
   12280:	str	lr, [fp, #-48]	; 0xffffffd0
   12284:	add	r5, r0, r5
   12288:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1228c:	bl	10d04 <iswprint@plt>
   12290:	cmp	r0, #0
   12294:	sub	r4, fp, #40	; 0x28
   12298:	movwne	r0, #1
   1229c:	and	r9, r9, r0
   122a0:	mov	r0, r4
   122a4:	bl	10cc8 <mbsinit@plt>
   122a8:	mov	r1, r5
   122ac:	mov	r3, r4
   122b0:	ldr	sl, [sp, #36]	; 0x24
   122b4:	ldr	r5, [fp, #-84]	; 0xffffffac
   122b8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   122bc:	cmp	r0, #0
   122c0:	beq	121d0 <putchar_unlocked@plt+0x1358>
   122c4:	b	12100 <putchar_unlocked@plt+0x1288>
   122c8:	mov	r8, r0
   122cc:	b	11dbc <putchar_unlocked@plt+0xf44>
   122d0:	mov	r0, #0
   122d4:	str	r0, [fp, #-56]	; 0xffffffc8
   122d8:	ldr	r0, [sp, #28]
   122dc:	cmp	r0, #0
   122e0:	beq	12384 <putchar_unlocked@plt+0x150c>
   122e4:	add	r0, r7, #2
   122e8:	mov	r1, sl
   122ec:	cmp	r0, sl
   122f0:	bcs	12384 <putchar_unlocked@plt+0x150c>
   122f4:	add	r1, r7, r4
   122f8:	ldrb	r1, [r1, #1]
   122fc:	cmp	r1, #63	; 0x3f
   12300:	bne	12384 <putchar_unlocked@plt+0x150c>
   12304:	ldrb	r9, [r4, r0]
   12308:	sub	r2, r9, #33	; 0x21
   1230c:	cmp	r2, #29
   12310:	bhi	12384 <putchar_unlocked@plt+0x150c>
   12314:	mov	r1, r4
   12318:	movw	r4, #20929	; 0x51c1
   1231c:	mov	r3, #1
   12320:	movt	r4, #14336	; 0x3800
   12324:	tst	r4, r3, lsl r2
   12328:	beq	12610 <putchar_unlocked@plt+0x1798>
   1232c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12330:	tst	r2, #1
   12334:	bne	127e0 <putchar_unlocked@plt+0x1968>
   12338:	cmp	r8, ip
   1233c:	mov	r4, r1
   12340:	mov	r7, r0
   12344:	mov	r6, r9
   12348:	movcc	r2, #63	; 0x3f
   1234c:	strbcc	r2, [r5, r8]
   12350:	add	r2, r8, #1
   12354:	cmp	r2, ip
   12358:	movcc	r3, #34	; 0x22
   1235c:	strbcc	r3, [r5, r2]
   12360:	add	r2, r8, #2
   12364:	cmp	r2, ip
   12368:	movcc	r3, #34	; 0x22
   1236c:	strbcc	r3, [r5, r2]
   12370:	add	r2, r8, #3
   12374:	add	r8, r8, #4
   12378:	cmp	r2, ip
   1237c:	movcc	r3, #63	; 0x3f
   12380:	strbcc	r3, [r5, r2]
   12384:	mov	r9, #0
   12388:	b	11dbc <putchar_unlocked@plt+0xf44>
   1238c:	ldr	sl, [sp, #36]	; 0x24
   12390:	add	r0, r1, r7
   12394:	mov	r2, #0
   12398:	str	r3, [sp, #24]
   1239c:	str	r0, [fp, #-56]	; 0xffffffc8
   123a0:	tst	r3, #1
   123a4:	beq	123d0 <putchar_unlocked@plt+0x1558>
   123a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   123ac:	tst	r0, #1
   123b0:	beq	12498 <putchar_unlocked@plt+0x1620>
   123b4:	ldr	r1, [sp, #88]	; 0x58
   123b8:	mov	r0, r3
   123bc:	cmp	r8, r1
   123c0:	movcc	r1, #92	; 0x5c
   123c4:	strbcc	r1, [r5, r8]
   123c8:	add	r8, r8, #1
   123cc:	b	1249c <putchar_unlocked@plt+0x1624>
   123d0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   123d4:	tst	r1, #1
   123d8:	bne	126e8 <putchar_unlocked@plt+0x1870>
   123dc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   123e0:	subs	r2, r1, #2
   123e4:	movwne	r2, #1
   123e8:	orr	r2, r2, lr
   123ec:	tst	r2, #1
   123f0:	bne	12434 <putchar_unlocked@plt+0x15bc>
   123f4:	ldr	r1, [sp, #88]	; 0x58
   123f8:	add	r2, r8, #1
   123fc:	mov	lr, #1
   12400:	cmp	r8, r1
   12404:	movcc	r1, #39	; 0x27
   12408:	strbcc	r1, [r5, r8]
   1240c:	ldr	r1, [sp, #88]	; 0x58
   12410:	cmp	r2, r1
   12414:	movcc	r1, #36	; 0x24
   12418:	strbcc	r1, [r5, r2]
   1241c:	ldr	r1, [sp, #88]	; 0x58
   12420:	add	r2, r8, #2
   12424:	add	r8, r8, #3
   12428:	cmp	r2, r1
   1242c:	movcc	r1, #39	; 0x27
   12430:	strbcc	r1, [r5, r2]
   12434:	ldr	r1, [sp, #88]	; 0x58
   12438:	add	r2, r8, #1
   1243c:	mov	r0, r3
   12440:	cmp	r8, r1
   12444:	movcc	r1, #92	; 0x5c
   12448:	strbcc	r1, [r5, r8]
   1244c:	ldr	r1, [sp, #88]	; 0x58
   12450:	cmp	r2, r1
   12454:	bcs	12468 <putchar_unlocked@plt+0x15f0>
   12458:	uxtb	r3, r6
   1245c:	mov	r1, #48	; 0x30
   12460:	orr	r3, r1, r3, lsr #6
   12464:	strb	r3, [r5, r2]
   12468:	ldr	r1, [sp, #88]	; 0x58
   1246c:	add	r2, r8, #2
   12470:	add	r8, r8, #3
   12474:	cmp	r2, r1
   12478:	lsrcc	r3, r6, #3
   1247c:	movcc	r1, #6
   12480:	bficc	r3, r1, #3, #29
   12484:	mov	r1, #6
   12488:	bfi	r6, r1, #3, #29
   1248c:	strbcc	r3, [r5, r2]
   12490:	mov	r2, #1
   12494:	b	124a4 <putchar_unlocked@plt+0x162c>
   12498:	mov	r0, r3
   1249c:	mov	r1, #0
   124a0:	str	r1, [fp, #-52]	; 0xffffffcc
   124a4:	mov	ip, r2
   124a8:	and	r1, r2, #1
   124ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   124b0:	add	r3, r7, #1
   124b4:	cmp	r2, r3
   124b8:	bls	12540 <putchar_unlocked@plt+0x16c8>
   124bc:	cmp	r1, #0
   124c0:	mvn	r5, lr
   124c4:	movwne	r1, #1
   124c8:	orr	r5, r5, r1
   124cc:	tst	r5, #1
   124d0:	bne	12514 <putchar_unlocked@plt+0x169c>
   124d4:	ldr	r1, [sp, #88]	; 0x58
   124d8:	ldr	r5, [fp, #-84]	; 0xffffffac
   124dc:	mov	r2, r4
   124e0:	ldr	r4, [sp, #88]	; 0x58
   124e4:	ldr	r0, [sp, #24]
   124e8:	mov	lr, #0
   124ec:	cmp	r8, r1
   124f0:	movcc	r1, #39	; 0x27
   124f4:	strbcc	r1, [r5, r8]
   124f8:	add	r1, r8, #1
   124fc:	add	r8, r8, #2
   12500:	cmp	r1, r4
   12504:	movcc	r4, #39	; 0x27
   12508:	strbcc	r4, [r5, r1]
   1250c:	mov	r4, r2
   12510:	b	12518 <putchar_unlocked@plt+0x16a0>
   12514:	ldr	r5, [fp, #-84]	; 0xffffffac
   12518:	ldr	r1, [sp, #88]	; 0x58
   1251c:	mov	r2, ip
   12520:	cmp	r8, r1
   12524:	ldr	r1, [sp, #72]	; 0x48
   12528:	strbcc	r6, [r5, r8]
   1252c:	add	r8, r8, #1
   12530:	ldrb	r6, [r1, r7]
   12534:	mov	r7, r3
   12538:	mov	r3, r0
   1253c:	b	123a0 <putchar_unlocked@plt+0x1528>
   12540:	ldr	ip, [sp, #88]	; 0x58
   12544:	cmp	r1, #0
   12548:	movwne	r1, #1
   1254c:	str	r1, [fp, #-56]	; 0xffffffc8
   12550:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12554:	cmp	r0, #0
   12558:	bne	12588 <putchar_unlocked@plt+0x1710>
   1255c:	tst	lr, #1
   12560:	beq	12588 <putchar_unlocked@plt+0x1710>
   12564:	cmp	r8, ip
   12568:	mov	lr, #0
   1256c:	movcc	r0, #39	; 0x27
   12570:	strbcc	r0, [r5, r8]
   12574:	add	r0, r8, #1
   12578:	add	r8, r8, #2
   1257c:	cmp	r0, ip
   12580:	movcc	r1, #39	; 0x27
   12584:	strbcc	r1, [r5, r0]
   12588:	mov	r1, r9
   1258c:	mov	r0, r6
   12590:	cmp	r8, ip
   12594:	strbcc	r0, [r5, r8]
   12598:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1259c:	add	r8, r8, #1
   125a0:	and	r0, r0, r1
   125a4:	str	r0, [fp, #-48]	; 0xffffffd0
   125a8:	mov	r3, sl
   125ac:	add	r7, r7, #1
   125b0:	b	11aa0 <putchar_unlocked@plt+0xc28>
   125b4:	mov	r9, #0
   125b8:	b	125fc <putchar_unlocked@plt+0x1784>
   125bc:	mov	r9, #0
   125c0:	cmp	r2, r4
   125c4:	bls	125fc <putchar_unlocked@plt+0x1784>
   125c8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   125cc:	ldr	r1, [sp, #24]
   125d0:	add	r0, r4, r7
   125d4:	mov	r3, r1
   125d8:	ldrb	r1, [r0, r1]
   125dc:	cmp	r1, #0
   125e0:	beq	12608 <putchar_unlocked@plt+0x1790>
   125e4:	add	r3, r3, #1
   125e8:	add	r1, r7, r3
   125ec:	cmp	r1, r2
   125f0:	mov	r1, r3
   125f4:	bcc	125d4 <putchar_unlocked@plt+0x175c>
   125f8:	b	12100 <putchar_unlocked@plt+0x1288>
   125fc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12600:	ldr	r1, [sp, #24]
   12604:	b	12100 <putchar_unlocked@plt+0x1288>
   12608:	mov	r1, r3
   1260c:	b	12100 <putchar_unlocked@plt+0x1288>
   12610:	mov	r9, #0
   12614:	mov	r4, r1
   12618:	b	11dbc <putchar_unlocked@plt+0xf44>
   1261c:	mov	sl, r7
   12620:	b	12628 <putchar_unlocked@plt+0x17b0>
   12624:	mvn	sl, #0
   12628:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1262c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12630:	eor	r0, r1, #2
   12634:	orr	r0, r0, r8
   12638:	clz	r0, r0
   1263c:	lsr	r0, r0, #5
   12640:	tst	r2, r0
   12644:	bne	126ec <putchar_unlocked@plt+0x1874>
   12648:	subs	r0, r1, #2
   1264c:	movwne	r0, #1
   12650:	orr	r0, r2, r0
   12654:	tst	r0, #1
   12658:	ldreq	r0, [sp, #60]	; 0x3c
   1265c:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   12660:	eoreq	r0, r0, #1
   12664:	tsteq	r0, #1
   12668:	bne	12780 <putchar_unlocked@plt+0x1908>
   1266c:	tst	r1, #1
   12670:	bne	1274c <putchar_unlocked@plt+0x18d4>
   12674:	ldr	r6, [sp, #56]	; 0x38
   12678:	mov	r9, #0
   1267c:	cmp	r6, #0
   12680:	beq	12778 <putchar_unlocked@plt+0x1900>
   12684:	ldr	r0, [sp, #84]	; 0x54
   12688:	mov	r1, #0
   1268c:	mov	r7, #2
   12690:	cmp	ip, #0
   12694:	str	r1, [fp, #-48]	; 0xffffffd0
   12698:	mov	r1, #0
   1269c:	str	r1, [fp, #-76]	; 0xffffffb4
   126a0:	beq	11808 <putchar_unlocked@plt+0x990>
   126a4:	b	12780 <putchar_unlocked@plt+0x1908>
   126a8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   126ac:	ldr	r1, [fp, #12]
   126b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   126b4:	mov	r5, r3
   126b8:	mov	ip, r6
   126bc:	mov	r3, sl
   126c0:	b	12710 <putchar_unlocked@plt+0x1898>
   126c4:	tst	r4, #1
   126c8:	ldr	r5, [fp, #-84]	; 0xffffffac
   126cc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   126d0:	ldr	r1, [fp, #12]
   126d4:	ldr	r3, [sp, #36]	; 0x24
   126d8:	mov	r0, #2
   126dc:	movwne	r0, #4
   126e0:	mov	r2, r0
   126e4:	b	12710 <putchar_unlocked@plt+0x1898>
   126e8:	ldr	ip, [sp, #88]	; 0x58
   126ec:	ldr	r1, [sp, #84]	; 0x54
   126f0:	mov	r0, #2
   126f4:	tst	r1, #1
   126f8:	movwne	r0, #4
   126fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12700:	ldr	r1, [fp, #12]
   12704:	mov	r3, sl
   12708:	cmp	r2, #2
   1270c:	moveq	r2, r0
   12710:	mov	r0, #0
   12714:	bic	r1, r1, #2
   12718:	str	r2, [sp]
   1271c:	mov	r2, r4
   12720:	str	r0, [sp, #8]
   12724:	ldr	r0, [sp, #76]	; 0x4c
   12728:	str	r1, [sp, #4]
   1272c:	mov	r1, ip
   12730:	str	r0, [sp, #12]
   12734:	ldr	r0, [sp, #80]	; 0x50
   12738:	str	r0, [sp, #16]
   1273c:	mov	r0, r5
   12740:	bl	1177c <putchar_unlocked@plt+0x904>
   12744:	mov	r8, r0
   12748:	b	127cc <putchar_unlocked@plt+0x1954>
   1274c:	mov	r0, #5
   12750:	ldr	r1, [sp, #56]	; 0x38
   12754:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12758:	mov	r3, sl
   1275c:	str	r0, [sp]
   12760:	ldr	r0, [fp, #12]
   12764:	str	r0, [sp, #4]
   12768:	ldr	r0, [fp, #16]
   1276c:	str	r0, [sp, #8]
   12770:	ldr	r0, [sp, #76]	; 0x4c
   12774:	b	12730 <putchar_unlocked@plt+0x18b8>
   12778:	mov	r0, #0
   1277c:	str	r0, [fp, #-76]	; 0xffffffb4
   12780:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12784:	cmp	r1, #0
   12788:	beq	127c0 <putchar_unlocked@plt+0x1948>
   1278c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12790:	tst	r0, #1
   12794:	bne	127c0 <putchar_unlocked@plt+0x1948>
   12798:	ldrb	r0, [r1]
   1279c:	cmp	r0, #0
   127a0:	beq	127c0 <putchar_unlocked@plt+0x1948>
   127a4:	add	r1, r1, #1
   127a8:	cmp	r8, ip
   127ac:	strbcc	r0, [r5, r8]
   127b0:	add	r8, r8, #1
   127b4:	ldrb	r0, [r1], #1
   127b8:	cmp	r0, #0
   127bc:	bne	127a8 <putchar_unlocked@plt+0x1930>
   127c0:	cmp	r8, ip
   127c4:	movcc	r0, #0
   127c8:	strbcc	r0, [r5, r8]
   127cc:	mov	r0, r8
   127d0:	sub	sp, fp, #28
   127d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127d8:	mov	r0, #4
   127dc:	b	126fc <putchar_unlocked@plt+0x1884>
   127e0:	mov	r4, r1
   127e4:	b	126ec <putchar_unlocked@plt+0x1874>
   127e8:	bl	10e6c <abort@plt>
   127ec:	mov	r3, r2
   127f0:	mov	r2, #0
   127f4:	b	127f8 <putchar_unlocked@plt+0x1980>
   127f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127fc:	add	fp, sp, #28
   12800:	sub	sp, sp, #36	; 0x24
   12804:	movw	r8, #20792	; 0x5138
   12808:	cmp	r3, #0
   1280c:	mov	r4, r2
   12810:	str	r2, [sp, #24]
   12814:	mov	r5, r1
   12818:	mov	r6, r0
   1281c:	str	r0, [sp, #20]
   12820:	movt	r8, #2
   12824:	movne	r8, r3
   12828:	bl	10dc4 <__errno_location@plt>
   1282c:	str	r0, [sp, #28]
   12830:	ldr	r1, [r8, #40]	; 0x28
   12834:	ldr	r2, [r8, #44]	; 0x2c
   12838:	ldr	r7, [r0]
   1283c:	cmp	r4, #0
   12840:	add	sl, r8, #8
   12844:	mov	r0, #0
   12848:	ldm	r8, {r3, r9}
   1284c:	orreq	r9, r9, #1
   12850:	stm	sp, {r3, r9, sl}
   12854:	str	r1, [sp, #12]
   12858:	str	r2, [sp, #16]
   1285c:	mov	r1, #0
   12860:	mov	r2, r6
   12864:	mov	r3, r5
   12868:	str	r7, [sp, #32]
   1286c:	mov	r7, r5
   12870:	bl	1177c <putchar_unlocked@plt+0x904>
   12874:	add	r4, r0, #1
   12878:	mov	r5, r0
   1287c:	mov	r0, r4
   12880:	bl	13570 <putchar_unlocked@plt+0x26f8>
   12884:	mov	r6, r0
   12888:	ldr	r0, [r8]
   1288c:	ldr	r2, [r8, #44]	; 0x2c
   12890:	ldr	r1, [r8, #40]	; 0x28
   12894:	mov	r3, r7
   12898:	stm	sp, {r0, r9, sl}
   1289c:	str	r2, [sp, #16]
   128a0:	ldr	r2, [sp, #20]
   128a4:	str	r1, [sp, #12]
   128a8:	mov	r0, r6
   128ac:	mov	r1, r4
   128b0:	bl	1177c <putchar_unlocked@plt+0x904>
   128b4:	ldr	r0, [sp, #24]
   128b8:	ldr	r1, [sp, #32]
   128bc:	ldr	r2, [sp, #28]
   128c0:	cmp	r0, #0
   128c4:	str	r1, [r2]
   128c8:	strne	r5, [r0]
   128cc:	mov	r0, r6
   128d0:	sub	sp, fp, #28
   128d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   128dc:	add	fp, sp, #24
   128e0:	movw	r5, #20692	; 0x50d4
   128e4:	movw	r8, #20688	; 0x50d0
   128e8:	movt	r5, #2
   128ec:	movt	r8, #2
   128f0:	ldr	r0, [r5]
   128f4:	ldr	r4, [r8]
   128f8:	cmp	r0, #2
   128fc:	blt	12928 <putchar_unlocked@plt+0x1ab0>
   12900:	add	r7, r4, #12
   12904:	mov	r6, #0
   12908:	ldr	r0, [r7, r6, lsl #3]
   1290c:	bl	13c7c <putchar_unlocked@plt+0x2e04>
   12910:	ldr	r1, [r5]
   12914:	add	r2, r6, #2
   12918:	add	r0, r6, #1
   1291c:	mov	r6, r0
   12920:	cmp	r2, r1
   12924:	blt	12908 <putchar_unlocked@plt+0x1a90>
   12928:	ldr	r0, [r4, #4]
   1292c:	movw	r9, #20840	; 0x5168
   12930:	movw	r7, #20696	; 0x50d8
   12934:	movt	r9, #2
   12938:	movt	r7, #2
   1293c:	cmp	r0, r9
   12940:	beq	12950 <putchar_unlocked@plt+0x1ad8>
   12944:	bl	13c7c <putchar_unlocked@plt+0x2e04>
   12948:	mov	r0, #256	; 0x100
   1294c:	stm	r7, {r0, r9}
   12950:	cmp	r4, r7
   12954:	beq	12964 <putchar_unlocked@plt+0x1aec>
   12958:	mov	r0, r4
   1295c:	bl	13c7c <putchar_unlocked@plt+0x2e04>
   12960:	str	r7, [r8]
   12964:	mov	r0, #1
   12968:	str	r0, [r5]
   1296c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12970:	movw	r3, #20792	; 0x5138
   12974:	mvn	r2, #0
   12978:	movt	r3, #2
   1297c:	b	12980 <putchar_unlocked@plt+0x1b08>
   12980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12984:	add	fp, sp, #28
   12988:	sub	sp, sp, #44	; 0x2c
   1298c:	mov	r7, r3
   12990:	str	r2, [sp, #36]	; 0x24
   12994:	str	r1, [sp, #32]
   12998:	mov	r5, r0
   1299c:	bl	10dc4 <__errno_location@plt>
   129a0:	cmp	r5, #0
   129a4:	bmi	12b14 <putchar_unlocked@plt+0x1c9c>
   129a8:	cmn	r5, #-2147483647	; 0x80000001
   129ac:	beq	12b14 <putchar_unlocked@plt+0x1c9c>
   129b0:	movw	r8, #20692	; 0x50d4
   129b4:	movw	r4, #20688	; 0x50d0
   129b8:	str	r0, [sp, #28]
   129bc:	ldr	r0, [r0]
   129c0:	movt	r8, #2
   129c4:	movt	r4, #2
   129c8:	ldr	r1, [r8]
   129cc:	ldr	r6, [r4]
   129d0:	str	r0, [sp, #24]
   129d4:	cmp	r1, r5
   129d8:	ble	129e4 <putchar_unlocked@plt+0x1b6c>
   129dc:	mov	sl, r6
   129e0:	b	12a50 <putchar_unlocked@plt+0x1bd8>
   129e4:	movw	r9, #20696	; 0x50d8
   129e8:	mov	r0, #8
   129ec:	str	r1, [fp, #-32]	; 0xffffffe0
   129f0:	sub	r1, r5, r1
   129f4:	mvn	r3, #-2147483648	; 0x80000000
   129f8:	movt	r9, #2
   129fc:	str	r0, [sp]
   12a00:	add	r2, r1, #1
   12a04:	sub	r1, fp, #32
   12a08:	subs	r0, r6, r9
   12a0c:	movne	r0, r6
   12a10:	bl	136a0 <putchar_unlocked@plt+0x2828>
   12a14:	mov	sl, r0
   12a18:	cmp	r6, r9
   12a1c:	str	r0, [r4]
   12a20:	bne	12a2c <putchar_unlocked@plt+0x1bb4>
   12a24:	ldrd	r0, [r9]
   12a28:	stm	sl, {r0, r1}
   12a2c:	ldr	r1, [r8]
   12a30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12a34:	add	r0, sl, r1, lsl #3
   12a38:	sub	r1, r2, r1
   12a3c:	lsl	r2, r1, #3
   12a40:	mov	r1, #0
   12a44:	bl	10ddc <memset@plt>
   12a48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a4c:	str	r0, [r8]
   12a50:	mov	r9, sl
   12a54:	ldm	r7, {r0, r1}
   12a58:	orr	r8, r1, #1
   12a5c:	add	r1, r7, #8
   12a60:	ldr	r2, [r7, #40]	; 0x28
   12a64:	ldr	r3, [r7, #44]	; 0x2c
   12a68:	ldr	r6, [r9, r5, lsl #3]!
   12a6c:	str	r1, [sp, #20]
   12a70:	ldr	r4, [r9, #4]!
   12a74:	stm	sp, {r0, r8}
   12a78:	add	r0, sp, #8
   12a7c:	stm	r0, {r1, r2, r3}
   12a80:	ldr	r2, [sp, #32]
   12a84:	ldr	r3, [sp, #36]	; 0x24
   12a88:	mov	r1, r6
   12a8c:	mov	r0, r4
   12a90:	bl	1177c <putchar_unlocked@plt+0x904>
   12a94:	cmp	r6, r0
   12a98:	bhi	12afc <putchar_unlocked@plt+0x1c84>
   12a9c:	add	r6, r0, #1
   12aa0:	movw	r0, #20840	; 0x5168
   12aa4:	movt	r0, #2
   12aa8:	str	r6, [sl, r5, lsl #3]
   12aac:	cmp	r4, r0
   12ab0:	beq	12abc <putchar_unlocked@plt+0x1c44>
   12ab4:	mov	r0, r4
   12ab8:	bl	13c7c <putchar_unlocked@plt+0x2e04>
   12abc:	mov	r0, r6
   12ac0:	bl	13570 <putchar_unlocked@plt+0x26f8>
   12ac4:	str	r0, [r9]
   12ac8:	mov	r4, r0
   12acc:	add	r3, sp, #8
   12ad0:	ldr	r0, [r7]
   12ad4:	ldr	r1, [r7, #40]	; 0x28
   12ad8:	ldr	r2, [r7, #44]	; 0x2c
   12adc:	stm	sp, {r0, r8}
   12ae0:	ldr	r0, [sp, #20]
   12ae4:	stm	r3, {r0, r1, r2}
   12ae8:	ldr	r2, [sp, #32]
   12aec:	ldr	r3, [sp, #36]	; 0x24
   12af0:	mov	r0, r4
   12af4:	mov	r1, r6
   12af8:	bl	1177c <putchar_unlocked@plt+0x904>
   12afc:	ldr	r0, [sp, #28]
   12b00:	ldr	r1, [sp, #24]
   12b04:	str	r1, [r0]
   12b08:	mov	r0, r4
   12b0c:	sub	sp, fp, #28
   12b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b14:	bl	10e6c <abort@plt>
   12b18:	movw	r3, #20792	; 0x5138
   12b1c:	movt	r3, #2
   12b20:	b	12980 <putchar_unlocked@plt+0x1b08>
   12b24:	movw	r3, #20792	; 0x5138
   12b28:	mov	r1, r0
   12b2c:	mov	r0, #0
   12b30:	mvn	r2, #0
   12b34:	movt	r3, #2
   12b38:	b	12980 <putchar_unlocked@plt+0x1b08>
   12b3c:	movw	r3, #20792	; 0x5138
   12b40:	mov	r2, r1
   12b44:	mov	r1, r0
   12b48:	mov	r0, #0
   12b4c:	movt	r3, #2
   12b50:	b	12980 <putchar_unlocked@plt+0x1b08>
   12b54:	push	{fp, lr}
   12b58:	mov	fp, sp
   12b5c:	sub	sp, sp, #48	; 0x30
   12b60:	vmov.i32	q8, #0	; 0x00000000
   12b64:	mov	ip, #32
   12b68:	mov	r3, sp
   12b6c:	mov	lr, r2
   12b70:	cmp	r1, #10
   12b74:	add	r2, r3, #16
   12b78:	vst1.64	{d16-d17}, [r3], ip
   12b7c:	vst1.64	{d16-d17}, [r2]
   12b80:	vst1.64	{d16-d17}, [r3]
   12b84:	beq	12ba4 <putchar_unlocked@plt+0x1d2c>
   12b88:	str	r1, [sp]
   12b8c:	mov	r3, sp
   12b90:	mov	r1, lr
   12b94:	mvn	r2, #0
   12b98:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12b9c:	mov	sp, fp
   12ba0:	pop	{fp, pc}
   12ba4:	bl	10e6c <abort@plt>
   12ba8:	push	{r4, sl, fp, lr}
   12bac:	add	fp, sp, #8
   12bb0:	sub	sp, sp, #48	; 0x30
   12bb4:	vmov.i32	q8, #0	; 0x00000000
   12bb8:	mov	ip, r3
   12bbc:	mov	r3, sp
   12bc0:	mov	lr, #32
   12bc4:	cmp	r1, #10
   12bc8:	add	r4, r3, #16
   12bcc:	vst1.64	{d16-d17}, [r3], lr
   12bd0:	vst1.64	{d16-d17}, [r4]
   12bd4:	vst1.64	{d16-d17}, [r3]
   12bd8:	beq	12bf8 <putchar_unlocked@plt+0x1d80>
   12bdc:	str	r1, [sp]
   12be0:	mov	r1, r2
   12be4:	mov	r3, sp
   12be8:	mov	r2, ip
   12bec:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12bf0:	sub	sp, fp, #8
   12bf4:	pop	{r4, sl, fp, pc}
   12bf8:	bl	10e6c <abort@plt>
   12bfc:	mov	r2, r1
   12c00:	mov	r1, r0
   12c04:	mov	r0, #0
   12c08:	b	12b54 <putchar_unlocked@plt+0x1cdc>
   12c0c:	mov	r3, r2
   12c10:	mov	r2, r1
   12c14:	mov	r1, r0
   12c18:	mov	r0, #0
   12c1c:	b	12ba8 <putchar_unlocked@plt+0x1d30>
   12c20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c24:	add	fp, sp, #24
   12c28:	sub	sp, sp, #48	; 0x30
   12c2c:	movw	r8, #20792	; 0x5138
   12c30:	mov	lr, r0
   12c34:	mov	r3, sp
   12c38:	mov	ip, r1
   12c3c:	movt	r8, #2
   12c40:	mov	r1, r3
   12c44:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   12c48:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   12c4c:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   12c50:	stm	r1, {r0, r4, r5, r6, r7, r9}
   12c54:	ubfx	r0, r2, #5, #3
   12c58:	and	r2, r2, #31
   12c5c:	mov	r4, #1
   12c60:	add	r0, r3, r0, lsl #2
   12c64:	ldr	r1, [r0, #8]
   12c68:	bic	r4, r4, r1, lsr r2
   12c6c:	eor	r1, r1, r4, lsl r2
   12c70:	mov	r2, ip
   12c74:	str	r1, [r0, #8]
   12c78:	mov	r0, #0
   12c7c:	mov	r1, lr
   12c80:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12c84:	sub	sp, fp, #24
   12c88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12c8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c90:	add	fp, sp, #24
   12c94:	sub	sp, sp, #48	; 0x30
   12c98:	movw	lr, #20792	; 0x5138
   12c9c:	mov	ip, r0
   12ca0:	mov	r3, sp
   12ca4:	movt	lr, #2
   12ca8:	mov	r2, r3
   12cac:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   12cb0:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   12cb4:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   12cb8:	stm	r2, {r0, r4, r5, r6, r7, r8}
   12cbc:	ubfx	r0, r1, #5, #3
   12cc0:	and	r1, r1, #31
   12cc4:	mov	r7, #1
   12cc8:	add	r0, r3, r0, lsl #2
   12ccc:	ldr	r2, [r0, #8]
   12cd0:	bic	r7, r7, r2, lsr r1
   12cd4:	eor	r1, r2, r7, lsl r1
   12cd8:	mvn	r2, #0
   12cdc:	str	r1, [r0, #8]
   12ce0:	mov	r0, #0
   12ce4:	mov	r1, ip
   12ce8:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12cec:	sub	sp, fp, #24
   12cf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12cf4:	push	{r4, r5, r6, r7, fp, lr}
   12cf8:	add	fp, sp, #16
   12cfc:	sub	sp, sp, #48	; 0x30
   12d00:	movw	lr, #20792	; 0x5138
   12d04:	mov	ip, r0
   12d08:	mov	r3, sp
   12d0c:	movt	lr, #2
   12d10:	mov	r2, r3
   12d14:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   12d18:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12d1c:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   12d20:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12d24:	mov	r1, ip
   12d28:	mvn	r2, #0
   12d2c:	ldr	r0, [sp, #12]
   12d30:	orr	r0, r0, #67108864	; 0x4000000
   12d34:	str	r0, [sp, #12]
   12d38:	mov	r0, #0
   12d3c:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12d40:	sub	sp, fp, #16
   12d44:	pop	{r4, r5, r6, r7, fp, pc}
   12d48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d4c:	add	fp, sp, #24
   12d50:	sub	sp, sp, #48	; 0x30
   12d54:	movw	r8, #20792	; 0x5138
   12d58:	mov	ip, r1
   12d5c:	mov	lr, r0
   12d60:	mov	r3, sp
   12d64:	movt	r8, #2
   12d68:	mov	r2, r3
   12d6c:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   12d70:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12d74:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   12d78:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12d7c:	mov	r1, lr
   12d80:	mov	r2, ip
   12d84:	ldr	r0, [sp, #12]
   12d88:	orr	r0, r0, #67108864	; 0x4000000
   12d8c:	str	r0, [sp, #12]
   12d90:	mov	r0, #0
   12d94:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12d98:	sub	sp, fp, #24
   12d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12da0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12da4:	add	fp, sp, #24
   12da8:	sub	sp, sp, #96	; 0x60
   12dac:	vmov.i32	q8, #0	; 0x00000000
   12db0:	mov	lr, sp
   12db4:	mov	ip, r2
   12db8:	cmp	r1, #10
   12dbc:	add	r3, lr, #16
   12dc0:	mov	r2, lr
   12dc4:	vst1.64	{d16-d17}, [r3]
   12dc8:	mov	r3, #28
   12dcc:	vst1.64	{d16-d17}, [r2], r3
   12dd0:	vst1.32	{d16-d17}, [r2]
   12dd4:	beq	12e14 <putchar_unlocked@plt+0x1f9c>
   12dd8:	str	r1, [sp, #48]	; 0x30
   12ddc:	add	r3, sp, #48	; 0x30
   12de0:	ldm	lr!, {r2, r4, r5, r6, r7}
   12de4:	add	r1, r3, #4
   12de8:	stmia	r1!, {r2, r4, r5, r6, r7}
   12dec:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   12df0:	stm	r1, {r2, r4, r5, r6, r7, r8}
   12df4:	mvn	r2, #0
   12df8:	ldr	r1, [sp, #60]	; 0x3c
   12dfc:	orr	r1, r1, #67108864	; 0x4000000
   12e00:	str	r1, [sp, #60]	; 0x3c
   12e04:	mov	r1, ip
   12e08:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12e0c:	sub	sp, fp, #24
   12e10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e14:	bl	10e6c <abort@plt>
   12e18:	push	{fp, lr}
   12e1c:	mov	fp, sp
   12e20:	sub	sp, sp, #8
   12e24:	mvn	ip, #0
   12e28:	str	ip, [sp]
   12e2c:	bl	12e38 <putchar_unlocked@plt+0x1fc0>
   12e30:	mov	sp, fp
   12e34:	pop	{fp, pc}
   12e38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e3c:	add	fp, sp, #24
   12e40:	sub	sp, sp, #48	; 0x30
   12e44:	movw	ip, #20792	; 0x5138
   12e48:	mov	lr, r3
   12e4c:	mov	r3, sp
   12e50:	cmp	r1, #0
   12e54:	movt	ip, #2
   12e58:	cmpne	r2, #0
   12e5c:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   12e60:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   12e64:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   12e68:	stm	r3, {r4, r5, r6, r7, r8, r9}
   12e6c:	mov	r3, #10
   12e70:	str	r3, [sp]
   12e74:	bne	12e7c <putchar_unlocked@plt+0x2004>
   12e78:	bl	10e6c <abort@plt>
   12e7c:	ldr	ip, [fp, #8]
   12e80:	str	r2, [sp, #44]	; 0x2c
   12e84:	str	r1, [sp, #40]	; 0x28
   12e88:	mov	r3, sp
   12e8c:	mov	r1, lr
   12e90:	mov	r2, ip
   12e94:	bl	12980 <putchar_unlocked@plt+0x1b08>
   12e98:	sub	sp, fp, #24
   12e9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ea0:	push	{fp, lr}
   12ea4:	mov	fp, sp
   12ea8:	sub	sp, sp, #8
   12eac:	mov	r3, r2
   12eb0:	mov	r2, r1
   12eb4:	mov	r1, r0
   12eb8:	mvn	r0, #0
   12ebc:	str	r0, [sp]
   12ec0:	mov	r0, #0
   12ec4:	bl	12e38 <putchar_unlocked@plt+0x1fc0>
   12ec8:	mov	sp, fp
   12ecc:	pop	{fp, pc}
   12ed0:	push	{fp, lr}
   12ed4:	mov	fp, sp
   12ed8:	sub	sp, sp, #8
   12edc:	mov	ip, r2
   12ee0:	mov	r2, r1
   12ee4:	mov	r1, r0
   12ee8:	str	r3, [sp]
   12eec:	mov	r0, #0
   12ef0:	mov	r3, ip
   12ef4:	bl	12e38 <putchar_unlocked@plt+0x1fc0>
   12ef8:	mov	sp, fp
   12efc:	pop	{fp, pc}
   12f00:	movw	r3, #20704	; 0x50e0
   12f04:	movt	r3, #2
   12f08:	b	12980 <putchar_unlocked@plt+0x1b08>
   12f0c:	movw	r3, #20704	; 0x50e0
   12f10:	mov	r2, r1
   12f14:	mov	r1, r0
   12f18:	mov	r0, #0
   12f1c:	movt	r3, #2
   12f20:	b	12980 <putchar_unlocked@plt+0x1b08>
   12f24:	movw	r3, #20704	; 0x50e0
   12f28:	mvn	r2, #0
   12f2c:	movt	r3, #2
   12f30:	b	12980 <putchar_unlocked@plt+0x1b08>
   12f34:	movw	r3, #20704	; 0x50e0
   12f38:	mov	r1, r0
   12f3c:	mov	r0, #0
   12f40:	mvn	r2, #0
   12f44:	movt	r3, #2
   12f48:	b	12980 <putchar_unlocked@plt+0x1b08>
   12f4c:	push	{r4, r5, fp, lr}
   12f50:	add	fp, sp, #8
   12f54:	mov	r5, r0
   12f58:	mov	r4, r1
   12f5c:	mov	r0, #0
   12f60:	mov	r2, #5
   12f64:	mov	r1, r5
   12f68:	bl	10ce0 <dcgettext@plt>
   12f6c:	cmp	r0, r5
   12f70:	popne	{r4, r5, fp, pc}
   12f74:	bl	13d48 <putchar_unlocked@plt+0x2ed0>
   12f78:	ldrb	r1, [r0]
   12f7c:	and	r1, r1, #223	; 0xdf
   12f80:	cmp	r1, #71	; 0x47
   12f84:	beq	12fec <putchar_unlocked@plt+0x2174>
   12f88:	cmp	r1, #85	; 0x55
   12f8c:	bne	13044 <putchar_unlocked@plt+0x21cc>
   12f90:	ldrb	r1, [r0, #1]
   12f94:	and	r1, r1, #223	; 0xdf
   12f98:	cmp	r1, #84	; 0x54
   12f9c:	bne	13044 <putchar_unlocked@plt+0x21cc>
   12fa0:	ldrb	r1, [r0, #2]
   12fa4:	and	r1, r1, #223	; 0xdf
   12fa8:	cmp	r1, #70	; 0x46
   12fac:	bne	13044 <putchar_unlocked@plt+0x21cc>
   12fb0:	ldrb	r1, [r0, #3]
   12fb4:	cmp	r1, #45	; 0x2d
   12fb8:	bne	13044 <putchar_unlocked@plt+0x21cc>
   12fbc:	ldrb	r1, [r0, #4]
   12fc0:	cmp	r1, #56	; 0x38
   12fc4:	bne	13044 <putchar_unlocked@plt+0x21cc>
   12fc8:	ldrb	r0, [r0, #5]
   12fcc:	cmp	r0, #0
   12fd0:	bne	13044 <putchar_unlocked@plt+0x21cc>
   12fd4:	ldrb	r1, [r5]
   12fd8:	movw	r2, #17546	; 0x448a
   12fdc:	movw	r0, #17550	; 0x448e
   12fe0:	movt	r2, #1
   12fe4:	movt	r0, #1
   12fe8:	b	13074 <putchar_unlocked@plt+0x21fc>
   12fec:	ldrb	r1, [r0, #1]
   12ff0:	and	r1, r1, #223	; 0xdf
   12ff4:	cmp	r1, #66	; 0x42
   12ff8:	bne	13044 <putchar_unlocked@plt+0x21cc>
   12ffc:	ldrb	r1, [r0, #2]
   13000:	cmp	r1, #49	; 0x31
   13004:	bne	13044 <putchar_unlocked@plt+0x21cc>
   13008:	ldrb	r1, [r0, #3]
   1300c:	cmp	r1, #56	; 0x38
   13010:	bne	13044 <putchar_unlocked@plt+0x21cc>
   13014:	ldrb	r1, [r0, #4]
   13018:	cmp	r1, #48	; 0x30
   1301c:	bne	13044 <putchar_unlocked@plt+0x21cc>
   13020:	ldrb	r1, [r0, #5]
   13024:	cmp	r1, #51	; 0x33
   13028:	bne	13044 <putchar_unlocked@plt+0x21cc>
   1302c:	ldrb	r1, [r0, #6]
   13030:	cmp	r1, #48	; 0x30
   13034:	bne	13044 <putchar_unlocked@plt+0x21cc>
   13038:	ldrb	r0, [r0, #7]
   1303c:	cmp	r0, #0
   13040:	beq	13060 <putchar_unlocked@plt+0x21e8>
   13044:	movw	r1, #17540	; 0x4484
   13048:	movw	r0, #17544	; 0x4488
   1304c:	cmp	r4, #9
   13050:	movt	r1, #1
   13054:	movt	r0, #1
   13058:	moveq	r0, r1
   1305c:	pop	{r4, r5, fp, pc}
   13060:	ldrb	r1, [r5]
   13064:	movw	r2, #17554	; 0x4492
   13068:	movw	r0, #17558	; 0x4496
   1306c:	movt	r2, #1
   13070:	movt	r0, #1
   13074:	cmp	r1, #96	; 0x60
   13078:	moveq	r0, r2
   1307c:	pop	{r4, r5, fp, pc}
   13080:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13084:	add	fp, sp, #24
   13088:	sub	sp, sp, #32
   1308c:	ldr	r6, [fp, #12]
   13090:	ldr	r7, [fp, #8]
   13094:	mov	r4, r2
   13098:	mov	r8, r0
   1309c:	cmp	r1, #0
   130a0:	beq	130c8 <putchar_unlocked@plt+0x2250>
   130a4:	movw	r2, #17648	; 0x44f0
   130a8:	mov	r5, r1
   130ac:	str	r3, [sp, #4]
   130b0:	str	r4, [sp]
   130b4:	mov	r0, r8
   130b8:	mov	r1, #1
   130bc:	movt	r2, #1
   130c0:	mov	r3, r5
   130c4:	b	130e0 <putchar_unlocked@plt+0x2268>
   130c8:	movw	r2, #17660	; 0x44fc
   130cc:	str	r3, [sp]
   130d0:	mov	r0, r8
   130d4:	mov	r1, #1
   130d8:	mov	r3, r4
   130dc:	movt	r2, #1
   130e0:	bl	10e00 <__fprintf_chk@plt>
   130e4:	movw	r1, #17667	; 0x4503
   130e8:	mov	r0, #0
   130ec:	mov	r2, #5
   130f0:	movt	r1, #1
   130f4:	bl	10ce0 <dcgettext@plt>
   130f8:	movw	r2, #18385	; 0x47d1
   130fc:	mov	r3, r0
   13100:	movw	r0, #2022	; 0x7e6
   13104:	mov	r1, #1
   13108:	movt	r2, #1
   1310c:	str	r0, [sp]
   13110:	mov	r0, r8
   13114:	bl	10e00 <__fprintf_chk@plt>
   13118:	movw	r4, #16517	; 0x4085
   1311c:	mov	r1, r8
   13120:	movt	r4, #1
   13124:	mov	r0, r4
   13128:	bl	10c80 <fputs_unlocked@plt>
   1312c:	movw	r1, #17671	; 0x4507
   13130:	mov	r0, #0
   13134:	mov	r2, #5
   13138:	movt	r1, #1
   1313c:	bl	10ce0 <dcgettext@plt>
   13140:	movw	r3, #17842	; 0x45b2
   13144:	mov	r2, r0
   13148:	mov	r0, r8
   1314c:	mov	r1, #1
   13150:	movt	r3, #1
   13154:	bl	10e00 <__fprintf_chk@plt>
   13158:	mov	r0, r4
   1315c:	mov	r1, r8
   13160:	bl	10c80 <fputs_unlocked@plt>
   13164:	cmp	r6, #9
   13168:	bhi	131cc <putchar_unlocked@plt+0x2354>
   1316c:	add	r0, pc, #0
   13170:	ldr	pc, [r0, r6, lsl #2]
   13174:	andeq	r3, r1, r4, lsr #7
   13178:	muleq	r1, ip, r1
   1317c:	ldrdeq	r3, [r1], -r8
   13180:	andeq	r3, r1, r0, lsl #4
   13184:	andeq	r3, r1, r8, lsr #4
   13188:	andeq	r3, r1, r0, asr r2
   1318c:	andeq	r3, r1, r8, ror r2
   13190:			; <UNDEFINED> instruction: 0x000132b0
   13194:	andeq	r3, r1, r0, asr r3
   13198:	strdeq	r3, [r1], -r8
   1319c:	movw	r1, #17876	; 0x45d4
   131a0:	mov	r0, #0
   131a4:	mov	r2, #5
   131a8:	movt	r1, #1
   131ac:	bl	10ce0 <dcgettext@plt>
   131b0:	ldr	r3, [r7]
   131b4:	mov	r2, r0
   131b8:	mov	r0, r8
   131bc:	mov	r1, #1
   131c0:	sub	sp, fp, #24
   131c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   131c8:	b	10e00 <__fprintf_chk@plt>
   131cc:	movw	r1, #18195	; 0x4713
   131d0:	movt	r1, #1
   131d4:	b	13300 <putchar_unlocked@plt+0x2488>
   131d8:	movw	r1, #17892	; 0x45e4
   131dc:	mov	r0, #0
   131e0:	mov	r2, #5
   131e4:	movt	r1, #1
   131e8:	bl	10ce0 <dcgettext@plt>
   131ec:	mov	r2, r0
   131f0:	ldr	r3, [r7]
   131f4:	ldr	r0, [r7, #4]
   131f8:	str	r0, [sp]
   131fc:	b	132ec <putchar_unlocked@plt+0x2474>
   13200:	movw	r1, #17915	; 0x45fb
   13204:	mov	r0, #0
   13208:	mov	r2, #5
   1320c:	movt	r1, #1
   13210:	bl	10ce0 <dcgettext@plt>
   13214:	mov	r2, r0
   13218:	ldr	r3, [r7]
   1321c:	ldmib	r7, {r0, r1}
   13220:	stm	sp, {r0, r1}
   13224:	b	132ec <putchar_unlocked@plt+0x2474>
   13228:	movw	r1, #17943	; 0x4617
   1322c:	mov	r0, #0
   13230:	mov	r2, #5
   13234:	movt	r1, #1
   13238:	bl	10ce0 <dcgettext@plt>
   1323c:	ldr	r3, [r7]
   13240:	mov	r2, r0
   13244:	ldmib	r7, {r0, r1, r7}
   13248:	stm	sp, {r0, r1, r7}
   1324c:	b	132ec <putchar_unlocked@plt+0x2474>
   13250:	movw	r1, #17975	; 0x4637
   13254:	mov	r0, #0
   13258:	mov	r2, #5
   1325c:	movt	r1, #1
   13260:	bl	10ce0 <dcgettext@plt>
   13264:	ldr	r3, [r7]
   13268:	mov	r2, r0
   1326c:	ldmib	r7, {r0, r1, r6, r7}
   13270:	stm	sp, {r0, r1, r6, r7}
   13274:	b	132ec <putchar_unlocked@plt+0x2474>
   13278:	movw	r1, #18011	; 0x465b
   1327c:	mov	r0, #0
   13280:	mov	r2, #5
   13284:	movt	r1, #1
   13288:	bl	10ce0 <dcgettext@plt>
   1328c:	mov	r2, r0
   13290:	ldr	r3, [r7]
   13294:	ldmib	r7, {r0, r1, r6}
   13298:	ldr	r5, [r7, #16]
   1329c:	ldr	r7, [r7, #20]
   132a0:	stm	sp, {r0, r1, r6}
   132a4:	str	r5, [sp, #12]
   132a8:	str	r7, [sp, #16]
   132ac:	b	132ec <putchar_unlocked@plt+0x2474>
   132b0:	movw	r1, #18051	; 0x4683
   132b4:	mov	r0, #0
   132b8:	mov	r2, #5
   132bc:	movt	r1, #1
   132c0:	bl	10ce0 <dcgettext@plt>
   132c4:	mov	r2, r0
   132c8:	ldr	r3, [r7]
   132cc:	ldmib	r7, {r0, r1, r6}
   132d0:	ldr	r5, [r7, #16]
   132d4:	ldr	r4, [r7, #20]
   132d8:	ldr	r7, [r7, #24]
   132dc:	stm	sp, {r0, r1, r6}
   132e0:	str	r5, [sp, #12]
   132e4:	str	r4, [sp, #16]
   132e8:	str	r7, [sp, #20]
   132ec:	mov	r0, r8
   132f0:	mov	r1, #1
   132f4:	b	133a0 <putchar_unlocked@plt+0x2528>
   132f8:	movw	r1, #18143	; 0x46df
   132fc:	movt	r1, #1
   13300:	mov	r0, #0
   13304:	mov	r2, #5
   13308:	bl	10ce0 <dcgettext@plt>
   1330c:	mov	ip, r0
   13310:	ldr	r3, [r7]
   13314:	ldr	r0, [r7, #4]
   13318:	ldr	r1, [r7, #8]
   1331c:	ldr	r6, [r7, #12]
   13320:	ldr	r5, [r7, #16]
   13324:	ldr	r4, [r7, #20]
   13328:	ldr	r2, [r7, #24]
   1332c:	ldr	lr, [r7, #28]
   13330:	ldr	r7, [r7, #32]
   13334:	stm	sp, {r0, r1, r6}
   13338:	str	r5, [sp, #12]
   1333c:	str	r4, [sp, #16]
   13340:	str	r2, [sp, #20]
   13344:	str	lr, [sp, #24]
   13348:	str	r7, [sp, #28]
   1334c:	b	13394 <putchar_unlocked@plt+0x251c>
   13350:	movw	r1, #18095	; 0x46af
   13354:	mov	r0, #0
   13358:	mov	r2, #5
   1335c:	movt	r1, #1
   13360:	bl	10ce0 <dcgettext@plt>
   13364:	mov	ip, r0
   13368:	ldr	r3, [r7]
   1336c:	ldmib	r7, {r0, r1, r6}
   13370:	ldr	r5, [r7, #16]
   13374:	ldr	r4, [r7, #20]
   13378:	ldr	r2, [r7, #24]
   1337c:	ldr	r7, [r7, #28]
   13380:	stm	sp, {r0, r1, r6}
   13384:	str	r5, [sp, #12]
   13388:	str	r4, [sp, #16]
   1338c:	str	r2, [sp, #20]
   13390:	str	r7, [sp, #24]
   13394:	mov	r0, r8
   13398:	mov	r1, #1
   1339c:	mov	r2, ip
   133a0:	bl	10e00 <__fprintf_chk@plt>
   133a4:	sub	sp, fp, #24
   133a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   133ac:	push	{r4, sl, fp, lr}
   133b0:	add	fp, sp, #8
   133b4:	sub	sp, sp, #8
   133b8:	ldr	ip, [fp, #8]
   133bc:	mov	lr, #0
   133c0:	ldr	r4, [ip, lr, lsl #2]
   133c4:	add	lr, lr, #1
   133c8:	cmp	r4, #0
   133cc:	bne	133c0 <putchar_unlocked@plt+0x2548>
   133d0:	sub	r4, lr, #1
   133d4:	str	ip, [sp]
   133d8:	str	r4, [sp, #4]
   133dc:	bl	13080 <putchar_unlocked@plt+0x2208>
   133e0:	sub	sp, fp, #8
   133e4:	pop	{r4, sl, fp, pc}
   133e8:	push	{r4, r5, fp, lr}
   133ec:	add	fp, sp, #8
   133f0:	sub	sp, sp, #48	; 0x30
   133f4:	ldr	r4, [fp, #8]
   133f8:	mov	ip, #0
   133fc:	add	lr, sp, #8
   13400:	ldr	r5, [r4]
   13404:	cmp	r5, #0
   13408:	str	r5, [lr, ip, lsl #2]
   1340c:	beq	13424 <putchar_unlocked@plt+0x25ac>
   13410:	add	ip, ip, #1
   13414:	add	r4, r4, #4
   13418:	cmp	ip, #10
   1341c:	bne	13400 <putchar_unlocked@plt+0x2588>
   13420:	mov	ip, #10
   13424:	str	lr, [sp]
   13428:	str	ip, [sp, #4]
   1342c:	bl	13080 <putchar_unlocked@plt+0x2208>
   13430:	sub	sp, fp, #8
   13434:	pop	{r4, r5, fp, pc}
   13438:	push	{fp, lr}
   1343c:	mov	fp, sp
   13440:	sub	sp, sp, #8
   13444:	add	ip, fp, #8
   13448:	str	ip, [sp, #4]
   1344c:	str	ip, [sp]
   13450:	bl	133e8 <putchar_unlocked@plt+0x2570>
   13454:	mov	sp, fp
   13458:	pop	{fp, pc}
   1345c:	push	{fp, lr}
   13460:	mov	fp, sp
   13464:	movw	r0, #20772	; 0x5124
   13468:	movt	r0, #2
   1346c:	ldr	r1, [r0]
   13470:	movw	r0, #16517	; 0x4085
   13474:	movt	r0, #1
   13478:	bl	10c80 <fputs_unlocked@plt>
   1347c:	movw	r1, #18255	; 0x474f
   13480:	mov	r0, #0
   13484:	mov	r2, #5
   13488:	movt	r1, #1
   1348c:	bl	10ce0 <dcgettext@plt>
   13490:	movw	r2, #18275	; 0x4763
   13494:	mov	r1, r0
   13498:	mov	r0, #1
   1349c:	movt	r2, #1
   134a0:	bl	10de8 <__printf_chk@plt>
   134a4:	movw	r1, #18297	; 0x4779
   134a8:	mov	r0, #0
   134ac:	mov	r2, #5
   134b0:	movt	r1, #1
   134b4:	bl	10ce0 <dcgettext@plt>
   134b8:	movw	r2, #16843	; 0x41cb
   134bc:	movw	r3, #17020	; 0x427c
   134c0:	mov	r1, r0
   134c4:	mov	r0, #1
   134c8:	movt	r2, #1
   134cc:	movt	r3, #1
   134d0:	bl	10de8 <__printf_chk@plt>
   134d4:	movw	r1, #18317	; 0x478d
   134d8:	mov	r0, #0
   134dc:	mov	r2, #5
   134e0:	movt	r1, #1
   134e4:	bl	10ce0 <dcgettext@plt>
   134e8:	movw	r2, #18356	; 0x47b4
   134ec:	mov	r1, r0
   134f0:	mov	r0, #1
   134f4:	movt	r2, #1
   134f8:	pop	{fp, lr}
   134fc:	b	10de8 <__printf_chk@plt>
   13500:	b	13504 <putchar_unlocked@plt+0x268c>
   13504:	push	{r4, r5, r6, sl, fp, lr}
   13508:	add	fp, sp, #16
   1350c:	mov	r4, r2
   13510:	mov	r5, r1
   13514:	mov	r6, r0
   13518:	bl	13de4 <putchar_unlocked@plt+0x2f6c>
   1351c:	cmp	r0, #0
   13520:	popne	{r4, r5, r6, sl, fp, pc}
   13524:	cmp	r6, #0
   13528:	beq	1353c <putchar_unlocked@plt+0x26c4>
   1352c:	cmp	r5, #0
   13530:	cmpne	r4, #0
   13534:	bne	1353c <putchar_unlocked@plt+0x26c4>
   13538:	pop	{r4, r5, r6, sl, fp, pc}
   1353c:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13540:	push	{fp, lr}
   13544:	mov	fp, sp
   13548:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   1354c:	cmp	r0, #0
   13550:	popne	{fp, pc}
   13554:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13558:	push	{fp, lr}
   1355c:	mov	fp, sp
   13560:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   13564:	cmp	r0, #0
   13568:	popne	{fp, pc}
   1356c:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13570:	push	{fp, lr}
   13574:	mov	fp, sp
   13578:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   1357c:	cmp	r0, #0
   13580:	popne	{fp, pc}
   13584:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13588:	push	{r4, r5, fp, lr}
   1358c:	add	fp, sp, #8
   13590:	mov	r4, r1
   13594:	mov	r5, r0
   13598:	bl	13a34 <putchar_unlocked@plt+0x2bbc>
   1359c:	cmp	r0, #0
   135a0:	popne	{r4, r5, fp, pc}
   135a4:	cmp	r5, #0
   135a8:	beq	135b8 <putchar_unlocked@plt+0x2740>
   135ac:	cmp	r4, #0
   135b0:	bne	135b8 <putchar_unlocked@plt+0x2740>
   135b4:	pop	{r4, r5, fp, pc}
   135b8:	bl	1396c <putchar_unlocked@plt+0x2af4>
   135bc:	push	{fp, lr}
   135c0:	mov	fp, sp
   135c4:	cmp	r1, #0
   135c8:	orreq	r1, r1, #1
   135cc:	bl	13a34 <putchar_unlocked@plt+0x2bbc>
   135d0:	cmp	r0, #0
   135d4:	popne	{fp, pc}
   135d8:	bl	1396c <putchar_unlocked@plt+0x2af4>
   135dc:	push	{fp, lr}
   135e0:	mov	fp, sp
   135e4:	clz	r3, r2
   135e8:	lsr	ip, r3, #5
   135ec:	clz	r3, r1
   135f0:	lsr	r3, r3, #5
   135f4:	orrs	r3, r3, ip
   135f8:	movwne	r1, #1
   135fc:	movwne	r2, #1
   13600:	bl	13de4 <putchar_unlocked@plt+0x2f6c>
   13604:	cmp	r0, #0
   13608:	popne	{fp, pc}
   1360c:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13610:	push	{fp, lr}
   13614:	mov	fp, sp
   13618:	mov	r2, r1
   1361c:	mov	r1, r0
   13620:	mov	r0, #0
   13624:	bl	13de4 <putchar_unlocked@plt+0x2f6c>
   13628:	cmp	r0, #0
   1362c:	popne	{fp, pc}
   13630:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13634:	mov	r2, r1
   13638:	mov	r1, r0
   1363c:	mov	r0, #0
   13640:	b	135dc <putchar_unlocked@plt+0x2764>
   13644:	mov	r2, #1
   13648:	b	1364c <putchar_unlocked@plt+0x27d4>
   1364c:	push	{r4, r5, fp, lr}
   13650:	add	fp, sp, #8
   13654:	ldr	r5, [r1]
   13658:	mov	r4, r1
   1365c:	cmp	r0, #0
   13660:	beq	13678 <putchar_unlocked@plt+0x2800>
   13664:	mov	r1, #1
   13668:	add	r1, r1, r5, lsr #1
   1366c:	adds	r5, r5, r1
   13670:	bcc	13690 <putchar_unlocked@plt+0x2818>
   13674:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13678:	cmp	r5, #0
   1367c:	bne	13690 <putchar_unlocked@plt+0x2818>
   13680:	mov	r1, #64	; 0x40
   13684:	cmp	r2, #64	; 0x40
   13688:	udiv	r5, r1, r2
   1368c:	addhi	r5, r5, #1
   13690:	mov	r1, r5
   13694:	bl	13504 <putchar_unlocked@plt+0x268c>
   13698:	str	r5, [r4]
   1369c:	pop	{r4, r5, fp, pc}
   136a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   136a4:	add	fp, sp, #24
   136a8:	ldr	r6, [r1]
   136ac:	mov	r8, r1
   136b0:	ldr	r4, [fp, #8]
   136b4:	add	r1, r6, r6, asr #1
   136b8:	cmp	r1, r6
   136bc:	mvnvs	r1, #-2147483648	; 0x80000000
   136c0:	cmp	r1, r3
   136c4:	mov	r5, r1
   136c8:	movgt	r5, r3
   136cc:	cmn	r3, #1
   136d0:	movle	r5, r1
   136d4:	cmn	r4, #1
   136d8:	ble	136f8 <putchar_unlocked@plt+0x2880>
   136dc:	cmp	r4, #0
   136e0:	beq	1374c <putchar_unlocked@plt+0x28d4>
   136e4:	cmn	r5, #1
   136e8:	ble	13720 <putchar_unlocked@plt+0x28a8>
   136ec:	mvn	r7, #-2147483648	; 0x80000000
   136f0:	udiv	r1, r7, r4
   136f4:	b	13714 <putchar_unlocked@plt+0x289c>
   136f8:	cmn	r5, #1
   136fc:	ble	1373c <putchar_unlocked@plt+0x28c4>
   13700:	cmn	r4, #1
   13704:	beq	1374c <putchar_unlocked@plt+0x28d4>
   13708:	mov	r1, #-2147483648	; 0x80000000
   1370c:	mvn	r7, #-2147483648	; 0x80000000
   13710:	sdiv	r1, r1, r4
   13714:	cmp	r1, r5
   13718:	bge	1374c <putchar_unlocked@plt+0x28d4>
   1371c:	b	1375c <putchar_unlocked@plt+0x28e4>
   13720:	beq	1374c <putchar_unlocked@plt+0x28d4>
   13724:	mov	r1, #-2147483648	; 0x80000000
   13728:	mvn	r7, #-2147483648	; 0x80000000
   1372c:	sdiv	r1, r1, r5
   13730:	cmp	r1, r4
   13734:	bge	1374c <putchar_unlocked@plt+0x28d4>
   13738:	b	1375c <putchar_unlocked@plt+0x28e4>
   1373c:	mvn	r7, #-2147483648	; 0x80000000
   13740:	sdiv	r1, r7, r4
   13744:	cmp	r5, r1
   13748:	blt	1375c <putchar_unlocked@plt+0x28e4>
   1374c:	mul	r1, r5, r4
   13750:	mov	r7, #64	; 0x40
   13754:	cmp	r1, #63	; 0x3f
   13758:	bgt	13764 <putchar_unlocked@plt+0x28ec>
   1375c:	sdiv	r5, r7, r4
   13760:	mul	r1, r5, r4
   13764:	cmp	r0, #0
   13768:	moveq	r7, #0
   1376c:	streq	r7, [r8]
   13770:	sub	r7, r5, r6
   13774:	cmp	r7, r2
   13778:	bge	1381c <putchar_unlocked@plt+0x29a4>
   1377c:	add	r5, r6, r2
   13780:	mov	r2, #0
   13784:	mov	r1, #0
   13788:	cmp	r5, r3
   1378c:	movwgt	r2, #1
   13790:	cmn	r3, #1
   13794:	movwgt	r1, #1
   13798:	cmp	r5, r6
   1379c:	bvs	13804 <putchar_unlocked@plt+0x298c>
   137a0:	ands	r1, r1, r2
   137a4:	bne	13804 <putchar_unlocked@plt+0x298c>
   137a8:	cmn	r4, #1
   137ac:	ble	137cc <putchar_unlocked@plt+0x2954>
   137b0:	cmp	r4, #0
   137b4:	beq	13818 <putchar_unlocked@plt+0x29a0>
   137b8:	cmn	r5, #1
   137bc:	ble	137f0 <putchar_unlocked@plt+0x2978>
   137c0:	mvn	r1, #-2147483648	; 0x80000000
   137c4:	udiv	r1, r1, r4
   137c8:	b	137e4 <putchar_unlocked@plt+0x296c>
   137cc:	cmn	r5, #1
   137d0:	ble	13808 <putchar_unlocked@plt+0x2990>
   137d4:	cmn	r4, #1
   137d8:	beq	13818 <putchar_unlocked@plt+0x29a0>
   137dc:	mov	r1, #-2147483648	; 0x80000000
   137e0:	sdiv	r1, r1, r4
   137e4:	cmp	r1, r5
   137e8:	bge	13818 <putchar_unlocked@plt+0x29a0>
   137ec:	b	13804 <putchar_unlocked@plt+0x298c>
   137f0:	beq	13818 <putchar_unlocked@plt+0x29a0>
   137f4:	mov	r1, #-2147483648	; 0x80000000
   137f8:	sdiv	r1, r1, r5
   137fc:	cmp	r1, r4
   13800:	bge	13818 <putchar_unlocked@plt+0x29a0>
   13804:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13808:	mvn	r1, #-2147483648	; 0x80000000
   1380c:	sdiv	r1, r1, r4
   13810:	cmp	r5, r1
   13814:	blt	13804 <putchar_unlocked@plt+0x298c>
   13818:	mul	r1, r5, r4
   1381c:	bl	13588 <putchar_unlocked@plt+0x2710>
   13820:	str	r5, [r8]
   13824:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13828:	push	{fp, lr}
   1382c:	mov	fp, sp
   13830:	mov	r1, #1
   13834:	bl	139b0 <putchar_unlocked@plt+0x2b38>
   13838:	cmp	r0, #0
   1383c:	popne	{fp, pc}
   13840:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13844:	push	{fp, lr}
   13848:	mov	fp, sp
   1384c:	bl	139b0 <putchar_unlocked@plt+0x2b38>
   13850:	cmp	r0, #0
   13854:	popne	{fp, pc}
   13858:	bl	1396c <putchar_unlocked@plt+0x2af4>
   1385c:	push	{fp, lr}
   13860:	mov	fp, sp
   13864:	mov	r1, #1
   13868:	bl	139b0 <putchar_unlocked@plt+0x2b38>
   1386c:	cmp	r0, #0
   13870:	popne	{fp, pc}
   13874:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13878:	push	{fp, lr}
   1387c:	mov	fp, sp
   13880:	bl	139b0 <putchar_unlocked@plt+0x2b38>
   13884:	cmp	r0, #0
   13888:	popne	{fp, pc}
   1388c:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13890:	push	{r4, r5, fp, lr}
   13894:	add	fp, sp, #8
   13898:	mov	r5, r0
   1389c:	mov	r0, r1
   138a0:	mov	r4, r1
   138a4:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   138a8:	cmp	r0, #0
   138ac:	beq	138c0 <putchar_unlocked@plt+0x2a48>
   138b0:	mov	r1, r5
   138b4:	mov	r2, r4
   138b8:	pop	{r4, r5, fp, lr}
   138bc:	b	10cbc <memcpy@plt>
   138c0:	bl	1396c <putchar_unlocked@plt+0x2af4>
   138c4:	push	{r4, r5, fp, lr}
   138c8:	add	fp, sp, #8
   138cc:	mov	r5, r0
   138d0:	mov	r0, r1
   138d4:	mov	r4, r1
   138d8:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   138dc:	cmp	r0, #0
   138e0:	beq	138f4 <putchar_unlocked@plt+0x2a7c>
   138e4:	mov	r1, r5
   138e8:	mov	r2, r4
   138ec:	pop	{r4, r5, fp, lr}
   138f0:	b	10cbc <memcpy@plt>
   138f4:	bl	1396c <putchar_unlocked@plt+0x2af4>
   138f8:	push	{r4, r5, fp, lr}
   138fc:	add	fp, sp, #8
   13900:	mov	r5, r0
   13904:	add	r0, r1, #1
   13908:	mov	r4, r1
   1390c:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   13910:	cmp	r0, #0
   13914:	beq	13930 <putchar_unlocked@plt+0x2ab8>
   13918:	mov	r1, #0
   1391c:	mov	r2, r4
   13920:	strb	r1, [r0, r4]
   13924:	mov	r1, r5
   13928:	pop	{r4, r5, fp, lr}
   1392c:	b	10cbc <memcpy@plt>
   13930:	bl	1396c <putchar_unlocked@plt+0x2af4>
   13934:	push	{r4, r5, fp, lr}
   13938:	add	fp, sp, #8
   1393c:	mov	r4, r0
   13940:	bl	10db8 <strlen@plt>
   13944:	add	r5, r0, #1
   13948:	mov	r0, r5
   1394c:	bl	13a04 <putchar_unlocked@plt+0x2b8c>
   13950:	cmp	r0, #0
   13954:	beq	13968 <putchar_unlocked@plt+0x2af0>
   13958:	mov	r1, r4
   1395c:	mov	r2, r5
   13960:	pop	{r4, r5, fp, lr}
   13964:	b	10cbc <memcpy@plt>
   13968:	bl	1396c <putchar_unlocked@plt+0x2af4>
   1396c:	push	{fp, lr}
   13970:	mov	fp, sp
   13974:	movw	r0, #20684	; 0x50cc
   13978:	movw	r1, #18432	; 0x4800
   1397c:	mov	r2, #5
   13980:	movt	r0, #2
   13984:	movt	r1, #1
   13988:	ldr	r4, [r0]
   1398c:	mov	r0, #0
   13990:	bl	10ce0 <dcgettext@plt>
   13994:	movw	r2, #17391	; 0x43ef
   13998:	mov	r3, r0
   1399c:	mov	r0, r4
   139a0:	mov	r1, #0
   139a4:	movt	r2, #1
   139a8:	bl	10d4c <error@plt>
   139ac:	bl	10e6c <abort@plt>
   139b0:	clz	r2, r1
   139b4:	clz	r3, r0
   139b8:	lsr	r2, r2, #5
   139bc:	lsr	r3, r3, #5
   139c0:	orrs	r2, r3, r2
   139c4:	movwne	r1, #1
   139c8:	movwne	r0, #1
   139cc:	cmp	r1, #0
   139d0:	beq	13a00 <putchar_unlocked@plt+0x2b88>
   139d4:	mvn	r2, #-2147483648	; 0x80000000
   139d8:	udiv	r2, r2, r1
   139dc:	cmp	r2, r0
   139e0:	bcs	13a00 <putchar_unlocked@plt+0x2b88>
   139e4:	push	{fp, lr}
   139e8:	mov	fp, sp
   139ec:	bl	10dc4 <__errno_location@plt>
   139f0:	mov	r1, #12
   139f4:	str	r1, [r0]
   139f8:	mov	r0, #0
   139fc:	pop	{fp, pc}
   13a00:	b	10c74 <calloc@plt>
   13a04:	cmp	r0, #0
   13a08:	movweq	r0, #1
   13a0c:	cmn	r0, #1
   13a10:	ble	13a18 <putchar_unlocked@plt+0x2ba0>
   13a14:	b	10d58 <malloc@plt>
   13a18:	push	{fp, lr}
   13a1c:	mov	fp, sp
   13a20:	bl	10dc4 <__errno_location@plt>
   13a24:	mov	r1, #12
   13a28:	str	r1, [r0]
   13a2c:	mov	r0, #0
   13a30:	pop	{fp, pc}
   13a34:	push	{fp, lr}
   13a38:	mov	fp, sp
   13a3c:	cmp	r0, #0
   13a40:	beq	13a5c <putchar_unlocked@plt+0x2be4>
   13a44:	cmp	r1, #0
   13a48:	beq	13a68 <putchar_unlocked@plt+0x2bf0>
   13a4c:	cmn	r1, #1
   13a50:	ble	13a70 <putchar_unlocked@plt+0x2bf8>
   13a54:	pop	{fp, lr}
   13a58:	b	10cec <realloc@plt>
   13a5c:	mov	r0, r1
   13a60:	pop	{fp, lr}
   13a64:	b	13a04 <putchar_unlocked@plt+0x2b8c>
   13a68:	bl	13c7c <putchar_unlocked@plt+0x2e04>
   13a6c:	b	13a7c <putchar_unlocked@plt+0x2c04>
   13a70:	bl	10dc4 <__errno_location@plt>
   13a74:	mov	r1, #12
   13a78:	str	r1, [r0]
   13a7c:	mov	r0, #0
   13a80:	pop	{fp, pc}
   13a84:	sub	r0, r0, #1
   13a88:	ldrb	r3, [r0, #1]!
   13a8c:	cmp	r3, #47	; 0x2f
   13a90:	beq	13a88 <putchar_unlocked@plt+0x2c10>
   13a94:	mov	r2, #0
   13a98:	mov	r1, r0
   13a9c:	uxtb	r3, r3
   13aa0:	cmp	r3, #47	; 0x2f
   13aa4:	beq	13ac0 <putchar_unlocked@plt+0x2c48>
   13aa8:	cmp	r3, #0
   13aac:	bxeq	lr
   13ab0:	tst	r2, #1
   13ab4:	mov	r2, #0
   13ab8:	movne	r0, r1
   13abc:	b	13ac4 <putchar_unlocked@plt+0x2c4c>
   13ac0:	mov	r2, #1
   13ac4:	ldrb	r3, [r1, #1]!
   13ac8:	b	13a9c <putchar_unlocked@plt+0x2c24>
   13acc:	push	{r4, sl, fp, lr}
   13ad0:	add	fp, sp, #8
   13ad4:	mov	r4, r0
   13ad8:	bl	10db8 <strlen@plt>
   13adc:	mov	r1, r0
   13ae0:	sub	r2, r4, #1
   13ae4:	mov	r0, r1
   13ae8:	cmp	r1, #2
   13aec:	bcc	13b00 <putchar_unlocked@plt+0x2c88>
   13af0:	ldrb	r3, [r2, r0]
   13af4:	sub	r1, r0, #1
   13af8:	cmp	r3, #47	; 0x2f
   13afc:	beq	13ae4 <putchar_unlocked@plt+0x2c6c>
   13b00:	pop	{r4, sl, fp, pc}
   13b04:	push	{r4, r5, r6, sl, fp, lr}
   13b08:	add	fp, sp, #16
   13b0c:	mov	r4, r0
   13b10:	bl	10d28 <__fpending@plt>
   13b14:	mov	r5, r0
   13b18:	mov	r0, r4
   13b1c:	bl	10d34 <ferror_unlocked@plt>
   13b20:	mov	r6, r0
   13b24:	mov	r0, r4
   13b28:	bl	13b84 <putchar_unlocked@plt+0x2d0c>
   13b2c:	cmp	r6, #0
   13b30:	beq	13b50 <putchar_unlocked@plt+0x2cd8>
   13b34:	mvn	r4, #0
   13b38:	cmp	r0, #0
   13b3c:	bne	13b7c <putchar_unlocked@plt+0x2d04>
   13b40:	bl	10dc4 <__errno_location@plt>
   13b44:	mov	r1, #0
   13b48:	str	r1, [r0]
   13b4c:	b	13b7c <putchar_unlocked@plt+0x2d04>
   13b50:	cmp	r0, #0
   13b54:	mov	r4, r0
   13b58:	mvnne	r4, #0
   13b5c:	cmp	r5, #0
   13b60:	bne	13b7c <putchar_unlocked@plt+0x2d04>
   13b64:	cmp	r0, #0
   13b68:	beq	13b7c <putchar_unlocked@plt+0x2d04>
   13b6c:	bl	10dc4 <__errno_location@plt>
   13b70:	ldr	r0, [r0]
   13b74:	subs	r4, r0, #9
   13b78:	mvnne	r4, #0
   13b7c:	mov	r0, r4
   13b80:	pop	{r4, r5, r6, sl, fp, pc}
   13b84:	push	{r4, r5, r6, sl, fp, lr}
   13b88:	add	fp, sp, #16
   13b8c:	sub	sp, sp, #8
   13b90:	mov	r4, r0
   13b94:	bl	10df4 <fileno@plt>
   13b98:	cmn	r0, #1
   13b9c:	ble	13c10 <putchar_unlocked@plt+0x2d98>
   13ba0:	mov	r0, r4
   13ba4:	bl	10d70 <__freading@plt>
   13ba8:	cmp	r0, #0
   13bac:	beq	13bd8 <putchar_unlocked@plt+0x2d60>
   13bb0:	mov	r0, r4
   13bb4:	bl	10df4 <fileno@plt>
   13bb8:	mov	r1, #1
   13bbc:	mov	r2, #0
   13bc0:	mov	r3, #0
   13bc4:	str	r1, [sp]
   13bc8:	bl	10d10 <lseek64@plt>
   13bcc:	and	r0, r0, r1
   13bd0:	cmn	r0, #1
   13bd4:	beq	13c10 <putchar_unlocked@plt+0x2d98>
   13bd8:	mov	r0, r4
   13bdc:	bl	13c20 <putchar_unlocked@plt+0x2da8>
   13be0:	cmp	r0, #0
   13be4:	beq	13c10 <putchar_unlocked@plt+0x2d98>
   13be8:	bl	10dc4 <__errno_location@plt>
   13bec:	ldr	r6, [r0]
   13bf0:	mov	r5, r0
   13bf4:	mov	r0, r4
   13bf8:	bl	10e0c <fclose@plt>
   13bfc:	cmp	r6, #0
   13c00:	strne	r6, [r5]
   13c04:	mvnne	r0, #0
   13c08:	sub	sp, fp, #16
   13c0c:	pop	{r4, r5, r6, sl, fp, pc}
   13c10:	mov	r0, r4
   13c14:	sub	sp, fp, #16
   13c18:	pop	{r4, r5, r6, sl, fp, lr}
   13c1c:	b	10e0c <fclose@plt>
   13c20:	push	{r4, sl, fp, lr}
   13c24:	add	fp, sp, #8
   13c28:	sub	sp, sp, #8
   13c2c:	mov	r4, r0
   13c30:	cmp	r0, #0
   13c34:	beq	13c6c <putchar_unlocked@plt+0x2df4>
   13c38:	mov	r0, r4
   13c3c:	bl	10d70 <__freading@plt>
   13c40:	cmp	r0, #0
   13c44:	beq	13c6c <putchar_unlocked@plt+0x2df4>
   13c48:	ldrb	r0, [r4, #1]
   13c4c:	tst	r0, #1
   13c50:	beq	13c6c <putchar_unlocked@plt+0x2df4>
   13c54:	mov	r0, #1
   13c58:	mov	r2, #0
   13c5c:	mov	r3, #0
   13c60:	str	r0, [sp]
   13c64:	mov	r0, r4
   13c68:	bl	13ca4 <putchar_unlocked@plt+0x2e2c>
   13c6c:	mov	r0, r4
   13c70:	sub	sp, fp, #8
   13c74:	pop	{r4, sl, fp, lr}
   13c78:	b	10c98 <fflush@plt>
   13c7c:	push	{r4, r5, r6, sl, fp, lr}
   13c80:	add	fp, sp, #16
   13c84:	mov	r4, r0
   13c88:	bl	10dc4 <__errno_location@plt>
   13c8c:	ldr	r6, [r0]
   13c90:	mov	r5, r0
   13c94:	mov	r0, r4
   13c98:	bl	10ca4 <free@plt>
   13c9c:	str	r6, [r5]
   13ca0:	pop	{r4, r5, r6, sl, fp, pc}
   13ca4:	push	{r4, r5, r6, r7, fp, lr}
   13ca8:	add	fp, sp, #16
   13cac:	sub	sp, sp, #8
   13cb0:	mov	r4, r0
   13cb4:	ldr	r0, [r0, #4]
   13cb8:	mov	r5, r3
   13cbc:	mov	r6, r2
   13cc0:	ldr	r1, [r4, #8]
   13cc4:	cmp	r1, r0
   13cc8:	bne	13ce4 <putchar_unlocked@plt+0x2e6c>
   13ccc:	ldrd	r0, [r4, #16]
   13cd0:	cmp	r1, r0
   13cd4:	bne	13ce4 <putchar_unlocked@plt+0x2e6c>
   13cd8:	ldr	r0, [r4, #36]	; 0x24
   13cdc:	cmp	r0, #0
   13ce0:	beq	13cfc <putchar_unlocked@plt+0x2e84>
   13ce4:	mov	r0, r4
   13ce8:	mov	r2, r6
   13cec:	mov	r3, r5
   13cf0:	sub	sp, fp, #16
   13cf4:	pop	{r4, r5, r6, r7, fp, lr}
   13cf8:	b	10e18 <fseeko64@plt>
   13cfc:	ldr	r7, [fp, #8]
   13d00:	mov	r0, r4
   13d04:	bl	10df4 <fileno@plt>
   13d08:	mov	r2, r6
   13d0c:	mov	r3, r5
   13d10:	str	r7, [sp]
   13d14:	bl	10d10 <lseek64@plt>
   13d18:	and	r2, r0, r1
   13d1c:	cmn	r2, #1
   13d20:	beq	13d3c <putchar_unlocked@plt+0x2ec4>
   13d24:	strd	r0, [r4, #80]	; 0x50
   13d28:	ldr	r0, [r4]
   13d2c:	bic	r0, r0, #16
   13d30:	str	r0, [r4]
   13d34:	mov	r0, #0
   13d38:	b	13d40 <putchar_unlocked@plt+0x2ec8>
   13d3c:	mvn	r0, #0
   13d40:	sub	sp, fp, #16
   13d44:	pop	{r4, r5, r6, r7, fp, pc}
   13d48:	push	{fp, lr}
   13d4c:	mov	fp, sp
   13d50:	mov	r0, #14
   13d54:	bl	10e3c <nl_langinfo@plt>
   13d58:	movw	r1, #16518	; 0x4086
   13d5c:	cmp	r0, #0
   13d60:	movt	r1, #1
   13d64:	movne	r1, r0
   13d68:	movw	r0, #18449	; 0x4811
   13d6c:	ldrb	r2, [r1]
   13d70:	movt	r0, #1
   13d74:	cmp	r2, #0
   13d78:	movne	r0, r1
   13d7c:	pop	{fp, pc}
   13d80:	push	{r4, r5, r6, r7, fp, lr}
   13d84:	add	fp, sp, #16
   13d88:	sub	sp, sp, #8
   13d8c:	cmp	r0, #0
   13d90:	add	r5, sp, #4
   13d94:	mov	r7, r2
   13d98:	mov	r4, r1
   13d9c:	movne	r5, r0
   13da0:	mov	r0, r5
   13da4:	bl	10d40 <mbrtowc@plt>
   13da8:	mov	r6, r0
   13dac:	cmp	r7, #0
   13db0:	beq	13dd8 <putchar_unlocked@plt+0x2f60>
   13db4:	cmn	r6, #2
   13db8:	bcc	13dd8 <putchar_unlocked@plt+0x2f60>
   13dbc:	mov	r0, #0
   13dc0:	bl	13e20 <putchar_unlocked@plt+0x2fa8>
   13dc4:	cmp	r0, #0
   13dc8:	bne	13dd8 <putchar_unlocked@plt+0x2f60>
   13dcc:	ldrb	r0, [r4]
   13dd0:	mov	r6, #1
   13dd4:	str	r0, [r5]
   13dd8:	mov	r0, r6
   13ddc:	sub	sp, fp, #16
   13de0:	pop	{r4, r5, r6, r7, fp, pc}
   13de4:	cmp	r2, #0
   13de8:	beq	13e18 <putchar_unlocked@plt+0x2fa0>
   13dec:	mvn	r3, #0
   13df0:	udiv	r3, r3, r2
   13df4:	cmp	r3, r1
   13df8:	bcs	13e18 <putchar_unlocked@plt+0x2fa0>
   13dfc:	push	{fp, lr}
   13e00:	mov	fp, sp
   13e04:	bl	10dc4 <__errno_location@plt>
   13e08:	mov	r1, #12
   13e0c:	str	r1, [r0]
   13e10:	mov	r0, #0
   13e14:	pop	{fp, pc}
   13e18:	mul	r1, r2, r1
   13e1c:	b	13a34 <putchar_unlocked@plt+0x2bbc>
   13e20:	push	{r4, sl, fp, lr}
   13e24:	add	fp, sp, #8
   13e28:	sub	sp, sp, #264	; 0x108
   13e2c:	add	r1, sp, #7
   13e30:	movw	r2, #257	; 0x101
   13e34:	bl	13e8c <putchar_unlocked@plt+0x3014>
   13e38:	mov	r4, #0
   13e3c:	cmp	r0, #0
   13e40:	bne	13e80 <putchar_unlocked@plt+0x3008>
   13e44:	movw	r1, #18455	; 0x4817
   13e48:	add	r0, sp, #7
   13e4c:	mov	r2, #2
   13e50:	movt	r1, #1
   13e54:	bl	10dac <bcmp@plt>
   13e58:	cmp	r0, #0
   13e5c:	beq	13e80 <putchar_unlocked@plt+0x3008>
   13e60:	movw	r1, #18457	; 0x4819
   13e64:	add	r0, sp, #7
   13e68:	mov	r2, #6
   13e6c:	movt	r1, #1
   13e70:	bl	10dac <bcmp@plt>
   13e74:	cmp	r0, #0
   13e78:	mov	r4, r0
   13e7c:	movwne	r4, #1
   13e80:	mov	r0, r4
   13e84:	sub	sp, fp, #8
   13e88:	pop	{r4, sl, fp, pc}
   13e8c:	push	{r4, r5, r6, r7, fp, lr}
   13e90:	add	fp, sp, #16
   13e94:	mov	r4, r1
   13e98:	mov	r1, #0
   13e9c:	mov	r6, r2
   13ea0:	bl	10e24 <setlocale@plt>
   13ea4:	cmp	r0, #0
   13ea8:	beq	13ed4 <putchar_unlocked@plt+0x305c>
   13eac:	mov	r7, r0
   13eb0:	bl	10db8 <strlen@plt>
   13eb4:	cmp	r0, r6
   13eb8:	bcs	13ee8 <putchar_unlocked@plt+0x3070>
   13ebc:	add	r2, r0, #1
   13ec0:	mov	r0, r4
   13ec4:	mov	r1, r7
   13ec8:	bl	10cbc <memcpy@plt>
   13ecc:	mov	r5, #0
   13ed0:	b	13f10 <putchar_unlocked@plt+0x3098>
   13ed4:	cmp	r6, #0
   13ed8:	mov	r5, #22
   13edc:	movne	r0, #0
   13ee0:	strbne	r0, [r4]
   13ee4:	b	13f10 <putchar_unlocked@plt+0x3098>
   13ee8:	mov	r5, #34	; 0x22
   13eec:	cmp	r6, #0
   13ef0:	beq	13f10 <putchar_unlocked@plt+0x3098>
   13ef4:	sub	r6, r6, #1
   13ef8:	mov	r0, r4
   13efc:	mov	r1, r7
   13f00:	mov	r2, r6
   13f04:	bl	10cbc <memcpy@plt>
   13f08:	mov	r0, #0
   13f0c:	strb	r0, [r4, r6]
   13f10:	mov	r0, r5
   13f14:	pop	{r4, r5, r6, r7, fp, pc}
   13f18:	mov	r1, #0
   13f1c:	b	10e24 <setlocale@plt>
   13f20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f24:	mov	r7, r0
   13f28:	ldr	r6, [pc, #72]	; 13f78 <putchar_unlocked@plt+0x3100>
   13f2c:	ldr	r5, [pc, #72]	; 13f7c <putchar_unlocked@plt+0x3104>
   13f30:	add	r6, pc, r6
   13f34:	add	r5, pc, r5
   13f38:	sub	r6, r6, r5
   13f3c:	mov	r8, r1
   13f40:	mov	r9, r2
   13f44:	bl	10c54 <calloc@plt-0x20>
   13f48:	asrs	r6, r6, #2
   13f4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f50:	mov	r4, #0
   13f54:	add	r4, r4, #1
   13f58:	ldr	r3, [r5], #4
   13f5c:	mov	r2, r9
   13f60:	mov	r1, r8
   13f64:	mov	r0, r7
   13f68:	blx	r3
   13f6c:	cmp	r6, r4
   13f70:	bne	13f54 <putchar_unlocked@plt+0x30dc>
   13f74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f78:	ldrdeq	r0, [r1], -r4
   13f7c:	andeq	r0, r1, ip, asr #31
   13f80:	bx	lr
   13f84:	ldr	r3, [pc, #12]	; 13f98 <putchar_unlocked@plt+0x3120>
   13f88:	mov	r1, #0
   13f8c:	add	r3, pc, r3
   13f90:	ldr	r2, [r3]
   13f94:	b	10dd0 <__cxa_atexit@plt>
   13f98:	andeq	r1, r1, r0, lsr r1

Disassembly of section .fini:

00013f9c <.fini>:
   13f9c:	push	{r3, lr}
   13fa0:	pop	{r3, pc}
