
../repos/coreutils/src/truncate:     file format elf32-littlearm


Disassembly of section .init:

00010d84 <.init>:
   10d84:	push	{r3, lr}
   10d88:	bl	11044 <__assert_fail@plt+0x48>
   10d8c:	pop	{r3, pc}

Disassembly of section .plt:

00010d90 <calloc@plt-0x14>:
   10d90:	push	{lr}		; (str lr, [sp, #-4]!)
   10d94:	ldr	lr, [pc, #4]	; 10da0 <calloc@plt-0x4>
   10d98:	add	lr, pc, lr
   10d9c:	ldr	pc, [lr, #8]!
   10da0:	andeq	pc, r1, r0, ror #4

00010da4 <calloc@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #126976	; 0x1f000
   10dac:	ldr	pc, [ip, #608]!	; 0x260

00010db0 <fputs_unlocked@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #126976	; 0x1f000
   10db8:	ldr	pc, [ip, #600]!	; 0x258

00010dbc <raise@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #126976	; 0x1f000
   10dc4:	ldr	pc, [ip, #592]!	; 0x250

00010dc8 <strcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #126976	; 0x1f000
   10dd0:	ldr	pc, [ip, #584]!	; 0x248

00010dd4 <printf@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #126976	; 0x1f000
   10ddc:	ldr	pc, [ip, #576]!	; 0x240

00010de0 <fflush@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #126976	; 0x1f000
   10de8:	ldr	pc, [ip, #568]!	; 0x238

00010dec <free@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #126976	; 0x1f000
   10df4:	ldr	pc, [ip, #560]!	; 0x230

00010df8 <_exit@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #126976	; 0x1f000
   10e00:	ldr	pc, [ip, #552]!	; 0x228

00010e04 <memcpy@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #126976	; 0x1f000
   10e0c:	ldr	pc, [ip, #544]!	; 0x220

00010e10 <mbsinit@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #126976	; 0x1f000
   10e18:	ldr	pc, [ip, #536]!	; 0x218

00010e1c <ftruncate64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #126976	; 0x1f000
   10e24:	ldr	pc, [ip, #528]!	; 0x210

00010e28 <memcmp@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #126976	; 0x1f000
   10e30:	ldr	pc, [ip, #520]!	; 0x208

00010e34 <realloc@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #126976	; 0x1f000
   10e3c:	ldr	pc, [ip, #512]!	; 0x200

00010e40 <textdomain@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #126976	; 0x1f000
   10e48:	ldr	pc, [ip, #504]!	; 0x1f8

00010e4c <iswprint@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #126976	; 0x1f000
   10e54:	ldr	pc, [ip, #496]!	; 0x1f0

00010e58 <__fxstat64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #126976	; 0x1f000
   10e60:	ldr	pc, [ip, #488]!	; 0x1e8

00010e64 <lseek64@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #126976	; 0x1f000
   10e6c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e70 <__ctype_get_mb_cur_max@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #126976	; 0x1f000
   10e78:	ldr	pc, [ip, #472]!	; 0x1d8

00010e7c <__fpending@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #126976	; 0x1f000
   10e84:	ldr	pc, [ip, #464]!	; 0x1d0

00010e88 <ferror_unlocked@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #126976	; 0x1f000
   10e90:	ldr	pc, [ip, #456]!	; 0x1c8

00010e94 <mbrtowc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #126976	; 0x1f000
   10e9c:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea0 <error@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #126976	; 0x1f000
   10ea8:	ldr	pc, [ip, #440]!	; 0x1b8

00010eac <open64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #126976	; 0x1f000
   10eb4:	ldr	pc, [ip, #432]!	; 0x1b0

00010eb8 <malloc@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #126976	; 0x1f000
   10ec0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec4 <__libc_start_main@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #126976	; 0x1f000
   10ecc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed0 <__freading@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #126976	; 0x1f000
   10ed8:	ldr	pc, [ip, #408]!	; 0x198

00010edc <__gmon_start__@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #126976	; 0x1f000
   10ee4:	ldr	pc, [ip, #400]!	; 0x190

00010ee8 <getopt_long@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #126976	; 0x1f000
   10ef0:	ldr	pc, [ip, #392]!	; 0x188

00010ef4 <__ctype_b_loc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #126976	; 0x1f000
   10efc:	ldr	pc, [ip, #384]!	; 0x180

00010f00 <exit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #126976	; 0x1f000
   10f08:	ldr	pc, [ip, #376]!	; 0x178

00010f0c <gettext@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #126976	; 0x1f000
   10f14:	ldr	pc, [ip, #368]!	; 0x170

00010f18 <strlen@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #126976	; 0x1f000
   10f20:	ldr	pc, [ip, #360]!	; 0x168

00010f24 <strchr@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #126976	; 0x1f000
   10f2c:	ldr	pc, [ip, #352]!	; 0x160

00010f30 <fprintf@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #126976	; 0x1f000
   10f38:	ldr	pc, [ip, #344]!	; 0x158

00010f3c <__errno_location@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #126976	; 0x1f000
   10f44:	ldr	pc, [ip, #336]!	; 0x150

00010f48 <__cxa_atexit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #126976	; 0x1f000
   10f50:	ldr	pc, [ip, #328]!	; 0x148

00010f54 <memset@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #126976	; 0x1f000
   10f5c:	ldr	pc, [ip, #320]!	; 0x140

00010f60 <fileno@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #126976	; 0x1f000
   10f68:	ldr	pc, [ip, #312]!	; 0x138

00010f6c <strtoimax@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #126976	; 0x1f000
   10f74:	ldr	pc, [ip, #304]!	; 0x130

00010f78 <fclose@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #126976	; 0x1f000
   10f80:	ldr	pc, [ip, #296]!	; 0x128

00010f84 <fseeko64@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #126976	; 0x1f000
   10f8c:	ldr	pc, [ip, #288]!	; 0x120

00010f90 <setlocale@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #126976	; 0x1f000
   10f98:	ldr	pc, [ip, #280]!	; 0x118

00010f9c <strrchr@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #126976	; 0x1f000
   10fa4:	ldr	pc, [ip, #272]!	; 0x110

00010fa8 <nl_langinfo@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #126976	; 0x1f000
   10fb0:	ldr	pc, [ip, #264]!	; 0x108

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #126976	; 0x1f000
   10fbc:	ldr	pc, [ip, #256]!	; 0x100

00010fc0 <__xstat64@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #126976	; 0x1f000
   10fc8:	ldr	pc, [ip, #248]!	; 0xf8

00010fcc <fputs@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #126976	; 0x1f000
   10fd4:	ldr	pc, [ip, #240]!	; 0xf0

00010fd8 <strncmp@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #126976	; 0x1f000
   10fe0:	ldr	pc, [ip, #232]!	; 0xe8

00010fe4 <abort@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #126976	; 0x1f000
   10fec:	ldr	pc, [ip, #224]!	; 0xe0

00010ff0 <close@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #126976	; 0x1f000
   10ff8:	ldr	pc, [ip, #216]!	; 0xd8

00010ffc <__assert_fail@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #126976	; 0x1f000
   11004:	ldr	pc, [ip, #208]!	; 0xd0

Disassembly of section .text:

00011008 <.text>:
   11008:	mov	fp, #0
   1100c:	mov	lr, #0
   11010:	pop	{r1}		; (ldr r1, [sp], #4)
   11014:	mov	r2, sp
   11018:	push	{r2}		; (str r2, [sp, #-4]!)
   1101c:	push	{r0}		; (str r0, [sp, #-4]!)
   11020:	ldr	ip, [pc, #16]	; 11038 <__assert_fail@plt+0x3c>
   11024:	push	{ip}		; (str ip, [sp, #-4]!)
   11028:	ldr	r0, [pc, #12]	; 1103c <__assert_fail@plt+0x40>
   1102c:	ldr	r3, [pc, #12]	; 11040 <__assert_fail@plt+0x44>
   11030:	bl	10ec4 <__libc_start_main@plt>
   11034:	bl	10fe4 <abort@plt>
   11038:	andeq	lr, r1, r4, lsl #12
   1103c:	andeq	r1, r1, ip, lsl #9
   11040:	andeq	lr, r1, r4, lsr #11
   11044:	ldr	r3, [pc, #20]	; 11060 <__assert_fail@plt+0x64>
   11048:	ldr	r2, [pc, #20]	; 11064 <__assert_fail@plt+0x68>
   1104c:	add	r3, pc, r3
   11050:	ldr	r2, [r3, r2]
   11054:	cmp	r2, #0
   11058:	bxeq	lr
   1105c:	b	10edc <__gmon_start__@plt>
   11060:	andeq	lr, r1, ip, lsr #31
   11064:	ldrdeq	r0, [r0], -r8
   11068:	ldr	r0, [pc, #24]	; 11088 <__assert_fail@plt+0x8c>
   1106c:	ldr	r3, [pc, #24]	; 1108c <__assert_fail@plt+0x90>
   11070:	cmp	r3, r0
   11074:	bxeq	lr
   11078:	ldr	r3, [pc, #16]	; 11090 <__assert_fail@plt+0x94>
   1107c:	cmp	r3, #0
   11080:	bxeq	lr
   11084:	bx	r3
   11088:	andeq	r0, r3, ip, lsr #2
   1108c:	andeq	r0, r3, ip, lsr #2
   11090:	andeq	r0, r0, r0
   11094:	ldr	r0, [pc, #36]	; 110c0 <__assert_fail@plt+0xc4>
   11098:	ldr	r1, [pc, #36]	; 110c4 <__assert_fail@plt+0xc8>
   1109c:	sub	r1, r1, r0
   110a0:	asr	r1, r1, #2
   110a4:	add	r1, r1, r1, lsr #31
   110a8:	asrs	r1, r1, #1
   110ac:	bxeq	lr
   110b0:	ldr	r3, [pc, #16]	; 110c8 <__assert_fail@plt+0xcc>
   110b4:	cmp	r3, #0
   110b8:	bxeq	lr
   110bc:	bx	r3
   110c0:	andeq	r0, r3, ip, lsr #2
   110c4:	andeq	r0, r3, ip, lsr #2
   110c8:	andeq	r0, r0, r0
   110cc:	push	{r4, lr}
   110d0:	ldr	r4, [pc, #24]	; 110f0 <__assert_fail@plt+0xf4>
   110d4:	ldrb	r3, [r4]
   110d8:	cmp	r3, #0
   110dc:	popne	{r4, pc}
   110e0:	bl	11068 <__assert_fail@plt+0x6c>
   110e4:	mov	r3, #1
   110e8:	strb	r3, [r4]
   110ec:	pop	{r4, pc}
   110f0:	andeq	r0, r3, ip, asr #2
   110f4:	b	11094 <__assert_fail@plt+0x98>
   110f8:	push	{fp, lr}
   110fc:	mov	fp, sp
   11100:	sub	sp, sp, #48	; 0x30
   11104:	str	r0, [fp, #-4]
   11108:	ldr	r0, [fp, #-4]
   1110c:	cmp	r0, #0
   11110:	beq	1115c <__assert_fail@plt+0x160>
   11114:	b	11118 <__assert_fail@plt+0x11c>
   11118:	movw	r0, #320	; 0x140
   1111c:	movt	r0, #3
   11120:	ldr	r0, [r0]
   11124:	movw	r1, #58956	; 0xe64c
   11128:	movt	r1, #1
   1112c:	str	r0, [fp, #-8]
   11130:	mov	r0, r1
   11134:	bl	10f0c <gettext@plt>
   11138:	movw	r1, #352	; 0x160
   1113c:	movt	r1, #3
   11140:	ldr	r2, [r1]
   11144:	ldr	r1, [fp, #-8]
   11148:	str	r0, [fp, #-12]
   1114c:	mov	r0, r1
   11150:	ldr	r1, [fp, #-12]
   11154:	bl	10f30 <fprintf@plt>
   11158:	b	11288 <__assert_fail@plt+0x28c>
   1115c:	movw	r0, #58995	; 0xe673
   11160:	movt	r0, #1
   11164:	bl	10f0c <gettext@plt>
   11168:	movw	r1, #352	; 0x160
   1116c:	movt	r1, #3
   11170:	ldr	r1, [r1]
   11174:	bl	10dd4 <printf@plt>
   11178:	movw	r1, #59024	; 0xe690
   1117c:	movt	r1, #1
   11180:	str	r0, [fp, #-16]
   11184:	mov	r0, r1
   11188:	bl	10f0c <gettext@plt>
   1118c:	movw	r1, #324	; 0x144
   11190:	movt	r1, #3
   11194:	ldr	r1, [r1]
   11198:	bl	10db0 <fputs_unlocked@plt>
   1119c:	str	r0, [fp, #-20]	; 0xffffffec
   111a0:	bl	11290 <__assert_fail@plt+0x294>
   111a4:	movw	r0, #59299	; 0xe7a3
   111a8:	movt	r0, #1
   111ac:	bl	10f0c <gettext@plt>
   111b0:	movw	r1, #324	; 0x144
   111b4:	movt	r1, #3
   111b8:	ldr	r1, [r1]
   111bc:	bl	10db0 <fputs_unlocked@plt>
   111c0:	movw	r1, #59349	; 0xe7d5
   111c4:	movt	r1, #1
   111c8:	str	r0, [sp, #24]
   111cc:	mov	r0, r1
   111d0:	bl	10f0c <gettext@plt>
   111d4:	movw	r1, #324	; 0x144
   111d8:	movt	r1, #3
   111dc:	ldr	r1, [r1]
   111e0:	bl	10db0 <fputs_unlocked@plt>
   111e4:	movw	r1, #59426	; 0xe822
   111e8:	movt	r1, #1
   111ec:	str	r0, [sp, #20]
   111f0:	mov	r0, r1
   111f4:	bl	10f0c <gettext@plt>
   111f8:	movw	r1, #324	; 0x144
   111fc:	movt	r1, #3
   11200:	ldr	r1, [r1]
   11204:	bl	10db0 <fputs_unlocked@plt>
   11208:	movw	r1, #59538	; 0xe892
   1120c:	movt	r1, #1
   11210:	str	r0, [sp, #16]
   11214:	mov	r0, r1
   11218:	bl	10f0c <gettext@plt>
   1121c:	movw	r1, #324	; 0x144
   11220:	movt	r1, #3
   11224:	ldr	r1, [r1]
   11228:	bl	10db0 <fputs_unlocked@plt>
   1122c:	movw	r1, #59583	; 0xe8bf
   11230:	movt	r1, #1
   11234:	str	r0, [sp, #12]
   11238:	mov	r0, r1
   1123c:	bl	10f0c <gettext@plt>
   11240:	movw	r1, #324	; 0x144
   11244:	movt	r1, #3
   11248:	ldr	r1, [r1]
   1124c:	bl	10db0 <fputs_unlocked@plt>
   11250:	str	r0, [sp, #8]
   11254:	bl	112b8 <__assert_fail@plt+0x2bc>
   11258:	movw	r0, #59637	; 0xe8f5
   1125c:	movt	r0, #1
   11260:	bl	10f0c <gettext@plt>
   11264:	movw	r1, #324	; 0x144
   11268:	movt	r1, #3
   1126c:	ldr	r1, [r1]
   11270:	bl	10db0 <fputs_unlocked@plt>
   11274:	movw	r1, #59828	; 0xe9b4
   11278:	movt	r1, #1
   1127c:	str	r0, [sp, #4]
   11280:	mov	r0, r1
   11284:	bl	112e0 <__assert_fail@plt+0x2e4>
   11288:	ldr	r0, [fp, #-4]
   1128c:	bl	10f00 <exit@plt>
   11290:	push	{fp, lr}
   11294:	mov	fp, sp
   11298:	movw	r0, #60223	; 0xeb3f
   1129c:	movt	r0, #1
   112a0:	bl	10f0c <gettext@plt>
   112a4:	movw	r1, #324	; 0x144
   112a8:	movt	r1, #3
   112ac:	ldr	r1, [r1]
   112b0:	bl	10db0 <fputs_unlocked@plt>
   112b4:	pop	{fp, pc}
   112b8:	push	{fp, lr}
   112bc:	mov	fp, sp
   112c0:	movw	r0, #60298	; 0xeb8a
   112c4:	movt	r0, #1
   112c8:	bl	10f0c <gettext@plt>
   112cc:	movw	r1, #324	; 0x144
   112d0:	movt	r1, #3
   112d4:	ldr	r1, [r1]
   112d8:	bl	10db0 <fputs_unlocked@plt>
   112dc:	pop	{fp, pc}
   112e0:	push	{fp, lr}
   112e4:	mov	fp, sp
   112e8:	sub	sp, sp, #88	; 0x58
   112ec:	add	r1, sp, #28
   112f0:	movw	r2, #61132	; 0xeecc
   112f4:	movt	r2, #1
   112f8:	str	r0, [fp, #-4]
   112fc:	mov	r0, r1
   11300:	str	r1, [sp, #12]
   11304:	mov	r1, r2
   11308:	movw	r2, #56	; 0x38
   1130c:	bl	10e04 <memcpy@plt>
   11310:	ldr	r0, [fp, #-4]
   11314:	str	r0, [sp, #24]
   11318:	ldr	r0, [sp, #12]
   1131c:	str	r0, [sp, #20]
   11320:	ldr	r0, [sp, #20]
   11324:	ldr	r0, [r0]
   11328:	movw	r1, #0
   1132c:	cmp	r0, r1
   11330:	movw	r0, #0
   11334:	str	r0, [sp, #8]
   11338:	beq	11364 <__assert_fail@plt+0x368>
   1133c:	ldr	r0, [fp, #-4]
   11340:	ldr	r1, [sp, #20]
   11344:	ldr	r1, [r1]
   11348:	bl	10dc8 <strcmp@plt>
   1134c:	cmp	r0, #0
   11350:	movw	r0, #0
   11354:	moveq	r0, #1
   11358:	mvn	r1, #0
   1135c:	eor	r0, r0, r1
   11360:	str	r0, [sp, #8]
   11364:	ldr	r0, [sp, #8]
   11368:	tst	r0, #1
   1136c:	beq	11380 <__assert_fail@plt+0x384>
   11370:	ldr	r0, [sp, #20]
   11374:	add	r0, r0, #8
   11378:	str	r0, [sp, #20]
   1137c:	b	11320 <__assert_fail@plt+0x324>
   11380:	ldr	r0, [sp, #20]
   11384:	ldr	r0, [r0, #4]
   11388:	movw	r1, #0
   1138c:	cmp	r0, r1
   11390:	beq	113a0 <__assert_fail@plt+0x3a4>
   11394:	ldr	r0, [sp, #20]
   11398:	ldr	r0, [r0, #4]
   1139c:	str	r0, [sp, #24]
   113a0:	movw	r0, #60605	; 0xecbd
   113a4:	movt	r0, #1
   113a8:	bl	10f0c <gettext@plt>
   113ac:	movw	r1, #59952	; 0xea30
   113b0:	movt	r1, #1
   113b4:	movw	r2, #60628	; 0xecd4
   113b8:	movt	r2, #1
   113bc:	bl	10dd4 <printf@plt>
   113c0:	movw	r1, #5
   113c4:	str	r0, [sp, #4]
   113c8:	mov	r0, r1
   113cc:	movw	r1, #0
   113d0:	bl	10f90 <setlocale@plt>
   113d4:	str	r0, [sp, #16]
   113d8:	ldr	r0, [sp, #16]
   113dc:	movw	r1, #0
   113e0:	cmp	r0, r1
   113e4:	beq	11420 <__assert_fail@plt+0x424>
   113e8:	ldr	r0, [sp, #16]
   113ec:	movw	r1, #60668	; 0xecfc
   113f0:	movt	r1, #1
   113f4:	movw	r2, #3
   113f8:	bl	10fd8 <strncmp@plt>
   113fc:	cmp	r0, #0
   11400:	beq	11420 <__assert_fail@plt+0x424>
   11404:	movw	r0, #60672	; 0xed00
   11408:	movt	r0, #1
   1140c:	bl	10f0c <gettext@plt>
   11410:	movw	r1, #324	; 0x144
   11414:	movt	r1, #3
   11418:	ldr	r1, [r1]
   1141c:	bl	10db0 <fputs_unlocked@plt>
   11420:	movw	r0, #60743	; 0xed47
   11424:	movt	r0, #1
   11428:	bl	10f0c <gettext@plt>
   1142c:	ldr	r2, [fp, #-4]
   11430:	movw	r1, #60628	; 0xecd4
   11434:	movt	r1, #1
   11438:	bl	10dd4 <printf@plt>
   1143c:	movw	r1, #60770	; 0xed62
   11440:	movt	r1, #1
   11444:	str	r0, [sp]
   11448:	mov	r0, r1
   1144c:	bl	10f0c <gettext@plt>
   11450:	ldr	r1, [sp, #24]
   11454:	ldr	r2, [sp, #24]
   11458:	ldr	r3, [fp, #-4]
   1145c:	cmp	r2, r3
   11460:	movw	r2, #0
   11464:	moveq	r2, #1
   11468:	tst	r2, #1
   1146c:	movw	r2, #60820	; 0xed94
   11470:	movt	r2, #1
   11474:	movw	r3, #60538	; 0xec7a
   11478:	movt	r3, #1
   1147c:	movne	r2, r3
   11480:	bl	10dd4 <printf@plt>
   11484:	mov	sp, fp
   11488:	pop	{fp, pc}
   1148c:	push	{r4, r5, r6, r7, fp, lr}
   11490:	add	fp, sp, #16
   11494:	sub	sp, sp, #344	; 0x158
   11498:	mov	r2, #0
   1149c:	str	r2, [fp, #-20]	; 0xffffffec
   114a0:	str	r0, [fp, #-24]	; 0xffffffe8
   114a4:	str	r1, [fp, #-28]	; 0xffffffe4
   114a8:	strb	r2, [fp, #-29]	; 0xffffffe3
   114ac:	mvn	r0, #0
   114b0:	str	r0, [fp, #-44]	; 0xffffffd4
   114b4:	str	r0, [fp, #-48]	; 0xffffffd0
   114b8:	movw	r0, #0
   114bc:	str	r0, [fp, #-52]	; 0xffffffcc
   114c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114c4:	ldr	r0, [r0]
   114c8:	bl	13e4c <__assert_fail@plt+0x2e50>
   114cc:	movw	r0, #6
   114d0:	movw	r1, #60820	; 0xed94
   114d4:	movt	r1, #1
   114d8:	bl	10f90 <setlocale@plt>
   114dc:	movw	r1, #59956	; 0xea34
   114e0:	movt	r1, #1
   114e4:	str	r0, [sp, #152]	; 0x98
   114e8:	mov	r0, r1
   114ec:	movw	r1, #59837	; 0xe9bd
   114f0:	movt	r1, #1
   114f4:	bl	10fb4 <bindtextdomain@plt>
   114f8:	movw	r1, #59956	; 0xea34
   114fc:	movt	r1, #1
   11500:	str	r0, [sp, #148]	; 0x94
   11504:	mov	r0, r1
   11508:	bl	10e40 <textdomain@plt>
   1150c:	movw	r1, #15660	; 0x3d2c
   11510:	movt	r1, #1
   11514:	str	r0, [sp, #144]	; 0x90
   11518:	mov	r0, r1
   1151c:	bl	1e608 <__assert_fail@plt+0xd60c>
   11520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11524:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11528:	movw	r2, #59861	; 0xe9d5
   1152c:	movt	r2, #1
   11530:	movw	r3, #61020	; 0xee5c
   11534:	movt	r3, #1
   11538:	movw	ip, #0
   1153c:	str	ip, [sp]
   11540:	bl	10ee8 <getopt_long@plt>
   11544:	str	r0, [fp, #-56]	; 0xffffffc8
   11548:	cmn	r0, #1
   1154c:	beq	1194c <__assert_fail@plt+0x950>
   11550:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11554:	cmn	r0, #3
   11558:	str	r0, [sp, #140]	; 0x8c
   1155c:	beq	118f8 <__assert_fail@plt+0x8fc>
   11560:	b	11564 <__assert_fail@plt+0x568>
   11564:	ldr	r0, [sp, #140]	; 0x8c
   11568:	cmn	r0, #2
   1156c:	beq	118f0 <__assert_fail@plt+0x8f4>
   11570:	b	11574 <__assert_fail@plt+0x578>
   11574:	ldr	r0, [sp, #140]	; 0x8c
   11578:	cmp	r0, #99	; 0x63
   1157c:	beq	115b4 <__assert_fail@plt+0x5b8>
   11580:	b	11584 <__assert_fail@plt+0x588>
   11584:	ldr	r0, [sp, #140]	; 0x8c
   11588:	cmp	r0, #111	; 0x6f
   1158c:	beq	115c8 <__assert_fail@plt+0x5cc>
   11590:	b	11594 <__assert_fail@plt+0x598>
   11594:	ldr	r0, [sp, #140]	; 0x8c
   11598:	cmp	r0, #114	; 0x72
   1159c:	beq	115dc <__assert_fail@plt+0x5e0>
   115a0:	b	115a4 <__assert_fail@plt+0x5a8>
   115a4:	ldr	r0, [sp, #140]	; 0x8c
   115a8:	cmp	r0, #115	; 0x73
   115ac:	beq	115f8 <__assert_fail@plt+0x5fc>
   115b0:	b	11940 <__assert_fail@plt+0x944>
   115b4:	movw	r0, #336	; 0x150
   115b8:	movt	r0, #3
   115bc:	movw	r1, #1
   115c0:	strb	r1, [r0]
   115c4:	b	11948 <__assert_fail@plt+0x94c>
   115c8:	movw	r0, #337	; 0x151
   115cc:	movt	r0, #3
   115d0:	movw	r1, #1
   115d4:	strb	r1, [r0]
   115d8:	b	11948 <__assert_fail@plt+0x94c>
   115dc:	movw	r0, #328	; 0x148
   115e0:	movt	r0, #3
   115e4:	ldr	r0, [r0]
   115e8:	movw	r1, #340	; 0x154
   115ec:	movt	r1, #3
   115f0:	str	r0, [r1]
   115f4:	b	11948 <__assert_fail@plt+0x94c>
   115f8:	b	115fc <__assert_fail@plt+0x600>
   115fc:	bl	10ef4 <__ctype_b_loc@plt>
   11600:	ldr	r0, [r0]
   11604:	movw	r1, #328	; 0x148
   11608:	movt	r1, #3
   1160c:	ldr	r1, [r1]
   11610:	ldrb	r1, [r1]
   11614:	str	r0, [sp, #136]	; 0x88
   11618:	mov	r0, r1
   1161c:	bl	11f04 <__assert_fail@plt+0xf08>
   11620:	mov	r1, r0
   11624:	ldr	r2, [sp, #136]	; 0x88
   11628:	add	r0, r2, r0, lsl #1
   1162c:	ldrh	r0, [r0]
   11630:	and	r0, r0, #8192	; 0x2000
   11634:	cmp	r0, #0
   11638:	beq	11654 <__assert_fail@plt+0x658>
   1163c:	movw	r0, #328	; 0x148
   11640:	movt	r0, #3
   11644:	ldr	r1, [r0]
   11648:	add	r1, r1, #1
   1164c:	str	r1, [r0]
   11650:	b	115fc <__assert_fail@plt+0x600>
   11654:	movw	r0, #328	; 0x148
   11658:	movt	r0, #3
   1165c:	ldr	r0, [r0]
   11660:	ldrb	r0, [r0]
   11664:	sub	r0, r0, #37	; 0x25
   11668:	cmp	r0, #25
   1166c:	str	r0, [sp, #132]	; 0x84
   11670:	bhi	11768 <__assert_fail@plt+0x76c>
   11674:	add	r0, pc, #8
   11678:	ldr	r1, [sp, #132]	; 0x84
   1167c:	ldr	r0, [r0, r1, lsl #2]
   11680:	mov	pc, r0
   11684:	andeq	r1, r1, ip, asr #14
   11688:	andeq	r1, r1, r8, ror #14
   1168c:	andeq	r1, r1, r8, ror #14
   11690:	andeq	r1, r1, r8, ror #14
   11694:	andeq	r1, r1, r8, ror #14
   11698:	andeq	r1, r1, r8, ror #14
   1169c:	andeq	r1, r1, r8, ror #14
   116a0:	andeq	r1, r1, r8, ror #14
   116a4:	andeq	r1, r1, r8, ror #14
   116a8:	andeq	r1, r1, r8, ror #14
   116ac:	andeq	r1, r1, ip, lsr #14
   116b0:	andeq	r1, r1, r8, ror #14
   116b4:	andeq	r1, r1, r8, ror #14
   116b8:	andeq	r1, r1, r8, ror #14
   116bc:	andeq	r1, r1, r8, ror #14
   116c0:	andeq	r1, r1, r8, ror #14
   116c4:	andeq	r1, r1, r8, ror #14
   116c8:	andeq	r1, r1, r8, ror #14
   116cc:	andeq	r1, r1, r8, ror #14
   116d0:	andeq	r1, r1, r8, ror #14
   116d4:	andeq	r1, r1, r8, ror #14
   116d8:	andeq	r1, r1, r8, ror #14
   116dc:	andeq	r1, r1, r8, ror #14
   116e0:	andeq	r1, r1, ip, ror #13
   116e4:	andeq	r1, r1, r8, ror #14
   116e8:	andeq	r1, r1, ip, lsl #14
   116ec:	movw	r0, #3
   116f0:	str	r0, [fp, #-52]	; 0xffffffcc
   116f4:	movw	r0, #328	; 0x148
   116f8:	movt	r0, #3
   116fc:	ldr	r1, [r0]
   11700:	add	r1, r1, #1
   11704:	str	r1, [r0]
   11708:	b	11768 <__assert_fail@plt+0x76c>
   1170c:	movw	r0, #2
   11710:	str	r0, [fp, #-52]	; 0xffffffcc
   11714:	movw	r0, #328	; 0x148
   11718:	movt	r0, #3
   1171c:	ldr	r1, [r0]
   11720:	add	r1, r1, #1
   11724:	str	r1, [r0]
   11728:	b	11768 <__assert_fail@plt+0x76c>
   1172c:	movw	r0, #4
   11730:	str	r0, [fp, #-52]	; 0xffffffcc
   11734:	movw	r0, #328	; 0x148
   11738:	movt	r0, #3
   1173c:	ldr	r1, [r0]
   11740:	add	r1, r1, #1
   11744:	str	r1, [r0]
   11748:	b	11768 <__assert_fail@plt+0x76c>
   1174c:	movw	r0, #5
   11750:	str	r0, [fp, #-52]	; 0xffffffcc
   11754:	movw	r0, #328	; 0x148
   11758:	movt	r0, #3
   1175c:	ldr	r1, [r0]
   11760:	add	r1, r1, #1
   11764:	str	r1, [r0]
   11768:	b	1176c <__assert_fail@plt+0x770>
   1176c:	bl	10ef4 <__ctype_b_loc@plt>
   11770:	ldr	r0, [r0]
   11774:	movw	r1, #328	; 0x148
   11778:	movt	r1, #3
   1177c:	ldr	r1, [r1]
   11780:	ldrb	r1, [r1]
   11784:	str	r0, [sp, #128]	; 0x80
   11788:	mov	r0, r1
   1178c:	bl	11f04 <__assert_fail@plt+0xf08>
   11790:	mov	r1, r0
   11794:	ldr	r2, [sp, #128]	; 0x80
   11798:	add	r0, r2, r0, lsl #1
   1179c:	ldrh	r0, [r0]
   117a0:	and	r0, r0, #8192	; 0x2000
   117a4:	cmp	r0, #0
   117a8:	beq	117c4 <__assert_fail@plt+0x7c8>
   117ac:	movw	r0, #328	; 0x148
   117b0:	movt	r0, #3
   117b4:	ldr	r1, [r0]
   117b8:	add	r1, r1, #1
   117bc:	str	r1, [r0]
   117c0:	b	1176c <__assert_fail@plt+0x770>
   117c4:	movw	r0, #328	; 0x148
   117c8:	movt	r0, #3
   117cc:	ldr	r0, [r0]
   117d0:	ldrb	r0, [r0]
   117d4:	cmp	r0, #43	; 0x2b
   117d8:	beq	117f4 <__assert_fail@plt+0x7f8>
   117dc:	movw	r0, #328	; 0x148
   117e0:	movt	r0, #3
   117e4:	ldr	r0, [r0]
   117e8:	ldrb	r0, [r0]
   117ec:	cmp	r0, #45	; 0x2d
   117f0:	bne	11830 <__assert_fail@plt+0x834>
   117f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   117f8:	cmp	r0, #0
   117fc:	beq	11828 <__assert_fail@plt+0x82c>
   11800:	movw	r0, #59868	; 0xe9dc
   11804:	movt	r0, #1
   11808:	bl	10f0c <gettext@plt>
   1180c:	movw	r1, #0
   11810:	str	r0, [sp, #124]	; 0x7c
   11814:	mov	r0, r1
   11818:	ldr	r2, [sp, #124]	; 0x7c
   1181c:	bl	10ea0 <error@plt>
   11820:	movw	r0, #1
   11824:	bl	110f8 <__assert_fail@plt+0xfc>
   11828:	movw	r0, #1
   1182c:	str	r0, [fp, #-52]	; 0xffffffcc
   11830:	movw	r0, #328	; 0x148
   11834:	movt	r0, #3
   11838:	ldr	r0, [r0]
   1183c:	movw	r1, #59920	; 0xea10
   11840:	movt	r1, #1
   11844:	str	r0, [sp, #120]	; 0x78
   11848:	mov	r0, r1
   1184c:	bl	10f0c <gettext@plt>
   11850:	mov	r1, sp
   11854:	mov	r2, #0
   11858:	str	r2, [r1, #16]
   1185c:	str	r0, [r1, #12]
   11860:	movw	r0, #59906	; 0xea02
   11864:	movt	r0, #1
   11868:	str	r0, [r1, #8]
   1186c:	mvn	r0, #-2147483648	; 0x80000000
   11870:	str	r0, [r1, #4]
   11874:	mvn	r0, #0
   11878:	str	r0, [r1]
   1187c:	mov	r3, #-2147483648	; 0x80000000
   11880:	ldr	r0, [sp, #120]	; 0x78
   11884:	bl	19e58 <__assert_fail@plt+0x8e5c>
   11888:	str	r1, [fp, #-36]	; 0xffffffdc
   1188c:	str	r0, [fp, #-40]	; 0xffffffd8
   11890:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11894:	cmp	r0, #5
   11898:	beq	118a8 <__assert_fail@plt+0x8ac>
   1189c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   118a0:	cmp	r0, #4
   118a4:	bne	118e4 <__assert_fail@plt+0x8e8>
   118a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   118ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   118b0:	orr	r0, r0, r1
   118b4:	cmp	r0, #0
   118b8:	bne	118e4 <__assert_fail@plt+0x8e8>
   118bc:	b	118c0 <__assert_fail@plt+0x8c4>
   118c0:	movw	r0, #59935	; 0xea1f
   118c4:	movt	r0, #1
   118c8:	bl	10f0c <gettext@plt>
   118cc:	movw	r1, #1
   118d0:	str	r0, [sp, #116]	; 0x74
   118d4:	mov	r0, r1
   118d8:	movw	r1, #0
   118dc:	ldr	r2, [sp, #116]	; 0x74
   118e0:	bl	10ea0 <error@plt>
   118e4:	movw	r0, #1
   118e8:	strb	r0, [fp, #-29]	; 0xffffffe3
   118ec:	b	11948 <__assert_fail@plt+0x94c>
   118f0:	movw	r0, #0
   118f4:	bl	110f8 <__assert_fail@plt+0xfc>
   118f8:	movw	r0, #324	; 0x144
   118fc:	movt	r0, #3
   11900:	ldr	r0, [r0]
   11904:	movw	r1, #228	; 0xe4
   11908:	movt	r1, #3
   1190c:	ldr	r3, [r1]
   11910:	movw	r1, #59828	; 0xe9b4
   11914:	movt	r1, #1
   11918:	movw	r2, #59952	; 0xea30
   1191c:	movt	r2, #1
   11920:	movw	ip, #59966	; 0xea3e
   11924:	movt	ip, #1
   11928:	str	ip, [sp]
   1192c:	movw	ip, #0
   11930:	str	ip, [sp, #4]
   11934:	bl	16d24 <__assert_fail@plt+0x5d28>
   11938:	movw	r0, #0
   1193c:	bl	10f00 <exit@plt>
   11940:	movw	r0, #1
   11944:	bl	110f8 <__assert_fail@plt+0xfc>
   11948:	b	11520 <__assert_fail@plt+0x524>
   1194c:	movw	r0, #312	; 0x138
   11950:	movt	r0, #3
   11954:	ldr	r0, [r0]
   11958:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1195c:	add	r0, r1, r0, lsl #2
   11960:	str	r0, [fp, #-28]	; 0xffffffe4
   11964:	movw	r0, #312	; 0x138
   11968:	movt	r0, #3
   1196c:	ldr	r0, [r0]
   11970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11974:	sub	r0, r1, r0
   11978:	str	r0, [fp, #-24]	; 0xffffffe8
   1197c:	movw	r0, #340	; 0x154
   11980:	movt	r0, #3
   11984:	ldr	r0, [r0]
   11988:	movw	r1, #0
   1198c:	cmp	r0, r1
   11990:	bne	11a04 <__assert_fail@plt+0xa08>
   11994:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11998:	tst	r0, #1
   1199c:	bne	11a04 <__assert_fail@plt+0xa08>
   119a0:	movw	r0, #59980	; 0xea4c
   119a4:	movt	r0, #1
   119a8:	bl	10f0c <gettext@plt>
   119ac:	movw	r1, #0
   119b0:	str	r0, [sp, #112]	; 0x70
   119b4:	mov	r0, r1
   119b8:	movw	r1, #60013	; 0xea6d
   119bc:	movt	r1, #1
   119c0:	bl	1647c <__assert_fail@plt+0x5480>
   119c4:	movw	r1, #1
   119c8:	str	r0, [sp, #108]	; 0x6c
   119cc:	mov	r0, r1
   119d0:	movw	r1, #60020	; 0xea74
   119d4:	movt	r1, #1
   119d8:	bl	1647c <__assert_fail@plt+0x5480>
   119dc:	movw	r1, #0
   119e0:	str	r0, [sp, #104]	; 0x68
   119e4:	mov	r0, r1
   119e8:	ldr	r2, [sp, #112]	; 0x70
   119ec:	ldr	r3, [sp, #108]	; 0x6c
   119f0:	ldr	ip, [sp, #104]	; 0x68
   119f4:	str	ip, [sp]
   119f8:	bl	10ea0 <error@plt>
   119fc:	movw	r0, #1
   11a00:	bl	110f8 <__assert_fail@plt+0xfc>
   11a04:	movw	r0, #340	; 0x154
   11a08:	movt	r0, #3
   11a0c:	ldr	r0, [r0]
   11a10:	movw	r1, #0
   11a14:	cmp	r0, r1
   11a18:	beq	11a98 <__assert_fail@plt+0xa9c>
   11a1c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11a20:	tst	r0, #1
   11a24:	beq	11a98 <__assert_fail@plt+0xa9c>
   11a28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11a2c:	cmp	r0, #0
   11a30:	bne	11a98 <__assert_fail@plt+0xa9c>
   11a34:	movw	r0, #60032	; 0xea80
   11a38:	movt	r0, #1
   11a3c:	bl	10f0c <gettext@plt>
   11a40:	movw	r1, #0
   11a44:	str	r0, [sp, #100]	; 0x64
   11a48:	mov	r0, r1
   11a4c:	movw	r1, #60013	; 0xea6d
   11a50:	movt	r1, #1
   11a54:	bl	1647c <__assert_fail@plt+0x5480>
   11a58:	movw	r1, #1
   11a5c:	str	r0, [sp, #96]	; 0x60
   11a60:	mov	r0, r1
   11a64:	movw	r1, #60020	; 0xea74
   11a68:	movt	r1, #1
   11a6c:	bl	1647c <__assert_fail@plt+0x5480>
   11a70:	movw	r1, #0
   11a74:	str	r0, [sp, #92]	; 0x5c
   11a78:	mov	r0, r1
   11a7c:	ldr	r2, [sp, #100]	; 0x64
   11a80:	ldr	r3, [sp, #96]	; 0x60
   11a84:	ldr	ip, [sp, #92]	; 0x5c
   11a88:	str	ip, [sp]
   11a8c:	bl	10ea0 <error@plt>
   11a90:	movw	r0, #1
   11a94:	bl	110f8 <__assert_fail@plt+0xfc>
   11a98:	movw	r0, #337	; 0x151
   11a9c:	movt	r0, #3
   11aa0:	ldrb	r0, [r0]
   11aa4:	tst	r0, #1
   11aa8:	beq	11b1c <__assert_fail@plt+0xb20>
   11aac:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11ab0:	tst	r0, #1
   11ab4:	bne	11b1c <__assert_fail@plt+0xb20>
   11ab8:	movw	r0, #60071	; 0xeaa7
   11abc:	movt	r0, #1
   11ac0:	bl	10f0c <gettext@plt>
   11ac4:	movw	r1, #0
   11ac8:	str	r0, [sp, #88]	; 0x58
   11acc:	mov	r0, r1
   11ad0:	movw	r1, #60103	; 0xeac7
   11ad4:	movt	r1, #1
   11ad8:	bl	1647c <__assert_fail@plt+0x5480>
   11adc:	movw	r1, #1
   11ae0:	str	r0, [sp, #84]	; 0x54
   11ae4:	mov	r0, r1
   11ae8:	movw	r1, #60013	; 0xea6d
   11aec:	movt	r1, #1
   11af0:	bl	1647c <__assert_fail@plt+0x5480>
   11af4:	movw	r1, #0
   11af8:	str	r0, [sp, #80]	; 0x50
   11afc:	mov	r0, r1
   11b00:	ldr	r2, [sp, #88]	; 0x58
   11b04:	ldr	r3, [sp, #84]	; 0x54
   11b08:	ldr	ip, [sp, #80]	; 0x50
   11b0c:	str	ip, [sp]
   11b10:	bl	10ea0 <error@plt>
   11b14:	movw	r0, #1
   11b18:	bl	110f8 <__assert_fail@plt+0xfc>
   11b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b20:	cmp	r0, #1
   11b24:	bge	11b50 <__assert_fail@plt+0xb54>
   11b28:	movw	r0, #60115	; 0xead3
   11b2c:	movt	r0, #1
   11b30:	bl	10f0c <gettext@plt>
   11b34:	movw	r1, #0
   11b38:	str	r0, [sp, #76]	; 0x4c
   11b3c:	mov	r0, r1
   11b40:	ldr	r2, [sp, #76]	; 0x4c
   11b44:	bl	10ea0 <error@plt>
   11b48:	movw	r0, #1
   11b4c:	bl	110f8 <__assert_fail@plt+0xfc>
   11b50:	movw	r0, #340	; 0x154
   11b54:	movt	r0, #3
   11b58:	ldr	r0, [r0]
   11b5c:	movw	r1, #0
   11b60:	cmp	r0, r1
   11b64:	beq	11d3c <__assert_fail@plt+0xd40>
   11b68:	mvn	r0, #0
   11b6c:	str	r0, [fp, #-164]	; 0xffffff5c
   11b70:	str	r0, [fp, #-168]	; 0xffffff58
   11b74:	movw	r0, #340	; 0x154
   11b78:	movt	r0, #3
   11b7c:	ldr	r0, [r0]
   11b80:	sub	r1, fp, #160	; 0xa0
   11b84:	bl	1e620 <__assert_fail@plt+0xd624>
   11b88:	cmp	r0, #0
   11b8c:	beq	11be0 <__assert_fail@plt+0xbe4>
   11b90:	bl	10f3c <__errno_location@plt>
   11b94:	ldr	r1, [r0]
   11b98:	movw	r0, #60136	; 0xeae8
   11b9c:	movt	r0, #1
   11ba0:	str	r1, [sp, #72]	; 0x48
   11ba4:	bl	10f0c <gettext@plt>
   11ba8:	movw	r1, #340	; 0x154
   11bac:	movt	r1, #3
   11bb0:	ldr	r1, [r1]
   11bb4:	movw	r2, #4
   11bb8:	str	r0, [sp, #68]	; 0x44
   11bbc:	mov	r0, r2
   11bc0:	bl	16110 <__assert_fail@plt+0x5114>
   11bc4:	movw	r1, #1
   11bc8:	str	r0, [sp, #64]	; 0x40
   11bcc:	mov	r0, r1
   11bd0:	ldr	r1, [sp, #72]	; 0x48
   11bd4:	ldr	r2, [sp, #68]	; 0x44
   11bd8:	ldr	r3, [sp, #64]	; 0x40
   11bdc:	bl	10ea0 <error@plt>
   11be0:	sub	r0, fp, #160	; 0xa0
   11be4:	bl	11f18 <__assert_fail@plt+0xf1c>
   11be8:	tst	r0, #1
   11bec:	beq	11c04 <__assert_fail@plt+0xc08>
   11bf0:	ldr	r0, [fp, #-112]	; 0xffffff90
   11bf4:	ldr	r1, [fp, #-108]	; 0xffffff94
   11bf8:	str	r1, [fp, #-164]	; 0xffffff5c
   11bfc:	str	r0, [fp, #-168]	; 0xffffff58
   11c00:	b	11ca8 <__assert_fail@plt+0xcac>
   11c04:	movw	r0, #340	; 0x154
   11c08:	movt	r0, #3
   11c0c:	ldr	r0, [r0]
   11c10:	movw	r1, #0
   11c14:	bl	10eac <open64@plt>
   11c18:	str	r0, [fp, #-172]	; 0xffffff54
   11c1c:	ldr	r0, [fp, #-172]	; 0xffffff54
   11c20:	movw	r1, #0
   11c24:	cmp	r1, r0
   11c28:	bgt	11ca4 <__assert_fail@plt+0xca8>
   11c2c:	ldr	r0, [fp, #-172]	; 0xffffff54
   11c30:	mov	r1, sp
   11c34:	mov	r2, #2
   11c38:	str	r2, [r1]
   11c3c:	mov	r1, #0
   11c40:	mov	r2, r1
   11c44:	mov	r3, r1
   11c48:	bl	10e64 <lseek64@plt>
   11c4c:	str	r1, [sp, #180]	; 0xb4
   11c50:	str	r0, [sp, #176]	; 0xb0
   11c54:	bl	10f3c <__errno_location@plt>
   11c58:	ldr	r0, [r0]
   11c5c:	str	r0, [sp, #172]	; 0xac
   11c60:	ldr	r0, [fp, #-172]	; 0xffffff54
   11c64:	bl	10ff0 <close@plt>
   11c68:	ldr	r1, [sp, #180]	; 0xb4
   11c6c:	cmp	r1, #0
   11c70:	bmi	11c8c <__assert_fail@plt+0xc90>
   11c74:	b	11c78 <__assert_fail@plt+0xc7c>
   11c78:	ldr	r0, [sp, #176]	; 0xb0
   11c7c:	ldr	r1, [sp, #180]	; 0xb4
   11c80:	str	r1, [fp, #-164]	; 0xffffff5c
   11c84:	str	r0, [fp, #-168]	; 0xffffff58
   11c88:	b	11ca0 <__assert_fail@plt+0xca4>
   11c8c:	ldr	r0, [sp, #172]	; 0xac
   11c90:	str	r0, [sp, #60]	; 0x3c
   11c94:	bl	10f3c <__errno_location@plt>
   11c98:	ldr	r1, [sp, #60]	; 0x3c
   11c9c:	str	r1, [r0]
   11ca0:	b	11ca4 <__assert_fail@plt+0xca8>
   11ca4:	b	11ca8 <__assert_fail@plt+0xcac>
   11ca8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   11cac:	cmn	r0, #1
   11cb0:	bgt	11d08 <__assert_fail@plt+0xd0c>
   11cb4:	b	11cb8 <__assert_fail@plt+0xcbc>
   11cb8:	bl	10f3c <__errno_location@plt>
   11cbc:	ldr	r1, [r0]
   11cc0:	movw	r0, #60151	; 0xeaf7
   11cc4:	movt	r0, #1
   11cc8:	str	r1, [sp, #56]	; 0x38
   11ccc:	bl	10f0c <gettext@plt>
   11cd0:	movw	r1, #340	; 0x154
   11cd4:	movt	r1, #3
   11cd8:	ldr	r1, [r1]
   11cdc:	movw	r2, #4
   11ce0:	str	r0, [sp, #52]	; 0x34
   11ce4:	mov	r0, r2
   11ce8:	bl	16110 <__assert_fail@plt+0x5114>
   11cec:	movw	r1, #1
   11cf0:	str	r0, [sp, #48]	; 0x30
   11cf4:	mov	r0, r1
   11cf8:	ldr	r1, [sp, #56]	; 0x38
   11cfc:	ldr	r2, [sp, #52]	; 0x34
   11d00:	ldr	r3, [sp, #48]	; 0x30
   11d04:	bl	10ea0 <error@plt>
   11d08:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11d0c:	tst	r0, #1
   11d10:	bne	11d28 <__assert_fail@plt+0xd2c>
   11d14:	ldr	r0, [fp, #-168]	; 0xffffff58
   11d18:	ldr	r1, [fp, #-164]	; 0xffffff5c
   11d1c:	str	r1, [fp, #-36]	; 0xffffffdc
   11d20:	str	r0, [fp, #-40]	; 0xffffffd8
   11d24:	b	11d38 <__assert_fail@plt+0xd3c>
   11d28:	ldr	r0, [fp, #-168]	; 0xffffff58
   11d2c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   11d30:	str	r1, [fp, #-44]	; 0xffffffd4
   11d34:	str	r0, [fp, #-48]	; 0xffffffd0
   11d38:	b	11d3c <__assert_fail@plt+0xd40>
   11d3c:	movw	r0, #336	; 0x150
   11d40:	movt	r0, #3
   11d44:	ldrb	r0, [r0]
   11d48:	tst	r0, #1
   11d4c:	movw	r0, #0
   11d50:	moveq	r0, #64	; 0x40
   11d54:	orr	r0, r0, #1
   11d58:	orr	r0, r0, #2048	; 0x800
   11d5c:	str	r0, [sp, #168]	; 0xa8
   11d60:	movw	r0, #0
   11d64:	strb	r0, [sp, #167]	; 0xa7
   11d68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d6c:	ldr	r0, [r0]
   11d70:	str	r0, [sp, #160]	; 0xa0
   11d74:	movw	r1, #0
   11d78:	cmp	r0, r1
   11d7c:	beq	11eec <__assert_fail@plt+0xef0>
   11d80:	ldr	r0, [sp, #160]	; 0xa0
   11d84:	ldr	r1, [sp, #168]	; 0xa8
   11d88:	movw	r2, #438	; 0x1b6
   11d8c:	bl	10eac <open64@plt>
   11d90:	str	r0, [sp, #156]	; 0x9c
   11d94:	ldr	r0, [sp, #156]	; 0x9c
   11d98:	cmp	r0, #0
   11d9c:	bge	11e18 <__assert_fail@plt+0xe1c>
   11da0:	movw	r0, #336	; 0x150
   11da4:	movt	r0, #3
   11da8:	ldrb	r0, [r0]
   11dac:	tst	r0, #1
   11db0:	beq	11dc4 <__assert_fail@plt+0xdc8>
   11db4:	bl	10f3c <__errno_location@plt>
   11db8:	ldr	r0, [r0]
   11dbc:	cmp	r0, #2
   11dc0:	beq	11e14 <__assert_fail@plt+0xe18>
   11dc4:	bl	10f3c <__errno_location@plt>
   11dc8:	ldr	r1, [r0]
   11dcc:	movw	r0, #60177	; 0xeb11
   11dd0:	movt	r0, #1
   11dd4:	str	r1, [sp, #44]	; 0x2c
   11dd8:	bl	10f0c <gettext@plt>
   11ddc:	ldr	r1, [sp, #160]	; 0xa0
   11de0:	movw	r2, #4
   11de4:	str	r0, [sp, #40]	; 0x28
   11de8:	mov	r0, r2
   11dec:	bl	16110 <__assert_fail@plt+0x5114>
   11df0:	movw	r1, #0
   11df4:	str	r0, [sp, #36]	; 0x24
   11df8:	mov	r0, r1
   11dfc:	ldr	r1, [sp, #44]	; 0x2c
   11e00:	ldr	r2, [sp, #40]	; 0x28
   11e04:	ldr	r3, [sp, #36]	; 0x24
   11e08:	bl	10ea0 <error@plt>
   11e0c:	movw	r0, #1
   11e10:	strb	r0, [sp, #167]	; 0xa7
   11e14:	b	11ed8 <__assert_fail@plt+0xedc>
   11e18:	ldr	r0, [sp, #156]	; 0x9c
   11e1c:	ldr	r1, [sp, #160]	; 0xa0
   11e20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11e24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e28:	ldr	ip, [fp, #-48]	; 0xffffffd0
   11e2c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   11e30:	ldr	r4, [fp, #-52]	; 0xffffffcc
   11e34:	mov	r5, sp
   11e38:	str	r4, [r5, #8]
   11e3c:	str	lr, [r5, #4]
   11e40:	str	ip, [r5]
   11e44:	bl	11f98 <__assert_fail@plt+0xf9c>
   11e48:	mvn	r1, #0
   11e4c:	eor	r0, r0, r1
   11e50:	and	r0, r0, #1
   11e54:	ldrb	r1, [sp, #167]	; 0xa7
   11e58:	and	r1, r1, #1
   11e5c:	orr	r0, r1, r0
   11e60:	cmp	r0, #0
   11e64:	movw	r0, #0
   11e68:	movne	r0, #1
   11e6c:	and	r0, r0, #1
   11e70:	strb	r0, [sp, #167]	; 0xa7
   11e74:	ldr	r0, [sp, #156]	; 0x9c
   11e78:	bl	10ff0 <close@plt>
   11e7c:	cmp	r0, #0
   11e80:	beq	11ed4 <__assert_fail@plt+0xed8>
   11e84:	bl	10f3c <__errno_location@plt>
   11e88:	ldr	r1, [r0]
   11e8c:	movw	r0, #60204	; 0xeb2c
   11e90:	movt	r0, #1
   11e94:	str	r1, [sp, #32]
   11e98:	bl	10f0c <gettext@plt>
   11e9c:	ldr	r1, [sp, #160]	; 0xa0
   11ea0:	movw	r2, #4
   11ea4:	str	r0, [sp, #28]
   11ea8:	mov	r0, r2
   11eac:	bl	16110 <__assert_fail@plt+0x5114>
   11eb0:	movw	r1, #0
   11eb4:	str	r0, [sp, #24]
   11eb8:	mov	r0, r1
   11ebc:	ldr	r1, [sp, #32]
   11ec0:	ldr	r2, [sp, #28]
   11ec4:	ldr	r3, [sp, #24]
   11ec8:	bl	10ea0 <error@plt>
   11ecc:	movw	r0, #1
   11ed0:	strb	r0, [sp, #167]	; 0xa7
   11ed4:	b	11ed8 <__assert_fail@plt+0xedc>
   11ed8:	b	11edc <__assert_fail@plt+0xee0>
   11edc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ee0:	add	r0, r0, #4
   11ee4:	str	r0, [fp, #-28]	; 0xffffffe4
   11ee8:	b	11d68 <__assert_fail@plt+0xd6c>
   11eec:	ldrb	r0, [sp, #167]	; 0xa7
   11ef0:	tst	r0, #1
   11ef4:	movw	r0, #1
   11ef8:	moveq	r0, #0
   11efc:	sub	sp, fp, #16
   11f00:	pop	{r4, r5, r6, r7, fp, pc}
   11f04:	sub	sp, sp, #4
   11f08:	strb	r0, [sp, #3]
   11f0c:	ldrb	r0, [sp, #3]
   11f10:	add	sp, sp, #4
   11f14:	bx	lr
   11f18:	sub	sp, sp, #8
   11f1c:	str	r0, [sp, #4]
   11f20:	ldr	r0, [sp, #4]
   11f24:	ldr	r0, [r0, #16]
   11f28:	and	r0, r0, #61440	; 0xf000
   11f2c:	cmp	r0, #32768	; 0x8000
   11f30:	movw	r0, #1
   11f34:	str	r0, [sp]
   11f38:	beq	11f88 <__assert_fail@plt+0xf8c>
   11f3c:	ldr	r0, [sp, #4]
   11f40:	ldr	r0, [r0, #16]
   11f44:	and	r0, r0, #61440	; 0xf000
   11f48:	cmp	r0, #40960	; 0xa000
   11f4c:	movw	r0, #1
   11f50:	str	r0, [sp]
   11f54:	beq	11f88 <__assert_fail@plt+0xf8c>
   11f58:	ldr	r0, [sp, #4]
   11f5c:	ldr	r0, [r0, #16]
   11f60:	ldr	r1, [sp, #4]
   11f64:	ldr	r1, [r1, #16]
   11f68:	sub	r0, r0, r1
   11f6c:	cmp	r0, #0
   11f70:	movw	r0, #1
   11f74:	str	r0, [sp]
   11f78:	bne	11f88 <__assert_fail@plt+0xf8c>
   11f7c:	movw	r0, #0
   11f80:	str	r0, [sp]
   11f84:	b	11f88 <__assert_fail@plt+0xf8c>
   11f88:	ldr	r0, [sp]
   11f8c:	and	r0, r0, #1
   11f90:	add	sp, sp, #8
   11f94:	bx	lr
   11f98:	push	{r4, sl, fp, lr}
   11f9c:	add	fp, sp, #8
   11fa0:	sub	sp, sp, #392	; 0x188
   11fa4:	ldr	ip, [fp, #12]
   11fa8:	ldr	lr, [fp, #8]
   11fac:	ldr	r4, [fp, #16]
   11fb0:	str	r0, [fp, #-16]
   11fb4:	str	r1, [fp, #-20]	; 0xffffffec
   11fb8:	str	r3, [fp, #-28]	; 0xffffffe4
   11fbc:	str	r2, [fp, #-32]	; 0xffffffe0
   11fc0:	str	ip, [fp, #-36]	; 0xffffffdc
   11fc4:	str	lr, [fp, #-40]	; 0xffffffd8
   11fc8:	movw	r0, #337	; 0x151
   11fcc:	movt	r0, #3
   11fd0:	ldrb	r0, [r0]
   11fd4:	tst	r0, #1
   11fd8:	bne	11ff8 <__assert_fail@plt+0xffc>
   11fdc:	ldr	r0, [fp, #16]
   11fe0:	cmp	r0, #0
   11fe4:	beq	12064 <__assert_fail@plt+0x1068>
   11fe8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11fec:	cmn	r0, #1
   11ff0:	bgt	12064 <__assert_fail@plt+0x1068>
   11ff4:	b	11ff8 <__assert_fail@plt+0xffc>
   11ff8:	ldr	r0, [fp, #-16]
   11ffc:	sub	r1, fp, #144	; 0x90
   12000:	bl	1e630 <__assert_fail@plt+0xd634>
   12004:	cmp	r0, #0
   12008:	beq	12064 <__assert_fail@plt+0x1068>
   1200c:	bl	10f3c <__errno_location@plt>
   12010:	ldr	r1, [r0]
   12014:	movw	r0, #60844	; 0xedac
   12018:	movt	r0, #1
   1201c:	str	r1, [fp, #-196]	; 0xffffff3c
   12020:	bl	10f0c <gettext@plt>
   12024:	ldr	r1, [fp, #-20]	; 0xffffffec
   12028:	movw	r2, #4
   1202c:	str	r0, [sp, #200]	; 0xc8
   12030:	mov	r0, r2
   12034:	bl	16110 <__assert_fail@plt+0x5114>
   12038:	movw	r1, #0
   1203c:	str	r0, [sp, #196]	; 0xc4
   12040:	mov	r0, r1
   12044:	ldr	r1, [fp, #-196]	; 0xffffff3c
   12048:	ldr	r2, [sp, #200]	; 0xc8
   1204c:	ldr	r3, [sp, #196]	; 0xc4
   12050:	bl	10ea0 <error@plt>
   12054:	movw	r0, #0
   12058:	and	r0, r0, #1
   1205c:	strb	r0, [fp, #-9]
   12060:	b	13ccc <__assert_fail@plt+0x2cd0>
   12064:	movw	r0, #337	; 0x151
   12068:	movt	r0, #3
   1206c:	ldrb	r0, [r0]
   12070:	tst	r0, #1
   12074:	beq	13860 <__assert_fail@plt+0x2864>
   12078:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1207c:	movw	r1, #0
   12080:	cmp	r1, r0
   12084:	bge	120a0 <__assert_fail@plt+0x10a4>
   12088:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1208c:	cmp	r0, #536870912	; 0x20000000
   12090:	bhi	120a0 <__assert_fail@plt+0x10a4>
   12094:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12098:	str	r0, [sp, #192]	; 0xc0
   1209c:	b	120ac <__assert_fail@plt+0x10b0>
   120a0:	movw	r0, #512	; 0x200
   120a4:	str	r0, [sp, #192]	; 0xc0
   120a8:	b	120ac <__assert_fail@plt+0x10b0>
   120ac:	ldr	r0, [sp, #192]	; 0xc0
   120b0:	str	r0, [fp, #-156]	; 0xffffff64
   120b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   120bc:	str	r1, [fp, #-164]	; 0xffffff5c
   120c0:	str	r0, [fp, #-168]	; 0xffffff58
   120c4:	b	12548 <__assert_fail@plt+0x154c>
   120c8:	b	120cc <__assert_fail@plt+0x10d0>
   120cc:	ldr	r0, [fp, #-156]	; 0xffffff64
   120d0:	cmp	r0, #0
   120d4:	bge	12218 <__assert_fail@plt+0x121c>
   120d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   120dc:	cmn	r0, #1
   120e0:	bgt	12180 <__assert_fail@plt+0x1184>
   120e4:	b	120e8 <__assert_fail@plt+0x10ec>
   120e8:	b	120ec <__assert_fail@plt+0x10f0>
   120ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   120f4:	ldr	r2, [fp, #-156]	; 0xffffff64
   120f8:	mov	r3, #127	; 0x7f
   120fc:	sdiv	r2, r3, r2
   12100:	subs	r0, r0, r2
   12104:	sbcs	r1, r1, r2, asr #31
   12108:	blt	122e0 <__assert_fail@plt+0x12e4>
   1210c:	b	12300 <__assert_fail@plt+0x1304>
   12110:	b	12114 <__assert_fail@plt+0x1118>
   12114:	ldr	r0, [pc, #4068]	; 13100 <__assert_fail@plt+0x2104>
   12118:	ldr	r1, [fp, #-156]	; 0xffffff64
   1211c:	cmp	r1, r0
   12120:	blt	12138 <__assert_fail@plt+0x113c>
   12124:	b	12144 <__assert_fail@plt+0x1148>
   12128:	ldr	r0, [fp, #-156]	; 0xffffff64
   1212c:	movw	r1, #0
   12130:	cmp	r1, r0
   12134:	bge	12144 <__assert_fail@plt+0x1148>
   12138:	movw	r0, #0
   1213c:	str	r0, [sp, #188]	; 0xbc
   12140:	b	1215c <__assert_fail@plt+0x1160>
   12144:	ldr	r0, [fp, #-156]	; 0xffffff64
   12148:	movw	r1, #0
   1214c:	sub	r0, r1, r0
   12150:	movw	r1, #127	; 0x7f
   12154:	sdiv	r0, r1, r0
   12158:	str	r0, [sp, #188]	; 0xbc
   1215c:	ldr	r0, [sp, #188]	; 0xbc
   12160:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12164:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12168:	mvn	r2, r2
   1216c:	mvn	r1, r1
   12170:	subs	r1, r1, r0
   12174:	sbcs	r0, r2, r0, asr #31
   12178:	bge	122e0 <__assert_fail@plt+0x12e4>
   1217c:	b	12300 <__assert_fail@plt+0x1304>
   12180:	b	12184 <__assert_fail@plt+0x1188>
   12184:	b	121f4 <__assert_fail@plt+0x11f8>
   12188:	b	121f4 <__assert_fail@plt+0x11f8>
   1218c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12190:	cmn	r0, #1
   12194:	bne	121f4 <__assert_fail@plt+0x11f8>
   12198:	b	1219c <__assert_fail@plt+0x11a0>
   1219c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   121a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121a4:	subs	r0, r0, #128	; 0x80
   121a8:	sbc	r1, r1, #0
   121ac:	rsbs	r0, r0, #0
   121b0:	rscs	r1, r1, #0
   121b4:	blt	122e0 <__assert_fail@plt+0x12e4>
   121b8:	b	12300 <__assert_fail@plt+0x1304>
   121bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   121c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121c4:	subs	r0, r0, #1
   121c8:	sbcs	r1, r1, #0
   121cc:	blt	12300 <__assert_fail@plt+0x1304>
   121d0:	b	121d4 <__assert_fail@plt+0x11d8>
   121d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   121d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121dc:	subs	r0, r0, #1
   121e0:	sbc	r1, r1, #0
   121e4:	rsbs	r0, r0, #127	; 0x7f
   121e8:	rscs	r1, r1, #0
   121ec:	blt	122e0 <__assert_fail@plt+0x12e4>
   121f0:	b	12300 <__assert_fail@plt+0x1304>
   121f4:	ldr	r0, [fp, #-156]	; 0xffffff64
   121f8:	mvn	r1, #127	; 0x7f
   121fc:	sdiv	r0, r1, r0
   12200:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12204:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12208:	subs	r1, r0, r1
   1220c:	rscs	r0, r2, r0, asr #31
   12210:	blt	122e0 <__assert_fail@plt+0x12e4>
   12214:	b	12300 <__assert_fail@plt+0x1304>
   12218:	ldr	r0, [fp, #-156]	; 0xffffff64
   1221c:	cmp	r0, #0
   12220:	bne	12228 <__assert_fail@plt+0x122c>
   12224:	b	12300 <__assert_fail@plt+0x1304>
   12228:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1222c:	cmn	r0, #1
   12230:	bgt	122bc <__assert_fail@plt+0x12c0>
   12234:	b	12238 <__assert_fail@plt+0x123c>
   12238:	b	1223c <__assert_fail@plt+0x1240>
   1223c:	b	12294 <__assert_fail@plt+0x1298>
   12240:	b	12294 <__assert_fail@plt+0x1298>
   12244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1224c:	and	r0, r0, r1
   12250:	cmn	r0, #1
   12254:	bne	12294 <__assert_fail@plt+0x1298>
   12258:	b	1225c <__assert_fail@plt+0x1260>
   1225c:	b	12260 <__assert_fail@plt+0x1264>
   12260:	ldr	r0, [fp, #-156]	; 0xffffff64
   12264:	mvn	r1, #127	; 0x7f
   12268:	add	r0, r0, r1
   1226c:	movw	r1, #0
   12270:	cmp	r1, r0
   12274:	blt	122e0 <__assert_fail@plt+0x12e4>
   12278:	b	12300 <__assert_fail@plt+0x1304>
   1227c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12280:	sub	r0, r0, #1
   12284:	movw	r1, #127	; 0x7f
   12288:	cmp	r1, r0
   1228c:	blt	122e0 <__assert_fail@plt+0x12e4>
   12290:	b	12300 <__assert_fail@plt+0x1304>
   12294:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12298:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1229c:	mvn	r0, #127	; 0x7f
   122a0:	mvn	r1, #0
   122a4:	bl	1e35c <__assert_fail@plt+0xd360>
   122a8:	ldr	r2, [fp, #-156]	; 0xffffff64
   122ac:	subs	r0, r0, r2
   122b0:	sbcs	r1, r1, r2, asr #31
   122b4:	blt	122e0 <__assert_fail@plt+0x12e4>
   122b8:	b	12300 <__assert_fail@plt+0x1304>
   122bc:	ldr	r0, [fp, #-156]	; 0xffffff64
   122c0:	mov	r1, #127	; 0x7f
   122c4:	sdiv	r0, r1, r0
   122c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   122cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   122d0:	subs	r1, r0, r1
   122d4:	rscs	r0, r2, r0, asr #31
   122d8:	bge	12300 <__assert_fail@plt+0x1304>
   122dc:	b	122e0 <__assert_fail@plt+0x12e4>
   122e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   122e4:	ldr	r1, [fp, #-156]	; 0xffffff64
   122e8:	mul	r0, r0, r1
   122ec:	sxtb	r0, r0
   122f0:	asr	r1, r0, #31
   122f4:	str	r0, [fp, #-32]	; 0xffffffe0
   122f8:	str	r1, [fp, #-28]	; 0xffffffe4
   122fc:	b	137e0 <__assert_fail@plt+0x27e4>
   12300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12304:	ldr	r1, [fp, #-156]	; 0xffffff64
   12308:	mul	r0, r0, r1
   1230c:	sxtb	r0, r0
   12310:	asr	r1, r0, #31
   12314:	str	r0, [fp, #-32]	; 0xffffffe0
   12318:	str	r1, [fp, #-28]	; 0xffffffe4
   1231c:	b	1385c <__assert_fail@plt+0x2860>
   12320:	ldr	r0, [fp, #-156]	; 0xffffff64
   12324:	cmp	r0, #0
   12328:	bge	12454 <__assert_fail@plt+0x1458>
   1232c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12330:	cmn	r0, #1
   12334:	bgt	123d4 <__assert_fail@plt+0x13d8>
   12338:	b	1233c <__assert_fail@plt+0x1340>
   1233c:	b	12340 <__assert_fail@plt+0x1344>
   12340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12344:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12348:	ldr	r2, [fp, #-156]	; 0xffffff64
   1234c:	mov	r3, #255	; 0xff
   12350:	sdiv	r2, r3, r2
   12354:	subs	r0, r0, r2
   12358:	sbcs	r1, r1, r2, asr #31
   1235c:	blt	12508 <__assert_fail@plt+0x150c>
   12360:	b	12528 <__assert_fail@plt+0x152c>
   12364:	b	12368 <__assert_fail@plt+0x136c>
   12368:	ldr	r0, [pc, #3472]	; 13100 <__assert_fail@plt+0x2104>
   1236c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12370:	cmp	r1, r0
   12374:	blt	1238c <__assert_fail@plt+0x1390>
   12378:	b	12398 <__assert_fail@plt+0x139c>
   1237c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12380:	movw	r1, #0
   12384:	cmp	r1, r0
   12388:	bge	12398 <__assert_fail@plt+0x139c>
   1238c:	movw	r0, #0
   12390:	str	r0, [sp, #184]	; 0xb8
   12394:	b	123b0 <__assert_fail@plt+0x13b4>
   12398:	ldr	r0, [fp, #-156]	; 0xffffff64
   1239c:	movw	r1, #0
   123a0:	sub	r0, r1, r0
   123a4:	movw	r1, #255	; 0xff
   123a8:	sdiv	r0, r1, r0
   123ac:	str	r0, [sp, #184]	; 0xb8
   123b0:	ldr	r0, [sp, #184]	; 0xb8
   123b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   123b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   123bc:	mvn	r2, r2
   123c0:	mvn	r1, r1
   123c4:	subs	r1, r1, r0
   123c8:	sbcs	r0, r2, r0, asr #31
   123cc:	bge	12508 <__assert_fail@plt+0x150c>
   123d0:	b	12528 <__assert_fail@plt+0x152c>
   123d4:	b	123d8 <__assert_fail@plt+0x13dc>
   123d8:	b	1243c <__assert_fail@plt+0x1440>
   123dc:	b	1243c <__assert_fail@plt+0x1440>
   123e0:	ldr	r0, [fp, #-156]	; 0xffffff64
   123e4:	cmn	r0, #1
   123e8:	bne	1243c <__assert_fail@plt+0x1440>
   123ec:	b	123f0 <__assert_fail@plt+0x13f4>
   123f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   123f8:	rsbs	r0, r0, #0
   123fc:	rscs	r1, r1, #0
   12400:	blt	12508 <__assert_fail@plt+0x150c>
   12404:	b	12528 <__assert_fail@plt+0x152c>
   12408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1240c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12410:	subs	r0, r0, #1
   12414:	sbcs	r1, r1, #0
   12418:	blt	12528 <__assert_fail@plt+0x152c>
   1241c:	b	12420 <__assert_fail@plt+0x1424>
   12420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12424:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12428:	subs	r0, r0, #1
   1242c:	sbc	r1, r1, #0
   12430:	cmn	r1, #1
   12434:	bgt	12508 <__assert_fail@plt+0x150c>
   12438:	b	12528 <__assert_fail@plt+0x152c>
   1243c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12440:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12444:	rsbs	r0, r0, #0
   12448:	rscs	r1, r1, #0
   1244c:	blt	12508 <__assert_fail@plt+0x150c>
   12450:	b	12528 <__assert_fail@plt+0x152c>
   12454:	ldr	r0, [fp, #-156]	; 0xffffff64
   12458:	cmp	r0, #0
   1245c:	bne	12464 <__assert_fail@plt+0x1468>
   12460:	b	12528 <__assert_fail@plt+0x152c>
   12464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12468:	cmn	r0, #1
   1246c:	bgt	124e4 <__assert_fail@plt+0x14e8>
   12470:	b	12474 <__assert_fail@plt+0x1478>
   12474:	b	12478 <__assert_fail@plt+0x147c>
   12478:	b	124cc <__assert_fail@plt+0x14d0>
   1247c:	b	124cc <__assert_fail@plt+0x14d0>
   12480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12488:	and	r0, r0, r1
   1248c:	cmn	r0, #1
   12490:	bne	124cc <__assert_fail@plt+0x14d0>
   12494:	b	12498 <__assert_fail@plt+0x149c>
   12498:	b	1249c <__assert_fail@plt+0x14a0>
   1249c:	ldr	r0, [fp, #-156]	; 0xffffff64
   124a0:	add	r0, r0, #0
   124a4:	movw	r1, #0
   124a8:	cmp	r1, r0
   124ac:	blt	12508 <__assert_fail@plt+0x150c>
   124b0:	b	12528 <__assert_fail@plt+0x152c>
   124b4:	ldr	r0, [fp, #-156]	; 0xffffff64
   124b8:	sub	r0, r0, #1
   124bc:	mvn	r1, #0
   124c0:	cmp	r1, r0
   124c4:	blt	12508 <__assert_fail@plt+0x150c>
   124c8:	b	12528 <__assert_fail@plt+0x152c>
   124cc:	ldr	r0, [fp, #-156]	; 0xffffff64
   124d0:	rsbs	r1, r0, #0
   124d4:	mov	r2, #0
   124d8:	sbcs	r0, r2, r0, asr #31
   124dc:	blt	12508 <__assert_fail@plt+0x150c>
   124e0:	b	12528 <__assert_fail@plt+0x152c>
   124e4:	ldr	r0, [fp, #-156]	; 0xffffff64
   124e8:	mov	r1, #255	; 0xff
   124ec:	sdiv	r0, r1, r0
   124f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   124f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   124f8:	subs	r1, r0, r1
   124fc:	rscs	r0, r2, r0, asr #31
   12500:	bge	12528 <__assert_fail@plt+0x152c>
   12504:	b	12508 <__assert_fail@plt+0x150c>
   12508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1250c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12510:	mul	r0, r0, r1
   12514:	uxtb	r0, r0
   12518:	mov	r1, #0
   1251c:	str	r1, [fp, #-28]	; 0xffffffe4
   12520:	str	r0, [fp, #-32]	; 0xffffffe0
   12524:	b	137e0 <__assert_fail@plt+0x27e4>
   12528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1252c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12530:	mul	r0, r0, r1
   12534:	uxtb	r0, r0
   12538:	mov	r1, #0
   1253c:	str	r1, [fp, #-28]	; 0xffffffe4
   12540:	str	r0, [fp, #-32]	; 0xffffffe0
   12544:	b	1385c <__assert_fail@plt+0x2860>
   12548:	b	129d8 <__assert_fail@plt+0x19dc>
   1254c:	b	12550 <__assert_fail@plt+0x1554>
   12550:	ldr	r0, [fp, #-156]	; 0xffffff64
   12554:	cmp	r0, #0
   12558:	bge	126a4 <__assert_fail@plt+0x16a8>
   1255c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12560:	cmn	r0, #1
   12564:	bgt	12604 <__assert_fail@plt+0x1608>
   12568:	b	1256c <__assert_fail@plt+0x1570>
   1256c:	b	12570 <__assert_fail@plt+0x1574>
   12570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12574:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12578:	ldr	r2, [fp, #-156]	; 0xffffff64
   1257c:	movw	r3, #32767	; 0x7fff
   12580:	sdiv	r2, r3, r2
   12584:	subs	r0, r0, r2
   12588:	sbcs	r1, r1, r2, asr #31
   1258c:	blt	12770 <__assert_fail@plt+0x1774>
   12590:	b	12790 <__assert_fail@plt+0x1794>
   12594:	b	12598 <__assert_fail@plt+0x159c>
   12598:	ldr	r0, [pc, #2912]	; 13100 <__assert_fail@plt+0x2104>
   1259c:	ldr	r1, [fp, #-156]	; 0xffffff64
   125a0:	cmp	r1, r0
   125a4:	blt	125bc <__assert_fail@plt+0x15c0>
   125a8:	b	125c8 <__assert_fail@plt+0x15cc>
   125ac:	ldr	r0, [fp, #-156]	; 0xffffff64
   125b0:	movw	r1, #0
   125b4:	cmp	r1, r0
   125b8:	bge	125c8 <__assert_fail@plt+0x15cc>
   125bc:	movw	r0, #0
   125c0:	str	r0, [sp, #180]	; 0xb4
   125c4:	b	125e0 <__assert_fail@plt+0x15e4>
   125c8:	ldr	r0, [fp, #-156]	; 0xffffff64
   125cc:	movw	r1, #0
   125d0:	sub	r0, r1, r0
   125d4:	movw	r1, #32767	; 0x7fff
   125d8:	sdiv	r0, r1, r0
   125dc:	str	r0, [sp, #180]	; 0xb4
   125e0:	ldr	r0, [sp, #180]	; 0xb4
   125e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   125e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   125ec:	mvn	r2, r2
   125f0:	mvn	r1, r1
   125f4:	subs	r1, r1, r0
   125f8:	sbcs	r0, r2, r0, asr #31
   125fc:	bge	12770 <__assert_fail@plt+0x1774>
   12600:	b	12790 <__assert_fail@plt+0x1794>
   12604:	b	12608 <__assert_fail@plt+0x160c>
   12608:	b	1267c <__assert_fail@plt+0x1680>
   1260c:	b	1267c <__assert_fail@plt+0x1680>
   12610:	ldr	r0, [fp, #-156]	; 0xffffff64
   12614:	cmn	r0, #1
   12618:	bne	1267c <__assert_fail@plt+0x1680>
   1261c:	b	12620 <__assert_fail@plt+0x1624>
   12620:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12624:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12628:	subs	r0, r0, #32768	; 0x8000
   1262c:	sbc	r1, r1, #0
   12630:	rsbs	r0, r0, #0
   12634:	rscs	r1, r1, #0
   12638:	blt	12770 <__assert_fail@plt+0x1774>
   1263c:	b	12790 <__assert_fail@plt+0x1794>
   12640:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12644:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12648:	subs	r0, r0, #1
   1264c:	sbcs	r1, r1, #0
   12650:	blt	12790 <__assert_fail@plt+0x1794>
   12654:	b	12658 <__assert_fail@plt+0x165c>
   12658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1265c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12660:	subs	r0, r0, #1
   12664:	sbc	r1, r1, #0
   12668:	movw	r2, #32767	; 0x7fff
   1266c:	subs	r0, r2, r0
   12670:	rscs	r1, r1, #0
   12674:	blt	12770 <__assert_fail@plt+0x1774>
   12678:	b	12790 <__assert_fail@plt+0x1794>
   1267c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12680:	movw	r1, #32768	; 0x8000
   12684:	movt	r1, #65535	; 0xffff
   12688:	sdiv	r0, r1, r0
   1268c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12690:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12694:	subs	r1, r0, r1
   12698:	rscs	r0, r2, r0, asr #31
   1269c:	blt	12770 <__assert_fail@plt+0x1774>
   126a0:	b	12790 <__assert_fail@plt+0x1794>
   126a4:	ldr	r0, [fp, #-156]	; 0xffffff64
   126a8:	cmp	r0, #0
   126ac:	bne	126b4 <__assert_fail@plt+0x16b8>
   126b0:	b	12790 <__assert_fail@plt+0x1794>
   126b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   126b8:	cmn	r0, #1
   126bc:	bgt	1274c <__assert_fail@plt+0x1750>
   126c0:	b	126c4 <__assert_fail@plt+0x16c8>
   126c4:	b	126c8 <__assert_fail@plt+0x16cc>
   126c8:	b	12720 <__assert_fail@plt+0x1724>
   126cc:	b	12720 <__assert_fail@plt+0x1724>
   126d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   126d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126d8:	and	r0, r0, r1
   126dc:	cmn	r0, #1
   126e0:	bne	12720 <__assert_fail@plt+0x1724>
   126e4:	b	126e8 <__assert_fail@plt+0x16ec>
   126e8:	b	126ec <__assert_fail@plt+0x16f0>
   126ec:	ldr	r0, [pc, #4092]	; 136f0 <__assert_fail@plt+0x26f4>
   126f0:	ldr	r1, [fp, #-156]	; 0xffffff64
   126f4:	add	r0, r1, r0
   126f8:	movw	r1, #0
   126fc:	cmp	r1, r0
   12700:	blt	12770 <__assert_fail@plt+0x1774>
   12704:	b	12790 <__assert_fail@plt+0x1794>
   12708:	ldr	r0, [fp, #-156]	; 0xffffff64
   1270c:	sub	r0, r0, #1
   12710:	movw	r1, #32767	; 0x7fff
   12714:	cmp	r1, r0
   12718:	blt	12770 <__assert_fail@plt+0x1774>
   1271c:	b	12790 <__assert_fail@plt+0x1794>
   12720:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12724:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12728:	movw	r0, #32768	; 0x8000
   1272c:	movt	r0, #65535	; 0xffff
   12730:	mvn	r1, #0
   12734:	bl	1e35c <__assert_fail@plt+0xd360>
   12738:	ldr	r2, [fp, #-156]	; 0xffffff64
   1273c:	subs	r0, r0, r2
   12740:	sbcs	r1, r1, r2, asr #31
   12744:	blt	12770 <__assert_fail@plt+0x1774>
   12748:	b	12790 <__assert_fail@plt+0x1794>
   1274c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12750:	movw	r1, #32767	; 0x7fff
   12754:	sdiv	r0, r1, r0
   12758:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1275c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12760:	subs	r1, r0, r1
   12764:	rscs	r0, r2, r0, asr #31
   12768:	bge	12790 <__assert_fail@plt+0x1794>
   1276c:	b	12770 <__assert_fail@plt+0x1774>
   12770:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12774:	ldr	r1, [fp, #-156]	; 0xffffff64
   12778:	mul	r0, r0, r1
   1277c:	sxth	r0, r0
   12780:	asr	r1, r0, #31
   12784:	str	r0, [fp, #-32]	; 0xffffffe0
   12788:	str	r1, [fp, #-28]	; 0xffffffe4
   1278c:	b	137e0 <__assert_fail@plt+0x27e4>
   12790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12794:	ldr	r1, [fp, #-156]	; 0xffffff64
   12798:	mul	r0, r0, r1
   1279c:	sxth	r0, r0
   127a0:	asr	r1, r0, #31
   127a4:	str	r0, [fp, #-32]	; 0xffffffe0
   127a8:	str	r1, [fp, #-28]	; 0xffffffe4
   127ac:	b	1385c <__assert_fail@plt+0x2860>
   127b0:	ldr	r0, [fp, #-156]	; 0xffffff64
   127b4:	cmp	r0, #0
   127b8:	bge	128e4 <__assert_fail@plt+0x18e8>
   127bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   127c0:	cmn	r0, #1
   127c4:	bgt	12864 <__assert_fail@plt+0x1868>
   127c8:	b	127cc <__assert_fail@plt+0x17d0>
   127cc:	b	127d0 <__assert_fail@plt+0x17d4>
   127d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127d8:	ldr	r2, [fp, #-156]	; 0xffffff64
   127dc:	movw	r3, #65535	; 0xffff
   127e0:	sdiv	r2, r3, r2
   127e4:	subs	r0, r0, r2
   127e8:	sbcs	r1, r1, r2, asr #31
   127ec:	blt	12998 <__assert_fail@plt+0x199c>
   127f0:	b	129b8 <__assert_fail@plt+0x19bc>
   127f4:	b	127f8 <__assert_fail@plt+0x17fc>
   127f8:	ldr	r0, [pc, #2304]	; 13100 <__assert_fail@plt+0x2104>
   127fc:	ldr	r1, [fp, #-156]	; 0xffffff64
   12800:	cmp	r1, r0
   12804:	blt	1281c <__assert_fail@plt+0x1820>
   12808:	b	12828 <__assert_fail@plt+0x182c>
   1280c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12810:	movw	r1, #0
   12814:	cmp	r1, r0
   12818:	bge	12828 <__assert_fail@plt+0x182c>
   1281c:	movw	r0, #0
   12820:	str	r0, [sp, #176]	; 0xb0
   12824:	b	12840 <__assert_fail@plt+0x1844>
   12828:	ldr	r0, [fp, #-156]	; 0xffffff64
   1282c:	movw	r1, #0
   12830:	sub	r0, r1, r0
   12834:	movw	r1, #65535	; 0xffff
   12838:	sdiv	r0, r1, r0
   1283c:	str	r0, [sp, #176]	; 0xb0
   12840:	ldr	r0, [sp, #176]	; 0xb0
   12844:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12848:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1284c:	mvn	r2, r2
   12850:	mvn	r1, r1
   12854:	subs	r1, r1, r0
   12858:	sbcs	r0, r2, r0, asr #31
   1285c:	bge	12998 <__assert_fail@plt+0x199c>
   12860:	b	129b8 <__assert_fail@plt+0x19bc>
   12864:	b	12868 <__assert_fail@plt+0x186c>
   12868:	b	128cc <__assert_fail@plt+0x18d0>
   1286c:	b	128cc <__assert_fail@plt+0x18d0>
   12870:	ldr	r0, [fp, #-156]	; 0xffffff64
   12874:	cmn	r0, #1
   12878:	bne	128cc <__assert_fail@plt+0x18d0>
   1287c:	b	12880 <__assert_fail@plt+0x1884>
   12880:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12888:	rsbs	r0, r0, #0
   1288c:	rscs	r1, r1, #0
   12890:	blt	12998 <__assert_fail@plt+0x199c>
   12894:	b	129b8 <__assert_fail@plt+0x19bc>
   12898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1289c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128a0:	subs	r0, r0, #1
   128a4:	sbcs	r1, r1, #0
   128a8:	blt	129b8 <__assert_fail@plt+0x19bc>
   128ac:	b	128b0 <__assert_fail@plt+0x18b4>
   128b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128b8:	subs	r0, r0, #1
   128bc:	sbc	r1, r1, #0
   128c0:	cmn	r1, #1
   128c4:	bgt	12998 <__assert_fail@plt+0x199c>
   128c8:	b	129b8 <__assert_fail@plt+0x19bc>
   128cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128d4:	rsbs	r0, r0, #0
   128d8:	rscs	r1, r1, #0
   128dc:	blt	12998 <__assert_fail@plt+0x199c>
   128e0:	b	129b8 <__assert_fail@plt+0x19bc>
   128e4:	ldr	r0, [fp, #-156]	; 0xffffff64
   128e8:	cmp	r0, #0
   128ec:	bne	128f4 <__assert_fail@plt+0x18f8>
   128f0:	b	129b8 <__assert_fail@plt+0x19bc>
   128f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   128f8:	cmn	r0, #1
   128fc:	bgt	12974 <__assert_fail@plt+0x1978>
   12900:	b	12904 <__assert_fail@plt+0x1908>
   12904:	b	12908 <__assert_fail@plt+0x190c>
   12908:	b	1295c <__assert_fail@plt+0x1960>
   1290c:	b	1295c <__assert_fail@plt+0x1960>
   12910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12914:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12918:	and	r0, r0, r1
   1291c:	cmn	r0, #1
   12920:	bne	1295c <__assert_fail@plt+0x1960>
   12924:	b	12928 <__assert_fail@plt+0x192c>
   12928:	b	1292c <__assert_fail@plt+0x1930>
   1292c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12930:	add	r0, r0, #0
   12934:	movw	r1, #0
   12938:	cmp	r1, r0
   1293c:	blt	12998 <__assert_fail@plt+0x199c>
   12940:	b	129b8 <__assert_fail@plt+0x19bc>
   12944:	ldr	r0, [fp, #-156]	; 0xffffff64
   12948:	sub	r0, r0, #1
   1294c:	mvn	r1, #0
   12950:	cmp	r1, r0
   12954:	blt	12998 <__assert_fail@plt+0x199c>
   12958:	b	129b8 <__assert_fail@plt+0x19bc>
   1295c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12960:	rsbs	r1, r0, #0
   12964:	mov	r2, #0
   12968:	sbcs	r0, r2, r0, asr #31
   1296c:	blt	12998 <__assert_fail@plt+0x199c>
   12970:	b	129b8 <__assert_fail@plt+0x19bc>
   12974:	ldr	r0, [fp, #-156]	; 0xffffff64
   12978:	movw	r1, #65535	; 0xffff
   1297c:	sdiv	r0, r1, r0
   12980:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12984:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12988:	subs	r1, r0, r1
   1298c:	rscs	r0, r2, r0, asr #31
   12990:	bge	129b8 <__assert_fail@plt+0x19bc>
   12994:	b	12998 <__assert_fail@plt+0x199c>
   12998:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1299c:	ldr	r1, [fp, #-156]	; 0xffffff64
   129a0:	mul	r0, r0, r1
   129a4:	uxth	r0, r0
   129a8:	mov	r1, #0
   129ac:	str	r1, [fp, #-28]	; 0xffffffe4
   129b0:	str	r0, [fp, #-32]	; 0xffffffe0
   129b4:	b	137e0 <__assert_fail@plt+0x27e4>
   129b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129bc:	ldr	r1, [fp, #-156]	; 0xffffff64
   129c0:	mul	r0, r0, r1
   129c4:	uxth	r0, r0
   129c8:	mov	r1, #0
   129cc:	str	r1, [fp, #-28]	; 0xffffffe4
   129d0:	str	r0, [fp, #-32]	; 0xffffffe0
   129d4:	b	1385c <__assert_fail@plt+0x2860>
   129d8:	b	12e40 <__assert_fail@plt+0x1e44>
   129dc:	b	129e0 <__assert_fail@plt+0x19e4>
   129e0:	ldr	r0, [fp, #-156]	; 0xffffff64
   129e4:	cmp	r0, #0
   129e8:	bge	12b24 <__assert_fail@plt+0x1b28>
   129ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129f0:	cmn	r0, #1
   129f4:	bgt	12a94 <__assert_fail@plt+0x1a98>
   129f8:	b	129fc <__assert_fail@plt+0x1a00>
   129fc:	b	12a00 <__assert_fail@plt+0x1a04>
   12a00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a08:	ldr	r2, [fp, #-156]	; 0xffffff64
   12a0c:	mvn	r3, #-2147483648	; 0x80000000
   12a10:	sdiv	r2, r3, r2
   12a14:	subs	r0, r0, r2
   12a18:	sbcs	r1, r1, r2, asr #31
   12a1c:	blt	12be8 <__assert_fail@plt+0x1bec>
   12a20:	b	12c04 <__assert_fail@plt+0x1c08>
   12a24:	b	12a28 <__assert_fail@plt+0x1a2c>
   12a28:	ldr	r0, [pc, #1744]	; 13100 <__assert_fail@plt+0x2104>
   12a2c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12a30:	cmp	r1, r0
   12a34:	blt	12a4c <__assert_fail@plt+0x1a50>
   12a38:	b	12a58 <__assert_fail@plt+0x1a5c>
   12a3c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12a40:	movw	r1, #0
   12a44:	cmp	r1, r0
   12a48:	bge	12a58 <__assert_fail@plt+0x1a5c>
   12a4c:	movw	r0, #0
   12a50:	str	r0, [sp, #172]	; 0xac
   12a54:	b	12a70 <__assert_fail@plt+0x1a74>
   12a58:	ldr	r0, [pc, #4076]	; 13a4c <__assert_fail@plt+0x2a50>
   12a5c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12a60:	movw	r2, #0
   12a64:	sub	r1, r2, r1
   12a68:	sdiv	r0, r0, r1
   12a6c:	str	r0, [sp, #172]	; 0xac
   12a70:	ldr	r0, [sp, #172]	; 0xac
   12a74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12a7c:	mvn	r2, r2
   12a80:	mvn	r1, r1
   12a84:	subs	r1, r1, r0
   12a88:	sbcs	r0, r2, r0, asr #31
   12a8c:	bge	12be8 <__assert_fail@plt+0x1bec>
   12a90:	b	12c04 <__assert_fail@plt+0x1c08>
   12a94:	ldr	r0, [fp, #-156]	; 0xffffff64
   12a98:	cmn	r0, #1
   12a9c:	bne	12b00 <__assert_fail@plt+0x1b04>
   12aa0:	b	12aa4 <__assert_fail@plt+0x1aa8>
   12aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12aa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12aac:	adds	r0, r0, #-2147483648	; 0x80000000
   12ab0:	sbc	r1, r1, #0
   12ab4:	rsbs	r0, r0, #0
   12ab8:	rscs	r1, r1, #0
   12abc:	blt	12be8 <__assert_fail@plt+0x1bec>
   12ac0:	b	12c04 <__assert_fail@plt+0x1c08>
   12ac4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ac8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12acc:	subs	r0, r0, #1
   12ad0:	sbcs	r1, r1, #0
   12ad4:	blt	12c04 <__assert_fail@plt+0x1c08>
   12ad8:	b	12adc <__assert_fail@plt+0x1ae0>
   12adc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ae4:	subs	r0, r0, #1
   12ae8:	sbc	r1, r1, #0
   12aec:	mvn	r2, #-2147483648	; 0x80000000
   12af0:	subs	r0, r2, r0
   12af4:	rscs	r1, r1, #0
   12af8:	blt	12be8 <__assert_fail@plt+0x1bec>
   12afc:	b	12c04 <__assert_fail@plt+0x1c08>
   12b00:	ldr	r0, [fp, #-156]	; 0xffffff64
   12b04:	mov	r1, #-2147483648	; 0x80000000
   12b08:	sdiv	r0, r1, r0
   12b0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12b10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b14:	subs	r1, r0, r1
   12b18:	rscs	r0, r2, r0, asr #31
   12b1c:	blt	12be8 <__assert_fail@plt+0x1bec>
   12b20:	b	12c04 <__assert_fail@plt+0x1c08>
   12b24:	ldr	r0, [fp, #-156]	; 0xffffff64
   12b28:	cmp	r0, #0
   12b2c:	bne	12b34 <__assert_fail@plt+0x1b38>
   12b30:	b	12c04 <__assert_fail@plt+0x1c08>
   12b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b38:	cmn	r0, #1
   12b3c:	bgt	12bc4 <__assert_fail@plt+0x1bc8>
   12b40:	b	12b44 <__assert_fail@plt+0x1b48>
   12b44:	b	12b48 <__assert_fail@plt+0x1b4c>
   12b48:	b	12b9c <__assert_fail@plt+0x1ba0>
   12b4c:	b	12b9c <__assert_fail@plt+0x1ba0>
   12b50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b58:	and	r0, r0, r1
   12b5c:	cmn	r0, #1
   12b60:	bne	12b9c <__assert_fail@plt+0x1ba0>
   12b64:	b	12b68 <__assert_fail@plt+0x1b6c>
   12b68:	b	12b6c <__assert_fail@plt+0x1b70>
   12b6c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12b70:	add	r0, r0, #-2147483648	; 0x80000000
   12b74:	movw	r1, #0
   12b78:	cmp	r1, r0
   12b7c:	blt	12be8 <__assert_fail@plt+0x1bec>
   12b80:	b	12c04 <__assert_fail@plt+0x1c08>
   12b84:	ldr	r0, [pc, #3776]	; 13a4c <__assert_fail@plt+0x2a50>
   12b88:	ldr	r1, [fp, #-156]	; 0xffffff64
   12b8c:	sub	r1, r1, #1
   12b90:	cmp	r0, r1
   12b94:	blt	12be8 <__assert_fail@plt+0x1bec>
   12b98:	b	12c04 <__assert_fail@plt+0x1c08>
   12b9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ba0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ba4:	mov	r0, #-2147483648	; 0x80000000
   12ba8:	mvn	r1, #0
   12bac:	bl	1e35c <__assert_fail@plt+0xd360>
   12bb0:	ldr	r2, [fp, #-156]	; 0xffffff64
   12bb4:	subs	r0, r0, r2
   12bb8:	sbcs	r1, r1, r2, asr #31
   12bbc:	blt	12be8 <__assert_fail@plt+0x1bec>
   12bc0:	b	12c04 <__assert_fail@plt+0x1c08>
   12bc4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12bc8:	mvn	r1, #-2147483648	; 0x80000000
   12bcc:	sdiv	r0, r1, r0
   12bd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12bd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12bd8:	subs	r1, r0, r1
   12bdc:	rscs	r0, r2, r0, asr #31
   12be0:	bge	12c04 <__assert_fail@plt+0x1c08>
   12be4:	b	12be8 <__assert_fail@plt+0x1bec>
   12be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bec:	ldr	r1, [fp, #-156]	; 0xffffff64
   12bf0:	mul	r0, r0, r1
   12bf4:	asr	r1, r0, #31
   12bf8:	str	r0, [fp, #-32]	; 0xffffffe0
   12bfc:	str	r1, [fp, #-28]	; 0xffffffe4
   12c00:	b	137e0 <__assert_fail@plt+0x27e4>
   12c04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c08:	ldr	r1, [fp, #-156]	; 0xffffff64
   12c0c:	mul	r0, r0, r1
   12c10:	asr	r1, r0, #31
   12c14:	str	r0, [fp, #-32]	; 0xffffffe0
   12c18:	str	r1, [fp, #-28]	; 0xffffffe4
   12c1c:	b	1385c <__assert_fail@plt+0x2860>
   12c20:	ldr	r0, [fp, #-156]	; 0xffffff64
   12c24:	cmp	r0, #0
   12c28:	bge	12d54 <__assert_fail@plt+0x1d58>
   12c2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12c30:	cmn	r0, #1
   12c34:	bgt	12cd4 <__assert_fail@plt+0x1cd8>
   12c38:	b	12c3c <__assert_fail@plt+0x1c40>
   12c3c:	b	12c64 <__assert_fail@plt+0x1c68>
   12c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c48:	ldr	r2, [fp, #-156]	; 0xffffff64
   12c4c:	mvn	r3, #0
   12c50:	udiv	r2, r3, r2
   12c54:	subs	r0, r0, r2
   12c58:	sbcs	r1, r1, #0
   12c5c:	blt	12e08 <__assert_fail@plt+0x1e0c>
   12c60:	b	12e24 <__assert_fail@plt+0x1e28>
   12c64:	b	12c68 <__assert_fail@plt+0x1c6c>
   12c68:	ldr	r0, [pc, #1168]	; 13100 <__assert_fail@plt+0x2104>
   12c6c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12c70:	cmp	r1, r0
   12c74:	blt	12c8c <__assert_fail@plt+0x1c90>
   12c78:	b	12c98 <__assert_fail@plt+0x1c9c>
   12c7c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12c80:	movw	r1, #0
   12c84:	cmp	r1, r0
   12c88:	bge	12c98 <__assert_fail@plt+0x1c9c>
   12c8c:	movw	r0, #1
   12c90:	str	r0, [sp, #168]	; 0xa8
   12c94:	b	12cb0 <__assert_fail@plt+0x1cb4>
   12c98:	ldr	r0, [fp, #-156]	; 0xffffff64
   12c9c:	movw	r1, #0
   12ca0:	sub	r0, r1, r0
   12ca4:	mvn	r1, #0
   12ca8:	udiv	r0, r1, r0
   12cac:	str	r0, [sp, #168]	; 0xa8
   12cb0:	ldr	r0, [sp, #168]	; 0xa8
   12cb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12cb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12cbc:	mvn	r2, r2
   12cc0:	mvn	r1, r1
   12cc4:	subs	r0, r1, r0
   12cc8:	sbcs	r1, r2, #0
   12ccc:	bge	12e08 <__assert_fail@plt+0x1e0c>
   12cd0:	b	12e24 <__assert_fail@plt+0x1e28>
   12cd4:	b	12cd8 <__assert_fail@plt+0x1cdc>
   12cd8:	b	12d3c <__assert_fail@plt+0x1d40>
   12cdc:	b	12d3c <__assert_fail@plt+0x1d40>
   12ce0:	ldr	r0, [fp, #-156]	; 0xffffff64
   12ce4:	cmn	r0, #1
   12ce8:	bne	12d3c <__assert_fail@plt+0x1d40>
   12cec:	b	12cf0 <__assert_fail@plt+0x1cf4>
   12cf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12cf8:	rsbs	r0, r0, #0
   12cfc:	rscs	r1, r1, #0
   12d00:	blt	12e08 <__assert_fail@plt+0x1e0c>
   12d04:	b	12e24 <__assert_fail@plt+0x1e28>
   12d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d10:	subs	r0, r0, #1
   12d14:	sbcs	r1, r1, #0
   12d18:	blt	12e24 <__assert_fail@plt+0x1e28>
   12d1c:	b	12d20 <__assert_fail@plt+0x1d24>
   12d20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d28:	subs	r0, r0, #1
   12d2c:	sbc	r1, r1, #0
   12d30:	cmn	r1, #1
   12d34:	bgt	12e08 <__assert_fail@plt+0x1e0c>
   12d38:	b	12e24 <__assert_fail@plt+0x1e28>
   12d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d44:	rsbs	r0, r0, #0
   12d48:	rscs	r1, r1, #0
   12d4c:	blt	12e08 <__assert_fail@plt+0x1e0c>
   12d50:	b	12e24 <__assert_fail@plt+0x1e28>
   12d54:	ldr	r0, [fp, #-156]	; 0xffffff64
   12d58:	cmp	r0, #0
   12d5c:	bne	12d64 <__assert_fail@plt+0x1d68>
   12d60:	b	12e24 <__assert_fail@plt+0x1e28>
   12d64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12d68:	cmn	r0, #1
   12d6c:	bgt	12de4 <__assert_fail@plt+0x1de8>
   12d70:	b	12d74 <__assert_fail@plt+0x1d78>
   12d74:	b	12d78 <__assert_fail@plt+0x1d7c>
   12d78:	b	12dcc <__assert_fail@plt+0x1dd0>
   12d7c:	b	12dcc <__assert_fail@plt+0x1dd0>
   12d80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d88:	and	r0, r0, r1
   12d8c:	cmn	r0, #1
   12d90:	bne	12dcc <__assert_fail@plt+0x1dd0>
   12d94:	b	12d98 <__assert_fail@plt+0x1d9c>
   12d98:	b	12d9c <__assert_fail@plt+0x1da0>
   12d9c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12da0:	add	r0, r0, #0
   12da4:	movw	r1, #0
   12da8:	cmp	r1, r0
   12dac:	blt	12e08 <__assert_fail@plt+0x1e0c>
   12db0:	b	12e24 <__assert_fail@plt+0x1e28>
   12db4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12db8:	sub	r0, r0, #1
   12dbc:	mvn	r1, #0
   12dc0:	cmp	r1, r0
   12dc4:	blt	12e08 <__assert_fail@plt+0x1e0c>
   12dc8:	b	12e24 <__assert_fail@plt+0x1e28>
   12dcc:	ldr	r0, [fp, #-156]	; 0xffffff64
   12dd0:	rsbs	r1, r0, #0
   12dd4:	mov	r2, #0
   12dd8:	sbcs	r0, r2, r0, asr #31
   12ddc:	blt	12e08 <__assert_fail@plt+0x1e0c>
   12de0:	b	12e24 <__assert_fail@plt+0x1e28>
   12de4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12de8:	mvn	r1, #0
   12dec:	udiv	r0, r1, r0
   12df0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12df4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12df8:	subs	r0, r0, r1
   12dfc:	rscs	r1, r2, #0
   12e00:	bge	12e24 <__assert_fail@plt+0x1e28>
   12e04:	b	12e08 <__assert_fail@plt+0x1e0c>
   12e08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e0c:	ldr	r1, [fp, #-156]	; 0xffffff64
   12e10:	mul	r0, r0, r1
   12e14:	mov	r1, #0
   12e18:	str	r1, [fp, #-28]	; 0xffffffe4
   12e1c:	str	r0, [fp, #-32]	; 0xffffffe0
   12e20:	b	137e0 <__assert_fail@plt+0x27e4>
   12e24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e28:	ldr	r1, [fp, #-156]	; 0xffffff64
   12e2c:	mul	r0, r0, r1
   12e30:	mov	r1, #0
   12e34:	str	r1, [fp, #-28]	; 0xffffffe4
   12e38:	str	r0, [fp, #-32]	; 0xffffffe0
   12e3c:	b	1385c <__assert_fail@plt+0x2860>
   12e40:	b	132ac <__assert_fail@plt+0x22b0>
   12e44:	b	12e48 <__assert_fail@plt+0x1e4c>
   12e48:	ldr	r0, [fp, #-156]	; 0xffffff64
   12e4c:	cmp	r0, #0
   12e50:	bge	12f8c <__assert_fail@plt+0x1f90>
   12e54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e58:	cmn	r0, #1
   12e5c:	bgt	12efc <__assert_fail@plt+0x1f00>
   12e60:	b	12e64 <__assert_fail@plt+0x1e68>
   12e64:	b	12e68 <__assert_fail@plt+0x1e6c>
   12e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e70:	ldr	r2, [fp, #-156]	; 0xffffff64
   12e74:	mvn	r3, #-2147483648	; 0x80000000
   12e78:	sdiv	r2, r3, r2
   12e7c:	subs	r0, r0, r2
   12e80:	sbcs	r1, r1, r2, asr #31
   12e84:	blt	13050 <__assert_fail@plt+0x2054>
   12e88:	b	1306c <__assert_fail@plt+0x2070>
   12e8c:	b	12e90 <__assert_fail@plt+0x1e94>
   12e90:	ldr	r0, [pc, #3652]	; 13cdc <__assert_fail@plt+0x2ce0>
   12e94:	ldr	r1, [fp, #-156]	; 0xffffff64
   12e98:	cmp	r1, r0
   12e9c:	blt	12eb4 <__assert_fail@plt+0x1eb8>
   12ea0:	b	12ec0 <__assert_fail@plt+0x1ec4>
   12ea4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12ea8:	movw	r1, #0
   12eac:	cmp	r1, r0
   12eb0:	bge	12ec0 <__assert_fail@plt+0x1ec4>
   12eb4:	movw	r0, #0
   12eb8:	str	r0, [sp, #164]	; 0xa4
   12ebc:	b	12ed8 <__assert_fail@plt+0x1edc>
   12ec0:	ldr	r0, [pc, #3608]	; 13ce0 <__assert_fail@plt+0x2ce4>
   12ec4:	ldr	r1, [fp, #-156]	; 0xffffff64
   12ec8:	movw	r2, #0
   12ecc:	sub	r1, r2, r1
   12ed0:	sdiv	r0, r0, r1
   12ed4:	str	r0, [sp, #164]	; 0xa4
   12ed8:	ldr	r0, [sp, #164]	; 0xa4
   12edc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12ee0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12ee4:	mvn	r2, r2
   12ee8:	mvn	r1, r1
   12eec:	subs	r1, r1, r0
   12ef0:	sbcs	r0, r2, r0, asr #31
   12ef4:	bge	13050 <__assert_fail@plt+0x2054>
   12ef8:	b	1306c <__assert_fail@plt+0x2070>
   12efc:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f00:	cmn	r0, #1
   12f04:	bne	12f68 <__assert_fail@plt+0x1f6c>
   12f08:	b	12f0c <__assert_fail@plt+0x1f10>
   12f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f14:	adds	r0, r0, #-2147483648	; 0x80000000
   12f18:	sbc	r1, r1, #0
   12f1c:	rsbs	r0, r0, #0
   12f20:	rscs	r1, r1, #0
   12f24:	blt	13050 <__assert_fail@plt+0x2054>
   12f28:	b	1306c <__assert_fail@plt+0x2070>
   12f2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f34:	subs	r0, r0, #1
   12f38:	sbcs	r1, r1, #0
   12f3c:	blt	1306c <__assert_fail@plt+0x2070>
   12f40:	b	12f44 <__assert_fail@plt+0x1f48>
   12f44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f4c:	subs	r0, r0, #1
   12f50:	sbc	r1, r1, #0
   12f54:	mvn	r2, #-2147483648	; 0x80000000
   12f58:	subs	r0, r2, r0
   12f5c:	rscs	r1, r1, #0
   12f60:	blt	13050 <__assert_fail@plt+0x2054>
   12f64:	b	1306c <__assert_fail@plt+0x2070>
   12f68:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f6c:	mov	r1, #-2147483648	; 0x80000000
   12f70:	sdiv	r0, r1, r0
   12f74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12f78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12f7c:	subs	r1, r0, r1
   12f80:	rscs	r0, r2, r0, asr #31
   12f84:	blt	13050 <__assert_fail@plt+0x2054>
   12f88:	b	1306c <__assert_fail@plt+0x2070>
   12f8c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12f90:	cmp	r0, #0
   12f94:	bne	12f9c <__assert_fail@plt+0x1fa0>
   12f98:	b	1306c <__assert_fail@plt+0x2070>
   12f9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12fa0:	cmn	r0, #1
   12fa4:	bgt	1302c <__assert_fail@plt+0x2030>
   12fa8:	b	12fac <__assert_fail@plt+0x1fb0>
   12fac:	b	12fb0 <__assert_fail@plt+0x1fb4>
   12fb0:	b	13004 <__assert_fail@plt+0x2008>
   12fb4:	b	13004 <__assert_fail@plt+0x2008>
   12fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fc0:	and	r0, r0, r1
   12fc4:	cmn	r0, #1
   12fc8:	bne	13004 <__assert_fail@plt+0x2008>
   12fcc:	b	12fd0 <__assert_fail@plt+0x1fd4>
   12fd0:	b	12fd4 <__assert_fail@plt+0x1fd8>
   12fd4:	ldr	r0, [fp, #-156]	; 0xffffff64
   12fd8:	add	r0, r0, #-2147483648	; 0x80000000
   12fdc:	movw	r1, #0
   12fe0:	cmp	r1, r0
   12fe4:	blt	13050 <__assert_fail@plt+0x2054>
   12fe8:	b	1306c <__assert_fail@plt+0x2070>
   12fec:	ldr	r0, [pc, #3308]	; 13ce0 <__assert_fail@plt+0x2ce4>
   12ff0:	ldr	r1, [fp, #-156]	; 0xffffff64
   12ff4:	sub	r1, r1, #1
   12ff8:	cmp	r0, r1
   12ffc:	blt	13050 <__assert_fail@plt+0x2054>
   13000:	b	1306c <__assert_fail@plt+0x2070>
   13004:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1300c:	mov	r0, #-2147483648	; 0x80000000
   13010:	mvn	r1, #0
   13014:	bl	1e35c <__assert_fail@plt+0xd360>
   13018:	ldr	r2, [fp, #-156]	; 0xffffff64
   1301c:	subs	r0, r0, r2
   13020:	sbcs	r1, r1, r2, asr #31
   13024:	blt	13050 <__assert_fail@plt+0x2054>
   13028:	b	1306c <__assert_fail@plt+0x2070>
   1302c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13030:	mvn	r1, #-2147483648	; 0x80000000
   13034:	sdiv	r0, r1, r0
   13038:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1303c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13040:	subs	r1, r0, r1
   13044:	rscs	r0, r2, r0, asr #31
   13048:	bge	1306c <__assert_fail@plt+0x2070>
   1304c:	b	13050 <__assert_fail@plt+0x2054>
   13050:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13054:	ldr	r1, [fp, #-156]	; 0xffffff64
   13058:	mul	r0, r0, r1
   1305c:	asr	r1, r0, #31
   13060:	str	r0, [fp, #-32]	; 0xffffffe0
   13064:	str	r1, [fp, #-28]	; 0xffffffe4
   13068:	b	137e0 <__assert_fail@plt+0x27e4>
   1306c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13070:	ldr	r1, [fp, #-156]	; 0xffffff64
   13074:	mul	r0, r0, r1
   13078:	asr	r1, r0, #31
   1307c:	str	r0, [fp, #-32]	; 0xffffffe0
   13080:	str	r1, [fp, #-28]	; 0xffffffe4
   13084:	b	1385c <__assert_fail@plt+0x2860>
   13088:	ldr	r0, [fp, #-156]	; 0xffffff64
   1308c:	cmp	r0, #0
   13090:	bge	131c0 <__assert_fail@plt+0x21c4>
   13094:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13098:	cmn	r0, #1
   1309c:	bgt	13140 <__assert_fail@plt+0x2144>
   130a0:	b	130a4 <__assert_fail@plt+0x20a8>
   130a4:	b	130cc <__assert_fail@plt+0x20d0>
   130a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   130ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130b0:	ldr	r2, [fp, #-156]	; 0xffffff64
   130b4:	mvn	r3, #0
   130b8:	udiv	r2, r3, r2
   130bc:	subs	r0, r0, r2
   130c0:	sbcs	r1, r1, #0
   130c4:	blt	13274 <__assert_fail@plt+0x2278>
   130c8:	b	13290 <__assert_fail@plt+0x2294>
   130cc:	b	130d0 <__assert_fail@plt+0x20d4>
   130d0:	ldr	r0, [pc, #3076]	; 13cdc <__assert_fail@plt+0x2ce0>
   130d4:	ldr	r1, [fp, #-156]	; 0xffffff64
   130d8:	cmp	r1, r0
   130dc:	blt	130f4 <__assert_fail@plt+0x20f8>
   130e0:	b	13104 <__assert_fail@plt+0x2108>
   130e4:	ldr	r0, [fp, #-156]	; 0xffffff64
   130e8:	movw	r1, #0
   130ec:	cmp	r1, r0
   130f0:	bge	13104 <__assert_fail@plt+0x2108>
   130f4:	movw	r0, #1
   130f8:	str	r0, [sp, #160]	; 0xa0
   130fc:	b	1311c <__assert_fail@plt+0x2120>
   13100:	andhi	r0, r0, r1
   13104:	ldr	r0, [fp, #-156]	; 0xffffff64
   13108:	movw	r1, #0
   1310c:	sub	r0, r1, r0
   13110:	mvn	r1, #0
   13114:	udiv	r0, r1, r0
   13118:	str	r0, [sp, #160]	; 0xa0
   1311c:	ldr	r0, [sp, #160]	; 0xa0
   13120:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13124:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13128:	mvn	r2, r2
   1312c:	mvn	r1, r1
   13130:	subs	r0, r1, r0
   13134:	sbcs	r1, r2, #0
   13138:	bge	13274 <__assert_fail@plt+0x2278>
   1313c:	b	13290 <__assert_fail@plt+0x2294>
   13140:	b	13144 <__assert_fail@plt+0x2148>
   13144:	b	131a8 <__assert_fail@plt+0x21ac>
   13148:	b	131a8 <__assert_fail@plt+0x21ac>
   1314c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13150:	cmn	r0, #1
   13154:	bne	131a8 <__assert_fail@plt+0x21ac>
   13158:	b	1315c <__assert_fail@plt+0x2160>
   1315c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13164:	rsbs	r0, r0, #0
   13168:	rscs	r1, r1, #0
   1316c:	blt	13274 <__assert_fail@plt+0x2278>
   13170:	b	13290 <__assert_fail@plt+0x2294>
   13174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13178:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1317c:	subs	r0, r0, #1
   13180:	sbcs	r1, r1, #0
   13184:	blt	13290 <__assert_fail@plt+0x2294>
   13188:	b	1318c <__assert_fail@plt+0x2190>
   1318c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13190:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13194:	subs	r0, r0, #1
   13198:	sbc	r1, r1, #0
   1319c:	cmn	r1, #1
   131a0:	bgt	13274 <__assert_fail@plt+0x2278>
   131a4:	b	13290 <__assert_fail@plt+0x2294>
   131a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131b0:	rsbs	r0, r0, #0
   131b4:	rscs	r1, r1, #0
   131b8:	blt	13274 <__assert_fail@plt+0x2278>
   131bc:	b	13290 <__assert_fail@plt+0x2294>
   131c0:	ldr	r0, [fp, #-156]	; 0xffffff64
   131c4:	cmp	r0, #0
   131c8:	bne	131d0 <__assert_fail@plt+0x21d4>
   131cc:	b	13290 <__assert_fail@plt+0x2294>
   131d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   131d4:	cmn	r0, #1
   131d8:	bgt	13250 <__assert_fail@plt+0x2254>
   131dc:	b	131e0 <__assert_fail@plt+0x21e4>
   131e0:	b	131e4 <__assert_fail@plt+0x21e8>
   131e4:	b	13238 <__assert_fail@plt+0x223c>
   131e8:	b	13238 <__assert_fail@plt+0x223c>
   131ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131f4:	and	r0, r0, r1
   131f8:	cmn	r0, #1
   131fc:	bne	13238 <__assert_fail@plt+0x223c>
   13200:	b	13204 <__assert_fail@plt+0x2208>
   13204:	b	13208 <__assert_fail@plt+0x220c>
   13208:	ldr	r0, [fp, #-156]	; 0xffffff64
   1320c:	add	r0, r0, #0
   13210:	movw	r1, #0
   13214:	cmp	r1, r0
   13218:	blt	13274 <__assert_fail@plt+0x2278>
   1321c:	b	13290 <__assert_fail@plt+0x2294>
   13220:	ldr	r0, [fp, #-156]	; 0xffffff64
   13224:	sub	r0, r0, #1
   13228:	mvn	r1, #0
   1322c:	cmp	r1, r0
   13230:	blt	13274 <__assert_fail@plt+0x2278>
   13234:	b	13290 <__assert_fail@plt+0x2294>
   13238:	ldr	r0, [fp, #-156]	; 0xffffff64
   1323c:	rsbs	r1, r0, #0
   13240:	mov	r2, #0
   13244:	sbcs	r0, r2, r0, asr #31
   13248:	blt	13274 <__assert_fail@plt+0x2278>
   1324c:	b	13290 <__assert_fail@plt+0x2294>
   13250:	ldr	r0, [fp, #-156]	; 0xffffff64
   13254:	mvn	r1, #0
   13258:	udiv	r0, r1, r0
   1325c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13260:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13264:	subs	r0, r0, r1
   13268:	rscs	r1, r2, #0
   1326c:	bge	13290 <__assert_fail@plt+0x2294>
   13270:	b	13274 <__assert_fail@plt+0x2278>
   13274:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13278:	ldr	r1, [fp, #-156]	; 0xffffff64
   1327c:	mul	r0, r0, r1
   13280:	mov	r1, #0
   13284:	str	r1, [fp, #-28]	; 0xffffffe4
   13288:	str	r0, [fp, #-32]	; 0xffffffe0
   1328c:	b	137e0 <__assert_fail@plt+0x27e4>
   13290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13294:	ldr	r1, [fp, #-156]	; 0xffffff64
   13298:	mul	r0, r0, r1
   1329c:	mov	r1, #0
   132a0:	str	r1, [fp, #-28]	; 0xffffffe4
   132a4:	str	r0, [fp, #-32]	; 0xffffffe0
   132a8:	b	1385c <__assert_fail@plt+0x2860>
   132ac:	b	132b0 <__assert_fail@plt+0x22b4>
   132b0:	ldr	r0, [fp, #-156]	; 0xffffff64
   132b4:	cmp	r0, #0
   132b8:	bge	1343c <__assert_fail@plt+0x2440>
   132bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   132c0:	cmn	r0, #1
   132c4:	bgt	133ac <__assert_fail@plt+0x23b0>
   132c8:	b	132cc <__assert_fail@plt+0x22d0>
   132cc:	b	132d0 <__assert_fail@plt+0x22d4>
   132d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132d8:	ldr	r2, [fp, #-156]	; 0xffffff64
   132dc:	asr	r3, r2, #31
   132e0:	mvn	ip, #0
   132e4:	mvn	lr, #-2147483648	; 0x80000000
   132e8:	str	r0, [sp, #156]	; 0x9c
   132ec:	mov	r0, ip
   132f0:	str	r1, [sp, #152]	; 0x98
   132f4:	mov	r1, lr
   132f8:	bl	1e35c <__assert_fail@plt+0xd360>
   132fc:	ldr	r2, [sp, #156]	; 0x9c
   13300:	subs	r0, r2, r0
   13304:	ldr	r2, [sp, #152]	; 0x98
   13308:	sbcs	r1, r2, r1
   1330c:	blt	13508 <__assert_fail@plt+0x250c>
   13310:	b	13530 <__assert_fail@plt+0x2534>
   13314:	b	13318 <__assert_fail@plt+0x231c>
   13318:	ldr	r0, [pc, #2492]	; 13cdc <__assert_fail@plt+0x2ce0>
   1331c:	ldr	r1, [fp, #-156]	; 0xffffff64
   13320:	cmp	r1, r0
   13324:	blt	1333c <__assert_fail@plt+0x2340>
   13328:	b	13350 <__assert_fail@plt+0x2354>
   1332c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13330:	movw	r1, #0
   13334:	cmp	r1, r0
   13338:	bge	13350 <__assert_fail@plt+0x2354>
   1333c:	mov	r0, #0
   13340:	mvn	r1, #0
   13344:	str	r1, [sp, #148]	; 0x94
   13348:	str	r0, [sp, #144]	; 0x90
   1334c:	b	13384 <__assert_fail@plt+0x2388>
   13350:	ldr	r0, [fp, #-156]	; 0xffffff64
   13354:	rsb	r0, r0, #0
   13358:	asr	r3, r0, #31
   1335c:	mvn	r1, #0
   13360:	mvn	r2, #-2147483648	; 0x80000000
   13364:	str	r0, [sp, #140]	; 0x8c
   13368:	mov	r0, r1
   1336c:	mov	r1, r2
   13370:	ldr	r2, [sp, #140]	; 0x8c
   13374:	bl	1e35c <__assert_fail@plt+0xd360>
   13378:	str	r0, [sp, #148]	; 0x94
   1337c:	str	r1, [sp, #144]	; 0x90
   13380:	b	13384 <__assert_fail@plt+0x2388>
   13384:	ldr	r0, [sp, #144]	; 0x90
   13388:	ldr	r1, [sp, #148]	; 0x94
   1338c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13390:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13394:	mvn	r3, r3
   13398:	mvn	r2, r2
   1339c:	subs	r1, r2, r1
   133a0:	sbcs	r0, r3, r0
   133a4:	bge	13508 <__assert_fail@plt+0x250c>
   133a8:	b	13530 <__assert_fail@plt+0x2534>
   133ac:	ldr	r0, [fp, #-156]	; 0xffffff64
   133b0:	cmn	r0, #1
   133b4:	bne	13400 <__assert_fail@plt+0x2404>
   133b8:	b	133bc <__assert_fail@plt+0x23c0>
   133bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133c4:	add	r1, r1, #-2147483648	; 0x80000000
   133c8:	rsbs	r0, r0, #0
   133cc:	rscs	r1, r1, #0
   133d0:	blt	13508 <__assert_fail@plt+0x250c>
   133d4:	b	13530 <__assert_fail@plt+0x2534>
   133d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133e0:	subs	r0, r0, #1
   133e4:	sbcs	r1, r1, #0
   133e8:	blt	13530 <__assert_fail@plt+0x2534>
   133ec:	b	133f0 <__assert_fail@plt+0x23f4>
   133f0:	mov	r0, #0
   133f4:	cmp	r0, #0
   133f8:	bne	13508 <__assert_fail@plt+0x250c>
   133fc:	b	13530 <__assert_fail@plt+0x2534>
   13400:	ldr	r0, [fp, #-156]	; 0xffffff64
   13404:	asr	r3, r0, #31
   13408:	mov	r1, #0
   1340c:	mov	r2, #-2147483648	; 0x80000000
   13410:	str	r0, [sp, #136]	; 0x88
   13414:	mov	r0, r1
   13418:	mov	r1, r2
   1341c:	ldr	r2, [sp, #136]	; 0x88
   13420:	bl	1e35c <__assert_fail@plt+0xd360>
   13424:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13428:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1342c:	subs	r0, r0, r2
   13430:	sbcs	r1, r1, r3
   13434:	blt	13508 <__assert_fail@plt+0x250c>
   13438:	b	13530 <__assert_fail@plt+0x2534>
   1343c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13440:	cmp	r0, #0
   13444:	bne	1344c <__assert_fail@plt+0x2450>
   13448:	b	13530 <__assert_fail@plt+0x2534>
   1344c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13450:	cmn	r0, #1
   13454:	bgt	134cc <__assert_fail@plt+0x24d0>
   13458:	b	1345c <__assert_fail@plt+0x2460>
   1345c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13460:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13464:	and	r0, r0, r1
   13468:	cmn	r0, #1
   1346c:	bne	134a4 <__assert_fail@plt+0x24a8>
   13470:	b	13474 <__assert_fail@plt+0x2478>
   13474:	b	13478 <__assert_fail@plt+0x247c>
   13478:	ldr	r0, [fp, #-156]	; 0xffffff64
   1347c:	mov	r1, #-2147483648	; 0x80000000
   13480:	add	r1, r1, r0, asr #31
   13484:	rsbs	r0, r0, #0
   13488:	rscs	r1, r1, #0
   1348c:	blt	13508 <__assert_fail@plt+0x250c>
   13490:	b	13530 <__assert_fail@plt+0x2534>
   13494:	mov	r0, #0
   13498:	cmp	r0, #0
   1349c:	bne	13508 <__assert_fail@plt+0x250c>
   134a0:	b	13530 <__assert_fail@plt+0x2534>
   134a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   134a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134ac:	mov	r0, #0
   134b0:	mov	r1, #-2147483648	; 0x80000000
   134b4:	bl	1e35c <__assert_fail@plt+0xd360>
   134b8:	ldr	r2, [fp, #-156]	; 0xffffff64
   134bc:	subs	r0, r0, r2
   134c0:	sbcs	r1, r1, r2, asr #31
   134c4:	blt	13508 <__assert_fail@plt+0x250c>
   134c8:	b	13530 <__assert_fail@plt+0x2534>
   134cc:	ldr	r0, [fp, #-156]	; 0xffffff64
   134d0:	asr	r3, r0, #31
   134d4:	mvn	r1, #0
   134d8:	mvn	r2, #-2147483648	; 0x80000000
   134dc:	str	r0, [sp, #132]	; 0x84
   134e0:	mov	r0, r1
   134e4:	mov	r1, r2
   134e8:	ldr	r2, [sp, #132]	; 0x84
   134ec:	bl	1e35c <__assert_fail@plt+0xd360>
   134f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   134f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134f8:	subs	r0, r0, r2
   134fc:	sbcs	r1, r1, r3
   13500:	bge	13530 <__assert_fail@plt+0x2534>
   13504:	b	13508 <__assert_fail@plt+0x250c>
   13508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1350c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13510:	ldr	r2, [fp, #-156]	; 0xffffff64
   13514:	asr	r3, r2, #31
   13518:	umull	ip, lr, r0, r2
   1351c:	mla	r0, r0, r3, lr
   13520:	mla	r0, r1, r2, r0
   13524:	str	ip, [fp, #-32]	; 0xffffffe0
   13528:	str	r0, [fp, #-28]	; 0xffffffe4
   1352c:	b	137e0 <__assert_fail@plt+0x27e4>
   13530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13534:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13538:	ldr	r2, [fp, #-156]	; 0xffffff64
   1353c:	asr	r3, r2, #31
   13540:	umull	ip, lr, r0, r2
   13544:	mla	r0, r0, r3, lr
   13548:	mla	r0, r1, r2, r0
   1354c:	str	ip, [fp, #-32]	; 0xffffffe0
   13550:	str	r0, [fp, #-28]	; 0xffffffe4
   13554:	b	1385c <__assert_fail@plt+0x2860>
   13558:	ldr	r0, [fp, #-156]	; 0xffffff64
   1355c:	cmp	r0, #0
   13560:	bge	136c8 <__assert_fail@plt+0x26cc>
   13564:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13568:	cmn	r0, #1
   1356c:	bgt	13648 <__assert_fail@plt+0x264c>
   13570:	b	13574 <__assert_fail@plt+0x2578>
   13574:	b	135b8 <__assert_fail@plt+0x25bc>
   13578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1357c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13580:	ldr	r2, [fp, #-156]	; 0xffffff64
   13584:	asr	r3, r2, #31
   13588:	mvn	ip, #0
   1358c:	str	r0, [sp, #128]	; 0x80
   13590:	mov	r0, ip
   13594:	str	r1, [sp, #124]	; 0x7c
   13598:	mov	r1, ip
   1359c:	bl	1e430 <__assert_fail@plt+0xd434>
   135a0:	ldr	r2, [sp, #128]	; 0x80
   135a4:	subs	r0, r2, r0
   135a8:	ldr	r2, [sp, #124]	; 0x7c
   135ac:	sbcs	r1, r2, r1
   135b0:	bcc	13790 <__assert_fail@plt+0x2794>
   135b4:	b	137b8 <__assert_fail@plt+0x27bc>
   135b8:	b	135bc <__assert_fail@plt+0x25c0>
   135bc:	ldr	r0, [pc, #1816]	; 13cdc <__assert_fail@plt+0x2ce0>
   135c0:	ldr	r1, [fp, #-156]	; 0xffffff64
   135c4:	cmp	r1, r0
   135c8:	blt	135e0 <__assert_fail@plt+0x25e4>
   135cc:	b	135f4 <__assert_fail@plt+0x25f8>
   135d0:	ldr	r0, [fp, #-156]	; 0xffffff64
   135d4:	movw	r1, #0
   135d8:	cmp	r1, r0
   135dc:	bge	135f4 <__assert_fail@plt+0x25f8>
   135e0:	mov	r0, #1
   135e4:	mvn	r1, #0
   135e8:	str	r1, [sp, #120]	; 0x78
   135ec:	str	r0, [sp, #116]	; 0x74
   135f0:	b	13620 <__assert_fail@plt+0x2624>
   135f4:	ldr	r0, [fp, #-156]	; 0xffffff64
   135f8:	rsb	r0, r0, #0
   135fc:	asr	r3, r0, #31
   13600:	mvn	r1, #0
   13604:	str	r0, [sp, #112]	; 0x70
   13608:	mov	r0, r1
   1360c:	ldr	r2, [sp, #112]	; 0x70
   13610:	bl	1e430 <__assert_fail@plt+0xd434>
   13614:	str	r0, [sp, #120]	; 0x78
   13618:	str	r1, [sp, #116]	; 0x74
   1361c:	b	13620 <__assert_fail@plt+0x2624>
   13620:	ldr	r0, [sp, #116]	; 0x74
   13624:	ldr	r1, [sp, #120]	; 0x78
   13628:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1362c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13630:	mvn	r3, r3
   13634:	mvn	r2, r2
   13638:	subs	r1, r2, r1
   1363c:	sbcs	r0, r3, r0
   13640:	bcs	13790 <__assert_fail@plt+0x2794>
   13644:	b	137b8 <__assert_fail@plt+0x27bc>
   13648:	b	1364c <__assert_fail@plt+0x2650>
   1364c:	b	136b0 <__assert_fail@plt+0x26b4>
   13650:	b	136b0 <__assert_fail@plt+0x26b4>
   13654:	ldr	r0, [fp, #-156]	; 0xffffff64
   13658:	cmn	r0, #1
   1365c:	bne	136b0 <__assert_fail@plt+0x26b4>
   13660:	b	13664 <__assert_fail@plt+0x2668>
   13664:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13668:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1366c:	rsbs	r0, r0, #0
   13670:	rscs	r1, r1, #0
   13674:	blt	13790 <__assert_fail@plt+0x2794>
   13678:	b	137b8 <__assert_fail@plt+0x27bc>
   1367c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13680:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13684:	subs	r0, r0, #1
   13688:	sbcs	r1, r1, #0
   1368c:	blt	137b8 <__assert_fail@plt+0x27bc>
   13690:	b	13694 <__assert_fail@plt+0x2698>
   13694:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13698:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1369c:	subs	r0, r0, #1
   136a0:	sbc	r1, r1, #0
   136a4:	cmn	r1, #1
   136a8:	bgt	13790 <__assert_fail@plt+0x2794>
   136ac:	b	137b8 <__assert_fail@plt+0x27bc>
   136b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   136b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136b8:	rsbs	r0, r0, #0
   136bc:	rscs	r1, r1, #0
   136c0:	blt	13790 <__assert_fail@plt+0x2794>
   136c4:	b	137b8 <__assert_fail@plt+0x27bc>
   136c8:	ldr	r0, [fp, #-156]	; 0xffffff64
   136cc:	cmp	r0, #0
   136d0:	bne	136d8 <__assert_fail@plt+0x26dc>
   136d4:	b	137b8 <__assert_fail@plt+0x27bc>
   136d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   136dc:	cmn	r0, #1
   136e0:	bgt	1375c <__assert_fail@plt+0x2760>
   136e4:	b	136e8 <__assert_fail@plt+0x26ec>
   136e8:	b	136ec <__assert_fail@plt+0x26f0>
   136ec:	b	13744 <__assert_fail@plt+0x2748>
   136f0:			; <UNDEFINED> instruction: 0xffff8000
   136f4:	b	13744 <__assert_fail@plt+0x2748>
   136f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   136fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13700:	and	r0, r0, r1
   13704:	cmn	r0, #1
   13708:	bne	13744 <__assert_fail@plt+0x2748>
   1370c:	b	13710 <__assert_fail@plt+0x2714>
   13710:	b	13714 <__assert_fail@plt+0x2718>
   13714:	ldr	r0, [fp, #-156]	; 0xffffff64
   13718:	add	r0, r0, #0
   1371c:	movw	r1, #0
   13720:	cmp	r1, r0
   13724:	blt	13790 <__assert_fail@plt+0x2794>
   13728:	b	137b8 <__assert_fail@plt+0x27bc>
   1372c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13730:	sub	r0, r0, #1
   13734:	mvn	r1, #0
   13738:	cmp	r1, r0
   1373c:	blt	13790 <__assert_fail@plt+0x2794>
   13740:	b	137b8 <__assert_fail@plt+0x27bc>
   13744:	ldr	r0, [fp, #-156]	; 0xffffff64
   13748:	rsbs	r1, r0, #0
   1374c:	mov	r2, #0
   13750:	sbcs	r0, r2, r0, asr #31
   13754:	blt	13790 <__assert_fail@plt+0x2794>
   13758:	b	137b8 <__assert_fail@plt+0x27bc>
   1375c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13760:	asr	r3, r0, #31
   13764:	mvn	r1, #0
   13768:	str	r0, [sp, #108]	; 0x6c
   1376c:	mov	r0, r1
   13770:	ldr	r2, [sp, #108]	; 0x6c
   13774:	bl	1e430 <__assert_fail@plt+0xd434>
   13778:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1377c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13780:	subs	r0, r0, r2
   13784:	sbcs	r1, r1, r3
   13788:	bcs	137b8 <__assert_fail@plt+0x27bc>
   1378c:	b	13790 <__assert_fail@plt+0x2794>
   13790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13794:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13798:	ldr	r2, [fp, #-156]	; 0xffffff64
   1379c:	asr	r3, r2, #31
   137a0:	umull	ip, lr, r0, r2
   137a4:	mla	r0, r0, r3, lr
   137a8:	mla	r0, r1, r2, r0
   137ac:	str	ip, [fp, #-32]	; 0xffffffe0
   137b0:	str	r0, [fp, #-28]	; 0xffffffe4
   137b4:	b	137e0 <__assert_fail@plt+0x27e4>
   137b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137c0:	ldr	r2, [fp, #-156]	; 0xffffff64
   137c4:	asr	r3, r2, #31
   137c8:	umull	ip, lr, r0, r2
   137cc:	mla	r0, r0, r3, lr
   137d0:	mla	r0, r1, r2, r0
   137d4:	str	ip, [fp, #-32]	; 0xffffffe0
   137d8:	str	r0, [fp, #-28]	; 0xffffffe4
   137dc:	b	1385c <__assert_fail@plt+0x2860>
   137e0:	movw	r0, #60860	; 0xedbc
   137e4:	movt	r0, #1
   137e8:	bl	10f0c <gettext@plt>
   137ec:	ldr	r1, [fp, #-168]	; 0xffffff58
   137f0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   137f4:	ldr	r3, [fp, #-156]	; 0xffffff64
   137f8:	ldr	ip, [fp, #-20]	; 0xffffffec
   137fc:	movw	lr, #4
   13800:	str	r0, [sp, #104]	; 0x68
   13804:	mov	r0, lr
   13808:	str	r1, [sp, #100]	; 0x64
   1380c:	mov	r1, ip
   13810:	str	r2, [sp, #96]	; 0x60
   13814:	str	r3, [sp, #92]	; 0x5c
   13818:	bl	16110 <__assert_fail@plt+0x5114>
   1381c:	mov	r1, sp
   13820:	str	r0, [r1, #12]
   13824:	ldr	r0, [sp, #92]	; 0x5c
   13828:	str	r0, [r1, #8]
   1382c:	ldr	r2, [sp, #96]	; 0x60
   13830:	str	r2, [r1, #4]
   13834:	ldr	r3, [sp, #100]	; 0x64
   13838:	str	r3, [r1]
   1383c:	mov	r1, #0
   13840:	mov	r0, r1
   13844:	ldr	r2, [sp, #104]	; 0x68
   13848:	bl	10ea0 <error@plt>
   1384c:	movw	r0, #0
   13850:	and	r0, r0, #1
   13854:	strb	r0, [fp, #-9]
   13858:	b	13ccc <__assert_fail@plt+0x2cd0>
   1385c:	b	13860 <__assert_fail@plt+0x2864>
   13860:	ldr	r0, [fp, #16]
   13864:	cmp	r0, #0
   13868:	beq	13c00 <__assert_fail@plt+0x2c04>
   1386c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13870:	cmp	r0, #0
   13874:	bmi	13890 <__assert_fail@plt+0x2894>
   13878:	b	1387c <__assert_fail@plt+0x2880>
   1387c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13880:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13884:	str	r1, [fp, #-172]	; 0xffffff54
   13888:	str	r0, [fp, #-176]	; 0xffffff50
   1388c:	b	139a4 <__assert_fail@plt+0x29a8>
   13890:	sub	r0, fp, #144	; 0x90
   13894:	bl	11f18 <__assert_fail@plt+0xf1c>
   13898:	tst	r0, #1
   1389c:	beq	1390c <__assert_fail@plt+0x2910>
   138a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   138a4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   138a8:	str	r1, [fp, #-172]	; 0xffffff54
   138ac:	str	r0, [fp, #-176]	; 0xffffff50
   138b0:	ldr	r0, [fp, #-172]	; 0xffffff54
   138b4:	cmn	r0, #1
   138b8:	bgt	13908 <__assert_fail@plt+0x290c>
   138bc:	b	138c0 <__assert_fail@plt+0x28c4>
   138c0:	movw	r0, #60906	; 0xedea
   138c4:	movt	r0, #1
   138c8:	bl	10f0c <gettext@plt>
   138cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   138d0:	movw	r2, #4
   138d4:	str	r0, [sp, #88]	; 0x58
   138d8:	mov	r0, r2
   138dc:	bl	16110 <__assert_fail@plt+0x5114>
   138e0:	movw	r1, #0
   138e4:	str	r0, [sp, #84]	; 0x54
   138e8:	mov	r0, r1
   138ec:	ldr	r2, [sp, #88]	; 0x58
   138f0:	ldr	r3, [sp, #84]	; 0x54
   138f4:	bl	10ea0 <error@plt>
   138f8:	movw	r0, #0
   138fc:	and	r0, r0, #1
   13900:	strb	r0, [fp, #-9]
   13904:	b	13ccc <__assert_fail@plt+0x2cd0>
   13908:	b	139a0 <__assert_fail@plt+0x29a4>
   1390c:	ldr	r0, [fp, #-16]
   13910:	mov	r1, sp
   13914:	mov	r2, #2
   13918:	str	r2, [r1]
   1391c:	mov	r1, #0
   13920:	mov	r2, r1
   13924:	mov	r3, r1
   13928:	bl	10e64 <lseek64@plt>
   1392c:	str	r1, [fp, #-172]	; 0xffffff54
   13930:	str	r0, [fp, #-176]	; 0xffffff50
   13934:	ldr	r0, [fp, #-172]	; 0xffffff54
   13938:	cmn	r0, #1
   1393c:	bgt	1399c <__assert_fail@plt+0x29a0>
   13940:	b	13944 <__assert_fail@plt+0x2948>
   13944:	bl	10f3c <__errno_location@plt>
   13948:	ldr	r1, [r0]
   1394c:	movw	r0, #60151	; 0xeaf7
   13950:	movt	r0, #1
   13954:	str	r1, [sp, #80]	; 0x50
   13958:	bl	10f0c <gettext@plt>
   1395c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13960:	movw	r2, #4
   13964:	str	r0, [sp, #76]	; 0x4c
   13968:	mov	r0, r2
   1396c:	bl	16110 <__assert_fail@plt+0x5114>
   13970:	movw	r1, #0
   13974:	str	r0, [sp, #72]	; 0x48
   13978:	mov	r0, r1
   1397c:	ldr	r1, [sp, #80]	; 0x50
   13980:	ldr	r2, [sp, #76]	; 0x4c
   13984:	ldr	r3, [sp, #72]	; 0x48
   13988:	bl	10ea0 <error@plt>
   1398c:	movw	r0, #0
   13990:	and	r0, r0, #1
   13994:	strb	r0, [fp, #-9]
   13998:	b	13ccc <__assert_fail@plt+0x2cd0>
   1399c:	b	139a0 <__assert_fail@plt+0x29a4>
   139a0:	b	139a4 <__assert_fail@plt+0x29a8>
   139a4:	ldr	r0, [fp, #16]
   139a8:	cmp	r0, #2
   139ac:	bne	13a0c <__assert_fail@plt+0x2a10>
   139b0:	ldr	r0, [fp, #-176]	; 0xffffff50
   139b4:	ldr	r1, [fp, #-172]	; 0xffffff54
   139b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139c0:	subs	r0, r2, r0
   139c4:	sbcs	r1, r3, r1
   139c8:	bge	139e4 <__assert_fail@plt+0x29e8>
   139cc:	b	139d0 <__assert_fail@plt+0x29d4>
   139d0:	ldr	r0, [fp, #-176]	; 0xffffff50
   139d4:	ldr	r1, [fp, #-172]	; 0xffffff54
   139d8:	str	r0, [sp, #68]	; 0x44
   139dc:	str	r1, [sp, #64]	; 0x40
   139e0:	b	139f8 <__assert_fail@plt+0x29fc>
   139e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139ec:	str	r0, [sp, #68]	; 0x44
   139f0:	str	r1, [sp, #64]	; 0x40
   139f4:	b	139f8 <__assert_fail@plt+0x29fc>
   139f8:	ldr	r0, [sp, #64]	; 0x40
   139fc:	ldr	r1, [sp, #68]	; 0x44
   13a00:	str	r1, [fp, #-152]	; 0xffffff68
   13a04:	str	r0, [fp, #-148]	; 0xffffff6c
   13a08:	b	13bfc <__assert_fail@plt+0x2c00>
   13a0c:	ldr	r0, [fp, #16]
   13a10:	cmp	r0, #3
   13a14:	bne	13a78 <__assert_fail@plt+0x2a7c>
   13a18:	ldr	r0, [fp, #-176]	; 0xffffff50
   13a1c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13a20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a28:	subs	r0, r0, r2
   13a2c:	sbcs	r1, r1, r3
   13a30:	bge	13a50 <__assert_fail@plt+0x2a54>
   13a34:	b	13a38 <__assert_fail@plt+0x2a3c>
   13a38:	ldr	r0, [fp, #-176]	; 0xffffff50
   13a3c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13a40:	str	r0, [sp, #60]	; 0x3c
   13a44:	str	r1, [sp, #56]	; 0x38
   13a48:	b	13a64 <__assert_fail@plt+0x2a68>
   13a4c:	svcvc	0x00ffffff
   13a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a58:	str	r0, [sp, #60]	; 0x3c
   13a5c:	str	r1, [sp, #56]	; 0x38
   13a60:	b	13a64 <__assert_fail@plt+0x2a68>
   13a64:	ldr	r0, [sp, #56]	; 0x38
   13a68:	ldr	r1, [sp, #60]	; 0x3c
   13a6c:	str	r1, [fp, #-152]	; 0xffffff68
   13a70:	str	r0, [fp, #-148]	; 0xffffff6c
   13a74:	b	13bf8 <__assert_fail@plt+0x2bfc>
   13a78:	ldr	r0, [fp, #16]
   13a7c:	cmp	r0, #4
   13a80:	bne	13abc <__assert_fail@plt+0x2ac0>
   13a84:	ldr	r0, [fp, #-176]	; 0xffffff50
   13a88:	ldr	r1, [fp, #-172]	; 0xffffff54
   13a8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a94:	str	r0, [sp, #52]	; 0x34
   13a98:	str	r1, [sp, #48]	; 0x30
   13a9c:	bl	1e35c <__assert_fail@plt+0xd360>
   13aa0:	ldr	ip, [sp, #52]	; 0x34
   13aa4:	subs	r2, ip, r2
   13aa8:	ldr	lr, [sp, #48]	; 0x30
   13aac:	sbc	r3, lr, r3
   13ab0:	str	r2, [fp, #-152]	; 0xffffff68
   13ab4:	str	r3, [fp, #-148]	; 0xffffff6c
   13ab8:	b	13bf4 <__assert_fail@plt+0x2bf8>
   13abc:	ldr	r0, [fp, #16]
   13ac0:	cmp	r0, #5
   13ac4:	bne	13b44 <__assert_fail@plt+0x2b48>
   13ac8:	ldr	r0, [fp, #-176]	; 0xffffff50
   13acc:	ldr	r1, [fp, #-172]	; 0xffffff54
   13ad0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ad8:	bl	1e35c <__assert_fail@plt+0xd360>
   13adc:	str	r3, [fp, #-180]	; 0xffffff4c
   13ae0:	str	r2, [fp, #-184]	; 0xffffff48
   13ae4:	ldr	r2, [fp, #-184]	; 0xffffff48
   13ae8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13aec:	orr	r2, r2, r3
   13af0:	cmp	r2, #0
   13af4:	bne	13b10 <__assert_fail@plt+0x2b14>
   13af8:	b	13afc <__assert_fail@plt+0x2b00>
   13afc:	mov	r0, #0
   13b00:	mov	r1, r0
   13b04:	str	r1, [sp, #44]	; 0x2c
   13b08:	str	r0, [sp, #40]	; 0x28
   13b0c:	b	13b34 <__assert_fail@plt+0x2b38>
   13b10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b18:	ldr	r2, [fp, #-184]	; 0xffffff48
   13b1c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13b20:	subs	r0, r0, r2
   13b24:	sbc	r1, r1, r3
   13b28:	str	r0, [sp, #44]	; 0x2c
   13b2c:	str	r1, [sp, #40]	; 0x28
   13b30:	b	13b34 <__assert_fail@plt+0x2b38>
   13b34:	ldr	r0, [sp, #40]	; 0x28
   13b38:	ldr	r1, [sp, #44]	; 0x2c
   13b3c:	str	r1, [fp, #-32]	; 0xffffffe0
   13b40:	str	r0, [fp, #-28]	; 0xffffffe4
   13b44:	ldr	r0, [fp, #-176]	; 0xffffff50
   13b48:	ldr	r1, [fp, #-172]	; 0xffffff54
   13b4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13b54:	mov	ip, #0
   13b58:	cmn	r1, #1
   13b5c:	mov	lr, ip
   13b60:	movwgt	lr, #1
   13b64:	adds	r0, r0, r2
   13b68:	adc	r1, r1, r3
   13b6c:	cmn	r1, #1
   13b70:	mov	r2, ip
   13b74:	movwgt	r2, #1
   13b78:	subs	r2, lr, r2
   13b7c:	movwne	r2, #1
   13b80:	cmn	r3, #1
   13b84:	movwgt	ip, #1
   13b88:	sub	r3, lr, ip
   13b8c:	clz	r3, r3
   13b90:	lsr	r3, r3, #5
   13b94:	and	r2, r3, r2
   13b98:	str	r0, [fp, #-152]	; 0xffffff68
   13b9c:	str	r1, [fp, #-148]	; 0xffffff6c
   13ba0:	tst	r2, #1
   13ba4:	beq	13bf0 <__assert_fail@plt+0x2bf4>
   13ba8:	movw	r0, #60948	; 0xee14
   13bac:	movt	r0, #1
   13bb0:	bl	10f0c <gettext@plt>
   13bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13bb8:	movw	r2, #4
   13bbc:	str	r0, [sp, #36]	; 0x24
   13bc0:	mov	r0, r2
   13bc4:	bl	16110 <__assert_fail@plt+0x5114>
   13bc8:	movw	r1, #0
   13bcc:	str	r0, [sp, #32]
   13bd0:	mov	r0, r1
   13bd4:	ldr	r2, [sp, #36]	; 0x24
   13bd8:	ldr	r3, [sp, #32]
   13bdc:	bl	10ea0 <error@plt>
   13be0:	movw	r0, #0
   13be4:	and	r0, r0, #1
   13be8:	strb	r0, [fp, #-9]
   13bec:	b	13ccc <__assert_fail@plt+0x2cd0>
   13bf0:	b	13bf4 <__assert_fail@plt+0x2bf8>
   13bf4:	b	13bf8 <__assert_fail@plt+0x2bfc>
   13bf8:	b	13bfc <__assert_fail@plt+0x2c00>
   13bfc:	b	13c10 <__assert_fail@plt+0x2c14>
   13c00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c08:	str	r1, [fp, #-148]	; 0xffffff6c
   13c0c:	str	r0, [fp, #-152]	; 0xffffff68
   13c10:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13c14:	cmn	r0, #1
   13c18:	bgt	13c2c <__assert_fail@plt+0x2c30>
   13c1c:	b	13c20 <__assert_fail@plt+0x2c24>
   13c20:	mov	r0, #0
   13c24:	str	r0, [fp, #-148]	; 0xffffff6c
   13c28:	str	r0, [fp, #-152]	; 0xffffff68
   13c2c:	ldr	r0, [fp, #-16]
   13c30:	ldr	r2, [fp, #-152]	; 0xffffff68
   13c34:	ldr	r3, [fp, #-148]	; 0xffffff6c
   13c38:	bl	10e1c <ftruncate64@plt>
   13c3c:	cmp	r0, #0
   13c40:	beq	13cc0 <__assert_fail@plt+0x2cc4>
   13c44:	ldr	r0, [fp, #-152]	; 0xffffff68
   13c48:	ldr	r1, [fp, #-148]	; 0xffffff6c
   13c4c:	str	r1, [fp, #-188]	; 0xffffff44
   13c50:	str	r0, [fp, #-192]	; 0xffffff40
   13c54:	bl	10f3c <__errno_location@plt>
   13c58:	ldr	r1, [r0]
   13c5c:	movw	r0, #60983	; 0xee37
   13c60:	movt	r0, #1
   13c64:	str	r1, [sp, #28]
   13c68:	bl	10f0c <gettext@plt>
   13c6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c70:	mov	r2, #4
   13c74:	str	r0, [sp, #24]
   13c78:	mov	r0, r2
   13c7c:	bl	16110 <__assert_fail@plt+0x5114>
   13c80:	ldr	r1, [fp, #-192]	; 0xffffff40
   13c84:	ldr	r2, [fp, #-188]	; 0xffffff44
   13c88:	mov	r3, sp
   13c8c:	str	r2, [r3, #4]
   13c90:	str	r1, [r3]
   13c94:	mov	r1, #0
   13c98:	str	r0, [sp, #20]
   13c9c:	mov	r0, r1
   13ca0:	ldr	r1, [sp, #28]
   13ca4:	ldr	r2, [sp, #24]
   13ca8:	ldr	r3, [sp, #20]
   13cac:	bl	10ea0 <error@plt>
   13cb0:	movw	r0, #0
   13cb4:	and	r0, r0, #1
   13cb8:	strb	r0, [fp, #-9]
   13cbc:	b	13ccc <__assert_fail@plt+0x2cd0>
   13cc0:	movw	r0, #1
   13cc4:	and	r0, r0, #1
   13cc8:	strb	r0, [fp, #-9]
   13ccc:	ldrb	r0, [fp, #-9]
   13cd0:	and	r0, r0, #1
   13cd4:	sub	sp, fp, #8
   13cd8:	pop	{r4, sl, fp, pc}
   13cdc:	andhi	r0, r0, r1
   13ce0:	svcvc	0x00ffffff
   13ce4:	sub	sp, sp, #4
   13ce8:	str	r0, [sp]
   13cec:	ldr	r0, [sp]
   13cf0:	movw	r1, #344	; 0x158
   13cf4:	movt	r1, #3
   13cf8:	str	r0, [r1]
   13cfc:	add	sp, sp, #4
   13d00:	bx	lr
   13d04:	sub	sp, sp, #4
   13d08:	and	r0, r0, #1
   13d0c:	strb	r0, [sp, #3]
   13d10:	ldrb	r0, [sp, #3]
   13d14:	and	r0, r0, #1
   13d18:	movw	r1, #348	; 0x15c
   13d1c:	movt	r1, #3
   13d20:	strb	r0, [r1]
   13d24:	add	sp, sp, #4
   13d28:	bx	lr
   13d2c:	push	{fp, lr}
   13d30:	mov	fp, sp
   13d34:	sub	sp, sp, #24
   13d38:	movw	r0, #324	; 0x144
   13d3c:	movt	r0, #3
   13d40:	ldr	r0, [r0]
   13d44:	bl	1c154 <__assert_fail@plt+0xb158>
   13d48:	cmp	r0, #0
   13d4c:	beq	13e1c <__assert_fail@plt+0x2e20>
   13d50:	movw	r0, #348	; 0x15c
   13d54:	movt	r0, #3
   13d58:	ldrb	r0, [r0]
   13d5c:	tst	r0, #1
   13d60:	beq	13d74 <__assert_fail@plt+0x2d78>
   13d64:	bl	10f3c <__errno_location@plt>
   13d68:	ldr	r0, [r0]
   13d6c:	cmp	r0, #32
   13d70:	beq	13e1c <__assert_fail@plt+0x2e20>
   13d74:	movw	r0, #61203	; 0xef13
   13d78:	movt	r0, #1
   13d7c:	bl	10f0c <gettext@plt>
   13d80:	str	r0, [fp, #-4]
   13d84:	movw	r0, #344	; 0x158
   13d88:	movt	r0, #3
   13d8c:	ldr	r0, [r0]
   13d90:	movw	r1, #0
   13d94:	cmp	r0, r1
   13d98:	beq	13df0 <__assert_fail@plt+0x2df4>
   13d9c:	bl	10f3c <__errno_location@plt>
   13da0:	ldr	r1, [r0]
   13da4:	movw	r0, #344	; 0x158
   13da8:	movt	r0, #3
   13dac:	ldr	r0, [r0]
   13db0:	str	r1, [fp, #-8]
   13db4:	bl	1620c <__assert_fail@plt+0x5210>
   13db8:	ldr	r1, [fp, #-4]
   13dbc:	movw	r2, #0
   13dc0:	str	r0, [sp, #12]
   13dc4:	mov	r0, r2
   13dc8:	ldr	r2, [fp, #-8]
   13dcc:	str	r1, [sp, #8]
   13dd0:	mov	r1, r2
   13dd4:	movw	r2, #61215	; 0xef1f
   13dd8:	movt	r2, #1
   13ddc:	ldr	r3, [sp, #12]
   13de0:	ldr	ip, [sp, #8]
   13de4:	str	ip, [sp]
   13de8:	bl	10ea0 <error@plt>
   13dec:	b	13e0c <__assert_fail@plt+0x2e10>
   13df0:	bl	10f3c <__errno_location@plt>
   13df4:	ldr	r1, [r0]
   13df8:	ldr	r3, [fp, #-4]
   13dfc:	movw	r0, #0
   13e00:	movw	r2, #61219	; 0xef23
   13e04:	movt	r2, #1
   13e08:	bl	10ea0 <error@plt>
   13e0c:	movw	r0, #232	; 0xe8
   13e10:	movt	r0, #3
   13e14:	ldr	r0, [r0]
   13e18:	bl	10df8 <_exit@plt>
   13e1c:	movw	r0, #320	; 0x140
   13e20:	movt	r0, #3
   13e24:	ldr	r0, [r0]
   13e28:	bl	1c154 <__assert_fail@plt+0xb158>
   13e2c:	cmp	r0, #0
   13e30:	beq	13e44 <__assert_fail@plt+0x2e48>
   13e34:	movw	r0, #232	; 0xe8
   13e38:	movt	r0, #3
   13e3c:	ldr	r0, [r0]
   13e40:	bl	10df8 <_exit@plt>
   13e44:	mov	sp, fp
   13e48:	pop	{fp, pc}
   13e4c:	push	{fp, lr}
   13e50:	mov	fp, sp
   13e54:	sub	sp, sp, #24
   13e58:	str	r0, [fp, #-4]
   13e5c:	ldr	r0, [fp, #-4]
   13e60:	movw	r1, #0
   13e64:	cmp	r0, r1
   13e68:	bne	13e8c <__assert_fail@plt+0x2e90>
   13e6c:	movw	r0, #320	; 0x140
   13e70:	movt	r0, #3
   13e74:	ldr	r1, [r0]
   13e78:	movw	r0, #61222	; 0xef26
   13e7c:	movt	r0, #1
   13e80:	bl	10fcc <fputs@plt>
   13e84:	str	r0, [sp, #8]
   13e88:	bl	10fe4 <abort@plt>
   13e8c:	ldr	r0, [fp, #-4]
   13e90:	movw	r1, #47	; 0x2f
   13e94:	bl	10f9c <strrchr@plt>
   13e98:	str	r0, [fp, #-8]
   13e9c:	ldr	r0, [fp, #-8]
   13ea0:	movw	r1, #0
   13ea4:	cmp	r0, r1
   13ea8:	beq	13ebc <__assert_fail@plt+0x2ec0>
   13eac:	ldr	r0, [fp, #-8]
   13eb0:	add	r0, r0, #1
   13eb4:	str	r0, [sp, #4]
   13eb8:	b	13ec4 <__assert_fail@plt+0x2ec8>
   13ebc:	ldr	r0, [fp, #-4]
   13ec0:	str	r0, [sp, #4]
   13ec4:	ldr	r0, [sp, #4]
   13ec8:	str	r0, [sp, #12]
   13ecc:	ldr	r0, [sp, #12]
   13ed0:	ldr	r1, [fp, #-4]
   13ed4:	sub	r0, r0, r1
   13ed8:	cmp	r0, #7
   13edc:	blt	13f48 <__assert_fail@plt+0x2f4c>
   13ee0:	ldr	r0, [sp, #12]
   13ee4:	mvn	r1, #6
   13ee8:	add	r0, r0, r1
   13eec:	movw	r1, #61278	; 0xef5e
   13ef0:	movt	r1, #1
   13ef4:	movw	r2, #7
   13ef8:	bl	10fd8 <strncmp@plt>
   13efc:	cmp	r0, #0
   13f00:	bne	13f48 <__assert_fail@plt+0x2f4c>
   13f04:	ldr	r0, [sp, #12]
   13f08:	str	r0, [fp, #-4]
   13f0c:	ldr	r0, [sp, #12]
   13f10:	movw	r1, #61286	; 0xef66
   13f14:	movt	r1, #1
   13f18:	movw	r2, #3
   13f1c:	bl	10fd8 <strncmp@plt>
   13f20:	cmp	r0, #0
   13f24:	bne	13f44 <__assert_fail@plt+0x2f48>
   13f28:	ldr	r0, [sp, #12]
   13f2c:	add	r0, r0, #3
   13f30:	str	r0, [fp, #-4]
   13f34:	ldr	r0, [fp, #-4]
   13f38:	movw	r1, #304	; 0x130
   13f3c:	movt	r1, #3
   13f40:	str	r0, [r1]
   13f44:	b	13f48 <__assert_fail@plt+0x2f4c>
   13f48:	ldr	r0, [fp, #-4]
   13f4c:	movw	r1, #352	; 0x160
   13f50:	movt	r1, #3
   13f54:	str	r0, [r1]
   13f58:	ldr	r0, [fp, #-4]
   13f5c:	movw	r1, #308	; 0x134
   13f60:	movt	r1, #3
   13f64:	str	r0, [r1]
   13f68:	mov	sp, fp
   13f6c:	pop	{fp, pc}
   13f70:	push	{fp, lr}
   13f74:	mov	fp, sp
   13f78:	sub	sp, sp, #24
   13f7c:	str	r0, [fp, #-4]
   13f80:	bl	10f3c <__errno_location@plt>
   13f84:	ldr	r0, [r0]
   13f88:	str	r0, [fp, #-8]
   13f8c:	ldr	r0, [fp, #-4]
   13f90:	movw	r1, #0
   13f94:	cmp	r0, r1
   13f98:	beq	13fa8 <__assert_fail@plt+0x2fac>
   13f9c:	ldr	r0, [fp, #-4]
   13fa0:	str	r0, [sp, #8]
   13fa4:	b	13fb8 <__assert_fail@plt+0x2fbc>
   13fa8:	movw	r0, #356	; 0x164
   13fac:	movt	r0, #3
   13fb0:	str	r0, [sp, #8]
   13fb4:	b	13fb8 <__assert_fail@plt+0x2fbc>
   13fb8:	ldr	r0, [sp, #8]
   13fbc:	movw	r1, #48	; 0x30
   13fc0:	bl	19ae4 <__assert_fail@plt+0x8ae8>
   13fc4:	str	r0, [sp, #12]
   13fc8:	ldr	r0, [fp, #-8]
   13fcc:	str	r0, [sp, #4]
   13fd0:	bl	10f3c <__errno_location@plt>
   13fd4:	ldr	r1, [sp, #4]
   13fd8:	str	r1, [r0]
   13fdc:	ldr	r0, [sp, #12]
   13fe0:	mov	sp, fp
   13fe4:	pop	{fp, pc}
   13fe8:	sub	sp, sp, #8
   13fec:	str	r0, [sp, #4]
   13ff0:	ldr	r0, [sp, #4]
   13ff4:	movw	r1, #0
   13ff8:	cmp	r0, r1
   13ffc:	beq	1400c <__assert_fail@plt+0x3010>
   14000:	ldr	r0, [sp, #4]
   14004:	str	r0, [sp]
   14008:	b	1401c <__assert_fail@plt+0x3020>
   1400c:	movw	r0, #356	; 0x164
   14010:	movt	r0, #3
   14014:	str	r0, [sp]
   14018:	b	1401c <__assert_fail@plt+0x3020>
   1401c:	ldr	r0, [sp]
   14020:	ldr	r0, [r0]
   14024:	add	sp, sp, #8
   14028:	bx	lr
   1402c:	sub	sp, sp, #16
   14030:	str	r0, [sp, #12]
   14034:	str	r1, [sp, #8]
   14038:	ldr	r0, [sp, #8]
   1403c:	ldr	r1, [sp, #12]
   14040:	movw	r2, #0
   14044:	cmp	r1, r2
   14048:	str	r0, [sp, #4]
   1404c:	beq	1405c <__assert_fail@plt+0x3060>
   14050:	ldr	r0, [sp, #12]
   14054:	str	r0, [sp]
   14058:	b	1406c <__assert_fail@plt+0x3070>
   1405c:	movw	r0, #356	; 0x164
   14060:	movt	r0, #3
   14064:	str	r0, [sp]
   14068:	b	1406c <__assert_fail@plt+0x3070>
   1406c:	ldr	r0, [sp]
   14070:	ldr	r1, [sp, #4]
   14074:	str	r1, [r0]
   14078:	add	sp, sp, #16
   1407c:	bx	lr
   14080:	sub	sp, sp, #32
   14084:	str	r0, [sp, #28]
   14088:	strb	r1, [sp, #27]
   1408c:	str	r2, [sp, #20]
   14090:	ldrb	r0, [sp, #27]
   14094:	strb	r0, [sp, #19]
   14098:	ldr	r0, [sp, #28]
   1409c:	movw	r1, #0
   140a0:	cmp	r0, r1
   140a4:	beq	140b4 <__assert_fail@plt+0x30b8>
   140a8:	ldr	r0, [sp, #28]
   140ac:	str	r0, [sp]
   140b0:	b	140c4 <__assert_fail@plt+0x30c8>
   140b4:	movw	r0, #356	; 0x164
   140b8:	movt	r0, #3
   140bc:	str	r0, [sp]
   140c0:	b	140c4 <__assert_fail@plt+0x30c8>
   140c4:	ldr	r0, [sp]
   140c8:	add	r0, r0, #8
   140cc:	ldrb	r1, [sp, #19]
   140d0:	lsr	r1, r1, #5
   140d4:	add	r0, r0, r1, lsl #2
   140d8:	str	r0, [sp, #12]
   140dc:	ldrb	r0, [sp, #19]
   140e0:	and	r0, r0, #31
   140e4:	str	r0, [sp, #8]
   140e8:	ldr	r0, [sp, #12]
   140ec:	ldr	r0, [r0]
   140f0:	ldr	r1, [sp, #8]
   140f4:	lsr	r0, r0, r1
   140f8:	and	r0, r0, #1
   140fc:	str	r0, [sp, #4]
   14100:	ldr	r0, [sp, #20]
   14104:	and	r0, r0, #1
   14108:	ldr	r1, [sp, #4]
   1410c:	eor	r0, r0, r1
   14110:	ldr	r1, [sp, #8]
   14114:	lsl	r0, r0, r1
   14118:	ldr	r1, [sp, #12]
   1411c:	ldr	r2, [r1]
   14120:	eor	r0, r2, r0
   14124:	str	r0, [r1]
   14128:	ldr	r0, [sp, #4]
   1412c:	add	sp, sp, #32
   14130:	bx	lr
   14134:	sub	sp, sp, #12
   14138:	str	r0, [sp, #8]
   1413c:	str	r1, [sp, #4]
   14140:	ldr	r0, [sp, #8]
   14144:	movw	r1, #0
   14148:	cmp	r0, r1
   1414c:	bne	1415c <__assert_fail@plt+0x3160>
   14150:	movw	r0, #356	; 0x164
   14154:	movt	r0, #3
   14158:	str	r0, [sp, #8]
   1415c:	ldr	r0, [sp, #8]
   14160:	ldr	r0, [r0, #4]
   14164:	str	r0, [sp]
   14168:	ldr	r0, [sp, #4]
   1416c:	ldr	r1, [sp, #8]
   14170:	str	r0, [r1, #4]
   14174:	ldr	r0, [sp]
   14178:	add	sp, sp, #12
   1417c:	bx	lr
   14180:	push	{fp, lr}
   14184:	mov	fp, sp
   14188:	sub	sp, sp, #16
   1418c:	str	r0, [fp, #-4]
   14190:	str	r1, [sp, #8]
   14194:	str	r2, [sp, #4]
   14198:	ldr	r0, [fp, #-4]
   1419c:	movw	r1, #0
   141a0:	cmp	r0, r1
   141a4:	bne	141b4 <__assert_fail@plt+0x31b8>
   141a8:	movw	r0, #356	; 0x164
   141ac:	movt	r0, #3
   141b0:	str	r0, [fp, #-4]
   141b4:	ldr	r0, [fp, #-4]
   141b8:	movw	r1, #10
   141bc:	str	r1, [r0]
   141c0:	ldr	r0, [sp, #8]
   141c4:	movw	r1, #0
   141c8:	cmp	r0, r1
   141cc:	beq	141e0 <__assert_fail@plt+0x31e4>
   141d0:	ldr	r0, [sp, #4]
   141d4:	movw	r1, #0
   141d8:	cmp	r0, r1
   141dc:	bne	141e4 <__assert_fail@plt+0x31e8>
   141e0:	bl	10fe4 <abort@plt>
   141e4:	ldr	r0, [sp, #8]
   141e8:	ldr	r1, [fp, #-4]
   141ec:	str	r0, [r1, #40]	; 0x28
   141f0:	ldr	r0, [sp, #4]
   141f4:	ldr	r1, [fp, #-4]
   141f8:	str	r0, [r1, #44]	; 0x2c
   141fc:	mov	sp, fp
   14200:	pop	{fp, pc}
   14204:	push	{r4, r5, r6, sl, fp, lr}
   14208:	add	fp, sp, #16
   1420c:	sub	sp, sp, #56	; 0x38
   14210:	ldr	ip, [fp, #8]
   14214:	str	r0, [fp, #-20]	; 0xffffffec
   14218:	str	r1, [fp, #-24]	; 0xffffffe8
   1421c:	str	r2, [fp, #-28]	; 0xffffffe4
   14220:	str	r3, [fp, #-32]	; 0xffffffe0
   14224:	ldr	r0, [fp, #8]
   14228:	movw	r1, #0
   1422c:	cmp	r0, r1
   14230:	beq	14240 <__assert_fail@plt+0x3244>
   14234:	ldr	r0, [fp, #8]
   14238:	str	r0, [sp, #24]
   1423c:	b	14250 <__assert_fail@plt+0x3254>
   14240:	movw	r0, #356	; 0x164
   14244:	movt	r0, #3
   14248:	str	r0, [sp, #24]
   1424c:	b	14250 <__assert_fail@plt+0x3254>
   14250:	ldr	r0, [sp, #24]
   14254:	str	r0, [sp, #36]	; 0x24
   14258:	bl	10f3c <__errno_location@plt>
   1425c:	ldr	r0, [r0]
   14260:	str	r0, [sp, #32]
   14264:	ldr	r0, [fp, #-20]	; 0xffffffec
   14268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1426c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14274:	ldr	ip, [sp, #36]	; 0x24
   14278:	ldr	ip, [ip]
   1427c:	ldr	lr, [sp, #36]	; 0x24
   14280:	ldr	lr, [lr, #4]
   14284:	ldr	r4, [sp, #36]	; 0x24
   14288:	add	r4, r4, #8
   1428c:	ldr	r5, [sp, #36]	; 0x24
   14290:	ldr	r5, [r5, #40]	; 0x28
   14294:	ldr	r6, [sp, #36]	; 0x24
   14298:	ldr	r6, [r6, #44]	; 0x2c
   1429c:	str	ip, [sp]
   142a0:	str	lr, [sp, #4]
   142a4:	str	r4, [sp, #8]
   142a8:	str	r5, [sp, #12]
   142ac:	str	r6, [sp, #16]
   142b0:	bl	142d8 <__assert_fail@plt+0x32dc>
   142b4:	str	r0, [sp, #28]
   142b8:	ldr	r0, [sp, #32]
   142bc:	str	r0, [sp, #20]
   142c0:	bl	10f3c <__errno_location@plt>
   142c4:	ldr	r1, [sp, #20]
   142c8:	str	r1, [r0]
   142cc:	ldr	r0, [sp, #28]
   142d0:	sub	sp, fp, #16
   142d4:	pop	{r4, r5, r6, sl, fp, pc}
   142d8:	push	{r4, r5, r6, sl, fp, lr}
   142dc:	add	fp, sp, #16
   142e0:	sub	sp, sp, #160	; 0xa0
   142e4:	ldr	ip, [fp, #24]
   142e8:	ldr	lr, [fp, #20]
   142ec:	ldr	r4, [fp, #16]
   142f0:	ldr	r5, [fp, #12]
   142f4:	ldr	r6, [fp, #8]
   142f8:	str	r0, [fp, #-24]	; 0xffffffe8
   142fc:	str	r1, [fp, #-28]	; 0xffffffe4
   14300:	str	r2, [fp, #-32]	; 0xffffffe0
   14304:	str	r3, [fp, #-36]	; 0xffffffdc
   14308:	movw	r0, #0
   1430c:	str	r0, [fp, #-44]	; 0xffffffd4
   14310:	str	r0, [fp, #-48]	; 0xffffffd0
   14314:	str	r0, [fp, #-52]	; 0xffffffcc
   14318:	str	r0, [fp, #-56]	; 0xffffffc8
   1431c:	movw	r0, #0
   14320:	strb	r0, [fp, #-57]	; 0xffffffc7
   14324:	str	ip, [sp, #72]	; 0x48
   14328:	str	lr, [sp, #68]	; 0x44
   1432c:	str	r4, [sp, #64]	; 0x40
   14330:	str	r5, [sp, #60]	; 0x3c
   14334:	str	r6, [sp, #56]	; 0x38
   14338:	bl	10e70 <__ctype_get_mb_cur_max@plt>
   1433c:	cmp	r0, #1
   14340:	movw	r0, #0
   14344:	moveq	r0, #1
   14348:	and	r0, r0, #1
   1434c:	strb	r0, [fp, #-58]	; 0xffffffc6
   14350:	ldr	r0, [fp, #12]
   14354:	and	r0, r0, #2
   14358:	cmp	r0, #0
   1435c:	movw	r0, #0
   14360:	movne	r0, #1
   14364:	and	r0, r0, #1
   14368:	strb	r0, [fp, #-59]	; 0xffffffc5
   1436c:	movw	r0, #0
   14370:	strb	r0, [fp, #-60]	; 0xffffffc4
   14374:	strb	r0, [fp, #-61]	; 0xffffffc3
   14378:	movw	r0, #1
   1437c:	strb	r0, [fp, #-62]	; 0xffffffc2
   14380:	ldr	r0, [fp, #8]
   14384:	cmp	r0, #10
   14388:	str	r0, [sp, #52]	; 0x34
   1438c:	bhi	145b4 <__assert_fail@plt+0x35b8>
   14390:	add	r0, pc, #8
   14394:	ldr	r1, [sp, #52]	; 0x34
   14398:	ldr	r0, [r0, r1, lsl #2]
   1439c:	mov	pc, r0
   143a0:	andeq	r4, r1, r8, lsr #11
   143a4:	andeq	r4, r1, r4, lsr #10
   143a8:	andeq	r4, r1, r4, asr #10
   143ac:	andeq	r4, r1, ip, lsl r5
   143b0:	andeq	r4, r1, ip, lsr #10
   143b4:	ldrdeq	r4, [r1], -ip
   143b8:	andeq	r4, r1, ip, asr #7
   143bc:	andeq	r4, r1, r0, asr #8
   143c0:	andeq	r4, r1, r4, asr r4
   143c4:	andeq	r4, r1, r4, asr r4
   143c8:	andeq	r4, r1, r4, asr r4
   143cc:	movw	r0, #5
   143d0:	str	r0, [fp, #8]
   143d4:	movw	r0, #1
   143d8:	strb	r0, [fp, #-59]	; 0xffffffc5
   143dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   143e0:	tst	r0, #1
   143e4:	bne	14420 <__assert_fail@plt+0x3424>
   143e8:	b	143ec <__assert_fail@plt+0x33f0>
   143ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143f4:	cmp	r0, r1
   143f8:	bcs	14410 <__assert_fail@plt+0x3414>
   143fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14400:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14404:	add	r0, r0, r1
   14408:	movw	r1, #34	; 0x22
   1440c:	strb	r1, [r0]
   14410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14414:	add	r0, r0, #1
   14418:	str	r0, [fp, #-44]	; 0xffffffd4
   1441c:	b	14420 <__assert_fail@plt+0x3424>
   14420:	movw	r0, #1
   14424:	strb	r0, [fp, #-57]	; 0xffffffc7
   14428:	movw	r0, #61366	; 0xefb6
   1442c:	movt	r0, #1
   14430:	str	r0, [fp, #-52]	; 0xffffffcc
   14434:	movw	r0, #1
   14438:	str	r0, [fp, #-56]	; 0xffffffc8
   1443c:	b	145b8 <__assert_fail@plt+0x35bc>
   14440:	movw	r0, #1
   14444:	strb	r0, [fp, #-57]	; 0xffffffc7
   14448:	movw	r0, #0
   1444c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14450:	b	145b8 <__assert_fail@plt+0x35bc>
   14454:	ldr	r0, [fp, #8]
   14458:	cmp	r0, #10
   1445c:	beq	14488 <__assert_fail@plt+0x348c>
   14460:	ldr	r1, [fp, #8]
   14464:	movw	r0, #61368	; 0xefb8
   14468:	movt	r0, #1
   1446c:	bl	164cc <__assert_fail@plt+0x54d0>
   14470:	str	r0, [fp, #20]
   14474:	ldr	r1, [fp, #8]
   14478:	movw	r0, #61370	; 0xefba
   1447c:	movt	r0, #1
   14480:	bl	164cc <__assert_fail@plt+0x54d0>
   14484:	str	r0, [fp, #24]
   14488:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1448c:	tst	r0, #1
   14490:	bne	144fc <__assert_fail@plt+0x3500>
   14494:	ldr	r0, [fp, #20]
   14498:	str	r0, [fp, #-52]	; 0xffffffcc
   1449c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   144a0:	ldrsb	r0, [r0]
   144a4:	cmp	r0, #0
   144a8:	beq	144f8 <__assert_fail@plt+0x34fc>
   144ac:	b	144b0 <__assert_fail@plt+0x34b4>
   144b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144b8:	cmp	r0, r1
   144bc:	bcs	144d8 <__assert_fail@plt+0x34dc>
   144c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   144c4:	ldrb	r0, [r0]
   144c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   144cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   144d0:	add	r1, r1, r2
   144d4:	strb	r0, [r1]
   144d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144dc:	add	r0, r0, #1
   144e0:	str	r0, [fp, #-44]	; 0xffffffd4
   144e4:	b	144e8 <__assert_fail@plt+0x34ec>
   144e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   144ec:	add	r0, r0, #1
   144f0:	str	r0, [fp, #-52]	; 0xffffffcc
   144f4:	b	1449c <__assert_fail@plt+0x34a0>
   144f8:	b	144fc <__assert_fail@plt+0x3500>
   144fc:	movw	r0, #1
   14500:	strb	r0, [fp, #-57]	; 0xffffffc7
   14504:	ldr	r0, [fp, #24]
   14508:	str	r0, [fp, #-52]	; 0xffffffcc
   1450c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14510:	bl	10f18 <strlen@plt>
   14514:	str	r0, [fp, #-56]	; 0xffffffc8
   14518:	b	145b8 <__assert_fail@plt+0x35bc>
   1451c:	movw	r0, #1
   14520:	strb	r0, [fp, #-57]	; 0xffffffc7
   14524:	movw	r0, #1
   14528:	strb	r0, [fp, #-59]	; 0xffffffc5
   1452c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14530:	tst	r0, #1
   14534:	bne	14540 <__assert_fail@plt+0x3544>
   14538:	movw	r0, #1
   1453c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14540:	b	14544 <__assert_fail@plt+0x3548>
   14544:	movw	r0, #2
   14548:	str	r0, [fp, #8]
   1454c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14550:	tst	r0, #1
   14554:	bne	14590 <__assert_fail@plt+0x3594>
   14558:	b	1455c <__assert_fail@plt+0x3560>
   1455c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14560:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14564:	cmp	r0, r1
   14568:	bcs	14580 <__assert_fail@plt+0x3584>
   1456c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14570:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14574:	add	r0, r0, r1
   14578:	movw	r1, #39	; 0x27
   1457c:	strb	r1, [r0]
   14580:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14584:	add	r0, r0, #1
   14588:	str	r0, [fp, #-44]	; 0xffffffd4
   1458c:	b	14590 <__assert_fail@plt+0x3594>
   14590:	movw	r0, #61370	; 0xefba
   14594:	movt	r0, #1
   14598:	str	r0, [fp, #-52]	; 0xffffffcc
   1459c:	movw	r0, #1
   145a0:	str	r0, [fp, #-56]	; 0xffffffc8
   145a4:	b	145b8 <__assert_fail@plt+0x35bc>
   145a8:	movw	r0, #0
   145ac:	strb	r0, [fp, #-59]	; 0xffffffc5
   145b0:	b	145b8 <__assert_fail@plt+0x35bc>
   145b4:	bl	10fe4 <abort@plt>
   145b8:	movw	r0, #0
   145bc:	str	r0, [fp, #-40]	; 0xffffffd8
   145c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   145c4:	cmn	r0, #1
   145c8:	bne	145f4 <__assert_fail@plt+0x35f8>
   145cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   145d4:	add	r0, r0, r1
   145d8:	ldrb	r0, [r0]
   145dc:	cmp	r0, #0
   145e0:	movw	r0, #0
   145e4:	moveq	r0, #1
   145e8:	and	r0, r0, #1
   145ec:	str	r0, [sp, #48]	; 0x30
   145f0:	b	14610 <__assert_fail@plt+0x3614>
   145f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   145f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   145fc:	cmp	r0, r1
   14600:	movw	r0, #0
   14604:	moveq	r0, #1
   14608:	and	r0, r0, #1
   1460c:	str	r0, [sp, #48]	; 0x30
   14610:	ldr	r0, [sp, #48]	; 0x30
   14614:	cmp	r0, #0
   14618:	movw	r0, #0
   1461c:	movne	r0, #1
   14620:	mvn	r1, #0
   14624:	eor	r0, r0, r1
   14628:	tst	r0, #1
   1462c:	beq	15818 <__assert_fail@plt+0x481c>
   14630:	movw	r0, #0
   14634:	strb	r0, [fp, #-65]	; 0xffffffbf
   14638:	strb	r0, [fp, #-66]	; 0xffffffbe
   1463c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14640:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14644:	tst	r0, #1
   14648:	beq	146f4 <__assert_fail@plt+0x36f8>
   1464c:	ldr	r0, [fp, #8]
   14650:	cmp	r0, #2
   14654:	beq	146f4 <__assert_fail@plt+0x36f8>
   14658:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1465c:	cmp	r0, #0
   14660:	beq	146f4 <__assert_fail@plt+0x36f8>
   14664:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14668:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1466c:	add	r0, r0, r1
   14670:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14674:	cmn	r1, #1
   14678:	str	r0, [sp, #44]	; 0x2c
   1467c:	bne	146a4 <__assert_fail@plt+0x36a8>
   14680:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14684:	movw	r1, #1
   14688:	cmp	r1, r0
   1468c:	bcs	146a4 <__assert_fail@plt+0x36a8>
   14690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14694:	bl	10f18 <strlen@plt>
   14698:	str	r0, [fp, #-36]	; 0xffffffdc
   1469c:	str	r0, [sp, #40]	; 0x28
   146a0:	b	146ac <__assert_fail@plt+0x36b0>
   146a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   146a8:	str	r0, [sp, #40]	; 0x28
   146ac:	ldr	r0, [sp, #40]	; 0x28
   146b0:	ldr	r1, [sp, #44]	; 0x2c
   146b4:	cmp	r1, r0
   146b8:	bhi	146f4 <__assert_fail@plt+0x36f8>
   146bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   146c4:	add	r0, r0, r1
   146c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   146cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   146d0:	bl	10e28 <memcmp@plt>
   146d4:	cmp	r0, #0
   146d8:	bne	146f4 <__assert_fail@plt+0x36f8>
   146dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   146e0:	tst	r0, #1
   146e4:	beq	146ec <__assert_fail@plt+0x36f0>
   146e8:	b	15998 <__assert_fail@plt+0x499c>
   146ec:	movw	r0, #1
   146f0:	strb	r0, [fp, #-65]	; 0xffffffbf
   146f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   146fc:	ldrb	r0, [r0, r1]
   14700:	strb	r0, [fp, #-63]	; 0xffffffc1
   14704:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14708:	mov	r1, r0
   1470c:	cmp	r0, #126	; 0x7e
   14710:	str	r1, [sp, #36]	; 0x24
   14714:	bhi	14f84 <__assert_fail@plt+0x3f88>
   14718:	add	r0, pc, #8
   1471c:	ldr	r1, [sp, #36]	; 0x24
   14720:	ldr	r0, [r0, r1, lsl #2]
   14724:	mov	pc, r0
   14728:	andeq	r4, r1, r4, lsr #18
   1472c:	andeq	r4, r1, r4, lsl #31
   14730:	andeq	r4, r1, r4, lsl #31
   14734:	andeq	r4, r1, r4, lsl #31
   14738:	andeq	r4, r1, r4, lsl #31
   1473c:	andeq	r4, r1, r4, lsl #31
   14740:	andeq	r4, r1, r4, lsl #31
   14744:	andeq	r4, r1, ip, lsr #26
   14748:	andeq	r4, r1, r8, lsr sp
   1474c:	andeq	r4, r1, r8, ror #26
   14750:	andeq	r4, r1, r0, asr sp
   14754:	andeq	r4, r1, r4, ror sp
   14758:	andeq	r4, r1, r4, asr #26
   1475c:	andeq	r4, r1, ip, asr sp
   14760:	andeq	r4, r1, r4, lsl #31
   14764:	andeq	r4, r1, r4, lsl #31
   14768:	andeq	r4, r1, r4, lsl #31
   1476c:	andeq	r4, r1, r4, lsl #31
   14770:	andeq	r4, r1, r4, lsl #31
   14774:	andeq	r4, r1, r4, lsl #31
   14778:	andeq	r4, r1, r4, lsl #31
   1477c:	andeq	r4, r1, r4, lsl #31
   14780:	andeq	r4, r1, r4, lsl #31
   14784:	andeq	r4, r1, r4, lsl #31
   14788:	andeq	r4, r1, r4, lsl #31
   1478c:	andeq	r4, r1, r4, lsl #31
   14790:	andeq	r4, r1, r4, lsl #31
   14794:	andeq	r4, r1, r4, lsl #31
   14798:	andeq	r4, r1, r4, lsl #31
   1479c:	andeq	r4, r1, r4, lsl #31
   147a0:	andeq	r4, r1, r4, lsl #31
   147a4:	andeq	r4, r1, r4, lsl #31
   147a8:	andeq	r4, r1, r8, asr lr
   147ac:	andeq	r4, r1, r0, ror #28
   147b0:	andeq	r4, r1, r0, ror #28
   147b4:	andeq	r4, r1, r4, asr #28
   147b8:	andeq	r4, r1, r0, ror #28
   147bc:	andeq	r4, r1, r8, ror pc
   147c0:	andeq	r4, r1, r0, ror #28
   147c4:	andeq	r4, r1, r0, lsl #29
   147c8:	andeq	r4, r1, r0, ror #28
   147cc:	andeq	r4, r1, r0, ror #28
   147d0:	andeq	r4, r1, r0, ror #28
   147d4:	andeq	r4, r1, r8, ror pc
   147d8:	andeq	r4, r1, r8, ror pc
   147dc:	andeq	r4, r1, r8, ror pc
   147e0:	andeq	r4, r1, r8, ror pc
   147e4:	andeq	r4, r1, r8, ror pc
   147e8:	andeq	r4, r1, r8, ror pc
   147ec:	andeq	r4, r1, r8, ror pc
   147f0:	andeq	r4, r1, r8, ror pc
   147f4:	andeq	r4, r1, r8, ror pc
   147f8:	andeq	r4, r1, r8, ror pc
   147fc:	andeq	r4, r1, r8, ror pc
   14800:	andeq	r4, r1, r8, ror pc
   14804:	andeq	r4, r1, r8, ror pc
   14808:	andeq	r4, r1, r8, ror pc
   1480c:	andeq	r4, r1, r8, ror pc
   14810:	andeq	r4, r1, r8, ror pc
   14814:	andeq	r4, r1, r0, ror #28
   14818:	andeq	r4, r1, r0, ror #28
   1481c:	andeq	r4, r1, r0, ror #28
   14820:	andeq	r4, r1, r0, ror #28
   14824:	andeq	r4, r1, r0, lsr fp
   14828:	andeq	r4, r1, r4, lsl #31
   1482c:	andeq	r4, r1, r8, ror pc
   14830:	andeq	r4, r1, r8, ror pc
   14834:	andeq	r4, r1, r8, ror pc
   14838:	andeq	r4, r1, r8, ror pc
   1483c:	andeq	r4, r1, r8, ror pc
   14840:	andeq	r4, r1, r8, ror pc
   14844:	andeq	r4, r1, r8, ror pc
   14848:	andeq	r4, r1, r8, ror pc
   1484c:	andeq	r4, r1, r8, ror pc
   14850:	andeq	r4, r1, r8, ror pc
   14854:	andeq	r4, r1, r8, ror pc
   14858:	andeq	r4, r1, r8, ror pc
   1485c:	andeq	r4, r1, r8, ror pc
   14860:	andeq	r4, r1, r8, ror pc
   14864:	andeq	r4, r1, r8, ror pc
   14868:	andeq	r4, r1, r8, ror pc
   1486c:	andeq	r4, r1, r8, ror pc
   14870:	andeq	r4, r1, r8, ror pc
   14874:	andeq	r4, r1, r8, ror pc
   14878:	andeq	r4, r1, r8, ror pc
   1487c:	andeq	r4, r1, r8, ror pc
   14880:	andeq	r4, r1, r8, ror pc
   14884:	andeq	r4, r1, r8, ror pc
   14888:	andeq	r4, r1, r8, ror pc
   1488c:	andeq	r4, r1, r8, ror pc
   14890:	andeq	r4, r1, r8, ror pc
   14894:	andeq	r4, r1, r0, ror #28
   14898:	andeq	r4, r1, r0, lsl #27
   1489c:	andeq	r4, r1, r8, ror pc
   148a0:	andeq	r4, r1, r0, ror #28
   148a4:	andeq	r4, r1, r8, ror pc
   148a8:	andeq	r4, r1, r0, ror #28
   148ac:	andeq	r4, r1, r8, ror pc
   148b0:	andeq	r4, r1, r8, ror pc
   148b4:	andeq	r4, r1, r8, ror pc
   148b8:	andeq	r4, r1, r8, ror pc
   148bc:	andeq	r4, r1, r8, ror pc
   148c0:	andeq	r4, r1, r8, ror pc
   148c4:	andeq	r4, r1, r8, ror pc
   148c8:	andeq	r4, r1, r8, ror pc
   148cc:	andeq	r4, r1, r8, ror pc
   148d0:	andeq	r4, r1, r8, ror pc
   148d4:	andeq	r4, r1, r8, ror pc
   148d8:	andeq	r4, r1, r8, ror pc
   148dc:	andeq	r4, r1, r8, ror pc
   148e0:	andeq	r4, r1, r8, ror pc
   148e4:	andeq	r4, r1, r8, ror pc
   148e8:	andeq	r4, r1, r8, ror pc
   148ec:	andeq	r4, r1, r8, ror pc
   148f0:	andeq	r4, r1, r8, ror pc
   148f4:	andeq	r4, r1, r8, ror pc
   148f8:	andeq	r4, r1, r8, ror pc
   148fc:	andeq	r4, r1, r8, ror pc
   14900:	andeq	r4, r1, r8, ror pc
   14904:	andeq	r4, r1, r8, ror pc
   14908:	andeq	r4, r1, r8, ror pc
   1490c:	andeq	r4, r1, r8, ror pc
   14910:	andeq	r4, r1, r8, ror pc
   14914:	andeq	r4, r1, r0, lsl lr
   14918:	andeq	r4, r1, r0, ror #28
   1491c:	andeq	r4, r1, r0, lsl lr
   14920:	andeq	r4, r1, r4, asr #28
   14924:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14928:	tst	r0, #1
   1492c:	beq	14b14 <__assert_fail@plt+0x3b18>
   14930:	b	14934 <__assert_fail@plt+0x3938>
   14934:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14938:	tst	r0, #1
   1493c:	beq	14944 <__assert_fail@plt+0x3948>
   14940:	b	15998 <__assert_fail@plt+0x499c>
   14944:	movw	r0, #1
   14948:	strb	r0, [fp, #-66]	; 0xffffffbe
   1494c:	ldr	r0, [fp, #8]
   14950:	cmp	r0, #2
   14954:	bne	14a08 <__assert_fail@plt+0x3a0c>
   14958:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1495c:	tst	r0, #1
   14960:	bne	14a08 <__assert_fail@plt+0x3a0c>
   14964:	b	14968 <__assert_fail@plt+0x396c>
   14968:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1496c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14970:	cmp	r0, r1
   14974:	bcs	1498c <__assert_fail@plt+0x3990>
   14978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1497c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14980:	add	r0, r0, r1
   14984:	movw	r1, #39	; 0x27
   14988:	strb	r1, [r0]
   1498c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14990:	add	r0, r0, #1
   14994:	str	r0, [fp, #-44]	; 0xffffffd4
   14998:	b	1499c <__assert_fail@plt+0x39a0>
   1499c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149a4:	cmp	r0, r1
   149a8:	bcs	149c0 <__assert_fail@plt+0x39c4>
   149ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149b4:	add	r0, r0, r1
   149b8:	movw	r1, #36	; 0x24
   149bc:	strb	r1, [r0]
   149c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149c4:	add	r0, r0, #1
   149c8:	str	r0, [fp, #-44]	; 0xffffffd4
   149cc:	b	149d0 <__assert_fail@plt+0x39d4>
   149d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149d8:	cmp	r0, r1
   149dc:	bcs	149f4 <__assert_fail@plt+0x39f8>
   149e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149e8:	add	r0, r0, r1
   149ec:	movw	r1, #39	; 0x27
   149f0:	strb	r1, [r0]
   149f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149f8:	add	r0, r0, #1
   149fc:	str	r0, [fp, #-44]	; 0xffffffd4
   14a00:	movw	r0, #1
   14a04:	strb	r0, [fp, #-60]	; 0xffffffc4
   14a08:	b	14a0c <__assert_fail@plt+0x3a10>
   14a0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a14:	cmp	r0, r1
   14a18:	bcs	14a30 <__assert_fail@plt+0x3a34>
   14a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a24:	add	r0, r0, r1
   14a28:	movw	r1, #92	; 0x5c
   14a2c:	strb	r1, [r0]
   14a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a34:	add	r0, r0, #1
   14a38:	str	r0, [fp, #-44]	; 0xffffffd4
   14a3c:	b	14a40 <__assert_fail@plt+0x3a44>
   14a40:	ldr	r0, [fp, #8]
   14a44:	cmp	r0, #2
   14a48:	beq	14b08 <__assert_fail@plt+0x3b0c>
   14a4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a50:	add	r0, r0, #1
   14a54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a58:	cmp	r0, r1
   14a5c:	bcs	14b08 <__assert_fail@plt+0x3b0c>
   14a60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a68:	add	r1, r1, #1
   14a6c:	add	r0, r0, r1
   14a70:	ldrb	r0, [r0]
   14a74:	movw	r1, #48	; 0x30
   14a78:	cmp	r1, r0
   14a7c:	bgt	14b08 <__assert_fail@plt+0x3b0c>
   14a80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a88:	add	r1, r1, #1
   14a8c:	add	r0, r0, r1
   14a90:	ldrb	r0, [r0]
   14a94:	cmp	r0, #57	; 0x39
   14a98:	bgt	14b08 <__assert_fail@plt+0x3b0c>
   14a9c:	b	14aa0 <__assert_fail@plt+0x3aa4>
   14aa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14aa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14aa8:	cmp	r0, r1
   14aac:	bcs	14ac4 <__assert_fail@plt+0x3ac8>
   14ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ab4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ab8:	add	r0, r0, r1
   14abc:	movw	r1, #48	; 0x30
   14ac0:	strb	r1, [r0]
   14ac4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ac8:	add	r0, r0, #1
   14acc:	str	r0, [fp, #-44]	; 0xffffffd4
   14ad0:	b	14ad4 <__assert_fail@plt+0x3ad8>
   14ad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ad8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14adc:	cmp	r0, r1
   14ae0:	bcs	14af8 <__assert_fail@plt+0x3afc>
   14ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ae8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14aec:	add	r0, r0, r1
   14af0:	movw	r1, #48	; 0x30
   14af4:	strb	r1, [r0]
   14af8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14afc:	add	r0, r0, #1
   14b00:	str	r0, [fp, #-44]	; 0xffffffd4
   14b04:	b	14b08 <__assert_fail@plt+0x3b0c>
   14b08:	movw	r0, #48	; 0x30
   14b0c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14b10:	b	14b2c <__assert_fail@plt+0x3b30>
   14b14:	ldr	r0, [fp, #12]
   14b18:	and	r0, r0, #1
   14b1c:	cmp	r0, #0
   14b20:	beq	14b28 <__assert_fail@plt+0x3b2c>
   14b24:	b	15808 <__assert_fail@plt+0x480c>
   14b28:	b	14b2c <__assert_fail@plt+0x3b30>
   14b2c:	b	155a4 <__assert_fail@plt+0x45a8>
   14b30:	ldr	r0, [fp, #8]
   14b34:	cmp	r0, #2
   14b38:	str	r0, [sp, #32]
   14b3c:	beq	14b54 <__assert_fail@plt+0x3b58>
   14b40:	b	14b44 <__assert_fail@plt+0x3b48>
   14b44:	ldr	r0, [sp, #32]
   14b48:	cmp	r0, #5
   14b4c:	beq	14b68 <__assert_fail@plt+0x3b6c>
   14b50:	b	14d24 <__assert_fail@plt+0x3d28>
   14b54:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b58:	tst	r0, #1
   14b5c:	beq	14b64 <__assert_fail@plt+0x3b68>
   14b60:	b	15998 <__assert_fail@plt+0x499c>
   14b64:	b	14d28 <__assert_fail@plt+0x3d2c>
   14b68:	ldr	r0, [fp, #12]
   14b6c:	and	r0, r0, #4
   14b70:	cmp	r0, #0
   14b74:	beq	14d20 <__assert_fail@plt+0x3d24>
   14b78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b7c:	add	r0, r0, #2
   14b80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b84:	cmp	r0, r1
   14b88:	bcs	14d20 <__assert_fail@plt+0x3d24>
   14b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14b94:	add	r1, r1, #1
   14b98:	add	r0, r0, r1
   14b9c:	ldrb	r0, [r0]
   14ba0:	cmp	r0, #63	; 0x3f
   14ba4:	bne	14d20 <__assert_fail@plt+0x3d24>
   14ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14bb0:	add	r0, r1, r0
   14bb4:	ldrb	r0, [r0, #2]
   14bb8:	mov	r1, r0
   14bbc:	cmp	r0, #33	; 0x21
   14bc0:	str	r1, [sp, #28]
   14bc4:	beq	14c14 <__assert_fail@plt+0x3c18>
   14bc8:	b	14bcc <__assert_fail@plt+0x3bd0>
   14bcc:	ldr	r0, [sp, #28]
   14bd0:	sub	r1, r0, #39	; 0x27
   14bd4:	cmp	r1, #3
   14bd8:	bcc	14c14 <__assert_fail@plt+0x3c18>
   14bdc:	b	14be0 <__assert_fail@plt+0x3be4>
   14be0:	ldr	r0, [sp, #28]
   14be4:	cmp	r0, #45	; 0x2d
   14be8:	beq	14c14 <__assert_fail@plt+0x3c18>
   14bec:	b	14bf0 <__assert_fail@plt+0x3bf4>
   14bf0:	ldr	r0, [sp, #28]
   14bf4:	cmp	r0, #47	; 0x2f
   14bf8:	beq	14c14 <__assert_fail@plt+0x3c18>
   14bfc:	b	14c00 <__assert_fail@plt+0x3c04>
   14c00:	ldr	r0, [sp, #28]
   14c04:	sub	r1, r0, #60	; 0x3c
   14c08:	cmp	r1, #2
   14c0c:	bhi	14d18 <__assert_fail@plt+0x3d1c>
   14c10:	b	14c14 <__assert_fail@plt+0x3c18>
   14c14:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c18:	tst	r0, #1
   14c1c:	beq	14c24 <__assert_fail@plt+0x3c28>
   14c20:	b	15998 <__assert_fail@plt+0x499c>
   14c24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c2c:	add	r1, r1, #2
   14c30:	add	r0, r0, r1
   14c34:	ldrb	r0, [r0]
   14c38:	strb	r0, [fp, #-63]	; 0xffffffc1
   14c3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c40:	add	r0, r0, #2
   14c44:	str	r0, [fp, #-40]	; 0xffffffd8
   14c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c50:	cmp	r0, r1
   14c54:	bcs	14c6c <__assert_fail@plt+0x3c70>
   14c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c60:	add	r0, r0, r1
   14c64:	movw	r1, #63	; 0x3f
   14c68:	strb	r1, [r0]
   14c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c70:	add	r0, r0, #1
   14c74:	str	r0, [fp, #-44]	; 0xffffffd4
   14c78:	b	14c7c <__assert_fail@plt+0x3c80>
   14c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c84:	cmp	r0, r1
   14c88:	bcs	14ca0 <__assert_fail@plt+0x3ca4>
   14c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c94:	add	r0, r0, r1
   14c98:	movw	r1, #34	; 0x22
   14c9c:	strb	r1, [r0]
   14ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ca4:	add	r0, r0, #1
   14ca8:	str	r0, [fp, #-44]	; 0xffffffd4
   14cac:	b	14cb0 <__assert_fail@plt+0x3cb4>
   14cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cb8:	cmp	r0, r1
   14cbc:	bcs	14cd4 <__assert_fail@plt+0x3cd8>
   14cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cc8:	add	r0, r0, r1
   14ccc:	movw	r1, #34	; 0x22
   14cd0:	strb	r1, [r0]
   14cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cd8:	add	r0, r0, #1
   14cdc:	str	r0, [fp, #-44]	; 0xffffffd4
   14ce0:	b	14ce4 <__assert_fail@plt+0x3ce8>
   14ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ce8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cec:	cmp	r0, r1
   14cf0:	bcs	14d08 <__assert_fail@plt+0x3d0c>
   14cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14cfc:	add	r0, r0, r1
   14d00:	movw	r1, #63	; 0x3f
   14d04:	strb	r1, [r0]
   14d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d0c:	add	r0, r0, #1
   14d10:	str	r0, [fp, #-44]	; 0xffffffd4
   14d14:	b	14d1c <__assert_fail@plt+0x3d20>
   14d18:	b	14d1c <__assert_fail@plt+0x3d20>
   14d1c:	b	14d20 <__assert_fail@plt+0x3d24>
   14d20:	b	14d28 <__assert_fail@plt+0x3d2c>
   14d24:	b	14d28 <__assert_fail@plt+0x3d2c>
   14d28:	b	155a4 <__assert_fail@plt+0x45a8>
   14d2c:	movw	r0, #97	; 0x61
   14d30:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d34:	b	14df4 <__assert_fail@plt+0x3df8>
   14d38:	movw	r0, #98	; 0x62
   14d3c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d40:	b	14df4 <__assert_fail@plt+0x3df8>
   14d44:	movw	r0, #102	; 0x66
   14d48:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d4c:	b	14df4 <__assert_fail@plt+0x3df8>
   14d50:	movw	r0, #110	; 0x6e
   14d54:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d58:	b	14dd4 <__assert_fail@plt+0x3dd8>
   14d5c:	movw	r0, #114	; 0x72
   14d60:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d64:	b	14dd4 <__assert_fail@plt+0x3dd8>
   14d68:	movw	r0, #116	; 0x74
   14d6c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d70:	b	14dd4 <__assert_fail@plt+0x3dd8>
   14d74:	movw	r0, #118	; 0x76
   14d78:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d7c:	b	14df4 <__assert_fail@plt+0x3df8>
   14d80:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14d84:	strb	r0, [fp, #-64]	; 0xffffffc0
   14d88:	ldr	r0, [fp, #8]
   14d8c:	cmp	r0, #2
   14d90:	bne	14da8 <__assert_fail@plt+0x3dac>
   14d94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d98:	tst	r0, #1
   14d9c:	beq	14da4 <__assert_fail@plt+0x3da8>
   14da0:	b	15998 <__assert_fail@plt+0x499c>
   14da4:	b	1572c <__assert_fail@plt+0x4730>
   14da8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14dac:	tst	r0, #1
   14db0:	beq	14dd0 <__assert_fail@plt+0x3dd4>
   14db4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14db8:	tst	r0, #1
   14dbc:	beq	14dd0 <__assert_fail@plt+0x3dd4>
   14dc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14dc4:	cmp	r0, #0
   14dc8:	beq	14dd0 <__assert_fail@plt+0x3dd4>
   14dcc:	b	1572c <__assert_fail@plt+0x4730>
   14dd0:	b	14dd4 <__assert_fail@plt+0x3dd8>
   14dd4:	ldr	r0, [fp, #8]
   14dd8:	cmp	r0, #2
   14ddc:	bne	14df0 <__assert_fail@plt+0x3df4>
   14de0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14de4:	tst	r0, #1
   14de8:	beq	14df0 <__assert_fail@plt+0x3df4>
   14dec:	b	15998 <__assert_fail@plt+0x499c>
   14df0:	b	14df4 <__assert_fail@plt+0x3df8>
   14df4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14df8:	tst	r0, #1
   14dfc:	beq	14e0c <__assert_fail@plt+0x3e10>
   14e00:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14e04:	strb	r0, [fp, #-63]	; 0xffffffc1
   14e08:	b	15618 <__assert_fail@plt+0x461c>
   14e0c:	b	155a4 <__assert_fail@plt+0x45a8>
   14e10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e14:	cmn	r0, #1
   14e18:	bne	14e30 <__assert_fail@plt+0x3e34>
   14e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e20:	ldrb	r0, [r0, #1]
   14e24:	cmp	r0, #0
   14e28:	beq	14e40 <__assert_fail@plt+0x3e44>
   14e2c:	b	14e3c <__assert_fail@plt+0x3e40>
   14e30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e34:	cmp	r0, #1
   14e38:	beq	14e40 <__assert_fail@plt+0x3e44>
   14e3c:	b	155a4 <__assert_fail@plt+0x45a8>
   14e40:	b	14e44 <__assert_fail@plt+0x3e48>
   14e44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e48:	cmp	r0, #0
   14e4c:	beq	14e54 <__assert_fail@plt+0x3e58>
   14e50:	b	155a4 <__assert_fail@plt+0x45a8>
   14e54:	b	14e58 <__assert_fail@plt+0x3e5c>
   14e58:	movw	r0, #1
   14e5c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14e60:	ldr	r0, [fp, #8]
   14e64:	cmp	r0, #2
   14e68:	bne	14e7c <__assert_fail@plt+0x3e80>
   14e6c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e70:	tst	r0, #1
   14e74:	beq	14e7c <__assert_fail@plt+0x3e80>
   14e78:	b	15998 <__assert_fail@plt+0x499c>
   14e7c:	b	155a4 <__assert_fail@plt+0x45a8>
   14e80:	movw	r0, #1
   14e84:	strb	r0, [fp, #-61]	; 0xffffffc3
   14e88:	strb	r0, [fp, #-67]	; 0xffffffbd
   14e8c:	ldr	r0, [fp, #8]
   14e90:	cmp	r0, #2
   14e94:	bne	14f74 <__assert_fail@plt+0x3f78>
   14e98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14e9c:	tst	r0, #1
   14ea0:	beq	14ea8 <__assert_fail@plt+0x3eac>
   14ea4:	b	15998 <__assert_fail@plt+0x499c>
   14ea8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14eac:	cmp	r0, #0
   14eb0:	beq	14ed0 <__assert_fail@plt+0x3ed4>
   14eb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14eb8:	cmp	r0, #0
   14ebc:	bne	14ed0 <__assert_fail@plt+0x3ed4>
   14ec0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14ec4:	str	r0, [fp, #-48]	; 0xffffffd0
   14ec8:	movw	r0, #0
   14ecc:	str	r0, [fp, #-28]	; 0xffffffe4
   14ed0:	b	14ed4 <__assert_fail@plt+0x3ed8>
   14ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14edc:	cmp	r0, r1
   14ee0:	bcs	14ef8 <__assert_fail@plt+0x3efc>
   14ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ee8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14eec:	add	r0, r0, r1
   14ef0:	movw	r1, #39	; 0x27
   14ef4:	strb	r1, [r0]
   14ef8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14efc:	add	r0, r0, #1
   14f00:	str	r0, [fp, #-44]	; 0xffffffd4
   14f04:	b	14f08 <__assert_fail@plt+0x3f0c>
   14f08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f10:	cmp	r0, r1
   14f14:	bcs	14f2c <__assert_fail@plt+0x3f30>
   14f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f20:	add	r0, r0, r1
   14f24:	movw	r1, #92	; 0x5c
   14f28:	strb	r1, [r0]
   14f2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f30:	add	r0, r0, #1
   14f34:	str	r0, [fp, #-44]	; 0xffffffd4
   14f38:	b	14f3c <__assert_fail@plt+0x3f40>
   14f3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f44:	cmp	r0, r1
   14f48:	bcs	14f60 <__assert_fail@plt+0x3f64>
   14f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f54:	add	r0, r0, r1
   14f58:	movw	r1, #39	; 0x27
   14f5c:	strb	r1, [r0]
   14f60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f64:	add	r0, r0, #1
   14f68:	str	r0, [fp, #-44]	; 0xffffffd4
   14f6c:	movw	r0, #0
   14f70:	strb	r0, [fp, #-60]	; 0xffffffc4
   14f74:	b	155a4 <__assert_fail@plt+0x45a8>
   14f78:	movw	r0, #1
   14f7c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14f80:	b	155a4 <__assert_fail@plt+0x45a8>
   14f84:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14f88:	tst	r0, #1
   14f8c:	beq	14fcc <__assert_fail@plt+0x3fd0>
   14f90:	mov	r0, #1
   14f94:	str	r0, [fp, #-72]	; 0xffffffb8
   14f98:	bl	10ef4 <__ctype_b_loc@plt>
   14f9c:	ldr	r0, [r0]
   14fa0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14fa4:	mov	r2, r1
   14fa8:	add	r0, r0, r1, lsl #1
   14fac:	ldrh	r0, [r0]
   14fb0:	and	r0, r0, #16384	; 0x4000
   14fb4:	cmp	r0, #0
   14fb8:	movw	r0, #0
   14fbc:	movne	r0, #1
   14fc0:	and	r0, r0, #1
   14fc4:	strb	r0, [fp, #-73]	; 0xffffffb7
   14fc8:	b	15258 <__assert_fail@plt+0x425c>
   14fcc:	sub	r0, fp, #84	; 0x54
   14fd0:	movw	r1, #0
   14fd4:	and	r1, r1, #255	; 0xff
   14fd8:	movw	r2, #8
   14fdc:	bl	10f54 <memset@plt>
   14fe0:	movw	r0, #0
   14fe4:	str	r0, [fp, #-72]	; 0xffffffb8
   14fe8:	movw	r0, #1
   14fec:	strb	r0, [fp, #-73]	; 0xffffffb7
   14ff0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14ff4:	cmn	r0, #1
   14ff8:	bne	15008 <__assert_fail@plt+0x400c>
   14ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15000:	bl	10f18 <strlen@plt>
   15004:	str	r0, [fp, #-36]	; 0xffffffdc
   15008:	b	1500c <__assert_fail@plt+0x4010>
   1500c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15010:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15014:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15018:	add	r1, r1, r2
   1501c:	add	r1, r0, r1
   15020:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15024:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15028:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1502c:	add	r2, r2, r3
   15030:	sub	r2, r0, r2
   15034:	add	r0, sp, #88	; 0x58
   15038:	sub	r3, fp, #84	; 0x54
   1503c:	bl	1c734 <__assert_fail@plt+0xb738>
   15040:	str	r0, [sp, #84]	; 0x54
   15044:	ldr	r0, [sp, #84]	; 0x54
   15048:	cmp	r0, #0
   1504c:	bne	15054 <__assert_fail@plt+0x4058>
   15050:	b	15254 <__assert_fail@plt+0x4258>
   15054:	ldr	r0, [sp, #84]	; 0x54
   15058:	cmn	r0, #1
   1505c:	bne	1506c <__assert_fail@plt+0x4070>
   15060:	movw	r0, #0
   15064:	strb	r0, [fp, #-73]	; 0xffffffb7
   15068:	b	15254 <__assert_fail@plt+0x4258>
   1506c:	ldr	r0, [sp, #84]	; 0x54
   15070:	cmn	r0, #2
   15074:	bne	150e8 <__assert_fail@plt+0x40ec>
   15078:	movw	r0, #0
   1507c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15080:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15084:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15088:	add	r0, r0, r1
   1508c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15090:	cmp	r0, r1
   15094:	movw	r0, #0
   15098:	str	r0, [sp, #24]
   1509c:	bcs	150c8 <__assert_fail@plt+0x40cc>
   150a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   150a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   150ac:	add	r1, r1, r2
   150b0:	add	r0, r0, r1
   150b4:	ldrb	r0, [r0]
   150b8:	cmp	r0, #0
   150bc:	movw	r0, #0
   150c0:	movne	r0, #1
   150c4:	str	r0, [sp, #24]
   150c8:	ldr	r0, [sp, #24]
   150cc:	tst	r0, #1
   150d0:	beq	150e4 <__assert_fail@plt+0x40e8>
   150d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   150d8:	add	r0, r0, #1
   150dc:	str	r0, [fp, #-72]	; 0xffffffb8
   150e0:	b	15080 <__assert_fail@plt+0x4084>
   150e4:	b	15254 <__assert_fail@plt+0x4258>
   150e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   150ec:	tst	r0, #1
   150f0:	beq	151fc <__assert_fail@plt+0x4200>
   150f4:	ldr	r0, [fp, #8]
   150f8:	cmp	r0, #2
   150fc:	bne	151fc <__assert_fail@plt+0x4200>
   15100:	movw	r0, #1
   15104:	str	r0, [sp, #80]	; 0x50
   15108:	ldr	r0, [sp, #80]	; 0x50
   1510c:	ldr	r1, [sp, #84]	; 0x54
   15110:	cmp	r0, r1
   15114:	bcs	151f8 <__assert_fail@plt+0x41fc>
   15118:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1511c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15120:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15124:	add	r1, r1, r2
   15128:	ldr	r2, [sp, #80]	; 0x50
   1512c:	add	r1, r1, r2
   15130:	ldrb	r0, [r0, r1]
   15134:	sub	r0, r0, #91	; 0x5b
   15138:	cmp	r0, #33	; 0x21
   1513c:	str	r0, [sp, #20]
   15140:	bhi	151e0 <__assert_fail@plt+0x41e4>
   15144:	add	r0, pc, #8
   15148:	ldr	r1, [sp, #20]
   1514c:	ldr	r0, [r0, r1, lsl #2]
   15150:	mov	pc, r0
   15154:	ldrdeq	r5, [r1], -ip
   15158:	ldrdeq	r5, [r1], -ip
   1515c:	andeq	r5, r1, r0, ror #3
   15160:	ldrdeq	r5, [r1], -ip
   15164:	andeq	r5, r1, r0, ror #3
   15168:	ldrdeq	r5, [r1], -ip
   1516c:	andeq	r5, r1, r0, ror #3
   15170:	andeq	r5, r1, r0, ror #3
   15174:	andeq	r5, r1, r0, ror #3
   15178:	andeq	r5, r1, r0, ror #3
   1517c:	andeq	r5, r1, r0, ror #3
   15180:	andeq	r5, r1, r0, ror #3
   15184:	andeq	r5, r1, r0, ror #3
   15188:	andeq	r5, r1, r0, ror #3
   1518c:	andeq	r5, r1, r0, ror #3
   15190:	andeq	r5, r1, r0, ror #3
   15194:	andeq	r5, r1, r0, ror #3
   15198:	andeq	r5, r1, r0, ror #3
   1519c:	andeq	r5, r1, r0, ror #3
   151a0:	andeq	r5, r1, r0, ror #3
   151a4:	andeq	r5, r1, r0, ror #3
   151a8:	andeq	r5, r1, r0, ror #3
   151ac:	andeq	r5, r1, r0, ror #3
   151b0:	andeq	r5, r1, r0, ror #3
   151b4:	andeq	r5, r1, r0, ror #3
   151b8:	andeq	r5, r1, r0, ror #3
   151bc:	andeq	r5, r1, r0, ror #3
   151c0:	andeq	r5, r1, r0, ror #3
   151c4:	andeq	r5, r1, r0, ror #3
   151c8:	andeq	r5, r1, r0, ror #3
   151cc:	andeq	r5, r1, r0, ror #3
   151d0:	andeq	r5, r1, r0, ror #3
   151d4:	andeq	r5, r1, r0, ror #3
   151d8:	ldrdeq	r5, [r1], -ip
   151dc:	b	15998 <__assert_fail@plt+0x499c>
   151e0:	b	151e4 <__assert_fail@plt+0x41e8>
   151e4:	b	151e8 <__assert_fail@plt+0x41ec>
   151e8:	ldr	r0, [sp, #80]	; 0x50
   151ec:	add	r0, r0, #1
   151f0:	str	r0, [sp, #80]	; 0x50
   151f4:	b	15108 <__assert_fail@plt+0x410c>
   151f8:	b	151fc <__assert_fail@plt+0x4200>
   151fc:	ldr	r0, [sp, #88]	; 0x58
   15200:	bl	10e4c <iswprint@plt>
   15204:	cmp	r0, #0
   15208:	bne	15214 <__assert_fail@plt+0x4218>
   1520c:	movw	r0, #0
   15210:	strb	r0, [fp, #-73]	; 0xffffffb7
   15214:	ldr	r0, [sp, #84]	; 0x54
   15218:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1521c:	add	r0, r1, r0
   15220:	str	r0, [fp, #-72]	; 0xffffffb8
   15224:	b	15228 <__assert_fail@plt+0x422c>
   15228:	b	1522c <__assert_fail@plt+0x4230>
   1522c:	b	15230 <__assert_fail@plt+0x4234>
   15230:	sub	r0, fp, #84	; 0x54
   15234:	bl	10e10 <mbsinit@plt>
   15238:	cmp	r0, #0
   1523c:	movw	r0, #0
   15240:	movne	r0, #1
   15244:	mvn	r1, #0
   15248:	eor	r0, r0, r1
   1524c:	tst	r0, #1
   15250:	bne	1500c <__assert_fail@plt+0x4010>
   15254:	b	15258 <__assert_fail@plt+0x425c>
   15258:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1525c:	and	r0, r0, #1
   15260:	strb	r0, [fp, #-67]	; 0xffffffbd
   15264:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15268:	movw	r1, #1
   1526c:	cmp	r1, r0
   15270:	bcc	1528c <__assert_fail@plt+0x4290>
   15274:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15278:	tst	r0, #1
   1527c:	beq	155a0 <__assert_fail@plt+0x45a4>
   15280:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15284:	tst	r0, #1
   15288:	bne	155a0 <__assert_fail@plt+0x45a4>
   1528c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15290:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15294:	add	r0, r0, r1
   15298:	str	r0, [sp, #76]	; 0x4c
   1529c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   152a0:	tst	r0, #1
   152a4:	beq	15454 <__assert_fail@plt+0x4458>
   152a8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   152ac:	tst	r0, #1
   152b0:	bne	15454 <__assert_fail@plt+0x4458>
   152b4:	b	152b8 <__assert_fail@plt+0x42bc>
   152b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   152bc:	tst	r0, #1
   152c0:	beq	152c8 <__assert_fail@plt+0x42cc>
   152c4:	b	15998 <__assert_fail@plt+0x499c>
   152c8:	movw	r0, #1
   152cc:	strb	r0, [fp, #-66]	; 0xffffffbe
   152d0:	ldr	r0, [fp, #8]
   152d4:	cmp	r0, #2
   152d8:	bne	1538c <__assert_fail@plt+0x4390>
   152dc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   152e0:	tst	r0, #1
   152e4:	bne	1538c <__assert_fail@plt+0x4390>
   152e8:	b	152ec <__assert_fail@plt+0x42f0>
   152ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152f4:	cmp	r0, r1
   152f8:	bcs	15310 <__assert_fail@plt+0x4314>
   152fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15300:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15304:	add	r0, r0, r1
   15308:	movw	r1, #39	; 0x27
   1530c:	strb	r1, [r0]
   15310:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15314:	add	r0, r0, #1
   15318:	str	r0, [fp, #-44]	; 0xffffffd4
   1531c:	b	15320 <__assert_fail@plt+0x4324>
   15320:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15324:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15328:	cmp	r0, r1
   1532c:	bcs	15344 <__assert_fail@plt+0x4348>
   15330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15334:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15338:	add	r0, r0, r1
   1533c:	movw	r1, #36	; 0x24
   15340:	strb	r1, [r0]
   15344:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15348:	add	r0, r0, #1
   1534c:	str	r0, [fp, #-44]	; 0xffffffd4
   15350:	b	15354 <__assert_fail@plt+0x4358>
   15354:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15358:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1535c:	cmp	r0, r1
   15360:	bcs	15378 <__assert_fail@plt+0x437c>
   15364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15368:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1536c:	add	r0, r0, r1
   15370:	movw	r1, #39	; 0x27
   15374:	strb	r1, [r0]
   15378:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1537c:	add	r0, r0, #1
   15380:	str	r0, [fp, #-44]	; 0xffffffd4
   15384:	movw	r0, #1
   15388:	strb	r0, [fp, #-60]	; 0xffffffc4
   1538c:	b	15390 <__assert_fail@plt+0x4394>
   15390:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15394:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15398:	cmp	r0, r1
   1539c:	bcs	153b4 <__assert_fail@plt+0x43b8>
   153a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   153a8:	add	r0, r0, r1
   153ac:	movw	r1, #92	; 0x5c
   153b0:	strb	r1, [r0]
   153b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153b8:	add	r0, r0, #1
   153bc:	str	r0, [fp, #-44]	; 0xffffffd4
   153c0:	b	153c4 <__assert_fail@plt+0x43c8>
   153c4:	b	153c8 <__assert_fail@plt+0x43cc>
   153c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   153d0:	cmp	r0, r1
   153d4:	bcs	153f4 <__assert_fail@plt+0x43f8>
   153d8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   153dc:	asr	r0, r0, #6
   153e0:	add	r0, r0, #48	; 0x30
   153e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   153ec:	add	r1, r1, r2
   153f0:	strb	r0, [r1]
   153f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153f8:	add	r0, r0, #1
   153fc:	str	r0, [fp, #-44]	; 0xffffffd4
   15400:	b	15404 <__assert_fail@plt+0x4408>
   15404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15408:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1540c:	cmp	r0, r1
   15410:	bcs	15434 <__assert_fail@plt+0x4438>
   15414:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15418:	asr	r0, r0, #3
   1541c:	and	r0, r0, #7
   15420:	add	r0, r0, #48	; 0x30
   15424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15428:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1542c:	add	r1, r1, r2
   15430:	strb	r0, [r1]
   15434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15438:	add	r0, r0, #1
   1543c:	str	r0, [fp, #-44]	; 0xffffffd4
   15440:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15444:	and	r0, r0, #7
   15448:	add	r0, r0, #48	; 0x30
   1544c:	strb	r0, [fp, #-63]	; 0xffffffc1
   15450:	b	154a0 <__assert_fail@plt+0x44a4>
   15454:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15458:	tst	r0, #1
   1545c:	beq	1549c <__assert_fail@plt+0x44a0>
   15460:	b	15464 <__assert_fail@plt+0x4468>
   15464:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1546c:	cmp	r0, r1
   15470:	bcs	15488 <__assert_fail@plt+0x448c>
   15474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15478:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1547c:	add	r0, r0, r1
   15480:	movw	r1, #92	; 0x5c
   15484:	strb	r1, [r0]
   15488:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1548c:	add	r0, r0, #1
   15490:	str	r0, [fp, #-44]	; 0xffffffd4
   15494:	movw	r0, #0
   15498:	strb	r0, [fp, #-65]	; 0xffffffbf
   1549c:	b	154a0 <__assert_fail@plt+0x44a4>
   154a0:	ldr	r0, [sp, #76]	; 0x4c
   154a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154a8:	add	r1, r1, #1
   154ac:	cmp	r0, r1
   154b0:	bhi	154b8 <__assert_fail@plt+0x44bc>
   154b4:	b	1559c <__assert_fail@plt+0x45a0>
   154b8:	b	154bc <__assert_fail@plt+0x44c0>
   154bc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   154c0:	tst	r0, #1
   154c4:	beq	15544 <__assert_fail@plt+0x4548>
   154c8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   154cc:	tst	r0, #1
   154d0:	bne	15544 <__assert_fail@plt+0x4548>
   154d4:	b	154d8 <__assert_fail@plt+0x44dc>
   154d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154e0:	cmp	r0, r1
   154e4:	bcs	154fc <__assert_fail@plt+0x4500>
   154e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154f0:	add	r0, r0, r1
   154f4:	movw	r1, #39	; 0x27
   154f8:	strb	r1, [r0]
   154fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15500:	add	r0, r0, #1
   15504:	str	r0, [fp, #-44]	; 0xffffffd4
   15508:	b	1550c <__assert_fail@plt+0x4510>
   1550c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15510:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15514:	cmp	r0, r1
   15518:	bcs	15530 <__assert_fail@plt+0x4534>
   1551c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15520:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15524:	add	r0, r0, r1
   15528:	movw	r1, #39	; 0x27
   1552c:	strb	r1, [r0]
   15530:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15534:	add	r0, r0, #1
   15538:	str	r0, [fp, #-44]	; 0xffffffd4
   1553c:	movw	r0, #0
   15540:	strb	r0, [fp, #-60]	; 0xffffffc4
   15544:	b	15548 <__assert_fail@plt+0x454c>
   15548:	b	1554c <__assert_fail@plt+0x4550>
   1554c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15550:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15554:	cmp	r0, r1
   15558:	bcs	15570 <__assert_fail@plt+0x4574>
   1555c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15560:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15564:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15568:	add	r1, r1, r2
   1556c:	strb	r0, [r1]
   15570:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15574:	add	r0, r0, #1
   15578:	str	r0, [fp, #-44]	; 0xffffffd4
   1557c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15580:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15584:	add	r1, r1, #1
   15588:	str	r1, [fp, #-40]	; 0xffffffd8
   1558c:	add	r0, r0, r1
   15590:	ldrb	r0, [r0]
   15594:	strb	r0, [fp, #-63]	; 0xffffffc1
   15598:	b	1529c <__assert_fail@plt+0x42a0>
   1559c:	b	1572c <__assert_fail@plt+0x4730>
   155a0:	b	155a4 <__assert_fail@plt+0x45a8>
   155a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   155a8:	tst	r0, #1
   155ac:	beq	155bc <__assert_fail@plt+0x45c0>
   155b0:	ldr	r0, [fp, #8]
   155b4:	cmp	r0, #2
   155b8:	bne	155c8 <__assert_fail@plt+0x45cc>
   155bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   155c0:	tst	r0, #1
   155c4:	beq	15604 <__assert_fail@plt+0x4608>
   155c8:	ldr	r0, [fp, #16]
   155cc:	movw	r1, #0
   155d0:	cmp	r0, r1
   155d4:	beq	15604 <__assert_fail@plt+0x4608>
   155d8:	ldr	r0, [fp, #16]
   155dc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   155e0:	lsr	r1, r1, #5
   155e4:	add	r0, r0, r1, lsl #2
   155e8:	ldr	r0, [r0]
   155ec:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   155f0:	and	r1, r1, #31
   155f4:	lsr	r0, r0, r1
   155f8:	and	r0, r0, #1
   155fc:	cmp	r0, #0
   15600:	bne	15614 <__assert_fail@plt+0x4618>
   15604:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15608:	tst	r0, #1
   1560c:	bne	15614 <__assert_fail@plt+0x4618>
   15610:	b	1572c <__assert_fail@plt+0x4730>
   15614:	b	15618 <__assert_fail@plt+0x461c>
   15618:	b	1561c <__assert_fail@plt+0x4620>
   1561c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15620:	tst	r0, #1
   15624:	beq	1562c <__assert_fail@plt+0x4630>
   15628:	b	15998 <__assert_fail@plt+0x499c>
   1562c:	movw	r0, #1
   15630:	strb	r0, [fp, #-66]	; 0xffffffbe
   15634:	ldr	r0, [fp, #8]
   15638:	cmp	r0, #2
   1563c:	bne	156f0 <__assert_fail@plt+0x46f4>
   15640:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15644:	tst	r0, #1
   15648:	bne	156f0 <__assert_fail@plt+0x46f4>
   1564c:	b	15650 <__assert_fail@plt+0x4654>
   15650:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15654:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15658:	cmp	r0, r1
   1565c:	bcs	15674 <__assert_fail@plt+0x4678>
   15660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15664:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15668:	add	r0, r0, r1
   1566c:	movw	r1, #39	; 0x27
   15670:	strb	r1, [r0]
   15674:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15678:	add	r0, r0, #1
   1567c:	str	r0, [fp, #-44]	; 0xffffffd4
   15680:	b	15684 <__assert_fail@plt+0x4688>
   15684:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15688:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1568c:	cmp	r0, r1
   15690:	bcs	156a8 <__assert_fail@plt+0x46ac>
   15694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15698:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1569c:	add	r0, r0, r1
   156a0:	movw	r1, #36	; 0x24
   156a4:	strb	r1, [r0]
   156a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156ac:	add	r0, r0, #1
   156b0:	str	r0, [fp, #-44]	; 0xffffffd4
   156b4:	b	156b8 <__assert_fail@plt+0x46bc>
   156b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156c0:	cmp	r0, r1
   156c4:	bcs	156dc <__assert_fail@plt+0x46e0>
   156c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156d0:	add	r0, r0, r1
   156d4:	movw	r1, #39	; 0x27
   156d8:	strb	r1, [r0]
   156dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156e0:	add	r0, r0, #1
   156e4:	str	r0, [fp, #-44]	; 0xffffffd4
   156e8:	movw	r0, #1
   156ec:	strb	r0, [fp, #-60]	; 0xffffffc4
   156f0:	b	156f4 <__assert_fail@plt+0x46f8>
   156f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156fc:	cmp	r0, r1
   15700:	bcs	15718 <__assert_fail@plt+0x471c>
   15704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15708:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1570c:	add	r0, r0, r1
   15710:	movw	r1, #92	; 0x5c
   15714:	strb	r1, [r0]
   15718:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1571c:	add	r0, r0, #1
   15720:	str	r0, [fp, #-44]	; 0xffffffd4
   15724:	b	15728 <__assert_fail@plt+0x472c>
   15728:	b	1572c <__assert_fail@plt+0x4730>
   1572c:	b	15730 <__assert_fail@plt+0x4734>
   15730:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15734:	tst	r0, #1
   15738:	beq	157b8 <__assert_fail@plt+0x47bc>
   1573c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15740:	tst	r0, #1
   15744:	bne	157b8 <__assert_fail@plt+0x47bc>
   15748:	b	1574c <__assert_fail@plt+0x4750>
   1574c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15754:	cmp	r0, r1
   15758:	bcs	15770 <__assert_fail@plt+0x4774>
   1575c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15760:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15764:	add	r0, r0, r1
   15768:	movw	r1, #39	; 0x27
   1576c:	strb	r1, [r0]
   15770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15774:	add	r0, r0, #1
   15778:	str	r0, [fp, #-44]	; 0xffffffd4
   1577c:	b	15780 <__assert_fail@plt+0x4784>
   15780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15784:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15788:	cmp	r0, r1
   1578c:	bcs	157a4 <__assert_fail@plt+0x47a8>
   15790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15794:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15798:	add	r0, r0, r1
   1579c:	movw	r1, #39	; 0x27
   157a0:	strb	r1, [r0]
   157a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157a8:	add	r0, r0, #1
   157ac:	str	r0, [fp, #-44]	; 0xffffffd4
   157b0:	movw	r0, #0
   157b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   157b8:	b	157bc <__assert_fail@plt+0x47c0>
   157bc:	b	157c0 <__assert_fail@plt+0x47c4>
   157c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   157c8:	cmp	r0, r1
   157cc:	bcs	157e4 <__assert_fail@plt+0x47e8>
   157d0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   157d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   157dc:	add	r1, r1, r2
   157e0:	strb	r0, [r1]
   157e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157e8:	add	r0, r0, #1
   157ec:	str	r0, [fp, #-44]	; 0xffffffd4
   157f0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   157f4:	tst	r0, #1
   157f8:	bne	15804 <__assert_fail@plt+0x4808>
   157fc:	movw	r0, #0
   15800:	strb	r0, [fp, #-62]	; 0xffffffc2
   15804:	b	15808 <__assert_fail@plt+0x480c>
   15808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1580c:	add	r0, r0, #1
   15810:	str	r0, [fp, #-40]	; 0xffffffd8
   15814:	b	145c0 <__assert_fail@plt+0x35c4>
   15818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1581c:	cmp	r0, #0
   15820:	bne	15840 <__assert_fail@plt+0x4844>
   15824:	ldr	r0, [fp, #8]
   15828:	cmp	r0, #2
   1582c:	bne	15840 <__assert_fail@plt+0x4844>
   15830:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15834:	tst	r0, #1
   15838:	beq	15840 <__assert_fail@plt+0x4844>
   1583c:	b	15998 <__assert_fail@plt+0x499c>
   15840:	ldr	r0, [fp, #8]
   15844:	cmp	r0, #2
   15848:	bne	158e8 <__assert_fail@plt+0x48ec>
   1584c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15850:	tst	r0, #1
   15854:	bne	158e8 <__assert_fail@plt+0x48ec>
   15858:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1585c:	tst	r0, #1
   15860:	beq	158e8 <__assert_fail@plt+0x48ec>
   15864:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15868:	tst	r0, #1
   1586c:	beq	158b4 <__assert_fail@plt+0x48b8>
   15870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15874:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15878:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1587c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15880:	ldr	ip, [fp, #12]
   15884:	ldr	lr, [fp, #16]
   15888:	ldr	r4, [fp, #20]
   1588c:	ldr	r5, [fp, #24]
   15890:	movw	r6, #5
   15894:	str	r6, [sp]
   15898:	str	ip, [sp, #4]
   1589c:	str	lr, [sp, #8]
   158a0:	str	r4, [sp, #12]
   158a4:	str	r5, [sp, #16]
   158a8:	bl	142d8 <__assert_fail@plt+0x32dc>
   158ac:	str	r0, [fp, #-20]	; 0xffffffec
   158b0:	b	15a00 <__assert_fail@plt+0x4a04>
   158b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   158b8:	cmp	r0, #0
   158bc:	bne	158e0 <__assert_fail@plt+0x48e4>
   158c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   158c4:	cmp	r0, #0
   158c8:	beq	158e0 <__assert_fail@plt+0x48e4>
   158cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   158d0:	str	r0, [fp, #-28]	; 0xffffffe4
   158d4:	movw	r0, #0
   158d8:	str	r0, [fp, #-44]	; 0xffffffd4
   158dc:	b	14380 <__assert_fail@plt+0x3384>
   158e0:	b	158e4 <__assert_fail@plt+0x48e8>
   158e4:	b	158e8 <__assert_fail@plt+0x48ec>
   158e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   158ec:	movw	r1, #0
   158f0:	cmp	r0, r1
   158f4:	beq	15968 <__assert_fail@plt+0x496c>
   158f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   158fc:	tst	r0, #1
   15900:	bne	15968 <__assert_fail@plt+0x496c>
   15904:	b	15908 <__assert_fail@plt+0x490c>
   15908:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1590c:	ldrsb	r0, [r0]
   15910:	cmp	r0, #0
   15914:	beq	15964 <__assert_fail@plt+0x4968>
   15918:	b	1591c <__assert_fail@plt+0x4920>
   1591c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15924:	cmp	r0, r1
   15928:	bcs	15944 <__assert_fail@plt+0x4948>
   1592c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15930:	ldrb	r0, [r0]
   15934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15938:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1593c:	add	r1, r1, r2
   15940:	strb	r0, [r1]
   15944:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15948:	add	r0, r0, #1
   1594c:	str	r0, [fp, #-44]	; 0xffffffd4
   15950:	b	15954 <__assert_fail@plt+0x4958>
   15954:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15958:	add	r0, r0, #1
   1595c:	str	r0, [fp, #-52]	; 0xffffffcc
   15960:	b	15908 <__assert_fail@plt+0x490c>
   15964:	b	15968 <__assert_fail@plt+0x496c>
   15968:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1596c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15970:	cmp	r0, r1
   15974:	bcs	1598c <__assert_fail@plt+0x4990>
   15978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1597c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15980:	add	r0, r0, r1
   15984:	movw	r1, #0
   15988:	strb	r1, [r0]
   1598c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15990:	str	r0, [fp, #-20]	; 0xffffffec
   15994:	b	15a00 <__assert_fail@plt+0x4a04>
   15998:	ldr	r0, [fp, #8]
   1599c:	cmp	r0, #2
   159a0:	bne	159b8 <__assert_fail@plt+0x49bc>
   159a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   159a8:	tst	r0, #1
   159ac:	beq	159b8 <__assert_fail@plt+0x49bc>
   159b0:	movw	r0, #4
   159b4:	str	r0, [fp, #8]
   159b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   159c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   159c8:	ldr	ip, [fp, #8]
   159cc:	ldr	lr, [fp, #12]
   159d0:	mvn	r4, #2
   159d4:	and	lr, lr, r4
   159d8:	ldr	r4, [fp, #20]
   159dc:	ldr	r5, [fp, #24]
   159e0:	str	ip, [sp]
   159e4:	str	lr, [sp, #4]
   159e8:	movw	ip, #0
   159ec:	str	ip, [sp, #8]
   159f0:	str	r4, [sp, #12]
   159f4:	str	r5, [sp, #16]
   159f8:	bl	142d8 <__assert_fail@plt+0x32dc>
   159fc:	str	r0, [fp, #-20]	; 0xffffffec
   15a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   15a04:	sub	sp, fp, #16
   15a08:	pop	{r4, r5, r6, sl, fp, pc}
   15a0c:	push	{fp, lr}
   15a10:	mov	fp, sp
   15a14:	sub	sp, sp, #16
   15a18:	str	r0, [fp, #-4]
   15a1c:	str	r1, [sp, #8]
   15a20:	str	r2, [sp, #4]
   15a24:	ldr	r0, [fp, #-4]
   15a28:	ldr	r1, [sp, #8]
   15a2c:	ldr	r3, [sp, #4]
   15a30:	movw	r2, #0
   15a34:	bl	15a40 <__assert_fail@plt+0x4a44>
   15a38:	mov	sp, fp
   15a3c:	pop	{fp, pc}
   15a40:	push	{r4, r5, r6, sl, fp, lr}
   15a44:	add	fp, sp, #16
   15a48:	sub	sp, sp, #80	; 0x50
   15a4c:	str	r0, [fp, #-20]	; 0xffffffec
   15a50:	str	r1, [fp, #-24]	; 0xffffffe8
   15a54:	str	r2, [fp, #-28]	; 0xffffffe4
   15a58:	str	r3, [fp, #-32]	; 0xffffffe0
   15a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a60:	movw	r1, #0
   15a64:	cmp	r0, r1
   15a68:	beq	15a78 <__assert_fail@plt+0x4a7c>
   15a6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a70:	str	r0, [sp, #40]	; 0x28
   15a74:	b	15a88 <__assert_fail@plt+0x4a8c>
   15a78:	movw	r0, #356	; 0x164
   15a7c:	movt	r0, #3
   15a80:	str	r0, [sp, #40]	; 0x28
   15a84:	b	15a88 <__assert_fail@plt+0x4a8c>
   15a88:	ldr	r0, [sp, #40]	; 0x28
   15a8c:	str	r0, [fp, #-36]	; 0xffffffdc
   15a90:	bl	10f3c <__errno_location@plt>
   15a94:	ldr	r0, [r0]
   15a98:	str	r0, [fp, #-40]	; 0xffffffd8
   15a9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15aa0:	ldr	r0, [r0, #4]
   15aa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15aa8:	movw	r2, #0
   15aac:	cmp	r1, r2
   15ab0:	movw	r1, #0
   15ab4:	movne	r1, #1
   15ab8:	tst	r1, #1
   15abc:	mov	r1, r2
   15ac0:	moveq	r1, #1
   15ac4:	orr	r0, r0, r1
   15ac8:	str	r0, [fp, #-44]	; 0xffffffd4
   15acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ad4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15ad8:	ldr	r1, [r1]
   15adc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15ae0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15ae4:	add	lr, lr, #8
   15ae8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15aec:	ldr	r4, [r4, #40]	; 0x28
   15af0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15af4:	ldr	r5, [r5, #44]	; 0x2c
   15af8:	str	r0, [sp, #36]	; 0x24
   15afc:	mov	r0, r2
   15b00:	str	r1, [sp, #32]
   15b04:	mov	r1, r2
   15b08:	ldr	r2, [sp, #36]	; 0x24
   15b0c:	ldr	r6, [sp, #32]
   15b10:	str	r6, [sp]
   15b14:	str	ip, [sp, #4]
   15b18:	str	lr, [sp, #8]
   15b1c:	str	r4, [sp, #12]
   15b20:	str	r5, [sp, #16]
   15b24:	bl	142d8 <__assert_fail@plt+0x32dc>
   15b28:	add	r0, r0, #1
   15b2c:	str	r0, [sp, #48]	; 0x30
   15b30:	ldr	r0, [sp, #48]	; 0x30
   15b34:	bl	16f24 <__assert_fail@plt+0x5f28>
   15b38:	str	r0, [sp, #44]	; 0x2c
   15b3c:	ldr	r0, [sp, #44]	; 0x2c
   15b40:	ldr	r1, [sp, #48]	; 0x30
   15b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b4c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15b50:	ldr	ip, [ip]
   15b54:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15b58:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15b5c:	add	r4, r4, #8
   15b60:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15b64:	ldr	r5, [r5, #40]	; 0x28
   15b68:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15b6c:	ldr	r6, [r6, #44]	; 0x2c
   15b70:	str	ip, [sp]
   15b74:	str	lr, [sp, #4]
   15b78:	str	r4, [sp, #8]
   15b7c:	str	r5, [sp, #12]
   15b80:	str	r6, [sp, #16]
   15b84:	bl	142d8 <__assert_fail@plt+0x32dc>
   15b88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15b8c:	str	r0, [sp, #28]
   15b90:	str	r1, [sp, #24]
   15b94:	bl	10f3c <__errno_location@plt>
   15b98:	ldr	r1, [sp, #24]
   15b9c:	str	r1, [r0]
   15ba0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ba4:	movw	r2, #0
   15ba8:	cmp	r0, r2
   15bac:	beq	15bc0 <__assert_fail@plt+0x4bc4>
   15bb0:	ldr	r0, [sp, #48]	; 0x30
   15bb4:	sub	r0, r0, #1
   15bb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bbc:	str	r0, [r1]
   15bc0:	ldr	r0, [sp, #44]	; 0x2c
   15bc4:	sub	sp, fp, #16
   15bc8:	pop	{r4, r5, r6, sl, fp, pc}
   15bcc:	push	{fp, lr}
   15bd0:	mov	fp, sp
   15bd4:	sub	sp, sp, #8
   15bd8:	movw	r0, #236	; 0xec
   15bdc:	movt	r0, #3
   15be0:	ldr	r0, [r0]
   15be4:	str	r0, [sp, #4]
   15be8:	movw	r0, #1
   15bec:	str	r0, [sp]
   15bf0:	ldr	r0, [sp]
   15bf4:	movw	r1, #240	; 0xf0
   15bf8:	movt	r1, #3
   15bfc:	ldr	r1, [r1]
   15c00:	cmp	r0, r1
   15c04:	bge	15c2c <__assert_fail@plt+0x4c30>
   15c08:	ldr	r0, [sp, #4]
   15c0c:	ldr	r1, [sp]
   15c10:	add	r0, r0, r1, lsl #3
   15c14:	ldr	r0, [r0, #4]
   15c18:	bl	1c3bc <__assert_fail@plt+0xb3c0>
   15c1c:	ldr	r0, [sp]
   15c20:	add	r0, r0, #1
   15c24:	str	r0, [sp]
   15c28:	b	15bf0 <__assert_fail@plt+0x4bf4>
   15c2c:	ldr	r0, [sp, #4]
   15c30:	ldr	r0, [r0, #4]
   15c34:	movw	r1, #404	; 0x194
   15c38:	movt	r1, #3
   15c3c:	cmp	r0, r1
   15c40:	beq	15c6c <__assert_fail@plt+0x4c70>
   15c44:	ldr	r0, [sp, #4]
   15c48:	ldr	r0, [r0, #4]
   15c4c:	bl	1c3bc <__assert_fail@plt+0xb3c0>
   15c50:	movw	r0, #256	; 0x100
   15c54:	movw	r1, #244	; 0xf4
   15c58:	movt	r1, #3
   15c5c:	str	r0, [r1]
   15c60:	movw	r0, #404	; 0x194
   15c64:	movt	r0, #3
   15c68:	str	r0, [r1, #4]
   15c6c:	ldr	r0, [sp, #4]
   15c70:	movw	r1, #244	; 0xf4
   15c74:	movt	r1, #3
   15c78:	cmp	r0, r1
   15c7c:	beq	15c9c <__assert_fail@plt+0x4ca0>
   15c80:	ldr	r0, [sp, #4]
   15c84:	bl	1c3bc <__assert_fail@plt+0xb3c0>
   15c88:	movw	r0, #236	; 0xec
   15c8c:	movt	r0, #3
   15c90:	movw	r1, #244	; 0xf4
   15c94:	movt	r1, #3
   15c98:	str	r1, [r0]
   15c9c:	movw	r0, #240	; 0xf0
   15ca0:	movt	r0, #3
   15ca4:	movw	r1, #1
   15ca8:	str	r1, [r0]
   15cac:	mov	sp, fp
   15cb0:	pop	{fp, pc}
   15cb4:	push	{fp, lr}
   15cb8:	mov	fp, sp
   15cbc:	sub	sp, sp, #8
   15cc0:	str	r0, [sp, #4]
   15cc4:	str	r1, [sp]
   15cc8:	ldr	r0, [sp, #4]
   15ccc:	ldr	r1, [sp]
   15cd0:	mvn	r2, #0
   15cd4:	movw	r3, #356	; 0x164
   15cd8:	movt	r3, #3
   15cdc:	bl	15ce8 <__assert_fail@plt+0x4cec>
   15ce0:	mov	sp, fp
   15ce4:	pop	{fp, pc}
   15ce8:	push	{r4, r5, r6, sl, fp, lr}
   15cec:	add	fp, sp, #16
   15cf0:	sub	sp, sp, #80	; 0x50
   15cf4:	str	r0, [fp, #-20]	; 0xffffffec
   15cf8:	str	r1, [fp, #-24]	; 0xffffffe8
   15cfc:	str	r2, [fp, #-28]	; 0xffffffe4
   15d00:	str	r3, [fp, #-32]	; 0xffffffe0
   15d04:	bl	10f3c <__errno_location@plt>
   15d08:	ldr	r1, [pc, #672]	; 15fb0 <__assert_fail@plt+0x4fb4>
   15d0c:	ldr	r0, [r0]
   15d10:	str	r0, [fp, #-36]	; 0xffffffdc
   15d14:	movw	r0, #236	; 0xec
   15d18:	movt	r0, #3
   15d1c:	ldr	r0, [r0]
   15d20:	str	r0, [fp, #-40]	; 0xffffffd8
   15d24:	str	r1, [fp, #-44]	; 0xffffffd4
   15d28:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d2c:	movw	r1, #0
   15d30:	cmp	r1, r0
   15d34:	bgt	15d48 <__assert_fail@plt+0x4d4c>
   15d38:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d40:	cmp	r0, r1
   15d44:	blt	15d4c <__assert_fail@plt+0x4d50>
   15d48:	bl	10fe4 <abort@plt>
   15d4c:	movw	r0, #240	; 0xf0
   15d50:	movt	r0, #3
   15d54:	ldr	r0, [r0]
   15d58:	ldr	r1, [fp, #-20]	; 0xffffffec
   15d5c:	cmp	r0, r1
   15d60:	bgt	15e58 <__assert_fail@plt+0x4e5c>
   15d64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d68:	movw	r1, #244	; 0xf4
   15d6c:	movt	r1, #3
   15d70:	cmp	r0, r1
   15d74:	movw	r0, #0
   15d78:	moveq	r0, #1
   15d7c:	and	r0, r0, #1
   15d80:	strb	r0, [fp, #-45]	; 0xffffffd3
   15d84:	movw	r0, #240	; 0xf0
   15d88:	movt	r0, #3
   15d8c:	ldr	r0, [r0]
   15d90:	str	r0, [sp, #44]	; 0x2c
   15d94:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15d98:	tst	r0, #1
   15d9c:	beq	15dac <__assert_fail@plt+0x4db0>
   15da0:	movw	r0, #0
   15da4:	str	r0, [sp, #24]
   15da8:	b	15db4 <__assert_fail@plt+0x4db8>
   15dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15db0:	str	r0, [sp, #24]
   15db4:	ldr	r0, [sp, #24]
   15db8:	ldr	r1, [fp, #-20]	; 0xffffffec
   15dbc:	movw	r2, #240	; 0xf0
   15dc0:	movt	r2, #3
   15dc4:	ldr	r2, [r2]
   15dc8:	sub	r1, r1, r2
   15dcc:	add	r2, r1, #1
   15dd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dd4:	add	r1, sp, #44	; 0x2c
   15dd8:	movw	ip, #8
   15ddc:	str	ip, [sp]
   15de0:	bl	17160 <__assert_fail@plt+0x6164>
   15de4:	str	r0, [fp, #-40]	; 0xffffffd8
   15de8:	movw	r1, #236	; 0xec
   15dec:	movt	r1, #3
   15df0:	str	r0, [r1]
   15df4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15df8:	tst	r0, #1
   15dfc:	beq	15e1c <__assert_fail@plt+0x4e20>
   15e00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e04:	movw	r1, #244	; 0xf4
   15e08:	movt	r1, #3
   15e0c:	ldr	r2, [r1]
   15e10:	str	r2, [r0]
   15e14:	ldr	r1, [r1, #4]
   15e18:	str	r1, [r0, #4]
   15e1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e20:	movw	r1, #240	; 0xf0
   15e24:	movt	r1, #3
   15e28:	ldr	r1, [r1]
   15e2c:	add	r0, r0, r1, lsl #3
   15e30:	ldr	r2, [sp, #44]	; 0x2c
   15e34:	sub	r1, r2, r1
   15e38:	lsl	r2, r1, #3
   15e3c:	movw	r1, #0
   15e40:	and	r1, r1, #255	; 0xff
   15e44:	bl	10f54 <memset@plt>
   15e48:	ldr	r0, [sp, #44]	; 0x2c
   15e4c:	movw	r1, #240	; 0xf0
   15e50:	movt	r1, #3
   15e54:	str	r0, [r1]
   15e58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e60:	ldr	r0, [r0, r1, lsl #3]
   15e64:	str	r0, [sp, #40]	; 0x28
   15e68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e70:	add	r0, r0, r1, lsl #3
   15e74:	ldr	r0, [r0, #4]
   15e78:	str	r0, [sp, #36]	; 0x24
   15e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e80:	ldr	r0, [r0, #4]
   15e84:	orr	r0, r0, #1
   15e88:	str	r0, [sp, #32]
   15e8c:	ldr	r0, [sp, #36]	; 0x24
   15e90:	ldr	r1, [sp, #40]	; 0x28
   15e94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e9c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15ea0:	ldr	ip, [ip]
   15ea4:	ldr	lr, [sp, #32]
   15ea8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15eac:	add	r4, r4, #8
   15eb0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15eb4:	ldr	r5, [r5, #40]	; 0x28
   15eb8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15ebc:	ldr	r6, [r6, #44]	; 0x2c
   15ec0:	str	ip, [sp]
   15ec4:	str	lr, [sp, #4]
   15ec8:	str	r4, [sp, #8]
   15ecc:	str	r5, [sp, #12]
   15ed0:	str	r6, [sp, #16]
   15ed4:	bl	142d8 <__assert_fail@plt+0x32dc>
   15ed8:	str	r0, [sp, #28]
   15edc:	ldr	r0, [sp, #40]	; 0x28
   15ee0:	ldr	r1, [sp, #28]
   15ee4:	cmp	r0, r1
   15ee8:	bhi	15f90 <__assert_fail@plt+0x4f94>
   15eec:	ldr	r0, [sp, #28]
   15ef0:	add	r0, r0, #1
   15ef4:	str	r0, [sp, #40]	; 0x28
   15ef8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15efc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15f00:	add	r1, r1, r2, lsl #3
   15f04:	str	r0, [r1]
   15f08:	ldr	r0, [sp, #36]	; 0x24
   15f0c:	movw	r1, #404	; 0x194
   15f10:	movt	r1, #3
   15f14:	cmp	r0, r1
   15f18:	beq	15f24 <__assert_fail@plt+0x4f28>
   15f1c:	ldr	r0, [sp, #36]	; 0x24
   15f20:	bl	1c3bc <__assert_fail@plt+0xb3c0>
   15f24:	ldr	r0, [sp, #40]	; 0x28
   15f28:	bl	16f24 <__assert_fail@plt+0x5f28>
   15f2c:	mov	r1, r0
   15f30:	str	r0, [sp, #36]	; 0x24
   15f34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f38:	ldr	r2, [fp, #-20]	; 0xffffffec
   15f3c:	add	r0, r0, r2, lsl #3
   15f40:	str	r1, [r0, #4]
   15f44:	ldr	r0, [sp, #36]	; 0x24
   15f48:	ldr	r1, [sp, #40]	; 0x28
   15f4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15f54:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15f58:	ldr	ip, [ip]
   15f5c:	ldr	lr, [sp, #32]
   15f60:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15f64:	add	r4, r4, #8
   15f68:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15f6c:	ldr	r5, [r5, #40]	; 0x28
   15f70:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15f74:	ldr	r6, [r6, #44]	; 0x2c
   15f78:	str	ip, [sp]
   15f7c:	str	lr, [sp, #4]
   15f80:	str	r4, [sp, #8]
   15f84:	str	r5, [sp, #12]
   15f88:	str	r6, [sp, #16]
   15f8c:	bl	142d8 <__assert_fail@plt+0x32dc>
   15f90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f94:	str	r0, [sp, #20]
   15f98:	bl	10f3c <__errno_location@plt>
   15f9c:	ldr	r1, [sp, #20]
   15fa0:	str	r1, [r0]
   15fa4:	ldr	r0, [sp, #36]	; 0x24
   15fa8:	sub	sp, fp, #16
   15fac:	pop	{r4, r5, r6, sl, fp, pc}
   15fb0:	svcvc	0x00ffffff
   15fb4:	push	{fp, lr}
   15fb8:	mov	fp, sp
   15fbc:	sub	sp, sp, #16
   15fc0:	str	r0, [fp, #-4]
   15fc4:	str	r1, [sp, #8]
   15fc8:	str	r2, [sp, #4]
   15fcc:	ldr	r0, [fp, #-4]
   15fd0:	ldr	r1, [sp, #8]
   15fd4:	ldr	r2, [sp, #4]
   15fd8:	movw	r3, #356	; 0x164
   15fdc:	movt	r3, #3
   15fe0:	bl	15ce8 <__assert_fail@plt+0x4cec>
   15fe4:	mov	sp, fp
   15fe8:	pop	{fp, pc}
   15fec:	push	{fp, lr}
   15ff0:	mov	fp, sp
   15ff4:	sub	sp, sp, #8
   15ff8:	str	r0, [sp, #4]
   15ffc:	ldr	r1, [sp, #4]
   16000:	movw	r0, #0
   16004:	bl	15cb4 <__assert_fail@plt+0x4cb8>
   16008:	mov	sp, fp
   1600c:	pop	{fp, pc}
   16010:	push	{fp, lr}
   16014:	mov	fp, sp
   16018:	sub	sp, sp, #8
   1601c:	str	r0, [sp, #4]
   16020:	str	r1, [sp]
   16024:	ldr	r1, [sp, #4]
   16028:	ldr	r2, [sp]
   1602c:	movw	r0, #0
   16030:	bl	15fb4 <__assert_fail@plt+0x4fb8>
   16034:	mov	sp, fp
   16038:	pop	{fp, pc}
   1603c:	push	{fp, lr}
   16040:	mov	fp, sp
   16044:	sub	sp, sp, #64	; 0x40
   16048:	str	r0, [fp, #-4]
   1604c:	str	r1, [fp, #-8]
   16050:	str	r2, [fp, #-12]
   16054:	ldr	r1, [fp, #-8]
   16058:	add	r0, sp, #4
   1605c:	bl	1607c <__assert_fail@plt+0x5080>
   16060:	ldr	r0, [fp, #-4]
   16064:	ldr	r1, [fp, #-12]
   16068:	mvn	r2, #0
   1606c:	add	r3, sp, #4
   16070:	bl	15ce8 <__assert_fail@plt+0x4cec>
   16074:	mov	sp, fp
   16078:	pop	{fp, pc}
   1607c:	push	{fp, lr}
   16080:	mov	fp, sp
   16084:	sub	sp, sp, #8
   16088:	str	r1, [sp, #4]
   1608c:	mov	r1, r0
   16090:	str	r0, [sp]
   16094:	mov	r0, r1
   16098:	movw	r1, #0
   1609c:	and	r1, r1, #255	; 0xff
   160a0:	movw	r2, #48	; 0x30
   160a4:	bl	10f54 <memset@plt>
   160a8:	ldr	r0, [sp, #4]
   160ac:	cmp	r0, #10
   160b0:	bne	160b8 <__assert_fail@plt+0x50bc>
   160b4:	bl	10fe4 <abort@plt>
   160b8:	ldr	r0, [sp, #4]
   160bc:	ldr	r1, [sp]
   160c0:	str	r0, [r1]
   160c4:	mov	sp, fp
   160c8:	pop	{fp, pc}
   160cc:	push	{fp, lr}
   160d0:	mov	fp, sp
   160d4:	sub	sp, sp, #64	; 0x40
   160d8:	str	r0, [fp, #-4]
   160dc:	str	r1, [fp, #-8]
   160e0:	str	r2, [fp, #-12]
   160e4:	str	r3, [fp, #-16]
   160e8:	ldr	r1, [fp, #-8]
   160ec:	mov	r0, sp
   160f0:	bl	1607c <__assert_fail@plt+0x5080>
   160f4:	ldr	r0, [fp, #-4]
   160f8:	ldr	r1, [fp, #-12]
   160fc:	ldr	r2, [fp, #-16]
   16100:	mov	r3, sp
   16104:	bl	15ce8 <__assert_fail@plt+0x4cec>
   16108:	mov	sp, fp
   1610c:	pop	{fp, pc}
   16110:	push	{fp, lr}
   16114:	mov	fp, sp
   16118:	sub	sp, sp, #8
   1611c:	str	r0, [sp, #4]
   16120:	str	r1, [sp]
   16124:	ldr	r1, [sp, #4]
   16128:	ldr	r2, [sp]
   1612c:	movw	r0, #0
   16130:	bl	1603c <__assert_fail@plt+0x5040>
   16134:	mov	sp, fp
   16138:	pop	{fp, pc}
   1613c:	push	{fp, lr}
   16140:	mov	fp, sp
   16144:	sub	sp, sp, #16
   16148:	str	r0, [fp, #-4]
   1614c:	str	r1, [sp, #8]
   16150:	str	r2, [sp, #4]
   16154:	ldr	r1, [fp, #-4]
   16158:	ldr	r2, [sp, #8]
   1615c:	ldr	r3, [sp, #4]
   16160:	movw	r0, #0
   16164:	bl	160cc <__assert_fail@plt+0x50d0>
   16168:	mov	sp, fp
   1616c:	pop	{fp, pc}
   16170:	push	{fp, lr}
   16174:	mov	fp, sp
   16178:	sub	sp, sp, #72	; 0x48
   1617c:	movw	r3, #356	; 0x164
   16180:	movt	r3, #3
   16184:	str	r0, [fp, #-4]
   16188:	str	r1, [fp, #-8]
   1618c:	strb	r2, [fp, #-9]
   16190:	add	r0, sp, #12
   16194:	mov	r1, r0
   16198:	str	r0, [sp, #8]
   1619c:	mov	r0, r1
   161a0:	mov	r1, r3
   161a4:	movw	r2, #48	; 0x30
   161a8:	bl	10e04 <memcpy@plt>
   161ac:	ldr	r0, [sp, #8]
   161b0:	ldrb	r1, [fp, #-9]
   161b4:	movw	r2, #1
   161b8:	bl	14080 <__assert_fail@plt+0x3084>
   161bc:	ldr	r1, [fp, #-4]
   161c0:	ldr	r2, [fp, #-8]
   161c4:	movw	r3, #0
   161c8:	str	r0, [sp, #4]
   161cc:	mov	r0, r3
   161d0:	add	r3, sp, #12
   161d4:	bl	15ce8 <__assert_fail@plt+0x4cec>
   161d8:	mov	sp, fp
   161dc:	pop	{fp, pc}
   161e0:	push	{fp, lr}
   161e4:	mov	fp, sp
   161e8:	sub	sp, sp, #8
   161ec:	str	r0, [sp, #4]
   161f0:	strb	r1, [sp, #3]
   161f4:	ldr	r0, [sp, #4]
   161f8:	mvn	r1, #0
   161fc:	ldrb	r2, [sp, #3]
   16200:	bl	16170 <__assert_fail@plt+0x5174>
   16204:	mov	sp, fp
   16208:	pop	{fp, pc}
   1620c:	push	{fp, lr}
   16210:	mov	fp, sp
   16214:	sub	sp, sp, #8
   16218:	str	r0, [sp, #4]
   1621c:	ldr	r0, [sp, #4]
   16220:	movw	r1, #58	; 0x3a
   16224:	and	r1, r1, #255	; 0xff
   16228:	bl	161e0 <__assert_fail@plt+0x51e4>
   1622c:	mov	sp, fp
   16230:	pop	{fp, pc}
   16234:	push	{fp, lr}
   16238:	mov	fp, sp
   1623c:	sub	sp, sp, #8
   16240:	str	r0, [sp, #4]
   16244:	str	r1, [sp]
   16248:	ldr	r0, [sp, #4]
   1624c:	ldr	r1, [sp]
   16250:	movw	r2, #58	; 0x3a
   16254:	and	r2, r2, #255	; 0xff
   16258:	bl	16170 <__assert_fail@plt+0x5174>
   1625c:	mov	sp, fp
   16260:	pop	{fp, pc}
   16264:	push	{fp, lr}
   16268:	mov	fp, sp
   1626c:	sub	sp, sp, #120	; 0x78
   16270:	str	r0, [fp, #-4]
   16274:	str	r1, [fp, #-8]
   16278:	str	r2, [fp, #-12]
   1627c:	ldr	r1, [fp, #-8]
   16280:	add	r0, sp, #12
   16284:	bl	1607c <__assert_fail@plt+0x5080>
   16288:	add	r0, sp, #60	; 0x3c
   1628c:	mov	r1, r0
   16290:	add	r2, sp, #12
   16294:	str	r0, [sp, #8]
   16298:	mov	r0, r1
   1629c:	mov	r1, r2
   162a0:	movw	r2, #48	; 0x30
   162a4:	bl	10e04 <memcpy@plt>
   162a8:	ldr	r0, [sp, #8]
   162ac:	movw	r1, #58	; 0x3a
   162b0:	and	r1, r1, #255	; 0xff
   162b4:	movw	r2, #1
   162b8:	bl	14080 <__assert_fail@plt+0x3084>
   162bc:	ldr	r1, [fp, #-4]
   162c0:	ldr	r2, [fp, #-12]
   162c4:	str	r0, [sp, #4]
   162c8:	mov	r0, r1
   162cc:	mov	r1, r2
   162d0:	mvn	r2, #0
   162d4:	add	r3, sp, #60	; 0x3c
   162d8:	bl	15ce8 <__assert_fail@plt+0x4cec>
   162dc:	mov	sp, fp
   162e0:	pop	{fp, pc}
   162e4:	push	{fp, lr}
   162e8:	mov	fp, sp
   162ec:	sub	sp, sp, #24
   162f0:	str	r0, [fp, #-4]
   162f4:	str	r1, [fp, #-8]
   162f8:	str	r2, [sp, #12]
   162fc:	str	r3, [sp, #8]
   16300:	ldr	r0, [fp, #-4]
   16304:	ldr	r1, [fp, #-8]
   16308:	ldr	r2, [sp, #12]
   1630c:	ldr	r3, [sp, #8]
   16310:	mvn	ip, #0
   16314:	str	ip, [sp]
   16318:	bl	16324 <__assert_fail@plt+0x5328>
   1631c:	mov	sp, fp
   16320:	pop	{fp, pc}
   16324:	push	{fp, lr}
   16328:	mov	fp, sp
   1632c:	sub	sp, sp, #72	; 0x48
   16330:	ldr	ip, [fp, #8]
   16334:	movw	lr, #356	; 0x164
   16338:	movt	lr, #3
   1633c:	str	r0, [fp, #-4]
   16340:	str	r1, [fp, #-8]
   16344:	str	r2, [fp, #-12]
   16348:	str	r3, [fp, #-16]
   1634c:	add	r0, sp, #8
   16350:	mov	r1, r0
   16354:	str	r0, [sp, #4]
   16358:	mov	r0, r1
   1635c:	mov	r1, lr
   16360:	movw	r2, #48	; 0x30
   16364:	str	ip, [sp]
   16368:	bl	10e04 <memcpy@plt>
   1636c:	ldr	r1, [fp, #-8]
   16370:	ldr	r2, [fp, #-12]
   16374:	ldr	r0, [sp, #4]
   16378:	bl	14180 <__assert_fail@plt+0x3184>
   1637c:	ldr	r0, [fp, #-4]
   16380:	ldr	r1, [fp, #-16]
   16384:	ldr	r2, [fp, #8]
   16388:	add	r3, sp, #8
   1638c:	bl	15ce8 <__assert_fail@plt+0x4cec>
   16390:	mov	sp, fp
   16394:	pop	{fp, pc}
   16398:	push	{fp, lr}
   1639c:	mov	fp, sp
   163a0:	sub	sp, sp, #16
   163a4:	str	r0, [fp, #-4]
   163a8:	str	r1, [sp, #8]
   163ac:	str	r2, [sp, #4]
   163b0:	ldr	r1, [fp, #-4]
   163b4:	ldr	r2, [sp, #8]
   163b8:	ldr	r3, [sp, #4]
   163bc:	movw	r0, #0
   163c0:	bl	162e4 <__assert_fail@plt+0x52e8>
   163c4:	mov	sp, fp
   163c8:	pop	{fp, pc}
   163cc:	push	{fp, lr}
   163d0:	mov	fp, sp
   163d4:	sub	sp, sp, #24
   163d8:	str	r0, [fp, #-4]
   163dc:	str	r1, [fp, #-8]
   163e0:	str	r2, [sp, #12]
   163e4:	str	r3, [sp, #8]
   163e8:	ldr	r1, [fp, #-4]
   163ec:	ldr	r2, [fp, #-8]
   163f0:	ldr	r3, [sp, #12]
   163f4:	ldr	r0, [sp, #8]
   163f8:	movw	ip, #0
   163fc:	str	r0, [sp, #4]
   16400:	mov	r0, ip
   16404:	ldr	ip, [sp, #4]
   16408:	str	ip, [sp]
   1640c:	bl	16324 <__assert_fail@plt+0x5328>
   16410:	mov	sp, fp
   16414:	pop	{fp, pc}
   16418:	push	{fp, lr}
   1641c:	mov	fp, sp
   16420:	sub	sp, sp, #16
   16424:	str	r0, [fp, #-4]
   16428:	str	r1, [sp, #8]
   1642c:	str	r2, [sp, #4]
   16430:	ldr	r0, [fp, #-4]
   16434:	ldr	r1, [sp, #8]
   16438:	ldr	r2, [sp, #4]
   1643c:	movw	r3, #252	; 0xfc
   16440:	movt	r3, #3
   16444:	bl	15ce8 <__assert_fail@plt+0x4cec>
   16448:	mov	sp, fp
   1644c:	pop	{fp, pc}
   16450:	push	{fp, lr}
   16454:	mov	fp, sp
   16458:	sub	sp, sp, #8
   1645c:	str	r0, [sp, #4]
   16460:	str	r1, [sp]
   16464:	ldr	r1, [sp, #4]
   16468:	ldr	r2, [sp]
   1646c:	movw	r0, #0
   16470:	bl	16418 <__assert_fail@plt+0x541c>
   16474:	mov	sp, fp
   16478:	pop	{fp, pc}
   1647c:	push	{fp, lr}
   16480:	mov	fp, sp
   16484:	sub	sp, sp, #8
   16488:	str	r0, [sp, #4]
   1648c:	str	r1, [sp]
   16490:	ldr	r0, [sp, #4]
   16494:	ldr	r1, [sp]
   16498:	mvn	r2, #0
   1649c:	bl	16418 <__assert_fail@plt+0x541c>
   164a0:	mov	sp, fp
   164a4:	pop	{fp, pc}
   164a8:	push	{fp, lr}
   164ac:	mov	fp, sp
   164b0:	sub	sp, sp, #8
   164b4:	str	r0, [sp, #4]
   164b8:	ldr	r1, [sp, #4]
   164bc:	movw	r0, #0
   164c0:	bl	1647c <__assert_fail@plt+0x5480>
   164c4:	mov	sp, fp
   164c8:	pop	{fp, pc}
   164cc:	push	{fp, lr}
   164d0:	mov	fp, sp
   164d4:	sub	sp, sp, #24
   164d8:	str	r0, [fp, #-8]
   164dc:	str	r1, [sp, #12]
   164e0:	ldr	r0, [fp, #-8]
   164e4:	bl	10f0c <gettext@plt>
   164e8:	str	r0, [sp, #8]
   164ec:	ldr	r0, [sp, #8]
   164f0:	ldr	r1, [fp, #-8]
   164f4:	cmp	r0, r1
   164f8:	beq	16508 <__assert_fail@plt+0x550c>
   164fc:	ldr	r0, [sp, #8]
   16500:	str	r0, [fp, #-4]
   16504:	b	165d4 <__assert_fail@plt+0x55d8>
   16508:	bl	1c6d8 <__assert_fail@plt+0xb6dc>
   1650c:	str	r0, [sp, #4]
   16510:	ldr	r0, [sp, #4]
   16514:	movw	r1, #61372	; 0xefbc
   16518:	movt	r1, #1
   1651c:	bl	1c09c <__assert_fail@plt+0xb0a0>
   16520:	cmp	r0, #0
   16524:	bne	1655c <__assert_fail@plt+0x5560>
   16528:	ldr	r0, [fp, #-8]
   1652c:	ldrb	r0, [r0]
   16530:	cmp	r0, #96	; 0x60
   16534:	movw	r0, #0
   16538:	moveq	r0, #1
   1653c:	tst	r0, #1
   16540:	movw	r0, #61382	; 0xefc6
   16544:	movt	r0, #1
   16548:	movw	r1, #61378	; 0xefc2
   1654c:	movt	r1, #1
   16550:	movne	r0, r1
   16554:	str	r0, [fp, #-4]
   16558:	b	165d4 <__assert_fail@plt+0x55d8>
   1655c:	ldr	r0, [sp, #4]
   16560:	movw	r1, #61386	; 0xefca
   16564:	movt	r1, #1
   16568:	bl	1c09c <__assert_fail@plt+0xb0a0>
   1656c:	cmp	r0, #0
   16570:	bne	165a8 <__assert_fail@plt+0x55ac>
   16574:	ldr	r0, [fp, #-8]
   16578:	ldrb	r0, [r0]
   1657c:	cmp	r0, #96	; 0x60
   16580:	movw	r0, #0
   16584:	moveq	r0, #1
   16588:	tst	r0, #1
   1658c:	movw	r0, #61398	; 0xefd6
   16590:	movt	r0, #1
   16594:	movw	r1, #61394	; 0xefd2
   16598:	movt	r1, #1
   1659c:	movne	r0, r1
   165a0:	str	r0, [fp, #-4]
   165a4:	b	165d4 <__assert_fail@plt+0x55d8>
   165a8:	ldr	r0, [sp, #12]
   165ac:	cmp	r0, #9
   165b0:	movw	r0, #0
   165b4:	moveq	r0, #1
   165b8:	tst	r0, #1
   165bc:	movw	r0, #61370	; 0xefba
   165c0:	movt	r0, #1
   165c4:	movw	r1, #61366	; 0xefb6
   165c8:	movt	r1, #1
   165cc:	movne	r0, r1
   165d0:	str	r0, [fp, #-4]
   165d4:	ldr	r0, [fp, #-4]
   165d8:	mov	sp, fp
   165dc:	pop	{fp, pc}
   165e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165e4:	add	fp, sp, #28
   165e8:	sub	sp, sp, #196	; 0xc4
   165ec:	ldr	ip, [fp, #12]
   165f0:	ldr	lr, [fp, #8]
   165f4:	str	r0, [fp, #-32]	; 0xffffffe0
   165f8:	str	r1, [fp, #-36]	; 0xffffffdc
   165fc:	str	r2, [fp, #-40]	; 0xffffffd8
   16600:	str	r3, [fp, #-44]	; 0xffffffd4
   16604:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16608:	movw	r1, #0
   1660c:	cmp	r0, r1
   16610:	beq	16644 <__assert_fail@plt+0x5648>
   16614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16618:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1661c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16620:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16624:	movw	ip, #61488	; 0xf030
   16628:	movt	ip, #1
   1662c:	str	r1, [fp, #-48]	; 0xffffffd0
   16630:	mov	r1, ip
   16634:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16638:	str	ip, [sp]
   1663c:	bl	10f30 <fprintf@plt>
   16640:	b	1665c <__assert_fail@plt+0x5660>
   16644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16648:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1664c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16650:	movw	r1, #61500	; 0xf03c
   16654:	movt	r1, #1
   16658:	bl	10f30 <fprintf@plt>
   1665c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16660:	movw	r1, #61507	; 0xf043
   16664:	movt	r1, #1
   16668:	str	r0, [fp, #-52]	; 0xffffffcc
   1666c:	mov	r0, r1
   16670:	bl	10f0c <gettext@plt>
   16674:	movw	r1, #62225	; 0xf311
   16678:	movt	r1, #1
   1667c:	movw	r3, #2022	; 0x7e6
   16680:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16684:	str	r0, [fp, #-56]	; 0xffffffc8
   16688:	mov	r0, r2
   1668c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16690:	bl	10f30 <fprintf@plt>
   16694:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16698:	movw	r2, #60819	; 0xed93
   1669c:	movt	r2, #1
   166a0:	str	r0, [fp, #-60]	; 0xffffffc4
   166a4:	mov	r0, r2
   166a8:	str	r2, [fp, #-64]	; 0xffffffc0
   166ac:	bl	10db0 <fputs_unlocked@plt>
   166b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   166b4:	movw	r2, #61511	; 0xf047
   166b8:	movt	r2, #1
   166bc:	str	r0, [fp, #-68]	; 0xffffffbc
   166c0:	mov	r0, r2
   166c4:	str	r1, [fp, #-72]	; 0xffffffb8
   166c8:	bl	10f0c <gettext@plt>
   166cc:	movw	r2, #61682	; 0xf0f2
   166d0:	movt	r2, #1
   166d4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   166d8:	str	r0, [fp, #-76]	; 0xffffffb4
   166dc:	mov	r0, r1
   166e0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   166e4:	bl	10f30 <fprintf@plt>
   166e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   166ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   166f0:	str	r0, [fp, #-80]	; 0xffffffb0
   166f4:	mov	r0, r2
   166f8:	bl	10db0 <fputs_unlocked@plt>
   166fc:	ldr	r1, [fp, #12]
   16700:	cmp	r1, #9
   16704:	str	r1, [fp, #-84]	; 0xffffffac
   16708:	bhi	16b24 <__assert_fail@plt+0x5b28>
   1670c:	add	r0, pc, #8
   16710:	ldr	r1, [fp, #-84]	; 0xffffffac
   16714:	ldr	r0, [r0, r1, lsl #2]
   16718:	mov	pc, r0
   1671c:	andeq	r6, r1, r4, asr #14
   16720:	andeq	r6, r1, r8, asr #14
   16724:	andeq	r6, r1, r0, lsl #15
   16728:	andeq	r6, r1, r0, asr #15
   1672c:	andeq	r6, r1, r8, lsl r8
   16730:	andeq	r6, r1, ip, ror r8
   16734:	andeq	r6, r1, ip, ror #17
   16738:	andeq	r6, r1, r8, ror #18
   1673c:	strdeq	r6, [r1], -r0
   16740:	andeq	r6, r1, r4, lsl #21
   16744:	b	16bc0 <__assert_fail@plt+0x5bc4>
   16748:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1674c:	movw	r1, #61716	; 0xf114
   16750:	movt	r1, #1
   16754:	str	r0, [fp, #-88]	; 0xffffffa8
   16758:	mov	r0, r1
   1675c:	bl	10f0c <gettext@plt>
   16760:	ldr	r1, [fp, #8]
   16764:	ldr	r2, [r1]
   16768:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1676c:	str	r0, [fp, #-92]	; 0xffffffa4
   16770:	mov	r0, r1
   16774:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16778:	bl	10f30 <fprintf@plt>
   1677c:	b	16bc0 <__assert_fail@plt+0x5bc4>
   16780:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16784:	movw	r1, #61732	; 0xf124
   16788:	movt	r1, #1
   1678c:	str	r0, [fp, #-96]	; 0xffffffa0
   16790:	mov	r0, r1
   16794:	bl	10f0c <gettext@plt>
   16798:	ldr	r1, [fp, #8]
   1679c:	ldr	r2, [r1]
   167a0:	ldr	r1, [fp, #8]
   167a4:	ldr	r3, [r1, #4]
   167a8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   167ac:	str	r0, [fp, #-100]	; 0xffffff9c
   167b0:	mov	r0, r1
   167b4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   167b8:	bl	10f30 <fprintf@plt>
   167bc:	b	16bc0 <__assert_fail@plt+0x5bc4>
   167c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167c4:	movw	r1, #61755	; 0xf13b
   167c8:	movt	r1, #1
   167cc:	str	r0, [fp, #-104]	; 0xffffff98
   167d0:	mov	r0, r1
   167d4:	bl	10f0c <gettext@plt>
   167d8:	ldr	r1, [fp, #8]
   167dc:	ldr	r2, [r1]
   167e0:	ldr	r1, [fp, #8]
   167e4:	ldr	r3, [r1, #4]
   167e8:	ldr	r1, [fp, #8]
   167ec:	ldr	r1, [r1, #8]
   167f0:	ldr	ip, [fp, #-104]	; 0xffffff98
   167f4:	str	r0, [fp, #-108]	; 0xffffff94
   167f8:	mov	r0, ip
   167fc:	ldr	lr, [fp, #-108]	; 0xffffff94
   16800:	str	r1, [sp, #112]	; 0x70
   16804:	mov	r1, lr
   16808:	ldr	r4, [sp, #112]	; 0x70
   1680c:	str	r4, [sp]
   16810:	bl	10f30 <fprintf@plt>
   16814:	b	16bc0 <__assert_fail@plt+0x5bc4>
   16818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1681c:	movw	r1, #61783	; 0xf157
   16820:	movt	r1, #1
   16824:	str	r0, [sp, #108]	; 0x6c
   16828:	mov	r0, r1
   1682c:	bl	10f0c <gettext@plt>
   16830:	ldr	r1, [fp, #8]
   16834:	ldr	r2, [r1]
   16838:	ldr	r1, [fp, #8]
   1683c:	ldr	r3, [r1, #4]
   16840:	ldr	r1, [fp, #8]
   16844:	ldr	r1, [r1, #8]
   16848:	ldr	ip, [fp, #8]
   1684c:	ldr	ip, [ip, #12]
   16850:	ldr	lr, [sp, #108]	; 0x6c
   16854:	str	r0, [sp, #104]	; 0x68
   16858:	mov	r0, lr
   1685c:	ldr	r4, [sp, #104]	; 0x68
   16860:	str	r1, [sp, #100]	; 0x64
   16864:	mov	r1, r4
   16868:	ldr	r5, [sp, #100]	; 0x64
   1686c:	str	r5, [sp]
   16870:	str	ip, [sp, #4]
   16874:	bl	10f30 <fprintf@plt>
   16878:	b	16bc0 <__assert_fail@plt+0x5bc4>
   1687c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16880:	movw	r1, #61815	; 0xf177
   16884:	movt	r1, #1
   16888:	str	r0, [sp, #96]	; 0x60
   1688c:	mov	r0, r1
   16890:	bl	10f0c <gettext@plt>
   16894:	ldr	r1, [fp, #8]
   16898:	ldr	r2, [r1]
   1689c:	ldr	r1, [fp, #8]
   168a0:	ldr	r3, [r1, #4]
   168a4:	ldr	r1, [fp, #8]
   168a8:	ldr	r1, [r1, #8]
   168ac:	ldr	ip, [fp, #8]
   168b0:	ldr	ip, [ip, #12]
   168b4:	ldr	lr, [fp, #8]
   168b8:	ldr	lr, [lr, #16]
   168bc:	ldr	r4, [sp, #96]	; 0x60
   168c0:	str	r0, [sp, #92]	; 0x5c
   168c4:	mov	r0, r4
   168c8:	ldr	r5, [sp, #92]	; 0x5c
   168cc:	str	r1, [sp, #88]	; 0x58
   168d0:	mov	r1, r5
   168d4:	ldr	r6, [sp, #88]	; 0x58
   168d8:	str	r6, [sp]
   168dc:	str	ip, [sp, #4]
   168e0:	str	lr, [sp, #8]
   168e4:	bl	10f30 <fprintf@plt>
   168e8:	b	16bc0 <__assert_fail@plt+0x5bc4>
   168ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   168f0:	movw	r1, #61851	; 0xf19b
   168f4:	movt	r1, #1
   168f8:	str	r0, [sp, #84]	; 0x54
   168fc:	mov	r0, r1
   16900:	bl	10f0c <gettext@plt>
   16904:	ldr	r1, [fp, #8]
   16908:	ldr	r2, [r1]
   1690c:	ldr	r1, [fp, #8]
   16910:	ldr	r3, [r1, #4]
   16914:	ldr	r1, [fp, #8]
   16918:	ldr	r1, [r1, #8]
   1691c:	ldr	ip, [fp, #8]
   16920:	ldr	ip, [ip, #12]
   16924:	ldr	lr, [fp, #8]
   16928:	ldr	lr, [lr, #16]
   1692c:	ldr	r4, [fp, #8]
   16930:	ldr	r4, [r4, #20]
   16934:	ldr	r5, [sp, #84]	; 0x54
   16938:	str	r0, [sp, #80]	; 0x50
   1693c:	mov	r0, r5
   16940:	ldr	r6, [sp, #80]	; 0x50
   16944:	str	r1, [sp, #76]	; 0x4c
   16948:	mov	r1, r6
   1694c:	ldr	r7, [sp, #76]	; 0x4c
   16950:	str	r7, [sp]
   16954:	str	ip, [sp, #4]
   16958:	str	lr, [sp, #8]
   1695c:	str	r4, [sp, #12]
   16960:	bl	10f30 <fprintf@plt>
   16964:	b	16bc0 <__assert_fail@plt+0x5bc4>
   16968:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1696c:	movw	r1, #61891	; 0xf1c3
   16970:	movt	r1, #1
   16974:	str	r0, [sp, #72]	; 0x48
   16978:	mov	r0, r1
   1697c:	bl	10f0c <gettext@plt>
   16980:	ldr	r1, [fp, #8]
   16984:	ldr	r2, [r1]
   16988:	ldr	r1, [fp, #8]
   1698c:	ldr	r3, [r1, #4]
   16990:	ldr	r1, [fp, #8]
   16994:	ldr	r1, [r1, #8]
   16998:	ldr	ip, [fp, #8]
   1699c:	ldr	ip, [ip, #12]
   169a0:	ldr	lr, [fp, #8]
   169a4:	ldr	lr, [lr, #16]
   169a8:	ldr	r4, [fp, #8]
   169ac:	ldr	r4, [r4, #20]
   169b0:	ldr	r5, [fp, #8]
   169b4:	ldr	r5, [r5, #24]
   169b8:	ldr	r6, [sp, #72]	; 0x48
   169bc:	str	r0, [sp, #68]	; 0x44
   169c0:	mov	r0, r6
   169c4:	ldr	r7, [sp, #68]	; 0x44
   169c8:	str	r1, [sp, #64]	; 0x40
   169cc:	mov	r1, r7
   169d0:	ldr	r8, [sp, #64]	; 0x40
   169d4:	str	r8, [sp]
   169d8:	str	ip, [sp, #4]
   169dc:	str	lr, [sp, #8]
   169e0:	str	r4, [sp, #12]
   169e4:	str	r5, [sp, #16]
   169e8:	bl	10f30 <fprintf@plt>
   169ec:	b	16bc0 <__assert_fail@plt+0x5bc4>
   169f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   169f4:	movw	r1, #61935	; 0xf1ef
   169f8:	movt	r1, #1
   169fc:	str	r0, [sp, #60]	; 0x3c
   16a00:	mov	r0, r1
   16a04:	bl	10f0c <gettext@plt>
   16a08:	ldr	r1, [fp, #8]
   16a0c:	ldr	r2, [r1]
   16a10:	ldr	r1, [fp, #8]
   16a14:	ldr	r3, [r1, #4]
   16a18:	ldr	r1, [fp, #8]
   16a1c:	ldr	r1, [r1, #8]
   16a20:	ldr	ip, [fp, #8]
   16a24:	ldr	ip, [ip, #12]
   16a28:	ldr	lr, [fp, #8]
   16a2c:	ldr	lr, [lr, #16]
   16a30:	ldr	r4, [fp, #8]
   16a34:	ldr	r4, [r4, #20]
   16a38:	ldr	r5, [fp, #8]
   16a3c:	ldr	r5, [r5, #24]
   16a40:	ldr	r6, [fp, #8]
   16a44:	ldr	r6, [r6, #28]
   16a48:	ldr	r7, [sp, #60]	; 0x3c
   16a4c:	str	r0, [sp, #56]	; 0x38
   16a50:	mov	r0, r7
   16a54:	ldr	r8, [sp, #56]	; 0x38
   16a58:	str	r1, [sp, #52]	; 0x34
   16a5c:	mov	r1, r8
   16a60:	ldr	r9, [sp, #52]	; 0x34
   16a64:	str	r9, [sp]
   16a68:	str	ip, [sp, #4]
   16a6c:	str	lr, [sp, #8]
   16a70:	str	r4, [sp, #12]
   16a74:	str	r5, [sp, #16]
   16a78:	str	r6, [sp, #20]
   16a7c:	bl	10f30 <fprintf@plt>
   16a80:	b	16bc0 <__assert_fail@plt+0x5bc4>
   16a84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a88:	movw	r1, #61983	; 0xf21f
   16a8c:	movt	r1, #1
   16a90:	str	r0, [sp, #48]	; 0x30
   16a94:	mov	r0, r1
   16a98:	bl	10f0c <gettext@plt>
   16a9c:	ldr	r1, [fp, #8]
   16aa0:	ldr	r2, [r1]
   16aa4:	ldr	r1, [fp, #8]
   16aa8:	ldr	r3, [r1, #4]
   16aac:	ldr	r1, [fp, #8]
   16ab0:	ldr	r1, [r1, #8]
   16ab4:	ldr	ip, [fp, #8]
   16ab8:	ldr	ip, [ip, #12]
   16abc:	ldr	lr, [fp, #8]
   16ac0:	ldr	lr, [lr, #16]
   16ac4:	ldr	r4, [fp, #8]
   16ac8:	ldr	r4, [r4, #20]
   16acc:	ldr	r5, [fp, #8]
   16ad0:	ldr	r5, [r5, #24]
   16ad4:	ldr	r6, [fp, #8]
   16ad8:	ldr	r6, [r6, #28]
   16adc:	ldr	r7, [fp, #8]
   16ae0:	ldr	r7, [r7, #32]
   16ae4:	ldr	r8, [sp, #48]	; 0x30
   16ae8:	str	r0, [sp, #44]	; 0x2c
   16aec:	mov	r0, r8
   16af0:	ldr	r9, [sp, #44]	; 0x2c
   16af4:	str	r1, [sp, #40]	; 0x28
   16af8:	mov	r1, r9
   16afc:	ldr	sl, [sp, #40]	; 0x28
   16b00:	str	sl, [sp]
   16b04:	str	ip, [sp, #4]
   16b08:	str	lr, [sp, #8]
   16b0c:	str	r4, [sp, #12]
   16b10:	str	r5, [sp, #16]
   16b14:	str	r6, [sp, #20]
   16b18:	str	r7, [sp, #24]
   16b1c:	bl	10f30 <fprintf@plt>
   16b20:	b	16bc0 <__assert_fail@plt+0x5bc4>
   16b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b28:	movw	r1, #62035	; 0xf253
   16b2c:	movt	r1, #1
   16b30:	str	r0, [sp, #36]	; 0x24
   16b34:	mov	r0, r1
   16b38:	bl	10f0c <gettext@plt>
   16b3c:	ldr	r1, [fp, #8]
   16b40:	ldr	r2, [r1]
   16b44:	ldr	r1, [fp, #8]
   16b48:	ldr	r3, [r1, #4]
   16b4c:	ldr	r1, [fp, #8]
   16b50:	ldr	r1, [r1, #8]
   16b54:	ldr	ip, [fp, #8]
   16b58:	ldr	ip, [ip, #12]
   16b5c:	ldr	lr, [fp, #8]
   16b60:	ldr	lr, [lr, #16]
   16b64:	ldr	r4, [fp, #8]
   16b68:	ldr	r4, [r4, #20]
   16b6c:	ldr	r5, [fp, #8]
   16b70:	ldr	r5, [r5, #24]
   16b74:	ldr	r6, [fp, #8]
   16b78:	ldr	r6, [r6, #28]
   16b7c:	ldr	r7, [fp, #8]
   16b80:	ldr	r7, [r7, #32]
   16b84:	ldr	r8, [sp, #36]	; 0x24
   16b88:	str	r0, [sp, #32]
   16b8c:	mov	r0, r8
   16b90:	ldr	r9, [sp, #32]
   16b94:	str	r1, [sp, #28]
   16b98:	mov	r1, r9
   16b9c:	ldr	sl, [sp, #28]
   16ba0:	str	sl, [sp]
   16ba4:	str	ip, [sp, #4]
   16ba8:	str	lr, [sp, #8]
   16bac:	str	r4, [sp, #12]
   16bb0:	str	r5, [sp, #16]
   16bb4:	str	r6, [sp, #20]
   16bb8:	str	r7, [sp, #24]
   16bbc:	bl	10f30 <fprintf@plt>
   16bc0:	sub	sp, fp, #28
   16bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bc8:	push	{fp, lr}
   16bcc:	mov	fp, sp
   16bd0:	sub	sp, sp, #32
   16bd4:	ldr	ip, [fp, #8]
   16bd8:	str	r0, [fp, #-4]
   16bdc:	str	r1, [fp, #-8]
   16be0:	str	r2, [fp, #-12]
   16be4:	str	r3, [sp, #16]
   16be8:	movw	r0, #0
   16bec:	str	r0, [sp, #12]
   16bf0:	ldr	r0, [fp, #8]
   16bf4:	ldr	r1, [sp, #12]
   16bf8:	add	r0, r0, r1, lsl #2
   16bfc:	ldr	r0, [r0]
   16c00:	movw	r1, #0
   16c04:	cmp	r0, r1
   16c08:	beq	16c20 <__assert_fail@plt+0x5c24>
   16c0c:	b	16c10 <__assert_fail@plt+0x5c14>
   16c10:	ldr	r0, [sp, #12]
   16c14:	add	r0, r0, #1
   16c18:	str	r0, [sp, #12]
   16c1c:	b	16bf0 <__assert_fail@plt+0x5bf4>
   16c20:	ldr	r0, [fp, #-4]
   16c24:	ldr	r1, [fp, #-8]
   16c28:	ldr	r2, [fp, #-12]
   16c2c:	ldr	r3, [sp, #16]
   16c30:	ldr	ip, [fp, #8]
   16c34:	ldr	lr, [sp, #12]
   16c38:	str	ip, [sp]
   16c3c:	str	lr, [sp, #4]
   16c40:	bl	165e0 <__assert_fail@plt+0x55e4>
   16c44:	mov	sp, fp
   16c48:	pop	{fp, pc}
   16c4c:	push	{fp, lr}
   16c50:	mov	fp, sp
   16c54:	sub	sp, sp, #80	; 0x50
   16c58:	ldr	ip, [fp, #8]
   16c5c:	str	ip, [fp, #-4]
   16c60:	str	r0, [fp, #-8]
   16c64:	str	r1, [fp, #-12]
   16c68:	str	r2, [fp, #-16]
   16c6c:	str	r3, [fp, #-20]	; 0xffffffec
   16c70:	movw	r0, #0
   16c74:	str	r0, [fp, #-24]	; 0xffffffe8
   16c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c7c:	cmp	r0, #10
   16c80:	movw	r0, #0
   16c84:	str	r0, [sp, #12]
   16c88:	bcs	16cc0 <__assert_fail@plt+0x5cc4>
   16c8c:	ldr	r0, [fp, #-4]
   16c90:	add	r1, r0, #4
   16c94:	str	r1, [fp, #-4]
   16c98:	ldr	r0, [r0]
   16c9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ca0:	add	r2, sp, #16
   16ca4:	add	r1, r2, r1, lsl #2
   16ca8:	str	r0, [r1]
   16cac:	movw	r1, #0
   16cb0:	cmp	r0, r1
   16cb4:	movw	r0, #0
   16cb8:	movne	r0, #1
   16cbc:	str	r0, [sp, #12]
   16cc0:	ldr	r0, [sp, #12]
   16cc4:	tst	r0, #1
   16cc8:	beq	16ce0 <__assert_fail@plt+0x5ce4>
   16ccc:	b	16cd0 <__assert_fail@plt+0x5cd4>
   16cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd4:	add	r0, r0, #1
   16cd8:	str	r0, [fp, #-24]	; 0xffffffe8
   16cdc:	b	16c78 <__assert_fail@plt+0x5c7c>
   16ce0:	add	r0, sp, #16
   16ce4:	ldr	r1, [fp, #-8]
   16ce8:	ldr	r2, [fp, #-12]
   16cec:	ldr	r3, [fp, #-16]
   16cf0:	ldr	ip, [fp, #-20]	; 0xffffffec
   16cf4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16cf8:	str	r0, [sp, #8]
   16cfc:	mov	r0, r1
   16d00:	mov	r1, r2
   16d04:	mov	r2, r3
   16d08:	mov	r3, ip
   16d0c:	ldr	ip, [sp, #8]
   16d10:	str	ip, [sp]
   16d14:	str	lr, [sp, #4]
   16d18:	bl	165e0 <__assert_fail@plt+0x55e4>
   16d1c:	mov	sp, fp
   16d20:	pop	{fp, pc}
   16d24:	push	{fp, lr}
   16d28:	mov	fp, sp
   16d2c:	sub	sp, sp, #24
   16d30:	str	r0, [fp, #-4]
   16d34:	str	r1, [fp, #-8]
   16d38:	str	r2, [sp, #12]
   16d3c:	str	r3, [sp, #8]
   16d40:	add	r0, fp, #8
   16d44:	str	r0, [sp, #4]
   16d48:	ldr	r0, [fp, #-4]
   16d4c:	ldr	r1, [fp, #-8]
   16d50:	ldr	r2, [sp, #12]
   16d54:	ldr	r3, [sp, #8]
   16d58:	ldr	ip, [sp, #4]
   16d5c:	mov	lr, sp
   16d60:	str	ip, [lr]
   16d64:	bl	16c4c <__assert_fail@plt+0x5c50>
   16d68:	add	r0, sp, #4
   16d6c:	mov	sp, fp
   16d70:	pop	{fp, pc}
   16d74:	push	{fp, lr}
   16d78:	mov	fp, sp
   16d7c:	sub	sp, sp, #16
   16d80:	movw	r0, #324	; 0x144
   16d84:	movt	r0, #3
   16d88:	ldr	r1, [r0]
   16d8c:	movw	r0, #60819	; 0xed93
   16d90:	movt	r0, #1
   16d94:	bl	10db0 <fputs_unlocked@plt>
   16d98:	movw	r1, #62095	; 0xf28f
   16d9c:	movt	r1, #1
   16da0:	str	r0, [fp, #-4]
   16da4:	mov	r0, r1
   16da8:	bl	10f0c <gettext@plt>
   16dac:	movw	r1, #62115	; 0xf2a3
   16db0:	movt	r1, #1
   16db4:	bl	10dd4 <printf@plt>
   16db8:	movw	r1, #62137	; 0xf2b9
   16dbc:	movt	r1, #1
   16dc0:	str	r0, [sp, #8]
   16dc4:	mov	r0, r1
   16dc8:	bl	10f0c <gettext@plt>
   16dcc:	movw	r1, #59952	; 0xea30
   16dd0:	movt	r1, #1
   16dd4:	movw	r2, #60628	; 0xecd4
   16dd8:	movt	r2, #1
   16ddc:	bl	10dd4 <printf@plt>
   16de0:	movw	r1, #62157	; 0xf2cd
   16de4:	movt	r1, #1
   16de8:	str	r0, [sp, #4]
   16dec:	mov	r0, r1
   16df0:	bl	10f0c <gettext@plt>
   16df4:	movw	r1, #62196	; 0xf2f4
   16df8:	movt	r1, #1
   16dfc:	bl	10dd4 <printf@plt>
   16e00:	mov	sp, fp
   16e04:	pop	{fp, pc}
   16e08:	push	{fp, lr}
   16e0c:	mov	fp, sp
   16e10:	sub	sp, sp, #16
   16e14:	str	r0, [fp, #-4]
   16e18:	str	r1, [sp, #8]
   16e1c:	str	r2, [sp, #4]
   16e20:	ldr	r0, [fp, #-4]
   16e24:	ldr	r1, [sp, #8]
   16e28:	ldr	r2, [sp, #4]
   16e2c:	bl	16e38 <__assert_fail@plt+0x5e3c>
   16e30:	mov	sp, fp
   16e34:	pop	{fp, pc}
   16e38:	push	{fp, lr}
   16e3c:	mov	fp, sp
   16e40:	sub	sp, sp, #16
   16e44:	str	r0, [fp, #-4]
   16e48:	str	r1, [sp, #8]
   16e4c:	str	r2, [sp, #4]
   16e50:	ldr	r0, [fp, #-4]
   16e54:	ldr	r1, [sp, #8]
   16e58:	ldr	r2, [sp, #4]
   16e5c:	bl	1c7e4 <__assert_fail@plt+0xb7e8>
   16e60:	str	r0, [sp]
   16e64:	ldr	r0, [sp]
   16e68:	movw	r1, #0
   16e6c:	cmp	r0, r1
   16e70:	bne	16ea0 <__assert_fail@plt+0x5ea4>
   16e74:	ldr	r0, [fp, #-4]
   16e78:	movw	r1, #0
   16e7c:	cmp	r0, r1
   16e80:	beq	16e9c <__assert_fail@plt+0x5ea0>
   16e84:	ldr	r0, [sp, #8]
   16e88:	cmp	r0, #0
   16e8c:	beq	16ea0 <__assert_fail@plt+0x5ea4>
   16e90:	ldr	r0, [sp, #4]
   16e94:	cmp	r0, #0
   16e98:	beq	16ea0 <__assert_fail@plt+0x5ea4>
   16e9c:	bl	19be4 <__assert_fail@plt+0x8be8>
   16ea0:	ldr	r0, [sp]
   16ea4:	mov	sp, fp
   16ea8:	pop	{fp, pc}
   16eac:	push	{fp, lr}
   16eb0:	mov	fp, sp
   16eb4:	sub	sp, sp, #8
   16eb8:	str	r0, [sp, #4]
   16ebc:	ldr	r0, [sp, #4]
   16ec0:	bl	1bf88 <__assert_fail@plt+0xaf8c>
   16ec4:	bl	16ed0 <__assert_fail@plt+0x5ed4>
   16ec8:	mov	sp, fp
   16ecc:	pop	{fp, pc}
   16ed0:	push	{fp, lr}
   16ed4:	mov	fp, sp
   16ed8:	sub	sp, sp, #8
   16edc:	str	r0, [sp, #4]
   16ee0:	ldr	r0, [sp, #4]
   16ee4:	movw	r1, #0
   16ee8:	cmp	r0, r1
   16eec:	bne	16ef4 <__assert_fail@plt+0x5ef8>
   16ef0:	bl	19be4 <__assert_fail@plt+0x8be8>
   16ef4:	ldr	r0, [sp, #4]
   16ef8:	mov	sp, fp
   16efc:	pop	{fp, pc}
   16f00:	push	{fp, lr}
   16f04:	mov	fp, sp
   16f08:	sub	sp, sp, #8
   16f0c:	str	r0, [sp, #4]
   16f10:	ldr	r0, [sp, #4]
   16f14:	bl	1c520 <__assert_fail@plt+0xb524>
   16f18:	bl	16ed0 <__assert_fail@plt+0x5ed4>
   16f1c:	mov	sp, fp
   16f20:	pop	{fp, pc}
   16f24:	push	{fp, lr}
   16f28:	mov	fp, sp
   16f2c:	sub	sp, sp, #8
   16f30:	str	r0, [sp, #4]
   16f34:	ldr	r0, [sp, #4]
   16f38:	bl	16eac <__assert_fail@plt+0x5eb0>
   16f3c:	mov	sp, fp
   16f40:	pop	{fp, pc}
   16f44:	push	{fp, lr}
   16f48:	mov	fp, sp
   16f4c:	sub	sp, sp, #16
   16f50:	str	r0, [fp, #-4]
   16f54:	str	r1, [sp, #8]
   16f58:	ldr	r0, [fp, #-4]
   16f5c:	ldr	r1, [sp, #8]
   16f60:	bl	1bff8 <__assert_fail@plt+0xaffc>
   16f64:	str	r0, [sp, #4]
   16f68:	ldr	r0, [sp, #4]
   16f6c:	movw	r1, #0
   16f70:	cmp	r0, r1
   16f74:	bne	16f98 <__assert_fail@plt+0x5f9c>
   16f78:	ldr	r0, [fp, #-4]
   16f7c:	movw	r1, #0
   16f80:	cmp	r0, r1
   16f84:	beq	16f94 <__assert_fail@plt+0x5f98>
   16f88:	ldr	r0, [sp, #8]
   16f8c:	cmp	r0, #0
   16f90:	beq	16f98 <__assert_fail@plt+0x5f9c>
   16f94:	bl	19be4 <__assert_fail@plt+0x8be8>
   16f98:	ldr	r0, [sp, #4]
   16f9c:	mov	sp, fp
   16fa0:	pop	{fp, pc}
   16fa4:	push	{fp, lr}
   16fa8:	mov	fp, sp
   16fac:	sub	sp, sp, #8
   16fb0:	str	r0, [sp, #4]
   16fb4:	str	r1, [sp]
   16fb8:	ldr	r0, [sp, #4]
   16fbc:	ldr	r1, [sp]
   16fc0:	bl	1c560 <__assert_fail@plt+0xb564>
   16fc4:	bl	16ed0 <__assert_fail@plt+0x5ed4>
   16fc8:	mov	sp, fp
   16fcc:	pop	{fp, pc}
   16fd0:	push	{fp, lr}
   16fd4:	mov	fp, sp
   16fd8:	sub	sp, sp, #16
   16fdc:	str	r0, [fp, #-4]
   16fe0:	str	r1, [sp, #8]
   16fe4:	str	r2, [sp, #4]
   16fe8:	ldr	r0, [fp, #-4]
   16fec:	ldr	r1, [sp, #8]
   16ff0:	ldr	r2, [sp, #4]
   16ff4:	bl	1c658 <__assert_fail@plt+0xb65c>
   16ff8:	bl	16ed0 <__assert_fail@plt+0x5ed4>
   16ffc:	mov	sp, fp
   17000:	pop	{fp, pc}
   17004:	push	{fp, lr}
   17008:	mov	fp, sp
   1700c:	sub	sp, sp, #8
   17010:	str	r0, [sp, #4]
   17014:	str	r1, [sp]
   17018:	ldr	r1, [sp, #4]
   1701c:	ldr	r2, [sp]
   17020:	movw	r0, #0
   17024:	bl	16e38 <__assert_fail@plt+0x5e3c>
   17028:	mov	sp, fp
   1702c:	pop	{fp, pc}
   17030:	push	{fp, lr}
   17034:	mov	fp, sp
   17038:	sub	sp, sp, #8
   1703c:	str	r0, [sp, #4]
   17040:	str	r1, [sp]
   17044:	ldr	r1, [sp, #4]
   17048:	ldr	r2, [sp]
   1704c:	movw	r0, #0
   17050:	bl	16fd0 <__assert_fail@plt+0x5fd4>
   17054:	mov	sp, fp
   17058:	pop	{fp, pc}
   1705c:	push	{fp, lr}
   17060:	mov	fp, sp
   17064:	sub	sp, sp, #8
   17068:	str	r0, [sp, #4]
   1706c:	str	r1, [sp]
   17070:	ldr	r0, [sp, #4]
   17074:	ldr	r1, [sp]
   17078:	movw	r2, #1
   1707c:	bl	17088 <__assert_fail@plt+0x608c>
   17080:	mov	sp, fp
   17084:	pop	{fp, pc}
   17088:	push	{fp, lr}
   1708c:	mov	fp, sp
   17090:	sub	sp, sp, #16
   17094:	str	r0, [fp, #-4]
   17098:	str	r1, [sp, #8]
   1709c:	str	r2, [sp, #4]
   170a0:	ldr	r0, [sp, #8]
   170a4:	ldr	r0, [r0]
   170a8:	str	r0, [sp]
   170ac:	ldr	r0, [fp, #-4]
   170b0:	movw	r1, #0
   170b4:	cmp	r0, r1
   170b8:	bne	17104 <__assert_fail@plt+0x6108>
   170bc:	ldr	r0, [sp]
   170c0:	cmp	r0, #0
   170c4:	bne	17100 <__assert_fail@plt+0x6104>
   170c8:	ldr	r0, [sp, #4]
   170cc:	movw	r1, #64	; 0x40
   170d0:	udiv	r0, r1, r0
   170d4:	str	r0, [sp]
   170d8:	ldr	r0, [sp]
   170dc:	cmp	r0, #0
   170e0:	movw	r0, #0
   170e4:	movne	r0, #1
   170e8:	mvn	r1, #0
   170ec:	eor	r0, r0, r1
   170f0:	and	r0, r0, #1
   170f4:	ldr	r1, [sp]
   170f8:	add	r0, r1, r0
   170fc:	str	r0, [sp]
   17100:	b	17134 <__assert_fail@plt+0x6138>
   17104:	ldr	r0, [sp]
   17108:	ldr	r1, [sp]
   1710c:	lsr	r1, r1, #1
   17110:	add	r1, r1, #1
   17114:	adds	r0, r0, r1
   17118:	mov	r1, #0
   1711c:	adc	r1, r1, #0
   17120:	str	r0, [sp]
   17124:	tst	r1, #1
   17128:	beq	17130 <__assert_fail@plt+0x6134>
   1712c:	bl	19be4 <__assert_fail@plt+0x8be8>
   17130:	b	17134 <__assert_fail@plt+0x6138>
   17134:	ldr	r0, [fp, #-4]
   17138:	ldr	r1, [sp]
   1713c:	ldr	r2, [sp, #4]
   17140:	bl	16e38 <__assert_fail@plt+0x5e3c>
   17144:	str	r0, [fp, #-4]
   17148:	ldr	r0, [sp]
   1714c:	ldr	r1, [sp, #8]
   17150:	str	r0, [r1]
   17154:	ldr	r0, [fp, #-4]
   17158:	mov	sp, fp
   1715c:	pop	{fp, pc}
   17160:	push	{fp, lr}
   17164:	mov	fp, sp
   17168:	sub	sp, sp, #216	; 0xd8
   1716c:	ldr	ip, [fp, #8]
   17170:	str	r0, [fp, #-4]
   17174:	str	r1, [fp, #-8]
   17178:	str	r2, [fp, #-12]
   1717c:	str	r3, [fp, #-16]
   17180:	ldr	r0, [fp, #-8]
   17184:	ldr	r0, [r0]
   17188:	str	r0, [fp, #-20]	; 0xffffffec
   1718c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17190:	ldr	r1, [fp, #-20]	; 0xffffffec
   17194:	asr	r1, r1, #1
   17198:	add	r1, r0, r1
   1719c:	mov	r2, #1
   171a0:	cmp	r1, r0
   171a4:	movwvc	r2, #0
   171a8:	str	r1, [fp, #-24]	; 0xffffffe8
   171ac:	tst	r2, #1
   171b0:	beq	171bc <__assert_fail@plt+0x61c0>
   171b4:	ldr	r0, [pc, #4036]	; 18180 <__assert_fail@plt+0x7184>
   171b8:	str	r0, [fp, #-24]	; 0xffffffe8
   171bc:	ldr	r0, [fp, #-16]
   171c0:	movw	r1, #0
   171c4:	cmp	r1, r0
   171c8:	bgt	171e4 <__assert_fail@plt+0x61e8>
   171cc:	ldr	r0, [fp, #-16]
   171d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171d4:	cmp	r0, r1
   171d8:	bge	171e4 <__assert_fail@plt+0x61e8>
   171dc:	ldr	r0, [fp, #-16]
   171e0:	str	r0, [fp, #-24]	; 0xffffffe8
   171e4:	b	175bc <__assert_fail@plt+0x65c0>
   171e8:	b	171ec <__assert_fail@plt+0x61f0>
   171ec:	ldr	r0, [fp, #8]
   171f0:	cmp	r0, #0
   171f4:	bge	17308 <__assert_fail@plt+0x630c>
   171f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171fc:	cmp	r0, #0
   17200:	bge	1728c <__assert_fail@plt+0x6290>
   17204:	b	17208 <__assert_fail@plt+0x620c>
   17208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1720c:	ldr	r1, [fp, #8]
   17210:	movw	r2, #127	; 0x7f
   17214:	sdiv	r1, r2, r1
   17218:	cmp	r0, r1
   1721c:	blt	173a8 <__assert_fail@plt+0x63ac>
   17220:	b	173c0 <__assert_fail@plt+0x63c4>
   17224:	b	17228 <__assert_fail@plt+0x622c>
   17228:	ldr	r0, [pc, #4084]	; 18224 <__assert_fail@plt+0x7228>
   1722c:	ldr	r1, [fp, #8]
   17230:	cmp	r1, r0
   17234:	blt	1724c <__assert_fail@plt+0x6250>
   17238:	b	17258 <__assert_fail@plt+0x625c>
   1723c:	ldr	r0, [fp, #8]
   17240:	movw	r1, #0
   17244:	cmp	r1, r0
   17248:	bge	17258 <__assert_fail@plt+0x625c>
   1724c:	movw	r0, #0
   17250:	str	r0, [fp, #-36]	; 0xffffffdc
   17254:	b	17270 <__assert_fail@plt+0x6274>
   17258:	ldr	r0, [fp, #8]
   1725c:	movw	r1, #0
   17260:	sub	r0, r1, r0
   17264:	movw	r1, #127	; 0x7f
   17268:	sdiv	r0, r1, r0
   1726c:	str	r0, [fp, #-36]	; 0xffffffdc
   17270:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17278:	mvn	r2, #0
   1727c:	sub	r1, r2, r1
   17280:	cmp	r0, r1
   17284:	ble	173a8 <__assert_fail@plt+0x63ac>
   17288:	b	173c0 <__assert_fail@plt+0x63c4>
   1728c:	b	17290 <__assert_fail@plt+0x6294>
   17290:	b	172ec <__assert_fail@plt+0x62f0>
   17294:	b	172ec <__assert_fail@plt+0x62f0>
   17298:	ldr	r0, [fp, #8]
   1729c:	cmn	r0, #1
   172a0:	bne	172ec <__assert_fail@plt+0x62f0>
   172a4:	b	172a8 <__assert_fail@plt+0x62ac>
   172a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ac:	mvn	r1, #127	; 0x7f
   172b0:	add	r0, r0, r1
   172b4:	movw	r1, #0
   172b8:	cmp	r1, r0
   172bc:	blt	173a8 <__assert_fail@plt+0x63ac>
   172c0:	b	173c0 <__assert_fail@plt+0x63c4>
   172c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c8:	movw	r1, #0
   172cc:	cmp	r1, r0
   172d0:	bge	173c0 <__assert_fail@plt+0x63c4>
   172d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d8:	sub	r0, r0, #1
   172dc:	movw	r1, #127	; 0x7f
   172e0:	cmp	r1, r0
   172e4:	blt	173a8 <__assert_fail@plt+0x63ac>
   172e8:	b	173c0 <__assert_fail@plt+0x63c4>
   172ec:	ldr	r0, [fp, #8]
   172f0:	mvn	r1, #127	; 0x7f
   172f4:	sdiv	r0, r1, r0
   172f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172fc:	cmp	r0, r1
   17300:	blt	173a8 <__assert_fail@plt+0x63ac>
   17304:	b	173c0 <__assert_fail@plt+0x63c4>
   17308:	ldr	r0, [fp, #8]
   1730c:	cmp	r0, #0
   17310:	bne	17318 <__assert_fail@plt+0x631c>
   17314:	b	173c0 <__assert_fail@plt+0x63c4>
   17318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1731c:	cmp	r0, #0
   17320:	bge	17390 <__assert_fail@plt+0x6394>
   17324:	b	17328 <__assert_fail@plt+0x632c>
   17328:	b	17374 <__assert_fail@plt+0x6378>
   1732c:	b	17374 <__assert_fail@plt+0x6378>
   17330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17334:	cmn	r0, #1
   17338:	bne	17374 <__assert_fail@plt+0x6378>
   1733c:	b	17340 <__assert_fail@plt+0x6344>
   17340:	ldr	r0, [fp, #8]
   17344:	mvn	r1, #127	; 0x7f
   17348:	add	r0, r0, r1
   1734c:	movw	r1, #0
   17350:	cmp	r1, r0
   17354:	blt	173a8 <__assert_fail@plt+0x63ac>
   17358:	b	173c0 <__assert_fail@plt+0x63c4>
   1735c:	ldr	r0, [fp, #8]
   17360:	sub	r0, r0, #1
   17364:	movw	r1, #127	; 0x7f
   17368:	cmp	r1, r0
   1736c:	blt	173a8 <__assert_fail@plt+0x63ac>
   17370:	b	173c0 <__assert_fail@plt+0x63c4>
   17374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17378:	mvn	r1, #127	; 0x7f
   1737c:	sdiv	r0, r1, r0
   17380:	ldr	r1, [fp, #8]
   17384:	cmp	r0, r1
   17388:	blt	173a8 <__assert_fail@plt+0x63ac>
   1738c:	b	173c0 <__assert_fail@plt+0x63c4>
   17390:	ldr	r0, [fp, #8]
   17394:	movw	r1, #127	; 0x7f
   17398:	sdiv	r0, r1, r0
   1739c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173a0:	cmp	r0, r1
   173a4:	bge	173c0 <__assert_fail@plt+0x63c4>
   173a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173ac:	ldr	r1, [fp, #8]
   173b0:	mul	r0, r0, r1
   173b4:	sxtb	r0, r0
   173b8:	str	r0, [fp, #-28]	; 0xffffffe4
   173bc:	b	18584 <__assert_fail@plt+0x7588>
   173c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c4:	ldr	r1, [fp, #8]
   173c8:	mul	r0, r0, r1
   173cc:	sxtb	r0, r0
   173d0:	str	r0, [fp, #-28]	; 0xffffffe4
   173d4:	b	18590 <__assert_fail@plt+0x7594>
   173d8:	ldr	r0, [fp, #8]
   173dc:	cmp	r0, #0
   173e0:	bge	174f0 <__assert_fail@plt+0x64f4>
   173e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e8:	cmp	r0, #0
   173ec:	bge	17478 <__assert_fail@plt+0x647c>
   173f0:	b	173f4 <__assert_fail@plt+0x63f8>
   173f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173f8:	ldr	r1, [fp, #8]
   173fc:	movw	r2, #255	; 0xff
   17400:	sdiv	r1, r2, r1
   17404:	cmp	r0, r1
   17408:	blt	1758c <__assert_fail@plt+0x6590>
   1740c:	b	175a4 <__assert_fail@plt+0x65a8>
   17410:	b	17414 <__assert_fail@plt+0x6418>
   17414:	ldr	r0, [pc, #3592]	; 18224 <__assert_fail@plt+0x7228>
   17418:	ldr	r1, [fp, #8]
   1741c:	cmp	r1, r0
   17420:	blt	17438 <__assert_fail@plt+0x643c>
   17424:	b	17444 <__assert_fail@plt+0x6448>
   17428:	ldr	r0, [fp, #8]
   1742c:	movw	r1, #0
   17430:	cmp	r1, r0
   17434:	bge	17444 <__assert_fail@plt+0x6448>
   17438:	movw	r0, #0
   1743c:	str	r0, [fp, #-40]	; 0xffffffd8
   17440:	b	1745c <__assert_fail@plt+0x6460>
   17444:	ldr	r0, [fp, #8]
   17448:	movw	r1, #0
   1744c:	sub	r0, r1, r0
   17450:	movw	r1, #255	; 0xff
   17454:	sdiv	r0, r1, r0
   17458:	str	r0, [fp, #-40]	; 0xffffffd8
   1745c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17464:	mvn	r2, #0
   17468:	sub	r1, r2, r1
   1746c:	cmp	r0, r1
   17470:	ble	1758c <__assert_fail@plt+0x6590>
   17474:	b	175a4 <__assert_fail@plt+0x65a8>
   17478:	b	1747c <__assert_fail@plt+0x6480>
   1747c:	b	174d4 <__assert_fail@plt+0x64d8>
   17480:	b	174d4 <__assert_fail@plt+0x64d8>
   17484:	ldr	r0, [fp, #8]
   17488:	cmn	r0, #1
   1748c:	bne	174d4 <__assert_fail@plt+0x64d8>
   17490:	b	17494 <__assert_fail@plt+0x6498>
   17494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17498:	add	r0, r0, #0
   1749c:	movw	r1, #0
   174a0:	cmp	r1, r0
   174a4:	blt	1758c <__assert_fail@plt+0x6590>
   174a8:	b	175a4 <__assert_fail@plt+0x65a8>
   174ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174b0:	movw	r1, #0
   174b4:	cmp	r1, r0
   174b8:	bge	175a4 <__assert_fail@plt+0x65a8>
   174bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c0:	sub	r0, r0, #1
   174c4:	mvn	r1, #0
   174c8:	cmp	r1, r0
   174cc:	blt	1758c <__assert_fail@plt+0x6590>
   174d0:	b	175a4 <__assert_fail@plt+0x65a8>
   174d4:	ldr	r0, [fp, #8]
   174d8:	movw	r1, #0
   174dc:	sdiv	r0, r1, r0
   174e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174e4:	cmp	r0, r1
   174e8:	blt	1758c <__assert_fail@plt+0x6590>
   174ec:	b	175a4 <__assert_fail@plt+0x65a8>
   174f0:	ldr	r0, [fp, #8]
   174f4:	cmp	r0, #0
   174f8:	bne	17500 <__assert_fail@plt+0x6504>
   174fc:	b	175a4 <__assert_fail@plt+0x65a8>
   17500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17504:	cmp	r0, #0
   17508:	bge	17574 <__assert_fail@plt+0x6578>
   1750c:	b	17510 <__assert_fail@plt+0x6514>
   17510:	b	17558 <__assert_fail@plt+0x655c>
   17514:	b	17558 <__assert_fail@plt+0x655c>
   17518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1751c:	cmn	r0, #1
   17520:	bne	17558 <__assert_fail@plt+0x655c>
   17524:	b	17528 <__assert_fail@plt+0x652c>
   17528:	ldr	r0, [fp, #8]
   1752c:	add	r0, r0, #0
   17530:	movw	r1, #0
   17534:	cmp	r1, r0
   17538:	blt	1758c <__assert_fail@plt+0x6590>
   1753c:	b	175a4 <__assert_fail@plt+0x65a8>
   17540:	ldr	r0, [fp, #8]
   17544:	sub	r0, r0, #1
   17548:	mvn	r1, #0
   1754c:	cmp	r1, r0
   17550:	blt	1758c <__assert_fail@plt+0x6590>
   17554:	b	175a4 <__assert_fail@plt+0x65a8>
   17558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1755c:	movw	r1, #0
   17560:	sdiv	r0, r1, r0
   17564:	ldr	r1, [fp, #8]
   17568:	cmp	r0, r1
   1756c:	blt	1758c <__assert_fail@plt+0x6590>
   17570:	b	175a4 <__assert_fail@plt+0x65a8>
   17574:	ldr	r0, [fp, #8]
   17578:	movw	r1, #255	; 0xff
   1757c:	sdiv	r0, r1, r0
   17580:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17584:	cmp	r0, r1
   17588:	bge	175a4 <__assert_fail@plt+0x65a8>
   1758c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17590:	ldr	r1, [fp, #8]
   17594:	mul	r0, r0, r1
   17598:	and	r0, r0, #255	; 0xff
   1759c:	str	r0, [fp, #-28]	; 0xffffffe4
   175a0:	b	18584 <__assert_fail@plt+0x7588>
   175a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175a8:	ldr	r1, [fp, #8]
   175ac:	mul	r0, r0, r1
   175b0:	and	r0, r0, #255	; 0xff
   175b4:	str	r0, [fp, #-28]	; 0xffffffe4
   175b8:	b	18590 <__assert_fail@plt+0x7594>
   175bc:	b	17994 <__assert_fail@plt+0x6998>
   175c0:	b	175c4 <__assert_fail@plt+0x65c8>
   175c4:	ldr	r0, [fp, #8]
   175c8:	cmp	r0, #0
   175cc:	bge	176e0 <__assert_fail@plt+0x66e4>
   175d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d4:	cmp	r0, #0
   175d8:	bge	17664 <__assert_fail@plt+0x6668>
   175dc:	b	175e0 <__assert_fail@plt+0x65e4>
   175e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175e4:	ldr	r1, [fp, #8]
   175e8:	movw	r2, #32767	; 0x7fff
   175ec:	sdiv	r1, r2, r1
   175f0:	cmp	r0, r1
   175f4:	blt	17780 <__assert_fail@plt+0x6784>
   175f8:	b	17798 <__assert_fail@plt+0x679c>
   175fc:	b	17600 <__assert_fail@plt+0x6604>
   17600:	ldr	r0, [pc, #3100]	; 18224 <__assert_fail@plt+0x7228>
   17604:	ldr	r1, [fp, #8]
   17608:	cmp	r1, r0
   1760c:	blt	17624 <__assert_fail@plt+0x6628>
   17610:	b	17630 <__assert_fail@plt+0x6634>
   17614:	ldr	r0, [fp, #8]
   17618:	movw	r1, #0
   1761c:	cmp	r1, r0
   17620:	bge	17630 <__assert_fail@plt+0x6634>
   17624:	movw	r0, #0
   17628:	str	r0, [fp, #-44]	; 0xffffffd4
   1762c:	b	17648 <__assert_fail@plt+0x664c>
   17630:	ldr	r0, [fp, #8]
   17634:	movw	r1, #0
   17638:	sub	r0, r1, r0
   1763c:	movw	r1, #32767	; 0x7fff
   17640:	sdiv	r0, r1, r0
   17644:	str	r0, [fp, #-44]	; 0xffffffd4
   17648:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1764c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17650:	mvn	r2, #0
   17654:	sub	r1, r2, r1
   17658:	cmp	r0, r1
   1765c:	ble	17780 <__assert_fail@plt+0x6784>
   17660:	b	17798 <__assert_fail@plt+0x679c>
   17664:	b	17668 <__assert_fail@plt+0x666c>
   17668:	b	176c4 <__assert_fail@plt+0x66c8>
   1766c:	b	176c4 <__assert_fail@plt+0x66c8>
   17670:	ldr	r0, [fp, #8]
   17674:	cmn	r0, #1
   17678:	bne	176c4 <__assert_fail@plt+0x66c8>
   1767c:	b	17680 <__assert_fail@plt+0x6684>
   17680:	ldr	r0, [pc, #4068]	; 1866c <__assert_fail@plt+0x7670>
   17684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17688:	add	r0, r1, r0
   1768c:	movw	r1, #0
   17690:	cmp	r1, r0
   17694:	blt	17780 <__assert_fail@plt+0x6784>
   17698:	b	17798 <__assert_fail@plt+0x679c>
   1769c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176a0:	movw	r1, #0
   176a4:	cmp	r1, r0
   176a8:	bge	17798 <__assert_fail@plt+0x679c>
   176ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176b0:	sub	r0, r0, #1
   176b4:	movw	r1, #32767	; 0x7fff
   176b8:	cmp	r1, r0
   176bc:	blt	17780 <__assert_fail@plt+0x6784>
   176c0:	b	17798 <__assert_fail@plt+0x679c>
   176c4:	ldr	r0, [pc, #4000]	; 1866c <__assert_fail@plt+0x7670>
   176c8:	ldr	r1, [fp, #8]
   176cc:	sdiv	r0, r0, r1
   176d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176d4:	cmp	r0, r1
   176d8:	blt	17780 <__assert_fail@plt+0x6784>
   176dc:	b	17798 <__assert_fail@plt+0x679c>
   176e0:	ldr	r0, [fp, #8]
   176e4:	cmp	r0, #0
   176e8:	bne	176f0 <__assert_fail@plt+0x66f4>
   176ec:	b	17798 <__assert_fail@plt+0x679c>
   176f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176f4:	cmp	r0, #0
   176f8:	bge	17768 <__assert_fail@plt+0x676c>
   176fc:	b	17700 <__assert_fail@plt+0x6704>
   17700:	b	1774c <__assert_fail@plt+0x6750>
   17704:	b	1774c <__assert_fail@plt+0x6750>
   17708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1770c:	cmn	r0, #1
   17710:	bne	1774c <__assert_fail@plt+0x6750>
   17714:	b	17718 <__assert_fail@plt+0x671c>
   17718:	ldr	r0, [pc, #3916]	; 1866c <__assert_fail@plt+0x7670>
   1771c:	ldr	r1, [fp, #8]
   17720:	add	r0, r1, r0
   17724:	movw	r1, #0
   17728:	cmp	r1, r0
   1772c:	blt	17780 <__assert_fail@plt+0x6784>
   17730:	b	17798 <__assert_fail@plt+0x679c>
   17734:	ldr	r0, [fp, #8]
   17738:	sub	r0, r0, #1
   1773c:	movw	r1, #32767	; 0x7fff
   17740:	cmp	r1, r0
   17744:	blt	17780 <__assert_fail@plt+0x6784>
   17748:	b	17798 <__assert_fail@plt+0x679c>
   1774c:	ldr	r0, [pc, #3864]	; 1866c <__assert_fail@plt+0x7670>
   17750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17754:	sdiv	r0, r0, r1
   17758:	ldr	r1, [fp, #8]
   1775c:	cmp	r0, r1
   17760:	blt	17780 <__assert_fail@plt+0x6784>
   17764:	b	17798 <__assert_fail@plt+0x679c>
   17768:	ldr	r0, [fp, #8]
   1776c:	movw	r1, #32767	; 0x7fff
   17770:	sdiv	r0, r1, r0
   17774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17778:	cmp	r0, r1
   1777c:	bge	17798 <__assert_fail@plt+0x679c>
   17780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17784:	ldr	r1, [fp, #8]
   17788:	mul	r0, r0, r1
   1778c:	sxth	r0, r0
   17790:	str	r0, [fp, #-28]	; 0xffffffe4
   17794:	b	18584 <__assert_fail@plt+0x7588>
   17798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1779c:	ldr	r1, [fp, #8]
   177a0:	mul	r0, r0, r1
   177a4:	sxth	r0, r0
   177a8:	str	r0, [fp, #-28]	; 0xffffffe4
   177ac:	b	18590 <__assert_fail@plt+0x7594>
   177b0:	ldr	r0, [fp, #8]
   177b4:	cmp	r0, #0
   177b8:	bge	178c8 <__assert_fail@plt+0x68cc>
   177bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177c0:	cmp	r0, #0
   177c4:	bge	17850 <__assert_fail@plt+0x6854>
   177c8:	b	177cc <__assert_fail@plt+0x67d0>
   177cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177d0:	ldr	r1, [fp, #8]
   177d4:	movw	r2, #65535	; 0xffff
   177d8:	sdiv	r1, r2, r1
   177dc:	cmp	r0, r1
   177e0:	blt	17964 <__assert_fail@plt+0x6968>
   177e4:	b	1797c <__assert_fail@plt+0x6980>
   177e8:	b	177ec <__assert_fail@plt+0x67f0>
   177ec:	ldr	r0, [pc, #2608]	; 18224 <__assert_fail@plt+0x7228>
   177f0:	ldr	r1, [fp, #8]
   177f4:	cmp	r1, r0
   177f8:	blt	17810 <__assert_fail@plt+0x6814>
   177fc:	b	1781c <__assert_fail@plt+0x6820>
   17800:	ldr	r0, [fp, #8]
   17804:	movw	r1, #0
   17808:	cmp	r1, r0
   1780c:	bge	1781c <__assert_fail@plt+0x6820>
   17810:	movw	r0, #0
   17814:	str	r0, [fp, #-48]	; 0xffffffd0
   17818:	b	17834 <__assert_fail@plt+0x6838>
   1781c:	ldr	r0, [fp, #8]
   17820:	movw	r1, #0
   17824:	sub	r0, r1, r0
   17828:	movw	r1, #65535	; 0xffff
   1782c:	sdiv	r0, r1, r0
   17830:	str	r0, [fp, #-48]	; 0xffffffd0
   17834:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1783c:	mvn	r2, #0
   17840:	sub	r1, r2, r1
   17844:	cmp	r0, r1
   17848:	ble	17964 <__assert_fail@plt+0x6968>
   1784c:	b	1797c <__assert_fail@plt+0x6980>
   17850:	b	17854 <__assert_fail@plt+0x6858>
   17854:	b	178ac <__assert_fail@plt+0x68b0>
   17858:	b	178ac <__assert_fail@plt+0x68b0>
   1785c:	ldr	r0, [fp, #8]
   17860:	cmn	r0, #1
   17864:	bne	178ac <__assert_fail@plt+0x68b0>
   17868:	b	1786c <__assert_fail@plt+0x6870>
   1786c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17870:	add	r0, r0, #0
   17874:	movw	r1, #0
   17878:	cmp	r1, r0
   1787c:	blt	17964 <__assert_fail@plt+0x6968>
   17880:	b	1797c <__assert_fail@plt+0x6980>
   17884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17888:	movw	r1, #0
   1788c:	cmp	r1, r0
   17890:	bge	1797c <__assert_fail@plt+0x6980>
   17894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17898:	sub	r0, r0, #1
   1789c:	mvn	r1, #0
   178a0:	cmp	r1, r0
   178a4:	blt	17964 <__assert_fail@plt+0x6968>
   178a8:	b	1797c <__assert_fail@plt+0x6980>
   178ac:	ldr	r0, [fp, #8]
   178b0:	movw	r1, #0
   178b4:	sdiv	r0, r1, r0
   178b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178bc:	cmp	r0, r1
   178c0:	blt	17964 <__assert_fail@plt+0x6968>
   178c4:	b	1797c <__assert_fail@plt+0x6980>
   178c8:	ldr	r0, [fp, #8]
   178cc:	cmp	r0, #0
   178d0:	bne	178d8 <__assert_fail@plt+0x68dc>
   178d4:	b	1797c <__assert_fail@plt+0x6980>
   178d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178dc:	cmp	r0, #0
   178e0:	bge	1794c <__assert_fail@plt+0x6950>
   178e4:	b	178e8 <__assert_fail@plt+0x68ec>
   178e8:	b	17930 <__assert_fail@plt+0x6934>
   178ec:	b	17930 <__assert_fail@plt+0x6934>
   178f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178f4:	cmn	r0, #1
   178f8:	bne	17930 <__assert_fail@plt+0x6934>
   178fc:	b	17900 <__assert_fail@plt+0x6904>
   17900:	ldr	r0, [fp, #8]
   17904:	add	r0, r0, #0
   17908:	movw	r1, #0
   1790c:	cmp	r1, r0
   17910:	blt	17964 <__assert_fail@plt+0x6968>
   17914:	b	1797c <__assert_fail@plt+0x6980>
   17918:	ldr	r0, [fp, #8]
   1791c:	sub	r0, r0, #1
   17920:	mvn	r1, #0
   17924:	cmp	r1, r0
   17928:	blt	17964 <__assert_fail@plt+0x6968>
   1792c:	b	1797c <__assert_fail@plt+0x6980>
   17930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17934:	movw	r1, #0
   17938:	sdiv	r0, r1, r0
   1793c:	ldr	r1, [fp, #8]
   17940:	cmp	r0, r1
   17944:	blt	17964 <__assert_fail@plt+0x6968>
   17948:	b	1797c <__assert_fail@plt+0x6980>
   1794c:	ldr	r0, [fp, #8]
   17950:	movw	r1, #65535	; 0xffff
   17954:	sdiv	r0, r1, r0
   17958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1795c:	cmp	r0, r1
   17960:	bge	1797c <__assert_fail@plt+0x6980>
   17964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17968:	ldr	r1, [fp, #8]
   1796c:	mul	r0, r0, r1
   17970:	uxth	r0, r0
   17974:	str	r0, [fp, #-28]	; 0xffffffe4
   17978:	b	18584 <__assert_fail@plt+0x7588>
   1797c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17980:	ldr	r1, [fp, #8]
   17984:	mul	r0, r0, r1
   17988:	uxth	r0, r0
   1798c:	str	r0, [fp, #-28]	; 0xffffffe4
   17990:	b	18590 <__assert_fail@plt+0x7594>
   17994:	b	17998 <__assert_fail@plt+0x699c>
   17998:	b	1799c <__assert_fail@plt+0x69a0>
   1799c:	ldr	r0, [fp, #8]
   179a0:	cmp	r0, #0
   179a4:	bge	17aa8 <__assert_fail@plt+0x6aac>
   179a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179ac:	cmp	r0, #0
   179b0:	bge	17a3c <__assert_fail@plt+0x6a40>
   179b4:	b	179b8 <__assert_fail@plt+0x69bc>
   179b8:	ldr	r0, [pc, #1984]	; 18180 <__assert_fail@plt+0x7184>
   179bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179c0:	ldr	r2, [fp, #8]
   179c4:	sdiv	r0, r0, r2
   179c8:	cmp	r1, r0
   179cc:	blt	17b38 <__assert_fail@plt+0x6b3c>
   179d0:	b	17b4c <__assert_fail@plt+0x6b50>
   179d4:	b	179d8 <__assert_fail@plt+0x69dc>
   179d8:	ldr	r0, [pc, #2116]	; 18224 <__assert_fail@plt+0x7228>
   179dc:	ldr	r1, [fp, #8]
   179e0:	cmp	r1, r0
   179e4:	blt	179fc <__assert_fail@plt+0x6a00>
   179e8:	b	17a08 <__assert_fail@plt+0x6a0c>
   179ec:	ldr	r0, [fp, #8]
   179f0:	movw	r1, #0
   179f4:	cmp	r1, r0
   179f8:	bge	17a08 <__assert_fail@plt+0x6a0c>
   179fc:	movw	r0, #0
   17a00:	str	r0, [fp, #-52]	; 0xffffffcc
   17a04:	b	17a20 <__assert_fail@plt+0x6a24>
   17a08:	ldr	r0, [pc, #1904]	; 18180 <__assert_fail@plt+0x7184>
   17a0c:	ldr	r1, [fp, #8]
   17a10:	movw	r2, #0
   17a14:	sub	r1, r2, r1
   17a18:	sdiv	r0, r0, r1
   17a1c:	str	r0, [fp, #-52]	; 0xffffffcc
   17a20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17a24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a28:	mvn	r2, #0
   17a2c:	sub	r1, r2, r1
   17a30:	cmp	r0, r1
   17a34:	ble	17b38 <__assert_fail@plt+0x6b3c>
   17a38:	b	17b4c <__assert_fail@plt+0x6b50>
   17a3c:	ldr	r0, [fp, #8]
   17a40:	cmn	r0, #1
   17a44:	bne	17a8c <__assert_fail@plt+0x6a90>
   17a48:	b	17a4c <__assert_fail@plt+0x6a50>
   17a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a50:	add	r0, r0, #-2147483648	; 0x80000000
   17a54:	movw	r1, #0
   17a58:	cmp	r1, r0
   17a5c:	blt	17b38 <__assert_fail@plt+0x6b3c>
   17a60:	b	17b4c <__assert_fail@plt+0x6b50>
   17a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a68:	movw	r1, #0
   17a6c:	cmp	r1, r0
   17a70:	bge	17b4c <__assert_fail@plt+0x6b50>
   17a74:	ldr	r0, [pc, #1796]	; 18180 <__assert_fail@plt+0x7184>
   17a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a7c:	sub	r1, r1, #1
   17a80:	cmp	r0, r1
   17a84:	blt	17b38 <__assert_fail@plt+0x6b3c>
   17a88:	b	17b4c <__assert_fail@plt+0x6b50>
   17a8c:	ldr	r0, [pc, #4080]	; 18a84 <__assert_fail@plt+0x7a88>
   17a90:	ldr	r1, [fp, #8]
   17a94:	sdiv	r0, r0, r1
   17a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a9c:	cmp	r0, r1
   17aa0:	blt	17b38 <__assert_fail@plt+0x6b3c>
   17aa4:	b	17b4c <__assert_fail@plt+0x6b50>
   17aa8:	ldr	r0, [fp, #8]
   17aac:	cmp	r0, #0
   17ab0:	bne	17ab8 <__assert_fail@plt+0x6abc>
   17ab4:	b	17b4c <__assert_fail@plt+0x6b50>
   17ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17abc:	cmp	r0, #0
   17ac0:	bge	17b20 <__assert_fail@plt+0x6b24>
   17ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ac8:	cmn	r0, #1
   17acc:	bne	17b04 <__assert_fail@plt+0x6b08>
   17ad0:	b	17ad4 <__assert_fail@plt+0x6ad8>
   17ad4:	ldr	r0, [fp, #8]
   17ad8:	add	r0, r0, #-2147483648	; 0x80000000
   17adc:	movw	r1, #0
   17ae0:	cmp	r1, r0
   17ae4:	blt	17b38 <__assert_fail@plt+0x6b3c>
   17ae8:	b	17b4c <__assert_fail@plt+0x6b50>
   17aec:	ldr	r0, [pc, #1676]	; 18180 <__assert_fail@plt+0x7184>
   17af0:	ldr	r1, [fp, #8]
   17af4:	sub	r1, r1, #1
   17af8:	cmp	r0, r1
   17afc:	blt	17b38 <__assert_fail@plt+0x6b3c>
   17b00:	b	17b4c <__assert_fail@plt+0x6b50>
   17b04:	ldr	r0, [pc, #3960]	; 18a84 <__assert_fail@plt+0x7a88>
   17b08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b0c:	sdiv	r0, r0, r1
   17b10:	ldr	r1, [fp, #8]
   17b14:	cmp	r0, r1
   17b18:	blt	17b38 <__assert_fail@plt+0x6b3c>
   17b1c:	b	17b4c <__assert_fail@plt+0x6b50>
   17b20:	ldr	r0, [pc, #1624]	; 18180 <__assert_fail@plt+0x7184>
   17b24:	ldr	r1, [fp, #8]
   17b28:	sdiv	r0, r0, r1
   17b2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b30:	cmp	r0, r1
   17b34:	bge	17b4c <__assert_fail@plt+0x6b50>
   17b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b3c:	ldr	r1, [fp, #8]
   17b40:	mul	r0, r0, r1
   17b44:	str	r0, [fp, #-28]	; 0xffffffe4
   17b48:	b	18584 <__assert_fail@plt+0x7588>
   17b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b50:	ldr	r1, [fp, #8]
   17b54:	mul	r0, r0, r1
   17b58:	str	r0, [fp, #-28]	; 0xffffffe4
   17b5c:	b	18590 <__assert_fail@plt+0x7594>
   17b60:	ldr	r0, [fp, #8]
   17b64:	cmp	r0, #0
   17b68:	bge	17c78 <__assert_fail@plt+0x6c7c>
   17b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b70:	cmp	r0, #0
   17b74:	bge	17c00 <__assert_fail@plt+0x6c04>
   17b78:	b	17b98 <__assert_fail@plt+0x6b9c>
   17b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b80:	ldr	r1, [fp, #8]
   17b84:	mvn	r2, #0
   17b88:	udiv	r1, r2, r1
   17b8c:	cmp	r0, r1
   17b90:	bcc	17d14 <__assert_fail@plt+0x6d18>
   17b94:	b	17d28 <__assert_fail@plt+0x6d2c>
   17b98:	b	17b9c <__assert_fail@plt+0x6ba0>
   17b9c:	ldr	r0, [pc, #1664]	; 18224 <__assert_fail@plt+0x7228>
   17ba0:	ldr	r1, [fp, #8]
   17ba4:	cmp	r1, r0
   17ba8:	blt	17bc0 <__assert_fail@plt+0x6bc4>
   17bac:	b	17bcc <__assert_fail@plt+0x6bd0>
   17bb0:	ldr	r0, [fp, #8]
   17bb4:	movw	r1, #0
   17bb8:	cmp	r1, r0
   17bbc:	bge	17bcc <__assert_fail@plt+0x6bd0>
   17bc0:	movw	r0, #1
   17bc4:	str	r0, [fp, #-56]	; 0xffffffc8
   17bc8:	b	17be4 <__assert_fail@plt+0x6be8>
   17bcc:	ldr	r0, [fp, #8]
   17bd0:	movw	r1, #0
   17bd4:	sub	r0, r1, r0
   17bd8:	mvn	r1, #0
   17bdc:	udiv	r0, r1, r0
   17be0:	str	r0, [fp, #-56]	; 0xffffffc8
   17be4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17be8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bec:	mvn	r2, #0
   17bf0:	sub	r1, r2, r1
   17bf4:	cmp	r0, r1
   17bf8:	bls	17d14 <__assert_fail@plt+0x6d18>
   17bfc:	b	17d28 <__assert_fail@plt+0x6d2c>
   17c00:	b	17c04 <__assert_fail@plt+0x6c08>
   17c04:	b	17c5c <__assert_fail@plt+0x6c60>
   17c08:	b	17c5c <__assert_fail@plt+0x6c60>
   17c0c:	ldr	r0, [fp, #8]
   17c10:	cmn	r0, #1
   17c14:	bne	17c5c <__assert_fail@plt+0x6c60>
   17c18:	b	17c1c <__assert_fail@plt+0x6c20>
   17c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c20:	add	r0, r0, #0
   17c24:	movw	r1, #0
   17c28:	cmp	r1, r0
   17c2c:	blt	17d14 <__assert_fail@plt+0x6d18>
   17c30:	b	17d28 <__assert_fail@plt+0x6d2c>
   17c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c38:	movw	r1, #0
   17c3c:	cmp	r1, r0
   17c40:	bge	17d28 <__assert_fail@plt+0x6d2c>
   17c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c48:	sub	r0, r0, #1
   17c4c:	mvn	r1, #0
   17c50:	cmp	r1, r0
   17c54:	blt	17d14 <__assert_fail@plt+0x6d18>
   17c58:	b	17d28 <__assert_fail@plt+0x6d2c>
   17c5c:	ldr	r0, [fp, #8]
   17c60:	movw	r1, #0
   17c64:	sdiv	r0, r1, r0
   17c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c6c:	cmp	r0, r1
   17c70:	blt	17d14 <__assert_fail@plt+0x6d18>
   17c74:	b	17d28 <__assert_fail@plt+0x6d2c>
   17c78:	ldr	r0, [fp, #8]
   17c7c:	cmp	r0, #0
   17c80:	bne	17c88 <__assert_fail@plt+0x6c8c>
   17c84:	b	17d28 <__assert_fail@plt+0x6d2c>
   17c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c8c:	cmp	r0, #0
   17c90:	bge	17cfc <__assert_fail@plt+0x6d00>
   17c94:	b	17c98 <__assert_fail@plt+0x6c9c>
   17c98:	b	17ce0 <__assert_fail@plt+0x6ce4>
   17c9c:	b	17ce0 <__assert_fail@plt+0x6ce4>
   17ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ca4:	cmn	r0, #1
   17ca8:	bne	17ce0 <__assert_fail@plt+0x6ce4>
   17cac:	b	17cb0 <__assert_fail@plt+0x6cb4>
   17cb0:	ldr	r0, [fp, #8]
   17cb4:	add	r0, r0, #0
   17cb8:	movw	r1, #0
   17cbc:	cmp	r1, r0
   17cc0:	blt	17d14 <__assert_fail@plt+0x6d18>
   17cc4:	b	17d28 <__assert_fail@plt+0x6d2c>
   17cc8:	ldr	r0, [fp, #8]
   17ccc:	sub	r0, r0, #1
   17cd0:	mvn	r1, #0
   17cd4:	cmp	r1, r0
   17cd8:	blt	17d14 <__assert_fail@plt+0x6d18>
   17cdc:	b	17d28 <__assert_fail@plt+0x6d2c>
   17ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ce4:	movw	r1, #0
   17ce8:	sdiv	r0, r1, r0
   17cec:	ldr	r1, [fp, #8]
   17cf0:	cmp	r0, r1
   17cf4:	blt	17d14 <__assert_fail@plt+0x6d18>
   17cf8:	b	17d28 <__assert_fail@plt+0x6d2c>
   17cfc:	ldr	r0, [fp, #8]
   17d00:	mvn	r1, #0
   17d04:	udiv	r0, r1, r0
   17d08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d0c:	cmp	r0, r1
   17d10:	bcs	17d28 <__assert_fail@plt+0x6d2c>
   17d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d18:	ldr	r1, [fp, #8]
   17d1c:	mul	r0, r0, r1
   17d20:	str	r0, [fp, #-28]	; 0xffffffe4
   17d24:	b	18584 <__assert_fail@plt+0x7588>
   17d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d2c:	ldr	r1, [fp, #8]
   17d30:	mul	r0, r0, r1
   17d34:	str	r0, [fp, #-28]	; 0xffffffe4
   17d38:	b	18590 <__assert_fail@plt+0x7594>
   17d3c:	b	17d40 <__assert_fail@plt+0x6d44>
   17d40:	b	17d44 <__assert_fail@plt+0x6d48>
   17d44:	ldr	r0, [fp, #8]
   17d48:	cmp	r0, #0
   17d4c:	bge	17e50 <__assert_fail@plt+0x6e54>
   17d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d54:	cmp	r0, #0
   17d58:	bge	17de4 <__assert_fail@plt+0x6de8>
   17d5c:	b	17d60 <__assert_fail@plt+0x6d64>
   17d60:	ldr	r0, [pc, #1048]	; 18180 <__assert_fail@plt+0x7184>
   17d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d68:	ldr	r2, [fp, #8]
   17d6c:	sdiv	r0, r0, r2
   17d70:	cmp	r1, r0
   17d74:	blt	17ee0 <__assert_fail@plt+0x6ee4>
   17d78:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17d7c:	b	17d80 <__assert_fail@plt+0x6d84>
   17d80:	ldr	r0, [pc, #1180]	; 18224 <__assert_fail@plt+0x7228>
   17d84:	ldr	r1, [fp, #8]
   17d88:	cmp	r1, r0
   17d8c:	blt	17da4 <__assert_fail@plt+0x6da8>
   17d90:	b	17db0 <__assert_fail@plt+0x6db4>
   17d94:	ldr	r0, [fp, #8]
   17d98:	movw	r1, #0
   17d9c:	cmp	r1, r0
   17da0:	bge	17db0 <__assert_fail@plt+0x6db4>
   17da4:	movw	r0, #0
   17da8:	str	r0, [fp, #-60]	; 0xffffffc4
   17dac:	b	17dc8 <__assert_fail@plt+0x6dcc>
   17db0:	ldr	r0, [pc, #968]	; 18180 <__assert_fail@plt+0x7184>
   17db4:	ldr	r1, [fp, #8]
   17db8:	movw	r2, #0
   17dbc:	sub	r1, r2, r1
   17dc0:	sdiv	r0, r0, r1
   17dc4:	str	r0, [fp, #-60]	; 0xffffffc4
   17dc8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dd0:	mvn	r2, #0
   17dd4:	sub	r1, r2, r1
   17dd8:	cmp	r0, r1
   17ddc:	ble	17ee0 <__assert_fail@plt+0x6ee4>
   17de0:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17de4:	ldr	r0, [fp, #8]
   17de8:	cmn	r0, #1
   17dec:	bne	17e34 <__assert_fail@plt+0x6e38>
   17df0:	b	17df4 <__assert_fail@plt+0x6df8>
   17df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df8:	add	r0, r0, #-2147483648	; 0x80000000
   17dfc:	movw	r1, #0
   17e00:	cmp	r1, r0
   17e04:	blt	17ee0 <__assert_fail@plt+0x6ee4>
   17e08:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e10:	movw	r1, #0
   17e14:	cmp	r1, r0
   17e18:	bge	17ef4 <__assert_fail@plt+0x6ef8>
   17e1c:	ldr	r0, [pc, #860]	; 18180 <__assert_fail@plt+0x7184>
   17e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e24:	sub	r1, r1, #1
   17e28:	cmp	r0, r1
   17e2c:	blt	17ee0 <__assert_fail@plt+0x6ee4>
   17e30:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17e34:	ldr	r0, [pc, #3144]	; 18a84 <__assert_fail@plt+0x7a88>
   17e38:	ldr	r1, [fp, #8]
   17e3c:	sdiv	r0, r0, r1
   17e40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e44:	cmp	r0, r1
   17e48:	blt	17ee0 <__assert_fail@plt+0x6ee4>
   17e4c:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17e50:	ldr	r0, [fp, #8]
   17e54:	cmp	r0, #0
   17e58:	bne	17e60 <__assert_fail@plt+0x6e64>
   17e5c:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e64:	cmp	r0, #0
   17e68:	bge	17ec8 <__assert_fail@plt+0x6ecc>
   17e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e70:	cmn	r0, #1
   17e74:	bne	17eac <__assert_fail@plt+0x6eb0>
   17e78:	b	17e7c <__assert_fail@plt+0x6e80>
   17e7c:	ldr	r0, [fp, #8]
   17e80:	add	r0, r0, #-2147483648	; 0x80000000
   17e84:	movw	r1, #0
   17e88:	cmp	r1, r0
   17e8c:	blt	17ee0 <__assert_fail@plt+0x6ee4>
   17e90:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17e94:	ldr	r0, [pc, #740]	; 18180 <__assert_fail@plt+0x7184>
   17e98:	ldr	r1, [fp, #8]
   17e9c:	sub	r1, r1, #1
   17ea0:	cmp	r0, r1
   17ea4:	blt	17ee0 <__assert_fail@plt+0x6ee4>
   17ea8:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17eac:	ldr	r0, [pc, #3024]	; 18a84 <__assert_fail@plt+0x7a88>
   17eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17eb4:	sdiv	r0, r0, r1
   17eb8:	ldr	r1, [fp, #8]
   17ebc:	cmp	r0, r1
   17ec0:	blt	17ee0 <__assert_fail@plt+0x6ee4>
   17ec4:	b	17ef4 <__assert_fail@plt+0x6ef8>
   17ec8:	ldr	r0, [pc, #688]	; 18180 <__assert_fail@plt+0x7184>
   17ecc:	ldr	r1, [fp, #8]
   17ed0:	sdiv	r0, r0, r1
   17ed4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ed8:	cmp	r0, r1
   17edc:	bge	17ef4 <__assert_fail@plt+0x6ef8>
   17ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ee4:	ldr	r1, [fp, #8]
   17ee8:	mul	r0, r0, r1
   17eec:	str	r0, [fp, #-28]	; 0xffffffe4
   17ef0:	b	18584 <__assert_fail@plt+0x7588>
   17ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef8:	ldr	r1, [fp, #8]
   17efc:	mul	r0, r0, r1
   17f00:	str	r0, [fp, #-28]	; 0xffffffe4
   17f04:	b	18590 <__assert_fail@plt+0x7594>
   17f08:	ldr	r0, [fp, #8]
   17f0c:	cmp	r0, #0
   17f10:	bge	18020 <__assert_fail@plt+0x7024>
   17f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f18:	cmp	r0, #0
   17f1c:	bge	17fa8 <__assert_fail@plt+0x6fac>
   17f20:	b	17f40 <__assert_fail@plt+0x6f44>
   17f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f28:	ldr	r1, [fp, #8]
   17f2c:	mvn	r2, #0
   17f30:	udiv	r1, r2, r1
   17f34:	cmp	r0, r1
   17f38:	bcc	180bc <__assert_fail@plt+0x70c0>
   17f3c:	b	180d0 <__assert_fail@plt+0x70d4>
   17f40:	b	17f44 <__assert_fail@plt+0x6f48>
   17f44:	ldr	r0, [pc, #728]	; 18224 <__assert_fail@plt+0x7228>
   17f48:	ldr	r1, [fp, #8]
   17f4c:	cmp	r1, r0
   17f50:	blt	17f68 <__assert_fail@plt+0x6f6c>
   17f54:	b	17f74 <__assert_fail@plt+0x6f78>
   17f58:	ldr	r0, [fp, #8]
   17f5c:	movw	r1, #0
   17f60:	cmp	r1, r0
   17f64:	bge	17f74 <__assert_fail@plt+0x6f78>
   17f68:	movw	r0, #1
   17f6c:	str	r0, [fp, #-64]	; 0xffffffc0
   17f70:	b	17f8c <__assert_fail@plt+0x6f90>
   17f74:	ldr	r0, [fp, #8]
   17f78:	movw	r1, #0
   17f7c:	sub	r0, r1, r0
   17f80:	mvn	r1, #0
   17f84:	udiv	r0, r1, r0
   17f88:	str	r0, [fp, #-64]	; 0xffffffc0
   17f8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f94:	mvn	r2, #0
   17f98:	sub	r1, r2, r1
   17f9c:	cmp	r0, r1
   17fa0:	bls	180bc <__assert_fail@plt+0x70c0>
   17fa4:	b	180d0 <__assert_fail@plt+0x70d4>
   17fa8:	b	17fac <__assert_fail@plt+0x6fb0>
   17fac:	b	18004 <__assert_fail@plt+0x7008>
   17fb0:	b	18004 <__assert_fail@plt+0x7008>
   17fb4:	ldr	r0, [fp, #8]
   17fb8:	cmn	r0, #1
   17fbc:	bne	18004 <__assert_fail@plt+0x7008>
   17fc0:	b	17fc4 <__assert_fail@plt+0x6fc8>
   17fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fc8:	add	r0, r0, #0
   17fcc:	movw	r1, #0
   17fd0:	cmp	r1, r0
   17fd4:	blt	180bc <__assert_fail@plt+0x70c0>
   17fd8:	b	180d0 <__assert_fail@plt+0x70d4>
   17fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fe0:	movw	r1, #0
   17fe4:	cmp	r1, r0
   17fe8:	bge	180d0 <__assert_fail@plt+0x70d4>
   17fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff0:	sub	r0, r0, #1
   17ff4:	mvn	r1, #0
   17ff8:	cmp	r1, r0
   17ffc:	blt	180bc <__assert_fail@plt+0x70c0>
   18000:	b	180d0 <__assert_fail@plt+0x70d4>
   18004:	ldr	r0, [fp, #8]
   18008:	movw	r1, #0
   1800c:	sdiv	r0, r1, r0
   18010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18014:	cmp	r0, r1
   18018:	blt	180bc <__assert_fail@plt+0x70c0>
   1801c:	b	180d0 <__assert_fail@plt+0x70d4>
   18020:	ldr	r0, [fp, #8]
   18024:	cmp	r0, #0
   18028:	bne	18030 <__assert_fail@plt+0x7034>
   1802c:	b	180d0 <__assert_fail@plt+0x70d4>
   18030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18034:	cmp	r0, #0
   18038:	bge	180a4 <__assert_fail@plt+0x70a8>
   1803c:	b	18040 <__assert_fail@plt+0x7044>
   18040:	b	18088 <__assert_fail@plt+0x708c>
   18044:	b	18088 <__assert_fail@plt+0x708c>
   18048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1804c:	cmn	r0, #1
   18050:	bne	18088 <__assert_fail@plt+0x708c>
   18054:	b	18058 <__assert_fail@plt+0x705c>
   18058:	ldr	r0, [fp, #8]
   1805c:	add	r0, r0, #0
   18060:	movw	r1, #0
   18064:	cmp	r1, r0
   18068:	blt	180bc <__assert_fail@plt+0x70c0>
   1806c:	b	180d0 <__assert_fail@plt+0x70d4>
   18070:	ldr	r0, [fp, #8]
   18074:	sub	r0, r0, #1
   18078:	mvn	r1, #0
   1807c:	cmp	r1, r0
   18080:	blt	180bc <__assert_fail@plt+0x70c0>
   18084:	b	180d0 <__assert_fail@plt+0x70d4>
   18088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1808c:	movw	r1, #0
   18090:	sdiv	r0, r1, r0
   18094:	ldr	r1, [fp, #8]
   18098:	cmp	r0, r1
   1809c:	blt	180bc <__assert_fail@plt+0x70c0>
   180a0:	b	180d0 <__assert_fail@plt+0x70d4>
   180a4:	ldr	r0, [fp, #8]
   180a8:	mvn	r1, #0
   180ac:	udiv	r0, r1, r0
   180b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180b4:	cmp	r0, r1
   180b8:	bcs	180d0 <__assert_fail@plt+0x70d4>
   180bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180c0:	ldr	r1, [fp, #8]
   180c4:	mul	r0, r0, r1
   180c8:	str	r0, [fp, #-28]	; 0xffffffe4
   180cc:	b	18584 <__assert_fail@plt+0x7588>
   180d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d4:	ldr	r1, [fp, #8]
   180d8:	mul	r0, r0, r1
   180dc:	str	r0, [fp, #-28]	; 0xffffffe4
   180e0:	b	18590 <__assert_fail@plt+0x7594>
   180e4:	b	180e8 <__assert_fail@plt+0x70ec>
   180e8:	ldr	r0, [fp, #8]
   180ec:	cmp	r0, #0
   180f0:	bge	18260 <__assert_fail@plt+0x7264>
   180f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f8:	cmp	r0, #0
   180fc:	bge	181d8 <__assert_fail@plt+0x71dc>
   18100:	b	18104 <__assert_fail@plt+0x7108>
   18104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18108:	ldr	r1, [fp, #8]
   1810c:	asr	r3, r1, #31
   18110:	mvn	r2, #0
   18114:	mvn	ip, #-2147483648	; 0x80000000
   18118:	str	r0, [fp, #-68]	; 0xffffffbc
   1811c:	mov	r0, r2
   18120:	str	r1, [fp, #-72]	; 0xffffffb8
   18124:	mov	r1, ip
   18128:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1812c:	bl	1e35c <__assert_fail@plt+0xd360>
   18130:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18134:	subs	r0, r2, r0
   18138:	rscs	r1, r1, r2, asr #31
   1813c:	blt	18328 <__assert_fail@plt+0x732c>
   18140:	b	1833c <__assert_fail@plt+0x7340>
   18144:	b	18148 <__assert_fail@plt+0x714c>
   18148:	ldr	r0, [pc, #212]	; 18224 <__assert_fail@plt+0x7228>
   1814c:	ldr	r1, [fp, #8]
   18150:	cmp	r1, r0
   18154:	blt	1816c <__assert_fail@plt+0x7170>
   18158:	b	18184 <__assert_fail@plt+0x7188>
   1815c:	ldr	r0, [fp, #8]
   18160:	movw	r1, #0
   18164:	cmp	r1, r0
   18168:	bge	18184 <__assert_fail@plt+0x7188>
   1816c:	mov	r0, #0
   18170:	mvn	r1, #0
   18174:	str	r1, [fp, #-76]	; 0xffffffb4
   18178:	str	r0, [fp, #-80]	; 0xffffffb0
   1817c:	b	181b8 <__assert_fail@plt+0x71bc>
   18180:	svcvc	0x00ffffff
   18184:	ldr	r0, [fp, #8]
   18188:	rsb	r0, r0, #0
   1818c:	asr	r3, r0, #31
   18190:	mvn	r1, #0
   18194:	mvn	r2, #-2147483648	; 0x80000000
   18198:	str	r0, [fp, #-84]	; 0xffffffac
   1819c:	mov	r0, r1
   181a0:	mov	r1, r2
   181a4:	ldr	r2, [fp, #-84]	; 0xffffffac
   181a8:	bl	1e35c <__assert_fail@plt+0xd360>
   181ac:	str	r0, [fp, #-76]	; 0xffffffb4
   181b0:	str	r1, [fp, #-80]	; 0xffffffb0
   181b4:	b	181b8 <__assert_fail@plt+0x71bc>
   181b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   181bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   181c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   181c4:	mvn	r2, r2
   181c8:	subs	r1, r2, r1
   181cc:	rscs	r0, r0, r2, asr #31
   181d0:	bge	18328 <__assert_fail@plt+0x732c>
   181d4:	b	1833c <__assert_fail@plt+0x7340>
   181d8:	ldr	r0, [fp, #8]
   181dc:	cmn	r0, #1
   181e0:	bne	18228 <__assert_fail@plt+0x722c>
   181e4:	b	181e8 <__assert_fail@plt+0x71ec>
   181e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181ec:	mov	r1, #-2147483648	; 0x80000000
   181f0:	add	r1, r1, r0, asr #31
   181f4:	rsbs	r0, r0, #0
   181f8:	rscs	r1, r1, #0
   181fc:	blt	18328 <__assert_fail@plt+0x732c>
   18200:	b	1833c <__assert_fail@plt+0x7340>
   18204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18208:	movw	r1, #0
   1820c:	cmp	r1, r0
   18210:	bge	1833c <__assert_fail@plt+0x7340>
   18214:	mov	r0, #0
   18218:	cmp	r0, #0
   1821c:	bne	18328 <__assert_fail@plt+0x732c>
   18220:	b	1833c <__assert_fail@plt+0x7340>
   18224:	andhi	r0, r0, r1
   18228:	ldr	r0, [fp, #8]
   1822c:	asr	r3, r0, #31
   18230:	mov	r1, #0
   18234:	mov	r2, #-2147483648	; 0x80000000
   18238:	str	r0, [fp, #-88]	; 0xffffffa8
   1823c:	mov	r0, r1
   18240:	mov	r1, r2
   18244:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18248:	bl	1e35c <__assert_fail@plt+0xd360>
   1824c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18250:	subs	r0, r0, r2
   18254:	sbcs	r1, r1, r2, asr #31
   18258:	blt	18328 <__assert_fail@plt+0x732c>
   1825c:	b	1833c <__assert_fail@plt+0x7340>
   18260:	ldr	r0, [fp, #8]
   18264:	cmp	r0, #0
   18268:	bne	18270 <__assert_fail@plt+0x7274>
   1826c:	b	1833c <__assert_fail@plt+0x7340>
   18270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18274:	cmp	r0, #0
   18278:	bge	182f0 <__assert_fail@plt+0x72f4>
   1827c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18280:	cmn	r0, #1
   18284:	bne	182b8 <__assert_fail@plt+0x72bc>
   18288:	b	1828c <__assert_fail@plt+0x7290>
   1828c:	ldr	r0, [fp, #8]
   18290:	mov	r1, #-2147483648	; 0x80000000
   18294:	add	r1, r1, r0, asr #31
   18298:	rsbs	r0, r0, #0
   1829c:	rscs	r1, r1, #0
   182a0:	blt	18328 <__assert_fail@plt+0x732c>
   182a4:	b	1833c <__assert_fail@plt+0x7340>
   182a8:	mov	r0, #0
   182ac:	cmp	r0, #0
   182b0:	bne	18328 <__assert_fail@plt+0x732c>
   182b4:	b	1833c <__assert_fail@plt+0x7340>
   182b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182bc:	asr	r3, r0, #31
   182c0:	mov	r1, #0
   182c4:	mov	r2, #-2147483648	; 0x80000000
   182c8:	str	r0, [fp, #-92]	; 0xffffffa4
   182cc:	mov	r0, r1
   182d0:	mov	r1, r2
   182d4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   182d8:	bl	1e35c <__assert_fail@plt+0xd360>
   182dc:	ldr	r2, [fp, #8]
   182e0:	subs	r0, r0, r2
   182e4:	sbcs	r1, r1, r2, asr #31
   182e8:	blt	18328 <__assert_fail@plt+0x732c>
   182ec:	b	1833c <__assert_fail@plt+0x7340>
   182f0:	ldr	r0, [fp, #8]
   182f4:	asr	r3, r0, #31
   182f8:	mvn	r1, #0
   182fc:	mvn	r2, #-2147483648	; 0x80000000
   18300:	str	r0, [fp, #-96]	; 0xffffffa0
   18304:	mov	r0, r1
   18308:	mov	r1, r2
   1830c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18310:	bl	1e35c <__assert_fail@plt+0xd360>
   18314:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18318:	subs	r0, r0, r2
   1831c:	sbcs	r1, r1, r2, asr #31
   18320:	bge	1833c <__assert_fail@plt+0x7340>
   18324:	b	18328 <__assert_fail@plt+0x732c>
   18328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1832c:	ldr	r1, [fp, #8]
   18330:	mul	r0, r0, r1
   18334:	str	r0, [fp, #-28]	; 0xffffffe4
   18338:	b	18584 <__assert_fail@plt+0x7588>
   1833c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18340:	ldr	r1, [fp, #8]
   18344:	mul	r0, r0, r1
   18348:	str	r0, [fp, #-28]	; 0xffffffe4
   1834c:	b	18590 <__assert_fail@plt+0x7594>
   18350:	ldr	r0, [fp, #8]
   18354:	cmp	r0, #0
   18358:	bge	184a8 <__assert_fail@plt+0x74ac>
   1835c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18360:	cmp	r0, #0
   18364:	bge	18430 <__assert_fail@plt+0x7434>
   18368:	b	183a8 <__assert_fail@plt+0x73ac>
   1836c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18370:	ldr	r1, [fp, #8]
   18374:	asr	r3, r1, #31
   18378:	mvn	r2, #0
   1837c:	str	r0, [fp, #-100]	; 0xffffff9c
   18380:	mov	r0, r2
   18384:	str	r1, [fp, #-104]	; 0xffffff98
   18388:	mov	r1, r2
   1838c:	ldr	r2, [fp, #-104]	; 0xffffff98
   18390:	bl	1e430 <__assert_fail@plt+0xd434>
   18394:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18398:	subs	r0, r2, r0
   1839c:	rscs	r1, r1, r2, asr #31
   183a0:	bcc	1855c <__assert_fail@plt+0x7560>
   183a4:	b	18570 <__assert_fail@plt+0x7574>
   183a8:	b	183ac <__assert_fail@plt+0x73b0>
   183ac:	ldr	r0, [pc, #-400]	; 18224 <__assert_fail@plt+0x7228>
   183b0:	ldr	r1, [fp, #8]
   183b4:	cmp	r1, r0
   183b8:	blt	183d0 <__assert_fail@plt+0x73d4>
   183bc:	b	183e4 <__assert_fail@plt+0x73e8>
   183c0:	ldr	r0, [fp, #8]
   183c4:	movw	r1, #0
   183c8:	cmp	r1, r0
   183cc:	bge	183e4 <__assert_fail@plt+0x73e8>
   183d0:	mov	r0, #1
   183d4:	mvn	r1, #0
   183d8:	str	r1, [sp, #108]	; 0x6c
   183dc:	str	r0, [sp, #104]	; 0x68
   183e0:	b	18410 <__assert_fail@plt+0x7414>
   183e4:	ldr	r0, [fp, #8]
   183e8:	rsb	r0, r0, #0
   183ec:	asr	r3, r0, #31
   183f0:	mvn	r1, #0
   183f4:	str	r0, [sp, #100]	; 0x64
   183f8:	mov	r0, r1
   183fc:	ldr	r2, [sp, #100]	; 0x64
   18400:	bl	1e430 <__assert_fail@plt+0xd434>
   18404:	str	r0, [sp, #108]	; 0x6c
   18408:	str	r1, [sp, #104]	; 0x68
   1840c:	b	18410 <__assert_fail@plt+0x7414>
   18410:	ldr	r0, [sp, #104]	; 0x68
   18414:	ldr	r1, [sp, #108]	; 0x6c
   18418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1841c:	mvn	r2, r2
   18420:	subs	r1, r2, r1
   18424:	rscs	r0, r0, r2, asr #31
   18428:	bcs	1855c <__assert_fail@plt+0x7560>
   1842c:	b	18570 <__assert_fail@plt+0x7574>
   18430:	b	18434 <__assert_fail@plt+0x7438>
   18434:	b	1848c <__assert_fail@plt+0x7490>
   18438:	b	1848c <__assert_fail@plt+0x7490>
   1843c:	ldr	r0, [fp, #8]
   18440:	cmn	r0, #1
   18444:	bne	1848c <__assert_fail@plt+0x7490>
   18448:	b	1844c <__assert_fail@plt+0x7450>
   1844c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18450:	add	r0, r0, #0
   18454:	movw	r1, #0
   18458:	cmp	r1, r0
   1845c:	blt	1855c <__assert_fail@plt+0x7560>
   18460:	b	18570 <__assert_fail@plt+0x7574>
   18464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18468:	movw	r1, #0
   1846c:	cmp	r1, r0
   18470:	bge	18570 <__assert_fail@plt+0x7574>
   18474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18478:	sub	r0, r0, #1
   1847c:	mvn	r1, #0
   18480:	cmp	r1, r0
   18484:	blt	1855c <__assert_fail@plt+0x7560>
   18488:	b	18570 <__assert_fail@plt+0x7574>
   1848c:	ldr	r0, [fp, #8]
   18490:	movw	r1, #0
   18494:	sdiv	r0, r1, r0
   18498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1849c:	cmp	r0, r1
   184a0:	blt	1855c <__assert_fail@plt+0x7560>
   184a4:	b	18570 <__assert_fail@plt+0x7574>
   184a8:	ldr	r0, [fp, #8]
   184ac:	cmp	r0, #0
   184b0:	bne	184b8 <__assert_fail@plt+0x74bc>
   184b4:	b	18570 <__assert_fail@plt+0x7574>
   184b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184bc:	cmp	r0, #0
   184c0:	bge	1852c <__assert_fail@plt+0x7530>
   184c4:	b	184c8 <__assert_fail@plt+0x74cc>
   184c8:	b	18510 <__assert_fail@plt+0x7514>
   184cc:	b	18510 <__assert_fail@plt+0x7514>
   184d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184d4:	cmn	r0, #1
   184d8:	bne	18510 <__assert_fail@plt+0x7514>
   184dc:	b	184e0 <__assert_fail@plt+0x74e4>
   184e0:	ldr	r0, [fp, #8]
   184e4:	add	r0, r0, #0
   184e8:	movw	r1, #0
   184ec:	cmp	r1, r0
   184f0:	blt	1855c <__assert_fail@plt+0x7560>
   184f4:	b	18570 <__assert_fail@plt+0x7574>
   184f8:	ldr	r0, [fp, #8]
   184fc:	sub	r0, r0, #1
   18500:	mvn	r1, #0
   18504:	cmp	r1, r0
   18508:	blt	1855c <__assert_fail@plt+0x7560>
   1850c:	b	18570 <__assert_fail@plt+0x7574>
   18510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18514:	movw	r1, #0
   18518:	sdiv	r0, r1, r0
   1851c:	ldr	r1, [fp, #8]
   18520:	cmp	r0, r1
   18524:	blt	1855c <__assert_fail@plt+0x7560>
   18528:	b	18570 <__assert_fail@plt+0x7574>
   1852c:	ldr	r0, [fp, #8]
   18530:	asr	r3, r0, #31
   18534:	mvn	r1, #0
   18538:	str	r0, [sp, #96]	; 0x60
   1853c:	mov	r0, r1
   18540:	ldr	r2, [sp, #96]	; 0x60
   18544:	bl	1e430 <__assert_fail@plt+0xd434>
   18548:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1854c:	subs	r0, r0, r2
   18550:	sbcs	r1, r1, r2, asr #31
   18554:	bcs	18570 <__assert_fail@plt+0x7574>
   18558:	b	1855c <__assert_fail@plt+0x7560>
   1855c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18560:	ldr	r1, [fp, #8]
   18564:	mul	r0, r0, r1
   18568:	str	r0, [fp, #-28]	; 0xffffffe4
   1856c:	b	18584 <__assert_fail@plt+0x7588>
   18570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18574:	ldr	r1, [fp, #8]
   18578:	mul	r0, r0, r1
   1857c:	str	r0, [fp, #-28]	; 0xffffffe4
   18580:	b	18590 <__assert_fail@plt+0x7594>
   18584:	ldr	r0, [pc, #-1036]	; 18180 <__assert_fail@plt+0x7184>
   18588:	str	r0, [sp, #92]	; 0x5c
   1858c:	b	185b0 <__assert_fail@plt+0x75b4>
   18590:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18594:	cmp	r0, #64	; 0x40
   18598:	movw	r0, #0
   1859c:	movlt	r0, #1
   185a0:	tst	r0, #1
   185a4:	movw	r0, #64	; 0x40
   185a8:	moveq	r0, #0
   185ac:	str	r0, [sp, #92]	; 0x5c
   185b0:	ldr	r0, [sp, #92]	; 0x5c
   185b4:	str	r0, [fp, #-32]	; 0xffffffe0
   185b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185bc:	cmp	r0, #0
   185c0:	beq	185f0 <__assert_fail@plt+0x75f4>
   185c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185c8:	ldr	r1, [fp, #8]
   185cc:	sdiv	r0, r0, r1
   185d0:	str	r0, [fp, #-24]	; 0xffffffe8
   185d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185d8:	mov	r1, r0
   185dc:	ldr	r2, [fp, #8]
   185e0:	sdiv	r3, r0, r2
   185e4:	mls	r0, r3, r2, r0
   185e8:	sub	r0, r1, r0
   185ec:	str	r0, [fp, #-28]	; 0xffffffe4
   185f0:	ldr	r0, [fp, #-4]
   185f4:	movw	r1, #0
   185f8:	cmp	r0, r1
   185fc:	bne	1860c <__assert_fail@plt+0x7610>
   18600:	ldr	r0, [fp, #-8]
   18604:	movw	r1, #0
   18608:	str	r1, [r0]
   1860c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18610:	ldr	r1, [fp, #-20]	; 0xffffffec
   18614:	sub	r0, r0, r1
   18618:	ldr	r1, [fp, #-12]
   1861c:	cmp	r0, r1
   18620:	bge	19a0c <__assert_fail@plt+0x8a10>
   18624:	ldr	r0, [fp, #-20]	; 0xffffffec
   18628:	ldr	r1, [fp, #-12]
   1862c:	add	r1, r0, r1
   18630:	mov	r2, #1
   18634:	cmp	r1, r0
   18638:	movwvc	r2, #0
   1863c:	str	r1, [fp, #-24]	; 0xffffffe8
   18640:	tst	r2, #1
   18644:	bne	19a08 <__assert_fail@plt+0x8a0c>
   18648:	ldr	r0, [fp, #-16]
   1864c:	movw	r1, #0
   18650:	cmp	r1, r0
   18654:	bgt	18668 <__assert_fail@plt+0x766c>
   18658:	ldr	r0, [fp, #-16]
   1865c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18660:	cmp	r0, r1
   18664:	blt	19a08 <__assert_fail@plt+0x8a0c>
   18668:	b	18a44 <__assert_fail@plt+0x7a48>
   1866c:			; <UNDEFINED> instruction: 0xffff8000
   18670:	b	18674 <__assert_fail@plt+0x7678>
   18674:	ldr	r0, [fp, #8]
   18678:	cmp	r0, #0
   1867c:	bge	18790 <__assert_fail@plt+0x7794>
   18680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18684:	cmp	r0, #0
   18688:	bge	18714 <__assert_fail@plt+0x7718>
   1868c:	b	18690 <__assert_fail@plt+0x7694>
   18690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18694:	ldr	r1, [fp, #8]
   18698:	movw	r2, #127	; 0x7f
   1869c:	sdiv	r1, r2, r1
   186a0:	cmp	r0, r1
   186a4:	blt	18830 <__assert_fail@plt+0x7834>
   186a8:	b	18848 <__assert_fail@plt+0x784c>
   186ac:	b	186b0 <__assert_fail@plt+0x76b4>
   186b0:	ldr	r0, [pc, #-1172]	; 18224 <__assert_fail@plt+0x7228>
   186b4:	ldr	r1, [fp, #8]
   186b8:	cmp	r1, r0
   186bc:	blt	186d4 <__assert_fail@plt+0x76d8>
   186c0:	b	186e0 <__assert_fail@plt+0x76e4>
   186c4:	ldr	r0, [fp, #8]
   186c8:	movw	r1, #0
   186cc:	cmp	r1, r0
   186d0:	bge	186e0 <__assert_fail@plt+0x76e4>
   186d4:	movw	r0, #0
   186d8:	str	r0, [sp, #88]	; 0x58
   186dc:	b	186f8 <__assert_fail@plt+0x76fc>
   186e0:	ldr	r0, [fp, #8]
   186e4:	movw	r1, #0
   186e8:	sub	r0, r1, r0
   186ec:	movw	r1, #127	; 0x7f
   186f0:	sdiv	r0, r1, r0
   186f4:	str	r0, [sp, #88]	; 0x58
   186f8:	ldr	r0, [sp, #88]	; 0x58
   186fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18700:	mvn	r2, #0
   18704:	sub	r1, r2, r1
   18708:	cmp	r0, r1
   1870c:	ble	18830 <__assert_fail@plt+0x7834>
   18710:	b	18848 <__assert_fail@plt+0x784c>
   18714:	b	18718 <__assert_fail@plt+0x771c>
   18718:	b	18774 <__assert_fail@plt+0x7778>
   1871c:	b	18774 <__assert_fail@plt+0x7778>
   18720:	ldr	r0, [fp, #8]
   18724:	cmn	r0, #1
   18728:	bne	18774 <__assert_fail@plt+0x7778>
   1872c:	b	18730 <__assert_fail@plt+0x7734>
   18730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18734:	mvn	r1, #127	; 0x7f
   18738:	add	r0, r0, r1
   1873c:	movw	r1, #0
   18740:	cmp	r1, r0
   18744:	blt	18830 <__assert_fail@plt+0x7834>
   18748:	b	18848 <__assert_fail@plt+0x784c>
   1874c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18750:	movw	r1, #0
   18754:	cmp	r1, r0
   18758:	bge	18848 <__assert_fail@plt+0x784c>
   1875c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18760:	sub	r0, r0, #1
   18764:	movw	r1, #127	; 0x7f
   18768:	cmp	r1, r0
   1876c:	blt	18830 <__assert_fail@plt+0x7834>
   18770:	b	18848 <__assert_fail@plt+0x784c>
   18774:	ldr	r0, [fp, #8]
   18778:	mvn	r1, #127	; 0x7f
   1877c:	sdiv	r0, r1, r0
   18780:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18784:	cmp	r0, r1
   18788:	blt	18830 <__assert_fail@plt+0x7834>
   1878c:	b	18848 <__assert_fail@plt+0x784c>
   18790:	ldr	r0, [fp, #8]
   18794:	cmp	r0, #0
   18798:	bne	187a0 <__assert_fail@plt+0x77a4>
   1879c:	b	18848 <__assert_fail@plt+0x784c>
   187a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187a4:	cmp	r0, #0
   187a8:	bge	18818 <__assert_fail@plt+0x781c>
   187ac:	b	187b0 <__assert_fail@plt+0x77b4>
   187b0:	b	187fc <__assert_fail@plt+0x7800>
   187b4:	b	187fc <__assert_fail@plt+0x7800>
   187b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187bc:	cmn	r0, #1
   187c0:	bne	187fc <__assert_fail@plt+0x7800>
   187c4:	b	187c8 <__assert_fail@plt+0x77cc>
   187c8:	ldr	r0, [fp, #8]
   187cc:	mvn	r1, #127	; 0x7f
   187d0:	add	r0, r0, r1
   187d4:	movw	r1, #0
   187d8:	cmp	r1, r0
   187dc:	blt	18830 <__assert_fail@plt+0x7834>
   187e0:	b	18848 <__assert_fail@plt+0x784c>
   187e4:	ldr	r0, [fp, #8]
   187e8:	sub	r0, r0, #1
   187ec:	movw	r1, #127	; 0x7f
   187f0:	cmp	r1, r0
   187f4:	blt	18830 <__assert_fail@plt+0x7834>
   187f8:	b	18848 <__assert_fail@plt+0x784c>
   187fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18800:	mvn	r1, #127	; 0x7f
   18804:	sdiv	r0, r1, r0
   18808:	ldr	r1, [fp, #8]
   1880c:	cmp	r0, r1
   18810:	blt	18830 <__assert_fail@plt+0x7834>
   18814:	b	18848 <__assert_fail@plt+0x784c>
   18818:	ldr	r0, [fp, #8]
   1881c:	movw	r1, #127	; 0x7f
   18820:	sdiv	r0, r1, r0
   18824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18828:	cmp	r0, r1
   1882c:	bge	18848 <__assert_fail@plt+0x784c>
   18830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18834:	ldr	r1, [fp, #8]
   18838:	mul	r0, r0, r1
   1883c:	sxtb	r0, r0
   18840:	str	r0, [fp, #-28]	; 0xffffffe4
   18844:	b	19a08 <__assert_fail@plt+0x8a0c>
   18848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1884c:	ldr	r1, [fp, #8]
   18850:	mul	r0, r0, r1
   18854:	sxtb	r0, r0
   18858:	str	r0, [fp, #-28]	; 0xffffffe4
   1885c:	b	19a0c <__assert_fail@plt+0x8a10>
   18860:	ldr	r0, [fp, #8]
   18864:	cmp	r0, #0
   18868:	bge	18978 <__assert_fail@plt+0x797c>
   1886c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18870:	cmp	r0, #0
   18874:	bge	18900 <__assert_fail@plt+0x7904>
   18878:	b	1887c <__assert_fail@plt+0x7880>
   1887c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18880:	ldr	r1, [fp, #8]
   18884:	movw	r2, #255	; 0xff
   18888:	sdiv	r1, r2, r1
   1888c:	cmp	r0, r1
   18890:	blt	18a14 <__assert_fail@plt+0x7a18>
   18894:	b	18a2c <__assert_fail@plt+0x7a30>
   18898:	b	1889c <__assert_fail@plt+0x78a0>
   1889c:	ldr	r0, [pc, #-1664]	; 18224 <__assert_fail@plt+0x7228>
   188a0:	ldr	r1, [fp, #8]
   188a4:	cmp	r1, r0
   188a8:	blt	188c0 <__assert_fail@plt+0x78c4>
   188ac:	b	188cc <__assert_fail@plt+0x78d0>
   188b0:	ldr	r0, [fp, #8]
   188b4:	movw	r1, #0
   188b8:	cmp	r1, r0
   188bc:	bge	188cc <__assert_fail@plt+0x78d0>
   188c0:	movw	r0, #0
   188c4:	str	r0, [sp, #84]	; 0x54
   188c8:	b	188e4 <__assert_fail@plt+0x78e8>
   188cc:	ldr	r0, [fp, #8]
   188d0:	movw	r1, #0
   188d4:	sub	r0, r1, r0
   188d8:	movw	r1, #255	; 0xff
   188dc:	sdiv	r0, r1, r0
   188e0:	str	r0, [sp, #84]	; 0x54
   188e4:	ldr	r0, [sp, #84]	; 0x54
   188e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188ec:	mvn	r2, #0
   188f0:	sub	r1, r2, r1
   188f4:	cmp	r0, r1
   188f8:	ble	18a14 <__assert_fail@plt+0x7a18>
   188fc:	b	18a2c <__assert_fail@plt+0x7a30>
   18900:	b	18904 <__assert_fail@plt+0x7908>
   18904:	b	1895c <__assert_fail@plt+0x7960>
   18908:	b	1895c <__assert_fail@plt+0x7960>
   1890c:	ldr	r0, [fp, #8]
   18910:	cmn	r0, #1
   18914:	bne	1895c <__assert_fail@plt+0x7960>
   18918:	b	1891c <__assert_fail@plt+0x7920>
   1891c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18920:	add	r0, r0, #0
   18924:	movw	r1, #0
   18928:	cmp	r1, r0
   1892c:	blt	18a14 <__assert_fail@plt+0x7a18>
   18930:	b	18a2c <__assert_fail@plt+0x7a30>
   18934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18938:	movw	r1, #0
   1893c:	cmp	r1, r0
   18940:	bge	18a2c <__assert_fail@plt+0x7a30>
   18944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18948:	sub	r0, r0, #1
   1894c:	mvn	r1, #0
   18950:	cmp	r1, r0
   18954:	blt	18a14 <__assert_fail@plt+0x7a18>
   18958:	b	18a2c <__assert_fail@plt+0x7a30>
   1895c:	ldr	r0, [fp, #8]
   18960:	movw	r1, #0
   18964:	sdiv	r0, r1, r0
   18968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1896c:	cmp	r0, r1
   18970:	blt	18a14 <__assert_fail@plt+0x7a18>
   18974:	b	18a2c <__assert_fail@plt+0x7a30>
   18978:	ldr	r0, [fp, #8]
   1897c:	cmp	r0, #0
   18980:	bne	18988 <__assert_fail@plt+0x798c>
   18984:	b	18a2c <__assert_fail@plt+0x7a30>
   18988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1898c:	cmp	r0, #0
   18990:	bge	189fc <__assert_fail@plt+0x7a00>
   18994:	b	18998 <__assert_fail@plt+0x799c>
   18998:	b	189e0 <__assert_fail@plt+0x79e4>
   1899c:	b	189e0 <__assert_fail@plt+0x79e4>
   189a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a4:	cmn	r0, #1
   189a8:	bne	189e0 <__assert_fail@plt+0x79e4>
   189ac:	b	189b0 <__assert_fail@plt+0x79b4>
   189b0:	ldr	r0, [fp, #8]
   189b4:	add	r0, r0, #0
   189b8:	movw	r1, #0
   189bc:	cmp	r1, r0
   189c0:	blt	18a14 <__assert_fail@plt+0x7a18>
   189c4:	b	18a2c <__assert_fail@plt+0x7a30>
   189c8:	ldr	r0, [fp, #8]
   189cc:	sub	r0, r0, #1
   189d0:	mvn	r1, #0
   189d4:	cmp	r1, r0
   189d8:	blt	18a14 <__assert_fail@plt+0x7a18>
   189dc:	b	18a2c <__assert_fail@plt+0x7a30>
   189e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189e4:	movw	r1, #0
   189e8:	sdiv	r0, r1, r0
   189ec:	ldr	r1, [fp, #8]
   189f0:	cmp	r0, r1
   189f4:	blt	18a14 <__assert_fail@plt+0x7a18>
   189f8:	b	18a2c <__assert_fail@plt+0x7a30>
   189fc:	ldr	r0, [fp, #8]
   18a00:	movw	r1, #255	; 0xff
   18a04:	sdiv	r0, r1, r0
   18a08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a0c:	cmp	r0, r1
   18a10:	bge	18a2c <__assert_fail@plt+0x7a30>
   18a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a18:	ldr	r1, [fp, #8]
   18a1c:	mul	r0, r0, r1
   18a20:	and	r0, r0, #255	; 0xff
   18a24:	str	r0, [fp, #-28]	; 0xffffffe4
   18a28:	b	19a08 <__assert_fail@plt+0x8a0c>
   18a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a30:	ldr	r1, [fp, #8]
   18a34:	mul	r0, r0, r1
   18a38:	and	r0, r0, #255	; 0xff
   18a3c:	str	r0, [fp, #-28]	; 0xffffffe4
   18a40:	b	19a0c <__assert_fail@plt+0x8a10>
   18a44:	b	18e20 <__assert_fail@plt+0x7e24>
   18a48:	b	18a4c <__assert_fail@plt+0x7a50>
   18a4c:	ldr	r0, [fp, #8]
   18a50:	cmp	r0, #0
   18a54:	bge	18b6c <__assert_fail@plt+0x7b70>
   18a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a5c:	cmp	r0, #0
   18a60:	bge	18af0 <__assert_fail@plt+0x7af4>
   18a64:	b	18a68 <__assert_fail@plt+0x7a6c>
   18a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a6c:	ldr	r1, [fp, #8]
   18a70:	movw	r2, #32767	; 0x7fff
   18a74:	sdiv	r1, r2, r1
   18a78:	cmp	r0, r1
   18a7c:	blt	18c0c <__assert_fail@plt+0x7c10>
   18a80:	b	18c24 <__assert_fail@plt+0x7c28>
   18a84:	andhi	r0, r0, r0
   18a88:	b	18a8c <__assert_fail@plt+0x7a90>
   18a8c:	ldr	r0, [pc, #4004]	; 19a38 <__assert_fail@plt+0x8a3c>
   18a90:	ldr	r1, [fp, #8]
   18a94:	cmp	r1, r0
   18a98:	blt	18ab0 <__assert_fail@plt+0x7ab4>
   18a9c:	b	18abc <__assert_fail@plt+0x7ac0>
   18aa0:	ldr	r0, [fp, #8]
   18aa4:	movw	r1, #0
   18aa8:	cmp	r1, r0
   18aac:	bge	18abc <__assert_fail@plt+0x7ac0>
   18ab0:	movw	r0, #0
   18ab4:	str	r0, [sp, #80]	; 0x50
   18ab8:	b	18ad4 <__assert_fail@plt+0x7ad8>
   18abc:	ldr	r0, [fp, #8]
   18ac0:	movw	r1, #0
   18ac4:	sub	r0, r1, r0
   18ac8:	movw	r1, #32767	; 0x7fff
   18acc:	sdiv	r0, r1, r0
   18ad0:	str	r0, [sp, #80]	; 0x50
   18ad4:	ldr	r0, [sp, #80]	; 0x50
   18ad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18adc:	mvn	r2, #0
   18ae0:	sub	r1, r2, r1
   18ae4:	cmp	r0, r1
   18ae8:	ble	18c0c <__assert_fail@plt+0x7c10>
   18aec:	b	18c24 <__assert_fail@plt+0x7c28>
   18af0:	b	18af4 <__assert_fail@plt+0x7af8>
   18af4:	b	18b50 <__assert_fail@plt+0x7b54>
   18af8:	b	18b50 <__assert_fail@plt+0x7b54>
   18afc:	ldr	r0, [fp, #8]
   18b00:	cmn	r0, #1
   18b04:	bne	18b50 <__assert_fail@plt+0x7b54>
   18b08:	b	18b0c <__assert_fail@plt+0x7b10>
   18b0c:	ldr	r0, [pc, #3884]	; 19a40 <__assert_fail@plt+0x8a44>
   18b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b14:	add	r0, r1, r0
   18b18:	movw	r1, #0
   18b1c:	cmp	r1, r0
   18b20:	blt	18c0c <__assert_fail@plt+0x7c10>
   18b24:	b	18c24 <__assert_fail@plt+0x7c28>
   18b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b2c:	movw	r1, #0
   18b30:	cmp	r1, r0
   18b34:	bge	18c24 <__assert_fail@plt+0x7c28>
   18b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b3c:	sub	r0, r0, #1
   18b40:	movw	r1, #32767	; 0x7fff
   18b44:	cmp	r1, r0
   18b48:	blt	18c0c <__assert_fail@plt+0x7c10>
   18b4c:	b	18c24 <__assert_fail@plt+0x7c28>
   18b50:	ldr	r0, [pc, #3816]	; 19a40 <__assert_fail@plt+0x8a44>
   18b54:	ldr	r1, [fp, #8]
   18b58:	sdiv	r0, r0, r1
   18b5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b60:	cmp	r0, r1
   18b64:	blt	18c0c <__assert_fail@plt+0x7c10>
   18b68:	b	18c24 <__assert_fail@plt+0x7c28>
   18b6c:	ldr	r0, [fp, #8]
   18b70:	cmp	r0, #0
   18b74:	bne	18b7c <__assert_fail@plt+0x7b80>
   18b78:	b	18c24 <__assert_fail@plt+0x7c28>
   18b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b80:	cmp	r0, #0
   18b84:	bge	18bf4 <__assert_fail@plt+0x7bf8>
   18b88:	b	18b8c <__assert_fail@plt+0x7b90>
   18b8c:	b	18bd8 <__assert_fail@plt+0x7bdc>
   18b90:	b	18bd8 <__assert_fail@plt+0x7bdc>
   18b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b98:	cmn	r0, #1
   18b9c:	bne	18bd8 <__assert_fail@plt+0x7bdc>
   18ba0:	b	18ba4 <__assert_fail@plt+0x7ba8>
   18ba4:	ldr	r0, [pc, #3732]	; 19a40 <__assert_fail@plt+0x8a44>
   18ba8:	ldr	r1, [fp, #8]
   18bac:	add	r0, r1, r0
   18bb0:	movw	r1, #0
   18bb4:	cmp	r1, r0
   18bb8:	blt	18c0c <__assert_fail@plt+0x7c10>
   18bbc:	b	18c24 <__assert_fail@plt+0x7c28>
   18bc0:	ldr	r0, [fp, #8]
   18bc4:	sub	r0, r0, #1
   18bc8:	movw	r1, #32767	; 0x7fff
   18bcc:	cmp	r1, r0
   18bd0:	blt	18c0c <__assert_fail@plt+0x7c10>
   18bd4:	b	18c24 <__assert_fail@plt+0x7c28>
   18bd8:	ldr	r0, [pc, #3680]	; 19a40 <__assert_fail@plt+0x8a44>
   18bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18be0:	sdiv	r0, r0, r1
   18be4:	ldr	r1, [fp, #8]
   18be8:	cmp	r0, r1
   18bec:	blt	18c0c <__assert_fail@plt+0x7c10>
   18bf0:	b	18c24 <__assert_fail@plt+0x7c28>
   18bf4:	ldr	r0, [fp, #8]
   18bf8:	movw	r1, #32767	; 0x7fff
   18bfc:	sdiv	r0, r1, r0
   18c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c04:	cmp	r0, r1
   18c08:	bge	18c24 <__assert_fail@plt+0x7c28>
   18c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c10:	ldr	r1, [fp, #8]
   18c14:	mul	r0, r0, r1
   18c18:	sxth	r0, r0
   18c1c:	str	r0, [fp, #-28]	; 0xffffffe4
   18c20:	b	19a08 <__assert_fail@plt+0x8a0c>
   18c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c28:	ldr	r1, [fp, #8]
   18c2c:	mul	r0, r0, r1
   18c30:	sxth	r0, r0
   18c34:	str	r0, [fp, #-28]	; 0xffffffe4
   18c38:	b	19a0c <__assert_fail@plt+0x8a10>
   18c3c:	ldr	r0, [fp, #8]
   18c40:	cmp	r0, #0
   18c44:	bge	18d54 <__assert_fail@plt+0x7d58>
   18c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c4c:	cmp	r0, #0
   18c50:	bge	18cdc <__assert_fail@plt+0x7ce0>
   18c54:	b	18c58 <__assert_fail@plt+0x7c5c>
   18c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c5c:	ldr	r1, [fp, #8]
   18c60:	movw	r2, #65535	; 0xffff
   18c64:	sdiv	r1, r2, r1
   18c68:	cmp	r0, r1
   18c6c:	blt	18df0 <__assert_fail@plt+0x7df4>
   18c70:	b	18e08 <__assert_fail@plt+0x7e0c>
   18c74:	b	18c78 <__assert_fail@plt+0x7c7c>
   18c78:	ldr	r0, [pc, #3512]	; 19a38 <__assert_fail@plt+0x8a3c>
   18c7c:	ldr	r1, [fp, #8]
   18c80:	cmp	r1, r0
   18c84:	blt	18c9c <__assert_fail@plt+0x7ca0>
   18c88:	b	18ca8 <__assert_fail@plt+0x7cac>
   18c8c:	ldr	r0, [fp, #8]
   18c90:	movw	r1, #0
   18c94:	cmp	r1, r0
   18c98:	bge	18ca8 <__assert_fail@plt+0x7cac>
   18c9c:	movw	r0, #0
   18ca0:	str	r0, [sp, #76]	; 0x4c
   18ca4:	b	18cc0 <__assert_fail@plt+0x7cc4>
   18ca8:	ldr	r0, [fp, #8]
   18cac:	movw	r1, #0
   18cb0:	sub	r0, r1, r0
   18cb4:	movw	r1, #65535	; 0xffff
   18cb8:	sdiv	r0, r1, r0
   18cbc:	str	r0, [sp, #76]	; 0x4c
   18cc0:	ldr	r0, [sp, #76]	; 0x4c
   18cc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cc8:	mvn	r2, #0
   18ccc:	sub	r1, r2, r1
   18cd0:	cmp	r0, r1
   18cd4:	ble	18df0 <__assert_fail@plt+0x7df4>
   18cd8:	b	18e08 <__assert_fail@plt+0x7e0c>
   18cdc:	b	18ce0 <__assert_fail@plt+0x7ce4>
   18ce0:	b	18d38 <__assert_fail@plt+0x7d3c>
   18ce4:	b	18d38 <__assert_fail@plt+0x7d3c>
   18ce8:	ldr	r0, [fp, #8]
   18cec:	cmn	r0, #1
   18cf0:	bne	18d38 <__assert_fail@plt+0x7d3c>
   18cf4:	b	18cf8 <__assert_fail@plt+0x7cfc>
   18cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cfc:	add	r0, r0, #0
   18d00:	movw	r1, #0
   18d04:	cmp	r1, r0
   18d08:	blt	18df0 <__assert_fail@plt+0x7df4>
   18d0c:	b	18e08 <__assert_fail@plt+0x7e0c>
   18d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d14:	movw	r1, #0
   18d18:	cmp	r1, r0
   18d1c:	bge	18e08 <__assert_fail@plt+0x7e0c>
   18d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d24:	sub	r0, r0, #1
   18d28:	mvn	r1, #0
   18d2c:	cmp	r1, r0
   18d30:	blt	18df0 <__assert_fail@plt+0x7df4>
   18d34:	b	18e08 <__assert_fail@plt+0x7e0c>
   18d38:	ldr	r0, [fp, #8]
   18d3c:	movw	r1, #0
   18d40:	sdiv	r0, r1, r0
   18d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d48:	cmp	r0, r1
   18d4c:	blt	18df0 <__assert_fail@plt+0x7df4>
   18d50:	b	18e08 <__assert_fail@plt+0x7e0c>
   18d54:	ldr	r0, [fp, #8]
   18d58:	cmp	r0, #0
   18d5c:	bne	18d64 <__assert_fail@plt+0x7d68>
   18d60:	b	18e08 <__assert_fail@plt+0x7e0c>
   18d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d68:	cmp	r0, #0
   18d6c:	bge	18dd8 <__assert_fail@plt+0x7ddc>
   18d70:	b	18d74 <__assert_fail@plt+0x7d78>
   18d74:	b	18dbc <__assert_fail@plt+0x7dc0>
   18d78:	b	18dbc <__assert_fail@plt+0x7dc0>
   18d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d80:	cmn	r0, #1
   18d84:	bne	18dbc <__assert_fail@plt+0x7dc0>
   18d88:	b	18d8c <__assert_fail@plt+0x7d90>
   18d8c:	ldr	r0, [fp, #8]
   18d90:	add	r0, r0, #0
   18d94:	movw	r1, #0
   18d98:	cmp	r1, r0
   18d9c:	blt	18df0 <__assert_fail@plt+0x7df4>
   18da0:	b	18e08 <__assert_fail@plt+0x7e0c>
   18da4:	ldr	r0, [fp, #8]
   18da8:	sub	r0, r0, #1
   18dac:	mvn	r1, #0
   18db0:	cmp	r1, r0
   18db4:	blt	18df0 <__assert_fail@plt+0x7df4>
   18db8:	b	18e08 <__assert_fail@plt+0x7e0c>
   18dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dc0:	movw	r1, #0
   18dc4:	sdiv	r0, r1, r0
   18dc8:	ldr	r1, [fp, #8]
   18dcc:	cmp	r0, r1
   18dd0:	blt	18df0 <__assert_fail@plt+0x7df4>
   18dd4:	b	18e08 <__assert_fail@plt+0x7e0c>
   18dd8:	ldr	r0, [fp, #8]
   18ddc:	movw	r1, #65535	; 0xffff
   18de0:	sdiv	r0, r1, r0
   18de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18de8:	cmp	r0, r1
   18dec:	bge	18e08 <__assert_fail@plt+0x7e0c>
   18df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df4:	ldr	r1, [fp, #8]
   18df8:	mul	r0, r0, r1
   18dfc:	uxth	r0, r0
   18e00:	str	r0, [fp, #-28]	; 0xffffffe4
   18e04:	b	19a08 <__assert_fail@plt+0x8a0c>
   18e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e0c:	ldr	r1, [fp, #8]
   18e10:	mul	r0, r0, r1
   18e14:	uxth	r0, r0
   18e18:	str	r0, [fp, #-28]	; 0xffffffe4
   18e1c:	b	19a0c <__assert_fail@plt+0x8a10>
   18e20:	b	18e24 <__assert_fail@plt+0x7e28>
   18e24:	b	18e28 <__assert_fail@plt+0x7e2c>
   18e28:	ldr	r0, [fp, #8]
   18e2c:	cmp	r0, #0
   18e30:	bge	18f34 <__assert_fail@plt+0x7f38>
   18e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e38:	cmp	r0, #0
   18e3c:	bge	18ec8 <__assert_fail@plt+0x7ecc>
   18e40:	b	18e44 <__assert_fail@plt+0x7e48>
   18e44:	ldr	r0, [pc, #3048]	; 19a34 <__assert_fail@plt+0x8a38>
   18e48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e4c:	ldr	r2, [fp, #8]
   18e50:	sdiv	r0, r0, r2
   18e54:	cmp	r1, r0
   18e58:	blt	18fc4 <__assert_fail@plt+0x7fc8>
   18e5c:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18e60:	b	18e64 <__assert_fail@plt+0x7e68>
   18e64:	ldr	r0, [pc, #3020]	; 19a38 <__assert_fail@plt+0x8a3c>
   18e68:	ldr	r1, [fp, #8]
   18e6c:	cmp	r1, r0
   18e70:	blt	18e88 <__assert_fail@plt+0x7e8c>
   18e74:	b	18e94 <__assert_fail@plt+0x7e98>
   18e78:	ldr	r0, [fp, #8]
   18e7c:	movw	r1, #0
   18e80:	cmp	r1, r0
   18e84:	bge	18e94 <__assert_fail@plt+0x7e98>
   18e88:	movw	r0, #0
   18e8c:	str	r0, [sp, #72]	; 0x48
   18e90:	b	18eac <__assert_fail@plt+0x7eb0>
   18e94:	ldr	r0, [pc, #2968]	; 19a34 <__assert_fail@plt+0x8a38>
   18e98:	ldr	r1, [fp, #8]
   18e9c:	movw	r2, #0
   18ea0:	sub	r1, r2, r1
   18ea4:	sdiv	r0, r0, r1
   18ea8:	str	r0, [sp, #72]	; 0x48
   18eac:	ldr	r0, [sp, #72]	; 0x48
   18eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18eb4:	mvn	r2, #0
   18eb8:	sub	r1, r2, r1
   18ebc:	cmp	r0, r1
   18ec0:	ble	18fc4 <__assert_fail@plt+0x7fc8>
   18ec4:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18ec8:	ldr	r0, [fp, #8]
   18ecc:	cmn	r0, #1
   18ed0:	bne	18f18 <__assert_fail@plt+0x7f1c>
   18ed4:	b	18ed8 <__assert_fail@plt+0x7edc>
   18ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18edc:	add	r0, r0, #-2147483648	; 0x80000000
   18ee0:	movw	r1, #0
   18ee4:	cmp	r1, r0
   18ee8:	blt	18fc4 <__assert_fail@plt+0x7fc8>
   18eec:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef4:	movw	r1, #0
   18ef8:	cmp	r1, r0
   18efc:	bge	18fd8 <__assert_fail@plt+0x7fdc>
   18f00:	ldr	r0, [pc, #2860]	; 19a34 <__assert_fail@plt+0x8a38>
   18f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f08:	sub	r1, r1, #1
   18f0c:	cmp	r0, r1
   18f10:	blt	18fc4 <__assert_fail@plt+0x7fc8>
   18f14:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18f18:	ldr	r0, [pc, #2844]	; 19a3c <__assert_fail@plt+0x8a40>
   18f1c:	ldr	r1, [fp, #8]
   18f20:	sdiv	r0, r0, r1
   18f24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f28:	cmp	r0, r1
   18f2c:	blt	18fc4 <__assert_fail@plt+0x7fc8>
   18f30:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18f34:	ldr	r0, [fp, #8]
   18f38:	cmp	r0, #0
   18f3c:	bne	18f44 <__assert_fail@plt+0x7f48>
   18f40:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f48:	cmp	r0, #0
   18f4c:	bge	18fac <__assert_fail@plt+0x7fb0>
   18f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f54:	cmn	r0, #1
   18f58:	bne	18f90 <__assert_fail@plt+0x7f94>
   18f5c:	b	18f60 <__assert_fail@plt+0x7f64>
   18f60:	ldr	r0, [fp, #8]
   18f64:	add	r0, r0, #-2147483648	; 0x80000000
   18f68:	movw	r1, #0
   18f6c:	cmp	r1, r0
   18f70:	blt	18fc4 <__assert_fail@plt+0x7fc8>
   18f74:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18f78:	ldr	r0, [pc, #2740]	; 19a34 <__assert_fail@plt+0x8a38>
   18f7c:	ldr	r1, [fp, #8]
   18f80:	sub	r1, r1, #1
   18f84:	cmp	r0, r1
   18f88:	blt	18fc4 <__assert_fail@plt+0x7fc8>
   18f8c:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18f90:	ldr	r0, [pc, #2724]	; 19a3c <__assert_fail@plt+0x8a40>
   18f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f98:	sdiv	r0, r0, r1
   18f9c:	ldr	r1, [fp, #8]
   18fa0:	cmp	r0, r1
   18fa4:	blt	18fc4 <__assert_fail@plt+0x7fc8>
   18fa8:	b	18fd8 <__assert_fail@plt+0x7fdc>
   18fac:	ldr	r0, [pc, #2688]	; 19a34 <__assert_fail@plt+0x8a38>
   18fb0:	ldr	r1, [fp, #8]
   18fb4:	sdiv	r0, r0, r1
   18fb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fbc:	cmp	r0, r1
   18fc0:	bge	18fd8 <__assert_fail@plt+0x7fdc>
   18fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc8:	ldr	r1, [fp, #8]
   18fcc:	mul	r0, r0, r1
   18fd0:	str	r0, [fp, #-28]	; 0xffffffe4
   18fd4:	b	19a08 <__assert_fail@plt+0x8a0c>
   18fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fdc:	ldr	r1, [fp, #8]
   18fe0:	mul	r0, r0, r1
   18fe4:	str	r0, [fp, #-28]	; 0xffffffe4
   18fe8:	b	19a0c <__assert_fail@plt+0x8a10>
   18fec:	ldr	r0, [fp, #8]
   18ff0:	cmp	r0, #0
   18ff4:	bge	19104 <__assert_fail@plt+0x8108>
   18ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ffc:	cmp	r0, #0
   19000:	bge	1908c <__assert_fail@plt+0x8090>
   19004:	b	19024 <__assert_fail@plt+0x8028>
   19008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1900c:	ldr	r1, [fp, #8]
   19010:	mvn	r2, #0
   19014:	udiv	r1, r2, r1
   19018:	cmp	r0, r1
   1901c:	bcc	191a0 <__assert_fail@plt+0x81a4>
   19020:	b	191b4 <__assert_fail@plt+0x81b8>
   19024:	b	19028 <__assert_fail@plt+0x802c>
   19028:	ldr	r0, [pc, #2568]	; 19a38 <__assert_fail@plt+0x8a3c>
   1902c:	ldr	r1, [fp, #8]
   19030:	cmp	r1, r0
   19034:	blt	1904c <__assert_fail@plt+0x8050>
   19038:	b	19058 <__assert_fail@plt+0x805c>
   1903c:	ldr	r0, [fp, #8]
   19040:	movw	r1, #0
   19044:	cmp	r1, r0
   19048:	bge	19058 <__assert_fail@plt+0x805c>
   1904c:	movw	r0, #1
   19050:	str	r0, [sp, #68]	; 0x44
   19054:	b	19070 <__assert_fail@plt+0x8074>
   19058:	ldr	r0, [fp, #8]
   1905c:	movw	r1, #0
   19060:	sub	r0, r1, r0
   19064:	mvn	r1, #0
   19068:	udiv	r0, r1, r0
   1906c:	str	r0, [sp, #68]	; 0x44
   19070:	ldr	r0, [sp, #68]	; 0x44
   19074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19078:	mvn	r2, #0
   1907c:	sub	r1, r2, r1
   19080:	cmp	r0, r1
   19084:	bls	191a0 <__assert_fail@plt+0x81a4>
   19088:	b	191b4 <__assert_fail@plt+0x81b8>
   1908c:	b	19090 <__assert_fail@plt+0x8094>
   19090:	b	190e8 <__assert_fail@plt+0x80ec>
   19094:	b	190e8 <__assert_fail@plt+0x80ec>
   19098:	ldr	r0, [fp, #8]
   1909c:	cmn	r0, #1
   190a0:	bne	190e8 <__assert_fail@plt+0x80ec>
   190a4:	b	190a8 <__assert_fail@plt+0x80ac>
   190a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190ac:	add	r0, r0, #0
   190b0:	movw	r1, #0
   190b4:	cmp	r1, r0
   190b8:	blt	191a0 <__assert_fail@plt+0x81a4>
   190bc:	b	191b4 <__assert_fail@plt+0x81b8>
   190c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c4:	movw	r1, #0
   190c8:	cmp	r1, r0
   190cc:	bge	191b4 <__assert_fail@plt+0x81b8>
   190d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190d4:	sub	r0, r0, #1
   190d8:	mvn	r1, #0
   190dc:	cmp	r1, r0
   190e0:	blt	191a0 <__assert_fail@plt+0x81a4>
   190e4:	b	191b4 <__assert_fail@plt+0x81b8>
   190e8:	ldr	r0, [fp, #8]
   190ec:	movw	r1, #0
   190f0:	sdiv	r0, r1, r0
   190f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190f8:	cmp	r0, r1
   190fc:	blt	191a0 <__assert_fail@plt+0x81a4>
   19100:	b	191b4 <__assert_fail@plt+0x81b8>
   19104:	ldr	r0, [fp, #8]
   19108:	cmp	r0, #0
   1910c:	bne	19114 <__assert_fail@plt+0x8118>
   19110:	b	191b4 <__assert_fail@plt+0x81b8>
   19114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19118:	cmp	r0, #0
   1911c:	bge	19188 <__assert_fail@plt+0x818c>
   19120:	b	19124 <__assert_fail@plt+0x8128>
   19124:	b	1916c <__assert_fail@plt+0x8170>
   19128:	b	1916c <__assert_fail@plt+0x8170>
   1912c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19130:	cmn	r0, #1
   19134:	bne	1916c <__assert_fail@plt+0x8170>
   19138:	b	1913c <__assert_fail@plt+0x8140>
   1913c:	ldr	r0, [fp, #8]
   19140:	add	r0, r0, #0
   19144:	movw	r1, #0
   19148:	cmp	r1, r0
   1914c:	blt	191a0 <__assert_fail@plt+0x81a4>
   19150:	b	191b4 <__assert_fail@plt+0x81b8>
   19154:	ldr	r0, [fp, #8]
   19158:	sub	r0, r0, #1
   1915c:	mvn	r1, #0
   19160:	cmp	r1, r0
   19164:	blt	191a0 <__assert_fail@plt+0x81a4>
   19168:	b	191b4 <__assert_fail@plt+0x81b8>
   1916c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19170:	movw	r1, #0
   19174:	sdiv	r0, r1, r0
   19178:	ldr	r1, [fp, #8]
   1917c:	cmp	r0, r1
   19180:	blt	191a0 <__assert_fail@plt+0x81a4>
   19184:	b	191b4 <__assert_fail@plt+0x81b8>
   19188:	ldr	r0, [fp, #8]
   1918c:	mvn	r1, #0
   19190:	udiv	r0, r1, r0
   19194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19198:	cmp	r0, r1
   1919c:	bcs	191b4 <__assert_fail@plt+0x81b8>
   191a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a4:	ldr	r1, [fp, #8]
   191a8:	mul	r0, r0, r1
   191ac:	str	r0, [fp, #-28]	; 0xffffffe4
   191b0:	b	19a08 <__assert_fail@plt+0x8a0c>
   191b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191b8:	ldr	r1, [fp, #8]
   191bc:	mul	r0, r0, r1
   191c0:	str	r0, [fp, #-28]	; 0xffffffe4
   191c4:	b	19a0c <__assert_fail@plt+0x8a10>
   191c8:	b	191cc <__assert_fail@plt+0x81d0>
   191cc:	b	191d0 <__assert_fail@plt+0x81d4>
   191d0:	ldr	r0, [fp, #8]
   191d4:	cmp	r0, #0
   191d8:	bge	192dc <__assert_fail@plt+0x82e0>
   191dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191e0:	cmp	r0, #0
   191e4:	bge	19270 <__assert_fail@plt+0x8274>
   191e8:	b	191ec <__assert_fail@plt+0x81f0>
   191ec:	ldr	r0, [pc, #2112]	; 19a34 <__assert_fail@plt+0x8a38>
   191f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191f4:	ldr	r2, [fp, #8]
   191f8:	sdiv	r0, r0, r2
   191fc:	cmp	r1, r0
   19200:	blt	1936c <__assert_fail@plt+0x8370>
   19204:	b	19380 <__assert_fail@plt+0x8384>
   19208:	b	1920c <__assert_fail@plt+0x8210>
   1920c:	ldr	r0, [pc, #2084]	; 19a38 <__assert_fail@plt+0x8a3c>
   19210:	ldr	r1, [fp, #8]
   19214:	cmp	r1, r0
   19218:	blt	19230 <__assert_fail@plt+0x8234>
   1921c:	b	1923c <__assert_fail@plt+0x8240>
   19220:	ldr	r0, [fp, #8]
   19224:	movw	r1, #0
   19228:	cmp	r1, r0
   1922c:	bge	1923c <__assert_fail@plt+0x8240>
   19230:	movw	r0, #0
   19234:	str	r0, [sp, #64]	; 0x40
   19238:	b	19254 <__assert_fail@plt+0x8258>
   1923c:	ldr	r0, [pc, #2032]	; 19a34 <__assert_fail@plt+0x8a38>
   19240:	ldr	r1, [fp, #8]
   19244:	movw	r2, #0
   19248:	sub	r1, r2, r1
   1924c:	sdiv	r0, r0, r1
   19250:	str	r0, [sp, #64]	; 0x40
   19254:	ldr	r0, [sp, #64]	; 0x40
   19258:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1925c:	mvn	r2, #0
   19260:	sub	r1, r2, r1
   19264:	cmp	r0, r1
   19268:	ble	1936c <__assert_fail@plt+0x8370>
   1926c:	b	19380 <__assert_fail@plt+0x8384>
   19270:	ldr	r0, [fp, #8]
   19274:	cmn	r0, #1
   19278:	bne	192c0 <__assert_fail@plt+0x82c4>
   1927c:	b	19280 <__assert_fail@plt+0x8284>
   19280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19284:	add	r0, r0, #-2147483648	; 0x80000000
   19288:	movw	r1, #0
   1928c:	cmp	r1, r0
   19290:	blt	1936c <__assert_fail@plt+0x8370>
   19294:	b	19380 <__assert_fail@plt+0x8384>
   19298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1929c:	movw	r1, #0
   192a0:	cmp	r1, r0
   192a4:	bge	19380 <__assert_fail@plt+0x8384>
   192a8:	ldr	r0, [pc, #1924]	; 19a34 <__assert_fail@plt+0x8a38>
   192ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192b0:	sub	r1, r1, #1
   192b4:	cmp	r0, r1
   192b8:	blt	1936c <__assert_fail@plt+0x8370>
   192bc:	b	19380 <__assert_fail@plt+0x8384>
   192c0:	ldr	r0, [pc, #1908]	; 19a3c <__assert_fail@plt+0x8a40>
   192c4:	ldr	r1, [fp, #8]
   192c8:	sdiv	r0, r0, r1
   192cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192d0:	cmp	r0, r1
   192d4:	blt	1936c <__assert_fail@plt+0x8370>
   192d8:	b	19380 <__assert_fail@plt+0x8384>
   192dc:	ldr	r0, [fp, #8]
   192e0:	cmp	r0, #0
   192e4:	bne	192ec <__assert_fail@plt+0x82f0>
   192e8:	b	19380 <__assert_fail@plt+0x8384>
   192ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192f0:	cmp	r0, #0
   192f4:	bge	19354 <__assert_fail@plt+0x8358>
   192f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192fc:	cmn	r0, #1
   19300:	bne	19338 <__assert_fail@plt+0x833c>
   19304:	b	19308 <__assert_fail@plt+0x830c>
   19308:	ldr	r0, [fp, #8]
   1930c:	add	r0, r0, #-2147483648	; 0x80000000
   19310:	movw	r1, #0
   19314:	cmp	r1, r0
   19318:	blt	1936c <__assert_fail@plt+0x8370>
   1931c:	b	19380 <__assert_fail@plt+0x8384>
   19320:	ldr	r0, [pc, #1804]	; 19a34 <__assert_fail@plt+0x8a38>
   19324:	ldr	r1, [fp, #8]
   19328:	sub	r1, r1, #1
   1932c:	cmp	r0, r1
   19330:	blt	1936c <__assert_fail@plt+0x8370>
   19334:	b	19380 <__assert_fail@plt+0x8384>
   19338:	ldr	r0, [pc, #1788]	; 19a3c <__assert_fail@plt+0x8a40>
   1933c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19340:	sdiv	r0, r0, r1
   19344:	ldr	r1, [fp, #8]
   19348:	cmp	r0, r1
   1934c:	blt	1936c <__assert_fail@plt+0x8370>
   19350:	b	19380 <__assert_fail@plt+0x8384>
   19354:	ldr	r0, [pc, #1752]	; 19a34 <__assert_fail@plt+0x8a38>
   19358:	ldr	r1, [fp, #8]
   1935c:	sdiv	r0, r0, r1
   19360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19364:	cmp	r0, r1
   19368:	bge	19380 <__assert_fail@plt+0x8384>
   1936c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19370:	ldr	r1, [fp, #8]
   19374:	mul	r0, r0, r1
   19378:	str	r0, [fp, #-28]	; 0xffffffe4
   1937c:	b	19a08 <__assert_fail@plt+0x8a0c>
   19380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19384:	ldr	r1, [fp, #8]
   19388:	mul	r0, r0, r1
   1938c:	str	r0, [fp, #-28]	; 0xffffffe4
   19390:	b	19a0c <__assert_fail@plt+0x8a10>
   19394:	ldr	r0, [fp, #8]
   19398:	cmp	r0, #0
   1939c:	bge	194ac <__assert_fail@plt+0x84b0>
   193a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a4:	cmp	r0, #0
   193a8:	bge	19434 <__assert_fail@plt+0x8438>
   193ac:	b	193cc <__assert_fail@plt+0x83d0>
   193b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193b4:	ldr	r1, [fp, #8]
   193b8:	mvn	r2, #0
   193bc:	udiv	r1, r2, r1
   193c0:	cmp	r0, r1
   193c4:	bcc	19548 <__assert_fail@plt+0x854c>
   193c8:	b	1955c <__assert_fail@plt+0x8560>
   193cc:	b	193d0 <__assert_fail@plt+0x83d4>
   193d0:	ldr	r0, [pc, #1632]	; 19a38 <__assert_fail@plt+0x8a3c>
   193d4:	ldr	r1, [fp, #8]
   193d8:	cmp	r1, r0
   193dc:	blt	193f4 <__assert_fail@plt+0x83f8>
   193e0:	b	19400 <__assert_fail@plt+0x8404>
   193e4:	ldr	r0, [fp, #8]
   193e8:	movw	r1, #0
   193ec:	cmp	r1, r0
   193f0:	bge	19400 <__assert_fail@plt+0x8404>
   193f4:	movw	r0, #1
   193f8:	str	r0, [sp, #60]	; 0x3c
   193fc:	b	19418 <__assert_fail@plt+0x841c>
   19400:	ldr	r0, [fp, #8]
   19404:	movw	r1, #0
   19408:	sub	r0, r1, r0
   1940c:	mvn	r1, #0
   19410:	udiv	r0, r1, r0
   19414:	str	r0, [sp, #60]	; 0x3c
   19418:	ldr	r0, [sp, #60]	; 0x3c
   1941c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19420:	mvn	r2, #0
   19424:	sub	r1, r2, r1
   19428:	cmp	r0, r1
   1942c:	bls	19548 <__assert_fail@plt+0x854c>
   19430:	b	1955c <__assert_fail@plt+0x8560>
   19434:	b	19438 <__assert_fail@plt+0x843c>
   19438:	b	19490 <__assert_fail@plt+0x8494>
   1943c:	b	19490 <__assert_fail@plt+0x8494>
   19440:	ldr	r0, [fp, #8]
   19444:	cmn	r0, #1
   19448:	bne	19490 <__assert_fail@plt+0x8494>
   1944c:	b	19450 <__assert_fail@plt+0x8454>
   19450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19454:	add	r0, r0, #0
   19458:	movw	r1, #0
   1945c:	cmp	r1, r0
   19460:	blt	19548 <__assert_fail@plt+0x854c>
   19464:	b	1955c <__assert_fail@plt+0x8560>
   19468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1946c:	movw	r1, #0
   19470:	cmp	r1, r0
   19474:	bge	1955c <__assert_fail@plt+0x8560>
   19478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1947c:	sub	r0, r0, #1
   19480:	mvn	r1, #0
   19484:	cmp	r1, r0
   19488:	blt	19548 <__assert_fail@plt+0x854c>
   1948c:	b	1955c <__assert_fail@plt+0x8560>
   19490:	ldr	r0, [fp, #8]
   19494:	movw	r1, #0
   19498:	sdiv	r0, r1, r0
   1949c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194a0:	cmp	r0, r1
   194a4:	blt	19548 <__assert_fail@plt+0x854c>
   194a8:	b	1955c <__assert_fail@plt+0x8560>
   194ac:	ldr	r0, [fp, #8]
   194b0:	cmp	r0, #0
   194b4:	bne	194bc <__assert_fail@plt+0x84c0>
   194b8:	b	1955c <__assert_fail@plt+0x8560>
   194bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194c0:	cmp	r0, #0
   194c4:	bge	19530 <__assert_fail@plt+0x8534>
   194c8:	b	194cc <__assert_fail@plt+0x84d0>
   194cc:	b	19514 <__assert_fail@plt+0x8518>
   194d0:	b	19514 <__assert_fail@plt+0x8518>
   194d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194d8:	cmn	r0, #1
   194dc:	bne	19514 <__assert_fail@plt+0x8518>
   194e0:	b	194e4 <__assert_fail@plt+0x84e8>
   194e4:	ldr	r0, [fp, #8]
   194e8:	add	r0, r0, #0
   194ec:	movw	r1, #0
   194f0:	cmp	r1, r0
   194f4:	blt	19548 <__assert_fail@plt+0x854c>
   194f8:	b	1955c <__assert_fail@plt+0x8560>
   194fc:	ldr	r0, [fp, #8]
   19500:	sub	r0, r0, #1
   19504:	mvn	r1, #0
   19508:	cmp	r1, r0
   1950c:	blt	19548 <__assert_fail@plt+0x854c>
   19510:	b	1955c <__assert_fail@plt+0x8560>
   19514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19518:	movw	r1, #0
   1951c:	sdiv	r0, r1, r0
   19520:	ldr	r1, [fp, #8]
   19524:	cmp	r0, r1
   19528:	blt	19548 <__assert_fail@plt+0x854c>
   1952c:	b	1955c <__assert_fail@plt+0x8560>
   19530:	ldr	r0, [fp, #8]
   19534:	mvn	r1, #0
   19538:	udiv	r0, r1, r0
   1953c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19540:	cmp	r0, r1
   19544:	bcs	1955c <__assert_fail@plt+0x8560>
   19548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1954c:	ldr	r1, [fp, #8]
   19550:	mul	r0, r0, r1
   19554:	str	r0, [fp, #-28]	; 0xffffffe4
   19558:	b	19a08 <__assert_fail@plt+0x8a0c>
   1955c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19560:	ldr	r1, [fp, #8]
   19564:	mul	r0, r0, r1
   19568:	str	r0, [fp, #-28]	; 0xffffffe4
   1956c:	b	19a0c <__assert_fail@plt+0x8a10>
   19570:	b	19574 <__assert_fail@plt+0x8578>
   19574:	ldr	r0, [fp, #8]
   19578:	cmp	r0, #0
   1957c:	bge	196e4 <__assert_fail@plt+0x86e8>
   19580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19584:	cmp	r0, #0
   19588:	bge	19660 <__assert_fail@plt+0x8664>
   1958c:	b	19590 <__assert_fail@plt+0x8594>
   19590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19594:	ldr	r1, [fp, #8]
   19598:	asr	r3, r1, #31
   1959c:	mvn	r2, #0
   195a0:	mvn	ip, #-2147483648	; 0x80000000
   195a4:	str	r0, [sp, #56]	; 0x38
   195a8:	mov	r0, r2
   195ac:	str	r1, [sp, #52]	; 0x34
   195b0:	mov	r1, ip
   195b4:	ldr	r2, [sp, #52]	; 0x34
   195b8:	bl	1e35c <__assert_fail@plt+0xd360>
   195bc:	ldr	r2, [sp, #56]	; 0x38
   195c0:	subs	r0, r2, r0
   195c4:	rscs	r1, r1, r2, asr #31
   195c8:	blt	197ac <__assert_fail@plt+0x87b0>
   195cc:	b	197c0 <__assert_fail@plt+0x87c4>
   195d0:	b	195d4 <__assert_fail@plt+0x85d8>
   195d4:	ldr	r0, [pc, #1116]	; 19a38 <__assert_fail@plt+0x8a3c>
   195d8:	ldr	r1, [fp, #8]
   195dc:	cmp	r1, r0
   195e0:	blt	195f8 <__assert_fail@plt+0x85fc>
   195e4:	b	1960c <__assert_fail@plt+0x8610>
   195e8:	ldr	r0, [fp, #8]
   195ec:	movw	r1, #0
   195f0:	cmp	r1, r0
   195f4:	bge	1960c <__assert_fail@plt+0x8610>
   195f8:	mov	r0, #0
   195fc:	mvn	r1, #0
   19600:	str	r1, [sp, #48]	; 0x30
   19604:	str	r0, [sp, #44]	; 0x2c
   19608:	b	19640 <__assert_fail@plt+0x8644>
   1960c:	ldr	r0, [fp, #8]
   19610:	rsb	r0, r0, #0
   19614:	asr	r3, r0, #31
   19618:	mvn	r1, #0
   1961c:	mvn	r2, #-2147483648	; 0x80000000
   19620:	str	r0, [sp, #40]	; 0x28
   19624:	mov	r0, r1
   19628:	mov	r1, r2
   1962c:	ldr	r2, [sp, #40]	; 0x28
   19630:	bl	1e35c <__assert_fail@plt+0xd360>
   19634:	str	r0, [sp, #48]	; 0x30
   19638:	str	r1, [sp, #44]	; 0x2c
   1963c:	b	19640 <__assert_fail@plt+0x8644>
   19640:	ldr	r0, [sp, #44]	; 0x2c
   19644:	ldr	r1, [sp, #48]	; 0x30
   19648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1964c:	mvn	r2, r2
   19650:	subs	r1, r2, r1
   19654:	rscs	r0, r0, r2, asr #31
   19658:	bge	197ac <__assert_fail@plt+0x87b0>
   1965c:	b	197c0 <__assert_fail@plt+0x87c4>
   19660:	ldr	r0, [fp, #8]
   19664:	cmn	r0, #1
   19668:	bne	196ac <__assert_fail@plt+0x86b0>
   1966c:	b	19670 <__assert_fail@plt+0x8674>
   19670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19674:	mov	r1, #-2147483648	; 0x80000000
   19678:	add	r1, r1, r0, asr #31
   1967c:	rsbs	r0, r0, #0
   19680:	rscs	r1, r1, #0
   19684:	blt	197ac <__assert_fail@plt+0x87b0>
   19688:	b	197c0 <__assert_fail@plt+0x87c4>
   1968c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19690:	movw	r1, #0
   19694:	cmp	r1, r0
   19698:	bge	197c0 <__assert_fail@plt+0x87c4>
   1969c:	mov	r0, #0
   196a0:	cmp	r0, #0
   196a4:	bne	197ac <__assert_fail@plt+0x87b0>
   196a8:	b	197c0 <__assert_fail@plt+0x87c4>
   196ac:	ldr	r0, [fp, #8]
   196b0:	asr	r3, r0, #31
   196b4:	mov	r1, #0
   196b8:	mov	r2, #-2147483648	; 0x80000000
   196bc:	str	r0, [sp, #36]	; 0x24
   196c0:	mov	r0, r1
   196c4:	mov	r1, r2
   196c8:	ldr	r2, [sp, #36]	; 0x24
   196cc:	bl	1e35c <__assert_fail@plt+0xd360>
   196d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   196d4:	subs	r0, r0, r2
   196d8:	sbcs	r1, r1, r2, asr #31
   196dc:	blt	197ac <__assert_fail@plt+0x87b0>
   196e0:	b	197c0 <__assert_fail@plt+0x87c4>
   196e4:	ldr	r0, [fp, #8]
   196e8:	cmp	r0, #0
   196ec:	bne	196f4 <__assert_fail@plt+0x86f8>
   196f0:	b	197c0 <__assert_fail@plt+0x87c4>
   196f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196f8:	cmp	r0, #0
   196fc:	bge	19774 <__assert_fail@plt+0x8778>
   19700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19704:	cmn	r0, #1
   19708:	bne	1973c <__assert_fail@plt+0x8740>
   1970c:	b	19710 <__assert_fail@plt+0x8714>
   19710:	ldr	r0, [fp, #8]
   19714:	mov	r1, #-2147483648	; 0x80000000
   19718:	add	r1, r1, r0, asr #31
   1971c:	rsbs	r0, r0, #0
   19720:	rscs	r1, r1, #0
   19724:	blt	197ac <__assert_fail@plt+0x87b0>
   19728:	b	197c0 <__assert_fail@plt+0x87c4>
   1972c:	mov	r0, #0
   19730:	cmp	r0, #0
   19734:	bne	197ac <__assert_fail@plt+0x87b0>
   19738:	b	197c0 <__assert_fail@plt+0x87c4>
   1973c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19740:	asr	r3, r0, #31
   19744:	mov	r1, #0
   19748:	mov	r2, #-2147483648	; 0x80000000
   1974c:	str	r0, [sp, #32]
   19750:	mov	r0, r1
   19754:	mov	r1, r2
   19758:	ldr	r2, [sp, #32]
   1975c:	bl	1e35c <__assert_fail@plt+0xd360>
   19760:	ldr	r2, [fp, #8]
   19764:	subs	r0, r0, r2
   19768:	sbcs	r1, r1, r2, asr #31
   1976c:	blt	197ac <__assert_fail@plt+0x87b0>
   19770:	b	197c0 <__assert_fail@plt+0x87c4>
   19774:	ldr	r0, [fp, #8]
   19778:	asr	r3, r0, #31
   1977c:	mvn	r1, #0
   19780:	mvn	r2, #-2147483648	; 0x80000000
   19784:	str	r0, [sp, #28]
   19788:	mov	r0, r1
   1978c:	mov	r1, r2
   19790:	ldr	r2, [sp, #28]
   19794:	bl	1e35c <__assert_fail@plt+0xd360>
   19798:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1979c:	subs	r0, r0, r2
   197a0:	sbcs	r1, r1, r2, asr #31
   197a4:	bge	197c0 <__assert_fail@plt+0x87c4>
   197a8:	b	197ac <__assert_fail@plt+0x87b0>
   197ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197b0:	ldr	r1, [fp, #8]
   197b4:	mul	r0, r0, r1
   197b8:	str	r0, [fp, #-28]	; 0xffffffe4
   197bc:	b	19a08 <__assert_fail@plt+0x8a0c>
   197c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c4:	ldr	r1, [fp, #8]
   197c8:	mul	r0, r0, r1
   197cc:	str	r0, [fp, #-28]	; 0xffffffe4
   197d0:	b	19a0c <__assert_fail@plt+0x8a10>
   197d4:	ldr	r0, [fp, #8]
   197d8:	cmp	r0, #0
   197dc:	bge	1992c <__assert_fail@plt+0x8930>
   197e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197e4:	cmp	r0, #0
   197e8:	bge	198b4 <__assert_fail@plt+0x88b8>
   197ec:	b	1982c <__assert_fail@plt+0x8830>
   197f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197f4:	ldr	r1, [fp, #8]
   197f8:	asr	r3, r1, #31
   197fc:	mvn	r2, #0
   19800:	str	r0, [sp, #24]
   19804:	mov	r0, r2
   19808:	str	r1, [sp, #20]
   1980c:	mov	r1, r2
   19810:	ldr	r2, [sp, #20]
   19814:	bl	1e430 <__assert_fail@plt+0xd434>
   19818:	ldr	r2, [sp, #24]
   1981c:	subs	r0, r2, r0
   19820:	rscs	r1, r1, r2, asr #31
   19824:	bcc	199e0 <__assert_fail@plt+0x89e4>
   19828:	b	199f4 <__assert_fail@plt+0x89f8>
   1982c:	b	19830 <__assert_fail@plt+0x8834>
   19830:	ldr	r0, [pc, #512]	; 19a38 <__assert_fail@plt+0x8a3c>
   19834:	ldr	r1, [fp, #8]
   19838:	cmp	r1, r0
   1983c:	blt	19854 <__assert_fail@plt+0x8858>
   19840:	b	19868 <__assert_fail@plt+0x886c>
   19844:	ldr	r0, [fp, #8]
   19848:	movw	r1, #0
   1984c:	cmp	r1, r0
   19850:	bge	19868 <__assert_fail@plt+0x886c>
   19854:	mov	r0, #1
   19858:	mvn	r1, #0
   1985c:	str	r1, [sp, #16]
   19860:	str	r0, [sp, #12]
   19864:	b	19894 <__assert_fail@plt+0x8898>
   19868:	ldr	r0, [fp, #8]
   1986c:	rsb	r0, r0, #0
   19870:	asr	r3, r0, #31
   19874:	mvn	r1, #0
   19878:	str	r0, [sp, #8]
   1987c:	mov	r0, r1
   19880:	ldr	r2, [sp, #8]
   19884:	bl	1e430 <__assert_fail@plt+0xd434>
   19888:	str	r0, [sp, #16]
   1988c:	str	r1, [sp, #12]
   19890:	b	19894 <__assert_fail@plt+0x8898>
   19894:	ldr	r0, [sp, #12]
   19898:	ldr	r1, [sp, #16]
   1989c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198a0:	mvn	r2, r2
   198a4:	subs	r1, r2, r1
   198a8:	rscs	r0, r0, r2, asr #31
   198ac:	bcs	199e0 <__assert_fail@plt+0x89e4>
   198b0:	b	199f4 <__assert_fail@plt+0x89f8>
   198b4:	b	198b8 <__assert_fail@plt+0x88bc>
   198b8:	b	19910 <__assert_fail@plt+0x8914>
   198bc:	b	19910 <__assert_fail@plt+0x8914>
   198c0:	ldr	r0, [fp, #8]
   198c4:	cmn	r0, #1
   198c8:	bne	19910 <__assert_fail@plt+0x8914>
   198cc:	b	198d0 <__assert_fail@plt+0x88d4>
   198d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198d4:	add	r0, r0, #0
   198d8:	movw	r1, #0
   198dc:	cmp	r1, r0
   198e0:	blt	199e0 <__assert_fail@plt+0x89e4>
   198e4:	b	199f4 <__assert_fail@plt+0x89f8>
   198e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198ec:	movw	r1, #0
   198f0:	cmp	r1, r0
   198f4:	bge	199f4 <__assert_fail@plt+0x89f8>
   198f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198fc:	sub	r0, r0, #1
   19900:	mvn	r1, #0
   19904:	cmp	r1, r0
   19908:	blt	199e0 <__assert_fail@plt+0x89e4>
   1990c:	b	199f4 <__assert_fail@plt+0x89f8>
   19910:	ldr	r0, [fp, #8]
   19914:	movw	r1, #0
   19918:	sdiv	r0, r1, r0
   1991c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19920:	cmp	r0, r1
   19924:	blt	199e0 <__assert_fail@plt+0x89e4>
   19928:	b	199f4 <__assert_fail@plt+0x89f8>
   1992c:	ldr	r0, [fp, #8]
   19930:	cmp	r0, #0
   19934:	bne	1993c <__assert_fail@plt+0x8940>
   19938:	b	199f4 <__assert_fail@plt+0x89f8>
   1993c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19940:	cmp	r0, #0
   19944:	bge	199b0 <__assert_fail@plt+0x89b4>
   19948:	b	1994c <__assert_fail@plt+0x8950>
   1994c:	b	19994 <__assert_fail@plt+0x8998>
   19950:	b	19994 <__assert_fail@plt+0x8998>
   19954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19958:	cmn	r0, #1
   1995c:	bne	19994 <__assert_fail@plt+0x8998>
   19960:	b	19964 <__assert_fail@plt+0x8968>
   19964:	ldr	r0, [fp, #8]
   19968:	add	r0, r0, #0
   1996c:	movw	r1, #0
   19970:	cmp	r1, r0
   19974:	blt	199e0 <__assert_fail@plt+0x89e4>
   19978:	b	199f4 <__assert_fail@plt+0x89f8>
   1997c:	ldr	r0, [fp, #8]
   19980:	sub	r0, r0, #1
   19984:	mvn	r1, #0
   19988:	cmp	r1, r0
   1998c:	blt	199e0 <__assert_fail@plt+0x89e4>
   19990:	b	199f4 <__assert_fail@plt+0x89f8>
   19994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19998:	movw	r1, #0
   1999c:	sdiv	r0, r1, r0
   199a0:	ldr	r1, [fp, #8]
   199a4:	cmp	r0, r1
   199a8:	blt	199e0 <__assert_fail@plt+0x89e4>
   199ac:	b	199f4 <__assert_fail@plt+0x89f8>
   199b0:	ldr	r0, [fp, #8]
   199b4:	asr	r3, r0, #31
   199b8:	mvn	r1, #0
   199bc:	str	r0, [sp, #4]
   199c0:	mov	r0, r1
   199c4:	ldr	r2, [sp, #4]
   199c8:	bl	1e430 <__assert_fail@plt+0xd434>
   199cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   199d0:	subs	r0, r0, r2
   199d4:	sbcs	r1, r1, r2, asr #31
   199d8:	bcs	199f4 <__assert_fail@plt+0x89f8>
   199dc:	b	199e0 <__assert_fail@plt+0x89e4>
   199e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199e4:	ldr	r1, [fp, #8]
   199e8:	mul	r0, r0, r1
   199ec:	str	r0, [fp, #-28]	; 0xffffffe4
   199f0:	b	19a08 <__assert_fail@plt+0x8a0c>
   199f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199f8:	ldr	r1, [fp, #8]
   199fc:	mul	r0, r0, r1
   19a00:	str	r0, [fp, #-28]	; 0xffffffe4
   19a04:	b	19a0c <__assert_fail@plt+0x8a10>
   19a08:	bl	19be4 <__assert_fail@plt+0x8be8>
   19a0c:	ldr	r0, [fp, #-4]
   19a10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a14:	bl	16f44 <__assert_fail@plt+0x5f48>
   19a18:	str	r0, [fp, #-4]
   19a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a20:	ldr	r1, [fp, #-8]
   19a24:	str	r0, [r1]
   19a28:	ldr	r0, [fp, #-4]
   19a2c:	mov	sp, fp
   19a30:	pop	{fp, pc}
   19a34:	svcvc	0x00ffffff
   19a38:	andhi	r0, r0, r1
   19a3c:	andhi	r0, r0, r0
   19a40:			; <UNDEFINED> instruction: 0xffff8000
   19a44:	push	{fp, lr}
   19a48:	mov	fp, sp
   19a4c:	sub	sp, sp, #8
   19a50:	str	r0, [sp, #4]
   19a54:	ldr	r0, [sp, #4]
   19a58:	movw	r1, #1
   19a5c:	bl	19a68 <__assert_fail@plt+0x8a6c>
   19a60:	mov	sp, fp
   19a64:	pop	{fp, pc}
   19a68:	push	{fp, lr}
   19a6c:	mov	fp, sp
   19a70:	sub	sp, sp, #8
   19a74:	str	r0, [sp, #4]
   19a78:	str	r1, [sp]
   19a7c:	ldr	r0, [sp, #4]
   19a80:	ldr	r1, [sp]
   19a84:	bl	1beec <__assert_fail@plt+0xaef0>
   19a88:	bl	16ed0 <__assert_fail@plt+0x5ed4>
   19a8c:	mov	sp, fp
   19a90:	pop	{fp, pc}
   19a94:	push	{fp, lr}
   19a98:	mov	fp, sp
   19a9c:	sub	sp, sp, #8
   19aa0:	str	r0, [sp, #4]
   19aa4:	ldr	r0, [sp, #4]
   19aa8:	movw	r1, #1
   19aac:	bl	19ab8 <__assert_fail@plt+0x8abc>
   19ab0:	mov	sp, fp
   19ab4:	pop	{fp, pc}
   19ab8:	push	{fp, lr}
   19abc:	mov	fp, sp
   19ac0:	sub	sp, sp, #8
   19ac4:	str	r0, [sp, #4]
   19ac8:	str	r1, [sp]
   19acc:	ldr	r0, [sp, #4]
   19ad0:	ldr	r1, [sp]
   19ad4:	bl	1c5c8 <__assert_fail@plt+0xb5cc>
   19ad8:	bl	16ed0 <__assert_fail@plt+0x5ed4>
   19adc:	mov	sp, fp
   19ae0:	pop	{fp, pc}
   19ae4:	push	{fp, lr}
   19ae8:	mov	fp, sp
   19aec:	sub	sp, sp, #16
   19af0:	str	r0, [fp, #-4]
   19af4:	str	r1, [sp, #8]
   19af8:	ldr	r0, [sp, #8]
   19afc:	bl	16eac <__assert_fail@plt+0x5eb0>
   19b00:	ldr	r1, [fp, #-4]
   19b04:	ldr	r2, [sp, #8]
   19b08:	str	r0, [sp, #4]
   19b0c:	bl	10e04 <memcpy@plt>
   19b10:	ldr	r0, [sp, #4]
   19b14:	mov	sp, fp
   19b18:	pop	{fp, pc}
   19b1c:	push	{fp, lr}
   19b20:	mov	fp, sp
   19b24:	sub	sp, sp, #16
   19b28:	str	r0, [fp, #-4]
   19b2c:	str	r1, [sp, #8]
   19b30:	ldr	r0, [sp, #8]
   19b34:	bl	16f00 <__assert_fail@plt+0x5f04>
   19b38:	ldr	r1, [fp, #-4]
   19b3c:	ldr	r2, [sp, #8]
   19b40:	str	r0, [sp, #4]
   19b44:	bl	10e04 <memcpy@plt>
   19b48:	ldr	r0, [sp, #4]
   19b4c:	mov	sp, fp
   19b50:	pop	{fp, pc}
   19b54:	push	{fp, lr}
   19b58:	mov	fp, sp
   19b5c:	sub	sp, sp, #16
   19b60:	str	r0, [fp, #-4]
   19b64:	str	r1, [sp, #8]
   19b68:	ldr	r0, [sp, #8]
   19b6c:	add	r0, r0, #1
   19b70:	bl	16f00 <__assert_fail@plt+0x5f04>
   19b74:	str	r0, [sp, #4]
   19b78:	ldr	r0, [sp, #4]
   19b7c:	ldr	r1, [sp, #8]
   19b80:	add	r0, r0, r1
   19b84:	movw	r1, #0
   19b88:	strb	r1, [r0]
   19b8c:	ldr	r0, [sp, #4]
   19b90:	ldr	r1, [fp, #-4]
   19b94:	ldr	r2, [sp, #8]
   19b98:	str	r0, [sp]
   19b9c:	bl	10e04 <memcpy@plt>
   19ba0:	ldr	r0, [sp]
   19ba4:	mov	sp, fp
   19ba8:	pop	{fp, pc}
   19bac:	push	{fp, lr}
   19bb0:	mov	fp, sp
   19bb4:	sub	sp, sp, #8
   19bb8:	str	r0, [sp, #4]
   19bbc:	ldr	r0, [sp, #4]
   19bc0:	ldr	r1, [sp, #4]
   19bc4:	str	r0, [sp]
   19bc8:	mov	r0, r1
   19bcc:	bl	10f18 <strlen@plt>
   19bd0:	add	r1, r0, #1
   19bd4:	ldr	r0, [sp]
   19bd8:	bl	19ae4 <__assert_fail@plt+0x8ae8>
   19bdc:	mov	sp, fp
   19be0:	pop	{fp, pc}
   19be4:	push	{fp, lr}
   19be8:	mov	fp, sp
   19bec:	sub	sp, sp, #8
   19bf0:	movw	r0, #232	; 0xe8
   19bf4:	movt	r0, #3
   19bf8:	ldr	r0, [r0]
   19bfc:	movw	r1, #62272	; 0xf340
   19c00:	movt	r1, #1
   19c04:	str	r0, [sp, #4]
   19c08:	mov	r0, r1
   19c0c:	bl	10f0c <gettext@plt>
   19c10:	ldr	r1, [sp, #4]
   19c14:	str	r0, [sp]
   19c18:	mov	r0, r1
   19c1c:	movw	r1, #0
   19c20:	movw	r2, #61219	; 0xef23
   19c24:	movt	r2, #1
   19c28:	ldr	r3, [sp]
   19c2c:	bl	10ea0 <error@plt>
   19c30:	bl	10fe4 <abort@plt>
   19c34:	push	{r4, r5, r6, sl, fp, lr}
   19c38:	add	fp, sp, #16
   19c3c:	sub	sp, sp, #88	; 0x58
   19c40:	ldr	ip, [fp, #12]
   19c44:	ldr	lr, [fp, #8]
   19c48:	ldr	r4, [fp, #24]
   19c4c:	ldr	r5, [fp, #20]
   19c50:	ldr	r6, [fp, #16]
   19c54:	str	r0, [fp, #-20]	; 0xffffffec
   19c58:	str	r1, [fp, #-24]	; 0xffffffe8
   19c5c:	str	r3, [fp, #-28]	; 0xffffffe4
   19c60:	str	r2, [fp, #-32]	; 0xffffffe0
   19c64:	str	ip, [fp, #-36]	; 0xffffffdc
   19c68:	str	lr, [fp, #-40]	; 0xffffffd8
   19c6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19c70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c74:	ldr	r1, [fp, #16]
   19c78:	movw	r3, #0
   19c7c:	str	r1, [sp, #44]	; 0x2c
   19c80:	mov	r1, r3
   19c84:	add	r3, sp, #48	; 0x30
   19c88:	ldr	ip, [sp, #44]	; 0x2c
   19c8c:	str	ip, [sp]
   19c90:	str	r4, [sp, #40]	; 0x28
   19c94:	str	r5, [sp, #36]	; 0x24
   19c98:	str	r6, [sp, #32]
   19c9c:	bl	19ee0 <__assert_fail@plt+0x8ee4>
   19ca0:	str	r0, [fp, #-44]	; 0xffffffd4
   19ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ca8:	cmp	r0, #0
   19cac:	bne	19d68 <__assert_fail@plt+0x8d6c>
   19cb0:	ldr	r0, [sp, #48]	; 0x30
   19cb4:	ldr	r1, [sp, #52]	; 0x34
   19cb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19cc0:	subs	r0, r0, r2
   19cc4:	sbcs	r1, r1, r3
   19cc8:	blt	19cf0 <__assert_fail@plt+0x8cf4>
   19ccc:	b	19cd0 <__assert_fail@plt+0x8cd4>
   19cd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19cd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19cd8:	ldr	r2, [sp, #48]	; 0x30
   19cdc:	ldr	r3, [sp, #52]	; 0x34
   19ce0:	subs	r0, r0, r2
   19ce4:	sbcs	r1, r1, r3
   19ce8:	bge	19d64 <__assert_fail@plt+0x8d68>
   19cec:	b	19cf0 <__assert_fail@plt+0x8cf4>
   19cf0:	mov	r0, #1
   19cf4:	str	r0, [fp, #-44]	; 0xffffffd4
   19cf8:	ldr	r0, [sp, #48]	; 0x30
   19cfc:	ldr	r1, [sp, #52]	; 0x34
   19d00:	subs	r0, r0, #1073741824	; 0x40000000
   19d04:	sbcs	r1, r1, #0
   19d08:	blt	19d20 <__assert_fail@plt+0x8d24>
   19d0c:	b	19d10 <__assert_fail@plt+0x8d14>
   19d10:	bl	10f3c <__errno_location@plt>
   19d14:	movw	r1, #75	; 0x4b
   19d18:	str	r1, [r0]
   19d1c:	b	19d60 <__assert_fail@plt+0x8d64>
   19d20:	ldr	r0, [sp, #48]	; 0x30
   19d24:	ldr	r1, [sp, #52]	; 0x34
   19d28:	mvn	r2, #1073741824	; 0x40000000
   19d2c:	subs	r0, r2, r0
   19d30:	mvn	r2, #0
   19d34:	sbcs	r1, r2, r1
   19d38:	blt	19d50 <__assert_fail@plt+0x8d54>
   19d3c:	b	19d40 <__assert_fail@plt+0x8d44>
   19d40:	bl	10f3c <__errno_location@plt>
   19d44:	movw	r1, #75	; 0x4b
   19d48:	str	r1, [r0]
   19d4c:	b	19d5c <__assert_fail@plt+0x8d60>
   19d50:	bl	10f3c <__errno_location@plt>
   19d54:	movw	r1, #34	; 0x22
   19d58:	str	r1, [r0]
   19d5c:	b	19d60 <__assert_fail@plt+0x8d64>
   19d60:	b	19d64 <__assert_fail@plt+0x8d68>
   19d64:	b	19da4 <__assert_fail@plt+0x8da8>
   19d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d6c:	cmp	r0, #1
   19d70:	bne	19d84 <__assert_fail@plt+0x8d88>
   19d74:	bl	10f3c <__errno_location@plt>
   19d78:	movw	r1, #75	; 0x4b
   19d7c:	str	r1, [r0]
   19d80:	b	19da0 <__assert_fail@plt+0x8da4>
   19d84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d88:	cmp	r0, #3
   19d8c:	bne	19d9c <__assert_fail@plt+0x8da0>
   19d90:	bl	10f3c <__errno_location@plt>
   19d94:	movw	r1, #0
   19d98:	str	r1, [r0]
   19d9c:	b	19da0 <__assert_fail@plt+0x8da4>
   19da0:	b	19da4 <__assert_fail@plt+0x8da8>
   19da4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19da8:	cmp	r0, #0
   19dac:	beq	19e48 <__assert_fail@plt+0x8e4c>
   19db0:	ldr	r0, [fp, #24]
   19db4:	cmp	r0, #0
   19db8:	beq	19dc8 <__assert_fail@plt+0x8dcc>
   19dbc:	ldr	r0, [fp, #24]
   19dc0:	str	r0, [sp, #28]
   19dc4:	b	19dd4 <__assert_fail@plt+0x8dd8>
   19dc8:	movw	r0, #1
   19dcc:	str	r0, [sp, #28]
   19dd0:	b	19dd4 <__assert_fail@plt+0x8dd8>
   19dd4:	ldr	r0, [sp, #28]
   19dd8:	str	r0, [sp, #24]
   19ddc:	bl	10f3c <__errno_location@plt>
   19de0:	ldr	r0, [r0]
   19de4:	cmp	r0, #22
   19de8:	bne	19df8 <__assert_fail@plt+0x8dfc>
   19dec:	movw	r0, #0
   19df0:	str	r0, [sp, #20]
   19df4:	b	19e04 <__assert_fail@plt+0x8e08>
   19df8:	bl	10f3c <__errno_location@plt>
   19dfc:	ldr	r0, [r0]
   19e00:	str	r0, [sp, #20]
   19e04:	ldr	r0, [sp, #20]
   19e08:	ldr	r3, [fp, #20]
   19e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19e10:	str	r0, [sp, #16]
   19e14:	mov	r0, r1
   19e18:	str	r3, [sp, #12]
   19e1c:	bl	164a8 <__assert_fail@plt+0x54ac>
   19e20:	ldr	r1, [sp, #24]
   19e24:	str	r0, [sp, #8]
   19e28:	mov	r0, r1
   19e2c:	ldr	r1, [sp, #16]
   19e30:	movw	r2, #61215	; 0xef1f
   19e34:	movt	r2, #1
   19e38:	ldr	r3, [sp, #12]
   19e3c:	ldr	ip, [sp, #8]
   19e40:	str	ip, [sp]
   19e44:	bl	10ea0 <error@plt>
   19e48:	ldr	r0, [sp, #48]	; 0x30
   19e4c:	ldr	r1, [sp, #52]	; 0x34
   19e50:	sub	sp, fp, #16
   19e54:	pop	{r4, r5, r6, sl, fp, pc}
   19e58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19e5c:	add	fp, sp, #24
   19e60:	sub	sp, sp, #56	; 0x38
   19e64:	ldr	r1, [fp, #12]
   19e68:	ldr	ip, [fp, #8]
   19e6c:	ldr	lr, [fp, #24]
   19e70:	ldr	r4, [fp, #20]
   19e74:	ldr	r5, [fp, #16]
   19e78:	str	r0, [fp, #-28]	; 0xffffffe4
   19e7c:	str	r3, [sp, #44]	; 0x2c
   19e80:	str	r2, [sp, #40]	; 0x28
   19e84:	str	r1, [sp, #36]	; 0x24
   19e88:	str	ip, [sp, #32]
   19e8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e90:	ldr	r2, [sp, #40]	; 0x28
   19e94:	ldr	r3, [sp, #44]	; 0x2c
   19e98:	ldr	r1, [sp, #32]
   19e9c:	ldr	ip, [sp, #36]	; 0x24
   19ea0:	ldr	r6, [fp, #16]
   19ea4:	ldr	r7, [fp, #20]
   19ea8:	ldr	r8, [fp, #24]
   19eac:	mov	r9, sp
   19eb0:	str	r8, [r9, #16]
   19eb4:	str	r7, [r9, #12]
   19eb8:	str	r6, [r9, #8]
   19ebc:	str	ip, [r9, #4]
   19ec0:	str	r1, [r9]
   19ec4:	mov	r1, #10
   19ec8:	str	lr, [sp, #28]
   19ecc:	str	r4, [sp, #24]
   19ed0:	str	r5, [sp, #20]
   19ed4:	bl	19c34 <__assert_fail@plt+0x8c38>
   19ed8:	sub	sp, fp, #24
   19edc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19ee0:	push	{fp, lr}
   19ee4:	mov	fp, sp
   19ee8:	sub	sp, sp, #72	; 0x48
   19eec:	ldr	ip, [fp, #8]
   19ef0:	str	r0, [fp, #-8]
   19ef4:	str	r1, [fp, #-12]
   19ef8:	str	r2, [fp, #-16]
   19efc:	str	r3, [fp, #-20]	; 0xffffffec
   19f00:	movw	r0, #0
   19f04:	str	r0, [sp, #28]
   19f08:	ldr	r1, [fp, #-16]
   19f0c:	cmp	r0, r1
   19f10:	bgt	19f24 <__assert_fail@plt+0x8f28>
   19f14:	ldr	r0, [fp, #-16]
   19f18:	cmp	r0, #36	; 0x24
   19f1c:	bgt	19f24 <__assert_fail@plt+0x8f28>
   19f20:	b	19f44 <__assert_fail@plt+0x8f48>
   19f24:	movw	r0, #62289	; 0xf351
   19f28:	movt	r0, #1
   19f2c:	movw	r1, #62327	; 0xf377
   19f30:	movt	r1, #1
   19f34:	movw	r2, #85	; 0x55
   19f38:	movw	r3, #62343	; 0xf387
   19f3c:	movt	r3, #1
   19f40:	bl	10ffc <__assert_fail@plt>
   19f44:	ldr	r0, [fp, #-12]
   19f48:	movw	r1, #0
   19f4c:	cmp	r0, r1
   19f50:	beq	19f60 <__assert_fail@plt+0x8f64>
   19f54:	ldr	r0, [fp, #-12]
   19f58:	str	r0, [sp, #12]
   19f5c:	b	19f6c <__assert_fail@plt+0x8f70>
   19f60:	sub	r0, fp, #24
   19f64:	str	r0, [sp, #12]
   19f68:	b	19f6c <__assert_fail@plt+0x8f70>
   19f6c:	ldr	r0, [sp, #12]
   19f70:	str	r0, [fp, #-28]	; 0xffffffe4
   19f74:	bl	10f3c <__errno_location@plt>
   19f78:	mov	r1, #0
   19f7c:	str	r1, [r0]
   19f80:	ldr	r0, [fp, #-8]
   19f84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f88:	ldr	r2, [fp, #-16]
   19f8c:	bl	10f6c <strtoimax@plt>
   19f90:	str	r1, [sp, #36]	; 0x24
   19f94:	str	r0, [sp, #32]
   19f98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f9c:	ldr	r0, [r0]
   19fa0:	ldr	r1, [fp, #-8]
   19fa4:	cmp	r0, r1
   19fa8:	bne	1a014 <__assert_fail@plt+0x9018>
   19fac:	ldr	r0, [fp, #8]
   19fb0:	movw	r1, #0
   19fb4:	cmp	r0, r1
   19fb8:	beq	1a004 <__assert_fail@plt+0x9008>
   19fbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19fc0:	ldr	r0, [r0]
   19fc4:	ldrb	r0, [r0]
   19fc8:	cmp	r0, #0
   19fcc:	beq	1a004 <__assert_fail@plt+0x9008>
   19fd0:	ldr	r0, [fp, #8]
   19fd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19fd8:	ldr	r1, [r1]
   19fdc:	ldrb	r1, [r1]
   19fe0:	bl	10f24 <strchr@plt>
   19fe4:	movw	r1, #0
   19fe8:	cmp	r0, r1
   19fec:	beq	1a004 <__assert_fail@plt+0x9008>
   19ff0:	mov	r0, #0
   19ff4:	str	r0, [sp, #36]	; 0x24
   19ff8:	mov	r0, #1
   19ffc:	str	r0, [sp, #32]
   1a000:	b	1a010 <__assert_fail@plt+0x9014>
   1a004:	movw	r0, #4
   1a008:	str	r0, [fp, #-4]
   1a00c:	b	1a4fc <__assert_fail@plt+0x9500>
   1a010:	b	1a04c <__assert_fail@plt+0x9050>
   1a014:	bl	10f3c <__errno_location@plt>
   1a018:	ldr	r0, [r0]
   1a01c:	cmp	r0, #0
   1a020:	beq	1a048 <__assert_fail@plt+0x904c>
   1a024:	bl	10f3c <__errno_location@plt>
   1a028:	ldr	r0, [r0]
   1a02c:	cmp	r0, #34	; 0x22
   1a030:	beq	1a040 <__assert_fail@plt+0x9044>
   1a034:	movw	r0, #4
   1a038:	str	r0, [fp, #-4]
   1a03c:	b	1a4fc <__assert_fail@plt+0x9500>
   1a040:	movw	r0, #1
   1a044:	str	r0, [sp, #28]
   1a048:	b	1a04c <__assert_fail@plt+0x9050>
   1a04c:	ldr	r0, [fp, #8]
   1a050:	movw	r1, #0
   1a054:	cmp	r0, r1
   1a058:	bne	1a07c <__assert_fail@plt+0x9080>
   1a05c:	ldr	r0, [sp, #32]
   1a060:	ldr	r1, [sp, #36]	; 0x24
   1a064:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a068:	str	r1, [r2, #4]
   1a06c:	str	r0, [r2]
   1a070:	ldr	r0, [sp, #28]
   1a074:	str	r0, [fp, #-4]
   1a078:	b	1a4fc <__assert_fail@plt+0x9500>
   1a07c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a080:	ldr	r0, [r0]
   1a084:	ldrb	r0, [r0]
   1a088:	cmp	r0, #0
   1a08c:	beq	1a4e0 <__assert_fail@plt+0x94e4>
   1a090:	movw	r0, #1024	; 0x400
   1a094:	str	r0, [sp, #24]
   1a098:	movw	r0, #1
   1a09c:	str	r0, [sp, #20]
   1a0a0:	ldr	r0, [fp, #8]
   1a0a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a0a8:	ldr	r1, [r1]
   1a0ac:	ldrb	r1, [r1]
   1a0b0:	bl	10f24 <strchr@plt>
   1a0b4:	movw	r1, #0
   1a0b8:	cmp	r0, r1
   1a0bc:	bne	1a0e4 <__assert_fail@plt+0x90e8>
   1a0c0:	ldr	r0, [sp, #32]
   1a0c4:	ldr	r1, [sp, #36]	; 0x24
   1a0c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a0cc:	str	r1, [r2, #4]
   1a0d0:	str	r0, [r2]
   1a0d4:	ldr	r0, [sp, #28]
   1a0d8:	orr	r0, r0, #2
   1a0dc:	str	r0, [fp, #-4]
   1a0e0:	b	1a4fc <__assert_fail@plt+0x9500>
   1a0e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a0e8:	ldr	r0, [r0]
   1a0ec:	ldrb	r0, [r0]
   1a0f0:	sub	r0, r0, #69	; 0x45
   1a0f4:	cmp	r0, #47	; 0x2f
   1a0f8:	str	r0, [sp, #8]
   1a0fc:	bhi	1a268 <__assert_fail@plt+0x926c>
   1a100:	add	r0, pc, #8
   1a104:	ldr	r1, [sp, #8]
   1a108:	ldr	r0, [r0, r1, lsl #2]
   1a10c:	mov	pc, r0
   1a110:	ldrdeq	sl, [r1], -r0
   1a114:	andeq	sl, r1, r8, ror #4
   1a118:	ldrdeq	sl, [r1], -r0
   1a11c:	andeq	sl, r1, r8, ror #4
   1a120:	andeq	sl, r1, r8, ror #4
   1a124:	andeq	sl, r1, r8, ror #4
   1a128:	ldrdeq	sl, [r1], -r0
   1a12c:	andeq	sl, r1, r8, ror #4
   1a130:	ldrdeq	sl, [r1], -r0
   1a134:	andeq	sl, r1, r8, ror #4
   1a138:	andeq	sl, r1, r8, ror #4
   1a13c:	ldrdeq	sl, [r1], -r0
   1a140:	andeq	sl, r1, r8, ror #4
   1a144:	andeq	sl, r1, r8, ror #4
   1a148:	andeq	sl, r1, r8, ror #4
   1a14c:	ldrdeq	sl, [r1], -r0
   1a150:	andeq	sl, r1, r8, ror #4
   1a154:	andeq	sl, r1, r8, ror #4
   1a158:	andeq	sl, r1, r8, ror #4
   1a15c:	andeq	sl, r1, r8, ror #4
   1a160:	ldrdeq	sl, [r1], -r0
   1a164:	ldrdeq	sl, [r1], -r0
   1a168:	andeq	sl, r1, r8, ror #4
   1a16c:	andeq	sl, r1, r8, ror #4
   1a170:	andeq	sl, r1, r8, ror #4
   1a174:	andeq	sl, r1, r8, ror #4
   1a178:	andeq	sl, r1, r8, ror #4
   1a17c:	andeq	sl, r1, r8, ror #4
   1a180:	andeq	sl, r1, r8, ror #4
   1a184:	andeq	sl, r1, r8, ror #4
   1a188:	andeq	sl, r1, r8, ror #4
   1a18c:	andeq	sl, r1, r8, ror #4
   1a190:	andeq	sl, r1, r8, ror #4
   1a194:	andeq	sl, r1, r8, ror #4
   1a198:	ldrdeq	sl, [r1], -r0
   1a19c:	andeq	sl, r1, r8, ror #4
   1a1a0:	andeq	sl, r1, r8, ror #4
   1a1a4:	andeq	sl, r1, r8, ror #4
   1a1a8:	ldrdeq	sl, [r1], -r0
   1a1ac:	andeq	sl, r1, r8, ror #4
   1a1b0:	ldrdeq	sl, [r1], -r0
   1a1b4:	andeq	sl, r1, r8, ror #4
   1a1b8:	andeq	sl, r1, r8, ror #4
   1a1bc:	andeq	sl, r1, r8, ror #4
   1a1c0:	andeq	sl, r1, r8, ror #4
   1a1c4:	andeq	sl, r1, r8, ror #4
   1a1c8:	andeq	sl, r1, r8, ror #4
   1a1cc:	ldrdeq	sl, [r1], -r0
   1a1d0:	ldr	r0, [fp, #8]
   1a1d4:	movw	r1, #48	; 0x30
   1a1d8:	bl	10f24 <strchr@plt>
   1a1dc:	movw	r1, #0
   1a1e0:	cmp	r0, r1
   1a1e4:	beq	1a264 <__assert_fail@plt+0x9268>
   1a1e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a1ec:	ldr	r0, [r0]
   1a1f0:	ldrb	r0, [r0, #1]
   1a1f4:	mov	r1, r0
   1a1f8:	cmp	r0, #66	; 0x42
   1a1fc:	str	r1, [sp, #4]
   1a200:	beq	1a24c <__assert_fail@plt+0x9250>
   1a204:	b	1a208 <__assert_fail@plt+0x920c>
   1a208:	ldr	r0, [sp, #4]
   1a20c:	cmp	r0, #68	; 0x44
   1a210:	beq	1a24c <__assert_fail@plt+0x9250>
   1a214:	b	1a218 <__assert_fail@plt+0x921c>
   1a218:	ldr	r0, [sp, #4]
   1a21c:	cmp	r0, #105	; 0x69
   1a220:	bne	1a260 <__assert_fail@plt+0x9264>
   1a224:	b	1a228 <__assert_fail@plt+0x922c>
   1a228:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a22c:	ldr	r0, [r0]
   1a230:	ldrb	r0, [r0, #2]
   1a234:	cmp	r0, #66	; 0x42
   1a238:	bne	1a248 <__assert_fail@plt+0x924c>
   1a23c:	ldr	r0, [sp, #20]
   1a240:	add	r0, r0, #2
   1a244:	str	r0, [sp, #20]
   1a248:	b	1a260 <__assert_fail@plt+0x9264>
   1a24c:	movw	r0, #1000	; 0x3e8
   1a250:	str	r0, [sp, #24]
   1a254:	ldr	r0, [sp, #20]
   1a258:	add	r0, r0, #1
   1a25c:	str	r0, [sp, #20]
   1a260:	b	1a264 <__assert_fail@plt+0x9268>
   1a264:	b	1a268 <__assert_fail@plt+0x926c>
   1a268:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a26c:	ldr	r0, [r0]
   1a270:	ldrb	r0, [r0]
   1a274:	sub	r0, r0, #66	; 0x42
   1a278:	cmp	r0, #53	; 0x35
   1a27c:	str	r0, [sp]
   1a280:	bhi	1a474 <__assert_fail@plt+0x9478>
   1a284:	add	r0, pc, #8
   1a288:	ldr	r1, [sp]
   1a28c:	ldr	r0, [r0, r1, lsl #2]
   1a290:	mov	pc, r0
   1a294:	andeq	sl, r1, r0, lsl #7
   1a298:	andeq	sl, r1, r4, ror r4
   1a29c:	andeq	sl, r1, r4, ror r4
   1a2a0:	andeq	sl, r1, r0, lsr #7
   1a2a4:	andeq	sl, r1, r4, ror r4
   1a2a8:			; <UNDEFINED> instruction: 0x0001a3b8
   1a2ac:	andeq	sl, r1, r4, ror r4
   1a2b0:	andeq	sl, r1, r4, ror r4
   1a2b4:	andeq	sl, r1, r4, ror r4
   1a2b8:	ldrdeq	sl, [r1], -r0
   1a2bc:	andeq	sl, r1, r4, ror r4
   1a2c0:	andeq	sl, r1, r8, ror #7
   1a2c4:	andeq	sl, r1, r4, ror r4
   1a2c8:	andeq	sl, r1, r4, ror r4
   1a2cc:	andeq	sl, r1, r0, lsl #8
   1a2d0:	andeq	sl, r1, r4, ror r4
   1a2d4:	andeq	sl, r1, r4, ror r4
   1a2d8:	andeq	sl, r1, r4, ror r4
   1a2dc:	andeq	sl, r1, r8, lsl r4
   1a2e0:	andeq	sl, r1, r4, ror r4
   1a2e4:	andeq	sl, r1, r4, ror r4
   1a2e8:	andeq	sl, r1, r4, ror r4
   1a2ec:	andeq	sl, r1, r4, ror r4
   1a2f0:	andeq	sl, r1, r4, asr #8
   1a2f4:	andeq	sl, r1, ip, asr r4
   1a2f8:	andeq	sl, r1, r4, ror r4
   1a2fc:	andeq	sl, r1, r4, ror r4
   1a300:	andeq	sl, r1, r4, ror r4
   1a304:	andeq	sl, r1, r4, ror r4
   1a308:	andeq	sl, r1, r4, ror r4
   1a30c:	andeq	sl, r1, r4, ror r4
   1a310:	andeq	sl, r1, r4, ror r4
   1a314:	andeq	sl, r1, ip, ror #6
   1a318:	muleq	r1, r4, r3
   1a31c:	andeq	sl, r1, r4, ror r4
   1a320:	andeq	sl, r1, r4, ror r4
   1a324:	andeq	sl, r1, r4, ror r4
   1a328:			; <UNDEFINED> instruction: 0x0001a3b8
   1a32c:	andeq	sl, r1, r4, ror r4
   1a330:	andeq	sl, r1, r4, ror r4
   1a334:	andeq	sl, r1, r4, ror r4
   1a338:	ldrdeq	sl, [r1], -r0
   1a33c:	andeq	sl, r1, r4, ror r4
   1a340:	andeq	sl, r1, r8, ror #7
   1a344:	andeq	sl, r1, r4, ror r4
   1a348:	andeq	sl, r1, r4, ror r4
   1a34c:	andeq	sl, r1, r4, ror r4
   1a350:	andeq	sl, r1, r4, ror r4
   1a354:	andeq	sl, r1, r4, ror r4
   1a358:	andeq	sl, r1, r4, ror r4
   1a35c:	andeq	sl, r1, r8, lsl r4
   1a360:	andeq	sl, r1, r4, ror r4
   1a364:	andeq	sl, r1, r4, ror r4
   1a368:	andeq	sl, r1, r0, lsr r4
   1a36c:	add	r0, sp, #32
   1a370:	movw	r1, #512	; 0x200
   1a374:	bl	1a508 <__assert_fail@plt+0x950c>
   1a378:	str	r0, [sp, #16]
   1a37c:	b	1a498 <__assert_fail@plt+0x949c>
   1a380:	add	r0, sp, #32
   1a384:	movw	r1, #1024	; 0x400
   1a388:	bl	1a508 <__assert_fail@plt+0x950c>
   1a38c:	str	r0, [sp, #16]
   1a390:	b	1a498 <__assert_fail@plt+0x949c>
   1a394:	movw	r0, #0
   1a398:	str	r0, [sp, #16]
   1a39c:	b	1a498 <__assert_fail@plt+0x949c>
   1a3a0:	ldr	r1, [sp, #24]
   1a3a4:	add	r0, sp, #32
   1a3a8:	movw	r2, #6
   1a3ac:	bl	1be8c <__assert_fail@plt+0xae90>
   1a3b0:	str	r0, [sp, #16]
   1a3b4:	b	1a498 <__assert_fail@plt+0x949c>
   1a3b8:	ldr	r1, [sp, #24]
   1a3bc:	add	r0, sp, #32
   1a3c0:	movw	r2, #3
   1a3c4:	bl	1be8c <__assert_fail@plt+0xae90>
   1a3c8:	str	r0, [sp, #16]
   1a3cc:	b	1a498 <__assert_fail@plt+0x949c>
   1a3d0:	ldr	r1, [sp, #24]
   1a3d4:	add	r0, sp, #32
   1a3d8:	movw	r2, #1
   1a3dc:	bl	1be8c <__assert_fail@plt+0xae90>
   1a3e0:	str	r0, [sp, #16]
   1a3e4:	b	1a498 <__assert_fail@plt+0x949c>
   1a3e8:	ldr	r1, [sp, #24]
   1a3ec:	add	r0, sp, #32
   1a3f0:	movw	r2, #2
   1a3f4:	bl	1be8c <__assert_fail@plt+0xae90>
   1a3f8:	str	r0, [sp, #16]
   1a3fc:	b	1a498 <__assert_fail@plt+0x949c>
   1a400:	ldr	r1, [sp, #24]
   1a404:	add	r0, sp, #32
   1a408:	movw	r2, #5
   1a40c:	bl	1be8c <__assert_fail@plt+0xae90>
   1a410:	str	r0, [sp, #16]
   1a414:	b	1a498 <__assert_fail@plt+0x949c>
   1a418:	ldr	r1, [sp, #24]
   1a41c:	add	r0, sp, #32
   1a420:	movw	r2, #4
   1a424:	bl	1be8c <__assert_fail@plt+0xae90>
   1a428:	str	r0, [sp, #16]
   1a42c:	b	1a498 <__assert_fail@plt+0x949c>
   1a430:	add	r0, sp, #32
   1a434:	movw	r1, #2
   1a438:	bl	1a508 <__assert_fail@plt+0x950c>
   1a43c:	str	r0, [sp, #16]
   1a440:	b	1a498 <__assert_fail@plt+0x949c>
   1a444:	ldr	r1, [sp, #24]
   1a448:	add	r0, sp, #32
   1a44c:	movw	r2, #8
   1a450:	bl	1be8c <__assert_fail@plt+0xae90>
   1a454:	str	r0, [sp, #16]
   1a458:	b	1a498 <__assert_fail@plt+0x949c>
   1a45c:	ldr	r1, [sp, #24]
   1a460:	add	r0, sp, #32
   1a464:	movw	r2, #7
   1a468:	bl	1be8c <__assert_fail@plt+0xae90>
   1a46c:	str	r0, [sp, #16]
   1a470:	b	1a498 <__assert_fail@plt+0x949c>
   1a474:	ldr	r0, [sp, #32]
   1a478:	ldr	r1, [sp, #36]	; 0x24
   1a47c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a480:	str	r1, [r2, #4]
   1a484:	str	r0, [r2]
   1a488:	ldr	r0, [sp, #28]
   1a48c:	orr	r0, r0, #2
   1a490:	str	r0, [fp, #-4]
   1a494:	b	1a4fc <__assert_fail@plt+0x9500>
   1a498:	ldr	r0, [sp, #16]
   1a49c:	ldr	r1, [sp, #28]
   1a4a0:	orr	r0, r1, r0
   1a4a4:	str	r0, [sp, #28]
   1a4a8:	ldr	r0, [sp, #20]
   1a4ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a4b0:	ldr	r2, [r1]
   1a4b4:	add	r0, r2, r0
   1a4b8:	str	r0, [r1]
   1a4bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4c0:	ldr	r0, [r0]
   1a4c4:	ldrsb	r0, [r0]
   1a4c8:	cmp	r0, #0
   1a4cc:	beq	1a4dc <__assert_fail@plt+0x94e0>
   1a4d0:	ldr	r0, [sp, #28]
   1a4d4:	orr	r0, r0, #2
   1a4d8:	str	r0, [sp, #28]
   1a4dc:	b	1a4e0 <__assert_fail@plt+0x94e4>
   1a4e0:	ldr	r0, [sp, #32]
   1a4e4:	ldr	r1, [sp, #36]	; 0x24
   1a4e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a4ec:	str	r1, [r2, #4]
   1a4f0:	str	r0, [r2]
   1a4f4:	ldr	r0, [sp, #28]
   1a4f8:	str	r0, [fp, #-4]
   1a4fc:	ldr	r0, [fp, #-4]
   1a500:	mov	sp, fp
   1a504:	pop	{fp, pc}
   1a508:	push	{fp, lr}
   1a50c:	mov	fp, sp
   1a510:	sub	sp, sp, #112	; 0x70
   1a514:	str	r0, [fp, #-8]
   1a518:	str	r1, [fp, #-12]
   1a51c:	b	1aa04 <__assert_fail@plt+0x9a08>
   1a520:	b	1a524 <__assert_fail@plt+0x9528>
   1a524:	ldr	r0, [fp, #-12]
   1a528:	cmp	r0, #0
   1a52c:	bge	1a68c <__assert_fail@plt+0x9690>
   1a530:	ldr	r0, [fp, #-8]
   1a534:	ldr	r0, [r0, #4]
   1a538:	cmn	r0, #1
   1a53c:	bgt	1a5e4 <__assert_fail@plt+0x95e8>
   1a540:	b	1a544 <__assert_fail@plt+0x9548>
   1a544:	b	1a548 <__assert_fail@plt+0x954c>
   1a548:	ldr	r0, [fp, #-8]
   1a54c:	ldr	r1, [r0]
   1a550:	ldr	r0, [r0, #4]
   1a554:	ldr	r2, [fp, #-12]
   1a558:	mov	r3, #127	; 0x7f
   1a55c:	sdiv	r2, r3, r2
   1a560:	subs	r1, r1, r2
   1a564:	sbcs	r0, r0, r2, asr #31
   1a568:	blt	1a764 <__assert_fail@plt+0x9768>
   1a56c:	b	1a788 <__assert_fail@plt+0x978c>
   1a570:	b	1a574 <__assert_fail@plt+0x9578>
   1a574:	ldr	r0, [pc, #4092]	; 1b578 <__assert_fail@plt+0xa57c>
   1a578:	ldr	r1, [fp, #-12]
   1a57c:	cmp	r1, r0
   1a580:	blt	1a598 <__assert_fail@plt+0x959c>
   1a584:	b	1a5a4 <__assert_fail@plt+0x95a8>
   1a588:	ldr	r0, [fp, #-12]
   1a58c:	movw	r1, #0
   1a590:	cmp	r1, r0
   1a594:	bge	1a5a4 <__assert_fail@plt+0x95a8>
   1a598:	movw	r0, #0
   1a59c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5a0:	b	1a5bc <__assert_fail@plt+0x95c0>
   1a5a4:	ldr	r0, [fp, #-12]
   1a5a8:	movw	r1, #0
   1a5ac:	sub	r0, r1, r0
   1a5b0:	movw	r1, #127	; 0x7f
   1a5b4:	sdiv	r0, r1, r0
   1a5b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a5c0:	ldr	r1, [fp, #-8]
   1a5c4:	ldr	r2, [r1]
   1a5c8:	ldr	r1, [r1, #4]
   1a5cc:	mvn	r1, r1
   1a5d0:	mvn	r2, r2
   1a5d4:	subs	r2, r2, r0
   1a5d8:	sbcs	r0, r1, r0, asr #31
   1a5dc:	bge	1a764 <__assert_fail@plt+0x9768>
   1a5e0:	b	1a788 <__assert_fail@plt+0x978c>
   1a5e4:	b	1a5e8 <__assert_fail@plt+0x95ec>
   1a5e8:	b	1a664 <__assert_fail@plt+0x9668>
   1a5ec:	b	1a664 <__assert_fail@plt+0x9668>
   1a5f0:	ldr	r0, [fp, #-12]
   1a5f4:	cmn	r0, #1
   1a5f8:	bne	1a664 <__assert_fail@plt+0x9668>
   1a5fc:	b	1a600 <__assert_fail@plt+0x9604>
   1a600:	ldr	r0, [fp, #-8]
   1a604:	ldr	r1, [r0]
   1a608:	ldr	r0, [r0, #4]
   1a60c:	subs	r1, r1, #128	; 0x80
   1a610:	sbc	r0, r0, #0
   1a614:	rsbs	r1, r1, #0
   1a618:	rscs	r0, r0, #0
   1a61c:	blt	1a764 <__assert_fail@plt+0x9768>
   1a620:	b	1a788 <__assert_fail@plt+0x978c>
   1a624:	ldr	r0, [fp, #-8]
   1a628:	ldr	r1, [r0]
   1a62c:	ldr	r0, [r0, #4]
   1a630:	subs	r1, r1, #1
   1a634:	sbcs	r0, r0, #0
   1a638:	blt	1a788 <__assert_fail@plt+0x978c>
   1a63c:	b	1a640 <__assert_fail@plt+0x9644>
   1a640:	ldr	r0, [fp, #-8]
   1a644:	ldr	r1, [r0]
   1a648:	ldr	r0, [r0, #4]
   1a64c:	subs	r1, r1, #1
   1a650:	sbc	r0, r0, #0
   1a654:	rsbs	r1, r1, #127	; 0x7f
   1a658:	rscs	r0, r0, #0
   1a65c:	blt	1a764 <__assert_fail@plt+0x9768>
   1a660:	b	1a788 <__assert_fail@plt+0x978c>
   1a664:	ldr	r0, [fp, #-12]
   1a668:	mvn	r1, #127	; 0x7f
   1a66c:	sdiv	r0, r1, r0
   1a670:	ldr	r1, [fp, #-8]
   1a674:	ldr	r2, [r1]
   1a678:	ldr	r1, [r1, #4]
   1a67c:	subs	r2, r0, r2
   1a680:	rscs	r0, r1, r0, asr #31
   1a684:	blt	1a764 <__assert_fail@plt+0x9768>
   1a688:	b	1a788 <__assert_fail@plt+0x978c>
   1a68c:	ldr	r0, [fp, #-12]
   1a690:	cmp	r0, #0
   1a694:	bne	1a69c <__assert_fail@plt+0x96a0>
   1a698:	b	1a788 <__assert_fail@plt+0x978c>
   1a69c:	ldr	r0, [fp, #-8]
   1a6a0:	ldr	r0, [r0, #4]
   1a6a4:	cmn	r0, #1
   1a6a8:	bgt	1a73c <__assert_fail@plt+0x9740>
   1a6ac:	b	1a6b0 <__assert_fail@plt+0x96b4>
   1a6b0:	b	1a6b4 <__assert_fail@plt+0x96b8>
   1a6b4:	b	1a710 <__assert_fail@plt+0x9714>
   1a6b8:	b	1a710 <__assert_fail@plt+0x9714>
   1a6bc:	ldr	r0, [fp, #-8]
   1a6c0:	ldr	r1, [r0]
   1a6c4:	ldr	r0, [r0, #4]
   1a6c8:	and	r0, r1, r0
   1a6cc:	cmn	r0, #1
   1a6d0:	bne	1a710 <__assert_fail@plt+0x9714>
   1a6d4:	b	1a6d8 <__assert_fail@plt+0x96dc>
   1a6d8:	b	1a6dc <__assert_fail@plt+0x96e0>
   1a6dc:	ldr	r0, [fp, #-12]
   1a6e0:	mvn	r1, #127	; 0x7f
   1a6e4:	add	r0, r0, r1
   1a6e8:	movw	r1, #0
   1a6ec:	cmp	r1, r0
   1a6f0:	blt	1a764 <__assert_fail@plt+0x9768>
   1a6f4:	b	1a788 <__assert_fail@plt+0x978c>
   1a6f8:	ldr	r0, [fp, #-12]
   1a6fc:	sub	r0, r0, #1
   1a700:	movw	r1, #127	; 0x7f
   1a704:	cmp	r1, r0
   1a708:	blt	1a764 <__assert_fail@plt+0x9768>
   1a70c:	b	1a788 <__assert_fail@plt+0x978c>
   1a710:	ldr	r0, [fp, #-8]
   1a714:	ldr	r2, [r0]
   1a718:	ldr	r3, [r0, #4]
   1a71c:	mvn	r0, #127	; 0x7f
   1a720:	mvn	r1, #0
   1a724:	bl	1e35c <__assert_fail@plt+0xd360>
   1a728:	ldr	r2, [fp, #-12]
   1a72c:	subs	r0, r0, r2
   1a730:	sbcs	r1, r1, r2, asr #31
   1a734:	blt	1a764 <__assert_fail@plt+0x9768>
   1a738:	b	1a788 <__assert_fail@plt+0x978c>
   1a73c:	ldr	r0, [fp, #-12]
   1a740:	mov	r1, #127	; 0x7f
   1a744:	sdiv	r0, r1, r0
   1a748:	ldr	r1, [fp, #-8]
   1a74c:	ldr	r2, [r1]
   1a750:	ldr	r1, [r1, #4]
   1a754:	subs	r2, r0, r2
   1a758:	rscs	r0, r1, r0, asr #31
   1a75c:	bge	1a788 <__assert_fail@plt+0x978c>
   1a760:	b	1a764 <__assert_fail@plt+0x9768>
   1a764:	ldr	r0, [fp, #-8]
   1a768:	ldr	r0, [r0]
   1a76c:	ldr	r1, [fp, #-12]
   1a770:	mul	r0, r0, r1
   1a774:	sxtb	r0, r0
   1a778:	asr	r1, r0, #31
   1a77c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a780:	str	r1, [fp, #-20]	; 0xffffffec
   1a784:	b	1be28 <__assert_fail@plt+0xae2c>
   1a788:	ldr	r0, [fp, #-8]
   1a78c:	ldr	r0, [r0]
   1a790:	ldr	r1, [fp, #-12]
   1a794:	mul	r0, r0, r1
   1a798:	sxtb	r0, r0
   1a79c:	asr	r1, r0, #31
   1a7a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a7a4:	str	r1, [fp, #-20]	; 0xffffffec
   1a7a8:	b	1be5c <__assert_fail@plt+0xae60>
   1a7ac:	ldr	r0, [fp, #-12]
   1a7b0:	cmp	r0, #0
   1a7b4:	bge	1a8fc <__assert_fail@plt+0x9900>
   1a7b8:	ldr	r0, [fp, #-8]
   1a7bc:	ldr	r0, [r0, #4]
   1a7c0:	cmn	r0, #1
   1a7c4:	bgt	1a86c <__assert_fail@plt+0x9870>
   1a7c8:	b	1a7cc <__assert_fail@plt+0x97d0>
   1a7cc:	b	1a7d0 <__assert_fail@plt+0x97d4>
   1a7d0:	ldr	r0, [fp, #-8]
   1a7d4:	ldr	r1, [r0]
   1a7d8:	ldr	r0, [r0, #4]
   1a7dc:	ldr	r2, [fp, #-12]
   1a7e0:	mov	r3, #255	; 0xff
   1a7e4:	sdiv	r2, r3, r2
   1a7e8:	subs	r1, r1, r2
   1a7ec:	sbcs	r0, r0, r2, asr #31
   1a7f0:	blt	1a9bc <__assert_fail@plt+0x99c0>
   1a7f4:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a7f8:	b	1a7fc <__assert_fail@plt+0x9800>
   1a7fc:	ldr	r0, [pc, #3444]	; 1b578 <__assert_fail@plt+0xa57c>
   1a800:	ldr	r1, [fp, #-12]
   1a804:	cmp	r1, r0
   1a808:	blt	1a820 <__assert_fail@plt+0x9824>
   1a80c:	b	1a82c <__assert_fail@plt+0x9830>
   1a810:	ldr	r0, [fp, #-12]
   1a814:	movw	r1, #0
   1a818:	cmp	r1, r0
   1a81c:	bge	1a82c <__assert_fail@plt+0x9830>
   1a820:	movw	r0, #0
   1a824:	str	r0, [fp, #-32]	; 0xffffffe0
   1a828:	b	1a844 <__assert_fail@plt+0x9848>
   1a82c:	ldr	r0, [fp, #-12]
   1a830:	movw	r1, #0
   1a834:	sub	r0, r1, r0
   1a838:	movw	r1, #255	; 0xff
   1a83c:	sdiv	r0, r1, r0
   1a840:	str	r0, [fp, #-32]	; 0xffffffe0
   1a844:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a848:	ldr	r1, [fp, #-8]
   1a84c:	ldr	r2, [r1]
   1a850:	ldr	r1, [r1, #4]
   1a854:	mvn	r1, r1
   1a858:	mvn	r2, r2
   1a85c:	subs	r2, r2, r0
   1a860:	sbcs	r0, r1, r0, asr #31
   1a864:	bge	1a9bc <__assert_fail@plt+0x99c0>
   1a868:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a86c:	b	1a870 <__assert_fail@plt+0x9874>
   1a870:	b	1a8e0 <__assert_fail@plt+0x98e4>
   1a874:	b	1a8e0 <__assert_fail@plt+0x98e4>
   1a878:	ldr	r0, [fp, #-12]
   1a87c:	cmn	r0, #1
   1a880:	bne	1a8e0 <__assert_fail@plt+0x98e4>
   1a884:	b	1a888 <__assert_fail@plt+0x988c>
   1a888:	ldr	r0, [fp, #-8]
   1a88c:	ldr	r1, [r0]
   1a890:	ldr	r0, [r0, #4]
   1a894:	rsbs	r1, r1, #0
   1a898:	rscs	r0, r0, #0
   1a89c:	blt	1a9bc <__assert_fail@plt+0x99c0>
   1a8a0:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a8a4:	ldr	r0, [fp, #-8]
   1a8a8:	ldr	r1, [r0]
   1a8ac:	ldr	r0, [r0, #4]
   1a8b0:	subs	r1, r1, #1
   1a8b4:	sbcs	r0, r0, #0
   1a8b8:	blt	1a9e0 <__assert_fail@plt+0x99e4>
   1a8bc:	b	1a8c0 <__assert_fail@plt+0x98c4>
   1a8c0:	ldr	r0, [fp, #-8]
   1a8c4:	ldr	r1, [r0]
   1a8c8:	ldr	r0, [r0, #4]
   1a8cc:	subs	r1, r1, #1
   1a8d0:	sbc	r0, r0, #0
   1a8d4:	cmn	r0, #1
   1a8d8:	bgt	1a9bc <__assert_fail@plt+0x99c0>
   1a8dc:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a8e0:	ldr	r0, [fp, #-8]
   1a8e4:	ldr	r1, [r0]
   1a8e8:	ldr	r0, [r0, #4]
   1a8ec:	rsbs	r1, r1, #0
   1a8f0:	rscs	r0, r0, #0
   1a8f4:	blt	1a9bc <__assert_fail@plt+0x99c0>
   1a8f8:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a8fc:	ldr	r0, [fp, #-12]
   1a900:	cmp	r0, #0
   1a904:	bne	1a90c <__assert_fail@plt+0x9910>
   1a908:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a90c:	ldr	r0, [fp, #-8]
   1a910:	ldr	r0, [r0, #4]
   1a914:	cmn	r0, #1
   1a918:	bgt	1a994 <__assert_fail@plt+0x9998>
   1a91c:	b	1a920 <__assert_fail@plt+0x9924>
   1a920:	b	1a924 <__assert_fail@plt+0x9928>
   1a924:	b	1a97c <__assert_fail@plt+0x9980>
   1a928:	b	1a97c <__assert_fail@plt+0x9980>
   1a92c:	ldr	r0, [fp, #-8]
   1a930:	ldr	r1, [r0]
   1a934:	ldr	r0, [r0, #4]
   1a938:	and	r0, r1, r0
   1a93c:	cmn	r0, #1
   1a940:	bne	1a97c <__assert_fail@plt+0x9980>
   1a944:	b	1a948 <__assert_fail@plt+0x994c>
   1a948:	b	1a94c <__assert_fail@plt+0x9950>
   1a94c:	ldr	r0, [fp, #-12]
   1a950:	add	r0, r0, #0
   1a954:	movw	r1, #0
   1a958:	cmp	r1, r0
   1a95c:	blt	1a9bc <__assert_fail@plt+0x99c0>
   1a960:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a964:	ldr	r0, [fp, #-12]
   1a968:	sub	r0, r0, #1
   1a96c:	mvn	r1, #0
   1a970:	cmp	r1, r0
   1a974:	blt	1a9bc <__assert_fail@plt+0x99c0>
   1a978:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a97c:	ldr	r0, [fp, #-12]
   1a980:	rsbs	r1, r0, #0
   1a984:	mov	r2, #0
   1a988:	sbcs	r0, r2, r0, asr #31
   1a98c:	blt	1a9bc <__assert_fail@plt+0x99c0>
   1a990:	b	1a9e0 <__assert_fail@plt+0x99e4>
   1a994:	ldr	r0, [fp, #-12]
   1a998:	mov	r1, #255	; 0xff
   1a99c:	sdiv	r0, r1, r0
   1a9a0:	ldr	r1, [fp, #-8]
   1a9a4:	ldr	r2, [r1]
   1a9a8:	ldr	r1, [r1, #4]
   1a9ac:	subs	r2, r0, r2
   1a9b0:	rscs	r0, r1, r0, asr #31
   1a9b4:	bge	1a9e0 <__assert_fail@plt+0x99e4>
   1a9b8:	b	1a9bc <__assert_fail@plt+0x99c0>
   1a9bc:	ldr	r0, [fp, #-8]
   1a9c0:	ldr	r0, [r0]
   1a9c4:	ldr	r1, [fp, #-12]
   1a9c8:	mul	r0, r0, r1
   1a9cc:	uxtb	r0, r0
   1a9d0:	mov	r1, #0
   1a9d4:	str	r1, [fp, #-20]	; 0xffffffec
   1a9d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9dc:	b	1be28 <__assert_fail@plt+0xae2c>
   1a9e0:	ldr	r0, [fp, #-8]
   1a9e4:	ldr	r0, [r0]
   1a9e8:	ldr	r1, [fp, #-12]
   1a9ec:	mul	r0, r0, r1
   1a9f0:	uxtb	r0, r0
   1a9f4:	mov	r1, #0
   1a9f8:	str	r1, [fp, #-20]	; 0xffffffec
   1a9fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1aa00:	b	1be5c <__assert_fail@plt+0xae60>
   1aa04:	b	1aef8 <__assert_fail@plt+0x9efc>
   1aa08:	b	1aa0c <__assert_fail@plt+0x9a10>
   1aa0c:	ldr	r0, [fp, #-12]
   1aa10:	cmp	r0, #0
   1aa14:	bge	1ab7c <__assert_fail@plt+0x9b80>
   1aa18:	ldr	r0, [fp, #-8]
   1aa1c:	ldr	r0, [r0, #4]
   1aa20:	cmn	r0, #1
   1aa24:	bgt	1aacc <__assert_fail@plt+0x9ad0>
   1aa28:	b	1aa2c <__assert_fail@plt+0x9a30>
   1aa2c:	b	1aa30 <__assert_fail@plt+0x9a34>
   1aa30:	ldr	r0, [fp, #-8]
   1aa34:	ldr	r1, [r0]
   1aa38:	ldr	r0, [r0, #4]
   1aa3c:	ldr	r2, [fp, #-12]
   1aa40:	movw	r3, #32767	; 0x7fff
   1aa44:	sdiv	r2, r3, r2
   1aa48:	subs	r1, r1, r2
   1aa4c:	sbcs	r0, r0, r2, asr #31
   1aa50:	blt	1ac58 <__assert_fail@plt+0x9c5c>
   1aa54:	b	1ac7c <__assert_fail@plt+0x9c80>
   1aa58:	b	1aa5c <__assert_fail@plt+0x9a60>
   1aa5c:	ldr	r0, [pc, #2836]	; 1b578 <__assert_fail@plt+0xa57c>
   1aa60:	ldr	r1, [fp, #-12]
   1aa64:	cmp	r1, r0
   1aa68:	blt	1aa80 <__assert_fail@plt+0x9a84>
   1aa6c:	b	1aa8c <__assert_fail@plt+0x9a90>
   1aa70:	ldr	r0, [fp, #-12]
   1aa74:	movw	r1, #0
   1aa78:	cmp	r1, r0
   1aa7c:	bge	1aa8c <__assert_fail@plt+0x9a90>
   1aa80:	movw	r0, #0
   1aa84:	str	r0, [fp, #-36]	; 0xffffffdc
   1aa88:	b	1aaa4 <__assert_fail@plt+0x9aa8>
   1aa8c:	ldr	r0, [fp, #-12]
   1aa90:	movw	r1, #0
   1aa94:	sub	r0, r1, r0
   1aa98:	movw	r1, #32767	; 0x7fff
   1aa9c:	sdiv	r0, r1, r0
   1aaa0:	str	r0, [fp, #-36]	; 0xffffffdc
   1aaa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aaa8:	ldr	r1, [fp, #-8]
   1aaac:	ldr	r2, [r1]
   1aab0:	ldr	r1, [r1, #4]
   1aab4:	mvn	r1, r1
   1aab8:	mvn	r2, r2
   1aabc:	subs	r2, r2, r0
   1aac0:	sbcs	r0, r1, r0, asr #31
   1aac4:	bge	1ac58 <__assert_fail@plt+0x9c5c>
   1aac8:	b	1ac7c <__assert_fail@plt+0x9c80>
   1aacc:	b	1aad0 <__assert_fail@plt+0x9ad4>
   1aad0:	b	1ab50 <__assert_fail@plt+0x9b54>
   1aad4:	b	1ab50 <__assert_fail@plt+0x9b54>
   1aad8:	ldr	r0, [fp, #-12]
   1aadc:	cmn	r0, #1
   1aae0:	bne	1ab50 <__assert_fail@plt+0x9b54>
   1aae4:	b	1aae8 <__assert_fail@plt+0x9aec>
   1aae8:	ldr	r0, [fp, #-8]
   1aaec:	ldr	r1, [r0]
   1aaf0:	ldr	r0, [r0, #4]
   1aaf4:	subs	r1, r1, #32768	; 0x8000
   1aaf8:	sbc	r0, r0, #0
   1aafc:	rsbs	r1, r1, #0
   1ab00:	rscs	r0, r0, #0
   1ab04:	blt	1ac58 <__assert_fail@plt+0x9c5c>
   1ab08:	b	1ac7c <__assert_fail@plt+0x9c80>
   1ab0c:	ldr	r0, [fp, #-8]
   1ab10:	ldr	r1, [r0]
   1ab14:	ldr	r0, [r0, #4]
   1ab18:	subs	r1, r1, #1
   1ab1c:	sbcs	r0, r0, #0
   1ab20:	blt	1ac7c <__assert_fail@plt+0x9c80>
   1ab24:	b	1ab28 <__assert_fail@plt+0x9b2c>
   1ab28:	ldr	r0, [fp, #-8]
   1ab2c:	ldr	r1, [r0]
   1ab30:	ldr	r0, [r0, #4]
   1ab34:	subs	r1, r1, #1
   1ab38:	sbc	r0, r0, #0
   1ab3c:	movw	r2, #32767	; 0x7fff
   1ab40:	subs	r1, r2, r1
   1ab44:	rscs	r0, r0, #0
   1ab48:	blt	1ac58 <__assert_fail@plt+0x9c5c>
   1ab4c:	b	1ac7c <__assert_fail@plt+0x9c80>
   1ab50:	ldr	r0, [fp, #-12]
   1ab54:	movw	r1, #32768	; 0x8000
   1ab58:	movt	r1, #65535	; 0xffff
   1ab5c:	sdiv	r0, r1, r0
   1ab60:	ldr	r1, [fp, #-8]
   1ab64:	ldr	r2, [r1]
   1ab68:	ldr	r1, [r1, #4]
   1ab6c:	subs	r2, r0, r2
   1ab70:	rscs	r0, r1, r0, asr #31
   1ab74:	blt	1ac58 <__assert_fail@plt+0x9c5c>
   1ab78:	b	1ac7c <__assert_fail@plt+0x9c80>
   1ab7c:	ldr	r0, [fp, #-12]
   1ab80:	cmp	r0, #0
   1ab84:	bne	1ab8c <__assert_fail@plt+0x9b90>
   1ab88:	b	1ac7c <__assert_fail@plt+0x9c80>
   1ab8c:	ldr	r0, [fp, #-8]
   1ab90:	ldr	r0, [r0, #4]
   1ab94:	cmn	r0, #1
   1ab98:	bgt	1ac30 <__assert_fail@plt+0x9c34>
   1ab9c:	b	1aba0 <__assert_fail@plt+0x9ba4>
   1aba0:	b	1aba4 <__assert_fail@plt+0x9ba8>
   1aba4:	b	1ac00 <__assert_fail@plt+0x9c04>
   1aba8:	b	1ac00 <__assert_fail@plt+0x9c04>
   1abac:	ldr	r0, [fp, #-8]
   1abb0:	ldr	r1, [r0]
   1abb4:	ldr	r0, [r0, #4]
   1abb8:	and	r0, r1, r0
   1abbc:	cmn	r0, #1
   1abc0:	bne	1ac00 <__assert_fail@plt+0x9c04>
   1abc4:	b	1abc8 <__assert_fail@plt+0x9bcc>
   1abc8:	b	1abcc <__assert_fail@plt+0x9bd0>
   1abcc:	ldr	r0, [pc, #4032]	; 1bb94 <__assert_fail@plt+0xab98>
   1abd0:	ldr	r1, [fp, #-12]
   1abd4:	add	r0, r1, r0
   1abd8:	movw	r1, #0
   1abdc:	cmp	r1, r0
   1abe0:	blt	1ac58 <__assert_fail@plt+0x9c5c>
   1abe4:	b	1ac7c <__assert_fail@plt+0x9c80>
   1abe8:	ldr	r0, [fp, #-12]
   1abec:	sub	r0, r0, #1
   1abf0:	movw	r1, #32767	; 0x7fff
   1abf4:	cmp	r1, r0
   1abf8:	blt	1ac58 <__assert_fail@plt+0x9c5c>
   1abfc:	b	1ac7c <__assert_fail@plt+0x9c80>
   1ac00:	ldr	r0, [fp, #-8]
   1ac04:	ldr	r2, [r0]
   1ac08:	ldr	r3, [r0, #4]
   1ac0c:	movw	r0, #32768	; 0x8000
   1ac10:	movt	r0, #65535	; 0xffff
   1ac14:	mvn	r1, #0
   1ac18:	bl	1e35c <__assert_fail@plt+0xd360>
   1ac1c:	ldr	r2, [fp, #-12]
   1ac20:	subs	r0, r0, r2
   1ac24:	sbcs	r1, r1, r2, asr #31
   1ac28:	blt	1ac58 <__assert_fail@plt+0x9c5c>
   1ac2c:	b	1ac7c <__assert_fail@plt+0x9c80>
   1ac30:	ldr	r0, [fp, #-12]
   1ac34:	movw	r1, #32767	; 0x7fff
   1ac38:	sdiv	r0, r1, r0
   1ac3c:	ldr	r1, [fp, #-8]
   1ac40:	ldr	r2, [r1]
   1ac44:	ldr	r1, [r1, #4]
   1ac48:	subs	r2, r0, r2
   1ac4c:	rscs	r0, r1, r0, asr #31
   1ac50:	bge	1ac7c <__assert_fail@plt+0x9c80>
   1ac54:	b	1ac58 <__assert_fail@plt+0x9c5c>
   1ac58:	ldr	r0, [fp, #-8]
   1ac5c:	ldr	r0, [r0]
   1ac60:	ldr	r1, [fp, #-12]
   1ac64:	mul	r0, r0, r1
   1ac68:	sxth	r0, r0
   1ac6c:	asr	r1, r0, #31
   1ac70:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac74:	str	r1, [fp, #-20]	; 0xffffffec
   1ac78:	b	1be28 <__assert_fail@plt+0xae2c>
   1ac7c:	ldr	r0, [fp, #-8]
   1ac80:	ldr	r0, [r0]
   1ac84:	ldr	r1, [fp, #-12]
   1ac88:	mul	r0, r0, r1
   1ac8c:	sxth	r0, r0
   1ac90:	asr	r1, r0, #31
   1ac94:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac98:	str	r1, [fp, #-20]	; 0xffffffec
   1ac9c:	b	1be5c <__assert_fail@plt+0xae60>
   1aca0:	ldr	r0, [fp, #-12]
   1aca4:	cmp	r0, #0
   1aca8:	bge	1adf0 <__assert_fail@plt+0x9df4>
   1acac:	ldr	r0, [fp, #-8]
   1acb0:	ldr	r0, [r0, #4]
   1acb4:	cmn	r0, #1
   1acb8:	bgt	1ad60 <__assert_fail@plt+0x9d64>
   1acbc:	b	1acc0 <__assert_fail@plt+0x9cc4>
   1acc0:	b	1acc4 <__assert_fail@plt+0x9cc8>
   1acc4:	ldr	r0, [fp, #-8]
   1acc8:	ldr	r1, [r0]
   1accc:	ldr	r0, [r0, #4]
   1acd0:	ldr	r2, [fp, #-12]
   1acd4:	movw	r3, #65535	; 0xffff
   1acd8:	sdiv	r2, r3, r2
   1acdc:	subs	r1, r1, r2
   1ace0:	sbcs	r0, r0, r2, asr #31
   1ace4:	blt	1aeb0 <__assert_fail@plt+0x9eb4>
   1ace8:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1acec:	b	1acf0 <__assert_fail@plt+0x9cf4>
   1acf0:	ldr	r0, [pc, #2176]	; 1b578 <__assert_fail@plt+0xa57c>
   1acf4:	ldr	r1, [fp, #-12]
   1acf8:	cmp	r1, r0
   1acfc:	blt	1ad14 <__assert_fail@plt+0x9d18>
   1ad00:	b	1ad20 <__assert_fail@plt+0x9d24>
   1ad04:	ldr	r0, [fp, #-12]
   1ad08:	movw	r1, #0
   1ad0c:	cmp	r1, r0
   1ad10:	bge	1ad20 <__assert_fail@plt+0x9d24>
   1ad14:	movw	r0, #0
   1ad18:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad1c:	b	1ad38 <__assert_fail@plt+0x9d3c>
   1ad20:	ldr	r0, [fp, #-12]
   1ad24:	movw	r1, #0
   1ad28:	sub	r0, r1, r0
   1ad2c:	movw	r1, #65535	; 0xffff
   1ad30:	sdiv	r0, r1, r0
   1ad34:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad3c:	ldr	r1, [fp, #-8]
   1ad40:	ldr	r2, [r1]
   1ad44:	ldr	r1, [r1, #4]
   1ad48:	mvn	r1, r1
   1ad4c:	mvn	r2, r2
   1ad50:	subs	r2, r2, r0
   1ad54:	sbcs	r0, r1, r0, asr #31
   1ad58:	bge	1aeb0 <__assert_fail@plt+0x9eb4>
   1ad5c:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1ad60:	b	1ad64 <__assert_fail@plt+0x9d68>
   1ad64:	b	1add4 <__assert_fail@plt+0x9dd8>
   1ad68:	b	1add4 <__assert_fail@plt+0x9dd8>
   1ad6c:	ldr	r0, [fp, #-12]
   1ad70:	cmn	r0, #1
   1ad74:	bne	1add4 <__assert_fail@plt+0x9dd8>
   1ad78:	b	1ad7c <__assert_fail@plt+0x9d80>
   1ad7c:	ldr	r0, [fp, #-8]
   1ad80:	ldr	r1, [r0]
   1ad84:	ldr	r0, [r0, #4]
   1ad88:	rsbs	r1, r1, #0
   1ad8c:	rscs	r0, r0, #0
   1ad90:	blt	1aeb0 <__assert_fail@plt+0x9eb4>
   1ad94:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1ad98:	ldr	r0, [fp, #-8]
   1ad9c:	ldr	r1, [r0]
   1ada0:	ldr	r0, [r0, #4]
   1ada4:	subs	r1, r1, #1
   1ada8:	sbcs	r0, r0, #0
   1adac:	blt	1aed4 <__assert_fail@plt+0x9ed8>
   1adb0:	b	1adb4 <__assert_fail@plt+0x9db8>
   1adb4:	ldr	r0, [fp, #-8]
   1adb8:	ldr	r1, [r0]
   1adbc:	ldr	r0, [r0, #4]
   1adc0:	subs	r1, r1, #1
   1adc4:	sbc	r0, r0, #0
   1adc8:	cmn	r0, #1
   1adcc:	bgt	1aeb0 <__assert_fail@plt+0x9eb4>
   1add0:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1add4:	ldr	r0, [fp, #-8]
   1add8:	ldr	r1, [r0]
   1addc:	ldr	r0, [r0, #4]
   1ade0:	rsbs	r1, r1, #0
   1ade4:	rscs	r0, r0, #0
   1ade8:	blt	1aeb0 <__assert_fail@plt+0x9eb4>
   1adec:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1adf0:	ldr	r0, [fp, #-12]
   1adf4:	cmp	r0, #0
   1adf8:	bne	1ae00 <__assert_fail@plt+0x9e04>
   1adfc:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1ae00:	ldr	r0, [fp, #-8]
   1ae04:	ldr	r0, [r0, #4]
   1ae08:	cmn	r0, #1
   1ae0c:	bgt	1ae88 <__assert_fail@plt+0x9e8c>
   1ae10:	b	1ae14 <__assert_fail@plt+0x9e18>
   1ae14:	b	1ae18 <__assert_fail@plt+0x9e1c>
   1ae18:	b	1ae70 <__assert_fail@plt+0x9e74>
   1ae1c:	b	1ae70 <__assert_fail@plt+0x9e74>
   1ae20:	ldr	r0, [fp, #-8]
   1ae24:	ldr	r1, [r0]
   1ae28:	ldr	r0, [r0, #4]
   1ae2c:	and	r0, r1, r0
   1ae30:	cmn	r0, #1
   1ae34:	bne	1ae70 <__assert_fail@plt+0x9e74>
   1ae38:	b	1ae3c <__assert_fail@plt+0x9e40>
   1ae3c:	b	1ae40 <__assert_fail@plt+0x9e44>
   1ae40:	ldr	r0, [fp, #-12]
   1ae44:	add	r0, r0, #0
   1ae48:	movw	r1, #0
   1ae4c:	cmp	r1, r0
   1ae50:	blt	1aeb0 <__assert_fail@plt+0x9eb4>
   1ae54:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1ae58:	ldr	r0, [fp, #-12]
   1ae5c:	sub	r0, r0, #1
   1ae60:	mvn	r1, #0
   1ae64:	cmp	r1, r0
   1ae68:	blt	1aeb0 <__assert_fail@plt+0x9eb4>
   1ae6c:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1ae70:	ldr	r0, [fp, #-12]
   1ae74:	rsbs	r1, r0, #0
   1ae78:	mov	r2, #0
   1ae7c:	sbcs	r0, r2, r0, asr #31
   1ae80:	blt	1aeb0 <__assert_fail@plt+0x9eb4>
   1ae84:	b	1aed4 <__assert_fail@plt+0x9ed8>
   1ae88:	ldr	r0, [fp, #-12]
   1ae8c:	movw	r1, #65535	; 0xffff
   1ae90:	sdiv	r0, r1, r0
   1ae94:	ldr	r1, [fp, #-8]
   1ae98:	ldr	r2, [r1]
   1ae9c:	ldr	r1, [r1, #4]
   1aea0:	subs	r2, r0, r2
   1aea4:	rscs	r0, r1, r0, asr #31
   1aea8:	bge	1aed4 <__assert_fail@plt+0x9ed8>
   1aeac:	b	1aeb0 <__assert_fail@plt+0x9eb4>
   1aeb0:	ldr	r0, [fp, #-8]
   1aeb4:	ldr	r0, [r0]
   1aeb8:	ldr	r1, [fp, #-12]
   1aebc:	mul	r0, r0, r1
   1aec0:	uxth	r0, r0
   1aec4:	mov	r1, #0
   1aec8:	str	r1, [fp, #-20]	; 0xffffffec
   1aecc:	str	r0, [fp, #-24]	; 0xffffffe8
   1aed0:	b	1be28 <__assert_fail@plt+0xae2c>
   1aed4:	ldr	r0, [fp, #-8]
   1aed8:	ldr	r0, [r0]
   1aedc:	ldr	r1, [fp, #-12]
   1aee0:	mul	r0, r0, r1
   1aee4:	uxth	r0, r0
   1aee8:	mov	r1, #0
   1aeec:	str	r1, [fp, #-20]	; 0xffffffec
   1aef0:	str	r0, [fp, #-24]	; 0xffffffe8
   1aef4:	b	1be5c <__assert_fail@plt+0xae60>
   1aef8:	b	1b3c4 <__assert_fail@plt+0xa3c8>
   1aefc:	b	1af00 <__assert_fail@plt+0x9f04>
   1af00:	ldr	r0, [fp, #-12]
   1af04:	cmp	r0, #0
   1af08:	bge	1b060 <__assert_fail@plt+0xa064>
   1af0c:	ldr	r0, [fp, #-8]
   1af10:	ldr	r0, [r0, #4]
   1af14:	cmn	r0, #1
   1af18:	bgt	1afc0 <__assert_fail@plt+0x9fc4>
   1af1c:	b	1af20 <__assert_fail@plt+0x9f24>
   1af20:	b	1af24 <__assert_fail@plt+0x9f28>
   1af24:	ldr	r0, [fp, #-8]
   1af28:	ldr	r1, [r0]
   1af2c:	ldr	r0, [r0, #4]
   1af30:	ldr	r2, [fp, #-12]
   1af34:	mvn	r3, #-2147483648	; 0x80000000
   1af38:	sdiv	r2, r3, r2
   1af3c:	subs	r1, r1, r2
   1af40:	sbcs	r0, r0, r2, asr #31
   1af44:	blt	1b134 <__assert_fail@plt+0xa138>
   1af48:	b	1b154 <__assert_fail@plt+0xa158>
   1af4c:	b	1af50 <__assert_fail@plt+0x9f54>
   1af50:	ldr	r0, [pc, #3884]	; 1be84 <__assert_fail@plt+0xae88>
   1af54:	ldr	r1, [fp, #-12]
   1af58:	cmp	r1, r0
   1af5c:	blt	1af74 <__assert_fail@plt+0x9f78>
   1af60:	b	1af80 <__assert_fail@plt+0x9f84>
   1af64:	ldr	r0, [fp, #-12]
   1af68:	movw	r1, #0
   1af6c:	cmp	r1, r0
   1af70:	bge	1af80 <__assert_fail@plt+0x9f84>
   1af74:	movw	r0, #0
   1af78:	str	r0, [fp, #-44]	; 0xffffffd4
   1af7c:	b	1af98 <__assert_fail@plt+0x9f9c>
   1af80:	ldr	r0, [pc, #3840]	; 1be88 <__assert_fail@plt+0xae8c>
   1af84:	ldr	r1, [fp, #-12]
   1af88:	movw	r2, #0
   1af8c:	sub	r1, r2, r1
   1af90:	sdiv	r0, r0, r1
   1af94:	str	r0, [fp, #-44]	; 0xffffffd4
   1af98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af9c:	ldr	r1, [fp, #-8]
   1afa0:	ldr	r2, [r1]
   1afa4:	ldr	r1, [r1, #4]
   1afa8:	mvn	r1, r1
   1afac:	mvn	r2, r2
   1afb0:	subs	r2, r2, r0
   1afb4:	sbcs	r0, r1, r0, asr #31
   1afb8:	bge	1b134 <__assert_fail@plt+0xa138>
   1afbc:	b	1b154 <__assert_fail@plt+0xa158>
   1afc0:	ldr	r0, [fp, #-12]
   1afc4:	cmn	r0, #1
   1afc8:	bne	1b038 <__assert_fail@plt+0xa03c>
   1afcc:	b	1afd0 <__assert_fail@plt+0x9fd4>
   1afd0:	ldr	r0, [fp, #-8]
   1afd4:	ldr	r1, [r0]
   1afd8:	ldr	r0, [r0, #4]
   1afdc:	adds	r1, r1, #-2147483648	; 0x80000000
   1afe0:	sbc	r0, r0, #0
   1afe4:	rsbs	r1, r1, #0
   1afe8:	rscs	r0, r0, #0
   1afec:	blt	1b134 <__assert_fail@plt+0xa138>
   1aff0:	b	1b154 <__assert_fail@plt+0xa158>
   1aff4:	ldr	r0, [fp, #-8]
   1aff8:	ldr	r1, [r0]
   1affc:	ldr	r0, [r0, #4]
   1b000:	subs	r1, r1, #1
   1b004:	sbcs	r0, r0, #0
   1b008:	blt	1b154 <__assert_fail@plt+0xa158>
   1b00c:	b	1b010 <__assert_fail@plt+0xa014>
   1b010:	ldr	r0, [fp, #-8]
   1b014:	ldr	r1, [r0]
   1b018:	ldr	r0, [r0, #4]
   1b01c:	subs	r1, r1, #1
   1b020:	sbc	r0, r0, #0
   1b024:	mvn	r2, #-2147483648	; 0x80000000
   1b028:	subs	r1, r2, r1
   1b02c:	rscs	r0, r0, #0
   1b030:	blt	1b134 <__assert_fail@plt+0xa138>
   1b034:	b	1b154 <__assert_fail@plt+0xa158>
   1b038:	ldr	r0, [fp, #-12]
   1b03c:	mov	r1, #-2147483648	; 0x80000000
   1b040:	sdiv	r0, r1, r0
   1b044:	ldr	r1, [fp, #-8]
   1b048:	ldr	r2, [r1]
   1b04c:	ldr	r1, [r1, #4]
   1b050:	subs	r2, r0, r2
   1b054:	rscs	r0, r1, r0, asr #31
   1b058:	blt	1b134 <__assert_fail@plt+0xa138>
   1b05c:	b	1b154 <__assert_fail@plt+0xa158>
   1b060:	ldr	r0, [fp, #-12]
   1b064:	cmp	r0, #0
   1b068:	bne	1b070 <__assert_fail@plt+0xa074>
   1b06c:	b	1b154 <__assert_fail@plt+0xa158>
   1b070:	ldr	r0, [fp, #-8]
   1b074:	ldr	r0, [r0, #4]
   1b078:	cmn	r0, #1
   1b07c:	bgt	1b10c <__assert_fail@plt+0xa110>
   1b080:	b	1b084 <__assert_fail@plt+0xa088>
   1b084:	b	1b088 <__assert_fail@plt+0xa08c>
   1b088:	b	1b0e0 <__assert_fail@plt+0xa0e4>
   1b08c:	b	1b0e0 <__assert_fail@plt+0xa0e4>
   1b090:	ldr	r0, [fp, #-8]
   1b094:	ldr	r1, [r0]
   1b098:	ldr	r0, [r0, #4]
   1b09c:	and	r0, r1, r0
   1b0a0:	cmn	r0, #1
   1b0a4:	bne	1b0e0 <__assert_fail@plt+0xa0e4>
   1b0a8:	b	1b0ac <__assert_fail@plt+0xa0b0>
   1b0ac:	b	1b0b0 <__assert_fail@plt+0xa0b4>
   1b0b0:	ldr	r0, [fp, #-12]
   1b0b4:	add	r0, r0, #-2147483648	; 0x80000000
   1b0b8:	movw	r1, #0
   1b0bc:	cmp	r1, r0
   1b0c0:	blt	1b134 <__assert_fail@plt+0xa138>
   1b0c4:	b	1b154 <__assert_fail@plt+0xa158>
   1b0c8:	ldr	r0, [pc, #3512]	; 1be88 <__assert_fail@plt+0xae8c>
   1b0cc:	ldr	r1, [fp, #-12]
   1b0d0:	sub	r1, r1, #1
   1b0d4:	cmp	r0, r1
   1b0d8:	blt	1b134 <__assert_fail@plt+0xa138>
   1b0dc:	b	1b154 <__assert_fail@plt+0xa158>
   1b0e0:	ldr	r0, [fp, #-8]
   1b0e4:	ldr	r2, [r0]
   1b0e8:	ldr	r3, [r0, #4]
   1b0ec:	mov	r0, #-2147483648	; 0x80000000
   1b0f0:	mvn	r1, #0
   1b0f4:	bl	1e35c <__assert_fail@plt+0xd360>
   1b0f8:	ldr	r2, [fp, #-12]
   1b0fc:	subs	r0, r0, r2
   1b100:	sbcs	r1, r1, r2, asr #31
   1b104:	blt	1b134 <__assert_fail@plt+0xa138>
   1b108:	b	1b154 <__assert_fail@plt+0xa158>
   1b10c:	ldr	r0, [fp, #-12]
   1b110:	mvn	r1, #-2147483648	; 0x80000000
   1b114:	sdiv	r0, r1, r0
   1b118:	ldr	r1, [fp, #-8]
   1b11c:	ldr	r2, [r1]
   1b120:	ldr	r1, [r1, #4]
   1b124:	subs	r2, r0, r2
   1b128:	rscs	r0, r1, r0, asr #31
   1b12c:	bge	1b154 <__assert_fail@plt+0xa158>
   1b130:	b	1b134 <__assert_fail@plt+0xa138>
   1b134:	ldr	r0, [fp, #-8]
   1b138:	ldr	r0, [r0]
   1b13c:	ldr	r1, [fp, #-12]
   1b140:	mul	r0, r0, r1
   1b144:	asr	r1, r0, #31
   1b148:	str	r0, [fp, #-24]	; 0xffffffe8
   1b14c:	str	r1, [fp, #-20]	; 0xffffffec
   1b150:	b	1be28 <__assert_fail@plt+0xae2c>
   1b154:	ldr	r0, [fp, #-8]
   1b158:	ldr	r0, [r0]
   1b15c:	ldr	r1, [fp, #-12]
   1b160:	mul	r0, r0, r1
   1b164:	asr	r1, r0, #31
   1b168:	str	r0, [fp, #-24]	; 0xffffffe8
   1b16c:	str	r1, [fp, #-20]	; 0xffffffec
   1b170:	b	1be5c <__assert_fail@plt+0xae60>
   1b174:	ldr	r0, [fp, #-12]
   1b178:	cmp	r0, #0
   1b17c:	bge	1b2c4 <__assert_fail@plt+0xa2c8>
   1b180:	ldr	r0, [fp, #-8]
   1b184:	ldr	r0, [r0, #4]
   1b188:	cmn	r0, #1
   1b18c:	bgt	1b234 <__assert_fail@plt+0xa238>
   1b190:	b	1b194 <__assert_fail@plt+0xa198>
   1b194:	b	1b1c0 <__assert_fail@plt+0xa1c4>
   1b198:	ldr	r0, [fp, #-8]
   1b19c:	ldr	r1, [r0]
   1b1a0:	ldr	r0, [r0, #4]
   1b1a4:	ldr	r2, [fp, #-12]
   1b1a8:	mvn	r3, #0
   1b1ac:	udiv	r2, r3, r2
   1b1b0:	subs	r1, r1, r2
   1b1b4:	sbcs	r0, r0, #0
   1b1b8:	blt	1b384 <__assert_fail@plt+0xa388>
   1b1bc:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b1c0:	b	1b1c4 <__assert_fail@plt+0xa1c8>
   1b1c4:	ldr	r0, [pc, #3256]	; 1be84 <__assert_fail@plt+0xae88>
   1b1c8:	ldr	r1, [fp, #-12]
   1b1cc:	cmp	r1, r0
   1b1d0:	blt	1b1e8 <__assert_fail@plt+0xa1ec>
   1b1d4:	b	1b1f4 <__assert_fail@plt+0xa1f8>
   1b1d8:	ldr	r0, [fp, #-12]
   1b1dc:	movw	r1, #0
   1b1e0:	cmp	r1, r0
   1b1e4:	bge	1b1f4 <__assert_fail@plt+0xa1f8>
   1b1e8:	movw	r0, #1
   1b1ec:	str	r0, [fp, #-48]	; 0xffffffd0
   1b1f0:	b	1b20c <__assert_fail@plt+0xa210>
   1b1f4:	ldr	r0, [fp, #-12]
   1b1f8:	movw	r1, #0
   1b1fc:	sub	r0, r1, r0
   1b200:	mvn	r1, #0
   1b204:	udiv	r0, r1, r0
   1b208:	str	r0, [fp, #-48]	; 0xffffffd0
   1b20c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b210:	ldr	r1, [fp, #-8]
   1b214:	ldr	r2, [r1]
   1b218:	ldr	r1, [r1, #4]
   1b21c:	mvn	r1, r1
   1b220:	mvn	r2, r2
   1b224:	subs	r0, r2, r0
   1b228:	sbcs	r1, r1, #0
   1b22c:	bge	1b384 <__assert_fail@plt+0xa388>
   1b230:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b234:	b	1b238 <__assert_fail@plt+0xa23c>
   1b238:	b	1b2a8 <__assert_fail@plt+0xa2ac>
   1b23c:	b	1b2a8 <__assert_fail@plt+0xa2ac>
   1b240:	ldr	r0, [fp, #-12]
   1b244:	cmn	r0, #1
   1b248:	bne	1b2a8 <__assert_fail@plt+0xa2ac>
   1b24c:	b	1b250 <__assert_fail@plt+0xa254>
   1b250:	ldr	r0, [fp, #-8]
   1b254:	ldr	r1, [r0]
   1b258:	ldr	r0, [r0, #4]
   1b25c:	rsbs	r1, r1, #0
   1b260:	rscs	r0, r0, #0
   1b264:	blt	1b384 <__assert_fail@plt+0xa388>
   1b268:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b26c:	ldr	r0, [fp, #-8]
   1b270:	ldr	r1, [r0]
   1b274:	ldr	r0, [r0, #4]
   1b278:	subs	r1, r1, #1
   1b27c:	sbcs	r0, r0, #0
   1b280:	blt	1b3a4 <__assert_fail@plt+0xa3a8>
   1b284:	b	1b288 <__assert_fail@plt+0xa28c>
   1b288:	ldr	r0, [fp, #-8]
   1b28c:	ldr	r1, [r0]
   1b290:	ldr	r0, [r0, #4]
   1b294:	subs	r1, r1, #1
   1b298:	sbc	r0, r0, #0
   1b29c:	cmn	r0, #1
   1b2a0:	bgt	1b384 <__assert_fail@plt+0xa388>
   1b2a4:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b2a8:	ldr	r0, [fp, #-8]
   1b2ac:	ldr	r1, [r0]
   1b2b0:	ldr	r0, [r0, #4]
   1b2b4:	rsbs	r1, r1, #0
   1b2b8:	rscs	r0, r0, #0
   1b2bc:	blt	1b384 <__assert_fail@plt+0xa388>
   1b2c0:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b2c4:	ldr	r0, [fp, #-12]
   1b2c8:	cmp	r0, #0
   1b2cc:	bne	1b2d4 <__assert_fail@plt+0xa2d8>
   1b2d0:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b2d4:	ldr	r0, [fp, #-8]
   1b2d8:	ldr	r0, [r0, #4]
   1b2dc:	cmn	r0, #1
   1b2e0:	bgt	1b35c <__assert_fail@plt+0xa360>
   1b2e4:	b	1b2e8 <__assert_fail@plt+0xa2ec>
   1b2e8:	b	1b2ec <__assert_fail@plt+0xa2f0>
   1b2ec:	b	1b344 <__assert_fail@plt+0xa348>
   1b2f0:	b	1b344 <__assert_fail@plt+0xa348>
   1b2f4:	ldr	r0, [fp, #-8]
   1b2f8:	ldr	r1, [r0]
   1b2fc:	ldr	r0, [r0, #4]
   1b300:	and	r0, r1, r0
   1b304:	cmn	r0, #1
   1b308:	bne	1b344 <__assert_fail@plt+0xa348>
   1b30c:	b	1b310 <__assert_fail@plt+0xa314>
   1b310:	b	1b314 <__assert_fail@plt+0xa318>
   1b314:	ldr	r0, [fp, #-12]
   1b318:	add	r0, r0, #0
   1b31c:	movw	r1, #0
   1b320:	cmp	r1, r0
   1b324:	blt	1b384 <__assert_fail@plt+0xa388>
   1b328:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b32c:	ldr	r0, [fp, #-12]
   1b330:	sub	r0, r0, #1
   1b334:	mvn	r1, #0
   1b338:	cmp	r1, r0
   1b33c:	blt	1b384 <__assert_fail@plt+0xa388>
   1b340:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b344:	ldr	r0, [fp, #-12]
   1b348:	rsbs	r1, r0, #0
   1b34c:	mov	r2, #0
   1b350:	sbcs	r0, r2, r0, asr #31
   1b354:	blt	1b384 <__assert_fail@plt+0xa388>
   1b358:	b	1b3a4 <__assert_fail@plt+0xa3a8>
   1b35c:	ldr	r0, [fp, #-12]
   1b360:	mvn	r1, #0
   1b364:	udiv	r0, r1, r0
   1b368:	ldr	r1, [fp, #-8]
   1b36c:	ldr	r2, [r1]
   1b370:	ldr	r1, [r1, #4]
   1b374:	subs	r0, r0, r2
   1b378:	rscs	r1, r1, #0
   1b37c:	bge	1b3a4 <__assert_fail@plt+0xa3a8>
   1b380:	b	1b384 <__assert_fail@plt+0xa388>
   1b384:	ldr	r0, [fp, #-8]
   1b388:	ldr	r0, [r0]
   1b38c:	ldr	r1, [fp, #-12]
   1b390:	mul	r0, r0, r1
   1b394:	mov	r1, #0
   1b398:	str	r1, [fp, #-20]	; 0xffffffec
   1b39c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3a0:	b	1be28 <__assert_fail@plt+0xae2c>
   1b3a4:	ldr	r0, [fp, #-8]
   1b3a8:	ldr	r0, [r0]
   1b3ac:	ldr	r1, [fp, #-12]
   1b3b0:	mul	r0, r0, r1
   1b3b4:	mov	r1, #0
   1b3b8:	str	r1, [fp, #-20]	; 0xffffffec
   1b3bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3c0:	b	1be5c <__assert_fail@plt+0xae60>
   1b3c4:	b	1b894 <__assert_fail@plt+0xa898>
   1b3c8:	b	1b3cc <__assert_fail@plt+0xa3d0>
   1b3cc:	ldr	r0, [fp, #-12]
   1b3d0:	cmp	r0, #0
   1b3d4:	bge	1b52c <__assert_fail@plt+0xa530>
   1b3d8:	ldr	r0, [fp, #-8]
   1b3dc:	ldr	r0, [r0, #4]
   1b3e0:	cmn	r0, #1
   1b3e4:	bgt	1b48c <__assert_fail@plt+0xa490>
   1b3e8:	b	1b3ec <__assert_fail@plt+0xa3f0>
   1b3ec:	b	1b3f0 <__assert_fail@plt+0xa3f4>
   1b3f0:	ldr	r0, [fp, #-8]
   1b3f4:	ldr	r1, [r0]
   1b3f8:	ldr	r0, [r0, #4]
   1b3fc:	ldr	r2, [fp, #-12]
   1b400:	mvn	r3, #-2147483648	; 0x80000000
   1b404:	sdiv	r2, r3, r2
   1b408:	subs	r1, r1, r2
   1b40c:	sbcs	r0, r0, r2, asr #31
   1b410:	blt	1b604 <__assert_fail@plt+0xa608>
   1b414:	b	1b624 <__assert_fail@plt+0xa628>
   1b418:	b	1b41c <__assert_fail@plt+0xa420>
   1b41c:	ldr	r0, [pc, #2656]	; 1be84 <__assert_fail@plt+0xae88>
   1b420:	ldr	r1, [fp, #-12]
   1b424:	cmp	r1, r0
   1b428:	blt	1b440 <__assert_fail@plt+0xa444>
   1b42c:	b	1b44c <__assert_fail@plt+0xa450>
   1b430:	ldr	r0, [fp, #-12]
   1b434:	movw	r1, #0
   1b438:	cmp	r1, r0
   1b43c:	bge	1b44c <__assert_fail@plt+0xa450>
   1b440:	movw	r0, #0
   1b444:	str	r0, [fp, #-52]	; 0xffffffcc
   1b448:	b	1b464 <__assert_fail@plt+0xa468>
   1b44c:	ldr	r0, [pc, #2612]	; 1be88 <__assert_fail@plt+0xae8c>
   1b450:	ldr	r1, [fp, #-12]
   1b454:	movw	r2, #0
   1b458:	sub	r1, r2, r1
   1b45c:	sdiv	r0, r0, r1
   1b460:	str	r0, [fp, #-52]	; 0xffffffcc
   1b464:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b468:	ldr	r1, [fp, #-8]
   1b46c:	ldr	r2, [r1]
   1b470:	ldr	r1, [r1, #4]
   1b474:	mvn	r1, r1
   1b478:	mvn	r2, r2
   1b47c:	subs	r2, r2, r0
   1b480:	sbcs	r0, r1, r0, asr #31
   1b484:	bge	1b604 <__assert_fail@plt+0xa608>
   1b488:	b	1b624 <__assert_fail@plt+0xa628>
   1b48c:	ldr	r0, [fp, #-12]
   1b490:	cmn	r0, #1
   1b494:	bne	1b504 <__assert_fail@plt+0xa508>
   1b498:	b	1b49c <__assert_fail@plt+0xa4a0>
   1b49c:	ldr	r0, [fp, #-8]
   1b4a0:	ldr	r1, [r0]
   1b4a4:	ldr	r0, [r0, #4]
   1b4a8:	adds	r1, r1, #-2147483648	; 0x80000000
   1b4ac:	sbc	r0, r0, #0
   1b4b0:	rsbs	r1, r1, #0
   1b4b4:	rscs	r0, r0, #0
   1b4b8:	blt	1b604 <__assert_fail@plt+0xa608>
   1b4bc:	b	1b624 <__assert_fail@plt+0xa628>
   1b4c0:	ldr	r0, [fp, #-8]
   1b4c4:	ldr	r1, [r0]
   1b4c8:	ldr	r0, [r0, #4]
   1b4cc:	subs	r1, r1, #1
   1b4d0:	sbcs	r0, r0, #0
   1b4d4:	blt	1b624 <__assert_fail@plt+0xa628>
   1b4d8:	b	1b4dc <__assert_fail@plt+0xa4e0>
   1b4dc:	ldr	r0, [fp, #-8]
   1b4e0:	ldr	r1, [r0]
   1b4e4:	ldr	r0, [r0, #4]
   1b4e8:	subs	r1, r1, #1
   1b4ec:	sbc	r0, r0, #0
   1b4f0:	mvn	r2, #-2147483648	; 0x80000000
   1b4f4:	subs	r1, r2, r1
   1b4f8:	rscs	r0, r0, #0
   1b4fc:	blt	1b604 <__assert_fail@plt+0xa608>
   1b500:	b	1b624 <__assert_fail@plt+0xa628>
   1b504:	ldr	r0, [fp, #-12]
   1b508:	mov	r1, #-2147483648	; 0x80000000
   1b50c:	sdiv	r0, r1, r0
   1b510:	ldr	r1, [fp, #-8]
   1b514:	ldr	r2, [r1]
   1b518:	ldr	r1, [r1, #4]
   1b51c:	subs	r2, r0, r2
   1b520:	rscs	r0, r1, r0, asr #31
   1b524:	blt	1b604 <__assert_fail@plt+0xa608>
   1b528:	b	1b624 <__assert_fail@plt+0xa628>
   1b52c:	ldr	r0, [fp, #-12]
   1b530:	cmp	r0, #0
   1b534:	bne	1b53c <__assert_fail@plt+0xa540>
   1b538:	b	1b624 <__assert_fail@plt+0xa628>
   1b53c:	ldr	r0, [fp, #-8]
   1b540:	ldr	r0, [r0, #4]
   1b544:	cmn	r0, #1
   1b548:	bgt	1b5dc <__assert_fail@plt+0xa5e0>
   1b54c:	b	1b550 <__assert_fail@plt+0xa554>
   1b550:	b	1b554 <__assert_fail@plt+0xa558>
   1b554:	b	1b5b0 <__assert_fail@plt+0xa5b4>
   1b558:	b	1b5b0 <__assert_fail@plt+0xa5b4>
   1b55c:	ldr	r0, [fp, #-8]
   1b560:	ldr	r1, [r0]
   1b564:	ldr	r0, [r0, #4]
   1b568:	and	r0, r1, r0
   1b56c:	cmn	r0, #1
   1b570:	bne	1b5b0 <__assert_fail@plt+0xa5b4>
   1b574:	b	1b57c <__assert_fail@plt+0xa580>
   1b578:	andhi	r0, r0, r1
   1b57c:	b	1b580 <__assert_fail@plt+0xa584>
   1b580:	ldr	r0, [fp, #-12]
   1b584:	add	r0, r0, #-2147483648	; 0x80000000
   1b588:	movw	r1, #0
   1b58c:	cmp	r1, r0
   1b590:	blt	1b604 <__assert_fail@plt+0xa608>
   1b594:	b	1b624 <__assert_fail@plt+0xa628>
   1b598:	ldr	r0, [pc, #2280]	; 1be88 <__assert_fail@plt+0xae8c>
   1b59c:	ldr	r1, [fp, #-12]
   1b5a0:	sub	r1, r1, #1
   1b5a4:	cmp	r0, r1
   1b5a8:	blt	1b604 <__assert_fail@plt+0xa608>
   1b5ac:	b	1b624 <__assert_fail@plt+0xa628>
   1b5b0:	ldr	r0, [fp, #-8]
   1b5b4:	ldr	r2, [r0]
   1b5b8:	ldr	r3, [r0, #4]
   1b5bc:	mov	r0, #-2147483648	; 0x80000000
   1b5c0:	mvn	r1, #0
   1b5c4:	bl	1e35c <__assert_fail@plt+0xd360>
   1b5c8:	ldr	r2, [fp, #-12]
   1b5cc:	subs	r0, r0, r2
   1b5d0:	sbcs	r1, r1, r2, asr #31
   1b5d4:	blt	1b604 <__assert_fail@plt+0xa608>
   1b5d8:	b	1b624 <__assert_fail@plt+0xa628>
   1b5dc:	ldr	r0, [fp, #-12]
   1b5e0:	mvn	r1, #-2147483648	; 0x80000000
   1b5e4:	sdiv	r0, r1, r0
   1b5e8:	ldr	r1, [fp, #-8]
   1b5ec:	ldr	r2, [r1]
   1b5f0:	ldr	r1, [r1, #4]
   1b5f4:	subs	r2, r0, r2
   1b5f8:	rscs	r0, r1, r0, asr #31
   1b5fc:	bge	1b624 <__assert_fail@plt+0xa628>
   1b600:	b	1b604 <__assert_fail@plt+0xa608>
   1b604:	ldr	r0, [fp, #-8]
   1b608:	ldr	r0, [r0]
   1b60c:	ldr	r1, [fp, #-12]
   1b610:	mul	r0, r0, r1
   1b614:	asr	r1, r0, #31
   1b618:	str	r0, [fp, #-24]	; 0xffffffe8
   1b61c:	str	r1, [fp, #-20]	; 0xffffffec
   1b620:	b	1be28 <__assert_fail@plt+0xae2c>
   1b624:	ldr	r0, [fp, #-8]
   1b628:	ldr	r0, [r0]
   1b62c:	ldr	r1, [fp, #-12]
   1b630:	mul	r0, r0, r1
   1b634:	asr	r1, r0, #31
   1b638:	str	r0, [fp, #-24]	; 0xffffffe8
   1b63c:	str	r1, [fp, #-20]	; 0xffffffec
   1b640:	b	1be5c <__assert_fail@plt+0xae60>
   1b644:	ldr	r0, [fp, #-12]
   1b648:	cmp	r0, #0
   1b64c:	bge	1b794 <__assert_fail@plt+0xa798>
   1b650:	ldr	r0, [fp, #-8]
   1b654:	ldr	r0, [r0, #4]
   1b658:	cmn	r0, #1
   1b65c:	bgt	1b704 <__assert_fail@plt+0xa708>
   1b660:	b	1b664 <__assert_fail@plt+0xa668>
   1b664:	b	1b690 <__assert_fail@plt+0xa694>
   1b668:	ldr	r0, [fp, #-8]
   1b66c:	ldr	r1, [r0]
   1b670:	ldr	r0, [r0, #4]
   1b674:	ldr	r2, [fp, #-12]
   1b678:	mvn	r3, #0
   1b67c:	udiv	r2, r3, r2
   1b680:	subs	r1, r1, r2
   1b684:	sbcs	r0, r0, #0
   1b688:	blt	1b854 <__assert_fail@plt+0xa858>
   1b68c:	b	1b874 <__assert_fail@plt+0xa878>
   1b690:	b	1b694 <__assert_fail@plt+0xa698>
   1b694:	ldr	r0, [pc, #2024]	; 1be84 <__assert_fail@plt+0xae88>
   1b698:	ldr	r1, [fp, #-12]
   1b69c:	cmp	r1, r0
   1b6a0:	blt	1b6b8 <__assert_fail@plt+0xa6bc>
   1b6a4:	b	1b6c4 <__assert_fail@plt+0xa6c8>
   1b6a8:	ldr	r0, [fp, #-12]
   1b6ac:	movw	r1, #0
   1b6b0:	cmp	r1, r0
   1b6b4:	bge	1b6c4 <__assert_fail@plt+0xa6c8>
   1b6b8:	movw	r0, #1
   1b6bc:	str	r0, [sp, #56]	; 0x38
   1b6c0:	b	1b6dc <__assert_fail@plt+0xa6e0>
   1b6c4:	ldr	r0, [fp, #-12]
   1b6c8:	movw	r1, #0
   1b6cc:	sub	r0, r1, r0
   1b6d0:	mvn	r1, #0
   1b6d4:	udiv	r0, r1, r0
   1b6d8:	str	r0, [sp, #56]	; 0x38
   1b6dc:	ldr	r0, [sp, #56]	; 0x38
   1b6e0:	ldr	r1, [fp, #-8]
   1b6e4:	ldr	r2, [r1]
   1b6e8:	ldr	r1, [r1, #4]
   1b6ec:	mvn	r1, r1
   1b6f0:	mvn	r2, r2
   1b6f4:	subs	r0, r2, r0
   1b6f8:	sbcs	r1, r1, #0
   1b6fc:	bge	1b854 <__assert_fail@plt+0xa858>
   1b700:	b	1b874 <__assert_fail@plt+0xa878>
   1b704:	b	1b708 <__assert_fail@plt+0xa70c>
   1b708:	b	1b778 <__assert_fail@plt+0xa77c>
   1b70c:	b	1b778 <__assert_fail@plt+0xa77c>
   1b710:	ldr	r0, [fp, #-12]
   1b714:	cmn	r0, #1
   1b718:	bne	1b778 <__assert_fail@plt+0xa77c>
   1b71c:	b	1b720 <__assert_fail@plt+0xa724>
   1b720:	ldr	r0, [fp, #-8]
   1b724:	ldr	r1, [r0]
   1b728:	ldr	r0, [r0, #4]
   1b72c:	rsbs	r1, r1, #0
   1b730:	rscs	r0, r0, #0
   1b734:	blt	1b854 <__assert_fail@plt+0xa858>
   1b738:	b	1b874 <__assert_fail@plt+0xa878>
   1b73c:	ldr	r0, [fp, #-8]
   1b740:	ldr	r1, [r0]
   1b744:	ldr	r0, [r0, #4]
   1b748:	subs	r1, r1, #1
   1b74c:	sbcs	r0, r0, #0
   1b750:	blt	1b874 <__assert_fail@plt+0xa878>
   1b754:	b	1b758 <__assert_fail@plt+0xa75c>
   1b758:	ldr	r0, [fp, #-8]
   1b75c:	ldr	r1, [r0]
   1b760:	ldr	r0, [r0, #4]
   1b764:	subs	r1, r1, #1
   1b768:	sbc	r0, r0, #0
   1b76c:	cmn	r0, #1
   1b770:	bgt	1b854 <__assert_fail@plt+0xa858>
   1b774:	b	1b874 <__assert_fail@plt+0xa878>
   1b778:	ldr	r0, [fp, #-8]
   1b77c:	ldr	r1, [r0]
   1b780:	ldr	r0, [r0, #4]
   1b784:	rsbs	r1, r1, #0
   1b788:	rscs	r0, r0, #0
   1b78c:	blt	1b854 <__assert_fail@plt+0xa858>
   1b790:	b	1b874 <__assert_fail@plt+0xa878>
   1b794:	ldr	r0, [fp, #-12]
   1b798:	cmp	r0, #0
   1b79c:	bne	1b7a4 <__assert_fail@plt+0xa7a8>
   1b7a0:	b	1b874 <__assert_fail@plt+0xa878>
   1b7a4:	ldr	r0, [fp, #-8]
   1b7a8:	ldr	r0, [r0, #4]
   1b7ac:	cmn	r0, #1
   1b7b0:	bgt	1b82c <__assert_fail@plt+0xa830>
   1b7b4:	b	1b7b8 <__assert_fail@plt+0xa7bc>
   1b7b8:	b	1b7bc <__assert_fail@plt+0xa7c0>
   1b7bc:	b	1b814 <__assert_fail@plt+0xa818>
   1b7c0:	b	1b814 <__assert_fail@plt+0xa818>
   1b7c4:	ldr	r0, [fp, #-8]
   1b7c8:	ldr	r1, [r0]
   1b7cc:	ldr	r0, [r0, #4]
   1b7d0:	and	r0, r1, r0
   1b7d4:	cmn	r0, #1
   1b7d8:	bne	1b814 <__assert_fail@plt+0xa818>
   1b7dc:	b	1b7e0 <__assert_fail@plt+0xa7e4>
   1b7e0:	b	1b7e4 <__assert_fail@plt+0xa7e8>
   1b7e4:	ldr	r0, [fp, #-12]
   1b7e8:	add	r0, r0, #0
   1b7ec:	movw	r1, #0
   1b7f0:	cmp	r1, r0
   1b7f4:	blt	1b854 <__assert_fail@plt+0xa858>
   1b7f8:	b	1b874 <__assert_fail@plt+0xa878>
   1b7fc:	ldr	r0, [fp, #-12]
   1b800:	sub	r0, r0, #1
   1b804:	mvn	r1, #0
   1b808:	cmp	r1, r0
   1b80c:	blt	1b854 <__assert_fail@plt+0xa858>
   1b810:	b	1b874 <__assert_fail@plt+0xa878>
   1b814:	ldr	r0, [fp, #-12]
   1b818:	rsbs	r1, r0, #0
   1b81c:	mov	r2, #0
   1b820:	sbcs	r0, r2, r0, asr #31
   1b824:	blt	1b854 <__assert_fail@plt+0xa858>
   1b828:	b	1b874 <__assert_fail@plt+0xa878>
   1b82c:	ldr	r0, [fp, #-12]
   1b830:	mvn	r1, #0
   1b834:	udiv	r0, r1, r0
   1b838:	ldr	r1, [fp, #-8]
   1b83c:	ldr	r2, [r1]
   1b840:	ldr	r1, [r1, #4]
   1b844:	subs	r0, r0, r2
   1b848:	rscs	r1, r1, #0
   1b84c:	bge	1b874 <__assert_fail@plt+0xa878>
   1b850:	b	1b854 <__assert_fail@plt+0xa858>
   1b854:	ldr	r0, [fp, #-8]
   1b858:	ldr	r0, [r0]
   1b85c:	ldr	r1, [fp, #-12]
   1b860:	mul	r0, r0, r1
   1b864:	mov	r1, #0
   1b868:	str	r1, [fp, #-20]	; 0xffffffec
   1b86c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b870:	b	1be28 <__assert_fail@plt+0xae2c>
   1b874:	ldr	r0, [fp, #-8]
   1b878:	ldr	r0, [r0]
   1b87c:	ldr	r1, [fp, #-12]
   1b880:	mul	r0, r0, r1
   1b884:	mov	r1, #0
   1b888:	str	r1, [fp, #-20]	; 0xffffffec
   1b88c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b890:	b	1be5c <__assert_fail@plt+0xae60>
   1b894:	b	1b898 <__assert_fail@plt+0xa89c>
   1b898:	ldr	r0, [fp, #-12]
   1b89c:	cmp	r0, #0
   1b8a0:	bge	1ba3c <__assert_fail@plt+0xaa40>
   1b8a4:	ldr	r0, [fp, #-8]
   1b8a8:	ldr	r0, [r0, #4]
   1b8ac:	cmn	r0, #1
   1b8b0:	bgt	1b9a0 <__assert_fail@plt+0xa9a4>
   1b8b4:	b	1b8b8 <__assert_fail@plt+0xa8bc>
   1b8b8:	b	1b8bc <__assert_fail@plt+0xa8c0>
   1b8bc:	ldr	r0, [fp, #-8]
   1b8c0:	ldr	r1, [r0]
   1b8c4:	ldr	r0, [r0, #4]
   1b8c8:	ldr	r2, [fp, #-12]
   1b8cc:	asr	r3, r2, #31
   1b8d0:	mvn	ip, #0
   1b8d4:	mvn	lr, #-2147483648	; 0x80000000
   1b8d8:	str	r0, [sp, #52]	; 0x34
   1b8dc:	mov	r0, ip
   1b8e0:	str	r1, [sp, #48]	; 0x30
   1b8e4:	mov	r1, lr
   1b8e8:	bl	1e35c <__assert_fail@plt+0xd360>
   1b8ec:	ldr	r2, [sp, #48]	; 0x30
   1b8f0:	subs	r0, r2, r0
   1b8f4:	ldr	r2, [sp, #52]	; 0x34
   1b8f8:	sbcs	r1, r2, r1
   1b8fc:	blt	1bb18 <__assert_fail@plt+0xab1c>
   1b900:	b	1bb44 <__assert_fail@plt+0xab48>
   1b904:	b	1b908 <__assert_fail@plt+0xa90c>
   1b908:	ldr	r0, [pc, #1396]	; 1be84 <__assert_fail@plt+0xae88>
   1b90c:	ldr	r1, [fp, #-12]
   1b910:	cmp	r1, r0
   1b914:	blt	1b92c <__assert_fail@plt+0xa930>
   1b918:	b	1b940 <__assert_fail@plt+0xa944>
   1b91c:	ldr	r0, [fp, #-12]
   1b920:	movw	r1, #0
   1b924:	cmp	r1, r0
   1b928:	bge	1b940 <__assert_fail@plt+0xa944>
   1b92c:	mov	r0, #0
   1b930:	mvn	r1, #0
   1b934:	str	r1, [sp, #44]	; 0x2c
   1b938:	str	r0, [sp, #40]	; 0x28
   1b93c:	b	1b974 <__assert_fail@plt+0xa978>
   1b940:	ldr	r0, [fp, #-12]
   1b944:	rsb	r0, r0, #0
   1b948:	asr	r3, r0, #31
   1b94c:	mvn	r1, #0
   1b950:	mvn	r2, #-2147483648	; 0x80000000
   1b954:	str	r0, [sp, #36]	; 0x24
   1b958:	mov	r0, r1
   1b95c:	mov	r1, r2
   1b960:	ldr	r2, [sp, #36]	; 0x24
   1b964:	bl	1e35c <__assert_fail@plt+0xd360>
   1b968:	str	r0, [sp, #44]	; 0x2c
   1b96c:	str	r1, [sp, #40]	; 0x28
   1b970:	b	1b974 <__assert_fail@plt+0xa978>
   1b974:	ldr	r0, [sp, #40]	; 0x28
   1b978:	ldr	r1, [sp, #44]	; 0x2c
   1b97c:	ldr	r2, [fp, #-8]
   1b980:	ldr	r3, [r2]
   1b984:	ldr	r2, [r2, #4]
   1b988:	mvn	r2, r2
   1b98c:	mvn	r3, r3
   1b990:	subs	r1, r3, r1
   1b994:	sbcs	r0, r2, r0
   1b998:	bge	1bb18 <__assert_fail@plt+0xab1c>
   1b99c:	b	1bb44 <__assert_fail@plt+0xab48>
   1b9a0:	ldr	r0, [fp, #-12]
   1b9a4:	cmn	r0, #1
   1b9a8:	bne	1b9fc <__assert_fail@plt+0xaa00>
   1b9ac:	b	1b9b0 <__assert_fail@plt+0xa9b4>
   1b9b0:	ldr	r0, [fp, #-8]
   1b9b4:	ldr	r1, [r0]
   1b9b8:	ldr	r0, [r0, #4]
   1b9bc:	add	r0, r0, #-2147483648	; 0x80000000
   1b9c0:	rsbs	r1, r1, #0
   1b9c4:	rscs	r0, r0, #0
   1b9c8:	blt	1bb18 <__assert_fail@plt+0xab1c>
   1b9cc:	b	1bb44 <__assert_fail@plt+0xab48>
   1b9d0:	ldr	r0, [fp, #-8]
   1b9d4:	ldr	r1, [r0]
   1b9d8:	ldr	r0, [r0, #4]
   1b9dc:	subs	r1, r1, #1
   1b9e0:	sbcs	r0, r0, #0
   1b9e4:	blt	1bb44 <__assert_fail@plt+0xab48>
   1b9e8:	b	1b9ec <__assert_fail@plt+0xa9f0>
   1b9ec:	mov	r0, #0
   1b9f0:	cmp	r0, #0
   1b9f4:	bne	1bb18 <__assert_fail@plt+0xab1c>
   1b9f8:	b	1bb44 <__assert_fail@plt+0xab48>
   1b9fc:	ldr	r0, [fp, #-12]
   1ba00:	asr	r3, r0, #31
   1ba04:	mov	r1, #0
   1ba08:	mov	r2, #-2147483648	; 0x80000000
   1ba0c:	str	r0, [sp, #32]
   1ba10:	mov	r0, r1
   1ba14:	mov	r1, r2
   1ba18:	ldr	r2, [sp, #32]
   1ba1c:	bl	1e35c <__assert_fail@plt+0xd360>
   1ba20:	ldr	r2, [fp, #-8]
   1ba24:	ldr	r3, [r2]
   1ba28:	ldr	r2, [r2, #4]
   1ba2c:	subs	r0, r0, r3
   1ba30:	sbcs	r1, r1, r2
   1ba34:	blt	1bb18 <__assert_fail@plt+0xab1c>
   1ba38:	b	1bb44 <__assert_fail@plt+0xab48>
   1ba3c:	ldr	r0, [fp, #-12]
   1ba40:	cmp	r0, #0
   1ba44:	bne	1ba4c <__assert_fail@plt+0xaa50>
   1ba48:	b	1bb44 <__assert_fail@plt+0xab48>
   1ba4c:	ldr	r0, [fp, #-8]
   1ba50:	ldr	r0, [r0, #4]
   1ba54:	cmn	r0, #1
   1ba58:	bgt	1bad8 <__assert_fail@plt+0xaadc>
   1ba5c:	b	1ba60 <__assert_fail@plt+0xaa64>
   1ba60:	ldr	r0, [fp, #-8]
   1ba64:	ldr	r1, [r0]
   1ba68:	ldr	r0, [r0, #4]
   1ba6c:	and	r0, r1, r0
   1ba70:	cmn	r0, #1
   1ba74:	bne	1baac <__assert_fail@plt+0xaab0>
   1ba78:	b	1ba7c <__assert_fail@plt+0xaa80>
   1ba7c:	b	1ba80 <__assert_fail@plt+0xaa84>
   1ba80:	ldr	r0, [fp, #-12]
   1ba84:	mov	r1, #-2147483648	; 0x80000000
   1ba88:	add	r1, r1, r0, asr #31
   1ba8c:	rsbs	r0, r0, #0
   1ba90:	rscs	r1, r1, #0
   1ba94:	blt	1bb18 <__assert_fail@plt+0xab1c>
   1ba98:	b	1bb44 <__assert_fail@plt+0xab48>
   1ba9c:	mov	r0, #0
   1baa0:	cmp	r0, #0
   1baa4:	bne	1bb18 <__assert_fail@plt+0xab1c>
   1baa8:	b	1bb44 <__assert_fail@plt+0xab48>
   1baac:	ldr	r0, [fp, #-8]
   1bab0:	ldr	r2, [r0]
   1bab4:	ldr	r3, [r0, #4]
   1bab8:	mov	r0, #0
   1babc:	mov	r1, #-2147483648	; 0x80000000
   1bac0:	bl	1e35c <__assert_fail@plt+0xd360>
   1bac4:	ldr	r2, [fp, #-12]
   1bac8:	subs	r0, r0, r2
   1bacc:	sbcs	r1, r1, r2, asr #31
   1bad0:	blt	1bb18 <__assert_fail@plt+0xab1c>
   1bad4:	b	1bb44 <__assert_fail@plt+0xab48>
   1bad8:	ldr	r0, [fp, #-12]
   1badc:	asr	r3, r0, #31
   1bae0:	mvn	r1, #0
   1bae4:	mvn	r2, #-2147483648	; 0x80000000
   1bae8:	str	r0, [sp, #28]
   1baec:	mov	r0, r1
   1baf0:	mov	r1, r2
   1baf4:	ldr	r2, [sp, #28]
   1baf8:	bl	1e35c <__assert_fail@plt+0xd360>
   1bafc:	ldr	r2, [fp, #-8]
   1bb00:	ldr	r3, [r2]
   1bb04:	ldr	r2, [r2, #4]
   1bb08:	subs	r0, r0, r3
   1bb0c:	sbcs	r1, r1, r2
   1bb10:	bge	1bb44 <__assert_fail@plt+0xab48>
   1bb14:	b	1bb18 <__assert_fail@plt+0xab1c>
   1bb18:	ldr	r0, [fp, #-8]
   1bb1c:	ldr	r1, [r0]
   1bb20:	ldr	r0, [r0, #4]
   1bb24:	ldr	r2, [fp, #-12]
   1bb28:	asr	r3, r2, #31
   1bb2c:	umull	ip, lr, r1, r2
   1bb30:	mla	r1, r1, r3, lr
   1bb34:	mla	r0, r0, r2, r1
   1bb38:	str	ip, [fp, #-24]	; 0xffffffe8
   1bb3c:	str	r0, [fp, #-20]	; 0xffffffec
   1bb40:	b	1be28 <__assert_fail@plt+0xae2c>
   1bb44:	ldr	r0, [fp, #-8]
   1bb48:	ldr	r1, [r0]
   1bb4c:	ldr	r0, [r0, #4]
   1bb50:	ldr	r2, [fp, #-12]
   1bb54:	asr	r3, r2, #31
   1bb58:	umull	ip, lr, r1, r2
   1bb5c:	mla	r1, r1, r3, lr
   1bb60:	mla	r0, r0, r2, r1
   1bb64:	str	ip, [fp, #-24]	; 0xffffffe8
   1bb68:	str	r0, [fp, #-20]	; 0xffffffec
   1bb6c:	b	1be5c <__assert_fail@plt+0xae60>
   1bb70:	ldr	r0, [fp, #-12]
   1bb74:	cmp	r0, #0
   1bb78:	bge	1bd00 <__assert_fail@plt+0xad04>
   1bb7c:	ldr	r0, [fp, #-8]
   1bb80:	ldr	r0, [r0, #4]
   1bb84:	cmn	r0, #1
   1bb88:	bgt	1bc70 <__assert_fail@plt+0xac74>
   1bb8c:	b	1bb90 <__assert_fail@plt+0xab94>
   1bb90:	b	1bbdc <__assert_fail@plt+0xabe0>
   1bb94:			; <UNDEFINED> instruction: 0xffff8000
   1bb98:	ldr	r0, [fp, #-8]
   1bb9c:	ldr	r1, [r0]
   1bba0:	ldr	r0, [r0, #4]
   1bba4:	ldr	r2, [fp, #-12]
   1bba8:	asr	r3, r2, #31
   1bbac:	mvn	ip, #0
   1bbb0:	str	r0, [sp, #24]
   1bbb4:	mov	r0, ip
   1bbb8:	str	r1, [sp, #20]
   1bbbc:	mov	r1, ip
   1bbc0:	bl	1e430 <__assert_fail@plt+0xd434>
   1bbc4:	ldr	r2, [sp, #20]
   1bbc8:	subs	r0, r2, r0
   1bbcc:	ldr	r2, [sp, #24]
   1bbd0:	sbcs	r1, r2, r1
   1bbd4:	bcc	1bdd0 <__assert_fail@plt+0xadd4>
   1bbd8:	b	1bdfc <__assert_fail@plt+0xae00>
   1bbdc:	b	1bbe0 <__assert_fail@plt+0xabe4>
   1bbe0:	ldr	r0, [pc, #668]	; 1be84 <__assert_fail@plt+0xae88>
   1bbe4:	ldr	r1, [fp, #-12]
   1bbe8:	cmp	r1, r0
   1bbec:	blt	1bc04 <__assert_fail@plt+0xac08>
   1bbf0:	b	1bc18 <__assert_fail@plt+0xac1c>
   1bbf4:	ldr	r0, [fp, #-12]
   1bbf8:	movw	r1, #0
   1bbfc:	cmp	r1, r0
   1bc00:	bge	1bc18 <__assert_fail@plt+0xac1c>
   1bc04:	mov	r0, #1
   1bc08:	mvn	r1, #0
   1bc0c:	str	r1, [sp, #16]
   1bc10:	str	r0, [sp, #12]
   1bc14:	b	1bc44 <__assert_fail@plt+0xac48>
   1bc18:	ldr	r0, [fp, #-12]
   1bc1c:	rsb	r0, r0, #0
   1bc20:	asr	r3, r0, #31
   1bc24:	mvn	r1, #0
   1bc28:	str	r0, [sp, #8]
   1bc2c:	mov	r0, r1
   1bc30:	ldr	r2, [sp, #8]
   1bc34:	bl	1e430 <__assert_fail@plt+0xd434>
   1bc38:	str	r0, [sp, #16]
   1bc3c:	str	r1, [sp, #12]
   1bc40:	b	1bc44 <__assert_fail@plt+0xac48>
   1bc44:	ldr	r0, [sp, #12]
   1bc48:	ldr	r1, [sp, #16]
   1bc4c:	ldr	r2, [fp, #-8]
   1bc50:	ldr	r3, [r2]
   1bc54:	ldr	r2, [r2, #4]
   1bc58:	mvn	r2, r2
   1bc5c:	mvn	r3, r3
   1bc60:	subs	r1, r3, r1
   1bc64:	sbcs	r0, r2, r0
   1bc68:	bcs	1bdd0 <__assert_fail@plt+0xadd4>
   1bc6c:	b	1bdfc <__assert_fail@plt+0xae00>
   1bc70:	b	1bc74 <__assert_fail@plt+0xac78>
   1bc74:	b	1bce4 <__assert_fail@plt+0xace8>
   1bc78:	b	1bce4 <__assert_fail@plt+0xace8>
   1bc7c:	ldr	r0, [fp, #-12]
   1bc80:	cmn	r0, #1
   1bc84:	bne	1bce4 <__assert_fail@plt+0xace8>
   1bc88:	b	1bc8c <__assert_fail@plt+0xac90>
   1bc8c:	ldr	r0, [fp, #-8]
   1bc90:	ldr	r1, [r0]
   1bc94:	ldr	r0, [r0, #4]
   1bc98:	rsbs	r1, r1, #0
   1bc9c:	rscs	r0, r0, #0
   1bca0:	blt	1bdd0 <__assert_fail@plt+0xadd4>
   1bca4:	b	1bdfc <__assert_fail@plt+0xae00>
   1bca8:	ldr	r0, [fp, #-8]
   1bcac:	ldr	r1, [r0]
   1bcb0:	ldr	r0, [r0, #4]
   1bcb4:	subs	r1, r1, #1
   1bcb8:	sbcs	r0, r0, #0
   1bcbc:	blt	1bdfc <__assert_fail@plt+0xae00>
   1bcc0:	b	1bcc4 <__assert_fail@plt+0xacc8>
   1bcc4:	ldr	r0, [fp, #-8]
   1bcc8:	ldr	r1, [r0]
   1bccc:	ldr	r0, [r0, #4]
   1bcd0:	subs	r1, r1, #1
   1bcd4:	sbc	r0, r0, #0
   1bcd8:	cmn	r0, #1
   1bcdc:	bgt	1bdd0 <__assert_fail@plt+0xadd4>
   1bce0:	b	1bdfc <__assert_fail@plt+0xae00>
   1bce4:	ldr	r0, [fp, #-8]
   1bce8:	ldr	r1, [r0]
   1bcec:	ldr	r0, [r0, #4]
   1bcf0:	rsbs	r1, r1, #0
   1bcf4:	rscs	r0, r0, #0
   1bcf8:	blt	1bdd0 <__assert_fail@plt+0xadd4>
   1bcfc:	b	1bdfc <__assert_fail@plt+0xae00>
   1bd00:	ldr	r0, [fp, #-12]
   1bd04:	cmp	r0, #0
   1bd08:	bne	1bd10 <__assert_fail@plt+0xad14>
   1bd0c:	b	1bdfc <__assert_fail@plt+0xae00>
   1bd10:	ldr	r0, [fp, #-8]
   1bd14:	ldr	r0, [r0, #4]
   1bd18:	cmn	r0, #1
   1bd1c:	bgt	1bd98 <__assert_fail@plt+0xad9c>
   1bd20:	b	1bd24 <__assert_fail@plt+0xad28>
   1bd24:	b	1bd28 <__assert_fail@plt+0xad2c>
   1bd28:	b	1bd80 <__assert_fail@plt+0xad84>
   1bd2c:	b	1bd80 <__assert_fail@plt+0xad84>
   1bd30:	ldr	r0, [fp, #-8]
   1bd34:	ldr	r1, [r0]
   1bd38:	ldr	r0, [r0, #4]
   1bd3c:	and	r0, r1, r0
   1bd40:	cmn	r0, #1
   1bd44:	bne	1bd80 <__assert_fail@plt+0xad84>
   1bd48:	b	1bd4c <__assert_fail@plt+0xad50>
   1bd4c:	b	1bd50 <__assert_fail@plt+0xad54>
   1bd50:	ldr	r0, [fp, #-12]
   1bd54:	add	r0, r0, #0
   1bd58:	movw	r1, #0
   1bd5c:	cmp	r1, r0
   1bd60:	blt	1bdd0 <__assert_fail@plt+0xadd4>
   1bd64:	b	1bdfc <__assert_fail@plt+0xae00>
   1bd68:	ldr	r0, [fp, #-12]
   1bd6c:	sub	r0, r0, #1
   1bd70:	mvn	r1, #0
   1bd74:	cmp	r1, r0
   1bd78:	blt	1bdd0 <__assert_fail@plt+0xadd4>
   1bd7c:	b	1bdfc <__assert_fail@plt+0xae00>
   1bd80:	ldr	r0, [fp, #-12]
   1bd84:	rsbs	r1, r0, #0
   1bd88:	mov	r2, #0
   1bd8c:	sbcs	r0, r2, r0, asr #31
   1bd90:	blt	1bdd0 <__assert_fail@plt+0xadd4>
   1bd94:	b	1bdfc <__assert_fail@plt+0xae00>
   1bd98:	ldr	r0, [fp, #-12]
   1bd9c:	asr	r3, r0, #31
   1bda0:	mvn	r1, #0
   1bda4:	str	r0, [sp, #4]
   1bda8:	mov	r0, r1
   1bdac:	ldr	r2, [sp, #4]
   1bdb0:	bl	1e430 <__assert_fail@plt+0xd434>
   1bdb4:	ldr	r2, [fp, #-8]
   1bdb8:	ldr	r3, [r2]
   1bdbc:	ldr	r2, [r2, #4]
   1bdc0:	subs	r0, r0, r3
   1bdc4:	sbcs	r1, r1, r2
   1bdc8:	bcs	1bdfc <__assert_fail@plt+0xae00>
   1bdcc:	b	1bdd0 <__assert_fail@plt+0xadd4>
   1bdd0:	ldr	r0, [fp, #-8]
   1bdd4:	ldr	r1, [r0]
   1bdd8:	ldr	r0, [r0, #4]
   1bddc:	ldr	r2, [fp, #-12]
   1bde0:	asr	r3, r2, #31
   1bde4:	umull	ip, lr, r1, r2
   1bde8:	mla	r1, r1, r3, lr
   1bdec:	mla	r0, r0, r2, r1
   1bdf0:	str	ip, [fp, #-24]	; 0xffffffe8
   1bdf4:	str	r0, [fp, #-20]	; 0xffffffec
   1bdf8:	b	1be28 <__assert_fail@plt+0xae2c>
   1bdfc:	ldr	r0, [fp, #-8]
   1be00:	ldr	r1, [r0]
   1be04:	ldr	r0, [r0, #4]
   1be08:	ldr	r2, [fp, #-12]
   1be0c:	asr	r3, r2, #31
   1be10:	umull	ip, lr, r1, r2
   1be14:	mla	r1, r1, r3, lr
   1be18:	mla	r0, r0, r2, r1
   1be1c:	str	ip, [fp, #-24]	; 0xffffffe8
   1be20:	str	r0, [fp, #-20]	; 0xffffffec
   1be24:	b	1be5c <__assert_fail@plt+0xae60>
   1be28:	ldr	r0, [fp, #-8]
   1be2c:	ldr	r1, [r0, #4]
   1be30:	mvn	r2, #0
   1be34:	cmp	r1, #0
   1be38:	movwmi	r2, #0
   1be3c:	mvn	r3, #-2147483648	; 0x80000000
   1be40:	cmp	r1, #0
   1be44:	movmi	r3, #-2147483648	; 0x80000000
   1be48:	str	r3, [r0, #4]
   1be4c:	str	r2, [r0]
   1be50:	movw	r0, #1
   1be54:	str	r0, [fp, #-4]
   1be58:	b	1be78 <__assert_fail@plt+0xae7c>
   1be5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be60:	ldr	r1, [fp, #-20]	; 0xffffffec
   1be64:	ldr	r2, [fp, #-8]
   1be68:	str	r1, [r2, #4]
   1be6c:	str	r0, [r2]
   1be70:	movw	r0, #0
   1be74:	str	r0, [fp, #-4]
   1be78:	ldr	r0, [fp, #-4]
   1be7c:	mov	sp, fp
   1be80:	pop	{fp, pc}
   1be84:	andhi	r0, r0, r1
   1be88:	svcvc	0x00ffffff
   1be8c:	push	{fp, lr}
   1be90:	mov	fp, sp
   1be94:	sub	sp, sp, #16
   1be98:	str	r0, [fp, #-4]
   1be9c:	str	r1, [sp, #8]
   1bea0:	str	r2, [sp, #4]
   1bea4:	movw	r0, #0
   1bea8:	str	r0, [sp]
   1beac:	ldr	r0, [sp, #4]
   1beb0:	mvn	r1, #0
   1beb4:	add	r1, r0, r1
   1beb8:	str	r1, [sp, #4]
   1bebc:	cmp	r0, #0
   1bec0:	beq	1bee0 <__assert_fail@plt+0xaee4>
   1bec4:	ldr	r0, [fp, #-4]
   1bec8:	ldr	r1, [sp, #8]
   1becc:	bl	1a508 <__assert_fail@plt+0x950c>
   1bed0:	ldr	r1, [sp]
   1bed4:	orr	r0, r1, r0
   1bed8:	str	r0, [sp]
   1bedc:	b	1beac <__assert_fail@plt+0xaeb0>
   1bee0:	ldr	r0, [sp]
   1bee4:	mov	sp, fp
   1bee8:	pop	{fp, pc}
   1beec:	push	{fp, lr}
   1bef0:	mov	fp, sp
   1bef4:	sub	sp, sp, #16
   1bef8:	str	r0, [sp, #8]
   1befc:	str	r1, [sp, #4]
   1bf00:	ldr	r0, [sp, #8]
   1bf04:	cmp	r0, #0
   1bf08:	beq	1bf18 <__assert_fail@plt+0xaf1c>
   1bf0c:	ldr	r0, [sp, #4]
   1bf10:	cmp	r0, #0
   1bf14:	bne	1bf24 <__assert_fail@plt+0xaf28>
   1bf18:	movw	r0, #1
   1bf1c:	str	r0, [sp, #4]
   1bf20:	str	r0, [sp, #8]
   1bf24:	ldr	r0, [sp, #4]
   1bf28:	cmp	r0, #0
   1bf2c:	beq	1bf60 <__assert_fail@plt+0xaf64>
   1bf30:	ldr	r0, [pc, #76]	; 1bf84 <__assert_fail@plt+0xaf88>
   1bf34:	ldr	r1, [sp, #4]
   1bf38:	udiv	r0, r0, r1
   1bf3c:	ldr	r1, [sp, #8]
   1bf40:	cmp	r0, r1
   1bf44:	bcs	1bf60 <__assert_fail@plt+0xaf64>
   1bf48:	bl	10f3c <__errno_location@plt>
   1bf4c:	movw	r1, #12
   1bf50:	str	r1, [r0]
   1bf54:	movw	r0, #0
   1bf58:	str	r0, [fp, #-4]
   1bf5c:	b	1bf78 <__assert_fail@plt+0xaf7c>
   1bf60:	ldr	r0, [sp, #8]
   1bf64:	ldr	r1, [sp, #4]
   1bf68:	bl	10da4 <calloc@plt>
   1bf6c:	str	r0, [sp]
   1bf70:	ldr	r0, [sp]
   1bf74:	str	r0, [fp, #-4]
   1bf78:	ldr	r0, [fp, #-4]
   1bf7c:	mov	sp, fp
   1bf80:	pop	{fp, pc}
   1bf84:	svcvc	0x00ffffff
   1bf88:	push	{fp, lr}
   1bf8c:	mov	fp, sp
   1bf90:	sub	sp, sp, #16
   1bf94:	str	r0, [sp, #8]
   1bf98:	ldr	r0, [sp, #8]
   1bf9c:	cmp	r0, #0
   1bfa0:	bne	1bfac <__assert_fail@plt+0xafb0>
   1bfa4:	movw	r0, #1
   1bfa8:	str	r0, [sp, #8]
   1bfac:	ldr	r0, [pc, #64]	; 1bff4 <__assert_fail@plt+0xaff8>
   1bfb0:	ldr	r1, [sp, #8]
   1bfb4:	cmp	r0, r1
   1bfb8:	bcs	1bfd4 <__assert_fail@plt+0xafd8>
   1bfbc:	bl	10f3c <__errno_location@plt>
   1bfc0:	movw	r1, #12
   1bfc4:	str	r1, [r0]
   1bfc8:	movw	r0, #0
   1bfcc:	str	r0, [fp, #-4]
   1bfd0:	b	1bfe8 <__assert_fail@plt+0xafec>
   1bfd4:	ldr	r0, [sp, #8]
   1bfd8:	bl	10eb8 <malloc@plt>
   1bfdc:	str	r0, [sp, #4]
   1bfe0:	ldr	r0, [sp, #4]
   1bfe4:	str	r0, [fp, #-4]
   1bfe8:	ldr	r0, [fp, #-4]
   1bfec:	mov	sp, fp
   1bff0:	pop	{fp, pc}
   1bff4:	svcvc	0x00ffffff
   1bff8:	push	{fp, lr}
   1bffc:	mov	fp, sp
   1c000:	sub	sp, sp, #16
   1c004:	str	r0, [sp, #8]
   1c008:	str	r1, [sp, #4]
   1c00c:	ldr	r0, [sp, #8]
   1c010:	movw	r1, #0
   1c014:	cmp	r0, r1
   1c018:	bne	1c02c <__assert_fail@plt+0xb030>
   1c01c:	ldr	r0, [sp, #4]
   1c020:	bl	1bf88 <__assert_fail@plt+0xaf8c>
   1c024:	str	r0, [fp, #-4]
   1c028:	b	1c08c <__assert_fail@plt+0xb090>
   1c02c:	ldr	r0, [sp, #4]
   1c030:	cmp	r0, #0
   1c034:	bne	1c04c <__assert_fail@plt+0xb050>
   1c038:	ldr	r0, [sp, #8]
   1c03c:	bl	1c3bc <__assert_fail@plt+0xb3c0>
   1c040:	movw	r0, #0
   1c044:	str	r0, [fp, #-4]
   1c048:	b	1c08c <__assert_fail@plt+0xb090>
   1c04c:	ldr	r0, [pc, #68]	; 1c098 <__assert_fail@plt+0xb09c>
   1c050:	ldr	r1, [sp, #4]
   1c054:	cmp	r0, r1
   1c058:	bcs	1c074 <__assert_fail@plt+0xb078>
   1c05c:	bl	10f3c <__errno_location@plt>
   1c060:	movw	r1, #12
   1c064:	str	r1, [r0]
   1c068:	movw	r0, #0
   1c06c:	str	r0, [fp, #-4]
   1c070:	b	1c08c <__assert_fail@plt+0xb090>
   1c074:	ldr	r0, [sp, #8]
   1c078:	ldr	r1, [sp, #4]
   1c07c:	bl	10e34 <realloc@plt>
   1c080:	str	r0, [sp]
   1c084:	ldr	r0, [sp]
   1c088:	str	r0, [fp, #-4]
   1c08c:	ldr	r0, [fp, #-4]
   1c090:	mov	sp, fp
   1c094:	pop	{fp, pc}
   1c098:	svcvc	0x00ffffff
   1c09c:	push	{fp, lr}
   1c0a0:	mov	fp, sp
   1c0a4:	sub	sp, sp, #24
   1c0a8:	str	r0, [fp, #-8]
   1c0ac:	str	r1, [sp, #12]
   1c0b0:	ldr	r0, [fp, #-8]
   1c0b4:	str	r0, [sp, #8]
   1c0b8:	ldr	r0, [sp, #12]
   1c0bc:	str	r0, [sp, #4]
   1c0c0:	ldr	r0, [sp, #8]
   1c0c4:	ldr	r1, [sp, #4]
   1c0c8:	cmp	r0, r1
   1c0cc:	bne	1c0dc <__assert_fail@plt+0xb0e0>
   1c0d0:	movw	r0, #0
   1c0d4:	str	r0, [fp, #-4]
   1c0d8:	b	1c148 <__assert_fail@plt+0xb14c>
   1c0dc:	b	1c0e0 <__assert_fail@plt+0xb0e4>
   1c0e0:	ldr	r0, [sp, #8]
   1c0e4:	ldrb	r0, [r0]
   1c0e8:	bl	1e0dc <__assert_fail@plt+0xd0e0>
   1c0ec:	strb	r0, [sp, #3]
   1c0f0:	ldr	r0, [sp, #4]
   1c0f4:	ldrb	r0, [r0]
   1c0f8:	bl	1e0dc <__assert_fail@plt+0xd0e0>
   1c0fc:	strb	r0, [sp, #2]
   1c100:	ldrb	r0, [sp, #3]
   1c104:	cmp	r0, #0
   1c108:	bne	1c110 <__assert_fail@plt+0xb114>
   1c10c:	b	1c138 <__assert_fail@plt+0xb13c>
   1c110:	ldr	r0, [sp, #8]
   1c114:	add	r0, r0, #1
   1c118:	str	r0, [sp, #8]
   1c11c:	ldr	r0, [sp, #4]
   1c120:	add	r0, r0, #1
   1c124:	str	r0, [sp, #4]
   1c128:	ldrb	r0, [sp, #3]
   1c12c:	ldrb	r1, [sp, #2]
   1c130:	cmp	r0, r1
   1c134:	beq	1c0e0 <__assert_fail@plt+0xb0e4>
   1c138:	ldrb	r0, [sp, #3]
   1c13c:	ldrb	r1, [sp, #2]
   1c140:	sub	r0, r0, r1
   1c144:	str	r0, [fp, #-4]
   1c148:	ldr	r0, [fp, #-4]
   1c14c:	mov	sp, fp
   1c150:	pop	{fp, pc}
   1c154:	push	{fp, lr}
   1c158:	mov	fp, sp
   1c15c:	sub	sp, sp, #16
   1c160:	str	r0, [sp, #8]
   1c164:	ldr	r0, [sp, #8]
   1c168:	bl	10e7c <__fpending@plt>
   1c16c:	cmp	r0, #0
   1c170:	movw	r0, #0
   1c174:	movne	r0, #1
   1c178:	and	r0, r0, #1
   1c17c:	strb	r0, [sp, #7]
   1c180:	ldr	r0, [sp, #8]
   1c184:	bl	10e88 <ferror_unlocked@plt>
   1c188:	cmp	r0, #0
   1c18c:	movw	r0, #0
   1c190:	movne	r0, #1
   1c194:	and	r0, r0, #1
   1c198:	strb	r0, [sp, #6]
   1c19c:	ldr	r0, [sp, #8]
   1c1a0:	bl	1c224 <__assert_fail@plt+0xb228>
   1c1a4:	cmp	r0, #0
   1c1a8:	movw	r0, #0
   1c1ac:	movne	r0, #1
   1c1b0:	and	r0, r0, #1
   1c1b4:	strb	r0, [sp, #5]
   1c1b8:	ldrb	r0, [sp, #6]
   1c1bc:	tst	r0, #1
   1c1c0:	bne	1c1ec <__assert_fail@plt+0xb1f0>
   1c1c4:	ldrb	r0, [sp, #5]
   1c1c8:	tst	r0, #1
   1c1cc:	beq	1c210 <__assert_fail@plt+0xb214>
   1c1d0:	ldrb	r0, [sp, #7]
   1c1d4:	tst	r0, #1
   1c1d8:	bne	1c1ec <__assert_fail@plt+0xb1f0>
   1c1dc:	bl	10f3c <__errno_location@plt>
   1c1e0:	ldr	r0, [r0]
   1c1e4:	cmp	r0, #9
   1c1e8:	beq	1c210 <__assert_fail@plt+0xb214>
   1c1ec:	ldrb	r0, [sp, #5]
   1c1f0:	tst	r0, #1
   1c1f4:	bne	1c204 <__assert_fail@plt+0xb208>
   1c1f8:	bl	10f3c <__errno_location@plt>
   1c1fc:	movw	r1, #0
   1c200:	str	r1, [r0]
   1c204:	mvn	r0, #0
   1c208:	str	r0, [fp, #-4]
   1c20c:	b	1c218 <__assert_fail@plt+0xb21c>
   1c210:	movw	r0, #0
   1c214:	str	r0, [fp, #-4]
   1c218:	ldr	r0, [fp, #-4]
   1c21c:	mov	sp, fp
   1c220:	pop	{fp, pc}
   1c224:	push	{fp, lr}
   1c228:	mov	fp, sp
   1c22c:	sub	sp, sp, #32
   1c230:	str	r0, [fp, #-8]
   1c234:	movw	r0, #0
   1c238:	str	r0, [fp, #-12]
   1c23c:	str	r0, [sp, #12]
   1c240:	ldr	r0, [fp, #-8]
   1c244:	bl	10f60 <fileno@plt>
   1c248:	str	r0, [sp, #16]
   1c24c:	ldr	r0, [sp, #16]
   1c250:	cmp	r0, #0
   1c254:	bge	1c268 <__assert_fail@plt+0xb26c>
   1c258:	ldr	r0, [fp, #-8]
   1c25c:	bl	10f78 <fclose@plt>
   1c260:	str	r0, [fp, #-4]
   1c264:	b	1c304 <__assert_fail@plt+0xb308>
   1c268:	ldr	r0, [fp, #-8]
   1c26c:	bl	10ed0 <__freading@plt>
   1c270:	cmp	r0, #0
   1c274:	beq	1c2ac <__assert_fail@plt+0xb2b0>
   1c278:	ldr	r0, [fp, #-8]
   1c27c:	bl	10f60 <fileno@plt>
   1c280:	mov	r1, sp
   1c284:	mov	r2, #1
   1c288:	str	r2, [r1]
   1c28c:	mov	r1, #0
   1c290:	mov	r2, r1
   1c294:	mov	r3, r1
   1c298:	bl	10e64 <lseek64@plt>
   1c29c:	and	r0, r0, r1
   1c2a0:	cmn	r0, #1
   1c2a4:	beq	1c2c8 <__assert_fail@plt+0xb2cc>
   1c2a8:	b	1c2ac <__assert_fail@plt+0xb2b0>
   1c2ac:	ldr	r0, [fp, #-8]
   1c2b0:	bl	1c310 <__assert_fail@plt+0xb314>
   1c2b4:	cmp	r0, #0
   1c2b8:	beq	1c2c8 <__assert_fail@plt+0xb2cc>
   1c2bc:	bl	10f3c <__errno_location@plt>
   1c2c0:	ldr	r0, [r0]
   1c2c4:	str	r0, [fp, #-12]
   1c2c8:	ldr	r0, [fp, #-8]
   1c2cc:	bl	10f78 <fclose@plt>
   1c2d0:	str	r0, [sp, #12]
   1c2d4:	ldr	r0, [fp, #-12]
   1c2d8:	cmp	r0, #0
   1c2dc:	beq	1c2fc <__assert_fail@plt+0xb300>
   1c2e0:	ldr	r0, [fp, #-12]
   1c2e4:	str	r0, [sp, #8]
   1c2e8:	bl	10f3c <__errno_location@plt>
   1c2ec:	ldr	r1, [sp, #8]
   1c2f0:	str	r1, [r0]
   1c2f4:	mvn	r0, #0
   1c2f8:	str	r0, [sp, #12]
   1c2fc:	ldr	r0, [sp, #12]
   1c300:	str	r0, [fp, #-4]
   1c304:	ldr	r0, [fp, #-4]
   1c308:	mov	sp, fp
   1c30c:	pop	{fp, pc}
   1c310:	push	{fp, lr}
   1c314:	mov	fp, sp
   1c318:	sub	sp, sp, #8
   1c31c:	str	r0, [sp]
   1c320:	ldr	r0, [sp]
   1c324:	movw	r1, #0
   1c328:	cmp	r0, r1
   1c32c:	beq	1c340 <__assert_fail@plt+0xb344>
   1c330:	ldr	r0, [sp]
   1c334:	bl	10ed0 <__freading@plt>
   1c338:	cmp	r0, #0
   1c33c:	bne	1c350 <__assert_fail@plt+0xb354>
   1c340:	ldr	r0, [sp]
   1c344:	bl	10de0 <fflush@plt>
   1c348:	str	r0, [sp, #4]
   1c34c:	b	1c364 <__assert_fail@plt+0xb368>
   1c350:	ldr	r0, [sp]
   1c354:	bl	1c370 <__assert_fail@plt+0xb374>
   1c358:	ldr	r0, [sp]
   1c35c:	bl	10de0 <fflush@plt>
   1c360:	str	r0, [sp, #4]
   1c364:	ldr	r0, [sp, #4]
   1c368:	mov	sp, fp
   1c36c:	pop	{fp, pc}
   1c370:	push	{fp, lr}
   1c374:	mov	fp, sp
   1c378:	sub	sp, sp, #8
   1c37c:	str	r0, [sp, #4]
   1c380:	ldr	r0, [sp, #4]
   1c384:	ldr	r0, [r0]
   1c388:	and	r0, r0, #256	; 0x100
   1c38c:	cmp	r0, #0
   1c390:	beq	1c3b4 <__assert_fail@plt+0xb3b8>
   1c394:	ldr	r0, [sp, #4]
   1c398:	mov	r1, sp
   1c39c:	mov	r2, #1
   1c3a0:	str	r2, [r1]
   1c3a4:	mov	r1, #0
   1c3a8:	mov	r2, r1
   1c3ac:	mov	r3, r1
   1c3b0:	bl	1c3fc <__assert_fail@plt+0xb400>
   1c3b4:	mov	sp, fp
   1c3b8:	pop	{fp, pc}
   1c3bc:	push	{fp, lr}
   1c3c0:	mov	fp, sp
   1c3c4:	sub	sp, sp, #16
   1c3c8:	str	r0, [fp, #-4]
   1c3cc:	bl	10f3c <__errno_location@plt>
   1c3d0:	ldr	r0, [r0]
   1c3d4:	str	r0, [sp, #8]
   1c3d8:	ldr	r0, [fp, #-4]
   1c3dc:	bl	10dec <free@plt>
   1c3e0:	ldr	r0, [sp, #8]
   1c3e4:	str	r0, [sp, #4]
   1c3e8:	bl	10f3c <__errno_location@plt>
   1c3ec:	ldr	r1, [sp, #4]
   1c3f0:	str	r1, [r0]
   1c3f4:	mov	sp, fp
   1c3f8:	pop	{fp, pc}
   1c3fc:	push	{fp, lr}
   1c400:	mov	fp, sp
   1c404:	sub	sp, sp, #32
   1c408:	ldr	r1, [fp, #8]
   1c40c:	str	r0, [fp, #-8]
   1c410:	str	r3, [sp, #20]
   1c414:	str	r2, [sp, #16]
   1c418:	ldr	r0, [fp, #-8]
   1c41c:	ldr	r0, [r0, #8]
   1c420:	ldr	r2, [fp, #-8]
   1c424:	ldr	r2, [r2, #4]
   1c428:	cmp	r0, r2
   1c42c:	bne	1c4d8 <__assert_fail@plt+0xb4dc>
   1c430:	ldr	r0, [fp, #-8]
   1c434:	ldr	r0, [r0, #20]
   1c438:	ldr	r1, [fp, #-8]
   1c43c:	ldr	r1, [r1, #16]
   1c440:	cmp	r0, r1
   1c444:	bne	1c4d8 <__assert_fail@plt+0xb4dc>
   1c448:	ldr	r0, [fp, #-8]
   1c44c:	ldr	r0, [r0, #36]	; 0x24
   1c450:	movw	r1, #0
   1c454:	cmp	r0, r1
   1c458:	bne	1c4d8 <__assert_fail@plt+0xb4dc>
   1c45c:	ldr	r0, [fp, #-8]
   1c460:	bl	10f60 <fileno@plt>
   1c464:	ldr	r2, [sp, #16]
   1c468:	ldr	r3, [sp, #20]
   1c46c:	ldr	r1, [fp, #8]
   1c470:	mov	ip, sp
   1c474:	str	r1, [ip]
   1c478:	bl	10e64 <lseek64@plt>
   1c47c:	str	r1, [sp, #12]
   1c480:	str	r0, [sp, #8]
   1c484:	ldr	r0, [sp, #8]
   1c488:	ldr	r1, [sp, #12]
   1c48c:	and	r0, r0, r1
   1c490:	cmn	r0, #1
   1c494:	bne	1c4a8 <__assert_fail@plt+0xb4ac>
   1c498:	b	1c49c <__assert_fail@plt+0xb4a0>
   1c49c:	mvn	r0, #0
   1c4a0:	str	r0, [fp, #-4]
   1c4a4:	b	1c4f8 <__assert_fail@plt+0xb4fc>
   1c4a8:	ldr	r0, [fp, #-8]
   1c4ac:	ldr	r1, [r0]
   1c4b0:	bic	r1, r1, #16
   1c4b4:	str	r1, [r0]
   1c4b8:	ldr	r0, [sp, #8]
   1c4bc:	ldr	r1, [sp, #12]
   1c4c0:	ldr	r2, [fp, #-8]
   1c4c4:	str	r1, [r2, #84]	; 0x54
   1c4c8:	str	r0, [r2, #80]	; 0x50
   1c4cc:	movw	r0, #0
   1c4d0:	str	r0, [fp, #-4]
   1c4d4:	b	1c4f8 <__assert_fail@plt+0xb4fc>
   1c4d8:	ldr	r0, [fp, #-8]
   1c4dc:	ldr	r2, [sp, #16]
   1c4e0:	ldr	r3, [sp, #20]
   1c4e4:	ldr	r1, [fp, #8]
   1c4e8:	mov	ip, sp
   1c4ec:	str	r1, [ip]
   1c4f0:	bl	10f84 <fseeko64@plt>
   1c4f4:	str	r0, [fp, #-4]
   1c4f8:	ldr	r0, [fp, #-4]
   1c4fc:	mov	sp, fp
   1c500:	pop	{fp, pc}
   1c504:	push	{fp, lr}
   1c508:	mov	fp, sp
   1c50c:	bl	10f3c <__errno_location@plt>
   1c510:	movw	r1, #12
   1c514:	str	r1, [r0]
   1c518:	movw	r0, #0
   1c51c:	pop	{fp, pc}
   1c520:	push	{fp, lr}
   1c524:	mov	fp, sp
   1c528:	sub	sp, sp, #8
   1c52c:	str	r0, [sp, #4]
   1c530:	ldr	r0, [sp, #4]
   1c534:	cmn	r0, #1
   1c538:	bhi	1c54c <__assert_fail@plt+0xb550>
   1c53c:	ldr	r0, [sp, #4]
   1c540:	bl	1bf88 <__assert_fail@plt+0xaf8c>
   1c544:	str	r0, [sp]
   1c548:	b	1c554 <__assert_fail@plt+0xb558>
   1c54c:	bl	1c504 <__assert_fail@plt+0xb508>
   1c550:	str	r0, [sp]
   1c554:	ldr	r0, [sp]
   1c558:	mov	sp, fp
   1c55c:	pop	{fp, pc}
   1c560:	push	{fp, lr}
   1c564:	mov	fp, sp
   1c568:	sub	sp, sp, #16
   1c56c:	str	r0, [fp, #-4]
   1c570:	str	r1, [sp, #8]
   1c574:	ldr	r0, [sp, #8]
   1c578:	cmn	r0, #1
   1c57c:	bhi	1c5b4 <__assert_fail@plt+0xb5b8>
   1c580:	ldr	r0, [fp, #-4]
   1c584:	ldr	r1, [sp, #8]
   1c588:	ldr	r2, [sp, #8]
   1c58c:	cmp	r2, #0
   1c590:	movw	r2, #0
   1c594:	movne	r2, #1
   1c598:	mvn	r3, #0
   1c59c:	eor	r2, r2, r3
   1c5a0:	and	r2, r2, #1
   1c5a4:	orr	r1, r1, r2
   1c5a8:	bl	1bff8 <__assert_fail@plt+0xaffc>
   1c5ac:	str	r0, [sp, #4]
   1c5b0:	b	1c5bc <__assert_fail@plt+0xb5c0>
   1c5b4:	bl	1c504 <__assert_fail@plt+0xb508>
   1c5b8:	str	r0, [sp, #4]
   1c5bc:	ldr	r0, [sp, #4]
   1c5c0:	mov	sp, fp
   1c5c4:	pop	{fp, pc}
   1c5c8:	push	{fp, lr}
   1c5cc:	mov	fp, sp
   1c5d0:	sub	sp, sp, #16
   1c5d4:	str	r0, [sp, #8]
   1c5d8:	str	r1, [sp, #4]
   1c5dc:	ldr	r0, [sp, #8]
   1c5e0:	mvn	r1, #0
   1c5e4:	cmp	r1, r0
   1c5e8:	bcs	1c60c <__assert_fail@plt+0xb610>
   1c5ec:	ldr	r0, [sp, #4]
   1c5f0:	cmp	r0, #0
   1c5f4:	beq	1c604 <__assert_fail@plt+0xb608>
   1c5f8:	bl	1c504 <__assert_fail@plt+0xb508>
   1c5fc:	str	r0, [fp, #-4]
   1c600:	b	1c64c <__assert_fail@plt+0xb650>
   1c604:	movw	r0, #0
   1c608:	str	r0, [sp, #8]
   1c60c:	ldr	r0, [sp, #4]
   1c610:	mvn	r1, #0
   1c614:	cmp	r1, r0
   1c618:	bcs	1c63c <__assert_fail@plt+0xb640>
   1c61c:	ldr	r0, [sp, #8]
   1c620:	cmp	r0, #0
   1c624:	beq	1c634 <__assert_fail@plt+0xb638>
   1c628:	bl	1c504 <__assert_fail@plt+0xb508>
   1c62c:	str	r0, [fp, #-4]
   1c630:	b	1c64c <__assert_fail@plt+0xb650>
   1c634:	movw	r0, #0
   1c638:	str	r0, [sp, #4]
   1c63c:	ldr	r0, [sp, #8]
   1c640:	ldr	r1, [sp, #4]
   1c644:	bl	1beec <__assert_fail@plt+0xaef0>
   1c648:	str	r0, [fp, #-4]
   1c64c:	ldr	r0, [fp, #-4]
   1c650:	mov	sp, fp
   1c654:	pop	{fp, pc}
   1c658:	push	{fp, lr}
   1c65c:	mov	fp, sp
   1c660:	sub	sp, sp, #16
   1c664:	str	r0, [fp, #-4]
   1c668:	str	r1, [sp, #8]
   1c66c:	str	r2, [sp, #4]
   1c670:	ldr	r0, [sp, #8]
   1c674:	cmp	r0, #0
   1c678:	beq	1c688 <__assert_fail@plt+0xb68c>
   1c67c:	ldr	r0, [sp, #4]
   1c680:	cmp	r0, #0
   1c684:	bne	1c694 <__assert_fail@plt+0xb698>
   1c688:	movw	r0, #1
   1c68c:	str	r0, [sp, #4]
   1c690:	str	r0, [sp, #8]
   1c694:	ldr	r0, [sp, #8]
   1c698:	cmn	r0, #1
   1c69c:	bhi	1c6c4 <__assert_fail@plt+0xb6c8>
   1c6a0:	ldr	r0, [sp, #4]
   1c6a4:	cmn	r0, #1
   1c6a8:	bhi	1c6c4 <__assert_fail@plt+0xb6c8>
   1c6ac:	ldr	r0, [fp, #-4]
   1c6b0:	ldr	r1, [sp, #8]
   1c6b4:	ldr	r2, [sp, #4]
   1c6b8:	bl	1c7e4 <__assert_fail@plt+0xb7e8>
   1c6bc:	str	r0, [sp]
   1c6c0:	b	1c6cc <__assert_fail@plt+0xb6d0>
   1c6c4:	bl	1c504 <__assert_fail@plt+0xb508>
   1c6c8:	str	r0, [sp]
   1c6cc:	ldr	r0, [sp]
   1c6d0:	mov	sp, fp
   1c6d4:	pop	{fp, pc}
   1c6d8:	push	{fp, lr}
   1c6dc:	mov	fp, sp
   1c6e0:	sub	sp, sp, #8
   1c6e4:	movw	r0, #14
   1c6e8:	bl	10fa8 <nl_langinfo@plt>
   1c6ec:	str	r0, [sp, #4]
   1c6f0:	ldr	r0, [sp, #4]
   1c6f4:	movw	r1, #0
   1c6f8:	cmp	r0, r1
   1c6fc:	bne	1c70c <__assert_fail@plt+0xb710>
   1c700:	movw	r0, #60820	; 0xed94
   1c704:	movt	r0, #1
   1c708:	str	r0, [sp, #4]
   1c70c:	ldr	r0, [sp, #4]
   1c710:	ldrb	r0, [r0]
   1c714:	cmp	r0, #0
   1c718:	bne	1c728 <__assert_fail@plt+0xb72c>
   1c71c:	movw	r0, #62421	; 0xf3d5
   1c720:	movt	r0, #1
   1c724:	str	r0, [sp, #4]
   1c728:	ldr	r0, [sp, #4]
   1c72c:	mov	sp, fp
   1c730:	pop	{fp, pc}
   1c734:	push	{fp, lr}
   1c738:	mov	fp, sp
   1c73c:	sub	sp, sp, #32
   1c740:	str	r0, [fp, #-8]
   1c744:	str	r1, [fp, #-12]
   1c748:	str	r2, [sp, #16]
   1c74c:	str	r3, [sp, #12]
   1c750:	ldr	r0, [fp, #-8]
   1c754:	movw	r1, #0
   1c758:	cmp	r0, r1
   1c75c:	bne	1c768 <__assert_fail@plt+0xb76c>
   1c760:	add	r0, sp, #4
   1c764:	str	r0, [fp, #-8]
   1c768:	ldr	r0, [fp, #-8]
   1c76c:	ldr	r1, [fp, #-12]
   1c770:	ldr	r2, [sp, #16]
   1c774:	ldr	r3, [sp, #12]
   1c778:	bl	10e94 <mbrtowc@plt>
   1c77c:	str	r0, [sp, #8]
   1c780:	ldr	r0, [sp, #8]
   1c784:	mvn	r1, #1
   1c788:	cmp	r1, r0
   1c78c:	bhi	1c7d0 <__assert_fail@plt+0xb7d4>
   1c790:	ldr	r0, [sp, #16]
   1c794:	cmp	r0, #0
   1c798:	beq	1c7d0 <__assert_fail@plt+0xb7d4>
   1c79c:	movw	r0, #0
   1c7a0:	bl	1e164 <__assert_fail@plt+0xd168>
   1c7a4:	tst	r0, #1
   1c7a8:	bne	1c7d0 <__assert_fail@plt+0xb7d4>
   1c7ac:	ldr	r0, [fp, #-12]
   1c7b0:	ldrb	r0, [r0]
   1c7b4:	strb	r0, [sp, #3]
   1c7b8:	ldrb	r0, [sp, #3]
   1c7bc:	ldr	r1, [fp, #-8]
   1c7c0:	str	r0, [r1]
   1c7c4:	movw	r0, #1
   1c7c8:	str	r0, [fp, #-4]
   1c7cc:	b	1c7d8 <__assert_fail@plt+0xb7dc>
   1c7d0:	ldr	r0, [sp, #8]
   1c7d4:	str	r0, [fp, #-4]
   1c7d8:	ldr	r0, [fp, #-4]
   1c7dc:	mov	sp, fp
   1c7e0:	pop	{fp, pc}
   1c7e4:	push	{fp, lr}
   1c7e8:	mov	fp, sp
   1c7ec:	sub	sp, sp, #96	; 0x60
   1c7f0:	str	r0, [fp, #-8]
   1c7f4:	str	r1, [fp, #-12]
   1c7f8:	str	r2, [fp, #-16]
   1c7fc:	b	1cbb4 <__assert_fail@plt+0xbbb8>
   1c800:	b	1c9d4 <__assert_fail@plt+0xb9d8>
   1c804:	ldr	r0, [fp, #-16]
   1c808:	cmp	r0, #0
   1c80c:	bcs	1c910 <__assert_fail@plt+0xb914>
   1c810:	ldr	r0, [fp, #-12]
   1c814:	cmp	r0, #0
   1c818:	bcs	1c8a0 <__assert_fail@plt+0xb8a4>
   1c81c:	b	1c83c <__assert_fail@plt+0xb840>
   1c820:	ldr	r0, [fp, #-12]
   1c824:	ldr	r1, [fp, #-16]
   1c828:	movw	r2, #127	; 0x7f
   1c82c:	udiv	r1, r2, r1
   1c830:	cmp	r0, r1
   1c834:	bcc	1c9a4 <__assert_fail@plt+0xb9a8>
   1c838:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c83c:	b	1c850 <__assert_fail@plt+0xb854>
   1c840:	ldr	r0, [fp, #-16]
   1c844:	cmp	r0, #1
   1c848:	bcc	1c860 <__assert_fail@plt+0xb864>
   1c84c:	b	1c86c <__assert_fail@plt+0xb870>
   1c850:	ldr	r0, [fp, #-16]
   1c854:	movw	r1, #0
   1c858:	cmp	r1, r0
   1c85c:	bcs	1c86c <__assert_fail@plt+0xb870>
   1c860:	movw	r0, #0
   1c864:	str	r0, [fp, #-24]	; 0xffffffe8
   1c868:	b	1c884 <__assert_fail@plt+0xb888>
   1c86c:	ldr	r0, [fp, #-16]
   1c870:	movw	r1, #0
   1c874:	sub	r0, r1, r0
   1c878:	movw	r1, #127	; 0x7f
   1c87c:	udiv	r0, r1, r0
   1c880:	str	r0, [fp, #-24]	; 0xffffffe8
   1c884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c888:	ldr	r1, [fp, #-12]
   1c88c:	mvn	r2, #0
   1c890:	sub	r1, r2, r1
   1c894:	cmp	r0, r1
   1c898:	bls	1c9a4 <__assert_fail@plt+0xb9a8>
   1c89c:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c8a0:	ldr	r0, [fp, #-16]
   1c8a4:	cmn	r0, #1
   1c8a8:	bne	1c8f4 <__assert_fail@plt+0xb8f8>
   1c8ac:	b	1c8cc <__assert_fail@plt+0xb8d0>
   1c8b0:	ldr	r0, [fp, #-12]
   1c8b4:	mvn	r1, #127	; 0x7f
   1c8b8:	add	r0, r0, r1
   1c8bc:	movw	r1, #0
   1c8c0:	cmp	r1, r0
   1c8c4:	bcc	1c9a4 <__assert_fail@plt+0xb9a8>
   1c8c8:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c8cc:	ldr	r0, [fp, #-12]
   1c8d0:	movw	r1, #0
   1c8d4:	cmp	r1, r0
   1c8d8:	bcs	1c9bc <__assert_fail@plt+0xb9c0>
   1c8dc:	ldr	r0, [fp, #-12]
   1c8e0:	sub	r0, r0, #1
   1c8e4:	movw	r1, #127	; 0x7f
   1c8e8:	cmp	r1, r0
   1c8ec:	bcc	1c9a4 <__assert_fail@plt+0xb9a8>
   1c8f0:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c8f4:	ldr	r0, [fp, #-16]
   1c8f8:	mvn	r1, #127	; 0x7f
   1c8fc:	udiv	r0, r1, r0
   1c900:	ldr	r1, [fp, #-12]
   1c904:	cmp	r0, r1
   1c908:	bcc	1c9a4 <__assert_fail@plt+0xb9a8>
   1c90c:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c910:	ldr	r0, [fp, #-16]
   1c914:	cmp	r0, #0
   1c918:	bne	1c920 <__assert_fail@plt+0xb924>
   1c91c:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c920:	ldr	r0, [fp, #-12]
   1c924:	cmp	r0, #0
   1c928:	bcs	1c98c <__assert_fail@plt+0xb990>
   1c92c:	ldr	r0, [fp, #-12]
   1c930:	cmn	r0, #1
   1c934:	bne	1c970 <__assert_fail@plt+0xb974>
   1c938:	b	1c958 <__assert_fail@plt+0xb95c>
   1c93c:	ldr	r0, [fp, #-16]
   1c940:	mvn	r1, #127	; 0x7f
   1c944:	add	r0, r0, r1
   1c948:	movw	r1, #0
   1c94c:	cmp	r1, r0
   1c950:	bcc	1c9a4 <__assert_fail@plt+0xb9a8>
   1c954:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c958:	ldr	r0, [fp, #-16]
   1c95c:	sub	r0, r0, #1
   1c960:	movw	r1, #127	; 0x7f
   1c964:	cmp	r1, r0
   1c968:	bcc	1c9a4 <__assert_fail@plt+0xb9a8>
   1c96c:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c970:	ldr	r0, [fp, #-12]
   1c974:	mvn	r1, #127	; 0x7f
   1c978:	udiv	r0, r1, r0
   1c97c:	ldr	r1, [fp, #-16]
   1c980:	cmp	r0, r1
   1c984:	bcc	1c9a4 <__assert_fail@plt+0xb9a8>
   1c988:	b	1c9bc <__assert_fail@plt+0xb9c0>
   1c98c:	ldr	r0, [fp, #-16]
   1c990:	movw	r1, #127	; 0x7f
   1c994:	udiv	r0, r1, r0
   1c998:	ldr	r1, [fp, #-12]
   1c99c:	cmp	r0, r1
   1c9a0:	bcs	1c9bc <__assert_fail@plt+0xb9c0>
   1c9a4:	ldr	r0, [fp, #-12]
   1c9a8:	ldr	r1, [fp, #-16]
   1c9ac:	mul	r0, r0, r1
   1c9b0:	sxtb	r0, r0
   1c9b4:	str	r0, [fp, #-20]	; 0xffffffec
   1c9b8:	b	1dae4 <__assert_fail@plt+0xcae8>
   1c9bc:	ldr	r0, [fp, #-12]
   1c9c0:	ldr	r1, [fp, #-16]
   1c9c4:	mul	r0, r0, r1
   1c9c8:	sxtb	r0, r0
   1c9cc:	str	r0, [fp, #-20]	; 0xffffffec
   1c9d0:	b	1dafc <__assert_fail@plt+0xcb00>
   1c9d4:	ldr	r0, [fp, #-16]
   1c9d8:	cmp	r0, #0
   1c9dc:	bcs	1cae8 <__assert_fail@plt+0xbaec>
   1c9e0:	ldr	r0, [fp, #-12]
   1c9e4:	cmp	r0, #0
   1c9e8:	bcs	1ca70 <__assert_fail@plt+0xba74>
   1c9ec:	b	1ca0c <__assert_fail@plt+0xba10>
   1c9f0:	ldr	r0, [fp, #-12]
   1c9f4:	ldr	r1, [fp, #-16]
   1c9f8:	movw	r2, #255	; 0xff
   1c9fc:	udiv	r1, r2, r1
   1ca00:	cmp	r0, r1
   1ca04:	bcc	1cb84 <__assert_fail@plt+0xbb88>
   1ca08:	b	1cb9c <__assert_fail@plt+0xbba0>
   1ca0c:	b	1ca20 <__assert_fail@plt+0xba24>
   1ca10:	ldr	r0, [fp, #-16]
   1ca14:	cmp	r0, #1
   1ca18:	bcc	1ca30 <__assert_fail@plt+0xba34>
   1ca1c:	b	1ca3c <__assert_fail@plt+0xba40>
   1ca20:	ldr	r0, [fp, #-16]
   1ca24:	movw	r1, #0
   1ca28:	cmp	r1, r0
   1ca2c:	bcs	1ca3c <__assert_fail@plt+0xba40>
   1ca30:	movw	r0, #0
   1ca34:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca38:	b	1ca54 <__assert_fail@plt+0xba58>
   1ca3c:	ldr	r0, [fp, #-16]
   1ca40:	movw	r1, #0
   1ca44:	sub	r0, r1, r0
   1ca48:	movw	r1, #255	; 0xff
   1ca4c:	udiv	r0, r1, r0
   1ca50:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ca58:	ldr	r1, [fp, #-12]
   1ca5c:	mvn	r2, #0
   1ca60:	sub	r1, r2, r1
   1ca64:	cmp	r0, r1
   1ca68:	bls	1cb84 <__assert_fail@plt+0xbb88>
   1ca6c:	b	1cb9c <__assert_fail@plt+0xbba0>
   1ca70:	b	1ca78 <__assert_fail@plt+0xba7c>
   1ca74:	b	1ca7c <__assert_fail@plt+0xba80>
   1ca78:	b	1cacc <__assert_fail@plt+0xbad0>
   1ca7c:	ldr	r0, [fp, #-16]
   1ca80:	cmn	r0, #1
   1ca84:	bne	1cacc <__assert_fail@plt+0xbad0>
   1ca88:	b	1caa4 <__assert_fail@plt+0xbaa8>
   1ca8c:	ldr	r0, [fp, #-12]
   1ca90:	add	r0, r0, #0
   1ca94:	movw	r1, #0
   1ca98:	cmp	r1, r0
   1ca9c:	bcc	1cb84 <__assert_fail@plt+0xbb88>
   1caa0:	b	1cb9c <__assert_fail@plt+0xbba0>
   1caa4:	ldr	r0, [fp, #-12]
   1caa8:	movw	r1, #0
   1caac:	cmp	r1, r0
   1cab0:	bcs	1cb9c <__assert_fail@plt+0xbba0>
   1cab4:	ldr	r0, [fp, #-12]
   1cab8:	sub	r0, r0, #1
   1cabc:	mvn	r1, #0
   1cac0:	cmp	r1, r0
   1cac4:	bcc	1cb84 <__assert_fail@plt+0xbb88>
   1cac8:	b	1cb9c <__assert_fail@plt+0xbba0>
   1cacc:	ldr	r0, [fp, #-16]
   1cad0:	movw	r1, #0
   1cad4:	udiv	r0, r1, r0
   1cad8:	ldr	r1, [fp, #-12]
   1cadc:	cmp	r0, r1
   1cae0:	bcc	1cb84 <__assert_fail@plt+0xbb88>
   1cae4:	b	1cb9c <__assert_fail@plt+0xbba0>
   1cae8:	ldr	r0, [fp, #-16]
   1caec:	cmp	r0, #0
   1caf0:	bne	1caf8 <__assert_fail@plt+0xbafc>
   1caf4:	b	1cb9c <__assert_fail@plt+0xbba0>
   1caf8:	ldr	r0, [fp, #-12]
   1cafc:	cmp	r0, #0
   1cb00:	bcs	1cb6c <__assert_fail@plt+0xbb70>
   1cb04:	b	1cb0c <__assert_fail@plt+0xbb10>
   1cb08:	b	1cb10 <__assert_fail@plt+0xbb14>
   1cb0c:	b	1cb50 <__assert_fail@plt+0xbb54>
   1cb10:	ldr	r0, [fp, #-12]
   1cb14:	cmn	r0, #1
   1cb18:	bne	1cb50 <__assert_fail@plt+0xbb54>
   1cb1c:	b	1cb38 <__assert_fail@plt+0xbb3c>
   1cb20:	ldr	r0, [fp, #-16]
   1cb24:	add	r0, r0, #0
   1cb28:	movw	r1, #0
   1cb2c:	cmp	r1, r0
   1cb30:	bcc	1cb84 <__assert_fail@plt+0xbb88>
   1cb34:	b	1cb9c <__assert_fail@plt+0xbba0>
   1cb38:	ldr	r0, [fp, #-16]
   1cb3c:	sub	r0, r0, #1
   1cb40:	mvn	r1, #0
   1cb44:	cmp	r1, r0
   1cb48:	bcc	1cb84 <__assert_fail@plt+0xbb88>
   1cb4c:	b	1cb9c <__assert_fail@plt+0xbba0>
   1cb50:	ldr	r0, [fp, #-12]
   1cb54:	movw	r1, #0
   1cb58:	udiv	r0, r1, r0
   1cb5c:	ldr	r1, [fp, #-16]
   1cb60:	cmp	r0, r1
   1cb64:	bcc	1cb84 <__assert_fail@plt+0xbb88>
   1cb68:	b	1cb9c <__assert_fail@plt+0xbba0>
   1cb6c:	ldr	r0, [fp, #-16]
   1cb70:	movw	r1, #255	; 0xff
   1cb74:	udiv	r0, r1, r0
   1cb78:	ldr	r1, [fp, #-12]
   1cb7c:	cmp	r0, r1
   1cb80:	bcs	1cb9c <__assert_fail@plt+0xbba0>
   1cb84:	ldr	r0, [fp, #-12]
   1cb88:	ldr	r1, [fp, #-16]
   1cb8c:	mul	r0, r0, r1
   1cb90:	and	r0, r0, #255	; 0xff
   1cb94:	str	r0, [fp, #-20]	; 0xffffffec
   1cb98:	b	1dae4 <__assert_fail@plt+0xcae8>
   1cb9c:	ldr	r0, [fp, #-12]
   1cba0:	ldr	r1, [fp, #-16]
   1cba4:	mul	r0, r0, r1
   1cba8:	and	r0, r0, #255	; 0xff
   1cbac:	str	r0, [fp, #-20]	; 0xffffffec
   1cbb0:	b	1dafc <__assert_fail@plt+0xcb00>
   1cbb4:	b	1cf6c <__assert_fail@plt+0xbf70>
   1cbb8:	b	1cd8c <__assert_fail@plt+0xbd90>
   1cbbc:	ldr	r0, [fp, #-16]
   1cbc0:	cmp	r0, #0
   1cbc4:	bcs	1ccc8 <__assert_fail@plt+0xbccc>
   1cbc8:	ldr	r0, [fp, #-12]
   1cbcc:	cmp	r0, #0
   1cbd0:	bcs	1cc58 <__assert_fail@plt+0xbc5c>
   1cbd4:	b	1cbf4 <__assert_fail@plt+0xbbf8>
   1cbd8:	ldr	r0, [fp, #-12]
   1cbdc:	ldr	r1, [fp, #-16]
   1cbe0:	movw	r2, #32767	; 0x7fff
   1cbe4:	udiv	r1, r2, r1
   1cbe8:	cmp	r0, r1
   1cbec:	bcc	1cd5c <__assert_fail@plt+0xbd60>
   1cbf0:	b	1cd74 <__assert_fail@plt+0xbd78>
   1cbf4:	b	1cc08 <__assert_fail@plt+0xbc0c>
   1cbf8:	ldr	r0, [fp, #-16]
   1cbfc:	cmp	r0, #1
   1cc00:	bcc	1cc18 <__assert_fail@plt+0xbc1c>
   1cc04:	b	1cc24 <__assert_fail@plt+0xbc28>
   1cc08:	ldr	r0, [fp, #-16]
   1cc0c:	movw	r1, #0
   1cc10:	cmp	r1, r0
   1cc14:	bcs	1cc24 <__assert_fail@plt+0xbc28>
   1cc18:	movw	r0, #0
   1cc1c:	str	r0, [fp, #-32]	; 0xffffffe0
   1cc20:	b	1cc3c <__assert_fail@plt+0xbc40>
   1cc24:	ldr	r0, [fp, #-16]
   1cc28:	movw	r1, #0
   1cc2c:	sub	r0, r1, r0
   1cc30:	movw	r1, #32767	; 0x7fff
   1cc34:	udiv	r0, r1, r0
   1cc38:	str	r0, [fp, #-32]	; 0xffffffe0
   1cc3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc40:	ldr	r1, [fp, #-12]
   1cc44:	mvn	r2, #0
   1cc48:	sub	r1, r2, r1
   1cc4c:	cmp	r0, r1
   1cc50:	bls	1cd5c <__assert_fail@plt+0xbd60>
   1cc54:	b	1cd74 <__assert_fail@plt+0xbd78>
   1cc58:	ldr	r0, [fp, #-16]
   1cc5c:	cmn	r0, #1
   1cc60:	bne	1ccac <__assert_fail@plt+0xbcb0>
   1cc64:	b	1cc84 <__assert_fail@plt+0xbc88>
   1cc68:	ldr	r0, [pc, #3760]	; 1db20 <__assert_fail@plt+0xcb24>
   1cc6c:	ldr	r1, [fp, #-12]
   1cc70:	add	r0, r1, r0
   1cc74:	movw	r1, #0
   1cc78:	cmp	r1, r0
   1cc7c:	bcc	1cd5c <__assert_fail@plt+0xbd60>
   1cc80:	b	1cd74 <__assert_fail@plt+0xbd78>
   1cc84:	ldr	r0, [fp, #-12]
   1cc88:	movw	r1, #0
   1cc8c:	cmp	r1, r0
   1cc90:	bcs	1cd74 <__assert_fail@plt+0xbd78>
   1cc94:	ldr	r0, [fp, #-12]
   1cc98:	sub	r0, r0, #1
   1cc9c:	movw	r1, #32767	; 0x7fff
   1cca0:	cmp	r1, r0
   1cca4:	bcc	1cd5c <__assert_fail@plt+0xbd60>
   1cca8:	b	1cd74 <__assert_fail@plt+0xbd78>
   1ccac:	ldr	r0, [pc, #3692]	; 1db20 <__assert_fail@plt+0xcb24>
   1ccb0:	ldr	r1, [fp, #-16]
   1ccb4:	udiv	r0, r0, r1
   1ccb8:	ldr	r1, [fp, #-12]
   1ccbc:	cmp	r0, r1
   1ccc0:	bcc	1cd5c <__assert_fail@plt+0xbd60>
   1ccc4:	b	1cd74 <__assert_fail@plt+0xbd78>
   1ccc8:	ldr	r0, [fp, #-16]
   1cccc:	cmp	r0, #0
   1ccd0:	bne	1ccd8 <__assert_fail@plt+0xbcdc>
   1ccd4:	b	1cd74 <__assert_fail@plt+0xbd78>
   1ccd8:	ldr	r0, [fp, #-12]
   1ccdc:	cmp	r0, #0
   1cce0:	bcs	1cd44 <__assert_fail@plt+0xbd48>
   1cce4:	ldr	r0, [fp, #-12]
   1cce8:	cmn	r0, #1
   1ccec:	bne	1cd28 <__assert_fail@plt+0xbd2c>
   1ccf0:	b	1cd10 <__assert_fail@plt+0xbd14>
   1ccf4:	ldr	r0, [pc, #3620]	; 1db20 <__assert_fail@plt+0xcb24>
   1ccf8:	ldr	r1, [fp, #-16]
   1ccfc:	add	r0, r1, r0
   1cd00:	movw	r1, #0
   1cd04:	cmp	r1, r0
   1cd08:	bcc	1cd5c <__assert_fail@plt+0xbd60>
   1cd0c:	b	1cd74 <__assert_fail@plt+0xbd78>
   1cd10:	ldr	r0, [fp, #-16]
   1cd14:	sub	r0, r0, #1
   1cd18:	movw	r1, #32767	; 0x7fff
   1cd1c:	cmp	r1, r0
   1cd20:	bcc	1cd5c <__assert_fail@plt+0xbd60>
   1cd24:	b	1cd74 <__assert_fail@plt+0xbd78>
   1cd28:	ldr	r0, [pc, #3568]	; 1db20 <__assert_fail@plt+0xcb24>
   1cd2c:	ldr	r1, [fp, #-12]
   1cd30:	udiv	r0, r0, r1
   1cd34:	ldr	r1, [fp, #-16]
   1cd38:	cmp	r0, r1
   1cd3c:	bcc	1cd5c <__assert_fail@plt+0xbd60>
   1cd40:	b	1cd74 <__assert_fail@plt+0xbd78>
   1cd44:	ldr	r0, [fp, #-16]
   1cd48:	movw	r1, #32767	; 0x7fff
   1cd4c:	udiv	r0, r1, r0
   1cd50:	ldr	r1, [fp, #-12]
   1cd54:	cmp	r0, r1
   1cd58:	bcs	1cd74 <__assert_fail@plt+0xbd78>
   1cd5c:	ldr	r0, [fp, #-12]
   1cd60:	ldr	r1, [fp, #-16]
   1cd64:	mul	r0, r0, r1
   1cd68:	sxth	r0, r0
   1cd6c:	str	r0, [fp, #-20]	; 0xffffffec
   1cd70:	b	1dae4 <__assert_fail@plt+0xcae8>
   1cd74:	ldr	r0, [fp, #-12]
   1cd78:	ldr	r1, [fp, #-16]
   1cd7c:	mul	r0, r0, r1
   1cd80:	sxth	r0, r0
   1cd84:	str	r0, [fp, #-20]	; 0xffffffec
   1cd88:	b	1dafc <__assert_fail@plt+0xcb00>
   1cd8c:	ldr	r0, [fp, #-16]
   1cd90:	cmp	r0, #0
   1cd94:	bcs	1cea0 <__assert_fail@plt+0xbea4>
   1cd98:	ldr	r0, [fp, #-12]
   1cd9c:	cmp	r0, #0
   1cda0:	bcs	1ce28 <__assert_fail@plt+0xbe2c>
   1cda4:	b	1cdc4 <__assert_fail@plt+0xbdc8>
   1cda8:	ldr	r0, [fp, #-12]
   1cdac:	ldr	r1, [fp, #-16]
   1cdb0:	movw	r2, #65535	; 0xffff
   1cdb4:	udiv	r1, r2, r1
   1cdb8:	cmp	r0, r1
   1cdbc:	bcc	1cf3c <__assert_fail@plt+0xbf40>
   1cdc0:	b	1cf54 <__assert_fail@plt+0xbf58>
   1cdc4:	b	1cdd8 <__assert_fail@plt+0xbddc>
   1cdc8:	ldr	r0, [fp, #-16]
   1cdcc:	cmp	r0, #1
   1cdd0:	bcc	1cde8 <__assert_fail@plt+0xbdec>
   1cdd4:	b	1cdf4 <__assert_fail@plt+0xbdf8>
   1cdd8:	ldr	r0, [fp, #-16]
   1cddc:	movw	r1, #0
   1cde0:	cmp	r1, r0
   1cde4:	bcs	1cdf4 <__assert_fail@plt+0xbdf8>
   1cde8:	movw	r0, #0
   1cdec:	str	r0, [fp, #-36]	; 0xffffffdc
   1cdf0:	b	1ce0c <__assert_fail@plt+0xbe10>
   1cdf4:	ldr	r0, [fp, #-16]
   1cdf8:	movw	r1, #0
   1cdfc:	sub	r0, r1, r0
   1ce00:	movw	r1, #65535	; 0xffff
   1ce04:	udiv	r0, r1, r0
   1ce08:	str	r0, [fp, #-36]	; 0xffffffdc
   1ce0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ce10:	ldr	r1, [fp, #-12]
   1ce14:	mvn	r2, #0
   1ce18:	sub	r1, r2, r1
   1ce1c:	cmp	r0, r1
   1ce20:	bls	1cf3c <__assert_fail@plt+0xbf40>
   1ce24:	b	1cf54 <__assert_fail@plt+0xbf58>
   1ce28:	b	1ce30 <__assert_fail@plt+0xbe34>
   1ce2c:	b	1ce34 <__assert_fail@plt+0xbe38>
   1ce30:	b	1ce84 <__assert_fail@plt+0xbe88>
   1ce34:	ldr	r0, [fp, #-16]
   1ce38:	cmn	r0, #1
   1ce3c:	bne	1ce84 <__assert_fail@plt+0xbe88>
   1ce40:	b	1ce5c <__assert_fail@plt+0xbe60>
   1ce44:	ldr	r0, [fp, #-12]
   1ce48:	add	r0, r0, #0
   1ce4c:	movw	r1, #0
   1ce50:	cmp	r1, r0
   1ce54:	bcc	1cf3c <__assert_fail@plt+0xbf40>
   1ce58:	b	1cf54 <__assert_fail@plt+0xbf58>
   1ce5c:	ldr	r0, [fp, #-12]
   1ce60:	movw	r1, #0
   1ce64:	cmp	r1, r0
   1ce68:	bcs	1cf54 <__assert_fail@plt+0xbf58>
   1ce6c:	ldr	r0, [fp, #-12]
   1ce70:	sub	r0, r0, #1
   1ce74:	mvn	r1, #0
   1ce78:	cmp	r1, r0
   1ce7c:	bcc	1cf3c <__assert_fail@plt+0xbf40>
   1ce80:	b	1cf54 <__assert_fail@plt+0xbf58>
   1ce84:	ldr	r0, [fp, #-16]
   1ce88:	movw	r1, #0
   1ce8c:	udiv	r0, r1, r0
   1ce90:	ldr	r1, [fp, #-12]
   1ce94:	cmp	r0, r1
   1ce98:	bcc	1cf3c <__assert_fail@plt+0xbf40>
   1ce9c:	b	1cf54 <__assert_fail@plt+0xbf58>
   1cea0:	ldr	r0, [fp, #-16]
   1cea4:	cmp	r0, #0
   1cea8:	bne	1ceb0 <__assert_fail@plt+0xbeb4>
   1ceac:	b	1cf54 <__assert_fail@plt+0xbf58>
   1ceb0:	ldr	r0, [fp, #-12]
   1ceb4:	cmp	r0, #0
   1ceb8:	bcs	1cf24 <__assert_fail@plt+0xbf28>
   1cebc:	b	1cec4 <__assert_fail@plt+0xbec8>
   1cec0:	b	1cec8 <__assert_fail@plt+0xbecc>
   1cec4:	b	1cf08 <__assert_fail@plt+0xbf0c>
   1cec8:	ldr	r0, [fp, #-12]
   1cecc:	cmn	r0, #1
   1ced0:	bne	1cf08 <__assert_fail@plt+0xbf0c>
   1ced4:	b	1cef0 <__assert_fail@plt+0xbef4>
   1ced8:	ldr	r0, [fp, #-16]
   1cedc:	add	r0, r0, #0
   1cee0:	movw	r1, #0
   1cee4:	cmp	r1, r0
   1cee8:	bcc	1cf3c <__assert_fail@plt+0xbf40>
   1ceec:	b	1cf54 <__assert_fail@plt+0xbf58>
   1cef0:	ldr	r0, [fp, #-16]
   1cef4:	sub	r0, r0, #1
   1cef8:	mvn	r1, #0
   1cefc:	cmp	r1, r0
   1cf00:	bcc	1cf3c <__assert_fail@plt+0xbf40>
   1cf04:	b	1cf54 <__assert_fail@plt+0xbf58>
   1cf08:	ldr	r0, [fp, #-12]
   1cf0c:	movw	r1, #0
   1cf10:	udiv	r0, r1, r0
   1cf14:	ldr	r1, [fp, #-16]
   1cf18:	cmp	r0, r1
   1cf1c:	bcc	1cf3c <__assert_fail@plt+0xbf40>
   1cf20:	b	1cf54 <__assert_fail@plt+0xbf58>
   1cf24:	ldr	r0, [fp, #-16]
   1cf28:	movw	r1, #65535	; 0xffff
   1cf2c:	udiv	r0, r1, r0
   1cf30:	ldr	r1, [fp, #-12]
   1cf34:	cmp	r0, r1
   1cf38:	bcs	1cf54 <__assert_fail@plt+0xbf58>
   1cf3c:	ldr	r0, [fp, #-12]
   1cf40:	ldr	r1, [fp, #-16]
   1cf44:	mul	r0, r0, r1
   1cf48:	uxth	r0, r0
   1cf4c:	str	r0, [fp, #-20]	; 0xffffffec
   1cf50:	b	1dae4 <__assert_fail@plt+0xcae8>
   1cf54:	ldr	r0, [fp, #-12]
   1cf58:	ldr	r1, [fp, #-16]
   1cf5c:	mul	r0, r0, r1
   1cf60:	uxth	r0, r0
   1cf64:	str	r0, [fp, #-20]	; 0xffffffec
   1cf68:	b	1dafc <__assert_fail@plt+0xcb00>
   1cf6c:	b	1cf70 <__assert_fail@plt+0xbf74>
   1cf70:	b	1d134 <__assert_fail@plt+0xc138>
   1cf74:	ldr	r0, [fp, #-16]
   1cf78:	cmp	r0, #0
   1cf7c:	bcs	1d07c <__assert_fail@plt+0xc080>
   1cf80:	ldr	r0, [fp, #-12]
   1cf84:	cmp	r0, #0
   1cf88:	bcs	1d010 <__assert_fail@plt+0xc014>
   1cf8c:	b	1cfac <__assert_fail@plt+0xbfb0>
   1cf90:	ldr	r0, [pc, #2944]	; 1db18 <__assert_fail@plt+0xcb1c>
   1cf94:	ldr	r1, [fp, #-12]
   1cf98:	ldr	r2, [fp, #-16]
   1cf9c:	udiv	r0, r0, r2
   1cfa0:	cmp	r1, r0
   1cfa4:	bcc	1d10c <__assert_fail@plt+0xc110>
   1cfa8:	b	1d120 <__assert_fail@plt+0xc124>
   1cfac:	b	1cfc0 <__assert_fail@plt+0xbfc4>
   1cfb0:	ldr	r0, [fp, #-16]
   1cfb4:	cmp	r0, #1
   1cfb8:	bcc	1cfd0 <__assert_fail@plt+0xbfd4>
   1cfbc:	b	1cfdc <__assert_fail@plt+0xbfe0>
   1cfc0:	ldr	r0, [fp, #-16]
   1cfc4:	movw	r1, #0
   1cfc8:	cmp	r1, r0
   1cfcc:	bcs	1cfdc <__assert_fail@plt+0xbfe0>
   1cfd0:	movw	r0, #0
   1cfd4:	str	r0, [fp, #-40]	; 0xffffffd8
   1cfd8:	b	1cff4 <__assert_fail@plt+0xbff8>
   1cfdc:	ldr	r0, [pc, #2868]	; 1db18 <__assert_fail@plt+0xcb1c>
   1cfe0:	ldr	r1, [fp, #-16]
   1cfe4:	movw	r2, #0
   1cfe8:	sub	r1, r2, r1
   1cfec:	udiv	r0, r0, r1
   1cff0:	str	r0, [fp, #-40]	; 0xffffffd8
   1cff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cff8:	ldr	r1, [fp, #-12]
   1cffc:	mvn	r2, #0
   1d000:	sub	r1, r2, r1
   1d004:	cmp	r0, r1
   1d008:	bls	1d10c <__assert_fail@plt+0xc110>
   1d00c:	b	1d120 <__assert_fail@plt+0xc124>
   1d010:	ldr	r0, [fp, #-16]
   1d014:	cmn	r0, #1
   1d018:	bne	1d060 <__assert_fail@plt+0xc064>
   1d01c:	b	1d038 <__assert_fail@plt+0xc03c>
   1d020:	ldr	r0, [fp, #-12]
   1d024:	add	r0, r0, #-2147483648	; 0x80000000
   1d028:	movw	r1, #0
   1d02c:	cmp	r1, r0
   1d030:	bcc	1d10c <__assert_fail@plt+0xc110>
   1d034:	b	1d120 <__assert_fail@plt+0xc124>
   1d038:	ldr	r0, [fp, #-12]
   1d03c:	movw	r1, #0
   1d040:	cmp	r1, r0
   1d044:	bcs	1d120 <__assert_fail@plt+0xc124>
   1d048:	ldr	r0, [pc, #2760]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d04c:	ldr	r1, [fp, #-12]
   1d050:	sub	r1, r1, #1
   1d054:	cmp	r0, r1
   1d058:	bcc	1d10c <__assert_fail@plt+0xc110>
   1d05c:	b	1d120 <__assert_fail@plt+0xc124>
   1d060:	ldr	r0, [pc, #2740]	; 1db1c <__assert_fail@plt+0xcb20>
   1d064:	ldr	r1, [fp, #-16]
   1d068:	udiv	r0, r0, r1
   1d06c:	ldr	r1, [fp, #-12]
   1d070:	cmp	r0, r1
   1d074:	bcc	1d10c <__assert_fail@plt+0xc110>
   1d078:	b	1d120 <__assert_fail@plt+0xc124>
   1d07c:	ldr	r0, [fp, #-16]
   1d080:	cmp	r0, #0
   1d084:	bne	1d08c <__assert_fail@plt+0xc090>
   1d088:	b	1d120 <__assert_fail@plt+0xc124>
   1d08c:	ldr	r0, [fp, #-12]
   1d090:	cmp	r0, #0
   1d094:	bcs	1d0f4 <__assert_fail@plt+0xc0f8>
   1d098:	ldr	r0, [fp, #-12]
   1d09c:	cmn	r0, #1
   1d0a0:	bne	1d0d8 <__assert_fail@plt+0xc0dc>
   1d0a4:	b	1d0c0 <__assert_fail@plt+0xc0c4>
   1d0a8:	ldr	r0, [fp, #-16]
   1d0ac:	add	r0, r0, #-2147483648	; 0x80000000
   1d0b0:	movw	r1, #0
   1d0b4:	cmp	r1, r0
   1d0b8:	bcc	1d10c <__assert_fail@plt+0xc110>
   1d0bc:	b	1d120 <__assert_fail@plt+0xc124>
   1d0c0:	ldr	r0, [pc, #2640]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d0c4:	ldr	r1, [fp, #-16]
   1d0c8:	sub	r1, r1, #1
   1d0cc:	cmp	r0, r1
   1d0d0:	bcc	1d10c <__assert_fail@plt+0xc110>
   1d0d4:	b	1d120 <__assert_fail@plt+0xc124>
   1d0d8:	ldr	r0, [pc, #2620]	; 1db1c <__assert_fail@plt+0xcb20>
   1d0dc:	ldr	r1, [fp, #-12]
   1d0e0:	udiv	r0, r0, r1
   1d0e4:	ldr	r1, [fp, #-16]
   1d0e8:	cmp	r0, r1
   1d0ec:	bcc	1d10c <__assert_fail@plt+0xc110>
   1d0f0:	b	1d120 <__assert_fail@plt+0xc124>
   1d0f4:	ldr	r0, [pc, #2588]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d0f8:	ldr	r1, [fp, #-16]
   1d0fc:	udiv	r0, r0, r1
   1d100:	ldr	r1, [fp, #-12]
   1d104:	cmp	r0, r1
   1d108:	bcs	1d120 <__assert_fail@plt+0xc124>
   1d10c:	ldr	r0, [fp, #-12]
   1d110:	ldr	r1, [fp, #-16]
   1d114:	mul	r0, r0, r1
   1d118:	str	r0, [fp, #-20]	; 0xffffffec
   1d11c:	b	1dae4 <__assert_fail@plt+0xcae8>
   1d120:	ldr	r0, [fp, #-12]
   1d124:	ldr	r1, [fp, #-16]
   1d128:	mul	r0, r0, r1
   1d12c:	str	r0, [fp, #-20]	; 0xffffffec
   1d130:	b	1dafc <__assert_fail@plt+0xcb00>
   1d134:	ldr	r0, [fp, #-16]
   1d138:	cmp	r0, #0
   1d13c:	bcs	1d248 <__assert_fail@plt+0xc24c>
   1d140:	ldr	r0, [fp, #-12]
   1d144:	cmp	r0, #0
   1d148:	bcs	1d1d0 <__assert_fail@plt+0xc1d4>
   1d14c:	b	1d16c <__assert_fail@plt+0xc170>
   1d150:	ldr	r0, [fp, #-12]
   1d154:	ldr	r1, [fp, #-16]
   1d158:	mvn	r2, #0
   1d15c:	udiv	r1, r2, r1
   1d160:	cmp	r0, r1
   1d164:	bcc	1d2e4 <__assert_fail@plt+0xc2e8>
   1d168:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d16c:	b	1d180 <__assert_fail@plt+0xc184>
   1d170:	ldr	r0, [fp, #-16]
   1d174:	cmp	r0, #1
   1d178:	bcc	1d190 <__assert_fail@plt+0xc194>
   1d17c:	b	1d19c <__assert_fail@plt+0xc1a0>
   1d180:	ldr	r0, [fp, #-16]
   1d184:	movw	r1, #0
   1d188:	cmp	r1, r0
   1d18c:	bcs	1d19c <__assert_fail@plt+0xc1a0>
   1d190:	movw	r0, #1
   1d194:	str	r0, [fp, #-44]	; 0xffffffd4
   1d198:	b	1d1b4 <__assert_fail@plt+0xc1b8>
   1d19c:	ldr	r0, [fp, #-16]
   1d1a0:	movw	r1, #0
   1d1a4:	sub	r0, r1, r0
   1d1a8:	mvn	r1, #0
   1d1ac:	udiv	r0, r1, r0
   1d1b0:	str	r0, [fp, #-44]	; 0xffffffd4
   1d1b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d1b8:	ldr	r1, [fp, #-12]
   1d1bc:	mvn	r2, #0
   1d1c0:	sub	r1, r2, r1
   1d1c4:	cmp	r0, r1
   1d1c8:	bls	1d2e4 <__assert_fail@plt+0xc2e8>
   1d1cc:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d1d0:	b	1d1d8 <__assert_fail@plt+0xc1dc>
   1d1d4:	b	1d1dc <__assert_fail@plt+0xc1e0>
   1d1d8:	b	1d22c <__assert_fail@plt+0xc230>
   1d1dc:	ldr	r0, [fp, #-16]
   1d1e0:	cmn	r0, #1
   1d1e4:	bne	1d22c <__assert_fail@plt+0xc230>
   1d1e8:	b	1d204 <__assert_fail@plt+0xc208>
   1d1ec:	ldr	r0, [fp, #-12]
   1d1f0:	add	r0, r0, #0
   1d1f4:	movw	r1, #0
   1d1f8:	cmp	r1, r0
   1d1fc:	bcc	1d2e4 <__assert_fail@plt+0xc2e8>
   1d200:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d204:	ldr	r0, [fp, #-12]
   1d208:	movw	r1, #0
   1d20c:	cmp	r1, r0
   1d210:	bcs	1d2f8 <__assert_fail@plt+0xc2fc>
   1d214:	ldr	r0, [fp, #-12]
   1d218:	sub	r0, r0, #1
   1d21c:	mvn	r1, #0
   1d220:	cmp	r1, r0
   1d224:	bcc	1d2e4 <__assert_fail@plt+0xc2e8>
   1d228:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d22c:	ldr	r0, [fp, #-16]
   1d230:	movw	r1, #0
   1d234:	udiv	r0, r1, r0
   1d238:	ldr	r1, [fp, #-12]
   1d23c:	cmp	r0, r1
   1d240:	bcc	1d2e4 <__assert_fail@plt+0xc2e8>
   1d244:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d248:	ldr	r0, [fp, #-16]
   1d24c:	cmp	r0, #0
   1d250:	bne	1d258 <__assert_fail@plt+0xc25c>
   1d254:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d258:	ldr	r0, [fp, #-12]
   1d25c:	cmp	r0, #0
   1d260:	bcs	1d2cc <__assert_fail@plt+0xc2d0>
   1d264:	b	1d26c <__assert_fail@plt+0xc270>
   1d268:	b	1d270 <__assert_fail@plt+0xc274>
   1d26c:	b	1d2b0 <__assert_fail@plt+0xc2b4>
   1d270:	ldr	r0, [fp, #-12]
   1d274:	cmn	r0, #1
   1d278:	bne	1d2b0 <__assert_fail@plt+0xc2b4>
   1d27c:	b	1d298 <__assert_fail@plt+0xc29c>
   1d280:	ldr	r0, [fp, #-16]
   1d284:	add	r0, r0, #0
   1d288:	movw	r1, #0
   1d28c:	cmp	r1, r0
   1d290:	bcc	1d2e4 <__assert_fail@plt+0xc2e8>
   1d294:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d298:	ldr	r0, [fp, #-16]
   1d29c:	sub	r0, r0, #1
   1d2a0:	mvn	r1, #0
   1d2a4:	cmp	r1, r0
   1d2a8:	bcc	1d2e4 <__assert_fail@plt+0xc2e8>
   1d2ac:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d2b0:	ldr	r0, [fp, #-12]
   1d2b4:	movw	r1, #0
   1d2b8:	udiv	r0, r1, r0
   1d2bc:	ldr	r1, [fp, #-16]
   1d2c0:	cmp	r0, r1
   1d2c4:	bcc	1d2e4 <__assert_fail@plt+0xc2e8>
   1d2c8:	b	1d2f8 <__assert_fail@plt+0xc2fc>
   1d2cc:	ldr	r0, [fp, #-16]
   1d2d0:	mvn	r1, #0
   1d2d4:	udiv	r0, r1, r0
   1d2d8:	ldr	r1, [fp, #-12]
   1d2dc:	cmp	r0, r1
   1d2e0:	bcs	1d2f8 <__assert_fail@plt+0xc2fc>
   1d2e4:	ldr	r0, [fp, #-12]
   1d2e8:	ldr	r1, [fp, #-16]
   1d2ec:	mul	r0, r0, r1
   1d2f0:	str	r0, [fp, #-20]	; 0xffffffec
   1d2f4:	b	1dae4 <__assert_fail@plt+0xcae8>
   1d2f8:	ldr	r0, [fp, #-12]
   1d2fc:	ldr	r1, [fp, #-16]
   1d300:	mul	r0, r0, r1
   1d304:	str	r0, [fp, #-20]	; 0xffffffec
   1d308:	b	1dafc <__assert_fail@plt+0xcb00>
   1d30c:	b	1d310 <__assert_fail@plt+0xc314>
   1d310:	b	1d4d4 <__assert_fail@plt+0xc4d8>
   1d314:	ldr	r0, [fp, #-16]
   1d318:	cmp	r0, #0
   1d31c:	bcs	1d41c <__assert_fail@plt+0xc420>
   1d320:	ldr	r0, [fp, #-12]
   1d324:	cmp	r0, #0
   1d328:	bcs	1d3b0 <__assert_fail@plt+0xc3b4>
   1d32c:	b	1d34c <__assert_fail@plt+0xc350>
   1d330:	ldr	r0, [pc, #2016]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d334:	ldr	r1, [fp, #-12]
   1d338:	ldr	r2, [fp, #-16]
   1d33c:	udiv	r0, r0, r2
   1d340:	cmp	r1, r0
   1d344:	bcc	1d4ac <__assert_fail@plt+0xc4b0>
   1d348:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d34c:	b	1d360 <__assert_fail@plt+0xc364>
   1d350:	ldr	r0, [fp, #-16]
   1d354:	cmp	r0, #1
   1d358:	bcc	1d370 <__assert_fail@plt+0xc374>
   1d35c:	b	1d37c <__assert_fail@plt+0xc380>
   1d360:	ldr	r0, [fp, #-16]
   1d364:	movw	r1, #0
   1d368:	cmp	r1, r0
   1d36c:	bcs	1d37c <__assert_fail@plt+0xc380>
   1d370:	movw	r0, #0
   1d374:	str	r0, [sp, #48]	; 0x30
   1d378:	b	1d394 <__assert_fail@plt+0xc398>
   1d37c:	ldr	r0, [pc, #1940]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d380:	ldr	r1, [fp, #-16]
   1d384:	movw	r2, #0
   1d388:	sub	r1, r2, r1
   1d38c:	udiv	r0, r0, r1
   1d390:	str	r0, [sp, #48]	; 0x30
   1d394:	ldr	r0, [sp, #48]	; 0x30
   1d398:	ldr	r1, [fp, #-12]
   1d39c:	mvn	r2, #0
   1d3a0:	sub	r1, r2, r1
   1d3a4:	cmp	r0, r1
   1d3a8:	bls	1d4ac <__assert_fail@plt+0xc4b0>
   1d3ac:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d3b0:	ldr	r0, [fp, #-16]
   1d3b4:	cmn	r0, #1
   1d3b8:	bne	1d400 <__assert_fail@plt+0xc404>
   1d3bc:	b	1d3d8 <__assert_fail@plt+0xc3dc>
   1d3c0:	ldr	r0, [fp, #-12]
   1d3c4:	add	r0, r0, #-2147483648	; 0x80000000
   1d3c8:	movw	r1, #0
   1d3cc:	cmp	r1, r0
   1d3d0:	bcc	1d4ac <__assert_fail@plt+0xc4b0>
   1d3d4:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d3d8:	ldr	r0, [fp, #-12]
   1d3dc:	movw	r1, #0
   1d3e0:	cmp	r1, r0
   1d3e4:	bcs	1d4c0 <__assert_fail@plt+0xc4c4>
   1d3e8:	ldr	r0, [pc, #1832]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d3ec:	ldr	r1, [fp, #-12]
   1d3f0:	sub	r1, r1, #1
   1d3f4:	cmp	r0, r1
   1d3f8:	bcc	1d4ac <__assert_fail@plt+0xc4b0>
   1d3fc:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d400:	ldr	r0, [pc, #1812]	; 1db1c <__assert_fail@plt+0xcb20>
   1d404:	ldr	r1, [fp, #-16]
   1d408:	udiv	r0, r0, r1
   1d40c:	ldr	r1, [fp, #-12]
   1d410:	cmp	r0, r1
   1d414:	bcc	1d4ac <__assert_fail@plt+0xc4b0>
   1d418:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d41c:	ldr	r0, [fp, #-16]
   1d420:	cmp	r0, #0
   1d424:	bne	1d42c <__assert_fail@plt+0xc430>
   1d428:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d42c:	ldr	r0, [fp, #-12]
   1d430:	cmp	r0, #0
   1d434:	bcs	1d494 <__assert_fail@plt+0xc498>
   1d438:	ldr	r0, [fp, #-12]
   1d43c:	cmn	r0, #1
   1d440:	bne	1d478 <__assert_fail@plt+0xc47c>
   1d444:	b	1d460 <__assert_fail@plt+0xc464>
   1d448:	ldr	r0, [fp, #-16]
   1d44c:	add	r0, r0, #-2147483648	; 0x80000000
   1d450:	movw	r1, #0
   1d454:	cmp	r1, r0
   1d458:	bcc	1d4ac <__assert_fail@plt+0xc4b0>
   1d45c:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d460:	ldr	r0, [pc, #1712]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d464:	ldr	r1, [fp, #-16]
   1d468:	sub	r1, r1, #1
   1d46c:	cmp	r0, r1
   1d470:	bcc	1d4ac <__assert_fail@plt+0xc4b0>
   1d474:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d478:	ldr	r0, [pc, #1692]	; 1db1c <__assert_fail@plt+0xcb20>
   1d47c:	ldr	r1, [fp, #-12]
   1d480:	udiv	r0, r0, r1
   1d484:	ldr	r1, [fp, #-16]
   1d488:	cmp	r0, r1
   1d48c:	bcc	1d4ac <__assert_fail@plt+0xc4b0>
   1d490:	b	1d4c0 <__assert_fail@plt+0xc4c4>
   1d494:	ldr	r0, [pc, #1660]	; 1db18 <__assert_fail@plt+0xcb1c>
   1d498:	ldr	r1, [fp, #-16]
   1d49c:	udiv	r0, r0, r1
   1d4a0:	ldr	r1, [fp, #-12]
   1d4a4:	cmp	r0, r1
   1d4a8:	bcs	1d4c0 <__assert_fail@plt+0xc4c4>
   1d4ac:	ldr	r0, [fp, #-12]
   1d4b0:	ldr	r1, [fp, #-16]
   1d4b4:	mul	r0, r0, r1
   1d4b8:	str	r0, [fp, #-20]	; 0xffffffec
   1d4bc:	b	1dae4 <__assert_fail@plt+0xcae8>
   1d4c0:	ldr	r0, [fp, #-12]
   1d4c4:	ldr	r1, [fp, #-16]
   1d4c8:	mul	r0, r0, r1
   1d4cc:	str	r0, [fp, #-20]	; 0xffffffec
   1d4d0:	b	1dafc <__assert_fail@plt+0xcb00>
   1d4d4:	ldr	r0, [fp, #-16]
   1d4d8:	cmp	r0, #0
   1d4dc:	bcs	1d5e8 <__assert_fail@plt+0xc5ec>
   1d4e0:	ldr	r0, [fp, #-12]
   1d4e4:	cmp	r0, #0
   1d4e8:	bcs	1d570 <__assert_fail@plt+0xc574>
   1d4ec:	b	1d50c <__assert_fail@plt+0xc510>
   1d4f0:	ldr	r0, [fp, #-12]
   1d4f4:	ldr	r1, [fp, #-16]
   1d4f8:	mvn	r2, #0
   1d4fc:	udiv	r1, r2, r1
   1d500:	cmp	r0, r1
   1d504:	bcc	1d684 <__assert_fail@plt+0xc688>
   1d508:	b	1d698 <__assert_fail@plt+0xc69c>
   1d50c:	b	1d520 <__assert_fail@plt+0xc524>
   1d510:	ldr	r0, [fp, #-16]
   1d514:	cmp	r0, #1
   1d518:	bcc	1d530 <__assert_fail@plt+0xc534>
   1d51c:	b	1d53c <__assert_fail@plt+0xc540>
   1d520:	ldr	r0, [fp, #-16]
   1d524:	movw	r1, #0
   1d528:	cmp	r1, r0
   1d52c:	bcs	1d53c <__assert_fail@plt+0xc540>
   1d530:	movw	r0, #1
   1d534:	str	r0, [sp, #44]	; 0x2c
   1d538:	b	1d554 <__assert_fail@plt+0xc558>
   1d53c:	ldr	r0, [fp, #-16]
   1d540:	movw	r1, #0
   1d544:	sub	r0, r1, r0
   1d548:	mvn	r1, #0
   1d54c:	udiv	r0, r1, r0
   1d550:	str	r0, [sp, #44]	; 0x2c
   1d554:	ldr	r0, [sp, #44]	; 0x2c
   1d558:	ldr	r1, [fp, #-12]
   1d55c:	mvn	r2, #0
   1d560:	sub	r1, r2, r1
   1d564:	cmp	r0, r1
   1d568:	bls	1d684 <__assert_fail@plt+0xc688>
   1d56c:	b	1d698 <__assert_fail@plt+0xc69c>
   1d570:	b	1d578 <__assert_fail@plt+0xc57c>
   1d574:	b	1d57c <__assert_fail@plt+0xc580>
   1d578:	b	1d5cc <__assert_fail@plt+0xc5d0>
   1d57c:	ldr	r0, [fp, #-16]
   1d580:	cmn	r0, #1
   1d584:	bne	1d5cc <__assert_fail@plt+0xc5d0>
   1d588:	b	1d5a4 <__assert_fail@plt+0xc5a8>
   1d58c:	ldr	r0, [fp, #-12]
   1d590:	add	r0, r0, #0
   1d594:	movw	r1, #0
   1d598:	cmp	r1, r0
   1d59c:	bcc	1d684 <__assert_fail@plt+0xc688>
   1d5a0:	b	1d698 <__assert_fail@plt+0xc69c>
   1d5a4:	ldr	r0, [fp, #-12]
   1d5a8:	movw	r1, #0
   1d5ac:	cmp	r1, r0
   1d5b0:	bcs	1d698 <__assert_fail@plt+0xc69c>
   1d5b4:	ldr	r0, [fp, #-12]
   1d5b8:	sub	r0, r0, #1
   1d5bc:	mvn	r1, #0
   1d5c0:	cmp	r1, r0
   1d5c4:	bcc	1d684 <__assert_fail@plt+0xc688>
   1d5c8:	b	1d698 <__assert_fail@plt+0xc69c>
   1d5cc:	ldr	r0, [fp, #-16]
   1d5d0:	movw	r1, #0
   1d5d4:	udiv	r0, r1, r0
   1d5d8:	ldr	r1, [fp, #-12]
   1d5dc:	cmp	r0, r1
   1d5e0:	bcc	1d684 <__assert_fail@plt+0xc688>
   1d5e4:	b	1d698 <__assert_fail@plt+0xc69c>
   1d5e8:	ldr	r0, [fp, #-16]
   1d5ec:	cmp	r0, #0
   1d5f0:	bne	1d5f8 <__assert_fail@plt+0xc5fc>
   1d5f4:	b	1d698 <__assert_fail@plt+0xc69c>
   1d5f8:	ldr	r0, [fp, #-12]
   1d5fc:	cmp	r0, #0
   1d600:	bcs	1d66c <__assert_fail@plt+0xc670>
   1d604:	b	1d60c <__assert_fail@plt+0xc610>
   1d608:	b	1d610 <__assert_fail@plt+0xc614>
   1d60c:	b	1d650 <__assert_fail@plt+0xc654>
   1d610:	ldr	r0, [fp, #-12]
   1d614:	cmn	r0, #1
   1d618:	bne	1d650 <__assert_fail@plt+0xc654>
   1d61c:	b	1d638 <__assert_fail@plt+0xc63c>
   1d620:	ldr	r0, [fp, #-16]
   1d624:	add	r0, r0, #0
   1d628:	movw	r1, #0
   1d62c:	cmp	r1, r0
   1d630:	bcc	1d684 <__assert_fail@plt+0xc688>
   1d634:	b	1d698 <__assert_fail@plt+0xc69c>
   1d638:	ldr	r0, [fp, #-16]
   1d63c:	sub	r0, r0, #1
   1d640:	mvn	r1, #0
   1d644:	cmp	r1, r0
   1d648:	bcc	1d684 <__assert_fail@plt+0xc688>
   1d64c:	b	1d698 <__assert_fail@plt+0xc69c>
   1d650:	ldr	r0, [fp, #-12]
   1d654:	movw	r1, #0
   1d658:	udiv	r0, r1, r0
   1d65c:	ldr	r1, [fp, #-16]
   1d660:	cmp	r0, r1
   1d664:	bcc	1d684 <__assert_fail@plt+0xc688>
   1d668:	b	1d698 <__assert_fail@plt+0xc69c>
   1d66c:	ldr	r0, [fp, #-16]
   1d670:	mvn	r1, #0
   1d674:	udiv	r0, r1, r0
   1d678:	ldr	r1, [fp, #-12]
   1d67c:	cmp	r0, r1
   1d680:	bcs	1d698 <__assert_fail@plt+0xc69c>
   1d684:	ldr	r0, [fp, #-12]
   1d688:	ldr	r1, [fp, #-16]
   1d68c:	mul	r0, r0, r1
   1d690:	str	r0, [fp, #-20]	; 0xffffffec
   1d694:	b	1dae4 <__assert_fail@plt+0xcae8>
   1d698:	ldr	r0, [fp, #-12]
   1d69c:	ldr	r1, [fp, #-16]
   1d6a0:	mul	r0, r0, r1
   1d6a4:	str	r0, [fp, #-20]	; 0xffffffec
   1d6a8:	b	1dafc <__assert_fail@plt+0xcb00>
   1d6ac:	b	1d8c8 <__assert_fail@plt+0xc8cc>
   1d6b0:	ldr	r0, [fp, #-16]
   1d6b4:	cmp	r0, #0
   1d6b8:	bcs	1d7f8 <__assert_fail@plt+0xc7fc>
   1d6bc:	ldr	r0, [fp, #-12]
   1d6c0:	cmp	r0, #0
   1d6c4:	bcs	1d784 <__assert_fail@plt+0xc788>
   1d6c8:	b	1d6cc <__assert_fail@plt+0xc6d0>
   1d6cc:	ldr	r0, [fp, #-12]
   1d6d0:	ldr	r2, [fp, #-16]
   1d6d4:	mvn	r1, #0
   1d6d8:	mvn	r3, #-2147483648	; 0x80000000
   1d6dc:	mov	ip, #0
   1d6e0:	str	r0, [sp, #40]	; 0x28
   1d6e4:	mov	r0, r1
   1d6e8:	mov	r1, r3
   1d6ec:	mov	r3, ip
   1d6f0:	bl	1e430 <__assert_fail@plt+0xd434>
   1d6f4:	ldr	r2, [sp, #40]	; 0x28
   1d6f8:	subs	r0, r2, r0
   1d6fc:	rscs	r1, r1, #0
   1d700:	blt	1d8a0 <__assert_fail@plt+0xc8a4>
   1d704:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d708:	b	1d71c <__assert_fail@plt+0xc720>
   1d70c:	ldr	r0, [fp, #-16]
   1d710:	cmp	r0, #1
   1d714:	bcc	1d72c <__assert_fail@plt+0xc730>
   1d718:	b	1d740 <__assert_fail@plt+0xc744>
   1d71c:	ldr	r0, [fp, #-16]
   1d720:	movw	r1, #0
   1d724:	cmp	r1, r0
   1d728:	bcs	1d740 <__assert_fail@plt+0xc744>
   1d72c:	mov	r0, #0
   1d730:	mvn	r1, #0
   1d734:	str	r1, [sp, #36]	; 0x24
   1d738:	str	r0, [sp, #32]
   1d73c:	b	1d764 <__assert_fail@plt+0xc768>
   1d740:	ldr	r0, [fp, #-16]
   1d744:	rsb	r2, r0, #0
   1d748:	mvn	r0, #0
   1d74c:	mvn	r1, #-2147483648	; 0x80000000
   1d750:	mov	r3, #0
   1d754:	bl	1e430 <__assert_fail@plt+0xd434>
   1d758:	str	r0, [sp, #36]	; 0x24
   1d75c:	str	r1, [sp, #32]
   1d760:	b	1d764 <__assert_fail@plt+0xc768>
   1d764:	ldr	r0, [sp, #32]
   1d768:	ldr	r1, [sp, #36]	; 0x24
   1d76c:	ldr	r2, [fp, #-12]
   1d770:	mvn	r2, r2
   1d774:	subs	r1, r2, r1
   1d778:	rscs	r0, r0, #0
   1d77c:	bge	1d8a0 <__assert_fail@plt+0xc8a4>
   1d780:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d784:	ldr	r0, [fp, #-16]
   1d788:	cmn	r0, #1
   1d78c:	bne	1d7cc <__assert_fail@plt+0xc7d0>
   1d790:	b	1d7ac <__assert_fail@plt+0xc7b0>
   1d794:	ldr	r0, [fp, #-12]
   1d798:	rsbs	r0, r0, #0
   1d79c:	mov	r1, #0
   1d7a0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d7a4:	blt	1d8a0 <__assert_fail@plt+0xc8a4>
   1d7a8:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d7ac:	ldr	r0, [fp, #-12]
   1d7b0:	movw	r1, #0
   1d7b4:	cmp	r1, r0
   1d7b8:	bcs	1d8b4 <__assert_fail@plt+0xc8b8>
   1d7bc:	mov	r0, #0
   1d7c0:	cmp	r0, #0
   1d7c4:	bne	1d8a0 <__assert_fail@plt+0xc8a4>
   1d7c8:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d7cc:	ldr	r2, [fp, #-16]
   1d7d0:	mov	r1, #-2147483648	; 0x80000000
   1d7d4:	mov	r0, #0
   1d7d8:	str	r0, [sp, #28]
   1d7dc:	ldr	r3, [sp, #28]
   1d7e0:	bl	1e35c <__assert_fail@plt+0xd360>
   1d7e4:	ldr	r2, [fp, #-12]
   1d7e8:	subs	r0, r0, r2
   1d7ec:	sbcs	r1, r1, #0
   1d7f0:	blt	1d8a0 <__assert_fail@plt+0xc8a4>
   1d7f4:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d7f8:	ldr	r0, [fp, #-16]
   1d7fc:	cmp	r0, #0
   1d800:	bne	1d808 <__assert_fail@plt+0xc80c>
   1d804:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d808:	ldr	r0, [fp, #-12]
   1d80c:	cmp	r0, #0
   1d810:	bcs	1d878 <__assert_fail@plt+0xc87c>
   1d814:	ldr	r0, [fp, #-12]
   1d818:	cmn	r0, #1
   1d81c:	bne	1d84c <__assert_fail@plt+0xc850>
   1d820:	b	1d83c <__assert_fail@plt+0xc840>
   1d824:	ldr	r0, [fp, #-16]
   1d828:	rsbs	r0, r0, #0
   1d82c:	mov	r1, #0
   1d830:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d834:	blt	1d8a0 <__assert_fail@plt+0xc8a4>
   1d838:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d83c:	mov	r0, #0
   1d840:	cmp	r0, #0
   1d844:	bne	1d8a0 <__assert_fail@plt+0xc8a4>
   1d848:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d84c:	ldr	r2, [fp, #-12]
   1d850:	mov	r1, #-2147483648	; 0x80000000
   1d854:	mov	r0, #0
   1d858:	str	r0, [sp, #24]
   1d85c:	ldr	r3, [sp, #24]
   1d860:	bl	1e35c <__assert_fail@plt+0xd360>
   1d864:	ldr	r2, [fp, #-16]
   1d868:	subs	r0, r0, r2
   1d86c:	sbcs	r1, r1, #0
   1d870:	blt	1d8a0 <__assert_fail@plt+0xc8a4>
   1d874:	b	1d8b4 <__assert_fail@plt+0xc8b8>
   1d878:	ldr	r2, [fp, #-16]
   1d87c:	mvn	r0, #0
   1d880:	mvn	r1, #-2147483648	; 0x80000000
   1d884:	mov	r3, #0
   1d888:	bl	1e430 <__assert_fail@plt+0xd434>
   1d88c:	ldr	r2, [fp, #-12]
   1d890:	subs	r0, r0, r2
   1d894:	sbcs	r1, r1, #0
   1d898:	bge	1d8b4 <__assert_fail@plt+0xc8b8>
   1d89c:	b	1d8a0 <__assert_fail@plt+0xc8a4>
   1d8a0:	ldr	r0, [fp, #-12]
   1d8a4:	ldr	r1, [fp, #-16]
   1d8a8:	mul	r0, r0, r1
   1d8ac:	str	r0, [fp, #-20]	; 0xffffffec
   1d8b0:	b	1dae4 <__assert_fail@plt+0xcae8>
   1d8b4:	ldr	r0, [fp, #-12]
   1d8b8:	ldr	r1, [fp, #-16]
   1d8bc:	mul	r0, r0, r1
   1d8c0:	str	r0, [fp, #-20]	; 0xffffffec
   1d8c4:	b	1dafc <__assert_fail@plt+0xcb00>
   1d8c8:	ldr	r0, [fp, #-16]
   1d8cc:	cmp	r0, #0
   1d8d0:	bcs	1da0c <__assert_fail@plt+0xca10>
   1d8d4:	ldr	r0, [fp, #-12]
   1d8d8:	cmp	r0, #0
   1d8dc:	bcs	1d994 <__assert_fail@plt+0xc998>
   1d8e0:	b	1d914 <__assert_fail@plt+0xc918>
   1d8e4:	ldr	r0, [fp, #-12]
   1d8e8:	ldr	r2, [fp, #-16]
   1d8ec:	mvn	r1, #0
   1d8f0:	mov	r3, #0
   1d8f4:	str	r0, [sp, #20]
   1d8f8:	mov	r0, r1
   1d8fc:	bl	1e430 <__assert_fail@plt+0xd434>
   1d900:	ldr	r2, [sp, #20]
   1d904:	subs	r0, r2, r0
   1d908:	rscs	r1, r1, #0
   1d90c:	bcc	1dabc <__assert_fail@plt+0xcac0>
   1d910:	b	1dad0 <__assert_fail@plt+0xcad4>
   1d914:	b	1d928 <__assert_fail@plt+0xc92c>
   1d918:	ldr	r0, [fp, #-16]
   1d91c:	cmp	r0, #1
   1d920:	bcc	1d938 <__assert_fail@plt+0xc93c>
   1d924:	b	1d94c <__assert_fail@plt+0xc950>
   1d928:	ldr	r0, [fp, #-16]
   1d92c:	movw	r1, #0
   1d930:	cmp	r1, r0
   1d934:	bcs	1d94c <__assert_fail@plt+0xc950>
   1d938:	mov	r0, #1
   1d93c:	mvn	r1, #0
   1d940:	str	r1, [sp, #16]
   1d944:	str	r0, [sp, #12]
   1d948:	b	1d974 <__assert_fail@plt+0xc978>
   1d94c:	ldr	r0, [fp, #-16]
   1d950:	rsb	r2, r0, #0
   1d954:	mvn	r0, #0
   1d958:	mov	r3, #0
   1d95c:	str	r0, [sp, #8]
   1d960:	ldr	r1, [sp, #8]
   1d964:	bl	1e430 <__assert_fail@plt+0xd434>
   1d968:	str	r0, [sp, #16]
   1d96c:	str	r1, [sp, #12]
   1d970:	b	1d974 <__assert_fail@plt+0xc978>
   1d974:	ldr	r0, [sp, #12]
   1d978:	ldr	r1, [sp, #16]
   1d97c:	ldr	r2, [fp, #-12]
   1d980:	mvn	r2, r2
   1d984:	subs	r1, r2, r1
   1d988:	rscs	r0, r0, #0
   1d98c:	bcs	1dabc <__assert_fail@plt+0xcac0>
   1d990:	b	1dad0 <__assert_fail@plt+0xcad4>
   1d994:	b	1d99c <__assert_fail@plt+0xc9a0>
   1d998:	b	1d9a0 <__assert_fail@plt+0xc9a4>
   1d99c:	b	1d9f0 <__assert_fail@plt+0xc9f4>
   1d9a0:	ldr	r0, [fp, #-16]
   1d9a4:	cmn	r0, #1
   1d9a8:	bne	1d9f0 <__assert_fail@plt+0xc9f4>
   1d9ac:	b	1d9c8 <__assert_fail@plt+0xc9cc>
   1d9b0:	ldr	r0, [fp, #-12]
   1d9b4:	add	r0, r0, #0
   1d9b8:	movw	r1, #0
   1d9bc:	cmp	r1, r0
   1d9c0:	bcc	1dabc <__assert_fail@plt+0xcac0>
   1d9c4:	b	1dad0 <__assert_fail@plt+0xcad4>
   1d9c8:	ldr	r0, [fp, #-12]
   1d9cc:	movw	r1, #0
   1d9d0:	cmp	r1, r0
   1d9d4:	bcs	1dad0 <__assert_fail@plt+0xcad4>
   1d9d8:	ldr	r0, [fp, #-12]
   1d9dc:	sub	r0, r0, #1
   1d9e0:	mvn	r1, #0
   1d9e4:	cmp	r1, r0
   1d9e8:	bcc	1dabc <__assert_fail@plt+0xcac0>
   1d9ec:	b	1dad0 <__assert_fail@plt+0xcad4>
   1d9f0:	ldr	r0, [fp, #-16]
   1d9f4:	movw	r1, #0
   1d9f8:	udiv	r0, r1, r0
   1d9fc:	ldr	r1, [fp, #-12]
   1da00:	cmp	r0, r1
   1da04:	bcc	1dabc <__assert_fail@plt+0xcac0>
   1da08:	b	1dad0 <__assert_fail@plt+0xcad4>
   1da0c:	ldr	r0, [fp, #-16]
   1da10:	cmp	r0, #0
   1da14:	bne	1da1c <__assert_fail@plt+0xca20>
   1da18:	b	1dad0 <__assert_fail@plt+0xcad4>
   1da1c:	ldr	r0, [fp, #-12]
   1da20:	cmp	r0, #0
   1da24:	bcs	1da90 <__assert_fail@plt+0xca94>
   1da28:	b	1da30 <__assert_fail@plt+0xca34>
   1da2c:	b	1da34 <__assert_fail@plt+0xca38>
   1da30:	b	1da74 <__assert_fail@plt+0xca78>
   1da34:	ldr	r0, [fp, #-12]
   1da38:	cmn	r0, #1
   1da3c:	bne	1da74 <__assert_fail@plt+0xca78>
   1da40:	b	1da5c <__assert_fail@plt+0xca60>
   1da44:	ldr	r0, [fp, #-16]
   1da48:	add	r0, r0, #0
   1da4c:	movw	r1, #0
   1da50:	cmp	r1, r0
   1da54:	bcc	1dabc <__assert_fail@plt+0xcac0>
   1da58:	b	1dad0 <__assert_fail@plt+0xcad4>
   1da5c:	ldr	r0, [fp, #-16]
   1da60:	sub	r0, r0, #1
   1da64:	mvn	r1, #0
   1da68:	cmp	r1, r0
   1da6c:	bcc	1dabc <__assert_fail@plt+0xcac0>
   1da70:	b	1dad0 <__assert_fail@plt+0xcad4>
   1da74:	ldr	r0, [fp, #-12]
   1da78:	movw	r1, #0
   1da7c:	udiv	r0, r1, r0
   1da80:	ldr	r1, [fp, #-16]
   1da84:	cmp	r0, r1
   1da88:	bcc	1dabc <__assert_fail@plt+0xcac0>
   1da8c:	b	1dad0 <__assert_fail@plt+0xcad4>
   1da90:	ldr	r2, [fp, #-16]
   1da94:	mvn	r0, #0
   1da98:	mov	r3, #0
   1da9c:	str	r0, [sp, #4]
   1daa0:	ldr	r1, [sp, #4]
   1daa4:	bl	1e430 <__assert_fail@plt+0xd434>
   1daa8:	ldr	r2, [fp, #-12]
   1daac:	subs	r0, r0, r2
   1dab0:	sbcs	r1, r1, #0
   1dab4:	bcs	1dad0 <__assert_fail@plt+0xcad4>
   1dab8:	b	1dabc <__assert_fail@plt+0xcac0>
   1dabc:	ldr	r0, [fp, #-12]
   1dac0:	ldr	r1, [fp, #-16]
   1dac4:	mul	r0, r0, r1
   1dac8:	str	r0, [fp, #-20]	; 0xffffffec
   1dacc:	b	1dae4 <__assert_fail@plt+0xcae8>
   1dad0:	ldr	r0, [fp, #-12]
   1dad4:	ldr	r1, [fp, #-16]
   1dad8:	mul	r0, r0, r1
   1dadc:	str	r0, [fp, #-20]	; 0xffffffec
   1dae0:	b	1dafc <__assert_fail@plt+0xcb00>
   1dae4:	bl	10f3c <__errno_location@plt>
   1dae8:	movw	r1, #12
   1daec:	str	r1, [r0]
   1daf0:	movw	r0, #0
   1daf4:	str	r0, [fp, #-4]
   1daf8:	b	1db0c <__assert_fail@plt+0xcb10>
   1dafc:	ldr	r0, [fp, #-8]
   1db00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1db04:	bl	1bff8 <__assert_fail@plt+0xaffc>
   1db08:	str	r0, [fp, #-4]
   1db0c:	ldr	r0, [fp, #-4]
   1db10:	mov	sp, fp
   1db14:	pop	{fp, pc}
   1db18:	svcvc	0x00ffffff
   1db1c:	andhi	r0, r0, r0
   1db20:			; <UNDEFINED> instruction: 0xffff8000
   1db24:	sub	sp, sp, #12
   1db28:	str	r0, [sp, #4]
   1db2c:	ldr	r0, [sp, #4]
   1db30:	sub	r1, r0, #48	; 0x30
   1db34:	cmp	r1, #10
   1db38:	str	r0, [sp]
   1db3c:	bcc	1db6c <__assert_fail@plt+0xcb70>
   1db40:	b	1db44 <__assert_fail@plt+0xcb48>
   1db44:	ldr	r0, [sp]
   1db48:	sub	r1, r0, #65	; 0x41
   1db4c:	cmp	r1, #26
   1db50:	bcc	1db6c <__assert_fail@plt+0xcb70>
   1db54:	b	1db58 <__assert_fail@plt+0xcb5c>
   1db58:	ldr	r0, [sp]
   1db5c:	sub	r1, r0, #97	; 0x61
   1db60:	cmp	r1, #25
   1db64:	bhi	1db7c <__assert_fail@plt+0xcb80>
   1db68:	b	1db6c <__assert_fail@plt+0xcb70>
   1db6c:	movw	r0, #1
   1db70:	and	r0, r0, #1
   1db74:	strb	r0, [sp, #11]
   1db78:	b	1db88 <__assert_fail@plt+0xcb8c>
   1db7c:	movw	r0, #0
   1db80:	and	r0, r0, #1
   1db84:	strb	r0, [sp, #11]
   1db88:	ldrb	r0, [sp, #11]
   1db8c:	and	r0, r0, #1
   1db90:	add	sp, sp, #12
   1db94:	bx	lr
   1db98:	sub	sp, sp, #12
   1db9c:	str	r0, [sp, #4]
   1dba0:	ldr	r0, [sp, #4]
   1dba4:	sub	r1, r0, #65	; 0x41
   1dba8:	cmp	r1, #26
   1dbac:	str	r0, [sp]
   1dbb0:	bcc	1dbcc <__assert_fail@plt+0xcbd0>
   1dbb4:	b	1dbb8 <__assert_fail@plt+0xcbbc>
   1dbb8:	ldr	r0, [sp]
   1dbbc:	sub	r1, r0, #97	; 0x61
   1dbc0:	cmp	r1, #25
   1dbc4:	bhi	1dbdc <__assert_fail@plt+0xcbe0>
   1dbc8:	b	1dbcc <__assert_fail@plt+0xcbd0>
   1dbcc:	movw	r0, #1
   1dbd0:	and	r0, r0, #1
   1dbd4:	strb	r0, [sp, #11]
   1dbd8:	b	1dbe8 <__assert_fail@plt+0xcbec>
   1dbdc:	movw	r0, #0
   1dbe0:	and	r0, r0, #1
   1dbe4:	strb	r0, [sp, #11]
   1dbe8:	ldrb	r0, [sp, #11]
   1dbec:	and	r0, r0, #1
   1dbf0:	add	sp, sp, #12
   1dbf4:	bx	lr
   1dbf8:	sub	sp, sp, #8
   1dbfc:	str	r0, [sp]
   1dc00:	ldr	r0, [sp]
   1dc04:	cmp	r0, #127	; 0x7f
   1dc08:	bhi	1dc20 <__assert_fail@plt+0xcc24>
   1dc0c:	b	1dc10 <__assert_fail@plt+0xcc14>
   1dc10:	movw	r0, #1
   1dc14:	and	r0, r0, #1
   1dc18:	strb	r0, [sp, #7]
   1dc1c:	b	1dc2c <__assert_fail@plt+0xcc30>
   1dc20:	movw	r0, #0
   1dc24:	and	r0, r0, #1
   1dc28:	strb	r0, [sp, #7]
   1dc2c:	ldrb	r0, [sp, #7]
   1dc30:	and	r0, r0, #1
   1dc34:	add	sp, sp, #8
   1dc38:	bx	lr
   1dc3c:	sub	sp, sp, #8
   1dc40:	str	r0, [sp, #4]
   1dc44:	ldr	r0, [sp, #4]
   1dc48:	cmp	r0, #32
   1dc4c:	movw	r0, #1
   1dc50:	str	r0, [sp]
   1dc54:	beq	1dc6c <__assert_fail@plt+0xcc70>
   1dc58:	ldr	r0, [sp, #4]
   1dc5c:	cmp	r0, #9
   1dc60:	movw	r0, #0
   1dc64:	moveq	r0, #1
   1dc68:	str	r0, [sp]
   1dc6c:	ldr	r0, [sp]
   1dc70:	and	r0, r0, #1
   1dc74:	add	sp, sp, #8
   1dc78:	bx	lr
   1dc7c:	sub	sp, sp, #12
   1dc80:	str	r0, [sp, #4]
   1dc84:	ldr	r0, [sp, #4]
   1dc88:	cmp	r0, #32
   1dc8c:	str	r0, [sp]
   1dc90:	bcc	1dca8 <__assert_fail@plt+0xccac>
   1dc94:	b	1dc98 <__assert_fail@plt+0xcc9c>
   1dc98:	ldr	r0, [sp]
   1dc9c:	cmp	r0, #127	; 0x7f
   1dca0:	bne	1dcb8 <__assert_fail@plt+0xccbc>
   1dca4:	b	1dca8 <__assert_fail@plt+0xccac>
   1dca8:	movw	r0, #1
   1dcac:	and	r0, r0, #1
   1dcb0:	strb	r0, [sp, #11]
   1dcb4:	b	1dcc4 <__assert_fail@plt+0xccc8>
   1dcb8:	movw	r0, #0
   1dcbc:	and	r0, r0, #1
   1dcc0:	strb	r0, [sp, #11]
   1dcc4:	ldrb	r0, [sp, #11]
   1dcc8:	and	r0, r0, #1
   1dccc:	add	sp, sp, #12
   1dcd0:	bx	lr
   1dcd4:	sub	sp, sp, #8
   1dcd8:	str	r0, [sp]
   1dcdc:	ldr	r0, [sp]
   1dce0:	sub	r0, r0, #48	; 0x30
   1dce4:	cmp	r0, #9
   1dce8:	bhi	1dd00 <__assert_fail@plt+0xcd04>
   1dcec:	b	1dcf0 <__assert_fail@plt+0xccf4>
   1dcf0:	movw	r0, #1
   1dcf4:	and	r0, r0, #1
   1dcf8:	strb	r0, [sp, #7]
   1dcfc:	b	1dd0c <__assert_fail@plt+0xcd10>
   1dd00:	movw	r0, #0
   1dd04:	and	r0, r0, #1
   1dd08:	strb	r0, [sp, #7]
   1dd0c:	ldrb	r0, [sp, #7]
   1dd10:	and	r0, r0, #1
   1dd14:	add	sp, sp, #8
   1dd18:	bx	lr
   1dd1c:	sub	sp, sp, #8
   1dd20:	str	r0, [sp]
   1dd24:	ldr	r0, [sp]
   1dd28:	sub	r0, r0, #33	; 0x21
   1dd2c:	cmp	r0, #93	; 0x5d
   1dd30:	bhi	1dd48 <__assert_fail@plt+0xcd4c>
   1dd34:	b	1dd38 <__assert_fail@plt+0xcd3c>
   1dd38:	movw	r0, #1
   1dd3c:	and	r0, r0, #1
   1dd40:	strb	r0, [sp, #7]
   1dd44:	b	1dd54 <__assert_fail@plt+0xcd58>
   1dd48:	movw	r0, #0
   1dd4c:	and	r0, r0, #1
   1dd50:	strb	r0, [sp, #7]
   1dd54:	ldrb	r0, [sp, #7]
   1dd58:	and	r0, r0, #1
   1dd5c:	add	sp, sp, #8
   1dd60:	bx	lr
   1dd64:	sub	sp, sp, #8
   1dd68:	str	r0, [sp]
   1dd6c:	ldr	r0, [sp]
   1dd70:	sub	r0, r0, #97	; 0x61
   1dd74:	cmp	r0, #25
   1dd78:	bhi	1dd90 <__assert_fail@plt+0xcd94>
   1dd7c:	b	1dd80 <__assert_fail@plt+0xcd84>
   1dd80:	movw	r0, #1
   1dd84:	and	r0, r0, #1
   1dd88:	strb	r0, [sp, #7]
   1dd8c:	b	1dd9c <__assert_fail@plt+0xcda0>
   1dd90:	movw	r0, #0
   1dd94:	and	r0, r0, #1
   1dd98:	strb	r0, [sp, #7]
   1dd9c:	ldrb	r0, [sp, #7]
   1dda0:	and	r0, r0, #1
   1dda4:	add	sp, sp, #8
   1dda8:	bx	lr
   1ddac:	sub	sp, sp, #8
   1ddb0:	str	r0, [sp]
   1ddb4:	ldr	r0, [sp]
   1ddb8:	sub	r0, r0, #32
   1ddbc:	cmp	r0, #94	; 0x5e
   1ddc0:	bhi	1ddd8 <__assert_fail@plt+0xcddc>
   1ddc4:	b	1ddc8 <__assert_fail@plt+0xcdcc>
   1ddc8:	movw	r0, #1
   1ddcc:	and	r0, r0, #1
   1ddd0:	strb	r0, [sp, #7]
   1ddd4:	b	1dde4 <__assert_fail@plt+0xcde8>
   1ddd8:	movw	r0, #0
   1dddc:	and	r0, r0, #1
   1dde0:	strb	r0, [sp, #7]
   1dde4:	ldrb	r0, [sp, #7]
   1dde8:	and	r0, r0, #1
   1ddec:	add	sp, sp, #8
   1ddf0:	bx	lr
   1ddf4:	sub	sp, sp, #12
   1ddf8:	str	r0, [sp, #4]
   1ddfc:	ldr	r0, [sp, #4]
   1de00:	sub	r0, r0, #33	; 0x21
   1de04:	cmp	r0, #93	; 0x5d
   1de08:	str	r0, [sp]
   1de0c:	bhi	1dfa8 <__assert_fail@plt+0xcfac>
   1de10:	add	r0, pc, #8
   1de14:	ldr	r1, [sp]
   1de18:	ldr	r0, [r0, r1, lsl #2]
   1de1c:	mov	pc, r0
   1de20:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de24:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de28:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de2c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de30:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de34:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de38:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de3c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de40:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de44:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de48:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de4c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de50:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de54:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de58:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de5c:	andeq	sp, r1, r8, lsr #31
   1de60:	andeq	sp, r1, r8, lsr #31
   1de64:	andeq	sp, r1, r8, lsr #31
   1de68:	andeq	sp, r1, r8, lsr #31
   1de6c:	andeq	sp, r1, r8, lsr #31
   1de70:	andeq	sp, r1, r8, lsr #31
   1de74:	andeq	sp, r1, r8, lsr #31
   1de78:	andeq	sp, r1, r8, lsr #31
   1de7c:	andeq	sp, r1, r8, lsr #31
   1de80:	andeq	sp, r1, r8, lsr #31
   1de84:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de88:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de8c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de90:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de94:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de98:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1de9c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1dea0:	andeq	sp, r1, r8, lsr #31
   1dea4:	andeq	sp, r1, r8, lsr #31
   1dea8:	andeq	sp, r1, r8, lsr #31
   1deac:	andeq	sp, r1, r8, lsr #31
   1deb0:	andeq	sp, r1, r8, lsr #31
   1deb4:	andeq	sp, r1, r8, lsr #31
   1deb8:	andeq	sp, r1, r8, lsr #31
   1debc:	andeq	sp, r1, r8, lsr #31
   1dec0:	andeq	sp, r1, r8, lsr #31
   1dec4:	andeq	sp, r1, r8, lsr #31
   1dec8:	andeq	sp, r1, r8, lsr #31
   1decc:	andeq	sp, r1, r8, lsr #31
   1ded0:	andeq	sp, r1, r8, lsr #31
   1ded4:	andeq	sp, r1, r8, lsr #31
   1ded8:	andeq	sp, r1, r8, lsr #31
   1dedc:	andeq	sp, r1, r8, lsr #31
   1dee0:	andeq	sp, r1, r8, lsr #31
   1dee4:	andeq	sp, r1, r8, lsr #31
   1dee8:	andeq	sp, r1, r8, lsr #31
   1deec:	andeq	sp, r1, r8, lsr #31
   1def0:	andeq	sp, r1, r8, lsr #31
   1def4:	andeq	sp, r1, r8, lsr #31
   1def8:	andeq	sp, r1, r8, lsr #31
   1defc:	andeq	sp, r1, r8, lsr #31
   1df00:	andeq	sp, r1, r8, lsr #31
   1df04:	andeq	sp, r1, r8, lsr #31
   1df08:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df0c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df10:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df14:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df18:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df1c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df20:	andeq	sp, r1, r8, lsr #31
   1df24:	andeq	sp, r1, r8, lsr #31
   1df28:	andeq	sp, r1, r8, lsr #31
   1df2c:	andeq	sp, r1, r8, lsr #31
   1df30:	andeq	sp, r1, r8, lsr #31
   1df34:	andeq	sp, r1, r8, lsr #31
   1df38:	andeq	sp, r1, r8, lsr #31
   1df3c:	andeq	sp, r1, r8, lsr #31
   1df40:	andeq	sp, r1, r8, lsr #31
   1df44:	andeq	sp, r1, r8, lsr #31
   1df48:	andeq	sp, r1, r8, lsr #31
   1df4c:	andeq	sp, r1, r8, lsr #31
   1df50:	andeq	sp, r1, r8, lsr #31
   1df54:	andeq	sp, r1, r8, lsr #31
   1df58:	andeq	sp, r1, r8, lsr #31
   1df5c:	andeq	sp, r1, r8, lsr #31
   1df60:	andeq	sp, r1, r8, lsr #31
   1df64:	andeq	sp, r1, r8, lsr #31
   1df68:	andeq	sp, r1, r8, lsr #31
   1df6c:	andeq	sp, r1, r8, lsr #31
   1df70:	andeq	sp, r1, r8, lsr #31
   1df74:	andeq	sp, r1, r8, lsr #31
   1df78:	andeq	sp, r1, r8, lsr #31
   1df7c:	andeq	sp, r1, r8, lsr #31
   1df80:	andeq	sp, r1, r8, lsr #31
   1df84:	andeq	sp, r1, r8, lsr #31
   1df88:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df8c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df90:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df94:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1df98:	movw	r0, #1
   1df9c:	and	r0, r0, #1
   1dfa0:	strb	r0, [sp, #11]
   1dfa4:	b	1dfb4 <__assert_fail@plt+0xcfb8>
   1dfa8:	movw	r0, #0
   1dfac:	and	r0, r0, #1
   1dfb0:	strb	r0, [sp, #11]
   1dfb4:	ldrb	r0, [sp, #11]
   1dfb8:	and	r0, r0, #1
   1dfbc:	add	sp, sp, #12
   1dfc0:	bx	lr
   1dfc4:	sub	sp, sp, #12
   1dfc8:	str	r0, [sp, #4]
   1dfcc:	ldr	r0, [sp, #4]
   1dfd0:	sub	r1, r0, #9
   1dfd4:	cmp	r1, #5
   1dfd8:	str	r0, [sp]
   1dfdc:	bcc	1dff4 <__assert_fail@plt+0xcff8>
   1dfe0:	b	1dfe4 <__assert_fail@plt+0xcfe8>
   1dfe4:	ldr	r0, [sp]
   1dfe8:	cmp	r0, #32
   1dfec:	bne	1e004 <__assert_fail@plt+0xd008>
   1dff0:	b	1dff4 <__assert_fail@plt+0xcff8>
   1dff4:	movw	r0, #1
   1dff8:	and	r0, r0, #1
   1dffc:	strb	r0, [sp, #11]
   1e000:	b	1e010 <__assert_fail@plt+0xd014>
   1e004:	movw	r0, #0
   1e008:	and	r0, r0, #1
   1e00c:	strb	r0, [sp, #11]
   1e010:	ldrb	r0, [sp, #11]
   1e014:	and	r0, r0, #1
   1e018:	add	sp, sp, #12
   1e01c:	bx	lr
   1e020:	sub	sp, sp, #8
   1e024:	str	r0, [sp]
   1e028:	ldr	r0, [sp]
   1e02c:	sub	r0, r0, #65	; 0x41
   1e030:	cmp	r0, #25
   1e034:	bhi	1e04c <__assert_fail@plt+0xd050>
   1e038:	b	1e03c <__assert_fail@plt+0xd040>
   1e03c:	movw	r0, #1
   1e040:	and	r0, r0, #1
   1e044:	strb	r0, [sp, #7]
   1e048:	b	1e058 <__assert_fail@plt+0xd05c>
   1e04c:	movw	r0, #0
   1e050:	and	r0, r0, #1
   1e054:	strb	r0, [sp, #7]
   1e058:	ldrb	r0, [sp, #7]
   1e05c:	and	r0, r0, #1
   1e060:	add	sp, sp, #8
   1e064:	bx	lr
   1e068:	sub	sp, sp, #12
   1e06c:	str	r0, [sp, #4]
   1e070:	ldr	r0, [sp, #4]
   1e074:	sub	r1, r0, #48	; 0x30
   1e078:	cmp	r1, #10
   1e07c:	str	r0, [sp]
   1e080:	bcc	1e0b0 <__assert_fail@plt+0xd0b4>
   1e084:	b	1e088 <__assert_fail@plt+0xd08c>
   1e088:	ldr	r0, [sp]
   1e08c:	sub	r1, r0, #65	; 0x41
   1e090:	cmp	r1, #6
   1e094:	bcc	1e0b0 <__assert_fail@plt+0xd0b4>
   1e098:	b	1e09c <__assert_fail@plt+0xd0a0>
   1e09c:	ldr	r0, [sp]
   1e0a0:	sub	r1, r0, #97	; 0x61
   1e0a4:	cmp	r1, #5
   1e0a8:	bhi	1e0c0 <__assert_fail@plt+0xd0c4>
   1e0ac:	b	1e0b0 <__assert_fail@plt+0xd0b4>
   1e0b0:	movw	r0, #1
   1e0b4:	and	r0, r0, #1
   1e0b8:	strb	r0, [sp, #11]
   1e0bc:	b	1e0cc <__assert_fail@plt+0xd0d0>
   1e0c0:	movw	r0, #0
   1e0c4:	and	r0, r0, #1
   1e0c8:	strb	r0, [sp, #11]
   1e0cc:	ldrb	r0, [sp, #11]
   1e0d0:	and	r0, r0, #1
   1e0d4:	add	sp, sp, #12
   1e0d8:	bx	lr
   1e0dc:	sub	sp, sp, #8
   1e0e0:	str	r0, [sp]
   1e0e4:	ldr	r0, [sp]
   1e0e8:	sub	r0, r0, #65	; 0x41
   1e0ec:	cmp	r0, #25
   1e0f0:	bhi	1e10c <__assert_fail@plt+0xd110>
   1e0f4:	b	1e0f8 <__assert_fail@plt+0xd0fc>
   1e0f8:	ldr	r0, [sp]
   1e0fc:	sub	r0, r0, #65	; 0x41
   1e100:	add	r0, r0, #97	; 0x61
   1e104:	str	r0, [sp, #4]
   1e108:	b	1e114 <__assert_fail@plt+0xd118>
   1e10c:	ldr	r0, [sp]
   1e110:	str	r0, [sp, #4]
   1e114:	ldr	r0, [sp, #4]
   1e118:	add	sp, sp, #8
   1e11c:	bx	lr
   1e120:	sub	sp, sp, #8
   1e124:	str	r0, [sp]
   1e128:	ldr	r0, [sp]
   1e12c:	sub	r0, r0, #97	; 0x61
   1e130:	cmp	r0, #25
   1e134:	bhi	1e150 <__assert_fail@plt+0xd154>
   1e138:	b	1e13c <__assert_fail@plt+0xd140>
   1e13c:	ldr	r0, [sp]
   1e140:	sub	r0, r0, #97	; 0x61
   1e144:	add	r0, r0, #65	; 0x41
   1e148:	str	r0, [sp, #4]
   1e14c:	b	1e158 <__assert_fail@plt+0xd15c>
   1e150:	ldr	r0, [sp]
   1e154:	str	r0, [sp, #4]
   1e158:	ldr	r0, [sp, #4]
   1e15c:	add	sp, sp, #8
   1e160:	bx	lr
   1e164:	push	{r4, r5, fp, lr}
   1e168:	add	fp, sp, #8
   1e16c:	sub	sp, sp, #272	; 0x110
   1e170:	add	r1, sp, #7
   1e174:	str	r0, [fp, #-16]
   1e178:	ldr	r0, [fp, #-16]
   1e17c:	movw	r2, #257	; 0x101
   1e180:	bl	1e200 <__assert_fail@plt+0xd204>
   1e184:	cmp	r0, #0
   1e188:	beq	1e19c <__assert_fail@plt+0xd1a0>
   1e18c:	movw	r0, #0
   1e190:	and	r0, r0, #1
   1e194:	strb	r0, [fp, #-9]
   1e198:	b	1e1f0 <__assert_fail@plt+0xd1f4>
   1e19c:	add	r0, sp, #7
   1e1a0:	movw	r1, #62427	; 0xf3db
   1e1a4:	movt	r1, #1
   1e1a8:	bl	10dc8 <strcmp@plt>
   1e1ac:	cmp	r0, #0
   1e1b0:	movw	r0, #1
   1e1b4:	str	r0, [sp]
   1e1b8:	beq	1e1dc <__assert_fail@plt+0xd1e0>
   1e1bc:	add	r0, sp, #7
   1e1c0:	movw	r1, #62429	; 0xf3dd
   1e1c4:	movt	r1, #1
   1e1c8:	bl	10dc8 <strcmp@plt>
   1e1cc:	cmp	r0, #0
   1e1d0:	movw	r0, #0
   1e1d4:	moveq	r0, #1
   1e1d8:	str	r0, [sp]
   1e1dc:	ldr	r0, [sp]
   1e1e0:	mvn	r1, #0
   1e1e4:	eor	r0, r0, r1
   1e1e8:	and	r0, r0, #1
   1e1ec:	strb	r0, [fp, #-9]
   1e1f0:	ldrb	r0, [fp, #-9]
   1e1f4:	and	r0, r0, #1
   1e1f8:	sub	sp, fp, #8
   1e1fc:	pop	{r4, r5, fp, pc}
   1e200:	push	{fp, lr}
   1e204:	mov	fp, sp
   1e208:	sub	sp, sp, #16
   1e20c:	str	r0, [fp, #-4]
   1e210:	str	r1, [sp, #8]
   1e214:	str	r2, [sp, #4]
   1e218:	ldr	r0, [fp, #-4]
   1e21c:	ldr	r1, [sp, #8]
   1e220:	ldr	r2, [sp, #4]
   1e224:	bl	1e230 <__assert_fail@plt+0xd234>
   1e228:	mov	sp, fp
   1e22c:	pop	{fp, pc}
   1e230:	push	{fp, lr}
   1e234:	mov	fp, sp
   1e238:	sub	sp, sp, #24
   1e23c:	str	r0, [fp, #-8]
   1e240:	str	r1, [sp, #12]
   1e244:	str	r2, [sp, #8]
   1e248:	ldr	r0, [fp, #-8]
   1e24c:	bl	1e330 <__assert_fail@plt+0xd334>
   1e250:	str	r0, [sp, #4]
   1e254:	ldr	r0, [sp, #4]
   1e258:	movw	r1, #0
   1e25c:	cmp	r0, r1
   1e260:	bne	1e288 <__assert_fail@plt+0xd28c>
   1e264:	ldr	r0, [sp, #8]
   1e268:	cmp	r0, #0
   1e26c:	bls	1e27c <__assert_fail@plt+0xd280>
   1e270:	ldr	r0, [sp, #12]
   1e274:	movw	r1, #0
   1e278:	strb	r1, [r0]
   1e27c:	movw	r0, #22
   1e280:	str	r0, [fp, #-4]
   1e284:	b	1e304 <__assert_fail@plt+0xd308>
   1e288:	ldr	r0, [sp, #4]
   1e28c:	bl	10f18 <strlen@plt>
   1e290:	str	r0, [sp]
   1e294:	ldr	r0, [sp]
   1e298:	ldr	r1, [sp, #8]
   1e29c:	cmp	r0, r1
   1e2a0:	bcs	1e2c4 <__assert_fail@plt+0xd2c8>
   1e2a4:	ldr	r0, [sp, #12]
   1e2a8:	ldr	r1, [sp, #4]
   1e2ac:	ldr	r2, [sp]
   1e2b0:	add	r2, r2, #1
   1e2b4:	bl	10e04 <memcpy@plt>
   1e2b8:	movw	r0, #0
   1e2bc:	str	r0, [fp, #-4]
   1e2c0:	b	1e304 <__assert_fail@plt+0xd308>
   1e2c4:	ldr	r0, [sp, #8]
   1e2c8:	cmp	r0, #0
   1e2cc:	bls	1e2fc <__assert_fail@plt+0xd300>
   1e2d0:	ldr	r0, [sp, #12]
   1e2d4:	ldr	r1, [sp, #4]
   1e2d8:	ldr	r2, [sp, #8]
   1e2dc:	sub	r2, r2, #1
   1e2e0:	bl	10e04 <memcpy@plt>
   1e2e4:	ldr	r0, [sp, #12]
   1e2e8:	ldr	r1, [sp, #8]
   1e2ec:	sub	r1, r1, #1
   1e2f0:	add	r0, r0, r1
   1e2f4:	movw	r1, #0
   1e2f8:	strb	r1, [r0]
   1e2fc:	movw	r0, #34	; 0x22
   1e300:	str	r0, [fp, #-4]
   1e304:	ldr	r0, [fp, #-4]
   1e308:	mov	sp, fp
   1e30c:	pop	{fp, pc}
   1e310:	push	{fp, lr}
   1e314:	mov	fp, sp
   1e318:	sub	sp, sp, #8
   1e31c:	str	r0, [sp, #4]
   1e320:	ldr	r0, [sp, #4]
   1e324:	bl	1e330 <__assert_fail@plt+0xd334>
   1e328:	mov	sp, fp
   1e32c:	pop	{fp, pc}
   1e330:	push	{fp, lr}
   1e334:	mov	fp, sp
   1e338:	sub	sp, sp, #8
   1e33c:	str	r0, [sp, #4]
   1e340:	ldr	r0, [sp, #4]
   1e344:	movw	r1, #0
   1e348:	bl	10f90 <setlocale@plt>
   1e34c:	str	r0, [sp]
   1e350:	ldr	r0, [sp]
   1e354:	mov	sp, fp
   1e358:	pop	{fp, pc}
   1e35c:	cmp	r3, #0
   1e360:	cmpeq	r2, #0
   1e364:	bne	1e388 <__assert_fail@plt+0xd38c>
   1e368:	cmp	r1, #0
   1e36c:	movlt	r1, #-2147483648	; 0x80000000
   1e370:	movlt	r0, #0
   1e374:	blt	1e384 <__assert_fail@plt+0xd388>
   1e378:	cmpeq	r0, #0
   1e37c:	mvnne	r1, #-2147483648	; 0x80000000
   1e380:	mvnne	r0, #0
   1e384:	b	1e46c <__assert_fail@plt+0xd470>
   1e388:	sub	sp, sp, #8
   1e38c:	push	{sp, lr}
   1e390:	cmp	r1, #0
   1e394:	blt	1e3b4 <__assert_fail@plt+0xd3b8>
   1e398:	cmp	r3, #0
   1e39c:	blt	1e3e8 <__assert_fail@plt+0xd3ec>
   1e3a0:	bl	1e47c <__assert_fail@plt+0xd480>
   1e3a4:	ldr	lr, [sp, #4]
   1e3a8:	add	sp, sp, #8
   1e3ac:	pop	{r2, r3}
   1e3b0:	bx	lr
   1e3b4:	rsbs	r0, r0, #0
   1e3b8:	sbc	r1, r1, r1, lsl #1
   1e3bc:	cmp	r3, #0
   1e3c0:	blt	1e40c <__assert_fail@plt+0xd410>
   1e3c4:	bl	1e47c <__assert_fail@plt+0xd480>
   1e3c8:	ldr	lr, [sp, #4]
   1e3cc:	add	sp, sp, #8
   1e3d0:	pop	{r2, r3}
   1e3d4:	rsbs	r0, r0, #0
   1e3d8:	sbc	r1, r1, r1, lsl #1
   1e3dc:	rsbs	r2, r2, #0
   1e3e0:	sbc	r3, r3, r3, lsl #1
   1e3e4:	bx	lr
   1e3e8:	rsbs	r2, r2, #0
   1e3ec:	sbc	r3, r3, r3, lsl #1
   1e3f0:	bl	1e47c <__assert_fail@plt+0xd480>
   1e3f4:	ldr	lr, [sp, #4]
   1e3f8:	add	sp, sp, #8
   1e3fc:	pop	{r2, r3}
   1e400:	rsbs	r0, r0, #0
   1e404:	sbc	r1, r1, r1, lsl #1
   1e408:	bx	lr
   1e40c:	rsbs	r2, r2, #0
   1e410:	sbc	r3, r3, r3, lsl #1
   1e414:	bl	1e47c <__assert_fail@plt+0xd480>
   1e418:	ldr	lr, [sp, #4]
   1e41c:	add	sp, sp, #8
   1e420:	pop	{r2, r3}
   1e424:	rsbs	r2, r2, #0
   1e428:	sbc	r3, r3, r3, lsl #1
   1e42c:	bx	lr
   1e430:	cmp	r3, #0
   1e434:	cmpeq	r2, #0
   1e438:	bne	1e450 <__assert_fail@plt+0xd454>
   1e43c:	cmp	r1, #0
   1e440:	cmpeq	r0, #0
   1e444:	mvnne	r1, #0
   1e448:	mvnne	r0, #0
   1e44c:	b	1e46c <__assert_fail@plt+0xd470>
   1e450:	sub	sp, sp, #8
   1e454:	push	{sp, lr}
   1e458:	bl	1e47c <__assert_fail@plt+0xd480>
   1e45c:	ldr	lr, [sp, #4]
   1e460:	add	sp, sp, #8
   1e464:	pop	{r2, r3}
   1e468:	bx	lr
   1e46c:	push	{r1, lr}
   1e470:	mov	r0, #8
   1e474:	bl	10dbc <raise@plt>
   1e478:	pop	{r1, pc}
   1e47c:	cmp	r1, r3
   1e480:	cmpeq	r0, r2
   1e484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e488:	mov	r4, r0
   1e48c:	movcc	r0, #0
   1e490:	mov	r5, r1
   1e494:	ldr	lr, [sp, #36]	; 0x24
   1e498:	movcc	r1, r0
   1e49c:	bcc	1e598 <__assert_fail@plt+0xd59c>
   1e4a0:	cmp	r3, #0
   1e4a4:	clzeq	ip, r2
   1e4a8:	clzne	ip, r3
   1e4ac:	addeq	ip, ip, #32
   1e4b0:	cmp	r5, #0
   1e4b4:	clzeq	r1, r4
   1e4b8:	addeq	r1, r1, #32
   1e4bc:	clzne	r1, r5
   1e4c0:	sub	ip, ip, r1
   1e4c4:	sub	sl, ip, #32
   1e4c8:	lsl	r9, r3, ip
   1e4cc:	rsb	fp, ip, #32
   1e4d0:	orr	r9, r9, r2, lsl sl
   1e4d4:	orr	r9, r9, r2, lsr fp
   1e4d8:	lsl	r8, r2, ip
   1e4dc:	cmp	r5, r9
   1e4e0:	cmpeq	r4, r8
   1e4e4:	movcc	r0, #0
   1e4e8:	movcc	r1, r0
   1e4ec:	bcc	1e508 <__assert_fail@plt+0xd50c>
   1e4f0:	mov	r0, #1
   1e4f4:	subs	r4, r4, r8
   1e4f8:	lsl	r1, r0, sl
   1e4fc:	orr	r1, r1, r0, lsr fp
   1e500:	lsl	r0, r0, ip
   1e504:	sbc	r5, r5, r9
   1e508:	cmp	ip, #0
   1e50c:	beq	1e598 <__assert_fail@plt+0xd59c>
   1e510:	lsr	r6, r8, #1
   1e514:	orr	r6, r6, r9, lsl #31
   1e518:	lsr	r7, r9, #1
   1e51c:	mov	r2, ip
   1e520:	b	1e544 <__assert_fail@plt+0xd548>
   1e524:	subs	r3, r4, r6
   1e528:	sbc	r8, r5, r7
   1e52c:	adds	r3, r3, r3
   1e530:	adc	r8, r8, r8
   1e534:	adds	r4, r3, #1
   1e538:	adc	r5, r8, #0
   1e53c:	subs	r2, r2, #1
   1e540:	beq	1e560 <__assert_fail@plt+0xd564>
   1e544:	cmp	r5, r7
   1e548:	cmpeq	r4, r6
   1e54c:	bcs	1e524 <__assert_fail@plt+0xd528>
   1e550:	adds	r4, r4, r4
   1e554:	adc	r5, r5, r5
   1e558:	subs	r2, r2, #1
   1e55c:	bne	1e544 <__assert_fail@plt+0xd548>
   1e560:	lsr	r3, r4, ip
   1e564:	orr	r3, r3, r5, lsl fp
   1e568:	lsr	r2, r5, ip
   1e56c:	orr	r3, r3, r5, lsr sl
   1e570:	adds	r0, r0, r4
   1e574:	mov	r4, r3
   1e578:	lsl	r3, r2, ip
   1e57c:	orr	r3, r3, r4, lsl sl
   1e580:	lsl	ip, r4, ip
   1e584:	orr	r3, r3, r4, lsr fp
   1e588:	adc	r1, r1, r5
   1e58c:	subs	r0, r0, ip
   1e590:	mov	r5, r2
   1e594:	sbc	r1, r1, r3
   1e598:	cmp	lr, #0
   1e59c:	strdne	r4, [lr]
   1e5a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e5a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e5a8:	mov	r7, r0
   1e5ac:	ldr	r6, [pc, #72]	; 1e5fc <__assert_fail@plt+0xd600>
   1e5b0:	ldr	r5, [pc, #72]	; 1e600 <__assert_fail@plt+0xd604>
   1e5b4:	add	r6, pc, r6
   1e5b8:	add	r5, pc, r5
   1e5bc:	sub	r6, r6, r5
   1e5c0:	mov	r8, r1
   1e5c4:	mov	r9, r2
   1e5c8:	bl	10d84 <calloc@plt-0x20>
   1e5cc:	asrs	r6, r6, #2
   1e5d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e5d4:	mov	r4, #0
   1e5d8:	add	r4, r4, #1
   1e5dc:	ldr	r3, [r5], #4
   1e5e0:	mov	r2, r9
   1e5e4:	mov	r1, r8
   1e5e8:	mov	r0, r7
   1e5ec:	blx	r3
   1e5f0:	cmp	r6, r4
   1e5f4:	bne	1e5d8 <__assert_fail@plt+0xd5dc>
   1e5f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e5fc:	andeq	r1, r1, r0, asr r9
   1e600:	andeq	r1, r1, r8, asr #18
   1e604:	bx	lr
   1e608:	ldr	r3, [pc, #12]	; 1e61c <__assert_fail@plt+0xd620>
   1e60c:	mov	r1, #0
   1e610:	add	r3, pc, r3
   1e614:	ldr	r2, [r3]
   1e618:	b	10f48 <__cxa_atexit@plt>
   1e61c:	andeq	r1, r1, r8, asr #21
   1e620:	mov	r2, r1
   1e624:	mov	r1, r0
   1e628:	mov	r0, #3
   1e62c:	b	10fc0 <__xstat64@plt>
   1e630:	mov	r2, r1
   1e634:	mov	r1, r0
   1e638:	mov	r0, #3
   1e63c:	b	10e58 <__fxstat64@plt>

Disassembly of section .fini:

0001e640 <.fini>:
   1e640:	push	{r3, lr}
   1e644:	pop	{r3, pc}
