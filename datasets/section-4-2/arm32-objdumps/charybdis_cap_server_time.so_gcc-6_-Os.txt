
../repos/charybdis/modules/.libs/cap_server_time.so:     file format elf32-littlearm


Disassembly of section .init:

00000438 <_init>:
 438:	push	{r3, lr}
 43c:	bl	4ac <call_weak_fn>
 440:	pop	{r3, pc}

Disassembly of section .plt:

00000444 <.plt>:
 444:	push	{lr}		; (str lr, [sp, #-4]!)
 448:	ldr	lr, [pc, #4]	; 454 <.plt+0x10>
 44c:	add	lr, pc, lr
 450:	ldr	pc, [lr, #8]!
 454:	.word	0x00010bac

00000458 <raise@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2988]!	; 0xbac

00000464 <__cxa_finalize@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2980]!	; 0xba4

00000470 <rb_snprintf_append@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2972]!	; 0xb9c

0000047c <strftime@plt>:
 47c:	add	ip, pc, #0, 12
 480:	add	ip, ip, #16, 20	; 0x10000
 484:	ldr	pc, [ip, #2964]!	; 0xb94

00000488 <__gmon_start__@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2956]!	; 0xb8c

00000494 <gmtime@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2948]!	; 0xb84

000004a0 <rb_gettimeofday@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2940]!	; 0xb7c

Disassembly of section .text:

000004ac <call_weak_fn>:
 4ac:	ldr	r3, [pc, #20]	; 4c8 <call_weak_fn+0x1c>
 4b0:	ldr	r2, [pc, #20]	; 4cc <call_weak_fn+0x20>
 4b4:	add	r3, pc, r3
 4b8:	ldr	r2, [r3, r2]
 4bc:	cmp	r2, #0
 4c0:	bxeq	lr
 4c4:	b	488 <__gmon_start__@plt>
 4c8:	.word	0x00010b44
 4cc:	.word	0x00000034

000004d0 <deregister_tm_clones>:
 4d0:	ldr	r3, [pc, #52]	; 50c <deregister_tm_clones+0x3c>
 4d4:	ldr	r0, [pc, #52]	; 510 <deregister_tm_clones+0x40>
 4d8:	add	r3, pc, r3
 4dc:	add	r0, pc, r0
 4e0:	add	r3, r3, #3
 4e4:	sub	r3, r3, r0
 4e8:	cmp	r3, #6
 4ec:	ldr	r3, [pc, #32]	; 514 <deregister_tm_clones+0x44>
 4f0:	add	r3, pc, r3
 4f4:	bxls	lr
 4f8:	ldr	r2, [pc, #24]	; 518 <deregister_tm_clones+0x48>
 4fc:	ldr	r3, [r3, r2]
 500:	cmp	r3, #0
 504:	bxeq	lr
 508:	bx	r3
 50c:	.word	0x00010bc4
 510:	.word	0x00010bc0
 514:	.word	0x00010b08
 518:	.word	0x0000002c

0000051c <register_tm_clones>:
 51c:	ldr	r1, [pc, #56]	; 55c <register_tm_clones+0x40>
 520:	ldr	r0, [pc, #56]	; 560 <register_tm_clones+0x44>
 524:	add	r1, pc, r1
 528:	add	r0, pc, r0
 52c:	sub	r1, r1, r0
 530:	ldr	r3, [pc, #44]	; 564 <register_tm_clones+0x48>
 534:	asr	r1, r1, #2
 538:	add	r3, pc, r3
 53c:	add	r1, r1, r1, lsr #31
 540:	asrs	r1, r1, #1
 544:	bxeq	lr
 548:	ldr	r2, [pc, #24]	; 568 <register_tm_clones+0x4c>
 54c:	ldr	r3, [r3, r2]
 550:	cmp	r3, #0
 554:	bxeq	lr
 558:	bx	r3
 55c:	.word	0x00010b78
 560:	.word	0x00010b74
 564:	.word	0x00010ac0
 568:	.word	0x0000003c

0000056c <__do_global_dtors_aux>:
 56c:	ldr	r3, [pc, #76]	; 5c0 <__do_global_dtors_aux+0x54>
 570:	ldr	r2, [pc, #76]	; 5c4 <__do_global_dtors_aux+0x58>
 574:	add	r3, pc, r3
 578:	add	r2, pc, r2
 57c:	ldrb	r3, [r3]
 580:	cmp	r3, #0
 584:	bxne	lr
 588:	ldr	r3, [pc, #56]	; 5c8 <__do_global_dtors_aux+0x5c>
 58c:	push	{r4, lr}
 590:	ldr	r3, [r2, r3]
 594:	cmp	r3, #0
 598:	beq	5a8 <__do_global_dtors_aux+0x3c>
 59c:	ldr	r3, [pc, #40]	; 5cc <__do_global_dtors_aux+0x60>
 5a0:	ldr	r0, [pc, r3]
 5a4:	bl	464 <__cxa_finalize@plt>
 5a8:	bl	4d0 <deregister_tm_clones>
 5ac:	ldr	r3, [pc, #28]	; 5d0 <__do_global_dtors_aux+0x64>
 5b0:	mov	r2, #1
 5b4:	add	r3, pc, r3
 5b8:	strb	r2, [r3]
 5bc:	pop	{r4, pc}
 5c0:	.word	0x00010b28
 5c4:	.word	0x00010a80
 5c8:	.word	0x00000028
 5cc:	.word	0x00010a98
 5d0:	.word	0x00010ae8

000005d4 <frame_dummy>:
 5d4:	ldr	r0, [pc, #56]	; 614 <frame_dummy+0x40>
 5d8:	ldr	r3, [pc, #56]	; 618 <frame_dummy+0x44>
 5dc:	add	r0, pc, r0
 5e0:	ldr	r2, [r0]
 5e4:	add	r3, pc, r3
 5e8:	cmp	r2, #0
 5ec:	bne	5f4 <frame_dummy+0x20>
 5f0:	b	51c <register_tm_clones>
 5f4:	ldr	r2, [pc, #32]	; 61c <frame_dummy+0x48>
 5f8:	ldr	r3, [r3, r2]
 5fc:	cmp	r3, #0
 600:	beq	5f0 <frame_dummy+0x1c>
 604:	push	{r4, lr}
 608:	blx	r3
 60c:	pop	{r4, lr}
 610:	b	51c <register_tm_clones>
 614:	.word	0x00010918
 618:	.word	0x00010a14
 61c:	.word	0x00000038

00000620 <cap_server_time_process>:
 620:	push	{r0, r1, r4, r5, r6, lr}
 624:	mov	r1, #0
 628:	ldr	r4, [r0, #4]
 62c:	mov	r0, sp
 630:	bl	4a0 <rb_gettimeofday@plt>
 634:	ldr	r6, [pc, #164]	; 6e0 <cap_server_time_process+0xc0>
 638:	add	r6, pc, r6
 63c:	cmp	r0, #0
 640:	bne	6d8 <cap_server_time_process+0xb8>
 644:	mov	r0, sp
 648:	bl	494 <gmtime@plt>
 64c:	ldr	r5, [pc, #144]	; 6e4 <cap_server_time_process+0xc4>
 650:	ldr	r2, [pc, #144]	; 6e8 <cap_server_time_process+0xc8>
 654:	add	r5, pc, r5
 658:	add	r2, pc, r2
 65c:	mov	r1, #512	; 0x200
 660:	mov	r3, r0
 664:	mov	r0, r5
 668:	bl	47c <strftime@plt>
 66c:	cmp	r0, #0
 670:	beq	6d8 <cap_server_time_process+0xb8>
 674:	mov	r1, #1000	; 0x3e8
 678:	ldr	r0, [sp, #4]
 67c:	bl	6f8 <__divsi3>
 680:	ldr	r2, [pc, #100]	; 6ec <cap_server_time_process+0xcc>
 684:	mov	r1, #512	; 0x200
 688:	add	r2, pc, r2
 68c:	mov	r3, r0
 690:	mov	r0, r5
 694:	bl	470 <rb_snprintf_append@plt>
 698:	cmp	r0, #0
 69c:	blt	6d8 <cap_server_time_process+0xb8>
 6a0:	ldr	r3, [r4]
 6a4:	cmp	r3, #14
 6a8:	bhi	6d8 <cap_server_time_process+0xb8>
 6ac:	ldr	r2, [pc, #60]	; 6f0 <cap_server_time_process+0xd0>
 6b0:	ldr	r0, [pc, #60]	; 6f4 <cap_server_time_process+0xd4>
 6b4:	ldr	r2, [r6, r2]
 6b8:	add	r0, pc, r0
 6bc:	ldr	r1, [r2]
 6c0:	mov	r2, #12
 6c4:	mla	r2, r2, r3, r4
 6c8:	add	r3, r3, #1
 6cc:	stmib	r2, {r0, r5}
 6d0:	str	r1, [r2, #12]
 6d4:	str	r3, [r4]
 6d8:	add	sp, sp, #8
 6dc:	pop	{r4, r5, r6, pc}
 6e0:	.word	0x000109c0
 6e4:	.word	0x00010a4c
 6e8:	.word	0x0000031b
 6ec:	.word	0x000002fe
 6f0:	.word	0x00000030
 6f4:	.word	0x000002db

000006f8 <__divsi3>:
 6f8:	cmp	r1, #0
 6fc:	beq	908 <.divsi3_skip_div0_test+0x208>

00000700 <.divsi3_skip_div0_test>:
 700:	eor	ip, r0, r1
 704:	rsbmi	r1, r1, #0
 708:	subs	r2, r1, #1
 70c:	beq	8d4 <.divsi3_skip_div0_test+0x1d4>
 710:	movs	r3, r0
 714:	rsbmi	r3, r0, #0
 718:	cmp	r3, r1
 71c:	bls	8e0 <.divsi3_skip_div0_test+0x1e0>
 720:	tst	r1, r2
 724:	beq	8f0 <.divsi3_skip_div0_test+0x1f0>
 728:	clz	r2, r3
 72c:	clz	r0, r1
 730:	sub	r2, r0, r2
 734:	rsbs	r2, r2, #31
 738:	addne	r2, r2, r2, lsl #1
 73c:	mov	r0, #0
 740:	addne	pc, pc, r2, lsl #2
 744:	nop			; (mov r0, r0)
 748:	cmp	r3, r1, lsl #31
 74c:	adc	r0, r0, r0
 750:	subcs	r3, r3, r1, lsl #31
 754:	cmp	r3, r1, lsl #30
 758:	adc	r0, r0, r0
 75c:	subcs	r3, r3, r1, lsl #30
 760:	cmp	r3, r1, lsl #29
 764:	adc	r0, r0, r0
 768:	subcs	r3, r3, r1, lsl #29
 76c:	cmp	r3, r1, lsl #28
 770:	adc	r0, r0, r0
 774:	subcs	r3, r3, r1, lsl #28
 778:	cmp	r3, r1, lsl #27
 77c:	adc	r0, r0, r0
 780:	subcs	r3, r3, r1, lsl #27
 784:	cmp	r3, r1, lsl #26
 788:	adc	r0, r0, r0
 78c:	subcs	r3, r3, r1, lsl #26
 790:	cmp	r3, r1, lsl #25
 794:	adc	r0, r0, r0
 798:	subcs	r3, r3, r1, lsl #25
 79c:	cmp	r3, r1, lsl #24
 7a0:	adc	r0, r0, r0
 7a4:	subcs	r3, r3, r1, lsl #24
 7a8:	cmp	r3, r1, lsl #23
 7ac:	adc	r0, r0, r0
 7b0:	subcs	r3, r3, r1, lsl #23
 7b4:	cmp	r3, r1, lsl #22
 7b8:	adc	r0, r0, r0
 7bc:	subcs	r3, r3, r1, lsl #22
 7c0:	cmp	r3, r1, lsl #21
 7c4:	adc	r0, r0, r0
 7c8:	subcs	r3, r3, r1, lsl #21
 7cc:	cmp	r3, r1, lsl #20
 7d0:	adc	r0, r0, r0
 7d4:	subcs	r3, r3, r1, lsl #20
 7d8:	cmp	r3, r1, lsl #19
 7dc:	adc	r0, r0, r0
 7e0:	subcs	r3, r3, r1, lsl #19
 7e4:	cmp	r3, r1, lsl #18
 7e8:	adc	r0, r0, r0
 7ec:	subcs	r3, r3, r1, lsl #18
 7f0:	cmp	r3, r1, lsl #17
 7f4:	adc	r0, r0, r0
 7f8:	subcs	r3, r3, r1, lsl #17
 7fc:	cmp	r3, r1, lsl #16
 800:	adc	r0, r0, r0
 804:	subcs	r3, r3, r1, lsl #16
 808:	cmp	r3, r1, lsl #15
 80c:	adc	r0, r0, r0
 810:	subcs	r3, r3, r1, lsl #15
 814:	cmp	r3, r1, lsl #14
 818:	adc	r0, r0, r0
 81c:	subcs	r3, r3, r1, lsl #14
 820:	cmp	r3, r1, lsl #13
 824:	adc	r0, r0, r0
 828:	subcs	r3, r3, r1, lsl #13
 82c:	cmp	r3, r1, lsl #12
 830:	adc	r0, r0, r0
 834:	subcs	r3, r3, r1, lsl #12
 838:	cmp	r3, r1, lsl #11
 83c:	adc	r0, r0, r0
 840:	subcs	r3, r3, r1, lsl #11
 844:	cmp	r3, r1, lsl #10
 848:	adc	r0, r0, r0
 84c:	subcs	r3, r3, r1, lsl #10
 850:	cmp	r3, r1, lsl #9
 854:	adc	r0, r0, r0
 858:	subcs	r3, r3, r1, lsl #9
 85c:	cmp	r3, r1, lsl #8
 860:	adc	r0, r0, r0
 864:	subcs	r3, r3, r1, lsl #8
 868:	cmp	r3, r1, lsl #7
 86c:	adc	r0, r0, r0
 870:	subcs	r3, r3, r1, lsl #7
 874:	cmp	r3, r1, lsl #6
 878:	adc	r0, r0, r0
 87c:	subcs	r3, r3, r1, lsl #6
 880:	cmp	r3, r1, lsl #5
 884:	adc	r0, r0, r0
 888:	subcs	r3, r3, r1, lsl #5
 88c:	cmp	r3, r1, lsl #4
 890:	adc	r0, r0, r0
 894:	subcs	r3, r3, r1, lsl #4
 898:	cmp	r3, r1, lsl #3
 89c:	adc	r0, r0, r0
 8a0:	subcs	r3, r3, r1, lsl #3
 8a4:	cmp	r3, r1, lsl #2
 8a8:	adc	r0, r0, r0
 8ac:	subcs	r3, r3, r1, lsl #2
 8b0:	cmp	r3, r1, lsl #1
 8b4:	adc	r0, r0, r0
 8b8:	subcs	r3, r3, r1, lsl #1
 8bc:	cmp	r3, r1
 8c0:	adc	r0, r0, r0
 8c4:	subcs	r3, r3, r1
 8c8:	cmp	ip, #0
 8cc:	rsbmi	r0, r0, #0
 8d0:	bx	lr
 8d4:	teq	ip, r0
 8d8:	rsbmi	r0, r0, #0
 8dc:	bx	lr
 8e0:	movcc	r0, #0
 8e4:	asreq	r0, ip, #31
 8e8:	orreq	r0, r0, #1
 8ec:	bx	lr
 8f0:	clz	r2, r1
 8f4:	rsb	r2, r2, #31
 8f8:	cmp	ip, #0
 8fc:	lsr	r0, r3, r2
 900:	rsbmi	r0, r0, #0
 904:	bx	lr
 908:	cmp	r0, #0
 90c:	mvngt	r0, #-2147483648	; 0x80000000
 910:	movlt	r0, #-2147483648	; 0x80000000
 914:	b	938 <__aeabi_idiv0>

00000918 <__aeabi_idivmod>:
 918:	cmp	r1, #0
 91c:	beq	908 <.divsi3_skip_div0_test+0x208>
 920:	push	{r0, r1, lr}
 924:	bl	700 <.divsi3_skip_div0_test>
 928:	pop	{r1, r2, lr}
 92c:	mul	r3, r2, r0
 930:	sub	r1, r1, r3
 934:	bx	lr

00000938 <__aeabi_idiv0>:
 938:	push	{r1, lr}
 93c:	mov	r0, #8
 940:	bl	458 <raise@plt>
 944:	pop	{r1, pc}

Disassembly of section .fini:

00000948 <_fini>:
 948:	push	{r3, lr}
 94c:	pop	{r3, pc}
