
../repos/coreutils/src/comm:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	1188c <close@plt+0x9c8>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <fdopen@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <fdopen@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <fdopen@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #102400	; 0x19000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <calloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #102400	; 0x19000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <fputs_unlocked@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #102400	; 0x19000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <raise@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #102400	; 0x19000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #102400	; 0x19000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <posix_fadvise64@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #102400	; 0x19000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <fflush@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #102400	; 0x19000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <free@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #102400	; 0x19000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <_exit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #102400	; 0x19000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <memcpy@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #102400	; 0x19000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <mbsinit@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #102400	; 0x19000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <fwrite_unlocked@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #102400	; 0x19000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <memcmp@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #102400	; 0x19000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fputc_unlocked@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #102400	; 0x19000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <dcgettext@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #102400	; 0x19000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <realloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #102400	; 0x19000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <textdomain@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #102400	; 0x19000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <iswprint@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #102400	; 0x19000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <fwrite@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #102400	; 0x19000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <lseek64@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #102400	; 0x19000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <__ctype_get_mb_cur_max@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #102400	; 0x19000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__fpending@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #102400	; 0x19000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <mbrtowc@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #102400	; 0x19000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <error@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #102400	; 0x19000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <strcoll@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #102400	; 0x19000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <malloc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #102400	; 0x19000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <__libc_start_main@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #102400	; 0x19000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <__freading@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #102400	; 0x19000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <__gmon_start__@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #102400	; 0x19000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <getopt_long@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #102400	; 0x19000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <__ctype_b_loc@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #102400	; 0x19000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <exit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #102400	; 0x19000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <strlen@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #102400	; 0x19000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <__errno_location@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #102400	; 0x19000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <__cxa_atexit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #102400	; 0x19000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <memset@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #102400	; 0x19000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <__printf_chk@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #102400	; 0x19000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <fileno@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #102400	; 0x19000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <__fprintf_chk@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #102400	; 0x19000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <fclose@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #102400	; 0x19000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <fseeko64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #102400	; 0x19000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <fcntl64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #102400	; 0x19000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <__uflow@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #102400	; 0x19000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

00010e70 <setlocale@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #102400	; 0x19000
   10e78:	ldr	pc, [ip, #576]!	; 0x240

00010e7c <strrchr@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #102400	; 0x19000
   10e84:	ldr	pc, [ip, #568]!	; 0x238

00010e88 <nl_langinfo@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #102400	; 0x19000
   10e90:	ldr	pc, [ip, #560]!	; 0x230

00010e94 <fopen64@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #102400	; 0x19000
   10e9c:	ldr	pc, [ip, #552]!	; 0x228

00010ea0 <bindtextdomain@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #102400	; 0x19000
   10ea8:	ldr	pc, [ip, #544]!	; 0x220

00010eac <strncmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #102400	; 0x19000
   10eb4:	ldr	pc, [ip, #536]!	; 0x218

00010eb8 <abort@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #102400	; 0x19000
   10ec0:	ldr	pc, [ip, #528]!	; 0x210

00010ec4 <close@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #102400	; 0x19000
   10ecc:	ldr	pc, [ip, #520]!	; 0x208

Disassembly of section .text:

00010ed0 <.text>:
   10ed0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ed4:	mov	r6, r0
   10ed8:	sub	sp, sp, #316	; 0x13c
   10edc:	ldr	r0, [r1]
   10ee0:	mov	r5, r1
   10ee4:	bl	1240c <close@plt+0x1548>
   10ee8:	ldr	r1, [pc, #2276]	; 117d4 <close@plt+0x910>
   10eec:	mov	r0, #6
   10ef0:	bl	10e70 <setlocale@plt>
   10ef4:	ldr	r1, [pc, #2268]	; 117d8 <close@plt+0x914>
   10ef8:	ldr	r0, [pc, #2268]	; 117dc <close@plt+0x918>
   10efc:	bl	10ea0 <bindtextdomain@plt>
   10f00:	ldr	r0, [pc, #2260]	; 117dc <close@plt+0x918>
   10f04:	bl	10d2c <textdomain@plt>
   10f08:	mov	r0, #3
   10f0c:	bl	120c4 <close@plt+0x1200>
   10f10:	ldr	sl, [pc, #2248]	; 117e0 <close@plt+0x91c>
   10f14:	ldr	r8, [pc, #2248]	; 117e4 <close@plt+0x920>
   10f18:	ldr	r7, [pc, #2248]	; 117e8 <close@plt+0x924>
   10f1c:	ldr	r9, [pc, #2248]	; 117ec <close@plt+0x928>
   10f20:	ldr	fp, [pc, #2248]	; 117f0 <close@plt+0x92c>
   10f24:	strb	r0, [sl]
   10f28:	ldr	r0, [pc, #2244]	; 117f4 <close@plt+0x930>
   10f2c:	bl	183d8 <close@plt+0x7514>
   10f30:	mov	r3, #1
   10f34:	strb	r3, [sl, #1]
   10f38:	strb	r3, [sl, #2]
   10f3c:	strb	r3, [sl, #3]
   10f40:	mov	r3, #0
   10f44:	strb	r3, [sl, #4]
   10f48:	strb	r3, [sl, #9]
   10f4c:	strb	r3, [sl, #8]
   10f50:	str	r3, [sl, #12]
   10f54:	strb	r3, [sl, #16]
   10f58:	mov	r4, #0
   10f5c:	str	r4, [sp]
   10f60:	mov	r3, r8
   10f64:	mov	r2, r7
   10f68:	mov	r1, r5
   10f6c:	mov	r0, r6
   10f70:	bl	10dc8 <getopt_long@plt>
   10f74:	cmn	r0, #1
   10f78:	beq	11094 <close@plt+0x1d0>
   10f7c:	cmp	r0, #51	; 0x33
   10f80:	beq	11114 <close@plt+0x250>
   10f84:	ble	10fb0 <close@plt+0xec>
   10f88:	cmp	r0, r9
   10f8c:	beq	11100 <close@plt+0x23c>
   10f90:	bgt	10fd4 <close@plt+0x110>
   10f94:	cmp	r0, #122	; 0x7a
   10f98:	beq	1104c <close@plt+0x188>
   10f9c:	cmp	r0, #256	; 0x100
   10fa0:	bne	110f8 <close@plt+0x234>
   10fa4:	mov	r3, #1
   10fa8:	str	r3, [sl, #12]
   10fac:	b	10f58 <close@plt+0x94>
   10fb0:	cmn	r0, #2
   10fb4:	beq	1110c <close@plt+0x248>
   10fb8:	ble	11054 <close@plt+0x190>
   10fbc:	cmp	r0, #49	; 0x31
   10fc0:	beq	11044 <close@plt+0x180>
   10fc4:	cmp	r0, #50	; 0x32
   10fc8:	bne	110f8 <close@plt+0x234>
   10fcc:	strb	r4, [sl, #2]
   10fd0:	b	10f58 <close@plt+0x94>
   10fd4:	ldr	r3, [pc, #2076]	; 117f8 <close@plt+0x934>
   10fd8:	cmp	r0, r3
   10fdc:	beq	10ff8 <close@plt+0x134>
   10fe0:	add	r3, r3, #1
   10fe4:	cmp	r0, r3
   10fe8:	bne	110f8 <close@plt+0x234>
   10fec:	mov	r3, #1
   10ff0:	strb	r3, [sl, #16]
   10ff4:	b	10f58 <close@plt+0x94>
   10ff8:	ldr	r3, [sl, #20]
   10ffc:	cmp	r3, #0
   11000:	beq	1101c <close@plt+0x158>
   11004:	ldr	r3, [pc, #2032]	; 117fc <close@plt+0x938>
   11008:	ldr	r0, [fp, #4]
   1100c:	ldr	r1, [r3]
   11010:	bl	10c9c <strcmp@plt>
   11014:	cmp	r0, #0
   11018:	bne	11490 <close@plt+0x5cc>
   1101c:	ldr	r3, [pc, #2008]	; 117fc <close@plt+0x938>
   11020:	ldr	r0, [r3]
   11024:	str	r0, [fp, #4]
   11028:	ldrb	r3, [r0]
   1102c:	cmp	r3, #0
   11030:	moveq	r0, #1
   11034:	beq	1103c <close@plt+0x178>
   11038:	bl	10dec <strlen@plt>
   1103c:	str	r0, [sl, #20]
   11040:	b	10f58 <close@plt+0x94>
   11044:	strb	r4, [sl, #1]
   11048:	b	10f58 <close@plt+0x94>
   1104c:	strb	r4, [fp]
   11050:	b	10f58 <close@plt+0x94>
   11054:	cmn	r0, #3
   11058:	bne	110f8 <close@plt+0x234>
   1105c:	ldr	r3, [pc, #1948]	; 11800 <close@plt+0x93c>
   11060:	ldr	r0, [pc, #1948]	; 11804 <close@plt+0x940>
   11064:	ldr	r1, [pc, #1948]	; 11808 <close@plt+0x944>
   11068:	ldr	r2, [pc, #1948]	; 1180c <close@plt+0x948>
   1106c:	str	r4, [sp, #8]
   11070:	ldr	r0, [r0]
   11074:	ldr	r3, [r3]
   11078:	str	r1, [sp, #4]
   1107c:	str	r2, [sp]
   11080:	ldr	r1, [pc, #1928]	; 11810 <close@plt+0x94c>
   11084:	ldr	r2, [pc, #1928]	; 11814 <close@plt+0x950>
   11088:	bl	16d50 <close@plt+0x5e8c>
   1108c:	mov	r0, r4
   11090:	bl	10de0 <exit@plt>
   11094:	ldr	r3, [sl, #20]
   11098:	cmp	r3, r4
   1109c:	ldr	r4, [pc, #1908]	; 11818 <close@plt+0x954>
   110a0:	moveq	r3, #1
   110a4:	streq	r3, [sl, #20]
   110a8:	ldr	r2, [r4]
   110ac:	sub	r3, r6, r2
   110b0:	cmp	r3, #1
   110b4:	ble	11624 <close@plt+0x760>
   110b8:	cmp	r3, #2
   110bc:	beq	1111c <close@plt+0x258>
   110c0:	mov	r2, #5
   110c4:	ldr	r1, [pc, #1872]	; 1181c <close@plt+0x958>
   110c8:	mov	r0, #0
   110cc:	bl	10d14 <dcgettext@plt>
   110d0:	ldr	r3, [r4]
   110d4:	add	r3, r3, #2
   110d8:	mov	r6, r0
   110dc:	ldr	r0, [r5, r3, lsl #2]
   110e0:	bl	162d8 <close@plt+0x5414>
   110e4:	mov	r2, r6
   110e8:	mov	r3, r0
   110ec:	mov	r1, #0
   110f0:	mov	r0, r1
   110f4:	bl	10d80 <error@plt>
   110f8:	mov	r0, #1
   110fc:	bl	11978 <close@plt+0xab4>
   11100:	mov	r3, #2
   11104:	str	r3, [sl, #12]
   11108:	b	10f58 <close@plt+0x94>
   1110c:	mov	r0, r4
   11110:	bl	11978 <close@plt+0xab4>
   11114:	strb	r4, [sl, #3]
   11118:	b	10f58 <close@plt+0x94>
   1111c:	mov	r8, #0
   11120:	mov	r4, r8
   11124:	add	r3, r5, r2, lsl #2
   11128:	str	r3, [sp, #68]	; 0x44
   1112c:	str	r3, [sp, #28]
   11130:	mov	r6, #48	; 0x30
   11134:	add	r3, sp, #184	; 0xb8
   11138:	mul	r6, r6, r4
   1113c:	add	r9, r3, r4, lsl #4
   11140:	mov	r5, #0
   11144:	mov	r7, #12
   11148:	mla	fp, r7, r5, r6
   1114c:	add	r3, sp, #216	; 0xd8
   11150:	add	fp, r3, fp
   11154:	mov	r0, fp
   11158:	bl	12188 <close@plt+0x12c4>
   1115c:	str	fp, [r9, r5, lsl #2]
   11160:	add	r5, r5, #1
   11164:	cmp	r5, #4
   11168:	bne	11148 <close@plt+0x284>
   1116c:	ldr	r3, [sp, #28]
   11170:	mov	r2, #0
   11174:	mov	r5, r3
   11178:	ldr	r6, [r3], #4
   1117c:	ldr	r1, [pc, #1692]	; 11820 <close@plt+0x95c>
   11180:	str	r3, [sp, #28]
   11184:	add	r3, sp, #160	; 0xa0
   11188:	mov	r0, r6
   1118c:	str	r2, [r3, r8]!
   11190:	str	r2, [r3, #4]
   11194:	str	r2, [r3, #8]
   11198:	bl	10c9c <strcmp@plt>
   1119c:	cmp	r0, #0
   111a0:	ldreq	r3, [pc, #1660]	; 11824 <close@plt+0x960>
   111a4:	ldreq	r6, [r3]
   111a8:	bne	11680 <close@plt+0x7bc>
   111ac:	add	r3, sp, #80	; 0x50
   111b0:	cmp	r6, #0
   111b4:	str	r6, [r3, r4, lsl #2]
   111b8:	beq	1170c <close@plt+0x848>
   111bc:	mov	r1, #2
   111c0:	mov	r0, r6
   111c4:	bl	11e58 <close@plt+0xf94>
   111c8:	add	r3, sp, #160	; 0xa0
   111cc:	add	r0, sp, #312	; 0x138
   111d0:	ldr	r3, [r3, r8]
   111d4:	ldr	r2, [pc, #1556]	; 117f0 <close@plt+0x92c>
   111d8:	add	r3, r3, r4, lsl #2
   111dc:	mov	r1, r6
   111e0:	add	r3, r0, r3, lsl #2
   111e4:	ldrb	r2, [r2]
   111e8:	ldr	r0, [r3, #-128]	; 0xffffff80
   111ec:	bl	122b4 <close@plt+0x13f0>
   111f0:	ldr	r3, [r6]
   111f4:	add	r2, sp, #72	; 0x48
   111f8:	ands	r3, r3, #32
   111fc:	str	r0, [r2, r4, lsl #2]
   11200:	bne	1170c <close@plt+0x848>
   11204:	add	r4, r4, #1
   11208:	cmp	r4, #2
   1120c:	add	r8, r8, #12
   11210:	bne	11130 <close@plt+0x26c>
   11214:	mov	r2, #0
   11218:	str	r3, [sp, #44]	; 0x2c
   1121c:	mov	r3, #0
   11220:	mov	fp, #1
   11224:	strd	r2, [sp, #48]	; 0x30
   11228:	strd	r2, [sp, #32]
   1122c:	strd	r2, [sp, #56]	; 0x38
   11230:	add	r9, sp, #136	; 0x88
   11234:	b	11250 <close@plt+0x38c>
   11238:	add	r8, r8, #1
   1123c:	cmp	r8, #2
   11240:	add	r6, r6, #1
   11244:	add	r7, r7, #1
   11248:	add	r4, r4, #12
   1124c:	bne	1135c <close@plt+0x498>
   11250:	ldr	r4, [sp, #72]	; 0x48
   11254:	cmp	r4, #0
   11258:	beq	11608 <close@plt+0x744>
   1125c:	ldr	r5, [sp, #76]	; 0x4c
   11260:	mov	r3, #0
   11264:	cmp	r5, #0
   11268:	strb	r3, [sp, #136]	; 0x88
   1126c:	strb	r3, [sp, #137]	; 0x89
   11270:	beq	11524 <close@plt+0x660>
   11274:	ldrb	r3, [sl]
   11278:	cmp	r3, #0
   1127c:	bne	11560 <close@plt+0x69c>
   11280:	ldr	r7, [r5, #4]
   11284:	ldr	r6, [r4, #4]
   11288:	ldr	r1, [r5, #8]
   1128c:	cmp	r7, r6
   11290:	movlt	r2, r7
   11294:	movge	r2, r6
   11298:	sub	r2, r2, #1
   1129c:	ldr	r0, [r4, #8]
   112a0:	bl	10cfc <memcmp@plt>
   112a4:	cmp	r0, #0
   112a8:	bne	114b0 <close@plt+0x5ec>
   112ac:	cmp	r7, r6
   112b0:	bgt	11524 <close@plt+0x660>
   112b4:	movne	r0, #1
   112b8:	moveq	r0, #0
   112bc:	cmp	r0, #0
   112c0:	bne	114b0 <close@plt+0x5ec>
   112c4:	ldrd	r0, [sp, #48]	; 0x30
   112c8:	ldrb	r3, [sl, #3]
   112cc:	adds	r0, r0, #1
   112d0:	adc	r1, r1, #0
   112d4:	cmp	r3, #0
   112d8:	strd	r0, [sp, #48]	; 0x30
   112dc:	beq	11344 <close@plt+0x480>
   112e0:	ldrb	r3, [sl, #1]
   112e4:	ldr	r2, [pc, #1304]	; 11804 <close@plt+0x940>
   112e8:	cmp	r3, #0
   112ec:	ldr	r4, [r2]
   112f0:	beq	1130c <close@plt+0x448>
   112f4:	ldr	r0, [pc, #1268]	; 117f0 <close@plt+0x92c>
   112f8:	mov	r3, r4
   112fc:	ldr	r2, [sl, #20]
   11300:	mov	r1, fp
   11304:	ldr	r0, [r0, #4]
   11308:	bl	10cf0 <fwrite_unlocked@plt>
   1130c:	ldrb	r3, [sl, #2]
   11310:	cmp	r3, #0
   11314:	beq	11330 <close@plt+0x46c>
   11318:	ldr	r0, [pc, #1232]	; 117f0 <close@plt+0x92c>
   1131c:	mov	r3, r4
   11320:	ldr	r2, [sl, #20]
   11324:	mov	r1, fp
   11328:	ldr	r0, [r0, #4]
   1132c:	bl	10cf0 <fwrite_unlocked@plt>
   11330:	mov	r3, r4
   11334:	ldr	r2, [r5, #4]
   11338:	ldr	r0, [r5, #8]
   1133c:	mov	r1, fp
   11340:	bl	10cf0 <fwrite_unlocked@plt>
   11344:	strb	fp, [sp, #137]	; 0x89
   11348:	strb	fp, [sp, #136]	; 0x88
   1134c:	ldr	r7, [pc, #1236]	; 11828 <close@plt+0x964>
   11350:	ldr	r8, [sp, #44]	; 0x2c
   11354:	add	r4, sp, #160	; 0xa0
   11358:	mov	r6, #1
   1135c:	ldrb	r3, [r9, r8]
   11360:	cmp	r3, #0
   11364:	beq	11238 <close@plt+0x374>
   11368:	ldr	r5, [r4]
   1136c:	lsl	r3, r8, #2
   11370:	add	ip, r5, #1
   11374:	and	ip, ip, #3
   11378:	add	r2, r3, ip
   1137c:	str	r3, [sp, #64]	; 0x40
   11380:	add	r3, sp, #80	; 0x50
   11384:	str	ip, [r4]
   11388:	ldr	r3, [r3, r8, lsl #2]
   1138c:	mov	r1, r3
   11390:	str	r3, [sp, #28]
   11394:	add	r3, sp, #312	; 0x138
   11398:	add	r2, r3, r2, lsl #2
   1139c:	ldr	r3, [r4, #4]
   113a0:	ldr	r0, [r2, #-128]	; 0xffffff80
   113a4:	ldr	r2, [pc, #1092]	; 117f0 <close@plt+0x92c>
   113a8:	str	r3, [r4, #8]
   113ac:	str	r5, [r4, #4]
   113b0:	ldrb	r2, [r2]
   113b4:	str	r3, [sp, #40]	; 0x28
   113b8:	bl	122b4 <close@plt+0x13f0>
   113bc:	add	r3, sp, #72	; 0x48
   113c0:	cmp	r0, #0
   113c4:	str	r0, [r3, r8, lsl #2]
   113c8:	ldr	r3, [sp, #40]	; 0x28
   113cc:	beq	11580 <close@plt+0x6bc>
   113d0:	ldr	r3, [sl, #12]
   113d4:	cmp	r3, #2
   113d8:	beq	11478 <close@plt+0x5b4>
   113dc:	cmp	r3, #1
   113e0:	beq	113f0 <close@plt+0x52c>
   113e4:	ldrb	r3, [sl, #4]
   113e8:	cmp	r3, #0
   113ec:	beq	11478 <close@plt+0x5b4>
   113f0:	ldrb	r3, [r7]
   113f4:	cmp	r3, #0
   113f8:	bne	11478 <close@plt+0x5b4>
   113fc:	ldr	r3, [sp, #64]	; 0x40
   11400:	add	r2, sp, #312	; 0x138
   11404:	add	r5, r3, r5
   11408:	ldrb	r3, [sl]
   1140c:	add	r5, r2, r5, lsl #2
   11410:	ldr	r2, [r0, #8]
   11414:	ldr	ip, [r5, #-128]	; 0xffffff80
   11418:	cmp	r3, #0
   1141c:	ldr	r3, [r0, #4]
   11420:	ldr	r1, [ip, #4]
   11424:	sub	r3, r3, #1
   11428:	sub	r1, r1, #1
   1142c:	ldr	r0, [ip, #8]
   11430:	bne	11600 <close@plt+0x73c>
   11434:	bl	123c8 <close@plt+0x1504>
   11438:	cmp	r0, #0
   1143c:	ble	11478 <close@plt+0x5b4>
   11440:	mov	r2, #5
   11444:	ldr	r1, [pc, #992]	; 1182c <close@plt+0x968>
   11448:	mov	r0, #0
   1144c:	ldr	r5, [sl, #12]
   11450:	bl	10d14 <dcgettext@plt>
   11454:	sub	r5, r5, #1
   11458:	clz	r5, r5
   1145c:	lsr	r5, r5, #5
   11460:	mov	r3, r6
   11464:	mov	r1, #0
   11468:	mov	r2, r0
   1146c:	mov	r0, r5
   11470:	bl	10d80 <error@plt>
   11474:	strb	fp, [r7]
   11478:	ldr	r3, [sp, #28]
   1147c:	ldr	r3, [r3]
   11480:	ands	r3, r3, #32
   11484:	bne	11650 <close@plt+0x78c>
   11488:	strb	r3, [r9, r8]
   1148c:	b	11238 <close@plt+0x374>
   11490:	ldr	r1, [pc, #920]	; 11830 <close@plt+0x96c>
   11494:	mov	r2, #5
   11498:	mov	r0, #0
   1149c:	bl	10d14 <dcgettext@plt>
   114a0:	mov	r1, #0
   114a4:	mov	r2, r0
   114a8:	mov	r0, #1
   114ac:	bl	10d80 <error@plt>
   114b0:	cmp	r0, #0
   114b4:	strb	fp, [sl, #4]
   114b8:	ble	117b4 <close@plt+0x8f0>
   114bc:	ldrb	r3, [sl, #2]
   114c0:	cmp	r3, #0
   114c4:	beq	1150c <close@plt+0x648>
   114c8:	ldrb	r3, [sl, #1]
   114cc:	ldr	r2, [pc, #816]	; 11804 <close@plt+0x940>
   114d0:	ldr	r4, [sp, #76]	; 0x4c
   114d4:	cmp	r3, #0
   114d8:	ldr	r5, [r2]
   114dc:	beq	114f8 <close@plt+0x634>
   114e0:	ldr	r0, [pc, #776]	; 117f0 <close@plt+0x92c>
   114e4:	mov	r3, r5
   114e8:	ldr	r2, [sl, #20]
   114ec:	mov	r1, fp
   114f0:	ldr	r0, [r0, #4]
   114f4:	bl	10cf0 <fwrite_unlocked@plt>
   114f8:	mov	r3, r5
   114fc:	ldr	r2, [r4, #4]
   11500:	ldr	r0, [r4, #8]
   11504:	mov	r1, fp
   11508:	bl	10cf0 <fwrite_unlocked@plt>
   1150c:	ldrd	r2, [sp, #32]
   11510:	strb	fp, [sp, #137]	; 0x89
   11514:	adds	r2, r2, #1
   11518:	adc	r3, r3, #0
   1151c:	strd	r2, [sp, #32]
   11520:	b	1134c <close@plt+0x488>
   11524:	ldrd	r0, [sp, #56]	; 0x38
   11528:	ldrb	r3, [sl, #1]
   1152c:	strb	fp, [sl, #4]
   11530:	adds	r0, r0, #1
   11534:	adc	r1, r1, #0
   11538:	cmp	r3, #0
   1153c:	strd	r0, [sp, #56]	; 0x38
   11540:	beq	11348 <close@plt+0x484>
   11544:	ldr	r3, [pc, #696]	; 11804 <close@plt+0x940>
   11548:	ldr	r2, [r4, #4]
   1154c:	ldr	r0, [r4, #8]
   11550:	ldr	r3, [r3]
   11554:	mov	r1, fp
   11558:	bl	10cf0 <fwrite_unlocked@plt>
   1155c:	b	11348 <close@plt+0x484>
   11560:	ldr	r3, [r5, #4]
   11564:	ldr	r1, [r4, #4]
   11568:	sub	r3, r3, #1
   1156c:	sub	r1, r1, #1
   11570:	ldr	r2, [r5, #8]
   11574:	ldr	r0, [r4, #8]
   11578:	bl	175c0 <close@plt+0x66fc>
   1157c:	b	112bc <close@plt+0x3f8>
   11580:	ldr	r2, [sp, #64]	; 0x40
   11584:	add	r3, r2, r3
   11588:	add	r2, sp, #312	; 0x138
   1158c:	add	r3, r2, r3, lsl #2
   11590:	ldr	r2, [r3, #-128]	; 0xffffff80
   11594:	ldr	r0, [r2, #8]
   11598:	cmp	r0, #0
   1159c:	beq	11478 <close@plt+0x5b4>
   115a0:	ldr	r3, [sl, #12]
   115a4:	cmp	r3, #2
   115a8:	beq	11478 <close@plt+0x5b4>
   115ac:	cmp	r3, #1
   115b0:	beq	115c0 <close@plt+0x6fc>
   115b4:	ldrb	r3, [sl, #4]
   115b8:	cmp	r3, #0
   115bc:	beq	11478 <close@plt+0x5b4>
   115c0:	ldrb	r3, [r7]
   115c4:	cmp	r3, #0
   115c8:	bne	11478 <close@plt+0x5b4>
   115cc:	ldr	r3, [sp, #64]	; 0x40
   115d0:	add	ip, sp, #312	; 0x138
   115d4:	add	r3, r3, r5
   115d8:	ldrb	r1, [sl]
   115dc:	add	r3, ip, r3, lsl #2
   115e0:	ldr	ip, [r3, #-128]	; 0xffffff80
   115e4:	cmp	r1, #0
   115e8:	ldr	r1, [r2, #4]
   115ec:	ldr	r3, [ip, #4]
   115f0:	sub	r1, r1, #1
   115f4:	sub	r3, r3, #1
   115f8:	ldr	r2, [ip, #8]
   115fc:	beq	11434 <close@plt+0x570>
   11600:	bl	175c0 <close@plt+0x66fc>
   11604:	b	11438 <close@plt+0x574>
   11608:	ldr	r3, [sp, #76]	; 0x4c
   1160c:	cmp	r3, #0
   11610:	beq	116bc <close@plt+0x7f8>
   11614:	strb	r4, [sp, #136]	; 0x88
   11618:	strb	r4, [sp, #137]	; 0x89
   1161c:	strb	fp, [sl, #4]
   11620:	b	114bc <close@plt+0x5f8>
   11624:	cmp	r6, r2
   11628:	mov	r2, #5
   1162c:	bgt	11694 <close@plt+0x7d0>
   11630:	ldr	r1, [pc, #508]	; 11834 <close@plt+0x970>
   11634:	mov	r0, #0
   11638:	bl	10d14 <dcgettext@plt>
   1163c:	mov	r1, #0
   11640:	mov	r2, r0
   11644:	mov	r0, r1
   11648:	bl	10d80 <error@plt>
   1164c:	b	110f8 <close@plt+0x234>
   11650:	bl	10df8 <__errno_location@plt>
   11654:	ldr	r3, [sp, #68]	; 0x44
   11658:	ldr	r2, [r3, r8, lsl #2]
   1165c:	ldr	r4, [r0]
   11660:	mov	r1, #3
   11664:	mov	r0, #0
   11668:	bl	153e4 <close@plt+0x4520>
   1166c:	mov	r1, r4
   11670:	ldr	r2, [pc, #448]	; 11838 <close@plt+0x974>
   11674:	mov	r3, r0
   11678:	mov	r0, #1
   1167c:	bl	10d80 <error@plt>
   11680:	mov	r0, r6
   11684:	ldr	r1, [pc, #432]	; 1183c <close@plt+0x978>
   11688:	bl	11f8c <close@plt+0x10c8>
   1168c:	mov	r6, r0
   11690:	b	111ac <close@plt+0x2e8>
   11694:	ldr	r1, [pc, #420]	; 11840 <close@plt+0x97c>
   11698:	mov	r0, #0
   1169c:	bl	10d14 <dcgettext@plt>
   116a0:	sub	r6, r6, #-1073741823	; 0xc0000001
   116a4:	mov	r4, r0
   116a8:	ldr	r0, [r5, r6, lsl #2]
   116ac:	bl	162d8 <close@plt+0x5414>
   116b0:	mov	r2, r4
   116b4:	mov	r3, r0
   116b8:	b	110ec <close@plt+0x228>
   116bc:	ldr	r0, [sp, #80]	; 0x50
   116c0:	bl	11e8c <close@plt+0xfc8>
   116c4:	cmp	r0, #0
   116c8:	bne	117a0 <close@plt+0x8dc>
   116cc:	ldr	r0, [sp, #84]	; 0x54
   116d0:	bl	11e8c <close@plt+0xfc8>
   116d4:	subs	r4, r0, #0
   116d8:	bne	11798 <close@plt+0x8d4>
   116dc:	ldrb	r3, [sl, #16]
   116e0:	cmp	r3, #0
   116e4:	bne	11718 <close@plt+0x854>
   116e8:	ldrb	r3, [sl, #8]
   116ec:	cmp	r3, #0
   116f0:	bne	11700 <close@plt+0x83c>
   116f4:	ldrb	r0, [sl, #9]
   116f8:	cmp	r0, #0
   116fc:	beq	11794 <close@plt+0x8d0>
   11700:	mov	r2, #5
   11704:	ldr	r1, [pc, #312]	; 11844 <close@plt+0x980>
   11708:	b	11498 <close@plt+0x5d4>
   1170c:	bl	10df8 <__errno_location@plt>
   11710:	ldr	r2, [r5]
   11714:	b	1165c <close@plt+0x798>
   11718:	ldrd	r0, [sp, #56]	; 0x38
   1171c:	add	r2, sp, #88	; 0x58
   11720:	bl	12120 <close@plt+0x125c>
   11724:	add	r2, sp, #112	; 0x70
   11728:	mov	r5, r0
   1172c:	ldrd	r0, [sp, #32]
   11730:	bl	12120 <close@plt+0x125c>
   11734:	add	r2, sp, #136	; 0x88
   11738:	mov	r6, r0
   1173c:	ldrd	r0, [sp, #48]	; 0x30
   11740:	bl	12120 <close@plt+0x125c>
   11744:	ldr	r3, [pc, #164]	; 117f0 <close@plt+0x92c>
   11748:	mov	r2, #5
   1174c:	ldr	r1, [pc, #244]	; 11848 <close@plt+0x984>
   11750:	mov	r7, r0
   11754:	mov	r0, r4
   11758:	ldr	r4, [r3, #4]
   1175c:	bl	10d14 <dcgettext@plt>
   11760:	ldr	r3, [pc, #136]	; 117f0 <close@plt+0x92c>
   11764:	mov	r2, r5
   11768:	ldrb	r1, [r3]
   1176c:	str	r4, [sp, #12]
   11770:	stmib	sp, {r4, r7}
   11774:	str	r1, [sp, #20]
   11778:	str	r6, [sp]
   1177c:	mov	r3, r4
   11780:	ldr	r1, [pc, #196]	; 1184c <close@plt+0x988>
   11784:	str	r0, [sp, #16]
   11788:	mov	r0, #1
   1178c:	bl	10e1c <__printf_chk@plt>
   11790:	b	116e8 <close@plt+0x824>
   11794:	bl	10de0 <exit@plt>
   11798:	mov	r3, #1
   1179c:	str	r3, [sp, #44]	; 0x2c
   117a0:	bl	10df8 <__errno_location@plt>
   117a4:	ldr	r3, [sp, #68]	; 0x44
   117a8:	ldr	r2, [sp, #44]	; 0x2c
   117ac:	ldr	r2, [r3, r2, lsl #2]
   117b0:	b	1165c <close@plt+0x798>
   117b4:	ldrd	r0, [sp, #56]	; 0x38
   117b8:	ldrb	r3, [sl, #1]
   117bc:	adds	r0, r0, #1
   117c0:	adc	r1, r1, #0
   117c4:	cmp	r3, #0
   117c8:	strd	r0, [sp, #56]	; 0x38
   117cc:	bne	11544 <close@plt+0x680>
   117d0:	b	11348 <close@plt+0x484>
   117d4:	andeq	r8, r1, r4, lsr r6
   117d8:			; <UNDEFINED> instruction: 0x00018abc
   117dc:	andeq	r8, r1, r4, lsl sl
   117e0:	andeq	sl, r2, r0, ror #2
   117e4:	andeq	r8, r1, r4, lsr r4
   117e8:	andeq	r8, r1, r0, lsr #22
   117ec:	andeq	r0, r0, r1, lsl #2
   117f0:	andeq	sl, r2, r4, ror #1
   117f4:	andeq	r1, r1, r8, ror #26
   117f8:	andeq	r0, r0, r2, lsl #2
   117fc:	andeq	sl, r2, r8, asr r1
   11800:	andeq	sl, r2, ip, ror #1
   11804:	andeq	sl, r2, r4, asr r1
   11808:	strdeq	r8, [r1], -ip
   1180c:	andeq	r8, r1, ip, lsl #22
   11810:			; <UNDEFINED> instruction: 0x000184b4
   11814:	andeq	r8, r1, r0, lsl sl
   11818:	andeq	sl, r2, r0, asr #2
   1181c:	andeq	r8, r1, r4, asr fp
   11820:	andeq	r8, r1, r8, ror #22
   11824:	andeq	sl, r2, r0, asr r1
   11828:	andeq	sl, r2, r8, ror #2
   1182c:	andeq	r8, r1, ip, ror #22
   11830:	ldrdeq	r8, [r1], -r4
   11834:	andeq	r8, r1, r8, lsr #22
   11838:	andeq	r8, r1, r8, lsr #25
   1183c:	andeq	r8, r1, ip, asr #24
   11840:	andeq	r8, r1, r8, lsr fp
   11844:	andeq	r8, r1, r8, lsr #23
   11848:	andeq	r8, r1, ip, lsl #23
   1184c:	muleq	r1, r4, fp
   11850:	mov	fp, #0
   11854:	mov	lr, #0
   11858:	pop	{r1}		; (ldr r1, [sp], #4)
   1185c:	mov	r2, sp
   11860:	push	{r2}		; (str r2, [sp, #-4]!)
   11864:	push	{r0}		; (str r0, [sp, #-4]!)
   11868:	ldr	ip, [pc, #16]	; 11880 <close@plt+0x9bc>
   1186c:	push	{ip}		; (str ip, [sp, #-4]!)
   11870:	ldr	r0, [pc, #12]	; 11884 <close@plt+0x9c0>
   11874:	ldr	r3, [pc, #12]	; 11888 <close@plt+0x9c4>
   11878:	bl	10da4 <__libc_start_main@plt>
   1187c:	bl	10eb8 <abort@plt>
   11880:	ldrdeq	r8, [r1], -r4
   11884:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11888:	andeq	r8, r1, r4, ror r3
   1188c:	ldr	r3, [pc, #20]	; 118a8 <close@plt+0x9e4>
   11890:	ldr	r2, [pc, #20]	; 118ac <close@plt+0x9e8>
   11894:	add	r3, pc, r3
   11898:	ldr	r2, [r3, r2]
   1189c:	cmp	r2, #0
   118a0:	bxeq	lr
   118a4:	b	10dbc <__gmon_start__@plt>
   118a8:	andeq	r8, r1, r4, ror #14
   118ac:	ldrdeq	r0, [r0], -r8
   118b0:	ldr	r3, [pc, #28]	; 118d4 <close@plt+0xa10>
   118b4:	ldr	r0, [pc, #28]	; 118d8 <close@plt+0xa14>
   118b8:	sub	r3, r3, r0
   118bc:	cmp	r3, #6
   118c0:	bxls	lr
   118c4:	ldr	r3, [pc, #16]	; 118dc <close@plt+0xa18>
   118c8:	cmp	r3, #0
   118cc:	bxeq	lr
   118d0:	bx	r3
   118d4:	andeq	sl, r2, r7, lsr r1
   118d8:	andeq	sl, r2, r4, lsr r1
   118dc:	andeq	r0, r0, r0
   118e0:	ldr	r1, [pc, #36]	; 1190c <close@plt+0xa48>
   118e4:	ldr	r0, [pc, #36]	; 11910 <close@plt+0xa4c>
   118e8:	sub	r1, r1, r0
   118ec:	asr	r1, r1, #2
   118f0:	add	r1, r1, r1, lsr #31
   118f4:	asrs	r1, r1, #1
   118f8:	bxeq	lr
   118fc:	ldr	r3, [pc, #16]	; 11914 <close@plt+0xa50>
   11900:	cmp	r3, #0
   11904:	bxeq	lr
   11908:	bx	r3
   1190c:	andeq	sl, r2, r4, lsr r1
   11910:	andeq	sl, r2, r4, lsr r1
   11914:	andeq	r0, r0, r0
   11918:	push	{r4, lr}
   1191c:	ldr	r4, [pc, #24]	; 1193c <close@plt+0xa78>
   11920:	ldrb	r3, [r4]
   11924:	cmp	r3, #0
   11928:	popne	{r4, pc}
   1192c:	bl	118b0 <close@plt+0x9ec>
   11930:	mov	r3, #1
   11934:	strb	r3, [r4]
   11938:	pop	{r4, pc}
   1193c:	andeq	sl, r2, ip, asr r1
   11940:	ldr	r0, [pc, #40]	; 11970 <close@plt+0xaac>
   11944:	ldr	r3, [r0]
   11948:	cmp	r3, #0
   1194c:	bne	11954 <close@plt+0xa90>
   11950:	b	118e0 <close@plt+0xa1c>
   11954:	ldr	r3, [pc, #24]	; 11974 <close@plt+0xab0>
   11958:	cmp	r3, #0
   1195c:	beq	11950 <close@plt+0xa8c>
   11960:	push	{r4, lr}
   11964:	blx	r3
   11968:	pop	{r4, lr}
   1196c:	b	118e0 <close@plt+0xa1c>
   11970:	andeq	r9, r2, r4, lsl pc
   11974:	andeq	r0, r0, r0
   11978:	subs	r5, r0, #0
   1197c:	push	{r7, lr}
   11980:	sub	sp, sp, #56	; 0x38
   11984:	beq	119c0 <close@plt+0xafc>
   11988:	ldr	r3, [pc, #840]	; 11cd8 <close@plt+0xe14>
   1198c:	mov	r2, #5
   11990:	ldr	r1, [pc, #836]	; 11cdc <close@plt+0xe18>
   11994:	mov	r0, #0
   11998:	ldr	r4, [r3]
   1199c:	bl	10d14 <dcgettext@plt>
   119a0:	ldr	r3, [pc, #824]	; 11ce0 <close@plt+0xe1c>
   119a4:	mov	r1, #1
   119a8:	ldr	r3, [r3]
   119ac:	mov	r2, r0
   119b0:	mov	r0, r4
   119b4:	bl	10e34 <__fprintf_chk@plt>
   119b8:	mov	r0, r5
   119bc:	bl	10de0 <exit@plt>
   119c0:	mov	r2, #5
   119c4:	ldr	r1, [pc, #792]	; 11ce4 <close@plt+0xe20>
   119c8:	bl	10d14 <dcgettext@plt>
   119cc:	ldr	r4, [pc, #780]	; 11ce0 <close@plt+0xe1c>
   119d0:	ldr	r6, [pc, #784]	; 11ce8 <close@plt+0xe24>
   119d4:	ldr	r2, [r4]
   119d8:	mov	r1, r0
   119dc:	mov	r0, #1
   119e0:	bl	10e1c <__printf_chk@plt>
   119e4:	mov	r2, #5
   119e8:	ldr	r1, [pc, #764]	; 11cec <close@plt+0xe28>
   119ec:	mov	r0, r5
   119f0:	bl	10d14 <dcgettext@plt>
   119f4:	ldr	r1, [r6]
   119f8:	bl	10c84 <fputs_unlocked@plt>
   119fc:	mov	r2, #5
   11a00:	ldr	r1, [pc, #744]	; 11cf0 <close@plt+0xe2c>
   11a04:	mov	r0, r5
   11a08:	bl	10d14 <dcgettext@plt>
   11a0c:	ldr	r1, [r6]
   11a10:	bl	10c84 <fputs_unlocked@plt>
   11a14:	mov	r2, #5
   11a18:	ldr	r1, [pc, #724]	; 11cf4 <close@plt+0xe30>
   11a1c:	mov	r0, r5
   11a20:	bl	10d14 <dcgettext@plt>
   11a24:	ldr	r1, [r6]
   11a28:	bl	10c84 <fputs_unlocked@plt>
   11a2c:	mov	r2, #5
   11a30:	ldr	r1, [pc, #704]	; 11cf8 <close@plt+0xe34>
   11a34:	mov	r0, r5
   11a38:	bl	10d14 <dcgettext@plt>
   11a3c:	ldr	r1, [r6]
   11a40:	bl	10c84 <fputs_unlocked@plt>
   11a44:	mov	r2, #5
   11a48:	ldr	r1, [pc, #684]	; 11cfc <close@plt+0xe38>
   11a4c:	mov	r0, r5
   11a50:	bl	10d14 <dcgettext@plt>
   11a54:	ldr	r1, [r6]
   11a58:	bl	10c84 <fputs_unlocked@plt>
   11a5c:	mov	r2, #5
   11a60:	ldr	r1, [pc, #664]	; 11d00 <close@plt+0xe3c>
   11a64:	mov	r0, r5
   11a68:	bl	10d14 <dcgettext@plt>
   11a6c:	ldr	r1, [r6]
   11a70:	bl	10c84 <fputs_unlocked@plt>
   11a74:	mov	r2, #5
   11a78:	ldr	r1, [pc, #644]	; 11d04 <close@plt+0xe40>
   11a7c:	mov	r0, r5
   11a80:	bl	10d14 <dcgettext@plt>
   11a84:	ldr	r1, [r6]
   11a88:	bl	10c84 <fputs_unlocked@plt>
   11a8c:	mov	r2, #5
   11a90:	ldr	r1, [pc, #624]	; 11d08 <close@plt+0xe44>
   11a94:	mov	r0, r5
   11a98:	bl	10d14 <dcgettext@plt>
   11a9c:	ldr	r1, [r6]
   11aa0:	bl	10c84 <fputs_unlocked@plt>
   11aa4:	mov	r2, #5
   11aa8:	ldr	r1, [pc, #604]	; 11d0c <close@plt+0xe48>
   11aac:	mov	r0, r5
   11ab0:	bl	10d14 <dcgettext@plt>
   11ab4:	ldr	r1, [r6]
   11ab8:	bl	10c84 <fputs_unlocked@plt>
   11abc:	mov	r2, #5
   11ac0:	ldr	r1, [pc, #584]	; 11d10 <close@plt+0xe4c>
   11ac4:	mov	r0, r5
   11ac8:	bl	10d14 <dcgettext@plt>
   11acc:	ldr	r1, [r6]
   11ad0:	bl	10c84 <fputs_unlocked@plt>
   11ad4:	mov	r2, #5
   11ad8:	ldr	r1, [pc, #564]	; 11d14 <close@plt+0xe50>
   11adc:	mov	r0, r5
   11ae0:	bl	10d14 <dcgettext@plt>
   11ae4:	ldr	r1, [r6]
   11ae8:	bl	10c84 <fputs_unlocked@plt>
   11aec:	mov	r2, #5
   11af0:	ldr	r1, [pc, #544]	; 11d18 <close@plt+0xe54>
   11af4:	mov	r0, r5
   11af8:	bl	10d14 <dcgettext@plt>
   11afc:	ldr	r3, [r4]
   11b00:	ldr	r4, [pc, #532]	; 11d1c <close@plt+0xe58>
   11b04:	mov	r2, r3
   11b08:	mov	r1, r0
   11b0c:	mov	r0, #1
   11b10:	bl	10e1c <__printf_chk@plt>
   11b14:	ldm	r4!, {r0, r1, r2, r3}
   11b18:	mov	lr, sp
   11b1c:	stmia	lr!, {r0, r1, r2, r3}
   11b20:	ldm	r4!, {r0, r1, r2, r3}
   11b24:	ldr	ip, [sp]
   11b28:	stmia	lr!, {r0, r1, r2, r3}
   11b2c:	cmp	ip, #0
   11b30:	ldm	r4!, {r0, r1, r2, r3}
   11b34:	stmia	lr!, {r0, r1, r2, r3}
   11b38:	ldm	r4, {r0, r1}
   11b3c:	moveq	r4, sp
   11b40:	stm	lr, {r0, r1}
   11b44:	beq	11b74 <close@plt+0xcb0>
   11b48:	ldr	r7, [pc, #464]	; 11d20 <close@plt+0xe5c>
   11b4c:	mov	r4, sp
   11b50:	b	11b60 <close@plt+0xc9c>
   11b54:	ldr	ip, [r4, #8]!
   11b58:	cmp	ip, #0
   11b5c:	beq	11b74 <close@plt+0xcb0>
   11b60:	mov	r1, ip
   11b64:	mov	r0, r7
   11b68:	bl	10c9c <strcmp@plt>
   11b6c:	cmp	r0, #0
   11b70:	bne	11b54 <close@plt+0xc90>
   11b74:	ldr	r4, [r4, #4]
   11b78:	mov	r2, #5
   11b7c:	cmp	r4, #0
   11b80:	ldr	r1, [pc, #412]	; 11d24 <close@plt+0xe60>
   11b84:	beq	11c2c <close@plt+0xd68>
   11b88:	mov	r0, #0
   11b8c:	bl	10d14 <dcgettext@plt>
   11b90:	ldr	r3, [pc, #400]	; 11d28 <close@plt+0xe64>
   11b94:	ldr	r2, [pc, #400]	; 11d2c <close@plt+0xe68>
   11b98:	mov	r1, r0
   11b9c:	mov	r0, #1
   11ba0:	bl	10e1c <__printf_chk@plt>
   11ba4:	mov	r1, #0
   11ba8:	mov	r0, #5
   11bac:	bl	10e70 <setlocale@plt>
   11bb0:	cmp	r0, #0
   11bb4:	ldreq	r7, [pc, #356]	; 11d20 <close@plt+0xe5c>
   11bb8:	beq	11bd4 <close@plt+0xd10>
   11bbc:	mov	r2, #3
   11bc0:	ldr	r1, [pc, #360]	; 11d30 <close@plt+0xe6c>
   11bc4:	bl	10eac <strncmp@plt>
   11bc8:	ldr	r7, [pc, #336]	; 11d20 <close@plt+0xe5c>
   11bcc:	cmp	r0, #0
   11bd0:	bne	11cbc <close@plt+0xdf8>
   11bd4:	mov	r2, #5
   11bd8:	ldr	r1, [pc, #340]	; 11d34 <close@plt+0xe70>
   11bdc:	mov	r0, #0
   11be0:	bl	10d14 <dcgettext@plt>
   11be4:	ldr	r3, [pc, #308]	; 11d20 <close@plt+0xe5c>
   11be8:	ldr	r2, [pc, #312]	; 11d28 <close@plt+0xe64>
   11bec:	mov	r1, r0
   11bf0:	mov	r0, #1
   11bf4:	bl	10e1c <__printf_chk@plt>
   11bf8:	mov	r2, #5
   11bfc:	ldr	r1, [pc, #308]	; 11d38 <close@plt+0xe74>
   11c00:	mov	r0, #0
   11c04:	bl	10d14 <dcgettext@plt>
   11c08:	ldr	r2, [pc, #300]	; 11d3c <close@plt+0xe78>
   11c0c:	cmp	r4, r7
   11c10:	ldr	r3, [pc, #296]	; 11d40 <close@plt+0xe7c>
   11c14:	movne	r3, r2
   11c18:	mov	r1, r0
   11c1c:	mov	r2, r4
   11c20:	mov	r0, #1
   11c24:	bl	10e1c <__printf_chk@plt>
   11c28:	b	119b8 <close@plt+0xaf4>
   11c2c:	mov	r0, r4
   11c30:	bl	10d14 <dcgettext@plt>
   11c34:	ldr	r3, [pc, #236]	; 11d28 <close@plt+0xe64>
   11c38:	ldr	r2, [pc, #236]	; 11d2c <close@plt+0xe68>
   11c3c:	mov	r1, r0
   11c40:	mov	r0, #1
   11c44:	bl	10e1c <__printf_chk@plt>
   11c48:	mov	r1, r4
   11c4c:	mov	r0, #5
   11c50:	bl	10e70 <setlocale@plt>
   11c54:	cmp	r0, #0
   11c58:	beq	11c70 <close@plt+0xdac>
   11c5c:	mov	r2, #3
   11c60:	ldr	r1, [pc, #200]	; 11d30 <close@plt+0xe6c>
   11c64:	bl	10eac <strncmp@plt>
   11c68:	cmp	r0, #0
   11c6c:	bne	11cb4 <close@plt+0xdf0>
   11c70:	mov	r2, #5
   11c74:	ldr	r1, [pc, #184]	; 11d34 <close@plt+0xe70>
   11c78:	mov	r0, #0
   11c7c:	bl	10d14 <dcgettext@plt>
   11c80:	ldr	r3, [pc, #152]	; 11d20 <close@plt+0xe5c>
   11c84:	ldr	r2, [pc, #156]	; 11d28 <close@plt+0xe64>
   11c88:	mov	r4, r3
   11c8c:	mov	r1, r0
   11c90:	mov	r0, #1
   11c94:	bl	10e1c <__printf_chk@plt>
   11c98:	ldr	r1, [pc, #152]	; 11d38 <close@plt+0xe74>
   11c9c:	mov	r2, #5
   11ca0:	mov	r0, #0
   11ca4:	bl	10d14 <dcgettext@plt>
   11ca8:	ldr	r3, [pc, #144]	; 11d40 <close@plt+0xe7c>
   11cac:	mov	r1, r0
   11cb0:	b	11c1c <close@plt+0xd58>
   11cb4:	ldr	r7, [pc, #100]	; 11d20 <close@plt+0xe5c>
   11cb8:	mov	r4, r7
   11cbc:	mov	r2, #5
   11cc0:	ldr	r1, [pc, #124]	; 11d44 <close@plt+0xe80>
   11cc4:	mov	r0, #0
   11cc8:	bl	10d14 <dcgettext@plt>
   11ccc:	ldr	r1, [r6]
   11cd0:	bl	10c84 <fputs_unlocked@plt>
   11cd4:	b	11bd4 <close@plt+0xd10>
   11cd8:	andeq	sl, r2, r8, asr #2
   11cdc:			; <UNDEFINED> instruction: 0x000184bc
   11ce0:	andeq	sl, r2, r0, lsl #3
   11ce4:	andeq	r8, r1, r4, ror #9
   11ce8:	andeq	sl, r2, r4, asr r1
   11cec:	andeq	r8, r1, r8, lsl #10
   11cf0:	andeq	r8, r1, ip, lsr r5
   11cf4:	andeq	r8, r1, r8, ror r5
   11cf8:	andeq	r8, r1, r8, lsr r6
   11cfc:	andeq	r8, r1, r0, lsl r7
   11d00:	andeq	r8, r1, r4, ror #15
   11d04:	andeq	r8, r1, r0, lsr #16
   11d08:	andeq	r8, r1, ip, asr #16
   11d0c:	andeq	r8, r1, ip, lsl #17
   11d10:			; <UNDEFINED> instruction: 0x000188bc
   11d14:	strdeq	r8, [r1], -r4
   11d18:	andeq	r8, r1, r4, lsr r9
   11d1c:	strdeq	r8, [r1], -ip
   11d20:			; <UNDEFINED> instruction: 0x000184b4
   11d24:	ldrdeq	r8, [r1], -r0
   11d28:	andeq	r8, r1, r8, ror #19
   11d2c:	andeq	r8, r1, r0, lsl sl
   11d30:	andeq	r8, r1, r0, lsr #20
   11d34:	andeq	r8, r1, ip, ror #20
   11d38:	andeq	r8, r1, r8, lsl #21
   11d3c:	andeq	r8, r1, r4, lsr r6
   11d40:	ldrdeq	r8, [r1], -r0
   11d44:	andeq	r8, r1, r4, lsr #20
   11d48:	ldr	r3, [pc, #4]	; 11d54 <close@plt+0xe90>
   11d4c:	str	r0, [r3]
   11d50:	bx	lr
   11d54:	andeq	sl, r2, r8, ror r1
   11d58:	ldr	r3, [pc, #4]	; 11d64 <close@plt+0xea0>
   11d5c:	strb	r0, [r3, #4]
   11d60:	bx	lr
   11d64:	andeq	sl, r2, r8, ror r1
   11d68:	ldr	r3, [pc, #192]	; 11e30 <close@plt+0xf6c>
   11d6c:	push	{r4, r5, r6, lr}
   11d70:	sub	sp, sp, #8
   11d74:	ldr	r0, [r3]
   11d78:	bl	17868 <close@plt+0x69a4>
   11d7c:	cmp	r0, #0
   11d80:	beq	11da4 <close@plt+0xee0>
   11d84:	ldr	r4, [pc, #168]	; 11e34 <close@plt+0xf70>
   11d88:	ldrb	r3, [r4, #4]
   11d8c:	cmp	r3, #0
   11d90:	beq	11dc0 <close@plt+0xefc>
   11d94:	bl	10df8 <__errno_location@plt>
   11d98:	ldr	r3, [r0]
   11d9c:	cmp	r3, #32
   11da0:	bne	11dc0 <close@plt+0xefc>
   11da4:	ldr	r3, [pc, #140]	; 11e38 <close@plt+0xf74>
   11da8:	ldr	r0, [r3]
   11dac:	bl	17868 <close@plt+0x69a4>
   11db0:	cmp	r0, #0
   11db4:	bne	11e08 <close@plt+0xf44>
   11db8:	add	sp, sp, #8
   11dbc:	pop	{r4, r5, r6, pc}
   11dc0:	mov	r2, #5
   11dc4:	ldr	r1, [pc, #112]	; 11e3c <close@plt+0xf78>
   11dc8:	mov	r0, #0
   11dcc:	bl	10d14 <dcgettext@plt>
   11dd0:	ldr	r4, [r4]
   11dd4:	cmp	r4, #0
   11dd8:	mov	r5, r0
   11ddc:	beq	11e14 <close@plt+0xf50>
   11de0:	bl	10df8 <__errno_location@plt>
   11de4:	ldr	r6, [r0]
   11de8:	mov	r0, r4
   11dec:	bl	15078 <close@plt+0x41b4>
   11df0:	mov	r1, r6
   11df4:	str	r5, [sp]
   11df8:	ldr	r2, [pc, #64]	; 11e40 <close@plt+0xf7c>
   11dfc:	mov	r3, r0
   11e00:	mov	r0, #0
   11e04:	bl	10d80 <error@plt>
   11e08:	ldr	r3, [pc, #52]	; 11e44 <close@plt+0xf80>
   11e0c:	ldr	r0, [r3]
   11e10:	bl	10ccc <_exit@plt>
   11e14:	bl	10df8 <__errno_location@plt>
   11e18:	mov	r3, r5
   11e1c:	ldr	r2, [pc, #36]	; 11e48 <close@plt+0xf84>
   11e20:	ldr	r1, [r0]
   11e24:	mov	r0, r4
   11e28:	bl	10d80 <error@plt>
   11e2c:	b	11e08 <close@plt+0xf44>
   11e30:	andeq	sl, r2, r4, asr r1
   11e34:	andeq	sl, r2, r8, ror r1
   11e38:	andeq	sl, r2, r8, asr #2
   11e3c:	muleq	r1, r8, ip
   11e40:	andeq	r8, r1, r4, lsr #25
   11e44:	strdeq	sl, [r2], -r0
   11e48:	andeq	r8, r1, r8, lsr #25
   11e4c:	push	{r4, r5}
   11e50:	pop	{r4, r5}
   11e54:	b	10ca8 <posix_fadvise64@plt>
   11e58:	cmp	r0, #0
   11e5c:	bxeq	lr
   11e60:	push	{r4, lr}
   11e64:	sub	sp, sp, #16
   11e68:	mov	r4, r1
   11e6c:	bl	10e28 <fileno@plt>
   11e70:	mov	r2, #0
   11e74:	mov	r3, #0
   11e78:	str	r4, [sp, #8]
   11e7c:	strd	r2, [sp]
   11e80:	bl	10ca8 <posix_fadvise64@plt>
   11e84:	add	sp, sp, #16
   11e88:	pop	{r4, pc}
   11e8c:	push	{r4, r5, lr}
   11e90:	sub	sp, sp, #12
   11e94:	mov	r4, r0
   11e98:	bl	10e28 <fileno@plt>
   11e9c:	cmp	r0, #0
   11ea0:	mov	r0, r4
   11ea4:	blt	11f20 <close@plt+0x105c>
   11ea8:	bl	10db0 <__freading@plt>
   11eac:	cmp	r0, #0
   11eb0:	bne	11eec <close@plt+0x1028>
   11eb4:	mov	r0, r4
   11eb8:	bl	11f2c <close@plt+0x1068>
   11ebc:	cmp	r0, #0
   11ec0:	beq	11f1c <close@plt+0x1058>
   11ec4:	bl	10df8 <__errno_location@plt>
   11ec8:	mov	r5, r0
   11ecc:	mov	r0, r4
   11ed0:	ldr	r4, [r5]
   11ed4:	bl	10e40 <fclose@plt>
   11ed8:	cmp	r4, #0
   11edc:	mvnne	r0, #0
   11ee0:	strne	r4, [r5]
   11ee4:	add	sp, sp, #12
   11ee8:	pop	{r4, r5, pc}
   11eec:	mov	r0, r4
   11ef0:	bl	10e28 <fileno@plt>
   11ef4:	mov	r3, #1
   11ef8:	str	r3, [sp]
   11efc:	mov	r2, #0
   11f00:	mov	r3, #0
   11f04:	bl	10d50 <lseek64@plt>
   11f08:	mvn	r3, #0
   11f0c:	mvn	r2, #0
   11f10:	cmp	r1, r3
   11f14:	cmpeq	r0, r2
   11f18:	bne	11eb4 <close@plt+0xff0>
   11f1c:	mov	r0, r4
   11f20:	add	sp, sp, #12
   11f24:	pop	{r4, r5, lr}
   11f28:	b	10e40 <fclose@plt>
   11f2c:	push	{r4, lr}
   11f30:	subs	r4, r0, #0
   11f34:	sub	sp, sp, #8
   11f38:	beq	11f54 <close@plt+0x1090>
   11f3c:	bl	10db0 <__freading@plt>
   11f40:	cmp	r0, #0
   11f44:	beq	11f54 <close@plt+0x1090>
   11f48:	ldr	r3, [r4]
   11f4c:	tst	r3, #256	; 0x100
   11f50:	bne	11f64 <close@plt+0x10a0>
   11f54:	mov	r0, r4
   11f58:	add	sp, sp, #8
   11f5c:	pop	{r4, lr}
   11f60:	b	10cb4 <fflush@plt>
   11f64:	mov	r3, #1
   11f68:	str	r3, [sp]
   11f6c:	mov	r2, #0
   11f70:	mov	r3, #0
   11f74:	mov	r0, r4
   11f78:	bl	12024 <close@plt+0x1160>
   11f7c:	mov	r0, r4
   11f80:	add	sp, sp, #8
   11f84:	pop	{r4, lr}
   11f88:	b	10cb4 <fflush@plt>
   11f8c:	push	{r4, r5, r6, lr}
   11f90:	mov	r5, r1
   11f94:	bl	10e94 <fopen64@plt>
   11f98:	subs	r4, r0, #0
   11f9c:	beq	11fac <close@plt+0x10e8>
   11fa0:	bl	10e28 <fileno@plt>
   11fa4:	cmp	r0, #2
   11fa8:	bls	11fb4 <close@plt+0x10f0>
   11fac:	mov	r0, r4
   11fb0:	pop	{r4, r5, r6, pc}
   11fb4:	bl	164f0 <close@plt+0x562c>
   11fb8:	subs	r6, r0, #0
   11fbc:	blt	12004 <close@plt+0x1140>
   11fc0:	mov	r0, r4
   11fc4:	bl	11e8c <close@plt+0xfc8>
   11fc8:	cmp	r0, #0
   11fcc:	bne	11fe4 <close@plt+0x1120>
   11fd0:	mov	r1, r5
   11fd4:	mov	r0, r6
   11fd8:	bl	10c6c <fdopen@plt>
   11fdc:	subs	r4, r0, #0
   11fe0:	bne	11fac <close@plt+0x10e8>
   11fe4:	bl	10df8 <__errno_location@plt>
   11fe8:	mov	r4, #0
   11fec:	mov	r5, r0
   11ff0:	mov	r0, r6
   11ff4:	ldr	r6, [r5]
   11ff8:	bl	10ec4 <close@plt>
   11ffc:	str	r6, [r5]
   12000:	b	11fac <close@plt+0x10e8>
   12004:	bl	10df8 <__errno_location@plt>
   12008:	mov	r5, r0
   1200c:	mov	r0, r4
   12010:	ldr	r6, [r5]
   12014:	mov	r4, #0
   12018:	bl	11e8c <close@plt+0xfc8>
   1201c:	str	r6, [r5]
   12020:	b	11fac <close@plt+0x10e8>
   12024:	push	{r4, r5, r6, r7, r8, lr}
   12028:	sub	sp, sp, #8
   1202c:	ldmib	r0, {ip, lr}
   12030:	mov	r4, r0
   12034:	ldr	r5, [sp, #32]
   12038:	cmp	lr, ip
   1203c:	beq	12054 <close@plt+0x1190>
   12040:	str	r5, [sp, #32]
   12044:	mov	r0, r4
   12048:	add	sp, sp, #8
   1204c:	pop	{r4, r5, r6, r7, r8, lr}
   12050:	b	10e4c <fseeko64@plt>
   12054:	ldr	lr, [r0, #20]
   12058:	ldr	ip, [r0, #16]
   1205c:	cmp	lr, ip
   12060:	bne	12040 <close@plt+0x117c>
   12064:	ldr	r8, [r0, #36]	; 0x24
   12068:	cmp	r8, #0
   1206c:	bne	12040 <close@plt+0x117c>
   12070:	mov	r6, r2
   12074:	mov	r7, r3
   12078:	bl	10e28 <fileno@plt>
   1207c:	mov	r2, r6
   12080:	mov	r3, r7
   12084:	str	r5, [sp]
   12088:	bl	10d50 <lseek64@plt>
   1208c:	mvn	r3, #0
   12090:	mvn	r2, #0
   12094:	cmp	r1, r3
   12098:	cmpeq	r0, r2
   1209c:	beq	120bc <close@plt+0x11f8>
   120a0:	ldr	r3, [r4]
   120a4:	strd	r0, [r4, #80]	; 0x50
   120a8:	mov	r0, r8
   120ac:	bic	r3, r3, #16
   120b0:	str	r3, [r4]
   120b4:	add	sp, sp, #8
   120b8:	pop	{r4, r5, r6, r7, r8, pc}
   120bc:	mvn	r0, #0
   120c0:	b	120b4 <close@plt+0x11f0>
   120c4:	push	{lr}		; (str lr, [sp, #-4]!)
   120c8:	sub	sp, sp, #268	; 0x10c
   120cc:	add	r1, sp, #4
   120d0:	ldr	r2, [pc, #60]	; 12114 <close@plt+0x1250>
   120d4:	bl	16458 <close@plt+0x5594>
   120d8:	cmp	r0, #0
   120dc:	movne	r0, #0
   120e0:	bne	1210c <close@plt+0x1248>
   120e4:	ldr	r1, [pc, #44]	; 12118 <close@plt+0x1254>
   120e8:	add	r0, sp, #4
   120ec:	bl	10c9c <strcmp@plt>
   120f0:	cmp	r0, #0
   120f4:	beq	1210c <close@plt+0x1248>
   120f8:	add	r0, sp, #4
   120fc:	ldr	r1, [pc, #24]	; 1211c <close@plt+0x1258>
   12100:	bl	10c9c <strcmp@plt>
   12104:	adds	r0, r0, #0
   12108:	movne	r0, #1
   1210c:	add	sp, sp, #268	; 0x10c
   12110:	pop	{pc}		; (ldr pc, [sp], #4)
   12114:	andeq	r0, r0, r1, lsl #2
   12118:	andeq	r8, r1, ip, lsr #25
   1211c:			; <UNDEFINED> instruction: 0x00018cb0
   12120:	push	{r4, r5, r6, r8, r9, lr}
   12124:	mov	r4, r0
   12128:	mov	r5, r1
   1212c:	add	r6, r2, #20
   12130:	mov	r8, #10
   12134:	mov	r9, #0
   12138:	mov	r3, #0
   1213c:	strb	r3, [r2, #20]
   12140:	mov	r0, r4
   12144:	mov	r1, r5
   12148:	mov	r2, r8
   1214c:	mov	r3, r9
   12150:	bl	18200 <close@plt+0x733c>
   12154:	mov	r0, r4
   12158:	mov	r1, r5
   1215c:	mov	r3, r9
   12160:	add	r2, r2, #48	; 0x30
   12164:	strb	r2, [r6, #-1]!
   12168:	mov	r2, r8
   1216c:	bl	18200 <close@plt+0x733c>
   12170:	mov	r4, r0
   12174:	mov	r5, r1
   12178:	orrs	r3, r4, r5
   1217c:	bne	12140 <close@plt+0x127c>
   12180:	mov	r0, r6
   12184:	pop	{r4, r5, r6, r8, r9, pc}
   12188:	mov	r3, #0
   1218c:	str	r3, [r0]
   12190:	str	r3, [r0, #4]
   12194:	str	r3, [r0, #8]
   12198:	bx	lr
   1219c:	ldr	r3, [r1]
   121a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121a4:	mov	r5, r1
   121a8:	ldr	sl, [r0, #8]
   121ac:	ldr	r1, [r0]
   121b0:	tst	r3, #16
   121b4:	sub	sp, sp, #12
   121b8:	add	fp, sl, r1
   121bc:	moveq	r8, r0
   121c0:	moveq	r4, sl
   121c4:	moveq	r9, #10
   121c8:	beq	121f8 <close@plt+0x1334>
   121cc:	b	122a8 <close@plt+0x13e4>
   121d0:	add	r0, r3, #1
   121d4:	str	r0, [r5, #4]
   121d8:	ldrb	r6, [r3]
   121dc:	mov	r7, r6
   121e0:	cmp	r4, fp
   121e4:	beq	12250 <close@plt+0x138c>
   121e8:	cmp	r6, #10
   121ec:	strb	r7, [r4]
   121f0:	add	r4, r4, #1
   121f4:	beq	12294 <close@plt+0x13d0>
   121f8:	ldr	r3, [r5, #4]
   121fc:	ldr	r0, [r5, #8]
   12200:	cmp	r3, r0
   12204:	bcc	121d0 <close@plt+0x130c>
   12208:	mov	r0, r5
   1220c:	bl	10e64 <__uflow@plt>
   12210:	cmn	r0, #1
   12214:	mov	r6, r0
   12218:	uxtbne	r7, r0
   1221c:	bne	121e0 <close@plt+0x131c>
   12220:	cmp	sl, r4
   12224:	beq	122a8 <close@plt+0x13e4>
   12228:	ldr	r3, [r5]
   1222c:	tst	r3, #32
   12230:	bne	122a8 <close@plt+0x13e4>
   12234:	ldrb	r3, [r4, #-1]
   12238:	cmp	r3, #10
   1223c:	beq	12294 <close@plt+0x13d0>
   12240:	cmp	r4, fp
   12244:	mov	r7, r9
   12248:	mov	r6, #10
   1224c:	bne	121e8 <close@plt+0x1324>
   12250:	mov	r3, #1
   12254:	str	r3, [sp]
   12258:	mov	r0, sl
   1225c:	mov	r1, r8
   12260:	mvn	r3, #0
   12264:	mov	r2, #1
   12268:	ldr	r4, [r8]
   1226c:	bl	1717c <close@plt+0x62b8>
   12270:	ldr	r1, [r8]
   12274:	cmp	r6, #10
   12278:	add	r4, r0, r4
   1227c:	str	r0, [r8, #8]
   12280:	mov	sl, r0
   12284:	strb	r7, [r4]
   12288:	add	fp, r0, r1
   1228c:	add	r4, r4, #1
   12290:	bne	121f8 <close@plt+0x1334>
   12294:	sub	r4, r4, sl
   12298:	mov	r0, r8
   1229c:	str	r4, [r8, #4]
   122a0:	add	sp, sp, #12
   122a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122a8:	mov	r0, #0
   122ac:	add	sp, sp, #12
   122b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122b4:	ldr	ip, [r1]
   122b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122bc:	tst	ip, #16
   122c0:	ldr	fp, [r0, #8]
   122c4:	ldr	r3, [r0]
   122c8:	sub	sp, sp, #12
   122cc:	add	r8, fp, r3
   122d0:	bne	123b4 <close@plt+0x14f0>
   122d4:	mov	r6, r2
   122d8:	mov	r7, r0
   122dc:	mov	r5, r1
   122e0:	mov	r4, fp
   122e4:	mov	r9, #1
   122e8:	b	12310 <close@plt+0x144c>
   122ec:	add	r1, r3, #1
   122f0:	str	r1, [r5, #4]
   122f4:	ldrb	sl, [r3]
   122f8:	cmp	r4, r8
   122fc:	beq	12360 <close@plt+0x149c>
   12300:	cmp	sl, r6
   12304:	strb	sl, [r4]
   12308:	add	r4, r4, #1
   1230c:	beq	123a0 <close@plt+0x14dc>
   12310:	ldr	r3, [r5, #4]
   12314:	ldr	r1, [r5, #8]
   12318:	cmp	r3, r1
   1231c:	bcc	122ec <close@plt+0x1428>
   12320:	mov	r0, r5
   12324:	bl	10e64 <__uflow@plt>
   12328:	cmn	r0, #1
   1232c:	mov	sl, r0
   12330:	bne	122f8 <close@plt+0x1434>
   12334:	cmp	fp, r4
   12338:	beq	123b4 <close@plt+0x14f0>
   1233c:	ldr	r3, [r5]
   12340:	tst	r3, #32
   12344:	bne	123b4 <close@plt+0x14f0>
   12348:	ldrb	r3, [r4, #-1]
   1234c:	cmp	r3, r6
   12350:	beq	123a0 <close@plt+0x14dc>
   12354:	cmp	r4, r8
   12358:	mov	sl, r6
   1235c:	bne	12300 <close@plt+0x143c>
   12360:	str	r9, [sp]
   12364:	mov	r0, fp
   12368:	mov	r2, #1
   1236c:	mvn	r3, #0
   12370:	mov	r1, r7
   12374:	ldr	r4, [r7]
   12378:	bl	1717c <close@plt+0x62b8>
   1237c:	ldr	r2, [r7]
   12380:	cmp	sl, r6
   12384:	add	r4, r0, r4
   12388:	str	r0, [r7, #8]
   1238c:	mov	fp, r0
   12390:	strb	sl, [r4]
   12394:	add	r8, r0, r2
   12398:	add	r4, r4, #1
   1239c:	bne	12310 <close@plt+0x144c>
   123a0:	sub	r4, r4, fp
   123a4:	mov	r0, r7
   123a8:	str	r4, [r7, #4]
   123ac:	add	sp, sp, #12
   123b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123b4:	mov	r0, #0
   123b8:	add	sp, sp, #12
   123bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123c0:	ldr	r0, [r0, #8]
   123c4:	b	17ab8 <close@plt+0x6bf4>
   123c8:	cmp	r1, r3
   123cc:	push	{r4, r5, r6, lr}
   123d0:	mov	r5, r1
   123d4:	mov	r1, r2
   123d8:	movcc	r2, r5
   123dc:	movcs	r2, r3
   123e0:	mov	r4, r3
   123e4:	bl	10cfc <memcmp@plt>
   123e8:	cmp	r0, #0
   123ec:	popne	{r4, r5, r6, pc}
   123f0:	cmp	r5, r4
   123f4:	movcs	r0, #0
   123f8:	movcc	r0, #1
   123fc:	cmp	r5, r4
   12400:	rsbls	r0, r0, #0
   12404:	rsbhi	r0, r0, #1
   12408:	pop	{r4, r5, r6, pc}
   1240c:	push	{r4, r5, r6, lr}
   12410:	subs	r4, r0, #0
   12414:	beq	12488 <close@plt+0x15c4>
   12418:	mov	r1, #47	; 0x2f
   1241c:	bl	10e7c <strrchr@plt>
   12420:	subs	r5, r0, #0
   12424:	beq	12474 <close@plt+0x15b0>
   12428:	add	r6, r5, #1
   1242c:	sub	r3, r6, r4
   12430:	cmp	r3, #6
   12434:	ble	12474 <close@plt+0x15b0>
   12438:	mov	r2, #7
   1243c:	ldr	r1, [pc, #96]	; 124a4 <close@plt+0x15e0>
   12440:	sub	r0, r5, #6
   12444:	bl	10eac <strncmp@plt>
   12448:	cmp	r0, #0
   1244c:	bne	12474 <close@plt+0x15b0>
   12450:	mov	r2, #3
   12454:	ldr	r1, [pc, #76]	; 124a8 <close@plt+0x15e4>
   12458:	mov	r0, r6
   1245c:	bl	10eac <strncmp@plt>
   12460:	cmp	r0, #0
   12464:	movne	r4, r6
   12468:	ldreq	r3, [pc, #60]	; 124ac <close@plt+0x15e8>
   1246c:	addeq	r4, r5, #4
   12470:	streq	r4, [r3]
   12474:	ldr	r2, [pc, #52]	; 124b0 <close@plt+0x15ec>
   12478:	ldr	r3, [pc, #52]	; 124b4 <close@plt+0x15f0>
   1247c:	str	r4, [r2]
   12480:	str	r4, [r3]
   12484:	pop	{r4, r5, r6, pc}
   12488:	ldr	r3, [pc, #40]	; 124b8 <close@plt+0x15f4>
   1248c:	mov	r2, #55	; 0x37
   12490:	mov	r1, #1
   12494:	ldr	r3, [r3]
   12498:	ldr	r0, [pc, #28]	; 124bc <close@plt+0x15f8>
   1249c:	bl	10d44 <fwrite@plt>
   124a0:	bl	10eb8 <abort@plt>
   124a4:	strdeq	r8, [r1], -r0
   124a8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   124ac:	andeq	sl, r2, r8, lsr r1
   124b0:	andeq	sl, r2, r0, lsl #3
   124b4:	andeq	sl, r2, ip, lsr r1
   124b8:	andeq	sl, r2, r8, asr #2
   124bc:			; <UNDEFINED> instruction: 0x00018cb8
   124c0:	push	{r4, r5, r6, lr}
   124c4:	mov	r4, r0
   124c8:	mov	r5, r1
   124cc:	bl	17b10 <close@plt+0x6c4c>
   124d0:	ldrb	r3, [r0]
   124d4:	bic	r3, r3, #32
   124d8:	cmp	r3, #85	; 0x55
   124dc:	bne	1253c <close@plt+0x1678>
   124e0:	ldrb	r3, [r0, #1]
   124e4:	bic	r3, r3, #32
   124e8:	cmp	r3, #84	; 0x54
   124ec:	bne	12578 <close@plt+0x16b4>
   124f0:	ldrb	r3, [r0, #2]
   124f4:	bic	r3, r3, #32
   124f8:	cmp	r3, #70	; 0x46
   124fc:	bne	12578 <close@plt+0x16b4>
   12500:	ldrb	r3, [r0, #3]
   12504:	cmp	r3, #45	; 0x2d
   12508:	bne	12578 <close@plt+0x16b4>
   1250c:	ldrb	r3, [r0, #4]
   12510:	cmp	r3, #56	; 0x38
   12514:	bne	12578 <close@plt+0x16b4>
   12518:	ldrb	r3, [r0, #5]
   1251c:	cmp	r3, #0
   12520:	bne	12578 <close@plt+0x16b4>
   12524:	ldrb	r2, [r4]
   12528:	ldr	r3, [pc, #152]	; 125c8 <close@plt+0x1704>
   1252c:	ldr	r0, [pc, #152]	; 125cc <close@plt+0x1708>
   12530:	cmp	r2, #96	; 0x60
   12534:	movne	r0, r3
   12538:	pop	{r4, r5, r6, pc}
   1253c:	cmp	r3, #71	; 0x47
   12540:	bne	12578 <close@plt+0x16b4>
   12544:	ldrb	r3, [r0, #1]
   12548:	bic	r3, r3, #32
   1254c:	cmp	r3, #66	; 0x42
   12550:	bne	12578 <close@plt+0x16b4>
   12554:	ldrb	r3, [r0, #2]
   12558:	cmp	r3, #49	; 0x31
   1255c:	bne	12578 <close@plt+0x16b4>
   12560:	ldrb	r3, [r0, #3]
   12564:	cmp	r3, #56	; 0x38
   12568:	bne	12578 <close@plt+0x16b4>
   1256c:	ldrb	r3, [r0, #4]
   12570:	cmp	r3, #48	; 0x30
   12574:	beq	1258c <close@plt+0x16c8>
   12578:	ldr	r3, [pc, #80]	; 125d0 <close@plt+0x170c>
   1257c:	cmp	r5, #9
   12580:	ldr	r0, [pc, #76]	; 125d4 <close@plt+0x1710>
   12584:	movne	r0, r3
   12588:	pop	{r4, r5, r6, pc}
   1258c:	ldrb	r3, [r0, #5]
   12590:	cmp	r3, #51	; 0x33
   12594:	bne	12578 <close@plt+0x16b4>
   12598:	ldrb	r3, [r0, #6]
   1259c:	cmp	r3, #48	; 0x30
   125a0:	bne	12578 <close@plt+0x16b4>
   125a4:	ldrb	r3, [r0, #7]
   125a8:	cmp	r3, #0
   125ac:	bne	12578 <close@plt+0x16b4>
   125b0:	ldrb	r2, [r4]
   125b4:	ldr	r3, [pc, #28]	; 125d8 <close@plt+0x1714>
   125b8:	ldr	r0, [pc, #28]	; 125dc <close@plt+0x1718>
   125bc:	cmp	r2, #96	; 0x60
   125c0:	movne	r0, r3
   125c4:	pop	{r4, r5, r6, pc}
   125c8:	andeq	r8, r1, r4, asr sp
   125cc:	andeq	r8, r1, r0, asr sp
   125d0:	andeq	r8, r1, r4, ror #26
   125d4:	andeq	r8, r1, r0, ror #26
   125d8:	andeq	r8, r1, ip, asr sp
   125dc:	andeq	r8, r1, r8, asr sp
   125e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125e4:	sub	sp, sp, #140	; 0x8c
   125e8:	mov	r9, r1
   125ec:	str	r3, [sp, #24]
   125f0:	mov	r3, #1
   125f4:	mov	sl, r0
   125f8:	str	r2, [sp, #44]	; 0x2c
   125fc:	str	r3, [sp, #28]
   12600:	bl	10d5c <__ctype_get_mb_cur_max@plt>
   12604:	ldr	r3, [sp, #180]	; 0xb4
   12608:	mov	fp, r9
   1260c:	mov	r9, sl
   12610:	lsr	r3, r3, #1
   12614:	and	r3, r3, #1
   12618:	str	r3, [sp, #40]	; 0x28
   1261c:	ldr	r3, [sp, #180]	; 0xb4
   12620:	mov	r2, #0
   12624:	and	r3, r3, #4
   12628:	str	r3, [sp, #100]	; 0x64
   1262c:	ldr	r3, [sp, #180]	; 0xb4
   12630:	str	r2, [sp, #76]	; 0x4c
   12634:	and	r3, r3, #1
   12638:	str	r3, [sp, #96]	; 0x60
   1263c:	str	r2, [sp, #36]	; 0x24
   12640:	str	r2, [sp, #56]	; 0x38
   12644:	str	r2, [sp, #68]	; 0x44
   12648:	str	r2, [sp, #72]	; 0x48
   1264c:	str	r2, [sp, #84]	; 0x54
   12650:	str	r0, [sp, #80]	; 0x50
   12654:	ldr	r3, [sp, #176]	; 0xb0
   12658:	cmp	r3, #10
   1265c:	ldrls	pc, [pc, r3, lsl #2]
   12660:	b	13838 <close@plt+0x2974>
   12664:	muleq	r1, r0, r6
   12668:			; <UNDEFINED> instruction: 0x000129b0
   1266c:	andeq	r2, r1, r8, lsl #22
   12670:	andeq	r2, r1, r4, ror #19
   12674:	andeq	r2, r1, ip, asr fp
   12678:	andeq	r2, r1, ip, lsr fp
   1267c:	andeq	r2, r1, r4, lsl #20
   12680:	andeq	r2, r1, r8, lsr #20
   12684:	andeq	r2, r1, r0, asr sl
   12688:	andeq	r2, r1, r0, asr sl
   1268c:	andeq	r2, r1, r0, asr sl
   12690:	mov	r3, #0
   12694:	ldr	r1, [sp, #56]	; 0x38
   12698:	ldr	r2, [sp, #176]	; 0xb0
   1269c:	ldr	lr, [sp, #176]	; 0xb0
   126a0:	mov	r8, r3
   126a4:	mov	ip, r3
   126a8:	str	r3, [sp, #40]	; 0x28
   126ac:	mov	r3, r1
   126b0:	cmp	r2, #2
   126b4:	moveq	r3, #0
   126b8:	andne	r3, r3, #1
   126bc:	mov	r0, r3
   126c0:	str	r3, [sp, #92]	; 0x5c
   126c4:	ldr	r3, [sp, #68]	; 0x44
   126c8:	sub	lr, lr, #2
   126cc:	adds	r2, r3, #0
   126d0:	movne	r2, #1
   126d4:	and	r3, r1, ip
   126d8:	and	r3, r2, r3
   126dc:	clz	lr, lr
   126e0:	str	r3, [sp, #88]	; 0x58
   126e4:	lsr	lr, lr, #5
   126e8:	mov	r3, ip
   126ec:	and	r3, r3, lr
   126f0:	mov	sl, #0
   126f4:	and	r0, r2, r0
   126f8:	str	r3, [sp, #64]	; 0x40
   126fc:	eor	r3, r1, #1
   12700:	str	lr, [sp, #52]	; 0x34
   12704:	str	r0, [sp, #48]	; 0x30
   12708:	str	r3, [sp, #60]	; 0x3c
   1270c:	ldr	r3, [sp, #24]
   12710:	cmn	r3, #1
   12714:	beq	12c44 <close@plt+0x1d80>
   12718:	subs	r7, r3, sl
   1271c:	movne	r7, #1
   12720:	cmp	r7, #0
   12724:	beq	12c5c <close@plt+0x1d98>
   12728:	ldr	r3, [sp, #48]	; 0x30
   1272c:	cmp	r3, #0
   12730:	beq	12fc8 <close@plt+0x2104>
   12734:	ldr	r2, [sp, #68]	; 0x44
   12738:	ldr	r1, [sp, #24]
   1273c:	cmp	r2, #1
   12740:	mov	r3, r2
   12744:	movls	r3, #0
   12748:	movhi	r3, #1
   1274c:	cmn	r1, #1
   12750:	movne	r3, #0
   12754:	cmp	r3, #0
   12758:	add	r4, sl, r2
   1275c:	beq	1276c <close@plt+0x18a8>
   12760:	ldr	r0, [sp, #44]	; 0x2c
   12764:	bl	10dec <strlen@plt>
   12768:	str	r0, [sp, #24]
   1276c:	ldr	r3, [sp, #24]
   12770:	cmp	r3, r4
   12774:	ldr	r3, [sp, #44]	; 0x2c
   12778:	add	r5, r3, sl
   1277c:	bcc	12fd0 <close@plt+0x210c>
   12780:	mov	r0, r5
   12784:	ldr	r2, [sp, #68]	; 0x44
   12788:	ldr	r1, [sp, #72]	; 0x48
   1278c:	bl	10cfc <memcmp@plt>
   12790:	cmp	r0, #0
   12794:	bne	12fd0 <close@plt+0x210c>
   12798:	ldr	r3, [sp, #40]	; 0x28
   1279c:	cmp	r3, #0
   127a0:	bne	1398c <close@plt+0x2ac8>
   127a4:	ldrb	r4, [r5]
   127a8:	cmp	r4, #126	; 0x7e
   127ac:	ldrls	pc, [pc, r4, lsl #2]
   127b0:	b	138c8 <close@plt+0x2a04>
   127b4:	andeq	r2, r1, r8, lsl #29
   127b8:	andeq	r3, r1, r8, asr #17
   127bc:	andeq	r3, r1, r8, asr #17
   127c0:	andeq	r3, r1, r8, asr #17
   127c4:	andeq	r3, r1, r8, asr #17
   127c8:	andeq	r3, r1, r8, asr #17
   127cc:	andeq	r3, r1, r8, asr #17
   127d0:	andeq	r2, r1, r4, ror lr
   127d4:	andeq	r2, r1, r0, ror #28
   127d8:	andeq	r2, r1, ip, lsr lr
   127dc:	andeq	r2, r1, ip, lsl lr
   127e0:	andeq	r2, r1, ip, asr #28
   127e4:	andeq	r2, r1, r4, lsl #27
   127e8:			; <UNDEFINED> instruction: 0x00012fb8
   127ec:	andeq	r3, r1, r8, asr #17
   127f0:	andeq	r3, r1, r8, asr #17
   127f4:	andeq	r3, r1, r8, asr #17
   127f8:	andeq	r3, r1, r8, asr #17
   127fc:	andeq	r3, r1, r8, asr #17
   12800:	andeq	r3, r1, r8, asr #17
   12804:	andeq	r3, r1, r8, asr #17
   12808:	andeq	r3, r1, r8, asr #17
   1280c:	andeq	r3, r1, r8, asr #17
   12810:	andeq	r3, r1, r8, asr #17
   12814:	andeq	r3, r1, r8, asr #17
   12818:	andeq	r3, r1, r8, asr #17
   1281c:	andeq	r3, r1, r8, asr #17
   12820:	andeq	r3, r1, r8, asr #17
   12824:	andeq	r3, r1, r8, asr #17
   12828:	andeq	r3, r1, r8, asr #17
   1282c:	andeq	r3, r1, r8, asr #17
   12830:	andeq	r3, r1, r8, asr #17
   12834:	andeq	r2, r1, r8, lsr #31
   12838:	andeq	r2, r1, r8, lsl #31
   1283c:	andeq	r2, r1, r8, lsl #31
   12840:	andeq	r2, r1, r8, ror #30
   12844:	andeq	r2, r1, r8, lsl #31
   12848:	andeq	r2, r1, r4, ror sp
   1284c:	andeq	r2, r1, r8, lsl #31
   12850:	andeq	r2, r1, r0, asr sp
   12854:	andeq	r2, r1, r8, lsl #31
   12858:	andeq	r2, r1, r8, lsl #31
   1285c:	andeq	r2, r1, r8, lsl #31
   12860:	andeq	r2, r1, r4, ror sp
   12864:	andeq	r2, r1, r4, ror sp
   12868:	andeq	r2, r1, r4, ror sp
   1286c:	andeq	r2, r1, r4, ror sp
   12870:	andeq	r2, r1, r4, ror sp
   12874:	andeq	r2, r1, r4, ror sp
   12878:	andeq	r2, r1, r4, ror sp
   1287c:	andeq	r2, r1, r4, ror sp
   12880:	andeq	r2, r1, r4, ror sp
   12884:	andeq	r2, r1, r4, ror sp
   12888:	andeq	r2, r1, r4, ror sp
   1288c:	andeq	r2, r1, r4, ror sp
   12890:	andeq	r2, r1, r4, ror sp
   12894:	andeq	r2, r1, r4, ror sp
   12898:	andeq	r2, r1, r4, ror sp
   1289c:	andeq	r2, r1, r4, ror sp
   128a0:	andeq	r2, r1, r8, lsl #31
   128a4:	andeq	r2, r1, r8, lsl #31
   128a8:	andeq	r2, r1, r8, lsl #31
   128ac:	andeq	r2, r1, r8, lsl #31
   128b0:	andeq	r2, r1, r0, lsl #26
   128b4:	andeq	r3, r1, r8, asr #17
   128b8:	andeq	r2, r1, r4, ror sp
   128bc:	andeq	r2, r1, r4, ror sp
   128c0:	andeq	r2, r1, r4, ror sp
   128c4:	andeq	r2, r1, r4, ror sp
   128c8:	andeq	r2, r1, r4, ror sp
   128cc:	andeq	r2, r1, r4, ror sp
   128d0:	andeq	r2, r1, r4, ror sp
   128d4:	andeq	r2, r1, r4, ror sp
   128d8:	andeq	r2, r1, r4, ror sp
   128dc:	andeq	r2, r1, r4, ror sp
   128e0:	andeq	r2, r1, r4, ror sp
   128e4:	andeq	r2, r1, r4, ror sp
   128e8:	andeq	r2, r1, r4, ror sp
   128ec:	andeq	r2, r1, r4, ror sp
   128f0:	andeq	r2, r1, r4, ror sp
   128f4:	andeq	r2, r1, r4, ror sp
   128f8:	andeq	r2, r1, r4, ror sp
   128fc:	andeq	r2, r1, r4, ror sp
   12900:	andeq	r2, r1, r4, ror sp
   12904:	andeq	r2, r1, r4, ror sp
   12908:	andeq	r2, r1, r4, ror sp
   1290c:	andeq	r2, r1, r4, ror sp
   12910:	andeq	r2, r1, r4, ror sp
   12914:	andeq	r2, r1, r4, ror sp
   12918:	andeq	r2, r1, r4, ror sp
   1291c:	andeq	r2, r1, r4, ror sp
   12920:	andeq	r2, r1, r8, lsl #31
   12924:	andeq	r2, r1, ip, asr #25
   12928:	andeq	r2, r1, r4, ror sp
   1292c:	andeq	r2, r1, r8, lsl #31
   12930:	andeq	r2, r1, r4, ror sp
   12934:	andeq	r2, r1, r8, lsl #31
   12938:	andeq	r2, r1, r4, ror sp
   1293c:	andeq	r2, r1, r4, ror sp
   12940:	andeq	r2, r1, r4, ror sp
   12944:	andeq	r2, r1, r4, ror sp
   12948:	andeq	r2, r1, r4, ror sp
   1294c:	andeq	r2, r1, r4, ror sp
   12950:	andeq	r2, r1, r4, ror sp
   12954:	andeq	r2, r1, r4, ror sp
   12958:	andeq	r2, r1, r4, ror sp
   1295c:	andeq	r2, r1, r4, ror sp
   12960:	andeq	r2, r1, r4, ror sp
   12964:	andeq	r2, r1, r4, ror sp
   12968:	andeq	r2, r1, r4, ror sp
   1296c:	andeq	r2, r1, r4, ror sp
   12970:	andeq	r2, r1, r4, ror sp
   12974:	andeq	r2, r1, r4, ror sp
   12978:	andeq	r2, r1, r4, ror sp
   1297c:	andeq	r2, r1, r4, ror sp
   12980:	andeq	r2, r1, r4, ror sp
   12984:	andeq	r2, r1, r4, ror sp
   12988:	andeq	r2, r1, r4, ror sp
   1298c:	andeq	r2, r1, r4, ror sp
   12990:	andeq	r2, r1, r4, ror sp
   12994:	andeq	r2, r1, r4, ror sp
   12998:	andeq	r2, r1, r4, ror sp
   1299c:	andeq	r2, r1, r4, ror sp
   129a0:	andeq	r2, r1, r4, lsl #23
   129a4:	andeq	r2, r1, r8, lsl #31
   129a8:	andeq	r2, r1, r4, lsl #23
   129ac:	andeq	r2, r1, r8, ror #30
   129b0:	mov	r3, #1
   129b4:	str	r3, [sp, #40]	; 0x28
   129b8:	str	r3, [sp, #68]	; 0x44
   129bc:	mov	r8, #0
   129c0:	ldr	r3, [pc, #4056]	; 139a0 <close@plt+0x2adc>
   129c4:	str	r3, [sp, #72]	; 0x48
   129c8:	mov	r3, #2
   129cc:	str	r3, [sp, #176]	; 0xb0
   129d0:	ldr	r1, [sp, #56]	; 0x38
   129d4:	mov	r2, r3
   129d8:	ldr	ip, [sp, #40]	; 0x28
   129dc:	mov	lr, r3
   129e0:	b	126ac <close@plt+0x17e8>
   129e4:	mov	r3, #1
   129e8:	str	r3, [sp, #56]	; 0x38
   129ec:	str	r3, [sp, #68]	; 0x44
   129f0:	str	r3, [sp, #40]	; 0x28
   129f4:	ldr	r3, [pc, #4004]	; 139a0 <close@plt+0x2adc>
   129f8:	mov	r8, #0
   129fc:	str	r3, [sp, #72]	; 0x48
   12a00:	b	129c8 <close@plt+0x1b04>
   12a04:	mov	r3, #1
   12a08:	str	r3, [sp, #56]	; 0x38
   12a0c:	str	r3, [sp, #68]	; 0x44
   12a10:	str	r3, [sp, #40]	; 0x28
   12a14:	ldr	r3, [pc, #3976]	; 139a4 <close@plt+0x2ae0>
   12a18:	mov	r8, #0
   12a1c:	str	r3, [sp, #72]	; 0x48
   12a20:	mov	r3, #5
   12a24:	b	129cc <close@plt+0x1b08>
   12a28:	mov	r3, #0
   12a2c:	str	r3, [sp, #40]	; 0x28
   12a30:	mov	r3, #1
   12a34:	str	r3, [sp, #56]	; 0x38
   12a38:	mov	r8, #0
   12a3c:	mov	r1, r3
   12a40:	ldr	r2, [sp, #176]	; 0xb0
   12a44:	ldr	ip, [sp, #40]	; 0x28
   12a48:	ldr	lr, [sp, #176]	; 0xb0
   12a4c:	b	126ac <close@plt+0x17e8>
   12a50:	ldr	r3, [sp, #176]	; 0xb0
   12a54:	cmp	r3, #10
   12a58:	beq	12a9c <close@plt+0x1bd8>
   12a5c:	mov	r2, #5
   12a60:	ldr	r1, [pc, #3904]	; 139a8 <close@plt+0x2ae4>
   12a64:	mov	r0, #0
   12a68:	bl	10d14 <dcgettext@plt>
   12a6c:	ldr	r2, [pc, #3892]	; 139a8 <close@plt+0x2ae4>
   12a70:	cmp	r0, r2
   12a74:	str	r0, [sp, #188]	; 0xbc
   12a78:	beq	13b34 <close@plt+0x2c70>
   12a7c:	mov	r2, #5
   12a80:	ldr	r1, [pc, #3864]	; 139a0 <close@plt+0x2adc>
   12a84:	mov	r0, #0
   12a88:	bl	10d14 <dcgettext@plt>
   12a8c:	ldr	r2, [pc, #3852]	; 139a0 <close@plt+0x2adc>
   12a90:	cmp	r0, r2
   12a94:	str	r0, [sp, #192]	; 0xc0
   12a98:	beq	13b24 <close@plt+0x2c60>
   12a9c:	ldr	r8, [sp, #40]	; 0x28
   12aa0:	cmp	r8, #0
   12aa4:	movne	r8, #0
   12aa8:	bne	12ad8 <close@plt+0x1c14>
   12aac:	ldr	r3, [sp, #188]	; 0xbc
   12ab0:	ldrb	r3, [r3]
   12ab4:	cmp	r3, #0
   12ab8:	beq	12ad8 <close@plt+0x1c14>
   12abc:	ldr	r2, [sp, #188]	; 0xbc
   12ac0:	cmp	fp, r8
   12ac4:	strbhi	r3, [r9, r8]
   12ac8:	ldrb	r3, [r2, #1]!
   12acc:	add	r8, r8, #1
   12ad0:	cmp	r3, #0
   12ad4:	bne	12ac0 <close@plt+0x1bfc>
   12ad8:	ldr	r0, [sp, #192]	; 0xc0
   12adc:	bl	10dec <strlen@plt>
   12ae0:	ldr	r3, [sp, #192]	; 0xc0
   12ae4:	ldr	r2, [sp, #176]	; 0xb0
   12ae8:	str	r3, [sp, #72]	; 0x48
   12aec:	mov	r3, #1
   12af0:	str	r3, [sp, #56]	; 0x38
   12af4:	mov	r1, r3
   12af8:	ldr	ip, [sp, #40]	; 0x28
   12afc:	ldr	lr, [sp, #176]	; 0xb0
   12b00:	str	r0, [sp, #68]	; 0x44
   12b04:	b	126ac <close@plt+0x17e8>
   12b08:	ldr	r3, [sp, #40]	; 0x28
   12b0c:	cmp	r3, #0
   12b10:	beq	137b8 <close@plt+0x28f4>
   12b14:	mov	r3, #1
   12b18:	str	r3, [sp, #68]	; 0x44
   12b1c:	ldr	r3, [pc, #3708]	; 139a0 <close@plt+0x2adc>
   12b20:	str	r3, [sp, #72]	; 0x48
   12b24:	mov	r8, #0
   12b28:	ldr	r1, [sp, #56]	; 0x38
   12b2c:	ldr	r2, [sp, #176]	; 0xb0
   12b30:	ldr	ip, [sp, #40]	; 0x28
   12b34:	ldr	lr, [sp, #176]	; 0xb0
   12b38:	b	126ac <close@plt+0x17e8>
   12b3c:	ldr	r3, [sp, #40]	; 0x28
   12b40:	cmp	r3, #0
   12b44:	beq	1383c <close@plt+0x2978>
   12b48:	str	r3, [sp, #56]	; 0x38
   12b4c:	mov	r3, #1
   12b50:	str	r3, [sp, #68]	; 0x44
   12b54:	ldr	r3, [pc, #3656]	; 139a4 <close@plt+0x2ae0>
   12b58:	b	12b20 <close@plt+0x1c5c>
   12b5c:	ldr	r3, [sp, #40]	; 0x28
   12b60:	cmp	r3, #0
   12b64:	mov	r3, #1
   12b68:	streq	r3, [sp, #56]	; 0x38
   12b6c:	beq	137b8 <close@plt+0x28f4>
   12b70:	str	r3, [sp, #68]	; 0x44
   12b74:	ldr	r3, [pc, #3620]	; 139a0 <close@plt+0x2adc>
   12b78:	mov	r8, #0
   12b7c:	str	r3, [sp, #72]	; 0x48
   12b80:	b	129c8 <close@plt+0x1b04>
   12b84:	ldr	r3, [sp, #24]
   12b88:	ldr	r6, [sp, #48]	; 0x30
   12b8c:	cmn	r3, #1
   12b90:	beq	131ec <close@plt+0x2328>
   12b94:	subs	r3, r3, #1
   12b98:	movne	r3, #1
   12b9c:	cmp	r3, #0
   12ba0:	beq	12f6c <close@plt+0x20a8>
   12ba4:	ldr	r1, [sp, #52]	; 0x34
   12ba8:	mov	r7, r3
   12bac:	mov	r3, #0
   12bb0:	str	r3, [sp, #32]
   12bb4:	ldr	r3, [sp, #60]	; 0x3c
   12bb8:	orr	r2, r1, r3
   12bbc:	ldr	r3, [sp, #40]	; 0x28
   12bc0:	eor	r2, r2, #1
   12bc4:	orr	r2, r3, r2
   12bc8:	tst	r2, #255	; 0xff
   12bcc:	bne	134f0 <close@plt+0x262c>
   12bd0:	cmp	r6, #0
   12bd4:	bne	12db0 <close@plt+0x1eec>
   12bd8:	ldr	r3, [sp, #36]	; 0x24
   12bdc:	add	sl, sl, #1
   12be0:	and	r3, r3, r7
   12be4:	uxtb	r6, r3
   12be8:	cmp	r6, #0
   12bec:	beq	12c18 <close@plt+0x1d54>
   12bf0:	cmp	fp, r8
   12bf4:	movhi	r3, #39	; 0x27
   12bf8:	strbhi	r3, [r9, r8]
   12bfc:	add	r3, r8, #1
   12c00:	cmp	fp, r3
   12c04:	movhi	r2, #39	; 0x27
   12c08:	add	r8, r8, #2
   12c0c:	strbhi	r2, [r9, r3]
   12c10:	mov	r3, #0
   12c14:	str	r3, [sp, #36]	; 0x24
   12c18:	ldr	r2, [sp, #32]
   12c1c:	cmp	r8, fp
   12c20:	ldr	r3, [sp, #28]
   12c24:	strbcc	r4, [r9, r8]
   12c28:	cmp	r2, #0
   12c2c:	moveq	r3, #0
   12c30:	str	r3, [sp, #28]
   12c34:	ldr	r3, [sp, #24]
   12c38:	add	r8, r8, #1
   12c3c:	cmn	r3, #1
   12c40:	bne	12718 <close@plt+0x1854>
   12c44:	ldr	r3, [sp, #44]	; 0x2c
   12c48:	ldrb	r3, [r3, sl]
   12c4c:	adds	r7, r3, #0
   12c50:	movne	r7, #1
   12c54:	cmp	r7, #0
   12c58:	bne	12728 <close@plt+0x1864>
   12c5c:	ldr	r3, [sp, #64]	; 0x40
   12c60:	cmp	r8, #0
   12c64:	movne	r3, #0
   12c68:	andeq	r3, r3, #1
   12c6c:	cmp	r3, #0
   12c70:	str	r3, [sp, #64]	; 0x40
   12c74:	bne	13718 <close@plt+0x2854>
   12c78:	ldr	r3, [sp, #40]	; 0x28
   12c7c:	ldr	r2, [sp, #52]	; 0x34
   12c80:	eor	r3, r3, #1
   12c84:	ands	r2, r2, r3
   12c88:	beq	13b44 <close@plt+0x2c80>
   12c8c:	ldr	r3, [sp, #76]	; 0x4c
   12c90:	cmp	r3, #0
   12c94:	beq	13b14 <close@plt+0x2c50>
   12c98:	ldr	r3, [sp, #28]
   12c9c:	cmp	r3, #0
   12ca0:	bne	13ad0 <close@plt+0x2c0c>
   12ca4:	ldr	r2, [sp, #84]	; 0x54
   12ca8:	clz	r3, fp
   12cac:	cmp	r2, #0
   12cb0:	lsr	r3, r3, #5
   12cb4:	moveq	r3, #0
   12cb8:	cmp	r3, #0
   12cbc:	beq	13a70 <close@plt+0x2bac>
   12cc0:	mov	fp, r2
   12cc4:	str	r3, [sp, #76]	; 0x4c
   12cc8:	b	12654 <close@plt+0x1790>
   12ccc:	ldr	r3, [sp, #176]	; 0xb0
   12cd0:	ldr	r6, [sp, #48]	; 0x30
   12cd4:	cmp	r3, #2
   12cd8:	beq	13210 <close@plt+0x234c>
   12cdc:	ldr	r3, [sp, #88]	; 0x58
   12ce0:	cmp	r3, #0
   12ce4:	beq	13794 <close@plt+0x28d0>
   12ce8:	mov	r3, #0
   12cec:	add	sl, sl, #1
   12cf0:	ldr	r6, [sp, #36]	; 0x24
   12cf4:	str	r3, [sp, #32]
   12cf8:	mov	r4, #92	; 0x5c
   12cfc:	b	12be8 <close@plt+0x1d24>
   12d00:	ldr	r3, [sp, #176]	; 0xb0
   12d04:	ldr	r6, [sp, #48]	; 0x30
   12d08:	cmp	r3, #2
   12d0c:	beq	13240 <close@plt+0x237c>
   12d10:	cmp	r3, #5
   12d14:	bne	137a4 <close@plt+0x28e0>
   12d18:	ldr	r3, [sp, #100]	; 0x64
   12d1c:	cmp	r3, #0
   12d20:	beq	13808 <close@plt+0x2944>
   12d24:	ldr	r2, [sp, #24]
   12d28:	add	r3, sl, #2
   12d2c:	cmp	r2, r3
   12d30:	bls	12d40 <close@plt+0x1e7c>
   12d34:	ldrb	r4, [r5, #1]
   12d38:	cmp	r4, #63	; 0x3f
   12d3c:	beq	139b0 <close@plt+0x2aec>
   12d40:	mov	r1, #0
   12d44:	str	r1, [sp, #32]
   12d48:	mov	r4, #63	; 0x3f
   12d4c:	b	12bb4 <close@plt+0x1cf0>
   12d50:	ldr	r3, [sp, #176]	; 0xb0
   12d54:	ldr	r6, [sp, #48]	; 0x30
   12d58:	cmp	r3, #2
   12d5c:	beq	1326c <close@plt+0x23a8>
   12d60:	str	r7, [sp, #32]
   12d64:	str	r7, [sp, #76]	; 0x4c
   12d68:	mov	r1, #0
   12d6c:	mov	r4, #39	; 0x27
   12d70:	b	12bb4 <close@plt+0x1cf0>
   12d74:	ldr	r6, [sp, #48]	; 0x30
   12d78:	ldr	r1, [sp, #52]	; 0x34
   12d7c:	str	r7, [sp, #32]
   12d80:	b	12bb4 <close@plt+0x1cf0>
   12d84:	ldr	r6, [sp, #48]	; 0x30
   12d88:	ldr	r1, [sp, #52]	; 0x34
   12d8c:	mov	r4, #12
   12d90:	mov	r3, #102	; 0x66
   12d94:	ldr	r2, [sp, #56]	; 0x38
   12d98:	cmp	r2, #0
   12d9c:	streq	r2, [sp, #32]
   12da0:	beq	12bb4 <close@plt+0x1cf0>
   12da4:	mov	r4, r3
   12da8:	mov	r3, #0
   12dac:	str	r3, [sp, #32]
   12db0:	ldr	r3, [sp, #40]	; 0x28
   12db4:	cmp	r3, #0
   12db8:	bne	13528 <close@plt+0x2664>
   12dbc:	ldr	r3, [sp, #36]	; 0x24
   12dc0:	eor	r3, r3, #1
   12dc4:	and	r3, r3, r1
   12dc8:	ands	r3, r3, #255	; 0xff
   12dcc:	beq	12e04 <close@plt+0x1f40>
   12dd0:	cmp	fp, r8
   12dd4:	movhi	r2, #39	; 0x27
   12dd8:	strbhi	r2, [r9, r8]
   12ddc:	add	r2, r8, #1
   12de0:	cmp	fp, r2
   12de4:	movhi	r1, #36	; 0x24
   12de8:	strbhi	r1, [r9, r2]
   12dec:	add	r2, r8, #2
   12df0:	cmp	fp, r2
   12df4:	add	r8, r8, #3
   12df8:	movhi	r1, #39	; 0x27
   12dfc:	strbhi	r1, [r9, r2]
   12e00:	str	r3, [sp, #36]	; 0x24
   12e04:	cmp	fp, r8
   12e08:	movhi	r3, #92	; 0x5c
   12e0c:	strbhi	r3, [r9, r8]
   12e10:	add	sl, sl, #1
   12e14:	add	r8, r8, #1
   12e18:	b	12c18 <close@plt+0x1d54>
   12e1c:	ldr	r6, [sp, #48]	; 0x30
   12e20:	mov	r4, #10
   12e24:	mov	r3, #110	; 0x6e
   12e28:	ldr	r2, [sp, #64]	; 0x40
   12e2c:	cmp	r2, #0
   12e30:	bne	138b0 <close@plt+0x29ec>
   12e34:	ldr	r1, [sp, #52]	; 0x34
   12e38:	b	12d94 <close@plt+0x1ed0>
   12e3c:	ldr	r6, [sp, #48]	; 0x30
   12e40:	ldr	r1, [sp, #52]	; 0x34
   12e44:	mov	r3, #116	; 0x74
   12e48:	b	12d94 <close@plt+0x1ed0>
   12e4c:	ldr	r6, [sp, #48]	; 0x30
   12e50:	ldr	r1, [sp, #52]	; 0x34
   12e54:	mov	r4, #11
   12e58:	mov	r3, #118	; 0x76
   12e5c:	b	12d94 <close@plt+0x1ed0>
   12e60:	ldr	r6, [sp, #48]	; 0x30
   12e64:	ldr	r1, [sp, #52]	; 0x34
   12e68:	mov	r4, #8
   12e6c:	mov	r3, #98	; 0x62
   12e70:	b	12d94 <close@plt+0x1ed0>
   12e74:	ldr	r6, [sp, #48]	; 0x30
   12e78:	ldr	r1, [sp, #52]	; 0x34
   12e7c:	mov	r4, #7
   12e80:	mov	r3, #97	; 0x61
   12e84:	b	12d94 <close@plt+0x1ed0>
   12e88:	ldr	r3, [sp, #56]	; 0x38
   12e8c:	ldr	r6, [sp, #48]	; 0x30
   12e90:	cmp	r3, #0
   12e94:	beq	13358 <close@plt+0x2494>
   12e98:	ldr	r3, [sp, #40]	; 0x28
   12e9c:	cmp	r3, #0
   12ea0:	bne	1398c <close@plt+0x2ac8>
   12ea4:	ldr	r3, [sp, #36]	; 0x24
   12ea8:	ldr	r2, [sp, #52]	; 0x34
   12eac:	eor	r3, r3, #1
   12eb0:	ands	r3, r2, r3
   12eb4:	moveq	r2, r8
   12eb8:	beq	12ef0 <close@plt+0x202c>
   12ebc:	cmp	fp, r8
   12ec0:	movhi	r2, #39	; 0x27
   12ec4:	strbhi	r2, [r9, r8]
   12ec8:	add	r2, r8, #1
   12ecc:	cmp	fp, r2
   12ed0:	movhi	r1, #36	; 0x24
   12ed4:	strbhi	r1, [r9, r2]
   12ed8:	add	r2, r8, #2
   12edc:	cmp	fp, r2
   12ee0:	movhi	r1, #39	; 0x27
   12ee4:	strbhi	r1, [r9, r2]
   12ee8:	add	r2, r8, #3
   12eec:	str	r3, [sp, #36]	; 0x24
   12ef0:	cmp	fp, r2
   12ef4:	movhi	r3, #92	; 0x5c
   12ef8:	strbhi	r3, [r9, r2]
   12efc:	ldr	r3, [sp, #92]	; 0x5c
   12f00:	add	r8, r2, #1
   12f04:	cmp	r3, #0
   12f08:	beq	1388c <close@plt+0x29c8>
   12f0c:	ldr	r1, [sp, #24]
   12f10:	add	r3, sl, #1
   12f14:	cmp	r1, r3
   12f18:	bls	12f50 <close@plt+0x208c>
   12f1c:	ldr	r1, [sp, #44]	; 0x2c
   12f20:	ldrb	r3, [r1, r3]
   12f24:	sub	r3, r3, #48	; 0x30
   12f28:	cmp	r3, #9
   12f2c:	bhi	12f50 <close@plt+0x208c>
   12f30:	cmp	fp, r8
   12f34:	movhi	r3, #48	; 0x30
   12f38:	strbhi	r3, [r9, r8]
   12f3c:	add	r3, r2, #2
   12f40:	cmp	fp, r3
   12f44:	add	r8, r2, #3
   12f48:	movhi	r1, #48	; 0x30
   12f4c:	strbhi	r1, [r9, r3]
   12f50:	ldr	r3, [sp, #40]	; 0x28
   12f54:	ldr	r1, [sp, #52]	; 0x34
   12f58:	mov	r7, r3
   12f5c:	str	r3, [sp, #32]
   12f60:	mov	r4, #48	; 0x30
   12f64:	b	12bb4 <close@plt+0x1cf0>
   12f68:	ldr	r6, [sp, #48]	; 0x30
   12f6c:	cmp	sl, #0
   12f70:	streq	r7, [sp, #32]
   12f74:	beq	12f94 <close@plt+0x20d0>
   12f78:	mov	r3, #0
   12f7c:	ldr	r1, [sp, #52]	; 0x34
   12f80:	str	r3, [sp, #32]
   12f84:	b	12bb4 <close@plt+0x1cf0>
   12f88:	ldr	r6, [sp, #48]	; 0x30
   12f8c:	mov	r3, #0
   12f90:	str	r3, [sp, #32]
   12f94:	ldr	r3, [sp, #64]	; 0x40
   12f98:	cmp	r3, #0
   12f9c:	bne	13718 <close@plt+0x2854>
   12fa0:	ldr	r1, [sp, #52]	; 0x34
   12fa4:	b	12bb4 <close@plt+0x1cf0>
   12fa8:	ldr	r3, [sp, #48]	; 0x30
   12fac:	mov	r6, r3
   12fb0:	str	r3, [sp, #32]
   12fb4:	b	12f94 <close@plt+0x20d0>
   12fb8:	ldr	r6, [sp, #48]	; 0x30
   12fbc:	mov	r4, #13
   12fc0:	mov	r3, #114	; 0x72
   12fc4:	b	12e28 <close@plt+0x1f64>
   12fc8:	ldr	r3, [sp, #44]	; 0x2c
   12fcc:	add	r5, r3, sl
   12fd0:	ldrb	r4, [r5]
   12fd4:	cmp	r4, #126	; 0x7e
   12fd8:	ldrls	pc, [pc, r4, lsl #2]
   12fdc:	b	13378 <close@plt+0x24b4>
   12fe0:	andeq	r3, r1, r8, asr #6
   12fe4:	andeq	r3, r1, r8, ror r3
   12fe8:	andeq	r3, r1, r8, ror r3
   12fec:	andeq	r3, r1, r8, ror r3
   12ff0:	andeq	r3, r1, r8, ror r3
   12ff4:	andeq	r3, r1, r8, ror r3
   12ff8:	andeq	r3, r1, r8, ror r3
   12ffc:	andeq	r3, r1, r0, asr #6
   13000:	andeq	r3, r1, r8, lsr r3
   13004:	andeq	r3, r1, ip, lsr #6
   13008:	andeq	r3, r1, r4, lsr #6
   1300c:	andeq	r3, r1, ip, lsl r3
   13010:	andeq	r3, r1, r4, lsl r3
   13014:	andeq	r3, r1, ip, lsl #6
   13018:	andeq	r3, r1, r8, ror r3
   1301c:	andeq	r3, r1, r8, ror r3
   13020:	andeq	r3, r1, r8, ror r3
   13024:	andeq	r3, r1, r8, ror r3
   13028:	andeq	r3, r1, r8, ror r3
   1302c:	andeq	r3, r1, r8, ror r3
   13030:	andeq	r3, r1, r8, ror r3
   13034:	andeq	r3, r1, r8, ror r3
   13038:	andeq	r3, r1, r8, ror r3
   1303c:	andeq	r3, r1, r8, ror r3
   13040:	andeq	r3, r1, r8, ror r3
   13044:	andeq	r3, r1, r8, ror r3
   13048:	andeq	r3, r1, r8, ror r3
   1304c:	andeq	r3, r1, r8, ror r3
   13050:	andeq	r3, r1, r8, ror r3
   13054:	andeq	r3, r1, r8, ror r3
   13058:	andeq	r3, r1, r8, ror r3
   1305c:	andeq	r3, r1, r8, ror r3
   13060:	andeq	r3, r1, r0, lsl #6
   13064:	strdeq	r3, [r1], -r8
   13068:	strdeq	r3, [r1], -r8
   1306c:	strdeq	r3, [r1], -r0
   13070:	strdeq	r3, [r1], -r8
   13074:	andeq	r3, r1, r8, ror #5
   13078:	strdeq	r3, [r1], -r8
   1307c:	andeq	r3, r1, ip, asr r2
   13080:	strdeq	r3, [r1], -r8
   13084:	strdeq	r3, [r1], -r8
   13088:	strdeq	r3, [r1], -r8
   1308c:	andeq	r3, r1, r8, ror #5
   13090:	andeq	r3, r1, r8, ror #5
   13094:	andeq	r3, r1, r8, ror #5
   13098:	andeq	r3, r1, r8, ror #5
   1309c:	andeq	r3, r1, r8, ror #5
   130a0:	andeq	r3, r1, r8, ror #5
   130a4:	andeq	r3, r1, r8, ror #5
   130a8:	andeq	r3, r1, r8, ror #5
   130ac:	andeq	r3, r1, r8, ror #5
   130b0:	andeq	r3, r1, r8, ror #5
   130b4:	andeq	r3, r1, r8, ror #5
   130b8:	andeq	r3, r1, r8, ror #5
   130bc:	andeq	r3, r1, r8, ror #5
   130c0:	andeq	r3, r1, r8, ror #5
   130c4:	andeq	r3, r1, r8, ror #5
   130c8:	andeq	r3, r1, r8, ror #5
   130cc:	strdeq	r3, [r1], -r8
   130d0:	strdeq	r3, [r1], -r8
   130d4:	strdeq	r3, [r1], -r8
   130d8:	strdeq	r3, [r1], -r8
   130dc:	andeq	r3, r1, r0, lsr r2
   130e0:	andeq	r3, r1, r8, ror r3
   130e4:	andeq	r3, r1, r8, ror #5
   130e8:	andeq	r3, r1, r8, ror #5
   130ec:	andeq	r3, r1, r8, ror #5
   130f0:	andeq	r3, r1, r8, ror #5
   130f4:	andeq	r3, r1, r8, ror #5
   130f8:	andeq	r3, r1, r8, ror #5
   130fc:	andeq	r3, r1, r8, ror #5
   13100:	andeq	r3, r1, r8, ror #5
   13104:	andeq	r3, r1, r8, ror #5
   13108:	andeq	r3, r1, r8, ror #5
   1310c:	andeq	r3, r1, r8, ror #5
   13110:	andeq	r3, r1, r8, ror #5
   13114:	andeq	r3, r1, r8, ror #5
   13118:	andeq	r3, r1, r8, ror #5
   1311c:	andeq	r3, r1, r8, ror #5
   13120:	andeq	r3, r1, r8, ror #5
   13124:	andeq	r3, r1, r8, ror #5
   13128:	andeq	r3, r1, r8, ror #5
   1312c:	andeq	r3, r1, r8, ror #5
   13130:	andeq	r3, r1, r8, ror #5
   13134:	andeq	r3, r1, r8, ror #5
   13138:	andeq	r3, r1, r8, ror #5
   1313c:	andeq	r3, r1, r8, ror #5
   13140:	andeq	r3, r1, r8, ror #5
   13144:	andeq	r3, r1, r8, ror #5
   13148:	andeq	r3, r1, r8, ror #5
   1314c:	strdeq	r3, [r1], -r8
   13150:	andeq	r3, r1, r0, lsl #4
   13154:	andeq	r3, r1, r8, ror #5
   13158:	strdeq	r3, [r1], -r8
   1315c:	andeq	r3, r1, r8, ror #5
   13160:	strdeq	r3, [r1], -r8
   13164:	andeq	r3, r1, r8, ror #5
   13168:	andeq	r3, r1, r8, ror #5
   1316c:	andeq	r3, r1, r8, ror #5
   13170:	andeq	r3, r1, r8, ror #5
   13174:	andeq	r3, r1, r8, ror #5
   13178:	andeq	r3, r1, r8, ror #5
   1317c:	andeq	r3, r1, r8, ror #5
   13180:	andeq	r3, r1, r8, ror #5
   13184:	andeq	r3, r1, r8, ror #5
   13188:	andeq	r3, r1, r8, ror #5
   1318c:	andeq	r3, r1, r8, ror #5
   13190:	andeq	r3, r1, r8, ror #5
   13194:	andeq	r3, r1, r8, ror #5
   13198:	andeq	r3, r1, r8, ror #5
   1319c:	andeq	r3, r1, r8, ror #5
   131a0:	andeq	r3, r1, r8, ror #5
   131a4:	andeq	r3, r1, r8, ror #5
   131a8:	andeq	r3, r1, r8, ror #5
   131ac:	andeq	r3, r1, r8, ror #5
   131b0:	andeq	r3, r1, r8, ror #5
   131b4:	andeq	r3, r1, r8, ror #5
   131b8:	andeq	r3, r1, r8, ror #5
   131bc:	andeq	r3, r1, r8, ror #5
   131c0:	andeq	r3, r1, r8, ror #5
   131c4:	andeq	r3, r1, r8, ror #5
   131c8:	andeq	r3, r1, r8, ror #5
   131cc:	ldrdeq	r3, [r1], -ip
   131d0:	strdeq	r3, [r1], -r8
   131d4:	ldrdeq	r3, [r1], -ip
   131d8:	strdeq	r3, [r1], -r0
   131dc:	ldr	r3, [sp, #24]
   131e0:	mov	r6, #0
   131e4:	cmn	r3, #1
   131e8:	bne	12b94 <close@plt+0x1cd0>
   131ec:	ldr	r3, [sp, #44]	; 0x2c
   131f0:	ldrb	r3, [r3, #1]
   131f4:	adds	r3, r3, #0
   131f8:	movne	r3, #1
   131fc:	b	12b9c <close@plt+0x1cd8>
   13200:	ldr	r3, [sp, #176]	; 0xb0
   13204:	mov	r6, #0
   13208:	cmp	r3, #2
   1320c:	bne	12cdc <close@plt+0x1e18>
   13210:	ldr	r3, [sp, #64]	; 0x40
   13214:	cmp	r3, #0
   13218:	bne	13a50 <close@plt+0x2b8c>
   1321c:	add	sl, sl, #1
   13220:	ldr	r6, [sp, #36]	; 0x24
   13224:	str	r3, [sp, #32]
   13228:	mov	r4, #92	; 0x5c
   1322c:	b	12be8 <close@plt+0x1d24>
   13230:	ldr	r3, [sp, #176]	; 0xb0
   13234:	mov	r6, #0
   13238:	cmp	r3, #2
   1323c:	bne	12d10 <close@plt+0x1e4c>
   13240:	ldr	r3, [sp, #40]	; 0x28
   13244:	cmp	r3, #0
   13248:	bne	1352c <close@plt+0x2668>
   1324c:	mov	r1, r7
   13250:	str	r3, [sp, #32]
   13254:	mov	r4, #63	; 0x3f
   13258:	b	12bb4 <close@plt+0x1cf0>
   1325c:	ldr	r3, [sp, #176]	; 0xb0
   13260:	mov	r6, #0
   13264:	cmp	r3, #2
   13268:	bne	12d60 <close@plt+0x1e9c>
   1326c:	ldr	r3, [sp, #64]	; 0x40
   13270:	cmp	r3, #0
   13274:	bne	13a50 <close@plt+0x2b8c>
   13278:	ldr	r2, [sp, #84]	; 0x54
   1327c:	adds	r3, fp, #0
   13280:	movne	r3, #1
   13284:	cmp	r2, #0
   13288:	movne	r3, #0
   1328c:	cmp	r3, #0
   13290:	strne	fp, [sp, #84]	; 0x54
   13294:	movne	fp, #0
   13298:	bne	132c8 <close@plt+0x2404>
   1329c:	cmp	fp, r8
   132a0:	movhi	r3, #39	; 0x27
   132a4:	strbhi	r3, [r9, r8]
   132a8:	add	r3, r8, #1
   132ac:	cmp	fp, r3
   132b0:	movhi	r2, #92	; 0x5c
   132b4:	strbhi	r2, [r9, r3]
   132b8:	add	r3, r8, #2
   132bc:	cmp	fp, r3
   132c0:	movhi	r2, #39	; 0x27
   132c4:	strbhi	r2, [r9, r3]
   132c8:	ldr	r3, [sp, #64]	; 0x40
   132cc:	add	r8, r8, #3
   132d0:	mov	r1, r7
   132d4:	str	r7, [sp, #32]
   132d8:	str	r7, [sp, #76]	; 0x4c
   132dc:	str	r3, [sp, #36]	; 0x24
   132e0:	mov	r4, #39	; 0x27
   132e4:	b	12bb4 <close@plt+0x1cf0>
   132e8:	mov	r6, #0
   132ec:	b	12d78 <close@plt+0x1eb4>
   132f0:	mov	r6, #0
   132f4:	b	12f6c <close@plt+0x20a8>
   132f8:	mov	r6, #0
   132fc:	b	12f8c <close@plt+0x20c8>
   13300:	str	r7, [sp, #32]
   13304:	mov	r6, #0
   13308:	b	12f94 <close@plt+0x20d0>
   1330c:	mov	r6, #0
   13310:	b	12fbc <close@plt+0x20f8>
   13314:	mov	r6, #0
   13318:	b	12d88 <close@plt+0x1ec4>
   1331c:	mov	r6, #0
   13320:	b	12e50 <close@plt+0x1f8c>
   13324:	mov	r6, #0
   13328:	b	12e20 <close@plt+0x1f5c>
   1332c:	mov	r6, #0
   13330:	mov	r3, #116	; 0x74
   13334:	b	12e28 <close@plt+0x1f64>
   13338:	mov	r6, #0
   1333c:	b	12e64 <close@plt+0x1fa0>
   13340:	mov	r6, #0
   13344:	b	12e78 <close@plt+0x1fb4>
   13348:	ldr	r3, [sp, #56]	; 0x38
   1334c:	mov	r6, #0
   13350:	cmp	r3, #0
   13354:	bne	12e98 <close@plt+0x1fd4>
   13358:	ldr	r3, [sp, #96]	; 0x60
   1335c:	cmp	r3, #0
   13360:	addne	sl, sl, #1
   13364:	bne	1270c <close@plt+0x1848>
   13368:	ldr	r1, [sp, #52]	; 0x34
   1336c:	str	r3, [sp, #32]
   13370:	mov	r4, r3
   13374:	b	12bb4 <close@plt+0x1cf0>
   13378:	mov	r6, #0
   1337c:	ldr	r3, [sp, #80]	; 0x50
   13380:	cmp	r3, #1
   13384:	bne	13574 <close@plt+0x26b0>
   13388:	bl	10dd4 <__ctype_b_loc@plt>
   1338c:	ldr	r2, [sp, #80]	; 0x50
   13390:	sxth	r3, r4
   13394:	mov	r1, r2
   13398:	lsl	r3, r3, #1
   1339c:	ldr	r2, [r0]
   133a0:	ldrh	r3, [r2, r3]
   133a4:	and	r3, r3, #16384	; 0x4000
   133a8:	cmp	r3, #0
   133ac:	movne	r3, #1
   133b0:	moveq	r3, #0
   133b4:	str	r3, [sp, #32]
   133b8:	moveq	r3, #1
   133bc:	movne	r3, #0
   133c0:	ldr	r2, [sp, #56]	; 0x38
   133c4:	and	r3, r3, r2
   133c8:	ands	r3, r3, #255	; 0xff
   133cc:	beq	12fa0 <close@plt+0x20dc>
   133d0:	add	r1, sl, r1
   133d4:	mov	r0, #0
   133d8:	ldr	r7, [sp, #40]	; 0x28
   133dc:	ldr	r2, [sp, #36]	; 0x24
   133e0:	ldr	lr, [sp, #52]	; 0x34
   133e4:	b	13494 <close@plt+0x25d0>
   133e8:	cmp	r7, #0
   133ec:	bne	137e8 <close@plt+0x2924>
   133f0:	eor	r0, r2, #1
   133f4:	ands	r0, lr, r0
   133f8:	beq	13430 <close@plt+0x256c>
   133fc:	cmp	fp, r8
   13400:	movhi	r2, #39	; 0x27
   13404:	strbhi	r2, [r9, r8]
   13408:	add	r2, r8, #1
   1340c:	cmp	fp, r2
   13410:	movhi	ip, #36	; 0x24
   13414:	strbhi	ip, [r9, r2]
   13418:	add	r2, r8, #2
   1341c:	cmp	fp, r2
   13420:	movhi	ip, #39	; 0x27
   13424:	strbhi	ip, [r9, r2]
   13428:	add	r8, r8, #3
   1342c:	mov	r2, r0
   13430:	cmp	fp, r8
   13434:	movhi	r0, #92	; 0x5c
   13438:	strbhi	r0, [r9, r8]
   1343c:	add	r0, r8, #1
   13440:	cmp	fp, r0
   13444:	lsrhi	ip, r4, #6
   13448:	addhi	ip, ip, #48	; 0x30
   1344c:	strbhi	ip, [r9, r0]
   13450:	add	ip, r8, #2
   13454:	cmp	fp, ip
   13458:	lsrhi	r0, r4, #3
   1345c:	andhi	r0, r0, #7
   13460:	addhi	r0, r0, #48	; 0x30
   13464:	add	sl, sl, #1
   13468:	strbhi	r0, [r9, ip]
   1346c:	and	r4, r4, #7
   13470:	cmp	sl, r1
   13474:	add	r4, r4, #48	; 0x30
   13478:	add	r8, r8, #3
   1347c:	bcs	13800 <close@plt+0x293c>
   13480:	mov	r0, r3
   13484:	cmp	fp, r8
   13488:	strbhi	r4, [r9, r8]
   1348c:	ldrb	r4, [r5, #1]!
   13490:	add	r8, r8, #1
   13494:	cmp	r3, #0
   13498:	bne	133e8 <close@plt+0x2524>
   1349c:	cmp	r6, #0
   134a0:	bne	13544 <close@plt+0x2680>
   134a4:	eor	r6, r0, #1
   134a8:	and	r6, r6, r2
   134ac:	add	sl, sl, #1
   134b0:	cmp	r1, sl
   134b4:	uxtb	r6, r6
   134b8:	bls	1356c <close@plt+0x26a8>
   134bc:	cmp	r6, #0
   134c0:	beq	13484 <close@plt+0x25c0>
   134c4:	cmp	fp, r8
   134c8:	movhi	r2, #39	; 0x27
   134cc:	strbhi	r2, [r9, r8]
   134d0:	add	r2, r8, #1
   134d4:	cmp	fp, r2
   134d8:	movhi	ip, #39	; 0x27
   134dc:	strbhi	ip, [r9, r2]
   134e0:	add	r8, r8, #2
   134e4:	mov	r6, r3
   134e8:	mov	r2, r3
   134ec:	b	13484 <close@plt+0x25c0>
   134f0:	ldr	r3, [sp, #184]	; 0xb8
   134f4:	cmp	r3, #0
   134f8:	beq	12bd0 <close@plt+0x1d0c>
   134fc:	lsr	r2, r4, #5
   13500:	mov	r0, r3
   13504:	uxtb	r2, r2
   13508:	and	r3, r4, #31
   1350c:	ldr	r2, [r0, r2, lsl #2]
   13510:	lsr	r3, r2, r3
   13514:	tst	r3, #1
   13518:	beq	12bd0 <close@plt+0x1d0c>
   1351c:	ldr	r3, [sp, #40]	; 0x28
   13520:	cmp	r3, #0
   13524:	beq	12dbc <close@plt+0x1ef8>
   13528:	mov	r3, r1
   1352c:	str	r3, [sp, #64]	; 0x40
   13530:	mov	sl, r9
   13534:	ldr	r3, [sp, #56]	; 0x38
   13538:	mov	r9, fp
   1353c:	ldr	r2, [sp, #64]	; 0x40
   13540:	b	13730 <close@plt+0x286c>
   13544:	cmp	fp, r8
   13548:	eor	r6, r0, #1
   1354c:	movhi	ip, #92	; 0x5c
   13550:	and	r6, r6, r2
   13554:	add	sl, sl, #1
   13558:	strbhi	ip, [r9, r8]
   1355c:	cmp	r1, sl
   13560:	add	r8, r8, #1
   13564:	uxtb	r6, r6
   13568:	bhi	134bc <close@plt+0x25f8>
   1356c:	str	r2, [sp, #36]	; 0x24
   13570:	b	12be8 <close@plt+0x1d24>
   13574:	ldr	r3, [sp, #24]
   13578:	cmn	r3, #1
   1357c:	mov	r3, #0
   13580:	str	r3, [sp, #128]	; 0x80
   13584:	str	r3, [sp, #132]	; 0x84
   13588:	beq	1387c <close@plt+0x29b8>
   1358c:	mov	r2, r7
   13590:	mov	r3, #0
   13594:	str	r7, [sp, #104]	; 0x68
   13598:	str	r5, [sp, #116]	; 0x74
   1359c:	mov	r7, r3
   135a0:	mov	r5, r2
   135a4:	str	r4, [sp, #32]
   135a8:	str	r6, [sp, #108]	; 0x6c
   135ac:	str	r8, [sp, #112]	; 0x70
   135b0:	ldr	r3, [sp, #44]	; 0x2c
   135b4:	add	r6, sl, r7
   135b8:	add	r4, r3, r6
   135bc:	ldr	r3, [sp, #24]
   135c0:	mov	r1, r4
   135c4:	sub	r2, r3, r6
   135c8:	add	r0, sp, #124	; 0x7c
   135cc:	add	r3, sp, #128	; 0x80
   135d0:	bl	17b44 <close@plt+0x6c80>
   135d4:	subs	r8, r0, #0
   135d8:	beq	13960 <close@plt+0x2a9c>
   135dc:	cmn	r8, #1
   135e0:	beq	13938 <close@plt+0x2a74>
   135e4:	cmn	r8, #2
   135e8:	beq	138d0 <close@plt+0x2a0c>
   135ec:	ldr	r3, [sp, #64]	; 0x40
   135f0:	cmp	r3, #0
   135f4:	beq	136b4 <close@plt+0x27f0>
   135f8:	cmp	r8, #1
   135fc:	beq	136b4 <close@plt+0x27f0>
   13600:	sub	r3, r8, #1
   13604:	add	r6, r3, r6
   13608:	ldr	r3, [sp, #44]	; 0x2c
   1360c:	add	r6, r3, r6
   13610:	ldrb	r3, [r4, #1]!
   13614:	sub	r3, r3, #91	; 0x5b
   13618:	cmp	r3, #33	; 0x21
   1361c:	ldrls	pc, [pc, r3, lsl #2]
   13620:	b	136ac <close@plt+0x27e8>
   13624:	andeq	r3, r1, r8, lsl r7
   13628:	andeq	r3, r1, r8, lsl r7
   1362c:	andeq	r3, r1, ip, lsr #13
   13630:	andeq	r3, r1, r8, lsl r7
   13634:	andeq	r3, r1, ip, lsr #13
   13638:	andeq	r3, r1, r8, lsl r7
   1363c:	andeq	r3, r1, ip, lsr #13
   13640:	andeq	r3, r1, ip, lsr #13
   13644:	andeq	r3, r1, ip, lsr #13
   13648:	andeq	r3, r1, ip, lsr #13
   1364c:	andeq	r3, r1, ip, lsr #13
   13650:	andeq	r3, r1, ip, lsr #13
   13654:	andeq	r3, r1, ip, lsr #13
   13658:	andeq	r3, r1, ip, lsr #13
   1365c:	andeq	r3, r1, ip, lsr #13
   13660:	andeq	r3, r1, ip, lsr #13
   13664:	andeq	r3, r1, ip, lsr #13
   13668:	andeq	r3, r1, ip, lsr #13
   1366c:	andeq	r3, r1, ip, lsr #13
   13670:	andeq	r3, r1, ip, lsr #13
   13674:	andeq	r3, r1, ip, lsr #13
   13678:	andeq	r3, r1, ip, lsr #13
   1367c:	andeq	r3, r1, ip, lsr #13
   13680:	andeq	r3, r1, ip, lsr #13
   13684:	andeq	r3, r1, ip, lsr #13
   13688:	andeq	r3, r1, ip, lsr #13
   1368c:	andeq	r3, r1, ip, lsr #13
   13690:	andeq	r3, r1, ip, lsr #13
   13694:	andeq	r3, r1, ip, lsr #13
   13698:	andeq	r3, r1, ip, lsr #13
   1369c:	andeq	r3, r1, ip, lsr #13
   136a0:	andeq	r3, r1, ip, lsr #13
   136a4:	andeq	r3, r1, ip, lsr #13
   136a8:	andeq	r3, r1, r8, lsl r7
   136ac:	cmp	r6, r4
   136b0:	bne	13610 <close@plt+0x274c>
   136b4:	ldr	r0, [sp, #124]	; 0x7c
   136b8:	bl	10d38 <iswprint@plt>
   136bc:	add	r7, r7, r8
   136c0:	cmp	r0, #0
   136c4:	add	r0, sp, #128	; 0x80
   136c8:	moveq	r5, #0
   136cc:	bl	10ce4 <mbsinit@plt>
   136d0:	cmp	r0, #0
   136d4:	beq	135b0 <close@plt+0x26ec>
   136d8:	ldr	r4, [sp, #32]
   136dc:	str	r5, [sp, #32]
   136e0:	ldr	r3, [sp, #32]
   136e4:	mov	r1, r7
   136e8:	eor	r3, r3, #1
   136ec:	ldr	r7, [sp, #104]	; 0x68
   136f0:	ldr	r6, [sp, #108]	; 0x6c
   136f4:	ldr	r8, [sp, #112]	; 0x70
   136f8:	ldr	r5, [sp, #116]	; 0x74
   136fc:	uxtb	r3, r3
   13700:	cmp	r1, #1
   13704:	bls	133c0 <close@plt+0x24fc>
   13708:	ldr	r2, [sp, #56]	; 0x38
   1370c:	and	r3, r3, r2
   13710:	uxtb	r3, r3
   13714:	b	133d0 <close@plt+0x250c>
   13718:	mov	r3, #2
   1371c:	str	r3, [sp, #176]	; 0xb0
   13720:	ldr	r2, [sp, #64]	; 0x40
   13724:	ldr	r3, [sp, #56]	; 0x38
   13728:	mov	sl, r9
   1372c:	mov	r9, fp
   13730:	and	r3, r3, r2
   13734:	tst	r3, #255	; 0xff
   13738:	ldr	r3, [sp, #176]	; 0xb0
   1373c:	movne	r3, #4
   13740:	str	r3, [sp, #176]	; 0xb0
   13744:	ldr	r3, [sp, #180]	; 0xb4
   13748:	mov	ip, #0
   1374c:	bic	r3, r3, #2
   13750:	str	r3, [sp, #4]
   13754:	ldr	r3, [sp, #192]	; 0xc0
   13758:	ldr	r2, [sp, #44]	; 0x2c
   1375c:	str	r3, [sp, #16]
   13760:	ldr	r3, [sp, #188]	; 0xbc
   13764:	mov	r1, r9
   13768:	str	r3, [sp, #12]
   1376c:	ldr	r3, [sp, #176]	; 0xb0
   13770:	mov	r0, sl
   13774:	str	r3, [sp]
   13778:	str	ip, [sp, #8]
   1377c:	ldr	r3, [sp, #24]
   13780:	bl	125e0 <close@plt+0x171c>
   13784:	mov	fp, r0
   13788:	mov	r0, fp
   1378c:	add	sp, sp, #140	; 0x8c
   13790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13794:	mov	r4, #92	; 0x5c
   13798:	mov	r1, #0
   1379c:	mov	r3, r4
   137a0:	b	12d94 <close@plt+0x1ed0>
   137a4:	mov	r3, #0
   137a8:	ldr	r1, [sp, #52]	; 0x34
   137ac:	str	r3, [sp, #32]
   137b0:	mov	r4, #63	; 0x3f
   137b4:	b	12bb4 <close@plt+0x1cf0>
   137b8:	cmp	fp, #0
   137bc:	beq	13818 <close@plt+0x2954>
   137c0:	mov	r3, #39	; 0x27
   137c4:	strb	r3, [r9]
   137c8:	mov	r3, #0
   137cc:	str	r3, [sp, #40]	; 0x28
   137d0:	mov	r3, #1
   137d4:	str	r3, [sp, #68]	; 0x44
   137d8:	ldr	r3, [pc, #448]	; 139a0 <close@plt+0x2adc>
   137dc:	mov	r8, #1
   137e0:	str	r3, [sp, #72]	; 0x48
   137e4:	b	129c8 <close@plt+0x1b04>
   137e8:	ldr	r3, [sp, #40]	; 0x28
   137ec:	mov	sl, r9
   137f0:	str	r3, [sp, #56]	; 0x38
   137f4:	mov	r9, fp
   137f8:	ldr	r2, [sp, #64]	; 0x40
   137fc:	b	13730 <close@plt+0x286c>
   13800:	str	r2, [sp, #36]	; 0x24
   13804:	b	12c18 <close@plt+0x1d54>
   13808:	mov	r1, #0
   1380c:	str	r3, [sp, #32]
   13810:	mov	r4, #63	; 0x3f
   13814:	b	12bb4 <close@plt+0x1cf0>
   13818:	ldr	r3, [pc, #384]	; 139a0 <close@plt+0x2adc>
   1381c:	str	r3, [sp, #72]	; 0x48
   13820:	mov	r3, #0
   13824:	str	r3, [sp, #40]	; 0x28
   13828:	mov	r3, #1
   1382c:	str	r3, [sp, #68]	; 0x44
   13830:	mov	r8, r3
   13834:	b	129c8 <close@plt+0x1b04>
   13838:	bl	10eb8 <abort@plt>
   1383c:	cmp	fp, #0
   13840:	beq	138a0 <close@plt+0x29dc>
   13844:	mov	r2, #1
   13848:	mov	r3, #34	; 0x22
   1384c:	strb	r3, [r9]
   13850:	mov	r8, r2
   13854:	mov	r3, r2
   13858:	str	r2, [sp, #68]	; 0x44
   1385c:	str	r3, [sp, #56]	; 0x38
   13860:	ldr	r3, [pc, #316]	; 139a4 <close@plt+0x2ae0>
   13864:	ldr	r1, [sp, #56]	; 0x38
   13868:	str	r3, [sp, #72]	; 0x48
   1386c:	ldr	r2, [sp, #176]	; 0xb0
   13870:	ldr	ip, [sp, #40]	; 0x28
   13874:	ldr	lr, [sp, #176]	; 0xb0
   13878:	b	126ac <close@plt+0x17e8>
   1387c:	ldr	r0, [sp, #44]	; 0x2c
   13880:	bl	10dec <strlen@plt>
   13884:	str	r0, [sp, #24]
   13888:	b	1358c <close@plt+0x26c8>
   1388c:	mov	r7, #0
   13890:	ldr	r1, [sp, #52]	; 0x34
   13894:	str	r3, [sp, #32]
   13898:	mov	r4, #48	; 0x30
   1389c:	b	12bb4 <close@plt+0x1cf0>
   138a0:	mov	r3, #1
   138a4:	str	r3, [sp, #68]	; 0x44
   138a8:	mov	r8, r3
   138ac:	b	1385c <close@plt+0x2998>
   138b0:	mov	r3, #2
   138b4:	mov	sl, r9
   138b8:	str	r3, [sp, #176]	; 0xb0
   138bc:	mov	r9, fp
   138c0:	ldr	r3, [sp, #56]	; 0x38
   138c4:	b	13730 <close@plt+0x286c>
   138c8:	ldr	r6, [sp, #48]	; 0x30
   138cc:	b	1337c <close@plt+0x24b8>
   138d0:	ldr	r0, [sp, #24]
   138d4:	mov	ip, r6
   138d8:	cmp	r0, ip
   138dc:	mov	r1, r7
   138e0:	mov	r2, r4
   138e4:	ldr	r7, [sp, #104]	; 0x68
   138e8:	ldr	r4, [sp, #32]
   138ec:	ldr	r6, [sp, #108]	; 0x6c
   138f0:	ldr	r8, [sp, #112]	; 0x70
   138f4:	ldr	r5, [sp, #116]	; 0x74
   138f8:	bls	13928 <close@plt+0x2a64>
   138fc:	ldrb	r3, [r2]
   13900:	cmp	r3, #0
   13904:	bne	13918 <close@plt+0x2a54>
   13908:	b	13a38 <close@plt+0x2b74>
   1390c:	ldrb	r3, [r2, #1]!
   13910:	cmp	r3, #0
   13914:	beq	13a38 <close@plt+0x2b74>
   13918:	add	r1, r1, #1
   1391c:	add	r3, sl, r1
   13920:	cmp	r0, r3
   13924:	bhi	1390c <close@plt+0x2a48>
   13928:	mov	r2, #0
   1392c:	mov	r3, r7
   13930:	str	r2, [sp, #32]
   13934:	b	13700 <close@plt+0x283c>
   13938:	mov	r1, r7
   1393c:	ldr	r7, [sp, #104]	; 0x68
   13940:	mov	r2, #0
   13944:	ldr	r4, [sp, #32]
   13948:	ldr	r6, [sp, #108]	; 0x6c
   1394c:	ldr	r8, [sp, #112]	; 0x70
   13950:	ldr	r5, [sp, #116]	; 0x74
   13954:	mov	r3, r7
   13958:	str	r2, [sp, #32]
   1395c:	b	13700 <close@plt+0x283c>
   13960:	mov	r3, r5
   13964:	eor	r3, r3, #1
   13968:	ldr	r4, [sp, #32]
   1396c:	mov	r1, r7
   13970:	str	r5, [sp, #32]
   13974:	ldr	r7, [sp, #104]	; 0x68
   13978:	ldr	r6, [sp, #108]	; 0x6c
   1397c:	ldr	r8, [sp, #112]	; 0x70
   13980:	ldr	r5, [sp, #116]	; 0x74
   13984:	uxtb	r3, r3
   13988:	b	13700 <close@plt+0x283c>
   1398c:	mov	sl, r9
   13990:	str	r3, [sp, #56]	; 0x38
   13994:	mov	r9, fp
   13998:	ldr	r2, [sp, #64]	; 0x40
   1399c:	b	13730 <close@plt+0x286c>
   139a0:	andeq	r8, r1, r4, ror #26
   139a4:	andeq	r8, r1, r0, ror #26
   139a8:	andeq	r8, r1, r8, ror #26
   139ac:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   139b0:	ldr	r2, [sp, #44]	; 0x2c
   139b4:	ldrb	r1, [r2, r3]
   139b8:	sub	r2, r1, #33	; 0x21
   139bc:	uxtb	r2, r2
   139c0:	cmp	r2, #29
   139c4:	bhi	13a44 <close@plt+0x2b80>
   139c8:	ldr	r0, [pc, #-36]	; 139ac <close@plt+0x2ae8>
   139cc:	mov	ip, #1
   139d0:	ands	r2, r0, ip, lsl r2
   139d4:	beq	13a64 <close@plt+0x2ba0>
   139d8:	ldr	r2, [sp, #40]	; 0x28
   139dc:	cmp	r2, #0
   139e0:	bne	13b58 <close@plt+0x2c94>
   139e4:	add	r2, r8, #1
   139e8:	cmp	fp, r8
   139ec:	strbhi	r4, [r9, r8]
   139f0:	cmp	fp, r2
   139f4:	movhi	r0, #34	; 0x22
   139f8:	strbhi	r0, [r9, r2]
   139fc:	add	r2, r8, #2
   13a00:	cmp	fp, r2
   13a04:	movhi	r0, #34	; 0x22
   13a08:	strbhi	r0, [r9, r2]
   13a0c:	add	r2, r8, #3
   13a10:	cmp	fp, r2
   13a14:	mov	sl, r3
   13a18:	ldr	r3, [sp, #40]	; 0x28
   13a1c:	movhi	r0, #63	; 0x3f
   13a20:	mov	r4, r1
   13a24:	strbhi	r0, [r9, r2]
   13a28:	add	r8, r8, #4
   13a2c:	mov	r1, r3
   13a30:	str	r3, [sp, #32]
   13a34:	b	12bb4 <close@plt+0x1cf0>
   13a38:	str	r3, [sp, #32]
   13a3c:	mov	r3, r7
   13a40:	b	13700 <close@plt+0x283c>
   13a44:	mov	r1, #0
   13a48:	str	r1, [sp, #32]
   13a4c:	b	12bb4 <close@plt+0x1cf0>
   13a50:	mov	sl, r9
   13a54:	ldr	r3, [sp, #56]	; 0x38
   13a58:	mov	r9, fp
   13a5c:	ldr	r2, [sp, #64]	; 0x40
   13a60:	b	13730 <close@plt+0x286c>
   13a64:	str	r2, [sp, #32]
   13a68:	mov	r1, #0
   13a6c:	b	12bb4 <close@plt+0x1cf0>
   13a70:	ldr	r2, [sp, #76]	; 0x4c
   13a74:	mov	sl, r9
   13a78:	mov	r9, fp
   13a7c:	mov	fp, r8
   13a80:	ldr	r1, [sp, #72]	; 0x48
   13a84:	cmp	r1, #0
   13a88:	moveq	r3, #0
   13a8c:	andne	r3, r2, #1
   13a90:	cmp	r3, #0
   13a94:	beq	13ac0 <close@plt+0x2bfc>
   13a98:	ldrb	r3, [r1]
   13a9c:	cmp	r3, #0
   13aa0:	beq	13ac0 <close@plt+0x2bfc>
   13aa4:	mov	r2, r1
   13aa8:	cmp	r9, fp
   13aac:	strbhi	r3, [sl, fp]
   13ab0:	ldrb	r3, [r2, #1]!
   13ab4:	add	fp, fp, #1
   13ab8:	cmp	r3, #0
   13abc:	bne	13aa8 <close@plt+0x2be4>
   13ac0:	cmp	r9, fp
   13ac4:	movhi	r3, #0
   13ac8:	strbhi	r3, [sl, fp]
   13acc:	b	13788 <close@plt+0x28c4>
   13ad0:	ldr	r3, [sp, #192]	; 0xc0
   13ad4:	mov	ip, #5
   13ad8:	str	r3, [sp, #16]
   13adc:	ldr	r3, [sp, #188]	; 0xbc
   13ae0:	ldr	r2, [sp, #44]	; 0x2c
   13ae4:	str	r3, [sp, #12]
   13ae8:	ldr	r3, [sp, #184]	; 0xb8
   13aec:	ldr	r1, [sp, #84]	; 0x54
   13af0:	str	r3, [sp, #8]
   13af4:	ldr	r3, [sp, #180]	; 0xb4
   13af8:	mov	r0, r9
   13afc:	str	r3, [sp, #4]
   13b00:	str	ip, [sp]
   13b04:	ldr	r3, [sp, #24]
   13b08:	bl	125e0 <close@plt+0x171c>
   13b0c:	mov	fp, r0
   13b10:	b	13788 <close@plt+0x28c4>
   13b14:	mov	sl, r9
   13b18:	mov	r9, fp
   13b1c:	mov	fp, r8
   13b20:	b	13a80 <close@plt+0x2bbc>
   13b24:	ldr	r1, [sp, #176]	; 0xb0
   13b28:	bl	124c0 <close@plt+0x15fc>
   13b2c:	str	r0, [sp, #192]	; 0xc0
   13b30:	b	12a9c <close@plt+0x1bd8>
   13b34:	ldr	r1, [sp, #176]	; 0xb0
   13b38:	bl	124c0 <close@plt+0x15fc>
   13b3c:	str	r0, [sp, #188]	; 0xbc
   13b40:	b	12a7c <close@plt+0x1bb8>
   13b44:	mov	sl, r9
   13b48:	mov	r2, r3
   13b4c:	mov	r9, fp
   13b50:	mov	fp, r8
   13b54:	b	13a80 <close@plt+0x2bbc>
   13b58:	mov	sl, r9
   13b5c:	mov	r9, fp
   13b60:	b	13744 <close@plt+0x2880>
   13b64:	push	{r4, r5, r6, lr}
   13b68:	mov	r5, r0
   13b6c:	bl	10df8 <__errno_location@plt>
   13b70:	cmp	r5, #0
   13b74:	mov	r1, #48	; 0x30
   13b78:	mov	r4, r0
   13b7c:	ldr	r0, [pc, #16]	; 13b94 <close@plt+0x2cd0>
   13b80:	ldr	r6, [r4]
   13b84:	movne	r0, r5
   13b88:	bl	174a4 <close@plt+0x65e0>
   13b8c:	str	r6, [r4]
   13b90:	pop	{r4, r5, r6, pc}
   13b94:	andeq	sl, r2, r4, lsl #3
   13b98:	ldr	r3, [pc, #12]	; 13bac <close@plt+0x2ce8>
   13b9c:	cmp	r0, #0
   13ba0:	moveq	r0, r3
   13ba4:	ldr	r0, [r0]
   13ba8:	bx	lr
   13bac:	andeq	sl, r2, r4, lsl #3
   13bb0:	ldr	r3, [pc, #12]	; 13bc4 <close@plt+0x2d00>
   13bb4:	cmp	r0, #0
   13bb8:	moveq	r0, r3
   13bbc:	str	r1, [r0]
   13bc0:	bx	lr
   13bc4:	andeq	sl, r2, r4, lsl #3
   13bc8:	ldr	r3, [pc, #52]	; 13c04 <close@plt+0x2d40>
   13bcc:	cmp	r0, #0
   13bd0:	moveq	r0, r3
   13bd4:	add	r3, r0, #8
   13bd8:	push	{lr}		; (str lr, [sp, #-4]!)
   13bdc:	lsr	lr, r1, #5
   13be0:	and	r1, r1, #31
   13be4:	ldr	ip, [r3, lr, lsl #2]
   13be8:	lsr	r0, ip, r1
   13bec:	eor	r2, r2, r0
   13bf0:	and	r2, r2, #1
   13bf4:	and	r0, r0, #1
   13bf8:	eor	r1, ip, r2, lsl r1
   13bfc:	str	r1, [r3, lr, lsl #2]
   13c00:	pop	{pc}		; (ldr pc, [sp], #4)
   13c04:	andeq	sl, r2, r4, lsl #3
   13c08:	ldr	r3, [pc, #16]	; 13c20 <close@plt+0x2d5c>
   13c0c:	cmp	r0, #0
   13c10:	movne	r3, r0
   13c14:	ldr	r0, [r3, #4]
   13c18:	str	r1, [r3, #4]
   13c1c:	bx	lr
   13c20:	andeq	sl, r2, r4, lsl #3
   13c24:	ldr	r3, [pc, #44]	; 13c58 <close@plt+0x2d94>
   13c28:	cmp	r0, #0
   13c2c:	moveq	r0, r3
   13c30:	mov	ip, #10
   13c34:	cmp	r2, #0
   13c38:	cmpne	r1, #0
   13c3c:	str	ip, [r0]
   13c40:	beq	13c50 <close@plt+0x2d8c>
   13c44:	str	r1, [r0, #40]	; 0x28
   13c48:	str	r2, [r0, #44]	; 0x2c
   13c4c:	bx	lr
   13c50:	push	{r4, lr}
   13c54:	bl	10eb8 <abort@plt>
   13c58:	andeq	sl, r2, r4, lsl #3
   13c5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c60:	sub	sp, sp, #24
   13c64:	ldr	ip, [pc, #108]	; 13cd8 <close@plt+0x2e14>
   13c68:	ldr	r4, [sp, #56]	; 0x38
   13c6c:	mov	r9, r2
   13c70:	cmp	r4, #0
   13c74:	moveq	r4, ip
   13c78:	mov	sl, r3
   13c7c:	mov	r7, r0
   13c80:	mov	r8, r1
   13c84:	bl	10df8 <__errno_location@plt>
   13c88:	ldr	r3, [r4, #44]	; 0x2c
   13c8c:	mov	r1, r8
   13c90:	ldr	r6, [r0]
   13c94:	str	r3, [sp, #16]
   13c98:	ldr	r2, [r4, #40]	; 0x28
   13c9c:	add	r3, r4, #8
   13ca0:	str	r3, [sp, #8]
   13ca4:	str	r2, [sp, #12]
   13ca8:	ldr	r2, [r4, #4]
   13cac:	mov	r5, r0
   13cb0:	str	r2, [sp, #4]
   13cb4:	ldr	ip, [r4]
   13cb8:	mov	r3, sl
   13cbc:	mov	r2, r9
   13cc0:	mov	r0, r7
   13cc4:	str	ip, [sp]
   13cc8:	bl	125e0 <close@plt+0x171c>
   13ccc:	str	r6, [r5]
   13cd0:	add	sp, sp, #24
   13cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13cd8:	andeq	sl, r2, r4, lsl #3
   13cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce0:	cmp	r2, #0
   13ce4:	sub	sp, sp, #36	; 0x24
   13ce8:	ldr	r4, [pc, #164]	; 13d94 <close@plt+0x2ed0>
   13cec:	mov	r8, r1
   13cf0:	movne	r4, r2
   13cf4:	mov	r7, r0
   13cf8:	bl	10df8 <__errno_location@plt>
   13cfc:	ldr	r3, [r4, #44]	; 0x2c
   13d00:	ldr	r5, [r4, #4]
   13d04:	add	r9, r4, #8
   13d08:	orr	r5, r5, #1
   13d0c:	mov	r1, #0
   13d10:	mov	r2, r7
   13d14:	ldr	fp, [r0]
   13d18:	str	r3, [sp, #16]
   13d1c:	ldr	r3, [r4, #40]	; 0x28
   13d20:	stmib	sp, {r5, r9}
   13d24:	str	r3, [sp, #12]
   13d28:	ldr	r3, [r4]
   13d2c:	mov	r6, r0
   13d30:	str	r3, [sp]
   13d34:	mov	r0, r1
   13d38:	mov	r3, r8
   13d3c:	bl	125e0 <close@plt+0x171c>
   13d40:	add	r1, r0, #1
   13d44:	mov	r0, r1
   13d48:	str	r1, [sp, #28]
   13d4c:	bl	16f60 <close@plt+0x609c>
   13d50:	ldr	r3, [r4, #44]	; 0x2c
   13d54:	ldr	r1, [sp, #28]
   13d58:	str	r3, [sp, #16]
   13d5c:	ldr	r3, [r4, #40]	; 0x28
   13d60:	str	r5, [sp, #4]
   13d64:	str	r3, [sp, #12]
   13d68:	str	r9, [sp, #8]
   13d6c:	ldr	ip, [r4]
   13d70:	mov	r3, r8
   13d74:	mov	r2, r7
   13d78:	str	ip, [sp]
   13d7c:	mov	sl, r0
   13d80:	bl	125e0 <close@plt+0x171c>
   13d84:	mov	r0, sl
   13d88:	str	fp, [r6]
   13d8c:	add	sp, sp, #36	; 0x24
   13d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d94:	andeq	sl, r2, r4, lsl #3
   13d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d9c:	cmp	r3, #0
   13da0:	sub	sp, sp, #44	; 0x2c
   13da4:	ldr	r4, [pc, #192]	; 13e6c <close@plt+0x2fa8>
   13da8:	mov	r6, r2
   13dac:	movne	r4, r3
   13db0:	mov	r9, r1
   13db4:	mov	r8, r0
   13db8:	bl	10df8 <__errno_location@plt>
   13dbc:	ldr	r3, [r4, #44]	; 0x2c
   13dc0:	ldr	r5, [r4, #4]
   13dc4:	add	sl, r4, #8
   13dc8:	cmp	r6, #0
   13dcc:	orreq	r5, r5, #1
   13dd0:	mov	r1, #0
   13dd4:	ldr	r2, [r0]
   13dd8:	str	r3, [sp, #16]
   13ddc:	ldr	r3, [r4, #40]	; 0x28
   13de0:	stmib	sp, {r5, sl}
   13de4:	str	r3, [sp, #12]
   13de8:	ldr	r3, [r4]
   13dec:	mov	r7, r0
   13df0:	str	r2, [sp, #28]
   13df4:	str	r3, [sp]
   13df8:	mov	r2, r8
   13dfc:	mov	r3, r9
   13e00:	mov	r0, r1
   13e04:	bl	125e0 <close@plt+0x171c>
   13e08:	add	r1, r0, #1
   13e0c:	mov	fp, r0
   13e10:	mov	r0, r1
   13e14:	str	r1, [sp, #36]	; 0x24
   13e18:	bl	16f60 <close@plt+0x609c>
   13e1c:	ldr	r3, [r4, #44]	; 0x2c
   13e20:	mov	r2, r8
   13e24:	str	r3, [sp, #16]
   13e28:	ldr	r3, [r4, #40]	; 0x28
   13e2c:	str	r5, [sp, #4]
   13e30:	str	r3, [sp, #12]
   13e34:	str	sl, [sp, #8]
   13e38:	ldr	ip, [r4]
   13e3c:	ldr	r1, [sp, #36]	; 0x24
   13e40:	mov	r3, r9
   13e44:	str	ip, [sp]
   13e48:	str	r0, [sp, #32]
   13e4c:	bl	125e0 <close@plt+0x171c>
   13e50:	ldr	r2, [sp, #28]
   13e54:	cmp	r6, #0
   13e58:	str	r2, [r7]
   13e5c:	ldr	r0, [sp, #32]
   13e60:	strne	fp, [r6]
   13e64:	add	sp, sp, #44	; 0x2c
   13e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e6c:	andeq	sl, r2, r4, lsl #3
   13e70:	push	{r4, r5, r6, r7, r8, lr}
   13e74:	ldr	r6, [pc, #116]	; 13ef0 <close@plt+0x302c>
   13e78:	ldr	r3, [r6, #4]
   13e7c:	ldr	r7, [r6]
   13e80:	cmp	r3, #1
   13e84:	movgt	r5, r7
   13e88:	movgt	r4, #1
   13e8c:	ble	13eac <close@plt+0x2fe8>
   13e90:	ldr	r0, [r5, #12]
   13e94:	bl	17ab8 <close@plt+0x6bf4>
   13e98:	ldr	r3, [r6, #4]
   13e9c:	add	r4, r4, #1
   13ea0:	cmp	r3, r4
   13ea4:	add	r5, r5, #8
   13ea8:	bgt	13e90 <close@plt+0x2fcc>
   13eac:	ldr	r0, [r7, #4]
   13eb0:	ldr	r4, [pc, #60]	; 13ef4 <close@plt+0x3030>
   13eb4:	cmp	r0, r4
   13eb8:	beq	13ecc <close@plt+0x3008>
   13ebc:	bl	17ab8 <close@plt+0x6bf4>
   13ec0:	mov	r3, #256	; 0x100
   13ec4:	str	r4, [r6, #12]
   13ec8:	str	r3, [r6, #8]
   13ecc:	ldr	r4, [pc, #36]	; 13ef8 <close@plt+0x3034>
   13ed0:	cmp	r7, r4
   13ed4:	beq	13ee4 <close@plt+0x3020>
   13ed8:	mov	r0, r7
   13edc:	bl	17ab8 <close@plt+0x6bf4>
   13ee0:	str	r4, [r6]
   13ee4:	mov	r3, #1
   13ee8:	str	r3, [r6, #4]
   13eec:	pop	{r4, r5, r6, r7, r8, pc}
   13ef0:	strdeq	sl, [r2], -r4
   13ef4:			; <UNDEFINED> instruction: 0x0002a1b4
   13ef8:	strdeq	sl, [r2], -ip
   13efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f00:	sub	sp, sp, #44	; 0x2c
   13f04:	mov	r5, r0
   13f08:	mov	sl, r1
   13f0c:	bl	10df8 <__errno_location@plt>
   13f10:	ldr	r4, [pc, #400]	; 140a8 <close@plt+0x31e4>
   13f14:	cmn	r5, #-2147483647	; 0x80000001
   13f18:	ldr	r6, [r4]
   13f1c:	mov	r8, r0
   13f20:	movne	r0, #0
   13f24:	moveq	r0, #1
   13f28:	ldr	r3, [r8]
   13f2c:	orrs	r0, r0, r5, lsr #31
   13f30:	str	r3, [sp, #24]
   13f34:	bne	140a4 <close@plt+0x31e0>
   13f38:	ldr	r2, [r4, #4]
   13f3c:	cmp	r5, r2
   13f40:	blt	13fa0 <close@plt+0x30dc>
   13f44:	add	r7, r4, #8
   13f48:	cmp	r6, r7
   13f4c:	str	r2, [sp, #36]	; 0x24
   13f50:	beq	14074 <close@plt+0x31b0>
   13f54:	mov	r3, #8
   13f58:	sub	r2, r5, r2
   13f5c:	mov	r0, r6
   13f60:	str	r3, [sp]
   13f64:	add	r2, r2, #1
   13f68:	mvn	r3, #-2147483648	; 0x80000000
   13f6c:	add	r1, sp, #36	; 0x24
   13f70:	bl	1717c <close@plt+0x62b8>
   13f74:	mov	r6, r0
   13f78:	str	r0, [r4]
   13f7c:	ldr	r0, [r4, #4]
   13f80:	ldr	r2, [sp, #36]	; 0x24
   13f84:	mov	r1, #0
   13f88:	sub	r2, r2, r0
   13f8c:	add	r0, r6, r0, lsl #3
   13f90:	lsl	r2, r2, #3
   13f94:	bl	10e10 <memset@plt>
   13f98:	ldr	r3, [sp, #36]	; 0x24
   13f9c:	str	r3, [r4, #4]
   13fa0:	ldr	r4, [pc, #260]	; 140ac <close@plt+0x31e8>
   13fa4:	add	fp, r6, r5, lsl #3
   13fa8:	ldr	r9, [r6, r5, lsl #3]
   13fac:	ldr	r0, [r4, #4]
   13fb0:	ldr	r3, [r4]
   13fb4:	ldr	r7, [fp, #4]
   13fb8:	ldr	r1, [r4, #44]	; 0x2c
   13fbc:	ldr	r2, [r4, #40]	; 0x28
   13fc0:	orr	r0, r0, #1
   13fc4:	str	r3, [sp]
   13fc8:	add	r3, r4, #8
   13fcc:	str	r0, [sp, #28]
   13fd0:	str	r0, [sp, #4]
   13fd4:	str	r1, [sp, #16]
   13fd8:	str	r2, [sp, #12]
   13fdc:	str	r3, [sp, #8]
   13fe0:	mov	r0, r7
   13fe4:	mov	r1, r9
   13fe8:	mvn	r3, #0
   13fec:	mov	r2, sl
   13ff0:	bl	125e0 <close@plt+0x171c>
   13ff4:	cmp	r9, r0
   13ff8:	bhi	14060 <close@plt+0x319c>
   13ffc:	add	r3, r4, #48	; 0x30
   14000:	add	r9, r0, #1
   14004:	cmp	r7, r3
   14008:	str	r9, [r6, r5, lsl #3]
   1400c:	beq	14018 <close@plt+0x3154>
   14010:	mov	r0, r7
   14014:	bl	17ab8 <close@plt+0x6bf4>
   14018:	mov	r0, r9
   1401c:	bl	16f60 <close@plt+0x609c>
   14020:	ldr	ip, [r4, #44]	; 0x2c
   14024:	ldr	r3, [r4]
   14028:	ldr	lr, [r4, #40]	; 0x28
   1402c:	ldr	r4, [pc, #124]	; 140b0 <close@plt+0x31ec>
   14030:	mov	r2, sl
   14034:	mov	r1, r9
   14038:	str	r0, [fp, #4]
   1403c:	str	r4, [sp, #8]
   14040:	ldr	r4, [sp, #28]
   14044:	str	r3, [sp]
   14048:	str	r4, [sp, #4]
   1404c:	str	ip, [sp, #16]
   14050:	str	lr, [sp, #12]
   14054:	mvn	r3, #0
   14058:	mov	r7, r0
   1405c:	bl	125e0 <close@plt+0x171c>
   14060:	ldr	r3, [sp, #24]
   14064:	mov	r0, r7
   14068:	str	r3, [r8]
   1406c:	add	sp, sp, #44	; 0x2c
   14070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14074:	mov	r3, #8
   14078:	sub	r2, r5, r2
   1407c:	str	r3, [sp]
   14080:	add	r1, sp, #36	; 0x24
   14084:	add	r2, r2, #1
   14088:	mvn	r3, #-2147483648	; 0x80000000
   1408c:	bl	1717c <close@plt+0x62b8>
   14090:	mov	r6, r0
   14094:	ldm	r7, {r0, r1}
   14098:	str	r6, [r4]
   1409c:	stm	r6, {r0, r1}
   140a0:	b	13f7c <close@plt+0x30b8>
   140a4:	bl	10eb8 <abort@plt>
   140a8:	strdeq	sl, [r2], -r4
   140ac:	andeq	sl, r2, r4, lsl #3
   140b0:	andeq	sl, r2, ip, lsl #3
   140b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140b8:	sub	sp, sp, #52	; 0x34
   140bc:	mov	r5, r0
   140c0:	mov	sl, r1
   140c4:	mov	fp, r2
   140c8:	bl	10df8 <__errno_location@plt>
   140cc:	ldr	r4, [pc, #408]	; 1426c <close@plt+0x33a8>
   140d0:	cmn	r5, #-2147483647	; 0x80000001
   140d4:	ldr	r6, [r4]
   140d8:	mov	r8, r0
   140dc:	movne	r0, #0
   140e0:	moveq	r0, #1
   140e4:	ldr	r3, [r8]
   140e8:	orrs	r0, r0, r5, lsr #31
   140ec:	str	r3, [sp, #28]
   140f0:	bne	14268 <close@plt+0x33a4>
   140f4:	ldr	r2, [r4, #4]
   140f8:	cmp	r5, r2
   140fc:	blt	1415c <close@plt+0x3298>
   14100:	add	r7, r4, #8
   14104:	cmp	r6, r7
   14108:	str	r2, [sp, #44]	; 0x2c
   1410c:	beq	14238 <close@plt+0x3374>
   14110:	mov	r3, #8
   14114:	sub	r2, r5, r2
   14118:	mov	r0, r6
   1411c:	str	r3, [sp]
   14120:	add	r2, r2, #1
   14124:	mvn	r3, #-2147483648	; 0x80000000
   14128:	add	r1, sp, #44	; 0x2c
   1412c:	bl	1717c <close@plt+0x62b8>
   14130:	mov	r6, r0
   14134:	str	r0, [r4]
   14138:	ldr	r0, [r4, #4]
   1413c:	ldr	r2, [sp, #44]	; 0x2c
   14140:	mov	r1, #0
   14144:	sub	r2, r2, r0
   14148:	add	r0, r6, r0, lsl #3
   1414c:	lsl	r2, r2, #3
   14150:	bl	10e10 <memset@plt>
   14154:	ldr	r3, [sp, #44]	; 0x2c
   14158:	str	r3, [r4, #4]
   1415c:	ldr	r4, [pc, #268]	; 14270 <close@plt+0x33ac>
   14160:	add	r3, r6, r5, lsl #3
   14164:	str	r3, [sp, #32]
   14168:	ldr	r7, [r3, #4]
   1416c:	ldr	r0, [r4, #4]
   14170:	ldr	r3, [r4]
   14174:	ldr	r9, [r6, r5, lsl #3]
   14178:	ldr	r1, [r4, #44]	; 0x2c
   1417c:	ldr	r2, [r4, #40]	; 0x28
   14180:	orr	r0, r0, #1
   14184:	str	r3, [sp]
   14188:	add	r3, r4, #8
   1418c:	str	r0, [sp, #36]	; 0x24
   14190:	str	r0, [sp, #4]
   14194:	str	r1, [sp, #16]
   14198:	str	r2, [sp, #12]
   1419c:	str	r3, [sp, #8]
   141a0:	mov	r0, r7
   141a4:	mov	r1, r9
   141a8:	mov	r3, fp
   141ac:	mov	r2, sl
   141b0:	bl	125e0 <close@plt+0x171c>
   141b4:	cmp	r9, r0
   141b8:	bhi	14224 <close@plt+0x3360>
   141bc:	add	r3, r4, #48	; 0x30
   141c0:	add	r9, r0, #1
   141c4:	cmp	r7, r3
   141c8:	str	r9, [r6, r5, lsl #3]
   141cc:	beq	141d8 <close@plt+0x3314>
   141d0:	mov	r0, r7
   141d4:	bl	17ab8 <close@plt+0x6bf4>
   141d8:	mov	r0, r9
   141dc:	bl	16f60 <close@plt+0x609c>
   141e0:	ldr	ip, [sp, #32]
   141e4:	ldr	lr, [r4, #44]	; 0x2c
   141e8:	ldr	r5, [r4, #40]	; 0x28
   141ec:	mov	r3, fp
   141f0:	mov	r2, sl
   141f4:	mov	r1, r9
   141f8:	str	r0, [ip, #4]
   141fc:	ldr	ip, [r4]
   14200:	ldr	r4, [pc, #108]	; 14274 <close@plt+0x33b0>
   14204:	str	lr, [sp, #16]
   14208:	str	r4, [sp, #8]
   1420c:	ldr	r4, [sp, #36]	; 0x24
   14210:	str	r5, [sp, #12]
   14214:	str	r4, [sp, #4]
   14218:	str	ip, [sp]
   1421c:	mov	r7, r0
   14220:	bl	125e0 <close@plt+0x171c>
   14224:	ldr	r3, [sp, #28]
   14228:	mov	r0, r7
   1422c:	str	r3, [r8]
   14230:	add	sp, sp, #52	; 0x34
   14234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14238:	mov	r3, #8
   1423c:	sub	r2, r5, r2
   14240:	str	r3, [sp]
   14244:	add	r1, sp, #44	; 0x2c
   14248:	add	r2, r2, #1
   1424c:	mvn	r3, #-2147483648	; 0x80000000
   14250:	bl	1717c <close@plt+0x62b8>
   14254:	mov	r6, r0
   14258:	ldm	r7, {r0, r1}
   1425c:	str	r6, [r4]
   14260:	stm	r6, {r0, r1}
   14264:	b	14138 <close@plt+0x3274>
   14268:	bl	10eb8 <abort@plt>
   1426c:	strdeq	sl, [r2], -r4
   14270:	andeq	sl, r2, r4, lsl #3
   14274:	andeq	sl, r2, ip, lsl #3
   14278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1427c:	sub	sp, sp, #44	; 0x2c
   14280:	mov	sl, r0
   14284:	bl	10df8 <__errno_location@plt>
   14288:	ldr	r4, [pc, #352]	; 143f0 <close@plt+0x352c>
   1428c:	ldr	r2, [r4, #4]
   14290:	ldr	r5, [r4]
   14294:	cmp	r2, #0
   14298:	ldr	r3, [r0]
   1429c:	mov	r8, r0
   142a0:	str	r3, [sp, #28]
   142a4:	bgt	14300 <close@plt+0x343c>
   142a8:	add	r6, r4, #8
   142ac:	cmp	r5, r6
   142b0:	str	r2, [sp, #36]	; 0x24
   142b4:	beq	143c0 <close@plt+0x34fc>
   142b8:	mov	r3, #8
   142bc:	mov	r0, r5
   142c0:	str	r3, [sp]
   142c4:	rsb	r2, r2, #1
   142c8:	mvn	r3, #-2147483648	; 0x80000000
   142cc:	add	r1, sp, #36	; 0x24
   142d0:	bl	1717c <close@plt+0x62b8>
   142d4:	mov	r5, r0
   142d8:	str	r0, [r4]
   142dc:	ldr	r0, [r4, #4]
   142e0:	ldr	r2, [sp, #36]	; 0x24
   142e4:	mov	r1, #0
   142e8:	sub	r2, r2, r0
   142ec:	add	r0, r5, r0, lsl #3
   142f0:	lsl	r2, r2, #3
   142f4:	bl	10e10 <memset@plt>
   142f8:	ldr	r3, [sp, #36]	; 0x24
   142fc:	str	r3, [r4, #4]
   14300:	ldr	r4, [pc, #236]	; 143f4 <close@plt+0x3530>
   14304:	ldr	r9, [r5]
   14308:	ldr	r6, [r5, #4]
   1430c:	ldr	r7, [r4, #4]
   14310:	ldr	r1, [r4, #44]	; 0x2c
   14314:	ldr	r2, [r4, #40]	; 0x28
   14318:	ldr	r3, [r4]
   1431c:	orr	r7, r7, #1
   14320:	add	fp, r4, #8
   14324:	str	r1, [sp, #16]
   14328:	str	r2, [sp, #12]
   1432c:	str	r3, [sp]
   14330:	str	r7, [sp, #4]
   14334:	str	fp, [sp, #8]
   14338:	mov	r1, r9
   1433c:	mov	r0, r6
   14340:	mvn	r3, #0
   14344:	mov	r2, sl
   14348:	bl	125e0 <close@plt+0x171c>
   1434c:	cmp	r9, r0
   14350:	bhi	143ac <close@plt+0x34e8>
   14354:	add	r3, r4, #48	; 0x30
   14358:	add	r9, r0, #1
   1435c:	cmp	r6, r3
   14360:	str	r9, [r5]
   14364:	beq	14370 <close@plt+0x34ac>
   14368:	mov	r0, r6
   1436c:	bl	17ab8 <close@plt+0x6bf4>
   14370:	mov	r0, r9
   14374:	bl	16f60 <close@plt+0x609c>
   14378:	ldr	ip, [r4, #44]	; 0x2c
   1437c:	ldr	r3, [r4]
   14380:	ldr	lr, [r4, #40]	; 0x28
   14384:	mov	r2, sl
   14388:	mov	r1, r9
   1438c:	str	r0, [r5, #4]
   14390:	str	r3, [sp]
   14394:	stmib	sp, {r7, fp}
   14398:	str	ip, [sp, #16]
   1439c:	str	lr, [sp, #12]
   143a0:	mvn	r3, #0
   143a4:	mov	r6, r0
   143a8:	bl	125e0 <close@plt+0x171c>
   143ac:	ldr	r3, [sp, #28]
   143b0:	mov	r0, r6
   143b4:	str	r3, [r8]
   143b8:	add	sp, sp, #44	; 0x2c
   143bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143c0:	mov	r3, #8
   143c4:	str	r3, [sp]
   143c8:	add	r1, sp, #36	; 0x24
   143cc:	rsb	r2, r2, #1
   143d0:	mvn	r3, #-2147483648	; 0x80000000
   143d4:	mov	r0, #0
   143d8:	bl	1717c <close@plt+0x62b8>
   143dc:	mov	r5, r0
   143e0:	ldm	r6, {r0, r1}
   143e4:	str	r5, [r4]
   143e8:	stm	r5, {r0, r1}
   143ec:	b	142dc <close@plt+0x3418>
   143f0:	strdeq	sl, [r2], -r4
   143f4:	andeq	sl, r2, r4, lsl #3
   143f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143fc:	sub	sp, sp, #44	; 0x2c
   14400:	mov	r9, r0
   14404:	mov	sl, r1
   14408:	bl	10df8 <__errno_location@plt>
   1440c:	ldr	r4, [pc, #364]	; 14580 <close@plt+0x36bc>
   14410:	ldr	r2, [r4, #4]
   14414:	ldr	r5, [r4]
   14418:	cmp	r2, #0
   1441c:	ldr	r3, [r0]
   14420:	mov	r7, r0
   14424:	str	r3, [sp, #24]
   14428:	bgt	14484 <close@plt+0x35c0>
   1442c:	add	r6, r4, #8
   14430:	cmp	r5, r6
   14434:	str	r2, [sp, #36]	; 0x24
   14438:	beq	14550 <close@plt+0x368c>
   1443c:	mov	r3, #8
   14440:	mov	r0, r5
   14444:	str	r3, [sp]
   14448:	rsb	r2, r2, #1
   1444c:	mvn	r3, #-2147483648	; 0x80000000
   14450:	add	r1, sp, #36	; 0x24
   14454:	bl	1717c <close@plt+0x62b8>
   14458:	mov	r5, r0
   1445c:	str	r0, [r4]
   14460:	ldr	r0, [r4, #4]
   14464:	ldr	r2, [sp, #36]	; 0x24
   14468:	mov	r1, #0
   1446c:	sub	r2, r2, r0
   14470:	add	r0, r5, r0, lsl #3
   14474:	lsl	r2, r2, #3
   14478:	bl	10e10 <memset@plt>
   1447c:	ldr	r3, [sp, #36]	; 0x24
   14480:	str	r3, [r4, #4]
   14484:	ldr	r4, [pc, #248]	; 14584 <close@plt+0x36c0>
   14488:	ldr	r8, [r5]
   1448c:	ldr	r6, [r5, #4]
   14490:	ldr	r0, [r4, #4]
   14494:	ldr	r1, [r4, #44]	; 0x2c
   14498:	ldr	r2, [r4, #40]	; 0x28
   1449c:	ldr	r3, [r4]
   144a0:	orr	r0, r0, #1
   144a4:	add	fp, r4, #8
   144a8:	str	r0, [sp, #28]
   144ac:	str	r0, [sp, #4]
   144b0:	str	r1, [sp, #16]
   144b4:	str	r2, [sp, #12]
   144b8:	str	r3, [sp]
   144bc:	str	fp, [sp, #8]
   144c0:	mov	r1, r8
   144c4:	mov	r0, r6
   144c8:	mov	r3, sl
   144cc:	mov	r2, r9
   144d0:	bl	125e0 <close@plt+0x171c>
   144d4:	cmp	r8, r0
   144d8:	bhi	1453c <close@plt+0x3678>
   144dc:	add	r3, r4, #48	; 0x30
   144e0:	add	r8, r0, #1
   144e4:	cmp	r6, r3
   144e8:	str	r8, [r5]
   144ec:	beq	144f8 <close@plt+0x3634>
   144f0:	mov	r0, r6
   144f4:	bl	17ab8 <close@plt+0x6bf4>
   144f8:	mov	r0, r8
   144fc:	bl	16f60 <close@plt+0x609c>
   14500:	ldr	lr, [r4, #44]	; 0x2c
   14504:	ldr	ip, [r4]
   14508:	mov	r3, sl
   1450c:	mov	r2, r9
   14510:	mov	r1, r8
   14514:	str	r0, [r5, #4]
   14518:	ldr	r5, [r4, #40]	; 0x28
   1451c:	ldr	r4, [sp, #28]
   14520:	str	fp, [sp, #8]
   14524:	str	r4, [sp, #4]
   14528:	str	lr, [sp, #16]
   1452c:	str	r5, [sp, #12]
   14530:	str	ip, [sp]
   14534:	mov	r6, r0
   14538:	bl	125e0 <close@plt+0x171c>
   1453c:	ldr	r3, [sp, #24]
   14540:	mov	r0, r6
   14544:	str	r3, [r7]
   14548:	add	sp, sp, #44	; 0x2c
   1454c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14550:	mov	r3, #8
   14554:	str	r3, [sp]
   14558:	add	r1, sp, #36	; 0x24
   1455c:	rsb	r2, r2, #1
   14560:	mvn	r3, #-2147483648	; 0x80000000
   14564:	mov	r0, #0
   14568:	bl	1717c <close@plt+0x62b8>
   1456c:	mov	r5, r0
   14570:	ldm	r6, {r0, r1}
   14574:	str	r5, [r4]
   14578:	stm	r5, {r0, r1}
   1457c:	b	14460 <close@plt+0x359c>
   14580:	strdeq	sl, [r2], -r4
   14584:	andeq	sl, r2, r4, lsl #3
   14588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1458c:	sub	sp, sp, #132	; 0x84
   14590:	mov	r5, r1
   14594:	mov	r4, r0
   14598:	mov	r9, r2
   1459c:	add	r0, sp, #80	; 0x50
   145a0:	mov	r2, #48	; 0x30
   145a4:	mov	r1, #0
   145a8:	bl	10e10 <memset@plt>
   145ac:	cmp	r5, #10
   145b0:	beq	14768 <close@plt+0x38a4>
   145b4:	add	lr, sp, #80	; 0x50
   145b8:	str	r5, [sp, #80]	; 0x50
   145bc:	ldm	lr!, {r0, r1, r2, r3}
   145c0:	add	ip, sp, #32
   145c4:	ldr	r6, [pc, #416]	; 1476c <close@plt+0x38a8>
   145c8:	stmia	ip!, {r0, r1, r2, r3}
   145cc:	ldm	lr!, {r0, r1, r2, r3}
   145d0:	stmia	ip!, {r0, r1, r2, r3}
   145d4:	ldm	lr, {r0, r1, r2, r3}
   145d8:	stm	ip, {r0, r1, r2, r3}
   145dc:	bl	10df8 <__errno_location@plt>
   145e0:	cmn	r4, #-2147483647	; 0x80000001
   145e4:	ldr	r5, [r6]
   145e8:	mov	r7, r0
   145ec:	movne	r0, #0
   145f0:	moveq	r0, #1
   145f4:	ldr	r3, [r7]
   145f8:	orrs	r0, r0, r4, lsr #31
   145fc:	str	r3, [sp, #24]
   14600:	bne	14768 <close@plt+0x38a4>
   14604:	ldr	r2, [r6, #4]
   14608:	cmp	r4, r2
   1460c:	blt	1466c <close@plt+0x37a8>
   14610:	add	r8, r6, #8
   14614:	cmp	r5, r8
   14618:	str	r2, [sp, #80]	; 0x50
   1461c:	beq	14738 <close@plt+0x3874>
   14620:	mov	r3, #8
   14624:	sub	r2, r4, r2
   14628:	mov	r0, r5
   1462c:	str	r3, [sp]
   14630:	add	r2, r2, #1
   14634:	add	r1, sp, #80	; 0x50
   14638:	mvn	r3, #-2147483648	; 0x80000000
   1463c:	bl	1717c <close@plt+0x62b8>
   14640:	mov	r5, r0
   14644:	str	r0, [r6]
   14648:	ldr	r0, [r6, #4]
   1464c:	ldr	r2, [sp, #80]	; 0x50
   14650:	mov	r1, #0
   14654:	sub	r2, r2, r0
   14658:	add	r0, r5, r0, lsl #3
   1465c:	lsl	r2, r2, #3
   14660:	bl	10e10 <memset@plt>
   14664:	ldr	r3, [sp, #80]	; 0x50
   14668:	str	r3, [r6, #4]
   1466c:	add	fp, r5, r4, lsl #3
   14670:	ldr	r1, [sp, #36]	; 0x24
   14674:	ldr	r8, [r5, r4, lsl #3]
   14678:	ldr	r6, [fp, #4]
   1467c:	ldr	r2, [sp, #72]	; 0x48
   14680:	ldr	r3, [sp, #32]
   14684:	ldr	ip, [sp, #76]	; 0x4c
   14688:	orr	r1, r1, #1
   1468c:	add	sl, sp, #40	; 0x28
   14690:	str	r1, [sp, #28]
   14694:	str	r1, [sp, #4]
   14698:	str	r2, [sp, #12]
   1469c:	str	r3, [sp]
   146a0:	mov	r0, r6
   146a4:	mov	r1, r8
   146a8:	str	ip, [sp, #16]
   146ac:	str	sl, [sp, #8]
   146b0:	mvn	r3, #0
   146b4:	mov	r2, r9
   146b8:	bl	125e0 <close@plt+0x171c>
   146bc:	cmp	r8, r0
   146c0:	bhi	14724 <close@plt+0x3860>
   146c4:	ldr	r3, [pc, #164]	; 14770 <close@plt+0x38ac>
   146c8:	add	r8, r0, #1
   146cc:	cmp	r6, r3
   146d0:	str	r8, [r5, r4, lsl #3]
   146d4:	beq	146e0 <close@plt+0x381c>
   146d8:	mov	r0, r6
   146dc:	bl	17ab8 <close@plt+0x6bf4>
   146e0:	mov	r0, r8
   146e4:	bl	16f60 <close@plt+0x609c>
   146e8:	ldr	lr, [sp, #76]	; 0x4c
   146ec:	ldr	r3, [sp, #32]
   146f0:	ldr	ip, [sp, #72]	; 0x48
   146f4:	ldr	r4, [sp, #28]
   146f8:	mov	r2, r9
   146fc:	mov	r1, r8
   14700:	str	r0, [fp, #4]
   14704:	str	r3, [sp]
   14708:	str	sl, [sp, #8]
   1470c:	str	r4, [sp, #4]
   14710:	str	lr, [sp, #16]
   14714:	str	ip, [sp, #12]
   14718:	mvn	r3, #0
   1471c:	mov	r6, r0
   14720:	bl	125e0 <close@plt+0x171c>
   14724:	ldr	r3, [sp, #24]
   14728:	mov	r0, r6
   1472c:	str	r3, [r7]
   14730:	add	sp, sp, #132	; 0x84
   14734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14738:	mov	r3, #8
   1473c:	sub	r2, r4, r2
   14740:	add	r1, sp, #80	; 0x50
   14744:	str	r3, [sp]
   14748:	add	r2, r2, #1
   1474c:	mvn	r3, #-2147483648	; 0x80000000
   14750:	bl	1717c <close@plt+0x62b8>
   14754:	mov	r5, r0
   14758:	ldm	r8, {r0, r1}
   1475c:	str	r5, [r6]
   14760:	stm	r5, {r0, r1}
   14764:	b	14648 <close@plt+0x3784>
   14768:	bl	10eb8 <abort@plt>
   1476c:	strdeq	sl, [r2], -r4
   14770:			; <UNDEFINED> instruction: 0x0002a1b4
   14774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14778:	sub	sp, sp, #132	; 0x84
   1477c:	mov	r5, r1
   14780:	mov	r4, r0
   14784:	mov	r9, r2
   14788:	add	r0, sp, #80	; 0x50
   1478c:	mov	r2, #48	; 0x30
   14790:	mov	r1, #0
   14794:	mov	sl, r3
   14798:	bl	10e10 <memset@plt>
   1479c:	cmp	r5, #10
   147a0:	beq	1495c <close@plt+0x3a98>
   147a4:	add	lr, sp, #80	; 0x50
   147a8:	str	r5, [sp, #80]	; 0x50
   147ac:	ldm	lr!, {r0, r1, r2, r3}
   147b0:	add	ip, sp, #32
   147b4:	ldr	r6, [pc, #420]	; 14960 <close@plt+0x3a9c>
   147b8:	stmia	ip!, {r0, r1, r2, r3}
   147bc:	ldm	lr!, {r0, r1, r2, r3}
   147c0:	stmia	ip!, {r0, r1, r2, r3}
   147c4:	ldm	lr, {r0, r1, r2, r3}
   147c8:	stm	ip, {r0, r1, r2, r3}
   147cc:	bl	10df8 <__errno_location@plt>
   147d0:	cmn	r4, #-2147483647	; 0x80000001
   147d4:	ldr	r5, [r6]
   147d8:	mov	r7, r0
   147dc:	movne	r0, #0
   147e0:	moveq	r0, #1
   147e4:	ldr	r3, [r7]
   147e8:	orrs	r0, r0, r4, lsr #31
   147ec:	str	r3, [sp, #24]
   147f0:	bne	1495c <close@plt+0x3a98>
   147f4:	ldr	r2, [r6, #4]
   147f8:	cmp	r4, r2
   147fc:	blt	1485c <close@plt+0x3998>
   14800:	add	r8, r6, #8
   14804:	cmp	r5, r8
   14808:	str	r2, [sp, #80]	; 0x50
   1480c:	beq	1492c <close@plt+0x3a68>
   14810:	mov	r3, #8
   14814:	sub	r2, r4, r2
   14818:	mov	r0, r5
   1481c:	str	r3, [sp]
   14820:	add	r2, r2, #1
   14824:	add	r1, sp, #80	; 0x50
   14828:	mvn	r3, #-2147483648	; 0x80000000
   1482c:	bl	1717c <close@plt+0x62b8>
   14830:	mov	r5, r0
   14834:	str	r0, [r6]
   14838:	ldr	r0, [r6, #4]
   1483c:	ldr	r2, [sp, #80]	; 0x50
   14840:	mov	r1, #0
   14844:	sub	r2, r2, r0
   14848:	add	r0, r5, r0, lsl #3
   1484c:	lsl	r2, r2, #3
   14850:	bl	10e10 <memset@plt>
   14854:	ldr	r3, [sp, #80]	; 0x50
   14858:	str	r3, [r6, #4]
   1485c:	add	fp, r5, r4, lsl #3
   14860:	ldr	r3, [sp, #32]
   14864:	ldr	r1, [sp, #36]	; 0x24
   14868:	ldr	r8, [r5, r4, lsl #3]
   1486c:	ldr	r6, [fp, #4]
   14870:	ldr	r2, [sp, #72]	; 0x48
   14874:	ldr	ip, [sp, #76]	; 0x4c
   14878:	orr	r1, r1, #1
   1487c:	str	r3, [sp]
   14880:	add	r3, sp, #40	; 0x28
   14884:	str	r1, [sp, #28]
   14888:	str	r1, [sp, #4]
   1488c:	str	r2, [sp, #12]
   14890:	str	r3, [sp, #8]
   14894:	mov	r0, r6
   14898:	mov	r1, r8
   1489c:	str	ip, [sp, #16]
   148a0:	mov	r3, sl
   148a4:	mov	r2, r9
   148a8:	bl	125e0 <close@plt+0x171c>
   148ac:	cmp	r8, r0
   148b0:	bhi	14918 <close@plt+0x3a54>
   148b4:	ldr	r3, [pc, #168]	; 14964 <close@plt+0x3aa0>
   148b8:	add	r8, r0, #1
   148bc:	cmp	r6, r3
   148c0:	str	r8, [r5, r4, lsl #3]
   148c4:	beq	148d0 <close@plt+0x3a0c>
   148c8:	mov	r0, r6
   148cc:	bl	17ab8 <close@plt+0x6bf4>
   148d0:	mov	r0, r8
   148d4:	bl	16f60 <close@plt+0x609c>
   148d8:	add	lr, sp, #40	; 0x28
   148dc:	ldr	ip, [sp, #76]	; 0x4c
   148e0:	ldr	r4, [sp, #72]	; 0x48
   148e4:	ldr	r5, [sp, #28]
   148e8:	mov	r3, sl
   148ec:	mov	r2, r9
   148f0:	mov	r1, r8
   148f4:	str	r0, [fp, #4]
   148f8:	str	lr, [sp, #8]
   148fc:	ldr	lr, [sp, #32]
   14900:	str	r5, [sp, #4]
   14904:	str	ip, [sp, #16]
   14908:	str	r4, [sp, #12]
   1490c:	str	lr, [sp]
   14910:	mov	r6, r0
   14914:	bl	125e0 <close@plt+0x171c>
   14918:	ldr	r3, [sp, #24]
   1491c:	mov	r0, r6
   14920:	str	r3, [r7]
   14924:	add	sp, sp, #132	; 0x84
   14928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1492c:	mov	r3, #8
   14930:	sub	r2, r4, r2
   14934:	add	r1, sp, #80	; 0x50
   14938:	str	r3, [sp]
   1493c:	add	r2, r2, #1
   14940:	mvn	r3, #-2147483648	; 0x80000000
   14944:	bl	1717c <close@plt+0x62b8>
   14948:	mov	r5, r0
   1494c:	ldm	r8, {r0, r1}
   14950:	str	r5, [r6]
   14954:	stm	r5, {r0, r1}
   14958:	b	14838 <close@plt+0x3974>
   1495c:	bl	10eb8 <abort@plt>
   14960:	strdeq	sl, [r2], -r4
   14964:			; <UNDEFINED> instruction: 0x0002a1b4
   14968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1496c:	sub	sp, sp, #124	; 0x7c
   14970:	mov	r4, r0
   14974:	mov	r9, r1
   14978:	add	r0, sp, #72	; 0x48
   1497c:	mov	r2, #48	; 0x30
   14980:	mov	r1, #0
   14984:	bl	10e10 <memset@plt>
   14988:	cmp	r4, #10
   1498c:	beq	14b18 <close@plt+0x3c54>
   14990:	add	lr, sp, #72	; 0x48
   14994:	str	r4, [sp, #72]	; 0x48
   14998:	ldm	lr!, {r0, r1, r2, r3}
   1499c:	add	ip, sp, #24
   149a0:	ldr	r5, [pc, #372]	; 14b1c <close@plt+0x3c58>
   149a4:	stmia	ip!, {r0, r1, r2, r3}
   149a8:	ldm	lr!, {r0, r1, r2, r3}
   149ac:	stmia	ip!, {r0, r1, r2, r3}
   149b0:	ldm	lr, {r0, r1, r2, r3}
   149b4:	stm	ip, {r0, r1, r2, r3}
   149b8:	bl	10df8 <__errno_location@plt>
   149bc:	ldr	r2, [r5, #4]
   149c0:	ldr	r4, [r5]
   149c4:	cmp	r2, #0
   149c8:	mov	r7, r0
   149cc:	ldr	fp, [r0]
   149d0:	bgt	14a2c <close@plt+0x3b68>
   149d4:	add	r6, r5, #8
   149d8:	cmp	r4, r6
   149dc:	str	r2, [sp, #72]	; 0x48
   149e0:	beq	14ae8 <close@plt+0x3c24>
   149e4:	mov	r3, #8
   149e8:	mov	r0, r4
   149ec:	str	r3, [sp]
   149f0:	rsb	r2, r2, #1
   149f4:	add	r1, sp, #72	; 0x48
   149f8:	mvn	r3, #-2147483648	; 0x80000000
   149fc:	bl	1717c <close@plt+0x62b8>
   14a00:	mov	r4, r0
   14a04:	str	r0, [r5]
   14a08:	ldr	r0, [r5, #4]
   14a0c:	ldr	r2, [sp, #72]	; 0x48
   14a10:	mov	r1, #0
   14a14:	sub	r2, r2, r0
   14a18:	add	r0, r4, r0, lsl #3
   14a1c:	lsl	r2, r2, #3
   14a20:	bl	10e10 <memset@plt>
   14a24:	ldr	r3, [sp, #72]	; 0x48
   14a28:	str	r3, [r5, #4]
   14a2c:	ldr	r6, [sp, #28]
   14a30:	ldr	r8, [r4]
   14a34:	ldr	r5, [r4, #4]
   14a38:	ldr	r2, [sp, #64]	; 0x40
   14a3c:	ldr	r3, [sp, #24]
   14a40:	ldr	ip, [sp, #68]	; 0x44
   14a44:	orr	r6, r6, #1
   14a48:	add	sl, sp, #32
   14a4c:	str	r2, [sp, #12]
   14a50:	str	r3, [sp]
   14a54:	str	r6, [sp, #4]
   14a58:	mov	r1, r8
   14a5c:	mov	r0, r5
   14a60:	str	ip, [sp, #16]
   14a64:	str	sl, [sp, #8]
   14a68:	mvn	r3, #0
   14a6c:	mov	r2, r9
   14a70:	bl	125e0 <close@plt+0x171c>
   14a74:	cmp	r8, r0
   14a78:	bhi	14ad8 <close@plt+0x3c14>
   14a7c:	ldr	r3, [pc, #156]	; 14b20 <close@plt+0x3c5c>
   14a80:	add	r8, r0, #1
   14a84:	cmp	r5, r3
   14a88:	str	r8, [r4]
   14a8c:	beq	14a98 <close@plt+0x3bd4>
   14a90:	mov	r0, r5
   14a94:	bl	17ab8 <close@plt+0x6bf4>
   14a98:	mov	r0, r8
   14a9c:	bl	16f60 <close@plt+0x609c>
   14aa0:	ldr	lr, [sp, #68]	; 0x44
   14aa4:	ldr	r3, [sp, #24]
   14aa8:	ldr	ip, [sp, #64]	; 0x40
   14aac:	mov	r2, r9
   14ab0:	mov	r1, r8
   14ab4:	str	r0, [r4, #4]
   14ab8:	str	r3, [sp]
   14abc:	str	sl, [sp, #8]
   14ac0:	str	r6, [sp, #4]
   14ac4:	str	lr, [sp, #16]
   14ac8:	str	ip, [sp, #12]
   14acc:	mvn	r3, #0
   14ad0:	mov	r5, r0
   14ad4:	bl	125e0 <close@plt+0x171c>
   14ad8:	mov	r0, r5
   14adc:	str	fp, [r7]
   14ae0:	add	sp, sp, #124	; 0x7c
   14ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ae8:	mov	r3, #8
   14aec:	add	r1, sp, #72	; 0x48
   14af0:	str	r3, [sp]
   14af4:	rsb	r2, r2, #1
   14af8:	mvn	r3, #-2147483648	; 0x80000000
   14afc:	mov	r0, #0
   14b00:	bl	1717c <close@plt+0x62b8>
   14b04:	mov	r4, r0
   14b08:	ldm	r6, {r0, r1}
   14b0c:	str	r4, [r5]
   14b10:	stm	r4, {r0, r1}
   14b14:	b	14a08 <close@plt+0x3b44>
   14b18:	bl	10eb8 <abort@plt>
   14b1c:	strdeq	sl, [r2], -r4
   14b20:			; <UNDEFINED> instruction: 0x0002a1b4
   14b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b28:	sub	sp, sp, #132	; 0x84
   14b2c:	mov	r4, r0
   14b30:	mov	r9, r1
   14b34:	mov	sl, r2
   14b38:	add	r0, sp, #80	; 0x50
   14b3c:	mov	r2, #48	; 0x30
   14b40:	mov	r1, #0
   14b44:	bl	10e10 <memset@plt>
   14b48:	cmp	r4, #10
   14b4c:	beq	14ce0 <close@plt+0x3e1c>
   14b50:	add	lr, sp, #80	; 0x50
   14b54:	str	r4, [sp, #80]	; 0x50
   14b58:	ldm	lr!, {r0, r1, r2, r3}
   14b5c:	add	ip, sp, #32
   14b60:	ldr	r5, [pc, #380]	; 14ce4 <close@plt+0x3e20>
   14b64:	stmia	ip!, {r0, r1, r2, r3}
   14b68:	ldm	lr!, {r0, r1, r2, r3}
   14b6c:	stmia	ip!, {r0, r1, r2, r3}
   14b70:	ldm	lr, {r0, r1, r2, r3}
   14b74:	stm	ip, {r0, r1, r2, r3}
   14b78:	bl	10df8 <__errno_location@plt>
   14b7c:	ldr	r2, [r5, #4]
   14b80:	ldr	r4, [r5]
   14b84:	cmp	r2, #0
   14b88:	ldr	r3, [r0]
   14b8c:	mov	r7, r0
   14b90:	str	r3, [sp, #28]
   14b94:	bgt	14bf0 <close@plt+0x3d2c>
   14b98:	add	r6, r5, #8
   14b9c:	cmp	r4, r6
   14ba0:	str	r2, [sp, #80]	; 0x50
   14ba4:	beq	14cb0 <close@plt+0x3dec>
   14ba8:	mov	r3, #8
   14bac:	mov	r0, r4
   14bb0:	str	r3, [sp]
   14bb4:	rsb	r2, r2, #1
   14bb8:	add	r1, sp, #80	; 0x50
   14bbc:	mvn	r3, #-2147483648	; 0x80000000
   14bc0:	bl	1717c <close@plt+0x62b8>
   14bc4:	mov	r4, r0
   14bc8:	str	r0, [r5]
   14bcc:	ldr	r0, [r5, #4]
   14bd0:	ldr	r2, [sp, #80]	; 0x50
   14bd4:	mov	r1, #0
   14bd8:	sub	r2, r2, r0
   14bdc:	add	r0, r4, r0, lsl #3
   14be0:	lsl	r2, r2, #3
   14be4:	bl	10e10 <memset@plt>
   14be8:	ldr	r3, [sp, #80]	; 0x50
   14bec:	str	r3, [r5, #4]
   14bf0:	ldr	r6, [sp, #36]	; 0x24
   14bf4:	ldr	r8, [r4]
   14bf8:	ldr	r5, [r4, #4]
   14bfc:	ldr	r2, [sp, #72]	; 0x48
   14c00:	ldr	r3, [sp, #32]
   14c04:	ldr	ip, [sp, #76]	; 0x4c
   14c08:	orr	r6, r6, #1
   14c0c:	add	fp, sp, #40	; 0x28
   14c10:	str	r2, [sp, #12]
   14c14:	str	r3, [sp]
   14c18:	str	r6, [sp, #4]
   14c1c:	mov	r1, r8
   14c20:	mov	r0, r5
   14c24:	str	ip, [sp, #16]
   14c28:	str	fp, [sp, #8]
   14c2c:	mov	r3, sl
   14c30:	mov	r2, r9
   14c34:	bl	125e0 <close@plt+0x171c>
   14c38:	cmp	r8, r0
   14c3c:	bhi	14c9c <close@plt+0x3dd8>
   14c40:	ldr	r3, [pc, #160]	; 14ce8 <close@plt+0x3e24>
   14c44:	add	r8, r0, #1
   14c48:	cmp	r5, r3
   14c4c:	str	r8, [r4]
   14c50:	beq	14c5c <close@plt+0x3d98>
   14c54:	mov	r0, r5
   14c58:	bl	17ab8 <close@plt+0x6bf4>
   14c5c:	mov	r0, r8
   14c60:	bl	16f60 <close@plt+0x609c>
   14c64:	ldr	ip, [sp, #76]	; 0x4c
   14c68:	ldr	lr, [sp, #32]
   14c6c:	mov	r3, sl
   14c70:	mov	r2, r9
   14c74:	mov	r1, r8
   14c78:	str	r0, [r4, #4]
   14c7c:	ldr	r4, [sp, #72]	; 0x48
   14c80:	str	fp, [sp, #8]
   14c84:	str	r6, [sp, #4]
   14c88:	str	ip, [sp, #16]
   14c8c:	str	r4, [sp, #12]
   14c90:	str	lr, [sp]
   14c94:	mov	r5, r0
   14c98:	bl	125e0 <close@plt+0x171c>
   14c9c:	ldr	r3, [sp, #28]
   14ca0:	mov	r0, r5
   14ca4:	str	r3, [r7]
   14ca8:	add	sp, sp, #132	; 0x84
   14cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cb0:	mov	r3, #8
   14cb4:	add	r1, sp, #80	; 0x50
   14cb8:	str	r3, [sp]
   14cbc:	rsb	r2, r2, #1
   14cc0:	mvn	r3, #-2147483648	; 0x80000000
   14cc4:	mov	r0, #0
   14cc8:	bl	1717c <close@plt+0x62b8>
   14ccc:	mov	r4, r0
   14cd0:	ldm	r6, {r0, r1}
   14cd4:	str	r4, [r5]
   14cd8:	stm	r4, {r0, r1}
   14cdc:	b	14bcc <close@plt+0x3d08>
   14ce0:	bl	10eb8 <abort@plt>
   14ce4:	strdeq	sl, [r2], -r4
   14ce8:			; <UNDEFINED> instruction: 0x0002a1b4
   14cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cf0:	mov	r4, r2
   14cf4:	ldr	lr, [pc, #432]	; 14eac <close@plt+0x3fe8>
   14cf8:	mov	sl, r0
   14cfc:	mov	fp, r1
   14d00:	ldm	lr!, {r0, r1, r2, r3}
   14d04:	sub	sp, sp, #92	; 0x5c
   14d08:	add	ip, sp, #40	; 0x28
   14d0c:	lsr	r7, r4, #5
   14d10:	stmia	ip!, {r0, r1, r2, r3}
   14d14:	add	r6, sp, #48	; 0x30
   14d18:	ldm	lr!, {r0, r1, r2, r3}
   14d1c:	and	r4, r4, #31
   14d20:	ldr	r5, [pc, #392]	; 14eb0 <close@plt+0x3fec>
   14d24:	stmia	ip!, {r0, r1, r2, r3}
   14d28:	ldm	lr, {r0, r1, r2, r3}
   14d2c:	stm	ip, {r0, r1, r2, r3}
   14d30:	ldr	r2, [r6, r7, lsl #2]
   14d34:	lsr	r3, r2, r4
   14d38:	eor	r3, r3, #1
   14d3c:	and	r3, r3, #1
   14d40:	eor	r4, r2, r3, lsl r4
   14d44:	str	r4, [r6, r7, lsl #2]
   14d48:	bl	10df8 <__errno_location@plt>
   14d4c:	ldr	r2, [r5, #4]
   14d50:	ldr	r4, [r5]
   14d54:	cmp	r2, #0
   14d58:	ldr	r3, [r0]
   14d5c:	mov	r8, r0
   14d60:	str	r3, [sp, #28]
   14d64:	bgt	14dc0 <close@plt+0x3efc>
   14d68:	add	r7, r5, #8
   14d6c:	cmp	r4, r7
   14d70:	str	r2, [sp, #36]	; 0x24
   14d74:	beq	14e7c <close@plt+0x3fb8>
   14d78:	mov	r3, #8
   14d7c:	mov	r0, r4
   14d80:	str	r3, [sp]
   14d84:	rsb	r2, r2, #1
   14d88:	mvn	r3, #-2147483648	; 0x80000000
   14d8c:	add	r1, sp, #36	; 0x24
   14d90:	bl	1717c <close@plt+0x62b8>
   14d94:	mov	r4, r0
   14d98:	str	r0, [r5]
   14d9c:	ldr	r0, [r5, #4]
   14da0:	ldr	r2, [sp, #36]	; 0x24
   14da4:	mov	r1, #0
   14da8:	sub	r2, r2, r0
   14dac:	add	r0, r4, r0, lsl #3
   14db0:	lsl	r2, r2, #3
   14db4:	bl	10e10 <memset@plt>
   14db8:	ldr	r3, [sp, #36]	; 0x24
   14dbc:	str	r3, [r5, #4]
   14dc0:	ldr	r7, [sp, #44]	; 0x2c
   14dc4:	ldr	r9, [r4]
   14dc8:	ldr	r5, [r4, #4]
   14dcc:	ldr	r2, [sp, #80]	; 0x50
   14dd0:	ldr	r3, [sp, #40]	; 0x28
   14dd4:	ldr	ip, [sp, #84]	; 0x54
   14dd8:	orr	r7, r7, #1
   14ddc:	str	r2, [sp, #12]
   14de0:	str	r3, [sp]
   14de4:	str	r7, [sp, #4]
   14de8:	str	r6, [sp, #8]
   14dec:	mov	r1, r9
   14df0:	mov	r0, r5
   14df4:	str	ip, [sp, #16]
   14df8:	mov	r3, fp
   14dfc:	mov	r2, sl
   14e00:	bl	125e0 <close@plt+0x171c>
   14e04:	cmp	r9, r0
   14e08:	bhi	14e68 <close@plt+0x3fa4>
   14e0c:	ldr	r3, [pc, #160]	; 14eb4 <close@plt+0x3ff0>
   14e10:	add	r9, r0, #1
   14e14:	cmp	r5, r3
   14e18:	str	r9, [r4]
   14e1c:	beq	14e28 <close@plt+0x3f64>
   14e20:	mov	r0, r5
   14e24:	bl	17ab8 <close@plt+0x6bf4>
   14e28:	mov	r0, r9
   14e2c:	bl	16f60 <close@plt+0x609c>
   14e30:	ldr	ip, [sp, #84]	; 0x54
   14e34:	ldr	lr, [sp, #40]	; 0x28
   14e38:	mov	r3, fp
   14e3c:	mov	r2, sl
   14e40:	mov	r1, r9
   14e44:	str	r0, [r4, #4]
   14e48:	ldr	r4, [sp, #80]	; 0x50
   14e4c:	str	r6, [sp, #8]
   14e50:	str	r7, [sp, #4]
   14e54:	str	ip, [sp, #16]
   14e58:	str	r4, [sp, #12]
   14e5c:	str	lr, [sp]
   14e60:	mov	r5, r0
   14e64:	bl	125e0 <close@plt+0x171c>
   14e68:	ldr	r3, [sp, #28]
   14e6c:	mov	r0, r5
   14e70:	str	r3, [r8]
   14e74:	add	sp, sp, #92	; 0x5c
   14e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e7c:	mov	r3, #8
   14e80:	str	r3, [sp]
   14e84:	add	r1, sp, #36	; 0x24
   14e88:	rsb	r2, r2, #1
   14e8c:	mvn	r3, #-2147483648	; 0x80000000
   14e90:	mov	r0, #0
   14e94:	bl	1717c <close@plt+0x62b8>
   14e98:	mov	r4, r0
   14e9c:	ldm	r7, {r0, r1}
   14ea0:	str	r4, [r5]
   14ea4:	stm	r4, {r0, r1}
   14ea8:	b	14d9c <close@plt+0x3ed8>
   14eac:	andeq	sl, r2, r4, lsl #3
   14eb0:	strdeq	sl, [r2], -r4
   14eb4:			; <UNDEFINED> instruction: 0x0002a1b4
   14eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ebc:	mov	r4, r1
   14ec0:	ldr	lr, [pc, #420]	; 1506c <close@plt+0x41a8>
   14ec4:	mov	r6, r0
   14ec8:	sub	sp, sp, #84	; 0x54
   14ecc:	ldm	lr!, {r0, r1, r2, r3}
   14ed0:	add	ip, sp, #32
   14ed4:	lsr	r8, r4, #5
   14ed8:	add	r5, sp, #40	; 0x28
   14edc:	stmia	ip!, {r0, r1, r2, r3}
   14ee0:	and	r4, r4, #31
   14ee4:	ldm	lr!, {r0, r1, r2, r3}
   14ee8:	ldr	r7, [pc, #384]	; 15070 <close@plt+0x41ac>
   14eec:	stmia	ip!, {r0, r1, r2, r3}
   14ef0:	ldm	lr, {r0, r1, r2, r3}
   14ef4:	stm	ip, {r0, r1, r2, r3}
   14ef8:	ldr	r2, [r5, r8, lsl #2]
   14efc:	lsr	r3, r2, r4
   14f00:	eor	r3, r3, #1
   14f04:	and	r3, r3, #1
   14f08:	eor	r4, r2, r3, lsl r4
   14f0c:	str	r4, [r5, r8, lsl #2]
   14f10:	bl	10df8 <__errno_location@plt>
   14f14:	ldr	r2, [r7, #4]
   14f18:	ldr	r4, [r7]
   14f1c:	cmp	r2, #0
   14f20:	mov	r9, r0
   14f24:	ldr	sl, [r0]
   14f28:	bgt	14f84 <close@plt+0x40c0>
   14f2c:	add	r8, r7, #8
   14f30:	cmp	r4, r8
   14f34:	str	r2, [sp, #28]
   14f38:	beq	1503c <close@plt+0x4178>
   14f3c:	mov	r3, #8
   14f40:	mov	r0, r4
   14f44:	str	r3, [sp]
   14f48:	rsb	r2, r2, #1
   14f4c:	mvn	r3, #-2147483648	; 0x80000000
   14f50:	add	r1, sp, #28
   14f54:	bl	1717c <close@plt+0x62b8>
   14f58:	mov	r4, r0
   14f5c:	str	r0, [r7]
   14f60:	ldr	r0, [r7, #4]
   14f64:	ldr	r2, [sp, #28]
   14f68:	mov	r1, #0
   14f6c:	sub	r2, r2, r0
   14f70:	add	r0, r4, r0, lsl #3
   14f74:	lsl	r2, r2, #3
   14f78:	bl	10e10 <memset@plt>
   14f7c:	ldr	r3, [sp, #28]
   14f80:	str	r3, [r7, #4]
   14f84:	ldr	r8, [sp, #36]	; 0x24
   14f88:	ldr	fp, [r4]
   14f8c:	ldr	r7, [r4, #4]
   14f90:	ldr	r2, [sp, #72]	; 0x48
   14f94:	ldr	r3, [sp, #32]
   14f98:	ldr	ip, [sp, #76]	; 0x4c
   14f9c:	orr	r8, r8, #1
   14fa0:	str	r2, [sp, #12]
   14fa4:	str	r3, [sp]
   14fa8:	str	r8, [sp, #4]
   14fac:	str	r5, [sp, #8]
   14fb0:	mov	r1, fp
   14fb4:	mov	r0, r7
   14fb8:	str	ip, [sp, #16]
   14fbc:	mvn	r3, #0
   14fc0:	mov	r2, r6
   14fc4:	bl	125e0 <close@plt+0x171c>
   14fc8:	cmp	fp, r0
   14fcc:	bhi	1502c <close@plt+0x4168>
   14fd0:	ldr	r3, [pc, #156]	; 15074 <close@plt+0x41b0>
   14fd4:	add	fp, r0, #1
   14fd8:	cmp	r7, r3
   14fdc:	str	fp, [r4]
   14fe0:	beq	14fec <close@plt+0x4128>
   14fe4:	mov	r0, r7
   14fe8:	bl	17ab8 <close@plt+0x6bf4>
   14fec:	mov	r0, fp
   14ff0:	bl	16f60 <close@plt+0x609c>
   14ff4:	ldr	lr, [sp, #76]	; 0x4c
   14ff8:	ldr	r3, [sp, #32]
   14ffc:	ldr	ip, [sp, #72]	; 0x48
   15000:	mov	r2, r6
   15004:	mov	r1, fp
   15008:	str	r0, [r4, #4]
   1500c:	str	r3, [sp]
   15010:	str	r5, [sp, #8]
   15014:	str	r8, [sp, #4]
   15018:	str	lr, [sp, #16]
   1501c:	str	ip, [sp, #12]
   15020:	mvn	r3, #0
   15024:	mov	r7, r0
   15028:	bl	125e0 <close@plt+0x171c>
   1502c:	mov	r0, r7
   15030:	str	sl, [r9]
   15034:	add	sp, sp, #84	; 0x54
   15038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1503c:	mov	r3, #8
   15040:	str	r3, [sp]
   15044:	add	r1, sp, #28
   15048:	rsb	r2, r2, #1
   1504c:	mvn	r3, #-2147483648	; 0x80000000
   15050:	mov	r0, #0
   15054:	bl	1717c <close@plt+0x62b8>
   15058:	mov	r4, r0
   1505c:	ldm	r8, {r0, r1}
   15060:	str	r4, [r7]
   15064:	stm	r4, {r0, r1}
   15068:	b	14f60 <close@plt+0x409c>
   1506c:	andeq	sl, r2, r4, lsl #3
   15070:	strdeq	sl, [r2], -r4
   15074:			; <UNDEFINED> instruction: 0x0002a1b4
   15078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1507c:	mov	r6, r0
   15080:	ldr	lr, [pc, #404]	; 1521c <close@plt+0x4358>
   15084:	sub	sp, sp, #84	; 0x54
   15088:	add	ip, sp, #32
   1508c:	ldm	lr!, {r0, r1, r2, r3}
   15090:	ldr	r5, [pc, #392]	; 15220 <close@plt+0x435c>
   15094:	stmia	ip!, {r0, r1, r2, r3}
   15098:	ldm	lr!, {r0, r1, r2, r3}
   1509c:	ldr	r4, [sp, #44]	; 0x2c
   150a0:	stmia	ip!, {r0, r1, r2, r3}
   150a4:	ldm	lr, {r0, r1, r2, r3}
   150a8:	mvn	lr, r4
   150ac:	and	lr, lr, #67108864	; 0x4000000
   150b0:	eor	lr, lr, r4
   150b4:	stm	ip, {r0, r1, r2, r3}
   150b8:	str	lr, [sp, #44]	; 0x2c
   150bc:	bl	10df8 <__errno_location@plt>
   150c0:	ldr	r2, [r5, #4]
   150c4:	ldr	r4, [r5]
   150c8:	cmp	r2, #0
   150cc:	mov	r8, r0
   150d0:	ldr	sl, [r0]
   150d4:	bgt	15130 <close@plt+0x426c>
   150d8:	add	r7, r5, #8
   150dc:	cmp	r4, r7
   150e0:	str	r2, [sp, #28]
   150e4:	beq	151ec <close@plt+0x4328>
   150e8:	mov	r3, #8
   150ec:	mov	r0, r4
   150f0:	str	r3, [sp]
   150f4:	rsb	r2, r2, #1
   150f8:	mvn	r3, #-2147483648	; 0x80000000
   150fc:	add	r1, sp, #28
   15100:	bl	1717c <close@plt+0x62b8>
   15104:	mov	r4, r0
   15108:	str	r0, [r5]
   1510c:	ldr	r0, [r5, #4]
   15110:	ldr	r2, [sp, #28]
   15114:	mov	r1, #0
   15118:	sub	r2, r2, r0
   1511c:	add	r0, r4, r0, lsl #3
   15120:	lsl	r2, r2, #3
   15124:	bl	10e10 <memset@plt>
   15128:	ldr	r3, [sp, #28]
   1512c:	str	r3, [r5, #4]
   15130:	ldr	r7, [sp, #36]	; 0x24
   15134:	ldr	r9, [r4]
   15138:	ldr	r5, [r4, #4]
   1513c:	ldr	r2, [sp, #72]	; 0x48
   15140:	ldr	r3, [sp, #32]
   15144:	ldr	ip, [sp, #76]	; 0x4c
   15148:	orr	r7, r7, #1
   1514c:	add	fp, sp, #40	; 0x28
   15150:	str	r2, [sp, #12]
   15154:	str	r3, [sp]
   15158:	str	r7, [sp, #4]
   1515c:	mov	r1, r9
   15160:	mov	r0, r5
   15164:	str	ip, [sp, #16]
   15168:	str	fp, [sp, #8]
   1516c:	mvn	r3, #0
   15170:	mov	r2, r6
   15174:	bl	125e0 <close@plt+0x171c>
   15178:	cmp	r9, r0
   1517c:	bhi	151dc <close@plt+0x4318>
   15180:	ldr	r3, [pc, #156]	; 15224 <close@plt+0x4360>
   15184:	add	r9, r0, #1
   15188:	cmp	r5, r3
   1518c:	str	r9, [r4]
   15190:	beq	1519c <close@plt+0x42d8>
   15194:	mov	r0, r5
   15198:	bl	17ab8 <close@plt+0x6bf4>
   1519c:	mov	r0, r9
   151a0:	bl	16f60 <close@plt+0x609c>
   151a4:	ldr	lr, [sp, #76]	; 0x4c
   151a8:	ldr	r3, [sp, #32]
   151ac:	ldr	ip, [sp, #72]	; 0x48
   151b0:	mov	r2, r6
   151b4:	mov	r1, r9
   151b8:	str	r0, [r4, #4]
   151bc:	str	r3, [sp]
   151c0:	str	fp, [sp, #8]
   151c4:	str	r7, [sp, #4]
   151c8:	str	lr, [sp, #16]
   151cc:	str	ip, [sp, #12]
   151d0:	mvn	r3, #0
   151d4:	mov	r5, r0
   151d8:	bl	125e0 <close@plt+0x171c>
   151dc:	mov	r0, r5
   151e0:	str	sl, [r8]
   151e4:	add	sp, sp, #84	; 0x54
   151e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151ec:	mov	r3, #8
   151f0:	str	r3, [sp]
   151f4:	add	r1, sp, #28
   151f8:	rsb	r2, r2, #1
   151fc:	mvn	r3, #-2147483648	; 0x80000000
   15200:	mov	r0, #0
   15204:	bl	1717c <close@plt+0x62b8>
   15208:	mov	r4, r0
   1520c:	ldm	r7, {r0, r1}
   15210:	str	r4, [r5]
   15214:	stm	r4, {r0, r1}
   15218:	b	1510c <close@plt+0x4248>
   1521c:	andeq	sl, r2, r4, lsl #3
   15220:	strdeq	sl, [r2], -r4
   15224:			; <UNDEFINED> instruction: 0x0002a1b4
   15228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1522c:	mov	r9, r0
   15230:	ldr	lr, [pc, #416]	; 153d8 <close@plt+0x4514>
   15234:	mov	sl, r1
   15238:	sub	sp, sp, #92	; 0x5c
   1523c:	ldm	lr!, {r0, r1, r2, r3}
   15240:	add	ip, sp, #40	; 0x28
   15244:	ldr	r5, [pc, #400]	; 153dc <close@plt+0x4518>
   15248:	stmia	ip!, {r0, r1, r2, r3}
   1524c:	ldm	lr!, {r0, r1, r2, r3}
   15250:	ldr	r4, [sp, #52]	; 0x34
   15254:	stmia	ip!, {r0, r1, r2, r3}
   15258:	ldm	lr, {r0, r1, r2, r3}
   1525c:	mvn	lr, r4
   15260:	and	lr, lr, #67108864	; 0x4000000
   15264:	eor	lr, lr, r4
   15268:	stm	ip, {r0, r1, r2, r3}
   1526c:	str	lr, [sp, #52]	; 0x34
   15270:	bl	10df8 <__errno_location@plt>
   15274:	ldr	r2, [r5, #4]
   15278:	ldr	r4, [r5]
   1527c:	cmp	r2, #0
   15280:	ldr	r3, [r0]
   15284:	mov	r7, r0
   15288:	str	r3, [sp, #28]
   1528c:	bgt	152e8 <close@plt+0x4424>
   15290:	add	r6, r5, #8
   15294:	cmp	r4, r6
   15298:	str	r2, [sp, #36]	; 0x24
   1529c:	beq	153a8 <close@plt+0x44e4>
   152a0:	mov	r3, #8
   152a4:	mov	r0, r4
   152a8:	str	r3, [sp]
   152ac:	rsb	r2, r2, #1
   152b0:	mvn	r3, #-2147483648	; 0x80000000
   152b4:	add	r1, sp, #36	; 0x24
   152b8:	bl	1717c <close@plt+0x62b8>
   152bc:	mov	r4, r0
   152c0:	str	r0, [r5]
   152c4:	ldr	r0, [r5, #4]
   152c8:	ldr	r2, [sp, #36]	; 0x24
   152cc:	mov	r1, #0
   152d0:	sub	r2, r2, r0
   152d4:	add	r0, r4, r0, lsl #3
   152d8:	lsl	r2, r2, #3
   152dc:	bl	10e10 <memset@plt>
   152e0:	ldr	r3, [sp, #36]	; 0x24
   152e4:	str	r3, [r5, #4]
   152e8:	ldr	r6, [sp, #44]	; 0x2c
   152ec:	ldr	r8, [r4]
   152f0:	ldr	r5, [r4, #4]
   152f4:	ldr	r2, [sp, #80]	; 0x50
   152f8:	ldr	r3, [sp, #40]	; 0x28
   152fc:	ldr	ip, [sp, #84]	; 0x54
   15300:	orr	r6, r6, #1
   15304:	add	fp, sp, #48	; 0x30
   15308:	str	r2, [sp, #12]
   1530c:	str	r3, [sp]
   15310:	str	r6, [sp, #4]
   15314:	mov	r1, r8
   15318:	mov	r0, r5
   1531c:	str	ip, [sp, #16]
   15320:	str	fp, [sp, #8]
   15324:	mov	r3, sl
   15328:	mov	r2, r9
   1532c:	bl	125e0 <close@plt+0x171c>
   15330:	cmp	r8, r0
   15334:	bhi	15394 <close@plt+0x44d0>
   15338:	ldr	r3, [pc, #160]	; 153e0 <close@plt+0x451c>
   1533c:	add	r8, r0, #1
   15340:	cmp	r5, r3
   15344:	str	r8, [r4]
   15348:	beq	15354 <close@plt+0x4490>
   1534c:	mov	r0, r5
   15350:	bl	17ab8 <close@plt+0x6bf4>
   15354:	mov	r0, r8
   15358:	bl	16f60 <close@plt+0x609c>
   1535c:	ldr	ip, [sp, #84]	; 0x54
   15360:	ldr	lr, [sp, #40]	; 0x28
   15364:	mov	r3, sl
   15368:	mov	r2, r9
   1536c:	mov	r1, r8
   15370:	str	r0, [r4, #4]
   15374:	ldr	r4, [sp, #80]	; 0x50
   15378:	str	fp, [sp, #8]
   1537c:	str	r6, [sp, #4]
   15380:	str	ip, [sp, #16]
   15384:	str	r4, [sp, #12]
   15388:	str	lr, [sp]
   1538c:	mov	r5, r0
   15390:	bl	125e0 <close@plt+0x171c>
   15394:	ldr	r3, [sp, #28]
   15398:	mov	r0, r5
   1539c:	str	r3, [r7]
   153a0:	add	sp, sp, #92	; 0x5c
   153a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153a8:	mov	r3, #8
   153ac:	str	r3, [sp]
   153b0:	add	r1, sp, #36	; 0x24
   153b4:	rsb	r2, r2, #1
   153b8:	mvn	r3, #-2147483648	; 0x80000000
   153bc:	mov	r0, #0
   153c0:	bl	1717c <close@plt+0x62b8>
   153c4:	mov	r4, r0
   153c8:	ldm	r6, {r0, r1}
   153cc:	str	r4, [r5]
   153d0:	stm	r4, {r0, r1}
   153d4:	b	152c4 <close@plt+0x4400>
   153d8:	andeq	sl, r2, r4, lsl #3
   153dc:	strdeq	sl, [r2], -r4
   153e0:			; <UNDEFINED> instruction: 0x0002a1b4
   153e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153e8:	sub	sp, sp, #180	; 0xb4
   153ec:	mov	r6, r1
   153f0:	mov	r4, r0
   153f4:	mov	r9, r2
   153f8:	add	r0, sp, #80	; 0x50
   153fc:	mov	r2, #48	; 0x30
   15400:	mov	r1, #0
   15404:	bl	10e10 <memset@plt>
   15408:	cmp	r6, #10
   1540c:	beq	155ec <close@plt+0x4728>
   15410:	add	r5, sp, #80	; 0x50
   15414:	str	r6, [sp, #80]	; 0x50
   15418:	ldm	r5!, {r0, r1, r2, r3}
   1541c:	add	ip, sp, #128	; 0x80
   15420:	mov	r7, ip
   15424:	add	lr, sp, #32
   15428:	stmia	ip!, {r0, r1, r2, r3}
   1542c:	mov	r8, #67108864	; 0x4000000
   15430:	ldm	r5!, {r0, r1, r2, r3}
   15434:	ldr	r6, [pc, #436]	; 155f0 <close@plt+0x472c>
   15438:	stmia	ip!, {r0, r1, r2, r3}
   1543c:	ldm	r5, {r0, r1, r2, r3}
   15440:	stm	ip, {r0, r1, r2, r3}
   15444:	ldm	r7!, {r0, r1, r2, r3}
   15448:	stmia	lr!, {r0, r1, r2, r3}
   1544c:	ldm	r7!, {r0, r1, r2, r3}
   15450:	str	r8, [sp, #44]	; 0x2c
   15454:	stmia	lr!, {r0, r1, r2, r3}
   15458:	ldm	ip, {r0, r1, r2, r3}
   1545c:	stm	lr, {r0, r1, r2, r3}
   15460:	bl	10df8 <__errno_location@plt>
   15464:	cmn	r4, #-2147483647	; 0x80000001
   15468:	ldr	r5, [r6]
   1546c:	mov	r7, r0
   15470:	movne	r0, #0
   15474:	moveq	r0, #1
   15478:	ldr	r3, [r7]
   1547c:	orrs	r0, r0, r4, lsr #31
   15480:	str	r3, [sp, #24]
   15484:	bne	155ec <close@plt+0x4728>
   15488:	ldr	r2, [r6, #4]
   1548c:	cmp	r4, r2
   15490:	blt	154f0 <close@plt+0x462c>
   15494:	add	r8, r6, #8
   15498:	cmp	r5, r8
   1549c:	str	r2, [sp, #80]	; 0x50
   154a0:	beq	155bc <close@plt+0x46f8>
   154a4:	mov	r3, #8
   154a8:	sub	r2, r4, r2
   154ac:	mov	r0, r5
   154b0:	str	r3, [sp]
   154b4:	add	r2, r2, #1
   154b8:	add	r1, sp, #80	; 0x50
   154bc:	mvn	r3, #-2147483648	; 0x80000000
   154c0:	bl	1717c <close@plt+0x62b8>
   154c4:	mov	r5, r0
   154c8:	str	r0, [r6]
   154cc:	ldr	r0, [r6, #4]
   154d0:	ldr	r2, [sp, #80]	; 0x50
   154d4:	mov	r1, #0
   154d8:	sub	r2, r2, r0
   154dc:	add	r0, r5, r0, lsl #3
   154e0:	lsl	r2, r2, #3
   154e4:	bl	10e10 <memset@plt>
   154e8:	ldr	r3, [sp, #80]	; 0x50
   154ec:	str	r3, [r6, #4]
   154f0:	add	fp, r5, r4, lsl #3
   154f4:	ldr	r1, [sp, #36]	; 0x24
   154f8:	ldr	r8, [r5, r4, lsl #3]
   154fc:	ldr	r6, [fp, #4]
   15500:	ldr	r2, [sp, #72]	; 0x48
   15504:	ldr	r3, [sp, #32]
   15508:	ldr	ip, [sp, #76]	; 0x4c
   1550c:	orr	r1, r1, #1
   15510:	add	sl, sp, #40	; 0x28
   15514:	str	r1, [sp, #28]
   15518:	str	r1, [sp, #4]
   1551c:	str	r2, [sp, #12]
   15520:	str	r3, [sp]
   15524:	mov	r0, r6
   15528:	mov	r1, r8
   1552c:	str	ip, [sp, #16]
   15530:	str	sl, [sp, #8]
   15534:	mvn	r3, #0
   15538:	mov	r2, r9
   1553c:	bl	125e0 <close@plt+0x171c>
   15540:	cmp	r8, r0
   15544:	bhi	155a8 <close@plt+0x46e4>
   15548:	ldr	r3, [pc, #164]	; 155f4 <close@plt+0x4730>
   1554c:	add	r8, r0, #1
   15550:	cmp	r6, r3
   15554:	str	r8, [r5, r4, lsl #3]
   15558:	beq	15564 <close@plt+0x46a0>
   1555c:	mov	r0, r6
   15560:	bl	17ab8 <close@plt+0x6bf4>
   15564:	mov	r0, r8
   15568:	bl	16f60 <close@plt+0x609c>
   1556c:	ldr	lr, [sp, #76]	; 0x4c
   15570:	ldr	r3, [sp, #32]
   15574:	ldr	ip, [sp, #72]	; 0x48
   15578:	ldr	r4, [sp, #28]
   1557c:	mov	r2, r9
   15580:	mov	r1, r8
   15584:	str	r0, [fp, #4]
   15588:	str	r3, [sp]
   1558c:	str	sl, [sp, #8]
   15590:	str	r4, [sp, #4]
   15594:	str	lr, [sp, #16]
   15598:	str	ip, [sp, #12]
   1559c:	mvn	r3, #0
   155a0:	mov	r6, r0
   155a4:	bl	125e0 <close@plt+0x171c>
   155a8:	ldr	r3, [sp, #24]
   155ac:	mov	r0, r6
   155b0:	str	r3, [r7]
   155b4:	add	sp, sp, #180	; 0xb4
   155b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155bc:	mov	r3, #8
   155c0:	sub	r2, r4, r2
   155c4:	add	r1, sp, #80	; 0x50
   155c8:	str	r3, [sp]
   155cc:	add	r2, r2, #1
   155d0:	mvn	r3, #-2147483648	; 0x80000000
   155d4:	bl	1717c <close@plt+0x62b8>
   155d8:	mov	r5, r0
   155dc:	ldm	r8, {r0, r1}
   155e0:	str	r5, [r6]
   155e4:	stm	r5, {r0, r1}
   155e8:	b	154cc <close@plt+0x4608>
   155ec:	bl	10eb8 <abort@plt>
   155f0:	strdeq	sl, [r2], -r4
   155f4:			; <UNDEFINED> instruction: 0x0002a1b4
   155f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155fc:	mov	r7, r1
   15600:	ldr	lr, [pc, #492]	; 157f4 <close@plt+0x4930>
   15604:	mov	r8, r2
   15608:	mov	r4, r0
   1560c:	mov	fp, r3
   15610:	ldm	lr!, {r0, r1, r2, r3}
   15614:	sub	sp, sp, #100	; 0x64
   15618:	add	ip, sp, #48	; 0x30
   1561c:	mov	sl, #10
   15620:	stmia	ip!, {r0, r1, r2, r3}
   15624:	cmp	r8, #0
   15628:	cmpne	r7, #0
   1562c:	ldm	lr!, {r0, r1, r2, r3}
   15630:	str	sl, [sp, #48]	; 0x30
   15634:	stmia	ip!, {r0, r1, r2, r3}
   15638:	ldm	lr, {r0, r1, r2, r3}
   1563c:	stm	ip, {r0, r1, r2, r3}
   15640:	beq	157f0 <close@plt+0x492c>
   15644:	str	r7, [sp, #88]	; 0x58
   15648:	str	r8, [sp, #92]	; 0x5c
   1564c:	bl	10df8 <__errno_location@plt>
   15650:	ldr	r6, [pc, #416]	; 157f8 <close@plt+0x4934>
   15654:	cmn	r4, #-2147483647	; 0x80000001
   15658:	ldr	r5, [r6]
   1565c:	mov	r9, r0
   15660:	movne	r0, #0
   15664:	moveq	r0, #1
   15668:	ldr	r3, [r9]
   1566c:	orrs	r0, r0, r4, lsr #31
   15670:	str	r3, [sp, #28]
   15674:	bne	157f0 <close@plt+0x492c>
   15678:	ldr	r2, [r6, #4]
   1567c:	cmp	r4, r2
   15680:	movlt	r3, sl
   15684:	blt	156f0 <close@plt+0x482c>
   15688:	add	r7, r6, #8
   1568c:	cmp	r5, r7
   15690:	str	r2, [sp, #44]	; 0x2c
   15694:	beq	157c0 <close@plt+0x48fc>
   15698:	mov	r3, #8
   1569c:	sub	r2, r4, r2
   156a0:	mov	r0, r5
   156a4:	str	r3, [sp]
   156a8:	add	r2, r2, #1
   156ac:	mvn	r3, #-2147483648	; 0x80000000
   156b0:	add	r1, sp, #44	; 0x2c
   156b4:	bl	1717c <close@plt+0x62b8>
   156b8:	mov	r5, r0
   156bc:	str	r0, [r6]
   156c0:	ldr	r0, [r6, #4]
   156c4:	ldr	r2, [sp, #44]	; 0x2c
   156c8:	mov	r1, #0
   156cc:	sub	r2, r2, r0
   156d0:	add	r0, r5, r0, lsl #3
   156d4:	lsl	r2, r2, #3
   156d8:	bl	10e10 <memset@plt>
   156dc:	ldr	r3, [sp, #48]	; 0x30
   156e0:	ldr	r7, [sp, #88]	; 0x58
   156e4:	ldr	r8, [sp, #92]	; 0x5c
   156e8:	ldr	r2, [sp, #44]	; 0x2c
   156ec:	str	r2, [r6, #4]
   156f0:	add	r2, r5, r4, lsl #3
   156f4:	mov	r1, r2
   156f8:	str	r2, [sp, #32]
   156fc:	ldr	r2, [sp, #52]	; 0x34
   15700:	ldr	r6, [r1, #4]
   15704:	ldr	sl, [r5, r4, lsl #3]
   15708:	orr	r2, r2, #1
   1570c:	str	r3, [sp]
   15710:	add	r3, sp, #56	; 0x38
   15714:	str	r2, [sp, #36]	; 0x24
   15718:	str	r2, [sp, #4]
   1571c:	str	r3, [sp, #8]
   15720:	mov	r0, r6
   15724:	str	r8, [sp, #16]
   15728:	str	r7, [sp, #12]
   1572c:	mov	r1, sl
   15730:	mvn	r3, #0
   15734:	mov	r2, fp
   15738:	bl	125e0 <close@plt+0x171c>
   1573c:	cmp	sl, r0
   15740:	bhi	157ac <close@plt+0x48e8>
   15744:	ldr	r3, [pc, #176]	; 157fc <close@plt+0x4938>
   15748:	add	r7, r0, #1
   1574c:	cmp	r6, r3
   15750:	str	r7, [r5, r4, lsl #3]
   15754:	beq	15760 <close@plt+0x489c>
   15758:	mov	r0, r6
   1575c:	bl	17ab8 <close@plt+0x6bf4>
   15760:	mov	r0, r7
   15764:	bl	16f60 <close@plt+0x609c>
   15768:	ldr	r3, [sp, #32]
   1576c:	ldr	lr, [sp, #92]	; 0x5c
   15770:	ldr	ip, [sp, #88]	; 0x58
   15774:	ldr	r4, [sp, #36]	; 0x24
   15778:	mov	r2, fp
   1577c:	mov	r1, r7
   15780:	str	r0, [r3, #4]
   15784:	add	r3, sp, #56	; 0x38
   15788:	str	r3, [sp, #8]
   1578c:	ldr	r3, [sp, #48]	; 0x30
   15790:	str	r4, [sp, #4]
   15794:	str	r3, [sp]
   15798:	str	lr, [sp, #16]
   1579c:	str	ip, [sp, #12]
   157a0:	mvn	r3, #0
   157a4:	mov	r6, r0
   157a8:	bl	125e0 <close@plt+0x171c>
   157ac:	ldr	r3, [sp, #28]
   157b0:	mov	r0, r6
   157b4:	str	r3, [r9]
   157b8:	add	sp, sp, #100	; 0x64
   157bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157c0:	mov	r3, #8
   157c4:	sub	r2, r4, r2
   157c8:	str	r3, [sp]
   157cc:	add	r1, sp, #44	; 0x2c
   157d0:	add	r2, r2, #1
   157d4:	mvn	r3, #-2147483648	; 0x80000000
   157d8:	bl	1717c <close@plt+0x62b8>
   157dc:	mov	r5, r0
   157e0:	ldm	r7, {r0, r1}
   157e4:	str	r5, [r6]
   157e8:	stm	r5, {r0, r1}
   157ec:	b	156c0 <close@plt+0x47fc>
   157f0:	bl	10eb8 <abort@plt>
   157f4:	andeq	sl, r2, r4, lsl #3
   157f8:	strdeq	sl, [r2], -r4
   157fc:			; <UNDEFINED> instruction: 0x0002a1b4
   15800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15804:	mov	r7, r1
   15808:	ldr	lr, [pc, #492]	; 159fc <close@plt+0x4b38>
   1580c:	mov	r8, r2
   15810:	mov	r4, r0
   15814:	mov	fp, r3
   15818:	ldm	lr!, {r0, r1, r2, r3}
   1581c:	sub	sp, sp, #100	; 0x64
   15820:	add	ip, sp, #48	; 0x30
   15824:	mov	sl, #10
   15828:	stmia	ip!, {r0, r1, r2, r3}
   1582c:	cmp	r8, #0
   15830:	cmpne	r7, #0
   15834:	ldm	lr!, {r0, r1, r2, r3}
   15838:	str	sl, [sp, #48]	; 0x30
   1583c:	stmia	ip!, {r0, r1, r2, r3}
   15840:	ldm	lr, {r0, r1, r2, r3}
   15844:	stm	ip, {r0, r1, r2, r3}
   15848:	beq	159f8 <close@plt+0x4b34>
   1584c:	str	r7, [sp, #88]	; 0x58
   15850:	str	r8, [sp, #92]	; 0x5c
   15854:	bl	10df8 <__errno_location@plt>
   15858:	ldr	r6, [pc, #416]	; 15a00 <close@plt+0x4b3c>
   1585c:	cmn	r4, #-2147483647	; 0x80000001
   15860:	ldr	r5, [r6]
   15864:	mov	r9, r0
   15868:	movne	r0, #0
   1586c:	moveq	r0, #1
   15870:	ldr	r3, [r9]
   15874:	orrs	r0, r0, r4, lsr #31
   15878:	str	r3, [sp, #28]
   1587c:	bne	159f8 <close@plt+0x4b34>
   15880:	ldr	r2, [r6, #4]
   15884:	cmp	r4, r2
   15888:	movlt	r3, sl
   1588c:	blt	158f8 <close@plt+0x4a34>
   15890:	add	r7, r6, #8
   15894:	cmp	r5, r7
   15898:	str	r2, [sp, #44]	; 0x2c
   1589c:	beq	159c8 <close@plt+0x4b04>
   158a0:	mov	r3, #8
   158a4:	sub	r2, r4, r2
   158a8:	mov	r0, r5
   158ac:	str	r3, [sp]
   158b0:	add	r2, r2, #1
   158b4:	mvn	r3, #-2147483648	; 0x80000000
   158b8:	add	r1, sp, #44	; 0x2c
   158bc:	bl	1717c <close@plt+0x62b8>
   158c0:	mov	r5, r0
   158c4:	str	r0, [r6]
   158c8:	ldr	r0, [r6, #4]
   158cc:	ldr	r2, [sp, #44]	; 0x2c
   158d0:	mov	r1, #0
   158d4:	sub	r2, r2, r0
   158d8:	add	r0, r5, r0, lsl #3
   158dc:	lsl	r2, r2, #3
   158e0:	bl	10e10 <memset@plt>
   158e4:	ldr	r3, [sp, #48]	; 0x30
   158e8:	ldr	r7, [sp, #88]	; 0x58
   158ec:	ldr	r8, [sp, #92]	; 0x5c
   158f0:	ldr	r2, [sp, #44]	; 0x2c
   158f4:	str	r2, [r6, #4]
   158f8:	add	r2, r5, r4, lsl #3
   158fc:	mov	r1, r2
   15900:	str	r2, [sp, #32]
   15904:	ldr	r2, [sp, #52]	; 0x34
   15908:	ldr	r6, [r1, #4]
   1590c:	ldr	sl, [r5, r4, lsl #3]
   15910:	orr	r2, r2, #1
   15914:	str	r3, [sp]
   15918:	add	r3, sp, #56	; 0x38
   1591c:	str	r2, [sp, #36]	; 0x24
   15920:	str	r2, [sp, #4]
   15924:	str	r3, [sp, #8]
   15928:	mov	r0, r6
   1592c:	str	r8, [sp, #16]
   15930:	str	r7, [sp, #12]
   15934:	mov	r1, sl
   15938:	ldr	r3, [sp, #136]	; 0x88
   1593c:	mov	r2, fp
   15940:	bl	125e0 <close@plt+0x171c>
   15944:	cmp	sl, r0
   15948:	bhi	159b4 <close@plt+0x4af0>
   1594c:	ldr	r3, [pc, #176]	; 15a04 <close@plt+0x4b40>
   15950:	add	r7, r0, #1
   15954:	cmp	r6, r3
   15958:	str	r7, [r5, r4, lsl #3]
   1595c:	beq	15968 <close@plt+0x4aa4>
   15960:	mov	r0, r6
   15964:	bl	17ab8 <close@plt+0x6bf4>
   15968:	mov	r0, r7
   1596c:	bl	16f60 <close@plt+0x609c>
   15970:	ldr	r3, [sp, #32]
   15974:	ldr	lr, [sp, #92]	; 0x5c
   15978:	ldr	ip, [sp, #88]	; 0x58
   1597c:	ldr	r4, [sp, #36]	; 0x24
   15980:	mov	r2, fp
   15984:	mov	r1, r7
   15988:	str	r0, [r3, #4]
   1598c:	add	r3, sp, #56	; 0x38
   15990:	str	r3, [sp, #8]
   15994:	ldr	r3, [sp, #48]	; 0x30
   15998:	str	r4, [sp, #4]
   1599c:	str	r3, [sp]
   159a0:	str	lr, [sp, #16]
   159a4:	str	ip, [sp, #12]
   159a8:	ldr	r3, [sp, #136]	; 0x88
   159ac:	mov	r6, r0
   159b0:	bl	125e0 <close@plt+0x171c>
   159b4:	ldr	r3, [sp, #28]
   159b8:	mov	r0, r6
   159bc:	str	r3, [r9]
   159c0:	add	sp, sp, #100	; 0x64
   159c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159c8:	mov	r3, #8
   159cc:	sub	r2, r4, r2
   159d0:	str	r3, [sp]
   159d4:	add	r1, sp, #44	; 0x2c
   159d8:	add	r2, r2, #1
   159dc:	mvn	r3, #-2147483648	; 0x80000000
   159e0:	bl	1717c <close@plt+0x62b8>
   159e4:	mov	r5, r0
   159e8:	ldm	r7, {r0, r1}
   159ec:	str	r5, [r6]
   159f0:	stm	r5, {r0, r1}
   159f4:	b	158c8 <close@plt+0x4a04>
   159f8:	bl	10eb8 <abort@plt>
   159fc:	andeq	sl, r2, r4, lsl #3
   15a00:	strdeq	sl, [r2], -r4
   15a04:			; <UNDEFINED> instruction: 0x0002a1b4
   15a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a0c:	mov	r5, r0
   15a10:	ldr	lr, [pc, #452]	; 15bdc <close@plt+0x4d18>
   15a14:	mov	r6, r1
   15a18:	mov	sl, r2
   15a1c:	ldm	lr!, {r0, r1, r2, r3}
   15a20:	sub	sp, sp, #92	; 0x5c
   15a24:	add	ip, sp, #40	; 0x28
   15a28:	cmp	r6, #0
   15a2c:	cmpne	r5, #0
   15a30:	stmia	ip!, {r0, r1, r2, r3}
   15a34:	mov	r9, #10
   15a38:	ldm	lr!, {r0, r1, r2, r3}
   15a3c:	moveq	fp, #1
   15a40:	movne	fp, #0
   15a44:	str	r9, [sp, #40]	; 0x28
   15a48:	stmia	ip!, {r0, r1, r2, r3}
   15a4c:	ldm	lr, {r0, r1, r2, r3}
   15a50:	stm	ip, {r0, r1, r2, r3}
   15a54:	beq	15bd8 <close@plt+0x4d14>
   15a58:	str	r5, [sp, #80]	; 0x50
   15a5c:	str	r6, [sp, #84]	; 0x54
   15a60:	bl	10df8 <__errno_location@plt>
   15a64:	ldr	r7, [pc, #372]	; 15be0 <close@plt+0x4d1c>
   15a68:	ldr	r2, [r7, #4]
   15a6c:	ldr	r4, [r7]
   15a70:	cmp	r2, #0
   15a74:	ldr	r3, [r0]
   15a78:	mov	r8, r0
   15a7c:	str	r3, [sp, #24]
   15a80:	movgt	r3, r9
   15a84:	bgt	15aec <close@plt+0x4c28>
   15a88:	add	r5, r7, #8
   15a8c:	cmp	r4, r5
   15a90:	str	r2, [sp, #36]	; 0x24
   15a94:	beq	15ba8 <close@plt+0x4ce4>
   15a98:	mov	r3, #8
   15a9c:	mov	r0, r4
   15aa0:	str	r3, [sp]
   15aa4:	rsb	r2, r2, #1
   15aa8:	mvn	r3, #-2147483648	; 0x80000000
   15aac:	add	r1, sp, #36	; 0x24
   15ab0:	bl	1717c <close@plt+0x62b8>
   15ab4:	mov	r4, r0
   15ab8:	str	r0, [r7]
   15abc:	ldr	r0, [r7, #4]
   15ac0:	ldr	r2, [sp, #36]	; 0x24
   15ac4:	mov	r1, #0
   15ac8:	sub	r2, r2, r0
   15acc:	add	r0, r4, r0, lsl #3
   15ad0:	lsl	r2, r2, #3
   15ad4:	bl	10e10 <memset@plt>
   15ad8:	ldr	r3, [sp, #40]	; 0x28
   15adc:	ldr	r5, [sp, #80]	; 0x50
   15ae0:	ldr	r6, [sp, #84]	; 0x54
   15ae4:	ldr	r2, [sp, #36]	; 0x24
   15ae8:	str	r2, [r7, #4]
   15aec:	ldr	r2, [sp, #44]	; 0x2c
   15af0:	ldr	r9, [r4]
   15af4:	ldr	r7, [r4, #4]
   15af8:	orr	r2, r2, #1
   15afc:	add	fp, sp, #48	; 0x30
   15b00:	str	r2, [sp, #28]
   15b04:	str	r2, [sp, #4]
   15b08:	str	r3, [sp]
   15b0c:	str	r6, [sp, #16]
   15b10:	str	r5, [sp, #12]
   15b14:	mov	r1, r9
   15b18:	mov	r0, r7
   15b1c:	str	fp, [sp, #8]
   15b20:	mvn	r3, #0
   15b24:	mov	r2, sl
   15b28:	bl	125e0 <close@plt+0x171c>
   15b2c:	cmp	r9, r0
   15b30:	bhi	15b94 <close@plt+0x4cd0>
   15b34:	ldr	r3, [pc, #168]	; 15be4 <close@plt+0x4d20>
   15b38:	add	r5, r0, #1
   15b3c:	cmp	r7, r3
   15b40:	str	r5, [r4]
   15b44:	beq	15b50 <close@plt+0x4c8c>
   15b48:	mov	r0, r7
   15b4c:	bl	17ab8 <close@plt+0x6bf4>
   15b50:	mov	r0, r5
   15b54:	bl	16f60 <close@plt+0x609c>
   15b58:	ldr	lr, [sp, #84]	; 0x54
   15b5c:	ldr	r3, [sp, #40]	; 0x28
   15b60:	ldr	ip, [sp, #80]	; 0x50
   15b64:	mov	r2, sl
   15b68:	mov	r1, r5
   15b6c:	str	r0, [r4, #4]
   15b70:	ldr	r4, [sp, #28]
   15b74:	str	r3, [sp]
   15b78:	str	fp, [sp, #8]
   15b7c:	str	r4, [sp, #4]
   15b80:	str	lr, [sp, #16]
   15b84:	str	ip, [sp, #12]
   15b88:	mvn	r3, #0
   15b8c:	mov	r7, r0
   15b90:	bl	125e0 <close@plt+0x171c>
   15b94:	ldr	r3, [sp, #24]
   15b98:	mov	r0, r7
   15b9c:	str	r3, [r8]
   15ba0:	add	sp, sp, #92	; 0x5c
   15ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ba8:	mov	r3, #8
   15bac:	str	r3, [sp]
   15bb0:	add	r1, sp, #36	; 0x24
   15bb4:	rsb	r2, r2, #1
   15bb8:	mov	r0, fp
   15bbc:	mvn	r3, #-2147483648	; 0x80000000
   15bc0:	bl	1717c <close@plt+0x62b8>
   15bc4:	mov	r4, r0
   15bc8:	ldm	r5, {r0, r1}
   15bcc:	str	r4, [r7]
   15bd0:	stm	r4, {r0, r1}
   15bd4:	b	15abc <close@plt+0x4bf8>
   15bd8:	bl	10eb8 <abort@plt>
   15bdc:	andeq	sl, r2, r4, lsl #3
   15be0:	strdeq	sl, [r2], -r4
   15be4:			; <UNDEFINED> instruction: 0x0002a1b4
   15be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bec:	mov	r5, r0
   15bf0:	ldr	lr, [pc, #464]	; 15dc8 <close@plt+0x4f04>
   15bf4:	mov	r6, r1
   15bf8:	mov	sl, r2
   15bfc:	mov	fp, r3
   15c00:	ldm	lr!, {r0, r1, r2, r3}
   15c04:	sub	sp, sp, #92	; 0x5c
   15c08:	add	ip, sp, #40	; 0x28
   15c0c:	cmp	r6, #0
   15c10:	cmpne	r5, #0
   15c14:	stmia	ip!, {r0, r1, r2, r3}
   15c18:	moveq	r4, #1
   15c1c:	ldm	lr!, {r0, r1, r2, r3}
   15c20:	movne	r4, #0
   15c24:	mov	r9, #10
   15c28:	str	r4, [sp, #28]
   15c2c:	stmia	ip!, {r0, r1, r2, r3}
   15c30:	ldm	lr, {r0, r1, r2, r3}
   15c34:	str	r9, [sp, #40]	; 0x28
   15c38:	stm	ip, {r0, r1, r2, r3}
   15c3c:	beq	15dc4 <close@plt+0x4f00>
   15c40:	str	r5, [sp, #80]	; 0x50
   15c44:	str	r6, [sp, #84]	; 0x54
   15c48:	bl	10df8 <__errno_location@plt>
   15c4c:	ldr	r7, [pc, #376]	; 15dcc <close@plt+0x4f08>
   15c50:	ldr	r2, [r7, #4]
   15c54:	ldr	r4, [r7]
   15c58:	cmp	r2, #0
   15c5c:	ldr	r3, [r0]
   15c60:	mov	r8, r0
   15c64:	str	r3, [sp, #24]
   15c68:	movgt	r3, r9
   15c6c:	bgt	15cd4 <close@plt+0x4e10>
   15c70:	add	r5, r7, #8
   15c74:	cmp	r4, r5
   15c78:	str	r2, [sp, #36]	; 0x24
   15c7c:	beq	15d94 <close@plt+0x4ed0>
   15c80:	mov	r3, #8
   15c84:	mov	r0, r4
   15c88:	str	r3, [sp]
   15c8c:	rsb	r2, r2, #1
   15c90:	mvn	r3, #-2147483648	; 0x80000000
   15c94:	add	r1, sp, #36	; 0x24
   15c98:	bl	1717c <close@plt+0x62b8>
   15c9c:	mov	r4, r0
   15ca0:	str	r0, [r7]
   15ca4:	ldr	r0, [r7, #4]
   15ca8:	ldr	r2, [sp, #36]	; 0x24
   15cac:	mov	r1, #0
   15cb0:	sub	r2, r2, r0
   15cb4:	add	r0, r4, r0, lsl #3
   15cb8:	lsl	r2, r2, #3
   15cbc:	bl	10e10 <memset@plt>
   15cc0:	ldr	r3, [sp, #40]	; 0x28
   15cc4:	ldr	r5, [sp, #80]	; 0x50
   15cc8:	ldr	r6, [sp, #84]	; 0x54
   15ccc:	ldr	r2, [sp, #36]	; 0x24
   15cd0:	str	r2, [r7, #4]
   15cd4:	ldr	r2, [sp, #44]	; 0x2c
   15cd8:	ldr	r9, [r4]
   15cdc:	ldr	r7, [r4, #4]
   15ce0:	orr	r2, r2, #1
   15ce4:	str	r3, [sp]
   15ce8:	add	r3, sp, #48	; 0x30
   15cec:	str	r2, [sp, #28]
   15cf0:	str	r2, [sp, #4]
   15cf4:	str	r3, [sp, #8]
   15cf8:	str	r6, [sp, #16]
   15cfc:	str	r5, [sp, #12]
   15d00:	mov	r1, r9
   15d04:	mov	r0, r7
   15d08:	mov	r3, fp
   15d0c:	mov	r2, sl
   15d10:	bl	125e0 <close@plt+0x171c>
   15d14:	cmp	r9, r0
   15d18:	bhi	15d80 <close@plt+0x4ebc>
   15d1c:	ldr	r3, [pc, #172]	; 15dd0 <close@plt+0x4f0c>
   15d20:	add	r5, r0, #1
   15d24:	cmp	r7, r3
   15d28:	str	r5, [r4]
   15d2c:	beq	15d38 <close@plt+0x4e74>
   15d30:	mov	r0, r7
   15d34:	bl	17ab8 <close@plt+0x6bf4>
   15d38:	mov	r0, r5
   15d3c:	bl	16f60 <close@plt+0x609c>
   15d40:	add	lr, sp, #48	; 0x30
   15d44:	ldr	ip, [sp, #84]	; 0x54
   15d48:	mov	r1, r5
   15d4c:	ldr	r5, [sp, #28]
   15d50:	mov	r3, fp
   15d54:	mov	r2, sl
   15d58:	str	r0, [r4, #4]
   15d5c:	ldr	r4, [sp, #80]	; 0x50
   15d60:	str	lr, [sp, #8]
   15d64:	ldr	lr, [sp, #40]	; 0x28
   15d68:	str	r5, [sp, #4]
   15d6c:	str	ip, [sp, #16]
   15d70:	str	r4, [sp, #12]
   15d74:	str	lr, [sp]
   15d78:	mov	r7, r0
   15d7c:	bl	125e0 <close@plt+0x171c>
   15d80:	ldr	r3, [sp, #24]
   15d84:	mov	r0, r7
   15d88:	str	r3, [r8]
   15d8c:	add	sp, sp, #92	; 0x5c
   15d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d94:	mov	r3, #8
   15d98:	str	r3, [sp]
   15d9c:	add	r1, sp, #36	; 0x24
   15da0:	rsb	r2, r2, #1
   15da4:	ldr	r0, [sp, #28]
   15da8:	mvn	r3, #-2147483648	; 0x80000000
   15dac:	bl	1717c <close@plt+0x62b8>
   15db0:	mov	r4, r0
   15db4:	ldm	r5, {r0, r1}
   15db8:	str	r4, [r7]
   15dbc:	stm	r4, {r0, r1}
   15dc0:	b	15ca4 <close@plt+0x4de0>
   15dc4:	bl	10eb8 <abort@plt>
   15dc8:	andeq	sl, r2, r4, lsl #3
   15dcc:	strdeq	sl, [r2], -r4
   15dd0:			; <UNDEFINED> instruction: 0x0002a1b4
   15dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dd8:	sub	sp, sp, #52	; 0x34
   15ddc:	mov	r5, r0
   15de0:	mov	sl, r1
   15de4:	mov	fp, r2
   15de8:	bl	10df8 <__errno_location@plt>
   15dec:	ldr	r4, [pc, #404]	; 15f88 <close@plt+0x50c4>
   15df0:	cmn	r5, #-2147483647	; 0x80000001
   15df4:	ldr	r6, [r4]
   15df8:	mov	r8, r0
   15dfc:	movne	r0, #0
   15e00:	moveq	r0, #1
   15e04:	ldr	r3, [r8]
   15e08:	orrs	r0, r0, r5, lsr #31
   15e0c:	str	r3, [sp, #28]
   15e10:	bne	15f84 <close@plt+0x50c0>
   15e14:	ldr	r2, [r4, #4]
   15e18:	cmp	r5, r2
   15e1c:	blt	15e7c <close@plt+0x4fb8>
   15e20:	add	r7, r4, #8
   15e24:	cmp	r6, r7
   15e28:	str	r2, [sp, #44]	; 0x2c
   15e2c:	beq	15f54 <close@plt+0x5090>
   15e30:	mov	r3, #8
   15e34:	sub	r2, r5, r2
   15e38:	mov	r0, r6
   15e3c:	str	r3, [sp]
   15e40:	add	r2, r2, #1
   15e44:	mvn	r3, #-2147483648	; 0x80000000
   15e48:	add	r1, sp, #44	; 0x2c
   15e4c:	bl	1717c <close@plt+0x62b8>
   15e50:	mov	r6, r0
   15e54:	str	r0, [r4]
   15e58:	ldr	r0, [r4, #4]
   15e5c:	ldr	r2, [sp, #44]	; 0x2c
   15e60:	mov	r1, #0
   15e64:	sub	r2, r2, r0
   15e68:	add	r0, r6, r0, lsl #3
   15e6c:	lsl	r2, r2, #3
   15e70:	bl	10e10 <memset@plt>
   15e74:	ldr	r3, [sp, #44]	; 0x2c
   15e78:	str	r3, [r4, #4]
   15e7c:	ldr	r2, [r4, #56]	; 0x38
   15e80:	add	r3, r6, r5, lsl #3
   15e84:	ldr	r1, [r4, #20]
   15e88:	ldr	r7, [r3, #4]
   15e8c:	ldr	r9, [r6, r5, lsl #3]
   15e90:	ldr	ip, [r4, #60]	; 0x3c
   15e94:	str	r3, [sp, #32]
   15e98:	ldr	r3, [r4, #16]
   15e9c:	str	r2, [sp, #12]
   15ea0:	ldr	r2, [pc, #228]	; 15f8c <close@plt+0x50c8>
   15ea4:	orr	r1, r1, #1
   15ea8:	str	r1, [sp, #36]	; 0x24
   15eac:	str	r1, [sp, #4]
   15eb0:	str	r2, [sp, #8]
   15eb4:	str	r3, [sp]
   15eb8:	mov	r0, r7
   15ebc:	mov	r1, r9
   15ec0:	str	ip, [sp, #16]
   15ec4:	mov	r3, fp
   15ec8:	mov	r2, sl
   15ecc:	bl	125e0 <close@plt+0x171c>
   15ed0:	cmp	r9, r0
   15ed4:	bhi	15f40 <close@plt+0x507c>
   15ed8:	ldr	r3, [pc, #176]	; 15f90 <close@plt+0x50cc>
   15edc:	add	r9, r0, #1
   15ee0:	cmp	r7, r3
   15ee4:	str	r9, [r6, r5, lsl #3]
   15ee8:	beq	15ef4 <close@plt+0x5030>
   15eec:	mov	r0, r7
   15ef0:	bl	17ab8 <close@plt+0x6bf4>
   15ef4:	mov	r0, r9
   15ef8:	bl	16f60 <close@plt+0x609c>
   15efc:	ldr	ip, [sp, #32]
   15f00:	ldr	lr, [r4, #60]	; 0x3c
   15f04:	ldr	r5, [r4, #56]	; 0x38
   15f08:	mov	r3, fp
   15f0c:	mov	r2, sl
   15f10:	mov	r1, r9
   15f14:	str	r0, [ip, #4]
   15f18:	ldr	ip, [r4, #16]
   15f1c:	ldr	r4, [pc, #104]	; 15f8c <close@plt+0x50c8>
   15f20:	str	lr, [sp, #16]
   15f24:	str	r4, [sp, #8]
   15f28:	ldr	r4, [sp, #36]	; 0x24
   15f2c:	str	r5, [sp, #12]
   15f30:	str	r4, [sp, #4]
   15f34:	str	ip, [sp]
   15f38:	mov	r7, r0
   15f3c:	bl	125e0 <close@plt+0x171c>
   15f40:	ldr	r3, [sp, #28]
   15f44:	mov	r0, r7
   15f48:	str	r3, [r8]
   15f4c:	add	sp, sp, #52	; 0x34
   15f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f54:	mov	r3, #8
   15f58:	sub	r2, r5, r2
   15f5c:	str	r3, [sp]
   15f60:	add	r1, sp, #44	; 0x2c
   15f64:	add	r2, r2, #1
   15f68:	mvn	r3, #-2147483648	; 0x80000000
   15f6c:	bl	1717c <close@plt+0x62b8>
   15f70:	mov	r6, r0
   15f74:	ldm	r7, {r0, r1}
   15f78:	str	r6, [r4]
   15f7c:	stm	r6, {r0, r1}
   15f80:	b	15e58 <close@plt+0x4f94>
   15f84:	bl	10eb8 <abort@plt>
   15f88:	strdeq	sl, [r2], -r4
   15f8c:	andeq	sl, r2, ip, lsl #2
   15f90:			; <UNDEFINED> instruction: 0x0002a1b4
   15f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f98:	sub	sp, sp, #44	; 0x2c
   15f9c:	mov	r9, r0
   15fa0:	mov	sl, r1
   15fa4:	bl	10df8 <__errno_location@plt>
   15fa8:	ldr	r4, [pc, #360]	; 16118 <close@plt+0x5254>
   15fac:	ldr	r2, [r4, #4]
   15fb0:	ldr	r5, [r4]
   15fb4:	cmp	r2, #0
   15fb8:	ldr	r3, [r0]
   15fbc:	mov	r7, r0
   15fc0:	str	r3, [sp, #24]
   15fc4:	bgt	16020 <close@plt+0x515c>
   15fc8:	add	r6, r4, #8
   15fcc:	cmp	r5, r6
   15fd0:	str	r2, [sp, #36]	; 0x24
   15fd4:	beq	160e8 <close@plt+0x5224>
   15fd8:	mov	r3, #8
   15fdc:	mov	r0, r5
   15fe0:	str	r3, [sp]
   15fe4:	rsb	r2, r2, #1
   15fe8:	mvn	r3, #-2147483648	; 0x80000000
   15fec:	add	r1, sp, #36	; 0x24
   15ff0:	bl	1717c <close@plt+0x62b8>
   15ff4:	mov	r5, r0
   15ff8:	str	r0, [r4]
   15ffc:	ldr	r0, [r4, #4]
   16000:	ldr	r2, [sp, #36]	; 0x24
   16004:	mov	r1, #0
   16008:	sub	r2, r2, r0
   1600c:	add	r0, r5, r0, lsl #3
   16010:	lsl	r2, r2, #3
   16014:	bl	10e10 <memset@plt>
   16018:	ldr	r3, [sp, #36]	; 0x24
   1601c:	str	r3, [r4, #4]
   16020:	ldr	r1, [r4, #20]
   16024:	ldr	r8, [r5]
   16028:	ldr	r6, [r5, #4]
   1602c:	ldr	r2, [r4, #56]	; 0x38
   16030:	ldr	r3, [r4, #16]
   16034:	ldr	ip, [r4, #60]	; 0x3c
   16038:	ldr	fp, [pc, #220]	; 1611c <close@plt+0x5258>
   1603c:	orr	r1, r1, #1
   16040:	str	r1, [sp, #28]
   16044:	str	r1, [sp, #4]
   16048:	str	r2, [sp, #12]
   1604c:	str	r3, [sp]
   16050:	mov	r1, r8
   16054:	mov	r0, r6
   16058:	str	ip, [sp, #16]
   1605c:	str	fp, [sp, #8]
   16060:	mov	r3, sl
   16064:	mov	r2, r9
   16068:	bl	125e0 <close@plt+0x171c>
   1606c:	cmp	r8, r0
   16070:	bhi	160d4 <close@plt+0x5210>
   16074:	ldr	r3, [pc, #164]	; 16120 <close@plt+0x525c>
   16078:	add	r8, r0, #1
   1607c:	cmp	r6, r3
   16080:	str	r8, [r5]
   16084:	beq	16090 <close@plt+0x51cc>
   16088:	mov	r0, r6
   1608c:	bl	17ab8 <close@plt+0x6bf4>
   16090:	mov	r0, r8
   16094:	bl	16f60 <close@plt+0x609c>
   16098:	ldr	lr, [r4, #60]	; 0x3c
   1609c:	ldr	ip, [r4, #16]
   160a0:	mov	r3, sl
   160a4:	mov	r2, r9
   160a8:	mov	r1, r8
   160ac:	str	r0, [r5, #4]
   160b0:	ldr	r5, [r4, #56]	; 0x38
   160b4:	ldr	r4, [sp, #28]
   160b8:	str	fp, [sp, #8]
   160bc:	str	r4, [sp, #4]
   160c0:	str	lr, [sp, #16]
   160c4:	str	r5, [sp, #12]
   160c8:	str	ip, [sp]
   160cc:	mov	r6, r0
   160d0:	bl	125e0 <close@plt+0x171c>
   160d4:	ldr	r3, [sp, #24]
   160d8:	mov	r0, r6
   160dc:	str	r3, [r7]
   160e0:	add	sp, sp, #44	; 0x2c
   160e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160e8:	mov	r3, #8
   160ec:	str	r3, [sp]
   160f0:	add	r1, sp, #36	; 0x24
   160f4:	rsb	r2, r2, #1
   160f8:	mvn	r3, #-2147483648	; 0x80000000
   160fc:	mov	r0, #0
   16100:	bl	1717c <close@plt+0x62b8>
   16104:	mov	r5, r0
   16108:	ldm	r6, {r0, r1}
   1610c:	str	r5, [r4]
   16110:	stm	r5, {r0, r1}
   16114:	b	15ffc <close@plt+0x5138>
   16118:	strdeq	sl, [r2], -r4
   1611c:	andeq	sl, r2, ip, lsl #2
   16120:			; <UNDEFINED> instruction: 0x0002a1b4
   16124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16128:	sub	sp, sp, #44	; 0x2c
   1612c:	mov	r5, r0
   16130:	mov	sl, r1
   16134:	bl	10df8 <__errno_location@plt>
   16138:	ldr	r4, [pc, #396]	; 162cc <close@plt+0x5408>
   1613c:	cmn	r5, #-2147483647	; 0x80000001
   16140:	ldr	r6, [r4]
   16144:	mov	r8, r0
   16148:	movne	r0, #0
   1614c:	moveq	r0, #1
   16150:	ldr	r3, [r8]
   16154:	orrs	r0, r0, r5, lsr #31
   16158:	str	r3, [sp, #24]
   1615c:	bne	162c8 <close@plt+0x5404>
   16160:	ldr	r2, [r4, #4]
   16164:	cmp	r5, r2
   16168:	blt	161c8 <close@plt+0x5304>
   1616c:	add	r7, r4, #8
   16170:	cmp	r6, r7
   16174:	str	r2, [sp, #36]	; 0x24
   16178:	beq	16298 <close@plt+0x53d4>
   1617c:	mov	r3, #8
   16180:	sub	r2, r5, r2
   16184:	mov	r0, r6
   16188:	str	r3, [sp]
   1618c:	add	r2, r2, #1
   16190:	mvn	r3, #-2147483648	; 0x80000000
   16194:	add	r1, sp, #36	; 0x24
   16198:	bl	1717c <close@plt+0x62b8>
   1619c:	mov	r6, r0
   161a0:	str	r0, [r4]
   161a4:	ldr	r0, [r4, #4]
   161a8:	ldr	r2, [sp, #36]	; 0x24
   161ac:	mov	r1, #0
   161b0:	sub	r2, r2, r0
   161b4:	add	r0, r6, r0, lsl #3
   161b8:	lsl	r2, r2, #3
   161bc:	bl	10e10 <memset@plt>
   161c0:	ldr	r3, [sp, #36]	; 0x24
   161c4:	str	r3, [r4, #4]
   161c8:	ldr	r2, [r4, #56]	; 0x38
   161cc:	add	fp, r6, r5, lsl #3
   161d0:	ldr	r1, [r4, #20]
   161d4:	ldr	r9, [r6, r5, lsl #3]
   161d8:	ldr	r7, [fp, #4]
   161dc:	ldr	r3, [r4, #16]
   161e0:	ldr	ip, [r4, #60]	; 0x3c
   161e4:	str	r2, [sp, #12]
   161e8:	ldr	r2, [pc, #224]	; 162d0 <close@plt+0x540c>
   161ec:	orr	r1, r1, #1
   161f0:	str	r1, [sp, #28]
   161f4:	str	r1, [sp, #4]
   161f8:	str	r2, [sp, #8]
   161fc:	str	r3, [sp]
   16200:	mov	r0, r7
   16204:	mov	r1, r9
   16208:	str	ip, [sp, #16]
   1620c:	mvn	r3, #0
   16210:	mov	r2, sl
   16214:	bl	125e0 <close@plt+0x171c>
   16218:	cmp	r9, r0
   1621c:	bhi	16284 <close@plt+0x53c0>
   16220:	ldr	r3, [pc, #172]	; 162d4 <close@plt+0x5410>
   16224:	add	r9, r0, #1
   16228:	cmp	r7, r3
   1622c:	str	r9, [r6, r5, lsl #3]
   16230:	beq	1623c <close@plt+0x5378>
   16234:	mov	r0, r7
   16238:	bl	17ab8 <close@plt+0x6bf4>
   1623c:	mov	r0, r9
   16240:	bl	16f60 <close@plt+0x609c>
   16244:	ldr	ip, [r4, #60]	; 0x3c
   16248:	ldr	r3, [r4, #16]
   1624c:	ldr	lr, [r4, #56]	; 0x38
   16250:	ldr	r4, [pc, #120]	; 162d0 <close@plt+0x540c>
   16254:	mov	r2, sl
   16258:	mov	r1, r9
   1625c:	str	r0, [fp, #4]
   16260:	str	r4, [sp, #8]
   16264:	ldr	r4, [sp, #28]
   16268:	str	r3, [sp]
   1626c:	str	r4, [sp, #4]
   16270:	str	ip, [sp, #16]
   16274:	str	lr, [sp, #12]
   16278:	mvn	r3, #0
   1627c:	mov	r7, r0
   16280:	bl	125e0 <close@plt+0x171c>
   16284:	ldr	r3, [sp, #24]
   16288:	mov	r0, r7
   1628c:	str	r3, [r8]
   16290:	add	sp, sp, #44	; 0x2c
   16294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16298:	mov	r3, #8
   1629c:	sub	r2, r5, r2
   162a0:	str	r3, [sp]
   162a4:	add	r1, sp, #36	; 0x24
   162a8:	add	r2, r2, #1
   162ac:	mvn	r3, #-2147483648	; 0x80000000
   162b0:	bl	1717c <close@plt+0x62b8>
   162b4:	mov	r6, r0
   162b8:	ldm	r7, {r0, r1}
   162bc:	str	r6, [r4]
   162c0:	stm	r6, {r0, r1}
   162c4:	b	161a4 <close@plt+0x52e0>
   162c8:	bl	10eb8 <abort@plt>
   162cc:	strdeq	sl, [r2], -r4
   162d0:	andeq	sl, r2, ip, lsl #2
   162d4:			; <UNDEFINED> instruction: 0x0002a1b4
   162d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162dc:	sub	sp, sp, #44	; 0x2c
   162e0:	mov	sl, r0
   162e4:	bl	10df8 <__errno_location@plt>
   162e8:	ldr	r4, [pc, #348]	; 1644c <close@plt+0x5588>
   162ec:	ldr	r2, [r4, #4]
   162f0:	ldr	r5, [r4]
   162f4:	cmp	r2, #0
   162f8:	ldr	r3, [r0]
   162fc:	mov	r8, r0
   16300:	str	r3, [sp, #28]
   16304:	bgt	16360 <close@plt+0x549c>
   16308:	add	r6, r4, #8
   1630c:	cmp	r5, r6
   16310:	str	r2, [sp, #36]	; 0x24
   16314:	beq	1641c <close@plt+0x5558>
   16318:	mov	r3, #8
   1631c:	mov	r0, r5
   16320:	str	r3, [sp]
   16324:	rsb	r2, r2, #1
   16328:	mvn	r3, #-2147483648	; 0x80000000
   1632c:	add	r1, sp, #36	; 0x24
   16330:	bl	1717c <close@plt+0x62b8>
   16334:	mov	r5, r0
   16338:	str	r0, [r4]
   1633c:	ldr	r0, [r4, #4]
   16340:	ldr	r2, [sp, #36]	; 0x24
   16344:	mov	r1, #0
   16348:	sub	r2, r2, r0
   1634c:	add	r0, r5, r0, lsl #3
   16350:	lsl	r2, r2, #3
   16354:	bl	10e10 <memset@plt>
   16358:	ldr	r3, [sp, #36]	; 0x24
   1635c:	str	r3, [r4, #4]
   16360:	ldr	r7, [r4, #20]
   16364:	ldr	r9, [r5]
   16368:	ldr	r6, [r5, #4]
   1636c:	ldr	r2, [r4, #56]	; 0x38
   16370:	ldr	r3, [r4, #16]
   16374:	ldr	ip, [r4, #60]	; 0x3c
   16378:	ldr	fp, [pc, #208]	; 16450 <close@plt+0x558c>
   1637c:	orr	r7, r7, #1
   16380:	str	r2, [sp, #12]
   16384:	str	r3, [sp]
   16388:	str	r7, [sp, #4]
   1638c:	mov	r1, r9
   16390:	mov	r0, r6
   16394:	str	ip, [sp, #16]
   16398:	str	fp, [sp, #8]
   1639c:	mvn	r3, #0
   163a0:	mov	r2, sl
   163a4:	bl	125e0 <close@plt+0x171c>
   163a8:	cmp	r9, r0
   163ac:	bhi	16408 <close@plt+0x5544>
   163b0:	ldr	r3, [pc, #156]	; 16454 <close@plt+0x5590>
   163b4:	add	r9, r0, #1
   163b8:	cmp	r6, r3
   163bc:	str	r9, [r5]
   163c0:	beq	163cc <close@plt+0x5508>
   163c4:	mov	r0, r6
   163c8:	bl	17ab8 <close@plt+0x6bf4>
   163cc:	mov	r0, r9
   163d0:	bl	16f60 <close@plt+0x609c>
   163d4:	ldr	ip, [r4, #60]	; 0x3c
   163d8:	ldr	r3, [r4, #16]
   163dc:	ldr	lr, [r4, #56]	; 0x38
   163e0:	mov	r2, sl
   163e4:	mov	r1, r9
   163e8:	str	r0, [r5, #4]
   163ec:	str	r3, [sp]
   163f0:	stmib	sp, {r7, fp}
   163f4:	str	ip, [sp, #16]
   163f8:	str	lr, [sp, #12]
   163fc:	mvn	r3, #0
   16400:	mov	r6, r0
   16404:	bl	125e0 <close@plt+0x171c>
   16408:	ldr	r3, [sp, #28]
   1640c:	mov	r0, r6
   16410:	str	r3, [r8]
   16414:	add	sp, sp, #44	; 0x2c
   16418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1641c:	mov	r3, #8
   16420:	str	r3, [sp]
   16424:	add	r1, sp, #36	; 0x24
   16428:	rsb	r2, r2, #1
   1642c:	mvn	r3, #-2147483648	; 0x80000000
   16430:	mov	r0, #0
   16434:	bl	1717c <close@plt+0x62b8>
   16438:	mov	r5, r0
   1643c:	ldm	r6, {r0, r1}
   16440:	str	r5, [r4]
   16444:	stm	r5, {r0, r1}
   16448:	b	1633c <close@plt+0x5478>
   1644c:	strdeq	sl, [r2], -r4
   16450:	andeq	sl, r2, ip, lsl #2
   16454:			; <UNDEFINED> instruction: 0x0002a1b4
   16458:	push	{r4, r5, r6, lr}
   1645c:	mov	r5, r1
   16460:	mov	r1, #0
   16464:	mov	r4, r2
   16468:	bl	10e70 <setlocale@plt>
   1646c:	subs	r6, r0, #0
   16470:	beq	164cc <close@plt+0x5608>
   16474:	bl	10dec <strlen@plt>
   16478:	cmp	r4, r0
   1647c:	bhi	164b4 <close@plt+0x55f0>
   16480:	cmp	r4, #0
   16484:	bne	16490 <close@plt+0x55cc>
   16488:	mov	r0, #34	; 0x22
   1648c:	pop	{r4, r5, r6, pc}
   16490:	sub	r4, r4, #1
   16494:	mov	r1, r6
   16498:	mov	r2, r4
   1649c:	mov	r0, r5
   164a0:	bl	10cd8 <memcpy@plt>
   164a4:	mov	r3, #0
   164a8:	strb	r3, [r5, r4]
   164ac:	mov	r0, #34	; 0x22
   164b0:	pop	{r4, r5, r6, pc}
   164b4:	add	r2, r0, #1
   164b8:	mov	r1, r6
   164bc:	mov	r0, r5
   164c0:	bl	10cd8 <memcpy@plt>
   164c4:	mov	r0, #0
   164c8:	pop	{r4, r5, r6, pc}
   164cc:	cmp	r4, #0
   164d0:	beq	164e0 <close@plt+0x561c>
   164d4:	strb	r6, [r5]
   164d8:	mov	r0, #22
   164dc:	pop	{r4, r5, r6, pc}
   164e0:	mov	r0, #22
   164e4:	pop	{r4, r5, r6, pc}
   164e8:	mov	r1, #0
   164ec:	b	10e70 <setlocale@plt>
   164f0:	mov	r2, #3
   164f4:	mov	r1, #0
   164f8:	b	178e4 <close@plt+0x6a20>
   164fc:	push	{r4, r5, r6, lr}
   16500:	sub	sp, sp, #32
   16504:	cmp	r1, #0
   16508:	mov	r4, r0
   1650c:	ldr	r5, [sp, #48]	; 0x30
   16510:	ldr	r6, [sp, #52]	; 0x34
   16514:	beq	1682c <close@plt+0x5968>
   16518:	stm	sp, {r2, r3}
   1651c:	mov	r3, r1
   16520:	ldr	r2, [pc, #808]	; 16850 <close@plt+0x598c>
   16524:	mov	r1, #1
   16528:	bl	10e34 <__fprintf_chk@plt>
   1652c:	mov	r2, #5
   16530:	ldr	r1, [pc, #796]	; 16854 <close@plt+0x5990>
   16534:	mov	r0, #0
   16538:	bl	10d14 <dcgettext@plt>
   1653c:	ldr	r3, [pc, #788]	; 16858 <close@plt+0x5994>
   16540:	ldr	r2, [pc, #788]	; 1685c <close@plt+0x5998>
   16544:	str	r3, [sp]
   16548:	mov	r1, #1
   1654c:	mov	r3, r0
   16550:	mov	r0, r4
   16554:	bl	10e34 <__fprintf_chk@plt>
   16558:	mov	r1, r4
   1655c:	mov	r0, #10
   16560:	bl	10d08 <fputc_unlocked@plt>
   16564:	mov	r2, #5
   16568:	ldr	r1, [pc, #752]	; 16860 <close@plt+0x599c>
   1656c:	mov	r0, #0
   16570:	bl	10d14 <dcgettext@plt>
   16574:	mov	r1, #1
   16578:	ldr	r3, [pc, #740]	; 16864 <close@plt+0x59a0>
   1657c:	mov	r2, r0
   16580:	mov	r0, r4
   16584:	bl	10e34 <__fprintf_chk@plt>
   16588:	mov	r1, r4
   1658c:	mov	r0, #10
   16590:	bl	10d08 <fputc_unlocked@plt>
   16594:	cmp	r6, #9
   16598:	ldrls	pc, [pc, r6, lsl #2]
   1659c:	b	16844 <close@plt+0x5980>
   165a0:	andeq	r6, r1, r4, lsr #12
   165a4:	andeq	r6, r1, ip, lsr #12
   165a8:	andeq	r6, r1, r8, asr r6
   165ac:	andeq	r6, r1, ip, lsl #13
   165b0:	andeq	r6, r1, r8, asr #13
   165b4:	andeq	r6, r1, r4, lsl #14
   165b8:	andeq	r6, r1, r0, asr #14
   165bc:	andeq	r6, r1, r4, lsl #15
   165c0:	ldrdeq	r6, [r1], -r4
   165c4:	andeq	r6, r1, r8, asr #11
   165c8:	ldr	r1, [pc, #664]	; 16868 <close@plt+0x59a4>
   165cc:	mov	r2, #5
   165d0:	mov	r0, #0
   165d4:	bl	10d14 <dcgettext@plt>
   165d8:	ldr	ip, [r5, #32]
   165dc:	ldr	r1, [r5, #28]
   165e0:	ldr	r2, [r5, #24]
   165e4:	ldr	r3, [r5]
   165e8:	ldr	r6, [r5, #20]
   165ec:	str	ip, [sp, #28]
   165f0:	ldr	lr, [r5, #16]
   165f4:	str	r1, [sp, #24]
   165f8:	ldr	ip, [r5, #12]
   165fc:	str	r2, [sp, #20]
   16600:	ldr	r1, [r5, #8]
   16604:	ldr	r2, [r5, #4]
   16608:	str	r6, [sp, #16]
   1660c:	stmib	sp, {r1, ip, lr}
   16610:	mov	r1, #1
   16614:	str	r2, [sp]
   16618:	mov	r2, r0
   1661c:	mov	r0, r4
   16620:	bl	10e34 <__fprintf_chk@plt>
   16624:	add	sp, sp, #32
   16628:	pop	{r4, r5, r6, pc}
   1662c:	mov	r2, #5
   16630:	ldr	r1, [pc, #564]	; 1686c <close@plt+0x59a8>
   16634:	mov	r0, #0
   16638:	bl	10d14 <dcgettext@plt>
   1663c:	ldr	r3, [r5]
   16640:	mov	r1, #1
   16644:	mov	r2, r0
   16648:	mov	r0, r4
   1664c:	add	sp, sp, #32
   16650:	pop	{r4, r5, r6, lr}
   16654:	b	10e34 <__fprintf_chk@plt>
   16658:	mov	r2, #5
   1665c:	ldr	r1, [pc, #524]	; 16870 <close@plt+0x59ac>
   16660:	mov	r0, #0
   16664:	bl	10d14 <dcgettext@plt>
   16668:	ldr	r2, [r5, #4]
   1666c:	ldr	r3, [r5]
   16670:	mov	r1, #1
   16674:	str	r2, [sp, #48]	; 0x30
   16678:	mov	r2, r0
   1667c:	mov	r0, r4
   16680:	add	sp, sp, #32
   16684:	pop	{r4, r5, r6, lr}
   16688:	b	10e34 <__fprintf_chk@plt>
   1668c:	mov	r2, #5
   16690:	ldr	r1, [pc, #476]	; 16874 <close@plt+0x59b0>
   16694:	mov	r0, #0
   16698:	bl	10d14 <dcgettext@plt>
   1669c:	ldr	r1, [r5, #8]
   166a0:	ldr	r2, [r5, #4]
   166a4:	ldr	r3, [r5]
   166a8:	str	r1, [sp, #52]	; 0x34
   166ac:	str	r2, [sp, #48]	; 0x30
   166b0:	mov	r1, #1
   166b4:	mov	r2, r0
   166b8:	mov	r0, r4
   166bc:	add	sp, sp, #32
   166c0:	pop	{r4, r5, r6, lr}
   166c4:	b	10e34 <__fprintf_chk@plt>
   166c8:	mov	r2, #5
   166cc:	ldr	r1, [pc, #420]	; 16878 <close@plt+0x59b4>
   166d0:	mov	r0, #0
   166d4:	bl	10d14 <dcgettext@plt>
   166d8:	ldr	r1, [r5, #8]
   166dc:	ldr	ip, [r5, #12]
   166e0:	ldr	r2, [r5, #4]
   166e4:	ldr	r3, [r5]
   166e8:	stmib	sp, {r1, ip}
   166ec:	str	r2, [sp]
   166f0:	mov	r1, #1
   166f4:	mov	r2, r0
   166f8:	mov	r0, r4
   166fc:	bl	10e34 <__fprintf_chk@plt>
   16700:	b	16624 <close@plt+0x5760>
   16704:	mov	r2, #5
   16708:	ldr	r1, [pc, #364]	; 1687c <close@plt+0x59b8>
   1670c:	mov	r0, #0
   16710:	bl	10d14 <dcgettext@plt>
   16714:	add	r1, r5, #8
   16718:	ldr	r2, [r5, #4]
   1671c:	ldm	r1, {r1, ip, lr}
   16720:	ldr	r3, [r5]
   16724:	str	r2, [sp]
   16728:	stmib	sp, {r1, ip, lr}
   1672c:	mov	r1, #1
   16730:	mov	r2, r0
   16734:	mov	r0, r4
   16738:	bl	10e34 <__fprintf_chk@plt>
   1673c:	b	16624 <close@plt+0x5760>
   16740:	mov	r2, #5
   16744:	ldr	r1, [pc, #308]	; 16880 <close@plt+0x59bc>
   16748:	mov	r0, #0
   1674c:	bl	10d14 <dcgettext@plt>
   16750:	add	r1, r5, #8
   16754:	ldr	r2, [r5, #4]
   16758:	ldm	r1, {r1, ip, lr}
   1675c:	ldr	r6, [r5, #20]
   16760:	ldr	r3, [r5]
   16764:	stmib	sp, {r1, ip, lr}
   16768:	mov	r1, #1
   1676c:	str	r2, [sp]
   16770:	str	r6, [sp, #16]
   16774:	mov	r2, r0
   16778:	mov	r0, r4
   1677c:	bl	10e34 <__fprintf_chk@plt>
   16780:	b	16624 <close@plt+0x5760>
   16784:	mov	r2, #5
   16788:	ldr	r1, [pc, #244]	; 16884 <close@plt+0x59c0>
   1678c:	mov	r0, #0
   16790:	bl	10d14 <dcgettext@plt>
   16794:	ldr	r2, [r5, #24]
   16798:	ldr	r3, [r5]
   1679c:	ldr	r6, [r5, #20]
   167a0:	ldr	lr, [r5, #16]
   167a4:	ldr	ip, [r5, #12]
   167a8:	str	r2, [sp, #20]
   167ac:	ldr	r1, [r5, #8]
   167b0:	ldr	r2, [r5, #4]
   167b4:	str	r6, [sp, #16]
   167b8:	stmib	sp, {r1, ip, lr}
   167bc:	mov	r1, #1
   167c0:	str	r2, [sp]
   167c4:	mov	r2, r0
   167c8:	mov	r0, r4
   167cc:	bl	10e34 <__fprintf_chk@plt>
   167d0:	b	16624 <close@plt+0x5760>
   167d4:	mov	r2, #5
   167d8:	ldr	r1, [pc, #168]	; 16888 <close@plt+0x59c4>
   167dc:	mov	r0, #0
   167e0:	bl	10d14 <dcgettext@plt>
   167e4:	ldr	r1, [r5, #28]
   167e8:	ldr	r2, [r5, #24]
   167ec:	ldr	r3, [r5]
   167f0:	ldr	r6, [r5, #20]
   167f4:	ldr	lr, [r5, #16]
   167f8:	str	r1, [sp, #24]
   167fc:	ldr	ip, [r5, #12]
   16800:	str	r2, [sp, #20]
   16804:	ldr	r1, [r5, #8]
   16808:	ldr	r2, [r5, #4]
   1680c:	str	r6, [sp, #16]
   16810:	stmib	sp, {r1, ip, lr}
   16814:	mov	r1, #1
   16818:	str	r2, [sp]
   1681c:	mov	r2, r0
   16820:	mov	r0, r4
   16824:	bl	10e34 <__fprintf_chk@plt>
   16828:	b	16624 <close@plt+0x5760>
   1682c:	str	r3, [sp]
   16830:	mov	r1, #1
   16834:	mov	r3, r2
   16838:	ldr	r2, [pc, #76]	; 1688c <close@plt+0x59c8>
   1683c:	bl	10e34 <__fprintf_chk@plt>
   16840:	b	1652c <close@plt+0x5668>
   16844:	mov	r2, #5
   16848:	ldr	r1, [pc, #64]	; 16890 <close@plt+0x59cc>
   1684c:	b	165d0 <close@plt+0x570c>
   16850:	ldrdeq	r8, [r1], -r4
   16854:	andeq	r8, r1, r8, ror #27
   16858:	andeq	r0, r0, r6, ror #15
   1685c:	andeq	r9, r1, r0, asr #1
   16860:	andeq	r8, r1, ip, ror #27
   16864:	muleq	r1, r8, lr
   16868:	andeq	r8, r1, r8, asr #31
   1686c:			; <UNDEFINED> instruction: 0x00018ebc
   16870:	andeq	r8, r1, ip, asr #29
   16874:	andeq	r8, r1, r4, ror #29
   16878:	andeq	r8, r1, r0, lsl #30
   1687c:	andeq	r8, r1, r0, lsr #30
   16880:	andeq	r8, r1, r4, asr #30
   16884:	andeq	r8, r1, ip, ror #30
   16888:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1688c:	andeq	r8, r1, r0, ror #27
   16890:	strdeq	r8, [r1], -ip
   16894:	push	{r4, r5, lr}
   16898:	sub	sp, sp, #12
   1689c:	ldr	r5, [sp, #24]
   168a0:	ldr	ip, [r5]
   168a4:	cmp	ip, #0
   168a8:	beq	168c4 <close@plt+0x5a00>
   168ac:	mov	lr, r5
   168b0:	mov	ip, #0
   168b4:	ldr	r4, [lr, #4]!
   168b8:	add	ip, ip, #1
   168bc:	cmp	r4, #0
   168c0:	bne	168b4 <close@plt+0x59f0>
   168c4:	stm	sp, {r5, ip}
   168c8:	bl	164fc <close@plt+0x5638>
   168cc:	add	sp, sp, #12
   168d0:	pop	{r4, r5, pc}
   168d4:	push	{r4, r5, lr}
   168d8:	sub	sp, sp, #76	; 0x4c
   168dc:	mov	r5, r0
   168e0:	ldr	ip, [sp, #88]	; 0x58
   168e4:	ldr	r0, [ip]
   168e8:	cmp	r0, #0
   168ec:	str	r0, [sp, #32]
   168f0:	beq	16cc4 <close@plt+0x5e00>
   168f4:	ldr	r0, [ip, #4]
   168f8:	cmp	r0, #0
   168fc:	str	r0, [sp, #36]	; 0x24
   16900:	beq	16ccc <close@plt+0x5e08>
   16904:	ldr	r0, [ip, #8]
   16908:	cmp	r0, #0
   1690c:	str	r0, [sp, #40]	; 0x28
   16910:	beq	16cd4 <close@plt+0x5e10>
   16914:	ldr	r0, [ip, #12]
   16918:	cmp	r0, #0
   1691c:	str	r0, [sp, #44]	; 0x2c
   16920:	beq	16cdc <close@plt+0x5e18>
   16924:	ldr	r0, [ip, #16]
   16928:	cmp	r0, #0
   1692c:	str	r0, [sp, #48]	; 0x30
   16930:	beq	16ce4 <close@plt+0x5e20>
   16934:	ldr	r0, [ip, #20]
   16938:	cmp	r0, #0
   1693c:	str	r0, [sp, #52]	; 0x34
   16940:	beq	16cec <close@plt+0x5e28>
   16944:	ldr	r0, [ip, #24]
   16948:	cmp	r0, #0
   1694c:	str	r0, [sp, #56]	; 0x38
   16950:	beq	16cf4 <close@plt+0x5e30>
   16954:	ldr	r0, [ip, #28]
   16958:	cmp	r0, #0
   1695c:	str	r0, [sp, #60]	; 0x3c
   16960:	beq	16cfc <close@plt+0x5e38>
   16964:	ldr	r0, [ip, #32]
   16968:	cmp	r0, #0
   1696c:	str	r0, [sp, #64]	; 0x40
   16970:	beq	16d04 <close@plt+0x5e40>
   16974:	ldr	r0, [ip, #36]	; 0x24
   16978:	cmp	r0, #0
   1697c:	movne	r4, #10
   16980:	moveq	r4, #9
   16984:	cmp	r1, #0
   16988:	beq	16c9c <close@plt+0x5dd8>
   1698c:	stm	sp, {r2, r3}
   16990:	mov	r0, r5
   16994:	mov	r3, r1
   16998:	ldr	r2, [pc, #876]	; 16d0c <close@plt+0x5e48>
   1699c:	mov	r1, #1
   169a0:	bl	10e34 <__fprintf_chk@plt>
   169a4:	mov	r2, #5
   169a8:	ldr	r1, [pc, #864]	; 16d10 <close@plt+0x5e4c>
   169ac:	mov	r0, #0
   169b0:	bl	10d14 <dcgettext@plt>
   169b4:	ldr	r3, [pc, #856]	; 16d14 <close@plt+0x5e50>
   169b8:	ldr	r2, [pc, #856]	; 16d18 <close@plt+0x5e54>
   169bc:	str	r3, [sp]
   169c0:	mov	r1, #1
   169c4:	mov	r3, r0
   169c8:	mov	r0, r5
   169cc:	bl	10e34 <__fprintf_chk@plt>
   169d0:	mov	r1, r5
   169d4:	mov	r0, #10
   169d8:	bl	10d08 <fputc_unlocked@plt>
   169dc:	mov	r2, #5
   169e0:	ldr	r1, [pc, #820]	; 16d1c <close@plt+0x5e58>
   169e4:	mov	r0, #0
   169e8:	bl	10d14 <dcgettext@plt>
   169ec:	mov	r1, #1
   169f0:	ldr	r3, [pc, #808]	; 16d20 <close@plt+0x5e5c>
   169f4:	mov	r2, r0
   169f8:	mov	r0, r5
   169fc:	bl	10e34 <__fprintf_chk@plt>
   16a00:	mov	r1, r5
   16a04:	mov	r0, #10
   16a08:	bl	10d08 <fputc_unlocked@plt>
   16a0c:	cmp	r4, #9
   16a10:	ldrls	pc, [pc, r4, lsl #2]
   16a14:	b	16cb8 <close@plt+0x5df4>
   16a18:	muleq	r1, ip, sl
   16a1c:	andeq	r6, r1, r4, lsr #21
   16a20:	ldrdeq	r6, [r1], -r0
   16a24:	andeq	r6, r1, r4, lsl #22
   16a28:	andeq	r6, r1, ip, lsr fp
   16a2c:	andeq	r6, r1, r8, ror fp
   16a30:			; <UNDEFINED> instruction: 0x00016bb4
   16a34:	strdeq	r6, [r1], -r8
   16a38:	andeq	r6, r1, r4, asr #24
   16a3c:	andeq	r6, r1, r0, asr #20
   16a40:	ldr	r1, [pc, #732]	; 16d24 <close@plt+0x5e60>
   16a44:	mov	r2, #5
   16a48:	mov	r0, #0
   16a4c:	bl	10d14 <dcgettext@plt>
   16a50:	ldr	ip, [sp, #64]	; 0x40
   16a54:	ldr	r1, [sp, #60]	; 0x3c
   16a58:	ldr	r2, [sp, #56]	; 0x38
   16a5c:	ldr	lr, [sp, #48]	; 0x30
   16a60:	str	ip, [sp, #28]
   16a64:	str	r1, [sp, #24]
   16a68:	ldr	ip, [sp, #44]	; 0x2c
   16a6c:	ldr	r1, [sp, #40]	; 0x28
   16a70:	ldr	r4, [sp, #52]	; 0x34
   16a74:	str	r2, [sp, #20]
   16a78:	ldr	r2, [sp, #36]	; 0x24
   16a7c:	stmib	sp, {r1, ip, lr}
   16a80:	mov	r1, #1
   16a84:	str	r2, [sp]
   16a88:	ldr	r3, [sp, #32]
   16a8c:	str	r4, [sp, #16]
   16a90:	mov	r2, r0
   16a94:	mov	r0, r5
   16a98:	bl	10e34 <__fprintf_chk@plt>
   16a9c:	add	sp, sp, #76	; 0x4c
   16aa0:	pop	{r4, r5, pc}
   16aa4:	mov	r2, #5
   16aa8:	ldr	r1, [pc, #632]	; 16d28 <close@plt+0x5e64>
   16aac:	mov	r0, #0
   16ab0:	bl	10d14 <dcgettext@plt>
   16ab4:	ldr	r3, [sp, #32]
   16ab8:	mov	r1, #1
   16abc:	mov	r2, r0
   16ac0:	mov	r0, r5
   16ac4:	add	sp, sp, #76	; 0x4c
   16ac8:	pop	{r4, r5, lr}
   16acc:	b	10e34 <__fprintf_chk@plt>
   16ad0:	mov	r2, #5
   16ad4:	ldr	r1, [pc, #592]	; 16d2c <close@plt+0x5e68>
   16ad8:	mov	r0, #0
   16adc:	bl	10d14 <dcgettext@plt>
   16ae0:	ldr	r2, [sp, #36]	; 0x24
   16ae4:	ldr	r3, [sp, #32]
   16ae8:	str	r2, [sp, #88]	; 0x58
   16aec:	mov	r1, #1
   16af0:	mov	r2, r0
   16af4:	mov	r0, r5
   16af8:	add	sp, sp, #76	; 0x4c
   16afc:	pop	{r4, r5, lr}
   16b00:	b	10e34 <__fprintf_chk@plt>
   16b04:	mov	r2, #5
   16b08:	ldr	r1, [pc, #544]	; 16d30 <close@plt+0x5e6c>
   16b0c:	mov	r0, #0
   16b10:	bl	10d14 <dcgettext@plt>
   16b14:	ldr	r1, [sp, #40]	; 0x28
   16b18:	ldr	r2, [sp, #36]	; 0x24
   16b1c:	str	r1, [sp, #4]
   16b20:	str	r2, [sp]
   16b24:	ldr	r3, [sp, #32]
   16b28:	mov	r1, #1
   16b2c:	mov	r2, r0
   16b30:	mov	r0, r5
   16b34:	bl	10e34 <__fprintf_chk@plt>
   16b38:	b	16a9c <close@plt+0x5bd8>
   16b3c:	mov	r2, #5
   16b40:	ldr	r1, [pc, #492]	; 16d34 <close@plt+0x5e70>
   16b44:	mov	r0, #0
   16b48:	bl	10d14 <dcgettext@plt>
   16b4c:	ldr	r1, [sp, #40]	; 0x28
   16b50:	ldr	ip, [sp, #44]	; 0x2c
   16b54:	ldr	r2, [sp, #36]	; 0x24
   16b58:	ldr	r3, [sp, #32]
   16b5c:	stmib	sp, {r1, ip}
   16b60:	str	r2, [sp]
   16b64:	mov	r1, #1
   16b68:	mov	r2, r0
   16b6c:	mov	r0, r5
   16b70:	bl	10e34 <__fprintf_chk@plt>
   16b74:	b	16a9c <close@plt+0x5bd8>
   16b78:	mov	r2, #5
   16b7c:	ldr	r1, [pc, #436]	; 16d38 <close@plt+0x5e74>
   16b80:	mov	r0, #0
   16b84:	bl	10d14 <dcgettext@plt>
   16b88:	add	r1, sp, #40	; 0x28
   16b8c:	ldr	r2, [sp, #36]	; 0x24
   16b90:	ldm	r1, {r1, ip, lr}
   16b94:	ldr	r3, [sp, #32]
   16b98:	str	r2, [sp]
   16b9c:	stmib	sp, {r1, ip, lr}
   16ba0:	mov	r1, #1
   16ba4:	mov	r2, r0
   16ba8:	mov	r0, r5
   16bac:	bl	10e34 <__fprintf_chk@plt>
   16bb0:	b	16a9c <close@plt+0x5bd8>
   16bb4:	mov	r2, #5
   16bb8:	ldr	r1, [pc, #380]	; 16d3c <close@plt+0x5e78>
   16bbc:	mov	r0, #0
   16bc0:	bl	10d14 <dcgettext@plt>
   16bc4:	add	r1, sp, #40	; 0x28
   16bc8:	ldr	r2, [sp, #36]	; 0x24
   16bcc:	ldm	r1, {r1, ip, lr}
   16bd0:	ldr	r4, [sp, #52]	; 0x34
   16bd4:	str	r2, [sp]
   16bd8:	stmib	sp, {r1, ip, lr}
   16bdc:	mov	r1, #1
   16be0:	ldr	r3, [sp, #32]
   16be4:	str	r4, [sp, #16]
   16be8:	mov	r2, r0
   16bec:	mov	r0, r5
   16bf0:	bl	10e34 <__fprintf_chk@plt>
   16bf4:	b	16a9c <close@plt+0x5bd8>
   16bf8:	mov	r2, #5
   16bfc:	ldr	r1, [pc, #316]	; 16d40 <close@plt+0x5e7c>
   16c00:	mov	r0, #0
   16c04:	bl	10d14 <dcgettext@plt>
   16c08:	add	r1, sp, #40	; 0x28
   16c0c:	ldr	r2, [sp, #56]	; 0x38
   16c10:	ldm	r1, {r1, ip, lr}
   16c14:	ldr	r4, [sp, #52]	; 0x34
   16c18:	str	r2, [sp, #20]
   16c1c:	ldr	r2, [sp, #36]	; 0x24
   16c20:	stmib	sp, {r1, ip, lr}
   16c24:	mov	r1, #1
   16c28:	str	r2, [sp]
   16c2c:	ldr	r3, [sp, #32]
   16c30:	str	r4, [sp, #16]
   16c34:	mov	r2, r0
   16c38:	mov	r0, r5
   16c3c:	bl	10e34 <__fprintf_chk@plt>
   16c40:	b	16a9c <close@plt+0x5bd8>
   16c44:	mov	r2, #5
   16c48:	ldr	r1, [pc, #244]	; 16d44 <close@plt+0x5e80>
   16c4c:	mov	r0, #0
   16c50:	bl	10d14 <dcgettext@plt>
   16c54:	ldr	r1, [sp, #60]	; 0x3c
   16c58:	ldr	r2, [sp, #56]	; 0x38
   16c5c:	ldr	lr, [sp, #48]	; 0x30
   16c60:	ldr	ip, [sp, #44]	; 0x2c
   16c64:	str	r1, [sp, #24]
   16c68:	ldr	r1, [sp, #40]	; 0x28
   16c6c:	ldr	r4, [sp, #52]	; 0x34
   16c70:	str	r2, [sp, #20]
   16c74:	ldr	r2, [sp, #36]	; 0x24
   16c78:	stmib	sp, {r1, ip, lr}
   16c7c:	mov	r1, #1
   16c80:	str	r2, [sp]
   16c84:	ldr	r3, [sp, #32]
   16c88:	str	r4, [sp, #16]
   16c8c:	mov	r2, r0
   16c90:	mov	r0, r5
   16c94:	bl	10e34 <__fprintf_chk@plt>
   16c98:	b	16a9c <close@plt+0x5bd8>
   16c9c:	str	r3, [sp]
   16ca0:	mov	r1, #1
   16ca4:	mov	r3, r2
   16ca8:	mov	r0, r5
   16cac:	ldr	r2, [pc, #148]	; 16d48 <close@plt+0x5e84>
   16cb0:	bl	10e34 <__fprintf_chk@plt>
   16cb4:	b	169a4 <close@plt+0x5ae0>
   16cb8:	mov	r2, #5
   16cbc:	ldr	r1, [pc, #136]	; 16d4c <close@plt+0x5e88>
   16cc0:	b	16a48 <close@plt+0x5b84>
   16cc4:	mov	r4, r0
   16cc8:	b	16984 <close@plt+0x5ac0>
   16ccc:	mov	r4, #1
   16cd0:	b	16984 <close@plt+0x5ac0>
   16cd4:	mov	r4, #2
   16cd8:	b	16984 <close@plt+0x5ac0>
   16cdc:	mov	r4, #3
   16ce0:	b	16984 <close@plt+0x5ac0>
   16ce4:	mov	r4, #4
   16ce8:	b	16984 <close@plt+0x5ac0>
   16cec:	mov	r4, #5
   16cf0:	b	16984 <close@plt+0x5ac0>
   16cf4:	mov	r4, #6
   16cf8:	b	16984 <close@plt+0x5ac0>
   16cfc:	mov	r4, #7
   16d00:	b	16984 <close@plt+0x5ac0>
   16d04:	mov	r4, #8
   16d08:	b	16984 <close@plt+0x5ac0>
   16d0c:	ldrdeq	r8, [r1], -r4
   16d10:	andeq	r8, r1, r8, ror #27
   16d14:	andeq	r0, r0, r6, ror #15
   16d18:	andeq	r9, r1, r0, asr #1
   16d1c:	andeq	r8, r1, ip, ror #27
   16d20:	muleq	r1, r8, lr
   16d24:	andeq	r8, r1, r8, asr #31
   16d28:			; <UNDEFINED> instruction: 0x00018ebc
   16d2c:	andeq	r8, r1, ip, asr #29
   16d30:	andeq	r8, r1, r4, ror #29
   16d34:	andeq	r8, r1, r0, lsl #30
   16d38:	andeq	r8, r1, r0, lsr #30
   16d3c:	andeq	r8, r1, r4, asr #30
   16d40:	andeq	r8, r1, ip, ror #30
   16d44:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   16d48:	andeq	r8, r1, r0, ror #27
   16d4c:	strdeq	r8, [r1], -ip
   16d50:	push	{r3}		; (str r3, [sp, #-4]!)
   16d54:	push	{lr}		; (str lr, [sp, #-4]!)
   16d58:	sub	sp, sp, #56	; 0x38
   16d5c:	add	r3, sp, #64	; 0x40
   16d60:	ldr	ip, [sp, #64]	; 0x40
   16d64:	str	r3, [sp, #12]
   16d68:	cmp	ip, #0
   16d6c:	str	ip, [sp, #16]
   16d70:	beq	16e08 <close@plt+0x5f44>
   16d74:	ldr	ip, [sp, #68]	; 0x44
   16d78:	cmp	ip, #0
   16d7c:	str	ip, [sp, #20]
   16d80:	beq	16e28 <close@plt+0x5f64>
   16d84:	ldr	ip, [sp, #72]	; 0x48
   16d88:	cmp	ip, #0
   16d8c:	str	ip, [sp, #24]
   16d90:	beq	16e30 <close@plt+0x5f6c>
   16d94:	ldr	ip, [sp, #76]	; 0x4c
   16d98:	cmp	ip, #0
   16d9c:	str	ip, [sp, #28]
   16da0:	beq	16e38 <close@plt+0x5f74>
   16da4:	ldr	ip, [sp, #80]	; 0x50
   16da8:	cmp	ip, #0
   16dac:	str	ip, [sp, #32]
   16db0:	beq	16e40 <close@plt+0x5f7c>
   16db4:	ldr	ip, [sp, #84]	; 0x54
   16db8:	cmp	ip, #0
   16dbc:	str	ip, [sp, #36]	; 0x24
   16dc0:	beq	16e48 <close@plt+0x5f84>
   16dc4:	ldr	ip, [sp, #88]	; 0x58
   16dc8:	cmp	ip, #0
   16dcc:	str	ip, [sp, #40]	; 0x28
   16dd0:	beq	16e50 <close@plt+0x5f8c>
   16dd4:	ldr	ip, [sp, #92]	; 0x5c
   16dd8:	cmp	ip, #0
   16ddc:	str	ip, [sp, #44]	; 0x2c
   16de0:	beq	16e58 <close@plt+0x5f94>
   16de4:	ldr	ip, [sp, #96]	; 0x60
   16de8:	cmp	ip, #0
   16dec:	str	ip, [sp, #48]	; 0x30
   16df0:	beq	16e60 <close@plt+0x5f9c>
   16df4:	ldr	ip, [sp, #100]	; 0x64
   16df8:	cmp	ip, #0
   16dfc:	str	ip, [sp, #52]	; 0x34
   16e00:	movne	ip, #10
   16e04:	moveq	ip, #9
   16e08:	add	r3, sp, #16
   16e0c:	stm	sp, {r3, ip}
   16e10:	ldr	r3, [sp, #60]	; 0x3c
   16e14:	bl	164fc <close@plt+0x5638>
   16e18:	add	sp, sp, #56	; 0x38
   16e1c:	pop	{lr}		; (ldr lr, [sp], #4)
   16e20:	add	sp, sp, #4
   16e24:	bx	lr
   16e28:	mov	ip, #1
   16e2c:	b	16e08 <close@plt+0x5f44>
   16e30:	mov	ip, #2
   16e34:	b	16e08 <close@plt+0x5f44>
   16e38:	mov	ip, #3
   16e3c:	b	16e08 <close@plt+0x5f44>
   16e40:	mov	ip, #4
   16e44:	b	16e08 <close@plt+0x5f44>
   16e48:	mov	ip, #5
   16e4c:	b	16e08 <close@plt+0x5f44>
   16e50:	mov	ip, #6
   16e54:	b	16e08 <close@plt+0x5f44>
   16e58:	mov	ip, #7
   16e5c:	b	16e08 <close@plt+0x5f44>
   16e60:	mov	ip, #8
   16e64:	b	16e08 <close@plt+0x5f44>
   16e68:	ldr	r3, [pc, #116]	; 16ee4 <close@plt+0x6020>
   16e6c:	push	{r4, lr}
   16e70:	mov	r0, #10
   16e74:	ldr	r1, [r3]
   16e78:	bl	10d08 <fputc_unlocked@plt>
   16e7c:	mov	r2, #5
   16e80:	ldr	r1, [pc, #96]	; 16ee8 <close@plt+0x6024>
   16e84:	mov	r0, #0
   16e88:	bl	10d14 <dcgettext@plt>
   16e8c:	ldr	r2, [pc, #88]	; 16eec <close@plt+0x6028>
   16e90:	mov	r1, r0
   16e94:	mov	r0, #1
   16e98:	bl	10e1c <__printf_chk@plt>
   16e9c:	mov	r2, #5
   16ea0:	ldr	r1, [pc, #72]	; 16ef0 <close@plt+0x602c>
   16ea4:	mov	r0, #0
   16ea8:	bl	10d14 <dcgettext@plt>
   16eac:	ldr	r3, [pc, #64]	; 16ef4 <close@plt+0x6030>
   16eb0:	ldr	r2, [pc, #64]	; 16ef8 <close@plt+0x6034>
   16eb4:	mov	r1, r0
   16eb8:	mov	r0, #1
   16ebc:	bl	10e1c <__printf_chk@plt>
   16ec0:	mov	r2, #5
   16ec4:	ldr	r1, [pc, #48]	; 16efc <close@plt+0x6038>
   16ec8:	mov	r0, #0
   16ecc:	bl	10d14 <dcgettext@plt>
   16ed0:	ldr	r2, [pc, #40]	; 16f00 <close@plt+0x603c>
   16ed4:	pop	{r4, lr}
   16ed8:	mov	r1, r0
   16edc:	mov	r0, #1
   16ee0:	b	10e1c <__printf_chk@plt>
   16ee4:	andeq	sl, r2, r4, asr r1
   16ee8:	andeq	r9, r1, r8, lsr r0
   16eec:	andeq	r9, r1, ip, asr #32
   16ef0:	andeq	r9, r1, r4, rrx
   16ef4:	andeq	r8, r1, r8, ror #19
   16ef8:	andeq	r8, r1, r0, lsl sl
   16efc:	andeq	r9, r1, r8, ror r0
   16f00:	andeq	r9, r1, r0, lsr #1
   16f04:	push	{r4, r5, r6, lr}
   16f08:	mov	r6, r0
   16f0c:	mov	r5, r1
   16f10:	mov	r4, r2
   16f14:	bl	17d68 <close@plt+0x6ea4>
   16f18:	cmp	r0, #0
   16f1c:	popne	{r4, r5, r6, pc}
   16f20:	cmp	r6, #0
   16f24:	beq	16f34 <close@plt+0x6070>
   16f28:	cmp	r5, #0
   16f2c:	cmpne	r4, #0
   16f30:	popeq	{r4, r5, r6, pc}
   16f34:	bl	17580 <close@plt+0x66bc>
   16f38:	push	{r4, lr}
   16f3c:	bl	177e0 <close@plt+0x691c>
   16f40:	cmp	r0, #0
   16f44:	popne	{r4, pc}
   16f48:	bl	17580 <close@plt+0x66bc>
   16f4c:	push	{r4, lr}
   16f50:	bl	177e0 <close@plt+0x691c>
   16f54:	cmp	r0, #0
   16f58:	popne	{r4, pc}
   16f5c:	bl	17580 <close@plt+0x66bc>
   16f60:	push	{r4, lr}
   16f64:	bl	177e0 <close@plt+0x691c>
   16f68:	cmp	r0, #0
   16f6c:	popne	{r4, pc}
   16f70:	bl	17580 <close@plt+0x66bc>
   16f74:	push	{r4, r5, r6, lr}
   16f78:	mov	r5, r0
   16f7c:	mov	r4, r1
   16f80:	bl	1780c <close@plt+0x6948>
   16f84:	cmp	r0, #0
   16f88:	popne	{r4, r5, r6, pc}
   16f8c:	adds	r4, r4, #0
   16f90:	movne	r4, #1
   16f94:	cmp	r5, #0
   16f98:	orreq	r4, r4, #1
   16f9c:	cmp	r4, #0
   16fa0:	popeq	{r4, r5, r6, pc}
   16fa4:	bl	17580 <close@plt+0x66bc>
   16fa8:	push	{r4, lr}
   16fac:	cmp	r1, #0
   16fb0:	orreq	r1, r1, #1
   16fb4:	bl	1780c <close@plt+0x6948>
   16fb8:	cmp	r0, #0
   16fbc:	popne	{r4, pc}
   16fc0:	bl	17580 <close@plt+0x66bc>
   16fc4:	push	{r4, r5, r6, lr}
   16fc8:	mov	r6, r0
   16fcc:	mov	r5, r1
   16fd0:	mov	r4, r2
   16fd4:	bl	17d68 <close@plt+0x6ea4>
   16fd8:	cmp	r0, #0
   16fdc:	popne	{r4, r5, r6, pc}
   16fe0:	cmp	r6, #0
   16fe4:	beq	16ff4 <close@plt+0x6130>
   16fe8:	cmp	r5, #0
   16fec:	cmpne	r4, #0
   16ff0:	popeq	{r4, r5, r6, pc}
   16ff4:	bl	17580 <close@plt+0x66bc>
   16ff8:	cmp	r2, #0
   16ffc:	cmpne	r1, #0
   17000:	moveq	r2, #1
   17004:	moveq	r1, r2
   17008:	push	{r4, lr}
   1700c:	bl	17d68 <close@plt+0x6ea4>
   17010:	cmp	r0, #0
   17014:	popne	{r4, pc}
   17018:	bl	17580 <close@plt+0x66bc>
   1701c:	push	{r4, lr}
   17020:	mov	r2, r1
   17024:	mov	r1, r0
   17028:	mov	r0, #0
   1702c:	bl	17d68 <close@plt+0x6ea4>
   17030:	cmp	r0, #0
   17034:	popne	{r4, pc}
   17038:	bl	17580 <close@plt+0x66bc>
   1703c:	cmp	r1, #0
   17040:	cmpne	r0, #0
   17044:	moveq	r2, #1
   17048:	movne	r2, r1
   1704c:	moveq	r1, r2
   17050:	movne	r1, r0
   17054:	push	{r4, lr}
   17058:	mov	r0, #0
   1705c:	bl	17d68 <close@plt+0x6ea4>
   17060:	cmp	r0, #0
   17064:	popne	{r4, pc}
   17068:	bl	17580 <close@plt+0x66bc>
   1706c:	cmp	r0, #0
   17070:	push	{r4, r5, r6, lr}
   17074:	mov	r5, r1
   17078:	ldr	r4, [r1]
   1707c:	beq	170b8 <close@plt+0x61f4>
   17080:	lsr	r2, r4, #1
   17084:	add	r3, r2, #1
   17088:	mvn	r3, r3
   1708c:	cmp	r4, r3
   17090:	bhi	170d4 <close@plt+0x6210>
   17094:	add	r4, r4, #1
   17098:	add	r4, r4, r2
   1709c:	mov	r1, r4
   170a0:	mov	r2, #1
   170a4:	bl	17d68 <close@plt+0x6ea4>
   170a8:	cmp	r0, #0
   170ac:	beq	170d8 <close@plt+0x6214>
   170b0:	str	r4, [r5]
   170b4:	pop	{r4, r5, r6, pc}
   170b8:	cmp	r4, #0
   170bc:	moveq	r4, #64	; 0x40
   170c0:	mov	r1, r4
   170c4:	mov	r2, #1
   170c8:	bl	17d68 <close@plt+0x6ea4>
   170cc:	cmp	r0, #0
   170d0:	bne	170b0 <close@plt+0x61ec>
   170d4:	bl	17580 <close@plt+0x66bc>
   170d8:	cmp	r4, #0
   170dc:	bne	170d4 <close@plt+0x6210>
   170e0:	str	r4, [r5]
   170e4:	pop	{r4, r5, r6, pc}
   170e8:	cmp	r0, #0
   170ec:	push	{r4, r5, r6, lr}
   170f0:	mov	r5, r1
   170f4:	ldr	r4, [r1]
   170f8:	mov	r6, r2
   170fc:	beq	17140 <close@plt+0x627c>
   17100:	lsr	r1, r4, #1
   17104:	add	r3, r1, #1
   17108:	mvn	r3, r3
   1710c:	cmp	r4, r3
   17110:	bhi	17178 <close@plt+0x62b4>
   17114:	add	r4, r4, #1
   17118:	add	r4, r4, r1
   1711c:	mov	r1, r4
   17120:	bl	17d68 <close@plt+0x6ea4>
   17124:	cmp	r0, #0
   17128:	bne	17138 <close@plt+0x6274>
   1712c:	cmp	r4, #0
   17130:	cmpne	r6, #0
   17134:	bne	17178 <close@plt+0x62b4>
   17138:	str	r4, [r5]
   1713c:	pop	{r4, r5, r6, pc}
   17140:	cmp	r4, #0
   17144:	bne	17160 <close@plt+0x629c>
   17148:	mov	r1, r2
   1714c:	mov	r0, #64	; 0x40
   17150:	bl	17db4 <close@plt+0x6ef0>
   17154:	cmp	r0, #0
   17158:	movne	r4, r0
   1715c:	addeq	r4, r0, #1
   17160:	mov	r2, r6
   17164:	mov	r1, r4
   17168:	mov	r0, #0
   1716c:	bl	17d68 <close@plt+0x6ea4>
   17170:	cmp	r0, #0
   17174:	bne	17138 <close@plt+0x6274>
   17178:	bl	17580 <close@plt+0x66bc>
   1717c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17180:	sub	sp, sp, #12
   17184:	ldr	r6, [r1]
   17188:	mov	r8, r1
   1718c:	mov	r9, r0
   17190:	asrs	r4, r6, #1
   17194:	mov	sl, r2
   17198:	mov	fp, r3
   1719c:	ldr	r7, [sp, #48]	; 0x30
   171a0:	bmi	1731c <close@plt+0x6458>
   171a4:	mvn	r1, #-2147483648	; 0x80000000
   171a8:	sub	r1, r1, r4
   171ac:	cmp	r6, r1
   171b0:	movle	r1, #0
   171b4:	movgt	r1, #1
   171b8:	mvn	r3, fp
   171bc:	cmp	r1, #0
   171c0:	addeq	r4, r4, r6
   171c4:	mvnne	r4, #-2147483648	; 0x80000000
   171c8:	lsr	r3, r3, #31
   171cc:	cmp	fp, r4
   171d0:	movge	r2, #0
   171d4:	andlt	r2, r3, #1
   171d8:	cmp	r2, #0
   171dc:	beq	172cc <close@plt+0x6408>
   171e0:	cmp	r7, #0
   171e4:	blt	173b4 <close@plt+0x64f0>
   171e8:	bne	173ac <close@plt+0x64e8>
   171ec:	mov	r5, #64	; 0x40
   171f0:	mov	r1, r7
   171f4:	mov	r0, r5
   171f8:	str	r3, [sp, #4]
   171fc:	bl	17fc0 <close@plt+0x70fc>
   17200:	mov	r1, r7
   17204:	mov	r4, r0
   17208:	mov	r0, r5
   1720c:	bl	181e0 <close@plt+0x731c>
   17210:	ldr	r3, [sp, #4]
   17214:	sub	r5, r5, r1
   17218:	cmp	r9, #0
   1721c:	sub	r2, r4, r6
   17220:	streq	r9, [r8]
   17224:	cmp	r2, sl
   17228:	bge	172ac <close@plt+0x63e8>
   1722c:	cmp	sl, #0
   17230:	blt	1734c <close@plt+0x6488>
   17234:	cmp	r6, #0
   17238:	blt	17258 <close@plt+0x6394>
   1723c:	mvn	r2, #-2147483648	; 0x80000000
   17240:	sub	r2, r2, sl
   17244:	cmp	r6, r2
   17248:	movle	r2, #0
   1724c:	movgt	r2, #1
   17250:	cmp	r2, #0
   17254:	bne	17348 <close@plt+0x6484>
   17258:	add	r6, r6, sl
   1725c:	cmp	fp, r6
   17260:	movge	r3, #0
   17264:	andlt	r3, r3, #1
   17268:	cmp	r3, #0
   1726c:	mov	r4, r6
   17270:	bne	17348 <close@plt+0x6484>
   17274:	cmp	r7, #0
   17278:	blt	17360 <close@plt+0x649c>
   1727c:	beq	172a8 <close@plt+0x63e4>
   17280:	cmp	r6, #0
   17284:	blt	17404 <close@plt+0x6540>
   17288:	mov	r1, r7
   1728c:	mvn	r0, #-2147483648	; 0x80000000
   17290:	bl	17fc0 <close@plt+0x70fc>
   17294:	cmp	r6, r0
   17298:	movle	r0, #0
   1729c:	movgt	r0, #1
   172a0:	cmp	r0, #0
   172a4:	bne	17348 <close@plt+0x6484>
   172a8:	mul	r5, r6, r7
   172ac:	mov	r1, r5
   172b0:	mov	r0, r9
   172b4:	bl	1780c <close@plt+0x6948>
   172b8:	cmp	r0, #0
   172bc:	beq	17330 <close@plt+0x646c>
   172c0:	str	r4, [r8]
   172c4:	add	sp, sp, #12
   172c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172cc:	cmp	r7, #0
   172d0:	blt	1738c <close@plt+0x64c8>
   172d4:	beq	171ec <close@plt+0x6328>
   172d8:	cmp	r4, #0
   172dc:	blt	173bc <close@plt+0x64f8>
   172e0:	mov	r1, r7
   172e4:	mvn	r0, #-2147483648	; 0x80000000
   172e8:	str	r3, [sp, #4]
   172ec:	bl	17fc0 <close@plt+0x70fc>
   172f0:	ldr	r3, [sp, #4]
   172f4:	cmp	r0, r4
   172f8:	movge	r0, #0
   172fc:	movlt	r0, #1
   17300:	cmp	r0, #0
   17304:	mvnne	r5, #-2147483648	; 0x80000000
   17308:	bne	171f0 <close@plt+0x632c>
   1730c:	mul	r5, r7, r4
   17310:	cmp	r5, #63	; 0x3f
   17314:	bgt	17218 <close@plt+0x6354>
   17318:	b	171ec <close@plt+0x6328>
   1731c:	rsb	r1, r4, #-2147483648	; 0x80000000
   17320:	cmp	r6, r1
   17324:	movge	r1, #0
   17328:	movlt	r1, #1
   1732c:	b	171b8 <close@plt+0x62f4>
   17330:	adds	r5, r5, #0
   17334:	movne	r5, #1
   17338:	cmp	r9, #0
   1733c:	orreq	r5, r5, #1
   17340:	cmp	r5, #0
   17344:	beq	172c0 <close@plt+0x63fc>
   17348:	bl	17580 <close@plt+0x66bc>
   1734c:	rsb	r2, sl, #-2147483648	; 0x80000000
   17350:	cmp	r6, r2
   17354:	movge	r2, #0
   17358:	movlt	r2, #1
   1735c:	b	17250 <close@plt+0x638c>
   17360:	cmp	r6, #0
   17364:	blt	173e8 <close@plt+0x6524>
   17368:	cmn	r7, #1
   1736c:	beq	172a8 <close@plt+0x63e4>
   17370:	mov	r1, r7
   17374:	mov	r0, #-2147483648	; 0x80000000
   17378:	bl	17fc0 <close@plt+0x70fc>
   1737c:	cmp	r6, r0
   17380:	movle	r0, #0
   17384:	movgt	r0, #1
   17388:	b	172a0 <close@plt+0x63dc>
   1738c:	cmp	r4, #0
   17390:	blt	17428 <close@plt+0x6564>
   17394:	cmn	r7, #1
   17398:	beq	1730c <close@plt+0x6448>
   1739c:	str	r3, [sp, #4]
   173a0:	mov	r1, r7
   173a4:	mov	r0, #-2147483648	; 0x80000000
   173a8:	b	172ec <close@plt+0x6428>
   173ac:	mov	r4, fp
   173b0:	b	172e0 <close@plt+0x641c>
   173b4:	mov	r4, fp
   173b8:	b	17394 <close@plt+0x64d0>
   173bc:	cmn	r4, #1
   173c0:	beq	1730c <close@plt+0x6448>
   173c4:	mov	r1, r4
   173c8:	mov	r0, #-2147483648	; 0x80000000
   173cc:	str	r3, [sp, #4]
   173d0:	bl	17fc0 <close@plt+0x70fc>
   173d4:	ldr	r3, [sp, #4]
   173d8:	cmp	r7, r0
   173dc:	movle	r0, #0
   173e0:	movgt	r0, #1
   173e4:	b	17300 <close@plt+0x643c>
   173e8:	mov	r1, r7
   173ec:	mvn	r0, #-2147483648	; 0x80000000
   173f0:	bl	17fc0 <close@plt+0x70fc>
   173f4:	cmp	r6, r0
   173f8:	movge	r0, #0
   173fc:	movlt	r0, #1
   17400:	b	172a0 <close@plt+0x63dc>
   17404:	cmn	r6, #1
   17408:	beq	172a8 <close@plt+0x63e4>
   1740c:	mov	r1, r6
   17410:	mov	r0, #-2147483648	; 0x80000000
   17414:	bl	17fc0 <close@plt+0x70fc>
   17418:	cmp	r7, r0
   1741c:	movle	r0, #0
   17420:	movgt	r0, #1
   17424:	b	172a0 <close@plt+0x63dc>
   17428:	mov	r1, r7
   1742c:	mvn	r0, #-2147483648	; 0x80000000
   17430:	str	r3, [sp, #4]
   17434:	bl	17fc0 <close@plt+0x70fc>
   17438:	ldr	r3, [sp, #4]
   1743c:	cmp	r0, r4
   17440:	movle	r0, #0
   17444:	movgt	r0, #1
   17448:	b	17300 <close@plt+0x643c>
   1744c:	push	{r4, lr}
   17450:	mov	r1, #1
   17454:	bl	17798 <close@plt+0x68d4>
   17458:	cmp	r0, #0
   1745c:	popne	{r4, pc}
   17460:	bl	17580 <close@plt+0x66bc>
   17464:	push	{r4, lr}
   17468:	mov	r1, #1
   1746c:	bl	17798 <close@plt+0x68d4>
   17470:	cmp	r0, #0
   17474:	popne	{r4, pc}
   17478:	bl	17580 <close@plt+0x66bc>
   1747c:	push	{r4, lr}
   17480:	bl	17798 <close@plt+0x68d4>
   17484:	cmp	r0, #0
   17488:	popne	{r4, pc}
   1748c:	bl	17580 <close@plt+0x66bc>
   17490:	push	{r4, lr}
   17494:	bl	17798 <close@plt+0x68d4>
   17498:	cmp	r0, #0
   1749c:	popne	{r4, pc}
   174a0:	bl	17580 <close@plt+0x66bc>
   174a4:	push	{r4, r5, r6, lr}
   174a8:	mov	r6, r0
   174ac:	mov	r0, r1
   174b0:	mov	r4, r1
   174b4:	bl	177e0 <close@plt+0x691c>
   174b8:	subs	r5, r0, #0
   174bc:	beq	174d4 <close@plt+0x6610>
   174c0:	mov	r2, r4
   174c4:	mov	r1, r6
   174c8:	bl	10cd8 <memcpy@plt>
   174cc:	mov	r0, r5
   174d0:	pop	{r4, r5, r6, pc}
   174d4:	bl	17580 <close@plt+0x66bc>
   174d8:	push	{r4, r5, r6, lr}
   174dc:	mov	r6, r0
   174e0:	mov	r0, r1
   174e4:	mov	r4, r1
   174e8:	bl	177e0 <close@plt+0x691c>
   174ec:	subs	r5, r0, #0
   174f0:	beq	17508 <close@plt+0x6644>
   174f4:	mov	r2, r4
   174f8:	mov	r1, r6
   174fc:	bl	10cd8 <memcpy@plt>
   17500:	mov	r0, r5
   17504:	pop	{r4, r5, r6, pc}
   17508:	bl	17580 <close@plt+0x66bc>
   1750c:	push	{r4, r5, r6, lr}
   17510:	mov	r6, r0
   17514:	add	r0, r1, #1
   17518:	mov	r4, r1
   1751c:	bl	177e0 <close@plt+0x691c>
   17520:	subs	r5, r0, #0
   17524:	beq	17544 <close@plt+0x6680>
   17528:	mov	r3, #0
   1752c:	mov	r1, r6
   17530:	strb	r3, [r5, r4]
   17534:	mov	r2, r4
   17538:	bl	10cd8 <memcpy@plt>
   1753c:	mov	r0, r5
   17540:	pop	{r4, r5, r6, pc}
   17544:	bl	17580 <close@plt+0x66bc>
   17548:	push	{r4, r5, r6, lr}
   1754c:	mov	r6, r0
   17550:	bl	10dec <strlen@plt>
   17554:	add	r4, r0, #1
   17558:	mov	r0, r4
   1755c:	bl	177e0 <close@plt+0x691c>
   17560:	subs	r5, r0, #0
   17564:	beq	1757c <close@plt+0x66b8>
   17568:	mov	r2, r4
   1756c:	mov	r1, r6
   17570:	bl	10cd8 <memcpy@plt>
   17574:	mov	r0, r5
   17578:	pop	{r4, r5, r6, pc}
   1757c:	bl	17580 <close@plt+0x66bc>
   17580:	ldr	r3, [pc, #44]	; 175b4 <close@plt+0x66f0>
   17584:	push	{r4, lr}
   17588:	mov	r2, #5
   1758c:	ldr	r1, [pc, #36]	; 175b8 <close@plt+0x66f4>
   17590:	mov	r0, #0
   17594:	ldr	r4, [r3]
   17598:	bl	10d14 <dcgettext@plt>
   1759c:	ldr	r2, [pc, #24]	; 175bc <close@plt+0x66f8>
   175a0:	mov	r1, #0
   175a4:	mov	r3, r0
   175a8:	mov	r0, r4
   175ac:	bl	10d80 <error@plt>
   175b0:	bl	10eb8 <abort@plt>
   175b4:	strdeq	sl, [r2], -r0
   175b8:	strdeq	r9, [r1], -r0
   175bc:	andeq	r8, r1, r8, lsr #25
   175c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   175c4:	sub	sp, sp, #8
   175c8:	mov	r9, r1
   175cc:	mov	r6, r2
   175d0:	mov	r7, r3
   175d4:	mov	r8, r0
   175d8:	bl	17b98 <close@plt+0x6cd4>
   175dc:	mov	r5, r0
   175e0:	bl	10df8 <__errno_location@plt>
   175e4:	ldr	r4, [r0]
   175e8:	cmp	r4, #0
   175ec:	beq	17690 <close@plt+0x67cc>
   175f0:	mov	r2, #5
   175f4:	ldr	r1, [pc, #160]	; 1769c <close@plt+0x67d8>
   175f8:	mov	r0, #0
   175fc:	bl	10d14 <dcgettext@plt>
   17600:	mov	r1, r4
   17604:	mov	r2, r0
   17608:	mov	r0, #0
   1760c:	bl	10d80 <error@plt>
   17610:	mov	r2, #5
   17614:	ldr	r1, [pc, #132]	; 176a0 <close@plt+0x67dc>
   17618:	mov	r0, #0
   1761c:	bl	10d14 <dcgettext@plt>
   17620:	mov	r1, #0
   17624:	mov	r2, r0
   17628:	mov	r0, r1
   1762c:	bl	10d80 <error@plt>
   17630:	ldr	r3, [pc, #108]	; 176a4 <close@plt+0x67e0>
   17634:	mov	r2, #5
   17638:	ldr	r1, [pc, #104]	; 176a8 <close@plt+0x67e4>
   1763c:	mov	r0, #0
   17640:	ldr	r4, [r3]
   17644:	bl	10d14 <dcgettext@plt>
   17648:	mov	r2, r8
   1764c:	mov	r3, r9
   17650:	mov	r1, #8
   17654:	mov	sl, r0
   17658:	mov	r0, #0
   1765c:	bl	14774 <close@plt+0x38b0>
   17660:	mov	r3, r7
   17664:	mov	r2, r6
   17668:	mov	r1, #8
   1766c:	mov	r8, r0
   17670:	mov	r0, #1
   17674:	bl	14774 <close@plt+0x38b0>
   17678:	mov	r3, r8
   1767c:	mov	r2, sl
   17680:	mov	r1, #0
   17684:	str	r0, [sp]
   17688:	mov	r0, r4
   1768c:	bl	10d80 <error@plt>
   17690:	mov	r0, r5
   17694:	add	sp, sp, #8
   17698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1769c:	andeq	r9, r1, r4, lsl #2
   176a0:	andeq	r9, r1, r0, lsr #2
   176a4:	strdeq	sl, [r2], -r0
   176a8:	andeq	r9, r1, ip, asr #2
   176ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   176b0:	sub	sp, sp, #8
   176b4:	mov	r9, r1
   176b8:	mov	r6, r2
   176bc:	mov	r7, r3
   176c0:	mov	r8, r0
   176c4:	bl	17ca8 <close@plt+0x6de4>
   176c8:	mov	r5, r0
   176cc:	bl	10df8 <__errno_location@plt>
   176d0:	ldr	r4, [r0]
   176d4:	cmp	r4, #0
   176d8:	beq	1777c <close@plt+0x68b8>
   176dc:	mov	r2, #5
   176e0:	ldr	r1, [pc, #160]	; 17788 <close@plt+0x68c4>
   176e4:	mov	r0, #0
   176e8:	bl	10d14 <dcgettext@plt>
   176ec:	mov	r1, r4
   176f0:	mov	r2, r0
   176f4:	mov	r0, #0
   176f8:	bl	10d80 <error@plt>
   176fc:	mov	r2, #5
   17700:	ldr	r1, [pc, #132]	; 1778c <close@plt+0x68c8>
   17704:	mov	r0, #0
   17708:	bl	10d14 <dcgettext@plt>
   1770c:	mov	r1, #0
   17710:	mov	r2, r0
   17714:	mov	r0, r1
   17718:	bl	10d80 <error@plt>
   1771c:	ldr	r3, [pc, #108]	; 17790 <close@plt+0x68cc>
   17720:	mov	r2, #5
   17724:	ldr	r1, [pc, #104]	; 17794 <close@plt+0x68d0>
   17728:	mov	r0, #0
   1772c:	ldr	r4, [r3]
   17730:	bl	10d14 <dcgettext@plt>
   17734:	mov	r2, r8
   17738:	sub	r3, r9, #1
   1773c:	mov	r1, #8
   17740:	mov	sl, r0
   17744:	mov	r0, #0
   17748:	bl	14774 <close@plt+0x38b0>
   1774c:	sub	r3, r7, #1
   17750:	mov	r2, r6
   17754:	mov	r1, #8
   17758:	mov	r8, r0
   1775c:	mov	r0, #1
   17760:	bl	14774 <close@plt+0x38b0>
   17764:	mov	r3, r8
   17768:	mov	r2, sl
   1776c:	mov	r1, #0
   17770:	str	r0, [sp]
   17774:	mov	r0, r4
   17778:	bl	10d80 <error@plt>
   1777c:	mov	r0, r5
   17780:	add	sp, sp, #8
   17784:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17788:	andeq	r9, r1, r4, lsl #2
   1778c:	andeq	r9, r1, r0, lsr #2
   17790:	strdeq	sl, [r2], -r0
   17794:	andeq	r9, r1, ip, asr #2
   17798:	cmp	r1, #0
   1779c:	cmpne	r0, #0
   177a0:	moveq	r1, #1
   177a4:	moveq	r0, r1
   177a8:	umull	r2, r3, r0, r1
   177ac:	adds	r3, r3, #0
   177b0:	movne	r3, #1
   177b4:	cmp	r2, #0
   177b8:	blt	177c8 <close@plt+0x6904>
   177bc:	cmp	r3, #0
   177c0:	bne	177c8 <close@plt+0x6904>
   177c4:	b	10c78 <calloc@plt>
   177c8:	push	{r4, lr}
   177cc:	bl	10df8 <__errno_location@plt>
   177d0:	mov	r3, #12
   177d4:	str	r3, [r0]
   177d8:	mov	r0, #0
   177dc:	pop	{r4, pc}
   177e0:	cmp	r0, #0
   177e4:	moveq	r0, #1
   177e8:	cmp	r0, #0
   177ec:	blt	177f4 <close@plt+0x6930>
   177f0:	b	10d98 <malloc@plt>
   177f4:	push	{r4, lr}
   177f8:	bl	10df8 <__errno_location@plt>
   177fc:	mov	r3, #12
   17800:	str	r3, [r0]
   17804:	mov	r0, #0
   17808:	pop	{r4, pc}
   1780c:	cmp	r0, #0
   17810:	beq	17834 <close@plt+0x6970>
   17814:	cmp	r1, #0
   17818:	push	{lr}		; (str lr, [sp, #-4]!)
   1781c:	sub	sp, sp, #12
   17820:	beq	1783c <close@plt+0x6978>
   17824:	blt	17854 <close@plt+0x6990>
   17828:	add	sp, sp, #12
   1782c:	pop	{lr}		; (ldr lr, [sp], #4)
   17830:	b	10d20 <realloc@plt>
   17834:	mov	r0, r1
   17838:	b	177e0 <close@plt+0x691c>
   1783c:	str	r1, [sp, #4]
   17840:	bl	17ab8 <close@plt+0x6bf4>
   17844:	ldr	r3, [sp, #4]
   17848:	mov	r0, r3
   1784c:	add	sp, sp, #12
   17850:	pop	{pc}		; (ldr pc, [sp], #4)
   17854:	bl	10df8 <__errno_location@plt>
   17858:	mov	r2, #12
   1785c:	mov	r3, #0
   17860:	str	r2, [r0]
   17864:	b	17848 <close@plt+0x6984>
   17868:	push	{r4, r5, r6, lr}
   1786c:	mov	r4, r0
   17870:	bl	10d68 <__fpending@plt>
   17874:	ldr	r5, [r4]
   17878:	and	r5, r5, #32
   1787c:	mov	r6, r0
   17880:	mov	r0, r4
   17884:	bl	11e8c <close@plt+0xfc8>
   17888:	cmp	r5, #0
   1788c:	mov	r4, r0
   17890:	bne	178b0 <close@plt+0x69ec>
   17894:	cmp	r0, #0
   17898:	beq	178a8 <close@plt+0x69e4>
   1789c:	cmp	r6, #0
   178a0:	beq	178cc <close@plt+0x6a08>
   178a4:	mvn	r4, #0
   178a8:	mov	r0, r4
   178ac:	pop	{r4, r5, r6, pc}
   178b0:	cmp	r0, #0
   178b4:	bne	178a4 <close@plt+0x69e0>
   178b8:	bl	10df8 <__errno_location@plt>
   178bc:	str	r4, [r0]
   178c0:	mvn	r4, #0
   178c4:	mov	r0, r4
   178c8:	pop	{r4, r5, r6, pc}
   178cc:	bl	10df8 <__errno_location@plt>
   178d0:	ldr	r4, [r0]
   178d4:	subs	r4, r4, #9
   178d8:	mvnne	r4, #0
   178dc:	mov	r0, r4
   178e0:	pop	{r4, r5, r6, pc}
   178e4:	push	{r1, r2, r3}
   178e8:	push	{r4, r5, r6, r7, lr}
   178ec:	sub	sp, sp, #8
   178f0:	add	r3, sp, #32
   178f4:	ldr	r1, [sp, #28]
   178f8:	str	r3, [sp, #4]
   178fc:	cmp	r1, #0
   17900:	beq	17998 <close@plt+0x6ad4>
   17904:	ldr	r2, [pc, #412]	; 17aa8 <close@plt+0x6be4>
   17908:	mov	r5, r0
   1790c:	cmp	r1, r2
   17910:	bne	1795c <close@plt+0x6a98>
   17914:	ldr	r6, [pc, #400]	; 17aac <close@plt+0x6be8>
   17918:	ldr	r7, [r3]
   1791c:	add	r2, sp, #36	; 0x24
   17920:	ldr	r3, [r6]
   17924:	str	r2, [sp, #4]
   17928:	cmp	r3, #0
   1792c:	mov	r2, r7
   17930:	blt	17a5c <close@plt+0x6b98>
   17934:	bl	10e58 <fcntl64@plt>
   17938:	subs	r4, r0, #0
   1793c:	blt	179e0 <close@plt+0x6b1c>
   17940:	mov	r3, #1
   17944:	str	r3, [r6]
   17948:	mov	r0, r4
   1794c:	add	sp, sp, #8
   17950:	pop	{r4, r5, r6, r7, lr}
   17954:	add	sp, sp, #12
   17958:	bx	lr
   1795c:	cmp	r1, #11
   17960:	beq	17988 <close@plt+0x6ac4>
   17964:	bgt	179a8 <close@plt+0x6ae4>
   17968:	cmp	r1, #3
   1796c:	beq	17988 <close@plt+0x6ac4>
   17970:	ble	17a9c <close@plt+0x6bd8>
   17974:	cmp	r1, #8
   17978:	beq	179c8 <close@plt+0x6b04>
   1797c:	ble	179c8 <close@plt+0x6b04>
   17980:	cmp	r1, #9
   17984:	bne	179c8 <close@plt+0x6b04>
   17988:	mov	r0, r5
   1798c:	bl	10e58 <fcntl64@plt>
   17990:	mov	r4, r0
   17994:	b	17948 <close@plt+0x6a84>
   17998:	ldr	r2, [sp, #32]
   1799c:	bl	10e58 <fcntl64@plt>
   179a0:	mov	r4, r0
   179a4:	b	17948 <close@plt+0x6a84>
   179a8:	ldr	r3, [pc, #256]	; 17ab0 <close@plt+0x6bec>
   179ac:	cmp	r1, r3
   179b0:	bgt	17a7c <close@plt+0x6bb8>
   179b4:	cmp	r1, r2
   179b8:	bge	179c8 <close@plt+0x6b04>
   179bc:	sub	r3, r3, #6
   179c0:	cmp	r1, r3
   179c4:	beq	17988 <close@plt+0x6ac4>
   179c8:	ldr	r3, [sp, #4]
   179cc:	mov	r0, r5
   179d0:	ldr	r2, [r3]
   179d4:	bl	10e58 <fcntl64@plt>
   179d8:	mov	r4, r0
   179dc:	b	17948 <close@plt+0x6a84>
   179e0:	bl	10df8 <__errno_location@plt>
   179e4:	ldr	r3, [r0]
   179e8:	cmp	r3, #22
   179ec:	bne	17940 <close@plt+0x6a7c>
   179f0:	mov	r2, r7
   179f4:	mov	r0, r5
   179f8:	mov	r1, #0
   179fc:	bl	10e58 <fcntl64@plt>
   17a00:	subs	r4, r0, #0
   17a04:	blt	17948 <close@plt+0x6a84>
   17a08:	mvn	r3, #0
   17a0c:	str	r3, [r6]
   17a10:	mov	r1, #1
   17a14:	mov	r0, r4
   17a18:	bl	10e58 <fcntl64@plt>
   17a1c:	subs	r2, r0, #0
   17a20:	blt	17a3c <close@plt+0x6b78>
   17a24:	orr	r2, r2, #1
   17a28:	mov	r1, #2
   17a2c:	mov	r0, r4
   17a30:	bl	10e58 <fcntl64@plt>
   17a34:	cmn	r0, #1
   17a38:	bne	17948 <close@plt+0x6a84>
   17a3c:	bl	10df8 <__errno_location@plt>
   17a40:	mov	r5, r0
   17a44:	mov	r0, r4
   17a48:	ldr	r6, [r5]
   17a4c:	mvn	r4, #0
   17a50:	bl	10ec4 <close@plt>
   17a54:	str	r6, [r5]
   17a58:	b	17948 <close@plt+0x6a84>
   17a5c:	mov	r1, #0
   17a60:	bl	10e58 <fcntl64@plt>
   17a64:	subs	r4, r0, #0
   17a68:	blt	17948 <close@plt+0x6a84>
   17a6c:	ldr	r3, [r6]
   17a70:	cmn	r3, #1
   17a74:	beq	17a10 <close@plt+0x6b4c>
   17a78:	b	17948 <close@plt+0x6a84>
   17a7c:	ldr	r3, [pc, #48]	; 17ab4 <close@plt+0x6bf0>
   17a80:	cmp	r1, r3
   17a84:	beq	179c8 <close@plt+0x6b04>
   17a88:	blt	17988 <close@plt+0x6ac4>
   17a8c:	add	r3, r3, #1
   17a90:	cmp	r1, r3
   17a94:	bne	179c8 <close@plt+0x6b04>
   17a98:	b	17988 <close@plt+0x6ac4>
   17a9c:	cmp	r1, #1
   17aa0:	bne	179c8 <close@plt+0x6b04>
   17aa4:	b	17988 <close@plt+0x6ac4>
   17aa8:	andeq	r0, r0, r6, lsl #8
   17aac:			; <UNDEFINED> instruction: 0x0002a2b4
   17ab0:	andeq	r0, r0, r7, lsl #8
   17ab4:	andeq	r0, r0, r9, lsl #8
   17ab8:	push	{r4, r5, lr}
   17abc:	sub	sp, sp, #12
   17ac0:	mov	r5, r0
   17ac4:	bl	10df8 <__errno_location@plt>
   17ac8:	mov	r2, #0
   17acc:	mov	r4, r0
   17ad0:	ldr	r3, [r0]
   17ad4:	str	r2, [r4]
   17ad8:	mov	r0, r5
   17adc:	str	r3, [sp]
   17ae0:	str	r3, [sp, #4]
   17ae4:	bl	10cc0 <free@plt>
   17ae8:	ldr	r3, [r4]
   17aec:	add	r2, sp, #8
   17af0:	cmp	r3, #0
   17af4:	moveq	r3, #4
   17af8:	movne	r3, #0
   17afc:	add	r3, r2, r3
   17b00:	ldr	r3, [r3, #-8]
   17b04:	str	r3, [r4]
   17b08:	add	sp, sp, #12
   17b0c:	pop	{r4, r5, pc}
   17b10:	push	{r4, lr}
   17b14:	mov	r0, #14
   17b18:	bl	10e88 <nl_langinfo@plt>
   17b1c:	cmp	r0, #0
   17b20:	beq	17b38 <close@plt+0x6c74>
   17b24:	ldrb	r2, [r0]
   17b28:	ldr	r3, [pc, #16]	; 17b40 <close@plt+0x6c7c>
   17b2c:	cmp	r2, #0
   17b30:	moveq	r0, r3
   17b34:	pop	{r4, pc}
   17b38:	ldr	r0, [pc]	; 17b40 <close@plt+0x6c7c>
   17b3c:	pop	{r4, pc}
   17b40:	andeq	r9, r1, r4, ror r1
   17b44:	push	{r4, r5, r6, r7, lr}
   17b48:	subs	r6, r0, #0
   17b4c:	sub	sp, sp, #12
   17b50:	addeq	r6, sp, #4
   17b54:	mov	r0, r6
   17b58:	mov	r5, r2
   17b5c:	mov	r7, r1
   17b60:	bl	10d74 <mbrtowc@plt>
   17b64:	cmp	r5, #0
   17b68:	cmnne	r0, #3
   17b6c:	mov	r4, r0
   17b70:	bls	17b8c <close@plt+0x6cc8>
   17b74:	mov	r0, #0
   17b78:	bl	120c4 <close@plt+0x1200>
   17b7c:	cmp	r0, #0
   17b80:	moveq	r4, #1
   17b84:	ldrbeq	r3, [r7]
   17b88:	streq	r3, [r6]
   17b8c:	mov	r0, r4
   17b90:	add	sp, sp, #12
   17b94:	pop	{r4, r5, r6, r7, pc}
   17b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b9c:	sub	sp, sp, #28
   17ba0:	cmp	r1, r3
   17ba4:	mov	r9, r1
   17ba8:	str	r3, [sp, #12]
   17bac:	stmib	sp, {r0, r2}
   17bb0:	beq	17c64 <close@plt+0x6da0>
   17bb4:	ldr	r6, [sp, #12]
   17bb8:	ldr	fp, [sp, #4]
   17bbc:	ldr	r4, [sp, #8]
   17bc0:	mov	r7, #0
   17bc4:	ldrb	r2, [fp, r9]
   17bc8:	ldrb	r0, [r4, r6]
   17bcc:	strb	r7, [fp, r9]
   17bd0:	strb	r7, [r4, r6]
   17bd4:	str	r2, [sp, #16]
   17bd8:	str	r0, [sp, #20]
   17bdc:	bl	10df8 <__errno_location@plt>
   17be0:	add	r5, r9, #1
   17be4:	add	r6, r6, #1
   17be8:	mov	r8, r0
   17bec:	b	17c20 <close@plt+0x6d5c>
   17bf0:	bl	10dec <strlen@plt>
   17bf4:	add	sl, r0, #1
   17bf8:	mov	r0, r4
   17bfc:	bl	10dec <strlen@plt>
   17c00:	subs	r5, r5, sl
   17c04:	add	fp, fp, sl
   17c08:	add	r0, r0, #1
   17c0c:	add	r4, r4, r0
   17c10:	sub	r6, r6, r0
   17c14:	beq	17c94 <close@plt+0x6dd0>
   17c18:	cmp	r6, #0
   17c1c:	beq	17ca0 <close@plt+0x6ddc>
   17c20:	str	r7, [r8]
   17c24:	mov	r1, r4
   17c28:	mov	r0, fp
   17c2c:	bl	10d8c <strcoll@plt>
   17c30:	subs	r2, r0, #0
   17c34:	mov	r0, fp
   17c38:	beq	17bf0 <close@plt+0x6d2c>
   17c3c:	ldr	r3, [sp, #4]
   17c40:	ldrb	r1, [sp, #16]
   17c44:	ldrb	r0, [sp, #20]
   17c48:	strb	r1, [r3, r9]
   17c4c:	ldr	r3, [sp, #8]
   17c50:	ldr	r1, [sp, #12]
   17c54:	strb	r0, [r3, r1]
   17c58:	mov	r0, r2
   17c5c:	add	sp, sp, #28
   17c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c64:	mov	r1, r2
   17c68:	mov	r2, r9
   17c6c:	bl	10cfc <memcmp@plt>
   17c70:	subs	r2, r0, #0
   17c74:	bne	17bb4 <close@plt+0x6cf0>
   17c78:	str	r2, [sp, #4]
   17c7c:	bl	10df8 <__errno_location@plt>
   17c80:	ldr	r2, [sp, #4]
   17c84:	str	r2, [r0]
   17c88:	mov	r0, r2
   17c8c:	add	sp, sp, #28
   17c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c94:	adds	r2, r6, #0
   17c98:	mvnne	r2, #0
   17c9c:	b	17c3c <close@plt+0x6d78>
   17ca0:	mov	r2, #1
   17ca4:	b	17c3c <close@plt+0x6d78>
   17ca8:	cmp	r1, r3
   17cac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17cb0:	mov	r7, r1
   17cb4:	mov	r8, r3
   17cb8:	mov	r4, r2
   17cbc:	mov	r5, r0
   17cc0:	beq	17d28 <close@plt+0x6e64>
   17cc4:	bl	10df8 <__errno_location@plt>
   17cc8:	mov	r9, #0
   17ccc:	mov	sl, r0
   17cd0:	b	17d04 <close@plt+0x6e40>
   17cd4:	bl	10dec <strlen@plt>
   17cd8:	add	r6, r0, #1
   17cdc:	mov	r0, r4
   17ce0:	bl	10dec <strlen@plt>
   17ce4:	subs	r7, r7, r6
   17ce8:	add	r5, r5, r6
   17cec:	add	r0, r0, #1
   17cf0:	add	r4, r4, r0
   17cf4:	sub	r8, r8, r0
   17cf8:	beq	17d4c <close@plt+0x6e88>
   17cfc:	cmp	r8, #0
   17d00:	beq	17d5c <close@plt+0x6e98>
   17d04:	str	r9, [sl]
   17d08:	mov	r1, r4
   17d0c:	mov	r0, r5
   17d10:	bl	10d8c <strcoll@plt>
   17d14:	subs	r6, r0, #0
   17d18:	mov	r0, r5
   17d1c:	beq	17cd4 <close@plt+0x6e10>
   17d20:	mov	r0, r6
   17d24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d28:	mov	r2, r1
   17d2c:	mov	r1, r4
   17d30:	bl	10cfc <memcmp@plt>
   17d34:	subs	r6, r0, #0
   17d38:	bne	17cc4 <close@plt+0x6e00>
   17d3c:	bl	10df8 <__errno_location@plt>
   17d40:	str	r6, [r0]
   17d44:	mov	r0, r6
   17d48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d4c:	adds	r6, r8, #0
   17d50:	mvnne	r6, #0
   17d54:	mov	r0, r6
   17d58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d5c:	mov	r6, #1
   17d60:	mov	r0, r6
   17d64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d68:	push	{r4, r5, r6, lr}
   17d6c:	subs	r4, r2, #0
   17d70:	mov	r6, r0
   17d74:	mov	r5, r1
   17d78:	beq	17da4 <close@plt+0x6ee0>
   17d7c:	mov	r1, r4
   17d80:	mvn	r0, #0
   17d84:	bl	17db4 <close@plt+0x6ef0>
   17d88:	cmp	r0, r5
   17d8c:	bcs	17da4 <close@plt+0x6ee0>
   17d90:	bl	10df8 <__errno_location@plt>
   17d94:	mov	r3, #12
   17d98:	str	r3, [r0]
   17d9c:	mov	r0, #0
   17da0:	pop	{r4, r5, r6, pc}
   17da4:	mul	r1, r5, r4
   17da8:	mov	r0, r6
   17dac:	pop	{r4, r5, r6, lr}
   17db0:	b	1780c <close@plt+0x6948>
   17db4:	subs	r2, r1, #1
   17db8:	bxeq	lr
   17dbc:	bcc	17f94 <close@plt+0x70d0>
   17dc0:	cmp	r0, r1
   17dc4:	bls	17f78 <close@plt+0x70b4>
   17dc8:	tst	r1, r2
   17dcc:	beq	17f84 <close@plt+0x70c0>
   17dd0:	clz	r3, r0
   17dd4:	clz	r2, r1
   17dd8:	sub	r3, r2, r3
   17ddc:	rsbs	r3, r3, #31
   17de0:	addne	r3, r3, r3, lsl #1
   17de4:	mov	r2, #0
   17de8:	addne	pc, pc, r3, lsl #2
   17dec:	nop			; (mov r0, r0)
   17df0:	cmp	r0, r1, lsl #31
   17df4:	adc	r2, r2, r2
   17df8:	subcs	r0, r0, r1, lsl #31
   17dfc:	cmp	r0, r1, lsl #30
   17e00:	adc	r2, r2, r2
   17e04:	subcs	r0, r0, r1, lsl #30
   17e08:	cmp	r0, r1, lsl #29
   17e0c:	adc	r2, r2, r2
   17e10:	subcs	r0, r0, r1, lsl #29
   17e14:	cmp	r0, r1, lsl #28
   17e18:	adc	r2, r2, r2
   17e1c:	subcs	r0, r0, r1, lsl #28
   17e20:	cmp	r0, r1, lsl #27
   17e24:	adc	r2, r2, r2
   17e28:	subcs	r0, r0, r1, lsl #27
   17e2c:	cmp	r0, r1, lsl #26
   17e30:	adc	r2, r2, r2
   17e34:	subcs	r0, r0, r1, lsl #26
   17e38:	cmp	r0, r1, lsl #25
   17e3c:	adc	r2, r2, r2
   17e40:	subcs	r0, r0, r1, lsl #25
   17e44:	cmp	r0, r1, lsl #24
   17e48:	adc	r2, r2, r2
   17e4c:	subcs	r0, r0, r1, lsl #24
   17e50:	cmp	r0, r1, lsl #23
   17e54:	adc	r2, r2, r2
   17e58:	subcs	r0, r0, r1, lsl #23
   17e5c:	cmp	r0, r1, lsl #22
   17e60:	adc	r2, r2, r2
   17e64:	subcs	r0, r0, r1, lsl #22
   17e68:	cmp	r0, r1, lsl #21
   17e6c:	adc	r2, r2, r2
   17e70:	subcs	r0, r0, r1, lsl #21
   17e74:	cmp	r0, r1, lsl #20
   17e78:	adc	r2, r2, r2
   17e7c:	subcs	r0, r0, r1, lsl #20
   17e80:	cmp	r0, r1, lsl #19
   17e84:	adc	r2, r2, r2
   17e88:	subcs	r0, r0, r1, lsl #19
   17e8c:	cmp	r0, r1, lsl #18
   17e90:	adc	r2, r2, r2
   17e94:	subcs	r0, r0, r1, lsl #18
   17e98:	cmp	r0, r1, lsl #17
   17e9c:	adc	r2, r2, r2
   17ea0:	subcs	r0, r0, r1, lsl #17
   17ea4:	cmp	r0, r1, lsl #16
   17ea8:	adc	r2, r2, r2
   17eac:	subcs	r0, r0, r1, lsl #16
   17eb0:	cmp	r0, r1, lsl #15
   17eb4:	adc	r2, r2, r2
   17eb8:	subcs	r0, r0, r1, lsl #15
   17ebc:	cmp	r0, r1, lsl #14
   17ec0:	adc	r2, r2, r2
   17ec4:	subcs	r0, r0, r1, lsl #14
   17ec8:	cmp	r0, r1, lsl #13
   17ecc:	adc	r2, r2, r2
   17ed0:	subcs	r0, r0, r1, lsl #13
   17ed4:	cmp	r0, r1, lsl #12
   17ed8:	adc	r2, r2, r2
   17edc:	subcs	r0, r0, r1, lsl #12
   17ee0:	cmp	r0, r1, lsl #11
   17ee4:	adc	r2, r2, r2
   17ee8:	subcs	r0, r0, r1, lsl #11
   17eec:	cmp	r0, r1, lsl #10
   17ef0:	adc	r2, r2, r2
   17ef4:	subcs	r0, r0, r1, lsl #10
   17ef8:	cmp	r0, r1, lsl #9
   17efc:	adc	r2, r2, r2
   17f00:	subcs	r0, r0, r1, lsl #9
   17f04:	cmp	r0, r1, lsl #8
   17f08:	adc	r2, r2, r2
   17f0c:	subcs	r0, r0, r1, lsl #8
   17f10:	cmp	r0, r1, lsl #7
   17f14:	adc	r2, r2, r2
   17f18:	subcs	r0, r0, r1, lsl #7
   17f1c:	cmp	r0, r1, lsl #6
   17f20:	adc	r2, r2, r2
   17f24:	subcs	r0, r0, r1, lsl #6
   17f28:	cmp	r0, r1, lsl #5
   17f2c:	adc	r2, r2, r2
   17f30:	subcs	r0, r0, r1, lsl #5
   17f34:	cmp	r0, r1, lsl #4
   17f38:	adc	r2, r2, r2
   17f3c:	subcs	r0, r0, r1, lsl #4
   17f40:	cmp	r0, r1, lsl #3
   17f44:	adc	r2, r2, r2
   17f48:	subcs	r0, r0, r1, lsl #3
   17f4c:	cmp	r0, r1, lsl #2
   17f50:	adc	r2, r2, r2
   17f54:	subcs	r0, r0, r1, lsl #2
   17f58:	cmp	r0, r1, lsl #1
   17f5c:	adc	r2, r2, r2
   17f60:	subcs	r0, r0, r1, lsl #1
   17f64:	cmp	r0, r1
   17f68:	adc	r2, r2, r2
   17f6c:	subcs	r0, r0, r1
   17f70:	mov	r0, r2
   17f74:	bx	lr
   17f78:	moveq	r0, #1
   17f7c:	movne	r0, #0
   17f80:	bx	lr
   17f84:	clz	r2, r1
   17f88:	rsb	r2, r2, #31
   17f8c:	lsr	r0, r0, r2
   17f90:	bx	lr
   17f94:	cmp	r0, #0
   17f98:	mvnne	r0, #0
   17f9c:	b	1823c <close@plt+0x7378>
   17fa0:	cmp	r1, #0
   17fa4:	beq	17f94 <close@plt+0x70d0>
   17fa8:	push	{r0, r1, lr}
   17fac:	bl	17db4 <close@plt+0x6ef0>
   17fb0:	pop	{r1, r2, lr}
   17fb4:	mul	r3, r2, r0
   17fb8:	sub	r1, r1, r3
   17fbc:	bx	lr
   17fc0:	cmp	r1, #0
   17fc4:	beq	181d0 <close@plt+0x730c>
   17fc8:	eor	ip, r0, r1
   17fcc:	rsbmi	r1, r1, #0
   17fd0:	subs	r2, r1, #1
   17fd4:	beq	1819c <close@plt+0x72d8>
   17fd8:	movs	r3, r0
   17fdc:	rsbmi	r3, r0, #0
   17fe0:	cmp	r3, r1
   17fe4:	bls	181a8 <close@plt+0x72e4>
   17fe8:	tst	r1, r2
   17fec:	beq	181b8 <close@plt+0x72f4>
   17ff0:	clz	r2, r3
   17ff4:	clz	r0, r1
   17ff8:	sub	r2, r0, r2
   17ffc:	rsbs	r2, r2, #31
   18000:	addne	r2, r2, r2, lsl #1
   18004:	mov	r0, #0
   18008:	addne	pc, pc, r2, lsl #2
   1800c:	nop			; (mov r0, r0)
   18010:	cmp	r3, r1, lsl #31
   18014:	adc	r0, r0, r0
   18018:	subcs	r3, r3, r1, lsl #31
   1801c:	cmp	r3, r1, lsl #30
   18020:	adc	r0, r0, r0
   18024:	subcs	r3, r3, r1, lsl #30
   18028:	cmp	r3, r1, lsl #29
   1802c:	adc	r0, r0, r0
   18030:	subcs	r3, r3, r1, lsl #29
   18034:	cmp	r3, r1, lsl #28
   18038:	adc	r0, r0, r0
   1803c:	subcs	r3, r3, r1, lsl #28
   18040:	cmp	r3, r1, lsl #27
   18044:	adc	r0, r0, r0
   18048:	subcs	r3, r3, r1, lsl #27
   1804c:	cmp	r3, r1, lsl #26
   18050:	adc	r0, r0, r0
   18054:	subcs	r3, r3, r1, lsl #26
   18058:	cmp	r3, r1, lsl #25
   1805c:	adc	r0, r0, r0
   18060:	subcs	r3, r3, r1, lsl #25
   18064:	cmp	r3, r1, lsl #24
   18068:	adc	r0, r0, r0
   1806c:	subcs	r3, r3, r1, lsl #24
   18070:	cmp	r3, r1, lsl #23
   18074:	adc	r0, r0, r0
   18078:	subcs	r3, r3, r1, lsl #23
   1807c:	cmp	r3, r1, lsl #22
   18080:	adc	r0, r0, r0
   18084:	subcs	r3, r3, r1, lsl #22
   18088:	cmp	r3, r1, lsl #21
   1808c:	adc	r0, r0, r0
   18090:	subcs	r3, r3, r1, lsl #21
   18094:	cmp	r3, r1, lsl #20
   18098:	adc	r0, r0, r0
   1809c:	subcs	r3, r3, r1, lsl #20
   180a0:	cmp	r3, r1, lsl #19
   180a4:	adc	r0, r0, r0
   180a8:	subcs	r3, r3, r1, lsl #19
   180ac:	cmp	r3, r1, lsl #18
   180b0:	adc	r0, r0, r0
   180b4:	subcs	r3, r3, r1, lsl #18
   180b8:	cmp	r3, r1, lsl #17
   180bc:	adc	r0, r0, r0
   180c0:	subcs	r3, r3, r1, lsl #17
   180c4:	cmp	r3, r1, lsl #16
   180c8:	adc	r0, r0, r0
   180cc:	subcs	r3, r3, r1, lsl #16
   180d0:	cmp	r3, r1, lsl #15
   180d4:	adc	r0, r0, r0
   180d8:	subcs	r3, r3, r1, lsl #15
   180dc:	cmp	r3, r1, lsl #14
   180e0:	adc	r0, r0, r0
   180e4:	subcs	r3, r3, r1, lsl #14
   180e8:	cmp	r3, r1, lsl #13
   180ec:	adc	r0, r0, r0
   180f0:	subcs	r3, r3, r1, lsl #13
   180f4:	cmp	r3, r1, lsl #12
   180f8:	adc	r0, r0, r0
   180fc:	subcs	r3, r3, r1, lsl #12
   18100:	cmp	r3, r1, lsl #11
   18104:	adc	r0, r0, r0
   18108:	subcs	r3, r3, r1, lsl #11
   1810c:	cmp	r3, r1, lsl #10
   18110:	adc	r0, r0, r0
   18114:	subcs	r3, r3, r1, lsl #10
   18118:	cmp	r3, r1, lsl #9
   1811c:	adc	r0, r0, r0
   18120:	subcs	r3, r3, r1, lsl #9
   18124:	cmp	r3, r1, lsl #8
   18128:	adc	r0, r0, r0
   1812c:	subcs	r3, r3, r1, lsl #8
   18130:	cmp	r3, r1, lsl #7
   18134:	adc	r0, r0, r0
   18138:	subcs	r3, r3, r1, lsl #7
   1813c:	cmp	r3, r1, lsl #6
   18140:	adc	r0, r0, r0
   18144:	subcs	r3, r3, r1, lsl #6
   18148:	cmp	r3, r1, lsl #5
   1814c:	adc	r0, r0, r0
   18150:	subcs	r3, r3, r1, lsl #5
   18154:	cmp	r3, r1, lsl #4
   18158:	adc	r0, r0, r0
   1815c:	subcs	r3, r3, r1, lsl #4
   18160:	cmp	r3, r1, lsl #3
   18164:	adc	r0, r0, r0
   18168:	subcs	r3, r3, r1, lsl #3
   1816c:	cmp	r3, r1, lsl #2
   18170:	adc	r0, r0, r0
   18174:	subcs	r3, r3, r1, lsl #2
   18178:	cmp	r3, r1, lsl #1
   1817c:	adc	r0, r0, r0
   18180:	subcs	r3, r3, r1, lsl #1
   18184:	cmp	r3, r1
   18188:	adc	r0, r0, r0
   1818c:	subcs	r3, r3, r1
   18190:	cmp	ip, #0
   18194:	rsbmi	r0, r0, #0
   18198:	bx	lr
   1819c:	teq	ip, r0
   181a0:	rsbmi	r0, r0, #0
   181a4:	bx	lr
   181a8:	movcc	r0, #0
   181ac:	asreq	r0, ip, #31
   181b0:	orreq	r0, r0, #1
   181b4:	bx	lr
   181b8:	clz	r2, r1
   181bc:	rsb	r2, r2, #31
   181c0:	cmp	ip, #0
   181c4:	lsr	r0, r3, r2
   181c8:	rsbmi	r0, r0, #0
   181cc:	bx	lr
   181d0:	cmp	r0, #0
   181d4:	mvngt	r0, #-2147483648	; 0x80000000
   181d8:	movlt	r0, #-2147483648	; 0x80000000
   181dc:	b	1823c <close@plt+0x7378>
   181e0:	cmp	r1, #0
   181e4:	beq	181d0 <close@plt+0x730c>
   181e8:	push	{r0, r1, lr}
   181ec:	bl	17fc8 <close@plt+0x7104>
   181f0:	pop	{r1, r2, lr}
   181f4:	mul	r3, r2, r0
   181f8:	sub	r1, r1, r3
   181fc:	bx	lr
   18200:	cmp	r3, #0
   18204:	cmpeq	r2, #0
   18208:	bne	18220 <close@plt+0x735c>
   1820c:	cmp	r1, #0
   18210:	cmpeq	r0, #0
   18214:	mvnne	r1, #0
   18218:	mvnne	r0, #0
   1821c:	b	1823c <close@plt+0x7378>
   18220:	sub	sp, sp, #8
   18224:	push	{sp, lr}
   18228:	bl	1824c <close@plt+0x7388>
   1822c:	ldr	lr, [sp, #4]
   18230:	add	sp, sp, #8
   18234:	pop	{r2, r3}
   18238:	bx	lr
   1823c:	push	{r1, lr}
   18240:	mov	r0, #8
   18244:	bl	10c90 <raise@plt>
   18248:	pop	{r1, pc}
   1824c:	cmp	r1, r3
   18250:	push	{r4, r5, r6, r7, r8, r9, lr}
   18254:	cmpeq	r0, r2
   18258:	mov	r4, r0
   1825c:	mov	r5, r1
   18260:	ldr	r9, [sp, #28]
   18264:	movcc	r0, #0
   18268:	movcc	r1, #0
   1826c:	bcc	18364 <close@plt+0x74a0>
   18270:	cmp	r3, #0
   18274:	clzeq	ip, r2
   18278:	clzne	ip, r3
   1827c:	addeq	ip, ip, #32
   18280:	cmp	r5, #0
   18284:	clzeq	r1, r4
   18288:	addeq	r1, r1, #32
   1828c:	clzne	r1, r5
   18290:	sub	ip, ip, r1
   18294:	sub	lr, ip, #32
   18298:	lsl	r7, r3, ip
   1829c:	rsb	r8, ip, #32
   182a0:	orr	r7, r7, r2, lsl lr
   182a4:	orr	r7, r7, r2, lsr r8
   182a8:	lsl	r6, r2, ip
   182ac:	cmp	r5, r7
   182b0:	cmpeq	r4, r6
   182b4:	movcc	r0, #0
   182b8:	movcc	r1, #0
   182bc:	bcc	182d8 <close@plt+0x7414>
   182c0:	mov	r3, #1
   182c4:	subs	r4, r4, r6
   182c8:	lsl	r1, r3, lr
   182cc:	lsl	r0, r3, ip
   182d0:	orr	r1, r1, r3, lsr r8
   182d4:	sbc	r5, r5, r7
   182d8:	cmp	ip, #0
   182dc:	beq	18364 <close@plt+0x74a0>
   182e0:	lsrs	r3, r7, #1
   182e4:	rrx	r2, r6
   182e8:	mov	r6, ip
   182ec:	b	18310 <close@plt+0x744c>
   182f0:	subs	r4, r4, r2
   182f4:	sbc	r5, r5, r3
   182f8:	adds	r4, r4, r4
   182fc:	adc	r5, r5, r5
   18300:	adds	r4, r4, #1
   18304:	adc	r5, r5, #0
   18308:	subs	r6, r6, #1
   1830c:	beq	1832c <close@plt+0x7468>
   18310:	cmp	r5, r3
   18314:	cmpeq	r4, r2
   18318:	bcs	182f0 <close@plt+0x742c>
   1831c:	adds	r4, r4, r4
   18320:	adc	r5, r5, r5
   18324:	subs	r6, r6, #1
   18328:	bne	18310 <close@plt+0x744c>
   1832c:	lsr	r6, r4, ip
   18330:	lsr	r7, r5, ip
   18334:	orr	r6, r6, r5, lsl r8
   18338:	adds	r2, r0, r4
   1833c:	orr	r6, r6, r5, lsr lr
   18340:	adc	r3, r1, r5
   18344:	lsl	r1, r7, ip
   18348:	orr	r1, r1, r6, lsl lr
   1834c:	lsl	r0, r6, ip
   18350:	orr	r1, r1, r6, lsr r8
   18354:	subs	r0, r2, r0
   18358:	mov	r4, r6
   1835c:	mov	r5, r7
   18360:	sbc	r1, r3, r1
   18364:	cmp	r9, #0
   18368:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1836c:	strd	r4, [r9]
   18370:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18374:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18378:	mov	r7, r0
   1837c:	ldr	r6, [pc, #72]	; 183cc <close@plt+0x7508>
   18380:	ldr	r5, [pc, #72]	; 183d0 <close@plt+0x750c>
   18384:	add	r6, pc, r6
   18388:	add	r5, pc, r5
   1838c:	sub	r6, r6, r5
   18390:	mov	r8, r1
   18394:	mov	r9, r2
   18398:	bl	10c4c <fdopen@plt-0x20>
   1839c:	asrs	r6, r6, #2
   183a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   183a4:	mov	r4, #0
   183a8:	add	r4, r4, #1
   183ac:	ldr	r3, [r5], #4
   183b0:	mov	r2, r9
   183b4:	mov	r1, r8
   183b8:	mov	r0, r7
   183bc:	blx	r3
   183c0:	cmp	r6, r4
   183c4:	bne	183a8 <close@plt+0x74e4>
   183c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   183cc:	andeq	r1, r1, r4, lsl #23
   183d0:	andeq	r1, r1, ip, ror fp
   183d4:	bx	lr
   183d8:	ldr	r3, [pc, #12]	; 183ec <close@plt+0x7528>
   183dc:	mov	r1, #0
   183e0:	add	r3, pc, r3
   183e4:	ldr	r2, [r3]
   183e8:	b	10e04 <__cxa_atexit@plt>
   183ec:	strdeq	r1, [r1], -r8

Disassembly of section .fini:

000183f0 <.fini>:
   183f0:	push	{r3, lr}
   183f4:	pop	{r3, pc}
