
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000006f4 <_init>:
 6f4:	push	{r3, lr}
 6f8:	bl	7c8 <call_weak_fn>
 6fc:	pop	{r3, pc}

Disassembly of section .plt:

00000700 <.plt>:
 700:	push	{lr}		; (str lr, [sp, #-4]!)
 704:	ldr	lr, [pc, #4]	; 710 <.plt+0x10>
 708:	add	lr, pc, lr
 70c:	ldr	pc, [lr, #8]!
 710:	.word	0x000118f0

00000714 <__cxa_finalize@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2288]!	; 0x8f0

00000720 <sendto_one@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2280]!	; 0x8e8

0000072c <user_mode@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2272]!	; 0x8e0

00000738 <sendto_realops_snomask@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2264]!	; 0x8d8

00000744 <find_umode_slot@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2256]!	; 0x8d0

00000750 <rb_free_rb_dlink_node@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2248]!	; 0x8c8

0000075c <__gmon_start__@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2240]!	; 0x8c0

00000768 <rb_make_rb_dlink_node@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2232]!	; 0x8b8

00000774 <sendto_one_numeric@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2224]!	; 0x8b0

00000780 <find_person@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2216]!	; 0x8a8

0000078c <sendto_one_notice@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2208]!	; 0x8a0

00000798 <find_named_person@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2200]!	; 0x898

000007a4 <privilegeset_in_set@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2192]!	; 0x890

000007b0 <__assert_fail@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2184]!	; 0x888

000007bc <construct_umodebuf@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2176]!	; 0x880

Disassembly of section .text:

000007c8 <call_weak_fn>:
     7c8:	ldr	r3, [pc, #20]	; 7e4 <call_weak_fn+0x1c>
     7cc:	ldr	r2, [pc, #20]	; 7e8 <call_weak_fn+0x20>
     7d0:	add	r3, pc, r3
     7d4:	ldr	r2, [r3, r2]
     7d8:	cmp	r2, #0
     7dc:	bxeq	lr
     7e0:	b	75c <__gmon_start__@plt>
     7e4:	.word	0x00011828
     7e8:	.word	0x00000054

000007ec <deregister_tm_clones>:
     7ec:	ldr	r3, [pc, #52]	; 828 <deregister_tm_clones+0x3c>
     7f0:	ldr	r0, [pc, #52]	; 82c <deregister_tm_clones+0x40>
     7f4:	add	r3, pc, r3
     7f8:	add	r0, pc, r0
     7fc:	add	r3, r3, #3
     800:	sub	r3, r3, r0
     804:	cmp	r3, #6
     808:	ldr	r3, [pc, #32]	; 830 <deregister_tm_clones+0x44>
     80c:	add	r3, pc, r3
     810:	bxls	lr
     814:	ldr	r2, [pc, #24]	; 834 <deregister_tm_clones+0x48>
     818:	ldr	r3, [r3, r2]
     81c:	cmp	r3, #0
     820:	bxeq	lr
     824:	bx	r3
     828:	.word	0x00011938
     82c:	.word	0x00011934
     830:	.word	0x000117ec
     834:	.word	0x0000004c

00000838 <register_tm_clones>:
     838:	ldr	r1, [pc, #56]	; 878 <register_tm_clones+0x40>
     83c:	ldr	r0, [pc, #56]	; 87c <register_tm_clones+0x44>
     840:	add	r1, pc, r1
     844:	add	r0, pc, r0
     848:	sub	r1, r1, r0
     84c:	ldr	r3, [pc, #44]	; 880 <register_tm_clones+0x48>
     850:	asr	r1, r1, #2
     854:	add	r3, pc, r3
     858:	add	r1, r1, r1, lsr #31
     85c:	asrs	r1, r1, #1
     860:	bxeq	lr
     864:	ldr	r2, [pc, #24]	; 884 <register_tm_clones+0x4c>
     868:	ldr	r3, [r3, r2]
     86c:	cmp	r3, #0
     870:	bxeq	lr
     874:	bx	r3
     878:	.word	0x000118ec
     87c:	.word	0x000118e8
     880:	.word	0x000117a4
     884:	.word	0x00000060

00000888 <__do_global_dtors_aux>:
     888:	ldr	r3, [pc, #76]	; 8dc <__do_global_dtors_aux+0x54>
     88c:	ldr	r2, [pc, #76]	; 8e0 <__do_global_dtors_aux+0x58>
     890:	add	r3, pc, r3
     894:	add	r2, pc, r2
     898:	ldrb	r3, [r3]
     89c:	cmp	r3, #0
     8a0:	bxne	lr
     8a4:	ldr	r3, [pc, #56]	; 8e4 <__do_global_dtors_aux+0x5c>
     8a8:	push	{r4, lr}
     8ac:	ldr	r3, [r2, r3]
     8b0:	cmp	r3, #0
     8b4:	beq	8c4 <__do_global_dtors_aux+0x3c>
     8b8:	ldr	r3, [pc, #40]	; 8e8 <__do_global_dtors_aux+0x60>
     8bc:	ldr	r0, [pc, r3]
     8c0:	bl	714 <__cxa_finalize@plt>
     8c4:	bl	7ec <deregister_tm_clones>
     8c8:	ldr	r3, [pc, #28]	; 8ec <__do_global_dtors_aux+0x64>
     8cc:	mov	r2, #1
     8d0:	add	r3, pc, r3
     8d4:	strb	r2, [r3]
     8d8:	pop	{r4, pc}
     8dc:	.word	0x0001189c
     8e0:	.word	0x00011764
     8e4:	.word	0x00000048
     8e8:	.word	0x000117a4
     8ec:	.word	0x0001185c

000008f0 <frame_dummy>:
     8f0:	ldr	r0, [pc, #56]	; 930 <frame_dummy+0x40>
     8f4:	ldr	r3, [pc, #56]	; 934 <frame_dummy+0x44>
     8f8:	add	r0, pc, r0
     8fc:	ldr	r2, [r0]
     900:	add	r3, pc, r3
     904:	cmp	r2, #0
     908:	bne	910 <frame_dummy+0x20>
     90c:	b	838 <register_tm_clones>
     910:	ldr	r2, [pc, #32]	; 938 <frame_dummy+0x48>
     914:	ldr	r3, [r3, r2]
     918:	cmp	r3, #0
     91c:	beq	90c <frame_dummy+0x1c>
     920:	push	{r4, lr}
     924:	blx	r3
     928:	pop	{r4, lr}
     92c:	b	838 <register_tm_clones>
     930:	.word	0x000115fc
     934:	.word	0x000116f8
     938:	.word	0x0000005c

0000093c <h_hdl_whois>:
     93c:	ldr	r2, [pc, #80]	; 994 <h_hdl_whois+0x58>
     940:	ldr	r1, [pc, #80]	; 998 <h_hdl_whois+0x5c>
     944:	add	r2, pc, r2
     948:	ldr	r3, [r0, #4]
     94c:	ldr	r2, [r2, r1]
     950:	ldr	r1, [r3, #56]	; 0x38
     954:	ldr	r2, [r2, #288]	; 0x120
     958:	tst	r1, r2
     95c:	bxeq	lr
     960:	ldr	r2, [r3, #24]
     964:	ldr	r2, [r2, #24]
     968:	cmp	r2, #0
     96c:	beq	97c <h_hdl_whois+0x40>
     970:	ldrb	r2, [r2]
     974:	cmp	r2, #0
     978:	bxne	lr
     97c:	ldr	r2, [pc, #24]	; 99c <h_hdl_whois+0x60>
     980:	add	r3, r3, #88	; 0x58
     984:	add	r2, pc, r2
     988:	ldr	r1, [pc, #16]	; 9a0 <h_hdl_whois+0x64>
     98c:	ldr	r0, [r0]
     990:	b	774 <sendto_one_numeric@plt>
     994:	.word	0x000116b4
     998:	.word	0x00000050
     99c:	.word	0x0000084c
     9a0:	.word	0x00000136

000009a4 <h_hdl_stats_request>:
     9a4:	ldr	r3, [r0, #8]
     9a8:	cmp	r3, #112	; 0x70
     9ac:	bxne	lr
     9b0:	ldr	r3, [pc, #140]	; a44 <h_hdl_stats_request+0xa0>
     9b4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
     9b8:	mov	r4, r0
     9bc:	ldr	r7, [pc, #132]	; a48 <h_hdl_stats_request+0xa4>
     9c0:	ldr	r5, [pc, r3]
     9c4:	mov	r6, #0
     9c8:	add	r7, pc, r7
     9cc:	mov	r8, #249	; 0xf9
     9d0:	cmp	r5, #0
     9d4:	bne	a00 <h_hdl_stats_request+0x5c>
     9d8:	ldr	r2, [pc, #108]	; a4c <h_hdl_stats_request+0xa8>
     9dc:	mov	r3, r6
     9e0:	add	r2, pc, r2
     9e4:	mov	r1, #249	; 0xf9
     9e8:	ldr	r0, [r4]
     9ec:	bl	774 <sendto_one_numeric@plt>
     9f0:	mov	r3, #1
     9f4:	str	r3, [r4, #12]
     9f8:	add	sp, sp, #8
     9fc:	pop	{r4, r5, r6, r7, r8, pc}
     a00:	ldr	r3, [r5]
     a04:	ldr	r2, [r3, #24]
     a08:	ldr	r2, [r2, #24]
     a0c:	cmp	r2, #0
     a10:	bne	a3c <h_hdl_stats_request+0x98>
     a14:	add	r2, r3, #163	; 0xa3
     a18:	str	r2, [sp, #4]
     a1c:	add	r2, r3, #152	; 0x98
     a20:	str	r2, [sp]
     a24:	add	r3, r3, #88	; 0x58
     a28:	mov	r2, r7
     a2c:	mov	r1, r8
     a30:	ldr	r0, [r4]
     a34:	add	r6, r6, #1
     a38:	bl	774 <sendto_one_numeric@plt>
     a3c:	ldr	r5, [r5, #8]
     a40:	b	9d0 <h_hdl_stats_request+0x2c>
     a44:	.word	0x00011770
     a48:	.word	0x00000823
     a4c:	.word	0x00000819

00000a50 <do_dehelper.part.2>:
     a50:	push	{r4, r5, r6, lr}
     a54:	sub	sp, sp, #24
     a58:	ldr	r2, [pc, #108]	; acc <do_dehelper.part.2+0x7c>
     a5c:	mov	r4, r1
     a60:	add	r5, r1, #88	; 0x58
     a64:	add	r6, r0, #88	; 0x58
     a68:	mov	r1, #256	; 0x100
     a6c:	mov	r3, r6
     a70:	mov	r0, r1
     a74:	str	r5, [sp]
     a78:	add	r2, pc, r2
     a7c:	bl	738 <sendto_realops_snomask@plt>
     a80:	ldr	r1, [pc, #72]	; ad0 <do_dehelper.part.2+0x80>
     a84:	mov	r2, r6
     a88:	mov	r0, r4
     a8c:	add	r1, pc, r1
     a90:	bl	78c <sendto_one_notice@plt>
     a94:	ldr	r3, [pc, #56]	; ad4 <do_dehelper.part.2+0x84>
     a98:	mov	r2, #3
     a9c:	add	r3, pc, r3
     aa0:	str	r3, [sp, #16]
     aa4:	mov	r3, #0
     aa8:	str	r3, [sp, #20]
     aac:	mov	r1, r4
     ab0:	add	r3, sp, #8
     ab4:	mov	r0, r4
     ab8:	str	r5, [sp, #12]
     abc:	str	r5, [sp, #8]
     ac0:	bl	72c <user_mode@plt>
     ac4:	add	sp, sp, #24
     ac8:	pop	{r4, r5, r6, pc}
     acc:	.word	0x00000795
     ad0:	.word	0x0000079c
     ad4:	.word	0x000007ad

00000ad8 <mo_dehelper>:
     ad8:	ldr	r3, [r2, #24]
     adc:	push	{r4, r5, r6, lr}
     ae0:	cmp	r3, #0
     ae4:	ldr	r5, [pc, #264]	; bf4 <mo_dehelper+0x11c>
     ae8:	mov	r4, r2
     aec:	add	r5, pc, r5
     af0:	ldr	r6, [sp, #16]
     af4:	bne	b28 <mo_dehelper+0x50>
     af8:	ldr	r3, [pc, #248]	; bf8 <mo_dehelper+0x120>
     afc:	ldr	r1, [pc, #248]	; bfc <mo_dehelper+0x124>
     b00:	mov	r0, r4
     b04:	ldr	r2, [r5, r3]
     b08:	ldr	r3, [pc, #240]	; c00 <mo_dehelper+0x128>
     b0c:	add	r2, r2, #88	; 0x58
     b10:	add	r3, pc, r3
     b14:	str	r3, [sp, #16]
     b18:	add	r1, pc, r1
     b1c:	add	r3, r4, #88	; 0x58
     b20:	pop	{r4, r5, r6, lr}
     b24:	b	720 <sendto_one@plt>
     b28:	ldr	r0, [r3, #36]	; 0x24
     b2c:	cmp	r0, #0
     b30:	beq	af8 <mo_dehelper+0x20>
     b34:	ldr	r1, [pc, #200]	; c04 <mo_dehelper+0x12c>
     b38:	add	r1, pc, r1
     b3c:	bl	7a4 <privilegeset_in_set@plt>
     b40:	cmp	r0, #0
     b44:	beq	af8 <mo_dehelper+0x20>
     b48:	ldr	r0, [r6, #4]
     b4c:	bl	798 <find_named_person@plt>
     b50:	cmp	r0, #0
     b54:	bne	b74 <mo_dehelper+0x9c>
     b58:	ldr	r2, [pc, #168]	; c08 <mo_dehelper+0x130>
     b5c:	ldr	r3, [r6, #4]
     b60:	mov	r0, r4
     b64:	add	r2, pc, r2
     b68:	ldr	r1, [pc, #156]	; c0c <mo_dehelper+0x134>
     b6c:	pop	{r4, r5, r6, lr}
     b70:	b	774 <sendto_one_numeric@plt>
     b74:	ldrd	r2, [r0, #64]	; 0x40
     b78:	mov	r3, #0
     b7c:	and	r2, r2, #8192	; 0x2000
     b80:	orrs	r3, r2, r3
     b84:	beq	bbc <mo_dehelper+0xe4>
     b88:	ldrh	r3, [r0, #80]	; 0x50
     b8c:	cmp	r3, #64	; 0x40
     b90:	bne	bbc <mo_dehelper+0xe4>
     b94:	ldr	r3, [pc, #116]	; c10 <mo_dehelper+0x138>
     b98:	ldr	r2, [r0, #56]	; 0x38
     b9c:	ldr	r3, [r5, r3]
     ba0:	ldr	r3, [r3, #288]	; 0x120
     ba4:	tst	r2, r3
     ba8:	popeq	{r4, r5, r6, pc}
     bac:	mov	r1, r0
     bb0:	mov	r0, r4
     bb4:	pop	{r4, r5, r6, lr}
     bb8:	b	a50 <do_dehelper.part.2>
     bbc:	ldrb	r3, [r4, #396]	; 0x18c
     bc0:	ldrb	r1, [r0, #396]	; 0x18c
     bc4:	cmp	r3, #0
     bc8:	addne	r2, r4, #396	; 0x18c
     bcc:	addeq	r2, r4, #88	; 0x58
     bd0:	cmp	r1, #0
     bd4:	addne	r1, r0, #396	; 0x18c
     bd8:	addeq	r1, r0, #88	; 0x58
     bdc:	ldr	r3, [r0, #32]
     be0:	str	r1, [sp, #16]
     be4:	ldr	r1, [pc, #40]	; c14 <mo_dehelper+0x13c>
     be8:	add	r3, r3, #88	; 0x58
     bec:	add	r1, pc, r1
     bf0:	b	b20 <mo_dehelper+0x48>
     bf4:	.word	0x0001150c
     bf8:	.word	0x00000064
     bfc:	.word	0x00000734
     c00:	.word	0x00000768
     c04:	.word	0x0000073b
     c08:	.word	0x0000071d
     c0c:	.word	0x00000191
     c10:	.word	0x00000050
     c14:	.word	0x000006ae

00000c18 <helper_delete>:
     c18:	subs	r2, r0, #0
     c1c:	bne	c44 <helper_delete+0x2c>
     c20:	ldr	r3, [pc, #152]	; cc0 <helper_delete+0xa8>
     c24:	ldr	r1, [pc, #152]	; cc4 <helper_delete+0xac>
     c28:	ldr	r0, [pc, #152]	; cc8 <helper_delete+0xb0>
     c2c:	push	{r4, lr}
     c30:	add	r3, pc, r3
     c34:	mov	r2, #288	; 0x120
     c38:	add	r1, pc, r1
     c3c:	add	r0, pc, r0
     c40:	bl	7b0 <__assert_fail@plt>
     c44:	ldr	r3, [pc, #128]	; ccc <helper_delete+0xb4>
     c48:	ldr	r0, [pc, r3]
     c4c:	cmp	r0, #0
     c50:	bne	c58 <helper_delete+0x40>
     c54:	bx	lr
     c58:	ldr	r3, [r0]
     c5c:	cmp	r2, r3
     c60:	ldr	r3, [r0, #8]
     c64:	movne	r0, r3
     c68:	bne	c4c <helper_delete+0x34>
     c6c:	ldr	r2, [r0, #4]
     c70:	cmp	r3, #0
     c74:	strne	r2, [r3, #4]
     c78:	ldreq	r1, [pc, #80]	; cd0 <helper_delete+0xb8>
     c7c:	addeq	r1, pc, r1
     c80:	streq	r2, [r1, #4]
     c84:	ldr	r2, [r0, #4]
     c88:	cmp	r2, #0
     c8c:	strne	r3, [r2, #8]
     c90:	ldreq	r2, [pc, #60]	; cd4 <helper_delete+0xbc>
     c94:	addeq	r2, pc, r2
     c98:	streq	r3, [r2]
     c9c:	ldr	r2, [pc, #52]	; cd8 <helper_delete+0xc0>
     ca0:	mov	r3, #0
     ca4:	add	r2, pc, r2
     ca8:	str	r3, [r0, #4]
     cac:	str	r3, [r0, #8]
     cb0:	ldr	r3, [r2, #8]
     cb4:	sub	r3, r3, #1
     cb8:	str	r3, [r2, #8]
     cbc:	b	750 <rb_free_rb_dlink_node@plt>
     cc0:	.word	0x0000054c
     cc4:	.word	0x0000067b
     cc8:	.word	0x00000693
     ccc:	.word	0x000114e8
     cd0:	.word	0x000114b4
     cd4:	.word	0x0001149c
     cd8:	.word	0x0001148c

00000cdc <recurse_client_exit>:
     cdc:	ldrh	r2, [r0, #80]	; 0x50
     ce0:	ldr	r1, [pc, #136]	; d70 <recurse_client_exit+0x94>
     ce4:	push	{r4, r5, r6, lr}
     ce8:	cmp	r2, #64	; 0x40
     cec:	add	r1, pc, r1
     cf0:	mov	r4, r0
     cf4:	bne	d24 <recurse_client_exit+0x48>
     cf8:	ldr	r2, [r0, #24]
     cfc:	cmp	r2, #0
     d00:	popeq	{r4, r5, r6, pc}
     d04:	ldr	r2, [pc, #104]	; d74 <recurse_client_exit+0x98>
     d08:	ldr	r1, [r1, r2]
     d0c:	ldr	r2, [r0, #56]	; 0x38
     d10:	ldr	r3, [r1, #288]	; 0x120
     d14:	tst	r2, r3
     d18:	popeq	{r4, r5, r6, pc}
     d1c:	pop	{r4, r5, r6, lr}
     d20:	b	c18 <helper_delete>
     d24:	cmp	r2, #32
     d28:	ldreq	r3, [r0, #28]
     d2c:	ldreq	r5, [r3, #48]	; 0x30
     d30:	beq	d44 <recurse_client_exit+0x68>
     d34:	pop	{r4, r5, r6, pc}
     d38:	ldr	r0, [r5]
     d3c:	bl	cdc <recurse_client_exit>
     d40:	ldr	r5, [r5, #8]
     d44:	cmp	r5, #0
     d48:	bne	d38 <recurse_client_exit+0x5c>
     d4c:	ldr	r3, [r4, #28]
     d50:	ldr	r4, [r3, #36]	; 0x24
     d54:	cmp	r4, #0
     d58:	bne	d60 <recurse_client_exit+0x84>
     d5c:	pop	{r4, r5, r6, pc}
     d60:	ldr	r0, [r4]
     d64:	bl	cdc <recurse_client_exit>
     d68:	ldr	r4, [r4, #8]
     d6c:	b	d54 <recurse_client_exit+0x78>
     d70:	.word	0x0001130c
     d74:	.word	0x00000050

00000d78 <h_hdl_client_exit>:
     d78:	ldr	r0, [r0, #4]
     d7c:	b	cdc <recurse_client_exit>

00000d80 <_moddeinit>:
     d80:	ldr	r3, [pc, #148]	; e1c <_moddeinit+0x9c>
     d84:	ldr	r2, [pc, #148]	; e20 <_moddeinit+0xa0>
     d88:	add	r3, pc, r3
     d8c:	push	{r4, r5, r6, r7, r8, lr}
     d90:	ldr	r4, [pc, #140]	; e24 <_moddeinit+0xa4>
     d94:	ldr	r3, [r3, r2]
     d98:	add	r4, pc, r4
     d9c:	mov	r2, #0
     da0:	str	r2, [r3, #288]	; 0x120
     da4:	bl	7bc <construct_umodebuf@plt>
     da8:	ldr	r0, [r4]
     dac:	cmp	r0, #0
     db0:	popeq	{r4, r5, r6, r7, r8, pc}
     db4:	ldr	r6, [pc, #108]	; e28 <_moddeinit+0xa8>
     db8:	ldr	r7, [pc, #108]	; e2c <_moddeinit+0xac>
     dbc:	ldr	r5, [r0, #8]
     dc0:	add	r6, pc, r6
     dc4:	add	r7, pc, r7
     dc8:	ldr	r3, [r0, #8]
     dcc:	ldr	r2, [r0, #4]
     dd0:	cmp	r3, #0
     dd4:	strne	r2, [r3, #4]
     dd8:	streq	r2, [r6, #4]
     ddc:	ldr	r2, [r0, #4]
     de0:	cmp	r2, #0
     de4:	strne	r3, [r2, #8]
     de8:	streq	r3, [r7]
     dec:	mov	r3, #0
     df0:	str	r3, [r0, #4]
     df4:	str	r3, [r0, #8]
     df8:	ldr	r3, [r4, #8]
     dfc:	sub	r3, r3, #1
     e00:	str	r3, [r4, #8]
     e04:	bl	750 <rb_free_rb_dlink_node@plt>
     e08:	cmp	r5, #0
     e0c:	popeq	{r4, r5, r6, r7, r8, pc}
     e10:	mov	r0, r5
     e14:	ldr	r5, [r5, #8]
     e18:	b	dc8 <_moddeinit+0x48>
     e1c:	.word	0x00011270
     e20:	.word	0x00000050
     e24:	.word	0x00011398
     e28:	.word	0x00011370
     e2c:	.word	0x0001136c

00000e30 <helper_add>:
     e30:	push	{r4, r5, r6, lr}
     e34:	subs	r5, r0, #0
     e38:	bne	e60 <helper_add+0x30>
     e3c:	ldr	r3, [pc, #188]	; f00 <helper_add+0xd0>
     e40:	ldr	r1, [pc, #188]	; f04 <helper_add+0xd4>
     e44:	ldr	r0, [pc, #188]	; f08 <helper_add+0xd8>
     e48:	add	r3, pc, r3
     e4c:	ldr	r2, [pc, #184]	; f0c <helper_add+0xdc>
     e50:	add	r3, r3, #20
     e54:	add	r1, pc, r1
     e58:	add	r0, pc, r0
     e5c:	bl	7b0 <__assert_fail@plt>
     e60:	ldr	r3, [pc, #168]	; f10 <helper_add+0xe0>
     e64:	ldr	r4, [pc, r3]
     e68:	cmp	r4, #0
     e6c:	bne	ea0 <helper_add+0x70>
     e70:	bl	768 <rb_make_rb_dlink_node@plt>
     e74:	cmp	r0, #0
     e78:	bne	eb4 <helper_add+0x84>
     e7c:	ldr	r3, [pc, #144]	; f14 <helper_add+0xe4>
     e80:	ldr	r1, [pc, #144]	; f18 <helper_add+0xe8>
     e84:	ldr	r0, [pc, #144]	; f1c <helper_add+0xec>
     e88:	add	r3, pc, r3
     e8c:	add	r3, r3, #33	; 0x21
     e90:	mov	r2, #144	; 0x90
     e94:	add	r1, pc, r1
     e98:	add	r0, pc, r0
     e9c:	b	e5c <helper_add+0x2c>
     ea0:	ldr	r3, [r4]
     ea4:	cmp	r5, r3
     ea8:	popeq	{r4, r5, r6, pc}
     eac:	ldr	r4, [r4, #8]
     eb0:	b	e68 <helper_add+0x38>
     eb4:	ldr	r3, [pc, #100]	; f20 <helper_add+0xf0>
     eb8:	str	r5, [r0]
     ebc:	add	r3, pc, r3
     ec0:	str	r4, [r0, #4]
     ec4:	ldr	r2, [r3]
     ec8:	cmp	r2, #0
     ecc:	str	r2, [r0, #8]
     ed0:	strne	r0, [r2, #4]
     ed4:	bne	ee4 <helper_add+0xb4>
     ed8:	ldr	r2, [r3, #4]
     edc:	cmp	r2, #0
     ee0:	streq	r0, [r3, #4]
     ee4:	ldr	r3, [pc, #56]	; f24 <helper_add+0xf4>
     ee8:	add	r3, pc, r3
     eec:	ldr	r2, [r3, #8]
     ef0:	str	r0, [r3]
     ef4:	add	r2, r2, #1
     ef8:	str	r2, [r3, #8]
     efc:	pop	{r4, r5, r6, pc}
     f00:	.word	0x00000334
     f04:	.word	0x0000045f
     f08:	.word	0x00000477
     f0c:	.word	0x00000137
     f10:	.word	0x000112cc
     f14:	.word	0x000002f4
     f18:	.word	0x0000041f
     f1c:	.word	0x00000444
     f20:	.word	0x00011274
     f24:	.word	0x00011248

00000f28 <h_hdl_new_remote_user>:
     f28:	ldr	r3, [pc, #28]	; f4c <h_hdl_new_remote_user+0x24>
     f2c:	ldr	r2, [pc, #28]	; f50 <h_hdl_new_remote_user+0x28>
     f30:	add	r3, pc, r3
     f34:	ldr	r3, [r3, r2]
     f38:	ldr	r2, [r0, #56]	; 0x38
     f3c:	ldr	r3, [r3, #288]	; 0x120
     f40:	tst	r2, r3
     f44:	bxeq	lr
     f48:	b	e30 <helper_add>
     f4c:	.word	0x000110c8
     f50:	.word	0x00000050

00000f54 <h_hdl_umode_changed>:
     f54:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     f58:	ldr	r6, [pc, #240]	; 1050 <h_hdl_umode_changed+0xfc>
     f5c:	ldr	r3, [pc, #240]	; 1054 <h_hdl_umode_changed+0x100>
     f60:	add	r6, pc, r6
     f64:	ldr	r4, [r0]
     f68:	ldr	r7, [r6, r3]
     f6c:	ldr	r5, [r0, #4]
     f70:	ldr	r2, [r4, #56]	; 0x38
     f74:	ldr	r3, [r7, #288]	; 0x120
     f78:	eor	r5, r5, r2
     f7c:	tst	r2, r3
     f80:	and	r5, r5, r3
     f84:	beq	1040 <h_hdl_umode_changed+0xec>
     f88:	ldrd	r2, [r4, #64]	; 0x40
     f8c:	mov	r3, #0
     f90:	and	r2, r2, #8192	; 0x2000
     f94:	orrs	r3, r2, r3
     f98:	beq	1028 <h_hdl_umode_changed+0xd4>
     f9c:	ldrh	r3, [r4, #80]	; 0x50
     fa0:	cmp	r3, #64	; 0x40
     fa4:	bne	1028 <h_hdl_umode_changed+0xd4>
     fa8:	ldr	r3, [r4, #24]
     fac:	cmp	r3, #0
     fb0:	bne	1008 <h_hdl_umode_changed+0xb4>
     fb4:	ldr	r2, [r7, #288]	; 0x120
     fb8:	ldr	r3, [r4, #56]	; 0x38
     fbc:	ldr	r1, [pc, #148]	; 1058 <h_hdl_umode_changed+0x104>
     fc0:	bic	r3, r3, r2
     fc4:	str	r3, [r4, #56]	; 0x38
     fc8:	ldr	r3, [pc, #140]	; 105c <h_hdl_umode_changed+0x108>
     fcc:	add	r1, pc, r1
     fd0:	mov	r0, r4
     fd4:	ldr	r2, [r6, r3]
     fd8:	ldr	r3, [pc, #128]	; 1060 <h_hdl_umode_changed+0x10c>
     fdc:	add	r2, r2, #88	; 0x58
     fe0:	add	r3, pc, r3
     fe4:	str	r3, [sp]
     fe8:	add	r3, r4, #88	; 0x58
     fec:	bl	720 <sendto_one@plt>
     ff0:	cmp	r5, #0
     ff4:	bne	1048 <h_hdl_umode_changed+0xf4>
     ff8:	mov	r0, r4
     ffc:	add	sp, sp, #12
    1000:	pop	{r4, r5, r6, r7, lr}
    1004:	b	c18 <helper_delete>
    1008:	ldr	r0, [r3, #36]	; 0x24
    100c:	cmp	r0, #0
    1010:	beq	fb4 <h_hdl_umode_changed+0x60>
    1014:	ldr	r1, [pc, #72]	; 1064 <h_hdl_umode_changed+0x110>
    1018:	add	r1, pc, r1
    101c:	bl	7a4 <privilegeset_in_set@plt>
    1020:	cmp	r0, #0
    1024:	beq	fb4 <h_hdl_umode_changed+0x60>
    1028:	cmp	r5, #0
    102c:	beq	1048 <h_hdl_umode_changed+0xf4>
    1030:	mov	r0, r4
    1034:	add	sp, sp, #12
    1038:	pop	{r4, r5, r6, r7, lr}
    103c:	b	e30 <helper_add>
    1040:	cmp	r5, #0
    1044:	bne	ff8 <h_hdl_umode_changed+0xa4>
    1048:	add	sp, sp, #12
    104c:	pop	{r4, r5, r6, r7, pc}
    1050:	.word	0x00011098
    1054:	.word	0x00000050
    1058:	.word	0x00000280
    105c:	.word	0x00000064
    1060:	.word	0x00000306
    1064:	.word	0x000002ce

00001068 <_modinit>:
    1068:	push	{r4, r5, r6, lr}
    106c:	bl	744 <find_umode_slot@plt>
    1070:	ldr	r4, [pc, #100]	; 10dc <_modinit+0x74>
    1074:	ldr	r3, [pc, #100]	; 10e0 <_modinit+0x78>
    1078:	add	r4, pc, r4
    107c:	ldr	r5, [r4, r3]
    1080:	str	r0, [r5, #288]	; 0x120
    1084:	bl	7bc <construct_umodebuf@plt>
    1088:	ldr	r3, [pc, #84]	; 10e4 <_modinit+0x7c>
    108c:	ldr	r3, [r4, r3]
    1090:	ldr	r4, [r3]
    1094:	cmp	r4, #0
    1098:	bne	10a4 <_modinit+0x3c>
    109c:	mov	r0, r4
    10a0:	pop	{r4, r5, r6, pc}
    10a4:	ldr	r0, [r4]
    10a8:	ldrh	r3, [r0, #80]	; 0x50
    10ac:	cmp	r3, #64	; 0x40
    10b0:	bne	10d4 <_modinit+0x6c>
    10b4:	ldr	r3, [r0, #24]
    10b8:	cmp	r3, #0
    10bc:	beq	10d4 <_modinit+0x6c>
    10c0:	ldr	r2, [r0, #56]	; 0x38
    10c4:	ldr	r3, [r5, #288]	; 0x120
    10c8:	tst	r2, r3
    10cc:	beq	10d4 <_modinit+0x6c>
    10d0:	bl	e30 <helper_add>
    10d4:	ldr	r4, [r4, #8]
    10d8:	b	1094 <_modinit+0x2c>
    10dc:	.word	0x00010f80
    10e0:	.word	0x00000050
    10e4:	.word	0x00000058

000010e8 <me_dehelper>:
    10e8:	push	{r4, r5, r6, lr}
    10ec:	mov	r4, r2
    10f0:	ldr	r6, [sp, #16]
    10f4:	ldr	r5, [pc, #112]	; 116c <me_dehelper+0x84>
    10f8:	ldr	r0, [r6, #4]
    10fc:	bl	780 <find_person@plt>
    1100:	add	r5, pc, r5
    1104:	subs	r1, r0, #0
    1108:	bne	1128 <me_dehelper+0x40>
    110c:	ldr	r2, [pc, #92]	; 1170 <me_dehelper+0x88>
    1110:	ldr	r3, [r6, #4]
    1114:	mov	r0, r4
    1118:	add	r2, pc, r2
    111c:	ldr	r1, [pc, #80]	; 1174 <me_dehelper+0x8c>
    1120:	pop	{r4, r5, r6, lr}
    1124:	b	774 <sendto_one_numeric@plt>
    1128:	ldrd	r2, [r1, #64]	; 0x40
    112c:	mov	r3, #0
    1130:	and	r2, r2, #8192	; 0x2000
    1134:	orrs	r3, r2, r3
    1138:	popeq	{r4, r5, r6, pc}
    113c:	ldrh	r3, [r1, #80]	; 0x50
    1140:	cmp	r3, #64	; 0x40
    1144:	popne	{r4, r5, r6, pc}
    1148:	ldr	r3, [pc, #40]	; 1178 <me_dehelper+0x90>
    114c:	ldr	r2, [r1, #56]	; 0x38
    1150:	ldr	r3, [r5, r3]
    1154:	ldr	r3, [r3, #288]	; 0x120
    1158:	tst	r2, r3
    115c:	popeq	{r4, r5, r6, pc}
    1160:	mov	r0, r4
    1164:	pop	{r4, r5, r6, lr}
    1168:	b	a50 <do_dehelper.part.2>
    116c:	.word	0x00010ef8
    1170:	.word	0x00000169
    1174:	.word	0x00000191
    1178:	.word	0x00000050

Disassembly of section .fini:

0000117c <_fini>:
    117c:	push	{r3, lr}
    1180:	pop	{r3, pc}
