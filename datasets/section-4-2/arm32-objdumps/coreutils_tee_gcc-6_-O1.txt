
../repos/coreutils/src/tee:     file format elf32-littlearm


Disassembly of section .init:

00010cc8 <.init>:
   10cc8:	push	{r3, lr}
   10ccc:	bl	10fac <close@plt+0x48>
   10cd0:	pop	{r3, pc}

Disassembly of section .plt:

00010cd4 <fdopen@plt-0x14>:
   10cd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cd8:	ldr	lr, [pc, #4]	; 10ce4 <fdopen@plt-0x4>
   10cdc:	add	lr, pc, lr
   10ce0:	ldr	pc, [lr, #8]!
   10ce4:	andeq	r5, r1, ip, lsl r3

00010ce8 <fdopen@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #796]!	; 0x31c

00010cf4 <calloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #788]!	; 0x314

00010d00 <fputs_unlocked@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #780]!	; 0x30c

00010d0c <raise@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #772]!	; 0x304

00010d18 <strcmp@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #764]!	; 0x2fc

00010d24 <posix_fadvise64@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d30 <read@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #748]!	; 0x2ec

00010d3c <fflush@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #740]!	; 0x2e4

00010d48 <free@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #732]!	; 0x2dc

00010d54 <_exit@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d60 <memcpy@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #716]!	; 0x2cc

00010d6c <mbsinit@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #708]!	; 0x2c4

00010d78 <signal@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #700]!	; 0x2bc

00010d84 <fwrite_unlocked@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d90 <memcmp@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #684]!	; 0x2ac

00010d9c <fputc_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #676]!	; 0x2a4

00010da8 <dcgettext@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #668]!	; 0x29c

00010db4 <realloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #660]!	; 0x294

00010dc0 <textdomain@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #652]!	; 0x28c

00010dcc <iswprint@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #644]!	; 0x284

00010dd8 <fwrite@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #636]!	; 0x27c

00010de4 <lseek64@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #628]!	; 0x274

00010df0 <__ctype_get_mb_cur_max@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #620]!	; 0x26c

00010dfc <__fpending@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #612]!	; 0x264

00010e08 <mbrtowc@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #604]!	; 0x25c

00010e14 <error@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #596]!	; 0x254

00010e20 <malloc@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #588]!	; 0x24c

00010e2c <__libc_start_main@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #580]!	; 0x244

00010e38 <__freading@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #572]!	; 0x23c

00010e44 <__gmon_start__@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #564]!	; 0x234

00010e50 <getopt_long@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #556]!	; 0x22c

00010e5c <__ctype_b_loc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #548]!	; 0x224

00010e68 <exit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #540]!	; 0x21c

00010e74 <strlen@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #532]!	; 0x214

00010e80 <__errno_location@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #524]!	; 0x20c

00010e8c <__cxa_atexit@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #516]!	; 0x204

00010e98 <setvbuf@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #508]!	; 0x1fc

00010ea4 <memset@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb0 <__printf_chk@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #492]!	; 0x1ec

00010ebc <fileno@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #484]!	; 0x1e4

00010ec8 <__fprintf_chk@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #476]!	; 0x1dc

00010ed4 <fclose@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee0 <fseeko64@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #460]!	; 0x1cc

00010eec <fcntl64@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #452]!	; 0x1c4

00010ef8 <__overflow@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #444]!	; 0x1bc

00010f04 <setlocale@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #436]!	; 0x1b4

00010f10 <strrchr@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #428]!	; 0x1ac

00010f1c <nl_langinfo@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #420]!	; 0x1a4

00010f28 <clearerr_unlocked@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #412]!	; 0x19c

00010f34 <fopen64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #404]!	; 0x194

00010f40 <bindtextdomain@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #86016	; 0x15000
   10f48:	ldr	pc, [ip, #396]!	; 0x18c

00010f4c <strncmp@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #86016	; 0x15000
   10f54:	ldr	pc, [ip, #388]!	; 0x184

00010f58 <abort@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #86016	; 0x15000
   10f60:	ldr	pc, [ip, #380]!	; 0x17c

00010f64 <close@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #86016	; 0x15000
   10f6c:	ldr	pc, [ip, #372]!	; 0x174

Disassembly of section .text:

00010f70 <.text>:
   10f70:	mov	fp, #0
   10f74:	mov	lr, #0
   10f78:	pop	{r1}		; (ldr r1, [sp], #4)
   10f7c:	mov	r2, sp
   10f80:	push	{r2}		; (str r2, [sp, #-4]!)
   10f84:	push	{r0}		; (str r0, [sp, #-4]!)
   10f88:	ldr	ip, [pc, #16]	; 10fa0 <close@plt+0x3c>
   10f8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f90:	ldr	r0, [pc, #12]	; 10fa4 <close@plt+0x40>
   10f94:	ldr	r3, [pc, #12]	; 10fa8 <close@plt+0x44>
   10f98:	bl	10e2c <__libc_start_main@plt>
   10f9c:	bl	10f58 <abort@plt>
   10fa0:	andeq	r5, r1, r8, lsr #5
   10fa4:	andeq	r1, r1, r8, ror r7
   10fa8:	andeq	r5, r1, r8, asr #4
   10fac:	ldr	r3, [pc, #20]	; 10fc8 <close@plt+0x64>
   10fb0:	ldr	r2, [pc, #20]	; 10fcc <close@plt+0x68>
   10fb4:	add	r3, pc, r3
   10fb8:	ldr	r2, [r3, r2]
   10fbc:	cmp	r2, #0
   10fc0:	bxeq	lr
   10fc4:	b	10e44 <__gmon_start__@plt>
   10fc8:	andeq	r5, r1, r4, asr #32
   10fcc:	andeq	r0, r0, r4, ror #1
   10fd0:	ldr	r3, [pc, #28]	; 10ff4 <close@plt+0x90>
   10fd4:	ldr	r0, [pc, #28]	; 10ff8 <close@plt+0x94>
   10fd8:	sub	r3, r3, r0
   10fdc:	cmp	r3, #6
   10fe0:	bxls	lr
   10fe4:	ldr	r3, [pc, #16]	; 10ffc <close@plt+0x98>
   10fe8:	cmp	r3, #0
   10fec:	bxeq	lr
   10ff0:	bx	r3
   10ff4:	andeq	r6, r2, pc, lsr r1
   10ff8:	andeq	r6, r2, ip, lsr r1
   10ffc:	andeq	r0, r0, r0
   11000:	ldr	r1, [pc, #36]	; 1102c <close@plt+0xc8>
   11004:	ldr	r0, [pc, #36]	; 11030 <close@plt+0xcc>
   11008:	sub	r1, r1, r0
   1100c:	asr	r1, r1, #2
   11010:	add	r1, r1, r1, lsr #31
   11014:	asrs	r1, r1, #1
   11018:	bxeq	lr
   1101c:	ldr	r3, [pc, #16]	; 11034 <close@plt+0xd0>
   11020:	cmp	r3, #0
   11024:	bxeq	lr
   11028:	bx	r3
   1102c:	andeq	r6, r2, ip, lsr r1
   11030:	andeq	r6, r2, ip, lsr r1
   11034:	andeq	r0, r0, r0
   11038:	push	{r4, lr}
   1103c:	ldr	r4, [pc, #24]	; 1105c <close@plt+0xf8>
   11040:	ldrb	r3, [r4]
   11044:	cmp	r3, #0
   11048:	popne	{r4, pc}
   1104c:	bl	10fd0 <close@plt+0x6c>
   11050:	mov	r3, #1
   11054:	strb	r3, [r4]
   11058:	pop	{r4, pc}
   1105c:	andeq	r6, r2, r4, ror #2
   11060:	ldr	r0, [pc, #40]	; 11090 <close@plt+0x12c>
   11064:	ldr	r3, [r0]
   11068:	cmp	r3, #0
   1106c:	bne	11074 <close@plt+0x110>
   11070:	b	11000 <close@plt+0x9c>
   11074:	ldr	r3, [pc, #24]	; 11094 <close@plt+0x130>
   11078:	cmp	r3, #0
   1107c:	beq	11070 <close@plt+0x10c>
   11080:	push	{r4, lr}
   11084:	blx	r3
   11088:	pop	{r4, lr}
   1108c:	b	11000 <close@plt+0x9c>
   11090:	andeq	r5, r2, r4, lsl pc
   11094:	andeq	r0, r0, r0
   11098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1109c:	sub	sp, sp, #8192	; 0x2000
   110a0:	sub	sp, sp, #20
   110a4:	mov	r7, r0
   110a8:	mov	r5, r1
   110ac:	str	r1, [sp, #8]
   110b0:	ldr	r3, [pc, #860]	; 11414 <close@plt+0x4b0>
   110b4:	ldrb	r2, [r3]
   110b8:	ldr	r1, [pc, #856]	; 11418 <close@plt+0x4b4>
   110bc:	ldr	r3, [pc, #856]	; 1141c <close@plt+0x4b8>
   110c0:	cmp	r2, #0
   110c4:	movne	fp, r3
   110c8:	moveq	fp, r1
   110cc:	mov	r1, #2
   110d0:	ldr	r3, [pc, #840]	; 11420 <close@plt+0x4bc>
   110d4:	ldr	r0, [r3]
   110d8:	bl	11eb0 <close@plt+0xf4c>
   110dc:	mov	r1, #4
   110e0:	add	r0, r7, #1
   110e4:	bl	14380 <close@plt+0x341c>
   110e8:	mov	r6, r0
   110ec:	str	r0, [sp, #12]
   110f0:	ldr	r4, [pc, #812]	; 11424 <close@plt+0x4c0>
   110f4:	ldr	r3, [r4]
   110f8:	str	r3, [r0]
   110fc:	mov	r2, #5
   11100:	ldr	r1, [pc, #800]	; 11428 <close@plt+0x4c4>
   11104:	mov	r0, #0
   11108:	bl	10da8 <dcgettext@plt>
   1110c:	str	r0, [r5, #-4]
   11110:	mov	r3, #0
   11114:	mov	r2, #2
   11118:	mov	r1, r3
   1111c:	ldr	r0, [r4]
   11120:	bl	10e98 <setvbuf@plt>
   11124:	cmp	r7, #0
   11128:	ble	111e4 <close@plt+0x280>
   1112c:	mov	r4, r5
   11130:	mov	r3, #1
   11134:	mov	r8, r3
   11138:	str	r3, [sp, #4]
   1113c:	mov	r5, r3
   11140:	ldr	sl, [pc, #716]	; 11414 <close@plt+0x4b0>
   11144:	b	111a4 <close@plt+0x240>
   11148:	ldr	r9, [sl, #4]
   1114c:	sub	r9, r9, #3
   11150:	cmp	r9, #1
   11154:	movhi	r9, #0
   11158:	movls	r9, #1
   1115c:	bl	10e80 <__errno_location@plt>
   11160:	ldr	r3, [r0]
   11164:	str	r3, [sp]
   11168:	ldr	r2, [r4]
   1116c:	mov	r1, #3
   11170:	mov	r0, #0
   11174:	bl	13b74 <close@plt+0x2c10>
   11178:	mov	r3, r0
   1117c:	ldr	r2, [pc, #680]	; 1142c <close@plt+0x4c8>
   11180:	ldr	r1, [sp]
   11184:	mov	r0, r9
   11188:	bl	10e14 <error@plt>
   1118c:	mov	r3, #0
   11190:	str	r3, [sp, #4]
   11194:	add	r5, r5, #1
   11198:	add	r4, r4, #4
   1119c:	cmp	r7, r5
   111a0:	blt	111d4 <close@plt+0x270>
   111a4:	mov	r1, fp
   111a8:	ldr	r0, [r4]
   111ac:	bl	11ff0 <close@plt+0x108c>
   111b0:	str	r0, [r6, #4]!
   111b4:	cmp	r0, #0
   111b8:	beq	11148 <close@plt+0x1e4>
   111bc:	mov	r3, #0
   111c0:	mov	r2, #2
   111c4:	mov	r1, r3
   111c8:	bl	10e98 <setvbuf@plt>
   111cc:	add	r8, r8, #1
   111d0:	b	11194 <close@plt+0x230>
   111d4:	cmp	r8, #0
   111d8:	beq	11218 <close@plt+0x2b4>
   111dc:	ldr	fp, [pc, #576]	; 11424 <close@plt+0x4c0>
   111e0:	b	11330 <close@plt+0x3cc>
   111e4:	mov	r3, #1
   111e8:	str	r3, [sp, #4]
   111ec:	mov	r8, r3
   111f0:	b	111dc <close@plt+0x278>
   111f4:	bl	10e80 <__errno_location@plt>
   111f8:	ldr	r3, [r0]
   111fc:	cmp	r3, #4
   11200:	beq	11328 <close@plt+0x3c4>
   11204:	ldr	r3, [sp]
   11208:	cmn	r3, #1
   1120c:	beq	1136c <close@plt+0x408>
   11210:	cmp	r7, #0
   11214:	ble	113fc <close@plt+0x498>
   11218:	ldr	r6, [sp, #12]
   1121c:	ldr	r5, [sp, #8]
   11220:	mov	r4, #1
   11224:	mov	sl, #3
   11228:	mov	r8, #0
   1122c:	ldr	r9, [pc, #504]	; 1142c <close@plt+0x4c8>
   11230:	b	113b0 <close@plt+0x44c>
   11234:	ldr	r3, [pc, #472]	; 11414 <close@plt+0x4b0>
   11238:	ldr	r9, [r3, #4]
   1123c:	bic	r9, r9, #2
   11240:	cmp	r9, #1
   11244:	movne	r9, #0
   11248:	moveq	r9, #1
   1124c:	ldr	r0, [fp]
   11250:	ldr	r3, [r4]
   11254:	cmp	r3, r0
   11258:	beq	112cc <close@plt+0x368>
   1125c:	cmp	r9, #0
   11260:	moveq	r3, #0
   11264:	streq	r3, [r6]
   11268:	bne	112d4 <close@plt+0x370>
   1126c:	sub	r8, r8, #1
   11270:	add	r5, r5, #1
   11274:	add	r4, r4, #4
   11278:	cmp	r7, r5
   1127c:	blt	11328 <close@plt+0x3c4>
   11280:	mov	r6, r4
   11284:	ldr	r3, [r4]
   11288:	cmp	r3, #0
   1128c:	beq	11270 <close@plt+0x30c>
   11290:	mov	r2, #1
   11294:	ldr	r1, [sp]
   11298:	add	r0, sp, #16
   1129c:	bl	10d84 <fwrite_unlocked@plt>
   112a0:	cmp	r0, #1
   112a4:	beq	11270 <close@plt+0x30c>
   112a8:	bl	10e80 <__errno_location@plt>
   112ac:	ldr	sl, [r0]
   112b0:	cmp	sl, #32
   112b4:	beq	11234 <close@plt+0x2d0>
   112b8:	ldr	r0, [r4]
   112bc:	ldr	r3, [fp]
   112c0:	cmp	r3, r0
   112c4:	moveq	r9, #1
   112c8:	bne	112d4 <close@plt+0x370>
   112cc:	bl	10f28 <clearerr_unlocked@plt>
   112d0:	b	1125c <close@plt+0x2f8>
   112d4:	ldr	r3, [pc, #312]	; 11414 <close@plt+0x4b0>
   112d8:	ldr	r9, [r3, #4]
   112dc:	sub	r9, r9, #3
   112e0:	cmp	r9, #1
   112e4:	movhi	r9, #0
   112e8:	movls	r9, #1
   112ec:	ldr	r3, [sp, #8]
   112f0:	add	r3, r3, r5, lsl #2
   112f4:	ldr	r2, [r3, #-4]
   112f8:	mov	r1, #3
   112fc:	mov	r0, #0
   11300:	bl	13b74 <close@plt+0x2c10>
   11304:	mov	r3, r0
   11308:	ldr	r2, [pc, #284]	; 1142c <close@plt+0x4c8>
   1130c:	mov	r1, sl
   11310:	mov	r0, r9
   11314:	bl	10e14 <error@plt>
   11318:	mov	r3, #0
   1131c:	str	r3, [r6]
   11320:	str	r3, [sp, #4]
   11324:	b	1126c <close@plt+0x308>
   11328:	cmp	r8, #0
   1132c:	beq	11204 <close@plt+0x2a0>
   11330:	mov	r2, #8192	; 0x2000
   11334:	add	r1, sp, #16
   11338:	mov	r0, #0
   1133c:	bl	10d30 <read@plt>
   11340:	subs	r3, r0, #0
   11344:	str	r3, [sp]
   11348:	blt	111f4 <close@plt+0x290>
   1134c:	ldr	r3, [sp]
   11350:	cmp	r3, #0
   11354:	ble	11204 <close@plt+0x2a0>
   11358:	cmp	r7, #0
   1135c:	blt	11328 <close@plt+0x3c4>
   11360:	ldr	r4, [sp, #12]
   11364:	mov	r5, #0
   11368:	b	11280 <close@plt+0x31c>
   1136c:	bl	10e80 <__errno_location@plt>
   11370:	ldr	r4, [r0]
   11374:	mov	r2, #5
   11378:	ldr	r1, [pc, #176]	; 11430 <close@plt+0x4cc>
   1137c:	mov	r0, #0
   11380:	bl	10da8 <dcgettext@plt>
   11384:	mov	r2, r0
   11388:	mov	r1, r4
   1138c:	mov	r0, #0
   11390:	bl	10e14 <error@plt>
   11394:	mov	r3, #0
   11398:	str	r3, [sp, #4]
   1139c:	b	11210 <close@plt+0x2ac>
   113a0:	add	r4, r4, #1
   113a4:	add	r5, r5, #4
   113a8:	cmp	r7, r4
   113ac:	blt	113fc <close@plt+0x498>
   113b0:	ldr	r0, [r6, #4]!
   113b4:	cmp	r0, #0
   113b8:	beq	113a0 <close@plt+0x43c>
   113bc:	bl	11ee4 <close@plt+0xf80>
   113c0:	cmp	r0, #0
   113c4:	beq	113a0 <close@plt+0x43c>
   113c8:	bl	10e80 <__errno_location@plt>
   113cc:	ldr	fp, [r0]
   113d0:	ldr	r2, [r5]
   113d4:	mov	r1, sl
   113d8:	mov	r0, r8
   113dc:	bl	13b74 <close@plt+0x2c10>
   113e0:	mov	r3, r0
   113e4:	mov	r2, r9
   113e8:	mov	r1, fp
   113ec:	mov	r0, r8
   113f0:	bl	10e14 <error@plt>
   113f4:	str	r8, [sp, #4]
   113f8:	b	113a0 <close@plt+0x43c>
   113fc:	ldr	r0, [sp, #12]
   11400:	bl	1208c <close@plt+0x1128>
   11404:	ldr	r0, [sp, #4]
   11408:	add	sp, sp, #8192	; 0x2000
   1140c:	add	sp, sp, #20
   11410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11414:	andeq	r6, r2, r8, ror #2
   11418:	muleq	r1, r0, r3
   1141c:	andeq	r5, r1, ip, lsl #7
   11420:	andeq	r6, r2, r8, asr r1
   11424:	andeq	r6, r2, ip, asr r1
   11428:	muleq	r1, r4, r3
   1142c:	andeq	r5, r1, r4, ror #20
   11430:	andeq	r5, r1, r4, lsr #7
   11434:	push	{lr}		; (str lr, [sp, #-4]!)
   11438:	sub	sp, sp, #60	; 0x3c
   1143c:	subs	r6, r0, #0
   11440:	beq	1147c <close@plt+0x518>
   11444:	ldr	r3, [pc, #728]	; 11724 <close@plt+0x7c0>
   11448:	ldr	r4, [r3]
   1144c:	mov	r2, #5
   11450:	ldr	r1, [pc, #720]	; 11728 <close@plt+0x7c4>
   11454:	mov	r0, #0
   11458:	bl	10da8 <dcgettext@plt>
   1145c:	ldr	r3, [pc, #712]	; 1172c <close@plt+0x7c8>
   11460:	ldr	r3, [r3]
   11464:	mov	r2, r0
   11468:	mov	r1, #1
   1146c:	mov	r0, r4
   11470:	bl	10ec8 <__fprintf_chk@plt>
   11474:	mov	r0, r6
   11478:	bl	10e68 <exit@plt>
   1147c:	mov	r2, #5
   11480:	ldr	r1, [pc, #680]	; 11730 <close@plt+0x7cc>
   11484:	mov	r0, #0
   11488:	bl	10da8 <dcgettext@plt>
   1148c:	ldr	r3, [pc, #664]	; 1172c <close@plt+0x7c8>
   11490:	ldr	r2, [r3]
   11494:	mov	r1, r0
   11498:	mov	r0, #1
   1149c:	bl	10eb0 <__printf_chk@plt>
   114a0:	mov	r2, #5
   114a4:	ldr	r1, [pc, #648]	; 11734 <close@plt+0x7d0>
   114a8:	mov	r0, #0
   114ac:	bl	10da8 <dcgettext@plt>
   114b0:	ldr	r4, [pc, #640]	; 11738 <close@plt+0x7d4>
   114b4:	ldr	r1, [r4]
   114b8:	bl	10d00 <fputs_unlocked@plt>
   114bc:	mov	r2, #5
   114c0:	ldr	r1, [pc, #628]	; 1173c <close@plt+0x7d8>
   114c4:	mov	r0, #0
   114c8:	bl	10da8 <dcgettext@plt>
   114cc:	ldr	r1, [r4]
   114d0:	bl	10d00 <fputs_unlocked@plt>
   114d4:	mov	r2, #5
   114d8:	ldr	r1, [pc, #608]	; 11740 <close@plt+0x7dc>
   114dc:	mov	r0, #0
   114e0:	bl	10da8 <dcgettext@plt>
   114e4:	ldr	r1, [r4]
   114e8:	bl	10d00 <fputs_unlocked@plt>
   114ec:	mov	r2, #5
   114f0:	ldr	r1, [pc, #588]	; 11744 <close@plt+0x7e0>
   114f4:	mov	r0, #0
   114f8:	bl	10da8 <dcgettext@plt>
   114fc:	ldr	r1, [r4]
   11500:	bl	10d00 <fputs_unlocked@plt>
   11504:	mov	r2, #5
   11508:	ldr	r1, [pc, #568]	; 11748 <close@plt+0x7e4>
   1150c:	mov	r0, #0
   11510:	bl	10da8 <dcgettext@plt>
   11514:	ldr	r1, [r4]
   11518:	bl	10d00 <fputs_unlocked@plt>
   1151c:	mov	ip, sp
   11520:	ldr	lr, [pc, #548]	; 1174c <close@plt+0x7e8>
   11524:	ldm	lr!, {r0, r1, r2, r3}
   11528:	stmia	ip!, {r0, r1, r2, r3}
   1152c:	ldm	lr!, {r0, r1, r2, r3}
   11530:	stmia	ip!, {r0, r1, r2, r3}
   11534:	ldm	lr!, {r0, r1, r2, r3}
   11538:	stmia	ip!, {r0, r1, r2, r3}
   1153c:	ldm	lr, {r0, r1}
   11540:	stm	ip, {r0, r1}
   11544:	ldr	r1, [sp]
   11548:	cmp	r1, #0
   1154c:	moveq	r4, sp
   11550:	beq	11578 <close@plt+0x614>
   11554:	mov	r4, sp
   11558:	ldr	r5, [pc, #496]	; 11750 <close@plt+0x7ec>
   1155c:	mov	r0, r5
   11560:	bl	10d18 <strcmp@plt>
   11564:	cmp	r0, #0
   11568:	beq	11578 <close@plt+0x614>
   1156c:	ldr	r1, [r4, #8]!
   11570:	cmp	r1, #0
   11574:	bne	1155c <close@plt+0x5f8>
   11578:	ldr	r4, [r4, #4]
   1157c:	cmp	r4, #0
   11580:	beq	11694 <close@plt+0x730>
   11584:	mov	r2, #5
   11588:	ldr	r1, [pc, #452]	; 11754 <close@plt+0x7f0>
   1158c:	mov	r0, #0
   11590:	bl	10da8 <dcgettext@plt>
   11594:	ldr	r3, [pc, #444]	; 11758 <close@plt+0x7f4>
   11598:	ldr	r2, [pc, #444]	; 1175c <close@plt+0x7f8>
   1159c:	mov	r1, r0
   115a0:	mov	r0, #1
   115a4:	bl	10eb0 <__printf_chk@plt>
   115a8:	mov	r1, #0
   115ac:	mov	r0, #5
   115b0:	bl	10f04 <setlocale@plt>
   115b4:	cmp	r0, #0
   115b8:	beq	115d0 <close@plt+0x66c>
   115bc:	mov	r2, #3
   115c0:	ldr	r1, [pc, #408]	; 11760 <close@plt+0x7fc>
   115c4:	bl	10f4c <strncmp@plt>
   115c8:	cmp	r0, #0
   115cc:	bne	11630 <close@plt+0x6cc>
   115d0:	mov	r2, #5
   115d4:	ldr	r1, [pc, #392]	; 11764 <close@plt+0x800>
   115d8:	mov	r0, #0
   115dc:	bl	10da8 <dcgettext@plt>
   115e0:	ldr	r5, [pc, #360]	; 11750 <close@plt+0x7ec>
   115e4:	mov	r3, r5
   115e8:	ldr	r2, [pc, #360]	; 11758 <close@plt+0x7f4>
   115ec:	mov	r1, r0
   115f0:	mov	r0, #1
   115f4:	bl	10eb0 <__printf_chk@plt>
   115f8:	mov	r2, #5
   115fc:	ldr	r1, [pc, #356]	; 11768 <close@plt+0x804>
   11600:	mov	r0, #0
   11604:	bl	10da8 <dcgettext@plt>
   11608:	mov	r1, r0
   1160c:	ldr	r2, [pc, #344]	; 1176c <close@plt+0x808>
   11610:	ldr	r3, [pc, #344]	; 11770 <close@plt+0x80c>
   11614:	cmp	r4, r5
   11618:	movne	r3, r2
   1161c:	mov	r2, r4
   11620:	mov	r0, #1
   11624:	bl	10eb0 <__printf_chk@plt>
   11628:	b	11474 <close@plt+0x510>
   1162c:	ldr	r4, [pc, #284]	; 11750 <close@plt+0x7ec>
   11630:	mov	r2, #5
   11634:	ldr	r1, [pc, #312]	; 11774 <close@plt+0x810>
   11638:	mov	r0, #0
   1163c:	bl	10da8 <dcgettext@plt>
   11640:	ldr	r3, [pc, #240]	; 11738 <close@plt+0x7d4>
   11644:	ldr	r1, [r3]
   11648:	bl	10d00 <fputs_unlocked@plt>
   1164c:	b	115d0 <close@plt+0x66c>
   11650:	mov	r2, #5
   11654:	ldr	r1, [pc, #264]	; 11764 <close@plt+0x800>
   11658:	mov	r0, #0
   1165c:	bl	10da8 <dcgettext@plt>
   11660:	ldr	r4, [pc, #232]	; 11750 <close@plt+0x7ec>
   11664:	mov	r3, r4
   11668:	ldr	r2, [pc, #232]	; 11758 <close@plt+0x7f4>
   1166c:	mov	r1, r0
   11670:	mov	r0, #1
   11674:	bl	10eb0 <__printf_chk@plt>
   11678:	mov	r2, #5
   1167c:	ldr	r1, [pc, #228]	; 11768 <close@plt+0x804>
   11680:	mov	r0, #0
   11684:	bl	10da8 <dcgettext@plt>
   11688:	mov	r1, r0
   1168c:	ldr	r3, [pc, #220]	; 11770 <close@plt+0x80c>
   11690:	b	1161c <close@plt+0x6b8>
   11694:	mov	r2, #5
   11698:	ldr	r1, [pc, #180]	; 11754 <close@plt+0x7f0>
   1169c:	mov	r0, #0
   116a0:	bl	10da8 <dcgettext@plt>
   116a4:	ldr	r3, [pc, #172]	; 11758 <close@plt+0x7f4>
   116a8:	ldr	r2, [pc, #172]	; 1175c <close@plt+0x7f8>
   116ac:	mov	r1, r0
   116b0:	mov	r0, #1
   116b4:	bl	10eb0 <__printf_chk@plt>
   116b8:	mov	r1, #0
   116bc:	mov	r0, #5
   116c0:	bl	10f04 <setlocale@plt>
   116c4:	cmp	r0, #0
   116c8:	beq	11650 <close@plt+0x6ec>
   116cc:	mov	r2, #3
   116d0:	ldr	r1, [pc, #136]	; 11760 <close@plt+0x7fc>
   116d4:	bl	10f4c <strncmp@plt>
   116d8:	cmp	r0, #0
   116dc:	bne	1162c <close@plt+0x6c8>
   116e0:	mov	r2, #5
   116e4:	ldr	r1, [pc, #120]	; 11764 <close@plt+0x800>
   116e8:	mov	r0, #0
   116ec:	bl	10da8 <dcgettext@plt>
   116f0:	ldr	r4, [pc, #88]	; 11750 <close@plt+0x7ec>
   116f4:	mov	r3, r4
   116f8:	ldr	r2, [pc, #88]	; 11758 <close@plt+0x7f4>
   116fc:	mov	r1, r0
   11700:	mov	r0, #1
   11704:	bl	10eb0 <__printf_chk@plt>
   11708:	mov	r2, #5
   1170c:	ldr	r1, [pc, #84]	; 11768 <close@plt+0x804>
   11710:	mov	r0, #0
   11714:	bl	10da8 <dcgettext@plt>
   11718:	mov	r1, r0
   1171c:	ldr	r3, [pc, #76]	; 11770 <close@plt+0x80c>
   11720:	b	1161c <close@plt+0x6b8>
   11724:	andeq	r6, r2, r0, asr r1
   11728:			; <UNDEFINED> instruction: 0x000153b4
   1172c:	andeq	r6, r2, ip, ror r1
   11730:	ldrdeq	r5, [r1], -ip
   11734:	andeq	r5, r1, r0, lsl #8
   11738:	andeq	r6, r2, ip, asr r1
   1173c:	andeq	r5, r1, r0, asr #9
   11740:	andeq	r5, r1, r0, asr r5
   11744:	andeq	r5, r1, r0, lsl #11
   11748:			; <UNDEFINED> instruction: 0x000155b8
   1174c:	ldrdeq	r5, [r1], -r0
   11750:			; <UNDEFINED> instruction: 0x000153b0
   11754:			; <UNDEFINED> instruction: 0x000157b8
   11758:	ldrdeq	r5, [r1], -r0
   1175c:	strdeq	r5, [r1], -r8
   11760:	andeq	r5, r1, r8, lsl #16
   11764:	andeq	r5, r1, r4, asr r8
   11768:	andeq	r5, r1, r0, ror r8
   1176c:	strdeq	r5, [r1], -ip
   11770:	andeq	r5, r1, r8, lsl r9
   11774:	andeq	r5, r1, ip, lsl #16
   11778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1177c:	sub	sp, sp, #20
   11780:	mov	r6, r0
   11784:	mov	r5, r1
   11788:	ldr	r0, [r1]
   1178c:	bl	1218c <close@plt+0x1228>
   11790:	ldr	r1, [pc, #512]	; 11998 <close@plt+0xa34>
   11794:	mov	r0, #6
   11798:	bl	10f04 <setlocale@plt>
   1179c:	ldr	r4, [pc, #504]	; 1199c <close@plt+0xa38>
   117a0:	ldr	r1, [pc, #504]	; 119a0 <close@plt+0xa3c>
   117a4:	mov	r0, r4
   117a8:	bl	10f40 <bindtextdomain@plt>
   117ac:	mov	r0, r4
   117b0:	bl	10dc0 <textdomain@plt>
   117b4:	ldr	r0, [pc, #488]	; 119a4 <close@plt+0xa40>
   117b8:	bl	152ac <close@plt+0x4348>
   117bc:	ldr	r3, [pc, #484]	; 119a8 <close@plt+0xa44>
   117c0:	mov	r2, #0
   117c4:	strb	r2, [r3]
   117c8:	strb	r2, [r3, #8]
   117cc:	ldr	r4, [pc, #472]	; 119ac <close@plt+0xa48>
   117d0:	ldr	r7, [pc, #472]	; 119b0 <close@plt+0xa4c>
   117d4:	mov	r8, r3
   117d8:	ldr	r9, [pc, #468]	; 119b4 <close@plt+0xa50>
   117dc:	add	fp, r4, #56	; 0x38
   117e0:	ldr	sl, [pc, #464]	; 119b8 <close@plt+0xa54>
   117e4:	mov	r3, #0
   117e8:	str	r3, [sp]
   117ec:	add	r3, r4, #92	; 0x5c
   117f0:	mov	r2, r7
   117f4:	mov	r1, r5
   117f8:	mov	r0, r6
   117fc:	bl	10e50 <getopt_long@plt>
   11800:	cmn	r0, #1
   11804:	beq	118f4 <close@plt+0x990>
   11808:	cmp	r0, #97	; 0x61
   1180c:	beq	11884 <close@plt+0x920>
   11810:	bgt	1182c <close@plt+0x8c8>
   11814:	cmn	r0, #3
   11818:	beq	118a8 <close@plt+0x944>
   1181c:	cmn	r0, #2
   11820:	bne	118ec <close@plt+0x988>
   11824:	mov	r0, #0
   11828:	bl	11434 <close@plt+0x4d0>
   1182c:	cmp	r0, #105	; 0x69
   11830:	beq	11890 <close@plt+0x92c>
   11834:	cmp	r0, #112	; 0x70
   11838:	bne	118ec <close@plt+0x988>
   1183c:	ldr	r1, [r9]
   11840:	cmp	r1, #0
   11844:	beq	1189c <close@plt+0x938>
   11848:	mov	r3, #1
   1184c:	str	r3, [sp, #8]
   11850:	ldr	r3, [pc, #356]	; 119bc <close@plt+0xa58>
   11854:	ldr	r3, [r3]
   11858:	str	r3, [sp, #4]
   1185c:	mov	r3, #4
   11860:	str	r3, [sp]
   11864:	mov	r3, fp
   11868:	add	r2, r4, #72	; 0x48
   1186c:	mov	r0, sl
   11870:	bl	11ca4 <close@plt+0xd40>
   11874:	add	r0, r4, r0, lsl #2
   11878:	ldr	r3, [r0, #56]	; 0x38
   1187c:	str	r3, [r8, #4]
   11880:	b	117e4 <close@plt+0x880>
   11884:	mov	r3, #1
   11888:	strb	r3, [r8]
   1188c:	b	117e4 <close@plt+0x880>
   11890:	mov	r3, #1
   11894:	strb	r3, [r8, #8]
   11898:	b	117e4 <close@plt+0x880>
   1189c:	mov	r3, #2
   118a0:	str	r3, [r8, #4]
   118a4:	b	117e4 <close@plt+0x880>
   118a8:	mov	r4, #0
   118ac:	str	r4, [sp, #12]
   118b0:	ldr	r3, [pc, #264]	; 119c0 <close@plt+0xa5c>
   118b4:	str	r3, [sp, #8]
   118b8:	ldr	r3, [pc, #260]	; 119c4 <close@plt+0xa60>
   118bc:	str	r3, [sp, #4]
   118c0:	ldr	r3, [pc, #256]	; 119c8 <close@plt+0xa64>
   118c4:	str	r3, [sp]
   118c8:	ldr	r3, [pc, #252]	; 119cc <close@plt+0xa68>
   118cc:	ldr	r3, [r3]
   118d0:	ldr	r2, [pc, #248]	; 119d0 <close@plt+0xa6c>
   118d4:	ldr	r1, [pc, #248]	; 119d4 <close@plt+0xa70>
   118d8:	ldr	r0, [pc, #248]	; 119d8 <close@plt+0xa74>
   118dc:	ldr	r0, [r0]
   118e0:	bl	141bc <close@plt+0x3258>
   118e4:	mov	r0, r4
   118e8:	bl	10e68 <exit@plt>
   118ec:	mov	r0, #1
   118f0:	bl	11434 <close@plt+0x4d0>
   118f4:	ldr	r3, [pc, #172]	; 119a8 <close@plt+0xa44>
   118f8:	ldrb	r3, [r3, #8]
   118fc:	cmp	r3, #0
   11900:	bne	1194c <close@plt+0x9e8>
   11904:	ldr	r3, [pc, #156]	; 119a8 <close@plt+0xa44>
   11908:	ldr	r3, [r3, #4]
   1190c:	cmp	r3, #0
   11910:	bne	1195c <close@plt+0x9f8>
   11914:	ldr	r3, [pc, #192]	; 119dc <close@plt+0xa78>
   11918:	ldr	r0, [r3]
   1191c:	add	r1, r5, r0, lsl #2
   11920:	sub	r0, r6, r0
   11924:	bl	11098 <close@plt+0x134>
   11928:	mov	r4, r0
   1192c:	mov	r0, #0
   11930:	bl	10f64 <close@plt>
   11934:	cmp	r0, #0
   11938:	bne	1196c <close@plt+0xa08>
   1193c:	eor	r0, r4, #1
   11940:	uxtb	r0, r0
   11944:	add	sp, sp, #20
   11948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1194c:	mov	r1, #1
   11950:	mov	r0, #2
   11954:	bl	10d78 <signal@plt>
   11958:	b	11904 <close@plt+0x9a0>
   1195c:	mov	r1, #1
   11960:	mov	r0, #13
   11964:	bl	10d78 <signal@plt>
   11968:	b	11914 <close@plt+0x9b0>
   1196c:	bl	10e80 <__errno_location@plt>
   11970:	ldr	r4, [r0]
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #96]	; 119e0 <close@plt+0xa7c>
   1197c:	mov	r0, #0
   11980:	bl	10da8 <dcgettext@plt>
   11984:	mov	r3, r0
   11988:	ldr	r2, [pc, #84]	; 119e4 <close@plt+0xa80>
   1198c:	mov	r1, r4
   11990:	mov	r0, #1
   11994:	bl	10e14 <error@plt>
   11998:	strdeq	r5, [r1], -ip
   1199c:	strdeq	r5, [r1], -ip
   119a0:	andeq	r5, r1, r4, lsr #17
   119a4:	muleq	r1, r8, sp
   119a8:	andeq	r6, r2, r8, ror #2
   119ac:	ldrdeq	r5, [r1], -r0
   119b0:	strdeq	r5, [r1], -ip
   119b4:	andeq	r6, r2, r0, ror #2
   119b8:			; <UNDEFINED> instruction: 0x000158bc
   119bc:	strdeq	r6, [r2], -r4
   119c0:	andeq	r5, r1, ip, asr #17
   119c4:	ldrdeq	r5, [r1], -ip
   119c8:	strdeq	r5, [r1], -r0
   119cc:	strdeq	r6, [r2], -r0
   119d0:	strdeq	r5, [r1], -r8
   119d4:			; <UNDEFINED> instruction: 0x000153b0
   119d8:	andeq	r6, r2, ip, asr r1
   119dc:	andeq	r6, r2, r8, asr #2
   119e0:	andeq	r5, r1, r0, lsl #18
   119e4:	andeq	r5, r1, r4, ror #20
   119e8:	push	{r4, lr}
   119ec:	mov	r0, #1
   119f0:	bl	11434 <close@plt+0x4d0>
   119f4:	pop	{r4, pc}
   119f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119fc:	sub	sp, sp, #12
   11a00:	str	r0, [sp, #4]
   11a04:	mov	r6, r1
   11a08:	mov	fp, r2
   11a0c:	mov	r8, r3
   11a10:	bl	10e74 <strlen@plt>
   11a14:	str	r0, [sp]
   11a18:	ldr	r4, [r6]
   11a1c:	cmp	r4, #0
   11a20:	beq	11ac8 <close@plt+0xb64>
   11a24:	mov	r5, fp
   11a28:	mov	sl, #0
   11a2c:	mvn	r9, #0
   11a30:	mov	r7, sl
   11a34:	b	11a54 <close@plt+0xaf0>
   11a38:	mov	r9, r7
   11a3c:	b	11abc <close@plt+0xb58>
   11a40:	add	r7, r7, #1
   11a44:	ldr	r4, [r6, #4]!
   11a48:	add	r5, r5, r8
   11a4c:	cmp	r4, #0
   11a50:	beq	11ab4 <close@plt+0xb50>
   11a54:	ldr	r2, [sp]
   11a58:	ldr	r1, [sp, #4]
   11a5c:	mov	r0, r4
   11a60:	bl	10f4c <strncmp@plt>
   11a64:	cmp	r0, #0
   11a68:	bne	11a40 <close@plt+0xadc>
   11a6c:	mov	r0, r4
   11a70:	bl	10e74 <strlen@plt>
   11a74:	ldr	r3, [sp]
   11a78:	cmp	r3, r0
   11a7c:	beq	11a38 <close@plt+0xad4>
   11a80:	cmn	r9, #1
   11a84:	moveq	r9, r7
   11a88:	beq	11a40 <close@plt+0xadc>
   11a8c:	cmp	fp, #0
   11a90:	moveq	sl, #1
   11a94:	beq	11a40 <close@plt+0xadc>
   11a98:	mov	r2, r8
   11a9c:	mov	r1, r5
   11aa0:	mla	r0, r8, r9, fp
   11aa4:	bl	10d90 <memcmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	movne	sl, #1
   11ab0:	b	11a40 <close@plt+0xadc>
   11ab4:	cmp	sl, #0
   11ab8:	mvnne	r9, #1
   11abc:	mov	r0, r9
   11ac0:	add	sp, sp, #12
   11ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ac8:	mvn	r9, #0
   11acc:	b	11abc <close@plt+0xb58>
   11ad0:	push	{r4, r5, r6, lr}
   11ad4:	mov	r6, r0
   11ad8:	ldr	r0, [r1]
   11adc:	cmp	r0, #0
   11ae0:	beq	11b1c <close@plt+0xbb8>
   11ae4:	mov	r4, r1
   11ae8:	mov	r5, #0
   11aec:	mov	r1, r6
   11af0:	bl	10d18 <strcmp@plt>
   11af4:	cmp	r0, #0
   11af8:	beq	11b14 <close@plt+0xbb0>
   11afc:	add	r5, r5, #1
   11b00:	ldr	r0, [r4, #4]!
   11b04:	cmp	r0, #0
   11b08:	bne	11aec <close@plt+0xb88>
   11b0c:	mvn	r0, #0
   11b10:	pop	{r4, r5, r6, pc}
   11b14:	mov	r0, r5
   11b18:	pop	{r4, r5, r6, pc}
   11b1c:	mvn	r0, #0
   11b20:	pop	{r4, r5, r6, pc}
   11b24:	push	{r4, r5, r6, lr}
   11b28:	sub	sp, sp, #8
   11b2c:	mov	r5, r0
   11b30:	mov	r4, r1
   11b34:	cmn	r2, #1
   11b38:	mov	r2, #5
   11b3c:	ldreq	r1, [pc, #76]	; 11b90 <close@plt+0xc2c>
   11b40:	ldrne	r1, [pc, #76]	; 11b94 <close@plt+0xc30>
   11b44:	mov	r0, #0
   11b48:	bl	10da8 <dcgettext@plt>
   11b4c:	mov	r6, r0
   11b50:	mov	r2, r4
   11b54:	mov	r1, #8
   11b58:	mov	r0, #0
   11b5c:	bl	13a3c <close@plt+0x2ad8>
   11b60:	mov	r4, r0
   11b64:	mov	r1, r5
   11b68:	mov	r0, #1
   11b6c:	bl	13ccc <close@plt+0x2d68>
   11b70:	str	r0, [sp]
   11b74:	mov	r3, r4
   11b78:	mov	r2, r6
   11b7c:	mov	r1, #0
   11b80:	mov	r0, r1
   11b84:	bl	10e14 <error@plt>
   11b88:	add	sp, sp, #8
   11b8c:	pop	{r4, r5, r6, pc}
   11b90:	strdeq	r5, [r1], -r0
   11b94:	andeq	r5, r1, ip, lsl #20
   11b98:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b9c:	mov	r7, r0
   11ba0:	mov	r4, r1
   11ba4:	mov	r8, r2
   11ba8:	mov	r2, #5
   11bac:	ldr	r1, [pc, #224]	; 11c94 <close@plt+0xd30>
   11bb0:	mov	r0, #0
   11bb4:	bl	10da8 <dcgettext@plt>
   11bb8:	ldr	r3, [pc, #216]	; 11c98 <close@plt+0xd34>
   11bbc:	ldr	r1, [r3]
   11bc0:	bl	10d00 <fputs_unlocked@plt>
   11bc4:	ldr	r5, [r7]
   11bc8:	cmp	r5, #0
   11bcc:	beq	11c5c <close@plt+0xcf8>
   11bd0:	mov	r9, #0
   11bd4:	mov	r6, r9
   11bd8:	ldr	sl, [pc, #184]	; 11c98 <close@plt+0xd34>
   11bdc:	b	11c18 <close@plt+0xcb4>
   11be0:	ldr	r9, [sl]
   11be4:	mov	r0, r5
   11be8:	bl	13cdc <close@plt+0x2d78>
   11bec:	mov	r3, r0
   11bf0:	ldr	r2, [pc, #164]	; 11c9c <close@plt+0xd38>
   11bf4:	mov	r1, #1
   11bf8:	mov	r0, r9
   11bfc:	bl	10ec8 <__fprintf_chk@plt>
   11c00:	mov	r9, r4
   11c04:	add	r6, r6, #1
   11c08:	ldr	r5, [r7, #4]!
   11c0c:	add	r4, r4, r8
   11c10:	cmp	r5, #0
   11c14:	beq	11c5c <close@plt+0xcf8>
   11c18:	cmp	r6, #0
   11c1c:	beq	11be0 <close@plt+0xc7c>
   11c20:	mov	r2, r8
   11c24:	mov	r1, r4
   11c28:	mov	r0, r9
   11c2c:	bl	10d90 <memcmp@plt>
   11c30:	cmp	r0, #0
   11c34:	bne	11be0 <close@plt+0xc7c>
   11c38:	ldr	fp, [sl]
   11c3c:	mov	r0, r5
   11c40:	bl	13cdc <close@plt+0x2d78>
   11c44:	mov	r3, r0
   11c48:	ldr	r2, [pc, #80]	; 11ca0 <close@plt+0xd3c>
   11c4c:	mov	r1, #1
   11c50:	mov	r0, fp
   11c54:	bl	10ec8 <__fprintf_chk@plt>
   11c58:	b	11c04 <close@plt+0xca0>
   11c5c:	ldr	r3, [pc, #52]	; 11c98 <close@plt+0xd34>
   11c60:	ldr	r0, [r3]
   11c64:	ldr	r3, [r0, #20]
   11c68:	ldr	r2, [r0, #24]
   11c6c:	cmp	r3, r2
   11c70:	bcs	11c88 <close@plt+0xd24>
   11c74:	add	r2, r3, #1
   11c78:	str	r2, [r0, #20]
   11c7c:	mov	r2, #10
   11c80:	strb	r2, [r3]
   11c84:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c88:	mov	r1, #10
   11c8c:	bl	10ef8 <__overflow@plt>
   11c90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c94:	andeq	r5, r1, ip, lsr #20
   11c98:	andeq	r6, r2, r0, asr r1
   11c9c:	andeq	r5, r1, r4, asr #20
   11ca0:	andeq	r5, r1, ip, asr #20
   11ca4:	push	{r4, r5, r6, r7, r8, lr}
   11ca8:	mov	r7, r0
   11cac:	mov	r5, r1
   11cb0:	mov	r4, r2
   11cb4:	mov	r6, r3
   11cb8:	ldrb	r3, [sp, #32]
   11cbc:	cmp	r3, #0
   11cc0:	beq	11d10 <close@plt+0xdac>
   11cc4:	ldr	r3, [sp, #24]
   11cc8:	mov	r2, r6
   11ccc:	mov	r1, r4
   11cd0:	mov	r0, r5
   11cd4:	bl	119f8 <close@plt+0xa94>
   11cd8:	cmp	r0, #0
   11cdc:	popge	{r4, r5, r6, r7, r8, pc}
   11ce0:	mov	r2, r0
   11ce4:	mov	r1, r5
   11ce8:	mov	r0, r7
   11cec:	bl	11b24 <close@plt+0xbc0>
   11cf0:	ldr	r2, [sp, #24]
   11cf4:	mov	r1, r6
   11cf8:	mov	r0, r4
   11cfc:	bl	11b98 <close@plt+0xc34>
   11d00:	ldr	r3, [sp, #28]
   11d04:	blx	r3
   11d08:	mvn	r0, #0
   11d0c:	pop	{r4, r5, r6, r7, r8, pc}
   11d10:	mov	r1, r2
   11d14:	mov	r0, r5
   11d18:	bl	11ad0 <close@plt+0xb6c>
   11d1c:	b	11cd8 <close@plt+0xd74>
   11d20:	push	{r4, r5, r6, r7, r8, lr}
   11d24:	ldr	r6, [r1]
   11d28:	cmp	r6, #0
   11d2c:	beq	11d70 <close@plt+0xe0c>
   11d30:	mov	r7, r3
   11d34:	mov	r8, r0
   11d38:	mov	r4, r2
   11d3c:	mov	r5, r1
   11d40:	mov	r2, r7
   11d44:	mov	r1, r4
   11d48:	mov	r0, r8
   11d4c:	bl	10d90 <memcmp@plt>
   11d50:	cmp	r0, #0
   11d54:	beq	11d68 <close@plt+0xe04>
   11d58:	ldr	r6, [r5, #4]!
   11d5c:	add	r4, r4, r7
   11d60:	cmp	r6, #0
   11d64:	bne	11d40 <close@plt+0xddc>
   11d68:	mov	r0, r6
   11d6c:	pop	{r4, r5, r6, r7, r8, pc}
   11d70:	mov	r6, #0
   11d74:	b	11d68 <close@plt+0xe04>
   11d78:	ldr	r3, [pc, #4]	; 11d84 <close@plt+0xe20>
   11d7c:	str	r0, [r3]
   11d80:	bx	lr
   11d84:	andeq	r6, r2, r4, ror r1
   11d88:	ldr	r3, [pc, #4]	; 11d94 <close@plt+0xe30>
   11d8c:	strb	r0, [r3, #4]
   11d90:	bx	lr
   11d94:	andeq	r6, r2, r4, ror r1
   11d98:	push	{r4, r5, r6, lr}
   11d9c:	sub	sp, sp, #8
   11da0:	ldr	r3, [pc, #200]	; 11e70 <close@plt+0xf0c>
   11da4:	ldr	r0, [r3]
   11da8:	bl	1493c <close@plt+0x39d8>
   11dac:	cmp	r0, #0
   11db0:	beq	11dd4 <close@plt+0xe70>
   11db4:	ldr	r3, [pc, #184]	; 11e74 <close@plt+0xf10>
   11db8:	ldrb	r3, [r3, #4]
   11dbc:	cmp	r3, #0
   11dc0:	beq	11df0 <close@plt+0xe8c>
   11dc4:	bl	10e80 <__errno_location@plt>
   11dc8:	ldr	r3, [r0]
   11dcc:	cmp	r3, #32
   11dd0:	bne	11df0 <close@plt+0xe8c>
   11dd4:	ldr	r3, [pc, #156]	; 11e78 <close@plt+0xf14>
   11dd8:	ldr	r0, [r3]
   11ddc:	bl	1493c <close@plt+0x39d8>
   11de0:	cmp	r0, #0
   11de4:	bne	11e64 <close@plt+0xf00>
   11de8:	add	sp, sp, #8
   11dec:	pop	{r4, r5, r6, pc}
   11df0:	mov	r2, #5
   11df4:	ldr	r1, [pc, #128]	; 11e7c <close@plt+0xf18>
   11df8:	mov	r0, #0
   11dfc:	bl	10da8 <dcgettext@plt>
   11e00:	mov	r4, r0
   11e04:	ldr	r3, [pc, #104]	; 11e74 <close@plt+0xf10>
   11e08:	ldr	r5, [r3]
   11e0c:	cmp	r5, #0
   11e10:	beq	11e48 <close@plt+0xee4>
   11e14:	bl	10e80 <__errno_location@plt>
   11e18:	ldr	r6, [r0]
   11e1c:	mov	r0, r5
   11e20:	bl	13b54 <close@plt+0x2bf0>
   11e24:	str	r4, [sp]
   11e28:	mov	r3, r0
   11e2c:	ldr	r2, [pc, #76]	; 11e80 <close@plt+0xf1c>
   11e30:	mov	r1, r6
   11e34:	mov	r0, #0
   11e38:	bl	10e14 <error@plt>
   11e3c:	ldr	r3, [pc, #64]	; 11e84 <close@plt+0xf20>
   11e40:	ldr	r0, [r3]
   11e44:	bl	10d54 <_exit@plt>
   11e48:	bl	10e80 <__errno_location@plt>
   11e4c:	mov	r3, r4
   11e50:	ldr	r2, [pc, #48]	; 11e88 <close@plt+0xf24>
   11e54:	ldr	r1, [r0]
   11e58:	mov	r0, #0
   11e5c:	bl	10e14 <error@plt>
   11e60:	b	11e3c <close@plt+0xed8>
   11e64:	ldr	r3, [pc, #24]	; 11e84 <close@plt+0xf20>
   11e68:	ldr	r0, [r3]
   11e6c:	bl	10d54 <_exit@plt>
   11e70:	andeq	r6, r2, ip, asr r1
   11e74:	andeq	r6, r2, r4, ror r1
   11e78:	andeq	r6, r2, r0, asr r1
   11e7c:	andeq	r5, r1, r4, asr sl
   11e80:	andeq	r5, r1, r0, ror #20
   11e84:	strdeq	r6, [r2], -r8
   11e88:	andeq	r5, r1, r4, ror #20
   11e8c:	push	{r4, r5, lr}
   11e90:	sub	sp, sp, #20
   11e94:	ldr	r1, [sp, #40]	; 0x28
   11e98:	str	r1, [sp, #8]
   11e9c:	ldrd	r4, [sp, #32]
   11ea0:	strd	r4, [sp]
   11ea4:	bl	10d24 <posix_fadvise64@plt>
   11ea8:	add	sp, sp, #20
   11eac:	pop	{r4, r5, pc}
   11eb0:	cmp	r0, #0
   11eb4:	bxeq	lr
   11eb8:	push	{r4, lr}
   11ebc:	sub	sp, sp, #16
   11ec0:	mov	r4, r1
   11ec4:	bl	10ebc <fileno@plt>
   11ec8:	str	r4, [sp, #8]
   11ecc:	mov	r2, #0
   11ed0:	mov	r3, #0
   11ed4:	strd	r2, [sp]
   11ed8:	bl	10d24 <posix_fadvise64@plt>
   11edc:	add	sp, sp, #16
   11ee0:	pop	{r4, pc}
   11ee4:	push	{r4, r5, r6, lr}
   11ee8:	sub	sp, sp, #8
   11eec:	mov	r4, r0
   11ef0:	bl	10ebc <fileno@plt>
   11ef4:	cmp	r0, #0
   11ef8:	blt	11f70 <close@plt+0x100c>
   11efc:	mov	r0, r4
   11f00:	bl	10e38 <__freading@plt>
   11f04:	cmp	r0, #0
   11f08:	beq	11f3c <close@plt+0xfd8>
   11f0c:	mov	r0, r4
   11f10:	bl	10ebc <fileno@plt>
   11f14:	mov	r3, #1
   11f18:	str	r3, [sp]
   11f1c:	mov	r2, #0
   11f20:	mov	r3, #0
   11f24:	bl	10de4 <lseek64@plt>
   11f28:	mvn	r2, #0
   11f2c:	mvn	r3, #0
   11f30:	cmp	r1, r3
   11f34:	cmpeq	r0, r2
   11f38:	beq	11f7c <close@plt+0x1018>
   11f3c:	mov	r0, r4
   11f40:	bl	11f8c <close@plt+0x1028>
   11f44:	cmp	r0, #0
   11f48:	beq	11f7c <close@plt+0x1018>
   11f4c:	bl	10e80 <__errno_location@plt>
   11f50:	mov	r5, r0
   11f54:	ldr	r6, [r0]
   11f58:	mov	r0, r4
   11f5c:	bl	10ed4 <fclose@plt>
   11f60:	cmp	r6, #0
   11f64:	strne	r6, [r5]
   11f68:	mvnne	r0, #0
   11f6c:	b	11f84 <close@plt+0x1020>
   11f70:	mov	r0, r4
   11f74:	bl	10ed4 <fclose@plt>
   11f78:	b	11f84 <close@plt+0x1020>
   11f7c:	mov	r0, r4
   11f80:	bl	10ed4 <fclose@plt>
   11f84:	add	sp, sp, #8
   11f88:	pop	{r4, r5, r6, pc}
   11f8c:	push	{r4, lr}
   11f90:	sub	sp, sp, #8
   11f94:	subs	r4, r0, #0
   11f98:	beq	11fac <close@plt+0x1048>
   11f9c:	mov	r0, r4
   11fa0:	bl	10e38 <__freading@plt>
   11fa4:	cmp	r0, #0
   11fa8:	bne	11fbc <close@plt+0x1058>
   11fac:	mov	r0, r4
   11fb0:	bl	10d3c <fflush@plt>
   11fb4:	add	sp, sp, #8
   11fb8:	pop	{r4, pc}
   11fbc:	ldr	r3, [r4]
   11fc0:	tst	r3, #256	; 0x100
   11fc4:	bne	11fd4 <close@plt+0x1070>
   11fc8:	mov	r0, r4
   11fcc:	bl	10d3c <fflush@plt>
   11fd0:	b	11fb4 <close@plt+0x1050>
   11fd4:	mov	r3, #1
   11fd8:	str	r3, [sp]
   11fdc:	mov	r2, #0
   11fe0:	mov	r3, #0
   11fe4:	mov	r0, r4
   11fe8:	bl	120e4 <close@plt+0x1180>
   11fec:	b	11fc8 <close@plt+0x1064>
   11ff0:	push	{r4, r5, r6, lr}
   11ff4:	mov	r5, r1
   11ff8:	bl	10f34 <fopen64@plt>
   11ffc:	subs	r4, r0, #0
   12000:	beq	12014 <close@plt+0x10b0>
   12004:	mov	r0, r4
   12008:	bl	10ebc <fileno@plt>
   1200c:	cmp	r0, #2
   12010:	bls	1201c <close@plt+0x10b8>
   12014:	mov	r0, r4
   12018:	pop	{r4, r5, r6, pc}
   1201c:	bl	13cf0 <close@plt+0x2d8c>
   12020:	subs	r6, r0, #0
   12024:	blt	1206c <close@plt+0x1108>
   12028:	mov	r0, r4
   1202c:	bl	11ee4 <close@plt+0xf80>
   12030:	cmp	r0, #0
   12034:	bne	1204c <close@plt+0x10e8>
   12038:	mov	r1, r5
   1203c:	mov	r0, r6
   12040:	bl	10ce8 <fdopen@plt>
   12044:	subs	r4, r0, #0
   12048:	bne	12014 <close@plt+0x10b0>
   1204c:	bl	10e80 <__errno_location@plt>
   12050:	mov	r4, r0
   12054:	ldr	r5, [r0]
   12058:	mov	r0, r6
   1205c:	bl	10f64 <close@plt>
   12060:	str	r5, [r4]
   12064:	mov	r4, #0
   12068:	b	12014 <close@plt+0x10b0>
   1206c:	bl	10e80 <__errno_location@plt>
   12070:	mov	r5, r0
   12074:	ldr	r6, [r0]
   12078:	mov	r0, r4
   1207c:	bl	11ee4 <close@plt+0xf80>
   12080:	str	r6, [r5]
   12084:	mov	r4, #0
   12088:	b	12014 <close@plt+0x10b0>
   1208c:	push	{r4, r5, lr}
   12090:	sub	sp, sp, #12
   12094:	mov	r5, r0
   12098:	bl	10e80 <__errno_location@plt>
   1209c:	mov	r4, r0
   120a0:	ldr	r3, [r0]
   120a4:	str	r3, [sp]
   120a8:	str	r3, [sp, #4]
   120ac:	mov	r3, #0
   120b0:	str	r3, [r0]
   120b4:	mov	r0, r5
   120b8:	bl	10d48 <free@plt>
   120bc:	ldr	r3, [r4]
   120c0:	cmp	r3, #0
   120c4:	moveq	r3, #4
   120c8:	movne	r3, #0
   120cc:	add	r2, sp, #8
   120d0:	add	r3, r2, r3
   120d4:	ldr	r3, [r3, #-8]
   120d8:	str	r3, [r4]
   120dc:	add	sp, sp, #12
   120e0:	pop	{r4, r5, pc}
   120e4:	push	{r4, r5, r6, r7, lr}
   120e8:	sub	sp, sp, #12
   120ec:	mov	r4, r0
   120f0:	mov	r6, r2
   120f4:	mov	r7, r3
   120f8:	ldr	r5, [sp, #32]
   120fc:	ldr	r2, [r0, #8]
   12100:	ldr	r3, [r0, #4]
   12104:	cmp	r2, r3
   12108:	beq	12128 <close@plt+0x11c4>
   1210c:	str	r5, [sp]
   12110:	mov	r2, r6
   12114:	mov	r3, r7
   12118:	mov	r0, r4
   1211c:	bl	10ee0 <fseeko64@plt>
   12120:	add	sp, sp, #12
   12124:	pop	{r4, r5, r6, r7, pc}
   12128:	ldr	r2, [r0, #20]
   1212c:	ldr	r3, [r0, #16]
   12130:	cmp	r2, r3
   12134:	bne	1210c <close@plt+0x11a8>
   12138:	ldr	r3, [r0, #36]	; 0x24
   1213c:	cmp	r3, #0
   12140:	bne	1210c <close@plt+0x11a8>
   12144:	bl	10ebc <fileno@plt>
   12148:	str	r5, [sp]
   1214c:	mov	r2, r6
   12150:	mov	r3, r7
   12154:	bl	10de4 <lseek64@plt>
   12158:	mvn	r2, #0
   1215c:	mvn	r3, #0
   12160:	cmp	r1, r3
   12164:	cmpeq	r0, r2
   12168:	beq	12184 <close@plt+0x1220>
   1216c:	ldr	r3, [r4]
   12170:	bic	r3, r3, #16
   12174:	str	r3, [r4]
   12178:	strd	r0, [r4, #80]	; 0x50
   1217c:	mov	r0, #0
   12180:	b	12120 <close@plt+0x11bc>
   12184:	mvn	r0, #0
   12188:	b	12120 <close@plt+0x11bc>
   1218c:	push	{r4, r5, r6, lr}
   12190:	subs	r4, r0, #0
   12194:	beq	1220c <close@plt+0x12a8>
   12198:	mov	r1, #47	; 0x2f
   1219c:	mov	r0, r4
   121a0:	bl	10f10 <strrchr@plt>
   121a4:	cmp	r0, #0
   121a8:	addne	r5, r0, #1
   121ac:	moveq	r5, r4
   121b0:	sub	r3, r5, r4
   121b4:	cmp	r3, #6
   121b8:	ble	121f8 <close@plt+0x1294>
   121bc:	mov	r2, #7
   121c0:	ldr	r1, [pc, #96]	; 12228 <close@plt+0x12c4>
   121c4:	sub	r0, r5, #7
   121c8:	bl	10f4c <strncmp@plt>
   121cc:	cmp	r0, #0
   121d0:	bne	121f8 <close@plt+0x1294>
   121d4:	mov	r2, #3
   121d8:	ldr	r1, [pc, #76]	; 1222c <close@plt+0x12c8>
   121dc:	mov	r0, r5
   121e0:	bl	10f4c <strncmp@plt>
   121e4:	cmp	r0, #0
   121e8:	addeq	r4, r5, #3
   121ec:	ldreq	r3, [pc, #60]	; 12230 <close@plt+0x12cc>
   121f0:	streq	r4, [r3]
   121f4:	movne	r4, r5
   121f8:	ldr	r3, [pc, #52]	; 12234 <close@plt+0x12d0>
   121fc:	str	r4, [r3]
   12200:	ldr	r3, [pc, #48]	; 12238 <close@plt+0x12d4>
   12204:	str	r4, [r3]
   12208:	pop	{r4, r5, r6, pc}
   1220c:	ldr	r3, [pc, #40]	; 1223c <close@plt+0x12d8>
   12210:	ldr	r3, [r3]
   12214:	mov	r2, #55	; 0x37
   12218:	mov	r1, #1
   1221c:	ldr	r0, [pc, #28]	; 12240 <close@plt+0x12dc>
   12220:	bl	10dd8 <fwrite@plt>
   12224:	bl	10f58 <abort@plt>
   12228:	andeq	r5, r1, r0, lsr #21
   1222c:	andeq	r5, r1, r8, lsr #21
   12230:	andeq	r6, r2, r0, asr #2
   12234:	andeq	r6, r2, ip, ror r1
   12238:	andeq	r6, r2, r4, asr #2
   1223c:	andeq	r6, r2, r0, asr r1
   12240:	andeq	r5, r1, r8, ror #20
   12244:	push	{r4, r5, r6, lr}
   12248:	mov	r5, r0
   1224c:	mov	r4, r1
   12250:	mov	r2, #48	; 0x30
   12254:	mov	r1, #0
   12258:	bl	10ea4 <memset@plt>
   1225c:	cmp	r4, #10
   12260:	beq	12270 <close@plt+0x130c>
   12264:	str	r4, [r5]
   12268:	mov	r0, r5
   1226c:	pop	{r4, r5, r6, pc}
   12270:	bl	10f58 <abort@plt>
   12274:	push	{r4, r5, r6, lr}
   12278:	mov	r4, r0
   1227c:	mov	r5, r1
   12280:	mov	r2, #5
   12284:	mov	r1, r0
   12288:	mov	r0, #0
   1228c:	bl	10da8 <dcgettext@plt>
   12290:	cmp	r4, r0
   12294:	popne	{r4, r5, r6, pc}
   12298:	bl	14c0c <close@plt+0x3ca8>
   1229c:	ldrb	r3, [r0]
   122a0:	bic	r3, r3, #32
   122a4:	cmp	r3, #85	; 0x55
   122a8:	beq	12324 <close@plt+0x13c0>
   122ac:	cmp	r3, #71	; 0x47
   122b0:	bne	12380 <close@plt+0x141c>
   122b4:	ldrb	r3, [r0, #1]
   122b8:	bic	r3, r3, #32
   122bc:	cmp	r3, #66	; 0x42
   122c0:	bne	12380 <close@plt+0x141c>
   122c4:	ldrb	r3, [r0, #2]
   122c8:	cmp	r3, #49	; 0x31
   122cc:	bne	12380 <close@plt+0x141c>
   122d0:	ldrb	r3, [r0, #3]
   122d4:	cmp	r3, #56	; 0x38
   122d8:	bne	12380 <close@plt+0x141c>
   122dc:	ldrb	r3, [r0, #4]
   122e0:	cmp	r3, #48	; 0x30
   122e4:	bne	12380 <close@plt+0x141c>
   122e8:	ldrb	r3, [r0, #5]
   122ec:	cmp	r3, #51	; 0x33
   122f0:	bne	12380 <close@plt+0x141c>
   122f4:	ldrb	r3, [r0, #6]
   122f8:	cmp	r3, #48	; 0x30
   122fc:	bne	12380 <close@plt+0x141c>
   12300:	ldrb	r3, [r0, #7]
   12304:	cmp	r3, #0
   12308:	bne	12380 <close@plt+0x141c>
   1230c:	ldrb	r2, [r4]
   12310:	ldr	r3, [pc, #124]	; 12394 <close@plt+0x1430>
   12314:	ldr	r0, [pc, #124]	; 12398 <close@plt+0x1434>
   12318:	cmp	r2, #96	; 0x60
   1231c:	movne	r0, r3
   12320:	pop	{r4, r5, r6, pc}
   12324:	ldrb	r3, [r0, #1]
   12328:	bic	r3, r3, #32
   1232c:	cmp	r3, #84	; 0x54
   12330:	bne	12380 <close@plt+0x141c>
   12334:	ldrb	r3, [r0, #2]
   12338:	bic	r3, r3, #32
   1233c:	cmp	r3, #70	; 0x46
   12340:	bne	12380 <close@plt+0x141c>
   12344:	ldrb	r3, [r0, #3]
   12348:	cmp	r3, #45	; 0x2d
   1234c:	bne	12380 <close@plt+0x141c>
   12350:	ldrb	r3, [r0, #4]
   12354:	cmp	r3, #56	; 0x38
   12358:	bne	12380 <close@plt+0x141c>
   1235c:	ldrb	r3, [r0, #5]
   12360:	cmp	r3, #0
   12364:	bne	12380 <close@plt+0x141c>
   12368:	ldrb	r2, [r4]
   1236c:	ldr	r3, [pc, #40]	; 1239c <close@plt+0x1438>
   12370:	ldr	r0, [pc, #40]	; 123a0 <close@plt+0x143c>
   12374:	cmp	r2, #96	; 0x60
   12378:	movne	r0, r3
   1237c:	pop	{r4, r5, r6, pc}
   12380:	ldr	r3, [pc, #28]	; 123a4 <close@plt+0x1440>
   12384:	ldr	r0, [pc, #28]	; 123a8 <close@plt+0x1444>
   12388:	cmp	r5, #9
   1238c:	movne	r0, r3
   12390:	pop	{r4, r5, r6, pc}
   12394:	andeq	r5, r1, r4, lsl #22
   12398:	andeq	r5, r1, r0, lsl fp
   1239c:	andeq	r5, r1, r0, lsl #22
   123a0:	andeq	r5, r1, r4, lsl fp
   123a4:	andeq	r5, r1, r8, lsl #22
   123a8:	andeq	r5, r1, ip, lsl #22
   123ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123b0:	sub	sp, sp, #116	; 0x74
   123b4:	str	r0, [sp, #36]	; 0x24
   123b8:	mov	sl, r1
   123bc:	str	r2, [sp, #52]	; 0x34
   123c0:	str	r3, [sp, #28]
   123c4:	ldr	r8, [sp, #152]	; 0x98
   123c8:	bl	10df0 <__ctype_get_mb_cur_max@plt>
   123cc:	str	r0, [sp, #84]	; 0x54
   123d0:	ldr	r3, [sp, #156]	; 0x9c
   123d4:	lsr	r3, r3, #1
   123d8:	and	r3, r3, #1
   123dc:	str	r3, [sp, #32]
   123e0:	mov	r3, #1
   123e4:	str	r3, [sp, #40]	; 0x28
   123e8:	mov	r3, #0
   123ec:	str	r3, [sp, #80]	; 0x50
   123f0:	str	r3, [sp, #44]	; 0x2c
   123f4:	str	r3, [sp, #48]	; 0x30
   123f8:	str	r3, [sp, #60]	; 0x3c
   123fc:	str	r3, [sp, #72]	; 0x48
   12400:	str	r3, [sp, #76]	; 0x4c
   12404:	mov	r7, sl
   12408:	mov	sl, r8
   1240c:	cmp	sl, #10
   12410:	ldrls	pc, [pc, sl, lsl #2]
   12414:	b	125cc <close@plt+0x1668>
   12418:	andeq	r2, r1, ip, ror r4
   1241c:	andeq	r2, r1, ip, asr #8
   12420:	andeq	r2, r1, r8, lsr #11
   12424:	andeq	r2, r1, r4, asr #8
   12428:	andeq	r2, r1, ip, asr r5
   1242c:	andeq	r2, r1, ip, lsl #9
   12430:	strdeq	r3, [r1], -r8
   12434:	ldrdeq	r2, [r1], -r0
   12438:	andeq	r2, r1, r8, asr #9
   1243c:	andeq	r2, r1, r8, asr #9
   12440:	andeq	r2, r1, r8, asr #9
   12444:	mov	r3, #1
   12448:	str	r3, [sp, #48]	; 0x30
   1244c:	mov	r3, #1
   12450:	str	r3, [sp, #32]
   12454:	str	r3, [sp, #60]	; 0x3c
   12458:	ldr	r3, [pc, #4068]	; 13444 <close@plt+0x24e0>
   1245c:	str	r3, [sp, #72]	; 0x48
   12460:	mov	fp, #0
   12464:	mov	sl, #2
   12468:	mov	r6, #0
   1246c:	ldr	r3, [sp, #48]	; 0x30
   12470:	eor	r3, r3, #1
   12474:	str	r3, [sp, #68]	; 0x44
   12478:	b	12d60 <close@plt+0x1dfc>
   1247c:	mov	r3, #0
   12480:	str	r3, [sp, #32]
   12484:	mov	fp, r3
   12488:	b	12468 <close@plt+0x1504>
   1248c:	ldr	r3, [sp, #32]
   12490:	cmp	r3, #0
   12494:	bne	125e8 <close@plt+0x1684>
   12498:	cmp	r7, #0
   1249c:	beq	12608 <close@plt+0x16a4>
   124a0:	ldr	r3, [sp, #36]	; 0x24
   124a4:	mov	r2, #34	; 0x22
   124a8:	strb	r2, [r3]
   124ac:	mov	r3, #1
   124b0:	str	r3, [sp, #48]	; 0x30
   124b4:	str	r3, [sp, #60]	; 0x3c
   124b8:	ldr	r3, [pc, #3980]	; 1344c <close@plt+0x24e8>
   124bc:	str	r3, [sp, #72]	; 0x48
   124c0:	mov	fp, #1
   124c4:	b	12468 <close@plt+0x1504>
   124c8:	cmp	sl, #10
   124cc:	beq	124f0 <close@plt+0x158c>
   124d0:	mov	r1, sl
   124d4:	ldr	r0, [pc, #3948]	; 13448 <close@plt+0x24e4>
   124d8:	bl	12274 <close@plt+0x1310>
   124dc:	str	r0, [sp, #164]	; 0xa4
   124e0:	mov	r1, sl
   124e4:	ldr	r0, [pc, #3928]	; 13444 <close@plt+0x24e0>
   124e8:	bl	12274 <close@plt+0x1310>
   124ec:	str	r0, [sp, #168]	; 0xa8
   124f0:	ldr	r3, [sp, #32]
   124f4:	cmp	r3, #0
   124f8:	movne	fp, #0
   124fc:	bne	12534 <close@plt+0x15d0>
   12500:	ldr	r3, [sp, #164]	; 0xa4
   12504:	ldrb	r3, [r3]
   12508:	cmp	r3, #0
   1250c:	beq	12554 <close@plt+0x15f0>
   12510:	ldr	r2, [sp, #164]	; 0xa4
   12514:	mov	fp, #0
   12518:	ldr	r1, [sp, #36]	; 0x24
   1251c:	cmp	r7, fp
   12520:	strbhi	r3, [r1, fp]
   12524:	add	fp, fp, #1
   12528:	ldrb	r3, [r2, #1]!
   1252c:	cmp	r3, #0
   12530:	bne	1251c <close@plt+0x15b8>
   12534:	ldr	r0, [sp, #168]	; 0xa8
   12538:	bl	10e74 <strlen@plt>
   1253c:	str	r0, [sp, #60]	; 0x3c
   12540:	ldr	r3, [sp, #168]	; 0xa8
   12544:	str	r3, [sp, #72]	; 0x48
   12548:	mov	r3, #1
   1254c:	str	r3, [sp, #48]	; 0x30
   12550:	b	12468 <close@plt+0x1504>
   12554:	mov	fp, #0
   12558:	b	12534 <close@plt+0x15d0>
   1255c:	ldr	r3, [sp, #32]
   12560:	cmp	r3, #0
   12564:	bne	12624 <close@plt+0x16c0>
   12568:	mov	r3, #1
   1256c:	str	r3, [sp, #48]	; 0x30
   12570:	cmp	r7, #0
   12574:	beq	12640 <close@plt+0x16dc>
   12578:	ldr	r3, [sp, #36]	; 0x24
   1257c:	mov	r2, #39	; 0x27
   12580:	strb	r2, [r3]
   12584:	mov	r3, #0
   12588:	str	r3, [sp, #32]
   1258c:	mov	r3, #1
   12590:	str	r3, [sp, #60]	; 0x3c
   12594:	ldr	r3, [pc, #3752]	; 13444 <close@plt+0x24e0>
   12598:	str	r3, [sp, #72]	; 0x48
   1259c:	mov	fp, #1
   125a0:	mov	sl, #2
   125a4:	b	12468 <close@plt+0x1504>
   125a8:	ldr	r3, [sp, #32]
   125ac:	cmp	r3, #0
   125b0:	beq	12570 <close@plt+0x160c>
   125b4:	mov	r3, #1
   125b8:	str	r3, [sp, #60]	; 0x3c
   125bc:	ldr	r3, [pc, #3712]	; 13444 <close@plt+0x24e0>
   125c0:	str	r3, [sp, #72]	; 0x48
   125c4:	mov	fp, #0
   125c8:	b	12468 <close@plt+0x1504>
   125cc:	bl	10f58 <abort@plt>
   125d0:	mov	r3, #0
   125d4:	str	r3, [sp, #32]
   125d8:	mov	r3, #1
   125dc:	str	r3, [sp, #48]	; 0x30
   125e0:	mov	fp, #0
   125e4:	b	12468 <close@plt+0x1504>
   125e8:	ldr	r3, [sp, #32]
   125ec:	str	r3, [sp, #48]	; 0x30
   125f0:	mov	r3, #1
   125f4:	str	r3, [sp, #60]	; 0x3c
   125f8:	ldr	r3, [pc, #3660]	; 1344c <close@plt+0x24e8>
   125fc:	str	r3, [sp, #72]	; 0x48
   12600:	mov	fp, #0
   12604:	b	12468 <close@plt+0x1504>
   12608:	mov	r3, #1
   1260c:	str	r3, [sp, #48]	; 0x30
   12610:	str	r3, [sp, #60]	; 0x3c
   12614:	ldr	r3, [pc, #3632]	; 1344c <close@plt+0x24e8>
   12618:	str	r3, [sp, #72]	; 0x48
   1261c:	mov	fp, #1
   12620:	b	12468 <close@plt+0x1504>
   12624:	mov	r3, #1
   12628:	str	r3, [sp, #60]	; 0x3c
   1262c:	ldr	r3, [pc, #3600]	; 13444 <close@plt+0x24e0>
   12630:	str	r3, [sp, #72]	; 0x48
   12634:	mov	fp, #0
   12638:	mov	sl, #2
   1263c:	b	12468 <close@plt+0x1504>
   12640:	mov	r3, #0
   12644:	str	r3, [sp, #32]
   12648:	mov	r3, #1
   1264c:	str	r3, [sp, #60]	; 0x3c
   12650:	ldr	r3, [pc, #3564]	; 13444 <close@plt+0x24e0>
   12654:	str	r3, [sp, #72]	; 0x48
   12658:	mov	fp, #1
   1265c:	mov	sl, #2
   12660:	b	12468 <close@plt+0x1504>
   12664:	mov	r3, #0
   12668:	str	r3, [sp, #56]	; 0x38
   1266c:	ldr	r3, [sp, #52]	; 0x34
   12670:	add	r2, r3, r6
   12674:	str	r2, [sp, #64]	; 0x40
   12678:	ldrb	r4, [r3, r6]
   1267c:	cmp	r4, #126	; 0x7e
   12680:	ldrls	pc, [pc, r4, lsl #2]
   12684:	b	12ec0 <close@plt+0x1f5c>
   12688:	andeq	r2, r1, r0, lsr #17
   1268c:	andeq	r2, r1, r0, asr #29
   12690:	andeq	r2, r1, r0, asr #29
   12694:	andeq	r2, r1, r0, asr #29
   12698:	andeq	r2, r1, r0, asr #29
   1269c:	andeq	r2, r1, r0, asr #29
   126a0:	andeq	r2, r1, r0, asr #29
   126a4:	strdeq	r2, [r1], -ip
   126a8:	muleq	r1, r8, r8
   126ac:			; <UNDEFINED> instruction: 0x00012bb4
   126b0:	andeq	r2, r1, ip, lsr #23
   126b4:	andeq	r2, r1, ip, lsl fp
   126b8:	andeq	r2, r1, r4, lsl fp
   126bc:	muleq	r1, r0, r8
   126c0:	andeq	r2, r1, r0, asr #29
   126c4:	andeq	r2, r1, r0, asr #29
   126c8:	andeq	r2, r1, r0, asr #29
   126cc:	andeq	r2, r1, r0, asr #29
   126d0:	andeq	r2, r1, r0, asr #29
   126d4:	andeq	r2, r1, r0, asr #29
   126d8:	andeq	r2, r1, r0, asr #29
   126dc:	andeq	r2, r1, r0, asr #29
   126e0:	andeq	r2, r1, r0, asr #29
   126e4:	andeq	r2, r1, r0, asr #29
   126e8:	andeq	r2, r1, r0, asr #29
   126ec:	andeq	r2, r1, r0, asr #29
   126f0:	andeq	r2, r1, r0, asr #29
   126f4:	andeq	r2, r1, r0, asr #29
   126f8:	andeq	r2, r1, r0, asr #29
   126fc:	andeq	r2, r1, r0, asr #29
   12700:	andeq	r2, r1, r0, asr #29
   12704:	andeq	r2, r1, r0, asr #29
   12708:	andeq	r2, r1, r0, asr ip
   1270c:	andeq	r2, r1, ip, asr #24
   12710:	andeq	r2, r1, ip, asr #24
   12714:	andeq	r2, r1, r4, lsr #24
   12718:	andeq	r2, r1, ip, asr #24
   1271c:	muleq	r1, r4, r2
   12720:	andeq	r2, r1, ip, asr #24
   12724:	andeq	r2, r1, r4, lsr #28
   12728:	andeq	r2, r1, ip, asr #24
   1272c:	andeq	r2, r1, ip, asr #24
   12730:	andeq	r2, r1, ip, asr #24
   12734:	muleq	r1, r4, r2
   12738:	muleq	r1, r4, r2
   1273c:	muleq	r1, r4, r2
   12740:	muleq	r1, r4, r2
   12744:	muleq	r1, r4, r2
   12748:	muleq	r1, r4, r2
   1274c:	muleq	r1, r4, r2
   12750:	muleq	r1, r4, r2
   12754:	muleq	r1, r4, r2
   12758:	muleq	r1, r4, r2
   1275c:	muleq	r1, r4, r2
   12760:	muleq	r1, r4, r2
   12764:	muleq	r1, r4, r2
   12768:	muleq	r1, r4, r2
   1276c:	muleq	r1, r4, r2
   12770:	muleq	r1, r4, r2
   12774:	andeq	r2, r1, ip, asr #24
   12778:	andeq	r2, r1, ip, asr #24
   1277c:	andeq	r2, r1, ip, asr #24
   12780:	andeq	r2, r1, ip, asr #24
   12784:	andeq	r2, r1, r8, lsr #19
   12788:	andeq	r2, r1, r0, asr #29
   1278c:	muleq	r1, r4, r2
   12790:	muleq	r1, r4, r2
   12794:	muleq	r1, r4, r2
   12798:	muleq	r1, r4, r2
   1279c:	muleq	r1, r4, r2
   127a0:	muleq	r1, r4, r2
   127a4:	muleq	r1, r4, r2
   127a8:	muleq	r1, r4, r2
   127ac:	muleq	r1, r4, r2
   127b0:	muleq	r1, r4, r2
   127b4:	muleq	r1, r4, r2
   127b8:	muleq	r1, r4, r2
   127bc:	muleq	r1, r4, r2
   127c0:	muleq	r1, r4, r2
   127c4:	muleq	r1, r4, r2
   127c8:	muleq	r1, r4, r2
   127cc:	muleq	r1, r4, r2
   127d0:	muleq	r1, r4, r2
   127d4:	muleq	r1, r4, r2
   127d8:	muleq	r1, r4, r2
   127dc:	muleq	r1, r4, r2
   127e0:	muleq	r1, r4, r2
   127e4:	muleq	r1, r4, r2
   127e8:	muleq	r1, r4, r2
   127ec:	muleq	r1, r4, r2
   127f0:	muleq	r1, r4, r2
   127f4:	andeq	r2, r1, ip, asr #24
   127f8:	andeq	r2, r1, r4, lsr #22
   127fc:	muleq	r1, r4, r2
   12800:	andeq	r2, r1, ip, asr #24
   12804:	muleq	r1, r4, r2
   12808:	andeq	r2, r1, ip, asr #24
   1280c:	muleq	r1, r4, r2
   12810:	muleq	r1, r4, r2
   12814:	muleq	r1, r4, r2
   12818:	muleq	r1, r4, r2
   1281c:	muleq	r1, r4, r2
   12820:	muleq	r1, r4, r2
   12824:	muleq	r1, r4, r2
   12828:	muleq	r1, r4, r2
   1282c:	muleq	r1, r4, r2
   12830:	muleq	r1, r4, r2
   12834:	muleq	r1, r4, r2
   12838:	muleq	r1, r4, r2
   1283c:	muleq	r1, r4, r2
   12840:	muleq	r1, r4, r2
   12844:	muleq	r1, r4, r2
   12848:	muleq	r1, r4, r2
   1284c:	muleq	r1, r4, r2
   12850:	muleq	r1, r4, r2
   12854:	muleq	r1, r4, r2
   12858:	muleq	r1, r4, r2
   1285c:	muleq	r1, r4, r2
   12860:	muleq	r1, r4, r2
   12864:	muleq	r1, r4, r2
   12868:	muleq	r1, r4, r2
   1286c:	muleq	r1, r4, r2
   12870:	muleq	r1, r4, r2
   12874:	andeq	r2, r1, r4, lsl #24
   12878:	andeq	r2, r1, ip, asr #24
   1287c:	andeq	r2, r1, r4, lsl #24
   12880:	andeq	r2, r1, r4, lsr #24
   12884:	mov	r3, #0
   12888:	str	r3, [sp, #56]	; 0x38
   1288c:	b	1266c <close@plt+0x1708>
   12890:	mov	r3, #114	; 0x72
   12894:	b	12bb8 <close@plt+0x1c54>
   12898:	mov	r3, #98	; 0x62
   1289c:	b	12bd0 <close@plt+0x1c6c>
   128a0:	ldr	r3, [sp, #48]	; 0x30
   128a4:	cmp	r3, #0
   128a8:	beq	12990 <close@plt+0x1a2c>
   128ac:	ldr	r3, [sp, #32]
   128b0:	cmp	r3, #0
   128b4:	bne	13418 <close@plt+0x24b4>
   128b8:	ldr	r3, [sp, #44]	; 0x2c
   128bc:	eor	r3, r3, #1
   128c0:	cmp	sl, #2
   128c4:	movne	r3, #0
   128c8:	andeq	r3, r3, #1
   128cc:	cmp	r3, #0
   128d0:	moveq	r2, fp
   128d4:	beq	12918 <close@plt+0x19b4>
   128d8:	cmp	r7, fp
   128dc:	ldrhi	r2, [sp, #36]	; 0x24
   128e0:	movhi	r1, #39	; 0x27
   128e4:	strbhi	r1, [r2, fp]
   128e8:	add	r2, fp, #1
   128ec:	cmp	r7, r2
   128f0:	ldrhi	r1, [sp, #36]	; 0x24
   128f4:	movhi	r0, #36	; 0x24
   128f8:	strbhi	r0, [r1, r2]
   128fc:	add	r2, fp, #2
   12900:	cmp	r7, r2
   12904:	ldrhi	r1, [sp, #36]	; 0x24
   12908:	movhi	r0, #39	; 0x27
   1290c:	strbhi	r0, [r1, r2]
   12910:	add	r2, fp, #3
   12914:	str	r3, [sp, #44]	; 0x2c
   12918:	cmp	r7, r2
   1291c:	ldrhi	r3, [sp, #36]	; 0x24
   12920:	movhi	r1, #92	; 0x5c
   12924:	strbhi	r1, [r3, r2]
   12928:	add	fp, r2, #1
   1292c:	cmp	r5, #0
   12930:	beq	1329c <close@plt+0x2338>
   12934:	add	r3, r6, #1
   12938:	ldr	r1, [sp, #28]
   1293c:	cmp	r1, r3
   12940:	bls	132ac <close@plt+0x2348>
   12944:	ldr	r1, [sp, #52]	; 0x34
   12948:	ldrb	r3, [r1, r3]
   1294c:	sub	r3, r3, #48	; 0x30
   12950:	uxtb	r3, r3
   12954:	cmp	r3, #9
   12958:	bhi	132b8 <close@plt+0x2354>
   1295c:	cmp	r7, fp
   12960:	movhi	r3, #48	; 0x30
   12964:	ldrhi	r1, [sp, #36]	; 0x24
   12968:	strbhi	r3, [r1, fp]
   1296c:	add	r3, r2, #2
   12970:	cmp	r7, r3
   12974:	movhi	r1, #48	; 0x30
   12978:	ldrhi	r0, [sp, #36]	; 0x24
   1297c:	strbhi	r1, [r0, r3]
   12980:	add	fp, r2, #3
   12984:	ldr	r8, [sp, #32]
   12988:	mov	r4, #48	; 0x30
   1298c:	b	12c68 <close@plt+0x1d04>
   12990:	ldr	r3, [sp, #156]	; 0x9c
   12994:	tst	r3, #1
   12998:	bne	12d5c <close@plt+0x1df8>
   1299c:	ldr	r5, [sp, #48]	; 0x30
   129a0:	mov	r8, r5
   129a4:	b	12c68 <close@plt+0x1d04>
   129a8:	cmp	sl, #2
   129ac:	beq	129c4 <close@plt+0x1a60>
   129b0:	cmp	sl, #5
   129b4:	beq	129dc <close@plt+0x1a78>
   129b8:	mov	r8, #0
   129bc:	mov	r5, r8
   129c0:	b	12c68 <close@plt+0x1d04>
   129c4:	ldr	r3, [sp, #32]
   129c8:	cmp	r3, #0
   129cc:	bne	1342c <close@plt+0x24c8>
   129d0:	mov	r8, r3
   129d4:	mov	r5, r3
   129d8:	b	12c68 <close@plt+0x1d04>
   129dc:	ldr	r3, [sp, #156]	; 0x9c
   129e0:	tst	r3, #4
   129e4:	beq	132c4 <close@plt+0x2360>
   129e8:	add	r3, r6, #2
   129ec:	ldr	r2, [sp, #28]
   129f0:	cmp	r2, r3
   129f4:	bls	132d0 <close@plt+0x236c>
   129f8:	ldr	r2, [sp, #52]	; 0x34
   129fc:	add	r2, r2, r6
   12a00:	ldrb	r2, [r2, #1]
   12a04:	cmp	r2, #63	; 0x3f
   12a08:	movne	r8, #0
   12a0c:	movne	r5, r8
   12a10:	bne	12c68 <close@plt+0x1d04>
   12a14:	ldr	r2, [sp, #52]	; 0x34
   12a18:	ldrb	r2, [r2, r3]
   12a1c:	sub	r1, r2, #33	; 0x21
   12a20:	cmp	r1, #29
   12a24:	ldrls	pc, [pc, r1, lsl #2]
   12a28:	b	132dc <close@plt+0x2378>
   12a2c:	andeq	r2, r1, r4, lsr #21
   12a30:	ldrdeq	r3, [r1], -ip
   12a34:	ldrdeq	r3, [r1], -ip
   12a38:	ldrdeq	r3, [r1], -ip
   12a3c:	ldrdeq	r3, [r1], -ip
   12a40:	ldrdeq	r3, [r1], -ip
   12a44:	andeq	r2, r1, r4, lsr #21
   12a48:	andeq	r2, r1, r4, lsr #21
   12a4c:	andeq	r2, r1, r4, lsr #21
   12a50:	ldrdeq	r3, [r1], -ip
   12a54:	ldrdeq	r3, [r1], -ip
   12a58:	ldrdeq	r3, [r1], -ip
   12a5c:	andeq	r2, r1, r4, lsr #21
   12a60:	ldrdeq	r3, [r1], -ip
   12a64:	andeq	r2, r1, r4, lsr #21
   12a68:	ldrdeq	r3, [r1], -ip
   12a6c:	ldrdeq	r3, [r1], -ip
   12a70:	ldrdeq	r3, [r1], -ip
   12a74:	ldrdeq	r3, [r1], -ip
   12a78:	ldrdeq	r3, [r1], -ip
   12a7c:	ldrdeq	r3, [r1], -ip
   12a80:	ldrdeq	r3, [r1], -ip
   12a84:	ldrdeq	r3, [r1], -ip
   12a88:	ldrdeq	r3, [r1], -ip
   12a8c:	ldrdeq	r3, [r1], -ip
   12a90:	ldrdeq	r3, [r1], -ip
   12a94:	ldrdeq	r3, [r1], -ip
   12a98:	andeq	r2, r1, r4, lsr #21
   12a9c:	andeq	r2, r1, r4, lsr #21
   12aa0:	andeq	r2, r1, r4, lsr #21
   12aa4:	ldr	r1, [sp, #32]
   12aa8:	cmp	r1, #0
   12aac:	bne	134ec <close@plt+0x2588>
   12ab0:	cmp	r7, fp
   12ab4:	movhi	r1, #63	; 0x3f
   12ab8:	ldrhi	r0, [sp, #36]	; 0x24
   12abc:	strbhi	r1, [r0, fp]
   12ac0:	add	r1, fp, #1
   12ac4:	cmp	r7, r1
   12ac8:	ldrhi	r0, [sp, #36]	; 0x24
   12acc:	movhi	ip, #34	; 0x22
   12ad0:	strbhi	ip, [r0, r1]
   12ad4:	add	r1, fp, #2
   12ad8:	cmp	r7, r1
   12adc:	ldrhi	r0, [sp, #36]	; 0x24
   12ae0:	movhi	ip, #34	; 0x22
   12ae4:	strbhi	ip, [r0, r1]
   12ae8:	add	r1, fp, #3
   12aec:	cmp	r7, r1
   12af0:	movhi	r0, #63	; 0x3f
   12af4:	ldrhi	ip, [sp, #36]	; 0x24
   12af8:	strbhi	r0, [ip, r1]
   12afc:	add	fp, fp, #4
   12b00:	ldr	r5, [sp, #32]
   12b04:	mov	r8, r5
   12b08:	mov	r4, r2
   12b0c:	mov	r6, r3
   12b10:	b	12c68 <close@plt+0x1d04>
   12b14:	mov	r3, #102	; 0x66
   12b18:	b	12bd0 <close@plt+0x1c6c>
   12b1c:	mov	r3, #118	; 0x76
   12b20:	b	12bd0 <close@plt+0x1c6c>
   12b24:	cmp	sl, #2
   12b28:	beq	12b94 <close@plt+0x1c30>
   12b2c:	ldr	r3, [sp, #48]	; 0x30
   12b30:	ldr	r2, [sp, #32]
   12b34:	and	r3, r3, r2
   12b38:	tst	r9, r3
   12b3c:	moveq	r3, r4
   12b40:	beq	12bd0 <close@plt+0x1c6c>
   12b44:	mov	r8, #0
   12b48:	mov	r5, r8
   12b4c:	eor	r5, r5, #1
   12b50:	ldr	r3, [sp, #44]	; 0x2c
   12b54:	and	r5, r5, r3
   12b58:	tst	r5, #255	; 0xff
   12b5c:	beq	12d3c <close@plt+0x1dd8>
   12b60:	cmp	r7, fp
   12b64:	ldrhi	r3, [sp, #36]	; 0x24
   12b68:	movhi	r2, #39	; 0x27
   12b6c:	strbhi	r2, [r3, fp]
   12b70:	add	r3, fp, #1
   12b74:	cmp	r7, r3
   12b78:	ldrhi	r2, [sp, #36]	; 0x24
   12b7c:	movhi	r1, #39	; 0x27
   12b80:	strbhi	r1, [r2, r3]
   12b84:	add	fp, fp, #2
   12b88:	mov	r3, #0
   12b8c:	str	r3, [sp, #44]	; 0x2c
   12b90:	b	12d3c <close@plt+0x1dd8>
   12b94:	ldr	r3, [sp, #32]
   12b98:	cmp	r3, #0
   12b9c:	bne	13438 <close@plt+0x24d4>
   12ba0:	mov	r8, r3
   12ba4:	mov	r5, r3
   12ba8:	b	12b4c <close@plt+0x1be8>
   12bac:	mov	r3, #110	; 0x6e
   12bb0:	b	12bb8 <close@plt+0x1c54>
   12bb4:	mov	r3, #116	; 0x74
   12bb8:	ldr	r2, [sp, #32]
   12bbc:	cmp	sl, #2
   12bc0:	movne	r2, #0
   12bc4:	andeq	r2, r2, #1
   12bc8:	cmp	r2, #0
   12bcc:	bne	12bf0 <close@plt+0x1c8c>
   12bd0:	ldr	r2, [sp, #48]	; 0x30
   12bd4:	cmp	r2, #0
   12bd8:	moveq	r8, r2
   12bdc:	moveq	r5, r2
   12be0:	beq	12c68 <close@plt+0x1d04>
   12be4:	mov	r4, r3
   12be8:	mov	r8, #0
   12bec:	b	12cc0 <close@plt+0x1d5c>
   12bf0:	mov	r8, sl
   12bf4:	mov	sl, r7
   12bf8:	b	13464 <close@plt+0x2500>
   12bfc:	mov	r3, #97	; 0x61
   12c00:	b	12bd0 <close@plt+0x1c6c>
   12c04:	ldr	r3, [sp, #28]
   12c08:	cmn	r3, #1
   12c0c:	beq	12c38 <close@plt+0x1cd4>
   12c10:	ldr	r3, [sp, #28]
   12c14:	subs	r3, r3, #1
   12c18:	movne	r3, #1
   12c1c:	cmp	r3, #0
   12c20:	bne	132e8 <close@plt+0x2384>
   12c24:	cmp	r6, #0
   12c28:	beq	12c50 <close@plt+0x1cec>
   12c2c:	mov	r8, #0
   12c30:	mov	r5, r8
   12c34:	b	12c68 <close@plt+0x1d04>
   12c38:	ldr	r3, [sp, #52]	; 0x34
   12c3c:	ldrb	r3, [r3, #1]
   12c40:	adds	r3, r3, #0
   12c44:	movne	r3, #1
   12c48:	b	12c1c <close@plt+0x1cb8>
   12c4c:	mov	r8, #0
   12c50:	ldr	r5, [sp, #32]
   12c54:	cmp	sl, #2
   12c58:	movne	r5, #0
   12c5c:	andeq	r5, r5, #1
   12c60:	cmp	r5, #0
   12c64:	bne	12e18 <close@plt+0x1eb4>
   12c68:	ldr	r3, [sp, #68]	; 0x44
   12c6c:	cmp	sl, #2
   12c70:	orreq	r3, r3, #1
   12c74:	eor	r3, r3, #1
   12c78:	ldr	r2, [sp, #32]
   12c7c:	orr	r3, r2, r3
   12c80:	tst	r3, #255	; 0xff
   12c84:	beq	12cb4 <close@plt+0x1d50>
   12c88:	ldr	r3, [sp, #160]	; 0xa0
   12c8c:	cmp	r3, #0
   12c90:	beq	12cb4 <close@plt+0x1d50>
   12c94:	lsr	r2, r4, #5
   12c98:	uxtb	r2, r2
   12c9c:	and	r3, r4, #31
   12ca0:	ldr	r1, [sp, #160]	; 0xa0
   12ca4:	ldr	r2, [r1, r2, lsl #2]
   12ca8:	lsr	r3, r2, r3
   12cac:	tst	r3, #1
   12cb0:	bne	12cc0 <close@plt+0x1d5c>
   12cb4:	ldr	r3, [sp, #56]	; 0x38
   12cb8:	cmp	r3, #0
   12cbc:	beq	12b4c <close@plt+0x1be8>
   12cc0:	ldr	r3, [sp, #32]
   12cc4:	cmp	r3, #0
   12cc8:	bne	134d4 <close@plt+0x2570>
   12ccc:	ldr	r3, [sp, #44]	; 0x2c
   12cd0:	eor	r3, r3, #1
   12cd4:	cmp	sl, #2
   12cd8:	movne	r3, #0
   12cdc:	andeq	r3, r3, #1
   12ce0:	cmp	r3, #0
   12ce4:	beq	12d28 <close@plt+0x1dc4>
   12ce8:	cmp	r7, fp
   12cec:	ldrhi	r2, [sp, #36]	; 0x24
   12cf0:	movhi	r1, #39	; 0x27
   12cf4:	strbhi	r1, [r2, fp]
   12cf8:	add	r2, fp, #1
   12cfc:	cmp	r7, r2
   12d00:	ldrhi	r1, [sp, #36]	; 0x24
   12d04:	movhi	r0, #36	; 0x24
   12d08:	strbhi	r0, [r1, r2]
   12d0c:	add	r2, fp, #2
   12d10:	cmp	r7, r2
   12d14:	ldrhi	r1, [sp, #36]	; 0x24
   12d18:	movhi	r0, #39	; 0x27
   12d1c:	strbhi	r0, [r1, r2]
   12d20:	add	fp, fp, #3
   12d24:	str	r3, [sp, #44]	; 0x2c
   12d28:	cmp	r7, fp
   12d2c:	ldrhi	r3, [sp, #36]	; 0x24
   12d30:	movhi	r2, #92	; 0x5c
   12d34:	strbhi	r2, [r3, fp]
   12d38:	add	fp, fp, #1
   12d3c:	cmp	fp, r7
   12d40:	ldrcc	r3, [sp, #36]	; 0x24
   12d44:	strbcc	r4, [r3, fp]
   12d48:	add	fp, fp, #1
   12d4c:	ldr	r3, [sp, #40]	; 0x28
   12d50:	cmp	r8, #0
   12d54:	moveq	r3, #0
   12d58:	str	r3, [sp, #40]	; 0x28
   12d5c:	add	r6, r6, #1
   12d60:	ldr	r3, [sp, #28]
   12d64:	cmn	r3, #1
   12d68:	beq	132f4 <close@plt+0x2390>
   12d6c:	ldr	r3, [sp, #28]
   12d70:	subs	r8, r3, r6
   12d74:	movne	r8, #1
   12d78:	cmp	r8, #0
   12d7c:	beq	13308 <close@plt+0x23a4>
   12d80:	ldr	r5, [sp, #48]	; 0x30
   12d84:	cmp	sl, #2
   12d88:	moveq	r5, #0
   12d8c:	andne	r5, r5, #1
   12d90:	ldr	r3, [sp, #60]	; 0x3c
   12d94:	adds	r9, r3, #0
   12d98:	movne	r9, #1
   12d9c:	ands	r2, r5, r9
   12da0:	str	r2, [sp, #56]	; 0x38
   12da4:	beq	1266c <close@plt+0x1708>
   12da8:	add	r4, r6, r3
   12dac:	ldr	r2, [sp, #28]
   12db0:	cmp	r3, #1
   12db4:	movls	r3, #0
   12db8:	movhi	r3, #1
   12dbc:	cmn	r2, #1
   12dc0:	movne	r3, #0
   12dc4:	cmp	r3, #0
   12dc8:	beq	12dd8 <close@plt+0x1e74>
   12dcc:	ldr	r0, [sp, #52]	; 0x34
   12dd0:	bl	10e74 <strlen@plt>
   12dd4:	str	r0, [sp, #28]
   12dd8:	ldr	r3, [sp, #28]
   12ddc:	cmp	r3, r4
   12de0:	bcc	12664 <close@plt+0x1700>
   12de4:	ldr	r2, [sp, #60]	; 0x3c
   12de8:	ldr	r1, [sp, #72]	; 0x48
   12dec:	ldr	r3, [sp, #52]	; 0x34
   12df0:	add	r0, r3, r6
   12df4:	bl	10d90 <memcmp@plt>
   12df8:	cmp	r0, #0
   12dfc:	bne	12884 <close@plt+0x1920>
   12e00:	ldr	r3, [sp, #32]
   12e04:	cmp	r3, #0
   12e08:	beq	1266c <close@plt+0x1708>
   12e0c:	mov	r8, sl
   12e10:	mov	sl, r7
   12e14:	b	13464 <close@plt+0x2500>
   12e18:	mov	r8, sl
   12e1c:	mov	sl, r7
   12e20:	b	13464 <close@plt+0x2500>
   12e24:	cmp	sl, #2
   12e28:	strne	r8, [sp, #80]	; 0x50
   12e2c:	movne	r5, #0
   12e30:	bne	12c68 <close@plt+0x1d04>
   12e34:	ldr	r3, [sp, #32]
   12e38:	cmp	r3, #0
   12e3c:	bne	13450 <close@plt+0x24ec>
   12e40:	ldr	r2, [sp, #76]	; 0x4c
   12e44:	adds	r3, r7, #0
   12e48:	movne	r3, #1
   12e4c:	cmp	r2, #0
   12e50:	movne	r3, #0
   12e54:	cmp	r3, #0
   12e58:	movne	r3, #0
   12e5c:	bne	12e8c <close@plt+0x1f28>
   12e60:	cmp	r7, fp
   12e64:	ldrhi	r3, [sp, #36]	; 0x24
   12e68:	movhi	r2, #39	; 0x27
   12e6c:	strbhi	r2, [r3, fp]
   12e70:	add	r3, fp, #1
   12e74:	cmp	r7, r3
   12e78:	ldrhi	r2, [sp, #36]	; 0x24
   12e7c:	movhi	r1, #92	; 0x5c
   12e80:	strbhi	r1, [r2, r3]
   12e84:	mov	r3, r7
   12e88:	ldr	r7, [sp, #76]	; 0x4c
   12e8c:	add	r2, fp, #2
   12e90:	cmp	r2, r3
   12e94:	ldrcc	r1, [sp, #36]	; 0x24
   12e98:	movcc	r0, #39	; 0x27
   12e9c:	strbcc	r0, [r1, r2]
   12ea0:	add	fp, fp, #3
   12ea4:	ldr	r2, [sp, #32]
   12ea8:	mov	r5, r2
   12eac:	str	r8, [sp, #80]	; 0x50
   12eb0:	str	r2, [sp, #44]	; 0x2c
   12eb4:	str	r7, [sp, #76]	; 0x4c
   12eb8:	mov	r7, r3
   12ebc:	b	12c68 <close@plt+0x1d04>
   12ec0:	ldr	r5, [sp, #84]	; 0x54
   12ec4:	cmp	r5, #1
   12ec8:	beq	12ef8 <close@plt+0x1f94>
   12ecc:	mov	r3, #0
   12ed0:	str	r3, [sp, #104]	; 0x68
   12ed4:	str	r3, [sp, #108]	; 0x6c
   12ed8:	ldr	r3, [sp, #28]
   12edc:	cmn	r3, #1
   12ee0:	beq	12f2c <close@plt+0x1fc8>
   12ee4:	mov	r3, #0
   12ee8:	str	r4, [sp, #88]	; 0x58
   12eec:	str	fp, [sp, #92]	; 0x5c
   12ef0:	mov	fp, r3
   12ef4:	b	13054 <close@plt+0x20f0>
   12ef8:	bl	10e5c <__ctype_b_loc@plt>
   12efc:	ldr	r2, [r0]
   12f00:	lsl	r3, r4, #1
   12f04:	ldrh	r8, [r2, r3]
   12f08:	lsr	r8, r8, #14
   12f0c:	and	r8, r8, #1
   12f10:	mov	r2, r5
   12f14:	eor	r5, r8, #1
   12f18:	ldr	r3, [sp, #48]	; 0x30
   12f1c:	and	r5, r5, r3
   12f20:	ands	r5, r5, #255	; 0xff
   12f24:	beq	12c68 <close@plt+0x1d04>
   12f28:	b	130ec <close@plt+0x2188>
   12f2c:	ldr	r0, [sp, #52]	; 0x34
   12f30:	bl	10e74 <strlen@plt>
   12f34:	str	r0, [sp, #28]
   12f38:	b	12ee4 <close@plt+0x1f80>
   12f3c:	mov	r2, fp
   12f40:	mov	r1, r4
   12f44:	ldr	r4, [sp, #88]	; 0x58
   12f48:	ldr	fp, [sp, #92]	; 0x5c
   12f4c:	ldr	r0, [sp, #28]
   12f50:	cmp	r0, r5
   12f54:	bls	13120 <close@plt+0x21bc>
   12f58:	ldrb	r3, [r1]
   12f5c:	cmp	r3, #0
   12f60:	beq	13128 <close@plt+0x21c4>
   12f64:	mov	r3, r1
   12f68:	add	r2, r2, #1
   12f6c:	add	r1, r6, r2
   12f70:	cmp	r0, r1
   12f74:	bls	13130 <close@plt+0x21cc>
   12f78:	ldrb	r1, [r3, #1]!
   12f7c:	cmp	r1, #0
   12f80:	bne	12f68 <close@plt+0x2004>
   12f84:	mov	r8, #0
   12f88:	b	130e4 <close@plt+0x2180>
   12f8c:	cmp	r4, r5
   12f90:	beq	13030 <close@plt+0x20cc>
   12f94:	ldrb	r3, [r4, #1]!
   12f98:	sub	r3, r3, #91	; 0x5b
   12f9c:	cmp	r3, #33	; 0x21
   12fa0:	ldrls	pc, [pc, r3, lsl #2]
   12fa4:	b	12f8c <close@plt+0x2028>
   12fa8:	andeq	r3, r1, ip, asr r4
   12fac:	andeq	r3, r1, ip, asr r4
   12fb0:	andeq	r2, r1, ip, lsl #31
   12fb4:	andeq	r3, r1, ip, asr r4
   12fb8:	andeq	r2, r1, ip, lsl #31
   12fbc:	andeq	r3, r1, ip, asr r4
   12fc0:	andeq	r2, r1, ip, lsl #31
   12fc4:	andeq	r2, r1, ip, lsl #31
   12fc8:	andeq	r2, r1, ip, lsl #31
   12fcc:	andeq	r2, r1, ip, lsl #31
   12fd0:	andeq	r2, r1, ip, lsl #31
   12fd4:	andeq	r2, r1, ip, lsl #31
   12fd8:	andeq	r2, r1, ip, lsl #31
   12fdc:	andeq	r2, r1, ip, lsl #31
   12fe0:	andeq	r2, r1, ip, lsl #31
   12fe4:	andeq	r2, r1, ip, lsl #31
   12fe8:	andeq	r2, r1, ip, lsl #31
   12fec:	andeq	r2, r1, ip, lsl #31
   12ff0:	andeq	r2, r1, ip, lsl #31
   12ff4:	andeq	r2, r1, ip, lsl #31
   12ff8:	andeq	r2, r1, ip, lsl #31
   12ffc:	andeq	r2, r1, ip, lsl #31
   13000:	andeq	r2, r1, ip, lsl #31
   13004:	andeq	r2, r1, ip, lsl #31
   13008:	andeq	r2, r1, ip, lsl #31
   1300c:	andeq	r2, r1, ip, lsl #31
   13010:	andeq	r2, r1, ip, lsl #31
   13014:	andeq	r2, r1, ip, lsl #31
   13018:	andeq	r2, r1, ip, lsl #31
   1301c:	andeq	r2, r1, ip, lsl #31
   13020:	andeq	r2, r1, ip, lsl #31
   13024:	andeq	r2, r1, ip, lsl #31
   13028:	andeq	r2, r1, ip, lsl #31
   1302c:	andeq	r3, r1, ip, asr r4
   13030:	ldr	r0, [sp, #100]	; 0x64
   13034:	bl	10dcc <iswprint@plt>
   13038:	cmp	r0, #0
   1303c:	moveq	r8, #0
   13040:	add	fp, fp, r9
   13044:	add	r0, sp, #104	; 0x68
   13048:	bl	10d6c <mbsinit@plt>
   1304c:	cmp	r0, #0
   13050:	bne	130c4 <close@plt+0x2160>
   13054:	add	r5, r6, fp
   13058:	ldr	r3, [sp, #52]	; 0x34
   1305c:	add	r4, r3, r5
   13060:	add	r3, sp, #104	; 0x68
   13064:	ldr	r2, [sp, #28]
   13068:	sub	r2, r2, r5
   1306c:	mov	r1, r4
   13070:	add	r0, sp, #100	; 0x64
   13074:	bl	14c40 <close@plt+0x3cdc>
   13078:	subs	r9, r0, #0
   1307c:	beq	13138 <close@plt+0x21d4>
   13080:	cmn	r9, #1
   13084:	beq	130d4 <close@plt+0x2170>
   13088:	cmn	r9, #2
   1308c:	beq	12f3c <close@plt+0x1fd8>
   13090:	ldr	r3, [sp, #32]
   13094:	cmp	sl, #2
   13098:	movne	r3, #0
   1309c:	andeq	r3, r3, #1
   130a0:	cmp	r3, #0
   130a4:	beq	13030 <close@plt+0x20cc>
   130a8:	cmp	r9, #1
   130ac:	bls	13030 <close@plt+0x20cc>
   130b0:	sub	r3, r9, #1
   130b4:	add	r5, r3, r5
   130b8:	ldr	r3, [sp, #52]	; 0x34
   130bc:	add	r5, r3, r5
   130c0:	b	12f94 <close@plt+0x2030>
   130c4:	ldr	r4, [sp, #88]	; 0x58
   130c8:	mov	r2, fp
   130cc:	ldr	fp, [sp, #92]	; 0x5c
   130d0:	b	130e4 <close@plt+0x2180>
   130d4:	ldr	r4, [sp, #88]	; 0x58
   130d8:	mov	r2, fp
   130dc:	ldr	fp, [sp, #92]	; 0x5c
   130e0:	mov	r8, #0
   130e4:	cmp	r2, #1
   130e8:	bls	12f14 <close@plt+0x1fb0>
   130ec:	add	r1, r6, r2
   130f0:	ldr	ip, [sp, #64]	; 0x40
   130f4:	mov	r5, #0
   130f8:	eor	r3, r8, #1
   130fc:	ldr	r2, [sp, #48]	; 0x30
   13100:	and	r3, r3, r2
   13104:	uxtb	r3, r3
   13108:	ldr	r9, [sp, #32]
   1310c:	ldr	lr, [sp, #44]	; 0x2c
   13110:	ldr	r2, [sp, #56]	; 0x38
   13114:	str	r8, [sp, #56]	; 0x38
   13118:	ldr	r0, [sp, #36]	; 0x24
   1311c:	b	131b8 <close@plt+0x2254>
   13120:	mov	r8, #0
   13124:	b	130e4 <close@plt+0x2180>
   13128:	mov	r8, #0
   1312c:	b	130e4 <close@plt+0x2180>
   13130:	mov	r8, #0
   13134:	b	130e4 <close@plt+0x2180>
   13138:	ldr	r4, [sp, #88]	; 0x58
   1313c:	mov	r2, fp
   13140:	ldr	fp, [sp, #92]	; 0x5c
   13144:	b	130e4 <close@plt+0x2180>
   13148:	cmp	r2, #0
   1314c:	beq	13160 <close@plt+0x21fc>
   13150:	cmp	r7, fp
   13154:	movhi	r2, #92	; 0x5c
   13158:	strbhi	r2, [r0, fp]
   1315c:	add	fp, fp, #1
   13160:	add	r8, r6, #1
   13164:	cmp	r1, r8
   13168:	bls	13270 <close@plt+0x230c>
   1316c:	eor	r2, r5, #1
   13170:	and	r2, r2, lr
   13174:	ands	r2, r2, #255	; 0xff
   13178:	beq	1328c <close@plt+0x2328>
   1317c:	cmp	r7, fp
   13180:	movhi	r2, #39	; 0x27
   13184:	strbhi	r2, [r0, fp]
   13188:	add	r2, fp, #1
   1318c:	cmp	r7, r2
   13190:	movhi	lr, #39	; 0x27
   13194:	strbhi	lr, [r0, r2]
   13198:	add	fp, fp, #2
   1319c:	mov	r6, r8
   131a0:	mov	r2, r3
   131a4:	mov	lr, r3
   131a8:	cmp	r7, fp
   131ac:	strbhi	r4, [r0, fp]
   131b0:	add	fp, fp, #1
   131b4:	ldrb	r4, [ip, #1]!
   131b8:	cmp	r3, #0
   131bc:	beq	13148 <close@plt+0x21e4>
   131c0:	cmp	r9, #0
   131c4:	bne	134c8 <close@plt+0x2564>
   131c8:	eor	r5, lr, #1
   131cc:	cmp	sl, #2
   131d0:	movne	r5, #0
   131d4:	andeq	r5, r5, #1
   131d8:	cmp	r5, #0
   131dc:	beq	13214 <close@plt+0x22b0>
   131e0:	cmp	r7, fp
   131e4:	movhi	lr, #39	; 0x27
   131e8:	strbhi	lr, [r0, fp]
   131ec:	add	lr, fp, #1
   131f0:	cmp	r7, lr
   131f4:	movhi	r8, #36	; 0x24
   131f8:	strbhi	r8, [r0, lr]
   131fc:	add	lr, fp, #2
   13200:	cmp	r7, lr
   13204:	movhi	r8, #39	; 0x27
   13208:	strbhi	r8, [r0, lr]
   1320c:	add	fp, fp, #3
   13210:	mov	lr, r5
   13214:	cmp	r7, fp
   13218:	movhi	r5, #92	; 0x5c
   1321c:	strbhi	r5, [r0, fp]
   13220:	add	r5, fp, #1
   13224:	cmp	r7, r5
   13228:	lsrhi	r8, r4, #6
   1322c:	addhi	r8, r8, #48	; 0x30
   13230:	strbhi	r8, [r0, r5]
   13234:	add	r8, fp, #2
   13238:	cmp	r7, r8
   1323c:	lsrhi	r5, r4, #3
   13240:	andhi	r5, r5, #7
   13244:	addhi	r5, r5, #48	; 0x30
   13248:	strbhi	r5, [r0, r8]
   1324c:	add	fp, fp, #3
   13250:	and	r4, r4, #7
   13254:	add	r4, r4, #48	; 0x30
   13258:	add	r5, r6, #1
   1325c:	cmp	r1, r5
   13260:	bls	1327c <close@plt+0x2318>
   13264:	mov	r6, r5
   13268:	mov	r5, r3
   1326c:	b	131a8 <close@plt+0x2244>
   13270:	str	lr, [sp, #44]	; 0x2c
   13274:	ldr	r8, [sp, #56]	; 0x38
   13278:	b	12b4c <close@plt+0x1be8>
   1327c:	str	lr, [sp, #44]	; 0x2c
   13280:	ldr	r8, [sp, #56]	; 0x38
   13284:	mov	r5, r3
   13288:	b	12b4c <close@plt+0x1be8>
   1328c:	mov	r6, r8
   13290:	b	131a8 <close@plt+0x2244>
   13294:	mov	r5, #0
   13298:	b	12c68 <close@plt+0x1d04>
   1329c:	mov	r8, r5
   132a0:	ldr	r5, [sp, #48]	; 0x30
   132a4:	mov	r4, #48	; 0x30
   132a8:	b	12c68 <close@plt+0x1d04>
   132ac:	ldr	r8, [sp, #32]
   132b0:	mov	r4, #48	; 0x30
   132b4:	b	12c68 <close@plt+0x1d04>
   132b8:	ldr	r8, [sp, #32]
   132bc:	mov	r4, #48	; 0x30
   132c0:	b	12c68 <close@plt+0x1d04>
   132c4:	mov	r8, #0
   132c8:	mov	r5, r8
   132cc:	b	12c68 <close@plt+0x1d04>
   132d0:	mov	r8, #0
   132d4:	mov	r5, r8
   132d8:	b	12c68 <close@plt+0x1d04>
   132dc:	mov	r8, #0
   132e0:	mov	r5, r8
   132e4:	b	12c68 <close@plt+0x1d04>
   132e8:	mov	r8, #0
   132ec:	mov	r5, r8
   132f0:	b	12c68 <close@plt+0x1d04>
   132f4:	ldr	r3, [sp, #52]	; 0x34
   132f8:	ldrb	r8, [r3, r6]
   132fc:	adds	r8, r8, #0
   13300:	movne	r8, #1
   13304:	b	12d78 <close@plt+0x1e14>
   13308:	cmp	sl, #2
   1330c:	movne	r3, #0
   13310:	moveq	r3, #1
   13314:	ldr	r1, [sp, #32]
   13318:	mov	r2, r1
   1331c:	and	r2, r2, r3
   13320:	cmp	fp, #0
   13324:	movne	r2, #0
   13328:	andeq	r2, r2, #1
   1332c:	cmp	r2, #0
   13330:	bne	134e0 <close@plt+0x257c>
   13334:	eor	r2, r1, #1
   13338:	and	r3, r3, r2
   1333c:	ldr	r1, [sp, #80]	; 0x50
   13340:	tst	r1, r3
   13344:	beq	133bc <close@plt+0x2458>
   13348:	ldr	r3, [sp, #40]	; 0x28
   1334c:	cmp	r3, #0
   13350:	bne	13378 <close@plt+0x2414>
   13354:	ldr	r1, [sp, #76]	; 0x4c
   13358:	clz	r3, r7
   1335c:	lsr	r3, r3, #5
   13360:	cmp	r1, #0
   13364:	moveq	r3, #0
   13368:	cmp	r3, #0
   1336c:	beq	133bc <close@plt+0x2458>
   13370:	ldr	r7, [sp, #76]	; 0x4c
   13374:	b	1240c <close@plt+0x14a8>
   13378:	ldr	r3, [sp, #168]	; 0xa8
   1337c:	str	r3, [sp, #16]
   13380:	ldr	r3, [sp, #164]	; 0xa4
   13384:	str	r3, [sp, #12]
   13388:	ldr	r3, [sp, #160]	; 0xa0
   1338c:	str	r3, [sp, #8]
   13390:	ldr	r3, [sp, #156]	; 0x9c
   13394:	str	r3, [sp, #4]
   13398:	mov	r3, #5
   1339c:	str	r3, [sp]
   133a0:	ldr	r3, [sp, #28]
   133a4:	ldr	r2, [sp, #52]	; 0x34
   133a8:	ldr	r1, [sp, #76]	; 0x4c
   133ac:	ldr	r0, [sp, #36]	; 0x24
   133b0:	bl	123ac <close@plt+0x1448>
   133b4:	mov	fp, r0
   133b8:	b	134bc <close@plt+0x2558>
   133bc:	mov	sl, r7
   133c0:	ldr	r3, [sp, #72]	; 0x48
   133c4:	cmp	r3, #0
   133c8:	moveq	r2, #0
   133cc:	andne	r2, r2, #1
   133d0:	cmp	r2, #0
   133d4:	beq	13404 <close@plt+0x24a0>
   133d8:	mov	r2, r3
   133dc:	ldrb	r3, [r3]
   133e0:	cmp	r3, #0
   133e4:	beq	13404 <close@plt+0x24a0>
   133e8:	ldr	r1, [sp, #36]	; 0x24
   133ec:	cmp	sl, fp
   133f0:	strbhi	r3, [r1, fp]
   133f4:	add	fp, fp, #1
   133f8:	ldrb	r3, [r2, #1]!
   133fc:	cmp	r3, #0
   13400:	bne	133ec <close@plt+0x2488>
   13404:	cmp	sl, fp
   13408:	movhi	r3, #0
   1340c:	ldrhi	r2, [sp, #36]	; 0x24
   13410:	strbhi	r3, [r2, fp]
   13414:	b	134bc <close@plt+0x2558>
   13418:	mov	r8, sl
   1341c:	mov	sl, r7
   13420:	ldr	r3, [sp, #32]
   13424:	str	r3, [sp, #48]	; 0x30
   13428:	b	13464 <close@plt+0x2500>
   1342c:	mov	r8, sl
   13430:	mov	sl, r7
   13434:	b	13464 <close@plt+0x2500>
   13438:	mov	r8, sl
   1343c:	mov	sl, r7
   13440:	b	13464 <close@plt+0x2500>
   13444:	andeq	r5, r1, r8, lsl #22
   13448:	andeq	r5, r1, r8, lsl fp
   1344c:	andeq	r5, r1, ip, lsl #22
   13450:	mov	r8, sl
   13454:	mov	sl, r7
   13458:	b	13464 <close@plt+0x2500>
   1345c:	mov	r8, sl
   13460:	mov	sl, r7
   13464:	ldr	r3, [sp, #48]	; 0x30
   13468:	cmp	r8, #2
   1346c:	movne	r3, #0
   13470:	andeq	r3, r3, #1
   13474:	cmp	r3, #0
   13478:	movne	r8, #4
   1347c:	ldr	r3, [sp, #168]	; 0xa8
   13480:	str	r3, [sp, #16]
   13484:	ldr	r3, [sp, #164]	; 0xa4
   13488:	str	r3, [sp, #12]
   1348c:	mov	r3, #0
   13490:	str	r3, [sp, #8]
   13494:	ldr	r3, [sp, #156]	; 0x9c
   13498:	bic	r3, r3, #2
   1349c:	str	r3, [sp, #4]
   134a0:	str	r8, [sp]
   134a4:	ldr	r3, [sp, #28]
   134a8:	ldr	r2, [sp, #52]	; 0x34
   134ac:	mov	r1, sl
   134b0:	ldr	r0, [sp, #36]	; 0x24
   134b4:	bl	123ac <close@plt+0x1448>
   134b8:	mov	fp, r0
   134bc:	mov	r0, fp
   134c0:	add	sp, sp, #116	; 0x74
   134c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134c8:	mov	r8, sl
   134cc:	mov	sl, r7
   134d0:	b	13464 <close@plt+0x2500>
   134d4:	mov	r8, sl
   134d8:	mov	sl, r7
   134dc:	b	13464 <close@plt+0x2500>
   134e0:	mov	r8, sl
   134e4:	mov	sl, r7
   134e8:	b	13464 <close@plt+0x2500>
   134ec:	mov	r8, sl
   134f0:	mov	sl, r7
   134f4:	b	1347c <close@plt+0x2518>
   134f8:	mov	r3, #1
   134fc:	str	r3, [sp, #32]
   13500:	str	r3, [sp, #48]	; 0x30
   13504:	str	r3, [sp, #60]	; 0x3c
   13508:	ldr	r3, [pc, #-196]	; 1344c <close@plt+0x24e8>
   1350c:	str	r3, [sp, #72]	; 0x48
   13510:	mov	fp, #0
   13514:	mov	sl, #5
   13518:	b	12468 <close@plt+0x1504>
   1351c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13520:	sub	sp, sp, #52	; 0x34
   13524:	mov	r5, r0
   13528:	str	r1, [sp, #24]
   1352c:	str	r2, [sp, #28]
   13530:	mov	r4, r3
   13534:	bl	10e80 <__errno_location@plt>
   13538:	str	r0, [sp, #32]
   1353c:	ldr	r3, [r0]
   13540:	str	r3, [sp, #36]	; 0x24
   13544:	ldr	r3, [pc, #396]	; 136d8 <close@plt+0x2774>
   13548:	ldr	r6, [r3]
   1354c:	cmn	r5, #-2147483647	; 0x80000001
   13550:	movne	r3, #0
   13554:	moveq	r3, #1
   13558:	orrs	r3, r3, r5, lsr #31
   1355c:	bne	1369c <close@plt+0x2738>
   13560:	ldr	r3, [pc, #368]	; 136d8 <close@plt+0x2774>
   13564:	ldr	r2, [r3, #4]
   13568:	cmp	r5, r2
   1356c:	blt	135d4 <close@plt+0x2670>
   13570:	str	r2, [sp, #44]	; 0x2c
   13574:	add	r3, r3, #8
   13578:	cmp	r6, r3
   1357c:	beq	136a0 <close@plt+0x273c>
   13580:	sub	r2, r5, r2
   13584:	mov	r3, #8
   13588:	str	r3, [sp]
   1358c:	mvn	r3, #-2147483648	; 0x80000000
   13590:	add	r2, r2, #1
   13594:	add	r1, sp, #44	; 0x2c
   13598:	mov	r0, r6
   1359c:	bl	14434 <close@plt+0x34d0>
   135a0:	mov	r6, r0
   135a4:	ldr	r3, [pc, #300]	; 136d8 <close@plt+0x2774>
   135a8:	str	r0, [r3]
   135ac:	ldr	r7, [pc, #292]	; 136d8 <close@plt+0x2774>
   135b0:	ldr	r0, [r7, #4]
   135b4:	ldr	r2, [sp, #44]	; 0x2c
   135b8:	sub	r2, r2, r0
   135bc:	lsl	r2, r2, #3
   135c0:	mov	r1, #0
   135c4:	add	r0, r6, r0, lsl #3
   135c8:	bl	10ea4 <memset@plt>
   135cc:	ldr	r3, [sp, #44]	; 0x2c
   135d0:	str	r3, [r7, #4]
   135d4:	add	fp, r6, r5, lsl #3
   135d8:	ldr	r8, [r6, r5, lsl #3]
   135dc:	ldr	r7, [fp, #4]
   135e0:	ldr	r9, [r4, #4]
   135e4:	orr	r9, r9, #1
   135e8:	add	sl, r4, #8
   135ec:	ldr	r3, [r4, #44]	; 0x2c
   135f0:	str	r3, [sp, #16]
   135f4:	ldr	r3, [r4, #40]	; 0x28
   135f8:	str	r3, [sp, #12]
   135fc:	str	sl, [sp, #8]
   13600:	str	r9, [sp, #4]
   13604:	ldr	r3, [r4]
   13608:	str	r3, [sp]
   1360c:	ldr	r3, [sp, #28]
   13610:	ldr	r2, [sp, #24]
   13614:	mov	r1, r8
   13618:	mov	r0, r7
   1361c:	bl	123ac <close@plt+0x1448>
   13620:	cmp	r8, r0
   13624:	bhi	13684 <close@plt+0x2720>
   13628:	add	r8, r0, #1
   1362c:	str	r8, [r6, r5, lsl #3]
   13630:	ldr	r3, [pc, #164]	; 136dc <close@plt+0x2778>
   13634:	cmp	r7, r3
   13638:	beq	13644 <close@plt+0x26e0>
   1363c:	mov	r0, r7
   13640:	bl	1208c <close@plt+0x1128>
   13644:	mov	r0, r8
   13648:	bl	142b0 <close@plt+0x334c>
   1364c:	mov	r7, r0
   13650:	str	r0, [fp, #4]
   13654:	ldr	r3, [r4, #44]	; 0x2c
   13658:	str	r3, [sp, #16]
   1365c:	ldr	r3, [r4, #40]	; 0x28
   13660:	str	r3, [sp, #12]
   13664:	str	sl, [sp, #8]
   13668:	str	r9, [sp, #4]
   1366c:	ldr	r3, [r4]
   13670:	str	r3, [sp]
   13674:	ldr	r3, [sp, #28]
   13678:	ldr	r2, [sp, #24]
   1367c:	mov	r1, r8
   13680:	bl	123ac <close@plt+0x1448>
   13684:	ldr	r3, [sp, #32]
   13688:	ldr	r2, [sp, #36]	; 0x24
   1368c:	str	r2, [r3]
   13690:	mov	r0, r7
   13694:	add	sp, sp, #52	; 0x34
   13698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1369c:	bl	10f58 <abort@plt>
   136a0:	sub	r2, r5, r2
   136a4:	mov	r3, #8
   136a8:	str	r3, [sp]
   136ac:	mvn	r3, #-2147483648	; 0x80000000
   136b0:	add	r2, r2, #1
   136b4:	add	r1, sp, #44	; 0x2c
   136b8:	mov	r0, #0
   136bc:	bl	14434 <close@plt+0x34d0>
   136c0:	mov	r6, r0
   136c4:	ldr	r3, [pc, #12]	; 136d8 <close@plt+0x2774>
   136c8:	str	r0, [r3], #8
   136cc:	ldm	r3, {r0, r1}
   136d0:	stm	r6, {r0, r1}
   136d4:	b	135ac <close@plt+0x2648>
   136d8:	strdeq	r6, [r2], -ip
   136dc:	andeq	r6, r2, r0, lsl #3
   136e0:	push	{r4, r5, r6, lr}
   136e4:	mov	r4, r0
   136e8:	bl	10e80 <__errno_location@plt>
   136ec:	mov	r5, r0
   136f0:	ldr	r6, [r0]
   136f4:	cmp	r4, #0
   136f8:	ldr	r3, [pc, #20]	; 13714 <close@plt+0x27b0>
   136fc:	moveq	r4, r3
   13700:	mov	r1, #48	; 0x30
   13704:	mov	r0, r4
   13708:	bl	1479c <close@plt+0x3838>
   1370c:	str	r6, [r5]
   13710:	pop	{r4, r5, r6, pc}
   13714:	andeq	r6, r2, r0, lsl #5
   13718:	subs	r3, r0, #0
   1371c:	ldr	r2, [pc, #8]	; 1372c <close@plt+0x27c8>
   13720:	moveq	r3, r2
   13724:	ldr	r0, [r3]
   13728:	bx	lr
   1372c:	andeq	r6, r2, r0, lsl #5
   13730:	subs	r3, r0, #0
   13734:	ldr	r2, [pc, #8]	; 13744 <close@plt+0x27e0>
   13738:	moveq	r3, r2
   1373c:	str	r1, [r3]
   13740:	bx	lr
   13744:	andeq	r6, r2, r0, lsl #5
   13748:	push	{lr}		; (str lr, [sp, #-4]!)
   1374c:	subs	r3, r0, #0
   13750:	ldr	r0, [pc, #44]	; 13784 <close@plt+0x2820>
   13754:	moveq	r3, r0
   13758:	add	r3, r3, #8
   1375c:	lsr	lr, r1, #5
   13760:	and	r1, r1, #31
   13764:	ldr	ip, [r3, lr, lsl #2]
   13768:	lsr	r0, ip, r1
   1376c:	eor	r2, r2, r0
   13770:	and	r2, r2, #1
   13774:	eor	r1, ip, r2, lsl r1
   13778:	str	r1, [r3, lr, lsl #2]
   1377c:	and	r0, r0, #1
   13780:	pop	{pc}		; (ldr pc, [sp], #4)
   13784:	andeq	r6, r2, r0, lsl #5
   13788:	subs	r3, r0, #0
   1378c:	ldr	r2, [pc, #12]	; 137a0 <close@plt+0x283c>
   13790:	moveq	r3, r2
   13794:	ldr	r0, [r3, #4]
   13798:	str	r1, [r3, #4]
   1379c:	bx	lr
   137a0:	andeq	r6, r2, r0, lsl #5
   137a4:	subs	r3, r0, #0
   137a8:	ldr	r0, [pc, #40]	; 137d8 <close@plt+0x2874>
   137ac:	moveq	r3, r0
   137b0:	mov	r0, #10
   137b4:	str	r0, [r3]
   137b8:	cmp	r2, #0
   137bc:	cmpne	r1, #0
   137c0:	beq	137d0 <close@plt+0x286c>
   137c4:	str	r1, [r3, #40]	; 0x28
   137c8:	str	r2, [r3, #44]	; 0x2c
   137cc:	bx	lr
   137d0:	push	{r4, lr}
   137d4:	bl	10f58 <abort@plt>
   137d8:	andeq	r6, r2, r0, lsl #5
   137dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137e0:	sub	sp, sp, #24
   137e4:	mov	r7, r0
   137e8:	mov	r8, r1
   137ec:	mov	r9, r2
   137f0:	mov	sl, r3
   137f4:	ldr	r4, [sp, #56]	; 0x38
   137f8:	cmp	r4, #0
   137fc:	ldr	r3, [pc, #84]	; 13858 <close@plt+0x28f4>
   13800:	moveq	r4, r3
   13804:	bl	10e80 <__errno_location@plt>
   13808:	mov	r5, r0
   1380c:	ldr	r6, [r0]
   13810:	ldr	r3, [r4, #44]	; 0x2c
   13814:	str	r3, [sp, #16]
   13818:	ldr	r3, [r4, #40]	; 0x28
   1381c:	str	r3, [sp, #12]
   13820:	add	r3, r4, #8
   13824:	str	r3, [sp, #8]
   13828:	ldr	r3, [r4, #4]
   1382c:	str	r3, [sp, #4]
   13830:	ldr	r3, [r4]
   13834:	str	r3, [sp]
   13838:	mov	r3, sl
   1383c:	mov	r2, r9
   13840:	mov	r1, r8
   13844:	mov	r0, r7
   13848:	bl	123ac <close@plt+0x1448>
   1384c:	str	r6, [r5]
   13850:	add	sp, sp, #24
   13854:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13858:	andeq	r6, r2, r0, lsl #5
   1385c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13860:	sub	sp, sp, #44	; 0x2c
   13864:	str	r0, [sp, #28]
   13868:	str	r1, [sp, #32]
   1386c:	mov	r6, r2
   13870:	subs	r4, r3, #0
   13874:	ldr	r3, [pc, #172]	; 13928 <close@plt+0x29c4>
   13878:	moveq	r4, r3
   1387c:	bl	10e80 <__errno_location@plt>
   13880:	mov	r7, r0
   13884:	ldr	fp, [r0]
   13888:	ldr	r5, [r4, #4]
   1388c:	cmp	r6, #0
   13890:	orreq	r5, r5, #1
   13894:	add	r9, r4, #8
   13898:	ldr	r3, [r4, #44]	; 0x2c
   1389c:	str	r3, [sp, #16]
   138a0:	ldr	r3, [r4, #40]	; 0x28
   138a4:	str	r3, [sp, #12]
   138a8:	str	r9, [sp, #8]
   138ac:	str	r5, [sp, #4]
   138b0:	ldr	r3, [r4]
   138b4:	str	r3, [sp]
   138b8:	ldr	r3, [sp, #32]
   138bc:	ldr	r2, [sp, #28]
   138c0:	mov	r1, #0
   138c4:	mov	r0, r1
   138c8:	bl	123ac <close@plt+0x1448>
   138cc:	mov	sl, r0
   138d0:	add	r8, r0, #1
   138d4:	mov	r0, r8
   138d8:	bl	142b0 <close@plt+0x334c>
   138dc:	str	r0, [sp, #36]	; 0x24
   138e0:	ldr	r3, [r4, #44]	; 0x2c
   138e4:	str	r3, [sp, #16]
   138e8:	ldr	r3, [r4, #40]	; 0x28
   138ec:	str	r3, [sp, #12]
   138f0:	str	r9, [sp, #8]
   138f4:	str	r5, [sp, #4]
   138f8:	ldr	r3, [r4]
   138fc:	str	r3, [sp]
   13900:	ldr	r3, [sp, #32]
   13904:	ldr	r2, [sp, #28]
   13908:	mov	r1, r8
   1390c:	bl	123ac <close@plt+0x1448>
   13910:	str	fp, [r7]
   13914:	cmp	r6, #0
   13918:	strne	sl, [r6]
   1391c:	ldr	r0, [sp, #36]	; 0x24
   13920:	add	sp, sp, #44	; 0x2c
   13924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13928:	andeq	r6, r2, r0, lsl #5
   1392c:	push	{r4, lr}
   13930:	mov	r3, r2
   13934:	mov	r2, #0
   13938:	bl	1385c <close@plt+0x28f8>
   1393c:	pop	{r4, pc}
   13940:	push	{r4, r5, r6, r7, r8, lr}
   13944:	ldr	r3, [pc, #140]	; 139d8 <close@plt+0x2a74>
   13948:	ldr	r7, [r3]
   1394c:	ldr	r3, [r3, #4]
   13950:	cmp	r3, #1
   13954:	ble	13980 <close@plt+0x2a1c>
   13958:	mov	r5, r7
   1395c:	mov	r4, #1
   13960:	ldr	r6, [pc, #112]	; 139d8 <close@plt+0x2a74>
   13964:	ldr	r0, [r5, #12]
   13968:	bl	1208c <close@plt+0x1128>
   1396c:	add	r4, r4, #1
   13970:	add	r5, r5, #8
   13974:	ldr	r3, [r6, #4]
   13978:	cmp	r3, r4
   1397c:	bgt	13964 <close@plt+0x2a00>
   13980:	ldr	r0, [r7, #4]
   13984:	ldr	r3, [pc, #80]	; 139dc <close@plt+0x2a78>
   13988:	cmp	r0, r3
   1398c:	beq	139a8 <close@plt+0x2a44>
   13990:	bl	1208c <close@plt+0x1128>
   13994:	ldr	r3, [pc, #60]	; 139d8 <close@plt+0x2a74>
   13998:	mov	r2, #256	; 0x100
   1399c:	str	r2, [r3, #8]
   139a0:	ldr	r2, [pc, #52]	; 139dc <close@plt+0x2a78>
   139a4:	str	r2, [r3, #12]
   139a8:	ldr	r3, [pc, #48]	; 139e0 <close@plt+0x2a7c>
   139ac:	cmp	r7, r3
   139b0:	beq	139c8 <close@plt+0x2a64>
   139b4:	mov	r0, r7
   139b8:	bl	1208c <close@plt+0x1128>
   139bc:	ldr	r3, [pc, #20]	; 139d8 <close@plt+0x2a74>
   139c0:	add	r2, r3, #8
   139c4:	str	r2, [r3]
   139c8:	mov	r2, #1
   139cc:	ldr	r3, [pc, #4]	; 139d8 <close@plt+0x2a74>
   139d0:	str	r2, [r3, #4]
   139d4:	pop	{r4, r5, r6, r7, r8, pc}
   139d8:	strdeq	r6, [r2], -ip
   139dc:	andeq	r6, r2, r0, lsl #3
   139e0:	andeq	r6, r2, r4, lsl #2
   139e4:	push	{r4, lr}
   139e8:	ldr	r3, [pc, #8]	; 139f8 <close@plt+0x2a94>
   139ec:	mvn	r2, #0
   139f0:	bl	1351c <close@plt+0x25b8>
   139f4:	pop	{r4, pc}
   139f8:	andeq	r6, r2, r0, lsl #5
   139fc:	push	{r4, lr}
   13a00:	ldr	r3, [pc, #4]	; 13a0c <close@plt+0x2aa8>
   13a04:	bl	1351c <close@plt+0x25b8>
   13a08:	pop	{r4, pc}
   13a0c:	andeq	r6, r2, r0, lsl #5
   13a10:	push	{r4, lr}
   13a14:	mov	r1, r0
   13a18:	mov	r0, #0
   13a1c:	bl	139e4 <close@plt+0x2a80>
   13a20:	pop	{r4, pc}
   13a24:	push	{r4, lr}
   13a28:	mov	r2, r1
   13a2c:	mov	r1, r0
   13a30:	mov	r0, #0
   13a34:	bl	139fc <close@plt+0x2a98>
   13a38:	pop	{r4, pc}
   13a3c:	push	{r4, r5, lr}
   13a40:	sub	sp, sp, #52	; 0x34
   13a44:	mov	r4, r0
   13a48:	mov	r5, r2
   13a4c:	mov	r0, sp
   13a50:	bl	12244 <close@plt+0x12e0>
   13a54:	mov	r3, sp
   13a58:	mvn	r2, #0
   13a5c:	mov	r1, r5
   13a60:	mov	r0, r4
   13a64:	bl	1351c <close@plt+0x25b8>
   13a68:	add	sp, sp, #52	; 0x34
   13a6c:	pop	{r4, r5, pc}
   13a70:	push	{r4, r5, r6, lr}
   13a74:	sub	sp, sp, #48	; 0x30
   13a78:	mov	r4, r0
   13a7c:	mov	r5, r2
   13a80:	mov	r6, r3
   13a84:	mov	r0, sp
   13a88:	bl	12244 <close@plt+0x12e0>
   13a8c:	mov	r3, sp
   13a90:	mov	r2, r6
   13a94:	mov	r1, r5
   13a98:	mov	r0, r4
   13a9c:	bl	1351c <close@plt+0x25b8>
   13aa0:	add	sp, sp, #48	; 0x30
   13aa4:	pop	{r4, r5, r6, pc}
   13aa8:	push	{r4, lr}
   13aac:	mov	r2, r1
   13ab0:	mov	r1, r0
   13ab4:	mov	r0, #0
   13ab8:	bl	13a3c <close@plt+0x2ad8>
   13abc:	pop	{r4, pc}
   13ac0:	push	{r4, lr}
   13ac4:	mov	r3, r2
   13ac8:	mov	r2, r1
   13acc:	mov	r1, r0
   13ad0:	mov	r0, #0
   13ad4:	bl	13a70 <close@plt+0x2b0c>
   13ad8:	pop	{r4, pc}
   13adc:	push	{r4, r5, r6, lr}
   13ae0:	sub	sp, sp, #48	; 0x30
   13ae4:	mov	r4, r0
   13ae8:	mov	r5, r1
   13aec:	mov	r6, r2
   13af0:	mov	ip, sp
   13af4:	ldr	lr, [pc, #64]	; 13b3c <close@plt+0x2bd8>
   13af8:	ldm	lr!, {r0, r1, r2, r3}
   13afc:	stmia	ip!, {r0, r1, r2, r3}
   13b00:	ldm	lr!, {r0, r1, r2, r3}
   13b04:	stmia	ip!, {r0, r1, r2, r3}
   13b08:	ldm	lr, {r0, r1, r2, r3}
   13b0c:	stm	ip, {r0, r1, r2, r3}
   13b10:	mov	r2, #1
   13b14:	mov	r1, r6
   13b18:	mov	r0, sp
   13b1c:	bl	13748 <close@plt+0x27e4>
   13b20:	mov	r3, sp
   13b24:	mov	r2, r5
   13b28:	mov	r1, r4
   13b2c:	mov	r0, #0
   13b30:	bl	1351c <close@plt+0x25b8>
   13b34:	add	sp, sp, #48	; 0x30
   13b38:	pop	{r4, r5, r6, pc}
   13b3c:	andeq	r6, r2, r0, lsl #5
   13b40:	push	{r4, lr}
   13b44:	mov	r2, r1
   13b48:	mvn	r1, #0
   13b4c:	bl	13adc <close@plt+0x2b78>
   13b50:	pop	{r4, pc}
   13b54:	push	{r4, lr}
   13b58:	mov	r1, #58	; 0x3a
   13b5c:	bl	13b40 <close@plt+0x2bdc>
   13b60:	pop	{r4, pc}
   13b64:	push	{r4, lr}
   13b68:	mov	r2, #58	; 0x3a
   13b6c:	bl	13adc <close@plt+0x2b78>
   13b70:	pop	{r4, pc}
   13b74:	push	{r4, r5, lr}
   13b78:	sub	sp, sp, #100	; 0x64
   13b7c:	mov	r4, r0
   13b80:	mov	r5, r2
   13b84:	mov	r0, sp
   13b88:	bl	12244 <close@plt+0x12e0>
   13b8c:	add	lr, sp, #48	; 0x30
   13b90:	mov	ip, sp
   13b94:	ldm	ip!, {r0, r1, r2, r3}
   13b98:	stmia	lr!, {r0, r1, r2, r3}
   13b9c:	ldm	ip!, {r0, r1, r2, r3}
   13ba0:	stmia	lr!, {r0, r1, r2, r3}
   13ba4:	ldm	ip, {r0, r1, r2, r3}
   13ba8:	stm	lr, {r0, r1, r2, r3}
   13bac:	mov	r2, #1
   13bb0:	mov	r1, #58	; 0x3a
   13bb4:	add	r0, sp, #48	; 0x30
   13bb8:	bl	13748 <close@plt+0x27e4>
   13bbc:	add	r3, sp, #48	; 0x30
   13bc0:	mvn	r2, #0
   13bc4:	mov	r1, r5
   13bc8:	mov	r0, r4
   13bcc:	bl	1351c <close@plt+0x25b8>
   13bd0:	add	sp, sp, #100	; 0x64
   13bd4:	pop	{r4, r5, pc}
   13bd8:	push	{r4, r5, r6, r7, lr}
   13bdc:	sub	sp, sp, #52	; 0x34
   13be0:	mov	r4, r0
   13be4:	mov	r6, r1
   13be8:	mov	r7, r2
   13bec:	mov	r5, r3
   13bf0:	mov	ip, sp
   13bf4:	ldr	lr, [pc, #64]	; 13c3c <close@plt+0x2cd8>
   13bf8:	ldm	lr!, {r0, r1, r2, r3}
   13bfc:	stmia	ip!, {r0, r1, r2, r3}
   13c00:	ldm	lr!, {r0, r1, r2, r3}
   13c04:	stmia	ip!, {r0, r1, r2, r3}
   13c08:	ldm	lr, {r0, r1, r2, r3}
   13c0c:	stm	ip, {r0, r1, r2, r3}
   13c10:	mov	r2, r7
   13c14:	mov	r1, r6
   13c18:	mov	r0, sp
   13c1c:	bl	137a4 <close@plt+0x2840>
   13c20:	mov	r3, sp
   13c24:	ldr	r2, [sp, #72]	; 0x48
   13c28:	mov	r1, r5
   13c2c:	mov	r0, r4
   13c30:	bl	1351c <close@plt+0x25b8>
   13c34:	add	sp, sp, #52	; 0x34
   13c38:	pop	{r4, r5, r6, r7, pc}
   13c3c:	andeq	r6, r2, r0, lsl #5
   13c40:	push	{lr}		; (str lr, [sp, #-4]!)
   13c44:	sub	sp, sp, #12
   13c48:	mvn	ip, #0
   13c4c:	str	ip, [sp]
   13c50:	bl	13bd8 <close@plt+0x2c74>
   13c54:	add	sp, sp, #12
   13c58:	pop	{pc}		; (ldr pc, [sp], #4)
   13c5c:	push	{r4, lr}
   13c60:	mov	r3, r2
   13c64:	mov	r2, r1
   13c68:	mov	r1, r0
   13c6c:	mov	r0, #0
   13c70:	bl	13c40 <close@plt+0x2cdc>
   13c74:	pop	{r4, pc}
   13c78:	push	{lr}		; (str lr, [sp, #-4]!)
   13c7c:	sub	sp, sp, #12
   13c80:	str	r3, [sp]
   13c84:	mov	r3, r2
   13c88:	mov	r2, r1
   13c8c:	mov	r1, r0
   13c90:	mov	r0, #0
   13c94:	bl	13bd8 <close@plt+0x2c74>
   13c98:	add	sp, sp, #12
   13c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13ca0:	push	{r4, lr}
   13ca4:	ldr	r3, [pc, #4]	; 13cb0 <close@plt+0x2d4c>
   13ca8:	bl	1351c <close@plt+0x25b8>
   13cac:	pop	{r4, pc}
   13cb0:	andeq	r6, r2, ip, lsl #2
   13cb4:	push	{r4, lr}
   13cb8:	mov	r2, r1
   13cbc:	mov	r1, r0
   13cc0:	mov	r0, #0
   13cc4:	bl	13ca0 <close@plt+0x2d3c>
   13cc8:	pop	{r4, pc}
   13ccc:	push	{r4, lr}
   13cd0:	mvn	r2, #0
   13cd4:	bl	13ca0 <close@plt+0x2d3c>
   13cd8:	pop	{r4, pc}
   13cdc:	push	{r4, lr}
   13ce0:	mov	r1, r0
   13ce4:	mov	r0, #0
   13ce8:	bl	13ccc <close@plt+0x2d68>
   13cec:	pop	{r4, pc}
   13cf0:	push	{r4, lr}
   13cf4:	mov	r2, #3
   13cf8:	mov	r1, #0
   13cfc:	bl	149b4 <close@plt+0x3a50>
   13d00:	pop	{r4, pc}
   13d04:	push	{r4, r5, r6, lr}
   13d08:	sub	sp, sp, #32
   13d0c:	mov	r4, r0
   13d10:	ldr	r5, [sp, #48]	; 0x30
   13d14:	ldr	r6, [sp, #52]	; 0x34
   13d18:	cmp	r1, #0
   13d1c:	beq	13dd4 <close@plt+0x2e70>
   13d20:	str	r3, [sp, #4]
   13d24:	str	r2, [sp]
   13d28:	mov	r3, r1
   13d2c:	ldr	r2, [pc, #940]	; 140e0 <close@plt+0x317c>
   13d30:	mov	r1, #1
   13d34:	bl	10ec8 <__fprintf_chk@plt>
   13d38:	mov	r2, #5
   13d3c:	ldr	r1, [pc, #928]	; 140e4 <close@plt+0x3180>
   13d40:	mov	r0, #0
   13d44:	bl	10da8 <dcgettext@plt>
   13d48:	ldr	r3, [pc, #920]	; 140e8 <close@plt+0x3184>
   13d4c:	str	r3, [sp]
   13d50:	mov	r3, r0
   13d54:	ldr	r2, [pc, #912]	; 140ec <close@plt+0x3188>
   13d58:	mov	r1, #1
   13d5c:	mov	r0, r4
   13d60:	bl	10ec8 <__fprintf_chk@plt>
   13d64:	mov	r1, r4
   13d68:	mov	r0, #10
   13d6c:	bl	10d9c <fputc_unlocked@plt>
   13d70:	mov	r2, #5
   13d74:	ldr	r1, [pc, #884]	; 140f0 <close@plt+0x318c>
   13d78:	mov	r0, #0
   13d7c:	bl	10da8 <dcgettext@plt>
   13d80:	ldr	r3, [pc, #876]	; 140f4 <close@plt+0x3190>
   13d84:	mov	r2, r0
   13d88:	mov	r1, #1
   13d8c:	mov	r0, r4
   13d90:	bl	10ec8 <__fprintf_chk@plt>
   13d94:	mov	r1, r4
   13d98:	mov	r0, #10
   13d9c:	bl	10d9c <fputc_unlocked@plt>
   13da0:	cmp	r6, #9
   13da4:	ldrls	pc, [pc, r6, lsl #2]
   13da8:	b	14078 <close@plt+0x3114>
   13dac:	andeq	r3, r1, r0, lsl lr
   13db0:	andeq	r3, r1, ip, ror #27
   13db4:	andeq	r3, r1, r8, lsl lr
   13db8:	andeq	r3, r1, r8, asr #28
   13dbc:	andeq	r3, r1, r0, lsl #29
   13dc0:	andeq	r3, r1, r0, asr #29
   13dc4:	andeq	r3, r1, r8, lsl #30
   13dc8:	andeq	r3, r1, r8, asr pc
   13dcc:			; <UNDEFINED> instruction: 0x00013fb0
   13dd0:	andeq	r4, r1, r0, lsl r0
   13dd4:	str	r3, [sp]
   13dd8:	mov	r3, r2
   13ddc:	ldr	r2, [pc, #788]	; 140f8 <close@plt+0x3194>
   13de0:	mov	r1, #1
   13de4:	bl	10ec8 <__fprintf_chk@plt>
   13de8:	b	13d38 <close@plt+0x2dd4>
   13dec:	mov	r2, #5
   13df0:	ldr	r1, [pc, #772]	; 140fc <close@plt+0x3198>
   13df4:	mov	r0, #0
   13df8:	bl	10da8 <dcgettext@plt>
   13dfc:	ldr	r3, [r5]
   13e00:	mov	r2, r0
   13e04:	mov	r1, #1
   13e08:	mov	r0, r4
   13e0c:	bl	10ec8 <__fprintf_chk@plt>
   13e10:	add	sp, sp, #32
   13e14:	pop	{r4, r5, r6, pc}
   13e18:	mov	r2, #5
   13e1c:	ldr	r1, [pc, #732]	; 14100 <close@plt+0x319c>
   13e20:	mov	r0, #0
   13e24:	bl	10da8 <dcgettext@plt>
   13e28:	ldr	r3, [r5]
   13e2c:	ldr	r2, [r5, #4]
   13e30:	str	r2, [sp]
   13e34:	mov	r2, r0
   13e38:	mov	r1, #1
   13e3c:	mov	r0, r4
   13e40:	bl	10ec8 <__fprintf_chk@plt>
   13e44:	b	13e10 <close@plt+0x2eac>
   13e48:	mov	r2, #5
   13e4c:	ldr	r1, [pc, #688]	; 14104 <close@plt+0x31a0>
   13e50:	mov	r0, #0
   13e54:	bl	10da8 <dcgettext@plt>
   13e58:	ldr	r3, [r5]
   13e5c:	ldr	r2, [r5, #8]
   13e60:	str	r2, [sp, #4]
   13e64:	ldr	r2, [r5, #4]
   13e68:	str	r2, [sp]
   13e6c:	mov	r2, r0
   13e70:	mov	r1, #1
   13e74:	mov	r0, r4
   13e78:	bl	10ec8 <__fprintf_chk@plt>
   13e7c:	b	13e10 <close@plt+0x2eac>
   13e80:	mov	r2, #5
   13e84:	ldr	r1, [pc, #636]	; 14108 <close@plt+0x31a4>
   13e88:	mov	r0, #0
   13e8c:	bl	10da8 <dcgettext@plt>
   13e90:	ldr	r3, [r5]
   13e94:	ldr	r2, [r5, #12]
   13e98:	str	r2, [sp, #8]
   13e9c:	ldr	r2, [r5, #8]
   13ea0:	str	r2, [sp, #4]
   13ea4:	ldr	r2, [r5, #4]
   13ea8:	str	r2, [sp]
   13eac:	mov	r2, r0
   13eb0:	mov	r1, #1
   13eb4:	mov	r0, r4
   13eb8:	bl	10ec8 <__fprintf_chk@plt>
   13ebc:	b	13e10 <close@plt+0x2eac>
   13ec0:	mov	r2, #5
   13ec4:	ldr	r1, [pc, #576]	; 1410c <close@plt+0x31a8>
   13ec8:	mov	r0, #0
   13ecc:	bl	10da8 <dcgettext@plt>
   13ed0:	ldr	r3, [r5]
   13ed4:	ldr	r2, [r5, #16]
   13ed8:	str	r2, [sp, #12]
   13edc:	ldr	r2, [r5, #12]
   13ee0:	str	r2, [sp, #8]
   13ee4:	ldr	r2, [r5, #8]
   13ee8:	str	r2, [sp, #4]
   13eec:	ldr	r2, [r5, #4]
   13ef0:	str	r2, [sp]
   13ef4:	mov	r2, r0
   13ef8:	mov	r1, #1
   13efc:	mov	r0, r4
   13f00:	bl	10ec8 <__fprintf_chk@plt>
   13f04:	b	13e10 <close@plt+0x2eac>
   13f08:	mov	r2, #5
   13f0c:	ldr	r1, [pc, #508]	; 14110 <close@plt+0x31ac>
   13f10:	mov	r0, #0
   13f14:	bl	10da8 <dcgettext@plt>
   13f18:	ldr	r3, [r5]
   13f1c:	ldr	r2, [r5, #20]
   13f20:	str	r2, [sp, #16]
   13f24:	ldr	r2, [r5, #16]
   13f28:	str	r2, [sp, #12]
   13f2c:	ldr	r2, [r5, #12]
   13f30:	str	r2, [sp, #8]
   13f34:	ldr	r2, [r5, #8]
   13f38:	str	r2, [sp, #4]
   13f3c:	ldr	r2, [r5, #4]
   13f40:	str	r2, [sp]
   13f44:	mov	r2, r0
   13f48:	mov	r1, #1
   13f4c:	mov	r0, r4
   13f50:	bl	10ec8 <__fprintf_chk@plt>
   13f54:	b	13e10 <close@plt+0x2eac>
   13f58:	mov	r2, #5
   13f5c:	ldr	r1, [pc, #432]	; 14114 <close@plt+0x31b0>
   13f60:	mov	r0, #0
   13f64:	bl	10da8 <dcgettext@plt>
   13f68:	ldr	r3, [r5]
   13f6c:	ldr	r2, [r5, #24]
   13f70:	str	r2, [sp, #20]
   13f74:	ldr	r2, [r5, #20]
   13f78:	str	r2, [sp, #16]
   13f7c:	ldr	r2, [r5, #16]
   13f80:	str	r2, [sp, #12]
   13f84:	ldr	r2, [r5, #12]
   13f88:	str	r2, [sp, #8]
   13f8c:	ldr	r2, [r5, #8]
   13f90:	str	r2, [sp, #4]
   13f94:	ldr	r2, [r5, #4]
   13f98:	str	r2, [sp]
   13f9c:	mov	r2, r0
   13fa0:	mov	r1, #1
   13fa4:	mov	r0, r4
   13fa8:	bl	10ec8 <__fprintf_chk@plt>
   13fac:	b	13e10 <close@plt+0x2eac>
   13fb0:	mov	r2, #5
   13fb4:	ldr	r1, [pc, #348]	; 14118 <close@plt+0x31b4>
   13fb8:	mov	r0, #0
   13fbc:	bl	10da8 <dcgettext@plt>
   13fc0:	ldr	r3, [r5]
   13fc4:	ldr	r2, [r5, #28]
   13fc8:	str	r2, [sp, #24]
   13fcc:	ldr	r2, [r5, #24]
   13fd0:	str	r2, [sp, #20]
   13fd4:	ldr	r2, [r5, #20]
   13fd8:	str	r2, [sp, #16]
   13fdc:	ldr	r2, [r5, #16]
   13fe0:	str	r2, [sp, #12]
   13fe4:	ldr	r2, [r5, #12]
   13fe8:	str	r2, [sp, #8]
   13fec:	ldr	r2, [r5, #8]
   13ff0:	str	r2, [sp, #4]
   13ff4:	ldr	r2, [r5, #4]
   13ff8:	str	r2, [sp]
   13ffc:	mov	r2, r0
   14000:	mov	r1, #1
   14004:	mov	r0, r4
   14008:	bl	10ec8 <__fprintf_chk@plt>
   1400c:	b	13e10 <close@plt+0x2eac>
   14010:	mov	r2, #5
   14014:	ldr	r1, [pc, #256]	; 1411c <close@plt+0x31b8>
   14018:	mov	r0, #0
   1401c:	bl	10da8 <dcgettext@plt>
   14020:	ldr	r3, [r5]
   14024:	ldr	r2, [r5, #32]
   14028:	str	r2, [sp, #28]
   1402c:	ldr	r2, [r5, #28]
   14030:	str	r2, [sp, #24]
   14034:	ldr	r2, [r5, #24]
   14038:	str	r2, [sp, #20]
   1403c:	ldr	r2, [r5, #20]
   14040:	str	r2, [sp, #16]
   14044:	ldr	r2, [r5, #16]
   14048:	str	r2, [sp, #12]
   1404c:	ldr	r2, [r5, #12]
   14050:	str	r2, [sp, #8]
   14054:	ldr	r2, [r5, #8]
   14058:	str	r2, [sp, #4]
   1405c:	ldr	r2, [r5, #4]
   14060:	str	r2, [sp]
   14064:	mov	r2, r0
   14068:	mov	r1, #1
   1406c:	mov	r0, r4
   14070:	bl	10ec8 <__fprintf_chk@plt>
   14074:	b	13e10 <close@plt+0x2eac>
   14078:	mov	r2, #5
   1407c:	ldr	r1, [pc, #156]	; 14120 <close@plt+0x31bc>
   14080:	mov	r0, #0
   14084:	bl	10da8 <dcgettext@plt>
   14088:	ldr	r3, [r5]
   1408c:	ldr	r2, [r5, #32]
   14090:	str	r2, [sp, #28]
   14094:	ldr	r2, [r5, #28]
   14098:	str	r2, [sp, #24]
   1409c:	ldr	r2, [r5, #24]
   140a0:	str	r2, [sp, #20]
   140a4:	ldr	r2, [r5, #20]
   140a8:	str	r2, [sp, #16]
   140ac:	ldr	r2, [r5, #16]
   140b0:	str	r2, [sp, #12]
   140b4:	ldr	r2, [r5, #12]
   140b8:	str	r2, [sp, #8]
   140bc:	ldr	r2, [r5, #8]
   140c0:	str	r2, [sp, #4]
   140c4:	ldr	r2, [r5, #4]
   140c8:	str	r2, [sp]
   140cc:	mov	r2, r0
   140d0:	mov	r1, #1
   140d4:	mov	r0, r4
   140d8:	bl	10ec8 <__fprintf_chk@plt>
   140dc:	b	13e10 <close@plt+0x2eac>
   140e0:	andeq	r5, r1, r4, lsl #23
   140e4:	muleq	r1, r8, fp
   140e8:	andeq	r0, r0, r6, ror #15
   140ec:	andeq	r5, r1, r0, ror lr
   140f0:	muleq	r1, ip, fp
   140f4:	andeq	r5, r1, r8, asr #24
   140f8:	muleq	r1, r0, fp
   140fc:	andeq	r5, r1, ip, ror #24
   14100:	andeq	r5, r1, ip, ror ip
   14104:	muleq	r1, r4, ip
   14108:			; <UNDEFINED> instruction: 0x00015cb0
   1410c:	ldrdeq	r5, [r1], -r0
   14110:	strdeq	r5, [r1], -r4
   14114:	andeq	r5, r1, ip, lsl sp
   14118:	andeq	r5, r1, r8, asr #26
   1411c:	andeq	r5, r1, r8, ror sp
   14120:	andeq	r5, r1, ip, lsr #27
   14124:	push	{r4, r5, lr}
   14128:	sub	sp, sp, #12
   1412c:	ldr	r5, [sp, #24]
   14130:	ldr	ip, [r5]
   14134:	cmp	ip, #0
   14138:	beq	14168 <close@plt+0x3204>
   1413c:	mov	lr, r5
   14140:	mov	ip, #0
   14144:	add	ip, ip, #1
   14148:	ldr	r4, [lr, #4]!
   1414c:	cmp	r4, #0
   14150:	bne	14144 <close@plt+0x31e0>
   14154:	str	ip, [sp, #4]
   14158:	str	r5, [sp]
   1415c:	bl	13d04 <close@plt+0x2da0>
   14160:	add	sp, sp, #12
   14164:	pop	{r4, r5, pc}
   14168:	mov	ip, #0
   1416c:	b	14154 <close@plt+0x31f0>
   14170:	push	{r4, r5, lr}
   14174:	sub	sp, sp, #52	; 0x34
   14178:	ldr	r4, [sp, #64]	; 0x40
   1417c:	sub	r4, r4, #4
   14180:	add	r5, sp, #4
   14184:	mov	ip, #0
   14188:	ldr	lr, [r4, #4]!
   1418c:	str	lr, [r5, #4]!
   14190:	cmp	lr, #0
   14194:	beq	141a4 <close@plt+0x3240>
   14198:	add	ip, ip, #1
   1419c:	cmp	ip, #10
   141a0:	bne	14188 <close@plt+0x3224>
   141a4:	str	ip, [sp, #4]
   141a8:	add	ip, sp, #8
   141ac:	str	ip, [sp]
   141b0:	bl	13d04 <close@plt+0x2da0>
   141b4:	add	sp, sp, #52	; 0x34
   141b8:	pop	{r4, r5, pc}
   141bc:	push	{r3}		; (str r3, [sp, #-4]!)
   141c0:	push	{lr}		; (str lr, [sp, #-4]!)
   141c4:	sub	sp, sp, #16
   141c8:	add	r3, sp, #24
   141cc:	str	r3, [sp, #12]
   141d0:	str	r3, [sp]
   141d4:	ldr	r3, [sp, #20]
   141d8:	bl	14170 <close@plt+0x320c>
   141dc:	add	sp, sp, #16
   141e0:	pop	{lr}		; (ldr lr, [sp], #4)
   141e4:	add	sp, sp, #4
   141e8:	bx	lr
   141ec:	push	{r4, lr}
   141f0:	ldr	r3, [pc, #112]	; 14268 <close@plt+0x3304>
   141f4:	ldr	r1, [r3]
   141f8:	mov	r0, #10
   141fc:	bl	10d9c <fputc_unlocked@plt>
   14200:	mov	r2, #5
   14204:	ldr	r1, [pc, #96]	; 1426c <close@plt+0x3308>
   14208:	mov	r0, #0
   1420c:	bl	10da8 <dcgettext@plt>
   14210:	ldr	r2, [pc, #88]	; 14270 <close@plt+0x330c>
   14214:	mov	r1, r0
   14218:	mov	r0, #1
   1421c:	bl	10eb0 <__printf_chk@plt>
   14220:	mov	r2, #5
   14224:	ldr	r1, [pc, #72]	; 14274 <close@plt+0x3310>
   14228:	mov	r0, #0
   1422c:	bl	10da8 <dcgettext@plt>
   14230:	ldr	r3, [pc, #64]	; 14278 <close@plt+0x3314>
   14234:	ldr	r2, [pc, #64]	; 1427c <close@plt+0x3318>
   14238:	mov	r1, r0
   1423c:	mov	r0, #1
   14240:	bl	10eb0 <__printf_chk@plt>
   14244:	mov	r2, #5
   14248:	ldr	r1, [pc, #48]	; 14280 <close@plt+0x331c>
   1424c:	mov	r0, #0
   14250:	bl	10da8 <dcgettext@plt>
   14254:	ldr	r2, [pc, #40]	; 14284 <close@plt+0x3320>
   14258:	mov	r1, r0
   1425c:	mov	r0, #1
   14260:	bl	10eb0 <__printf_chk@plt>
   14264:	pop	{r4, pc}
   14268:	andeq	r6, r2, ip, asr r1
   1426c:	andeq	r5, r1, r8, ror #27
   14270:	strdeq	r5, [r1], -ip
   14274:	andeq	r5, r1, r4, lsl lr
   14278:	ldrdeq	r5, [r1], -r0
   1427c:	strdeq	r5, [r1], -r8
   14280:	andeq	r5, r1, r8, lsr #28
   14284:	andeq	r5, r1, r0, asr lr
   14288:	push	{r4, lr}
   1428c:	bl	148bc <close@plt+0x3958>
   14290:	cmp	r0, #0
   14294:	popne	{r4, pc}
   14298:	bl	1482c <close@plt+0x38c8>
   1429c:	push	{r4, lr}
   142a0:	bl	148bc <close@plt+0x3958>
   142a4:	cmp	r0, #0
   142a8:	popne	{r4, pc}
   142ac:	bl	1482c <close@plt+0x38c8>
   142b0:	push	{r4, lr}
   142b4:	bl	14288 <close@plt+0x3324>
   142b8:	pop	{r4, pc}
   142bc:	push	{r4, r5, r6, lr}
   142c0:	mov	r5, r0
   142c4:	mov	r4, r1
   142c8:	bl	148ec <close@plt+0x3988>
   142cc:	cmp	r0, #0
   142d0:	popne	{r4, r5, r6, pc}
   142d4:	adds	r4, r4, #0
   142d8:	movne	r4, #1
   142dc:	cmp	r5, #0
   142e0:	orreq	r4, r4, #1
   142e4:	cmp	r4, #0
   142e8:	popeq	{r4, r5, r6, pc}
   142ec:	bl	1482c <close@plt+0x38c8>
   142f0:	push	{r4, lr}
   142f4:	cmp	r1, #0
   142f8:	orreq	r1, r1, #1
   142fc:	bl	148ec <close@plt+0x3988>
   14300:	cmp	r0, #0
   14304:	popne	{r4, pc}
   14308:	bl	1482c <close@plt+0x38c8>
   1430c:	push	{r4, r5, r6, lr}
   14310:	mov	r6, r0
   14314:	mov	r5, r1
   14318:	mov	r4, r2
   1431c:	bl	14c98 <close@plt+0x3d34>
   14320:	cmp	r0, #0
   14324:	popne	{r4, r5, r6, pc}
   14328:	cmp	r6, #0
   1432c:	beq	1433c <close@plt+0x33d8>
   14330:	cmp	r5, #0
   14334:	cmpne	r4, #0
   14338:	popeq	{r4, r5, r6, pc}
   1433c:	bl	1482c <close@plt+0x38c8>
   14340:	push	{r4, lr}
   14344:	bl	1430c <close@plt+0x33a8>
   14348:	pop	{r4, pc}
   1434c:	push	{r4, lr}
   14350:	mov	ip, r1
   14354:	mov	r3, r2
   14358:	cmp	r2, #0
   1435c:	cmpne	r1, #0
   14360:	moveq	r3, #1
   14364:	moveq	ip, r3
   14368:	mov	r2, r3
   1436c:	mov	r1, ip
   14370:	bl	14c98 <close@plt+0x3d34>
   14374:	cmp	r0, #0
   14378:	popne	{r4, pc}
   1437c:	bl	1482c <close@plt+0x38c8>
   14380:	push	{r4, lr}
   14384:	mov	r2, r1
   14388:	mov	r1, r0
   1438c:	mov	r0, #0
   14390:	bl	1430c <close@plt+0x33a8>
   14394:	pop	{r4, pc}
   14398:	push	{r4, lr}
   1439c:	mov	r2, r1
   143a0:	mov	r1, r0
   143a4:	mov	r0, #0
   143a8:	bl	1434c <close@plt+0x33e8>
   143ac:	pop	{r4, pc}
   143b0:	push	{r4, r5, r6, r7, r8, lr}
   143b4:	mov	r5, r1
   143b8:	mov	r6, r2
   143bc:	ldr	r4, [r1]
   143c0:	subs	r7, r0, #0
   143c4:	beq	143e0 <close@plt+0x347c>
   143c8:	lsr	r2, r4, #1
   143cc:	add	r3, r2, #1
   143d0:	mvn	r3, r3
   143d4:	cmp	r4, r3
   143d8:	bls	14404 <close@plt+0x34a0>
   143dc:	bl	1482c <close@plt+0x38c8>
   143e0:	cmp	r4, #0
   143e4:	bne	1440c <close@plt+0x34a8>
   143e8:	mov	r1, r2
   143ec:	mov	r0, #64	; 0x40
   143f0:	bl	14dec <close@plt+0x3e88>
   143f4:	cmp	r0, #0
   143f8:	movne	r4, r0
   143fc:	addeq	r4, r0, #1
   14400:	b	1440c <close@plt+0x34a8>
   14404:	add	r4, r4, #1
   14408:	add	r4, r4, r2
   1440c:	mov	r2, r6
   14410:	mov	r1, r4
   14414:	mov	r0, r7
   14418:	bl	1430c <close@plt+0x33a8>
   1441c:	str	r4, [r5]
   14420:	pop	{r4, r5, r6, r7, r8, pc}
   14424:	push	{r4, lr}
   14428:	mov	r2, #1
   1442c:	bl	143b0 <close@plt+0x344c>
   14430:	pop	{r4, pc}
   14434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14438:	sub	sp, sp, #12
   1443c:	mov	fp, r0
   14440:	mov	sl, r1
   14444:	mov	r9, r2
   14448:	mov	r7, r3
   1444c:	ldr	r6, [sp, #48]	; 0x30
   14450:	ldr	r5, [r1]
   14454:	asrs	r4, r5, #1
   14458:	bmi	145b4 <close@plt+0x3650>
   1445c:	cmp	r5, #0
   14460:	blt	145c8 <close@plt+0x3664>
   14464:	mvn	r3, #-2147483648	; 0x80000000
   14468:	sub	r3, r3, r4
   1446c:	cmp	r5, r3
   14470:	movle	r3, #0
   14474:	movgt	r3, #1
   14478:	cmp	r3, #0
   1447c:	addeq	r4, r4, r5
   14480:	mvnne	r4, #-2147483648	; 0x80000000
   14484:	mvn	r8, r7
   14488:	lsr	r8, r8, #31
   1448c:	cmp	r7, r4
   14490:	movge	r3, #0
   14494:	andlt	r3, r8, #1
   14498:	cmp	r3, #0
   1449c:	movne	r4, r7
   144a0:	cmp	r6, #0
   144a4:	blt	145dc <close@plt+0x3678>
   144a8:	cmp	r6, #0
   144ac:	beq	14688 <close@plt+0x3724>
   144b0:	cmp	r4, #0
   144b4:	blt	14638 <close@plt+0x36d4>
   144b8:	mov	r1, r6
   144bc:	mvn	r0, #-2147483648	; 0x80000000
   144c0:	bl	14ff8 <close@plt+0x4094>
   144c4:	cmp	r0, r4
   144c8:	movge	r0, #0
   144cc:	movlt	r0, #1
   144d0:	cmp	r0, #0
   144d4:	mvnne	r3, #-2147483648	; 0x80000000
   144d8:	strne	r3, [sp, #4]
   144dc:	beq	14670 <close@plt+0x370c>
   144e0:	mov	r1, r6
   144e4:	ldr	r0, [sp, #4]
   144e8:	bl	14ff8 <close@plt+0x4094>
   144ec:	mov	r4, r0
   144f0:	mov	r1, r6
   144f4:	ldr	r0, [sp, #4]
   144f8:	bl	15218 <close@plt+0x42b4>
   144fc:	ldr	r3, [sp, #4]
   14500:	sub	r1, r3, r1
   14504:	cmp	fp, #0
   14508:	moveq	r3, #0
   1450c:	streq	r3, [sl]
   14510:	sub	r3, r4, r5
   14514:	cmp	r3, r9
   14518:	bge	145a0 <close@plt+0x363c>
   1451c:	cmp	r9, #0
   14520:	blt	14694 <close@plt+0x3730>
   14524:	cmp	r5, #0
   14528:	blt	146a8 <close@plt+0x3744>
   1452c:	mvn	r3, #-2147483648	; 0x80000000
   14530:	sub	r3, r3, r9
   14534:	cmp	r5, r3
   14538:	movle	r3, #0
   1453c:	movgt	r3, #1
   14540:	cmp	r3, #0
   14544:	bne	14750 <close@plt+0x37ec>
   14548:	add	r5, r5, r9
   1454c:	mov	r4, r5
   14550:	cmp	r7, r5
   14554:	movge	r7, #0
   14558:	andlt	r7, r8, #1
   1455c:	cmp	r7, #0
   14560:	bne	14750 <close@plt+0x37ec>
   14564:	cmp	r6, #0
   14568:	blt	146bc <close@plt+0x3758>
   1456c:	cmp	r6, #0
   14570:	beq	1459c <close@plt+0x3638>
   14574:	cmp	r5, #0
   14578:	blt	14718 <close@plt+0x37b4>
   1457c:	mov	r1, r6
   14580:	mvn	r0, #-2147483648	; 0x80000000
   14584:	bl	14ff8 <close@plt+0x4094>
   14588:	cmp	r5, r0
   1458c:	movle	r0, #0
   14590:	movgt	r0, #1
   14594:	cmp	r0, #0
   14598:	bne	14750 <close@plt+0x37ec>
   1459c:	mul	r1, r5, r6
   145a0:	mov	r0, fp
   145a4:	bl	142bc <close@plt+0x3358>
   145a8:	str	r4, [sl]
   145ac:	add	sp, sp, #12
   145b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145b4:	rsb	r3, r4, #-2147483648	; 0x80000000
   145b8:	cmp	r5, r3
   145bc:	movge	r3, #0
   145c0:	movlt	r3, #1
   145c4:	b	14478 <close@plt+0x3514>
   145c8:	rsb	r3, r5, #-2147483648	; 0x80000000
   145cc:	cmp	r4, r3
   145d0:	movge	r3, #0
   145d4:	movlt	r3, #1
   145d8:	b	14478 <close@plt+0x3514>
   145dc:	cmp	r4, #0
   145e0:	blt	14608 <close@plt+0x36a4>
   145e4:	cmn	r6, #1
   145e8:	beq	14624 <close@plt+0x36c0>
   145ec:	mov	r1, r6
   145f0:	mov	r0, #-2147483648	; 0x80000000
   145f4:	bl	14ff8 <close@plt+0x4094>
   145f8:	cmp	r0, r4
   145fc:	movge	r0, #0
   14600:	movlt	r0, #1
   14604:	b	144d0 <close@plt+0x356c>
   14608:	mov	r1, r6
   1460c:	mvn	r0, #-2147483648	; 0x80000000
   14610:	bl	14ff8 <close@plt+0x4094>
   14614:	cmp	r0, r4
   14618:	movle	r0, #0
   1461c:	movgt	r0, #1
   14620:	b	144d0 <close@plt+0x356c>
   14624:	add	r0, r4, #-2147483648	; 0x80000000
   14628:	cmp	r0, #0
   1462c:	movle	r0, #0
   14630:	movgt	r0, #1
   14634:	b	144d0 <close@plt+0x356c>
   14638:	cmn	r4, #1
   1463c:	beq	1465c <close@plt+0x36f8>
   14640:	mov	r1, r4
   14644:	mov	r0, #-2147483648	; 0x80000000
   14648:	bl	14ff8 <close@plt+0x4094>
   1464c:	cmp	r6, r0
   14650:	movle	r0, #0
   14654:	movgt	r0, #1
   14658:	b	144d0 <close@plt+0x356c>
   1465c:	add	r0, r6, #-2147483648	; 0x80000000
   14660:	cmp	r0, #0
   14664:	movle	r0, #0
   14668:	movgt	r0, #1
   1466c:	b	144d0 <close@plt+0x356c>
   14670:	mul	r1, r6, r4
   14674:	cmp	r1, #63	; 0x3f
   14678:	movle	r3, #64	; 0x40
   1467c:	strle	r3, [sp, #4]
   14680:	bgt	14504 <close@plt+0x35a0>
   14684:	b	144e0 <close@plt+0x357c>
   14688:	mov	r3, #64	; 0x40
   1468c:	str	r3, [sp, #4]
   14690:	b	144e0 <close@plt+0x357c>
   14694:	rsb	r3, r9, #-2147483648	; 0x80000000
   14698:	cmp	r5, r3
   1469c:	movge	r3, #0
   146a0:	movlt	r3, #1
   146a4:	b	14540 <close@plt+0x35dc>
   146a8:	rsb	r3, r5, #-2147483648	; 0x80000000
   146ac:	cmp	r9, r3
   146b0:	movge	r3, #0
   146b4:	movlt	r3, #1
   146b8:	b	14540 <close@plt+0x35dc>
   146bc:	cmp	r5, #0
   146c0:	blt	146e8 <close@plt+0x3784>
   146c4:	cmn	r6, #1
   146c8:	beq	14704 <close@plt+0x37a0>
   146cc:	mov	r1, r6
   146d0:	mov	r0, #-2147483648	; 0x80000000
   146d4:	bl	14ff8 <close@plt+0x4094>
   146d8:	cmp	r5, r0
   146dc:	movle	r0, #0
   146e0:	movgt	r0, #1
   146e4:	b	14594 <close@plt+0x3630>
   146e8:	mov	r1, r6
   146ec:	mvn	r0, #-2147483648	; 0x80000000
   146f0:	bl	14ff8 <close@plt+0x4094>
   146f4:	cmp	r5, r0
   146f8:	movge	r0, #0
   146fc:	movlt	r0, #1
   14700:	b	14594 <close@plt+0x3630>
   14704:	add	r0, r5, #-2147483648	; 0x80000000
   14708:	cmp	r0, #0
   1470c:	movle	r0, #0
   14710:	movgt	r0, #1
   14714:	b	14594 <close@plt+0x3630>
   14718:	cmn	r5, #1
   1471c:	beq	1473c <close@plt+0x37d8>
   14720:	mov	r1, r5
   14724:	mov	r0, #-2147483648	; 0x80000000
   14728:	bl	14ff8 <close@plt+0x4094>
   1472c:	cmp	r6, r0
   14730:	movle	r0, #0
   14734:	movgt	r0, #1
   14738:	b	14594 <close@plt+0x3630>
   1473c:	add	r0, r6, #-2147483648	; 0x80000000
   14740:	cmp	r0, #0
   14744:	movle	r0, #0
   14748:	movgt	r0, #1
   1474c:	b	14594 <close@plt+0x3630>
   14750:	bl	1482c <close@plt+0x38c8>
   14754:	push	{r4, lr}
   14758:	bl	1486c <close@plt+0x3908>
   1475c:	cmp	r0, #0
   14760:	popne	{r4, pc}
   14764:	bl	1482c <close@plt+0x38c8>
   14768:	push	{r4, lr}
   1476c:	mov	r1, #1
   14770:	bl	14754 <close@plt+0x37f0>
   14774:	pop	{r4, pc}
   14778:	push	{r4, lr}
   1477c:	bl	1486c <close@plt+0x3908>
   14780:	cmp	r0, #0
   14784:	popne	{r4, pc}
   14788:	bl	1482c <close@plt+0x38c8>
   1478c:	push	{r4, lr}
   14790:	mov	r1, #1
   14794:	bl	14778 <close@plt+0x3814>
   14798:	pop	{r4, pc}
   1479c:	push	{r4, r5, r6, lr}
   147a0:	mov	r5, r0
   147a4:	mov	r4, r1
   147a8:	mov	r0, r1
   147ac:	bl	14288 <close@plt+0x3324>
   147b0:	mov	r2, r4
   147b4:	mov	r1, r5
   147b8:	bl	10d60 <memcpy@plt>
   147bc:	pop	{r4, r5, r6, pc}
   147c0:	push	{r4, r5, r6, lr}
   147c4:	mov	r5, r0
   147c8:	mov	r4, r1
   147cc:	mov	r0, r1
   147d0:	bl	1429c <close@plt+0x3338>
   147d4:	mov	r2, r4
   147d8:	mov	r1, r5
   147dc:	bl	10d60 <memcpy@plt>
   147e0:	pop	{r4, r5, r6, pc}
   147e4:	push	{r4, r5, r6, lr}
   147e8:	mov	r5, r0
   147ec:	mov	r4, r1
   147f0:	add	r0, r1, #1
   147f4:	bl	1429c <close@plt+0x3338>
   147f8:	mov	r2, #0
   147fc:	strb	r2, [r0, r4]
   14800:	mov	r2, r4
   14804:	mov	r1, r5
   14808:	bl	10d60 <memcpy@plt>
   1480c:	pop	{r4, r5, r6, pc}
   14810:	push	{r4, lr}
   14814:	mov	r4, r0
   14818:	bl	10e74 <strlen@plt>
   1481c:	add	r1, r0, #1
   14820:	mov	r0, r4
   14824:	bl	1479c <close@plt+0x3838>
   14828:	pop	{r4, pc}
   1482c:	push	{r4, lr}
   14830:	ldr	r3, [pc, #40]	; 14860 <close@plt+0x38fc>
   14834:	ldr	r4, [r3]
   14838:	mov	r2, #5
   1483c:	ldr	r1, [pc, #32]	; 14864 <close@plt+0x3900>
   14840:	mov	r0, #0
   14844:	bl	10da8 <dcgettext@plt>
   14848:	mov	r3, r0
   1484c:	ldr	r2, [pc, #20]	; 14868 <close@plt+0x3904>
   14850:	mov	r1, #0
   14854:	mov	r0, r4
   14858:	bl	10e14 <error@plt>
   1485c:	bl	10f58 <abort@plt>
   14860:	strdeq	r6, [r2], -r8
   14864:	andeq	r5, r1, r0, lsr #29
   14868:	andeq	r5, r1, r4, ror #20
   1486c:	push	{r4, lr}
   14870:	mov	r2, r0
   14874:	mov	r3, r1
   14878:	cmp	r1, #0
   1487c:	cmpne	r0, #0
   14880:	moveq	r3, #1
   14884:	moveq	r2, r3
   14888:	umull	r0, r1, r2, r3
   1488c:	cmp	r0, #0
   14890:	cmpge	r1, #0
   14894:	bne	148a8 <close@plt+0x3944>
   14898:	mov	r1, r3
   1489c:	mov	r0, r2
   148a0:	bl	10cf4 <calloc@plt>
   148a4:	pop	{r4, pc}
   148a8:	bl	10e80 <__errno_location@plt>
   148ac:	mov	r3, #12
   148b0:	str	r3, [r0]
   148b4:	mov	r0, #0
   148b8:	pop	{r4, pc}
   148bc:	push	{r4, lr}
   148c0:	cmp	r0, #0
   148c4:	moveq	r0, #1
   148c8:	cmp	r0, #0
   148cc:	blt	148d8 <close@plt+0x3974>
   148d0:	bl	10e20 <malloc@plt>
   148d4:	pop	{r4, pc}
   148d8:	bl	10e80 <__errno_location@plt>
   148dc:	mov	r3, #12
   148e0:	str	r3, [r0]
   148e4:	mov	r0, #0
   148e8:	pop	{r4, pc}
   148ec:	push	{r4, lr}
   148f0:	cmp	r0, #0
   148f4:	beq	14910 <close@plt+0x39ac>
   148f8:	cmp	r1, #0
   148fc:	beq	1491c <close@plt+0x39b8>
   14900:	cmp	r1, #0
   14904:	blt	14928 <close@plt+0x39c4>
   14908:	bl	10db4 <realloc@plt>
   1490c:	pop	{r4, pc}
   14910:	mov	r0, r1
   14914:	bl	148bc <close@plt+0x3958>
   14918:	pop	{r4, pc}
   1491c:	bl	1208c <close@plt+0x1128>
   14920:	mov	r0, #0
   14924:	pop	{r4, pc}
   14928:	bl	10e80 <__errno_location@plt>
   1492c:	mov	r3, #12
   14930:	str	r3, [r0]
   14934:	mov	r0, #0
   14938:	pop	{r4, pc}
   1493c:	push	{r4, r5, r6, lr}
   14940:	mov	r5, r0
   14944:	bl	10dfc <__fpending@plt>
   14948:	mov	r6, r0
   1494c:	ldr	r4, [r5]
   14950:	and	r4, r4, #32
   14954:	mov	r0, r5
   14958:	bl	11ee4 <close@plt+0xf80>
   1495c:	cmp	r4, #0
   14960:	bne	14988 <close@plt+0x3a24>
   14964:	cmp	r0, #0
   14968:	popeq	{r4, r5, r6, pc}
   1496c:	cmp	r6, #0
   14970:	bne	149a4 <close@plt+0x3a40>
   14974:	bl	10e80 <__errno_location@plt>
   14978:	ldr	r0, [r0]
   1497c:	subs	r0, r0, #9
   14980:	mvnne	r0, #0
   14984:	pop	{r4, r5, r6, pc}
   14988:	cmp	r0, #0
   1498c:	bne	149ac <close@plt+0x3a48>
   14990:	bl	10e80 <__errno_location@plt>
   14994:	mov	r3, #0
   14998:	str	r3, [r0]
   1499c:	mvn	r0, #0
   149a0:	pop	{r4, r5, r6, pc}
   149a4:	mvn	r0, #0
   149a8:	pop	{r4, r5, r6, pc}
   149ac:	mvn	r0, #0
   149b0:	pop	{r4, r5, r6, pc}
   149b4:	push	{r1, r2, r3}
   149b8:	push	{r4, r5, r6, lr}
   149bc:	sub	sp, sp, #12
   149c0:	mov	r5, r0
   149c4:	ldr	r1, [sp, #28]
   149c8:	add	r3, sp, #32
   149cc:	str	r3, [sp, #4]
   149d0:	cmp	r1, #0
   149d4:	beq	14a1c <close@plt+0x3ab8>
   149d8:	ldr	r3, [pc, #540]	; 14bfc <close@plt+0x3c98>
   149dc:	cmp	r1, r3
   149e0:	beq	14a4c <close@plt+0x3ae8>
   149e4:	cmp	r1, #11
   149e8:	beq	14bec <close@plt+0x3c88>
   149ec:	bgt	14b78 <close@plt+0x3c14>
   149f0:	cmp	r1, #3
   149f4:	beq	14bec <close@plt+0x3c88>
   149f8:	ble	14b38 <close@plt+0x3bd4>
   149fc:	cmp	r1, #8
   14a00:	beq	14b58 <close@plt+0x3bf4>
   14a04:	ble	14b50 <close@plt+0x3bec>
   14a08:	cmp	r1, #9
   14a0c:	beq	14bec <close@plt+0x3c88>
   14a10:	cmp	r1, #10
   14a14:	bne	14bb0 <close@plt+0x3c4c>
   14a18:	b	14b58 <close@plt+0x3bf4>
   14a1c:	ldr	r3, [sp, #4]
   14a20:	add	r2, r3, #4
   14a24:	str	r2, [sp, #4]
   14a28:	ldr	r2, [r3]
   14a2c:	mov	r1, #0
   14a30:	bl	10eec <fcntl64@plt>
   14a34:	mov	r4, r0
   14a38:	mov	r0, r4
   14a3c:	add	sp, sp, #12
   14a40:	pop	{r4, r5, r6, lr}
   14a44:	add	sp, sp, #12
   14a48:	bx	lr
   14a4c:	ldr	r3, [sp, #4]
   14a50:	add	r2, r3, #4
   14a54:	str	r2, [sp, #4]
   14a58:	ldr	r6, [r3]
   14a5c:	ldr	r3, [pc, #412]	; 14c00 <close@plt+0x3c9c>
   14a60:	ldr	r3, [r3]
   14a64:	cmp	r3, #0
   14a68:	blt	14ac8 <close@plt+0x3b64>
   14a6c:	mov	r2, r6
   14a70:	ldr	r1, [pc, #388]	; 14bfc <close@plt+0x3c98>
   14a74:	bl	10eec <fcntl64@plt>
   14a78:	subs	r4, r0, #0
   14a7c:	blt	14a90 <close@plt+0x3b2c>
   14a80:	mov	r2, #1
   14a84:	ldr	r3, [pc, #372]	; 14c00 <close@plt+0x3c9c>
   14a88:	str	r2, [r3]
   14a8c:	b	14a38 <close@plt+0x3ad4>
   14a90:	bl	10e80 <__errno_location@plt>
   14a94:	ldr	r3, [r0]
   14a98:	cmp	r3, #22
   14a9c:	bne	14a80 <close@plt+0x3b1c>
   14aa0:	mov	r2, r6
   14aa4:	mov	r1, #0
   14aa8:	mov	r0, r5
   14aac:	bl	10eec <fcntl64@plt>
   14ab0:	subs	r4, r0, #0
   14ab4:	blt	14a38 <close@plt+0x3ad4>
   14ab8:	mvn	r2, #0
   14abc:	ldr	r3, [pc, #316]	; 14c00 <close@plt+0x3c9c>
   14ac0:	str	r2, [r3]
   14ac4:	b	14aec <close@plt+0x3b88>
   14ac8:	mov	r2, r6
   14acc:	mov	r1, #0
   14ad0:	bl	10eec <fcntl64@plt>
   14ad4:	subs	r4, r0, #0
   14ad8:	blt	14a38 <close@plt+0x3ad4>
   14adc:	ldr	r3, [pc, #284]	; 14c00 <close@plt+0x3c9c>
   14ae0:	ldr	r3, [r3]
   14ae4:	cmn	r3, #1
   14ae8:	bne	14a38 <close@plt+0x3ad4>
   14aec:	mov	r1, #1
   14af0:	mov	r0, r4
   14af4:	bl	10eec <fcntl64@plt>
   14af8:	subs	r2, r0, #0
   14afc:	blt	14b18 <close@plt+0x3bb4>
   14b00:	orr	r2, r2, #1
   14b04:	mov	r1, #2
   14b08:	mov	r0, r4
   14b0c:	bl	10eec <fcntl64@plt>
   14b10:	cmn	r0, #1
   14b14:	bne	14a38 <close@plt+0x3ad4>
   14b18:	bl	10e80 <__errno_location@plt>
   14b1c:	mov	r5, r0
   14b20:	ldr	r6, [r0]
   14b24:	mov	r0, r4
   14b28:	bl	10f64 <close@plt>
   14b2c:	str	r6, [r5]
   14b30:	mvn	r4, #0
   14b34:	b	14a38 <close@plt+0x3ad4>
   14b38:	cmp	r1, #1
   14b3c:	beq	14bec <close@plt+0x3c88>
   14b40:	bgt	14b58 <close@plt+0x3bf4>
   14b44:	cmp	r1, #0
   14b48:	bne	14bb0 <close@plt+0x3c4c>
   14b4c:	b	14b58 <close@plt+0x3bf4>
   14b50:	cmp	r1, #4
   14b54:	bne	14bb0 <close@plt+0x3c4c>
   14b58:	ldr	r3, [sp, #4]
   14b5c:	add	r2, r3, #4
   14b60:	str	r2, [sp, #4]
   14b64:	ldr	r2, [r3]
   14b68:	mov	r0, r5
   14b6c:	bl	10eec <fcntl64@plt>
   14b70:	mov	r4, r0
   14b74:	b	14a38 <close@plt+0x3ad4>
   14b78:	ldr	r3, [pc, #132]	; 14c04 <close@plt+0x3ca0>
   14b7c:	cmp	r1, r3
   14b80:	bgt	14bd0 <close@plt+0x3c6c>
   14b84:	sub	r3, r3, #1
   14b88:	cmp	r1, r3
   14b8c:	bge	14b58 <close@plt+0x3bf4>
   14b90:	sub	r3, r3, #5
   14b94:	cmp	r1, r3
   14b98:	beq	14bec <close@plt+0x3c88>
   14b9c:	add	r3, r3, #1
   14ba0:	cmp	r1, r3
   14ba4:	beq	14b58 <close@plt+0x3bf4>
   14ba8:	cmp	r1, #1024	; 0x400
   14bac:	beq	14b58 <close@plt+0x3bf4>
   14bb0:	ldr	r3, [sp, #4]
   14bb4:	add	r2, r3, #4
   14bb8:	str	r2, [sp, #4]
   14bbc:	ldr	r2, [r3]
   14bc0:	mov	r0, r5
   14bc4:	bl	10eec <fcntl64@plt>
   14bc8:	mov	r4, r0
   14bcc:	b	14a38 <close@plt+0x3ad4>
   14bd0:	ldr	r3, [pc, #48]	; 14c08 <close@plt+0x3ca4>
   14bd4:	cmp	r1, r3
   14bd8:	beq	14b58 <close@plt+0x3bf4>
   14bdc:	blt	14bec <close@plt+0x3c88>
   14be0:	add	r3, r3, #1
   14be4:	cmp	r1, r3
   14be8:	bne	14bb0 <close@plt+0x3c4c>
   14bec:	mov	r0, r5
   14bf0:	bl	10eec <fcntl64@plt>
   14bf4:	mov	r4, r0
   14bf8:	b	14a38 <close@plt+0x3ad4>
   14bfc:	andeq	r0, r0, r6, lsl #8
   14c00:			; <UNDEFINED> instruction: 0x000262b0
   14c04:	andeq	r0, r0, r7, lsl #8
   14c08:	andeq	r0, r0, r9, lsl #8
   14c0c:	push	{r4, lr}
   14c10:	mov	r0, #14
   14c14:	bl	10f1c <nl_langinfo@plt>
   14c18:	cmp	r0, #0
   14c1c:	beq	14c34 <close@plt+0x3cd0>
   14c20:	ldrb	r2, [r0]
   14c24:	ldr	r3, [pc, #16]	; 14c3c <close@plt+0x3cd8>
   14c28:	cmp	r2, #0
   14c2c:	moveq	r0, r3
   14c30:	pop	{r4, pc}
   14c34:	ldr	r0, [pc]	; 14c3c <close@plt+0x3cd8>
   14c38:	pop	{r4, pc}
   14c3c:			; <UNDEFINED> instruction: 0x00015eb4
   14c40:	push	{r4, r5, r6, r7, lr}
   14c44:	sub	sp, sp, #12
   14c48:	mov	r7, r1
   14c4c:	mov	r5, r2
   14c50:	subs	r6, r0, #0
   14c54:	addeq	r6, sp, #4
   14c58:	mov	r0, r6
   14c5c:	bl	10e08 <mbrtowc@plt>
   14c60:	mov	r4, r0
   14c64:	cmp	r5, #0
   14c68:	cmnne	r0, #3
   14c6c:	bhi	14c7c <close@plt+0x3d18>
   14c70:	mov	r0, r4
   14c74:	add	sp, sp, #12
   14c78:	pop	{r4, r5, r6, r7, pc}
   14c7c:	mov	r0, #0
   14c80:	bl	14ce4 <close@plt+0x3d80>
   14c84:	cmp	r0, #0
   14c88:	ldrbeq	r3, [r7]
   14c8c:	streq	r3, [r6]
   14c90:	moveq	r4, #1
   14c94:	b	14c70 <close@plt+0x3d0c>
   14c98:	push	{r4, r5, r6, lr}
   14c9c:	mov	r6, r0
   14ca0:	mov	r5, r1
   14ca4:	subs	r4, r2, #0
   14ca8:	beq	14cd4 <close@plt+0x3d70>
   14cac:	mov	r1, r4
   14cb0:	mvn	r0, #0
   14cb4:	bl	14dec <close@plt+0x3e88>
   14cb8:	cmp	r0, r5
   14cbc:	bcs	14cd4 <close@plt+0x3d70>
   14cc0:	bl	10e80 <__errno_location@plt>
   14cc4:	mov	r3, #12
   14cc8:	str	r3, [r0]
   14ccc:	mov	r0, #0
   14cd0:	pop	{r4, r5, r6, pc}
   14cd4:	mul	r1, r5, r4
   14cd8:	mov	r0, r6
   14cdc:	bl	148ec <close@plt+0x3988>
   14ce0:	pop	{r4, r5, r6, pc}
   14ce4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ce8:	sub	sp, sp, #268	; 0x10c
   14cec:	ldr	r2, [pc, #68]	; 14d38 <close@plt+0x3dd4>
   14cf0:	add	r1, sp, #4
   14cf4:	bl	14d44 <close@plt+0x3de0>
   14cf8:	cmp	r0, #0
   14cfc:	movne	r0, #0
   14d00:	bne	14d30 <close@plt+0x3dcc>
   14d04:	ldr	r1, [pc, #48]	; 14d3c <close@plt+0x3dd8>
   14d08:	add	r0, sp, #4
   14d0c:	bl	10d18 <strcmp@plt>
   14d10:	cmp	r0, #0
   14d14:	moveq	r0, #0
   14d18:	beq	14d30 <close@plt+0x3dcc>
   14d1c:	ldr	r1, [pc, #28]	; 14d40 <close@plt+0x3ddc>
   14d20:	add	r0, sp, #4
   14d24:	bl	10d18 <strcmp@plt>
   14d28:	adds	r0, r0, #0
   14d2c:	movne	r0, #1
   14d30:	add	sp, sp, #268	; 0x10c
   14d34:	pop	{pc}		; (ldr pc, [sp], #4)
   14d38:	andeq	r0, r0, r1, lsl #2
   14d3c:			; <UNDEFINED> instruction: 0x00015ebc
   14d40:	andeq	r5, r1, r0, asr #29
   14d44:	push	{r4, r5, r6, lr}
   14d48:	mov	r6, r1
   14d4c:	mov	r4, r2
   14d50:	mov	r1, #0
   14d54:	bl	10f04 <setlocale@plt>
   14d58:	subs	r5, r0, #0
   14d5c:	beq	14d80 <close@plt+0x3e1c>
   14d60:	mov	r0, r5
   14d64:	bl	10e74 <strlen@plt>
   14d68:	cmp	r4, r0
   14d6c:	bhi	14d98 <close@plt+0x3e34>
   14d70:	cmp	r4, #0
   14d74:	bne	14db0 <close@plt+0x3e4c>
   14d78:	mov	r0, #34	; 0x22
   14d7c:	pop	{r4, r5, r6, pc}
   14d80:	cmp	r4, #0
   14d84:	beq	14dd4 <close@plt+0x3e70>
   14d88:	mov	r3, #0
   14d8c:	strb	r3, [r6]
   14d90:	mov	r0, #22
   14d94:	pop	{r4, r5, r6, pc}
   14d98:	add	r2, r0, #1
   14d9c:	mov	r1, r5
   14da0:	mov	r0, r6
   14da4:	bl	10d60 <memcpy@plt>
   14da8:	mov	r0, #0
   14dac:	pop	{r4, r5, r6, pc}
   14db0:	sub	r4, r4, #1
   14db4:	mov	r2, r4
   14db8:	mov	r1, r5
   14dbc:	mov	r0, r6
   14dc0:	bl	10d60 <memcpy@plt>
   14dc4:	mov	r3, #0
   14dc8:	strb	r3, [r6, r4]
   14dcc:	mov	r0, #34	; 0x22
   14dd0:	pop	{r4, r5, r6, pc}
   14dd4:	mov	r0, #22
   14dd8:	pop	{r4, r5, r6, pc}
   14ddc:	push	{r4, lr}
   14de0:	mov	r1, #0
   14de4:	bl	10f04 <setlocale@plt>
   14de8:	pop	{r4, pc}
   14dec:	subs	r2, r1, #1
   14df0:	bxeq	lr
   14df4:	bcc	14fcc <close@plt+0x4068>
   14df8:	cmp	r0, r1
   14dfc:	bls	14fb0 <close@plt+0x404c>
   14e00:	tst	r1, r2
   14e04:	beq	14fbc <close@plt+0x4058>
   14e08:	clz	r3, r0
   14e0c:	clz	r2, r1
   14e10:	sub	r3, r2, r3
   14e14:	rsbs	r3, r3, #31
   14e18:	addne	r3, r3, r3, lsl #1
   14e1c:	mov	r2, #0
   14e20:	addne	pc, pc, r3, lsl #2
   14e24:	nop			; (mov r0, r0)
   14e28:	cmp	r0, r1, lsl #31
   14e2c:	adc	r2, r2, r2
   14e30:	subcs	r0, r0, r1, lsl #31
   14e34:	cmp	r0, r1, lsl #30
   14e38:	adc	r2, r2, r2
   14e3c:	subcs	r0, r0, r1, lsl #30
   14e40:	cmp	r0, r1, lsl #29
   14e44:	adc	r2, r2, r2
   14e48:	subcs	r0, r0, r1, lsl #29
   14e4c:	cmp	r0, r1, lsl #28
   14e50:	adc	r2, r2, r2
   14e54:	subcs	r0, r0, r1, lsl #28
   14e58:	cmp	r0, r1, lsl #27
   14e5c:	adc	r2, r2, r2
   14e60:	subcs	r0, r0, r1, lsl #27
   14e64:	cmp	r0, r1, lsl #26
   14e68:	adc	r2, r2, r2
   14e6c:	subcs	r0, r0, r1, lsl #26
   14e70:	cmp	r0, r1, lsl #25
   14e74:	adc	r2, r2, r2
   14e78:	subcs	r0, r0, r1, lsl #25
   14e7c:	cmp	r0, r1, lsl #24
   14e80:	adc	r2, r2, r2
   14e84:	subcs	r0, r0, r1, lsl #24
   14e88:	cmp	r0, r1, lsl #23
   14e8c:	adc	r2, r2, r2
   14e90:	subcs	r0, r0, r1, lsl #23
   14e94:	cmp	r0, r1, lsl #22
   14e98:	adc	r2, r2, r2
   14e9c:	subcs	r0, r0, r1, lsl #22
   14ea0:	cmp	r0, r1, lsl #21
   14ea4:	adc	r2, r2, r2
   14ea8:	subcs	r0, r0, r1, lsl #21
   14eac:	cmp	r0, r1, lsl #20
   14eb0:	adc	r2, r2, r2
   14eb4:	subcs	r0, r0, r1, lsl #20
   14eb8:	cmp	r0, r1, lsl #19
   14ebc:	adc	r2, r2, r2
   14ec0:	subcs	r0, r0, r1, lsl #19
   14ec4:	cmp	r0, r1, lsl #18
   14ec8:	adc	r2, r2, r2
   14ecc:	subcs	r0, r0, r1, lsl #18
   14ed0:	cmp	r0, r1, lsl #17
   14ed4:	adc	r2, r2, r2
   14ed8:	subcs	r0, r0, r1, lsl #17
   14edc:	cmp	r0, r1, lsl #16
   14ee0:	adc	r2, r2, r2
   14ee4:	subcs	r0, r0, r1, lsl #16
   14ee8:	cmp	r0, r1, lsl #15
   14eec:	adc	r2, r2, r2
   14ef0:	subcs	r0, r0, r1, lsl #15
   14ef4:	cmp	r0, r1, lsl #14
   14ef8:	adc	r2, r2, r2
   14efc:	subcs	r0, r0, r1, lsl #14
   14f00:	cmp	r0, r1, lsl #13
   14f04:	adc	r2, r2, r2
   14f08:	subcs	r0, r0, r1, lsl #13
   14f0c:	cmp	r0, r1, lsl #12
   14f10:	adc	r2, r2, r2
   14f14:	subcs	r0, r0, r1, lsl #12
   14f18:	cmp	r0, r1, lsl #11
   14f1c:	adc	r2, r2, r2
   14f20:	subcs	r0, r0, r1, lsl #11
   14f24:	cmp	r0, r1, lsl #10
   14f28:	adc	r2, r2, r2
   14f2c:	subcs	r0, r0, r1, lsl #10
   14f30:	cmp	r0, r1, lsl #9
   14f34:	adc	r2, r2, r2
   14f38:	subcs	r0, r0, r1, lsl #9
   14f3c:	cmp	r0, r1, lsl #8
   14f40:	adc	r2, r2, r2
   14f44:	subcs	r0, r0, r1, lsl #8
   14f48:	cmp	r0, r1, lsl #7
   14f4c:	adc	r2, r2, r2
   14f50:	subcs	r0, r0, r1, lsl #7
   14f54:	cmp	r0, r1, lsl #6
   14f58:	adc	r2, r2, r2
   14f5c:	subcs	r0, r0, r1, lsl #6
   14f60:	cmp	r0, r1, lsl #5
   14f64:	adc	r2, r2, r2
   14f68:	subcs	r0, r0, r1, lsl #5
   14f6c:	cmp	r0, r1, lsl #4
   14f70:	adc	r2, r2, r2
   14f74:	subcs	r0, r0, r1, lsl #4
   14f78:	cmp	r0, r1, lsl #3
   14f7c:	adc	r2, r2, r2
   14f80:	subcs	r0, r0, r1, lsl #3
   14f84:	cmp	r0, r1, lsl #2
   14f88:	adc	r2, r2, r2
   14f8c:	subcs	r0, r0, r1, lsl #2
   14f90:	cmp	r0, r1, lsl #1
   14f94:	adc	r2, r2, r2
   14f98:	subcs	r0, r0, r1, lsl #1
   14f9c:	cmp	r0, r1
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1
   14fa8:	mov	r0, r2
   14fac:	bx	lr
   14fb0:	moveq	r0, #1
   14fb4:	movne	r0, #0
   14fb8:	bx	lr
   14fbc:	clz	r2, r1
   14fc0:	rsb	r2, r2, #31
   14fc4:	lsr	r0, r0, r2
   14fc8:	bx	lr
   14fcc:	cmp	r0, #0
   14fd0:	mvnne	r0, #0
   14fd4:	b	15238 <close@plt+0x42d4>
   14fd8:	cmp	r1, #0
   14fdc:	beq	14fcc <close@plt+0x4068>
   14fe0:	push	{r0, r1, lr}
   14fe4:	bl	14dec <close@plt+0x3e88>
   14fe8:	pop	{r1, r2, lr}
   14fec:	mul	r3, r2, r0
   14ff0:	sub	r1, r1, r3
   14ff4:	bx	lr
   14ff8:	cmp	r1, #0
   14ffc:	beq	15208 <close@plt+0x42a4>
   15000:	eor	ip, r0, r1
   15004:	rsbmi	r1, r1, #0
   15008:	subs	r2, r1, #1
   1500c:	beq	151d4 <close@plt+0x4270>
   15010:	movs	r3, r0
   15014:	rsbmi	r3, r0, #0
   15018:	cmp	r3, r1
   1501c:	bls	151e0 <close@plt+0x427c>
   15020:	tst	r1, r2
   15024:	beq	151f0 <close@plt+0x428c>
   15028:	clz	r2, r3
   1502c:	clz	r0, r1
   15030:	sub	r2, r0, r2
   15034:	rsbs	r2, r2, #31
   15038:	addne	r2, r2, r2, lsl #1
   1503c:	mov	r0, #0
   15040:	addne	pc, pc, r2, lsl #2
   15044:	nop			; (mov r0, r0)
   15048:	cmp	r3, r1, lsl #31
   1504c:	adc	r0, r0, r0
   15050:	subcs	r3, r3, r1, lsl #31
   15054:	cmp	r3, r1, lsl #30
   15058:	adc	r0, r0, r0
   1505c:	subcs	r3, r3, r1, lsl #30
   15060:	cmp	r3, r1, lsl #29
   15064:	adc	r0, r0, r0
   15068:	subcs	r3, r3, r1, lsl #29
   1506c:	cmp	r3, r1, lsl #28
   15070:	adc	r0, r0, r0
   15074:	subcs	r3, r3, r1, lsl #28
   15078:	cmp	r3, r1, lsl #27
   1507c:	adc	r0, r0, r0
   15080:	subcs	r3, r3, r1, lsl #27
   15084:	cmp	r3, r1, lsl #26
   15088:	adc	r0, r0, r0
   1508c:	subcs	r3, r3, r1, lsl #26
   15090:	cmp	r3, r1, lsl #25
   15094:	adc	r0, r0, r0
   15098:	subcs	r3, r3, r1, lsl #25
   1509c:	cmp	r3, r1, lsl #24
   150a0:	adc	r0, r0, r0
   150a4:	subcs	r3, r3, r1, lsl #24
   150a8:	cmp	r3, r1, lsl #23
   150ac:	adc	r0, r0, r0
   150b0:	subcs	r3, r3, r1, lsl #23
   150b4:	cmp	r3, r1, lsl #22
   150b8:	adc	r0, r0, r0
   150bc:	subcs	r3, r3, r1, lsl #22
   150c0:	cmp	r3, r1, lsl #21
   150c4:	adc	r0, r0, r0
   150c8:	subcs	r3, r3, r1, lsl #21
   150cc:	cmp	r3, r1, lsl #20
   150d0:	adc	r0, r0, r0
   150d4:	subcs	r3, r3, r1, lsl #20
   150d8:	cmp	r3, r1, lsl #19
   150dc:	adc	r0, r0, r0
   150e0:	subcs	r3, r3, r1, lsl #19
   150e4:	cmp	r3, r1, lsl #18
   150e8:	adc	r0, r0, r0
   150ec:	subcs	r3, r3, r1, lsl #18
   150f0:	cmp	r3, r1, lsl #17
   150f4:	adc	r0, r0, r0
   150f8:	subcs	r3, r3, r1, lsl #17
   150fc:	cmp	r3, r1, lsl #16
   15100:	adc	r0, r0, r0
   15104:	subcs	r3, r3, r1, lsl #16
   15108:	cmp	r3, r1, lsl #15
   1510c:	adc	r0, r0, r0
   15110:	subcs	r3, r3, r1, lsl #15
   15114:	cmp	r3, r1, lsl #14
   15118:	adc	r0, r0, r0
   1511c:	subcs	r3, r3, r1, lsl #14
   15120:	cmp	r3, r1, lsl #13
   15124:	adc	r0, r0, r0
   15128:	subcs	r3, r3, r1, lsl #13
   1512c:	cmp	r3, r1, lsl #12
   15130:	adc	r0, r0, r0
   15134:	subcs	r3, r3, r1, lsl #12
   15138:	cmp	r3, r1, lsl #11
   1513c:	adc	r0, r0, r0
   15140:	subcs	r3, r3, r1, lsl #11
   15144:	cmp	r3, r1, lsl #10
   15148:	adc	r0, r0, r0
   1514c:	subcs	r3, r3, r1, lsl #10
   15150:	cmp	r3, r1, lsl #9
   15154:	adc	r0, r0, r0
   15158:	subcs	r3, r3, r1, lsl #9
   1515c:	cmp	r3, r1, lsl #8
   15160:	adc	r0, r0, r0
   15164:	subcs	r3, r3, r1, lsl #8
   15168:	cmp	r3, r1, lsl #7
   1516c:	adc	r0, r0, r0
   15170:	subcs	r3, r3, r1, lsl #7
   15174:	cmp	r3, r1, lsl #6
   15178:	adc	r0, r0, r0
   1517c:	subcs	r3, r3, r1, lsl #6
   15180:	cmp	r3, r1, lsl #5
   15184:	adc	r0, r0, r0
   15188:	subcs	r3, r3, r1, lsl #5
   1518c:	cmp	r3, r1, lsl #4
   15190:	adc	r0, r0, r0
   15194:	subcs	r3, r3, r1, lsl #4
   15198:	cmp	r3, r1, lsl #3
   1519c:	adc	r0, r0, r0
   151a0:	subcs	r3, r3, r1, lsl #3
   151a4:	cmp	r3, r1, lsl #2
   151a8:	adc	r0, r0, r0
   151ac:	subcs	r3, r3, r1, lsl #2
   151b0:	cmp	r3, r1, lsl #1
   151b4:	adc	r0, r0, r0
   151b8:	subcs	r3, r3, r1, lsl #1
   151bc:	cmp	r3, r1
   151c0:	adc	r0, r0, r0
   151c4:	subcs	r3, r3, r1
   151c8:	cmp	ip, #0
   151cc:	rsbmi	r0, r0, #0
   151d0:	bx	lr
   151d4:	teq	ip, r0
   151d8:	rsbmi	r0, r0, #0
   151dc:	bx	lr
   151e0:	movcc	r0, #0
   151e4:	asreq	r0, ip, #31
   151e8:	orreq	r0, r0, #1
   151ec:	bx	lr
   151f0:	clz	r2, r1
   151f4:	rsb	r2, r2, #31
   151f8:	cmp	ip, #0
   151fc:	lsr	r0, r3, r2
   15200:	rsbmi	r0, r0, #0
   15204:	bx	lr
   15208:	cmp	r0, #0
   1520c:	mvngt	r0, #-2147483648	; 0x80000000
   15210:	movlt	r0, #-2147483648	; 0x80000000
   15214:	b	15238 <close@plt+0x42d4>
   15218:	cmp	r1, #0
   1521c:	beq	15208 <close@plt+0x42a4>
   15220:	push	{r0, r1, lr}
   15224:	bl	15000 <close@plt+0x409c>
   15228:	pop	{r1, r2, lr}
   1522c:	mul	r3, r2, r0
   15230:	sub	r1, r1, r3
   15234:	bx	lr
   15238:	push	{r1, lr}
   1523c:	mov	r0, #8
   15240:	bl	10d0c <raise@plt>
   15244:	pop	{r1, pc}
   15248:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1524c:	mov	r7, r0
   15250:	ldr	r6, [pc, #72]	; 152a0 <close@plt+0x433c>
   15254:	ldr	r5, [pc, #72]	; 152a4 <close@plt+0x4340>
   15258:	add	r6, pc, r6
   1525c:	add	r5, pc, r5
   15260:	sub	r6, r6, r5
   15264:	mov	r8, r1
   15268:	mov	r9, r2
   1526c:	bl	10cc8 <fdopen@plt-0x20>
   15270:	asrs	r6, r6, #2
   15274:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15278:	mov	r4, #0
   1527c:	add	r4, r4, #1
   15280:	ldr	r3, [r5], #4
   15284:	mov	r2, r9
   15288:	mov	r1, r8
   1528c:	mov	r0, r7
   15290:	blx	r3
   15294:	cmp	r6, r4
   15298:	bne	1527c <close@plt+0x4318>
   1529c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152a0:			; <UNDEFINED> instruction: 0x00010cb0
   152a4:	andeq	r0, r1, r8, lsr #25
   152a8:	bx	lr
   152ac:	ldr	r3, [pc, #12]	; 152c0 <close@plt+0x435c>
   152b0:	mov	r1, #0
   152b4:	add	r3, pc, r3
   152b8:	ldr	r2, [r3]
   152bc:	b	10e8c <__cxa_atexit@plt>
   152c0:	andeq	r0, r1, r0, lsr lr

Disassembly of section .fini:

000152c4 <.fini>:
   152c4:	push	{r3, lr}
   152c8:	pop	{r3, pc}
