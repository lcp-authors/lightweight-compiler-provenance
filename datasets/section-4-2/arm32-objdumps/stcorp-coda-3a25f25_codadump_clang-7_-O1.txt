
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000125fc <.init>:
   125fc:	push	{r3, lr}
   12600:	bl	12b08 <_start@@Base+0x3c>
   12604:	pop	{r3, pc}

Disassembly of section .plt:

00012608 <coda_cursor_get_byte_size@plt-0x14>:
   12608:	push	{lr}		; (str lr, [sp, #-4]!)
   1260c:	ldr	lr, [pc, #4]	; 12618 <coda_cursor_get_byte_size@plt-0x4>
   12610:	add	lr, pc, lr
   12614:	ldr	pc, [lr, #8]!
   12618:	andeq	r9, r1, r8, ror #19

0001261c <coda_cursor_get_byte_size@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #102400	; 0x19000
   12624:	ldr	pc, [ip, #2536]!	; 0x9e8

00012628 <coda_type_get_special_type_name@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #102400	; 0x19000
   12630:	ldr	pc, [ip, #2528]!	; 0x9e0

00012634 <coda_set_option_use_fast_size_expressions@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #102400	; 0x19000
   1263c:	ldr	pc, [ip, #2520]!	; 0x9d8

00012640 <raise@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #102400	; 0x19000
   12648:	ldr	pc, [ip, #2512]!	; 0x9d0

0001264c <coda_get_option_bypass_special_types@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #102400	; 0x19000
   12654:	ldr	pc, [ip, #2504]!	; 0x9c8

00012658 <coda_set_option_perform_boundary_checks@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #102400	; 0x19000
   12660:	ldr	pc, [ip, #2496]!	; 0x9c0

00012664 <strcmp@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #102400	; 0x19000
   1266c:	ldr	pc, [ip, #2488]!	; 0x9b8

00012670 <coda_type_get_record_field_hidden_status@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #102400	; 0x19000
   12678:	ldr	pc, [ip, #2480]!	; 0x9b0

0001267c <printf@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #102400	; 0x19000
   12684:	ldr	pc, [ip, #2472]!	; 0x9a8

00012688 <coda_cursor_get_record_field_available_status@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #102400	; 0x19000
   12690:	ldr	pc, [ip, #2464]!	; 0x9a0

00012694 <fopen@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #102400	; 0x19000
   1269c:	ldr	pc, [ip, #2456]!	; 0x998

000126a0 <coda_set_error@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #102400	; 0x19000
   126a8:	ldr	pc, [ip, #2448]!	; 0x990

000126ac <coda_open@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #102400	; 0x19000
   126b4:	ldr	pc, [ip, #2440]!	; 0x988

000126b8 <fflush@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #102400	; 0x19000
   126c0:	ldr	pc, [ip, #2432]!	; 0x980

000126c4 <coda_time_double_to_string@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #102400	; 0x19000
   126cc:	ldr	pc, [ip, #2424]!	; 0x978

000126d0 <coda_cursor_get_num_elements@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #102400	; 0x19000
   126d8:	ldr	pc, [ip, #2416]!	; 0x970

000126dc <coda_str64u@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #102400	; 0x19000
   126e4:	ldr	pc, [ip, #2408]!	; 0x968

000126e8 <free@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #102400	; 0x19000
   126f0:	ldr	pc, [ip, #2400]!	; 0x960

000126f4 <coda_set_option_use_mmap@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #102400	; 0x19000
   126fc:	ldr	pc, [ip, #2392]!	; 0x958

00012700 <coda_set_definition_path_conditional@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #102400	; 0x19000
   12708:	ldr	pc, [ip, #2384]!	; 0x950

0001270c <coda_cursor_read_uint32@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #102400	; 0x19000
   12714:	ldr	pc, [ip, #2376]!	; 0x948

00012718 <coda_set_option_bypass_special_types@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #102400	; 0x19000
   12720:	ldr	pc, [ip, #2368]!	; 0x940

00012724 <coda_type_get_record_field_type@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #102400	; 0x19000
   1272c:	ldr	pc, [ip, #2360]!	; 0x938

00012730 <coda_cursor_get_type@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #102400	; 0x19000
   12738:	ldr	pc, [ip, #2352]!	; 0x930

0001273c <memcpy@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #102400	; 0x19000
   12744:	ldr	pc, [ip, #2344]!	; 0x928

00012748 <coda_isInf@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #102400	; 0x19000
   12750:	ldr	pc, [ip, #2336]!	; 0x920

00012754 <coda_type_get_bit_size@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #102400	; 0x19000
   1275c:	ldr	pc, [ip, #2328]!	; 0x918

00012760 <coda_type_get_record_field_available_status@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #102400	; 0x19000
   12768:	ldr	pc, [ip, #2320]!	; 0x910

0001276c <coda_cursor_has_attributes@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #102400	; 0x19000
   12774:	ldr	pc, [ip, #2312]!	; 0x908

00012778 <coda_cursor_get_type_class@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #102400	; 0x19000
   12780:	ldr	pc, [ip, #2304]!	; 0x900

00012784 <coda_set_definition_path@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #102400	; 0x19000
   1278c:	ldr	pc, [ip, #2296]!	; 0x8f8

00012790 <coda_get_product_format@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #102400	; 0x19000
   12798:	ldr	pc, [ip, #2288]!	; 0x8f0

0001279c <coda_type_get_unit@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #102400	; 0x19000
   127a4:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a8 <coda_type_get_description@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #102400	; 0x19000
   127b0:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b4 <coda_cursor_get_special_type@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #102400	; 0x19000
   127bc:	ldr	pc, [ip, #2264]!	; 0x8d8

000127c0 <coda_cursor_goto_first_array_element@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #102400	; 0x19000
   127c8:	ldr	pc, [ip, #2256]!	; 0x8d0

000127cc <fwrite@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #102400	; 0x19000
   127d4:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d8 <coda_cursor_set_product@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #102400	; 0x19000
   127e0:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e4 <coda_cursor_goto_first_record_field@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #102400	; 0x19000
   127ec:	ldr	pc, [ip, #2232]!	; 0x8b8

000127f0 <coda_cursor_goto_record_field_by_index@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #102400	; 0x19000
   127f8:	ldr	pc, [ip, #2224]!	; 0x8b0

000127fc <coda_done@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #102400	; 0x19000
   12804:	ldr	pc, [ip, #2216]!	; 0x8a8

00012808 <puts@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #102400	; 0x19000
   12810:	ldr	pc, [ip, #2208]!	; 0x8a0

00012814 <coda_cursor_get_read_type@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #102400	; 0x19000
   1281c:	ldr	pc, [ip, #2200]!	; 0x898

00012820 <malloc@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #102400	; 0x19000
   12828:	ldr	pc, [ip, #2192]!	; 0x890

0001282c <__libc_start_main@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #102400	; 0x19000
   12834:	ldr	pc, [ip, #2184]!	; 0x888

00012838 <__gmon_start__@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #102400	; 0x19000
   12840:	ldr	pc, [ip, #2176]!	; 0x880

00012844 <coda_cursor_read_string@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #102400	; 0x19000
   1284c:	ldr	pc, [ip, #2168]!	; 0x878

00012850 <coda_cursor_goto_parent@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #102400	; 0x19000
   12858:	ldr	pc, [ip, #2160]!	; 0x870

0001285c <coda_type_get_num_record_fields@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #102400	; 0x19000
   12864:	ldr	pc, [ip, #2152]!	; 0x868

00012868 <exit@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #102400	; 0x19000
   12870:	ldr	pc, [ip, #2144]!	; 0x860

00012874 <coda_type_get_read_type@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #102400	; 0x19000
   1287c:	ldr	pc, [ip, #2136]!	; 0x858

00012880 <coda_cursor_get_string_length@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #102400	; 0x19000
   12888:	ldr	pc, [ip, #2128]!	; 0x850

0001288c <coda_cursor_read_uint64@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #102400	; 0x19000
   12894:	ldr	pc, [ip, #2120]!	; 0x848

00012898 <coda_cursor_read_double@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #102400	; 0x19000
   128a0:	ldr	pc, [ip, #2112]!	; 0x840

000128a4 <coda_isNaN@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #102400	; 0x19000
   128ac:	ldr	pc, [ip, #2104]!	; 0x838

000128b0 <fprintf@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #102400	; 0x19000
   128b8:	ldr	pc, [ip, #2096]!	; 0x830

000128bc <coda_cursor_goto_next_array_element@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #102400	; 0x19000
   128c4:	ldr	pc, [ip, #2088]!	; 0x828

000128c8 <coda_open_as@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #102400	; 0x19000
   128d0:	ldr	pc, [ip, #2080]!	; 0x820

000128d4 <coda_init@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #102400	; 0x19000
   128dc:	ldr	pc, [ip, #2072]!	; 0x818

000128e0 <coda_set_option_perform_conversions@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #102400	; 0x19000
   128e8:	ldr	pc, [ip, #2064]!	; 0x810

000128ec <coda_cursor_goto_attributes@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #102400	; 0x19000
   128f4:	ldr	pc, [ip, #2056]!	; 0x808

000128f8 <coda_cursor_read_char@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #102400	; 0x19000
   12900:	ldr	pc, [ip, #2048]!	; 0x800

00012904 <memset@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #102400	; 0x19000
   1290c:	ldr	pc, [ip, #2040]!	; 0x7f8

00012910 <putchar@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #102400	; 0x19000
   12918:	ldr	pc, [ip, #2032]!	; 0x7f0

0001291c <strncpy@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #102400	; 0x19000
   12924:	ldr	pc, [ip, #2024]!	; 0x7e8

00012928 <coda_type_get_special_type@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #102400	; 0x19000
   12930:	ldr	pc, [ip, #2016]!	; 0x7e0

00012934 <coda_type_get_record_union_status@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #102400	; 0x19000
   1293c:	ldr	pc, [ip, #2008]!	; 0x7d8

00012940 <coda_cursor_read_complex_double_split@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #102400	; 0x19000
   12948:	ldr	pc, [ip, #2000]!	; 0x7d0

0001294c <coda_type_get_array_base_type@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #102400	; 0x19000
   12954:	ldr	pc, [ip, #1992]!	; 0x7c8

00012958 <fclose@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #102400	; 0x19000
   12960:	ldr	pc, [ip, #1984]!	; 0x7c0

00012964 <coda_type_get_string_length@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #102400	; 0x19000
   1296c:	ldr	pc, [ip, #1976]!	; 0x7b8

00012970 <coda_type_get_native_type_name@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #102400	; 0x19000
   12978:	ldr	pc, [ip, #1968]!	; 0x7b0

0001297c <coda_cursor_get_array_dim@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #102400	; 0x19000
   12984:	ldr	pc, [ip, #1960]!	; 0x7a8

00012988 <coda_cursor_has_ascii_content@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #102400	; 0x19000
   12990:	ldr	pc, [ip, #1952]!	; 0x7a0

00012994 <coda_close@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #102400	; 0x19000
   1299c:	ldr	pc, [ip, #1944]!	; 0x798

000129a0 <coda_cursor_read_int64@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #102400	; 0x19000
   129a8:	ldr	pc, [ip, #1936]!	; 0x790

000129ac <vfprintf@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #102400	; 0x19000
   129b4:	ldr	pc, [ip, #1928]!	; 0x788

000129b8 <coda_cursor_goto@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #102400	; 0x19000
   129c0:	ldr	pc, [ip, #1920]!	; 0x780

000129c4 <coda_type_get_record_field_index_from_name@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #102400	; 0x19000
   129cc:	ldr	pc, [ip, #1912]!	; 0x778

000129d0 <coda_cursor_read_complex_double_pair@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #102400	; 0x19000
   129d8:	ldr	pc, [ip, #1904]!	; 0x770

000129dc <coda_cursor_goto_next_record_field@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #102400	; 0x19000
   129e4:	ldr	pc, [ip, #1896]!	; 0x768

000129e8 <fputc@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #102400	; 0x19000
   129f0:	ldr	pc, [ip, #1888]!	; 0x760

000129f4 <coda_type_get_array_dim@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #102400	; 0x19000
   129fc:	ldr	pc, [ip, #1880]!	; 0x758

00012a00 <coda_cursor_get_bit_size@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #102400	; 0x19000
   12a08:	ldr	pc, [ip, #1872]!	; 0x750

00012a0c <atoi@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #102400	; 0x19000
   12a14:	ldr	pc, [ip, #1864]!	; 0x748

00012a18 <coda_errno_to_string@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #102400	; 0x19000
   12a20:	ldr	pc, [ip, #1856]!	; 0x740

00012a24 <coda_cursor_use_base_type_of_special_type@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #102400	; 0x19000
   12a2c:	ldr	pc, [ip, #1848]!	; 0x738

00012a30 <coda_cursor_get_available_union_field_index@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #102400	; 0x19000
   12a38:	ldr	pc, [ip, #1840]!	; 0x730

00012a3c <coda_cursor_read_int32@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #102400	; 0x19000
   12a44:	ldr	pc, [ip, #1832]!	; 0x728

00012a48 <coda_cursor_get_file_bit_offset@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #102400	; 0x19000
   12a50:	ldr	pc, [ip, #1824]!	; 0x720

00012a54 <coda_get_libcoda_version@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #102400	; 0x19000
   12a5c:	ldr	pc, [ip, #1816]!	; 0x718

00012a60 <coda_get_errno@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #102400	; 0x19000
   12a68:	ldr	pc, [ip, #1808]!	; 0x710

00012a6c <coda_type_get_special_base_type@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #102400	; 0x19000
   12a74:	ldr	pc, [ip, #1800]!	; 0x708

00012a78 <coda_type_get_record_field_name@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #102400	; 0x19000
   12a80:	ldr	pc, [ip, #1792]!	; 0x700

00012a84 <fputs@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #102400	; 0x19000
   12a8c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a90 <abort@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #102400	; 0x19000
   12a98:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a9c <coda_cursor_read_bits@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #102400	; 0x19000
   12aa4:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa8 <coda_str64@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #102400	; 0x19000
   12ab0:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab4 <__assert_fail@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #102400	; 0x19000
   12abc:	ldr	pc, [ip, #1752]!	; 0x6d8

00012ac0 <coda_type_get_class@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #102400	; 0x19000
   12ac8:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012acc <_start@@Base>:
   12acc:	mov	fp, #0
   12ad0:	mov	lr, #0
   12ad4:	pop	{r1}		; (ldr r1, [sp], #4)
   12ad8:	mov	r2, sp
   12adc:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae0:	push	{r0}		; (str r0, [sp, #-4]!)
   12ae4:	ldr	ip, [pc, #16]	; 12afc <_start@@Base+0x30>
   12ae8:	push	{ip}		; (str ip, [sp, #-4]!)
   12aec:	ldr	r0, [pc, #12]	; 12b00 <_start@@Base+0x34>
   12af0:	ldr	r3, [pc, #12]	; 12b04 <_start@@Base+0x38>
   12af4:	bl	1282c <__libc_start_main@plt>
   12af8:	bl	12a90 <abort@plt>
   12afc:	andeq	r9, r1, r4, asr ip
   12b00:	andeq	r7, r1, ip, lsl #30
   12b04:	strdeq	r9, [r1], -r4
   12b08:	ldr	r3, [pc, #20]	; 12b24 <_start@@Base+0x58>
   12b0c:	ldr	r2, [pc, #20]	; 12b28 <_start@@Base+0x5c>
   12b10:	add	r3, pc, r3
   12b14:	ldr	r2, [r3, r2]
   12b18:	cmp	r2, #0
   12b1c:	bxeq	lr
   12b20:	b	12838 <__gmon_start__@plt>
   12b24:	andeq	r9, r1, r8, ror #9
   12b28:	muleq	r0, ip, r1
   12b2c:	ldr	r0, [pc, #24]	; 12b4c <_start@@Base+0x80>
   12b30:	ldr	r3, [pc, #24]	; 12b50 <_start@@Base+0x84>
   12b34:	cmp	r3, r0
   12b38:	bxeq	lr
   12b3c:	ldr	r3, [pc, #16]	; 12b54 <_start@@Base+0x88>
   12b40:	cmp	r3, #0
   12b44:	bxeq	lr
   12b48:	bx	r3
   12b4c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b50:			; <UNDEFINED> instruction: 0x0002c1b0
   12b54:	andeq	r0, r0, r0
   12b58:	ldr	r0, [pc, #36]	; 12b84 <_start@@Base+0xb8>
   12b5c:	ldr	r1, [pc, #36]	; 12b88 <_start@@Base+0xbc>
   12b60:	sub	r1, r1, r0
   12b64:	asr	r1, r1, #2
   12b68:	add	r1, r1, r1, lsr #31
   12b6c:	asrs	r1, r1, #1
   12b70:	bxeq	lr
   12b74:	ldr	r3, [pc, #16]	; 12b8c <_start@@Base+0xc0>
   12b78:	cmp	r3, #0
   12b7c:	bxeq	lr
   12b80:	bx	r3
   12b84:			; <UNDEFINED> instruction: 0x0002c1b0
   12b88:			; <UNDEFINED> instruction: 0x0002c1b0
   12b8c:	andeq	r0, r0, r0
   12b90:	push	{r4, lr}
   12b94:	ldr	r4, [pc, #24]	; 12bb4 <_start@@Base+0xe8>
   12b98:	ldrb	r3, [r4]
   12b9c:	cmp	r3, #0
   12ba0:	popne	{r4, pc}
   12ba4:	bl	12b2c <_start@@Base+0x60>
   12ba8:	mov	r3, #1
   12bac:	strb	r3, [r4]
   12bb0:	pop	{r4, pc}
   12bb4:			; <UNDEFINED> instruction: 0x0002c1b8
   12bb8:	b	12b58 <_start@@Base+0x8c>

00012bbc <export_data_element_to_ascii@@Base>:
   12bbc:	push	{r4, sl, fp, lr}
   12bc0:	add	fp, sp, #8
   12bc4:	movw	r0, #49596	; 0xc1bc
   12bc8:	movt	r0, #2
   12bcc:	ldrb	r1, [r0]
   12bd0:	cmp	r1, #0
   12bd4:	beq	12bf0 <export_data_element_to_ascii@@Base+0x34>
   12bd8:	movw	r0, #53392	; 0xd090
   12bdc:	movt	r0, #2
   12be0:	ldr	r1, [r0]
   12be4:	mov	r0, #10
   12be8:	bl	129e8 <fputc@plt>
   12bec:	b	12bf8 <export_data_element_to_ascii@@Base+0x3c>
   12bf0:	mov	r1, #1
   12bf4:	strb	r1, [r0]
   12bf8:	movw	r0, #53792	; 0xd220
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	cmp	r0, #0
   12c08:	beq	12c30 <export_data_element_to_ascii@@Base+0x74>
   12c0c:	movw	r4, #53392	; 0xd090
   12c10:	movt	r4, #2
   12c14:	ldr	r0, [r4]
   12c18:	mov	r1, #2
   12c1c:	mov	r2, #0
   12c20:	bl	1676c <print_full_field_name@@Base>
   12c24:	ldr	r1, [r4]
   12c28:	mov	r0, #10
   12c2c:	bl	129e8 <fputc@plt>
   12c30:	movw	r0, #53424	; 0xd0b0
   12c34:	movt	r0, #2
   12c38:	ldr	r1, [r0]
   12c3c:	cmp	r1, #1
   12c40:	blt	12c58 <export_data_element_to_ascii@@Base+0x9c>
   12c44:	add	r0, r0, r1, lsl #3
   12c48:	ldr	r1, [r0, #296]	; 0x128
   12c4c:	ldr	r0, [r0, #300]	; 0x12c
   12c50:	orrs	r0, r1, r0
   12c54:	popeq	{r4, sl, fp, pc}
   12c58:	movw	r0, #53392	; 0xd090
   12c5c:	movt	r0, #2
   12c60:	ldr	r0, [r0]
   12c64:	mov	r1, #0
   12c68:	mov	r2, #0
   12c6c:	mov	r3, #0
   12c70:	pop	{r4, sl, fp, lr}
   12c74:	b	12c78 <export_data_element_to_ascii@@Base+0xbc>
   12c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c7c:	add	fp, sp, #28
   12c80:	sub	sp, sp, #76	; 0x4c
   12c84:	str	r3, [sp, #32]
   12c88:	mov	sl, r2
   12c8c:	mov	r5, r1
   12c90:	str	r0, [sp, #36]	; 0x24
   12c94:	movw	r4, #49640	; 0xc1e8
   12c98:	movt	r4, #2
   12c9c:	add	r0, r4, r1, lsl #2
   12ca0:	ldr	r0, [r0, #8]
   12ca4:	sub	r1, fp, #32
   12ca8:	bl	12ac0 <coda_type_get_class@plt>
   12cac:	cmp	r0, #0
   12cb0:	beq	12cb8 <export_data_element_to_ascii@@Base+0xfc>
   12cb4:	bl	17ec8 <handle_coda_error@@Base>
   12cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cbc:	cmp	r0, #0
   12cc0:	beq	12dac <export_data_element_to_ascii@@Base+0x1f0>
   12cc4:	cmp	r0, #1
   12cc8:	bne	12e18 <export_data_element_to_ascii@@Base+0x25c>
   12ccc:	add	r0, sl, sl, lsl #2
   12cd0:	add	r8, r4, r0, lsl #4
   12cd4:	ldr	r1, [r8, #800]	; 0x320
   12cd8:	cmp	sl, #0
   12cdc:	moveq	r0, #0
   12ce0:	streq	r0, [r8, #844]	; 0x34c
   12ce4:	mov	r2, r8
   12ce8:	ldr	r0, [r2, #804]!	; 0x324
   12cec:	str	r2, [sp, #12]
   12cf0:	add	r3, r0, r1
   12cf4:	movw	r2, #53424	; 0xd0b0
   12cf8:	movt	r2, #2
   12cfc:	ldr	r7, [r2, #104]	; 0x68
   12d00:	str	r3, [sp, #20]
   12d04:	str	r7, [sp, #16]
   12d08:	cmp	r7, r3
   12d0c:	blt	12d2c <export_data_element_to_ascii@@Base+0x170>
   12d10:	ldr	r3, [r4, #3360]	; 0xd20
   12d14:	sub	r3, r3, #1
   12d18:	cmp	r3, sl
   12d1c:	ldrgt	r3, [r8, #840]	; 0x348
   12d20:	ldrgt	r7, [r8, #844]	; 0x34c
   12d24:	mulgt	r3, r3, r7
   12d28:	strgt	r3, [r8, #924]	; 0x39c
   12d2c:	cmp	r0, #1
   12d30:	blt	12e2c <export_data_element_to_ascii@@Base+0x270>
   12d34:	mov	lr, r5
   12d38:	add	r1, r2, r1, lsl #2
   12d3c:	add	r2, r8, #848	; 0x350
   12d40:	add	r3, r8, #844	; 0x34c
   12d44:	mov	r9, #1
   12d48:	mov	ip, #0
   12d4c:	add	r6, sp, #40	; 0x28
   12d50:	mov	r4, #0
   12d54:	add	r5, r1, r4
   12d58:	ldr	r7, [r5, #72]	; 0x48
   12d5c:	cmp	r7, #0
   12d60:	beq	12d74 <export_data_element_to_ascii@@Base+0x1b8>
   12d64:	ldr	r7, [r5, #108]	; 0x6c
   12d68:	ldr	r5, [r3]
   12d6c:	add	r5, r7, r5, lsl #2
   12d70:	b	12d78 <export_data_element_to_ascii@@Base+0x1bc>
   12d74:	add	r5, r5, #4
   12d78:	ldr	r7, [r5]
   12d7c:	str	r7, [r6, r4]
   12d80:	str	ip, [r2, r4]
   12d84:	mul	r9, r7, r9
   12d88:	subs	r0, r0, #1
   12d8c:	add	r4, r4, #4
   12d90:	bne	12d54 <export_data_element_to_ascii@@Base+0x198>
   12d94:	cmp	r9, #0
   12d98:	movw	r4, #49640	; 0xc1e8
   12d9c:	movt	r4, #2
   12da0:	mov	r5, lr
   12da4:	bne	12e30 <export_data_element_to_ascii@@Base+0x274>
   12da8:	b	12e24 <export_data_element_to_ascii@@Base+0x268>
   12dac:	ldr	r0, [sp, #32]
   12db0:	add	r6, r4, r0, lsl #2
   12db4:	ldr	r1, [r6, #3492]!	; 0xda4
   12db8:	add	r4, r4, #144	; 0x90
   12dbc:	add	r2, sp, #40	; 0x28
   12dc0:	mov	r0, r4
   12dc4:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   12dc8:	cmp	r0, #0
   12dcc:	beq	12dd4 <export_data_element_to_ascii@@Base+0x218>
   12dd0:	bl	17ec8 <handle_coda_error@@Base>
   12dd4:	ldr	r0, [sp, #40]	; 0x28
   12dd8:	cmp	r0, #0
   12ddc:	beq	12e24 <export_data_element_to_ascii@@Base+0x268>
   12de0:	ldr	r1, [r6]
   12de4:	mov	r0, r4
   12de8:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   12dec:	cmp	r0, #0
   12df0:	beq	12df8 <export_data_element_to_ascii@@Base+0x23c>
   12df4:	bl	17ec8 <handle_coda_error@@Base>
   12df8:	add	r1, r5, #1
   12dfc:	ldr	r0, [sp, #32]
   12e00:	add	r3, r0, #1
   12e04:	ldr	r0, [sp, #36]	; 0x24
   12e08:	mov	r2, sl
   12e0c:	bl	12c78 <export_data_element_to_ascii@@Base+0xbc>
   12e10:	mov	r0, r4
   12e14:	b	12f50 <export_data_element_to_ascii@@Base+0x394>
   12e18:	ldr	r0, [sp, #36]	; 0x24
   12e1c:	mov	r1, r5
   12e20:	bl	12f5c <export_data_element_to_ascii@@Base+0x3a0>
   12e24:	sub	sp, fp, #28
   12e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e2c:	mov	r9, #1
   12e30:	str	sl, [sp, #8]
   12e34:	add	r0, r4, #144	; 0x90
   12e38:	str	r0, [sp, #24]
   12e3c:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   12e40:	cmp	r0, #0
   12e44:	beq	12e4c <export_data_element_to_ascii@@Base+0x290>
   12e48:	bl	17ec8 <handle_coda_error@@Base>
   12e4c:	cmp	r9, #1
   12e50:	blt	12f4c <export_data_element_to_ascii@@Base+0x390>
   12e54:	add	r0, r8, #924	; 0x39c
   12e58:	str	r0, [sp, #4]
   12e5c:	add	r0, sp, #40	; 0x28
   12e60:	sub	sl, r0, #4
   12e64:	sub	r0, r9, #1
   12e68:	str	r0, [sp, #28]
   12e6c:	ldr	r0, [sp, #8]
   12e70:	add	r7, r0, #1
   12e74:	add	r5, r5, #1
   12e78:	mov	r4, #0
   12e7c:	mov	r6, #0
   12e80:	ldr	r0, [sp, #36]	; 0x24
   12e84:	mov	r1, r5
   12e88:	mov	r2, r7
   12e8c:	ldr	r3, [sp, #32]
   12e90:	bl	12c78 <export_data_element_to_ascii@@Base+0xbc>
   12e94:	ldr	r0, [sp, #28]
   12e98:	cmp	r6, r0
   12e9c:	bge	12f40 <export_data_element_to_ascii@@Base+0x384>
   12ea0:	ldr	r0, [sp, #24]
   12ea4:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   12ea8:	cmp	r0, #0
   12eac:	beq	12eb4 <export_data_element_to_ascii@@Base+0x2f8>
   12eb0:	bl	17ec8 <handle_coda_error@@Base>
   12eb4:	ldr	r0, [sp, #20]
   12eb8:	ldr	r1, [sp, #16]
   12ebc:	cmp	r1, r0
   12ec0:	blt	12eec <export_data_element_to_ascii@@Base+0x330>
   12ec4:	movw	r0, #49640	; 0xc1e8
   12ec8:	movt	r0, #2
   12ecc:	ldr	r0, [r0, #3360]	; 0xd20
   12ed0:	sub	r0, r0, #1
   12ed4:	ldr	r1, [sp, #8]
   12ed8:	cmp	r0, r1
   12edc:	ldrgt	r1, [sp, #4]
   12ee0:	ldrgt	r0, [r1]
   12ee4:	addgt	r0, r0, #1
   12ee8:	strgt	r0, [r1]
   12eec:	movw	r0, #53408	; 0xd0a0
   12ef0:	movt	r0, #2
   12ef4:	ldr	r0, [r0]
   12ef8:	cmp	r0, #0
   12efc:	beq	12f40 <export_data_element_to_ascii@@Base+0x384>
   12f00:	ldr	r0, [sp, #12]
   12f04:	ldr	r0, [r0]
   12f08:	cmp	r0, #1
   12f0c:	blt	12f40 <export_data_element_to_ascii@@Base+0x384>
   12f10:	add	r1, r8, r0, lsl #2
   12f14:	ldr	r2, [r1, #844]	; 0x34c
   12f18:	add	r2, r2, #1
   12f1c:	str	r2, [r1, #844]	; 0x34c
   12f20:	ldr	r3, [sl, r0, lsl #2]
   12f24:	cmp	r2, r3
   12f28:	bne	12f40 <export_data_element_to_ascii@@Base+0x384>
   12f2c:	sub	r0, r0, #1
   12f30:	str	r4, [r1, #844]	; 0x34c
   12f34:	add	r1, r0, #1
   12f38:	cmp	r1, #1
   12f3c:	bgt	12f10 <export_data_element_to_ascii@@Base+0x354>
   12f40:	add	r6, r6, #1
   12f44:	cmp	r6, r9
   12f48:	bne	12e80 <export_data_element_to_ascii@@Base+0x2c4>
   12f4c:	ldr	r0, [sp, #24]
   12f50:	bl	12850 <coda_cursor_goto_parent@plt>
   12f54:	sub	sp, fp, #28
   12f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f60:	add	fp, sp, #28
   12f64:	sub	sp, sp, #68	; 0x44
   12f68:	mov	r5, r1
   12f6c:	mov	r4, r0
   12f70:	movw	r0, #53408	; 0xd0a0
   12f74:	movt	r0, #2
   12f78:	ldr	r0, [r0]
   12f7c:	cmp	r0, #0
   12f80:	movne	r0, r4
   12f84:	blne	135ac <export_data_element_to_ascii@@Base+0x9f0>
   12f88:	movw	r6, #49640	; 0xc1e8
   12f8c:	movt	r6, #2
   12f90:	add	r5, r6, r5, lsl #2
   12f94:	ldr	r0, [r5, #8]!
   12f98:	sub	r1, fp, #32
   12f9c:	bl	12ac0 <coda_type_get_class@plt>
   12fa0:	cmp	r0, #0
   12fa4:	beq	12fac <export_data_element_to_ascii@@Base+0x3f0>
   12fa8:	bl	17ec8 <handle_coda_error@@Base>
   12fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fb0:	sub	r1, r0, #2
   12fb4:	cmp	r1, #4
   12fb8:	bcs	1304c <export_data_element_to_ascii@@Base+0x490>
   12fbc:	ldr	r0, [r5]
   12fc0:	sub	r1, fp, #36	; 0x24
   12fc4:	bl	12874 <coda_type_get_read_type@plt>
   12fc8:	cmp	r0, #0
   12fcc:	beq	12fd4 <export_data_element_to_ascii@@Base+0x418>
   12fd0:	bl	17ec8 <handle_coda_error@@Base>
   12fd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12fd8:	add	r0, r0, #1
   12fdc:	cmp	r0, #13
   12fe0:	bhi	1354c <export_data_element_to_ascii@@Base+0x990>
   12fe4:	add	r1, pc, #0
   12fe8:	ldr	pc, [r1, r0, lsl #2]
   12fec:	andeq	r3, r1, ip, lsl #11
   12ff0:	andeq	r3, r1, r4, lsr #32
   12ff4:	andeq	r3, r1, r0, asr #2
   12ff8:	andeq	r3, r1, r4, lsr #32
   12ffc:	andeq	r3, r1, r0, asr #2
   13000:	andeq	r3, r1, r4, lsr #32
   13004:	andeq	r3, r1, r0, asr #2
   13008:	strdeq	r3, [r1], -r4
   1300c:	muleq	r1, r4, r4
   13010:	andeq	r3, r1, r0, ror r1
   13014:	andeq	r3, r1, r0, ror r1
   13018:	ldrdeq	r3, [r1], -r0
   1301c:	andeq	r3, r1, r4, lsr #4
   13020:	ldrdeq	r3, [r1], -r0
   13024:	add	r0, r6, #144	; 0x90
   13028:	add	r1, sp, #16
   1302c:	bl	12a3c <coda_cursor_read_int32@plt>
   13030:	cmp	r0, #0
   13034:	beq	1303c <export_data_element_to_ascii@@Base+0x480>
   13038:	bl	17ec8 <handle_coda_error@@Base>
   1303c:	ldr	r2, [sp, #16]
   13040:	movw	r1, #41848	; 0xa378
   13044:	movt	r1, #1
   13048:	b	13164 <export_data_element_to_ascii@@Base+0x5a8>
   1304c:	cmp	r0, #6
   13050:	beq	1307c <export_data_element_to_ascii@@Base+0x4c0>
   13054:	cmp	r0, #2
   13058:	bcs	1354c <export_data_element_to_ascii@@Base+0x990>
   1305c:	movw	r0, #40586	; 0x9e8a
   13060:	movt	r0, #1
   13064:	movw	r1, #40094	; 0x9c9e
   13068:	movt	r1, #1
   1306c:	movw	r3, #40214	; 0x9d16
   13070:	movt	r3, #1
   13074:	mov	r2, #368	; 0x170
   13078:	bl	12ab4 <__assert_fail@plt>
   1307c:	ldr	r0, [r5]
   13080:	sub	r1, fp, #36	; 0x24
   13084:	bl	12928 <coda_type_get_special_type@plt>
   13088:	cmp	r0, #0
   1308c:	beq	13094 <export_data_element_to_ascii@@Base+0x4d8>
   13090:	bl	17ec8 <handle_coda_error@@Base>
   13094:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13098:	sub	r1, r0, #1
   1309c:	cmp	r1, #2
   130a0:	bcs	131a8 <export_data_element_to_ascii@@Base+0x5ec>
   130a4:	add	r0, r6, #144	; 0x90
   130a8:	add	r1, sp, #48	; 0x30
   130ac:	bl	12898 <coda_cursor_read_double@plt>
   130b0:	cmp	r0, #0
   130b4:	beq	130bc <export_data_element_to_ascii@@Base+0x500>
   130b8:	bl	17ec8 <handle_coda_error@@Base>
   130bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   130c0:	cmp	r0, #2
   130c4:	bne	1350c <export_data_element_to_ascii@@Base+0x950>
   130c8:	movw	r0, #49628	; 0xc1dc
   130cc:	movt	r0, #2
   130d0:	ldr	r0, [r0]
   130d4:	cmp	r0, #0
   130d8:	beq	1350c <export_data_element_to_ascii@@Base+0x950>
   130dc:	vldr	d0, [sp, #48]	; 0x30
   130e0:	bl	128a4 <coda_isNaN@plt>
   130e4:	cmp	r0, #0
   130e8:	bne	130fc <export_data_element_to_ascii@@Base+0x540>
   130ec:	vldr	d0, [sp, #48]	; 0x30
   130f0:	bl	12748 <coda_isInf@plt>
   130f4:	cmp	r0, #0
   130f8:	beq	13568 <export_data_element_to_ascii@@Base+0x9ac>
   130fc:	mov	r0, #11
   13100:	movw	r1, #40296	; 0x9d68
   13104:	movt	r1, #1
   13108:	vld1.64	{d16-d17}, [r1], r0
   1310c:	vld1.8	{d18-d19}, [r1]
   13110:	add	r1, sp, #16
   13114:	vst1.64	{d16-d17}, [r1], r0
   13118:	vst1.8	{d18-d19}, [r1]
   1311c:	movw	r0, #53796	; 0xd224
   13120:	movt	r0, #2
   13124:	ldr	r0, [r0]
   13128:	cmp	r0, #0
   1312c:	beq	13560 <export_data_element_to_ascii@@Base+0x9a4>
   13130:	movw	r1, #42083	; 0xa463
   13134:	movt	r1, #1
   13138:	add	r2, sp, #16
   1313c:	b	13164 <export_data_element_to_ascii@@Base+0x5a8>
   13140:	add	r0, r6, #144	; 0x90
   13144:	add	r1, sp, #16
   13148:	bl	1270c <coda_cursor_read_uint32@plt>
   1314c:	cmp	r0, #0
   13150:	beq	13158 <export_data_element_to_ascii@@Base+0x59c>
   13154:	bl	17ec8 <handle_coda_error@@Base>
   13158:	ldr	r2, [sp, #16]
   1315c:	movw	r1, #40199	; 0x9d07
   13160:	movt	r1, #1
   13164:	mov	r0, r4
   13168:	bl	128b0 <fprintf@plt>
   1316c:	b	1354c <export_data_element_to_ascii@@Base+0x990>
   13170:	add	r0, r6, #144	; 0x90
   13174:	add	r1, sp, #16
   13178:	bl	12898 <coda_cursor_read_double@plt>
   1317c:	cmp	r0, #0
   13180:	beq	13188 <export_data_element_to_ascii@@Base+0x5cc>
   13184:	bl	17ec8 <handle_coda_error@@Base>
   13188:	vldr	d16, [sp, #16]
   1318c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13190:	vmov	r2, r3, d16
   13194:	cmp	r0, #8
   13198:	bne	13514 <export_data_element_to_ascii@@Base+0x958>
   1319c:	movw	r1, #40203	; 0x9d0b
   131a0:	movt	r1, #1
   131a4:	b	1351c <export_data_element_to_ascii@@Base+0x960>
   131a8:	cmp	r0, #3
   131ac:	bne	1354c <export_data_element_to_ascii@@Base+0x990>
   131b0:	add	r0, r6, #144	; 0x90
   131b4:	add	r1, sp, #16
   131b8:	bl	129d0 <coda_cursor_read_complex_double_pair@plt>
   131bc:	cmp	r0, #0
   131c0:	beq	131c8 <export_data_element_to_ascii@@Base+0x60c>
   131c4:	bl	17ec8 <handle_coda_error@@Base>
   131c8:	movw	r0, #53396	; 0xd094
   131cc:	movt	r0, #2
   131d0:	vldr	d16, [sp, #16]
   131d4:	vldr	d17, [sp, #24]
   131d8:	ldr	r0, [r0]
   131dc:	vstr	d17, [sp, #8]
   131e0:	str	r0, [sp]
   131e4:	vmov	r2, r3, d16
   131e8:	movw	r1, #40276	; 0x9d54
   131ec:	movt	r1, #1
   131f0:	b	1351c <export_data_element_to_ascii@@Base+0x960>
   131f4:	add	r0, r6, #144	; 0x90
   131f8:	add	r1, sp, #48	; 0x30
   131fc:	bl	129a0 <coda_cursor_read_int64@plt>
   13200:	cmp	r0, #0
   13204:	beq	1320c <export_data_element_to_ascii@@Base+0x650>
   13208:	bl	17ec8 <handle_coda_error@@Base>
   1320c:	ldr	r0, [sp, #48]	; 0x30
   13210:	ldr	r1, [sp, #52]	; 0x34
   13214:	add	r5, sp, #16
   13218:	mov	r2, r5
   1321c:	bl	12aa8 <coda_str64@plt>
   13220:	b	134c0 <export_data_element_to_ascii@@Base+0x904>
   13224:	add	r6, r6, #144	; 0x90
   13228:	add	r1, sp, #16
   1322c:	mov	r0, r6
   13230:	bl	12880 <coda_cursor_get_string_length@plt>
   13234:	cmp	r0, #0
   13238:	beq	13240 <export_data_element_to_ascii@@Base+0x684>
   1323c:	bl	17ec8 <handle_coda_error@@Base>
   13240:	ldr	r0, [sp, #16]
   13244:	add	r7, r0, #1
   13248:	mov	r0, r7
   1324c:	bl	12820 <malloc@plt>
   13250:	mov	r5, r0
   13254:	cmp	r0, #0
   13258:	bne	13284 <export_data_element_to_ascii@@Base+0x6c8>
   1325c:	mov	r0, #126	; 0x7e
   13260:	str	r0, [sp]
   13264:	movw	r1, #40041	; 0x9c69
   13268:	movt	r1, #1
   1326c:	movw	r3, #40094	; 0x9c9e
   13270:	movt	r3, #1
   13274:	mvn	r0, #0
   13278:	mov	r2, r7
   1327c:	bl	126a0 <coda_set_error@plt>
   13280:	bl	17ec8 <handle_coda_error@@Base>
   13284:	ldr	r0, [sp, #16]
   13288:	add	r2, r0, #1
   1328c:	mov	r0, r6
   13290:	mov	r1, r5
   13294:	bl	12844 <coda_cursor_read_string@plt>
   13298:	cmp	r0, #0
   1329c:	beq	132a4 <export_data_element_to_ascii@@Base+0x6e8>
   132a0:	bl	17ec8 <handle_coda_error@@Base>
   132a4:	movw	r0, #53796	; 0xd224
   132a8:	movt	r0, #2
   132ac:	ldr	r0, [r0]
   132b0:	cmp	r0, #0
   132b4:	beq	13528 <export_data_element_to_ascii@@Base+0x96c>
   132b8:	movw	r1, #42083	; 0xa463
   132bc:	movt	r1, #1
   132c0:	mov	r0, r4
   132c4:	mov	r2, r5
   132c8:	bl	128b0 <fprintf@plt>
   132cc:	b	13534 <export_data_element_to_ascii@@Base+0x978>
   132d0:	add	r8, r6, #144	; 0x90
   132d4:	add	r1, sp, #16
   132d8:	mov	r0, r8
   132dc:	bl	12a00 <coda_cursor_get_bit_size@plt>
   132e0:	cmp	r0, #0
   132e4:	beq	132ec <export_data_element_to_ascii@@Base+0x730>
   132e8:	bl	17ec8 <handle_coda_error@@Base>
   132ec:	ldr	r0, [sp, #16]
   132f0:	ldr	r1, [sp, #20]
   132f4:	lsr	r2, r0, #3
   132f8:	orr	r2, r2, r1, lsl #29
   132fc:	asr	r7, r1, #3
   13300:	adds	r5, r2, #1
   13304:	adc	r9, r7, #0
   13308:	ands	sl, r0, #7
   1330c:	moveq	r5, r2
   13310:	mov	r0, r5
   13314:	bl	12820 <malloc@plt>
   13318:	mov	r6, r0
   1331c:	cmp	sl, #0
   13320:	moveq	r9, r7
   13324:	cmp	r0, #0
   13328:	bne	13354 <export_data_element_to_ascii@@Base+0x798>
   1332c:	mov	r0, #163	; 0xa3
   13330:	str	r0, [sp]
   13334:	movw	r1, #40041	; 0x9c69
   13338:	movt	r1, #1
   1333c:	movw	r3, #40094	; 0x9c9e
   13340:	movt	r3, #1
   13344:	mvn	r0, #0
   13348:	mov	r2, r5
   1334c:	bl	126a0 <coda_set_error@plt>
   13350:	bl	17ec8 <handle_coda_error@@Base>
   13354:	ldr	r0, [sp, #16]
   13358:	ldr	r1, [sp, #20]
   1335c:	stm	sp, {r0, r1}
   13360:	mov	r0, r8
   13364:	mov	r1, r6
   13368:	mov	r2, #0
   1336c:	mov	r3, #0
   13370:	bl	12a9c <coda_cursor_read_bits@plt>
   13374:	cmp	r0, #0
   13378:	beq	13380 <export_data_element_to_ascii@@Base+0x7c4>
   1337c:	bl	17ec8 <handle_coda_error@@Base>
   13380:	subs	r0, r5, #1
   13384:	sbcs	r0, r9, #0
   13388:	blt	13488 <export_data_element_to_ascii@@Base+0x8cc>
   1338c:	mov	sl, #0
   13390:	movw	r7, #40184	; 0x9cf8
   13394:	movt	r7, #1
   13398:	movw	r8, #40187	; 0x9cfb
   1339c:	movt	r8, #1
   133a0:	b	133d8 <export_data_element_to_ascii@@Base+0x81c>
   133a4:	sub	r0, r2, #32
   133a8:	uxtb	r0, r0
   133ac:	cmp	r0, #94	; 0x5e
   133b0:	bhi	133c4 <export_data_element_to_ascii@@Base+0x808>
   133b4:	mov	r0, r2
   133b8:	mov	r1, r4
   133bc:	bl	129e8 <fputc@plt>
   133c0:	b	13478 <export_data_element_to_ascii@@Base+0x8bc>
   133c4:	mov	r0, r4
   133c8:	movw	r1, #40193	; 0x9d01
   133cc:	movt	r1, #1
   133d0:	bl	128b0 <fprintf@plt>
   133d4:	b	13478 <export_data_element_to_ascii@@Base+0x8bc>
   133d8:	ldrb	r2, [r6, sl]
   133dc:	sub	r0, r2, #7
   133e0:	cmp	r0, #6
   133e4:	bhi	13418 <export_data_element_to_ascii@@Base+0x85c>
   133e8:	add	r1, pc, #0
   133ec:	ldr	pc, [r1, r0, lsl #2]
   133f0:	andeq	r3, r1, ip, lsl #8
   133f4:	andeq	r3, r1, r0, asr r4
   133f8:	andeq	r3, r1, r8, lsr r4
   133fc:	andeq	r3, r1, r4, asr #8
   13400:	andeq	r3, r1, ip, lsr #8
   13404:	andeq	r3, r1, ip, asr r4
   13408:	andeq	r3, r1, r4, ror #8
   1340c:	movw	r0, #40169	; 0x9ce9
   13410:	movt	r0, #1
   13414:	b	13468 <export_data_element_to_ascii@@Base+0x8ac>
   13418:	cmp	r2, #92	; 0x5c
   1341c:	bne	133a4 <export_data_element_to_ascii@@Base+0x7e8>
   13420:	movw	r0, #40190	; 0x9cfe
   13424:	movt	r0, #1
   13428:	b	13468 <export_data_element_to_ascii@@Base+0x8ac>
   1342c:	movw	r0, #40181	; 0x9cf5
   13430:	movt	r0, #1
   13434:	b	13468 <export_data_element_to_ascii@@Base+0x8ac>
   13438:	movw	r0, #40175	; 0x9cef
   1343c:	movt	r0, #1
   13440:	b	13468 <export_data_element_to_ascii@@Base+0x8ac>
   13444:	movw	r0, #40178	; 0x9cf2
   13448:	movt	r0, #1
   1344c:	b	13468 <export_data_element_to_ascii@@Base+0x8ac>
   13450:	movw	r0, #40172	; 0x9cec
   13454:	movt	r0, #1
   13458:	b	13468 <export_data_element_to_ascii@@Base+0x8ac>
   1345c:	mov	r0, r7
   13460:	b	13468 <export_data_element_to_ascii@@Base+0x8ac>
   13464:	mov	r0, r8
   13468:	mov	r1, #2
   1346c:	mov	r2, #1
   13470:	mov	r3, r4
   13474:	bl	127cc <fwrite@plt>
   13478:	add	sl, sl, #1
   1347c:	subs	r0, sl, r5
   13480:	rscs	r0, r9, #0
   13484:	blt	133d8 <export_data_element_to_ascii@@Base+0x81c>
   13488:	mov	r0, r6
   1348c:	bl	126e8 <free@plt>
   13490:	b	1354c <export_data_element_to_ascii@@Base+0x990>
   13494:	add	r0, r6, #144	; 0x90
   13498:	add	r1, sp, #48	; 0x30
   1349c:	bl	1288c <coda_cursor_read_uint64@plt>
   134a0:	cmp	r0, #0
   134a4:	beq	134ac <export_data_element_to_ascii@@Base+0x8f0>
   134a8:	bl	17ec8 <handle_coda_error@@Base>
   134ac:	ldr	r0, [sp, #48]	; 0x30
   134b0:	ldr	r1, [sp, #52]	; 0x34
   134b4:	add	r5, sp, #16
   134b8:	mov	r2, r5
   134bc:	bl	126dc <coda_str64u@plt>
   134c0:	mov	r0, r5
   134c4:	mov	r1, r4
   134c8:	bl	12a84 <fputs@plt>
   134cc:	b	1354c <export_data_element_to_ascii@@Base+0x990>
   134d0:	add	r0, r6, #144	; 0x90
   134d4:	add	r1, sp, #16
   134d8:	bl	128f8 <coda_cursor_read_char@plt>
   134dc:	cmp	r0, #0
   134e0:	beq	134e8 <export_data_element_to_ascii@@Base+0x92c>
   134e4:	bl	17ec8 <handle_coda_error@@Base>
   134e8:	movw	r0, #53796	; 0xd224
   134ec:	movt	r0, #2
   134f0:	ldr	r0, [r0]
   134f4:	ldrb	r2, [sp, #16]
   134f8:	cmp	r0, #0
   134fc:	beq	13540 <export_data_element_to_ascii@@Base+0x984>
   13500:	movw	r1, #40036	; 0x9c64
   13504:	movt	r1, #1
   13508:	b	13164 <export_data_element_to_ascii@@Base+0x5a8>
   1350c:	vldr	d16, [sp, #48]	; 0x30
   13510:	vmov	r2, r3, d16
   13514:	movw	r1, #40208	; 0x9d10
   13518:	movt	r1, #1
   1351c:	mov	r0, r4
   13520:	bl	128b0 <fprintf@plt>
   13524:	b	1354c <export_data_element_to_ascii@@Base+0x990>
   13528:	mov	r0, r5
   1352c:	mov	r1, r4
   13530:	bl	12a84 <fputs@plt>
   13534:	mov	r0, r5
   13538:	bl	126e8 <free@plt>
   1353c:	b	1354c <export_data_element_to_ascii@@Base+0x990>
   13540:	mov	r0, r2
   13544:	mov	r1, r4
   13548:	bl	129e8 <fputc@plt>
   1354c:	mov	r0, #10
   13550:	mov	r1, r4
   13554:	bl	129e8 <fputc@plt>
   13558:	sub	sp, fp, #28
   1355c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13560:	add	r0, sp, #16
   13564:	b	134c4 <export_data_element_to_ascii@@Base+0x908>
   13568:	vldr	d0, [sp, #48]	; 0x30
   1356c:	movw	r0, #40249	; 0x9d39
   13570:	movt	r0, #1
   13574:	add	r1, sp, #16
   13578:	bl	126c4 <coda_time_double_to_string@plt>
   1357c:	cmp	r0, #0
   13580:	beq	1311c <export_data_element_to_ascii@@Base+0x560>
   13584:	bl	17ec8 <handle_coda_error@@Base>
   13588:	b	1311c <export_data_element_to_ascii@@Base+0x560>
   1358c:	movw	r0, #40586	; 0x9e8a
   13590:	movt	r0, #1
   13594:	movw	r1, #40094	; 0x9c9e
   13598:	movt	r1, #1
   1359c:	movw	r3, #40214	; 0x9d16
   135a0:	movt	r3, #1
   135a4:	movw	r2, #294	; 0x126
   135a8:	bl	12ab4 <__assert_fail@plt>
   135ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135b0:	add	fp, sp, #28
   135b4:	sub	sp, sp, #12
   135b8:	mov	r4, r0
   135bc:	movw	r8, #49640	; 0xc1e8
   135c0:	movt	r8, #2
   135c4:	ldr	r0, [r8, #136]	; 0x88
   135c8:	cmp	r0, #1
   135cc:	blt	13680 <export_data_element_to_ascii@@Base+0xac4>
   135d0:	mov	r5, #0
   135d4:	add	r9, sp, #8
   135d8:	movw	r7, #53396	; 0xd094
   135dc:	movt	r7, #2
   135e0:	movw	r6, #40283	; 0x9d5b
   135e4:	movt	r6, #1
   135e8:	mov	sl, #0
   135ec:	add	r0, r8, r5, lsl #2
   135f0:	ldr	r0, [r0, #8]
   135f4:	mov	r1, r9
   135f8:	bl	12ac0 <coda_type_get_class@plt>
   135fc:	cmp	r0, #0
   13600:	beq	13608 <export_data_element_to_ascii@@Base+0xa4c>
   13604:	bl	17ec8 <handle_coda_error@@Base>
   13608:	ldr	r0, [sp, #8]
   1360c:	cmp	r0, #1
   13610:	bne	13670 <export_data_element_to_ascii@@Base+0xab4>
   13614:	str	sl, [sp, #4]
   13618:	add	r0, sl, sl, lsl #2
   1361c:	add	r0, r8, r0, lsl #4
   13620:	mov	r8, r0
   13624:	ldr	r1, [r8, #804]!	; 0x324
   13628:	cmp	r1, #1
   1362c:	blt	1365c <export_data_element_to_ascii@@Base+0xaa0>
   13630:	add	r9, r0, #848	; 0x350
   13634:	mov	sl, #0
   13638:	ldr	r2, [r9, sl, lsl #2]
   1363c:	ldr	r3, [r7]
   13640:	mov	r0, r4
   13644:	mov	r1, r6
   13648:	bl	128b0 <fprintf@plt>
   1364c:	add	sl, sl, #1
   13650:	ldr	r0, [r8]
   13654:	cmp	sl, r0
   13658:	blt	13638 <export_data_element_to_ascii@@Base+0xa7c>
   1365c:	ldr	sl, [sp, #4]
   13660:	add	sl, sl, #1
   13664:	movw	r8, #49640	; 0xc1e8
   13668:	movt	r8, #2
   1366c:	add	r9, sp, #8
   13670:	add	r5, r5, #1
   13674:	ldr	r0, [r8, #136]	; 0x88
   13678:	cmp	r5, r0
   1367c:	blt	135ec <export_data_element_to_ascii@@Base+0xa30>
   13680:	sub	sp, fp, #28
   13684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013688 <print_debug_data@@Base>:
   13688:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1368c:	add	fp, sp, #24
   13690:	sub	sp, sp, #536	; 0x218
   13694:	mov	r4, r2
   13698:	mov	r5, r1
   1369c:	mov	r6, r0
   136a0:	movw	r7, #49640	; 0xc1e8
   136a4:	movt	r7, #2
   136a8:	ldr	r0, [r7]
   136ac:	sub	r1, fp, #28
   136b0:	cmp	r6, #0
   136b4:	beq	136d8 <print_debug_data@@Base+0x50>
   136b8:	str	r1, [sp]
   136bc:	mov	r1, r6
   136c0:	mov	r2, r5
   136c4:	mov	r3, r4
   136c8:	bl	128c8 <coda_open_as@plt>
   136cc:	cmp	r0, #0
   136d0:	bne	136e4 <print_debug_data@@Base+0x5c>
   136d4:	b	13740 <print_debug_data@@Base+0xb8>
   136d8:	bl	126ac <coda_open@plt>
   136dc:	cmp	r0, #0
   136e0:	beq	13740 <print_debug_data@@Base+0xb8>
   136e4:	bl	12a60 <coda_get_errno@plt>
   136e8:	ldr	r0, [r0]
   136ec:	cmn	r0, #21
   136f0:	bne	1373c <print_debug_data@@Base+0xb4>
   136f4:	mov	r0, #0
   136f8:	bl	126f4 <coda_set_option_use_mmap@plt>
   136fc:	ldr	r0, [r7]
   13700:	sub	r1, fp, #28
   13704:	cmp	r6, #0
   13708:	beq	13724 <print_debug_data@@Base+0x9c>
   1370c:	str	r1, [sp]
   13710:	mov	r1, r6
   13714:	mov	r2, r5
   13718:	mov	r3, r4
   1371c:	bl	128c8 <coda_open_as@plt>
   13720:	b	13728 <print_debug_data@@Base+0xa0>
   13724:	bl	126ac <coda_open@plt>
   13728:	mov	r4, r0
   1372c:	mov	r0, #1
   13730:	bl	126f4 <coda_set_option_use_mmap@plt>
   13734:	cmp	r4, #0
   13738:	beq	13740 <print_debug_data@@Base+0xb8>
   1373c:	bl	17ec8 <handle_coda_error@@Base>
   13740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13744:	add	r1, sp, #4
   13748:	bl	12790 <coda_get_product_format@plt>
   1374c:	cmp	r0, #0
   13750:	beq	13758 <print_debug_data@@Base+0xd0>
   13754:	bl	17ec8 <handle_coda_error@@Base>
   13758:	ldr	r0, [sp, #4]
   1375c:	mov	r1, #0
   13760:	cmp	r0, #3
   13764:	movwcc	r1, #1
   13768:	movw	r0, #49576	; 0xc1a8
   1376c:	movt	r0, #2
   13770:	str	r1, [r0]
   13774:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13778:	add	r0, sp, #8
   1377c:	bl	127d8 <coda_cursor_set_product@plt>
   13780:	cmp	r0, #0
   13784:	beq	1378c <print_debug_data@@Base+0x104>
   13788:	bl	17ec8 <handle_coda_error@@Base>
   1378c:	movw	r0, #53416	; 0xd0a8
   13790:	movt	r0, #2
   13794:	ldr	r1, [r0]
   13798:	cmp	r1, #0
   1379c:	beq	137b4 <print_debug_data@@Base+0x12c>
   137a0:	add	r0, sp, #8
   137a4:	bl	129b8 <coda_cursor_goto@plt>
   137a8:	cmp	r0, #0
   137ac:	beq	137b4 <print_debug_data@@Base+0x12c>
   137b0:	bl	17ec8 <handle_coda_error@@Base>
   137b4:	mov	r0, #0
   137b8:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   137bc:	add	r0, sp, #8
   137c0:	mov	r1, #0
   137c4:	bl	137d8 <print_debug_data@@Base+0x150>
   137c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137cc:	bl	12994 <coda_close@plt>
   137d0:	sub	sp, fp, #24
   137d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137dc:	add	fp, sp, #28
   137e0:	sub	sp, sp, #636	; 0x27c
   137e4:	str	r1, [sp, #16]
   137e8:	mov	r5, r0
   137ec:	sub	r1, fp, #40	; 0x28
   137f0:	bl	1276c <coda_cursor_has_attributes@plt>
   137f4:	cmp	r0, #0
   137f8:	beq	13800 <print_debug_data@@Base+0x178>
   137fc:	bl	17ec8 <handle_coda_error@@Base>
   13800:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13804:	cmp	r0, #0
   13808:	beq	13860 <print_debug_data@@Base+0x1d8>
   1380c:	mov	r0, r5
   13810:	bl	128ec <coda_cursor_goto_attributes@plt>
   13814:	cmp	r0, #0
   13818:	beq	13820 <print_debug_data@@Base+0x198>
   1381c:	bl	17ec8 <handle_coda_error@@Base>
   13820:	movw	r0, #40328	; 0x9d88
   13824:	movt	r0, #1
   13828:	bl	143a0 <print_debug_data@@Base+0xd18>
   1382c:	movw	r4, #49600	; 0xc1c0
   13830:	movt	r4, #2
   13834:	ldr	r0, [r4]
   13838:	add	r0, r0, #1
   1383c:	str	r0, [r4]
   13840:	mov	r0, r5
   13844:	ldr	r1, [sp, #16]
   13848:	bl	137d8 <print_debug_data@@Base+0x150>
   1384c:	ldr	r0, [r4]
   13850:	sub	r0, r0, #1
   13854:	str	r0, [r4]
   13858:	mov	r0, r5
   1385c:	bl	12850 <coda_cursor_goto_parent@plt>
   13860:	sub	r1, fp, #36	; 0x24
   13864:	mov	r0, r5
   13868:	bl	12778 <coda_cursor_get_type_class@plt>
   1386c:	cmp	r0, #0
   13870:	beq	13878 <print_debug_data@@Base+0x1f0>
   13874:	bl	17ec8 <handle_coda_error@@Base>
   13878:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1387c:	cmp	r0, #6
   13880:	bhi	1432c <print_debug_data@@Base+0xca4>
   13884:	add	r1, pc, #4
   13888:	str	r5, [sp, #20]
   1388c:	ldr	pc, [r1, r0, lsl #2]
   13890:	andeq	r3, r1, r4, lsl sl
   13894:	muleq	r1, ip, fp
   13898:	andeq	r3, r1, ip, lsr #17
   1389c:	andeq	r3, r1, ip, lsr #17
   138a0:	andeq	r3, r1, ip, lsr #17
   138a4:	andeq	r3, r1, ip, lsr #17
   138a8:	strdeq	r3, [r1], -ip
   138ac:	sub	r1, fp, #96	; 0x60
   138b0:	mov	r0, r5
   138b4:	bl	12988 <coda_cursor_has_ascii_content@plt>
   138b8:	cmp	r0, #0
   138bc:	beq	138c4 <print_debug_data@@Base+0x23c>
   138c0:	bl	17ec8 <handle_coda_error@@Base>
   138c4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   138c8:	cmp	r0, #0
   138cc:	beq	13980 <print_debug_data@@Base+0x2f8>
   138d0:	add	r1, sp, #24
   138d4:	mov	r0, r5
   138d8:	bl	12880 <coda_cursor_get_string_length@plt>
   138dc:	cmp	r0, #0
   138e0:	beq	138e8 <print_debug_data@@Base+0x260>
   138e4:	bl	17ec8 <handle_coda_error@@Base>
   138e8:	ldr	r0, [sp, #24]
   138ec:	add	r6, r0, #1
   138f0:	mov	r0, r6
   138f4:	bl	12820 <malloc@plt>
   138f8:	mov	r5, r0
   138fc:	cmp	r0, #0
   13900:	bne	1392c <print_debug_data@@Base+0x2a4>
   13904:	movw	r0, #410	; 0x19a
   13908:	str	r0, [sp]
   1390c:	movw	r1, #40041	; 0x9c69
   13910:	movt	r1, #1
   13914:	movw	r3, #40355	; 0x9da3
   13918:	movt	r3, #1
   1391c:	mvn	r0, #0
   13920:	mov	r2, r6
   13924:	bl	126a0 <coda_set_error@plt>
   13928:	bl	17ec8 <handle_coda_error@@Base>
   1392c:	ldr	r0, [sp, #24]
   13930:	add	r2, r0, #1
   13934:	ldr	r0, [sp, #20]
   13938:	mov	r1, r5
   1393c:	bl	12844 <coda_cursor_read_string@plt>
   13940:	cmp	r0, #0
   13944:	beq	1394c <print_debug_data@@Base+0x2c4>
   13948:	bl	17ec8 <handle_coda_error@@Base>
   1394c:	movw	r0, #41828	; 0xa364
   13950:	movt	r0, #1
   13954:	bl	143a0 <print_debug_data@@Base+0xd18>
   13958:	ldr	r1, [sp, #24]
   1395c:	mov	r0, r5
   13960:	bl	14434 <print_debug_data@@Base+0xdac>
   13964:	ldr	r1, [sp, #24]
   13968:	movw	r0, #40430	; 0x9dee
   1396c:	movt	r0, #1
   13970:	bl	143ec <print_debug_data@@Base+0xd64>
   13974:	mov	r0, r5
   13978:	bl	126e8 <free@plt>
   1397c:	ldr	r5, [sp, #20]
   13980:	sub	r1, fp, #120	; 0x78
   13984:	mov	r0, r5
   13988:	bl	12814 <coda_cursor_get_read_type@plt>
   1398c:	cmp	r0, #0
   13990:	beq	13998 <print_debug_data@@Base+0x310>
   13994:	bl	17ec8 <handle_coda_error@@Base>
   13998:	ldr	r0, [fp, #-120]	; 0xffffff88
   1399c:	add	r0, r0, #1
   139a0:	cmp	r0, #13
   139a4:	bhi	1432c <print_debug_data@@Base+0xca4>
   139a8:	add	r1, pc, #0
   139ac:	ldr	pc, [r1, r0, lsl #2]
   139b0:	andeq	r3, r1, r8, ror #19
   139b4:	andeq	r3, r1, ip, asr #25
   139b8:	andeq	r3, r1, r4, lsr #25
   139bc:	andeq	r3, r1, ip, asr #25
   139c0:	andeq	r3, r1, r4, lsr #25
   139c4:	andeq	r3, r1, ip, asr #25
   139c8:	andeq	r3, r1, r4, lsr #25
   139cc:	andeq	r3, r1, ip, lsr #26
   139d0:	andeq	r3, r1, r0, ror sp
   139d4:	strdeq	r3, [r1], -r4
   139d8:	strdeq	r3, [r1], -r4
   139dc:	andeq	r3, r1, r8, ror #19
   139e0:	andeq	r3, r1, r8, ror #19
   139e4:			; <UNDEFINED> instruction: 0x00013db4
   139e8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   139ec:	cmp	r0, #0
   139f0:	bne	1432c <print_debug_data@@Base+0xca4>
   139f4:	movw	r0, #40471	; 0x9e17
   139f8:	movt	r0, #1
   139fc:	movw	r1, #40355	; 0x9da3
   13a00:	movt	r1, #1
   13a04:	movw	r3, #40489	; 0x9e29
   13a08:	movt	r3, #1
   13a0c:	mov	r2, #548	; 0x224
   13a10:	bl	12ab4 <__assert_fail@plt>
   13a14:	sub	r1, fp, #120	; 0x78
   13a18:	mov	r0, r5
   13a1c:	bl	126d0 <coda_cursor_get_num_elements@plt>
   13a20:	cmp	r0, #0
   13a24:	beq	13a2c <print_debug_data@@Base+0x3a4>
   13a28:	bl	17ec8 <handle_coda_error@@Base>
   13a2c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13a30:	cmp	r0, #1
   13a34:	blt	1432c <print_debug_data@@Base+0xca4>
   13a38:	sub	r1, fp, #96	; 0x60
   13a3c:	mov	r0, r5
   13a40:	bl	12730 <coda_cursor_get_type@plt>
   13a44:	cmp	r0, #0
   13a48:	beq	13a50 <print_debug_data@@Base+0x3c8>
   13a4c:	bl	17ec8 <handle_coda_error@@Base>
   13a50:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a54:	sub	r1, fp, #44	; 0x2c
   13a58:	bl	12934 <coda_type_get_record_union_status@plt>
   13a5c:	cmp	r0, #0
   13a60:	beq	13a68 <print_debug_data@@Base+0x3e0>
   13a64:	bl	17ec8 <handle_coda_error@@Base>
   13a68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a6c:	cmp	r0, #0
   13a70:	beq	13ed4 <print_debug_data@@Base+0x84c>
   13a74:	sub	r1, fp, #48	; 0x30
   13a78:	mov	r0, r5
   13a7c:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   13a80:	cmp	r0, #0
   13a84:	beq	13a8c <print_debug_data@@Base+0x404>
   13a88:	bl	17ec8 <handle_coda_error@@Base>
   13a8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a90:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a94:	sub	r2, fp, #52	; 0x34
   13a98:	bl	12a78 <coda_type_get_record_field_name@plt>
   13a9c:	cmp	r0, #0
   13aa0:	beq	13aa8 <print_debug_data@@Base+0x420>
   13aa4:	bl	17ec8 <handle_coda_error@@Base>
   13aa8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13aac:	mov	r0, r5
   13ab0:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   13ab4:	cmp	r0, #0
   13ab8:	beq	13ac0 <print_debug_data@@Base+0x438>
   13abc:	bl	17ec8 <handle_coda_error@@Base>
   13ac0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ac4:	movw	r0, #42077	; 0xa45d
   13ac8:	movt	r0, #1
   13acc:	bl	143a0 <print_debug_data@@Base+0xd18>
   13ad0:	movw	r0, #49576	; 0xc1a8
   13ad4:	movt	r0, #2
   13ad8:	ldr	r0, [r0]
   13adc:	cmp	r0, #0
   13ae0:	beq	13b4c <print_debug_data@@Base+0x4c4>
   13ae4:	sub	r1, fp, #88	; 0x58
   13ae8:	mov	r0, r5
   13aec:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13af0:	cmp	r0, #0
   13af4:	beq	13afc <print_debug_data@@Base+0x474>
   13af8:	bl	17ec8 <handle_coda_error@@Base>
   13afc:	ldr	r1, [fp, #-84]	; 0xffffffac
   13b00:	cmp	r1, #0
   13b04:	blt	13b4c <print_debug_data@@Base+0x4c4>
   13b08:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b0c:	lsr	r0, r0, #3
   13b10:	orr	r0, r0, r1, lsl #29
   13b14:	lsr	r1, r1, #3
   13b18:	add	r6, sp, #24
   13b1c:	mov	r2, r6
   13b20:	bl	12aa8 <coda_str64@plt>
   13b24:	movw	r0, #40342	; 0x9d96
   13b28:	movt	r0, #1
   13b2c:	mov	r1, r6
   13b30:	bl	143ec <print_debug_data@@Base+0xd64>
   13b34:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b38:	ands	r1, r0, #7
   13b3c:	beq	13b4c <print_debug_data@@Base+0x4c4>
   13b40:	movw	r0, #40346	; 0x9d9a
   13b44:	movt	r0, #1
   13b48:	bl	143ec <print_debug_data@@Base+0xd64>
   13b4c:	movw	r0, #42627	; 0xa683
   13b50:	movt	r0, #1
   13b54:	bl	143ec <print_debug_data@@Base+0xd64>
   13b58:	movw	r4, #49600	; 0xc1c0
   13b5c:	movt	r4, #2
   13b60:	ldr	r0, [r4]
   13b64:	add	r0, r0, #1
   13b68:	str	r0, [r4]
   13b6c:	movw	r0, #49580	; 0xc1ac
   13b70:	movt	r0, #2
   13b74:	ldr	r0, [r0]
   13b78:	cmp	r0, #0
   13b7c:	blt	14334 <print_debug_data@@Base+0xcac>
   13b80:	ldr	r1, [sp, #16]
   13b84:	cmp	r0, r1
   13b88:	bgt	14334 <print_debug_data@@Base+0xcac>
   13b8c:	movw	r0, #40350	; 0x9d9e
   13b90:	movt	r0, #1
   13b94:	bl	143a0 <print_debug_data@@Base+0xd18>
   13b98:	b	14344 <print_debug_data@@Base+0xcbc>
   13b9c:	sub	r1, fp, #44	; 0x2c
   13ba0:	add	r6, sp, #24
   13ba4:	mov	r0, r5
   13ba8:	mov	r2, r6
   13bac:	bl	1297c <coda_cursor_get_array_dim@plt>
   13bb0:	cmp	r0, #0
   13bb4:	beq	13bbc <print_debug_data@@Base+0x534>
   13bb8:	bl	17ec8 <handle_coda_error@@Base>
   13bbc:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13bc0:	cmp	r4, #0
   13bc4:	blt	1432c <print_debug_data@@Base+0xca4>
   13bc8:	beq	1406c <print_debug_data@@Base+0x9e4>
   13bcc:	lsl	r2, r4, #2
   13bd0:	sub	r0, fp, #88	; 0x58
   13bd4:	mov	r1, #0
   13bd8:	bl	12904 <memset@plt>
   13bdc:	mov	r9, #1
   13be0:	ldr	r0, [r6], #4
   13be4:	mul	r9, r0, r9
   13be8:	subs	r4, r4, #1
   13bec:	bne	13be0 <print_debug_data@@Base+0x558>
   13bf0:	cmp	r9, #1
   13bf4:	bge	14070 <print_debug_data@@Base+0x9e8>
   13bf8:	b	1432c <print_debug_data@@Base+0xca4>
   13bfc:	sub	r1, fp, #120	; 0x78
   13c00:	mov	r0, r5
   13c04:	bl	127b4 <coda_cursor_get_special_type@plt>
   13c08:	cmp	r0, #0
   13c0c:	beq	13c14 <print_debug_data@@Base+0x58c>
   13c10:	bl	17ec8 <handle_coda_error@@Base>
   13c14:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c18:	cmp	r0, #0
   13c1c:	beq	13c54 <print_debug_data@@Base+0x5cc>
   13c20:	add	r6, sp, #24
   13c24:	mov	r0, r6
   13c28:	mov	r1, r5
   13c2c:	mov	r2, #520	; 0x208
   13c30:	bl	1273c <memcpy@plt>
   13c34:	mov	r0, r6
   13c38:	bl	12a24 <coda_cursor_use_base_type_of_special_type@plt>
   13c3c:	cmp	r0, #0
   13c40:	beq	13c48 <print_debug_data@@Base+0x5c0>
   13c44:	bl	17ec8 <handle_coda_error@@Base>
   13c48:	add	r0, sp, #24
   13c4c:	ldr	r1, [sp, #16]
   13c50:	bl	137d8 <print_debug_data@@Base+0x150>
   13c54:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c58:	bl	12628 <coda_type_get_special_type_name@plt>
   13c5c:	mov	r1, r0
   13c60:	movw	r0, #40525	; 0x9e4d
   13c64:	movt	r0, #1
   13c68:	bl	143a0 <print_debug_data@@Base+0xd18>
   13c6c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c70:	cmp	r0, #3
   13c74:	bhi	1432c <print_debug_data@@Base+0xca4>
   13c78:	add	r1, pc, #0
   13c7c:	ldr	pc, [r1, r0, lsl #2]
   13c80:	muleq	r1, r0, ip
   13c84:	andeq	r4, r1, r0, lsl #6
   13c88:	andeq	r4, r1, ip, ror r2
   13c8c:	andeq	r4, r1, r8, asr #5
   13c90:	movw	r0, #42627	; 0xa683
   13c94:	movt	r0, #1
   13c98:	bl	143ec <print_debug_data@@Base+0xd64>
   13c9c:	sub	sp, fp, #28
   13ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ca4:	add	r1, sp, #24
   13ca8:	mov	r0, r5
   13cac:	bl	1270c <coda_cursor_read_uint32@plt>
   13cb0:	cmp	r0, #0
   13cb4:	beq	13cbc <print_debug_data@@Base+0x634>
   13cb8:	bl	17ec8 <handle_coda_error@@Base>
   13cbc:	ldr	r1, [sp, #24]
   13cc0:	movw	r0, #40460	; 0x9e0c
   13cc4:	movt	r0, #1
   13cc8:	b	13da8 <print_debug_data@@Base+0x720>
   13ccc:	add	r1, sp, #24
   13cd0:	mov	r0, r5
   13cd4:	bl	12a3c <coda_cursor_read_int32@plt>
   13cd8:	cmp	r0, #0
   13cdc:	beq	13ce4 <print_debug_data@@Base+0x65c>
   13ce0:	bl	17ec8 <handle_coda_error@@Base>
   13ce4:	ldr	r1, [sp, #24]
   13ce8:	movw	r0, #40455	; 0x9e07
   13cec:	movt	r0, #1
   13cf0:	b	13da8 <print_debug_data@@Base+0x720>
   13cf4:	add	r1, sp, #24
   13cf8:	mov	r0, r5
   13cfc:	bl	12898 <coda_cursor_read_double@plt>
   13d00:	cmp	r0, #0
   13d04:	beq	13d0c <print_debug_data@@Base+0x684>
   13d08:	bl	17ec8 <handle_coda_error@@Base>
   13d0c:	vldr	d16, [sp, #24]
   13d10:	ldr	r0, [fp, #-120]	; 0xffffff88
   13d14:	vmov	r2, r3, d16
   13d18:	cmp	r0, #8
   13d1c:	bne	13d5c <print_debug_data@@Base+0x6d4>
   13d20:	movw	r0, #40465	; 0x9e11
   13d24:	movt	r0, #1
   13d28:	b	13d64 <print_debug_data@@Base+0x6dc>
   13d2c:	sub	r1, fp, #88	; 0x58
   13d30:	mov	r0, r5
   13d34:	bl	129a0 <coda_cursor_read_int64@plt>
   13d38:	cmp	r0, #0
   13d3c:	beq	13d44 <print_debug_data@@Base+0x6bc>
   13d40:	bl	17ec8 <handle_coda_error@@Base>
   13d44:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d48:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d4c:	add	r4, sp, #24
   13d50:	mov	r2, r4
   13d54:	bl	12aa8 <coda_str64@plt>
   13d58:	b	13d9c <print_debug_data@@Base+0x714>
   13d5c:	movw	r0, #40531	; 0x9e53
   13d60:	movt	r0, #1
   13d64:	bl	143a0 <print_debug_data@@Base+0xd18>
   13d68:	sub	sp, fp, #28
   13d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d70:	sub	r1, fp, #88	; 0x58
   13d74:	mov	r0, r5
   13d78:	bl	1288c <coda_cursor_read_uint64@plt>
   13d7c:	cmp	r0, #0
   13d80:	beq	13d88 <print_debug_data@@Base+0x700>
   13d84:	bl	17ec8 <handle_coda_error@@Base>
   13d88:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d8c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d90:	add	r4, sp, #24
   13d94:	mov	r2, r4
   13d98:	bl	126dc <coda_str64u@plt>
   13d9c:	movw	r0, #42205	; 0xa4dd
   13da0:	movt	r0, #1
   13da4:	mov	r1, r4
   13da8:	bl	143a0 <print_debug_data@@Base+0xd18>
   13dac:	sub	sp, fp, #28
   13db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13db4:	sub	r1, fp, #88	; 0x58
   13db8:	mov	r0, r5
   13dbc:	bl	12a00 <coda_cursor_get_bit_size@plt>
   13dc0:	cmp	r0, #0
   13dc4:	beq	13dcc <print_debug_data@@Base+0x744>
   13dc8:	bl	17ec8 <handle_coda_error@@Base>
   13dcc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13dd0:	ldr	r1, [fp, #-84]	; 0xffffffac
   13dd4:	lsr	r2, r0, #3
   13dd8:	orr	r6, r2, r1, lsl #29
   13ddc:	tst	r0, #7
   13de0:	addne	r6, r6, #1
   13de4:	mov	r0, r6
   13de8:	bl	12820 <malloc@plt>
   13dec:	mov	r5, r0
   13df0:	cmp	r0, #0
   13df4:	bne	13e20 <print_debug_data@@Base+0x798>
   13df8:	movw	r0, #447	; 0x1bf
   13dfc:	str	r0, [sp]
   13e00:	movw	r1, #40041	; 0x9c69
   13e04:	movt	r1, #1
   13e08:	movw	r3, #40355	; 0x9da3
   13e0c:	movt	r3, #1
   13e10:	mvn	r0, #0
   13e14:	mov	r2, r6
   13e18:	bl	126a0 <coda_set_error@plt>
   13e1c:	bl	17ec8 <handle_coda_error@@Base>
   13e20:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e24:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e28:	stm	sp, {r0, r1}
   13e2c:	ldr	r0, [sp, #20]
   13e30:	mov	r1, r5
   13e34:	mov	r2, #0
   13e38:	mov	r3, #0
   13e3c:	bl	12a9c <coda_cursor_read_bits@plt>
   13e40:	cmp	r0, #0
   13e44:	beq	13e4c <print_debug_data@@Base+0x7c4>
   13e48:	bl	17ec8 <handle_coda_error@@Base>
   13e4c:	movw	r0, #41828	; 0xa364
   13e50:	movt	r0, #1
   13e54:	bl	143a0 <print_debug_data@@Base+0xd18>
   13e58:	mov	r0, r5
   13e5c:	mov	r1, r6
   13e60:	bl	14434 <print_debug_data@@Base+0xdac>
   13e64:	movw	r0, #40446	; 0x9dfe
   13e68:	movt	r0, #1
   13e6c:	bl	143ec <print_debug_data@@Base+0xd64>
   13e70:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e74:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e78:	lsr	r0, r0, #3
   13e7c:	orr	r0, r0, r1, lsl #29
   13e80:	asr	r1, r1, #3
   13e84:	add	r4, sp, #24
   13e88:	mov	r2, r4
   13e8c:	bl	12aa8 <coda_str64@plt>
   13e90:	movw	r0, #42017	; 0xa421
   13e94:	movt	r0, #1
   13e98:	mov	r1, r4
   13e9c:	bl	143ec <print_debug_data@@Base+0xd64>
   13ea0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ea4:	ands	r1, r0, #7
   13ea8:	beq	13eb8 <print_debug_data@@Base+0x830>
   13eac:	movw	r0, #40346	; 0x9d9a
   13eb0:	movt	r0, #1
   13eb4:	bl	143ec <print_debug_data@@Base+0xd64>
   13eb8:	movw	r0, #40443	; 0x9dfb
   13ebc:	movt	r0, #1
   13ec0:	bl	143ec <print_debug_data@@Base+0xd64>
   13ec4:	mov	r0, r5
   13ec8:	bl	126e8 <free@plt>
   13ecc:	sub	sp, fp, #28
   13ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ed4:	mov	r0, r5
   13ed8:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   13edc:	cmp	r0, #0
   13ee0:	beq	13ee8 <print_debug_data@@Base+0x860>
   13ee4:	bl	17ec8 <handle_coda_error@@Base>
   13ee8:	mov	r1, #0
   13eec:	str	r1, [fp, #-48]	; 0xffffffd0
   13ef0:	ldr	r0, [fp, #-120]	; 0xffffff88
   13ef4:	cmp	r0, #1
   13ef8:	blt	14064 <print_debug_data@@Base+0x9dc>
   13efc:	ldr	r0, [sp, #16]
   13f00:	add	r0, r0, #1
   13f04:	str	r0, [sp, #12]
   13f08:	mvn	r4, #0
   13f0c:	movw	r7, #42077	; 0xa45d
   13f10:	movt	r7, #1
   13f14:	movw	r9, #49576	; 0xc1a8
   13f18:	movt	r9, #2
   13f1c:	movw	r6, #42627	; 0xa683
   13f20:	movt	r6, #1
   13f24:	movw	sl, #49600	; 0xc1c0
   13f28:	movt	sl, #2
   13f2c:	movw	r8, #49580	; 0xc1ac
   13f30:	movt	r8, #2
   13f34:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13f38:	sub	r2, fp, #52	; 0x34
   13f3c:	bl	12a78 <coda_type_get_record_field_name@plt>
   13f40:	cmp	r0, #0
   13f44:	beq	13f4c <print_debug_data@@Base+0x8c4>
   13f48:	bl	17ec8 <handle_coda_error@@Base>
   13f4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13f50:	mov	r0, r7
   13f54:	bl	143a0 <print_debug_data@@Base+0xd18>
   13f58:	ldr	r0, [r9]
   13f5c:	cmp	r0, #0
   13f60:	beq	13fd0 <print_debug_data@@Base+0x948>
   13f64:	ldr	r0, [sp, #20]
   13f68:	sub	r1, fp, #88	; 0x58
   13f6c:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13f70:	cmp	r0, #0
   13f74:	beq	13f7c <print_debug_data@@Base+0x8f4>
   13f78:	bl	17ec8 <handle_coda_error@@Base>
   13f7c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13f80:	ldr	r1, [fp, #-84]	; 0xffffffac
   13f84:	subs	r2, r4, r0
   13f88:	sbcs	r2, r4, r1
   13f8c:	bge	13fd0 <print_debug_data@@Base+0x948>
   13f90:	lsr	r0, r0, #3
   13f94:	orr	r0, r0, r1, lsl #29
   13f98:	lsr	r1, r1, #3
   13f9c:	add	r5, sp, #24
   13fa0:	mov	r2, r5
   13fa4:	bl	12aa8 <coda_str64@plt>
   13fa8:	movw	r0, #40342	; 0x9d96
   13fac:	movt	r0, #1
   13fb0:	mov	r1, r5
   13fb4:	bl	143ec <print_debug_data@@Base+0xd64>
   13fb8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fbc:	ands	r1, r0, #7
   13fc0:	beq	13fd0 <print_debug_data@@Base+0x948>
   13fc4:	movw	r0, #40346	; 0x9d9a
   13fc8:	movt	r0, #1
   13fcc:	bl	143ec <print_debug_data@@Base+0xd64>
   13fd0:	mov	r0, r6
   13fd4:	bl	143ec <print_debug_data@@Base+0xd64>
   13fd8:	ldr	r0, [sl]
   13fdc:	add	r0, r0, #1
   13fe0:	str	r0, [sl]
   13fe4:	ldr	r0, [r8]
   13fe8:	cmp	r0, #0
   13fec:	blt	1400c <print_debug_data@@Base+0x984>
   13ff0:	ldr	r1, [sp, #16]
   13ff4:	cmp	r0, r1
   13ff8:	bgt	1400c <print_debug_data@@Base+0x984>
   13ffc:	movw	r0, #40350	; 0x9d9e
   14000:	movt	r0, #1
   14004:	bl	143a0 <print_debug_data@@Base+0xd18>
   14008:	b	14018 <print_debug_data@@Base+0x990>
   1400c:	ldr	r0, [sp, #20]
   14010:	ldr	r1, [sp, #12]
   14014:	bl	137d8 <print_debug_data@@Base+0x150>
   14018:	ldr	r0, [sl]
   1401c:	sub	r0, r0, #1
   14020:	str	r0, [sl]
   14024:	ldr	r0, [fp, #-120]	; 0xffffff88
   14028:	sub	r0, r0, #1
   1402c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14030:	cmp	r1, r0
   14034:	bge	1404c <print_debug_data@@Base+0x9c4>
   14038:	ldr	r0, [sp, #20]
   1403c:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   14040:	cmp	r0, #0
   14044:	beq	1404c <print_debug_data@@Base+0x9c4>
   14048:	bl	17ec8 <handle_coda_error@@Base>
   1404c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14050:	add	r1, r0, #1
   14054:	str	r1, [fp, #-48]	; 0xffffffd0
   14058:	ldr	r0, [fp, #-120]	; 0xffffff88
   1405c:	cmp	r1, r0
   14060:	blt	13f34 <print_debug_data@@Base+0x8ac>
   14064:	ldr	r0, [sp, #20]
   14068:	b	14354 <print_debug_data@@Base+0xccc>
   1406c:	mov	r9, #1
   14070:	mov	r0, r5
   14074:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   14078:	cmp	r0, #0
   1407c:	beq	14084 <print_debug_data@@Base+0x9fc>
   14080:	bl	17ec8 <handle_coda_error@@Base>
   14084:	sub	r0, r9, #1
   14088:	str	r0, [sp, #12]
   1408c:	ldr	r0, [sp, #16]
   14090:	add	r0, r0, #1
   14094:	str	r0, [sp, #8]
   14098:	sub	r8, fp, #88	; 0x58
   1409c:	movw	r7, #40347	; 0x9d9b
   140a0:	movt	r7, #1
   140a4:	movw	r6, #40760	; 0x9f38
   140a8:	movt	r6, #1
   140ac:	add	r4, sp, #24
   140b0:	mov	sl, #0
   140b4:	movw	r0, #40772	; 0x9f44
   140b8:	movt	r0, #1
   140bc:	bl	143a0 <print_debug_data@@Base+0xd18>
   140c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140c4:	cmp	r0, #1
   140c8:	blt	14100 <print_debug_data@@Base+0xa78>
   140cc:	mov	r5, #0
   140d0:	ldr	r1, [r8, r5, lsl #2]
   140d4:	mov	r0, r7
   140d8:	bl	143ec <print_debug_data@@Base+0xd64>
   140dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140e0:	sub	r0, r0, #1
   140e4:	cmp	r5, r0
   140e8:	movlt	r0, r6
   140ec:	bllt	143ec <print_debug_data@@Base+0xd64>
   140f0:	add	r5, r5, #1
   140f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140f8:	cmp	r5, r0
   140fc:	blt	140d0 <print_debug_data@@Base+0xa48>
   14100:	movw	r0, #41962	; 0xa3ea
   14104:	movt	r0, #1
   14108:	bl	143ec <print_debug_data@@Base+0xd64>
   1410c:	movw	r0, #49576	; 0xc1a8
   14110:	movt	r0, #2
   14114:	ldr	r0, [r0]
   14118:	cmp	r0, #0
   1411c:	ldr	r5, [sp, #20]
   14120:	beq	14190 <print_debug_data@@Base+0xb08>
   14124:	mov	r0, r5
   14128:	sub	r1, fp, #96	; 0x60
   1412c:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   14130:	cmp	r0, #0
   14134:	beq	1413c <print_debug_data@@Base+0xab4>
   14138:	bl	17ec8 <handle_coda_error@@Base>
   1413c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14140:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14144:	mvn	r3, #0
   14148:	subs	r2, r3, r0
   1414c:	sbcs	r2, r3, r1
   14150:	bge	14190 <print_debug_data@@Base+0xb08>
   14154:	lsr	r0, r0, #3
   14158:	orr	r0, r0, r1, lsl #29
   1415c:	lsr	r1, r1, #3
   14160:	sub	r2, fp, #120	; 0x78
   14164:	bl	12aa8 <coda_str64@plt>
   14168:	movw	r0, #40342	; 0x9d96
   1416c:	movt	r0, #1
   14170:	sub	r1, fp, #120	; 0x78
   14174:	bl	143ec <print_debug_data@@Base+0xd64>
   14178:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1417c:	ands	r1, r0, #7
   14180:	beq	14190 <print_debug_data@@Base+0xb08>
   14184:	movw	r0, #40346	; 0x9d9a
   14188:	movt	r0, #1
   1418c:	bl	143ec <print_debug_data@@Base+0xd64>
   14190:	movw	r0, #42627	; 0xa683
   14194:	movt	r0, #1
   14198:	bl	143ec <print_debug_data@@Base+0xd64>
   1419c:	movw	r0, #49600	; 0xc1c0
   141a0:	movt	r0, #2
   141a4:	mov	r1, r0
   141a8:	ldr	r0, [r0]
   141ac:	add	r0, r0, #1
   141b0:	str	r0, [r1]
   141b4:	movw	r0, #49580	; 0xc1ac
   141b8:	movt	r0, #2
   141bc:	ldr	r0, [r0]
   141c0:	cmp	r0, #0
   141c4:	blt	141e4 <print_debug_data@@Base+0xb5c>
   141c8:	ldr	r1, [sp, #16]
   141cc:	cmp	r0, r1
   141d0:	bgt	141e4 <print_debug_data@@Base+0xb5c>
   141d4:	movw	r0, #40350	; 0x9d9e
   141d8:	movt	r0, #1
   141dc:	bl	143a0 <print_debug_data@@Base+0xd18>
   141e0:	b	141f0 <print_debug_data@@Base+0xb68>
   141e4:	mov	r0, r5
   141e8:	ldr	r1, [sp, #8]
   141ec:	bl	137d8 <print_debug_data@@Base+0x150>
   141f0:	movw	r0, #49600	; 0xc1c0
   141f4:	movt	r0, #2
   141f8:	mov	r1, r0
   141fc:	ldr	r0, [r0]
   14200:	sub	r0, r0, #1
   14204:	str	r0, [r1]
   14208:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1420c:	cmp	r0, #1
   14210:	mov	r3, #0
   14214:	blt	1424c <print_debug_data@@Base+0xbc4>
   14218:	sub	r0, r0, #1
   1421c:	ldr	r1, [r8, r0, lsl #2]
   14220:	add	r1, r1, #1
   14224:	str	r1, [r8, r0, lsl #2]
   14228:	ldr	r2, [r4, r0, lsl #2]
   1422c:	cmp	r1, r2
   14230:	bne	1424c <print_debug_data@@Base+0xbc4>
   14234:	str	r3, [r8, r0, lsl #2]
   14238:	sub	r1, r0, #1
   1423c:	add	r0, r0, #1
   14240:	cmp	r0, #1
   14244:	mov	r0, r1
   14248:	bgt	1421c <print_debug_data@@Base+0xb94>
   1424c:	ldr	r0, [sp, #12]
   14250:	cmp	sl, r0
   14254:	bge	1426c <print_debug_data@@Base+0xbe4>
   14258:	mov	r0, r5
   1425c:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   14260:	cmp	r0, #0
   14264:	beq	1426c <print_debug_data@@Base+0xbe4>
   14268:	bl	17ec8 <handle_coda_error@@Base>
   1426c:	add	sl, sl, #1
   14270:	cmp	sl, r9
   14274:	bne	140b4 <print_debug_data@@Base+0xa2c>
   14278:	b	14350 <print_debug_data@@Base+0xcc8>
   1427c:	sub	r1, fp, #88	; 0x58
   14280:	mov	r0, r5
   14284:	bl	12898 <coda_cursor_read_double@plt>
   14288:	cmp	r0, #0
   1428c:	beq	14294 <print_debug_data@@Base+0xc0c>
   14290:	bl	17ec8 <handle_coda_error@@Base>
   14294:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14298:	bl	128a4 <coda_isNaN@plt>
   1429c:	cmp	r0, #0
   142a0:	bne	142b4 <print_debug_data@@Base+0xc2c>
   142a4:	vldr	d0, [fp, #-88]	; 0xffffffa8
   142a8:	bl	12748 <coda_isInf@plt>
   142ac:	cmp	r0, #0
   142b0:	beq	14360 <print_debug_data@@Base+0xcd8>
   142b4:	vldr	d16, [fp, #-88]	; 0xffffffa8
   142b8:	vmov	r2, r3, d16
   142bc:	movw	r0, #40530	; 0x9e52
   142c0:	movt	r0, #1
   142c4:	b	14328 <print_debug_data@@Base+0xca0>
   142c8:	add	r1, sp, #24
   142cc:	sub	r2, fp, #88	; 0x58
   142d0:	mov	r0, r5
   142d4:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   142d8:	cmp	r0, #0
   142dc:	beq	142e4 <print_debug_data@@Base+0xc5c>
   142e0:	bl	17ec8 <handle_coda_error@@Base>
   142e4:	vldr	d16, [sp, #24]
   142e8:	vldr	d17, [fp, #-88]	; 0xffffffa8
   142ec:	vstr	d17, [sp]
   142f0:	vmov	r2, r3, d16
   142f4:	movw	r0, #40565	; 0x9e75
   142f8:	movt	r0, #1
   142fc:	b	14328 <print_debug_data@@Base+0xca0>
   14300:	add	r1, sp, #24
   14304:	mov	r0, r5
   14308:	bl	12898 <coda_cursor_read_double@plt>
   1430c:	cmp	r0, #0
   14310:	beq	14318 <print_debug_data@@Base+0xc90>
   14314:	bl	17ec8 <handle_coda_error@@Base>
   14318:	vldr	d16, [sp, #24]
   1431c:	vmov	r2, r3, d16
   14320:	movw	r0, #40531	; 0x9e53
   14324:	movt	r0, #1
   14328:	bl	143ec <print_debug_data@@Base+0xd64>
   1432c:	sub	sp, fp, #28
   14330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14334:	ldr	r0, [sp, #16]
   14338:	add	r1, r0, #1
   1433c:	mov	r0, r5
   14340:	bl	137d8 <print_debug_data@@Base+0x150>
   14344:	ldr	r0, [r4]
   14348:	sub	r0, r0, #1
   1434c:	str	r0, [r4]
   14350:	mov	r0, r5
   14354:	bl	12850 <coda_cursor_goto_parent@plt>
   14358:	sub	sp, fp, #28
   1435c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14360:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14364:	movw	r0, #40249	; 0x9d39
   14368:	movt	r0, #1
   1436c:	add	r1, sp, #24
   14370:	bl	126c4 <coda_time_double_to_string@plt>
   14374:	cmp	r0, #0
   14378:	beq	14388 <print_debug_data@@Base+0xd00>
   1437c:	movw	r0, #40538	; 0x9e5a
   14380:	movt	r0, #1
   14384:	b	13c98 <print_debug_data@@Base+0x610>
   14388:	movw	r0, #42204	; 0xa4dc
   1438c:	movt	r0, #1
   14390:	add	r1, sp, #24
   14394:	bl	143ec <print_debug_data@@Base+0xd64>
   14398:	sub	sp, fp, #28
   1439c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a0:	sub	sp, sp, #12
   143a4:	push	{r4, sl, fp, lr}
   143a8:	add	fp, sp, #8
   143ac:	sub	sp, sp, #4
   143b0:	mov	r4, r0
   143b4:	add	r0, fp, #8
   143b8:	stm	r0, {r1, r2, r3}
   143bc:	bl	1455c <print_debug_data@@Base+0xed4>
   143c0:	add	r2, fp, #8
   143c4:	str	r2, [sp]
   143c8:	movw	r0, #53392	; 0xd090
   143cc:	movt	r0, #2
   143d0:	ldr	r0, [r0]
   143d4:	mov	r1, r4
   143d8:	bl	129ac <vfprintf@plt>
   143dc:	sub	sp, fp, #8
   143e0:	pop	{r4, sl, fp, lr}
   143e4:	add	sp, sp, #12
   143e8:	bx	lr
   143ec:	sub	sp, sp, #12
   143f0:	push	{fp, lr}
   143f4:	mov	fp, sp
   143f8:	sub	sp, sp, #4
   143fc:	mov	ip, r0
   14400:	add	r0, fp, #8
   14404:	stm	r0, {r1, r2, r3}
   14408:	add	r2, fp, #8
   1440c:	str	r2, [sp]
   14410:	movw	r0, #53392	; 0xd090
   14414:	movt	r0, #2
   14418:	ldr	r0, [r0]
   1441c:	mov	r1, ip
   14420:	bl	129ac <vfprintf@plt>
   14424:	mov	sp, fp
   14428:	pop	{fp, lr}
   1442c:	add	sp, sp, #12
   14430:	bx	lr
   14434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14438:	add	fp, sp, #28
   1443c:	sub	sp, sp, #4
   14440:	cmp	r1, #1
   14444:	blt	14554 <print_debug_data@@Base+0xecc>
   14448:	mov	r4, r1
   1444c:	mov	r5, r0
   14450:	movw	r8, #40175	; 0x9cef
   14454:	movt	r8, #1
   14458:	movw	r9, #40178	; 0x9cf2
   1445c:	movt	r9, #1
   14460:	movw	sl, #40181	; 0x9cf5
   14464:	movt	sl, #1
   14468:	movw	r7, #40184	; 0x9cf8
   1446c:	movt	r7, #1
   14470:	movw	r6, #40187	; 0x9cfb
   14474:	movt	r6, #1
   14478:	ldrb	r1, [r5]
   1447c:	sub	r0, r1, #7
   14480:	cmp	r0, #6
   14484:	bhi	144bc <print_debug_data@@Base+0xe34>
   14488:	add	r1, pc, #0
   1448c:	ldr	pc, [r1, r0, lsl #2]
   14490:	andeq	r4, r1, ip, lsr #9
   14494:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14498:	andeq	r4, r1, r4, ror #9
   1449c:	strdeq	r4, [r1], -r0
   144a0:	strdeq	r4, [r1], -ip
   144a4:	andeq	r4, r1, r8, lsl #10
   144a8:	andeq	r4, r1, r4, lsl r5
   144ac:	movw	r0, #40169	; 0x9ce9
   144b0:	movt	r0, #1
   144b4:	bl	143ec <print_debug_data@@Base+0xd64>
   144b8:	b	14548 <print_debug_data@@Base+0xec0>
   144bc:	cmp	r1, #92	; 0x5c
   144c0:	bne	14520 <print_debug_data@@Base+0xe98>
   144c4:	movw	r0, #40190	; 0x9cfe
   144c8:	movt	r0, #1
   144cc:	bl	143ec <print_debug_data@@Base+0xd64>
   144d0:	b	14548 <print_debug_data@@Base+0xec0>
   144d4:	movw	r0, #40172	; 0x9cec
   144d8:	movt	r0, #1
   144dc:	bl	143ec <print_debug_data@@Base+0xd64>
   144e0:	b	14548 <print_debug_data@@Base+0xec0>
   144e4:	mov	r0, r8
   144e8:	bl	143ec <print_debug_data@@Base+0xd64>
   144ec:	b	14548 <print_debug_data@@Base+0xec0>
   144f0:	mov	r0, r9
   144f4:	bl	143ec <print_debug_data@@Base+0xd64>
   144f8:	b	14548 <print_debug_data@@Base+0xec0>
   144fc:	mov	r0, sl
   14500:	bl	143ec <print_debug_data@@Base+0xd64>
   14504:	b	14548 <print_debug_data@@Base+0xec0>
   14508:	mov	r0, r7
   1450c:	bl	143ec <print_debug_data@@Base+0xd64>
   14510:	b	14548 <print_debug_data@@Base+0xec0>
   14514:	mov	r0, r6
   14518:	bl	143ec <print_debug_data@@Base+0xd64>
   1451c:	b	14548 <print_debug_data@@Base+0xec0>
   14520:	sub	r0, r1, #32
   14524:	uxtb	r0, r0
   14528:	cmp	r0, #94	; 0x5e
   1452c:	bhi	1453c <print_debug_data@@Base+0xeb4>
   14530:	movw	r0, #40609	; 0x9ea1
   14534:	movt	r0, #1
   14538:	b	14544 <print_debug_data@@Base+0xebc>
   1453c:	movw	r0, #40193	; 0x9d01
   14540:	movt	r0, #1
   14544:	bl	143ec <print_debug_data@@Base+0xd64>
   14548:	subs	r4, r4, #1
   1454c:	add	r5, r5, #1
   14550:	bne	14478 <print_debug_data@@Base+0xdf0>
   14554:	sub	sp, fp, #28
   14558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1455c:	push	{r4, r5, r6, sl, fp, lr}
   14560:	add	fp, sp, #16
   14564:	movw	r0, #49600	; 0xc1c0
   14568:	movt	r0, #2
   1456c:	ldr	r0, [r0]
   14570:	cmp	r0, #0
   14574:	blt	145b4 <print_debug_data@@Base+0xf2c>
   14578:	popeq	{r4, r5, r6, sl, fp, pc}
   1457c:	add	r5, r0, #1
   14580:	movw	r6, #53392	; 0xd090
   14584:	movt	r6, #2
   14588:	movw	r4, #40606	; 0x9e9e
   1458c:	movt	r4, #1
   14590:	ldr	r3, [r6]
   14594:	mov	r0, r4
   14598:	mov	r1, #2
   1459c:	mov	r2, #1
   145a0:	bl	127cc <fwrite@plt>
   145a4:	sub	r5, r5, #1
   145a8:	cmp	r5, #1
   145ac:	bgt	14590 <print_debug_data@@Base+0xf08>
   145b0:	pop	{r4, r5, r6, sl, fp, pc}
   145b4:	movw	r0, #40576	; 0x9e80
   145b8:	movt	r0, #1
   145bc:	movw	r1, #40355	; 0x9da3
   145c0:	movt	r1, #1
   145c4:	movw	r3, #40588	; 0x9e8c
   145c8:	movt	r3, #1
   145cc:	mov	r2, #44	; 0x2c
   145d0:	bl	12ab4 <__assert_fail@plt>

000145d4 <dim_info_init@@Base>:
   145d4:	movw	r0, #53424	; 0xd0b0
   145d8:	movt	r0, #2
   145dc:	mov	r1, #0
   145e0:	str	r1, [r0, #68]	; 0x44
   145e4:	str	r1, [r0]
   145e8:	mvn	r1, #0
   145ec:	str	r1, [r0, #104]	; 0x68
   145f0:	bx	lr

000145f4 <dim_info_done@@Base>:
   145f4:	bx	lr

000145f8 <print_all_distinct_dims@@Base>:
   145f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145fc:	add	fp, sp, #28
   14600:	sub	sp, sp, #4
   14604:	mov	sl, r0
   14608:	movw	r9, #53424	; 0xd0b0
   1460c:	movt	r9, #2
   14610:	ldr	r0, [r9]
   14614:	cmp	r0, sl
   14618:	ble	147b4 <print_all_distinct_dims@@Base+0x1bc>
   1461c:	add	r8, r9, sl, lsl #2
   14620:	ldr	r0, [r8, #72]	; 0x48
   14624:	cmp	r0, #0
   14628:	subeq	sp, fp, #28
   1462c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14630:	mov	r7, r8
   14634:	ldr	r0, [r7, #4]!
   14638:	mov	r5, #4
   1463c:	add	r6, r5, r0, lsl #2
   14640:	mov	r0, r6
   14644:	bl	12820 <malloc@plt>
   14648:	mov	r4, r0
   1464c:	cmp	r0, #0
   14650:	bne	1467c <print_all_distinct_dims@@Base+0x84>
   14654:	mov	r0, #61	; 0x3d
   14658:	str	r0, [sp]
   1465c:	movw	r1, #40041	; 0x9c69
   14660:	movt	r1, #1
   14664:	movw	r3, #40639	; 0x9ebf
   14668:	movt	r3, #1
   1466c:	mvn	r0, #0
   14670:	mov	r2, r6
   14674:	bl	126a0 <coda_set_error@plt>
   14678:	bl	17ec8 <handle_coda_error@@Base>
   1467c:	ldr	r0, [r7]
   14680:	add	r2, r5, r0, lsl #2
   14684:	mov	r6, #0
   14688:	mov	r0, r4
   1468c:	mov	r1, #0
   14690:	bl	12904 <memset@plt>
   14694:	mov	r1, r8
   14698:	ldr	r0, [r1, #140]!	; 0x8c
   1469c:	add	r0, r9, r0, lsl #3
   146a0:	ldr	r3, [r0, #236]	; 0xec
   146a4:	ldr	r0, [r0, #232]	; 0xe8
   146a8:	subs	r0, r0, #1
   146ac:	sbcs	r0, r3, #0
   146b0:	blt	146e8 <print_all_distinct_dims@@Base+0xf0>
   146b4:	ldr	r0, [r8, #108]	; 0x6c
   146b8:	ldr	r1, [r1]
   146bc:	add	r1, r9, r1, lsl #3
   146c0:	ldrd	r2, [r1, #232]	; 0xe8
   146c4:	ldr	r1, [r0, r6, lsl #2]
   146c8:	cmp	r1, #0
   146cc:	ldrge	r5, [r4, r1, lsl #2]
   146d0:	addge	r5, r5, #1
   146d4:	strge	r5, [r4, r1, lsl #2]
   146d8:	add	r6, r6, #1
   146dc:	subs	r1, r6, r2
   146e0:	rscs	r1, r3, #0
   146e4:	blt	146c4 <print_all_distinct_dims@@Base+0xcc>
   146e8:	add	r1, sl, #1
   146ec:	movw	r0, #40746	; 0x9f2a
   146f0:	movt	r0, #1
   146f4:	bl	1267c <printf@plt>
   146f8:	ldr	r5, [r8, #36]!	; 0x24
   146fc:	ldr	r1, [r7]
   14700:	cmp	r5, r1
   14704:	bge	14738 <print_all_distinct_dims@@Base+0x140>
   14708:	movw	r6, #40758	; 0x9f36
   1470c:	movt	r6, #1
   14710:	ldr	r0, [r4, r5, lsl #2]
   14714:	cmp	r0, #1
   14718:	blt	14728 <print_all_distinct_dims@@Base+0x130>
   1471c:	mov	r0, r6
   14720:	mov	r1, r5
   14724:	bl	1267c <printf@plt>
   14728:	add	r5, r5, #1
   1472c:	ldr	r1, [r7]
   14730:	cmp	r5, r1
   14734:	blt	14710 <print_all_distinct_dims@@Base+0x118>
   14738:	movw	r0, #40762	; 0x9f3a
   1473c:	movt	r0, #1
   14740:	bl	1267c <printf@plt>
   14744:	movw	r0, #40766	; 0x9f3e
   14748:	movt	r0, #1
   1474c:	bl	1267c <printf@plt>
   14750:	ldr	r0, [r7]
   14754:	ldr	r6, [r8]
   14758:	cmp	r6, r0
   1475c:	bge	1478c <print_all_distinct_dims@@Base+0x194>
   14760:	movw	r5, #40758	; 0x9f36
   14764:	movt	r5, #1
   14768:	ldr	r1, [r4, r6, lsl #2]
   1476c:	cmp	r1, #1
   14770:	blt	1477c <print_all_distinct_dims@@Base+0x184>
   14774:	mov	r0, r5
   14778:	bl	1267c <printf@plt>
   1477c:	add	r6, r6, #1
   14780:	ldr	r0, [r7]
   14784:	cmp	r6, r0
   14788:	blt	14768 <print_all_distinct_dims@@Base+0x170>
   1478c:	ldr	r1, [r4, r0, lsl #2]
   14790:	movw	r0, #40762	; 0x9f3a
   14794:	movt	r0, #1
   14798:	bl	1267c <printf@plt>
   1479c:	mov	r0, #10
   147a0:	bl	12910 <putchar@plt>
   147a4:	mov	r0, r4
   147a8:	sub	sp, fp, #28
   147ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147b0:	b	126e8 <free@plt>
   147b4:	movw	r0, #40612	; 0x9ea4
   147b8:	movt	r0, #1
   147bc:	movw	r1, #40639	; 0x9ebf
   147c0:	movt	r1, #1
   147c4:	movw	r3, #40712	; 0x9f08
   147c8:	movt	r3, #1
   147cc:	mov	r2, #50	; 0x32
   147d0:	bl	12ab4 <__assert_fail@plt>

000147d4 <dim_enter_array@@Base>:
   147d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147d8:	add	fp, sp, #28
   147dc:	sub	sp, sp, #84	; 0x54
   147e0:	movw	r4, #49640	; 0xc1e8
   147e4:	movt	r4, #2
   147e8:	ldr	r5, [r4, #3360]	; 0xd20
   147ec:	ldr	r0, [r4, #136]	; 0x88
   147f0:	add	r0, r4, r0, lsl #2
   147f4:	ldr	r0, [r0, #8]
   147f8:	sub	r1, fp, #32
   147fc:	bl	12ac0 <coda_type_get_class@plt>
   14800:	cmp	r0, #0
   14804:	beq	1480c <dim_enter_array@@Base+0x38>
   14808:	bl	17ec8 <handle_coda_error@@Base>
   1480c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14810:	sub	r0, r0, #1
   14814:	cmp	r0, #5
   14818:	bhi	14f90 <dim_enter_array@@Base+0x7bc>
   1481c:	add	r1, r5, r5, lsl #2
   14820:	add	r6, r4, r1, lsl #4
   14824:	add	r1, pc, #0
   14828:	ldr	pc, [r1, r0, lsl #2]
   1482c:	andeq	r4, r1, r4, asr #16
   14830:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14834:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14838:	andeq	r4, r1, r8, asr #17
   1483c:	strdeq	r4, [r1], -ip
   14840:	andeq	r4, r1, ip, lsl #17
   14844:	ldr	r0, [r4, #136]	; 0x88
   14848:	add	r0, r4, r0, lsl #2
   1484c:	ldr	r0, [r0, #8]
   14850:	add	r1, sp, #44	; 0x2c
   14854:	add	r2, sp, #48	; 0x30
   14858:	bl	129f4 <coda_type_get_array_dim@plt>
   1485c:	cmp	r0, #0
   14860:	beq	14868 <dim_enter_array@@Base+0x94>
   14864:	bl	17ec8 <handle_coda_error@@Base>
   14868:	ldr	r1, [sp, #44]	; 0x2c
   1486c:	str	r1, [r6, #804]	; 0x324
   14870:	cmp	r1, #1
   14874:	blt	14950 <dim_enter_array@@Base+0x17c>
   14878:	add	r0, r6, #808	; 0x328
   1487c:	lsl	r2, r1, #2
   14880:	add	r1, sp, #48	; 0x30
   14884:	bl	1273c <memcpy@plt>
   14888:	b	14950 <dim_enter_array@@Base+0x17c>
   1488c:	ldr	r0, [r4, #136]	; 0x88
   14890:	add	r0, r4, r0, lsl #2
   14894:	ldr	r0, [r0, #8]
   14898:	add	r1, sp, #48	; 0x30
   1489c:	bl	12928 <coda_type_get_special_type@plt>
   148a0:	cmp	r0, #0
   148a4:	beq	148ac <dim_enter_array@@Base+0xd8>
   148a8:	bl	17ec8 <handle_coda_error@@Base>
   148ac:	ldr	r0, [sp, #48]	; 0x30
   148b0:	cmp	r0, #3
   148b4:	bne	14fd0 <dim_enter_array@@Base+0x7fc>
   148b8:	mov	r0, #2
   148bc:	mov	r1, #1
   148c0:	str	r1, [r6, #804]	; 0x324
   148c4:	b	1494c <dim_enter_array@@Base+0x178>
   148c8:	ldr	r0, [r4, #136]	; 0x88
   148cc:	add	r0, r4, r0, lsl #2
   148d0:	ldr	r0, [r0, #8]
   148d4:	add	r1, sp, #48	; 0x30
   148d8:	bl	12964 <coda_type_get_string_length@plt>
   148dc:	cmp	r0, #0
   148e0:	beq	148e8 <dim_enter_array@@Base+0x114>
   148e4:	bl	17ec8 <handle_coda_error@@Base>
   148e8:	mov	r0, #1
   148ec:	ldr	r1, [sp, #48]	; 0x30
   148f0:	str	r0, [r6, #804]	; 0x324
   148f4:	str	r1, [r6, #808]	; 0x328
   148f8:	b	14950 <dim_enter_array@@Base+0x17c>
   148fc:	ldr	r0, [r4, #136]	; 0x88
   14900:	add	r0, r4, r0, lsl #2
   14904:	ldr	r0, [r0, #8]
   14908:	add	r1, sp, #48	; 0x30
   1490c:	bl	12754 <coda_type_get_bit_size@plt>
   14910:	cmp	r0, #0
   14914:	beq	1491c <dim_enter_array@@Base+0x148>
   14918:	bl	17ec8 <handle_coda_error@@Base>
   1491c:	mov	r0, #1
   14920:	str	r0, [r6, #804]	; 0x324
   14924:	ldr	r0, [sp, #52]	; 0x34
   14928:	cmp	r0, #0
   1492c:	blt	14948 <dim_enter_array@@Base+0x174>
   14930:	ldr	r1, [sp, #48]	; 0x30
   14934:	lsr	r2, r1, #3
   14938:	orr	r0, r2, r0, lsl #29
   1493c:	tst	r1, #7
   14940:	addne	r0, r0, #1
   14944:	b	1494c <dim_enter_array@@Base+0x178>
   14948:	mvn	r0, #0
   1494c:	str	r0, [r6, #808]	; 0x328
   14950:	add	r0, r6, #800	; 0x320
   14954:	movw	r1, #49636	; 0xc1e4
   14958:	movt	r1, #2
   1495c:	ldr	r1, [r1]
   14960:	cmp	r1, #0
   14964:	beq	149ec <dim_enter_array@@Base+0x218>
   14968:	movw	sl, #53424	; 0xd0b0
   1496c:	movt	sl, #2
   14970:	ldr	lr, [sl]
   14974:	str	lr, [r0]
   14978:	mov	ip, r6
   1497c:	ldr	r0, [ip, #804]!	; 0x324
   14980:	add	r3, r0, lr
   14984:	cmp	r3, #9
   14988:	bge	14fb0 <dim_enter_array@@Base+0x7dc>
   1498c:	str	r3, [sl]
   14990:	cmp	lr, #0
   14994:	str	lr, [sp, #32]
   14998:	ble	14a08 <dim_enter_array@@Base+0x234>
   1499c:	add	r1, sl, lr, lsl #3
   149a0:	ldr	r3, [r1, #232]	; 0xe8
   149a4:	ldr	r2, [r1, #236]	; 0xec
   149a8:	str	r3, [sp, #20]
   149ac:	str	r2, [sp, #16]
   149b0:	ldr	r3, [r1, #296]	; 0x128
   149b4:	ldr	r2, [r1, #300]	; 0x12c
   149b8:	str	r3, [sp, #8]
   149bc:	rsbs	r1, r3, #0
   149c0:	mov	r1, r2
   149c4:	str	r2, [sp, #12]
   149c8:	rscs	r1, r2, #0
   149cc:	bge	14bfc <dim_enter_array@@Base+0x428>
   149d0:	cmp	r0, #1
   149d4:	blt	14c28 <dim_enter_array@@Base+0x454>
   149d8:	ldr	r1, [sp, #8]
   149dc:	str	r1, [sp, #40]	; 0x28
   149e0:	ldr	r1, [sp, #12]
   149e4:	str	r1, [sp, #36]	; 0x24
   149e8:	b	14a44 <dim_enter_array@@Base+0x270>
   149ec:	mvn	r1, #0
   149f0:	str	r1, [r0]
   149f4:	mov	r0, #0
   149f8:	str	r0, [r6, #840]	; 0x348
   149fc:	str	r0, [r6, #844]	; 0x34c
   14a00:	sub	sp, fp, #28
   14a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a08:	mov	r1, #0
   14a0c:	str	r1, [sp, #36]	; 0x24
   14a10:	mov	r1, #1
   14a14:	str	r1, [sp, #40]	; 0x28
   14a18:	cmp	r0, #0
   14a1c:	mov	r1, #1
   14a20:	str	r1, [sp, #20]
   14a24:	mov	r1, #0
   14a28:	str	r1, [sp, #16]
   14a2c:	mov	r1, #1
   14a30:	str	r1, [sp, #8]
   14a34:	mov	r1, #0
   14a38:	str	r1, [sp, #12]
   14a3c:	mov	r5, #0
   14a40:	ble	14c78 <dim_enter_array@@Base+0x4a4>
   14a44:	ldr	r1, [sp, #36]	; 0x24
   14a48:	str	r1, [sp, #12]
   14a4c:	ldr	r1, [sp, #40]	; 0x28
   14a50:	str	r1, [sp, #8]
   14a54:	add	r8, sl, lr, lsl #2
   14a58:	add	r1, r8, #72	; 0x48
   14a5c:	str	r6, [sp, #24]
   14a60:	add	r2, r6, #808	; 0x328
   14a64:	mov	r3, #0
   14a68:	mov	r7, #0
   14a6c:	ldr	r6, [r2], #4
   14a70:	str	r3, [r1]
   14a74:	str	r6, [r1, #-68]	; 0xffffffbc
   14a78:	cmn	r6, #1
   14a7c:	movweq	r7, #1
   14a80:	add	r1, r1, #4
   14a84:	subs	r0, r0, #1
   14a88:	bne	14a6c <dim_enter_array@@Base+0x298>
   14a8c:	cmp	r7, #0
   14a90:	beq	14c40 <dim_enter_array@@Base+0x46c>
   14a94:	ldr	r0, [ip]
   14a98:	cmp	r0, #1
   14a9c:	str	ip, [sp, #28]
   14aa0:	blt	14b5c <dim_enter_array@@Base+0x388>
   14aa4:	ldr	r0, [sp, #24]
   14aa8:	add	r6, r0, #808	; 0x328
   14aac:	ldr	r0, [sp, #20]
   14ab0:	lsl	r4, r0, #2
   14ab4:	mov	r5, #0
   14ab8:	mov	r7, #0
   14abc:	ldr	r0, [r6, r7, lsl #2]
   14ac0:	add	r9, r8, r7, lsl #2
   14ac4:	cmn	r0, #1
   14ac8:	beq	14ad8 <dim_enter_array@@Base+0x304>
   14acc:	str	r5, [r9, #140]	; 0x8c
   14ad0:	str	r5, [r9, #108]	; 0x6c
   14ad4:	b	14b4c <dim_enter_array@@Base+0x378>
   14ad8:	str	lr, [r9, #140]	; 0x8c
   14adc:	mov	r0, r4
   14ae0:	bl	12820 <malloc@plt>
   14ae4:	str	r0, [r9, #108]	; 0x6c
   14ae8:	cmp	r0, #0
   14aec:	bne	14b18 <dim_enter_array@@Base+0x344>
   14af0:	mov	r0, #456	; 0x1c8
   14af4:	str	r0, [sp]
   14af8:	mvn	r0, #0
   14afc:	movw	r1, #40041	; 0x9c69
   14b00:	movt	r1, #1
   14b04:	mov	r2, r4
   14b08:	movw	r3, #40639	; 0x9ebf
   14b0c:	movt	r3, #1
   14b10:	bl	126a0 <coda_set_error@plt>
   14b14:	bl	17ec8 <handle_coda_error@@Base>
   14b18:	ldr	r0, [sp, #20]
   14b1c:	rsbs	r0, r0, #0
   14b20:	ldr	r0, [sp, #16]
   14b24:	rscs	r0, r0, #0
   14b28:	ldr	lr, [sp, #32]
   14b2c:	ldr	ip, [sp, #28]
   14b30:	bge	14b4c <dim_enter_array@@Base+0x378>
   14b34:	ldr	r0, [r9, #108]	; 0x6c
   14b38:	mov	r1, #255	; 0xff
   14b3c:	mov	r2, r4
   14b40:	bl	12904 <memset@plt>
   14b44:	ldr	ip, [sp, #28]
   14b48:	ldr	lr, [sp, #32]
   14b4c:	ldr	r0, [ip]
   14b50:	add	r7, r7, #1
   14b54:	cmp	r7, r0
   14b58:	blt	14abc <dim_enter_array@@Base+0x2e8>
   14b5c:	mov	r0, #0
   14b60:	ldr	r6, [sp, #24]
   14b64:	str	r0, [r6, #844]	; 0x34c
   14b68:	mov	r0, #0
   14b6c:	mov	r1, #0
   14b70:	mov	r2, #0
   14b74:	bl	14ff0 <dim_enter_array@@Base+0x81c>
   14b78:	ldr	ip, [sp, #28]
   14b7c:	ldr	r0, [ip]
   14b80:	cmp	r0, #1
   14b84:	blt	14c5c <dim_enter_array@@Base+0x488>
   14b88:	add	r4, r6, #808	; 0x328
   14b8c:	mov	r9, #0
   14b90:	mov	r7, #0
   14b94:	mov	r5, #0
   14b98:	ldr	lr, [sp, #32]
   14b9c:	ldr	r0, [r4, r7, lsl #2]
   14ba0:	cmn	r0, #1
   14ba4:	bne	14be8 <dim_enter_array@@Base+0x414>
   14ba8:	add	r6, r8, r7, lsl #2
   14bac:	ldr	r0, [r6, #4]
   14bb0:	ldr	r1, [r6, #36]	; 0x24
   14bb4:	cmp	r0, r1
   14bb8:	bne	14bdc <dim_enter_array@@Base+0x408>
   14bbc:	str	r9, [r6, #72]	; 0x48
   14bc0:	ldr	r0, [r6, #108]	; 0x6c
   14bc4:	bl	126e8 <free@plt>
   14bc8:	ldr	ip, [sp, #28]
   14bcc:	ldr	lr, [sp, #32]
   14bd0:	str	r9, [r6, #140]	; 0x8c
   14bd4:	str	r9, [r6, #108]	; 0x6c
   14bd8:	b	14be4 <dim_enter_array@@Base+0x410>
   14bdc:	mov	r5, #1
   14be0:	str	r5, [r6, #72]	; 0x48
   14be4:	ldr	r6, [sp, #24]
   14be8:	ldr	r0, [ip]
   14bec:	add	r7, r7, #1
   14bf0:	cmp	r7, r0
   14bf4:	blt	14b9c <dim_enter_array@@Base+0x3c8>
   14bf8:	b	14c2c <dim_enter_array@@Base+0x458>
   14bfc:	cmp	r0, #1
   14c00:	blt	14c28 <dim_enter_array@@Base+0x454>
   14c04:	add	r1, sl, lr, lsl #2
   14c08:	add	r1, r1, #72	; 0x48
   14c0c:	mov	r5, #0
   14c10:	str	r5, [r1]
   14c14:	str	r5, [r1, #-68]	; 0xffffffbc
   14c18:	add	r1, r1, #4
   14c1c:	subs	r0, r0, #1
   14c20:	bne	14c10 <dim_enter_array@@Base+0x43c>
   14c24:	b	14c2c <dim_enter_array@@Base+0x458>
   14c28:	mov	r5, #0
   14c2c:	ldr	r0, [sp, #20]
   14c30:	str	r0, [sp, #40]	; 0x28
   14c34:	ldr	r0, [sp, #16]
   14c38:	str	r0, [sp, #36]	; 0x24
   14c3c:	b	14c74 <dim_enter_array@@Base+0x4a0>
   14c40:	mov	r5, #0
   14c44:	ldr	r0, [sp, #20]
   14c48:	str	r0, [sp, #40]	; 0x28
   14c4c:	ldr	r0, [sp, #16]
   14c50:	str	r0, [sp, #36]	; 0x24
   14c54:	ldr	r6, [sp, #24]
   14c58:	b	14c74 <dim_enter_array@@Base+0x4a0>
   14c5c:	ldr	r0, [sp, #20]
   14c60:	str	r0, [sp, #40]	; 0x28
   14c64:	ldr	r0, [sp, #16]
   14c68:	str	r0, [sp, #36]	; 0x24
   14c6c:	ldr	lr, [sp, #32]
   14c70:	mov	r5, #0
   14c74:	ldr	r3, [sl]
   14c78:	mvn	r0, #0
   14c7c:	str	r0, [sl, #104]	; 0x68
   14c80:	mov	r0, #0
   14c84:	str	r0, [sl, #68]	; 0x44
   14c88:	cmp	r3, #1
   14c8c:	blt	14cb8 <dim_enter_array@@Base+0x4e4>
   14c90:	ldr	r3, [sl]
   14c94:	mov	r1, #1
   14c98:	add	r2, sl, r0, lsl #2
   14c9c:	ldr	r2, [r2, #72]	; 0x48
   14ca0:	cmp	r2, #0
   14ca4:	strne	r0, [sl, #104]	; 0x68
   14ca8:	strne	r1, [sl, #68]	; 0x44
   14cac:	add	r0, r0, #1
   14cb0:	cmp	r0, r3
   14cb4:	blt	14c98 <dim_enter_array@@Base+0x4c4>
   14cb8:	str	r3, [sp, #28]
   14cbc:	mov	r0, #1
   14cc0:	str	r0, [r6, #840]!	; 0x348
   14cc4:	ldr	r8, [ip]
   14cc8:	cmp	r8, #1
   14ccc:	blt	14d78 <dim_enter_array@@Base+0x5a4>
   14cd0:	str	r5, [sp, #20]
   14cd4:	add	r0, sl, lr, lsl #2
   14cd8:	mov	r1, lr
   14cdc:	add	lr, r0, #4
   14ce0:	add	r1, sl, r1, lsl #3
   14ce4:	mov	r0, ip
   14ce8:	add	ip, r1, #240	; 0xf0
   14cec:	str	r6, [sp, #24]
   14cf0:	ldr	r1, [r6]
   14cf4:	ldr	r8, [r0]
   14cf8:	mov	r3, #0
   14cfc:	mov	r2, ip
   14d00:	ldr	r6, [lr, r3, lsl #2]
   14d04:	mul	r1, r1, r6
   14d08:	cmp	r3, #0
   14d0c:	beq	14d38 <dim_enter_array@@Base+0x564>
   14d10:	ldr	r0, [r2, #-8]
   14d14:	ldr	r7, [r2, #-4]
   14d18:	mov	r5, r8
   14d1c:	umull	r4, r8, r0, r6
   14d20:	asr	r9, r6, #31
   14d24:	mla	r0, r0, r9, r8
   14d28:	mov	r8, r5
   14d2c:	mla	r7, r7, r6, r0
   14d30:	stm	r2, {r4, r7}
   14d34:	b	14d58 <dim_enter_array@@Base+0x584>
   14d38:	ldr	r6, [lr]
   14d3c:	ldr	r5, [sp, #40]	; 0x28
   14d40:	umull	r4, r7, r5, r6
   14d44:	asr	r0, r6, #31
   14d48:	mla	r0, r5, r0, r7
   14d4c:	ldr	r5, [sp, #36]	; 0x24
   14d50:	mla	r7, r5, r6, r0
   14d54:	stm	ip, {r4, r7}
   14d58:	add	r2, r2, #8
   14d5c:	add	r3, r3, #1
   14d60:	cmp	r3, r8
   14d64:	blt	14d00 <dim_enter_array@@Base+0x52c>
   14d68:	ldr	r0, [sp, #24]
   14d6c:	str	r1, [r0]
   14d70:	ldr	lr, [sp, #32]
   14d74:	ldr	r5, [sp, #20]
   14d78:	cmp	r5, #0
   14d7c:	beq	14e4c <dim_enter_array@@Base+0x678>
   14d80:	cmp	r8, #1
   14d84:	blt	14da0 <dim_enter_array@@Base+0x5cc>
   14d88:	ldr	r0, [sp, #32]
   14d8c:	add	r0, sl, r0, lsl #3
   14d90:	add	r0, r0, #304	; 0x130
   14d94:	lsl	r2, r8, #3
   14d98:	mov	r1, #0
   14d9c:	bl	12904 <memset@plt>
   14da0:	ldr	r0, [sp, #40]	; 0x28
   14da4:	subs	r0, r0, #1
   14da8:	ldr	r0, [sp, #36]	; 0x24
   14dac:	sbcs	r0, r0, #0
   14db0:	blt	14ec0 <dim_enter_array@@Base+0x6ec>
   14db4:	movw	r0, #65232	; 0xfed0
   14db8:	movt	r0, #65535	; 0xffff
   14dbc:	ldr	r1, [sp, #32]
   14dc0:	sub	ip, r0, r1, lsl #3
   14dc4:	lsl	lr, r1, #2
   14dc8:	mov	r2, #0
   14dcc:	cmp	r8, #1
   14dd0:	blt	14e30 <dim_enter_array@@Base+0x65c>
   14dd4:	mov	r3, #1
   14dd8:	mov	r0, ip
   14ddc:	mov	r1, lr
   14de0:	mov	r7, r8
   14de4:	add	r6, sl, r1
   14de8:	ldr	r4, [r6, #72]	; 0x48
   14dec:	cmp	r4, #0
   14df0:	addeq	r6, r6, #4
   14df4:	ldrne	r4, [r6, #108]	; 0x6c
   14df8:	addne	r6, r4, r2, lsl #2
   14dfc:	mov	r4, sl
   14e00:	ldr	r5, [r4, -r0]!
   14e04:	ldr	r6, [r6]
   14e08:	mul	r3, r6, r3
   14e0c:	adds	r5, r5, r3
   14e10:	str	r5, [r4]
   14e14:	ldr	r5, [r4, #4]
   14e18:	adc	r5, r5, r3, asr #31
   14e1c:	str	r5, [r4, #4]
   14e20:	sub	r0, r0, #8
   14e24:	add	r1, r1, #4
   14e28:	subs	r7, r7, #1
   14e2c:	bne	14de4 <dim_enter_array@@Base+0x610>
   14e30:	add	r2, r2, #1
   14e34:	ldr	r0, [sp, #40]	; 0x28
   14e38:	subs	r0, r2, r0
   14e3c:	ldr	r0, [sp, #36]	; 0x24
   14e40:	rscs	r0, r0, #0
   14e44:	blt	14dcc <dim_enter_array@@Base+0x5f8>
   14e48:	b	14ec0 <dim_enter_array@@Base+0x6ec>
   14e4c:	add	r2, sl, lr, lsl #3
   14e50:	add	r0, sl, lr, lsl #2
   14e54:	ldr	r1, [r0, #4]
   14e58:	ldr	r5, [sp, #8]
   14e5c:	umull	r3, r7, r5, r1
   14e60:	asr	r6, r1, #31
   14e64:	mla	r7, r5, r6, r7
   14e68:	ldr	r6, [sp, #12]
   14e6c:	mla	r1, r6, r1, r7
   14e70:	str	r3, [r2, #304]	; 0x130
   14e74:	str	r1, [r2, #308]	; 0x134
   14e78:	cmp	r8, #2
   14e7c:	blt	14ec0 <dim_enter_array@@Base+0x6ec>
   14e80:	add	r0, r0, #8
   14e84:	add	r1, r2, #312	; 0x138
   14e88:	ldr	r7, [r2, #304]	; 0x130
   14e8c:	ldr	r3, [r2, #308]	; 0x134
   14e90:	sub	r2, r8, #1
   14e94:	ldr	r6, [r0], #4
   14e98:	umull	r4, ip, r7, r6
   14e9c:	asr	r5, r6, #31
   14ea0:	mla	r7, r7, r5, ip
   14ea4:	mla	r3, r3, r6, r7
   14ea8:	str	r4, [r1]
   14eac:	str	r3, [r1, #4]
   14eb0:	add	r1, r1, #8
   14eb4:	subs	r2, r2, #1
   14eb8:	mov	r7, r4
   14ebc:	bne	14e94 <dim_enter_array@@Base+0x6c0>
   14ec0:	ldr	ip, [sp, #32]
   14ec4:	add	r0, ip, r8
   14ec8:	add	r1, sl, r0, lsl #3
   14ecc:	ldr	r0, [r1, #296]	; 0x128
   14ed0:	ldr	r2, [r1, #300]	; 0x12c
   14ed4:	subs	r0, r0, #1
   14ed8:	sbcs	r0, r2, #0
   14edc:	blt	14f88 <dim_enter_array@@Base+0x7b4>
   14ee0:	ldr	r0, [sp, #28]
   14ee4:	sub	r0, r0, #1
   14ee8:	add	r2, sl, r0, lsl #3
   14eec:	add	r0, sl, r0, lsl #2
   14ef0:	ldr	r0, [r0, #4]
   14ef4:	asr	r3, r0, #31
   14ef8:	str	r0, [r2, #176]	; 0xb0
   14efc:	str	r3, [r2, #180]	; 0xb4
   14f00:	cmp	r8, #2
   14f04:	blt	14f48 <dim_enter_array@@Base+0x774>
   14f08:	add	r0, sl, ip, lsl #2
   14f0c:	sub	r0, r0, #4
   14f10:	add	r1, r1, #160	; 0xa0
   14f14:	ldr	r2, [r0, r8, lsl #2]
   14f18:	ldrd	r4, [r1, #8]
   14f1c:	umull	r6, r3, r4, r2
   14f20:	asr	r7, r2, #31
   14f24:	mla	r3, r4, r7, r3
   14f28:	mla	r7, r5, r2, r3
   14f2c:	strd	r6, [r1]
   14f30:	sub	r1, r1, #8
   14f34:	sub	r2, r8, #1
   14f38:	sub	r3, r8, #2
   14f3c:	cmp	r3, #0
   14f40:	mov	r8, r2
   14f44:	bgt	14f14 <dim_enter_array@@Base+0x740>
   14f48:	cmp	ip, #1
   14f4c:	blt	14f88 <dim_enter_array@@Base+0x7b4>
   14f50:	add	r1, sl, ip, lsl #3
   14f54:	add	r0, r1, #168	; 0xa8
   14f58:	add	r1, r1, #176	; 0xb0
   14f5c:	add	r2, ip, #1
   14f60:	ldrd	r4, [r1]
   14f64:	ldrd	r6, [r0]
   14f68:	umull	r8, r3, r6, r4
   14f6c:	mla	r3, r6, r5, r3
   14f70:	mla	r9, r7, r4, r3
   14f74:	strd	r8, [r0]
   14f78:	sub	r0, r0, #8
   14f7c:	sub	r2, r2, #1
   14f80:	cmp	r2, #1
   14f84:	bgt	14f60 <dim_enter_array@@Base+0x78c>
   14f88:	sub	sp, fp, #28
   14f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f90:	movw	r0, #40586	; 0x9e8a
   14f94:	movt	r0, #1
   14f98:	movw	r1, #40639	; 0x9ebf
   14f9c:	movt	r1, #1
   14fa0:	movw	r3, #40774	; 0x9f46
   14fa4:	movt	r3, #1
   14fa8:	movw	r2, #386	; 0x182
   14fac:	bl	12ab4 <__assert_fail@plt>
   14fb0:	movw	r0, #40797	; 0x9f5d
   14fb4:	movt	r0, #1
   14fb8:	movw	r1, #40639	; 0x9ebf
   14fbc:	movt	r1, #1
   14fc0:	movw	r3, #40774	; 0x9f46
   14fc4:	movt	r3, #1
   14fc8:	movw	r2, #402	; 0x192
   14fcc:	bl	12ab4 <__assert_fail@plt>
   14fd0:	movw	r0, #40586	; 0x9e8a
   14fd4:	movt	r0, #1
   14fd8:	movw	r1, #40639	; 0x9ebf
   14fdc:	movt	r1, #1
   14fe0:	movw	r3, #40774	; 0x9f46
   14fe4:	movt	r3, #1
   14fe8:	movw	r2, #349	; 0x15d
   14fec:	bl	12ab4 <__assert_fail@plt>
   14ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ff4:	add	fp, sp, #28
   14ff8:	sub	sp, sp, #44	; 0x2c
   14ffc:	str	r2, [sp]
   15000:	mov	r5, r1
   15004:	mov	sl, r0
   15008:	movw	r7, #49640	; 0xc1e8
   1500c:	movt	r7, #2
   15010:	add	r6, r7, #144	; 0x90
   15014:	sub	r1, fp, #32
   15018:	mov	r0, r6
   1501c:	bl	12778 <coda_cursor_get_type_class@plt>
   15020:	cmp	r0, #0
   15024:	beq	1502c <dim_enter_array@@Base+0x858>
   15028:	bl	17ec8 <handle_coda_error@@Base>
   1502c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15030:	sub	r1, r0, #4
   15034:	cmp	r1, #2
   15038:	bcc	1511c <dim_enter_array@@Base+0x948>
   1503c:	cmp	r0, #0
   15040:	beq	1515c <dim_enter_array@@Base+0x988>
   15044:	cmp	r0, #1
   15048:	bne	153d8 <dim_enter_array@@Base+0xc04>
   1504c:	add	r0, r5, r5, lsl #2
   15050:	add	r9, r7, r0, lsl #4
   15054:	ldr	r4, [r9, #800]	; 0x320
   15058:	ldr	r0, [r7, #3360]	; 0xd20
   1505c:	cmp	r0, r5
   15060:	bne	1524c <dim_enter_array@@Base+0xa78>
   15064:	add	r1, sp, #4
   15068:	add	r8, sp, #8
   1506c:	mov	r0, r6
   15070:	mov	r2, r8
   15074:	bl	1297c <coda_cursor_get_array_dim@plt>
   15078:	cmp	r0, #0
   1507c:	beq	15084 <dim_enter_array@@Base+0x8b0>
   15080:	bl	17ec8 <handle_coda_error@@Base>
   15084:	mov	r0, r9
   15088:	ldr	r1, [r0, #804]!	; 0x324
   1508c:	ldr	r2, [sp, #4]
   15090:	cmp	r2, r1
   15094:	bne	15418 <dim_enter_array@@Base+0xc44>
   15098:	ldr	r1, [r0]
   1509c:	cmp	r1, #1
   150a0:	blt	1534c <dim_enter_array@@Base+0xb78>
   150a4:	movw	r1, #53424	; 0xd0b0
   150a8:	movt	r1, #2
   150ac:	add	ip, r1, r4, lsl #2
   150b0:	add	r2, r9, #808	; 0x328
   150b4:	add	r3, r9, #844	; 0x34c
   150b8:	mov	r7, #0
   150bc:	ldr	r6, [r2, r7, lsl #2]
   150c0:	cmn	r6, #1
   150c4:	bne	15108 <dim_enter_array@@Base+0x934>
   150c8:	ldr	r6, [r8, r7, lsl #2]
   150cc:	add	r4, ip, r7, lsl #2
   150d0:	ldr	r5, [r4, #108]	; 0x6c
   150d4:	ldr	r1, [r3]
   150d8:	str	r6, [r5, r1, lsl #2]
   150dc:	ldr	r5, [r4, #4]
   150e0:	cmn	r5, #1
   150e4:	beq	15100 <dim_enter_array@@Base+0x92c>
   150e8:	cmp	r5, r6
   150ec:	strlt	r6, [r4, #4]
   150f0:	ldr	r1, [r4, #36]	; 0x24
   150f4:	cmp	r1, r6
   150f8:	strgt	r6, [r4, #36]	; 0x24
   150fc:	b	15108 <dim_enter_array@@Base+0x934>
   15100:	str	r6, [r4, #4]
   15104:	str	r6, [r4, #36]	; 0x24
   15108:	ldr	r1, [r0]
   1510c:	add	r7, r7, #1
   15110:	cmp	r7, r1
   15114:	blt	150bc <dim_enter_array@@Base+0x8e8>
   15118:	b	1534c <dim_enter_array@@Base+0xb78>
   1511c:	ldr	r1, [r7, #3360]	; 0xd20
   15120:	cmp	r1, r5
   15124:	bne	153f8 <dim_enter_array@@Base+0xc24>
   15128:	cmp	r0, #4
   1512c:	bne	151c0 <dim_enter_array@@Base+0x9ec>
   15130:	add	r1, sp, #4
   15134:	mov	r0, r6
   15138:	bl	12880 <coda_cursor_get_string_length@plt>
   1513c:	cmp	r0, #0
   15140:	beq	15148 <dim_enter_array@@Base+0x974>
   15144:	bl	17ec8 <handle_coda_error@@Base>
   15148:	ldr	r0, [sp, #4]
   1514c:	str	r0, [sp, #8]
   15150:	asr	r0, r0, #31
   15154:	str	r0, [sp, #12]
   15158:	b	151d8 <dim_enter_array@@Base+0xa04>
   1515c:	ldr	r0, [sp]
   15160:	add	r4, r7, r0, lsl #2
   15164:	ldr	r1, [r4, #3492]!	; 0xda4
   15168:	add	r2, sp, #8
   1516c:	mov	r0, r6
   15170:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   15174:	cmp	r0, #0
   15178:	beq	15180 <dim_enter_array@@Base+0x9ac>
   1517c:	bl	17ec8 <handle_coda_error@@Base>
   15180:	ldr	r0, [sp, #8]
   15184:	cmp	r0, #0
   15188:	beq	152d4 <dim_enter_array@@Base+0xb00>
   1518c:	ldr	r1, [r4]
   15190:	mov	r0, r6
   15194:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15198:	cmp	r0, #0
   1519c:	beq	151a4 <dim_enter_array@@Base+0x9d0>
   151a0:	bl	17ec8 <handle_coda_error@@Base>
   151a4:	add	r0, sl, #1
   151a8:	ldr	r1, [sp]
   151ac:	add	r2, r1, #1
   151b0:	mov	r1, r5
   151b4:	bl	14ff0 <dim_enter_array@@Base+0x81c>
   151b8:	mov	r0, r6
   151bc:	b	153cc <dim_enter_array@@Base+0xbf8>
   151c0:	add	r1, sp, #8
   151c4:	mov	r0, r6
   151c8:	bl	1261c <coda_cursor_get_byte_size@plt>
   151cc:	cmp	r0, #0
   151d0:	beq	151d8 <dim_enter_array@@Base+0xa04>
   151d4:	bl	17ec8 <handle_coda_error@@Base>
   151d8:	add	r0, r5, r5, lsl #2
   151dc:	add	r0, r7, r0, lsl #4
   151e0:	ldr	r1, [r0, #800]	; 0x320
   151e4:	ldr	r3, [r0, #844]	; 0x34c
   151e8:	movw	r0, #53424	; 0xd0b0
   151ec:	movt	r0, #2
   151f0:	add	r0, r0, r1, lsl #2
   151f4:	ldr	r7, [r0, #108]	; 0x6c
   151f8:	ldr	r1, [sp, #8]
   151fc:	ldr	r2, [sp, #12]
   15200:	str	r1, [r7, r3, lsl #2]
   15204:	mov	r3, r0
   15208:	ldr	r7, [r3, #4]!
   1520c:	cmn	r7, #1
   15210:	beq	15238 <dim_enter_array@@Base+0xa64>
   15214:	subs	r6, r7, r1
   15218:	rscs	r7, r2, r7, asr #31
   1521c:	strlt	r1, [r3]
   15220:	ldr	r3, [r0, #36]!	; 0x24
   15224:	subs	r7, r1, r3
   15228:	sbcs	r2, r2, r3, asr #31
   1522c:	strlt	r1, [r0]
   15230:	sub	sp, fp, #28
   15234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15238:	str	r1, [r3]
   1523c:	add	r0, r0, #36	; 0x24
   15240:	str	r1, [r0]
   15244:	sub	sp, fp, #28
   15248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1524c:	cmp	r5, #0
   15250:	moveq	r0, #0
   15254:	streq	r0, [r9, #844]	; 0x34c
   15258:	ldr	r0, [r9, #804]!	; 0x324
   1525c:	ldr	r2, [r9, #36]	; 0x24
   15260:	ldr	r1, [r9, #40]	; 0x28
   15264:	mul	r2, r2, r1
   15268:	str	r2, [r9, #120]	; 0x78
   1526c:	cmp	r0, #1
   15270:	blt	15354 <dim_enter_array@@Base+0xb80>
   15274:	ldr	r0, [r9]
   15278:	add	r0, r0, r4
   1527c:	movw	r2, #53424	; 0xd0b0
   15280:	movt	r2, #2
   15284:	add	r2, r2, r4, lsl #2
   15288:	add	r2, r2, #72	; 0x48
   1528c:	add	r3, r4, #27
   15290:	mov	r4, #1
   15294:	ldr	r7, [r2]
   15298:	cmp	r7, #0
   1529c:	subeq	r7, r2, #68	; 0x44
   152a0:	ldrne	r7, [r2, #36]	; 0x24
   152a4:	addne	r7, r7, r1, lsl #2
   152a8:	ldr	r7, [r7]
   152ac:	mul	r4, r7, r4
   152b0:	add	r2, r2, #4
   152b4:	add	r7, r3, #1
   152b8:	sub	r3, r3, #26
   152bc:	cmp	r3, r0
   152c0:	mov	r3, r7
   152c4:	blt	15294 <dim_enter_array@@Base+0xac0>
   152c8:	cmp	r4, #1
   152cc:	bge	15358 <dim_enter_array@@Base+0xb84>
   152d0:	b	1534c <dim_enter_array@@Base+0xb78>
   152d4:	ldr	r0, [r7, #3360]	; 0xd20
   152d8:	add	r0, r0, r0, lsl #2
   152dc:	add	r3, r7, r0, lsl #4
   152e0:	mov	r0, r3
   152e4:	ldr	r1, [r0, #804]!	; 0x324
   152e8:	cmp	r1, #1
   152ec:	blt	1534c <dim_enter_array@@Base+0xb78>
   152f0:	ldr	r1, [r0, #-4]
   152f4:	movw	r2, #53424	; 0xd0b0
   152f8:	movt	r2, #2
   152fc:	add	ip, r2, r1, lsl #2
   15300:	add	r2, r3, #808	; 0x328
   15304:	add	r3, r3, #844	; 0x34c
   15308:	mov	r7, #0
   1530c:	mov	r6, #0
   15310:	ldr	r5, [r2, r6, lsl #2]
   15314:	cmn	r5, #1
   15318:	bne	1533c <dim_enter_array@@Base+0xb68>
   1531c:	add	r5, ip, r6, lsl #2
   15320:	ldr	r4, [r5, #108]	; 0x6c
   15324:	ldr	r1, [r3]
   15328:	str	r7, [r4, r1, lsl #2]
   1532c:	ldr	r1, [r5, #4]
   15330:	cmn	r1, #1
   15334:	streq	r7, [r5, #4]
   15338:	str	r7, [r5, #36]	; 0x24
   1533c:	ldr	r1, [r0]
   15340:	add	r6, r6, #1
   15344:	cmp	r6, r1
   15348:	blt	15310 <dim_enter_array@@Base+0xb3c>
   1534c:	sub	sp, fp, #28
   15350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15354:	mov	r4, #1
   15358:	mov	r8, r6
   1535c:	mov	r0, r6
   15360:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   15364:	cmp	r0, #0
   15368:	beq	15370 <dim_enter_array@@Base+0xb9c>
   1536c:	bl	17ec8 <handle_coda_error@@Base>
   15370:	add	r9, r9, #120	; 0x78
   15374:	add	r5, r5, #1
   15378:	sub	r6, r4, #1
   1537c:	add	r7, sl, #1
   15380:	mov	sl, #0
   15384:	mov	r0, r7
   15388:	mov	r1, r5
   1538c:	ldr	r2, [sp]
   15390:	bl	14ff0 <dim_enter_array@@Base+0x81c>
   15394:	cmp	sl, r6
   15398:	bge	153bc <dim_enter_array@@Base+0xbe8>
   1539c:	mov	r0, r8
   153a0:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   153a4:	cmp	r0, #0
   153a8:	beq	153b0 <dim_enter_array@@Base+0xbdc>
   153ac:	bl	17ec8 <handle_coda_error@@Base>
   153b0:	ldr	r0, [r9]
   153b4:	add	r0, r0, #1
   153b8:	str	r0, [r9]
   153bc:	add	sl, sl, #1
   153c0:	cmp	r4, sl
   153c4:	bne	15384 <dim_enter_array@@Base+0xbb0>
   153c8:	mov	r0, r8
   153cc:	bl	12850 <coda_cursor_goto_parent@plt>
   153d0:	sub	sp, fp, #28
   153d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153d8:	movw	r0, #40586	; 0x9e8a
   153dc:	movt	r0, #1
   153e0:	movw	r1, #40639	; 0x9ebf
   153e4:	movt	r1, #1
   153e8:	movw	r3, #40940	; 0x9fec
   153ec:	movt	r3, #1
   153f0:	movw	r2, #294	; 0x126
   153f4:	bl	12ab4 <__assert_fail@plt>
   153f8:	movw	r0, #40983	; 0xa017
   153fc:	movt	r0, #1
   15400:	movw	r1, #40639	; 0x9ebf
   15404:	movt	r1, #1
   15408:	movw	r3, #40940	; 0x9fec
   1540c:	movt	r3, #1
   15410:	mov	r2, #252	; 0xfc
   15414:	bl	12ab4 <__assert_fail@plt>
   15418:	movw	r0, #40907	; 0x9fcb
   1541c:	movt	r0, #1
   15420:	movw	r1, #40639	; 0x9ebf
   15424:	movt	r1, #1
   15428:	movw	r3, #40940	; 0x9fec
   1542c:	movt	r3, #1
   15430:	mov	r2, #125	; 0x7d
   15434:	bl	12ab4 <__assert_fail@plt>

00015438 <dim_leave_array@@Base>:
   15438:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1543c:	add	fp, sp, #24
   15440:	movw	r0, #49640	; 0xc1e8
   15444:	movt	r0, #2
   15448:	ldr	r1, [r0, #3360]	; 0xd20
   1544c:	cmn	r1, #1
   15450:	ble	15548 <dim_leave_array@@Base+0x110>
   15454:	add	r1, r1, r1, lsl #2
   15458:	add	r6, r0, r1, lsl #4
   1545c:	ldr	r0, [r6, #804]!	; 0x324
   15460:	ldr	r8, [r6, #-4]
   15464:	movw	r5, #53424	; 0xd0b0
   15468:	movt	r5, #2
   1546c:	ldr	r1, [r5]
   15470:	sub	r2, r1, r0
   15474:	str	r2, [r5]
   15478:	cmp	r0, #1
   1547c:	blt	154b4 <dim_leave_array@@Base+0x7c>
   15480:	add	r7, r5, r8, lsl #2
   15484:	mov	r4, #0
   15488:	add	r0, r7, r4, lsl #2
   1548c:	ldr	r1, [r0, #72]	; 0x48
   15490:	cmp	r1, #0
   15494:	beq	154a0 <dim_leave_array@@Base+0x68>
   15498:	ldr	r0, [r0, #108]	; 0x6c
   1549c:	bl	126e8 <free@plt>
   154a0:	add	r4, r4, #1
   154a4:	ldr	r0, [r6]
   154a8:	cmp	r4, r0
   154ac:	blt	15488 <dim_leave_array@@Base+0x50>
   154b0:	ldr	r2, [r5]
   154b4:	mvn	r1, #0
   154b8:	str	r1, [r5, #104]	; 0x68
   154bc:	mov	r1, #0
   154c0:	str	r1, [r5, #68]	; 0x44
   154c4:	cmp	r2, #1
   154c8:	blt	154f4 <dim_leave_array@@Base+0xbc>
   154cc:	ldr	r2, [r5]
   154d0:	mov	r3, #1
   154d4:	add	r7, r5, r1, lsl #2
   154d8:	ldr	r7, [r7, #72]	; 0x48
   154dc:	cmp	r7, #0
   154e0:	strne	r1, [r5, #104]	; 0x68
   154e4:	strne	r3, [r5, #68]	; 0x44
   154e8:	add	r1, r1, #1
   154ec:	cmp	r1, r2
   154f0:	blt	154d4 <dim_leave_array@@Base+0x9c>
   154f4:	add	r0, r8, r0
   154f8:	add	r0, r5, r0, lsl #3
   154fc:	ldr	r1, [r0, #296]	; 0x128
   15500:	ldr	r0, [r0, #300]	; 0x12c
   15504:	subs	r1, r1, #1
   15508:	sbcs	r0, r0, #0
   1550c:	cmpge	r8, #1
   15510:	blt	15544 <dim_leave_array@@Base+0x10c>
   15514:	add	r0, r5, r8, lsl #3
   15518:	add	r5, r0, #168	; 0xa8
   1551c:	add	r6, r0, #176	; 0xb0
   15520:	add	r4, r8, #1
   15524:	ldrd	r0, [r5]
   15528:	ldrd	r2, [r6]
   1552c:	bl	199e8 <main@@Base+0x1adc>
   15530:	strd	r0, [r5]
   15534:	sub	r5, r5, #8
   15538:	sub	r4, r4, #1
   1553c:	cmp	r4, #1
   15540:	bgt	15524 <dim_leave_array@@Base+0xec>
   15544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15548:	movw	r0, #40854	; 0x9f96
   1554c:	movt	r0, #1
   15550:	movw	r1, #40639	; 0x9ebf
   15554:	movt	r1, #1
   15558:	movw	r3, #40884	; 0x9fb4
   1555c:	movt	r3, #1
   15560:	movw	r2, #579	; 0x243
   15564:	bl	12ab4 <__assert_fail@plt>

00015568 <dim_record_field_available@@Base>:
   15568:	mov	r0, #0
   1556c:	mov	r1, #0
   15570:	mov	r2, #0
   15574:	b	15578 <dim_record_field_available@@Base+0x10>
   15578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1557c:	add	fp, sp, #28
   15580:	sub	sp, sp, #12
   15584:	mov	sl, r2
   15588:	mov	r7, r1
   1558c:	mov	r9, r0
   15590:	movw	r8, #49640	; 0xc1e8
   15594:	movt	r8, #2
   15598:	add	r0, r8, #144	; 0x90
   1559c:	add	r1, sp, #8
   155a0:	str	r0, [sp]
   155a4:	bl	12778 <coda_cursor_get_type_class@plt>
   155a8:	cmp	r0, #0
   155ac:	beq	155b4 <dim_record_field_available@@Base+0x4c>
   155b0:	bl	17ec8 <handle_coda_error@@Base>
   155b4:	ldr	r0, [sp, #8]
   155b8:	cmp	r0, #0
   155bc:	beq	15678 <dim_record_field_available@@Base+0x110>
   155c0:	cmp	r0, #1
   155c4:	bne	157a0 <dim_record_field_available@@Base+0x238>
   155c8:	ldr	r0, [r8, #3360]	; 0xd20
   155cc:	cmp	r0, r7
   155d0:	ble	157c0 <dim_record_field_available@@Base+0x258>
   155d4:	add	r0, r7, r7, lsl #2
   155d8:	add	r2, r8, r0, lsl #4
   155dc:	ldr	r3, [r2, #800]	; 0x320
   155e0:	cmp	r7, #0
   155e4:	moveq	r0, #0
   155e8:	streq	r0, [r2, #844]	; 0x34c
   155ec:	mov	r0, r2
   155f0:	ldr	r1, [r0, #804]!	; 0x324
   155f4:	ldrd	r4, [r0, #36]	; 0x24
   155f8:	mul	r5, r4, r5
   155fc:	str	r5, [r0, #120]	; 0x78
   15600:	cmp	r1, #1
   15604:	blt	156f8 <dim_record_field_available@@Base+0x190>
   15608:	ldr	r0, [r0]
   1560c:	add	r0, r0, r3
   15610:	movw	r1, #53424	; 0xd0b0
   15614:	movt	r1, #2
   15618:	add	r1, r1, r3, lsl #2
   1561c:	add	r1, r1, #72	; 0x48
   15620:	add	r2, r2, #844	; 0x34c
   15624:	add	r3, r3, #27
   15628:	mov	r4, #1
   1562c:	ldr	r5, [r1]
   15630:	cmp	r5, #0
   15634:	beq	15648 <dim_record_field_available@@Base+0xe0>
   15638:	ldr	r5, [r2]
   1563c:	ldr	r6, [r1, #36]	; 0x24
   15640:	add	r5, r6, r5, lsl #2
   15644:	b	1564c <dim_record_field_available@@Base+0xe4>
   15648:	sub	r5, r1, #68	; 0x44
   1564c:	ldr	r6, [r5]
   15650:	mul	r4, r6, r4
   15654:	add	r1, r1, #4
   15658:	add	r6, r3, #1
   1565c:	sub	r3, r3, #26
   15660:	cmp	r3, r0
   15664:	mov	r3, r6
   15668:	blt	1562c <dim_record_field_available@@Base+0xc4>
   1566c:	cmp	r4, #1
   15670:	bge	156fc <dim_record_field_available@@Base+0x194>
   15674:	b	15780 <dim_record_field_available@@Base+0x218>
   15678:	add	r4, r8, sl, lsl #2
   1567c:	ldr	r1, [r4, #3492]!	; 0xda4
   15680:	add	r2, sp, #4
   15684:	ldr	r0, [sp]
   15688:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   1568c:	cmp	r0, #0
   15690:	beq	15698 <dim_record_field_available@@Base+0x130>
   15694:	bl	17ec8 <handle_coda_error@@Base>
   15698:	ldr	r0, [sp, #4]
   1569c:	cmp	r0, #0
   156a0:	beq	15780 <dim_record_field_available@@Base+0x218>
   156a4:	ldr	r0, [r8, #3748]	; 0xea4
   156a8:	sub	r0, r0, #1
   156ac:	cmp	r0, sl
   156b0:	beq	15794 <dim_record_field_available@@Base+0x22c>
   156b4:	ldr	r1, [r4]
   156b8:	ldr	r0, [sp]
   156bc:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   156c0:	cmp	r0, #0
   156c4:	beq	156cc <dim_record_field_available@@Base+0x164>
   156c8:	bl	17ec8 <handle_coda_error@@Base>
   156cc:	add	r0, r9, #1
   156d0:	add	r2, sl, #1
   156d4:	mov	r1, r7
   156d8:	bl	15578 <dim_record_field_available@@Base+0x10>
   156dc:	str	r0, [sp, #4]
   156e0:	ldr	r0, [sp]
   156e4:	bl	12850 <coda_cursor_goto_parent@plt>
   156e8:	ldr	r0, [sp, #4]
   156ec:	cmp	r0, #0
   156f0:	bne	15794 <dim_record_field_available@@Base+0x22c>
   156f4:	b	15780 <dim_record_field_available@@Base+0x218>
   156f8:	mov	r4, #1
   156fc:	ldr	r0, [sp]
   15700:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   15704:	cmp	r0, #0
   15708:	beq	15710 <dim_record_field_available@@Base+0x1a8>
   1570c:	bl	17ec8 <handle_coda_error@@Base>
   15710:	add	r7, r7, #1
   15714:	add	r0, r7, r7, lsl #2
   15718:	add	r0, r8, r0, lsl #4
   1571c:	add	r5, r0, #844	; 0x34c
   15720:	sub	r8, r4, #1
   15724:	add	r6, r9, #1
   15728:	mov	r9, #0
   1572c:	mov	r0, r6
   15730:	mov	r1, r7
   15734:	mov	r2, sl
   15738:	bl	15578 <dim_record_field_available@@Base+0x10>
   1573c:	cmp	r0, #0
   15740:	bne	1578c <dim_record_field_available@@Base+0x224>
   15744:	cmp	r9, r8
   15748:	bge	1576c <dim_record_field_available@@Base+0x204>
   1574c:	ldr	r0, [sp]
   15750:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   15754:	cmp	r0, #0
   15758:	beq	15760 <dim_record_field_available@@Base+0x1f8>
   1575c:	bl	17ec8 <handle_coda_error@@Base>
   15760:	ldr	r0, [r5]
   15764:	add	r0, r0, #1
   15768:	str	r0, [r5]
   1576c:	add	r9, r9, #1
   15770:	cmp	r9, r4
   15774:	blt	1572c <dim_record_field_available@@Base+0x1c4>
   15778:	ldr	r0, [sp]
   1577c:	bl	12850 <coda_cursor_goto_parent@plt>
   15780:	mov	r0, #0
   15784:	sub	sp, fp, #28
   15788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1578c:	ldr	r0, [sp]
   15790:	bl	12850 <coda_cursor_goto_parent@plt>
   15794:	mov	r0, #1
   15798:	sub	sp, fp, #28
   1579c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157a0:	movw	r0, #40586	; 0x9e8a
   157a4:	movt	r0, #1
   157a8:	movw	r1, #40639	; 0x9ebf
   157ac:	movt	r1, #1
   157b0:	movw	r3, #41062	; 0xa066
   157b4:	movt	r3, #1
   157b8:	movw	r2, #729	; 0x2d9
   157bc:	bl	12ab4 <__assert_fail@plt>
   157c0:	movw	r0, #41023	; 0xa03f
   157c4:	movt	r0, #1
   157c8:	movw	r1, #40639	; 0x9ebf
   157cc:	movt	r1, #1
   157d0:	movw	r3, #41062	; 0xa066
   157d4:	movt	r3, #1
   157d8:	movw	r2, #638	; 0x27e
   157dc:	bl	12ab4 <__assert_fail@plt>

000157e0 <codadump_filter_create@@Base>:
   157e0:	push	{fp, lr}
   157e4:	mov	fp, sp
   157e8:	sub	sp, sp, #8
   157ec:	mov	r1, #0
   157f0:	str	r1, [sp, #4]
   157f4:	add	r1, sp, #4
   157f8:	bl	15808 <codadump_filter_create@@Base+0x28>
   157fc:	ldr	r0, [sp, #4]
   15800:	mov	sp, fp
   15804:	pop	{fp, pc}
   15808:	push	{r4, r5, r6, r7, fp, lr}
   1580c:	add	fp, sp, #16
   15810:	sub	sp, sp, #8
   15814:	mov	r4, r1
   15818:	mov	r1, #0
   1581c:	stm	sp, {r0, r1}
   15820:	cmp	r0, #0
   15824:	beq	15878 <codadump_filter_create@@Base+0x98>
   15828:	ldr	r0, [sp]
   1582c:	ldrb	r1, [r0]
   15830:	cmp	r1, #0
   15834:	beq	15878 <codadump_filter_create@@Base+0x98>
   15838:	add	r5, sp, #4
   1583c:	mov	r6, sp
   15840:	mov	r7, #0
   15844:	mov	r1, r5
   15848:	mov	r2, r6
   1584c:	bl	159bc <codadump_filter_get_next_filter@@Base+0x34>
   15850:	ldr	r1, [sp, #4]
   15854:	cmp	r1, #0
   15858:	beq	15880 <codadump_filter_create@@Base+0xa0>
   1585c:	mov	r0, r4
   15860:	bl	15c1c <codadump_filter_get_next_filter@@Base+0x294>
   15864:	str	r7, [sp, #4]
   15868:	ldr	r0, [sp]
   1586c:	ldrb	r1, [r0]
   15870:	cmp	r1, #0
   15874:	bne	15844 <codadump_filter_create@@Base+0x64>
   15878:	sub	sp, fp, #16
   1587c:	pop	{r4, r5, r6, r7, fp, pc}
   15880:	mov	r0, r4
   15884:	bl	15890 <codadump_filter_remove@@Base>
   15888:	sub	sp, fp, #16
   1588c:	pop	{r4, r5, r6, r7, fp, pc}

00015890 <codadump_filter_remove@@Base>:
   15890:	push	{r4, sl, fp, lr}
   15894:	add	fp, sp, #8
   15898:	cmp	r0, #0
   1589c:	beq	15900 <codadump_filter_remove@@Base+0x70>
   158a0:	mov	r4, r0
   158a4:	ldr	r0, [r0]
   158a8:	cmp	r0, #0
   158ac:	popeq	{r4, sl, fp, pc}
   158b0:	ldr	r1, [r0, #8]!
   158b4:	cmp	r1, #0
   158b8:	blne	15890 <codadump_filter_remove@@Base>
   158bc:	ldr	r0, [r4]
   158c0:	ldr	r1, [r0, #4]!
   158c4:	cmp	r1, #0
   158c8:	blne	15890 <codadump_filter_remove@@Base>
   158cc:	ldr	r0, [r4]
   158d0:	ldr	r0, [r0]
   158d4:	cmp	r0, #0
   158d8:	beq	158ec <codadump_filter_remove@@Base+0x5c>
   158dc:	bl	126e8 <free@plt>
   158e0:	ldr	r0, [r4]
   158e4:	mov	r1, #0
   158e8:	str	r1, [r0]
   158ec:	ldr	r0, [r4]
   158f0:	bl	126e8 <free@plt>
   158f4:	mov	r0, #0
   158f8:	str	r0, [r4]
   158fc:	pop	{r4, sl, fp, pc}
   15900:	movw	r0, #41115	; 0xa09b
   15904:	movt	r0, #1
   15908:	movw	r1, #41130	; 0xa0aa
   1590c:	movt	r1, #1
   15910:	movw	r3, #41206	; 0xa0f6
   15914:	movt	r3, #1
   15918:	mov	r2, #192	; 0xc0
   1591c:	bl	12ab4 <__assert_fail@plt>

00015920 <codadump_filter_get_fieldname@@Base>:
   15920:	cmp	r0, #0
   15924:	ldrne	r0, [r0]
   15928:	bxne	lr
   1592c:	push	{fp, lr}
   15930:	mov	fp, sp
   15934:	movw	r0, #41115	; 0xa09b
   15938:	movt	r0, #1
   1593c:	movw	r1, #41130	; 0xa0aa
   15940:	movt	r1, #1
   15944:	movw	r3, #41254	; 0xa126
   15948:	movt	r3, #1
   1594c:	mov	r2, #216	; 0xd8
   15950:	bl	12ab4 <__assert_fail@plt>

00015954 <codadump_filter_get_subfilter@@Base>:
   15954:	cmp	r0, #0
   15958:	ldrne	r0, [r0, #4]
   1595c:	bxne	lr
   15960:	push	{fp, lr}
   15964:	mov	fp, sp
   15968:	movw	r0, #41115	; 0xa09b
   1596c:	movt	r0, #1
   15970:	movw	r1, #41130	; 0xa0aa
   15974:	movt	r1, #1
   15978:	movw	r3, #41315	; 0xa163
   1597c:	movt	r3, #1
   15980:	mov	r2, #223	; 0xdf
   15984:	bl	12ab4 <__assert_fail@plt>

00015988 <codadump_filter_get_next_filter@@Base>:
   15988:	cmp	r0, #0
   1598c:	ldrne	r0, [r0, #8]
   15990:	bxne	lr
   15994:	push	{fp, lr}
   15998:	mov	fp, sp
   1599c:	movw	r0, #41115	; 0xa09b
   159a0:	movt	r0, #1
   159a4:	movw	r1, #41130	; 0xa0aa
   159a8:	movt	r1, #1
   159ac:	movw	r3, #41381	; 0xa1a5
   159b0:	movt	r3, #1
   159b4:	mov	r2, #230	; 0xe6
   159b8:	bl	12ab4 <__assert_fail@plt>
   159bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   159c0:	add	fp, sp, #24
   159c4:	sub	sp, sp, #8
   159c8:	cmp	r0, #0
   159cc:	beq	15bbc <codadump_filter_get_next_filter@@Base+0x234>
   159d0:	mov	r4, r1
   159d4:	cmp	r1, #0
   159d8:	beq	15bdc <codadump_filter_get_next_filter@@Base+0x254>
   159dc:	mov	r8, r2
   159e0:	cmp	r2, #0
   159e4:	beq	15bfc <codadump_filter_get_next_filter@@Base+0x274>
   159e8:	mov	r6, r0
   159ec:	mov	r0, #1
   159f0:	movw	r5, #3
   159f4:	movt	r5, #128	; 0x80
   159f8:	b	15a00 <codadump_filter_get_next_filter@@Base+0x78>
   159fc:	add	r6, r6, #1
   15a00:	ldrb	r1, [r6]
   15a04:	sub	r1, r1, #9
   15a08:	cmp	r1, #23
   15a0c:	bhi	15a18 <codadump_filter_get_next_filter@@Base+0x90>
   15a10:	tst	r5, r0, lsl r1
   15a14:	bne	159fc <codadump_filter_get_next_filter@@Base+0x74>
   15a18:	mov	r7, #0
   15a1c:	mov	r0, #1
   15a20:	movw	r1, #32773	; 0x8005
   15a24:	b	15a2c <codadump_filter_get_next_filter@@Base+0xa4>
   15a28:	add	r7, r7, #1
   15a2c:	ldrb	r2, [r6, r7]
   15a30:	sub	r3, r2, #44	; 0x2c
   15a34:	cmp	r3, #15
   15a38:	bhi	15a44 <codadump_filter_get_next_filter@@Base+0xbc>
   15a3c:	tst	r1, r0, lsl r3
   15a40:	bne	15a4c <codadump_filter_get_next_filter@@Base+0xc4>
   15a44:	cmp	r2, #0
   15a48:	bne	15a28 <codadump_filter_get_next_filter@@Base+0xa0>
   15a4c:	cmp	r7, #0
   15a50:	beq	15b60 <codadump_filter_get_next_filter@@Base+0x1d8>
   15a54:	mov	r0, #12
   15a58:	bl	12820 <malloc@plt>
   15a5c:	str	r0, [r4]
   15a60:	cmp	r0, #0
   15a64:	bne	15a90 <codadump_filter_get_next_filter@@Base+0x108>
   15a68:	mov	r0, #69	; 0x45
   15a6c:	str	r0, [sp]
   15a70:	movw	r1, #40041	; 0x9c69
   15a74:	movt	r1, #1
   15a78:	movw	r3, #41130	; 0xa0aa
   15a7c:	movt	r3, #1
   15a80:	mvn	r0, #0
   15a84:	mov	r2, #12
   15a88:	bl	126a0 <coda_set_error@plt>
   15a8c:	bl	17ec8 <handle_coda_error@@Base>
   15a90:	add	r9, r7, #1
   15a94:	mov	r0, r9
   15a98:	bl	12820 <malloc@plt>
   15a9c:	ldr	r1, [r4]
   15aa0:	str	r0, [r1]
   15aa4:	ldr	r0, [r4]
   15aa8:	ldr	r0, [r0]
   15aac:	cmp	r0, #0
   15ab0:	bne	15adc <codadump_filter_get_next_filter@@Base+0x154>
   15ab4:	mov	r0, #76	; 0x4c
   15ab8:	str	r0, [sp]
   15abc:	movw	r1, #41546	; 0xa24a
   15ac0:	movt	r1, #1
   15ac4:	movw	r3, #41130	; 0xa0aa
   15ac8:	movt	r3, #1
   15acc:	mvn	r0, #0
   15ad0:	mov	r2, r9
   15ad4:	bl	126a0 <coda_set_error@plt>
   15ad8:	bl	17ec8 <handle_coda_error@@Base>
   15adc:	add	r9, r6, r7
   15ae0:	ldr	r0, [r4]
   15ae4:	ldr	r0, [r0]
   15ae8:	mov	r1, r6
   15aec:	mov	r2, r7
   15af0:	bl	1291c <strncpy@plt>
   15af4:	ldr	r0, [r4]
   15af8:	mov	r1, #0
   15afc:	str	r1, [r0, #4]
   15b00:	ldr	r0, [r4]
   15b04:	str	r1, [r0, #8]
   15b08:	ldr	r0, [r4]
   15b0c:	ldr	r0, [r0]
   15b10:	add	r0, r0, r7
   15b14:	mov	r1, #1
   15b18:	b	15b20 <codadump_filter_get_next_filter@@Base+0x198>
   15b1c:	sub	r0, r0, #1
   15b20:	ldrb	r2, [r0, #-1]
   15b24:	sub	r2, r2, #9
   15b28:	cmp	r2, #23
   15b2c:	bhi	15b38 <codadump_filter_get_next_filter@@Base+0x1b0>
   15b30:	tst	r5, r1, lsl r2
   15b34:	bne	15b1c <codadump_filter_get_next_filter@@Base+0x194>
   15b38:	mov	r1, #0
   15b3c:	strb	r1, [r0]
   15b40:	ldrb	r0, [r9]
   15b44:	cmp	r0, #44	; 0x2c
   15b48:	cmpne	r0, #59	; 0x3b
   15b4c:	bne	15b70 <codadump_filter_get_next_filter@@Base+0x1e8>
   15b50:	add	r0, r9, #1
   15b54:	str	r0, [r8]
   15b58:	sub	sp, fp, #24
   15b5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b60:	mov	r0, #0
   15b64:	str	r0, [r4]
   15b68:	sub	sp, fp, #24
   15b6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b70:	cmp	r0, #46	; 0x2e
   15b74:	strne	r9, [r8]
   15b78:	subne	sp, fp, #24
   15b7c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b80:	add	r0, r9, #1
   15b84:	ldr	r1, [r4]
   15b88:	add	r1, r1, #4
   15b8c:	mov	r2, r8
   15b90:	bl	159bc <codadump_filter_get_next_filter@@Base+0x34>
   15b94:	ldr	r0, [r4]
   15b98:	ldr	r0, [r0, #4]
   15b9c:	cmp	r0, #0
   15ba0:	beq	15bac <codadump_filter_get_next_filter@@Base+0x224>
   15ba4:	sub	sp, fp, #24
   15ba8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15bac:	mov	r0, r4
   15bb0:	sub	sp, fp, #24
   15bb4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15bb8:	b	15890 <codadump_filter_remove@@Base>
   15bbc:	movw	r0, #41449	; 0xa1e9
   15bc0:	movt	r0, #1
   15bc4:	movw	r1, #41130	; 0xa0aa
   15bc8:	movt	r1, #1
   15bcc:	movw	r3, #41469	; 0xa1fd
   15bd0:	movt	r3, #1
   15bd4:	mov	r2, #44	; 0x2c
   15bd8:	bl	12ab4 <__assert_fail@plt>
   15bdc:	movw	r0, #41115	; 0xa09b
   15be0:	movt	r0, #1
   15be4:	movw	r1, #41130	; 0xa0aa
   15be8:	movt	r1, #1
   15bec:	movw	r3, #41469	; 0xa1fd
   15bf0:	movt	r3, #1
   15bf4:	mov	r2, #45	; 0x2d
   15bf8:	bl	12ab4 <__assert_fail@plt>
   15bfc:	movw	r0, #41533	; 0xa23d
   15c00:	movt	r0, #1
   15c04:	movw	r1, #41130	; 0xa0aa
   15c08:	movt	r1, #1
   15c0c:	movw	r3, #41469	; 0xa1fd
   15c10:	movt	r3, #1
   15c14:	mov	r2, #46	; 0x2e
   15c18:	bl	12ab4 <__assert_fail@plt>
   15c1c:	push	{r4, r5, fp, lr}
   15c20:	add	fp, sp, #8
   15c24:	sub	sp, sp, #8
   15c28:	str	r1, [sp, #4]
   15c2c:	cmp	r0, #0
   15c30:	beq	15cd8 <codadump_filter_get_next_filter@@Base+0x350>
   15c34:	mov	r4, r1
   15c38:	cmp	r1, #0
   15c3c:	beq	15cbc <codadump_filter_get_next_filter@@Base+0x334>
   15c40:	ldr	r5, [r0]
   15c44:	cmp	r5, #0
   15c48:	streq	r4, [r0]
   15c4c:	subeq	sp, fp, #8
   15c50:	popeq	{r4, r5, fp, pc}
   15c54:	ldr	r1, [r4]
   15c58:	ldr	r0, [r5]
   15c5c:	bl	12664 <strcmp@plt>
   15c60:	cmp	r0, #0
   15c64:	beq	15c88 <codadump_filter_get_next_filter@@Base+0x300>
   15c68:	ldr	r0, [r5, #8]!
   15c6c:	cmp	r0, #0
   15c70:	beq	15cb8 <codadump_filter_get_next_filter@@Base+0x330>
   15c74:	mov	r0, r5
   15c78:	mov	r1, r4
   15c7c:	sub	sp, fp, #8
   15c80:	pop	{r4, r5, fp, lr}
   15c84:	b	15c1c <codadump_filter_get_next_filter@@Base+0x294>
   15c88:	ldr	r0, [r5, #4]!
   15c8c:	cmp	r0, #0
   15c90:	beq	15cc8 <codadump_filter_get_next_filter@@Base+0x340>
   15c94:	ldr	r1, [r4, #4]
   15c98:	mov	r0, r5
   15c9c:	cmp	r1, #0
   15ca0:	beq	15cc4 <codadump_filter_get_next_filter@@Base+0x33c>
   15ca4:	bl	15c1c <codadump_filter_get_next_filter@@Base+0x294>
   15ca8:	ldr	r0, [sp, #4]
   15cac:	mov	r1, #0
   15cb0:	str	r1, [r0, #4]
   15cb4:	b	15cc8 <codadump_filter_get_next_filter@@Base+0x340>
   15cb8:	str	r4, [r5]
   15cbc:	sub	sp, fp, #8
   15cc0:	pop	{r4, r5, fp, pc}
   15cc4:	bl	15890 <codadump_filter_remove@@Base>
   15cc8:	add	r0, sp, #4
   15ccc:	bl	15890 <codadump_filter_remove@@Base>
   15cd0:	sub	sp, fp, #8
   15cd4:	pop	{r4, r5, fp, pc}
   15cd8:	movw	r0, #41115	; 0xa09b
   15cdc:	movt	r0, #1
   15ce0:	movw	r1, #41130	; 0xa0aa
   15ce4:	movt	r1, #1
   15ce8:	movw	r3, #41598	; 0xa27e
   15cec:	movt	r3, #1
   15cf0:	mov	r2, #117	; 0x75
   15cf4:	bl	12ab4 <__assert_fail@plt>

00015cf8 <print_json_data@@Base>:
   15cf8:	push	{r4, sl, fp, lr}
   15cfc:	add	fp, sp, #8
   15d00:	sub	sp, sp, #528	; 0x210
   15d04:	movw	r1, #49604	; 0xc1c4
   15d08:	movt	r1, #2
   15d0c:	str	r0, [r1]
   15d10:	movw	r4, #49640	; 0xc1e8
   15d14:	movt	r4, #2
   15d18:	ldr	r0, [r4]
   15d1c:	sub	r1, fp, #12
   15d20:	bl	126ac <coda_open@plt>
   15d24:	cmp	r0, #0
   15d28:	beq	15d68 <print_json_data@@Base+0x70>
   15d2c:	bl	12a60 <coda_get_errno@plt>
   15d30:	ldr	r0, [r0]
   15d34:	cmn	r0, #21
   15d38:	bne	15d64 <print_json_data@@Base+0x6c>
   15d3c:	mov	r0, #0
   15d40:	bl	126f4 <coda_set_option_use_mmap@plt>
   15d44:	ldr	r0, [r4]
   15d48:	sub	r1, fp, #12
   15d4c:	bl	126ac <coda_open@plt>
   15d50:	mov	r4, r0
   15d54:	mov	r0, #1
   15d58:	bl	126f4 <coda_set_option_use_mmap@plt>
   15d5c:	cmp	r4, #0
   15d60:	beq	15d68 <print_json_data@@Base+0x70>
   15d64:	bl	17ec8 <handle_coda_error@@Base>
   15d68:	ldr	r1, [fp, #-12]
   15d6c:	mov	r0, sp
   15d70:	bl	127d8 <coda_cursor_set_product@plt>
   15d74:	cmp	r0, #0
   15d78:	beq	15d80 <print_json_data@@Base+0x88>
   15d7c:	bl	17ec8 <handle_coda_error@@Base>
   15d80:	movw	r0, #53416	; 0xd0a8
   15d84:	movt	r0, #2
   15d88:	ldr	r1, [r0]
   15d8c:	cmp	r1, #0
   15d90:	beq	15da8 <print_json_data@@Base+0xb0>
   15d94:	mov	r0, sp
   15d98:	bl	129b8 <coda_cursor_goto@plt>
   15d9c:	cmp	r0, #0
   15da0:	beq	15da8 <print_json_data@@Base+0xb0>
   15da4:	bl	17ec8 <handle_coda_error@@Base>
   15da8:	mov	r0, #0
   15dac:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   15db0:	mov	r0, sp
   15db4:	bl	15dd4 <print_json_data@@Base+0xdc>
   15db8:	movw	r0, #42627	; 0xa683
   15dbc:	movt	r0, #1
   15dc0:	bl	165bc <print_json_data@@Base+0x8c4>
   15dc4:	ldr	r0, [fp, #-12]
   15dc8:	bl	12994 <coda_close@plt>
   15dcc:	sub	sp, fp, #8
   15dd0:	pop	{r4, sl, fp, pc}
   15dd4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15dd8:	add	fp, sp, #24
   15ddc:	sub	sp, sp, #72	; 0x48
   15de0:	mov	r4, r0
   15de4:	mov	r0, #0
   15de8:	str	r0, [fp, #-32]	; 0xffffffe0
   15dec:	movw	r0, #49604	; 0xc1c4
   15df0:	movt	r0, #2
   15df4:	ldr	r0, [r0]
   15df8:	cmp	r0, #0
   15dfc:	beq	15e60 <print_json_data@@Base+0x168>
   15e00:	sub	r1, fp, #32
   15e04:	mov	r0, r4
   15e08:	bl	1276c <coda_cursor_has_attributes@plt>
   15e0c:	cmp	r0, #0
   15e10:	beq	15e18 <print_json_data@@Base+0x120>
   15e14:	bl	17ec8 <handle_coda_error@@Base>
   15e18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e1c:	cmp	r0, #0
   15e20:	beq	15e60 <print_json_data@@Base+0x168>
   15e24:	movw	r0, #41653	; 0xa2b5
   15e28:	movt	r0, #1
   15e2c:	bl	165bc <print_json_data@@Base+0x8c4>
   15e30:	mov	r0, r4
   15e34:	bl	128ec <coda_cursor_goto_attributes@plt>
   15e38:	cmp	r0, #0
   15e3c:	beq	15e44 <print_json_data@@Base+0x14c>
   15e40:	bl	17ec8 <handle_coda_error@@Base>
   15e44:	mov	r0, r4
   15e48:	bl	15dd4 <print_json_data@@Base+0xdc>
   15e4c:	mov	r0, r4
   15e50:	bl	12850 <coda_cursor_goto_parent@plt>
   15e54:	movw	r0, #41662	; 0xa2be
   15e58:	movt	r0, #1
   15e5c:	bl	165bc <print_json_data@@Base+0x8c4>
   15e60:	sub	r1, fp, #28
   15e64:	mov	r0, r4
   15e68:	bl	12778 <coda_cursor_get_type_class@plt>
   15e6c:	cmp	r0, #0
   15e70:	beq	15e78 <print_json_data@@Base+0x180>
   15e74:	bl	17ec8 <handle_coda_error@@Base>
   15e78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e7c:	cmp	r0, #6
   15e80:	bhi	1655c <print_json_data@@Base+0x864>
   15e84:	add	r1, pc, #0
   15e88:	ldr	pc, [r1, r0, lsl #2]
   15e8c:	andeq	r5, r1, ip, lsr pc
   15e90:	andeq	r6, r1, r0, lsl r0
   15e94:	andeq	r5, r1, r8, lsr #29
   15e98:	andeq	r5, r1, r8, lsr #29
   15e9c:	andeq	r5, r1, r8, lsr #29
   15ea0:	andeq	r5, r1, r8, lsr #29
   15ea4:	ldrdeq	r6, [r1], -ip
   15ea8:	sub	r1, fp, #36	; 0x24
   15eac:	mov	r0, r4
   15eb0:	bl	12814 <coda_cursor_get_read_type@plt>
   15eb4:	cmp	r0, #0
   15eb8:	beq	15ec0 <print_json_data@@Base+0x1c8>
   15ebc:	bl	17ec8 <handle_coda_error@@Base>
   15ec0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ec4:	add	r0, r0, #1
   15ec8:	cmp	r0, #13
   15ecc:	bhi	1655c <print_json_data@@Base+0x864>
   15ed0:	add	r1, pc, #0
   15ed4:	ldr	pc, [r1, r0, lsl #2]
   15ed8:	andeq	r6, r1, r8, lsl r1
   15edc:	andeq	r5, r1, r0, lsl pc
   15ee0:	andeq	r6, r1, r8, lsr #2
   15ee4:	andeq	r5, r1, r0, lsl pc
   15ee8:	andeq	r6, r1, r8, lsr #2
   15eec:	andeq	r5, r1, r0, lsl pc
   15ef0:	andeq	r6, r1, r8, lsr #2
   15ef4:	andeq	r6, r1, ip, lsl #3
   15ef8:			; <UNDEFINED> instruction: 0x000161bc
   15efc:	andeq	r6, r1, r4, asr r1
   15f00:	andeq	r6, r1, r4, asr r1
   15f04:	strdeq	r6, [r1], -ip
   15f08:	andeq	r6, r1, ip, lsr r2
   15f0c:	andeq	r6, r1, ip, ror #5
   15f10:	add	r1, sp, #16
   15f14:	mov	r0, r4
   15f18:	bl	12a3c <coda_cursor_read_int32@plt>
   15f1c:	cmp	r0, #0
   15f20:	beq	15f28 <print_json_data@@Base+0x230>
   15f24:	bl	17ec8 <handle_coda_error@@Base>
   15f28:	ldr	r1, [sp, #16]
   15f2c:	movw	r0, #41848	; 0xa378
   15f30:	movt	r0, #1
   15f34:	bl	165bc <print_json_data@@Base+0x8c4>
   15f38:	b	1655c <print_json_data@@Base+0x864>
   15f3c:	movw	r0, #41671	; 0xa2c7
   15f40:	movt	r0, #1
   15f44:	bl	165bc <print_json_data@@Base+0x8c4>
   15f48:	add	r1, sp, #16
   15f4c:	mov	r0, r4
   15f50:	bl	126d0 <coda_cursor_get_num_elements@plt>
   15f54:	cmp	r0, #0
   15f58:	beq	15f60 <print_json_data@@Base+0x268>
   15f5c:	bl	17ec8 <handle_coda_error@@Base>
   15f60:	ldr	r0, [sp, #16]
   15f64:	cmp	r0, #1
   15f68:	blt	164a8 <print_json_data@@Base+0x7b0>
   15f6c:	add	r1, sp, #8
   15f70:	mov	r0, r4
   15f74:	bl	12730 <coda_cursor_get_type@plt>
   15f78:	cmp	r0, #0
   15f7c:	beq	15f84 <print_json_data@@Base+0x28c>
   15f80:	bl	17ec8 <handle_coda_error@@Base>
   15f84:	ldr	r0, [sp, #8]
   15f88:	sub	r1, fp, #36	; 0x24
   15f8c:	bl	12934 <coda_type_get_record_union_status@plt>
   15f90:	cmp	r0, #0
   15f94:	beq	15f9c <print_json_data@@Base+0x2a4>
   15f98:	bl	17ec8 <handle_coda_error@@Base>
   15f9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15fa0:	cmp	r0, #0
   15fa4:	beq	163b4 <print_json_data@@Base+0x6bc>
   15fa8:	sub	r1, fp, #40	; 0x28
   15fac:	mov	r0, r4
   15fb0:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   15fb4:	cmp	r0, #0
   15fb8:	beq	15fc0 <print_json_data@@Base+0x2c8>
   15fbc:	bl	17ec8 <handle_coda_error@@Base>
   15fc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15fc4:	ldr	r0, [sp, #8]
   15fc8:	sub	r2, fp, #44	; 0x2c
   15fcc:	bl	12a78 <coda_type_get_record_field_name@plt>
   15fd0:	cmp	r0, #0
   15fd4:	beq	15fdc <print_json_data@@Base+0x2e4>
   15fd8:	bl	17ec8 <handle_coda_error@@Base>
   15fdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15fe0:	mov	r0, r4
   15fe4:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15fe8:	cmp	r0, #0
   15fec:	beq	15ff4 <print_json_data@@Base+0x2fc>
   15ff0:	bl	17ec8 <handle_coda_error@@Base>
   15ff4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ff8:	movw	r0, #41673	; 0xa2c9
   15ffc:	movt	r0, #1
   16000:	bl	165bc <print_json_data@@Base+0x8c4>
   16004:	mov	r0, r4
   16008:	bl	15dd4 <print_json_data@@Base+0xdc>
   1600c:	b	164a0 <print_json_data@@Base+0x7a8>
   16010:	movw	r0, #41842	; 0xa372
   16014:	movt	r0, #1
   16018:	bl	165bc <print_json_data@@Base+0x8c4>
   1601c:	add	r1, sp, #8
   16020:	add	r5, sp, #16
   16024:	mov	r0, r4
   16028:	mov	r2, r5
   1602c:	bl	1297c <coda_cursor_get_array_dim@plt>
   16030:	cmp	r0, #0
   16034:	beq	1603c <print_json_data@@Base+0x344>
   16038:	bl	17ec8 <handle_coda_error@@Base>
   1603c:	ldr	r0, [sp, #8]
   16040:	cmp	r0, #0
   16044:	blt	160cc <print_json_data@@Base+0x3d4>
   16048:	mov	r6, #1
   1604c:	beq	16068 <print_json_data@@Base+0x370>
   16050:	ldr	r1, [r5], #4
   16054:	mul	r6, r1, r6
   16058:	subs	r0, r0, #1
   1605c:	bne	16050 <print_json_data@@Base+0x358>
   16060:	cmp	r6, #1
   16064:	blt	160cc <print_json_data@@Base+0x3d4>
   16068:	mov	r0, r4
   1606c:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   16070:	cmp	r0, #0
   16074:	beq	1607c <print_json_data@@Base+0x384>
   16078:	bl	17ec8 <handle_coda_error@@Base>
   1607c:	sub	r7, r6, #1
   16080:	mov	r5, #0
   16084:	movw	r8, #40760	; 0x9f38
   16088:	movt	r8, #1
   1608c:	mov	r0, r4
   16090:	bl	15dd4 <print_json_data@@Base+0xdc>
   16094:	cmp	r5, r7
   16098:	bge	160b8 <print_json_data@@Base+0x3c0>
   1609c:	mov	r0, r8
   160a0:	bl	165bc <print_json_data@@Base+0x8c4>
   160a4:	mov	r0, r4
   160a8:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   160ac:	cmp	r0, #0
   160b0:	beq	160b8 <print_json_data@@Base+0x3c0>
   160b4:	bl	17ec8 <handle_coda_error@@Base>
   160b8:	add	r5, r5, #1
   160bc:	cmp	r6, r5
   160c0:	bne	1608c <print_json_data@@Base+0x394>
   160c4:	mov	r0, r4
   160c8:	bl	12850 <coda_cursor_goto_parent@plt>
   160cc:	movw	r0, #42080	; 0xa460
   160d0:	movt	r0, #1
   160d4:	bl	165bc <print_json_data@@Base+0x8c4>
   160d8:	b	1655c <print_json_data@@Base+0x864>
   160dc:	sub	r1, fp, #36	; 0x24
   160e0:	mov	r0, r4
   160e4:	bl	127b4 <coda_cursor_get_special_type@plt>
   160e8:	cmp	r0, #0
   160ec:	beq	160f4 <print_json_data@@Base+0x3fc>
   160f0:	bl	17ec8 <handle_coda_error@@Base>
   160f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   160f8:	cmp	r0, #3
   160fc:	bhi	1655c <print_json_data@@Base+0x864>
   16100:	add	r1, pc, #0
   16104:	ldr	pc, [r1, r0, lsl #2]
   16108:	andeq	r6, r1, r8, lsl r1
   1610c:			; <UNDEFINED> instruction: 0x000164b8
   16110:	ldrdeq	r6, [r1], -r8
   16114:	andeq	r6, r1, r4, lsr #10
   16118:	movw	r0, #41755	; 0xa31b
   1611c:	movt	r0, #1
   16120:	bl	165bc <print_json_data@@Base+0x8c4>
   16124:	b	1655c <print_json_data@@Base+0x864>
   16128:	add	r1, sp, #16
   1612c:	mov	r0, r4
   16130:	bl	1270c <coda_cursor_read_uint32@plt>
   16134:	cmp	r0, #0
   16138:	beq	16140 <print_json_data@@Base+0x448>
   1613c:	bl	17ec8 <handle_coda_error@@Base>
   16140:	ldr	r1, [sp, #16]
   16144:	movw	r0, #40199	; 0x9d07
   16148:	movt	r0, #1
   1614c:	bl	165bc <print_json_data@@Base+0x8c4>
   16150:	b	1655c <print_json_data@@Base+0x864>
   16154:	add	r1, sp, #16
   16158:	mov	r0, r4
   1615c:	bl	12898 <coda_cursor_read_double@plt>
   16160:	cmp	r0, #0
   16164:	beq	1616c <print_json_data@@Base+0x474>
   16168:	bl	17ec8 <handle_coda_error@@Base>
   1616c:	vldr	d16, [sp, #16]
   16170:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16174:	vmov	r2, r3, d16
   16178:	cmp	r0, #8
   1617c:	bne	16518 <print_json_data@@Base+0x820>
   16180:	movw	r0, #40203	; 0x9d0b
   16184:	movt	r0, #1
   16188:	b	16558 <print_json_data@@Base+0x860>
   1618c:	add	r1, sp, #8
   16190:	mov	r0, r4
   16194:	bl	129a0 <coda_cursor_read_int64@plt>
   16198:	cmp	r0, #0
   1619c:	beq	161a4 <print_json_data@@Base+0x4ac>
   161a0:	bl	17ec8 <handle_coda_error@@Base>
   161a4:	ldr	r0, [sp, #8]
   161a8:	ldr	r1, [sp, #12]
   161ac:	add	r4, sp, #16
   161b0:	mov	r2, r4
   161b4:	bl	12aa8 <coda_str64@plt>
   161b8:	b	161e8 <print_json_data@@Base+0x4f0>
   161bc:	add	r1, sp, #8
   161c0:	mov	r0, r4
   161c4:	bl	1288c <coda_cursor_read_uint64@plt>
   161c8:	cmp	r0, #0
   161cc:	beq	161d4 <print_json_data@@Base+0x4dc>
   161d0:	bl	17ec8 <handle_coda_error@@Base>
   161d4:	ldr	r0, [sp, #8]
   161d8:	ldr	r1, [sp, #12]
   161dc:	add	r4, sp, #16
   161e0:	mov	r2, r4
   161e4:	bl	126dc <coda_str64u@plt>
   161e8:	movw	r0, #42017	; 0xa421
   161ec:	movt	r0, #1
   161f0:	mov	r1, r4
   161f4:	bl	165bc <print_json_data@@Base+0x8c4>
   161f8:	b	1655c <print_json_data@@Base+0x864>
   161fc:	add	r1, sp, #16
   16200:	mov	r0, r4
   16204:	bl	128f8 <coda_cursor_read_char@plt>
   16208:	cmp	r0, #0
   1620c:	beq	16214 <print_json_data@@Base+0x51c>
   16210:	bl	17ec8 <handle_coda_error@@Base>
   16214:	movw	r4, #41828	; 0xa364
   16218:	movt	r4, #1
   1621c:	mov	r0, r4
   16220:	bl	165bc <print_json_data@@Base+0x8c4>
   16224:	add	r0, sp, #16
   16228:	mov	r1, #1
   1622c:	bl	16604 <print_json_data@@Base+0x90c>
   16230:	mov	r0, r4
   16234:	bl	165bc <print_json_data@@Base+0x8c4>
   16238:	b	1655c <print_json_data@@Base+0x864>
   1623c:	add	r1, sp, #16
   16240:	mov	r0, r4
   16244:	bl	12880 <coda_cursor_get_string_length@plt>
   16248:	cmp	r0, #0
   1624c:	beq	16254 <print_json_data@@Base+0x55c>
   16250:	bl	17ec8 <handle_coda_error@@Base>
   16254:	ldr	r0, [sp, #16]
   16258:	add	r6, r0, #1
   1625c:	mov	r0, r6
   16260:	bl	12820 <malloc@plt>
   16264:	mov	r5, r0
   16268:	cmp	r0, #0
   1626c:	bne	16298 <print_json_data@@Base+0x5a0>
   16270:	movw	r0, #303	; 0x12f
   16274:	str	r0, [sp]
   16278:	movw	r1, #40041	; 0x9c69
   1627c:	movt	r1, #1
   16280:	movw	r3, #41681	; 0xa2d1
   16284:	movt	r3, #1
   16288:	mvn	r0, #0
   1628c:	mov	r2, r6
   16290:	bl	126a0 <coda_set_error@plt>
   16294:	bl	17ec8 <handle_coda_error@@Base>
   16298:	ldr	r0, [sp, #16]
   1629c:	add	r2, r0, #1
   162a0:	mov	r0, r4
   162a4:	mov	r1, r5
   162a8:	bl	12844 <coda_cursor_read_string@plt>
   162ac:	cmp	r0, #0
   162b0:	beq	162b8 <print_json_data@@Base+0x5c0>
   162b4:	bl	17ec8 <handle_coda_error@@Base>
   162b8:	movw	r4, #41828	; 0xa364
   162bc:	movt	r4, #1
   162c0:	mov	r0, r4
   162c4:	bl	165bc <print_json_data@@Base+0x8c4>
   162c8:	ldr	r1, [sp, #16]
   162cc:	mov	r0, r5
   162d0:	bl	16604 <print_json_data@@Base+0x90c>
   162d4:	ldr	r1, [sp, #16]
   162d8:	mov	r0, r4
   162dc:	bl	165bc <print_json_data@@Base+0x8c4>
   162e0:	mov	r0, r5
   162e4:	bl	126e8 <free@plt>
   162e8:	b	1655c <print_json_data@@Base+0x864>
   162ec:	add	r1, sp, #16
   162f0:	mov	r0, r4
   162f4:	bl	12a00 <coda_cursor_get_bit_size@plt>
   162f8:	cmp	r0, #0
   162fc:	beq	16304 <print_json_data@@Base+0x60c>
   16300:	bl	17ec8 <handle_coda_error@@Base>
   16304:	ldr	r0, [sp, #16]
   16308:	ldr	r1, [sp, #20]
   1630c:	lsr	r2, r0, #3
   16310:	orr	r5, r2, r1, lsl #29
   16314:	tst	r0, #7
   16318:	addne	r5, r5, #1
   1631c:	mov	r0, r5
   16320:	bl	12820 <malloc@plt>
   16324:	mov	r6, r0
   16328:	cmp	r0, #0
   1632c:	bne	16358 <print_json_data@@Base+0x660>
   16330:	movw	r0, #334	; 0x14e
   16334:	str	r0, [sp]
   16338:	movw	r1, #40041	; 0x9c69
   1633c:	movt	r1, #1
   16340:	movw	r3, #41681	; 0xa2d1
   16344:	movt	r3, #1
   16348:	mvn	r0, #0
   1634c:	mov	r2, r5
   16350:	bl	126a0 <coda_set_error@plt>
   16354:	bl	17ec8 <handle_coda_error@@Base>
   16358:	ldr	r0, [sp, #16]
   1635c:	ldr	r1, [sp, #20]
   16360:	stm	sp, {r0, r1}
   16364:	mov	r0, r4
   16368:	mov	r1, r6
   1636c:	mov	r2, #0
   16370:	mov	r3, #0
   16374:	bl	12a9c <coda_cursor_read_bits@plt>
   16378:	cmp	r0, #0
   1637c:	beq	16384 <print_json_data@@Base+0x68c>
   16380:	bl	17ec8 <handle_coda_error@@Base>
   16384:	movw	r4, #41828	; 0xa364
   16388:	movt	r4, #1
   1638c:	mov	r0, r4
   16390:	bl	165bc <print_json_data@@Base+0x8c4>
   16394:	mov	r0, r6
   16398:	mov	r1, r5
   1639c:	bl	16604 <print_json_data@@Base+0x90c>
   163a0:	mov	r0, r4
   163a4:	bl	165bc <print_json_data@@Base+0x8c4>
   163a8:	mov	r0, r6
   163ac:	bl	126e8 <free@plt>
   163b0:	b	1655c <print_json_data@@Base+0x864>
   163b4:	mov	r0, r4
   163b8:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   163bc:	cmp	r0, #0
   163c0:	beq	163c8 <print_json_data@@Base+0x6d0>
   163c4:	bl	17ec8 <handle_coda_error@@Base>
   163c8:	mov	r1, #0
   163cc:	str	r1, [fp, #-40]	; 0xffffffd8
   163d0:	ldr	r0, [sp, #16]
   163d4:	cmp	r0, #1
   163d8:	blt	164a0 <print_json_data@@Base+0x7a8>
   163dc:	mov	r7, #1
   163e0:	add	r5, sp, #48	; 0x30
   163e4:	movw	r8, #40760	; 0x9f38
   163e8:	movt	r8, #1
   163ec:	sub	r9, fp, #44	; 0x2c
   163f0:	movw	r6, #41673	; 0xa2c9
   163f4:	movt	r6, #1
   163f8:	ldr	r0, [sp, #8]
   163fc:	mov	r2, r5
   16400:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   16404:	cmp	r0, #0
   16408:	beq	16410 <print_json_data@@Base+0x718>
   1640c:	bl	17ec8 <handle_coda_error@@Base>
   16410:	ldr	r0, [sp, #48]	; 0x30
   16414:	cmp	r0, #0
   16418:	bne	16460 <print_json_data@@Base+0x768>
   1641c:	cmp	r7, #0
   16420:	bne	1642c <print_json_data@@Base+0x734>
   16424:	mov	r0, r8
   16428:	bl	165bc <print_json_data@@Base+0x8c4>
   1642c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16430:	ldr	r0, [sp, #8]
   16434:	mov	r2, r9
   16438:	bl	12a78 <coda_type_get_record_field_name@plt>
   1643c:	cmp	r0, #0
   16440:	beq	16448 <print_json_data@@Base+0x750>
   16444:	bl	17ec8 <handle_coda_error@@Base>
   16448:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1644c:	mov	r0, r6
   16450:	bl	165bc <print_json_data@@Base+0x8c4>
   16454:	mov	r0, r4
   16458:	bl	15dd4 <print_json_data@@Base+0xdc>
   1645c:	mov	r7, #0
   16460:	ldr	r0, [sp, #16]
   16464:	sub	r0, r0, #1
   16468:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1646c:	cmp	r1, r0
   16470:	bge	16488 <print_json_data@@Base+0x790>
   16474:	mov	r0, r4
   16478:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   1647c:	cmp	r0, #0
   16480:	beq	16488 <print_json_data@@Base+0x790>
   16484:	bl	17ec8 <handle_coda_error@@Base>
   16488:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1648c:	add	r1, r0, #1
   16490:	str	r1, [fp, #-40]	; 0xffffffd8
   16494:	ldr	r0, [sp, #16]
   16498:	cmp	r1, r0
   1649c:	blt	163f8 <print_json_data@@Base+0x700>
   164a0:	mov	r0, r4
   164a4:	bl	12850 <coda_cursor_goto_parent@plt>
   164a8:	movw	r0, #41679	; 0xa2cf
   164ac:	movt	r0, #1
   164b0:	bl	165bc <print_json_data@@Base+0x8c4>
   164b4:	b	1655c <print_json_data@@Base+0x864>
   164b8:	add	r1, sp, #16
   164bc:	mov	r0, r4
   164c0:	bl	12898 <coda_cursor_read_double@plt>
   164c4:	cmp	r0, #0
   164c8:	beq	164d0 <print_json_data@@Base+0x7d8>
   164cc:	bl	17ec8 <handle_coda_error@@Base>
   164d0:	vldr	d16, [sp, #16]
   164d4:	b	16514 <print_json_data@@Base+0x81c>
   164d8:	add	r1, sp, #8
   164dc:	mov	r0, r4
   164e0:	bl	12898 <coda_cursor_read_double@plt>
   164e4:	cmp	r0, #0
   164e8:	beq	164f0 <print_json_data@@Base+0x7f8>
   164ec:	bl	17ec8 <handle_coda_error@@Base>
   164f0:	vldr	d0, [sp, #8]
   164f4:	bl	128a4 <coda_isNaN@plt>
   164f8:	cmp	r0, #0
   164fc:	bne	16510 <print_json_data@@Base+0x818>
   16500:	vldr	d0, [sp, #8]
   16504:	bl	12748 <coda_isInf@plt>
   16508:	cmp	r0, #0
   1650c:	beq	1657c <print_json_data@@Base+0x884>
   16510:	vldr	d16, [sp, #8]
   16514:	vmov	r2, r3, d16
   16518:	movw	r0, #40208	; 0x9d10
   1651c:	movt	r0, #1
   16520:	b	16558 <print_json_data@@Base+0x860>
   16524:	add	r1, sp, #16
   16528:	add	r2, sp, #8
   1652c:	mov	r0, r4
   16530:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   16534:	cmp	r0, #0
   16538:	beq	16540 <print_json_data@@Base+0x848>
   1653c:	bl	17ec8 <handle_coda_error@@Base>
   16540:	vldr	d16, [sp, #16]
   16544:	vldr	d17, [sp, #8]
   16548:	vstr	d17, [sp]
   1654c:	vmov	r2, r3, d16
   16550:	movw	r0, #41816	; 0xa358
   16554:	movt	r0, #1
   16558:	bl	165bc <print_json_data@@Base+0x8c4>
   1655c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16560:	cmp	r0, #0
   16564:	beq	16574 <print_json_data@@Base+0x87c>
   16568:	movw	r0, #41679	; 0xa2cf
   1656c:	movt	r0, #1
   16570:	bl	165bc <print_json_data@@Base+0x8c4>
   16574:	sub	sp, fp, #24
   16578:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1657c:	vldr	d0, [sp, #8]
   16580:	movw	r0, #41760	; 0xa320
   16584:	movt	r0, #1
   16588:	add	r1, sp, #16
   1658c:	bl	126c4 <coda_time_double_to_string@plt>
   16590:	cmp	r0, #0
   16594:	beq	165a8 <print_json_data@@Base+0x8b0>
   16598:	movw	r0, #41789	; 0xa33d
   1659c:	movt	r0, #1
   165a0:	bl	165bc <print_json_data@@Base+0x8c4>
   165a4:	b	1655c <print_json_data@@Base+0x864>
   165a8:	movw	r0, #42083	; 0xa463
   165ac:	movt	r0, #1
   165b0:	add	r1, sp, #16
   165b4:	bl	165bc <print_json_data@@Base+0x8c4>
   165b8:	b	1655c <print_json_data@@Base+0x864>
   165bc:	sub	sp, sp, #12
   165c0:	push	{fp, lr}
   165c4:	mov	fp, sp
   165c8:	sub	sp, sp, #4
   165cc:	mov	ip, r0
   165d0:	add	r0, fp, #8
   165d4:	stm	r0, {r1, r2, r3}
   165d8:	add	r2, fp, #8
   165dc:	str	r2, [sp]
   165e0:	movw	r0, #53392	; 0xd090
   165e4:	movt	r0, #2
   165e8:	ldr	r0, [r0]
   165ec:	mov	r1, ip
   165f0:	bl	129ac <vfprintf@plt>
   165f4:	mov	sp, fp
   165f8:	pop	{fp, lr}
   165fc:	add	sp, sp, #12
   16600:	bx	lr
   16604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16608:	add	fp, sp, #28
   1660c:	sub	sp, sp, #4
   16610:	cmp	r1, #1
   16614:	blt	16764 <print_json_data@@Base+0xa6c>
   16618:	mov	r4, r1
   1661c:	mov	r5, r0
   16620:	movw	r6, #40175	; 0x9cef
   16624:	movt	r6, #1
   16628:	movw	r8, #40178	; 0x9cf2
   1662c:	movt	r8, #1
   16630:	movw	r9, #40184	; 0x9cf8
   16634:	movt	r9, #1
   16638:	movw	sl, #40187	; 0x9cfb
   1663c:	movt	sl, #1
   16640:	movw	r7, #41827	; 0xa363
   16644:	movt	r7, #1
   16648:	ldrb	r1, [r5]
   1664c:	sub	r0, r1, #8
   16650:	cmp	r0, #26
   16654:	bhi	166dc <print_json_data@@Base+0x9e4>
   16658:	add	r2, pc, #0
   1665c:	ldr	pc, [r2, r0, lsl #2]
   16660:	andeq	r6, r1, ip, asr #13
   16664:	andeq	r6, r1, r0, lsl r7
   16668:	andeq	r6, r1, ip, lsl r7
   1666c:	strdeq	r6, [r1], -r4
   16670:	andeq	r6, r1, r8, lsr #14
   16674:	andeq	r6, r1, r4, lsr r7
   16678:	strdeq	r6, [r1], -r4
   1667c:	strdeq	r6, [r1], -r4
   16680:	strdeq	r6, [r1], -r4
   16684:	strdeq	r6, [r1], -r4
   16688:	strdeq	r6, [r1], -r4
   1668c:	strdeq	r6, [r1], -r4
   16690:	strdeq	r6, [r1], -r4
   16694:	strdeq	r6, [r1], -r4
   16698:	strdeq	r6, [r1], -r4
   1669c:	strdeq	r6, [r1], -r4
   166a0:	strdeq	r6, [r1], -r4
   166a4:	strdeq	r6, [r1], -r4
   166a8:	strdeq	r6, [r1], -r4
   166ac:	strdeq	r6, [r1], -r4
   166b0:	strdeq	r6, [r1], -r4
   166b4:	strdeq	r6, [r1], -r4
   166b8:	strdeq	r6, [r1], -r4
   166bc:	strdeq	r6, [r1], -r4
   166c0:	strdeq	r6, [r1], -r4
   166c4:	strdeq	r6, [r1], -r4
   166c8:	andeq	r6, r1, r0, asr #14
   166cc:	movw	r0, #40172	; 0x9cec
   166d0:	movt	r0, #1
   166d4:	bl	165bc <print_json_data@@Base+0x8c4>
   166d8:	b	16758 <print_json_data@@Base+0xa60>
   166dc:	cmp	r1, #92	; 0x5c
   166e0:	bne	166f4 <print_json_data@@Base+0x9fc>
   166e4:	movw	r0, #40190	; 0x9cfe
   166e8:	movt	r0, #1
   166ec:	bl	165bc <print_json_data@@Base+0x8c4>
   166f0:	b	16758 <print_json_data@@Base+0xa60>
   166f4:	sub	r0, r1, #32
   166f8:	uxtb	r0, r0
   166fc:	cmp	r0, #94	; 0x5e
   16700:	bhi	1674c <print_json_data@@Base+0xa54>
   16704:	movw	r0, #40609	; 0x9ea1
   16708:	movt	r0, #1
   1670c:	b	16754 <print_json_data@@Base+0xa5c>
   16710:	mov	r0, r6
   16714:	bl	165bc <print_json_data@@Base+0x8c4>
   16718:	b	16758 <print_json_data@@Base+0xa60>
   1671c:	mov	r0, r8
   16720:	bl	165bc <print_json_data@@Base+0x8c4>
   16724:	b	16758 <print_json_data@@Base+0xa60>
   16728:	mov	r0, r9
   1672c:	bl	165bc <print_json_data@@Base+0x8c4>
   16730:	b	16758 <print_json_data@@Base+0xa60>
   16734:	mov	r0, sl
   16738:	bl	165bc <print_json_data@@Base+0x8c4>
   1673c:	b	16758 <print_json_data@@Base+0xa60>
   16740:	mov	r0, r7
   16744:	bl	165bc <print_json_data@@Base+0x8c4>
   16748:	b	16758 <print_json_data@@Base+0xa60>
   1674c:	movw	r0, #41830	; 0xa366
   16750:	movt	r0, #1
   16754:	bl	165bc <print_json_data@@Base+0x8c4>
   16758:	subs	r4, r4, #1
   1675c:	add	r5, r5, #1
   16760:	bne	16648 <print_json_data@@Base+0x950>
   16764:	sub	sp, fp, #28
   16768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001676c <print_full_field_name@@Base>:
   1676c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16770:	add	fp, sp, #28
   16774:	sub	sp, sp, #12
   16778:	mov	sl, r2
   1677c:	mov	r4, r0
   16780:	cmp	r1, #1
   16784:	bne	16898 <print_full_field_name@@Base+0x12c>
   16788:	str	sl, [sp]
   1678c:	movw	r5, #49640	; 0xc1e8
   16790:	movt	r5, #2
   16794:	ldr	r0, [r5, #136]	; 0x88
   16798:	mov	r6, #0
   1679c:	cmp	r0, #1
   167a0:	blt	16864 <print_full_field_name@@Base+0xf8>
   167a4:	add	sl, sp, #8
   167a8:	movw	r9, #41837	; 0xa36d
   167ac:	movt	r9, #1
   167b0:	mov	r7, #0
   167b4:	mov	r8, #0
   167b8:	add	r0, r5, r8, lsl #2
   167bc:	ldr	r0, [r0, #8]
   167c0:	mov	r1, sl
   167c4:	bl	12ac0 <coda_type_get_class@plt>
   167c8:	cmp	r0, #0
   167cc:	beq	167d4 <print_full_field_name@@Base+0x68>
   167d0:	bl	17ec8 <handle_coda_error@@Base>
   167d4:	ldr	r0, [sp, #8]
   167d8:	cmp	r0, #1
   167dc:	beq	16804 <print_full_field_name@@Base+0x98>
   167e0:	cmp	r0, #0
   167e4:	bne	16854 <print_full_field_name@@Base+0xe8>
   167e8:	add	r0, r5, r7, lsl #2
   167ec:	ldr	r2, [r0, #3620]	; 0xe24
   167f0:	mov	r0, r4
   167f4:	mov	r1, r9
   167f8:	bl	128b0 <fprintf@plt>
   167fc:	add	r7, r7, #1
   16800:	b	16854 <print_full_field_name@@Base+0xe8>
   16804:	cmp	r8, #0
   16808:	bne	16818 <print_full_field_name@@Base+0xac>
   1680c:	mov	r0, #47	; 0x2f
   16810:	mov	r1, r4
   16814:	bl	129e8 <fputc@plt>
   16818:	add	r0, r6, r6, lsl #2
   1681c:	add	r0, r5, r0, lsl #4
   16820:	ldr	r0, [r0, #804]	; 0x324
   16824:	cmp	r0, #1
   16828:	blt	16850 <print_full_field_name@@Base+0xe4>
   1682c:	mov	r0, #91	; 0x5b
   16830:	mov	r1, r4
   16834:	bl	129e8 <fputc@plt>
   16838:	mov	r0, r4
   1683c:	mov	r1, r6
   16840:	bl	16a18 <print_full_field_name@@Base+0x2ac>
   16844:	mov	r0, #93	; 0x5d
   16848:	mov	r1, r4
   1684c:	bl	129e8 <fputc@plt>
   16850:	add	r6, r6, #1
   16854:	add	r8, r8, #1
   16858:	ldr	r0, [r5, #136]	; 0x88
   1685c:	cmp	r8, r0
   16860:	blt	167b8 <print_full_field_name@@Base+0x4c>
   16864:	ldr	r0, [sp]
   16868:	cmp	r0, #0
   1686c:	beq	16a10 <print_full_field_name@@Base+0x2a4>
   16870:	ldr	r0, [r5, #3360]	; 0xd20
   16874:	cmp	r6, r0
   16878:	bge	16a10 <print_full_field_name@@Base+0x2a4>
   1687c:	mov	r0, #91	; 0x5b
   16880:	mov	r1, r4
   16884:	bl	129e8 <fputc@plt>
   16888:	mov	r0, r4
   1688c:	mov	r1, r6
   16890:	bl	16a18 <print_full_field_name@@Base+0x2ac>
   16894:	b	16a04 <print_full_field_name@@Base+0x298>
   16898:	mov	r5, r1
   1689c:	movw	r7, #49640	; 0xc1e8
   168a0:	movt	r7, #2
   168a4:	ldr	r0, [r7, #3748]	; 0xea4
   168a8:	cmp	r0, #1
   168ac:	blt	168e8 <print_full_field_name@@Base+0x17c>
   168b0:	mov	r6, #0
   168b4:	cmp	r6, #0
   168b8:	beq	168c8 <print_full_field_name@@Base+0x15c>
   168bc:	mov	r0, #46	; 0x2e
   168c0:	mov	r1, r4
   168c4:	bl	129e8 <fputc@plt>
   168c8:	add	r0, r7, r6, lsl #2
   168cc:	ldr	r0, [r0, #3620]	; 0xe24
   168d0:	mov	r1, r4
   168d4:	bl	12a84 <fputs@plt>
   168d8:	add	r6, r6, #1
   168dc:	ldr	r0, [r7, #3748]	; 0xea4
   168e0:	cmp	r6, r0
   168e4:	blt	168b4 <print_full_field_name@@Base+0x148>
   168e8:	cmp	r5, #2
   168ec:	bne	16a10 <print_full_field_name@@Base+0x2a4>
   168f0:	ldr	r0, [r7, #136]	; 0x88
   168f4:	mov	r6, #0
   168f8:	cmp	r0, #1
   168fc:	blt	1699c <print_full_field_name@@Base+0x230>
   16900:	add	r8, sp, #4
   16904:	movw	r9, #41841	; 0xa371
   16908:	movt	r9, #1
   1690c:	mov	r5, #0
   16910:	add	r0, r7, r5, lsl #2
   16914:	ldr	r0, [r0, #8]
   16918:	mov	r1, r8
   1691c:	bl	12ac0 <coda_type_get_class@plt>
   16920:	cmp	r0, #0
   16924:	beq	1692c <print_full_field_name@@Base+0x1c0>
   16928:	bl	17ec8 <handle_coda_error@@Base>
   1692c:	ldr	r0, [sp, #4]
   16930:	cmp	r0, #1
   16934:	bne	1698c <print_full_field_name@@Base+0x220>
   16938:	add	r0, r6, r6, lsl #2
   1693c:	add	r0, r7, r0, lsl #4
   16940:	ldr	r1, [r0, #804]	; 0x324
   16944:	cmp	r1, #1
   16948:	blt	1698c <print_full_field_name@@Base+0x220>
   1694c:	ldr	r0, [r0, #800]	; 0x320
   16950:	cmp	r0, #0
   16954:	beq	16968 <print_full_field_name@@Base+0x1fc>
   16958:	mov	r0, #44	; 0x2c
   1695c:	mov	r1, r4
   16960:	bl	129e8 <fputc@plt>
   16964:	b	1697c <print_full_field_name@@Base+0x210>
   16968:	mov	r0, r9
   1696c:	mov	r1, #2
   16970:	mov	r2, #1
   16974:	mov	r3, r4
   16978:	bl	127cc <fwrite@plt>
   1697c:	mov	r0, r4
   16980:	mov	r1, r6
   16984:	bl	16a18 <print_full_field_name@@Base+0x2ac>
   16988:	add	r6, r6, #1
   1698c:	add	r5, r5, #1
   16990:	ldr	r0, [r7, #136]	; 0x88
   16994:	cmp	r5, r0
   16998:	blt	16910 <print_full_field_name@@Base+0x1a4>
   1699c:	cmp	sl, #0
   169a0:	beq	169fc <print_full_field_name@@Base+0x290>
   169a4:	ldr	r0, [r7, #3360]	; 0xd20
   169a8:	cmp	r6, r0
   169ac:	bge	169fc <print_full_field_name@@Base+0x290>
   169b0:	add	r0, r6, r6, lsl #2
   169b4:	add	r0, r7, r0, lsl #4
   169b8:	ldr	r0, [r0, #800]	; 0x320
   169bc:	cmp	r0, #0
   169c0:	beq	169d4 <print_full_field_name@@Base+0x268>
   169c4:	mov	r0, #44	; 0x2c
   169c8:	mov	r1, r4
   169cc:	bl	129e8 <fputc@plt>
   169d0:	b	169ec <print_full_field_name@@Base+0x280>
   169d4:	movw	r0, #41841	; 0xa371
   169d8:	movt	r0, #1
   169dc:	mov	r1, #2
   169e0:	mov	r2, #1
   169e4:	mov	r3, r4
   169e8:	bl	127cc <fwrite@plt>
   169ec:	mov	r0, r4
   169f0:	mov	r1, r6
   169f4:	bl	16a18 <print_full_field_name@@Base+0x2ac>
   169f8:	add	r6, r6, #1
   169fc:	cmp	r6, #1
   16a00:	blt	16a10 <print_full_field_name@@Base+0x2a4>
   16a04:	mov	r0, #93	; 0x5d
   16a08:	mov	r1, r4
   16a0c:	bl	129e8 <fputc@plt>
   16a10:	sub	sp, fp, #28
   16a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a1c:	add	fp, sp, #28
   16a20:	sub	sp, sp, #4
   16a24:	mov	r4, r0
   16a28:	add	r0, r1, r1, lsl #2
   16a2c:	movw	r1, #49640	; 0xc1e8
   16a30:	movt	r1, #2
   16a34:	add	r0, r1, r0, lsl #4
   16a38:	mov	r7, r0
   16a3c:	ldr	r1, [r7, #804]!	; 0x324
   16a40:	cmp	r1, #1
   16a44:	blt	16af8 <print_full_field_name@@Base+0x38c>
   16a48:	add	sl, r0, #808	; 0x328
   16a4c:	add	r5, r0, #800	; 0x320
   16a50:	mov	r6, #0
   16a54:	movw	r8, #49636	; 0xc1e4
   16a58:	movt	r8, #2
   16a5c:	movw	r9, #53424	; 0xd0b0
   16a60:	movt	r9, #2
   16a64:	cmp	r6, #0
   16a68:	beq	16a78 <print_full_field_name@@Base+0x30c>
   16a6c:	mov	r0, #44	; 0x2c
   16a70:	mov	r1, r4
   16a74:	bl	129e8 <fputc@plt>
   16a78:	ldr	r0, [r8]
   16a7c:	cmp	r0, #0
   16a80:	beq	16ab8 <print_full_field_name@@Base+0x34c>
   16a84:	ldr	r0, [r5]
   16a88:	add	r0, r6, r0
   16a8c:	add	r0, r9, r0, lsl #2
   16a90:	ldr	r1, [r0, #72]	; 0x48
   16a94:	cmp	r1, #0
   16a98:	beq	16ad4 <print_full_field_name@@Base+0x368>
   16a9c:	ldr	r3, [r0, #4]
   16aa0:	ldr	r2, [r0, #36]	; 0x24
   16aa4:	mov	r0, r4
   16aa8:	movw	r1, #41844	; 0xa374
   16aac:	movt	r1, #1
   16ab0:	bl	128b0 <fprintf@plt>
   16ab4:	b	16ae8 <print_full_field_name@@Base+0x37c>
   16ab8:	ldr	r2, [sl, r6, lsl #2]
   16abc:	cmn	r2, #1
   16ac0:	bne	16ad8 <print_full_field_name@@Base+0x36c>
   16ac4:	mov	r0, #63	; 0x3f
   16ac8:	mov	r1, r4
   16acc:	bl	129e8 <fputc@plt>
   16ad0:	b	16ae8 <print_full_field_name@@Base+0x37c>
   16ad4:	ldr	r2, [r0, #4]
   16ad8:	mov	r0, r4
   16adc:	movw	r1, #41848	; 0xa378
   16ae0:	movt	r1, #1
   16ae4:	bl	128b0 <fprintf@plt>
   16ae8:	ldr	r0, [r7]
   16aec:	add	r6, r6, #1
   16af0:	cmp	r6, r0
   16af4:	blt	16a64 <print_full_field_name@@Base+0x2f8>
   16af8:	sub	sp, fp, #28
   16afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016b00 <traverse_info_init@@Base>:
   16b00:	movw	r0, #49640	; 0xc1e8
   16b04:	movt	r0, #2
   16b08:	mov	r1, #0
   16b0c:	str	r1, [r0, #136]	; 0x88
   16b10:	str	r1, [r0, #4]
   16b14:	str	r1, [r0, #3360]	; 0xd20
   16b18:	str	r1, [r0, #3748]	; 0xea4
   16b1c:	bx	lr

00016b20 <traverse_info_done@@Base>:
   16b20:	push	{r4, sl, fp, lr}
   16b24:	add	fp, sp, #8
   16b28:	movw	r4, #49640	; 0xc1e8
   16b2c:	movt	r4, #2
   16b30:	ldr	r0, [r4, #4]
   16b34:	cmp	r0, #0
   16b38:	beq	16b40 <traverse_info_done@@Base+0x20>
   16b3c:	bl	12994 <coda_close@plt>
   16b40:	ldr	r0, [r4, #664]	; 0x298
   16b44:	cmp	r0, #0
   16b48:	popeq	{r4, sl, fp, pc}
   16b4c:	add	r0, r4, #664	; 0x298
   16b50:	pop	{r4, sl, fp, lr}
   16b54:	b	15890 <codadump_filter_remove@@Base>

00016b58 <traverse_product@@Base>:
   16b58:	push	{r4, r5, fp, lr}
   16b5c:	add	fp, sp, #8
   16b60:	movw	r5, #49640	; 0xc1e8
   16b64:	movt	r5, #2
   16b68:	mov	r1, r5
   16b6c:	ldr	r0, [r1], #4
   16b70:	bl	126ac <coda_open@plt>
   16b74:	cmp	r0, #0
   16b78:	beq	16bb8 <traverse_product@@Base+0x60>
   16b7c:	bl	12a60 <coda_get_errno@plt>
   16b80:	ldr	r0, [r0]
   16b84:	cmn	r0, #21
   16b88:	bne	16bb4 <traverse_product@@Base+0x5c>
   16b8c:	mov	r0, #0
   16b90:	bl	126f4 <coda_set_option_use_mmap@plt>
   16b94:	mov	r1, r5
   16b98:	ldr	r0, [r1], #4
   16b9c:	bl	126ac <coda_open@plt>
   16ba0:	mov	r4, r0
   16ba4:	mov	r0, #1
   16ba8:	bl	126f4 <coda_set_option_use_mmap@plt>
   16bac:	cmp	r4, #0
   16bb0:	beq	16bb8 <traverse_product@@Base+0x60>
   16bb4:	bl	17ec8 <handle_coda_error@@Base>
   16bb8:	ldr	r1, [r5, #4]
   16bbc:	add	r4, r5, #144	; 0x90
   16bc0:	mov	r0, r4
   16bc4:	bl	127d8 <coda_cursor_set_product@plt>
   16bc8:	cmp	r0, #0
   16bcc:	beq	16bd4 <traverse_product@@Base+0x7c>
   16bd0:	bl	17ec8 <handle_coda_error@@Base>
   16bd4:	ldr	r0, [r5, #136]	; 0x88
   16bd8:	add	r0, r5, r0, lsl #2
   16bdc:	add	r1, r0, #8
   16be0:	mov	r0, r4
   16be4:	bl	12730 <coda_cursor_get_type@plt>
   16be8:	cmp	r0, #0
   16bec:	beq	16bf4 <traverse_product@@Base+0x9c>
   16bf0:	bl	17ec8 <handle_coda_error@@Base>
   16bf4:	bl	16c0c <traverse_product@@Base+0xb4>
   16bf8:	ldr	r0, [r5, #4]
   16bfc:	bl	12994 <coda_close@plt>
   16c00:	mov	r0, #0
   16c04:	str	r0, [r5, #4]
   16c08:	pop	{r4, r5, fp, pc}
   16c0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c10:	add	fp, sp, #24
   16c14:	sub	sp, sp, #16
   16c18:	movw	r6, #49640	; 0xc1e8
   16c1c:	movt	r6, #2
   16c20:	ldr	r0, [r6, #136]	; 0x88
   16c24:	add	r0, r6, r0, lsl #2
   16c28:	ldr	r0, [r0, #8]
   16c2c:	add	r1, sp, #12
   16c30:	bl	12ac0 <coda_type_get_class@plt>
   16c34:	cmp	r0, #0
   16c38:	beq	16c40 <traverse_product@@Base+0xe8>
   16c3c:	bl	17ec8 <handle_coda_error@@Base>
   16c40:	ldr	r0, [sp, #12]
   16c44:	cmp	r0, #6
   16c48:	bhi	16eac <traverse_product@@Base+0x354>
   16c4c:	add	r1, pc, #0
   16c50:	ldr	pc, [r1, r0, lsl #2]
   16c54:	andeq	r6, r1, ip, asr #25
   16c58:	andeq	r6, r1, r0, ror #27
   16c5c:	andeq	r6, r1, r0, ror ip
   16c60:	andeq	r6, r1, r0, ror ip
   16c64:	andeq	r6, r1, r0, ror ip
   16c68:	andeq	r6, r1, r0, ror ip
   16c6c:	andeq	r6, r1, r8, lsr lr
   16c70:	ldr	r0, [r6, #136]	; 0x88
   16c74:	add	r0, r6, r0, lsl #2
   16c78:	ldr	r0, [r0, #8]
   16c7c:	add	r1, sp, #8
   16c80:	bl	12874 <coda_type_get_read_type@plt>
   16c84:	cmp	r0, #0
   16c88:	beq	16c90 <traverse_product@@Base+0x138>
   16c8c:	bl	17ec8 <handle_coda_error@@Base>
   16c90:	ldr	r0, [sp, #8]
   16c94:	sub	r0, r0, #11
   16c98:	cmp	r0, #1
   16c9c:	bhi	16ea8 <traverse_product@@Base+0x350>
   16ca0:	bl	147d4 <dim_enter_array@@Base>
   16ca4:	ldr	r0, [r6, #3360]	; 0xd20
   16ca8:	add	r0, r0, #1
   16cac:	str	r0, [r6, #3360]	; 0xd20
   16cb0:	bl	17068 <traverse_product@@Base+0x510>
   16cb4:	ldr	r0, [r6, #3360]	; 0xd20
   16cb8:	sub	r0, r0, #1
   16cbc:	str	r0, [r6, #3360]	; 0xd20
   16cc0:	bl	15438 <dim_leave_array@@Base>
   16cc4:	sub	sp, fp, #24
   16cc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ccc:	ldr	r0, [r6, #136]	; 0x88
   16cd0:	cmp	r0, #30
   16cd4:	bgt	16eac <traverse_product@@Base+0x354>
   16cd8:	ldr	r1, [r6, #3748]	; 0xea4
   16cdc:	add	r1, r1, #1
   16ce0:	str	r1, [r6, #3748]	; 0xea4
   16ce4:	add	r0, r6, r0, lsl #2
   16ce8:	ldr	r0, [r0, #8]
   16cec:	add	r1, sp, #8
   16cf0:	bl	1285c <coda_type_get_num_record_fields@plt>
   16cf4:	cmp	r0, #0
   16cf8:	beq	16d00 <traverse_product@@Base+0x1a8>
   16cfc:	bl	17ec8 <handle_coda_error@@Base>
   16d00:	ldr	r0, [r6, #136]	; 0x88
   16d04:	add	r0, r0, #1
   16d08:	str	r0, [r6, #136]	; 0x88
   16d0c:	ldr	r0, [r6, #796]	; 0x31c
   16d10:	add	r0, r6, r0, lsl #2
   16d14:	ldr	r8, [r0, #664]	; 0x298
   16d18:	cmp	r8, #0
   16d1c:	beq	16eb4 <traverse_product@@Base+0x35c>
   16d20:	ldr	r0, [r6, #796]	; 0x31c
   16d24:	add	r1, r6, r0, lsl #2
   16d28:	ldr	r0, [r1, #664]!	; 0x298
   16d2c:	cmp	r0, #0
   16d30:	beq	16dd8 <traverse_product@@Base+0x280>
   16d34:	add	r4, sp, #4
   16d38:	add	r7, r6, #664	; 0x298
   16d3c:	bl	15920 <codadump_filter_get_fieldname@@Base>
   16d40:	cmp	r0, #0
   16d44:	beq	16f08 <traverse_product@@Base+0x3b0>
   16d48:	mov	r5, r0
   16d4c:	ldr	r0, [r6, #136]	; 0x88
   16d50:	add	r0, r6, r0, lsl #2
   16d54:	ldr	r0, [r0, #4]
   16d58:	mov	r1, r5
   16d5c:	mov	r2, r4
   16d60:	bl	129c4 <coda_type_get_record_field_index_from_name@plt>
   16d64:	cmp	r0, #0
   16d68:	beq	16d80 <traverse_product@@Base+0x228>
   16d6c:	bl	12a60 <coda_get_errno@plt>
   16d70:	ldr	r0, [r0]
   16d74:	cmn	r0, #102	; 0x66
   16d78:	beq	16f28 <traverse_product@@Base+0x3d0>
   16d7c:	bl	17ec8 <handle_coda_error@@Base>
   16d80:	ldr	r0, [r6, #796]	; 0x31c
   16d84:	ldr	r0, [r7, r0, lsl #2]
   16d88:	bl	15954 <codadump_filter_get_subfilter@@Base>
   16d8c:	ldr	r1, [r6, #796]	; 0x31c
   16d90:	add	r1, r1, #1
   16d94:	str	r0, [r7, r1, lsl #2]
   16d98:	str	r1, [r6, #796]	; 0x31c
   16d9c:	ldr	r0, [sp, #4]
   16da0:	mov	r1, #1
   16da4:	bl	16f4c <traverse_product@@Base+0x3f4>
   16da8:	ldr	r0, [r6, #796]	; 0x31c
   16dac:	sub	r0, r0, #1
   16db0:	str	r0, [r6, #796]	; 0x31c
   16db4:	ldr	r0, [r7, r0, lsl #2]
   16db8:	bl	15988 <codadump_filter_get_next_filter@@Base>
   16dbc:	ldr	r1, [r6, #796]	; 0x31c
   16dc0:	str	r0, [r7, r1, lsl #2]
   16dc4:	ldr	r0, [r6, #796]	; 0x31c
   16dc8:	mov	r1, r7
   16dcc:	ldr	r0, [r1, r0, lsl #2]!
   16dd0:	cmp	r0, #0
   16dd4:	bne	16d3c <traverse_product@@Base+0x1e4>
   16dd8:	str	r8, [r1]
   16ddc:	b	16ee8 <traverse_product@@Base+0x390>
   16de0:	ldr	r0, [r6, #136]	; 0x88
   16de4:	cmp	r0, #30
   16de8:	bgt	16eac <traverse_product@@Base+0x354>
   16dec:	bl	147d4 <dim_enter_array@@Base>
   16df0:	ldr	r0, [r6, #3360]	; 0xd20
   16df4:	add	r0, r0, #1
   16df8:	str	r0, [r6, #3360]	; 0xd20
   16dfc:	ldr	r0, [r6, #136]	; 0x88
   16e00:	add	r1, r0, #1
   16e04:	str	r1, [r6, #136]	; 0x88
   16e08:	add	r2, r6, #8
   16e0c:	ldr	r0, [r2, r0, lsl #2]
   16e10:	add	r1, r2, r1, lsl #2
   16e14:	bl	1294c <coda_type_get_array_base_type@plt>
   16e18:	cmp	r0, #0
   16e1c:	beq	16e24 <traverse_product@@Base+0x2cc>
   16e20:	bl	17ec8 <handle_coda_error@@Base>
   16e24:	bl	16c0c <traverse_product@@Base+0xb4>
   16e28:	ldr	r0, [r6, #136]	; 0x88
   16e2c:	sub	r0, r0, #1
   16e30:	str	r0, [r6, #136]	; 0x88
   16e34:	b	16cb4 <traverse_product@@Base+0x15c>
   16e38:	bl	1264c <coda_get_option_bypass_special_types@plt>
   16e3c:	mov	r2, r0
   16e40:	ldr	r0, [r6, #136]	; 0x88
   16e44:	add	r1, r6, r0, lsl #2
   16e48:	ldr	r0, [r1, #8]!
   16e4c:	cmp	r2, #0
   16e50:	beq	16e70 <traverse_product@@Base+0x318>
   16e54:	bl	12a6c <coda_type_get_special_base_type@plt>
   16e58:	cmp	r0, #0
   16e5c:	beq	16e64 <traverse_product@@Base+0x30c>
   16e60:	bl	17ec8 <handle_coda_error@@Base>
   16e64:	bl	16c0c <traverse_product@@Base+0xb4>
   16e68:	sub	sp, fp, #24
   16e6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16e70:	add	r1, sp, #8
   16e74:	bl	12928 <coda_type_get_special_type@plt>
   16e78:	cmp	r0, #0
   16e7c:	beq	16e84 <traverse_product@@Base+0x32c>
   16e80:	bl	17ec8 <handle_coda_error@@Base>
   16e84:	ldr	r0, [sp, #8]
   16e88:	sub	r1, r0, #1
   16e8c:	cmp	r1, #2
   16e90:	bcc	16ea8 <traverse_product@@Base+0x350>
   16e94:	cmp	r0, #0
   16e98:	beq	16eac <traverse_product@@Base+0x354>
   16e9c:	cmp	r0, #3
   16ea0:	beq	16ca0 <traverse_product@@Base+0x148>
   16ea4:	b	16eac <traverse_product@@Base+0x354>
   16ea8:	bl	17068 <traverse_product@@Base+0x510>
   16eac:	sub	sp, fp, #24
   16eb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16eb4:	mov	r0, #0
   16eb8:	str	r0, [sp, #4]
   16ebc:	ldr	r1, [sp, #8]
   16ec0:	cmp	r1, #1
   16ec4:	blt	16ee8 <traverse_product@@Base+0x390>
   16ec8:	mov	r1, #0
   16ecc:	bl	16f4c <traverse_product@@Base+0x3f4>
   16ed0:	ldr	r0, [sp, #4]
   16ed4:	add	r0, r0, #1
   16ed8:	str	r0, [sp, #4]
   16edc:	ldr	r1, [sp, #8]
   16ee0:	cmp	r0, r1
   16ee4:	blt	16ec8 <traverse_product@@Base+0x370>
   16ee8:	ldr	r0, [r6, #136]	; 0x88
   16eec:	sub	r0, r0, #1
   16ef0:	str	r0, [r6, #136]	; 0x88
   16ef4:	ldr	r0, [r6, #3748]	; 0xea4
   16ef8:	sub	r0, r0, #1
   16efc:	str	r0, [r6, #3748]	; 0xea4
   16f00:	sub	sp, fp, #24
   16f04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f08:	movw	r0, #41852	; 0xa37c
   16f0c:	movt	r0, #1
   16f10:	movw	r1, #41865	; 0xa389
   16f14:	movt	r1, #1
   16f18:	movw	r3, #41943	; 0xa3d7
   16f1c:	movt	r3, #1
   16f20:	movw	r2, #393	; 0x189
   16f24:	bl	12ab4 <__assert_fail@plt>
   16f28:	movw	r0, #49584	; 0xc1b0
   16f2c:	movt	r0, #2
   16f30:	ldr	r0, [r0]
   16f34:	movw	r1, #41964	; 0xa3ec
   16f38:	movt	r1, #1
   16f3c:	mov	r2, r5
   16f40:	bl	128b0 <fprintf@plt>
   16f44:	mov	r0, #1
   16f48:	bl	12868 <exit@plt>
   16f4c:	push	{r4, r5, r6, sl, fp, lr}
   16f50:	add	fp, sp, #16
   16f54:	sub	sp, sp, #8
   16f58:	mov	r5, r1
   16f5c:	mov	r4, r0
   16f60:	movw	r6, #49640	; 0xc1e8
   16f64:	movt	r6, #2
   16f68:	ldr	r0, [r6, #3748]	; 0xea4
   16f6c:	add	r0, r6, r0, lsl #2
   16f70:	str	r4, [r0, #3488]	; 0xda0
   16f74:	ldr	r0, [r6, #136]	; 0x88
   16f78:	add	r0, r6, r0, lsl #2
   16f7c:	ldr	r0, [r0, #4]
   16f80:	add	r2, sp, #4
   16f84:	mov	r1, r4
   16f88:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   16f8c:	cmp	r0, #0
   16f90:	beq	16f98 <traverse_product@@Base+0x440>
   16f94:	bl	17ec8 <handle_coda_error@@Base>
   16f98:	cmp	r5, #0
   16f9c:	bne	16fac <traverse_product@@Base+0x454>
   16fa0:	ldr	r0, [sp, #4]
   16fa4:	cmp	r0, #0
   16fa8:	bne	17060 <traverse_product@@Base+0x508>
   16fac:	movw	r0, #49636	; 0xc1e4
   16fb0:	movt	r0, #2
   16fb4:	ldr	r0, [r0]
   16fb8:	cmp	r0, #0
   16fbc:	beq	1700c <traverse_product@@Base+0x4b4>
   16fc0:	ldr	r0, [r6, #136]	; 0x88
   16fc4:	add	r0, r6, r0, lsl #2
   16fc8:	ldr	r0, [r0, #4]
   16fcc:	mov	r2, sp
   16fd0:	mov	r1, r4
   16fd4:	bl	12760 <coda_type_get_record_field_available_status@plt>
   16fd8:	cmp	r0, #0
   16fdc:	beq	16fe4 <traverse_product@@Base+0x48c>
   16fe0:	bl	17ec8 <handle_coda_error@@Base>
   16fe4:	ldr	r0, [sp]
   16fe8:	cmn	r0, #1
   16fec:	bne	16ffc <traverse_product@@Base+0x4a4>
   16ff0:	bl	15568 <dim_record_field_available@@Base>
   16ff4:	cmp	r0, #0
   16ff8:	beq	17060 <traverse_product@@Base+0x508>
   16ffc:	ldr	r0, [r6, #136]	; 0x88
   17000:	add	r0, r6, r0, lsl #2
   17004:	ldr	r1, [sp]
   17008:	str	r1, [r0, #3360]	; 0xd20
   1700c:	ldr	r0, [r6, #136]	; 0x88
   17010:	add	r0, r6, r0, lsl #2
   17014:	ldr	r0, [r0, #4]
   17018:	ldr	r1, [r6, #3748]	; 0xea4
   1701c:	add	r1, r6, r1, lsl #2
   17020:	add	r2, r1, #3616	; 0xe20
   17024:	mov	r1, r4
   17028:	bl	12a78 <coda_type_get_record_field_name@plt>
   1702c:	cmp	r0, #0
   17030:	beq	17038 <traverse_product@@Base+0x4e0>
   17034:	bl	17ec8 <handle_coda_error@@Base>
   17038:	ldr	r0, [r6, #136]	; 0x88
   1703c:	add	r1, r6, r0, lsl #2
   17040:	ldr	r0, [r1, #4]
   17044:	add	r2, r1, #8
   17048:	mov	r1, r4
   1704c:	bl	12724 <coda_type_get_record_field_type@plt>
   17050:	cmp	r0, #0
   17054:	beq	1705c <traverse_product@@Base+0x504>
   17058:	bl	17ec8 <handle_coda_error@@Base>
   1705c:	bl	16c0c <traverse_product@@Base+0xb4>
   17060:	sub	sp, fp, #16
   17064:	pop	{r4, r5, r6, sl, fp, pc}
   17068:	push	{r4, r5, fp, lr}
   1706c:	add	fp, sp, #8
   17070:	sub	sp, sp, #8
   17074:	movw	r0, #53412	; 0xd0a4
   17078:	movt	r0, #2
   1707c:	ldr	r0, [r0]
   17080:	cmp	r0, #1
   17084:	beq	1712c <traverse_product@@Base+0x5d4>
   17088:	cmp	r0, #0
   1708c:	bne	172ac <traverse_product@@Base+0x754>
   17090:	movw	r4, #49588	; 0xc1b4
   17094:	movt	r4, #2
   17098:	ldr	r0, [r4]
   1709c:	mov	r1, #1
   170a0:	mov	r2, #0
   170a4:	bl	1676c <print_full_field_name@@Base>
   170a8:	movw	r0, #53400	; 0xd098
   170ac:	movt	r0, #2
   170b0:	ldr	r0, [r0]
   170b4:	cmp	r0, #0
   170b8:	beq	171a8 <traverse_product@@Base+0x650>
   170bc:	movw	r5, #49640	; 0xc1e8
   170c0:	movt	r5, #2
   170c4:	ldr	r0, [r5, #136]	; 0x88
   170c8:	add	r0, r5, r0, lsl #2
   170cc:	ldr	r0, [r0, #8]
   170d0:	add	r1, sp, #4
   170d4:	bl	12ac0 <coda_type_get_class@plt>
   170d8:	cmp	r0, #0
   170dc:	beq	170e4 <traverse_product@@Base+0x58c>
   170e0:	bl	17ec8 <handle_coda_error@@Base>
   170e4:	ldr	r0, [sp, #4]
   170e8:	cmp	r0, #6
   170ec:	bne	17138 <traverse_product@@Base+0x5e0>
   170f0:	ldr	r0, [r5, #136]	; 0x88
   170f4:	add	r0, r5, r0, lsl #2
   170f8:	ldr	r0, [r0, #8]
   170fc:	mov	r1, sp
   17100:	bl	12928 <coda_type_get_special_type@plt>
   17104:	cmp	r0, #0
   17108:	beq	17110 <traverse_product@@Base+0x5b8>
   1710c:	bl	17ec8 <handle_coda_error@@Base>
   17110:	ldr	r0, [sp]
   17114:	bl	12628 <coda_type_get_special_type_name@plt>
   17118:	mov	r1, r0
   1711c:	movw	r0, #42016	; 0xa420
   17120:	movt	r0, #1
   17124:	bl	1267c <printf@plt>
   17128:	b	171a8 <traverse_product@@Base+0x650>
   1712c:	sub	sp, fp, #8
   17130:	pop	{r4, r5, fp, lr}
   17134:	b	12bbc <export_data_element_to_ascii@@Base>
   17138:	ldr	r0, [r5, #136]	; 0x88
   1713c:	add	r0, r5, r0, lsl #2
   17140:	ldr	r0, [r0, #8]
   17144:	mov	r1, sp
   17148:	bl	12874 <coda_type_get_read_type@plt>
   1714c:	cmp	r0, #0
   17150:	beq	17158 <traverse_product@@Base+0x600>
   17154:	bl	17ec8 <handle_coda_error@@Base>
   17158:	ldr	r0, [sp]
   1715c:	bl	12970 <coda_type_get_native_type_name@plt>
   17160:	mov	r1, r0
   17164:	movw	r0, #42016	; 0xa420
   17168:	movt	r0, #1
   1716c:	bl	1267c <printf@plt>
   17170:	ldr	r0, [sp]
   17174:	sub	r0, r0, #11
   17178:	cmp	r0, #1
   1717c:	bhi	171a8 <traverse_product@@Base+0x650>
   17180:	mov	r0, #40	; 0x28
   17184:	bl	12910 <putchar@plt>
   17188:	ldr	r1, [r5, #3360]	; 0xd20
   1718c:	cmp	r1, #0
   17190:	ble	172b4 <traverse_product@@Base+0x75c>
   17194:	ldr	r0, [r4]
   17198:	sub	r1, r1, #1
   1719c:	bl	16a18 <print_full_field_name@@Base+0x2ac>
   171a0:	mov	r0, #41	; 0x29
   171a4:	bl	12910 <putchar@plt>
   171a8:	movw	r0, #49632	; 0xc1e0
   171ac:	movt	r0, #2
   171b0:	ldr	r0, [r0]
   171b4:	cmp	r0, #0
   171b8:	beq	17204 <traverse_product@@Base+0x6ac>
   171bc:	movw	r0, #49640	; 0xc1e8
   171c0:	movt	r0, #2
   171c4:	ldr	r1, [r0, #136]	; 0x88
   171c8:	add	r0, r0, r1, lsl #2
   171cc:	ldr	r0, [r0, #8]
   171d0:	add	r1, sp, #4
   171d4:	bl	1279c <coda_type_get_unit@plt>
   171d8:	cmp	r0, #0
   171dc:	beq	171e4 <traverse_product@@Base+0x68c>
   171e0:	bl	17ec8 <handle_coda_error@@Base>
   171e4:	ldr	r1, [sp, #4]
   171e8:	cmp	r1, #0
   171ec:	ldrbne	r0, [r1]
   171f0:	cmpne	r0, #0
   171f4:	beq	17204 <traverse_product@@Base+0x6ac>
   171f8:	movw	r0, #42076	; 0xa45c
   171fc:	movt	r0, #1
   17200:	bl	1267c <printf@plt>
   17204:	movw	r0, #53404	; 0xd09c
   17208:	movt	r0, #2
   1720c:	ldr	r0, [r0]
   17210:	cmp	r0, #0
   17214:	beq	17260 <traverse_product@@Base+0x708>
   17218:	movw	r0, #49640	; 0xc1e8
   1721c:	movt	r0, #2
   17220:	ldr	r1, [r0, #136]	; 0x88
   17224:	add	r0, r0, r1, lsl #2
   17228:	ldr	r0, [r0, #8]
   1722c:	add	r1, sp, #4
   17230:	bl	127a8 <coda_type_get_description@plt>
   17234:	cmp	r0, #0
   17238:	beq	17240 <traverse_product@@Base+0x6e8>
   1723c:	bl	17ec8 <handle_coda_error@@Base>
   17240:	ldr	r1, [sp, #4]
   17244:	cmp	r1, #0
   17248:	ldrbne	r0, [r1]
   1724c:	cmpne	r0, #0
   17250:	beq	17260 <traverse_product@@Base+0x708>
   17254:	movw	r0, #42082	; 0xa462
   17258:	movt	r0, #1
   1725c:	bl	1267c <printf@plt>
   17260:	mov	r0, #10
   17264:	bl	12910 <putchar@plt>
   17268:	movw	r0, #49620	; 0xc1d4
   1726c:	movt	r0, #2
   17270:	ldr	r0, [r0]
   17274:	cmp	r0, #0
   17278:	beq	172ac <traverse_product@@Base+0x754>
   1727c:	movw	r5, #53424	; 0xd0b0
   17280:	movt	r5, #2
   17284:	ldr	r0, [r5]
   17288:	cmp	r0, #1
   1728c:	blt	172ac <traverse_product@@Base+0x754>
   17290:	mov	r4, #0
   17294:	mov	r0, r4
   17298:	bl	145f8 <print_all_distinct_dims@@Base>
   1729c:	add	r4, r4, #1
   172a0:	ldr	r0, [r5]
   172a4:	cmp	r4, r0
   172a8:	blt	17294 <traverse_product@@Base+0x73c>
   172ac:	sub	sp, fp, #8
   172b0:	pop	{r4, r5, fp, pc}
   172b4:	movw	r0, #42020	; 0xa424
   172b8:	movt	r0, #1
   172bc:	movw	r1, #41865	; 0xa389
   172c0:	movt	r1, #1
   172c4:	movw	r3, #42049	; 0xa441
   172c8:	movt	r3, #1
   172cc:	mov	r2, #238	; 0xee
   172d0:	bl	12ab4 <__assert_fail@plt>

000172d4 <print_yaml_data@@Base>:
   172d4:	push	{r4, sl, fp, lr}
   172d8:	add	fp, sp, #8
   172dc:	sub	sp, sp, #528	; 0x210
   172e0:	movw	r1, #49608	; 0xc1c8
   172e4:	movt	r1, #2
   172e8:	str	r0, [r1]
   172ec:	movw	r4, #49640	; 0xc1e8
   172f0:	movt	r4, #2
   172f4:	ldr	r0, [r4]
   172f8:	sub	r1, fp, #12
   172fc:	bl	126ac <coda_open@plt>
   17300:	cmp	r0, #0
   17304:	beq	17344 <print_yaml_data@@Base+0x70>
   17308:	bl	12a60 <coda_get_errno@plt>
   1730c:	ldr	r0, [r0]
   17310:	cmn	r0, #21
   17314:	bne	17340 <print_yaml_data@@Base+0x6c>
   17318:	mov	r0, #0
   1731c:	bl	126f4 <coda_set_option_use_mmap@plt>
   17320:	ldr	r0, [r4]
   17324:	sub	r1, fp, #12
   17328:	bl	126ac <coda_open@plt>
   1732c:	mov	r4, r0
   17330:	mov	r0, #1
   17334:	bl	126f4 <coda_set_option_use_mmap@plt>
   17338:	cmp	r4, #0
   1733c:	beq	17344 <print_yaml_data@@Base+0x70>
   17340:	bl	17ec8 <handle_coda_error@@Base>
   17344:	ldr	r1, [fp, #-12]
   17348:	mov	r0, sp
   1734c:	bl	127d8 <coda_cursor_set_product@plt>
   17350:	cmp	r0, #0
   17354:	beq	1735c <print_yaml_data@@Base+0x88>
   17358:	bl	17ec8 <handle_coda_error@@Base>
   1735c:	movw	r0, #53416	; 0xd0a8
   17360:	movt	r0, #2
   17364:	ldr	r1, [r0]
   17368:	cmp	r1, #0
   1736c:	beq	17384 <print_yaml_data@@Base+0xb0>
   17370:	mov	r0, sp
   17374:	bl	129b8 <coda_cursor_goto@plt>
   17378:	cmp	r0, #0
   1737c:	beq	17384 <print_yaml_data@@Base+0xb0>
   17380:	bl	17ec8 <handle_coda_error@@Base>
   17384:	mov	r0, #0
   17388:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   1738c:	mov	r0, sp
   17390:	mov	r1, #0
   17394:	bl	173a8 <print_yaml_data@@Base+0xd4>
   17398:	ldr	r0, [fp, #-12]
   1739c:	bl	12994 <coda_close@plt>
   173a0:	sub	sp, fp, #8
   173a4:	pop	{r4, sl, fp, pc}
   173a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173ac:	add	fp, sp, #28
   173b0:	sub	sp, sp, #76	; 0x4c
   173b4:	mov	r5, r1
   173b8:	mov	r8, r0
   173bc:	mov	r0, #0
   173c0:	str	r0, [fp, #-36]	; 0xffffffdc
   173c4:	movw	r0, #49608	; 0xc1c8
   173c8:	movt	r0, #2
   173cc:	ldr	r0, [r0]
   173d0:	cmp	r0, #0
   173d4:	beq	17480 <print_yaml_data@@Base+0x1ac>
   173d8:	sub	r1, fp, #36	; 0x24
   173dc:	mov	r0, r8
   173e0:	bl	1276c <coda_cursor_has_attributes@plt>
   173e4:	cmp	r0, #0
   173e8:	beq	173f0 <print_yaml_data@@Base+0x11c>
   173ec:	bl	17ec8 <handle_coda_error@@Base>
   173f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   173f4:	cmp	r0, #0
   173f8:	beq	17480 <print_yaml_data@@Base+0x1ac>
   173fc:	cmp	r5, #0
   17400:	beq	17414 <print_yaml_data@@Base+0x140>
   17404:	movw	r0, #42627	; 0xa683
   17408:	movt	r0, #1
   1740c:	bl	17c54 <print_yaml_data@@Base+0x980>
   17410:	bl	17c9c <print_yaml_data@@Base+0x9c8>
   17414:	movw	r0, #42088	; 0xa468
   17418:	movt	r0, #1
   1741c:	bl	17c54 <print_yaml_data@@Base+0x980>
   17420:	mov	r0, r8
   17424:	bl	128ec <coda_cursor_goto_attributes@plt>
   17428:	cmp	r0, #0
   1742c:	beq	17434 <print_yaml_data@@Base+0x160>
   17430:	bl	17ec8 <handle_coda_error@@Base>
   17434:	movw	r4, #49612	; 0xc1cc
   17438:	movt	r4, #2
   1743c:	ldr	r0, [r4]
   17440:	add	r0, r0, #1
   17444:	str	r0, [r4]
   17448:	mov	r0, r8
   1744c:	mov	r1, #1
   17450:	bl	173a8 <print_yaml_data@@Base+0xd4>
   17454:	ldr	r0, [r4]
   17458:	sub	r0, r0, #1
   1745c:	str	r0, [r4]
   17460:	mov	r0, r8
   17464:	bl	12850 <coda_cursor_goto_parent@plt>
   17468:	movw	r0, #42095	; 0xa46f
   1746c:	movt	r0, #1
   17470:	bl	17d14 <print_yaml_data@@Base+0xa40>
   17474:	ldr	r0, [r4]
   17478:	add	r0, r0, #1
   1747c:	str	r0, [r4]
   17480:	sub	r1, fp, #32
   17484:	mov	r0, r8
   17488:	bl	12778 <coda_cursor_get_type_class@plt>
   1748c:	cmp	r0, #0
   17490:	beq	17498 <print_yaml_data@@Base+0x1c4>
   17494:	bl	17ec8 <handle_coda_error@@Base>
   17498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1749c:	cmp	r0, #6
   174a0:	bhi	17bf0 <print_yaml_data@@Base+0x91c>
   174a4:	add	r1, pc, #0
   174a8:	ldr	pc, [r1, r0, lsl #2]
   174ac:	andeq	r7, r1, ip, asr r5
   174b0:	andeq	r7, r1, r4, ror #12
   174b4:	andeq	r7, r1, r8, asr #9
   174b8:	andeq	r7, r1, r8, asr #9
   174bc:	andeq	r7, r1, r8, asr #9
   174c0:	andeq	r7, r1, r8, asr #9
   174c4:	andeq	r7, r1, r0, asr #14
   174c8:	sub	r1, fp, #40	; 0x28
   174cc:	mov	r0, r8
   174d0:	bl	12814 <coda_cursor_get_read_type@plt>
   174d4:	cmp	r0, #0
   174d8:	beq	174e0 <print_yaml_data@@Base+0x20c>
   174dc:	bl	17ec8 <handle_coda_error@@Base>
   174e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174e4:	add	r0, r0, #1
   174e8:	cmp	r0, #13
   174ec:	bhi	17bf0 <print_yaml_data@@Base+0x91c>
   174f0:	add	r1, pc, #0
   174f4:	ldr	pc, [r1, r0, lsl #2]
   174f8:	andeq	r7, r1, ip, ror r7
   174fc:	andeq	r7, r1, r0, lsr r5
   17500:	andeq	r7, r1, ip, lsl #15
   17504:	andeq	r7, r1, r0, lsr r5
   17508:	andeq	r7, r1, ip, lsl #15
   1750c:	andeq	r7, r1, r0, lsr r5
   17510:	andeq	r7, r1, ip, lsl #15
   17514:	andeq	r7, r1, r0, lsl r8
   17518:	andeq	r7, r1, r0, asr #16
   1751c:			; <UNDEFINED> instruction: 0x000177b8
   17520:			; <UNDEFINED> instruction: 0x000177b8
   17524:	andeq	r7, r1, r0, lsl #17
   17528:	andeq	r7, r1, r0, asr #17
   1752c:	andeq	r7, r1, r8, ror #18
   17530:	add	r1, sp, #16
   17534:	mov	r0, r8
   17538:	bl	12a3c <coda_cursor_read_int32@plt>
   1753c:	cmp	r0, #0
   17540:	beq	17548 <print_yaml_data@@Base+0x274>
   17544:	bl	17ec8 <handle_coda_error@@Base>
   17548:	ldr	r1, [sp, #16]
   1754c:	movw	r0, #40455	; 0x9e07
   17550:	movt	r0, #1
   17554:	bl	17c54 <print_yaml_data@@Base+0x980>
   17558:	b	17bf0 <print_yaml_data@@Base+0x91c>
   1755c:	add	r1, sp, #16
   17560:	mov	r0, r8
   17564:	bl	126d0 <coda_cursor_get_num_elements@plt>
   17568:	cmp	r0, #0
   1756c:	beq	17574 <print_yaml_data@@Base+0x2a0>
   17570:	bl	17ec8 <handle_coda_error@@Base>
   17574:	ldr	r0, [sp, #16]
   17578:	cmp	r0, #1
   1757c:	blt	17800 <print_yaml_data@@Base+0x52c>
   17580:	cmp	r5, #0
   17584:	beq	17594 <print_yaml_data@@Base+0x2c0>
   17588:	movw	r0, #42627	; 0xa683
   1758c:	movt	r0, #1
   17590:	bl	17c54 <print_yaml_data@@Base+0x980>
   17594:	add	r1, sp, #8
   17598:	mov	r0, r8
   1759c:	bl	12730 <coda_cursor_get_type@plt>
   175a0:	cmp	r0, #0
   175a4:	beq	175ac <print_yaml_data@@Base+0x2d8>
   175a8:	bl	17ec8 <handle_coda_error@@Base>
   175ac:	ldr	r0, [sp, #8]
   175b0:	sub	r1, fp, #40	; 0x28
   175b4:	bl	12934 <coda_type_get_record_union_status@plt>
   175b8:	cmp	r0, #0
   175bc:	beq	175c4 <print_yaml_data@@Base+0x2f0>
   175c0:	bl	17ec8 <handle_coda_error@@Base>
   175c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175c8:	cmp	r0, #0
   175cc:	beq	17a30 <print_yaml_data@@Base+0x75c>
   175d0:	sub	r1, fp, #44	; 0x2c
   175d4:	mov	r0, r8
   175d8:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   175dc:	cmp	r0, #0
   175e0:	beq	175e8 <print_yaml_data@@Base+0x314>
   175e4:	bl	17ec8 <handle_coda_error@@Base>
   175e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   175ec:	ldr	r0, [sp, #8]
   175f0:	sub	r2, fp, #48	; 0x30
   175f4:	bl	12a78 <coda_type_get_record_field_name@plt>
   175f8:	cmp	r0, #0
   175fc:	beq	17604 <print_yaml_data@@Base+0x330>
   17600:	bl	17ec8 <handle_coda_error@@Base>
   17604:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17608:	mov	r0, r8
   1760c:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   17610:	cmp	r0, #0
   17614:	beq	1761c <print_yaml_data@@Base+0x348>
   17618:	bl	17ec8 <handle_coda_error@@Base>
   1761c:	cmp	r5, #0
   17620:	blne	17c9c <print_yaml_data@@Base+0x9c8>
   17624:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17628:	movw	r0, #42102	; 0xa476
   1762c:	movt	r0, #1
   17630:	bl	17c54 <print_yaml_data@@Base+0x980>
   17634:	movw	r4, #49612	; 0xc1cc
   17638:	movt	r4, #2
   1763c:	ldr	r0, [r4]
   17640:	add	r0, r0, #1
   17644:	str	r0, [r4]
   17648:	mov	r0, r8
   1764c:	mov	r1, #1
   17650:	bl	173a8 <print_yaml_data@@Base+0xd4>
   17654:	ldr	r0, [r4]
   17658:	sub	r0, r0, #1
   1765c:	str	r0, [r4]
   17660:	b	17b40 <print_yaml_data@@Base+0x86c>
   17664:	add	r1, sp, #8
   17668:	add	r5, sp, #16
   1766c:	mov	r0, r8
   17670:	mov	r2, r5
   17674:	bl	1297c <coda_cursor_get_array_dim@plt>
   17678:	cmp	r0, #0
   1767c:	beq	17684 <print_yaml_data@@Base+0x3b0>
   17680:	bl	17ec8 <handle_coda_error@@Base>
   17684:	ldr	r0, [sp, #8]
   17688:	cmp	r0, #0
   1768c:	blt	177f0 <print_yaml_data@@Base+0x51c>
   17690:	mov	r6, #1
   17694:	beq	176b0 <print_yaml_data@@Base+0x3dc>
   17698:	ldr	r1, [r5], #4
   1769c:	mul	r6, r1, r6
   176a0:	subs	r0, r0, #1
   176a4:	bne	17698 <print_yaml_data@@Base+0x3c4>
   176a8:	cmp	r6, #1
   176ac:	blt	177f0 <print_yaml_data@@Base+0x51c>
   176b0:	movw	r0, #42627	; 0xa683
   176b4:	movt	r0, #1
   176b8:	bl	17c54 <print_yaml_data@@Base+0x980>
   176bc:	mov	r0, r8
   176c0:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   176c4:	cmp	r0, #0
   176c8:	beq	176d0 <print_yaml_data@@Base+0x3fc>
   176cc:	bl	17ec8 <handle_coda_error@@Base>
   176d0:	sub	r7, r6, #1
   176d4:	mov	r4, #0
   176d8:	movw	r9, #42111	; 0xa47f
   176dc:	movt	r9, #1
   176e0:	movw	r5, #49612	; 0xc1cc
   176e4:	movt	r5, #2
   176e8:	mov	r0, r9
   176ec:	bl	17d14 <print_yaml_data@@Base+0xa40>
   176f0:	ldr	r0, [r5]
   176f4:	add	r0, r0, #1
   176f8:	str	r0, [r5]
   176fc:	mov	r0, r8
   17700:	mov	r1, #0
   17704:	bl	173a8 <print_yaml_data@@Base+0xd4>
   17708:	ldr	r0, [r5]
   1770c:	sub	r0, r0, #1
   17710:	str	r0, [r5]
   17714:	cmp	r4, r7
   17718:	bge	17730 <print_yaml_data@@Base+0x45c>
   1771c:	mov	r0, r8
   17720:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   17724:	cmp	r0, #0
   17728:	beq	17730 <print_yaml_data@@Base+0x45c>
   1772c:	bl	17ec8 <handle_coda_error@@Base>
   17730:	add	r4, r4, #1
   17734:	cmp	r6, r4
   17738:	bne	176e8 <print_yaml_data@@Base+0x414>
   1773c:	b	17b40 <print_yaml_data@@Base+0x86c>
   17740:	sub	r1, fp, #40	; 0x28
   17744:	mov	r0, r8
   17748:	bl	127b4 <coda_cursor_get_special_type@plt>
   1774c:	cmp	r0, #0
   17750:	beq	17758 <print_yaml_data@@Base+0x484>
   17754:	bl	17ec8 <handle_coda_error@@Base>
   17758:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1775c:	cmp	r0, #3
   17760:	bhi	17bf0 <print_yaml_data@@Base+0x91c>
   17764:	add	r1, pc, #0
   17768:	ldr	pc, [r1, r0, lsl #2]
   1776c:	andeq	r7, r1, ip, ror r7
   17770:	andeq	r7, r1, ip, asr #22
   17774:	andeq	r7, r1, ip, ror #22
   17778:			; <UNDEFINED> instruction: 0x00017bb8
   1777c:	movw	r0, #42192	; 0xa4d0
   17780:	movt	r0, #1
   17784:	bl	17c54 <print_yaml_data@@Base+0x980>
   17788:	b	17bf0 <print_yaml_data@@Base+0x91c>
   1778c:	add	r1, sp, #16
   17790:	mov	r0, r8
   17794:	bl	1270c <coda_cursor_read_uint32@plt>
   17798:	cmp	r0, #0
   1779c:	beq	177a4 <print_yaml_data@@Base+0x4d0>
   177a0:	bl	17ec8 <handle_coda_error@@Base>
   177a4:	ldr	r1, [sp, #16]
   177a8:	movw	r0, #40460	; 0x9e0c
   177ac:	movt	r0, #1
   177b0:	bl	17c54 <print_yaml_data@@Base+0x980>
   177b4:	b	17bf0 <print_yaml_data@@Base+0x91c>
   177b8:	add	r1, sp, #16
   177bc:	mov	r0, r8
   177c0:	bl	12898 <coda_cursor_read_double@plt>
   177c4:	cmp	r0, #0
   177c8:	beq	177d0 <print_yaml_data@@Base+0x4fc>
   177cc:	bl	17ec8 <handle_coda_error@@Base>
   177d0:	vldr	d16, [sp, #16]
   177d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177d8:	vmov	r2, r3, d16
   177dc:	cmp	r0, #8
   177e0:	bne	17bac <print_yaml_data@@Base+0x8d8>
   177e4:	movw	r0, #40465	; 0x9e11
   177e8:	movt	r0, #1
   177ec:	b	17bec <print_yaml_data@@Base+0x918>
   177f0:	movw	r0, #42114	; 0xa482
   177f4:	movt	r0, #1
   177f8:	bl	17c54 <print_yaml_data@@Base+0x980>
   177fc:	b	17bf0 <print_yaml_data@@Base+0x91c>
   17800:	movw	r0, #42107	; 0xa47b
   17804:	movt	r0, #1
   17808:	bl	17c54 <print_yaml_data@@Base+0x980>
   1780c:	b	17bf0 <print_yaml_data@@Base+0x91c>
   17810:	add	r1, sp, #8
   17814:	mov	r0, r8
   17818:	bl	129a0 <coda_cursor_read_int64@plt>
   1781c:	cmp	r0, #0
   17820:	beq	17828 <print_yaml_data@@Base+0x554>
   17824:	bl	17ec8 <handle_coda_error@@Base>
   17828:	ldr	r0, [sp, #8]
   1782c:	ldr	r1, [sp, #12]
   17830:	add	r4, sp, #16
   17834:	mov	r2, r4
   17838:	bl	12aa8 <coda_str64@plt>
   1783c:	b	1786c <print_yaml_data@@Base+0x598>
   17840:	add	r1, sp, #8
   17844:	mov	r0, r8
   17848:	bl	1288c <coda_cursor_read_uint64@plt>
   1784c:	cmp	r0, #0
   17850:	beq	17858 <print_yaml_data@@Base+0x584>
   17854:	bl	17ec8 <handle_coda_error@@Base>
   17858:	ldr	r0, [sp, #8]
   1785c:	ldr	r1, [sp, #12]
   17860:	add	r4, sp, #16
   17864:	mov	r2, r4
   17868:	bl	126dc <coda_str64u@plt>
   1786c:	movw	r0, #42205	; 0xa4dd
   17870:	movt	r0, #1
   17874:	mov	r1, r4
   17878:	bl	17c54 <print_yaml_data@@Base+0x980>
   1787c:	b	17bf0 <print_yaml_data@@Base+0x91c>
   17880:	add	r1, sp, #16
   17884:	mov	r0, r8
   17888:	bl	128f8 <coda_cursor_read_char@plt>
   1788c:	cmp	r0, #0
   17890:	beq	17898 <print_yaml_data@@Base+0x5c4>
   17894:	bl	17ec8 <handle_coda_error@@Base>
   17898:	movw	r0, #41828	; 0xa364
   1789c:	movt	r0, #1
   178a0:	bl	17c54 <print_yaml_data@@Base+0x980>
   178a4:	add	r0, sp, #16
   178a8:	mov	r1, #1
   178ac:	bl	17d60 <print_yaml_data@@Base+0xa8c>
   178b0:	movw	r0, #42626	; 0xa682
   178b4:	movt	r0, #1
   178b8:	bl	17c54 <print_yaml_data@@Base+0x980>
   178bc:	b	17bf0 <print_yaml_data@@Base+0x91c>
   178c0:	add	r1, sp, #16
   178c4:	mov	r0, r8
   178c8:	bl	12880 <coda_cursor_get_string_length@plt>
   178cc:	cmp	r0, #0
   178d0:	beq	178d8 <print_yaml_data@@Base+0x604>
   178d4:	bl	17ec8 <handle_coda_error@@Base>
   178d8:	ldr	r0, [sp, #16]
   178dc:	add	r6, r0, #1
   178e0:	mov	r0, r6
   178e4:	bl	12820 <malloc@plt>
   178e8:	mov	r5, r0
   178ec:	cmp	r0, #0
   178f0:	bne	1791c <print_yaml_data@@Base+0x648>
   178f4:	movw	r0, #361	; 0x169
   178f8:	str	r0, [sp]
   178fc:	movw	r1, #40041	; 0x9c69
   17900:	movt	r1, #1
   17904:	movw	r3, #42118	; 0xa486
   17908:	movt	r3, #1
   1790c:	mvn	r0, #0
   17910:	mov	r2, r6
   17914:	bl	126a0 <coda_set_error@plt>
   17918:	bl	17ec8 <handle_coda_error@@Base>
   1791c:	ldr	r0, [sp, #16]
   17920:	add	r2, r0, #1
   17924:	mov	r0, r8
   17928:	mov	r1, r5
   1792c:	bl	12844 <coda_cursor_read_string@plt>
   17930:	cmp	r0, #0
   17934:	beq	1793c <print_yaml_data@@Base+0x668>
   17938:	bl	17ec8 <handle_coda_error@@Base>
   1793c:	movw	r0, #41828	; 0xa364
   17940:	movt	r0, #1
   17944:	bl	17c54 <print_yaml_data@@Base+0x980>
   17948:	ldr	r1, [sp, #16]
   1794c:	mov	r0, r5
   17950:	bl	17d60 <print_yaml_data@@Base+0xa8c>
   17954:	ldr	r1, [sp, #16]
   17958:	movw	r0, #42626	; 0xa682
   1795c:	movt	r0, #1
   17960:	bl	17c54 <print_yaml_data@@Base+0x980>
   17964:	b	17a24 <print_yaml_data@@Base+0x750>
   17968:	add	r1, sp, #16
   1796c:	mov	r0, r8
   17970:	bl	12a00 <coda_cursor_get_bit_size@plt>
   17974:	cmp	r0, #0
   17978:	beq	17980 <print_yaml_data@@Base+0x6ac>
   1797c:	bl	17ec8 <handle_coda_error@@Base>
   17980:	ldr	r0, [sp, #16]
   17984:	ldr	r1, [sp, #20]
   17988:	lsr	r2, r0, #3
   1798c:	orr	r6, r2, r1, lsl #29
   17990:	tst	r0, #7
   17994:	addne	r6, r6, #1
   17998:	mov	r0, r6
   1799c:	bl	12820 <malloc@plt>
   179a0:	mov	r5, r0
   179a4:	cmp	r0, #0
   179a8:	bne	179d4 <print_yaml_data@@Base+0x700>
   179ac:	mov	r0, #392	; 0x188
   179b0:	str	r0, [sp]
   179b4:	movw	r1, #40041	; 0x9c69
   179b8:	movt	r1, #1
   179bc:	movw	r3, #42118	; 0xa486
   179c0:	movt	r3, #1
   179c4:	mvn	r0, #0
   179c8:	mov	r2, r6
   179cc:	bl	126a0 <coda_set_error@plt>
   179d0:	bl	17ec8 <handle_coda_error@@Base>
   179d4:	ldr	r0, [sp, #16]
   179d8:	ldr	r1, [sp, #20]
   179dc:	stm	sp, {r0, r1}
   179e0:	mov	r0, r8
   179e4:	mov	r1, r5
   179e8:	mov	r2, #0
   179ec:	mov	r3, #0
   179f0:	bl	12a9c <coda_cursor_read_bits@plt>
   179f4:	cmp	r0, #0
   179f8:	beq	17a00 <print_yaml_data@@Base+0x72c>
   179fc:	bl	17ec8 <handle_coda_error@@Base>
   17a00:	movw	r0, #41828	; 0xa364
   17a04:	movt	r0, #1
   17a08:	bl	17c54 <print_yaml_data@@Base+0x980>
   17a0c:	mov	r0, r5
   17a10:	mov	r1, r6
   17a14:	bl	17d60 <print_yaml_data@@Base+0xa8c>
   17a18:	movw	r0, #42626	; 0xa682
   17a1c:	movt	r0, #1
   17a20:	bl	17c54 <print_yaml_data@@Base+0x980>
   17a24:	mov	r0, r5
   17a28:	bl	126e8 <free@plt>
   17a2c:	b	17bf0 <print_yaml_data@@Base+0x91c>
   17a30:	mov	r0, r8
   17a34:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   17a38:	cmp	r0, #0
   17a3c:	beq	17a44 <print_yaml_data@@Base+0x770>
   17a40:	bl	17ec8 <handle_coda_error@@Base>
   17a44:	mov	r1, #0
   17a48:	str	r1, [fp, #-44]	; 0xffffffd4
   17a4c:	ldr	r0, [sp, #16]
   17a50:	cmp	r0, #1
   17a54:	blt	17b40 <print_yaml_data@@Base+0x86c>
   17a58:	mov	r6, #1
   17a5c:	add	sl, sp, #52	; 0x34
   17a60:	sub	r4, fp, #48	; 0x30
   17a64:	movw	r9, #42102	; 0xa476
   17a68:	movt	r9, #1
   17a6c:	movw	r7, #49612	; 0xc1cc
   17a70:	movt	r7, #2
   17a74:	ldr	r0, [sp, #8]
   17a78:	mov	r2, sl
   17a7c:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   17a80:	cmp	r0, #0
   17a84:	beq	17a8c <print_yaml_data@@Base+0x7b8>
   17a88:	bl	17ec8 <handle_coda_error@@Base>
   17a8c:	ldr	r0, [sp, #52]	; 0x34
   17a90:	cmp	r0, #0
   17a94:	bne	17b00 <print_yaml_data@@Base+0x82c>
   17a98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17a9c:	ldr	r0, [sp, #8]
   17aa0:	mov	r2, r4
   17aa4:	bl	12a78 <coda_type_get_record_field_name@plt>
   17aa8:	cmp	r0, #0
   17aac:	beq	17ab4 <print_yaml_data@@Base+0x7e0>
   17ab0:	bl	17ec8 <handle_coda_error@@Base>
   17ab4:	cmp	r5, #0
   17ab8:	bne	17ac8 <print_yaml_data@@Base+0x7f4>
   17abc:	cmp	r6, #0
   17ac0:	bleq	17c9c <print_yaml_data@@Base+0x9c8>
   17ac4:	b	17acc <print_yaml_data@@Base+0x7f8>
   17ac8:	bl	17c9c <print_yaml_data@@Base+0x9c8>
   17acc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17ad0:	mov	r0, r9
   17ad4:	bl	17c54 <print_yaml_data@@Base+0x980>
   17ad8:	ldr	r0, [r7]
   17adc:	add	r0, r0, #1
   17ae0:	str	r0, [r7]
   17ae4:	mov	r0, r8
   17ae8:	mov	r1, #1
   17aec:	bl	173a8 <print_yaml_data@@Base+0xd4>
   17af0:	ldr	r0, [r7]
   17af4:	sub	r0, r0, #1
   17af8:	str	r0, [r7]
   17afc:	mov	r6, #0
   17b00:	ldr	r0, [sp, #16]
   17b04:	sub	r0, r0, #1
   17b08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17b0c:	cmp	r1, r0
   17b10:	bge	17b28 <print_yaml_data@@Base+0x854>
   17b14:	mov	r0, r8
   17b18:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   17b1c:	cmp	r0, #0
   17b20:	beq	17b28 <print_yaml_data@@Base+0x854>
   17b24:	bl	17ec8 <handle_coda_error@@Base>
   17b28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b2c:	add	r1, r0, #1
   17b30:	str	r1, [fp, #-44]	; 0xffffffd4
   17b34:	ldr	r0, [sp, #16]
   17b38:	cmp	r1, r0
   17b3c:	blt	17a74 <print_yaml_data@@Base+0x7a0>
   17b40:	mov	r0, r8
   17b44:	bl	12850 <coda_cursor_goto_parent@plt>
   17b48:	b	17bf0 <print_yaml_data@@Base+0x91c>
   17b4c:	add	r1, sp, #16
   17b50:	mov	r0, r8
   17b54:	bl	12898 <coda_cursor_read_double@plt>
   17b58:	cmp	r0, #0
   17b5c:	beq	17b64 <print_yaml_data@@Base+0x890>
   17b60:	bl	17ec8 <handle_coda_error@@Base>
   17b64:	vldr	d16, [sp, #16]
   17b68:	b	17ba8 <print_yaml_data@@Base+0x8d4>
   17b6c:	add	r1, sp, #8
   17b70:	mov	r0, r8
   17b74:	bl	12898 <coda_cursor_read_double@plt>
   17b78:	cmp	r0, #0
   17b7c:	beq	17b84 <print_yaml_data@@Base+0x8b0>
   17b80:	bl	17ec8 <handle_coda_error@@Base>
   17b84:	vldr	d0, [sp, #8]
   17b88:	bl	128a4 <coda_isNaN@plt>
   17b8c:	cmp	r0, #0
   17b90:	bne	17ba4 <print_yaml_data@@Base+0x8d0>
   17b94:	vldr	d0, [sp, #8]
   17b98:	bl	12748 <coda_isInf@plt>
   17b9c:	cmp	r0, #0
   17ba0:	beq	17c14 <print_yaml_data@@Base+0x940>
   17ba4:	vldr	d16, [sp, #8]
   17ba8:	vmov	r2, r3, d16
   17bac:	movw	r0, #40531	; 0x9e53
   17bb0:	movt	r0, #1
   17bb4:	b	17bec <print_yaml_data@@Base+0x918>
   17bb8:	add	r1, sp, #16
   17bbc:	add	r2, sp, #8
   17bc0:	mov	r0, r8
   17bc4:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   17bc8:	cmp	r0, #0
   17bcc:	beq	17bd4 <print_yaml_data@@Base+0x900>
   17bd0:	bl	17ec8 <handle_coda_error@@Base>
   17bd4:	vldr	d16, [sp, #16]
   17bd8:	vldr	d17, [sp, #8]
   17bdc:	vstr	d17, [sp]
   17be0:	vmov	r2, r3, d16
   17be4:	movw	r0, #40566	; 0x9e76
   17be8:	movt	r0, #1
   17bec:	bl	17c54 <print_yaml_data@@Base+0x980>
   17bf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17bf4:	cmp	r0, #0
   17bf8:	movwne	r0, #49612	; 0xc1cc
   17bfc:	movtne	r0, #2
   17c00:	ldrne	r1, [r0]
   17c04:	subne	r1, r1, #1
   17c08:	strne	r1, [r0]
   17c0c:	sub	sp, fp, #28
   17c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c14:	vldr	d0, [sp, #8]
   17c18:	movw	r0, #41760	; 0xa320
   17c1c:	movt	r0, #1
   17c20:	add	r1, sp, #16
   17c24:	bl	126c4 <coda_time_double_to_string@plt>
   17c28:	cmp	r0, #0
   17c2c:	beq	17c40 <print_yaml_data@@Base+0x96c>
   17c30:	movw	r0, #41789	; 0xa33d
   17c34:	movt	r0, #1
   17c38:	bl	17c54 <print_yaml_data@@Base+0x980>
   17c3c:	b	17bf0 <print_yaml_data@@Base+0x91c>
   17c40:	movw	r0, #42205	; 0xa4dd
   17c44:	movt	r0, #1
   17c48:	add	r1, sp, #16
   17c4c:	bl	17c54 <print_yaml_data@@Base+0x980>
   17c50:	b	17bf0 <print_yaml_data@@Base+0x91c>
   17c54:	sub	sp, sp, #12
   17c58:	push	{fp, lr}
   17c5c:	mov	fp, sp
   17c60:	sub	sp, sp, #4
   17c64:	mov	ip, r0
   17c68:	add	r0, fp, #8
   17c6c:	stm	r0, {r1, r2, r3}
   17c70:	add	r2, fp, #8
   17c74:	str	r2, [sp]
   17c78:	movw	r0, #53392	; 0xd090
   17c7c:	movt	r0, #2
   17c80:	ldr	r0, [r0]
   17c84:	mov	r1, ip
   17c88:	bl	129ac <vfprintf@plt>
   17c8c:	mov	sp, fp
   17c90:	pop	{fp, lr}
   17c94:	add	sp, sp, #12
   17c98:	bx	lr
   17c9c:	push	{r4, r5, r6, sl, fp, lr}
   17ca0:	add	fp, sp, #16
   17ca4:	movw	r0, #49612	; 0xc1cc
   17ca8:	movt	r0, #2
   17cac:	ldr	r0, [r0]
   17cb0:	cmp	r0, #0
   17cb4:	blt	17cf4 <print_yaml_data@@Base+0xa20>
   17cb8:	popeq	{r4, r5, r6, sl, fp, pc}
   17cbc:	add	r5, r0, #1
   17cc0:	movw	r6, #53392	; 0xd090
   17cc4:	movt	r6, #2
   17cc8:	movw	r4, #40606	; 0x9e9e
   17ccc:	movt	r4, #1
   17cd0:	ldr	r3, [r6]
   17cd4:	mov	r0, r4
   17cd8:	mov	r1, #2
   17cdc:	mov	r2, #1
   17ce0:	bl	127cc <fwrite@plt>
   17ce4:	sub	r5, r5, #1
   17ce8:	cmp	r5, #1
   17cec:	bgt	17cd0 <print_yaml_data@@Base+0x9fc>
   17cf0:	pop	{r4, r5, r6, sl, fp, pc}
   17cf4:	movw	r0, #40576	; 0x9e80
   17cf8:	movt	r0, #1
   17cfc:	movw	r1, #42118	; 0xa486
   17d00:	movt	r1, #1
   17d04:	movw	r3, #40588	; 0x9e8c
   17d08:	movt	r3, #1
   17d0c:	mov	r2, #44	; 0x2c
   17d10:	bl	12ab4 <__assert_fail@plt>
   17d14:	sub	sp, sp, #12
   17d18:	push	{r4, sl, fp, lr}
   17d1c:	add	fp, sp, #8
   17d20:	sub	sp, sp, #4
   17d24:	mov	r4, r0
   17d28:	add	r0, fp, #8
   17d2c:	stm	r0, {r1, r2, r3}
   17d30:	bl	17c9c <print_yaml_data@@Base+0x9c8>
   17d34:	add	r2, fp, #8
   17d38:	str	r2, [sp]
   17d3c:	movw	r0, #53392	; 0xd090
   17d40:	movt	r0, #2
   17d44:	ldr	r0, [r0]
   17d48:	mov	r1, r4
   17d4c:	bl	129ac <vfprintf@plt>
   17d50:	sub	sp, fp, #8
   17d54:	pop	{r4, sl, fp, lr}
   17d58:	add	sp, sp, #12
   17d5c:	bx	lr
   17d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d64:	add	fp, sp, #28
   17d68:	sub	sp, sp, #4
   17d6c:	cmp	r1, #1
   17d70:	blt	17ec0 <print_yaml_data@@Base+0xbec>
   17d74:	mov	r4, r1
   17d78:	mov	r5, r0
   17d7c:	movw	r6, #40175	; 0x9cef
   17d80:	movt	r6, #1
   17d84:	movw	r8, #40178	; 0x9cf2
   17d88:	movt	r8, #1
   17d8c:	movw	r9, #40184	; 0x9cf8
   17d90:	movt	r9, #1
   17d94:	movw	sl, #40187	; 0x9cfb
   17d98:	movt	sl, #1
   17d9c:	movw	r7, #41827	; 0xa363
   17da0:	movt	r7, #1
   17da4:	ldrb	r1, [r5]
   17da8:	sub	r0, r1, #8
   17dac:	cmp	r0, #26
   17db0:	bhi	17e38 <print_yaml_data@@Base+0xb64>
   17db4:	add	r2, pc, #0
   17db8:	ldr	pc, [r2, r0, lsl #2]
   17dbc:	andeq	r7, r1, r8, lsr #28
   17dc0:	andeq	r7, r1, ip, ror #28
   17dc4:	andeq	r7, r1, r8, ror lr
   17dc8:	andeq	r7, r1, r0, asr lr
   17dcc:	andeq	r7, r1, r4, lsl #29
   17dd0:	muleq	r1, r0, lr
   17dd4:	andeq	r7, r1, r0, asr lr
   17dd8:	andeq	r7, r1, r0, asr lr
   17ddc:	andeq	r7, r1, r0, asr lr
   17de0:	andeq	r7, r1, r0, asr lr
   17de4:	andeq	r7, r1, r0, asr lr
   17de8:	andeq	r7, r1, r0, asr lr
   17dec:	andeq	r7, r1, r0, asr lr
   17df0:	andeq	r7, r1, r0, asr lr
   17df4:	andeq	r7, r1, r0, asr lr
   17df8:	andeq	r7, r1, r0, asr lr
   17dfc:	andeq	r7, r1, r0, asr lr
   17e00:	andeq	r7, r1, r0, asr lr
   17e04:	andeq	r7, r1, r0, asr lr
   17e08:	andeq	r7, r1, r0, asr lr
   17e0c:	andeq	r7, r1, r0, asr lr
   17e10:	andeq	r7, r1, r0, asr lr
   17e14:	andeq	r7, r1, r0, asr lr
   17e18:	andeq	r7, r1, r0, asr lr
   17e1c:	andeq	r7, r1, r0, asr lr
   17e20:	andeq	r7, r1, r0, asr lr
   17e24:	muleq	r1, ip, lr
   17e28:	movw	r0, #40172	; 0x9cec
   17e2c:	movt	r0, #1
   17e30:	bl	17c54 <print_yaml_data@@Base+0x980>
   17e34:	b	17eb4 <print_yaml_data@@Base+0xbe0>
   17e38:	cmp	r1, #92	; 0x5c
   17e3c:	bne	17e50 <print_yaml_data@@Base+0xb7c>
   17e40:	movw	r0, #40190	; 0x9cfe
   17e44:	movt	r0, #1
   17e48:	bl	17c54 <print_yaml_data@@Base+0x980>
   17e4c:	b	17eb4 <print_yaml_data@@Base+0xbe0>
   17e50:	sub	r0, r1, #32
   17e54:	uxtb	r0, r0
   17e58:	cmp	r0, #94	; 0x5e
   17e5c:	bhi	17ea8 <print_yaml_data@@Base+0xbd4>
   17e60:	movw	r0, #40609	; 0x9ea1
   17e64:	movt	r0, #1
   17e68:	b	17eb0 <print_yaml_data@@Base+0xbdc>
   17e6c:	mov	r0, r6
   17e70:	bl	17c54 <print_yaml_data@@Base+0x980>
   17e74:	b	17eb4 <print_yaml_data@@Base+0xbe0>
   17e78:	mov	r0, r8
   17e7c:	bl	17c54 <print_yaml_data@@Base+0x980>
   17e80:	b	17eb4 <print_yaml_data@@Base+0xbe0>
   17e84:	mov	r0, r9
   17e88:	bl	17c54 <print_yaml_data@@Base+0x980>
   17e8c:	b	17eb4 <print_yaml_data@@Base+0xbe0>
   17e90:	mov	r0, sl
   17e94:	bl	17c54 <print_yaml_data@@Base+0x980>
   17e98:	b	17eb4 <print_yaml_data@@Base+0xbe0>
   17e9c:	mov	r0, r7
   17ea0:	bl	17c54 <print_yaml_data@@Base+0x980>
   17ea4:	b	17eb4 <print_yaml_data@@Base+0xbe0>
   17ea8:	movw	r0, #41830	; 0xa366
   17eac:	movt	r0, #1
   17eb0:	bl	17c54 <print_yaml_data@@Base+0x980>
   17eb4:	subs	r4, r4, #1
   17eb8:	add	r5, r5, #1
   17ebc:	bne	17da4 <print_yaml_data@@Base+0xad0>
   17ec0:	sub	sp, fp, #28
   17ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017ec8 <handle_coda_error@@Base>:
   17ec8:	push	{fp, lr}
   17ecc:	mov	fp, sp
   17ed0:	movw	r5, #49584	; 0xc1b0
   17ed4:	movt	r5, #2
   17ed8:	ldr	r4, [r5]
   17edc:	bl	12a60 <coda_get_errno@plt>
   17ee0:	ldr	r0, [r0]
   17ee4:	bl	12a18 <coda_errno_to_string@plt>
   17ee8:	mov	r2, r0
   17eec:	movw	r1, #42198	; 0xa4d6
   17ef0:	movt	r1, #1
   17ef4:	mov	r0, r4
   17ef8:	bl	128b0 <fprintf@plt>
   17efc:	ldr	r0, [r5]
   17f00:	bl	126b8 <fflush@plt>
   17f04:	mov	r0, #1
   17f08:	bl	12868 <exit@plt>

00017f0c <main@@Base>:
   17f0c:	push	{r4, r5, r6, r7, fp, lr}
   17f10:	add	fp, sp, #16
   17f14:	cmp	r0, #1
   17f18:	beq	1811c <main@@Base+0x210>
   17f1c:	mov	r4, r1
   17f20:	mov	r5, r0
   17f24:	ldr	r6, [r1, #4]
   17f28:	movw	r1, #42209	; 0xa4e1
   17f2c:	movt	r1, #1
   17f30:	mov	r0, r6
   17f34:	bl	12664 <strcmp@plt>
   17f38:	cmp	r0, #0
   17f3c:	beq	1811c <main@@Base+0x210>
   17f40:	movw	r1, #42212	; 0xa4e4
   17f44:	movt	r1, #1
   17f48:	mov	r0, r6
   17f4c:	bl	12664 <strcmp@plt>
   17f50:	cmp	r0, #0
   17f54:	beq	1811c <main@@Base+0x210>
   17f58:	movw	r1, #42219	; 0xa4eb
   17f5c:	movt	r1, #1
   17f60:	mov	r0, r6
   17f64:	bl	12664 <strcmp@plt>
   17f68:	cmp	r0, #0
   17f6c:	beq	18128 <main@@Base+0x21c>
   17f70:	movw	r1, #42222	; 0xa4ee
   17f74:	movt	r1, #1
   17f78:	mov	r0, r6
   17f7c:	bl	12664 <strcmp@plt>
   17f80:	cmp	r0, #0
   17f84:	beq	18128 <main@@Base+0x21c>
   17f88:	cmp	r5, #3
   17f8c:	blt	17fa8 <main@@Base+0x9c>
   17f90:	movw	r1, #42232	; 0xa4f8
   17f94:	movt	r1, #1
   17f98:	mov	r0, r6
   17f9c:	bl	12664 <strcmp@plt>
   17fa0:	cmp	r0, #0
   17fa4:	beq	180bc <main@@Base+0x1b0>
   17fa8:	ldr	r0, [r4]
   17fac:	movw	r2, #42235	; 0xa4fb
   17fb0:	movt	r2, #1
   17fb4:	mov	r1, #0
   17fb8:	bl	12700 <coda_set_definition_path_conditional@plt>
   17fbc:	mov	r7, #1
   17fc0:	cmp	r0, #0
   17fc4:	bne	18134 <main@@Base+0x228>
   17fc8:	ldr	r6, [r4, r7, lsl #2]
   17fcc:	movw	r1, #42261	; 0xa515
   17fd0:	movt	r1, #1
   17fd4:	mov	r0, r6
   17fd8:	bl	12664 <strcmp@plt>
   17fdc:	cmp	r0, #0
   17fe0:	beq	1806c <main@@Base+0x160>
   17fe4:	movw	r1, #42266	; 0xa51a
   17fe8:	movt	r1, #1
   17fec:	mov	r0, r6
   17ff0:	bl	12664 <strcmp@plt>
   17ff4:	cmp	r0, #0
   17ff8:	beq	18094 <main@@Base+0x188>
   17ffc:	movw	r1, #42272	; 0xa520
   18000:	movt	r1, #1
   18004:	mov	r0, r6
   18008:	bl	12664 <strcmp@plt>
   1800c:	cmp	r0, #0
   18010:	beq	180cc <main@@Base+0x1c0>
   18014:	movw	r1, #42277	; 0xa525
   18018:	movt	r1, #1
   1801c:	mov	r0, r6
   18020:	bl	12664 <strcmp@plt>
   18024:	cmp	r0, #0
   18028:	beq	180f4 <main@@Base+0x1e8>
   1802c:	movw	r1, #42282	; 0xa52a
   18030:	movt	r1, #1
   18034:	mov	r0, r6
   18038:	bl	12664 <strcmp@plt>
   1803c:	cmp	r0, #0
   18040:	bne	18168 <main@@Base+0x25c>
   18044:	movw	r0, #53412	; 0xd0a4
   18048:	movt	r0, #2
   1804c:	mov	r1, #5
   18050:	str	r1, [r0]
   18054:	add	r1, r7, #1
   18058:	sub	r0, r5, r1
   1805c:	add	r1, r4, r1, lsl #2
   18060:	bl	19088 <main@@Base+0x117c>
   18064:	mov	r0, #0
   18068:	pop	{r4, r5, r6, r7, fp, pc}
   1806c:	movw	r0, #53412	; 0xd0a4
   18070:	movt	r0, #2
   18074:	mov	r1, #0
   18078:	str	r1, [r0]
   1807c:	add	r1, r7, #1
   18080:	sub	r0, r5, r1
   18084:	add	r1, r4, r1, lsl #2
   18088:	bl	18194 <main@@Base+0x288>
   1808c:	mov	r0, #0
   18090:	pop	{r4, r5, r6, r7, fp, pc}
   18094:	movw	r0, #53412	; 0xd0a4
   18098:	movt	r0, #2
   1809c:	mov	r1, #1
   180a0:	str	r1, [r0]
   180a4:	add	r1, r7, #1
   180a8:	sub	r0, r5, r1
   180ac:	add	r1, r4, r1, lsl #2
   180b0:	bl	18540 <main@@Base+0x634>
   180b4:	mov	r0, #0
   180b8:	pop	{r4, r5, r6, r7, fp, pc}
   180bc:	ldr	r0, [r4, #8]
   180c0:	bl	12784 <coda_set_definition_path@plt>
   180c4:	mov	r7, #3
   180c8:	b	17fc8 <main@@Base+0xbc>
   180cc:	movw	r0, #53412	; 0xd0a4
   180d0:	movt	r0, #2
   180d4:	mov	r1, #3
   180d8:	str	r1, [r0]
   180dc:	add	r1, r7, #1
   180e0:	sub	r0, r5, r1
   180e4:	add	r1, r4, r1, lsl #2
   180e8:	bl	18a10 <main@@Base+0xb04>
   180ec:	mov	r0, #0
   180f0:	pop	{r4, r5, r6, r7, fp, pc}
   180f4:	movw	r0, #53412	; 0xd0a4
   180f8:	movt	r0, #2
   180fc:	mov	r1, #4
   18100:	str	r1, [r0]
   18104:	add	r1, r7, #1
   18108:	sub	r0, r5, r1
   1810c:	add	r1, r4, r1, lsl #2
   18110:	bl	18d4c <main@@Base+0xe40>
   18114:	mov	r0, #0
   18118:	pop	{r4, r5, r6, r7, fp, pc}
   1811c:	bl	19440 <main@@Base+0x1534>
   18120:	mov	r0, #0
   18124:	bl	12868 <exit@plt>
   18128:	bl	199b4 <main@@Base+0x1aa8>
   1812c:	mov	r0, #0
   18130:	bl	12868 <exit@plt>
   18134:	movw	r0, #49584	; 0xc1b0
   18138:	movt	r0, #2
   1813c:	ldr	r4, [r0]
   18140:	bl	12a60 <coda_get_errno@plt>
   18144:	ldr	r0, [r0]
   18148:	bl	12a18 <coda_errno_to_string@plt>
   1814c:	mov	r2, r0
   18150:	movw	r1, #42198	; 0xa4d6
   18154:	movt	r1, #1
   18158:	mov	r0, r4
   1815c:	bl	128b0 <fprintf@plt>
   18160:	mov	r0, #1
   18164:	bl	12868 <exit@plt>
   18168:	movw	r0, #49584	; 0xc1b0
   1816c:	movt	r0, #2
   18170:	ldr	r3, [r0]
   18174:	movw	r0, #42288	; 0xa530
   18178:	movt	r0, #1
   1817c:	mov	r1, #25
   18180:	mov	r2, #1
   18184:	bl	127cc <fwrite@plt>
   18188:	bl	19440 <main@@Base+0x1534>
   1818c:	mov	r0, #1
   18190:	bl	12868 <exit@plt>
   18194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18198:	add	fp, sp, #28
   1819c:	sub	sp, sp, #12
   181a0:	mov	r9, r1
   181a4:	mov	r5, r0
   181a8:	movw	r0, #49640	; 0xc1e8
   181ac:	movt	r0, #2
   181b0:	mov	r8, #0
   181b4:	str	r8, [r0, #664]	; 0x298
   181b8:	str	r8, [r0]
   181bc:	movw	r0, #49616	; 0xc1d0
   181c0:	movt	r0, #2
   181c4:	mov	r2, #1
   181c8:	mov	r1, #1
   181cc:	str	r1, [sp, #8]
   181d0:	str	r2, [r0]
   181d4:	movw	r6, #49636	; 0xc1e4
   181d8:	movt	r6, #2
   181dc:	str	r8, [r6]
   181e0:	movw	r0, #49620	; 0xc1d4
   181e4:	movt	r0, #2
   181e8:	str	r8, [r0]
   181ec:	movw	r0, #53400	; 0xd098
   181f0:	movt	r0, #2
   181f4:	str	r8, [r0]
   181f8:	movw	r0, #49632	; 0xc1e0
   181fc:	movt	r0, #2
   18200:	str	r8, [r0]
   18204:	movw	r0, #53404	; 0xd09c
   18208:	movt	r0, #2
   1820c:	str	r8, [r0]
   18210:	cmp	r5, #1
   18214:	mov	r7, #1
   18218:	blt	1845c <main@@Base+0x550>
   1821c:	sub	r0, r5, #1
   18220:	str	r0, [sp, #4]
   18224:	mov	r4, #1
   18228:	mov	r7, #1
   1822c:	mov	r0, #1
   18230:	str	r0, [sp, #8]
   18234:	b	18244 <main@@Base+0x338>
   18238:	mov	r0, #0
   1823c:	str	r0, [sp, #8]
   18240:	b	18450 <main@@Base+0x544>
   18244:	ldr	sl, [r9, r8, lsl #2]
   18248:	mov	r0, sl
   1824c:	movw	r1, #42335	; 0xa55f
   18250:	movt	r1, #1
   18254:	bl	12664 <strcmp@plt>
   18258:	cmp	r0, #0
   1825c:	beq	1844c <main@@Base+0x540>
   18260:	mov	r0, sl
   18264:	movw	r1, #42338	; 0xa562
   18268:	movt	r1, #1
   1826c:	bl	12664 <strcmp@plt>
   18270:	cmp	r0, #0
   18274:	beq	1844c <main@@Base+0x540>
   18278:	mov	r0, sl
   1827c:	movw	r1, #42349	; 0xa56d
   18280:	movt	r1, #1
   18284:	bl	12664 <strcmp@plt>
   18288:	cmp	r0, #0
   1828c:	beq	183d0 <main@@Base+0x4c4>
   18290:	mov	r0, sl
   18294:	movw	r1, #42352	; 0xa570
   18298:	movt	r1, #1
   1829c:	bl	12664 <strcmp@plt>
   182a0:	cmp	r0, #0
   182a4:	beq	183d0 <main@@Base+0x4c4>
   182a8:	mov	r4, r6
   182ac:	mov	r0, sl
   182b0:	movw	r1, #42374	; 0xa586
   182b4:	movt	r1, #1
   182b8:	bl	12664 <strcmp@plt>
   182bc:	cmp	r0, #0
   182c0:	beq	182dc <main@@Base+0x3d0>
   182c4:	mov	r0, sl
   182c8:	movw	r1, #42377	; 0xa589
   182cc:	movt	r1, #1
   182d0:	bl	12664 <strcmp@plt>
   182d4:	cmp	r0, #0
   182d8:	bne	182f8 <main@@Base+0x3ec>
   182dc:	add	r6, r8, #1
   182e0:	cmp	r6, r5
   182e4:	bge	182f8 <main@@Base+0x3ec>
   182e8:	ldr	r0, [r9, r6, lsl #2]
   182ec:	ldrb	r1, [r0]
   182f0:	cmp	r1, #45	; 0x2d
   182f4:	bne	18408 <main@@Base+0x4fc>
   182f8:	mov	r0, sl
   182fc:	movw	r1, #42427	; 0xa5bb
   18300:	movt	r1, #1
   18304:	bl	12664 <strcmp@plt>
   18308:	cmp	r0, #0
   1830c:	beq	183d8 <main@@Base+0x4cc>
   18310:	mov	r0, sl
   18314:	movw	r1, #42430	; 0xa5be
   18318:	movt	r1, #1
   1831c:	bl	12664 <strcmp@plt>
   18320:	cmp	r0, #0
   18324:	beq	183d8 <main@@Base+0x4cc>
   18328:	mov	r0, sl
   1832c:	movw	r1, #42437	; 0xa5c5
   18330:	movt	r1, #1
   18334:	bl	12664 <strcmp@plt>
   18338:	cmp	r0, #0
   1833c:	mov	r6, r4
   18340:	beq	183f4 <main@@Base+0x4e8>
   18344:	mov	r0, sl
   18348:	movw	r1, #42440	; 0xa5c8
   1834c:	movt	r1, #1
   18350:	bl	12664 <strcmp@plt>
   18354:	cmp	r0, #0
   18358:	beq	183f4 <main@@Base+0x4e8>
   1835c:	mov	r0, sl
   18360:	movw	r1, #42447	; 0xa5cf
   18364:	movt	r1, #1
   18368:	bl	12664 <strcmp@plt>
   1836c:	cmp	r0, #0
   18370:	mov	r4, #1
   18374:	beq	18430 <main@@Base+0x524>
   18378:	mov	r0, sl
   1837c:	movw	r1, #42461	; 0xa5dd
   18380:	movt	r1, #1
   18384:	bl	12664 <strcmp@plt>
   18388:	cmp	r0, #0
   1838c:	beq	18440 <main@@Base+0x534>
   18390:	mov	r0, sl
   18394:	movw	r1, #42474	; 0xa5ea
   18398:	movt	r1, #1
   1839c:	bl	12664 <strcmp@plt>
   183a0:	cmp	r0, #0
   183a4:	beq	18238 <main@@Base+0x32c>
   183a8:	ldr	r0, [sp, #4]
   183ac:	cmp	r8, r0
   183b0:	bne	184c4 <main@@Base+0x5b8>
   183b4:	ldrb	r0, [sl]
   183b8:	cmp	r0, #45	; 0x2d
   183bc:	beq	184c4 <main@@Base+0x5b8>
   183c0:	movw	r0, #49640	; 0xc1e8
   183c4:	movt	r0, #2
   183c8:	str	sl, [r0]
   183cc:	b	18450 <main@@Base+0x544>
   183d0:	mov	r7, #0
   183d4:	b	18450 <main@@Base+0x544>
   183d8:	movw	r0, #53400	; 0xd098
   183dc:	movt	r0, #2
   183e0:	mov	r1, #1
   183e4:	str	r1, [r0]
   183e8:	mov	r6, r4
   183ec:	mov	r4, #1
   183f0:	b	18450 <main@@Base+0x544>
   183f4:	movw	r0, #49632	; 0xc1e0
   183f8:	movt	r0, #2
   183fc:	mov	r4, #1
   18400:	str	r4, [r0]
   18404:	b	18450 <main@@Base+0x544>
   18408:	bl	157e0 <codadump_filter_create@@Base>
   1840c:	movw	r1, #49640	; 0xc1e8
   18410:	movt	r1, #2
   18414:	str	r0, [r1, #664]	; 0x298
   18418:	cmp	r0, #0
   1841c:	mov	r8, r6
   18420:	mov	r6, r4
   18424:	mov	r4, #1
   18428:	bne	18450 <main@@Base+0x544>
   1842c:	b	184e0 <main@@Base+0x5d4>
   18430:	movw	r0, #53404	; 0xd09c
   18434:	movt	r0, #2
   18438:	str	r4, [r0]
   1843c:	b	18450 <main@@Base+0x544>
   18440:	movw	r0, #49620	; 0xc1d4
   18444:	movt	r0, #2
   18448:	str	r4, [r0]
   1844c:	str	r4, [r6]
   18450:	add	r8, r8, #1
   18454:	cmp	r8, r5
   18458:	blt	18244 <main@@Base+0x338>
   1845c:	movw	r0, #49640	; 0xc1e8
   18460:	movt	r0, #2
   18464:	ldr	r0, [r0]
   18468:	cmp	r0, #0
   1846c:	ldrbne	r0, [r0]
   18470:	cmpne	r0, #0
   18474:	beq	184c4 <main@@Base+0x5b8>
   18478:	bl	128d4 <coda_init@plt>
   1847c:	cmp	r0, #0
   18480:	bne	1850c <main@@Base+0x600>
   18484:	ldr	r0, [sp, #8]
   18488:	clz	r0, r0
   1848c:	lsr	r0, r0, #5
   18490:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18494:	mov	r0, #0
   18498:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   1849c:	mov	r0, r7
   184a0:	bl	128e0 <coda_set_option_perform_conversions@plt>
   184a4:	bl	16b00 <traverse_info_init@@Base>
   184a8:	bl	145d4 <dim_info_init@@Base>
   184ac:	bl	16b58 <traverse_product@@Base>
   184b0:	bl	145f4 <dim_info_done@@Base>
   184b4:	bl	16b20 <traverse_info_done@@Base>
   184b8:	sub	sp, fp, #28
   184bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   184c0:	b	127fc <coda_done@plt>
   184c4:	movw	r0, #49584	; 0xc1b0
   184c8:	movt	r0, #2
   184cc:	ldr	r3, [r0]
   184d0:	movw	r0, #42288	; 0xa530
   184d4:	movt	r0, #1
   184d8:	mov	r1, #25
   184dc:	b	184f8 <main@@Base+0x5ec>
   184e0:	movw	r0, #49584	; 0xc1b0
   184e4:	movt	r0, #2
   184e8:	ldr	r3, [r0]
   184ec:	movw	r0, #42386	; 0xa592
   184f0:	movt	r0, #1
   184f4:	mov	r1, #40	; 0x28
   184f8:	mov	r2, #1
   184fc:	bl	127cc <fwrite@plt>
   18500:	bl	19440 <main@@Base+0x1534>
   18504:	mov	r0, #1
   18508:	bl	12868 <exit@plt>
   1850c:	movw	r0, #49584	; 0xc1b0
   18510:	movt	r0, #2
   18514:	ldr	r4, [r0]
   18518:	bl	12a60 <coda_get_errno@plt>
   1851c:	ldr	r0, [r0]
   18520:	bl	12a18 <coda_errno_to_string@plt>
   18524:	mov	r2, r0
   18528:	movw	r1, #42198	; 0xa4d6
   1852c:	movt	r1, #1
   18530:	mov	r0, r4
   18534:	bl	128b0 <fprintf@plt>
   18538:	mov	r0, #1
   1853c:	bl	12868 <exit@plt>
   18540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18544:	add	fp, sp, #28
   18548:	sub	sp, sp, #12
   1854c:	mov	r4, r1
   18550:	mov	r5, r0
   18554:	movw	r0, #49640	; 0xc1e8
   18558:	movt	r0, #2
   1855c:	mov	r8, #0
   18560:	str	r8, [r0, #664]	; 0x298
   18564:	str	r8, [r0]
   18568:	movw	r0, #49624	; 0xc1d8
   1856c:	movt	r0, #2
   18570:	str	r8, [r0]
   18574:	movw	r1, #53396	; 0xd094
   18578:	movt	r1, #2
   1857c:	movw	r0, #40607	; 0x9e9f
   18580:	movt	r0, #1
   18584:	str	r0, [r1]
   18588:	movw	r0, #49616	; 0xc1d0
   1858c:	movt	r0, #2
   18590:	mov	r2, #1
   18594:	str	r2, [r0]
   18598:	movw	r0, #49636	; 0xc1e4
   1859c:	movt	r0, #2
   185a0:	mov	r1, #1
   185a4:	str	r1, [sp, #8]
   185a8:	str	r2, [r0]
   185ac:	movw	r0, #53408	; 0xd0a0
   185b0:	movt	r0, #2
   185b4:	str	r8, [r0]
   185b8:	movw	r0, #53792	; 0xd220
   185bc:	movt	r0, #2
   185c0:	str	r8, [r0]
   185c4:	movw	r0, #53796	; 0xd224
   185c8:	movt	r0, #2
   185cc:	str	r8, [r0]
   185d0:	movw	r0, #49628	; 0xc1dc
   185d4:	movt	r0, #2
   185d8:	str	r8, [r0]
   185dc:	movw	r0, #49588	; 0xc1b4
   185e0:	movt	r0, #2
   185e4:	ldr	r0, [r0]
   185e8:	movw	r1, #53392	; 0xd090
   185ec:	movt	r1, #2
   185f0:	str	r0, [r1]
   185f4:	cmp	r5, #1
   185f8:	mov	r6, #1
   185fc:	blt	188c8 <main@@Base+0x9bc>
   18600:	sub	r0, r5, #1
   18604:	str	r0, [sp, #4]
   18608:	movw	r7, #42349	; 0xa56d
   1860c:	movt	r7, #1
   18610:	mov	r6, #1
   18614:	mov	r0, #1
   18618:	str	r0, [sp, #8]
   1861c:	b	1864c <main@@Base+0x740>
   18620:	movw	r1, #49624	; 0xc1d8
   18624:	movt	r1, #2
   18628:	str	r0, [r1]
   1862c:	b	188bc <main@@Base+0x9b0>
   18630:	movw	r1, #53396	; 0xd094
   18634:	movt	r1, #2
   18638:	str	r0, [r1]
   1863c:	b	188bc <main@@Base+0x9b0>
   18640:	mov	r0, #0
   18644:	str	r0, [sp, #8]
   18648:	b	188b8 <main@@Base+0x9ac>
   1864c:	ldr	sl, [r4, r8, lsl #2]
   18650:	mov	r0, sl
   18654:	mov	r1, r7
   18658:	bl	12664 <strcmp@plt>
   1865c:	cmp	r0, #0
   18660:	beq	18860 <main@@Base+0x954>
   18664:	mov	r0, sl
   18668:	movw	r1, #42352	; 0xa570
   1866c:	movt	r1, #1
   18670:	bl	12664 <strcmp@plt>
   18674:	cmp	r0, #0
   18678:	beq	18860 <main@@Base+0x954>
   1867c:	mov	r0, sl
   18680:	movw	r1, #42374	; 0xa586
   18684:	movt	r1, #1
   18688:	bl	12664 <strcmp@plt>
   1868c:	cmp	r0, #0
   18690:	beq	186ac <main@@Base+0x7a0>
   18694:	mov	r0, sl
   18698:	movw	r1, #42377	; 0xa589
   1869c:	movt	r1, #1
   186a0:	bl	12664 <strcmp@plt>
   186a4:	cmp	r0, #0
   186a8:	bne	186c8 <main@@Base+0x7bc>
   186ac:	add	r9, r8, #1
   186b0:	cmp	r9, r5
   186b4:	bge	186c8 <main@@Base+0x7bc>
   186b8:	ldr	r0, [r4, r9, lsl #2]
   186bc:	ldrb	r1, [r0]
   186c0:	cmp	r1, #45	; 0x2d
   186c4:	bne	18880 <main@@Base+0x974>
   186c8:	mov	r0, sl
   186cc:	movw	r1, #42493	; 0xa5fd
   186d0:	movt	r1, #1
   186d4:	bl	12664 <strcmp@plt>
   186d8:	cmp	r0, #0
   186dc:	beq	18868 <main@@Base+0x95c>
   186e0:	mov	r0, sl
   186e4:	movw	r1, #42496	; 0xa600
   186e8:	movt	r1, #1
   186ec:	bl	12664 <strcmp@plt>
   186f0:	cmp	r0, #0
   186f4:	beq	18868 <main@@Base+0x95c>
   186f8:	mov	r0, sl
   186fc:	movw	r1, #42504	; 0xa608
   18700:	movt	r1, #1
   18704:	bl	12664 <strcmp@plt>
   18708:	cmp	r0, #0
   1870c:	beq	18874 <main@@Base+0x968>
   18710:	mov	r0, sl
   18714:	movw	r1, #42507	; 0xa60b
   18718:	movt	r1, #1
   1871c:	bl	12664 <strcmp@plt>
   18720:	cmp	r0, #0
   18724:	beq	18874 <main@@Base+0x968>
   18728:	mov	r0, sl
   1872c:	movw	r1, #42515	; 0xa613
   18730:	movt	r1, #1
   18734:	bl	12664 <strcmp@plt>
   18738:	cmp	r0, #0
   1873c:	beq	18758 <main@@Base+0x84c>
   18740:	mov	r0, sl
   18744:	movw	r1, #42518	; 0xa616
   18748:	movt	r1, #1
   1874c:	bl	12664 <strcmp@plt>
   18750:	cmp	r0, #0
   18754:	bne	18774 <main@@Base+0x868>
   18758:	add	r9, r8, #1
   1875c:	cmp	r9, r5
   18760:	bge	18774 <main@@Base+0x868>
   18764:	ldr	r0, [r4, r9, lsl #2]
   18768:	ldrb	r1, [r0]
   1876c:	cmp	r1, #45	; 0x2d
   18770:	bne	18620 <main@@Base+0x714>
   18774:	mov	r0, sl
   18778:	movw	r1, #42527	; 0xa61f
   1877c:	movt	r1, #1
   18780:	bl	12664 <strcmp@plt>
   18784:	cmp	r0, #0
   18788:	beq	1889c <main@@Base+0x990>
   1878c:	mov	r0, sl
   18790:	movw	r1, #42530	; 0xa622
   18794:	movt	r1, #1
   18798:	bl	12664 <strcmp@plt>
   1879c:	cmp	r0, #0
   187a0:	beq	1889c <main@@Base+0x990>
   187a4:	mov	r0, sl
   187a8:	movw	r1, #42546	; 0xa632
   187ac:	movt	r1, #1
   187b0:	bl	12664 <strcmp@plt>
   187b4:	cmp	r0, #0
   187b8:	beq	187d4 <main@@Base+0x8c8>
   187bc:	mov	r0, sl
   187c0:	movw	r1, #42549	; 0xa635
   187c4:	movt	r1, #1
   187c8:	bl	12664 <strcmp@plt>
   187cc:	cmp	r0, #0
   187d0:	bne	187f0 <main@@Base+0x8e4>
   187d4:	add	r9, r8, #1
   187d8:	cmp	r9, r5
   187dc:	bge	187f0 <main@@Base+0x8e4>
   187e0:	ldr	r0, [r4, r9, lsl #2]
   187e4:	ldrb	r1, [r0]
   187e8:	cmp	r1, #45	; 0x2d
   187ec:	bne	18630 <main@@Base+0x724>
   187f0:	mov	r0, sl
   187f4:	movw	r1, #42427	; 0xa5bb
   187f8:	movt	r1, #1
   187fc:	bl	12664 <strcmp@plt>
   18800:	cmp	r0, #0
   18804:	beq	188a8 <main@@Base+0x99c>
   18808:	mov	r0, sl
   1880c:	movw	r1, #42568	; 0xa648
   18810:	movt	r1, #1
   18814:	bl	12664 <strcmp@plt>
   18818:	cmp	r0, #0
   1881c:	beq	188a8 <main@@Base+0x99c>
   18820:	mov	r0, sl
   18824:	movw	r1, #42474	; 0xa5ea
   18828:	movt	r1, #1
   1882c:	bl	12664 <strcmp@plt>
   18830:	cmp	r0, #0
   18834:	beq	18640 <main@@Base+0x734>
   18838:	ldr	r0, [sp, #4]
   1883c:	cmp	r8, r0
   18840:	bne	18978 <main@@Base+0xa6c>
   18844:	ldrb	r0, [sl]
   18848:	cmp	r0, #45	; 0x2d
   1884c:	beq	18978 <main@@Base+0xa6c>
   18850:	movw	r0, #49640	; 0xc1e8
   18854:	movt	r0, #2
   18858:	str	sl, [r0]
   1885c:	b	188b8 <main@@Base+0x9ac>
   18860:	mov	r6, #0
   18864:	b	188b8 <main@@Base+0x9ac>
   18868:	movw	r0, #53408	; 0xd0a0
   1886c:	movt	r0, #2
   18870:	b	188b0 <main@@Base+0x9a4>
   18874:	movw	r0, #53792	; 0xd220
   18878:	movt	r0, #2
   1887c:	b	188b0 <main@@Base+0x9a4>
   18880:	bl	157e0 <codadump_filter_create@@Base>
   18884:	movw	r1, #49640	; 0xc1e8
   18888:	movt	r1, #2
   1888c:	str	r0, [r1, #664]	; 0x298
   18890:	cmp	r0, #0
   18894:	bne	188bc <main@@Base+0x9b0>
   18898:	b	18994 <main@@Base+0xa88>
   1889c:	movw	r0, #53796	; 0xd224
   188a0:	movt	r0, #2
   188a4:	b	188b0 <main@@Base+0x9a4>
   188a8:	movw	r0, #49628	; 0xc1dc
   188ac:	movt	r0, #2
   188b0:	mov	r1, #1
   188b4:	str	r1, [r0]
   188b8:	mov	r9, r8
   188bc:	add	r8, r9, #1
   188c0:	cmp	r8, r5
   188c4:	blt	1864c <main@@Base+0x740>
   188c8:	movw	r0, #49640	; 0xc1e8
   188cc:	movt	r0, #2
   188d0:	ldr	r0, [r0]
   188d4:	cmp	r0, #0
   188d8:	ldrbne	r0, [r0]
   188dc:	cmpne	r0, #0
   188e0:	beq	18978 <main@@Base+0xa6c>
   188e4:	bl	128d4 <coda_init@plt>
   188e8:	cmp	r0, #0
   188ec:	bne	189c0 <main@@Base+0xab4>
   188f0:	ldr	r0, [sp, #8]
   188f4:	clz	r0, r0
   188f8:	lsr	r0, r0, #5
   188fc:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18900:	mov	r0, #0
   18904:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   18908:	mov	r0, r6
   1890c:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18910:	bl	16b00 <traverse_info_init@@Base>
   18914:	bl	145d4 <dim_info_init@@Base>
   18918:	movw	r4, #49624	; 0xc1d8
   1891c:	movt	r4, #2
   18920:	ldr	r0, [r4]
   18924:	cmp	r0, #0
   18928:	movw	r5, #53392	; 0xd090
   1892c:	movt	r5, #2
   18930:	beq	1894c <main@@Base+0xa40>
   18934:	movw	r1, #42585	; 0xa659
   18938:	movt	r1, #1
   1893c:	bl	12694 <fopen@plt>
   18940:	str	r0, [r5]
   18944:	cmp	r0, #0
   18948:	beq	189ec <main@@Base+0xae0>
   1894c:	bl	16b58 <traverse_product@@Base>
   18950:	ldr	r0, [r4]
   18954:	cmp	r0, #0
   18958:	beq	18964 <main@@Base+0xa58>
   1895c:	ldr	r0, [r5]
   18960:	bl	12958 <fclose@plt>
   18964:	bl	145f4 <dim_info_done@@Base>
   18968:	bl	16b20 <traverse_info_done@@Base>
   1896c:	sub	sp, fp, #28
   18970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18974:	b	127fc <coda_done@plt>
   18978:	movw	r0, #49584	; 0xc1b0
   1897c:	movt	r0, #2
   18980:	ldr	r3, [r0]
   18984:	movw	r0, #42288	; 0xa530
   18988:	movt	r0, #1
   1898c:	mov	r1, #25
   18990:	b	189ac <main@@Base+0xaa0>
   18994:	movw	r0, #49584	; 0xc1b0
   18998:	movt	r0, #2
   1899c:	ldr	r3, [r0]
   189a0:	movw	r0, #42386	; 0xa592
   189a4:	movt	r0, #1
   189a8:	mov	r1, #40	; 0x28
   189ac:	mov	r2, #1
   189b0:	bl	127cc <fwrite@plt>
   189b4:	bl	19440 <main@@Base+0x1534>
   189b8:	mov	r0, #1
   189bc:	bl	12868 <exit@plt>
   189c0:	movw	r0, #49584	; 0xc1b0
   189c4:	movt	r0, #2
   189c8:	ldr	r4, [r0]
   189cc:	bl	12a60 <coda_get_errno@plt>
   189d0:	ldr	r0, [r0]
   189d4:	bl	12a18 <coda_errno_to_string@plt>
   189d8:	mov	r2, r0
   189dc:	movw	r1, #42198	; 0xa4d6
   189e0:	movt	r1, #1
   189e4:	mov	r0, r4
   189e8:	b	18a04 <main@@Base+0xaf8>
   189ec:	ldr	r2, [r4]
   189f0:	movw	r0, #49584	; 0xc1b0
   189f4:	movt	r0, #2
   189f8:	ldr	r0, [r0]
   189fc:	movw	r1, #42587	; 0xa65b
   18a00:	movt	r1, #1
   18a04:	bl	128b0 <fprintf@plt>
   18a08:	mov	r0, #1
   18a0c:	bl	12868 <exit@plt>
   18a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a14:	add	fp, sp, #28
   18a18:	sub	sp, sp, #12
   18a1c:	mov	r6, r1
   18a20:	mov	r7, r0
   18a24:	movw	r0, #49624	; 0xc1d8
   18a28:	movt	r0, #2
   18a2c:	mov	r4, #0
   18a30:	str	r4, [r0]
   18a34:	movw	r0, #49640	; 0xc1e8
   18a38:	movt	r0, #2
   18a3c:	str	r4, [r0]
   18a40:	movw	r0, #53416	; 0xd0a8
   18a44:	movt	r0, #2
   18a48:	str	r4, [r0]
   18a4c:	movw	r0, #49588	; 0xc1b4
   18a50:	movt	r0, #2
   18a54:	ldr	r0, [r0]
   18a58:	movw	r1, #53392	; 0xd090
   18a5c:	movt	r1, #2
   18a60:	str	r0, [r1]
   18a64:	cmp	r7, #1
   18a68:	blt	18c24 <main@@Base+0xd18>
   18a6c:	sub	r0, r7, #1
   18a70:	str	r0, [sp]
   18a74:	mov	r0, #1
   18a78:	str	r0, [sp, #8]
   18a7c:	mov	r8, #0
   18a80:	movw	r5, #42629	; 0xa685
   18a84:	movt	r5, #1
   18a88:	movw	r9, #42632	; 0xa688
   18a8c:	movt	r9, #1
   18a90:	mov	r4, #0
   18a94:	mov	r0, #1
   18a98:	str	r0, [sp, #4]
   18a9c:	b	18acc <main@@Base+0xbc0>
   18aa0:	mov	r0, #0
   18aa4:	str	r0, [sp, #4]
   18aa8:	b	18c10 <main@@Base+0xd04>
   18aac:	movw	r2, #49624	; 0xc1d8
   18ab0:	movt	r2, #2
   18ab4:	str	r1, [r2]
   18ab8:	b	18c14 <main@@Base+0xd08>
   18abc:	movw	r2, #53416	; 0xd0a8
   18ac0:	movt	r2, #2
   18ac4:	str	r1, [r2]
   18ac8:	b	18c14 <main@@Base+0xd08>
   18acc:	ldr	sl, [r6, r8, lsl #2]
   18ad0:	mov	r0, sl
   18ad4:	mov	r1, r5
   18ad8:	bl	12664 <strcmp@plt>
   18adc:	cmp	r0, #0
   18ae0:	beq	18c00 <main@@Base+0xcf4>
   18ae4:	mov	r0, sl
   18ae8:	mov	r1, r9
   18aec:	bl	12664 <strcmp@plt>
   18af0:	cmp	r0, #0
   18af4:	beq	18c00 <main@@Base+0xcf4>
   18af8:	mov	r0, sl
   18afc:	movw	r1, #42349	; 0xa56d
   18b00:	movt	r1, #1
   18b04:	bl	12664 <strcmp@plt>
   18b08:	cmp	r0, #0
   18b0c:	beq	18c08 <main@@Base+0xcfc>
   18b10:	mov	r0, sl
   18b14:	movw	r1, #42352	; 0xa570
   18b18:	movt	r1, #1
   18b1c:	bl	12664 <strcmp@plt>
   18b20:	cmp	r0, #0
   18b24:	beq	18c08 <main@@Base+0xcfc>
   18b28:	mov	r0, sl
   18b2c:	movw	r1, #42515	; 0xa613
   18b30:	movt	r1, #1
   18b34:	bl	12664 <strcmp@plt>
   18b38:	cmp	r0, #0
   18b3c:	beq	18b58 <main@@Base+0xc4c>
   18b40:	mov	r0, sl
   18b44:	movw	r1, #42518	; 0xa616
   18b48:	movt	r1, #1
   18b4c:	bl	12664 <strcmp@plt>
   18b50:	cmp	r0, #0
   18b54:	bne	18b74 <main@@Base+0xc68>
   18b58:	add	r0, r8, #1
   18b5c:	cmp	r0, r7
   18b60:	bge	18b74 <main@@Base+0xc68>
   18b64:	ldr	r1, [r6, r0, lsl #2]
   18b68:	ldrb	r2, [r1]
   18b6c:	cmp	r2, #45	; 0x2d
   18b70:	bne	18aac <main@@Base+0xba0>
   18b74:	mov	r0, sl
   18b78:	movw	r1, #42645	; 0xa695
   18b7c:	movt	r1, #1
   18b80:	bl	12664 <strcmp@plt>
   18b84:	cmp	r0, #0
   18b88:	beq	18ba4 <main@@Base+0xc98>
   18b8c:	mov	r0, sl
   18b90:	movw	r1, #42648	; 0xa698
   18b94:	movt	r1, #1
   18b98:	bl	12664 <strcmp@plt>
   18b9c:	cmp	r0, #0
   18ba0:	bne	18bc0 <main@@Base+0xcb4>
   18ba4:	add	r0, r8, #1
   18ba8:	cmp	r0, r7
   18bac:	bge	18bc0 <main@@Base+0xcb4>
   18bb0:	ldr	r1, [r6, r0, lsl #2]
   18bb4:	ldrb	r2, [r1]
   18bb8:	cmp	r2, #45	; 0x2d
   18bbc:	bne	18abc <main@@Base+0xbb0>
   18bc0:	mov	r0, sl
   18bc4:	movw	r1, #42474	; 0xa5ea
   18bc8:	movt	r1, #1
   18bcc:	bl	12664 <strcmp@plt>
   18bd0:	cmp	r0, #0
   18bd4:	beq	18aa0 <main@@Base+0xb94>
   18bd8:	ldr	r0, [sp]
   18bdc:	cmp	r8, r0
   18be0:	bne	18c50 <main@@Base+0xd44>
   18be4:	ldrb	r0, [sl]
   18be8:	cmp	r0, #45	; 0x2d
   18bec:	beq	18c50 <main@@Base+0xd44>
   18bf0:	movw	r0, #49640	; 0xc1e8
   18bf4:	movt	r0, #2
   18bf8:	str	sl, [r0]
   18bfc:	b	18c10 <main@@Base+0xd04>
   18c00:	mov	r4, #1
   18c04:	b	18c10 <main@@Base+0xd04>
   18c08:	mov	r0, #0
   18c0c:	str	r0, [sp, #8]
   18c10:	mov	r0, r8
   18c14:	add	r8, r0, #1
   18c18:	cmp	r8, r7
   18c1c:	blt	18acc <main@@Base+0xbc0>
   18c20:	b	18c34 <main@@Base+0xd28>
   18c24:	mov	r0, #1
   18c28:	str	r0, [sp, #4]
   18c2c:	mov	r0, #1
   18c30:	str	r0, [sp, #8]
   18c34:	movw	r0, #49640	; 0xc1e8
   18c38:	movt	r0, #2
   18c3c:	ldr	r0, [r0]
   18c40:	cmp	r0, #0
   18c44:	ldrbne	r0, [r0]
   18c48:	cmpne	r0, #0
   18c4c:	bne	18c7c <main@@Base+0xd70>
   18c50:	movw	r0, #49584	; 0xc1b0
   18c54:	movt	r0, #2
   18c58:	ldr	r3, [r0]
   18c5c:	movw	r0, #42288	; 0xa530
   18c60:	movt	r0, #1
   18c64:	mov	r1, #25
   18c68:	mov	r2, #1
   18c6c:	bl	127cc <fwrite@plt>
   18c70:	bl	19440 <main@@Base+0x1534>
   18c74:	mov	r0, #1
   18c78:	bl	12868 <exit@plt>
   18c7c:	bl	128d4 <coda_init@plt>
   18c80:	cmp	r0, #0
   18c84:	movw	r5, #49624	; 0xc1d8
   18c88:	movt	r5, #2
   18c8c:	movw	r6, #53392	; 0xd090
   18c90:	movt	r6, #2
   18c94:	bne	18cfc <main@@Base+0xdf0>
   18c98:	ldr	r0, [sp, #4]
   18c9c:	clz	r0, r0
   18ca0:	lsr	r0, r0, #5
   18ca4:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18ca8:	ldr	r0, [sp, #8]
   18cac:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18cb0:	ldr	r0, [r5]
   18cb4:	cmp	r0, #0
   18cb8:	beq	18cd4 <main@@Base+0xdc8>
   18cbc:	movw	r1, #42585	; 0xa659
   18cc0:	movt	r1, #1
   18cc4:	bl	12694 <fopen@plt>
   18cc8:	str	r0, [r6]
   18ccc:	cmp	r0, #0
   18cd0:	beq	18d28 <main@@Base+0xe1c>
   18cd4:	mov	r0, r4
   18cd8:	bl	15cf8 <print_json_data@@Base>
   18cdc:	ldr	r0, [r5]
   18ce0:	cmp	r0, #0
   18ce4:	beq	18cf0 <main@@Base+0xde4>
   18ce8:	ldr	r0, [r6]
   18cec:	bl	12958 <fclose@plt>
   18cf0:	sub	sp, fp, #28
   18cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cf8:	b	127fc <coda_done@plt>
   18cfc:	movw	r0, #49584	; 0xc1b0
   18d00:	movt	r0, #2
   18d04:	ldr	r4, [r0]
   18d08:	bl	12a60 <coda_get_errno@plt>
   18d0c:	ldr	r0, [r0]
   18d10:	bl	12a18 <coda_errno_to_string@plt>
   18d14:	mov	r2, r0
   18d18:	movw	r1, #42198	; 0xa4d6
   18d1c:	movt	r1, #1
   18d20:	mov	r0, r4
   18d24:	b	18d40 <main@@Base+0xe34>
   18d28:	ldr	r2, [r5]
   18d2c:	movw	r0, #49584	; 0xc1b0
   18d30:	movt	r0, #2
   18d34:	ldr	r0, [r0]
   18d38:	movw	r1, #42587	; 0xa65b
   18d3c:	movt	r1, #1
   18d40:	bl	128b0 <fprintf@plt>
   18d44:	mov	r0, #1
   18d48:	bl	12868 <exit@plt>
   18d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d50:	add	fp, sp, #28
   18d54:	sub	sp, sp, #12
   18d58:	mov	r6, r1
   18d5c:	mov	r7, r0
   18d60:	movw	r0, #49624	; 0xc1d8
   18d64:	movt	r0, #2
   18d68:	mov	r4, #0
   18d6c:	str	r4, [r0]
   18d70:	movw	r0, #49640	; 0xc1e8
   18d74:	movt	r0, #2
   18d78:	str	r4, [r0]
   18d7c:	movw	r0, #53416	; 0xd0a8
   18d80:	movt	r0, #2
   18d84:	str	r4, [r0]
   18d88:	movw	r0, #49588	; 0xc1b4
   18d8c:	movt	r0, #2
   18d90:	ldr	r0, [r0]
   18d94:	movw	r1, #53392	; 0xd090
   18d98:	movt	r1, #2
   18d9c:	str	r0, [r1]
   18da0:	cmp	r7, #1
   18da4:	blt	18f60 <main@@Base+0x1054>
   18da8:	sub	r0, r7, #1
   18dac:	str	r0, [sp]
   18db0:	mov	r0, #1
   18db4:	str	r0, [sp, #8]
   18db8:	mov	r8, #0
   18dbc:	movw	r5, #42629	; 0xa685
   18dc0:	movt	r5, #1
   18dc4:	movw	r9, #42632	; 0xa688
   18dc8:	movt	r9, #1
   18dcc:	mov	r4, #0
   18dd0:	mov	r0, #1
   18dd4:	str	r0, [sp, #4]
   18dd8:	b	18e08 <main@@Base+0xefc>
   18ddc:	mov	r0, #0
   18de0:	str	r0, [sp, #4]
   18de4:	b	18f4c <main@@Base+0x1040>
   18de8:	movw	r2, #49624	; 0xc1d8
   18dec:	movt	r2, #2
   18df0:	str	r1, [r2]
   18df4:	b	18f50 <main@@Base+0x1044>
   18df8:	movw	r2, #53416	; 0xd0a8
   18dfc:	movt	r2, #2
   18e00:	str	r1, [r2]
   18e04:	b	18f50 <main@@Base+0x1044>
   18e08:	ldr	sl, [r6, r8, lsl #2]
   18e0c:	mov	r0, sl
   18e10:	mov	r1, r5
   18e14:	bl	12664 <strcmp@plt>
   18e18:	cmp	r0, #0
   18e1c:	beq	18f3c <main@@Base+0x1030>
   18e20:	mov	r0, sl
   18e24:	mov	r1, r9
   18e28:	bl	12664 <strcmp@plt>
   18e2c:	cmp	r0, #0
   18e30:	beq	18f3c <main@@Base+0x1030>
   18e34:	mov	r0, sl
   18e38:	movw	r1, #42349	; 0xa56d
   18e3c:	movt	r1, #1
   18e40:	bl	12664 <strcmp@plt>
   18e44:	cmp	r0, #0
   18e48:	beq	18f44 <main@@Base+0x1038>
   18e4c:	mov	r0, sl
   18e50:	movw	r1, #42352	; 0xa570
   18e54:	movt	r1, #1
   18e58:	bl	12664 <strcmp@plt>
   18e5c:	cmp	r0, #0
   18e60:	beq	18f44 <main@@Base+0x1038>
   18e64:	mov	r0, sl
   18e68:	movw	r1, #42515	; 0xa613
   18e6c:	movt	r1, #1
   18e70:	bl	12664 <strcmp@plt>
   18e74:	cmp	r0, #0
   18e78:	beq	18e94 <main@@Base+0xf88>
   18e7c:	mov	r0, sl
   18e80:	movw	r1, #42518	; 0xa616
   18e84:	movt	r1, #1
   18e88:	bl	12664 <strcmp@plt>
   18e8c:	cmp	r0, #0
   18e90:	bne	18eb0 <main@@Base+0xfa4>
   18e94:	add	r0, r8, #1
   18e98:	cmp	r0, r7
   18e9c:	bge	18eb0 <main@@Base+0xfa4>
   18ea0:	ldr	r1, [r6, r0, lsl #2]
   18ea4:	ldrb	r2, [r1]
   18ea8:	cmp	r2, #45	; 0x2d
   18eac:	bne	18de8 <main@@Base+0xedc>
   18eb0:	mov	r0, sl
   18eb4:	movw	r1, #42645	; 0xa695
   18eb8:	movt	r1, #1
   18ebc:	bl	12664 <strcmp@plt>
   18ec0:	cmp	r0, #0
   18ec4:	beq	18ee0 <main@@Base+0xfd4>
   18ec8:	mov	r0, sl
   18ecc:	movw	r1, #42648	; 0xa698
   18ed0:	movt	r1, #1
   18ed4:	bl	12664 <strcmp@plt>
   18ed8:	cmp	r0, #0
   18edc:	bne	18efc <main@@Base+0xff0>
   18ee0:	add	r0, r8, #1
   18ee4:	cmp	r0, r7
   18ee8:	bge	18efc <main@@Base+0xff0>
   18eec:	ldr	r1, [r6, r0, lsl #2]
   18ef0:	ldrb	r2, [r1]
   18ef4:	cmp	r2, #45	; 0x2d
   18ef8:	bne	18df8 <main@@Base+0xeec>
   18efc:	mov	r0, sl
   18f00:	movw	r1, #42474	; 0xa5ea
   18f04:	movt	r1, #1
   18f08:	bl	12664 <strcmp@plt>
   18f0c:	cmp	r0, #0
   18f10:	beq	18ddc <main@@Base+0xed0>
   18f14:	ldr	r0, [sp]
   18f18:	cmp	r8, r0
   18f1c:	bne	18f8c <main@@Base+0x1080>
   18f20:	ldrb	r0, [sl]
   18f24:	cmp	r0, #45	; 0x2d
   18f28:	beq	18f8c <main@@Base+0x1080>
   18f2c:	movw	r0, #49640	; 0xc1e8
   18f30:	movt	r0, #2
   18f34:	str	sl, [r0]
   18f38:	b	18f4c <main@@Base+0x1040>
   18f3c:	mov	r4, #1
   18f40:	b	18f4c <main@@Base+0x1040>
   18f44:	mov	r0, #0
   18f48:	str	r0, [sp, #8]
   18f4c:	mov	r0, r8
   18f50:	add	r8, r0, #1
   18f54:	cmp	r8, r7
   18f58:	blt	18e08 <main@@Base+0xefc>
   18f5c:	b	18f70 <main@@Base+0x1064>
   18f60:	mov	r0, #1
   18f64:	str	r0, [sp, #4]
   18f68:	mov	r0, #1
   18f6c:	str	r0, [sp, #8]
   18f70:	movw	r0, #49640	; 0xc1e8
   18f74:	movt	r0, #2
   18f78:	ldr	r0, [r0]
   18f7c:	cmp	r0, #0
   18f80:	ldrbne	r0, [r0]
   18f84:	cmpne	r0, #0
   18f88:	bne	18fb8 <main@@Base+0x10ac>
   18f8c:	movw	r0, #49584	; 0xc1b0
   18f90:	movt	r0, #2
   18f94:	ldr	r3, [r0]
   18f98:	movw	r0, #42288	; 0xa530
   18f9c:	movt	r0, #1
   18fa0:	mov	r1, #25
   18fa4:	mov	r2, #1
   18fa8:	bl	127cc <fwrite@plt>
   18fac:	bl	19440 <main@@Base+0x1534>
   18fb0:	mov	r0, #1
   18fb4:	bl	12868 <exit@plt>
   18fb8:	bl	128d4 <coda_init@plt>
   18fbc:	cmp	r0, #0
   18fc0:	movw	r5, #49624	; 0xc1d8
   18fc4:	movt	r5, #2
   18fc8:	movw	r6, #53392	; 0xd090
   18fcc:	movt	r6, #2
   18fd0:	bne	19038 <main@@Base+0x112c>
   18fd4:	ldr	r0, [sp, #4]
   18fd8:	clz	r0, r0
   18fdc:	lsr	r0, r0, #5
   18fe0:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18fe4:	ldr	r0, [sp, #8]
   18fe8:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18fec:	ldr	r0, [r5]
   18ff0:	cmp	r0, #0
   18ff4:	beq	19010 <main@@Base+0x1104>
   18ff8:	movw	r1, #42585	; 0xa659
   18ffc:	movt	r1, #1
   19000:	bl	12694 <fopen@plt>
   19004:	str	r0, [r6]
   19008:	cmp	r0, #0
   1900c:	beq	19064 <main@@Base+0x1158>
   19010:	mov	r0, r4
   19014:	bl	172d4 <print_yaml_data@@Base>
   19018:	ldr	r0, [r5]
   1901c:	cmp	r0, #0
   19020:	beq	1902c <main@@Base+0x1120>
   19024:	ldr	r0, [r6]
   19028:	bl	12958 <fclose@plt>
   1902c:	sub	sp, fp, #28
   19030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19034:	b	127fc <coda_done@plt>
   19038:	movw	r0, #49584	; 0xc1b0
   1903c:	movt	r0, #2
   19040:	ldr	r4, [r0]
   19044:	bl	12a60 <coda_get_errno@plt>
   19048:	ldr	r0, [r0]
   1904c:	bl	12a18 <coda_errno_to_string@plt>
   19050:	mov	r2, r0
   19054:	movw	r1, #42198	; 0xa4d6
   19058:	movt	r1, #1
   1905c:	mov	r0, r4
   19060:	b	1907c <main@@Base+0x1170>
   19064:	ldr	r2, [r5]
   19068:	movw	r0, #49584	; 0xc1b0
   1906c:	movt	r0, #2
   19070:	ldr	r0, [r0]
   19074:	movw	r1, #42587	; 0xa65b
   19078:	movt	r1, #1
   1907c:	bl	128b0 <fprintf@plt>
   19080:	mov	r0, #1
   19084:	bl	12868 <exit@plt>
   19088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1908c:	add	fp, sp, #28
   19090:	sub	sp, sp, #20
   19094:	mov	r5, r1
   19098:	mov	r6, r0
   1909c:	movw	r0, #49624	; 0xc1d8
   190a0:	movt	r0, #2
   190a4:	mov	r1, #0
   190a8:	str	r1, [r0]
   190ac:	movw	r0, #49640	; 0xc1e8
   190b0:	movt	r0, #2
   190b4:	str	r1, [r0]
   190b8:	movw	r0, #53416	; 0xd0a8
   190bc:	movt	r0, #2
   190c0:	str	r1, [r0]
   190c4:	movw	r0, #49588	; 0xc1b4
   190c8:	movt	r0, #2
   190cc:	ldr	r0, [r0]
   190d0:	movw	r1, #53392	; 0xd090
   190d4:	movt	r1, #2
   190d8:	str	r0, [r1]
   190dc:	cmp	r6, #1
   190e0:	blt	19300 <main@@Base+0x13f4>
   190e4:	sub	r0, r6, #1
   190e8:	str	r0, [sp, #16]
   190ec:	mov	sl, #0
   190f0:	mov	r7, #1
   190f4:	movw	r4, #42349	; 0xa56d
   190f8:	movt	r4, #1
   190fc:	mov	r0, #0
   19100:	str	r0, [sp, #8]
   19104:	mov	r0, #0
   19108:	str	r0, [sp, #4]
   1910c:	mov	r0, #0
   19110:	str	r0, [sp, #12]
   19114:	b	1916c <main@@Base+0x1260>
   19118:	movw	r1, #49624	; 0xc1d8
   1911c:	movt	r1, #2
   19120:	str	r0, [r1]
   19124:	b	192f0 <main@@Base+0x13e4>
   19128:	movw	r1, #53416	; 0xd0a8
   1912c:	movt	r1, #2
   19130:	str	r0, [r1]
   19134:	b	192f0 <main@@Base+0x13e4>
   19138:	bl	12a0c <atoi@plt>
   1913c:	movw	r1, #49580	; 0xc1ac
   19140:	movt	r1, #2
   19144:	str	r0, [r1]
   19148:	b	192f0 <main@@Base+0x13e4>
   1914c:	mov	r9, r2
   19150:	mov	sl, r3
   19154:	bl	12a0c <atoi@plt>
   19158:	str	r0, [sp, #8]
   1915c:	str	r9, [sp, #12]
   19160:	mov	r0, sl
   19164:	str	sl, [sp, #4]
   19168:	b	192f0 <main@@Base+0x13e4>
   1916c:	ldr	r9, [r5, sl, lsl #2]
   19170:	mov	r0, r9
   19174:	mov	r1, r4
   19178:	bl	12664 <strcmp@plt>
   1917c:	cmp	r0, #0
   19180:	beq	192e8 <main@@Base+0x13dc>
   19184:	mov	r0, r9
   19188:	movw	r1, #42655	; 0xa69f
   1918c:	movt	r1, #1
   19190:	bl	12664 <strcmp@plt>
   19194:	cmp	r0, #0
   19198:	beq	192e8 <main@@Base+0x13dc>
   1919c:	mov	r0, r9
   191a0:	movw	r1, #42515	; 0xa613
   191a4:	movt	r1, #1
   191a8:	bl	12664 <strcmp@plt>
   191ac:	cmp	r0, #0
   191b0:	beq	191cc <main@@Base+0x12c0>
   191b4:	mov	r0, r9
   191b8:	movw	r1, #42518	; 0xa616
   191bc:	movt	r1, #1
   191c0:	bl	12664 <strcmp@plt>
   191c4:	cmp	r0, #0
   191c8:	bne	191e8 <main@@Base+0x12dc>
   191cc:	add	r8, sl, #1
   191d0:	cmp	r8, r6
   191d4:	bge	191e8 <main@@Base+0x12dc>
   191d8:	ldr	r0, [r5, r8, lsl #2]
   191dc:	ldrb	r1, [r0]
   191e0:	cmp	r1, #45	; 0x2d
   191e4:	bne	19118 <main@@Base+0x120c>
   191e8:	mov	r0, r9
   191ec:	movw	r1, #42645	; 0xa695
   191f0:	movt	r1, #1
   191f4:	bl	12664 <strcmp@plt>
   191f8:	cmp	r0, #0
   191fc:	beq	19218 <main@@Base+0x130c>
   19200:	mov	r0, r9
   19204:	movw	r1, #42648	; 0xa698
   19208:	movt	r1, #1
   1920c:	bl	12664 <strcmp@plt>
   19210:	cmp	r0, #0
   19214:	bne	19234 <main@@Base+0x1328>
   19218:	add	r8, sl, #1
   1921c:	cmp	r8, r6
   19220:	bge	19234 <main@@Base+0x1328>
   19224:	ldr	r0, [r5, r8, lsl #2]
   19228:	ldrb	r1, [r0]
   1922c:	cmp	r1, #45	; 0x2d
   19230:	bne	19128 <main@@Base+0x121c>
   19234:	mov	r0, r9
   19238:	movw	r1, #42687	; 0xa6bf
   1923c:	movt	r1, #1
   19240:	bl	12664 <strcmp@plt>
   19244:	cmp	r0, #0
   19248:	bne	19268 <main@@Base+0x135c>
   1924c:	add	r8, sl, #1
   19250:	cmp	r8, r6
   19254:	bge	19268 <main@@Base+0x135c>
   19258:	ldr	r0, [r5, r8, lsl #2]
   1925c:	ldrb	r1, [r0]
   19260:	cmp	r1, #45	; 0x2d
   19264:	bne	19138 <main@@Base+0x122c>
   19268:	mov	r0, r9
   1926c:	movw	r1, #42699	; 0xa6cb
   19270:	movt	r1, #1
   19274:	bl	12664 <strcmp@plt>
   19278:	cmp	r0, #0
   1927c:	bne	192c0 <main@@Base+0x13b4>
   19280:	add	r8, sl, #3
   19284:	cmp	r8, r6
   19288:	bge	192c0 <main@@Base+0x13b4>
   1928c:	add	r0, r5, sl, lsl #2
   19290:	ldr	r2, [r0, #4]
   19294:	ldrb	r1, [r2]
   19298:	cmp	r1, #45	; 0x2d
   1929c:	beq	192c0 <main@@Base+0x13b4>
   192a0:	ldr	r3, [r0, #8]
   192a4:	ldrb	r0, [r3]
   192a8:	cmp	r0, #45	; 0x2d
   192ac:	beq	192c0 <main@@Base+0x13b4>
   192b0:	ldr	r0, [r5, r8, lsl #2]
   192b4:	ldrb	r1, [r0]
   192b8:	cmp	r1, #45	; 0x2d
   192bc:	bne	1914c <main@@Base+0x1240>
   192c0:	ldr	r0, [sp, #16]
   192c4:	cmp	sl, r0
   192c8:	bne	19338 <main@@Base+0x142c>
   192cc:	ldrb	r0, [r9]
   192d0:	cmp	r0, #45	; 0x2d
   192d4:	beq	19338 <main@@Base+0x142c>
   192d8:	movw	r0, #49640	; 0xc1e8
   192dc:	movt	r0, #2
   192e0:	str	r9, [r0]
   192e4:	b	192ec <main@@Base+0x13e0>
   192e8:	mov	r7, #0
   192ec:	mov	r8, sl
   192f0:	add	sl, r8, #1
   192f4:	cmp	sl, r6
   192f8:	blt	1916c <main@@Base+0x1260>
   192fc:	b	1931c <main@@Base+0x1410>
   19300:	mov	r0, #0
   19304:	str	r0, [sp, #12]
   19308:	mov	r7, #1
   1930c:	mov	r0, #0
   19310:	str	r0, [sp, #4]
   19314:	mov	r0, #0
   19318:	str	r0, [sp, #8]
   1931c:	movw	r0, #49640	; 0xc1e8
   19320:	movt	r0, #2
   19324:	ldr	r0, [r0]
   19328:	cmp	r0, #0
   1932c:	ldrbne	r0, [r0]
   19330:	cmpne	r0, #0
   19334:	bne	19364 <main@@Base+0x1458>
   19338:	movw	r0, #49584	; 0xc1b0
   1933c:	movt	r0, #2
   19340:	ldr	r3, [r0]
   19344:	movw	r0, #42288	; 0xa530
   19348:	movt	r0, #1
   1934c:	mov	r1, #25
   19350:	mov	r2, #1
   19354:	bl	127cc <fwrite@plt>
   19358:	bl	19440 <main@@Base+0x1534>
   1935c:	mov	r0, #1
   19360:	bl	12868 <exit@plt>
   19364:	bl	128d4 <coda_init@plt>
   19368:	cmp	r0, #0
   1936c:	bne	193e8 <main@@Base+0x14dc>
   19370:	mov	r0, #0
   19374:	bl	128e0 <coda_set_option_perform_conversions@plt>
   19378:	mov	r0, r7
   1937c:	bl	12634 <coda_set_option_use_fast_size_expressions@plt>
   19380:	movw	r0, #49624	; 0xc1d8
   19384:	movt	r0, #2
   19388:	ldr	r0, [r0]
   1938c:	cmp	r0, #0
   19390:	movw	r4, #53392	; 0xd090
   19394:	movt	r4, #2
   19398:	beq	193b4 <main@@Base+0x14a8>
   1939c:	movw	r1, #42585	; 0xa659
   193a0:	movt	r1, #1
   193a4:	bl	12694 <fopen@plt>
   193a8:	str	r0, [r4]
   193ac:	cmp	r0, #0
   193b0:	beq	19414 <main@@Base+0x1508>
   193b4:	ldr	r0, [sp, #12]
   193b8:	ldmib	sp, {r1, r2}
   193bc:	bl	13688 <print_debug_data@@Base>
   193c0:	movw	r0, #49624	; 0xc1d8
   193c4:	movt	r0, #2
   193c8:	ldr	r0, [r0]
   193cc:	cmp	r0, #0
   193d0:	beq	193dc <main@@Base+0x14d0>
   193d4:	ldr	r0, [r4]
   193d8:	bl	12958 <fclose@plt>
   193dc:	sub	sp, fp, #28
   193e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193e4:	b	127fc <coda_done@plt>
   193e8:	movw	r0, #49584	; 0xc1b0
   193ec:	movt	r0, #2
   193f0:	ldr	r4, [r0]
   193f4:	bl	12a60 <coda_get_errno@plt>
   193f8:	ldr	r0, [r0]
   193fc:	bl	12a18 <coda_errno_to_string@plt>
   19400:	mov	r2, r0
   19404:	movw	r1, #42198	; 0xa4d6
   19408:	movt	r1, #1
   1940c:	mov	r0, r4
   19410:	b	19434 <main@@Base+0x1528>
   19414:	movw	r0, #49624	; 0xc1d8
   19418:	movt	r0, #2
   1941c:	ldr	r2, [r0]
   19420:	movw	r0, #49584	; 0xc1b0
   19424:	movt	r0, #2
   19428:	ldr	r0, [r0]
   1942c:	movw	r1, #42587	; 0xa65b
   19430:	movt	r1, #1
   19434:	bl	128b0 <fprintf@plt>
   19438:	mov	r0, #1
   1943c:	bl	12868 <exit@plt>
   19440:	push	{fp, lr}
   19444:	mov	fp, sp
   19448:	movw	r0, #42709	; 0xa6d5
   1944c:	movt	r0, #1
   19450:	bl	12808 <puts@plt>
   19454:	movw	r0, #42720	; 0xa6e0
   19458:	movt	r0, #1
   1945c:	bl	12808 <puts@plt>
   19460:	movw	r0, #42800	; 0xa730
   19464:	movt	r0, #1
   19468:	bl	12808 <puts@plt>
   1946c:	movw	r0, #42848	; 0xa760
   19470:	movt	r0, #1
   19474:	bl	12808 <puts@plt>
   19478:	movw	r0, #42880	; 0xa780
   1947c:	movt	r0, #1
   19480:	bl	12808 <puts@plt>
   19484:	movw	r0, #42912	; 0xa7a0
   19488:	movt	r0, #1
   1948c:	bl	12808 <puts@plt>
   19490:	movw	r0, #42976	; 0xa7e0
   19494:	movt	r0, #1
   19498:	bl	12808 <puts@plt>
   1949c:	movw	r0, #43024	; 0xa810
   194a0:	movt	r0, #1
   194a4:	bl	12808 <puts@plt>
   194a8:	movw	r0, #43088	; 0xa850
   194ac:	movt	r0, #1
   194b0:	bl	12808 <puts@plt>
   194b4:	movw	r0, #43136	; 0xa880
   194b8:	movt	r0, #1
   194bc:	bl	12808 <puts@plt>
   194c0:	movw	r0, #43216	; 0xa8d0
   194c4:	movt	r0, #1
   194c8:	bl	12808 <puts@plt>
   194cc:	movw	r0, #43248	; 0xa8f0
   194d0:	movt	r0, #1
   194d4:	bl	12808 <puts@plt>
   194d8:	movw	r0, #43296	; 0xa920
   194dc:	movt	r0, #1
   194e0:	bl	12808 <puts@plt>
   194e4:	movw	r0, #43328	; 0xa940
   194e8:	movt	r0, #1
   194ec:	bl	12808 <puts@plt>
   194f0:	movw	r0, #43376	; 0xa970
   194f4:	movt	r0, #1
   194f8:	bl	12808 <puts@plt>
   194fc:	movw	r0, #43408	; 0xa990
   19500:	movt	r0, #1
   19504:	bl	12808 <puts@plt>
   19508:	movw	r0, #43472	; 0xa9d0
   1950c:	movt	r0, #1
   19510:	bl	12808 <puts@plt>
   19514:	movw	r0, #43504	; 0xa9f0
   19518:	movt	r0, #1
   1951c:	bl	12808 <puts@plt>
   19520:	movw	r0, #43584	; 0xaa40
   19524:	movt	r0, #1
   19528:	bl	12808 <puts@plt>
   1952c:	movw	r0, #43632	; 0xaa70
   19530:	movt	r0, #1
   19534:	bl	12808 <puts@plt>
   19538:	movw	r0, #43664	; 0xaa90
   1953c:	movt	r0, #1
   19540:	bl	12808 <puts@plt>
   19544:	movw	r0, #43744	; 0xaae0
   19548:	movt	r0, #1
   1954c:	bl	12808 <puts@plt>
   19550:	movw	r0, #43824	; 0xab30
   19554:	movt	r0, #1
   19558:	bl	12808 <puts@plt>
   1955c:	mov	r0, #10
   19560:	bl	12910 <putchar@plt>
   19564:	movw	r0, #43856	; 0xab50
   19568:	movt	r0, #1
   1956c:	bl	12808 <puts@plt>
   19570:	movw	r0, #43936	; 0xaba0
   19574:	movt	r0, #1
   19578:	bl	12808 <puts@plt>
   1957c:	movw	r0, #42848	; 0xa760
   19580:	movt	r0, #1
   19584:	bl	12808 <puts@plt>
   19588:	movw	r0, #42976	; 0xa7e0
   1958c:	movt	r0, #1
   19590:	bl	12808 <puts@plt>
   19594:	movw	r0, #43024	; 0xa810
   19598:	movt	r0, #1
   1959c:	bl	12808 <puts@plt>
   195a0:	movw	r0, #43088	; 0xa850
   195a4:	movt	r0, #1
   195a8:	bl	12808 <puts@plt>
   195ac:	movw	r0, #43136	; 0xa880
   195b0:	movt	r0, #1
   195b4:	bl	12808 <puts@plt>
   195b8:	movw	r0, #44000	; 0xabe0
   195bc:	movt	r0, #1
   195c0:	bl	12808 <puts@plt>
   195c4:	movw	r0, #44032	; 0xac00
   195c8:	movt	r0, #1
   195cc:	bl	12808 <puts@plt>
   195d0:	movw	r0, #44112	; 0xac50
   195d4:	movt	r0, #1
   195d8:	bl	12808 <puts@plt>
   195dc:	movw	r0, #44144	; 0xac70
   195e0:	movt	r0, #1
   195e4:	bl	12808 <puts@plt>
   195e8:	movw	r0, #44224	; 0xacc0
   195ec:	movt	r0, #1
   195f0:	bl	12808 <puts@plt>
   195f4:	movw	r0, #44272	; 0xacf0
   195f8:	movt	r0, #1
   195fc:	bl	12808 <puts@plt>
   19600:	movw	r0, #44336	; 0xad30
   19604:	movt	r0, #1
   19608:	bl	12808 <puts@plt>
   1960c:	movw	r0, #44368	; 0xad50
   19610:	movt	r0, #1
   19614:	bl	12808 <puts@plt>
   19618:	movw	r0, #44448	; 0xada0
   1961c:	movt	r0, #1
   19620:	bl	12808 <puts@plt>
   19624:	movw	r0, #44512	; 0xade0
   19628:	movt	r0, #1
   1962c:	bl	12808 <puts@plt>
   19630:	movw	r0, #44592	; 0xae30
   19634:	movt	r0, #1
   19638:	bl	12808 <puts@plt>
   1963c:	movw	r0, #44640	; 0xae60
   19640:	movt	r0, #1
   19644:	bl	12808 <puts@plt>
   19648:	movw	r0, #43632	; 0xaa70
   1964c:	movt	r0, #1
   19650:	bl	12808 <puts@plt>
   19654:	movw	r0, #43664	; 0xaa90
   19658:	movt	r0, #1
   1965c:	bl	12808 <puts@plt>
   19660:	movw	r0, #43744	; 0xaae0
   19664:	movt	r0, #1
   19668:	bl	12808 <puts@plt>
   1966c:	movw	r0, #43824	; 0xab30
   19670:	movt	r0, #1
   19674:	bl	12808 <puts@plt>
   19678:	mov	r0, #10
   1967c:	bl	12910 <putchar@plt>
   19680:	movw	r0, #44720	; 0xaeb0
   19684:	movt	r0, #1
   19688:	bl	12808 <puts@plt>
   1968c:	movw	r0, #44800	; 0xaf00
   19690:	movt	r0, #1
   19694:	bl	12808 <puts@plt>
   19698:	movw	r0, #44864	; 0xaf40
   1969c:	movt	r0, #1
   196a0:	bl	12808 <puts@plt>
   196a4:	movw	r0, #44896	; 0xaf60
   196a8:	movt	r0, #1
   196ac:	bl	12808 <puts@plt>
   196b0:	movw	r0, #44928	; 0xaf80
   196b4:	movt	r0, #1
   196b8:	bl	12808 <puts@plt>
   196bc:	movw	r0, #45008	; 0xafd0
   196c0:	movt	r0, #1
   196c4:	bl	12808 <puts@plt>
   196c8:	movw	r0, #42976	; 0xa7e0
   196cc:	movt	r0, #1
   196d0:	bl	12808 <puts@plt>
   196d4:	movw	r0, #43024	; 0xa810
   196d8:	movt	r0, #1
   196dc:	bl	12808 <puts@plt>
   196e0:	movw	r0, #44224	; 0xacc0
   196e4:	movt	r0, #1
   196e8:	bl	12808 <puts@plt>
   196ec:	movw	r0, #44272	; 0xacf0
   196f0:	movt	r0, #1
   196f4:	bl	12808 <puts@plt>
   196f8:	movw	r0, #45088	; 0xb020
   196fc:	movt	r0, #1
   19700:	bl	12808 <puts@plt>
   19704:	movw	r0, #45120	; 0xb040
   19708:	movt	r0, #1
   1970c:	bl	12808 <puts@plt>
   19710:	movw	r0, #45200	; 0xb090
   19714:	movt	r0, #1
   19718:	bl	12808 <puts@plt>
   1971c:	movw	r0, #43632	; 0xaa70
   19720:	movt	r0, #1
   19724:	bl	12808 <puts@plt>
   19728:	movw	r0, #43664	; 0xaa90
   1972c:	movt	r0, #1
   19730:	bl	12808 <puts@plt>
   19734:	movw	r0, #43744	; 0xaae0
   19738:	movt	r0, #1
   1973c:	bl	12808 <puts@plt>
   19740:	movw	r0, #43824	; 0xab30
   19744:	movt	r0, #1
   19748:	bl	12808 <puts@plt>
   1974c:	mov	r0, #10
   19750:	bl	12910 <putchar@plt>
   19754:	movw	r0, #45280	; 0xb0e0
   19758:	movt	r0, #1
   1975c:	bl	12808 <puts@plt>
   19760:	movw	r0, #45360	; 0xb130
   19764:	movt	r0, #1
   19768:	bl	12808 <puts@plt>
   1976c:	movw	r0, #45424	; 0xb170
   19770:	movt	r0, #1
   19774:	bl	12808 <puts@plt>
   19778:	movw	r0, #44896	; 0xaf60
   1977c:	movt	r0, #1
   19780:	bl	12808 <puts@plt>
   19784:	movw	r0, #44928	; 0xaf80
   19788:	movt	r0, #1
   1978c:	bl	12808 <puts@plt>
   19790:	movw	r0, #45456	; 0xb190
   19794:	movt	r0, #1
   19798:	bl	12808 <puts@plt>
   1979c:	movw	r0, #45536	; 0xb1e0
   197a0:	movt	r0, #1
   197a4:	bl	12808 <puts@plt>
   197a8:	movw	r0, #42976	; 0xa7e0
   197ac:	movt	r0, #1
   197b0:	bl	12808 <puts@plt>
   197b4:	movw	r0, #43024	; 0xa810
   197b8:	movt	r0, #1
   197bc:	bl	12808 <puts@plt>
   197c0:	movw	r0, #44224	; 0xacc0
   197c4:	movt	r0, #1
   197c8:	bl	12808 <puts@plt>
   197cc:	movw	r0, #44272	; 0xacf0
   197d0:	movt	r0, #1
   197d4:	bl	12808 <puts@plt>
   197d8:	movw	r0, #45088	; 0xb020
   197dc:	movt	r0, #1
   197e0:	bl	12808 <puts@plt>
   197e4:	movw	r0, #45120	; 0xb040
   197e8:	movt	r0, #1
   197ec:	bl	12808 <puts@plt>
   197f0:	movw	r0, #45200	; 0xb090
   197f4:	movt	r0, #1
   197f8:	bl	12808 <puts@plt>
   197fc:	movw	r0, #43632	; 0xaa70
   19800:	movt	r0, #1
   19804:	bl	12808 <puts@plt>
   19808:	movw	r0, #43664	; 0xaa90
   1980c:	movt	r0, #1
   19810:	bl	12808 <puts@plt>
   19814:	movw	r0, #43744	; 0xaae0
   19818:	movt	r0, #1
   1981c:	bl	12808 <puts@plt>
   19820:	movw	r0, #43824	; 0xab30
   19824:	movt	r0, #1
   19828:	bl	12808 <puts@plt>
   1982c:	mov	r0, #10
   19830:	bl	12910 <putchar@plt>
   19834:	movw	r0, #45568	; 0xb200
   19838:	movt	r0, #1
   1983c:	bl	12808 <puts@plt>
   19840:	movw	r0, #45648	; 0xb250
   19844:	movt	r0, #1
   19848:	bl	12808 <puts@plt>
   1984c:	movw	r0, #45728	; 0xb2a0
   19850:	movt	r0, #1
   19854:	bl	12808 <puts@plt>
   19858:	movw	r0, #45808	; 0xb2f0
   1985c:	movt	r0, #1
   19860:	bl	12808 <puts@plt>
   19864:	movw	r0, #45856	; 0xb320
   19868:	movt	r0, #1
   1986c:	bl	12808 <puts@plt>
   19870:	movw	r0, #45888	; 0xb340
   19874:	movt	r0, #1
   19878:	bl	12808 <puts@plt>
   1987c:	movw	r0, #45936	; 0xb370
   19880:	movt	r0, #1
   19884:	bl	12808 <puts@plt>
   19888:	movw	r0, #44224	; 0xacc0
   1988c:	movt	r0, #1
   19890:	bl	12808 <puts@plt>
   19894:	movw	r0, #44272	; 0xacf0
   19898:	movt	r0, #1
   1989c:	bl	12808 <puts@plt>
   198a0:	movw	r0, #45088	; 0xb020
   198a4:	movt	r0, #1
   198a8:	bl	12808 <puts@plt>
   198ac:	movw	r0, #45120	; 0xb040
   198b0:	movt	r0, #1
   198b4:	bl	12808 <puts@plt>
   198b8:	movw	r0, #45200	; 0xb090
   198bc:	movt	r0, #1
   198c0:	bl	12808 <puts@plt>
   198c4:	movw	r0, #46000	; 0xb3b0
   198c8:	movt	r0, #1
   198cc:	bl	12808 <puts@plt>
   198d0:	movw	r0, #46032	; 0xb3d0
   198d4:	movt	r0, #1
   198d8:	bl	12808 <puts@plt>
   198dc:	movw	r0, #46112	; 0xb420
   198e0:	movt	r0, #1
   198e4:	bl	12808 <puts@plt>
   198e8:	movw	r0, #46192	; 0xb470
   198ec:	movt	r0, #1
   198f0:	bl	12808 <puts@plt>
   198f4:	movw	r0, #46256	; 0xb4b0
   198f8:	movt	r0, #1
   198fc:	bl	12808 <puts@plt>
   19900:	movw	r0, #46336	; 0xb500
   19904:	movt	r0, #1
   19908:	bl	12808 <puts@plt>
   1990c:	mov	r0, #10
   19910:	bl	12910 <putchar@plt>
   19914:	movw	r0, #46400	; 0xb540
   19918:	movt	r0, #1
   1991c:	bl	12808 <puts@plt>
   19920:	movw	r0, #46432	; 0xb560
   19924:	movt	r0, #1
   19928:	bl	12808 <puts@plt>
   1992c:	mov	r0, #10
   19930:	bl	12910 <putchar@plt>
   19934:	movw	r0, #46464	; 0xb580
   19938:	movt	r0, #1
   1993c:	bl	12808 <puts@plt>
   19940:	movw	r0, #46496	; 0xb5a0
   19944:	movt	r0, #1
   19948:	bl	12808 <puts@plt>
   1994c:	mov	r0, #10
   19950:	bl	12910 <putchar@plt>
   19954:	movw	r0, #46560	; 0xb5e0
   19958:	movt	r0, #1
   1995c:	bl	12808 <puts@plt>
   19960:	movw	r0, #46640	; 0xb630
   19964:	movt	r0, #1
   19968:	bl	12808 <puts@plt>
   1996c:	movw	r0, #46720	; 0xb680
   19970:	movt	r0, #1
   19974:	bl	12808 <puts@plt>
   19978:	movw	r0, #46768	; 0xb6b0
   1997c:	movt	r0, #1
   19980:	bl	12808 <puts@plt>
   19984:	movw	r0, #46848	; 0xb700
   19988:	movt	r0, #1
   1998c:	bl	12808 <puts@plt>
   19990:	movw	r0, #46928	; 0xb750
   19994:	movt	r0, #1
   19998:	bl	12808 <puts@plt>
   1999c:	movw	r0, #46992	; 0xb790
   199a0:	movt	r0, #1
   199a4:	bl	12808 <puts@plt>
   199a8:	mov	r0, #10
   199ac:	pop	{fp, lr}
   199b0:	b	12910 <putchar@plt>
   199b4:	push	{fp, lr}
   199b8:	mov	fp, sp
   199bc:	bl	12a54 <coda_get_libcoda_version@plt>
   199c0:	mov	r1, r0
   199c4:	movw	r0, #42314	; 0xa54a
   199c8:	movt	r0, #1
   199cc:	bl	1267c <printf@plt>
   199d0:	movw	r0, #47056	; 0xb7d0
   199d4:	movt	r0, #1
   199d8:	bl	12808 <puts@plt>
   199dc:	mov	r0, #10
   199e0:	pop	{fp, lr}
   199e4:	b	12910 <putchar@plt>
   199e8:	cmp	r3, #0
   199ec:	cmpeq	r2, #0
   199f0:	bne	19a14 <main@@Base+0x1b08>
   199f4:	cmp	r1, #0
   199f8:	movlt	r1, #-2147483648	; 0x80000000
   199fc:	movlt	r0, #0
   19a00:	blt	19a10 <main@@Base+0x1b04>
   19a04:	cmpeq	r0, #0
   19a08:	mvnne	r1, #-2147483648	; 0x80000000
   19a0c:	mvnne	r0, #0
   19a10:	b	19abc <main@@Base+0x1bb0>
   19a14:	sub	sp, sp, #8
   19a18:	push	{sp, lr}
   19a1c:	cmp	r1, #0
   19a20:	blt	19a40 <main@@Base+0x1b34>
   19a24:	cmp	r3, #0
   19a28:	blt	19a74 <main@@Base+0x1b68>
   19a2c:	bl	19acc <main@@Base+0x1bc0>
   19a30:	ldr	lr, [sp, #4]
   19a34:	add	sp, sp, #8
   19a38:	pop	{r2, r3}
   19a3c:	bx	lr
   19a40:	rsbs	r0, r0, #0
   19a44:	sbc	r1, r1, r1, lsl #1
   19a48:	cmp	r3, #0
   19a4c:	blt	19a98 <main@@Base+0x1b8c>
   19a50:	bl	19acc <main@@Base+0x1bc0>
   19a54:	ldr	lr, [sp, #4]
   19a58:	add	sp, sp, #8
   19a5c:	pop	{r2, r3}
   19a60:	rsbs	r0, r0, #0
   19a64:	sbc	r1, r1, r1, lsl #1
   19a68:	rsbs	r2, r2, #0
   19a6c:	sbc	r3, r3, r3, lsl #1
   19a70:	bx	lr
   19a74:	rsbs	r2, r2, #0
   19a78:	sbc	r3, r3, r3, lsl #1
   19a7c:	bl	19acc <main@@Base+0x1bc0>
   19a80:	ldr	lr, [sp, #4]
   19a84:	add	sp, sp, #8
   19a88:	pop	{r2, r3}
   19a8c:	rsbs	r0, r0, #0
   19a90:	sbc	r1, r1, r1, lsl #1
   19a94:	bx	lr
   19a98:	rsbs	r2, r2, #0
   19a9c:	sbc	r3, r3, r3, lsl #1
   19aa0:	bl	19acc <main@@Base+0x1bc0>
   19aa4:	ldr	lr, [sp, #4]
   19aa8:	add	sp, sp, #8
   19aac:	pop	{r2, r3}
   19ab0:	rsbs	r2, r2, #0
   19ab4:	sbc	r3, r3, r3, lsl #1
   19ab8:	bx	lr
   19abc:	push	{r1, lr}
   19ac0:	mov	r0, #8
   19ac4:	bl	12640 <raise@plt>
   19ac8:	pop	{r1, pc}
   19acc:	cmp	r1, r3
   19ad0:	cmpeq	r0, r2
   19ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ad8:	mov	r4, r0
   19adc:	movcc	r0, #0
   19ae0:	mov	r5, r1
   19ae4:	ldr	lr, [sp, #36]	; 0x24
   19ae8:	movcc	r1, r0
   19aec:	bcc	19be8 <main@@Base+0x1cdc>
   19af0:	cmp	r3, #0
   19af4:	clzeq	ip, r2
   19af8:	clzne	ip, r3
   19afc:	addeq	ip, ip, #32
   19b00:	cmp	r5, #0
   19b04:	clzeq	r1, r4
   19b08:	addeq	r1, r1, #32
   19b0c:	clzne	r1, r5
   19b10:	sub	ip, ip, r1
   19b14:	sub	sl, ip, #32
   19b18:	lsl	r9, r3, ip
   19b1c:	rsb	fp, ip, #32
   19b20:	orr	r9, r9, r2, lsl sl
   19b24:	orr	r9, r9, r2, lsr fp
   19b28:	lsl	r8, r2, ip
   19b2c:	cmp	r5, r9
   19b30:	cmpeq	r4, r8
   19b34:	movcc	r0, #0
   19b38:	movcc	r1, r0
   19b3c:	bcc	19b58 <main@@Base+0x1c4c>
   19b40:	mov	r0, #1
   19b44:	subs	r4, r4, r8
   19b48:	lsl	r1, r0, sl
   19b4c:	orr	r1, r1, r0, lsr fp
   19b50:	lsl	r0, r0, ip
   19b54:	sbc	r5, r5, r9
   19b58:	cmp	ip, #0
   19b5c:	beq	19be8 <main@@Base+0x1cdc>
   19b60:	lsr	r6, r8, #1
   19b64:	orr	r6, r6, r9, lsl #31
   19b68:	lsr	r7, r9, #1
   19b6c:	mov	r2, ip
   19b70:	b	19b94 <main@@Base+0x1c88>
   19b74:	subs	r3, r4, r6
   19b78:	sbc	r8, r5, r7
   19b7c:	adds	r3, r3, r3
   19b80:	adc	r8, r8, r8
   19b84:	adds	r4, r3, #1
   19b88:	adc	r5, r8, #0
   19b8c:	subs	r2, r2, #1
   19b90:	beq	19bb0 <main@@Base+0x1ca4>
   19b94:	cmp	r5, r7
   19b98:	cmpeq	r4, r6
   19b9c:	bcs	19b74 <main@@Base+0x1c68>
   19ba0:	adds	r4, r4, r4
   19ba4:	adc	r5, r5, r5
   19ba8:	subs	r2, r2, #1
   19bac:	bne	19b94 <main@@Base+0x1c88>
   19bb0:	lsr	r3, r4, ip
   19bb4:	orr	r3, r3, r5, lsl fp
   19bb8:	lsr	r2, r5, ip
   19bbc:	orr	r3, r3, r5, lsr sl
   19bc0:	adds	r0, r0, r4
   19bc4:	mov	r4, r3
   19bc8:	lsl	r3, r2, ip
   19bcc:	orr	r3, r3, r4, lsl sl
   19bd0:	lsl	ip, r4, ip
   19bd4:	orr	r3, r3, r4, lsr fp
   19bd8:	adc	r1, r1, r5
   19bdc:	subs	r0, r0, ip
   19be0:	mov	r5, r2
   19be4:	sbc	r1, r1, r3
   19be8:	cmp	lr, #0
   19bec:	strdne	r4, [lr]
   19bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019bf4 <__libc_csu_init@@Base>:
   19bf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19bf8:	mov	r7, r0
   19bfc:	ldr	r6, [pc, #72]	; 19c4c <__libc_csu_init@@Base+0x58>
   19c00:	ldr	r5, [pc, #72]	; 19c50 <__libc_csu_init@@Base+0x5c>
   19c04:	add	r6, pc, r6
   19c08:	add	r5, pc, r5
   19c0c:	sub	r6, r6, r5
   19c10:	mov	r8, r1
   19c14:	mov	r9, r2
   19c18:	bl	125fc <coda_cursor_get_byte_size@plt-0x20>
   19c1c:	asrs	r6, r6, #2
   19c20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19c24:	mov	r4, #0
   19c28:	add	r4, r4, #1
   19c2c:	ldr	r3, [r5], #4
   19c30:	mov	r2, r9
   19c34:	mov	r1, r8
   19c38:	mov	r0, r7
   19c3c:	blx	r3
   19c40:	cmp	r6, r4
   19c44:	bne	19c28 <__libc_csu_init@@Base+0x34>
   19c48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19c4c:	andeq	r2, r1, r8, ror #5
   19c50:	andeq	r2, r1, r0, ror #5

00019c54 <__libc_csu_fini@@Base>:
   19c54:	bx	lr

Disassembly of section .fini:

00019c58 <.fini>:
   19c58:	push	{r3, lr}
   19c5c:	pop	{r3, pc}
