
../repos/coreutils/src/env:     file format elf32-littlearm


Disassembly of section .init:

00011160 <.init>:
   11160:	push	{r3, lr}
   11164:	bl	114c8 <strspn@plt+0x48>
   11168:	pop	{r3, pc}

Disassembly of section .plt:

0001116c <calloc@plt-0x14>:
   1116c:	push	{lr}		; (str lr, [sp, #-4]!)
   11170:	ldr	lr, [pc, #4]	; 1117c <calloc@plt-0x4>
   11174:	add	lr, pc, lr
   11178:	ldr	pc, [lr, #8]!
   1117c:	andeq	r6, r1, r4, lsl #29

00011180 <calloc@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #90112	; 0x16000
   11188:	ldr	pc, [ip, #3716]!	; 0xe84

0001118c <fputs_unlocked@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #90112	; 0x16000
   11194:	ldr	pc, [ip, #3708]!	; 0xe7c

00011198 <strcmp@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #90112	; 0x16000
   111a0:	ldr	pc, [ip, #3700]!	; 0xe74

000111a4 <strtol@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #90112	; 0x16000
   111ac:	ldr	pc, [ip, #3692]!	; 0xe6c

000111b0 <fflush@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #90112	; 0x16000
   111b8:	ldr	pc, [ip, #3684]!	; 0xe64

000111bc <sigprocmask@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #90112	; 0x16000
   111c4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111c8 <memmove@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #90112	; 0x16000
   111d0:	ldr	pc, [ip, #3668]!	; 0xe54

000111d4 <free@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #90112	; 0x16000
   111dc:	ldr	pc, [ip, #3660]!	; 0xe4c

000111e0 <_exit@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #90112	; 0x16000
   111e8:	ldr	pc, [ip, #3652]!	; 0xe44

000111ec <memcpy@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #90112	; 0x16000
   111f4:	ldr	pc, [ip, #3644]!	; 0xe3c

000111f8 <execvp@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #90112	; 0x16000
   11200:	ldr	pc, [ip, #3636]!	; 0xe34

00011204 <mbsinit@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #90112	; 0x16000
   1120c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011210 <memcmp@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #90112	; 0x16000
   11218:	ldr	pc, [ip, #3620]!	; 0xe24

0001121c <dcgettext@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #90112	; 0x16000
   11224:	ldr	pc, [ip, #3612]!	; 0xe1c

00011228 <realloc@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #90112	; 0x16000
   11230:	ldr	pc, [ip, #3604]!	; 0xe14

00011234 <sigismember@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #90112	; 0x16000
   1123c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011240 <textdomain@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #90112	; 0x16000
   11248:	ldr	pc, [ip, #3588]!	; 0xe04

0001124c <chdir@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #90112	; 0x16000
   11254:	ldr	pc, [ip, #3580]!	; 0xdfc

00011258 <iswprint@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #90112	; 0x16000
   11260:	ldr	pc, [ip, #3572]!	; 0xdf4

00011264 <sigaction@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #90112	; 0x16000
   1126c:	ldr	pc, [ip, #3564]!	; 0xdec

00011270 <fwrite@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #90112	; 0x16000
   11278:	ldr	pc, [ip, #3556]!	; 0xde4

0001127c <lseek64@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #90112	; 0x16000
   11284:	ldr	pc, [ip, #3548]!	; 0xddc

00011288 <__ctype_get_mb_cur_max@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #90112	; 0x16000
   11290:	ldr	pc, [ip, #3540]!	; 0xdd4

00011294 <strcpy@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #90112	; 0x16000
   1129c:	ldr	pc, [ip, #3532]!	; 0xdcc

000112a0 <__fpending@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #90112	; 0x16000
   112a8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112ac <ferror_unlocked@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #90112	; 0x16000
   112b4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112b8 <mbrtowc@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #90112	; 0x16000
   112c0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112c4 <error@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #90112	; 0x16000
   112cc:	ldr	pc, [ip, #3500]!	; 0xdac

000112d0 <getenv@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #90112	; 0x16000
   112d8:	ldr	pc, [ip, #3492]!	; 0xda4

000112dc <malloc@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #90112	; 0x16000
   112e4:	ldr	pc, [ip, #3484]!	; 0xd9c

000112e8 <sigaddset@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #90112	; 0x16000
   112f0:	ldr	pc, [ip, #3476]!	; 0xd94

000112f4 <__libc_start_main@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #90112	; 0x16000
   112fc:	ldr	pc, [ip, #3468]!	; 0xd8c

00011300 <__freading@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #90112	; 0x16000
   11308:	ldr	pc, [ip, #3460]!	; 0xd84

0001130c <__gmon_start__@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #90112	; 0x16000
   11314:	ldr	pc, [ip, #3452]!	; 0xd7c

00011318 <getopt_long@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #90112	; 0x16000
   11320:	ldr	pc, [ip, #3444]!	; 0xd74

00011324 <__ctype_b_loc@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #90112	; 0x16000
   1132c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011330 <exit@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #90112	; 0x16000
   11338:	ldr	pc, [ip, #3428]!	; 0xd64

0001133c <strlen@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #90112	; 0x16000
   11344:	ldr	pc, [ip, #3420]!	; 0xd5c

00011348 <__libc_current_sigrtmax@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #90112	; 0x16000
   11350:	ldr	pc, [ip, #3412]!	; 0xd54

00011354 <strchr@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #90112	; 0x16000
   1135c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011360 <sigfillset@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #90112	; 0x16000
   11368:	ldr	pc, [ip, #3396]!	; 0xd44

0001136c <__errno_location@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #90112	; 0x16000
   11374:	ldr	pc, [ip, #3388]!	; 0xd3c

00011378 <__sprintf_chk@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #90112	; 0x16000
   11380:	ldr	pc, [ip, #3380]!	; 0xd34

00011384 <__cxa_atexit@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #90112	; 0x16000
   1138c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011390 <memset@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #90112	; 0x16000
   11398:	ldr	pc, [ip, #3364]!	; 0xd24

0001139c <__printf_chk@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #90112	; 0x16000
   113a4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113a8 <sigdelset@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #90112	; 0x16000
   113b0:	ldr	pc, [ip, #3348]!	; 0xd14

000113b4 <fileno@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #90112	; 0x16000
   113bc:	ldr	pc, [ip, #3340]!	; 0xd0c

000113c0 <__fprintf_chk@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #90112	; 0x16000
   113c8:	ldr	pc, [ip, #3332]!	; 0xd04

000113cc <memchr@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #90112	; 0x16000
   113d4:	ldr	pc, [ip, #3324]!	; 0xcfc

000113d8 <fclose@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #90112	; 0x16000
   113e0:	ldr	pc, [ip, #3316]!	; 0xcf4

000113e4 <fseeko64@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #90112	; 0x16000
   113ec:	ldr	pc, [ip, #3308]!	; 0xcec

000113f0 <strtok@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #90112	; 0x16000
   113f8:	ldr	pc, [ip, #3300]!	; 0xce4

000113fc <setlocale@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #90112	; 0x16000
   11404:	ldr	pc, [ip, #3292]!	; 0xcdc

00011408 <sigemptyset@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #90112	; 0x16000
   11410:	ldr	pc, [ip, #3284]!	; 0xcd4

00011414 <putenv@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #90112	; 0x16000
   1141c:	ldr	pc, [ip, #3276]!	; 0xccc

00011420 <strrchr@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #90112	; 0x16000
   11428:	ldr	pc, [ip, #3268]!	; 0xcc4

0001142c <nl_langinfo@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #90112	; 0x16000
   11434:	ldr	pc, [ip, #3260]!	; 0xcbc

00011438 <strpbrk@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #90112	; 0x16000
   11440:	ldr	pc, [ip, #3252]!	; 0xcb4

00011444 <bindtextdomain@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #90112	; 0x16000
   1144c:	ldr	pc, [ip, #3244]!	; 0xcac

00011450 <__libc_current_sigrtmin@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #90112	; 0x16000
   11458:	ldr	pc, [ip, #3236]!	; 0xca4

0001145c <unsetenv@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #90112	; 0x16000
   11464:	ldr	pc, [ip, #3228]!	; 0xc9c

00011468 <strncmp@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #90112	; 0x16000
   11470:	ldr	pc, [ip, #3220]!	; 0xc94

00011474 <abort@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #90112	; 0x16000
   1147c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011480 <strspn@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #90112	; 0x16000
   11488:	ldr	pc, [ip, #3204]!	; 0xc84

Disassembly of section .text:

0001148c <.text>:
   1148c:	mov	fp, #0
   11490:	mov	lr, #0
   11494:	pop	{r1}		; (ldr r1, [sp], #4)
   11498:	mov	r2, sp
   1149c:	push	{r2}		; (str r2, [sp, #-4]!)
   114a0:	push	{r0}		; (str r0, [sp, #-4]!)
   114a4:	ldr	ip, [pc, #16]	; 114bc <strspn@plt+0x3c>
   114a8:	push	{ip}		; (str ip, [sp, #-4]!)
   114ac:	ldr	r0, [pc, #12]	; 114c0 <strspn@plt+0x40>
   114b0:	ldr	r3, [pc, #12]	; 114c4 <strspn@plt+0x44>
   114b4:	bl	112f4 <__libc_start_main@plt>
   114b8:	bl	11474 <abort@plt>
   114bc:	andeq	r6, r1, r8, lsr #14
   114c0:	andeq	r1, r1, r8, lsr r9
   114c4:	andeq	r6, r1, r8, asr #13
   114c8:	ldr	r3, [pc, #20]	; 114e4 <strspn@plt+0x64>
   114cc:	ldr	r2, [pc, #20]	; 114e8 <strspn@plt+0x68>
   114d0:	add	r3, pc, r3
   114d4:	ldr	r2, [r3, r2]
   114d8:	cmp	r2, #0
   114dc:	bxeq	lr
   114e0:	b	1130c <__gmon_start__@plt>
   114e4:	andeq	r6, r1, r8, lsr #22
   114e8:	andeq	r0, r0, r0, lsl r1
   114ec:	ldr	r0, [pc, #24]	; 1150c <strspn@plt+0x8c>
   114f0:	ldr	r3, [pc, #24]	; 11510 <strspn@plt+0x90>
   114f4:	cmp	r3, r0
   114f8:	bxeq	lr
   114fc:	ldr	r3, [pc, #16]	; 11514 <strspn@plt+0x94>
   11500:	cmp	r3, #0
   11504:	bxeq	lr
   11508:	bx	r3
   1150c:	andeq	r8, r2, ip, lsl #6
   11510:	andeq	r8, r2, ip, lsl #6
   11514:	andeq	r0, r0, r0
   11518:	ldr	r0, [pc, #36]	; 11544 <strspn@plt+0xc4>
   1151c:	ldr	r1, [pc, #36]	; 11548 <strspn@plt+0xc8>
   11520:	sub	r1, r1, r0
   11524:	asr	r1, r1, #2
   11528:	add	r1, r1, r1, lsr #31
   1152c:	asrs	r1, r1, #1
   11530:	bxeq	lr
   11534:	ldr	r3, [pc, #16]	; 1154c <strspn@plt+0xcc>
   11538:	cmp	r3, #0
   1153c:	bxeq	lr
   11540:	bx	r3
   11544:	andeq	r8, r2, ip, lsl #6
   11548:	andeq	r8, r2, ip, lsl #6
   1154c:	andeq	r0, r0, r0
   11550:	push	{r4, lr}
   11554:	ldr	r4, [pc, #24]	; 11574 <strspn@plt+0xf4>
   11558:	ldrb	r3, [r4]
   1155c:	cmp	r3, #0
   11560:	popne	{r4, pc}
   11564:	bl	114ec <strspn@plt+0x6c>
   11568:	mov	r3, #1
   1156c:	strb	r3, [r4]
   11570:	pop	{r4, pc}
   11574:	andeq	r8, r2, r4, lsr r3
   11578:	b	11518 <strspn@plt+0x98>
   1157c:	push	{fp, lr}
   11580:	mov	fp, sp
   11584:	mov	r4, r0
   11588:	cmp	r0, #0
   1158c:	bne	11740 <strspn@plt+0x2c0>
   11590:	movw	r1, #26491	; 0x677b
   11594:	movt	r1, #1
   11598:	mov	r0, #0
   1159c:	mov	r2, #5
   115a0:	bl	1121c <dcgettext@plt>
   115a4:	mov	r1, r0
   115a8:	movw	r0, #33892	; 0x8464
   115ac:	movt	r0, #2
   115b0:	ldr	r2, [r0]
   115b4:	mov	r0, #1
   115b8:	bl	1139c <__printf_chk@plt>
   115bc:	movw	r1, #26553	; 0x67b9
   115c0:	movt	r1, #1
   115c4:	mov	r0, #0
   115c8:	mov	r2, #5
   115cc:	bl	1121c <dcgettext@plt>
   115d0:	movw	r5, #33580	; 0x832c
   115d4:	movt	r5, #2
   115d8:	ldr	r1, [r5]
   115dc:	bl	1118c <fputs_unlocked@plt>
   115e0:	bl	11784 <strspn@plt+0x304>
   115e4:	movw	r1, #26613	; 0x67f5
   115e8:	movt	r1, #1
   115ec:	mov	r0, #0
   115f0:	mov	r2, #5
   115f4:	bl	1121c <dcgettext@plt>
   115f8:	ldr	r1, [r5]
   115fc:	bl	1118c <fputs_unlocked@plt>
   11600:	movw	r1, #26800	; 0x68b0
   11604:	movt	r1, #1
   11608:	mov	r0, #0
   1160c:	mov	r2, #5
   11610:	bl	1121c <dcgettext@plt>
   11614:	ldr	r1, [r5]
   11618:	bl	1118c <fputs_unlocked@plt>
   1161c:	movw	r1, #26856	; 0x68e8
   11620:	movt	r1, #1
   11624:	mov	r0, #0
   11628:	mov	r2, #5
   1162c:	bl	1121c <dcgettext@plt>
   11630:	ldr	r1, [r5]
   11634:	bl	1118c <fputs_unlocked@plt>
   11638:	movw	r1, #26999	; 0x6977
   1163c:	movt	r1, #1
   11640:	mov	r0, #0
   11644:	mov	r2, #5
   11648:	bl	1121c <dcgettext@plt>
   1164c:	ldr	r1, [r5]
   11650:	bl	1118c <fputs_unlocked@plt>
   11654:	movw	r1, #27073	; 0x69c1
   11658:	movt	r1, #1
   1165c:	mov	r0, #0
   11660:	mov	r2, #5
   11664:	bl	1121c <dcgettext@plt>
   11668:	ldr	r1, [r5]
   1166c:	bl	1118c <fputs_unlocked@plt>
   11670:	movw	r1, #27151	; 0x6a0f
   11674:	movt	r1, #1
   11678:	mov	r0, #0
   1167c:	mov	r2, #5
   11680:	bl	1121c <dcgettext@plt>
   11684:	ldr	r1, [r5]
   11688:	bl	1118c <fputs_unlocked@plt>
   1168c:	movw	r1, #27226	; 0x6a5a
   11690:	movt	r1, #1
   11694:	mov	r0, #0
   11698:	mov	r2, #5
   1169c:	bl	1121c <dcgettext@plt>
   116a0:	ldr	r1, [r5]
   116a4:	bl	1118c <fputs_unlocked@plt>
   116a8:	movw	r1, #27300	; 0x6aa4
   116ac:	movt	r1, #1
   116b0:	mov	r0, #0
   116b4:	mov	r2, #5
   116b8:	bl	1121c <dcgettext@plt>
   116bc:	ldr	r1, [r5]
   116c0:	bl	1118c <fputs_unlocked@plt>
   116c4:	movw	r1, #27375	; 0x6aef
   116c8:	movt	r1, #1
   116cc:	mov	r0, #0
   116d0:	mov	r2, #5
   116d4:	bl	1121c <dcgettext@plt>
   116d8:	ldr	r1, [r5]
   116dc:	bl	1118c <fputs_unlocked@plt>
   116e0:	movw	r1, #27420	; 0x6b1c
   116e4:	movt	r1, #1
   116e8:	mov	r0, #0
   116ec:	mov	r2, #5
   116f0:	bl	1121c <dcgettext@plt>
   116f4:	ldr	r1, [r5]
   116f8:	bl	1118c <fputs_unlocked@plt>
   116fc:	movw	r1, #27474	; 0x6b52
   11700:	movt	r1, #1
   11704:	mov	r0, #0
   11708:	mov	r2, #5
   1170c:	bl	1121c <dcgettext@plt>
   11710:	ldr	r1, [r5]
   11714:	bl	1118c <fputs_unlocked@plt>
   11718:	movw	r1, #27546	; 0x6b9a
   1171c:	movt	r1, #1
   11720:	mov	r0, #0
   11724:	mov	r2, #5
   11728:	bl	1121c <dcgettext@plt>
   1172c:	ldr	r1, [r5]
   11730:	bl	1118c <fputs_unlocked@plt>
   11734:	bl	117b4 <strspn@plt+0x334>
   11738:	mov	r0, r4
   1173c:	bl	11330 <exit@plt>
   11740:	movw	r0, #33576	; 0x8328
   11744:	movt	r0, #2
   11748:	ldr	r5, [r0]
   1174c:	movw	r1, #26452	; 0x6754
   11750:	movt	r1, #1
   11754:	mov	r0, #0
   11758:	mov	r2, #5
   1175c:	bl	1121c <dcgettext@plt>
   11760:	mov	r2, r0
   11764:	movw	r0, #33892	; 0x8464
   11768:	movt	r0, #2
   1176c:	ldr	r3, [r0]
   11770:	mov	r0, r5
   11774:	mov	r1, #1
   11778:	bl	113c0 <__fprintf_chk@plt>
   1177c:	mov	r0, r4
   11780:	bl	11330 <exit@plt>
   11784:	push	{fp, lr}
   11788:	mov	fp, sp
   1178c:	movw	r1, #28069	; 0x6da5
   11790:	movt	r1, #1
   11794:	mov	r0, #0
   11798:	mov	r2, #5
   1179c:	bl	1121c <dcgettext@plt>
   117a0:	movw	r1, #33580	; 0x832c
   117a4:	movt	r1, #2
   117a8:	ldr	r1, [r1]
   117ac:	pop	{fp, lr}
   117b0:	b	1118c <fputs_unlocked@plt>
   117b4:	push	{r4, r5, fp, lr}
   117b8:	add	fp, sp, #8
   117bc:	sub	sp, sp, #56	; 0x38
   117c0:	movw	r0, #29456	; 0x7310
   117c4:	movt	r0, #1
   117c8:	add	r1, r0, #32
   117cc:	mov	r5, sp
   117d0:	mov	r2, #48	; 0x30
   117d4:	vld1.64	{d16-d17}, [r1]
   117d8:	add	r1, r5, #32
   117dc:	add	r3, r0, #16
   117e0:	vld1.64	{d18-d19}, [r0], r2
   117e4:	vld1.64	{d20-d21}, [r3]
   117e8:	vldr	d22, [r0]
   117ec:	vst1.64	{d16-d17}, [r1]
   117f0:	add	r0, r5, #16
   117f4:	vst1.64	{d20-d21}, [r0]
   117f8:	mov	r0, r5
   117fc:	vst1.64	{d18-d19}, [r0], r2
   11800:	vstr	d22, [r0]
   11804:	ldr	r1, [sp]
   11808:	cmp	r1, #0
   1180c:	beq	11834 <strspn@plt+0x3b4>
   11810:	mov	r5, sp
   11814:	movw	r4, #27703	; 0x6c37
   11818:	movt	r4, #1
   1181c:	mov	r0, r4
   11820:	bl	11198 <strcmp@plt>
   11824:	cmp	r0, #0
   11828:	ldrne	r1, [r5, #8]!
   1182c:	cmpne	r1, #0
   11830:	bne	1181c <strspn@plt+0x39c>
   11834:	ldr	r4, [r5, #4]
   11838:	movw	r1, #28239	; 0x6e4f
   1183c:	movt	r1, #1
   11840:	mov	r0, #0
   11844:	mov	r2, #5
   11848:	bl	1121c <dcgettext@plt>
   1184c:	mov	r1, r0
   11850:	movw	r2, #27797	; 0x6c95
   11854:	movt	r2, #1
   11858:	movw	r3, #28262	; 0x6e66
   1185c:	movt	r3, #1
   11860:	mov	r0, #1
   11864:	bl	1139c <__printf_chk@plt>
   11868:	movw	r5, #27703	; 0x6c37
   1186c:	movt	r5, #1
   11870:	cmp	r4, #0
   11874:	moveq	r4, r5
   11878:	mov	r0, #5
   1187c:	mov	r1, #0
   11880:	bl	113fc <setlocale@plt>
   11884:	cmp	r0, #0
   11888:	beq	118c8 <strspn@plt+0x448>
   1188c:	movw	r1, #28302	; 0x6e8e
   11890:	movt	r1, #1
   11894:	mov	r2, #3
   11898:	bl	11468 <strncmp@plt>
   1189c:	cmp	r0, #0
   118a0:	beq	118c8 <strspn@plt+0x448>
   118a4:	movw	r1, #28306	; 0x6e92
   118a8:	movt	r1, #1
   118ac:	mov	r0, #0
   118b0:	mov	r2, #5
   118b4:	bl	1121c <dcgettext@plt>
   118b8:	movw	r1, #33580	; 0x832c
   118bc:	movt	r1, #2
   118c0:	ldr	r1, [r1]
   118c4:	bl	1118c <fputs_unlocked@plt>
   118c8:	movw	r1, #28377	; 0x6ed9
   118cc:	movt	r1, #1
   118d0:	mov	r0, #0
   118d4:	mov	r2, #5
   118d8:	bl	1121c <dcgettext@plt>
   118dc:	mov	r1, r0
   118e0:	movw	r2, #28262	; 0x6e66
   118e4:	movt	r2, #1
   118e8:	mov	r0, #1
   118ec:	mov	r3, r5
   118f0:	bl	1139c <__printf_chk@plt>
   118f4:	movw	r1, #28404	; 0x6ef4
   118f8:	movt	r1, #1
   118fc:	mov	r0, #0
   11900:	mov	r2, #5
   11904:	bl	1121c <dcgettext@plt>
   11908:	mov	r1, r0
   1190c:	movw	r0, #28172	; 0x6e0c
   11910:	movt	r0, #1
   11914:	movw	r3, #28454	; 0x6f26
   11918:	movt	r3, #1
   1191c:	cmp	r4, r5
   11920:	moveq	r3, r0
   11924:	mov	r0, #1
   11928:	mov	r2, r4
   1192c:	bl	1139c <__printf_chk@plt>
   11930:	sub	sp, fp, #8
   11934:	pop	{r4, r5, fp, pc}
   11938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1193c:	add	fp, sp, #28
   11940:	sub	sp, sp, #36	; 0x24
   11944:	str	r1, [sp, #28]
   11948:	str	r0, [sp, #32]
   1194c:	ldr	r0, [r1]
   11950:	bl	13a18 <strspn@plt+0x2598>
   11954:	movw	r1, #28454	; 0x6f26
   11958:	movt	r1, #1
   1195c:	mov	r0, #6
   11960:	bl	113fc <setlocale@plt>
   11964:	movw	r4, #27801	; 0x6c99
   11968:	movt	r4, #1
   1196c:	movw	r1, #27707	; 0x6c3b
   11970:	movt	r1, #1
   11974:	mov	r0, r4
   11978:	bl	11444 <bindtextdomain@plt>
   1197c:	mov	r0, r4
   11980:	bl	11240 <textdomain@plt>
   11984:	bl	12184 <strspn@plt+0xd04>
   11988:	movw	r0, #14600	; 0x3908
   1198c:	movt	r0, #1
   11990:	bl	1672c <strspn@plt+0x52ac>
   11994:	bl	12198 <strspn@plt+0xd18>
   11998:	mov	r8, #0
   1199c:	movw	r7, #29224	; 0x7228
   119a0:	movt	r7, #1
   119a4:	movw	r4, #29244	; 0x723c
   119a8:	movt	r4, #1
   119ac:	mov	r0, #0
   119b0:	str	r0, [sp, #24]
   119b4:	mov	r0, #0
   119b8:	str	r0, [sp, #20]
   119bc:	mov	r0, #0
   119c0:	b	119d0 <strspn@plt+0x550>
   119c4:	mov	r1, #1
   119c8:	strb	r1, [r0]
   119cc:	mov	r0, sl
   119d0:	mov	sl, r0
   119d4:	ldr	r5, [sp, #28]
   119d8:	ldr	r6, [sp, #32]
   119dc:	str	r8, [sp]
   119e0:	mov	r0, r6
   119e4:	mov	r1, r5
   119e8:	mov	r2, r7
   119ec:	mov	r3, r4
   119f0:	bl	11318 <getopt_long@plt>
   119f4:	mov	r9, r0
   119f8:	add	r1, r0, #3
   119fc:	cmp	r1, #121	; 0x79
   11a00:	bhi	11c08 <strspn@plt+0x788>
   11a04:	add	r2, pc, #4
   11a08:	mov	r0, #1
   11a0c:	ldr	pc, [r2, r1, lsl #2]
   11a10:	andeq	r2, r1, r0, lsl #1
   11a14:	ldrdeq	r2, [r1], -ip
   11a18:	strdeq	r1, [r1], -r0
   11a1c:	andeq	r2, r1, r8, ror r0
   11a20:	andeq	r2, r1, r8, ror r0
   11a24:	andeq	r2, r1, r8, ror r0
   11a28:	andeq	r2, r1, r8, ror r0
   11a2c:	andeq	r2, r1, r8, ror r0
   11a30:	andeq	r2, r1, r8, ror r0
   11a34:	andeq	r2, r1, r8, ror r0
   11a38:	andeq	r2, r1, r8, ror r0
   11a3c:	andeq	r2, r1, r8, ror r0
   11a40:	andeq	r2, r1, r4, lsr #32
   11a44:	andeq	r2, r1, r4, lsr #32
   11a48:	andeq	r2, r1, r4, lsr #32
   11a4c:	andeq	r2, r1, r4, lsr #32
   11a50:	andeq	r2, r1, r4, lsr #32
   11a54:	andeq	r2, r1, r8, ror r0
   11a58:	andeq	r2, r1, r8, ror r0
   11a5c:	andeq	r2, r1, r8, ror r0
   11a60:	andeq	r2, r1, r8, ror r0
   11a64:	andeq	r2, r1, r8, ror r0
   11a68:	andeq	r2, r1, r8, ror r0
   11a6c:	andeq	r2, r1, r8, ror r0
   11a70:	andeq	r2, r1, r8, ror r0
   11a74:	andeq	r2, r1, r8, ror r0
   11a78:	andeq	r2, r1, r8, ror r0
   11a7c:	andeq	r2, r1, r8, ror r0
   11a80:	andeq	r2, r1, r8, ror r0
   11a84:	andeq	r2, r1, r8, ror r0
   11a88:	andeq	r2, r1, r8, ror r0
   11a8c:	andeq	r2, r1, r8, ror r0
   11a90:	andeq	r2, r1, r8, ror r0
   11a94:	andeq	r2, r1, r8, ror r0
   11a98:	andeq	r2, r1, r8, ror r0
   11a9c:	andeq	r2, r1, r4, lsr #32
   11aa0:	andeq	r2, r1, r8, ror r0
   11aa4:	andeq	r2, r1, r8, ror r0
   11aa8:	andeq	r2, r1, r8, ror r0
   11aac:	andeq	r2, r1, r8, ror r0
   11ab0:	andeq	r2, r1, r8, ror r0
   11ab4:	andeq	r2, r1, r8, ror r0
   11ab8:	andeq	r2, r1, r8, ror r0
   11abc:	andeq	r2, r1, r8, ror r0
   11ac0:	andeq	r2, r1, r8, ror r0
   11ac4:	andeq	r2, r1, r8, ror r0
   11ac8:	andeq	r2, r1, r8, ror r0
   11acc:	andeq	r2, r1, r8, ror r0
   11ad0:	andeq	r2, r1, r8, ror r0
   11ad4:	andeq	r2, r1, r8, ror r0
   11ad8:	andeq	r2, r1, r8, ror r0
   11adc:	strdeq	r1, [r1], -r8
   11ae0:	andeq	r2, r1, r8, ror r0
   11ae4:	andeq	r2, r1, r8, ror r0
   11ae8:	andeq	r2, r1, r8, ror r0
   11aec:	andeq	r2, r1, r8, ror r0
   11af0:	andeq	r2, r1, r8, ror r0
   11af4:	andeq	r2, r1, r8, ror r0
   11af8:	andeq	r2, r1, r8, ror r0
   11afc:	andeq	r2, r1, r8, ror r0
   11b00:	andeq	r2, r1, r8, ror r0
   11b04:	andeq	r2, r1, r8, ror r0
   11b08:	andeq	r2, r1, r8, ror r0
   11b0c:	andeq	r2, r1, r8, ror r0
   11b10:	andeq	r2, r1, r8, ror r0
   11b14:	andeq	r2, r1, r8, ror r0
   11b18:	andeq	r2, r1, r8, ror r0
   11b1c:	andeq	r2, r1, r8, ror r0
   11b20:	andeq	r2, r1, r8, ror r0
   11b24:	andeq	r2, r1, r8, ror r0
   11b28:	muleq	r1, r0, ip
   11b2c:	andeq	r2, r1, r8, ror r0
   11b30:	andeq	r2, r1, r8, ror r0
   11b34:	andeq	r2, r1, r8, ror r0
   11b38:	andeq	r2, r1, r8, ror r0
   11b3c:	andeq	r2, r1, r8, ror r0
   11b40:	andeq	r2, r1, r8, ror r0
   11b44:	andeq	r2, r1, r8, ror r0
   11b48:	andeq	r2, r1, r8, ror r0
   11b4c:	andeq	r2, r1, r8, ror r0
   11b50:	andeq	r2, r1, r8, ror r0
   11b54:	andeq	r2, r1, r8, ror r0
   11b58:	andeq	r2, r1, r8, ror r0
   11b5c:	andeq	r2, r1, r8, ror r0
   11b60:	andeq	r2, r1, r8, ror r0
   11b64:	andeq	r2, r1, r8, ror r0
   11b68:	andeq	r1, r1, r8, lsr #25
   11b6c:	andeq	r2, r1, r8, ror r0
   11b70:	andeq	r2, r1, r8, ror r0
   11b74:	andeq	r2, r1, r8, ror r0
   11b78:	andeq	r2, r1, r8, ror r0
   11b7c:	andeq	r2, r1, r8, ror r0
   11b80:	andeq	r2, r1, r8, ror r0
   11b84:	andeq	r2, r1, r8, ror r0
   11b88:	andeq	r2, r1, r8, ror r0
   11b8c:	andeq	r2, r1, r8, ror r0
   11b90:	andeq	r2, r1, r8, ror r0
   11b94:	andeq	r2, r1, r8, ror r0
   11b98:	andeq	r2, r1, r8, ror r0
   11b9c:	andeq	r2, r1, r8, ror r0
   11ba0:	andeq	r2, r1, r8, ror r0
   11ba4:	andeq	r2, r1, r8, ror r0
   11ba8:	andeq	r2, r1, r8, ror r0
   11bac:	andeq	r2, r1, r8, ror r0
   11bb0:	andeq	r2, r1, r8, ror r0
   11bb4:	andeq	r2, r1, r8, ror r0
   11bb8:	andeq	r2, r1, r8, ror r0
   11bbc:	andeq	r2, r1, r8, ror r0
   11bc0:	ldrdeq	r1, [r1], -r0
   11bc4:	andeq	r2, r1, r8, ror r0
   11bc8:	andeq	r2, r1, r8, ror r0
   11bcc:	andeq	r2, r1, r8, ror r0
   11bd0:	andeq	r2, r1, r8, ror r0
   11bd4:	andeq	r2, r1, r8, ror r0
   11bd8:	andeq	r2, r1, r8, ror r0
   11bdc:	andeq	r2, r1, r8, ror r0
   11be0:	andeq	r2, r1, r8, ror r0
   11be4:	andeq	r2, r1, r8, ror r0
   11be8:	andeq	r2, r1, r8, ror r0
   11bec:	andeq	r2, r1, r8, ror r0
   11bf0:	andeq	r1, r1, ip, asr ip
   11bf4:	andeq	r1, r1, r0, asr ip
   11bf8:	mov	r0, #1
   11bfc:	str	r0, [sp, #20]
   11c00:	mov	r0, sl
   11c04:	b	119d0 <strspn@plt+0x550>
   11c08:	sub	r0, r9, #256	; 0x100
   11c0c:	cmp	r0, #3
   11c10:	bhi	12078 <strspn@plt+0xbf8>
   11c14:	add	r1, pc, #0
   11c18:	ldr	pc, [r1, r0, lsl #2]
   11c1c:	andeq	r1, r1, ip, lsr #24
   11c20:	ldrdeq	r1, [r1], -r4
   11c24:	andeq	r1, r1, r4, ror ip
   11c28:	andeq	r1, r1, r8, asr #25
   11c2c:	movw	r0, #33584	; 0x8330
   11c30:	movt	r0, #2
   11c34:	mov	r5, r0
   11c38:	ldr	r0, [r0]
   11c3c:	mov	r1, #1
   11c40:	bl	12230 <strspn@plt+0xdb0>
   11c44:	ldr	r0, [r5]
   11c48:	mov	r1, #0
   11c4c:	b	11c84 <strspn@plt+0x804>
   11c50:	movw	r0, #33592	; 0x8338
   11c54:	movt	r0, #2
   11c58:	b	119c4 <strspn@plt+0x544>
   11c5c:	movw	r0, #33584	; 0x8330
   11c60:	movt	r0, #2
   11c64:	ldr	r0, [r0]
   11c68:	bl	121c4 <strspn@plt+0xd44>
   11c6c:	mov	r0, sl
   11c70:	b	119d0 <strspn@plt+0x550>
   11c74:	movw	r0, #33584	; 0x8330
   11c78:	movt	r0, #2
   11c7c:	ldr	r0, [r0]
   11c80:	mov	r1, #1
   11c84:	bl	1235c <strspn@plt+0xedc>
   11c88:	mov	r0, sl
   11c8c:	b	119d0 <strspn@plt+0x550>
   11c90:	movw	r0, #33584	; 0x8330
   11c94:	movt	r0, #2
   11c98:	ldr	r0, [r0]
   11c9c:	str	r0, [sp, #24]
   11ca0:	mov	r0, sl
   11ca4:	b	119d0 <strspn@plt+0x550>
   11ca8:	movw	r0, #33584	; 0x8330
   11cac:	movt	r0, #2
   11cb0:	ldr	r0, [r0]
   11cb4:	add	r1, sp, #32
   11cb8:	add	r2, sp, #28
   11cbc:	bl	124e4 <strspn@plt+0x1064>
   11cc0:	mov	r0, sl
   11cc4:	b	119d0 <strspn@plt+0x550>
   11cc8:	movw	r0, #33593	; 0x8339
   11ccc:	movt	r0, #2
   11cd0:	b	119c4 <strspn@plt+0x544>
   11cd4:	movw	r0, #33584	; 0x8330
   11cd8:	movt	r0, #2
   11cdc:	ldr	r0, [r0]
   11ce0:	mov	r1, #0
   11ce4:	bl	12230 <strspn@plt+0xdb0>
   11ce8:	mov	r0, sl
   11cec:	b	119d0 <strspn@plt+0x550>
   11cf0:	movw	r8, #33568	; 0x8320
   11cf4:	movt	r8, #2
   11cf8:	ldr	r4, [r8]
   11cfc:	cmp	r4, r6
   11d00:	bge	11d1c <strspn@plt+0x89c>
   11d04:	ldr	r0, [r5, r4, lsl #2]
   11d08:	movw	r1, #29639	; 0x73c7
   11d0c:	movt	r1, #1
   11d10:	bl	11198 <strcmp@plt>
   11d14:	cmp	r0, #0
   11d18:	beq	11d34 <strspn@plt+0x8b4>
   11d1c:	tst	sl, #1
   11d20:	bne	11d3c <strspn@plt+0x8bc>
   11d24:	bl	12660 <strspn@plt+0x11e0>
   11d28:	movw	sl, #33592	; 0x8338
   11d2c:	movt	sl, #2
   11d30:	b	11d80 <strspn@plt+0x900>
   11d34:	add	r0, r4, #1
   11d38:	str	r0, [r8]
   11d3c:	movw	sl, #33592	; 0x8338
   11d40:	movt	sl, #2
   11d44:	ldrb	r0, [sl]
   11d48:	cmp	r0, #1
   11d4c:	bne	11d6c <strspn@plt+0x8ec>
   11d50:	movw	r0, #33576	; 0x8328
   11d54:	movt	r0, #2
   11d58:	ldr	r0, [r0]
   11d5c:	movw	r2, #27857	; 0x6cd1
   11d60:	movt	r2, #1
   11d64:	mov	r1, #1
   11d68:	bl	113c0 <__fprintf_chk@plt>
   11d6c:	movw	r0, #33556	; 0x8314
   11d70:	movt	r0, #2
   11d74:	movw	r1, #33596	; 0x833c
   11d78:	movt	r1, #2
   11d7c:	str	r1, [r0]
   11d80:	ldr	r0, [r8]
   11d84:	cmp	r0, r6
   11d88:	bge	11e00 <strspn@plt+0x980>
   11d8c:	movw	r9, #27875	; 0x6ce3
   11d90:	movt	r9, #1
   11d94:	ldr	r4, [r5, r0, lsl #2]
   11d98:	mov	r0, r4
   11d9c:	mov	r1, #61	; 0x3d
   11da0:	bl	11354 <strchr@plt>
   11da4:	cmp	r0, #0
   11da8:	beq	11e64 <strspn@plt+0x9e4>
   11dac:	mov	r7, r0
   11db0:	ldrb	r0, [sl]
   11db4:	cmp	r0, #1
   11db8:	bne	11dd8 <strspn@plt+0x958>
   11dbc:	movw	r0, #33576	; 0x8328
   11dc0:	movt	r0, #2
   11dc4:	ldr	r0, [r0]
   11dc8:	mov	r1, #1
   11dcc:	mov	r2, r9
   11dd0:	mov	r3, r4
   11dd4:	bl	113c0 <__fprintf_chk@plt>
   11dd8:	ldr	r0, [r8]
   11ddc:	ldr	r0, [r5, r0, lsl #2]
   11de0:	bl	11414 <putenv@plt>
   11de4:	cmp	r0, #0
   11de8:	bne	120e4 <strspn@plt+0xc64>
   11dec:	ldr	r0, [r8]
   11df0:	add	r0, r0, #1
   11df4:	str	r0, [r8]
   11df8:	cmp	r0, r6
   11dfc:	blt	11d94 <strspn@plt+0x914>
   11e00:	ldr	r0, [sp, #24]
   11e04:	cmp	r0, #0
   11e08:	bne	1212c <strspn@plt+0xcac>
   11e0c:	movw	r0, #33556	; 0x8314
   11e10:	movt	r0, #2
   11e14:	ldr	r0, [r0]
   11e18:	ldr	r2, [r0]
   11e1c:	mov	r4, #0
   11e20:	cmp	r2, #0
   11e24:	beq	12018 <strspn@plt+0xb98>
   11e28:	mov	r5, #10
   11e2c:	ldr	r1, [sp, #20]
   11e30:	tst	r1, #1
   11e34:	movwne	r5, #0
   11e38:	add	r7, r0, #4
   11e3c:	movw	r6, #27982	; 0x6d4e
   11e40:	movt	r6, #1
   11e44:	mov	r0, #1
   11e48:	mov	r1, r6
   11e4c:	mov	r3, r5
   11e50:	bl	1139c <__printf_chk@plt>
   11e54:	ldr	r2, [r7], #4
   11e58:	cmp	r2, #0
   11e5c:	bne	11e44 <strspn@plt+0x9c4>
   11e60:	b	12018 <strspn@plt+0xb98>
   11e64:	ldr	r0, [sp, #20]
   11e68:	tst	r0, #1
   11e6c:	bne	12138 <strspn@plt+0xcb8>
   11e70:	bl	1272c <strspn@plt+0x12ac>
   11e74:	movw	r0, #33600	; 0x8340
   11e78:	movt	r0, #2
   11e7c:	ldrb	r0, [r0]
   11e80:	cmp	r0, #1
   11e84:	ldr	r7, [sp, #24]
   11e88:	bleq	128b8 <strspn@plt+0x1438>
   11e8c:	movw	r0, #33593	; 0x8339
   11e90:	movt	r0, #2
   11e94:	ldrb	r0, [r0]
   11e98:	cmp	r0, #1
   11e9c:	bleq	12a10 <strspn@plt+0x1590>
   11ea0:	cmp	r7, #0
   11ea4:	beq	11ef4 <strspn@plt+0xa74>
   11ea8:	ldrb	r0, [sl]
   11eac:	cmp	r0, #1
   11eb0:	bne	11ee4 <strspn@plt+0xa64>
   11eb4:	movw	r0, #33576	; 0x8328
   11eb8:	movt	r0, #2
   11ebc:	ldr	r4, [r0]
   11ec0:	mov	r0, #4
   11ec4:	mov	r1, r7
   11ec8:	bl	1505c <strspn@plt+0x3bdc>
   11ecc:	mov	r3, r0
   11ed0:	movw	r2, #27987	; 0x6d53
   11ed4:	movt	r2, #1
   11ed8:	mov	r0, r4
   11edc:	mov	r1, #1
   11ee0:	bl	113c0 <__fprintf_chk@plt>
   11ee4:	mov	r0, r7
   11ee8:	bl	1124c <chdir@plt>
   11eec:	cmp	r0, #0
   11ef0:	bne	12144 <strspn@plt+0xcc4>
   11ef4:	ldrb	r0, [sl]
   11ef8:	cmp	r0, #1
   11efc:	bne	11f88 <strspn@plt+0xb08>
   11f00:	ldr	r0, [r8]
   11f04:	ldr	r3, [r5, r0, lsl #2]
   11f08:	movw	r0, #33576	; 0x8328
   11f0c:	movt	r0, #2
   11f10:	ldr	r0, [r0]
   11f14:	movw	r2, #28031	; 0x6d7f
   11f18:	movt	r2, #1
   11f1c:	mov	r1, #1
   11f20:	bl	113c0 <__fprintf_chk@plt>
   11f24:	ldr	r4, [r8]
   11f28:	cmp	r4, r6
   11f2c:	bge	11f88 <strspn@plt+0xb08>
   11f30:	movw	r9, #28046	; 0x6d8e
   11f34:	movt	r9, #1
   11f38:	ldrb	r0, [sl]
   11f3c:	cmp	r0, #1
   11f40:	bne	11f7c <strspn@plt+0xafc>
   11f44:	ldr	r0, [r5, r4, lsl #2]
   11f48:	movw	r1, #33576	; 0x8328
   11f4c:	movt	r1, #2
   11f50:	ldr	sl, [r1]
   11f54:	ldr	r7, [r8]
   11f58:	bl	15250 <strspn@plt+0x3dd0>
   11f5c:	str	r0, [sp]
   11f60:	sub	r3, r4, r7
   11f64:	mov	r0, sl
   11f68:	movw	sl, #33592	; 0x8338
   11f6c:	movt	sl, #2
   11f70:	mov	r1, #1
   11f74:	mov	r2, r9
   11f78:	bl	113c0 <__fprintf_chk@plt>
   11f7c:	add	r4, r4, #1
   11f80:	cmp	r6, r4
   11f84:	bne	11f38 <strspn@plt+0xab8>
   11f88:	ldr	r0, [r8]
   11f8c:	mov	r1, r5
   11f90:	ldr	r0, [r1, r0, lsl #2]!
   11f94:	bl	111f8 <execvp@plt>
   11f98:	bl	1136c <__errno_location@plt>
   11f9c:	ldr	r1, [r8]
   11fa0:	ldr	r1, [r5, r1, lsl #2]
   11fa4:	ldr	r6, [r0]
   11fa8:	mov	r0, r1
   11fac:	bl	15250 <strspn@plt+0x3dd0>
   11fb0:	mov	r3, r0
   11fb4:	movw	r2, #29570	; 0x7382
   11fb8:	movt	r2, #1
   11fbc:	mov	r0, #0
   11fc0:	mov	r1, r6
   11fc4:	bl	112c4 <error@plt>
   11fc8:	mov	r4, #126	; 0x7e
   11fcc:	cmp	r6, #2
   11fd0:	bne	12018 <strspn@plt+0xb98>
   11fd4:	ldr	r0, [r8]
   11fd8:	ldr	r0, [r5, r0, lsl #2]
   11fdc:	movw	r1, #28062	; 0x6d9e
   11fe0:	movt	r1, #1
   11fe4:	bl	11438 <strpbrk@plt>
   11fe8:	mov	r4, #127	; 0x7f
   11fec:	cmp	r0, #0
   11ff0:	beq	12018 <strspn@plt+0xb98>
   11ff4:	movw	r1, #27754	; 0x6c6a
   11ff8:	movt	r1, #1
   11ffc:	mov	r0, #0
   12000:	mov	r2, #5
   12004:	bl	1121c <dcgettext@plt>
   12008:	mov	r2, r0
   1200c:	mov	r0, #0
   12010:	mov	r1, #0
   12014:	bl	112c4 <error@plt>
   12018:	mov	r0, r4
   1201c:	sub	sp, fp, #28
   12020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12024:	movw	r1, #27731	; 0x6c53
   12028:	movt	r1, #1
   1202c:	mov	r0, #0
   12030:	mov	r2, #5
   12034:	bl	1121c <dcgettext@plt>
   12038:	mov	r2, r0
   1203c:	mov	r0, #0
   12040:	mov	r1, #0
   12044:	mov	r3, r9
   12048:	bl	112c4 <error@plt>
   1204c:	movw	r1, #27754	; 0x6c6a
   12050:	movt	r1, #1
   12054:	mov	r0, #0
   12058:	mov	r2, #5
   1205c:	bl	1121c <dcgettext@plt>
   12060:	mov	r2, r0
   12064:	mov	r0, #0
   12068:	mov	r1, #0
   1206c:	bl	112c4 <error@plt>
   12070:	mov	r0, #125	; 0x7d
   12074:	bl	1157c <strspn@plt+0xfc>
   12078:	mov	r0, #125	; 0x7d
   1207c:	bl	1157c <strspn@plt+0xfc>
   12080:	movw	r0, #33056	; 0x8120
   12084:	movt	r0, #2
   12088:	ldr	r3, [r0]
   1208c:	movw	r0, #33580	; 0x832c
   12090:	movt	r0, #2
   12094:	ldr	r0, [r0]
   12098:	mov	r1, #0
   1209c:	movw	r2, #27844	; 0x6cc4
   120a0:	movt	r2, #1
   120a4:	movw	r7, #27828	; 0x6cb4
   120a8:	movt	r7, #1
   120ac:	movw	r6, #27811	; 0x6ca3
   120b0:	movt	r6, #1
   120b4:	stm	sp, {r6, r7}
   120b8:	str	r2, [sp, #8]
   120bc:	str	r1, [sp, #12]
   120c0:	movw	r1, #27703	; 0x6c37
   120c4:	movt	r1, #1
   120c8:	movw	r2, #27797	; 0x6c95
   120cc:	movt	r2, #1
   120d0:	bl	15c90 <strspn@plt+0x4810>
   120d4:	mov	r0, #0
   120d8:	bl	11330 <exit@plt>
   120dc:	mov	r0, #0
   120e0:	bl	1157c <strspn@plt+0xfc>
   120e4:	mov	r0, #0
   120e8:	strb	r0, [r7]
   120ec:	bl	1136c <__errno_location@plt>
   120f0:	ldr	r4, [r0]
   120f4:	movw	r1, #27889	; 0x6cf1
   120f8:	movt	r1, #1
   120fc:	mov	r0, #0
   12100:	mov	r2, #5
   12104:	bl	1121c <dcgettext@plt>
   12108:	mov	r6, r0
   1210c:	ldr	r0, [r8]
   12110:	ldr	r0, [r5, r0, lsl #2]
   12114:	bl	15250 <strspn@plt+0x3dd0>
   12118:	mov	r3, r0
   1211c:	mov	r0, #125	; 0x7d
   12120:	mov	r1, r4
   12124:	mov	r2, r6
   12128:	bl	112c4 <error@plt>
   1212c:	movw	r1, #27943	; 0x6d27
   12130:	movt	r1, #1
   12134:	b	12054 <strspn@plt+0xbd4>
   12138:	movw	r1, #27903	; 0x6cff
   1213c:	movt	r1, #1
   12140:	b	12054 <strspn@plt+0xbd4>
   12144:	bl	1136c <__errno_location@plt>
   12148:	ldr	r4, [r0]
   1214c:	movw	r1, #28001	; 0x6d61
   12150:	movt	r1, #1
   12154:	mov	r0, #0
   12158:	mov	r2, #5
   1215c:	bl	1121c <dcgettext@plt>
   12160:	mov	r5, r0
   12164:	mov	r0, #4
   12168:	mov	r1, r7
   1216c:	bl	1505c <strspn@plt+0x3bdc>
   12170:	mov	r3, r0
   12174:	mov	r0, #125	; 0x7d
   12178:	mov	r1, r4
   1217c:	mov	r2, r5
   12180:	bl	112c4 <error@plt>
   12184:	movw	r0, #33060	; 0x8124
   12188:	movt	r0, #2
   1218c:	mov	r1, #125	; 0x7d
   12190:	str	r1, [r0]
   12194:	bx	lr
   12198:	push	{fp, lr}
   1219c:	mov	fp, sp
   121a0:	mov	r0, #260	; 0x104
   121a4:	bl	15d98 <strspn@plt+0x4918>
   121a8:	movw	r1, #33604	; 0x8344
   121ac:	movt	r1, #2
   121b0:	str	r0, [r1]
   121b4:	mov	r1, #0
   121b8:	mov	r2, #260	; 0x104
   121bc:	bl	11390 <memset@plt>
   121c0:	pop	{fp, pc}
   121c4:	push	{r4, r5, r6, sl, fp, lr}
   121c8:	add	fp, sp, #16
   121cc:	mov	r4, r0
   121d0:	movw	r0, #33612	; 0x834c
   121d4:	movt	r0, #2
   121d8:	ldr	r0, [r0]
   121dc:	movw	r5, #33608	; 0x8348
   121e0:	movt	r5, #2
   121e4:	ldr	r1, [r5]
   121e8:	cmp	r1, r0
   121ec:	bne	12210 <strspn@plt+0xd90>
   121f0:	movw	r6, #33616	; 0x8350
   121f4:	movt	r6, #2
   121f8:	ldr	r0, [r6]
   121fc:	movw	r1, #33612	; 0x834c
   12200:	movt	r1, #2
   12204:	mov	r2, #4
   12208:	bl	15e68 <strspn@plt+0x49e8>
   1220c:	str	r0, [r6]
   12210:	ldr	r0, [r5]
   12214:	add	r1, r0, #1
   12218:	str	r1, [r5]
   1221c:	movw	r1, #33616	; 0x8350
   12220:	movt	r1, #2
   12224:	ldr	r1, [r1]
   12228:	str	r4, [r1, r0, lsl #2]
   1222c:	pop	{r4, r5, r6, sl, fp, pc}
   12230:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12234:	add	fp, sp, #24
   12238:	sub	sp, sp, #24
   1223c:	mov	r6, r1
   12240:	cmp	r0, #0
   12244:	beq	122d0 <strspn@plt+0xe50>
   12248:	bl	16128 <strspn@plt+0x4ca8>
   1224c:	mov	r8, r0
   12250:	movw	r1, #28586	; 0x6faa
   12254:	movt	r1, #1
   12258:	bl	113f0 <strtok@plt>
   1225c:	cmp	r0, #0
   12260:	beq	122c0 <strspn@plt+0xe40>
   12264:	mov	r5, r0
   12268:	mov	r4, #3
   1226c:	cmp	r6, #0
   12270:	movwne	r4, #1
   12274:	add	r9, sp, #5
   12278:	movw	r6, #33604	; 0x8344
   1227c:	movt	r6, #2
   12280:	movw	r7, #28586	; 0x6faa
   12284:	movt	r7, #1
   12288:	mov	r0, r5
   1228c:	mov	r1, r9
   12290:	bl	13420 <strspn@plt+0x1fa0>
   12294:	cmp	r0, #0
   12298:	beq	12318 <strspn@plt+0xe98>
   1229c:	ble	1234c <strspn@plt+0xecc>
   122a0:	ldr	r1, [r6]
   122a4:	str	r4, [r1, r0, lsl #2]
   122a8:	mov	r0, #0
   122ac:	mov	r1, r7
   122b0:	bl	113f0 <strtok@plt>
   122b4:	mov	r5, r0
   122b8:	cmp	r0, #0
   122bc:	bne	12288 <strspn@plt+0xe08>
   122c0:	mov	r0, r8
   122c4:	bl	139f0 <strspn@plt+0x2570>
   122c8:	sub	sp, fp, #24
   122cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   122d0:	mov	r7, #4
   122d4:	cmp	r6, #0
   122d8:	movwne	r7, #2
   122dc:	mov	r4, #1
   122e0:	add	r5, sp, #5
   122e4:	movw	r6, #33604	; 0x8344
   122e8:	movt	r6, #2
   122ec:	mov	r0, r4
   122f0:	mov	r1, r5
   122f4:	bl	157ec <strspn@plt+0x436c>
   122f8:	cmp	r0, #0
   122fc:	ldreq	r0, [r6]
   12300:	streq	r7, [r0, r4, lsl #2]
   12304:	add	r4, r4, #1
   12308:	cmp	r4, #65	; 0x41
   1230c:	bne	122ec <strspn@plt+0xe6c>
   12310:	sub	sp, fp, #24
   12314:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12318:	movw	r1, #28588	; 0x6fac
   1231c:	movt	r1, #1
   12320:	mov	r0, #0
   12324:	mov	r2, #5
   12328:	bl	1121c <dcgettext@plt>
   1232c:	mov	r4, r0
   12330:	mov	r0, r5
   12334:	bl	15250 <strspn@plt+0x3dd0>
   12338:	mov	r3, r0
   1233c:	mov	r0, #0
   12340:	mov	r1, #0
   12344:	mov	r2, r4
   12348:	bl	112c4 <error@plt>
   1234c:	movw	r0, #33060	; 0x8124
   12350:	movt	r0, #2
   12354:	ldr	r0, [r0]
   12358:	bl	1157c <strspn@plt+0xfc>
   1235c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12360:	add	fp, sp, #28
   12364:	sub	sp, sp, #20
   12368:	mov	r5, r1
   1236c:	cmp	r0, #0
   12370:	beq	12458 <strspn@plt+0xfd8>
   12374:	mov	r4, r0
   12378:	movw	r6, #33600	; 0x8340
   1237c:	movt	r6, #2
   12380:	ldrb	r0, [r6]
   12384:	cmp	r0, #0
   12388:	bne	123a4 <strspn@plt+0xf24>
   1238c:	movw	r0, #33620	; 0x8354
   12390:	movt	r0, #2
   12394:	bl	11408 <sigemptyset@plt>
   12398:	movw	r0, #33748	; 0x83d4
   1239c:	movt	r0, #2
   123a0:	bl	11408 <sigemptyset@plt>
   123a4:	mov	r0, #1
   123a8:	strb	r0, [r6]
   123ac:	mov	r0, r4
   123b0:	bl	16128 <strspn@plt+0x4ca8>
   123b4:	mov	r8, r0
   123b8:	movw	r1, #28586	; 0x6faa
   123bc:	movt	r1, #1
   123c0:	bl	113f0 <strtok@plt>
   123c4:	cmp	r0, #0
   123c8:	beq	12448 <strspn@plt+0xfc8>
   123cc:	mov	r7, r0
   123d0:	movw	r6, #33748	; 0x83d4
   123d4:	movt	r6, #2
   123d8:	movw	r0, #33620	; 0x8354
   123dc:	movt	r0, #2
   123e0:	cmp	r5, #0
   123e4:	mov	r5, r0
   123e8:	movne	r5, r6
   123ec:	movne	r6, r0
   123f0:	add	r9, sp, #1
   123f4:	movw	sl, #28586	; 0x6faa
   123f8:	movt	sl, #1
   123fc:	mov	r0, r7
   12400:	mov	r1, r9
   12404:	bl	13420 <strspn@plt+0x1fa0>
   12408:	cmp	r0, #0
   1240c:	beq	124a0 <strspn@plt+0x1020>
   12410:	ble	124d4 <strspn@plt+0x1054>
   12414:	mov	r4, r0
   12418:	mov	r0, r6
   1241c:	mov	r1, r4
   12420:	bl	112e8 <sigaddset@plt>
   12424:	mov	r0, r5
   12428:	mov	r1, r4
   1242c:	bl	113a8 <sigdelset@plt>
   12430:	mov	r0, #0
   12434:	mov	r1, sl
   12438:	bl	113f0 <strtok@plt>
   1243c:	mov	r7, r0
   12440:	cmp	r0, #0
   12444:	bne	123fc <strspn@plt+0xf7c>
   12448:	mov	r0, r8
   1244c:	bl	139f0 <strspn@plt+0x2570>
   12450:	sub	sp, fp, #28
   12454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12458:	movw	r4, #33620	; 0x8354
   1245c:	movt	r4, #2
   12460:	movw	r6, #33748	; 0x83d4
   12464:	movt	r6, #2
   12468:	cmp	r5, #0
   1246c:	mov	r0, r6
   12470:	movne	r0, r4
   12474:	bl	11360 <sigfillset@plt>
   12478:	cmp	r5, #0
   1247c:	movne	r4, r6
   12480:	mov	r0, r4
   12484:	bl	11408 <sigemptyset@plt>
   12488:	movw	r0, #33600	; 0x8340
   1248c:	movt	r0, #2
   12490:	mov	r1, #1
   12494:	strb	r1, [r0]
   12498:	sub	sp, fp, #28
   1249c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a0:	movw	r1, #28588	; 0x6fac
   124a4:	movt	r1, #1
   124a8:	mov	r0, #0
   124ac:	mov	r2, #5
   124b0:	bl	1121c <dcgettext@plt>
   124b4:	mov	r4, r0
   124b8:	mov	r0, r7
   124bc:	bl	15250 <strspn@plt+0x3dd0>
   124c0:	mov	r3, r0
   124c4:	mov	r0, #0
   124c8:	mov	r1, #0
   124cc:	mov	r2, r4
   124d0:	bl	112c4 <error@plt>
   124d4:	movw	r0, #33060	; 0x8124
   124d8:	movt	r0, #2
   124dc:	ldr	r0, [r0]
   124e0:	bl	1157c <strspn@plt+0xfc>
   124e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124e8:	add	fp, sp, #28
   124ec:	sub	sp, sp, #20
   124f0:	mov	r4, r2
   124f4:	mov	r5, r0
   124f8:	movw	r0, #33568	; 0x8320
   124fc:	movt	r0, #2
   12500:	ldr	r0, [r0]
   12504:	str	r1, [sp, #8]
   12508:	ldr	r1, [r1]
   1250c:	sub	r1, r1, r0
   12510:	add	r2, sp, #16
   12514:	mov	r0, r5
   12518:	str	r1, [sp, #4]
   1251c:	bl	12b48 <strspn@plt+0x16c8>
   12520:	mov	r7, r0
   12524:	str	r4, [sp, #12]
   12528:	ldr	r0, [r4]
   1252c:	ldr	r0, [r0]
   12530:	str	r0, [r7]
   12534:	movw	r8, #33592	; 0x8338
   12538:	movt	r8, #2
   1253c:	ldrb	r0, [r8]
   12540:	ldr	sl, [sp, #16]
   12544:	cmp	r0, #1
   12548:	bne	12610 <strspn@plt+0x1190>
   1254c:	cmp	sl, #2
   12550:	blt	12610 <strspn@plt+0x1190>
   12554:	movw	r0, #33576	; 0x8328
   12558:	movt	r0, #2
   1255c:	ldr	r4, [r0]
   12560:	mov	r0, r5
   12564:	bl	15250 <strspn@plt+0x3dd0>
   12568:	mov	r3, r0
   1256c:	movw	r2, #28607	; 0x6fbf
   12570:	movt	r2, #1
   12574:	mov	r0, r4
   12578:	mov	r1, #1
   1257c:	bl	113c0 <__fprintf_chk@plt>
   12580:	ldrb	r0, [r8]
   12584:	cmp	r0, #1
   12588:	bne	125b8 <strspn@plt+0x1138>
   1258c:	movw	r0, #33576	; 0x8328
   12590:	movt	r0, #2
   12594:	ldr	r4, [r0]
   12598:	ldr	r0, [r7, #4]
   1259c:	bl	15250 <strspn@plt+0x3dd0>
   125a0:	mov	r3, r0
   125a4:	movw	r2, #28622	; 0x6fce
   125a8:	movt	r2, #1
   125ac:	mov	r0, r4
   125b0:	mov	r1, #1
   125b4:	bl	113c0 <__fprintf_chk@plt>
   125b8:	cmp	sl, #3
   125bc:	blt	12610 <strspn@plt+0x1190>
   125c0:	sub	r9, sl, #2
   125c4:	add	r6, r7, #8
   125c8:	movw	r5, #28636	; 0x6fdc
   125cc:	movt	r5, #1
   125d0:	ldrb	r0, [r8]
   125d4:	cmp	r0, #1
   125d8:	bne	12604 <strspn@plt+0x1184>
   125dc:	movw	r0, #33576	; 0x8328
   125e0:	movt	r0, #2
   125e4:	ldr	r4, [r0]
   125e8:	ldr	r0, [r6]
   125ec:	bl	15250 <strspn@plt+0x3dd0>
   125f0:	mov	r3, r0
   125f4:	mov	r0, r4
   125f8:	mov	r1, #1
   125fc:	mov	r2, r5
   12600:	bl	113c0 <__fprintf_chk@plt>
   12604:	subs	r9, r9, #1
   12608:	add	r6, r6, #4
   1260c:	bne	125d0 <strspn@plt+0x1150>
   12610:	mov	r0, #4
   12614:	ldr	r6, [sp, #4]
   12618:	add	r2, r0, r6, lsl #2
   1261c:	movw	r0, #33568	; 0x8320
   12620:	movt	r0, #2
   12624:	mov	r5, r0
   12628:	ldr	r0, [r0]
   1262c:	ldr	r4, [sp, #12]
   12630:	ldr	r1, [r4]
   12634:	add	r1, r1, r0, lsl #2
   12638:	add	r0, r7, sl, lsl #2
   1263c:	bl	111ec <memcpy@plt>
   12640:	add	r0, sl, r6
   12644:	ldr	r1, [sp, #8]
   12648:	str	r0, [r1]
   1264c:	str	r7, [r4]
   12650:	mov	r0, #0
   12654:	str	r0, [r5]
   12658:	sub	sp, fp, #28
   1265c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12660:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12664:	add	fp, sp, #24
   12668:	movw	r5, #33608	; 0x8348
   1266c:	movt	r5, #2
   12670:	ldr	r0, [r5]
   12674:	cmp	r0, #1
   12678:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   1267c:	mov	r6, #0
   12680:	movw	r4, #33592	; 0x8338
   12684:	movt	r4, #2
   12688:	movw	r7, #33616	; 0x8350
   1268c:	movt	r7, #2
   12690:	movw	r9, #33576	; 0x8328
   12694:	movt	r9, #2
   12698:	movw	r8, #28914	; 0x70f2
   1269c:	movt	r8, #1
   126a0:	ldrb	r0, [r4]
   126a4:	cmp	r0, #1
   126a8:	bne	126c4 <strspn@plt+0x1244>
   126ac:	ldr	r0, [r7]
   126b0:	ldr	r3, [r0, r6, lsl #2]
   126b4:	ldr	r0, [r9]
   126b8:	mov	r1, #1
   126bc:	mov	r2, r8
   126c0:	bl	113c0 <__fprintf_chk@plt>
   126c4:	ldr	r0, [r7]
   126c8:	ldr	r0, [r0, r6, lsl #2]
   126cc:	bl	1145c <unsetenv@plt>
   126d0:	cmp	r0, #0
   126d4:	bne	126ec <strspn@plt+0x126c>
   126d8:	ldr	r0, [r5]
   126dc:	add	r6, r6, #1
   126e0:	cmp	r6, r0
   126e4:	blt	126a0 <strspn@plt+0x1220>
   126e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   126ec:	bl	1136c <__errno_location@plt>
   126f0:	ldr	r4, [r0]
   126f4:	movw	r1, #28928	; 0x7100
   126f8:	movt	r1, #1
   126fc:	mov	r0, #0
   12700:	mov	r2, #5
   12704:	bl	1121c <dcgettext@plt>
   12708:	mov	r5, r0
   1270c:	ldr	r0, [r7]
   12710:	ldr	r0, [r0, r6, lsl #2]
   12714:	bl	15250 <strspn@plt+0x3dd0>
   12718:	mov	r3, r0
   1271c:	mov	r0, #125	; 0x7d
   12720:	mov	r1, r4
   12724:	mov	r2, r5
   12728:	bl	112c4 <error@plt>
   1272c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12730:	add	fp, sp, #28
   12734:	sub	sp, sp, #172	; 0xac
   12738:	mov	r4, #1
   1273c:	add	sl, sp, #32
   12740:	movw	r6, #33592	; 0x8338
   12744:	movt	r6, #2
   12748:	b	1275c <strspn@plt+0x12dc>
   1274c:	add	r4, r4, #1
   12750:	cmp	r4, #65	; 0x41
   12754:	subcs	sp, fp, #28
   12758:	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1275c:	movw	r0, #33604	; 0x8344
   12760:	movt	r0, #2
   12764:	ldr	r0, [r0]
   12768:	ldr	r5, [r0, r4, lsl #2]
   1276c:	cmp	r5, #0
   12770:	beq	1274c <strspn@plt+0x12cc>
   12774:	cmp	r5, #2
   12778:	mov	r9, #1
   1277c:	beq	1278c <strspn@plt+0x130c>
   12780:	cmp	r5, #4
   12784:	mov	r9, #1
   12788:	movne	r9, #0
   1278c:	mov	r0, r4
   12790:	mov	r1, #0
   12794:	mov	r2, sl
   12798:	bl	11264 <sigaction@plt>
   1279c:	mov	r7, r0
   127a0:	cmp	r9, #0
   127a4:	bne	127b0 <strspn@plt+0x1330>
   127a8:	cmp	r7, #0
   127ac:	bne	12874 <strspn@plt+0x13f4>
   127b0:	sub	r8, r5, #1
   127b4:	cmp	r7, #0
   127b8:	bne	127f0 <strspn@plt+0x1370>
   127bc:	cmp	r8, #1
   127c0:	mov	r0, #0
   127c4:	movwhi	r0, #1
   127c8:	str	r0, [sp, #32]
   127cc:	mov	r0, r4
   127d0:	mov	r1, sl
   127d4:	mov	r2, #0
   127d8:	bl	11264 <sigaction@plt>
   127dc:	mov	r7, r0
   127e0:	clz	r0, r0
   127e4:	lsr	r0, r0, #5
   127e8:	orrs	r0, r9, r0
   127ec:	beq	12888 <strspn@plt+0x1408>
   127f0:	ldrb	r0, [r6]
   127f4:	cmp	r0, #1
   127f8:	bne	1274c <strspn@plt+0x12cc>
   127fc:	mov	r0, r4
   12800:	add	r1, sp, #13
   12804:	bl	157ec <strspn@plt+0x436c>
   12808:	ldrb	r0, [r6]
   1280c:	cmp	r0, #1
   12810:	bne	1274c <strspn@plt+0x12cc>
   12814:	cmp	r7, #0
   12818:	movw	r1, #29073	; 0x7191
   1281c:	movt	r1, #1
   12820:	movw	r0, #28454	; 0x6f26
   12824:	movt	r0, #1
   12828:	moveq	r1, r0
   1282c:	movw	r0, #33576	; 0x8328
   12830:	movt	r0, #2
   12834:	ldr	r0, [r0]
   12838:	cmp	r8, #2
   1283c:	movw	r2, #29066	; 0x718a
   12840:	movt	r2, #1
   12844:	movw	r3, #29058	; 0x7182
   12848:	movt	r3, #1
   1284c:	movcc	r2, r3
   12850:	str	r4, [sp]
   12854:	str	r2, [sp, #4]
   12858:	str	r1, [sp, #8]
   1285c:	mov	r1, #1
   12860:	movw	r2, #29028	; 0x7164
   12864:	movt	r2, #1
   12868:	add	r3, sp, #13
   1286c:	bl	113c0 <__fprintf_chk@plt>
   12870:	b	1274c <strspn@plt+0x12cc>
   12874:	bl	1136c <__errno_location@plt>
   12878:	ldr	r5, [r0]
   1287c:	movw	r1, #28944	; 0x7110
   12880:	movt	r1, #1
   12884:	b	12898 <strspn@plt+0x1418>
   12888:	bl	1136c <__errno_location@plt>
   1288c:	ldr	r5, [r0]
   12890:	movw	r1, #28986	; 0x713a
   12894:	movt	r1, #1
   12898:	mov	r0, #0
   1289c:	mov	r2, #5
   128a0:	bl	1121c <dcgettext@plt>
   128a4:	mov	r2, r0
   128a8:	mov	r0, #125	; 0x7d
   128ac:	mov	r1, r5
   128b0:	mov	r3, r4
   128b4:	bl	112c4 <error@plt>
   128b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128bc:	add	fp, sp, #28
   128c0:	sub	sp, sp, #156	; 0x9c
   128c4:	add	r4, sp, #28
   128c8:	mov	r0, r4
   128cc:	bl	11408 <sigemptyset@plt>
   128d0:	mov	r0, #0
   128d4:	mov	r1, #0
   128d8:	mov	r2, r4
   128dc:	bl	111bc <sigprocmask@plt>
   128e0:	cmp	r0, #0
   128e4:	bne	129fc <strspn@plt+0x157c>
   128e8:	mov	r4, #1
   128ec:	movw	r5, #33620	; 0x8354
   128f0:	movt	r5, #2
   128f4:	add	r7, sp, #28
   128f8:	movw	r9, #33592	; 0x8338
   128fc:	movt	r9, #2
   12900:	add	r6, sp, #9
   12904:	movw	r8, #29128	; 0x71c8
   12908:	movt	r8, #1
   1290c:	mov	r0, r5
   12910:	mov	r1, r4
   12914:	bl	11234 <sigismember@plt>
   12918:	cmp	r0, #0
   1291c:	beq	12934 <strspn@plt+0x14b4>
   12920:	mov	r0, r7
   12924:	mov	r1, r4
   12928:	bl	112e8 <sigaddset@plt>
   1292c:	mov	sl, r8
   12930:	b	12960 <strspn@plt+0x14e0>
   12934:	movw	r0, #33748	; 0x83d4
   12938:	movt	r0, #2
   1293c:	mov	r1, r4
   12940:	bl	11234 <sigismember@plt>
   12944:	cmp	r0, #0
   12948:	beq	129a8 <strspn@plt+0x1528>
   1294c:	mov	r0, r7
   12950:	mov	r1, r4
   12954:	bl	113a8 <sigdelset@plt>
   12958:	movw	sl, #29126	; 0x71c6
   1295c:	movt	sl, #1
   12960:	ldrb	r0, [r9]
   12964:	cmp	r0, #1
   12968:	bne	129a8 <strspn@plt+0x1528>
   1296c:	mov	r0, r4
   12970:	mov	r1, r6
   12974:	bl	157ec <strspn@plt+0x436c>
   12978:	ldrb	r0, [r9]
   1297c:	cmp	r0, #1
   12980:	bne	129a8 <strspn@plt+0x1528>
   12984:	movw	r0, #33576	; 0x8328
   12988:	movt	r0, #2
   1298c:	ldr	r0, [r0]
   12990:	stm	sp, {r4, sl}
   12994:	mov	r1, #1
   12998:	movw	r2, #29134	; 0x71ce
   1299c:	movt	r2, #1
   129a0:	mov	r3, r6
   129a4:	bl	113c0 <__fprintf_chk@plt>
   129a8:	add	r4, r4, #1
   129ac:	cmp	r4, #65	; 0x41
   129b0:	bne	1290c <strspn@plt+0x148c>
   129b4:	add	r1, sp, #28
   129b8:	mov	r0, #2
   129bc:	mov	r2, #0
   129c0:	bl	111bc <sigprocmask@plt>
   129c4:	cmp	r0, #0
   129c8:	subeq	sp, fp, #28
   129cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129d0:	bl	1136c <__errno_location@plt>
   129d4:	ldr	r4, [r0]
   129d8:	movw	r1, #29165	; 0x71ed
   129dc:	movt	r1, #1
   129e0:	mov	r0, #0
   129e4:	mov	r2, #5
   129e8:	bl	1121c <dcgettext@plt>
   129ec:	mov	r2, r0
   129f0:	mov	r0, #125	; 0x7d
   129f4:	mov	r1, r4
   129f8:	bl	112c4 <error@plt>
   129fc:	bl	1136c <__errno_location@plt>
   12a00:	ldr	r4, [r0]
   12a04:	movw	r1, #29092	; 0x71a4
   12a08:	movt	r1, #1
   12a0c:	b	129e0 <strspn@plt+0x1560>
   12a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a14:	add	fp, sp, #28
   12a18:	sub	sp, sp, #308	; 0x134
   12a1c:	sub	r4, fp, #160	; 0xa0
   12a20:	mov	r0, r4
   12a24:	bl	11408 <sigemptyset@plt>
   12a28:	mov	r0, #0
   12a2c:	mov	r1, #0
   12a30:	mov	r2, r4
   12a34:	bl	111bc <sigprocmask@plt>
   12a38:	cmp	r0, #0
   12a3c:	bne	12b1c <strspn@plt+0x169c>
   12a40:	mov	r4, #1
   12a44:	add	r5, sp, #16
   12a48:	movw	sl, #28454	; 0x6f26
   12a4c:	movt	sl, #1
   12a50:	b	12a64 <strspn@plt+0x15e4>
   12a54:	add	r4, r4, #1
   12a58:	cmp	r4, #65	; 0x41
   12a5c:	subeq	sp, fp, #28
   12a60:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a64:	mov	r0, r4
   12a68:	mov	r1, #0
   12a6c:	mov	r2, r5
   12a70:	bl	11264 <sigaction@plt>
   12a74:	cmp	r0, #0
   12a78:	bne	12a54 <strspn@plt+0x15d4>
   12a7c:	ldr	r0, [sp, #16]
   12a80:	cmp	r0, #1
   12a84:	mov	r6, sl
   12a88:	movw	r0, #29066	; 0x718a
   12a8c:	movt	r0, #1
   12a90:	moveq	r6, r0
   12a94:	ldrb	r7, [r6]
   12a98:	sub	r0, fp, #160	; 0xa0
   12a9c:	mov	r1, r4
   12aa0:	bl	11234 <sigismember@plt>
   12aa4:	cmp	r0, #0
   12aa8:	movw	r8, #29128	; 0x71c8
   12aac:	movt	r8, #1
   12ab0:	moveq	r8, sl
   12ab4:	ldrb	r0, [r8]
   12ab8:	cmp	r7, #0
   12abc:	beq	12ad4 <strspn@plt+0x1654>
   12ac0:	cmp	r0, #0
   12ac4:	movw	r9, #28586	; 0x6faa
   12ac8:	movt	r9, #1
   12acc:	moveq	r9, sl
   12ad0:	b	12ae0 <strspn@plt+0x1660>
   12ad4:	cmp	r0, #0
   12ad8:	mov	r9, sl
   12adc:	beq	12a54 <strspn@plt+0x15d4>
   12ae0:	mov	r0, r4
   12ae4:	add	r7, sp, #157	; 0x9d
   12ae8:	mov	r1, r7
   12aec:	bl	157ec <strspn@plt+0x436c>
   12af0:	movw	r0, #33576	; 0x8328
   12af4:	movt	r0, #2
   12af8:	ldr	r0, [r0]
   12afc:	stm	sp, {r4, r8, r9}
   12b00:	str	r6, [sp, #12]
   12b04:	mov	r1, #1
   12b08:	movw	r2, #29199	; 0x720f
   12b0c:	movt	r2, #1
   12b10:	mov	r3, r7
   12b14:	bl	113c0 <__fprintf_chk@plt>
   12b18:	b	12a54 <strspn@plt+0x15d4>
   12b1c:	bl	1136c <__errno_location@plt>
   12b20:	ldr	r4, [r0]
   12b24:	movw	r1, #29092	; 0x71a4
   12b28:	movt	r1, #1
   12b2c:	mov	r0, #0
   12b30:	mov	r2, #5
   12b34:	bl	1121c <dcgettext@plt>
   12b38:	mov	r2, r0
   12b3c:	mov	r0, #125	; 0x7d
   12b40:	mov	r1, r4
   12b44:	bl	112c4 <error@plt>
   12b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b4c:	add	fp, sp, #28
   12b50:	sub	sp, sp, #28
   12b54:	str	r2, [sp, #4]
   12b58:	mov	r4, r1
   12b5c:	mov	r9, r0
   12b60:	add	r5, r1, #2
   12b64:	mov	r0, r5
   12b68:	mov	r1, #8
   12b6c:	bl	15e34 <strspn@plt+0x49b4>
   12b70:	mov	r8, #1
   12b74:	str	r8, [sp, #12]
   12b78:	str	r5, [sp, #16]
   12b7c:	str	r4, [sp, #20]
   12b80:	str	r0, [sp, #8]
   12b84:	strb	r8, [sp, #24]
   12b88:	mov	r6, #0
   12b8c:	str	r6, [r0, #4]
   12b90:	add	r5, sp, #8
   12b94:	b	12ba8 <strspn@plt+0x1728>
   12b98:	mov	r0, r5
   12b9c:	bl	131e8 <strspn@plt+0x1d68>
   12ba0:	eor	r6, r6, #1
   12ba4:	add	r9, r9, #1
   12ba8:	mov	sl, #0
   12bac:	b	12be4 <strspn@plt+0x1764>
   12bb0:	mov	r0, r5
   12bb4:	bl	131e8 <strspn@plt+0x1d68>
   12bb8:	mov	r0, r5
   12bbc:	mov	r1, r4
   12bc0:	bl	132d0 <strspn@plt+0x1e50>
   12bc4:	add	r9, r7, #1
   12bc8:	b	12be4 <strspn@plt+0x1764>
   12bcc:	mov	r4, #35	; 0x23
   12bd0:	ldrb	r0, [sp, #24]
   12bd4:	cmp	r0, #0
   12bd8:	mov	r7, r9
   12bdc:	beq	12bb0 <strspn@plt+0x1730>
   12be0:	b	13128 <strspn@plt+0x1ca8>
   12be4:	ldrb	r4, [r9]
   12be8:	cmp	r4, #92	; 0x5c
   12bec:	bhi	13004 <strspn@plt+0x1b84>
   12bf0:	add	r0, pc, #4
   12bf4:	mov	r7, r9
   12bf8:	ldr	pc, [r0, r4, lsl #2]
   12bfc:	andeq	r3, r1, ip, lsl r1
   12c00:			; <UNDEFINED> instruction: 0x00012bb0
   12c04:			; <UNDEFINED> instruction: 0x00012bb0
   12c08:			; <UNDEFINED> instruction: 0x00012bb0
   12c0c:			; <UNDEFINED> instruction: 0x00012bb0
   12c10:			; <UNDEFINED> instruction: 0x00012bb0
   12c14:			; <UNDEFINED> instruction: 0x00012bb0
   12c18:			; <UNDEFINED> instruction: 0x00012bb0
   12c1c:			; <UNDEFINED> instruction: 0x00012bb0
   12c20:	andeq	r2, r1, r0, ror sp
   12c24:	andeq	r2, r1, r0, ror sp
   12c28:	andeq	r2, r1, r0, ror sp
   12c2c:	andeq	r2, r1, r0, ror sp
   12c30:	andeq	r2, r1, r0, ror sp
   12c34:			; <UNDEFINED> instruction: 0x00012bb0
   12c38:			; <UNDEFINED> instruction: 0x00012bb0
   12c3c:			; <UNDEFINED> instruction: 0x00012bb0
   12c40:			; <UNDEFINED> instruction: 0x00012bb0
   12c44:			; <UNDEFINED> instruction: 0x00012bb0
   12c48:			; <UNDEFINED> instruction: 0x00012bb0
   12c4c:			; <UNDEFINED> instruction: 0x00012bb0
   12c50:			; <UNDEFINED> instruction: 0x00012bb0
   12c54:			; <UNDEFINED> instruction: 0x00012bb0
   12c58:			; <UNDEFINED> instruction: 0x00012bb0
   12c5c:			; <UNDEFINED> instruction: 0x00012bb0
   12c60:			; <UNDEFINED> instruction: 0x00012bb0
   12c64:			; <UNDEFINED> instruction: 0x00012bb0
   12c68:			; <UNDEFINED> instruction: 0x00012bb0
   12c6c:			; <UNDEFINED> instruction: 0x00012bb0
   12c70:			; <UNDEFINED> instruction: 0x00012bb0
   12c74:			; <UNDEFINED> instruction: 0x00012bb0
   12c78:			; <UNDEFINED> instruction: 0x00012bb0
   12c7c:	andeq	r2, r1, r0, ror sp
   12c80:			; <UNDEFINED> instruction: 0x00012bb0
   12c84:	andeq	r2, r1, r4, asr #31
   12c88:	andeq	r2, r1, ip, asr #23
   12c8c:	strdeq	r2, [r1], -r8
   12c90:			; <UNDEFINED> instruction: 0x00012bb0
   12c94:			; <UNDEFINED> instruction: 0x00012bb0
   12c98:	ldrdeq	r2, [r1], -r4
   12c9c:			; <UNDEFINED> instruction: 0x00012bb0
   12ca0:			; <UNDEFINED> instruction: 0x00012bb0
   12ca4:			; <UNDEFINED> instruction: 0x00012bb0
   12ca8:			; <UNDEFINED> instruction: 0x00012bb0
   12cac:			; <UNDEFINED> instruction: 0x00012bb0
   12cb0:			; <UNDEFINED> instruction: 0x00012bb0
   12cb4:			; <UNDEFINED> instruction: 0x00012bb0
   12cb8:			; <UNDEFINED> instruction: 0x00012bb0
   12cbc:			; <UNDEFINED> instruction: 0x00012bb0
   12cc0:			; <UNDEFINED> instruction: 0x00012bb0
   12cc4:			; <UNDEFINED> instruction: 0x00012bb0
   12cc8:			; <UNDEFINED> instruction: 0x00012bb0
   12ccc:			; <UNDEFINED> instruction: 0x00012bb0
   12cd0:			; <UNDEFINED> instruction: 0x00012bb0
   12cd4:			; <UNDEFINED> instruction: 0x00012bb0
   12cd8:			; <UNDEFINED> instruction: 0x00012bb0
   12cdc:			; <UNDEFINED> instruction: 0x00012bb0
   12ce0:			; <UNDEFINED> instruction: 0x00012bb0
   12ce4:			; <UNDEFINED> instruction: 0x00012bb0
   12ce8:			; <UNDEFINED> instruction: 0x00012bb0
   12cec:			; <UNDEFINED> instruction: 0x00012bb0
   12cf0:			; <UNDEFINED> instruction: 0x00012bb0
   12cf4:			; <UNDEFINED> instruction: 0x00012bb0
   12cf8:			; <UNDEFINED> instruction: 0x00012bb0
   12cfc:			; <UNDEFINED> instruction: 0x00012bb0
   12d00:			; <UNDEFINED> instruction: 0x00012bb0
   12d04:			; <UNDEFINED> instruction: 0x00012bb0
   12d08:			; <UNDEFINED> instruction: 0x00012bb0
   12d0c:			; <UNDEFINED> instruction: 0x00012bb0
   12d10:			; <UNDEFINED> instruction: 0x00012bb0
   12d14:			; <UNDEFINED> instruction: 0x00012bb0
   12d18:			; <UNDEFINED> instruction: 0x00012bb0
   12d1c:			; <UNDEFINED> instruction: 0x00012bb0
   12d20:			; <UNDEFINED> instruction: 0x00012bb0
   12d24:			; <UNDEFINED> instruction: 0x00012bb0
   12d28:			; <UNDEFINED> instruction: 0x00012bb0
   12d2c:			; <UNDEFINED> instruction: 0x00012bb0
   12d30:			; <UNDEFINED> instruction: 0x00012bb0
   12d34:			; <UNDEFINED> instruction: 0x00012bb0
   12d38:			; <UNDEFINED> instruction: 0x00012bb0
   12d3c:			; <UNDEFINED> instruction: 0x00012bb0
   12d40:			; <UNDEFINED> instruction: 0x00012bb0
   12d44:			; <UNDEFINED> instruction: 0x00012bb0
   12d48:			; <UNDEFINED> instruction: 0x00012bb0
   12d4c:			; <UNDEFINED> instruction: 0x00012bb0
   12d50:			; <UNDEFINED> instruction: 0x00012bb0
   12d54:			; <UNDEFINED> instruction: 0x00012bb0
   12d58:			; <UNDEFINED> instruction: 0x00012bb0
   12d5c:			; <UNDEFINED> instruction: 0x00012bb0
   12d60:			; <UNDEFINED> instruction: 0x00012bb0
   12d64:			; <UNDEFINED> instruction: 0x00012bb0
   12d68:			; <UNDEFINED> instruction: 0x00012bb0
   12d6c:	muleq	r1, r8, sp
   12d70:	orr	r0, r6, sl
   12d74:	tst	r0, #1
   12d78:	bne	13004 <strspn@plt+0x1b84>
   12d7c:	strb	r8, [sp, #24]
   12d80:	mov	r0, r9
   12d84:	movw	r1, #28062	; 0x6d9e
   12d88:	movt	r1, #1
   12d8c:	bl	11480 <strspn@plt>
   12d90:	add	r9, r9, r0
   12d94:	b	12be4 <strspn@plt+0x1764>
   12d98:	tst	sl, #1
   12d9c:	beq	12db4 <strspn@plt+0x1934>
   12da0:	ldrb	r0, [r9, #1]
   12da4:	cmp	r0, #92	; 0x5c
   12da8:	movne	r4, #92	; 0x5c
   12dac:	cmpne	r0, #39	; 0x27
   12db0:	bne	13004 <strspn@plt+0x1b84>
   12db4:	mov	r7, r9
   12db8:	ldrb	r4, [r7, #1]!
   12dbc:	cmp	r4, #118	; 0x76
   12dc0:	bhi	13168 <strspn@plt+0x1ce8>
   12dc4:	add	r0, pc, #0
   12dc8:	ldr	pc, [r0, r4, lsl #2]
   12dcc:	muleq	r1, r0, r1
   12dd0:	andeq	r3, r1, r8, ror #2
   12dd4:	andeq	r3, r1, r8, ror #2
   12dd8:	andeq	r3, r1, r8, ror #2
   12ddc:	andeq	r3, r1, r8, ror #2
   12de0:	andeq	r3, r1, r8, ror #2
   12de4:	andeq	r3, r1, r8, ror #2
   12de8:	andeq	r3, r1, r8, ror #2
   12dec:	andeq	r3, r1, r8, ror #2
   12df0:	andeq	r3, r1, r8, ror #2
   12df4:	andeq	r3, r1, r8, ror #2
   12df8:	andeq	r3, r1, r8, ror #2
   12dfc:	andeq	r3, r1, r8, ror #2
   12e00:	andeq	r3, r1, r8, ror #2
   12e04:	andeq	r3, r1, r8, ror #2
   12e08:	andeq	r3, r1, r8, ror #2
   12e0c:	andeq	r3, r1, r8, ror #2
   12e10:	andeq	r3, r1, r8, ror #2
   12e14:	andeq	r3, r1, r8, ror #2
   12e18:	andeq	r3, r1, r8, ror #2
   12e1c:	andeq	r3, r1, r8, ror #2
   12e20:	andeq	r3, r1, r8, ror #2
   12e24:	andeq	r3, r1, r8, ror #2
   12e28:	andeq	r3, r1, r8, ror #2
   12e2c:	andeq	r3, r1, r8, ror #2
   12e30:	andeq	r3, r1, r8, ror #2
   12e34:	andeq	r3, r1, r8, ror #2
   12e38:	andeq	r3, r1, r8, ror #2
   12e3c:	andeq	r3, r1, r8, ror #2
   12e40:	andeq	r3, r1, r8, ror #2
   12e44:	andeq	r3, r1, r8, ror #2
   12e48:	andeq	r3, r1, r8, ror #2
   12e4c:	andeq	r3, r1, r8, ror #2
   12e50:	andeq	r3, r1, r8, ror #2
   12e54:			; <UNDEFINED> instruction: 0x00012bb0
   12e58:			; <UNDEFINED> instruction: 0x00012bb0
   12e5c:			; <UNDEFINED> instruction: 0x00012bb0
   12e60:	andeq	r3, r1, r8, ror #2
   12e64:	andeq	r3, r1, r8, ror #2
   12e68:			; <UNDEFINED> instruction: 0x00012bb0
   12e6c:	andeq	r3, r1, r8, ror #2
   12e70:	andeq	r3, r1, r8, ror #2
   12e74:	andeq	r3, r1, r8, ror #2
   12e78:	andeq	r3, r1, r8, ror #2
   12e7c:	andeq	r3, r1, r8, ror #2
   12e80:	andeq	r3, r1, r8, ror #2
   12e84:	andeq	r3, r1, r8, ror #2
   12e88:	andeq	r3, r1, r8, ror #2
   12e8c:	andeq	r3, r1, r8, ror #2
   12e90:	andeq	r3, r1, r8, ror #2
   12e94:	andeq	r3, r1, r8, ror #2
   12e98:	andeq	r3, r1, r8, ror #2
   12e9c:	andeq	r3, r1, r8, ror #2
   12ea0:	andeq	r3, r1, r8, ror #2
   12ea4:	andeq	r3, r1, r8, ror #2
   12ea8:	andeq	r3, r1, r8, ror #2
   12eac:	andeq	r3, r1, r8, ror #2
   12eb0:	andeq	r3, r1, r8, ror #2
   12eb4:	andeq	r3, r1, r8, ror #2
   12eb8:	andeq	r3, r1, r8, ror #2
   12ebc:	andeq	r3, r1, r8, ror #2
   12ec0:	andeq	r3, r1, r8, ror #2
   12ec4:	andeq	r3, r1, r8, ror #2
   12ec8:	andeq	r3, r1, r8, ror #2
   12ecc:	andeq	r3, r1, r8, ror #2
   12ed0:	andeq	r3, r1, r8, ror #2
   12ed4:	andeq	r3, r1, r8, ror #2
   12ed8:	andeq	r3, r1, r8, ror #2
   12edc:	andeq	r3, r1, r8, ror #2
   12ee0:	andeq	r3, r1, r8, ror #2
   12ee4:	andeq	r3, r1, r8, ror #2
   12ee8:	andeq	r3, r1, r8, ror #2
   12eec:	andeq	r3, r1, r8, ror #2
   12ef0:	andeq	r3, r1, r8, ror #2
   12ef4:	andeq	r3, r1, r8, ror #2
   12ef8:	andeq	r3, r1, r8, ror #2
   12efc:	andeq	r3, r1, r8, ror #2
   12f00:	andeq	r3, r1, r8, ror #2
   12f04:	andeq	r3, r1, r8, ror #2
   12f08:	andeq	r3, r1, r8, ror #2
   12f0c:	andeq	r3, r1, r8, ror #2
   12f10:	andeq	r3, r1, r8, ror #2
   12f14:	andeq	r3, r1, r8, ror #2
   12f18:	andeq	r3, r1, r8, ror #2
   12f1c:	andeq	r3, r1, r8, ror #2
   12f20:	andeq	r3, r1, r8, ror #2
   12f24:	andeq	r3, r1, r8, ror #2
   12f28:	andeq	r3, r1, r8, ror #2
   12f2c:	andeq	r3, r1, r8, ror #2
   12f30:	andeq	r3, r1, r8, ror #2
   12f34:	andeq	r3, r1, r8, ror #2
   12f38:	andeq	r3, r1, r8, ror #2
   12f3c:			; <UNDEFINED> instruction: 0x00012bb0
   12f40:	andeq	r3, r1, r8, ror #2
   12f44:	andeq	r3, r1, r8, ror #2
   12f48:	andeq	r2, r1, r8, lsr #31
   12f4c:	andeq	r3, r1, r8, ror #2
   12f50:	andeq	r3, r1, r8, ror #2
   12f54:	andeq	r3, r1, r8, ror #2
   12f58:	andeq	r3, r1, r4, asr r1
   12f5c:	andeq	r3, r1, r8, ror #2
   12f60:	andeq	r3, r1, r8, ror #2
   12f64:	strdeq	r3, [r1], -ip
   12f68:	andeq	r3, r1, r8, ror #2
   12f6c:	andeq	r3, r1, r8, ror #2
   12f70:	andeq	r3, r1, r8, ror #2
   12f74:	andeq	r3, r1, r8, ror #2
   12f78:	andeq	r3, r1, r8, ror #2
   12f7c:	andeq	r3, r1, r8, ror #2
   12f80:	andeq	r3, r1, r8, ror #2
   12f84:	andeq	r3, r1, r4, lsl r1
   12f88:	andeq	r3, r1, r8, ror #2
   12f8c:	andeq	r3, r1, r8, ror #2
   12f90:	andeq	r3, r1, r8, ror #2
   12f94:	andeq	r3, r1, r4, lsl #2
   12f98:	andeq	r3, r1, r8, ror #2
   12f9c:	strdeq	r3, [r1], -r4
   12fa0:	andeq	r3, r1, r8, ror #2
   12fa4:	andeq	r3, r1, ip, lsl #2
   12fa8:	mov	r4, #32
   12fac:	tst	r6, #1
   12fb0:	bne	12bb0 <strspn@plt+0x1730>
   12fb4:	strb	r8, [sp, #24]
   12fb8:	add	r9, r9, #2
   12fbc:	mov	r6, #0
   12fc0:	b	12be4 <strspn@plt+0x1764>
   12fc4:	mov	r4, #34	; 0x22
   12fc8:	tst	sl, #1
   12fcc:	bne	13004 <strspn@plt+0x1b84>
   12fd0:	b	12b98 <strspn@plt+0x1718>
   12fd4:	mov	r4, #39	; 0x27
   12fd8:	tst	r6, #1
   12fdc:	bne	13004 <strspn@plt+0x1b84>
   12fe0:	mov	r0, r5
   12fe4:	bl	131e8 <strspn@plt+0x1d68>
   12fe8:	eor	sl, sl, #1
   12fec:	add	r9, r9, #1
   12ff0:	mov	r6, #0
   12ff4:	b	12be4 <strspn@plt+0x1764>
   12ff8:	mov	r4, #36	; 0x24
   12ffc:	tst	sl, #1
   13000:	beq	1300c <strspn@plt+0x1b8c>
   13004:	mov	r7, r9
   13008:	b	12bb0 <strspn@plt+0x1730>
   1300c:	mov	r0, r9
   13010:	bl	1324c <strspn@plt+0x1dcc>
   13014:	cmp	r0, #0
   13018:	beq	1319c <strspn@plt+0x1d1c>
   1301c:	mov	r4, r0
   13020:	bl	112d0 <getenv@plt>
   13024:	cmp	r0, #0
   13028:	beq	130a8 <strspn@plt+0x1c28>
   1302c:	mov	r8, r0
   13030:	mov	r0, r5
   13034:	bl	131e8 <strspn@plt+0x1d68>
   13038:	movw	r0, #33592	; 0x8338
   1303c:	movt	r0, #2
   13040:	ldrb	r0, [r0]
   13044:	cmp	r0, #1
   13048:	bne	1307c <strspn@plt+0x1bfc>
   1304c:	movw	r0, #33576	; 0x8328
   13050:	movt	r0, #2
   13054:	ldr	r7, [r0]
   13058:	mov	r0, r8
   1305c:	bl	15250 <strspn@plt+0x3dd0>
   13060:	str	r0, [sp]
   13064:	mov	r0, r7
   13068:	mov	r1, #1
   1306c:	movw	r2, #28821	; 0x7095
   13070:	movt	r2, #1
   13074:	mov	r3, r4
   13078:	bl	113c0 <__fprintf_chk@plt>
   1307c:	ldrb	r0, [r8]
   13080:	cmp	r0, #0
   13084:	beq	130dc <strspn@plt+0x1c5c>
   13088:	add	r4, r8, #1
   1308c:	uxtb	r1, r0
   13090:	mov	r0, r5
   13094:	bl	132d0 <strspn@plt+0x1e50>
   13098:	ldrb	r0, [r4], #1
   1309c:	cmp	r0, #0
   130a0:	bne	1308c <strspn@plt+0x1c0c>
   130a4:	b	130dc <strspn@plt+0x1c5c>
   130a8:	movw	r0, #33592	; 0x8338
   130ac:	movt	r0, #2
   130b0:	ldrb	r0, [r0]
   130b4:	cmp	r0, #1
   130b8:	bne	130dc <strspn@plt+0x1c5c>
   130bc:	movw	r0, #33576	; 0x8328
   130c0:	movt	r0, #2
   130c4:	ldr	r0, [r0]
   130c8:	mov	r1, #1
   130cc:	movw	r2, #28846	; 0x70ae
   130d0:	movt	r2, #1
   130d4:	mov	r3, r4
   130d8:	bl	113c0 <__fprintf_chk@plt>
   130dc:	mov	r0, r9
   130e0:	mov	r1, #125	; 0x7d
   130e4:	bl	11354 <strchr@plt>
   130e8:	add	r9, r0, #1
   130ec:	mov	r8, #1
   130f0:	b	12be4 <strspn@plt+0x1764>
   130f4:	mov	r4, #9
   130f8:	b	12bb0 <strspn@plt+0x1730>
   130fc:	mov	r4, #12
   13100:	b	12bb0 <strspn@plt+0x1730>
   13104:	mov	r4, #13
   13108:	b	12bb0 <strspn@plt+0x1730>
   1310c:	mov	r4, #11
   13110:	b	12bb0 <strspn@plt+0x1730>
   13114:	mov	r4, #10
   13118:	b	12bb0 <strspn@plt+0x1730>
   1311c:	orr	r0, r6, sl
   13120:	tst	r0, #1
   13124:	bne	131c4 <strspn@plt+0x1d44>
   13128:	add	r4, sp, #8
   1312c:	mov	r0, r4
   13130:	mov	r1, #0
   13134:	bl	132d0 <strspn@plt+0x1e50>
   13138:	ldr	r0, [sp, #12]
   1313c:	ldr	r1, [sp, #4]
   13140:	str	r0, [r1]
   13144:	mov	r0, r4
   13148:	bl	13318 <strspn@plt+0x1e98>
   1314c:	sub	sp, fp, #28
   13150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13154:	tst	r6, #1
   13158:	beq	13128 <strspn@plt+0x1ca8>
   1315c:	movw	r1, #28650	; 0x6fea
   13160:	movt	r1, #1
   13164:	b	131cc <strspn@plt+0x1d4c>
   13168:	movw	r1, #28739	; 0x7043
   1316c:	movt	r1, #1
   13170:	mov	r0, #0
   13174:	mov	r2, #5
   13178:	bl	1121c <dcgettext@plt>
   1317c:	mov	r2, r0
   13180:	mov	r0, #125	; 0x7d
   13184:	mov	r1, #0
   13188:	mov	r3, r4
   1318c:	bl	112c4 <error@plt>
   13190:	movw	r1, #28698	; 0x701a
   13194:	movt	r1, #1
   13198:	b	131cc <strspn@plt+0x1d4c>
   1319c:	movw	r1, #28768	; 0x7060
   131a0:	movt	r1, #1
   131a4:	mov	r0, #0
   131a8:	mov	r2, #5
   131ac:	bl	1121c <dcgettext@plt>
   131b0:	mov	r2, r0
   131b4:	mov	r0, #125	; 0x7d
   131b8:	mov	r1, #0
   131bc:	mov	r3, r9
   131c0:	bl	112c4 <error@plt>
   131c4:	movw	r1, #28880	; 0x70d0
   131c8:	movt	r1, #1
   131cc:	mov	r0, #0
   131d0:	mov	r2, #5
   131d4:	bl	1121c <dcgettext@plt>
   131d8:	mov	r2, r0
   131dc:	mov	r0, #125	; 0x7d
   131e0:	mov	r1, #0
   131e4:	bl	112c4 <error@plt>
   131e8:	push	{r4, r5, r6, sl, fp, lr}
   131ec:	add	fp, sp, #16
   131f0:	mov	r4, r0
   131f4:	ldrb	r0, [r0, #16]
   131f8:	cmp	r0, #0
   131fc:	popeq	{r4, r5, r6, sl, fp, pc}
   13200:	mov	r5, #0
   13204:	mov	r0, r4
   13208:	mov	r1, #0
   1320c:	bl	132d0 <strspn@plt+0x1e50>
   13210:	ldr	r6, [r4, #4]
   13214:	ldr	r0, [r4, #8]
   13218:	ldr	r1, [r4, #12]
   1321c:	add	r1, r6, r1
   13220:	add	r1, r1, #1
   13224:	cmp	r0, r1
   13228:	movle	r0, r4
   1322c:	blle	13354 <strspn@plt+0x1ed4>
   13230:	ldr	r0, [r4]
   13234:	ldr	r1, [r0, r6, lsl #2]
   13238:	add	r2, r6, #1
   1323c:	str	r1, [r0, r2, lsl #2]
   13240:	strb	r5, [r4, #16]
   13244:	str	r2, [r4, #4]
   13248:	pop	{r4, r5, r6, sl, fp, pc}
   1324c:	push	{r4, r5, r6, sl, fp, lr}
   13250:	add	fp, sp, #16
   13254:	mov	r4, r0
   13258:	bl	133b0 <strspn@plt+0x1f30>
   1325c:	cmp	r0, #0
   13260:	moveq	r6, #0
   13264:	moveq	r0, r6
   13268:	popeq	{r4, r5, r6, sl, fp, pc}
   1326c:	sub	r0, r0, r4
   13270:	sub	r5, r0, #2
   13274:	movw	r2, #33876	; 0x8454
   13278:	movt	r2, #2
   1327c:	ldr	r1, [r2]
   13280:	cmp	r5, r1
   13284:	blt	132a4 <strspn@plt+0x1e24>
   13288:	sub	r1, r0, #1
   1328c:	str	r1, [r2]
   13290:	movw	r6, #33880	; 0x8458
   13294:	movt	r6, #2
   13298:	ldr	r0, [r6]
   1329c:	bl	15dd8 <strspn@plt+0x4958>
   132a0:	str	r0, [r6]
   132a4:	movw	r0, #33880	; 0x8458
   132a8:	movt	r0, #2
   132ac:	ldr	r6, [r0]
   132b0:	add	r1, r4, #2
   132b4:	mov	r0, r6
   132b8:	mov	r2, r5
   132bc:	bl	111ec <memcpy@plt>
   132c0:	mov	r0, #0
   132c4:	strb	r0, [r6, r5]
   132c8:	mov	r0, r6
   132cc:	pop	{r4, r5, r6, sl, fp, pc}
   132d0:	push	{r4, r5, r6, sl, fp, lr}
   132d4:	add	fp, sp, #16
   132d8:	mov	r5, r1
   132dc:	mov	r4, r0
   132e0:	ldr	r0, [r0]
   132e4:	ldmib	r4, {r1, r2}
   132e8:	ldr	r6, [r0, r1, lsl #2]
   132ec:	cmp	r6, r2, lsl #2
   132f0:	movcs	r0, r4
   132f4:	blcs	13354 <strspn@plt+0x1ed4>
   132f8:	ldr	r0, [r4]
   132fc:	ldr	r1, [r4, #8]
   13300:	add	r0, r0, r1, lsl #2
   13304:	strb	r5, [r0, r6]
   13308:	ldm	r4, {r0, r1}
   1330c:	add	r2, r6, #1
   13310:	str	r2, [r0, r1, lsl #2]
   13314:	pop	{r4, r5, r6, sl, fp, pc}
   13318:	mov	r1, r0
   1331c:	ldr	r0, [r0]
   13320:	ldr	r2, [r1, #4]
   13324:	cmp	r2, #2
   13328:	bxlt	lr
   1332c:	ldr	r1, [r1, #8]
   13330:	add	ip, r0, r1, lsl #2
   13334:	sub	r2, r2, #1
   13338:	add	r3, r0, #4
   1333c:	ldr	r1, [r3]
   13340:	add	r1, ip, r1
   13344:	str	r1, [r3], #4
   13348:	subs	r2, r2, #1
   1334c:	bne	1333c <strspn@plt+0x1ebc>
   13350:	bx	lr
   13354:	push	{r4, r5, r6, r7, fp, lr}
   13358:	add	fp, sp, #16
   1335c:	sub	sp, sp, #8
   13360:	mov	r4, r0
   13364:	ldr	r0, [r0]
   13368:	ldr	r1, [r4, #4]
   1336c:	ldr	r5, [r0, r1, lsl #2]
   13370:	mov	r6, r4
   13374:	ldr	r7, [r6, #8]!
   13378:	mov	r1, #8
   1337c:	str	r1, [sp]
   13380:	mov	r1, r6
   13384:	mov	r2, #1
   13388:	mvn	r3, #-2147483648	; 0x80000000
   1338c:	bl	15ebc <strspn@plt+0x4a3c>
   13390:	str	r0, [r4]
   13394:	add	r1, r0, r7, lsl #2
   13398:	ldr	r2, [r6]
   1339c:	add	r0, r0, r2, lsl #2
   133a0:	mov	r2, r5
   133a4:	sub	sp, fp, #16
   133a8:	pop	{r4, r5, r6, r7, fp, lr}
   133ac:	b	111c8 <memmove@plt>
   133b0:	push	{r4, r5, fp, lr}
   133b4:	add	fp, sp, #8
   133b8:	mov	r5, r0
   133bc:	ldrb	r0, [r0, #1]
   133c0:	mov	r4, #0
   133c4:	cmp	r0, #123	; 0x7b
   133c8:	bne	13418 <strspn@plt+0x1f98>
   133cc:	ldrb	r0, [r5, #2]
   133d0:	bl	135f4 <strspn@plt+0x2174>
   133d4:	cmp	r0, #0
   133d8:	bne	133e8 <strspn@plt+0x1f68>
   133dc:	ldrb	r0, [r5, #2]
   133e0:	cmp	r0, #95	; 0x5f
   133e4:	bne	13418 <strspn@plt+0x1f98>
   133e8:	add	r4, r5, #3
   133ec:	b	133f4 <strspn@plt+0x1f74>
   133f0:	add	r4, r4, #1
   133f4:	ldrb	r0, [r4]
   133f8:	bl	135c4 <strspn@plt+0x2144>
   133fc:	cmp	r0, #0
   13400:	bne	133f0 <strspn@plt+0x1f70>
   13404:	ldrb	r0, [r4]
   13408:	cmp	r0, #95	; 0x5f
   1340c:	beq	133f0 <strspn@plt+0x1f70>
   13410:	cmp	r0, #125	; 0x7d
   13414:	movne	r4, #0
   13418:	mov	r0, r4
   1341c:	pop	{r4, r5, fp, pc}
   13420:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13424:	add	fp, sp, #24
   13428:	sub	sp, sp, #8
   1342c:	mov	r8, r1
   13430:	mov	r9, r0
   13434:	ldrb	r0, [r0]
   13438:	sub	r0, r0, #48	; 0x30
   1343c:	cmp	r0, #9
   13440:	bhi	134b8 <strspn@plt+0x2038>
   13444:	bl	1136c <__errno_location@plt>
   13448:	mov	r6, r0
   1344c:	mov	r0, #0
   13450:	str	r0, [r6]
   13454:	mov	r1, sp
   13458:	mov	r0, r9
   1345c:	mov	r2, #10
   13460:	bl	111a4 <strtol@plt>
   13464:	mov	r1, r0
   13468:	mvn	r0, #0
   1346c:	ldr	r2, [sp]
   13470:	cmp	r2, r9
   13474:	beq	134a8 <strspn@plt+0x2028>
   13478:	ldrb	r2, [r2]
   1347c:	cmp	r2, #0
   13480:	bne	134a8 <strspn@plt+0x2028>
   13484:	cmn	r1, #1
   13488:	beq	134a8 <strspn@plt+0x2028>
   1348c:	ldr	r2, [r6]
   13490:	cmp	r2, #0
   13494:	bne	134a8 <strspn@plt+0x2028>
   13498:	mov	r0, #127	; 0x7f
   1349c:	cmp	r1, #254	; 0xfe
   134a0:	movwgt	r0, #255	; 0xff
   134a4:	and	r0, r0, r1
   134a8:	str	r0, [sp, #4]
   134ac:	cmp	r0, #0
   134b0:	bge	13554 <strspn@plt+0x20d4>
   134b4:	b	1356c <strspn@plt+0x20ec>
   134b8:	mov	r0, r9
   134bc:	bl	16128 <strspn@plt+0x4ca8>
   134c0:	mov	r6, r0
   134c4:	ldrb	r5, [r0]
   134c8:	cmp	r5, #0
   134cc:	beq	13504 <strspn@plt+0x2084>
   134d0:	add	r4, r6, #1
   134d4:	movw	r7, #29512	; 0x7348
   134d8:	movt	r7, #1
   134dc:	uxtb	r1, r5
   134e0:	mov	r0, r7
   134e4:	mov	r2, #27
   134e8:	bl	113cc <memchr@plt>
   134ec:	cmp	r0, #0
   134f0:	subne	r0, r5, #32
   134f4:	strbne	r0, [r4, #-1]
   134f8:	ldrb	r5, [r4], #1
   134fc:	cmp	r5, #0
   13500:	bne	134dc <strspn@plt+0x205c>
   13504:	add	r1, sp, #4
   13508:	mov	r0, r6
   1350c:	bl	15664 <strspn@plt+0x41e4>
   13510:	cmp	r0, #0
   13514:	beq	13540 <strspn@plt+0x20c0>
   13518:	ldrb	r0, [r6]
   1351c:	cmp	r0, #83	; 0x53
   13520:	bne	13538 <strspn@plt+0x20b8>
   13524:	ldrb	r0, [r6, #1]
   13528:	cmp	r0, #73	; 0x49
   1352c:	ldrbeq	r0, [r6, #2]
   13530:	cmpeq	r0, #71	; 0x47
   13534:	beq	135ac <strspn@plt+0x212c>
   13538:	mvn	r0, #0
   1353c:	str	r0, [sp, #4]
   13540:	mov	r0, r6
   13544:	bl	139f0 <strspn@plt+0x2570>
   13548:	ldr	r0, [sp, #4]
   1354c:	cmp	r0, #0
   13550:	blt	1356c <strspn@plt+0x20ec>
   13554:	mov	r1, r8
   13558:	bl	157ec <strspn@plt+0x436c>
   1355c:	cmp	r0, #0
   13560:	ldreq	r0, [sp, #4]
   13564:	subeq	sp, fp, #24
   13568:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1356c:	movw	r1, #28588	; 0x6fac
   13570:	movt	r1, #1
   13574:	mov	r0, #0
   13578:	mov	r2, #5
   1357c:	bl	1121c <dcgettext@plt>
   13580:	mov	r5, r0
   13584:	mov	r0, r9
   13588:	bl	15250 <strspn@plt+0x3dd0>
   1358c:	mov	r3, r0
   13590:	mov	r0, #0
   13594:	mov	r1, #0
   13598:	mov	r2, r5
   1359c:	bl	112c4 <error@plt>
   135a0:	mvn	r0, #0
   135a4:	sub	sp, fp, #24
   135a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   135ac:	add	r0, r6, #3
   135b0:	add	r1, sp, #4
   135b4:	bl	15664 <strspn@plt+0x41e4>
   135b8:	cmp	r0, #0
   135bc:	bne	13538 <strspn@plt+0x20b8>
   135c0:	b	13540 <strspn@plt+0x20c0>
   135c4:	mov	r1, r0
   135c8:	sub	r2, r0, #65	; 0x41
   135cc:	mov	r0, #1
   135d0:	cmp	r2, #26
   135d4:	subcs	r2, r1, #97	; 0x61
   135d8:	cmpcs	r2, #26
   135dc:	bcs	135e4 <strspn@plt+0x2164>
   135e0:	bx	lr
   135e4:	sub	r1, r1, #48	; 0x30
   135e8:	cmp	r1, #10
   135ec:	movcs	r0, #0
   135f0:	bx	lr
   135f4:	mov	r1, r0
   135f8:	sub	r2, r0, #65	; 0x41
   135fc:	mov	r0, #1
   13600:	cmp	r2, #26
   13604:	subcs	r1, r1, #97	; 0x61
   13608:	cmpcs	r1, #26
   1360c:	movcs	r0, #0
   13610:	bx	lr
   13614:	mov	r1, #0
   13618:	cmp	r0, #128	; 0x80
   1361c:	movwcc	r1, #1
   13620:	mov	r0, r1
   13624:	bx	lr
   13628:	sub	r1, r0, #9
   1362c:	clz	r1, r1
   13630:	lsr	r1, r1, #5
   13634:	sub	r0, r0, #32
   13638:	clz	r0, r0
   1363c:	lsr	r0, r0, #5
   13640:	orr	r0, r0, r1
   13644:	bx	lr
   13648:	mov	r1, r0
   1364c:	mov	r0, #1
   13650:	cmp	r1, #32
   13654:	bxcc	lr
   13658:	cmp	r1, #127	; 0x7f
   1365c:	movne	r0, #0
   13660:	bx	lr
   13664:	sub	r1, r0, #48	; 0x30
   13668:	mov	r0, #0
   1366c:	cmp	r1, #10
   13670:	movwcc	r0, #1
   13674:	bx	lr
   13678:	sub	r1, r0, #33	; 0x21
   1367c:	mov	r0, #0
   13680:	cmp	r1, #94	; 0x5e
   13684:	movwcc	r0, #1
   13688:	bx	lr
   1368c:	sub	r1, r0, #97	; 0x61
   13690:	mov	r0, #0
   13694:	cmp	r1, #26
   13698:	movwcc	r0, #1
   1369c:	bx	lr
   136a0:	sub	r1, r0, #32
   136a4:	mov	r0, #0
   136a8:	cmp	r1, #95	; 0x5f
   136ac:	movwcc	r0, #1
   136b0:	bx	lr
   136b4:	sub	r1, r0, #33	; 0x21
   136b8:	cmp	r1, #93	; 0x5d
   136bc:	bhi	13848 <strspn@plt+0x23c8>
   136c0:	mov	r0, #1
   136c4:	add	r2, pc, #0
   136c8:	ldr	pc, [r2, r1, lsl #2]
   136cc:	andeq	r3, r1, r4, asr #16
   136d0:	andeq	r3, r1, r4, asr #16
   136d4:	andeq	r3, r1, r4, asr #16
   136d8:	andeq	r3, r1, r4, asr #16
   136dc:	andeq	r3, r1, r4, asr #16
   136e0:	andeq	r3, r1, r4, asr #16
   136e4:	andeq	r3, r1, r4, asr #16
   136e8:	andeq	r3, r1, r4, asr #16
   136ec:	andeq	r3, r1, r4, asr #16
   136f0:	andeq	r3, r1, r4, asr #16
   136f4:	andeq	r3, r1, r4, asr #16
   136f8:	andeq	r3, r1, r4, asr #16
   136fc:	andeq	r3, r1, r4, asr #16
   13700:	andeq	r3, r1, r4, asr #16
   13704:	andeq	r3, r1, r4, asr #16
   13708:	andeq	r3, r1, r8, asr #16
   1370c:	andeq	r3, r1, r8, asr #16
   13710:	andeq	r3, r1, r8, asr #16
   13714:	andeq	r3, r1, r8, asr #16
   13718:	andeq	r3, r1, r8, asr #16
   1371c:	andeq	r3, r1, r8, asr #16
   13720:	andeq	r3, r1, r8, asr #16
   13724:	andeq	r3, r1, r8, asr #16
   13728:	andeq	r3, r1, r8, asr #16
   1372c:	andeq	r3, r1, r8, asr #16
   13730:	andeq	r3, r1, r4, asr #16
   13734:	andeq	r3, r1, r4, asr #16
   13738:	andeq	r3, r1, r4, asr #16
   1373c:	andeq	r3, r1, r4, asr #16
   13740:	andeq	r3, r1, r4, asr #16
   13744:	andeq	r3, r1, r4, asr #16
   13748:	andeq	r3, r1, r4, asr #16
   1374c:	andeq	r3, r1, r8, asr #16
   13750:	andeq	r3, r1, r8, asr #16
   13754:	andeq	r3, r1, r8, asr #16
   13758:	andeq	r3, r1, r8, asr #16
   1375c:	andeq	r3, r1, r8, asr #16
   13760:	andeq	r3, r1, r8, asr #16
   13764:	andeq	r3, r1, r8, asr #16
   13768:	andeq	r3, r1, r8, asr #16
   1376c:	andeq	r3, r1, r8, asr #16
   13770:	andeq	r3, r1, r8, asr #16
   13774:	andeq	r3, r1, r8, asr #16
   13778:	andeq	r3, r1, r8, asr #16
   1377c:	andeq	r3, r1, r8, asr #16
   13780:	andeq	r3, r1, r8, asr #16
   13784:	andeq	r3, r1, r8, asr #16
   13788:	andeq	r3, r1, r8, asr #16
   1378c:	andeq	r3, r1, r8, asr #16
   13790:	andeq	r3, r1, r8, asr #16
   13794:	andeq	r3, r1, r8, asr #16
   13798:	andeq	r3, r1, r8, asr #16
   1379c:	andeq	r3, r1, r8, asr #16
   137a0:	andeq	r3, r1, r8, asr #16
   137a4:	andeq	r3, r1, r8, asr #16
   137a8:	andeq	r3, r1, r8, asr #16
   137ac:	andeq	r3, r1, r8, asr #16
   137b0:	andeq	r3, r1, r8, asr #16
   137b4:	andeq	r3, r1, r4, asr #16
   137b8:	andeq	r3, r1, r4, asr #16
   137bc:	andeq	r3, r1, r4, asr #16
   137c0:	andeq	r3, r1, r4, asr #16
   137c4:	andeq	r3, r1, r4, asr #16
   137c8:	andeq	r3, r1, r4, asr #16
   137cc:	andeq	r3, r1, r8, asr #16
   137d0:	andeq	r3, r1, r8, asr #16
   137d4:	andeq	r3, r1, r8, asr #16
   137d8:	andeq	r3, r1, r8, asr #16
   137dc:	andeq	r3, r1, r8, asr #16
   137e0:	andeq	r3, r1, r8, asr #16
   137e4:	andeq	r3, r1, r8, asr #16
   137e8:	andeq	r3, r1, r8, asr #16
   137ec:	andeq	r3, r1, r8, asr #16
   137f0:	andeq	r3, r1, r8, asr #16
   137f4:	andeq	r3, r1, r8, asr #16
   137f8:	andeq	r3, r1, r8, asr #16
   137fc:	andeq	r3, r1, r8, asr #16
   13800:	andeq	r3, r1, r8, asr #16
   13804:	andeq	r3, r1, r8, asr #16
   13808:	andeq	r3, r1, r8, asr #16
   1380c:	andeq	r3, r1, r8, asr #16
   13810:	andeq	r3, r1, r8, asr #16
   13814:	andeq	r3, r1, r8, asr #16
   13818:	andeq	r3, r1, r8, asr #16
   1381c:	andeq	r3, r1, r8, asr #16
   13820:	andeq	r3, r1, r8, asr #16
   13824:	andeq	r3, r1, r8, asr #16
   13828:	andeq	r3, r1, r8, asr #16
   1382c:	andeq	r3, r1, r8, asr #16
   13830:	andeq	r3, r1, r8, asr #16
   13834:	andeq	r3, r1, r4, asr #16
   13838:	andeq	r3, r1, r4, asr #16
   1383c:	andeq	r3, r1, r4, asr #16
   13840:	andeq	r3, r1, r4, asr #16
   13844:	bx	lr
   13848:	mov	r0, #0
   1384c:	bx	lr
   13850:	sub	r0, r0, #9
   13854:	cmp	r0, #23
   13858:	movhi	r0, #0
   1385c:	bxhi	lr
   13860:	bic	r0, r0, #-16777216	; 0xff000000
   13864:	movw	r1, #31
   13868:	movt	r1, #128	; 0x80
   1386c:	mov	r2, #1
   13870:	and	r0, r2, r1, lsr r0
   13874:	bx	lr
   13878:	sub	r1, r0, #65	; 0x41
   1387c:	mov	r0, #0
   13880:	cmp	r1, #26
   13884:	movwcc	r0, #1
   13888:	bx	lr
   1388c:	mov	r1, r0
   13890:	sub	r2, r0, #48	; 0x30
   13894:	mov	r0, #1
   13898:	cmp	r2, #22
   1389c:	bhi	138b4 <strspn@plt+0x2434>
   138a0:	mov	ip, #1
   138a4:	movw	r3, #1023	; 0x3ff
   138a8:	movt	r3, #126	; 0x7e
   138ac:	tst	r3, ip, lsl r2
   138b0:	bxne	lr
   138b4:	sub	r1, r1, #97	; 0x61
   138b8:	cmp	r1, #6
   138bc:	movcs	r0, #0
   138c0:	bxcs	lr
   138c4:	bx	lr
   138c8:	sub	r1, r0, #65	; 0x41
   138cc:	cmp	r1, #26
   138d0:	addcc	r0, r0, #32
   138d4:	bx	lr
   138d8:	sub	r1, r0, #97	; 0x61
   138dc:	cmp	r1, #26
   138e0:	subcc	r0, r0, #32
   138e4:	bx	lr
   138e8:	movw	r1, #33884	; 0x845c
   138ec:	movt	r1, #2
   138f0:	str	r0, [r1]
   138f4:	bx	lr
   138f8:	movw	r1, #33888	; 0x8460
   138fc:	movt	r1, #2
   13900:	strb	r0, [r1]
   13904:	bx	lr
   13908:	push	{r4, r5, r6, sl, fp, lr}
   1390c:	add	fp, sp, #16
   13910:	sub	sp, sp, #8
   13914:	movw	r0, #33580	; 0x832c
   13918:	movt	r0, #2
   1391c:	ldr	r0, [r0]
   13920:	bl	16264 <strspn@plt+0x4de4>
   13924:	cmp	r0, #0
   13928:	beq	13950 <strspn@plt+0x24d0>
   1392c:	movw	r0, #33888	; 0x8460
   13930:	movt	r0, #2
   13934:	ldrb	r0, [r0]
   13938:	cmp	r0, #0
   1393c:	beq	13970 <strspn@plt+0x24f0>
   13940:	bl	1136c <__errno_location@plt>
   13944:	ldr	r0, [r0]
   13948:	cmp	r0, #32
   1394c:	bne	13970 <strspn@plt+0x24f0>
   13950:	movw	r0, #33576	; 0x8328
   13954:	movt	r0, #2
   13958:	ldr	r0, [r0]
   1395c:	bl	16264 <strspn@plt+0x4de4>
   13960:	cmp	r0, #0
   13964:	subeq	sp, fp, #16
   13968:	popeq	{r4, r5, r6, sl, fp, pc}
   1396c:	b	139e0 <strspn@plt+0x2560>
   13970:	movw	r1, #29554	; 0x7372
   13974:	movt	r1, #1
   13978:	mov	r0, #0
   1397c:	mov	r2, #5
   13980:	bl	1121c <dcgettext@plt>
   13984:	mov	r4, r0
   13988:	movw	r0, #33884	; 0x845c
   1398c:	movt	r0, #2
   13990:	ldr	r6, [r0]
   13994:	bl	1136c <__errno_location@plt>
   13998:	ldr	r5, [r0]
   1399c:	cmp	r6, #0
   139a0:	bne	139bc <strspn@plt+0x253c>
   139a4:	movw	r2, #29570	; 0x7382
   139a8:	movt	r2, #1
   139ac:	mov	r0, #0
   139b0:	mov	r1, r5
   139b4:	mov	r3, r4
   139b8:	b	139dc <strspn@plt+0x255c>
   139bc:	mov	r0, r6
   139c0:	bl	15100 <strspn@plt+0x3c80>
   139c4:	mov	r3, r0
   139c8:	str	r4, [sp]
   139cc:	movw	r2, #29566	; 0x737e
   139d0:	movt	r2, #1
   139d4:	mov	r0, #0
   139d8:	mov	r1, r5
   139dc:	bl	112c4 <error@plt>
   139e0:	movw	r0, #33060	; 0x8124
   139e4:	movt	r0, #2
   139e8:	ldr	r0, [r0]
   139ec:	bl	111e0 <_exit@plt>
   139f0:	push	{r4, r5, r6, sl, fp, lr}
   139f4:	add	fp, sp, #16
   139f8:	mov	r4, r0
   139fc:	bl	1136c <__errno_location@plt>
   13a00:	mov	r5, r0
   13a04:	ldr	r6, [r0]
   13a08:	mov	r0, r4
   13a0c:	bl	111d4 <free@plt>
   13a10:	str	r6, [r5]
   13a14:	pop	{r4, r5, r6, sl, fp, pc}
   13a18:	push	{r4, r5, fp, lr}
   13a1c:	add	fp, sp, #8
   13a20:	cmp	r0, #0
   13a24:	beq	13ab8 <strspn@plt+0x2638>
   13a28:	mov	r4, r0
   13a2c:	mov	r1, #47	; 0x2f
   13a30:	bl	11420 <strrchr@plt>
   13a34:	cmp	r0, #0
   13a38:	mov	r5, r4
   13a3c:	addne	r5, r0, #1
   13a40:	sub	r0, r5, r4
   13a44:	cmp	r0, #7
   13a48:	blt	13a9c <strspn@plt+0x261c>
   13a4c:	sub	r0, r5, #7
   13a50:	movw	r1, #29629	; 0x73bd
   13a54:	movt	r1, #1
   13a58:	mov	r2, #7
   13a5c:	bl	11468 <strncmp@plt>
   13a60:	cmp	r0, #0
   13a64:	bne	13a9c <strspn@plt+0x261c>
   13a68:	movw	r1, #29637	; 0x73c5
   13a6c:	movt	r1, #1
   13a70:	mov	r0, r5
   13a74:	mov	r2, #3
   13a78:	bl	11468 <strncmp@plt>
   13a7c:	cmp	r0, #0
   13a80:	beq	13a8c <strspn@plt+0x260c>
   13a84:	mov	r4, r5
   13a88:	b	13a9c <strspn@plt+0x261c>
   13a8c:	add	r4, r5, #3
   13a90:	movw	r0, #33552	; 0x8310
   13a94:	movt	r0, #2
   13a98:	str	r4, [r0]
   13a9c:	movw	r0, #33560	; 0x8318
   13aa0:	movt	r0, #2
   13aa4:	str	r4, [r0]
   13aa8:	movw	r0, #33892	; 0x8464
   13aac:	movt	r0, #2
   13ab0:	str	r4, [r0]
   13ab4:	pop	{r4, r5, fp, pc}
   13ab8:	movw	r0, #33576	; 0x8328
   13abc:	movt	r0, #2
   13ac0:	ldr	r3, [r0]
   13ac4:	movw	r0, #29573	; 0x7385
   13ac8:	movt	r0, #1
   13acc:	mov	r1, #55	; 0x37
   13ad0:	mov	r2, #1
   13ad4:	bl	11270 <fwrite@plt>
   13ad8:	bl	11474 <abort@plt>
   13adc:	push	{r4, r5, r6, sl, fp, lr}
   13ae0:	add	fp, sp, #16
   13ae4:	mov	r4, r0
   13ae8:	movw	r0, #33896	; 0x8468
   13aec:	movt	r0, #2
   13af0:	cmp	r4, #0
   13af4:	moveq	r4, r0
   13af8:	bl	1136c <__errno_location@plt>
   13afc:	mov	r5, r0
   13b00:	ldr	r6, [r0]
   13b04:	mov	r0, r4
   13b08:	mov	r1, #48	; 0x30
   13b0c:	bl	1608c <strspn@plt+0x4c0c>
   13b10:	str	r6, [r5]
   13b14:	pop	{r4, r5, r6, sl, fp, pc}
   13b18:	movw	r1, #33896	; 0x8468
   13b1c:	movt	r1, #2
   13b20:	cmp	r0, #0
   13b24:	movne	r1, r0
   13b28:	ldr	r0, [r1]
   13b2c:	bx	lr
   13b30:	movw	r2, #33896	; 0x8468
   13b34:	movt	r2, #2
   13b38:	cmp	r0, #0
   13b3c:	movne	r2, r0
   13b40:	str	r1, [r2]
   13b44:	bx	lr
   13b48:	movw	r3, #33896	; 0x8468
   13b4c:	movt	r3, #2
   13b50:	cmp	r0, #0
   13b54:	movne	r3, r0
   13b58:	ubfx	r0, r1, #5, #3
   13b5c:	add	r0, r3, r0, lsl #2
   13b60:	ldr	r3, [r0, #8]
   13b64:	and	r1, r1, #31
   13b68:	eor	r2, r2, r3, lsr r1
   13b6c:	and	r2, r2, #1
   13b70:	eor	r2, r3, r2, lsl r1
   13b74:	str	r2, [r0, #8]
   13b78:	mov	r0, #1
   13b7c:	and	r0, r0, r3, lsr r1
   13b80:	bx	lr
   13b84:	movw	r2, #33896	; 0x8468
   13b88:	movt	r2, #2
   13b8c:	cmp	r0, #0
   13b90:	movne	r2, r0
   13b94:	ldr	r0, [r2, #4]
   13b98:	str	r1, [r2, #4]
   13b9c:	bx	lr
   13ba0:	movw	r3, #33896	; 0x8468
   13ba4:	movt	r3, #2
   13ba8:	cmp	r0, #0
   13bac:	movne	r3, r0
   13bb0:	mov	r0, #10
   13bb4:	str	r0, [r3]
   13bb8:	cmp	r1, #0
   13bbc:	cmpne	r2, #0
   13bc0:	bne	13bd0 <strspn@plt+0x2750>
   13bc4:	push	{fp, lr}
   13bc8:	mov	fp, sp
   13bcc:	bl	11474 <abort@plt>
   13bd0:	str	r1, [r3, #40]	; 0x28
   13bd4:	str	r2, [r3, #44]	; 0x2c
   13bd8:	bx	lr
   13bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13be0:	add	fp, sp, #28
   13be4:	sub	sp, sp, #20
   13be8:	mov	r8, r3
   13bec:	mov	r9, r2
   13bf0:	mov	sl, r1
   13bf4:	mov	r7, r0
   13bf8:	ldr	r0, [fp, #8]
   13bfc:	movw	r5, #33896	; 0x8468
   13c00:	movt	r5, #2
   13c04:	cmp	r0, #0
   13c08:	movne	r5, r0
   13c0c:	bl	1136c <__errno_location@plt>
   13c10:	mov	r4, r0
   13c14:	ldm	r5, {r0, r1}
   13c18:	ldr	r2, [r5, #40]	; 0x28
   13c1c:	ldr	r3, [r5, #44]	; 0x2c
   13c20:	ldr	r6, [r4]
   13c24:	add	r5, r5, #8
   13c28:	stm	sp, {r0, r1, r5}
   13c2c:	str	r2, [sp, #12]
   13c30:	str	r3, [sp, #16]
   13c34:	mov	r0, r7
   13c38:	mov	r1, sl
   13c3c:	mov	r2, r9
   13c40:	mov	r3, r8
   13c44:	bl	13c54 <strspn@plt+0x27d4>
   13c48:	str	r6, [r4]
   13c4c:	sub	sp, fp, #28
   13c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c58:	add	fp, sp, #28
   13c5c:	sub	sp, sp, #156	; 0x9c
   13c60:	mov	r9, r3
   13c64:	str	r2, [fp, #-84]	; 0xffffffac
   13c68:	mov	r6, r1
   13c6c:	mov	r7, r0
   13c70:	ldr	r0, [fp, #12]
   13c74:	and	r1, r0, #4
   13c78:	str	r1, [sp, #32]
   13c7c:	and	r1, r0, #1
   13c80:	str	r1, [sp, #36]	; 0x24
   13c84:	ubfx	sl, r0, #1, #1
   13c88:	bl	11288 <__ctype_get_mb_cur_max@plt>
   13c8c:	str	r0, [sp, #40]	; 0x28
   13c90:	ldr	r0, [fp, #24]
   13c94:	str	r0, [sp, #76]	; 0x4c
   13c98:	ldr	r0, [fp, #20]
   13c9c:	str	r0, [sp, #68]	; 0x44
   13ca0:	ldr	r0, [fp, #8]
   13ca4:	str	r0, [fp, #-60]	; 0xffffffc4
   13ca8:	mov	r0, #0
   13cac:	str	r0, [sp, #72]	; 0x48
   13cb0:	mov	r0, #0
   13cb4:	str	r0, [sp, #92]	; 0x5c
   13cb8:	mov	r0, #0
   13cbc:	str	r0, [fp, #-72]	; 0xffffffb8
   13cc0:	mov	r0, #0
   13cc4:	mov	r1, #0
   13cc8:	str	r1, [fp, #-56]	; 0xffffffc8
   13ccc:	mov	r1, #0
   13cd0:	str	r1, [sp, #56]	; 0x38
   13cd4:	mov	r5, #1
   13cd8:	str	r7, [sp, #80]	; 0x50
   13cdc:	mov	r4, r6
   13ce0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13ce4:	cmp	r6, #10
   13ce8:	bhi	14c50 <strspn@plt+0x37d0>
   13cec:	add	r1, pc, #20
   13cf0:	mov	r8, #0
   13cf4:	mov	r2, #1
   13cf8:	mov	r3, #0
   13cfc:	ldr	ip, [fp, #-84]	; 0xffffffac
   13d00:	mov	lr, r9
   13d04:	ldr	pc, [r1, r6, lsl #2]
   13d08:	andeq	r3, r1, r0, ror #27
   13d0c:	andeq	r3, r1, r0, lsl lr
   13d10:	ldrdeq	r3, [r1], -r0
   13d14:	andeq	r3, r1, r8, asr #27
   13d18:	andeq	r3, r1, r4, lsl #28
   13d1c:	andeq	r3, r1, r4, ror #28
   13d20:	strdeq	r3, [r1], -r0
   13d24:	andeq	r3, r1, r0, asr #29
   13d28:	andeq	r3, r1, r4, lsr sp
   13d2c:	andeq	r3, r1, r4, lsr sp
   13d30:	andeq	r3, r1, ip, asr sp
   13d34:	movw	r0, #29719	; 0x7417
   13d38:	movt	r0, #1
   13d3c:	mov	r1, r6
   13d40:	bl	1525c <strspn@plt+0x3ddc>
   13d44:	str	r0, [sp, #68]	; 0x44
   13d48:	movw	r0, #27752	; 0x6c68
   13d4c:	movt	r0, #1
   13d50:	mov	r1, r6
   13d54:	bl	1525c <strspn@plt+0x3ddc>
   13d58:	str	r0, [sp, #76]	; 0x4c
   13d5c:	mov	r8, #0
   13d60:	tst	sl, #1
   13d64:	bne	13d9c <strspn@plt+0x291c>
   13d68:	ldr	r0, [sp, #68]	; 0x44
   13d6c:	ldrb	r0, [r0]
   13d70:	cmp	r0, #0
   13d74:	beq	13d9c <strspn@plt+0x291c>
   13d78:	ldr	r1, [sp, #68]	; 0x44
   13d7c:	add	r1, r1, #1
   13d80:	mov	r8, #0
   13d84:	cmp	r8, r4
   13d88:	strbcc	r0, [r7, r8]
   13d8c:	ldrb	r0, [r1, r8]
   13d90:	add	r8, r8, #1
   13d94:	cmp	r0, #0
   13d98:	bne	13d84 <strspn@plt+0x2904>
   13d9c:	ldr	r6, [sp, #76]	; 0x4c
   13da0:	mov	r0, r6
   13da4:	bl	1133c <strlen@plt>
   13da8:	str	r0, [fp, #-72]	; 0xffffffb8
   13dac:	str	r6, [sp, #92]	; 0x5c
   13db0:	mov	r2, #1
   13db4:	mov	r3, sl
   13db8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13dbc:	mov	lr, r9
   13dc0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13dc4:	b	13ec0 <strspn@plt+0x2a40>
   13dc8:	mov	r0, #1
   13dcc:	b	13e10 <strspn@plt+0x2990>
   13dd0:	tst	sl, #1
   13dd4:	bne	13e10 <strspn@plt+0x2990>
   13dd8:	mov	r2, r0
   13ddc:	b	13e38 <strspn@plt+0x29b8>
   13de0:	mov	r6, #0
   13de4:	mov	r8, #0
   13de8:	mov	r2, r0
   13dec:	b	13ebc <strspn@plt+0x2a3c>
   13df0:	mov	r0, #1
   13df4:	str	r0, [fp, #-72]	; 0xffffffb8
   13df8:	mov	r8, #0
   13dfc:	mov	r6, #5
   13e00:	b	13e7c <strspn@plt+0x29fc>
   13e04:	mov	r2, #1
   13e08:	tst	sl, #1
   13e0c:	beq	13e38 <strspn@plt+0x29b8>
   13e10:	mov	r1, #1
   13e14:	str	r1, [fp, #-72]	; 0xffffffb8
   13e18:	mov	r8, #0
   13e1c:	mov	r6, #2
   13e20:	movw	r1, #27752	; 0x6c68
   13e24:	movt	r1, #1
   13e28:	str	r1, [sp, #92]	; 0x5c
   13e2c:	mov	r2, r0
   13e30:	mov	r3, #1
   13e34:	b	13ec0 <strspn@plt+0x2a40>
   13e38:	mov	r8, #1
   13e3c:	mov	r6, #2
   13e40:	cmp	r4, #0
   13e44:	movne	r0, #39	; 0x27
   13e48:	strbne	r0, [r7]
   13e4c:	movw	r0, #27752	; 0x6c68
   13e50:	movt	r0, #1
   13e54:	str	r0, [sp, #92]	; 0x5c
   13e58:	mov	r0, #1
   13e5c:	str	r0, [fp, #-72]	; 0xffffffb8
   13e60:	b	13ebc <strspn@plt+0x2a3c>
   13e64:	mov	r6, #5
   13e68:	tst	sl, #1
   13e6c:	beq	13e94 <strspn@plt+0x2a14>
   13e70:	mov	r0, #1
   13e74:	str	r0, [fp, #-72]	; 0xffffffb8
   13e78:	mov	r8, #0
   13e7c:	movw	r0, #29717	; 0x7415
   13e80:	movt	r0, #1
   13e84:	str	r0, [sp, #92]	; 0x5c
   13e88:	mov	r2, #1
   13e8c:	mov	r3, #1
   13e90:	b	13ec0 <strspn@plt+0x2a40>
   13e94:	cmp	r4, #0
   13e98:	movne	r0, #34	; 0x22
   13e9c:	strbne	r0, [r7]
   13ea0:	mov	r8, #1
   13ea4:	movw	r0, #29717	; 0x7415
   13ea8:	movt	r0, #1
   13eac:	str	r0, [sp, #92]	; 0x5c
   13eb0:	mov	r0, #1
   13eb4:	str	r0, [fp, #-72]	; 0xffffffb8
   13eb8:	mov	r2, #1
   13ebc:	mov	r3, #0
   13ec0:	ldr	r0, [fp, #16]
   13ec4:	cmp	r0, #0
   13ec8:	movwne	r0, #1
   13ecc:	and	r0, r0, r3
   13ed0:	str	r0, [fp, #-88]	; 0xffffffa8
   13ed4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13ed8:	cmp	r0, #0
   13edc:	movwne	r0, #1
   13ee0:	and	r1, r0, r3
   13ee4:	and	r1, r2, r1
   13ee8:	str	r1, [sp, #48]	; 0x30
   13eec:	str	r6, [fp, #-60]	; 0xffffffc4
   13ef0:	subs	r6, r6, #2
   13ef4:	clz	r1, r6
   13ef8:	lsr	r1, r1, #5
   13efc:	and	r1, r1, r3
   13f00:	str	r1, [sp, #60]	; 0x3c
   13f04:	str	r6, [fp, #-80]	; 0xffffffb0
   13f08:	mov	r1, r6
   13f0c:	movwne	r1, #1
   13f10:	str	r3, [fp, #-76]	; 0xffffffb4
   13f14:	eor	r3, r3, #1
   13f18:	str	r3, [sp, #88]	; 0x58
   13f1c:	orr	r3, r1, r3
   13f20:	str	r3, [sp, #64]	; 0x40
   13f24:	and	r1, r1, r2
   13f28:	str	r1, [fp, #-68]	; 0xffffffbc
   13f2c:	and	r0, r0, r1
   13f30:	str	r0, [fp, #-64]	; 0xffffffc0
   13f34:	str	r2, [sp, #84]	; 0x54
   13f38:	eor	r0, r2, #1
   13f3c:	str	r0, [sp, #52]	; 0x34
   13f40:	mov	r6, #0
   13f44:	cmn	lr, #1
   13f48:	beq	13f58 <strspn@plt+0x2ad8>
   13f4c:	cmp	r6, lr
   13f50:	bne	13f64 <strspn@plt+0x2ae4>
   13f54:	b	14ad0 <strspn@plt+0x3650>
   13f58:	ldrb	r0, [ip, r6]
   13f5c:	cmp	r0, #0
   13f60:	beq	14ad0 <strspn@plt+0x3650>
   13f64:	str	r5, [fp, #-48]	; 0xffffffd0
   13f68:	mov	sl, #0
   13f6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13f70:	cmp	r0, #0
   13f74:	beq	13fa8 <strspn@plt+0x2b28>
   13f78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13f7c:	add	r5, r6, r0
   13f80:	cmp	r0, #2
   13f84:	bcc	13fa0 <strspn@plt+0x2b20>
   13f88:	cmn	lr, #1
   13f8c:	bne	13fa0 <strspn@plt+0x2b20>
   13f90:	mov	r0, ip
   13f94:	bl	1133c <strlen@plt>
   13f98:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f9c:	mov	lr, r0
   13fa0:	cmp	r5, lr
   13fa4:	bls	13fb4 <strspn@plt+0x2b34>
   13fa8:	mov	r0, #0
   13fac:	str	r0, [fp, #-52]	; 0xffffffcc
   13fb0:	b	14000 <strspn@plt+0x2b80>
   13fb4:	mov	r5, r4
   13fb8:	mov	r4, lr
   13fbc:	add	r0, ip, r6
   13fc0:	ldr	r1, [sp, #92]	; 0x5c
   13fc4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13fc8:	bl	11210 <memcmp@plt>
   13fcc:	cmp	r0, #0
   13fd0:	mov	r1, r0
   13fd4:	movwne	r1, #1
   13fd8:	ldr	r2, [sp, #88]	; 0x58
   13fdc:	orr	r1, r1, r2
   13fe0:	tst	r1, #1
   13fe4:	beq	14b94 <strspn@plt+0x3714>
   13fe8:	clz	r0, r0
   13fec:	lsr	r0, r0, #5
   13ff0:	str	r0, [fp, #-52]	; 0xffffffcc
   13ff4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ff8:	mov	lr, r4
   13ffc:	mov	r4, r5
   14000:	ldrb	r5, [ip, r6]
   14004:	cmp	r5, #126	; 0x7e
   14008:	bhi	143c4 <strspn@plt+0x2f44>
   1400c:	mov	r9, #1
   14010:	mov	r2, #110	; 0x6e
   14014:	mov	r0, #97	; 0x61
   14018:	add	r3, pc, #4
   1401c:	mov	r1, #0
   14020:	ldr	pc, [r3, r5, lsl #2]
   14024:			; <UNDEFINED> instruction: 0x000142bc
   14028:	andeq	r4, r1, r4, asr #7
   1402c:	andeq	r4, r1, r4, asr #7
   14030:	andeq	r4, r1, r4, asr #7
   14034:	andeq	r4, r1, r4, asr #7
   14038:	andeq	r4, r1, r4, asr #7
   1403c:	andeq	r4, r1, r4, asr #7
   14040:	andeq	r4, r1, r8, lsl #9
   14044:	muleq	r1, ip, r2
   14048:	muleq	r1, r4, r2
   1404c:	andeq	r4, r1, r8, lsr #5
   14050:	andeq	r4, r1, ip, lsr #6
   14054:	andeq	r4, r1, ip, lsl #5
   14058:	andeq	r4, r1, r4, lsr #5
   1405c:	andeq	r4, r1, r4, asr #7
   14060:	andeq	r4, r1, r4, asr #7
   14064:	andeq	r4, r1, r4, asr #7
   14068:	andeq	r4, r1, r4, asr #7
   1406c:	andeq	r4, r1, r4, asr #7
   14070:	andeq	r4, r1, r4, asr #7
   14074:	andeq	r4, r1, r4, asr #7
   14078:	andeq	r4, r1, r4, asr #7
   1407c:	andeq	r4, r1, r4, asr #7
   14080:	andeq	r4, r1, r4, asr #7
   14084:	andeq	r4, r1, r4, asr #7
   14088:	andeq	r4, r1, r4, asr #7
   1408c:	andeq	r4, r1, r4, asr #7
   14090:	andeq	r4, r1, r4, asr #7
   14094:	andeq	r4, r1, r4, asr #7
   14098:	andeq	r4, r1, r4, asr #7
   1409c:	andeq	r4, r1, r4, asr #7
   140a0:	andeq	r4, r1, r4, asr #7
   140a4:	andeq	r4, r1, r8, lsr r4
   140a8:	andeq	r4, r1, ip, lsr r4
   140ac:	andeq	r4, r1, ip, lsr r4
   140b0:	andeq	r4, r1, r4, lsr r2
   140b4:	andeq	r4, r1, ip, lsr r4
   140b8:	andeq	r4, r1, r0, lsr #4
   140bc:	andeq	r4, r1, ip, lsr r4
   140c0:	andeq	r4, r1, r4, lsr r3
   140c4:	andeq	r4, r1, ip, lsr r4
   140c8:	andeq	r4, r1, ip, lsr r4
   140cc:	andeq	r4, r1, ip, lsr r4
   140d0:	andeq	r4, r1, r0, lsr #4
   140d4:	andeq	r4, r1, r0, lsr #4
   140d8:	andeq	r4, r1, r0, lsr #4
   140dc:	andeq	r4, r1, r0, lsr #4
   140e0:	andeq	r4, r1, r0, lsr #4
   140e4:	andeq	r4, r1, r0, lsr #4
   140e8:	andeq	r4, r1, r0, lsr #4
   140ec:	andeq	r4, r1, r0, lsr #4
   140f0:	andeq	r4, r1, r0, lsr #4
   140f4:	andeq	r4, r1, r0, lsr #4
   140f8:	andeq	r4, r1, r0, lsr #4
   140fc:	andeq	r4, r1, r0, lsr #4
   14100:	andeq	r4, r1, r0, lsr #4
   14104:	andeq	r4, r1, r0, lsr #4
   14108:	andeq	r4, r1, r0, lsr #4
   1410c:	andeq	r4, r1, r0, lsr #4
   14110:	andeq	r4, r1, ip, lsr r4
   14114:	andeq	r4, r1, ip, lsr r4
   14118:	andeq	r4, r1, ip, lsr r4
   1411c:	andeq	r4, r1, ip, lsr r4
   14120:	strdeq	r4, [r1], -ip
   14124:	andeq	r4, r1, r4, asr #7
   14128:	andeq	r4, r1, r0, lsr #4
   1412c:	andeq	r4, r1, r0, lsr #4
   14130:	andeq	r4, r1, r0, lsr #4
   14134:	andeq	r4, r1, r0, lsr #4
   14138:	andeq	r4, r1, r0, lsr #4
   1413c:	andeq	r4, r1, r0, lsr #4
   14140:	andeq	r4, r1, r0, lsr #4
   14144:	andeq	r4, r1, r0, lsr #4
   14148:	andeq	r4, r1, r0, lsr #4
   1414c:	andeq	r4, r1, r0, lsr #4
   14150:	andeq	r4, r1, r0, lsr #4
   14154:	andeq	r4, r1, r0, lsr #4
   14158:	andeq	r4, r1, r0, lsr #4
   1415c:	andeq	r4, r1, r0, lsr #4
   14160:	andeq	r4, r1, r0, lsr #4
   14164:	andeq	r4, r1, r0, lsr #4
   14168:	andeq	r4, r1, r0, lsr #4
   1416c:	andeq	r4, r1, r0, lsr #4
   14170:	andeq	r4, r1, r0, lsr #4
   14174:	andeq	r4, r1, r0, lsr #4
   14178:	andeq	r4, r1, r0, lsr #4
   1417c:	andeq	r4, r1, r0, lsr #4
   14180:	andeq	r4, r1, r0, lsr #4
   14184:	andeq	r4, r1, r0, lsr #4
   14188:	andeq	r4, r1, r0, lsr #4
   1418c:	andeq	r4, r1, r0, lsr #4
   14190:	andeq	r4, r1, ip, lsr r4
   14194:	andeq	r4, r1, r8, ror #4
   14198:	andeq	r4, r1, r0, lsr #4
   1419c:	andeq	r4, r1, ip, lsr r4
   141a0:	andeq	r4, r1, r0, lsr #4
   141a4:	andeq	r4, r1, ip, lsr r4
   141a8:	andeq	r4, r1, r0, lsr #4
   141ac:	andeq	r4, r1, r0, lsr #4
   141b0:	andeq	r4, r1, r0, lsr #4
   141b4:	andeq	r4, r1, r0, lsr #4
   141b8:	andeq	r4, r1, r0, lsr #4
   141bc:	andeq	r4, r1, r0, lsr #4
   141c0:	andeq	r4, r1, r0, lsr #4
   141c4:	andeq	r4, r1, r0, lsr #4
   141c8:	andeq	r4, r1, r0, lsr #4
   141cc:	andeq	r4, r1, r0, lsr #4
   141d0:	andeq	r4, r1, r0, lsr #4
   141d4:	andeq	r4, r1, r0, lsr #4
   141d8:	andeq	r4, r1, r0, lsr #4
   141dc:	andeq	r4, r1, r0, lsr #4
   141e0:	andeq	r4, r1, r0, lsr #4
   141e4:	andeq	r4, r1, r0, lsr #4
   141e8:	andeq	r4, r1, r0, lsr #4
   141ec:	andeq	r4, r1, r0, lsr #4
   141f0:	andeq	r4, r1, r0, lsr #4
   141f4:	andeq	r4, r1, r0, lsr #4
   141f8:	andeq	r4, r1, r0, lsr #4
   141fc:	andeq	r4, r1, r0, lsr #4
   14200:	andeq	r4, r1, r0, lsr #4
   14204:	andeq	r4, r1, r0, lsr #4
   14208:	andeq	r4, r1, r0, lsr #4
   1420c:	andeq	r4, r1, r0, lsr #4
   14210:	andeq	r4, r1, r8, asr #4
   14214:	andeq	r4, r1, ip, lsr r4
   14218:	andeq	r4, r1, r8, asr #4
   1421c:	andeq	r4, r1, r4, lsr r2
   14220:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14224:	cmp	r0, #0
   14228:	beq	1449c <strspn@plt+0x301c>
   1422c:	ldr	r0, [fp, #16]
   14230:	b	144a0 <strspn@plt+0x3020>
   14234:	mov	r9, #0
   14238:	cmp	r6, #0
   1423c:	beq	14438 <strspn@plt+0x2fb8>
   14240:	mov	sl, #0
   14244:	b	14220 <strspn@plt+0x2da0>
   14248:	mov	r9, #0
   1424c:	cmn	lr, #1
   14250:	beq	1441c <strspn@plt+0x2f9c>
   14254:	cmp	r6, #0
   14258:	bne	14240 <strspn@plt+0x2dc0>
   1425c:	cmp	lr, #1
   14260:	beq	14438 <strspn@plt+0x2fb8>
   14264:	b	14240 <strspn@plt+0x2dc0>
   14268:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1426c:	cmp	r0, #2
   14270:	bne	14464 <strspn@plt+0x2fe4>
   14274:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14278:	tst	r0, #1
   1427c:	bne	14bac <strspn@plt+0x372c>
   14280:	mov	sl, #0
   14284:	mov	r0, #92	; 0x5c
   14288:	b	14478 <strspn@plt+0x2ff8>
   1428c:	mov	r0, #102	; 0x66
   14290:	b	14488 <strspn@plt+0x3008>
   14294:	mov	r2, #116	; 0x74
   14298:	b	142a8 <strspn@plt+0x2e28>
   1429c:	mov	r0, #98	; 0x62
   142a0:	b	14488 <strspn@plt+0x3008>
   142a4:	mov	r2, #114	; 0x72
   142a8:	ldr	r0, [sp, #64]	; 0x40
   142ac:	tst	r0, #1
   142b0:	mov	r0, r2
   142b4:	bne	14488 <strspn@plt+0x3008>
   142b8:	b	14bac <strspn@plt+0x372c>
   142bc:	ldr	r0, [sp, #84]	; 0x54
   142c0:	tst	r0, #1
   142c4:	beq	14578 <strspn@plt+0x30f8>
   142c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   142cc:	tst	r0, #1
   142d0:	bne	14bac <strspn@plt+0x372c>
   142d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   142d8:	cmp	r0, #2
   142dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   142e0:	movwne	r0, #1
   142e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   142e8:	orr	r0, r0, r2
   142ec:	tst	r0, #1
   142f0:	beq	1496c <strspn@plt+0x34ec>
   142f4:	mov	r0, r8
   142f8:	b	149a0 <strspn@plt+0x3520>
   142fc:	mov	sl, #0
   14300:	mov	r5, #63	; 0x3f
   14304:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14308:	cmp	r0, #5
   1430c:	beq	1472c <strspn@plt+0x32ac>
   14310:	cmp	r0, #2
   14314:	bne	147cc <strspn@plt+0x334c>
   14318:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1431c:	tst	r0, #1
   14320:	mov	r9, #0
   14324:	beq	14220 <strspn@plt+0x2da0>
   14328:	b	14bac <strspn@plt+0x372c>
   1432c:	mov	r0, #118	; 0x76
   14330:	b	14488 <strspn@plt+0x3008>
   14334:	mov	r5, #39	; 0x27
   14338:	mov	r0, #1
   1433c:	str	r0, [sp, #56]	; 0x38
   14340:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14344:	cmp	r0, #2
   14348:	bne	14598 <strspn@plt+0x3118>
   1434c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14350:	tst	r0, #1
   14354:	bne	14bac <strspn@plt+0x372c>
   14358:	ldr	r2, [sp, #72]	; 0x48
   1435c:	cmp	r2, #0
   14360:	mov	r0, r2
   14364:	movwne	r0, #1
   14368:	clz	r1, r4
   1436c:	lsr	r1, r1, #5
   14370:	orrs	r0, r0, r1
   14374:	moveq	r2, r4
   14378:	str	r2, [sp, #72]	; 0x48
   1437c:	moveq	r4, r0
   14380:	cmp	r8, r4
   14384:	movcc	r0, #39	; 0x27
   14388:	strbcc	r0, [r7, r8]
   1438c:	add	r0, r8, #1
   14390:	cmp	r0, r4
   14394:	movcc	r1, #92	; 0x5c
   14398:	strbcc	r1, [r7, r0]
   1439c:	add	r0, r8, #2
   143a0:	cmp	r0, r4
   143a4:	movcc	r1, #39	; 0x27
   143a8:	strbcc	r1, [r7, r0]
   143ac:	add	r8, r8, #3
   143b0:	mov	r0, #0
   143b4:	str	r0, [fp, #-56]	; 0xffffffc8
   143b8:	mov	sl, #0
   143bc:	mov	r9, #1
   143c0:	b	14220 <strspn@plt+0x2da0>
   143c4:	str	r4, [sp, #24]
   143c8:	ldr	r0, [sp, #40]	; 0x28
   143cc:	cmp	r0, #1
   143d0:	bne	145a0 <strspn@plt+0x3120>
   143d4:	str	lr, [sp, #28]
   143d8:	bl	11324 <__ctype_b_loc@plt>
   143dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   143e0:	ldr	r0, [r0]
   143e4:	add	r0, r0, r5, lsl #1
   143e8:	ldrb	r0, [r0, #1]
   143ec:	ubfx	r9, r0, #6, #1
   143f0:	mov	r1, #1
   143f4:	ldr	r4, [sp, #24]
   143f8:	ldr	r0, [sp, #52]	; 0x34
   143fc:	orr	r0, r9, r0
   14400:	mov	r2, r1
   14404:	cmp	r1, #1
   14408:	bhi	147d4 <strspn@plt+0x3354>
   1440c:	tst	r0, #1
   14410:	beq	147d4 <strspn@plt+0x3354>
   14414:	ldr	lr, [sp, #28]
   14418:	b	14220 <strspn@plt+0x2da0>
   1441c:	cmp	r6, #0
   14420:	ldrbeq	r0, [ip, #1]
   14424:	cmpeq	r0, #0
   14428:	beq	14438 <strspn@plt+0x2fb8>
   1442c:	mvn	lr, #0
   14430:	mov	sl, #0
   14434:	b	14220 <strspn@plt+0x2da0>
   14438:	mov	r1, #1
   1443c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14440:	cmp	r0, #2
   14444:	bne	1445c <strspn@plt+0x2fdc>
   14448:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1444c:	tst	r0, #1
   14450:	mov	r9, r1
   14454:	beq	14220 <strspn@plt+0x2da0>
   14458:	b	14bac <strspn@plt+0x372c>
   1445c:	mov	r9, r1
   14460:	b	14220 <strspn@plt+0x2da0>
   14464:	mov	sl, #0
   14468:	mov	r0, #92	; 0x5c
   1446c:	ldr	r1, [sp, #48]	; 0x30
   14470:	cmp	r1, #0
   14474:	beq	14488 <strspn@plt+0x3008>
   14478:	mov	r9, #0
   1447c:	cmp	sl, #0
   14480:	beq	14a38 <strspn@plt+0x35b8>
   14484:	b	14a74 <strspn@plt+0x35f4>
   14488:	mov	r9, #0
   1448c:	ldr	r1, [sp, #84]	; 0x54
   14490:	tst	r1, #1
   14494:	mov	sl, #0
   14498:	bne	144d8 <strspn@plt+0x3058>
   1449c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   144a0:	cmp	r0, #0
   144a4:	mov	r0, r5
   144a8:	beq	144cc <strspn@plt+0x304c>
   144ac:	ubfx	r0, r5, #5, #3
   144b0:	ldr	r1, [fp, #16]
   144b4:	ldr	r0, [r1, r0, lsl #2]
   144b8:	and	r1, r5, #31
   144bc:	mov	r2, #1
   144c0:	tst	r0, r2, lsl r1
   144c4:	mov	r0, r5
   144c8:	bne	144d8 <strspn@plt+0x3058>
   144cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   144d0:	cmp	r1, #0
   144d4:	beq	14a30 <strspn@plt+0x35b0>
   144d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   144dc:	tst	r1, #1
   144e0:	bne	14bac <strspn@plt+0x372c>
   144e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   144e8:	cmp	r1, #2
   144ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   144f0:	movwne	r1, #1
   144f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   144f8:	orr	r1, r1, r2
   144fc:	tst	r1, #1
   14500:	beq	1450c <strspn@plt+0x308c>
   14504:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14508:	b	14548 <strspn@plt+0x30c8>
   1450c:	cmp	r8, r4
   14510:	movcc	r1, #39	; 0x27
   14514:	strbcc	r1, [r7, r8]
   14518:	add	r1, r8, #1
   1451c:	cmp	r1, r4
   14520:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14524:	movcc	r2, #36	; 0x24
   14528:	strbcc	r2, [r7, r1]
   1452c:	add	r1, r8, #2
   14530:	cmp	r1, r4
   14534:	movcc	r2, #39	; 0x27
   14538:	strbcc	r2, [r7, r1]
   1453c:	add	r8, r8, #3
   14540:	mov	r1, #1
   14544:	str	r1, [fp, #-56]	; 0xffffffc8
   14548:	cmp	r8, r4
   1454c:	movcc	r1, #92	; 0x5c
   14550:	strbcc	r1, [r7, r8]
   14554:	add	r8, r8, #1
   14558:	cmp	r8, r4
   1455c:	strbcc	r0, [r7, r8]
   14560:	and	r5, r5, r9
   14564:	add	r8, r8, #1
   14568:	add	r6, r6, #1
   1456c:	cmn	lr, #1
   14570:	bne	13f4c <strspn@plt+0x2acc>
   14574:	b	13f58 <strspn@plt+0x2ad8>
   14578:	mov	r9, #0
   1457c:	ldr	r0, [sp, #36]	; 0x24
   14580:	cmp	r0, #0
   14584:	mov	sl, #0
   14588:	mov	r5, #0
   1458c:	beq	1449c <strspn@plt+0x301c>
   14590:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14594:	b	14568 <strspn@plt+0x30e8>
   14598:	mov	r9, #1
   1459c:	b	14220 <strspn@plt+0x2da0>
   145a0:	mov	r0, #0
   145a4:	str	r0, [fp, #-36]	; 0xffffffdc
   145a8:	str	r0, [fp, #-40]	; 0xffffffd8
   145ac:	cmn	lr, #1
   145b0:	bne	145c4 <strspn@plt+0x3144>
   145b4:	mov	r0, ip
   145b8:	bl	1133c <strlen@plt>
   145bc:	ldr	ip, [fp, #-84]	; 0xffffffac
   145c0:	mov	lr, r0
   145c4:	add	r0, ip, r6
   145c8:	str	r0, [sp, #20]
   145cc:	mov	r9, #1
   145d0:	mov	r7, #0
   145d4:	sub	r4, fp, #40	; 0x28
   145d8:	str	lr, [sp, #28]
   145dc:	str	r7, [sp, #44]	; 0x2c
   145e0:	add	r7, r7, r6
   145e4:	add	r1, ip, r7
   145e8:	sub	r2, lr, r7
   145ec:	sub	r0, fp, #44	; 0x2c
   145f0:	mov	r3, r4
   145f4:	bl	16520 <strspn@plt+0x50a0>
   145f8:	cmp	r0, #0
   145fc:	beq	14abc <strspn@plt+0x363c>
   14600:	cmn	r0, #1
   14604:	beq	14a7c <strspn@plt+0x35fc>
   14608:	cmn	r0, #2
   1460c:	ldr	lr, [sp, #28]
   14610:	beq	14a84 <strspn@plt+0x3604>
   14614:	cmp	r0, #2
   14618:	mov	r1, #0
   1461c:	movwcc	r1, #1
   14620:	ldr	r2, [sp, #60]	; 0x3c
   14624:	eor	r2, r2, #1
   14628:	orrs	r1, r2, r1
   1462c:	ldr	r4, [sp, #24]
   14630:	bne	146f0 <strspn@plt+0x3270>
   14634:	ldr	r1, [sp, #44]	; 0x2c
   14638:	ldr	r2, [sp, #20]
   1463c:	add	r1, r2, r1
   14640:	mov	r2, #1
   14644:	ldrb	r3, [r1, r2]
   14648:	sub	r3, r3, #91	; 0x5b
   1464c:	cmp	r3, #33	; 0x21
   14650:	bhi	146e4 <strspn@plt+0x3264>
   14654:	add	r7, pc, #0
   14658:	ldr	pc, [r7, r3, lsl #2]
   1465c:	andeq	r4, r1, r4, lsr #23
   14660:	andeq	r4, r1, r4, lsr #23
   14664:	andeq	r4, r1, r4, ror #13
   14668:	andeq	r4, r1, r4, lsr #23
   1466c:	andeq	r4, r1, r4, ror #13
   14670:	andeq	r4, r1, r4, lsr #23
   14674:	andeq	r4, r1, r4, ror #13
   14678:	andeq	r4, r1, r4, ror #13
   1467c:	andeq	r4, r1, r4, ror #13
   14680:	andeq	r4, r1, r4, ror #13
   14684:	andeq	r4, r1, r4, ror #13
   14688:	andeq	r4, r1, r4, ror #13
   1468c:	andeq	r4, r1, r4, ror #13
   14690:	andeq	r4, r1, r4, ror #13
   14694:	andeq	r4, r1, r4, ror #13
   14698:	andeq	r4, r1, r4, ror #13
   1469c:	andeq	r4, r1, r4, ror #13
   146a0:	andeq	r4, r1, r4, ror #13
   146a4:	andeq	r4, r1, r4, ror #13
   146a8:	andeq	r4, r1, r4, ror #13
   146ac:	andeq	r4, r1, r4, ror #13
   146b0:	andeq	r4, r1, r4, ror #13
   146b4:	andeq	r4, r1, r4, ror #13
   146b8:	andeq	r4, r1, r4, ror #13
   146bc:	andeq	r4, r1, r4, ror #13
   146c0:	andeq	r4, r1, r4, ror #13
   146c4:	andeq	r4, r1, r4, ror #13
   146c8:	andeq	r4, r1, r4, ror #13
   146cc:	andeq	r4, r1, r4, ror #13
   146d0:	andeq	r4, r1, r4, ror #13
   146d4:	andeq	r4, r1, r4, ror #13
   146d8:	andeq	r4, r1, r4, ror #13
   146dc:	andeq	r4, r1, r4, ror #13
   146e0:	andeq	r4, r1, r4, lsr #23
   146e4:	add	r2, r2, #1
   146e8:	cmp	r2, r0
   146ec:	bcc	14644 <strspn@plt+0x31c4>
   146f0:	ldr	r7, [sp, #44]	; 0x2c
   146f4:	add	r7, r0, r7
   146f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146fc:	bl	11258 <iswprint@plt>
   14700:	cmp	r0, #0
   14704:	movwne	r0, #1
   14708:	and	r9, r9, r0
   1470c:	sub	r4, fp, #40	; 0x28
   14710:	mov	r0, r4
   14714:	bl	11204 <mbsinit@plt>
   14718:	ldr	lr, [sp, #28]
   1471c:	cmp	r0, #0
   14720:	ldr	ip, [fp, #-84]	; 0xffffffac
   14724:	beq	145dc <strspn@plt+0x315c>
   14728:	b	14ac4 <strspn@plt+0x3644>
   1472c:	ldr	r0, [sp, #32]
   14730:	cmp	r0, #0
   14734:	beq	147cc <strspn@plt+0x334c>
   14738:	add	r0, r6, #2
   1473c:	cmp	r0, lr
   14740:	bcs	147cc <strspn@plt+0x334c>
   14744:	add	r1, ip, r6
   14748:	ldrb	r1, [r1, #1]
   1474c:	cmp	r1, #63	; 0x3f
   14750:	bne	147cc <strspn@plt+0x334c>
   14754:	ldrb	r9, [ip, r0]
   14758:	sub	r2, r9, #33	; 0x21
   1475c:	cmp	r2, #29
   14760:	bhi	147cc <strspn@plt+0x334c>
   14764:	mov	r3, #1
   14768:	movw	r1, #20929	; 0x51c1
   1476c:	movt	r1, #14336	; 0x3800
   14770:	tst	r1, r3, lsl r2
   14774:	beq	147cc <strspn@plt+0x334c>
   14778:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1477c:	tst	r1, #1
   14780:	bne	14bac <strspn@plt+0x372c>
   14784:	cmp	r8, r4
   14788:	movcc	r1, #63	; 0x3f
   1478c:	strbcc	r1, [r7, r8]
   14790:	add	r2, r8, #1
   14794:	cmp	r2, r4
   14798:	movcc	r1, #34	; 0x22
   1479c:	strbcc	r1, [r7, r2]
   147a0:	add	r2, r8, #2
   147a4:	cmp	r2, r4
   147a8:	movcc	r1, #34	; 0x22
   147ac:	strbcc	r1, [r7, r2]
   147b0:	add	r2, r8, #3
   147b4:	cmp	r2, r4
   147b8:	movcc	r1, #63	; 0x3f
   147bc:	strbcc	r1, [r7, r2]
   147c0:	add	r8, r8, #4
   147c4:	mov	r6, r0
   147c8:	mov	r5, r9
   147cc:	mov	r9, #0
   147d0:	b	14220 <strspn@plt+0x2da0>
   147d4:	add	r1, r2, r6
   147d8:	str	r1, [sp, #44]	; 0x2c
   147dc:	add	r1, r6, #1
   147e0:	mov	r3, #0
   147e4:	ldr	lr, [sp, #28]
   147e8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   147ec:	tst	r0, #1
   147f0:	bne	148e4 <strspn@plt+0x3464>
   147f4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   147f8:	tst	r2, #1
   147fc:	bne	14bac <strspn@plt+0x372c>
   14800:	cmp	r6, #2
   14804:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14808:	movwne	r3, #1
   1480c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14810:	orr	r3, r3, r2
   14814:	tst	r3, #1
   14818:	bne	14854 <strspn@plt+0x33d4>
   1481c:	cmp	r8, r4
   14820:	movcc	r2, #39	; 0x27
   14824:	strbcc	r2, [r7, r8]
   14828:	add	r3, r8, #1
   1482c:	cmp	r3, r4
   14830:	movcc	r2, #36	; 0x24
   14834:	strbcc	r2, [r7, r3]
   14838:	add	r3, r8, #2
   1483c:	cmp	r3, r4
   14840:	movcc	r2, #39	; 0x27
   14844:	strbcc	r2, [r7, r3]
   14848:	add	r8, r8, #3
   1484c:	mov	r2, #1
   14850:	str	r2, [fp, #-56]	; 0xffffffc8
   14854:	cmp	r8, r4
   14858:	movcc	r2, #92	; 0x5c
   1485c:	strbcc	r2, [r7, r8]
   14860:	add	r3, r8, #1
   14864:	cmp	r3, r4
   14868:	bcs	14888 <strspn@plt+0x3408>
   1486c:	and	r7, r5, #192	; 0xc0
   14870:	mov	r2, #48	; 0x30
   14874:	orr	r7, r2, r7, lsr #6
   14878:	ldr	r6, [sp, #80]	; 0x50
   1487c:	strb	r7, [r6, r3]
   14880:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14884:	ldr	r7, [sp, #80]	; 0x50
   14888:	add	r3, r8, #2
   1488c:	cmp	r3, r4
   14890:	bcs	148b0 <strspn@plt+0x3430>
   14894:	lsr	r7, r5, #3
   14898:	mov	r2, #6
   1489c:	bfi	r7, r2, #3, #29
   148a0:	ldr	r6, [sp, #80]	; 0x50
   148a4:	strb	r7, [r6, r3]
   148a8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   148ac:	ldr	r7, [sp, #80]	; 0x50
   148b0:	mov	r2, #6
   148b4:	bfi	r5, r2, #3, #29
   148b8:	add	r8, r8, #3
   148bc:	mov	r3, #1
   148c0:	b	14908 <strspn@plt+0x3488>
   148c4:	ldr	r7, [sp, #80]	; 0x50
   148c8:	cmp	r8, r4
   148cc:	strbcc	r5, [r7, r8]
   148d0:	ldrb	r5, [ip, r1]
   148d4:	add	r1, r1, #1
   148d8:	add	r8, r8, #1
   148dc:	tst	r0, #1
   148e0:	beq	147f4 <strspn@plt+0x3374>
   148e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   148e8:	tst	r2, #1
   148ec:	beq	14900 <strspn@plt+0x3480>
   148f0:	cmp	r8, r4
   148f4:	movcc	r2, #92	; 0x5c
   148f8:	strbcc	r2, [r7, r8]
   148fc:	add	r8, r8, #1
   14900:	mov	r2, #0
   14904:	str	r2, [fp, #-52]	; 0xffffffcc
   14908:	and	sl, r3, #1
   1490c:	ldr	r2, [sp, #44]	; 0x2c
   14910:	cmp	r2, r1
   14914:	bls	14a20 <strspn@plt+0x35a0>
   14918:	cmp	sl, #0
   1491c:	movwne	sl, #1
   14920:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14924:	mvn	r7, r2
   14928:	orr	r7, r7, sl
   1492c:	tst	r7, #1
   14930:	bne	148c4 <strspn@plt+0x3444>
   14934:	cmp	r8, r4
   14938:	ldrcc	r7, [sp, #80]	; 0x50
   1493c:	movcc	r2, #39	; 0x27
   14940:	strbcc	r2, [r7, r8]
   14944:	add	r7, r8, #1
   14948:	cmp	r7, r4
   1494c:	ldrcc	r6, [sp, #80]	; 0x50
   14950:	movcc	r2, #39	; 0x27
   14954:	strbcc	r2, [r6, r7]
   14958:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   1495c:	add	r8, r8, #2
   14960:	mov	r2, #0
   14964:	str	r2, [fp, #-56]	; 0xffffffc8
   14968:	b	148c4 <strspn@plt+0x3444>
   1496c:	cmp	r8, r4
   14970:	movcc	r0, #39	; 0x27
   14974:	strbcc	r0, [r7, r8]
   14978:	add	r0, r8, #1
   1497c:	cmp	r0, r4
   14980:	movcc	r1, #36	; 0x24
   14984:	strbcc	r1, [r7, r0]
   14988:	add	r0, r8, #2
   1498c:	cmp	r0, r4
   14990:	movcc	r1, #39	; 0x27
   14994:	strbcc	r1, [r7, r0]
   14998:	add	r0, r8, #3
   1499c:	mov	r2, #1
   149a0:	cmp	r0, r4
   149a4:	movcc	r1, #92	; 0x5c
   149a8:	strbcc	r1, [r7, r0]
   149ac:	str	r2, [fp, #-56]	; 0xffffffc8
   149b0:	add	r8, r0, #1
   149b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   149b8:	cmp	r1, #2
   149bc:	beq	14a10 <strspn@plt+0x3590>
   149c0:	add	r1, r6, #1
   149c4:	mov	r9, #0
   149c8:	mov	sl, #1
   149cc:	mov	r5, #48	; 0x30
   149d0:	cmp	r1, lr
   149d4:	bcs	14220 <strspn@plt+0x2da0>
   149d8:	ldrb	r1, [ip, r1]
   149dc:	sub	r1, r1, #48	; 0x30
   149e0:	uxtb	r1, r1
   149e4:	cmp	r1, #9
   149e8:	bhi	14220 <strspn@plt+0x2da0>
   149ec:	cmp	r8, r4
   149f0:	movcc	r1, #48	; 0x30
   149f4:	strbcc	r1, [r7, r8]
   149f8:	add	r1, r0, #2
   149fc:	cmp	r1, r4
   14a00:	movcc	r2, #48	; 0x30
   14a04:	strbcc	r2, [r7, r1]
   14a08:	add	r8, r0, #3
   14a0c:	b	14220 <strspn@plt+0x2da0>
   14a10:	mov	r0, #48	; 0x30
   14a14:	mov	sl, #1
   14a18:	mov	r9, #0
   14a1c:	b	144cc <strspn@plt+0x304c>
   14a20:	sub	r6, r1, #1
   14a24:	cmp	sl, #0
   14a28:	movwne	sl, #1
   14a2c:	mov	r0, r5
   14a30:	cmp	sl, #0
   14a34:	bne	14a74 <strspn@plt+0x35f4>
   14a38:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14a3c:	tst	r1, #1
   14a40:	beq	14a74 <strspn@plt+0x35f4>
   14a44:	cmp	r8, r4
   14a48:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14a4c:	movcc	r1, #39	; 0x27
   14a50:	strbcc	r1, [r7, r8]
   14a54:	add	r1, r8, #1
   14a58:	cmp	r1, r4
   14a5c:	movcc	r2, #39	; 0x27
   14a60:	strbcc	r2, [r7, r1]
   14a64:	add	r8, r8, #2
   14a68:	mov	r1, #0
   14a6c:	str	r1, [fp, #-56]	; 0xffffffc8
   14a70:	b	14558 <strspn@plt+0x30d8>
   14a74:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14a78:	b	14558 <strspn@plt+0x30d8>
   14a7c:	mov	r9, #0
   14a80:	b	14abc <strspn@plt+0x363c>
   14a84:	mov	r9, #0
   14a88:	cmp	r7, lr
   14a8c:	bcs	14abc <strspn@plt+0x363c>
   14a90:	ldr	ip, [fp, #-84]	; 0xffffffac
   14a94:	ldr	r7, [sp, #44]	; 0x2c
   14a98:	ldr	r0, [sp, #20]
   14a9c:	ldrb	r0, [r0, r7]
   14aa0:	cmp	r0, #0
   14aa4:	beq	14ac4 <strspn@plt+0x3644>
   14aa8:	add	r7, r7, #1
   14aac:	add	r0, r6, r7
   14ab0:	cmp	r0, lr
   14ab4:	bcc	14a98 <strspn@plt+0x3618>
   14ab8:	b	14ac4 <strspn@plt+0x3644>
   14abc:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ac0:	ldr	r7, [sp, #44]	; 0x2c
   14ac4:	mov	r1, r7
   14ac8:	ldr	r7, [sp, #80]	; 0x50
   14acc:	b	143f4 <strspn@plt+0x2f74>
   14ad0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14ad4:	eor	r0, r1, #2
   14ad8:	orr	r0, r0, r8
   14adc:	clz	r0, r0
   14ae0:	lsr	r0, r0, #5
   14ae4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14ae8:	tst	r2, r0
   14aec:	bne	14bac <strspn@plt+0x372c>
   14af0:	cmp	r1, #2
   14af4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14af8:	movwne	r0, #1
   14afc:	orr	r0, r2, r0
   14b00:	tst	r0, #1
   14b04:	ldreq	r0, [sp, #56]	; 0x38
   14b08:	eoreq	r0, r0, #1
   14b0c:	tsteq	r0, #1
   14b10:	bne	14b44 <strspn@plt+0x36c4>
   14b14:	mov	r9, lr
   14b18:	tst	r5, #1
   14b1c:	bne	14c14 <strspn@plt+0x3794>
   14b20:	ldr	r0, [sp, #72]	; 0x48
   14b24:	cmp	r0, #0
   14b28:	beq	14b44 <strspn@plt+0x36c4>
   14b2c:	mov	r5, #0
   14b30:	cmp	r4, #0
   14b34:	ldr	r0, [sp, #84]	; 0x54
   14b38:	mov	sl, r2
   14b3c:	ldr	r6, [sp, #72]	; 0x48
   14b40:	beq	13cdc <strspn@plt+0x285c>
   14b44:	ldr	r1, [sp, #92]	; 0x5c
   14b48:	clz	r0, r1
   14b4c:	lsr	r0, r0, #5
   14b50:	orr	r0, r0, r2
   14b54:	tst	r0, #1
   14b58:	bne	14b84 <strspn@plt+0x3704>
   14b5c:	ldrb	r0, [r1]
   14b60:	cmp	r0, #0
   14b64:	beq	14b84 <strspn@plt+0x3704>
   14b68:	add	r1, r1, #1
   14b6c:	cmp	r8, r4
   14b70:	strbcc	r0, [r7, r8]
   14b74:	add	r8, r8, #1
   14b78:	ldrb	r0, [r1], #1
   14b7c:	cmp	r0, #0
   14b80:	bne	14b6c <strspn@plt+0x36ec>
   14b84:	cmp	r8, r4
   14b88:	movcc	r0, #0
   14b8c:	strbcc	r0, [r7, r8]
   14b90:	b	14c08 <strspn@plt+0x3788>
   14b94:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b98:	mov	lr, r4
   14b9c:	mov	r4, r5
   14ba0:	b	14bac <strspn@plt+0x372c>
   14ba4:	ldr	r7, [sp, #80]	; 0x50
   14ba8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14bac:	mov	r0, #0
   14bb0:	ldr	r1, [fp, #12]
   14bb4:	bic	r1, r1, #2
   14bb8:	ldr	r2, [sp, #84]	; 0x54
   14bbc:	tst	r2, #1
   14bc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14bc4:	mov	r2, r3
   14bc8:	movwne	r2, #4
   14bcc:	cmp	r3, #2
   14bd0:	movne	r2, r3
   14bd4:	str	r2, [sp]
   14bd8:	str	r1, [sp, #4]
   14bdc:	str	r0, [sp, #8]
   14be0:	ldr	r0, [sp, #68]	; 0x44
   14be4:	str	r0, [sp, #12]
   14be8:	ldr	r0, [sp, #76]	; 0x4c
   14bec:	str	r0, [sp, #16]
   14bf0:	mov	r0, r7
   14bf4:	mov	r1, r4
   14bf8:	mov	r2, ip
   14bfc:	mov	r3, lr
   14c00:	bl	13c54 <strspn@plt+0x27d4>
   14c04:	mov	r8, r0
   14c08:	mov	r0, r8
   14c0c:	sub	sp, fp, #28
   14c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c14:	mov	r0, #5
   14c18:	str	r0, [sp]
   14c1c:	ldr	r0, [fp, #12]
   14c20:	str	r0, [sp, #4]
   14c24:	ldr	r0, [fp, #16]
   14c28:	str	r0, [sp, #8]
   14c2c:	ldr	r0, [sp, #68]	; 0x44
   14c30:	str	r0, [sp, #12]
   14c34:	ldr	r0, [sp, #76]	; 0x4c
   14c38:	str	r0, [sp, #16]
   14c3c:	mov	r0, r7
   14c40:	ldr	r1, [sp, #72]	; 0x48
   14c44:	ldr	r2, [fp, #-84]	; 0xffffffac
   14c48:	mov	r3, r9
   14c4c:	b	14c00 <strspn@plt+0x3780>
   14c50:	bl	11474 <abort@plt>
   14c54:	mov	r3, r2
   14c58:	mov	r2, #0
   14c5c:	b	14c60 <strspn@plt+0x37e0>
   14c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c64:	add	fp, sp, #28
   14c68:	sub	sp, sp, #36	; 0x24
   14c6c:	mov	r4, r2
   14c70:	str	r2, [sp, #24]
   14c74:	mov	r5, r1
   14c78:	mov	r6, r0
   14c7c:	str	r0, [sp, #20]
   14c80:	movw	r8, #33896	; 0x8468
   14c84:	movt	r8, #2
   14c88:	cmp	r3, #0
   14c8c:	movne	r8, r3
   14c90:	bl	1136c <__errno_location@plt>
   14c94:	str	r0, [sp, #28]
   14c98:	ldm	r8, {r3, r9}
   14c9c:	ldr	r1, [r8, #40]	; 0x28
   14ca0:	ldr	r2, [r8, #44]	; 0x2c
   14ca4:	ldr	r7, [r0]
   14ca8:	str	r7, [sp, #32]
   14cac:	add	sl, r8, #8
   14cb0:	cmp	r4, #0
   14cb4:	orreq	r9, r9, #1
   14cb8:	stm	sp, {r3, r9, sl}
   14cbc:	str	r1, [sp, #12]
   14cc0:	str	r2, [sp, #16]
   14cc4:	mov	r0, #0
   14cc8:	mov	r1, #0
   14ccc:	mov	r2, r6
   14cd0:	mov	r3, r5
   14cd4:	mov	r7, r5
   14cd8:	bl	13c54 <strspn@plt+0x27d4>
   14cdc:	mov	r5, r0
   14ce0:	add	r4, r0, #1
   14ce4:	mov	r0, r4
   14ce8:	bl	15dd4 <strspn@plt+0x4954>
   14cec:	mov	r6, r0
   14cf0:	ldr	r0, [r8]
   14cf4:	ldr	r1, [r8, #40]	; 0x28
   14cf8:	ldr	r2, [r8, #44]	; 0x2c
   14cfc:	stm	sp, {r0, r9, sl}
   14d00:	str	r1, [sp, #12]
   14d04:	str	r2, [sp, #16]
   14d08:	mov	r0, r6
   14d0c:	mov	r1, r4
   14d10:	ldr	r2, [sp, #20]
   14d14:	mov	r3, r7
   14d18:	bl	13c54 <strspn@plt+0x27d4>
   14d1c:	ldr	r0, [sp, #24]
   14d20:	ldr	r1, [sp, #32]
   14d24:	ldr	r2, [sp, #28]
   14d28:	str	r1, [r2]
   14d2c:	cmp	r0, #0
   14d30:	strne	r5, [r0]
   14d34:	mov	r0, r6
   14d38:	sub	sp, fp, #28
   14d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d44:	add	fp, sp, #24
   14d48:	movw	r8, #33064	; 0x8128
   14d4c:	movt	r8, #2
   14d50:	ldr	r4, [r8]
   14d54:	movw	r5, #33068	; 0x812c
   14d58:	movt	r5, #2
   14d5c:	ldr	r0, [r5]
   14d60:	cmp	r0, #2
   14d64:	blt	14d90 <strspn@plt+0x3910>
   14d68:	add	r7, r4, #12
   14d6c:	mov	r6, #0
   14d70:	ldr	r0, [r7, r6, lsl #3]
   14d74:	bl	139f0 <strspn@plt+0x2570>
   14d78:	add	r0, r6, #1
   14d7c:	ldr	r1, [r5]
   14d80:	add	r2, r6, #2
   14d84:	cmp	r2, r1
   14d88:	mov	r6, r0
   14d8c:	blt	14d70 <strspn@plt+0x38f0>
   14d90:	ldr	r0, [r4, #4]
   14d94:	movw	r7, #33944	; 0x8498
   14d98:	movt	r7, #2
   14d9c:	cmp	r0, r7
   14da0:	beq	14db8 <strspn@plt+0x3938>
   14da4:	bl	139f0 <strspn@plt+0x2570>
   14da8:	movw	r0, #33072	; 0x8130
   14dac:	movt	r0, #2
   14db0:	mov	r6, #256	; 0x100
   14db4:	strd	r6, [r0]
   14db8:	movw	r6, #33072	; 0x8130
   14dbc:	movt	r6, #2
   14dc0:	cmp	r4, r6
   14dc4:	beq	14dd4 <strspn@plt+0x3954>
   14dc8:	mov	r0, r4
   14dcc:	bl	139f0 <strspn@plt+0x2570>
   14dd0:	str	r6, [r8]
   14dd4:	mov	r0, #1
   14dd8:	str	r0, [r5]
   14ddc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14de0:	movw	r3, #33896	; 0x8468
   14de4:	movt	r3, #2
   14de8:	mvn	r2, #0
   14dec:	b	14df0 <strspn@plt+0x3970>
   14df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14df4:	add	fp, sp, #28
   14df8:	sub	sp, sp, #44	; 0x2c
   14dfc:	mov	r7, r3
   14e00:	str	r2, [sp, #36]	; 0x24
   14e04:	str	r1, [sp, #32]
   14e08:	mov	r5, r0
   14e0c:	bl	1136c <__errno_location@plt>
   14e10:	cmp	r5, #0
   14e14:	blt	14f80 <strspn@plt+0x3b00>
   14e18:	cmn	r5, #-2147483647	; 0x80000001
   14e1c:	beq	14f80 <strspn@plt+0x3b00>
   14e20:	movw	r4, #33064	; 0x8128
   14e24:	movt	r4, #2
   14e28:	ldr	r6, [r4]
   14e2c:	str	r0, [sp, #28]
   14e30:	ldr	r0, [r0]
   14e34:	str	r0, [sp, #24]
   14e38:	movw	r8, #33068	; 0x812c
   14e3c:	movt	r8, #2
   14e40:	ldr	r1, [r8]
   14e44:	cmp	r1, r5
   14e48:	ble	14e54 <strspn@plt+0x39d4>
   14e4c:	mov	sl, r6
   14e50:	b	14ebc <strspn@plt+0x3a3c>
   14e54:	str	r1, [fp, #-32]	; 0xffffffe0
   14e58:	mov	r0, #8
   14e5c:	str	r0, [sp]
   14e60:	movw	r9, #33072	; 0x8130
   14e64:	movt	r9, #2
   14e68:	subs	r0, r6, r9
   14e6c:	movne	r0, r6
   14e70:	add	r2, r5, #1
   14e74:	sub	r2, r2, r1
   14e78:	sub	r1, fp, #32
   14e7c:	mvn	r3, #-2147483648	; 0x80000000
   14e80:	bl	15ebc <strspn@plt+0x4a3c>
   14e84:	mov	sl, r0
   14e88:	str	r0, [r4]
   14e8c:	cmp	r6, r9
   14e90:	ldrdeq	r0, [r9]
   14e94:	stmeq	sl, {r0, r1}
   14e98:	ldr	r1, [r8]
   14e9c:	add	r0, sl, r1, lsl #3
   14ea0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14ea4:	sub	r1, r2, r1
   14ea8:	lsl	r2, r1, #3
   14eac:	mov	r1, #0
   14eb0:	bl	11390 <memset@plt>
   14eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14eb8:	str	r0, [r8]
   14ebc:	mov	r9, sl
   14ec0:	ldr	r6, [r9, r5, lsl #3]!
   14ec4:	ldr	r4, [r9, #4]!
   14ec8:	ldm	r7, {r0, r1}
   14ecc:	ldr	r2, [r7, #40]	; 0x28
   14ed0:	ldr	r3, [r7, #44]	; 0x2c
   14ed4:	orr	r8, r1, #1
   14ed8:	add	r1, r7, #8
   14edc:	stm	sp, {r0, r8}
   14ee0:	str	r1, [sp, #20]
   14ee4:	add	r0, sp, #8
   14ee8:	stm	r0, {r1, r2, r3}
   14eec:	mov	r0, r4
   14ef0:	mov	r1, r6
   14ef4:	ldr	r2, [sp, #32]
   14ef8:	ldr	r3, [sp, #36]	; 0x24
   14efc:	bl	13c54 <strspn@plt+0x27d4>
   14f00:	cmp	r6, r0
   14f04:	bhi	14f68 <strspn@plt+0x3ae8>
   14f08:	add	r6, r0, #1
   14f0c:	str	r6, [sl, r5, lsl #3]
   14f10:	movw	r0, #33944	; 0x8498
   14f14:	movt	r0, #2
   14f18:	cmp	r4, r0
   14f1c:	beq	14f28 <strspn@plt+0x3aa8>
   14f20:	mov	r0, r4
   14f24:	bl	139f0 <strspn@plt+0x2570>
   14f28:	mov	r0, r6
   14f2c:	bl	15dd4 <strspn@plt+0x4954>
   14f30:	mov	r4, r0
   14f34:	str	r0, [r9]
   14f38:	ldr	r0, [r7]
   14f3c:	ldr	r1, [r7, #40]	; 0x28
   14f40:	ldr	r2, [r7, #44]	; 0x2c
   14f44:	stm	sp, {r0, r8}
   14f48:	ldr	r0, [sp, #20]
   14f4c:	add	r3, sp, #8
   14f50:	stm	r3, {r0, r1, r2}
   14f54:	mov	r0, r4
   14f58:	mov	r1, r6
   14f5c:	ldr	r2, [sp, #32]
   14f60:	ldr	r3, [sp, #36]	; 0x24
   14f64:	bl	13c54 <strspn@plt+0x27d4>
   14f68:	ldr	r0, [sp, #28]
   14f6c:	ldr	r1, [sp, #24]
   14f70:	str	r1, [r0]
   14f74:	mov	r0, r4
   14f78:	sub	sp, fp, #28
   14f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f80:	bl	11474 <abort@plt>
   14f84:	movw	r3, #33896	; 0x8468
   14f88:	movt	r3, #2
   14f8c:	b	14df0 <strspn@plt+0x3970>
   14f90:	mov	r1, r0
   14f94:	mov	r0, #0
   14f98:	b	14de0 <strspn@plt+0x3960>
   14f9c:	mov	r2, r1
   14fa0:	mov	r1, r0
   14fa4:	mov	r0, #0
   14fa8:	b	14f84 <strspn@plt+0x3b04>
   14fac:	push	{r4, r5, r6, sl, fp, lr}
   14fb0:	add	fp, sp, #16
   14fb4:	sub	sp, sp, #48	; 0x30
   14fb8:	mov	r4, r2
   14fbc:	mov	r5, r0
   14fc0:	mov	r6, sp
   14fc4:	mov	r0, r6
   14fc8:	bl	14fe8 <strspn@plt+0x3b68>
   14fcc:	mov	r0, r5
   14fd0:	mov	r1, r4
   14fd4:	mvn	r2, #0
   14fd8:	mov	r3, r6
   14fdc:	bl	14df0 <strspn@plt+0x3970>
   14fe0:	sub	sp, fp, #16
   14fe4:	pop	{r4, r5, r6, sl, fp, pc}
   14fe8:	vmov.i32	q8, #0	; 0x00000000
   14fec:	mov	r2, #32
   14ff0:	mov	r3, r0
   14ff4:	vst1.32	{d16-d17}, [r3], r2
   14ff8:	vst1.32	{d16-d17}, [r3]
   14ffc:	add	r2, r0, #16
   15000:	vst1.32	{d16-d17}, [r2]
   15004:	cmp	r1, #10
   15008:	strne	r1, [r0]
   1500c:	bxne	lr
   15010:	push	{fp, lr}
   15014:	mov	fp, sp
   15018:	bl	11474 <abort@plt>
   1501c:	push	{r4, r5, r6, r7, fp, lr}
   15020:	add	fp, sp, #16
   15024:	sub	sp, sp, #48	; 0x30
   15028:	mov	r4, r3
   1502c:	mov	r5, r2
   15030:	mov	r6, r0
   15034:	mov	r7, sp
   15038:	mov	r0, r7
   1503c:	bl	14fe8 <strspn@plt+0x3b68>
   15040:	mov	r0, r6
   15044:	mov	r1, r5
   15048:	mov	r2, r4
   1504c:	mov	r3, r7
   15050:	bl	14df0 <strspn@plt+0x3970>
   15054:	sub	sp, fp, #16
   15058:	pop	{r4, r5, r6, r7, fp, pc}
   1505c:	mov	r2, r1
   15060:	mov	r1, r0
   15064:	mov	r0, #0
   15068:	b	14fac <strspn@plt+0x3b2c>
   1506c:	mov	r3, r2
   15070:	mov	r2, r1
   15074:	mov	r1, r0
   15078:	mov	r0, #0
   1507c:	b	1501c <strspn@plt+0x3b9c>
   15080:	push	{r4, r5, r6, sl, fp, lr}
   15084:	add	fp, sp, #16
   15088:	sub	sp, sp, #48	; 0x30
   1508c:	mov	r4, r1
   15090:	mov	r5, r0
   15094:	mov	r0, #32
   15098:	movw	r1, #33896	; 0x8468
   1509c:	movt	r1, #2
   150a0:	add	r3, r1, #16
   150a4:	vld1.64	{d16-d17}, [r1], r0
   150a8:	mov	r6, sp
   150ac:	vld1.64	{d18-d19}, [r3]
   150b0:	add	r3, r6, #16
   150b4:	vld1.64	{d20-d21}, [r1]
   150b8:	vst1.64	{d18-d19}, [r3]
   150bc:	mov	r1, r6
   150c0:	vst1.64	{d16-d17}, [r1], r0
   150c4:	vst1.64	{d20-d21}, [r1]
   150c8:	mov	r0, r6
   150cc:	mov	r1, r2
   150d0:	mov	r2, #1
   150d4:	bl	13b48 <strspn@plt+0x26c8>
   150d8:	mov	r0, #0
   150dc:	mov	r1, r5
   150e0:	mov	r2, r4
   150e4:	mov	r3, r6
   150e8:	bl	14df0 <strspn@plt+0x3970>
   150ec:	sub	sp, fp, #16
   150f0:	pop	{r4, r5, r6, sl, fp, pc}
   150f4:	mov	r2, r1
   150f8:	mvn	r1, #0
   150fc:	b	15080 <strspn@plt+0x3c00>
   15100:	mov	r1, #58	; 0x3a
   15104:	b	150f4 <strspn@plt+0x3c74>
   15108:	mov	r2, #58	; 0x3a
   1510c:	b	15080 <strspn@plt+0x3c00>
   15110:	push	{r4, r5, r6, sl, fp, lr}
   15114:	add	fp, sp, #16
   15118:	sub	sp, sp, #48	; 0x30
   1511c:	mov	r4, r2
   15120:	mov	r5, r0
   15124:	mov	r6, sp
   15128:	mov	r0, r6
   1512c:	bl	14fe8 <strspn@plt+0x3b68>
   15130:	mov	r0, r6
   15134:	mov	r1, #58	; 0x3a
   15138:	mov	r2, #1
   1513c:	bl	13b48 <strspn@plt+0x26c8>
   15140:	mov	r0, r5
   15144:	mov	r1, r4
   15148:	mvn	r2, #0
   1514c:	mov	r3, r6
   15150:	bl	14df0 <strspn@plt+0x3970>
   15154:	sub	sp, fp, #16
   15158:	pop	{r4, r5, r6, sl, fp, pc}
   1515c:	push	{fp, lr}
   15160:	mov	fp, sp
   15164:	sub	sp, sp, #8
   15168:	mvn	ip, #0
   1516c:	str	ip, [sp]
   15170:	bl	1517c <strspn@plt+0x3cfc>
   15174:	mov	sp, fp
   15178:	pop	{fp, pc}
   1517c:	push	{r4, r5, r6, r7, fp, lr}
   15180:	add	fp, sp, #16
   15184:	sub	sp, sp, #48	; 0x30
   15188:	mov	r7, r3
   1518c:	mov	r5, r0
   15190:	mov	r0, #32
   15194:	movw	r3, #33896	; 0x8468
   15198:	movt	r3, #2
   1519c:	add	r4, r3, #16
   151a0:	vld1.64	{d16-d17}, [r3], r0
   151a4:	mov	r6, sp
   151a8:	vld1.64	{d18-d19}, [r4]
   151ac:	add	r4, r6, #16
   151b0:	vld1.64	{d20-d21}, [r3]
   151b4:	vst1.64	{d18-d19}, [r4]
   151b8:	mov	r3, r6
   151bc:	vst1.64	{d16-d17}, [r3], r0
   151c0:	vst1.64	{d20-d21}, [r3]
   151c4:	mov	r0, r6
   151c8:	bl	13ba0 <strspn@plt+0x2720>
   151cc:	ldr	r2, [fp, #8]
   151d0:	mov	r0, r5
   151d4:	mov	r1, r7
   151d8:	mov	r3, r6
   151dc:	bl	14df0 <strspn@plt+0x3970>
   151e0:	sub	sp, fp, #16
   151e4:	pop	{r4, r5, r6, r7, fp, pc}
   151e8:	mov	r3, r2
   151ec:	mov	r2, r1
   151f0:	mov	r1, r0
   151f4:	mov	r0, #0
   151f8:	b	1515c <strspn@plt+0x3cdc>
   151fc:	push	{fp, lr}
   15200:	mov	fp, sp
   15204:	sub	sp, sp, #8
   15208:	mov	ip, r2
   1520c:	mov	r2, r1
   15210:	mov	r1, r0
   15214:	str	r3, [sp]
   15218:	mov	r0, #0
   1521c:	mov	r3, ip
   15220:	bl	1517c <strspn@plt+0x3cfc>
   15224:	mov	sp, fp
   15228:	pop	{fp, pc}
   1522c:	movw	r3, #33080	; 0x8138
   15230:	movt	r3, #2
   15234:	b	14df0 <strspn@plt+0x3970>
   15238:	mov	r2, r1
   1523c:	mov	r1, r0
   15240:	mov	r0, #0
   15244:	b	1522c <strspn@plt+0x3dac>
   15248:	mvn	r2, #0
   1524c:	b	1522c <strspn@plt+0x3dac>
   15250:	mov	r1, r0
   15254:	mov	r0, #0
   15258:	b	15248 <strspn@plt+0x3dc8>
   1525c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15260:	add	fp, sp, #24
   15264:	sub	sp, sp, #16
   15268:	mov	r4, r1
   1526c:	mov	r5, r0
   15270:	mov	r7, #0
   15274:	mov	r0, #0
   15278:	mov	r1, r5
   1527c:	mov	r2, #5
   15280:	bl	1121c <dcgettext@plt>
   15284:	cmp	r0, r5
   15288:	beq	15294 <strspn@plt+0x3e14>
   1528c:	sub	sp, fp, #24
   15290:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15294:	bl	164e8 <strspn@plt+0x5068>
   15298:	mov	r6, r0
   1529c:	mov	r8, #56	; 0x38
   152a0:	mov	r0, #45	; 0x2d
   152a4:	stm	sp, {r0, r8}
   152a8:	str	r7, [sp, #8]
   152ac:	str	r7, [sp, #12]
   152b0:	mov	r0, r6
   152b4:	mov	r1, #85	; 0x55
   152b8:	mov	r2, #84	; 0x54
   152bc:	mov	r3, #70	; 0x46
   152c0:	bl	15358 <strspn@plt+0x3ed8>
   152c4:	cmp	r0, #0
   152c8:	beq	152e4 <strspn@plt+0x3e64>
   152cc:	ldrb	r1, [r5]
   152d0:	movw	r2, #29721	; 0x7419
   152d4:	movt	r2, #1
   152d8:	movw	r0, #29725	; 0x741d
   152dc:	movt	r0, #1
   152e0:	b	15328 <strspn@plt+0x3ea8>
   152e4:	mov	r0, #48	; 0x30
   152e8:	mov	r1, #51	; 0x33
   152ec:	str	r8, [sp]
   152f0:	stmib	sp, {r0, r1}
   152f4:	str	r0, [sp, #12]
   152f8:	mov	r0, r6
   152fc:	mov	r1, #71	; 0x47
   15300:	mov	r2, #66	; 0x42
   15304:	mov	r3, #49	; 0x31
   15308:	bl	15358 <strspn@plt+0x3ed8>
   1530c:	cmp	r0, #0
   15310:	beq	15338 <strspn@plt+0x3eb8>
   15314:	ldrb	r1, [r5]
   15318:	movw	r2, #29729	; 0x7421
   1531c:	movt	r2, #1
   15320:	movw	r0, #29733	; 0x7425
   15324:	movt	r0, #1
   15328:	cmp	r1, #96	; 0x60
   1532c:	moveq	r0, r2
   15330:	sub	sp, fp, #24
   15334:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15338:	movw	r1, #29717	; 0x7415
   1533c:	movt	r1, #1
   15340:	movw	r0, #27752	; 0x6c68
   15344:	movt	r0, #1
   15348:	cmp	r4, #9
   1534c:	moveq	r0, r1
   15350:	sub	sp, fp, #24
   15354:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15358:	push	{r4, r5, r6, r7, fp, lr}
   1535c:	add	fp, sp, #16
   15360:	sub	sp, sp, #16
   15364:	mov	r4, r3
   15368:	mov	r5, r2
   1536c:	mov	r7, r1
   15370:	mov	r6, r0
   15374:	mov	r0, r1
   15378:	bl	13878 <strspn@plt+0x23f8>
   1537c:	ldrb	r1, [r6]
   15380:	cmp	r0, #0
   15384:	andne	r1, r1, #223	; 0xdf
   15388:	mov	r0, #0
   1538c:	cmp	r1, r7
   15390:	bne	153d0 <strspn@plt+0x3f50>
   15394:	cmp	r7, #0
   15398:	moveq	r0, #1
   1539c:	subeq	sp, fp, #16
   153a0:	popeq	{r4, r5, r6, r7, fp, pc}
   153a4:	ldr	r0, [fp, #20]
   153a8:	ldr	r1, [fp, #16]
   153ac:	ldr	r2, [fp, #12]
   153b0:	ldr	r3, [fp, #8]
   153b4:	str	r2, [sp]
   153b8:	str	r1, [sp, #4]
   153bc:	str	r0, [sp, #8]
   153c0:	mov	r0, r6
   153c4:	mov	r1, r5
   153c8:	mov	r2, r4
   153cc:	bl	153d8 <strspn@plt+0x3f58>
   153d0:	sub	sp, fp, #16
   153d4:	pop	{r4, r5, r6, r7, fp, pc}
   153d8:	push	{r4, r5, r6, r7, fp, lr}
   153dc:	add	fp, sp, #16
   153e0:	sub	sp, sp, #8
   153e4:	mov	r4, r3
   153e8:	mov	r5, r2
   153ec:	mov	r7, r1
   153f0:	mov	r6, r0
   153f4:	mov	r0, r1
   153f8:	bl	13878 <strspn@plt+0x23f8>
   153fc:	ldrb	r1, [r6, #1]
   15400:	cmp	r0, #0
   15404:	andne	r1, r1, #223	; 0xdf
   15408:	mov	r0, #0
   1540c:	cmp	r1, r7
   15410:	bne	15448 <strspn@plt+0x3fc8>
   15414:	cmp	r7, #0
   15418:	moveq	r0, #1
   1541c:	subeq	sp, fp, #16
   15420:	popeq	{r4, r5, r6, r7, fp, pc}
   15424:	ldr	r0, [fp, #16]
   15428:	ldr	r1, [fp, #12]
   1542c:	ldr	r3, [fp, #8]
   15430:	str	r1, [sp]
   15434:	str	r0, [sp, #4]
   15438:	mov	r0, r6
   1543c:	mov	r1, r5
   15440:	mov	r2, r4
   15444:	bl	15450 <strspn@plt+0x3fd0>
   15448:	sub	sp, fp, #16
   1544c:	pop	{r4, r5, r6, r7, fp, pc}
   15450:	push	{r4, r5, r6, r7, fp, lr}
   15454:	add	fp, sp, #16
   15458:	sub	sp, sp, #8
   1545c:	mov	r4, r3
   15460:	mov	r5, r2
   15464:	mov	r7, r1
   15468:	mov	r6, r0
   1546c:	mov	r0, r1
   15470:	bl	13878 <strspn@plt+0x23f8>
   15474:	ldrb	r1, [r6, #2]
   15478:	cmp	r0, #0
   1547c:	andne	r1, r1, #223	; 0xdf
   15480:	mov	r0, #0
   15484:	cmp	r1, r7
   15488:	bne	154b8 <strspn@plt+0x4038>
   1548c:	cmp	r7, #0
   15490:	moveq	r0, #1
   15494:	subeq	sp, fp, #16
   15498:	popeq	{r4, r5, r6, r7, fp, pc}
   1549c:	ldr	r0, [fp, #12]
   154a0:	ldr	r3, [fp, #8]
   154a4:	str	r0, [sp]
   154a8:	mov	r0, r6
   154ac:	mov	r1, r5
   154b0:	mov	r2, r4
   154b4:	bl	154c0 <strspn@plt+0x4040>
   154b8:	sub	sp, fp, #16
   154bc:	pop	{r4, r5, r6, r7, fp, pc}
   154c0:	push	{r4, r5, r6, r7, fp, lr}
   154c4:	add	fp, sp, #16
   154c8:	mov	r4, r3
   154cc:	mov	r5, r2
   154d0:	mov	r7, r1
   154d4:	mov	r6, r0
   154d8:	mov	r0, r1
   154dc:	bl	13878 <strspn@plt+0x23f8>
   154e0:	ldrb	r1, [r6, #3]
   154e4:	ldr	r3, [fp, #8]
   154e8:	cmp	r0, #0
   154ec:	andne	r1, r1, #223	; 0xdf
   154f0:	mov	r0, #0
   154f4:	cmp	r1, r7
   154f8:	popne	{r4, r5, r6, r7, fp, pc}
   154fc:	cmp	r7, #0
   15500:	beq	15518 <strspn@plt+0x4098>
   15504:	mov	r0, r6
   15508:	mov	r1, r5
   1550c:	mov	r2, r4
   15510:	pop	{r4, r5, r6, r7, fp, lr}
   15514:	b	15520 <strspn@plt+0x40a0>
   15518:	mov	r0, #1
   1551c:	pop	{r4, r5, r6, r7, fp, pc}
   15520:	push	{r4, r5, r6, r7, fp, lr}
   15524:	add	fp, sp, #16
   15528:	mov	r4, r3
   1552c:	mov	r5, r2
   15530:	mov	r7, r1
   15534:	mov	r6, r0
   15538:	mov	r0, r1
   1553c:	bl	13878 <strspn@plt+0x23f8>
   15540:	ldrb	r1, [r6, #4]
   15544:	cmp	r0, #0
   15548:	andne	r1, r1, #223	; 0xdf
   1554c:	mov	r0, #0
   15550:	cmp	r1, r7
   15554:	popne	{r4, r5, r6, r7, fp, pc}
   15558:	cmp	r7, #0
   1555c:	beq	15574 <strspn@plt+0x40f4>
   15560:	mov	r0, r6
   15564:	mov	r1, r5
   15568:	mov	r2, r4
   1556c:	pop	{r4, r5, r6, r7, fp, lr}
   15570:	b	1557c <strspn@plt+0x40fc>
   15574:	mov	r0, #1
   15578:	pop	{r4, r5, r6, r7, fp, pc}
   1557c:	push	{r4, r5, r6, sl, fp, lr}
   15580:	add	fp, sp, #16
   15584:	mov	r4, r2
   15588:	mov	r6, r1
   1558c:	mov	r5, r0
   15590:	mov	r0, r1
   15594:	bl	13878 <strspn@plt+0x23f8>
   15598:	ldrb	r1, [r5, #5]
   1559c:	cmp	r0, #0
   155a0:	andne	r1, r1, #223	; 0xdf
   155a4:	mov	r0, #0
   155a8:	cmp	r1, r6
   155ac:	popne	{r4, r5, r6, sl, fp, pc}
   155b0:	cmp	r6, #0
   155b4:	beq	155c8 <strspn@plt+0x4148>
   155b8:	mov	r0, r5
   155bc:	mov	r1, r4
   155c0:	pop	{r4, r5, r6, sl, fp, lr}
   155c4:	b	155d0 <strspn@plt+0x4150>
   155c8:	mov	r0, #1
   155cc:	pop	{r4, r5, r6, sl, fp, pc}
   155d0:	push	{r4, r5, fp, lr}
   155d4:	add	fp, sp, #8
   155d8:	mov	r5, r1
   155dc:	mov	r4, r0
   155e0:	mov	r0, r1
   155e4:	bl	13878 <strspn@plt+0x23f8>
   155e8:	ldrb	r1, [r4, #6]
   155ec:	cmp	r0, #0
   155f0:	andne	r1, r1, #223	; 0xdf
   155f4:	mov	r0, #0
   155f8:	cmp	r1, r5
   155fc:	popne	{r4, r5, fp, pc}
   15600:	cmp	r5, #0
   15604:	beq	15614 <strspn@plt+0x4194>
   15608:	mov	r0, r4
   1560c:	pop	{r4, r5, fp, lr}
   15610:	b	1561c <strspn@plt+0x419c>
   15614:	mov	r0, #1
   15618:	pop	{r4, r5, fp, pc}
   1561c:	push	{r4, sl, fp, lr}
   15620:	add	fp, sp, #8
   15624:	mov	r4, r0
   15628:	mov	r0, #0
   1562c:	bl	13878 <strspn@plt+0x23f8>
   15630:	ldrb	r1, [r4, #7]
   15634:	cmp	r0, #0
   15638:	beq	15650 <strspn@plt+0x41d0>
   1563c:	tst	r1, #223	; 0xdf
   15640:	moveq	r0, #1
   15644:	popeq	{r4, sl, fp, pc}
   15648:	mov	r0, #0
   1564c:	pop	{r4, sl, fp, pc}
   15650:	cmp	r1, #0
   15654:	moveq	r0, #1
   15658:	popeq	{r4, sl, fp, pc}
   1565c:	mov	r0, #0
   15660:	pop	{r4, sl, fp, pc}
   15664:	push	{r4, sl, fp, lr}
   15668:	add	fp, sp, #8
   1566c:	mov	r4, r1
   15670:	bl	15680 <strspn@plt+0x4200>
   15674:	str	r0, [r4]
   15678:	asr	r0, r0, #31
   1567c:	pop	{r4, sl, fp, pc}
   15680:	push	{r4, r5, r6, sl, fp, lr}
   15684:	add	fp, sp, #16
   15688:	sub	sp, sp, #8
   1568c:	mov	r4, r0
   15690:	ldrb	r0, [r0]
   15694:	sub	r0, r0, #48	; 0x30
   15698:	cmp	r0, #10
   1569c:	bcs	156d0 <strspn@plt+0x4250>
   156a0:	add	r1, sp, #4
   156a4:	mov	r0, r4
   156a8:	mov	r2, #10
   156ac:	bl	111a4 <strtol@plt>
   156b0:	cmp	r0, #64	; 0x40
   156b4:	bgt	157e0 <strspn@plt+0x4360>
   156b8:	ldr	r1, [sp, #4]
   156bc:	ldrb	r1, [r1]
   156c0:	cmp	r1, #0
   156c4:	bne	157e0 <strspn@plt+0x4360>
   156c8:	sub	sp, fp, #16
   156cc:	pop	{r4, r5, r6, sl, fp, pc}
   156d0:	movw	r0, #33128	; 0x8168
   156d4:	movt	r0, #2
   156d8:	add	r5, r0, #4
   156dc:	mov	r6, #0
   156e0:	mov	r0, r5
   156e4:	mov	r1, r4
   156e8:	bl	11198 <strcmp@plt>
   156ec:	cmp	r0, #0
   156f0:	beq	15798 <strspn@plt+0x4318>
   156f4:	add	r5, r5, #12
   156f8:	add	r6, r6, #1
   156fc:	cmp	r6, #35	; 0x23
   15700:	bcc	156e0 <strspn@plt+0x4260>
   15704:	bl	11450 <__libc_current_sigrtmin@plt>
   15708:	mov	r5, r0
   1570c:	bl	11348 <__libc_current_sigrtmax@plt>
   15710:	mov	r6, r0
   15714:	cmp	r5, #1
   15718:	blt	15738 <strspn@plt+0x42b8>
   1571c:	movw	r1, #29820	; 0x747c
   15720:	movt	r1, #1
   15724:	mov	r0, r4
   15728:	mov	r2, #5
   1572c:	bl	11468 <strncmp@plt>
   15730:	cmp	r0, #0
   15734:	beq	157a4 <strspn@plt+0x4324>
   15738:	cmp	r6, #1
   1573c:	blt	157e0 <strspn@plt+0x4360>
   15740:	movw	r1, #29826	; 0x7482
   15744:	movt	r1, #1
   15748:	mov	r0, r4
   1574c:	mov	r2, #5
   15750:	bl	11468 <strncmp@plt>
   15754:	cmp	r0, #0
   15758:	bne	157e0 <strspn@plt+0x4360>
   1575c:	add	r0, r4, #5
   15760:	mov	r1, sp
   15764:	mov	r2, #10
   15768:	bl	111a4 <strtol@plt>
   1576c:	ldr	r1, [sp]
   15770:	ldrb	r1, [r1]
   15774:	cmp	r1, #0
   15778:	bne	157e0 <strspn@plt+0x4360>
   1577c:	sub	r1, r5, r6
   15780:	cmp	r1, r0
   15784:	cmple	r0, #0
   15788:	bgt	157e0 <strspn@plt+0x4360>
   1578c:	add	r0, r0, r6
   15790:	sub	sp, fp, #16
   15794:	pop	{r4, r5, r6, sl, fp, pc}
   15798:	ldr	r0, [r5, #-4]
   1579c:	sub	sp, fp, #16
   157a0:	pop	{r4, r5, r6, sl, fp, pc}
   157a4:	add	r0, r4, #5
   157a8:	mov	r1, sp
   157ac:	mov	r2, #10
   157b0:	bl	111a4 <strtol@plt>
   157b4:	sub	r1, r6, r5
   157b8:	cmp	r0, r1
   157bc:	bgt	157e0 <strspn@plt+0x4360>
   157c0:	cmp	r0, #0
   157c4:	blt	157e0 <strspn@plt+0x4360>
   157c8:	ldr	r1, [sp]
   157cc:	ldrb	r1, [r1]
   157d0:	cmp	r1, #0
   157d4:	addeq	r0, r0, r5
   157d8:	subeq	sp, fp, #16
   157dc:	popeq	{r4, r5, r6, sl, fp, pc}
   157e0:	mvn	r0, #0
   157e4:	sub	sp, fp, #16
   157e8:	pop	{r4, r5, r6, sl, fp, pc}
   157ec:	push	{r4, r5, r6, r7, fp, lr}
   157f0:	add	fp, sp, #16
   157f4:	sub	sp, sp, #8
   157f8:	mov	r4, r1
   157fc:	mov	r5, r0
   15800:	movw	r0, #33128	; 0x8168
   15804:	movt	r0, #2
   15808:	add	r1, r0, #4
   1580c:	mov	r0, #0
   15810:	ldr	r2, [r1, #-4]
   15814:	cmp	r2, r5
   15818:	beq	1587c <strspn@plt+0x43fc>
   1581c:	add	r1, r1, #12
   15820:	add	r0, r0, #1
   15824:	cmp	r0, #35	; 0x23
   15828:	bcc	15810 <strspn@plt+0x4390>
   1582c:	bl	11450 <__libc_current_sigrtmin@plt>
   15830:	mov	r7, r0
   15834:	mvn	r6, #0
   15838:	bl	11348 <__libc_current_sigrtmax@plt>
   1583c:	cmp	r7, r5
   15840:	bgt	158c8 <strspn@plt+0x4448>
   15844:	cmp	r0, r5
   15848:	blt	158c8 <strspn@plt+0x4448>
   1584c:	sub	r1, r0, r7
   15850:	add	r1, r1, r1, lsr #31
   15854:	add	r1, r7, r1, asr #1
   15858:	cmp	r1, r5
   1585c:	bge	1588c <strspn@plt+0x440c>
   15860:	mov	r1, #88	; 0x58
   15864:	strh	r1, [r4, #4]
   15868:	movw	r1, #21586	; 0x5452
   1586c:	movt	r1, #16717	; 0x414d
   15870:	str	r1, [r4]
   15874:	mov	r7, r0
   15878:	b	158a0 <strspn@plt+0x4420>
   1587c:	mov	r0, r4
   15880:	bl	11294 <strcpy@plt>
   15884:	mov	r6, #0
   15888:	b	158c8 <strspn@plt+0x4448>
   1588c:	mov	r0, #78	; 0x4e
   15890:	strh	r0, [r4, #4]
   15894:	movw	r0, #21586	; 0x5452
   15898:	movt	r0, #18765	; 0x494d
   1589c:	str	r0, [r4]
   158a0:	subs	r0, r5, r7
   158a4:	mov	r6, #0
   158a8:	beq	158c8 <strspn@plt+0x4448>
   158ac:	str	r0, [sp]
   158b0:	add	r0, r4, #5
   158b4:	movw	r3, #29832	; 0x7488
   158b8:	movt	r3, #1
   158bc:	mov	r1, #1
   158c0:	mvn	r2, #0
   158c4:	bl	11378 <__sprintf_chk@plt>
   158c8:	mov	r0, r6
   158cc:	sub	sp, fp, #16
   158d0:	pop	{r4, r5, r6, r7, fp, pc}
   158d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   158d8:	add	fp, sp, #24
   158dc:	sub	sp, sp, #32
   158e0:	mov	r4, r2
   158e4:	mov	r8, r0
   158e8:	ldr	r6, [fp, #12]
   158ec:	ldr	r7, [fp, #8]
   158f0:	cmp	r1, #0
   158f4:	beq	1591c <strspn@plt+0x449c>
   158f8:	mov	r5, r1
   158fc:	str	r4, [sp]
   15900:	str	r3, [sp, #4]
   15904:	movw	r2, #29836	; 0x748c
   15908:	movt	r2, #1
   1590c:	mov	r0, r8
   15910:	mov	r1, #1
   15914:	mov	r3, r5
   15918:	b	15934 <strspn@plt+0x44b4>
   1591c:	str	r3, [sp]
   15920:	movw	r2, #29848	; 0x7498
   15924:	movt	r2, #1
   15928:	mov	r0, r8
   1592c:	mov	r1, #1
   15930:	mov	r3, r4
   15934:	bl	113c0 <__fprintf_chk@plt>
   15938:	movw	r1, #29855	; 0x749f
   1593c:	movt	r1, #1
   15940:	mov	r0, #0
   15944:	mov	r2, #5
   15948:	bl	1121c <dcgettext@plt>
   1594c:	mov	r3, r0
   15950:	movw	r0, #2022	; 0x7e6
   15954:	str	r0, [sp]
   15958:	movw	r2, #30573	; 0x776d
   1595c:	movt	r2, #1
   15960:	mov	r0, r8
   15964:	mov	r1, #1
   15968:	bl	113c0 <__fprintf_chk@plt>
   1596c:	movw	r4, #28453	; 0x6f25
   15970:	movt	r4, #1
   15974:	mov	r0, r4
   15978:	mov	r1, r8
   1597c:	bl	1118c <fputs_unlocked@plt>
   15980:	movw	r1, #29859	; 0x74a3
   15984:	movt	r1, #1
   15988:	mov	r0, #0
   1598c:	mov	r2, #5
   15990:	bl	1121c <dcgettext@plt>
   15994:	mov	r2, r0
   15998:	movw	r3, #30030	; 0x754e
   1599c:	movt	r3, #1
   159a0:	mov	r0, r8
   159a4:	mov	r1, #1
   159a8:	bl	113c0 <__fprintf_chk@plt>
   159ac:	mov	r0, r4
   159b0:	mov	r1, r8
   159b4:	bl	1118c <fputs_unlocked@plt>
   159b8:	cmp	r6, #9
   159bc:	bhi	159f8 <strspn@plt+0x4578>
   159c0:	add	r0, pc, #0
   159c4:	ldr	pc, [r0, r6, lsl #2]
   159c8:	strdeq	r5, [r1], -r0
   159cc:	andeq	r5, r1, r4, lsl #20
   159d0:	andeq	r5, r1, r4, lsr sl
   159d4:	andeq	r5, r1, ip, asr sl
   159d8:	andeq	r5, r1, r4, lsl #21
   159dc:	andeq	r5, r1, ip, lsr #21
   159e0:	ldrdeq	r5, [r1], -r4
   159e4:	andeq	r5, r1, ip, lsl #22
   159e8:	andeq	r5, r1, ip, lsr #23
   159ec:	andeq	r5, r1, r4, asr fp
   159f0:	sub	sp, fp, #24
   159f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159f8:	movw	r1, #30383	; 0x76af
   159fc:	movt	r1, #1
   15a00:	b	15b5c <strspn@plt+0x46dc>
   15a04:	movw	r1, #30064	; 0x7570
   15a08:	movt	r1, #1
   15a0c:	mov	r0, #0
   15a10:	mov	r2, #5
   15a14:	bl	1121c <dcgettext@plt>
   15a18:	mov	r2, r0
   15a1c:	ldr	r3, [r7]
   15a20:	mov	r0, r8
   15a24:	mov	r1, #1
   15a28:	sub	sp, fp, #24
   15a2c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a30:	b	113c0 <__fprintf_chk@plt>
   15a34:	movw	r1, #30080	; 0x7580
   15a38:	movt	r1, #1
   15a3c:	mov	r0, #0
   15a40:	mov	r2, #5
   15a44:	bl	1121c <dcgettext@plt>
   15a48:	mov	r2, r0
   15a4c:	ldr	r3, [r7]
   15a50:	ldr	r0, [r7, #4]
   15a54:	str	r0, [sp]
   15a58:	b	15b48 <strspn@plt+0x46c8>
   15a5c:	movw	r1, #30103	; 0x7597
   15a60:	movt	r1, #1
   15a64:	mov	r0, #0
   15a68:	mov	r2, #5
   15a6c:	bl	1121c <dcgettext@plt>
   15a70:	mov	r2, r0
   15a74:	ldr	r3, [r7]
   15a78:	ldmib	r7, {r0, r1}
   15a7c:	stm	sp, {r0, r1}
   15a80:	b	15b48 <strspn@plt+0x46c8>
   15a84:	movw	r1, #30131	; 0x75b3
   15a88:	movt	r1, #1
   15a8c:	mov	r0, #0
   15a90:	mov	r2, #5
   15a94:	bl	1121c <dcgettext@plt>
   15a98:	mov	r2, r0
   15a9c:	ldr	r3, [r7]
   15aa0:	ldmib	r7, {r0, r1, r7}
   15aa4:	stm	sp, {r0, r1, r7}
   15aa8:	b	15b48 <strspn@plt+0x46c8>
   15aac:	movw	r1, #30163	; 0x75d3
   15ab0:	movt	r1, #1
   15ab4:	mov	r0, #0
   15ab8:	mov	r2, #5
   15abc:	bl	1121c <dcgettext@plt>
   15ac0:	mov	r2, r0
   15ac4:	ldr	r3, [r7]
   15ac8:	ldmib	r7, {r0, r1, r6, r7}
   15acc:	stm	sp, {r0, r1, r6, r7}
   15ad0:	b	15b48 <strspn@plt+0x46c8>
   15ad4:	movw	r1, #30199	; 0x75f7
   15ad8:	movt	r1, #1
   15adc:	mov	r0, #0
   15ae0:	mov	r2, #5
   15ae4:	bl	1121c <dcgettext@plt>
   15ae8:	mov	r2, r0
   15aec:	ldr	r3, [r7]
   15af0:	ldmib	r7, {r0, r1, r6}
   15af4:	ldr	r5, [r7, #16]
   15af8:	ldr	r7, [r7, #20]
   15afc:	stm	sp, {r0, r1, r6}
   15b00:	str	r5, [sp, #12]
   15b04:	str	r7, [sp, #16]
   15b08:	b	15b48 <strspn@plt+0x46c8>
   15b0c:	movw	r1, #30239	; 0x761f
   15b10:	movt	r1, #1
   15b14:	mov	r0, #0
   15b18:	mov	r2, #5
   15b1c:	bl	1121c <dcgettext@plt>
   15b20:	mov	r2, r0
   15b24:	ldr	r3, [r7]
   15b28:	ldmib	r7, {r0, r1, r6}
   15b2c:	ldr	r5, [r7, #16]
   15b30:	ldr	r4, [r7, #20]
   15b34:	ldr	r7, [r7, #24]
   15b38:	stm	sp, {r0, r1, r6}
   15b3c:	str	r5, [sp, #12]
   15b40:	str	r4, [sp, #16]
   15b44:	str	r7, [sp, #20]
   15b48:	mov	r0, r8
   15b4c:	mov	r1, #1
   15b50:	b	15bfc <strspn@plt+0x477c>
   15b54:	movw	r1, #30331	; 0x767b
   15b58:	movt	r1, #1
   15b5c:	mov	r0, #0
   15b60:	mov	r2, #5
   15b64:	bl	1121c <dcgettext@plt>
   15b68:	mov	ip, r0
   15b6c:	ldr	r3, [r7]
   15b70:	ldr	r0, [r7, #4]
   15b74:	ldr	r1, [r7, #8]
   15b78:	ldr	r6, [r7, #12]
   15b7c:	ldr	r5, [r7, #16]
   15b80:	ldr	r4, [r7, #20]
   15b84:	ldr	r2, [r7, #24]
   15b88:	ldr	lr, [r7, #28]
   15b8c:	ldr	r7, [r7, #32]
   15b90:	stm	sp, {r0, r1, r6}
   15b94:	str	r5, [sp, #12]
   15b98:	str	r4, [sp, #16]
   15b9c:	str	r2, [sp, #20]
   15ba0:	str	lr, [sp, #24]
   15ba4:	str	r7, [sp, #28]
   15ba8:	b	15bf0 <strspn@plt+0x4770>
   15bac:	movw	r1, #30283	; 0x764b
   15bb0:	movt	r1, #1
   15bb4:	mov	r0, #0
   15bb8:	mov	r2, #5
   15bbc:	bl	1121c <dcgettext@plt>
   15bc0:	mov	ip, r0
   15bc4:	ldr	r3, [r7]
   15bc8:	ldmib	r7, {r0, r1, r6}
   15bcc:	ldr	r5, [r7, #16]
   15bd0:	ldr	r4, [r7, #20]
   15bd4:	ldr	r2, [r7, #24]
   15bd8:	ldr	r7, [r7, #28]
   15bdc:	stm	sp, {r0, r1, r6}
   15be0:	str	r5, [sp, #12]
   15be4:	str	r4, [sp, #16]
   15be8:	str	r2, [sp, #20]
   15bec:	str	r7, [sp, #24]
   15bf0:	mov	r0, r8
   15bf4:	mov	r1, #1
   15bf8:	mov	r2, ip
   15bfc:	bl	113c0 <__fprintf_chk@plt>
   15c00:	sub	sp, fp, #24
   15c04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c08:	push	{r4, sl, fp, lr}
   15c0c:	add	fp, sp, #8
   15c10:	sub	sp, sp, #8
   15c14:	mov	lr, #0
   15c18:	ldr	ip, [fp, #8]
   15c1c:	ldr	r4, [ip, lr, lsl #2]
   15c20:	add	lr, lr, #1
   15c24:	cmp	r4, #0
   15c28:	bne	15c1c <strspn@plt+0x479c>
   15c2c:	sub	r4, lr, #1
   15c30:	str	ip, [sp]
   15c34:	str	r4, [sp, #4]
   15c38:	bl	158d4 <strspn@plt+0x4454>
   15c3c:	sub	sp, fp, #8
   15c40:	pop	{r4, sl, fp, pc}
   15c44:	push	{r4, r5, fp, lr}
   15c48:	add	fp, sp, #8
   15c4c:	sub	sp, sp, #48	; 0x30
   15c50:	mov	ip, #0
   15c54:	ldr	r4, [fp, #8]
   15c58:	add	lr, sp, #8
   15c5c:	ldr	r5, [r4]
   15c60:	str	r5, [lr, ip, lsl #2]
   15c64:	cmp	r5, #0
   15c68:	beq	15c7c <strspn@plt+0x47fc>
   15c6c:	add	ip, ip, #1
   15c70:	add	r4, r4, #4
   15c74:	cmp	ip, #10
   15c78:	bcc	15c5c <strspn@plt+0x47dc>
   15c7c:	str	lr, [sp]
   15c80:	str	ip, [sp, #4]
   15c84:	bl	158d4 <strspn@plt+0x4454>
   15c88:	sub	sp, fp, #8
   15c8c:	pop	{r4, r5, fp, pc}
   15c90:	push	{fp, lr}
   15c94:	mov	fp, sp
   15c98:	sub	sp, sp, #8
   15c9c:	add	ip, fp, #8
   15ca0:	str	ip, [sp, #4]
   15ca4:	str	ip, [sp]
   15ca8:	bl	15c44 <strspn@plt+0x47c4>
   15cac:	mov	sp, fp
   15cb0:	pop	{fp, pc}
   15cb4:	push	{fp, lr}
   15cb8:	mov	fp, sp
   15cbc:	movw	r0, #33580	; 0x832c
   15cc0:	movt	r0, #2
   15cc4:	ldr	r1, [r0]
   15cc8:	movw	r0, #28453	; 0x6f25
   15ccc:	movt	r0, #1
   15cd0:	bl	1118c <fputs_unlocked@plt>
   15cd4:	movw	r1, #30443	; 0x76eb
   15cd8:	movt	r1, #1
   15cdc:	mov	r0, #0
   15ce0:	mov	r2, #5
   15ce4:	bl	1121c <dcgettext@plt>
   15ce8:	mov	r1, r0
   15cec:	movw	r2, #30463	; 0x76ff
   15cf0:	movt	r2, #1
   15cf4:	mov	r0, #1
   15cf8:	bl	1139c <__printf_chk@plt>
   15cfc:	movw	r1, #30485	; 0x7715
   15d00:	movt	r1, #1
   15d04:	mov	r0, #0
   15d08:	mov	r2, #5
   15d0c:	bl	1121c <dcgettext@plt>
   15d10:	mov	r1, r0
   15d14:	movw	r2, #27797	; 0x6c95
   15d18:	movt	r2, #1
   15d1c:	movw	r3, #28262	; 0x6e66
   15d20:	movt	r3, #1
   15d24:	mov	r0, #1
   15d28:	bl	1139c <__printf_chk@plt>
   15d2c:	movw	r1, #30505	; 0x7729
   15d30:	movt	r1, #1
   15d34:	mov	r0, #0
   15d38:	mov	r2, #5
   15d3c:	bl	1121c <dcgettext@plt>
   15d40:	mov	r1, r0
   15d44:	movw	r2, #30544	; 0x7750
   15d48:	movt	r2, #1
   15d4c:	mov	r0, #1
   15d50:	pop	{fp, lr}
   15d54:	b	1139c <__printf_chk@plt>
   15d58:	b	15d5c <strspn@plt+0x48dc>
   15d5c:	push	{r4, r5, r6, sl, fp, lr}
   15d60:	add	fp, sp, #16
   15d64:	mov	r4, r2
   15d68:	mov	r5, r1
   15d6c:	mov	r6, r0
   15d70:	bl	16580 <strspn@plt+0x5100>
   15d74:	cmp	r0, #0
   15d78:	popne	{r4, r5, r6, sl, fp, pc}
   15d7c:	cmp	r6, #0
   15d80:	beq	15d94 <strspn@plt+0x4914>
   15d84:	cmp	r5, #0
   15d88:	cmpne	r4, #0
   15d8c:	bne	15d94 <strspn@plt+0x4914>
   15d90:	pop	{r4, r5, r6, sl, fp, pc}
   15d94:	bl	16148 <strspn@plt+0x4cc8>
   15d98:	push	{fp, lr}
   15d9c:	mov	fp, sp
   15da0:	bl	161e0 <strspn@plt+0x4d60>
   15da4:	bl	15dac <strspn@plt+0x492c>
   15da8:	pop	{fp, pc}
   15dac:	cmp	r0, #0
   15db0:	bxne	lr
   15db4:	push	{fp, lr}
   15db8:	mov	fp, sp
   15dbc:	bl	16148 <strspn@plt+0x4cc8>
   15dc0:	push	{fp, lr}
   15dc4:	mov	fp, sp
   15dc8:	bl	164b4 <strspn@plt+0x5034>
   15dcc:	bl	15dac <strspn@plt+0x492c>
   15dd0:	pop	{fp, pc}
   15dd4:	b	15d98 <strspn@plt+0x4918>
   15dd8:	push	{r4, r5, fp, lr}
   15ddc:	add	fp, sp, #8
   15de0:	mov	r4, r1
   15de4:	mov	r5, r0
   15de8:	bl	16210 <strspn@plt+0x4d90>
   15dec:	cmp	r0, #0
   15df0:	popne	{r4, r5, fp, pc}
   15df4:	cmp	r5, #0
   15df8:	beq	15e08 <strspn@plt+0x4988>
   15dfc:	cmp	r4, #0
   15e00:	bne	15e08 <strspn@plt+0x4988>
   15e04:	pop	{r4, r5, fp, pc}
   15e08:	bl	16148 <strspn@plt+0x4cc8>
   15e0c:	push	{fp, lr}
   15e10:	mov	fp, sp
   15e14:	bl	164b8 <strspn@plt+0x5038>
   15e18:	bl	15dac <strspn@plt+0x492c>
   15e1c:	pop	{fp, pc}
   15e20:	push	{fp, lr}
   15e24:	mov	fp, sp
   15e28:	bl	164c8 <strspn@plt+0x5048>
   15e2c:	bl	15dac <strspn@plt+0x492c>
   15e30:	pop	{fp, pc}
   15e34:	push	{fp, lr}
   15e38:	mov	fp, sp
   15e3c:	mov	r2, r1
   15e40:	mov	r1, r0
   15e44:	mov	r0, #0
   15e48:	bl	15d5c <strspn@plt+0x48dc>
   15e4c:	pop	{fp, pc}
   15e50:	mov	r2, r1
   15e54:	mov	r1, r0
   15e58:	mov	r0, #0
   15e5c:	b	15e20 <strspn@plt+0x49a0>
   15e60:	mov	r2, #1
   15e64:	b	15e68 <strspn@plt+0x49e8>
   15e68:	push	{r4, r5, fp, lr}
   15e6c:	add	fp, sp, #8
   15e70:	mov	r4, r1
   15e74:	ldr	r5, [r1]
   15e78:	cmp	r0, #0
   15e7c:	beq	15e94 <strspn@plt+0x4a14>
   15e80:	mov	r1, #1
   15e84:	add	r1, r1, r5, lsr #1
   15e88:	adds	r5, r5, r1
   15e8c:	bcc	15eac <strspn@plt+0x4a2c>
   15e90:	bl	16148 <strspn@plt+0x4cc8>
   15e94:	cmp	r5, #0
   15e98:	bne	15eac <strspn@plt+0x4a2c>
   15e9c:	mov	r1, #64	; 0x40
   15ea0:	udiv	r5, r1, r2
   15ea4:	cmp	r2, #64	; 0x40
   15ea8:	addhi	r5, r5, #1
   15eac:	mov	r1, r5
   15eb0:	bl	15d5c <strspn@plt+0x48dc>
   15eb4:	str	r5, [r4]
   15eb8:	pop	{r4, r5, fp, pc}
   15ebc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ec0:	add	fp, sp, #24
   15ec4:	mov	r8, r1
   15ec8:	ldr	r6, [r1]
   15ecc:	add	r1, r6, r6, asr #1
   15ed0:	cmp	r1, r6
   15ed4:	mvnvs	r1, #-2147483648	; 0x80000000
   15ed8:	cmp	r1, r3
   15edc:	mov	r5, r1
   15ee0:	movgt	r5, r3
   15ee4:	cmn	r3, #1
   15ee8:	movle	r5, r1
   15eec:	ldr	r4, [fp, #8]
   15ef0:	cmn	r4, #1
   15ef4:	ble	15f1c <strspn@plt+0x4a9c>
   15ef8:	cmp	r4, #0
   15efc:	beq	15f70 <strspn@plt+0x4af0>
   15f00:	cmn	r5, #1
   15f04:	ble	15f44 <strspn@plt+0x4ac4>
   15f08:	mvn	r7, #-2147483648	; 0x80000000
   15f0c:	udiv	r1, r7, r4
   15f10:	cmp	r1, r5
   15f14:	bge	15f70 <strspn@plt+0x4af0>
   15f18:	b	15f80 <strspn@plt+0x4b00>
   15f1c:	cmn	r5, #1
   15f20:	ble	15f60 <strspn@plt+0x4ae0>
   15f24:	cmn	r4, #1
   15f28:	beq	15f70 <strspn@plt+0x4af0>
   15f2c:	mov	r1, #-2147483648	; 0x80000000
   15f30:	sdiv	r1, r1, r4
   15f34:	mvn	r7, #-2147483648	; 0x80000000
   15f38:	cmp	r1, r5
   15f3c:	bge	15f70 <strspn@plt+0x4af0>
   15f40:	b	15f80 <strspn@plt+0x4b00>
   15f44:	beq	15f70 <strspn@plt+0x4af0>
   15f48:	mov	r1, #-2147483648	; 0x80000000
   15f4c:	sdiv	r1, r1, r5
   15f50:	mvn	r7, #-2147483648	; 0x80000000
   15f54:	cmp	r1, r4
   15f58:	bge	15f70 <strspn@plt+0x4af0>
   15f5c:	b	15f80 <strspn@plt+0x4b00>
   15f60:	mvn	r7, #-2147483648	; 0x80000000
   15f64:	sdiv	r1, r7, r4
   15f68:	cmp	r5, r1
   15f6c:	blt	15f80 <strspn@plt+0x4b00>
   15f70:	mul	r1, r5, r4
   15f74:	mov	r7, #64	; 0x40
   15f78:	cmp	r1, #63	; 0x3f
   15f7c:	bgt	15f88 <strspn@plt+0x4b08>
   15f80:	sdiv	r5, r7, r4
   15f84:	mul	r1, r5, r4
   15f88:	cmp	r0, #0
   15f8c:	moveq	r7, #0
   15f90:	streq	r7, [r8]
   15f94:	sub	r7, r5, r6
   15f98:	cmp	r7, r2
   15f9c:	bge	16048 <strspn@plt+0x4bc8>
   15fa0:	add	r5, r6, r2
   15fa4:	mov	r1, #0
   15fa8:	cmp	r5, r3
   15fac:	mov	r2, #0
   15fb0:	movwgt	r2, #1
   15fb4:	cmn	r3, #1
   15fb8:	movwgt	r1, #1
   15fbc:	cmp	r5, r6
   15fc0:	bvs	16030 <strspn@plt+0x4bb0>
   15fc4:	ands	r1, r1, r2
   15fc8:	bne	16030 <strspn@plt+0x4bb0>
   15fcc:	cmn	r4, #1
   15fd0:	ble	15ff8 <strspn@plt+0x4b78>
   15fd4:	cmp	r4, #0
   15fd8:	beq	16044 <strspn@plt+0x4bc4>
   15fdc:	cmn	r5, #1
   15fe0:	ble	1601c <strspn@plt+0x4b9c>
   15fe4:	mvn	r1, #-2147483648	; 0x80000000
   15fe8:	udiv	r1, r1, r4
   15fec:	cmp	r1, r5
   15ff0:	bge	16044 <strspn@plt+0x4bc4>
   15ff4:	b	16030 <strspn@plt+0x4bb0>
   15ff8:	cmn	r5, #1
   15ffc:	ble	16034 <strspn@plt+0x4bb4>
   16000:	cmn	r4, #1
   16004:	beq	16044 <strspn@plt+0x4bc4>
   16008:	mov	r1, #-2147483648	; 0x80000000
   1600c:	sdiv	r1, r1, r4
   16010:	cmp	r1, r5
   16014:	bge	16044 <strspn@plt+0x4bc4>
   16018:	b	16030 <strspn@plt+0x4bb0>
   1601c:	beq	16044 <strspn@plt+0x4bc4>
   16020:	mov	r1, #-2147483648	; 0x80000000
   16024:	sdiv	r1, r1, r5
   16028:	cmp	r1, r4
   1602c:	bge	16044 <strspn@plt+0x4bc4>
   16030:	bl	16148 <strspn@plt+0x4cc8>
   16034:	mvn	r1, #-2147483648	; 0x80000000
   16038:	sdiv	r1, r1, r4
   1603c:	cmp	r5, r1
   16040:	blt	16030 <strspn@plt+0x4bb0>
   16044:	mul	r1, r5, r4
   16048:	bl	15dd8 <strspn@plt+0x4958>
   1604c:	str	r5, [r8]
   16050:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16054:	mov	r1, #1
   16058:	b	1605c <strspn@plt+0x4bdc>
   1605c:	push	{fp, lr}
   16060:	mov	fp, sp
   16064:	bl	1618c <strspn@plt+0x4d0c>
   16068:	bl	15dac <strspn@plt+0x492c>
   1606c:	pop	{fp, pc}
   16070:	mov	r1, #1
   16074:	b	16078 <strspn@plt+0x4bf8>
   16078:	push	{fp, lr}
   1607c:	mov	fp, sp
   16080:	bl	164c4 <strspn@plt+0x5044>
   16084:	bl	15dac <strspn@plt+0x492c>
   16088:	pop	{fp, pc}
   1608c:	push	{r4, r5, r6, sl, fp, lr}
   16090:	add	fp, sp, #16
   16094:	mov	r4, r1
   16098:	mov	r5, r0
   1609c:	mov	r0, r1
   160a0:	bl	15d98 <strspn@plt+0x4918>
   160a4:	mov	r6, r0
   160a8:	mov	r1, r5
   160ac:	mov	r2, r4
   160b0:	bl	111ec <memcpy@plt>
   160b4:	mov	r0, r6
   160b8:	pop	{r4, r5, r6, sl, fp, pc}
   160bc:	push	{r4, r5, r6, sl, fp, lr}
   160c0:	add	fp, sp, #16
   160c4:	mov	r4, r1
   160c8:	mov	r5, r0
   160cc:	mov	r0, r1
   160d0:	bl	15dc0 <strspn@plt+0x4940>
   160d4:	mov	r6, r0
   160d8:	mov	r1, r5
   160dc:	mov	r2, r4
   160e0:	bl	111ec <memcpy@plt>
   160e4:	mov	r0, r6
   160e8:	pop	{r4, r5, r6, sl, fp, pc}
   160ec:	push	{r4, r5, r6, sl, fp, lr}
   160f0:	add	fp, sp, #16
   160f4:	mov	r4, r1
   160f8:	mov	r5, r0
   160fc:	add	r0, r1, #1
   16100:	bl	15dc0 <strspn@plt+0x4940>
   16104:	mov	r6, r0
   16108:	mov	r0, #0
   1610c:	strb	r0, [r6, r4]
   16110:	mov	r0, r6
   16114:	mov	r1, r5
   16118:	mov	r2, r4
   1611c:	bl	111ec <memcpy@plt>
   16120:	mov	r0, r6
   16124:	pop	{r4, r5, r6, sl, fp, pc}
   16128:	push	{r4, sl, fp, lr}
   1612c:	add	fp, sp, #8
   16130:	mov	r4, r0
   16134:	bl	1133c <strlen@plt>
   16138:	add	r1, r0, #1
   1613c:	mov	r0, r4
   16140:	pop	{r4, sl, fp, lr}
   16144:	b	1608c <strspn@plt+0x4c0c>
   16148:	push	{fp, lr}
   1614c:	mov	fp, sp
   16150:	movw	r0, #33060	; 0x8124
   16154:	movt	r0, #2
   16158:	ldr	r4, [r0]
   1615c:	movw	r1, #30620	; 0x779c
   16160:	movt	r1, #1
   16164:	mov	r0, #0
   16168:	mov	r2, #5
   1616c:	bl	1121c <dcgettext@plt>
   16170:	mov	r3, r0
   16174:	movw	r2, #29570	; 0x7382
   16178:	movt	r2, #1
   1617c:	mov	r0, r4
   16180:	mov	r1, #0
   16184:	bl	112c4 <error@plt>
   16188:	bl	11474 <abort@plt>
   1618c:	clz	r2, r1
   16190:	lsr	r2, r2, #5
   16194:	clz	r3, r0
   16198:	lsr	r3, r3, #5
   1619c:	orrs	r2, r3, r2
   161a0:	movwne	r1, #1
   161a4:	movwne	r0, #1
   161a8:	cmp	r1, #0
   161ac:	beq	161dc <strspn@plt+0x4d5c>
   161b0:	mvn	r2, #-2147483648	; 0x80000000
   161b4:	udiv	r2, r2, r1
   161b8:	cmp	r2, r0
   161bc:	bcs	161dc <strspn@plt+0x4d5c>
   161c0:	push	{fp, lr}
   161c4:	mov	fp, sp
   161c8:	bl	1136c <__errno_location@plt>
   161cc:	mov	r1, #12
   161d0:	str	r1, [r0]
   161d4:	mov	r0, #0
   161d8:	pop	{fp, pc}
   161dc:	b	11180 <calloc@plt>
   161e0:	cmp	r0, #0
   161e4:	movweq	r0, #1
   161e8:	cmn	r0, #1
   161ec:	ble	161f4 <strspn@plt+0x4d74>
   161f0:	b	112dc <malloc@plt>
   161f4:	push	{fp, lr}
   161f8:	mov	fp, sp
   161fc:	bl	1136c <__errno_location@plt>
   16200:	mov	r1, #12
   16204:	str	r1, [r0]
   16208:	mov	r0, #0
   1620c:	pop	{fp, pc}
   16210:	push	{fp, lr}
   16214:	mov	fp, sp
   16218:	cmp	r0, #0
   1621c:	beq	16238 <strspn@plt+0x4db8>
   16220:	cmp	r1, #0
   16224:	beq	16244 <strspn@plt+0x4dc4>
   16228:	cmn	r1, #1
   1622c:	ble	16250 <strspn@plt+0x4dd0>
   16230:	pop	{fp, lr}
   16234:	b	11228 <realloc@plt>
   16238:	mov	r0, r1
   1623c:	pop	{fp, lr}
   16240:	b	161e0 <strspn@plt+0x4d60>
   16244:	bl	139f0 <strspn@plt+0x2570>
   16248:	mov	r0, #0
   1624c:	pop	{fp, pc}
   16250:	bl	1136c <__errno_location@plt>
   16254:	mov	r1, #12
   16258:	str	r1, [r0]
   1625c:	mov	r0, #0
   16260:	pop	{fp, pc}
   16264:	push	{r4, r5, r6, sl, fp, lr}
   16268:	add	fp, sp, #16
   1626c:	mov	r4, r0
   16270:	bl	112a0 <__fpending@plt>
   16274:	mov	r5, r0
   16278:	mov	r0, r4
   1627c:	bl	112ac <ferror_unlocked@plt>
   16280:	mov	r6, r0
   16284:	mov	r0, r4
   16288:	bl	162ec <strspn@plt+0x4e6c>
   1628c:	cmp	r6, #0
   16290:	beq	162b0 <strspn@plt+0x4e30>
   16294:	mvn	r4, #0
   16298:	cmp	r0, #0
   1629c:	bne	162e4 <strspn@plt+0x4e64>
   162a0:	bl	1136c <__errno_location@plt>
   162a4:	mov	r1, #0
   162a8:	str	r1, [r0]
   162ac:	b	162e4 <strspn@plt+0x4e64>
   162b0:	cmp	r0, #0
   162b4:	mov	r4, r0
   162b8:	mvnne	r4, #0
   162bc:	cmp	r5, #0
   162c0:	bne	162e4 <strspn@plt+0x4e64>
   162c4:	cmp	r0, #0
   162c8:	beq	162e4 <strspn@plt+0x4e64>
   162cc:	bl	1136c <__errno_location@plt>
   162d0:	ldr	r0, [r0]
   162d4:	subs	r4, r0, #9
   162d8:	mvnne	r4, #0
   162dc:	mov	r0, r4
   162e0:	pop	{r4, r5, r6, sl, fp, pc}
   162e4:	mov	r0, r4
   162e8:	pop	{r4, r5, r6, sl, fp, pc}
   162ec:	push	{r4, r5, fp, lr}
   162f0:	add	fp, sp, #8
   162f4:	sub	sp, sp, #8
   162f8:	mov	r4, r0
   162fc:	bl	113b4 <fileno@plt>
   16300:	cmn	r0, #1
   16304:	ble	1637c <strspn@plt+0x4efc>
   16308:	mov	r0, r4
   1630c:	bl	11300 <__freading@plt>
   16310:	cmp	r0, #0
   16314:	beq	16340 <strspn@plt+0x4ec0>
   16318:	mov	r0, r4
   1631c:	bl	113b4 <fileno@plt>
   16320:	mov	r1, #1
   16324:	str	r1, [sp]
   16328:	mov	r2, #0
   1632c:	mov	r3, #0
   16330:	bl	1127c <lseek64@plt>
   16334:	and	r0, r0, r1
   16338:	cmn	r0, #1
   1633c:	beq	1637c <strspn@plt+0x4efc>
   16340:	mov	r0, r4
   16344:	bl	1638c <strspn@plt+0x4f0c>
   16348:	cmp	r0, #0
   1634c:	beq	1637c <strspn@plt+0x4efc>
   16350:	bl	1136c <__errno_location@plt>
   16354:	ldr	r5, [r0]
   16358:	mov	r0, r4
   1635c:	bl	113d8 <fclose@plt>
   16360:	cmp	r5, #0
   16364:	beq	16374 <strspn@plt+0x4ef4>
   16368:	bl	1136c <__errno_location@plt>
   1636c:	str	r5, [r0]
   16370:	mvn	r0, #0
   16374:	sub	sp, fp, #8
   16378:	pop	{r4, r5, fp, pc}
   1637c:	mov	r0, r4
   16380:	sub	sp, fp, #8
   16384:	pop	{r4, r5, fp, lr}
   16388:	b	113d8 <fclose@plt>
   1638c:	push	{r4, sl, fp, lr}
   16390:	add	fp, sp, #8
   16394:	mov	r4, r0
   16398:	cmp	r0, #0
   1639c:	beq	163b4 <strspn@plt+0x4f34>
   163a0:	mov	r0, r4
   163a4:	bl	11300 <__freading@plt>
   163a8:	cmp	r0, #0
   163ac:	movne	r0, r4
   163b0:	blne	163c0 <strspn@plt+0x4f40>
   163b4:	mov	r0, r4
   163b8:	pop	{r4, sl, fp, lr}
   163bc:	b	111b0 <fflush@plt>
   163c0:	ldrb	r1, [r0, #1]
   163c4:	tst	r1, #1
   163c8:	bxeq	lr
   163cc:	push	{fp, lr}
   163d0:	mov	fp, sp
   163d4:	sub	sp, sp, #8
   163d8:	mov	r1, #1
   163dc:	str	r1, [sp]
   163e0:	mov	r2, #0
   163e4:	mov	r3, #0
   163e8:	bl	163f4 <strspn@plt+0x4f74>
   163ec:	mov	sp, fp
   163f0:	pop	{fp, pc}
   163f4:	push	{r4, r5, r6, r7, fp, lr}
   163f8:	add	fp, sp, #16
   163fc:	sub	sp, sp, #8
   16400:	mov	r5, r3
   16404:	mov	r6, r2
   16408:	mov	r4, r0
   1640c:	ldr	r0, [r0, #4]
   16410:	ldr	r1, [r4, #8]
   16414:	cmp	r1, r0
   16418:	bne	16434 <strspn@plt+0x4fb4>
   1641c:	ldrd	r0, [r4, #16]
   16420:	cmp	r1, r0
   16424:	bne	16434 <strspn@plt+0x4fb4>
   16428:	ldr	r0, [r4, #36]	; 0x24
   1642c:	cmp	r0, #0
   16430:	beq	1644c <strspn@plt+0x4fcc>
   16434:	mov	r0, r4
   16438:	mov	r2, r6
   1643c:	mov	r3, r5
   16440:	sub	sp, fp, #16
   16444:	pop	{r4, r5, r6, r7, fp, lr}
   16448:	b	113e4 <fseeko64@plt>
   1644c:	ldr	r7, [fp, #8]
   16450:	mov	r0, r4
   16454:	bl	113b4 <fileno@plt>
   16458:	str	r7, [sp]
   1645c:	mov	r2, r6
   16460:	mov	r3, r5
   16464:	bl	1127c <lseek64@plt>
   16468:	and	r2, r0, r1
   1646c:	cmn	r2, #1
   16470:	mvneq	r0, #0
   16474:	subeq	sp, fp, #16
   16478:	popeq	{r4, r5, r6, r7, fp, pc}
   1647c:	strd	r0, [r4, #80]	; 0x50
   16480:	ldr	r0, [r4]
   16484:	bic	r0, r0, #16
   16488:	str	r0, [r4]
   1648c:	mov	r0, #0
   16490:	sub	sp, fp, #16
   16494:	pop	{r4, r5, r6, r7, fp, pc}
   16498:	push	{fp, lr}
   1649c:	mov	fp, sp
   164a0:	bl	1136c <__errno_location@plt>
   164a4:	mov	r1, #12
   164a8:	str	r1, [r0]
   164ac:	mov	r0, #0
   164b0:	pop	{fp, pc}
   164b4:	b	161e0 <strspn@plt+0x4d60>
   164b8:	cmp	r1, #0
   164bc:	orreq	r1, r1, #1
   164c0:	b	16210 <strspn@plt+0x4d90>
   164c4:	b	1618c <strspn@plt+0x4d0c>
   164c8:	clz	r3, r2
   164cc:	lsr	ip, r3, #5
   164d0:	clz	r3, r1
   164d4:	lsr	r3, r3, #5
   164d8:	orrs	r3, r3, ip
   164dc:	movwne	r1, #1
   164e0:	movwne	r2, #1
   164e4:	b	16580 <strspn@plt+0x5100>
   164e8:	push	{fp, lr}
   164ec:	mov	fp, sp
   164f0:	mov	r0, #14
   164f4:	bl	1142c <nl_langinfo@plt>
   164f8:	movw	r1, #28454	; 0x6f26
   164fc:	movt	r1, #1
   16500:	cmp	r0, #0
   16504:	movne	r1, r0
   16508:	ldrb	r2, [r1]
   1650c:	movw	r0, #30637	; 0x77ad
   16510:	movt	r0, #1
   16514:	cmp	r2, #0
   16518:	movne	r0, r1
   1651c:	pop	{fp, pc}
   16520:	push	{r4, r5, r6, r7, fp, lr}
   16524:	add	fp, sp, #16
   16528:	sub	sp, sp, #8
   1652c:	mov	r7, r2
   16530:	mov	r4, r1
   16534:	add	r5, sp, #4
   16538:	cmp	r0, #0
   1653c:	movne	r5, r0
   16540:	mov	r0, r5
   16544:	bl	112b8 <mbrtowc@plt>
   16548:	mov	r6, r0
   1654c:	cmp	r7, #0
   16550:	beq	16574 <strspn@plt+0x50f4>
   16554:	cmn	r6, #2
   16558:	bcc	16574 <strspn@plt+0x50f4>
   1655c:	mov	r0, #0
   16560:	bl	165bc <strspn@plt+0x513c>
   16564:	cmp	r0, #0
   16568:	ldrbeq	r0, [r4]
   1656c:	streq	r0, [r5]
   16570:	moveq	r6, #1
   16574:	mov	r0, r6
   16578:	sub	sp, fp, #16
   1657c:	pop	{r4, r5, r6, r7, fp, pc}
   16580:	cmp	r2, #0
   16584:	beq	165b4 <strspn@plt+0x5134>
   16588:	mvn	r3, #0
   1658c:	udiv	r3, r3, r2
   16590:	cmp	r3, r1
   16594:	bcs	165b4 <strspn@plt+0x5134>
   16598:	push	{fp, lr}
   1659c:	mov	fp, sp
   165a0:	bl	1136c <__errno_location@plt>
   165a4:	mov	r1, #12
   165a8:	str	r1, [r0]
   165ac:	mov	r0, #0
   165b0:	pop	{fp, pc}
   165b4:	mul	r1, r2, r1
   165b8:	b	16210 <strspn@plt+0x4d90>
   165bc:	push	{r4, sl, fp, lr}
   165c0:	add	fp, sp, #8
   165c4:	sub	sp, sp, #264	; 0x108
   165c8:	add	r1, sp, #7
   165cc:	movw	r2, #257	; 0x101
   165d0:	bl	16620 <strspn@plt+0x51a0>
   165d4:	mov	r4, #0
   165d8:	cmp	r0, #0
   165dc:	bne	16614 <strspn@plt+0x5194>
   165e0:	add	r0, sp, #7
   165e4:	movw	r1, #30643	; 0x77b3
   165e8:	movt	r1, #1
   165ec:	bl	11198 <strcmp@plt>
   165f0:	cmp	r0, #0
   165f4:	beq	16614 <strspn@plt+0x5194>
   165f8:	add	r0, sp, #7
   165fc:	movw	r1, #30645	; 0x77b5
   16600:	movt	r1, #1
   16604:	bl	11198 <strcmp@plt>
   16608:	mov	r4, r0
   1660c:	cmp	r0, #0
   16610:	movwne	r4, #1
   16614:	mov	r0, r4
   16618:	sub	sp, fp, #8
   1661c:	pop	{r4, sl, fp, pc}
   16620:	b	16624 <strspn@plt+0x51a4>
   16624:	push	{r4, r5, r6, r7, fp, lr}
   16628:	add	fp, sp, #16
   1662c:	mov	r6, r2
   16630:	mov	r4, r1
   16634:	bl	166c0 <strspn@plt+0x5240>
   16638:	cmp	r0, #0
   1663c:	beq	1666c <strspn@plt+0x51ec>
   16640:	mov	r7, r0
   16644:	bl	1133c <strlen@plt>
   16648:	cmp	r0, r6
   1664c:	bcs	1668c <strspn@plt+0x520c>
   16650:	add	r2, r0, #1
   16654:	mov	r0, r4
   16658:	mov	r1, r7
   1665c:	bl	111ec <memcpy@plt>
   16660:	mov	r5, #0
   16664:	mov	r0, r5
   16668:	pop	{r4, r5, r6, r7, fp, pc}
   1666c:	mov	r5, #22
   16670:	cmp	r6, #0
   16674:	movne	r0, #0
   16678:	strbne	r0, [r4]
   1667c:	movne	r0, r5
   16680:	popne	{r4, r5, r6, r7, fp, pc}
   16684:	mov	r0, r5
   16688:	pop	{r4, r5, r6, r7, fp, pc}
   1668c:	mov	r5, #34	; 0x22
   16690:	cmp	r6, #0
   16694:	beq	166b4 <strspn@plt+0x5234>
   16698:	sub	r6, r6, #1
   1669c:	mov	r0, r4
   166a0:	mov	r1, r7
   166a4:	mov	r2, r6
   166a8:	bl	111ec <memcpy@plt>
   166ac:	mov	r0, #0
   166b0:	strb	r0, [r4, r6]
   166b4:	mov	r0, r5
   166b8:	pop	{r4, r5, r6, r7, fp, pc}
   166bc:	b	166c0 <strspn@plt+0x5240>
   166c0:	mov	r1, #0
   166c4:	b	113fc <setlocale@plt>
   166c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   166cc:	mov	r7, r0
   166d0:	ldr	r6, [pc, #72]	; 16720 <strspn@plt+0x52a0>
   166d4:	ldr	r5, [pc, #72]	; 16724 <strspn@plt+0x52a4>
   166d8:	add	r6, pc, r6
   166dc:	add	r5, pc, r5
   166e0:	sub	r6, r6, r5
   166e4:	mov	r8, r1
   166e8:	mov	r9, r2
   166ec:	bl	11160 <calloc@plt-0x20>
   166f0:	asrs	r6, r6, #2
   166f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   166f8:	mov	r4, #0
   166fc:	add	r4, r4, #1
   16700:	ldr	r3, [r5], #4
   16704:	mov	r2, r9
   16708:	mov	r1, r8
   1670c:	mov	r0, r7
   16710:	blx	r3
   16714:	cmp	r6, r4
   16718:	bne	166fc <strspn@plt+0x527c>
   1671c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16720:	andeq	r1, r1, ip, lsr #16
   16724:	andeq	r1, r1, r4, lsr #16
   16728:	bx	lr
   1672c:	ldr	r3, [pc, #12]	; 16740 <strspn@plt+0x52c0>
   16730:	mov	r1, #0
   16734:	add	r3, pc, r3
   16738:	ldr	r2, [r3]
   1673c:	b	11384 <__cxa_atexit@plt>
   16740:	andeq	r1, r1, r0, ror #19

Disassembly of section .fini:

00016744 <.fini>:
   16744:	push	{r3, lr}
   16748:	pop	{r3, pc}
