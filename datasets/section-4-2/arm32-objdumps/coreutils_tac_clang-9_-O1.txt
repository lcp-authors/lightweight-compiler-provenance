
../repos/coreutils/src/tac:     file format elf32-littlearm


Disassembly of section .init:

0001126c <.init>:
   1126c:	push	{r3, lr}
   11270:	bl	11628 <__mempcpy_chk@plt+0x48>
   11274:	pop	{r3, pc}

Disassembly of section .plt:

00011278 <pthread_mutex_unlock@plt-0x14>:
   11278:	push	{lr}		; (str lr, [sp, #-4]!)
   1127c:	ldr	lr, [pc, #4]	; 11288 <pthread_mutex_unlock@plt-0x4>
   11280:	add	lr, pc, lr
   11284:	ldr	pc, [lr, #8]!
   11288:	andeq	r2, r2, r8, ror sp

0001128c <pthread_mutex_unlock@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #139264	; 0x22000
   11294:	ldr	pc, [ip, #3448]!	; 0xd78

00011298 <fdopen@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #139264	; 0x22000
   112a0:	ldr	pc, [ip, #3440]!	; 0xd70

000112a4 <calloc@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #139264	; 0x22000
   112ac:	ldr	pc, [ip, #3432]!	; 0xd68

000112b0 <fputs_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #139264	; 0x22000
   112b8:	ldr	pc, [ip, #3424]!	; 0xd60

000112bc <wctype@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #139264	; 0x22000
   112c4:	ldr	pc, [ip, #3416]!	; 0xd58

000112c8 <raise@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #139264	; 0x22000
   112d0:	ldr	pc, [ip, #3408]!	; 0xd50

000112d4 <wcrtomb@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #139264	; 0x22000
   112dc:	ldr	pc, [ip, #3400]!	; 0xd48

000112e0 <iswctype@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #139264	; 0x22000
   112e8:	ldr	pc, [ip, #3392]!	; 0xd40

000112ec <strcmp@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #139264	; 0x22000
   112f4:	ldr	pc, [ip, #3384]!	; 0xd38

000112f8 <read@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #139264	; 0x22000
   11300:	ldr	pc, [ip, #3376]!	; 0xd30

00011304 <pthread_mutex_destroy@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #139264	; 0x22000
   1130c:	ldr	pc, [ip, #3368]!	; 0xd28

00011310 <fflush@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #139264	; 0x22000
   11318:	ldr	pc, [ip, #3360]!	; 0xd20

0001131c <memmove@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #139264	; 0x22000
   11324:	ldr	pc, [ip, #3352]!	; 0xd18

00011328 <free@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #139264	; 0x22000
   11330:	ldr	pc, [ip, #3344]!	; 0xd10

00011334 <pthread_mutex_lock@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #139264	; 0x22000
   1133c:	ldr	pc, [ip, #3336]!	; 0xd08

00011340 <_exit@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #139264	; 0x22000
   11348:	ldr	pc, [ip, #3328]!	; 0xd00

0001134c <memcpy@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #139264	; 0x22000
   11354:	ldr	pc, [ip, #3320]!	; 0xcf8

00011358 <tolower@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #139264	; 0x22000
   11360:	ldr	pc, [ip, #3312]!	; 0xcf0

00011364 <pthread_mutex_init@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #139264	; 0x22000
   1136c:	ldr	pc, [ip, #3304]!	; 0xce8

00011370 <towlower@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #139264	; 0x22000
   11378:	ldr	pc, [ip, #3296]!	; 0xce0

0001137c <mbsinit@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #139264	; 0x22000
   11384:	ldr	pc, [ip, #3288]!	; 0xcd8

00011388 <ftruncate64@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #139264	; 0x22000
   11390:	ldr	pc, [ip, #3280]!	; 0xcd0

00011394 <fwrite_unlocked@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #139264	; 0x22000
   1139c:	ldr	pc, [ip, #3272]!	; 0xcc8

000113a0 <dcgettext@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #139264	; 0x22000
   113a8:	ldr	pc, [ip, #3264]!	; 0xcc0

000113ac <unlink@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #139264	; 0x22000
   113b4:	ldr	pc, [ip, #3256]!	; 0xcb8

000113b8 <realloc@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #139264	; 0x22000
   113c0:	ldr	pc, [ip, #3248]!	; 0xcb0

000113c4 <textdomain@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #139264	; 0x22000
   113cc:	ldr	pc, [ip, #3240]!	; 0xca8

000113d0 <fflush_unlocked@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #139264	; 0x22000
   113d8:	ldr	pc, [ip, #3232]!	; 0xca0

000113dc <iswprint@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #139264	; 0x22000
   113e4:	ldr	pc, [ip, #3224]!	; 0xc98

000113e8 <mkostemp64@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #139264	; 0x22000
   113f0:	ldr	pc, [ip, #3216]!	; 0xc90

000113f4 <fwrite@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #139264	; 0x22000
   113fc:	ldr	pc, [ip, #3208]!	; 0xc88

00011400 <lseek64@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #139264	; 0x22000
   11408:	ldr	pc, [ip, #3200]!	; 0xc80

0001140c <__ctype_get_mb_cur_max@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #139264	; 0x22000
   11414:	ldr	pc, [ip, #3192]!	; 0xc78

00011418 <__fpending@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #139264	; 0x22000
   11420:	ldr	pc, [ip, #3184]!	; 0xc70

00011424 <ferror_unlocked@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #139264	; 0x22000
   1142c:	ldr	pc, [ip, #3176]!	; 0xc68

00011430 <mbrtowc@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #139264	; 0x22000
   11438:	ldr	pc, [ip, #3168]!	; 0xc60

0001143c <error@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #139264	; 0x22000
   11444:	ldr	pc, [ip, #3160]!	; 0xc58

00011448 <open64@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #139264	; 0x22000
   11450:	ldr	pc, [ip, #3152]!	; 0xc50

00011454 <getenv@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #139264	; 0x22000
   1145c:	ldr	pc, [ip, #3144]!	; 0xc48

00011460 <mkstemp64@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #139264	; 0x22000
   11468:	ldr	pc, [ip, #3136]!	; 0xc40

0001146c <malloc@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #139264	; 0x22000
   11474:	ldr	pc, [ip, #3128]!	; 0xc38

00011478 <__libc_start_main@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #139264	; 0x22000
   11480:	ldr	pc, [ip, #3120]!	; 0xc30

00011484 <__freading@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #139264	; 0x22000
   1148c:	ldr	pc, [ip, #3112]!	; 0xc28

00011490 <__gmon_start__@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #139264	; 0x22000
   11498:	ldr	pc, [ip, #3104]!	; 0xc20

0001149c <getopt_long@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #139264	; 0x22000
   114a4:	ldr	pc, [ip, #3096]!	; 0xc18

000114a8 <__ctype_b_loc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #139264	; 0x22000
   114b0:	ldr	pc, [ip, #3088]!	; 0xc10

000114b4 <exit@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #139264	; 0x22000
   114bc:	ldr	pc, [ip, #3080]!	; 0xc08

000114c0 <bcmp@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #139264	; 0x22000
   114c8:	ldr	pc, [ip, #3072]!	; 0xc00

000114cc <strlen@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #139264	; 0x22000
   114d4:	ldr	pc, [ip, #3064]!	; 0xbf8

000114d8 <__errno_location@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #139264	; 0x22000
   114e0:	ldr	pc, [ip, #3056]!	; 0xbf0

000114e4 <iswalnum@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #139264	; 0x22000
   114ec:	ldr	pc, [ip, #3048]!	; 0xbe8

000114f0 <__cxa_atexit@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #139264	; 0x22000
   114f8:	ldr	pc, [ip, #3040]!	; 0xbe0

000114fc <memset@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #139264	; 0x22000
   11504:	ldr	pc, [ip, #3032]!	; 0xbd8

00011508 <btowc@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #139264	; 0x22000
   11510:	ldr	pc, [ip, #3024]!	; 0xbd0

00011514 <__printf_chk@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #139264	; 0x22000
   1151c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011520 <fileno@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #139264	; 0x22000
   11528:	ldr	pc, [ip, #3008]!	; 0xbc0

0001152c <__fprintf_chk@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #139264	; 0x22000
   11534:	ldr	pc, [ip, #3000]!	; 0xbb8

00011538 <fclose@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #139264	; 0x22000
   11540:	ldr	pc, [ip, #2992]!	; 0xbb0

00011544 <fseeko64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #139264	; 0x22000
   1154c:	ldr	pc, [ip, #2984]!	; 0xba8

00011550 <fcntl64@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #139264	; 0x22000
   11558:	ldr	pc, [ip, #2976]!	; 0xba0

0001155c <setlocale@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #139264	; 0x22000
   11564:	ldr	pc, [ip, #2968]!	; 0xb98

00011568 <toupper@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #139264	; 0x22000
   11570:	ldr	pc, [ip, #2960]!	; 0xb90

00011574 <strrchr@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #139264	; 0x22000
   1157c:	ldr	pc, [ip, #2952]!	; 0xb88

00011580 <nl_langinfo@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #139264	; 0x22000
   11588:	ldr	pc, [ip, #2944]!	; 0xb80

0001158c <clearerr_unlocked@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #139264	; 0x22000
   11594:	ldr	pc, [ip, #2936]!	; 0xb78

00011598 <bindtextdomain@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #139264	; 0x22000
   115a0:	ldr	pc, [ip, #2928]!	; 0xb70

000115a4 <isatty@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #139264	; 0x22000
   115ac:	ldr	pc, [ip, #2920]!	; 0xb68

000115b0 <towupper@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #139264	; 0x22000
   115b8:	ldr	pc, [ip, #2912]!	; 0xb60

000115bc <strncmp@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #139264	; 0x22000
   115c4:	ldr	pc, [ip, #2904]!	; 0xb58

000115c8 <abort@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #139264	; 0x22000
   115d0:	ldr	pc, [ip, #2896]!	; 0xb50

000115d4 <close@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #139264	; 0x22000
   115dc:	ldr	pc, [ip, #2888]!	; 0xb48

000115e0 <__mempcpy_chk@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #139264	; 0x22000
   115e8:	ldr	pc, [ip, #2880]!	; 0xb40

Disassembly of section .text:

000115ec <.text>:
   115ec:	mov	fp, #0
   115f0:	mov	lr, #0
   115f4:	pop	{r1}		; (ldr r1, [sp], #4)
   115f8:	mov	r2, sp
   115fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11600:	push	{r0}		; (str r0, [sp, #-4]!)
   11604:	ldr	ip, [pc, #16]	; 1161c <__mempcpy_chk@plt+0x3c>
   11608:	push	{ip}		; (str ip, [sp, #-4]!)
   1160c:	ldr	r0, [pc, #12]	; 11620 <__mempcpy_chk@plt+0x40>
   11610:	ldr	r3, [pc, #12]	; 11624 <__mempcpy_chk@plt+0x44>
   11614:	bl	11478 <__libc_start_main@plt>
   11618:	bl	115c8 <abort@plt>
   1161c:	ldrdeq	r2, [r2], -r0
   11620:	ldrdeq	r1, [r1], -r4
   11624:	andeq	r2, r2, r0, ror ip
   11628:	ldr	r3, [pc, #20]	; 11644 <__mempcpy_chk@plt+0x64>
   1162c:	ldr	r2, [pc, #20]	; 11648 <__mempcpy_chk@plt+0x68>
   11630:	add	r3, pc, r3
   11634:	ldr	r2, [r3, r2]
   11638:	cmp	r2, #0
   1163c:	bxeq	lr
   11640:	b	11490 <__gmon_start__@plt>
   11644:	andeq	r2, r2, r8, asr #19
   11648:	andeq	r0, r0, ip, lsr #2
   1164c:	ldr	r0, [pc, #24]	; 1166c <__mempcpy_chk@plt+0x8c>
   11650:	ldr	r3, [pc, #24]	; 11670 <__mempcpy_chk@plt+0x90>
   11654:	cmp	r3, r0
   11658:	bxeq	lr
   1165c:	ldr	r3, [pc, #16]	; 11674 <__mempcpy_chk@plt+0x94>
   11660:	cmp	r3, #0
   11664:	bxeq	lr
   11668:	bx	r3
   1166c:	andeq	r4, r3, r0, lsl #3
   11670:	andeq	r4, r3, r0, lsl #3
   11674:	andeq	r0, r0, r0
   11678:	ldr	r0, [pc, #36]	; 116a4 <__mempcpy_chk@plt+0xc4>
   1167c:	ldr	r1, [pc, #36]	; 116a8 <__mempcpy_chk@plt+0xc8>
   11680:	sub	r1, r1, r0
   11684:	asr	r1, r1, #2
   11688:	add	r1, r1, r1, lsr #31
   1168c:	asrs	r1, r1, #1
   11690:	bxeq	lr
   11694:	ldr	r3, [pc, #16]	; 116ac <__mempcpy_chk@plt+0xcc>
   11698:	cmp	r3, #0
   1169c:	bxeq	lr
   116a0:	bx	r3
   116a4:	andeq	r4, r3, r0, lsl #3
   116a8:	andeq	r4, r3, r0, lsl #3
   116ac:	andeq	r0, r0, r0
   116b0:	push	{r4, lr}
   116b4:	ldr	r4, [pc, #24]	; 116d4 <__mempcpy_chk@plt+0xf4>
   116b8:	ldrb	r3, [r4]
   116bc:	cmp	r3, #0
   116c0:	popne	{r4, pc}
   116c4:	bl	1164c <__mempcpy_chk@plt+0x6c>
   116c8:	mov	r3, #1
   116cc:	strb	r3, [r4]
   116d0:	pop	{r4, pc}
   116d4:	muleq	r3, ip, r1
   116d8:	b	11678 <__mempcpy_chk@plt+0x98>
   116dc:	push	{fp, lr}
   116e0:	mov	fp, sp
   116e4:	mov	r4, r0
   116e8:	cmp	r0, #0
   116ec:	bne	117a8 <__mempcpy_chk@plt+0x1c8>
   116f0:	movw	r1, #11555	; 0x2d23
   116f4:	movt	r1, #2
   116f8:	mov	r0, #0
   116fc:	mov	r2, #5
   11700:	bl	113a0 <dcgettext@plt>
   11704:	mov	r1, r0
   11708:	movw	r0, #25344	; 0x6300
   1170c:	movt	r0, #3
   11710:	ldr	r2, [r0]
   11714:	mov	r0, #1
   11718:	bl	11514 <__printf_chk@plt>
   1171c:	movw	r1, #11588	; 0x2d44
   11720:	movt	r1, #2
   11724:	mov	r0, #0
   11728:	mov	r2, #5
   1172c:	bl	113a0 <dcgettext@plt>
   11730:	movw	r5, #16788	; 0x4194
   11734:	movt	r5, #3
   11738:	ldr	r1, [r5]
   1173c:	bl	112b0 <fputs_unlocked@plt>
   11740:	bl	117ec <__mempcpy_chk@plt+0x20c>
   11744:	bl	1181c <__mempcpy_chk@plt+0x23c>
   11748:	movw	r1, #11642	; 0x2d7a
   1174c:	movt	r1, #2
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	bl	113a0 <dcgettext@plt>
   1175c:	ldr	r1, [r5]
   11760:	bl	112b0 <fputs_unlocked@plt>
   11764:	movw	r1, #11864	; 0x2e58
   11768:	movt	r1, #2
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	bl	113a0 <dcgettext@plt>
   11778:	ldr	r1, [r5]
   1177c:	bl	112b0 <fputs_unlocked@plt>
   11780:	movw	r1, #11909	; 0x2e85
   11784:	movt	r1, #2
   11788:	mov	r0, #0
   1178c:	mov	r2, #5
   11790:	bl	113a0 <dcgettext@plt>
   11794:	ldr	r1, [r5]
   11798:	bl	112b0 <fputs_unlocked@plt>
   1179c:	bl	1184c <__mempcpy_chk@plt+0x26c>
   117a0:	mov	r0, r4
   117a4:	bl	114b4 <exit@plt>
   117a8:	movw	r0, #16784	; 0x4190
   117ac:	movt	r0, #3
   117b0:	ldr	r5, [r0]
   117b4:	movw	r1, #11516	; 0x2cfc
   117b8:	movt	r1, #2
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	bl	113a0 <dcgettext@plt>
   117c8:	mov	r2, r0
   117cc:	movw	r0, #25344	; 0x6300
   117d0:	movt	r0, #3
   117d4:	ldr	r3, [r0]
   117d8:	mov	r0, r5
   117dc:	mov	r1, #1
   117e0:	bl	1152c <__fprintf_chk@plt>
   117e4:	mov	r0, r4
   117e8:	bl	114b4 <exit@plt>
   117ec:	push	{fp, lr}
   117f0:	mov	fp, sp
   117f4:	movw	r1, #12064	; 0x2f20
   117f8:	movt	r1, #2
   117fc:	mov	r0, #0
   11800:	mov	r2, #5
   11804:	bl	113a0 <dcgettext@plt>
   11808:	movw	r1, #16788	; 0x4194
   1180c:	movt	r1, #3
   11810:	ldr	r1, [r1]
   11814:	pop	{fp, lr}
   11818:	b	112b0 <fputs_unlocked@plt>
   1181c:	push	{fp, lr}
   11820:	mov	fp, sp
   11824:	movw	r1, #12120	; 0x2f58
   11828:	movt	r1, #2
   1182c:	mov	r0, #0
   11830:	mov	r2, #5
   11834:	bl	113a0 <dcgettext@plt>
   11838:	movw	r1, #16788	; 0x4194
   1183c:	movt	r1, #3
   11840:	ldr	r1, [r1]
   11844:	pop	{fp, lr}
   11848:	b	112b0 <fputs_unlocked@plt>
   1184c:	push	{r4, r5, r6, sl, fp, lr}
   11850:	add	fp, sp, #16
   11854:	sub	sp, sp, #56	; 0x38
   11858:	movw	r0, #12920	; 0x3278
   1185c:	movt	r0, #2
   11860:	add	r1, r0, #32
   11864:	mov	r2, #48	; 0x30
   11868:	vld1.64	{d16-d17}, [r1]
   1186c:	mov	r6, sp
   11870:	add	r1, r6, #32
   11874:	add	r3, r0, #16
   11878:	vld1.64	{d18-d19}, [r0], r2
   1187c:	vld1.64	{d20-d21}, [r3]
   11880:	vldr	d22, [r0]
   11884:	vst1.64	{d16-d17}, [r1]
   11888:	add	r0, r6, #16
   1188c:	vst1.64	{d20-d21}, [r0]
   11890:	mov	r0, r6
   11894:	vst1.64	{d18-d19}, [r0], r2
   11898:	vstr	d22, [r0]
   1189c:	ldr	r1, [sp]
   118a0:	cmp	r1, #0
   118a4:	movw	r4, #11963	; 0x2ebb
   118a8:	movt	r4, #2
   118ac:	beq	118d4 <__mempcpy_chk@plt+0x2f4>
   118b0:	mov	r6, sp
   118b4:	movw	r5, #11963	; 0x2ebb
   118b8:	movt	r5, #2
   118bc:	mov	r0, r5
   118c0:	bl	112ec <strcmp@plt>
   118c4:	cmp	r0, #0
   118c8:	ldrne	r1, [r6, #8]!
   118cc:	cmpne	r1, #0
   118d0:	bne	118bc <__mempcpy_chk@plt+0x2dc>
   118d4:	ldr	r5, [r6, #4]
   118d8:	movw	r1, #12290	; 0x3002
   118dc:	movt	r1, #2
   118e0:	mov	r0, #0
   118e4:	mov	r2, #5
   118e8:	bl	113a0 <dcgettext@plt>
   118ec:	mov	r1, r0
   118f0:	movw	r2, #11996	; 0x2edc
   118f4:	movt	r2, #2
   118f8:	movw	r3, #12313	; 0x3019
   118fc:	movt	r3, #2
   11900:	mov	r0, #1
   11904:	bl	11514 <__printf_chk@plt>
   11908:	cmp	r5, #0
   1190c:	moveq	r5, r4
   11910:	mov	r0, #5
   11914:	mov	r1, #0
   11918:	bl	1155c <setlocale@plt>
   1191c:	cmp	r0, #0
   11920:	beq	11960 <__mempcpy_chk@plt+0x380>
   11924:	movw	r1, #12353	; 0x3041
   11928:	movt	r1, #2
   1192c:	mov	r2, #3
   11930:	bl	115bc <strncmp@plt>
   11934:	cmp	r0, #0
   11938:	beq	11960 <__mempcpy_chk@plt+0x380>
   1193c:	movw	r1, #12357	; 0x3045
   11940:	movt	r1, #2
   11944:	mov	r0, #0
   11948:	mov	r2, #5
   1194c:	bl	113a0 <dcgettext@plt>
   11950:	movw	r1, #16788	; 0x4194
   11954:	movt	r1, #3
   11958:	ldr	r1, [r1]
   1195c:	bl	112b0 <fputs_unlocked@plt>
   11960:	movw	r1, #12428	; 0x308c
   11964:	movt	r1, #2
   11968:	mov	r0, #0
   1196c:	mov	r2, #5
   11970:	bl	113a0 <dcgettext@plt>
   11974:	mov	r1, r0
   11978:	movw	r2, #12313	; 0x3019
   1197c:	movt	r2, #2
   11980:	mov	r0, #1
   11984:	mov	r3, r4
   11988:	bl	11514 <__printf_chk@plt>
   1198c:	movw	r0, #12223	; 0x2fbf
   11990:	movt	r0, #2
   11994:	movw	r6, #12505	; 0x30d9
   11998:	movt	r6, #2
   1199c:	cmp	r5, r4
   119a0:	moveq	r6, r0
   119a4:	movw	r1, #12455	; 0x30a7
   119a8:	movt	r1, #2
   119ac:	mov	r0, #0
   119b0:	mov	r2, #5
   119b4:	bl	113a0 <dcgettext@plt>
   119b8:	mov	r1, r0
   119bc:	mov	r0, #1
   119c0:	mov	r2, r5
   119c4:	mov	r3, r6
   119c8:	sub	sp, fp, #16
   119cc:	pop	{r4, r5, r6, sl, fp, lr}
   119d0:	b	11514 <__printf_chk@plt>
   119d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119d8:	add	fp, sp, #28
   119dc:	sub	sp, sp, #12
   119e0:	mov	r9, r1
   119e4:	mov	sl, r0
   119e8:	ldr	r0, [r1]
   119ec:	bl	12c58 <__mempcpy_chk@plt+0x1678>
   119f0:	movw	r1, #12505	; 0x30d9
   119f4:	movt	r1, #2
   119f8:	mov	r0, #6
   119fc:	bl	1155c <setlocale@plt>
   11a00:	movw	r6, #12000	; 0x2ee0
   11a04:	movt	r6, #2
   11a08:	movw	r1, #11967	; 0x2ebf
   11a0c:	movt	r1, #2
   11a10:	mov	r0, r6
   11a14:	bl	11598 <bindtextdomain@plt>
   11a18:	mov	r0, r6
   11a1c:	bl	113c4 <textdomain@plt>
   11a20:	movw	r0, #10688	; 0x29c0
   11a24:	movt	r0, #1
   11a28:	bl	22cd4 <__mempcpy_chk@plt+0x116f4>
   11a2c:	movw	r1, #16800	; 0x41a0
   11a30:	movt	r1, #3
   11a34:	movw	r0, #12504	; 0x30d8
   11a38:	movt	r0, #2
   11a3c:	str	r0, [r1]
   11a40:	movw	r4, #16804	; 0x41a4
   11a44:	movt	r4, #3
   11a48:	mov	r0, #1
   11a4c:	str	r0, [r4]
   11a50:	movw	r5, #16808	; 0x41a8
   11a54:	movt	r5, #3
   11a58:	strb	r0, [r5]
   11a5c:	mov	r8, #0
   11a60:	movw	r6, #11991	; 0x2ed7
   11a64:	movt	r6, #2
   11a68:	movw	r7, #12824	; 0x3218
   11a6c:	movt	r7, #2
   11a70:	str	r8, [sp]
   11a74:	mov	r0, sl
   11a78:	mov	r1, r9
   11a7c:	mov	r2, r6
   11a80:	mov	r3, r7
   11a84:	bl	1149c <getopt_long@plt>
   11a88:	cmp	r0, #97	; 0x61
   11a8c:	ble	11ad4 <__mempcpy_chk@plt+0x4f4>
   11a90:	cmp	r0, #115	; 0x73
   11a94:	beq	11aa8 <__mempcpy_chk@plt+0x4c8>
   11a98:	cmp	r0, #114	; 0x72
   11a9c:	bne	11ac4 <__mempcpy_chk@plt+0x4e4>
   11aa0:	str	r8, [r4]
   11aa4:	b	11a70 <__mempcpy_chk@plt+0x490>
   11aa8:	movw	r0, #16792	; 0x4198
   11aac:	movt	r0, #3
   11ab0:	ldr	r0, [r0]
   11ab4:	movw	r1, #16800	; 0x41a0
   11ab8:	movt	r1, #3
   11abc:	str	r0, [r1]
   11ac0:	b	11a70 <__mempcpy_chk@plt+0x490>
   11ac4:	cmp	r0, #98	; 0x62
   11ac8:	bne	11d3c <__mempcpy_chk@plt+0x75c>
   11acc:	strb	r8, [r5]
   11ad0:	b	11a70 <__mempcpy_chk@plt+0x490>
   11ad4:	cmn	r0, #1
   11ad8:	bne	11cd0 <__mempcpy_chk@plt+0x6f0>
   11adc:	movw	r8, #16800	; 0x41a0
   11ae0:	movt	r8, #3
   11ae4:	ldr	r6, [r8]
   11ae8:	ldrb	r0, [r6]
   11aec:	ldr	r1, [r4]
   11af0:	cmp	r1, #0
   11af4:	beq	11b0c <__mempcpy_chk@plt+0x52c>
   11af8:	cmp	r0, #0
   11afc:	beq	11b60 <__mempcpy_chk@plt+0x580>
   11b00:	mov	r0, r6
   11b04:	bl	114cc <strlen@plt>
   11b08:	b	11b64 <__mempcpy_chk@plt+0x584>
   11b0c:	cmp	r0, #0
   11b10:	beq	11d44 <__mempcpy_chk@plt+0x764>
   11b14:	movw	r7, #16812	; 0x41ac
   11b18:	movt	r7, #3
   11b1c:	mov	r0, #0
   11b20:	movw	r1, #16844	; 0x41cc
   11b24:	movt	r1, #3
   11b28:	str	r1, [r7, #16]
   11b2c:	str	r0, [r7, #20]
   11b30:	str	r0, [r7]
   11b34:	str	r0, [r7, #4]
   11b38:	mov	r0, r6
   11b3c:	bl	114cc <strlen@plt>
   11b40:	mov	r1, r0
   11b44:	mov	r0, r6
   11b48:	mov	r2, r7
   11b4c:	bl	14864 <__mempcpy_chk@plt+0x3284>
   11b50:	cmp	r0, #0
   11b54:	bne	11d68 <__mempcpy_chk@plt+0x788>
   11b58:	ldr	r0, [r4]
   11b5c:	b	11b74 <__mempcpy_chk@plt+0x594>
   11b60:	mov	r0, #1
   11b64:	movw	r1, #17100	; 0x42cc
   11b68:	movt	r1, #3
   11b6c:	str	r0, [r1]
   11b70:	str	r0, [r4]
   11b74:	movw	r2, #17104	; 0x42d0
   11b78:	movt	r2, #3
   11b7c:	mov	r1, #8192	; 0x2000
   11b80:	str	r1, [r2]
   11b84:	cmp	r0, #4096	; 0x1000
   11b88:	bcc	11bbc <__mempcpy_chk@plt+0x5dc>
   11b8c:	ldr	r0, [r4]
   11b90:	mov	r3, #8192	; 0x2000
   11b94:	lsl	r1, r3, #1
   11b98:	bic	r3, r3, #-2147483647	; 0x80000001
   11b9c:	cmp	r0, r3
   11ba0:	bcc	11bb8 <__mempcpy_chk@plt+0x5d8>
   11ba4:	cmn	r1, #1
   11ba8:	mov	r3, r1
   11bac:	bgt	11b94 <__mempcpy_chk@plt+0x5b4>
   11bb0:	str	r1, [r2]
   11bb4:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   11bb8:	str	r1, [r2]
   11bbc:	orr	r2, r1, #1
   11bc0:	add	r2, r2, r0
   11bc4:	lsl	r0, r2, #1
   11bc8:	movw	r3, #17108	; 0x42d4
   11bcc:	movt	r3, #3
   11bd0:	str	r0, [r3]
   11bd4:	cmp	r1, r2
   11bd8:	cmpcc	r2, r0
   11bdc:	bcc	11be4 <__mempcpy_chk@plt+0x604>
   11be0:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   11be4:	bl	21b2c <__mempcpy_chk@plt+0x1054c>
   11be8:	mov	r6, r0
   11bec:	movw	r5, #17112	; 0x42d8
   11bf0:	movt	r5, #3
   11bf4:	str	r0, [r5]
   11bf8:	ldr	r4, [r4]
   11bfc:	mov	r7, #1
   11c00:	cmp	r4, #0
   11c04:	mov	r0, #1
   11c08:	beq	11c20 <__mempcpy_chk@plt+0x640>
   11c0c:	ldr	r1, [r8]
   11c10:	add	r2, r4, #1
   11c14:	mov	r0, r6
   11c18:	bl	1134c <memcpy@plt>
   11c1c:	mov	r0, r4
   11c20:	add	r0, r6, r0
   11c24:	str	r0, [r5]
   11c28:	movw	r0, #16776	; 0x4188
   11c2c:	movt	r0, #3
   11c30:	ldr	r4, [r0]
   11c34:	mov	r0, #1
   11c38:	mov	r1, #0
   11c3c:	bl	21efc <__mempcpy_chk@plt+0x1091c>
   11c40:	movw	r1, #12816	; 0x3210
   11c44:	movt	r1, #2
   11c48:	cmp	r4, sl
   11c4c:	addlt	r1, r9, r4, lsl #2
   11c50:	ldr	r0, [r1]
   11c54:	cmp	r0, #0
   11c58:	beq	11c78 <__mempcpy_chk@plt+0x698>
   11c5c:	add	r4, r1, #4
   11c60:	mov	r7, #1
   11c64:	bl	11d80 <__mempcpy_chk@plt+0x7a0>
   11c68:	and	r7, r7, r0
   11c6c:	ldr	r0, [r4], #4
   11c70:	cmp	r0, #0
   11c74:	bne	11c64 <__mempcpy_chk@plt+0x684>
   11c78:	mov	r0, #0
   11c7c:	mov	r1, #0
   11c80:	bl	11efc <__mempcpy_chk@plt+0x91c>
   11c84:	movw	r0, #17116	; 0x42dc
   11c88:	movt	r0, #3
   11c8c:	ldrb	r0, [r0]
   11c90:	cmp	r0, #0
   11c94:	beq	11cc4 <__mempcpy_chk@plt+0x6e4>
   11c98:	mov	r0, #0
   11c9c:	bl	115d4 <close@plt>
   11ca0:	cmn	r0, #1
   11ca4:	bgt	11cc4 <__mempcpy_chk@plt+0x6e4>
   11ca8:	bl	114d8 <__errno_location@plt>
   11cac:	ldr	r1, [r0]
   11cb0:	movw	r2, #13064	; 0x3308
   11cb4:	movt	r2, #2
   11cb8:	mov	r0, #0
   11cbc:	bl	1143c <error@plt>
   11cc0:	mov	r7, #0
   11cc4:	eor	r0, r7, #1
   11cc8:	sub	sp, fp, #28
   11ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cd0:	cmn	r0, #3
   11cd4:	bne	11d2c <__mempcpy_chk@plt+0x74c>
   11cd8:	movw	r0, #16696	; 0x4138
   11cdc:	movt	r0, #3
   11ce0:	ldr	r3, [r0]
   11ce4:	movw	r0, #16788	; 0x4194
   11ce8:	movt	r0, #3
   11cec:	ldr	r0, [r0]
   11cf0:	mov	r1, #0
   11cf4:	movw	r2, #12022	; 0x2ef6
   11cf8:	movt	r2, #2
   11cfc:	movw	r7, #12010	; 0x2eea
   11d00:	movt	r7, #2
   11d04:	str	r7, [sp]
   11d08:	str	r2, [sp, #4]
   11d0c:	str	r1, [sp, #8]
   11d10:	movw	r1, #11963	; 0x2ebb
   11d14:	movt	r1, #2
   11d18:	movw	r2, #11996	; 0x2edc
   11d1c:	movt	r2, #2
   11d20:	bl	21a24 <__mempcpy_chk@plt+0x10444>
   11d24:	mov	r0, #0
   11d28:	bl	114b4 <exit@plt>
   11d2c:	cmn	r0, #2
   11d30:	bne	11d3c <__mempcpy_chk@plt+0x75c>
   11d34:	mov	r0, #0
   11d38:	bl	116dc <__mempcpy_chk@plt+0xfc>
   11d3c:	mov	r0, #1
   11d40:	bl	116dc <__mempcpy_chk@plt+0xfc>
   11d44:	movw	r1, #12038	; 0x2f06
   11d48:	movt	r1, #2
   11d4c:	mov	r0, #0
   11d50:	mov	r2, #5
   11d54:	bl	113a0 <dcgettext@plt>
   11d58:	mov	r2, r0
   11d5c:	mov	r0, #1
   11d60:	mov	r1, #0
   11d64:	bl	1143c <error@plt>
   11d68:	mov	r3, r0
   11d6c:	movw	r2, #12995	; 0x32c3
   11d70:	movt	r2, #2
   11d74:	mov	r0, #1
   11d78:	mov	r1, #0
   11d7c:	bl	1143c <error@plt>
   11d80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d84:	add	fp, sp, #24
   11d88:	sub	sp, sp, #8
   11d8c:	mov	r4, r0
   11d90:	movw	r1, #13064	; 0x3308
   11d94:	movt	r1, #2
   11d98:	bl	112ec <strcmp@plt>
   11d9c:	mov	r5, r0
   11da0:	cmp	r0, #0
   11da4:	beq	11dc8 <__mempcpy_chk@plt+0x7e8>
   11da8:	mov	r6, #0
   11dac:	mov	r0, r4
   11db0:	mov	r1, #0
   11db4:	bl	11448 <open64@plt>
   11db8:	cmn	r0, #1
   11dbc:	ble	11e48 <__mempcpy_chk@plt+0x868>
   11dc0:	mov	r7, r0
   11dc4:	b	11e00 <__mempcpy_chk@plt+0x820>
   11dc8:	movw	r0, #17116	; 0x42dc
   11dcc:	movt	r0, #3
   11dd0:	mov	r1, #1
   11dd4:	strb	r1, [r0]
   11dd8:	mov	r7, #0
   11ddc:	movw	r1, #12542	; 0x30fe
   11de0:	movt	r1, #2
   11de4:	mov	r0, #0
   11de8:	mov	r2, #5
   11dec:	bl	113a0 <dcgettext@plt>
   11df0:	mov	r4, r0
   11df4:	mov	r0, #0
   11df8:	mov	r1, #0
   11dfc:	bl	21efc <__mempcpy_chk@plt+0x1091c>
   11e00:	mov	r0, #2
   11e04:	str	r0, [sp]
   11e08:	mov	r0, r7
   11e0c:	mov	r2, #0
   11e10:	mov	r3, #0
   11e14:	bl	11400 <lseek64@plt>
   11e18:	cmp	r1, #0
   11e1c:	bmi	11e38 <__mempcpy_chk@plt+0x858>
   11e20:	mov	r8, r0
   11e24:	mov	r6, r1
   11e28:	mov	r0, r7
   11e2c:	bl	115a4 <isatty@plt>
   11e30:	cmp	r0, #0
   11e34:	beq	11e78 <__mempcpy_chk@plt+0x898>
   11e38:	mov	r0, r7
   11e3c:	mov	r1, r4
   11e40:	bl	11fcc <__mempcpy_chk@plt+0x9ec>
   11e44:	b	11e8c <__mempcpy_chk@plt+0x8ac>
   11e48:	bl	114d8 <__errno_location@plt>
   11e4c:	ldr	r5, [r0]
   11e50:	movw	r1, #12557	; 0x310d
   11e54:	movt	r1, #2
   11e58:	mov	r0, #0
   11e5c:	mov	r2, #5
   11e60:	bl	113a0 <dcgettext@plt>
   11e64:	mov	r7, r0
   11e68:	mov	r0, #4
   11e6c:	mov	r1, r4
   11e70:	bl	14258 <__mempcpy_chk@plt+0x2c78>
   11e74:	b	11edc <__mempcpy_chk@plt+0x8fc>
   11e78:	mov	r0, r7
   11e7c:	mov	r1, r4
   11e80:	mov	r2, r8
   11e84:	mov	r3, r6
   11e88:	bl	12028 <__mempcpy_chk@plt+0xa48>
   11e8c:	mov	r6, r0
   11e90:	cmp	r5, #0
   11e94:	beq	11ef0 <__mempcpy_chk@plt+0x910>
   11e98:	mov	r0, r7
   11e9c:	bl	115d4 <close@plt>
   11ea0:	cmp	r0, #0
   11ea4:	beq	11ef0 <__mempcpy_chk@plt+0x910>
   11ea8:	bl	114d8 <__errno_location@plt>
   11eac:	ldr	r5, [r0]
   11eb0:	mov	r6, #0
   11eb4:	movw	r1, #12587	; 0x312b
   11eb8:	movt	r1, #2
   11ebc:	mov	r0, #0
   11ec0:	mov	r2, #5
   11ec4:	bl	113a0 <dcgettext@plt>
   11ec8:	mov	r7, r0
   11ecc:	mov	r0, #0
   11ed0:	mov	r1, #3
   11ed4:	mov	r2, r4
   11ed8:	bl	1430c <__mempcpy_chk@plt+0x2d2c>
   11edc:	mov	r3, r0
   11ee0:	mov	r0, #0
   11ee4:	mov	r1, r5
   11ee8:	mov	r2, r7
   11eec:	bl	1143c <error@plt>
   11ef0:	mov	r0, r6
   11ef4:	sub	sp, fp, #24
   11ef8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f00:	add	fp, sp, #28
   11f04:	sub	sp, sp, #4
   11f08:	movw	r8, #25332	; 0x62f4
   11f0c:	movt	r8, #3
   11f10:	ldr	r2, [r8]
   11f14:	cmp	r0, #0
   11f18:	beq	11fa0 <__mempcpy_chk@plt+0x9c0>
   11f1c:	mov	r4, r0
   11f20:	sub	r5, r1, r0
   11f24:	rsb	r7, r2, #8192	; 0x2000
   11f28:	ldr	r6, [r8]
   11f2c:	movw	sl, #17140	; 0x42f4
   11f30:	movt	sl, #3
   11f34:	add	r0, sl, r6
   11f38:	cmp	r5, r7
   11f3c:	bcc	11f8c <__mempcpy_chk@plt+0x9ac>
   11f40:	movw	r9, #16788	; 0x4194
   11f44:	movt	r9, #3
   11f48:	mov	r6, #0
   11f4c:	mov	r1, r4
   11f50:	mov	r2, r7
   11f54:	bl	1134c <memcpy@plt>
   11f58:	ldr	r3, [r9]
   11f5c:	mov	r0, sl
   11f60:	mov	r1, #1
   11f64:	mov	r2, #8192	; 0x2000
   11f68:	bl	11394 <fwrite_unlocked@plt>
   11f6c:	str	r6, [r8]
   11f70:	sub	r5, r5, r7
   11f74:	add	r4, r4, r7
   11f78:	cmp	r6, r5, lsr #13
   11f7c:	mov	r0, sl
   11f80:	mov	r7, #8192	; 0x2000
   11f84:	bne	11f4c <__mempcpy_chk@plt+0x96c>
   11f88:	mov	r0, sl
   11f8c:	mov	r1, r4
   11f90:	mov	r2, r5
   11f94:	bl	1134c <memcpy@plt>
   11f98:	add	r0, r6, r5
   11f9c:	b	11fc0 <__mempcpy_chk@plt+0x9e0>
   11fa0:	movw	r0, #16788	; 0x4194
   11fa4:	movt	r0, #3
   11fa8:	ldr	r3, [r0]
   11fac:	movw	r0, #17140	; 0x42f4
   11fb0:	movt	r0, #3
   11fb4:	mov	r1, #1
   11fb8:	bl	11394 <fwrite_unlocked@plt>
   11fbc:	mov	r0, #0
   11fc0:	str	r0, [r8]
   11fc4:	sub	sp, fp, #28
   11fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fcc:	push	{r4, r5, fp, lr}
   11fd0:	add	fp, sp, #8
   11fd4:	sub	sp, sp, #8
   11fd8:	mov	r3, r1
   11fdc:	mov	r2, r0
   11fe0:	add	r0, sp, #4
   11fe4:	mov	r1, sp
   11fe8:	bl	1265c <__mempcpy_chk@plt+0x107c>
   11fec:	cmp	r1, #0
   11ff0:	bmi	1201c <__mempcpy_chk@plt+0xa3c>
   11ff4:	mov	r4, r0
   11ff8:	mov	r5, r1
   11ffc:	ldr	r0, [sp, #4]
   12000:	bl	11520 <fileno@plt>
   12004:	ldr	r1, [sp]
   12008:	mov	r2, r4
   1200c:	mov	r3, r5
   12010:	bl	12028 <__mempcpy_chk@plt+0xa48>
   12014:	sub	sp, fp, #8
   12018:	pop	{r4, r5, fp, pc}
   1201c:	mov	r0, #0
   12020:	sub	sp, fp, #8
   12024:	pop	{r4, r5, fp, pc}
   12028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1202c:	add	fp, sp, #28
   12030:	sub	sp, sp, #36	; 0x24
   12034:	mov	r8, r3
   12038:	mov	r5, r2
   1203c:	str	r1, [sp, #8]
   12040:	mov	r4, r0
   12044:	movw	r7, #17104	; 0x42d0
   12048:	movt	r7, #3
   1204c:	ldr	r2, [r7]
   12050:	mov	r6, #0
   12054:	mov	r0, r5
   12058:	mov	r1, r3
   1205c:	mov	r3, #0
   12060:	bl	22a64 <__mempcpy_chk@plt+0x11484>
   12064:	movw	r0, #17100	; 0x42cc
   12068:	movt	r0, #3
   1206c:	ldr	r0, [r0]
   12070:	str	r0, [sp, #28]
   12074:	movw	r0, #16800	; 0x41a0
   12078:	movt	r0, #3
   1207c:	ldr	r0, [r0]
   12080:	ldrb	r9, [r0], #1
   12084:	str	r0, [sp, #12]
   12088:	cmp	r2, #0
   1208c:	str	r4, [sp, #32]
   12090:	beq	12108 <__mempcpy_chk@plt+0xb28>
   12094:	str	r6, [sp]
   12098:	subs	r5, r5, r2
   1209c:	sbc	r8, r8, #0
   120a0:	mov	r0, r4
   120a4:	mov	sl, r5
   120a8:	mov	r2, r5
   120ac:	mov	r3, r8
   120b0:	bl	11400 <lseek64@plt>
   120b4:	cmn	r1, #1
   120b8:	bgt	1210c <__mempcpy_chk@plt+0xb2c>
   120bc:	bl	114d8 <__errno_location@plt>
   120c0:	ldr	r4, [r0]
   120c4:	movw	r1, #12742	; 0x31c6
   120c8:	movt	r1, #2
   120cc:	mov	r0, #0
   120d0:	mov	r2, #5
   120d4:	bl	113a0 <dcgettext@plt>
   120d8:	mov	r6, r0
   120dc:	mov	r0, #0
   120e0:	mov	r1, #3
   120e4:	ldr	r2, [sp, #8]
   120e8:	bl	1430c <__mempcpy_chk@plt+0x2d2c>
   120ec:	mov	r3, r0
   120f0:	mov	r0, #0
   120f4:	mov	r1, r4
   120f8:	mov	r2, r6
   120fc:	ldr	r4, [sp, #32]
   12100:	bl	1143c <error@plt>
   12104:	b	1210c <__mempcpy_chk@plt+0xb2c>
   12108:	mov	sl, r5
   1210c:	ldr	r2, [r7]
   12110:	movw	r0, #17112	; 0x42d8
   12114:	movt	r0, #3
   12118:	ldr	r1, [r0]
   1211c:	mov	r0, r4
   12120:	bl	21554 <__mempcpy_chk@plt+0xff74>
   12124:	mov	r6, r0
   12128:	mov	r5, r8
   1212c:	orrs	r0, sl, r8
   12130:	beq	12214 <__mempcpy_chk@plt+0xc34>
   12134:	cmp	r6, #0
   12138:	bne	12214 <__mempcpy_chk@plt+0xc34>
   1213c:	mov	r8, #0
   12140:	ldr	r0, [r7]
   12144:	mov	r1, #1
   12148:	str	r1, [sp]
   1214c:	rsbs	r2, r0, #0
   12150:	sbc	r3, r8, #0
   12154:	ldr	r4, [sp, #32]
   12158:	mov	r0, r4
   1215c:	bl	11400 <lseek64@plt>
   12160:	cmn	r1, #1
   12164:	bgt	121b8 <__mempcpy_chk@plt+0xbd8>
   12168:	bl	114d8 <__errno_location@plt>
   1216c:	ldr	r7, [r0]
   12170:	mov	r0, #0
   12174:	movw	r1, #12742	; 0x31c6
   12178:	movt	r1, #2
   1217c:	mov	r2, #5
   12180:	bl	113a0 <dcgettext@plt>
   12184:	mov	r6, r0
   12188:	mov	r0, #0
   1218c:	mov	r1, #3
   12190:	ldr	r2, [sp, #8]
   12194:	bl	1430c <__mempcpy_chk@plt+0x2d2c>
   12198:	mov	r3, r0
   1219c:	mov	r0, #0
   121a0:	mov	r1, r7
   121a4:	movw	r7, #17104	; 0x42d0
   121a8:	movt	r7, #3
   121ac:	mov	r2, r6
   121b0:	ldr	r4, [sp, #32]
   121b4:	bl	1143c <error@plt>
   121b8:	movw	r0, #17112	; 0x42d8
   121bc:	movt	r0, #3
   121c0:	ldr	r1, [r0]
   121c4:	ldr	r7, [r7]
   121c8:	mov	r0, r4
   121cc:	mov	r2, r7
   121d0:	bl	21554 <__mempcpy_chk@plt+0xff74>
   121d4:	mov	r6, r0
   121d8:	mov	r1, sl
   121dc:	subs	r1, sl, r7
   121e0:	mov	r0, r5
   121e4:	sbc	r0, r5, #0
   121e8:	mov	r5, r0
   121ec:	mov	sl, r1
   121f0:	orrs	r0, r1, r0
   121f4:	beq	1220c <__mempcpy_chk@plt+0xc2c>
   121f8:	cmp	r6, #0
   121fc:	movw	r7, #17104	; 0x42d0
   12200:	movt	r7, #3
   12204:	beq	12140 <__mempcpy_chk@plt+0xb60>
   12208:	b	12214 <__mempcpy_chk@plt+0xc34>
   1220c:	movw	r7, #17104	; 0x42d0
   12210:	movt	r7, #3
   12214:	ldr	r2, [r7]
   12218:	cmp	r6, r2
   1221c:	bne	12260 <__mempcpy_chk@plt+0xc80>
   12220:	movw	r0, #17112	; 0x42d8
   12224:	movt	r0, #3
   12228:	ldr	r1, [r0]
   1222c:	ldr	r0, [sp, #32]
   12230:	bl	21554 <__mempcpy_chk@plt+0xff74>
   12234:	cmn	r0, #1
   12238:	beq	125c4 <__mempcpy_chk@plt+0xfe4>
   1223c:	cmp	r0, #0
   12240:	beq	12260 <__mempcpy_chk@plt+0xc80>
   12244:	adds	sl, sl, r0
   12248:	adc	r5, r5, #0
   1224c:	ldr	r2, [r7]
   12250:	cmp	r0, r2
   12254:	mov	r6, r0
   12258:	beq	12220 <__mempcpy_chk@plt+0xc40>
   1225c:	b	1226c <__mempcpy_chk@plt+0xc8c>
   12260:	mov	r0, r6
   12264:	cmn	r6, #1
   12268:	beq	125c4 <__mempcpy_chk@plt+0xfe4>
   1226c:	str	sl, [sp, #16]
   12270:	str	r5, [sp, #20]
   12274:	ldr	r2, [sp, #28]
   12278:	sub	r6, r2, #1
   1227c:	movw	r5, #17112	; 0x42d8
   12280:	movt	r5, #3
   12284:	ldr	r1, [r5]
   12288:	add	sl, r1, r0
   1228c:	sub	r1, sl, r2
   12290:	movw	r8, #16804	; 0x41a4
   12294:	movt	r8, #3
   12298:	ldr	r0, [r8]
   1229c:	cmp	r0, #0
   122a0:	str	sl, [sp, #28]
   122a4:	addne	sl, r1, #1
   122a8:	mov	r1, #1
   122ac:	str	r1, [sp, #24]
   122b0:	ldr	r4, [sp, #12]
   122b4:	cmp	r0, #0
   122b8:	bne	1233c <__mempcpy_chk@plt+0xd5c>
   122bc:	b	12370 <__mempcpy_chk@plt+0xd90>
   122c0:	ldr	r4, [r7]
   122c4:	movw	r8, #17112	; 0x42d8
   122c8:	movt	r8, #3
   122cc:	ldr	r7, [r8]
   122d0:	add	sl, r7, r4
   122d4:	mov	r0, sl
   122d8:	mov	r1, r7
   122dc:	ldr	r5, [sp, #28]
   122e0:	mov	r2, r5
   122e4:	bl	1131c <memmove@plt>
   122e8:	add	r1, sl, r5
   122ec:	mov	r5, r8
   122f0:	movw	r8, #16804	; 0x41a4
   122f4:	movt	r8, #3
   122f8:	ldr	r0, [r8]
   122fc:	cmp	r0, #0
   12300:	str	r1, [sp, #28]
   12304:	moveq	sl, r1
   12308:	ldr	r0, [sp, #32]
   1230c:	mov	r1, r7
   12310:	movw	r7, #17104	; 0x42d0
   12314:	movt	r7, #3
   12318:	mov	r2, r4
   1231c:	bl	21554 <__mempcpy_chk@plt+0xff74>
   12320:	ldr	r1, [r7]
   12324:	cmp	r0, r1
   12328:	ldr	r4, [sp, #12]
   1232c:	bne	125c4 <__mempcpy_chk@plt+0xfe4>
   12330:	ldr	r0, [r8]
   12334:	cmp	r0, #0
   12338:	beq	12370 <__mempcpy_chk@plt+0xd90>
   1233c:	sub	sl, sl, #1
   12340:	mov	r0, sl
   12344:	ldrb	r1, [r0], #1
   12348:	cmp	r1, r9
   1234c:	bne	1233c <__mempcpy_chk@plt+0xd5c>
   12350:	cmp	r6, #0
   12354:	beq	123fc <__mempcpy_chk@plt+0xe1c>
   12358:	mov	r1, r4
   1235c:	mov	r2, r6
   12360:	bl	115bc <strncmp@plt>
   12364:	cmp	r0, #0
   12368:	bne	1233c <__mempcpy_chk@plt+0xd5c>
   1236c:	b	123fc <__mempcpy_chk@plt+0xe1c>
   12370:	ldr	r1, [r5]
   12374:	sub	r2, sl, r1
   12378:	cmn	r2, #1
   1237c:	ble	12628 <__mempcpy_chk@plt+0x1048>
   12380:	cmp	r2, #0
   12384:	beq	123f4 <__mempcpy_chk@plt+0xe14>
   12388:	rsb	r0, r2, #1
   1238c:	str	r0, [sp]
   12390:	movw	r0, #17128	; 0x42e8
   12394:	movt	r0, #3
   12398:	str	r0, [sp, #4]
   1239c:	sub	r3, r2, #1
   123a0:	movw	r0, #16812	; 0x41ac
   123a4:	movt	r0, #3
   123a8:	bl	15d1c <__mempcpy_chk@plt+0x473c>
   123ac:	cmn	r0, #1
   123b0:	beq	123f4 <__mempcpy_chk@plt+0xe14>
   123b4:	cmn	r0, #2
   123b8:	beq	12634 <__mempcpy_chk@plt+0x1054>
   123bc:	movw	r0, #17128	; 0x42e8
   123c0:	movt	r0, #3
   123c4:	mov	r1, r0
   123c8:	ldr	r0, [r0, #4]
   123cc:	ldr	r1, [r1, #8]
   123d0:	ldr	r0, [r0]
   123d4:	ldr	r1, [r1]
   123d8:	sub	r1, r1, r0
   123dc:	movw	r2, #17100	; 0x42cc
   123e0:	movt	r2, #3
   123e4:	str	r1, [r2]
   123e8:	ldr	r1, [r5]
   123ec:	add	sl, r1, r0
   123f0:	b	123fc <__mempcpy_chk@plt+0xe1c>
   123f4:	ldr	r0, [r5]
   123f8:	sub	sl, r0, #1
   123fc:	ldr	r0, [r5]
   12400:	cmp	sl, r0
   12404:	bcs	124a8 <__mempcpy_chk@plt+0xec8>
   12408:	ldr	r5, [sp, #20]
   1240c:	ldr	r4, [sp, #16]
   12410:	orrs	r1, r4, r5
   12414:	beq	12610 <__mempcpy_chk@plt+0x1030>
   12418:	ldr	r1, [sp, #28]
   1241c:	sub	sl, r1, r0
   12420:	ldr	r1, [r7]
   12424:	cmp	sl, r1
   12428:	bls	12488 <__mempcpy_chk@plt+0xea8>
   1242c:	lsl	r2, r1, #1
   12430:	str	r2, [r7]
   12434:	mov	r2, #2
   12438:	orr	r1, r2, r1, lsl #2
   1243c:	ldr	r7, [r8]
   12440:	add	r1, r1, r7
   12444:	movw	r2, #17108	; 0x42d4
   12448:	movt	r2, #3
   1244c:	mov	r3, r2
   12450:	ldr	r2, [r2]
   12454:	str	r1, [r3]
   12458:	cmp	r7, #0
   1245c:	movweq	r7, #1
   12460:	cmp	r1, r2
   12464:	bcc	12658 <__mempcpy_chk@plt+0x1078>
   12468:	sub	r0, r0, r7
   1246c:	bl	21b6c <__mempcpy_chk@plt+0x1058c>
   12470:	add	r0, r0, r7
   12474:	movw	r1, #17112	; 0x42d8
   12478:	movt	r1, #3
   1247c:	str	r0, [r1]
   12480:	movw	r7, #17104	; 0x42d0
   12484:	movt	r7, #3
   12488:	ldr	r0, [r7]
   1248c:	subs	r1, r4, r0
   12490:	sbcs	r1, r5, #0
   12494:	bge	12548 <__mempcpy_chk@plt+0xf68>
   12498:	str	r4, [r7]
   1249c:	mov	r4, #0
   124a0:	mov	r5, #0
   124a4:	b	12550 <__mempcpy_chk@plt+0xf70>
   124a8:	movw	r0, #16808	; 0x41a8
   124ac:	movt	r0, #3
   124b0:	ldrb	r0, [r0]
   124b4:	cmp	r0, #1
   124b8:	ldr	r1, [sp, #28]
   124bc:	bne	124f4 <__mempcpy_chk@plt+0xf14>
   124c0:	movw	r0, #17100	; 0x42cc
   124c4:	movt	r0, #3
   124c8:	ldr	r0, [r0]
   124cc:	add	r8, sl, r0
   124d0:	sub	r0, r8, r1
   124d4:	clz	r0, r0
   124d8:	lsr	r0, r0, #5
   124dc:	mov	r7, #0
   124e0:	ldr	r1, [sp, #24]
   124e4:	tst	r1, r0
   124e8:	ldr	r1, [sp, #28]
   124ec:	beq	124fc <__mempcpy_chk@plt+0xf1c>
   124f0:	b	12504 <__mempcpy_chk@plt+0xf24>
   124f4:	mov	r8, sl
   124f8:	ldr	r7, [sp, #24]
   124fc:	mov	r0, r8
   12500:	bl	11efc <__mempcpy_chk@plt+0x91c>
   12504:	movw	r0, #16804	; 0x41a4
   12508:	movt	r0, #3
   1250c:	ldr	r0, [r0]
   12510:	cmp	r0, #0
   12514:	beq	1252c <__mempcpy_chk@plt+0xf4c>
   12518:	movw	r0, #17100	; 0x42cc
   1251c:	movt	r0, #3
   12520:	ldr	r0, [r0]
   12524:	sub	r0, sl, r0
   12528:	add	sl, r0, #1
   1252c:	str	r7, [sp, #24]
   12530:	str	r8, [sp, #28]
   12534:	movw	r7, #17104	; 0x42d0
   12538:	movt	r7, #3
   1253c:	movw	r8, #16804	; 0x41a4
   12540:	movt	r8, #3
   12544:	b	12330 <__mempcpy_chk@plt+0xd50>
   12548:	subs	r4, r4, r0
   1254c:	sbc	r5, r5, #0
   12550:	str	sl, [sp, #28]
   12554:	mov	r0, #0
   12558:	str	r0, [sp]
   1255c:	ldr	r0, [sp, #32]
   12560:	str	r4, [sp, #16]
   12564:	mov	r2, r4
   12568:	str	r5, [sp, #20]
   1256c:	mov	r3, r5
   12570:	bl	11400 <lseek64@plt>
   12574:	cmn	r1, #1
   12578:	bgt	122c0 <__mempcpy_chk@plt+0xce0>
   1257c:	bl	114d8 <__errno_location@plt>
   12580:	ldr	sl, [r0]
   12584:	mov	r0, #0
   12588:	movw	r1, #12742	; 0x31c6
   1258c:	movt	r1, #2
   12590:	mov	r2, #5
   12594:	bl	113a0 <dcgettext@plt>
   12598:	mov	r4, r0
   1259c:	mov	r0, #0
   125a0:	mov	r1, #3
   125a4:	ldr	r2, [sp, #8]
   125a8:	bl	1430c <__mempcpy_chk@plt+0x2d2c>
   125ac:	mov	r3, r0
   125b0:	mov	r0, #0
   125b4:	mov	r1, sl
   125b8:	mov	r2, r4
   125bc:	bl	1143c <error@plt>
   125c0:	b	122c0 <__mempcpy_chk@plt+0xce0>
   125c4:	bl	114d8 <__errno_location@plt>
   125c8:	ldr	r5, [r0]
   125cc:	mov	r4, #0
   125d0:	movw	r1, #12587	; 0x312b
   125d4:	movt	r1, #2
   125d8:	mov	r0, #0
   125dc:	mov	r2, #5
   125e0:	bl	113a0 <dcgettext@plt>
   125e4:	mov	r6, r0
   125e8:	mov	r0, #0
   125ec:	mov	r1, #3
   125f0:	ldr	r2, [sp, #8]
   125f4:	bl	1430c <__mempcpy_chk@plt+0x2d2c>
   125f8:	mov	r3, r0
   125fc:	mov	r0, #0
   12600:	mov	r1, r5
   12604:	mov	r2, r6
   12608:	bl	1143c <error@plt>
   1260c:	b	1261c <__mempcpy_chk@plt+0x103c>
   12610:	ldr	r1, [sp, #28]
   12614:	bl	11efc <__mempcpy_chk@plt+0x91c>
   12618:	mov	r4, #1
   1261c:	mov	r0, r4
   12620:	sub	sp, fp, #28
   12624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12628:	movw	r1, #12758	; 0x31d6
   1262c:	movt	r1, #2
   12630:	b	1263c <__mempcpy_chk@plt+0x105c>
   12634:	movw	r1, #12775	; 0x31e7
   12638:	movt	r1, #2
   1263c:	mov	r0, #0
   12640:	mov	r2, #5
   12644:	bl	113a0 <dcgettext@plt>
   12648:	mov	r2, r0
   1264c:	mov	r0, #1
   12650:	mov	r1, #0
   12654:	bl	1143c <error@plt>
   12658:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   1265c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12660:	add	fp, sp, #28
   12664:	sub	sp, sp, #20
   12668:	mov	r4, r3
   1266c:	mov	r5, r2
   12670:	mov	r6, r1
   12674:	mov	r7, r0
   12678:	add	r0, sp, #16
   1267c:	add	r1, sp, #12
   12680:	bl	127b8 <__mempcpy_chk@plt+0x11d8>
   12684:	mvn	r8, #0
   12688:	cmp	r0, #0
   1268c:	beq	126fc <__mempcpy_chk@plt+0x111c>
   12690:	str	r6, [sp, #4]
   12694:	str	r4, [sp, #8]
   12698:	mov	r8, #0
   1269c:	movw	r9, #17104	; 0x42d0
   126a0:	movt	r9, #3
   126a4:	movw	sl, #17112	; 0x42d8
   126a8:	movt	sl, #3
   126ac:	mov	r4, #0
   126b0:	ldr	r2, [r9]
   126b4:	ldr	r1, [sl]
   126b8:	mov	r0, r5
   126bc:	bl	21554 <__mempcpy_chk@plt+0xff74>
   126c0:	cmp	r0, #0
   126c4:	beq	12704 <__mempcpy_chk@plt+0x1124>
   126c8:	mov	r6, r0
   126cc:	cmn	r0, #1
   126d0:	beq	12744 <__mempcpy_chk@plt+0x1164>
   126d4:	ldr	r0, [sl]
   126d8:	ldr	r3, [sp, #16]
   126dc:	mov	r1, #1
   126e0:	mov	r2, r6
   126e4:	bl	11394 <fwrite_unlocked@plt>
   126e8:	adds	r8, r8, r6
   126ec:	adc	r4, r4, #0
   126f0:	cmp	r0, r6
   126f4:	beq	126b0 <__mempcpy_chk@plt+0x10d0>
   126f8:	b	12714 <__mempcpy_chk@plt+0x1134>
   126fc:	mvn	r4, #0
   12700:	b	12790 <__mempcpy_chk@plt+0x11b0>
   12704:	ldr	r0, [sp, #16]
   12708:	bl	113d0 <fflush_unlocked@plt>
   1270c:	cmp	r0, #0
   12710:	beq	127a0 <__mempcpy_chk@plt+0x11c0>
   12714:	bl	114d8 <__errno_location@plt>
   12718:	ldr	r4, [r0]
   1271c:	movw	r1, #12602	; 0x313a
   12720:	movt	r1, #2
   12724:	mov	r0, #0
   12728:	mov	r2, #5
   1272c:	bl	113a0 <dcgettext@plt>
   12730:	mov	r5, r0
   12734:	ldr	r2, [sp, #12]
   12738:	mov	r0, #0
   1273c:	mov	r1, #3
   12740:	b	12770 <__mempcpy_chk@plt+0x1190>
   12744:	bl	114d8 <__errno_location@plt>
   12748:	ldr	r4, [r0]
   1274c:	movw	r1, #12587	; 0x312b
   12750:	movt	r1, #2
   12754:	mov	r0, #0
   12758:	mov	r2, #5
   1275c:	bl	113a0 <dcgettext@plt>
   12760:	mov	r5, r0
   12764:	mov	r0, #0
   12768:	mov	r1, #3
   1276c:	ldr	r2, [sp, #8]
   12770:	bl	1430c <__mempcpy_chk@plt+0x2d2c>
   12774:	mov	r3, r0
   12778:	mov	r0, #0
   1277c:	mov	r1, r4
   12780:	mov	r2, r5
   12784:	bl	1143c <error@plt>
   12788:	mvn	r4, #0
   1278c:	mvn	r8, #0
   12790:	mov	r0, r8
   12794:	mov	r1, r4
   12798:	sub	sp, fp, #28
   1279c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127a0:	ldr	r0, [sp, #16]
   127a4:	str	r0, [r7]
   127a8:	ldr	r0, [sp, #12]
   127ac:	ldr	r1, [sp, #4]
   127b0:	str	r0, [r1]
   127b4:	b	12790 <__mempcpy_chk@plt+0x11b0>
   127b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   127bc:	add	fp, sp, #24
   127c0:	sub	sp, sp, #8
   127c4:	mov	r9, r1
   127c8:	mov	r5, r0
   127cc:	movw	r8, #17120	; 0x42e0
   127d0:	movt	r8, #3
   127d4:	ldr	r0, [r8]
   127d8:	cmp	r0, #0
   127dc:	movw	r4, #17124	; 0x42e4
   127e0:	movt	r4, #3
   127e4:	beq	12870 <__mempcpy_chk@plt+0x1290>
   127e8:	ldr	r0, [r4]
   127ec:	bl	1158c <clearerr_unlocked@plt>
   127f0:	ldr	r0, [r4]
   127f4:	mov	r6, #0
   127f8:	str	r6, [sp]
   127fc:	mov	r2, #0
   12800:	mov	r3, #0
   12804:	bl	12bb0 <__mempcpy_chk@plt+0x15d0>
   12808:	cmp	r0, #0
   1280c:	bmi	1282c <__mempcpy_chk@plt+0x124c>
   12810:	ldr	r0, [r4]
   12814:	bl	11520 <fileno@plt>
   12818:	mov	r2, #0
   1281c:	mov	r3, #0
   12820:	bl	11388 <ftruncate64@plt>
   12824:	cmn	r0, #1
   12828:	bgt	128d4 <__mempcpy_chk@plt+0x12f4>
   1282c:	bl	114d8 <__errno_location@plt>
   12830:	ldr	r4, [r0]
   12834:	movw	r1, #12711	; 0x31a7
   12838:	movt	r1, #2
   1283c:	mov	r0, #0
   12840:	mov	r2, #5
   12844:	bl	113a0 <dcgettext@plt>
   12848:	mov	r5, r0
   1284c:	ldr	r1, [r8]
   12850:	mov	r0, #4
   12854:	bl	14258 <__mempcpy_chk@plt+0x2c78>
   12858:	mov	r3, r0
   1285c:	mov	r0, #0
   12860:	mov	r1, r4
   12864:	mov	r2, r5
   12868:	bl	1143c <error@plt>
   1286c:	b	12990 <__mempcpy_chk@plt+0x13b0>
   12870:	movw	r0, #12618	; 0x314a
   12874:	movt	r0, #2
   12878:	bl	11454 <getenv@plt>
   1287c:	movw	r7, #12625	; 0x3151
   12880:	movt	r7, #2
   12884:	cmp	r0, #0
   12888:	movne	r7, r0
   1288c:	movw	r1, #12630	; 0x3156
   12890:	movt	r1, #2
   12894:	mov	r0, r7
   12898:	mov	r2, #0
   1289c:	bl	12aa8 <__mempcpy_chk@plt+0x14c8>
   128a0:	str	r0, [r8]
   128a4:	bl	215ec <__mempcpy_chk@plt+0x1000c>
   128a8:	cmn	r0, #1
   128ac:	ble	128ec <__mempcpy_chk@plt+0x130c>
   128b0:	mov	r6, r0
   128b4:	movw	r1, #12678	; 0x3186
   128b8:	movt	r1, #2
   128bc:	bl	11298 <fdopen@plt>
   128c0:	str	r0, [r4]
   128c4:	cmp	r0, #0
   128c8:	beq	12930 <__mempcpy_chk@plt+0x1350>
   128cc:	ldr	r0, [r8]
   128d0:	bl	1299c <__mempcpy_chk@plt+0x13bc>
   128d4:	ldr	r0, [r4]
   128d8:	str	r0, [r5]
   128dc:	ldr	r0, [r8]
   128e0:	str	r0, [r9]
   128e4:	mov	r6, #1
   128e8:	b	12990 <__mempcpy_chk@plt+0x13b0>
   128ec:	bl	114d8 <__errno_location@plt>
   128f0:	ldr	r4, [r0]
   128f4:	movw	r1, #12640	; 0x3160
   128f8:	movt	r1, #2
   128fc:	mov	r0, #0
   12900:	mov	r2, #5
   12904:	bl	113a0 <dcgettext@plt>
   12908:	mov	r5, r0
   1290c:	mov	r0, #4
   12910:	mov	r1, r7
   12914:	bl	14258 <__mempcpy_chk@plt+0x2c78>
   12918:	mov	r3, r0
   1291c:	mov	r0, #0
   12920:	mov	r1, r4
   12924:	mov	r2, r5
   12928:	bl	1143c <error@plt>
   1292c:	b	12980 <__mempcpy_chk@plt+0x13a0>
   12930:	bl	114d8 <__errno_location@plt>
   12934:	ldr	r4, [r0]
   12938:	movw	r1, #12681	; 0x3189
   1293c:	movt	r1, #2
   12940:	mov	r0, #0
   12944:	mov	r2, #5
   12948:	bl	113a0 <dcgettext@plt>
   1294c:	mov	r5, r0
   12950:	ldr	r1, [r8]
   12954:	mov	r0, #4
   12958:	bl	14258 <__mempcpy_chk@plt+0x2c78>
   1295c:	mov	r3, r0
   12960:	mov	r0, #0
   12964:	mov	r1, r4
   12968:	mov	r2, r5
   1296c:	bl	1143c <error@plt>
   12970:	mov	r0, r6
   12974:	bl	115d4 <close@plt>
   12978:	ldr	r0, [r8]
   1297c:	bl	113ac <unlink@plt>
   12980:	ldr	r0, [r8]
   12984:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   12988:	mov	r6, #0
   1298c:	str	r6, [r8]
   12990:	mov	r0, r6
   12994:	sub	sp, fp, #24
   12998:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1299c:	b	113ac <unlink@plt>
   129a0:	movw	r1, #25336	; 0x62f8
   129a4:	movt	r1, #3
   129a8:	str	r0, [r1]
   129ac:	bx	lr
   129b0:	movw	r1, #25340	; 0x62fc
   129b4:	movt	r1, #3
   129b8:	strb	r0, [r1]
   129bc:	bx	lr
   129c0:	push	{r4, r5, r6, sl, fp, lr}
   129c4:	add	fp, sp, #16
   129c8:	sub	sp, sp, #8
   129cc:	movw	r0, #16788	; 0x4194
   129d0:	movt	r0, #3
   129d4:	ldr	r0, [r0]
   129d8:	bl	22390 <__mempcpy_chk@plt+0x10db0>
   129dc:	cmp	r0, #0
   129e0:	beq	12a08 <__mempcpy_chk@plt+0x1428>
   129e4:	movw	r0, #25340	; 0x62fc
   129e8:	movt	r0, #3
   129ec:	ldrb	r0, [r0]
   129f0:	cmp	r0, #0
   129f4:	beq	12a28 <__mempcpy_chk@plt+0x1448>
   129f8:	bl	114d8 <__errno_location@plt>
   129fc:	ldr	r0, [r0]
   12a00:	cmp	r0, #32
   12a04:	bne	12a28 <__mempcpy_chk@plt+0x1448>
   12a08:	movw	r0, #16784	; 0x4190
   12a0c:	movt	r0, #3
   12a10:	ldr	r0, [r0]
   12a14:	bl	22390 <__mempcpy_chk@plt+0x10db0>
   12a18:	cmp	r0, #0
   12a1c:	subeq	sp, fp, #16
   12a20:	popeq	{r4, r5, r6, sl, fp, pc}
   12a24:	b	12a98 <__mempcpy_chk@plt+0x14b8>
   12a28:	movw	r1, #12606	; 0x313e
   12a2c:	movt	r1, #2
   12a30:	mov	r0, #0
   12a34:	mov	r2, #5
   12a38:	bl	113a0 <dcgettext@plt>
   12a3c:	mov	r4, r0
   12a40:	movw	r0, #25336	; 0x62f8
   12a44:	movt	r0, #3
   12a48:	ldr	r6, [r0]
   12a4c:	bl	114d8 <__errno_location@plt>
   12a50:	ldr	r5, [r0]
   12a54:	cmp	r6, #0
   12a58:	bne	12a74 <__mempcpy_chk@plt+0x1494>
   12a5c:	movw	r2, #12995	; 0x32c3
   12a60:	movt	r2, #2
   12a64:	mov	r0, #0
   12a68:	mov	r1, r5
   12a6c:	mov	r3, r4
   12a70:	b	12a94 <__mempcpy_chk@plt+0x14b4>
   12a74:	mov	r0, r6
   12a78:	bl	142fc <__mempcpy_chk@plt+0x2d1c>
   12a7c:	mov	r3, r0
   12a80:	str	r4, [sp]
   12a84:	movw	r2, #12991	; 0x32bf
   12a88:	movt	r2, #2
   12a8c:	mov	r0, #0
   12a90:	mov	r1, r5
   12a94:	bl	1143c <error@plt>
   12a98:	movw	r0, #16700	; 0x413c
   12a9c:	movt	r0, #3
   12aa0:	ldr	r0, [r0]
   12aa4:	bl	11340 <_exit@plt>
   12aa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aac:	add	fp, sp, #28
   12ab0:	push	{r2}		; (str r2, [sp, #-4]!)
   12ab4:	mov	sl, r1
   12ab8:	mov	r7, r0
   12abc:	bl	21fd8 <__mempcpy_chk@plt+0x109f8>
   12ac0:	sub	r4, r0, r7
   12ac4:	bl	22024 <__mempcpy_chk@plt+0x10a44>
   12ac8:	mov	r6, r0
   12acc:	add	r5, r4, r0
   12ad0:	mov	r0, sl
   12ad4:	bl	114cc <strlen@plt>
   12ad8:	mov	r9, r0
   12adc:	cmp	r6, #0
   12ae0:	beq	12b08 <__mempcpy_chk@plt+0x1528>
   12ae4:	add	r0, r5, r7
   12ae8:	ldrb	r0, [r0, #-1]
   12aec:	mov	r4, #0
   12af0:	cmp	r0, #47	; 0x2f
   12af4:	beq	12b18 <__mempcpy_chk@plt+0x1538>
   12af8:	ldrb	r0, [sl]
   12afc:	subs	r4, r0, #47	; 0x2f
   12b00:	movwne	r4, #47	; 0x2f
   12b04:	b	12b18 <__mempcpy_chk@plt+0x1538>
   12b08:	ldrb	r0, [sl]
   12b0c:	mov	r4, #0
   12b10:	cmp	r0, #47	; 0x2f
   12b14:	movweq	r4, #46	; 0x2e
   12b18:	add	r0, r9, r5
   12b1c:	uxtb	r8, r4
   12b20:	cmp	r8, #0
   12b24:	movwne	r8, #1
   12b28:	add	r0, r0, r8
   12b2c:	add	r0, r0, #1
   12b30:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   12b34:	mov	r6, r0
   12b38:	cmp	r0, #0
   12b3c:	beq	12b7c <__mempcpy_chk@plt+0x159c>
   12b40:	mov	r0, r6
   12b44:	mov	r1, r7
   12b48:	mov	r2, r5
   12b4c:	mvn	r3, #0
   12b50:	bl	115e0 <__mempcpy_chk@plt>
   12b54:	strb	r4, [r0], r8
   12b58:	ldr	r1, [sp]
   12b5c:	cmp	r1, #0
   12b60:	strne	r0, [r1]
   12b64:	mov	r1, sl
   12b68:	mov	r2, r9
   12b6c:	mvn	r3, #0
   12b70:	bl	115e0 <__mempcpy_chk@plt>
   12b74:	mov	r1, #0
   12b78:	strb	r1, [r0]
   12b7c:	mov	r0, r6
   12b80:	sub	sp, fp, #28
   12b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b88:	push	{r4, r5, r6, sl, fp, lr}
   12b8c:	add	fp, sp, #16
   12b90:	mov	r4, r0
   12b94:	bl	114d8 <__errno_location@plt>
   12b98:	mov	r5, r0
   12b9c:	ldr	r6, [r0]
   12ba0:	mov	r0, r4
   12ba4:	bl	11328 <free@plt>
   12ba8:	str	r6, [r5]
   12bac:	pop	{r4, r5, r6, sl, fp, pc}
   12bb0:	push	{r4, r5, r6, r7, fp, lr}
   12bb4:	add	fp, sp, #16
   12bb8:	sub	sp, sp, #8
   12bbc:	mov	r5, r3
   12bc0:	mov	r6, r2
   12bc4:	mov	r4, r0
   12bc8:	ldr	r0, [r0, #4]
   12bcc:	ldr	r1, [r4, #8]
   12bd0:	cmp	r1, r0
   12bd4:	bne	12bf0 <__mempcpy_chk@plt+0x1610>
   12bd8:	ldrd	r0, [r4, #16]
   12bdc:	cmp	r1, r0
   12be0:	bne	12bf0 <__mempcpy_chk@plt+0x1610>
   12be4:	ldr	r0, [r4, #36]	; 0x24
   12be8:	cmp	r0, #0
   12bec:	beq	12c08 <__mempcpy_chk@plt+0x1628>
   12bf0:	mov	r0, r4
   12bf4:	mov	r2, r6
   12bf8:	mov	r3, r5
   12bfc:	sub	sp, fp, #16
   12c00:	pop	{r4, r5, r6, r7, fp, lr}
   12c04:	b	11544 <fseeko64@plt>
   12c08:	ldr	r7, [fp, #8]
   12c0c:	mov	r0, r4
   12c10:	bl	11520 <fileno@plt>
   12c14:	str	r7, [sp]
   12c18:	mov	r2, r6
   12c1c:	mov	r3, r5
   12c20:	bl	11400 <lseek64@plt>
   12c24:	and	r2, r0, r1
   12c28:	cmn	r2, #1
   12c2c:	beq	12c4c <__mempcpy_chk@plt+0x166c>
   12c30:	strd	r0, [r4, #80]	; 0x50
   12c34:	ldr	r0, [r4]
   12c38:	bic	r0, r0, #16
   12c3c:	str	r0, [r4]
   12c40:	mov	r0, #0
   12c44:	sub	sp, fp, #16
   12c48:	pop	{r4, r5, r6, r7, fp, pc}
   12c4c:	mvn	r0, #0
   12c50:	sub	sp, fp, #16
   12c54:	pop	{r4, r5, r6, r7, fp, pc}
   12c58:	push	{r4, r5, fp, lr}
   12c5c:	add	fp, sp, #8
   12c60:	cmp	r0, #0
   12c64:	beq	12cf8 <__mempcpy_chk@plt+0x1718>
   12c68:	mov	r4, r0
   12c6c:	mov	r1, #47	; 0x2f
   12c70:	bl	11574 <strrchr@plt>
   12c74:	cmp	r0, #0
   12c78:	mov	r5, r4
   12c7c:	addne	r5, r0, #1
   12c80:	sub	r0, r5, r4
   12c84:	cmp	r0, #7
   12c88:	blt	12cdc <__mempcpy_chk@plt+0x16fc>
   12c8c:	sub	r0, r5, #7
   12c90:	movw	r1, #13054	; 0x32fe
   12c94:	movt	r1, #2
   12c98:	mov	r2, #7
   12c9c:	bl	115bc <strncmp@plt>
   12ca0:	cmp	r0, #0
   12ca4:	bne	12cdc <__mempcpy_chk@plt+0x16fc>
   12ca8:	movw	r1, #13062	; 0x3306
   12cac:	movt	r1, #2
   12cb0:	mov	r0, r5
   12cb4:	mov	r2, #3
   12cb8:	bl	115bc <strncmp@plt>
   12cbc:	cmp	r0, #0
   12cc0:	beq	12ccc <__mempcpy_chk@plt+0x16ec>
   12cc4:	mov	r4, r5
   12cc8:	b	12cdc <__mempcpy_chk@plt+0x16fc>
   12ccc:	add	r4, r5, #3
   12cd0:	movw	r0, #16768	; 0x4180
   12cd4:	movt	r0, #3
   12cd8:	str	r4, [r0]
   12cdc:	movw	r0, #16772	; 0x4184
   12ce0:	movt	r0, #3
   12ce4:	str	r4, [r0]
   12ce8:	movw	r0, #25344	; 0x6300
   12cec:	movt	r0, #3
   12cf0:	str	r4, [r0]
   12cf4:	pop	{r4, r5, fp, pc}
   12cf8:	movw	r0, #16784	; 0x4190
   12cfc:	movt	r0, #3
   12d00:	ldr	r3, [r0]
   12d04:	movw	r0, #12998	; 0x32c6
   12d08:	movt	r0, #2
   12d0c:	mov	r1, #55	; 0x37
   12d10:	mov	r2, #1
   12d14:	bl	113f4 <fwrite@plt>
   12d18:	bl	115c8 <abort@plt>
   12d1c:	push	{r4, r5, r6, sl, fp, lr}
   12d20:	add	fp, sp, #16
   12d24:	mov	r4, r0
   12d28:	movw	r0, #25352	; 0x6308
   12d2c:	movt	r0, #3
   12d30:	cmp	r4, #0
   12d34:	moveq	r4, r0
   12d38:	bl	114d8 <__errno_location@plt>
   12d3c:	mov	r5, r0
   12d40:	ldr	r6, [r0]
   12d44:	mov	r0, r4
   12d48:	mov	r1, #48	; 0x30
   12d4c:	bl	21e14 <__mempcpy_chk@plt+0x10834>
   12d50:	str	r6, [r5]
   12d54:	pop	{r4, r5, r6, sl, fp, pc}
   12d58:	movw	r1, #25352	; 0x6308
   12d5c:	movt	r1, #3
   12d60:	cmp	r0, #0
   12d64:	movne	r1, r0
   12d68:	ldr	r0, [r1]
   12d6c:	bx	lr
   12d70:	movw	r2, #25352	; 0x6308
   12d74:	movt	r2, #3
   12d78:	cmp	r0, #0
   12d7c:	movne	r2, r0
   12d80:	str	r1, [r2]
   12d84:	bx	lr
   12d88:	movw	r3, #25352	; 0x6308
   12d8c:	movt	r3, #3
   12d90:	cmp	r0, #0
   12d94:	movne	r3, r0
   12d98:	ubfx	r0, r1, #5, #3
   12d9c:	add	ip, r3, r0, lsl #2
   12da0:	ldr	r3, [ip, #8]
   12da4:	and	r1, r1, #31
   12da8:	mov	r0, #1
   12dac:	and	r0, r0, r3, lsr r1
   12db0:	and	r2, r2, #1
   12db4:	eor	r2, r0, r2
   12db8:	eor	r1, r3, r2, lsl r1
   12dbc:	str	r1, [ip, #8]
   12dc0:	bx	lr
   12dc4:	movw	r2, #25352	; 0x6308
   12dc8:	movt	r2, #3
   12dcc:	cmp	r0, #0
   12dd0:	movne	r2, r0
   12dd4:	ldr	r0, [r2, #4]
   12dd8:	str	r1, [r2, #4]
   12ddc:	bx	lr
   12de0:	push	{fp, lr}
   12de4:	mov	fp, sp
   12de8:	movw	r3, #25352	; 0x6308
   12dec:	movt	r3, #3
   12df0:	cmp	r0, #0
   12df4:	movne	r3, r0
   12df8:	mov	r0, #10
   12dfc:	str	r0, [r3]
   12e00:	cmp	r1, #0
   12e04:	cmpne	r2, #0
   12e08:	bne	12e10 <__mempcpy_chk@plt+0x1830>
   12e0c:	bl	115c8 <abort@plt>
   12e10:	str	r1, [r3, #40]	; 0x28
   12e14:	str	r2, [r3, #44]	; 0x2c
   12e18:	pop	{fp, pc}
   12e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e20:	add	fp, sp, #28
   12e24:	sub	sp, sp, #20
   12e28:	mov	r8, r3
   12e2c:	mov	r9, r2
   12e30:	mov	sl, r1
   12e34:	mov	r7, r0
   12e38:	ldr	r0, [fp, #8]
   12e3c:	movw	r5, #25352	; 0x6308
   12e40:	movt	r5, #3
   12e44:	cmp	r0, #0
   12e48:	movne	r5, r0
   12e4c:	bl	114d8 <__errno_location@plt>
   12e50:	mov	r4, r0
   12e54:	ldm	r5, {r0, r1}
   12e58:	ldr	r2, [r5, #40]	; 0x28
   12e5c:	ldr	r3, [r5, #44]	; 0x2c
   12e60:	ldr	r6, [r4]
   12e64:	add	r5, r5, #8
   12e68:	stm	sp, {r0, r1, r5}
   12e6c:	str	r2, [sp, #12]
   12e70:	str	r3, [sp, #16]
   12e74:	mov	r0, r7
   12e78:	mov	r1, sl
   12e7c:	mov	r2, r9
   12e80:	mov	r3, r8
   12e84:	bl	12e94 <__mempcpy_chk@plt+0x18b4>
   12e88:	str	r6, [r4]
   12e8c:	sub	sp, fp, #28
   12e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e98:	add	fp, sp, #28
   12e9c:	sub	sp, sp, #156	; 0x9c
   12ea0:	mov	r9, r3
   12ea4:	mov	r7, r1
   12ea8:	mov	r6, r0
   12eac:	str	r2, [fp, #-80]	; 0xffffffb0
   12eb0:	add	r0, r2, #1
   12eb4:	str	r0, [sp, #76]	; 0x4c
   12eb8:	ldr	r0, [fp, #12]
   12ebc:	and	r1, r0, #1
   12ec0:	str	r1, [sp, #40]	; 0x28
   12ec4:	and	r1, r0, #4
   12ec8:	str	r1, [sp, #36]	; 0x24
   12ecc:	ubfx	r4, r0, #1, #1
   12ed0:	bl	1140c <__ctype_get_mb_cur_max@plt>
   12ed4:	str	r0, [sp, #44]	; 0x2c
   12ed8:	ldr	r0, [fp, #24]
   12edc:	str	r0, [sp, #88]	; 0x58
   12ee0:	ldr	r0, [fp, #20]
   12ee4:	str	r0, [sp, #80]	; 0x50
   12ee8:	ldr	r1, [fp, #8]
   12eec:	mov	r0, #0
   12ef0:	str	r0, [sp, #84]	; 0x54
   12ef4:	mov	r0, #0
   12ef8:	str	r0, [fp, #-84]	; 0xffffffac
   12efc:	mov	r0, #0
   12f00:	str	r0, [fp, #-72]	; 0xffffffb8
   12f04:	mov	r0, #0
   12f08:	mov	r2, #0
   12f0c:	str	r2, [fp, #-56]	; 0xffffffc8
   12f10:	mov	r2, #0
   12f14:	str	r2, [sp, #64]	; 0x40
   12f18:	mov	r2, #1
   12f1c:	str	r2, [fp, #-48]	; 0xffffffd0
   12f20:	cmp	r1, #10
   12f24:	bhi	13e50 <__mempcpy_chk@plt+0x2870>
   12f28:	mov	sl, r7
   12f2c:	mov	r7, r1
   12f30:	add	r1, pc, #24
   12f34:	mov	r8, #0
   12f38:	mov	r2, #1
   12f3c:	mov	r3, #0
   12f40:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12f44:	mov	lr, r9
   12f48:	mov	r5, r6
   12f4c:	ldr	pc, [r1, r7, lsl #2]
   12f50:	andeq	r3, r1, r4, lsr #32
   12f54:	andeq	r3, r1, r4, rrx
   12f58:	andeq	r3, r1, r4, lsr r0
   12f5c:	andeq	r3, r1, ip, lsl r0
   12f60:	andeq	r3, r1, r8, asr r0
   12f64:	strheq	r3, [r1], -r8
   12f68:	andeq	r3, r1, r4, asr #32
   12f6c:	andeq	r3, r1, r4, lsl r1
   12f70:	andeq	r2, r1, ip, ror pc
   12f74:	andeq	r2, r1, ip, ror pc
   12f78:	andeq	r2, r1, r8, lsr #31
   12f7c:	movw	r0, #13144	; 0x3358
   12f80:	movt	r0, #2
   12f84:	mov	r1, r7
   12f88:	bl	14458 <__mempcpy_chk@plt+0x2e78>
   12f8c:	str	r0, [sp, #80]	; 0x50
   12f90:	movw	r0, #13146	; 0x335a
   12f94:	movt	r0, #2
   12f98:	mov	r1, r7
   12f9c:	bl	14458 <__mempcpy_chk@plt+0x2e78>
   12fa0:	mov	r5, r6
   12fa4:	str	r0, [sp, #88]	; 0x58
   12fa8:	mov	r8, #0
   12fac:	tst	r4, #1
   12fb0:	str	r7, [fp, #-64]	; 0xffffffc0
   12fb4:	bne	12fec <__mempcpy_chk@plt+0x1a0c>
   12fb8:	ldr	r0, [sp, #80]	; 0x50
   12fbc:	ldrb	r0, [r0]
   12fc0:	cmp	r0, #0
   12fc4:	beq	12fec <__mempcpy_chk@plt+0x1a0c>
   12fc8:	ldr	r1, [sp, #80]	; 0x50
   12fcc:	add	r1, r1, #1
   12fd0:	mov	r8, #0
   12fd4:	cmp	r8, sl
   12fd8:	strbcc	r0, [r5, r8]
   12fdc:	ldrb	r0, [r1, r8]
   12fe0:	add	r8, r8, #1
   12fe4:	cmp	r0, #0
   12fe8:	bne	12fd4 <__mempcpy_chk@plt+0x19f4>
   12fec:	ldr	r7, [sp, #88]	; 0x58
   12ff0:	mov	r0, r7
   12ff4:	bl	114cc <strlen@plt>
   12ff8:	mov	r5, r6
   12ffc:	str	r0, [fp, #-72]	; 0xffffffb8
   13000:	str	r7, [fp, #-84]	; 0xffffffac
   13004:	mov	r2, #1
   13008:	mov	r3, r4
   1300c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13010:	mov	lr, r9
   13014:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13018:	b	13114 <__mempcpy_chk@plt+0x1b34>
   1301c:	mov	r0, #1
   13020:	b	13064 <__mempcpy_chk@plt+0x1a84>
   13024:	mov	r7, #0
   13028:	mov	r8, #0
   1302c:	mov	r2, r0
   13030:	b	13110 <__mempcpy_chk@plt+0x1b30>
   13034:	tst	r4, #1
   13038:	bne	13064 <__mempcpy_chk@plt+0x1a84>
   1303c:	mov	r2, r0
   13040:	b	1308c <__mempcpy_chk@plt+0x1aac>
   13044:	mov	r0, #1
   13048:	str	r0, [fp, #-72]	; 0xffffffb8
   1304c:	mov	r8, #0
   13050:	mov	r7, #5
   13054:	b	130d0 <__mempcpy_chk@plt+0x1af0>
   13058:	mov	r2, #1
   1305c:	tst	r4, #1
   13060:	beq	1308c <__mempcpy_chk@plt+0x1aac>
   13064:	mov	r1, #1
   13068:	str	r1, [fp, #-72]	; 0xffffffb8
   1306c:	mov	r8, #0
   13070:	mov	r7, #2
   13074:	movw	r1, #13146	; 0x335a
   13078:	movt	r1, #2
   1307c:	str	r1, [fp, #-84]	; 0xffffffac
   13080:	mov	r2, r0
   13084:	mov	r3, #1
   13088:	b	13114 <__mempcpy_chk@plt+0x1b34>
   1308c:	mov	r8, #1
   13090:	mov	r7, #2
   13094:	cmp	sl, #0
   13098:	movne	r0, #39	; 0x27
   1309c:	strbne	r0, [r5]
   130a0:	movw	r0, #13146	; 0x335a
   130a4:	movt	r0, #2
   130a8:	str	r0, [fp, #-84]	; 0xffffffac
   130ac:	mov	r0, #1
   130b0:	str	r0, [fp, #-72]	; 0xffffffb8
   130b4:	b	13110 <__mempcpy_chk@plt+0x1b30>
   130b8:	mov	r7, #5
   130bc:	tst	r4, #1
   130c0:	beq	130e8 <__mempcpy_chk@plt+0x1b08>
   130c4:	mov	r0, #1
   130c8:	str	r0, [fp, #-72]	; 0xffffffb8
   130cc:	mov	r8, #0
   130d0:	movw	r0, #13142	; 0x3356
   130d4:	movt	r0, #2
   130d8:	str	r0, [fp, #-84]	; 0xffffffac
   130dc:	mov	r2, #1
   130e0:	mov	r3, #1
   130e4:	b	13114 <__mempcpy_chk@plt+0x1b34>
   130e8:	cmp	sl, #0
   130ec:	movne	r0, #34	; 0x22
   130f0:	strbne	r0, [r5]
   130f4:	mov	r8, #1
   130f8:	movw	r0, #13142	; 0x3356
   130fc:	movt	r0, #2
   13100:	str	r0, [fp, #-84]	; 0xffffffac
   13104:	mov	r0, #1
   13108:	str	r0, [fp, #-72]	; 0xffffffb8
   1310c:	mov	r2, #1
   13110:	mov	r3, #0
   13114:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13118:	cmp	r0, #0
   1311c:	movwne	r0, #1
   13120:	and	r1, r0, r3
   13124:	and	r1, r2, r1
   13128:	str	r1, [sp, #56]	; 0x38
   1312c:	sub	r1, r7, #2
   13130:	clz	r1, r1
   13134:	lsr	r1, r1, #5
   13138:	and	r1, r1, r3
   1313c:	str	r1, [sp, #68]	; 0x44
   13140:	str	r7, [fp, #-64]	; 0xffffffc0
   13144:	subs	r1, r7, #2
   13148:	movwne	r1, #1
   1314c:	eor	r4, r3, #1
   13150:	str	r4, [fp, #-88]	; 0xffffffa8
   13154:	orr	r4, r1, r4
   13158:	str	r4, [sp, #72]	; 0x48
   1315c:	and	r1, r1, r2
   13160:	and	r0, r0, r1
   13164:	str	r0, [fp, #-60]	; 0xffffffc4
   13168:	str	r3, [fp, #-76]	; 0xffffffb4
   1316c:	orr	r0, r1, r3
   13170:	eor	r0, r0, #1
   13174:	ldr	r1, [fp, #16]
   13178:	clz	r1, r1
   1317c:	lsr	r1, r1, #5
   13180:	orr	r0, r1, r0
   13184:	str	r0, [fp, #-68]	; 0xffffffbc
   13188:	str	r2, [sp, #92]	; 0x5c
   1318c:	eor	r0, r2, #1
   13190:	str	r0, [sp, #60]	; 0x3c
   13194:	mov	r7, #0
   13198:	cmn	lr, #1
   1319c:	beq	131ac <__mempcpy_chk@plt+0x1bcc>
   131a0:	cmp	r7, lr
   131a4:	bne	131b8 <__mempcpy_chk@plt+0x1bd8>
   131a8:	b	13cc4 <__mempcpy_chk@plt+0x26e4>
   131ac:	ldrb	r0, [ip, r7]
   131b0:	cmp	r0, #0
   131b4:	beq	13cc4 <__mempcpy_chk@plt+0x26e4>
   131b8:	mov	r9, #0
   131bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   131c0:	cmp	r0, #0
   131c4:	beq	131f8 <__mempcpy_chk@plt+0x1c18>
   131c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   131cc:	add	r4, r7, r0
   131d0:	cmp	r0, #2
   131d4:	bcc	131f0 <__mempcpy_chk@plt+0x1c10>
   131d8:	cmn	lr, #1
   131dc:	bne	131f0 <__mempcpy_chk@plt+0x1c10>
   131e0:	mov	r0, ip
   131e4:	bl	114cc <strlen@plt>
   131e8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   131ec:	mov	lr, r0
   131f0:	cmp	r4, lr
   131f4:	bls	13204 <__mempcpy_chk@plt+0x1c24>
   131f8:	mov	r0, #0
   131fc:	str	r0, [fp, #-52]	; 0xffffffcc
   13200:	b	13248 <__mempcpy_chk@plt+0x1c68>
   13204:	mov	r4, lr
   13208:	add	r0, ip, r7
   1320c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13210:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13214:	bl	114c0 <bcmp@plt>
   13218:	cmp	r0, #0
   1321c:	mov	r1, r0
   13220:	movwne	r1, #1
   13224:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13228:	orr	r1, r1, r2
   1322c:	tst	r1, #1
   13230:	beq	13d98 <__mempcpy_chk@plt+0x27b8>
   13234:	clz	r0, r0
   13238:	lsr	r0, r0, #5
   1323c:	str	r0, [fp, #-52]	; 0xffffffcc
   13240:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13244:	mov	lr, r4
   13248:	ldrb	r4, [ip, r7]
   1324c:	cmp	r4, #126	; 0x7e
   13250:	bhi	13780 <__mempcpy_chk@plt+0x21a0>
   13254:	mov	r6, #1
   13258:	mov	r2, #110	; 0x6e
   1325c:	mov	r0, #97	; 0x61
   13260:	add	r3, pc, #4
   13264:	mov	r1, #0
   13268:	ldr	pc, [r3, r4, lsl #2]
   1326c:	andeq	r3, r1, r0, ror #11
   13270:	andeq	r3, r1, r0, lsl #15
   13274:	andeq	r3, r1, r0, lsl #15
   13278:	andeq	r3, r1, r0, lsl #15
   1327c:	andeq	r3, r1, r0, lsl #15
   13280:	andeq	r3, r1, r0, lsl #15
   13284:	andeq	r3, r1, r0, lsl #15
   13288:	andeq	r3, r1, r4, asr r8
   1328c:	andeq	r3, r1, r0, asr #11
   13290:			; <UNDEFINED> instruction: 0x000135b8
   13294:	andeq	r3, r1, ip, asr #11
   13298:	andeq	r3, r1, r8, ror #13
   1329c:			; <UNDEFINED> instruction: 0x000135b0
   132a0:	andeq	r3, r1, r8, asr #11
   132a4:	andeq	r3, r1, r0, lsl #15
   132a8:	andeq	r3, r1, r0, lsl #15
   132ac:	andeq	r3, r1, r0, lsl #15
   132b0:	andeq	r3, r1, r0, lsl #15
   132b4:	andeq	r3, r1, r0, lsl #15
   132b8:	andeq	r3, r1, r0, lsl #15
   132bc:	andeq	r3, r1, r0, lsl #15
   132c0:	andeq	r3, r1, r0, lsl #15
   132c4:	andeq	r3, r1, r0, lsl #15
   132c8:	andeq	r3, r1, r0, lsl #15
   132cc:	andeq	r3, r1, r0, lsl #15
   132d0:	andeq	r3, r1, r0, lsl #15
   132d4:	andeq	r3, r1, r0, lsl #15
   132d8:	andeq	r3, r1, r0, lsl #15
   132dc:	andeq	r3, r1, r0, lsl #15
   132e0:	andeq	r3, r1, r0, lsl #15
   132e4:	andeq	r3, r1, r0, lsl #15
   132e8:	andeq	r3, r1, r0, lsl #15
   132ec:	andeq	r3, r1, r4, ror #10
   132f0:	andeq	r3, r1, r8, ror #10
   132f4:	andeq	r3, r1, r8, ror #10
   132f8:	andeq	r3, r1, r0, asr r5
   132fc:	andeq	r3, r1, r8, ror #10
   13300:	andeq	r3, r1, r8, ror #8
   13304:	andeq	r3, r1, r8, ror #10
   13308:	strdeq	r3, [r1], -r0
   1330c:	andeq	r3, r1, r8, ror #10
   13310:	andeq	r3, r1, r8, ror #10
   13314:	andeq	r3, r1, r8, ror #10
   13318:	andeq	r3, r1, r8, ror #8
   1331c:	andeq	r3, r1, r8, ror #8
   13320:	andeq	r3, r1, r8, ror #8
   13324:	andeq	r3, r1, r8, ror #8
   13328:	andeq	r3, r1, r8, ror #8
   1332c:	andeq	r3, r1, r8, ror #8
   13330:	andeq	r3, r1, r8, ror #8
   13334:	andeq	r3, r1, r8, ror #8
   13338:	andeq	r3, r1, r8, ror #8
   1333c:	andeq	r3, r1, r8, ror #8
   13340:	andeq	r3, r1, r8, ror #8
   13344:	andeq	r3, r1, r8, ror #8
   13348:	andeq	r3, r1, r8, ror #8
   1334c:	andeq	r3, r1, r8, ror #8
   13350:	andeq	r3, r1, r8, ror #8
   13354:	andeq	r3, r1, r8, ror #8
   13358:	andeq	r3, r1, r8, ror #10
   1335c:	andeq	r3, r1, r8, ror #10
   13360:	andeq	r3, r1, r8, ror #10
   13364:	andeq	r3, r1, r8, ror #10
   13368:			; <UNDEFINED> instruction: 0x000136b8
   1336c:	andeq	r3, r1, r0, lsl #15
   13370:	andeq	r3, r1, r8, ror #8
   13374:	andeq	r3, r1, r8, ror #8
   13378:	andeq	r3, r1, r8, ror #8
   1337c:	andeq	r3, r1, r8, ror #8
   13380:	andeq	r3, r1, r8, ror #8
   13384:	andeq	r3, r1, r8, ror #8
   13388:	andeq	r3, r1, r8, ror #8
   1338c:	andeq	r3, r1, r8, ror #8
   13390:	andeq	r3, r1, r8, ror #8
   13394:	andeq	r3, r1, r8, ror #8
   13398:	andeq	r3, r1, r8, ror #8
   1339c:	andeq	r3, r1, r8, ror #8
   133a0:	andeq	r3, r1, r8, ror #8
   133a4:	andeq	r3, r1, r8, ror #8
   133a8:	andeq	r3, r1, r8, ror #8
   133ac:	andeq	r3, r1, r8, ror #8
   133b0:	andeq	r3, r1, r8, ror #8
   133b4:	andeq	r3, r1, r8, ror #8
   133b8:	andeq	r3, r1, r8, ror #8
   133bc:	andeq	r3, r1, r8, ror #8
   133c0:	andeq	r3, r1, r8, ror #8
   133c4:	andeq	r3, r1, r8, ror #8
   133c8:	andeq	r3, r1, r8, ror #8
   133cc:	andeq	r3, r1, r8, ror #8
   133d0:	andeq	r3, r1, r8, ror #8
   133d4:	andeq	r3, r1, r8, ror #8
   133d8:	andeq	r3, r1, r8, ror #10
   133dc:	muleq	r1, r0, r5
   133e0:	andeq	r3, r1, r8, ror #8
   133e4:	andeq	r3, r1, r8, ror #10
   133e8:	andeq	r3, r1, r8, ror #8
   133ec:	andeq	r3, r1, r8, ror #10
   133f0:	andeq	r3, r1, r8, ror #8
   133f4:	andeq	r3, r1, r8, ror #8
   133f8:	andeq	r3, r1, r8, ror #8
   133fc:	andeq	r3, r1, r8, ror #8
   13400:	andeq	r3, r1, r8, ror #8
   13404:	andeq	r3, r1, r8, ror #8
   13408:	andeq	r3, r1, r8, ror #8
   1340c:	andeq	r3, r1, r8, ror #8
   13410:	andeq	r3, r1, r8, ror #8
   13414:	andeq	r3, r1, r8, ror #8
   13418:	andeq	r3, r1, r8, ror #8
   1341c:	andeq	r3, r1, r8, ror #8
   13420:	andeq	r3, r1, r8, ror #8
   13424:	andeq	r3, r1, r8, ror #8
   13428:	andeq	r3, r1, r8, ror #8
   1342c:	andeq	r3, r1, r8, ror #8
   13430:	andeq	r3, r1, r8, ror #8
   13434:	andeq	r3, r1, r8, ror #8
   13438:	andeq	r3, r1, r8, ror #8
   1343c:	andeq	r3, r1, r8, ror #8
   13440:	andeq	r3, r1, r8, ror #8
   13444:	andeq	r3, r1, r8, ror #8
   13448:	andeq	r3, r1, r8, ror #8
   1344c:	andeq	r3, r1, r8, ror #8
   13450:	andeq	r3, r1, r8, ror #8
   13454:	andeq	r3, r1, r8, ror #8
   13458:	andeq	r3, r1, r4, lsr #10
   1345c:	andeq	r3, r1, r8, ror #10
   13460:	andeq	r3, r1, r4, lsr #10
   13464:	andeq	r3, r1, r0, asr r5
   13468:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1346c:	tst	r0, #1
   13470:	bne	1349c <__mempcpy_chk@plt+0x1ebc>
   13474:	ubfx	r0, r4, #5, #3
   13478:	ldr	r1, [fp, #16]
   1347c:	ldr	r0, [r1, r0, lsl #2]
   13480:	and	r1, r4, #31
   13484:	mov	r2, #1
   13488:	tst	r0, r2, lsl r1
   1348c:	beq	1349c <__mempcpy_chk@plt+0x1ebc>
   13490:	mov	r0, r4
   13494:	mov	r1, r6
   13498:	b	134b0 <__mempcpy_chk@plt+0x1ed0>
   1349c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   134a0:	cmp	r0, #0
   134a4:	mov	r0, r4
   134a8:	mov	r1, r6
   134ac:	beq	137e8 <__mempcpy_chk@plt+0x2208>
   134b0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   134b4:	tst	r2, #1
   134b8:	bne	13dac <__mempcpy_chk@plt+0x27cc>
   134bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   134c0:	subs	r2, r2, #2
   134c4:	movwne	r2, #1
   134c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   134cc:	orr	r2, r2, r3
   134d0:	tst	r2, #1
   134d4:	bne	13510 <__mempcpy_chk@plt+0x1f30>
   134d8:	cmp	r8, sl
   134dc:	movcc	r2, #39	; 0x27
   134e0:	strbcc	r2, [r5, r8]
   134e4:	add	r2, r8, #1
   134e8:	cmp	r2, sl
   134ec:	movcc	r3, #36	; 0x24
   134f0:	strbcc	r3, [r5, r2]
   134f4:	add	r2, r8, #2
   134f8:	cmp	r2, sl
   134fc:	movcc	r3, #39	; 0x27
   13500:	strbcc	r3, [r5, r2]
   13504:	add	r8, r8, #3
   13508:	mov	r2, #1
   1350c:	str	r2, [fp, #-56]	; 0xffffffc8
   13510:	cmp	r8, sl
   13514:	movcc	r2, #92	; 0x5c
   13518:	strbcc	r2, [r5, r8]
   1351c:	add	r8, r8, #1
   13520:	b	1382c <__mempcpy_chk@plt+0x224c>
   13524:	cmp	lr, #1
   13528:	beq	13550 <__mempcpy_chk@plt+0x1f70>
   1352c:	mov	r6, #0
   13530:	cmn	lr, #1
   13534:	bne	1355c <__mempcpy_chk@plt+0x1f7c>
   13538:	ldrb	r0, [ip, #1]
   1353c:	cmp	r0, #0
   13540:	beq	13550 <__mempcpy_chk@plt+0x1f70>
   13544:	mvn	lr, #0
   13548:	mov	r9, #0
   1354c:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13550:	mov	r6, #0
   13554:	cmp	r7, #0
   13558:	beq	13564 <__mempcpy_chk@plt+0x1f84>
   1355c:	mov	r9, #0
   13560:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13564:	mov	r1, #1
   13568:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1356c:	cmp	r0, #2
   13570:	bne	13588 <__mempcpy_chk@plt+0x1fa8>
   13574:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13578:	tst	r0, #1
   1357c:	mov	r6, r1
   13580:	beq	13468 <__mempcpy_chk@plt+0x1e88>
   13584:	b	13dac <__mempcpy_chk@plt+0x27cc>
   13588:	mov	r6, r1
   1358c:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13590:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13594:	cmp	r0, #2
   13598:	bne	137cc <__mempcpy_chk@plt+0x21ec>
   1359c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   135a0:	tst	r0, #1
   135a4:	bne	13dac <__mempcpy_chk@plt+0x27cc>
   135a8:	mov	r9, #0
   135ac:	b	137e0 <__mempcpy_chk@plt+0x2200>
   135b0:	mov	r0, #102	; 0x66
   135b4:	b	13854 <__mempcpy_chk@plt+0x2274>
   135b8:	mov	r2, #116	; 0x74
   135bc:	b	135cc <__mempcpy_chk@plt+0x1fec>
   135c0:	mov	r0, #98	; 0x62
   135c4:	b	13854 <__mempcpy_chk@plt+0x2274>
   135c8:	mov	r2, #114	; 0x72
   135cc:	ldr	r0, [sp, #72]	; 0x48
   135d0:	tst	r0, #1
   135d4:	mov	r0, r2
   135d8:	bne	13854 <__mempcpy_chk@plt+0x2274>
   135dc:	b	13dac <__mempcpy_chk@plt+0x27cc>
   135e0:	ldr	r0, [sp, #92]	; 0x5c
   135e4:	tst	r0, #1
   135e8:	beq	13870 <__mempcpy_chk@plt+0x2290>
   135ec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   135f0:	tst	r0, #1
   135f4:	bne	13dac <__mempcpy_chk@plt+0x27cc>
   135f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   135fc:	subs	r0, r0, #2
   13600:	movwne	r0, #1
   13604:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13608:	orr	r0, r0, r1
   1360c:	tst	r0, #1
   13610:	bne	1364c <__mempcpy_chk@plt+0x206c>
   13614:	cmp	r8, sl
   13618:	movcc	r0, #39	; 0x27
   1361c:	strbcc	r0, [r5, r8]
   13620:	add	r0, r8, #1
   13624:	cmp	r0, sl
   13628:	movcc	r1, #36	; 0x24
   1362c:	strbcc	r1, [r5, r0]
   13630:	add	r0, r8, #2
   13634:	cmp	r0, sl
   13638:	movcc	r1, #39	; 0x27
   1363c:	strbcc	r1, [r5, r0]
   13640:	add	r8, r8, #3
   13644:	mov	r0, #1
   13648:	str	r0, [fp, #-56]	; 0xffffffc8
   1364c:	cmp	r8, sl
   13650:	movcc	r0, #92	; 0x5c
   13654:	strbcc	r0, [r5, r8]
   13658:	add	r0, r8, #1
   1365c:	mov	r6, #0
   13660:	mov	r9, #1
   13664:	mov	r4, #48	; 0x30
   13668:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1366c:	cmp	r1, #2
   13670:	beq	13a34 <__mempcpy_chk@plt+0x2454>
   13674:	add	r1, r7, #1
   13678:	cmp	r1, lr
   1367c:	bcs	13a34 <__mempcpy_chk@plt+0x2454>
   13680:	ldrb	r1, [ip, r1]
   13684:	sub	r1, r1, #48	; 0x30
   13688:	uxtb	r1, r1
   1368c:	cmp	r1, #9
   13690:	bhi	13a34 <__mempcpy_chk@plt+0x2454>
   13694:	cmp	r0, sl
   13698:	movcc	r1, #48	; 0x30
   1369c:	strbcc	r1, [r5, r0]
   136a0:	add	r0, r8, #2
   136a4:	cmp	r0, sl
   136a8:	movcc	r1, #48	; 0x30
   136ac:	strbcc	r1, [r5, r0]
   136b0:	add	r8, r8, #3
   136b4:	b	13468 <__mempcpy_chk@plt+0x1e88>
   136b8:	mov	r9, #0
   136bc:	mov	r4, #63	; 0x3f
   136c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   136c4:	cmp	r0, #5
   136c8:	beq	13a3c <__mempcpy_chk@plt+0x245c>
   136cc:	cmp	r0, #2
   136d0:	bne	13ae4 <__mempcpy_chk@plt+0x2504>
   136d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   136d8:	tst	r0, #1
   136dc:	mov	r6, #0
   136e0:	beq	13468 <__mempcpy_chk@plt+0x1e88>
   136e4:	b	13dac <__mempcpy_chk@plt+0x27cc>
   136e8:	mov	r0, #118	; 0x76
   136ec:	b	13854 <__mempcpy_chk@plt+0x2274>
   136f0:	mov	r4, #39	; 0x27
   136f4:	mov	r0, #1
   136f8:	str	r0, [sp, #64]	; 0x40
   136fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13700:	cmp	r0, #2
   13704:	bne	1388c <__mempcpy_chk@plt+0x22ac>
   13708:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1370c:	tst	r0, #1
   13710:	bne	13dac <__mempcpy_chk@plt+0x27cc>
   13714:	ldr	r2, [sp, #84]	; 0x54
   13718:	cmp	r2, #0
   1371c:	mov	r0, r2
   13720:	movwne	r0, #1
   13724:	clz	r1, sl
   13728:	lsr	r1, r1, #5
   1372c:	orrs	r0, r0, r1
   13730:	moveq	r2, sl
   13734:	str	r2, [sp, #84]	; 0x54
   13738:	moveq	sl, r0
   1373c:	cmp	r8, sl
   13740:	movcc	r0, #39	; 0x27
   13744:	strbcc	r0, [r5, r8]
   13748:	add	r0, r8, #1
   1374c:	cmp	r0, sl
   13750:	movcc	r1, #92	; 0x5c
   13754:	strbcc	r1, [r5, r0]
   13758:	add	r0, r8, #2
   1375c:	cmp	r0, sl
   13760:	movcc	r1, #39	; 0x27
   13764:	strbcc	r1, [r5, r0]
   13768:	add	r8, r8, #3
   1376c:	mov	r0, #0
   13770:	str	r0, [fp, #-56]	; 0xffffffc8
   13774:	mov	r9, #0
   13778:	mov	r6, #1
   1377c:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13780:	ldr	r0, [sp, #44]	; 0x2c
   13784:	cmp	r0, #1
   13788:	bne	13894 <__mempcpy_chk@plt+0x22b4>
   1378c:	str	lr, [sp, #32]
   13790:	bl	114a8 <__ctype_b_loc@plt>
   13794:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13798:	ldr	r0, [r0]
   1379c:	add	r0, r0, r4, lsl #1
   137a0:	ldrb	r0, [r0, #1]
   137a4:	ubfx	r6, r0, #6, #1
   137a8:	mov	r2, #1
   137ac:	ldr	r0, [sp, #60]	; 0x3c
   137b0:	orr	r1, r6, r0
   137b4:	cmp	r2, #1
   137b8:	bhi	13aec <__mempcpy_chk@plt+0x250c>
   137bc:	tst	r1, #1
   137c0:	beq	13aec <__mempcpy_chk@plt+0x250c>
   137c4:	ldr	lr, [sp, #32]
   137c8:	b	13468 <__mempcpy_chk@plt+0x1e88>
   137cc:	mov	r9, #0
   137d0:	mov	r0, #92	; 0x5c
   137d4:	ldr	r1, [sp, #56]	; 0x38
   137d8:	cmp	r1, #0
   137dc:	beq	13854 <__mempcpy_chk@plt+0x2274>
   137e0:	mov	r4, #92	; 0x5c
   137e4:	mov	r6, #0
   137e8:	cmp	r9, #0
   137ec:	bne	13824 <__mempcpy_chk@plt+0x2244>
   137f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   137f4:	tst	r0, #1
   137f8:	beq	13824 <__mempcpy_chk@plt+0x2244>
   137fc:	cmp	r8, sl
   13800:	movcc	r0, #39	; 0x27
   13804:	strbcc	r0, [r5, r8]
   13808:	add	r0, r8, #1
   1380c:	cmp	r0, sl
   13810:	movcc	r1, #39	; 0x27
   13814:	strbcc	r1, [r5, r0]
   13818:	add	r8, r8, #2
   1381c:	mov	r0, #0
   13820:	str	r0, [fp, #-56]	; 0xffffffc8
   13824:	mov	r1, r6
   13828:	mov	r0, r4
   1382c:	cmp	r8, sl
   13830:	strbcc	r0, [r5, r8]
   13834:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13838:	and	r0, r0, r1
   1383c:	str	r0, [fp, #-48]	; 0xffffffd0
   13840:	add	r8, r8, #1
   13844:	add	r7, r7, #1
   13848:	cmn	lr, #1
   1384c:	bne	131a0 <__mempcpy_chk@plt+0x1bc0>
   13850:	b	131ac <__mempcpy_chk@plt+0x1bcc>
   13854:	mov	r9, #0
   13858:	ldr	r1, [sp, #92]	; 0x5c
   1385c:	tst	r1, #1
   13860:	mov	r6, #0
   13864:	mov	r1, #0
   13868:	beq	13468 <__mempcpy_chk@plt+0x1e88>
   1386c:	b	134b0 <__mempcpy_chk@plt+0x1ed0>
   13870:	mov	r4, #0
   13874:	ldr	r0, [sp, #40]	; 0x28
   13878:	cmp	r0, #0
   1387c:	mov	r9, #0
   13880:	mov	r6, #0
   13884:	beq	13468 <__mempcpy_chk@plt+0x1e88>
   13888:	b	13844 <__mempcpy_chk@plt+0x2264>
   1388c:	mov	r6, #1
   13890:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13894:	mov	r0, #0
   13898:	str	r0, [fp, #-36]	; 0xffffffdc
   1389c:	str	r0, [fp, #-40]	; 0xffffffd8
   138a0:	cmn	lr, #1
   138a4:	bne	138b8 <__mempcpy_chk@plt+0x22d8>
   138a8:	mov	r0, ip
   138ac:	bl	114cc <strlen@plt>
   138b0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   138b4:	mov	lr, r0
   138b8:	ldr	r0, [sp, #76]	; 0x4c
   138bc:	add	r0, r0, r7
   138c0:	str	r0, [sp, #24]
   138c4:	mov	r6, #1
   138c8:	mov	r2, #0
   138cc:	sub	r0, fp, #40	; 0x28
   138d0:	mov	r3, r0
   138d4:	str	r5, [sp, #28]
   138d8:	str	lr, [sp, #32]
   138dc:	b	13920 <__mempcpy_chk@plt+0x2340>
   138e0:	ldr	r5, [sp, #52]	; 0x34
   138e4:	add	r5, r0, r5
   138e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138ec:	bl	113dc <iswprint@plt>
   138f0:	cmp	r0, #0
   138f4:	movwne	r0, #1
   138f8:	and	r6, r6, r0
   138fc:	sub	r0, fp, #40	; 0x28
   13900:	bl	1137c <mbsinit@plt>
   13904:	sub	r3, fp, #40	; 0x28
   13908:	mov	r2, r5
   1390c:	ldr	lr, [sp, #32]
   13910:	cmp	r0, #0
   13914:	ldr	r5, [sp, #28]
   13918:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1391c:	bne	137ac <__mempcpy_chk@plt+0x21cc>
   13920:	str	r2, [sp, #52]	; 0x34
   13924:	add	r0, r2, r7
   13928:	add	r1, ip, r0
   1392c:	str	r0, [sp, #48]	; 0x30
   13930:	sub	r2, lr, r0
   13934:	sub	r0, fp, #44	; 0x2c
   13938:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   1393c:	cmp	r0, #0
   13940:	beq	13cb8 <__mempcpy_chk@plt+0x26d8>
   13944:	cmn	r0, #1
   13948:	beq	13c74 <__mempcpy_chk@plt+0x2694>
   1394c:	cmn	r0, #2
   13950:	ldr	lr, [sp, #32]
   13954:	beq	13c7c <__mempcpy_chk@plt+0x269c>
   13958:	cmp	r0, #2
   1395c:	mov	r1, #0
   13960:	movwcc	r1, #1
   13964:	ldr	r2, [sp, #68]	; 0x44
   13968:	eor	r2, r2, #1
   1396c:	orrs	r1, r2, r1
   13970:	bne	138e0 <__mempcpy_chk@plt+0x2300>
   13974:	ldr	r1, [sp, #52]	; 0x34
   13978:	ldr	r2, [sp, #24]
   1397c:	add	r1, r2, r1
   13980:	sub	r2, r0, #1
   13984:	b	13994 <__mempcpy_chk@plt+0x23b4>
   13988:	add	r1, r1, #1
   1398c:	subs	r2, r2, #1
   13990:	beq	138e0 <__mempcpy_chk@plt+0x2300>
   13994:	ldrb	r3, [r1]
   13998:	sub	r3, r3, #91	; 0x5b
   1399c:	cmp	r3, #33	; 0x21
   139a0:	bhi	13988 <__mempcpy_chk@plt+0x23a8>
   139a4:	add	r5, pc, #0
   139a8:	ldr	pc, [r5, r3, lsl #2]
   139ac:	andeq	r3, r1, r4, lsr #27
   139b0:	andeq	r3, r1, r4, lsr #27
   139b4:	andeq	r3, r1, r8, lsl #19
   139b8:	andeq	r3, r1, r4, lsr #27
   139bc:	andeq	r3, r1, r8, lsl #19
   139c0:	andeq	r3, r1, r4, lsr #27
   139c4:	andeq	r3, r1, r8, lsl #19
   139c8:	andeq	r3, r1, r8, lsl #19
   139cc:	andeq	r3, r1, r8, lsl #19
   139d0:	andeq	r3, r1, r8, lsl #19
   139d4:	andeq	r3, r1, r8, lsl #19
   139d8:	andeq	r3, r1, r8, lsl #19
   139dc:	andeq	r3, r1, r8, lsl #19
   139e0:	andeq	r3, r1, r8, lsl #19
   139e4:	andeq	r3, r1, r8, lsl #19
   139e8:	andeq	r3, r1, r8, lsl #19
   139ec:	andeq	r3, r1, r8, lsl #19
   139f0:	andeq	r3, r1, r8, lsl #19
   139f4:	andeq	r3, r1, r8, lsl #19
   139f8:	andeq	r3, r1, r8, lsl #19
   139fc:	andeq	r3, r1, r8, lsl #19
   13a00:	andeq	r3, r1, r8, lsl #19
   13a04:	andeq	r3, r1, r8, lsl #19
   13a08:	andeq	r3, r1, r8, lsl #19
   13a0c:	andeq	r3, r1, r8, lsl #19
   13a10:	andeq	r3, r1, r8, lsl #19
   13a14:	andeq	r3, r1, r8, lsl #19
   13a18:	andeq	r3, r1, r8, lsl #19
   13a1c:	andeq	r3, r1, r8, lsl #19
   13a20:	andeq	r3, r1, r8, lsl #19
   13a24:	andeq	r3, r1, r8, lsl #19
   13a28:	andeq	r3, r1, r8, lsl #19
   13a2c:	andeq	r3, r1, r8, lsl #19
   13a30:	andeq	r3, r1, r4, lsr #27
   13a34:	mov	r8, r0
   13a38:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13a3c:	ldr	r0, [sp, #36]	; 0x24
   13a40:	cmp	r0, #0
   13a44:	beq	13ae4 <__mempcpy_chk@plt+0x2504>
   13a48:	add	r0, r7, #2
   13a4c:	cmp	r0, lr
   13a50:	bcs	13ae4 <__mempcpy_chk@plt+0x2504>
   13a54:	add	r1, r7, ip
   13a58:	ldrb	r1, [r1, #1]
   13a5c:	cmp	r1, #63	; 0x3f
   13a60:	bne	13ae4 <__mempcpy_chk@plt+0x2504>
   13a64:	ldrb	r1, [ip, r0]
   13a68:	sub	r2, r1, #33	; 0x21
   13a6c:	cmp	r2, #29
   13a70:	bhi	13ae4 <__mempcpy_chk@plt+0x2504>
   13a74:	mov	r3, #1
   13a78:	movw	r6, #20929	; 0x51c1
   13a7c:	movt	r6, #14336	; 0x3800
   13a80:	tst	r6, r3, lsl r2
   13a84:	beq	13ae4 <__mempcpy_chk@plt+0x2504>
   13a88:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13a8c:	tst	r2, #1
   13a90:	bne	13dac <__mempcpy_chk@plt+0x27cc>
   13a94:	cmp	r8, sl
   13a98:	movcc	r2, #63	; 0x3f
   13a9c:	strbcc	r2, [r5, r8]
   13aa0:	add	r2, r8, #1
   13aa4:	cmp	r2, sl
   13aa8:	movcc	r3, #34	; 0x22
   13aac:	strbcc	r3, [r5, r2]
   13ab0:	add	r2, r8, #2
   13ab4:	cmp	r2, sl
   13ab8:	movcc	r3, #34	; 0x22
   13abc:	strbcc	r3, [r5, r2]
   13ac0:	add	r2, r8, #3
   13ac4:	cmp	r2, sl
   13ac8:	movcc	r3, #63	; 0x3f
   13acc:	strbcc	r3, [r5, r2]
   13ad0:	add	r8, r8, #4
   13ad4:	mov	r7, r0
   13ad8:	mov	r4, r1
   13adc:	mov	r6, #0
   13ae0:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13ae4:	mov	r6, #0
   13ae8:	b	13468 <__mempcpy_chk@plt+0x1e88>
   13aec:	add	r0, r2, r7
   13af0:	str	r0, [sp, #52]	; 0x34
   13af4:	mov	r2, #0
   13af8:	ldr	lr, [sp, #32]
   13afc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13b00:	str	r1, [sp, #48]	; 0x30
   13b04:	tst	r1, #1
   13b08:	bne	13be4 <__mempcpy_chk@plt+0x2604>
   13b0c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13b10:	tst	r1, #1
   13b14:	bne	13dac <__mempcpy_chk@plt+0x27cc>
   13b18:	mov	r3, r0
   13b1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13b20:	subs	r1, r0, #2
   13b24:	movwne	r1, #1
   13b28:	orr	r1, r1, r3
   13b2c:	tst	r1, #1
   13b30:	bne	13b68 <__mempcpy_chk@plt+0x2588>
   13b34:	cmp	r8, sl
   13b38:	movcc	r0, #39	; 0x27
   13b3c:	strbcc	r0, [r5, r8]
   13b40:	add	r2, r8, #1
   13b44:	cmp	r2, sl
   13b48:	movcc	r0, #36	; 0x24
   13b4c:	strbcc	r0, [r5, r2]
   13b50:	add	r2, r8, #2
   13b54:	cmp	r2, sl
   13b58:	movcc	r0, #39	; 0x27
   13b5c:	strbcc	r0, [r5, r2]
   13b60:	add	r8, r8, #3
   13b64:	mov	r3, #1
   13b68:	cmp	r8, sl
   13b6c:	movcc	r1, #92	; 0x5c
   13b70:	strbcc	r1, [r5, r8]
   13b74:	add	r2, r8, #1
   13b78:	cmp	r2, sl
   13b7c:	bcs	13b90 <__mempcpy_chk@plt+0x25b0>
   13b80:	uxtb	r1, r4
   13b84:	mov	r0, #48	; 0x30
   13b88:	orr	r1, r0, r1, lsr #6
   13b8c:	strb	r1, [r5, r2]
   13b90:	add	r2, r8, #2
   13b94:	cmp	r2, sl
   13b98:	lsrcc	r1, r4, #3
   13b9c:	movcc	r0, #6
   13ba0:	bficc	r1, r0, #3, #29
   13ba4:	strbcc	r1, [r5, r2]
   13ba8:	mov	r0, #6
   13bac:	bfi	r4, r0, #3, #29
   13bb0:	add	r8, r8, #3
   13bb4:	mov	r2, #1
   13bb8:	mov	r0, r3
   13bbc:	b	13c08 <__mempcpy_chk@plt+0x2628>
   13bc0:	cmp	r8, sl
   13bc4:	strbcc	r4, [r5, r8]
   13bc8:	ldr	r1, [sp, #76]	; 0x4c
   13bcc:	ldrb	r4, [r1, r7]
   13bd0:	add	r8, r8, #1
   13bd4:	mov	r7, r3
   13bd8:	ldr	r1, [sp, #48]	; 0x30
   13bdc:	tst	r1, #1
   13be0:	beq	13b0c <__mempcpy_chk@plt+0x252c>
   13be4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13be8:	tst	r1, #1
   13bec:	beq	13c00 <__mempcpy_chk@plt+0x2620>
   13bf0:	cmp	r8, sl
   13bf4:	movcc	r1, #92	; 0x5c
   13bf8:	strbcc	r1, [r5, r8]
   13bfc:	add	r8, r8, #1
   13c00:	mov	r1, #0
   13c04:	str	r1, [fp, #-52]	; 0xffffffcc
   13c08:	and	r9, r2, #1
   13c0c:	add	r3, r7, #1
   13c10:	ldr	r1, [sp, #52]	; 0x34
   13c14:	cmp	r1, r3
   13c18:	bls	13c5c <__mempcpy_chk@plt+0x267c>
   13c1c:	cmp	r9, #0
   13c20:	movwne	r9, #1
   13c24:	mvn	r1, r0
   13c28:	orr	r1, r1, r9
   13c2c:	tst	r1, #1
   13c30:	bne	13bc0 <__mempcpy_chk@plt+0x25e0>
   13c34:	cmp	r8, sl
   13c38:	movcc	r1, #39	; 0x27
   13c3c:	strbcc	r1, [r5, r8]
   13c40:	add	r1, r8, #1
   13c44:	cmp	r1, sl
   13c48:	movcc	r0, #39	; 0x27
   13c4c:	strbcc	r0, [r5, r1]
   13c50:	add	r8, r8, #2
   13c54:	mov	r0, #0
   13c58:	b	13bc0 <__mempcpy_chk@plt+0x25e0>
   13c5c:	str	r0, [fp, #-56]	; 0xffffffc8
   13c60:	cmp	r9, #0
   13c64:	movwne	r9, #1
   13c68:	cmp	r9, #0
   13c6c:	beq	137f0 <__mempcpy_chk@plt+0x2210>
   13c70:	b	13824 <__mempcpy_chk@plt+0x2244>
   13c74:	mov	r6, #0
   13c78:	b	13cb8 <__mempcpy_chk@plt+0x26d8>
   13c7c:	mov	r6, #0
   13c80:	ldr	r0, [sp, #48]	; 0x30
   13c84:	cmp	r0, lr
   13c88:	bcs	13cb8 <__mempcpy_chk@plt+0x26d8>
   13c8c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13c90:	add	r0, ip, r7
   13c94:	ldr	r2, [sp, #52]	; 0x34
   13c98:	ldrb	r1, [r0, r2]
   13c9c:	cmp	r1, #0
   13ca0:	beq	137ac <__mempcpy_chk@plt+0x21cc>
   13ca4:	add	r2, r2, #1
   13ca8:	add	r1, r7, r2
   13cac:	cmp	r1, lr
   13cb0:	bcc	13c98 <__mempcpy_chk@plt+0x26b8>
   13cb4:	b	137ac <__mempcpy_chk@plt+0x21cc>
   13cb8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13cbc:	ldr	r2, [sp, #52]	; 0x34
   13cc0:	b	137ac <__mempcpy_chk@plt+0x21cc>
   13cc4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13cc8:	eor	r0, r1, #2
   13ccc:	orr	r0, r0, r8
   13cd0:	clz	r0, r0
   13cd4:	lsr	r0, r0, #5
   13cd8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13cdc:	tst	r3, r0
   13ce0:	bne	13dac <__mempcpy_chk@plt+0x27cc>
   13ce4:	mov	r6, r5
   13ce8:	subs	r0, r1, #2
   13cec:	movwne	r0, #1
   13cf0:	orr	r0, r3, r0
   13cf4:	tst	r0, #1
   13cf8:	ldr	r2, [sp, #92]	; 0x5c
   13cfc:	ldreq	r0, [sp, #64]	; 0x40
   13d00:	eoreq	r0, r0, #1
   13d04:	tsteq	r0, #1
   13d08:	bne	13d48 <__mempcpy_chk@plt+0x2768>
   13d0c:	mov	r9, lr
   13d10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13d14:	tst	r0, #1
   13d18:	bne	13e14 <__mempcpy_chk@plt+0x2834>
   13d1c:	ldr	r0, [sp, #84]	; 0x54
   13d20:	cmp	r0, #0
   13d24:	beq	13d48 <__mempcpy_chk@plt+0x2768>
   13d28:	mov	r0, #0
   13d2c:	str	r0, [fp, #-48]	; 0xffffffd0
   13d30:	mov	r1, #2
   13d34:	cmp	sl, #0
   13d38:	mov	r0, r2
   13d3c:	mov	r4, r3
   13d40:	ldr	r7, [sp, #84]	; 0x54
   13d44:	beq	12f20 <__mempcpy_chk@plt+0x1940>
   13d48:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d4c:	clz	r0, r1
   13d50:	lsr	r0, r0, #5
   13d54:	orr	r0, r0, r3
   13d58:	tst	r0, #1
   13d5c:	bne	13d88 <__mempcpy_chk@plt+0x27a8>
   13d60:	ldrb	r0, [r1]
   13d64:	cmp	r0, #0
   13d68:	beq	13d88 <__mempcpy_chk@plt+0x27a8>
   13d6c:	add	r1, r1, #1
   13d70:	cmp	r8, sl
   13d74:	strbcc	r0, [r6, r8]
   13d78:	add	r8, r8, #1
   13d7c:	ldrb	r0, [r1], #1
   13d80:	cmp	r0, #0
   13d84:	bne	13d70 <__mempcpy_chk@plt+0x2790>
   13d88:	cmp	r8, sl
   13d8c:	movcc	r0, #0
   13d90:	strbcc	r0, [r6, r8]
   13d94:	b	13e08 <__mempcpy_chk@plt+0x2828>
   13d98:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13d9c:	mov	lr, r4
   13da0:	b	13dac <__mempcpy_chk@plt+0x27cc>
   13da4:	ldr	r5, [sp, #28]
   13da8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13dac:	mov	r0, #0
   13db0:	ldr	r1, [fp, #12]
   13db4:	bic	r1, r1, #2
   13db8:	mov	r2, #2
   13dbc:	ldr	r3, [sp, #92]	; 0x5c
   13dc0:	tst	r3, #1
   13dc4:	movwne	r2, #4
   13dc8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13dcc:	cmp	r3, #2
   13dd0:	movne	r2, r3
   13dd4:	str	r2, [sp]
   13dd8:	str	r1, [sp, #4]
   13ddc:	str	r0, [sp, #8]
   13de0:	ldr	r0, [sp, #80]	; 0x50
   13de4:	str	r0, [sp, #12]
   13de8:	ldr	r0, [sp, #88]	; 0x58
   13dec:	str	r0, [sp, #16]
   13df0:	mov	r0, r5
   13df4:	mov	r1, sl
   13df8:	mov	r2, ip
   13dfc:	mov	r3, lr
   13e00:	bl	12e94 <__mempcpy_chk@plt+0x18b4>
   13e04:	mov	r8, r0
   13e08:	mov	r0, r8
   13e0c:	sub	sp, fp, #28
   13e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e14:	mov	r0, #5
   13e18:	str	r0, [sp]
   13e1c:	ldr	r0, [fp, #12]
   13e20:	str	r0, [sp, #4]
   13e24:	ldr	r0, [fp, #16]
   13e28:	str	r0, [sp, #8]
   13e2c:	ldr	r0, [sp, #80]	; 0x50
   13e30:	str	r0, [sp, #12]
   13e34:	ldr	r0, [sp, #88]	; 0x58
   13e38:	str	r0, [sp, #16]
   13e3c:	mov	r0, r6
   13e40:	ldr	r1, [sp, #84]	; 0x54
   13e44:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13e48:	mov	r3, r9
   13e4c:	b	13e00 <__mempcpy_chk@plt+0x2820>
   13e50:	bl	115c8 <abort@plt>
   13e54:	mov	r3, r2
   13e58:	mov	r2, #0
   13e5c:	b	13e60 <__mempcpy_chk@plt+0x2880>
   13e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e64:	add	fp, sp, #28
   13e68:	sub	sp, sp, #36	; 0x24
   13e6c:	mov	r4, r2
   13e70:	str	r2, [sp, #24]
   13e74:	mov	r5, r1
   13e78:	mov	r6, r0
   13e7c:	str	r0, [sp, #20]
   13e80:	movw	r8, #25352	; 0x6308
   13e84:	movt	r8, #3
   13e88:	cmp	r3, #0
   13e8c:	movne	r8, r3
   13e90:	bl	114d8 <__errno_location@plt>
   13e94:	str	r0, [sp, #28]
   13e98:	ldm	r8, {r3, r9}
   13e9c:	ldr	r1, [r8, #40]	; 0x28
   13ea0:	ldr	r2, [r8, #44]	; 0x2c
   13ea4:	ldr	r7, [r0]
   13ea8:	str	r7, [sp, #32]
   13eac:	add	sl, r8, #8
   13eb0:	cmp	r4, #0
   13eb4:	orreq	r9, r9, #1
   13eb8:	stm	sp, {r3, r9, sl}
   13ebc:	str	r1, [sp, #12]
   13ec0:	str	r2, [sp, #16]
   13ec4:	mov	r0, #0
   13ec8:	mov	r1, #0
   13ecc:	mov	r2, r6
   13ed0:	mov	r3, r5
   13ed4:	mov	r7, r5
   13ed8:	bl	12e94 <__mempcpy_chk@plt+0x18b4>
   13edc:	mov	r5, r0
   13ee0:	add	r4, r0, #1
   13ee4:	mov	r0, r4
   13ee8:	bl	21b68 <__mempcpy_chk@plt+0x10588>
   13eec:	mov	r6, r0
   13ef0:	ldr	r0, [r8]
   13ef4:	ldr	r1, [r8, #40]	; 0x28
   13ef8:	ldr	r2, [r8, #44]	; 0x2c
   13efc:	stm	sp, {r0, r9, sl}
   13f00:	str	r1, [sp, #12]
   13f04:	str	r2, [sp, #16]
   13f08:	mov	r0, r6
   13f0c:	mov	r1, r4
   13f10:	ldr	r2, [sp, #20]
   13f14:	mov	r3, r7
   13f18:	bl	12e94 <__mempcpy_chk@plt+0x18b4>
   13f1c:	ldr	r0, [sp, #24]
   13f20:	ldr	r1, [sp, #32]
   13f24:	ldr	r2, [sp, #28]
   13f28:	str	r1, [r2]
   13f2c:	cmp	r0, #0
   13f30:	strne	r5, [r0]
   13f34:	mov	r0, r6
   13f38:	sub	sp, fp, #28
   13f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f44:	add	fp, sp, #24
   13f48:	movw	r8, #16704	; 0x4140
   13f4c:	movt	r8, #3
   13f50:	ldr	r4, [r8]
   13f54:	movw	r5, #16708	; 0x4144
   13f58:	movt	r5, #3
   13f5c:	ldr	r0, [r5]
   13f60:	cmp	r0, #2
   13f64:	blt	13f90 <__mempcpy_chk@plt+0x29b0>
   13f68:	add	r7, r4, #12
   13f6c:	mov	r6, #0
   13f70:	ldr	r0, [r7, r6, lsl #3]
   13f74:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   13f78:	add	r0, r6, #1
   13f7c:	ldr	r1, [r5]
   13f80:	add	r2, r6, #2
   13f84:	cmp	r2, r1
   13f88:	mov	r6, r0
   13f8c:	blt	13f70 <__mempcpy_chk@plt+0x2990>
   13f90:	ldr	r0, [r4, #4]
   13f94:	movw	r9, #25400	; 0x6338
   13f98:	movt	r9, #3
   13f9c:	cmp	r0, r9
   13fa0:	movw	r7, #16712	; 0x4148
   13fa4:	movt	r7, #3
   13fa8:	beq	13fb8 <__mempcpy_chk@plt+0x29d8>
   13fac:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   13fb0:	mov	r0, #256	; 0x100
   13fb4:	stm	r7, {r0, r9}
   13fb8:	cmp	r4, r7
   13fbc:	beq	13fcc <__mempcpy_chk@plt+0x29ec>
   13fc0:	mov	r0, r4
   13fc4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   13fc8:	str	r7, [r8]
   13fcc:	mov	r0, #1
   13fd0:	str	r0, [r5]
   13fd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13fd8:	movw	r3, #25352	; 0x6308
   13fdc:	movt	r3, #3
   13fe0:	mvn	r2, #0
   13fe4:	b	13fe8 <__mempcpy_chk@plt+0x2a08>
   13fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fec:	add	fp, sp, #28
   13ff0:	sub	sp, sp, #44	; 0x2c
   13ff4:	mov	r7, r3
   13ff8:	str	r2, [sp, #36]	; 0x24
   13ffc:	str	r1, [sp, #32]
   14000:	mov	r5, r0
   14004:	bl	114d8 <__errno_location@plt>
   14008:	cmp	r5, #0
   1400c:	bmi	1417c <__mempcpy_chk@plt+0x2b9c>
   14010:	cmn	r5, #-2147483647	; 0x80000001
   14014:	beq	1417c <__mempcpy_chk@plt+0x2b9c>
   14018:	movw	r4, #16704	; 0x4140
   1401c:	movt	r4, #3
   14020:	ldr	r6, [r4]
   14024:	str	r0, [sp, #28]
   14028:	ldr	r0, [r0]
   1402c:	str	r0, [sp, #24]
   14030:	movw	r8, #16708	; 0x4144
   14034:	movt	r8, #3
   14038:	ldr	r1, [r8]
   1403c:	cmp	r1, r5
   14040:	ble	1404c <__mempcpy_chk@plt+0x2a6c>
   14044:	mov	sl, r6
   14048:	b	140b8 <__mempcpy_chk@plt+0x2ad8>
   1404c:	str	r1, [fp, #-32]	; 0xffffffe0
   14050:	mov	r0, #8
   14054:	str	r0, [sp]
   14058:	movw	r9, #16712	; 0x4148
   1405c:	movt	r9, #3
   14060:	subs	r0, r6, r9
   14064:	movne	r0, r6
   14068:	sub	r1, r5, r1
   1406c:	add	r2, r1, #1
   14070:	sub	r1, fp, #32
   14074:	mvn	r3, #-2147483648	; 0x80000000
   14078:	bl	21c44 <__mempcpy_chk@plt+0x10664>
   1407c:	mov	sl, r0
   14080:	str	r0, [r4]
   14084:	cmp	r6, r9
   14088:	bne	14094 <__mempcpy_chk@plt+0x2ab4>
   1408c:	ldrd	r0, [r9]
   14090:	stm	sl, {r0, r1}
   14094:	ldr	r1, [r8]
   14098:	add	r0, sl, r1, lsl #3
   1409c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140a0:	sub	r1, r2, r1
   140a4:	lsl	r2, r1, #3
   140a8:	mov	r1, #0
   140ac:	bl	114fc <memset@plt>
   140b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140b4:	str	r0, [r8]
   140b8:	mov	r9, sl
   140bc:	ldr	r6, [r9, r5, lsl #3]!
   140c0:	ldr	r4, [r9, #4]!
   140c4:	ldm	r7, {r0, r1}
   140c8:	ldr	r2, [r7, #40]	; 0x28
   140cc:	ldr	r3, [r7, #44]	; 0x2c
   140d0:	orr	r8, r1, #1
   140d4:	add	r1, r7, #8
   140d8:	stm	sp, {r0, r8}
   140dc:	str	r1, [sp, #20]
   140e0:	add	r0, sp, #8
   140e4:	stm	r0, {r1, r2, r3}
   140e8:	mov	r0, r4
   140ec:	mov	r1, r6
   140f0:	ldr	r2, [sp, #32]
   140f4:	ldr	r3, [sp, #36]	; 0x24
   140f8:	bl	12e94 <__mempcpy_chk@plt+0x18b4>
   140fc:	cmp	r6, r0
   14100:	bhi	14164 <__mempcpy_chk@plt+0x2b84>
   14104:	add	r6, r0, #1
   14108:	str	r6, [sl, r5, lsl #3]
   1410c:	movw	r0, #25400	; 0x6338
   14110:	movt	r0, #3
   14114:	cmp	r4, r0
   14118:	beq	14124 <__mempcpy_chk@plt+0x2b44>
   1411c:	mov	r0, r4
   14120:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   14124:	mov	r0, r6
   14128:	bl	21b68 <__mempcpy_chk@plt+0x10588>
   1412c:	mov	r4, r0
   14130:	str	r0, [r9]
   14134:	ldr	r0, [r7]
   14138:	ldr	r1, [r7, #40]	; 0x28
   1413c:	ldr	r2, [r7, #44]	; 0x2c
   14140:	stm	sp, {r0, r8}
   14144:	ldr	r0, [sp, #20]
   14148:	add	r3, sp, #8
   1414c:	stm	r3, {r0, r1, r2}
   14150:	mov	r0, r4
   14154:	mov	r1, r6
   14158:	ldr	r2, [sp, #32]
   1415c:	ldr	r3, [sp, #36]	; 0x24
   14160:	bl	12e94 <__mempcpy_chk@plt+0x18b4>
   14164:	ldr	r0, [sp, #28]
   14168:	ldr	r1, [sp, #24]
   1416c:	str	r1, [r0]
   14170:	mov	r0, r4
   14174:	sub	sp, fp, #28
   14178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1417c:	bl	115c8 <abort@plt>
   14180:	movw	r3, #25352	; 0x6308
   14184:	movt	r3, #3
   14188:	b	13fe8 <__mempcpy_chk@plt+0x2a08>
   1418c:	mov	r1, r0
   14190:	mov	r0, #0
   14194:	b	13fd8 <__mempcpy_chk@plt+0x29f8>
   14198:	mov	r2, r1
   1419c:	mov	r1, r0
   141a0:	mov	r0, #0
   141a4:	b	14180 <__mempcpy_chk@plt+0x2ba0>
   141a8:	push	{r4, r5, r6, sl, fp, lr}
   141ac:	add	fp, sp, #16
   141b0:	sub	sp, sp, #48	; 0x30
   141b4:	mov	r4, r2
   141b8:	mov	r5, r0
   141bc:	mov	r6, sp
   141c0:	mov	r0, r6
   141c4:	bl	141e4 <__mempcpy_chk@plt+0x2c04>
   141c8:	mov	r0, r5
   141cc:	mov	r1, r4
   141d0:	mvn	r2, #0
   141d4:	mov	r3, r6
   141d8:	bl	13fe8 <__mempcpy_chk@plt+0x2a08>
   141dc:	sub	sp, fp, #16
   141e0:	pop	{r4, r5, r6, sl, fp, pc}
   141e4:	push	{fp, lr}
   141e8:	mov	fp, sp
   141ec:	vmov.i32	q8, #0	; 0x00000000
   141f0:	mov	r2, #32
   141f4:	mov	r3, r0
   141f8:	vst1.32	{d16-d17}, [r3], r2
   141fc:	vst1.32	{d16-d17}, [r3]
   14200:	add	r2, r0, #16
   14204:	vst1.32	{d16-d17}, [r2]
   14208:	cmp	r1, #10
   1420c:	strne	r1, [r0]
   14210:	popne	{fp, pc}
   14214:	bl	115c8 <abort@plt>
   14218:	push	{r4, r5, r6, r7, fp, lr}
   1421c:	add	fp, sp, #16
   14220:	sub	sp, sp, #48	; 0x30
   14224:	mov	r4, r3
   14228:	mov	r5, r2
   1422c:	mov	r6, r0
   14230:	mov	r7, sp
   14234:	mov	r0, r7
   14238:	bl	141e4 <__mempcpy_chk@plt+0x2c04>
   1423c:	mov	r0, r6
   14240:	mov	r1, r5
   14244:	mov	r2, r4
   14248:	mov	r3, r7
   1424c:	bl	13fe8 <__mempcpy_chk@plt+0x2a08>
   14250:	sub	sp, fp, #16
   14254:	pop	{r4, r5, r6, r7, fp, pc}
   14258:	mov	r2, r1
   1425c:	mov	r1, r0
   14260:	mov	r0, #0
   14264:	b	141a8 <__mempcpy_chk@plt+0x2bc8>
   14268:	mov	r3, r2
   1426c:	mov	r2, r1
   14270:	mov	r1, r0
   14274:	mov	r0, #0
   14278:	b	14218 <__mempcpy_chk@plt+0x2c38>
   1427c:	push	{r4, r5, r6, sl, fp, lr}
   14280:	add	fp, sp, #16
   14284:	sub	sp, sp, #48	; 0x30
   14288:	mov	r4, r1
   1428c:	mov	r5, r0
   14290:	movw	r0, #25352	; 0x6308
   14294:	movt	r0, #3
   14298:	add	r1, r0, #16
   1429c:	mov	r3, #32
   142a0:	vld1.64	{d16-d17}, [r0], r3
   142a4:	vld1.64	{d18-d19}, [r1]
   142a8:	mov	r6, sp
   142ac:	add	r1, r6, #16
   142b0:	vld1.64	{d20-d21}, [r0]
   142b4:	vst1.64	{d18-d19}, [r1]
   142b8:	mov	r0, r6
   142bc:	vst1.64	{d16-d17}, [r0], r3
   142c0:	vst1.64	{d20-d21}, [r0]
   142c4:	mov	r0, r6
   142c8:	mov	r1, r2
   142cc:	mov	r2, #1
   142d0:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   142d4:	mov	r0, #0
   142d8:	mov	r1, r5
   142dc:	mov	r2, r4
   142e0:	mov	r3, r6
   142e4:	bl	13fe8 <__mempcpy_chk@plt+0x2a08>
   142e8:	sub	sp, fp, #16
   142ec:	pop	{r4, r5, r6, sl, fp, pc}
   142f0:	mov	r2, r1
   142f4:	mvn	r1, #0
   142f8:	b	1427c <__mempcpy_chk@plt+0x2c9c>
   142fc:	mov	r1, #58	; 0x3a
   14300:	b	142f0 <__mempcpy_chk@plt+0x2d10>
   14304:	mov	r2, #58	; 0x3a
   14308:	b	1427c <__mempcpy_chk@plt+0x2c9c>
   1430c:	push	{r4, r5, r6, sl, fp, lr}
   14310:	add	fp, sp, #16
   14314:	sub	sp, sp, #48	; 0x30
   14318:	mov	r4, r2
   1431c:	mov	r5, r0
   14320:	mov	r6, sp
   14324:	mov	r0, r6
   14328:	bl	141e4 <__mempcpy_chk@plt+0x2c04>
   1432c:	mov	r0, r6
   14330:	mov	r1, #58	; 0x3a
   14334:	mov	r2, #1
   14338:	bl	12d88 <__mempcpy_chk@plt+0x17a8>
   1433c:	mov	r0, r5
   14340:	mov	r1, r4
   14344:	mvn	r2, #0
   14348:	mov	r3, r6
   1434c:	bl	13fe8 <__mempcpy_chk@plt+0x2a08>
   14350:	sub	sp, fp, #16
   14354:	pop	{r4, r5, r6, sl, fp, pc}
   14358:	push	{fp, lr}
   1435c:	mov	fp, sp
   14360:	sub	sp, sp, #8
   14364:	mvn	ip, #0
   14368:	str	ip, [sp]
   1436c:	bl	14378 <__mempcpy_chk@plt+0x2d98>
   14370:	mov	sp, fp
   14374:	pop	{fp, pc}
   14378:	push	{r4, r5, r6, r7, fp, lr}
   1437c:	add	fp, sp, #16
   14380:	sub	sp, sp, #48	; 0x30
   14384:	mov	r7, r3
   14388:	mov	r5, r0
   1438c:	movw	r0, #25352	; 0x6308
   14390:	movt	r0, #3
   14394:	add	r3, r0, #16
   14398:	mov	r4, #32
   1439c:	vld1.64	{d16-d17}, [r0], r4
   143a0:	vld1.64	{d18-d19}, [r3]
   143a4:	mov	r6, sp
   143a8:	add	r3, r6, #16
   143ac:	vld1.64	{d20-d21}, [r0]
   143b0:	vst1.64	{d18-d19}, [r3]
   143b4:	mov	r0, r6
   143b8:	vst1.64	{d16-d17}, [r0], r4
   143bc:	vst1.64	{d20-d21}, [r0]
   143c0:	mov	r0, r6
   143c4:	bl	12de0 <__mempcpy_chk@plt+0x1800>
   143c8:	ldr	r2, [fp, #8]
   143cc:	mov	r0, r5
   143d0:	mov	r1, r7
   143d4:	mov	r3, r6
   143d8:	bl	13fe8 <__mempcpy_chk@plt+0x2a08>
   143dc:	sub	sp, fp, #16
   143e0:	pop	{r4, r5, r6, r7, fp, pc}
   143e4:	mov	r3, r2
   143e8:	mov	r2, r1
   143ec:	mov	r1, r0
   143f0:	mov	r0, #0
   143f4:	b	14358 <__mempcpy_chk@plt+0x2d78>
   143f8:	push	{fp, lr}
   143fc:	mov	fp, sp
   14400:	sub	sp, sp, #8
   14404:	mov	ip, r2
   14408:	mov	r2, r1
   1440c:	mov	r1, r0
   14410:	str	r3, [sp]
   14414:	mov	r0, #0
   14418:	mov	r3, ip
   1441c:	bl	14378 <__mempcpy_chk@plt+0x2d98>
   14420:	mov	sp, fp
   14424:	pop	{fp, pc}
   14428:	movw	r3, #16720	; 0x4150
   1442c:	movt	r3, #3
   14430:	b	13fe8 <__mempcpy_chk@plt+0x2a08>
   14434:	mov	r2, r1
   14438:	mov	r1, r0
   1443c:	mov	r0, #0
   14440:	b	14428 <__mempcpy_chk@plt+0x2e48>
   14444:	mvn	r2, #0
   14448:	b	14428 <__mempcpy_chk@plt+0x2e48>
   1444c:	mov	r1, r0
   14450:	mov	r0, #0
   14454:	b	14444 <__mempcpy_chk@plt+0x2e64>
   14458:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1445c:	add	fp, sp, #24
   14460:	sub	sp, sp, #16
   14464:	mov	r4, r1
   14468:	mov	r5, r0
   1446c:	mov	r7, #0
   14470:	mov	r0, #0
   14474:	mov	r1, r5
   14478:	mov	r2, #5
   1447c:	bl	113a0 <dcgettext@plt>
   14480:	cmp	r0, r5
   14484:	beq	14490 <__mempcpy_chk@plt+0x2eb0>
   14488:	sub	sp, fp, #24
   1448c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14490:	bl	2268c <__mempcpy_chk@plt+0x110ac>
   14494:	mov	r6, r0
   14498:	mov	r8, #56	; 0x38
   1449c:	mov	r0, #45	; 0x2d
   144a0:	stm	sp, {r0, r8}
   144a4:	str	r7, [sp, #8]
   144a8:	str	r7, [sp, #12]
   144ac:	mov	r0, r6
   144b0:	mov	r1, #85	; 0x55
   144b4:	mov	r2, #84	; 0x54
   144b8:	mov	r3, #70	; 0x46
   144bc:	bl	14554 <__mempcpy_chk@plt+0x2f74>
   144c0:	cmp	r0, #0
   144c4:	beq	144e0 <__mempcpy_chk@plt+0x2f00>
   144c8:	ldrb	r1, [r5]
   144cc:	movw	r2, #13148	; 0x335c
   144d0:	movt	r2, #2
   144d4:	movw	r0, #13152	; 0x3360
   144d8:	movt	r0, #2
   144dc:	b	14524 <__mempcpy_chk@plt+0x2f44>
   144e0:	mov	r0, #48	; 0x30
   144e4:	mov	r1, #51	; 0x33
   144e8:	str	r8, [sp]
   144ec:	stmib	sp, {r0, r1}
   144f0:	str	r0, [sp, #12]
   144f4:	mov	r0, r6
   144f8:	mov	r1, #71	; 0x47
   144fc:	mov	r2, #66	; 0x42
   14500:	mov	r3, #49	; 0x31
   14504:	bl	14554 <__mempcpy_chk@plt+0x2f74>
   14508:	cmp	r0, #0
   1450c:	beq	14534 <__mempcpy_chk@plt+0x2f54>
   14510:	ldrb	r1, [r5]
   14514:	movw	r2, #13156	; 0x3364
   14518:	movt	r2, #2
   1451c:	movw	r0, #13160	; 0x3368
   14520:	movt	r0, #2
   14524:	cmp	r1, #96	; 0x60
   14528:	moveq	r0, r2
   1452c:	sub	sp, fp, #24
   14530:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14534:	movw	r1, #13142	; 0x3356
   14538:	movt	r1, #2
   1453c:	movw	r0, #13146	; 0x335a
   14540:	movt	r0, #2
   14544:	cmp	r4, #9
   14548:	moveq	r0, r1
   1454c:	sub	sp, fp, #24
   14550:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14554:	push	{r4, r5, r6, r7, fp, lr}
   14558:	add	fp, sp, #16
   1455c:	sub	sp, sp, #16
   14560:	mov	r4, r3
   14564:	mov	r5, r2
   14568:	mov	r7, r1
   1456c:	mov	r6, r0
   14570:	mov	r0, r1
   14574:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   14578:	ldrb	r1, [r6]
   1457c:	cmp	r0, #0
   14580:	andne	r1, r1, #223	; 0xdf
   14584:	mov	r0, #0
   14588:	cmp	r1, r7
   1458c:	bne	145c4 <__mempcpy_chk@plt+0x2fe4>
   14590:	cmp	r7, #0
   14594:	beq	145cc <__mempcpy_chk@plt+0x2fec>
   14598:	ldr	r0, [fp, #20]
   1459c:	ldr	r1, [fp, #16]
   145a0:	ldr	r2, [fp, #12]
   145a4:	ldr	r3, [fp, #8]
   145a8:	str	r2, [sp]
   145ac:	str	r1, [sp, #4]
   145b0:	str	r0, [sp, #8]
   145b4:	mov	r0, r6
   145b8:	mov	r1, r5
   145bc:	mov	r2, r4
   145c0:	bl	145d8 <__mempcpy_chk@plt+0x2ff8>
   145c4:	sub	sp, fp, #16
   145c8:	pop	{r4, r5, r6, r7, fp, pc}
   145cc:	mov	r0, #1
   145d0:	sub	sp, fp, #16
   145d4:	pop	{r4, r5, r6, r7, fp, pc}
   145d8:	push	{r4, r5, r6, r7, fp, lr}
   145dc:	add	fp, sp, #16
   145e0:	sub	sp, sp, #8
   145e4:	mov	r4, r3
   145e8:	mov	r5, r2
   145ec:	mov	r7, r1
   145f0:	mov	r6, r0
   145f4:	mov	r0, r1
   145f8:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   145fc:	ldrb	r1, [r6, #1]
   14600:	cmp	r0, #0
   14604:	andne	r1, r1, #223	; 0xdf
   14608:	mov	r0, #0
   1460c:	cmp	r1, r7
   14610:	bne	14640 <__mempcpy_chk@plt+0x3060>
   14614:	cmp	r7, #0
   14618:	beq	14648 <__mempcpy_chk@plt+0x3068>
   1461c:	ldr	r0, [fp, #16]
   14620:	ldr	r1, [fp, #12]
   14624:	ldr	r3, [fp, #8]
   14628:	str	r1, [sp]
   1462c:	str	r0, [sp, #4]
   14630:	mov	r0, r6
   14634:	mov	r1, r5
   14638:	mov	r2, r4
   1463c:	bl	14654 <__mempcpy_chk@plt+0x3074>
   14640:	sub	sp, fp, #16
   14644:	pop	{r4, r5, r6, r7, fp, pc}
   14648:	mov	r0, #1
   1464c:	sub	sp, fp, #16
   14650:	pop	{r4, r5, r6, r7, fp, pc}
   14654:	push	{r4, r5, r6, r7, fp, lr}
   14658:	add	fp, sp, #16
   1465c:	sub	sp, sp, #8
   14660:	mov	r4, r3
   14664:	mov	r5, r2
   14668:	mov	r7, r1
   1466c:	mov	r6, r0
   14670:	mov	r0, r1
   14674:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   14678:	ldrb	r1, [r6, #2]
   1467c:	cmp	r0, #0
   14680:	andne	r1, r1, #223	; 0xdf
   14684:	mov	r0, #0
   14688:	cmp	r1, r7
   1468c:	bne	146b4 <__mempcpy_chk@plt+0x30d4>
   14690:	cmp	r7, #0
   14694:	beq	146bc <__mempcpy_chk@plt+0x30dc>
   14698:	ldr	r0, [fp, #12]
   1469c:	ldr	r3, [fp, #8]
   146a0:	str	r0, [sp]
   146a4:	mov	r0, r6
   146a8:	mov	r1, r5
   146ac:	mov	r2, r4
   146b0:	bl	146c8 <__mempcpy_chk@plt+0x30e8>
   146b4:	sub	sp, fp, #16
   146b8:	pop	{r4, r5, r6, r7, fp, pc}
   146bc:	mov	r0, #1
   146c0:	sub	sp, fp, #16
   146c4:	pop	{r4, r5, r6, r7, fp, pc}
   146c8:	push	{r4, r5, r6, r7, fp, lr}
   146cc:	add	fp, sp, #16
   146d0:	mov	r4, r3
   146d4:	mov	r5, r2
   146d8:	mov	r7, r1
   146dc:	mov	r6, r0
   146e0:	mov	r0, r1
   146e4:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   146e8:	ldrb	r1, [r6, #3]
   146ec:	ldr	r3, [fp, #8]
   146f0:	cmp	r0, #0
   146f4:	andne	r1, r1, #223	; 0xdf
   146f8:	mov	r0, #0
   146fc:	cmp	r1, r7
   14700:	bne	14724 <__mempcpy_chk@plt+0x3144>
   14704:	cmp	r7, #0
   14708:	beq	14720 <__mempcpy_chk@plt+0x3140>
   1470c:	mov	r0, r6
   14710:	mov	r1, r5
   14714:	mov	r2, r4
   14718:	pop	{r4, r5, r6, r7, fp, lr}
   1471c:	b	14728 <__mempcpy_chk@plt+0x3148>
   14720:	mov	r0, #1
   14724:	pop	{r4, r5, r6, r7, fp, pc}
   14728:	push	{r4, r5, r6, r7, fp, lr}
   1472c:	add	fp, sp, #16
   14730:	mov	r4, r3
   14734:	mov	r5, r2
   14738:	mov	r7, r1
   1473c:	mov	r6, r0
   14740:	mov	r0, r1
   14744:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   14748:	ldrb	r1, [r6, #4]
   1474c:	cmp	r0, #0
   14750:	andne	r1, r1, #223	; 0xdf
   14754:	mov	r0, #0
   14758:	cmp	r1, r7
   1475c:	bne	14780 <__mempcpy_chk@plt+0x31a0>
   14760:	cmp	r7, #0
   14764:	beq	1477c <__mempcpy_chk@plt+0x319c>
   14768:	mov	r0, r6
   1476c:	mov	r1, r5
   14770:	mov	r2, r4
   14774:	pop	{r4, r5, r6, r7, fp, lr}
   14778:	b	14784 <__mempcpy_chk@plt+0x31a4>
   1477c:	mov	r0, #1
   14780:	pop	{r4, r5, r6, r7, fp, pc}
   14784:	push	{r4, r5, r6, sl, fp, lr}
   14788:	add	fp, sp, #16
   1478c:	mov	r4, r2
   14790:	mov	r6, r1
   14794:	mov	r5, r0
   14798:	mov	r0, r1
   1479c:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   147a0:	ldrb	r1, [r5, #5]
   147a4:	cmp	r0, #0
   147a8:	andne	r1, r1, #223	; 0xdf
   147ac:	mov	r0, #0
   147b0:	cmp	r1, r6
   147b4:	bne	147d4 <__mempcpy_chk@plt+0x31f4>
   147b8:	cmp	r6, #0
   147bc:	beq	147d0 <__mempcpy_chk@plt+0x31f0>
   147c0:	mov	r0, r5
   147c4:	mov	r1, r4
   147c8:	pop	{r4, r5, r6, sl, fp, lr}
   147cc:	b	147d8 <__mempcpy_chk@plt+0x31f8>
   147d0:	mov	r0, #1
   147d4:	pop	{r4, r5, r6, sl, fp, pc}
   147d8:	push	{r4, r5, fp, lr}
   147dc:	add	fp, sp, #8
   147e0:	mov	r5, r1
   147e4:	mov	r4, r0
   147e8:	mov	r0, r1
   147ec:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   147f0:	ldrb	r1, [r4, #6]
   147f4:	cmp	r0, #0
   147f8:	andne	r1, r1, #223	; 0xdf
   147fc:	mov	r0, #0
   14800:	cmp	r1, r5
   14804:	popne	{r4, r5, fp, pc}
   14808:	cmp	r5, #0
   1480c:	beq	1481c <__mempcpy_chk@plt+0x323c>
   14810:	mov	r0, r4
   14814:	pop	{r4, r5, fp, lr}
   14818:	b	14824 <__mempcpy_chk@plt+0x3244>
   1481c:	mov	r0, #1
   14820:	pop	{r4, r5, fp, pc}
   14824:	push	{r4, sl, fp, lr}
   14828:	add	fp, sp, #8
   1482c:	mov	r4, r0
   14830:	mov	r0, #0
   14834:	bl	22320 <__mempcpy_chk@plt+0x10d40>
   14838:	ldrb	r1, [r4, #7]
   1483c:	cmp	r0, #0
   14840:	beq	14854 <__mempcpy_chk@plt+0x3274>
   14844:	tst	r1, #223	; 0xdf
   14848:	bne	1485c <__mempcpy_chk@plt+0x327c>
   1484c:	mov	r0, #1
   14850:	pop	{r4, sl, fp, pc}
   14854:	cmp	r1, #0
   14858:	beq	1484c <__mempcpy_chk@plt+0x326c>
   1485c:	mov	r0, #0
   14860:	pop	{r4, sl, fp, pc}
   14864:	push	{fp, lr}
   14868:	mov	fp, sp
   1486c:	mov	ip, r1
   14870:	mov	lr, r0
   14874:	movw	r0, #25660	; 0x643c
   14878:	movt	r0, #3
   1487c:	ldr	r3, [r0]
   14880:	mov	r0, #16
   14884:	and	r0, r0, r3, lsr #21
   14888:	ldrb	r1, [r2, #28]
   1488c:	and	r1, r1, #111	; 0x6f
   14890:	orr	r0, r1, r0
   14894:	orr	r0, r0, #128	; 0x80
   14898:	strb	r0, [r2, #28]
   1489c:	mov	r0, r2
   148a0:	mov	r1, lr
   148a4:	mov	r2, ip
   148a8:	bl	148e4 <__mempcpy_chk@plt+0x3304>
   148ac:	cmp	r0, #0
   148b0:	beq	148dc <__mempcpy_chk@plt+0x32fc>
   148b4:	movw	r1, #13632	; 0x3540
   148b8:	movt	r1, #2
   148bc:	ldr	r0, [r1, r0, lsl #2]
   148c0:	movw	r1, #13248	; 0x33c0
   148c4:	movt	r1, #2
   148c8:	add	r1, r1, r0
   148cc:	mov	r0, #0
   148d0:	mov	r2, #5
   148d4:	pop	{fp, lr}
   148d8:	b	113a0 <dcgettext@plt>
   148dc:	mov	r0, #0
   148e0:	pop	{fp, pc}
   148e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148e8:	add	fp, sp, #24
   148ec:	sub	sp, sp, #96	; 0x60
   148f0:	mov	r6, r3
   148f4:	mov	r7, r2
   148f8:	mov	r8, r1
   148fc:	mov	r4, r0
   14900:	mov	r0, #0
   14904:	str	r0, [fp, #-28]	; 0xffffffe4
   14908:	str	r0, [r4, #24]
   1490c:	str	r0, [r4, #8]
   14910:	str	r3, [r4, #12]
   14914:	ldrb	r0, [r4, #28]
   14918:	and	r0, r0, #144	; 0x90
   1491c:	strb	r0, [r4, #28]
   14920:	ldr	r5, [r4]
   14924:	ldr	r0, [r4, #4]
   14928:	cmp	r0, #159	; 0x9f
   1492c:	bls	14a90 <__mempcpy_chk@plt+0x34b0>
   14930:	mov	r0, #160	; 0xa0
   14934:	str	r0, [r4, #8]
   14938:	mov	r0, r5
   1493c:	mov	r1, r7
   14940:	bl	15fd4 <__mempcpy_chk@plt+0x49f4>
   14944:	str	r0, [fp, #-28]	; 0xffffffe4
   14948:	cmp	r0, #0
   1494c:	bne	14980 <__mempcpy_chk@plt+0x33a0>
   14950:	movw	r1, #0
   14954:	movt	r1, #0
   14958:	movw	r2, #0
   1495c:	movt	r2, #0
   14960:	orrs	r1, r2, r1
   14964:	beq	14980 <__mempcpy_chk@plt+0x33a0>
   14968:	add	r0, r5, #136	; 0x88
   1496c:	mov	r1, #0
   14970:	bl	11364 <pthread_mutex_init@plt>
   14974:	cmp	r0, #0
   14978:	bne	14ab4 <__mempcpy_chk@plt+0x34d4>
   1497c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14980:	cmp	r0, #0
   14984:	bne	14a78 <__mempcpy_chk@plt+0x3498>
   14988:	ldr	r3, [r4, #20]
   1498c:	str	r5, [sp, #4]
   14990:	ubfx	r0, r6, #22, #1
   14994:	str	r0, [sp]
   14998:	add	r0, sp, #8
   1499c:	mov	r1, r8
   149a0:	mov	r2, r7
   149a4:	bl	16190 <__mempcpy_chk@plt+0x4bb0>
   149a8:	str	r0, [fp, #-28]	; 0xffffffe4
   149ac:	cmp	r0, #0
   149b0:	bne	14a48 <__mempcpy_chk@plt+0x3468>
   149b4:	mov	r0, #0
   149b8:	str	r0, [r4, #24]
   149bc:	add	r0, sp, #8
   149c0:	sub	r3, fp, #28
   149c4:	mov	r1, r4
   149c8:	mov	r2, r6
   149cc:	bl	16364 <__mempcpy_chk@plt+0x4d84>
   149d0:	str	r0, [r5, #52]	; 0x34
   149d4:	cmp	r0, #0
   149d8:	beq	14a48 <__mempcpy_chk@plt+0x3468>
   149dc:	mov	r0, r4
   149e0:	bl	16438 <__mempcpy_chk@plt+0x4e58>
   149e4:	str	r0, [fp, #-28]	; 0xffffffe4
   149e8:	cmp	r0, #0
   149ec:	bne	14a48 <__mempcpy_chk@plt+0x3468>
   149f0:	ands	r0, r6, #4194304	; 0x400000
   149f4:	bne	14a14 <__mempcpy_chk@plt+0x3434>
   149f8:	ldrb	r0, [r5, #88]	; 0x58
   149fc:	ands	r0, r0, #4
   14a00:	beq	14a14 <__mempcpy_chk@plt+0x3434>
   14a04:	ldr	r0, [r4, #20]
   14a08:	cmp	r0, #0
   14a0c:	moveq	r0, r5
   14a10:	bleq	16654 <__mempcpy_chk@plt+0x5074>
   14a14:	mov	r0, r5
   14a18:	bl	167f8 <__mempcpy_chk@plt+0x5218>
   14a1c:	str	r0, [fp, #-28]	; 0xffffffe4
   14a20:	mov	r0, r4
   14a24:	bl	162e0 <__mempcpy_chk@plt+0x4d00>
   14a28:	add	r0, sp, #8
   14a2c:	bl	16330 <__mempcpy_chk@plt+0x4d50>
   14a30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a34:	cmp	r0, #0
   14a38:	bne	14a58 <__mempcpy_chk@plt+0x3478>
   14a3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a40:	sub	sp, fp, #24
   14a44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14a48:	mov	r0, r4
   14a4c:	bl	162e0 <__mempcpy_chk@plt+0x4d00>
   14a50:	add	r0, sp, #8
   14a54:	bl	16330 <__mempcpy_chk@plt+0x4d50>
   14a58:	movw	r0, #0
   14a5c:	movt	r0, #0
   14a60:	movw	r1, #0
   14a64:	movt	r1, #0
   14a68:	orrs	r0, r1, r0
   14a6c:	beq	14a78 <__mempcpy_chk@plt+0x3498>
   14a70:	add	r0, r5, #136	; 0x88
   14a74:	bl	11304 <pthread_mutex_destroy@plt>
   14a78:	mov	r0, r5
   14a7c:	bl	150e8 <__mempcpy_chk@plt+0x3b08>
   14a80:	mov	r0, #0
   14a84:	str	r0, [r4]
   14a88:	str	r0, [r4, #4]
   14a8c:	b	14a3c <__mempcpy_chk@plt+0x345c>
   14a90:	mov	r9, #160	; 0xa0
   14a94:	mov	r0, r5
   14a98:	mov	r1, #160	; 0xa0
   14a9c:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   14aa0:	cmp	r0, #0
   14aa4:	beq	14ac0 <__mempcpy_chk@plt+0x34e0>
   14aa8:	mov	r5, r0
   14aac:	stm	r4, {r0, r9}
   14ab0:	b	14930 <__mempcpy_chk@plt+0x3350>
   14ab4:	mov	r0, #12
   14ab8:	str	r0, [fp, #-28]	; 0xffffffe4
   14abc:	b	14a78 <__mempcpy_chk@plt+0x3498>
   14ac0:	mov	r0, #12
   14ac4:	sub	sp, fp, #24
   14ac8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14acc:	movw	r2, #25660	; 0x643c
   14ad0:	movt	r2, #3
   14ad4:	ldr	r1, [r2]
   14ad8:	str	r0, [r2]
   14adc:	mov	r0, r1
   14ae0:	bx	lr
   14ae4:	push	{r4, r5, r6, sl, fp, lr}
   14ae8:	add	fp, sp, #16
   14aec:	mov	r4, r0
   14af0:	ldr	r6, [r0]
   14af4:	ldr	r5, [r0, #16]
   14af8:	mov	r0, r5
   14afc:	mov	r1, #0
   14b00:	mov	r2, #256	; 0x100
   14b04:	bl	114fc <memset@plt>
   14b08:	ldr	r1, [r6, #36]	; 0x24
   14b0c:	mov	r0, r4
   14b10:	mov	r2, r5
   14b14:	bl	14b74 <__mempcpy_chk@plt+0x3594>
   14b18:	ldr	r0, [r6, #36]	; 0x24
   14b1c:	ldr	r1, [r6, #40]	; 0x28
   14b20:	cmp	r0, r1
   14b24:	movne	r0, r4
   14b28:	movne	r2, r5
   14b2c:	blne	14b74 <__mempcpy_chk@plt+0x3594>
   14b30:	ldr	r0, [r6, #36]	; 0x24
   14b34:	ldr	r1, [r6, #44]	; 0x2c
   14b38:	cmp	r0, r1
   14b3c:	movne	r0, r4
   14b40:	movne	r2, r5
   14b44:	blne	14b74 <__mempcpy_chk@plt+0x3594>
   14b48:	ldr	r0, [r6, #36]	; 0x24
   14b4c:	ldr	r1, [r6, #48]	; 0x30
   14b50:	cmp	r0, r1
   14b54:	movne	r0, r4
   14b58:	movne	r2, r5
   14b5c:	blne	14b74 <__mempcpy_chk@plt+0x3594>
   14b60:	ldrb	r0, [r4, #28]
   14b64:	orr	r0, r0, #8
   14b68:	strb	r0, [r4, #28]
   14b6c:	mov	r0, #0
   14b70:	pop	{r4, r5, r6, sl, fp, pc}
   14b74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b78:	add	fp, sp, #28
   14b7c:	sub	sp, sp, #308	; 0x134
   14b80:	mov	r5, r2
   14b84:	str	r0, [sp, #20]
   14b88:	ldr	r8, [r0]
   14b8c:	ldr	r0, [r8, #92]	; 0x5c
   14b90:	mov	r9, #0
   14b94:	cmp	r0, #1
   14b98:	bne	14ba8 <__mempcpy_chk@plt+0x35c8>
   14b9c:	ldr	r0, [sp, #20]
   14ba0:	ldrb	r0, [r0, #14]
   14ba4:	ubfx	r9, r0, #6, #1
   14ba8:	ldr	r0, [r1, #8]
   14bac:	cmp	r0, #1
   14bb0:	blt	14ef0 <__mempcpy_chk@plt+0x3910>
   14bb4:	add	r0, sp, #32
   14bb8:	add	r0, r0, #1
   14bbc:	str	r0, [sp, #4]
   14bc0:	mov	r7, #1
   14bc4:	movw	r0, #1
   14bc8:	movt	r0, #32
   14bcc:	add	r0, r0, #254	; 0xfe
   14bd0:	str	r0, [sp, #8]
   14bd4:	mov	r2, #0
   14bd8:	str	r1, [sp, #12]
   14bdc:	str	r8, [sp, #24]
   14be0:	b	14bfc <__mempcpy_chk@plt+0x361c>
   14be4:	ldr	r1, [sp, #12]
   14be8:	ldr	r0, [r1, #8]
   14bec:	ldr	r2, [sp, #16]
   14bf0:	add	r2, r2, #1
   14bf4:	cmp	r2, r0
   14bf8:	bge	14ef0 <__mempcpy_chk@plt+0x3910>
   14bfc:	ldr	r0, [r1, #12]
   14c00:	str	r2, [sp, #16]
   14c04:	ldr	sl, [r0, r2, lsl #2]
   14c08:	ldr	r0, [r8]
   14c0c:	add	r1, r0, sl, lsl #3
   14c10:	ldrb	r4, [r1, #4]
   14c14:	cmp	r4, #1
   14c18:	beq	14c94 <__mempcpy_chk@plt+0x36b4>
   14c1c:	cmp	r4, #6
   14c20:	beq	14d84 <__mempcpy_chk@plt+0x37a4>
   14c24:	cmp	r4, #3
   14c28:	bne	14e04 <__mempcpy_chk@plt+0x3824>
   14c2c:	mov	r4, #0
   14c30:	mov	r6, #0
   14c34:	str	sl, [sp, #28]
   14c38:	b	14c50 <__mempcpy_chk@plt+0x3670>
   14c3c:	add	r6, r6, #1
   14c40:	cmp	r6, #8
   14c44:	ldr	r8, [sp, #24]
   14c48:	ldr	sl, [sp, #28]
   14c4c:	beq	14be4 <__mempcpy_chk@plt+0x3604>
   14c50:	ldr	r0, [r8]
   14c54:	ldr	r0, [r0, sl, lsl #3]
   14c58:	ldr	r8, [r0, r6, lsl #2]
   14c5c:	mov	sl, #0
   14c60:	b	14c74 <__mempcpy_chk@plt+0x3694>
   14c64:	add	r4, r4, #1
   14c68:	add	sl, sl, #1
   14c6c:	cmp	sl, #32
   14c70:	beq	14c3c <__mempcpy_chk@plt+0x365c>
   14c74:	tst	r8, r7, lsl sl
   14c78:	strbne	r7, [r5, r4]
   14c7c:	cmpne	r9, #0
   14c80:	beq	14c64 <__mempcpy_chk@plt+0x3684>
   14c84:	mov	r0, r4
   14c88:	bl	11358 <tolower@plt>
   14c8c:	strb	r7, [r5, r0]
   14c90:	b	14c64 <__mempcpy_chk@plt+0x3684>
   14c94:	ldrb	r0, [r0, sl, lsl #3]
   14c98:	strb	r7, [r5, r0]
   14c9c:	cmp	r9, #0
   14ca0:	beq	14cac <__mempcpy_chk@plt+0x36cc>
   14ca4:	bl	11358 <tolower@plt>
   14ca8:	strb	r7, [r5, r0]
   14cac:	ldr	r0, [sp, #20]
   14cb0:	ldrb	r0, [r0, #14]
   14cb4:	tst	r0, #64	; 0x40
   14cb8:	beq	14be4 <__mempcpy_chk@plt+0x3604>
   14cbc:	ldr	r0, [r8, #92]	; 0x5c
   14cc0:	cmp	r0, #2
   14cc4:	blt	14be4 <__mempcpy_chk@plt+0x3604>
   14cc8:	ldr	r0, [r8]
   14ccc:	ldrb	r0, [r0, sl, lsl #3]
   14cd0:	strb	r0, [sp, #32]
   14cd4:	ldr	r0, [r8, #8]
   14cd8:	add	r1, sl, #1
   14cdc:	cmp	r1, r0
   14ce0:	ldr	r0, [sp, #4]
   14ce4:	mov	r6, #0
   14ce8:	movw	r4, #1
   14cec:	movt	r4, #32
   14cf0:	bcs	14d34 <__mempcpy_chk@plt+0x3754>
   14cf4:	ldr	r0, [sp, #4]
   14cf8:	ldr	r1, [r8]
   14cfc:	add	r1, r1, sl, lsl #3
   14d00:	ldr	r2, [r1, #12]
   14d04:	ldr	r3, [sp, #8]
   14d08:	and	r2, r2, r3
   14d0c:	cmp	r2, r4
   14d10:	bne	14d34 <__mempcpy_chk@plt+0x3754>
   14d14:	ldrb	r1, [r1, #8]
   14d18:	strb	r1, [r0], #1
   14d1c:	add	r1, sl, #1
   14d20:	ldr	r2, [r8, #8]
   14d24:	add	r3, sl, #2
   14d28:	cmp	r3, r2
   14d2c:	mov	sl, r1
   14d30:	bcc	14cf8 <__mempcpy_chk@plt+0x3718>
   14d34:	str	r6, [fp, #-44]	; 0xffffffd4
   14d38:	str	r6, [fp, #-48]	; 0xffffffd0
   14d3c:	add	r1, sp, #32
   14d40:	sub	r4, r0, r1
   14d44:	sub	r0, fp, #36	; 0x24
   14d48:	mov	r2, r4
   14d4c:	sub	r3, fp, #48	; 0x30
   14d50:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   14d54:	cmp	r0, r4
   14d58:	bne	14be4 <__mempcpy_chk@plt+0x3604>
   14d5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d60:	bl	11370 <towlower@plt>
   14d64:	mov	r1, r0
   14d68:	add	r0, sp, #32
   14d6c:	sub	r2, fp, #48	; 0x30
   14d70:	bl	112d4 <wcrtomb@plt>
   14d74:	cmn	r0, #1
   14d78:	ldrbne	r0, [sp, #32]
   14d7c:	strbne	r7, [r5, r0]
   14d80:	b	14be4 <__mempcpy_chk@plt+0x3604>
   14d84:	ldr	r4, [r0, sl, lsl #3]
   14d88:	ldr	r0, [r8, #92]	; 0x5c
   14d8c:	cmp	r0, #2
   14d90:	blt	14e1c <__mempcpy_chk@plt+0x383c>
   14d94:	ldr	r0, [r4, #36]	; 0x24
   14d98:	cmp	r0, #0
   14d9c:	bne	14db8 <__mempcpy_chk@plt+0x37d8>
   14da0:	ldrb	r0, [r4, #16]
   14da4:	tst	r0, #1
   14da8:	bne	14db8 <__mempcpy_chk@plt+0x37d8>
   14dac:	ldr	r0, [r4, #32]
   14db0:	cmp	r0, #0
   14db4:	beq	14e1c <__mempcpy_chk@plt+0x383c>
   14db8:	mov	r4, #0
   14dbc:	strb	r4, [fp, #-48]	; 0xffffffd0
   14dc0:	str	r4, [sp, #36]	; 0x24
   14dc4:	str	r4, [sp, #32]
   14dc8:	mov	r0, #0
   14dcc:	sub	r1, fp, #48	; 0x30
   14dd0:	mov	r2, #1
   14dd4:	add	r3, sp, #32
   14dd8:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   14ddc:	cmn	r0, #2
   14de0:	ldrbeq	r0, [fp, #-48]	; 0xffffffd0
   14de4:	strbeq	r7, [r5, r0]
   14de8:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   14dec:	add	r0, r0, #1
   14df0:	strb	r0, [fp, #-48]	; 0xffffffd0
   14df4:	uxtb	r1, r0
   14df8:	cmp	r1, r0
   14dfc:	beq	14dc0 <__mempcpy_chk@plt+0x37e0>
   14e00:	b	14be4 <__mempcpy_chk@plt+0x3604>
   14e04:	cmp	r4, #7
   14e08:	bhi	14be4 <__mempcpy_chk@plt+0x3604>
   14e0c:	mov	r0, #164	; 0xa4
   14e10:	tst	r0, r7, lsl r4
   14e14:	beq	14be4 <__mempcpy_chk@plt+0x3604>
   14e18:	b	14ec8 <__mempcpy_chk@plt+0x38e8>
   14e1c:	ldr	r0, [r4, #20]
   14e20:	cmp	r0, #1
   14e24:	blt	14be4 <__mempcpy_chk@plt+0x3604>
   14e28:	mov	r6, #0
   14e2c:	b	14e40 <__mempcpy_chk@plt+0x3860>
   14e30:	add	r6, r6, #1
   14e34:	ldr	r0, [r4, #20]
   14e38:	cmp	r6, r0
   14e3c:	bge	14be4 <__mempcpy_chk@plt+0x3604>
   14e40:	mov	r0, #0
   14e44:	str	r0, [fp, #-44]	; 0xffffffd4
   14e48:	str	r0, [fp, #-48]	; 0xffffffd0
   14e4c:	ldr	r0, [r4]
   14e50:	ldr	r1, [r0, r6, lsl #2]
   14e54:	add	r0, sp, #32
   14e58:	sub	r2, fp, #48	; 0x30
   14e5c:	bl	112d4 <wcrtomb@plt>
   14e60:	cmn	r0, #1
   14e64:	beq	14e80 <__mempcpy_chk@plt+0x38a0>
   14e68:	ldrb	r0, [sp, #32]
   14e6c:	strb	r7, [r5, r0]
   14e70:	cmp	r9, #0
   14e74:	beq	14e80 <__mempcpy_chk@plt+0x38a0>
   14e78:	bl	11358 <tolower@plt>
   14e7c:	strb	r7, [r5, r0]
   14e80:	ldr	r0, [sp, #20]
   14e84:	ldrb	r0, [r0, #14]
   14e88:	tst	r0, #64	; 0x40
   14e8c:	beq	14e30 <__mempcpy_chk@plt+0x3850>
   14e90:	ldr	r0, [r8, #92]	; 0x5c
   14e94:	cmp	r0, #2
   14e98:	blt	14e30 <__mempcpy_chk@plt+0x3850>
   14e9c:	ldr	r0, [r4]
   14ea0:	ldr	r0, [r0, r6, lsl #2]
   14ea4:	bl	11370 <towlower@plt>
   14ea8:	mov	r1, r0
   14eac:	add	r0, sp, #32
   14eb0:	sub	r2, fp, #48	; 0x30
   14eb4:	bl	112d4 <wcrtomb@plt>
   14eb8:	cmn	r0, #1
   14ebc:	ldrbne	r0, [sp, #32]
   14ec0:	strbne	r7, [r5, r0]
   14ec4:	b	14e30 <__mempcpy_chk@plt+0x3850>
   14ec8:	mov	r0, r5
   14ecc:	mov	r1, #1
   14ed0:	mov	r2, #256	; 0x100
   14ed4:	bl	114fc <memset@plt>
   14ed8:	cmp	r4, #2
   14edc:	bne	14ef0 <__mempcpy_chk@plt+0x3910>
   14ee0:	ldr	r1, [sp, #20]
   14ee4:	ldrb	r0, [r1, #28]
   14ee8:	orr	r0, r0, #1
   14eec:	strb	r0, [r1, #28]
   14ef0:	sub	sp, fp, #28
   14ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ef8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14efc:	add	fp, sp, #24
   14f00:	mov	r7, r2
   14f04:	mov	r8, r1
   14f08:	mov	r4, r0
   14f0c:	mov	r0, #0
   14f10:	str	r0, [r4]
   14f14:	str	r0, [r4, #4]
   14f18:	str	r0, [r4, #8]
   14f1c:	mov	r0, #256	; 0x100
   14f20:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   14f24:	str	r0, [r4, #16]
   14f28:	cmp	r0, #0
   14f2c:	beq	14fdc <__mempcpy_chk@plt+0x39fc>
   14f30:	movw	r0, #45820	; 0xb2fc
   14f34:	movt	r0, #3
   14f38:	tst	r7, #1
   14f3c:	movweq	r0, #710	; 0x2c6
   14f40:	movteq	r0, #257	; 0x101
   14f44:	and	r1, r7, #2
   14f48:	orr	r5, r0, r1, lsl #21
   14f4c:	tst	r7, #4
   14f50:	bne	14f64 <__mempcpy_chk@plt+0x3984>
   14f54:	ldrb	r0, [r4, #28]
   14f58:	and	r0, r0, #127	; 0x7f
   14f5c:	strb	r0, [r4, #28]
   14f60:	b	14f80 <__mempcpy_chk@plt+0x39a0>
   14f64:	ldrb	r0, [r4, #28]
   14f68:	orr	r0, r0, #128	; 0x80
   14f6c:	strb	r0, [r4, #28]
   14f70:	movw	r0, #45758	; 0xb2be
   14f74:	movt	r0, #323	; 0x143
   14f78:	and	r0, r5, r0
   14f7c:	orr	r5, r0, #256	; 0x100
   14f80:	mov	r6, #0
   14f84:	str	r6, [r4, #20]
   14f88:	and	r0, r7, #8
   14f8c:	ldrb	r1, [r4, #28]
   14f90:	and	r1, r1, #239	; 0xef
   14f94:	orr	r0, r1, r0, lsl #1
   14f98:	strb	r0, [r4, #28]
   14f9c:	mov	r0, r8
   14fa0:	bl	114cc <strlen@plt>
   14fa4:	mov	r2, r0
   14fa8:	mov	r0, r4
   14fac:	mov	r1, r8
   14fb0:	mov	r3, r5
   14fb4:	bl	148e4 <__mempcpy_chk@plt+0x3304>
   14fb8:	mov	r5, r0
   14fbc:	cmp	r0, #16
   14fc0:	movweq	r5, #8
   14fc4:	cmp	r5, #0
   14fc8:	bne	14fe8 <__mempcpy_chk@plt+0x3a08>
   14fcc:	mov	r0, r4
   14fd0:	bl	14ae4 <__mempcpy_chk@plt+0x3504>
   14fd4:	mov	r0, r6
   14fd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fdc:	mov	r6, #12
   14fe0:	mov	r0, r6
   14fe4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fe8:	ldr	r0, [r4, #16]
   14fec:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   14ff0:	str	r6, [r4, #16]
   14ff4:	mov	r0, r5
   14ff8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ffc:	push	{r4, r5, r6, r7, fp, lr}
   15000:	add	fp, sp, #16
   15004:	cmp	r0, #17
   15008:	bcs	1507c <__mempcpy_chk@plt+0x3a9c>
   1500c:	mov	r5, r3
   15010:	mov	r4, r2
   15014:	movw	r1, #13632	; 0x3540
   15018:	movt	r1, #2
   1501c:	ldr	r0, [r1, r0, lsl #2]
   15020:	movw	r1, #13248	; 0x33c0
   15024:	movt	r1, #2
   15028:	add	r1, r1, r0
   1502c:	mov	r0, #0
   15030:	mov	r2, #5
   15034:	bl	113a0 <dcgettext@plt>
   15038:	mov	r6, r0
   1503c:	bl	114cc <strlen@plt>
   15040:	add	r7, r0, #1
   15044:	cmp	r5, #0
   15048:	beq	15064 <__mempcpy_chk@plt+0x3a84>
   1504c:	cmp	r7, r5
   15050:	mov	r2, r7
   15054:	bhi	1506c <__mempcpy_chk@plt+0x3a8c>
   15058:	mov	r0, r4
   1505c:	mov	r1, r6
   15060:	bl	1134c <memcpy@plt>
   15064:	mov	r0, r7
   15068:	pop	{r4, r5, r6, r7, fp, pc}
   1506c:	sub	r2, r5, #1
   15070:	mov	r0, #0
   15074:	strb	r0, [r4, r2]
   15078:	b	15058 <__mempcpy_chk@plt+0x3a78>
   1507c:	bl	115c8 <abort@plt>
   15080:	push	{r4, r5, fp, lr}
   15084:	add	fp, sp, #8
   15088:	mov	r4, r0
   1508c:	ldr	r5, [r0]
   15090:	cmp	r5, #0
   15094:	beq	150c0 <__mempcpy_chk@plt+0x3ae0>
   15098:	movw	r0, #0
   1509c:	movt	r0, #0
   150a0:	movw	r1, #0
   150a4:	movt	r1, #0
   150a8:	orrs	r0, r1, r0
   150ac:	beq	150b8 <__mempcpy_chk@plt+0x3ad8>
   150b0:	add	r0, r5, #136	; 0x88
   150b4:	bl	11304 <pthread_mutex_destroy@plt>
   150b8:	mov	r0, r5
   150bc:	bl	150e8 <__mempcpy_chk@plt+0x3b08>
   150c0:	mov	r5, #0
   150c4:	str	r5, [r4]
   150c8:	str	r5, [r4, #4]
   150cc:	ldr	r0, [r4, #16]
   150d0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   150d4:	str	r5, [r4, #16]
   150d8:	ldr	r0, [r4, #20]
   150dc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   150e0:	str	r5, [r4, #20]
   150e4:	pop	{r4, r5, fp, pc}
   150e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150ec:	add	fp, sp, #24
   150f0:	mov	r8, r0
   150f4:	ldr	r0, [r0]
   150f8:	cmp	r0, #0
   150fc:	beq	15134 <__mempcpy_chk@plt+0x3b54>
   15100:	ldr	r0, [r8, #8]
   15104:	cmp	r0, #0
   15108:	beq	15134 <__mempcpy_chk@plt+0x3b54>
   1510c:	mov	r5, #0
   15110:	mov	r6, #0
   15114:	ldr	r0, [r8]
   15118:	add	r0, r0, r5
   1511c:	bl	15f0c <__mempcpy_chk@plt+0x492c>
   15120:	add	r5, r5, #8
   15124:	add	r6, r6, #1
   15128:	ldr	r0, [r8, #8]
   1512c:	cmp	r6, r0
   15130:	bcc	15114 <__mempcpy_chk@plt+0x3b34>
   15134:	ldr	r0, [r8, #12]
   15138:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1513c:	ldr	r0, [r8, #8]
   15140:	cmp	r0, #0
   15144:	beq	151a8 <__mempcpy_chk@plt+0x3bc8>
   15148:	mov	r5, #0
   1514c:	mov	r6, #8
   15150:	b	15168 <__mempcpy_chk@plt+0x3b88>
   15154:	add	r6, r6, #12
   15158:	add	r5, r5, #1
   1515c:	ldr	r0, [r8, #8]
   15160:	cmp	r5, r0
   15164:	bcs	151a8 <__mempcpy_chk@plt+0x3bc8>
   15168:	ldr	r0, [r8, #24]
   1516c:	cmp	r0, #0
   15170:	beq	1517c <__mempcpy_chk@plt+0x3b9c>
   15174:	ldr	r0, [r0, r6]
   15178:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1517c:	ldr	r0, [r8, #28]
   15180:	cmp	r0, #0
   15184:	beq	15190 <__mempcpy_chk@plt+0x3bb0>
   15188:	ldr	r0, [r0, r6]
   1518c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15190:	ldr	r0, [r8, #20]
   15194:	cmp	r0, #0
   15198:	beq	15154 <__mempcpy_chk@plt+0x3b74>
   1519c:	ldr	r0, [r0, r6]
   151a0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   151a4:	b	15154 <__mempcpy_chk@plt+0x3b74>
   151a8:	ldr	r0, [r8, #20]
   151ac:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   151b0:	ldr	r0, [r8, #24]
   151b4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   151b8:	ldr	r0, [r8, #28]
   151bc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   151c0:	ldr	r0, [r8]
   151c4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   151c8:	ldr	r0, [r8, #32]
   151cc:	cmp	r0, #0
   151d0:	beq	15234 <__mempcpy_chk@plt+0x3c54>
   151d4:	mov	r5, #0
   151d8:	b	151f8 <__mempcpy_chk@plt+0x3c18>
   151dc:	ldr	r0, [r7]
   151e0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   151e4:	add	r0, r5, #1
   151e8:	ldr	r1, [r8, #68]	; 0x44
   151ec:	cmp	r5, r1
   151f0:	mov	r5, r0
   151f4:	bcs	15234 <__mempcpy_chk@plt+0x3c54>
   151f8:	ldr	r6, [r8, #32]
   151fc:	add	r0, r5, r5, lsl #1
   15200:	ldr	r0, [r6, r0, lsl #2]!
   15204:	add	r7, r6, #8
   15208:	cmp	r0, #1
   1520c:	blt	151dc <__mempcpy_chk@plt+0x3bfc>
   15210:	mov	r4, #0
   15214:	ldr	r0, [r7]
   15218:	ldr	r0, [r0, r4, lsl #2]
   1521c:	bl	15f3c <__mempcpy_chk@plt+0x495c>
   15220:	add	r4, r4, #1
   15224:	ldr	r0, [r6]
   15228:	cmp	r4, r0
   1522c:	blt	15214 <__mempcpy_chk@plt+0x3c34>
   15230:	b	151dc <__mempcpy_chk@plt+0x3bfc>
   15234:	ldr	r0, [r8, #32]
   15238:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1523c:	ldr	r0, [r8, #60]	; 0x3c
   15240:	movw	r1, #13700	; 0x3584
   15244:	movt	r1, #2
   15248:	cmp	r0, r1
   1524c:	beq	15254 <__mempcpy_chk@plt+0x3c74>
   15250:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15254:	ldr	r0, [r8, #132]	; 0x84
   15258:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1525c:	mov	r0, r8
   15260:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15264:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   15268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1526c:	add	fp, sp, #28
   15270:	sub	sp, sp, #28
   15274:	mov	r7, #2
   15278:	ldr	sl, [fp, #8]
   1527c:	cmp	sl, #7
   15280:	bhi	15354 <__mempcpy_chk@plt+0x3d74>
   15284:	mov	r6, r3
   15288:	mov	r9, r2
   1528c:	mov	r4, r1
   15290:	mov	r5, r0
   15294:	ldr	r0, [r0]
   15298:	str	r0, [sp, #24]
   1529c:	tst	sl, #4
   152a0:	bne	152b8 <__mempcpy_chk@plt+0x3cd8>
   152a4:	mov	r0, r4
   152a8:	bl	114cc <strlen@plt>
   152ac:	mov	r7, r0
   152b0:	mov	r8, #0
   152b4:	b	152c0 <__mempcpy_chk@plt+0x3ce0>
   152b8:	ldr	r8, [r6]
   152bc:	ldr	r7, [r6, #4]
   152c0:	movw	r0, #0
   152c4:	movt	r0, #0
   152c8:	movw	r1, #0
   152cc:	movt	r1, #0
   152d0:	orrs	r0, r1, r0
   152d4:	str	r0, [sp, #20]
   152d8:	beq	152e8 <__mempcpy_chk@plt+0x3d08>
   152dc:	ldr	r0, [sp, #24]
   152e0:	add	r0, r0, #136	; 0x88
   152e4:	bl	11334 <pthread_mutex_lock@plt>
   152e8:	ldrb	r0, [r5, #28]
   152ec:	tst	r0, #16
   152f0:	bne	15304 <__mempcpy_chk@plt+0x3d24>
   152f4:	str	r7, [sp]
   152f8:	stmib	sp, {r7, r9}
   152fc:	str	r6, [sp, #12]
   15300:	b	15318 <__mempcpy_chk@plt+0x3d38>
   15304:	mov	r0, #0
   15308:	str	r7, [sp]
   1530c:	str	r7, [sp, #4]
   15310:	str	r0, [sp, #8]
   15314:	str	r0, [sp, #12]
   15318:	str	sl, [sp, #16]
   1531c:	mov	r0, r5
   15320:	mov	r1, r4
   15324:	mov	r2, r7
   15328:	mov	r3, r8
   1532c:	bl	15360 <__mempcpy_chk@plt+0x3d80>
   15330:	mov	r7, r0
   15334:	ldr	r0, [sp, #20]
   15338:	cmp	r0, #0
   1533c:	beq	1534c <__mempcpy_chk@plt+0x3d6c>
   15340:	ldr	r0, [sp, #24]
   15344:	add	r0, r0, #136	; 0x88
   15348:	bl	1128c <pthread_mutex_unlock@plt>
   1534c:	cmp	r7, #0
   15350:	movwne	r7, #1
   15354:	mov	r0, r7
   15358:	sub	sp, fp, #28
   1535c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15364:	add	fp, sp, #28
   15368:	sub	sp, sp, #196	; 0xc4
   1536c:	mov	r6, r3
   15370:	str	r2, [sp, #52]	; 0x34
   15374:	str	r1, [sp, #40]	; 0x28
   15378:	mov	r4, r0
   1537c:	ldr	sl, [r0]
   15380:	add	r0, sp, #56	; 0x38
   15384:	mov	r7, #0
   15388:	mov	r1, #0
   1538c:	mov	r2, #136	; 0x88
   15390:	bl	114fc <memset@plt>
   15394:	str	sl, [sp, #140]	; 0x8c
   15398:	ldr	r1, [r4, #16]
   1539c:	ldr	r0, [fp, #16]
   153a0:	ldr	ip, [fp, #8]
   153a4:	cmp	r1, #0
   153a8:	mov	r5, #0
   153ac:	beq	153c8 <__mempcpy_chk@plt+0x3de8>
   153b0:	ldrb	r2, [r4, #28]
   153b4:	and	r2, r2, #9
   153b8:	cmp	r2, #8
   153bc:	movne	r1, #0
   153c0:	subs	r5, r6, ip
   153c4:	movne	r5, r1
   153c8:	str	r6, [sp, #36]	; 0x24
   153cc:	ldr	r1, [r4, #8]
   153d0:	ldr	r2, [r4, #24]
   153d4:	mvn	r3, r2
   153d8:	cmp	r2, r0
   153dc:	addcc	r7, r3, r0
   153e0:	mov	r8, #1
   153e4:	cmp	r1, #0
   153e8:	beq	158d0 <__mempcpy_chk@plt+0x42f0>
   153ec:	ldr	r1, [sl, #36]	; 0x24
   153f0:	cmp	r1, #0
   153f4:	ldrne	r2, [sl, #40]	; 0x28
   153f8:	cmpne	r2, #0
   153fc:	beq	158d0 <__mempcpy_chk@plt+0x42f0>
   15400:	ldr	r3, [sl, #44]	; 0x2c
   15404:	cmp	r3, #0
   15408:	ldrne	r6, [sl, #48]	; 0x30
   1540c:	cmpne	r6, #0
   15410:	beq	158d0 <__mempcpy_chk@plt+0x42f0>
   15414:	ldr	r6, [r4, #20]
   15418:	ldr	r1, [r1, #8]
   1541c:	cmp	r1, #0
   15420:	bne	15430 <__mempcpy_chk@plt+0x3e50>
   15424:	ldr	r1, [r2, #8]
   15428:	cmp	r1, #0
   1542c:	beq	15a0c <__mempcpy_chk@plt+0x442c>
   15430:	mov	r9, ip
   15434:	ldr	r0, [fp, #16]
   15438:	subs	r0, r0, r7
   1543c:	str	r0, [sp, #48]	; 0x30
   15440:	mov	r0, #1
   15444:	str	r0, [sp, #32]
   15448:	bne	1545c <__mempcpy_chk@plt+0x3e7c>
   1544c:	ldr	r0, [sl, #76]	; 0x4c
   15450:	cmp	r0, #0
   15454:	movwne	r0, #1
   15458:	str	r0, [sp, #32]
   1545c:	ldr	r0, [sl, #8]
   15460:	ldr	r1, [r4, #12]
   15464:	str	sl, [sp, #8]
   15468:	str	r6, [sp]
   1546c:	ubfx	r1, r1, #22, #1
   15470:	str	r1, [sp, #4]
   15474:	add	r3, r0, #1
   15478:	add	r0, sp, #56	; 0x38
   1547c:	ldr	r1, [sp, #40]	; 0x28
   15480:	ldr	r2, [sp, #52]	; 0x34
   15484:	bl	1bc88 <__mempcpy_chk@plt+0xa6a8>
   15488:	cmp	r0, #0
   1548c:	bne	15af0 <__mempcpy_chk@plt+0x4510>
   15490:	ldr	r1, [fp, #24]
   15494:	ldr	r0, [fp, #12]
   15498:	str	r0, [sp, #108]	; 0x6c
   1549c:	str	r0, [sp, #112]	; 0x70
   154a0:	str	r4, [sp, #28]
   154a4:	ldrb	r0, [r4, #28]
   154a8:	lsr	r0, r0, #7
   154ac:	strb	r0, [sp, #133]	; 0x85
   154b0:	ldr	r0, [sl, #76]	; 0x4c
   154b4:	lsl	r2, r0, #1
   154b8:	add	r0, sp, #56	; 0x38
   154bc:	bl	1bd38 <__mempcpy_chk@plt+0xa758>
   154c0:	cmp	r0, #0
   154c4:	bne	15af0 <__mempcpy_chk@plt+0x4510>
   154c8:	ldr	r0, [sp, #48]	; 0x30
   154cc:	cmp	r0, #1
   154d0:	bhi	154e0 <__mempcpy_chk@plt+0x3f00>
   154d4:	ldrb	r0, [sl, #88]	; 0x58
   154d8:	tst	r0, #2
   154dc:	beq	15508 <__mempcpy_chk@plt+0x3f28>
   154e0:	mov	r8, #12
   154e4:	ldr	r0, [sp, #92]	; 0x5c
   154e8:	cmn	r0, #-1073741822	; 0xc0000002
   154ec:	bhi	158b0 <__mempcpy_chk@plt+0x42d0>
   154f0:	mov	r1, #4
   154f4:	add	r0, r1, r0, lsl #2
   154f8:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   154fc:	str	r0, [sp, #156]	; 0x9c
   15500:	cmp	r0, #0
   15504:	beq	158b0 <__mempcpy_chk@plt+0x42d0>
   15508:	str	r7, [sp, #12]
   1550c:	ldr	r7, [sp, #36]	; 0x24
   15510:	str	r7, [fp, #-32]	; 0xffffffe0
   15514:	mov	r0, #4
   15518:	ldr	r1, [fp, #24]
   1551c:	tst	r1, #1
   15520:	mov	r1, #4
   15524:	movweq	r1, #6
   15528:	str	r1, [sp, #116]	; 0x74
   1552c:	cmp	r9, r7
   15530:	mov	r3, #1
   15534:	mvnlt	r3, #0
   15538:	mov	r4, r9
   1553c:	movlt	r4, r7
   15540:	mov	r1, sl
   15544:	mov	sl, r7
   15548:	movlt	sl, r9
   1554c:	str	r1, [sp, #44]	; 0x2c
   15550:	ldr	ip, [r1, #92]	; 0x5c
   15554:	cmp	r5, #0
   15558:	beq	155a0 <__mempcpy_chk@plt+0x3fc0>
   1555c:	cmp	ip, #1
   15560:	ldr	r2, [sp, #52]	; 0x34
   15564:	beq	15584 <__mempcpy_chk@plt+0x3fa4>
   15568:	ldr	r0, [sp, #28]
   1556c:	ldr	r0, [r0, #12]
   15570:	and	r0, r0, #4194304	; 0x400000
   15574:	orr	r0, r6, r0
   15578:	clz	r0, r0
   1557c:	lsr	r0, r0, #5
   15580:	lsl	r0, r0, #2
   15584:	cmp	r6, #0
   15588:	mov	r1, r6
   1558c:	movwne	r1, #1
   15590:	cmp	r9, r7
   15594:	orrge	r1, r1, #2
   15598:	orr	r0, r1, r0
   1559c:	b	155a8 <__mempcpy_chk@plt+0x3fc8>
   155a0:	mov	r0, #8
   155a4:	ldr	r2, [sp, #52]	; 0x34
   155a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   155ac:	cmp	r1, sl
   155b0:	cmpge	r4, r1
   155b4:	blt	158a8 <__mempcpy_chk@plt+0x42c8>
   155b8:	sub	r1, fp, #32
   155bc:	cmp	r9, r7
   155c0:	movwlt	r1, #0
   155c4:	str	r1, [sp, #24]
   155c8:	sub	lr, r0, #4
   155cc:	add	r9, sp, #56	; 0x38
   155d0:	str	ip, [sp, #36]	; 0x24
   155d4:	ldr	r7, [sp, #40]	; 0x28
   155d8:	str	r3, [sp, #20]
   155dc:	str	lr, [sp, #16]
   155e0:	cmp	lr, #4
   155e4:	bhi	15694 <__mempcpy_chk@plt+0x40b4>
   155e8:	add	r0, pc, #0
   155ec:	ldr	pc, [r0, lr, lsl #2]
   155f0:	andeq	r5, r1, r4, lsl #12
   155f4:	andeq	r5, r1, r4, lsl #12
   155f8:	ldrdeq	r5, [r1], -r4
   155fc:	andeq	r5, r1, r4, lsl #14
   15600:	andeq	r5, r1, r0, asr #14
   15604:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15608:	cmp	r0, sl
   1560c:	blt	158a8 <__mempcpy_chk@plt+0x42c8>
   15610:	mov	r1, #0
   15614:	cmp	r0, r2
   15618:	ldrblt	r1, [r7, r0]
   1561c:	cmp	r6, #0
   15620:	ldrbne	r1, [r6, r1]
   15624:	ldrb	r1, [r5, r1]
   15628:	cmp	r1, #0
   1562c:	bne	15740 <__mempcpy_chk@plt+0x4160>
   15630:	sub	r1, r0, #1
   15634:	str	r1, [fp, #-32]	; 0xffffffe0
   15638:	cmp	r0, sl
   1563c:	mov	r0, r1
   15640:	bgt	15610 <__mempcpy_chk@plt+0x4030>
   15644:	b	158a8 <__mempcpy_chk@plt+0x42c8>
   15648:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1564c:	add	r0, r0, r3
   15650:	str	r0, [fp, #-32]	; 0xffffffe0
   15654:	cmp	r0, sl
   15658:	blt	158a8 <__mempcpy_chk@plt+0x42c8>
   1565c:	cmp	r0, r4
   15660:	ble	15694 <__mempcpy_chk@plt+0x40b4>
   15664:	b	158a8 <__mempcpy_chk@plt+0x42c8>
   15668:	mov	r0, r9
   1566c:	ldr	r2, [fp, #24]
   15670:	bl	1bdc0 <__mempcpy_chk@plt+0xa7e0>
   15674:	cmp	r0, #0
   15678:	bne	15af8 <__mempcpy_chk@plt+0x4518>
   1567c:	ldr	r0, [sp, #80]	; 0x50
   15680:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15684:	sub	r0, r1, r0
   15688:	add	r9, sp, #56	; 0x38
   1568c:	ldr	r3, [sp, #20]
   15690:	b	156ac <__mempcpy_chk@plt+0x40cc>
   15694:	ldr	r0, [sp, #80]	; 0x50
   15698:	ldr	r2, [sp, #88]	; 0x58
   1569c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   156a0:	sub	r0, r1, r0
   156a4:	cmp	r0, r2
   156a8:	bcs	15668 <__mempcpy_chk@plt+0x4088>
   156ac:	mov	r1, #0
   156b0:	ldr	r2, [sp, #84]	; 0x54
   156b4:	cmp	r0, r2
   156b8:	bcs	156c4 <__mempcpy_chk@plt+0x40e4>
   156bc:	ldr	r1, [sp, #60]	; 0x3c
   156c0:	ldrb	r1, [r1, r0]
   156c4:	ldrb	r0, [r5, r1]
   156c8:	cmp	r0, #0
   156cc:	beq	15648 <__mempcpy_chk@plt+0x4068>
   156d0:	b	15740 <__mempcpy_chk@plt+0x4160>
   156d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156d8:	cmp	r0, r4
   156dc:	bge	15734 <__mempcpy_chk@plt+0x4154>
   156e0:	ldrb	r1, [r7, r0]
   156e4:	ldrb	r1, [r5, r1]
   156e8:	cmp	r1, #0
   156ec:	bne	15734 <__mempcpy_chk@plt+0x4154>
   156f0:	add	r0, r0, #1
   156f4:	str	r0, [fp, #-32]	; 0xffffffe0
   156f8:	cmp	r0, r4
   156fc:	blt	156e0 <__mempcpy_chk@plt+0x4100>
   15700:	b	15734 <__mempcpy_chk@plt+0x4154>
   15704:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15708:	cmp	r0, r4
   1570c:	bge	15734 <__mempcpy_chk@plt+0x4154>
   15710:	ldrb	r1, [r7, r0]
   15714:	ldrb	r1, [r6, r1]
   15718:	ldrb	r1, [r5, r1]
   1571c:	cmp	r1, #0
   15720:	bne	15734 <__mempcpy_chk@plt+0x4154>
   15724:	add	r0, r0, #1
   15728:	str	r0, [fp, #-32]	; 0xffffffe0
   1572c:	cmp	r0, r4
   15730:	blt	15710 <__mempcpy_chk@plt+0x4130>
   15734:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15738:	cmp	r1, r4
   1573c:	beq	15888 <__mempcpy_chk@plt+0x42a8>
   15740:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15744:	mov	r0, r9
   15748:	ldr	r2, [fp, #24]
   1574c:	bl	1bdc0 <__mempcpy_chk@plt+0xa7e0>
   15750:	cmp	r0, #0
   15754:	bne	15af8 <__mempcpy_chk@plt+0x4518>
   15758:	ldr	r0, [sp, #36]	; 0x24
   1575c:	cmp	r0, #1
   15760:	add	r9, sp, #56	; 0x38
   15764:	ldrne	r0, [sp, #84]	; 0x54
   15768:	cmpne	r0, #0
   1576c:	bne	15874 <__mempcpy_chk@plt+0x4294>
   15770:	mov	r0, #0
   15774:	str	r0, [sp, #164]	; 0xa4
   15778:	str	r0, [sp, #176]	; 0xb0
   1577c:	str	r0, [sp, #160]	; 0xa0
   15780:	mov	r0, r9
   15784:	ldr	r1, [sp, #32]
   15788:	ldr	r2, [sp, #24]
   1578c:	bl	1c3f8 <__mempcpy_chk@plt+0xae18>
   15790:	cmn	r0, #1
   15794:	beq	15840 <__mempcpy_chk@plt+0x4260>
   15798:	mov	r2, r0
   1579c:	cmn	r0, #2
   157a0:	beq	15b00 <__mempcpy_chk@plt+0x4520>
   157a4:	str	r2, [sp, #148]	; 0x94
   157a8:	ldr	r9, [sp, #48]	; 0x30
   157ac:	cmp	r9, #2
   157b0:	bcc	157c4 <__mempcpy_chk@plt+0x41e4>
   157b4:	ldr	r0, [sp, #28]
   157b8:	ldrb	r0, [r0, #28]
   157bc:	ands	r0, r0, #16
   157c0:	beq	157d4 <__mempcpy_chk@plt+0x41f4>
   157c4:	ldr	r0, [sp, #44]	; 0x2c
   157c8:	ldr	r0, [r0, #76]	; 0x4c
   157cc:	cmp	r0, #0
   157d0:	beq	157e8 <__mempcpy_chk@plt+0x4208>
   157d4:	ldr	r0, [sp, #156]	; 0x9c
   157d8:	ldr	r1, [r0, r2, lsl #2]
   157dc:	add	r0, sp, #56	; 0x38
   157e0:	bl	1c794 <__mempcpy_chk@plt+0xb1b4>
   157e4:	str	r0, [sp, #152]	; 0x98
   157e8:	cmp	r9, #2
   157ec:	bcc	15810 <__mempcpy_chk@plt+0x4230>
   157f0:	ldr	r0, [sp, #28]
   157f4:	ldrb	r0, [r0, #28]
   157f8:	ands	r0, r0, #16
   157fc:	bne	15810 <__mempcpy_chk@plt+0x4230>
   15800:	ldr	r0, [sp, #44]	; 0x2c
   15804:	ldrb	r0, [r0, #88]	; 0x58
   15808:	tst	r0, #1
   1580c:	bne	15820 <__mempcpy_chk@plt+0x4240>
   15810:	ldr	r0, [sp, #44]	; 0x2c
   15814:	ldr	r0, [r0, #76]	; 0x4c
   15818:	cmp	r0, #0
   1581c:	beq	158dc <__mempcpy_chk@plt+0x42fc>
   15820:	add	r0, sp, #56	; 0x38
   15824:	bl	1c808 <__mempcpy_chk@plt+0xb228>
   15828:	cmp	r0, #0
   1582c:	beq	158dc <__mempcpy_chk@plt+0x42fc>
   15830:	mov	r8, r0
   15834:	cmp	r0, #1
   15838:	add	r9, sp, #56	; 0x38
   1583c:	bne	158ac <__mempcpy_chk@plt+0x42cc>
   15840:	mov	r0, r9
   15844:	bl	1ca2c <__mempcpy_chk@plt+0xb44c>
   15848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1584c:	ldr	r3, [sp, #20]
   15850:	add	r0, r0, r3
   15854:	str	r0, [fp, #-32]	; 0xffffffe0
   15858:	cmp	r0, sl
   1585c:	blt	158a8 <__mempcpy_chk@plt+0x42c8>
   15860:	cmp	r4, r0
   15864:	ldr	r2, [sp, #52]	; 0x34
   15868:	ldr	lr, [sp, #16]
   1586c:	bge	155e0 <__mempcpy_chk@plt+0x4000>
   15870:	b	158a8 <__mempcpy_chk@plt+0x42c8>
   15874:	ldr	r0, [sp, #64]	; 0x40
   15878:	ldr	r0, [r0]
   1587c:	cmn	r0, #1
   15880:	bne	15770 <__mempcpy_chk@plt+0x4190>
   15884:	b	15848 <__mempcpy_chk@plt+0x4268>
   15888:	mov	r0, #0
   1588c:	cmp	r1, r2
   15890:	ldrblt	r0, [r7, r1]
   15894:	cmp	r6, #0
   15898:	ldrbne	r0, [r6, r0]
   1589c:	ldrb	r0, [r5, r0]
   158a0:	cmp	r0, #0
   158a4:	bne	15740 <__mempcpy_chk@plt+0x4160>
   158a8:	mov	r8, #1
   158ac:	ldr	sl, [sp, #44]	; 0x2c
   158b0:	ldr	r0, [sp, #156]	; 0x9c
   158b4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   158b8:	ldr	r0, [sl, #76]	; 0x4c
   158bc:	cmp	r0, #0
   158c0:	addne	r0, sp, #56	; 0x38
   158c4:	blne	1cd20 <__mempcpy_chk@plt+0xb740>
   158c8:	add	r0, sp, #56	; 0x38
   158cc:	bl	16330 <__mempcpy_chk@plt+0x4d50>
   158d0:	mov	r0, r8
   158d4:	sub	sp, fp, #28
   158d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158dc:	ldr	r5, [sp, #48]	; 0x30
   158e0:	cmp	r5, #0
   158e4:	beq	15ad4 <__mempcpy_chk@plt+0x44f4>
   158e8:	cmp	r5, #1
   158ec:	ldr	sl, [sp, #44]	; 0x2c
   158f0:	ldr	r4, [sp, #12]
   158f4:	ldr	r6, [fp, #16]
   158f8:	mov	r9, r6
   158fc:	ldr	r6, [fp, #20]
   15900:	beq	1591c <__mempcpy_chk@plt+0x433c>
   15904:	mvn	r0, r4
   15908:	add	r0, r0, r9
   1590c:	lsl	r2, r0, #3
   15910:	add	r0, r6, #8
   15914:	mov	r1, #255	; 0xff
   15918:	bl	114fc <memset@plt>
   1591c:	mov	r0, #0
   15920:	ldr	r1, [sp, #148]	; 0x94
   15924:	stm	r6, {r0, r1}
   15928:	cmp	r5, #2
   1592c:	ldr	r0, [sp, #28]
   15930:	bcc	1597c <__mempcpy_chk@plt+0x439c>
   15934:	ldrb	r1, [r0, #28]
   15938:	ands	r1, r1, #16
   1593c:	bne	1597c <__mempcpy_chk@plt+0x439c>
   15940:	ldrb	r1, [sl, #88]	; 0x58
   15944:	mov	r2, #0
   15948:	tst	r1, #1
   1594c:	beq	15960 <__mempcpy_chk@plt+0x4380>
   15950:	ldr	r1, [sl, #76]	; 0x4c
   15954:	mov	r2, #0
   15958:	cmp	r1, #0
   1595c:	movwgt	r2, #1
   15960:	str	r2, [sp]
   15964:	add	r1, sp, #56	; 0x38
   15968:	ldr	r2, [sp, #48]	; 0x30
   1596c:	mov	r3, r6
   15970:	bl	1cadc <__mempcpy_chk@plt+0xb4fc>
   15974:	cmp	r0, #0
   15978:	bne	15af0 <__mempcpy_chk@plt+0x4510>
   1597c:	add	r0, r6, #4
   15980:	add	r1, sp, #56	; 0x38
   15984:	add	lr, r1, #32
   15988:	ldrb	r2, [sp, #132]	; 0x84
   1598c:	mov	r3, r9
   15990:	ldr	r6, [sp, #48]	; 0x30
   15994:	b	159bc <__mempcpy_chk@plt+0x43dc>
   15998:	ldmda	r0, {r1, r7}
   1599c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   159a0:	add	r1, r1, r5
   159a4:	add	r7, r7, r5
   159a8:	stmda	r0, {r1, r7}
   159ac:	add	r0, r0, #8
   159b0:	sub	r3, r3, #1
   159b4:	cmp	r4, r3
   159b8:	beq	15a48 <__mempcpy_chk@plt+0x4468>
   159bc:	ldr	r7, [r0, #-4]
   159c0:	cmn	r7, #1
   159c4:	beq	159ac <__mempcpy_chk@plt+0x43cc>
   159c8:	cmp	r2, #0
   159cc:	beq	15998 <__mempcpy_chk@plt+0x43b8>
   159d0:	ldr	ip, [sp, #68]	; 0x44
   159d4:	ldr	r5, [sp, #84]	; 0x54
   159d8:	cmp	r7, r5
   159dc:	mov	r1, lr
   159e0:	addne	r1, ip, r7, lsl #2
   159e4:	ldr	r1, [r1]
   159e8:	str	r1, [r0, #-4]
   159ec:	ldr	r1, [r0]
   159f0:	cmp	r1, r5
   159f4:	mov	r4, lr
   159f8:	addne	r4, ip, r1, lsl #2
   159fc:	ldr	r1, [r4]
   15a00:	ldr	r4, [sp, #12]
   15a04:	str	r1, [r0]
   15a08:	b	15998 <__mempcpy_chk@plt+0x43b8>
   15a0c:	ldr	r1, [r3, #8]
   15a10:	cmp	r1, #0
   15a14:	beq	15a24 <__mempcpy_chk@plt+0x4444>
   15a18:	ldrsb	r1, [r4, #28]
   15a1c:	cmp	r1, #0
   15a20:	bmi	15430 <__mempcpy_chk@plt+0x3e50>
   15a24:	mov	r9, #0
   15a28:	ldr	r0, [sp, #36]	; 0x24
   15a2c:	cmp	r0, #0
   15a30:	beq	15ae4 <__mempcpy_chk@plt+0x4504>
   15a34:	cmp	ip, #0
   15a38:	mov	r0, #0
   15a3c:	str	r0, [sp, #36]	; 0x24
   15a40:	bne	158d0 <__mempcpy_chk@plt+0x42f0>
   15a44:	b	15434 <__mempcpy_chk@plt+0x3e54>
   15a48:	cmp	r4, #0
   15a4c:	ble	15a64 <__mempcpy_chk@plt+0x4484>
   15a50:	ldr	r0, [fp, #20]
   15a54:	add	r0, r0, r6, lsl #3
   15a58:	lsl	r2, r4, #3
   15a5c:	mov	r1, #255	; 0xff
   15a60:	bl	114fc <memset@plt>
   15a64:	ldr	r0, [sl, #132]	; 0x84
   15a68:	mov	r8, #0
   15a6c:	cmp	r0, #0
   15a70:	beq	158b0 <__mempcpy_chk@plt+0x42d0>
   15a74:	ldr	r1, [sp, #48]	; 0x30
   15a78:	cmp	r1, #2
   15a7c:	bcc	158b0 <__mempcpy_chk@plt+0x42d0>
   15a80:	mov	r6, r9
   15a84:	mvn	r1, r4
   15a88:	add	r1, r1, r9
   15a8c:	mov	r2, #0
   15a90:	ldr	r6, [fp, #20]
   15a94:	b	15aa4 <__mempcpy_chk@plt+0x44c4>
   15a98:	add	r2, r2, #1
   15a9c:	cmp	r1, r2
   15aa0:	beq	15adc <__mempcpy_chk@plt+0x44fc>
   15aa4:	ldr	r3, [r0, r2, lsl #2]
   15aa8:	cmp	r2, r3
   15aac:	beq	15a98 <__mempcpy_chk@plt+0x44b8>
   15ab0:	add	r7, r6, r2, lsl #3
   15ab4:	add	r3, r6, r3, lsl #3
   15ab8:	ldr	r3, [r3, #8]
   15abc:	str	r3, [r7, #8]
   15ac0:	ldr	r3, [r0, r2, lsl #2]
   15ac4:	add	r3, r6, r3, lsl #3
   15ac8:	ldr	r3, [r3, #12]
   15acc:	str	r3, [r7, #12]
   15ad0:	b	15a98 <__mempcpy_chk@plt+0x44b8>
   15ad4:	mov	r8, #0
   15ad8:	b	158ac <__mempcpy_chk@plt+0x42cc>
   15adc:	mov	r8, #0
   15ae0:	b	158b0 <__mempcpy_chk@plt+0x42d0>
   15ae4:	mov	r0, #0
   15ae8:	str	r0, [sp, #36]	; 0x24
   15aec:	b	15434 <__mempcpy_chk@plt+0x3e54>
   15af0:	mov	r8, r0
   15af4:	b	158b0 <__mempcpy_chk@plt+0x42d0>
   15af8:	mov	r8, r0
   15afc:	b	158ac <__mempcpy_chk@plt+0x42cc>
   15b00:	mov	r8, #12
   15b04:	b	158ac <__mempcpy_chk@plt+0x42cc>
   15b08:	push	{fp, lr}
   15b0c:	mov	fp, sp
   15b10:	sub	sp, sp, #16
   15b14:	mov	ip, #1
   15b18:	str	ip, [sp, #12]
   15b1c:	str	r2, [sp, #4]
   15b20:	mov	ip, #0
   15b24:	str	ip, [sp]
   15b28:	ldr	ip, [fp, #8]
   15b2c:	str	ip, [sp, #8]
   15b30:	bl	15b3c <__mempcpy_chk@plt+0x455c>
   15b34:	mov	sp, fp
   15b38:	pop	{fp, pc}
   15b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b40:	add	fp, sp, #28
   15b44:	sub	sp, sp, #36	; 0x24
   15b48:	mvn	r7, #0
   15b4c:	cmp	r3, #0
   15b50:	bmi	15c94 <__mempcpy_chk@plt+0x46b4>
   15b54:	mov	r9, r3
   15b58:	mov	r6, r2
   15b5c:	cmp	r3, r2
   15b60:	bgt	15c94 <__mempcpy_chk@plt+0x46b4>
   15b64:	mov	r5, r0
   15b68:	str	r1, [sp, #28]
   15b6c:	ldr	r0, [fp, #8]
   15b70:	add	r0, r0, r9
   15b74:	ldr	r4, [r5]
   15b78:	cmp	r0, r6
   15b7c:	mov	r8, r6
   15b80:	bicle	r8, r0, r0, asr #31
   15b84:	movw	r0, #0
   15b88:	movt	r0, #0
   15b8c:	movw	r1, #0
   15b90:	movt	r1, #0
   15b94:	orrs	r0, r1, r0
   15b98:	str	r0, [sp, #32]
   15b9c:	beq	15ba8 <__mempcpy_chk@plt+0x45c8>
   15ba0:	add	r0, r4, #136	; 0x88
   15ba4:	bl	11334 <pthread_mutex_lock@plt>
   15ba8:	str	r4, [sp, #20]
   15bac:	ldr	r4, [fp, #16]
   15bb0:	ldrb	r0, [r5, #28]
   15bb4:	ubfx	r1, r0, #5, #2
   15bb8:	str	r1, [sp, #24]
   15bbc:	cmp	r8, r9
   15bc0:	ble	15bdc <__mempcpy_chk@plt+0x45fc>
   15bc4:	tst	r0, #8
   15bc8:	bne	15bdc <__mempcpy_chk@plt+0x45fc>
   15bcc:	ldr	r0, [r5, #16]
   15bd0:	cmp	r0, #0
   15bd4:	movne	r0, r5
   15bd8:	blne	14ae4 <__mempcpy_chk@plt+0x3504>
   15bdc:	mov	r7, #1
   15be0:	mov	sl, #0
   15be4:	cmp	r4, #0
   15be8:	beq	15c20 <__mempcpy_chk@plt+0x4640>
   15bec:	ldrb	r0, [r5, #28]
   15bf0:	ands	r1, r0, #16
   15bf4:	bne	15c20 <__mempcpy_chk@plt+0x4640>
   15bf8:	and	r0, r0, #6
   15bfc:	cmp	r0, #4
   15c00:	bne	15c14 <__mempcpy_chk@plt+0x4634>
   15c04:	ldr	r7, [r4]
   15c08:	ldr	r0, [r5, #24]
   15c0c:	cmp	r7, r0
   15c10:	bls	15d08 <__mempcpy_chk@plt+0x4728>
   15c14:	ldr	r0, [r5, #24]
   15c18:	add	r7, r0, #1
   15c1c:	mov	sl, r4
   15c20:	lsl	r0, r7, #3
   15c24:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   15c28:	cmp	r0, #0
   15c2c:	beq	15d00 <__mempcpy_chk@plt+0x4720>
   15c30:	mov	r4, r0
   15c34:	ldr	r0, [fp, #12]
   15c38:	str	r8, [sp]
   15c3c:	stmib	sp, {r0, r7}
   15c40:	str	r4, [sp, #12]
   15c44:	ldr	r0, [sp, #24]
   15c48:	str	r0, [sp, #16]
   15c4c:	mov	r0, r5
   15c50:	ldr	r1, [sp, #28]
   15c54:	mov	r2, r6
   15c58:	mov	r3, r9
   15c5c:	bl	15360 <__mempcpy_chk@plt+0x3d80>
   15c60:	cmp	r0, #0
   15c64:	beq	15ca0 <__mempcpy_chk@plt+0x46c0>
   15c68:	mvn	r7, #1
   15c6c:	cmp	r0, #1
   15c70:	mvneq	r7, #0
   15c74:	mov	r0, r4
   15c78:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15c7c:	ldr	r0, [sp, #32]
   15c80:	cmp	r0, #0
   15c84:	beq	15c94 <__mempcpy_chk@plt+0x46b4>
   15c88:	ldr	r0, [sp, #20]
   15c8c:	add	r0, r0, #136	; 0x88
   15c90:	bl	1128c <pthread_mutex_unlock@plt>
   15c94:	mov	r0, r7
   15c98:	sub	sp, fp, #28
   15c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ca0:	cmp	sl, #0
   15ca4:	beq	15cd8 <__mempcpy_chk@plt+0x46f8>
   15ca8:	ldrb	r0, [r5, #28]
   15cac:	ubfx	r3, r0, #1, #2
   15cb0:	mov	r0, sl
   15cb4:	mov	r1, r4
   15cb8:	mov	r2, r7
   15cbc:	bl	1bb24 <__mempcpy_chk@plt+0xa544>
   15cc0:	ldrb	r1, [r5, #28]
   15cc4:	and	r1, r1, #249	; 0xf9
   15cc8:	bfi	r1, r0, #1, #2
   15ccc:	strb	r1, [r5, #28]
   15cd0:	tst	r0, #3
   15cd4:	beq	15cf8 <__mempcpy_chk@plt+0x4718>
   15cd8:	ldr	r0, [fp, #20]
   15cdc:	cmp	r0, #0
   15ce0:	beq	15cf0 <__mempcpy_chk@plt+0x4710>
   15ce4:	ldr	r0, [r4, #4]
   15ce8:	sub	r7, r0, r9
   15cec:	b	15c74 <__mempcpy_chk@plt+0x4694>
   15cf0:	ldr	r7, [r4]
   15cf4:	b	15c74 <__mempcpy_chk@plt+0x4694>
   15cf8:	mvn	r7, #1
   15cfc:	b	15c74 <__mempcpy_chk@plt+0x4694>
   15d00:	mvn	r7, #1
   15d04:	b	15c7c <__mempcpy_chk@plt+0x469c>
   15d08:	cmp	r7, #1
   15d0c:	bge	15c1c <__mempcpy_chk@plt+0x463c>
   15d10:	mov	r7, #1
   15d14:	mov	sl, #0
   15d18:	b	15c20 <__mempcpy_chk@plt+0x4640>
   15d1c:	push	{fp, lr}
   15d20:	mov	fp, sp
   15d24:	sub	sp, sp, #16
   15d28:	mov	ip, #0
   15d2c:	str	ip, [sp, #12]
   15d30:	str	r2, [sp, #4]
   15d34:	ldr	ip, [fp, #12]
   15d38:	str	ip, [sp, #8]
   15d3c:	ldr	ip, [fp, #8]
   15d40:	str	ip, [sp]
   15d44:	bl	15b3c <__mempcpy_chk@plt+0x455c>
   15d48:	mov	sp, fp
   15d4c:	pop	{fp, pc}
   15d50:	push	{fp, lr}
   15d54:	mov	fp, sp
   15d58:	sub	sp, sp, #24
   15d5c:	mov	ip, #1
   15d60:	str	ip, [sp, #20]
   15d64:	mov	ip, #0
   15d68:	str	ip, [sp, #8]
   15d6c:	ldr	ip, [fp, #20]
   15d70:	str	ip, [sp, #16]
   15d74:	ldr	ip, [fp, #16]
   15d78:	str	ip, [sp, #12]
   15d7c:	ldr	ip, [fp, #12]
   15d80:	str	ip, [sp, #4]
   15d84:	ldr	ip, [fp, #8]
   15d88:	str	ip, [sp]
   15d8c:	bl	15d98 <__mempcpy_chk@plt+0x47b8>
   15d90:	mov	sp, fp
   15d94:	pop	{fp, pc}
   15d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d9c:	add	fp, sp, #28
   15da0:	sub	sp, sp, #20
   15da4:	mov	r6, r2
   15da8:	mov	r8, r1
   15dac:	mov	r1, r0
   15db0:	ldr	r4, [fp, #8]
   15db4:	orr	r0, r4, r2
   15db8:	ldr	r2, [fp, #24]
   15dbc:	orrs	r0, r0, r2
   15dc0:	bmi	15e74 <__mempcpy_chk@plt+0x4894>
   15dc4:	adds	sl, r6, r4
   15dc8:	bvs	15e74 <__mempcpy_chk@plt+0x4894>
   15dcc:	mov	r5, #0
   15dd0:	cmp	r4, #1
   15dd4:	blt	15e28 <__mempcpy_chk@plt+0x4848>
   15dd8:	mov	r9, r3
   15ddc:	cmp	r6, #1
   15de0:	blt	15e30 <__mempcpy_chk@plt+0x4850>
   15de4:	mov	r0, sl
   15de8:	mov	r5, r1
   15dec:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   15df0:	cmp	r0, #0
   15df4:	beq	15e74 <__mempcpy_chk@plt+0x4894>
   15df8:	mov	r7, r0
   15dfc:	mov	r1, r8
   15e00:	mov	r2, r6
   15e04:	bl	1134c <memcpy@plt>
   15e08:	add	r0, r7, r6
   15e0c:	mov	r1, r9
   15e10:	mov	r2, r4
   15e14:	bl	1134c <memcpy@plt>
   15e18:	ldr	r2, [fp, #24]
   15e1c:	mov	r1, r5
   15e20:	mov	r5, r7
   15e24:	b	15e34 <__mempcpy_chk@plt+0x4854>
   15e28:	mov	r7, r8
   15e2c:	b	15e34 <__mempcpy_chk@plt+0x4854>
   15e30:	mov	r7, r9
   15e34:	ldr	r0, [fp, #28]
   15e38:	add	r6, fp, #12
   15e3c:	ldm	r6, {r3, r4, r6}
   15e40:	str	r4, [sp]
   15e44:	stmib	sp, {r2, r6}
   15e48:	str	r0, [sp, #12]
   15e4c:	mov	r0, r1
   15e50:	mov	r1, r7
   15e54:	mov	r2, sl
   15e58:	bl	15b3c <__mempcpy_chk@plt+0x455c>
   15e5c:	mov	r4, r0
   15e60:	mov	r0, r5
   15e64:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15e68:	mov	r0, r4
   15e6c:	sub	sp, fp, #28
   15e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e74:	mvn	r0, #1
   15e78:	sub	sp, fp, #28
   15e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e80:	push	{fp, lr}
   15e84:	mov	fp, sp
   15e88:	sub	sp, sp, #24
   15e8c:	mov	ip, #0
   15e90:	str	ip, [sp, #20]
   15e94:	ldr	ip, [fp, #24]
   15e98:	str	ip, [sp, #16]
   15e9c:	ldr	ip, [fp, #20]
   15ea0:	str	ip, [sp, #12]
   15ea4:	ldr	ip, [fp, #16]
   15ea8:	str	ip, [sp, #8]
   15eac:	ldr	ip, [fp, #12]
   15eb0:	str	ip, [sp, #4]
   15eb4:	ldr	ip, [fp, #8]
   15eb8:	str	ip, [sp]
   15ebc:	bl	15d98 <__mempcpy_chk@plt+0x47b8>
   15ec0:	mov	sp, fp
   15ec4:	pop	{fp, pc}
   15ec8:	push	{fp, lr}
   15ecc:	mov	fp, sp
   15ed0:	ldrb	ip, [r0, #28]
   15ed4:	bic	ip, ip, #6
   15ed8:	cmp	r2, #0
   15edc:	beq	15ef4 <__mempcpy_chk@plt+0x4914>
   15ee0:	ldr	lr, [fp, #8]
   15ee4:	orr	ip, ip, #2
   15ee8:	strb	ip, [r0, #28]
   15eec:	stm	r1, {r2, r3, lr}
   15ef0:	pop	{fp, pc}
   15ef4:	strb	ip, [r0, #28]
   15ef8:	mov	r0, #0
   15efc:	str	r0, [r1]
   15f00:	str	r0, [r1, #4]
   15f04:	str	r0, [r1, #8]
   15f08:	pop	{fp, pc}
   15f0c:	ldr	r1, [r0, #4]
   15f10:	movw	r2, #255	; 0xff
   15f14:	movt	r2, #4
   15f18:	and	r1, r1, r2
   15f1c:	cmp	r1, #6
   15f20:	bne	15f2c <__mempcpy_chk@plt+0x494c>
   15f24:	ldr	r0, [r0]
   15f28:	b	15f9c <__mempcpy_chk@plt+0x49bc>
   15f2c:	cmp	r1, #3
   15f30:	bxne	lr
   15f34:	ldr	r0, [r0]
   15f38:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   15f3c:	push	{r4, sl, fp, lr}
   15f40:	add	fp, sp, #8
   15f44:	mov	r4, r0
   15f48:	ldr	r0, [r0, #24]
   15f4c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15f50:	ldr	r0, [r4, #36]	; 0x24
   15f54:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15f58:	ldr	r0, [r4, #40]	; 0x28
   15f5c:	add	r1, r4, #4
   15f60:	cmp	r0, r1
   15f64:	beq	15f78 <__mempcpy_chk@plt+0x4998>
   15f68:	ldr	r0, [r0, #8]
   15f6c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15f70:	ldr	r0, [r4, #40]	; 0x28
   15f74:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15f78:	ldr	r0, [r4, #12]
   15f7c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15f80:	ldr	r0, [r4, #48]	; 0x30
   15f84:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15f88:	ldr	r0, [r4, #44]	; 0x2c
   15f8c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15f90:	mov	r0, r4
   15f94:	pop	{r4, sl, fp, lr}
   15f98:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   15f9c:	push	{r4, sl, fp, lr}
   15fa0:	add	fp, sp, #8
   15fa4:	mov	r4, r0
   15fa8:	ldr	r0, [r0]
   15fac:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15fb0:	ldr	r0, [r4, #4]
   15fb4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15fb8:	ldr	r0, [r4, #8]
   15fbc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15fc0:	ldr	r0, [r4, #12]
   15fc4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   15fc8:	mov	r0, r4
   15fcc:	pop	{r4, sl, fp, lr}
   15fd0:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   15fd4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15fd8:	add	fp, sp, #24
   15fdc:	mov	r5, r1
   15fe0:	mov	r9, r0
   15fe4:	mov	r1, #0
   15fe8:	mov	r2, #160	; 0xa0
   15fec:	bl	114fc <memset@plt>
   15ff0:	mov	r0, #31
   15ff4:	str	r0, [r9, #64]	; 0x40
   15ff8:	movw	r0, #43689	; 0xaaa9
   15ffc:	movt	r0, #2730	; 0xaaa
   16000:	cmp	r5, r0
   16004:	bhi	16188 <__mempcpy_chk@plt+0x4ba8>
   16008:	add	r0, r5, #1
   1600c:	str	r0, [r9, #4]
   16010:	lsl	r0, r0, #3
   16014:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   16018:	str	r0, [r9]
   1601c:	mov	r0, #1
   16020:	mov	r6, r0
   16024:	lsl	r0, r0, #1
   16028:	cmp	r6, r5
   1602c:	bls	16020 <__mempcpy_chk@plt+0x4a40>
   16030:	mov	r0, #12
   16034:	mov	r1, r6
   16038:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1603c:	sub	r1, r6, #1
   16040:	str	r1, [r9, #68]	; 0x44
   16044:	str	r0, [r9, #32]
   16048:	bl	1140c <__ctype_get_mb_cur_max@plt>
   1604c:	str	r0, [r9, #92]	; 0x5c
   16050:	mov	r0, #14
   16054:	bl	11580 <nl_langinfo@plt>
   16058:	ldrb	r1, [r0]
   1605c:	orr	r1, r1, #32
   16060:	cmp	r1, #117	; 0x75
   16064:	bne	160b4 <__mempcpy_chk@plt+0x4ad4>
   16068:	ldrb	r1, [r0, #1]
   1606c:	orr	r1, r1, #32
   16070:	cmp	r1, #116	; 0x74
   16074:	bne	160b4 <__mempcpy_chk@plt+0x4ad4>
   16078:	ldrb	r1, [r0, #2]
   1607c:	orr	r1, r1, #32
   16080:	cmp	r1, #102	; 0x66
   16084:	bne	160b4 <__mempcpy_chk@plt+0x4ad4>
   16088:	ldrb	r1, [r0, #3]!
   1608c:	cmp	r1, #45	; 0x2d
   16090:	addeq	r0, r0, #1
   16094:	movw	r1, #13748	; 0x35b4
   16098:	movt	r1, #2
   1609c:	bl	112ec <strcmp@plt>
   160a0:	cmp	r0, #0
   160a4:	bne	160b4 <__mempcpy_chk@plt+0x4ad4>
   160a8:	ldrb	r0, [r9, #88]	; 0x58
   160ac:	orr	r0, r0, #4
   160b0:	strb	r0, [r9, #88]	; 0x58
   160b4:	ldrb	r0, [r9, #88]	; 0x58
   160b8:	and	r1, r0, #247	; 0xf7
   160bc:	strb	r1, [r9, #88]	; 0x58
   160c0:	ldr	r1, [r9, #92]	; 0x5c
   160c4:	cmp	r1, #2
   160c8:	blt	1616c <__mempcpy_chk@plt+0x4b8c>
   160cc:	tst	r0, #4
   160d0:	bne	16160 <__mempcpy_chk@plt+0x4b80>
   160d4:	mov	r8, #1
   160d8:	mov	r0, #32
   160dc:	mov	r1, #1
   160e0:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   160e4:	str	r0, [r9, #60]	; 0x3c
   160e8:	cmp	r0, #0
   160ec:	beq	16188 <__mempcpy_chk@plt+0x4ba8>
   160f0:	mov	r7, #0
   160f4:	mov	r6, #0
   160f8:	b	1610c <__mempcpy_chk@plt+0x4b2c>
   160fc:	add	r7, r7, r4
   16100:	add	r6, r6, #1
   16104:	cmp	r6, #8
   16108:	beq	1616c <__mempcpy_chk@plt+0x4b8c>
   1610c:	mov	r4, #0
   16110:	b	16120 <__mempcpy_chk@plt+0x4b40>
   16114:	add	r4, r4, #1
   16118:	cmp	r4, #32
   1611c:	beq	160fc <__mempcpy_chk@plt+0x4b1c>
   16120:	add	r5, r7, r4
   16124:	mov	r0, r5
   16128:	bl	11508 <btowc@plt>
   1612c:	cmn	r0, #1
   16130:	beq	16144 <__mempcpy_chk@plt+0x4b64>
   16134:	ldr	r1, [r9, #60]	; 0x3c
   16138:	ldr	r2, [r1, r6, lsl #2]
   1613c:	orr	r2, r2, r8, lsl r4
   16140:	str	r2, [r1, r6, lsl #2]
   16144:	cmp	r5, #127	; 0x7f
   16148:	bhi	16114 <__mempcpy_chk@plt+0x4b34>
   1614c:	cmp	r5, r0
   16150:	ldrbne	r0, [r9, #88]	; 0x58
   16154:	orrne	r0, r0, #8
   16158:	strbne	r0, [r9, #88]	; 0x58
   1615c:	b	16114 <__mempcpy_chk@plt+0x4b34>
   16160:	movw	r0, #13700	; 0x3584
   16164:	movt	r0, #2
   16168:	str	r0, [r9, #60]	; 0x3c
   1616c:	ldr	r0, [r9]
   16170:	cmp	r0, #0
   16174:	ldrne	r1, [r9, #32]
   16178:	movne	r0, #0
   1617c:	cmpne	r1, #0
   16180:	moveq	r0, #12
   16184:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16188:	mov	r0, #12
   1618c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16190:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16194:	add	fp, sp, #24
   16198:	sub	sp, sp, #8
   1619c:	mov	r8, r3
   161a0:	mov	r5, r2
   161a4:	mov	r7, r1
   161a8:	mov	r4, r0
   161ac:	vmov.i32	q8, #0	; 0x00000000
   161b0:	mov	r0, #80	; 0x50
   161b4:	mov	r1, r4
   161b8:	vst1.32	{d16-d17}, [r1], r0
   161bc:	mov	r0, #0
   161c0:	str	r0, [r1]
   161c4:	add	r0, r4, #64	; 0x40
   161c8:	vst1.32	{d16-d17}, [r0]
   161cc:	add	r0, r4, #48	; 0x30
   161d0:	vst1.32	{d16-d17}, [r0]
   161d4:	add	r0, r4, #32
   161d8:	vst1.32	{d16-d17}, [r0]
   161dc:	add	r0, r4, #16
   161e0:	vst1.32	{d16-d17}, [r0]
   161e4:	ldr	r6, [fp, #12]
   161e8:	str	r6, [sp, #4]
   161ec:	ldr	r9, [fp, #8]
   161f0:	str	r9, [sp]
   161f4:	mov	r0, r7
   161f8:	mov	r1, r2
   161fc:	mov	r2, r4
   16200:	bl	169e8 <__mempcpy_chk@plt+0x5408>
   16204:	cmp	r5, #1
   16208:	blt	16220 <__mempcpy_chk@plt+0x4c40>
   1620c:	add	r1, r5, #1
   16210:	mov	r0, r4
   16214:	bl	16a40 <__mempcpy_chk@plt+0x5460>
   16218:	cmp	r0, #0
   1621c:	bne	162d8 <__mempcpy_chk@plt+0x4cf8>
   16220:	ldrb	r0, [r4, #75]	; 0x4b
   16224:	cmp	r0, #0
   16228:	ldrne	r7, [r4, #4]
   1622c:	str	r7, [r4, #4]
   16230:	ldr	r0, [r6, #92]	; 0x5c
   16234:	cmp	r9, #0
   16238:	beq	16294 <__mempcpy_chk@plt+0x4cb4>
   1623c:	cmp	r0, #2
   16240:	blt	162a8 <__mempcpy_chk@plt+0x4cc8>
   16244:	mov	r0, r4
   16248:	bl	16ae4 <__mempcpy_chk@plt+0x5504>
   1624c:	cmp	r0, #0
   16250:	bne	162d8 <__mempcpy_chk@plt+0x4cf8>
   16254:	ldr	r1, [r4, #32]
   16258:	mov	r0, #0
   1625c:	cmp	r1, r5
   16260:	bge	162d8 <__mempcpy_chk@plt+0x4cf8>
   16264:	ldr	r2, [r4, #28]
   16268:	ldr	r1, [r4, #36]	; 0x24
   1626c:	ldr	r3, [r6, #92]	; 0x5c
   16270:	add	r2, r3, r2
   16274:	cmp	r1, r2
   16278:	bgt	162d8 <__mempcpy_chk@plt+0x4cf8>
   1627c:	lsl	r1, r1, #1
   16280:	mov	r0, r4
   16284:	bl	16a40 <__mempcpy_chk@plt+0x5460>
   16288:	cmp	r0, #0
   1628c:	beq	16244 <__mempcpy_chk@plt+0x4c64>
   16290:	b	162d8 <__mempcpy_chk@plt+0x4cf8>
   16294:	cmp	r0, #2
   16298:	blt	162b4 <__mempcpy_chk@plt+0x4cd4>
   1629c:	mov	r0, r4
   162a0:	bl	170f4 <__mempcpy_chk@plt+0x5b14>
   162a4:	b	162d4 <__mempcpy_chk@plt+0x4cf4>
   162a8:	mov	r0, r4
   162ac:	bl	17080 <__mempcpy_chk@plt+0x5aa0>
   162b0:	b	162d4 <__mempcpy_chk@plt+0x4cf4>
   162b4:	cmp	r8, #0
   162b8:	beq	162c8 <__mempcpy_chk@plt+0x4ce8>
   162bc:	mov	r0, r4
   162c0:	bl	172b0 <__mempcpy_chk@plt+0x5cd0>
   162c4:	b	162d4 <__mempcpy_chk@plt+0x4cf4>
   162c8:	ldr	r0, [r4, #36]	; 0x24
   162cc:	str	r0, [r4, #28]
   162d0:	str	r0, [r4, #32]
   162d4:	mov	r0, #0
   162d8:	sub	sp, fp, #24
   162dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   162e0:	push	{r4, r5, fp, lr}
   162e4:	add	fp, sp, #8
   162e8:	ldr	r4, [r0]
   162ec:	ldr	r0, [r4, #56]	; 0x38
   162f0:	cmp	r0, #0
   162f4:	beq	1630c <__mempcpy_chk@plt+0x4d2c>
   162f8:	ldr	r5, [r0]
   162fc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   16300:	cmp	r5, #0
   16304:	mov	r0, r5
   16308:	bne	162f8 <__mempcpy_chk@plt+0x4d18>
   1630c:	mov	r0, #31
   16310:	str	r0, [r4, #64]	; 0x40
   16314:	mov	r5, #0
   16318:	str	r5, [r4, #52]	; 0x34
   1631c:	str	r5, [r4, #56]	; 0x38
   16320:	ldr	r0, [r4, #16]
   16324:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   16328:	str	r5, [r4, #16]
   1632c:	pop	{r4, r5, fp, pc}
   16330:	push	{r4, sl, fp, lr}
   16334:	add	fp, sp, #8
   16338:	mov	r4, r0
   1633c:	ldr	r0, [r0, #8]
   16340:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   16344:	ldr	r0, [r4, #12]
   16348:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1634c:	ldrb	r0, [r4, #75]	; 0x4b
   16350:	cmp	r0, #0
   16354:	popeq	{r4, sl, fp, pc}
   16358:	ldr	r0, [r4, #4]
   1635c:	pop	{r4, sl, fp, lr}
   16360:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   16364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16368:	add	fp, sp, #28
   1636c:	sub	sp, sp, #20
   16370:	mov	r8, r3
   16374:	mov	r4, r2
   16378:	mov	r7, r1
   1637c:	mov	r5, r0
   16380:	ldr	r9, [r1]
   16384:	str	r2, [r9, #128]	; 0x80
   16388:	orr	r2, r2, #8388608	; 0x800000
   1638c:	add	sl, sp, #12
   16390:	mov	r0, sl
   16394:	mov	r1, r5
   16398:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   1639c:	mov	r6, #0
   163a0:	stm	sp, {r6, r8}
   163a4:	mov	r0, r5
   163a8:	mov	r1, r7
   163ac:	mov	r2, sl
   163b0:	mov	r3, r4
   163b4:	bl	17328 <__mempcpy_chk@plt+0x5d48>
   163b8:	mov	r7, r0
   163bc:	cmp	r0, #0
   163c0:	bne	163d0 <__mempcpy_chk@plt+0x4df0>
   163c4:	ldr	r0, [r8]
   163c8:	cmp	r0, #0
   163cc:	bne	1641c <__mempcpy_chk@plt+0x4e3c>
   163d0:	mov	r0, r9
   163d4:	mov	r1, #0
   163d8:	mov	r2, #0
   163dc:	mov	r3, #2
   163e0:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   163e4:	mov	r4, r0
   163e8:	cmp	r7, #0
   163ec:	beq	1640c <__mempcpy_chk@plt+0x4e2c>
   163f0:	mov	r0, r9
   163f4:	mov	r1, r7
   163f8:	mov	r2, r4
   163fc:	mov	r3, #16
   16400:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   16404:	mov	r6, r0
   16408:	b	16410 <__mempcpy_chk@plt+0x4e30>
   1640c:	mov	r6, r4
   16410:	cmp	r4, #0
   16414:	cmpne	r6, #0
   16418:	beq	16428 <__mempcpy_chk@plt+0x4e48>
   1641c:	mov	r0, r6
   16420:	sub	sp, fp, #28
   16424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16428:	mov	r0, #12
   1642c:	str	r0, [r8]
   16430:	mov	r6, #0
   16434:	b	1641c <__mempcpy_chk@plt+0x4e3c>
   16438:	push	{r4, r5, r6, r7, fp, lr}
   1643c:	add	fp, sp, #16
   16440:	mov	r6, r0
   16444:	ldr	r4, [r0]
   16448:	ldr	r0, [r4, #4]
   1644c:	lsl	r0, r0, #2
   16450:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   16454:	str	r0, [r4, #12]
   16458:	ldr	r0, [r4, #4]
   1645c:	lsl	r0, r0, #2
   16460:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   16464:	str	r0, [r4, #16]
   16468:	ldr	r0, [r4, #4]
   1646c:	add	r0, r0, r0, lsl #1
   16470:	lsl	r0, r0, #2
   16474:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   16478:	str	r0, [r4, #20]
   1647c:	ldr	r0, [r4, #4]
   16480:	add	r0, r0, r0, lsl #1
   16484:	lsl	r0, r0, #2
   16488:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1648c:	str	r0, [r4, #24]
   16490:	ldr	r1, [r4, #12]
   16494:	mov	r7, #12
   16498:	cmp	r1, #0
   1649c:	ldrne	r1, [r4, #16]
   164a0:	cmpne	r1, #0
   164a4:	beq	164b8 <__mempcpy_chk@plt+0x4ed8>
   164a8:	cmp	r0, #0
   164ac:	ldrne	r0, [r4, #20]
   164b0:	cmpne	r0, #0
   164b4:	bne	164c0 <__mempcpy_chk@plt+0x4ee0>
   164b8:	mov	r0, r7
   164bc:	pop	{r4, r5, r6, r7, fp, pc}
   164c0:	ldr	r0, [r6, #24]
   164c4:	lsl	r0, r0, #2
   164c8:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   164cc:	str	r0, [r4, #132]	; 0x84
   164d0:	cmp	r0, #0
   164d4:	beq	16578 <__mempcpy_chk@plt+0x4f98>
   164d8:	ldr	r0, [r6, #24]
   164dc:	cmp	r0, #0
   164e0:	beq	16500 <__mempcpy_chk@plt+0x4f20>
   164e4:	ldr	r0, [r4, #132]	; 0x84
   164e8:	mov	r1, #0
   164ec:	str	r1, [r0, r1, lsl #2]
   164f0:	add	r1, r1, #1
   164f4:	ldr	r2, [r6, #24]
   164f8:	cmp	r1, r2
   164fc:	bcc	164ec <__mempcpy_chk@plt+0x4f0c>
   16500:	ldr	r0, [r4, #52]	; 0x34
   16504:	movw	r1, #42024	; 0xa428
   16508:	movt	r1, #1
   1650c:	mov	r2, r4
   16510:	bl	1a3a8 <__mempcpy_chk@plt+0x8dc8>
   16514:	ldr	r1, [r6, #24]
   16518:	mov	r0, #0
   1651c:	cmp	r1, #0
   16520:	beq	1655c <__mempcpy_chk@plt+0x4f7c>
   16524:	ldr	r2, [r4, #132]	; 0x84
   16528:	ldr	r3, [r2]
   1652c:	cmp	r3, #0
   16530:	bne	16560 <__mempcpy_chk@plt+0x4f80>
   16534:	mov	r3, #1
   16538:	mov	r0, r3
   1653c:	ldr	r1, [r6, #24]
   16540:	cmp	r3, r1
   16544:	bcs	16560 <__mempcpy_chk@plt+0x4f80>
   16548:	ldr	r5, [r2, r0, lsl #2]
   1654c:	add	r3, r0, #1
   16550:	cmp	r0, r5
   16554:	beq	16538 <__mempcpy_chk@plt+0x4f58>
   16558:	b	16560 <__mempcpy_chk@plt+0x4f80>
   1655c:	mov	r1, #0
   16560:	cmp	r0, r1
   16564:	bne	16578 <__mempcpy_chk@plt+0x4f98>
   16568:	ldr	r0, [r4, #132]	; 0x84
   1656c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   16570:	mov	r0, #0
   16574:	str	r0, [r4, #132]	; 0x84
   16578:	ldr	r0, [r4, #52]	; 0x34
   1657c:	movw	r1, #42176	; 0xa4c0
   16580:	movt	r1, #1
   16584:	mov	r2, r6
   16588:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   1658c:	cmp	r0, #0
   16590:	bne	16650 <__mempcpy_chk@plt+0x5070>
   16594:	ldr	r0, [r4, #52]	; 0x34
   16598:	movw	r1, #42312	; 0xa548
   1659c:	movt	r1, #1
   165a0:	mov	r2, r4
   165a4:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   165a8:	cmp	r0, #0
   165ac:	bne	16650 <__mempcpy_chk@plt+0x5070>
   165b0:	ldr	r0, [r4, #52]	; 0x34
   165b4:	movw	r1, #42456	; 0xa5d8
   165b8:	movt	r1, #1
   165bc:	mov	r2, r4
   165c0:	bl	1a3a8 <__mempcpy_chk@plt+0x8dc8>
   165c4:	ldr	r0, [r4, #52]	; 0x34
   165c8:	movw	r1, #42556	; 0xa63c
   165cc:	movt	r1, #1
   165d0:	mov	r2, r4
   165d4:	bl	1a3a8 <__mempcpy_chk@plt+0x8dc8>
   165d8:	cmp	r0, #0
   165dc:	bne	16650 <__mempcpy_chk@plt+0x5070>
   165e0:	mov	r0, r4
   165e4:	bl	1a75c <__mempcpy_chk@plt+0x917c>
   165e8:	cmp	r0, #0
   165ec:	bne	16650 <__mempcpy_chk@plt+0x5070>
   165f0:	ldrb	r0, [r6, #28]
   165f4:	tst	r0, #16
   165f8:	bne	16614 <__mempcpy_chk@plt+0x5034>
   165fc:	ldr	r0, [r6, #24]
   16600:	cmp	r0, #0
   16604:	beq	16614 <__mempcpy_chk@plt+0x5034>
   16608:	ldrb	r0, [r4, #88]	; 0x58
   1660c:	tst	r0, #1
   16610:	bne	16620 <__mempcpy_chk@plt+0x5040>
   16614:	ldr	r0, [r4, #76]	; 0x4c
   16618:	cmp	r0, #0
   1661c:	beq	16648 <__mempcpy_chk@plt+0x5068>
   16620:	ldr	r0, [r4, #8]
   16624:	add	r0, r0, r0, lsl #1
   16628:	lsl	r0, r0, #2
   1662c:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   16630:	str	r0, [r4, #28]
   16634:	cmp	r0, #0
   16638:	beq	164b8 <__mempcpy_chk@plt+0x4ed8>
   1663c:	mov	r0, r4
   16640:	pop	{r4, r5, r6, r7, fp, lr}
   16644:	b	1a810 <__mempcpy_chk@plt+0x9230>
   16648:	mov	r7, #0
   1664c:	mov	r0, r7
   16650:	pop	{r4, r5, r6, r7, fp, pc}
   16654:	push	{r4, r5, r6, r7, fp, lr}
   16658:	add	fp, sp, #16
   1665c:	ldr	r1, [r0, #8]
   16660:	cmp	r1, #0
   16664:	beq	16684 <__mempcpy_chk@plt+0x50a4>
   16668:	ldr	r3, [r0]
   1666c:	mov	r5, #0
   16670:	mov	ip, #1
   16674:	mov	lr, #139	; 0x8b
   16678:	mov	r2, #0
   1667c:	mov	r4, #0
   16680:	b	166b4 <__mempcpy_chk@plt+0x50d4>
   16684:	mov	r2, #0
   16688:	mov	r5, #0
   1668c:	b	16750 <__mempcpy_chk@plt+0x5170>
   16690:	ldrsb	r1, [r1]
   16694:	cmp	r1, #0
   16698:	mov	r1, #0
   1669c:	movwmi	r1, #1
   166a0:	orr	r2, r2, r1
   166a4:	ldr	r1, [r0, #8]
   166a8:	add	r4, r4, #1
   166ac:	cmp	r4, r1
   166b0:	bcs	16750 <__mempcpy_chk@plt+0x5170>
   166b4:	add	r1, r3, r4, lsl #3
   166b8:	ldrb	r6, [r1, #4]
   166bc:	sub	r6, r6, #1
   166c0:	cmp	r6, #11
   166c4:	bhi	167f4 <__mempcpy_chk@plt+0x5214>
   166c8:	add	r7, pc, #0
   166cc:	ldr	pc, [r7, r6, lsl #2]
   166d0:	muleq	r1, r0, r6
   166d4:	andeq	r6, r1, r4, lsr #13
   166d8:	andeq	r6, r1, r0, lsl #14
   166dc:	andeq	r6, r1, r4, lsr #13
   166e0:	andeq	r6, r1, r8, asr #14
   166e4:	strdeq	r6, [r1], -r0
   166e8:	strdeq	r6, [r1], -r4
   166ec:	andeq	r6, r1, r4, lsr #13
   166f0:	andeq	r6, r1, r4, lsr #13
   166f4:	andeq	r6, r1, r4, lsr #13
   166f8:	andeq	r6, r1, r4, lsr #13
   166fc:	andeq	r6, r1, r8, lsr #14
   16700:	ldr	r1, [r3, r4, lsl #3]
   16704:	add	r1, r1, #16
   16708:	mov	r6, #0
   1670c:	ldr	r7, [r1, r6, lsl #2]
   16710:	cmp	r7, #0
   16714:	bne	167f0 <__mempcpy_chk@plt+0x5210>
   16718:	add	r6, r6, #1
   1671c:	cmp	r6, #4
   16720:	bne	1670c <__mempcpy_chk@plt+0x512c>
   16724:	b	166a4 <__mempcpy_chk@plt+0x50c4>
   16728:	ldr	r1, [r3, r4, lsl #3]
   1672c:	sub	r1, r1, #16
   16730:	ror	r1, r1, #4
   16734:	cmp	r1, #7
   16738:	bhi	167f0 <__mempcpy_chk@plt+0x5210>
   1673c:	tst	lr, ip, lsl r1
   16740:	bne	166a4 <__mempcpy_chk@plt+0x50c4>
   16744:	b	167f0 <__mempcpy_chk@plt+0x5210>
   16748:	mov	r5, #1
   1674c:	b	166a4 <__mempcpy_chk@plt+0x50c4>
   16750:	tst	r2, #1
   16754:	tsteq	r5, #1
   16758:	beq	167c0 <__mempcpy_chk@plt+0x51e0>
   1675c:	ldr	r1, [r0, #8]
   16760:	cmp	r1, #0
   16764:	beq	167c0 <__mempcpy_chk@plt+0x51e0>
   16768:	mov	r2, #0
   1676c:	mov	r3, #7
   16770:	b	1678c <__mempcpy_chk@plt+0x51ac>
   16774:	bfi	r1, r3, #0, #8
   16778:	str	r1, [r4, #4]
   1677c:	ldr	r1, [r0, #8]
   16780:	add	r2, r2, #1
   16784:	cmp	r2, r1
   16788:	bcs	167c0 <__mempcpy_chk@plt+0x51e0>
   1678c:	ldr	r1, [r0]
   16790:	add	r4, r1, r2, lsl #3
   16794:	ldr	r1, [r4, #4]
   16798:	uxtb	r6, r1
   1679c:	cmp	r6, #5
   167a0:	beq	16774 <__mempcpy_chk@plt+0x5194>
   167a4:	cmp	r6, #1
   167a8:	bne	1677c <__mempcpy_chk@plt+0x519c>
   167ac:	ldrsb	r7, [r4]
   167b0:	cmn	r7, #1
   167b4:	bgt	1677c <__mempcpy_chk@plt+0x519c>
   167b8:	bic	r1, r1, #2097152	; 0x200000
   167bc:	b	16778 <__mempcpy_chk@plt+0x5198>
   167c0:	mov	r1, #1
   167c4:	str	r1, [r0, #92]	; 0x5c
   167c8:	ldr	r1, [r0, #76]	; 0x4c
   167cc:	mov	r2, #0
   167d0:	cmp	r1, #0
   167d4:	movwgt	r2, #1
   167d8:	orr	r1, r5, r2
   167dc:	and	r1, r1, #1
   167e0:	ldrb	r2, [r0, #88]	; 0x58
   167e4:	and	r2, r2, #249	; 0xf9
   167e8:	orr	r1, r2, r1, lsl #1
   167ec:	strb	r1, [r0, #88]	; 0x58
   167f0:	pop	{r4, r5, r6, r7, fp, pc}
   167f4:	bl	115c8 <abort@plt>
   167f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   167fc:	add	fp, sp, #24
   16800:	sub	sp, sp, #16
   16804:	mov	r9, r0
   16808:	ldr	r0, [r0, #24]
   1680c:	ldr	r1, [r9, #52]	; 0x34
   16810:	ldr	r1, [r1, #12]
   16814:	ldr	r1, [r1, #28]
   16818:	str	r1, [r9, #72]	; 0x48
   1681c:	add	r1, r1, r1, lsl #1
   16820:	add	r1, r0, r1, lsl #2
   16824:	mov	r0, sp
   16828:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   1682c:	str	r0, [sp, #12]
   16830:	cmp	r0, #0
   16834:	bne	16918 <__mempcpy_chk@plt+0x5338>
   16838:	ldr	r0, [r9, #76]	; 0x4c
   1683c:	cmp	r0, #1
   16840:	blt	16920 <__mempcpy_chk@plt+0x5340>
   16844:	ldr	r0, [sp, #4]
   16848:	cmp	r0, #1
   1684c:	blt	16920 <__mempcpy_chk@plt+0x5340>
   16850:	mov	r7, #0
   16854:	mov	r8, sp
   16858:	b	1686c <__mempcpy_chk@plt+0x528c>
   1685c:	add	r7, r7, #1
   16860:	ldr	r0, [sp, #4]
   16864:	cmp	r7, r0
   16868:	bge	16920 <__mempcpy_chk@plt+0x5340>
   1686c:	ldr	r2, [sp, #8]
   16870:	ldr	r1, [r2, r7, lsl #2]
   16874:	ldr	r3, [r9]
   16878:	add	r6, r3, r1, lsl #3
   1687c:	ldrb	r6, [r6, #4]
   16880:	cmp	r6, #4
   16884:	bne	1685c <__mempcpy_chk@plt+0x527c>
   16888:	mov	r6, #0
   1688c:	cmp	r0, #1
   16890:	bge	168a4 <__mempcpy_chk@plt+0x52c4>
   16894:	b	168c8 <__mempcpy_chk@plt+0x52e8>
   16898:	add	r6, r6, #1
   1689c:	cmp	r0, r6
   168a0:	beq	168c8 <__mempcpy_chk@plt+0x52e8>
   168a4:	ldr	r5, [r2, r6, lsl #2]
   168a8:	add	r4, r3, r5, lsl #3
   168ac:	ldrb	r4, [r4, #4]
   168b0:	cmp	r4, #9
   168b4:	bne	16898 <__mempcpy_chk@plt+0x52b8>
   168b8:	ldr	r4, [r3, r1, lsl #3]
   168bc:	ldr	r5, [r3, r5, lsl #3]
   168c0:	cmp	r5, r4
   168c4:	bne	16898 <__mempcpy_chk@plt+0x52b8>
   168c8:	cmp	r6, r0
   168cc:	beq	1685c <__mempcpy_chk@plt+0x527c>
   168d0:	ldr	r0, [r9, #20]
   168d4:	add	r1, r1, r1, lsl #1
   168d8:	add	r0, r0, r1, lsl #2
   168dc:	ldr	r0, [r0, #8]
   168e0:	ldr	r6, [r0]
   168e4:	mov	r0, r8
   168e8:	mov	r1, r6
   168ec:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   168f0:	cmp	r0, #0
   168f4:	bne	1685c <__mempcpy_chk@plt+0x527c>
   168f8:	ldr	r0, [r9, #24]
   168fc:	add	r1, r6, r6, lsl #1
   16900:	add	r1, r0, r1, lsl #2
   16904:	mov	r0, r8
   16908:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   1690c:	mov	r7, #0
   16910:	cmp	r0, #0
   16914:	beq	1685c <__mempcpy_chk@plt+0x527c>
   16918:	sub	sp, fp, #24
   1691c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16920:	add	r0, sp, #12
   16924:	mov	r2, sp
   16928:	mov	r1, r9
   1692c:	mov	r3, #0
   16930:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   16934:	str	r0, [r9, #36]	; 0x24
   16938:	cmp	r0, #0
   1693c:	beq	169bc <__mempcpy_chk@plt+0x53dc>
   16940:	ldrsb	r1, [r0, #52]	; 0x34
   16944:	cmn	r1, #1
   16948:	ble	1695c <__mempcpy_chk@plt+0x537c>
   1694c:	str	r0, [r9, #40]	; 0x28
   16950:	str	r0, [r9, #44]	; 0x2c
   16954:	str	r0, [r9, #48]	; 0x30
   16958:	b	169d4 <__mempcpy_chk@plt+0x53f4>
   1695c:	add	r5, sp, #12
   16960:	mov	r6, sp
   16964:	mov	r0, r5
   16968:	mov	r1, r9
   1696c:	mov	r2, r6
   16970:	mov	r3, #1
   16974:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   16978:	str	r0, [r9, #40]	; 0x28
   1697c:	mov	r0, r5
   16980:	mov	r1, r9
   16984:	mov	r2, r6
   16988:	mov	r3, #2
   1698c:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   16990:	str	r0, [r9, #44]	; 0x2c
   16994:	mov	r0, r5
   16998:	mov	r1, r9
   1699c:	mov	r2, r6
   169a0:	mov	r3, #6
   169a4:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   169a8:	str	r0, [r9, #48]	; 0x30
   169ac:	ldr	r1, [r9, #40]	; 0x28
   169b0:	cmp	r1, #0
   169b4:	cmpne	r0, #0
   169b8:	bne	169c8 <__mempcpy_chk@plt+0x53e8>
   169bc:	ldr	r0, [sp, #12]
   169c0:	sub	sp, fp, #24
   169c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   169c8:	ldr	r0, [r9, #44]	; 0x2c
   169cc:	cmp	r0, #0
   169d0:	beq	169bc <__mempcpy_chk@plt+0x53dc>
   169d4:	ldr	r0, [sp, #8]
   169d8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   169dc:	mov	r0, #0
   169e0:	sub	sp, fp, #24
   169e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   169e8:	str	r1, [r2, #48]	; 0x30
   169ec:	str	r0, [r2]
   169f0:	str	r3, [r2, #64]	; 0x40
   169f4:	str	r1, [r2, #44]	; 0x2c
   169f8:	ldr	r0, [sp]
   169fc:	strb	r0, [r2, #72]	; 0x48
   16a00:	cmp	r3, #0
   16a04:	movwne	r3, #1
   16a08:	orr	r0, r3, r0
   16a0c:	strb	r0, [r2, #75]	; 0x4b
   16a10:	ldr	r0, [sp, #4]
   16a14:	ldr	r3, [r0, #92]	; 0x5c
   16a18:	str	r3, [r2, #80]	; 0x50
   16a1c:	ldrb	r3, [r0, #88]	; 0x58
   16a20:	ubfx	r3, r3, #2, #1
   16a24:	strb	r3, [r2, #73]	; 0x49
   16a28:	ldrb	r0, [r0, #88]	; 0x58
   16a2c:	str	r1, [r2, #56]	; 0x38
   16a30:	str	r1, [r2, #52]	; 0x34
   16a34:	ubfx	r0, r0, #3, #1
   16a38:	strb	r0, [r2, #74]	; 0x4a
   16a3c:	bx	lr
   16a40:	push	{r4, r5, r6, r7, fp, lr}
   16a44:	add	fp, sp, #16
   16a48:	mov	r4, r1
   16a4c:	mov	r5, r0
   16a50:	ldr	r0, [r0, #80]	; 0x50
   16a54:	cmp	r0, #2
   16a58:	blt	16aa4 <__mempcpy_chk@plt+0x54c4>
   16a5c:	mov	r6, #12
   16a60:	cmn	r4, #-1073741823	; 0xc0000001
   16a64:	bhi	16ad0 <__mempcpy_chk@plt+0x54f0>
   16a68:	ldr	r0, [r5, #8]
   16a6c:	lsl	r7, r4, #2
   16a70:	mov	r1, r7
   16a74:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   16a78:	cmp	r0, #0
   16a7c:	beq	16ad0 <__mempcpy_chk@plt+0x54f0>
   16a80:	str	r0, [r5, #8]
   16a84:	ldr	r0, [r5, #12]
   16a88:	cmp	r0, #0
   16a8c:	beq	16aa4 <__mempcpy_chk@plt+0x54c4>
   16a90:	mov	r1, r7
   16a94:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   16a98:	cmp	r0, #0
   16a9c:	beq	16ad0 <__mempcpy_chk@plt+0x54f0>
   16aa0:	str	r0, [r5, #12]
   16aa4:	ldrb	r0, [r5, #75]	; 0x4b
   16aa8:	cmp	r0, #0
   16aac:	beq	16ac8 <__mempcpy_chk@plt+0x54e8>
   16ab0:	ldr	r0, [r5, #4]
   16ab4:	mov	r1, r4
   16ab8:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   16abc:	cmp	r0, #0
   16ac0:	beq	16ad8 <__mempcpy_chk@plt+0x54f8>
   16ac4:	str	r0, [r5, #4]
   16ac8:	str	r4, [r5, #36]	; 0x24
   16acc:	mov	r6, #0
   16ad0:	mov	r0, r6
   16ad4:	pop	{r4, r5, r6, r7, fp, pc}
   16ad8:	mov	r6, #12
   16adc:	mov	r0, r6
   16ae0:	pop	{r4, r5, r6, r7, fp, pc}
   16ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ae8:	add	fp, sp, #28
   16aec:	sub	sp, sp, #92	; 0x5c
   16af0:	mov	r9, r0
   16af4:	ldrb	r0, [r0, #74]	; 0x4a
   16af8:	ldr	sl, [r9, #28]
   16afc:	ldr	r4, [r9, #36]	; 0x24
   16b00:	ldr	r1, [r9, #48]	; 0x30
   16b04:	cmp	r4, r1
   16b08:	movgt	r4, r1
   16b0c:	cmp	r0, #0
   16b10:	bne	16b2c <__mempcpy_chk@plt+0x554c>
   16b14:	ldr	r0, [r9, #64]	; 0x40
   16b18:	cmp	r0, #0
   16b1c:	bne	16b2c <__mempcpy_chk@plt+0x554c>
   16b20:	ldrb	r0, [r9, #76]	; 0x4c
   16b24:	cmp	r0, #0
   16b28:	beq	16b34 <__mempcpy_chk@plt+0x5554>
   16b2c:	ldr	r7, [r9, #32]
   16b30:	b	16d08 <__mempcpy_chk@plt+0x5728>
   16b34:	cmp	r4, sl
   16b38:	ble	16cdc <__mempcpy_chk@plt+0x56fc>
   16b3c:	add	r5, r9, #16
   16b40:	str	r4, [sp, #4]
   16b44:	b	16b68 <__mempcpy_chk@plt+0x5588>
   16b48:	ldr	r1, [r9, #4]
   16b4c:	strb	r0, [r1, sl]
   16b50:	ldr	r1, [r9, #8]
   16b54:	str	r0, [r1, sl, lsl #2]
   16b58:	add	sl, sl, #1
   16b5c:	cmp	r4, sl
   16b60:	mov	r7, sl
   16b64:	ble	1704c <__mempcpy_chk@plt+0x5a6c>
   16b68:	ldr	r0, [r9]
   16b6c:	ldr	r1, [r9, #24]
   16b70:	add	r1, r1, sl
   16b74:	ldrb	r6, [r0, r1]
   16b78:	tst	r6, #128	; 0x80
   16b7c:	bne	16ba0 <__mempcpy_chk@plt+0x55c0>
   16b80:	mov	r0, r5
   16b84:	bl	1137c <mbsinit@plt>
   16b88:	cmp	r0, #0
   16b8c:	beq	16ba0 <__mempcpy_chk@plt+0x55c0>
   16b90:	mov	r0, r6
   16b94:	bl	115b0 <towupper@plt>
   16b98:	cmp	r0, #127	; 0x7f
   16b9c:	bls	16b48 <__mempcpy_chk@plt+0x5568>
   16ba0:	ldm	r5, {r0, r1}
   16ba4:	str	r1, [fp, #-36]	; 0xffffffdc
   16ba8:	str	r0, [fp, #-40]	; 0xffffffd8
   16bac:	sub	r2, r4, sl
   16bb0:	ldr	r0, [r9]
   16bb4:	ldr	r1, [r9, #24]
   16bb8:	add	r0, r0, r1
   16bbc:	add	r1, r0, sl
   16bc0:	add	r0, sp, #12
   16bc4:	mov	r3, r5
   16bc8:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   16bcc:	mov	r4, r0
   16bd0:	sub	r8, r0, #1
   16bd4:	cmn	r8, #4
   16bd8:	bhi	16c94 <__mempcpy_chk@plt+0x56b4>
   16bdc:	ldr	r0, [sp, #12]
   16be0:	bl	115b0 <towupper@plt>
   16be4:	mov	r6, r0
   16be8:	ldr	r0, [sp, #12]
   16bec:	cmp	r6, r0
   16bf0:	bne	16c10 <__mempcpy_chk@plt+0x5630>
   16bf4:	ldr	r1, [r9]
   16bf8:	ldr	r0, [r9, #4]
   16bfc:	ldr	r2, [r9, #24]
   16c00:	add	r0, r0, sl
   16c04:	add	r1, r1, r2
   16c08:	add	r1, r1, sl
   16c0c:	b	16c38 <__mempcpy_chk@plt+0x5658>
   16c10:	add	r7, sp, #16
   16c14:	mov	r0, r7
   16c18:	mov	r1, r6
   16c1c:	sub	r2, fp, #40	; 0x28
   16c20:	bl	112d4 <wcrtomb@plt>
   16c24:	cmp	r4, r0
   16c28:	bne	16ce4 <__mempcpy_chk@plt+0x5704>
   16c2c:	ldr	r0, [r9, #4]
   16c30:	add	r0, r0, sl
   16c34:	mov	r1, r7
   16c38:	mov	r2, r4
   16c3c:	bl	1134c <memcpy@plt>
   16c40:	ldr	r0, [r9, #8]
   16c44:	str	r6, [r0, sl, lsl #2]
   16c48:	add	r1, r4, sl
   16c4c:	add	r6, sl, #1
   16c50:	cmp	r6, r1
   16c54:	bge	16c88 <__mempcpy_chk@plt+0x56a8>
   16c58:	mvn	r1, #3
   16c5c:	add	r2, r1, r4, lsl #2
   16c60:	add	r0, r0, sl, lsl #2
   16c64:	add	r0, r0, #4
   16c68:	mov	r1, #255	; 0xff
   16c6c:	bl	114fc <memset@plt>
   16c70:	mov	sl, r6
   16c74:	ldr	r4, [sp, #4]
   16c78:	subs	r8, r8, #1
   16c7c:	add	sl, sl, #1
   16c80:	bne	16c78 <__mempcpy_chk@plt+0x5698>
   16c84:	b	16b5c <__mempcpy_chk@plt+0x557c>
   16c88:	mov	sl, r6
   16c8c:	ldr	r4, [sp, #4]
   16c90:	b	16b5c <__mempcpy_chk@plt+0x557c>
   16c94:	add	r0, r4, #1
   16c98:	cmp	r0, #2
   16c9c:	bcc	16cb0 <__mempcpy_chk@plt+0x56d0>
   16ca0:	ldr	r0, [r9, #36]	; 0x24
   16ca4:	ldr	r1, [r9, #48]	; 0x30
   16ca8:	cmp	r0, r1
   16cac:	blt	16cf4 <__mempcpy_chk@plt+0x5714>
   16cb0:	ldr	r0, [r9, #4]
   16cb4:	strb	r6, [r0, sl]
   16cb8:	ldr	r0, [r9, #8]
   16cbc:	str	r6, [r0, sl, lsl #2]
   16cc0:	add	sl, sl, #1
   16cc4:	cmn	r4, #1
   16cc8:	bne	16c8c <__mempcpy_chk@plt+0x56ac>
   16ccc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16cd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16cd4:	stm	r5, {r0, r1}
   16cd8:	b	16c8c <__mempcpy_chk@plt+0x56ac>
   16cdc:	mov	r7, sl
   16ce0:	b	1704c <__mempcpy_chk@plt+0x5a6c>
   16ce4:	mov	r0, sl
   16ce8:	ldr	r4, [sp, #4]
   16cec:	mov	r7, sl
   16cf0:	b	16d10 <__mempcpy_chk@plt+0x5730>
   16cf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16cf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16cfc:	stm	r5, {r0, r1}
   16d00:	mov	r7, sl
   16d04:	b	1704c <__mempcpy_chk@plt+0x5a6c>
   16d08:	cmp	sl, r4
   16d0c:	bge	1704c <__mempcpy_chk@plt+0x5a6c>
   16d10:	mov	r6, r9
   16d14:	ldr	r0, [r6, #16]!
   16d18:	ldr	r1, [r6, #4]
   16d1c:	str	r0, [fp, #-40]	; 0xffffffd8
   16d20:	str	r1, [fp, #-36]	; 0xffffffdc
   16d24:	str	r4, [sp, #4]
   16d28:	sub	r2, r4, sl
   16d2c:	ldr	r0, [r6, #48]	; 0x30
   16d30:	cmp	r0, #0
   16d34:	str	r7, [sp]
   16d38:	bne	16e1c <__mempcpy_chk@plt+0x583c>
   16d3c:	ldr	r0, [r9]
   16d40:	ldr	r1, [r9, #24]
   16d44:	add	r0, r0, r1
   16d48:	add	r4, r0, r7
   16d4c:	add	r0, sp, #8
   16d50:	mov	r1, r4
   16d54:	mov	r3, r6
   16d58:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   16d5c:	mov	r5, r0
   16d60:	sub	r8, r0, #1
   16d64:	cmn	r8, #4
   16d68:	bhi	16e74 <__mempcpy_chk@plt+0x5894>
   16d6c:	ldr	r0, [sp, #8]
   16d70:	bl	115b0 <towupper@plt>
   16d74:	mov	r7, r0
   16d78:	ldr	r0, [sp, #8]
   16d7c:	cmp	r7, r0
   16d80:	bne	16d94 <__mempcpy_chk@plt+0x57b4>
   16d84:	ldr	r0, [r9, #4]
   16d88:	add	r0, r0, sl
   16d8c:	mov	r1, r4
   16d90:	b	16db8 <__mempcpy_chk@plt+0x57d8>
   16d94:	add	r0, sp, #16
   16d98:	sub	r2, fp, #40	; 0x28
   16d9c:	mov	r1, r7
   16da0:	bl	112d4 <wcrtomb@plt>
   16da4:	cmp	r0, r5
   16da8:	bne	16ef0 <__mempcpy_chk@plt+0x5910>
   16dac:	ldr	r0, [r9, #4]
   16db0:	add	r0, r0, sl
   16db4:	add	r1, sp, #16
   16db8:	mov	r2, r5
   16dbc:	bl	1134c <memcpy@plt>
   16dc0:	ldrb	r0, [r9, #76]	; 0x4c
   16dc4:	cmp	r0, #0
   16dc8:	bne	17018 <__mempcpy_chk@plt+0x5a38>
   16dcc:	ldr	r0, [r9, #8]
   16dd0:	str	r7, [r0, sl, lsl #2]
   16dd4:	ldr	r7, [sp]
   16dd8:	add	r7, r5, r7
   16ddc:	add	r1, r5, sl
   16de0:	add	r4, sl, #1
   16de4:	cmp	r4, r1
   16de8:	bge	16e10 <__mempcpy_chk@plt+0x5830>
   16dec:	mvn	r1, #3
   16df0:	add	r2, r1, r5, lsl #2
   16df4:	add	r0, r0, sl, lsl #2
   16df8:	add	r0, r0, #4
   16dfc:	mov	r1, #255	; 0xff
   16e00:	bl	114fc <memset@plt>
   16e04:	subs	r8, r8, #1
   16e08:	add	r4, r4, #1
   16e0c:	bne	16e04 <__mempcpy_chk@plt+0x5824>
   16e10:	mov	sl, r4
   16e14:	ldr	r4, [sp, #4]
   16e18:	b	16d08 <__mempcpy_chk@plt+0x5728>
   16e1c:	add	r4, sp, #16
   16e20:	cmp	r2, #1
   16e24:	ldrge	r1, [r9, #80]	; 0x50
   16e28:	cmpge	r1, #1
   16e2c:	blt	16d4c <__mempcpy_chk@plt+0x576c>
   16e30:	mov	r1, #0
   16e34:	add	r4, sp, #16
   16e38:	ldr	r3, [r9]
   16e3c:	ldr	r7, [r9, #24]
   16e40:	add	r3, r3, r7
   16e44:	ldr	r7, [sp]
   16e48:	add	r3, r3, r7
   16e4c:	ldrb	r3, [r3, r1]
   16e50:	ldrb	r3, [r0, r3]
   16e54:	strb	r3, [r4, r1]
   16e58:	add	r1, r1, #1
   16e5c:	cmp	r1, r2
   16e60:	bge	16d4c <__mempcpy_chk@plt+0x576c>
   16e64:	ldr	r3, [r9, #80]	; 0x50
   16e68:	cmp	r1, r3
   16e6c:	blt	16e38 <__mempcpy_chk@plt+0x5858>
   16e70:	b	16d4c <__mempcpy_chk@plt+0x576c>
   16e74:	add	r0, r5, #1
   16e78:	cmp	r0, #2
   16e7c:	bcc	16e90 <__mempcpy_chk@plt+0x58b0>
   16e80:	ldr	r0, [r9, #36]	; 0x24
   16e84:	ldr	r1, [r9, #48]	; 0x30
   16e88:	cmp	r0, r1
   16e8c:	blt	1703c <__mempcpy_chk@plt+0x5a5c>
   16e90:	ldr	r0, [r9]
   16e94:	ldr	r2, [r9, #24]
   16e98:	ldr	r1, [r9, #64]	; 0x40
   16e9c:	ldr	r7, [sp]
   16ea0:	add	r2, r2, r7
   16ea4:	ldrb	r0, [r0, r2]
   16ea8:	cmp	r1, #0
   16eac:	bne	1706c <__mempcpy_chk@plt+0x5a8c>
   16eb0:	ldr	r4, [sp, #4]
   16eb4:	ldr	r1, [r9, #4]
   16eb8:	strb	r0, [r1, sl]
   16ebc:	ldrb	r1, [r9, #76]	; 0x4c
   16ec0:	cmp	r1, #0
   16ec4:	bne	17074 <__mempcpy_chk@plt+0x5a94>
   16ec8:	ldr	r1, [r9, #8]
   16ecc:	str	r0, [r1, sl, lsl #2]
   16ed0:	add	sl, sl, #1
   16ed4:	add	r7, r7, #1
   16ed8:	cmn	r5, #1
   16edc:	bne	16d08 <__mempcpy_chk@plt+0x5728>
   16ee0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ee4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16ee8:	stm	r6, {r0, r1}
   16eec:	b	16d08 <__mempcpy_chk@plt+0x5728>
   16ef0:	mov	r2, r0
   16ef4:	cmn	r0, #1
   16ef8:	beq	16d84 <__mempcpy_chk@plt+0x57a4>
   16efc:	add	r1, r2, sl
   16f00:	ldr	r0, [r9, #36]	; 0x24
   16f04:	cmp	r1, r0
   16f08:	bhi	1703c <__mempcpy_chk@plt+0x5a5c>
   16f0c:	str	r1, [sp, #4]
   16f10:	ldr	r1, [r9, #12]
   16f14:	cmp	r1, #0
   16f18:	bne	16f38 <__mempcpy_chk@plt+0x5958>
   16f1c:	lsl	r0, r0, #2
   16f20:	mov	r4, r2
   16f24:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   16f28:	mov	r2, r4
   16f2c:	str	r0, [r9, #12]
   16f30:	cmp	r0, #0
   16f34:	beq	17060 <__mempcpy_chk@plt+0x5a80>
   16f38:	ldrb	r0, [r9, #76]	; 0x4c
   16f3c:	cmp	r0, #0
   16f40:	bne	16f6c <__mempcpy_chk@plt+0x598c>
   16f44:	cmp	sl, #0
   16f48:	beq	16f64 <__mempcpy_chk@plt+0x5984>
   16f4c:	ldr	r0, [r9, #12]
   16f50:	mov	r1, #0
   16f54:	str	r1, [r0, r1, lsl #2]
   16f58:	add	r1, r1, #1
   16f5c:	cmp	sl, r1
   16f60:	bne	16f54 <__mempcpy_chk@plt+0x5974>
   16f64:	mov	r0, #1
   16f68:	strb	r0, [r9, #76]	; 0x4c
   16f6c:	ldr	r0, [r9, #4]
   16f70:	add	r0, r0, sl
   16f74:	add	r1, sp, #16
   16f78:	mov	r4, r2
   16f7c:	bl	1134c <memcpy@plt>
   16f80:	ldr	r1, [r9, #8]
   16f84:	str	r7, [r1, sl, lsl #2]
   16f88:	ldr	r0, [r9, #12]
   16f8c:	ldr	r6, [sp]
   16f90:	str	r6, [r0, sl, lsl #2]
   16f94:	cmp	r4, #2
   16f98:	bcc	16fd0 <__mempcpy_chk@plt+0x59f0>
   16f9c:	add	r0, r0, sl, lsl #2
   16fa0:	add	r1, r1, sl, lsl #2
   16fa4:	mov	r2, #1
   16fa8:	mvn	r3, #0
   16fac:	cmp	r2, r5
   16fb0:	mov	r7, r8
   16fb4:	movcc	r7, r2
   16fb8:	add	r7, r7, r6
   16fbc:	str	r7, [r0, r2, lsl #2]
   16fc0:	str	r3, [r1, r2, lsl #2]
   16fc4:	add	r2, r2, #1
   16fc8:	cmp	r4, r2
   16fcc:	bne	16fac <__mempcpy_chk@plt+0x59cc>
   16fd0:	sub	r1, r4, r5
   16fd4:	ldr	r0, [r9, #48]	; 0x30
   16fd8:	ldr	r2, [r9, #52]	; 0x34
   16fdc:	add	r0, r0, r1
   16fe0:	str	r0, [r9, #48]	; 0x30
   16fe4:	cmp	r2, r6
   16fe8:	mov	r7, r6
   16fec:	ble	16ffc <__mempcpy_chk@plt+0x5a1c>
   16ff0:	ldr	r2, [r9, #56]	; 0x38
   16ff4:	add	r1, r2, r1
   16ff8:	str	r1, [r9, #56]	; 0x38
   16ffc:	add	r7, r5, r7
   17000:	ldr	r1, [r9, #36]	; 0x24
   17004:	cmp	r1, r0
   17008:	movgt	r1, r0
   1700c:	ldr	sl, [sp, #4]
   17010:	mov	r4, r1
   17014:	b	16d08 <__mempcpy_chk@plt+0x5728>
   17018:	ldr	r0, [r9, #12]
   1701c:	add	r0, r0, sl, lsl #2
   17020:	ldr	r1, [sp]
   17024:	mov	r2, r5
   17028:	str	r1, [r0], #4
   1702c:	add	r1, r1, #1
   17030:	subs	r2, r2, #1
   17034:	bne	17028 <__mempcpy_chk@plt+0x5a48>
   17038:	b	16dcc <__mempcpy_chk@plt+0x57ec>
   1703c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17040:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17044:	stm	r6, {r0, r1}
   17048:	ldr	r7, [sp]
   1704c:	str	sl, [r9, #28]
   17050:	str	r7, [r9, #32]
   17054:	mov	r0, #0
   17058:	sub	sp, fp, #28
   1705c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17060:	mov	r0, #12
   17064:	sub	sp, fp, #28
   17068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1706c:	ldrb	r0, [r1, r0]
   17070:	b	16eb0 <__mempcpy_chk@plt+0x58d0>
   17074:	ldr	r1, [r9, #12]
   17078:	str	r7, [r1, sl, lsl #2]
   1707c:	b	16ec8 <__mempcpy_chk@plt+0x58e8>
   17080:	push	{r4, r5, r6, sl, fp, lr}
   17084:	add	fp, sp, #16
   17088:	mov	r4, r0
   1708c:	ldr	r5, [r0, #28]
   17090:	ldr	r6, [r0, #36]	; 0x24
   17094:	ldr	r0, [r0, #48]	; 0x30
   17098:	cmp	r6, r0
   1709c:	movgt	r6, r0
   170a0:	cmp	r5, r6
   170a4:	bge	170e8 <__mempcpy_chk@plt+0x5b08>
   170a8:	ldr	r0, [r4]
   170ac:	ldr	r2, [r4, #24]
   170b0:	ldr	r1, [r4, #64]	; 0x40
   170b4:	add	r0, r0, r2
   170b8:	ldrb	r0, [r0, r5]
   170bc:	cmp	r1, #0
   170c0:	bne	170e0 <__mempcpy_chk@plt+0x5b00>
   170c4:	bl	11568 <toupper@plt>
   170c8:	ldr	r1, [r4, #4]
   170cc:	strb	r0, [r1, r5]
   170d0:	add	r5, r5, #1
   170d4:	cmp	r5, r6
   170d8:	blt	170a8 <__mempcpy_chk@plt+0x5ac8>
   170dc:	b	170e8 <__mempcpy_chk@plt+0x5b08>
   170e0:	ldrb	r0, [r1, r0]
   170e4:	b	170c4 <__mempcpy_chk@plt+0x5ae4>
   170e8:	str	r5, [r4, #28]
   170ec:	str	r5, [r4, #32]
   170f0:	pop	{r4, r5, r6, sl, fp, pc}
   170f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170f8:	add	fp, sp, #28
   170fc:	sub	sp, sp, #76	; 0x4c
   17100:	mov	r4, r0
   17104:	ldr	r6, [r0, #28]
   17108:	ldr	sl, [r0, #36]	; 0x24
   1710c:	ldr	r0, [r0, #48]	; 0x30
   17110:	cmp	sl, r0
   17114:	movgt	sl, r0
   17118:	cmp	sl, r6
   1711c:	ble	172a0 <__mempcpy_chk@plt+0x5cc0>
   17120:	add	r9, r4, #16
   17124:	add	r0, sp, #8
   17128:	sub	r2, sl, r6
   1712c:	ldm	r9, {r3, r5}
   17130:	ldr	r1, [r4, #64]	; 0x40
   17134:	cmp	r1, #0
   17138:	str	r3, [sp, #4]
   1713c:	bne	1721c <__mempcpy_chk@plt+0x5c3c>
   17140:	ldr	r3, [r4]
   17144:	ldr	r1, [r4, #24]
   17148:	add	r1, r3, r1
   1714c:	add	r1, r1, r6
   17150:	mov	r8, r0
   17154:	mov	r3, r9
   17158:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   1715c:	mov	r7, r0
   17160:	add	r0, r0, #1
   17164:	cmp	r0, #2
   17168:	bcc	17184 <__mempcpy_chk@plt+0x5ba4>
   1716c:	cmn	r7, #2
   17170:	bne	171b0 <__mempcpy_chk@plt+0x5bd0>
   17174:	ldr	r0, [r4, #36]	; 0x24
   17178:	ldr	r1, [r4, #48]	; 0x30
   1717c:	cmp	r0, r1
   17180:	blt	17298 <__mempcpy_chk@plt+0x5cb8>
   17184:	ldr	r0, [r4]
   17188:	ldr	r1, [r4, #24]
   1718c:	add	r1, r1, r6
   17190:	ldrb	r0, [r0, r1]
   17194:	str	r0, [sp, #8]
   17198:	ldr	r1, [r4, #64]	; 0x40
   1719c:	cmp	r1, #0
   171a0:	bne	1728c <__mempcpy_chk@plt+0x5cac>
   171a4:	ldr	r0, [sp, #4]
   171a8:	stm	r9, {r0, r5}
   171ac:	mov	r7, #1
   171b0:	ldr	r0, [r4, #8]
   171b4:	ldr	r1, [sp, #8]
   171b8:	str	r1, [r0, r6, lsl #2]
   171bc:	add	r1, r7, r6
   171c0:	add	r5, r6, #1
   171c4:	cmp	r5, r1
   171c8:	bge	17208 <__mempcpy_chk@plt+0x5c28>
   171cc:	mvn	r1, #3
   171d0:	add	r2, r1, r7, lsl #2
   171d4:	add	r0, r0, r6, lsl #2
   171d8:	add	r0, r0, #4
   171dc:	mov	r1, #255	; 0xff
   171e0:	bl	114fc <memset@plt>
   171e4:	sub	r1, r7, #1
   171e8:	mov	r6, r5
   171ec:	mov	r0, r8
   171f0:	subs	r1, r1, #1
   171f4:	add	r6, r6, #1
   171f8:	bne	171f0 <__mempcpy_chk@plt+0x5c10>
   171fc:	cmp	sl, r6
   17200:	bgt	17128 <__mempcpy_chk@plt+0x5b48>
   17204:	b	172a0 <__mempcpy_chk@plt+0x5cc0>
   17208:	mov	r6, r5
   1720c:	mov	r0, r8
   17210:	cmp	sl, r6
   17214:	bgt	17128 <__mempcpy_chk@plt+0x5b48>
   17218:	b	172a0 <__mempcpy_chk@plt+0x5cc0>
   1721c:	cmp	r2, #1
   17220:	add	r1, sp, #12
   17224:	blt	17150 <__mempcpy_chk@plt+0x5b70>
   17228:	ldr	r1, [r4, #80]	; 0x50
   1722c:	cmp	r1, #1
   17230:	add	r1, sp, #12
   17234:	blt	17150 <__mempcpy_chk@plt+0x5b70>
   17238:	mov	r7, #0
   1723c:	ldr	lr, [r4]
   17240:	ldr	ip, [r4, #4]
   17244:	ldr	r1, [r4, #24]
   17248:	ldr	r3, [r4, #64]	; 0x40
   1724c:	add	r1, lr, r1
   17250:	add	r1, r1, r6
   17254:	ldrb	r1, [r1, r7]
   17258:	ldrb	r1, [r3, r1]
   1725c:	add	r3, ip, r6
   17260:	strb	r1, [r3, r7]
   17264:	add	r3, sp, #12
   17268:	strb	r1, [r3, r7]
   1726c:	add	r7, r7, #1
   17270:	cmp	r7, r2
   17274:	bge	17284 <__mempcpy_chk@plt+0x5ca4>
   17278:	ldr	r1, [r4, #80]	; 0x50
   1727c:	cmp	r7, r1
   17280:	blt	1723c <__mempcpy_chk@plt+0x5c5c>
   17284:	add	r1, sp, #12
   17288:	b	17150 <__mempcpy_chk@plt+0x5b70>
   1728c:	ldrb	r0, [r1, r0]
   17290:	str	r0, [sp, #8]
   17294:	b	171a4 <__mempcpy_chk@plt+0x5bc4>
   17298:	ldr	r0, [sp, #4]
   1729c:	stm	r9, {r0, r5}
   172a0:	str	r6, [r4, #28]
   172a4:	str	r6, [r4, #32]
   172a8:	sub	sp, fp, #28
   172ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172b0:	push	{r4, sl, fp, lr}
   172b4:	add	fp, sp, #8
   172b8:	ldr	r1, [r0, #28]
   172bc:	ldr	ip, [r0, #36]	; 0x24
   172c0:	ldr	r3, [r0, #48]	; 0x30
   172c4:	cmp	ip, r3
   172c8:	movgt	ip, r3
   172cc:	cmp	r1, ip
   172d0:	bge	172fc <__mempcpy_chk@plt+0x5d1c>
   172d4:	ldm	r0, {r3, lr}
   172d8:	ldr	r2, [r0, #24]
   172dc:	ldr	r4, [r0, #64]	; 0x40
   172e0:	add	r2, r3, r2
   172e4:	ldrb	r2, [r2, r1]
   172e8:	ldrb	r2, [r4, r2]
   172ec:	strb	r2, [lr, r1]
   172f0:	add	r1, r1, #1
   172f4:	cmp	r1, ip
   172f8:	blt	172d4 <__mempcpy_chk@plt+0x5cf4>
   172fc:	str	r1, [r0, #28]
   17300:	str	r1, [r0, #32]
   17304:	pop	{r4, sl, fp, pc}
   17308:	push	{r4, sl, fp, lr}
   1730c:	add	fp, sp, #8
   17310:	mov	r4, r1
   17314:	bl	174c8 <__mempcpy_chk@plt+0x5ee8>
   17318:	ldr	r1, [r4, #40]	; 0x28
   1731c:	add	r0, r1, r0
   17320:	str	r0, [r4, #40]	; 0x28
   17324:	pop	{r4, sl, fp, pc}
   17328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1732c:	add	fp, sp, #28
   17330:	sub	sp, sp, #28
   17334:	mov	r5, r2
   17338:	mov	sl, r0
   1733c:	ldr	r4, [r1]
   17340:	ldr	r0, [r4, #84]	; 0x54
   17344:	str	r0, [sp, #12]
   17348:	ldr	r7, [fp, #12]
   1734c:	str	r7, [sp, #4]
   17350:	ldr	r8, [fp, #8]
   17354:	str	r8, [sp]
   17358:	mov	r0, sl
   1735c:	str	r1, [sp, #16]
   17360:	str	r3, [sp, #20]
   17364:	bl	17d60 <__mempcpy_chk@plt+0x6780>
   17368:	mov	r6, r0
   1736c:	cmp	r0, #0
   17370:	bne	17380 <__mempcpy_chk@plt+0x5da0>
   17374:	ldr	r0, [r7]
   17378:	cmp	r0, #0
   1737c:	bne	17488 <__mempcpy_chk@plt+0x5ea8>
   17380:	ldr	r0, [sp, #20]
   17384:	orr	r7, r0, #8388608	; 0x800000
   17388:	b	173bc <__mempcpy_chk@plt+0x5ddc>
   1738c:	ldr	r0, [r4, #84]	; 0x54
   17390:	ldr	r1, [sp, #24]
   17394:	orr	r0, r0, r1
   17398:	str	r0, [r4, #84]	; 0x54
   1739c:	mov	r8, r9
   173a0:	mov	r0, r4
   173a4:	mov	r1, r6
   173a8:	mov	r3, #10
   173ac:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   173b0:	mov	r6, r0
   173b4:	cmp	r0, #0
   173b8:	beq	1747c <__mempcpy_chk@plt+0x5e9c>
   173bc:	ldrb	r0, [r5, #4]
   173c0:	cmp	r0, #10
   173c4:	bne	1746c <__mempcpy_chk@plt+0x5e8c>
   173c8:	mov	r0, r5
   173cc:	mov	r1, sl
   173d0:	mov	r2, r7
   173d4:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   173d8:	ldrb	r0, [r5, #4]
   173dc:	orr	r1, r0, #8
   173e0:	mov	r2, #0
   173e4:	cmp	r1, #10
   173e8:	beq	173a0 <__mempcpy_chk@plt+0x5dc0>
   173ec:	cmp	r8, #0
   173f0:	beq	173fc <__mempcpy_chk@plt+0x5e1c>
   173f4:	cmp	r0, #9
   173f8:	beq	173a0 <__mempcpy_chk@plt+0x5dc0>
   173fc:	ldr	r0, [r4, #84]	; 0x54
   17400:	str	r0, [sp, #24]
   17404:	ldr	r0, [sp, #12]
   17408:	str	r0, [r4, #84]	; 0x54
   1740c:	mov	r9, r8
   17410:	str	r8, [sp]
   17414:	ldr	r8, [fp, #12]
   17418:	str	r8, [sp, #4]
   1741c:	mov	r0, sl
   17420:	ldr	r1, [sp, #16]
   17424:	mov	r2, r5
   17428:	ldr	r3, [sp, #20]
   1742c:	bl	17d60 <__mempcpy_chk@plt+0x6780>
   17430:	mov	r2, r0
   17434:	cmp	r0, #0
   17438:	bne	1738c <__mempcpy_chk@plt+0x5dac>
   1743c:	ldr	r0, [r8]
   17440:	cmp	r0, #0
   17444:	beq	1738c <__mempcpy_chk@plt+0x5dac>
   17448:	cmp	r6, #0
   1744c:	beq	17488 <__mempcpy_chk@plt+0x5ea8>
   17450:	movw	r1, #32588	; 0x7f4c
   17454:	movt	r1, #1
   17458:	mov	r4, #0
   1745c:	mov	r0, r6
   17460:	mov	r2, #0
   17464:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   17468:	b	17470 <__mempcpy_chk@plt+0x5e90>
   1746c:	mov	r4, r6
   17470:	mov	r0, r4
   17474:	sub	sp, fp, #28
   17478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1747c:	mov	r0, #12
   17480:	ldr	r1, [fp, #12]
   17484:	str	r0, [r1]
   17488:	mov	r4, #0
   1748c:	b	17470 <__mempcpy_chk@plt+0x5e90>
   17490:	push	{fp, lr}
   17494:	mov	fp, sp
   17498:	sub	sp, sp, #8
   1749c:	mov	ip, #0
   174a0:	str	ip, [sp]
   174a4:	uxtb	ip, r3
   174a8:	ldr	r3, [sp, #4]
   174ac:	bfc	r3, #0, #23
   174b0:	orr	r3, r3, ip
   174b4:	str	r3, [sp, #4]
   174b8:	mov	r3, sp
   174bc:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   174c0:	mov	sp, fp
   174c4:	pop	{fp, pc}
   174c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174cc:	add	fp, sp, #28
   174d0:	sub	sp, sp, #12
   174d4:	mov	r7, r1
   174d8:	mov	sl, r0
   174dc:	ldr	r0, [r1, #40]	; 0x28
   174e0:	ldr	r1, [r1, #56]	; 0x38
   174e4:	cmp	r1, r0
   174e8:	ble	175c4 <__mempcpy_chk@plt+0x5fe4>
   174ec:	mov	r9, r2
   174f0:	ldr	r1, [r7, #4]
   174f4:	ldrb	r6, [r1, r0]
   174f8:	mov	r5, sl
   174fc:	strb	r6, [r5], #4
   17500:	ldr	r4, [r5]
   17504:	bic	r0, r4, #6291456	; 0x600000
   17508:	str	r0, [r5]
   1750c:	ldr	r0, [r7, #80]	; 0x50
   17510:	movw	r8, #65280	; 0xff00
   17514:	movt	r8, #65439	; 0xff9f
   17518:	cmp	r0, #2
   1751c:	blt	17540 <__mempcpy_chk@plt+0x5f60>
   17520:	ldr	r1, [r7, #28]
   17524:	ldr	r0, [r7, #40]	; 0x28
   17528:	cmp	r0, r1
   1752c:	beq	17540 <__mempcpy_chk@plt+0x5f60>
   17530:	ldr	r1, [r7, #8]
   17534:	ldr	r0, [r1, r0, lsl #2]
   17538:	cmn	r0, #1
   1753c:	beq	179f8 <__mempcpy_chk@plt+0x6418>
   17540:	cmp	r6, #92	; 0x5c
   17544:	bne	175d4 <__mempcpy_chk@plt+0x5ff4>
   17548:	ldr	r0, [r7, #40]	; 0x28
   1754c:	ldr	r1, [r7, #48]	; 0x30
   17550:	add	r0, r0, #1
   17554:	cmp	r0, r1
   17558:	bge	17628 <__mempcpy_chk@plt+0x6048>
   1755c:	mov	r0, r7
   17560:	bl	17c7c <__mempcpy_chk@plt+0x669c>
   17564:	mov	r6, r0
   17568:	strb	r0, [sl]
   1756c:	and	r0, r4, r8
   17570:	orr	r4, r0, #1
   17574:	str	r4, [sl, #4]
   17578:	ldr	r0, [r7, #80]	; 0x50
   1757c:	cmp	r0, #2
   17580:	blt	1784c <__mempcpy_chk@plt+0x626c>
   17584:	ldr	r0, [r7, #40]	; 0x28
   17588:	add	r1, r0, #1
   1758c:	mov	r0, r7
   17590:	bl	17d3c <__mempcpy_chk@plt+0x675c>
   17594:	mov	r7, r0
   17598:	bl	114e4 <iswalnum@plt>
   1759c:	cmp	r0, #0
   175a0:	movwne	r0, #1
   175a4:	sub	r1, r7, #95	; 0x5f
   175a8:	clz	r1, r1
   175ac:	lsr	r1, r1, #5
   175b0:	orr	r0, r1, r0
   175b4:	ldr	r1, [r5]
   175b8:	bic	r1, r1, #4194304	; 0x400000
   175bc:	orr	r0, r1, r0, lsl #22
   175c0:	b	1786c <__mempcpy_chk@plt+0x628c>
   175c4:	mov	r0, #2
   175c8:	strb	r0, [sl, #4]
   175cc:	mov	r8, #0
   175d0:	b	17c70 <__mempcpy_chk@plt+0x6690>
   175d4:	and	r0, r4, r8
   175d8:	orr	r4, r0, #1
   175dc:	str	r4, [r5]
   175e0:	ldr	r0, [r7, #80]	; 0x50
   175e4:	cmp	r0, #2
   175e8:	blt	17634 <__mempcpy_chk@plt+0x6054>
   175ec:	ldr	r1, [r7, #40]	; 0x28
   175f0:	mov	r0, r7
   175f4:	bl	17d3c <__mempcpy_chk@plt+0x675c>
   175f8:	mov	r4, r0
   175fc:	bl	114e4 <iswalnum@plt>
   17600:	cmp	r0, #0
   17604:	movwne	r0, #1
   17608:	sub	r1, r4, #95	; 0x5f
   1760c:	clz	r1, r1
   17610:	lsr	r1, r1, #5
   17614:	orr	r0, r1, r0
   17618:	ldr	r1, [r5]
   1761c:	bic	r1, r1, #4194304	; 0x400000
   17620:	orr	r0, r1, r0, lsl #22
   17624:	b	17654 <__mempcpy_chk@plt+0x6074>
   17628:	and	r0, r4, r8
   1762c:	orr	r0, r0, #36	; 0x24
   17630:	b	17a04 <__mempcpy_chk@plt+0x6424>
   17634:	bl	114a8 <__ctype_b_loc@plt>
   17638:	ldr	r0, [r0]
   1763c:	add	r0, r0, r6, lsl #1
   17640:	ldrh	r0, [r0]
   17644:	ubfx	r0, r0, #3, #1
   17648:	cmp	r6, #95	; 0x5f
   1764c:	movweq	r0, #1
   17650:	orr	r0, r4, r0, lsl #22
   17654:	str	r0, [r5]
   17658:	sub	r1, r6, #10
   1765c:	mov	r8, #1
   17660:	cmp	r1, #115	; 0x73
   17664:	bhi	17c70 <__mempcpy_chk@plt+0x6690>
   17668:	add	r2, pc, #0
   1766c:	ldr	pc, [r2, r1, lsl #2]
   17670:	andeq	r7, r1, r0, asr #16
   17674:	andeq	r7, r1, r0, ror ip
   17678:	andeq	r7, r1, r0, ror ip
   1767c:	andeq	r7, r1, r0, ror ip
   17680:	andeq	r7, r1, r0, ror ip
   17684:	andeq	r7, r1, r0, ror ip
   17688:	andeq	r7, r1, r0, ror ip
   1768c:	andeq	r7, r1, r0, ror ip
   17690:	andeq	r7, r1, r0, ror ip
   17694:	andeq	r7, r1, r0, ror ip
   17698:	andeq	r7, r1, r0, ror ip
   1769c:	andeq	r7, r1, r0, ror ip
   176a0:	andeq	r7, r1, r0, ror ip
   176a4:	andeq	r7, r1, r0, ror ip
   176a8:	andeq	r7, r1, r0, ror ip
   176ac:	andeq	r7, r1, r0, ror ip
   176b0:	andeq	r7, r1, r0, ror ip
   176b4:	andeq	r7, r1, r0, ror ip
   176b8:	andeq	r7, r1, r0, ror ip
   176bc:	andeq	r7, r1, r0, ror ip
   176c0:	andeq	r7, r1, r0, ror ip
   176c4:	andeq	r7, r1, r0, ror ip
   176c8:	andeq	r7, r1, r0, ror ip
   176cc:	andeq	r7, r1, r0, ror ip
   176d0:	andeq	r7, r1, r0, ror ip
   176d4:	andeq	r7, r1, r0, ror ip
   176d8:	andeq	r7, r1, r0, lsl sl
   176dc:	andeq	r7, r1, r0, ror ip
   176e0:	andeq	r7, r1, r0, ror ip
   176e4:	andeq	r7, r1, r0, ror ip
   176e8:	andeq	r7, r1, r0, ror sl
   176ec:	andeq	r7, r1, ip, ror sl
   176f0:	andeq	r7, r1, r8, lsl #21
   176f4:	muleq	r1, r0, sl
   176f8:	andeq	r7, r1, r0, ror ip
   176fc:	andeq	r7, r1, r0, ror ip
   17700:	andeq	r7, r1, r0, lsr #21
   17704:	andeq	r7, r1, r0, ror ip
   17708:	andeq	r7, r1, r0, ror ip
   1770c:	andeq	r7, r1, r0, ror ip
   17710:	andeq	r7, r1, r0, ror ip
   17714:	andeq	r7, r1, r0, ror ip
   17718:	andeq	r7, r1, r0, ror ip
   1771c:	andeq	r7, r1, r0, ror ip
   17720:	andeq	r7, r1, r0, ror ip
   17724:	andeq	r7, r1, r0, ror ip
   17728:	andeq	r7, r1, r0, ror ip
   1772c:	andeq	r7, r1, r0, ror ip
   17730:	andeq	r7, r1, r0, ror ip
   17734:	andeq	r7, r1, r0, ror ip
   17738:	andeq	r7, r1, r0, ror ip
   1773c:	andeq	r7, r1, r0, ror ip
   17740:	andeq	r7, r1, r0, ror ip
   17744:	andeq	r7, r1, r8, lsr #21
   17748:	andeq	r7, r1, r0, ror ip
   1774c:	andeq	r7, r1, r0, ror ip
   17750:	andeq	r7, r1, r0, ror ip
   17754:	andeq	r7, r1, r0, ror ip
   17758:	andeq	r7, r1, r0, ror ip
   1775c:	andeq	r7, r1, r0, ror ip
   17760:	andeq	r7, r1, r0, ror ip
   17764:	andeq	r7, r1, r0, ror ip
   17768:	andeq	r7, r1, r0, ror ip
   1776c:	andeq	r7, r1, r0, ror ip
   17770:	andeq	r7, r1, r0, ror ip
   17774:	andeq	r7, r1, r0, ror ip
   17778:	andeq	r7, r1, r0, ror ip
   1777c:	andeq	r7, r1, r0, ror ip
   17780:	andeq	r7, r1, r0, ror ip
   17784:	andeq	r7, r1, r0, ror ip
   17788:	andeq	r7, r1, r0, ror ip
   1778c:	andeq	r7, r1, r0, ror ip
   17790:	andeq	r7, r1, r0, ror ip
   17794:	andeq	r7, r1, r0, ror ip
   17798:	andeq	r7, r1, r0, ror ip
   1779c:	andeq	r7, r1, r0, ror ip
   177a0:	andeq	r7, r1, r0, ror ip
   177a4:	andeq	r7, r1, r0, ror ip
   177a8:	andeq	r7, r1, r0, ror ip
   177ac:	andeq	r7, r1, r0, ror ip
   177b0:	andeq	r7, r1, r0, ror ip
   177b4:			; <UNDEFINED> instruction: 0x00017ab8
   177b8:	andeq	r7, r1, r0, ror ip
   177bc:	andeq	r7, r1, r0, ror ip
   177c0:	andeq	r7, r1, r0, asr #21
   177c4:	andeq	r7, r1, r0, ror ip
   177c8:	andeq	r7, r1, r0, ror ip
   177cc:	andeq	r7, r1, r0, ror ip
   177d0:	andeq	r7, r1, r0, ror ip
   177d4:	andeq	r7, r1, r0, ror ip
   177d8:	andeq	r7, r1, r0, ror ip
   177dc:	andeq	r7, r1, r0, ror ip
   177e0:	andeq	r7, r1, r0, ror ip
   177e4:	andeq	r7, r1, r0, ror ip
   177e8:	andeq	r7, r1, r0, ror ip
   177ec:	andeq	r7, r1, r0, ror ip
   177f0:	andeq	r7, r1, r0, ror ip
   177f4:	andeq	r7, r1, r0, ror ip
   177f8:	andeq	r7, r1, r0, ror ip
   177fc:	andeq	r7, r1, r0, ror ip
   17800:	andeq	r7, r1, r0, ror ip
   17804:	andeq	r7, r1, r0, ror ip
   17808:	andeq	r7, r1, r0, ror ip
   1780c:	andeq	r7, r1, r0, ror ip
   17810:	andeq	r7, r1, r0, ror ip
   17814:	andeq	r7, r1, r0, ror ip
   17818:	andeq	r7, r1, r0, ror ip
   1781c:	andeq	r7, r1, r0, ror ip
   17820:	andeq	r7, r1, r0, ror ip
   17824:	andeq	r7, r1, r0, ror ip
   17828:	andeq	r7, r1, r0, ror ip
   1782c:	andeq	r7, r1, r0, ror ip
   17830:	andeq	r7, r1, r0, ror ip
   17834:	andeq	r7, r1, r8, ror #21
   17838:	strdeq	r7, [r1], -r8
   1783c:	andeq	r7, r1, ip, lsl #22
   17840:	tst	r9, #2048	; 0x800
   17844:	bne	17b04 <__mempcpy_chk@plt+0x6524>
   17848:	b	17c70 <__mempcpy_chk@plt+0x6690>
   1784c:	bl	114a8 <__ctype_b_loc@plt>
   17850:	ldr	r0, [r0]
   17854:	add	r0, r0, r6, lsl #1
   17858:	ldrh	r0, [r0]
   1785c:	ubfx	r0, r0, #3, #1
   17860:	cmp	r6, #95	; 0x5f
   17864:	movweq	r0, #1
   17868:	orr	r0, r4, r0, lsl #22
   1786c:	str	r0, [r5]
   17870:	sub	r1, r6, #39	; 0x27
   17874:	mov	r8, #2
   17878:	cmp	r1, #86	; 0x56
   1787c:	bhi	17c70 <__mempcpy_chk@plt+0x6690>
   17880:	add	r2, pc, #0
   17884:	ldr	pc, [r2, r1, lsl #2]
   17888:	andeq	r7, r1, r8, asr #22
   1788c:	andeq	r7, r1, r8, asr fp
   17890:	andeq	r7, r1, r8, ror #22
   17894:	andeq	r7, r1, r0, ror ip
   17898:	andeq	r7, r1, r8, ror fp
   1789c:	andeq	r7, r1, r0, ror ip
   178a0:	andeq	r7, r1, r0, ror ip
   178a4:	andeq	r7, r1, r0, ror ip
   178a8:	andeq	r7, r1, r0, ror ip
   178ac:	andeq	r7, r1, r0, ror ip
   178b0:	andeq	r7, r1, r4, ror #19
   178b4:	andeq	r7, r1, r4, ror #19
   178b8:	andeq	r7, r1, r4, ror #19
   178bc:	andeq	r7, r1, r4, ror #19
   178c0:	andeq	r7, r1, r4, ror #19
   178c4:	andeq	r7, r1, r4, ror #19
   178c8:	andeq	r7, r1, r4, ror #19
   178cc:	andeq	r7, r1, r4, ror #19
   178d0:	andeq	r7, r1, r4, ror #19
   178d4:	andeq	r7, r1, r0, ror ip
   178d8:	andeq	r7, r1, r0, ror ip
   178dc:	muleq	r1, r0, fp
   178e0:	andeq	r7, r1, r0, ror ip
   178e4:	andeq	r7, r1, r0, lsr #23
   178e8:			; <UNDEFINED> instruction: 0x00017bb0
   178ec:	andeq	r7, r1, r0, ror ip
   178f0:	andeq	r7, r1, r0, ror ip
   178f4:	andeq	r7, r1, r8, asr #23
   178f8:	andeq	r7, r1, r0, ror ip
   178fc:	andeq	r7, r1, r0, ror ip
   17900:	andeq	r7, r1, r0, ror ip
   17904:	andeq	r7, r1, r0, ror ip
   17908:	andeq	r7, r1, r0, ror ip
   1790c:	andeq	r7, r1, r0, ror ip
   17910:	andeq	r7, r1, r0, ror ip
   17914:	andeq	r7, r1, r0, ror ip
   17918:	andeq	r7, r1, r0, ror ip
   1791c:	andeq	r7, r1, r0, ror ip
   17920:	andeq	r7, r1, r0, ror ip
   17924:	andeq	r7, r1, r0, ror ip
   17928:	andeq	r7, r1, r0, ror ip
   1792c:	andeq	r7, r1, r0, ror ip
   17930:	andeq	r7, r1, r0, ror ip
   17934:	andeq	r7, r1, r0, ror ip
   17938:	ldrdeq	r7, [r1], -r8
   1793c:	andeq	r7, r1, r0, ror ip
   17940:	andeq	r7, r1, r0, ror ip
   17944:	andeq	r7, r1, r0, ror ip
   17948:	andeq	r7, r1, r8, ror #23
   1794c:	andeq	r7, r1, r0, ror ip
   17950:	andeq	r7, r1, r0, ror ip
   17954:	andeq	r7, r1, r0, ror ip
   17958:	andeq	r7, r1, r0, ror ip
   1795c:	andeq	r7, r1, r0, ror ip
   17960:	andeq	r7, r1, r0, ror ip
   17964:	andeq	r7, r1, r0, ror ip
   17968:	andeq	r7, r1, r0, ror ip
   1796c:	strdeq	r7, [r1], -r8
   17970:	andeq	r7, r1, r0, ror ip
   17974:	andeq	r7, r1, r8, lsl #24
   17978:	andeq	r7, r1, r0, ror ip
   1797c:	andeq	r7, r1, r0, ror ip
   17980:	andeq	r7, r1, r0, ror ip
   17984:	andeq	r7, r1, r0, ror ip
   17988:	andeq	r7, r1, r0, ror ip
   1798c:	andeq	r7, r1, r0, ror ip
   17990:	andeq	r7, r1, r0, ror ip
   17994:	andeq	r7, r1, r0, ror ip
   17998:	andeq	r7, r1, r0, ror ip
   1799c:	andeq	r7, r1, r0, ror ip
   179a0:	andeq	r7, r1, r0, ror ip
   179a4:	andeq	r7, r1, r0, ror ip
   179a8:	andeq	r7, r1, r0, ror ip
   179ac:	andeq	r7, r1, r0, ror ip
   179b0:	andeq	r7, r1, r0, ror ip
   179b4:	andeq	r7, r1, r0, ror ip
   179b8:	andeq	r7, r1, r8, lsl ip
   179bc:	andeq	r7, r1, r0, ror ip
   179c0:	andeq	r7, r1, r0, ror ip
   179c4:	andeq	r7, r1, r0, ror ip
   179c8:	andeq	r7, r1, r8, lsr #24
   179cc:	andeq	r7, r1, r0, ror ip
   179d0:	andeq	r7, r1, r0, ror ip
   179d4:	andeq	r7, r1, r0, ror ip
   179d8:	andeq	r7, r1, r8, lsr ip
   179dc:	andeq	r7, r1, ip, asr #24
   179e0:	andeq	r7, r1, r8, asr ip
   179e4:	tst	r9, #16384	; 0x4000
   179e8:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   179ec:	sub	r1, r6, #49	; 0x31
   179f0:	mov	r2, #4
   179f4:	b	17ad8 <__mempcpy_chk@plt+0x64f8>
   179f8:	and	r0, r4, r8
   179fc:	orr	r0, r0, #1
   17a00:	orr	r0, r0, #2097152	; 0x200000
   17a04:	str	r0, [r5]
   17a08:	mov	r8, #1
   17a0c:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17a10:	tst	r9, #8
   17a14:	bne	17a5c <__mempcpy_chk@plt+0x647c>
   17a18:	ldr	r0, [r7, #40]	; 0x28
   17a1c:	ldr	r1, [r7, #48]	; 0x30
   17a20:	add	r0, r0, #1
   17a24:	cmp	r0, r1
   17a28:	beq	17a5c <__mempcpy_chk@plt+0x647c>
   17a2c:	str	r0, [r7, #40]	; 0x28
   17a30:	add	r0, sp, #4
   17a34:	mov	r1, r7
   17a38:	mov	r2, r9
   17a3c:	bl	174c8 <__mempcpy_chk@plt+0x5ee8>
   17a40:	ldr	r0, [r7, #40]	; 0x28
   17a44:	sub	r0, r0, #1
   17a48:	str	r0, [r7, #40]	; 0x28
   17a4c:	ldrb	r0, [sp, #8]
   17a50:	sub	r0, r0, #9
   17a54:	cmp	r0, #1
   17a58:	bhi	17c70 <__mempcpy_chk@plt+0x6690>
   17a5c:	mov	r0, #32
   17a60:	str	r0, [sl]
   17a64:	mov	r0, #12
   17a68:	strb	r0, [sl, #4]
   17a6c:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17a70:	tst	r9, #8192	; 0x2000
   17a74:	bne	17b60 <__mempcpy_chk@plt+0x6580>
   17a78:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17a7c:	tst	r9, #8192	; 0x2000
   17a80:	bne	17b70 <__mempcpy_chk@plt+0x6590>
   17a84:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17a88:	mov	r1, #11
   17a8c:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17a90:	movw	r1, #1026	; 0x402
   17a94:	tst	r9, r1
   17a98:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17a9c:	b	17b88 <__mempcpy_chk@plt+0x65a8>
   17aa0:	mov	r1, #5
   17aa4:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17aa8:	movw	r1, #1026	; 0x402
   17aac:	tst	r9, r1
   17ab0:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17ab4:	b	17bc0 <__mempcpy_chk@plt+0x65e0>
   17ab8:	mov	r1, #20
   17abc:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17ac0:	movw	r1, #8
   17ac4:	movt	r1, #128	; 0x80
   17ac8:	tst	r9, r1
   17acc:	beq	17b1c <__mempcpy_chk@plt+0x653c>
   17ad0:	mov	r1, #16
   17ad4:	mov	r2, #12
   17ad8:	bfi	r0, r2, #0, #8
   17adc:	str	r1, [sl]
   17ae0:	str	r0, [sl, #4]
   17ae4:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17ae8:	and	r1, r9, #4608	; 0x1200
   17aec:	cmp	r1, #4608	; 0x1200
   17af0:	beq	17c44 <__mempcpy_chk@plt+0x6664>
   17af4:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17af8:	and	r1, r9, #33792	; 0x8400
   17afc:	cmp	r1, #32768	; 0x8000
   17b00:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17b04:	mov	r1, #10
   17b08:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17b0c:	and	r1, r9, #4608	; 0x1200
   17b10:	cmp	r1, #4608	; 0x1200
   17b14:	beq	17c64 <__mempcpy_chk@plt+0x6684>
   17b18:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17b1c:	ldr	r1, [r7, #40]	; 0x28
   17b20:	cmp	r1, #0
   17b24:	beq	17ad0 <__mempcpy_chk@plt+0x64f0>
   17b28:	tst	r9, #2048	; 0x800
   17b2c:	beq	17c70 <__mempcpy_chk@plt+0x6690>
   17b30:	ldr	r2, [r7, #4]
   17b34:	add	r1, r1, r2
   17b38:	ldrb	r1, [r1, #-1]
   17b3c:	cmp	r1, #10
   17b40:	beq	17ad0 <__mempcpy_chk@plt+0x64f0>
   17b44:	b	17c70 <__mempcpy_chk@plt+0x6690>
   17b48:	tst	r9, #524288	; 0x80000
   17b4c:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17b50:	mov	r1, #128	; 0x80
   17b54:	b	17ad4 <__mempcpy_chk@plt+0x64f4>
   17b58:	tst	r9, #8192	; 0x2000
   17b5c:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17b60:	mov	r1, #8
   17b64:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17b68:	tst	r9, #8192	; 0x2000
   17b6c:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17b70:	mov	r1, #9
   17b74:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17b78:	movw	r1, #1026	; 0x402
   17b7c:	and	r1, r9, r1
   17b80:	cmp	r1, #2
   17b84:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17b88:	mov	r1, #18
   17b8c:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17b90:	tst	r9, #524288	; 0x80000
   17b94:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17b98:	mov	r1, #6
   17b9c:	b	17ad4 <__mempcpy_chk@plt+0x64f4>
   17ba0:	tst	r9, #524288	; 0x80000
   17ba4:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17ba8:	mov	r1, #9
   17bac:	b	17ad4 <__mempcpy_chk@plt+0x64f4>
   17bb0:	movw	r1, #1026	; 0x402
   17bb4:	and	r1, r9, r1
   17bb8:	cmp	r1, #2
   17bbc:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17bc0:	mov	r1, #19
   17bc4:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17bc8:	tst	r9, #524288	; 0x80000
   17bcc:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17bd0:	mov	r1, #512	; 0x200
   17bd4:	b	17ad4 <__mempcpy_chk@plt+0x64f4>
   17bd8:	tst	r9, #524288	; 0x80000
   17bdc:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17be0:	mov	r1, #35	; 0x23
   17be4:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17be8:	tst	r9, #524288	; 0x80000
   17bec:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17bf0:	mov	r1, #33	; 0x21
   17bf4:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17bf8:	tst	r9, #524288	; 0x80000
   17bfc:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17c00:	mov	r1, #64	; 0x40
   17c04:	b	17ad4 <__mempcpy_chk@plt+0x64f4>
   17c08:	tst	r9, #524288	; 0x80000
   17c0c:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17c10:	mov	r1, #256	; 0x100
   17c14:	b	17ad4 <__mempcpy_chk@plt+0x64f4>
   17c18:	tst	r9, #524288	; 0x80000
   17c1c:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17c20:	mov	r1, #34	; 0x22
   17c24:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17c28:	tst	r9, #524288	; 0x80000
   17c2c:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17c30:	mov	r1, #32
   17c34:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17c38:	and	r1, r9, #4608	; 0x1200
   17c3c:	cmp	r1, #512	; 0x200
   17c40:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17c44:	mov	r1, #23
   17c48:	b	17c68 <__mempcpy_chk@plt+0x6688>
   17c4c:	tst	r9, #33792	; 0x8400
   17c50:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17c54:	b	17b04 <__mempcpy_chk@plt+0x6524>
   17c58:	and	r1, r9, #4608	; 0x1200
   17c5c:	cmp	r1, #512	; 0x200
   17c60:	bne	17c70 <__mempcpy_chk@plt+0x6690>
   17c64:	mov	r1, #24
   17c68:	bfi	r0, r1, #0, #8
   17c6c:	str	r0, [r5]
   17c70:	mov	r0, r8
   17c74:	sub	sp, fp, #28
   17c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c7c:	push	{fp, lr}
   17c80:	mov	fp, sp
   17c84:	ldrb	r1, [r0, #75]	; 0x4b
   17c88:	cmp	r1, #0
   17c8c:	bne	17cac <__mempcpy_chk@plt+0x66cc>
   17c90:	ldr	r1, [r0, #4]
   17c94:	ldr	r0, [r0, #40]	; 0x28
   17c98:	add	r0, r0, r1
   17c9c:	add	r0, r0, #1
   17ca0:	ldrb	r3, [r0]
   17ca4:	uxtb	r0, r3
   17ca8:	pop	{fp, pc}
   17cac:	ldr	r1, [r0, #80]	; 0x50
   17cb0:	cmp	r1, #2
   17cb4:	blt	17cec <__mempcpy_chk@plt+0x670c>
   17cb8:	ldr	r2, [r0, #8]
   17cbc:	ldr	r3, [r0, #40]	; 0x28
   17cc0:	add	ip, r3, #1
   17cc4:	ldr	r1, [r2, ip, lsl #2]
   17cc8:	cmn	r1, #1
   17ccc:	beq	17d30 <__mempcpy_chk@plt+0x6750>
   17cd0:	ldr	r1, [r0, #28]
   17cd4:	add	r3, r3, #2
   17cd8:	cmp	r1, r3
   17cdc:	beq	17cec <__mempcpy_chk@plt+0x670c>
   17ce0:	ldr	r1, [r2, r3, lsl #2]
   17ce4:	cmn	r1, #1
   17ce8:	beq	17d30 <__mempcpy_chk@plt+0x6750>
   17cec:	ldrb	lr, [r0, #76]	; 0x4c
   17cf0:	ldr	r1, [r0, #40]	; 0x28
   17cf4:	add	ip, r1, #1
   17cf8:	cmp	lr, #0
   17cfc:	mov	r3, ip
   17d00:	beq	17d0c <__mempcpy_chk@plt+0x672c>
   17d04:	ldr	r3, [r0, #12]
   17d08:	ldr	r3, [r3, ip, lsl #2]
   17d0c:	ldr	r1, [r0]
   17d10:	ldr	r2, [r0, #24]
   17d14:	add	r2, r2, r3
   17d18:	add	r1, r1, r2
   17d1c:	ldrsb	r3, [r1]
   17d20:	cmp	lr, #0
   17d24:	beq	17ca4 <__mempcpy_chk@plt+0x66c4>
   17d28:	cmn	r3, #1
   17d2c:	bgt	17ca4 <__mempcpy_chk@plt+0x66c4>
   17d30:	ldr	r0, [r0, #4]
   17d34:	add	r0, r0, ip
   17d38:	b	17ca0 <__mempcpy_chk@plt+0x66c0>
   17d3c:	ldr	r2, [r0, #80]	; 0x50
   17d40:	cmp	r2, #1
   17d44:	bne	17d54 <__mempcpy_chk@plt+0x6774>
   17d48:	ldr	r0, [r0, #4]
   17d4c:	ldrb	r0, [r0, r1]
   17d50:	bx	lr
   17d54:	ldr	r0, [r0, #8]
   17d58:	ldr	r0, [r0, r1, lsl #2]
   17d5c:	bx	lr
   17d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d64:	add	fp, sp, #28
   17d68:	sub	sp, sp, #20
   17d6c:	mov	r6, r2
   17d70:	mov	r7, r1
   17d74:	mov	r1, r0
   17d78:	ldr	r0, [r7]
   17d7c:	str	r0, [sp, #8]
   17d80:	ldr	r5, [fp, #12]
   17d84:	str	r5, [sp, #4]
   17d88:	ldr	r4, [fp, #8]
   17d8c:	str	r4, [sp]
   17d90:	str	r1, [sp, #12]
   17d94:	mov	r0, r1
   17d98:	mov	r1, r7
   17d9c:	str	r3, [sp, #16]
   17da0:	bl	17f64 <__mempcpy_chk@plt+0x6984>
   17da4:	cmp	r0, #0
   17da8:	bne	17de0 <__mempcpy_chk@plt+0x6800>
   17dac:	ldr	r1, [r5]
   17db0:	cmp	r1, #0
   17db4:	beq	17de0 <__mempcpy_chk@plt+0x6800>
   17db8:	mov	r6, #0
   17dbc:	b	17e64 <__mempcpy_chk@plt+0x6884>
   17dc0:	ldr	r0, [sp, #8]
   17dc4:	mov	r1, r5
   17dc8:	mov	r2, r8
   17dcc:	mov	r3, #16
   17dd0:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   17dd4:	cmp	r0, #0
   17dd8:	mov	r4, r9
   17ddc:	beq	17e70 <__mempcpy_chk@plt+0x6890>
   17de0:	mov	r5, r0
   17de4:	ldrb	r0, [r6, #4]
   17de8:	orr	r1, r0, #8
   17dec:	cmp	r1, #10
   17df0:	beq	17e60 <__mempcpy_chk@plt+0x6880>
   17df4:	cmp	r4, #0
   17df8:	beq	17e04 <__mempcpy_chk@plt+0x6824>
   17dfc:	cmp	r0, #9
   17e00:	beq	17e60 <__mempcpy_chk@plt+0x6880>
   17e04:	mov	r9, r4
   17e08:	str	r4, [sp]
   17e0c:	ldr	sl, [fp, #12]
   17e10:	str	sl, [sp, #4]
   17e14:	ldr	r0, [sp, #12]
   17e18:	mov	r1, r7
   17e1c:	mov	r2, r6
   17e20:	ldr	r3, [sp, #16]
   17e24:	bl	17f64 <__mempcpy_chk@plt+0x6984>
   17e28:	mov	r8, r0
   17e2c:	cmp	r0, #0
   17e30:	bne	17e40 <__mempcpy_chk@plt+0x6860>
   17e34:	ldr	r0, [sl]
   17e38:	cmp	r0, #0
   17e3c:	bne	17eac <__mempcpy_chk@plt+0x68cc>
   17e40:	cmp	r5, #0
   17e44:	cmpne	r8, #0
   17e48:	bne	17dc0 <__mempcpy_chk@plt+0x67e0>
   17e4c:	cmp	r5, #0
   17e50:	movne	r8, r5
   17e54:	mov	r0, r8
   17e58:	mov	r4, r9
   17e5c:	b	17de0 <__mempcpy_chk@plt+0x6800>
   17e60:	mov	r6, r5
   17e64:	mov	r0, r6
   17e68:	sub	sp, fp, #28
   17e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e70:	movw	r4, #32588	; 0x7f4c
   17e74:	movt	r4, #1
   17e78:	mov	r6, #0
   17e7c:	mov	r0, r8
   17e80:	mov	r1, r4
   17e84:	mov	r2, #0
   17e88:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   17e8c:	mov	r0, r5
   17e90:	mov	r1, r4
   17e94:	mov	r2, #0
   17e98:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   17e9c:	mov	r0, #12
   17ea0:	ldr	r1, [fp, #12]
   17ea4:	str	r0, [r1]
   17ea8:	b	17e64 <__mempcpy_chk@plt+0x6884>
   17eac:	cmp	r5, #0
   17eb0:	mov	r6, #0
   17eb4:	beq	17e64 <__mempcpy_chk@plt+0x6884>
   17eb8:	movw	r1, #32588	; 0x7f4c
   17ebc:	movt	r1, #1
   17ec0:	mov	r6, #0
   17ec4:	mov	r0, r5
   17ec8:	mov	r2, #0
   17ecc:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   17ed0:	b	17e64 <__mempcpy_chk@plt+0x6884>
   17ed4:	push	{r4, r5, r6, sl, fp, lr}
   17ed8:	add	fp, sp, #16
   17edc:	mov	r4, r2
   17ee0:	mov	r5, r1
   17ee4:	b	17eec <__mempcpy_chk@plt+0x690c>
   17ee8:	ldr	r0, [r6, #8]
   17eec:	mov	r6, r0
   17ef0:	ldr	r0, [r0, #4]
   17ef4:	cmp	r0, #0
   17ef8:	bne	17eec <__mempcpy_chk@plt+0x690c>
   17efc:	ldr	r0, [r6, #8]
   17f00:	cmp	r0, #0
   17f04:	bne	17ee8 <__mempcpy_chk@plt+0x6908>
   17f08:	mov	r0, r4
   17f0c:	mov	r1, r6
   17f10:	blx	r5
   17f14:	cmp	r0, #0
   17f18:	bne	17f48 <__mempcpy_chk@plt+0x6968>
   17f1c:	ldr	r1, [r6]
   17f20:	cmp	r1, #0
   17f24:	beq	17f48 <__mempcpy_chk@plt+0x6968>
   17f28:	ldr	r0, [r1, #8]
   17f2c:	cmp	r0, r6
   17f30:	mov	r6, r1
   17f34:	beq	17f08 <__mempcpy_chk@plt+0x6928>
   17f38:	cmp	r0, #0
   17f3c:	mov	r6, r1
   17f40:	beq	17f08 <__mempcpy_chk@plt+0x6928>
   17f44:	b	17eec <__mempcpy_chk@plt+0x690c>
   17f48:	pop	{r4, r5, r6, sl, fp, pc}
   17f4c:	push	{fp, lr}
   17f50:	mov	fp, sp
   17f54:	add	r0, r1, #20
   17f58:	bl	15f0c <__mempcpy_chk@plt+0x492c>
   17f5c:	mov	r0, #0
   17f60:	pop	{fp, pc}
   17f64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f68:	add	fp, sp, #28
   17f6c:	sub	sp, sp, #12
   17f70:	mov	r9, r3
   17f74:	mov	r5, r2
   17f78:	mov	r6, r1
   17f7c:	mov	sl, r0
   17f80:	and	ip, r3, #16
   17f84:	and	r8, r3, #32
   17f88:	and	r0, r3, #16777216	; 0x1000000
   17f8c:	str	r0, [sp, #8]
   17f90:	ldr	r3, [fp, #12]
   17f94:	ldr	r4, [fp, #8]
   17f98:	mvn	r1, #0
   17f9c:	ldr	r0, [r5, #4]
   17fa0:	uxtab	r1, r1, r0
   17fa4:	ldr	r7, [r6]
   17fa8:	add	r2, pc, #0
   17fac:	ldr	pc, [r2, r1, lsl #2]
   17fb0:	andeq	r8, r1, r8, lsr r1
   17fb4:	strdeq	r8, [r1], -r0
   17fb8:	andeq	r8, r1, ip, lsl #10
   17fbc:	strdeq	r8, [r1], -r4
   17fc0:	andeq	r8, r1, r0, asr r2
   17fc4:	andeq	r8, r1, ip, lsl #10
   17fc8:	andeq	r8, r1, ip, lsl #10
   17fcc:	muleq	r1, r4, r2
   17fd0:	strdeq	r8, [r1], -r0
   17fd4:	strdeq	r8, [r1], -r0
   17fd8:	andeq	r8, r1, ip, asr #32
   17fdc:			; <UNDEFINED> instruction: 0x000182bc
   17fe0:	andeq	r8, r1, ip, lsl #10
   17fe4:	andeq	r8, r1, ip, lsl #10
   17fe8:	andeq	r8, r1, ip, lsl #10
   17fec:	andeq	r8, r1, ip, lsl #10
   17ff0:	andeq	r8, r1, ip, lsl #10
   17ff4:	andeq	r8, r1, ip, asr #32
   17ff8:	andeq	r8, r1, ip, asr #32
   17ffc:	strdeq	r8, [r1], -ip
   18000:	andeq	r8, r1, ip, lsl #10
   18004:	andeq	r8, r1, ip, lsl #10
   18008:	andeq	r8, r1, r0, asr #32
   1800c:	andeq	r8, r1, r0, lsl #2
   18010:	andeq	r8, r1, ip, lsl #10
   18014:	andeq	r8, r1, ip, lsl #10
   18018:	andeq	r8, r1, ip, lsl #10
   1801c:	andeq	r8, r1, ip, lsl #10
   18020:	andeq	r8, r1, ip, lsl #10
   18024:	andeq	r8, r1, ip, lsl #10
   18028:	andeq	r8, r1, ip, lsl #10
   1802c:	andeq	r8, r1, r0, lsl #1
   18030:	andeq	r8, r1, r0, lsl #1
   18034:	strheq	r8, [r1], -r4
   18038:	strheq	r8, [r1], -r4
   1803c:	strdeq	r8, [r1], -r4
   18040:	ldr	r1, [sp, #8]
   18044:	cmp	r1, #0
   18048:	bne	184c0 <__mempcpy_chk@plt+0x6ee0>
   1804c:	cmp	r8, #0
   18050:	bne	184c0 <__mempcpy_chk@plt+0x6ee0>
   18054:	cmp	ip, #0
   18058:	beq	180f0 <__mempcpy_chk@plt+0x6b10>
   1805c:	mov	r0, r5
   18060:	mov	r1, sl
   18064:	mov	r2, r9
   18068:	mov	r7, ip
   1806c:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   18070:	mvn	r1, #0
   18074:	mov	ip, r7
   18078:	ldr	r3, [fp, #12]
   1807c:	b	17f9c <__mempcpy_chk@plt+0x69bc>
   18080:	mov	r8, sl
   18084:	ldr	r1, [sl, #64]	; 0x40
   18088:	mvn	r2, #32
   1808c:	uxtab	r0, r2, r0
   18090:	clz	r0, r0
   18094:	lsr	r0, r0, #5
   18098:	stm	sp, {r0, r3}
   1809c:	movw	r2, #13750	; 0x35b6
   180a0:	movt	r2, #2
   180a4:	mov	r4, r3
   180a8:	movw	r3, #12355	; 0x3043
   180ac:	movt	r3, #2
   180b0:	b	180e4 <__mempcpy_chk@plt+0x6b04>
   180b4:	mov	r8, sl
   180b8:	ldr	r1, [sl, #64]	; 0x40
   180bc:	mvn	r2, #34	; 0x22
   180c0:	uxtab	r0, r2, r0
   180c4:	clz	r0, r0
   180c8:	lsr	r0, r0, #5
   180cc:	stm	sp, {r0, r3}
   180d0:	movw	r2, #13756	; 0x35bc
   180d4:	movt	r2, #2
   180d8:	mov	r4, r3
   180dc:	movw	r3, #12505	; 0x30d9
   180e0:	movt	r3, #2
   180e4:	mov	r0, r7
   180e8:	bl	18cd4 <__mempcpy_chk@plt+0x76f4>
   180ec:	b	1831c <__mempcpy_chk@plt+0x6d3c>
   180f0:	tst	r9, #131072	; 0x20000
   180f4:	uxtbeq	r1, r0
   180f8:	cmpeq	r1, #9
   180fc:	beq	18400 <__mempcpy_chk@plt+0x6e20>
   18100:	mov	r1, #1
   18104:	bfi	r0, r1, #0, #8
   18108:	str	r0, [r5, #4]
   1810c:	mov	r4, #0
   18110:	mov	r0, r7
   18114:	mov	r1, #0
   18118:	mov	r2, #0
   1811c:	mov	r3, r5
   18120:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18124:	mov	r6, r0
   18128:	cmp	r0, #0
   1812c:	mov	r8, sl
   18130:	bne	18334 <__mempcpy_chk@plt+0x6d54>
   18134:	b	18474 <__mempcpy_chk@plt+0x6e94>
   18138:	mov	r4, #0
   1813c:	mov	r0, r7
   18140:	mov	r1, #0
   18144:	mov	r2, #0
   18148:	mov	r3, r5
   1814c:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18150:	cmp	r0, #0
   18154:	beq	18474 <__mempcpy_chk@plt+0x6e94>
   18158:	mov	r6, r0
   1815c:	ldr	r0, [r7, #92]	; 0x5c
   18160:	cmp	r0, #2
   18164:	mov	r8, sl
   18168:	blt	18334 <__mempcpy_chk@plt+0x6d54>
   1816c:	ldr	r0, [r8, #40]	; 0x28
   18170:	ldr	r1, [r8, #56]	; 0x38
   18174:	cmp	r1, r0
   18178:	ble	18334 <__mempcpy_chk@plt+0x6d54>
   1817c:	ldr	r1, [r8, #28]
   18180:	cmp	r0, r1
   18184:	beq	18334 <__mempcpy_chk@plt+0x6d54>
   18188:	ldr	r1, [r8, #8]
   1818c:	ldr	r0, [r1, r0, lsl #2]
   18190:	cmn	r0, #1
   18194:	bne	18334 <__mempcpy_chk@plt+0x6d54>
   18198:	mov	r0, r5
   1819c:	mov	r1, r8
   181a0:	mov	r2, r9
   181a4:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   181a8:	mov	r0, r7
   181ac:	mov	r1, #0
   181b0:	mov	r2, #0
   181b4:	mov	r3, r5
   181b8:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   181bc:	mov	r4, r0
   181c0:	mov	r0, r7
   181c4:	mov	r1, r6
   181c8:	mov	r2, r4
   181cc:	mov	r3, #16
   181d0:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   181d4:	cmp	r4, #0
   181d8:	ldr	r1, [fp, #12]
   181dc:	movne	r6, r0
   181e0:	cmpne	r0, #0
   181e4:	bne	1816c <__mempcpy_chk@plt+0x6b8c>
   181e8:	mov	r0, #12
   181ec:	str	r0, [r1]
   181f0:	b	184f0 <__mempcpy_chk@plt+0x6f10>
   181f4:	ldr	r0, [r5]
   181f8:	mov	r1, #1
   181fc:	ldr	r2, [r7, #84]	; 0x54
   18200:	tst	r2, r1, lsl r0
   18204:	beq	18500 <__mempcpy_chk@plt+0x6f20>
   18208:	lsl	r0, r1, r0
   1820c:	ldr	r1, [r7, #80]	; 0x50
   18210:	orr	r0, r1, r0
   18214:	str	r0, [r7, #80]	; 0x50
   18218:	mov	r4, #0
   1821c:	mov	r0, r7
   18220:	mov	r1, #0
   18224:	mov	r2, #0
   18228:	mov	r3, r5
   1822c:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18230:	cmp	r0, #0
   18234:	beq	18474 <__mempcpy_chk@plt+0x6e94>
   18238:	mov	r6, r0
   1823c:	mov	r8, sl
   18240:	ldr	r0, [r7, #76]	; 0x4c
   18244:	add	r0, r0, #1
   18248:	str	r0, [r7, #76]	; 0x4c
   1824c:	b	18284 <__mempcpy_chk@plt+0x6ca4>
   18250:	mov	r4, #0
   18254:	mov	r0, r7
   18258:	mov	r1, #0
   1825c:	mov	r2, #0
   18260:	mov	r3, r5
   18264:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18268:	cmp	r0, #0
   1826c:	beq	18474 <__mempcpy_chk@plt+0x6e94>
   18270:	mov	r6, r0
   18274:	ldr	r0, [r7, #92]	; 0x5c
   18278:	cmp	r0, #2
   1827c:	mov	r8, sl
   18280:	blt	18334 <__mempcpy_chk@plt+0x6d54>
   18284:	ldrb	r0, [r7, #88]	; 0x58
   18288:	orr	r0, r0, #2
   1828c:	strb	r0, [r7, #88]	; 0x58
   18290:	b	18334 <__mempcpy_chk@plt+0x6d54>
   18294:	add	r0, r4, #1
   18298:	stm	sp, {r0, r3}
   1829c:	mov	r8, sl
   182a0:	mov	r0, sl
   182a4:	mov	r1, r6
   182a8:	mov	r2, r5
   182ac:	mov	r4, r3
   182b0:	mov	r3, r9
   182b4:	bl	185b8 <__mempcpy_chk@plt+0x6fd8>
   182b8:	b	1831c <__mempcpy_chk@plt+0x6d3c>
   182bc:	ldr	r0, [r5]
   182c0:	movw	r1, #783	; 0x30f
   182c4:	tst	r0, r1
   182c8:	beq	182e0 <__mempcpy_chk@plt+0x6d00>
   182cc:	ldrb	r0, [r7, #88]	; 0x58
   182d0:	tst	r0, #16
   182d4:	moveq	r0, r7
   182d8:	bleq	18bec <__mempcpy_chk@plt+0x760c>
   182dc:	ldr	r0, [r5]
   182e0:	cmp	r0, #256	; 0x100
   182e4:	beq	1840c <__mempcpy_chk@plt+0x6e2c>
   182e8:	cmp	r0, #512	; 0x200
   182ec:	bne	18484 <__mempcpy_chk@plt+0x6ea4>
   182f0:	mov	r6, #10
   182f4:	mov	r0, #5
   182f8:	b	18414 <__mempcpy_chk@plt+0x6e34>
   182fc:	str	r3, [sp]
   18300:	mov	r8, sl
   18304:	mov	r0, sl
   18308:	mov	r1, r7
   1830c:	mov	r2, r5
   18310:	mov	r4, r3
   18314:	mov	r3, r9
   18318:	bl	186d0 <__mempcpy_chk@plt+0x70f0>
   1831c:	mov	r6, r0
   18320:	cmp	r0, #0
   18324:	bne	18334 <__mempcpy_chk@plt+0x6d54>
   18328:	ldr	r0, [r4]
   1832c:	cmp	r0, #0
   18330:	bne	184f0 <__mempcpy_chk@plt+0x6f10>
   18334:	mov	r0, r5
   18338:	mov	r1, r8
   1833c:	mov	r2, r9
   18340:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   18344:	mov	r4, #1
   18348:	movw	r8, #2048	; 0x800
   1834c:	movt	r8, #140	; 0x8c
   18350:	ldr	r2, [fp, #12]
   18354:	ldrb	r0, [r5, #4]
   18358:	cmp	r0, #23
   1835c:	bhi	183ec <__mempcpy_chk@plt+0x6e0c>
   18360:	tst	r8, r4, lsl r0
   18364:	beq	183ec <__mempcpy_chk@plt+0x6e0c>
   18368:	str	r9, [sp]
   1836c:	str	r2, [sp, #4]
   18370:	mov	r0, r6
   18374:	mov	r1, sl
   18378:	mov	r2, r7
   1837c:	mov	r3, r5
   18380:	bl	18ec4 <__mempcpy_chk@plt+0x78e4>
   18384:	ldr	r2, [fp, #12]
   18388:	cmp	r0, #0
   1838c:	bne	1839c <__mempcpy_chk@plt+0x6dbc>
   18390:	ldr	r1, [r2]
   18394:	cmp	r1, #0
   18398:	bne	184cc <__mempcpy_chk@plt+0x6eec>
   1839c:	ldr	r1, [sp, #8]
   183a0:	cmp	r1, #0
   183a4:	mov	r6, r0
   183a8:	beq	18354 <__mempcpy_chk@plt+0x6d74>
   183ac:	ldrb	r1, [r5, #4]
   183b0:	cmp	r1, #23
   183b4:	beq	183c4 <__mempcpy_chk@plt+0x6de4>
   183b8:	cmp	r1, #11
   183bc:	mov	r6, r0
   183c0:	bne	18354 <__mempcpy_chk@plt+0x6d74>
   183c4:	cmp	r0, #0
   183c8:	beq	183e0 <__mempcpy_chk@plt+0x6e00>
   183cc:	movw	r1, #32588	; 0x7f4c
   183d0:	movt	r1, #1
   183d4:	mov	r2, #0
   183d8:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   183dc:	ldr	r2, [fp, #12]
   183e0:	mov	r0, #13
   183e4:	str	r0, [r2]
   183e8:	b	184f0 <__mempcpy_chk@plt+0x6f10>
   183ec:	mov	r4, r6
   183f0:	b	184f4 <__mempcpy_chk@plt+0x6f14>
   183f4:	mov	r0, #5
   183f8:	str	r0, [r3]
   183fc:	b	184f0 <__mempcpy_chk@plt+0x6f10>
   18400:	mov	r0, #16
   18404:	str	r0, [r3]
   18408:	b	184f0 <__mempcpy_chk@plt+0x6f10>
   1840c:	mov	r6, #9
   18410:	mov	r0, #6
   18414:	str	r0, [r5]
   18418:	mov	r4, #0
   1841c:	mov	r0, r7
   18420:	mov	r1, #0
   18424:	mov	r2, #0
   18428:	mov	r3, r5
   1842c:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18430:	mov	r8, r0
   18434:	str	r6, [r5]
   18438:	mov	r0, r7
   1843c:	mov	r1, #0
   18440:	mov	r2, #0
   18444:	mov	r3, r5
   18448:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   1844c:	mov	r1, r0
   18450:	mov	r0, r7
   18454:	mov	r7, r1
   18458:	mov	r1, r8
   1845c:	mov	r2, r7
   18460:	mov	r3, #10
   18464:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   18468:	cmp	r8, #0
   1846c:	cmpne	r7, #0
   18470:	bne	1849c <__mempcpy_chk@plt+0x6ebc>
   18474:	mov	r0, #12
   18478:	ldr	r1, [fp, #12]
   1847c:	str	r0, [r1]
   18480:	b	184f4 <__mempcpy_chk@plt+0x6f14>
   18484:	mov	r4, #0
   18488:	mov	r0, r7
   1848c:	mov	r1, #0
   18490:	mov	r2, #0
   18494:	mov	r3, r5
   18498:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   1849c:	mov	r6, r0
   184a0:	cmp	r0, #0
   184a4:	beq	18474 <__mempcpy_chk@plt+0x6e94>
   184a8:	mov	r0, r5
   184ac:	mov	r1, sl
   184b0:	mov	r2, r9
   184b4:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   184b8:	mov	r4, r6
   184bc:	b	184f4 <__mempcpy_chk@plt+0x6f14>
   184c0:	mov	r0, #13
   184c4:	str	r0, [r3]
   184c8:	b	184f0 <__mempcpy_chk@plt+0x6f10>
   184cc:	cmp	r6, #0
   184d0:	beq	184f0 <__mempcpy_chk@plt+0x6f10>
   184d4:	movw	r1, #32588	; 0x7f4c
   184d8:	movt	r1, #1
   184dc:	mov	r4, #0
   184e0:	mov	r0, r6
   184e4:	mov	r2, #0
   184e8:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   184ec:	b	184f4 <__mempcpy_chk@plt+0x6f14>
   184f0:	mov	r4, #0
   184f4:	mov	r0, r4
   184f8:	sub	sp, fp, #28
   184fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18500:	mov	r0, #6
   18504:	ldr	r1, [fp, #12]
   18508:	b	181ec <__mempcpy_chk@plt+0x6c0c>
   1850c:	push	{r4, r5, r6, r7, fp, lr}
   18510:	add	fp, sp, #16
   18514:	mov	r6, r3
   18518:	mov	r4, r2
   1851c:	mov	r5, r1
   18520:	mov	r7, r0
   18524:	ldr	r0, [r0, #64]	; 0x40
   18528:	cmp	r0, #31
   1852c:	beq	18588 <__mempcpy_chk@plt+0x6fa8>
   18530:	ldr	r0, [r7, #56]	; 0x38
   18534:	ldr	r1, [r7, #64]	; 0x40
   18538:	add	r2, r1, #1
   1853c:	str	r2, [r7, #64]	; 0x40
   18540:	add	r0, r0, r1, lsl #5
   18544:	mov	r1, #0
   18548:	str	r1, [r0, #4]!
   1854c:	str	r4, [r0, #8]
   18550:	str	r5, [r0, #4]
   18554:	ldm	r6, {r2, r3}
   18558:	mvn	r7, #0
   1855c:	str	r7, [r0, #28]
   18560:	str	r1, [r0, #16]
   18564:	str	r1, [r0, #12]
   18568:	str	r2, [r0, #20]
   1856c:	bic	r1, r3, #786432	; 0xc0000
   18570:	str	r1, [r0, #24]
   18574:	cmp	r5, #0
   18578:	strne	r0, [r5]
   1857c:	cmp	r4, #0
   18580:	strne	r0, [r4]
   18584:	pop	{r4, r5, r6, r7, fp, pc}
   18588:	mov	r0, #996	; 0x3e4
   1858c:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   18590:	cmp	r0, #0
   18594:	beq	185b0 <__mempcpy_chk@plt+0x6fd0>
   18598:	ldr	r1, [r7, #56]	; 0x38
   1859c:	str	r1, [r0]
   185a0:	mov	r1, #0
   185a4:	str	r1, [r7, #64]	; 0x40
   185a8:	str	r0, [r7, #56]	; 0x38
   185ac:	b	18530 <__mempcpy_chk@plt+0x6f50>
   185b0:	mov	r0, #0
   185b4:	pop	{r4, r5, r6, r7, fp, pc}
   185b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185bc:	add	fp, sp, #28
   185c0:	sub	sp, sp, #12
   185c4:	mov	r5, r3
   185c8:	mov	r6, r2
   185cc:	mov	r7, r1
   185d0:	mov	r4, r0
   185d4:	ldr	r8, [r1]
   185d8:	ldr	sl, [r1, #24]
   185dc:	add	r0, sl, #1
   185e0:	str	r0, [r1, #24]
   185e4:	orr	r2, r3, #8388608	; 0x800000
   185e8:	mov	r0, r6
   185ec:	mov	r1, r4
   185f0:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   185f4:	ldrb	r0, [r6, #4]
   185f8:	mov	r1, #0
   185fc:	ldr	r9, [fp, #12]
   18600:	cmp	r0, #9
   18604:	beq	18650 <__mempcpy_chk@plt+0x7070>
   18608:	ldr	r0, [fp, #8]
   1860c:	stm	sp, {r0, r9}
   18610:	mov	r0, r4
   18614:	mov	r1, r7
   18618:	mov	r2, r6
   1861c:	mov	r3, r5
   18620:	bl	17328 <__mempcpy_chk@plt+0x5d48>
   18624:	mov	r1, r0
   18628:	ldr	r0, [r9]
   1862c:	mov	r5, #0
   18630:	cmp	r0, #0
   18634:	bne	1868c <__mempcpy_chk@plt+0x70ac>
   18638:	ldrb	r0, [r6, #4]
   1863c:	cmp	r0, #9
   18640:	bne	186a4 <__mempcpy_chk@plt+0x70c4>
   18644:	ldr	r0, [r9]
   18648:	cmp	r0, #0
   1864c:	bne	1868c <__mempcpy_chk@plt+0x70ac>
   18650:	cmp	sl, #8
   18654:	bhi	18668 <__mempcpy_chk@plt+0x7088>
   18658:	ldr	r0, [r8, #84]	; 0x54
   1865c:	mov	r2, #1
   18660:	orr	r0, r0, r2, lsl sl
   18664:	str	r0, [r8, #84]	; 0x54
   18668:	mov	r5, #0
   1866c:	mov	r0, r8
   18670:	mov	r2, #0
   18674:	mov	r3, #17
   18678:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   1867c:	cmp	r0, #0
   18680:	beq	18698 <__mempcpy_chk@plt+0x70b8>
   18684:	str	sl, [r0, #20]
   18688:	mov	r5, r0
   1868c:	mov	r0, r5
   18690:	sub	sp, fp, #28
   18694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18698:	mov	r0, #12
   1869c:	str	r0, [r9]
   186a0:	b	1868c <__mempcpy_chk@plt+0x70ac>
   186a4:	cmp	r1, #0
   186a8:	beq	186c4 <__mempcpy_chk@plt+0x70e4>
   186ac:	movw	r2, #32588	; 0x7f4c
   186b0:	movt	r2, #1
   186b4:	mov	r0, r1
   186b8:	mov	r1, r2
   186bc:	mov	r2, #0
   186c0:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   186c4:	mov	r0, #8
   186c8:	str	r0, [r9]
   186cc:	b	1868c <__mempcpy_chk@plt+0x70ac>
   186d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   186d4:	add	fp, sp, #28
   186d8:	sub	sp, sp, #124	; 0x7c
   186dc:	mov	r8, r3
   186e0:	mov	r6, r2
   186e4:	mov	r9, r1
   186e8:	mov	r7, r0
   186ec:	mov	r5, #0
   186f0:	str	r5, [fp, #-32]	; 0xffffffe0
   186f4:	str	r5, [fp, #-36]	; 0xffffffdc
   186f8:	mov	r0, #32
   186fc:	mov	r1, #1
   18700:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   18704:	mov	r4, r0
   18708:	mov	r0, #40	; 0x28
   1870c:	mov	r1, #1
   18710:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   18714:	mov	sl, r0
   18718:	cmp	r4, #0
   1871c:	cmpne	sl, #0
   18720:	beq	18ba4 <__mempcpy_chk@plt+0x75c4>
   18724:	mov	r0, r6
   18728:	mov	r1, r7
   1872c:	mov	r2, r8
   18730:	bl	191f8 <__mempcpy_chk@plt+0x7c18>
   18734:	mov	r5, r0
   18738:	ldrb	r0, [r6, #4]
   1873c:	cmp	r0, #25
   18740:	beq	18754 <__mempcpy_chk@plt+0x7174>
   18744:	cmp	r0, #2
   18748:	beq	18b9c <__mempcpy_chk@plt+0x75bc>
   1874c:	mov	r0, #0
   18750:	b	187a0 <__mempcpy_chk@plt+0x71c0>
   18754:	ldrb	r0, [sl, #16]
   18758:	orr	r0, r0, #1
   1875c:	strb	r0, [sl, #16]
   18760:	tst	r8, #256	; 0x100
   18764:	movne	r0, r4
   18768:	movne	r1, #10
   1876c:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   18770:	ldr	r0, [r7, #40]	; 0x28
   18774:	add	r0, r0, r5
   18778:	str	r0, [r7, #40]	; 0x28
   1877c:	mov	r0, r6
   18780:	mov	r1, r7
   18784:	mov	r2, r8
   18788:	bl	191f8 <__mempcpy_chk@plt+0x7c18>
   1878c:	mov	r5, r0
   18790:	ldrb	r0, [r6, #4]
   18794:	cmp	r0, #2
   18798:	beq	18b9c <__mempcpy_chk@plt+0x75bc>
   1879c:	mov	r0, #1
   187a0:	str	r0, [sp, #20]
   187a4:	ldr	r0, [r6, #4]
   187a8:	uxtb	r1, r0
   187ac:	cmp	r1, #21
   187b0:	moveq	r1, #1
   187b4:	bfieq	r0, r1, #0, #8
   187b8:	streq	r0, [r6, #4]
   187bc:	str	sl, [sp, #24]
   187c0:	add	r0, sp, #68	; 0x44
   187c4:	str	r0, [fp, #-40]	; 0xffffffd8
   187c8:	mov	r0, #3
   187cc:	str	r0, [fp, #-44]	; 0xffffffd4
   187d0:	mov	r0, #1
   187d4:	str	r8, [sp]
   187d8:	str	r0, [sp, #4]
   187dc:	sub	r0, fp, #44	; 0x2c
   187e0:	mov	r1, r7
   187e4:	mov	r2, r6
   187e8:	mov	r3, r5
   187ec:	bl	19390 <__mempcpy_chk@plt+0x7db0>
   187f0:	cmp	r0, #0
   187f4:	bne	18b8c <__mempcpy_chk@plt+0x75ac>
   187f8:	mov	r0, #0
   187fc:	str	r0, [sp, #16]
   18800:	mov	r0, r6
   18804:	mov	r1, r7
   18808:	mov	r2, r8
   1880c:	bl	191f8 <__mempcpy_chk@plt+0x7c18>
   18810:	mov	sl, r0
   18814:	ldr	r5, [fp, #-44]	; 0xffffffd4
   18818:	cmp	r5, #2
   1881c:	beq	18940 <__mempcpy_chk@plt+0x7360>
   18820:	cmp	r5, #4
   18824:	bne	18848 <__mempcpy_chk@plt+0x7268>
   18828:	ldr	r0, [r7, #64]	; 0x40
   1882c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18830:	stm	sp, {r1, r8}
   18834:	mov	r1, r4
   18838:	ldr	r2, [sp, #24]
   1883c:	sub	r3, fp, #36	; 0x24
   18840:	bl	19730 <__mempcpy_chk@plt+0x8150>
   18844:	b	1894c <__mempcpy_chk@plt+0x736c>
   18848:	ldrb	r0, [r6, #4]
   1884c:	cmp	r0, #22
   18850:	beq	18860 <__mempcpy_chk@plt+0x7280>
   18854:	cmp	r0, #2
   18858:	bne	18918 <__mempcpy_chk@plt+0x7338>
   1885c:	b	18b88 <__mempcpy_chk@plt+0x75a8>
   18860:	ldr	r0, [r7, #40]	; 0x28
   18864:	add	r0, r0, sl
   18868:	str	r0, [r7, #40]	; 0x28
   1886c:	add	r0, sp, #28
   18870:	mov	r1, r7
   18874:	mov	r2, r8
   18878:	bl	191f8 <__mempcpy_chk@plt+0x7c18>
   1887c:	mov	r3, r0
   18880:	ldrb	r0, [sp, #32]
   18884:	cmp	r0, #21
   18888:	beq	18904 <__mempcpy_chk@plt+0x7324>
   1888c:	cmp	r0, #2
   18890:	sub	r1, fp, #52	; 0x34
   18894:	beq	18b88 <__mempcpy_chk@plt+0x75a8>
   18898:	mov	r0, #3
   1889c:	str	r0, [fp, #-52]	; 0xffffffcc
   188a0:	add	r0, sp, #36	; 0x24
   188a4:	str	r0, [fp, #-48]	; 0xffffffd0
   188a8:	str	r8, [sp]
   188ac:	mov	r0, #1
   188b0:	str	r0, [sp, #4]
   188b4:	mov	r0, r1
   188b8:	mov	r5, r1
   188bc:	mov	r1, r7
   188c0:	add	r2, sp, #28
   188c4:	bl	19390 <__mempcpy_chk@plt+0x7db0>
   188c8:	cmp	r0, #0
   188cc:	bne	18b8c <__mempcpy_chk@plt+0x75ac>
   188d0:	mov	r0, r6
   188d4:	mov	r1, r7
   188d8:	mov	r2, r8
   188dc:	bl	191f8 <__mempcpy_chk@plt+0x7c18>
   188e0:	mov	sl, r0
   188e4:	stm	sp, {r5, r9}
   188e8:	str	r8, [sp, #8]
   188ec:	mov	r0, r4
   188f0:	ldr	r1, [sp, #24]
   188f4:	sub	r2, fp, #32
   188f8:	sub	r3, fp, #44	; 0x2c
   188fc:	bl	19498 <__mempcpy_chk@plt+0x7eb8>
   18900:	b	1894c <__mempcpy_chk@plt+0x736c>
   18904:	ldr	r0, [r7, #40]	; 0x28
   18908:	sub	r0, r0, sl
   1890c:	str	r0, [r7, #40]	; 0x28
   18910:	mov	r0, #1
   18914:	strb	r0, [r6, #4]
   18918:	add	r0, pc, #0
   1891c:	ldr	pc, [r0, r5, lsl #2]
   18920:	andeq	r8, r1, r0, lsr r9
   18924:	andeq	r8, r1, ip, lsr #19
   18928:	andeq	r8, r1, r0, asr #18
   1892c:	ldrdeq	r8, [r1], -ip
   18930:	ldrb	r1, [fp, #-40]	; 0xffffffd8
   18934:	mov	r0, r4
   18938:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   1893c:	b	1895c <__mempcpy_chk@plt+0x737c>
   18940:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18944:	mov	r0, r4
   18948:	bl	196b8 <__mempcpy_chk@plt+0x80d8>
   1894c:	ldr	r1, [fp, #8]
   18950:	str	r0, [r1]
   18954:	cmp	r0, #0
   18958:	bne	18b94 <__mempcpy_chk@plt+0x75b4>
   1895c:	ldrb	r0, [r6, #4]
   18960:	cmp	r0, #21
   18964:	beq	18a14 <__mempcpy_chk@plt+0x7434>
   18968:	cmp	r0, #2
   1896c:	beq	18b88 <__mempcpy_chk@plt+0x75a8>
   18970:	add	r0, sp, #68	; 0x44
   18974:	str	r0, [fp, #-40]	; 0xffffffd8
   18978:	mov	r0, #3
   1897c:	str	r0, [fp, #-44]	; 0xffffffd4
   18980:	str	r8, [sp]
   18984:	mov	r0, #0
   18988:	str	r0, [sp, #4]
   1898c:	sub	r0, fp, #44	; 0x2c
   18990:	mov	r1, r7
   18994:	mov	r2, r6
   18998:	mov	r3, sl
   1899c:	bl	19390 <__mempcpy_chk@plt+0x7db0>
   189a0:	cmp	r0, #0
   189a4:	beq	18800 <__mempcpy_chk@plt+0x7220>
   189a8:	b	18b8c <__mempcpy_chk@plt+0x75ac>
   189ac:	ldr	r5, [sp, #24]
   189b0:	ldr	r0, [r5, #20]
   189b4:	ldr	r1, [sp, #16]
   189b8:	cmp	r1, r0
   189bc:	beq	189ec <__mempcpy_chk@plt+0x740c>
   189c0:	ldr	r0, [r5]
   189c4:	ldr	r1, [r5, #20]
   189c8:	add	r2, r1, #1
   189cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   189d0:	str	r2, [r5, #20]
   189d4:	str	r3, [r0, r1, lsl #2]
   189d8:	b	1895c <__mempcpy_chk@plt+0x737c>
   189dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   189e0:	mov	r0, r4
   189e4:	bl	196f4 <__mempcpy_chk@plt+0x8114>
   189e8:	b	1894c <__mempcpy_chk@plt+0x736c>
   189ec:	mov	r1, #1
   189f0:	orr	r0, r1, r0, lsl #1
   189f4:	str	r0, [sp, #16]
   189f8:	lsl	r1, r0, #2
   189fc:	ldr	r0, [r5]
   18a00:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   18a04:	cmp	r0, #0
   18a08:	beq	18bc4 <__mempcpy_chk@plt+0x75e4>
   18a0c:	str	r0, [r5]
   18a10:	b	189c0 <__mempcpy_chk@plt+0x73e0>
   18a14:	ldr	r0, [r7, #40]	; 0x28
   18a18:	add	r0, r0, sl
   18a1c:	str	r0, [r7, #40]	; 0x28
   18a20:	ldr	r0, [sp, #20]
   18a24:	cmp	r0, #0
   18a28:	movne	r0, r4
   18a2c:	blne	19f8c <__mempcpy_chk@plt+0x89ac>
   18a30:	ldr	r0, [r9, #92]	; 0x5c
   18a34:	cmp	r0, #2
   18a38:	ldr	sl, [sp, #24]
   18a3c:	blt	18a4c <__mempcpy_chk@plt+0x746c>
   18a40:	ldr	r1, [r9, #60]	; 0x3c
   18a44:	mov	r0, r4
   18a48:	bl	19fac <__mempcpy_chk@plt+0x89cc>
   18a4c:	ldr	r0, [sl, #20]
   18a50:	cmp	r0, #0
   18a54:	bne	18a7c <__mempcpy_chk@plt+0x749c>
   18a58:	ldr	r0, [sl, #24]
   18a5c:	cmp	r0, #0
   18a60:	bne	18a7c <__mempcpy_chk@plt+0x749c>
   18a64:	ldr	r0, [sl, #28]
   18a68:	cmp	r0, #0
   18a6c:	bne	18a7c <__mempcpy_chk@plt+0x749c>
   18a70:	ldr	r0, [sl, #32]
   18a74:	cmp	r0, #0
   18a78:	beq	18b38 <__mempcpy_chk@plt+0x7558>
   18a7c:	ldrb	r0, [r9, #88]	; 0x58
   18a80:	orr	r0, r0, #2
   18a84:	strb	r0, [r9, #88]	; 0x58
   18a88:	str	sl, [sp, #68]	; 0x44
   18a8c:	ldr	r7, [sp, #72]	; 0x48
   18a90:	mov	r0, #6
   18a94:	strb	r0, [sp, #72]	; 0x48
   18a98:	mov	r6, #0
   18a9c:	add	r3, sp, #68	; 0x44
   18aa0:	mov	r0, r9
   18aa4:	mov	r1, #0
   18aa8:	mov	r2, #0
   18aac:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18ab0:	cmp	r0, #0
   18ab4:	beq	18bc8 <__mempcpy_chk@plt+0x75e8>
   18ab8:	mov	r5, r0
   18abc:	bic	r0, r7, #255	; 0xff
   18ac0:	ldr	r1, [r4, r6, lsl #2]
   18ac4:	cmp	r1, #0
   18ac8:	bne	18ae4 <__mempcpy_chk@plt+0x7504>
   18acc:	add	r6, r6, #1
   18ad0:	cmp	r6, #8
   18ad4:	bne	18ac0 <__mempcpy_chk@plt+0x74e0>
   18ad8:	mov	r0, r4
   18adc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   18ae0:	b	18b2c <__mempcpy_chk@plt+0x754c>
   18ae4:	str	r4, [sp, #68]	; 0x44
   18ae8:	orr	r0, r0, #3
   18aec:	str	r0, [sp, #72]	; 0x48
   18af0:	add	r3, sp, #68	; 0x44
   18af4:	mov	r0, r9
   18af8:	mov	r1, #0
   18afc:	mov	r2, #0
   18b00:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18b04:	cmp	r0, #0
   18b08:	beq	18bc8 <__mempcpy_chk@plt+0x75e8>
   18b0c:	mov	r1, r0
   18b10:	mov	r0, r9
   18b14:	mov	r2, r5
   18b18:	mov	r3, #10
   18b1c:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   18b20:	mov	r5, r0
   18b24:	cmp	r0, #0
   18b28:	beq	18bc8 <__mempcpy_chk@plt+0x75e8>
   18b2c:	mov	r0, r5
   18b30:	sub	sp, fp, #28
   18b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b38:	ldr	r0, [r9, #92]	; 0x5c
   18b3c:	cmp	r0, #2
   18b40:	blt	18b5c <__mempcpy_chk@plt+0x757c>
   18b44:	ldr	r0, [sl, #36]	; 0x24
   18b48:	cmp	r0, #0
   18b4c:	bne	18a7c <__mempcpy_chk@plt+0x749c>
   18b50:	ldrb	r0, [sl, #16]
   18b54:	tst	r0, #1
   18b58:	bne	18a7c <__mempcpy_chk@plt+0x749c>
   18b5c:	mov	r0, sl
   18b60:	bl	15f9c <__mempcpy_chk@plt+0x49bc>
   18b64:	str	r4, [sp, #68]	; 0x44
   18b68:	mov	r0, #3
   18b6c:	strb	r0, [sp, #72]	; 0x48
   18b70:	add	r3, sp, #68	; 0x44
   18b74:	mov	r0, r9
   18b78:	mov	r1, #0
   18b7c:	mov	r2, #0
   18b80:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18b84:	b	18b20 <__mempcpy_chk@plt+0x7540>
   18b88:	mov	r0, #7
   18b8c:	ldr	r1, [fp, #8]
   18b90:	str	r0, [r1]
   18b94:	ldr	sl, [sp, #24]
   18b98:	b	18bd4 <__mempcpy_chk@plt+0x75f4>
   18b9c:	mov	r0, #2
   18ba0:	b	18bcc <__mempcpy_chk@plt+0x75ec>
   18ba4:	mov	r0, r4
   18ba8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   18bac:	mov	r0, sl
   18bb0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   18bb4:	mov	r0, #12
   18bb8:	ldr	r1, [fp, #8]
   18bbc:	str	r0, [r1]
   18bc0:	b	18b2c <__mempcpy_chk@plt+0x754c>
   18bc4:	mov	sl, r5
   18bc8:	mov	r0, #12
   18bcc:	ldr	r1, [fp, #8]
   18bd0:	str	r0, [r1]
   18bd4:	mov	r0, r4
   18bd8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   18bdc:	mov	r0, sl
   18be0:	bl	15f9c <__mempcpy_chk@plt+0x49bc>
   18be4:	mov	r5, #0
   18be8:	b	18b2c <__mempcpy_chk@plt+0x754c>
   18bec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18bf0:	add	fp, sp, #24
   18bf4:	mov	r4, r0
   18bf8:	ldrb	r0, [r0, #88]	; 0x58
   18bfc:	orr	r1, r0, #16
   18c00:	strb	r1, [r4, #88]	; 0x58
   18c04:	tst	r0, #8
   18c08:	bne	18c48 <__mempcpy_chk@plt+0x7668>
   18c0c:	mvn	r1, #-134217727	; 0xf8000001
   18c10:	mvn	r2, #2013265921	; 0x78000001
   18c14:	movw	r3, #0
   18c18:	movt	r3, #1023	; 0x3ff
   18c1c:	mov	r7, #0
   18c20:	str	r7, [r4, #96]	; 0x60
   18c24:	str	r3, [r4, #100]	; 0x64
   18c28:	str	r2, [r4, #104]	; 0x68
   18c2c:	str	r1, [r4, #108]	; 0x6c
   18c30:	tst	r0, #4
   18c34:	beq	18c54 <__mempcpy_chk@plt+0x7674>
   18c38:	vmov.i32	q8, #0	; 0x00000000
   18c3c:	add	r0, r4, #112	; 0x70
   18c40:	vst1.32	{d16-d17}, [r0]
   18c44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18c48:	mov	r5, #0
   18c4c:	mov	r8, #0
   18c50:	b	18c5c <__mempcpy_chk@plt+0x767c>
   18c54:	mov	r8, #4
   18c58:	mov	r5, #128	; 0x80
   18c5c:	bl	114a8 <__ctype_b_loc@plt>
   18c60:	ldr	r0, [r0]
   18c64:	add	r6, r0, r5, lsl #1
   18c68:	mov	r1, #1
   18c6c:	b	18c84 <__mempcpy_chk@plt+0x76a4>
   18c70:	add	r6, r6, #64	; 0x40
   18c74:	add	r8, r8, #1
   18c78:	add	r5, r5, #32
   18c7c:	cmp	r8, #8
   18c80:	beq	18cd0 <__mempcpy_chk@plt+0x76f0>
   18c84:	add	r0, r4, r8, lsl #2
   18c88:	add	r2, r0, #96	; 0x60
   18c8c:	mov	r3, #0
   18c90:	mov	r0, r6
   18c94:	b	18cb4 <__mempcpy_chk@plt+0x76d4>
   18c98:	ldr	r7, [r2]
   18c9c:	orr	r7, r7, r1, lsl r3
   18ca0:	str	r7, [r2]
   18ca4:	add	r0, r0, #2
   18ca8:	add	r3, r3, #1
   18cac:	cmp	r3, #32
   18cb0:	beq	18c70 <__mempcpy_chk@plt+0x7690>
   18cb4:	add	r7, r5, r3
   18cb8:	cmp	r7, #95	; 0x5f
   18cbc:	beq	18c98 <__mempcpy_chk@plt+0x76b8>
   18cc0:	ldrh	r7, [r0]
   18cc4:	ands	r7, r7, #8
   18cc8:	beq	18ca4 <__mempcpy_chk@plt+0x76c4>
   18ccc:	b	18c98 <__mempcpy_chk@plt+0x76b8>
   18cd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cd8:	add	fp, sp, #28
   18cdc:	sub	sp, sp, #20
   18ce0:	mov	r8, r3
   18ce4:	mov	r6, r2
   18ce8:	mov	r4, r1
   18cec:	mov	r9, r0
   18cf0:	mov	r7, #0
   18cf4:	str	r7, [sp, #16]
   18cf8:	mov	r0, #32
   18cfc:	mov	r1, #1
   18d00:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   18d04:	ldr	r1, [fp, #12]
   18d08:	cmp	r0, #0
   18d0c:	beq	18e7c <__mempcpy_chk@plt+0x789c>
   18d10:	mov	r5, r0
   18d14:	mov	r0, #40	; 0x28
   18d18:	mov	r1, #1
   18d1c:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   18d20:	cmp	r0, #0
   18d24:	beq	18e88 <__mempcpy_chk@plt+0x78a8>
   18d28:	mov	sl, r0
   18d2c:	ldr	r1, [fp, #8]
   18d30:	ldrb	r0, [r0, #16]
   18d34:	and	r0, r0, #254	; 0xfe
   18d38:	orr	r0, r0, r1
   18d3c:	strb	r0, [sl, #16]
   18d40:	mov	r7, #0
   18d44:	stm	sp, {r6, r7}
   18d48:	add	r3, sp, #16
   18d4c:	mov	r0, r4
   18d50:	mov	r1, r5
   18d54:	mov	r2, sl
   18d58:	bl	19730 <__mempcpy_chk@plt+0x8150>
   18d5c:	cmp	r0, #0
   18d60:	bne	18ea4 <__mempcpy_chk@plt+0x78c4>
   18d64:	ldrb	r0, [r8]
   18d68:	cmp	r0, #0
   18d6c:	beq	18d8c <__mempcpy_chk@plt+0x77ac>
   18d70:	add	r4, r8, #1
   18d74:	uxtb	r1, r0
   18d78:	mov	r0, r5
   18d7c:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   18d80:	ldrb	r0, [r4], #1
   18d84:	cmp	r0, #0
   18d88:	bne	18d74 <__mempcpy_chk@plt+0x7794>
   18d8c:	ldr	r0, [fp, #8]
   18d90:	cmp	r0, #0
   18d94:	movne	r0, r5
   18d98:	blne	19f8c <__mempcpy_chk@plt+0x89ac>
   18d9c:	ldr	r0, [r9, #92]	; 0x5c
   18da0:	cmp	r0, #2
   18da4:	blt	18db4 <__mempcpy_chk@plt+0x77d4>
   18da8:	ldr	r1, [r9, #60]	; 0x3c
   18dac:	mov	r0, r5
   18db0:	bl	19fac <__mempcpy_chk@plt+0x89cc>
   18db4:	str	r5, [sp, #8]
   18db8:	ldr	r4, [sp, #12]
   18dbc:	bfc	r4, #0, #23
   18dc0:	orr	r0, r4, #3
   18dc4:	str	r0, [sp, #12]
   18dc8:	mov	r7, #0
   18dcc:	add	r3, sp, #8
   18dd0:	mov	r0, r9
   18dd4:	mov	r1, #0
   18dd8:	mov	r2, #0
   18ddc:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18de0:	cmp	r0, #0
   18de4:	beq	18e60 <__mempcpy_chk@plt+0x7880>
   18de8:	mov	r6, r0
   18dec:	ldr	r0, [r9, #92]	; 0x5c
   18df0:	cmp	r0, #2
   18df4:	blt	18e48 <__mempcpy_chk@plt+0x7868>
   18df8:	str	sl, [sp, #8]
   18dfc:	orr	r0, r4, #6
   18e00:	str	r0, [sp, #12]
   18e04:	ldrb	r0, [r9, #88]	; 0x58
   18e08:	orr	r0, r0, #2
   18e0c:	strb	r0, [r9, #88]	; 0x58
   18e10:	add	r3, sp, #8
   18e14:	mov	r0, r9
   18e18:	mov	r1, #0
   18e1c:	mov	r2, #0
   18e20:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   18e24:	cmp	r0, #0
   18e28:	beq	18e60 <__mempcpy_chk@plt+0x7880>
   18e2c:	mov	r2, r0
   18e30:	mov	r0, r9
   18e34:	mov	r1, r6
   18e38:	mov	r3, #10
   18e3c:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   18e40:	mov	r7, r0
   18e44:	b	18e54 <__mempcpy_chk@plt+0x7874>
   18e48:	mov	r0, sl
   18e4c:	bl	15f9c <__mempcpy_chk@plt+0x49bc>
   18e50:	mov	r7, r6
   18e54:	mov	r0, r7
   18e58:	sub	sp, fp, #28
   18e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e60:	mov	r0, r5
   18e64:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   18e68:	mov	r0, sl
   18e6c:	bl	15f9c <__mempcpy_chk@plt+0x49bc>
   18e70:	mov	r0, #12
   18e74:	ldr	r1, [fp, #12]
   18e78:	b	18e80 <__mempcpy_chk@plt+0x78a0>
   18e7c:	mov	r0, #12
   18e80:	str	r0, [r1]
   18e84:	b	18e54 <__mempcpy_chk@plt+0x7874>
   18e88:	mov	r0, r5
   18e8c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   18e90:	mov	r0, #12
   18e94:	ldr	r1, [fp, #12]
   18e98:	str	r0, [r1]
   18e9c:	mov	r7, #0
   18ea0:	b	18e54 <__mempcpy_chk@plt+0x7874>
   18ea4:	mov	r6, r0
   18ea8:	mov	r0, r5
   18eac:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   18eb0:	mov	r0, sl
   18eb4:	bl	15f9c <__mempcpy_chk@plt+0x49bc>
   18eb8:	ldr	r0, [fp, #12]
   18ebc:	str	r6, [r0]
   18ec0:	b	18e54 <__mempcpy_chk@plt+0x7874>
   18ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ec8:	add	fp, sp, #28
   18ecc:	sub	sp, sp, #20
   18ed0:	mov	r7, r3
   18ed4:	mov	r5, r2
   18ed8:	mov	r8, r1
   18edc:	mov	r4, r0
   18ee0:	ldrb	r0, [r3, #4]
   18ee4:	ldr	r1, [fp, #12]
   18ee8:	str	r1, [sp, #16]
   18eec:	ldr	sl, [fp, #8]
   18ef0:	cmp	r0, #23
   18ef4:	bne	18f4c <__mempcpy_chk@plt+0x796c>
   18ef8:	ldr	r0, [r7]
   18efc:	str	r0, [sp, #12]
   18f00:	ldr	r0, [r7, #4]
   18f04:	str	r0, [sp, #8]
   18f08:	ldr	r0, [r8, #40]	; 0x28
   18f0c:	str	r0, [sp, #4]
   18f10:	mov	r0, r8
   18f14:	mov	r1, r7
   18f18:	mov	r2, sl
   18f1c:	bl	1a1fc <__mempcpy_chk@plt+0x8c1c>
   18f20:	cmn	r0, #1
   18f24:	bne	18f68 <__mempcpy_chk@plt+0x7988>
   18f28:	ldrb	r0, [r7, #4]
   18f2c:	cmp	r0, #1
   18f30:	bne	18f44 <__mempcpy_chk@plt+0x7964>
   18f34:	ldrb	r0, [r7]
   18f38:	mov	r6, #0
   18f3c:	cmp	r0, #44	; 0x2c
   18f40:	beq	18f74 <__mempcpy_chk@plt+0x7994>
   18f44:	mov	r0, #10
   18f48:	b	191bc <__mempcpy_chk@plt+0x7bdc>
   18f4c:	mvn	r9, #0
   18f50:	cmp	r0, #19
   18f54:	movweq	r9, #1
   18f58:	sub	r0, r0, #18
   18f5c:	clz	r0, r0
   18f60:	lsr	r6, r0, #5
   18f64:	b	18fe4 <__mempcpy_chk@plt+0x7a04>
   18f68:	mov	r6, r0
   18f6c:	cmn	r0, #2
   18f70:	beq	190ec <__mempcpy_chk@plt+0x7b0c>
   18f74:	ldrb	r0, [r7, #4]
   18f78:	cmp	r0, #24
   18f7c:	mov	r9, r6
   18f80:	beq	18fb4 <__mempcpy_chk@plt+0x79d4>
   18f84:	cmp	r0, #1
   18f88:	bne	190ec <__mempcpy_chk@plt+0x7b0c>
   18f8c:	ldrb	r0, [r7]
   18f90:	cmp	r0, #44	; 0x2c
   18f94:	bne	190ec <__mempcpy_chk@plt+0x7b0c>
   18f98:	mov	r0, r8
   18f9c:	mov	r1, r7
   18fa0:	mov	r2, sl
   18fa4:	bl	1a1fc <__mempcpy_chk@plt+0x8c1c>
   18fa8:	mov	r9, r0
   18fac:	cmn	r0, #2
   18fb0:	beq	190ec <__mempcpy_chk@plt+0x7b0c>
   18fb4:	cmn	r9, #1
   18fb8:	beq	18fc4 <__mempcpy_chk@plt+0x79e4>
   18fbc:	cmp	r6, r9
   18fc0:	bgt	18f44 <__mempcpy_chk@plt+0x7964>
   18fc4:	ldrb	r0, [r7, #4]
   18fc8:	cmp	r0, #24
   18fcc:	bne	18f44 <__mempcpy_chk@plt+0x7964>
   18fd0:	cmn	r9, #1
   18fd4:	mov	r0, r9
   18fd8:	moveq	r0, r6
   18fdc:	cmp	r0, #32768	; 0x8000
   18fe0:	bge	191d4 <__mempcpy_chk@plt+0x7bf4>
   18fe4:	mov	r0, r7
   18fe8:	mov	r1, r8
   18fec:	mov	r2, sl
   18ff0:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   18ff4:	cmp	r4, #0
   18ff8:	beq	191c4 <__mempcpy_chk@plt+0x7be4>
   18ffc:	orrs	r0, r9, r6
   19000:	beq	19120 <__mempcpy_chk@plt+0x7b40>
   19004:	mov	r8, #0
   19008:	cmp	r6, #1
   1900c:	bge	19138 <__mempcpy_chk@plt+0x7b58>
   19010:	ldrb	r0, [r4, #24]
   19014:	cmp	r0, #17
   19018:	bne	19030 <__mempcpy_chk@plt+0x7a50>
   1901c:	ldr	r2, [r4, #20]
   19020:	movw	r1, #41856	; 0xa380
   19024:	movt	r1, #1
   19028:	mov	r0, r4
   1902c:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   19030:	mov	r3, #10
   19034:	cmn	r9, #1
   19038:	movweq	r3, #11
   1903c:	mov	r0, r5
   19040:	mov	r1, r4
   19044:	mov	r2, #0
   19048:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   1904c:	cmp	r0, #0
   19050:	beq	191b8 <__mempcpy_chk@plt+0x7bd8>
   19054:	mov	r7, r0
   19058:	add	r0, r6, #2
   1905c:	cmp	r0, r9
   19060:	ble	19088 <__mempcpy_chk@plt+0x7aa8>
   19064:	cmp	r8, #0
   19068:	beq	19118 <__mempcpy_chk@plt+0x7b38>
   1906c:	mov	r0, r5
   19070:	mov	r1, r8
   19074:	mov	r2, r7
   19078:	mov	r3, #16
   1907c:	sub	sp, fp, #28
   19080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19084:	b	17490 <__mempcpy_chk@plt+0x5eb0>
   19088:	add	r6, r6, #1
   1908c:	mov	r0, r4
   19090:	mov	r1, r5
   19094:	bl	1a2a4 <__mempcpy_chk@plt+0x8cc4>
   19098:	mov	r4, r0
   1909c:	mov	r0, r5
   190a0:	mov	r1, r7
   190a4:	mov	r2, r4
   190a8:	mov	r3, #16
   190ac:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   190b0:	cmp	r4, #0
   190b4:	movne	r1, r0
   190b8:	cmpne	r0, #0
   190bc:	beq	191b8 <__mempcpy_chk@plt+0x7bd8>
   190c0:	mov	r0, r5
   190c4:	mov	r2, #0
   190c8:	mov	r3, #10
   190cc:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   190d0:	cmp	r0, #0
   190d4:	beq	191b8 <__mempcpy_chk@plt+0x7bd8>
   190d8:	mov	r7, r0
   190dc:	add	r6, r6, #1
   190e0:	cmp	r6, r9
   190e4:	blt	1908c <__mempcpy_chk@plt+0x7aac>
   190e8:	b	19064 <__mempcpy_chk@plt+0x7a84>
   190ec:	tst	sl, #2097152	; 0x200000
   190f0:	beq	191dc <__mempcpy_chk@plt+0x7bfc>
   190f4:	ldr	r0, [sp, #4]
   190f8:	str	r0, [r8, #40]	; 0x28
   190fc:	ldr	r0, [sp, #12]
   19100:	str	r0, [r7]
   19104:	ldr	r0, [sp, #8]
   19108:	str	r0, [r7, #4]
   1910c:	mov	r0, #1
   19110:	strb	r0, [r7, #4]
   19114:	b	191c8 <__mempcpy_chk@plt+0x7be8>
   19118:	mov	r4, r7
   1911c:	b	191c8 <__mempcpy_chk@plt+0x7be8>
   19120:	movw	r1, #32588	; 0x7f4c
   19124:	movt	r1, #1
   19128:	mov	r0, r4
   1912c:	mov	r2, #0
   19130:	bl	17ed4 <__mempcpy_chk@plt+0x68f4>
   19134:	b	191c4 <__mempcpy_chk@plt+0x7be4>
   19138:	bne	19164 <__mempcpy_chk@plt+0x7b84>
   1913c:	mov	r8, r4
   19140:	cmp	r6, r9
   19144:	beq	191b0 <__mempcpy_chk@plt+0x7bd0>
   19148:	mov	r0, r4
   1914c:	mov	r1, r5
   19150:	bl	1a2a4 <__mempcpy_chk@plt+0x8cc4>
   19154:	mov	r4, r0
   19158:	cmp	r0, #0
   1915c:	bne	19010 <__mempcpy_chk@plt+0x7a30>
   19160:	b	191b8 <__mempcpy_chk@plt+0x7bd8>
   19164:	sub	r7, r6, #1
   19168:	mov	r8, r4
   1916c:	mov	r0, r4
   19170:	mov	r1, r5
   19174:	bl	1a2a4 <__mempcpy_chk@plt+0x8cc4>
   19178:	mov	r4, r0
   1917c:	mov	r0, r5
   19180:	mov	r1, r8
   19184:	mov	r2, r4
   19188:	mov	r3, #16
   1918c:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   19190:	cmp	r4, #0
   19194:	movne	r8, r0
   19198:	cmpne	r0, #0
   1919c:	beq	191b8 <__mempcpy_chk@plt+0x7bd8>
   191a0:	subs	r7, r7, #1
   191a4:	bne	1916c <__mempcpy_chk@plt+0x7b8c>
   191a8:	cmp	r6, r9
   191ac:	bne	19148 <__mempcpy_chk@plt+0x7b68>
   191b0:	mov	r4, r8
   191b4:	b	191c8 <__mempcpy_chk@plt+0x7be8>
   191b8:	mov	r0, #12
   191bc:	ldr	r1, [sp, #16]
   191c0:	str	r0, [r1]
   191c4:	mov	r4, #0
   191c8:	mov	r0, r4
   191cc:	sub	sp, fp, #28
   191d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191d4:	mov	r0, #15
   191d8:	b	191bc <__mempcpy_chk@plt+0x7bdc>
   191dc:	ldrb	r0, [r7, #4]
   191e0:	mov	r1, #10
   191e4:	cmp	r0, #2
   191e8:	movweq	r1, #9
   191ec:	ldr	r0, [sp, #16]
   191f0:	str	r1, [r0]
   191f4:	b	191c4 <__mempcpy_chk@plt+0x7be4>
   191f8:	push	{r4, sl, fp, lr}
   191fc:	add	fp, sp, #8
   19200:	ldr	ip, [r1, #40]	; 0x28
   19204:	ldr	r3, [r1, #56]	; 0x38
   19208:	cmp	r3, ip
   1920c:	ble	1928c <__mempcpy_chk@plt+0x7cac>
   19210:	ldr	r3, [r1, #4]
   19214:	ldrb	ip, [r3, ip]
   19218:	strb	ip, [r0]
   1921c:	ldr	r3, [r1, #80]	; 0x50
   19220:	cmp	r3, #2
   19224:	blt	19248 <__mempcpy_chk@plt+0x7c68>
   19228:	ldr	lr, [r1, #28]
   1922c:	ldr	r4, [r1, #40]	; 0x28
   19230:	cmp	r4, lr
   19234:	beq	19248 <__mempcpy_chk@plt+0x7c68>
   19238:	ldr	r3, [r1, #8]
   1923c:	ldr	r3, [r3, r4, lsl #2]
   19240:	cmn	r3, #1
   19244:	beq	19338 <__mempcpy_chk@plt+0x7d58>
   19248:	tst	r2, #1
   1924c:	beq	192a0 <__mempcpy_chk@plt+0x7cc0>
   19250:	cmp	ip, #92	; 0x5c
   19254:	bne	192a0 <__mempcpy_chk@plt+0x7cc0>
   19258:	ldr	r2, [r1, #40]	; 0x28
   1925c:	ldr	r3, [r1, #48]	; 0x30
   19260:	add	r2, r2, #1
   19264:	cmp	r2, r3
   19268:	bge	19338 <__mempcpy_chk@plt+0x7d58>
   1926c:	str	r2, [r1, #40]	; 0x28
   19270:	ldr	r1, [r1, #4]
   19274:	ldrb	r2, [r1, r2]
   19278:	mov	r1, #1
   1927c:	strb	r1, [r0, #4]
   19280:	strb	r2, [r0]
   19284:	mov	r0, r1
   19288:	pop	{r4, sl, fp, pc}
   1928c:	mov	r1, #2
   19290:	strb	r1, [r0, #4]
   19294:	mov	r1, #0
   19298:	mov	r0, r1
   1929c:	pop	{r4, sl, fp, pc}
   192a0:	cmp	ip, #92	; 0x5c
   192a4:	bgt	192f8 <__mempcpy_chk@plt+0x7d18>
   192a8:	cmp	ip, #45	; 0x2d
   192ac:	beq	19310 <__mempcpy_chk@plt+0x7d30>
   192b0:	cmp	ip, #91	; 0x5b
   192b4:	bne	19338 <__mempcpy_chk@plt+0x7d58>
   192b8:	ldr	r3, [r1, #40]	; 0x28
   192bc:	ldr	r4, [r1, #48]	; 0x30
   192c0:	add	r3, r3, #1
   192c4:	cmp	r3, r4
   192c8:	bge	1932c <__mempcpy_chk@plt+0x7d4c>
   192cc:	ldr	r1, [r1, #4]
   192d0:	ldrb	r1, [r1, r3]
   192d4:	strb	r1, [r0]
   192d8:	cmp	r1, #61	; 0x3d
   192dc:	beq	19348 <__mempcpy_chk@plt+0x7d68>
   192e0:	cmp	r1, #58	; 0x3a
   192e4:	beq	19350 <__mempcpy_chk@plt+0x7d70>
   192e8:	cmp	r1, #46	; 0x2e
   192ec:	bne	19334 <__mempcpy_chk@plt+0x7d54>
   192f0:	mov	r1, #26
   192f4:	b	1935c <__mempcpy_chk@plt+0x7d7c>
   192f8:	cmp	ip, #93	; 0x5d
   192fc:	beq	19318 <__mempcpy_chk@plt+0x7d38>
   19300:	cmp	ip, #94	; 0x5e
   19304:	bne	19338 <__mempcpy_chk@plt+0x7d58>
   19308:	mov	r1, #25
   1930c:	b	1931c <__mempcpy_chk@plt+0x7d3c>
   19310:	mov	r1, #22
   19314:	b	1931c <__mempcpy_chk@plt+0x7d3c>
   19318:	mov	r1, #21
   1931c:	strb	r1, [r0, #4]
   19320:	mov	r1, #1
   19324:	mov	r0, r1
   19328:	pop	{r4, sl, fp, pc}
   1932c:	mov	r1, #0
   19330:	strb	r1, [r0]
   19334:	strb	ip, [r0]
   19338:	mov	r1, #1
   1933c:	strb	r1, [r0, #4]
   19340:	mov	r0, r1
   19344:	pop	{r4, sl, fp, pc}
   19348:	mov	r1, #28
   1934c:	b	1935c <__mempcpy_chk@plt+0x7d7c>
   19350:	tst	r2, #4
   19354:	beq	19334 <__mempcpy_chk@plt+0x7d54>
   19358:	mov	r1, #30
   1935c:	strb	r1, [r0, #4]
   19360:	mov	r1, #2
   19364:	mov	r0, r1
   19368:	pop	{r4, sl, fp, pc}
   1936c:	asr	r2, r1, #31
   19370:	add	r2, r1, r2, lsr #27
   19374:	asr	r2, r2, #5
   19378:	ldr	ip, [r0, r2, lsl #2]
   1937c:	and	r1, r1, #31
   19380:	mov	r3, #1
   19384:	orr	r1, ip, r3, lsl r1
   19388:	str	r1, [r0, r2, lsl #2]
   1938c:	bx	lr
   19390:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19394:	add	fp, sp, #24
   19398:	sub	sp, sp, #8
   1939c:	mov	r5, r3
   193a0:	mov	r8, r2
   193a4:	mov	r6, r1
   193a8:	mov	r9, r0
   193ac:	ldr	r7, [r1, #40]	; 0x28
   193b0:	mov	r0, r1
   193b4:	mov	r1, r7
   193b8:	bl	19fd0 <__mempcpy_chk@plt+0x89f0>
   193bc:	cmp	r0, #2
   193c0:	blt	193f8 <__mempcpy_chk@plt+0x7e18>
   193c4:	mov	r4, r0
   193c8:	mov	r0, #1
   193cc:	str	r0, [r9]
   193d0:	mov	r0, r6
   193d4:	mov	r1, r7
   193d8:	bl	17d3c <__mempcpy_chk@plt+0x675c>
   193dc:	str	r0, [r9, #4]
   193e0:	ldr	r0, [r6, #40]	; 0x28
   193e4:	add	r0, r0, r4
   193e8:	str	r0, [r6, #40]	; 0x28
   193ec:	mov	r0, #0
   193f0:	sub	sp, fp, #24
   193f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   193f8:	ldr	r0, [fp, #12]
   193fc:	ldr	r2, [fp, #8]
   19400:	add	r1, r7, r5
   19404:	str	r1, [r6, #40]	; 0x28
   19408:	ldrb	r1, [r8, #4]
   1940c:	sub	r1, r1, #22
   19410:	cmp	r1, #8
   19414:	bhi	19480 <__mempcpy_chk@plt+0x7ea0>
   19418:	add	r3, pc, #0
   1941c:	ldr	pc, [r3, r1, lsl #2]
   19420:	andeq	r9, r1, ip, asr r4
   19424:	andeq	r9, r1, r0, lsl #9
   19428:	andeq	r9, r1, r0, lsl #9
   1942c:	andeq	r9, r1, r0, lsl #9
   19430:	andeq	r9, r1, r4, asr #8
   19434:	andeq	r9, r1, r0, lsl #9
   19438:	andeq	r9, r1, r4, asr #8
   1943c:	andeq	r9, r1, r0, lsl #9
   19440:	andeq	r9, r1, r4, asr #8
   19444:	mov	r0, r9
   19448:	mov	r1, r6
   1944c:	mov	r2, r8
   19450:	sub	sp, fp, #24
   19454:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   19458:	b	1a02c <__mempcpy_chk@plt+0x8a4c>
   1945c:	cmp	r0, #0
   19460:	bne	19480 <__mempcpy_chk@plt+0x7ea0>
   19464:	mov	r0, sp
   19468:	mov	r1, r6
   1946c:	bl	191f8 <__mempcpy_chk@plt+0x7c18>
   19470:	ldrb	r1, [sp, #4]
   19474:	mov	r0, #11
   19478:	cmp	r1, #21
   1947c:	bne	19490 <__mempcpy_chk@plt+0x7eb0>
   19480:	mov	r0, #0
   19484:	str	r0, [r9]
   19488:	ldrb	r1, [r8]
   1948c:	strb	r1, [r9, #4]
   19490:	sub	sp, fp, #24
   19494:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1949c:	add	fp, sp, #28
   194a0:	sub	sp, sp, #12
   194a4:	mov	sl, r0
   194a8:	ldr	r7, [r3]
   194ac:	mov	r0, #11
   194b0:	cmp	r7, #2
   194b4:	cmpne	r7, #4
   194b8:	beq	194d0 <__mempcpy_chk@plt+0x7ef0>
   194bc:	ldr	r8, [fp, #8]
   194c0:	ldr	r5, [r8]
   194c4:	cmp	r5, #2
   194c8:	cmpne	r5, #4
   194cc:	bne	194d8 <__mempcpy_chk@plt+0x7ef8>
   194d0:	sub	sp, fp, #28
   194d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194d8:	mov	r6, r3
   194dc:	mov	r9, r2
   194e0:	mov	r4, r1
   194e4:	cmp	r7, #3
   194e8:	bne	194fc <__mempcpy_chk@plt+0x7f1c>
   194ec:	ldr	r0, [r6, #4]
   194f0:	bl	114cc <strlen@plt>
   194f4:	cmp	r0, #1
   194f8:	bhi	19640 <__mempcpy_chk@plt+0x8060>
   194fc:	cmp	r5, #3
   19500:	bne	19514 <__mempcpy_chk@plt+0x7f34>
   19504:	ldr	r0, [r8, #4]
   19508:	bl	114cc <strlen@plt>
   1950c:	cmp	r0, #1
   19510:	bhi	19640 <__mempcpy_chk@plt+0x8060>
   19514:	cmp	r7, #3
   19518:	beq	1952c <__mempcpy_chk@plt+0x7f4c>
   1951c:	mov	r0, #0
   19520:	cmp	r7, #0
   19524:	ldrbeq	r0, [r6, #4]
   19528:	b	19534 <__mempcpy_chk@plt+0x7f54>
   1952c:	ldr	r0, [r6, #4]
   19530:	ldrb	r0, [r0]
   19534:	stmib	sp, {r4, r9}
   19538:	cmp	r5, #3
   1953c:	beq	19550 <__mempcpy_chk@plt+0x7f70>
   19540:	mov	r9, #0
   19544:	cmp	r5, #0
   19548:	ldrbeq	r9, [r8, #4]
   1954c:	b	19558 <__mempcpy_chk@plt+0x7f78>
   19550:	ldr	r1, [r8, #4]
   19554:	ldrb	r9, [r1]
   19558:	ldr	r4, [fp, #12]
   1955c:	cmp	r7, #3
   19560:	cmpne	r7, #0
   19564:	bne	19578 <__mempcpy_chk@plt+0x7f98>
   19568:	mov	r1, r4
   1956c:	bl	1a1ec <__mempcpy_chk@plt+0x8c0c>
   19570:	mov	r7, r0
   19574:	b	1957c <__mempcpy_chk@plt+0x7f9c>
   19578:	ldr	r7, [r6, #4]
   1957c:	ldr	r0, [r8]
   19580:	cmp	r0, #3
   19584:	cmpne	r0, #0
   19588:	bne	195a0 <__mempcpy_chk@plt+0x7fc0>
   1958c:	mov	r0, r9
   19590:	mov	r1, r4
   19594:	bl	1a1ec <__mempcpy_chk@plt+0x8c0c>
   19598:	mov	r6, r0
   1959c:	b	195a4 <__mempcpy_chk@plt+0x7fc4>
   195a0:	ldr	r6, [r8, #4]
   195a4:	ldr	r1, [sp, #8]
   195a8:	ldr	r5, [sp, #4]
   195ac:	mov	r0, #3
   195b0:	cmn	r7, #1
   195b4:	cmnne	r6, #1
   195b8:	beq	194d0 <__mempcpy_chk@plt+0x7ef0>
   195bc:	ldr	r0, [fp, #16]
   195c0:	tst	r0, #65536	; 0x10000
   195c4:	beq	195d4 <__mempcpy_chk@plt+0x7ff4>
   195c8:	cmp	r7, r6
   195cc:	mov	r0, #11
   195d0:	bhi	194d0 <__mempcpy_chk@plt+0x7ef0>
   195d4:	ldr	r0, [r4, #92]	; 0x5c
   195d8:	cmp	r0, #2
   195dc:	blt	19610 <__mempcpy_chk@plt+0x8030>
   195e0:	ldr	r0, [r5, #32]
   195e4:	ldr	r1, [r1]
   195e8:	cmp	r1, r0
   195ec:	beq	1964c <__mempcpy_chk@plt+0x806c>
   195f0:	ldr	r0, [r5, #4]
   195f4:	ldr	r1, [r5, #32]
   195f8:	str	r7, [r0, r1, lsl #2]
   195fc:	ldr	r0, [r5, #8]
   19600:	ldr	r1, [r5, #32]
   19604:	add	r2, r1, #1
   19608:	str	r2, [r5, #32]
   1960c:	str	r6, [r0, r1, lsl #2]
   19610:	mov	r5, #0
   19614:	cmp	r7, r5
   19618:	cmpls	r5, r6
   1961c:	movls	r0, sl
   19620:	movls	r1, r5
   19624:	blls	1936c <__mempcpy_chk@plt+0x7d8c>
   19628:	add	r5, r5, #1
   1962c:	cmp	r5, #256	; 0x100
   19630:	bne	19614 <__mempcpy_chk@plt+0x8034>
   19634:	mov	r0, #0
   19638:	sub	sp, fp, #28
   1963c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19640:	mov	r0, #3
   19644:	sub	sp, fp, #28
   19648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1964c:	mov	r1, #1
   19650:	orr	r8, r1, r0, lsl #1
   19654:	lsl	r4, r8, #2
   19658:	ldr	r0, [r5, #4]
   1965c:	mov	r1, r4
   19660:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   19664:	mov	r9, r0
   19668:	ldr	r0, [r5, #8]
   1966c:	mov	r1, r4
   19670:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   19674:	mov	r4, r0
   19678:	cmp	r9, #0
   1967c:	cmpne	r4, #0
   19680:	bne	196a0 <__mempcpy_chk@plt+0x80c0>
   19684:	mov	r0, r9
   19688:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1968c:	mov	r0, r4
   19690:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   19694:	mov	r0, #12
   19698:	sub	sp, fp, #28
   1969c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196a0:	ldr	r5, [sp, #4]
   196a4:	str	r9, [r5, #4]
   196a8:	str	r4, [r5, #8]
   196ac:	ldr	r0, [sp, #8]
   196b0:	str	r8, [r0]
   196b4:	b	195f0 <__mempcpy_chk@plt+0x8010>
   196b8:	push	{r4, r5, fp, lr}
   196bc:	add	fp, sp, #8
   196c0:	mov	r5, r1
   196c4:	mov	r4, r0
   196c8:	mov	r0, r1
   196cc:	bl	114cc <strlen@plt>
   196d0:	cmp	r0, #1
   196d4:	bne	196ec <__mempcpy_chk@plt+0x810c>
   196d8:	ldrb	r1, [r5]
   196dc:	mov	r0, r4
   196e0:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   196e4:	mov	r0, #0
   196e8:	pop	{r4, r5, fp, pc}
   196ec:	mov	r0, #3
   196f0:	pop	{r4, r5, fp, pc}
   196f4:	push	{r4, r5, fp, lr}
   196f8:	add	fp, sp, #8
   196fc:	mov	r5, r1
   19700:	mov	r4, r0
   19704:	mov	r0, r1
   19708:	bl	114cc <strlen@plt>
   1970c:	cmp	r0, #1
   19710:	bne	19728 <__mempcpy_chk@plt+0x8148>
   19714:	ldrb	r1, [r5]
   19718:	mov	r0, r4
   1971c:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19720:	mov	r0, #0
   19724:	pop	{r4, r5, fp, pc}
   19728:	mov	r0, #3
   1972c:	pop	{r4, r5, fp, pc}
   19730:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19734:	add	fp, sp, #24
   19738:	mov	r5, r3
   1973c:	mov	r7, r2
   19740:	mov	r4, r1
   19744:	mov	r8, r0
   19748:	ldr	r6, [fp, #8]
   1974c:	ldrb	r0, [fp, #14]
   19750:	tst	r0, #64	; 0x40
   19754:	beq	19790 <__mempcpy_chk@plt+0x81b0>
   19758:	movw	r1, #13762	; 0x35c2
   1975c:	movt	r1, #2
   19760:	mov	r0, r6
   19764:	bl	112ec <strcmp@plt>
   19768:	cmp	r0, #0
   1976c:	beq	19788 <__mempcpy_chk@plt+0x81a8>
   19770:	movw	r1, #13768	; 0x35c8
   19774:	movt	r1, #2
   19778:	mov	r0, r6
   1977c:	bl	112ec <strcmp@plt>
   19780:	cmp	r0, #0
   19784:	bne	19790 <__mempcpy_chk@plt+0x81b0>
   19788:	movw	r6, #13774	; 0x35ce
   1978c:	movt	r6, #2
   19790:	ldr	r0, [r7, #36]	; 0x24
   19794:	ldr	r1, [r5]
   19798:	cmp	r1, r0
   1979c:	beq	19c6c <__mempcpy_chk@plt+0x868c>
   197a0:	mov	r0, r6
   197a4:	bl	112bc <wctype@plt>
   197a8:	ldr	r1, [r7, #12]
   197ac:	ldr	r2, [r7, #36]	; 0x24
   197b0:	add	r3, r2, #1
   197b4:	str	r3, [r7, #36]	; 0x24
   197b8:	str	r0, [r1, r2, lsl #2]
   197bc:	movw	r1, #13750	; 0x35b6
   197c0:	movt	r1, #2
   197c4:	mov	r0, r6
   197c8:	bl	112ec <strcmp@plt>
   197cc:	cmp	r0, #0
   197d0:	beq	19930 <__mempcpy_chk@plt+0x8350>
   197d4:	movw	r1, #13780	; 0x35d4
   197d8:	movt	r1, #2
   197dc:	mov	r0, r6
   197e0:	bl	112ec <strcmp@plt>
   197e4:	cmp	r0, #0
   197e8:	beq	19978 <__mempcpy_chk@plt+0x8398>
   197ec:	movw	r1, #13768	; 0x35c8
   197f0:	movt	r1, #2
   197f4:	mov	r0, r6
   197f8:	bl	112ec <strcmp@plt>
   197fc:	cmp	r0, #0
   19800:	beq	199c0 <__mempcpy_chk@plt+0x83e0>
   19804:	movw	r1, #13756	; 0x35bc
   19808:	movt	r1, #2
   1980c:	mov	r0, r6
   19810:	bl	112ec <strcmp@plt>
   19814:	cmp	r0, #0
   19818:	beq	19a0c <__mempcpy_chk@plt+0x842c>
   1981c:	movw	r1, #13774	; 0x35ce
   19820:	movt	r1, #2
   19824:	mov	r0, r6
   19828:	bl	112ec <strcmp@plt>
   1982c:	cmp	r0, #0
   19830:	beq	19a58 <__mempcpy_chk@plt+0x8478>
   19834:	movw	r1, #13811	; 0x35f3
   19838:	movt	r1, #2
   1983c:	mov	r0, r6
   19840:	bl	112ec <strcmp@plt>
   19844:	cmp	r0, #0
   19848:	beq	19aa4 <__mempcpy_chk@plt+0x84c4>
   1984c:	movw	r1, #13786	; 0x35da
   19850:	movt	r1, #2
   19854:	mov	r0, r6
   19858:	bl	112ec <strcmp@plt>
   1985c:	cmp	r0, #0
   19860:	beq	19af0 <__mempcpy_chk@plt+0x8510>
   19864:	movw	r1, #13762	; 0x35c2
   19868:	movt	r1, #2
   1986c:	mov	r0, r6
   19870:	bl	112ec <strcmp@plt>
   19874:	cmp	r0, #0
   19878:	beq	19b3c <__mempcpy_chk@plt+0x855c>
   1987c:	movw	r1, #13792	; 0x35e0
   19880:	movt	r1, #2
   19884:	mov	r0, r6
   19888:	bl	112ec <strcmp@plt>
   1988c:	cmp	r0, #0
   19890:	beq	19b88 <__mempcpy_chk@plt+0x85a8>
   19894:	movw	r1, #13798	; 0x35e6
   19898:	movt	r1, #2
   1989c:	mov	r0, r6
   198a0:	bl	112ec <strcmp@plt>
   198a4:	cmp	r0, #0
   198a8:	beq	19bd0 <__mempcpy_chk@plt+0x85f0>
   198ac:	movw	r1, #13804	; 0x35ec
   198b0:	movt	r1, #2
   198b4:	mov	r0, r6
   198b8:	bl	112ec <strcmp@plt>
   198bc:	cmp	r0, #0
   198c0:	beq	19c24 <__mempcpy_chk@plt+0x8644>
   198c4:	movw	r1, #13810	; 0x35f2
   198c8:	movt	r1, #2
   198cc:	mov	r0, r6
   198d0:	bl	112ec <strcmp@plt>
   198d4:	mov	r1, r0
   198d8:	mov	r0, #4
   198dc:	cmp	r1, #0
   198e0:	bne	19c68 <__mempcpy_chk@plt+0x8688>
   198e4:	bl	114a8 <__ctype_b_loc@plt>
   198e8:	mov	r6, r0
   198ec:	cmp	r8, #0
   198f0:	bne	19f44 <__mempcpy_chk@plt+0x8964>
   198f4:	mov	r7, #0
   198f8:	mov	r5, #0
   198fc:	ldr	r0, [r6]
   19900:	add	r0, r0, r7
   19904:	ldrb	r0, [r0, #1]
   19908:	tst	r0, #16
   1990c:	movne	r0, r4
   19910:	movne	r1, r5
   19914:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19918:	add	r7, r7, #2
   1991c:	add	r5, r5, #1
   19920:	mov	r0, #0
   19924:	cmp	r5, #256	; 0x100
   19928:	bne	198fc <__mempcpy_chk@plt+0x831c>
   1992c:	b	19c68 <__mempcpy_chk@plt+0x8688>
   19930:	bl	114a8 <__ctype_b_loc@plt>
   19934:	mov	r6, r0
   19938:	cmp	r8, #0
   1993c:	bne	19c94 <__mempcpy_chk@plt+0x86b4>
   19940:	mov	r7, #0
   19944:	mov	r5, #0
   19948:	ldr	r0, [r6]
   1994c:	ldrb	r0, [r0, r7]
   19950:	tst	r0, #8
   19954:	movne	r0, r4
   19958:	movne	r1, r5
   1995c:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19960:	add	r7, r7, #2
   19964:	add	r5, r5, #1
   19968:	cmp	r5, #256	; 0x100
   1996c:	bne	19948 <__mempcpy_chk@plt+0x8368>
   19970:	mov	r0, #0
   19974:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19978:	bl	114a8 <__ctype_b_loc@plt>
   1997c:	mov	r6, r0
   19980:	cmp	r8, #0
   19984:	bne	19cd0 <__mempcpy_chk@plt+0x86f0>
   19988:	mov	r7, #0
   1998c:	mov	r5, #0
   19990:	ldr	r0, [r6]
   19994:	ldrb	r0, [r0, r7]
   19998:	tst	r0, #2
   1999c:	movne	r0, r4
   199a0:	movne	r1, r5
   199a4:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   199a8:	add	r7, r7, #2
   199ac:	add	r5, r5, #1
   199b0:	cmp	r5, #256	; 0x100
   199b4:	bne	19990 <__mempcpy_chk@plt+0x83b0>
   199b8:	mov	r0, #0
   199bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   199c0:	bl	114a8 <__ctype_b_loc@plt>
   199c4:	mov	r6, r0
   199c8:	cmp	r8, #0
   199cc:	bne	19d0c <__mempcpy_chk@plt+0x872c>
   199d0:	mov	r7, #0
   199d4:	mov	r5, #0
   199d8:	ldr	r0, [r6]
   199dc:	add	r0, r0, r7
   199e0:	ldrb	r0, [r0, #1]
   199e4:	tst	r0, #2
   199e8:	movne	r0, r4
   199ec:	movne	r1, r5
   199f0:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   199f4:	add	r7, r7, #2
   199f8:	add	r5, r5, #1
   199fc:	cmp	r5, #256	; 0x100
   19a00:	bne	199d8 <__mempcpy_chk@plt+0x83f8>
   19a04:	mov	r0, #0
   19a08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19a0c:	bl	114a8 <__ctype_b_loc@plt>
   19a10:	mov	r6, r0
   19a14:	cmp	r8, #0
   19a18:	bne	19d4c <__mempcpy_chk@plt+0x876c>
   19a1c:	mov	r7, #0
   19a20:	mov	r5, #0
   19a24:	ldr	r0, [r6]
   19a28:	add	r0, r0, r7
   19a2c:	ldrb	r0, [r0, #1]
   19a30:	tst	r0, #32
   19a34:	movne	r0, r4
   19a38:	movne	r1, r5
   19a3c:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19a40:	add	r7, r7, #2
   19a44:	add	r5, r5, #1
   19a48:	cmp	r5, #256	; 0x100
   19a4c:	bne	19a24 <__mempcpy_chk@plt+0x8444>
   19a50:	mov	r0, #0
   19a54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19a58:	bl	114a8 <__ctype_b_loc@plt>
   19a5c:	mov	r6, r0
   19a60:	cmp	r8, #0
   19a64:	bne	19d8c <__mempcpy_chk@plt+0x87ac>
   19a68:	mov	r7, #0
   19a6c:	mov	r5, #0
   19a70:	ldr	r0, [r6]
   19a74:	add	r0, r0, r7
   19a78:	ldrb	r0, [r0, #1]
   19a7c:	tst	r0, #4
   19a80:	movne	r0, r4
   19a84:	movne	r1, r5
   19a88:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19a8c:	add	r7, r7, #2
   19a90:	add	r5, r5, #1
   19a94:	cmp	r5, #256	; 0x100
   19a98:	bne	19a70 <__mempcpy_chk@plt+0x8490>
   19a9c:	mov	r0, #0
   19aa0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19aa4:	bl	114a8 <__ctype_b_loc@plt>
   19aa8:	mov	r6, r0
   19aac:	cmp	r8, #0
   19ab0:	bne	19dcc <__mempcpy_chk@plt+0x87ec>
   19ab4:	mov	r7, #0
   19ab8:	mov	r5, #0
   19abc:	ldr	r0, [r6]
   19ac0:	add	r0, r0, r7
   19ac4:	ldrb	r0, [r0, #1]
   19ac8:	tst	r0, #8
   19acc:	movne	r0, r4
   19ad0:	movne	r1, r5
   19ad4:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19ad8:	add	r7, r7, #2
   19adc:	add	r5, r5, #1
   19ae0:	cmp	r5, #256	; 0x100
   19ae4:	bne	19abc <__mempcpy_chk@plt+0x84dc>
   19ae8:	mov	r0, #0
   19aec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19af0:	bl	114a8 <__ctype_b_loc@plt>
   19af4:	mov	r6, r0
   19af8:	cmp	r8, #0
   19afc:	bne	19e0c <__mempcpy_chk@plt+0x882c>
   19b00:	mov	r7, #0
   19b04:	mov	r5, #0
   19b08:	ldr	r0, [r6]
   19b0c:	add	r0, r0, r7
   19b10:	ldrb	r0, [r0, #1]
   19b14:	tst	r0, #64	; 0x40
   19b18:	movne	r0, r4
   19b1c:	movne	r1, r5
   19b20:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19b24:	add	r7, r7, #2
   19b28:	add	r5, r5, #1
   19b2c:	mov	r0, #0
   19b30:	cmp	r5, #256	; 0x100
   19b34:	bne	19b08 <__mempcpy_chk@plt+0x8528>
   19b38:	b	19c68 <__mempcpy_chk@plt+0x8688>
   19b3c:	bl	114a8 <__ctype_b_loc@plt>
   19b40:	mov	r6, r0
   19b44:	cmp	r8, #0
   19b48:	bne	19e4c <__mempcpy_chk@plt+0x886c>
   19b4c:	mov	r7, #0
   19b50:	mov	r5, #0
   19b54:	ldr	r0, [r6]
   19b58:	add	r0, r0, r7
   19b5c:	ldrb	r0, [r0, #1]
   19b60:	tst	r0, #1
   19b64:	movne	r0, r4
   19b68:	movne	r1, r5
   19b6c:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19b70:	add	r7, r7, #2
   19b74:	add	r5, r5, #1
   19b78:	mov	r0, #0
   19b7c:	cmp	r5, #256	; 0x100
   19b80:	bne	19b54 <__mempcpy_chk@plt+0x8574>
   19b84:	b	19c68 <__mempcpy_chk@plt+0x8688>
   19b88:	bl	114a8 <__ctype_b_loc@plt>
   19b8c:	mov	r6, r0
   19b90:	cmp	r8, #0
   19b94:	bne	19e8c <__mempcpy_chk@plt+0x88ac>
   19b98:	mov	r7, #0
   19b9c:	mov	r5, #0
   19ba0:	ldr	r0, [r6]
   19ba4:	ldrb	r0, [r0, r7]
   19ba8:	tst	r0, #1
   19bac:	movne	r0, r4
   19bb0:	movne	r1, r5
   19bb4:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19bb8:	add	r7, r7, #2
   19bbc:	add	r5, r5, #1
   19bc0:	mov	r0, #0
   19bc4:	cmp	r5, #256	; 0x100
   19bc8:	bne	19ba0 <__mempcpy_chk@plt+0x85c0>
   19bcc:	b	19c68 <__mempcpy_chk@plt+0x8688>
   19bd0:	bl	114a8 <__ctype_b_loc@plt>
   19bd4:	mov	r6, r0
   19bd8:	cmp	r8, #0
   19bdc:	bne	19ec8 <__mempcpy_chk@plt+0x88e8>
   19be0:	mov	r7, #0
   19be4:	mov	r5, #0
   19be8:	b	19c00 <__mempcpy_chk@plt+0x8620>
   19bec:	add	r7, r7, #2
   19bf0:	add	r5, r5, #1
   19bf4:	mov	r0, #0
   19bf8:	cmp	r5, #256	; 0x100
   19bfc:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19c00:	ldr	r0, [r6]
   19c04:	add	r0, r0, r7
   19c08:	ldrsh	r0, [r0]
   19c0c:	cmn	r0, #1
   19c10:	bgt	19bec <__mempcpy_chk@plt+0x860c>
   19c14:	mov	r0, r4
   19c18:	mov	r1, r5
   19c1c:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19c20:	b	19bec <__mempcpy_chk@plt+0x860c>
   19c24:	bl	114a8 <__ctype_b_loc@plt>
   19c28:	mov	r6, r0
   19c2c:	cmp	r8, #0
   19c30:	bne	19f08 <__mempcpy_chk@plt+0x8928>
   19c34:	mov	r7, #0
   19c38:	mov	r5, #0
   19c3c:	ldr	r0, [r6]
   19c40:	ldrb	r0, [r0, r7]
   19c44:	tst	r0, #4
   19c48:	movne	r0, r4
   19c4c:	movne	r1, r5
   19c50:	blne	1936c <__mempcpy_chk@plt+0x7d8c>
   19c54:	add	r7, r7, #2
   19c58:	add	r5, r5, #1
   19c5c:	mov	r0, #0
   19c60:	cmp	r5, #256	; 0x100
   19c64:	bne	19c3c <__mempcpy_chk@plt+0x865c>
   19c68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19c6c:	mov	r1, #1
   19c70:	orr	r9, r1, r0, lsl #1
   19c74:	lsl	r1, r9, #2
   19c78:	ldr	r0, [r7, #12]
   19c7c:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   19c80:	cmp	r0, #0
   19c84:	beq	19f84 <__mempcpy_chk@plt+0x89a4>
   19c88:	str	r0, [r7, #12]
   19c8c:	str	r9, [r5]
   19c90:	b	197a0 <__mempcpy_chk@plt+0x81c0>
   19c94:	mov	r5, #0
   19c98:	b	19cb0 <__mempcpy_chk@plt+0x86d0>
   19c9c:	add	r8, r8, #1
   19ca0:	add	r5, r5, #2
   19ca4:	mov	r0, #0
   19ca8:	cmp	r5, #512	; 0x200
   19cac:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19cb0:	ldr	r0, [r6]
   19cb4:	ldrb	r0, [r0, r5]
   19cb8:	tst	r0, #8
   19cbc:	beq	19c9c <__mempcpy_chk@plt+0x86bc>
   19cc0:	ldrb	r1, [r8]
   19cc4:	mov	r0, r4
   19cc8:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19ccc:	b	19c9c <__mempcpy_chk@plt+0x86bc>
   19cd0:	mov	r5, #0
   19cd4:	b	19cec <__mempcpy_chk@plt+0x870c>
   19cd8:	add	r8, r8, #1
   19cdc:	add	r5, r5, #2
   19ce0:	mov	r0, #0
   19ce4:	cmp	r5, #512	; 0x200
   19ce8:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19cec:	ldr	r0, [r6]
   19cf0:	ldrb	r0, [r0, r5]
   19cf4:	tst	r0, #2
   19cf8:	beq	19cd8 <__mempcpy_chk@plt+0x86f8>
   19cfc:	ldrb	r1, [r8]
   19d00:	mov	r0, r4
   19d04:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19d08:	b	19cd8 <__mempcpy_chk@plt+0x86f8>
   19d0c:	mov	r5, #0
   19d10:	b	19d28 <__mempcpy_chk@plt+0x8748>
   19d14:	add	r8, r8, #1
   19d18:	add	r5, r5, #2
   19d1c:	mov	r0, #0
   19d20:	cmp	r5, #512	; 0x200
   19d24:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19d28:	ldr	r0, [r6]
   19d2c:	add	r0, r0, r5
   19d30:	ldrb	r0, [r0, #1]
   19d34:	tst	r0, #2
   19d38:	beq	19d14 <__mempcpy_chk@plt+0x8734>
   19d3c:	ldrb	r1, [r8]
   19d40:	mov	r0, r4
   19d44:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19d48:	b	19d14 <__mempcpy_chk@plt+0x8734>
   19d4c:	mov	r5, #0
   19d50:	b	19d68 <__mempcpy_chk@plt+0x8788>
   19d54:	add	r8, r8, #1
   19d58:	add	r5, r5, #2
   19d5c:	mov	r0, #0
   19d60:	cmp	r5, #512	; 0x200
   19d64:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19d68:	ldr	r0, [r6]
   19d6c:	add	r0, r0, r5
   19d70:	ldrb	r0, [r0, #1]
   19d74:	tst	r0, #32
   19d78:	beq	19d54 <__mempcpy_chk@plt+0x8774>
   19d7c:	ldrb	r1, [r8]
   19d80:	mov	r0, r4
   19d84:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19d88:	b	19d54 <__mempcpy_chk@plt+0x8774>
   19d8c:	mov	r5, #0
   19d90:	b	19da8 <__mempcpy_chk@plt+0x87c8>
   19d94:	add	r8, r8, #1
   19d98:	add	r5, r5, #2
   19d9c:	mov	r0, #0
   19da0:	cmp	r5, #512	; 0x200
   19da4:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19da8:	ldr	r0, [r6]
   19dac:	add	r0, r0, r5
   19db0:	ldrb	r0, [r0, #1]
   19db4:	tst	r0, #4
   19db8:	beq	19d94 <__mempcpy_chk@plt+0x87b4>
   19dbc:	ldrb	r1, [r8]
   19dc0:	mov	r0, r4
   19dc4:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19dc8:	b	19d94 <__mempcpy_chk@plt+0x87b4>
   19dcc:	mov	r5, #0
   19dd0:	b	19de8 <__mempcpy_chk@plt+0x8808>
   19dd4:	add	r8, r8, #1
   19dd8:	add	r5, r5, #2
   19ddc:	mov	r0, #0
   19de0:	cmp	r5, #512	; 0x200
   19de4:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19de8:	ldr	r0, [r6]
   19dec:	add	r0, r0, r5
   19df0:	ldrb	r0, [r0, #1]
   19df4:	tst	r0, #8
   19df8:	beq	19dd4 <__mempcpy_chk@plt+0x87f4>
   19dfc:	ldrb	r1, [r8]
   19e00:	mov	r0, r4
   19e04:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19e08:	b	19dd4 <__mempcpy_chk@plt+0x87f4>
   19e0c:	mov	r5, #0
   19e10:	b	19e28 <__mempcpy_chk@plt+0x8848>
   19e14:	add	r8, r8, #1
   19e18:	add	r5, r5, #2
   19e1c:	mov	r0, #0
   19e20:	cmp	r5, #512	; 0x200
   19e24:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19e28:	ldr	r0, [r6]
   19e2c:	add	r0, r0, r5
   19e30:	ldrb	r0, [r0, #1]
   19e34:	tst	r0, #64	; 0x40
   19e38:	beq	19e14 <__mempcpy_chk@plt+0x8834>
   19e3c:	ldrb	r1, [r8]
   19e40:	mov	r0, r4
   19e44:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19e48:	b	19e14 <__mempcpy_chk@plt+0x8834>
   19e4c:	mov	r5, #0
   19e50:	b	19e68 <__mempcpy_chk@plt+0x8888>
   19e54:	add	r8, r8, #1
   19e58:	add	r5, r5, #2
   19e5c:	mov	r0, #0
   19e60:	cmp	r5, #512	; 0x200
   19e64:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19e68:	ldr	r0, [r6]
   19e6c:	add	r0, r0, r5
   19e70:	ldrb	r0, [r0, #1]
   19e74:	tst	r0, #1
   19e78:	beq	19e54 <__mempcpy_chk@plt+0x8874>
   19e7c:	ldrb	r1, [r8]
   19e80:	mov	r0, r4
   19e84:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19e88:	b	19e54 <__mempcpy_chk@plt+0x8874>
   19e8c:	mov	r5, #0
   19e90:	b	19ea8 <__mempcpy_chk@plt+0x88c8>
   19e94:	add	r8, r8, #1
   19e98:	add	r5, r5, #2
   19e9c:	mov	r0, #0
   19ea0:	cmp	r5, #512	; 0x200
   19ea4:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19ea8:	ldr	r0, [r6]
   19eac:	ldrb	r0, [r0, r5]
   19eb0:	tst	r0, #1
   19eb4:	beq	19e94 <__mempcpy_chk@plt+0x88b4>
   19eb8:	ldrb	r1, [r8]
   19ebc:	mov	r0, r4
   19ec0:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19ec4:	b	19e94 <__mempcpy_chk@plt+0x88b4>
   19ec8:	mov	r5, #0
   19ecc:	b	19ee4 <__mempcpy_chk@plt+0x8904>
   19ed0:	add	r8, r8, #1
   19ed4:	add	r5, r5, #2
   19ed8:	mov	r0, #0
   19edc:	cmp	r5, #512	; 0x200
   19ee0:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19ee4:	ldr	r0, [r6]
   19ee8:	add	r0, r0, r5
   19eec:	ldrsh	r0, [r0]
   19ef0:	cmn	r0, #1
   19ef4:	bgt	19ed0 <__mempcpy_chk@plt+0x88f0>
   19ef8:	ldrb	r1, [r8]
   19efc:	mov	r0, r4
   19f00:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19f04:	b	19ed0 <__mempcpy_chk@plt+0x88f0>
   19f08:	mov	r5, #0
   19f0c:	b	19f24 <__mempcpy_chk@plt+0x8944>
   19f10:	add	r8, r8, #1
   19f14:	add	r5, r5, #2
   19f18:	mov	r0, #0
   19f1c:	cmp	r5, #512	; 0x200
   19f20:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19f24:	ldr	r0, [r6]
   19f28:	ldrb	r0, [r0, r5]
   19f2c:	tst	r0, #4
   19f30:	beq	19f10 <__mempcpy_chk@plt+0x8930>
   19f34:	ldrb	r1, [r8]
   19f38:	mov	r0, r4
   19f3c:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19f40:	b	19f10 <__mempcpy_chk@plt+0x8930>
   19f44:	mov	r5, #0
   19f48:	b	19f60 <__mempcpy_chk@plt+0x8980>
   19f4c:	add	r8, r8, #1
   19f50:	add	r5, r5, #2
   19f54:	mov	r0, #0
   19f58:	cmp	r5, #512	; 0x200
   19f5c:	beq	19c68 <__mempcpy_chk@plt+0x8688>
   19f60:	ldr	r0, [r6]
   19f64:	add	r0, r0, r5
   19f68:	ldrb	r0, [r0, #1]
   19f6c:	tst	r0, #16
   19f70:	beq	19f4c <__mempcpy_chk@plt+0x896c>
   19f74:	ldrb	r1, [r8]
   19f78:	mov	r0, r4
   19f7c:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   19f80:	b	19f4c <__mempcpy_chk@plt+0x896c>
   19f84:	mov	r0, #12
   19f88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19f8c:	mov	r1, #0
   19f90:	ldr	r2, [r0, r1, lsl #2]
   19f94:	mvn	r2, r2
   19f98:	str	r2, [r0, r1, lsl #2]
   19f9c:	add	r1, r1, #1
   19fa0:	cmp	r1, #8
   19fa4:	bne	19f90 <__mempcpy_chk@plt+0x89b0>
   19fa8:	bx	lr
   19fac:	mov	r2, #0
   19fb0:	ldr	ip, [r1, r2, lsl #2]
   19fb4:	ldr	r3, [r0, r2, lsl #2]
   19fb8:	and	r3, r3, ip
   19fbc:	str	r3, [r0, r2, lsl #2]
   19fc0:	add	r2, r2, #1
   19fc4:	cmp	r2, #8
   19fc8:	bne	19fb0 <__mempcpy_chk@plt+0x89d0>
   19fcc:	bx	lr
   19fd0:	push	{fp, lr}
   19fd4:	mov	fp, sp
   19fd8:	mov	lr, r0
   19fdc:	ldr	r3, [r0, #80]	; 0x50
   19fe0:	mov	r0, #1
   19fe4:	cmp	r3, #1
   19fe8:	beq	1a028 <__mempcpy_chk@plt+0x8a48>
   19fec:	ldr	ip, [lr, #28]
   19ff0:	add	r3, r1, #1
   19ff4:	cmp	r3, ip
   19ff8:	popge	{fp, pc}
   19ffc:	ldr	r0, [lr, #8]
   1a000:	add	ip, r0, r1, lsl #2
   1a004:	mov	r0, #1
   1a008:	ldr	r3, [ip, r0, lsl #2]
   1a00c:	cmn	r3, #1
   1a010:	bne	1a028 <__mempcpy_chk@plt+0x8a48>
   1a014:	add	r0, r0, #1
   1a018:	add	r3, r1, r0
   1a01c:	ldr	r2, [lr, #28]
   1a020:	cmp	r3, r2
   1a024:	blt	1a008 <__mempcpy_chk@plt+0x8a28>
   1a028:	pop	{fp, pc}
   1a02c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a030:	add	fp, sp, #24
   1a034:	mov	r7, r1
   1a038:	mov	r9, r0
   1a03c:	ldr	r0, [r1, #40]	; 0x28
   1a040:	ldr	r1, [r1, #56]	; 0x38
   1a044:	mov	r8, #7
   1a048:	cmp	r1, r0
   1a04c:	ble	1a110 <__mempcpy_chk@plt+0x8b30>
   1a050:	mov	r6, r2
   1a054:	ldrb	r5, [r2]
   1a058:	mov	r4, #0
   1a05c:	b	1a074 <__mempcpy_chk@plt+0x8a94>
   1a060:	ldr	r1, [r9, #4]
   1a064:	strb	r0, [r1, r4]
   1a068:	add	r4, r4, #1
   1a06c:	cmp	r4, #32
   1a070:	beq	1a110 <__mempcpy_chk@plt+0x8b30>
   1a074:	ldrb	r0, [r6, #4]
   1a078:	cmp	r0, #30
   1a07c:	bne	1a08c <__mempcpy_chk@plt+0x8aac>
   1a080:	mov	r0, r7
   1a084:	bl	1a118 <__mempcpy_chk@plt+0x8b38>
   1a088:	b	1a0a0 <__mempcpy_chk@plt+0x8ac0>
   1a08c:	ldr	r0, [r7, #4]
   1a090:	ldr	r1, [r7, #40]	; 0x28
   1a094:	add	r2, r1, #1
   1a098:	str	r2, [r7, #40]	; 0x28
   1a09c:	ldrb	r0, [r0, r1]
   1a0a0:	ldr	r1, [r7, #40]	; 0x28
   1a0a4:	ldr	r2, [r7, #56]	; 0x38
   1a0a8:	cmp	r2, r1
   1a0ac:	ble	1a110 <__mempcpy_chk@plt+0x8b30>
   1a0b0:	cmp	r0, r5
   1a0b4:	bne	1a060 <__mempcpy_chk@plt+0x8a80>
   1a0b8:	ldr	r2, [r7, #4]
   1a0bc:	ldrb	r2, [r2, r1]
   1a0c0:	cmp	r2, #93	; 0x5d
   1a0c4:	bne	1a060 <__mempcpy_chk@plt+0x8a80>
   1a0c8:	add	r0, r1, #1
   1a0cc:	str	r0, [r7, #40]	; 0x28
   1a0d0:	ldr	r0, [r9, #4]
   1a0d4:	mov	r8, #0
   1a0d8:	strb	r8, [r0, r4]
   1a0dc:	ldrb	r0, [r6, #4]
   1a0e0:	cmp	r0, #30
   1a0e4:	beq	1a100 <__mempcpy_chk@plt+0x8b20>
   1a0e8:	cmp	r0, #28
   1a0ec:	beq	1a108 <__mempcpy_chk@plt+0x8b28>
   1a0f0:	cmp	r0, #26
   1a0f4:	bne	1a110 <__mempcpy_chk@plt+0x8b30>
   1a0f8:	mov	r0, #3
   1a0fc:	b	1a10c <__mempcpy_chk@plt+0x8b2c>
   1a100:	mov	r0, #4
   1a104:	b	1a10c <__mempcpy_chk@plt+0x8b2c>
   1a108:	mov	r0, #2
   1a10c:	str	r0, [r9]
   1a110:	mov	r0, r8
   1a114:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a118:	push	{r4, r5, r6, sl, fp, lr}
   1a11c:	add	fp, sp, #16
   1a120:	mov	r4, r0
   1a124:	ldrb	r0, [r0, #75]	; 0x4b
   1a128:	cmp	r0, #0
   1a12c:	bne	1a14c <__mempcpy_chk@plt+0x8b6c>
   1a130:	ldr	r0, [r4, #4]
   1a134:	ldr	r1, [r4, #40]	; 0x28
   1a138:	add	r2, r1, #1
   1a13c:	str	r2, [r4, #40]	; 0x28
   1a140:	ldrb	r6, [r0, r1]
   1a144:	uxtb	r0, r6
   1a148:	pop	{r4, r5, r6, sl, fp, pc}
   1a14c:	ldrb	r0, [r4, #76]	; 0x4c
   1a150:	cmp	r0, #0
   1a154:	beq	1a1b8 <__mempcpy_chk@plt+0x8bd8>
   1a158:	ldr	r0, [r4, #28]
   1a15c:	ldr	r5, [r4, #40]	; 0x28
   1a160:	cmp	r5, r0
   1a164:	beq	1a178 <__mempcpy_chk@plt+0x8b98>
   1a168:	ldr	r0, [r4, #8]
   1a16c:	ldr	r0, [r0, r5, lsl #2]
   1a170:	cmn	r0, #1
   1a174:	beq	1a1d4 <__mempcpy_chk@plt+0x8bf4>
   1a178:	ldr	r0, [r4]
   1a17c:	ldr	r1, [r4, #12]
   1a180:	ldr	r2, [r4, #24]
   1a184:	ldr	r1, [r1, r5, lsl #2]
   1a188:	add	r1, r2, r1
   1a18c:	add	r0, r0, r1
   1a190:	ldrsb	r6, [r0]
   1a194:	cmn	r6, #1
   1a198:	ble	1a1d4 <__mempcpy_chk@plt+0x8bf4>
   1a19c:	mov	r0, r4
   1a1a0:	mov	r1, r5
   1a1a4:	bl	19fd0 <__mempcpy_chk@plt+0x89f0>
   1a1a8:	add	r0, r0, r5
   1a1ac:	str	r0, [r4, #40]	; 0x28
   1a1b0:	uxtb	r0, r6
   1a1b4:	pop	{r4, r5, r6, sl, fp, pc}
   1a1b8:	ldr	r0, [r4]
   1a1bc:	ldr	r1, [r4, #24]
   1a1c0:	ldr	r2, [r4, #40]	; 0x28
   1a1c4:	add	r3, r2, #1
   1a1c8:	str	r3, [r4, #40]	; 0x28
   1a1cc:	add	r1, r2, r1
   1a1d0:	b	1a140 <__mempcpy_chk@plt+0x8b60>
   1a1d4:	add	r0, r5, #1
   1a1d8:	str	r0, [r4, #40]	; 0x28
   1a1dc:	ldr	r0, [r4, #4]
   1a1e0:	ldrb	r6, [r0, r5]
   1a1e4:	uxtb	r0, r6
   1a1e8:	pop	{r4, r5, r6, sl, fp, pc}
   1a1ec:	ldr	r1, [r1, #92]	; 0x5c
   1a1f0:	cmp	r1, #2
   1a1f4:	bxlt	lr
   1a1f8:	b	11508 <btowc@plt>
   1a1fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a200:	add	fp, sp, #24
   1a204:	mov	r4, r2
   1a208:	mov	r5, r1
   1a20c:	mov	r6, r0
   1a210:	mvn	r1, #0
   1a214:	movw	r8, #32816	; 0x8030
   1a218:	mov	r7, r1
   1a21c:	mov	r0, r5
   1a220:	mov	r1, r6
   1a224:	mov	r2, r4
   1a228:	bl	17308 <__mempcpy_chk@plt+0x5d28>
   1a22c:	ldrb	r2, [r5, #4]
   1a230:	cmp	r2, #24
   1a234:	beq	1a29c <__mempcpy_chk@plt+0x8cbc>
   1a238:	cmp	r2, #2
   1a23c:	beq	1a298 <__mempcpy_chk@plt+0x8cb8>
   1a240:	ldrb	r0, [r5]
   1a244:	cmp	r0, #44	; 0x2c
   1a248:	beq	1a29c <__mempcpy_chk@plt+0x8cbc>
   1a24c:	mvn	r1, #1
   1a250:	cmp	r0, #48	; 0x30
   1a254:	bcc	1a218 <__mempcpy_chk@plt+0x8c38>
   1a258:	cmp	r2, #1
   1a25c:	bne	1a218 <__mempcpy_chk@plt+0x8c38>
   1a260:	cmn	r7, #2
   1a264:	beq	1a218 <__mempcpy_chk@plt+0x8c38>
   1a268:	cmp	r0, #57	; 0x39
   1a26c:	bhi	1a218 <__mempcpy_chk@plt+0x8c38>
   1a270:	cmn	r7, #1
   1a274:	beq	1a290 <__mempcpy_chk@plt+0x8cb0>
   1a278:	add	r1, r7, r7, lsl #2
   1a27c:	add	r0, r0, r1, lsl #1
   1a280:	cmp	r0, r8
   1a284:	movge	r0, r8
   1a288:	sub	r1, r0, #48	; 0x30
   1a28c:	b	1a218 <__mempcpy_chk@plt+0x8c38>
   1a290:	sub	r1, r0, #48	; 0x30
   1a294:	b	1a218 <__mempcpy_chk@plt+0x8c38>
   1a298:	mvn	r7, #1
   1a29c:	mov	r0, r7
   1a2a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a2a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a2a8:	add	fp, sp, #24
   1a2ac:	sub	sp, sp, #8
   1a2b0:	mov	r8, r1
   1a2b4:	mov	r5, r0
   1a2b8:	mov	r3, r0
   1a2bc:	ldr	r7, [r3], #20
   1a2c0:	mov	r6, #0
   1a2c4:	mov	r0, r1
   1a2c8:	mov	r1, #0
   1a2cc:	mov	r2, #0
   1a2d0:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   1a2d4:	str	r0, [sp, #4]
   1a2d8:	cmp	r0, #0
   1a2dc:	beq	1a374 <__mempcpy_chk@plt+0x8d94>
   1a2e0:	add	r4, sp, #4
   1a2e4:	mov	r6, #0
   1a2e8:	str	r7, [r0]
   1a2ec:	ldr	r0, [r4]
   1a2f0:	ldr	r1, [r0, #24]
   1a2f4:	orr	r1, r1, #262144	; 0x40000
   1a2f8:	str	r1, [r0, #24]
   1a2fc:	ldr	r0, [r5, #4]
   1a300:	ldr	r7, [r4]
   1a304:	cmp	r0, #0
   1a308:	beq	1a318 <__mempcpy_chk@plt+0x8d38>
   1a30c:	add	r4, r7, #4
   1a310:	mov	r5, r0
   1a314:	b	1a34c <__mempcpy_chk@plt+0x8d6c>
   1a318:	mov	r1, #0
   1a31c:	mov	r0, r5
   1a320:	ldr	r5, [r5, #8]
   1a324:	cmp	r5, r1
   1a328:	cmpne	r5, #0
   1a32c:	bne	1a348 <__mempcpy_chk@plt+0x8d68>
   1a330:	ldr	r7, [r7]
   1a334:	ldr	r5, [r0]
   1a338:	cmp	r5, #0
   1a33c:	mov	r1, r0
   1a340:	bne	1a31c <__mempcpy_chk@plt+0x8d3c>
   1a344:	b	1a370 <__mempcpy_chk@plt+0x8d90>
   1a348:	add	r4, r7, #8
   1a34c:	add	r3, r5, #20
   1a350:	mov	r0, r8
   1a354:	mov	r1, #0
   1a358:	mov	r2, #0
   1a35c:	bl	1850c <__mempcpy_chk@plt+0x6f2c>
   1a360:	str	r0, [r4]
   1a364:	cmp	r0, #0
   1a368:	bne	1a2e8 <__mempcpy_chk@plt+0x8d08>
   1a36c:	b	1a374 <__mempcpy_chk@plt+0x8d94>
   1a370:	ldr	r6, [sp, #4]
   1a374:	mov	r0, r6
   1a378:	sub	sp, fp, #24
   1a37c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a380:	ldr	r2, [r1, #24]
   1a384:	uxtb	r3, r2
   1a388:	cmp	r3, #17
   1a38c:	bne	1a3a0 <__mempcpy_chk@plt+0x8dc0>
   1a390:	ldr	r3, [r1, #20]
   1a394:	cmp	r3, r0
   1a398:	orreq	r0, r2, #524288	; 0x80000
   1a39c:	streq	r0, [r1, #24]
   1a3a0:	mov	r0, #0
   1a3a4:	bx	lr
   1a3a8:	push	{r4, r5, r6, r7, fp, lr}
   1a3ac:	add	fp, sp, #16
   1a3b0:	mov	r4, r2
   1a3b4:	mov	r5, r1
   1a3b8:	mov	r6, r0
   1a3bc:	mov	r0, r2
   1a3c0:	mov	r1, r6
   1a3c4:	blx	r5
   1a3c8:	cmp	r0, #0
   1a3cc:	beq	1a3ec <__mempcpy_chk@plt+0x8e0c>
   1a3d0:	b	1a424 <__mempcpy_chk@plt+0x8e44>
   1a3d4:	mov	r0, r4
   1a3d8:	mov	r1, r7
   1a3dc:	blx	r5
   1a3e0:	cmp	r0, #0
   1a3e4:	mov	r6, r7
   1a3e8:	bne	1a424 <__mempcpy_chk@plt+0x8e44>
   1a3ec:	ldr	r7, [r6, #4]
   1a3f0:	cmp	r7, #0
   1a3f4:	bne	1a3d4 <__mempcpy_chk@plt+0x8df4>
   1a3f8:	mov	r1, #0
   1a3fc:	mov	r0, r6
   1a400:	ldr	r7, [r6, #8]
   1a404:	cmp	r7, r1
   1a408:	cmpne	r7, #0
   1a40c:	bne	1a3d4 <__mempcpy_chk@plt+0x8df4>
   1a410:	ldr	r6, [r0]
   1a414:	cmp	r6, #0
   1a418:	mov	r1, r0
   1a41c:	bne	1a3fc <__mempcpy_chk@plt+0x8e1c>
   1a420:	mov	r0, #0
   1a424:	pop	{r4, r5, r6, r7, fp, pc}
   1a428:	ldrb	r2, [r1, #24]
   1a42c:	cmp	r2, #17
   1a430:	beq	1a464 <__mempcpy_chk@plt+0x8e84>
   1a434:	cmp	r2, #4
   1a438:	bne	1a4b8 <__mempcpy_chk@plt+0x8ed8>
   1a43c:	ldr	r2, [r0, #132]	; 0x84
   1a440:	cmp	r2, #0
   1a444:	beq	1a4b8 <__mempcpy_chk@plt+0x8ed8>
   1a448:	ldr	r3, [r1, #20]
   1a44c:	ldr	r2, [r2, r3, lsl #2]
   1a450:	str	r2, [r1, #20]
   1a454:	ldr	r1, [r0, #80]	; 0x50
   1a458:	mov	r3, #1
   1a45c:	orr	r1, r1, r3, lsl r2
   1a460:	b	1a4b4 <__mempcpy_chk@plt+0x8ed4>
   1a464:	ldr	r2, [r1, #4]
   1a468:	cmp	r2, #0
   1a46c:	beq	1a4b8 <__mempcpy_chk@plt+0x8ed8>
   1a470:	ldrb	r3, [r2, #24]
   1a474:	cmp	r3, #17
   1a478:	bne	1a4b8 <__mempcpy_chk@plt+0x8ed8>
   1a47c:	ldr	r3, [r2, #4]
   1a480:	ldr	r2, [r2, #20]
   1a484:	str	r3, [r1, #4]
   1a488:	cmp	r3, #0
   1a48c:	strne	r1, [r3]
   1a490:	ldr	r1, [r1, #20]
   1a494:	ldr	r3, [r0, #132]	; 0x84
   1a498:	ldr	r1, [r3, r1, lsl #2]
   1a49c:	str	r1, [r3, r2, lsl #2]
   1a4a0:	cmp	r2, #31
   1a4a4:	bgt	1a4b8 <__mempcpy_chk@plt+0x8ed8>
   1a4a8:	ldr	r1, [r0, #80]	; 0x50
   1a4ac:	mov	r3, #1
   1a4b0:	bic	r1, r1, r3, lsl r2
   1a4b4:	str	r1, [r0, #80]	; 0x50
   1a4b8:	mov	r0, #0
   1a4bc:	bx	lr
   1a4c0:	push	{r4, r5, fp, lr}
   1a4c4:	add	fp, sp, #8
   1a4c8:	sub	sp, sp, #8
   1a4cc:	mov	r4, r1
   1a4d0:	mov	r5, r0
   1a4d4:	mov	r0, #0
   1a4d8:	str	r0, [sp, #4]
   1a4dc:	ldr	r2, [r1, #4]
   1a4e0:	cmp	r2, #0
   1a4e4:	beq	1a50c <__mempcpy_chk@plt+0x8f2c>
   1a4e8:	ldrb	r0, [r2, #24]
   1a4ec:	cmp	r0, #17
   1a4f0:	bne	1a50c <__mempcpy_chk@plt+0x8f2c>
   1a4f4:	add	r0, sp, #4
   1a4f8:	mov	r1, r5
   1a4fc:	bl	1a8e4 <__mempcpy_chk@plt+0x9304>
   1a500:	str	r0, [r4, #4]
   1a504:	cmp	r0, #0
   1a508:	strne	r4, [r0]
   1a50c:	ldr	r2, [r4, #8]
   1a510:	cmp	r2, #0
   1a514:	beq	1a53c <__mempcpy_chk@plt+0x8f5c>
   1a518:	ldrb	r0, [r2, #24]
   1a51c:	cmp	r0, #17
   1a520:	bne	1a53c <__mempcpy_chk@plt+0x8f5c>
   1a524:	add	r0, sp, #4
   1a528:	mov	r1, r5
   1a52c:	bl	1a8e4 <__mempcpy_chk@plt+0x9304>
   1a530:	str	r0, [r4, #8]
   1a534:	cmp	r0, #0
   1a538:	strne	r4, [r0]
   1a53c:	ldr	r0, [sp, #4]
   1a540:	sub	sp, fp, #8
   1a544:	pop	{r4, r5, fp, pc}
   1a548:	push	{r4, r5, fp, lr}
   1a54c:	add	fp, sp, #8
   1a550:	mov	r4, r1
   1a554:	mov	r5, r0
   1a558:	ldr	r2, [r1, #24]
   1a55c:	uxtb	r0, r2
   1a560:	cmp	r0, #16
   1a564:	bne	1a584 <__mempcpy_chk@plt+0x8fa4>
   1a568:	ldr	r0, [r4, #4]
   1a56c:	ldr	r1, [r0, #12]
   1a570:	str	r1, [r4, #12]
   1a574:	ldr	r0, [r0, #28]
   1a578:	str	r0, [r4, #28]
   1a57c:	mov	r0, #0
   1a580:	pop	{r4, r5, fp, pc}
   1a584:	str	r4, [r4, #12]
   1a588:	ldr	r1, [r4, #20]
   1a58c:	mov	r0, r5
   1a590:	bl	1aa00 <__mempcpy_chk@plt+0x9420>
   1a594:	str	r0, [r4, #28]
   1a598:	cmn	r0, #1
   1a59c:	beq	1a5d0 <__mempcpy_chk@plt+0x8ff0>
   1a5a0:	mov	r1, r0
   1a5a4:	ldrb	r2, [r4, #24]
   1a5a8:	mov	r0, #0
   1a5ac:	cmp	r2, #12
   1a5b0:	popne	{r4, r5, fp, pc}
   1a5b4:	ldr	r2, [r5]
   1a5b8:	add	r1, r2, r1, lsl #3
   1a5bc:	ldr	r2, [r1, #4]
   1a5c0:	ldr	r3, [r4, #20]
   1a5c4:	bfi	r2, r3, #8, #10
   1a5c8:	str	r2, [r1, #4]
   1a5cc:	pop	{r4, r5, fp, pc}
   1a5d0:	mov	r0, #12
   1a5d4:	pop	{r4, r5, fp, pc}
   1a5d8:	ldrb	r0, [r1, #24]
   1a5dc:	cmp	r0, #16
   1a5e0:	beq	1a5f4 <__mempcpy_chk@plt+0x9014>
   1a5e4:	cmp	r0, #11
   1a5e8:	bne	1a610 <__mempcpy_chk@plt+0x9030>
   1a5ec:	ldr	r0, [r1, #4]
   1a5f0:	b	1a630 <__mempcpy_chk@plt+0x9050>
   1a5f4:	ldmib	r1, {r0, r2}
   1a5f8:	ldr	r3, [r2, #12]
   1a5fc:	str	r3, [r0, #16]
   1a600:	ldr	r0, [r1, #16]
   1a604:	str	r0, [r2, #16]
   1a608:	mov	r0, #0
   1a60c:	bx	lr
   1a610:	ldr	r0, [r1, #4]
   1a614:	cmp	r0, #0
   1a618:	ldrne	r2, [r1, #16]
   1a61c:	strne	r2, [r0, #16]
   1a620:	ldr	r0, [r1, #8]
   1a624:	cmp	r0, #0
   1a628:	beq	1a634 <__mempcpy_chk@plt+0x9054>
   1a62c:	ldr	r1, [r1, #16]
   1a630:	str	r1, [r0, #16]
   1a634:	mov	r0, #0
   1a638:	bx	lr
   1a63c:	push	{fp, lr}
   1a640:	mov	fp, sp
   1a644:	ldr	r2, [r1, #24]
   1a648:	ldr	ip, [r1, #28]
   1a64c:	mvn	r3, #1
   1a650:	uxtab	r2, r3, r2
   1a654:	cmp	r2, #14
   1a658:	bhi	1a70c <__mempcpy_chk@plt+0x912c>
   1a65c:	add	r3, pc, #0
   1a660:	ldr	pc, [r3, r2, lsl #2]
   1a664:	andeq	sl, r1, r4, asr r7
   1a668:	andeq	sl, r1, ip, lsl #14
   1a66c:	andeq	sl, r1, r0, lsr #14
   1a670:	andeq	sl, r1, ip, lsl #14
   1a674:	andeq	sl, r1, ip, lsl #14
   1a678:	andeq	sl, r1, ip, lsl #14
   1a67c:	andeq	sl, r1, r0, lsr #13
   1a680:	andeq	sl, r1, r0, lsr #13
   1a684:			; <UNDEFINED> instruction: 0x0001a6bc
   1a688:			; <UNDEFINED> instruction: 0x0001a6bc
   1a68c:	andeq	sl, r1, r0, lsr #13
   1a690:	andeq	sl, r1, ip, lsl #14
   1a694:	andeq	sl, r1, ip, lsl #14
   1a698:	andeq	sl, r1, ip, lsl #14
   1a69c:	andeq	sl, r1, r4, asr r7
   1a6a0:	ldr	r0, [r0, #20]
   1a6a4:	add	r2, ip, ip, lsl #1
   1a6a8:	add	r0, r0, r2, lsl #2
   1a6ac:	ldr	r1, [r1, #16]
   1a6b0:	ldr	r1, [r1, #28]
   1a6b4:	pop	{fp, lr}
   1a6b8:	b	1ac4c <__mempcpy_chk@plt+0x966c>
   1a6bc:	ldrb	r2, [r0, #88]	; 0x58
   1a6c0:	orr	r2, r2, #1
   1a6c4:	strb	r2, [r0, #88]	; 0x58
   1a6c8:	add	r3, r1, #16
   1a6cc:	ldr	lr, [r1, #4]
   1a6d0:	ldr	r1, [r1, #8]
   1a6d4:	cmp	r1, #0
   1a6d8:	mov	r2, r3
   1a6dc:	addne	r2, r1, #12
   1a6e0:	ldr	r1, [r2]
   1a6e4:	ldr	r2, [r1, #28]
   1a6e8:	cmp	lr, #0
   1a6ec:	addne	r3, lr, #12
   1a6f0:	ldr	r1, [r3]
   1a6f4:	ldr	r1, [r1, #28]
   1a6f8:	ldr	r0, [r0, #20]
   1a6fc:	add	r3, ip, ip, lsl #1
   1a700:	add	r0, r0, r3, lsl #2
   1a704:	pop	{fp, lr}
   1a708:	b	1abd0 <__mempcpy_chk@plt+0x95f0>
   1a70c:	ldr	r0, [r0, #12]
   1a710:	ldr	r1, [r1, #16]
   1a714:	ldr	r1, [r1, #28]
   1a718:	str	r1, [r0, ip, lsl #2]
   1a71c:	b	1a754 <__mempcpy_chk@plt+0x9174>
   1a720:	ldr	r3, [r0, #12]
   1a724:	ldr	r2, [r1, #16]
   1a728:	ldr	r2, [r2, #28]
   1a72c:	str	r2, [r3, ip, lsl #2]
   1a730:	ldrb	r1, [r1, #24]
   1a734:	cmp	r1, #4
   1a738:	bne	1a754 <__mempcpy_chk@plt+0x9174>
   1a73c:	ldr	r0, [r0, #20]
   1a740:	add	r1, ip, ip, lsl #1
   1a744:	add	r0, r0, r1, lsl #2
   1a748:	mov	r1, r2
   1a74c:	pop	{fp, lr}
   1a750:	b	1ac4c <__mempcpy_chk@plt+0x966c>
   1a754:	mov	r0, #0
   1a758:	pop	{fp, pc}
   1a75c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a760:	add	fp, sp, #24
   1a764:	sub	sp, sp, #16
   1a768:	mov	r4, r0
   1a76c:	mov	r7, #0
   1a770:	add	r8, sp, #4
   1a774:	mov	r6, #0
   1a778:	b	1a7a8 <__mempcpy_chk@plt+0x91c8>
   1a77c:	mov	r0, r7
   1a780:	ldr	r1, [r4, #8]
   1a784:	add	r2, r6, #1
   1a788:	subs	r3, r2, r1
   1a78c:	mov	r6, r3
   1a790:	movne	r6, r2
   1a794:	movwne	r3, #1
   1a798:	and	r7, r0, r3
   1a79c:	tst	r0, #1
   1a7a0:	cmpeq	r2, r1
   1a7a4:	beq	1a804 <__mempcpy_chk@plt+0x9224>
   1a7a8:	ldr	r0, [r4, #24]
   1a7ac:	add	r5, r6, r6, lsl #1
   1a7b0:	add	r0, r0, r5, lsl #2
   1a7b4:	ldr	r0, [r0, #4]
   1a7b8:	cmp	r0, #0
   1a7bc:	bne	1a77c <__mempcpy_chk@plt+0x919c>
   1a7c0:	mov	r0, r8
   1a7c4:	mov	r1, r4
   1a7c8:	mov	r2, r6
   1a7cc:	mov	r3, #1
   1a7d0:	bl	1ac98 <__mempcpy_chk@plt+0x96b8>
   1a7d4:	cmp	r0, #0
   1a7d8:	bne	1a808 <__mempcpy_chk@plt+0x9228>
   1a7dc:	ldr	r0, [r4, #24]
   1a7e0:	add	r0, r0, r5, lsl #2
   1a7e4:	ldr	r0, [r0, #4]
   1a7e8:	cmp	r0, #0
   1a7ec:	mov	r0, r7
   1a7f0:	bne	1a780 <__mempcpy_chk@plt+0x91a0>
   1a7f4:	ldr	r0, [sp, #12]
   1a7f8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1a7fc:	mov	r0, #1
   1a800:	b	1a780 <__mempcpy_chk@plt+0x91a0>
   1a804:	mov	r0, #0
   1a808:	sub	sp, fp, #24
   1a80c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a810:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a814:	add	fp, sp, #24
   1a818:	mov	r4, r0
   1a81c:	ldr	r0, [r0, #8]
   1a820:	cmp	r0, #0
   1a824:	beq	1a8d4 <__mempcpy_chk@plt+0x92f4>
   1a828:	mov	r0, #0
   1a82c:	mov	r1, #0
   1a830:	mov	r2, #0
   1a834:	ldr	r3, [r4, #28]
   1a838:	str	r0, [r3, r1]!
   1a83c:	str	r0, [r3, #4]
   1a840:	str	r0, [r3, #8]
   1a844:	add	r1, r1, #12
   1a848:	add	r2, r2, #1
   1a84c:	ldr	r3, [r4, #8]
   1a850:	cmp	r2, r3
   1a854:	bcc	1a834 <__mempcpy_chk@plt+0x9254>
   1a858:	cmp	r3, #0
   1a85c:	beq	1a8d4 <__mempcpy_chk@plt+0x92f4>
   1a860:	mov	r5, #0
   1a864:	b	1a878 <__mempcpy_chk@plt+0x9298>
   1a868:	add	r5, r5, #1
   1a86c:	ldr	r0, [r4, #8]
   1a870:	cmp	r5, r0
   1a874:	bcs	1a8d4 <__mempcpy_chk@plt+0x92f4>
   1a878:	ldr	r0, [r4, #24]
   1a87c:	add	r8, r5, r5, lsl #1
   1a880:	add	r0, r0, r8, lsl #2
   1a884:	ldr	r1, [r0, #4]
   1a888:	cmp	r1, #1
   1a88c:	blt	1a868 <__mempcpy_chk@plt+0x9288>
   1a890:	ldr	r7, [r0, #8]
   1a894:	mov	r6, #0
   1a898:	ldr	r0, [r7, r6, lsl #2]
   1a89c:	add	r0, r0, r0, lsl #1
   1a8a0:	ldr	r1, [r4, #28]
   1a8a4:	add	r0, r1, r0, lsl #2
   1a8a8:	mov	r1, r5
   1a8ac:	bl	1b4d8 <__mempcpy_chk@plt+0x9ef8>
   1a8b0:	cmp	r0, #0
   1a8b4:	beq	1a8dc <__mempcpy_chk@plt+0x92fc>
   1a8b8:	add	r6, r6, #1
   1a8bc:	ldr	r0, [r4, #24]
   1a8c0:	add	r0, r0, r8, lsl #2
   1a8c4:	ldr	r0, [r0, #4]
   1a8c8:	cmp	r6, r0
   1a8cc:	blt	1a898 <__mempcpy_chk@plt+0x92b8>
   1a8d0:	b	1a868 <__mempcpy_chk@plt+0x9288>
   1a8d4:	mov	r0, #0
   1a8d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a8dc:	mov	r0, #12
   1a8e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a8e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8e8:	add	fp, sp, #28
   1a8ec:	sub	sp, sp, #4
   1a8f0:	mov	r9, r2
   1a8f4:	mov	r8, r0
   1a8f8:	ldr	r5, [r2, #4]
   1a8fc:	ldr	r6, [r1]
   1a900:	cmp	r5, #0
   1a904:	ldrbne	r0, [r1, #28]
   1a908:	andsne	r0, r0, #16
   1a90c:	bne	1a9d8 <__mempcpy_chk@plt+0x93f8>
   1a910:	mov	r0, r6
   1a914:	mov	r1, #0
   1a918:	mov	r2, #0
   1a91c:	mov	r3, #8
   1a920:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   1a924:	mov	sl, r0
   1a928:	mov	r0, r6
   1a92c:	mov	r1, #0
   1a930:	mov	r2, #0
   1a934:	mov	r3, #9
   1a938:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   1a93c:	mov	r4, r0
   1a940:	cmp	r5, #0
   1a944:	mov	r7, r0
   1a948:	beq	1a964 <__mempcpy_chk@plt+0x9384>
   1a94c:	mov	r0, r6
   1a950:	mov	r1, r5
   1a954:	mov	r2, r4
   1a958:	mov	r3, #16
   1a95c:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   1a960:	mov	r7, r0
   1a964:	mov	r0, r6
   1a968:	mov	r1, sl
   1a96c:	mov	r2, r7
   1a970:	mov	r3, #16
   1a974:	bl	17490 <__mempcpy_chk@plt+0x5eb0>
   1a978:	cmp	r4, #0
   1a97c:	beq	1a98c <__mempcpy_chk@plt+0x93ac>
   1a980:	cmp	sl, #0
   1a984:	cmpne	r7, #0
   1a988:	bne	1a99c <__mempcpy_chk@plt+0x93bc>
   1a98c:	mov	r0, #12
   1a990:	str	r0, [r8]
   1a994:	mov	r5, #0
   1a998:	b	1a9f4 <__mempcpy_chk@plt+0x9414>
   1a99c:	mov	r5, r0
   1a9a0:	cmp	r0, #0
   1a9a4:	beq	1a98c <__mempcpy_chk@plt+0x93ac>
   1a9a8:	ldr	r0, [r9, #20]
   1a9ac:	str	r0, [r4, #20]
   1a9b0:	str	r0, [sl, #20]
   1a9b4:	ldr	r0, [r4, #24]
   1a9b8:	ldr	r1, [r9, #24]
   1a9bc:	lsr	r1, r1, #19
   1a9c0:	bfi	r0, r1, #19, #1
   1a9c4:	str	r0, [r4, #24]
   1a9c8:	ldr	r0, [sl, #24]
   1a9cc:	bfi	r0, r1, #19, #1
   1a9d0:	str	r0, [sl, #24]
   1a9d4:	b	1a9f4 <__mempcpy_chk@plt+0x9414>
   1a9d8:	ldr	r0, [r9, #20]
   1a9dc:	cmp	r0, #31
   1a9e0:	bgt	1a9f4 <__mempcpy_chk@plt+0x9414>
   1a9e4:	ldr	r1, [r6, #80]	; 0x50
   1a9e8:	mov	r2, #1
   1a9ec:	tst	r1, r2, lsl r0
   1a9f0:	bne	1a910 <__mempcpy_chk@plt+0x9330>
   1a9f4:	mov	r0, r5
   1a9f8:	sub	sp, fp, #28
   1a9fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa04:	add	fp, sp, #28
   1aa08:	sub	sp, sp, #12
   1aa0c:	mov	r5, r2
   1aa10:	mov	r9, r1
   1aa14:	mov	r4, r0
   1aa18:	ldr	r7, [r0, #4]
   1aa1c:	ldr	r0, [r0, #8]
   1aa20:	cmp	r0, r7
   1aa24:	bcs	1aaf4 <__mempcpy_chk@plt+0x9514>
   1aa28:	ldr	r0, [r4]
   1aa2c:	ldr	r1, [r4, #8]
   1aa30:	str	r9, [r0, r1, lsl #3]!
   1aa34:	str	r5, [r0, #4]
   1aa38:	ldr	r0, [r4]
   1aa3c:	ldr	r1, [r4, #8]
   1aa40:	add	r0, r0, r1, lsl #3
   1aa44:	ldr	r1, [r0, #4]
   1aa48:	bfc	r1, #8, #10
   1aa4c:	str	r1, [r0, #4]
   1aa50:	uxtb	r1, r5
   1aa54:	cmp	r1, #5
   1aa58:	bne	1aa6c <__mempcpy_chk@plt+0x948c>
   1aa5c:	ldr	r2, [r4, #92]	; 0x5c
   1aa60:	mov	r0, #1048576	; 0x100000
   1aa64:	cmp	r2, #1
   1aa68:	bgt	1aa7c <__mempcpy_chk@plt+0x949c>
   1aa6c:	sub	r0, r1, #6
   1aa70:	clz	r0, r0
   1aa74:	lsr	r0, r0, #5
   1aa78:	lsl	r0, r0, #20
   1aa7c:	ldr	r1, [r4]
   1aa80:	ldr	r2, [r4, #8]
   1aa84:	add	r1, r1, r2, lsl #3
   1aa88:	ldr	r2, [r1, #4]
   1aa8c:	bic	r2, r2, #1048576	; 0x100000
   1aa90:	orr	r0, r2, r0
   1aa94:	str	r0, [r1, #4]
   1aa98:	ldr	r0, [r4, #8]
   1aa9c:	ldr	r1, [r4, #12]
   1aaa0:	mvn	r2, #0
   1aaa4:	str	r2, [r1, r0, lsl #2]
   1aaa8:	ldr	r0, [r4, #8]
   1aaac:	ldr	r1, [r4, #20]
   1aab0:	add	r0, r0, r0, lsl #1
   1aab4:	mov	r2, #0
   1aab8:	str	r2, [r1, r0, lsl #2]!
   1aabc:	str	r2, [r1, #4]
   1aac0:	str	r2, [r1, #8]
   1aac4:	ldr	r0, [r4, #8]
   1aac8:	ldr	r1, [r4, #24]
   1aacc:	add	r0, r0, r0, lsl #1
   1aad0:	str	r2, [r1, r0, lsl #2]!
   1aad4:	str	r2, [r1, #4]
   1aad8:	str	r2, [r1, #8]
   1aadc:	ldr	r6, [r4, #8]
   1aae0:	add	r0, r6, #1
   1aae4:	str	r0, [r4, #8]
   1aae8:	mov	r0, r6
   1aaec:	sub	sp, fp, #28
   1aaf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aaf4:	lsl	r1, r7, #1
   1aaf8:	mvn	r6, #0
   1aafc:	movw	r0, #21845	; 0x5555
   1ab00:	movt	r0, #5461	; 0x1555
   1ab04:	cmp	r1, r0
   1ab08:	bhi	1aae8 <__mempcpy_chk@plt+0x9508>
   1ab0c:	str	r1, [sp, #8]
   1ab10:	ldr	r0, [r4]
   1ab14:	lsl	r1, r7, #4
   1ab18:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1ab1c:	cmp	r0, #0
   1ab20:	beq	1aae8 <__mempcpy_chk@plt+0x9508>
   1ab24:	str	r0, [r4]
   1ab28:	ldr	r0, [r4, #12]
   1ab2c:	lsl	r8, r7, #3
   1ab30:	mov	r1, r8
   1ab34:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1ab38:	str	r0, [sp, #4]
   1ab3c:	ldr	r0, [r4, #16]
   1ab40:	mov	r1, r8
   1ab44:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1ab48:	mov	r2, r0
   1ab4c:	ldr	r0, [r4, #20]
   1ab50:	add	r1, r7, r7, lsl #1
   1ab54:	mov	r7, r2
   1ab58:	lsl	r8, r1, #3
   1ab5c:	mov	r1, r8
   1ab60:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1ab64:	mov	sl, r0
   1ab68:	ldr	r0, [r4, #24]
   1ab6c:	mov	r1, r8
   1ab70:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1ab74:	mov	r8, r0
   1ab78:	ldr	r0, [sp, #4]
   1ab7c:	cmp	r0, #0
   1ab80:	beq	1ab90 <__mempcpy_chk@plt+0x95b0>
   1ab84:	cmp	r7, #0
   1ab88:	cmpne	sl, #0
   1ab8c:	bne	1abb0 <__mempcpy_chk@plt+0x95d0>
   1ab90:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ab94:	mov	r0, r7
   1ab98:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ab9c:	mov	r0, sl
   1aba0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1aba4:	mov	r0, r8
   1aba8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1abac:	b	1aae8 <__mempcpy_chk@plt+0x9508>
   1abb0:	cmp	r8, #0
   1abb4:	beq	1ab90 <__mempcpy_chk@plt+0x95b0>
   1abb8:	add	r1, r4, #12
   1abbc:	stm	r1, {r0, r7, sl}
   1abc0:	str	r8, [r4, #24]
   1abc4:	ldr	r0, [sp, #8]
   1abc8:	str	r0, [r4, #4]
   1abcc:	b	1aa28 <__mempcpy_chk@plt+0x9448>
   1abd0:	push	{r4, r5, r6, sl, fp, lr}
   1abd4:	add	fp, sp, #16
   1abd8:	mov	r5, r2
   1abdc:	mov	r4, r1
   1abe0:	mov	r6, r0
   1abe4:	mov	r0, #2
   1abe8:	str	r0, [r6]
   1abec:	mov	r0, #8
   1abf0:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1abf4:	str	r0, [r6, #8]
   1abf8:	cmp	r0, #0
   1abfc:	beq	1ac44 <__mempcpy_chk@plt+0x9664>
   1ac00:	cmp	r4, r5
   1ac04:	bne	1ac20 <__mempcpy_chk@plt+0x9640>
   1ac08:	mov	r0, #1
   1ac0c:	str	r0, [r6, #4]
   1ac10:	ldr	r0, [r6, #8]
   1ac14:	str	r4, [r0]
   1ac18:	mov	r0, #0
   1ac1c:	pop	{r4, r5, r6, sl, fp, pc}
   1ac20:	mov	r0, #2
   1ac24:	str	r0, [r6, #4]
   1ac28:	ldr	r0, [r6, #8]
   1ac2c:	cmp	r4, r5
   1ac30:	stmlt	r0, {r4, r5}
   1ac34:	strge	r5, [r0]
   1ac38:	strge	r4, [r0, #4]
   1ac3c:	mov	r0, #0
   1ac40:	pop	{r4, r5, r6, sl, fp, pc}
   1ac44:	mov	r0, #12
   1ac48:	pop	{r4, r5, r6, sl, fp, pc}
   1ac4c:	push	{r4, r5, fp, lr}
   1ac50:	add	fp, sp, #8
   1ac54:	mov	r5, r1
   1ac58:	mov	r4, r0
   1ac5c:	mov	r0, #1
   1ac60:	str	r0, [r4]
   1ac64:	str	r0, [r4, #4]
   1ac68:	mov	r0, #4
   1ac6c:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1ac70:	str	r0, [r4, #8]
   1ac74:	cmp	r0, #0
   1ac78:	strne	r5, [r0]
   1ac7c:	movne	r0, #0
   1ac80:	popne	{r4, r5, fp, pc}
   1ac84:	mov	r0, #0
   1ac88:	str	r0, [r4]
   1ac8c:	str	r0, [r4, #4]
   1ac90:	mov	r0, #12
   1ac94:	pop	{r4, r5, fp, pc}
   1ac98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac9c:	add	fp, sp, #28
   1aca0:	sub	sp, sp, #44	; 0x2c
   1aca4:	mov	r8, r3
   1aca8:	mov	r6, r2
   1acac:	mov	r5, r1
   1acb0:	mov	r7, r0
   1acb4:	ldr	r0, [r1, #20]
   1acb8:	add	r4, r2, r2, lsl #1
   1acbc:	add	r0, r0, r4, lsl #2
   1acc0:	ldr	r0, [r0, #4]
   1acc4:	add	r1, r0, #1
   1acc8:	add	r0, sp, #32
   1accc:	bl	1aeac <__mempcpy_chk@plt+0x98cc>
   1acd0:	cmp	r0, #0
   1acd4:	bne	1aea4 <__mempcpy_chk@plt+0x98c4>
   1acd8:	ldr	r0, [sp, #36]	; 0x24
   1acdc:	ldr	r1, [sp, #40]	; 0x28
   1ace0:	add	r2, r0, #1
   1ace4:	str	r2, [sp, #36]	; 0x24
   1ace8:	str	r6, [r1, r0, lsl #2]
   1acec:	ldr	r0, [r5, #24]
   1acf0:	add	r0, r0, r4, lsl #2
   1acf4:	mvn	r1, #0
   1acf8:	str	r1, [r0, #4]
   1acfc:	ldr	r1, [r5]
   1ad00:	add	r0, r1, r6, lsl #3
   1ad04:	ldr	r0, [r0, #4]
   1ad08:	ubfx	r0, r0, #8, #10
   1ad0c:	cmp	r0, #0
   1ad10:	beq	1ad60 <__mempcpy_chk@plt+0x9780>
   1ad14:	ldr	r2, [r5, #20]
   1ad18:	add	r2, r2, r4, lsl #2
   1ad1c:	ldr	r3, [r2, #4]
   1ad20:	cmp	r3, #0
   1ad24:	beq	1ad60 <__mempcpy_chk@plt+0x9780>
   1ad28:	ldr	r2, [r2, #8]
   1ad2c:	ldr	r2, [r2]
   1ad30:	add	r1, r1, r2, lsl #3
   1ad34:	ldrb	r1, [r1, #6]
   1ad38:	tst	r1, #4
   1ad3c:	bne	1ad60 <__mempcpy_chk@plt+0x9780>
   1ad40:	str	r0, [sp]
   1ad44:	mov	r0, r5
   1ad48:	mov	r1, r6
   1ad4c:	mov	r2, r6
   1ad50:	mov	r3, r6
   1ad54:	bl	1aedc <__mempcpy_chk@plt+0x98fc>
   1ad58:	cmp	r0, #0
   1ad5c:	bne	1aea4 <__mempcpy_chk@plt+0x98c4>
   1ad60:	ldr	r0, [r5]
   1ad64:	add	r0, r0, r6, lsl #3
   1ad68:	ldrb	r0, [r0, #4]
   1ad6c:	tst	r0, #8
   1ad70:	beq	1ae78 <__mempcpy_chk@plt+0x9898>
   1ad74:	ldr	r0, [r5, #20]
   1ad78:	add	r1, r0, r4, lsl #2
   1ad7c:	ldr	r1, [r1, #4]
   1ad80:	cmp	r1, #1
   1ad84:	blt	1ae78 <__mempcpy_chk@plt+0x9898>
   1ad88:	str	r8, [sp, #8]
   1ad8c:	str	r7, [sp, #12]
   1ad90:	mov	r8, #0
   1ad94:	add	r7, sp, #16
   1ad98:	add	sl, sp, #32
   1ad9c:	mov	r6, #0
   1ada0:	b	1adc0 <__mempcpy_chk@plt+0x97e0>
   1ada4:	mov	r8, #1
   1ada8:	ldr	r0, [r5, #20]
   1adac:	add	r1, r0, r4, lsl #2
   1adb0:	ldr	r1, [r1, #4]
   1adb4:	add	r6, r6, #1
   1adb8:	cmp	r6, r1
   1adbc:	bge	1ae4c <__mempcpy_chk@plt+0x986c>
   1adc0:	add	r0, r0, r4, lsl #2
   1adc4:	ldr	r0, [r0, #8]
   1adc8:	ldr	r2, [r0, r6, lsl #2]
   1adcc:	add	r9, r2, r2, lsl #1
   1add0:	ldr	r0, [r5, #24]
   1add4:	add	r0, r0, r9, lsl #2
   1add8:	ldr	r1, [r0, #4]
   1addc:	cmn	r1, #1
   1ade0:	beq	1ada4 <__mempcpy_chk@plt+0x97c4>
   1ade4:	cmp	r1, #0
   1ade8:	bne	1ae08 <__mempcpy_chk@plt+0x9828>
   1adec:	mov	r0, r7
   1adf0:	mov	r1, r5
   1adf4:	mov	r3, #0
   1adf8:	bl	1ac98 <__mempcpy_chk@plt+0x96b8>
   1adfc:	cmp	r0, #0
   1ae00:	beq	1ae18 <__mempcpy_chk@plt+0x9838>
   1ae04:	b	1aea4 <__mempcpy_chk@plt+0x98c4>
   1ae08:	vldr	d16, [r0]
   1ae0c:	ldr	r0, [r0, #8]
   1ae10:	str	r0, [sp, #24]
   1ae14:	vstr	d16, [sp, #16]
   1ae18:	mov	r0, sl
   1ae1c:	mov	r1, r7
   1ae20:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   1ae24:	cmp	r0, #0
   1ae28:	bne	1aea4 <__mempcpy_chk@plt+0x98c4>
   1ae2c:	ldr	r0, [r5, #24]
   1ae30:	add	r0, r0, r9, lsl #2
   1ae34:	ldr	r0, [r0, #4]
   1ae38:	cmp	r0, #0
   1ae3c:	bne	1ada8 <__mempcpy_chk@plt+0x97c8>
   1ae40:	ldr	r0, [sp, #24]
   1ae44:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ae48:	b	1ada4 <__mempcpy_chk@plt+0x97c4>
   1ae4c:	tst	r8, #1
   1ae50:	ldr	r7, [sp, #12]
   1ae54:	ldr	r0, [sp, #8]
   1ae58:	beq	1ae78 <__mempcpy_chk@plt+0x9898>
   1ae5c:	cmp	r0, #0
   1ae60:	bne	1ae78 <__mempcpy_chk@plt+0x9898>
   1ae64:	ldr	r0, [r5, #24]
   1ae68:	add	r0, r0, r4, lsl #2
   1ae6c:	mov	r1, #0
   1ae70:	str	r1, [r0, #4]
   1ae74:	b	1ae90 <__mempcpy_chk@plt+0x98b0>
   1ae78:	ldr	r0, [r5, #24]
   1ae7c:	vldr	d16, [sp, #32]
   1ae80:	add	r0, r0, r4, lsl #2
   1ae84:	ldr	r1, [sp, #40]	; 0x28
   1ae88:	str	r1, [r0, #8]
   1ae8c:	vstr	d16, [r0]
   1ae90:	ldr	r0, [sp, #40]	; 0x28
   1ae94:	vldr	d16, [sp, #32]
   1ae98:	str	r0, [r7, #8]
   1ae9c:	vstr	d16, [r7]
   1aea0:	mov	r0, #0
   1aea4:	sub	sp, fp, #28
   1aea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aeac:	push	{r4, r5, fp, lr}
   1aeb0:	add	fp, sp, #8
   1aeb4:	mov	r5, r0
   1aeb8:	mov	r4, #0
   1aebc:	stm	r0, {r1, r4}
   1aec0:	lsl	r0, r1, #2
   1aec4:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1aec8:	str	r0, [r5, #8]
   1aecc:	cmp	r0, #0
   1aed0:	moveq	r4, #12
   1aed4:	mov	r0, r4
   1aed8:	pop	{r4, r5, fp, pc}
   1aedc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aee0:	add	fp, sp, #28
   1aee4:	sub	sp, sp, #20
   1aee8:	str	r3, [sp, #8]
   1aeec:	mov	r8, r2
   1aef0:	mov	r9, r1
   1aef4:	mov	r5, r0
   1aef8:	ldr	r0, [fp, #8]
   1aefc:	str	r0, [sp, #16]
   1af00:	ldr	r0, [r5]
   1af04:	add	r0, r0, r9, lsl #3
   1af08:	ldrb	r1, [r0, #4]!
   1af0c:	cmp	r1, #4
   1af10:	bne	1af80 <__mempcpy_chk@plt+0x99a0>
   1af14:	ldr	r0, [r5, #12]
   1af18:	ldr	r1, [r5, #20]
   1af1c:	ldr	r6, [r0, r9, lsl #2]
   1af20:	add	r4, r8, r8, lsl #1
   1af24:	add	r0, r1, r4, lsl #2
   1af28:	mov	r1, #0
   1af2c:	str	r1, [r0, #4]
   1af30:	mov	r0, r5
   1af34:	mov	r1, r6
   1af38:	ldr	r2, [sp, #16]
   1af3c:	bl	1b2c8 <__mempcpy_chk@plt+0x9ce8>
   1af40:	mov	sl, #12
   1af44:	cmn	r0, #1
   1af48:	beq	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1af4c:	mov	r7, r0
   1af50:	ldr	r0, [r5, #12]
   1af54:	ldr	r1, [r0, r9, lsl #2]
   1af58:	str	r1, [r0, r8, lsl #2]
   1af5c:	ldr	r0, [r5, #20]
   1af60:	add	r0, r0, r4, lsl #2
   1af64:	mov	r1, r7
   1af68:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1af6c:	cmp	r0, #0
   1af70:	mov	r9, r6
   1af74:	mov	r8, r7
   1af78:	bne	1af00 <__mempcpy_chk@plt+0x9920>
   1af7c:	b	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1af80:	ldr	r1, [r5, #20]
   1af84:	add	r6, r9, r9, lsl #1
   1af88:	add	r3, r1, r6, lsl #2
   1af8c:	ldr	r2, [r3, #4]
   1af90:	cmp	r2, #0
   1af94:	beq	1b0e0 <__mempcpy_chk@plt+0x9b00>
   1af98:	ldr	r3, [r3, #8]
   1af9c:	ldr	sl, [r3]
   1afa0:	add	r7, r8, r8, lsl #1
   1afa4:	add	r4, r1, r7, lsl #2
   1afa8:	mov	r1, #0
   1afac:	str	r1, [r4, #4]
   1afb0:	cmp	r2, #1
   1afb4:	beq	1b0a8 <__mempcpy_chk@plt+0x9ac8>
   1afb8:	str	r6, [sp, #12]
   1afbc:	mov	r0, r5
   1afc0:	mov	r1, sl
   1afc4:	ldr	r6, [sp, #16]
   1afc8:	mov	r2, r6
   1afcc:	bl	1b458 <__mempcpy_chk@plt+0x9e78>
   1afd0:	cmn	r0, #1
   1afd4:	beq	1aff0 <__mempcpy_chk@plt+0x9a10>
   1afd8:	mov	r1, r0
   1afdc:	mov	r0, r4
   1afe0:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1afe4:	cmp	r0, #0
   1afe8:	bne	1b058 <__mempcpy_chk@plt+0x9a78>
   1afec:	b	1b130 <__mempcpy_chk@plt+0x9b50>
   1aff0:	mov	r9, sl
   1aff4:	mov	r8, r7
   1aff8:	mov	r0, r5
   1affc:	mov	r1, sl
   1b000:	mov	r2, r6
   1b004:	bl	1b2c8 <__mempcpy_chk@plt+0x9ce8>
   1b008:	mov	sl, #12
   1b00c:	cmn	r0, #1
   1b010:	beq	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1b014:	mov	r7, r0
   1b018:	ldr	r0, [r5, #20]
   1b01c:	add	r0, r0, r8, lsl #2
   1b020:	mov	r1, r7
   1b024:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1b028:	cmp	r0, #0
   1b02c:	beq	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1b030:	ldr	r6, [sp, #16]
   1b034:	str	r6, [sp]
   1b038:	mov	r0, r5
   1b03c:	mov	r1, r9
   1b040:	mov	r2, r7
   1b044:	ldr	r3, [sp, #8]
   1b048:	bl	1aedc <__mempcpy_chk@plt+0x98fc>
   1b04c:	cmp	r0, #0
   1b050:	mov	r7, r8
   1b054:	bne	1b0f8 <__mempcpy_chk@plt+0x9b18>
   1b058:	ldr	r0, [r5, #20]
   1b05c:	ldr	r1, [sp, #12]
   1b060:	add	r0, r0, r1, lsl #2
   1b064:	ldr	r0, [r0, #8]
   1b068:	ldr	r9, [r0, #4]
   1b06c:	mov	r0, r5
   1b070:	mov	r1, r9
   1b074:	mov	r2, r6
   1b078:	bl	1b2c8 <__mempcpy_chk@plt+0x9ce8>
   1b07c:	mov	sl, #12
   1b080:	cmn	r0, #1
   1b084:	beq	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1b088:	mov	r8, r0
   1b08c:	ldr	r0, [r5, #20]
   1b090:	add	r0, r0, r7, lsl #2
   1b094:	mov	r1, r8
   1b098:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1b09c:	cmp	r0, #0
   1b0a0:	bne	1af00 <__mempcpy_chk@plt+0x9920>
   1b0a4:	b	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1b0a8:	ldr	r1, [sp, #8]
   1b0ac:	cmp	r9, r1
   1b0b0:	bne	1b0bc <__mempcpy_chk@plt+0x9adc>
   1b0b4:	cmp	r8, r9
   1b0b8:	bne	1b108 <__mempcpy_chk@plt+0x9b28>
   1b0bc:	ldr	r0, [r0]
   1b0c0:	ubfx	r0, r0, #8, #10
   1b0c4:	ldr	r2, [sp, #16]
   1b0c8:	orr	r2, r0, r2
   1b0cc:	mov	r0, r5
   1b0d0:	mov	r9, sl
   1b0d4:	mov	r1, sl
   1b0d8:	str	r2, [sp, #16]
   1b0dc:	b	1b078 <__mempcpy_chk@plt+0x9a98>
   1b0e0:	ldr	r0, [r5, #12]
   1b0e4:	ldr	r1, [r0, r9, lsl #2]
   1b0e8:	str	r1, [r0, r8, lsl #2]
   1b0ec:	mov	r0, #0
   1b0f0:	sub	sp, fp, #28
   1b0f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0f8:	mov	sl, r0
   1b0fc:	mov	r0, sl
   1b100:	sub	sp, fp, #28
   1b104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b108:	mov	r0, r4
   1b10c:	mov	r1, sl
   1b110:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1b114:	mov	r1, r0
   1b118:	mov	sl, #12
   1b11c:	mov	r0, #0
   1b120:	cmp	r1, #0
   1b124:	moveq	r0, sl
   1b128:	sub	sp, fp, #28
   1b12c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b130:	mov	sl, #12
   1b134:	b	1b0fc <__mempcpy_chk@plt+0x9b1c>
   1b138:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b13c:	add	fp, sp, #24
   1b140:	mov	r8, #0
   1b144:	cmp	r1, #0
   1b148:	beq	1b29c <__mempcpy_chk@plt+0x9cbc>
   1b14c:	mov	r6, r1
   1b150:	ldr	r1, [r1, #4]
   1b154:	cmp	r1, #0
   1b158:	beq	1b29c <__mempcpy_chk@plt+0x9cbc>
   1b15c:	mov	r9, r0
   1b160:	ldr	r2, [r0]
   1b164:	ldr	r0, [r0, #4]
   1b168:	add	r3, r0, r1, lsl #1
   1b16c:	cmp	r2, r3
   1b170:	bge	1b19c <__mempcpy_chk@plt+0x9bbc>
   1b174:	add	r7, r2, r1
   1b178:	lsl	r1, r7, #3
   1b17c:	ldr	r0, [r9, #8]
   1b180:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1b184:	cmp	r0, #0
   1b188:	beq	1b2bc <__mempcpy_chk@plt+0x9cdc>
   1b18c:	str	r0, [r9, #8]
   1b190:	lsl	r0, r7, #1
   1b194:	str	r0, [r9]
   1b198:	ldr	r0, [r9, #4]
   1b19c:	cmp	r0, #0
   1b1a0:	beq	1b2a4 <__mempcpy_chk@plt+0x9cc4>
   1b1a4:	ldr	r2, [r6, #4]
   1b1a8:	add	r7, r0, r2, lsl #1
   1b1ac:	sub	r1, r0, #1
   1b1b0:	sub	r0, r2, #1
   1b1b4:	orrs	r2, r0, r1
   1b1b8:	bmi	1b200 <__mempcpy_chk@plt+0x9c20>
   1b1bc:	ldr	r2, [r6, #8]
   1b1c0:	ldr	r3, [r9, #8]
   1b1c4:	b	1b1e4 <__mempcpy_chk@plt+0x9c04>
   1b1c8:	subge	r1, r1, #1
   1b1cc:	sublt	r7, r7, #1
   1b1d0:	strlt	r4, [r3, r7, lsl #2]
   1b1d4:	sublt	r0, r0, #1
   1b1d8:	orr	r5, r0, r1
   1b1dc:	cmn	r5, #1
   1b1e0:	ble	1b200 <__mempcpy_chk@plt+0x9c20>
   1b1e4:	ldr	r4, [r2, r0, lsl #2]
   1b1e8:	ldr	r5, [r3, r1, lsl #2]
   1b1ec:	cmp	r5, r4
   1b1f0:	bne	1b1c8 <__mempcpy_chk@plt+0x9be8>
   1b1f4:	sub	r1, r1, #1
   1b1f8:	sub	r0, r0, #1
   1b1fc:	b	1b1d8 <__mempcpy_chk@plt+0x9bf8>
   1b200:	cmp	r0, #0
   1b204:	bmi	1b224 <__mempcpy_chk@plt+0x9c44>
   1b208:	add	r2, r0, #1
   1b20c:	sub	r7, r7, r2
   1b210:	ldr	r0, [r9, #8]
   1b214:	add	r0, r0, r7, lsl #2
   1b218:	ldr	r1, [r6, #8]
   1b21c:	lsl	r2, r2, #2
   1b220:	bl	1134c <memcpy@plt>
   1b224:	ldr	r1, [r6, #4]
   1b228:	ldr	r0, [r9, #4]
   1b22c:	add	r1, r0, r1, lsl #1
   1b230:	sub	r1, r1, #1
   1b234:	sub	r2, r1, r7
   1b238:	adds	r2, r2, #1
   1b23c:	bcs	1b29c <__mempcpy_chk@plt+0x9cbc>
   1b240:	add	r3, r2, r0
   1b244:	str	r3, [r9, #4]
   1b248:	sub	r3, r0, #1
   1b24c:	ldr	r0, [r9, #8]
   1b250:	ldr	r6, [r0, r3, lsl #2]
   1b254:	ldr	r5, [r0, r1, lsl #2]
   1b258:	cmp	r5, r6
   1b25c:	ble	1b278 <__mempcpy_chk@plt+0x9c98>
   1b260:	add	r6, r2, r3
   1b264:	str	r5, [r0, r6, lsl #2]
   1b268:	subs	r2, r2, #1
   1b26c:	sub	r1, r1, #1
   1b270:	bne	1b250 <__mempcpy_chk@plt+0x9c70>
   1b274:	b	1b29c <__mempcpy_chk@plt+0x9cbc>
   1b278:	add	r5, r2, r3
   1b27c:	str	r6, [r0, r5, lsl #2]
   1b280:	sub	r6, r3, #1
   1b284:	cmp	r3, #0
   1b288:	mov	r3, r6
   1b28c:	bgt	1b250 <__mempcpy_chk@plt+0x9c70>
   1b290:	add	r1, r0, r7, lsl #2
   1b294:	lsl	r2, r2, #2
   1b298:	bl	1134c <memcpy@plt>
   1b29c:	mov	r0, r8
   1b2a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b2a4:	ldr	r0, [r6, #4]
   1b2a8:	str	r0, [r9, #4]
   1b2ac:	ldr	r0, [r9, #8]
   1b2b0:	ldr	r2, [r6, #4]
   1b2b4:	ldr	r1, [r6, #8]
   1b2b8:	b	1b294 <__mempcpy_chk@plt+0x9cb4>
   1b2bc:	mov	r8, #12
   1b2c0:	mov	r0, r8
   1b2c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b2c8:	push	{r4, r5, r6, sl, fp, lr}
   1b2cc:	add	fp, sp, #16
   1b2d0:	mov	r6, r2
   1b2d4:	mov	r4, r1
   1b2d8:	mov	r5, r0
   1b2dc:	ldr	r0, [r0]
   1b2e0:	ldr	r1, [r0, r1, lsl #3]!
   1b2e4:	ldr	r2, [r0, #4]
   1b2e8:	mov	r0, r5
   1b2ec:	bl	1aa00 <__mempcpy_chk@plt+0x9420>
   1b2f0:	cmn	r0, #1
   1b2f4:	ldrne	r1, [r5]
   1b2f8:	addne	r1, r1, r0, lsl #3
   1b2fc:	ldrne	r2, [r1, #4]
   1b300:	bfine	r2, r6, #8, #10
   1b304:	strne	r2, [r1, #4]
   1b308:	ldrne	r1, [r5]
   1b30c:	addne	r2, r1, r4, lsl #3
   1b310:	ldrne	r2, [r2, #4]
   1b314:	movwne	r3, #65280	; 0xff00
   1b318:	movtne	r3, #3
   1b31c:	andne	r2, r2, r3
   1b320:	addne	r1, r1, r0, lsl #3
   1b324:	ldrne	r3, [r1, #4]
   1b328:	orrne	r2, r2, r3
   1b32c:	strne	r2, [r1, #4]
   1b330:	ldrne	r1, [r5]
   1b334:	addne	r1, r1, r0, lsl #3
   1b338:	ldrne	r2, [r1, #4]
   1b33c:	orrne	r2, r2, #262144	; 0x40000
   1b340:	strne	r2, [r1, #4]
   1b344:	ldrne	r1, [r5, #16]
   1b348:	strne	r4, [r1, r0, lsl #2]
   1b34c:	pop	{r4, r5, r6, sl, fp, pc}
   1b350:	push	{r4, r5, fp, lr}
   1b354:	add	fp, sp, #8
   1b358:	mov	r5, r1
   1b35c:	mov	r4, r0
   1b360:	ldr	r2, [r0]
   1b364:	cmp	r2, #0
   1b368:	beq	1b394 <__mempcpy_chk@plt+0x9db4>
   1b36c:	ldr	r1, [r4, #4]
   1b370:	cmp	r1, #0
   1b374:	bne	1b3ac <__mempcpy_chk@plt+0x9dcc>
   1b378:	ldr	r0, [r4, #8]
   1b37c:	str	r5, [r0]
   1b380:	ldr	r0, [r4, #4]
   1b384:	add	r0, r0, #1
   1b388:	str	r0, [r4, #4]
   1b38c:	mov	r0, #1
   1b390:	pop	{r4, r5, fp, pc}
   1b394:	mov	r0, r4
   1b398:	mov	r1, r5
   1b39c:	bl	1ac4c <__mempcpy_chk@plt+0x966c>
   1b3a0:	clz	r0, r0
   1b3a4:	lsr	r0, r0, #5
   1b3a8:	pop	{r4, r5, fp, pc}
   1b3ac:	cmp	r2, r1
   1b3b0:	bne	1b3d8 <__mempcpy_chk@plt+0x9df8>
   1b3b4:	lsl	r0, r2, #1
   1b3b8:	str	r0, [r4]
   1b3bc:	ldr	r0, [r4, #8]
   1b3c0:	lsl	r1, r2, #3
   1b3c4:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1b3c8:	cmp	r0, #0
   1b3cc:	beq	1b450 <__mempcpy_chk@plt+0x9e70>
   1b3d0:	str	r0, [r4, #8]
   1b3d4:	ldr	r1, [r4, #4]
   1b3d8:	ldr	ip, [r4, #8]
   1b3dc:	ldr	r2, [ip]
   1b3e0:	cmp	r2, r5
   1b3e4:	ble	1b418 <__mempcpy_chk@plt+0x9e38>
   1b3e8:	cmp	r1, #1
   1b3ec:	blt	1b448 <__mempcpy_chk@plt+0x9e68>
   1b3f0:	add	r3, ip, r1, lsl #2
   1b3f4:	mov	r2, r3
   1b3f8:	ldr	r0, [r2, #-4]!
   1b3fc:	str	r0, [r3]
   1b400:	sub	r1, r1, #1
   1b404:	cmp	r1, #0
   1b408:	mov	r3, r2
   1b40c:	bgt	1b3f8 <__mempcpy_chk@plt+0x9e18>
   1b410:	mov	r1, #0
   1b414:	b	1b448 <__mempcpy_chk@plt+0x9e68>
   1b418:	add	r2, ip, r1, lsl #2
   1b41c:	ldr	r3, [r2, #-4]
   1b420:	cmp	r3, r5
   1b424:	ble	1b448 <__mempcpy_chk@plt+0x9e68>
   1b428:	sub	r1, r1, #2
   1b42c:	str	r3, [r2]
   1b430:	ldr	r3, [r2, #-8]
   1b434:	sub	r2, r2, #4
   1b438:	sub	r1, r1, #1
   1b43c:	cmp	r3, r5
   1b440:	bgt	1b42c <__mempcpy_chk@plt+0x9e4c>
   1b444:	add	r1, r1, #2
   1b448:	str	r5, [ip, r1, lsl #2]
   1b44c:	b	1b380 <__mempcpy_chk@plt+0x9da0>
   1b450:	mov	r0, #0
   1b454:	pop	{r4, r5, fp, pc}
   1b458:	push	{r4, r5, fp, lr}
   1b45c:	add	fp, sp, #8
   1b460:	mov	ip, r0
   1b464:	ldr	r3, [r0, #8]
   1b468:	sub	lr, r3, #1
   1b46c:	mvn	r0, #0
   1b470:	cmp	lr, #1
   1b474:	blt	1b4cc <__mempcpy_chk@plt+0x9eec>
   1b478:	ldr	r4, [ip]
   1b47c:	add	r4, r4, lr, lsl #3
   1b480:	ldr	r5, [r4, #4]
   1b484:	ands	r4, r5, #262144	; 0x40000
   1b488:	beq	1b4cc <__mempcpy_chk@plt+0x9eec>
   1b48c:	ldr	r4, [ip, #16]
   1b490:	sub	lr, r4, #4
   1b494:	ldr	r4, [lr, r3, lsl #2]
   1b498:	cmp	r4, r1
   1b49c:	ubfxeq	r4, r5, #8, #10
   1b4a0:	cmpeq	r4, r2
   1b4a4:	beq	1b4d0 <__mempcpy_chk@plt+0x9ef0>
   1b4a8:	sub	r4, r3, #2
   1b4ac:	cmp	r4, #1
   1b4b0:	blt	1b4cc <__mempcpy_chk@plt+0x9eec>
   1b4b4:	ldr	r4, [ip]
   1b4b8:	add	r4, r4, r3, lsl #3
   1b4bc:	ldr	r5, [r4, #-12]
   1b4c0:	ands	r4, r5, #262144	; 0x40000
   1b4c4:	sub	r3, r3, #1
   1b4c8:	bne	1b494 <__mempcpy_chk@plt+0x9eb4>
   1b4cc:	pop	{r4, r5, fp, pc}
   1b4d0:	sub	r0, r3, #1
   1b4d4:	pop	{r4, r5, fp, pc}
   1b4d8:	push	{r4, r5, fp, lr}
   1b4dc:	add	fp, sp, #8
   1b4e0:	mov	r4, r1
   1b4e4:	mov	r5, r0
   1b4e8:	ldr	r0, [r0]
   1b4ec:	ldr	r1, [r5, #4]
   1b4f0:	cmp	r0, r1
   1b4f4:	bne	1b51c <__mempcpy_chk@plt+0x9f3c>
   1b4f8:	mov	r1, #2
   1b4fc:	add	r0, r1, r0, lsl #1
   1b500:	str	r0, [r5]
   1b504:	lsl	r1, r0, #2
   1b508:	ldr	r0, [r5, #8]
   1b50c:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1b510:	cmp	r0, #0
   1b514:	beq	1b534 <__mempcpy_chk@plt+0x9f54>
   1b518:	str	r0, [r5, #8]
   1b51c:	ldmib	r5, {r0, r1}
   1b520:	add	r2, r0, #1
   1b524:	str	r2, [r5, #4]
   1b528:	str	r4, [r1, r0, lsl #2]
   1b52c:	mov	r0, #1
   1b530:	pop	{r4, r5, fp, pc}
   1b534:	mov	r0, #0
   1b538:	pop	{r4, r5, fp, pc}
   1b53c:	push	{r4, r5, fp, lr}
   1b540:	add	fp, sp, #8
   1b544:	mov	r5, r1
   1b548:	mov	r4, r0
   1b54c:	ldr	r0, [r1, #4]
   1b550:	str	r0, [r4, #4]
   1b554:	ldr	r1, [r1, #4]
   1b558:	cmp	r1, #1
   1b55c:	blt	1b590 <__mempcpy_chk@plt+0x9fb0>
   1b560:	str	r0, [r4]
   1b564:	lsl	r0, r0, #2
   1b568:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1b56c:	str	r0, [r4, #8]
   1b570:	cmp	r0, #0
   1b574:	beq	1b5a4 <__mempcpy_chk@plt+0x9fc4>
   1b578:	ldr	r2, [r5, #4]
   1b57c:	ldr	r1, [r5, #8]
   1b580:	lsl	r2, r2, #2
   1b584:	bl	1134c <memcpy@plt>
   1b588:	mov	r0, #0
   1b58c:	pop	{r4, r5, fp, pc}
   1b590:	mov	r0, #0
   1b594:	str	r0, [r4]
   1b598:	str	r0, [r4, #4]
   1b59c:	str	r0, [r4, #8]
   1b5a0:	pop	{r4, r5, fp, pc}
   1b5a4:	mov	r0, #0
   1b5a8:	str	r0, [r4]
   1b5ac:	str	r0, [r4, #4]
   1b5b0:	mov	r0, #12
   1b5b4:	pop	{r4, r5, fp, pc}
   1b5b8:	push	{r4, r5, r6, r7, fp, lr}
   1b5bc:	add	fp, sp, #16
   1b5c0:	mov	ip, r0
   1b5c4:	ldr	r0, [r0, #4]
   1b5c8:	cmp	r0, #1
   1b5cc:	blt	1b620 <__mempcpy_chk@plt+0xa040>
   1b5d0:	subs	r2, r0, #1
   1b5d4:	mov	r0, #0
   1b5d8:	mov	r3, #0
   1b5dc:	beq	1b60c <__mempcpy_chk@plt+0xa02c>
   1b5e0:	ldr	lr, [ip, #8]
   1b5e4:	mov	r3, #0
   1b5e8:	mov	r4, #1
   1b5ec:	add	r5, r2, r3
   1b5f0:	lsr	r6, r5, #1
   1b5f4:	ldr	r7, [lr, r6, lsl #2]
   1b5f8:	cmp	r7, r1
   1b5fc:	movge	r2, r6
   1b600:	addlt	r3, r4, r5, lsr #1
   1b604:	cmp	r3, r2
   1b608:	bcc	1b5ec <__mempcpy_chk@plt+0xa00c>
   1b60c:	ldr	r2, [ip, #8]
   1b610:	ldr	r2, [r2, r3, lsl #2]
   1b614:	cmp	r2, r1
   1b618:	addeq	r0, r3, #1
   1b61c:	pop	{r4, r5, r6, r7, fp, pc}
   1b620:	mov	r0, #0
   1b624:	pop	{r4, r5, r6, r7, fp, pc}
   1b628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b62c:	add	fp, sp, #28
   1b630:	sub	sp, sp, #12
   1b634:	mov	r6, r1
   1b638:	ldr	r1, [r2, #4]
   1b63c:	cmp	r1, #0
   1b640:	beq	1b710 <__mempcpy_chk@plt+0xa130>
   1b644:	mov	r5, r3
   1b648:	mov	sl, r2
   1b64c:	str	r0, [sp, #4]
   1b650:	mov	r0, r2
   1b654:	mov	r1, r3
   1b658:	bl	1b724 <__mempcpy_chk@plt+0xa144>
   1b65c:	mov	r4, r0
   1b660:	ldr	r0, [r6, #32]
   1b664:	str	r6, [sp, #8]
   1b668:	ldr	r1, [r6, #68]	; 0x44
   1b66c:	and	r1, r1, r4
   1b670:	add	r1, r1, r1, lsl #1
   1b674:	mov	r6, r0
   1b678:	ldr	r2, [r6, r1, lsl #2]!
   1b67c:	cmp	r2, #1
   1b680:	blt	1b6dc <__mempcpy_chk@plt+0xa0fc>
   1b684:	add	r0, r0, r1, lsl #2
   1b688:	ldr	r8, [r0, #8]
   1b68c:	mov	r9, #0
   1b690:	b	1b6a4 <__mempcpy_chk@plt+0xa0c4>
   1b694:	ldr	r0, [r6]
   1b698:	add	r9, r9, #1
   1b69c:	cmp	r9, r0
   1b6a0:	bge	1b6dc <__mempcpy_chk@plt+0xa0fc>
   1b6a4:	ldr	r7, [r8, r9, lsl #2]
   1b6a8:	ldr	r0, [r7]
   1b6ac:	cmp	r0, r4
   1b6b0:	bne	1b694 <__mempcpy_chk@plt+0xa0b4>
   1b6b4:	ldrb	r0, [r7, #52]	; 0x34
   1b6b8:	and	r0, r0, #15
   1b6bc:	cmp	r0, r5
   1b6c0:	bne	1b694 <__mempcpy_chk@plt+0xa0b4>
   1b6c4:	ldr	r0, [r7, #40]	; 0x28
   1b6c8:	mov	r1, sl
   1b6cc:	bl	1b750 <__mempcpy_chk@plt+0xa170>
   1b6d0:	cmp	r0, #0
   1b6d4:	beq	1b694 <__mempcpy_chk@plt+0xa0b4>
   1b6d8:	b	1b718 <__mempcpy_chk@plt+0xa138>
   1b6dc:	ldr	r0, [sp, #8]
   1b6e0:	mov	r1, sl
   1b6e4:	mov	r2, r5
   1b6e8:	mov	r3, r4
   1b6ec:	bl	1b7b8 <__mempcpy_chk@plt+0xa1d8>
   1b6f0:	mov	r7, r0
   1b6f4:	cmp	r0, #0
   1b6f8:	bne	1b718 <__mempcpy_chk@plt+0xa138>
   1b6fc:	mov	r0, #12
   1b700:	ldr	r1, [sp, #4]
   1b704:	str	r0, [r1]
   1b708:	mov	r7, #0
   1b70c:	b	1b718 <__mempcpy_chk@plt+0xa138>
   1b710:	mov	r7, #0
   1b714:	str	r7, [r0]
   1b718:	mov	r0, r7
   1b71c:	sub	sp, fp, #28
   1b720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b724:	mov	r2, r0
   1b728:	ldr	r3, [r0, #4]
   1b72c:	add	r0, r3, r1
   1b730:	cmp	r3, #1
   1b734:	bxlt	lr
   1b738:	ldr	r1, [r2, #8]
   1b73c:	ldr	r2, [r1], #4
   1b740:	add	r0, r2, r0
   1b744:	subs	r3, r3, #1
   1b748:	bne	1b73c <__mempcpy_chk@plt+0xa15c>
   1b74c:	bx	lr
   1b750:	push	{fp, lr}
   1b754:	mov	fp, sp
   1b758:	mov	lr, r0
   1b75c:	mov	r0, #0
   1b760:	cmp	lr, #0
   1b764:	cmpne	r1, #0
   1b768:	bne	1b770 <__mempcpy_chk@plt+0xa190>
   1b76c:	pop	{fp, pc}
   1b770:	ldr	ip, [lr, #4]
   1b774:	ldr	r3, [r1, #4]
   1b778:	cmp	ip, r3
   1b77c:	popne	{fp, pc}
   1b780:	sub	r3, ip, #1
   1b784:	add	r2, r3, #1
   1b788:	cmp	r2, #1
   1b78c:	blt	1b7b0 <__mempcpy_chk@plt+0xa1d0>
   1b790:	ldr	r2, [r1, #8]
   1b794:	ldr	ip, [r2, r3, lsl #2]
   1b798:	ldr	r2, [lr, #8]
   1b79c:	ldr	r2, [r2, r3, lsl #2]
   1b7a0:	sub	r3, r3, #1
   1b7a4:	cmp	r2, ip
   1b7a8:	beq	1b784 <__mempcpy_chk@plt+0xa1a4>
   1b7ac:	b	1b76c <__mempcpy_chk@plt+0xa18c>
   1b7b0:	mov	r0, #1
   1b7b4:	pop	{fp, pc}
   1b7b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7bc:	add	fp, sp, #28
   1b7c0:	sub	sp, sp, #20
   1b7c4:	mov	r8, r3
   1b7c8:	mov	r9, r2
   1b7cc:	mov	r7, r1
   1b7d0:	mov	r6, r0
   1b7d4:	mov	r0, #56	; 0x38
   1b7d8:	mov	r1, #1
   1b7dc:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1b7e0:	cmp	r0, #0
   1b7e4:	beq	1b9b8 <__mempcpy_chk@plt+0xa3d8>
   1b7e8:	mov	r4, r0
   1b7ec:	add	r5, r0, #4
   1b7f0:	mov	r0, r5
   1b7f4:	mov	r1, r7
   1b7f8:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   1b7fc:	cmp	r0, #0
   1b800:	bne	1b9c0 <__mempcpy_chk@plt+0xa3e0>
   1b804:	str	r8, [sp, #4]
   1b808:	str	r5, [r4, #40]	; 0x28
   1b80c:	and	r0, r9, #15
   1b810:	ldrb	r1, [r4, #52]	; 0x34
   1b814:	and	r1, r1, #240	; 0xf0
   1b818:	orr	r0, r1, r0
   1b81c:	strb	r0, [r4, #52]	; 0x34
   1b820:	ldr	r0, [r7, #4]
   1b824:	cmp	r0, #1
   1b828:	blt	1b98c <__mempcpy_chk@plt+0xa3ac>
   1b82c:	mov	r3, r5
   1b830:	and	r0, r9, #4
   1b834:	str	r0, [sp]
   1b838:	and	r0, r9, #2
   1b83c:	str	r0, [sp, #8]
   1b840:	and	r0, r9, #1
   1b844:	str	r0, [sp, #16]
   1b848:	mov	r8, #0
   1b84c:	movw	r0, #65280	; 0xff00
   1b850:	movt	r0, #3
   1b854:	add	sl, r0, #255	; 0xff
   1b858:	mov	r9, #0
   1b85c:	str	r5, [sp, #12]
   1b860:	b	1b888 <__mempcpy_chk@plt+0xa2a8>
   1b864:	sub	r1, r8, r9
   1b868:	mov	r0, r3
   1b86c:	bl	1b9cc <__mempcpy_chk@plt+0xa3ec>
   1b870:	ldr	r3, [sp, #12]
   1b874:	add	r9, r9, #1
   1b878:	ldr	r0, [r7, #4]
   1b87c:	add	r8, r8, #1
   1b880:	cmp	r8, r0
   1b884:	bge	1b98c <__mempcpy_chk@plt+0xa3ac>
   1b888:	ldr	r0, [r7, #8]
   1b88c:	ldr	r0, [r0, r8, lsl #2]
   1b890:	ldr	r1, [r6]
   1b894:	add	r0, r1, r0, lsl #3
   1b898:	ldr	r5, [r0, #4]
   1b89c:	and	r0, r5, sl
   1b8a0:	cmp	r0, #1
   1b8a4:	beq	1b878 <__mempcpy_chk@plt+0xa298>
   1b8a8:	movw	r0, #65280	; 0xff00
   1b8ac:	movt	r0, #3
   1b8b0:	and	r0, r5, r0
   1b8b4:	mov	r1, #32
   1b8b8:	and	r1, r1, r5, lsr #15
   1b8bc:	ldrb	r2, [r4, #52]	; 0x34
   1b8c0:	orr	r1, r2, r1
   1b8c4:	strb	r1, [r4, #52]	; 0x34
   1b8c8:	uxtb	r2, r5
   1b8cc:	cmp	r2, #2
   1b8d0:	beq	1b8e4 <__mempcpy_chk@plt+0xa304>
   1b8d4:	cmp	r2, #4
   1b8d8:	bne	1b8f0 <__mempcpy_chk@plt+0xa310>
   1b8dc:	mov	r2, #64	; 0x40
   1b8e0:	b	1b8e8 <__mempcpy_chk@plt+0xa308>
   1b8e4:	mov	r2, #16
   1b8e8:	orr	r1, r1, r2
   1b8ec:	strb	r1, [r4, #52]	; 0x34
   1b8f0:	cmp	r0, #0
   1b8f4:	beq	1b878 <__mempcpy_chk@plt+0xa298>
   1b8f8:	ldr	r0, [r4, #40]	; 0x28
   1b8fc:	cmp	r0, r3
   1b900:	bne	1b93c <__mempcpy_chk@plt+0xa35c>
   1b904:	mov	r0, #12
   1b908:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1b90c:	cmp	r0, #0
   1b910:	beq	1b9b0 <__mempcpy_chk@plt+0xa3d0>
   1b914:	str	r0, [r4, #40]	; 0x28
   1b918:	mov	r1, r7
   1b91c:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   1b920:	cmp	r0, #0
   1b924:	bne	1b9b0 <__mempcpy_chk@plt+0xa3d0>
   1b928:	ldrb	r0, [r4, #52]	; 0x34
   1b92c:	orr	r0, r0, #128	; 0x80
   1b930:	strb	r0, [r4, #52]	; 0x34
   1b934:	mov	r9, #0
   1b938:	ldr	r3, [sp, #12]
   1b93c:	ldr	r0, [sp, #16]
   1b940:	cmp	r0, #0
   1b944:	bne	1b950 <__mempcpy_chk@plt+0xa370>
   1b948:	ands	r0, r5, #256	; 0x100
   1b94c:	bne	1b864 <__mempcpy_chk@plt+0xa284>
   1b950:	ldr	r0, [sp, #16]
   1b954:	cmp	r0, #0
   1b958:	andsne	r0, r5, #512	; 0x200
   1b95c:	bne	1b864 <__mempcpy_chk@plt+0xa284>
   1b960:	ldr	r0, [sp, #8]
   1b964:	cmp	r0, #0
   1b968:	bne	1b974 <__mempcpy_chk@plt+0xa394>
   1b96c:	ands	r0, r5, #4096	; 0x1000
   1b970:	bne	1b864 <__mempcpy_chk@plt+0xa284>
   1b974:	ldr	r0, [sp]
   1b978:	cmp	r0, #0
   1b97c:	bne	1b878 <__mempcpy_chk@plt+0xa298>
   1b980:	ands	r0, r5, #16384	; 0x4000
   1b984:	bne	1b864 <__mempcpy_chk@plt+0xa284>
   1b988:	b	1b878 <__mempcpy_chk@plt+0xa298>
   1b98c:	mov	r0, r6
   1b990:	mov	r1, r4
   1b994:	ldr	r2, [sp, #4]
   1b998:	bl	1ba14 <__mempcpy_chk@plt+0xa434>
   1b99c:	cmp	r0, #0
   1b9a0:	bne	1b9b0 <__mempcpy_chk@plt+0xa3d0>
   1b9a4:	mov	r0, r4
   1b9a8:	sub	sp, fp, #28
   1b9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9b0:	mov	r0, r4
   1b9b4:	bl	15f3c <__mempcpy_chk@plt+0x495c>
   1b9b8:	mov	r4, #0
   1b9bc:	b	1b9a4 <__mempcpy_chk@plt+0xa3c4>
   1b9c0:	mov	r0, r4
   1b9c4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1b9c8:	b	1b9b8 <__mempcpy_chk@plt+0xa3d8>
   1b9cc:	cmp	r1, #0
   1b9d0:	bxmi	lr
   1b9d4:	ldr	r2, [r0, #4]
   1b9d8:	cmp	r2, r1
   1b9dc:	subgt	r2, r2, #1
   1b9e0:	strgt	r2, [r0, #4]
   1b9e4:	cmpgt	r2, r1
   1b9e8:	bgt	1b9f0 <__mempcpy_chk@plt+0xa410>
   1b9ec:	bx	lr
   1b9f0:	ldr	r2, [r0, #8]
   1b9f4:	add	r3, r2, r1, lsl #2
   1b9f8:	ldr	r3, [r3, #4]
   1b9fc:	str	r3, [r2, r1, lsl #2]
   1ba00:	add	r1, r1, #1
   1ba04:	ldr	r3, [r0, #4]
   1ba08:	cmp	r1, r3
   1ba0c:	blt	1b9f4 <__mempcpy_chk@plt+0xa414>
   1ba10:	b	1b9ec <__mempcpy_chk@plt+0xa40c>
   1ba14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba18:	add	fp, sp, #28
   1ba1c:	sub	sp, sp, #4
   1ba20:	mov	r9, r2
   1ba24:	mov	r4, r1
   1ba28:	mov	r7, r0
   1ba2c:	str	r2, [r1]
   1ba30:	ldr	r1, [r1, #8]
   1ba34:	add	r5, r4, #16
   1ba38:	mov	r0, r5
   1ba3c:	bl	1aeac <__mempcpy_chk@plt+0x98cc>
   1ba40:	mov	r8, #12
   1ba44:	cmp	r0, #0
   1ba48:	bne	1bae4 <__mempcpy_chk@plt+0xa504>
   1ba4c:	ldr	r0, [r4, #8]
   1ba50:	cmp	r0, #1
   1ba54:	blt	1baa0 <__mempcpy_chk@plt+0xa4c0>
   1ba58:	mov	r6, #0
   1ba5c:	b	1ba70 <__mempcpy_chk@plt+0xa490>
   1ba60:	ldr	r0, [r4, #8]
   1ba64:	add	r6, r6, #1
   1ba68:	cmp	r6, r0
   1ba6c:	bge	1baa0 <__mempcpy_chk@plt+0xa4c0>
   1ba70:	ldr	r0, [r4, #12]
   1ba74:	ldr	r1, [r0, r6, lsl #2]
   1ba78:	ldr	r0, [r7]
   1ba7c:	add	r0, r0, r1, lsl #3
   1ba80:	ldrb	r0, [r0, #4]
   1ba84:	tst	r0, #8
   1ba88:	bne	1ba60 <__mempcpy_chk@plt+0xa480>
   1ba8c:	mov	r0, r5
   1ba90:	bl	1b4d8 <__mempcpy_chk@plt+0x9ef8>
   1ba94:	cmp	r0, #0
   1ba98:	bne	1ba60 <__mempcpy_chk@plt+0xa480>
   1ba9c:	b	1bae4 <__mempcpy_chk@plt+0xa504>
   1baa0:	ldr	sl, [r7, #32]
   1baa4:	ldr	r0, [r7, #68]	; 0x44
   1baa8:	and	r0, r0, r9
   1baac:	add	r7, r0, r0, lsl #1
   1bab0:	mov	r6, sl
   1bab4:	ldr	r1, [r6, r7, lsl #2]!
   1bab8:	mov	r5, r6
   1babc:	ldr	r0, [r5, #4]!
   1bac0:	cmp	r0, r1
   1bac4:	ble	1baf0 <__mempcpy_chk@plt+0xa510>
   1bac8:	add	r0, sl, r7, lsl #2
   1bacc:	ldr	r0, [r0, #8]
   1bad0:	ldr	r1, [r6]
   1bad4:	add	r2, r1, #1
   1bad8:	str	r2, [r6]
   1badc:	str	r4, [r0, r1, lsl #2]
   1bae0:	mov	r8, #0
   1bae4:	mov	r0, r8
   1bae8:	sub	sp, fp, #28
   1baec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1baf0:	add	r9, sl, r7, lsl #2
   1baf4:	ldr	r0, [r9, #8]!
   1baf8:	mov	r2, #2
   1bafc:	add	r1, r2, r1, lsl #1
   1bb00:	str	r1, [sp]
   1bb04:	lsl	r1, r1, #2
   1bb08:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1bb0c:	cmp	r0, #0
   1bb10:	beq	1bae4 <__mempcpy_chk@plt+0xa504>
   1bb14:	str	r0, [r9]
   1bb18:	ldr	r0, [sp]
   1bb1c:	str	r0, [r5]
   1bb20:	b	1bac8 <__mempcpy_chk@plt+0xa4e8>
   1bb24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb28:	add	fp, sp, #28
   1bb2c:	sub	sp, sp, #4
   1bb30:	mov	r5, r2
   1bb34:	mov	sl, r1
   1bb38:	mov	r4, r0
   1bb3c:	add	r8, r2, #1
   1bb40:	cmp	r3, #1
   1bb44:	beq	1bb94 <__mempcpy_chk@plt+0xa5b4>
   1bb48:	cmp	r3, #0
   1bb4c:	bne	1bbd8 <__mempcpy_chk@plt+0xa5f8>
   1bb50:	lsl	r6, r8, #2
   1bb54:	mov	r0, r6
   1bb58:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1bb5c:	str	r0, [r4, #4]
   1bb60:	mov	r7, #0
   1bb64:	cmp	r0, #0
   1bb68:	beq	1bc18 <__mempcpy_chk@plt+0xa638>
   1bb6c:	mov	r0, r6
   1bb70:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1bb74:	str	r0, [r4, #8]
   1bb78:	cmp	r0, #0
   1bb7c:	beq	1bc74 <__mempcpy_chk@plt+0xa694>
   1bb80:	str	r8, [r4]
   1bb84:	mov	r6, #1
   1bb88:	cmp	r5, #1
   1bb8c:	bge	1bbac <__mempcpy_chk@plt+0xa5cc>
   1bb90:	b	1bbe4 <__mempcpy_chk@plt+0xa604>
   1bb94:	ldr	r0, [r4]
   1bb98:	mov	r6, #1
   1bb9c:	cmp	r8, r0
   1bba0:	bhi	1bc24 <__mempcpy_chk@plt+0xa644>
   1bba4:	cmp	r5, #1
   1bba8:	blt	1bbe4 <__mempcpy_chk@plt+0xa604>
   1bbac:	add	r0, sl, #4
   1bbb0:	ldmib	r4, {r1, r2}
   1bbb4:	mov	r3, r5
   1bbb8:	ldr	r7, [r0, #-4]
   1bbbc:	str	r7, [r1], #4
   1bbc0:	ldr	r7, [r0]
   1bbc4:	str	r7, [r2], #4
   1bbc8:	add	r0, r0, #8
   1bbcc:	subs	r3, r3, #1
   1bbd0:	bne	1bbb8 <__mempcpy_chk@plt+0xa5d8>
   1bbd4:	b	1bbe8 <__mempcpy_chk@plt+0xa608>
   1bbd8:	mov	r6, #2
   1bbdc:	cmp	r5, #1
   1bbe0:	bge	1bbac <__mempcpy_chk@plt+0xa5cc>
   1bbe4:	mov	r5, #0
   1bbe8:	ldr	r0, [r4]
   1bbec:	cmp	r5, r0
   1bbf0:	bcs	1bc14 <__mempcpy_chk@plt+0xa634>
   1bbf4:	ldmib	r4, {r0, r1}
   1bbf8:	mvn	r2, #0
   1bbfc:	str	r2, [r1, r5, lsl #2]
   1bc00:	str	r2, [r0, r5, lsl #2]
   1bc04:	add	r5, r5, #1
   1bc08:	ldr	r3, [r4]
   1bc0c:	cmp	r5, r3
   1bc10:	bcc	1bbfc <__mempcpy_chk@plt+0xa61c>
   1bc14:	mov	r7, r6
   1bc18:	mov	r0, r7
   1bc1c:	sub	sp, fp, #28
   1bc20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc24:	ldr	r0, [r4, #4]
   1bc28:	lsl	r9, r8, #2
   1bc2c:	mov	r1, r9
   1bc30:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1bc34:	mov	r7, #0
   1bc38:	str	r0, [sp]
   1bc3c:	cmp	r0, #0
   1bc40:	beq	1bc18 <__mempcpy_chk@plt+0xa638>
   1bc44:	ldr	r0, [r4, #8]
   1bc48:	mov	r1, r9
   1bc4c:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1bc50:	cmp	r0, #0
   1bc54:	beq	1bc80 <__mempcpy_chk@plt+0xa6a0>
   1bc58:	str	r8, [r4]
   1bc5c:	ldr	r1, [sp]
   1bc60:	str	r1, [r4, #4]
   1bc64:	str	r0, [r4, #8]
   1bc68:	cmp	r5, #1
   1bc6c:	bge	1bbac <__mempcpy_chk@plt+0xa5cc>
   1bc70:	b	1bbe4 <__mempcpy_chk@plt+0xa604>
   1bc74:	ldr	r0, [r4, #4]
   1bc78:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1bc7c:	b	1bc18 <__mempcpy_chk@plt+0xa638>
   1bc80:	ldr	r0, [sp]
   1bc84:	b	1bc78 <__mempcpy_chk@plt+0xa698>
   1bc88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1bc8c:	add	fp, sp, #24
   1bc90:	sub	sp, sp, #8
   1bc94:	mov	r7, r3
   1bc98:	mov	r4, r2
   1bc9c:	mov	r8, r1
   1bca0:	mov	r5, r0
   1bca4:	ldr	r9, [fp, #16]
   1bca8:	ldr	r6, [r9, #92]	; 0x5c
   1bcac:	str	r9, [sp, #4]
   1bcb0:	ldr	r0, [fp, #12]
   1bcb4:	str	r0, [sp]
   1bcb8:	ldr	r3, [fp, #8]
   1bcbc:	mov	r0, r1
   1bcc0:	mov	r1, r2
   1bcc4:	mov	r2, r5
   1bcc8:	bl	169e8 <__mempcpy_chk@plt+0x5408>
   1bccc:	cmp	r6, r7
   1bcd0:	movgt	r7, r6
   1bcd4:	add	r1, r4, #1
   1bcd8:	cmp	r1, r7
   1bcdc:	movge	r1, r7
   1bce0:	mov	r0, r5
   1bce4:	bl	16a40 <__mempcpy_chk@plt+0x5460>
   1bce8:	cmp	r0, #0
   1bcec:	bne	1bd30 <__mempcpy_chk@plt+0xa750>
   1bcf0:	add	r1, r9, #96	; 0x60
   1bcf4:	str	r1, [r5, #68]	; 0x44
   1bcf8:	ldrb	r1, [r9, #88]	; 0x58
   1bcfc:	ubfx	r1, r1, #4, #1
   1bd00:	strb	r1, [r5, #78]	; 0x4e
   1bd04:	ldrb	r1, [r5, #75]	; 0x4b
   1bd08:	cmp	r1, #0
   1bd0c:	beq	1bd18 <__mempcpy_chk@plt+0xa738>
   1bd10:	mov	r4, #0
   1bd14:	b	1bd28 <__mempcpy_chk@plt+0xa748>
   1bd18:	str	r8, [r5, #4]
   1bd1c:	ldr	r1, [r9, #92]	; 0x5c
   1bd20:	cmp	r1, #1
   1bd24:	movwgt	r4, #0
   1bd28:	str	r4, [r5, #28]
   1bd2c:	str	r4, [r5, #32]
   1bd30:	sub	sp, fp, #24
   1bd34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1bd38:	push	{r4, r5, r6, sl, fp, lr}
   1bd3c:	add	fp, sp, #16
   1bd40:	mov	r4, r2
   1bd44:	mov	r5, r0
   1bd48:	mvn	r0, #0
   1bd4c:	str	r1, [r5, #88]	; 0x58
   1bd50:	str	r0, [r5, #92]	; 0x5c
   1bd54:	cmp	r2, #1
   1bd58:	blt	1bda4 <__mempcpy_chk@plt+0xa7c4>
   1bd5c:	mov	r6, #12
   1bd60:	movw	r0, #43690	; 0xaaaa
   1bd64:	movt	r0, #2730	; 0xaaa
   1bd68:	cmp	r4, r0
   1bd6c:	bhi	1bd9c <__mempcpy_chk@plt+0xa7bc>
   1bd70:	add	r0, r4, r4, lsl #1
   1bd74:	lsl	r0, r0, #3
   1bd78:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1bd7c:	str	r0, [r5, #116]	; 0x74
   1bd80:	lsl	r0, r4, #2
   1bd84:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1bd88:	str	r0, [r5, #132]	; 0x84
   1bd8c:	cmp	r0, #0
   1bd90:	ldrne	r0, [r5, #116]	; 0x74
   1bd94:	cmpne	r0, #0
   1bd98:	bne	1bda4 <__mempcpy_chk@plt+0xa7c4>
   1bd9c:	mov	r0, r6
   1bda0:	pop	{r4, r5, r6, sl, fp, pc}
   1bda4:	str	r4, [r5, #128]	; 0x80
   1bda8:	mov	r0, #1
   1bdac:	str	r0, [r5, #120]	; 0x78
   1bdb0:	str	r4, [r5, #112]	; 0x70
   1bdb4:	mov	r6, #0
   1bdb8:	mov	r0, r6
   1bdbc:	pop	{r4, r5, r6, sl, fp, pc}
   1bdc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bdc4:	add	fp, sp, #28
   1bdc8:	sub	sp, sp, #28
   1bdcc:	mov	r6, r2
   1bdd0:	mov	r7, r1
   1bdd4:	mov	r4, r0
   1bdd8:	ldr	r0, [r0, #24]
   1bddc:	cmp	r0, r1
   1bde0:	ble	1bf50 <__mempcpy_chk@plt+0xa970>
   1bde4:	ldr	r0, [r4, #80]	; 0x50
   1bde8:	cmp	r0, #2
   1bdec:	movge	r0, #0
   1bdf0:	strge	r0, [r4, #16]
   1bdf4:	strge	r0, [r4, #20]
   1bdf8:	mov	r0, #0
   1bdfc:	strb	r0, [r4, #76]	; 0x4c
   1be00:	str	r0, [r4, #24]
   1be04:	str	r0, [r4, #28]
   1be08:	str	r0, [r4, #32]
   1be0c:	mov	r0, #4
   1be10:	tst	r6, #1
   1be14:	movweq	r0, #6
   1be18:	ldr	r1, [r4, #44]	; 0x2c
   1be1c:	ldr	r2, [r4, #52]	; 0x34
   1be20:	str	r1, [r4, #48]	; 0x30
   1be24:	str	r2, [r4, #56]	; 0x38
   1be28:	str	r0, [r4, #60]	; 0x3c
   1be2c:	ldrb	r0, [r4, #75]	; 0x4b
   1be30:	cmp	r0, #0
   1be34:	mov	r5, r7
   1be38:	bne	1be48 <__mempcpy_chk@plt+0xa868>
   1be3c:	ldr	r0, [r4]
   1be40:	str	r0, [r4, #4]
   1be44:	mov	r5, r7
   1be48:	cmp	r5, #0
   1be4c:	beq	1bed8 <__mempcpy_chk@plt+0xa8f8>
   1be50:	ldr	r0, [r4, #32]
   1be54:	cmp	r5, r0
   1be58:	bge	1bf60 <__mempcpy_chk@plt+0xa980>
   1be5c:	ldrb	r0, [r4, #76]	; 0x4c
   1be60:	cmp	r0, #0
   1be64:	bne	1c098 <__mempcpy_chk@plt+0xaab8>
   1be68:	sub	r1, r5, #1
   1be6c:	mov	r0, r4
   1be70:	mov	r2, r6
   1be74:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1be78:	str	r0, [r4, #60]	; 0x3c
   1be7c:	ldr	r0, [r4, #80]	; 0x50
   1be80:	cmp	r0, #2
   1be84:	blt	1bea0 <__mempcpy_chk@plt+0xa8c0>
   1be88:	ldr	r0, [r4, #8]
   1be8c:	ldr	r2, [r4, #28]
   1be90:	add	r1, r0, r5, lsl #2
   1be94:	sub	r2, r2, r5
   1be98:	lsl	r2, r2, #2
   1be9c:	bl	1131c <memmove@plt>
   1bea0:	ldrb	r0, [r4, #75]	; 0x4b
   1bea4:	cmp	r0, #0
   1bea8:	bne	1c190 <__mempcpy_chk@plt+0xabb0>
   1beac:	ldr	r0, [r4, #28]
   1beb0:	ldr	r1, [r4, #32]
   1beb4:	sub	r0, r0, r5
   1beb8:	sub	r1, r1, r5
   1bebc:	str	r0, [r4, #28]
   1bec0:	str	r1, [r4, #32]
   1bec4:	ldrb	r0, [r4, #75]	; 0x4b
   1bec8:	cmp	r0, #0
   1becc:	ldreq	r0, [r4, #4]
   1bed0:	addeq	r0, r0, r5
   1bed4:	streq	r0, [r4, #4]
   1bed8:	str	r7, [r4, #24]
   1bedc:	ldr	r0, [r4, #48]	; 0x30
   1bee0:	ldr	r1, [r4, #56]	; 0x38
   1bee4:	ldr	r2, [r4, #80]	; 0x50
   1bee8:	sub	r0, r0, r5
   1beec:	str	r0, [r4, #48]	; 0x30
   1bef0:	sub	r1, r1, r5
   1bef4:	str	r1, [r4, #56]	; 0x38
   1bef8:	cmp	r2, #2
   1befc:	blt	1bf24 <__mempcpy_chk@plt+0xa944>
   1bf00:	ldrb	r0, [r4, #72]	; 0x48
   1bf04:	cmp	r0, #0
   1bf08:	beq	1bf38 <__mempcpy_chk@plt+0xa958>
   1bf0c:	mov	r0, r4
   1bf10:	bl	16ae4 <__mempcpy_chk@plt+0x5504>
   1bf14:	cmp	r0, #0
   1bf18:	beq	1bf40 <__mempcpy_chk@plt+0xa960>
   1bf1c:	sub	sp, fp, #28
   1bf20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf24:	ldrb	r1, [r4, #75]	; 0x4b
   1bf28:	cmp	r1, #0
   1bf2c:	bne	1c224 <__mempcpy_chk@plt+0xac44>
   1bf30:	str	r0, [r4, #28]
   1bf34:	b	1bf40 <__mempcpy_chk@plt+0xa960>
   1bf38:	mov	r0, r4
   1bf3c:	bl	170f4 <__mempcpy_chk@plt+0x5b14>
   1bf40:	mov	r0, #0
   1bf44:	str	r0, [r4, #40]	; 0x28
   1bf48:	sub	sp, fp, #28
   1bf4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf50:	sub	r5, r7, r0
   1bf54:	cmp	r5, #0
   1bf58:	bne	1be50 <__mempcpy_chk@plt+0xa870>
   1bf5c:	b	1bed8 <__mempcpy_chk@plt+0xa8f8>
   1bf60:	ldr	r9, [r4, #28]
   1bf64:	ldrb	r0, [r4, #76]	; 0x4c
   1bf68:	cmp	r0, #0
   1bf6c:	bne	1c32c <__mempcpy_chk@plt+0xad4c>
   1bf70:	mov	r0, #0
   1bf74:	str	r0, [r4, #28]
   1bf78:	ldr	r1, [r4, #80]	; 0x50
   1bf7c:	cmp	r1, #2
   1bf80:	blt	1c23c <__mempcpy_chk@plt+0xac5c>
   1bf84:	mvn	r0, #0
   1bf88:	str	r0, [sp, #24]
   1bf8c:	ldrb	r0, [r4, #73]	; 0x49
   1bf90:	cmp	r0, #0
   1bf94:	beq	1c048 <__mempcpy_chk@plt+0xaa68>
   1bf98:	ldr	r2, [r4]
   1bf9c:	ldr	r0, [r4, #24]
   1bfa0:	add	r0, r2, r0
   1bfa4:	add	r8, r0, r5
   1bfa8:	sub	r1, r5, r1
   1bfac:	add	r1, r0, r1
   1bfb0:	cmp	r1, r2
   1bfb4:	movcc	r1, r2
   1bfb8:	mov	sl, r8
   1bfbc:	sub	sl, sl, #1
   1bfc0:	cmp	sl, r1
   1bfc4:	bcc	1c03c <__mempcpy_chk@plt+0xaa5c>
   1bfc8:	ldrb	r2, [sl]
   1bfcc:	and	r2, r2, #192	; 0xc0
   1bfd0:	cmp	r2, #128	; 0x80
   1bfd4:	beq	1bfbc <__mempcpy_chk@plt+0xa9dc>
   1bfd8:	ldr	r1, [r4, #48]	; 0x30
   1bfdc:	add	r0, r0, r1
   1bfe0:	sub	r2, r0, sl
   1bfe4:	ldr	r0, [r4, #64]	; 0x40
   1bfe8:	cmp	r0, #0
   1bfec:	mov	r1, sl
   1bff0:	bne	1c3b4 <__mempcpy_chk@plt+0xadd4>
   1bff4:	mov	r0, #0
   1bff8:	str	r0, [sp, #20]
   1bffc:	str	r0, [sp, #16]
   1c000:	add	r0, sp, #12
   1c004:	add	r3, sp, #16
   1c008:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   1c00c:	sub	r1, r8, sl
   1c010:	cmp	r0, r1
   1c014:	bcc	1c03c <__mempcpy_chk@plt+0xaa5c>
   1c018:	cmn	r0, #3
   1c01c:	bhi	1c03c <__mempcpy_chk@plt+0xaa5c>
   1c020:	mov	r2, #0
   1c024:	str	r2, [r4, #16]
   1c028:	str	r2, [r4, #20]
   1c02c:	sub	r0, r0, r1
   1c030:	str	r0, [r4, #28]
   1c034:	ldr	r0, [sp, #12]
   1c038:	str	r0, [sp, #24]
   1c03c:	ldr	r8, [sp, #24]
   1c040:	cmn	r8, #1
   1c044:	bne	1c06c <__mempcpy_chk@plt+0xaa8c>
   1c048:	add	r2, sp, #24
   1c04c:	mov	r0, r4
   1c050:	mov	r1, r7
   1c054:	bl	1ce10 <__mempcpy_chk@plt+0xb830>
   1c058:	sub	r0, r0, r7
   1c05c:	str	r0, [r4, #28]
   1c060:	ldr	r8, [sp, #24]
   1c064:	cmn	r8, #1
   1c068:	beq	1c2ec <__mempcpy_chk@plt+0xad0c>
   1c06c:	ldrb	r0, [r4, #78]	; 0x4e
   1c070:	cmp	r0, #0
   1c074:	bne	1c390 <__mempcpy_chk@plt+0xadb0>
   1c078:	mov	r0, #0
   1c07c:	cmp	r8, #10
   1c080:	bne	1c2fc <__mempcpy_chk@plt+0xad1c>
   1c084:	ldrb	r0, [r4, #77]	; 0x4d
   1c088:	cmp	r0, #0
   1c08c:	movwne	r0, #1
   1c090:	lsl	r0, r0, #1
   1c094:	b	1c2fc <__mempcpy_chk@plt+0xad1c>
   1c098:	ldr	r8, [r4, #12]
   1c09c:	ldr	r9, [r4, #28]
   1c0a0:	mov	r0, #0
   1c0a4:	mov	r1, r9
   1c0a8:	b	1c0b8 <__mempcpy_chk@plt+0xaad8>
   1c0ac:	cmp	r0, r3
   1c0b0:	mov	r1, r3
   1c0b4:	bge	1c0e4 <__mempcpy_chk@plt+0xab04>
   1c0b8:	add	r2, r0, r1
   1c0bc:	add	r2, r2, r2, lsr #31
   1c0c0:	asr	sl, r2, #1
   1c0c4:	ldr	r2, [r8, sl, lsl #2]
   1c0c8:	cmp	r2, r5
   1c0cc:	mov	r3, sl
   1c0d0:	bgt	1c0ac <__mempcpy_chk@plt+0xaacc>
   1c0d4:	bge	1c0e4 <__mempcpy_chk@plt+0xab04>
   1c0d8:	add	r0, sl, #1
   1c0dc:	mov	r3, r1
   1c0e0:	b	1c0ac <__mempcpy_chk@plt+0xaacc>
   1c0e4:	cmp	r2, r5
   1c0e8:	addlt	sl, sl, #1
   1c0ec:	sub	r1, sl, #1
   1c0f0:	mov	r0, r4
   1c0f4:	mov	r2, r6
   1c0f8:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1c0fc:	str	r0, [r4, #60]	; 0x3c
   1c100:	cmp	r9, r5
   1c104:	ble	1c1a8 <__mempcpy_chk@plt+0xabc8>
   1c108:	cmp	sl, r5
   1c10c:	bne	1c1a8 <__mempcpy_chk@plt+0xabc8>
   1c110:	ldr	r0, [r8, sl, lsl #2]
   1c114:	cmp	r0, r5
   1c118:	bne	1c1a8 <__mempcpy_chk@plt+0xabc8>
   1c11c:	ldr	r0, [r4, #8]
   1c120:	add	r1, r0, r5, lsl #2
   1c124:	sub	r2, r9, r5
   1c128:	lsl	r2, r2, #2
   1c12c:	bl	1131c <memmove@plt>
   1c130:	ldr	r0, [r4, #4]
   1c134:	ldr	r2, [r4, #28]
   1c138:	add	r1, r0, r5
   1c13c:	sub	r2, r2, r5
   1c140:	bl	1131c <memmove@plt>
   1c144:	ldr	r0, [r4, #28]
   1c148:	ldr	r1, [r4, #32]
   1c14c:	sub	r0, r0, r5
   1c150:	sub	r1, r1, r5
   1c154:	str	r0, [r4, #28]
   1c158:	str	r1, [r4, #32]
   1c15c:	cmp	r0, #1
   1c160:	blt	1bec4 <__mempcpy_chk@plt+0xa8e4>
   1c164:	ldr	r0, [r4, #12]
   1c168:	add	r1, r0, r5, lsl #2
   1c16c:	mov	r2, #0
   1c170:	ldr	r3, [r1, r2, lsl #2]
   1c174:	sub	r3, r3, r5
   1c178:	str	r3, [r0, r2, lsl #2]
   1c17c:	add	r2, r2, #1
   1c180:	ldr	r3, [r4, #28]
   1c184:	cmp	r2, r3
   1c188:	blt	1c170 <__mempcpy_chk@plt+0xab90>
   1c18c:	b	1bec4 <__mempcpy_chk@plt+0xa8e4>
   1c190:	ldr	r0, [r4, #4]
   1c194:	ldr	r2, [r4, #28]
   1c198:	add	r1, r0, r5
   1c19c:	sub	r2, r2, r5
   1c1a0:	bl	1131c <memmove@plt>
   1c1a4:	b	1beac <__mempcpy_chk@plt+0xa8cc>
   1c1a8:	mov	r0, #0
   1c1ac:	strb	r0, [r4, #76]	; 0x4c
   1c1b0:	sub	r0, r5, r7
   1c1b4:	ldr	r1, [r4, #44]	; 0x2c
   1c1b8:	ldr	r2, [r4, #52]	; 0x34
   1c1bc:	add	r1, r0, r1
   1c1c0:	str	r1, [r4, #48]	; 0x30
   1c1c4:	add	r0, r0, r2
   1c1c8:	str	r0, [r4, #56]	; 0x38
   1c1cc:	sub	r1, r8, #4
   1c1d0:	mov	r0, sl
   1c1d4:	cmp	sl, #1
   1c1d8:	blt	1c1ec <__mempcpy_chk@plt+0xac0c>
   1c1dc:	ldr	r2, [r1, r0, lsl #2]
   1c1e0:	sub	sl, r0, #1
   1c1e4:	cmp	r2, r5
   1c1e8:	beq	1c1d0 <__mempcpy_chk@plt+0xabf0>
   1c1ec:	cmp	r0, r9
   1c1f0:	bge	1c210 <__mempcpy_chk@plt+0xac30>
   1c1f4:	ldr	r1, [r4, #8]
   1c1f8:	ldr	r2, [r1, r0, lsl #2]
   1c1fc:	cmn	r2, #1
   1c200:	bne	1c210 <__mempcpy_chk@plt+0xac30>
   1c204:	add	r0, r0, #1
   1c208:	cmp	r9, r0
   1c20c:	bne	1c1f8 <__mempcpy_chk@plt+0xac18>
   1c210:	cmp	r0, r9
   1c214:	bne	1c288 <__mempcpy_chk@plt+0xaca8>
   1c218:	mov	r0, #0
   1c21c:	str	r0, [r4, #28]
   1c220:	b	1c30c <__mempcpy_chk@plt+0xad2c>
   1c224:	ldrb	r0, [r4, #72]	; 0x48
   1c228:	cmp	r0, #0
   1c22c:	beq	1c2d4 <__mempcpy_chk@plt+0xacf4>
   1c230:	mov	r0, r4
   1c234:	bl	17080 <__mempcpy_chk@plt+0x5aa0>
   1c238:	b	1bf40 <__mempcpy_chk@plt+0xa960>
   1c23c:	ldr	r2, [r4]
   1c240:	ldr	r3, [r4, #24]
   1c244:	ldr	r1, [r4, #64]	; 0x40
   1c248:	add	r3, r5, r3
   1c24c:	add	r2, r3, r2
   1c250:	ldrb	r6, [r2, #-1]
   1c254:	str	r0, [r4, #32]
   1c258:	cmp	r1, #0
   1c25c:	ldrbne	r6, [r1, r6]
   1c260:	ldr	r0, [r4, #68]	; 0x44
   1c264:	mov	r1, r6
   1c268:	bl	1cec0 <__mempcpy_chk@plt+0xb8e0>
   1c26c:	mov	r1, #1
   1c270:	cmp	r0, #0
   1c274:	moveq	r1, #0
   1c278:	cmpeq	r6, #10
   1c27c:	beq	1c318 <__mempcpy_chk@plt+0xad38>
   1c280:	str	r1, [r4, #60]	; 0x3c
   1c284:	b	1bec4 <__mempcpy_chk@plt+0xa8e4>
   1c288:	ldr	r0, [r8, r0, lsl #2]
   1c28c:	subs	r0, r0, r5
   1c290:	str	r0, [r4, #28]
   1c294:	beq	1c30c <__mempcpy_chk@plt+0xad2c>
   1c298:	ldr	r2, [r4, #28]
   1c29c:	cmp	r2, #1
   1c2a0:	blt	1c2c4 <__mempcpy_chk@plt+0xace4>
   1c2a4:	ldr	r0, [r4, #8]
   1c2a8:	mov	r1, #0
   1c2ac:	mvn	r3, #0
   1c2b0:	str	r3, [r0, r1, lsl #2]
   1c2b4:	add	r1, r1, #1
   1c2b8:	ldr	r2, [r4, #28]
   1c2bc:	cmp	r1, r2
   1c2c0:	blt	1c2b0 <__mempcpy_chk@plt+0xacd0>
   1c2c4:	ldr	r0, [r4, #4]
   1c2c8:	mov	r1, #255	; 0xff
   1c2cc:	bl	114fc <memset@plt>
   1c2d0:	b	1c30c <__mempcpy_chk@plt+0xad2c>
   1c2d4:	ldr	r0, [r4, #64]	; 0x40
   1c2d8:	cmp	r0, #0
   1c2dc:	beq	1bf40 <__mempcpy_chk@plt+0xa960>
   1c2e0:	mov	r0, r4
   1c2e4:	bl	172b0 <__mempcpy_chk@plt+0x5cd0>
   1c2e8:	b	1bf40 <__mempcpy_chk@plt+0xa960>
   1c2ec:	sub	r1, r9, #1
   1c2f0:	mov	r0, r4
   1c2f4:	mov	r2, r6
   1c2f8:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1c2fc:	str	r0, [r4, #60]	; 0x3c
   1c300:	ldr	r0, [r4, #28]
   1c304:	cmp	r0, #0
   1c308:	bne	1c354 <__mempcpy_chk@plt+0xad74>
   1c30c:	ldr	r0, [r4, #28]
   1c310:	str	r0, [r4, #32]
   1c314:	b	1bec4 <__mempcpy_chk@plt+0xa8e4>
   1c318:	ldrb	r0, [r4, #77]	; 0x4d
   1c31c:	cmp	r0, #0
   1c320:	movwne	r0, #1
   1c324:	lsl	r1, r0, #1
   1c328:	b	1c280 <__mempcpy_chk@plt+0xaca0>
   1c32c:	mov	r0, #0
   1c330:	strb	r0, [r4, #76]	; 0x4c
   1c334:	sub	r0, r5, r7
   1c338:	ldr	r1, [r4, #44]	; 0x2c
   1c33c:	ldr	r2, [r4, #52]	; 0x34
   1c340:	add	r1, r0, r1
   1c344:	str	r1, [r4, #48]	; 0x30
   1c348:	add	r0, r0, r2
   1c34c:	str	r0, [r4, #56]	; 0x38
   1c350:	b	1bf70 <__mempcpy_chk@plt+0xa990>
   1c354:	ldr	r2, [r4, #28]
   1c358:	cmp	r2, #1
   1c35c:	blt	1c380 <__mempcpy_chk@plt+0xada0>
   1c360:	ldr	r0, [r4, #8]
   1c364:	mov	r1, #0
   1c368:	mvn	r3, #0
   1c36c:	str	r3, [r0, r1, lsl #2]
   1c370:	add	r1, r1, #1
   1c374:	ldr	r2, [r4, #28]
   1c378:	cmp	r1, r2
   1c37c:	blt	1c36c <__mempcpy_chk@plt+0xad8c>
   1c380:	ldrb	r0, [r4, #75]	; 0x4b
   1c384:	cmp	r0, #0
   1c388:	bne	1c2c4 <__mempcpy_chk@plt+0xace4>
   1c38c:	b	1c30c <__mempcpy_chk@plt+0xad2c>
   1c390:	mov	r0, r8
   1c394:	bl	114e4 <iswalnum@plt>
   1c398:	mov	r1, r0
   1c39c:	mov	r0, #1
   1c3a0:	cmp	r8, #95	; 0x5f
   1c3a4:	beq	1c2fc <__mempcpy_chk@plt+0xad1c>
   1c3a8:	cmp	r1, #0
   1c3ac:	beq	1c078 <__mempcpy_chk@plt+0xaa98>
   1c3b0:	b	1c2fc <__mempcpy_chk@plt+0xad1c>
   1c3b4:	cmp	r2, #1
   1c3b8:	blt	1c3f0 <__mempcpy_chk@plt+0xae10>
   1c3bc:	cmp	r2, #6
   1c3c0:	mov	r1, r2
   1c3c4:	movge	r1, #6
   1c3c8:	sub	ip, r1, #1
   1c3cc:	add	r1, sp, #6
   1c3d0:	ldrb	r3, [sl, ip]
   1c3d4:	ldrb	r3, [r0, r3]
   1c3d8:	strb	r3, [r1, ip]
   1c3dc:	sub	r3, ip, #1
   1c3e0:	cmp	ip, #0
   1c3e4:	mov	ip, r3
   1c3e8:	bgt	1c3d0 <__mempcpy_chk@plt+0xadf0>
   1c3ec:	b	1bff4 <__mempcpy_chk@plt+0xaa14>
   1c3f0:	add	r1, sp, #6
   1c3f4:	b	1bff4 <__mempcpy_chk@plt+0xaa14>
   1c3f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3fc:	add	fp, sp, #28
   1c400:	sub	sp, sp, #20
   1c404:	mov	sl, r2
   1c408:	str	r1, [sp, #12]
   1c40c:	mov	r7, r0
   1c410:	ldr	r4, [r0, #84]	; 0x54
   1c414:	ldr	r5, [r0, #40]	; 0x28
   1c418:	mov	r0, #0
   1c41c:	str	r0, [sp, #16]
   1c420:	cmp	r2, #0
   1c424:	str	r2, [sp, #8]
   1c428:	movwne	sl, #1
   1c42c:	ldr	r6, [r4, #36]	; 0x24
   1c430:	ldrsb	r0, [r6, #52]	; 0x34
   1c434:	cmn	r0, #1
   1c438:	bgt	1c4a4 <__mempcpy_chk@plt+0xaec4>
   1c43c:	ldr	r2, [r7, #88]	; 0x58
   1c440:	sub	r1, r5, #1
   1c444:	mov	r0, r7
   1c448:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1c44c:	tst	r0, #1
   1c450:	bne	1c4a0 <__mempcpy_chk@plt+0xaec0>
   1c454:	mov	r3, r0
   1c458:	cmp	r0, #0
   1c45c:	beq	1c4a4 <__mempcpy_chk@plt+0xaec4>
   1c460:	ands	r1, r3, #2
   1c464:	and	r0, r3, #4
   1c468:	cmpne	r0, #0
   1c46c:	bne	1c6ac <__mempcpy_chk@plt+0xb0cc>
   1c470:	cmp	r1, #0
   1c474:	bne	1c6bc <__mempcpy_chk@plt+0xb0dc>
   1c478:	cmp	r0, #0
   1c47c:	beq	1c4a4 <__mempcpy_chk@plt+0xaec4>
   1c480:	ldr	r2, [r6, #40]	; 0x28
   1c484:	add	r0, sp, #16
   1c488:	mov	r1, r4
   1c48c:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1c490:	mov	r6, r0
   1c494:	cmp	r6, #0
   1c498:	bne	1c4ac <__mempcpy_chk@plt+0xaecc>
   1c49c:	b	1c6c8 <__mempcpy_chk@plt+0xb0e8>
   1c4a0:	ldr	r6, [r4, #40]	; 0x28
   1c4a4:	cmp	r6, #0
   1c4a8:	beq	1c6c8 <__mempcpy_chk@plt+0xb0e8>
   1c4ac:	ldr	r0, [r7, #100]	; 0x64
   1c4b0:	cmp	r0, #0
   1c4b4:	str	r5, [sp]
   1c4b8:	beq	1c4cc <__mempcpy_chk@plt+0xaeec>
   1c4bc:	str	r6, [r0, r5, lsl #2]
   1c4c0:	ldr	r0, [r4, #76]	; 0x4c
   1c4c4:	cmp	r0, #0
   1c4c8:	bne	1c6f8 <__mempcpy_chk@plt+0xb118>
   1c4cc:	ldrb	r0, [r6, #52]	; 0x34
   1c4d0:	tst	r0, #16
   1c4d4:	bne	1c6d0 <__mempcpy_chk@plt+0xb0f0>
   1c4d8:	mov	r5, #0
   1c4dc:	mvn	r0, #0
   1c4e0:	str	r0, [sp, #4]
   1c4e4:	ldr	r0, [r7, #40]	; 0x28
   1c4e8:	ldr	r1, [r7, #56]	; 0x38
   1c4ec:	cmp	r1, r0
   1c4f0:	ble	1c680 <__mempcpy_chk@plt+0xb0a0>
   1c4f4:	add	r3, sp, #16
   1c4f8:	b	1c52c <__mempcpy_chk@plt+0xaf4c>
   1c4fc:	ldr	r1, [r7, #40]	; 0x28
   1c500:	ldr	r0, [sp, #12]
   1c504:	cmp	r0, #0
   1c508:	beq	1c6a0 <__mempcpy_chk@plt+0xb0c0>
   1c50c:	str	r1, [sp, #4]
   1c510:	mov	r0, #0
   1c514:	str	r0, [sp, #8]
   1c518:	mov	r5, #1
   1c51c:	ldr	r0, [r7, #40]	; 0x28
   1c520:	ldr	r1, [r7, #56]	; 0x38
   1c524:	cmp	r1, r0
   1c528:	ble	1c680 <__mempcpy_chk@plt+0xb0a0>
   1c52c:	mov	r9, r6
   1c530:	add	r8, r0, #1
   1c534:	ldr	r1, [r7, #36]	; 0x24
   1c538:	cmp	r8, r1
   1c53c:	bge	1c620 <__mempcpy_chk@plt+0xb040>
   1c540:	ldr	r1, [r7, #28]
   1c544:	cmp	r8, r1
   1c548:	bge	1c630 <__mempcpy_chk@plt+0xb050>
   1c54c:	mov	r0, r3
   1c550:	mov	r1, r7
   1c554:	mov	r2, r9
   1c558:	mov	r4, r3
   1c55c:	bl	1d35c <__mempcpy_chk@plt+0xbd7c>
   1c560:	mov	r6, r0
   1c564:	ldr	r0, [r7, #100]	; 0x64
   1c568:	cmp	r0, #0
   1c56c:	beq	1c584 <__mempcpy_chk@plt+0xafa4>
   1c570:	mov	r0, r4
   1c574:	mov	r1, r7
   1c578:	mov	r2, r6
   1c57c:	bl	1d40c <__mempcpy_chk@plt+0xbe2c>
   1c580:	mov	r6, r0
   1c584:	cmp	r6, #0
   1c588:	bne	1c5d8 <__mempcpy_chk@plt+0xaff8>
   1c58c:	ldr	r0, [sp, #16]
   1c590:	cmp	r0, #0
   1c594:	bne	1c6c8 <__mempcpy_chk@plt+0xb0e8>
   1c598:	ldr	r0, [sp, #12]
   1c59c:	eor	r0, r0, #1
   1c5a0:	cmp	r5, #0
   1c5a4:	mov	r1, r5
   1c5a8:	movwne	r1, #1
   1c5ac:	tst	r1, r0
   1c5b0:	bne	1c680 <__mempcpy_chk@plt+0xb0a0>
   1c5b4:	ldr	r0, [r7, #100]	; 0x64
   1c5b8:	cmp	r0, #0
   1c5bc:	beq	1c680 <__mempcpy_chk@plt+0xb0a0>
   1c5c0:	add	r0, sp, #16
   1c5c4:	mov	r1, r7
   1c5c8:	bl	1d558 <__mempcpy_chk@plt+0xbf78>
   1c5cc:	mov	r6, r0
   1c5d0:	cmp	r0, #0
   1c5d4:	beq	1c680 <__mempcpy_chk@plt+0xb0a0>
   1c5d8:	tst	sl, #1
   1c5dc:	bne	1c65c <__mempcpy_chk@plt+0xb07c>
   1c5e0:	mov	sl, #0
   1c5e4:	add	r3, sp, #16
   1c5e8:	ldrb	r0, [r6, #52]	; 0x34
   1c5ec:	tst	r0, #16
   1c5f0:	beq	1c51c <__mempcpy_chk@plt+0xaf3c>
   1c5f4:	sxtb	r0, r0
   1c5f8:	cmn	r0, #1
   1c5fc:	bgt	1c4fc <__mempcpy_chk@plt+0xaf1c>
   1c600:	ldr	r2, [r7, #40]	; 0x28
   1c604:	mov	r0, r7
   1c608:	mov	r1, r6
   1c60c:	bl	1c794 <__mempcpy_chk@plt+0xb1b4>
   1c610:	add	r3, sp, #16
   1c614:	cmp	r0, #0
   1c618:	bne	1c4fc <__mempcpy_chk@plt+0xaf1c>
   1c61c:	b	1c51c <__mempcpy_chk@plt+0xaf3c>
   1c620:	ldr	r2, [r7, #48]	; 0x30
   1c624:	cmp	r1, r2
   1c628:	bge	1c540 <__mempcpy_chk@plt+0xaf60>
   1c62c:	b	1c63c <__mempcpy_chk@plt+0xb05c>
   1c630:	ldr	r2, [r7, #48]	; 0x30
   1c634:	cmp	r1, r2
   1c638:	bge	1c54c <__mempcpy_chk@plt+0xaf6c>
   1c63c:	add	r1, r0, #2
   1c640:	mov	r0, r7
   1c644:	bl	1d288 <__mempcpy_chk@plt+0xbca8>
   1c648:	add	r3, sp, #16
   1c64c:	str	r0, [sp, #16]
   1c650:	cmp	r0, #0
   1c654:	beq	1c54c <__mempcpy_chk@plt+0xaf6c>
   1c658:	b	1c6c8 <__mempcpy_chk@plt+0xb0e8>
   1c65c:	cmp	r9, r6
   1c660:	ldr	r0, [sp]
   1c664:	moveq	r0, r8
   1c668:	str	r0, [sp]
   1c66c:	sub	r0, r9, r6
   1c670:	clz	r0, r0
   1c674:	lsr	r0, r0, #5
   1c678:	and	sl, sl, r0
   1c67c:	b	1c5e4 <__mempcpy_chk@plt+0xb004>
   1c680:	ldr	r2, [sp, #8]
   1c684:	cmp	r2, #0
   1c688:	beq	1c69c <__mempcpy_chk@plt+0xb0bc>
   1c68c:	ldr	r0, [r2]
   1c690:	ldr	r1, [sp]
   1c694:	add	r0, r0, r1
   1c698:	str	r0, [r2]
   1c69c:	ldr	r1, [sp, #4]
   1c6a0:	mov	r0, r1
   1c6a4:	sub	sp, fp, #28
   1c6a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c6ac:	ldr	r6, [r4, #48]	; 0x30
   1c6b0:	cmp	r6, #0
   1c6b4:	bne	1c4ac <__mempcpy_chk@plt+0xaecc>
   1c6b8:	b	1c6c8 <__mempcpy_chk@plt+0xb0e8>
   1c6bc:	ldr	r6, [r4, #44]	; 0x2c
   1c6c0:	cmp	r6, #0
   1c6c4:	bne	1c4ac <__mempcpy_chk@plt+0xaecc>
   1c6c8:	mvn	r1, #1
   1c6cc:	b	1c6a0 <__mempcpy_chk@plt+0xb0c0>
   1c6d0:	sxtb	r0, r0
   1c6d4:	cmn	r0, #1
   1c6d8:	ble	1c730 <__mempcpy_chk@plt+0xb150>
   1c6dc:	mov	r4, r5
   1c6e0:	mov	r5, #1
   1c6e4:	ldr	r0, [sp, #12]
   1c6e8:	cmp	r0, #0
   1c6ec:	str	r4, [sp, #4]
   1c6f0:	bne	1c4e4 <__mempcpy_chk@plt+0xaf04>
   1c6f4:	b	1c768 <__mempcpy_chk@plt+0xb188>
   1c6f8:	add	r5, r6, #4
   1c6fc:	mov	sl, #0
   1c700:	mov	r0, r7
   1c704:	mov	r1, r5
   1c708:	mov	r2, #0
   1c70c:	bl	1cee8 <__mempcpy_chk@plt+0xb908>
   1c710:	str	r0, [sp, #16]
   1c714:	cmp	r0, #0
   1c718:	bne	1c78c <__mempcpy_chk@plt+0xb1ac>
   1c71c:	ldrb	r0, [r6, #52]	; 0x34
   1c720:	tst	r0, #64	; 0x40
   1c724:	bne	1c770 <__mempcpy_chk@plt+0xb190>
   1c728:	ldr	r5, [sp]
   1c72c:	b	1c4cc <__mempcpy_chk@plt+0xaeec>
   1c730:	mov	r0, r7
   1c734:	mov	r1, r6
   1c738:	mov	r2, r5
   1c73c:	bl	1c794 <__mempcpy_chk@plt+0xb1b4>
   1c740:	mov	r4, r5
   1c744:	mov	r5, r0
   1c748:	cmp	r0, #0
   1c74c:	mvneq	r4, #0
   1c750:	str	r4, [sp, #4]
   1c754:	movwne	r5, #1
   1c758:	beq	1c4e4 <__mempcpy_chk@plt+0xaf04>
   1c75c:	ldr	r0, [sp, #12]
   1c760:	cmp	r0, #0
   1c764:	bne	1c4e4 <__mempcpy_chk@plt+0xaf04>
   1c768:	ldr	r1, [sp]
   1c76c:	b	1c6a0 <__mempcpy_chk@plt+0xb0c0>
   1c770:	mov	r0, r7
   1c774:	mov	r1, r5
   1c778:	bl	1cf7c <__mempcpy_chk@plt+0xb99c>
   1c77c:	str	r0, [sp, #16]
   1c780:	cmp	r0, #0
   1c784:	ldr	r5, [sp]
   1c788:	beq	1c4cc <__mempcpy_chk@plt+0xaeec>
   1c78c:	mov	r1, r0
   1c790:	b	1c6a0 <__mempcpy_chk@plt+0xb0c0>
   1c794:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c798:	add	fp, sp, #24
   1c79c:	mov	r3, r2
   1c7a0:	mov	r8, r1
   1c7a4:	mov	r6, r0
   1c7a8:	ldr	r2, [r0, #88]	; 0x58
   1c7ac:	mov	r1, r3
   1c7b0:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1c7b4:	mov	r9, r0
   1c7b8:	ldr	r0, [r8, #8]
   1c7bc:	cmp	r0, #1
   1c7c0:	blt	1c7fc <__mempcpy_chk@plt+0xb21c>
   1c7c4:	ldr	r4, [r8, #12]
   1c7c8:	ldr	r6, [r6, #84]	; 0x54
   1c7cc:	mov	r5, #0
   1c7d0:	ldr	r7, [r4, r5, lsl #2]
   1c7d4:	mov	r0, r6
   1c7d8:	mov	r1, r7
   1c7dc:	mov	r2, r9
   1c7e0:	bl	1fc44 <__mempcpy_chk@plt+0xe664>
   1c7e4:	cmp	r0, #0
   1c7e8:	bne	1c800 <__mempcpy_chk@plt+0xb220>
   1c7ec:	add	r5, r5, #1
   1c7f0:	ldr	r0, [r8, #8]
   1c7f4:	cmp	r5, r0
   1c7f8:	blt	1c7d0 <__mempcpy_chk@plt+0xb1f0>
   1c7fc:	mov	r7, #0
   1c800:	mov	r0, r7
   1c804:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c80c:	add	fp, sp, #28
   1c810:	sub	sp, sp, #44	; 0x2c
   1c814:	ldr	r7, [r0, #92]	; 0x5c
   1c818:	cmn	r7, #-1073741822	; 0xc0000002
   1c81c:	bhi	1ca1c <__mempcpy_chk@plt+0xb43c>
   1c820:	ldr	r5, [r0, #84]	; 0x54
   1c824:	str	r0, [sp, #12]
   1c828:	ldr	sl, [r0, #96]	; 0x60
   1c82c:	mov	r0, #4
   1c830:	add	r6, r0, r7, lsl #2
   1c834:	mov	r0, r6
   1c838:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1c83c:	mov	r4, #12
   1c840:	cmp	r0, #0
   1c844:	beq	1c9ec <__mempcpy_chk@plt+0xb40c>
   1c848:	mov	r9, r0
   1c84c:	ldr	r0, [r5, #76]	; 0x4c
   1c850:	cmp	r0, #0
   1c854:	beq	1c87c <__mempcpy_chk@plt+0xb29c>
   1c858:	mov	r0, r6
   1c85c:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1c860:	cmp	r0, #0
   1c864:	beq	1c9f0 <__mempcpy_chk@plt+0xb410>
   1c868:	mov	r8, r0
   1c86c:	str	r5, [sp, #8]
   1c870:	add	r4, sp, #16
   1c874:	mov	r5, sl
   1c878:	b	1c934 <__mempcpy_chk@plt+0xb354>
   1c87c:	str	r7, [sp]
   1c880:	add	r4, sp, #16
   1c884:	mov	r8, #0
   1c888:	mov	r0, r4
   1c88c:	mov	r1, r9
   1c890:	mov	r2, #0
   1c894:	mov	r3, sl
   1c898:	bl	1fcb8 <__mempcpy_chk@plt+0xe6d8>
   1c89c:	ldr	r0, [sp, #12]
   1c8a0:	mov	r1, r4
   1c8a4:	bl	1fcd8 <__mempcpy_chk@plt+0xe6f8>
   1c8a8:	mov	r4, r0
   1c8ac:	ldr	r0, [sp, #40]	; 0x28
   1c8b0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1c8b4:	cmp	r4, #0
   1c8b8:	bne	1c9f4 <__mempcpy_chk@plt+0xb414>
   1c8bc:	ldr	r0, [r9]
   1c8c0:	cmp	r0, #0
   1c8c4:	bne	1c9d0 <__mempcpy_chk@plt+0xb3f0>
   1c8c8:	mov	r4, #1
   1c8cc:	b	1c9f4 <__mempcpy_chk@plt+0xb414>
   1c8d0:	mov	r4, #1
   1c8d4:	cmp	r7, #1
   1c8d8:	blt	1ca10 <__mempcpy_chk@plt+0xb430>
   1c8dc:	sub	r7, r7, #1
   1c8e0:	ldr	sl, [sp, #12]
   1c8e4:	ldr	r0, [sl, #100]	; 0x64
   1c8e8:	mov	r9, r1
   1c8ec:	mov	r8, r6
   1c8f0:	b	1c908 <__mempcpy_chk@plt+0xb328>
   1c8f4:	sub	r1, r7, #1
   1c8f8:	add	r2, r7, #1
   1c8fc:	cmp	r2, #2
   1c900:	mov	r7, r1
   1c904:	blt	1c9f4 <__mempcpy_chk@plt+0xb414>
   1c908:	ldr	r1, [r0, r7, lsl #2]
   1c90c:	cmp	r1, #0
   1c910:	beq	1c8f4 <__mempcpy_chk@plt+0xb314>
   1c914:	ldrb	r2, [r1, #52]	; 0x34
   1c918:	tst	r2, #16
   1c91c:	beq	1c8f4 <__mempcpy_chk@plt+0xb314>
   1c920:	mov	r0, sl
   1c924:	mov	r2, r7
   1c928:	bl	1c794 <__mempcpy_chk@plt+0xb1b4>
   1c92c:	mov	r4, r5
   1c930:	mov	r5, r0
   1c934:	add	sl, r7, #1
   1c938:	lsl	r2, sl, #2
   1c93c:	mov	r0, r8
   1c940:	mov	r1, #0
   1c944:	bl	114fc <memset@plt>
   1c948:	str	r7, [sp]
   1c94c:	mov	r0, r4
   1c950:	mov	r1, r9
   1c954:	mov	r6, r8
   1c958:	mov	r2, r8
   1c95c:	mov	r8, r5
   1c960:	mov	r3, r5
   1c964:	bl	1fcb8 <__mempcpy_chk@plt+0xe6d8>
   1c968:	ldr	r0, [sp, #12]
   1c96c:	mov	r5, r4
   1c970:	mov	r1, r4
   1c974:	bl	1fcd8 <__mempcpy_chk@plt+0xe6f8>
   1c978:	mov	r4, r0
   1c97c:	ldr	r0, [sp, #40]	; 0x28
   1c980:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1c984:	cmp	r4, #0
   1c988:	bne	1ca24 <__mempcpy_chk@plt+0xb444>
   1c98c:	mov	r1, r9
   1c990:	ldr	r0, [r9]
   1c994:	cmp	r0, #0
   1c998:	ldreq	r0, [r6]
   1c99c:	cmpeq	r0, #0
   1c9a0:	beq	1c8d0 <__mempcpy_chk@plt+0xb2f0>
   1c9a4:	ldr	r0, [sp, #8]
   1c9a8:	mov	r9, r1
   1c9ac:	mov	r2, r6
   1c9b0:	mov	r3, sl
   1c9b4:	bl	1fdf0 <__mempcpy_chk@plt+0xe810>
   1c9b8:	mov	r4, r0
   1c9bc:	mov	r0, r6
   1c9c0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1c9c4:	cmp	r4, #0
   1c9c8:	mov	sl, r8
   1c9cc:	bne	1c9f0 <__mempcpy_chk@plt+0xb410>
   1c9d0:	ldr	r4, [sp, #12]
   1c9d4:	ldr	r0, [r4, #100]	; 0x64
   1c9d8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1c9dc:	str	r7, [r4, #92]	; 0x5c
   1c9e0:	str	sl, [r4, #96]	; 0x60
   1c9e4:	str	r9, [r4, #100]	; 0x64
   1c9e8:	mov	r4, #0
   1c9ec:	mov	r9, #0
   1c9f0:	mov	r8, #0
   1c9f4:	mov	r0, r9
   1c9f8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1c9fc:	mov	r0, r8
   1ca00:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ca04:	mov	r0, r4
   1ca08:	sub	sp, fp, #28
   1ca0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca10:	mov	r9, r1
   1ca14:	mov	r8, r6
   1ca18:	b	1c9f4 <__mempcpy_chk@plt+0xb414>
   1ca1c:	mov	r4, #12
   1ca20:	b	1ca04 <__mempcpy_chk@plt+0xb424>
   1ca24:	mov	r8, r6
   1ca28:	b	1c9f4 <__mempcpy_chk@plt+0xb414>
   1ca2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ca30:	add	fp, sp, #24
   1ca34:	mov	r8, r0
   1ca38:	ldr	r0, [r0, #124]	; 0x7c
   1ca3c:	cmp	r0, #1
   1ca40:	blt	1cacc <__mempcpy_chk@plt+0xb4ec>
   1ca44:	mov	r7, #0
   1ca48:	b	1ca64 <__mempcpy_chk@plt+0xb484>
   1ca4c:	mov	r0, r5
   1ca50:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ca54:	add	r7, r7, #1
   1ca58:	ldr	r0, [r8, #124]	; 0x7c
   1ca5c:	cmp	r7, r0
   1ca60:	bge	1cacc <__mempcpy_chk@plt+0xb4ec>
   1ca64:	ldr	r0, [r8, #132]	; 0x84
   1ca68:	ldr	r5, [r0, r7, lsl #2]
   1ca6c:	ldr	r0, [r5, #16]
   1ca70:	cmp	r0, #1
   1ca74:	blt	1caa4 <__mempcpy_chk@plt+0xb4c4>
   1ca78:	mov	r4, #0
   1ca7c:	ldr	r0, [r5, #20]
   1ca80:	ldr	r6, [r0, r4, lsl #2]
   1ca84:	ldr	r0, [r6, #16]
   1ca88:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ca8c:	mov	r0, r6
   1ca90:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ca94:	add	r4, r4, #1
   1ca98:	ldr	r0, [r5, #16]
   1ca9c:	cmp	r4, r0
   1caa0:	blt	1ca7c <__mempcpy_chk@plt+0xb49c>
   1caa4:	ldr	r0, [r5, #20]
   1caa8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1caac:	ldr	r0, [r5, #8]
   1cab0:	cmp	r0, #0
   1cab4:	beq	1ca4c <__mempcpy_chk@plt+0xb46c>
   1cab8:	ldr	r0, [r0, #8]
   1cabc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1cac0:	ldr	r0, [r5, #8]
   1cac4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1cac8:	b	1ca4c <__mempcpy_chk@plt+0xb46c>
   1cacc:	mov	r0, #0
   1cad0:	str	r0, [r8, #108]	; 0x6c
   1cad4:	str	r0, [r8, #124]	; 0x7c
   1cad8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cadc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cae0:	add	fp, sp, #28
   1cae4:	sub	sp, sp, #204	; 0xcc
   1cae8:	mov	r5, r3
   1caec:	mov	r6, r2
   1caf0:	mov	r9, r1
   1caf4:	ldr	r4, [r0]
   1caf8:	movw	r0, #13736	; 0x35a8
   1cafc:	movt	r0, #2
   1cb00:	vldr	d16, [r0]
   1cb04:	ldr	r0, [r0, #8]
   1cb08:	str	r0, [fp, #-56]	; 0xffffffc8
   1cb0c:	vstr	d16, [fp, #-64]	; 0xffffffc0
   1cb10:	add	r0, sp, #28
   1cb14:	bl	20eb4 <__mempcpy_chk@plt+0xf8d4>
   1cb18:	mov	r7, #0
   1cb1c:	ldr	r0, [fp, #8]
   1cb20:	cmp	r0, #0
   1cb24:	mov	sl, #0
   1cb28:	beq	1cb4c <__mempcpy_chk@plt+0xb56c>
   1cb2c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1cb30:	add	r0, r0, r0, lsl #1
   1cb34:	lsl	r0, r0, #3
   1cb38:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1cb3c:	str	r0, [fp, #-56]	; 0xffffffc8
   1cb40:	cmp	r0, #0
   1cb44:	beq	1cce8 <__mempcpy_chk@plt+0xb708>
   1cb48:	sub	sl, fp, #64	; 0x40
   1cb4c:	ldr	r8, [r4, #72]	; 0x48
   1cb50:	str	r7, [fp, #-44]	; 0xffffffd4
   1cb54:	str	r7, [fp, #-48]	; 0xffffffd0
   1cb58:	str	r7, [fp, #-40]	; 0xffffffd8
   1cb5c:	add	r0, sp, #28
   1cb60:	mov	r1, r6
   1cb64:	bl	20ecc <__mempcpy_chk@plt+0xf8ec>
   1cb68:	mov	r7, #12
   1cb6c:	cmp	r0, #0
   1cb70:	beq	1ccfc <__mempcpy_chk@plt+0xb71c>
   1cb74:	str	r4, [sp, #20]
   1cb78:	str	r9, [sp, #24]
   1cb7c:	add	r0, sp, #28
   1cb80:	bl	20fa4 <__mempcpy_chk@plt+0xf9c4>
   1cb84:	mov	r4, r0
   1cb88:	lsl	r2, r6, #3
   1cb8c:	mov	r1, r5
   1cb90:	bl	1134c <memcpy@plt>
   1cb94:	ldr	r9, [r5]
   1cb98:	ldr	r0, [r5, #4]
   1cb9c:	str	r9, [fp, #-32]	; 0xffffffe0
   1cba0:	mov	r7, #0
   1cba4:	cmp	r9, r0
   1cba8:	bgt	1ccf4 <__mempcpy_chk@plt+0xb714>
   1cbac:	str	r9, [sp]
   1cbb0:	str	r6, [sp, #4]
   1cbb4:	ldr	r0, [sp, #20]
   1cbb8:	mov	r1, r5
   1cbbc:	mov	r2, r4
   1cbc0:	mov	r3, r8
   1cbc4:	bl	20fac <__mempcpy_chk@plt+0xf9cc>
   1cbc8:	ldr	r0, [r5, #4]
   1cbcc:	cmp	r9, r0
   1cbd0:	ldr	r9, [sp, #24]
   1cbd4:	bne	1cbe4 <__mempcpy_chk@plt+0xb604>
   1cbd8:	ldr	r0, [r9, #96]	; 0x60
   1cbdc:	cmp	r8, r0
   1cbe0:	beq	1cc00 <__mempcpy_chk@plt+0xb620>
   1cbe4:	cmp	sl, #0
   1cbe8:	beq	1cc64 <__mempcpy_chk@plt+0xb684>
   1cbec:	sub	r0, fp, #48	; 0x30
   1cbf0:	mov	r1, r8
   1cbf4:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   1cbf8:	cmp	r0, #0
   1cbfc:	beq	1cc64 <__mempcpy_chk@plt+0xb684>
   1cc00:	cmp	sl, #0
   1cc04:	beq	1ccf4 <__mempcpy_chk@plt+0xb714>
   1cc08:	mov	r0, #0
   1cc0c:	b	1cc1c <__mempcpy_chk@plt+0xb63c>
   1cc10:	add	r0, r0, #1
   1cc14:	cmp	r6, r0
   1cc18:	beq	1ccf0 <__mempcpy_chk@plt+0xb710>
   1cc1c:	ldr	r1, [r5, r0, lsl #3]
   1cc20:	cmp	r1, #0
   1cc24:	bmi	1cc10 <__mempcpy_chk@plt+0xb630>
   1cc28:	add	r1, r5, r0, lsl #3
   1cc2c:	ldr	r1, [r1, #4]
   1cc30:	cmn	r1, #1
   1cc34:	bne	1cc10 <__mempcpy_chk@plt+0xb630>
   1cc38:	str	r4, [sp]
   1cc3c:	sub	r0, fp, #48	; 0x30
   1cc40:	str	r0, [sp, #4]
   1cc44:	mov	r0, sl
   1cc48:	sub	r1, fp, #32
   1cc4c:	mov	r2, r6
   1cc50:	mov	r3, r5
   1cc54:	bl	21064 <__mempcpy_chk@plt+0xfa84>
   1cc58:	mov	r8, r0
   1cc5c:	cmp	r0, #0
   1cc60:	bmi	1ccf0 <__mempcpy_chk@plt+0xb710>
   1cc64:	sub	r0, fp, #32
   1cc68:	stm	sp, {r0, r8}
   1cc6c:	sub	r0, fp, #48	; 0x30
   1cc70:	str	r0, [sp, #8]
   1cc74:	str	sl, [sp, #12]
   1cc78:	mov	r0, r9
   1cc7c:	mov	r1, r6
   1cc80:	mov	r2, r5
   1cc84:	mov	r3, r4
   1cc88:	bl	2111c <__mempcpy_chk@plt+0xfb3c>
   1cc8c:	mov	r8, r0
   1cc90:	cmn	r0, #1
   1cc94:	ble	1ccac <__mempcpy_chk@plt+0xb6cc>
   1cc98:	ldr	r0, [r5, #4]
   1cc9c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1cca0:	cmp	r9, r0
   1cca4:	ble	1cbac <__mempcpy_chk@plt+0xb5cc>
   1cca8:	b	1ccf4 <__mempcpy_chk@plt+0xb714>
   1ccac:	cmn	r8, #2
   1ccb0:	beq	1cd18 <__mempcpy_chk@plt+0xb738>
   1ccb4:	str	r4, [sp]
   1ccb8:	sub	r0, fp, #48	; 0x30
   1ccbc:	str	r0, [sp, #4]
   1ccc0:	mov	r0, sl
   1ccc4:	sub	r1, fp, #32
   1ccc8:	mov	r2, r6
   1cccc:	mov	r3, r5
   1ccd0:	bl	21064 <__mempcpy_chk@plt+0xfa84>
   1ccd4:	mov	r8, r0
   1ccd8:	cmp	r0, #0
   1ccdc:	bpl	1cc98 <__mempcpy_chk@plt+0xb6b8>
   1cce0:	mov	r7, #1
   1cce4:	b	1ccf4 <__mempcpy_chk@plt+0xb714>
   1cce8:	mov	r7, #12
   1ccec:	b	1cd0c <__mempcpy_chk@plt+0xb72c>
   1ccf0:	mov	r7, #0
   1ccf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ccf8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ccfc:	add	r0, sp, #28
   1cd00:	bl	20f20 <__mempcpy_chk@plt+0xf940>
   1cd04:	mov	r0, sl
   1cd08:	bl	20f3c <__mempcpy_chk@plt+0xf95c>
   1cd0c:	mov	r0, r7
   1cd10:	sub	sp, fp, #28
   1cd14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd18:	mov	r7, #12
   1cd1c:	b	1ccf4 <__mempcpy_chk@plt+0xb714>
   1cd20:	push	{r4, sl, fp, lr}
   1cd24:	add	fp, sp, #8
   1cd28:	mov	r4, r0
   1cd2c:	bl	1ca2c <__mempcpy_chk@plt+0xb44c>
   1cd30:	ldr	r0, [r4, #132]	; 0x84
   1cd34:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1cd38:	ldr	r0, [r4, #116]	; 0x74
   1cd3c:	pop	{r4, sl, fp, lr}
   1cd40:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   1cd44:	push	{r4, r5, fp, lr}
   1cd48:	add	fp, sp, #8
   1cd4c:	mov	r4, r0
   1cd50:	cmn	r1, #1
   1cd54:	ble	1cd8c <__mempcpy_chk@plt+0xb7ac>
   1cd58:	ldr	r0, [r4, #48]	; 0x30
   1cd5c:	cmp	r0, r1
   1cd60:	beq	1cde8 <__mempcpy_chk@plt+0xb808>
   1cd64:	ldr	r0, [r4, #80]	; 0x50
   1cd68:	cmp	r0, #2
   1cd6c:	blt	1cd94 <__mempcpy_chk@plt+0xb7b4>
   1cd70:	ldr	r0, [r4, #8]
   1cd74:	ldr	r5, [r0, r1, lsl #2]
   1cd78:	cmn	r5, #1
   1cd7c:	bne	1cdbc <__mempcpy_chk@plt+0xb7dc>
   1cd80:	sub	r1, r1, #1
   1cd84:	cmn	r1, #1
   1cd88:	bne	1cd74 <__mempcpy_chk@plt+0xb794>
   1cd8c:	ldr	r0, [r4, #60]	; 0x3c
   1cd90:	pop	{r4, r5, fp, pc}
   1cd94:	ldr	r2, [r4, #4]
   1cd98:	ldr	r0, [r4, #68]	; 0x44
   1cd9c:	ldrb	r5, [r2, r1]
   1cda0:	mov	r1, r5
   1cda4:	bl	1cec0 <__mempcpy_chk@plt+0xb8e0>
   1cda8:	mov	r1, r0
   1cdac:	mov	r0, #1
   1cdb0:	cmp	r1, #0
   1cdb4:	beq	1cdc8 <__mempcpy_chk@plt+0xb7e8>
   1cdb8:	b	1cde4 <__mempcpy_chk@plt+0xb804>
   1cdbc:	ldrb	r0, [r4, #78]	; 0x4e
   1cdc0:	cmp	r0, #0
   1cdc4:	bne	1cdf4 <__mempcpy_chk@plt+0xb814>
   1cdc8:	mov	r0, #0
   1cdcc:	cmp	r5, #10
   1cdd0:	popne	{r4, r5, fp, pc}
   1cdd4:	ldrb	r0, [r4, #77]	; 0x4d
   1cdd8:	cmp	r0, #0
   1cddc:	movwne	r0, #1
   1cde0:	lsl	r0, r0, #1
   1cde4:	pop	{r4, r5, fp, pc}
   1cde8:	and	r0, r2, #2
   1cdec:	eor	r0, r0, #10
   1cdf0:	pop	{r4, r5, fp, pc}
   1cdf4:	mov	r0, r5
   1cdf8:	bl	114e4 <iswalnum@plt>
   1cdfc:	mov	r1, r0
   1ce00:	mov	r0, #1
   1ce04:	cmp	r5, #95	; 0x5f
   1ce08:	bne	1cdb0 <__mempcpy_chk@plt+0xb7d0>
   1ce0c:	b	1cde4 <__mempcpy_chk@plt+0xb804>
   1ce10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce14:	add	fp, sp, #28
   1ce18:	sub	sp, sp, #12
   1ce1c:	str	r2, [sp, #4]
   1ce20:	mov	sl, r1
   1ce24:	mov	r7, r0
   1ce28:	ldr	r0, [r0, #24]
   1ce2c:	ldr	r1, [r7, #32]
   1ce30:	add	r5, r1, r0
   1ce34:	mvn	r1, #0
   1ce38:	cmp	r5, sl
   1ce3c:	bge	1ceac <__mempcpy_chk@plt+0xb8cc>
   1ce40:	add	r4, r7, #16
   1ce44:	ldr	r0, [r7]
   1ce48:	ldr	r2, [r7, #44]	; 0x2c
   1ce4c:	add	r1, r0, r5
   1ce50:	sub	r6, r2, r5
   1ce54:	ldm	r4, {r8, r9}
   1ce58:	add	r0, sp, #8
   1ce5c:	mov	r2, r6
   1ce60:	mov	r3, r4
   1ce64:	bl	226c4 <__mempcpy_chk@plt+0x110e4>
   1ce68:	sub	r1, r0, #1
   1ce6c:	cmn	r1, #3
   1ce70:	bcs	1ce88 <__mempcpy_chk@plt+0xb8a8>
   1ce74:	ldr	r1, [sp, #8]
   1ce78:	add	r5, r0, r5
   1ce7c:	cmp	r5, sl
   1ce80:	blt	1ce44 <__mempcpy_chk@plt+0xb864>
   1ce84:	b	1ceac <__mempcpy_chk@plt+0xb8cc>
   1ce88:	mov	r1, #0
   1ce8c:	cmp	r6, #0
   1ce90:	cmpne	r0, #0
   1ce94:	beq	1cea0 <__mempcpy_chk@plt+0xb8c0>
   1ce98:	ldr	r0, [r7]
   1ce9c:	ldrb	r1, [r0, r5]
   1cea0:	stm	r4, {r8, r9}
   1cea4:	mov	r0, #1
   1cea8:	b	1ce78 <__mempcpy_chk@plt+0xb898>
   1ceac:	ldr	r0, [sp, #4]
   1ceb0:	str	r1, [r0]
   1ceb4:	mov	r0, r5
   1ceb8:	sub	sp, fp, #28
   1cebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cec0:	asr	r2, r1, #31
   1cec4:	add	r2, r1, r2, lsr #27
   1cec8:	asr	r2, r2, #5
   1cecc:	ldr	r0, [r0, r2, lsl #2]
   1ced0:	and	r1, r1, #31
   1ced4:	mov	r2, #1
   1ced8:	and	r0, r0, r2, lsl r1
   1cedc:	cmp	r0, #0
   1cee0:	movwne	r0, #1
   1cee4:	bx	lr
   1cee8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ceec:	add	fp, sp, #24
   1cef0:	mov	r6, r0
   1cef4:	ldr	r0, [r1, #4]
   1cef8:	cmp	r0, #1
   1cefc:	blt	1cf74 <__mempcpy_chk@plt+0xb994>
   1cf00:	mov	r8, r2
   1cf04:	mov	r5, r1
   1cf08:	ldr	r7, [r6, #84]	; 0x54
   1cf0c:	mov	r4, #0
   1cf10:	mov	r9, #1
   1cf14:	b	1cf28 <__mempcpy_chk@plt+0xb948>
   1cf18:	add	r4, r4, #1
   1cf1c:	ldr	r0, [r5, #4]
   1cf20:	cmp	r4, r0
   1cf24:	bge	1cf74 <__mempcpy_chk@plt+0xb994>
   1cf28:	ldr	r0, [r5, #8]
   1cf2c:	ldr	r1, [r0, r4, lsl #2]
   1cf30:	ldr	r0, [r7]
   1cf34:	add	r2, r0, r1, lsl #3
   1cf38:	ldrb	r2, [r2, #4]
   1cf3c:	cmp	r2, #8
   1cf40:	bne	1cf18 <__mempcpy_chk@plt+0xb938>
   1cf44:	ldr	r0, [r0, r1, lsl #3]
   1cf48:	cmp	r0, #31
   1cf4c:	bgt	1cf18 <__mempcpy_chk@plt+0xb938>
   1cf50:	ldr	r2, [r7, #80]	; 0x50
   1cf54:	tst	r2, r9, lsl r0
   1cf58:	beq	1cf18 <__mempcpy_chk@plt+0xb938>
   1cf5c:	mov	r0, r6
   1cf60:	mov	r2, r8
   1cf64:	bl	1d5cc <__mempcpy_chk@plt+0xbfec>
   1cf68:	cmp	r0, #0
   1cf6c:	beq	1cf18 <__mempcpy_chk@plt+0xb938>
   1cf70:	b	1cf78 <__mempcpy_chk@plt+0xb998>
   1cf74:	mov	r0, #0
   1cf78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cf7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf80:	add	fp, sp, #28
   1cf84:	sub	sp, sp, #52	; 0x34
   1cf88:	mov	r5, r0
   1cf8c:	ldr	r0, [r1, #4]
   1cf90:	cmp	r0, #1
   1cf94:	blt	1d268 <__mempcpy_chk@plt+0xbc88>
   1cf98:	mov	r8, r1
   1cf9c:	ldr	r9, [r5, #84]	; 0x54
   1cfa0:	ldr	r0, [r5, #40]	; 0x28
   1cfa4:	str	r0, [sp, #32]
   1cfa8:	mov	sl, #0
   1cfac:	str	r1, [sp, #4]
   1cfb0:	str	r9, [sp, #16]
   1cfb4:	b	1cfc8 <__mempcpy_chk@plt+0xb9e8>
   1cfb8:	ldr	r0, [r8, #4]
   1cfbc:	add	sl, sl, #1
   1cfc0:	cmp	sl, r0
   1cfc4:	bge	1d268 <__mempcpy_chk@plt+0xbc88>
   1cfc8:	ldr	r0, [r8, #8]
   1cfcc:	ldr	r4, [r0, sl, lsl #2]
   1cfd0:	ldr	r0, [r9]
   1cfd4:	add	r0, r0, r4, lsl #3
   1cfd8:	ldr	r6, [r0, #4]
   1cfdc:	uxtb	r0, r6
   1cfe0:	cmp	r0, #4
   1cfe4:	bne	1cfb8 <__mempcpy_chk@plt+0xb9d8>
   1cfe8:	movw	r0, #65280	; 0xff00
   1cfec:	movt	r0, #3
   1cff0:	tst	r6, r0
   1cff4:	beq	1d048 <__mempcpy_chk@plt+0xba68>
   1cff8:	ldr	r2, [r5, #88]	; 0x58
   1cffc:	mov	r0, r5
   1d000:	ldr	r1, [sp, #32]
   1d004:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1d008:	and	r1, r0, #1
   1d00c:	tst	r6, #1024	; 0x400
   1d010:	beq	1d01c <__mempcpy_chk@plt+0xba3c>
   1d014:	cmp	r1, #0
   1d018:	beq	1cfb8 <__mempcpy_chk@plt+0xb9d8>
   1d01c:	tst	r6, #2048	; 0x800
   1d020:	cmpne	r1, #0
   1d024:	bne	1cfb8 <__mempcpy_chk@plt+0xb9d8>
   1d028:	tst	r6, #8192	; 0x2000
   1d02c:	beq	1d038 <__mempcpy_chk@plt+0xba58>
   1d030:	ands	r1, r0, #2
   1d034:	beq	1cfb8 <__mempcpy_chk@plt+0xb9d8>
   1d038:	tst	r6, #32768	; 0x8000
   1d03c:	beq	1d048 <__mempcpy_chk@plt+0xba68>
   1d040:	ands	r0, r0, #8
   1d044:	beq	1cfb8 <__mempcpy_chk@plt+0xb9d8>
   1d048:	ldr	r6, [r5, #108]	; 0x6c
   1d04c:	mov	r0, r5
   1d050:	mov	r1, r4
   1d054:	ldr	r2, [sp, #32]
   1d058:	bl	1d658 <__mempcpy_chk@plt+0xc078>
   1d05c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d060:	cmp	r0, #0
   1d064:	bne	1d270 <__mempcpy_chk@plt+0xbc90>
   1d068:	ldr	r0, [r5, #108]	; 0x6c
   1d06c:	cmp	r6, r0
   1d070:	bge	1cfb8 <__mempcpy_chk@plt+0xb9d8>
   1d074:	add	r0, r6, r6, lsl #1
   1d078:	lsl	r7, r0, #3
   1d07c:	str	r4, [sp, #8]
   1d080:	b	1d098 <__mempcpy_chk@plt+0xbab8>
   1d084:	add	r7, r7, #24
   1d088:	add	r6, r6, #1
   1d08c:	ldr	r0, [r5, #108]	; 0x6c
   1d090:	cmp	r6, r0
   1d094:	bge	1cfb8 <__mempcpy_chk@plt+0xb9d8>
   1d098:	ldr	r0, [r5, #116]	; 0x74
   1d09c:	ldr	r1, [r0, r7]
   1d0a0:	cmp	r1, r4
   1d0a4:	bne	1d084 <__mempcpy_chk@plt+0xbaa4>
   1d0a8:	add	r0, r0, r7
   1d0ac:	ldr	r1, [r0, #4]
   1d0b0:	ldr	r2, [sp, #32]
   1d0b4:	cmp	r1, r2
   1d0b8:	bne	1d084 <__mempcpy_chk@plt+0xbaa4>
   1d0bc:	ldr	r2, [r0, #8]
   1d0c0:	ldr	r3, [r0, #12]
   1d0c4:	ldr	r0, [r9, #24]
   1d0c8:	str	r0, [sp, #28]
   1d0cc:	cmp	r3, r2
   1d0d0:	bne	1d0e8 <__mempcpy_chk@plt+0xbb08>
   1d0d4:	ldr	r0, [r9, #20]
   1d0d8:	add	r1, r4, r4, lsl #1
   1d0dc:	add	r0, r0, r1, lsl #2
   1d0e0:	ldr	r0, [r0, #8]
   1d0e4:	b	1d0f0 <__mempcpy_chk@plt+0xbb10>
   1d0e8:	ldr	r0, [r9, #12]
   1d0ec:	add	r0, r0, r4, lsl #2
   1d0f0:	ldr	r0, [r0]
   1d0f4:	add	r9, r0, r0, lsl #1
   1d0f8:	ldr	r4, [sp, #32]
   1d0fc:	str	r3, [sp, #20]
   1d100:	add	r0, r3, r4
   1d104:	str	r2, [sp, #24]
   1d108:	sub	r8, r0, r2
   1d10c:	sub	r1, r8, #1
   1d110:	ldr	r2, [r5, #88]	; 0x58
   1d114:	mov	r0, r5
   1d118:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1d11c:	mov	r3, r0
   1d120:	ldr	r0, [r5, #100]	; 0x64
   1d124:	ldr	r1, [r0, r4, lsl #2]
   1d128:	ldr	r0, [r0, r8, lsl #2]
   1d12c:	cmp	r1, #0
   1d130:	beq	1d13c <__mempcpy_chk@plt+0xbb5c>
   1d134:	ldr	r1, [r1, #8]
   1d138:	b	1d140 <__mempcpy_chk@plt+0xbb60>
   1d13c:	mov	r1, #0
   1d140:	str	r1, [sp, #12]
   1d144:	add	r4, sp, #36	; 0x24
   1d148:	ldr	r1, [sp, #28]
   1d14c:	add	r2, r1, r9, lsl #2
   1d150:	cmp	r0, #0
   1d154:	str	r2, [sp, #28]
   1d158:	beq	1d1c8 <__mempcpy_chk@plt+0xbbe8>
   1d15c:	mov	r9, r3
   1d160:	ldr	r1, [r0, #40]	; 0x28
   1d164:	mov	r0, r4
   1d168:	bl	1da00 <__mempcpy_chk@plt+0xc420>
   1d16c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d170:	cmp	r0, #0
   1d174:	ldr	r1, [sp, #16]
   1d178:	bne	1d27c <__mempcpy_chk@plt+0xbc9c>
   1d17c:	sub	r0, fp, #32
   1d180:	mov	r2, r4
   1d184:	mov	r3, r9
   1d188:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1d18c:	ldr	r1, [r5, #100]	; 0x64
   1d190:	str	r0, [r1, r8, lsl #2]
   1d194:	ldr	r0, [sp, #44]	; 0x2c
   1d198:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1d19c:	ldr	r0, [r5, #100]	; 0x64
   1d1a0:	ldr	r0, [r0, r8, lsl #2]
   1d1a4:	cmp	r0, #0
   1d1a8:	bne	1d1b8 <__mempcpy_chk@plt+0xbbd8>
   1d1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d1b0:	cmp	r0, #0
   1d1b4:	bne	1d270 <__mempcpy_chk@plt+0xbc90>
   1d1b8:	ldr	r8, [sp, #4]
   1d1bc:	ldr	r4, [sp, #8]
   1d1c0:	ldr	r9, [sp, #16]
   1d1c4:	b	1d204 <__mempcpy_chk@plt+0xbc24>
   1d1c8:	sub	r0, fp, #32
   1d1cc:	ldr	r9, [sp, #16]
   1d1d0:	mov	r1, r9
   1d1d4:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1d1d8:	ldr	r1, [r5, #100]	; 0x64
   1d1dc:	str	r0, [r1, r8, lsl #2]
   1d1e0:	ldr	r0, [r5, #100]	; 0x64
   1d1e4:	ldr	r0, [r0, r8, lsl #2]
   1d1e8:	cmp	r0, #0
   1d1ec:	ldr	r8, [sp, #4]
   1d1f0:	ldr	r4, [sp, #8]
   1d1f4:	bne	1d204 <__mempcpy_chk@plt+0xbc24>
   1d1f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d1fc:	cmp	r0, #0
   1d200:	bne	1d270 <__mempcpy_chk@plt+0xbc90>
   1d204:	ldr	r0, [sp, #24]
   1d208:	ldr	r1, [sp, #20]
   1d20c:	cmp	r1, r0
   1d210:	bne	1d084 <__mempcpy_chk@plt+0xbaa4>
   1d214:	ldr	r0, [r5, #100]	; 0x64
   1d218:	ldr	r1, [sp, #32]
   1d21c:	ldr	r0, [r0, r1, lsl #2]
   1d220:	ldr	r0, [r0, #8]
   1d224:	ldr	r1, [sp, #12]
   1d228:	cmp	r0, r1
   1d22c:	ble	1d084 <__mempcpy_chk@plt+0xbaa4>
   1d230:	mov	r0, r5
   1d234:	ldr	r1, [sp, #28]
   1d238:	ldr	r2, [sp, #32]
   1d23c:	bl	1cee8 <__mempcpy_chk@plt+0xb908>
   1d240:	str	r0, [fp, #-32]	; 0xffffffe0
   1d244:	cmp	r0, #0
   1d248:	bne	1d270 <__mempcpy_chk@plt+0xbc90>
   1d24c:	mov	r0, r5
   1d250:	ldr	r1, [sp, #28]
   1d254:	bl	1cf7c <__mempcpy_chk@plt+0xb99c>
   1d258:	str	r0, [fp, #-32]	; 0xffffffe0
   1d25c:	cmp	r0, #0
   1d260:	beq	1d084 <__mempcpy_chk@plt+0xbaa4>
   1d264:	b	1d270 <__mempcpy_chk@plt+0xbc90>
   1d268:	mov	r0, #0
   1d26c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d274:	sub	sp, fp, #28
   1d278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d27c:	ldr	r0, [sp, #44]	; 0x2c
   1d280:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1d284:	b	1d270 <__mempcpy_chk@plt+0xbc90>
   1d288:	push	{r4, r5, fp, lr}
   1d28c:	add	fp, sp, #8
   1d290:	mov	r4, r0
   1d294:	ldr	r0, [r0, #36]	; 0x24
   1d298:	mov	r5, #12
   1d29c:	cmn	r0, #-536870910	; 0xe0000002
   1d2a0:	bhi	1d354 <__mempcpy_chk@plt+0xbd74>
   1d2a4:	ldr	r2, [r4, #48]	; 0x30
   1d2a8:	cmp	r2, r0, lsl #1
   1d2ac:	lslge	r2, r0, #1
   1d2b0:	cmp	r2, r1
   1d2b4:	movle	r2, r1
   1d2b8:	mov	r0, r4
   1d2bc:	mov	r1, r2
   1d2c0:	bl	16a40 <__mempcpy_chk@plt+0x5460>
   1d2c4:	cmp	r0, #0
   1d2c8:	bne	1d358 <__mempcpy_chk@plt+0xbd78>
   1d2cc:	ldr	r0, [r4, #100]	; 0x64
   1d2d0:	cmp	r0, #0
   1d2d4:	beq	1d2f4 <__mempcpy_chk@plt+0xbd14>
   1d2d8:	ldr	r1, [r4, #36]	; 0x24
   1d2dc:	mov	r2, #4
   1d2e0:	add	r1, r2, r1, lsl #2
   1d2e4:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1d2e8:	cmp	r0, #0
   1d2ec:	beq	1d354 <__mempcpy_chk@plt+0xbd74>
   1d2f0:	str	r0, [r4, #100]	; 0x64
   1d2f4:	ldr	r0, [r4, #80]	; 0x50
   1d2f8:	ldrb	r1, [r4, #72]	; 0x48
   1d2fc:	cmp	r1, #0
   1d300:	beq	1d320 <__mempcpy_chk@plt+0xbd40>
   1d304:	cmp	r0, #2
   1d308:	blt	1d334 <__mempcpy_chk@plt+0xbd54>
   1d30c:	mov	r0, r4
   1d310:	bl	16ae4 <__mempcpy_chk@plt+0x5504>
   1d314:	cmp	r0, #0
   1d318:	beq	1d350 <__mempcpy_chk@plt+0xbd70>
   1d31c:	pop	{r4, r5, fp, pc}
   1d320:	cmp	r0, #2
   1d324:	blt	1d340 <__mempcpy_chk@plt+0xbd60>
   1d328:	mov	r0, r4
   1d32c:	bl	170f4 <__mempcpy_chk@plt+0x5b14>
   1d330:	b	1d350 <__mempcpy_chk@plt+0xbd70>
   1d334:	mov	r0, r4
   1d338:	bl	17080 <__mempcpy_chk@plt+0x5aa0>
   1d33c:	b	1d350 <__mempcpy_chk@plt+0xbd70>
   1d340:	ldr	r0, [r4, #64]	; 0x40
   1d344:	cmp	r0, #0
   1d348:	movne	r0, r4
   1d34c:	blne	172b0 <__mempcpy_chk@plt+0x5cd0>
   1d350:	mov	r5, #0
   1d354:	mov	r0, r5
   1d358:	pop	{r4, r5, fp, pc}
   1d35c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d360:	add	fp, sp, #24
   1d364:	mov	r6, r2
   1d368:	mov	r4, r1
   1d36c:	mov	r5, r0
   1d370:	ldrb	r0, [r2, #52]	; 0x34
   1d374:	tst	r0, #32
   1d378:	bne	1d3f0 <__mempcpy_chk@plt+0xbe10>
   1d37c:	ldr	r0, [r4, #4]
   1d380:	ldr	r1, [r4, #40]	; 0x28
   1d384:	add	r2, r1, #1
   1d388:	str	r2, [r4, #40]	; 0x28
   1d38c:	ldrb	r7, [r0, r1]
   1d390:	ldr	r0, [r6, #44]	; 0x2c
   1d394:	cmp	r0, #0
   1d398:	ldrne	r0, [r0, r7, lsl #2]
   1d39c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d3a0:	ldr	r8, [r6, #48]	; 0x30
   1d3a4:	cmp	r8, #0
   1d3a8:	bne	1d3d0 <__mempcpy_chk@plt+0xbdf0>
   1d3ac:	ldr	r0, [r4, #84]	; 0x54
   1d3b0:	mov	r1, r6
   1d3b4:	bl	1f1f4 <__mempcpy_chk@plt+0xdc14>
   1d3b8:	cmp	r0, #0
   1d3bc:	bne	1d390 <__mempcpy_chk@plt+0xbdb0>
   1d3c0:	mov	r0, #12
   1d3c4:	str	r0, [r5]
   1d3c8:	mov	r0, #0
   1d3cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d3d0:	ldr	r0, [r4, #40]	; 0x28
   1d3d4:	ldr	r2, [r4, #88]	; 0x58
   1d3d8:	sub	r1, r0, #1
   1d3dc:	mov	r0, r4
   1d3e0:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1d3e4:	bfi	r7, r0, #8, #1
   1d3e8:	ldr	r0, [r8, r7, lsl #2]
   1d3ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d3f0:	mov	r0, r4
   1d3f4:	mov	r1, r6
   1d3f8:	bl	1f024 <__mempcpy_chk@plt+0xda44>
   1d3fc:	str	r0, [r5]
   1d400:	cmp	r0, #0
   1d404:	beq	1d37c <__mempcpy_chk@plt+0xbd9c>
   1d408:	b	1d3c8 <__mempcpy_chk@plt+0xbde8>
   1d40c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d410:	add	fp, sp, #24
   1d414:	sub	sp, sp, #16
   1d418:	mov	r7, r2
   1d41c:	mov	r4, r1
   1d420:	mov	r8, r0
   1d424:	ldr	r5, [r1, #40]	; 0x28
   1d428:	ldr	r6, [r1, #84]	; 0x54
   1d42c:	ldr	r0, [r1, #100]	; 0x64
   1d430:	ldr	r1, [r1, #104]	; 0x68
   1d434:	cmp	r5, r1
   1d438:	ble	1d448 <__mempcpy_chk@plt+0xbe68>
   1d43c:	str	r7, [r0, r5, lsl #2]
   1d440:	str	r5, [r4, #104]	; 0x68
   1d444:	b	1d4e4 <__mempcpy_chk@plt+0xbf04>
   1d448:	ldr	r1, [r0, r5, lsl #2]
   1d44c:	cmp	r1, #0
   1d450:	beq	1d484 <__mempcpy_chk@plt+0xbea4>
   1d454:	ldr	r0, [r0, r5, lsl #2]
   1d458:	ldr	r2, [r0, #40]	; 0x28
   1d45c:	cmp	r7, #0
   1d460:	beq	1d48c <__mempcpy_chk@plt+0xbeac>
   1d464:	ldr	r9, [r7, #40]	; 0x28
   1d468:	mov	r0, sp
   1d46c:	mov	r1, r9
   1d470:	bl	1da00 <__mempcpy_chk@plt+0xc420>
   1d474:	str	r0, [r8]
   1d478:	cmp	r0, #0
   1d47c:	beq	1d4a0 <__mempcpy_chk@plt+0xbec0>
   1d480:	b	1d550 <__mempcpy_chk@plt+0xbf70>
   1d484:	str	r7, [r0, r5, lsl #2]
   1d488:	b	1d4e4 <__mempcpy_chk@plt+0xbf04>
   1d48c:	vldr	d16, [r2]
   1d490:	ldr	r0, [r2, #8]
   1d494:	str	r0, [sp, #8]
   1d498:	vstr	d16, [sp]
   1d49c:	mov	r9, #0
   1d4a0:	ldr	r0, [r4, #40]	; 0x28
   1d4a4:	ldr	r2, [r4, #88]	; 0x58
   1d4a8:	sub	r1, r0, #1
   1d4ac:	mov	r0, r4
   1d4b0:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1d4b4:	mov	r3, r0
   1d4b8:	mov	r2, sp
   1d4bc:	mov	r0, r8
   1d4c0:	mov	r1, r6
   1d4c4:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1d4c8:	mov	r7, r0
   1d4cc:	ldr	r0, [r4, #100]	; 0x64
   1d4d0:	str	r7, [r0, r5, lsl #2]
   1d4d4:	cmp	r9, #0
   1d4d8:	beq	1d4e4 <__mempcpy_chk@plt+0xbf04>
   1d4dc:	ldr	r0, [sp, #8]
   1d4e0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1d4e4:	cmp	r7, #0
   1d4e8:	ldrne	r0, [r6, #76]	; 0x4c
   1d4ec:	cmpne	r0, #0
   1d4f0:	bne	1d500 <__mempcpy_chk@plt+0xbf20>
   1d4f4:	mov	r0, r7
   1d4f8:	sub	sp, fp, #24
   1d4fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d500:	add	r6, r7, #4
   1d504:	mov	r0, r4
   1d508:	mov	r1, r6
   1d50c:	mov	r2, r5
   1d510:	bl	1cee8 <__mempcpy_chk@plt+0xb908>
   1d514:	str	r0, [r8]
   1d518:	cmp	r0, #0
   1d51c:	bne	1d550 <__mempcpy_chk@plt+0xbf70>
   1d520:	ldrb	r0, [r7, #52]	; 0x34
   1d524:	tst	r0, #64	; 0x40
   1d528:	beq	1d4f4 <__mempcpy_chk@plt+0xbf14>
   1d52c:	mov	r0, r4
   1d530:	mov	r1, r6
   1d534:	bl	1cf7c <__mempcpy_chk@plt+0xb99c>
   1d538:	str	r0, [r8]
   1d53c:	cmp	r0, #0
   1d540:	mov	r7, #0
   1d544:	ldreq	r0, [r4, #100]	; 0x64
   1d548:	ldreq	r7, [r0, r5, lsl #2]
   1d54c:	b	1d4f4 <__mempcpy_chk@plt+0xbf14>
   1d550:	mov	r7, #0
   1d554:	b	1d4f4 <__mempcpy_chk@plt+0xbf14>
   1d558:	push	{r4, r5, r6, sl, fp, lr}
   1d55c:	add	fp, sp, #16
   1d560:	mov	r4, r1
   1d564:	mov	r6, r0
   1d568:	ldr	r1, [r4, #40]	; 0x28
   1d56c:	ldr	r0, [r4, #104]	; 0x68
   1d570:	cmp	r1, r0
   1d574:	bge	1d5c4 <__mempcpy_chk@plt+0xbfe4>
   1d578:	add	r2, r1, #1
   1d57c:	ldr	r3, [r4, #40]	; 0x28
   1d580:	ldr	r5, [r4, #100]	; 0x64
   1d584:	add	r3, r3, #1
   1d588:	str	r3, [r4, #40]	; 0x28
   1d58c:	add	r1, r5, r1, lsl #2
   1d590:	ldr	r1, [r1, #4]
   1d594:	cmp	r1, #0
   1d598:	mov	r1, r2
   1d59c:	beq	1d570 <__mempcpy_chk@plt+0xbf90>
   1d5a0:	mov	r0, r6
   1d5a4:	mov	r1, r4
   1d5a8:	mov	r2, #0
   1d5ac:	bl	1d40c <__mempcpy_chk@plt+0xbe2c>
   1d5b0:	cmp	r0, #0
   1d5b4:	ldreq	r1, [r6]
   1d5b8:	cmpeq	r1, #0
   1d5bc:	beq	1d568 <__mempcpy_chk@plt+0xbf88>
   1d5c0:	pop	{r4, r5, r6, sl, fp, pc}
   1d5c4:	mov	r0, #0
   1d5c8:	pop	{r4, r5, r6, sl, fp, pc}
   1d5cc:	push	{r4, r5, r6, r7, fp, lr}
   1d5d0:	add	fp, sp, #16
   1d5d4:	mov	r4, r2
   1d5d8:	mov	r6, r1
   1d5dc:	mov	r5, r0
   1d5e0:	ldr	r0, [r0, #124]	; 0x7c
   1d5e4:	ldr	r7, [r5, #128]	; 0x80
   1d5e8:	cmp	r0, r7
   1d5ec:	beq	1d634 <__mempcpy_chk@plt+0xc054>
   1d5f0:	mov	r0, #1
   1d5f4:	mov	r1, #24
   1d5f8:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1d5fc:	ldr	r1, [r5, #124]	; 0x7c
   1d600:	ldr	r2, [r5, #132]	; 0x84
   1d604:	str	r0, [r2, r1, lsl #2]
   1d608:	ldr	r0, [r5, #132]	; 0x84
   1d60c:	ldr	r0, [r0, r1, lsl #2]
   1d610:	cmp	r0, #0
   1d614:	strne	r6, [r0, #4]
   1d618:	addne	r1, r1, #1
   1d61c:	strne	r1, [r5, #124]	; 0x7c
   1d620:	strne	r4, [r0]
   1d624:	movne	r0, #0
   1d628:	popne	{r4, r5, r6, r7, fp, pc}
   1d62c:	mov	r0, #12
   1d630:	pop	{r4, r5, r6, r7, fp, pc}
   1d634:	ldr	r0, [r5, #132]	; 0x84
   1d638:	lsl	r1, r7, #3
   1d63c:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1d640:	cmp	r0, #0
   1d644:	beq	1d62c <__mempcpy_chk@plt+0xc04c>
   1d648:	lsl	r1, r7, #1
   1d64c:	str	r1, [r5, #128]	; 0x80
   1d650:	str	r0, [r5, #132]	; 0x84
   1d654:	b	1d5f0 <__mempcpy_chk@plt+0xc010>
   1d658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d65c:	add	fp, sp, #28
   1d660:	sub	sp, sp, #52	; 0x34
   1d664:	str	r1, [sp, #36]	; 0x24
   1d668:	mov	r4, r0
   1d66c:	ldr	r5, [r0, #4]
   1d670:	ldr	r6, [r0, #84]	; 0x54
   1d674:	str	r2, [fp, #-36]	; 0xffffffdc
   1d678:	mov	r1, r2
   1d67c:	bl	1dc34 <__mempcpy_chk@plt+0xc654>
   1d680:	cmn	r0, #1
   1d684:	beq	1d6b4 <__mempcpy_chk@plt+0xc0d4>
   1d688:	ldr	r1, [r4, #116]	; 0x74
   1d68c:	add	r0, r0, r0, lsl #1
   1d690:	add	r0, r1, r0, lsl #3
   1d694:	ldr	r2, [sp, #36]	; 0x24
   1d698:	ldr	r1, [r0]
   1d69c:	cmp	r1, r2
   1d6a0:	beq	1d9e0 <__mempcpy_chk@plt+0xc400>
   1d6a4:	ldrb	r1, [r0, #20]
   1d6a8:	add	r0, r0, #24
   1d6ac:	cmp	r1, #0
   1d6b0:	bne	1d698 <__mempcpy_chk@plt+0xc0b8>
   1d6b4:	ldr	r0, [r4, #124]	; 0x7c
   1d6b8:	cmp	r0, #1
   1d6bc:	blt	1d9e0 <__mempcpy_chk@plt+0xc400>
   1d6c0:	mov	ip, r6
   1d6c4:	ldr	r0, [r6]
   1d6c8:	ldr	r1, [sp, #36]	; 0x24
   1d6cc:	ldr	r2, [r0, r1, lsl #3]
   1d6d0:	mov	r6, #0
   1d6d4:	str	r4, [sp, #28]
   1d6d8:	mov	r3, r5
   1d6dc:	str	ip, [sp, #24]
   1d6e0:	str	r2, [sp, #20]
   1d6e4:	b	1d704 <__mempcpy_chk@plt+0xc124>
   1d6e8:	ldr	ip, [sp, #24]
   1d6ec:	ldr	r2, [sp, #20]
   1d6f0:	ldr	r6, [sp, #16]
   1d6f4:	add	r6, r6, #1
   1d6f8:	ldr	r0, [r4, #124]	; 0x7c
   1d6fc:	cmp	r6, r0
   1d700:	bge	1d9e0 <__mempcpy_chk@plt+0xc400>
   1d704:	ldr	r0, [r4, #132]	; 0x84
   1d708:	ldr	r7, [r0, r6, lsl #2]
   1d70c:	ldr	r0, [r7, #4]
   1d710:	ldr	r1, [ip]
   1d714:	ldr	r0, [r1, r0, lsl #3]
   1d718:	cmp	r0, r2
   1d71c:	str	r6, [sp, #16]
   1d720:	bne	1d6f0 <__mempcpy_chk@plt+0xc110>
   1d724:	ldr	r5, [r7]
   1d728:	ldr	r0, [r7, #16]
   1d72c:	cmp	r0, #1
   1d730:	str	r7, [sp, #32]
   1d734:	mov	sl, #0
   1d738:	blt	1d810 <__mempcpy_chk@plt+0xc230>
   1d73c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1d740:	mov	r9, r5
   1d744:	ldr	r0, [r7, #20]
   1d748:	ldr	r2, [r0, sl, lsl #2]
   1d74c:	ldr	r0, [r2, #4]
   1d750:	str	r0, [fp, #-32]	; 0xffffffe0
   1d754:	sub	r5, r0, r9
   1d758:	cmp	r5, #1
   1d75c:	blt	1d7a0 <__mempcpy_chk@plt+0xc1c0>
   1d760:	add	r1, r5, r6
   1d764:	ldr	r0, [r4, #28]
   1d768:	cmp	r1, r0
   1d76c:	str	r2, [sp, #40]	; 0x28
   1d770:	bgt	1d7e4 <__mempcpy_chk@plt+0xc204>
   1d774:	add	r0, r3, r6
   1d778:	add	r1, r3, r9
   1d77c:	mov	r8, r6
   1d780:	mov	r2, r5
   1d784:	mov	r7, r3
   1d788:	bl	114c0 <bcmp@plt>
   1d78c:	mov	r3, r7
   1d790:	cmp	r0, #0
   1d794:	ldr	r7, [sp, #32]
   1d798:	ldr	r2, [sp, #40]	; 0x28
   1d79c:	bne	1d818 <__mempcpy_chk@plt+0xc238>
   1d7a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d7a4:	str	r0, [sp]
   1d7a8:	mov	r0, r4
   1d7ac:	mov	r1, r7
   1d7b0:	ldr	r3, [sp, #36]	; 0x24
   1d7b4:	bl	1dd54 <__mempcpy_chk@plt+0xc774>
   1d7b8:	cmp	r0, #1
   1d7bc:	bhi	1d9f0 <__mempcpy_chk@plt+0xc410>
   1d7c0:	add	r6, r5, r6
   1d7c4:	add	sl, sl, #1
   1d7c8:	ldr	r3, [r4, #4]
   1d7cc:	ldr	r0, [r7, #16]
   1d7d0:	cmp	sl, r0
   1d7d4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1d7d8:	mov	r9, r5
   1d7dc:	blt	1d744 <__mempcpy_chk@plt+0xc164>
   1d7e0:	b	1d81c <__mempcpy_chk@plt+0xc23c>
   1d7e4:	ldr	r0, [r4, #48]	; 0x30
   1d7e8:	cmp	r1, r0
   1d7ec:	bgt	1d818 <__mempcpy_chk@plt+0xc238>
   1d7f0:	mov	r7, r6
   1d7f4:	mov	r0, r4
   1d7f8:	bl	1dcc0 <__mempcpy_chk@plt+0xc6e0>
   1d7fc:	cmp	r0, #0
   1d800:	bne	1d9f0 <__mempcpy_chk@plt+0xc410>
   1d804:	ldr	r3, [r4, #4]
   1d808:	mov	r6, r7
   1d80c:	b	1d774 <__mempcpy_chk@plt+0xc194>
   1d810:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1d814:	b	1d81c <__mempcpy_chk@plt+0xc23c>
   1d818:	mov	r5, r9
   1d81c:	ldr	r0, [r7, #16]
   1d820:	cmp	sl, r0
   1d824:	blt	1d6e8 <__mempcpy_chk@plt+0xc108>
   1d828:	cmp	sl, #0
   1d82c:	addne	r5, r5, #1
   1d830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d834:	cmp	r5, r0
   1d838:	bgt	1d6e8 <__mempcpy_chk@plt+0xc108>
   1d83c:	ldr	ip, [sp, #24]
   1d840:	ldr	r2, [sp, #20]
   1d844:	b	1d874 <__mempcpy_chk@plt+0xc294>
   1d848:	ldr	r7, [sp, #32]
   1d84c:	mov	r3, sl
   1d850:	mov	r6, r9
   1d854:	ldr	ip, [sp, #24]
   1d858:	ldr	r2, [sp, #20]
   1d85c:	add	r1, r5, #1
   1d860:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d864:	cmp	r5, r0
   1d868:	mov	r5, r1
   1d86c:	ldr	r4, [sp, #28]
   1d870:	bge	1d6f0 <__mempcpy_chk@plt+0xc110>
   1d874:	ldr	r0, [r7]
   1d878:	cmp	r5, r0
   1d87c:	ble	1d8a4 <__mempcpy_chk@plt+0xc2c4>
   1d880:	ldr	r0, [r4, #28]
   1d884:	cmp	r6, r0
   1d888:	bge	1d9a4 <__mempcpy_chk@plt+0xc3c4>
   1d88c:	ldrb	r0, [r3, r6]
   1d890:	add	r1, r3, r5
   1d894:	ldrb	r1, [r1, #-1]
   1d898:	cmp	r0, r1
   1d89c:	bne	1d6f0 <__mempcpy_chk@plt+0xc110>
   1d8a0:	add	r6, r6, #1
   1d8a4:	ldr	r0, [r4, #100]	; 0x64
   1d8a8:	ldr	r0, [r0, r5, lsl #2]
   1d8ac:	cmp	r0, #0
   1d8b0:	beq	1d85c <__mempcpy_chk@plt+0xc27c>
   1d8b4:	mov	r9, r6
   1d8b8:	mov	sl, r3
   1d8bc:	add	r1, r0, #4
   1d8c0:	mov	r0, ip
   1d8c4:	mov	r3, #9
   1d8c8:	bl	1ddec <__mempcpy_chk@plt+0xc80c>
   1d8cc:	cmn	r0, #1
   1d8d0:	beq	1d848 <__mempcpy_chk@plt+0xc268>
   1d8d4:	mov	r4, r0
   1d8d8:	ldr	r1, [sp, #32]
   1d8dc:	ldr	r0, [r1, #8]
   1d8e0:	cmp	r0, #0
   1d8e4:	bne	1d910 <__mempcpy_chk@plt+0xc330>
   1d8e8:	ldr	r0, [r1]
   1d8ec:	sub	r0, r5, r0
   1d8f0:	add	r1, r0, #1
   1d8f4:	mov	r8, #12
   1d8f8:	mov	r0, #12
   1d8fc:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1d900:	ldr	r1, [sp, #32]
   1d904:	str	r0, [r1, #8]
   1d908:	cmp	r0, #0
   1d90c:	beq	1d9e4 <__mempcpy_chk@plt+0xc404>
   1d910:	ldr	r3, [r1]
   1d914:	ldr	r2, [r1, #4]
   1d918:	ldr	r1, [r1, #8]
   1d91c:	stm	sp, {r4, r5}
   1d920:	mov	r0, #9
   1d924:	str	r0, [sp, #8]
   1d928:	ldr	r0, [sp, #28]
   1d92c:	bl	1de4c <__mempcpy_chk@plt+0xc86c>
   1d930:	ldr	r7, [sp, #32]
   1d934:	cmp	r0, #1
   1d938:	mov	r3, sl
   1d93c:	mov	r6, r9
   1d940:	ldr	ip, [sp, #24]
   1d944:	ldr	r2, [sp, #20]
   1d948:	beq	1d85c <__mempcpy_chk@plt+0xc27c>
   1d94c:	mov	r8, r0
   1d950:	cmp	r0, #0
   1d954:	bne	1d9e4 <__mempcpy_chk@plt+0xc404>
   1d958:	mov	r0, r7
   1d95c:	mov	r1, r4
   1d960:	mov	r2, r5
   1d964:	bl	1e230 <__mempcpy_chk@plt+0xcc50>
   1d968:	cmp	r0, #0
   1d96c:	beq	1d9f8 <__mempcpy_chk@plt+0xc418>
   1d970:	mov	r2, r0
   1d974:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d978:	str	r0, [sp]
   1d97c:	ldr	r4, [sp, #28]
   1d980:	mov	r0, r4
   1d984:	mov	r1, r7
   1d988:	ldr	r3, [sp, #36]	; 0x24
   1d98c:	bl	1dd54 <__mempcpy_chk@plt+0xc774>
   1d990:	cmp	r0, #1
   1d994:	bhi	1d9f0 <__mempcpy_chk@plt+0xc410>
   1d998:	ldr	r3, [r4, #4]
   1d99c:	ldr	r7, [sp, #32]
   1d9a0:	b	1d850 <__mempcpy_chk@plt+0xc270>
   1d9a4:	ldr	r0, [r4, #48]	; 0x30
   1d9a8:	cmp	r6, r0
   1d9ac:	bge	1d6f0 <__mempcpy_chk@plt+0xc110>
   1d9b0:	mov	r9, r6
   1d9b4:	add	r1, r6, #1
   1d9b8:	mov	r0, r4
   1d9bc:	bl	1d288 <__mempcpy_chk@plt+0xbca8>
   1d9c0:	cmp	r0, #0
   1d9c4:	bne	1d9f0 <__mempcpy_chk@plt+0xc410>
   1d9c8:	ldr	r3, [r4, #4]
   1d9cc:	ldr	r7, [sp, #32]
   1d9d0:	mov	r6, r9
   1d9d4:	ldr	ip, [sp, #24]
   1d9d8:	ldr	r2, [sp, #20]
   1d9dc:	b	1d88c <__mempcpy_chk@plt+0xc2ac>
   1d9e0:	mov	r8, #0
   1d9e4:	mov	r0, r8
   1d9e8:	sub	sp, fp, #28
   1d9ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9f0:	mov	r8, r0
   1d9f4:	b	1d9e4 <__mempcpy_chk@plt+0xc404>
   1d9f8:	mov	r8, #12
   1d9fc:	b	1d9e4 <__mempcpy_chk@plt+0xc404>
   1da00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da04:	add	fp, sp, #28
   1da08:	sub	sp, sp, #4
   1da0c:	mov	sl, r2
   1da10:	mov	r8, r0
   1da14:	cmp	r1, #0
   1da18:	beq	1db4c <__mempcpy_chk@plt+0xc56c>
   1da1c:	mov	r6, r1
   1da20:	ldr	r0, [r1, #4]
   1da24:	cmp	sl, #0
   1da28:	beq	1db38 <__mempcpy_chk@plt+0xc558>
   1da2c:	cmp	r0, #1
   1da30:	blt	1db38 <__mempcpy_chk@plt+0xc558>
   1da34:	ldr	r1, [sl, #4]
   1da38:	cmp	r1, #1
   1da3c:	blt	1db38 <__mempcpy_chk@plt+0xc558>
   1da40:	add	r0, r1, r0
   1da44:	str	r0, [r8]
   1da48:	lsl	r0, r0, #2
   1da4c:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   1da50:	str	r0, [r8, #8]
   1da54:	cmp	r0, #0
   1da58:	beq	1dc28 <__mempcpy_chk@plt+0xc648>
   1da5c:	ldr	r2, [sl, #4]
   1da60:	mov	r4, #0
   1da64:	cmp	r2, #0
   1da68:	mov	r0, #0
   1da6c:	movwgt	r0, #1
   1da70:	ldr	r3, [r6, #4]
   1da74:	cmp	r3, #1
   1da78:	blt	1db8c <__mempcpy_chk@plt+0xc5ac>
   1da7c:	mov	r9, #0
   1da80:	cmp	r2, #1
   1da84:	blt	1db9c <__mempcpy_chk@plt+0xc5bc>
   1da88:	mov	ip, #0
   1da8c:	mov	r0, #0
   1da90:	mov	r4, ip
   1da94:	mov	r7, r0
   1da98:	ldr	r0, [sl, #8]
   1da9c:	ldr	r1, [r0, r4, lsl #2]
   1daa0:	ldr	r0, [r6, #8]
   1daa4:	ldr	r5, [r0, r9, lsl #2]
   1daa8:	cmp	r5, r1
   1daac:	ble	1daec <__mempcpy_chk@plt+0xc50c>
   1dab0:	ldr	r0, [r8, #8]
   1dab4:	str	r1, [r0, r7, lsl #2]
   1dab8:	ldr	r2, [sl, #4]
   1dabc:	add	r1, r4, #1
   1dac0:	cmp	r2, r1
   1dac4:	mov	r0, #0
   1dac8:	movwgt	r0, #1
   1dacc:	ldr	r3, [r6, #4]
   1dad0:	cmp	r3, r9
   1dad4:	ble	1dbc8 <__mempcpy_chk@plt+0xc5e8>
   1dad8:	add	r7, r7, #1
   1dadc:	cmp	r2, r1
   1dae0:	mov	r4, r1
   1dae4:	bgt	1da98 <__mempcpy_chk@plt+0xc4b8>
   1dae8:	b	1dba0 <__mempcpy_chk@plt+0xc5c0>
   1daec:	ldr	r0, [r8, #8]
   1daf0:	str	r5, [r0, r7, lsl #2]
   1daf4:	add	lr, r4, #1
   1daf8:	cmp	r5, r1
   1dafc:	mov	ip, r4
   1db00:	moveq	ip, lr
   1db04:	ldr	r2, [sl, #4]
   1db08:	cmp	r2, ip
   1db0c:	mov	r0, #0
   1db10:	movwgt	r0, #1
   1db14:	add	r9, r9, #1
   1db18:	ldr	r3, [r6, #4]
   1db1c:	cmp	r3, r9
   1db20:	ble	1dc10 <__mempcpy_chk@plt+0xc630>
   1db24:	add	r0, r7, #1
   1db28:	cmp	r2, ip
   1db2c:	bgt	1da90 <__mempcpy_chk@plt+0xc4b0>
   1db30:	add	r7, r7, #1
   1db34:	b	1dba0 <__mempcpy_chk@plt+0xc5c0>
   1db38:	cmp	r0, #1
   1db3c:	blt	1db4c <__mempcpy_chk@plt+0xc56c>
   1db40:	mov	r0, r8
   1db44:	mov	r1, r6
   1db48:	b	1db68 <__mempcpy_chk@plt+0xc588>
   1db4c:	cmp	sl, #0
   1db50:	beq	1db74 <__mempcpy_chk@plt+0xc594>
   1db54:	ldr	r0, [sl, #4]
   1db58:	cmp	r0, #1
   1db5c:	blt	1db74 <__mempcpy_chk@plt+0xc594>
   1db60:	mov	r0, r8
   1db64:	mov	r1, sl
   1db68:	sub	sp, fp, #28
   1db6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db70:	b	1b53c <__mempcpy_chk@plt+0x9f5c>
   1db74:	mov	r0, #0
   1db78:	str	r0, [r8]
   1db7c:	str	r0, [r8, #4]
   1db80:	str	r0, [r8, #8]
   1db84:	sub	sp, fp, #28
   1db88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db8c:	mov	r6, #0
   1db90:	cmp	r0, #0
   1db94:	bne	1dbd8 <__mempcpy_chk@plt+0xc5f8>
   1db98:	b	1dc00 <__mempcpy_chk@plt+0xc620>
   1db9c:	mov	r7, #0
   1dba0:	ldr	r0, [r8, #8]
   1dba4:	add	r0, r0, r7, lsl #2
   1dba8:	ldr	r1, [r6, #8]
   1dbac:	add	r1, r1, r9, lsl #2
   1dbb0:	sub	r2, r3, r9
   1dbb4:	lsl	r2, r2, #2
   1dbb8:	bl	1134c <memcpy@plt>
   1dbbc:	sub	r0, r7, r9
   1dbc0:	ldr	r1, [r6, #4]
   1dbc4:	b	1dbfc <__mempcpy_chk@plt+0xc61c>
   1dbc8:	add	r6, r7, #1
   1dbcc:	add	r4, r4, #1
   1dbd0:	cmp	r0, #0
   1dbd4:	beq	1dc00 <__mempcpy_chk@plt+0xc620>
   1dbd8:	ldr	r0, [r8, #8]
   1dbdc:	add	r0, r0, r6, lsl #2
   1dbe0:	ldr	r1, [sl, #8]
   1dbe4:	add	r1, r1, r4, lsl #2
   1dbe8:	sub	r2, r2, r4
   1dbec:	lsl	r2, r2, #2
   1dbf0:	bl	1134c <memcpy@plt>
   1dbf4:	sub	r0, r6, r4
   1dbf8:	ldr	r1, [sl, #4]
   1dbfc:	add	r6, r0, r1
   1dc00:	str	r6, [r8, #4]
   1dc04:	mov	r0, #0
   1dc08:	sub	sp, fp, #28
   1dc0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc10:	cmp	r5, r1
   1dc14:	moveq	r4, lr
   1dc18:	add	r6, r7, #1
   1dc1c:	cmp	r0, #0
   1dc20:	bne	1dbd8 <__mempcpy_chk@plt+0xc5f8>
   1dc24:	b	1dc00 <__mempcpy_chk@plt+0xc620>
   1dc28:	mov	r0, #12
   1dc2c:	sub	sp, fp, #28
   1dc30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc34:	push	{r4, r5, r6, r7, fp, lr}
   1dc38:	add	fp, sp, #16
   1dc3c:	mov	ip, r0
   1dc40:	ldr	lr, [r0, #108]	; 0x6c
   1dc44:	cmp	lr, #1
   1dc48:	blt	1dcac <__mempcpy_chk@plt+0xc6cc>
   1dc4c:	ldr	r2, [ip, #116]	; 0x74
   1dc50:	mov	r0, #0
   1dc54:	mov	r3, #1
   1dc58:	mov	r4, lr
   1dc5c:	add	r5, r0, r4
   1dc60:	add	r5, r5, r5, lsr #31
   1dc64:	asr	r6, r5, #1
   1dc68:	add	r7, r6, r6, lsl #1
   1dc6c:	add	r7, r2, r7, lsl #3
   1dc70:	ldr	r7, [r7, #4]
   1dc74:	cmp	r7, r1
   1dc78:	addlt	r0, r3, r5, asr #1
   1dc7c:	movge	r4, r6
   1dc80:	cmp	r0, r4
   1dc84:	blt	1dc5c <__mempcpy_chk@plt+0xc67c>
   1dc88:	cmp	r0, lr
   1dc8c:	bge	1dcb8 <__mempcpy_chk@plt+0xc6d8>
   1dc90:	ldr	r2, [ip, #116]	; 0x74
   1dc94:	add	r3, r0, r0, lsl #1
   1dc98:	add	r2, r2, r3, lsl #3
   1dc9c:	ldr	r2, [r2, #4]
   1dca0:	cmp	r2, r1
   1dca4:	mvnne	r0, #0
   1dca8:	pop	{r4, r5, r6, r7, fp, pc}
   1dcac:	mov	r0, #0
   1dcb0:	cmp	r0, lr
   1dcb4:	blt	1dc90 <__mempcpy_chk@plt+0xc6b0>
   1dcb8:	mvn	r0, #0
   1dcbc:	pop	{r4, r5, r6, r7, fp, pc}
   1dcc0:	push	{r4, r5, r6, r7, fp, lr}
   1dcc4:	add	fp, sp, #16
   1dcc8:	mov	r4, r1
   1dccc:	mov	r5, r0
   1dcd0:	ldr	r0, [r0, #36]	; 0x24
   1dcd4:	ldr	r7, [r5, #104]	; 0x68
   1dcd8:	cmp	r0, r1
   1dcdc:	bgt	1dcec <__mempcpy_chk@plt+0xc70c>
   1dce0:	ldr	r1, [r5, #48]	; 0x30
   1dce4:	cmp	r0, r1
   1dce8:	blt	1dd04 <__mempcpy_chk@plt+0xc724>
   1dcec:	ldr	r0, [r5, #28]
   1dcf0:	cmp	r0, r4
   1dcf4:	bgt	1dd1c <__mempcpy_chk@plt+0xc73c>
   1dcf8:	ldr	r1, [r5, #48]	; 0x30
   1dcfc:	cmp	r0, r1
   1dd00:	bge	1dd1c <__mempcpy_chk@plt+0xc73c>
   1dd04:	add	r1, r4, #1
   1dd08:	mov	r0, r5
   1dd0c:	bl	1d288 <__mempcpy_chk@plt+0xbca8>
   1dd10:	mov	r6, r0
   1dd14:	cmp	r0, #0
   1dd18:	bne	1dd4c <__mempcpy_chk@plt+0xc76c>
   1dd1c:	mov	r6, #0
   1dd20:	cmp	r7, r4
   1dd24:	bge	1dd4c <__mempcpy_chk@plt+0xc76c>
   1dd28:	sub	r0, r4, r7
   1dd2c:	lsl	r2, r0, #2
   1dd30:	ldr	r0, [r5, #100]	; 0x64
   1dd34:	add	r0, r0, r7, lsl #2
   1dd38:	add	r0, r0, #4
   1dd3c:	mov	r6, #0
   1dd40:	mov	r1, #0
   1dd44:	bl	114fc <memset@plt>
   1dd48:	str	r4, [r5, #104]	; 0x68
   1dd4c:	mov	r0, r6
   1dd50:	pop	{r4, r5, r6, r7, fp, pc}
   1dd54:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dd58:	add	fp, sp, #24
   1dd5c:	sub	sp, sp, #16
   1dd60:	mov	r7, r3
   1dd64:	mov	r6, r2
   1dd68:	mov	r8, r1
   1dd6c:	mov	r4, r0
   1dd70:	ldr	r2, [r2]
   1dd74:	ldr	r3, [r6, #4]
   1dd78:	mov	r0, #8
   1dd7c:	str	r0, [sp, #8]
   1dd80:	ldr	r5, [fp, #8]
   1dd84:	str	r5, [sp, #4]
   1dd88:	str	r7, [sp]
   1dd8c:	add	r1, r6, #8
   1dd90:	mov	r0, r4
   1dd94:	bl	1de4c <__mempcpy_chk@plt+0xc86c>
   1dd98:	cmp	r0, #0
   1dd9c:	beq	1dda8 <__mempcpy_chk@plt+0xc7c8>
   1dda0:	sub	sp, fp, #24
   1dda4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dda8:	ldr	r3, [r8]
   1ddac:	ldr	r0, [r6, #4]
   1ddb0:	str	r0, [sp]
   1ddb4:	mov	r0, r4
   1ddb8:	mov	r1, r7
   1ddbc:	mov	r2, r5
   1ddc0:	bl	1e2b4 <__mempcpy_chk@plt+0xccd4>
   1ddc4:	cmp	r0, #0
   1ddc8:	bne	1dda0 <__mempcpy_chk@plt+0xc7c0>
   1ddcc:	ldr	r0, [r6, #4]
   1ddd0:	add	r0, r0, r5
   1ddd4:	ldr	r1, [r8]
   1ddd8:	sub	r1, r0, r1
   1dddc:	mov	r0, r4
   1dde0:	sub	sp, fp, #24
   1dde4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dde8:	b	1dcc0 <__mempcpy_chk@plt+0xc6e0>
   1ddec:	push	{r4, r5, fp, lr}
   1ddf0:	add	fp, sp, #8
   1ddf4:	ldr	r4, [r1, #4]
   1ddf8:	cmp	r4, #1
   1ddfc:	blt	1de44 <__mempcpy_chk@plt+0xc864>
   1de00:	ldr	ip, [r0]
   1de04:	ldr	lr, [r1, #8]
   1de08:	mov	r4, #0
   1de0c:	b	1de20 <__mempcpy_chk@plt+0xc840>
   1de10:	add	r4, r4, #1
   1de14:	ldr	r0, [r1, #4]
   1de18:	cmp	r4, r0
   1de1c:	bge	1de44 <__mempcpy_chk@plt+0xc864>
   1de20:	ldr	r0, [lr, r4, lsl #2]
   1de24:	add	r5, ip, r0, lsl #3
   1de28:	ldrb	r5, [r5, #4]
   1de2c:	cmp	r5, r3
   1de30:	bne	1de10 <__mempcpy_chk@plt+0xc830>
   1de34:	ldr	r5, [ip, r0, lsl #3]
   1de38:	cmp	r5, r2
   1de3c:	bne	1de10 <__mempcpy_chk@plt+0xc830>
   1de40:	pop	{r4, r5, fp, pc}
   1de44:	mvn	r0, #0
   1de48:	pop	{r4, r5, fp, pc}
   1de4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de50:	add	fp, sp, #28
   1de54:	sub	sp, sp, #52	; 0x34
   1de58:	mov	r7, r3
   1de5c:	mov	r8, r2
   1de60:	mov	r6, r1
   1de64:	mov	r4, r0
   1de68:	ldr	r1, [r0, #84]	; 0x54
   1de6c:	mov	r0, #0
   1de70:	str	r0, [fp, #-32]	; 0xffffffe0
   1de74:	str	r1, [sp, #28]
   1de78:	ldr	r0, [r1]
   1de7c:	ldr	r0, [r0, r2, lsl #3]
   1de80:	str	r0, [sp, #20]
   1de84:	ldr	r0, [r4, #120]	; 0x78
   1de88:	ldr	sl, [fp, #12]
   1de8c:	add	r0, r0, sl
   1de90:	ldr	r5, [r6, #4]
   1de94:	cmp	r5, r0
   1de98:	ble	1e1c4 <__mempcpy_chk@plt+0xcbe4>
   1de9c:	ldr	r0, [r4, #40]	; 0x28
   1dea0:	str	r0, [sp, #16]
   1dea4:	ldr	r2, [r4, #88]	; 0x58
   1dea8:	ldr	r0, [r4, #100]	; 0x64
   1deac:	str	r0, [sp, #12]
   1deb0:	ldr	r9, [r6]
   1deb4:	ldr	r0, [r6, #8]
   1deb8:	str	r0, [r4, #100]	; 0x64
   1debc:	cmp	r9, #0
   1dec0:	moveq	r9, r7
   1dec4:	str	r9, [r4, #40]	; 0x28
   1dec8:	sub	r1, r9, #1
   1decc:	mov	r0, r4
   1ded0:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1ded4:	cmp	r9, r7
   1ded8:	mov	r5, r4
   1dedc:	bne	1df20 <__mempcpy_chk@plt+0xc940>
   1dee0:	mov	r7, r0
   1dee4:	add	r0, sp, #32
   1dee8:	mov	r1, r8
   1deec:	bl	1ac4c <__mempcpy_chk@plt+0x966c>
   1def0:	str	r0, [fp, #-32]	; 0xffffffe0
   1def4:	cmp	r0, #0
   1def8:	bne	1e228 <__mempcpy_chk@plt+0xcc48>
   1defc:	add	r1, sp, #32
   1df00:	ldr	r0, [sp, #28]
   1df04:	ldr	r2, [sp, #20]
   1df08:	ldr	r3, [fp, #16]
   1df0c:	bl	1e3b0 <__mempcpy_chk@plt+0xcdd0>
   1df10:	str	r0, [fp, #-32]	; 0xffffffe0
   1df14:	cmp	r0, #0
   1df18:	beq	1df94 <__mempcpy_chk@plt+0xc9b4>
   1df1c:	b	1e150 <__mempcpy_chk@plt+0xcb70>
   1df20:	ldr	r1, [r5, #100]	; 0x64
   1df24:	ldr	r8, [r1, r9, lsl #2]
   1df28:	cmp	r8, #0
   1df2c:	beq	1df54 <__mempcpy_chk@plt+0xc974>
   1df30:	ldrb	r1, [r8, #52]	; 0x34
   1df34:	mov	r7, r0
   1df38:	tst	r1, #64	; 0x40
   1df3c:	bne	1df70 <__mempcpy_chk@plt+0xc990>
   1df40:	mov	r0, #0
   1df44:	str	r0, [sp, #36]	; 0x24
   1df48:	str	r0, [sp, #32]
   1df4c:	str	r0, [sp, #40]	; 0x28
   1df50:	b	1df88 <__mempcpy_chk@plt+0xc9a8>
   1df54:	mov	r8, #0
   1df58:	str	r8, [sp, #36]	; 0x24
   1df5c:	str	r8, [sp, #32]
   1df60:	str	r8, [sp, #40]	; 0x28
   1df64:	cmp	r9, sl
   1df68:	blt	1e004 <__mempcpy_chk@plt+0xca24>
   1df6c:	b	1e16c <__mempcpy_chk@plt+0xcb8c>
   1df70:	add	r1, r8, #4
   1df74:	add	r0, sp, #32
   1df78:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   1df7c:	str	r0, [fp, #-32]	; 0xffffffe0
   1df80:	cmp	r0, #0
   1df84:	bne	1e228 <__mempcpy_chk@plt+0xcc48>
   1df88:	ldrb	r0, [r8, #52]	; 0x34
   1df8c:	tst	r0, #64	; 0x40
   1df90:	beq	1dffc <__mempcpy_chk@plt+0xca1c>
   1df94:	ldr	r0, [sp, #36]	; 0x24
   1df98:	cmp	r0, #0
   1df9c:	beq	1dfc8 <__mempcpy_chk@plt+0xc9e8>
   1dfa0:	ldr	r0, [fp, #16]
   1dfa4:	str	r0, [sp]
   1dfa8:	add	r1, sp, #32
   1dfac:	mov	r0, r5
   1dfb0:	mov	r2, r9
   1dfb4:	ldr	r3, [sp, #20]
   1dfb8:	bl	1e4a8 <__mempcpy_chk@plt+0xcec8>
   1dfbc:	str	r0, [fp, #-32]	; 0xffffffe0
   1dfc0:	cmp	r0, #0
   1dfc4:	bne	1e150 <__mempcpy_chk@plt+0xcb70>
   1dfc8:	sub	r0, fp, #32
   1dfcc:	add	r2, sp, #32
   1dfd0:	ldr	r1, [sp, #28]
   1dfd4:	mov	r3, r7
   1dfd8:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1dfdc:	mov	r8, r0
   1dfe0:	cmp	r0, #0
   1dfe4:	bne	1dff4 <__mempcpy_chk@plt+0xca14>
   1dfe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dfec:	cmp	r0, #0
   1dff0:	bne	1e150 <__mempcpy_chk@plt+0xcb70>
   1dff4:	ldr	r0, [r5, #100]	; 0x64
   1dff8:	str	r8, [r0, r9, lsl #2]
   1dffc:	cmp	r9, sl
   1e000:	bge	1e16c <__mempcpy_chk@plt+0xcb8c>
   1e004:	str	r6, [sp, #8]
   1e008:	rsb	r0, sl, #0
   1e00c:	str	r0, [sp, #24]
   1e010:	add	r7, r9, #1
   1e014:	add	r6, sp, #32
   1e018:	mov	sl, #0
   1e01c:	ldr	r4, [sp, #20]
   1e020:	b	1e050 <__mempcpy_chk@plt+0xca70>
   1e024:	ldr	r0, [r5, #100]	; 0x64
   1e028:	str	r8, [r0, r7, lsl #2]
   1e02c:	cmp	r8, #0
   1e030:	mov	r0, #0
   1e034:	addeq	r0, sl, #1
   1e038:	add	r7, r7, #1
   1e03c:	ldr	r1, [sp, #24]
   1e040:	add	r1, r1, r7
   1e044:	cmp	r1, #1
   1e048:	mov	sl, r0
   1e04c:	beq	1e160 <__mempcpy_chk@plt+0xcb80>
   1e050:	sub	r9, r7, #1
   1e054:	ldr	r0, [r5, #120]	; 0x78
   1e058:	cmp	sl, r0
   1e05c:	bgt	1e164 <__mempcpy_chk@plt+0xcb84>
   1e060:	mov	r0, #0
   1e064:	str	r0, [sp, #36]	; 0x24
   1e068:	ldr	r0, [r5, #100]	; 0x64
   1e06c:	ldr	r0, [r0, r7, lsl #2]
   1e070:	cmp	r0, #0
   1e074:	beq	1e090 <__mempcpy_chk@plt+0xcab0>
   1e078:	add	r1, r0, #4
   1e07c:	mov	r0, r6
   1e080:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   1e084:	str	r0, [fp, #-32]	; 0xffffffe0
   1e088:	cmp	r0, #0
   1e08c:	bne	1e150 <__mempcpy_chk@plt+0xcb70>
   1e090:	cmp	r8, #0
   1e094:	beq	1e0b8 <__mempcpy_chk@plt+0xcad8>
   1e098:	add	r2, r8, #16
   1e09c:	mov	r0, r5
   1e0a0:	mov	r1, r9
   1e0a4:	mov	r3, r6
   1e0a8:	bl	1e740 <__mempcpy_chk@plt+0xd160>
   1e0ac:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0b0:	cmp	r0, #0
   1e0b4:	bne	1e150 <__mempcpy_chk@plt+0xcb70>
   1e0b8:	ldr	r0, [sp, #36]	; 0x24
   1e0bc:	cmp	r0, #0
   1e0c0:	beq	1e114 <__mempcpy_chk@plt+0xcb34>
   1e0c4:	mov	r8, r5
   1e0c8:	ldr	r0, [sp, #28]
   1e0cc:	mov	r1, r6
   1e0d0:	mov	r2, r4
   1e0d4:	ldr	r5, [fp, #16]
   1e0d8:	mov	r3, r5
   1e0dc:	bl	1e3b0 <__mempcpy_chk@plt+0xcdd0>
   1e0e0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0e4:	cmp	r0, #0
   1e0e8:	bne	1e150 <__mempcpy_chk@plt+0xcb70>
   1e0ec:	str	r5, [sp]
   1e0f0:	mov	r5, r8
   1e0f4:	mov	r0, r8
   1e0f8:	mov	r1, r6
   1e0fc:	mov	r2, r7
   1e100:	mov	r3, r4
   1e104:	bl	1e4a8 <__mempcpy_chk@plt+0xcec8>
   1e108:	str	r0, [fp, #-32]	; 0xffffffe0
   1e10c:	cmp	r0, #0
   1e110:	bne	1e150 <__mempcpy_chk@plt+0xcb70>
   1e114:	ldr	r2, [r5, #88]	; 0x58
   1e118:	mov	r0, r5
   1e11c:	mov	r1, r9
   1e120:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1e124:	mov	r3, r0
   1e128:	sub	r0, fp, #32
   1e12c:	ldr	r1, [sp, #28]
   1e130:	mov	r2, r6
   1e134:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1e138:	mov	r8, r0
   1e13c:	cmp	r0, #0
   1e140:	bne	1e024 <__mempcpy_chk@plt+0xca44>
   1e144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e148:	cmp	r0, #0
   1e14c:	beq	1e024 <__mempcpy_chk@plt+0xca44>
   1e150:	ldr	r0, [sp, #40]	; 0x28
   1e154:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e158:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1e15c:	b	1e1b8 <__mempcpy_chk@plt+0xcbd8>
   1e160:	sub	r9, r7, #1
   1e164:	ldr	r6, [sp, #8]
   1e168:	ldr	sl, [fp, #12]
   1e16c:	ldr	r0, [sp, #40]	; 0x28
   1e170:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e174:	ldr	r0, [r5, #100]	; 0x64
   1e178:	ldr	r0, [r0, sl, lsl #2]
   1e17c:	str	r9, [r6]
   1e180:	ldr	r1, [sp, #16]
   1e184:	str	r1, [r5, #40]	; 0x28
   1e188:	ldr	r1, [sp, #12]
   1e18c:	str	r1, [r5, #100]	; 0x64
   1e190:	cmp	r0, #0
   1e194:	beq	1e1b4 <__mempcpy_chk@plt+0xcbd4>
   1e198:	ldr	r1, [fp, #8]
   1e19c:	add	r0, r0, #4
   1e1a0:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   1e1a4:	mov	r4, #0
   1e1a8:	cmp	r0, #0
   1e1ac:	moveq	r4, #1
   1e1b0:	b	1e1b8 <__mempcpy_chk@plt+0xcbd8>
   1e1b4:	mov	r4, #1
   1e1b8:	mov	r0, r4
   1e1bc:	sub	sp, fp, #28
   1e1c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1c4:	str	r4, [sp, #24]
   1e1c8:	mvn	r1, #-2147483648	; 0x80000000
   1e1cc:	sub	r1, r1, r5
   1e1d0:	mov	r4, #12
   1e1d4:	cmp	r1, r0
   1e1d8:	ble	1e1b8 <__mempcpy_chk@plt+0xcbd8>
   1e1dc:	add	r0, r0, #1
   1e1e0:	add	sl, r0, r5
   1e1e4:	cmn	sl, #-1073741823	; 0xc0000001
   1e1e8:	bhi	1e1b8 <__mempcpy_chk@plt+0xcbd8>
   1e1ec:	mov	r9, r0
   1e1f0:	ldr	r0, [r6, #8]
   1e1f4:	lsl	r1, sl, #2
   1e1f8:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1e1fc:	cmp	r0, #0
   1e200:	beq	1e1b8 <__mempcpy_chk@plt+0xcbd8>
   1e204:	str	sl, [r6, #4]
   1e208:	str	r0, [r6, #8]
   1e20c:	add	r0, r0, r5, lsl #2
   1e210:	lsl	r2, r9, #2
   1e214:	mov	r1, #0
   1e218:	bl	114fc <memset@plt>
   1e21c:	ldr	sl, [fp, #12]
   1e220:	ldr	r4, [sp, #24]
   1e224:	b	1de9c <__mempcpy_chk@plt+0xc8bc>
   1e228:	mov	r4, r0
   1e22c:	b	1e1b8 <__mempcpy_chk@plt+0xcbd8>
   1e230:	push	{r4, r5, r6, r7, fp, lr}
   1e234:	add	fp, sp, #16
   1e238:	mov	r5, r2
   1e23c:	mov	r6, r1
   1e240:	mov	r4, r0
   1e244:	ldr	r0, [r0, #12]
   1e248:	ldr	r1, [r4, #16]
   1e24c:	cmp	r1, r0
   1e250:	beq	1e284 <__mempcpy_chk@plt+0xcca4>
   1e254:	mov	r0, #1
   1e258:	mov	r1, #20
   1e25c:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1e260:	cmp	r0, #0
   1e264:	ldrne	r1, [r4, #16]
   1e268:	ldrne	r2, [r4, #20]
   1e26c:	strne	r0, [r2, r1, lsl #2]
   1e270:	strne	r6, [r0]
   1e274:	strne	r5, [r0, #4]
   1e278:	addne	r1, r1, #1
   1e27c:	strne	r1, [r4, #16]
   1e280:	pop	{r4, r5, r6, r7, fp, pc}
   1e284:	mov	r1, #1
   1e288:	orr	r7, r1, r0, lsl #1
   1e28c:	lsl	r1, r7, #2
   1e290:	ldr	r0, [r4, #20]
   1e294:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1e298:	cmp	r0, #0
   1e29c:	beq	1e2ac <__mempcpy_chk@plt+0xcccc>
   1e2a0:	str	r7, [r4, #12]
   1e2a4:	str	r0, [r4, #20]
   1e2a8:	b	1e254 <__mempcpy_chk@plt+0xcc74>
   1e2ac:	mov	r0, #0
   1e2b0:	pop	{r4, r5, r6, r7, fp, pc}
   1e2b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e2b8:	add	fp, sp, #24
   1e2bc:	mov	r5, r3
   1e2c0:	mov	r9, r2
   1e2c4:	mov	r8, r1
   1e2c8:	mov	r4, r0
   1e2cc:	ldr	r1, [r0, #108]	; 0x6c
   1e2d0:	ldr	r2, [r0, #112]	; 0x70
   1e2d4:	cmp	r1, r2
   1e2d8:	blt	1e328 <__mempcpy_chk@plt+0xcd48>
   1e2dc:	ldr	r0, [r4, #116]	; 0x74
   1e2e0:	add	r1, r2, r2, lsl #1
   1e2e4:	lsl	r1, r1, #4
   1e2e8:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   1e2ec:	cmp	r0, #0
   1e2f0:	beq	1e3a0 <__mempcpy_chk@plt+0xcdc0>
   1e2f4:	str	r0, [r4, #116]	; 0x74
   1e2f8:	ldr	r1, [r4, #108]	; 0x6c
   1e2fc:	ldr	r2, [r4, #112]	; 0x70
   1e300:	add	r1, r1, r1, lsl #1
   1e304:	add	r0, r0, r1, lsl #3
   1e308:	add	r1, r2, r2, lsl #1
   1e30c:	lsl	r2, r1, #3
   1e310:	mov	r1, #0
   1e314:	bl	114fc <memset@plt>
   1e318:	ldr	r1, [r4, #108]	; 0x6c
   1e31c:	ldr	r0, [r4, #112]	; 0x70
   1e320:	lsl	r0, r0, #1
   1e324:	str	r0, [r4, #112]	; 0x70
   1e328:	ldr	r2, [fp, #8]
   1e32c:	cmp	r1, #1
   1e330:	blt	1e354 <__mempcpy_chk@plt+0xcd74>
   1e334:	ldr	r0, [r4, #116]	; 0x74
   1e338:	sub	r3, r1, #1
   1e33c:	add	r3, r3, r3, lsl #1
   1e340:	add	r0, r0, r3, lsl #3
   1e344:	ldr	r3, [r0, #4]
   1e348:	cmp	r3, r9
   1e34c:	moveq	r3, #1
   1e350:	strbeq	r3, [r0, #20]
   1e354:	mov	r0, #0
   1e358:	cmp	r2, r5
   1e35c:	mov	r3, #0
   1e360:	mvneq	r3, #0
   1e364:	ldr	r7, [r4, #116]	; 0x74
   1e368:	add	r6, r1, r1, lsl #1
   1e36c:	str	r8, [r7, r6, lsl #3]!
   1e370:	str	r9, [r7, #4]
   1e374:	str	r5, [r7, #8]
   1e378:	str	r2, [r7, #12]
   1e37c:	str	r3, [r7, #16]
   1e380:	add	r1, r1, #1
   1e384:	str	r1, [r4, #108]	; 0x6c
   1e388:	strb	r0, [r7, #20]
   1e38c:	sub	r1, r2, r5
   1e390:	ldr	r2, [r4, #120]	; 0x78
   1e394:	cmp	r2, r1
   1e398:	strlt	r1, [r4, #120]	; 0x78
   1e39c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e3a0:	ldr	r0, [r4, #116]	; 0x74
   1e3a4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e3a8:	mov	r0, #12
   1e3ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e3b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3b4:	add	fp, sp, #28
   1e3b8:	sub	sp, sp, #20
   1e3bc:	mov	r9, r3
   1e3c0:	mov	sl, r2
   1e3c4:	mov	r4, r1
   1e3c8:	mov	r7, r0
   1e3cc:	ldr	r1, [r1, #4]
   1e3d0:	add	r0, sp, #8
   1e3d4:	bl	1aeac <__mempcpy_chk@plt+0x98cc>
   1e3d8:	cmp	r0, #0
   1e3dc:	bne	1e4a0 <__mempcpy_chk@plt+0xcec0>
   1e3e0:	ldr	r0, [r4, #4]
   1e3e4:	cmp	r0, #1
   1e3e8:	blt	1e468 <__mempcpy_chk@plt+0xce88>
   1e3ec:	mov	r8, #0
   1e3f0:	ldr	r0, [r4, #8]
   1e3f4:	ldr	r5, [r0, r8, lsl #2]
   1e3f8:	add	r0, r5, r5, lsl #1
   1e3fc:	ldr	r1, [r7, #24]
   1e400:	add	r6, r1, r0, lsl #2
   1e404:	mov	r0, r7
   1e408:	mov	r1, r6
   1e40c:	mov	r2, sl
   1e410:	mov	r3, r9
   1e414:	bl	1ddec <__mempcpy_chk@plt+0xc80c>
   1e418:	cmn	r0, #1
   1e41c:	beq	1e444 <__mempcpy_chk@plt+0xce64>
   1e420:	str	r9, [sp]
   1e424:	mov	r0, r7
   1e428:	add	r1, sp, #8
   1e42c:	mov	r2, r5
   1e430:	mov	r3, sl
   1e434:	bl	1e8f8 <__mempcpy_chk@plt+0xd318>
   1e438:	cmp	r0, #0
   1e43c:	beq	1e458 <__mempcpy_chk@plt+0xce78>
   1e440:	b	1e490 <__mempcpy_chk@plt+0xceb0>
   1e444:	add	r0, sp, #8
   1e448:	mov	r1, r6
   1e44c:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   1e450:	cmp	r0, #0
   1e454:	bne	1e490 <__mempcpy_chk@plt+0xceb0>
   1e458:	ldr	r0, [r4, #4]
   1e45c:	add	r8, r8, #1
   1e460:	cmp	r8, r0
   1e464:	blt	1e3f0 <__mempcpy_chk@plt+0xce10>
   1e468:	ldr	r0, [r4, #8]
   1e46c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e470:	vldr	d16, [sp, #8]
   1e474:	ldr	r0, [sp, #16]
   1e478:	str	r0, [r4, #8]
   1e47c:	vstr	d16, [r4]
   1e480:	mov	r5, #0
   1e484:	mov	r0, r5
   1e488:	sub	sp, fp, #28
   1e48c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e490:	mov	r5, r0
   1e494:	ldr	r0, [sp, #16]
   1e498:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e49c:	b	1e484 <__mempcpy_chk@plt+0xcea4>
   1e4a0:	mov	r5, r0
   1e4a4:	b	1e484 <__mempcpy_chk@plt+0xcea4>
   1e4a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e4ac:	add	fp, sp, #28
   1e4b0:	sub	sp, sp, #44	; 0x2c
   1e4b4:	str	r3, [sp, #8]
   1e4b8:	mov	sl, r1
   1e4bc:	ldr	r6, [r0, #84]	; 0x54
   1e4c0:	str	r0, [sp, #16]
   1e4c4:	str	r2, [sp, #24]
   1e4c8:	mov	r1, r2
   1e4cc:	bl	1dc34 <__mempcpy_chk@plt+0xc654>
   1e4d0:	mov	r1, #0
   1e4d4:	cmn	r0, #1
   1e4d8:	beq	1e734 <__mempcpy_chk@plt+0xd154>
   1e4dc:	add	r1, r0, r0, lsl #1
   1e4e0:	add	r7, sp, #28
   1e4e4:	str	r6, [sp, #20]
   1e4e8:	str	r1, [sp, #4]
   1e4ec:	ldr	r0, [sp, #16]
   1e4f0:	ldr	r0, [r0, #116]	; 0x74
   1e4f4:	add	r0, r0, r1, lsl #3
   1e4f8:	add	r0, r0, #12
   1e4fc:	b	1e518 <__mempcpy_chk@plt+0xcf38>
   1e500:	ldr	r6, [sp, #20]
   1e504:	add	r7, sp, #28
   1e508:	add	r0, r9, #24
   1e50c:	ldrb	r1, [r9, #8]
   1e510:	cmp	r1, #0
   1e514:	beq	1e728 <__mempcpy_chk@plt+0xd148>
   1e518:	mov	r9, r0
   1e51c:	ldr	r1, [r0, #-12]
   1e520:	mov	r0, sl
   1e524:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   1e528:	cmp	r0, #0
   1e52c:	beq	1e508 <__mempcpy_chk@plt+0xcf28>
   1e530:	ldmda	r9, {r0, r1}
   1e534:	ldr	r2, [sp, #24]
   1e538:	add	r1, r1, r2
   1e53c:	sub	r5, r1, r0
   1e540:	cmp	r5, r2
   1e544:	bne	1e5f8 <__mempcpy_chk@plt+0xd018>
   1e548:	ldr	r0, [r6, #20]
   1e54c:	ldr	r1, [r9, #-12]
   1e550:	add	r1, r1, r1, lsl #1
   1e554:	add	r0, r0, r1, lsl #2
   1e558:	ldr	r0, [r0, #8]
   1e55c:	ldr	r4, [r0]
   1e560:	mov	r0, sl
   1e564:	mov	r1, r4
   1e568:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   1e56c:	mov	r1, #4
   1e570:	cmp	r0, #0
   1e574:	bne	1e6f4 <__mempcpy_chk@plt+0xd114>
   1e578:	mov	r0, r7
   1e57c:	mov	r1, r4
   1e580:	bl	1ac4c <__mempcpy_chk@plt+0x966c>
   1e584:	mov	r4, r7
   1e588:	mov	r8, r0
   1e58c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e590:	mov	r0, r6
   1e594:	mov	r1, r7
   1e598:	ldr	r2, [sp, #8]
   1e59c:	ldr	r3, [fp, #8]
   1e5a0:	bl	1e3b0 <__mempcpy_chk@plt+0xcdd0>
   1e5a4:	mov	r7, r0
   1e5a8:	mov	r0, sl
   1e5ac:	mov	r1, r4
   1e5b0:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   1e5b4:	mov	r4, r0
   1e5b8:	ldr	r0, [sp, #36]	; 0x24
   1e5bc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e5c0:	orr	r0, r7, r8
   1e5c4:	orrs	r0, r0, r4
   1e5c8:	mov	r1, #2
   1e5cc:	beq	1e6f4 <__mempcpy_chk@plt+0xd114>
   1e5d0:	cmp	r7, #0
   1e5d4:	movne	r4, r7
   1e5d8:	cmp	r8, #0
   1e5dc:	movne	r4, r8
   1e5e0:	str	r4, [fp, #-32]	; 0xffffffe0
   1e5e4:	mov	r1, #1
   1e5e8:	str	r4, [sp, #12]
   1e5ec:	cmp	r1, #0
   1e5f0:	bne	1e6fc <__mempcpy_chk@plt+0xd11c>
   1e5f4:	b	1e500 <__mempcpy_chk@plt+0xcf20>
   1e5f8:	ldr	r0, [sp, #16]
   1e5fc:	ldr	r0, [r0, #100]	; 0x64
   1e600:	ldr	r0, [r0, r5, lsl #2]
   1e604:	ldr	r1, [r9, #-12]
   1e608:	ldr	r2, [r6, #12]
   1e60c:	ldr	r4, [r2, r1, lsl #2]
   1e610:	cmp	r0, #0
   1e614:	beq	1e68c <__mempcpy_chk@plt+0xd0ac>
   1e618:	add	r8, r0, #4
   1e61c:	mov	r0, r8
   1e620:	mov	r1, r4
   1e624:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   1e628:	mov	r1, #4
   1e62c:	cmp	r0, #0
   1e630:	bne	1e6f4 <__mempcpy_chk@plt+0xd114>
   1e634:	mov	r0, r7
   1e638:	mov	r1, r8
   1e63c:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   1e640:	mov	r8, r0
   1e644:	str	r0, [fp, #-32]	; 0xffffffe0
   1e648:	mov	r0, r7
   1e64c:	mov	r1, r4
   1e650:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1e654:	cmp	r8, #0
   1e658:	bne	1e664 <__mempcpy_chk@plt+0xd084>
   1e65c:	cmp	r0, #0
   1e660:	bne	1e6a4 <__mempcpy_chk@plt+0xd0c4>
   1e664:	ldr	r0, [sp, #36]	; 0x24
   1e668:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e66c:	cmp	r8, #0
   1e670:	movweq	r8, #12
   1e674:	str	r8, [fp, #-32]	; 0xffffffe0
   1e678:	mov	r1, #1
   1e67c:	str	r8, [sp, #12]
   1e680:	cmp	r1, #0
   1e684:	bne	1e6fc <__mempcpy_chk@plt+0xd11c>
   1e688:	b	1e500 <__mempcpy_chk@plt+0xcf20>
   1e68c:	mov	r0, r7
   1e690:	mov	r1, r4
   1e694:	bl	1ac4c <__mempcpy_chk@plt+0x966c>
   1e698:	str	r0, [fp, #-32]	; 0xffffffe0
   1e69c:	cmp	r0, #0
   1e6a0:	bne	1e710 <__mempcpy_chk@plt+0xd130>
   1e6a4:	sub	r0, fp, #32
   1e6a8:	mov	r1, r6
   1e6ac:	mov	r2, r7
   1e6b0:	bl	1ea04 <__mempcpy_chk@plt+0xd424>
   1e6b4:	ldr	r4, [sp, #16]
   1e6b8:	ldr	r1, [r4, #100]	; 0x64
   1e6bc:	str	r0, [r1, r5, lsl #2]
   1e6c0:	ldr	r0, [sp, #36]	; 0x24
   1e6c4:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e6c8:	ldr	r0, [r4, #100]	; 0x64
   1e6cc:	ldr	r0, [r0, r5, lsl #2]
   1e6d0:	clz	r0, r0
   1e6d4:	lsr	r1, r0, #5
   1e6d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e6dc:	cmp	r0, #0
   1e6e0:	mov	r2, r0
   1e6e4:	movwne	r2, #1
   1e6e8:	ands	r1, r1, r2
   1e6ec:	ldreq	r0, [sp, #12]
   1e6f0:	str	r0, [sp, #12]
   1e6f4:	cmp	r1, #0
   1e6f8:	beq	1e500 <__mempcpy_chk@plt+0xcf20>
   1e6fc:	cmp	r1, #4
   1e700:	ldr	r6, [sp, #20]
   1e704:	add	r7, sp, #28
   1e708:	beq	1e508 <__mempcpy_chk@plt+0xcf28>
   1e70c:	b	1e718 <__mempcpy_chk@plt+0xd138>
   1e710:	mov	r1, #1
   1e714:	b	1e6f0 <__mempcpy_chk@plt+0xd110>
   1e718:	cmp	r1, #2
   1e71c:	bne	1e730 <__mempcpy_chk@plt+0xd150>
   1e720:	ldr	r1, [sp, #4]
   1e724:	b	1e4ec <__mempcpy_chk@plt+0xcf0c>
   1e728:	mov	r1, #0
   1e72c:	b	1e734 <__mempcpy_chk@plt+0xd154>
   1e730:	ldr	r1, [sp, #12]
   1e734:	mov	r0, r1
   1e738:	sub	sp, fp, #28
   1e73c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e744:	add	fp, sp, #28
   1e748:	sub	sp, sp, #36	; 0x24
   1e74c:	str	r1, [sp, #12]
   1e750:	mov	r7, r0
   1e754:	ldr	r4, [r0, #84]	; 0x54
   1e758:	mov	r9, #0
   1e75c:	str	r9, [sp, #32]
   1e760:	str	r9, [sp, #20]
   1e764:	str	r9, [sp, #16]
   1e768:	str	r9, [sp, #24]
   1e76c:	ldr	r0, [r2, #4]
   1e770:	cmp	r0, #1
   1e774:	blt	1e8d4 <__mempcpy_chk@plt+0xd2f4>
   1e778:	mov	r8, r3
   1e77c:	mov	r5, r2
   1e780:	mov	r6, #0
   1e784:	str	r3, [sp, #4]
   1e788:	str	r2, [sp, #8]
   1e78c:	b	1e7c8 <__mempcpy_chk@plt+0xd1e8>
   1e790:	cmp	r0, #0
   1e794:	mov	r7, r5
   1e798:	ldr	r5, [sp, #8]
   1e79c:	beq	1e7e4 <__mempcpy_chk@plt+0xd204>
   1e7a0:	ldr	r0, [r4, #12]
   1e7a4:	ldr	r1, [r0, sl, lsl #2]
   1e7a8:	mov	r0, r8
   1e7ac:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1e7b0:	cmp	r0, #0
   1e7b4:	beq	1e8e8 <__mempcpy_chk@plt+0xd308>
   1e7b8:	add	r6, r6, #1
   1e7bc:	ldr	r0, [r5, #4]
   1e7c0:	cmp	r6, r0
   1e7c4:	bge	1e8d0 <__mempcpy_chk@plt+0xd2f0>
   1e7c8:	ldr	r0, [r5, #8]
   1e7cc:	ldr	sl, [r0, r6, lsl #2]
   1e7d0:	ldr	r0, [r4]
   1e7d4:	add	r0, r0, sl, lsl #3
   1e7d8:	ldrb	r0, [r0, #6]
   1e7dc:	tst	r0, #16
   1e7e0:	bne	1e804 <__mempcpy_chk@plt+0xd224>
   1e7e4:	ldr	r0, [r4]
   1e7e8:	add	r1, r0, sl, lsl #3
   1e7ec:	mov	r0, r7
   1e7f0:	ldr	r2, [sp, #12]
   1e7f4:	bl	1eef0 <__mempcpy_chk@plt+0xd910>
   1e7f8:	cmp	r0, #0
   1e7fc:	bne	1e7a0 <__mempcpy_chk@plt+0xd1c0>
   1e800:	b	1e7b8 <__mempcpy_chk@plt+0xd1d8>
   1e804:	mov	r0, r4
   1e808:	mov	r1, sl
   1e80c:	mov	r2, r7
   1e810:	mov	r5, r7
   1e814:	ldr	r7, [sp, #12]
   1e818:	mov	r3, r7
   1e81c:	bl	1ec14 <__mempcpy_chk@plt+0xd634>
   1e820:	cmp	r0, #2
   1e824:	blt	1e790 <__mempcpy_chk@plt+0xd1b0>
   1e828:	add	r8, r0, r7
   1e82c:	ldr	r0, [r5, #100]	; 0x64
   1e830:	ldr	r0, [r0, r8, lsl #2]
   1e834:	ldr	r1, [r4, #12]
   1e838:	ldr	r2, [r1, sl, lsl #2]
   1e83c:	mov	r1, #0
   1e840:	str	r1, [sp, #20]
   1e844:	cmp	r0, #0
   1e848:	mov	r7, r5
   1e84c:	add	r5, sp, #16
   1e850:	beq	1e87c <__mempcpy_chk@plt+0xd29c>
   1e854:	add	r1, r0, #4
   1e858:	mov	r0, r5
   1e85c:	mov	r9, r5
   1e860:	mov	r5, r2
   1e864:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   1e868:	mov	r2, r5
   1e86c:	mov	r5, r9
   1e870:	str	r0, [sp, #32]
   1e874:	cmp	r0, #0
   1e878:	bne	1e8f0 <__mempcpy_chk@plt+0xd310>
   1e87c:	mov	r0, r5
   1e880:	mov	r1, r2
   1e884:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1e888:	cmp	r0, #0
   1e88c:	beq	1e8e8 <__mempcpy_chk@plt+0xd308>
   1e890:	add	r0, sp, #32
   1e894:	mov	r1, r4
   1e898:	mov	r2, r5
   1e89c:	bl	1ea04 <__mempcpy_chk@plt+0xd424>
   1e8a0:	ldr	r1, [r7, #100]	; 0x64
   1e8a4:	str	r0, [r1, r8, lsl #2]
   1e8a8:	ldr	r0, [r7, #100]	; 0x64
   1e8ac:	ldr	r0, [r0, r8, lsl #2]
   1e8b0:	cmp	r0, #0
   1e8b4:	ldr	r8, [sp, #4]
   1e8b8:	ldr	r5, [sp, #8]
   1e8bc:	bne	1e7a0 <__mempcpy_chk@plt+0xd1c0>
   1e8c0:	ldr	r9, [sp, #32]
   1e8c4:	cmp	r9, #0
   1e8c8:	beq	1e7a0 <__mempcpy_chk@plt+0xd1c0>
   1e8cc:	b	1e8d4 <__mempcpy_chk@plt+0xd2f4>
   1e8d0:	mov	r9, #0
   1e8d4:	ldr	r0, [sp, #24]
   1e8d8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1e8dc:	mov	r0, r9
   1e8e0:	sub	sp, fp, #28
   1e8e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8e8:	mov	r9, #12
   1e8ec:	b	1e8d4 <__mempcpy_chk@plt+0xd2f4>
   1e8f0:	mov	r9, r0
   1e8f4:	b	1e8d4 <__mempcpy_chk@plt+0xd2f4>
   1e8f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e8fc:	add	fp, sp, #24
   1e900:	sub	sp, sp, #8
   1e904:	mov	r5, r3
   1e908:	mov	r7, r2
   1e90c:	mov	r4, r1
   1e910:	mov	r6, r0
   1e914:	mov	r0, r1
   1e918:	mov	r1, r2
   1e91c:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   1e920:	cmp	r0, #0
   1e924:	beq	1e934 <__mempcpy_chk@plt+0xd354>
   1e928:	mov	r0, #0
   1e92c:	sub	sp, fp, #24
   1e930:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e934:	ldr	r8, [fp, #8]
   1e938:	b	1e984 <__mempcpy_chk@plt+0xd3a4>
   1e93c:	ldr	r0, [r0, #8]
   1e940:	ldr	r2, [r0, #4]
   1e944:	str	r8, [sp]
   1e948:	mov	r0, r6
   1e94c:	mov	r1, r4
   1e950:	mov	r3, r5
   1e954:	bl	1e8f8 <__mempcpy_chk@plt+0xd318>
   1e958:	cmp	r0, #0
   1e95c:	bne	1e92c <__mempcpy_chk@plt+0xd34c>
   1e960:	ldr	r0, [r6, #20]
   1e964:	add	r0, r0, r7, lsl #2
   1e968:	ldr	r0, [r0, #8]
   1e96c:	ldr	r7, [r0]
   1e970:	mov	r0, r4
   1e974:	mov	r1, r7
   1e978:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   1e97c:	cmp	r0, #0
   1e980:	bne	1e928 <__mempcpy_chk@plt+0xd348>
   1e984:	ldr	r0, [r6]
   1e988:	add	r1, r0, r7, lsl #3
   1e98c:	ldrb	r1, [r1, #4]
   1e990:	cmp	r1, r8
   1e994:	bne	1e9a4 <__mempcpy_chk@plt+0xd3c4>
   1e998:	ldr	r0, [r0, r7, lsl #3]
   1e99c:	cmp	r0, r5
   1e9a0:	beq	1e9dc <__mempcpy_chk@plt+0xd3fc>
   1e9a4:	mov	r0, r4
   1e9a8:	mov	r1, r7
   1e9ac:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1e9b0:	cmp	r0, #0
   1e9b4:	beq	1e9f8 <__mempcpy_chk@plt+0xd418>
   1e9b8:	ldr	r0, [r6, #20]
   1e9bc:	add	r7, r7, r7, lsl #1
   1e9c0:	add	r0, r0, r7, lsl #2
   1e9c4:	ldr	r1, [r0, #4]
   1e9c8:	cmp	r1, #2
   1e9cc:	beq	1e93c <__mempcpy_chk@plt+0xd35c>
   1e9d0:	cmp	r1, #0
   1e9d4:	bne	1e960 <__mempcpy_chk@plt+0xd380>
   1e9d8:	b	1e928 <__mempcpy_chk@plt+0xd348>
   1e9dc:	cmp	r8, #9
   1e9e0:	bne	1e928 <__mempcpy_chk@plt+0xd348>
   1e9e4:	mov	r0, r4
   1e9e8:	mov	r1, r7
   1e9ec:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1e9f0:	cmp	r0, #0
   1e9f4:	bne	1e928 <__mempcpy_chk@plt+0xd348>
   1e9f8:	mov	r0, #12
   1e9fc:	sub	sp, fp, #24
   1ea00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ea04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea08:	add	fp, sp, #28
   1ea0c:	sub	sp, sp, #4
   1ea10:	mov	r9, r1
   1ea14:	ldr	r1, [r2, #4]
   1ea18:	cmp	r1, #0
   1ea1c:	beq	1eac8 <__mempcpy_chk@plt+0xd4e8>
   1ea20:	mov	sl, r2
   1ea24:	str	r0, [sp]
   1ea28:	mov	r6, #0
   1ea2c:	mov	r0, r2
   1ea30:	mov	r1, #0
   1ea34:	bl	1b724 <__mempcpy_chk@plt+0xa144>
   1ea38:	mov	r7, r0
   1ea3c:	ldr	r0, [r9, #32]
   1ea40:	ldr	r1, [r9, #68]	; 0x44
   1ea44:	and	r1, r1, r7
   1ea48:	add	r1, r1, r1, lsl #1
   1ea4c:	mov	r5, r0
   1ea50:	ldr	r2, [r5, r1, lsl #2]!
   1ea54:	cmp	r2, #1
   1ea58:	blt	1eaa0 <__mempcpy_chk@plt+0xd4c0>
   1ea5c:	add	r0, r0, r1, lsl #2
   1ea60:	ldr	r8, [r0, #8]
   1ea64:	b	1ea78 <__mempcpy_chk@plt+0xd498>
   1ea68:	ldr	r0, [r5]
   1ea6c:	add	r6, r6, #1
   1ea70:	cmp	r6, r0
   1ea74:	bge	1eaa0 <__mempcpy_chk@plt+0xd4c0>
   1ea78:	ldr	r4, [r8, r6, lsl #2]
   1ea7c:	ldr	r0, [r4]
   1ea80:	cmp	r7, r0
   1ea84:	bne	1ea68 <__mempcpy_chk@plt+0xd488>
   1ea88:	add	r0, r4, #4
   1ea8c:	mov	r1, sl
   1ea90:	bl	1b750 <__mempcpy_chk@plt+0xa170>
   1ea94:	cmp	r0, #0
   1ea98:	beq	1ea68 <__mempcpy_chk@plt+0xd488>
   1ea9c:	b	1eabc <__mempcpy_chk@plt+0xd4dc>
   1eaa0:	mov	r0, r9
   1eaa4:	mov	r1, sl
   1eaa8:	mov	r2, r7
   1eaac:	bl	1eae8 <__mempcpy_chk@plt+0xd508>
   1eab0:	mov	r4, r0
   1eab4:	cmp	r0, #0
   1eab8:	beq	1ead4 <__mempcpy_chk@plt+0xd4f4>
   1eabc:	mov	r0, r4
   1eac0:	sub	sp, fp, #28
   1eac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eac8:	mov	r4, #0
   1eacc:	str	r4, [r0]
   1ead0:	b	1eabc <__mempcpy_chk@plt+0xd4dc>
   1ead4:	mov	r0, #12
   1ead8:	ldr	r1, [sp]
   1eadc:	str	r0, [r1]
   1eae0:	mov	r4, #0
   1eae4:	b	1eabc <__mempcpy_chk@plt+0xd4dc>
   1eae8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1eaec:	add	fp, sp, #24
   1eaf0:	mov	r8, r2
   1eaf4:	mov	r7, r1
   1eaf8:	mov	r9, r0
   1eafc:	mov	r0, #56	; 0x38
   1eb00:	mov	r1, #1
   1eb04:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1eb08:	cmp	r0, #0
   1eb0c:	beq	1ec08 <__mempcpy_chk@plt+0xd628>
   1eb10:	mov	r4, r0
   1eb14:	add	r5, r0, #4
   1eb18:	mov	r0, r5
   1eb1c:	mov	r1, r7
   1eb20:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   1eb24:	cmp	r0, #0
   1eb28:	bne	1ebf4 <__mempcpy_chk@plt+0xd614>
   1eb2c:	str	r5, [r4, #40]	; 0x28
   1eb30:	ldr	r0, [r7, #4]
   1eb34:	cmp	r0, #1
   1eb38:	blt	1ebd4 <__mempcpy_chk@plt+0xd5f4>
   1eb3c:	mov	r0, #0
   1eb40:	movw	ip, #65280	; 0xff00
   1eb44:	movt	ip, #3
   1eb48:	add	r2, ip, #255	; 0xff
   1eb4c:	mov	lr, #32
   1eb50:	b	1eb78 <__mempcpy_chk@plt+0xd598>
   1eb54:	ldr	r3, [r5]
   1eb58:	tst	r3, ip
   1eb5c:	beq	1eb68 <__mempcpy_chk@plt+0xd588>
   1eb60:	orr	r1, r1, #128	; 0x80
   1eb64:	strb	r1, [r4, #52]	; 0x34
   1eb68:	ldr	r1, [r7, #4]
   1eb6c:	add	r0, r0, #1
   1eb70:	cmp	r0, r1
   1eb74:	bge	1ebd4 <__mempcpy_chk@plt+0xd5f4>
   1eb78:	ldr	r1, [r7, #8]
   1eb7c:	ldr	r1, [r1, r0, lsl #2]
   1eb80:	ldr	r3, [r9]
   1eb84:	add	r5, r3, r1, lsl #3
   1eb88:	ldr	r3, [r5, #4]!
   1eb8c:	and	r1, r3, r2
   1eb90:	cmp	r1, #1
   1eb94:	beq	1eb68 <__mempcpy_chk@plt+0xd588>
   1eb98:	and	r1, lr, r3, lsr #15
   1eb9c:	ldrb	r6, [r4, #52]	; 0x34
   1eba0:	orr	r1, r6, r1
   1eba4:	strb	r1, [r4, #52]	; 0x34
   1eba8:	uxtb	r3, r3
   1ebac:	cmp	r3, #12
   1ebb0:	beq	1eb60 <__mempcpy_chk@plt+0xd580>
   1ebb4:	cmp	r3, #4
   1ebb8:	beq	1ebcc <__mempcpy_chk@plt+0xd5ec>
   1ebbc:	cmp	r3, #2
   1ebc0:	bne	1eb54 <__mempcpy_chk@plt+0xd574>
   1ebc4:	orr	r1, r1, #16
   1ebc8:	b	1eb64 <__mempcpy_chk@plt+0xd584>
   1ebcc:	orr	r1, r1, #64	; 0x40
   1ebd0:	b	1eb64 <__mempcpy_chk@plt+0xd584>
   1ebd4:	mov	r0, r9
   1ebd8:	mov	r1, r4
   1ebdc:	mov	r2, r8
   1ebe0:	bl	1ba14 <__mempcpy_chk@plt+0xa434>
   1ebe4:	cmp	r0, #0
   1ebe8:	bne	1ec00 <__mempcpy_chk@plt+0xd620>
   1ebec:	mov	r0, r4
   1ebf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ebf4:	mov	r0, r4
   1ebf8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1ebfc:	b	1ec08 <__mempcpy_chk@plt+0xd628>
   1ec00:	mov	r0, r4
   1ec04:	bl	15f3c <__mempcpy_chk@plt+0x495c>
   1ec08:	mov	r4, #0
   1ec0c:	mov	r0, r4
   1ec10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ec14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec18:	add	fp, sp, #28
   1ec1c:	sub	sp, sp, #4
   1ec20:	mov	sl, r3
   1ec24:	mov	r7, r2
   1ec28:	mov	r5, r0
   1ec2c:	ldr	r6, [r0]
   1ec30:	add	r0, r6, r1, lsl #3
   1ec34:	ldrb	r8, [r0, #4]
   1ec38:	cmp	r8, #7
   1ec3c:	beq	1ede0 <__mempcpy_chk@plt+0xd800>
   1ec40:	mov	r4, r1
   1ec44:	mov	r0, r7
   1ec48:	mov	r1, sl
   1ec4c:	bl	19fd0 <__mempcpy_chk@plt+0x89f0>
   1ec50:	mov	r9, r0
   1ec54:	mov	r2, #0
   1ec58:	cmp	r8, #5
   1ec5c:	bne	1eca0 <__mempcpy_chk@plt+0xd6c0>
   1ec60:	cmp	r9, #2
   1ec64:	blt	1edcc <__mempcpy_chk@plt+0xd7ec>
   1ec68:	ldr	r0, [r5, #128]	; 0x80
   1ec6c:	tst	r0, #64	; 0x40
   1ec70:	bne	1ec84 <__mempcpy_chk@plt+0xd6a4>
   1ec74:	ldr	r1, [r7, #4]
   1ec78:	ldrb	r1, [r1, sl]
   1ec7c:	cmp	r1, #10
   1ec80:	beq	1edcc <__mempcpy_chk@plt+0xd7ec>
   1ec84:	tst	r0, #128	; 0x80
   1ec88:	beq	1edc8 <__mempcpy_chk@plt+0xd7e8>
   1ec8c:	ldr	r0, [r7, #4]
   1ec90:	ldrb	r0, [r0, sl]
   1ec94:	cmp	r0, #0
   1ec98:	movne	r2, r9
   1ec9c:	b	1edcc <__mempcpy_chk@plt+0xd7ec>
   1eca0:	cmp	r8, #6
   1eca4:	bne	1edcc <__mempcpy_chk@plt+0xd7ec>
   1eca8:	cmp	r9, #2
   1ecac:	blt	1edcc <__mempcpy_chk@plt+0xd7ec>
   1ecb0:	ldr	r4, [r6, r4, lsl #3]
   1ecb4:	ldr	r0, [r4, #32]
   1ecb8:	cmp	r0, #0
   1ecbc:	bne	1ecd8 <__mempcpy_chk@plt+0xd6f8>
   1ecc0:	ldr	r0, [r4, #36]	; 0x24
   1ecc4:	cmp	r0, #0
   1ecc8:	bne	1ecd8 <__mempcpy_chk@plt+0xd6f8>
   1eccc:	ldr	r0, [r4, #20]
   1ecd0:	cmp	r0, #0
   1ecd4:	beq	1edd8 <__mempcpy_chk@plt+0xd7f8>
   1ecd8:	mov	r0, r7
   1ecdc:	mov	r1, sl
   1ece0:	bl	17d3c <__mempcpy_chk@plt+0x675c>
   1ece4:	mov	r6, r0
   1ece8:	ldr	r0, [r4, #20]
   1ecec:	cmp	r0, #1
   1ecf0:	blt	1ed18 <__mempcpy_chk@plt+0xd738>
   1ecf4:	ldr	r0, [r4]
   1ecf8:	mov	r1, #0
   1ecfc:	ldr	r2, [r0, r1, lsl #2]
   1ed00:	cmp	r6, r2
   1ed04:	beq	1ed94 <__mempcpy_chk@plt+0xd7b4>
   1ed08:	add	r1, r1, #1
   1ed0c:	ldr	r2, [r4, #20]
   1ed10:	cmp	r1, r2
   1ed14:	blt	1ecfc <__mempcpy_chk@plt+0xd71c>
   1ed18:	ldr	r0, [r4, #36]	; 0x24
   1ed1c:	cmp	r0, #1
   1ed20:	blt	1ed50 <__mempcpy_chk@plt+0xd770>
   1ed24:	mov	r5, #0
   1ed28:	ldr	r0, [r4, #12]
   1ed2c:	ldr	r1, [r0, r5, lsl #2]
   1ed30:	mov	r0, r6
   1ed34:	bl	112e0 <iswctype@plt>
   1ed38:	cmp	r0, #0
   1ed3c:	bne	1ed94 <__mempcpy_chk@plt+0xd7b4>
   1ed40:	add	r5, r5, #1
   1ed44:	ldr	r0, [r4, #36]	; 0x24
   1ed48:	cmp	r5, r0
   1ed4c:	blt	1ed28 <__mempcpy_chk@plt+0xd748>
   1ed50:	ldr	r0, [r4, #32]
   1ed54:	cmp	r0, #1
   1ed58:	blt	1ed9c <__mempcpy_chk@plt+0xd7bc>
   1ed5c:	ldr	r0, [r4, #4]
   1ed60:	mov	r1, #0
   1ed64:	b	1ed78 <__mempcpy_chk@plt+0xd798>
   1ed68:	add	r1, r1, #1
   1ed6c:	ldr	r2, [r4, #32]
   1ed70:	cmp	r1, r2
   1ed74:	bge	1ed9c <__mempcpy_chk@plt+0xd7bc>
   1ed78:	ldr	r2, [r0, r1, lsl #2]
   1ed7c:	cmp	r2, r6
   1ed80:	bhi	1ed68 <__mempcpy_chk@plt+0xd788>
   1ed84:	ldr	r2, [r4, #8]
   1ed88:	ldr	r2, [r2, r1, lsl #2]
   1ed8c:	cmp	r6, r2
   1ed90:	bhi	1ed68 <__mempcpy_chk@plt+0xd788>
   1ed94:	mov	r0, r9
   1ed98:	b	1eda0 <__mempcpy_chk@plt+0xd7c0>
   1ed9c:	mov	r0, #0
   1eda0:	ldrb	r1, [r4, #16]
   1eda4:	tst	r1, #1
   1eda8:	mov	r2, #0
   1edac:	bne	1edb8 <__mempcpy_chk@plt+0xd7d8>
   1edb0:	mov	r2, r0
   1edb4:	b	1edcc <__mempcpy_chk@plt+0xd7ec>
   1edb8:	cmp	r0, #0
   1edbc:	bgt	1edcc <__mempcpy_chk@plt+0xd7ec>
   1edc0:	cmp	r9, #1
   1edc4:	movle	r9, #1
   1edc8:	mov	r2, r9
   1edcc:	mov	r0, r2
   1edd0:	sub	sp, fp, #28
   1edd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edd8:	mov	r6, #0
   1eddc:	b	1ece8 <__mempcpy_chk@plt+0xd708>
   1ede0:	ldr	r0, [r7, #4]
   1ede4:	ldrb	r5, [r0, sl]
   1ede8:	mov	r2, #0
   1edec:	cmp	r5, #194	; 0xc2
   1edf0:	bcc	1edcc <__mempcpy_chk@plt+0xd7ec>
   1edf4:	ldr	r1, [r7, #48]	; 0x30
   1edf8:	add	r2, sl, #2
   1edfc:	cmp	r2, r1
   1ee00:	ble	1ee0c <__mempcpy_chk@plt+0xd82c>
   1ee04:	mov	r2, #0
   1ee08:	b	1edcc <__mempcpy_chk@plt+0xd7ec>
   1ee0c:	add	r0, sl, r0
   1ee10:	ldrb	r3, [r0, #1]
   1ee14:	cmp	r5, #223	; 0xdf
   1ee18:	bhi	1ee3c <__mempcpy_chk@plt+0xd85c>
   1ee1c:	mov	r0, #0
   1ee20:	cmp	r3, #192	; 0xc0
   1ee24:	movwcc	r0, #1
   1ee28:	lsl	r2, r0, #1
   1ee2c:	sxtb	r0, r3
   1ee30:	cmn	r0, #1
   1ee34:	movwgt	r2, #0
   1ee38:	b	1edcc <__mempcpy_chk@plt+0xd7ec>
   1ee3c:	cmp	r5, #239	; 0xef
   1ee40:	bhi	1ee5c <__mempcpy_chk@plt+0xd87c>
   1ee44:	mov	r2, #3
   1ee48:	cmp	r5, #224	; 0xe0
   1ee4c:	bne	1eeb8 <__mempcpy_chk@plt+0xd8d8>
   1ee50:	cmp	r3, #160	; 0xa0
   1ee54:	bcc	1ee04 <__mempcpy_chk@plt+0xd824>
   1ee58:	b	1eeb8 <__mempcpy_chk@plt+0xd8d8>
   1ee5c:	cmp	r5, #247	; 0xf7
   1ee60:	bhi	1ee7c <__mempcpy_chk@plt+0xd89c>
   1ee64:	mov	r2, #4
   1ee68:	cmp	r5, #240	; 0xf0
   1ee6c:	bne	1eeb8 <__mempcpy_chk@plt+0xd8d8>
   1ee70:	cmp	r3, #144	; 0x90
   1ee74:	bcc	1ee04 <__mempcpy_chk@plt+0xd824>
   1ee78:	b	1eeb8 <__mempcpy_chk@plt+0xd8d8>
   1ee7c:	cmp	r5, #251	; 0xfb
   1ee80:	bhi	1ee9c <__mempcpy_chk@plt+0xd8bc>
   1ee84:	mov	r2, #5
   1ee88:	cmp	r5, #248	; 0xf8
   1ee8c:	bne	1eeb8 <__mempcpy_chk@plt+0xd8d8>
   1ee90:	cmp	r3, #136	; 0x88
   1ee94:	bcc	1ee04 <__mempcpy_chk@plt+0xd824>
   1ee98:	b	1eeb8 <__mempcpy_chk@plt+0xd8d8>
   1ee9c:	cmp	r5, #253	; 0xfd
   1eea0:	bhi	1ee04 <__mempcpy_chk@plt+0xd824>
   1eea4:	mov	r2, #6
   1eea8:	cmp	r5, #252	; 0xfc
   1eeac:	bne	1eeb8 <__mempcpy_chk@plt+0xd8d8>
   1eeb0:	cmp	r3, #132	; 0x84
   1eeb4:	bcc	1ee04 <__mempcpy_chk@plt+0xd824>
   1eeb8:	add	r3, r2, sl
   1eebc:	cmp	r3, r1
   1eec0:	bgt	1ee04 <__mempcpy_chk@plt+0xd824>
   1eec4:	mov	r1, #1
   1eec8:	ldrb	r3, [r0, r1]
   1eecc:	sxtb	r7, r3
   1eed0:	cmn	r7, #1
   1eed4:	bgt	1ee04 <__mempcpy_chk@plt+0xd824>
   1eed8:	cmp	r3, #191	; 0xbf
   1eedc:	bhi	1ee04 <__mempcpy_chk@plt+0xd824>
   1eee0:	add	r1, r1, #1
   1eee4:	cmp	r2, r1
   1eee8:	bne	1eec8 <__mempcpy_chk@plt+0xd8e8>
   1eeec:	b	1edcc <__mempcpy_chk@plt+0xd7ec>
   1eef0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1eef4:	add	fp, sp, #24
   1eef8:	mov	r6, r0
   1eefc:	ldr	r7, [r1, #4]
   1ef00:	mvn	r0, #0
   1ef04:	uxtab	r0, r0, r7
   1ef08:	mov	r8, #0
   1ef0c:	cmp	r0, #6
   1ef10:	bhi	1f01c <__mempcpy_chk@plt+0xda3c>
   1ef14:	mov	r5, r2
   1ef18:	ldr	r2, [r6, #4]
   1ef1c:	ldrb	r2, [r2, r5]
   1ef20:	sxtb	r3, r2
   1ef24:	add	r4, pc, #0
   1ef28:	ldr	pc, [r4, r0, lsl #2]
   1ef2c:	andeq	lr, r1, r8, asr #30
   1ef30:	andeq	pc, r1, ip, lsl r0	; <UNPREDICTABLE>
   1ef34:	andeq	lr, r1, ip, asr pc
   1ef38:	andeq	pc, r1, ip, lsl r0	; <UNPREDICTABLE>
   1ef3c:	andeq	lr, r1, ip, ror pc
   1ef40:	andeq	pc, r1, ip, lsl r0	; <UNPREDICTABLE>
   1ef44:	andeq	lr, r1, r4, ror pc
   1ef48:	ldrb	r0, [r1]
   1ef4c:	uxtb	r1, r3
   1ef50:	cmp	r0, r1
   1ef54:	beq	1efb0 <__mempcpy_chk@plt+0xd9d0>
   1ef58:	b	1f01c <__mempcpy_chk@plt+0xda3c>
   1ef5c:	ldr	r0, [r1]
   1ef60:	mov	r1, r2
   1ef64:	bl	1cec0 <__mempcpy_chk@plt+0xb8e0>
   1ef68:	cmp	r0, #0
   1ef6c:	bne	1efb0 <__mempcpy_chk@plt+0xd9d0>
   1ef70:	b	1f01c <__mempcpy_chk@plt+0xda3c>
   1ef74:	cmp	r3, #0
   1ef78:	bmi	1f01c <__mempcpy_chk@plt+0xda3c>
   1ef7c:	cmp	r2, #0
   1ef80:	beq	1efa0 <__mempcpy_chk@plt+0xd9c0>
   1ef84:	cmp	r2, #10
   1ef88:	bne	1efb0 <__mempcpy_chk@plt+0xd9d0>
   1ef8c:	ldr	r0, [r6, #84]	; 0x54
   1ef90:	ldrb	r0, [r0, #128]	; 0x80
   1ef94:	tst	r0, #64	; 0x40
   1ef98:	bne	1efb0 <__mempcpy_chk@plt+0xd9d0>
   1ef9c:	b	1f01c <__mempcpy_chk@plt+0xda3c>
   1efa0:	ldr	r0, [r6, #84]	; 0x54
   1efa4:	ldrb	r0, [r0, #128]	; 0x80
   1efa8:	tst	r0, #128	; 0x80
   1efac:	bne	1f01c <__mempcpy_chk@plt+0xda3c>
   1efb0:	movw	r0, #65280	; 0xff00
   1efb4:	movt	r0, #3
   1efb8:	tst	r7, r0
   1efbc:	beq	1f018 <__mempcpy_chk@plt+0xda38>
   1efc0:	ldr	r2, [r6, #88]	; 0x58
   1efc4:	mov	r0, r6
   1efc8:	mov	r1, r5
   1efcc:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1efd0:	and	r1, r0, #1
   1efd4:	tst	r7, #1024	; 0x400
   1efd8:	beq	1efe4 <__mempcpy_chk@plt+0xda04>
   1efdc:	cmp	r1, #0
   1efe0:	beq	1f01c <__mempcpy_chk@plt+0xda3c>
   1efe4:	tst	r7, #2048	; 0x800
   1efe8:	cmpne	r1, #0
   1efec:	bne	1f01c <__mempcpy_chk@plt+0xda3c>
   1eff0:	tst	r7, #8192	; 0x2000
   1eff4:	beq	1f000 <__mempcpy_chk@plt+0xda20>
   1eff8:	ands	r1, r0, #2
   1effc:	beq	1f01c <__mempcpy_chk@plt+0xda3c>
   1f000:	uxth	r1, r7
   1f004:	mov	r2, #1
   1f008:	eor	r1, r2, r1, lsr #15
   1f00c:	and	r0, r0, #8
   1f010:	orr	r0, r1, r0, lsr #3
   1f014:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f018:	mov	r8, #1
   1f01c:	mov	r0, r8
   1f020:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f028:	add	fp, sp, #28
   1f02c:	sub	sp, sp, #20
   1f030:	mov	r5, r0
   1f034:	ldr	r0, [r1, #8]
   1f038:	cmp	r0, #1
   1f03c:	blt	1f1e8 <__mempcpy_chk@plt+0xdc08>
   1f040:	mov	r4, r1
   1f044:	ldr	sl, [r5, #84]	; 0x54
   1f048:	mov	r8, #0
   1f04c:	movw	r9, #65280	; 0xff00
   1f050:	movt	r9, #3
   1f054:	b	1f068 <__mempcpy_chk@plt+0xda88>
   1f058:	add	r8, r8, #1
   1f05c:	ldr	r0, [r4, #8]
   1f060:	cmp	r8, r0
   1f064:	bge	1f1e8 <__mempcpy_chk@plt+0xdc08>
   1f068:	ldr	r0, [r4, #12]
   1f06c:	ldr	r7, [r0, r8, lsl #2]
   1f070:	ldr	r0, [sl]
   1f074:	add	r0, r0, r7, lsl #3
   1f078:	ldr	r6, [r0, #4]
   1f07c:	tst	r6, #1048576	; 0x100000
   1f080:	beq	1f058 <__mempcpy_chk@plt+0xda78>
   1f084:	tst	r6, r9
   1f088:	beq	1f0dc <__mempcpy_chk@plt+0xdafc>
   1f08c:	ldr	r1, [r5, #40]	; 0x28
   1f090:	ldr	r2, [r5, #88]	; 0x58
   1f094:	mov	r0, r5
   1f098:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1f09c:	and	r1, r0, #1
   1f0a0:	tst	r6, #1024	; 0x400
   1f0a4:	beq	1f0b0 <__mempcpy_chk@plt+0xdad0>
   1f0a8:	cmp	r1, #0
   1f0ac:	beq	1f058 <__mempcpy_chk@plt+0xda78>
   1f0b0:	tst	r6, #2048	; 0x800
   1f0b4:	cmpne	r1, #0
   1f0b8:	bne	1f058 <__mempcpy_chk@plt+0xda78>
   1f0bc:	tst	r6, #8192	; 0x2000
   1f0c0:	beq	1f0cc <__mempcpy_chk@plt+0xdaec>
   1f0c4:	ands	r1, r0, #2
   1f0c8:	beq	1f058 <__mempcpy_chk@plt+0xda78>
   1f0cc:	tst	r6, #32768	; 0x8000
   1f0d0:	beq	1f0dc <__mempcpy_chk@plt+0xdafc>
   1f0d4:	ands	r0, r0, #8
   1f0d8:	beq	1f058 <__mempcpy_chk@plt+0xda78>
   1f0dc:	ldr	r3, [r5, #40]	; 0x28
   1f0e0:	mov	r0, sl
   1f0e4:	mov	r1, r7
   1f0e8:	mov	r2, r5
   1f0ec:	bl	1ec14 <__mempcpy_chk@plt+0xd634>
   1f0f0:	cmp	r0, #0
   1f0f4:	beq	1f058 <__mempcpy_chk@plt+0xda78>
   1f0f8:	ldr	r1, [r5, #40]	; 0x28
   1f0fc:	ldr	r2, [r5, #120]	; 0x78
   1f100:	cmp	r2, r0
   1f104:	movlt	r2, r0
   1f108:	str	r2, [r5, #120]	; 0x78
   1f10c:	add	r6, r1, r0
   1f110:	mov	r0, r5
   1f114:	mov	r1, r6
   1f118:	bl	1dcc0 <__mempcpy_chk@plt+0xc6e0>
   1f11c:	str	r0, [sp, #16]
   1f120:	cmp	r0, #0
   1f124:	bne	1f1e0 <__mempcpy_chk@plt+0xdc00>
   1f128:	ldr	r0, [r5, #100]	; 0x64
   1f12c:	ldr	r9, [r0, r6, lsl #2]
   1f130:	ldr	r0, [sl, #12]
   1f134:	ldr	r1, [sl, #24]
   1f138:	ldr	r0, [r0, r7, lsl #2]
   1f13c:	add	r0, r0, r0, lsl #1
   1f140:	add	r2, r1, r0, lsl #2
   1f144:	cmp	r9, #0
   1f148:	beq	1f16c <__mempcpy_chk@plt+0xdb8c>
   1f14c:	ldr	r1, [r9, #40]	; 0x28
   1f150:	mov	r7, sp
   1f154:	mov	r0, r7
   1f158:	bl	1da00 <__mempcpy_chk@plt+0xc420>
   1f15c:	str	r0, [sp, #16]
   1f160:	cmp	r0, #0
   1f164:	beq	1f180 <__mempcpy_chk@plt+0xdba0>
   1f168:	b	1f1e0 <__mempcpy_chk@plt+0xdc00>
   1f16c:	vldr	d16, [r2]
   1f170:	ldr	r0, [r2, #8]
   1f174:	str	r0, [sp, #8]
   1f178:	vstr	d16, [sp]
   1f17c:	mov	r7, sp
   1f180:	ldr	r2, [r5, #88]	; 0x58
   1f184:	sub	r1, r6, #1
   1f188:	mov	r0, r5
   1f18c:	bl	1cd44 <__mempcpy_chk@plt+0xb764>
   1f190:	mov	r3, r0
   1f194:	add	r0, sp, #16
   1f198:	mov	r1, sl
   1f19c:	mov	r2, r7
   1f1a0:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1f1a4:	ldr	r1, [r5, #100]	; 0x64
   1f1a8:	str	r0, [r1, r6, lsl #2]
   1f1ac:	cmp	r9, #0
   1f1b0:	beq	1f1bc <__mempcpy_chk@plt+0xdbdc>
   1f1b4:	ldr	r0, [sp, #8]
   1f1b8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1f1bc:	ldr	r0, [r5, #100]	; 0x64
   1f1c0:	ldr	r0, [r0, r6, lsl #2]
   1f1c4:	cmp	r0, #0
   1f1c8:	movw	r9, #65280	; 0xff00
   1f1cc:	movt	r9, #3
   1f1d0:	bne	1f058 <__mempcpy_chk@plt+0xda78>
   1f1d4:	ldr	r0, [sp, #16]
   1f1d8:	cmp	r0, #0
   1f1dc:	beq	1f058 <__mempcpy_chk@plt+0xda78>
   1f1e0:	sub	sp, fp, #28
   1f1e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1e8:	mov	r0, #0
   1f1ec:	sub	sp, fp, #28
   1f1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1f8:	add	fp, sp, #28
   1f1fc:	sub	sp, sp, #68	; 0x44
   1f200:	sub	sp, sp, #14336	; 0x3800
   1f204:	mov	r4, r1
   1f208:	mov	r7, r0
   1f20c:	mov	r6, #0
   1f210:	str	r6, [r1, #44]	; 0x2c
   1f214:	str	r6, [r1, #48]	; 0x30
   1f218:	sub	lr, fp, #4096	; 0x1000
   1f21c:	sub	r2, lr, #2128	; 0x850
   1f220:	add	r3, sp, #16
   1f224:	bl	1f6c4 <__mempcpy_chk@plt+0xe0e4>
   1f228:	cmp	r0, #0
   1f22c:	ble	1f5cc <__mempcpy_chk@plt+0xdfec>
   1f230:	mov	r5, r0
   1f234:	str	r4, [sp, #4]
   1f238:	add	r1, r0, #1
   1f23c:	sub	r0, fp, #3120	; 0xc30
   1f240:	bl	1aeac <__mempcpy_chk@plt+0x98cc>
   1f244:	str	r0, [fp, #-36]	; 0xffffffdc
   1f248:	cmp	r0, #0
   1f24c:	bne	1f598 <__mempcpy_chk@plt+0xdfb8>
   1f250:	sub	r0, fp, #3152	; 0xc50
   1f254:	bl	1fbb0 <__mempcpy_chk@plt+0xe5d0>
   1f258:	sub	sl, fp, #3120	; 0xc30
   1f25c:	sub	lr, fp, #3072	; 0xc00
   1f260:	sub	r6, lr, #36	; 0x24
   1f264:	mov	r9, #0
   1f268:	mov	r0, #0
   1f26c:	str	r0, [sp, #8]
   1f270:	str	r5, [sp, #12]
   1f274:	b	1f2bc <__mempcpy_chk@plt+0xdcdc>
   1f278:	ldrsb	r0, [r8, #52]	; 0x34
   1f27c:	cmn	r0, #1
   1f280:	ble	1f388 <__mempcpy_chk@plt+0xdda8>
   1f284:	sub	lr, fp, #2048	; 0x800
   1f288:	sub	r0, lr, #36	; 0x24
   1f28c:	str	r8, [r0, r9, lsl #2]
   1f290:	sub	lr, fp, #1024	; 0x400
   1f294:	sub	r0, lr, #36	; 0x24
   1f298:	ldr	r0, [r0, r9, lsl #2]
   1f29c:	str	r0, [r6, r9, lsl #2]
   1f2a0:	add	r0, sp, #16
   1f2a4:	add	r1, r0, r9, lsl #5
   1f2a8:	sub	r0, fp, #3152	; 0xc50
   1f2ac:	bl	1fbc0 <__mempcpy_chk@plt+0xe5e0>
   1f2b0:	add	r9, r9, #1
   1f2b4:	cmp	r9, r5
   1f2b8:	beq	1f410 <__mempcpy_chk@plt+0xde30>
   1f2bc:	mov	r0, #0
   1f2c0:	str	r0, [fp, #-3116]	; 0xfffff3d4
   1f2c4:	add	r0, r9, r9, lsl #1
   1f2c8:	sub	lr, fp, #4096	; 0x1000
   1f2cc:	sub	r1, lr, #2128	; 0x850
   1f2d0:	add	r0, r1, r0, lsl #2
   1f2d4:	mov	r4, r0
   1f2d8:	ldr	r1, [r4, #4]!
   1f2dc:	cmp	r1, #1
   1f2e0:	blt	1f34c <__mempcpy_chk@plt+0xdd6c>
   1f2e4:	ldr	r5, [r0, #8]
   1f2e8:	mov	r6, #0
   1f2ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f2f0:	b	1f304 <__mempcpy_chk@plt+0xdd24>
   1f2f4:	ldr	r0, [r4]
   1f2f8:	add	r6, r6, #1
   1f2fc:	cmp	r6, r0
   1f300:	bge	1f33c <__mempcpy_chk@plt+0xdd5c>
   1f304:	ldr	r0, [r5, r6, lsl #2]
   1f308:	ldr	r2, [r7, #12]
   1f30c:	ldr	r0, [r2, r0, lsl #2]
   1f310:	cmn	r0, #1
   1f314:	beq	1f2f4 <__mempcpy_chk@plt+0xdd14>
   1f318:	ldr	r1, [r7, #24]
   1f31c:	add	r0, r0, r0, lsl #1
   1f320:	add	r1, r1, r0, lsl #2
   1f324:	mov	r0, sl
   1f328:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   1f32c:	mov	r1, #0
   1f330:	cmp	r0, #0
   1f334:	beq	1f2f4 <__mempcpy_chk@plt+0xdd14>
   1f338:	b	1f590 <__mempcpy_chk@plt+0xdfb0>
   1f33c:	str	r1, [fp, #-36]	; 0xffffffdc
   1f340:	ldr	r5, [sp, #12]
   1f344:	sub	lr, fp, #3072	; 0xc00
   1f348:	sub	r6, lr, #36	; 0x24
   1f34c:	sub	r0, fp, #36	; 0x24
   1f350:	mov	r1, r7
   1f354:	mov	r2, sl
   1f358:	mov	r3, #0
   1f35c:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1f360:	mov	r8, r0
   1f364:	sub	lr, fp, #1024	; 0x400
   1f368:	sub	r0, lr, #36	; 0x24
   1f36c:	str	r8, [r0, r9, lsl #2]
   1f370:	cmp	r8, #0
   1f374:	bne	1f278 <__mempcpy_chk@plt+0xdc98>
   1f378:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f37c:	cmp	r0, #0
   1f380:	beq	1f278 <__mempcpy_chk@plt+0xdc98>
   1f384:	b	1f598 <__mempcpy_chk@plt+0xdfb8>
   1f388:	sub	r0, fp, #36	; 0x24
   1f38c:	mov	r1, r7
   1f390:	mov	r2, sl
   1f394:	mov	r3, #1
   1f398:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1f39c:	sub	lr, fp, #2048	; 0x800
   1f3a0:	sub	r1, lr, #36	; 0x24
   1f3a4:	str	r0, [r1, r9, lsl #2]
   1f3a8:	cmp	r0, #0
   1f3ac:	bne	1f3bc <__mempcpy_chk@plt+0xdddc>
   1f3b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f3b4:	cmp	r1, #0
   1f3b8:	bne	1f598 <__mempcpy_chk@plt+0xdfb8>
   1f3bc:	cmp	r8, r0
   1f3c0:	beq	1f3e0 <__mempcpy_chk@plt+0xde00>
   1f3c4:	ldr	r0, [r7, #92]	; 0x5c
   1f3c8:	cmp	r0, #1
   1f3cc:	mov	r0, #0
   1f3d0:	movwgt	r0, #1
   1f3d4:	ldr	r1, [sp, #8]
   1f3d8:	orr	r1, r1, r0
   1f3dc:	str	r1, [sp, #8]
   1f3e0:	sub	r0, fp, #36	; 0x24
   1f3e4:	mov	r1, r7
   1f3e8:	mov	r2, sl
   1f3ec:	mov	r3, #2
   1f3f0:	bl	1b628 <__mempcpy_chk@plt+0xa048>
   1f3f4:	str	r0, [r6, r9, lsl #2]
   1f3f8:	cmp	r0, #0
   1f3fc:	bne	1f2a0 <__mempcpy_chk@plt+0xdcc0>
   1f400:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f404:	cmp	r0, #0
   1f408:	beq	1f2a0 <__mempcpy_chk@plt+0xdcc0>
   1f40c:	b	1f598 <__mempcpy_chk@plt+0xdfb8>
   1f410:	ldr	r0, [sp, #8]
   1f414:	tst	r0, #1
   1f418:	bne	1f5f0 <__mempcpy_chk@plt+0xe010>
   1f41c:	mov	r0, #4
   1f420:	mov	r1, #256	; 0x100
   1f424:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1f428:	mov	r8, r0
   1f42c:	ldr	r0, [sp, #4]
   1f430:	str	r8, [r0, #44]	; 0x2c
   1f434:	cmp	r8, #0
   1f438:	beq	1f598 <__mempcpy_chk@plt+0xdfb8>
   1f43c:	mov	r0, #0
   1f440:	mov	r1, #0
   1f444:	add	r5, sp, #16
   1f448:	mov	r9, r5
   1f44c:	b	1f460 <__mempcpy_chk@plt+0xde80>
   1f450:	add	r9, r9, #4
   1f454:	add	r1, r1, #1
   1f458:	cmp	r1, #8
   1f45c:	beq	1f4e4 <__mempcpy_chk@plt+0xdf04>
   1f460:	sub	r2, fp, #3152	; 0xc50
   1f464:	ldr	r2, [r2, r1, lsl #2]
   1f468:	cmp	r2, #0
   1f46c:	beq	1f450 <__mempcpy_chk@plt+0xde70>
   1f470:	add	r3, r7, r1, lsl #2
   1f474:	add	ip, r3, #96	; 0x60
   1f478:	lsl	r4, r1, #5
   1f47c:	mov	r6, #1
   1f480:	tst	r2, #1
   1f484:	bne	1f4a4 <__mempcpy_chk@plt+0xdec4>
   1f488:	add	r4, r4, #1
   1f48c:	lsr	r3, r2, #1
   1f490:	lsl	r6, r6, #1
   1f494:	cmp	r0, r2, lsr #1
   1f498:	mov	r2, r3
   1f49c:	bne	1f480 <__mempcpy_chk@plt+0xdea0>
   1f4a0:	b	1f450 <__mempcpy_chk@plt+0xde70>
   1f4a4:	mov	lr, #0
   1f4a8:	ldr	r3, [r9, lr, lsl #3]
   1f4ac:	add	lr, lr, #4
   1f4b0:	tst	r3, r6
   1f4b4:	beq	1f4a8 <__mempcpy_chk@plt+0xdec8>
   1f4b8:	ldr	r3, [ip]
   1f4bc:	tst	r3, r6
   1f4c0:	sub	r3, fp, #2048	; 0x800
   1f4c4:	sub	r3, r3, #36	; 0x24
   1f4c8:	sub	r5, fp, #1024	; 0x400
   1f4cc:	sub	r5, r5, #36	; 0x24
   1f4d0:	moveq	r3, r5
   1f4d4:	add	r3, r3, lr
   1f4d8:	ldr	r3, [r3, #-4]
   1f4dc:	str	r3, [r8, r4, lsl #2]
   1f4e0:	b	1f488 <__mempcpy_chk@plt+0xdea8>
   1f4e4:	sub	lr, fp, #3072	; 0xc00
   1f4e8:	sub	r6, lr, #36	; 0x24
   1f4ec:	sub	r0, fp, #3152	; 0xc50
   1f4f0:	mov	r1, #10
   1f4f4:	bl	1cec0 <__mempcpy_chk@plt+0xb8e0>
   1f4f8:	cmp	r0, #0
   1f4fc:	beq	1f550 <__mempcpy_chk@plt+0xdf70>
   1f500:	ldr	r0, [sp, #12]
   1f504:	cmp	r0, #1
   1f508:	blt	1f550 <__mempcpy_chk@plt+0xdf70>
   1f50c:	add	r5, sp, #16
   1f510:	ldr	r4, [sp, #12]
   1f514:	mov	r0, r5
   1f518:	mov	r1, #10
   1f51c:	bl	1cec0 <__mempcpy_chk@plt+0xb8e0>
   1f520:	cmp	r0, #0
   1f524:	bne	1f53c <__mempcpy_chk@plt+0xdf5c>
   1f528:	add	r5, r5, #32
   1f52c:	subs	r4, r4, #1
   1f530:	add	r6, r6, #4
   1f534:	bne	1f514 <__mempcpy_chk@plt+0xdf34>
   1f538:	b	1f550 <__mempcpy_chk@plt+0xdf70>
   1f53c:	ldr	r0, [r6]
   1f540:	str	r0, [r8, #40]	; 0x28
   1f544:	ldr	r1, [sp, #8]
   1f548:	tst	r1, #1
   1f54c:	strne	r0, [r8, #1064]	; 0x428
   1f550:	ldr	r0, [fp, #-3112]	; 0xfffff3d8
   1f554:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1f558:	mov	r6, #1
   1f55c:	ldr	r5, [sp, #12]
   1f560:	cmp	r5, #1
   1f564:	blt	1f584 <__mempcpy_chk@plt+0xdfa4>
   1f568:	sub	lr, fp, #4096	; 0x1000
   1f56c:	sub	r0, lr, #2128	; 0x850
   1f570:	add	r4, r0, #8
   1f574:	ldr	r0, [r4], #12
   1f578:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1f57c:	subs	r5, r5, #1
   1f580:	bne	1f574 <__mempcpy_chk@plt+0xdf94>
   1f584:	mov	r0, r6
   1f588:	sub	sp, fp, #28
   1f58c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f590:	str	r0, [fp, #-36]	; 0xffffffdc
   1f594:	ldr	r5, [sp, #12]
   1f598:	ldr	r0, [fp, #-3112]	; 0xfffff3d8
   1f59c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1f5a0:	mov	r6, #0
   1f5a4:	cmp	r5, #1
   1f5a8:	blt	1f584 <__mempcpy_chk@plt+0xdfa4>
   1f5ac:	sub	lr, fp, #4096	; 0x1000
   1f5b0:	sub	r0, lr, #2128	; 0x850
   1f5b4:	add	r4, r0, #8
   1f5b8:	ldr	r0, [r4], #12
   1f5bc:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1f5c0:	subs	r5, r5, #1
   1f5c4:	bne	1f5b8 <__mempcpy_chk@plt+0xdfd8>
   1f5c8:	b	1f584 <__mempcpy_chk@plt+0xdfa4>
   1f5cc:	bne	1f584 <__mempcpy_chk@plt+0xdfa4>
   1f5d0:	mov	r0, #4
   1f5d4:	mov	r1, #256	; 0x100
   1f5d8:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1f5dc:	mov	r6, r0
   1f5e0:	str	r0, [r4, #44]	; 0x2c
   1f5e4:	cmp	r0, #0
   1f5e8:	movwne	r6, #1
   1f5ec:	b	1f584 <__mempcpy_chk@plt+0xdfa4>
   1f5f0:	mov	r0, #4
   1f5f4:	mov	r1, #512	; 0x200
   1f5f8:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   1f5fc:	mov	r8, r0
   1f600:	ldr	r0, [sp, #4]
   1f604:	str	r8, [r0, #48]	; 0x30
   1f608:	cmp	r8, #0
   1f60c:	beq	1f598 <__mempcpy_chk@plt+0xdfb8>
   1f610:	sub	lr, fp, #1024	; 0x400
   1f614:	sub	r0, lr, #36	; 0x24
   1f618:	sub	ip, r0, #4
   1f61c:	sub	lr, fp, #2048	; 0x800
   1f620:	sub	r0, lr, #36	; 0x24
   1f624:	sub	lr, r0, #4
   1f628:	mov	r2, #0
   1f62c:	add	r3, sp, #16
   1f630:	mov	r7, #0
   1f634:	b	1f648 <__mempcpy_chk@plt+0xe068>
   1f638:	add	r3, r3, #4
   1f63c:	add	r7, r7, #1
   1f640:	cmp	r7, #8
   1f644:	beq	1f4ec <__mempcpy_chk@plt+0xdf0c>
   1f648:	sub	r0, fp, #3152	; 0xc50
   1f64c:	ldr	r5, [r0, r7, lsl #2]
   1f650:	cmp	r5, #0
   1f654:	beq	1f638 <__mempcpy_chk@plt+0xe058>
   1f658:	lsl	r0, r7, #5
   1f65c:	mov	r1, #1
   1f660:	tst	r5, #1
   1f664:	bne	1f684 <__mempcpy_chk@plt+0xe0a4>
   1f668:	add	r0, r0, #1
   1f66c:	lsr	r4, r5, #1
   1f670:	lsl	r1, r1, #1
   1f674:	cmp	r2, r5, lsr #1
   1f678:	mov	r5, r4
   1f67c:	bne	1f660 <__mempcpy_chk@plt+0xe080>
   1f680:	b	1f638 <__mempcpy_chk@plt+0xe058>
   1f684:	mov	r4, r3
   1f688:	mov	sl, ip
   1f68c:	mov	r9, lr
   1f690:	add	sl, sl, #4
   1f694:	add	r9, r9, #4
   1f698:	ldr	r6, [r4], #32
   1f69c:	tst	r6, r1
   1f6a0:	beq	1f690 <__mempcpy_chk@plt+0xe0b0>
   1f6a4:	ldr	r4, [sl]
   1f6a8:	mov	r6, r8
   1f6ac:	str	r4, [r6, r0, lsl #2]!
   1f6b0:	ldr	r4, [r9]
   1f6b4:	str	r4, [r6, #1024]	; 0x400
   1f6b8:	sub	r4, fp, #3072	; 0xc00
   1f6bc:	sub	r6, r4, #36	; 0x24
   1f6c0:	b	1f668 <__mempcpy_chk@plt+0xe088>
   1f6c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f6c8:	add	fp, sp, #28
   1f6cc:	sub	sp, sp, #140	; 0x8c
   1f6d0:	str	r3, [sp, #32]
   1f6d4:	str	r2, [sp, #28]
   1f6d8:	mov	r9, r1
   1f6dc:	mov	sl, r0
   1f6e0:	sub	r7, fp, #64	; 0x40
   1f6e4:	mov	r0, r7
   1f6e8:	bl	1fbb0 <__mempcpy_chk@plt+0xe5d0>
   1f6ec:	ldr	r0, [r9, #8]
   1f6f0:	cmp	r0, #1
   1f6f4:	blt	1fb78 <__mempcpy_chk@plt+0xe598>
   1f6f8:	add	r6, sl, #96	; 0x60
   1f6fc:	mov	r0, #0
   1f700:	add	r5, sp, #72	; 0x48
   1f704:	mov	r4, #0
   1f708:	str	sl, [sp]
   1f70c:	str	r6, [sp, #8]
   1f710:	str	r9, [sp, #16]
   1f714:	b	1f73c <__mempcpy_chk@plt+0xe15c>
   1f718:	mov	r0, r7
   1f71c:	bl	1fbb0 <__mempcpy_chk@plt+0xe5d0>
   1f720:	ldr	r9, [sp, #16]
   1f724:	ldr	r0, [r9, #8]
   1f728:	ldr	r1, [sp, #36]	; 0x24
   1f72c:	add	r1, r1, #1
   1f730:	cmp	r1, r0
   1f734:	mov	r0, r1
   1f738:	bge	1fb7c <__mempcpy_chk@plt+0xe59c>
   1f73c:	str	r0, [sp, #36]	; 0x24
   1f740:	ldr	r0, [r9, #12]
   1f744:	ldr	r1, [sp, #36]	; 0x24
   1f748:	ldr	r8, [r0, r1, lsl #2]
   1f74c:	ldr	r1, [sl]
   1f750:	add	r0, r1, r8, lsl #3
   1f754:	ldr	r9, [r0, #4]!
   1f758:	str	r0, [sp, #12]
   1f75c:	uxtb	r0, r9
   1f760:	cmp	r0, #1
   1f764:	str	r0, [sp, #24]
   1f768:	bne	1f780 <__mempcpy_chk@plt+0xe1a0>
   1f76c:	str	r1, [sp, #20]
   1f770:	ldrb	r1, [r1, r8, lsl #3]
   1f774:	mov	r0, r7
   1f778:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   1f77c:	b	1f818 <__mempcpy_chk@plt+0xe238>
   1f780:	cmp	r0, #7
   1f784:	beq	1f7ac <__mempcpy_chk@plt+0xe1cc>
   1f788:	cmp	r0, #5
   1f78c:	beq	1f7c8 <__mempcpy_chk@plt+0xe1e8>
   1f790:	cmp	r0, #3
   1f794:	bne	1f720 <__mempcpy_chk@plt+0xe140>
   1f798:	str	r1, [sp, #20]
   1f79c:	ldr	r1, [r1, r8, lsl #3]
   1f7a0:	mov	r0, r7
   1f7a4:	bl	1fbc0 <__mempcpy_chk@plt+0xe5e0>
   1f7a8:	b	1f818 <__mempcpy_chk@plt+0xe238>
   1f7ac:	str	r1, [sp, #20]
   1f7b0:	mvn	r0, #0
   1f7b4:	str	r0, [fp, #-52]	; 0xffffffcc
   1f7b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1f7bc:	str	r0, [fp, #-60]	; 0xffffffc4
   1f7c0:	str	r0, [fp, #-64]	; 0xffffffc0
   1f7c4:	b	1f7f0 <__mempcpy_chk@plt+0xe210>
   1f7c8:	ldr	r0, [sl, #92]	; 0x5c
   1f7cc:	cmp	r0, #2
   1f7d0:	str	r1, [sp, #20]
   1f7d4:	blt	1f7e8 <__mempcpy_chk@plt+0xe208>
   1f7d8:	ldr	r1, [sl, #60]	; 0x3c
   1f7dc:	mov	r0, r7
   1f7e0:	bl	1fbc0 <__mempcpy_chk@plt+0xe5e0>
   1f7e4:	b	1f7f0 <__mempcpy_chk@plt+0xe210>
   1f7e8:	mov	r0, r7
   1f7ec:	bl	1fbe4 <__mempcpy_chk@plt+0xe604>
   1f7f0:	ldrb	r0, [sl, #128]	; 0x80
   1f7f4:	tst	r0, #64	; 0x40
   1f7f8:	moveq	r0, r7
   1f7fc:	moveq	r1, #10
   1f800:	bleq	1fc0c <__mempcpy_chk@plt+0xe62c>
   1f804:	ldrb	r0, [sl, #128]	; 0x80
   1f808:	tst	r0, #128	; 0x80
   1f80c:	movne	r0, r7
   1f810:	movne	r1, #0
   1f814:	blne	1fc0c <__mempcpy_chk@plt+0xe62c>
   1f818:	movw	r0, #65280	; 0xff00
   1f81c:	movt	r0, #3
   1f820:	ands	r0, r9, r0
   1f824:	beq	1f9a4 <__mempcpy_chk@plt+0xe3c4>
   1f828:	tst	r9, #8192	; 0x2000
   1f82c:	beq	1f860 <__mempcpy_chk@plt+0xe280>
   1f830:	mov	r0, r7
   1f834:	mov	r1, #10
   1f838:	bl	1cec0 <__mempcpy_chk@plt+0xb8e0>
   1f83c:	str	r0, [sp, #4]
   1f840:	mov	r0, r7
   1f844:	bl	1fbb0 <__mempcpy_chk@plt+0xe5d0>
   1f848:	ldr	r0, [sp, #4]
   1f84c:	cmp	r0, #0
   1f850:	beq	1f720 <__mempcpy_chk@plt+0xe140>
   1f854:	mov	r0, r7
   1f858:	mov	r1, #10
   1f85c:	bl	1936c <__mempcpy_chk@plt+0x7d8c>
   1f860:	tst	r9, #32768	; 0x8000
   1f864:	bne	1f718 <__mempcpy_chk@plt+0xe138>
   1f868:	tst	r9, #1024	; 0x400
   1f86c:	beq	1f908 <__mempcpy_chk@plt+0xe328>
   1f870:	ldr	r0, [sp, #24]
   1f874:	cmp	r0, #1
   1f878:	bne	1f88c <__mempcpy_chk@plt+0xe2ac>
   1f87c:	ldr	r0, [sp, #12]
   1f880:	ldrb	r0, [r0, #2]
   1f884:	tst	r0, #64	; 0x40
   1f888:	beq	1f718 <__mempcpy_chk@plt+0xe138>
   1f88c:	ldr	r0, [sl, #92]	; 0x5c
   1f890:	cmp	r0, #1
   1f894:	ble	1f8d8 <__mempcpy_chk@plt+0xe2f8>
   1f898:	ldr	r1, [sl, #60]	; 0x3c
   1f89c:	mov	r0, #0
   1f8a0:	mov	r2, #0
   1f8a4:	ldr	r3, [r6, r2, lsl #2]
   1f8a8:	ldr	r6, [r1, r2, lsl #2]
   1f8ac:	mvn	r6, r6
   1f8b0:	orr	r3, r3, r6
   1f8b4:	ldr	r6, [r7, r2, lsl #2]
   1f8b8:	and	r3, r6, r3
   1f8bc:	ldr	r6, [sp, #8]
   1f8c0:	str	r3, [r7, r2, lsl #2]
   1f8c4:	orr	r0, r3, r0
   1f8c8:	add	r2, r2, #1
   1f8cc:	cmp	r2, #8
   1f8d0:	bne	1f8a4 <__mempcpy_chk@plt+0xe2c4>
   1f8d4:	b	1f900 <__mempcpy_chk@plt+0xe320>
   1f8d8:	mov	r0, #0
   1f8dc:	mov	r1, #0
   1f8e0:	ldr	r2, [r6, r1, lsl #2]
   1f8e4:	ldr	r3, [r7, r1, lsl #2]
   1f8e8:	and	r2, r3, r2
   1f8ec:	str	r2, [r7, r1, lsl #2]
   1f8f0:	orr	r0, r2, r0
   1f8f4:	add	r1, r1, #1
   1f8f8:	cmp	r1, #8
   1f8fc:	bne	1f8e0 <__mempcpy_chk@plt+0xe300>
   1f900:	cmp	r0, #0
   1f904:	beq	1f720 <__mempcpy_chk@plt+0xe140>
   1f908:	tst	r9, #2048	; 0x800
   1f90c:	beq	1f9a4 <__mempcpy_chk@plt+0xe3c4>
   1f910:	ldr	r0, [sp, #24]
   1f914:	cmp	r0, #1
   1f918:	bne	1f92c <__mempcpy_chk@plt+0xe34c>
   1f91c:	ldr	r0, [sp, #12]
   1f920:	ldrb	r0, [r0, #2]
   1f924:	tst	r0, #64	; 0x40
   1f928:	bne	1f718 <__mempcpy_chk@plt+0xe138>
   1f92c:	ldr	r0, [sl, #92]	; 0x5c
   1f930:	cmp	r0, #1
   1f934:	ble	1f974 <__mempcpy_chk@plt+0xe394>
   1f938:	ldr	r1, [sl, #60]	; 0x3c
   1f93c:	mov	r0, #0
   1f940:	mov	r2, #0
   1f944:	ldr	r3, [r6, r2, lsl #2]
   1f948:	ldr	r6, [r1, r2, lsl #2]
   1f94c:	and	r3, r6, r3
   1f950:	ldr	r6, [r7, r2, lsl #2]
   1f954:	bic	r3, r6, r3
   1f958:	ldr	r6, [sp, #8]
   1f95c:	str	r3, [r7, r2, lsl #2]
   1f960:	orr	r0, r3, r0
   1f964:	add	r2, r2, #1
   1f968:	cmp	r2, #8
   1f96c:	bne	1f944 <__mempcpy_chk@plt+0xe364>
   1f970:	b	1f99c <__mempcpy_chk@plt+0xe3bc>
   1f974:	mov	r0, #0
   1f978:	mov	r1, #0
   1f97c:	ldr	r2, [r6, r1, lsl #2]
   1f980:	ldr	r3, [r7, r1, lsl #2]
   1f984:	bic	r2, r3, r2
   1f988:	str	r2, [r7, r1, lsl #2]
   1f98c:	orr	r0, r2, r0
   1f990:	add	r1, r1, #1
   1f994:	cmp	r1, #8
   1f998:	bne	1f97c <__mempcpy_chk@plt+0xe39c>
   1f99c:	cmp	r0, #0
   1f9a0:	beq	1f720 <__mempcpy_chk@plt+0xe140>
   1f9a4:	cmp	r4, #1
   1f9a8:	blt	1fb0c <__mempcpy_chk@plt+0xe52c>
   1f9ac:	str	r8, [sp, #12]
   1f9b0:	mov	r8, #0
   1f9b4:	ldr	sl, [sp, #32]
   1f9b8:	ldr	r9, [sp, #16]
   1f9bc:	ldr	r6, [sp, #24]
   1f9c0:	cmp	r6, #1
   1f9c4:	bne	1fa08 <__mempcpy_chk@plt+0xe428>
   1f9c8:	b	1f9e8 <__mempcpy_chk@plt+0xe408>
   1f9cc:	mov	r4, ip
   1f9d0:	add	sl, sl, #32
   1f9d4:	add	r8, r8, #1
   1f9d8:	cmp	r8, r4
   1f9dc:	bge	1fb1c <__mempcpy_chk@plt+0xe53c>
   1f9e0:	cmp	r6, #1
   1f9e4:	bne	1fa08 <__mempcpy_chk@plt+0xe428>
   1f9e8:	ldr	r0, [sp, #12]
   1f9ec:	ldr	r1, [sp, #20]
   1f9f0:	ldrb	r1, [r1, r0, lsl #3]
   1f9f4:	ldr	r0, [sp, #32]
   1f9f8:	add	r0, r0, r8, lsl #5
   1f9fc:	bl	1cec0 <__mempcpy_chk@plt+0xb8e0>
   1fa00:	cmp	r0, #0
   1fa04:	beq	1f9d0 <__mempcpy_chk@plt+0xe3f0>
   1fa08:	mov	ip, r4
   1fa0c:	mov	r0, #0
   1fa10:	mov	r1, #0
   1fa14:	ldr	r2, [r7, r1, lsl #2]
   1fa18:	ldr	r3, [sl, r1, lsl #2]
   1fa1c:	and	r2, r3, r2
   1fa20:	str	r2, [r5, r1, lsl #2]
   1fa24:	orr	r0, r2, r0
   1fa28:	add	r1, r1, #1
   1fa2c:	cmp	r1, #8
   1fa30:	bne	1fa14 <__mempcpy_chk@plt+0xe434>
   1fa34:	cmp	r0, #0
   1fa38:	beq	1f9cc <__mempcpy_chk@plt+0xe3ec>
   1fa3c:	mov	r9, #0
   1fa40:	mov	r0, #0
   1fa44:	mov	r1, #0
   1fa48:	ldr	r2, [r7, r1, lsl #2]
   1fa4c:	ldr	r3, [sl, r1, lsl #2]
   1fa50:	bic	r4, r3, r2
   1fa54:	add	r6, sp, #40	; 0x28
   1fa58:	str	r4, [r6, r1, lsl #2]
   1fa5c:	bic	r2, r2, r3
   1fa60:	str	r2, [r7, r1, lsl #2]
   1fa64:	orr	r9, r2, r9
   1fa68:	orr	r0, r4, r0
   1fa6c:	add	r1, r1, #1
   1fa70:	cmp	r1, #8
   1fa74:	bne	1fa48 <__mempcpy_chk@plt+0xe468>
   1fa78:	cmp	r0, #0
   1fa7c:	beq	1fac8 <__mempcpy_chk@plt+0xe4e8>
   1fa80:	mov	r4, ip
   1fa84:	ldr	r6, [sp, #32]
   1fa88:	add	r0, r6, ip, lsl #5
   1fa8c:	add	r1, sp, #40	; 0x28
   1fa90:	bl	1fc30 <__mempcpy_chk@plt+0xe650>
   1fa94:	add	r0, r6, r8, lsl #5
   1fa98:	mov	r1, r5
   1fa9c:	bl	1fc30 <__mempcpy_chk@plt+0xe650>
   1faa0:	add	r0, r4, r4, lsl #1
   1faa4:	ldr	r2, [sp, #28]
   1faa8:	add	r0, r2, r0, lsl #2
   1faac:	add	r1, r8, r8, lsl #1
   1fab0:	add	r1, r2, r1, lsl #2
   1fab4:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   1fab8:	cmp	r0, #0
   1fabc:	bne	1fb88 <__mempcpy_chk@plt+0xe5a8>
   1fac0:	add	r4, r4, #1
   1fac4:	b	1facc <__mempcpy_chk@plt+0xe4ec>
   1fac8:	mov	r4, ip
   1facc:	ldr	r0, [sp, #16]
   1fad0:	mov	r6, r0
   1fad4:	ldr	r0, [r0, #12]
   1fad8:	ldr	r1, [sp, #36]	; 0x24
   1fadc:	ldr	r1, [r0, r1, lsl #2]
   1fae0:	add	r0, r8, r8, lsl #1
   1fae4:	ldr	r2, [sp, #28]
   1fae8:	add	r0, r2, r0, lsl #2
   1faec:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   1faf0:	cmp	r0, #0
   1faf4:	beq	1fb88 <__mempcpy_chk@plt+0xe5a8>
   1faf8:	cmp	r9, #0
   1fafc:	beq	1fb18 <__mempcpy_chk@plt+0xe538>
   1fb00:	mov	r9, r6
   1fb04:	ldr	r6, [sp, #24]
   1fb08:	b	1f9d0 <__mempcpy_chk@plt+0xe3f0>
   1fb0c:	mov	r8, #0
   1fb10:	ldr	r9, [sp, #16]
   1fb14:	b	1fb1c <__mempcpy_chk@plt+0xe53c>
   1fb18:	mov	r9, r6
   1fb1c:	cmp	r8, r4
   1fb20:	ldr	sl, [sp]
   1fb24:	bne	1fb70 <__mempcpy_chk@plt+0xe590>
   1fb28:	ldr	r0, [sp, #32]
   1fb2c:	add	r0, r0, r4, lsl #5
   1fb30:	mov	r1, r7
   1fb34:	bl	1fc30 <__mempcpy_chk@plt+0xe650>
   1fb38:	ldr	r0, [r9, #12]
   1fb3c:	ldr	r1, [sp, #36]	; 0x24
   1fb40:	ldr	r1, [r0, r1, lsl #2]
   1fb44:	add	r0, r4, r4, lsl #1
   1fb48:	ldr	r2, [sp, #28]
   1fb4c:	add	r0, r2, r0, lsl #2
   1fb50:	bl	1ac4c <__mempcpy_chk@plt+0x966c>
   1fb54:	cmp	r0, #0
   1fb58:	ldr	r6, [sp, #8]
   1fb5c:	bne	1fb88 <__mempcpy_chk@plt+0xe5a8>
   1fb60:	mov	r0, r7
   1fb64:	bl	1fbb0 <__mempcpy_chk@plt+0xe5d0>
   1fb68:	add	r4, r4, #1
   1fb6c:	b	1f724 <__mempcpy_chk@plt+0xe144>
   1fb70:	ldr	r6, [sp, #8]
   1fb74:	b	1f724 <__mempcpy_chk@plt+0xe144>
   1fb78:	mov	r4, #0
   1fb7c:	mov	r0, r4
   1fb80:	sub	sp, fp, #28
   1fb84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb88:	cmp	r4, #1
   1fb8c:	blt	1fba8 <__mempcpy_chk@plt+0xe5c8>
   1fb90:	ldr	r0, [sp, #28]
   1fb94:	add	r5, r0, #8
   1fb98:	ldr	r0, [r5], #12
   1fb9c:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1fba0:	subs	r4, r4, #1
   1fba4:	bne	1fb98 <__mempcpy_chk@plt+0xe5b8>
   1fba8:	mvn	r4, #0
   1fbac:	b	1fb7c <__mempcpy_chk@plt+0xe59c>
   1fbb0:	vmov.i32	q8, #0	; 0x00000000
   1fbb4:	vst1.32	{d16-d17}, [r0]!
   1fbb8:	vst1.32	{d16-d17}, [r0]
   1fbbc:	bx	lr
   1fbc0:	mov	r2, #0
   1fbc4:	ldr	ip, [r1, r2, lsl #2]
   1fbc8:	ldr	r3, [r0, r2, lsl #2]
   1fbcc:	orr	r3, r3, ip
   1fbd0:	str	r3, [r0, r2, lsl #2]
   1fbd4:	add	r2, r2, #1
   1fbd8:	cmp	r2, #8
   1fbdc:	bne	1fbc4 <__mempcpy_chk@plt+0xe5e4>
   1fbe0:	bx	lr
   1fbe4:	mvn	r1, #0
   1fbe8:	str	r1, [r0]
   1fbec:	str	r1, [r0, #4]
   1fbf0:	str	r1, [r0, #8]
   1fbf4:	str	r1, [r0, #12]
   1fbf8:	str	r1, [r0, #16]
   1fbfc:	str	r1, [r0, #20]
   1fc00:	str	r1, [r0, #24]
   1fc04:	str	r1, [r0, #28]
   1fc08:	bx	lr
   1fc0c:	asr	r2, r1, #31
   1fc10:	add	r2, r1, r2, lsr #27
   1fc14:	asr	r2, r2, #5
   1fc18:	ldr	ip, [r0, r2, lsl #2]
   1fc1c:	and	r1, r1, #31
   1fc20:	mov	r3, #1
   1fc24:	bic	r1, ip, r3, lsl r1
   1fc28:	str	r1, [r0, r2, lsl #2]
   1fc2c:	bx	lr
   1fc30:	vld1.32	{d16-d17}, [r1]!
   1fc34:	vld1.32	{d18-d19}, [r1]
   1fc38:	vst1.32	{d16-d17}, [r0]!
   1fc3c:	vst1.32	{d18-d19}, [r0]
   1fc40:	bx	lr
   1fc44:	ldr	r0, [r0]
   1fc48:	add	r0, r0, r1, lsl #3
   1fc4c:	ldr	r1, [r0, #4]
   1fc50:	uxtb	r3, r1
   1fc54:	mov	r0, #0
   1fc58:	cmp	r3, #2
   1fc5c:	bne	1fcb4 <__mempcpy_chk@plt+0xe6d4>
   1fc60:	movw	r3, #65280	; 0xff00
   1fc64:	movt	r3, #3
   1fc68:	tst	r1, r3
   1fc6c:	moveq	r0, #1
   1fc70:	bxeq	lr
   1fc74:	ands	ip, r2, #1
   1fc78:	bne	1fc84 <__mempcpy_chk@plt+0xe6a4>
   1fc7c:	ands	r3, r1, #1024	; 0x400
   1fc80:	bne	1fcb4 <__mempcpy_chk@plt+0xe6d4>
   1fc84:	cmp	ip, #0
   1fc88:	andsne	r3, r1, #2048	; 0x800
   1fc8c:	bne	1fcb4 <__mempcpy_chk@plt+0xe6d4>
   1fc90:	tst	r2, #2
   1fc94:	bne	1fca0 <__mempcpy_chk@plt+0xe6c0>
   1fc98:	ands	r3, r1, #8192	; 0x2000
   1fc9c:	bxne	lr
   1fca0:	uxth	r0, r1
   1fca4:	mov	r1, #1
   1fca8:	eor	r0, r1, r0, lsr #15
   1fcac:	and	r1, r2, #8
   1fcb0:	orr	r0, r0, r1, lsr #3
   1fcb4:	bx	lr
   1fcb8:	mov	ip, #0
   1fcbc:	str	ip, [r0, #20]
   1fcc0:	str	ip, [r0, #16]
   1fcc4:	stm	r0, {r1, r2, r3}
   1fcc8:	str	ip, [r0, #24]
   1fccc:	ldr	r1, [sp]
   1fcd0:	str	r1, [r0, #12]
   1fcd4:	bx	lr
   1fcd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcdc:	add	fp, sp, #28
   1fce0:	sub	sp, sp, #12
   1fce4:	mov	sl, r1
   1fce8:	mov	r6, r0
   1fcec:	ldr	r1, [r1, #8]
   1fcf0:	ldr	r5, [sl, #12]
   1fcf4:	mov	r0, sp
   1fcf8:	bl	1ac4c <__mempcpy_chk@plt+0x966c>
   1fcfc:	cmp	r0, #0
   1fd00:	bne	1fde8 <__mempcpy_chk@plt+0xe808>
   1fd04:	mov	r3, sp
   1fd08:	mov	r0, r6
   1fd0c:	mov	r1, sl
   1fd10:	mov	r2, r5
   1fd14:	bl	1fea4 <__mempcpy_chk@plt+0xe8c4>
   1fd18:	cmp	r0, #0
   1fd1c:	bne	1fdb4 <__mempcpy_chk@plt+0xe7d4>
   1fd20:	mov	r9, #0
   1fd24:	mov	r8, sp
   1fd28:	mov	r1, #0
   1fd2c:	cmp	r5, #1
   1fd30:	bge	1fd60 <__mempcpy_chk@plt+0xe780>
   1fd34:	b	1fdbc <__mempcpy_chk@plt+0xe7dc>
   1fd38:	mov	r0, r6
   1fd3c:	mov	r1, sl
   1fd40:	mov	r2, r5
   1fd44:	mov	r3, r8
   1fd48:	bl	1fea4 <__mempcpy_chk@plt+0xe8c4>
   1fd4c:	cmp	r0, #0
   1fd50:	mov	r1, r4
   1fd54:	bne	1fdb4 <__mempcpy_chk@plt+0xe7d4>
   1fd58:	cmp	r5, #1
   1fd5c:	blt	1fdbc <__mempcpy_chk@plt+0xe7dc>
   1fd60:	ldr	r0, [sl]
   1fd64:	ldr	r2, [r0, r5, lsl #2]
   1fd68:	cmp	r2, #0
   1fd6c:	mov	r4, #0
   1fd70:	addeq	r4, r1, #1
   1fd74:	ldr	r1, [r6, #120]	; 0x78
   1fd78:	cmp	r4, r1
   1fd7c:	bgt	1fdc4 <__mempcpy_chk@plt+0xe7e4>
   1fd80:	str	r9, [sp, #4]
   1fd84:	ldr	r0, [r6, #100]	; 0x64
   1fd88:	sub	r5, r5, #1
   1fd8c:	ldr	r0, [r0, r5, lsl #2]
   1fd90:	cmp	r0, #0
   1fd94:	beq	1fd38 <__mempcpy_chk@plt+0xe758>
   1fd98:	mov	r0, r6
   1fd9c:	mov	r1, sl
   1fda0:	mov	r2, r5
   1fda4:	mov	r3, r8
   1fda8:	bl	1ffcc <__mempcpy_chk@plt+0xe9ec>
   1fdac:	cmp	r0, #0
   1fdb0:	beq	1fd38 <__mempcpy_chk@plt+0xe758>
   1fdb4:	mov	r7, r0
   1fdb8:	b	1fdd4 <__mempcpy_chk@plt+0xe7f4>
   1fdbc:	mov	r7, #0
   1fdc0:	b	1fdd4 <__mempcpy_chk@plt+0xe7f4>
   1fdc4:	lsl	r2, r5, #2
   1fdc8:	mov	r7, #0
   1fdcc:	mov	r1, #0
   1fdd0:	bl	114fc <memset@plt>
   1fdd4:	ldr	r0, [sp, #8]
   1fdd8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1fddc:	mov	r0, r7
   1fde0:	sub	sp, fp, #28
   1fde4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fde8:	mov	r7, r0
   1fdec:	b	1fddc <__mempcpy_chk@plt+0xe7fc>
   1fdf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1fdf4:	add	fp, sp, #24
   1fdf8:	sub	sp, sp, #16
   1fdfc:	cmp	r3, #1
   1fe00:	blt	1fe98 <__mempcpy_chk@plt+0xe8b8>
   1fe04:	mov	r4, r3
   1fe08:	mov	r5, r2
   1fe0c:	mov	r6, r1
   1fe10:	mov	r7, r0
   1fe14:	mov	r8, sp
   1fe18:	add	r9, sp, #12
   1fe1c:	b	1fe34 <__mempcpy_chk@plt+0xe854>
   1fe20:	str	r0, [r6]
   1fe24:	add	r6, r6, #4
   1fe28:	add	r5, r5, #4
   1fe2c:	subs	r4, r4, #1
   1fe30:	beq	1fe98 <__mempcpy_chk@plt+0xe8b8>
   1fe34:	ldr	r0, [r5]
   1fe38:	ldr	r1, [r6]
   1fe3c:	cmp	r1, #0
   1fe40:	beq	1fe20 <__mempcpy_chk@plt+0xe840>
   1fe44:	cmp	r0, #0
   1fe48:	beq	1fe24 <__mempcpy_chk@plt+0xe844>
   1fe4c:	add	r1, r1, #4
   1fe50:	add	r2, r0, #4
   1fe54:	mov	r0, r8
   1fe58:	bl	1da00 <__mempcpy_chk@plt+0xc420>
   1fe5c:	str	r0, [sp, #12]
   1fe60:	cmp	r0, #0
   1fe64:	bne	1fe90 <__mempcpy_chk@plt+0xe8b0>
   1fe68:	mov	r0, r9
   1fe6c:	mov	r1, r7
   1fe70:	mov	r2, r8
   1fe74:	bl	1ea04 <__mempcpy_chk@plt+0xd424>
   1fe78:	str	r0, [r6]
   1fe7c:	ldr	r0, [sp, #8]
   1fe80:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   1fe84:	ldr	r0, [sp, #12]
   1fe88:	cmp	r0, #0
   1fe8c:	beq	1fe24 <__mempcpy_chk@plt+0xe844>
   1fe90:	sub	sp, fp, #24
   1fe94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1fe98:	mov	r0, #0
   1fe9c:	sub	sp, fp, #24
   1fea0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1fea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fea8:	add	fp, sp, #28
   1feac:	sub	sp, sp, #12
   1feb0:	mov	sl, r2
   1feb4:	mov	r8, r1
   1feb8:	mov	r6, r0
   1febc:	ldr	r9, [r0, #84]	; 0x54
   1fec0:	mov	r0, #0
   1fec4:	str	r0, [sp, #8]
   1fec8:	ldr	r1, [r6, #100]	; 0x64
   1fecc:	ldr	r7, [r1, r2, lsl #2]
   1fed0:	cmp	r7, #0
   1fed4:	mov	r4, r7
   1fed8:	addne	r4, r4, #4
   1fedc:	ldr	r1, [r3, #4]
   1fee0:	cmp	r1, #0
   1fee4:	beq	1ff74 <__mempcpy_chk@plt+0xe994>
   1fee8:	mov	r5, r3
   1feec:	cmp	r7, #0
   1fef0:	beq	1ff44 <__mempcpy_chk@plt+0xe964>
   1fef4:	mov	r0, r9
   1fef8:	mov	r1, r5
   1fefc:	mov	r2, r4
   1ff00:	bl	20118 <__mempcpy_chk@plt+0xeb38>
   1ff04:	str	r0, [sp, #8]
   1ff08:	cmp	r0, #0
   1ff0c:	bne	1ff9c <__mempcpy_chk@plt+0xe9bc>
   1ff10:	ldr	r0, [r8, #20]
   1ff14:	cmp	r0, #0
   1ff18:	beq	1ff44 <__mempcpy_chk@plt+0xe964>
   1ff1c:	ldr	r0, [r6, #116]	; 0x74
   1ff20:	stm	sp, {r0, sl}
   1ff24:	add	r3, r8, #16
   1ff28:	mov	r0, r9
   1ff2c:	mov	r1, r5
   1ff30:	mov	r2, r4
   1ff34:	bl	201f0 <__mempcpy_chk@plt+0xec10>
   1ff38:	str	r0, [sp, #8]
   1ff3c:	cmp	r0, #0
   1ff40:	bne	1ff9c <__mempcpy_chk@plt+0xe9bc>
   1ff44:	add	r0, sp, #8
   1ff48:	mov	r1, r9
   1ff4c:	mov	r2, r5
   1ff50:	bl	1ea04 <__mempcpy_chk@plt+0xd424>
   1ff54:	ldr	r1, [r8]
   1ff58:	str	r0, [r1, sl, lsl #2]
   1ff5c:	ldr	r0, [sp, #8]
   1ff60:	cmp	r0, #0
   1ff64:	bne	1ff9c <__mempcpy_chk@plt+0xe9bc>
   1ff68:	cmp	r7, #0
   1ff6c:	bne	1ff84 <__mempcpy_chk@plt+0xe9a4>
   1ff70:	b	1ff98 <__mempcpy_chk@plt+0xe9b8>
   1ff74:	ldr	r1, [r8]
   1ff78:	str	r0, [r1, sl, lsl #2]
   1ff7c:	cmp	r7, #0
   1ff80:	beq	1ff98 <__mempcpy_chk@plt+0xe9b8>
   1ff84:	ldr	r0, [r6, #100]	; 0x64
   1ff88:	ldr	r0, [r0, sl, lsl #2]
   1ff8c:	ldrb	r0, [r0, #52]	; 0x34
   1ff90:	tst	r0, #64	; 0x40
   1ff94:	bne	1ffa4 <__mempcpy_chk@plt+0xe9c4>
   1ff98:	mov	r0, #0
   1ff9c:	sub	sp, fp, #28
   1ffa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ffa4:	mov	r0, r6
   1ffa8:	mov	r1, r8
   1ffac:	mov	r2, sl
   1ffb0:	mov	r3, r4
   1ffb4:	bl	20434 <__mempcpy_chk@plt+0xee54>
   1ffb8:	str	r0, [sp, #8]
   1ffbc:	cmp	r0, #0
   1ffc0:	moveq	r0, #0
   1ffc4:	sub	sp, fp, #28
   1ffc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ffcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ffd0:	add	fp, sp, #28
   1ffd4:	sub	sp, sp, #20
   1ffd8:	str	r3, [sp, #12]
   1ffdc:	mov	sl, r0
   1ffe0:	ldr	r0, [r0, #100]	; 0x64
   1ffe4:	ldr	r7, [r0, r2, lsl #2]
   1ffe8:	ldr	r0, [r7, #20]
   1ffec:	cmp	r0, #1
   1fff0:	blt	20100 <__mempcpy_chk@plt+0xeb20>
   1fff4:	mov	r5, r2
   1fff8:	mov	r6, r1
   1fffc:	ldr	r8, [sl, #84]	; 0x54
   20000:	add	r0, r1, #16
   20004:	str	r0, [sp, #8]
   20008:	add	r0, r2, #1
   2000c:	str	r0, [sp, #16]
   20010:	mov	r9, #0
   20014:	b	2003c <__mempcpy_chk@plt+0xea5c>
   20018:	ldr	r0, [sp, #12]
   2001c:	mov	r1, r4
   20020:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   20024:	cmp	r0, #0
   20028:	beq	2010c <__mempcpy_chk@plt+0xeb2c>
   2002c:	add	r9, r9, #1
   20030:	ldr	r0, [r7, #20]
   20034:	cmp	r9, r0
   20038:	bge	20100 <__mempcpy_chk@plt+0xeb20>
   2003c:	ldr	r0, [r7, #24]
   20040:	ldr	r4, [r0, r9, lsl #2]
   20044:	ldr	r0, [r8]
   20048:	add	r0, r0, r4, lsl #3
   2004c:	ldrb	r0, [r0, #6]
   20050:	tst	r0, #16
   20054:	beq	2007c <__mempcpy_chk@plt+0xea9c>
   20058:	ldr	r0, [r6, #12]
   2005c:	str	r0, [sp]
   20060:	mov	r0, sl
   20064:	mov	r1, r6
   20068:	mov	r2, r4
   2006c:	mov	r3, r5
   20070:	bl	20e34 <__mempcpy_chk@plt+0xf854>
   20074:	cmp	r0, #0
   20078:	bne	200cc <__mempcpy_chk@plt+0xeaec>
   2007c:	ldr	r0, [r8]
   20080:	add	r1, r0, r4, lsl #3
   20084:	mov	r0, sl
   20088:	mov	r2, r5
   2008c:	bl	1eef0 <__mempcpy_chk@plt+0xd910>
   20090:	cmp	r0, #0
   20094:	beq	2002c <__mempcpy_chk@plt+0xea4c>
   20098:	ldr	r0, [r6]
   2009c:	ldr	r1, [sp, #16]
   200a0:	ldr	r0, [r0, r1, lsl #2]
   200a4:	cmp	r0, #0
   200a8:	beq	2002c <__mempcpy_chk@plt+0xea4c>
   200ac:	ldr	r1, [r8, #12]
   200b0:	ldr	r1, [r1, r4, lsl #2]
   200b4:	add	r0, r0, #4
   200b8:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   200bc:	mov	r1, r0
   200c0:	mov	r0, #1
   200c4:	cmp	r1, #0
   200c8:	beq	2002c <__mempcpy_chk@plt+0xea4c>
   200cc:	ldr	r1, [r6, #20]
   200d0:	cmp	r1, #0
   200d4:	beq	20018 <__mempcpy_chk@plt+0xea38>
   200d8:	ldr	r1, [r8, #12]
   200dc:	ldr	r2, [r1, r4, lsl #2]
   200e0:	stm	sp, {r4, r5}
   200e4:	add	r3, r0, r5
   200e8:	mov	r0, sl
   200ec:	ldr	r1, [sp, #8]
   200f0:	bl	20ac8 <__mempcpy_chk@plt+0xf4e8>
   200f4:	cmp	r0, #0
   200f8:	beq	20018 <__mempcpy_chk@plt+0xea38>
   200fc:	b	2002c <__mempcpy_chk@plt+0xea4c>
   20100:	mov	r0, #0
   20104:	sub	sp, fp, #28
   20108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2010c:	mov	r0, #12
   20110:	sub	sp, fp, #28
   20114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20118:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2011c:	add	fp, sp, #24
   20120:	sub	sp, sp, #8
   20124:	mov	r8, r2
   20128:	mov	r5, r1
   2012c:	mov	r6, r0
   20130:	mov	r0, #0
   20134:	str	r0, [sp, #4]
   20138:	add	r0, sp, #4
   2013c:	mov	r1, r6
   20140:	mov	r2, r5
   20144:	bl	1ea04 <__mempcpy_chk@plt+0xd424>
   20148:	ldr	r9, [sp, #4]
   2014c:	cmp	r9, #0
   20150:	bne	201dc <__mempcpy_chk@plt+0xebfc>
   20154:	mov	r7, r0
   20158:	ldr	r0, [r7, #28]!
   2015c:	cmp	r0, #0
   20160:	bne	201c8 <__mempcpy_chk@plt+0xebe8>
   20164:	ldr	r1, [r5, #4]
   20168:	mov	r0, r7
   2016c:	bl	1aeac <__mempcpy_chk@plt+0x98cc>
   20170:	str	r0, [sp, #4]
   20174:	mov	r9, #12
   20178:	cmp	r0, #0
   2017c:	bne	201dc <__mempcpy_chk@plt+0xebfc>
   20180:	ldr	r0, [r5, #4]
   20184:	cmp	r0, #1
   20188:	blt	201c8 <__mempcpy_chk@plt+0xebe8>
   2018c:	mov	r4, #0
   20190:	ldr	r0, [r5, #8]
   20194:	ldr	r0, [r0, r4, lsl #2]
   20198:	add	r0, r0, r0, lsl #1
   2019c:	ldr	r1, [r6, #28]
   201a0:	add	r1, r1, r0, lsl #2
   201a4:	mov	r0, r7
   201a8:	bl	1b138 <__mempcpy_chk@plt+0x9b58>
   201ac:	cmp	r0, #0
   201b0:	bne	201e8 <__mempcpy_chk@plt+0xec08>
   201b4:	add	r4, r4, #1
   201b8:	ldr	r1, [r5, #4]
   201bc:	cmp	r4, r1
   201c0:	blt	20190 <__mempcpy_chk@plt+0xebb0>
   201c4:	str	r0, [sp, #4]
   201c8:	mov	r0, r5
   201cc:	mov	r1, r8
   201d0:	mov	r2, r7
   201d4:	bl	20724 <__mempcpy_chk@plt+0xf144>
   201d8:	mov	r9, r0
   201dc:	mov	r0, r9
   201e0:	sub	sp, fp, #24
   201e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   201e8:	str	r0, [sp, #4]
   201ec:	b	201dc <__mempcpy_chk@plt+0xebfc>
   201f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201f4:	add	fp, sp, #28
   201f8:	sub	sp, sp, #12
   201fc:	str	r2, [sp, #4]
   20200:	mov	ip, r0
   20204:	ldr	r0, [r3, #4]
   20208:	cmp	r0, #1
   2020c:	blt	20428 <__mempcpy_chk@plt+0xee48>
   20210:	mov	r9, r1
   20214:	mov	r8, #0
   20218:	str	ip, [sp]
   2021c:	str	r3, [sp, #8]
   20220:	b	20238 <__mempcpy_chk@plt+0xec58>
   20224:	add	r8, r8, #1
   20228:	ldr	r3, [sp, #8]
   2022c:	ldr	r0, [r3, #4]
   20230:	cmp	r8, r0
   20234:	bge	20428 <__mempcpy_chk@plt+0xee48>
   20238:	ldr	r0, [r3, #8]
   2023c:	ldr	r0, [r0, r8, lsl #2]
   20240:	add	r0, r0, r0, lsl #1
   20244:	ldr	r1, [fp, #8]
   20248:	add	r1, r1, r0, lsl #3
   2024c:	ldr	r2, [r1, #8]
   20250:	ldr	r3, [fp, #12]
   20254:	cmp	r2, r3
   20258:	bge	20224 <__mempcpy_chk@plt+0xec44>
   2025c:	ldr	r1, [r1, #4]
   20260:	ldr	r2, [fp, #12]
   20264:	cmp	r1, r2
   20268:	blt	20224 <__mempcpy_chk@plt+0xec44>
   2026c:	ldr	r1, [fp, #8]
   20270:	ldr	r2, [r1, r0, lsl #3]!
   20274:	ldr	r0, [ip]
   20278:	ldr	sl, [r0, r2, lsl #3]
   2027c:	ldr	r1, [r1, #12]
   20280:	ldr	r2, [fp, #12]
   20284:	cmp	r1, r2
   20288:	bne	202f0 <__mempcpy_chk@plt+0xed10>
   2028c:	ldr	r1, [r9, #4]
   20290:	cmp	r1, #1
   20294:	blt	20224 <__mempcpy_chk@plt+0xec44>
   20298:	ldmib	r9, {r2, r3}
   2029c:	mvn	r6, #0
   202a0:	mov	r5, #0
   202a4:	mvn	r1, #0
   202a8:	b	202c4 <__mempcpy_chk@plt+0xece4>
   202ac:	ldr	r4, [r0, r7, lsl #3]
   202b0:	cmp	sl, r4
   202b4:	moveq	r6, r7
   202b8:	add	r5, r5, #1
   202bc:	cmp	r5, r2
   202c0:	bge	20360 <__mempcpy_chk@plt+0xed80>
   202c4:	ldr	r7, [r3, r5, lsl #2]
   202c8:	add	r4, r0, r7, lsl #3
   202cc:	ldrb	r4, [r4, #4]
   202d0:	cmp	r4, #9
   202d4:	beq	202ac <__mempcpy_chk@plt+0xeccc>
   202d8:	cmp	r4, #8
   202dc:	bne	202b8 <__mempcpy_chk@plt+0xecd8>
   202e0:	ldr	r4, [r0, r7, lsl #3]
   202e4:	cmp	sl, r4
   202e8:	moveq	r1, r7
   202ec:	b	202b8 <__mempcpy_chk@plt+0xecd8>
   202f0:	ldr	r0, [r9, #4]
   202f4:	cmp	r0, #1
   202f8:	blt	20224 <__mempcpy_chk@plt+0xec44>
   202fc:	mov	r5, #0
   20300:	b	20314 <__mempcpy_chk@plt+0xed34>
   20304:	ldr	r0, [r9, #4]
   20308:	add	r5, r5, #1
   2030c:	cmp	r5, r0
   20310:	bge	20224 <__mempcpy_chk@plt+0xec44>
   20314:	ldr	r0, [r9, #8]
   20318:	ldr	r1, [r0, r5, lsl #2]
   2031c:	ldr	r0, [ip]
   20320:	add	r2, r0, r1, lsl #3
   20324:	ldrb	r2, [r2, #4]
   20328:	orr	r2, r2, #1
   2032c:	cmp	r2, #9
   20330:	bne	20304 <__mempcpy_chk@plt+0xed24>
   20334:	ldr	r0, [r0, r1, lsl #3]
   20338:	cmp	sl, r0
   2033c:	bne	20304 <__mempcpy_chk@plt+0xed24>
   20340:	mov	r0, ip
   20344:	mov	r2, r9
   20348:	ldr	r3, [sp, #4]
   2034c:	bl	20914 <__mempcpy_chk@plt+0xf334>
   20350:	ldr	ip, [sp]
   20354:	cmp	r0, #0
   20358:	beq	20304 <__mempcpy_chk@plt+0xed24>
   2035c:	b	2042c <__mempcpy_chk@plt+0xee4c>
   20360:	cmp	r1, #0
   20364:	bmi	20384 <__mempcpy_chk@plt+0xeda4>
   20368:	mov	r0, ip
   2036c:	mov	r2, r9
   20370:	ldr	r3, [sp, #4]
   20374:	bl	20914 <__mempcpy_chk@plt+0xf334>
   20378:	ldr	ip, [sp]
   2037c:	cmp	r0, #0
   20380:	bne	2042c <__mempcpy_chk@plt+0xee4c>
   20384:	cmp	r6, #0
   20388:	bmi	20224 <__mempcpy_chk@plt+0xec44>
   2038c:	ldr	r0, [r9, #4]
   20390:	cmp	r0, #1
   20394:	blt	20224 <__mempcpy_chk@plt+0xec44>
   20398:	mov	sl, #0
   2039c:	b	203b8 <__mempcpy_chk@plt+0xedd8>
   203a0:	mov	r6, r5
   203a4:	mov	ip, r7
   203a8:	ldr	r0, [r9, #4]
   203ac:	add	sl, sl, #1
   203b0:	cmp	sl, r0
   203b4:	bge	20224 <__mempcpy_chk@plt+0xec44>
   203b8:	ldr	r0, [r9, #8]
   203bc:	ldr	r4, [r0, sl, lsl #2]
   203c0:	add	r5, r4, r4, lsl #1
   203c4:	ldr	r0, [ip, #28]
   203c8:	add	r0, r0, r5, lsl #2
   203cc:	mov	r1, r6
   203d0:	mov	r7, ip
   203d4:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   203d8:	cmp	r0, #0
   203dc:	bne	203a4 <__mempcpy_chk@plt+0xedc4>
   203e0:	ldr	r0, [r7, #24]
   203e4:	add	r0, r0, r5, lsl #2
   203e8:	mov	r5, r6
   203ec:	mov	r1, r6
   203f0:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   203f4:	cmp	r0, #0
   203f8:	bne	203a0 <__mempcpy_chk@plt+0xedc0>
   203fc:	mov	r0, r7
   20400:	mov	r1, r4
   20404:	mov	r2, r9
   20408:	ldr	r3, [sp, #4]
   2040c:	bl	20914 <__mempcpy_chk@plt+0xf334>
   20410:	cmp	r0, #0
   20414:	bne	2042c <__mempcpy_chk@plt+0xee4c>
   20418:	sub	sl, sl, #1
   2041c:	mov	r6, r5
   20420:	ldr	ip, [sp]
   20424:	b	203a8 <__mempcpy_chk@plt+0xedc8>
   20428:	mov	r0, #0
   2042c:	sub	sp, fp, #28
   20430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20438:	add	fp, sp, #28
   2043c:	sub	sp, sp, #84	; 0x54
   20440:	mov	r4, r3
   20444:	mov	r7, r2
   20448:	str	r1, [sp, #52]	; 0x34
   2044c:	ldr	r1, [r0, #84]	; 0x54
   20450:	str	r1, [sp, #48]	; 0x30
   20454:	str	r0, [sp, #44]	; 0x2c
   20458:	mov	r1, r2
   2045c:	bl	1dc34 <__mempcpy_chk@plt+0xc654>
   20460:	str	r0, [sp, #20]
   20464:	mov	sl, #0
   20468:	cmn	r0, #1
   2046c:	beq	20708 <__mempcpy_chk@plt+0xf128>
   20470:	str	sl, [sp, #56]	; 0x38
   20474:	str	r4, [sp, #24]
   20478:	ldr	r0, [r4, #4]
   2047c:	cmp	r0, #1
   20480:	blt	20708 <__mempcpy_chk@plt+0xf128>
   20484:	add	r0, r7, #1
   20488:	str	r0, [sp, #8]
   2048c:	add	r0, sp, #56	; 0x38
   20490:	add	r0, r0, #16
   20494:	str	r0, [sp, #28]
   20498:	ldr	r2, [sp, #52]	; 0x34
   2049c:	add	r0, r2, #16
   204a0:	str	r0, [sp, #32]
   204a4:	ldr	r0, [sp, #20]
   204a8:	add	r0, r0, r0, lsl #1
   204ac:	str	r0, [sp, #16]
   204b0:	lsl	r0, r0, #3
   204b4:	str	r0, [sp, #12]
   204b8:	mov	r1, #0
   204bc:	ldr	sl, [sp, #24]
   204c0:	ldr	r3, [sp, #48]	; 0x30
   204c4:	str	r7, [sp, #40]	; 0x28
   204c8:	b	204e0 <__mempcpy_chk@plt+0xef00>
   204cc:	ldr	r1, [sp, #36]	; 0x24
   204d0:	add	r1, r1, #1
   204d4:	ldr	r0, [sl, #4]
   204d8:	cmp	r1, r0
   204dc:	bge	206f0 <__mempcpy_chk@plt+0xf110>
   204e0:	ldr	r0, [sl, #8]
   204e4:	str	r1, [sp, #36]	; 0x24
   204e8:	ldr	r9, [r0, r1, lsl #2]
   204ec:	ldr	r0, [r3]
   204f0:	add	r0, r0, r9, lsl #3
   204f4:	ldrb	r0, [r0, #4]
   204f8:	ldr	r1, [r2, #8]
   204fc:	cmp	r9, r1
   20500:	bne	2051c <__mempcpy_chk@plt+0xef3c>
   20504:	cmp	r0, #4
   20508:	bne	204cc <__mempcpy_chk@plt+0xeeec>
   2050c:	ldr	r0, [r2, #12]
   20510:	cmp	r0, r7
   20514:	bne	20524 <__mempcpy_chk@plt+0xef44>
   20518:	b	204cc <__mempcpy_chk@plt+0xeeec>
   2051c:	cmp	r0, #4
   20520:	bne	204cc <__mempcpy_chk@plt+0xeeec>
   20524:	ldr	r0, [sp, #44]	; 0x2c
   20528:	ldr	r0, [r0, #116]	; 0x74
   2052c:	ldr	r1, [sp, #16]
   20530:	add	r5, r0, r1, lsl #3
   20534:	ldr	r4, [sp, #12]
   20538:	ldr	r8, [sp, #20]
   2053c:	b	2055c <__mempcpy_chk@plt+0xef7c>
   20540:	mov	r0, r5
   20544:	add	r4, r4, #24
   20548:	add	r5, r0, #24
   2054c:	add	r8, r8, #1
   20550:	ldrb	r0, [r0, #20]
   20554:	cmp	r0, #0
   20558:	beq	204cc <__mempcpy_chk@plt+0xeeec>
   2055c:	ldr	r0, [r5]
   20560:	cmp	r0, r9
   20564:	bne	20540 <__mempcpy_chk@plt+0xef60>
   20568:	ldr	r0, [r5, #8]
   2056c:	ldr	r1, [r5, #12]
   20570:	subs	r0, r1, r0
   20574:	add	r6, r0, r7
   20578:	beq	20588 <__mempcpy_chk@plt+0xefa8>
   2057c:	ldr	r0, [r3, #12]
   20580:	add	r0, r0, r9, lsl #2
   20584:	b	20598 <__mempcpy_chk@plt+0xefb8>
   20588:	ldr	r0, [r3, #20]
   2058c:	add	r1, r9, r9, lsl #1
   20590:	add	r0, r0, r1, lsl #2
   20594:	ldr	r0, [r0, #8]
   20598:	ldr	r1, [r2, #12]
   2059c:	cmp	r6, r1
   205a0:	bgt	20540 <__mempcpy_chk@plt+0xef60>
   205a4:	ldr	r1, [r2]
   205a8:	ldr	r1, [r1, r6, lsl #2]
   205ac:	cmp	r1, #0
   205b0:	beq	20540 <__mempcpy_chk@plt+0xef60>
   205b4:	ldr	r7, [r0]
   205b8:	add	r0, r1, #4
   205bc:	mov	r1, r7
   205c0:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   205c4:	cmp	r0, #0
   205c8:	beq	206dc <__mempcpy_chk@plt+0xf0fc>
   205cc:	str	r7, [sp]
   205d0:	str	r6, [sp, #4]
   205d4:	ldr	r0, [sp, #44]	; 0x2c
   205d8:	ldr	r1, [sp, #32]
   205dc:	mov	r2, r9
   205e0:	ldr	r7, [sp, #40]	; 0x28
   205e4:	mov	r3, r7
   205e8:	bl	20ac8 <__mempcpy_chk@plt+0xf4e8>
   205ec:	cmp	r0, #0
   205f0:	mov	r0, r5
   205f4:	ldr	r2, [sp, #52]	; 0x34
   205f8:	ldr	r3, [sp, #48]	; 0x30
   205fc:	bne	20544 <__mempcpy_chk@plt+0xef64>
   20600:	ldr	r0, [sp, #56]	; 0x38
   20604:	cmp	r0, #0
   20608:	bne	2063c <__mempcpy_chk@plt+0xf05c>
   2060c:	mov	r0, r2
   20610:	mov	r1, #12
   20614:	vld1.32	{d16-d17}, [r0], r1
   20618:	vld1.32	{d18-d19}, [r0]
   2061c:	add	r0, sp, #56	; 0x38
   20620:	vst1.64	{d16-d17}, [r0], r1
   20624:	vst1.32	{d18-d19}, [r0]
   20628:	ldr	r0, [sp, #28]
   2062c:	ldr	r1, [sp, #32]
   20630:	bl	1b53c <__mempcpy_chk@plt+0x9f5c>
   20634:	cmp	r0, #0
   20638:	bne	20714 <__mempcpy_chk@plt+0xf134>
   2063c:	str	r7, [sp, #68]	; 0x44
   20640:	str	r9, [sp, #64]	; 0x40
   20644:	ldr	r0, [sp, #28]
   20648:	mov	r1, r8
   2064c:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   20650:	cmp	r0, #0
   20654:	beq	2071c <__mempcpy_chk@plt+0xf13c>
   20658:	mov	r0, r7
   2065c:	ldr	r7, [sp, #56]	; 0x38
   20660:	ldr	r5, [r7, r0, lsl #2]
   20664:	ldr	r0, [sp, #44]	; 0x2c
   20668:	add	r1, sp, #56	; 0x38
   2066c:	bl	1fcd8 <__mempcpy_chk@plt+0xe6f8>
   20670:	cmp	r0, #0
   20674:	bne	20714 <__mempcpy_chk@plt+0xf134>
   20678:	ldr	r0, [sp, #52]	; 0x34
   2067c:	ldr	r1, [r0, #4]
   20680:	cmp	r1, #0
   20684:	beq	206a0 <__mempcpy_chk@plt+0xf0c0>
   20688:	ldr	r0, [sp, #48]	; 0x30
   2068c:	mov	r2, r7
   20690:	ldr	r3, [sp, #8]
   20694:	bl	1fdf0 <__mempcpy_chk@plt+0xe810>
   20698:	cmp	r0, #0
   2069c:	bne	20714 <__mempcpy_chk@plt+0xf134>
   206a0:	ldr	r0, [sp, #40]	; 0x28
   206a4:	str	r5, [r7, r0, lsl #2]
   206a8:	mov	r7, r0
   206ac:	ldr	r5, [sp, #28]
   206b0:	mov	r0, r5
   206b4:	mov	r1, r8
   206b8:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   206bc:	sub	r1, r0, #1
   206c0:	mov	r0, r5
   206c4:	bl	1b9cc <__mempcpy_chk@plt+0xa3ec>
   206c8:	ldr	r0, [sp, #44]	; 0x2c
   206cc:	ldr	r0, [r0, #116]	; 0x74
   206d0:	add	r0, r0, r4
   206d4:	ldr	sl, [sp, #24]
   206d8:	b	206e4 <__mempcpy_chk@plt+0xf104>
   206dc:	mov	r0, r5
   206e0:	ldr	r7, [sp, #40]	; 0x28
   206e4:	ldr	r2, [sp, #52]	; 0x34
   206e8:	ldr	r3, [sp, #48]	; 0x30
   206ec:	b	20544 <__mempcpy_chk@plt+0xef64>
   206f0:	mov	sl, #0
   206f4:	ldr	r0, [sp, #56]	; 0x38
   206f8:	cmp	r0, #0
   206fc:	beq	20708 <__mempcpy_chk@plt+0xf128>
   20700:	ldr	r0, [sp, #80]	; 0x50
   20704:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   20708:	mov	r0, sl
   2070c:	sub	sp, fp, #28
   20710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20714:	mov	sl, r0
   20718:	b	206f4 <__mempcpy_chk@plt+0xf114>
   2071c:	mov	sl, #12
   20720:	b	206f4 <__mempcpy_chk@plt+0xf114>
   20724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20728:	add	fp, sp, #28
   2072c:	sub	sp, sp, #4
   20730:	mov	r9, r2
   20734:	mov	r8, r0
   20738:	ldr	r2, [r1, #4]
   2073c:	mov	r0, #0
   20740:	cmp	r2, #0
   20744:	beq	20900 <__mempcpy_chk@plt+0xf320>
   20748:	mov	sl, r1
   2074c:	ldr	r1, [r9, #4]
   20750:	cmp	r1, #0
   20754:	beq	20900 <__mempcpy_chk@plt+0xf320>
   20758:	add	r0, r1, r2
   2075c:	ldm	r8, {r1, r2}
   20760:	add	r2, r2, r0
   20764:	cmp	r2, r1
   20768:	ble	2078c <__mempcpy_chk@plt+0xf1ac>
   2076c:	add	r4, r1, r0
   20770:	lsl	r1, r4, #2
   20774:	ldr	r0, [r8, #8]
   20778:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   2077c:	cmp	r0, #0
   20780:	beq	20908 <__mempcpy_chk@plt+0xf328>
   20784:	str	r4, [r8]
   20788:	str	r0, [r8, #8]
   2078c:	ldr	r1, [r8, #4]
   20790:	ldr	r6, [sl, #4]
   20794:	ldr	r0, [sl, #8]
   20798:	add	r3, r6, r1
   2079c:	ldr	r5, [r9, #4]
   207a0:	ldr	r2, [r9, #8]
   207a4:	add	ip, r3, r5
   207a8:	sub	r7, r1, #1
   207ac:	sub	r3, r5, #1
   207b0:	sub	r4, r6, #1
   207b4:	ldr	r1, [r2, r3, lsl #2]
   207b8:	ldr	r6, [r0, r4, lsl #2]
   207bc:	cmp	r6, r1
   207c0:	beq	207dc <__mempcpy_chk@plt+0xf1fc>
   207c4:	blt	2080c <__mempcpy_chk@plt+0xf22c>
   207c8:	sub	r1, r4, #1
   207cc:	cmp	r4, #0
   207d0:	mov	r4, r1
   207d4:	bgt	207b4 <__mempcpy_chk@plt+0xf1d4>
   207d8:	b	2085c <__mempcpy_chk@plt+0xf27c>
   207dc:	cmp	r7, #0
   207e0:	bmi	2083c <__mempcpy_chk@plt+0xf25c>
   207e4:	ldr	r5, [r8, #8]
   207e8:	mov	r1, r7
   207ec:	ldr	r7, [r5, r1, lsl #2]
   207f0:	cmp	r7, r6
   207f4:	ble	20818 <__mempcpy_chk@plt+0xf238>
   207f8:	sub	r7, r1, #1
   207fc:	cmp	r1, #0
   20800:	mov	r1, r7
   20804:	bgt	207ec <__mempcpy_chk@plt+0xf20c>
   20808:	b	2083c <__mempcpy_chk@plt+0xf25c>
   2080c:	subs	r3, r3, #1
   20810:	bge	207b4 <__mempcpy_chk@plt+0xf1d4>
   20814:	b	2085c <__mempcpy_chk@plt+0xf27c>
   20818:	ldr	r7, [r8, #8]
   2081c:	ldr	r7, [r7, r1, lsl #2]
   20820:	cmp	r7, r6
   20824:	mov	r7, r1
   20828:	bne	2083c <__mempcpy_chk@plt+0xf25c>
   2082c:	mov	r7, r1
   20830:	cmp	r4, #1
   20834:	bge	20850 <__mempcpy_chk@plt+0xf270>
   20838:	b	2085c <__mempcpy_chk@plt+0xf27c>
   2083c:	ldr	r1, [r8, #8]
   20840:	sub	ip, ip, #1
   20844:	str	r6, [r1, ip, lsl #2]
   20848:	cmp	r4, #1
   2084c:	blt	2085c <__mempcpy_chk@plt+0xf27c>
   20850:	subs	r3, r3, #1
   20854:	sub	r4, r4, #1
   20858:	bge	207b4 <__mempcpy_chk@plt+0xf1d4>
   2085c:	ldr	r1, [sl, #4]
   20860:	ldr	r7, [r8, #4]
   20864:	add	r0, r7, r1
   20868:	ldr	r3, [r9, #4]
   2086c:	add	r0, r0, r3
   20870:	sub	r0, r0, #1
   20874:	sub	r6, r0, ip
   20878:	add	r2, r6, #1
   2087c:	add	r5, r2, r7
   20880:	str	r5, [r8, #4]
   20884:	cmp	r7, #1
   20888:	blt	208ec <__mempcpy_chk@plt+0xf30c>
   2088c:	cmp	r6, #0
   20890:	bmi	208ec <__mempcpy_chk@plt+0xf30c>
   20894:	add	r3, r7, r3
   20898:	add	r1, r3, r1
   2089c:	sub	r3, r1, ip
   208a0:	ldr	r1, [r8, #8]
   208a4:	add	r3, r1, r3, lsl #2
   208a8:	sub	r7, r7, #1
   208ac:	ldr	r6, [r1, r7, lsl #2]
   208b0:	ldr	r5, [r1, r0, lsl #2]
   208b4:	cmp	r5, r6
   208b8:	bgt	208d4 <__mempcpy_chk@plt+0xf2f4>
   208bc:	str	r6, [r3, r7, lsl #2]
   208c0:	sub	r6, r7, #1
   208c4:	cmp	r7, #0
   208c8:	mov	r7, r6
   208cc:	bgt	208ac <__mempcpy_chk@plt+0xf2cc>
   208d0:	b	208ec <__mempcpy_chk@plt+0xf30c>
   208d4:	str	r5, [r3, r7, lsl #2]
   208d8:	sub	r3, r3, #4
   208dc:	subs	r2, r2, #1
   208e0:	sub	r0, r0, #1
   208e4:	bne	208ac <__mempcpy_chk@plt+0xf2cc>
   208e8:	mov	r2, #0
   208ec:	ldr	r0, [r8, #8]
   208f0:	add	r1, r0, ip, lsl #2
   208f4:	lsl	r2, r2, #2
   208f8:	bl	1134c <memcpy@plt>
   208fc:	mov	r0, #0
   20900:	sub	sp, fp, #28
   20904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20908:	mov	r0, #12
   2090c:	sub	sp, fp, #28
   20910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20918:	add	fp, sp, #28
   2091c:	sub	sp, sp, #28
   20920:	str	r3, [sp]
   20924:	mov	r6, r1
   20928:	str	r0, [sp, #12]
   2092c:	ldr	r0, [r0, #28]
   20930:	mov	r4, #0
   20934:	str	r4, [sp, #20]
   20938:	str	r4, [sp, #16]
   2093c:	str	r4, [sp, #24]
   20940:	add	r1, r1, r1, lsl #1
   20944:	add	r1, r0, r1, lsl #2
   20948:	mov	r8, r1
   2094c:	ldr	r0, [r8, #4]!
   20950:	cmp	r0, #1
   20954:	blt	20aac <__mempcpy_chk@plt+0xf4cc>
   20958:	str	r2, [sp, #4]
   2095c:	str	r1, [sp, #8]
   20960:	add	sl, r1, #8
   20964:	mov	r5, #0
   20968:	b	209b0 <__mempcpy_chk@plt+0xf3d0>
   2096c:	ldr	r0, [sp, #4]
   20970:	mov	r1, r9
   20974:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   20978:	cmp	r0, #0
   2097c:	beq	20a14 <__mempcpy_chk@plt+0xf434>
   20980:	ldr	r0, [sp, #12]
   20984:	ldr	r0, [r0, #28]
   20988:	add	r2, r0, r7, lsl #2
   2098c:	add	r0, sp, #16
   20990:	ldr	r1, [sp]
   20994:	bl	20724 <__mempcpy_chk@plt+0xf144>
   20998:	cmp	r0, #0
   2099c:	bne	20ac0 <__mempcpy_chk@plt+0xf4e0>
   209a0:	add	r5, r5, #1
   209a4:	ldr	r0, [r8]
   209a8:	cmp	r5, r0
   209ac:	bge	20a48 <__mempcpy_chk@plt+0xf468>
   209b0:	ldr	r0, [sl]
   209b4:	ldr	r0, [r0, r5, lsl #2]
   209b8:	cmp	r0, r6
   209bc:	beq	209a0 <__mempcpy_chk@plt+0xf3c0>
   209c0:	ldr	r1, [sp, #12]
   209c4:	ldr	r1, [r1]
   209c8:	add	r1, r1, r0, lsl #3
   209cc:	ldrb	r1, [r1, #4]
   209d0:	tst	r1, #8
   209d4:	beq	209a0 <__mempcpy_chk@plt+0xf3c0>
   209d8:	ldr	r1, [sp, #12]
   209dc:	ldr	r1, [r1, #20]
   209e0:	add	r7, r0, r0, lsl #1
   209e4:	add	r0, r1, r7, lsl #2
   209e8:	ldr	r1, [r0, #4]
   209ec:	ldr	r0, [r0, #8]
   209f0:	ldr	r9, [r0]
   209f4:	mvn	r4, #0
   209f8:	cmp	r1, #2
   209fc:	ldrge	r4, [r0, #4]
   20a00:	ldr	r0, [sp, #8]
   20a04:	mov	r1, r9
   20a08:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   20a0c:	cmp	r0, #0
   20a10:	beq	2096c <__mempcpy_chk@plt+0xf38c>
   20a14:	cmp	r4, #1
   20a18:	blt	209a0 <__mempcpy_chk@plt+0xf3c0>
   20a1c:	ldr	r0, [sp, #8]
   20a20:	mov	r1, r4
   20a24:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   20a28:	cmp	r0, #0
   20a2c:	bne	209a0 <__mempcpy_chk@plt+0xf3c0>
   20a30:	ldr	r0, [sp, #4]
   20a34:	mov	r1, r4
   20a38:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   20a3c:	cmp	r0, #0
   20a40:	bne	20980 <__mempcpy_chk@plt+0xf3a0>
   20a44:	b	209a0 <__mempcpy_chk@plt+0xf3c0>
   20a48:	cmp	r0, #1
   20a4c:	blt	20aa8 <__mempcpy_chk@plt+0xf4c8>
   20a50:	mov	r6, #0
   20a54:	add	r4, sp, #16
   20a58:	ldr	r7, [sp, #4]
   20a5c:	b	20a70 <__mempcpy_chk@plt+0xf490>
   20a60:	add	r6, r6, #1
   20a64:	ldr	r0, [r8]
   20a68:	cmp	r6, r0
   20a6c:	bge	20aa8 <__mempcpy_chk@plt+0xf4c8>
   20a70:	ldr	r0, [sl]
   20a74:	ldr	r5, [r0, r6, lsl #2]
   20a78:	mov	r0, r4
   20a7c:	mov	r1, r5
   20a80:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   20a84:	cmp	r0, #0
   20a88:	bne	20a60 <__mempcpy_chk@plt+0xf480>
   20a8c:	mov	r0, r7
   20a90:	mov	r1, r5
   20a94:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   20a98:	sub	r1, r0, #1
   20a9c:	mov	r0, r7
   20aa0:	bl	1b9cc <__mempcpy_chk@plt+0xa3ec>
   20aa4:	b	20a60 <__mempcpy_chk@plt+0xf480>
   20aa8:	mov	r4, #0
   20aac:	ldr	r0, [sp, #24]
   20ab0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   20ab4:	mov	r0, r4
   20ab8:	sub	sp, fp, #28
   20abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ac0:	mov	r4, r0
   20ac4:	b	20aac <__mempcpy_chk@plt+0xf4cc>
   20ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20acc:	add	fp, sp, #28
   20ad0:	sub	sp, sp, #20
   20ad4:	str	r2, [sp, #12]
   20ad8:	mov	r6, r1
   20adc:	mov	r7, r0
   20ae0:	str	r3, [sp, #16]
   20ae4:	mov	r1, r3
   20ae8:	bl	1dc34 <__mempcpy_chk@plt+0xc654>
   20aec:	str	r0, [sp, #8]
   20af0:	ldr	r1, [fp, #12]
   20af4:	mov	r0, r7
   20af8:	bl	1dc34 <__mempcpy_chk@plt+0xc654>
   20afc:	mov	r4, r0
   20b00:	ldr	r0, [r6, #4]
   20b04:	cmp	r0, #1
   20b08:	blt	20b8c <__mempcpy_chk@plt+0xf5ac>
   20b0c:	ldr	sl, [r7, #84]	; 0x54
   20b10:	mov	r5, #0
   20b14:	ldr	r0, [r6, #8]
   20b18:	ldr	r1, [r0, r5, lsl #2]
   20b1c:	add	r0, r1, r1, lsl #1
   20b20:	ldr	r2, [r7, #116]	; 0x74
   20b24:	ldr	r0, [r2, r0, lsl #3]
   20b28:	ldr	r2, [sl]
   20b2c:	ldr	r9, [r2, r0, lsl #3]
   20b30:	ldr	r0, [sp, #16]
   20b34:	str	r0, [sp]
   20b38:	ldr	r0, [sp, #8]
   20b3c:	str	r0, [sp, #4]
   20b40:	mov	r0, r7
   20b44:	mov	r2, r9
   20b48:	ldr	r3, [sp, #12]
   20b4c:	bl	20ba4 <__mempcpy_chk@plt+0xf5c4>
   20b50:	mov	r8, r0
   20b54:	ldr	r0, [r6, #8]
   20b58:	ldr	r1, [r0, r5, lsl #2]
   20b5c:	ldr	r0, [fp, #12]
   20b60:	stm	sp, {r0, r4}
   20b64:	mov	r0, r7
   20b68:	mov	r2, r9
   20b6c:	ldr	r3, [fp, #8]
   20b70:	bl	20ba4 <__mempcpy_chk@plt+0xf5c4>
   20b74:	cmp	r0, r8
   20b78:	bne	20b98 <__mempcpy_chk@plt+0xf5b8>
   20b7c:	add	r5, r5, #1
   20b80:	ldr	r0, [r6, #4]
   20b84:	cmp	r5, r0
   20b88:	blt	20b14 <__mempcpy_chk@plt+0xf534>
   20b8c:	mov	r0, #0
   20b90:	sub	sp, fp, #28
   20b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b98:	mov	r0, #1
   20b9c:	sub	sp, fp, #28
   20ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ba4:	push	{r4, r5, fp, lr}
   20ba8:	add	fp, sp, #8
   20bac:	sub	sp, sp, #8
   20bb0:	ldr	r4, [r0, #116]	; 0x74
   20bb4:	add	r1, r1, r1, lsl #1
   20bb8:	add	r4, r4, r1, lsl #3
   20bbc:	ldr	ip, [r4, #8]
   20bc0:	mvn	r1, #0
   20bc4:	ldr	lr, [fp, #8]
   20bc8:	cmp	ip, lr
   20bcc:	bgt	20c1c <__mempcpy_chk@plt+0xf63c>
   20bd0:	ldr	r4, [r4, #12]
   20bd4:	mov	r1, #1
   20bd8:	cmp	r4, lr
   20bdc:	blt	20c1c <__mempcpy_chk@plt+0xf63c>
   20be0:	sub	r1, r4, lr
   20be4:	clz	r1, r1
   20be8:	lsr	r4, r1, #5
   20bec:	mov	r5, #1
   20bf0:	lsl	r1, r4, #1
   20bf4:	cmp	ip, lr
   20bf8:	orreq	r1, r5, r4, lsl #1
   20bfc:	cmp	r1, #0
   20c00:	beq	20c18 <__mempcpy_chk@plt+0xf638>
   20c04:	ldr	r5, [fp, #12]
   20c08:	str	r5, [sp]
   20c0c:	bl	20c28 <__mempcpy_chk@plt+0xf648>
   20c10:	sub	sp, fp, #8
   20c14:	pop	{r4, r5, fp, pc}
   20c18:	mov	r1, #0
   20c1c:	mov	r0, r1
   20c20:	sub	sp, fp, #8
   20c24:	pop	{r4, r5, fp, pc}
   20c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c2c:	add	fp, sp, #28
   20c30:	sub	sp, sp, #36	; 0x24
   20c34:	mov	r6, r2
   20c38:	mov	r5, r1
   20c3c:	mov	r7, r0
   20c40:	ldr	r4, [r0, #84]	; 0x54
   20c44:	ldr	r0, [r4, #24]
   20c48:	str	r3, [sp, #32]
   20c4c:	add	r1, r3, r3, lsl #1
   20c50:	add	r0, r0, r1, lsl #2
   20c54:	mov	r2, r0
   20c58:	ldr	r1, [r2, #4]!
   20c5c:	str	r2, [sp, #24]
   20c60:	cmp	r1, #1
   20c64:	blt	20e0c <__mempcpy_chk@plt+0xf82c>
   20c68:	mov	r1, #1
   20c6c:	mvn	r2, r1, lsl r6
   20c70:	str	r2, [sp, #16]
   20c74:	lsl	r1, r1, r6
   20c78:	str	r1, [sp, #20]
   20c7c:	mov	sl, #0
   20c80:	cmp	r6, #31
   20c84:	mov	r1, #0
   20c88:	movwgt	r1, #1
   20c8c:	and	r2, r5, #2
   20c90:	str	r2, [sp, #8]
   20c94:	orr	r1, r1, r2, lsr #1
   20c98:	str	r1, [sp, #12]
   20c9c:	add	r0, r0, #8
   20ca0:	str	r0, [sp, #28]
   20ca4:	and	r0, r5, #1
   20ca8:	str	r0, [sp, #4]
   20cac:	b	20cc4 <__mempcpy_chk@plt+0xf6e4>
   20cb0:	ldr	r0, [sp, #24]
   20cb4:	ldr	r0, [r0]
   20cb8:	add	sl, sl, #1
   20cbc:	cmp	sl, r0
   20cc0:	bge	20e0c <__mempcpy_chk@plt+0xf82c>
   20cc4:	ldr	r0, [sp, #28]
   20cc8:	ldr	r0, [r0]
   20ccc:	ldr	r8, [r0, sl, lsl #2]
   20cd0:	ldr	r0, [r4]
   20cd4:	add	r1, r0, r8, lsl #3
   20cd8:	ldrb	r1, [r1, #4]
   20cdc:	cmp	r1, #9
   20ce0:	beq	20dcc <__mempcpy_chk@plt+0xf7ec>
   20ce4:	cmp	r1, #8
   20ce8:	beq	20de8 <__mempcpy_chk@plt+0xf808>
   20cec:	cmp	r1, #4
   20cf0:	bne	20cb0 <__mempcpy_chk@plt+0xf6d0>
   20cf4:	ldr	r0, [fp, #8]
   20cf8:	cmn	r0, #1
   20cfc:	beq	20cb0 <__mempcpy_chk@plt+0xf6d0>
   20d00:	ldr	r0, [r7, #116]	; 0x74
   20d04:	ldr	r1, [fp, #8]
   20d08:	add	r1, r1, r1, lsl #1
   20d0c:	add	r0, r0, r1, lsl #3
   20d10:	add	r9, r0, #16
   20d14:	b	20d38 <__mempcpy_chk@plt+0xf758>
   20d18:	ldr	r0, [r9]
   20d1c:	ldr	r1, [sp, #16]
   20d20:	and	r0, r0, r1
   20d24:	str	r0, [r9]
   20d28:	ldrb	r0, [r9, #4]
   20d2c:	add	r9, r9, #24
   20d30:	cmp	r0, #0
   20d34:	beq	20cb0 <__mempcpy_chk@plt+0xf6d0>
   20d38:	ldr	r0, [r9, #-16]
   20d3c:	cmp	r0, r8
   20d40:	bne	20d28 <__mempcpy_chk@plt+0xf748>
   20d44:	cmp	r6, #31
   20d48:	bgt	20d5c <__mempcpy_chk@plt+0xf77c>
   20d4c:	ldr	r0, [r9]
   20d50:	ldr	r1, [sp, #20]
   20d54:	tst	r0, r1
   20d58:	beq	20d28 <__mempcpy_chk@plt+0xf748>
   20d5c:	ldr	r0, [r4, #20]
   20d60:	add	r1, r8, r8, lsl #1
   20d64:	add	r0, r0, r1, lsl #2
   20d68:	ldr	r0, [r0, #8]
   20d6c:	ldr	r3, [r0]
   20d70:	ldr	r0, [sp, #32]
   20d74:	cmp	r3, r0
   20d78:	beq	20e18 <__mempcpy_chk@plt+0xf838>
   20d7c:	ldr	r0, [fp, #8]
   20d80:	str	r0, [sp]
   20d84:	mov	r0, r7
   20d88:	mov	r1, r5
   20d8c:	mov	r2, r6
   20d90:	bl	20c28 <__mempcpy_chk@plt+0xf648>
   20d94:	cmp	r0, #0
   20d98:	beq	20db0 <__mempcpy_chk@plt+0xf7d0>
   20d9c:	cmn	r0, #1
   20da0:	beq	20e2c <__mempcpy_chk@plt+0xf84c>
   20da4:	cmp	r6, #31
   20da8:	ble	20d18 <__mempcpy_chk@plt+0xf738>
   20dac:	b	20d28 <__mempcpy_chk@plt+0xf748>
   20db0:	ldr	r0, [sp, #12]
   20db4:	cmp	r0, #0
   20db8:	beq	20d18 <__mempcpy_chk@plt+0xf738>
   20dbc:	ldr	r0, [sp, #8]
   20dc0:	cmp	r0, #0
   20dc4:	beq	20d28 <__mempcpy_chk@plt+0xf748>
   20dc8:	b	20e28 <__mempcpy_chk@plt+0xf848>
   20dcc:	ldr	r1, [sp, #8]
   20dd0:	cmp	r1, #0
   20dd4:	beq	20cb0 <__mempcpy_chk@plt+0xf6d0>
   20dd8:	ldr	r0, [r0, r8, lsl #3]
   20ddc:	cmp	r0, r6
   20de0:	bne	20cb0 <__mempcpy_chk@plt+0xf6d0>
   20de4:	b	20e28 <__mempcpy_chk@plt+0xf848>
   20de8:	ldr	r1, [sp, #4]
   20dec:	cmp	r1, #0
   20df0:	beq	20cb0 <__mempcpy_chk@plt+0xf6d0>
   20df4:	ldr	r0, [r0, r8, lsl #3]
   20df8:	cmp	r0, r6
   20dfc:	bne	20cb0 <__mempcpy_chk@plt+0xf6d0>
   20e00:	mvn	r0, #0
   20e04:	sub	sp, fp, #28
   20e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e0c:	ubfx	r0, r5, #1, #1
   20e10:	sub	sp, fp, #28
   20e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e18:	ldr	r0, [sp, #4]
   20e1c:	rsb	r0, r0, #0
   20e20:	sub	sp, fp, #28
   20e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e28:	mov	r0, #0
   20e2c:	sub	sp, fp, #28
   20e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20e38:	add	fp, sp, #24
   20e3c:	mov	r7, r3
   20e40:	mov	r5, r2
   20e44:	mov	r8, r1
   20e48:	mov	r2, r0
   20e4c:	ldr	r6, [r0, #84]	; 0x54
   20e50:	mov	r0, r6
   20e54:	mov	r1, r5
   20e58:	bl	1ec14 <__mempcpy_chk@plt+0xd634>
   20e5c:	mov	r4, r0
   20e60:	cmp	r0, #1
   20e64:	blt	20ea0 <__mempcpy_chk@plt+0xf8c0>
   20e68:	ldr	r1, [fp, #8]
   20e6c:	add	r0, r4, r7
   20e70:	cmp	r0, r1
   20e74:	bgt	20ea0 <__mempcpy_chk@plt+0xf8c0>
   20e78:	ldr	r1, [r8]
   20e7c:	ldr	r0, [r1, r0, lsl #2]
   20e80:	cmp	r0, #0
   20e84:	beq	20ea8 <__mempcpy_chk@plt+0xf8c8>
   20e88:	ldr	r1, [r6, #12]
   20e8c:	ldr	r1, [r1, r5, lsl #2]
   20e90:	add	r0, r0, #4
   20e94:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   20e98:	cmp	r0, #0
   20e9c:	moveq	r4, #0
   20ea0:	mov	r0, r4
   20ea4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20ea8:	mov	r4, #0
   20eac:	mov	r0, r4
   20eb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20eb4:	mov	r1, #16
   20eb8:	mov	r2, #0
   20ebc:	add	r3, r0, #12
   20ec0:	str	r2, [r0]
   20ec4:	stmib	r0, {r1, r3}
   20ec8:	bx	lr
   20ecc:	push	{r4, sl, fp, lr}
   20ed0:	add	fp, sp, #8
   20ed4:	mov	r4, r0
   20ed8:	ldr	r0, [r0]
   20edc:	cmp	r0, r1
   20ee0:	bcs	20f14 <__mempcpy_chk@plt+0xf934>
   20ee4:	add	r2, r4, #12
   20ee8:	mov	r0, r4
   20eec:	mov	r3, #8
   20ef0:	bl	22414 <__mempcpy_chk@plt+0x10e34>
   20ef4:	mov	r1, r0
   20ef8:	mov	r0, #1
   20efc:	cmp	r1, #0
   20f00:	popne	{r4, sl, fp, pc}
   20f04:	mov	r0, r4
   20f08:	bl	21424 <__mempcpy_chk@plt+0xfe44>
   20f0c:	mov	r0, #0
   20f10:	pop	{r4, sl, fp, pc}
   20f14:	str	r1, [r4]
   20f18:	mov	r0, #1
   20f1c:	pop	{r4, sl, fp, pc}
   20f20:	push	{r4, sl, fp, lr}
   20f24:	add	fp, sp, #8
   20f28:	mov	r4, r0
   20f2c:	bl	2144c <__mempcpy_chk@plt+0xfe6c>
   20f30:	mov	r0, r4
   20f34:	pop	{r4, sl, fp, lr}
   20f38:	b	20eb4 <__mempcpy_chk@plt+0xf8d4>
   20f3c:	cmp	r0, #0
   20f40:	bxeq	lr
   20f44:	push	{r4, r5, r6, sl, fp, lr}
   20f48:	add	fp, sp, #16
   20f4c:	mov	r4, r0
   20f50:	ldr	r1, [r0]
   20f54:	ldr	r0, [r0, #8]
   20f58:	cmp	r1, #1
   20f5c:	blt	20f9c <__mempcpy_chk@plt+0xf9bc>
   20f60:	mov	r5, #0
   20f64:	mov	r6, #0
   20f68:	add	r0, r0, r5
   20f6c:	ldr	r0, [r0, #20]
   20f70:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   20f74:	ldr	r0, [r4, #8]
   20f78:	add	r0, r0, r5
   20f7c:	ldr	r0, [r0, #8]
   20f80:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   20f84:	add	r5, r5, #24
   20f88:	add	r6, r6, #1
   20f8c:	ldr	r1, [r4]
   20f90:	ldr	r0, [r4, #8]
   20f94:	cmp	r6, r1
   20f98:	blt	20f68 <__mempcpy_chk@plt+0xf988>
   20f9c:	pop	{r4, r5, r6, sl, fp, lr}
   20fa0:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   20fa4:	ldr	r0, [r0, #8]
   20fa8:	bx	lr
   20fac:	push	{r4, r5, fp, lr}
   20fb0:	add	fp, sp, #8
   20fb4:	ldr	r4, [r0]
   20fb8:	add	r0, r4, r3, lsl #3
   20fbc:	ldr	r0, [r0, #4]
   20fc0:	uxtb	r5, r0
   20fc4:	ldr	lr, [fp, #12]
   20fc8:	ldr	ip, [fp, #8]
   20fcc:	cmp	r5, #9
   20fd0:	beq	20ffc <__mempcpy_chk@plt+0xfa1c>
   20fd4:	cmp	r5, #8
   20fd8:	bne	21060 <__mempcpy_chk@plt+0xfa80>
   20fdc:	ldr	r0, [r4, r3, lsl #3]
   20fe0:	add	r0, r0, #1
   20fe4:	cmp	r0, lr
   20fe8:	bge	21060 <__mempcpy_chk@plt+0xfa80>
   20fec:	str	ip, [r1, r0, lsl #3]!
   20ff0:	mvn	r0, #0
   20ff4:	str	r0, [r1, #4]
   20ff8:	pop	{r4, r5, fp, pc}
   20ffc:	ldr	r3, [r4, r3, lsl #3]
   21000:	add	r3, r3, #1
   21004:	cmp	r3, lr
   21008:	popge	{r4, r5, fp, pc}
   2100c:	ldr	r4, [r1, r3, lsl #3]
   21010:	cmp	r4, ip
   21014:	bge	2102c <__mempcpy_chk@plt+0xfa4c>
   21018:	add	r0, r1, r3, lsl #3
   2101c:	str	ip, [r0, #4]
   21020:	lsl	r3, lr, #3
   21024:	mov	r0, r2
   21028:	b	2104c <__mempcpy_chk@plt+0xfa6c>
   2102c:	tst	r0, #524288	; 0x80000
   21030:	beq	21058 <__mempcpy_chk@plt+0xfa78>
   21034:	ldr	r0, [r2, r3, lsl #3]
   21038:	cmn	r0, #1
   2103c:	beq	21058 <__mempcpy_chk@plt+0xfa78>
   21040:	lsl	r3, lr, #3
   21044:	mov	r0, r1
   21048:	mov	r1, r2
   2104c:	mov	r2, r3
   21050:	pop	{r4, r5, fp, lr}
   21054:	b	1134c <memcpy@plt>
   21058:	add	r0, r1, r3, lsl #3
   2105c:	str	ip, [r0, #4]
   21060:	pop	{r4, r5, fp, pc}
   21064:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21068:	add	fp, sp, #24
   2106c:	mov	r4, r0
   21070:	mvn	r0, #0
   21074:	cmp	r4, #0
   21078:	beq	21118 <__mempcpy_chk@plt+0xfb38>
   2107c:	mov	r5, r2
   21080:	ldr	r2, [r4]
   21084:	cmp	r2, #0
   21088:	beq	21118 <__mempcpy_chk@plt+0xfb38>
   2108c:	ldr	r9, [fp, #12]
   21090:	ldr	r8, [fp, #8]
   21094:	sub	r0, r2, #1
   21098:	str	r0, [r4]
   2109c:	ldr	r2, [r4, #8]
   210a0:	add	r6, r0, r0, lsl #1
   210a4:	ldr	r0, [r2, r6, lsl #3]!
   210a8:	str	r0, [r1]
   210ac:	ldr	r1, [r2, #8]
   210b0:	lsl	r7, r5, #3
   210b4:	mov	r0, r3
   210b8:	mov	r2, r7
   210bc:	bl	1134c <memcpy@plt>
   210c0:	ldr	r0, [r4, #8]
   210c4:	add	r0, r0, r6, lsl #3
   210c8:	ldr	r0, [r0, #8]
   210cc:	add	r1, r0, r5, lsl #3
   210d0:	mov	r0, r8
   210d4:	mov	r2, r7
   210d8:	bl	1134c <memcpy@plt>
   210dc:	ldr	r0, [r9, #8]
   210e0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   210e4:	ldr	r0, [r4, #8]
   210e8:	add	r0, r0, r6, lsl #3
   210ec:	ldr	r0, [r0, #8]
   210f0:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   210f4:	ldr	r0, [r4, #8]
   210f8:	add	r0, r0, r6, lsl #3
   210fc:	vldr	d16, [r0, #12]
   21100:	ldr	r0, [r0, #20]
   21104:	str	r0, [r9, #8]
   21108:	vstr	d16, [r9]
   2110c:	ldr	r0, [r4, #8]
   21110:	add	r0, r0, r6, lsl #3
   21114:	ldr	r0, [r0, #4]
   21118:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2111c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21120:	add	fp, sp, #28
   21124:	sub	sp, sp, #20
   21128:	mov	r9, r3
   2112c:	mov	r5, r0
   21130:	ldr	r4, [r0, #84]	; 0x54
   21134:	ldr	r3, [r4]
   21138:	ldr	sl, [fp, #12]
   2113c:	add	r0, r3, sl, lsl #3
   21140:	ldr	r7, [r0, #4]
   21144:	ldr	r0, [fp, #16]
   21148:	ldr	r6, [fp, #8]
   2114c:	tst	r7, #8
   21150:	bne	21210 <__mempcpy_chk@plt+0xfc30>
   21154:	tst	r7, #1048576	; 0x100000
   21158:	bne	21304 <__mempcpy_chk@plt+0xfd24>
   2115c:	mov	ip, r1
   21160:	mov	r9, r6
   21164:	uxtb	r1, r7
   21168:	cmp	r1, #4
   2116c:	bne	21328 <__mempcpy_chk@plt+0xfd48>
   21170:	ldr	r0, [r3, sl, lsl #3]
   21174:	add	r0, r0, #1
   21178:	mov	r7, #0
   2117c:	mov	r6, ip
   21180:	cmp	r0, ip
   21184:	mov	r3, r2
   21188:	bge	2119c <__mempcpy_chk@plt+0xfbbc>
   2118c:	mov	r1, r3
   21190:	ldr	r2, [r1, r0, lsl #3]!
   21194:	ldr	r1, [r1, #4]
   21198:	sub	r7, r1, r2
   2119c:	ldr	r1, [fp, #20]
   211a0:	cmp	r1, #0
   211a4:	beq	21358 <__mempcpy_chk@plt+0xfd78>
   211a8:	mvn	r8, #0
   211ac:	cmp	r0, r6
   211b0:	bge	213c4 <__mempcpy_chk@plt+0xfde4>
   211b4:	ldr	r1, [r3, r0, lsl #3]
   211b8:	cmn	r1, #1
   211bc:	beq	213c4 <__mempcpy_chk@plt+0xfde4>
   211c0:	add	r0, r3, r0, lsl #3
   211c4:	ldr	r0, [r0, #4]
   211c8:	cmn	r0, #1
   211cc:	beq	213c4 <__mempcpy_chk@plt+0xfde4>
   211d0:	cmp	r7, #0
   211d4:	beq	213d0 <__mempcpy_chk@plt+0xfdf0>
   211d8:	mov	r0, r9
   211dc:	ldr	r2, [r9]
   211e0:	ldr	r0, [r5, #28]
   211e4:	sub	r0, r0, r2
   211e8:	cmp	r0, r7
   211ec:	blt	213c4 <__mempcpy_chk@plt+0xfde4>
   211f0:	ldr	r3, [r5, #4]
   211f4:	add	r0, r3, r1
   211f8:	add	r1, r3, r2
   211fc:	mov	r2, r7
   21200:	bl	114c0 <bcmp@plt>
   21204:	cmp	r0, #0
   21208:	bne	213c4 <__mempcpy_chk@plt+0xfde4>
   2120c:	b	21360 <__mempcpy_chk@plt+0xfd80>
   21210:	str	r1, [sp, #12]
   21214:	str	r2, [sp, #16]
   21218:	ldr	r2, [r6]
   2121c:	ldr	r1, [r5, #100]	; 0x64
   21220:	ldr	r5, [r1, r2, lsl #2]
   21224:	ldr	r4, [r4, #20]
   21228:	mov	r1, sl
   2122c:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   21230:	cmp	r0, #0
   21234:	bne	21250 <__mempcpy_chk@plt+0xfc70>
   21238:	ldr	r0, [fp, #16]
   2123c:	mov	r1, sl
   21240:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   21244:	mvn	r8, #1
   21248:	cmp	r0, #0
   2124c:	beq	213c4 <__mempcpy_chk@plt+0xfde4>
   21250:	add	r0, sl, sl, lsl #1
   21254:	add	r1, r4, r0, lsl #2
   21258:	mov	r0, r1
   2125c:	ldr	r2, [r0, #4]!
   21260:	cmp	r2, #1
   21264:	blt	21350 <__mempcpy_chk@plt+0xfd70>
   21268:	add	sl, r5, #4
   2126c:	ldr	r7, [r1, #8]
   21270:	ldr	r6, [r0]
   21274:	mov	r5, #0
   21278:	mvn	r8, #0
   2127c:	b	21290 <__mempcpy_chk@plt+0xfcb0>
   21280:	mov	r8, r4
   21284:	add	r5, r5, #1
   21288:	cmp	r5, r6
   2128c:	bge	213c4 <__mempcpy_chk@plt+0xfde4>
   21290:	ldr	r4, [r7, r5, lsl #2]
   21294:	mov	r0, sl
   21298:	mov	r1, r4
   2129c:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   212a0:	cmp	r0, #0
   212a4:	beq	21284 <__mempcpy_chk@plt+0xfca4>
   212a8:	cmn	r8, #1
   212ac:	beq	21280 <__mempcpy_chk@plt+0xfca0>
   212b0:	ldr	r5, [fp, #16]
   212b4:	mov	r0, r5
   212b8:	mov	r1, r8
   212bc:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   212c0:	cmp	r0, #0
   212c4:	bne	213c0 <__mempcpy_chk@plt+0xfde0>
   212c8:	ldr	r0, [fp, #20]
   212cc:	cmp	r0, #0
   212d0:	beq	213c4 <__mempcpy_chk@plt+0xfde4>
   212d4:	ldr	r1, [fp, #8]
   212d8:	ldr	r1, [r1]
   212dc:	ldr	r2, [sp, #16]
   212e0:	stm	sp, {r2, r9}
   212e4:	str	r5, [sp, #8]
   212e8:	mov	r2, r4
   212ec:	ldr	r3, [sp, #12]
   212f0:	bl	21464 <__mempcpy_chk@plt+0xfe84>
   212f4:	mvn	r4, #1
   212f8:	cmp	r0, #0
   212fc:	movne	r8, r4
   21300:	b	213c4 <__mempcpy_chk@plt+0xfde4>
   21304:	mov	r9, r6
   21308:	ldr	r3, [r6]
   2130c:	mov	r0, r4
   21310:	mov	r1, sl
   21314:	mov	r2, r5
   21318:	bl	1ec14 <__mempcpy_chk@plt+0xd634>
   2131c:	mov	r7, r0
   21320:	cmp	r0, #0
   21324:	bne	21360 <__mempcpy_chk@plt+0xfd80>
   21328:	ldr	r0, [r4]
   2132c:	add	r1, r0, sl, lsl #3
   21330:	ldr	r2, [r9]
   21334:	mov	r0, r5
   21338:	bl	1eef0 <__mempcpy_chk@plt+0xd910>
   2133c:	mvn	r8, #0
   21340:	mov	r7, #1
   21344:	cmp	r0, #0
   21348:	bne	21360 <__mempcpy_chk@plt+0xfd80>
   2134c:	b	213c4 <__mempcpy_chk@plt+0xfde4>
   21350:	mvn	r8, #0
   21354:	b	213c4 <__mempcpy_chk@plt+0xfde4>
   21358:	cmp	r7, #0
   2135c:	beq	213d0 <__mempcpy_chk@plt+0xfdf0>
   21360:	ldr	r0, [r4, #12]
   21364:	ldr	r4, [r0, sl, lsl #2]
   21368:	ldr	r0, [r9]
   2136c:	add	r0, r0, r7
   21370:	str	r0, [r9]
   21374:	ldr	r1, [fp, #20]
   21378:	cmp	r1, #0
   2137c:	beq	213b4 <__mempcpy_chk@plt+0xfdd4>
   21380:	ldr	r1, [r5, #92]	; 0x5c
   21384:	mvn	r8, #0
   21388:	cmp	r0, r1
   2138c:	bgt	213c4 <__mempcpy_chk@plt+0xfde4>
   21390:	ldr	r1, [r5, #100]	; 0x64
   21394:	ldr	r0, [r1, r0, lsl #2]
   21398:	cmp	r0, #0
   2139c:	beq	213c4 <__mempcpy_chk@plt+0xfde4>
   213a0:	add	r0, r0, #4
   213a4:	mov	r1, r4
   213a8:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   213ac:	cmp	r0, #0
   213b0:	beq	213c4 <__mempcpy_chk@plt+0xfde4>
   213b4:	mov	r0, #0
   213b8:	ldr	r1, [fp, #16]
   213bc:	str	r0, [r1, #4]
   213c0:	mov	r8, r4
   213c4:	mov	r0, r8
   213c8:	sub	sp, fp, #28
   213cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   213d0:	ldr	r0, [fp, #16]
   213d4:	mov	r1, sl
   213d8:	bl	1b350 <__mempcpy_chk@plt+0x9d70>
   213dc:	cmp	r0, #0
   213e0:	beq	2141c <__mempcpy_chk@plt+0xfe3c>
   213e4:	ldr	r0, [r4, #20]
   213e8:	add	r1, sl, sl, lsl #1
   213ec:	add	r0, r0, r1, lsl #2
   213f0:	ldr	r0, [r0, #8]
   213f4:	ldr	r8, [r0]
   213f8:	ldr	r0, [r9]
   213fc:	ldr	r1, [r5, #100]	; 0x64
   21400:	ldr	r0, [r1, r0, lsl #2]
   21404:	add	r0, r0, #4
   21408:	mov	r1, r8
   2140c:	bl	1b5b8 <__mempcpy_chk@plt+0x9fd8>
   21410:	cmp	r0, #0
   21414:	bne	213c4 <__mempcpy_chk@plt+0xfde4>
   21418:	b	21328 <__mempcpy_chk@plt+0xfd48>
   2141c:	mvn	r8, #1
   21420:	b	213c4 <__mempcpy_chk@plt+0xfde4>
   21424:	push	{r4, sl, fp, lr}
   21428:	add	fp, sp, #8
   2142c:	mov	r4, r0
   21430:	bl	2144c <__mempcpy_chk@plt+0xfe6c>
   21434:	mvn	r0, #0
   21438:	mov	r1, #0
   2143c:	add	r2, r4, #12
   21440:	str	r1, [r4]
   21444:	stmib	r4, {r0, r2}
   21448:	pop	{r4, sl, fp, pc}
   2144c:	mov	r1, r0
   21450:	ldr	r0, [r0, #8]
   21454:	add	r1, r1, #12
   21458:	cmp	r0, r1
   2145c:	bxeq	lr
   21460:	b	12b88 <__mempcpy_chk@plt+0x15a8>
   21464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21468:	add	fp, sp, #28
   2146c:	sub	sp, sp, #12
   21470:	mov	r6, r3
   21474:	mov	r9, r2
   21478:	mov	r5, r1
   2147c:	mov	r4, r0
   21480:	ldr	r7, [r0]
   21484:	ldr	r1, [r0, #4]
   21488:	add	r0, r7, #1
   2148c:	str	r0, [r4]
   21490:	ldr	r2, [fp, #16]
   21494:	str	r2, [sp, #8]
   21498:	ldr	r2, [fp, #12]
   2149c:	str	r2, [sp, #4]
   214a0:	ldr	sl, [fp, #8]
   214a4:	cmp	r0, r1
   214a8:	bne	214d4 <__mempcpy_chk@plt+0xfef4>
   214ac:	ldr	r0, [r4, #8]
   214b0:	add	r1, r1, r1, lsl #1
   214b4:	lsl	r1, r1, #4
   214b8:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   214bc:	cmp	r0, #0
   214c0:	beq	21548 <__mempcpy_chk@plt+0xff68>
   214c4:	str	r0, [r4, #8]
   214c8:	ldr	r0, [r4, #4]
   214cc:	lsl	r0, r0, #1
   214d0:	str	r0, [r4, #4]
   214d4:	ldr	r0, [r4, #8]
   214d8:	add	r8, r7, r7, lsl #1
   214dc:	str	r5, [r0, r8, lsl #3]!
   214e0:	str	r9, [r0, #4]
   214e4:	lsl	r0, r6, #4
   214e8:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   214ec:	ldr	r1, [r4, #8]
   214f0:	add	r1, r1, r8, lsl #3
   214f4:	str	r0, [r1, #8]
   214f8:	cmp	r0, #0
   214fc:	beq	21548 <__mempcpy_chk@plt+0xff68>
   21500:	lsl	r5, r6, #3
   21504:	mov	r1, sl
   21508:	mov	r2, r5
   2150c:	bl	1134c <memcpy@plt>
   21510:	ldr	r0, [r4, #8]
   21514:	add	r0, r0, r8, lsl #3
   21518:	ldr	r0, [r0, #8]
   2151c:	add	r0, r0, r6, lsl #3
   21520:	ldr	r1, [sp, #4]
   21524:	mov	r2, r5
   21528:	bl	1134c <memcpy@plt>
   2152c:	ldr	r0, [r4, #8]
   21530:	add	r0, r0, r8, lsl #3
   21534:	add	r0, r0, #12
   21538:	ldr	r1, [sp, #8]
   2153c:	sub	sp, fp, #28
   21540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21544:	b	1b53c <__mempcpy_chk@plt+0x9f5c>
   21548:	mov	r0, #12
   2154c:	sub	sp, fp, #28
   21550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21554:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21558:	add	fp, sp, #24
   2155c:	mov	r7, r2
   21560:	mov	r5, r1
   21564:	mov	r6, r0
   21568:	movw	r9, #0
   2156c:	movt	r9, #32752	; 0x7ff0
   21570:	mov	r0, r6
   21574:	mov	r1, r5
   21578:	mov	r2, r7
   2157c:	bl	112f8 <read@plt>
   21580:	mov	r4, r0
   21584:	cmn	r0, #1
   21588:	bgt	215e4 <__mempcpy_chk@plt+0x10004>
   2158c:	bl	114d8 <__errno_location@plt>
   21590:	ldr	r0, [r0]
   21594:	cmp	r0, #4
   21598:	beq	21570 <__mempcpy_chk@plt+0xff90>
   2159c:	cmp	r7, r9
   215a0:	mov	r1, #0
   215a4:	movwhi	r1, #1
   215a8:	sub	r2, r0, #22
   215ac:	clz	r2, r2
   215b0:	lsr	r2, r2, #5
   215b4:	ands	r1, r1, r2
   215b8:	moveq	r8, r4
   215bc:	mov	r1, r7
   215c0:	movwne	r1, #0
   215c4:	movtne	r1, #32752	; 0x7ff0
   215c8:	cmp	r7, r9
   215cc:	bls	215dc <__mempcpy_chk@plt+0xfffc>
   215d0:	cmp	r0, #22
   215d4:	mov	r7, r1
   215d8:	beq	21570 <__mempcpy_chk@plt+0xff90>
   215dc:	mov	r0, r8
   215e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   215e4:	mov	r0, r4
   215e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   215ec:	push	{fp, lr}
   215f0:	mov	fp, sp
   215f4:	bl	11460 <mkstemp64@plt>
   215f8:	pop	{fp, lr}
   215fc:	b	2161c <__mempcpy_chk@plt+0x1003c>
   21600:	push	{r4, sl, fp, lr}
   21604:	add	fp, sp, #8
   21608:	mov	r4, r1
   2160c:	bl	113e8 <mkostemp64@plt>
   21610:	mov	r1, r4
   21614:	pop	{r4, sl, fp, lr}
   21618:	b	22578 <__mempcpy_chk@plt+0x10f98>
   2161c:	push	{r4, r5, r6, r7, fp, lr}
   21620:	add	fp, sp, #16
   21624:	mov	r4, r0
   21628:	cmp	r0, #2
   2162c:	bhi	2165c <__mempcpy_chk@plt+0x1007c>
   21630:	mov	r0, r4
   21634:	bl	22764 <__mempcpy_chk@plt+0x11184>
   21638:	mov	r5, r0
   2163c:	bl	114d8 <__errno_location@plt>
   21640:	mov	r6, r0
   21644:	ldr	r7, [r0]
   21648:	mov	r0, r4
   2164c:	bl	115d4 <close@plt>
   21650:	str	r7, [r6]
   21654:	mov	r0, r5
   21658:	pop	{r4, r5, r6, r7, fp, pc}
   2165c:	mov	r0, r4
   21660:	pop	{r4, r5, r6, r7, fp, pc}
   21664:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21668:	add	fp, sp, #24
   2166c:	sub	sp, sp, #32
   21670:	mov	r4, r2
   21674:	mov	r8, r0
   21678:	ldr	r6, [fp, #12]
   2167c:	ldr	r7, [fp, #8]
   21680:	cmp	r1, #0
   21684:	beq	216ac <__mempcpy_chk@plt+0x100cc>
   21688:	mov	r5, r1
   2168c:	str	r4, [sp]
   21690:	str	r3, [sp, #4]
   21694:	movw	r2, #13817	; 0x35f9
   21698:	movt	r2, #2
   2169c:	mov	r0, r8
   216a0:	mov	r1, #1
   216a4:	mov	r3, r5
   216a8:	b	216c4 <__mempcpy_chk@plt+0x100e4>
   216ac:	str	r3, [sp]
   216b0:	movw	r2, #13829	; 0x3605
   216b4:	movt	r2, #2
   216b8:	mov	r0, r8
   216bc:	mov	r1, #1
   216c0:	mov	r3, r4
   216c4:	bl	1152c <__fprintf_chk@plt>
   216c8:	movw	r1, #13836	; 0x360c
   216cc:	movt	r1, #2
   216d0:	mov	r0, #0
   216d4:	mov	r2, #5
   216d8:	bl	113a0 <dcgettext@plt>
   216dc:	mov	r3, r0
   216e0:	movw	r0, #2022	; 0x7e6
   216e4:	str	r0, [sp]
   216e8:	movw	r2, #14554	; 0x38da
   216ec:	movt	r2, #2
   216f0:	mov	r0, r8
   216f4:	mov	r1, #1
   216f8:	bl	1152c <__fprintf_chk@plt>
   216fc:	movw	r4, #12504	; 0x30d8
   21700:	movt	r4, #2
   21704:	mov	r0, r4
   21708:	mov	r1, r8
   2170c:	bl	112b0 <fputs_unlocked@plt>
   21710:	movw	r1, #13840	; 0x3610
   21714:	movt	r1, #2
   21718:	mov	r0, #0
   2171c:	mov	r2, #5
   21720:	bl	113a0 <dcgettext@plt>
   21724:	mov	r2, r0
   21728:	movw	r3, #14011	; 0x36bb
   2172c:	movt	r3, #2
   21730:	mov	r0, r8
   21734:	mov	r1, #1
   21738:	bl	1152c <__fprintf_chk@plt>
   2173c:	mov	r0, r4
   21740:	mov	r1, r8
   21744:	bl	112b0 <fputs_unlocked@plt>
   21748:	cmp	r6, #9
   2174c:	bhi	21788 <__mempcpy_chk@plt+0x101a8>
   21750:	add	r0, pc, #0
   21754:	ldr	pc, [r0, r6, lsl #2]
   21758:	andeq	r1, r2, r0, lsl #15
   2175c:	muleq	r2, r4, r7
   21760:	andeq	r1, r2, r4, asr #15
   21764:	andeq	r1, r2, ip, ror #15
   21768:	andeq	r1, r2, r4, lsl r8
   2176c:	andeq	r1, r2, ip, lsr r8
   21770:	andeq	r1, r2, r4, ror #16
   21774:	muleq	r2, ip, r8
   21778:	andeq	r1, r2, ip, lsr r9
   2177c:	andeq	r1, r2, r4, ror #17
   21780:	sub	sp, fp, #24
   21784:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21788:	movw	r1, #14364	; 0x381c
   2178c:	movt	r1, #2
   21790:	b	218ec <__mempcpy_chk@plt+0x1030c>
   21794:	movw	r1, #14045	; 0x36dd
   21798:	movt	r1, #2
   2179c:	mov	r0, #0
   217a0:	mov	r2, #5
   217a4:	bl	113a0 <dcgettext@plt>
   217a8:	mov	r2, r0
   217ac:	ldr	r3, [r7]
   217b0:	mov	r0, r8
   217b4:	mov	r1, #1
   217b8:	sub	sp, fp, #24
   217bc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   217c0:	b	1152c <__fprintf_chk@plt>
   217c4:	movw	r1, #14061	; 0x36ed
   217c8:	movt	r1, #2
   217cc:	mov	r0, #0
   217d0:	mov	r2, #5
   217d4:	bl	113a0 <dcgettext@plt>
   217d8:	mov	r2, r0
   217dc:	ldr	r3, [r7]
   217e0:	ldr	r0, [r7, #4]
   217e4:	str	r0, [sp]
   217e8:	b	218d8 <__mempcpy_chk@plt+0x102f8>
   217ec:	movw	r1, #14084	; 0x3704
   217f0:	movt	r1, #2
   217f4:	mov	r0, #0
   217f8:	mov	r2, #5
   217fc:	bl	113a0 <dcgettext@plt>
   21800:	mov	r2, r0
   21804:	ldr	r3, [r7]
   21808:	ldmib	r7, {r0, r1}
   2180c:	stm	sp, {r0, r1}
   21810:	b	218d8 <__mempcpy_chk@plt+0x102f8>
   21814:	movw	r1, #14112	; 0x3720
   21818:	movt	r1, #2
   2181c:	mov	r0, #0
   21820:	mov	r2, #5
   21824:	bl	113a0 <dcgettext@plt>
   21828:	mov	r2, r0
   2182c:	ldr	r3, [r7]
   21830:	ldmib	r7, {r0, r1, r7}
   21834:	stm	sp, {r0, r1, r7}
   21838:	b	218d8 <__mempcpy_chk@plt+0x102f8>
   2183c:	movw	r1, #14144	; 0x3740
   21840:	movt	r1, #2
   21844:	mov	r0, #0
   21848:	mov	r2, #5
   2184c:	bl	113a0 <dcgettext@plt>
   21850:	mov	r2, r0
   21854:	ldr	r3, [r7]
   21858:	ldmib	r7, {r0, r1, r6, r7}
   2185c:	stm	sp, {r0, r1, r6, r7}
   21860:	b	218d8 <__mempcpy_chk@plt+0x102f8>
   21864:	movw	r1, #14180	; 0x3764
   21868:	movt	r1, #2
   2186c:	mov	r0, #0
   21870:	mov	r2, #5
   21874:	bl	113a0 <dcgettext@plt>
   21878:	mov	r2, r0
   2187c:	ldr	r3, [r7]
   21880:	ldmib	r7, {r0, r1, r6}
   21884:	ldr	r5, [r7, #16]
   21888:	ldr	r7, [r7, #20]
   2188c:	stm	sp, {r0, r1, r6}
   21890:	str	r5, [sp, #12]
   21894:	str	r7, [sp, #16]
   21898:	b	218d8 <__mempcpy_chk@plt+0x102f8>
   2189c:	movw	r1, #14220	; 0x378c
   218a0:	movt	r1, #2
   218a4:	mov	r0, #0
   218a8:	mov	r2, #5
   218ac:	bl	113a0 <dcgettext@plt>
   218b0:	mov	r2, r0
   218b4:	ldr	r3, [r7]
   218b8:	ldmib	r7, {r0, r1, r6}
   218bc:	ldr	r5, [r7, #16]
   218c0:	ldr	r4, [r7, #20]
   218c4:	ldr	r7, [r7, #24]
   218c8:	stm	sp, {r0, r1, r6}
   218cc:	str	r5, [sp, #12]
   218d0:	str	r4, [sp, #16]
   218d4:	str	r7, [sp, #20]
   218d8:	mov	r0, r8
   218dc:	mov	r1, #1
   218e0:	b	2198c <__mempcpy_chk@plt+0x103ac>
   218e4:	movw	r1, #14312	; 0x37e8
   218e8:	movt	r1, #2
   218ec:	mov	r0, #0
   218f0:	mov	r2, #5
   218f4:	bl	113a0 <dcgettext@plt>
   218f8:	mov	ip, r0
   218fc:	ldr	r3, [r7]
   21900:	ldr	r0, [r7, #4]
   21904:	ldr	r1, [r7, #8]
   21908:	ldr	r6, [r7, #12]
   2190c:	ldr	r5, [r7, #16]
   21910:	ldr	r4, [r7, #20]
   21914:	ldr	r2, [r7, #24]
   21918:	ldr	lr, [r7, #28]
   2191c:	ldr	r7, [r7, #32]
   21920:	stm	sp, {r0, r1, r6}
   21924:	str	r5, [sp, #12]
   21928:	str	r4, [sp, #16]
   2192c:	str	r2, [sp, #20]
   21930:	str	lr, [sp, #24]
   21934:	str	r7, [sp, #28]
   21938:	b	21980 <__mempcpy_chk@plt+0x103a0>
   2193c:	movw	r1, #14264	; 0x37b8
   21940:	movt	r1, #2
   21944:	mov	r0, #0
   21948:	mov	r2, #5
   2194c:	bl	113a0 <dcgettext@plt>
   21950:	mov	ip, r0
   21954:	ldr	r3, [r7]
   21958:	ldmib	r7, {r0, r1, r6}
   2195c:	ldr	r5, [r7, #16]
   21960:	ldr	r4, [r7, #20]
   21964:	ldr	r2, [r7, #24]
   21968:	ldr	r7, [r7, #28]
   2196c:	stm	sp, {r0, r1, r6}
   21970:	str	r5, [sp, #12]
   21974:	str	r4, [sp, #16]
   21978:	str	r2, [sp, #20]
   2197c:	str	r7, [sp, #24]
   21980:	mov	r0, r8
   21984:	mov	r1, #1
   21988:	mov	r2, ip
   2198c:	bl	1152c <__fprintf_chk@plt>
   21990:	sub	sp, fp, #24
   21994:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21998:	push	{r4, sl, fp, lr}
   2199c:	add	fp, sp, #8
   219a0:	sub	sp, sp, #8
   219a4:	mov	lr, #0
   219a8:	ldr	ip, [fp, #8]
   219ac:	ldr	r4, [ip, lr, lsl #2]
   219b0:	add	lr, lr, #1
   219b4:	cmp	r4, #0
   219b8:	bne	219ac <__mempcpy_chk@plt+0x103cc>
   219bc:	sub	r4, lr, #1
   219c0:	str	ip, [sp]
   219c4:	str	r4, [sp, #4]
   219c8:	bl	21664 <__mempcpy_chk@plt+0x10084>
   219cc:	sub	sp, fp, #8
   219d0:	pop	{r4, sl, fp, pc}
   219d4:	push	{r4, r5, fp, lr}
   219d8:	add	fp, sp, #8
   219dc:	sub	sp, sp, #48	; 0x30
   219e0:	mov	ip, #0
   219e4:	ldr	r4, [fp, #8]
   219e8:	add	lr, sp, #8
   219ec:	ldr	r5, [r4]
   219f0:	str	r5, [lr, ip, lsl #2]
   219f4:	cmp	r5, #0
   219f8:	beq	21a10 <__mempcpy_chk@plt+0x10430>
   219fc:	add	ip, ip, #1
   21a00:	add	r4, r4, #4
   21a04:	cmp	ip, #10
   21a08:	bne	219ec <__mempcpy_chk@plt+0x1040c>
   21a0c:	mov	ip, #10
   21a10:	str	lr, [sp]
   21a14:	str	ip, [sp, #4]
   21a18:	bl	21664 <__mempcpy_chk@plt+0x10084>
   21a1c:	sub	sp, fp, #8
   21a20:	pop	{r4, r5, fp, pc}
   21a24:	push	{fp, lr}
   21a28:	mov	fp, sp
   21a2c:	sub	sp, sp, #8
   21a30:	add	ip, fp, #8
   21a34:	str	ip, [sp, #4]
   21a38:	str	ip, [sp]
   21a3c:	bl	219d4 <__mempcpy_chk@plt+0x103f4>
   21a40:	mov	sp, fp
   21a44:	pop	{fp, pc}
   21a48:	push	{fp, lr}
   21a4c:	mov	fp, sp
   21a50:	movw	r0, #16788	; 0x4194
   21a54:	movt	r0, #3
   21a58:	ldr	r1, [r0]
   21a5c:	movw	r0, #12504	; 0x30d8
   21a60:	movt	r0, #2
   21a64:	bl	112b0 <fputs_unlocked@plt>
   21a68:	movw	r1, #14424	; 0x3858
   21a6c:	movt	r1, #2
   21a70:	mov	r0, #0
   21a74:	mov	r2, #5
   21a78:	bl	113a0 <dcgettext@plt>
   21a7c:	mov	r1, r0
   21a80:	movw	r2, #14444	; 0x386c
   21a84:	movt	r2, #2
   21a88:	mov	r0, #1
   21a8c:	bl	11514 <__printf_chk@plt>
   21a90:	movw	r1, #14466	; 0x3882
   21a94:	movt	r1, #2
   21a98:	mov	r0, #0
   21a9c:	mov	r2, #5
   21aa0:	bl	113a0 <dcgettext@plt>
   21aa4:	mov	r1, r0
   21aa8:	movw	r2, #11996	; 0x2edc
   21aac:	movt	r2, #2
   21ab0:	movw	r3, #12313	; 0x3019
   21ab4:	movt	r3, #2
   21ab8:	mov	r0, #1
   21abc:	bl	11514 <__printf_chk@plt>
   21ac0:	movw	r1, #14486	; 0x3896
   21ac4:	movt	r1, #2
   21ac8:	mov	r0, #0
   21acc:	mov	r2, #5
   21ad0:	bl	113a0 <dcgettext@plt>
   21ad4:	mov	r1, r0
   21ad8:	movw	r2, #14525	; 0x38bd
   21adc:	movt	r2, #2
   21ae0:	mov	r0, #1
   21ae4:	pop	{fp, lr}
   21ae8:	b	11514 <__printf_chk@plt>
   21aec:	b	21af0 <__mempcpy_chk@plt+0x10510>
   21af0:	push	{r4, r5, r6, sl, fp, lr}
   21af4:	add	fp, sp, #16
   21af8:	mov	r4, r2
   21afc:	mov	r5, r1
   21b00:	mov	r6, r0
   21b04:	bl	22728 <__mempcpy_chk@plt+0x11148>
   21b08:	cmp	r0, #0
   21b0c:	popne	{r4, r5, r6, sl, fp, pc}
   21b10:	cmp	r6, #0
   21b14:	beq	21b28 <__mempcpy_chk@plt+0x10548>
   21b18:	cmp	r5, #0
   21b1c:	cmpne	r4, #0
   21b20:	bne	21b28 <__mempcpy_chk@plt+0x10548>
   21b24:	pop	{r4, r5, r6, sl, fp, pc}
   21b28:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   21b2c:	push	{fp, lr}
   21b30:	mov	fp, sp
   21b34:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   21b38:	pop	{fp, lr}
   21b3c:	b	21b40 <__mempcpy_chk@plt+0x10560>
   21b40:	cmp	r0, #0
   21b44:	bxne	lr
   21b48:	push	{fp, lr}
   21b4c:	mov	fp, sp
   21b50:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   21b54:	push	{fp, lr}
   21b58:	mov	fp, sp
   21b5c:	bl	22658 <__mempcpy_chk@plt+0x11078>
   21b60:	pop	{fp, lr}
   21b64:	b	21b40 <__mempcpy_chk@plt+0x10560>
   21b68:	b	21b2c <__mempcpy_chk@plt+0x1054c>
   21b6c:	push	{r4, r5, fp, lr}
   21b70:	add	fp, sp, #8
   21b74:	mov	r4, r1
   21b78:	mov	r5, r0
   21b7c:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   21b80:	cmp	r0, #0
   21b84:	popne	{r4, r5, fp, pc}
   21b88:	cmp	r5, #0
   21b8c:	beq	21b9c <__mempcpy_chk@plt+0x105bc>
   21b90:	cmp	r4, #0
   21b94:	bne	21b9c <__mempcpy_chk@plt+0x105bc>
   21b98:	pop	{r4, r5, fp, pc}
   21b9c:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   21ba0:	push	{fp, lr}
   21ba4:	mov	fp, sp
   21ba8:	bl	2265c <__mempcpy_chk@plt+0x1107c>
   21bac:	pop	{fp, lr}
   21bb0:	b	21b40 <__mempcpy_chk@plt+0x10560>
   21bb4:	push	{fp, lr}
   21bb8:	mov	fp, sp
   21bbc:	bl	2266c <__mempcpy_chk@plt+0x1108c>
   21bc0:	pop	{fp, lr}
   21bc4:	b	21b40 <__mempcpy_chk@plt+0x10560>
   21bc8:	mov	r2, r1
   21bcc:	mov	r1, r0
   21bd0:	mov	r0, #0
   21bd4:	b	21af0 <__mempcpy_chk@plt+0x10510>
   21bd8:	mov	r2, r1
   21bdc:	mov	r1, r0
   21be0:	mov	r0, #0
   21be4:	b	21bb4 <__mempcpy_chk@plt+0x105d4>
   21be8:	mov	r2, #1
   21bec:	b	21bf0 <__mempcpy_chk@plt+0x10610>
   21bf0:	push	{r4, r5, fp, lr}
   21bf4:	add	fp, sp, #8
   21bf8:	mov	r4, r1
   21bfc:	ldr	r5, [r1]
   21c00:	cmp	r0, #0
   21c04:	beq	21c1c <__mempcpy_chk@plt+0x1063c>
   21c08:	mov	r1, #1
   21c0c:	add	r1, r1, r5, lsr #1
   21c10:	adds	r5, r5, r1
   21c14:	bcc	21c34 <__mempcpy_chk@plt+0x10654>
   21c18:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   21c1c:	cmp	r5, #0
   21c20:	bne	21c34 <__mempcpy_chk@plt+0x10654>
   21c24:	mov	r1, #64	; 0x40
   21c28:	udiv	r5, r1, r2
   21c2c:	cmp	r2, #64	; 0x40
   21c30:	addhi	r5, r5, #1
   21c34:	mov	r1, r5
   21c38:	bl	21af0 <__mempcpy_chk@plt+0x10510>
   21c3c:	str	r5, [r4]
   21c40:	pop	{r4, r5, fp, pc}
   21c44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21c48:	add	fp, sp, #24
   21c4c:	mov	r8, r1
   21c50:	ldr	r6, [r1]
   21c54:	add	r1, r6, r6, asr #1
   21c58:	cmp	r1, r6
   21c5c:	mvnvs	r1, #-2147483648	; 0x80000000
   21c60:	cmp	r1, r3
   21c64:	mov	r5, r1
   21c68:	movgt	r5, r3
   21c6c:	cmn	r3, #1
   21c70:	movle	r5, r1
   21c74:	ldr	r4, [fp, #8]
   21c78:	cmn	r4, #1
   21c7c:	ble	21ca4 <__mempcpy_chk@plt+0x106c4>
   21c80:	cmp	r4, #0
   21c84:	beq	21cf8 <__mempcpy_chk@plt+0x10718>
   21c88:	cmn	r5, #1
   21c8c:	ble	21ccc <__mempcpy_chk@plt+0x106ec>
   21c90:	mvn	r7, #-2147483648	; 0x80000000
   21c94:	udiv	r1, r7, r4
   21c98:	cmp	r1, r5
   21c9c:	bge	21cf8 <__mempcpy_chk@plt+0x10718>
   21ca0:	b	21d08 <__mempcpy_chk@plt+0x10728>
   21ca4:	cmn	r5, #1
   21ca8:	ble	21ce8 <__mempcpy_chk@plt+0x10708>
   21cac:	cmn	r4, #1
   21cb0:	beq	21cf8 <__mempcpy_chk@plt+0x10718>
   21cb4:	mov	r1, #-2147483648	; 0x80000000
   21cb8:	sdiv	r1, r1, r4
   21cbc:	mvn	r7, #-2147483648	; 0x80000000
   21cc0:	cmp	r1, r5
   21cc4:	bge	21cf8 <__mempcpy_chk@plt+0x10718>
   21cc8:	b	21d08 <__mempcpy_chk@plt+0x10728>
   21ccc:	beq	21cf8 <__mempcpy_chk@plt+0x10718>
   21cd0:	mov	r1, #-2147483648	; 0x80000000
   21cd4:	sdiv	r1, r1, r5
   21cd8:	mvn	r7, #-2147483648	; 0x80000000
   21cdc:	cmp	r1, r4
   21ce0:	bge	21cf8 <__mempcpy_chk@plt+0x10718>
   21ce4:	b	21d08 <__mempcpy_chk@plt+0x10728>
   21ce8:	mvn	r7, #-2147483648	; 0x80000000
   21cec:	sdiv	r1, r7, r4
   21cf0:	cmp	r5, r1
   21cf4:	blt	21d08 <__mempcpy_chk@plt+0x10728>
   21cf8:	mul	r1, r5, r4
   21cfc:	mov	r7, #64	; 0x40
   21d00:	cmp	r1, #63	; 0x3f
   21d04:	bgt	21d10 <__mempcpy_chk@plt+0x10730>
   21d08:	sdiv	r5, r7, r4
   21d0c:	mul	r1, r5, r4
   21d10:	cmp	r0, #0
   21d14:	moveq	r7, #0
   21d18:	streq	r7, [r8]
   21d1c:	sub	r7, r5, r6
   21d20:	cmp	r7, r2
   21d24:	bge	21dd0 <__mempcpy_chk@plt+0x107f0>
   21d28:	add	r5, r6, r2
   21d2c:	mov	r1, #0
   21d30:	cmp	r5, r3
   21d34:	mov	r2, #0
   21d38:	movwgt	r2, #1
   21d3c:	cmn	r3, #1
   21d40:	movwgt	r1, #1
   21d44:	cmp	r5, r6
   21d48:	bvs	21db8 <__mempcpy_chk@plt+0x107d8>
   21d4c:	ands	r1, r1, r2
   21d50:	bne	21db8 <__mempcpy_chk@plt+0x107d8>
   21d54:	cmn	r4, #1
   21d58:	ble	21d80 <__mempcpy_chk@plt+0x107a0>
   21d5c:	cmp	r4, #0
   21d60:	beq	21dcc <__mempcpy_chk@plt+0x107ec>
   21d64:	cmn	r5, #1
   21d68:	ble	21da4 <__mempcpy_chk@plt+0x107c4>
   21d6c:	mvn	r1, #-2147483648	; 0x80000000
   21d70:	udiv	r1, r1, r4
   21d74:	cmp	r1, r5
   21d78:	bge	21dcc <__mempcpy_chk@plt+0x107ec>
   21d7c:	b	21db8 <__mempcpy_chk@plt+0x107d8>
   21d80:	cmn	r5, #1
   21d84:	ble	21dbc <__mempcpy_chk@plt+0x107dc>
   21d88:	cmn	r4, #1
   21d8c:	beq	21dcc <__mempcpy_chk@plt+0x107ec>
   21d90:	mov	r1, #-2147483648	; 0x80000000
   21d94:	sdiv	r1, r1, r4
   21d98:	cmp	r1, r5
   21d9c:	bge	21dcc <__mempcpy_chk@plt+0x107ec>
   21da0:	b	21db8 <__mempcpy_chk@plt+0x107d8>
   21da4:	beq	21dcc <__mempcpy_chk@plt+0x107ec>
   21da8:	mov	r1, #-2147483648	; 0x80000000
   21dac:	sdiv	r1, r1, r5
   21db0:	cmp	r1, r4
   21db4:	bge	21dcc <__mempcpy_chk@plt+0x107ec>
   21db8:	bl	21eb4 <__mempcpy_chk@plt+0x108d4>
   21dbc:	mvn	r1, #-2147483648	; 0x80000000
   21dc0:	sdiv	r1, r1, r4
   21dc4:	cmp	r5, r1
   21dc8:	blt	21db8 <__mempcpy_chk@plt+0x107d8>
   21dcc:	mul	r1, r5, r4
   21dd0:	bl	21b6c <__mempcpy_chk@plt+0x1058c>
   21dd4:	str	r5, [r8]
   21dd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21ddc:	mov	r1, #1
   21de0:	b	21de4 <__mempcpy_chk@plt+0x10804>
   21de4:	push	{fp, lr}
   21de8:	mov	fp, sp
   21dec:	bl	21f00 <__mempcpy_chk@plt+0x10920>
   21df0:	pop	{fp, lr}
   21df4:	b	21b40 <__mempcpy_chk@plt+0x10560>
   21df8:	mov	r1, #1
   21dfc:	b	21e00 <__mempcpy_chk@plt+0x10820>
   21e00:	push	{fp, lr}
   21e04:	mov	fp, sp
   21e08:	bl	22668 <__mempcpy_chk@plt+0x11088>
   21e0c:	pop	{fp, lr}
   21e10:	b	21b40 <__mempcpy_chk@plt+0x10560>
   21e14:	push	{r4, r5, fp, lr}
   21e18:	add	fp, sp, #8
   21e1c:	mov	r4, r1
   21e20:	mov	r5, r0
   21e24:	mov	r0, r1
   21e28:	bl	21b2c <__mempcpy_chk@plt+0x1054c>
   21e2c:	mov	r1, r5
   21e30:	mov	r2, r4
   21e34:	pop	{r4, r5, fp, lr}
   21e38:	b	1134c <memcpy@plt>
   21e3c:	push	{r4, r5, fp, lr}
   21e40:	add	fp, sp, #8
   21e44:	mov	r4, r1
   21e48:	mov	r5, r0
   21e4c:	mov	r0, r1
   21e50:	bl	21b54 <__mempcpy_chk@plt+0x10574>
   21e54:	mov	r1, r5
   21e58:	mov	r2, r4
   21e5c:	pop	{r4, r5, fp, lr}
   21e60:	b	1134c <memcpy@plt>
   21e64:	push	{r4, r5, fp, lr}
   21e68:	add	fp, sp, #8
   21e6c:	mov	r4, r1
   21e70:	mov	r5, r0
   21e74:	add	r0, r1, #1
   21e78:	bl	21b54 <__mempcpy_chk@plt+0x10574>
   21e7c:	mov	r1, #0
   21e80:	strb	r1, [r0, r4]
   21e84:	mov	r1, r5
   21e88:	mov	r2, r4
   21e8c:	pop	{r4, r5, fp, lr}
   21e90:	b	1134c <memcpy@plt>
   21e94:	push	{r4, sl, fp, lr}
   21e98:	add	fp, sp, #8
   21e9c:	mov	r4, r0
   21ea0:	bl	114cc <strlen@plt>
   21ea4:	add	r1, r0, #1
   21ea8:	mov	r0, r4
   21eac:	pop	{r4, sl, fp, lr}
   21eb0:	b	21e14 <__mempcpy_chk@plt+0x10834>
   21eb4:	push	{fp, lr}
   21eb8:	mov	fp, sp
   21ebc:	movw	r0, #16700	; 0x413c
   21ec0:	movt	r0, #3
   21ec4:	ldr	r4, [r0]
   21ec8:	movw	r1, #14601	; 0x3909
   21ecc:	movt	r1, #2
   21ed0:	mov	r0, #0
   21ed4:	mov	r2, #5
   21ed8:	bl	113a0 <dcgettext@plt>
   21edc:	mov	r3, r0
   21ee0:	movw	r2, #12995	; 0x32c3
   21ee4:	movt	r2, #2
   21ee8:	mov	r0, r4
   21eec:	mov	r1, #0
   21ef0:	bl	1143c <error@plt>
   21ef4:	bl	115c8 <abort@plt>
   21ef8:	bx	lr
   21efc:	b	22064 <__mempcpy_chk@plt+0x10a84>
   21f00:	clz	r2, r1
   21f04:	lsr	r2, r2, #5
   21f08:	clz	r3, r0
   21f0c:	lsr	r3, r3, #5
   21f10:	orrs	r2, r3, r2
   21f14:	movwne	r1, #1
   21f18:	movwne	r0, #1
   21f1c:	cmp	r1, #0
   21f20:	beq	21f50 <__mempcpy_chk@plt+0x10970>
   21f24:	mvn	r2, #-2147483648	; 0x80000000
   21f28:	udiv	r2, r2, r1
   21f2c:	cmp	r2, r0
   21f30:	bcs	21f50 <__mempcpy_chk@plt+0x10970>
   21f34:	push	{fp, lr}
   21f38:	mov	fp, sp
   21f3c:	bl	114d8 <__errno_location@plt>
   21f40:	mov	r1, #12
   21f44:	str	r1, [r0]
   21f48:	mov	r0, #0
   21f4c:	pop	{fp, pc}
   21f50:	b	112a4 <calloc@plt>
   21f54:	cmp	r0, #0
   21f58:	movweq	r0, #1
   21f5c:	cmn	r0, #1
   21f60:	ble	21f68 <__mempcpy_chk@plt+0x10988>
   21f64:	b	1146c <malloc@plt>
   21f68:	push	{fp, lr}
   21f6c:	mov	fp, sp
   21f70:	bl	114d8 <__errno_location@plt>
   21f74:	mov	r1, #12
   21f78:	str	r1, [r0]
   21f7c:	mov	r0, #0
   21f80:	pop	{fp, pc}
   21f84:	push	{fp, lr}
   21f88:	mov	fp, sp
   21f8c:	cmp	r0, #0
   21f90:	beq	21fac <__mempcpy_chk@plt+0x109cc>
   21f94:	cmp	r1, #0
   21f98:	beq	21fb8 <__mempcpy_chk@plt+0x109d8>
   21f9c:	cmn	r1, #1
   21fa0:	ble	21fc4 <__mempcpy_chk@plt+0x109e4>
   21fa4:	pop	{fp, lr}
   21fa8:	b	113b8 <realloc@plt>
   21fac:	mov	r0, r1
   21fb0:	pop	{fp, lr}
   21fb4:	b	21f54 <__mempcpy_chk@plt+0x10974>
   21fb8:	bl	12b88 <__mempcpy_chk@plt+0x15a8>
   21fbc:	mov	r0, #0
   21fc0:	pop	{fp, pc}
   21fc4:	bl	114d8 <__errno_location@plt>
   21fc8:	mov	r1, #12
   21fcc:	str	r1, [r0]
   21fd0:	mov	r0, #0
   21fd4:	pop	{fp, pc}
   21fd8:	sub	r0, r0, #1
   21fdc:	ldrb	r3, [r0, #1]!
   21fe0:	cmp	r3, #47	; 0x2f
   21fe4:	beq	21fdc <__mempcpy_chk@plt+0x109fc>
   21fe8:	mov	r2, #0
   21fec:	mov	r1, r0
   21ff0:	b	21ffc <__mempcpy_chk@plt+0x10a1c>
   21ff4:	mov	r2, #1
   21ff8:	ldrb	r3, [r1, #1]!
   21ffc:	uxtb	r3, r3
   22000:	cmp	r3, #47	; 0x2f
   22004:	beq	21ff4 <__mempcpy_chk@plt+0x10a14>
   22008:	cmp	r3, #0
   2200c:	bxeq	lr
   22010:	tst	r2, #1
   22014:	movne	r0, r1
   22018:	mov	r2, #0
   2201c:	ldrb	r3, [r1, #1]!
   22020:	b	21ffc <__mempcpy_chk@plt+0x10a1c>
   22024:	push	{r4, sl, fp, lr}
   22028:	add	fp, sp, #8
   2202c:	mov	r4, r0
   22030:	bl	114cc <strlen@plt>
   22034:	mov	r1, r0
   22038:	sub	r2, r4, #1
   2203c:	mov	r0, r1
   22040:	cmp	r1, #2
   22044:	bcc	22058 <__mempcpy_chk@plt+0x10a78>
   22048:	ldrb	r3, [r2, r0]
   2204c:	sub	r1, r0, #1
   22050:	cmp	r3, #47	; 0x2f
   22054:	beq	2203c <__mempcpy_chk@plt+0x10a5c>
   22058:	pop	{r4, sl, fp, pc}
   2205c:	mov	r0, #0
   22060:	bx	lr
   22064:	mov	r0, #0
   22068:	bx	lr
   2206c:	mov	r1, r0
   22070:	sub	r2, r0, #65	; 0x41
   22074:	mov	r0, #1
   22078:	cmp	r2, #26
   2207c:	subcs	r2, r1, #97	; 0x61
   22080:	cmpcs	r2, #26
   22084:	bcs	2208c <__mempcpy_chk@plt+0x10aac>
   22088:	bx	lr
   2208c:	sub	r1, r1, #48	; 0x30
   22090:	cmp	r1, #10
   22094:	movcs	r0, #0
   22098:	bx	lr
   2209c:	mov	r1, r0
   220a0:	sub	r2, r0, #65	; 0x41
   220a4:	mov	r0, #1
   220a8:	cmp	r2, #26
   220ac:	subcs	r1, r1, #97	; 0x61
   220b0:	cmpcs	r1, #26
   220b4:	movcs	r0, #0
   220b8:	bx	lr
   220bc:	mov	r1, #0
   220c0:	cmp	r0, #128	; 0x80
   220c4:	movwcc	r1, #1
   220c8:	mov	r0, r1
   220cc:	bx	lr
   220d0:	sub	r1, r0, #9
   220d4:	clz	r1, r1
   220d8:	lsr	r1, r1, #5
   220dc:	sub	r0, r0, #32
   220e0:	clz	r0, r0
   220e4:	lsr	r0, r0, #5
   220e8:	orr	r0, r0, r1
   220ec:	bx	lr
   220f0:	mov	r1, r0
   220f4:	mov	r0, #1
   220f8:	cmp	r1, #32
   220fc:	bxcc	lr
   22100:	cmp	r1, #127	; 0x7f
   22104:	movne	r0, #0
   22108:	bx	lr
   2210c:	sub	r1, r0, #48	; 0x30
   22110:	mov	r0, #0
   22114:	cmp	r1, #10
   22118:	movwcc	r0, #1
   2211c:	bx	lr
   22120:	sub	r1, r0, #33	; 0x21
   22124:	mov	r0, #0
   22128:	cmp	r1, #94	; 0x5e
   2212c:	movwcc	r0, #1
   22130:	bx	lr
   22134:	sub	r1, r0, #97	; 0x61
   22138:	mov	r0, #0
   2213c:	cmp	r1, #26
   22140:	movwcc	r0, #1
   22144:	bx	lr
   22148:	sub	r1, r0, #32
   2214c:	mov	r0, #0
   22150:	cmp	r1, #95	; 0x5f
   22154:	movwcc	r0, #1
   22158:	bx	lr
   2215c:	sub	r1, r0, #33	; 0x21
   22160:	cmp	r1, #93	; 0x5d
   22164:	bhi	222f0 <__mempcpy_chk@plt+0x10d10>
   22168:	mov	r0, #1
   2216c:	add	r2, pc, #0
   22170:	ldr	pc, [r2, r1, lsl #2]
   22174:	andeq	r2, r2, ip, ror #5
   22178:	andeq	r2, r2, ip, ror #5
   2217c:	andeq	r2, r2, ip, ror #5
   22180:	andeq	r2, r2, ip, ror #5
   22184:	andeq	r2, r2, ip, ror #5
   22188:	andeq	r2, r2, ip, ror #5
   2218c:	andeq	r2, r2, ip, ror #5
   22190:	andeq	r2, r2, ip, ror #5
   22194:	andeq	r2, r2, ip, ror #5
   22198:	andeq	r2, r2, ip, ror #5
   2219c:	andeq	r2, r2, ip, ror #5
   221a0:	andeq	r2, r2, ip, ror #5
   221a4:	andeq	r2, r2, ip, ror #5
   221a8:	andeq	r2, r2, ip, ror #5
   221ac:	andeq	r2, r2, ip, ror #5
   221b0:	strdeq	r2, [r2], -r0
   221b4:	strdeq	r2, [r2], -r0
   221b8:	strdeq	r2, [r2], -r0
   221bc:	strdeq	r2, [r2], -r0
   221c0:	strdeq	r2, [r2], -r0
   221c4:	strdeq	r2, [r2], -r0
   221c8:	strdeq	r2, [r2], -r0
   221cc:	strdeq	r2, [r2], -r0
   221d0:	strdeq	r2, [r2], -r0
   221d4:	strdeq	r2, [r2], -r0
   221d8:	andeq	r2, r2, ip, ror #5
   221dc:	andeq	r2, r2, ip, ror #5
   221e0:	andeq	r2, r2, ip, ror #5
   221e4:	andeq	r2, r2, ip, ror #5
   221e8:	andeq	r2, r2, ip, ror #5
   221ec:	andeq	r2, r2, ip, ror #5
   221f0:	andeq	r2, r2, ip, ror #5
   221f4:	strdeq	r2, [r2], -r0
   221f8:	strdeq	r2, [r2], -r0
   221fc:	strdeq	r2, [r2], -r0
   22200:	strdeq	r2, [r2], -r0
   22204:	strdeq	r2, [r2], -r0
   22208:	strdeq	r2, [r2], -r0
   2220c:	strdeq	r2, [r2], -r0
   22210:	strdeq	r2, [r2], -r0
   22214:	strdeq	r2, [r2], -r0
   22218:	strdeq	r2, [r2], -r0
   2221c:	strdeq	r2, [r2], -r0
   22220:	strdeq	r2, [r2], -r0
   22224:	strdeq	r2, [r2], -r0
   22228:	strdeq	r2, [r2], -r0
   2222c:	strdeq	r2, [r2], -r0
   22230:	strdeq	r2, [r2], -r0
   22234:	strdeq	r2, [r2], -r0
   22238:	strdeq	r2, [r2], -r0
   2223c:	strdeq	r2, [r2], -r0
   22240:	strdeq	r2, [r2], -r0
   22244:	strdeq	r2, [r2], -r0
   22248:	strdeq	r2, [r2], -r0
   2224c:	strdeq	r2, [r2], -r0
   22250:	strdeq	r2, [r2], -r0
   22254:	strdeq	r2, [r2], -r0
   22258:	strdeq	r2, [r2], -r0
   2225c:	andeq	r2, r2, ip, ror #5
   22260:	andeq	r2, r2, ip, ror #5
   22264:	andeq	r2, r2, ip, ror #5
   22268:	andeq	r2, r2, ip, ror #5
   2226c:	andeq	r2, r2, ip, ror #5
   22270:	andeq	r2, r2, ip, ror #5
   22274:	strdeq	r2, [r2], -r0
   22278:	strdeq	r2, [r2], -r0
   2227c:	strdeq	r2, [r2], -r0
   22280:	strdeq	r2, [r2], -r0
   22284:	strdeq	r2, [r2], -r0
   22288:	strdeq	r2, [r2], -r0
   2228c:	strdeq	r2, [r2], -r0
   22290:	strdeq	r2, [r2], -r0
   22294:	strdeq	r2, [r2], -r0
   22298:	strdeq	r2, [r2], -r0
   2229c:	strdeq	r2, [r2], -r0
   222a0:	strdeq	r2, [r2], -r0
   222a4:	strdeq	r2, [r2], -r0
   222a8:	strdeq	r2, [r2], -r0
   222ac:	strdeq	r2, [r2], -r0
   222b0:	strdeq	r2, [r2], -r0
   222b4:	strdeq	r2, [r2], -r0
   222b8:	strdeq	r2, [r2], -r0
   222bc:	strdeq	r2, [r2], -r0
   222c0:	strdeq	r2, [r2], -r0
   222c4:	strdeq	r2, [r2], -r0
   222c8:	strdeq	r2, [r2], -r0
   222cc:	strdeq	r2, [r2], -r0
   222d0:	strdeq	r2, [r2], -r0
   222d4:	strdeq	r2, [r2], -r0
   222d8:	strdeq	r2, [r2], -r0
   222dc:	andeq	r2, r2, ip, ror #5
   222e0:	andeq	r2, r2, ip, ror #5
   222e4:	andeq	r2, r2, ip, ror #5
   222e8:	andeq	r2, r2, ip, ror #5
   222ec:	bx	lr
   222f0:	mov	r0, #0
   222f4:	bx	lr
   222f8:	sub	r0, r0, #9
   222fc:	cmp	r0, #23
   22300:	movhi	r0, #0
   22304:	bxhi	lr
   22308:	bic	r0, r0, #-16777216	; 0xff000000
   2230c:	movw	r1, #31
   22310:	movt	r1, #128	; 0x80
   22314:	mov	r2, #1
   22318:	and	r0, r2, r1, lsr r0
   2231c:	bx	lr
   22320:	sub	r1, r0, #65	; 0x41
   22324:	mov	r0, #0
   22328:	cmp	r1, #26
   2232c:	movwcc	r0, #1
   22330:	bx	lr
   22334:	mov	r1, r0
   22338:	sub	r2, r0, #48	; 0x30
   2233c:	mov	r0, #1
   22340:	cmp	r2, #22
   22344:	bhi	2235c <__mempcpy_chk@plt+0x10d7c>
   22348:	mov	ip, #1
   2234c:	movw	r3, #1023	; 0x3ff
   22350:	movt	r3, #126	; 0x7e
   22354:	tst	r3, ip, lsl r2
   22358:	bxne	lr
   2235c:	sub	r1, r1, #97	; 0x61
   22360:	cmp	r1, #6
   22364:	movcs	r0, #0
   22368:	bxcs	lr
   2236c:	bx	lr
   22370:	sub	r1, r0, #65	; 0x41
   22374:	cmp	r1, #26
   22378:	addcc	r0, r0, #32
   2237c:	bx	lr
   22380:	sub	r1, r0, #97	; 0x61
   22384:	cmp	r1, #26
   22388:	subcc	r0, r0, #32
   2238c:	bx	lr
   22390:	push	{r4, r5, r6, sl, fp, lr}
   22394:	add	fp, sp, #16
   22398:	mov	r4, r0
   2239c:	bl	11418 <__fpending@plt>
   223a0:	mov	r5, r0
   223a4:	mov	r0, r4
   223a8:	bl	11424 <ferror_unlocked@plt>
   223ac:	mov	r6, r0
   223b0:	mov	r0, r4
   223b4:	bl	224d8 <__mempcpy_chk@plt+0x10ef8>
   223b8:	cmp	r6, #0
   223bc:	beq	223e0 <__mempcpy_chk@plt+0x10e00>
   223c0:	mvn	r4, #0
   223c4:	cmp	r0, #0
   223c8:	bne	2240c <__mempcpy_chk@plt+0x10e2c>
   223cc:	bl	114d8 <__errno_location@plt>
   223d0:	mov	r1, #0
   223d4:	str	r1, [r0]
   223d8:	mov	r0, r4
   223dc:	pop	{r4, r5, r6, sl, fp, pc}
   223e0:	cmp	r0, #0
   223e4:	mov	r4, r0
   223e8:	mvnne	r4, #0
   223ec:	cmp	r5, #0
   223f0:	bne	2240c <__mempcpy_chk@plt+0x10e2c>
   223f4:	cmp	r0, #0
   223f8:	beq	2240c <__mempcpy_chk@plt+0x10e2c>
   223fc:	bl	114d8 <__errno_location@plt>
   22400:	ldr	r0, [r0]
   22404:	subs	r4, r0, #9
   22408:	mvnne	r4, #0
   2240c:	mov	r0, r4
   22410:	pop	{r4, r5, r6, sl, fp, pc}
   22414:	push	{r4, r5, r6, r7, fp, lr}
   22418:	add	fp, sp, #16
   2241c:	mov	r5, r1
   22420:	mov	r4, r0
   22424:	ldr	r0, [r0, #4]
   22428:	cmp	r0, r1
   2242c:	bcs	22460 <__mempcpy_chk@plt+0x10e80>
   22430:	mov	r6, r3
   22434:	cmp	r3, #0
   22438:	beq	2246c <__mempcpy_chk@plt+0x10e8c>
   2243c:	mvn	r0, #0
   22440:	udiv	r0, r0, r6
   22444:	cmp	r0, r5
   22448:	bcs	2246c <__mempcpy_chk@plt+0x10e8c>
   2244c:	bl	114d8 <__errno_location@plt>
   22450:	mov	r1, #12
   22454:	str	r1, [r0]
   22458:	mov	r0, #0
   2245c:	pop	{r4, r5, r6, r7, fp, pc}
   22460:	str	r5, [r4]
   22464:	mov	r0, #1
   22468:	pop	{r4, r5, r6, r7, fp, pc}
   2246c:	mul	r1, r6, r5
   22470:	ldr	r0, [r4, #8]
   22474:	cmp	r0, r2
   22478:	beq	22490 <__mempcpy_chk@plt+0x10eb0>
   2247c:	bl	21f84 <__mempcpy_chk@plt+0x109a4>
   22480:	mov	r7, r0
   22484:	cmp	r0, #0
   22488:	bne	224c0 <__mempcpy_chk@plt+0x10ee0>
   2248c:	b	224d0 <__mempcpy_chk@plt+0x10ef0>
   22490:	mov	r0, r1
   22494:	bl	21f54 <__mempcpy_chk@plt+0x10974>
   22498:	cmp	r0, #0
   2249c:	beq	224d0 <__mempcpy_chk@plt+0x10ef0>
   224a0:	mov	r7, r0
   224a4:	ldr	r1, [r4, #8]
   224a8:	cmp	r1, #0
   224ac:	beq	224c0 <__mempcpy_chk@plt+0x10ee0>
   224b0:	ldr	r0, [r4]
   224b4:	mul	r2, r0, r6
   224b8:	mov	r0, r7
   224bc:	bl	1134c <memcpy@plt>
   224c0:	str	r5, [r4]
   224c4:	stmib	r4, {r5, r7}
   224c8:	mov	r0, #1
   224cc:	pop	{r4, r5, r6, r7, fp, pc}
   224d0:	mov	r0, #0
   224d4:	pop	{r4, r5, r6, r7, fp, pc}
   224d8:	push	{r4, r5, fp, lr}
   224dc:	add	fp, sp, #8
   224e0:	sub	sp, sp, #8
   224e4:	mov	r4, r0
   224e8:	bl	11520 <fileno@plt>
   224ec:	cmn	r0, #1
   224f0:	ble	22568 <__mempcpy_chk@plt+0x10f88>
   224f4:	mov	r0, r4
   224f8:	bl	11484 <__freading@plt>
   224fc:	cmp	r0, #0
   22500:	beq	2252c <__mempcpy_chk@plt+0x10f4c>
   22504:	mov	r0, r4
   22508:	bl	11520 <fileno@plt>
   2250c:	mov	r1, #1
   22510:	str	r1, [sp]
   22514:	mov	r2, #0
   22518:	mov	r3, #0
   2251c:	bl	11400 <lseek64@plt>
   22520:	and	r0, r0, r1
   22524:	cmn	r0, #1
   22528:	beq	22568 <__mempcpy_chk@plt+0x10f88>
   2252c:	mov	r0, r4
   22530:	bl	225d4 <__mempcpy_chk@plt+0x10ff4>
   22534:	cmp	r0, #0
   22538:	beq	22568 <__mempcpy_chk@plt+0x10f88>
   2253c:	bl	114d8 <__errno_location@plt>
   22540:	ldr	r5, [r0]
   22544:	mov	r0, r4
   22548:	bl	11538 <fclose@plt>
   2254c:	cmp	r5, #0
   22550:	beq	22560 <__mempcpy_chk@plt+0x10f80>
   22554:	bl	114d8 <__errno_location@plt>
   22558:	str	r5, [r0]
   2255c:	mvn	r0, #0
   22560:	sub	sp, fp, #8
   22564:	pop	{r4, r5, fp, pc}
   22568:	mov	r0, r4
   2256c:	sub	sp, fp, #8
   22570:	pop	{r4, r5, fp, lr}
   22574:	b	11538 <fclose@plt>
   22578:	push	{r4, r5, r6, r7, fp, lr}
   2257c:	add	fp, sp, #16
   22580:	mov	r4, r0
   22584:	cmp	r0, #2
   22588:	bhi	225b8 <__mempcpy_chk@plt+0x10fd8>
   2258c:	mov	r0, r4
   22590:	bl	225c0 <__mempcpy_chk@plt+0x10fe0>
   22594:	mov	r5, r0
   22598:	bl	114d8 <__errno_location@plt>
   2259c:	mov	r6, r0
   225a0:	ldr	r7, [r0]
   225a4:	mov	r0, r4
   225a8:	bl	115d4 <close@plt>
   225ac:	str	r7, [r6]
   225b0:	mov	r0, r5
   225b4:	pop	{r4, r5, r6, r7, fp, pc}
   225b8:	mov	r0, r4
   225bc:	pop	{r4, r5, r6, r7, fp, pc}
   225c0:	lsl	r1, r1, #12
   225c4:	movw	r2, #1030	; 0x406
   225c8:	and	r1, r2, r1, asr #31
   225cc:	mov	r2, #3
   225d0:	b	22770 <__mempcpy_chk@plt+0x11190>
   225d4:	push	{r4, sl, fp, lr}
   225d8:	add	fp, sp, #8
   225dc:	mov	r4, r0
   225e0:	cmp	r0, #0
   225e4:	beq	225fc <__mempcpy_chk@plt+0x1101c>
   225e8:	mov	r0, r4
   225ec:	bl	11484 <__freading@plt>
   225f0:	cmp	r0, #0
   225f4:	movne	r0, r4
   225f8:	blne	22608 <__mempcpy_chk@plt+0x11028>
   225fc:	mov	r0, r4
   22600:	pop	{r4, sl, fp, lr}
   22604:	b	11310 <fflush@plt>
   22608:	push	{fp, lr}
   2260c:	mov	fp, sp
   22610:	sub	sp, sp, #8
   22614:	ldrb	r1, [r0, #1]
   22618:	tst	r1, #1
   2261c:	beq	22634 <__mempcpy_chk@plt+0x11054>
   22620:	mov	r1, #1
   22624:	str	r1, [sp]
   22628:	mov	r2, #0
   2262c:	mov	r3, #0
   22630:	bl	12bb0 <__mempcpy_chk@plt+0x15d0>
   22634:	mov	sp, fp
   22638:	pop	{fp, pc}
   2263c:	push	{fp, lr}
   22640:	mov	fp, sp
   22644:	bl	114d8 <__errno_location@plt>
   22648:	mov	r1, #12
   2264c:	str	r1, [r0]
   22650:	mov	r0, #0
   22654:	pop	{fp, pc}
   22658:	b	21f54 <__mempcpy_chk@plt+0x10974>
   2265c:	cmp	r1, #0
   22660:	orreq	r1, r1, #1
   22664:	b	21f84 <__mempcpy_chk@plt+0x109a4>
   22668:	b	21f00 <__mempcpy_chk@plt+0x10920>
   2266c:	clz	r3, r2
   22670:	lsr	ip, r3, #5
   22674:	clz	r3, r1
   22678:	lsr	r3, r3, #5
   2267c:	orrs	r3, r3, ip
   22680:	movwne	r1, #1
   22684:	movwne	r2, #1
   22688:	b	22728 <__mempcpy_chk@plt+0x11148>
   2268c:	push	{fp, lr}
   22690:	mov	fp, sp
   22694:	mov	r0, #14
   22698:	bl	11580 <nl_langinfo@plt>
   2269c:	movw	r1, #12505	; 0x30d9
   226a0:	movt	r1, #2
   226a4:	cmp	r0, #0
   226a8:	movne	r1, r0
   226ac:	ldrb	r2, [r1]
   226b0:	movw	r0, #14618	; 0x391a
   226b4:	movt	r0, #2
   226b8:	cmp	r2, #0
   226bc:	movne	r0, r1
   226c0:	pop	{fp, pc}
   226c4:	push	{r4, r5, r6, r7, fp, lr}
   226c8:	add	fp, sp, #16
   226cc:	sub	sp, sp, #8
   226d0:	mov	r7, r2
   226d4:	mov	r4, r1
   226d8:	add	r5, sp, #4
   226dc:	cmp	r0, #0
   226e0:	movne	r5, r0
   226e4:	mov	r0, r5
   226e8:	bl	11430 <mbrtowc@plt>
   226ec:	mov	r6, r0
   226f0:	cmp	r7, #0
   226f4:	beq	2271c <__mempcpy_chk@plt+0x1113c>
   226f8:	cmn	r6, #2
   226fc:	bcc	2271c <__mempcpy_chk@plt+0x1113c>
   22700:	mov	r0, #0
   22704:	bl	22954 <__mempcpy_chk@plt+0x11374>
   22708:	cmp	r0, #0
   2270c:	bne	2271c <__mempcpy_chk@plt+0x1113c>
   22710:	ldrb	r0, [r4]
   22714:	str	r0, [r5]
   22718:	mov	r6, #1
   2271c:	mov	r0, r6
   22720:	sub	sp, fp, #16
   22724:	pop	{r4, r5, r6, r7, fp, pc}
   22728:	cmp	r2, #0
   2272c:	beq	2275c <__mempcpy_chk@plt+0x1117c>
   22730:	mvn	r3, #0
   22734:	udiv	r3, r3, r2
   22738:	cmp	r3, r1
   2273c:	bcs	2275c <__mempcpy_chk@plt+0x1117c>
   22740:	push	{fp, lr}
   22744:	mov	fp, sp
   22748:	bl	114d8 <__errno_location@plt>
   2274c:	mov	r1, #12
   22750:	str	r1, [r0]
   22754:	mov	r0, #0
   22758:	pop	{fp, pc}
   2275c:	mul	r1, r2, r1
   22760:	b	21f84 <__mempcpy_chk@plt+0x109a4>
   22764:	mov	r1, #0
   22768:	mov	r2, #3
   2276c:	b	22770 <__mempcpy_chk@plt+0x11190>
   22770:	sub	sp, sp, #8
   22774:	push	{fp, lr}
   22778:	mov	fp, sp
   2277c:	sub	sp, sp, #8
   22780:	str	r2, [fp, #8]
   22784:	str	r3, [fp, #12]
   22788:	add	r2, fp, #8
   2278c:	str	r2, [sp, #4]
   22790:	cmp	r1, #11
   22794:	bhi	227d4 <__mempcpy_chk@plt+0x111f4>
   22798:	mov	r2, #1
   2279c:	movw	r3, #1300	; 0x514
   227a0:	tst	r3, r2, lsl r1
   227a4:	bne	22824 <__mempcpy_chk@plt+0x11244>
   227a8:	movw	r3, #2570	; 0xa0a
   227ac:	tst	r3, r2, lsl r1
   227b0:	bne	227fc <__mempcpy_chk@plt+0x1121c>
   227b4:	cmp	r1, #0
   227b8:	bne	227d4 <__mempcpy_chk@plt+0x111f4>
   227bc:	ldr	r1, [sp, #4]
   227c0:	add	r2, r1, #4
   227c4:	str	r2, [sp, #4]
   227c8:	ldr	r1, [r1]
   227cc:	bl	22848 <__mempcpy_chk@plt+0x11268>
   227d0:	b	22838 <__mempcpy_chk@plt+0x11258>
   227d4:	sub	r2, r1, #1024	; 0x400
   227d8:	cmp	r2, #10
   227dc:	bhi	22824 <__mempcpy_chk@plt+0x11244>
   227e0:	mov	ip, #1
   227e4:	movw	r3, #645	; 0x285
   227e8:	tst	r3, ip, lsl r2
   227ec:	bne	22824 <__mempcpy_chk@plt+0x11244>
   227f0:	movw	r3, #1282	; 0x502
   227f4:	tst	r3, ip, lsl r2
   227f8:	beq	22804 <__mempcpy_chk@plt+0x11224>
   227fc:	bl	11550 <fcntl64@plt>
   22800:	b	22838 <__mempcpy_chk@plt+0x11258>
   22804:	cmp	r2, #6
   22808:	bne	22824 <__mempcpy_chk@plt+0x11244>
   2280c:	ldr	r1, [sp, #4]
   22810:	add	r2, r1, #4
   22814:	str	r2, [sp, #4]
   22818:	ldr	r1, [r1]
   2281c:	bl	22854 <__mempcpy_chk@plt+0x11274>
   22820:	b	22838 <__mempcpy_chk@plt+0x11258>
   22824:	ldr	r2, [sp, #4]
   22828:	add	r3, r2, #4
   2282c:	str	r3, [sp, #4]
   22830:	ldr	r2, [r2]
   22834:	bl	11550 <fcntl64@plt>
   22838:	mov	sp, fp
   2283c:	pop	{fp, lr}
   22840:	add	sp, sp, #8
   22844:	bx	lr
   22848:	mov	r2, r1
   2284c:	mov	r1, #0
   22850:	b	11550 <fcntl64@plt>
   22854:	push	{r4, r5, r6, r7, fp, lr}
   22858:	add	fp, sp, #16
   2285c:	mov	r5, r1
   22860:	mov	r6, r0
   22864:	movw	r7, #25656	; 0x6438
   22868:	movt	r7, #3
   2286c:	ldr	r0, [r7]
   22870:	cmp	r0, #0
   22874:	bmi	228d8 <__mempcpy_chk@plt+0x112f8>
   22878:	mov	r0, r6
   2287c:	movw	r1, #1030	; 0x406
   22880:	mov	r2, r5
   22884:	bl	11550 <fcntl64@plt>
   22888:	mov	r4, r0
   2288c:	cmn	r0, #1
   22890:	bgt	228c4 <__mempcpy_chk@plt+0x112e4>
   22894:	bl	114d8 <__errno_location@plt>
   22898:	ldr	r0, [r0]
   2289c:	cmp	r0, #22
   228a0:	bne	228c4 <__mempcpy_chk@plt+0x112e4>
   228a4:	mov	r0, r6
   228a8:	mov	r1, r5
   228ac:	bl	22848 <__mempcpy_chk@plt+0x11268>
   228b0:	mov	r4, r0
   228b4:	cmp	r0, #0
   228b8:	bmi	22928 <__mempcpy_chk@plt+0x11348>
   228bc:	mvn	r0, #0
   228c0:	b	228c8 <__mempcpy_chk@plt+0x112e8>
   228c4:	mov	r0, #1
   228c8:	str	r0, [r7]
   228cc:	cmp	r4, #0
   228d0:	bpl	228f0 <__mempcpy_chk@plt+0x11310>
   228d4:	b	22928 <__mempcpy_chk@plt+0x11348>
   228d8:	mov	r0, r6
   228dc:	mov	r1, r5
   228e0:	bl	22848 <__mempcpy_chk@plt+0x11268>
   228e4:	mov	r4, r0
   228e8:	cmp	r4, #0
   228ec:	bmi	22928 <__mempcpy_chk@plt+0x11348>
   228f0:	ldr	r0, [r7]
   228f4:	cmn	r0, #1
   228f8:	bne	22928 <__mempcpy_chk@plt+0x11348>
   228fc:	mov	r0, r4
   22900:	mov	r1, #1
   22904:	bl	11550 <fcntl64@plt>
   22908:	cmp	r0, #0
   2290c:	bmi	22930 <__mempcpy_chk@plt+0x11350>
   22910:	orr	r2, r0, #1
   22914:	mov	r0, r4
   22918:	mov	r1, #2
   2291c:	bl	11550 <fcntl64@plt>
   22920:	cmn	r0, #1
   22924:	beq	22930 <__mempcpy_chk@plt+0x11350>
   22928:	mov	r0, r4
   2292c:	pop	{r4, r5, r6, r7, fp, pc}
   22930:	bl	114d8 <__errno_location@plt>
   22934:	mov	r5, r0
   22938:	ldr	r6, [r0]
   2293c:	mov	r0, r4
   22940:	bl	115d4 <close@plt>
   22944:	str	r6, [r5]
   22948:	mvn	r4, #0
   2294c:	mov	r0, r4
   22950:	pop	{r4, r5, r6, r7, fp, pc}
   22954:	push	{r4, sl, fp, lr}
   22958:	add	fp, sp, #8
   2295c:	sub	sp, sp, #264	; 0x108
   22960:	add	r1, sp, #7
   22964:	movw	r2, #257	; 0x101
   22968:	bl	229c0 <__mempcpy_chk@plt+0x113e0>
   2296c:	mov	r4, #0
   22970:	cmp	r0, #0
   22974:	bne	229b4 <__mempcpy_chk@plt+0x113d4>
   22978:	add	r0, sp, #7
   2297c:	movw	r1, #14624	; 0x3920
   22980:	movt	r1, #2
   22984:	mov	r2, #2
   22988:	bl	114c0 <bcmp@plt>
   2298c:	cmp	r0, #0
   22990:	beq	229b4 <__mempcpy_chk@plt+0x113d4>
   22994:	add	r0, sp, #7
   22998:	movw	r1, #14626	; 0x3922
   2299c:	movt	r1, #2
   229a0:	mov	r2, #6
   229a4:	bl	114c0 <bcmp@plt>
   229a8:	mov	r4, r0
   229ac:	cmp	r0, #0
   229b0:	movwne	r4, #1
   229b4:	mov	r0, r4
   229b8:	sub	sp, fp, #8
   229bc:	pop	{r4, sl, fp, pc}
   229c0:	b	229c4 <__mempcpy_chk@plt+0x113e4>
   229c4:	push	{r4, r5, r6, r7, fp, lr}
   229c8:	add	fp, sp, #16
   229cc:	mov	r6, r2
   229d0:	mov	r4, r1
   229d4:	bl	22a5c <__mempcpy_chk@plt+0x1147c>
   229d8:	cmp	r0, #0
   229dc:	beq	22a0c <__mempcpy_chk@plt+0x1142c>
   229e0:	mov	r7, r0
   229e4:	bl	114cc <strlen@plt>
   229e8:	cmp	r0, r6
   229ec:	bcs	22a28 <__mempcpy_chk@plt+0x11448>
   229f0:	add	r2, r0, #1
   229f4:	mov	r0, r4
   229f8:	mov	r1, r7
   229fc:	bl	1134c <memcpy@plt>
   22a00:	mov	r5, #0
   22a04:	mov	r0, r5
   22a08:	pop	{r4, r5, r6, r7, fp, pc}
   22a0c:	mov	r5, #22
   22a10:	cmp	r6, #0
   22a14:	beq	22a50 <__mempcpy_chk@plt+0x11470>
   22a18:	mov	r0, #0
   22a1c:	strb	r0, [r4]
   22a20:	mov	r0, r5
   22a24:	pop	{r4, r5, r6, r7, fp, pc}
   22a28:	mov	r5, #34	; 0x22
   22a2c:	cmp	r6, #0
   22a30:	beq	22a50 <__mempcpy_chk@plt+0x11470>
   22a34:	sub	r6, r6, #1
   22a38:	mov	r0, r4
   22a3c:	mov	r1, r7
   22a40:	mov	r2, r6
   22a44:	bl	1134c <memcpy@plt>
   22a48:	mov	r0, #0
   22a4c:	strb	r0, [r4, r6]
   22a50:	mov	r0, r5
   22a54:	pop	{r4, r5, r6, r7, fp, pc}
   22a58:	b	22a5c <__mempcpy_chk@plt+0x1147c>
   22a5c:	mov	r1, #0
   22a60:	b	1155c <setlocale@plt>
   22a64:	cmp	r3, #0
   22a68:	cmpeq	r2, #0
   22a6c:	bne	22a90 <__mempcpy_chk@plt+0x114b0>
   22a70:	cmp	r1, #0
   22a74:	movlt	r1, #-2147483648	; 0x80000000
   22a78:	movlt	r0, #0
   22a7c:	blt	22a8c <__mempcpy_chk@plt+0x114ac>
   22a80:	cmpeq	r0, #0
   22a84:	mvnne	r1, #-2147483648	; 0x80000000
   22a88:	mvnne	r0, #0
   22a8c:	b	22b38 <__mempcpy_chk@plt+0x11558>
   22a90:	sub	sp, sp, #8
   22a94:	push	{sp, lr}
   22a98:	cmp	r1, #0
   22a9c:	blt	22abc <__mempcpy_chk@plt+0x114dc>
   22aa0:	cmp	r3, #0
   22aa4:	blt	22af0 <__mempcpy_chk@plt+0x11510>
   22aa8:	bl	22b48 <__mempcpy_chk@plt+0x11568>
   22aac:	ldr	lr, [sp, #4]
   22ab0:	add	sp, sp, #8
   22ab4:	pop	{r2, r3}
   22ab8:	bx	lr
   22abc:	rsbs	r0, r0, #0
   22ac0:	sbc	r1, r1, r1, lsl #1
   22ac4:	cmp	r3, #0
   22ac8:	blt	22b14 <__mempcpy_chk@plt+0x11534>
   22acc:	bl	22b48 <__mempcpy_chk@plt+0x11568>
   22ad0:	ldr	lr, [sp, #4]
   22ad4:	add	sp, sp, #8
   22ad8:	pop	{r2, r3}
   22adc:	rsbs	r0, r0, #0
   22ae0:	sbc	r1, r1, r1, lsl #1
   22ae4:	rsbs	r2, r2, #0
   22ae8:	sbc	r3, r3, r3, lsl #1
   22aec:	bx	lr
   22af0:	rsbs	r2, r2, #0
   22af4:	sbc	r3, r3, r3, lsl #1
   22af8:	bl	22b48 <__mempcpy_chk@plt+0x11568>
   22afc:	ldr	lr, [sp, #4]
   22b00:	add	sp, sp, #8
   22b04:	pop	{r2, r3}
   22b08:	rsbs	r0, r0, #0
   22b0c:	sbc	r1, r1, r1, lsl #1
   22b10:	bx	lr
   22b14:	rsbs	r2, r2, #0
   22b18:	sbc	r3, r3, r3, lsl #1
   22b1c:	bl	22b48 <__mempcpy_chk@plt+0x11568>
   22b20:	ldr	lr, [sp, #4]
   22b24:	add	sp, sp, #8
   22b28:	pop	{r2, r3}
   22b2c:	rsbs	r2, r2, #0
   22b30:	sbc	r3, r3, r3, lsl #1
   22b34:	bx	lr
   22b38:	push	{r1, lr}
   22b3c:	mov	r0, #8
   22b40:	bl	112c8 <raise@plt>
   22b44:	pop	{r1, pc}
   22b48:	cmp	r1, r3
   22b4c:	cmpeq	r0, r2
   22b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b54:	mov	r4, r0
   22b58:	movcc	r0, #0
   22b5c:	mov	r5, r1
   22b60:	ldr	lr, [sp, #36]	; 0x24
   22b64:	movcc	r1, r0
   22b68:	bcc	22c64 <__mempcpy_chk@plt+0x11684>
   22b6c:	cmp	r3, #0
   22b70:	clzeq	ip, r2
   22b74:	clzne	ip, r3
   22b78:	addeq	ip, ip, #32
   22b7c:	cmp	r5, #0
   22b80:	clzeq	r1, r4
   22b84:	addeq	r1, r1, #32
   22b88:	clzne	r1, r5
   22b8c:	sub	ip, ip, r1
   22b90:	sub	sl, ip, #32
   22b94:	lsl	r9, r3, ip
   22b98:	rsb	fp, ip, #32
   22b9c:	orr	r9, r9, r2, lsl sl
   22ba0:	orr	r9, r9, r2, lsr fp
   22ba4:	lsl	r8, r2, ip
   22ba8:	cmp	r5, r9
   22bac:	cmpeq	r4, r8
   22bb0:	movcc	r0, #0
   22bb4:	movcc	r1, r0
   22bb8:	bcc	22bd4 <__mempcpy_chk@plt+0x115f4>
   22bbc:	mov	r0, #1
   22bc0:	subs	r4, r4, r8
   22bc4:	lsl	r1, r0, sl
   22bc8:	orr	r1, r1, r0, lsr fp
   22bcc:	lsl	r0, r0, ip
   22bd0:	sbc	r5, r5, r9
   22bd4:	cmp	ip, #0
   22bd8:	beq	22c64 <__mempcpy_chk@plt+0x11684>
   22bdc:	lsr	r6, r8, #1
   22be0:	orr	r6, r6, r9, lsl #31
   22be4:	lsr	r7, r9, #1
   22be8:	mov	r2, ip
   22bec:	b	22c10 <__mempcpy_chk@plt+0x11630>
   22bf0:	subs	r3, r4, r6
   22bf4:	sbc	r8, r5, r7
   22bf8:	adds	r3, r3, r3
   22bfc:	adc	r8, r8, r8
   22c00:	adds	r4, r3, #1
   22c04:	adc	r5, r8, #0
   22c08:	subs	r2, r2, #1
   22c0c:	beq	22c2c <__mempcpy_chk@plt+0x1164c>
   22c10:	cmp	r5, r7
   22c14:	cmpeq	r4, r6
   22c18:	bcs	22bf0 <__mempcpy_chk@plt+0x11610>
   22c1c:	adds	r4, r4, r4
   22c20:	adc	r5, r5, r5
   22c24:	subs	r2, r2, #1
   22c28:	bne	22c10 <__mempcpy_chk@plt+0x11630>
   22c2c:	lsr	r3, r4, ip
   22c30:	orr	r3, r3, r5, lsl fp
   22c34:	lsr	r2, r5, ip
   22c38:	orr	r3, r3, r5, lsr sl
   22c3c:	adds	r0, r0, r4
   22c40:	mov	r4, r3
   22c44:	lsl	r3, r2, ip
   22c48:	orr	r3, r3, r4, lsl sl
   22c4c:	lsl	ip, r4, ip
   22c50:	orr	r3, r3, r4, lsr fp
   22c54:	adc	r1, r1, r5
   22c58:	subs	r0, r0, ip
   22c5c:	mov	r5, r2
   22c60:	sbc	r1, r1, r3
   22c64:	cmp	lr, #0
   22c68:	strdne	r4, [lr]
   22c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22c74:	mov	r7, r0
   22c78:	ldr	r6, [pc, #72]	; 22cc8 <__mempcpy_chk@plt+0x116e8>
   22c7c:	ldr	r5, [pc, #72]	; 22ccc <__mempcpy_chk@plt+0x116ec>
   22c80:	add	r6, pc, r6
   22c84:	add	r5, pc, r5
   22c88:	sub	r6, r6, r5
   22c8c:	mov	r8, r1
   22c90:	mov	r9, r2
   22c94:	bl	1126c <pthread_mutex_unlock@plt-0x20>
   22c98:	asrs	r6, r6, #2
   22c9c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22ca0:	mov	r4, #0
   22ca4:	add	r4, r4, #1
   22ca8:	ldr	r3, [r5], #4
   22cac:	mov	r2, r9
   22cb0:	mov	r1, r8
   22cb4:	mov	r0, r7
   22cb8:	blx	r3
   22cbc:	cmp	r6, r4
   22cc0:	bne	22ca4 <__mempcpy_chk@plt+0x116c4>
   22cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22cc8:	andeq	r1, r1, r4, lsl #5
   22ccc:	andeq	r1, r1, ip, ror r2
   22cd0:	bx	lr
   22cd4:	ldr	r3, [pc, #12]	; 22ce8 <__mempcpy_chk@plt+0x11708>
   22cd8:	mov	r1, #0
   22cdc:	add	r3, pc, r3
   22ce0:	ldr	r2, [r3]
   22ce4:	b	114f0 <__cxa_atexit@plt>
   22ce8:	andeq	r1, r1, r0, asr r4

Disassembly of section .fini:

00022cec <.fini>:
   22cec:	push	{r3, lr}
   22cf0:	pop	{r3, pc}
