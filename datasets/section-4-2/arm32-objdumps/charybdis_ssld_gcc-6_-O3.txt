
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00010f2c <.init>:
   10f2c:	push	{r3, lr}
   10f30:	bl	11688 <__errno_location@plt+0x424>
   10f34:	pop	{r3, pc}

Disassembly of section .plt:

00010f38 <open@plt-0x14>:
   10f38:	push	{lr}		; (str lr, [sp, #-4]!)
   10f3c:	ldr	lr, [pc, #4]	; 10f48 <open@plt-0x4>
   10f40:	add	lr, pc, lr
   10f44:	ldr	pc, [lr, #8]!
   10f48:	strheq	r3, [r1], -r8

00010f4c <open@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #77824	; 0x13000
   10f54:	ldr	pc, [ip, #184]!	; 0xb8

00010f58 <sigemptyset@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #77824	; 0x13000
   10f60:	ldr	pc, [ip, #176]!	; 0xb0

00010f64 <strerror@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #77824	; 0x13000
   10f6c:	ldr	pc, [ip, #168]!	; 0xa8

00010f70 <rb_get_type@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #77824	; 0x13000
   10f78:	ldr	pc, [ip, #160]!	; 0xa0

00010f7c <zError@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #77824	; 0x13000
   10f84:	ldr	pc, [ip, #152]!	; 0x98

00010f88 <abort@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #77824	; 0x13000
   10f90:	ldr	pc, [ip, #144]!	; 0x90

00010f94 <rb_event_addish@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #77824	; 0x13000
   10f9c:	ldr	pc, [ip, #136]!	; 0x88

00010fa0 <rb_ignore_errno@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #77824	; 0x13000
   10fa8:	ldr	pc, [ip, #128]!	; 0x80

00010fac <rb_lib_version@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #77824	; 0x13000
   10fb4:	ldr	pc, [ip, #120]!	; 0x78

00010fb8 <inflateEnd@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #77824	; 0x13000
   10fc0:	ldr	pc, [ip, #112]!	; 0x70

00010fc4 <__libc_start_main@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #77824	; 0x13000
   10fcc:	ldr	pc, [ip, #104]!	; 0x68

00010fd0 <rb_setselect@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #77824	; 0x13000
   10fd8:	ldr	pc, [ip, #96]!	; 0x60

00010fdc <__gmon_start__@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #77824	; 0x13000
   10fe4:	ldr	pc, [ip, #88]!	; 0x58

00010fe8 <rb_ssl_handshake_count@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #77824	; 0x13000
   10ff0:	ldr	pc, [ip, #80]!	; 0x50

00010ff4 <rb_send_fd_buf@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #77824	; 0x13000
   10ffc:	ldr	pc, [ip, #72]!	; 0x48

00011000 <vsnprintf@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #77824	; 0x13000
   11008:	ldr	pc, [ip, #64]!	; 0x40

0001100c <strncpy@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #77824	; 0x13000
   11014:	ldr	pc, [ip, #56]!	; 0x38

00011018 <getenv@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #77824	; 0x13000
   11020:	ldr	pc, [ip, #48]!	; 0x30

00011024 <deflate@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #77824	; 0x13000
   1102c:	ldr	pc, [ip, #40]!	; 0x28

00011030 <deflateInit_@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #77824	; 0x13000
   11038:	ldr	pc, [ip, #32]!

0001103c <calloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #77824	; 0x13000
   11044:	ldr	pc, [ip, #24]!

00011048 <rb_set_nb@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #77824	; 0x13000
   11050:	ldr	pc, [ip, #16]!

00011054 <memset@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #77824	; 0x13000
   1105c:	ldr	pc, [ip, #8]!

00011060 <__assert_fail@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #77824	; 0x13000
   11068:	ldr	pc, [ip, #0]!

0001106c <rb_strlcpy@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #73728	; 0x12000
   11074:	ldr	pc, [ip, #4088]!	; 0xff8

00011078 <rb_get_ssl_certfp@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #73728	; 0x12000
   11080:	ldr	pc, [ip, #4080]!	; 0xff0

00011084 <inflate@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #73728	; 0x12000
   1108c:	ldr	pc, [ip, #4072]!	; 0xfe8

00011090 <rb_init_rawbuffers@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #73728	; 0x12000
   11098:	ldr	pc, [ip, #4064]!	; 0xfe0

0001109c <free@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #73728	; 0x12000
   110a4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110a8 <rb_lib_loop@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #73728	; 0x12000
   110b0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110b4 <deflateEnd@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #73728	; 0x12000
   110bc:	ldr	pc, [ip, #4040]!	; 0xfc8

000110c0 <rb_read@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #73728	; 0x12000
   110c8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110cc <rb_set_type@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #73728	; 0x12000
   110d4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110d8 <strlen@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #73728	; 0x12000
   110e0:	ldr	pc, [ip, #4016]!	; 0xfb0

000110e4 <rb_ssl_get_cipher@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #73728	; 0x12000
   110ec:	ldr	pc, [ip, #4008]!	; 0xfa8

000110f0 <memcpy@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #73728	; 0x12000
   110f8:	ldr	pc, [ip, #4000]!	; 0xfa0

000110fc <rb_close@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #73728	; 0x12000
   11104:	ldr	pc, [ip, #3992]!	; 0xf98

00011108 <strtol@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #73728	; 0x12000
   11110:	ldr	pc, [ip, #3984]!	; 0xf90

00011114 <sigaddset@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #73728	; 0x12000
   1111c:	ldr	pc, [ip, #3976]!	; 0xf88

00011120 <strcpy@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #73728	; 0x12000
   11128:	ldr	pc, [ip, #3968]!	; 0xf80

0001112c <rb_ssl_clear_handshake_count@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #73728	; 0x12000
   11134:	ldr	pc, [ip, #3960]!	; 0xf78

00011138 <rb_rawbuf_length@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #73728	; 0x12000
   11140:	ldr	pc, [ip, #3952]!	; 0xf70

00011144 <rb_free_rawbuffer@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #73728	; 0x12000
   1114c:	ldr	pc, [ip, #3944]!	; 0xf68

00011150 <rb_get_ssl_strerror@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #73728	; 0x12000
   11158:	ldr	pc, [ip, #3936]!	; 0xf60

0001115c <close@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #73728	; 0x12000
   11164:	ldr	pc, [ip, #3928]!	; 0xf58

00011168 <fwrite@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #73728	; 0x12000
   11170:	ldr	pc, [ip, #3920]!	; 0xf50

00011174 <rb_init_prng@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #73728	; 0x12000
   1117c:	ldr	pc, [ip, #3912]!	; 0xf48

00011180 <rb_outofmemory@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #73728	; 0x12000
   11188:	ldr	pc, [ip, #3904]!	; 0xf40

0001118c <rb_supports_ssl@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #73728	; 0x12000
   11194:	ldr	pc, [ip, #3896]!	; 0xf38

00011198 <sigaction@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #73728	; 0x12000
   111a0:	ldr	pc, [ip, #3888]!	; 0xf30

000111a4 <rb_ssl_start_connected@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #73728	; 0x12000
   111ac:	ldr	pc, [ip, #3880]!	; 0xf28

000111b0 <rb_lib_init@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #73728	; 0x12000
   111b8:	ldr	pc, [ip, #3872]!	; 0xf20

000111bc <rb_new_rawbuffer@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #73728	; 0x12000
   111c4:	ldr	pc, [ip, #3864]!	; 0xf18

000111c8 <rb_open@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #73728	; 0x12000
   111d0:	ldr	pc, [ip, #3856]!	; 0xf10

000111d4 <inflateInit_@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #73728	; 0x12000
   111dc:	ldr	pc, [ip, #3848]!	; 0xf08

000111e0 <rb_recv_fd_buf@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #73728	; 0x12000
   111e8:	ldr	pc, [ip, #3840]!	; 0xf00

000111ec <rb_ssl_start_accepted@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #73728	; 0x12000
   111f4:	ldr	pc, [ip, #3832]!	; 0xef8

000111f8 <dup2@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #73728	; 0x12000
   11200:	ldr	pc, [ip, #3824]!	; 0xef0

00011204 <rb_event_add@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #73728	; 0x12000
   1120c:	ldr	pc, [ip, #3816]!	; 0xee8

00011210 <snprintf@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #73728	; 0x12000
   11218:	ldr	pc, [ip, #3808]!	; 0xee0

0001121c <strncmp@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #73728	; 0x12000
   11224:	ldr	pc, [ip, #3800]!	; 0xed8

00011228 <getrlimit@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #73728	; 0x12000
   11230:	ldr	pc, [ip, #3792]!	; 0xed0

00011234 <rb_rawbuf_append@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #73728	; 0x12000
   1123c:	ldr	pc, [ip, #3784]!	; 0xec8

00011240 <rb_rawbuf_flush@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #73728	; 0x12000
   11248:	ldr	pc, [ip, #3776]!	; 0xec0

0001124c <rb_setup_ssl_server@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #73728	; 0x12000
   11254:	ldr	pc, [ip, #3768]!	; 0xeb8

00011258 <exit@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #73728	; 0x12000
   11260:	ldr	pc, [ip, #3760]!	; 0xeb0

00011264 <__errno_location@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #73728	; 0x12000
   1126c:	ldr	pc, [ip, #3752]!	; 0xea8

Disassembly of section .text:

00011270 <.text>:
   11270:	push	{r4, lr}
   11274:	mov	r2, #236	; 0xec
   11278:	ldr	r3, [pc, #8]	; 11288 <__errno_location@plt+0x24>
   1127c:	ldr	r1, [pc, #8]	; 1128c <__errno_location@plt+0x28>
   11280:	ldr	r0, [pc, #8]	; 11290 <__errno_location@plt+0x2c>
   11284:	bl	11060 <__assert_fail@plt>
   11288:			; <UNDEFINED> instruction: 0x000139b8
   1128c:	andeq	r3, r1, r4, ror #19
   11290:	andeq	r3, r1, r0, lsl #20
   11294:	push	{r4, lr}
   11298:	mov	r2, #145	; 0x91
   1129c:	ldr	r3, [pc, #8]	; 112ac <__errno_location@plt+0x48>
   112a0:	ldr	r1, [pc, #8]	; 112b0 <__errno_location@plt+0x4c>
   112a4:	ldr	r0, [pc, #8]	; 112b4 <__errno_location@plt+0x50>
   112a8:	bl	11060 <__assert_fail@plt>
   112ac:	andeq	r3, r1, r8, asr #19
   112b0:	andeq	r3, r1, r4, ror #19
   112b4:	andeq	r3, r1, r0, lsl #20
   112b8:	push	{r4, lr}
   112bc:	mov	r2, #213	; 0xd5
   112c0:	ldr	r3, [pc, #8]	; 112d0 <__errno_location@plt+0x6c>
   112c4:	ldr	r1, [pc, #8]	; 112d4 <__errno_location@plt+0x70>
   112c8:	ldr	r0, [pc, #8]	; 112d8 <__errno_location@plt+0x74>
   112cc:	bl	11060 <__assert_fail@plt>
   112d0:	ldrdeq	r3, [r1], -r4
   112d4:	andeq	r3, r1, r4, ror #19
   112d8:	andeq	r3, r1, r0, lsl sl
   112dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   112e0:	sub	sp, sp, #164	; 0xa4
   112e4:	add	r1, sp, #20
   112e8:	mov	r0, #7
   112ec:	bl	11228 <getrlimit@plt>
   112f0:	cmp	r0, #0
   112f4:	ldr	r0, [pc, #780]	; 11608 <__errno_location@plt+0x3a4>
   112f8:	ldreq	r7, [sp, #20]
   112fc:	ldrne	r7, [pc, #776]	; 1160c <__errno_location@plt+0x3a8>
   11300:	bl	11018 <getenv@plt>
   11304:	mov	r6, r0
   11308:	ldr	r0, [pc, #768]	; 11610 <__errno_location@plt+0x3ac>
   1130c:	bl	11018 <getenv@plt>
   11310:	mov	r5, r0
   11314:	ldr	r0, [pc, #760]	; 11614 <__errno_location@plt+0x3b0>
   11318:	bl	11018 <getenv@plt>
   1131c:	cmp	r5, #0
   11320:	cmpne	r6, #0
   11324:	moveq	r4, #1
   11328:	movne	r4, #0
   1132c:	cmp	r0, #0
   11330:	orreq	r4, r4, #1
   11334:	cmp	r4, #0
   11338:	mov	r8, r0
   1133c:	bne	1158c <__errno_location@plt+0x328>
   11340:	mov	r1, r4
   11344:	mov	r0, r6
   11348:	mov	r2, #10
   1134c:	bl	11108 <strtol@plt>
   11350:	mov	r1, r4
   11354:	mov	r2, #10
   11358:	mov	r6, r0
   1135c:	mov	r0, r5
   11360:	bl	11108 <strtol@plt>
   11364:	mov	r1, r4
   11368:	mov	r2, #10
   1136c:	mov	r5, r0
   11370:	mov	r0, r8
   11374:	bl	11108 <strtol@plt>
   11378:	ldr	r3, [pc, #664]	; 11618 <__errno_location@plt+0x3b4>
   1137c:	cmp	r7, #3
   11380:	movgt	r4, #3
   11384:	str	r0, [r3, #12]
   11388:	bgt	1157c <__errno_location@plt+0x318>
   1138c:	mov	r1, #2
   11390:	ldr	r0, [pc, #644]	; 1161c <__errno_location@plt+0x3b8>
   11394:	bl	10f4c <open@plt>
   11398:	subs	r4, r0, #0
   1139c:	blt	113cc <__errno_location@plt+0x168>
   113a0:	cmp	r6, #0
   113a4:	cmpne	r5, #0
   113a8:	bne	115f8 <__errno_location@plt+0x394>
   113ac:	cmp	r6, #1
   113b0:	cmpne	r5, #1
   113b4:	bne	115e8 <__errno_location@plt+0x384>
   113b8:	cmp	r6, #2
   113bc:	cmpne	r5, #2
   113c0:	bne	115d8 <__errno_location@plt+0x374>
   113c4:	cmp	r4, #2
   113c8:	bgt	115cc <__errno_location@plt+0x368>
   113cc:	add	r8, sp, #24
   113d0:	mov	r4, #0
   113d4:	mov	r9, #1
   113d8:	mov	r0, r8
   113dc:	str	r4, [sp, #152]	; 0x98
   113e0:	str	r9, [sp, #20]
   113e4:	bl	10f58 <sigemptyset@plt>
   113e8:	mov	r0, r8
   113ec:	mov	r1, #13
   113f0:	bl	11114 <sigaddset@plt>
   113f4:	mov	r0, r8
   113f8:	mov	r1, #14
   113fc:	bl	11114 <sigaddset@plt>
   11400:	mov	r0, r8
   11404:	mov	r1, #5
   11408:	bl	11114 <sigaddset@plt>
   1140c:	mov	r0, r8
   11410:	mov	r1, #28
   11414:	bl	11114 <sigaddset@plt>
   11418:	mov	r2, r4
   1141c:	add	r1, sp, #20
   11420:	mov	r0, #28
   11424:	bl	11198 <sigaction@plt>
   11428:	mov	r2, r4
   1142c:	add	r1, sp, #20
   11430:	mov	r0, #13
   11434:	bl	11198 <sigaction@plt>
   11438:	mov	r2, r4
   1143c:	add	r1, sp, #20
   11440:	mov	r0, #5
   11444:	bl	11198 <sigaction@plt>
   11448:	ldr	r3, [pc, #464]	; 11620 <__errno_location@plt+0x3bc>
   1144c:	add	r1, sp, #20
   11450:	mov	r2, r4
   11454:	mov	r0, #14
   11458:	mov	r8, #1024	; 0x400
   1145c:	str	r3, [sp, #20]
   11460:	bl	11198 <sigaction@plt>
   11464:	mov	ip, #4096	; 0x1000
   11468:	mov	r3, r4
   1146c:	stmib	sp, {r8, ip}
   11470:	mov	r2, r4
   11474:	mov	r1, r4
   11478:	str	r7, [sp]
   1147c:	mov	r0, r4
   11480:	bl	111b0 <rb_lib_init@plt>
   11484:	mov	r0, r8
   11488:	bl	11090 <rb_init_rawbuffers@plt>
   1148c:	mov	r1, r9
   11490:	mov	r0, r4
   11494:	bl	11174 <rb_init_prng@plt>
   11498:	bl	1118c <rb_supports_ssl@plt>
   1149c:	ldr	r7, [pc, #384]	; 11624 <__errno_location@plt+0x3c0>
   114a0:	mov	r1, #48	; 0x30
   114a4:	subs	r3, r0, r4
   114a8:	movne	r3, #1
   114ac:	mov	r0, r9
   114b0:	strb	r3, [r7, #-532]	; 0xfffffdec
   114b4:	bl	1103c <calloc@plt>
   114b8:	subs	r8, r0, #0
   114bc:	beq	11604 <__errno_location@plt+0x3a0>
   114c0:	mov	r0, r6
   114c4:	ldr	r2, [pc, #348]	; 11628 <__errno_location@plt+0x3c4>
   114c8:	mov	r1, #4
   114cc:	str	r8, [r7, #-528]	; 0xfffffdf0
   114d0:	bl	111c8 <rb_open@plt>
   114d4:	ldr	r2, [pc, #336]	; 1162c <__errno_location@plt+0x3c8>
   114d8:	mov	r1, #8
   114dc:	ldr	r6, [r7, #-528]	; 0xfffffdf0
   114e0:	str	r0, [r8, #16]
   114e4:	mov	r0, r5
   114e8:	bl	111c8 <rb_open@plt>
   114ec:	ldr	r3, [r7, #-528]	; 0xfffffdf0
   114f0:	str	r0, [r6, #20]
   114f4:	ldr	r0, [r3, #16]
   114f8:	bl	11048 <rb_set_nb@plt>
   114fc:	ldr	r3, [r7, #-528]	; 0xfffffdf0
   11500:	ldr	r0, [r3, #20]
   11504:	bl	11048 <rb_set_nb@plt>
   11508:	mov	r3, #10
   1150c:	mov	r2, r4
   11510:	ldr	r1, [pc, #280]	; 11630 <__errno_location@plt+0x3cc>
   11514:	ldr	r0, [pc, #280]	; 11634 <__errno_location@plt+0x3d0>
   11518:	bl	10f94 <rb_event_addish@plt>
   1151c:	mov	r2, r4
   11520:	mov	r3, #10
   11524:	ldr	r1, [pc, #268]	; 11638 <__errno_location@plt+0x3d4>
   11528:	ldr	r0, [pc, #268]	; 1163c <__errno_location@plt+0x3d8>
   1152c:	bl	11204 <rb_event_add@plt>
   11530:	ldr	r3, [r7, #-528]	; 0xfffffdf0
   11534:	mov	r1, r4
   11538:	ldr	r0, [r3, #20]
   1153c:	bl	11778 <__errno_location@plt+0x514>
   11540:	ldr	r1, [r7, #-528]	; 0xfffffdf0
   11544:	ldr	r0, [r1, #16]
   11548:	bl	12fa4 <__errno_location@plt+0x1d40>
   1154c:	ldr	r0, [r7, #-528]	; 0xfffffdf0
   11550:	bl	11c08 <__errno_location@plt+0x9a4>
   11554:	ldrb	r1, [r7, #-532]	; 0xfffffdec
   11558:	cmp	r1, #0
   1155c:	beq	115c0 <__errno_location@plt+0x35c>
   11560:	mov	r0, #0
   11564:	bl	110a8 <rb_lib_loop@plt>
   11568:	mov	r0, r4
   1156c:	bl	1115c <close@plt>
   11570:	add	r4, r4, #1
   11574:	cmp	r4, r7
   11578:	beq	1138c <__errno_location@plt+0x128>
   1157c:	cmp	r4, r6
   11580:	cmpne	r4, r5
   11584:	beq	11570 <__errno_location@plt+0x30c>
   11588:	b	11568 <__errno_location@plt+0x304>
   1158c:	ldr	r4, [pc, #172]	; 11640 <__errno_location@plt+0x3dc>
   11590:	mov	r2, #50	; 0x32
   11594:	mov	r1, #1
   11598:	ldr	r3, [r4]
   1159c:	ldr	r0, [pc, #160]	; 11644 <__errno_location@plt+0x3e0>
   115a0:	bl	11168 <fwrite@plt>
   115a4:	ldr	r3, [r4]
   115a8:	mov	r2, #49	; 0x31
   115ac:	mov	r1, #1
   115b0:	ldr	r0, [pc, #144]	; 11648 <__errno_location@plt+0x3e4>
   115b4:	bl	11168 <fwrite@plt>
   115b8:	mov	r0, #1
   115bc:	bl	11258 <exit@plt>
   115c0:	ldr	r0, [r7, #-528]	; 0xfffffdf0
   115c4:	bl	12524 <__errno_location@plt+0x12c0>
   115c8:	b	11560 <__errno_location@plt+0x2fc>
   115cc:	mov	r0, r4
   115d0:	bl	1115c <close@plt>
   115d4:	b	113cc <__errno_location@plt+0x168>
   115d8:	mov	r1, #2
   115dc:	mov	r0, r4
   115e0:	bl	111f8 <dup2@plt>
   115e4:	b	113c4 <__errno_location@plt+0x160>
   115e8:	mov	r1, #1
   115ec:	mov	r0, r4
   115f0:	bl	111f8 <dup2@plt>
   115f4:	b	113b8 <__errno_location@plt+0x154>
   115f8:	mov	r1, #0
   115fc:	bl	111f8 <dup2@plt>
   11600:	b	113ac <__errno_location@plt+0x148>
   11604:	bl	11180 <rb_outofmemory@plt>
   11608:	muleq	r1, r8, fp
   1160c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   11610:	andeq	r3, r1, r0, lsr #23
   11614:	andeq	r3, r1, ip, lsr #23
   11618:	andeq	r4, r2, r0, lsr r1
   1161c:	andeq	r3, r1, r0, lsr #24
   11620:	andeq	r1, r1, r4, ror r7
   11624:	andeq	sl, r2, r8, lsl r1
   11628:	andeq	r3, r1, ip, lsr #24
   1162c:	andeq	r3, r1, r0, asr #24
   11630:	strdeq	r1, [r1], -r4
   11634:	andeq	r3, r1, ip, asr #24
   11638:	andeq	r2, r1, r8, lsl #9
   1163c:	andeq	r3, r1, r0, ror #24
   11640:	andeq	r4, r2, r8, lsr #2
   11644:			; <UNDEFINED> instruction: 0x00013bb8
   11648:	andeq	r3, r1, ip, ror #23
   1164c:	mov	fp, #0
   11650:	mov	lr, #0
   11654:	pop	{r1}		; (ldr r1, [sp], #4)
   11658:	mov	r2, sp
   1165c:	push	{r2}		; (str r2, [sp, #-4]!)
   11660:	push	{r0}		; (str r0, [sp, #-4]!)
   11664:	ldr	ip, [pc, #16]	; 1167c <__errno_location@plt+0x418>
   11668:	push	{ip}		; (str ip, [sp, #-4]!)
   1166c:	ldr	r0, [pc, #12]	; 11680 <__errno_location@plt+0x41c>
   11670:	ldr	r3, [pc, #12]	; 11684 <__errno_location@plt+0x420>
   11674:	bl	10fc4 <__libc_start_main@plt>
   11678:	bl	10f88 <abort@plt>
   1167c:	andeq	r3, r1, r8, lsr #19
   11680:	ldrdeq	r1, [r1], -ip
   11684:	andeq	r3, r1, r8, asr #18
   11688:	ldr	r3, [pc, #20]	; 116a4 <__errno_location@plt+0x440>
   1168c:	ldr	r2, [pc, #20]	; 116a8 <__errno_location@plt+0x444>
   11690:	add	r3, pc, r3
   11694:	ldr	r2, [r3, r2]
   11698:	cmp	r2, #0
   1169c:	bxeq	lr
   116a0:	b	10fdc <__gmon_start__@plt>
   116a4:	andeq	r2, r1, r8, ror #18
   116a8:	andeq	r0, r0, r8, lsl r1
   116ac:	ldr	r3, [pc, #28]	; 116d0 <__errno_location@plt+0x46c>
   116b0:	ldr	r0, [pc, #28]	; 116d4 <__errno_location@plt+0x470>
   116b4:	sub	r3, r3, r0
   116b8:	cmp	r3, #6
   116bc:	bxls	lr
   116c0:	ldr	r3, [pc, #16]	; 116d8 <__errno_location@plt+0x474>
   116c4:	cmp	r3, #0
   116c8:	bxeq	lr
   116cc:	bx	r3
   116d0:	andeq	r4, r2, r7, lsr #2
   116d4:	andeq	r4, r2, r4, lsr #2
   116d8:	andeq	r0, r0, r0
   116dc:	ldr	r1, [pc, #36]	; 11708 <__errno_location@plt+0x4a4>
   116e0:	ldr	r0, [pc, #36]	; 1170c <__errno_location@plt+0x4a8>
   116e4:	sub	r1, r1, r0
   116e8:	asr	r1, r1, #2
   116ec:	add	r1, r1, r1, lsr #31
   116f0:	asrs	r1, r1, #1
   116f4:	bxeq	lr
   116f8:	ldr	r3, [pc, #16]	; 11710 <__errno_location@plt+0x4ac>
   116fc:	cmp	r3, #0
   11700:	bxeq	lr
   11704:	bx	r3
   11708:	andeq	r4, r2, r4, lsr #2
   1170c:	andeq	r4, r2, r4, lsr #2
   11710:	andeq	r0, r0, r0
   11714:	push	{r4, lr}
   11718:	ldr	r4, [pc, #24]	; 11738 <__errno_location@plt+0x4d4>
   1171c:	ldrb	r3, [r4]
   11720:	cmp	r3, #0
   11724:	popne	{r4, pc}
   11728:	bl	116ac <__errno_location@plt+0x448>
   1172c:	mov	r3, #1
   11730:	strb	r3, [r4]
   11734:	pop	{r4, pc}
   11738:	andeq	r4, r2, ip, lsr #2
   1173c:	ldr	r0, [pc, #40]	; 1176c <__errno_location@plt+0x508>
   11740:	ldr	r3, [r0]
   11744:	cmp	r3, #0
   11748:	bne	11750 <__errno_location@plt+0x4ec>
   1174c:	b	116dc <__errno_location@plt+0x478>
   11750:	ldr	r3, [pc, #24]	; 11770 <__errno_location@plt+0x50c>
   11754:	cmp	r3, #0
   11758:	beq	1174c <__errno_location@plt+0x4e8>
   1175c:	push	{r4, lr}
   11760:	blx	r3
   11764:	pop	{r4, lr}
   11768:	b	116dc <__errno_location@plt+0x478>
   1176c:	strdeq	r3, [r2], -r4
   11770:	andeq	r0, r0, r0
   11774:	bx	lr
   11778:	push	{r4, r5, lr}
   1177c:	sub	sp, sp, #16384	; 0x4000
   11780:	sub	sp, sp, #4
   11784:	mov	r4, r0
   11788:	mov	r5, #16384	; 0x4000
   1178c:	mov	r2, r5
   11790:	mov	r1, sp
   11794:	mov	r0, r4
   11798:	bl	110c0 <rb_read@plt>
   1179c:	cmp	r0, #0
   117a0:	bgt	1178c <__errno_location@plt+0x528>
   117a4:	beq	117dc <__errno_location@plt+0x578>
   117a8:	bl	11264 <__errno_location@plt>
   117ac:	ldr	r0, [r0]
   117b0:	bl	10fa0 <rb_ignore_errno@plt>
   117b4:	cmp	r0, #0
   117b8:	beq	117dc <__errno_location@plt+0x578>
   117bc:	mov	r0, r4
   117c0:	mov	r3, #0
   117c4:	ldr	r2, [pc, #24]	; 117e4 <__errno_location@plt+0x580>
   117c8:	mov	r1, #1
   117cc:	bl	10fd0 <rb_setselect@plt>
   117d0:	add	sp, sp, #16384	; 0x4000
   117d4:	add	sp, sp, #4
   117d8:	pop	{r4, r5, pc}
   117dc:	mov	r0, #0
   117e0:	bl	11258 <exit@plt>
   117e4:	andeq	r1, r1, r8, ror r7
   117e8:	subs	r0, r1, #0
   117ec:	bxeq	lr
   117f0:	b	1109c <free@plt>
   117f4:	push	{r4, r5, r6, r7, r8, lr}
   117f8:	ldr	r7, [pc, #136]	; 11888 <__errno_location@plt+0x624>
   117fc:	ldr	r3, [r7]
   11800:	cmp	r3, #0
   11804:	beq	11878 <__errno_location@plt+0x614>
   11808:	ldr	r5, [r3, #8]
   1180c:	b	11828 <__errno_location@plt+0x5c4>
   11810:	mov	r0, r4
   11814:	bl	1109c <free@plt>
   11818:	cmp	r5, #0
   1181c:	beq	11878 <__errno_location@plt+0x614>
   11820:	mov	r3, r5
   11824:	ldr	r5, [r5, #8]
   11828:	ldr	r4, [r3]
   1182c:	ldr	r0, [r4, #16]
   11830:	bl	11144 <rb_free_rawbuffer@plt>
   11834:	ldr	r0, [r4, #20]
   11838:	bl	11144 <rb_free_rawbuffer@plt>
   1183c:	ldrb	r3, [r4, #72]	; 0x48
   11840:	tst	r3, #2
   11844:	beq	11810 <__errno_location@plt+0x5ac>
   11848:	ldr	r6, [r4, #76]	; 0x4c
   1184c:	mov	r0, r6
   11850:	bl	10fb8 <inflateEnd@plt>
   11854:	add	r0, r6, #56	; 0x38
   11858:	bl	110b4 <deflateEnd@plt>
   1185c:	subs	r0, r6, #0
   11860:	beq	11810 <__errno_location@plt+0x5ac>
   11864:	bl	1109c <free@plt>
   11868:	mov	r0, r4
   1186c:	bl	1109c <free@plt>
   11870:	cmp	r5, #0
   11874:	bne	11820 <__errno_location@plt+0x5bc>
   11878:	mov	r3, #0
   1187c:	str	r3, [r7]
   11880:	str	r3, [r7, #4]
   11884:	pop	{r4, r5, r6, r7, r8, pc}
   11888:	andeq	r4, r2, r0, lsr r1
   1188c:	push	{r4, lr}
   11890:	mul	r1, r2, r1
   11894:	mov	r0, #1
   11898:	bl	1103c <calloc@plt>
   1189c:	cmp	r0, #0
   118a0:	popne	{r4, pc}
   118a4:	bl	11180 <rb_outofmemory@plt>
   118a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118ac:	mov	r8, r1
   118b0:	ldr	r6, [r1, #36]	; 0x24
   118b4:	sub	sp, sp, #8
   118b8:	cmp	r6, #0
   118bc:	beq	119ac <__errno_location@plt+0x748>
   118c0:	ldr	r7, [r6, #8]
   118c4:	ldr	sl, [pc, #272]	; 119dc <__errno_location@plt+0x778>
   118c8:	mov	r9, #0
   118cc:	ldr	r4, [r6]
   118d0:	ldr	r1, [sl, #12]
   118d4:	ldr	r0, [r8, #16]
   118d8:	ldr	r3, [r4, #12]
   118dc:	ldr	r2, [r4, #36]	; 0x24
   118e0:	str	r1, [sp, #4]
   118e4:	ldr	r1, [r4, #16]
   118e8:	add	r5, r4, #20
   118ec:	str	r1, [sp]
   118f0:	mov	r1, r5
   118f4:	bl	10ff4 <rb_send_fd_buf@plt>
   118f8:	cmp	r0, #0
   118fc:	ble	11988 <__errno_location@plt+0x724>
   11900:	ldmib	r6, {r2, r3}
   11904:	cmp	r3, #0
   11908:	strne	r2, [r3, #4]
   1190c:	ldrne	r2, [r6, #4]
   11910:	streq	r2, [r8, #40]	; 0x28
   11914:	cmp	r2, #0
   11918:	strne	r3, [r2, #8]
   1191c:	streq	r3, [r8, #36]	; 0x24
   11920:	ldr	r2, [r4, #36]	; 0x24
   11924:	ldr	r3, [r8, #44]	; 0x2c
   11928:	cmp	r2, #0
   1192c:	sub	r3, r3, #1
   11930:	str	r9, [r6, #4]
   11934:	str	r9, [r6, #8]
   11938:	str	r3, [r8, #44]	; 0x2c
   1193c:	movgt	r6, #0
   11940:	ble	1195c <__errno_location@plt+0x6f8>
   11944:	ldr	r0, [r5], #4
   11948:	bl	110fc <rb_close@plt>
   1194c:	ldr	r3, [r4, #36]	; 0x24
   11950:	add	r6, r6, #1
   11954:	cmp	r3, r6
   11958:	bgt	11944 <__errno_location@plt+0x6e0>
   1195c:	ldr	r0, [r4, #12]
   11960:	cmp	r0, #0
   11964:	beq	1196c <__errno_location@plt+0x708>
   11968:	bl	1109c <free@plt>
   1196c:	mov	r0, r4
   11970:	bl	1109c <free@plt>
   11974:	cmp	r7, #0
   11978:	beq	119ac <__errno_location@plt+0x748>
   1197c:	mov	r6, r7
   11980:	ldr	r7, [r7, #8]
   11984:	b	118cc <__errno_location@plt+0x668>
   11988:	beq	119a4 <__errno_location@plt+0x740>
   1198c:	bge	11974 <__errno_location@plt+0x710>
   11990:	bl	11264 <__errno_location@plt>
   11994:	ldr	r0, [r0]
   11998:	bl	10fa0 <rb_ignore_errno@plt>
   1199c:	cmp	r0, #0
   119a0:	bne	11974 <__errno_location@plt+0x710>
   119a4:	mov	r0, #0
   119a8:	bl	11258 <exit@plt>
   119ac:	ldr	r3, [r8, #44]	; 0x2c
   119b0:	cmp	r3, #0
   119b4:	bne	119c0 <__errno_location@plt+0x75c>
   119b8:	add	sp, sp, #8
   119bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119c0:	mov	r3, r8
   119c4:	ldr	r0, [r8, #16]
   119c8:	ldr	r2, [pc, #16]	; 119e0 <__errno_location@plt+0x77c>
   119cc:	mov	r1, #2
   119d0:	add	sp, sp, #8
   119d4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   119d8:	b	10fd0 <rb_setselect@plt>
   119dc:	andeq	r4, r2, r0, lsr r1
   119e0:	andeq	r1, r1, r8, lsr #17
   119e4:	push	{r4, r5, r6, r7, r8, lr}
   119e8:	mov	r5, r0
   119ec:	mov	r7, r1
   119f0:	mov	r0, #1
   119f4:	mov	r1, #40	; 0x28
   119f8:	mov	r6, r2
   119fc:	bl	1103c <calloc@plt>
   11a00:	subs	r4, r0, #0
   11a04:	beq	11a7c <__errno_location@plt+0x818>
   11a08:	mov	r1, r6
   11a0c:	mov	r0, #1
   11a10:	bl	1103c <calloc@plt>
   11a14:	subs	r3, r0, #0
   11a18:	beq	11a7c <__errno_location@plt+0x818>
   11a1c:	mov	r2, r6
   11a20:	str	r3, [r4, #12]
   11a24:	str	r6, [r4, #16]
   11a28:	mov	r1, r7
   11a2c:	bl	110f0 <memcpy@plt>
   11a30:	mov	r2, #0
   11a34:	cmn	r5, #36	; 0x24
   11a38:	str	r2, [r4, #36]	; 0x24
   11a3c:	beq	11a90 <__errno_location@plt+0x82c>
   11a40:	ldr	r3, [r5, #40]	; 0x28
   11a44:	str	r4, [r4]
   11a48:	cmp	r3, #0
   11a4c:	str	r2, [r4, #8]
   11a50:	str	r3, [r4, #4]
   11a54:	strne	r4, [r3, #8]
   11a58:	beq	11a80 <__errno_location@plt+0x81c>
   11a5c:	ldr	r3, [r5, #44]	; 0x2c
   11a60:	str	r4, [r5, #40]	; 0x28
   11a64:	add	r3, r3, #1
   11a68:	str	r3, [r5, #44]	; 0x2c
   11a6c:	mov	r1, r5
   11a70:	ldr	r0, [r5, #16]
   11a74:	pop	{r4, r5, r6, r7, r8, lr}
   11a78:	b	118a8 <__errno_location@plt+0x644>
   11a7c:	bl	11180 <rb_outofmemory@plt>
   11a80:	ldr	r3, [r5, #36]	; 0x24
   11a84:	cmp	r3, #0
   11a88:	streq	r4, [r5, #36]	; 0x24
   11a8c:	b	11a5c <__errno_location@plt+0x7f8>
   11a90:	ldr	r3, [pc, #12]	; 11aa4 <__errno_location@plt+0x840>
   11a94:	mov	r2, #212	; 0xd4
   11a98:	ldr	r1, [pc, #8]	; 11aa8 <__errno_location@plt+0x844>
   11a9c:	ldr	r0, [pc, #8]	; 11aac <__errno_location@plt+0x848>
   11aa0:	bl	11060 <__assert_fail@plt>
   11aa4:	ldrdeq	r3, [r1], -r4
   11aa8:	andeq	r3, r1, r4, ror #19
   11aac:	andeq	r3, r1, r0, lsl #20
   11ab0:	ldrb	r3, [r0, #72]	; 0x48
   11ab4:	tst	r3, #1
   11ab8:	bxeq	lr
   11abc:	push	{r4, lr}
   11ac0:	mov	r4, r0
   11ac4:	sub	sp, sp, #768	; 0x300
   11ac8:	ldr	r0, [r0, #28]
   11acc:	bl	110e4 <rb_ssl_get_cipher@plt>
   11ad0:	subs	r1, r0, #0
   11ad4:	beq	11b1c <__errno_location@plt+0x8b8>
   11ad8:	mov	r2, #256	; 0x100
   11adc:	mov	r0, sp
   11ae0:	bl	1106c <rb_strlcpy@plt>
   11ae4:	ldr	r2, [r4, #24]
   11ae8:	add	r3, sp, #256	; 0x100
   11aec:	mov	r1, sp
   11af0:	add	r0, r3, #5
   11af4:	mov	r3, #67	; 0x43
   11af8:	str	r2, [sp, #257]	; 0x101
   11afc:	strb	r3, [sp, #256]	; 0x100
   11b00:	bl	11120 <strcpy@plt>
   11b04:	mov	r0, sp
   11b08:	bl	110d8 <strlen@plt>
   11b0c:	add	r1, sp, #256	; 0x100
   11b10:	add	r2, r0, #6
   11b14:	ldr	r0, [r4, #12]
   11b18:	bl	119e4 <__errno_location@plt+0x780>
   11b1c:	add	sp, sp, #768	; 0x300
   11b20:	pop	{r4, pc}
   11b24:	push	{r4, r5, r6, r7, lr}
   11b28:	mov	r2, #2000	; 0x7d0
   11b2c:	ldr	lr, [r1, #1]
   11b30:	ldr	ip, [pc, #196]	; 11bfc <__errno_location@plt+0x998>
   11b34:	ldr	r3, [pc, #196]	; 11c00 <__errno_location@plt+0x99c>
   11b38:	sub	sp, sp, #548	; 0x224
   11b3c:	umull	r4, ip, ip, lr
   11b40:	lsr	ip, ip, #7
   11b44:	mul	r2, r2, ip
   11b48:	sub	r2, lr, r2
   11b4c:	add	r2, r2, r2, lsl #1
   11b50:	add	r2, r3, r2, lsl #2
   11b54:	ldr	r2, [r2, #16]
   11b58:	cmp	r2, #0
   11b5c:	bne	11b70 <__errno_location@plt+0x90c>
   11b60:	b	11bf4 <__errno_location@plt+0x990>
   11b64:	ldr	r2, [r2, #8]
   11b68:	cmp	r2, #0
   11b6c:	beq	11bf4 <__errno_location@plt+0x990>
   11b70:	ldr	r4, [r2]
   11b74:	ldr	ip, [r4, #24]
   11b78:	cmp	lr, ip
   11b7c:	bne	11b64 <__errno_location@plt+0x900>
   11b80:	ldrb	ip, [r4, #72]	; 0x48
   11b84:	tst	ip, #8
   11b88:	bne	11b64 <__errno_location@plt+0x900>
   11b8c:	ldrd	r6, [r4, #40]	; 0x28
   11b90:	add	r3, r1, #5
   11b94:	mov	r5, r0
   11b98:	strd	r6, [sp, #24]
   11b9c:	ldrd	r6, [r4, #56]	; 0x38
   11ba0:	mov	r1, #512	; 0x200
   11ba4:	ldr	r2, [pc, #88]	; 11c04 <__errno_location@plt+0x9a0>
   11ba8:	strd	r6, [sp, #16]
   11bac:	ldrd	r6, [r4, #48]	; 0x30
   11bb0:	add	r0, sp, #32
   11bb4:	strd	r6, [sp, #8]
   11bb8:	ldrd	r6, [r4, #64]	; 0x40
   11bbc:	strd	r6, [sp]
   11bc0:	bl	11210 <snprintf@plt>
   11bc4:	mov	r2, #0
   11bc8:	mov	r3, #0
   11bcc:	add	r0, sp, #32
   11bd0:	strd	r2, [r4, #64]	; 0x40
   11bd4:	strd	r2, [r4, #56]	; 0x38
   11bd8:	strd	r2, [r4, #48]	; 0x30
   11bdc:	strd	r2, [r4, #40]	; 0x28
   11be0:	bl	110d8 <strlen@plt>
   11be4:	add	r1, sp, #32
   11be8:	add	r2, r0, #1
   11bec:	mov	r0, r5
   11bf0:	bl	119e4 <__errno_location@plt+0x780>
   11bf4:	add	sp, sp, #548	; 0x224
   11bf8:	pop	{r4, r5, r6, r7, pc}
   11bfc:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11c00:	andeq	r4, r2, r0, lsr r1
   11c04:	andeq	r3, r1, r0, lsr #20
   11c08:	push	{r4, lr}
   11c0c:	sub	sp, sp, #256	; 0x100
   11c10:	mov	r4, r0
   11c14:	mov	r2, #256	; 0x100
   11c18:	mov	r1, #0
   11c1c:	mov	r0, sp
   11c20:	bl	11054 <memset@plt>
   11c24:	mov	r3, #86	; 0x56
   11c28:	strb	r3, [sp]
   11c2c:	bl	10fac <rb_lib_version@plt>
   11c30:	mov	r2, #254	; 0xfe
   11c34:	mov	r1, r0
   11c38:	add	r0, sp, #1
   11c3c:	bl	1100c <strncpy@plt>
   11c40:	mov	r0, sp
   11c44:	bl	110d8 <strlen@plt>
   11c48:	mov	r1, sp
   11c4c:	mov	r2, r0
   11c50:	mov	r0, r4
   11c54:	bl	119e4 <__errno_location@plt+0x780>
   11c58:	add	sp, sp, #256	; 0x100
   11c5c:	pop	{r4, pc}
   11c60:	push	{r4, r5, lr}
   11c64:	subs	r4, r1, #0
   11c68:	sub	sp, sp, #16384	; 0x4000
   11c6c:	sub	sp, sp, #4
   11c70:	beq	11cbc <__errno_location@plt+0xa58>
   11c74:	mov	r5, #16384	; 0x4000
   11c78:	mov	r2, r5
   11c7c:	mov	r1, sp
   11c80:	ldr	r0, [r4, #32]
   11c84:	bl	110c0 <rb_read@plt>
   11c88:	cmp	r0, #0
   11c8c:	beq	11cc8 <__errno_location@plt+0xa64>
   11c90:	bge	11c78 <__errno_location@plt+0xa14>
   11c94:	bl	11264 <__errno_location@plt>
   11c98:	ldr	r0, [r0]
   11c9c:	bl	10fa0 <rb_ignore_errno@plt>
   11ca0:	cmp	r0, #0
   11ca4:	beq	11cc8 <__errno_location@plt+0xa64>
   11ca8:	mov	r3, r4
   11cac:	ldr	r0, [r4, #32]
   11cb0:	ldr	r2, [pc, #104]	; 11d20 <__errno_location@plt+0xabc>
   11cb4:	mov	r1, #1
   11cb8:	bl	10fd0 <rb_setselect@plt>
   11cbc:	add	sp, sp, #16384	; 0x4000
   11cc0:	add	sp, sp, #4
   11cc4:	pop	{r4, r5, pc}
   11cc8:	ldr	r0, [r4, #32]
   11ccc:	bl	110fc <rb_close@plt>
   11cd0:	ldr	r3, [pc, #76]	; 11d24 <__errno_location@plt+0xac0>
   11cd4:	mov	r1, #0
   11cd8:	str	r4, [r4]
   11cdc:	ldr	r2, [r3]
   11ce0:	str	r1, [r4, #4]
   11ce4:	cmp	r2, r1
   11ce8:	str	r2, [r4, #8]
   11cec:	strne	r4, [r2, #4]
   11cf0:	beq	11d10 <__errno_location@plt+0xaac>
   11cf4:	ldr	r2, [r3, #8]
   11cf8:	str	r4, [r3]
   11cfc:	add	r2, r2, #1
   11d00:	str	r2, [r3, #8]
   11d04:	add	sp, sp, #16384	; 0x4000
   11d08:	add	sp, sp, #4
   11d0c:	pop	{r4, r5, pc}
   11d10:	ldr	r2, [r3, #4]
   11d14:	cmp	r2, #0
   11d18:	streq	r4, [r3, #4]
   11d1c:	b	11cf4 <__errno_location@plt+0xa90>
   11d20:	andeq	r1, r1, r0, ror #24
   11d24:	andeq	r4, r2, r0, lsr r1
   11d28:	push	{r2, r3}
   11d2c:	push	{r4, r5, lr}
   11d30:	sub	sp, sp, #396	; 0x18c
   11d34:	ldrb	r2, [r0, #72]	; 0x48
   11d38:	tst	r2, #8
   11d3c:	beq	11d50 <__errno_location@plt+0xaec>
   11d40:	add	sp, sp, #396	; 0x18c
   11d44:	pop	{r4, r5, lr}
   11d48:	add	sp, sp, #8
   11d4c:	bx	lr
   11d50:	mov	r4, r0
   11d54:	mov	r5, r1
   11d58:	ldr	r1, [r0, #28]
   11d5c:	ldr	r0, [r0, #16]
   11d60:	bl	11240 <rb_rawbuf_flush@plt>
   11d64:	ldr	r1, [r4, #32]
   11d68:	ldr	r0, [r4, #20]
   11d6c:	bl	11240 <rb_rawbuf_flush@plt>
   11d70:	ldr	r0, [r4, #28]
   11d74:	bl	110fc <rb_close@plt>
   11d78:	ldrb	r2, [r4, #72]	; 0x48
   11d7c:	tst	r2, #64	; 0x40
   11d80:	orr	r2, r2, #8
   11d84:	strb	r2, [r4, #72]	; 0x48
   11d88:	beq	11e7c <__errno_location@plt+0xc18>
   11d8c:	ldr	r3, [sp, #408]	; 0x198
   11d90:	cmp	r3, #0
   11d94:	cmpne	r5, #0
   11d98:	moveq	r5, #1
   11d9c:	movne	r5, #0
   11da0:	bne	11df0 <__errno_location@plt+0xb8c>
   11da4:	ldr	r0, [r4, #32]
   11da8:	bl	110fc <rb_close@plt>
   11dac:	ldr	r3, [pc, #360]	; 11f1c <__errno_location@plt+0xcb8>
   11db0:	mov	r1, #0
   11db4:	str	r4, [r4]
   11db8:	ldr	r2, [r3]
   11dbc:	str	r1, [r4, #4]
   11dc0:	cmp	r2, r1
   11dc4:	str	r2, [r4, #8]
   11dc8:	strne	r4, [r2, #4]
   11dcc:	beq	11ef0 <__errno_location@plt+0xc8c>
   11dd0:	ldr	r2, [r3, #8]
   11dd4:	str	r4, [r3]
   11dd8:	add	r2, r2, #1
   11ddc:	str	r2, [r3, #8]
   11de0:	add	sp, sp, #396	; 0x18c
   11de4:	pop	{r4, r5, lr}
   11de8:	add	sp, sp, #8
   11dec:	bx	lr
   11df0:	mov	r3, r4
   11df4:	ldr	r0, [r4, #32]
   11df8:	ldr	r2, [pc, #288]	; 11f20 <__errno_location@plt+0xcbc>
   11dfc:	mov	r1, #1
   11e00:	bl	10fd0 <rb_setselect@plt>
   11e04:	mov	r3, r5
   11e08:	mov	r2, r5
   11e0c:	ldr	r0, [r4, #32]
   11e10:	mov	r1, #2
   11e14:	bl	10fd0 <rb_setselect@plt>
   11e18:	add	ip, sp, #412	; 0x19c
   11e1c:	mov	r3, ip
   11e20:	ldr	r2, [sp, #408]	; 0x198
   11e24:	add	r0, sp, #8
   11e28:	mov	r1, #128	; 0x80
   11e2c:	str	ip, [sp, #4]
   11e30:	bl	11000 <vsnprintf@plt>
   11e34:	ldr	ip, [r4, #24]
   11e38:	mov	r3, #68	; 0x44
   11e3c:	add	r1, sp, #8
   11e40:	mov	r2, #251	; 0xfb
   11e44:	add	r0, sp, #141	; 0x8d
   11e48:	str	ip, [sp, #137]	; 0x89
   11e4c:	strb	r3, [sp, #136]	; 0x88
   11e50:	bl	1106c <rb_strlcpy@plt>
   11e54:	add	r0, sp, #8
   11e58:	bl	110d8 <strlen@plt>
   11e5c:	add	r1, sp, #136	; 0x88
   11e60:	add	r2, r0, #6
   11e64:	ldr	r0, [r4, #12]
   11e68:	bl	119e4 <__errno_location@plt+0x780>
   11e6c:	add	sp, sp, #396	; 0x18c
   11e70:	pop	{r4, r5, lr}
   11e74:	add	sp, sp, #8
   11e78:	bx	lr
   11e7c:	ldr	r3, [r4, #24]
   11e80:	ldr	r2, [pc, #156]	; 11f24 <__errno_location@plt+0xcc0>
   11e84:	mov	r1, #2000	; 0x7d0
   11e88:	ldr	r0, [r4, #8]
   11e8c:	umull	ip, r2, r2, r3
   11e90:	cmp	r0, #0
   11e94:	lsr	r2, r2, #7
   11e98:	mul	r2, r1, r2
   11e9c:	sub	r2, r3, r2
   11ea0:	beq	11f00 <__errno_location@plt+0xc9c>
   11ea4:	ldr	r1, [r4, #4]
   11ea8:	ldr	r3, [pc, #108]	; 11f1c <__errno_location@plt+0xcb8>
   11eac:	str	r1, [r0, #4]
   11eb0:	ldr	ip, [r4, #4]
   11eb4:	lsl	r1, r2, #1
   11eb8:	cmp	ip, #0
   11ebc:	addeq	ip, r1, r2
   11ec0:	add	r2, r1, r2
   11ec4:	addeq	ip, r3, ip, lsl #2
   11ec8:	add	r3, r3, r2, lsl #2
   11ecc:	mov	r1, #0
   11ed0:	ldr	r2, [r3, #24]
   11ed4:	strne	r0, [ip, #8]
   11ed8:	sub	r2, r2, #1
   11edc:	streq	r0, [ip, #16]
   11ee0:	str	r1, [r4, #4]
   11ee4:	str	r1, [r4, #8]
   11ee8:	str	r2, [r3, #24]
   11eec:	b	11d8c <__errno_location@plt+0xb28>
   11ef0:	ldr	r2, [r3, #4]
   11ef4:	cmp	r2, #0
   11ef8:	streq	r4, [r3, #4]
   11efc:	b	11dd0 <__errno_location@plt+0xb6c>
   11f00:	lsl	r1, r2, #1
   11f04:	add	lr, r1, r2
   11f08:	ldr	r3, [pc, #12]	; 11f1c <__errno_location@plt+0xcb8>
   11f0c:	ldr	ip, [r4, #4]
   11f10:	add	lr, r3, lr, lsl #2
   11f14:	str	ip, [lr, #20]
   11f18:	b	11eb8 <__errno_location@plt+0xc54>
   11f1c:	andeq	r4, r2, r0, lsr r1
   11f20:	andeq	r1, r1, r0, ror #24
   11f24:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11f28:	ldrb	r3, [r1, #72]	; 0x48
   11f2c:	tst	r3, #8
   11f30:	bne	11fa8 <__errno_location@plt+0xd44>
   11f34:	push	{r4, r5, r6, lr}
   11f38:	mov	r4, r1
   11f3c:	mov	r5, r0
   11f40:	b	11f54 <__errno_location@plt+0xcf0>
   11f44:	ldrd	r2, [r4, #64]	; 0x40
   11f48:	adds	r2, r2, r0
   11f4c:	adc	r3, r3, r0, asr #31
   11f50:	strd	r2, [r4, #64]	; 0x40
   11f54:	mov	r1, r5
   11f58:	ldr	r0, [r4, #20]
   11f5c:	bl	11240 <rb_rawbuf_flush@plt>
   11f60:	cmp	r0, #0
   11f64:	bgt	11f44 <__errno_location@plt+0xce0>
   11f68:	beq	11fac <__errno_location@plt+0xd48>
   11f6c:	bl	11264 <__errno_location@plt>
   11f70:	ldr	r0, [r0]
   11f74:	bl	10fa0 <rb_ignore_errno@plt>
   11f78:	cmp	r0, #0
   11f7c:	beq	11fac <__errno_location@plt+0xd48>
   11f80:	ldr	r0, [r4, #20]
   11f84:	bl	11138 <rb_rawbuf_length@plt>
   11f88:	cmp	r0, #0
   11f8c:	ble	11fc0 <__errno_location@plt+0xd5c>
   11f90:	mov	r3, r4
   11f94:	ldr	r0, [r4, #32]
   11f98:	ldr	r2, [pc, #56]	; 11fd8 <__errno_location@plt+0xd74>
   11f9c:	mov	r1, #2
   11fa0:	pop	{r4, r5, r6, lr}
   11fa4:	b	10fd0 <rb_setselect@plt>
   11fa8:	bx	lr
   11fac:	mov	r2, #0
   11fb0:	mov	r0, r4
   11fb4:	mov	r1, r2
   11fb8:	pop	{r4, r5, r6, lr}
   11fbc:	b	11d28 <__errno_location@plt+0xac4>
   11fc0:	mov	r3, #0
   11fc4:	ldr	r0, [r4, #32]
   11fc8:	mov	r2, r3
   11fcc:	mov	r1, #2
   11fd0:	pop	{r4, r5, r6, lr}
   11fd4:	b	10fd0 <rb_setselect@plt>
   11fd8:	andeq	r1, r1, r8, lsr #30
   11fdc:	push	{r2, r3}
   11fe0:	push	{r4, lr}
   11fe4:	sub	sp, sp, #392	; 0x188
   11fe8:	ldrb	r3, [r0, #72]	; 0x48
   11fec:	tst	r3, #8
   11ff0:	beq	12004 <__errno_location@plt+0xda0>
   11ff4:	add	sp, sp, #392	; 0x188
   11ff8:	pop	{r4, lr}
   11ffc:	add	sp, sp, #8
   12000:	bx	lr
   12004:	mov	r4, r0
   12008:	ldr	r1, [r0, #28]
   1200c:	ldr	r0, [r0, #16]
   12010:	bl	11240 <rb_rawbuf_flush@plt>
   12014:	ldr	r1, [r4, #32]
   12018:	ldr	r0, [r4, #20]
   1201c:	bl	11240 <rb_rawbuf_flush@plt>
   12020:	ldr	r0, [r4, #28]
   12024:	bl	110fc <rb_close@plt>
   12028:	ldrb	r3, [r4, #72]	; 0x48
   1202c:	tst	r3, #64	; 0x40
   12030:	orr	r3, r3, #8
   12034:	strb	r3, [r4, #72]	; 0x48
   12038:	beq	12120 <__errno_location@plt+0xebc>
   1203c:	ldr	r3, [sp, #400]	; 0x190
   12040:	cmp	r3, #0
   12044:	bne	12094 <__errno_location@plt+0xe30>
   12048:	ldr	r0, [r4, #32]
   1204c:	bl	110fc <rb_close@plt>
   12050:	ldr	r3, [pc, #360]	; 121c0 <__errno_location@plt+0xf5c>
   12054:	ldr	r2, [sp, #400]	; 0x190
   12058:	str	r4, [r4]
   1205c:	str	r2, [r4, #4]
   12060:	ldr	r2, [r3]
   12064:	cmp	r2, #0
   12068:	str	r2, [r4, #8]
   1206c:	strne	r4, [r2, #4]
   12070:	beq	12194 <__errno_location@plt+0xf30>
   12074:	ldr	r2, [r3, #8]
   12078:	str	r4, [r3]
   1207c:	add	r2, r2, #1
   12080:	str	r2, [r3, #8]
   12084:	add	sp, sp, #392	; 0x188
   12088:	pop	{r4, lr}
   1208c:	add	sp, sp, #8
   12090:	bx	lr
   12094:	mov	r3, r4
   12098:	ldr	r0, [r4, #32]
   1209c:	ldr	r2, [pc, #288]	; 121c4 <__errno_location@plt+0xf60>
   120a0:	mov	r1, #1
   120a4:	bl	10fd0 <rb_setselect@plt>
   120a8:	mov	r3, #0
   120ac:	mov	r2, r3
   120b0:	ldr	r0, [r4, #32]
   120b4:	mov	r1, #2
   120b8:	bl	10fd0 <rb_setselect@plt>
   120bc:	add	ip, sp, #404	; 0x194
   120c0:	mov	r3, ip
   120c4:	ldr	r2, [sp, #400]	; 0x190
   120c8:	add	r0, sp, #8
   120cc:	mov	r1, #128	; 0x80
   120d0:	str	ip, [sp, #4]
   120d4:	bl	11000 <vsnprintf@plt>
   120d8:	ldr	ip, [r4, #24]
   120dc:	mov	r3, #68	; 0x44
   120e0:	add	r1, sp, #8
   120e4:	mov	r2, #251	; 0xfb
   120e8:	add	r0, sp, #141	; 0x8d
   120ec:	str	ip, [sp, #137]	; 0x89
   120f0:	strb	r3, [sp, #136]	; 0x88
   120f4:	bl	1106c <rb_strlcpy@plt>
   120f8:	add	r0, sp, #8
   120fc:	bl	110d8 <strlen@plt>
   12100:	add	r1, sp, #136	; 0x88
   12104:	add	r2, r0, #6
   12108:	ldr	r0, [r4, #12]
   1210c:	bl	119e4 <__errno_location@plt+0x780>
   12110:	add	sp, sp, #392	; 0x188
   12114:	pop	{r4, lr}
   12118:	add	sp, sp, #8
   1211c:	bx	lr
   12120:	ldr	r3, [r4, #24]
   12124:	ldr	r2, [pc, #156]	; 121c8 <__errno_location@plt+0xf64>
   12128:	mov	r1, #2000	; 0x7d0
   1212c:	ldr	r0, [r4, #8]
   12130:	umull	ip, r2, r2, r3
   12134:	cmp	r0, #0
   12138:	lsr	r2, r2, #7
   1213c:	mul	r2, r1, r2
   12140:	sub	r2, r3, r2
   12144:	beq	121a4 <__errno_location@plt+0xf40>
   12148:	ldr	r1, [r4, #4]
   1214c:	ldr	r3, [pc, #108]	; 121c0 <__errno_location@plt+0xf5c>
   12150:	str	r1, [r0, #4]
   12154:	ldr	ip, [r4, #4]
   12158:	lsl	r1, r2, #1
   1215c:	cmp	ip, #0
   12160:	addeq	ip, r1, r2
   12164:	add	r2, r1, r2
   12168:	addeq	ip, r3, ip, lsl #2
   1216c:	add	r3, r3, r2, lsl #2
   12170:	mov	r1, #0
   12174:	ldr	r2, [r3, #24]
   12178:	strne	r0, [ip, #8]
   1217c:	sub	r2, r2, #1
   12180:	streq	r0, [ip, #16]
   12184:	str	r1, [r4, #4]
   12188:	str	r1, [r4, #8]
   1218c:	str	r2, [r3, #24]
   12190:	b	1203c <__errno_location@plt+0xdd8>
   12194:	ldr	r2, [r3, #4]
   12198:	cmp	r2, #0
   1219c:	streq	r4, [r3, #4]
   121a0:	b	12074 <__errno_location@plt+0xe10>
   121a4:	lsl	r1, r2, #1
   121a8:	add	lr, r1, r2
   121ac:	ldr	r3, [pc, #12]	; 121c0 <__errno_location@plt+0xf5c>
   121b0:	ldr	ip, [r4, #4]
   121b4:	add	lr, r3, lr, lsl #2
   121b8:	str	ip, [lr, #20]
   121bc:	b	1215c <__errno_location@plt+0xef8>
   121c0:	andeq	r4, r2, r0, lsr r1
   121c4:	andeq	r1, r1, r0, ror #24
   121c8:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   121cc:	push	{r4, r5, r6, r7, r8, lr}
   121d0:	mov	r4, r0
   121d4:	ldr	r0, [r0, #76]	; 0x4c
   121d8:	mov	r6, r1
   121dc:	mov	r7, #0
   121e0:	sub	sp, sp, #16384	; 0x4000
   121e4:	mov	r5, #16384	; 0x4000
   121e8:	stm	r0, {r1, r2}
   121ec:	str	sp, [r0, #12]
   121f0:	str	r5, [r0, #16]
   121f4:	cmp	r2, #0
   121f8:	mov	r1, r7
   121fc:	beq	12238 <__errno_location@plt+0xfd4>
   12200:	bl	11084 <inflate@plt>
   12204:	subs	r8, r0, #0
   12208:	bne	12240 <__errno_location@plt+0xfdc>
   1220c:	ldr	r0, [r4, #76]	; 0x4c
   12210:	ldr	r2, [r0, #4]
   12214:	ldr	r3, [r0, #16]
   12218:	cmp	r2, #0
   1221c:	rsb	r3, r3, #16384	; 0x4000
   12220:	bne	12270 <__errno_location@plt+0x100c>
   12224:	cmp	r3, #0
   12228:	beq	12238 <__errno_location@plt+0xfd4>
   1222c:	ldrb	r2, [r4, #72]	; 0x48
   12230:	tst	r2, #8
   12234:	beq	122ac <__errno_location@plt+0x1048>
   12238:	add	sp, sp, #16384	; 0x4000
   1223c:	pop	{r4, r5, r6, r7, r8, pc}
   12240:	mov	r1, r6
   12244:	mov	r2, #6
   12248:	ldr	r0, [pc, #140]	; 122dc <__errno_location@plt+0x1078>
   1224c:	bl	1121c <strncmp@plt>
   12250:	cmp	r0, #0
   12254:	bne	12288 <__errno_location@plt+0x1024>
   12258:	mov	r0, r4
   1225c:	ldr	r2, [pc, #124]	; 122e0 <__errno_location@plt+0x107c>
   12260:	mov	r1, #1
   12264:	bl	11fdc <__errno_location@plt+0xd78>
   12268:	add	sp, sp, #16384	; 0x4000
   1226c:	pop	{r4, r5, r6, r7, r8, pc}
   12270:	ldrb	r1, [r4, #72]	; 0x48
   12274:	tst	r1, #8
   12278:	beq	122c0 <__errno_location@plt+0x105c>
   1227c:	str	sp, [r0, #12]
   12280:	str	r5, [r0, #16]
   12284:	b	121f4 <__errno_location@plt+0xf90>
   12288:	mov	r0, r8
   1228c:	bl	10f7c <zError@plt>
   12290:	ldr	r2, [pc, #76]	; 122e4 <__errno_location@plt+0x1080>
   12294:	mov	r1, #1
   12298:	mov	r3, r0
   1229c:	mov	r0, r4
   122a0:	bl	11fdc <__errno_location@plt+0xd78>
   122a4:	add	sp, sp, #16384	; 0x4000
   122a8:	pop	{r4, r5, r6, r7, r8, pc}
   122ac:	mov	r2, r3
   122b0:	mov	r1, sp
   122b4:	ldr	r0, [r4, #20]
   122b8:	bl	11234 <rb_rawbuf_append@plt>
   122bc:	b	12238 <__errno_location@plt+0xfd4>
   122c0:	mov	r2, r3
   122c4:	ldr	r0, [r4, #20]
   122c8:	mov	r1, sp
   122cc:	bl	11234 <rb_rawbuf_append@plt>
   122d0:	ldr	r0, [r4, #76]	; 0x4c
   122d4:	ldr	r2, [r0, #4]
   122d8:	b	1227c <__errno_location@plt+0x1018>
   122dc:	andeq	r3, r1, ip, lsr sl
   122e0:	andeq	r3, r1, r4, asr #20
   122e4:	andeq	r3, r1, r0, ror #20
   122e8:	push	{r4, r5, r6, r7, lr}
   122ec:	sub	sp, sp, #16384	; 0x4000
   122f0:	ldrb	r3, [r0, #72]	; 0x48
   122f4:	sub	sp, sp, #4
   122f8:	mov	r5, r0
   122fc:	mov	r6, #16384	; 0x4000
   12300:	and	r3, r3, #8
   12304:	ands	r4, r3, #255	; 0xff
   12308:	mov	r2, r6
   1230c:	mov	r1, sp
   12310:	bne	123c4 <__errno_location@plt+0x1160>
   12314:	ldr	r0, [r5, #28]
   12318:	bl	110c0 <rb_read@plt>
   1231c:	subs	r7, r0, #0
   12320:	beq	123d0 <__errno_location@plt+0x116c>
   12324:	blt	12384 <__errno_location@plt+0x1120>
   12328:	ldrd	r0, [r5, #48]	; 0x30
   1232c:	ldrb	r3, [r5, #72]	; 0x48
   12330:	adds	r0, r0, r7
   12334:	adc	r1, r1, r7, asr #31
   12338:	tst	r3, #2
   1233c:	strd	r0, [r5, #48]	; 0x30
   12340:	bne	12368 <__errno_location@plt+0x1104>
   12344:	ands	r3, r3, #8
   12348:	bne	12304 <__errno_location@plt+0x10a0>
   1234c:	mov	r2, r7
   12350:	mov	r1, sp
   12354:	ldr	r0, [r5, #20]
   12358:	bl	11234 <rb_rawbuf_append@plt>
   1235c:	ldrb	r3, [r5, #72]	; 0x48
   12360:	and	r3, r3, #8
   12364:	b	12304 <__errno_location@plt+0x10a0>
   12368:	mov	r2, r7
   1236c:	mov	r1, sp
   12370:	mov	r0, r5
   12374:	bl	121cc <__errno_location@plt+0xf68>
   12378:	ldrb	r3, [r5, #72]	; 0x48
   1237c:	and	r3, r3, #8
   12380:	b	12304 <__errno_location@plt+0x10a0>
   12384:	bl	11264 <__errno_location@plt>
   12388:	mov	r6, r0
   1238c:	ldr	r0, [r0]
   12390:	bl	10fa0 <rb_ignore_errno@plt>
   12394:	cmp	r0, #0
   12398:	beq	123f0 <__errno_location@plt+0x118c>
   1239c:	cmn	r7, #4
   123a0:	beq	12430 <__errno_location@plt+0x11cc>
   123a4:	mov	r3, r5
   123a8:	ldr	r2, [pc, #200]	; 12478 <__errno_location@plt+0x1214>
   123ac:	mov	r1, #1
   123b0:	ldr	r0, [r5, #28]
   123b4:	bl	10fd0 <rb_setselect@plt>
   123b8:	mov	r1, r5
   123bc:	ldr	r0, [r5, #32]
   123c0:	bl	11f28 <__errno_location@plt+0xcc4>
   123c4:	add	sp, sp, #16384	; 0x4000
   123c8:	add	sp, sp, #4
   123cc:	pop	{r4, r5, r6, r7, pc}
   123d0:	mov	r0, r5
   123d4:	ldr	r3, [pc, #160]	; 1247c <__errno_location@plt+0x1218>
   123d8:	ldr	r2, [pc, #160]	; 12480 <__errno_location@plt+0x121c>
   123dc:	mov	r1, #1
   123e0:	bl	11fdc <__errno_location@plt+0xd78>
   123e4:	add	sp, sp, #16384	; 0x4000
   123e8:	add	sp, sp, #4
   123ec:	pop	{r4, r5, r6, r7, pc}
   123f0:	ldrb	r3, [r5, #72]	; 0x48
   123f4:	cmn	r7, #2
   123f8:	movne	r7, #0
   123fc:	moveq	r7, #1
   12400:	tst	r3, r7
   12404:	bne	12468 <__errno_location@plt+0x1204>
   12408:	ldr	r0, [r6]
   1240c:	bl	10f64 <strerror@plt>
   12410:	mov	r3, r0
   12414:	mov	r0, r5
   12418:	ldr	r2, [pc, #100]	; 12484 <__errno_location@plt+0x1220>
   1241c:	mov	r1, #1
   12420:	bl	11fdc <__errno_location@plt+0xd78>
   12424:	add	sp, sp, #16384	; 0x4000
   12428:	add	sp, sp, #4
   1242c:	pop	{r4, r5, r6, r7, pc}
   12430:	mov	r3, r4
   12434:	mov	r2, r4
   12438:	mov	r1, #1
   1243c:	ldr	r0, [r5, #28]
   12440:	bl	10fd0 <rb_setselect@plt>
   12444:	mov	r3, r5
   12448:	ldr	r2, [pc, #40]	; 12478 <__errno_location@plt+0x1214>
   1244c:	mov	r1, #2
   12450:	ldr	r0, [r5, #28]
   12454:	bl	10fd0 <rb_setselect@plt>
   12458:	ldrb	r3, [r5, #72]	; 0x48
   1245c:	orr	r3, r3, #32
   12460:	strb	r3, [r5, #72]	; 0x48
   12464:	b	123b8 <__errno_location@plt+0x1154>
   12468:	ldr	r0, [r5, #28]
   1246c:	bl	11150 <rb_get_ssl_strerror@plt>
   12470:	mov	r3, r0
   12474:	b	12414 <__errno_location@plt+0x11b0>
   12478:	andeq	r2, r1, ip, asr r8
   1247c:	andeq	r3, r1, r4, lsl #21
   12480:	andeq	r3, r1, r8, lsl #22
   12484:	andeq	r3, r1, r4, ror sl
   12488:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1248c:	mov	r6, #0
   12490:	ldr	sl, [pc, #128]	; 12518 <__errno_location@plt+0x12b4>
   12494:	ldr	r8, [pc, #128]	; 1251c <__errno_location@plt+0x12b8>
   12498:	ldr	r9, [pc, #128]	; 12520 <__errno_location@plt+0x12bc>
   1249c:	mov	r7, #1
   124a0:	ldr	r3, [sl, r6]
   124a4:	cmp	r3, #0
   124a8:	beq	124fc <__errno_location@plt+0x1298>
   124ac:	ldr	r4, [r3, #8]
   124b0:	b	124c4 <__errno_location@plt+0x1260>
   124b4:	cmp	r4, #0
   124b8:	beq	124fc <__errno_location@plt+0x1298>
   124bc:	mov	r3, r4
   124c0:	ldr	r4, [r4, #8]
   124c4:	ldr	r5, [r3]
   124c8:	ldrb	r3, [r5, #72]	; 0x48
   124cc:	tst	r3, #1
   124d0:	beq	124b4 <__errno_location@plt+0x1250>
   124d4:	ldr	r0, [r5, #28]
   124d8:	bl	10fe8 <rb_ssl_handshake_count@plt>
   124dc:	mov	r2, r8
   124e0:	mov	r1, r7
   124e4:	cmp	r0, #2
   124e8:	mov	r0, r5
   124ec:	bls	1250c <__errno_location@plt+0x12a8>
   124f0:	bl	11fdc <__errno_location@plt+0xd78>
   124f4:	cmp	r4, #0
   124f8:	bne	124bc <__errno_location@plt+0x1258>
   124fc:	add	r6, r6, #12
   12500:	cmp	r6, r9
   12504:	bne	124a0 <__errno_location@plt+0x123c>
   12508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1250c:	ldr	r0, [r5, #28]
   12510:	bl	1112c <rb_ssl_clear_handshake_count@plt>
   12514:	b	124b4 <__errno_location@plt+0x1250>
   12518:	andeq	r4, r2, r0, asr #2
   1251c:	andeq	r3, r1, r8, lsr #21
   12520:	andeq	r5, r0, r0, asr #27
   12524:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12528:	subs	r6, r1, #0
   1252c:	mov	r5, r0
   12530:	beq	12600 <__errno_location@plt+0x139c>
   12534:	mov	r1, #80	; 0x50
   12538:	mov	r0, #1
   1253c:	ldr	r9, [r6, #20]
   12540:	ldr	r8, [r6, #24]
   12544:	bl	1103c <calloc@plt>
   12548:	subs	r4, r0, #0
   1254c:	beq	12624 <__errno_location@plt+0x13c0>
   12550:	str	r5, [r4, #12]
   12554:	bl	111bc <rb_new_rawbuffer@plt>
   12558:	mov	r7, #0
   1255c:	str	r0, [r4, #16]
   12560:	bl	111bc <rb_new_rawbuffer@plt>
   12564:	mvn	r3, #0
   12568:	str	r3, [r4, #24]
   1256c:	str	r9, [r4, #28]
   12570:	str	r8, [r4, #32]
   12574:	str	r7, [r4, #76]	; 0x4c
   12578:	str	r0, [r4, #20]
   1257c:	mov	r0, r9
   12580:	bl	11048 <rb_set_nb@plt>
   12584:	mov	r0, r8
   12588:	bl	11048 <rb_set_nb@plt>
   1258c:	ldr	r2, [r6, #12]
   12590:	ldr	r3, [pc, #144]	; 12628 <__errno_location@plt+0x13c4>
   12594:	mov	r0, #2000	; 0x7d0
   12598:	ldr	r1, [r2, #1]
   1259c:	ldr	r2, [pc, #136]	; 1262c <__errno_location@plt+0x13c8>
   125a0:	str	r1, [r4, #24]
   125a4:	umull	ip, r3, r3, r1
   125a8:	stm	r4, {r4, r7}
   125ac:	lsr	r3, r3, #7
   125b0:	mul	r3, r0, r3
   125b4:	sub	r3, r1, r3
   125b8:	lsl	r1, r3, #1
   125bc:	add	r0, r1, r3
   125c0:	add	r0, r2, r0, lsl #2
   125c4:	ldr	ip, [r0, #16]
   125c8:	cmp	ip, r7
   125cc:	str	ip, [r4, #8]
   125d0:	strne	r4, [ip, #4]
   125d4:	beq	12614 <__errno_location@plt+0x13b0>
   125d8:	add	r3, r1, r3
   125dc:	mov	r1, #1
   125e0:	add	r3, r2, r3, lsl #2
   125e4:	mov	r0, r4
   125e8:	ldr	ip, [r3, #24]
   125ec:	ldr	r2, [pc, #60]	; 12630 <__errno_location@plt+0x13cc>
   125f0:	add	ip, ip, r1
   125f4:	str	r4, [r3, #16]
   125f8:	str	ip, [r3, #24]
   125fc:	bl	11fdc <__errno_location@plt+0xd78>
   12600:	mov	r0, r5
   12604:	mov	r2, #1
   12608:	ldr	r1, [pc, #36]	; 12634 <__errno_location@plt+0x13d0>
   1260c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12610:	b	119e4 <__errno_location@plt+0x780>
   12614:	ldr	ip, [r0, #20]
   12618:	cmp	ip, #0
   1261c:	streq	r4, [r0, #20]
   12620:	b	125d8 <__errno_location@plt+0x1374>
   12624:	bl	11180 <rb_outofmemory@plt>
   12628:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1262c:	andeq	r4, r2, r0, lsr r1
   12630:			; <UNDEFINED> instruction: 0x00013abc
   12634:	andeq	r3, r1, r4, ror #21
   12638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1263c:	sub	sp, sp, #4
   12640:	ldrb	r3, [r1, #72]	; 0x48
   12644:	ands	r6, r3, #8
   12648:	bne	12690 <__errno_location@plt+0x142c>
   1264c:	ldr	r8, [pc, #500]	; 12848 <__errno_location@plt+0x15e4>
   12650:	ldr	sl, [pc, #500]	; 1284c <__errno_location@plt+0x15e8>
   12654:	mov	r4, r1
   12658:	mov	r5, r0
   1265c:	mov	r7, #2
   12660:	mov	r9, #1
   12664:	tst	r3, #16
   12668:	beq	126a8 <__errno_location@plt+0x1444>
   1266c:	bic	r2, r3, #16
   12670:	tst	r3, #32
   12674:	strb	r2, [r4, #72]	; 0x48
   12678:	bne	127f0 <__errno_location@plt+0x158c>
   1267c:	mov	r0, r4
   12680:	bl	122e8 <__errno_location@plt+0x1084>
   12684:	ldrb	r3, [r4, #72]	; 0x48
   12688:	tst	r3, #8
   1268c:	beq	126a8 <__errno_location@plt+0x1444>
   12690:	add	sp, sp, #4
   12694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12698:	ldrd	r2, [r4, #40]	; 0x28
   1269c:	adds	r2, r2, fp
   126a0:	adc	r3, r3, fp, asr #31
   126a4:	strd	r2, [r4, #40]	; 0x28
   126a8:	mov	r1, r5
   126ac:	ldr	r0, [r4, #16]
   126b0:	bl	11240 <rb_rawbuf_flush@plt>
   126b4:	subs	fp, r0, #0
   126b8:	bgt	12698 <__errno_location@plt+0x1434>
   126bc:	bne	126fc <__errno_location@plt+0x1498>
   126c0:	ldr	r3, [pc, #392]	; 12850 <__errno_location@plt+0x15ec>
   126c4:	ldr	r2, [pc, #392]	; 12854 <__errno_location@plt+0x15f0>
   126c8:	mov	r1, #1
   126cc:	mov	r0, r4
   126d0:	bl	11fdc <__errno_location@plt+0xd78>
   126d4:	bl	11264 <__errno_location@plt>
   126d8:	ldr	r0, [r0]
   126dc:	bl	10f64 <strerror@plt>
   126e0:	mov	r3, r0
   126e4:	mov	r0, r4
   126e8:	ldr	r2, [pc, #360]	; 12858 <__errno_location@plt+0x15f4>
   126ec:	mov	r1, #1
   126f0:	add	sp, sp, #4
   126f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126f8:	b	11fdc <__errno_location@plt+0xd78>
   126fc:	bl	11264 <__errno_location@plt>
   12700:	ldr	r0, [r0]
   12704:	bl	10fa0 <rb_ignore_errno@plt>
   12708:	cmp	r0, #0
   1270c:	beq	127bc <__errno_location@plt+0x1558>
   12710:	ldr	r0, [r4, #16]
   12714:	bl	11138 <rb_rawbuf_length@plt>
   12718:	cmp	r0, #0
   1271c:	ble	127e4 <__errno_location@plt+0x1580>
   12720:	cmn	fp, #3
   12724:	mov	r3, r4
   12728:	mov	r2, r8
   1272c:	beq	1278c <__errno_location@plt+0x1528>
   12730:	mov	r1, r7
   12734:	ldr	r0, [r4, #28]
   12738:	bl	10fd0 <rb_setselect@plt>
   1273c:	ldrb	r3, [r4, #72]	; 0x48
   12740:	tst	r3, #4
   12744:	beq	12690 <__errno_location@plt+0x142c>
   12748:	ldr	r0, [r4, #16]
   1274c:	bl	11138 <rb_rawbuf_length@plt>
   12750:	cmp	r0, #0
   12754:	bne	12690 <__errno_location@plt+0x142c>
   12758:	ldrb	r3, [r4, #72]	; 0x48
   1275c:	bic	r2, r3, #4
   12760:	ands	r5, r3, #8
   12764:	strb	r2, [r4, #72]	; 0x48
   12768:	bne	12690 <__errno_location@plt+0x142c>
   1276c:	ldr	r0, [r4, #16]
   12770:	bl	11138 <rb_rawbuf_length@plt>
   12774:	cmp	r0, sl
   12778:	bgt	12814 <__errno_location@plt+0x15b0>
   1277c:	mov	r0, r4
   12780:	add	sp, sp, #4
   12784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12788:	b	128ac <__errno_location@plt+0x1648>
   1278c:	mov	r1, r9
   12790:	ldr	r0, [r4, #28]
   12794:	bl	10fd0 <rb_setselect@plt>
   12798:	mov	r3, r6
   1279c:	mov	r2, #0
   127a0:	mov	r1, r7
   127a4:	ldr	r0, [r4, #28]
   127a8:	bl	10fd0 <rb_setselect@plt>
   127ac:	ldrb	r3, [r4, #72]	; 0x48
   127b0:	orr	r3, r3, #16
   127b4:	strb	r3, [r4, #72]	; 0x48
   127b8:	b	12740 <__errno_location@plt+0x14dc>
   127bc:	ldrb	r3, [r4, #72]	; 0x48
   127c0:	cmn	fp, #2
   127c4:	movne	fp, #0
   127c8:	moveq	fp, #1
   127cc:	tst	r3, fp
   127d0:	beq	126d4 <__errno_location@plt+0x1470>
   127d4:	ldr	r0, [r4, #28]
   127d8:	bl	11150 <rb_get_ssl_strerror@plt>
   127dc:	mov	r3, r0
   127e0:	b	126e4 <__errno_location@plt+0x1480>
   127e4:	mov	r3, r6
   127e8:	mov	r2, #0
   127ec:	b	12730 <__errno_location@plt+0x14cc>
   127f0:	bic	r3, r3, #48	; 0x30
   127f4:	strb	r3, [r4, #72]	; 0x48
   127f8:	ldr	r0, [r4, #28]
   127fc:	mov	r1, r4
   12800:	bl	12638 <__errno_location@plt+0x13d4>
   12804:	ldrb	r3, [r4, #72]	; 0x48
   12808:	tst	r3, #8
   1280c:	beq	1267c <__errno_location@plt+0x1418>
   12810:	b	12690 <__errno_location@plt+0x142c>
   12814:	ldrb	r1, [r4, #72]	; 0x48
   12818:	mov	r3, r6
   1281c:	mov	r2, r5
   12820:	orr	r1, r1, #4
   12824:	strb	r1, [r4, #72]	; 0x48
   12828:	ldr	r0, [r4, #32]
   1282c:	mov	r1, r9
   12830:	bl	10fd0 <rb_setselect@plt>
   12834:	ldrb	r3, [r4, #72]	; 0x48
   12838:	tst	r3, #8
   1283c:	bne	12690 <__errno_location@plt+0x142c>
   12840:	ldr	r5, [r4, #28]
   12844:	b	12664 <__errno_location@plt+0x1400>
   12848:	andeq	r2, r1, r8, lsr r6
   1284c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12850:	andeq	r3, r1, r4, lsl #21
   12854:	andeq	r3, r1, r8, lsl #22
   12858:	andeq	r3, r1, r8, ror #21
   1285c:	subs	r0, r1, #0
   12860:	bxeq	lr
   12864:	ldrb	r3, [r0, #72]	; 0x48
   12868:	tst	r3, #8
   1286c:	bxne	lr
   12870:	tst	r3, #32
   12874:	push	{r4, lr}
   12878:	mov	r4, r0
   1287c:	bne	1288c <__errno_location@plt+0x1628>
   12880:	mov	r0, r4
   12884:	pop	{r4, lr}
   12888:	b	122e8 <__errno_location@plt+0x1084>
   1288c:	bic	r3, r3, #32
   12890:	strb	r3, [r0, #72]	; 0x48
   12894:	ldr	r0, [r0, #28]
   12898:	bl	12638 <__errno_location@plt+0x13d4>
   1289c:	ldrb	r3, [r4, #72]	; 0x48
   128a0:	tst	r3, #8
   128a4:	beq	12880 <__errno_location@plt+0x161c>
   128a8:	pop	{r4, pc}
   128ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128b0:	sub	sp, sp, #32768	; 0x8000
   128b4:	ldr	r9, [pc, #916]	; 12c50 <__errno_location@plt+0x19ec>
   128b8:	ldr	r8, [pc, #916]	; 12c54 <__errno_location@plt+0x19f0>
   128bc:	ldr	r7, [pc, #916]	; 12c58 <__errno_location@plt+0x19f4>
   128c0:	ldr	r6, [pc, #916]	; 12c5c <__errno_location@plt+0x19f8>
   128c4:	sub	sp, sp, #4
   128c8:	mov	r4, r0
   128cc:	mov	r5, #16384	; 0x4000
   128d0:	ldrb	r3, [r4, #72]	; 0x48
   128d4:	tst	r3, #8
   128d8:	bne	1291c <__errno_location@plt+0x16b8>
   128dc:	mov	r2, r5
   128e0:	mov	r1, sp
   128e4:	ldr	r0, [r4, #32]
   128e8:	bl	110c0 <rb_read@plt>
   128ec:	subs	r2, r0, #0
   128f0:	beq	12b9c <__errno_location@plt+0x1938>
   128f4:	blt	12ab4 <__errno_location@plt+0x1850>
   128f8:	ldrd	r0, [r4, #56]	; 0x38
   128fc:	ldrb	r3, [r4, #72]	; 0x48
   12900:	adds	r0, r0, r2
   12904:	adc	r1, r1, r2, asr #31
   12908:	tst	r3, #2
   1290c:	strd	r0, [r4, #56]	; 0x38
   12910:	bne	12928 <__errno_location@plt+0x16c4>
   12914:	tst	r3, #8
   12918:	beq	12994 <__errno_location@plt+0x1730>
   1291c:	add	sp, sp, #32768	; 0x8000
   12920:	add	sp, sp, #4
   12924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12928:	ldr	sl, [r4, #76]	; 0x4c
   1292c:	add	fp, sp, #16384	; 0x4000
   12930:	add	r0, sl, #56	; 0x38
   12934:	str	sp, [sl, #56]	; 0x38
   12938:	str	r2, [sl, #60]	; 0x3c
   1293c:	str	r5, [sl, #72]	; 0x48
   12940:	str	fp, [sl, #68]	; 0x44
   12944:	mov	r1, #2
   12948:	bl	11024 <deflate@plt>
   1294c:	cmp	r0, #0
   12950:	bne	12b30 <__errno_location@plt+0x18cc>
   12954:	ldr	r2, [sl, #72]	; 0x48
   12958:	cmp	r2, #0
   1295c:	beq	12b74 <__errno_location@plt+0x1910>
   12960:	ldr	r3, [sl, #60]	; 0x3c
   12964:	cmp	r3, #0
   12968:	bne	12b88 <__errno_location@plt+0x1924>
   1296c:	ldrb	r3, [r4, #72]	; 0x48
   12970:	tst	r3, #8
   12974:	bne	1291c <__errno_location@plt+0x16b8>
   12978:	rsb	r2, r2, #16384	; 0x4000
   1297c:	mov	r1, fp
   12980:	ldr	r0, [r4, #16]
   12984:	bl	11234 <rb_rawbuf_append@plt>
   12988:	ldrb	sl, [r4, #72]	; 0x48
   1298c:	and	sl, sl, #8
   12990:	b	129a8 <__errno_location@plt+0x1744>
   12994:	mov	r1, sp
   12998:	ldr	r0, [r4, #16]
   1299c:	bl	11234 <rb_rawbuf_append@plt>
   129a0:	ldrb	sl, [r4, #72]	; 0x48
   129a4:	and	sl, sl, #8
   129a8:	cmp	sl, #0
   129ac:	bne	1291c <__errno_location@plt+0x16b8>
   129b0:	ldr	r0, [r4, #16]
   129b4:	bl	11138 <rb_rawbuf_length@plt>
   129b8:	cmp	r0, r6
   129bc:	ble	128d0 <__errno_location@plt+0x166c>
   129c0:	ldrb	r1, [r4, #72]	; 0x48
   129c4:	mov	r3, sl
   129c8:	mov	r2, sl
   129cc:	orr	r1, r1, #4
   129d0:	strb	r1, [r4, #72]	; 0x48
   129d4:	ldr	r0, [r4, #32]
   129d8:	mov	r1, #1
   129dc:	bl	10fd0 <rb_setselect@plt>
   129e0:	ldrb	r3, [r4, #72]	; 0x48
   129e4:	tst	r3, #8
   129e8:	bne	1291c <__errno_location@plt+0x16b8>
   129ec:	tst	r3, #16
   129f0:	ldr	r6, [r4, #28]
   129f4:	beq	12a0c <__errno_location@plt+0x17a8>
   129f8:	b	12b4c <__errno_location@plt+0x18e8>
   129fc:	ldrd	r2, [r4, #40]	; 0x28
   12a00:	adds	r2, r2, r5
   12a04:	adc	r3, r3, r5, asr #31
   12a08:	strd	r2, [r4, #40]	; 0x28
   12a0c:	mov	r1, r6
   12a10:	ldr	r0, [r4, #16]
   12a14:	bl	11240 <rb_rawbuf_flush@plt>
   12a18:	subs	r5, r0, #0
   12a1c:	bgt	129fc <__errno_location@plt+0x1798>
   12a20:	beq	12af4 <__errno_location@plt+0x1890>
   12a24:	bl	11264 <__errno_location@plt>
   12a28:	mov	r6, r0
   12a2c:	ldr	r0, [r0]
   12a30:	bl	10fa0 <rb_ignore_errno@plt>
   12a34:	cmp	r0, #0
   12a38:	beq	12c04 <__errno_location@plt+0x19a0>
   12a3c:	ldr	r0, [r4, #16]
   12a40:	bl	11138 <rb_rawbuf_length@plt>
   12a44:	cmp	r0, #0
   12a48:	ble	12c2c <__errno_location@plt+0x19c8>
   12a4c:	cmn	r5, #3
   12a50:	mov	r3, r4
   12a54:	ldr	r2, [pc, #516]	; 12c60 <__errno_location@plt+0x19fc>
   12a58:	beq	12bb0 <__errno_location@plt+0x194c>
   12a5c:	mov	r1, #2
   12a60:	ldr	r0, [r4, #28]
   12a64:	bl	10fd0 <rb_setselect@plt>
   12a68:	ldrb	r3, [r4, #72]	; 0x48
   12a6c:	tst	r3, #4
   12a70:	beq	1291c <__errno_location@plt+0x16b8>
   12a74:	ldr	r0, [r4, #16]
   12a78:	bl	11138 <rb_rawbuf_length@plt>
   12a7c:	cmp	r0, #0
   12a80:	bne	1291c <__errno_location@plt+0x16b8>
   12a84:	ldrb	r3, [r4, #72]	; 0x48
   12a88:	bic	r2, r3, #4
   12a8c:	ands	r5, r3, #8
   12a90:	strb	r2, [r4, #72]	; 0x48
   12a94:	bne	1291c <__errno_location@plt+0x16b8>
   12a98:	ldr	r0, [r4, #16]
   12a9c:	bl	11138 <rb_rawbuf_length@plt>
   12aa0:	cmp	r0, #4096	; 0x1000
   12aa4:	bge	12c38 <__errno_location@plt+0x19d4>
   12aa8:	mov	r0, r4
   12aac:	bl	128ac <__errno_location@plt+0x1648>
   12ab0:	b	1291c <__errno_location@plt+0x16b8>
   12ab4:	bl	11264 <__errno_location@plt>
   12ab8:	ldr	r0, [r0]
   12abc:	bl	10fa0 <rb_ignore_errno@plt>
   12ac0:	cmp	r0, #0
   12ac4:	movne	r3, r4
   12ac8:	ldrne	r2, [pc, #404]	; 12c64 <__errno_location@plt+0x1a00>
   12acc:	beq	12b9c <__errno_location@plt+0x1938>
   12ad0:	ldr	r0, [r4, #32]
   12ad4:	mov	r1, #1
   12ad8:	bl	10fd0 <rb_setselect@plt>
   12adc:	mov	r1, r4
   12ae0:	ldr	r0, [r4, #28]
   12ae4:	bl	12638 <__errno_location@plt+0x13d4>
   12ae8:	add	sp, sp, #32768	; 0x8000
   12aec:	add	sp, sp, #4
   12af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12af4:	ldr	r3, [pc, #364]	; 12c68 <__errno_location@plt+0x1a04>
   12af8:	ldr	r2, [pc, #364]	; 12c6c <__errno_location@plt+0x1a08>
   12afc:	mov	r1, #1
   12b00:	mov	r0, r4
   12b04:	bl	11fdc <__errno_location@plt+0xd78>
   12b08:	bl	11264 <__errno_location@plt>
   12b0c:	mov	r6, r0
   12b10:	ldr	r0, [r6]
   12b14:	bl	10f64 <strerror@plt>
   12b18:	mov	r3, r0
   12b1c:	mov	r0, r4
   12b20:	ldr	r2, [pc, #328]	; 12c70 <__errno_location@plt+0x1a0c>
   12b24:	mov	r1, #1
   12b28:	bl	11fdc <__errno_location@plt+0xd78>
   12b2c:	b	1291c <__errno_location@plt+0x16b8>
   12b30:	bl	10f7c <zError@plt>
   12b34:	mov	r2, r7
   12b38:	mov	r1, #1
   12b3c:	mov	r3, r0
   12b40:	mov	r0, r4
   12b44:	bl	11fdc <__errno_location@plt+0xd78>
   12b48:	b	129a0 <__errno_location@plt+0x173c>
   12b4c:	tst	r3, #32
   12b50:	bne	12be0 <__errno_location@plt+0x197c>
   12b54:	bic	r3, r3, #16
   12b58:	strb	r3, [r4, #72]	; 0x48
   12b5c:	mov	r0, r4
   12b60:	bl	122e8 <__errno_location@plt+0x1084>
   12b64:	ldrb	r3, [r4, #72]	; 0x48
   12b68:	tst	r3, #8
   12b6c:	beq	12a0c <__errno_location@plt+0x17a8>
   12b70:	b	1291c <__errno_location@plt+0x16b8>
   12b74:	mov	r2, r8
   12b78:	mov	r1, #1
   12b7c:	mov	r0, r4
   12b80:	bl	11fdc <__errno_location@plt+0xd78>
   12b84:	b	129a0 <__errno_location@plt+0x173c>
   12b88:	mov	r2, r9
   12b8c:	mov	r1, #1
   12b90:	mov	r0, r4
   12b94:	bl	11fdc <__errno_location@plt+0xd78>
   12b98:	b	129a0 <__errno_location@plt+0x173c>
   12b9c:	mov	r2, #0
   12ba0:	mov	r0, r4
   12ba4:	mov	r1, r2
   12ba8:	bl	11d28 <__errno_location@plt+0xac4>
   12bac:	b	1291c <__errno_location@plt+0x16b8>
   12bb0:	mov	r1, #1
   12bb4:	ldr	r0, [r4, #28]
   12bb8:	bl	10fd0 <rb_setselect@plt>
   12bbc:	mov	r3, #0
   12bc0:	mov	r2, r3
   12bc4:	mov	r1, #2
   12bc8:	ldr	r0, [r4, #28]
   12bcc:	bl	10fd0 <rb_setselect@plt>
   12bd0:	ldrb	r3, [r4, #72]	; 0x48
   12bd4:	orr	r3, r3, #16
   12bd8:	strb	r3, [r4, #72]	; 0x48
   12bdc:	b	12a6c <__errno_location@plt+0x1808>
   12be0:	bic	r3, r3, #48	; 0x30
   12be4:	strb	r3, [r4, #72]	; 0x48
   12be8:	mov	r1, r4
   12bec:	mov	r0, r6
   12bf0:	bl	12638 <__errno_location@plt+0x13d4>
   12bf4:	ldrb	r3, [r4, #72]	; 0x48
   12bf8:	tst	r3, #8
   12bfc:	beq	12b5c <__errno_location@plt+0x18f8>
   12c00:	b	1291c <__errno_location@plt+0x16b8>
   12c04:	ldrb	r3, [r4, #72]	; 0x48
   12c08:	cmn	r5, #2
   12c0c:	movne	r5, #0
   12c10:	moveq	r5, #1
   12c14:	tst	r3, r5
   12c18:	beq	12b10 <__errno_location@plt+0x18ac>
   12c1c:	ldr	r0, [r4, #28]
   12c20:	bl	11150 <rb_get_ssl_strerror@plt>
   12c24:	mov	r3, r0
   12c28:	b	12b1c <__errno_location@plt+0x18b8>
   12c2c:	mov	r3, #0
   12c30:	mov	r2, r3
   12c34:	b	12a5c <__errno_location@plt+0x17f8>
   12c38:	ldrb	r1, [r4, #72]	; 0x48
   12c3c:	mov	r3, r5
   12c40:	mov	r2, r5
   12c44:	orr	r1, r1, #4
   12c48:	strb	r1, [r4, #72]	; 0x48
   12c4c:	b	12ad0 <__errno_location@plt+0x186c>
   12c50:	andeq	r3, r1, r4, lsr fp
   12c54:	andeq	r3, r1, ip, lsl #22
   12c58:	strdeq	r3, [r1], -r8
   12c5c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12c60:	andeq	r2, r1, r8, lsr r6
   12c64:	andeq	r2, r1, r4, ror ip
   12c68:	andeq	r3, r1, r4, lsl #21
   12c6c:	andeq	r3, r1, r8, lsl #22
   12c70:	andeq	r3, r1, r8, ror #21
   12c74:	push	{r4, r5, r6, lr}
   12c78:	subs	r5, r1, #0
   12c7c:	popeq	{r4, r5, r6, pc}
   12c80:	ldrb	r3, [r5, #72]	; 0x48
   12c84:	ands	r4, r3, #8
   12c88:	popne	{r4, r5, r6, pc}
   12c8c:	ldr	r0, [r5, #16]
   12c90:	bl	11138 <rb_rawbuf_length@plt>
   12c94:	cmp	r0, #4096	; 0x1000
   12c98:	bge	12ca8 <__errno_location@plt+0x1a44>
   12c9c:	mov	r0, r5
   12ca0:	pop	{r4, r5, r6, lr}
   12ca4:	b	128ac <__errno_location@plt+0x1648>
   12ca8:	ldrb	r1, [r5, #72]	; 0x48
   12cac:	ldr	r0, [r5, #32]
   12cb0:	mov	r3, r4
   12cb4:	orr	r1, r1, #4
   12cb8:	strb	r1, [r5, #72]	; 0x48
   12cbc:	mov	r2, r4
   12cc0:	mov	r1, #1
   12cc4:	bl	10fd0 <rb_setselect@plt>
   12cc8:	mov	r1, r5
   12ccc:	ldr	r0, [r5, #28]
   12cd0:	pop	{r4, r5, r6, lr}
   12cd4:	b	12638 <__errno_location@plt+0x13d4>
   12cd8:	push	{r4, r5, lr}
   12cdc:	sub	sp, sp, #84	; 0x54
   12ce0:	cmp	r1, #0
   12ce4:	ldr	r4, [sp, #96]	; 0x60
   12ce8:	beq	12d04 <__errno_location@plt+0x1aa0>
   12cec:	mov	r2, #0
   12cf0:	mov	r0, r4
   12cf4:	mov	r1, r2
   12cf8:	bl	11d28 <__errno_location@plt+0xac4>
   12cfc:	add	sp, sp, #84	; 0x54
   12d00:	pop	{r4, r5, pc}
   12d04:	ldr	r5, [pc, #260]	; 12e10 <__errno_location@plt+0x1bac>
   12d08:	mov	r0, r4
   12d0c:	bl	11ab0 <__errno_location@plt+0x84c>
   12d10:	ldr	r2, [r5, #-536]	; 0xfffffde8
   12d14:	add	r1, sp, #13
   12d18:	ldr	r0, [r4, #28]
   12d1c:	bl	11078 <rb_get_ssl_certfp@plt>
   12d20:	subs	r3, r0, #0
   12d24:	bne	12db0 <__errno_location@plt+0x1b4c>
   12d28:	ldr	ip, [r4, #24]
   12d2c:	mov	r3, #79	; 0x4f
   12d30:	ldr	r0, [r4, #12]
   12d34:	mov	r1, sp
   12d38:	mov	r2, #5
   12d3c:	strb	r3, [sp]
   12d40:	str	ip, [sp, #1]
   12d44:	bl	119e4 <__errno_location@plt+0x780>
   12d48:	ldrb	r3, [r4, #72]	; 0x48
   12d4c:	tst	r3, #8
   12d50:	bne	12cfc <__errno_location@plt+0x1a98>
   12d54:	tst	r3, #32
   12d58:	bne	12d8c <__errno_location@plt+0x1b28>
   12d5c:	mov	r0, r4
   12d60:	bl	122e8 <__errno_location@plt+0x1084>
   12d64:	ldrb	r3, [r4, #72]	; 0x48
   12d68:	ands	r5, r3, #8
   12d6c:	bne	12cfc <__errno_location@plt+0x1a98>
   12d70:	ldr	r0, [r4, #16]
   12d74:	bl	11138 <rb_rawbuf_length@plt>
   12d78:	cmp	r0, #4096	; 0x1000
   12d7c:	bge	12de0 <__errno_location@plt+0x1b7c>
   12d80:	mov	r0, r4
   12d84:	bl	128ac <__errno_location@plt+0x1648>
   12d88:	b	12cfc <__errno_location@plt+0x1a98>
   12d8c:	bic	r3, r3, #32
   12d90:	strb	r3, [r4, #72]	; 0x48
   12d94:	ldr	r0, [r4, #28]
   12d98:	mov	r1, r4
   12d9c:	bl	12638 <__errno_location@plt+0x13d4>
   12da0:	ldrb	r3, [r4, #72]	; 0x48
   12da4:	tst	r3, #8
   12da8:	beq	12d5c <__errno_location@plt+0x1af8>
   12dac:	b	12cfc <__errno_location@plt+0x1a98>
   12db0:	ldr	r0, [r5, #-536]	; 0xfffffde8
   12db4:	ldr	lr, [r4, #24]
   12db8:	mov	ip, #70	; 0x46
   12dbc:	str	r0, [sp, #5]
   12dc0:	add	r2, r3, #13
   12dc4:	mov	r1, sp
   12dc8:	ldr	r0, [r4, #12]
   12dcc:	str	r3, [sp, #9]
   12dd0:	str	lr, [sp, #1]
   12dd4:	strb	ip, [sp]
   12dd8:	bl	119e4 <__errno_location@plt+0x780>
   12ddc:	b	12d28 <__errno_location@plt+0x1ac4>
   12de0:	ldrb	r1, [r4, #72]	; 0x48
   12de4:	ldr	r0, [r4, #32]
   12de8:	mov	r3, r5
   12dec:	orr	r1, r1, #4
   12df0:	strb	r1, [r4, #72]	; 0x48
   12df4:	mov	r2, r5
   12df8:	mov	r1, #1
   12dfc:	bl	10fd0 <rb_setselect@plt>
   12e00:	mov	r1, r4
   12e04:	ldr	r0, [r4, #28]
   12e08:	bl	12638 <__errno_location@plt+0x13d4>
   12e0c:	b	12cfc <__errno_location@plt+0x1a98>
   12e10:	andeq	sl, r2, r8, lsl r1
   12e14:	cmp	r1, #0
   12e18:	push	{r4, r5, lr}
   12e1c:	mov	r4, r2
   12e20:	sub	sp, sp, #84	; 0x54
   12e24:	beq	12e50 <__errno_location@plt+0x1bec>
   12e28:	cmp	r1, #3
   12e2c:	beq	12efc <__errno_location@plt+0x1c98>
   12e30:	cmp	r1, #6
   12e34:	beq	12ed8 <__errno_location@plt+0x1c74>
   12e38:	mov	r0, r2
   12e3c:	mov	r1, #1
   12e40:	ldr	r2, [pc, #332]	; 12f94 <__errno_location@plt+0x1d30>
   12e44:	bl	11fdc <__errno_location@plt+0xd78>
   12e48:	add	sp, sp, #84	; 0x54
   12e4c:	pop	{r4, r5, pc}
   12e50:	ldr	r5, [pc, #320]	; 12f98 <__errno_location@plt+0x1d34>
   12e54:	mov	r0, r2
   12e58:	bl	11ab0 <__errno_location@plt+0x84c>
   12e5c:	ldr	r2, [r5, #-536]	; 0xfffffde8
   12e60:	add	r1, sp, #13
   12e64:	ldr	r0, [r4, #28]
   12e68:	bl	11078 <rb_get_ssl_certfp@plt>
   12e6c:	subs	r3, r0, #0
   12e70:	bne	12f10 <__errno_location@plt+0x1cac>
   12e74:	ldr	ip, [r4, #24]
   12e78:	mov	r3, #79	; 0x4f
   12e7c:	ldr	r0, [r4, #12]
   12e80:	mov	r1, sp
   12e84:	mov	r2, #5
   12e88:	strb	r3, [sp]
   12e8c:	str	ip, [sp, #1]
   12e90:	bl	119e4 <__errno_location@plt+0x780>
   12e94:	ldrb	r3, [r4, #72]	; 0x48
   12e98:	tst	r3, #8
   12e9c:	bne	12e48 <__errno_location@plt+0x1be4>
   12ea0:	tst	r3, #32
   12ea4:	bne	12f70 <__errno_location@plt+0x1d0c>
   12ea8:	mov	r0, r4
   12eac:	bl	122e8 <__errno_location@plt+0x1084>
   12eb0:	ldrb	r3, [r4, #72]	; 0x48
   12eb4:	ands	r5, r3, #8
   12eb8:	bne	12e48 <__errno_location@plt+0x1be4>
   12ebc:	ldr	r0, [r4, #16]
   12ec0:	bl	11138 <rb_rawbuf_length@plt>
   12ec4:	cmp	r0, #4096	; 0x1000
   12ec8:	bge	12f40 <__errno_location@plt+0x1cdc>
   12ecc:	mov	r0, r4
   12ed0:	bl	128ac <__errno_location@plt+0x1648>
   12ed4:	b	12e48 <__errno_location@plt+0x1be4>
   12ed8:	ldr	r0, [r2, #28]
   12edc:	bl	11150 <rb_get_ssl_strerror@plt>
   12ee0:	ldr	r2, [pc, #180]	; 12f9c <__errno_location@plt+0x1d38>
   12ee4:	mov	r1, #1
   12ee8:	mov	r3, r0
   12eec:	mov	r0, r4
   12ef0:	bl	11fdc <__errno_location@plt+0xd78>
   12ef4:	add	sp, sp, #84	; 0x54
   12ef8:	pop	{r4, r5, pc}
   12efc:	mov	r0, r2
   12f00:	mov	r1, #1
   12f04:	ldr	r2, [pc, #148]	; 12fa0 <__errno_location@plt+0x1d3c>
   12f08:	bl	11fdc <__errno_location@plt+0xd78>
   12f0c:	b	12e48 <__errno_location@plt+0x1be4>
   12f10:	ldr	r0, [r5, #-536]	; 0xfffffde8
   12f14:	ldr	lr, [r4, #24]
   12f18:	mov	ip, #70	; 0x46
   12f1c:	str	r0, [sp, #5]
   12f20:	add	r2, r3, #13
   12f24:	mov	r1, sp
   12f28:	ldr	r0, [r4, #12]
   12f2c:	str	r3, [sp, #9]
   12f30:	str	lr, [sp, #1]
   12f34:	strb	ip, [sp]
   12f38:	bl	119e4 <__errno_location@plt+0x780>
   12f3c:	b	12e74 <__errno_location@plt+0x1c10>
   12f40:	ldrb	r1, [r4, #72]	; 0x48
   12f44:	ldr	r0, [r4, #32]
   12f48:	mov	r3, r5
   12f4c:	orr	r1, r1, #4
   12f50:	strb	r1, [r4, #72]	; 0x48
   12f54:	mov	r2, r5
   12f58:	mov	r1, #1
   12f5c:	bl	10fd0 <rb_setselect@plt>
   12f60:	mov	r1, r4
   12f64:	ldr	r0, [r4, #28]
   12f68:	bl	12638 <__errno_location@plt+0x13d4>
   12f6c:	b	12e48 <__errno_location@plt+0x1be4>
   12f70:	bic	r3, r3, #32
   12f74:	strb	r3, [r4, #72]	; 0x48
   12f78:	ldr	r0, [r4, #28]
   12f7c:	mov	r1, r4
   12f80:	bl	12638 <__errno_location@plt+0x13d4>
   12f84:	ldrb	r3, [r4, #72]	; 0x48
   12f88:	tst	r3, #8
   12f8c:	beq	12ea8 <__errno_location@plt+0x1c44>
   12f90:	b	12e48 <__errno_location@plt+0x1be4>
   12f94:	andeq	r3, r1, r4, ror fp
   12f98:	andeq	sl, r2, r8, lsl r1
   12f9c:	andeq	r3, r1, r8, lsl #22
   12fa0:	andeq	r3, r1, ip, asr fp
   12fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fa8:	mov	r4, r1
   12fac:	sub	sp, sp, #20
   12fb0:	mov	r8, #40	; 0x28
   12fb4:	mov	r6, #1
   12fb8:	mov	r7, #16384	; 0x4000
   12fbc:	mov	r9, #4
   12fc0:	mov	sl, #0
   12fc4:	mov	r1, r8
   12fc8:	mov	r0, r6
   12fcc:	bl	1103c <calloc@plt>
   12fd0:	subs	r5, r0, #0
   12fd4:	beq	13144 <__errno_location@plt+0x1ee0>
   12fd8:	mov	r1, r7
   12fdc:	mov	r0, r6
   12fe0:	bl	1103c <calloc@plt>
   12fe4:	subs	r1, r0, #0
   12fe8:	beq	13144 <__errno_location@plt+0x1ee0>
   12fec:	ldr	r0, [r4, #16]
   12ff0:	str	r1, [r5, #12]
   12ff4:	str	r7, [r5, #16]
   12ff8:	add	r3, r5, #20
   12ffc:	str	r9, [sp]
   13000:	mov	r2, #16384	; 0x4000
   13004:	bl	111e0 <rb_recv_fd_buf@plt>
   13008:	cmp	r0, #0
   1300c:	ble	13078 <__errno_location@plt+0x1e14>
   13010:	ldr	r3, [r4, #28]
   13014:	str	r0, [r5, #16]
   13018:	cmp	r3, #0
   1301c:	str	r5, [r5]
   13020:	stmib	r5, {r3, sl}
   13024:	strne	r5, [r3, #8]
   13028:	beq	13148 <__errno_location@plt+0x1ee4>
   1302c:	ldr	r3, [r4, #32]
   13030:	ldr	r2, [r5, #20]
   13034:	add	r3, r3, #1
   13038:	cmp	r2, #0
   1303c:	str	r5, [r4, #28]
   13040:	str	r3, [r4, #32]
   13044:	beq	133a0 <__errno_location@plt+0x213c>
   13048:	ldr	r3, [r5, #24]
   1304c:	cmp	r3, #0
   13050:	beq	133a8 <__errno_location@plt+0x2144>
   13054:	ldr	r3, [r5, #28]
   13058:	cmp	r3, #0
   1305c:	beq	133b0 <__errno_location@plt+0x214c>
   13060:	ldr	r3, [r5, #32]
   13064:	cmp	r3, #0
   13068:	movne	r3, #4
   1306c:	moveq	r3, #3
   13070:	str	r3, [r5, #36]	; 0x24
   13074:	b	12fc4 <__errno_location@plt+0x1d60>
   13078:	mov	fp, r0
   1307c:	ldr	r0, [r5, #12]
   13080:	cmp	r0, #0
   13084:	beq	1308c <__errno_location@plt+0x1e28>
   13088:	bl	1109c <free@plt>
   1308c:	mov	r0, r5
   13090:	bl	1109c <free@plt>
   13094:	cmp	fp, #0
   13098:	beq	13918 <__errno_location@plt+0x26b4>
   1309c:	bl	11264 <__errno_location@plt>
   130a0:	ldr	r0, [r0]
   130a4:	bl	10fa0 <rb_ignore_errno@plt>
   130a8:	cmp	r0, #0
   130ac:	beq	13918 <__errno_location@plt+0x26b4>
   130b0:	ldr	r6, [r4, #24]
   130b4:	cmp	r6, #0
   130b8:	beq	1336c <__errno_location@plt+0x2108>
   130bc:	ldr	fp, [r6, #8]
   130c0:	ldr	r5, [r6]
   130c4:	ldr	r0, [r5, #12]
   130c8:	ldrb	r3, [r0]
   130cc:	sub	r3, r3, #65	; 0x41
   130d0:	cmp	r3, #25
   130d4:	ldrls	pc, [pc, r3, lsl #2]
   130d8:	b	13364 <__errno_location@plt+0x2100>
   130dc:	andeq	r3, r1, r4, lsr #6
   130e0:	andeq	r3, r1, r4, ror #6
   130e4:	andeq	r3, r1, r8, ror #5
   130e8:	andeq	r3, r1, r4, ror #6
   130ec:	andeq	r3, r1, r4, ror #6
   130f0:	andeq	r3, r1, ip, lsr #5
   130f4:	andeq	r3, r1, r4, ror #6
   130f8:	andeq	r3, r1, r4, ror #6
   130fc:	andeq	r3, r1, r4, ror #6
   13100:	andeq	r3, r1, r4, ror #6
   13104:	andeq	r3, r1, ip, lsl #4
   13108:	andeq	r3, r1, r4, ror #6
   1310c:	andeq	r3, r1, r4, ror #6
   13110:	andeq	r3, r1, r4, ror #6
   13114:	andeq	r3, r1, r4, ror #6
   13118:	andeq	r3, r1, r4, ror #6
   1311c:	andeq	r3, r1, r4, ror #6
   13120:	andeq	r3, r1, r4, ror #6
   13124:	muleq	r1, r8, r1
   13128:	andeq	r3, r1, r4, ror #6
   1312c:	andeq	r3, r1, r4, ror #6
   13130:	andeq	r3, r1, r4, ror #6
   13134:	andeq	r3, r1, r4, ror #6
   13138:	andeq	r3, r1, r4, ror #6
   1313c:	andeq	r3, r1, r4, ror #6
   13140:	andeq	r3, r1, r8, asr r1
   13144:	bl	11180 <rb_outofmemory@plt>
   13148:	ldr	r3, [r4, #24]
   1314c:	cmp	r3, #0
   13150:	streq	r5, [r4, #24]
   13154:	b	1302c <__errno_location@plt+0x1dc8>
   13158:	ldr	r3, [r5, #36]	; 0x24
   1315c:	cmp	r3, #2
   13160:	beq	133b8 <__errno_location@plt+0x2154>
   13164:	cmp	r3, #0
   13168:	ble	13364 <__errno_location@plt+0x2100>
   1316c:	add	r8, r5, #20
   13170:	mov	r7, #0
   13174:	ldr	r0, [r8], #4
   13178:	bl	110fc <rb_close@plt>
   1317c:	ldr	r3, [r5, #36]	; 0x24
   13180:	add	r7, r7, #1
   13184:	cmp	r7, r3
   13188:	blt	13174 <__errno_location@plt+0x1f10>
   1318c:	ldr	r3, [r6, #8]
   13190:	ldr	r0, [r5, #12]
   13194:	b	131ac <__errno_location@plt+0x1f48>
   13198:	mov	r1, r0
   1319c:	mov	r0, r4
   131a0:	bl	11b24 <__errno_location@plt+0x8c0>
   131a4:	ldr	r3, [r6, #8]
   131a8:	ldr	r0, [r5, #12]
   131ac:	ldr	r2, [r6, #4]
   131b0:	cmp	r3, #0
   131b4:	strne	r2, [r3, #4]
   131b8:	ldrne	r2, [r6, #4]
   131bc:	streq	r2, [r4, #28]
   131c0:	cmp	r2, #0
   131c4:	strne	r3, [r2, #8]
   131c8:	streq	r3, [r4, #24]
   131cc:	ldr	r3, [r4, #32]
   131d0:	mov	r2, #0
   131d4:	sub	r3, r3, #1
   131d8:	cmp	r0, #0
   131dc:	str	r2, [r6, #4]
   131e0:	str	r2, [r6, #8]
   131e4:	str	r3, [r4, #32]
   131e8:	beq	131f0 <__errno_location@plt+0x1f8c>
   131ec:	bl	1109c <free@plt>
   131f0:	mov	r0, r5
   131f4:	bl	1109c <free@plt>
   131f8:	cmp	fp, #0
   131fc:	beq	1336c <__errno_location@plt+0x2108>
   13200:	mov	r6, fp
   13204:	ldr	fp, [fp, #8]
   13208:	b	130c0 <__errno_location@plt+0x1e5c>
   1320c:	ldr	r3, [pc, #1804]	; 13920 <__errno_location@plt+0x26bc>
   13210:	ldrb	r3, [r3, #-532]	; 0xfffffdec
   13214:	cmp	r3, #0
   13218:	beq	13388 <__errno_location@plt+0x2124>
   1321c:	add	r8, r0, #2
   13220:	mov	r0, r8
   13224:	bl	110d8 <strlen@plt>
   13228:	add	sl, r0, #1
   1322c:	add	r9, r8, sl
   13230:	mov	r0, r9
   13234:	bl	110d8 <strlen@plt>
   13238:	add	r0, r0, #1
   1323c:	add	r7, r9, r0
   13240:	mov	r0, r7
   13244:	bl	110d8 <strlen@plt>
   13248:	ldrb	r1, [r8, sl]
   1324c:	ldrb	r2, [r7]
   13250:	cmp	r1, #0
   13254:	movne	r1, r9
   13258:	moveq	r1, r8
   1325c:	cmp	r2, #0
   13260:	movne	r2, r7
   13264:	moveq	r2, #0
   13268:	add	r0, r0, #1
   1326c:	add	r7, r7, r0
   13270:	mov	r0, r8
   13274:	ldrb	r3, [r7]
   13278:	cmp	r3, #0
   1327c:	movne	r3, r7
   13280:	moveq	r3, #0
   13284:	bl	1124c <rb_setup_ssl_server@plt>
   13288:	cmp	r0, #0
   1328c:	bne	1318c <__errno_location@plt+0x1f28>
   13290:	mov	r0, r4
   13294:	mov	r2, #1
   13298:	ldr	r1, [pc, #1668]	; 13924 <__errno_location@plt+0x26c0>
   1329c:	bl	119e4 <__errno_location@plt+0x780>
   132a0:	ldr	r3, [r6, #8]
   132a4:	ldr	r0, [r5, #12]
   132a8:	b	131ac <__errno_location@plt+0x1f48>
   132ac:	ldr	r3, [r5, #16]
   132b0:	cmp	r3, #5
   132b4:	beq	1380c <__errno_location@plt+0x25a8>
   132b8:	ldr	r3, [r5, #36]	; 0x24
   132bc:	cmp	r3, #0
   132c0:	ble	13364 <__errno_location@plt+0x2100>
   132c4:	add	r8, r5, #20
   132c8:	mov	r7, #0
   132cc:	ldr	r0, [r8], #4
   132d0:	bl	110fc <rb_close@plt>
   132d4:	ldr	r3, [r5, #36]	; 0x24
   132d8:	add	r7, r7, #1
   132dc:	cmp	r7, r3
   132e0:	blt	132cc <__errno_location@plt+0x2068>
   132e4:	b	1318c <__errno_location@plt+0x1f28>
   132e8:	ldr	r3, [r5, #16]
   132ec:	cmp	r3, #5
   132f0:	beq	136ec <__errno_location@plt+0x2488>
   132f4:	ldr	r3, [r5, #36]	; 0x24
   132f8:	cmp	r3, #0
   132fc:	ble	13364 <__errno_location@plt+0x2100>
   13300:	add	r8, r5, #20
   13304:	mov	r7, #0
   13308:	ldr	r0, [r8], #4
   1330c:	bl	110fc <rb_close@plt>
   13310:	ldr	r3, [r5, #36]	; 0x24
   13314:	add	r7, r7, #1
   13318:	cmp	r7, r3
   1331c:	blt	13308 <__errno_location@plt+0x20a4>
   13320:	b	1318c <__errno_location@plt+0x1f28>
   13324:	ldr	r3, [r5, #36]	; 0x24
   13328:	cmp	r3, #2
   1332c:	beq	135c0 <__errno_location@plt+0x235c>
   13330:	cmp	r3, #0
   13334:	ble	13364 <__errno_location@plt+0x2100>
   13338:	add	r8, r5, #20
   1333c:	mov	r7, #0
   13340:	ldr	r0, [r8], #4
   13344:	bl	110fc <rb_close@plt>
   13348:	ldr	r3, [r5, #36]	; 0x24
   1334c:	add	r7, r7, #1
   13350:	cmp	r7, r3
   13354:	blt	13340 <__errno_location@plt+0x20dc>
   13358:	ldr	r3, [r6, #8]
   1335c:	ldr	r0, [r5, #12]
   13360:	b	131ac <__errno_location@plt+0x1f48>
   13364:	mov	r3, fp
   13368:	b	131ac <__errno_location@plt+0x1f48>
   1336c:	mov	r3, r4
   13370:	ldr	r0, [r4, #16]
   13374:	ldr	r2, [pc, #1452]	; 13928 <__errno_location@plt+0x26c4>
   13378:	mov	r1, #1
   1337c:	add	sp, sp, #20
   13380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13384:	b	10fd0 <rb_setselect@plt>
   13388:	mov	r0, r4
   1338c:	mov	r1, r5
   13390:	bl	12524 <__errno_location@plt+0x12c0>
   13394:	ldr	r3, [r6, #8]
   13398:	ldr	r0, [r5, #12]
   1339c:	b	131ac <__errno_location@plt+0x1f48>
   133a0:	mov	r3, sl
   133a4:	b	13070 <__errno_location@plt+0x1e0c>
   133a8:	mov	r3, r6
   133ac:	b	13070 <__errno_location@plt+0x1e0c>
   133b0:	mov	r3, #2
   133b4:	b	13070 <__errno_location@plt+0x1e0c>
   133b8:	ldr	r3, [r5, #16]
   133bc:	cmp	r3, #5
   133c0:	bls	1316c <__errno_location@plt+0x1f08>
   133c4:	mov	r1, #80	; 0x50
   133c8:	mov	r0, #1
   133cc:	ldr	r9, [r5, #20]
   133d0:	ldr	r8, [r5, #24]
   133d4:	bl	1103c <calloc@plt>
   133d8:	subs	r7, r0, #0
   133dc:	beq	13144 <__errno_location@plt+0x1ee0>
   133e0:	str	r4, [r7, #12]
   133e4:	bl	111bc <rb_new_rawbuffer@plt>
   133e8:	str	r0, [r7, #16]
   133ec:	bl	111bc <rb_new_rawbuffer@plt>
   133f0:	mvn	r3, #0
   133f4:	str	r3, [r7, #24]
   133f8:	mov	r3, #0
   133fc:	str	r3, [r7, #76]	; 0x4c
   13400:	str	r9, [r7, #28]
   13404:	str	r8, [r7, #32]
   13408:	str	r0, [r7, #20]
   1340c:	mov	r0, r9
   13410:	bl	11048 <rb_set_nb@plt>
   13414:	mov	r0, r8
   13418:	bl	11048 <rb_set_nb@plt>
   1341c:	ldr	r0, [r7, #28]
   13420:	bl	10f70 <rb_get_type@plt>
   13424:	cmp	r0, #64	; 0x40
   13428:	beq	13870 <__errno_location@plt+0x260c>
   1342c:	ldr	r0, [r7, #32]
   13430:	bl	10f70 <rb_get_type@plt>
   13434:	cmp	r0, #64	; 0x40
   13438:	beq	13860 <__errno_location@plt+0x25fc>
   1343c:	ldr	sl, [r5, #12]
   13440:	ldr	r3, [pc, #1252]	; 1392c <__errno_location@plt+0x26c8>
   13444:	mov	r2, #2000	; 0x7d0
   13448:	ldr	r1, [sl, #1]
   1344c:	mov	ip, #0
   13450:	str	r1, [r7, #24]
   13454:	umull	r0, r3, r3, r1
   13458:	ldr	r0, [pc, #1232]	; 13930 <__errno_location@plt+0x26cc>
   1345c:	str	r7, [r7]
   13460:	lsr	r3, r3, #7
   13464:	str	ip, [r7, #4]
   13468:	mul	r3, r2, r3
   1346c:	sub	r3, r1, r3
   13470:	lsl	r2, r3, #1
   13474:	add	r1, r2, r3
   13478:	add	r1, r0, r1, lsl #2
   1347c:	ldr	r0, [r1, #16]
   13480:	cmp	r0, ip
   13484:	str	r0, [r7, #8]
   13488:	strne	r7, [r0, #4]
   1348c:	beq	13850 <__errno_location@plt+0x25ec>
   13490:	add	r3, r2, r3
   13494:	ldr	r1, [pc, #1172]	; 13930 <__errno_location@plt+0x26cc>
   13498:	ldrb	r2, [r7, #72]	; 0x48
   1349c:	add	r3, r1, r3, lsl #2
   134a0:	ldr	r9, [r5, #16]
   134a4:	ldr	r1, [r3, #24]
   134a8:	str	r7, [r3, #16]
   134ac:	add	r1, r1, #1
   134b0:	str	r1, [r3, #24]
   134b4:	ldrb	r3, [sl, #5]
   134b8:	orr	r2, r2, #2
   134bc:	mov	r1, #112	; 0x70
   134c0:	strb	r2, [r7, #72]	; 0x48
   134c4:	mov	r0, #1
   134c8:	str	r3, [sp, #8]
   134cc:	bl	1103c <calloc@plt>
   134d0:	sub	r9, r9, #6
   134d4:	subs	r8, r0, #0
   134d8:	beq	13144 <__errno_location@plt+0x1ee0>
   134dc:	ldr	r2, [pc, #1104]	; 13934 <__errno_location@plt+0x26d0>
   134e0:	mov	r3, #0
   134e4:	str	r2, [r8, #32]
   134e8:	ldr	r2, [pc, #1096]	; 13938 <__errno_location@plt+0x26d4>
   134ec:	str	r3, [r8, #8]
   134f0:	str	r2, [r8, #36]	; 0x24
   134f4:	mov	r2, #1
   134f8:	str	r3, [r8, #20]
   134fc:	str	r2, [r8, #44]	; 0x2c
   13500:	ldr	r1, [pc, #1076]	; 1393c <__errno_location@plt+0x26d8>
   13504:	mov	r2, #56	; 0x38
   13508:	str	r8, [r7, #76]	; 0x4c
   1350c:	str	r3, [sp, #12]
   13510:	bl	111d4 <inflateInit_@plt>
   13514:	ldr	r3, [sp, #12]
   13518:	mov	r2, #1
   1351c:	str	r3, [r8, #64]	; 0x40
   13520:	str	r3, [r8, #76]	; 0x4c
   13524:	str	r2, [r8, #100]	; 0x64
   13528:	ldr	r3, [sp, #8]
   1352c:	ldr	r2, [pc, #1024]	; 13934 <__errno_location@plt+0x26d0>
   13530:	cmp	r3, #9
   13534:	ldr	r0, [r7, #76]	; 0x4c
   13538:	str	r2, [r8, #88]	; 0x58
   1353c:	ldr	r2, [pc, #1012]	; 13938 <__errno_location@plt+0x26d4>
   13540:	movhi	r3, #255	; 0xff
   13544:	str	r2, [r8, #92]	; 0x5c
   13548:	mov	r1, r3
   1354c:	add	r0, r0, #56	; 0x38
   13550:	mov	r3, #56	; 0x38
   13554:	ldr	r2, [pc, #992]	; 1393c <__errno_location@plt+0x26d8>
   13558:	bl	11030 <deflateInit_@plt>
   1355c:	cmp	r9, #0
   13560:	beq	13574 <__errno_location@plt+0x2310>
   13564:	mov	r2, r9
   13568:	add	r1, sl, #6
   1356c:	mov	r0, r7
   13570:	bl	121cc <__errno_location@plt+0xf68>
   13574:	ldrb	r3, [r7, #72]	; 0x48
   13578:	tst	r3, #8
   1357c:	bne	1318c <__errno_location@plt+0x1f28>
   13580:	tst	r3, #32
   13584:	bne	138b8 <__errno_location@plt+0x2654>
   13588:	mov	r0, r7
   1358c:	bl	122e8 <__errno_location@plt+0x1084>
   13590:	ldrb	r3, [r7, #72]	; 0x48
   13594:	ands	r8, r3, #8
   13598:	bne	1318c <__errno_location@plt+0x1f28>
   1359c:	ldr	r0, [r7, #16]
   135a0:	bl	11138 <rb_rawbuf_length@plt>
   135a4:	cmp	r0, #4096	; 0x1000
   135a8:	bge	13880 <__errno_location@plt+0x261c>
   135ac:	mov	r0, r7
   135b0:	bl	128ac <__errno_location@plt+0x1648>
   135b4:	ldr	r3, [r6, #8]
   135b8:	ldr	r0, [r5, #12]
   135bc:	b	131ac <__errno_location@plt+0x1f48>
   135c0:	ldr	r3, [r5, #16]
   135c4:	cmp	r3, #5
   135c8:	bne	13338 <__errno_location@plt+0x20d4>
   135cc:	ldr	r3, [pc, #844]	; 13920 <__errno_location@plt+0x26bc>
   135d0:	ldrb	r3, [r3, #-532]	; 0xfffffdec
   135d4:	cmp	r3, #0
   135d8:	beq	13388 <__errno_location@plt+0x2124>
   135dc:	mov	r1, #80	; 0x50
   135e0:	mov	r0, #1
   135e4:	ldr	sl, [r5, #20]
   135e8:	ldr	r9, [r5, #24]
   135ec:	bl	1103c <calloc@plt>
   135f0:	subs	r7, r0, #0
   135f4:	beq	13144 <__errno_location@plt+0x1ee0>
   135f8:	str	r4, [r7, #12]
   135fc:	bl	111bc <rb_new_rawbuffer@plt>
   13600:	mov	r8, #0
   13604:	str	r0, [r7, #16]
   13608:	bl	111bc <rb_new_rawbuffer@plt>
   1360c:	mvn	r3, #0
   13610:	str	r3, [r7, #24]
   13614:	str	sl, [r7, #28]
   13618:	str	r9, [r7, #32]
   1361c:	str	r8, [r7, #76]	; 0x4c
   13620:	str	r0, [r7, #20]
   13624:	mov	r0, sl
   13628:	bl	11048 <rb_set_nb@plt>
   1362c:	mov	r0, r9
   13630:	bl	11048 <rb_set_nb@plt>
   13634:	ldr	r2, [r5, #12]
   13638:	mov	r3, #2000	; 0x7d0
   1363c:	ldr	r1, [r2, #1]
   13640:	ldr	r2, [pc, #740]	; 1392c <__errno_location@plt+0x26c8>
   13644:	str	r1, [r7, #24]
   13648:	str	r8, [r7, #4]
   1364c:	umull	r0, r2, r2, r1
   13650:	ldr	r0, [pc, #728]	; 13930 <__errno_location@plt+0x26cc>
   13654:	str	r7, [r7]
   13658:	lsr	r2, r2, #7
   1365c:	mul	r3, r3, r2
   13660:	sub	r2, r1, r3
   13664:	lsl	r3, r2, #1
   13668:	add	r1, r3, r2
   1366c:	add	r1, r0, r1, lsl #2
   13670:	ldr	r0, [r1, #16]
   13674:	cmp	r0, r8
   13678:	str	r0, [r7, #8]
   1367c:	strne	r7, [r0, #4]
   13680:	beq	138ec <__errno_location@plt+0x2688>
   13684:	add	r3, r3, r2
   13688:	ldr	r2, [pc, #672]	; 13930 <__errno_location@plt+0x26cc>
   1368c:	ldrb	r1, [r7, #72]	; 0x48
   13690:	add	r3, r2, r3, lsl #2
   13694:	ldr	r0, [r7, #28]
   13698:	ldr	r2, [r3, #24]
   1369c:	orr	r1, r1, #1
   136a0:	add	r2, r2, #1
   136a4:	strb	r1, [r7, #72]	; 0x48
   136a8:	str	r7, [r3, #16]
   136ac:	str	r2, [r3, #24]
   136b0:	bl	10f70 <rb_get_type@plt>
   136b4:	tst	r0, #64	; 0x40
   136b8:	bne	138dc <__errno_location@plt+0x2678>
   136bc:	ldr	r0, [r7, #32]
   136c0:	bl	10f70 <rb_get_type@plt>
   136c4:	cmp	r0, #64	; 0x40
   136c8:	beq	13908 <__errno_location@plt+0x26a4>
   136cc:	mov	r3, #10
   136d0:	ldr	r0, [r5, #20]
   136d4:	mov	r2, r7
   136d8:	ldr	r1, [pc, #608]	; 13940 <__errno_location@plt+0x26dc>
   136dc:	bl	111ec <rb_ssl_start_accepted@plt>
   136e0:	ldr	r3, [r6, #8]
   136e4:	ldr	r0, [r5, #12]
   136e8:	b	131ac <__errno_location@plt+0x1f48>
   136ec:	ldr	r3, [pc, #556]	; 13920 <__errno_location@plt+0x26bc>
   136f0:	ldrb	r3, [r3, #-532]	; 0xfffffdec
   136f4:	cmp	r3, #0
   136f8:	beq	13388 <__errno_location@plt+0x2124>
   136fc:	mov	r1, #80	; 0x50
   13700:	mov	r0, #1
   13704:	ldr	sl, [r5, #20]
   13708:	ldr	r9, [r5, #24]
   1370c:	bl	1103c <calloc@plt>
   13710:	subs	r7, r0, #0
   13714:	beq	13144 <__errno_location@plt+0x1ee0>
   13718:	str	r4, [r7, #12]
   1371c:	bl	111bc <rb_new_rawbuffer@plt>
   13720:	mov	r8, #0
   13724:	str	r0, [r7, #16]
   13728:	bl	111bc <rb_new_rawbuffer@plt>
   1372c:	mvn	r3, #0
   13730:	str	r3, [r7, #24]
   13734:	str	sl, [r7, #28]
   13738:	str	r9, [r7, #32]
   1373c:	str	r8, [r7, #76]	; 0x4c
   13740:	str	r0, [r7, #20]
   13744:	mov	r0, sl
   13748:	bl	11048 <rb_set_nb@plt>
   1374c:	mov	r0, r9
   13750:	bl	11048 <rb_set_nb@plt>
   13754:	ldr	r3, [r5, #12]
   13758:	mov	r1, #2000	; 0x7d0
   1375c:	ldr	r2, [r3, #1]
   13760:	ldr	r3, [pc, #452]	; 1392c <__errno_location@plt+0x26c8>
   13764:	str	r2, [r7, #24]
   13768:	str	r8, [r7, #4]
   1376c:	umull	r0, r3, r3, r2
   13770:	ldr	r0, [pc, #440]	; 13930 <__errno_location@plt+0x26cc>
   13774:	str	r7, [r7]
   13778:	lsr	r3, r3, #7
   1377c:	mul	r3, r1, r3
   13780:	sub	r3, r2, r3
   13784:	lsl	r2, r3, #1
   13788:	add	r1, r2, r3
   1378c:	add	r1, r0, r1, lsl #2
   13790:	ldr	r0, [r1, #16]
   13794:	cmp	r0, r8
   13798:	str	r0, [r7, #8]
   1379c:	strne	r7, [r0, #4]
   137a0:	beq	13830 <__errno_location@plt+0x25cc>
   137a4:	add	r3, r2, r3
   137a8:	ldr	r2, [pc, #384]	; 13930 <__errno_location@plt+0x26cc>
   137ac:	ldrb	r1, [r7, #72]	; 0x48
   137b0:	add	r3, r2, r3, lsl #2
   137b4:	ldr	r0, [r7, #28]
   137b8:	ldr	r2, [r3, #24]
   137bc:	orr	r1, r1, #1
   137c0:	add	r2, r2, #1
   137c4:	strb	r1, [r7, #72]	; 0x48
   137c8:	str	r7, [r3, #16]
   137cc:	str	r2, [r3, #24]
   137d0:	bl	10f70 <rb_get_type@plt>
   137d4:	cmp	r0, #64	; 0x40
   137d8:	beq	13840 <__errno_location@plt+0x25dc>
   137dc:	ldr	r0, [r7, #32]
   137e0:	bl	10f70 <rb_get_type@plt>
   137e4:	cmp	r0, #64	; 0x40
   137e8:	beq	13820 <__errno_location@plt+0x25bc>
   137ec:	mov	r3, #10
   137f0:	ldr	r0, [r5, #20]
   137f4:	mov	r2, r7
   137f8:	ldr	r1, [pc, #324]	; 13944 <__errno_location@plt+0x26e0>
   137fc:	bl	111a4 <rb_ssl_start_connected@plt>
   13800:	ldr	r3, [r6, #8]
   13804:	ldr	r0, [r5, #12]
   13808:	b	131ac <__errno_location@plt+0x1f48>
   1380c:	ldr	r1, [pc, #268]	; 13920 <__errno_location@plt+0x26bc>
   13810:	ldr	r2, [r0, #1]
   13814:	mov	r3, fp
   13818:	str	r2, [r1, #-536]	; 0xfffffde8
   1381c:	b	131ac <__errno_location@plt+0x1f48>
   13820:	mov	r1, #4
   13824:	ldr	r0, [r7, #32]
   13828:	bl	110cc <rb_set_type@plt>
   1382c:	b	137ec <__errno_location@plt+0x2588>
   13830:	ldr	r0, [r1, #20]
   13834:	cmp	r0, #0
   13838:	streq	r7, [r1, #20]
   1383c:	b	137a4 <__errno_location@plt+0x2540>
   13840:	mov	r1, #4
   13844:	ldr	r0, [r7, #28]
   13848:	bl	110cc <rb_set_type@plt>
   1384c:	b	137dc <__errno_location@plt+0x2578>
   13850:	ldr	r0, [r1, #20]
   13854:	cmp	r0, #0
   13858:	streq	r7, [r1, #20]
   1385c:	b	13490 <__errno_location@plt+0x222c>
   13860:	mov	r1, #4
   13864:	ldr	r0, [r7, #32]
   13868:	bl	110cc <rb_set_type@plt>
   1386c:	b	1343c <__errno_location@plt+0x21d8>
   13870:	mov	r1, #4
   13874:	ldr	r0, [r7, #28]
   13878:	bl	110cc <rb_set_type@plt>
   1387c:	b	1342c <__errno_location@plt+0x21c8>
   13880:	ldrb	r1, [r7, #72]	; 0x48
   13884:	mov	r3, r8
   13888:	mov	r2, r8
   1388c:	orr	r1, r1, #4
   13890:	strb	r1, [r7, #72]	; 0x48
   13894:	ldr	r0, [r7, #32]
   13898:	mov	r1, #1
   1389c:	bl	10fd0 <rb_setselect@plt>
   138a0:	ldr	r0, [r7, #28]
   138a4:	mov	r1, r7
   138a8:	bl	12638 <__errno_location@plt+0x13d4>
   138ac:	ldr	r3, [r6, #8]
   138b0:	ldr	r0, [r5, #12]
   138b4:	b	131ac <__errno_location@plt+0x1f48>
   138b8:	bic	r3, r3, #32
   138bc:	strb	r3, [r7, #72]	; 0x48
   138c0:	ldr	r0, [r7, #28]
   138c4:	mov	r1, r7
   138c8:	bl	12638 <__errno_location@plt+0x13d4>
   138cc:	ldrb	r3, [r7, #72]	; 0x48
   138d0:	tst	r3, #8
   138d4:	beq	13588 <__errno_location@plt+0x2324>
   138d8:	b	1318c <__errno_location@plt+0x1f28>
   138dc:	mov	r1, #4
   138e0:	ldr	r0, [r7, #28]
   138e4:	bl	110cc <rb_set_type@plt>
   138e8:	b	136bc <__errno_location@plt+0x2458>
   138ec:	ldr	r1, [r1, #20]
   138f0:	cmp	r1, #0
   138f4:	moveq	r1, #12
   138f8:	ldreq	r0, [pc, #48]	; 13930 <__errno_location@plt+0x26cc>
   138fc:	mlaeq	r1, r1, r2, r0
   13900:	streq	r7, [r1, #20]
   13904:	b	13684 <__errno_location@plt+0x2420>
   13908:	mov	r1, #4
   1390c:	ldr	r0, [r7, #32]
   13910:	bl	110cc <rb_set_type@plt>
   13914:	b	136cc <__errno_location@plt+0x2468>
   13918:	mov	r0, #0
   1391c:	bl	11258 <exit@plt>
   13920:	andeq	sl, r2, r8, lsl r1
   13924:	andeq	r3, r1, ip, lsl #23
   13928:	andeq	r2, r1, r4, lsr #31
   1392c:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   13930:	andeq	r4, r2, r0, lsr r1
   13934:	andeq	r1, r1, ip, lsl #17
   13938:	andeq	r1, r1, r8, ror #15
   1393c:	muleq	r1, r0, fp
   13940:	ldrdeq	r2, [r1], -r8
   13944:	andeq	r2, r1, r4, lsl lr
   13948:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1394c:	mov	r7, r0
   13950:	ldr	r6, [pc, #72]	; 139a0 <__errno_location@plt+0x273c>
   13954:	ldr	r5, [pc, #72]	; 139a4 <__errno_location@plt+0x2740>
   13958:	add	r6, pc, r6
   1395c:	add	r5, pc, r5
   13960:	sub	r6, r6, r5
   13964:	mov	r8, r1
   13968:	mov	r9, r2
   1396c:	bl	10f2c <open@plt-0x20>
   13970:	asrs	r6, r6, #2
   13974:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13978:	mov	r4, #0
   1397c:	add	r4, r4, #1
   13980:	ldr	r3, [r5], #4
   13984:	mov	r2, r9
   13988:	mov	r1, r8
   1398c:	mov	r0, r7
   13990:	blx	r3
   13994:	cmp	r6, r4
   13998:	bne	1397c <__errno_location@plt+0x2718>
   1399c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139a0:	muleq	r1, r0, r5
   139a4:	andeq	r0, r1, r8, lsl #11
   139a8:	bx	lr

Disassembly of section .fini:

000139ac <.fini>:
   139ac:	push	{r3, lr}
   139b0:	pop	{r3, pc}
