
../repos/inetutils/src/tftp:     file format elf32-littlearm


Disassembly of section .init:

000111b8 <.init>:
   111b8:	push	{r3, lr}
   111bc:	bl	11884 <__assert_fail@plt+0x31c>
   111c0:	pop	{r3, pc}

Disassembly of section .plt:

000111c4 <fdopen@plt-0x14>:
   111c4:	push	{lr}		; (str lr, [sp, #-4]!)
   111c8:	ldr	lr, [pc, #4]	; 111d4 <fdopen@plt-0x4>
   111cc:	add	lr, pc, lr
   111d0:	ldr	pc, [lr, #8]!
   111d4:	andeq	sp, r1, ip, lsr #28

000111d8 <fdopen@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #118784	; 0x1d000
   111e0:	ldr	pc, [ip, #3628]!	; 0xe2c

000111e4 <calloc@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #118784	; 0x1d000
   111ec:	ldr	pc, [ip, #3620]!	; 0xe24

000111f0 <fputs_unlocked@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #118784	; 0x1d000
   111f8:	ldr	pc, [ip, #3612]!	; 0xe1c

000111fc <raise@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #118784	; 0x1d000
   11204:	ldr	pc, [ip, #3604]!	; 0xe14

00011208 <strcmp@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #118784	; 0x1d000
   11210:	ldr	pc, [ip, #3596]!	; 0xe0c

00011214 <strtol@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #118784	; 0x1d000
   1121c:	ldr	pc, [ip, #3588]!	; 0xe04

00011220 <printf@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #118784	; 0x1d000
   11228:	ldr	pc, [ip, #3580]!	; 0xdfc

0001122c <read@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #118784	; 0x1d000
   11234:	ldr	pc, [ip, #3572]!	; 0xdf4

00011238 <longjmp@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #118784	; 0x1d000
   11240:	ldr	pc, [ip, #3564]!	; 0xdec

00011244 <_setjmp@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #118784	; 0x1d000
   1124c:	ldr	pc, [ip, #3556]!	; 0xde4

00011250 <memmove@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #118784	; 0x1d000
   11258:	ldr	pc, [ip, #3548]!	; 0xddc

0001125c <strchrnul@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #118784	; 0x1d000
   11264:	ldr	pc, [ip, #3540]!	; 0xdd4

00011268 <free@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #118784	; 0x1d000
   11270:	ldr	pc, [ip, #3532]!	; 0xdcc

00011274 <gai_strerror@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #118784	; 0x1d000
   1127c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011280 <fgets@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #118784	; 0x1d000
   11288:	ldr	pc, [ip, #3516]!	; 0xdbc

0001128c <strndup@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #118784	; 0x1d000
   11294:	ldr	pc, [ip, #3508]!	; 0xdb4

00011298 <memcpy@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #118784	; 0x1d000
   112a0:	ldr	pc, [ip, #3500]!	; 0xdac

000112a4 <signal@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #118784	; 0x1d000
   112ac:	ldr	pc, [ip, #3492]!	; 0xda4

000112b0 <fwrite_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #118784	; 0x1d000
   112b8:	ldr	pc, [ip, #3484]!	; 0xd9c

000112bc <sleep@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #118784	; 0x1d000
   112c4:	ldr	pc, [ip, #3476]!	; 0xd94

000112c8 <recvfrom@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #118784	; 0x1d000
   112d0:	ldr	pc, [ip, #3468]!	; 0xd8c

000112d4 <alarm@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #118784	; 0x1d000
   112dc:	ldr	pc, [ip, #3460]!	; 0xd84

000112e0 <realloc@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #118784	; 0x1d000
   112e8:	ldr	pc, [ip, #3452]!	; 0xd7c

000112ec <strcasecmp@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #118784	; 0x1d000
   112f4:	ldr	pc, [ip, #3444]!	; 0xd74

000112f8 <funlockfile@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #118784	; 0x1d000
   11300:	ldr	pc, [ip, #3436]!	; 0xd6c

00011304 <perror@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #118784	; 0x1d000
   1130c:	ldr	pc, [ip, #3428]!	; 0xd64

00011310 <fwrite@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #118784	; 0x1d000
   11318:	ldr	pc, [ip, #3420]!	; 0xd5c

0001131c <ioctl@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #118784	; 0x1d000
   11324:	ldr	pc, [ip, #3412]!	; 0xd54

00011328 <strcpy@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #118784	; 0x1d000
   11330:	ldr	pc, [ip, #3404]!	; 0xd4c

00011334 <gettimeofday@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #118784	; 0x1d000
   1133c:	ldr	pc, [ip, #3396]!	; 0xd44

00011340 <creat64@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #118784	; 0x1d000
   11348:	ldr	pc, [ip, #3388]!	; 0xd3c

0001134c <error@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #118784	; 0x1d000
   11354:	ldr	pc, [ip, #3380]!	; 0xd34

00011358 <open64@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #118784	; 0x1d000
   11360:	ldr	pc, [ip, #3372]!	; 0xd2c

00011364 <getenv@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #118784	; 0x1d000
   1136c:	ldr	pc, [ip, #3364]!	; 0xd24

00011370 <puts@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #118784	; 0x1d000
   11378:	ldr	pc, [ip, #3356]!	; 0xd1c

0001137c <malloc@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #118784	; 0x1d000
   11384:	ldr	pc, [ip, #3348]!	; 0xd14

00011388 <__libc_start_main@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #118784	; 0x1d000
   11390:	ldr	pc, [ip, #3340]!	; 0xd0c

00011394 <strerror@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #118784	; 0x1d000
   1139c:	ldr	pc, [ip, #3332]!	; 0xd04

000113a0 <__ctype_tolower_loc@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #118784	; 0x1d000
   113a8:	ldr	pc, [ip, #3324]!	; 0xcfc

000113ac <__gmon_start__@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #118784	; 0x1d000
   113b4:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b8 <mempcpy@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #118784	; 0x1d000
   113c0:	ldr	pc, [ip, #3308]!	; 0xcec

000113c4 <__ctype_b_loc@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #118784	; 0x1d000
   113cc:	ldr	pc, [ip, #3300]!	; 0xce4

000113d0 <exit@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #118784	; 0x1d000
   113d8:	ldr	pc, [ip, #3292]!	; 0xcdc

000113dc <feof@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #118784	; 0x1d000
   113e4:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e8 <strlen@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #118784	; 0x1d000
   113f0:	ldr	pc, [ip, #3276]!	; 0xccc

000113f4 <strchr@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #118784	; 0x1d000
   113fc:	ldr	pc, [ip, #3268]!	; 0xcc4

00011400 <fprintf@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #118784	; 0x1d000
   11408:	ldr	pc, [ip, #3260]!	; 0xcbc

0001140c <__errno_location@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #118784	; 0x1d000
   11414:	ldr	pc, [ip, #3252]!	; 0xcb4

00011418 <getservbyname@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #118784	; 0x1d000
   11420:	ldr	pc, [ip, #3244]!	; 0xcac

00011424 <strerror_r@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #118784	; 0x1d000
   1142c:	ldr	pc, [ip, #3236]!	; 0xca4

00011430 <bind@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #118784	; 0x1d000
   11438:	ldr	pc, [ip, #3228]!	; 0xc9c

0001143c <memset@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #118784	; 0x1d000
   11444:	ldr	pc, [ip, #3220]!	; 0xc94

00011448 <strncpy@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #118784	; 0x1d000
   11450:	ldr	pc, [ip, #3212]!	; 0xc8c

00011454 <write@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #118784	; 0x1d000
   1145c:	ldr	pc, [ip, #3204]!	; 0xc84

00011460 <fileno@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #118784	; 0x1d000
   11468:	ldr	pc, [ip, #3196]!	; 0xc7c

0001146c <memchr@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #118784	; 0x1d000
   11474:	ldr	pc, [ip, #3188]!	; 0xc74

00011478 <fclose@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #118784	; 0x1d000
   11480:	ldr	pc, [ip, #3180]!	; 0xc6c

00011484 <fseeko64@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #118784	; 0x1d000
   1148c:	ldr	pc, [ip, #3172]!	; 0xc64

00011490 <sendto@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #118784	; 0x1d000
   11498:	ldr	pc, [ip, #3164]!	; 0xc5c

0001149c <__overflow@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #118784	; 0x1d000
   114a4:	ldr	pc, [ip, #3156]!	; 0xc54

000114a8 <setlocale@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #118784	; 0x1d000
   114b0:	ldr	pc, [ip, #3148]!	; 0xc4c

000114b4 <strrchr@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #118784	; 0x1d000
   114bc:	ldr	pc, [ip, #3140]!	; 0xc44

000114c0 <vfprintf@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #118784	; 0x1d000
   114c8:	ldr	pc, [ip, #3132]!	; 0xc3c

000114cc <fputc@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #118784	; 0x1d000
   114d4:	ldr	pc, [ip, #3124]!	; 0xc34

000114d8 <putc@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #118784	; 0x1d000
   114e0:	ldr	pc, [ip, #3116]!	; 0xc2c

000114e4 <flockfile@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #118784	; 0x1d000
   114ec:	ldr	pc, [ip, #3108]!	; 0xc24

000114f0 <vsnprintf@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #118784	; 0x1d000
   114f8:	ldr	pc, [ip, #3100]!	; 0xc1c

000114fc <qsort@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #118784	; 0x1d000
   11504:	ldr	pc, [ip, #3092]!	; 0xc14

00011508 <freeaddrinfo@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #118784	; 0x1d000
   11510:	ldr	pc, [ip, #3084]!	; 0xc0c

00011514 <getaddrinfo@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #118784	; 0x1d000
   1151c:	ldr	pc, [ip, #3076]!	; 0xc04

00011520 <socket@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #118784	; 0x1d000
   11528:	ldr	pc, [ip, #3068]!	; 0xbfc

0001152c <isatty@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #118784	; 0x1d000
   11534:	ldr	pc, [ip, #3060]!	; 0xbf4

00011538 <strncmp@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #118784	; 0x1d000
   11540:	ldr	pc, [ip, #3052]!	; 0xbec

00011544 <abort@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #118784	; 0x1d000
   1154c:	ldr	pc, [ip, #3044]!	; 0xbe4

00011550 <getc@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #118784	; 0x1d000
   11558:	ldr	pc, [ip, #3036]!	; 0xbdc

0001155c <close@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #118784	; 0x1d000
   11564:	ldr	pc, [ip, #3028]!	; 0xbd4

00011568 <__assert_fail@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #118784	; 0x1d000
   11570:	ldr	pc, [ip, #3020]!	; 0xbcc

Disassembly of section .text:

00011578 <argp_failure@@Base-0x53a4>:
   11578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1157c:	mov	r6, r0
   11580:	sub	sp, sp, #12
   11584:	ldr	r0, [r1]
   11588:	mov	r5, r1
   1158c:	bl	19f20 <argp_parse@@Base+0x10b4>
   11590:	ldr	r1, [pc, #604]	; 117f4 <__assert_fail@plt+0x28c>
   11594:	mov	r0, #6
   11598:	bl	114a8 <setlocale@plt>
   1159c:	ldr	r4, [pc, #596]	; 117f8 <__assert_fail@plt+0x290>
   115a0:	ldr	r3, [pc, #596]	; 117fc <__assert_fail@plt+0x294>
   115a4:	ldr	r2, [pc, #596]	; 11800 <__assert_fail@plt+0x298>
   115a8:	mov	r0, r4
   115ac:	ldr	r1, [pc, #592]	; 11804 <__assert_fail@plt+0x29c>
   115b0:	str	r2, [r3]
   115b4:	bl	19d14 <argp_parse@@Base+0xea8>
   115b8:	mov	r3, #0
   115bc:	str	r3, [sp, #4]
   115c0:	str	r3, [sp]
   115c4:	mov	r2, r5
   115c8:	mov	r1, r6
   115cc:	ldr	r0, [pc, #564]	; 11808 <__assert_fail@plt+0x2a0>
   115d0:	bl	18e6c <argp_parse@@Base>
   115d4:	mov	r0, r4
   115d8:	ldr	r1, [pc, #556]	; 1180c <__assert_fail@plt+0x2a4>
   115dc:	bl	11418 <getservbyname@plt>
   115e0:	cmp	r0, #0
   115e4:	moveq	r3, #69	; 0x45
   115e8:	ldrne	r3, [r0, #8]
   115ec:	rev16ne	r3, r3
   115f0:	uxthne	r3, r3
   115f4:	ldr	r4, [pc, #532]	; 11810 <__assert_fail@plt+0x2a8>
   115f8:	mov	r0, #0
   115fc:	str	r3, [r4, #144]	; 0x90
   11600:	bl	1152c <isatty@plt>
   11604:	ldr	r3, [pc, #520]	; 11814 <__assert_fail@plt+0x2ac>
   11608:	ldr	r2, [pc, #520]	; 11818 <__assert_fail@plt+0x2b0>
   1160c:	str	r0, [r4, #148]	; 0x94
   11610:	ldm	r3!, {r0, r1}
   11614:	ldrb	r3, [r3]
   11618:	str	r0, [r2]
   1161c:	str	r1, [r2, #4]
   11620:	strb	r3, [r2, #8]
   11624:	mov	r0, #2
   11628:	ldr	r1, [pc, #492]	; 1181c <__assert_fail@plt+0x2b4>
   1162c:	bl	112a4 <signal@plt>
   11630:	ldr	r3, [pc, #488]	; 11820 <__assert_fail@plt+0x2b8>
   11634:	ldr	r3, [r3, #84]	; 0x54
   11638:	cmp	r3, #1
   1163c:	ble	11668 <__assert_fail@plt+0x100>
   11640:	ldr	r0, [pc, #476]	; 11824 <__assert_fail@plt+0x2bc>
   11644:	bl	11244 <_setjmp@plt>
   11648:	cmp	r0, #0
   1164c:	beq	11658 <__assert_fail@plt+0xf0>
   11650:	mov	r0, #0
   11654:	bl	113d0 <exit@plt>
   11658:	ldr	r3, [pc, #448]	; 11820 <__assert_fail@plt+0x2b8>
   1165c:	add	r1, r3, #88	; 0x58
   11660:	ldr	r0, [r3, #84]	; 0x54
   11664:	bl	12550 <__assert_fail@plt+0xfe8>
   11668:	ldr	r0, [pc, #436]	; 11824 <__assert_fail@plt+0x2bc>
   1166c:	bl	11244 <_setjmp@plt>
   11670:	cmp	r0, #0
   11674:	beq	11688 <__assert_fail@plt+0x120>
   11678:	ldr	r3, [pc, #424]	; 11828 <__assert_fail@plt+0x2c0>
   1167c:	mov	r0, #10
   11680:	ldr	r1, [r3]
   11684:	bl	114d8 <putc@plt>
   11688:	ldr	r6, [pc, #384]	; 11810 <__assert_fail@plt+0x2a8>
   1168c:	ldr	r4, [pc, #408]	; 1182c <__assert_fail@plt+0x2c4>
   11690:	ldr	r5, [pc, #408]	; 11830 <__assert_fail@plt+0x2c8>
   11694:	ldr	r3, [r6, #148]	; 0x94
   11698:	cmp	r3, #0
   1169c:	bne	117a4 <__assert_fail@plt+0x23c>
   116a0:	ldr	r3, [pc, #396]	; 11834 <__assert_fail@plt+0x2cc>
   116a4:	mov	r1, #200	; 0xc8
   116a8:	mov	r0, r4
   116ac:	ldr	r2, [r3]
   116b0:	bl	11280 <fgets@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	117b8 <__assert_fail@plt+0x250>
   116bc:	ldrb	r3, [r4]
   116c0:	cmp	r3, #0
   116c4:	beq	11694 <__assert_fail@plt+0x12c>
   116c8:	mov	sl, #0
   116cc:	str	sl, [r5]
   116d0:	bl	113c4 <__ctype_b_loc@plt>
   116d4:	ldr	lr, [pc, #348]	; 11838 <__assert_fail@plt+0x2d0>
   116d8:	mov	ip, sl
   116dc:	mov	r8, sl
   116e0:	mov	r2, r4
   116e4:	mov	r7, #1
   116e8:	ldr	r9, [r0]
   116ec:	ldrb	r1, [r2]
   116f0:	mov	r3, r2
   116f4:	add	r2, r2, #1
   116f8:	lsl	fp, r1, #1
   116fc:	ldrh	fp, [r9, fp]
   11700:	tst	fp, #8192	; 0x2000
   11704:	bne	116ec <__assert_fail@plt+0x184>
   11708:	cmp	r1, #0
   1170c:	beq	117d0 <__assert_fail@plt+0x268>
   11710:	str	r3, [lr], #4
   11714:	add	ip, ip, #1
   11718:	b	11730 <__assert_fail@plt+0x1c8>
   1171c:	lsl	r2, r2, #1
   11720:	ldrh	r2, [r9, r2]
   11724:	tst	r2, #8192	; 0x2000
   11728:	bne	11788 <__assert_fail@plt+0x220>
   1172c:	mov	r3, r1
   11730:	ldrb	r2, [r3, #1]
   11734:	add	r1, r3, #1
   11738:	cmp	r2, #0
   1173c:	bne	1171c <__assert_fail@plt+0x1b4>
   11740:	str	ip, [r5]
   11744:	ldr	r7, [r5]
   11748:	mov	r3, #0
   1174c:	cmp	r7, r3
   11750:	str	r3, [lr]
   11754:	beq	11694 <__assert_fail@plt+0x12c>
   11758:	ldr	r8, [pc, #216]	; 11838 <__assert_fail@plt+0x2d0>
   1175c:	ldr	r0, [r8]
   11760:	bl	126d0 <__assert_fail@plt+0x1168>
   11764:	cmn	r0, #1
   11768:	beq	117e8 <__assert_fail@plt+0x280>
   1176c:	cmp	r0, #0
   11770:	beq	117dc <__assert_fail@plt+0x274>
   11774:	ldr	r3, [r0, #8]
   11778:	mov	r1, r8
   1177c:	mov	r0, r7
   11780:	blx	r3
   11784:	b	11694 <__assert_fail@plt+0x12c>
   11788:	ldrb	r9, [r1, #1]
   1178c:	add	r2, r3, #2
   11790:	strb	r8, [r1]
   11794:	cmp	r9, #0
   11798:	mov	sl, r7
   1179c:	bne	116e8 <__assert_fail@plt+0x180>
   117a0:	b	11740 <__assert_fail@plt+0x1d8>
   117a4:	ldr	r3, [pc, #116]	; 11820 <__assert_fail@plt+0x2b8>
   117a8:	ldr	r0, [pc, #140]	; 1183c <__assert_fail@plt+0x2d4>
   117ac:	ldr	r1, [r3, #344]	; 0x158
   117b0:	bl	11220 <printf@plt>
   117b4:	b	116a0 <__assert_fail@plt+0x138>
   117b8:	ldr	r3, [pc, #116]	; 11834 <__assert_fail@plt+0x2cc>
   117bc:	ldr	r0, [r3]
   117c0:	bl	113dc <feof@plt>
   117c4:	cmp	r0, #0
   117c8:	bne	11650 <__assert_fail@plt+0xe8>
   117cc:	b	11694 <__assert_fail@plt+0x12c>
   117d0:	cmp	sl, #0
   117d4:	beq	11744 <__assert_fail@plt+0x1dc>
   117d8:	b	11740 <__assert_fail@plt+0x1d8>
   117dc:	ldr	r0, [pc, #92]	; 11840 <__assert_fail@plt+0x2d8>
   117e0:	bl	11370 <puts@plt>
   117e4:	b	11694 <__assert_fail@plt+0x12c>
   117e8:	ldr	r0, [pc, #84]	; 11844 <__assert_fail@plt+0x2dc>
   117ec:	bl	11370 <puts@plt>
   117f0:	b	11694 <__assert_fail@plt+0x12c>
   117f4:	andeq	lr, r1, ip, asr fp
   117f8:	strdeq	sp, [r1], -r0
   117fc:			; <UNDEFINED> instruction: 0x0002ffbc
   11800:	andeq	sp, r1, r8, lsr sp
   11804:	andeq	pc, r2, r0, lsl #8
   11808:	andeq	pc, r2, r8, lsl #5
   1180c:	andeq	sp, r1, r8, lsl sp
   11810:	andeq	pc, r2, r4, ror #8
   11814:	strdeq	sp, [r1], -r8
   11818:	andeq	pc, r2, r4, asr #21
   1181c:	andeq	r1, r1, r4, lsr #26
   11820:	andeq	pc, r2, ip, asr #2
   11824:	andeq	pc, r2, r0, lsr #18
   11828:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   1182c:	andeq	pc, r2, r4, ror #21
   11830:			; <UNDEFINED> instruction: 0x0002fabc
   11834:	andeq	pc, r2, r8, asr r4	; <UNPREDICTABLE>
   11838:	ldrdeq	pc, [r2], -r0
   1183c:	andeq	sp, r1, r0, asr sp
   11840:	andeq	sp, r1, ip, ror #26
   11844:	andeq	sp, r1, r8, asr sp
   11848:	mov	fp, #0
   1184c:	mov	lr, #0
   11850:	pop	{r1}		; (ldr r1, [sp], #4)
   11854:	mov	r2, sp
   11858:	push	{r2}		; (str r2, [sp, #-4]!)
   1185c:	push	{r0}		; (str r0, [sp, #-4]!)
   11860:	ldr	ip, [pc, #16]	; 11878 <__assert_fail@plt+0x310>
   11864:	push	{ip}		; (str ip, [sp, #-4]!)
   11868:	ldr	r0, [pc, #12]	; 1187c <__assert_fail@plt+0x314>
   1186c:	ldr	r3, [pc, #12]	; 11880 <__assert_fail@plt+0x318>
   11870:	bl	11388 <__libc_start_main@plt>
   11874:	bl	11544 <abort@plt>
   11878:	andeq	sp, r1, r4, ror #19
   1187c:	andeq	r1, r1, r8, ror r5
   11880:	andeq	sp, r1, r4, lsl #19
   11884:	ldr	r3, [pc, #20]	; 118a0 <__assert_fail@plt+0x338>
   11888:	ldr	r2, [pc, #20]	; 118a4 <__assert_fail@plt+0x33c>
   1188c:	add	r3, pc, r3
   11890:	ldr	r2, [r3, r2]
   11894:	cmp	r2, #0
   11898:	bxeq	lr
   1189c:	b	113ac <__gmon_start__@plt>
   118a0:	andeq	sp, r1, ip, ror #14
   118a4:	andeq	r0, r0, r0, asr #2
   118a8:	ldr	r3, [pc, #28]	; 118cc <__assert_fail@plt+0x364>
   118ac:	ldr	r0, [pc, #28]	; 118d0 <__assert_fail@plt+0x368>
   118b0:	sub	r3, r3, r0
   118b4:	cmp	r3, #6
   118b8:	bxls	lr
   118bc:	ldr	r3, [pc, #16]	; 118d4 <__assert_fail@plt+0x36c>
   118c0:	cmp	r3, #0
   118c4:	bxeq	lr
   118c8:	bx	r3
   118cc:	andeq	pc, r2, fp, asr #8
   118d0:	andeq	pc, r2, r8, asr #8
   118d4:	andeq	r0, r0, r0
   118d8:	ldr	r1, [pc, #36]	; 11904 <__assert_fail@plt+0x39c>
   118dc:	ldr	r0, [pc, #36]	; 11908 <__assert_fail@plt+0x3a0>
   118e0:	sub	r1, r1, r0
   118e4:	asr	r1, r1, #2
   118e8:	add	r1, r1, r1, lsr #31
   118ec:	asrs	r1, r1, #1
   118f0:	bxeq	lr
   118f4:	ldr	r3, [pc, #16]	; 1190c <__assert_fail@plt+0x3a4>
   118f8:	cmp	r3, #0
   118fc:	bxeq	lr
   11900:	bx	r3
   11904:	andeq	pc, r2, r8, asr #8
   11908:	andeq	pc, r2, r8, asr #8
   1190c:	andeq	r0, r0, r0
   11910:	push	{r4, lr}
   11914:	ldr	r4, [pc, #24]	; 11934 <__assert_fail@plt+0x3cc>
   11918:	ldrb	r3, [r4]
   1191c:	cmp	r3, #0
   11920:	popne	{r4, pc}
   11924:	bl	118a8 <__assert_fail@plt+0x340>
   11928:	mov	r3, #1
   1192c:	strb	r3, [r4]
   11930:	pop	{r4, pc}
   11934:	andeq	pc, r2, r0, ror #8
   11938:	ldr	r0, [pc, #40]	; 11968 <__assert_fail@plt+0x400>
   1193c:	ldr	r3, [r0]
   11940:	cmp	r3, #0
   11944:	bne	1194c <__assert_fail@plt+0x3e4>
   11948:	b	118d8 <__assert_fail@plt+0x370>
   1194c:	ldr	r3, [pc, #24]	; 1196c <__assert_fail@plt+0x404>
   11950:	cmp	r3, #0
   11954:	beq	11948 <__assert_fail@plt+0x3e0>
   11958:	push	{r4, lr}
   1195c:	blx	r3
   11960:	pop	{r4, lr}
   11964:	b	118d8 <__assert_fail@plt+0x370>
   11968:	andeq	lr, r2, ip, lsl #30
   1196c:	andeq	r0, r0, r0
   11970:	push	{r4, lr}
   11974:	mov	r0, #0
   11978:	bl	113d0 <exit@plt>
   1197c:	ldr	r3, [pc, #36]	; 119a8 <__assert_fail@plt+0x440>
   11980:	ldr	ip, [pc, #36]	; 119ac <__assert_fail@plt+0x444>
   11984:	ldr	r1, [pc, #36]	; 119b0 <__assert_fail@plt+0x448>
   11988:	ldr	r2, [r3]
   1198c:	ldr	r0, [pc, #32]	; 119b4 <__assert_fail@plt+0x44c>
   11990:	cmp	r2, #0
   11994:	moveq	r2, #1
   11998:	movne	r2, #0
   1199c:	moveq	r1, ip
   119a0:	str	r2, [r3]
   119a4:	b	11220 <printf@plt>
   119a8:	andeq	pc, r2, r4, ror #8
   119ac:	ldrdeq	sp, [r1], -r8
   119b0:	andeq	sp, r1, r4, asr #20
   119b4:	andeq	sp, r1, r8, asr #20
   119b8:	ldr	r3, [pc, #36]	; 119e4 <__assert_fail@plt+0x47c>
   119bc:	ldr	ip, [pc, #36]	; 119e8 <__assert_fail@plt+0x480>
   119c0:	ldr	r1, [pc, #36]	; 119ec <__assert_fail@plt+0x484>
   119c4:	ldr	r2, [r3, #4]
   119c8:	ldr	r0, [pc, #32]	; 119f0 <__assert_fail@plt+0x488>
   119cc:	cmp	r2, #0
   119d0:	moveq	r2, #1
   119d4:	movne	r2, #0
   119d8:	moveq	r1, ip
   119dc:	str	r2, [r3, #4]
   119e0:	b	11220 <printf@plt>
   119e4:	andeq	pc, r2, r4, ror #8
   119e8:	ldrdeq	sp, [r1], -r8
   119ec:	andeq	sp, r1, r4, asr #20
   119f0:	andeq	sp, r1, ip, asr sl
   119f4:	push	{r4, lr}
   119f8:	ldr	r4, [pc, #104]	; 11a68 <__assert_fail@plt+0x500>
   119fc:	ldr	r3, [r4, #8]
   11a00:	cmp	r3, #0
   11a04:	beq	11a5c <__assert_fail@plt+0x4f4>
   11a08:	ldr	r3, [pc, #92]	; 11a6c <__assert_fail@plt+0x504>
   11a0c:	ldr	r0, [pc, #92]	; 11a70 <__assert_fail@plt+0x508>
   11a10:	ldr	r1, [r3]
   11a14:	bl	11220 <printf@plt>
   11a18:	ldm	r4, {r3, ip}
   11a1c:	ldr	r2, [pc, #80]	; 11a74 <__assert_fail@plt+0x50c>
   11a20:	ldr	r0, [pc, #80]	; 11a78 <__assert_fail@plt+0x510>
   11a24:	cmp	r3, #0
   11a28:	movne	r3, r2
   11a2c:	moveq	r3, r0
   11a30:	cmp	ip, #0
   11a34:	moveq	r2, r0
   11a38:	ldr	r1, [pc, #60]	; 11a7c <__assert_fail@plt+0x514>
   11a3c:	ldr	r0, [pc, #60]	; 11a80 <__assert_fail@plt+0x518>
   11a40:	bl	11220 <printf@plt>
   11a44:	ldr	r3, [pc, #56]	; 11a84 <__assert_fail@plt+0x51c>
   11a48:	ldr	r0, [pc, #56]	; 11a88 <__assert_fail@plt+0x520>
   11a4c:	pop	{r4, lr}
   11a50:	ldr	r2, [r3]
   11a54:	ldr	r1, [r3, #4]
   11a58:	b	11220 <printf@plt>
   11a5c:	ldr	r0, [pc, #40]	; 11a8c <__assert_fail@plt+0x524>
   11a60:	bl	11370 <puts@plt>
   11a64:	b	11a18 <__assert_fail@plt+0x4b0>
   11a68:	andeq	pc, r2, r4, ror #8
   11a6c:	andeq	pc, r2, r0, asr #21
   11a70:	andeq	sp, r1, r0, ror sl
   11a74:	ldrdeq	sp, [r1], -r8
   11a78:	andeq	sp, r1, r4, asr #20
   11a7c:	andeq	pc, r2, r4, asr #21
   11a80:	muleq	r1, r4, sl
   11a84:	andeq	pc, r2, ip, asr #2
   11a88:			; <UNDEFINED> instruction: 0x0001dab8
   11a8c:	andeq	sp, r1, r4, lsl #21
   11a90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a94:	sub	sp, sp, #168	; 0xa8
   11a98:	mov	r4, r0
   11a9c:	mov	r2, #32
   11aa0:	mov	r1, #0
   11aa4:	add	r0, sp, #8
   11aa8:	bl	1143c <memset@plt>
   11aac:	mov	lr, #2
   11ab0:	mov	ip, #194	; 0xc2
   11ab4:	add	r2, sp, #8
   11ab8:	mov	r0, r4
   11abc:	add	r3, sp, #4
   11ac0:	ldr	r1, [pc, #320]	; 11c08 <__assert_fail@plt+0x6a0>
   11ac4:	str	lr, [sp, #16]
   11ac8:	str	ip, [sp, #8]
   11acc:	bl	11514 <getaddrinfo@plt>
   11ad0:	cmp	r0, #0
   11ad4:	bne	11be0 <__assert_fail@plt+0x678>
   11ad8:	ldr	r6, [pc, #300]	; 11c0c <__assert_fail@plt+0x6a4>
   11adc:	ldr	r0, [r6, #8]
   11ae0:	cmp	r0, #0
   11ae4:	blt	11af4 <__assert_fail@plt+0x58c>
   11ae8:	bl	1155c <close@plt>
   11aec:	mvn	r3, #0
   11af0:	str	r3, [r6, #8]
   11af4:	ldr	r4, [sp, #4]
   11af8:	cmp	r4, #0
   11afc:	beq	11b70 <__assert_fail@plt+0x608>
   11b00:	mov	r8, #128	; 0x80
   11b04:	mov	r7, #0
   11b08:	mvn	sl, #0
   11b0c:	ldmib	r4, {r0, r1, r2}
   11b10:	bl	11520 <socket@plt>
   11b14:	mov	r2, r8
   11b18:	mov	r1, r7
   11b1c:	mov	r5, r0
   11b20:	cmp	r5, #0
   11b24:	add	r0, sp, #40	; 0x28
   11b28:	str	r5, [r6, #8]
   11b2c:	blt	11b60 <__assert_fail@plt+0x5f8>
   11b30:	bl	1143c <memset@plt>
   11b34:	ldr	r3, [r4, #4]
   11b38:	ldr	r2, [r4, #16]
   11b3c:	add	r1, sp, #40	; 0x28
   11b40:	mov	r0, r5
   11b44:	strh	r3, [sp, #40]	; 0x28
   11b48:	bl	11430 <bind@plt>
   11b4c:	subs	r9, r0, #0
   11b50:	mov	r0, r5
   11b54:	beq	11b88 <__assert_fail@plt+0x620>
   11b58:	bl	1155c <close@plt>
   11b5c:	str	sl, [r6, #8]
   11b60:	ldr	r4, [r4, #28]
   11b64:	cmp	r4, #0
   11b68:	bne	11b0c <__assert_fail@plt+0x5a4>
   11b6c:	ldr	r4, [sp, #4]
   11b70:	mov	r0, r4
   11b74:	bl	11508 <freeaddrinfo@plt>
   11b78:	mvn	r9, #0
   11b7c:	mov	r0, r9
   11b80:	add	sp, sp, #168	; 0xa8
   11b84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b88:	ldr	r3, [r4, #16]
   11b8c:	ldr	r5, [pc, #124]	; 11c10 <__assert_fail@plt+0x6a8>
   11b90:	ldr	r6, [pc, #124]	; 11c14 <__assert_fail@plt+0x6ac>
   11b94:	mov	r2, r3
   11b98:	ldr	r1, [r4, #20]
   11b9c:	add	r0, r5, #16
   11ba0:	str	r3, [r5, #12]
   11ba4:	bl	11298 <memcpy@plt>
   11ba8:	mov	r3, #1
   11bac:	ldr	r0, [r6]
   11bb0:	str	r3, [r5, #8]
   11bb4:	bl	19de8 <argp_parse@@Base+0xf7c>
   11bb8:	ldr	r0, [r4, #24]
   11bbc:	cmp	r0, #0
   11bc0:	ldreq	r0, [pc, #80]	; 11c18 <__assert_fail@plt+0x6b0>
   11bc4:	bl	1b350 <argp_parse@@Base+0x24e4>
   11bc8:	str	r0, [r6]
   11bcc:	ldr	r0, [sp, #4]
   11bd0:	bl	11508 <freeaddrinfo@plt>
   11bd4:	mov	r0, r9
   11bd8:	add	sp, sp, #168	; 0xa8
   11bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11be0:	ldr	r3, [pc, #52]	; 11c1c <__assert_fail@plt+0x6b4>
   11be4:	mvn	r9, #0
   11be8:	ldr	r5, [r3]
   11bec:	bl	11274 <gai_strerror@plt>
   11bf0:	mov	r2, r4
   11bf4:	ldr	r1, [pc, #36]	; 11c20 <__assert_fail@plt+0x6b8>
   11bf8:	mov	r3, r0
   11bfc:	mov	r0, r5
   11c00:	bl	11400 <fprintf@plt>
   11c04:	b	11bd4 <__assert_fail@plt+0x66c>
   11c08:	strdeq	sp, [r1], -r0
   11c0c:	andeq	pc, r2, ip, asr #2
   11c10:	andeq	pc, r2, r4, ror #8
   11c14:	andeq	pc, r2, r0, asr #21
   11c18:	andeq	sp, r1, r8, lsl #22
   11c1c:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   11c20:	strdeq	sp, [r1], -r8
   11c24:	push	{r4, r5, r6, lr}
   11c28:	mov	r4, r1
   11c2c:	mov	r1, r0
   11c30:	ldrb	r0, [r4, #1]
   11c34:	ldrb	r3, [r4]
   11c38:	mov	r6, r2
   11c3c:	orr	r2, r3, r0, lsl #8
   11c40:	rev16	r2, r2
   11c44:	uxth	r2, r2
   11c48:	sub	r5, r2, #1
   11c4c:	uxth	r3, r5
   11c50:	cmp	r3, #4
   11c54:	ldrls	r3, [pc, #172]	; 11d08 <__assert_fail@plt+0x7a0>
   11c58:	ldrhi	r0, [pc, #172]	; 11d0c <__assert_fail@plt+0x7a4>
   11c5c:	ldrls	r0, [pc, #172]	; 11d10 <__assert_fail@plt+0x7a8>
   11c60:	ldrls	r2, [r3, r2, lsl #2]
   11c64:	bl	11220 <printf@plt>
   11c68:	cmp	r5, #4
   11c6c:	ldrls	pc, [pc, r5, lsl #2]
   11c70:	b	11d04 <__assert_fail@plt+0x79c>
   11c74:	andeq	r1, r1, r0, ror #25
   11c78:	andeq	r1, r1, r0, ror #25
   11c7c:	andeq	r1, r1, ip, asr #25
   11c80:	andeq	r1, r1, ip, lsr #25
   11c84:	andeq	r1, r1, r8, lsl #25
   11c88:	ldrb	r3, [r4, #3]
   11c8c:	ldrb	r1, [r4, #2]
   11c90:	ldr	r0, [pc, #124]	; 11d14 <__assert_fail@plt+0x7ac>
   11c94:	add	r2, r4, #4
   11c98:	orr	r1, r1, r3, lsl #8
   11c9c:	rev16	r1, r1
   11ca0:	pop	{r4, r5, r6, lr}
   11ca4:	uxth	r1, r1
   11ca8:	b	11220 <printf@plt>
   11cac:	ldrb	r3, [r4, #3]
   11cb0:	ldrb	r1, [r4, #2]
   11cb4:	ldr	r0, [pc, #92]	; 11d18 <__assert_fail@plt+0x7b0>
   11cb8:	pop	{r4, r5, r6, lr}
   11cbc:	orr	r1, r1, r3, lsl #8
   11cc0:	rev16	r1, r1
   11cc4:	uxth	r1, r1
   11cc8:	b	11220 <printf@plt>
   11ccc:	ldrb	r3, [r4, #3]
   11cd0:	ldrb	r1, [r4, #2]
   11cd4:	sub	r2, r6, #4
   11cd8:	ldr	r0, [pc, #60]	; 11d1c <__assert_fail@plt+0x7b4>
   11cdc:	b	11c98 <__assert_fail@plt+0x730>
   11ce0:	add	r4, r4, #2
   11ce4:	mov	r0, r4
   11ce8:	mov	r1, #0
   11cec:	bl	113f4 <strchr@plt>
   11cf0:	mov	r1, r4
   11cf4:	pop	{r4, r5, r6, lr}
   11cf8:	add	r2, r0, #1
   11cfc:	ldr	r0, [pc, #28]	; 11d20 <__assert_fail@plt+0x7b8>
   11d00:	b	11220 <printf@plt>
   11d04:	pop	{r4, r5, r6, pc}
   11d08:	strdeq	sp, [r1], -r4
   11d0c:	andeq	sp, r1, r0, lsl fp
   11d10:	andeq	sp, r1, r0, lsr #22
   11d14:	andeq	sp, r1, r0, ror #22
   11d18:	andeq	sp, r1, r4, asr fp
   11d1c:	andeq	sp, r1, ip, lsr fp
   11d20:	andeq	sp, r1, r8, lsr #22
   11d24:	mov	r1, #1
   11d28:	push	{r4, lr}
   11d2c:	mov	r0, #14
   11d30:	bl	112a4 <signal@plt>
   11d34:	mov	r0, #0
   11d38:	bl	112d4 <alarm@plt>
   11d3c:	mvn	r1, #0
   11d40:	ldr	r0, [pc]	; 11d48 <__assert_fail@plt+0x7e0>
   11d44:	bl	11238 <longjmp@plt>
   11d48:	andeq	pc, r2, r0, lsr #18
   11d4c:	ldr	r2, [pc, #64]	; 11d94 <__assert_fail@plt+0x82c>
   11d50:	ldr	r1, [pc, #64]	; 11d98 <__assert_fail@plt+0x830>
   11d54:	push	{r4, lr}
   11d58:	ldr	r3, [r2]
   11d5c:	ldr	r0, [r1, #4]
   11d60:	ldr	r1, [r1]
   11d64:	add	r3, r3, r0
   11d68:	cmp	r3, r1
   11d6c:	str	r3, [r2]
   11d70:	blt	11d88 <__assert_fail@plt+0x820>
   11d74:	ldr	r0, [pc, #32]	; 11d9c <__assert_fail@plt+0x834>
   11d78:	bl	11370 <puts@plt>
   11d7c:	mvn	r1, #0
   11d80:	ldr	r0, [pc, #24]	; 11da0 <__assert_fail@plt+0x838>
   11d84:	bl	11238 <longjmp@plt>
   11d88:	mov	r1, #1
   11d8c:	ldr	r0, [pc, #16]	; 11da4 <__assert_fail@plt+0x83c>
   11d90:	bl	11238 <longjmp@plt>
   11d94:	andeq	pc, r2, r8, lsr #21
   11d98:	andeq	pc, r2, ip, asr #2
   11d9c:	andeq	sp, r1, r4, ror fp
   11da0:	andeq	pc, r2, r0, lsr #18
   11da4:	andeq	pc, r2, r8, asr #14
   11da8:	push	{r4, r5, r6, r7, lr}
   11dac:	rev16	r3, r0
   11db0:	ldr	r6, [pc, #280]	; 11ed0 <__assert_fail@plt+0x968>
   11db4:	ldr	r5, [pc, #280]	; 11ed4 <__assert_fail@plt+0x96c>
   11db8:	uxth	r3, r3
   11dbc:	ldr	r2, [r6, #12]
   11dc0:	mov	ip, #0
   11dc4:	lsr	lr, r3, #8
   11dc8:	mov	r1, #5
   11dcc:	cmp	r2, ip
   11dd0:	sub	sp, sp, #12
   11dd4:	strb	lr, [r5, #3]
   11dd8:	strb	r3, [r5, #2]
   11ddc:	strb	ip, [r5]
   11de0:	strb	r1, [r5, #1]
   11de4:	blt	11ec0 <__assert_fail@plt+0x958>
   11de8:	cmp	r0, r2
   11dec:	beq	11ec8 <__assert_fail@plt+0x960>
   11df0:	add	r3, r6, #12
   11df4:	b	11e04 <__assert_fail@plt+0x89c>
   11df8:	cmp	r0, r2
   11dfc:	beq	11e9c <__assert_fail@plt+0x934>
   11e00:	mov	r3, r4
   11e04:	ldr	r2, [r3, #8]
   11e08:	add	r4, r3, #8
   11e0c:	cmp	r2, #0
   11e10:	bge	11df8 <__assert_fail@plt+0x890>
   11e14:	sub	r0, r0, #100	; 0x64
   11e18:	bl	11394 <strerror@plt>
   11e1c:	mov	r3, #0
   11e20:	strb	r3, [r5, #2]
   11e24:	strb	r3, [r5, #3]
   11e28:	mov	r7, r0
   11e2c:	str	r0, [r4, #4]
   11e30:	mov	r0, r7
   11e34:	bl	113e8 <strlen@plt>
   11e38:	ldr	r5, [pc, #152]	; 11ed8 <__assert_fail@plt+0x970>
   11e3c:	mov	r1, r7
   11e40:	mov	r4, r0
   11e44:	add	r2, r0, #1
   11e48:	ldr	r0, [pc, #140]	; 11edc <__assert_fail@plt+0x974>
   11e4c:	bl	11298 <memcpy@plt>
   11e50:	ldr	r3, [r5]
   11e54:	add	r4, r4, #4
   11e58:	cmp	r3, #0
   11e5c:	bne	11eac <__assert_fail@plt+0x944>
   11e60:	ldr	r2, [r5, #12]
   11e64:	ldr	r3, [pc, #116]	; 11ee0 <__assert_fail@plt+0x978>
   11e68:	str	r2, [sp, #4]
   11e6c:	str	r3, [sp]
   11e70:	ldr	r0, [r6, #8]
   11e74:	mov	r3, #0
   11e78:	mov	r2, r4
   11e7c:	ldr	r1, [pc, #80]	; 11ed4 <__assert_fail@plt+0x96c>
   11e80:	bl	11490 <sendto@plt>
   11e84:	cmp	r4, r0
   11e88:	beq	11ea4 <__assert_fail@plt+0x93c>
   11e8c:	ldr	r0, [pc, #80]	; 11ee4 <__assert_fail@plt+0x97c>
   11e90:	add	sp, sp, #12
   11e94:	pop	{r4, r5, r6, r7, lr}
   11e98:	b	11304 <perror@plt>
   11e9c:	ldr	r7, [r3, #12]
   11ea0:	b	11e30 <__assert_fail@plt+0x8c8>
   11ea4:	add	sp, sp, #12
   11ea8:	pop	{r4, r5, r6, r7, pc}
   11eac:	mov	r2, r4
   11eb0:	ldr	r1, [pc, #28]	; 11ed4 <__assert_fail@plt+0x96c>
   11eb4:	ldr	r0, [pc, #44]	; 11ee8 <__assert_fail@plt+0x980>
   11eb8:	bl	11c24 <__assert_fail@plt+0x6bc>
   11ebc:	b	11e60 <__assert_fail@plt+0x8f8>
   11ec0:	add	r4, r6, #12
   11ec4:	b	11e14 <__assert_fail@plt+0x8ac>
   11ec8:	ldr	r7, [r6, #16]
   11ecc:	b	11e30 <__assert_fail@plt+0x8c8>
   11ed0:	andeq	pc, r2, ip, asr #2
   11ed4:	andeq	pc, r2, r0, asr #10
   11ed8:	andeq	pc, r2, r4, ror #8
   11edc:	andeq	pc, r2, r4, asr #10
   11ee0:	andeq	pc, r2, r4, ror r4	; <UNPREDICTABLE>
   11ee4:	muleq	r1, r0, fp
   11ee8:	andeq	sp, r1, r8, lsl #23
   11eec:	cmp	r0, #0
   11ef0:	beq	11f1c <__assert_fail@plt+0x9b4>
   11ef4:	cmp	r0, #118	; 0x76
   11ef8:	bne	11f14 <__assert_fail@plt+0x9ac>
   11efc:	ldr	r2, [pc, #112]	; 11f74 <__assert_fail@plt+0xa0c>
   11f00:	mov	r0, #0
   11f04:	ldr	r3, [r2, #4]
   11f08:	add	r3, r3, #1
   11f0c:	str	r3, [r2, #4]
   11f10:	bx	lr
   11f14:	mov	r0, #7
   11f18:	bx	lr
   11f1c:	ldr	r3, [r2, #20]
   11f20:	push	{r4, r5, r6, lr}
   11f24:	cmp	r3, #1
   11f28:	mov	r0, r2
   11f2c:	mov	r4, r1
   11f30:	ldr	r5, [pc, #64]	; 11f78 <__assert_fail@plt+0xa10>
   11f34:	bls	11f64 <__assert_fail@plt+0x9fc>
   11f38:	ldr	r3, [pc, #60]	; 11f7c <__assert_fail@plt+0xa14>
   11f3c:	ldr	r2, [pc, #60]	; 11f80 <__assert_fail@plt+0xa18>
   11f40:	ldr	r1, [r3]
   11f44:	bl	180a8 <argp_state_help@@Base>
   11f48:	ldr	r3, [r5, #84]	; 0x54
   11f4c:	add	r2, r5, r3, lsl #2
   11f50:	add	r3, r3, #1
   11f54:	str	r4, [r2, #88]	; 0x58
   11f58:	str	r3, [r5, #84]	; 0x54
   11f5c:	mov	r0, #0
   11f60:	pop	{r4, r5, r6, pc}
   11f64:	ldr	r3, [r5, #84]	; 0x54
   11f68:	cmp	r3, #2
   11f6c:	ble	11f4c <__assert_fail@plt+0x9e4>
   11f70:	b	11f38 <__assert_fail@plt+0x9d0>
   11f74:	andeq	pc, r2, r4, ror #8
   11f78:	andeq	pc, r2, ip, asr #2
   11f7c:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   11f80:	andeq	r0, r0, r6, lsl #2
   11f84:	cmp	r0, #1
   11f88:	ble	12068 <__assert_fail@plt+0xb00>
   11f8c:	cmp	r0, #2
   11f90:	push	{r4, r5, r6, r7, r8, lr}
   11f94:	mov	r6, r1
   11f98:	ldr	r7, [pc, #212]	; 12074 <__assert_fail@plt+0xb0c>
   11f9c:	beq	11ff8 <__assert_fail@plt+0xa90>
   11fa0:	ldr	r1, [r6]
   11fa4:	ldr	r0, [pc, #204]	; 12078 <__assert_fail@plt+0xb10>
   11fa8:	bl	11220 <printf@plt>
   11fac:	ldr	r2, [r7, #100]	; 0x64
   11fb0:	cmp	r2, #0
   11fb4:	beq	11fec <__assert_fail@plt+0xa84>
   11fb8:	ldr	r5, [pc, #188]	; 1207c <__assert_fail@plt+0xb14>
   11fbc:	ldr	r4, [pc, #188]	; 12080 <__assert_fail@plt+0xb18>
   11fc0:	ldr	r7, [pc, #188]	; 12084 <__assert_fail@plt+0xb1c>
   11fc4:	ldr	r6, [pc, #188]	; 12088 <__assert_fail@plt+0xb20>
   11fc8:	mov	r1, r4
   11fcc:	mov	r0, r7
   11fd0:	bl	11220 <printf@plt>
   11fd4:	ldrb	r3, [r4]
   11fd8:	ldr	r2, [r5, #8]!
   11fdc:	cmp	r3, #32
   11fe0:	moveq	r4, r6
   11fe4:	cmp	r2, #0
   11fe8:	bne	11fc8 <__assert_fail@plt+0xa60>
   11fec:	ldr	r0, [pc, #152]	; 1208c <__assert_fail@plt+0xb24>
   11ff0:	pop	{r4, r5, r6, r7, r8, lr}
   11ff4:	b	11370 <puts@plt>
   11ff8:	ldr	r1, [r7, #100]	; 0x64
   11ffc:	ldr	r5, [r6, #4]
   12000:	cmp	r1, #0
   12004:	beq	12058 <__assert_fail@plt+0xaf0>
   12008:	add	r4, r7, #100	; 0x64
   1200c:	b	1201c <__assert_fail@plt+0xab4>
   12010:	ldr	r1, [r4, #8]!
   12014:	cmp	r1, #0
   12018:	beq	12058 <__assert_fail@plt+0xaf0>
   1201c:	mov	r0, r5
   12020:	bl	11208 <strcmp@plt>
   12024:	cmp	r0, #0
   12028:	bne	12010 <__assert_fail@plt+0xaa8>
   1202c:	ldr	r1, [r4, #4]
   12030:	ldr	r0, [pc, #88]	; 12090 <__assert_fail@plt+0xb28>
   12034:	bl	11328 <strcpy@plt>
   12038:	ldr	r3, [pc, #84]	; 12094 <__assert_fail@plt+0xb2c>
   1203c:	ldr	r3, [r3, #4]
   12040:	cmp	r3, #0
   12044:	popeq	{r4, r5, r6, r7, r8, pc}
   12048:	ldr	r1, [pc, #64]	; 12090 <__assert_fail@plt+0xb28>
   1204c:	ldr	r0, [pc, #68]	; 12098 <__assert_fail@plt+0xb30>
   12050:	pop	{r4, r5, r6, r7, r8, lr}
   12054:	b	11220 <printf@plt>
   12058:	mov	r1, r5
   1205c:	ldr	r0, [pc, #56]	; 1209c <__assert_fail@plt+0xb34>
   12060:	bl	11220 <printf@plt>
   12064:	b	11fa0 <__assert_fail@plt+0xa38>
   12068:	ldr	r1, [pc, #32]	; 12090 <__assert_fail@plt+0xb28>
   1206c:	ldr	r0, [pc, #44]	; 120a0 <__assert_fail@plt+0xb38>
   12070:	b	11220 <printf@plt>
   12074:	andeq	pc, r2, ip, asr #2
   12078:	andeq	sp, r1, ip, asr #23
   1207c:			; <UNDEFINED> instruction: 0x0002f1b0
   12080:	ldrdeq	sp, [r1], -r8
   12084:	ldrdeq	sp, [r1], -ip
   12088:	muleq	r1, r4, fp
   1208c:	ldrdeq	sp, [r1], -r8
   12090:	andeq	pc, r2, r4, asr #21
   12094:	andeq	pc, r2, r4, ror #8
   12098:			; <UNDEFINED> instruction: 0x0001dbbc
   1209c:	andeq	sp, r1, r4, ror #23
   120a0:	muleq	r1, r8, fp
   120a4:	ldr	r3, [pc, #48]	; 120dc <__assert_fail@plt+0xb74>
   120a8:	ldr	ip, [pc, #48]	; 120e0 <__assert_fail@plt+0xb78>
   120ac:	ldr	r2, [pc, #48]	; 120e4 <__assert_fail@plt+0xb7c>
   120b0:	ldm	r3!, {r0, r1}
   120b4:	ldr	ip, [ip, #4]
   120b8:	ldrb	r3, [r3]
   120bc:	cmp	ip, #0
   120c0:	str	r0, [r2]
   120c4:	strb	r3, [r2, #8]
   120c8:	str	r1, [r2, #4]
   120cc:	bxeq	lr
   120d0:	mov	r1, r2
   120d4:	ldr	r0, [pc, #12]	; 120e8 <__assert_fail@plt+0xb80>
   120d8:	b	11220 <printf@plt>
   120dc:	strdeq	sp, [r1], -r8
   120e0:	andeq	pc, r2, r4, ror #8
   120e4:	andeq	pc, r2, r4, asr #21
   120e8:			; <UNDEFINED> instruction: 0x0001dbbc
   120ec:	ldr	r0, [pc, #40]	; 1211c <__assert_fail@plt+0xbb4>
   120f0:	ldr	r3, [pc, #40]	; 12120 <__assert_fail@plt+0xbb8>
   120f4:	ldr	r1, [pc, #40]	; 12124 <__assert_fail@plt+0xbbc>
   120f8:	ldr	ip, [r0, #4]
   120fc:	ldrh	r2, [r3, #4]
   12100:	ldr	r0, [r3]
   12104:	cmp	ip, #0
   12108:	str	r0, [r1]
   1210c:	strh	r2, [r1, #4]
   12110:	bxeq	lr
   12114:	ldr	r0, [pc, #12]	; 12128 <__assert_fail@plt+0xbc0>
   12118:	b	11220 <printf@plt>
   1211c:	andeq	pc, r2, r4, ror #8
   12120:	andeq	sp, r1, r4, lsl #24
   12124:	andeq	pc, r2, r4, asr #21
   12128:			; <UNDEFINED> instruction: 0x0001dbbc
   1212c:	cmp	r0, #1
   12130:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	beq	12228 <__assert_fail@plt+0xcc0>
   12138:	ldr	r5, [pc, #312]	; 12278 <__assert_fail@plt+0xd10>
   1213c:	mov	r6, r0
   12140:	mov	r7, r1
   12144:	sub	r6, r6, #1
   12148:	cmp	r6, #0
   1214c:	ble	121fc <__assert_fail@plt+0xc94>
   12150:	ldr	r2, [r5, #148]	; 0x94
   12154:	ldr	r1, [r7, #4]!
   12158:	cmp	r2, #0
   1215c:	beq	12210 <__assert_fail@plt+0xca8>
   12160:	ldrb	lr, [r1]
   12164:	mov	r4, #0
   12168:	ldr	ip, [pc, #268]	; 1227c <__assert_fail@plt+0xd14>
   1216c:	mov	r8, r4
   12170:	mov	r9, r4
   12174:	ldrb	r3, [r2]
   12178:	mov	fp, ip
   1217c:	add	r2, r2, #1
   12180:	cmp	r3, lr
   12184:	bne	1221c <__assert_fail@plt+0xcb4>
   12188:	cmp	lr, #0
   1218c:	beq	121e8 <__assert_fail@plt+0xc80>
   12190:	mov	r0, r1
   12194:	b	121a0 <__assert_fail@plt+0xc38>
   12198:	cmp	r3, #0
   1219c:	beq	121e8 <__assert_fail@plt+0xc80>
   121a0:	ldrb	sl, [r0, #1]!
   121a4:	ldrb	r3, [r2], #1
   121a8:	cmp	r3, sl
   121ac:	beq	12198 <__assert_fail@plt+0xc30>
   121b0:	cmp	sl, #0
   121b4:	bne	121c8 <__assert_fail@plt+0xc60>
   121b8:	sub	r0, r0, r1
   121bc:	cmp	r0, r8
   121c0:	bgt	12200 <__assert_fail@plt+0xc98>
   121c4:	addeq	r4, r4, #1
   121c8:	ldr	r2, [ip, #12]!
   121cc:	cmp	r2, #0
   121d0:	bne	12174 <__assert_fail@plt+0xc0c>
   121d4:	cmp	r4, #1
   121d8:	bgt	1226c <__assert_fail@plt+0xd04>
   121dc:	cmp	r9, #0
   121e0:	beq	12210 <__assert_fail@plt+0xca8>
   121e4:	mov	fp, r9
   121e8:	ldr	r0, [fp, #4]
   121ec:	sub	r6, r6, #1
   121f0:	bl	11370 <puts@plt>
   121f4:	cmp	r6, #0
   121f8:	bgt	12150 <__assert_fail@plt+0xbe8>
   121fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12200:	mov	r8, r0
   12204:	mov	r9, ip
   12208:	mov	r4, #1
   1220c:	b	121c8 <__assert_fail@plt+0xc60>
   12210:	ldr	r0, [pc, #104]	; 12280 <__assert_fail@plt+0xd18>
   12214:	bl	11220 <printf@plt>
   12218:	b	12144 <__assert_fail@plt+0xbdc>
   1221c:	mov	r0, r1
   12220:	mov	sl, lr
   12224:	b	121b0 <__assert_fail@plt+0xc48>
   12228:	ldr	r4, [pc, #72]	; 12278 <__assert_fail@plt+0xd10>
   1222c:	ldr	r0, [pc, #80]	; 12284 <__assert_fail@plt+0xd1c>
   12230:	bl	11370 <puts@plt>
   12234:	ldr	r2, [r4, #148]	; 0x94
   12238:	cmp	r2, #0
   1223c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12240:	ldr	r6, [pc, #64]	; 12288 <__assert_fail@plt+0xd20>
   12244:	add	r4, r4, #148	; 0x94
   12248:	mov	r5, #8
   1224c:	ldr	r3, [r4, #4]
   12250:	mov	r1, r5
   12254:	mov	r0, r6
   12258:	bl	11220 <printf@plt>
   1225c:	ldr	r2, [r4, #12]!
   12260:	cmp	r2, #0
   12264:	bne	1224c <__assert_fail@plt+0xce4>
   12268:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1226c:	ldr	r0, [pc, #24]	; 1228c <__assert_fail@plt+0xd24>
   12270:	bl	11220 <printf@plt>
   12274:	b	12144 <__assert_fail@plt+0xbdc>
   12278:	andeq	pc, r2, ip, asr #2
   1227c:	andeq	pc, r2, r0, ror #3
   12280:	andeq	sp, r1, r4, ror #24
   12284:	andeq	sp, r1, ip, lsl #24
   12288:	andeq	sp, r1, ip, lsr ip
   1228c:	andeq	sp, r1, r8, asr #24
   12290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12294:	sub	sp, sp, #12
   12298:	mov	r9, r1
   1229c:	mov	r6, r3
   122a0:	mov	r5, r2
   122a4:	mov	r8, r0
   122a8:	bl	113e8 <strlen@plt>
   122ac:	ldr	r7, [pc, #324]	; 123f8 <__assert_fail@plt+0xe90>
   122b0:	mov	r1, r8
   122b4:	mov	r4, r0
   122b8:	mov	r2, r0
   122bc:	mov	r0, r7
   122c0:	bl	11298 <memcpy@plt>
   122c4:	ldr	r3, [pc, #304]	; 123fc <__assert_fail@plt+0xe94>
   122c8:	mov	r1, r9
   122cc:	ldr	r0, [pc, #300]	; 12400 <__assert_fail@plt+0xe98>
   122d0:	ldrh	r3, [r3]
   122d4:	strh	r3, [r7, r4]
   122d8:	bl	11220 <printf@plt>
   122dc:	ldr	r3, [pc, #288]	; 12404 <__assert_fail@plt+0xe9c>
   122e0:	add	r0, r4, #1
   122e4:	add	r0, r7, r0
   122e8:	rsb	r1, r4, #199	; 0xc7
   122ec:	ldr	r2, [r3]
   122f0:	bl	11280 <fgets@plt>
   122f4:	cmp	r0, #0
   122f8:	beq	123c4 <__assert_fail@plt+0xe5c>
   122fc:	ldrb	r4, [r7]
   12300:	ldr	r9, [pc, #256]	; 12408 <__assert_fail@plt+0xea0>
   12304:	mov	r8, #0
   12308:	cmp	r4, r8
   1230c:	str	r8, [r9]
   12310:	beq	123e8 <__assert_fail@plt+0xe80>
   12314:	bl	113c4 <__ctype_b_loc@plt>
   12318:	ldr	r3, [pc, #236]	; 1240c <__assert_fail@plt+0xea4>
   1231c:	mov	r2, r7
   12320:	mov	r4, r8
   12324:	mov	fp, r8
   12328:	mov	r7, r3
   1232c:	mov	sl, #1
   12330:	str	r3, [sp, #4]
   12334:	ldr	ip, [r0]
   12338:	mov	r3, r2
   1233c:	ldrb	r1, [r2], #1
   12340:	lsl	lr, r1, #1
   12344:	ldrh	lr, [ip, lr]
   12348:	tst	lr, #8192	; 0x2000
   1234c:	bne	12338 <__assert_fail@plt+0xdd0>
   12350:	cmp	r1, #0
   12354:	beq	123dc <__assert_fail@plt+0xe74>
   12358:	str	r3, [r7], #4
   1235c:	add	r4, r4, #1
   12360:	b	12374 <__assert_fail@plt+0xe0c>
   12364:	ldrh	r2, [ip, r2]
   12368:	tst	r2, #8192	; 0x2000
   1236c:	bne	123a8 <__assert_fail@plt+0xe40>
   12370:	mov	r3, r1
   12374:	ldrb	r2, [r3, #1]
   12378:	add	r1, r3, #1
   1237c:	cmp	r2, #0
   12380:	lsl	r2, r2, #1
   12384:	bne	12364 <__assert_fail@plt+0xdfc>
   12388:	str	r4, [r9]
   1238c:	mov	r3, #0
   12390:	str	r3, [r7]
   12394:	ldr	r3, [sp, #4]
   12398:	str	r4, [r5]
   1239c:	str	r3, [r6]
   123a0:	add	sp, sp, #12
   123a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123a8:	ldrb	ip, [r1, #1]
   123ac:	add	r2, r3, #2
   123b0:	strb	fp, [r1]
   123b4:	cmp	ip, #0
   123b8:	mov	r8, sl
   123bc:	bne	12334 <__assert_fail@plt+0xdcc>
   123c0:	b	12388 <__assert_fail@plt+0xe20>
   123c4:	ldr	r2, [r6]
   123c8:	mov	r3, #1
   123cc:	str	r8, [r2]
   123d0:	str	r3, [r5]
   123d4:	add	sp, sp, #12
   123d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123dc:	cmp	r8, #0
   123e0:	beq	1238c <__assert_fail@plt+0xe24>
   123e4:	b	12388 <__assert_fail@plt+0xe20>
   123e8:	ldr	r3, [pc, #28]	; 1240c <__assert_fail@plt+0xea4>
   123ec:	str	r3, [sp, #4]
   123f0:	mov	r7, r3
   123f4:	b	1238c <__assert_fail@plt+0xe24>
   123f8:	andeq	pc, r2, r4, ror #21
   123fc:	ldrdeq	sp, [r1], -r8
   12400:	andeq	sp, r1, r0, lsl #25
   12404:	andeq	pc, r2, r8, asr r4	; <UNPREDICTABLE>
   12408:			; <UNDEFINED> instruction: 0x0002fabc
   1240c:	ldrdeq	pc, [r2], -r0
   12410:	push	{lr}		; (str lr, [sp, #-4]!)
   12414:	sub	sp, sp, #12
   12418:	cmp	r0, #1
   1241c:	str	r0, [sp, #4]
   12420:	str	r1, [sp]
   12424:	movgt	r3, r0
   12428:	ble	12480 <__assert_fail@plt+0xf18>
   1242c:	cmp	r3, #2
   12430:	ldr	r3, [sp]
   12434:	beq	1244c <__assert_fail@plt+0xee4>
   12438:	ldr	r0, [pc, #92]	; 1249c <__assert_fail@plt+0xf34>
   1243c:	ldr	r1, [r3]
   12440:	bl	11220 <printf@plt>
   12444:	add	sp, sp, #12
   12448:	pop	{pc}		; (ldr pc, [sp], #4)
   1244c:	ldr	r0, [r3, #4]
   12450:	mov	r2, #10
   12454:	mov	r1, #0
   12458:	bl	11214 <strtol@plt>
   1245c:	cmp	r0, #0
   12460:	ldrge	r3, [pc, #56]	; 124a0 <__assert_fail@plt+0xf38>
   12464:	strge	r0, [r3, #4]
   12468:	bge	12444 <__assert_fail@plt+0xedc>
   1246c:	ldr	r3, [sp]
   12470:	ldr	r0, [pc, #44]	; 124a4 <__assert_fail@plt+0xf3c>
   12474:	ldr	r1, [r3, #4]
   12478:	bl	11220 <printf@plt>
   1247c:	b	12444 <__assert_fail@plt+0xedc>
   12480:	mov	r3, sp
   12484:	add	r2, sp, #4
   12488:	ldr	r1, [pc, #24]	; 124a8 <__assert_fail@plt+0xf40>
   1248c:	ldr	r0, [pc, #24]	; 124ac <__assert_fail@plt+0xf44>
   12490:	bl	12290 <__assert_fail@plt+0xd28>
   12494:	ldr	r3, [sp, #4]
   12498:	b	1242c <__assert_fail@plt+0xec4>
   1249c:	andeq	sp, r1, r0, lsr #25
   124a0:	andeq	pc, r2, ip, asr #2
   124a4:			; <UNDEFINED> instruction: 0x0001dcb4
   124a8:	andeq	sp, r1, r4, lsl #25
   124ac:	muleq	r1, r0, ip
   124b0:	push	{lr}		; (str lr, [sp, #-4]!)
   124b4:	sub	sp, sp, #12
   124b8:	cmp	r0, #1
   124bc:	str	r0, [sp, #4]
   124c0:	str	r1, [sp]
   124c4:	movgt	r3, r0
   124c8:	ble	12520 <__assert_fail@plt+0xfb8>
   124cc:	cmp	r3, #2
   124d0:	ldr	r3, [sp]
   124d4:	beq	124ec <__assert_fail@plt+0xf84>
   124d8:	ldr	r0, [pc, #92]	; 1253c <__assert_fail@plt+0xfd4>
   124dc:	ldr	r1, [r3]
   124e0:	bl	11220 <printf@plt>
   124e4:	add	sp, sp, #12
   124e8:	pop	{pc}		; (ldr pc, [sp], #4)
   124ec:	ldr	r0, [r3, #4]
   124f0:	mov	r2, #10
   124f4:	mov	r1, #0
   124f8:	bl	11214 <strtol@plt>
   124fc:	cmp	r0, #0
   12500:	ldrge	r3, [pc, #56]	; 12540 <__assert_fail@plt+0xfd8>
   12504:	strge	r0, [r3]
   12508:	bge	124e4 <__assert_fail@plt+0xf7c>
   1250c:	ldr	r3, [sp]
   12510:	ldr	r0, [pc, #44]	; 12544 <__assert_fail@plt+0xfdc>
   12514:	ldr	r1, [r3, #4]
   12518:	bl	11220 <printf@plt>
   1251c:	b	124e4 <__assert_fail@plt+0xf7c>
   12520:	mov	r3, sp
   12524:	add	r2, sp, #4
   12528:	ldr	r1, [pc, #24]	; 12548 <__assert_fail@plt+0xfe0>
   1252c:	ldr	r0, [pc, #24]	; 1254c <__assert_fail@plt+0xfe4>
   12530:	bl	12290 <__assert_fail@plt+0xd28>
   12534:	ldr	r3, [sp, #4]
   12538:	b	124cc <__assert_fail@plt+0xf64>
   1253c:	andeq	sp, r1, r0, lsr #25
   12540:	andeq	pc, r2, ip, asr #2
   12544:			; <UNDEFINED> instruction: 0x0001dcb4
   12548:	andeq	sp, r1, r4, lsl #25
   1254c:	andeq	sp, r1, r4, asr #25
   12550:	push	{r4, lr}
   12554:	sub	sp, sp, #8
   12558:	cmp	r0, #1
   1255c:	str	r0, [sp, #4]
   12560:	str	r1, [sp]
   12564:	movgt	r3, r0
   12568:	ble	12624 <__assert_fail@plt+0x10bc>
   1256c:	sub	r3, r3, #2
   12570:	cmp	r3, #1
   12574:	ldr	r3, [sp]
   12578:	bls	12590 <__assert_fail@plt+0x1028>
   1257c:	ldr	r0, [pc, #208]	; 12654 <__assert_fail@plt+0x10ec>
   12580:	ldr	r1, [r3]
   12584:	bl	11220 <printf@plt>
   12588:	add	sp, sp, #8
   1258c:	pop	{r4, pc}
   12590:	ldr	r0, [r3, #4]
   12594:	bl	11a90 <__assert_fail@plt+0x528>
   12598:	cmn	r0, #1
   1259c:	beq	12588 <__assert_fail@plt+0x1020>
   125a0:	ldr	r3, [sp, #4]
   125a4:	cmp	r3, #3
   125a8:	beq	125e4 <__assert_fail@plt+0x107c>
   125ac:	ldr	r1, [pc, #164]	; 12658 <__assert_fail@plt+0x10f0>
   125b0:	ldr	r0, [pc, #164]	; 1265c <__assert_fail@plt+0x10f4>
   125b4:	bl	11418 <getservbyname@plt>
   125b8:	subs	r4, r0, #0
   125bc:	beq	12640 <__assert_fail@plt+0x10d8>
   125c0:	ldr	r3, [r4, #8]
   125c4:	ldr	r4, [pc, #148]	; 12660 <__assert_fail@plt+0x10f8>
   125c8:	rev16	r3, r3
   125cc:	uxth	r3, r3
   125d0:	str	r3, [r4, #144]	; 0x90
   125d4:	mov	r3, #1
   125d8:	str	r3, [r4, #8]
   125dc:	add	sp, sp, #8
   125e0:	pop	{r4, pc}
   125e4:	ldr	r3, [sp]
   125e8:	mov	r2, #10
   125ec:	mov	r1, #0
   125f0:	ldr	r0, [r3, #8]
   125f4:	bl	11214 <strtol@plt>
   125f8:	ldr	r4, [pc, #96]	; 12660 <__assert_fail@plt+0x10f8>
   125fc:	cmp	r0, #0
   12600:	str	r0, [r4, #144]	; 0x90
   12604:	bgt	125d4 <__assert_fail@plt+0x106c>
   12608:	ldr	r3, [sp]
   1260c:	ldr	r0, [pc, #80]	; 12664 <__assert_fail@plt+0x10fc>
   12610:	ldr	r1, [r3, #8]
   12614:	bl	11220 <printf@plt>
   12618:	mov	r3, #0
   1261c:	str	r3, [r4, #8]
   12620:	b	12588 <__assert_fail@plt+0x1020>
   12624:	mov	r3, sp
   12628:	add	r2, sp, #4
   1262c:	ldr	r1, [pc, #52]	; 12668 <__assert_fail@plt+0x1100>
   12630:	ldr	r0, [pc, #52]	; 1266c <__assert_fail@plt+0x1104>
   12634:	bl	12290 <__assert_fail@plt+0xd28>
   12638:	ldr	r3, [sp, #4]
   1263c:	b	1256c <__assert_fail@plt+0x1004>
   12640:	ldr	r2, [pc, #40]	; 12670 <__assert_fail@plt+0x1108>
   12644:	mov	r1, r4
   12648:	mov	r0, #1
   1264c:	bl	1134c <error@plt>
   12650:	b	125c0 <__assert_fail@plt+0x1058>
   12654:	andeq	sp, r1, r4, ror #25
   12658:	andeq	sp, r1, r8, lsl sp
   1265c:	strdeq	sp, [r1], -r0
   12660:	andeq	pc, r2, r4, ror #8
   12664:	andeq	sp, r1, r0, lsl #26
   12668:	ldrdeq	sp, [r1], -r4
   1266c:	ldrdeq	sp, [r1], -ip
   12670:	andeq	sp, r1, ip, lsl sp
   12674:	push	{r4, r5, r6, lr}
   12678:	mov	r4, r0
   1267c:	ldrb	r3, [r0]
   12680:	cmp	r3, #0
   12684:	movne	r5, #47	; 0x2f
   12688:	bne	126ac <__assert_fail@plt+0x1144>
   1268c:	b	126c0 <__assert_fail@plt+0x1158>
   12690:	ldrb	r3, [r0, #1]
   12694:	cmp	r3, #0
   12698:	bne	126c8 <__assert_fail@plt+0x1160>
   1269c:	strb	r3, [r0]
   126a0:	ldrb	r3, [r4]
   126a4:	cmp	r3, #0
   126a8:	beq	126c0 <__assert_fail@plt+0x1158>
   126ac:	mov	r1, r5
   126b0:	mov	r0, r4
   126b4:	bl	114b4 <strrchr@plt>
   126b8:	cmp	r0, #0
   126bc:	bne	12690 <__assert_fail@plt+0x1128>
   126c0:	mov	r0, r4
   126c4:	pop	{r4, r5, r6, pc}
   126c8:	add	r0, r0, #1
   126cc:	pop	{r4, r5, r6, pc}
   126d0:	push	{r4, r5, r6, r7, r8, lr}
   126d4:	ldr	lr, [pc, #192]	; 1279c <__assert_fail@plt+0x1234>
   126d8:	ldr	r2, [lr, #148]	; 0x94
   126dc:	cmp	r2, #0
   126e0:	beq	12794 <__assert_fail@plt+0x122c>
   126e4:	ldrb	r4, [r0]
   126e8:	mov	r5, #0
   126ec:	add	lr, lr, #148	; 0x94
   126f0:	mov	r7, r5
   126f4:	mov	r8, r5
   126f8:	ldrb	r3, [r2]
   126fc:	mov	r6, lr
   12700:	add	r2, r2, #1
   12704:	cmp	r3, r4
   12708:	bne	12788 <__assert_fail@plt+0x1220>
   1270c:	cmp	r4, #0
   12710:	beq	12764 <__assert_fail@plt+0x11fc>
   12714:	mov	r1, r0
   12718:	b	12724 <__assert_fail@plt+0x11bc>
   1271c:	cmp	r3, #0
   12720:	beq	12764 <__assert_fail@plt+0x11fc>
   12724:	ldrb	ip, [r1, #1]!
   12728:	ldrb	r3, [r2], #1
   1272c:	cmp	r3, ip
   12730:	beq	1271c <__assert_fail@plt+0x11b4>
   12734:	cmp	ip, #0
   12738:	bne	1274c <__assert_fail@plt+0x11e4>
   1273c:	sub	r1, r1, r0
   12740:	cmp	r1, r5
   12744:	bgt	1276c <__assert_fail@plt+0x1204>
   12748:	addeq	r7, r7, #1
   1274c:	ldr	r2, [lr, #12]!
   12750:	cmp	r2, #0
   12754:	bne	126f8 <__assert_fail@plt+0x1190>
   12758:	cmp	r7, #2
   1275c:	movlt	r6, r8
   12760:	mvnge	r6, #0
   12764:	mov	r0, r6
   12768:	pop	{r4, r5, r6, r7, r8, pc}
   1276c:	mov	r8, lr
   12770:	ldr	r2, [lr, #12]!
   12774:	mov	r5, r1
   12778:	cmp	r2, #0
   1277c:	mov	r7, #1
   12780:	bne	126f8 <__assert_fail@plt+0x1190>
   12784:	b	12758 <__assert_fail@plt+0x11f0>
   12788:	mov	ip, r4
   1278c:	mov	r1, r0
   12790:	b	12734 <__assert_fail@plt+0x11cc>
   12794:	mov	r6, r2
   12798:	b	12764 <__assert_fail@plt+0x11fc>
   1279c:	andeq	pc, r2, ip, asr #2
   127a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127a4:	vpush	{d8}
   127a8:	mov	r4, r0
   127ac:	ldr	r0, [pc, #1164]	; 12c40 <__assert_fail@plt+0x16d8>
   127b0:	mov	r5, r2
   127b4:	sub	sp, sp, #180	; 0xb4
   127b8:	str	r1, [sp, #16]
   127bc:	mov	r1, #0
   127c0:	str	r2, [sp, #20]
   127c4:	bl	11334 <gettimeofday@plt>
   127c8:	bl	13974 <__assert_fail@plt+0x240c>
   127cc:	ldr	r1, [pc, #1136]	; 12c44 <__assert_fail@plt+0x16dc>
   127d0:	str	r0, [sp, #24]
   127d4:	mov	r0, r4
   127d8:	bl	111d8 <fdopen@plt>
   127dc:	ldr	r1, [pc, #1124]	; 12c48 <__assert_fail@plt+0x16e0>
   127e0:	str	r0, [sp, #12]
   127e4:	mov	r0, r5
   127e8:	bl	11208 <strcmp@plt>
   127ec:	mov	r3, #0
   127f0:	ldr	r1, [pc, #1108]	; 12c4c <__assert_fail@plt+0x16e4>
   127f4:	clz	r0, r0
   127f8:	lsr	r0, r0, #5
   127fc:	str	r0, [sp, #36]	; 0x24
   12800:	mov	r0, #14
   12804:	str	r3, [sp, #28]
   12808:	str	r3, [sp, #40]	; 0x28
   1280c:	bl	112a4 <signal@plt>
   12810:	ldr	r4, [sp, #28]
   12814:	cmp	r4, #0
   12818:	bne	12a58 <__assert_fail@plt+0x14f0>
   1281c:	ldr	r6, [sp, #24]
   12820:	ldr	r9, [sp, #16]
   12824:	mov	r3, #2
   12828:	strb	r3, [r6, #1]
   1282c:	strb	r4, [r6]
   12830:	mov	r0, r9
   12834:	add	r7, r6, r3
   12838:	bl	113e8 <strlen@plt>
   1283c:	ldr	r8, [pc, #1036]	; 12c50 <__assert_fail@plt+0x16e8>
   12840:	mov	r1, r9
   12844:	mov	r2, r8
   12848:	mov	r5, r0
   1284c:	mov	r0, r7
   12850:	bl	11448 <strncpy@plt>
   12854:	cmp	r5, r8
   12858:	movcc	r3, r5
   1285c:	movcs	r3, r8
   12860:	add	r5, r7, r3
   12864:	strb	r4, [r7, r3]
   12868:	ldr	r7, [sp, #20]
   1286c:	add	r5, r5, #1
   12870:	mov	r1, r7
   12874:	mov	r0, r5
   12878:	bl	11328 <strcpy@plt>
   1287c:	mov	r0, r7
   12880:	bl	113e8 <strlen@plt>
   12884:	add	r3, r5, r0
   12888:	sub	r3, r3, r6
   1288c:	sub	r3, r3, #3
   12890:	strb	r4, [r5, r0]
   12894:	str	r3, [sp, #32]
   12898:	ldr	r2, [pc, #948]	; 12c54 <__assert_fail@plt+0x16ec>
   1289c:	mov	r3, #0
   128a0:	ldr	r0, [pc, #944]	; 12c58 <__assert_fail@plt+0x16f0>
   128a4:	str	r3, [r2]
   128a8:	bl	11244 <_setjmp@plt>
   128ac:	ldr	r7, [pc, #936]	; 12c5c <__assert_fail@plt+0x16f4>
   128b0:	ldr	r9, [pc, #936]	; 12c60 <__assert_fail@plt+0x16f8>
   128b4:	ldr	r3, [pc, #936]	; 12c64 <__assert_fail@plt+0x16fc>
   128b8:	ldr	r3, [r3]
   128bc:	cmp	r3, #0
   128c0:	bne	12ba8 <__assert_fail@plt+0x1640>
   128c4:	ldr	r3, [pc, #924]	; 12c68 <__assert_fail@plt+0x1700>
   128c8:	ldr	r2, [sp, #32]
   128cc:	ldr	ip, [pc, #920]	; 12c6c <__assert_fail@plt+0x1704>
   128d0:	ldr	r0, [r3, #8]
   128d4:	ldr	r3, [pc, #904]	; 12c64 <__assert_fail@plt+0x16fc>
   128d8:	ldr	r1, [sp, #24]
   128dc:	add	r2, r2, #4
   128e0:	ldr	r3, [r3, #12]
   128e4:	str	ip, [sp]
   128e8:	str	r3, [sp, #4]
   128ec:	mov	r3, #0
   128f0:	bl	11490 <sendto@plt>
   128f4:	ldr	r3, [sp, #32]
   128f8:	add	r3, r3, #4
   128fc:	cmp	r0, r3
   12900:	bne	12be0 <__assert_fail@plt+0x1678>
   12904:	ldr	r1, [sp, #36]	; 0x24
   12908:	ldr	r0, [sp, #12]
   1290c:	bl	139c4 <__assert_fail@plt+0x245c>
   12910:	ldr	sl, [pc, #856]	; 12c70 <__assert_fail@plt+0x1708>
   12914:	mov	r8, #128	; 0x80
   12918:	mov	r4, #0
   1291c:	ldr	r3, [pc, #836]	; 12c68 <__assert_fail@plt+0x1700>
   12920:	add	r6, sp, #48	; 0x30
   12924:	add	r5, sp, #44	; 0x2c
   12928:	ldr	r0, [r3, #4]
   1292c:	bl	112d4 <alarm@plt>
   12930:	ldr	r3, [pc, #816]	; 12c68 <__assert_fail@plt+0x1700>
   12934:	mov	r2, #516	; 0x204
   12938:	mov	r1, r7
   1293c:	ldr	r0, [r3, #8]
   12940:	str	r5, [sp, #4]
   12944:	str	r6, [sp]
   12948:	mov	r3, r4
   1294c:	str	r8, [sp, #44]	; 0x2c
   12950:	bl	112c8 <recvfrom@plt>
   12954:	cmp	r0, #0
   12958:	ble	12930 <__assert_fail@plt+0x13c8>
   1295c:	mov	fp, r0
   12960:	mov	r0, r4
   12964:	bl	112d4 <alarm@plt>
   12968:	ldrh	r3, [sp, #50]	; 0x32
   1296c:	ldr	r2, [pc, #752]	; 12c64 <__assert_fail@plt+0x16fc>
   12970:	rev16	r3, r3
   12974:	uxth	r3, r3
   12978:	rev16	r3, r3
   1297c:	strh	r3, [r2, #18]
   12980:	ldr	r3, [pc, #732]	; 12c64 <__assert_fail@plt+0x16fc>
   12984:	ldr	r3, [r3]
   12988:	cmp	r3, #0
   1298c:	bne	12a44 <__assert_fail@plt+0x14dc>
   12990:	ldr	r3, [pc, #708]	; 12c5c <__assert_fail@plt+0x16f4>
   12994:	ldr	r1, [pc, #704]	; 12c5c <__assert_fail@plt+0x16f4>
   12998:	ldr	ip, [pc, #700]	; 12c5c <__assert_fail@plt+0x16f4>
   1299c:	ldrb	r0, [r3, #1]
   129a0:	ldrb	r2, [r3, #3]
   129a4:	ldrb	r1, [r1, #2]
   129a8:	ldrb	r3, [r3]
   129ac:	orr	r1, r1, r2, lsl #8
   129b0:	orr	r3, r3, r0, lsl #8
   129b4:	rev16	r3, r3
   129b8:	rev16	r1, r1
   129bc:	uxth	r2, r3
   129c0:	uxth	r1, r1
   129c4:	sxth	r3, r3
   129c8:	lsr	r0, r2, #8
   129cc:	strb	r2, [ip]
   129d0:	cmp	r3, #5
   129d4:	lsr	r2, r1, #8
   129d8:	strb	r0, [ip, #1]
   129dc:	strb	r1, [ip, #2]
   129e0:	strb	r2, [ip, #3]
   129e4:	beq	12aa8 <__assert_fail@plt+0x1540>
   129e8:	cmp	r3, #4
   129ec:	bne	1291c <__assert_fail@plt+0x13b4>
   129f0:	ldr	r3, [sp, #28]
   129f4:	cmp	r1, r3
   129f8:	beq	12bec <__assert_fail@plt+0x1684>
   129fc:	ldr	r3, [pc, #612]	; 12c68 <__assert_fail@plt+0x1700>
   12a00:	ldr	r0, [r3, #8]
   12a04:	bl	13d9c <__assert_fail@plt+0x2834>
   12a08:	subs	r1, r0, #0
   12a0c:	beq	12a20 <__assert_fail@plt+0x14b8>
   12a10:	ldr	r3, [pc, #588]	; 12c64 <__assert_fail@plt+0x16fc>
   12a14:	ldr	r3, [r3]
   12a18:	cmp	r3, #0
   12a1c:	bne	12bd4 <__assert_fail@plt+0x166c>
   12a20:	ldr	r3, [pc, #564]	; 12c5c <__assert_fail@plt+0x16f4>
   12a24:	ldrb	r1, [r3, #3]
   12a28:	ldrb	r2, [r3, #2]
   12a2c:	ldr	r3, [sp, #28]
   12a30:	orr	r2, r2, r1, lsl #8
   12a34:	sub	r3, r3, #1
   12a38:	cmp	r2, r3
   12a3c:	bne	12918 <__assert_fail@plt+0x13b0>
   12a40:	b	128b4 <__assert_fail@plt+0x134c>
   12a44:	mov	r2, fp
   12a48:	mov	r1, r7
   12a4c:	mov	r0, r9
   12a50:	bl	11c24 <__assert_fail@plt+0x6bc>
   12a54:	b	12990 <__assert_fail@plt+0x1428>
   12a58:	ldr	r2, [sp, #36]	; 0x24
   12a5c:	add	r1, sp, #24
   12a60:	ldr	r0, [sp, #12]
   12a64:	bl	13ae8 <__assert_fail@plt+0x2580>
   12a68:	str	r0, [sp, #32]
   12a6c:	ldr	r3, [sp, #32]
   12a70:	cmp	r3, #0
   12a74:	blt	12bc0 <__assert_fail@plt+0x1658>
   12a78:	ldr	r3, [sp, #28]
   12a7c:	ldr	r2, [sp, #24]
   12a80:	rev16	r3, r3
   12a84:	mov	r0, #0
   12a88:	uxth	r3, r3
   12a8c:	strb	r3, [r2, #2]
   12a90:	mov	r1, #3
   12a94:	lsr	r3, r3, #8
   12a98:	strb	r3, [r2, #3]
   12a9c:	strb	r0, [r2]
   12aa0:	strb	r1, [r2, #1]
   12aa4:	b	12898 <__assert_fail@plt+0x1330>
   12aa8:	sxth	r1, r1
   12aac:	ldr	r2, [pc, #448]	; 12c74 <__assert_fail@plt+0x170c>
   12ab0:	ldr	r0, [pc, #448]	; 12c78 <__assert_fail@plt+0x1710>
   12ab4:	bl	11220 <printf@plt>
   12ab8:	ldr	r4, [pc, #444]	; 12c7c <__assert_fail@plt+0x1714>
   12abc:	ldr	r0, [sp, #12]
   12ac0:	bl	11478 <fclose@plt>
   12ac4:	mov	r0, r4
   12ac8:	mov	r1, #0
   12acc:	bl	11334 <gettimeofday@plt>
   12ad0:	ldr	r3, [sp, #40]	; 0x28
   12ad4:	cmp	r3, #0
   12ad8:	bne	12ae8 <__assert_fail@plt+0x1580>
   12adc:	add	sp, sp, #180	; 0xb4
   12ae0:	vpop	{d8}
   12ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ae8:	ldr	r0, [pc, #336]	; 12c40 <__assert_fail@plt+0x16d8>
   12aec:	ldr	r3, [r4, #4]
   12af0:	ldr	r1, [pc, #392]	; 12c80 <__assert_fail@plt+0x1718>
   12af4:	ldr	r2, [r0, #4]
   12af8:	vldr	s6, [r0]
   12afc:	smull	ip, r0, r1, r3
   12b00:	vldr	s8, [r4]
   12b04:	vldr	d5, [pc, #292]	; 12c30 <__assert_fail@plt+0x16c8>
   12b08:	smull	ip, r1, r1, r2
   12b0c:	vcvt.f64.s32	d3, s6
   12b10:	vcvt.f64.s32	d4, s8
   12b14:	ldr	r4, [sp, #40]	; 0x28
   12b18:	asr	r2, r2, #31
   12b1c:	asr	r3, r3, #31
   12b20:	rsb	r3, r3, r0, asr #13
   12b24:	rsb	r2, r2, r1, asr #13
   12b28:	vmov	s14, r3
   12b2c:	vmov	s15, r2
   12b30:	ldr	r1, [pc, #332]	; 12c84 <__assert_fail@plt+0x171c>
   12b34:	mov	r2, r4
   12b38:	ldr	r0, [pc, #328]	; 12c88 <__assert_fail@plt+0x1720>
   12b3c:	vcvt.f64.s32	d6, s15
   12b40:	vcvt.f64.s32	d7, s14
   12b44:	vmla.f64	d6, d3, d5
   12b48:	vmla.f64	d7, d4, d5
   12b4c:	vsub.f64	d7, d7, d6
   12b50:	vdiv.f64	d8, d7, d5
   12b54:	vstr	d8, [sp]
   12b58:	bl	11220 <printf@plt>
   12b5c:	ldr	r3, [pc, #256]	; 12c64 <__assert_fail@plt+0x16fc>
   12b60:	ldr	r3, [r3, #4]
   12b64:	cmp	r3, #0
   12b68:	beq	12b8c <__assert_fail@plt+0x1624>
   12b6c:	vmov	s15, r4
   12b70:	vldr	d6, [pc, #192]	; 12c38 <__assert_fail@plt+0x16d0>
   12b74:	ldr	r0, [pc, #272]	; 12c8c <__assert_fail@plt+0x1724>
   12b78:	vcvt.f64.u32	d7, s15
   12b7c:	vmul.f64	d7, d7, d6
   12b80:	vdiv.f64	d6, d7, d8
   12b84:	vmov	r2, r3, d6
   12b88:	bl	11220 <printf@plt>
   12b8c:	ldr	r3, [pc, #252]	; 12c90 <__assert_fail@plt+0x1728>
   12b90:	mov	r0, #10
   12b94:	ldr	r1, [r3]
   12b98:	bl	114d8 <putc@plt>
   12b9c:	add	sp, sp, #180	; 0xb4
   12ba0:	vpop	{d8}
   12ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ba8:	ldr	r2, [sp, #32]
   12bac:	ldr	r1, [sp, #24]
   12bb0:	add	r2, r2, #4
   12bb4:	ldr	r0, [pc, #216]	; 12c94 <__assert_fail@plt+0x172c>
   12bb8:	bl	11c24 <__assert_fail@plt+0x6bc>
   12bbc:	b	128c4 <__assert_fail@plt+0x135c>
   12bc0:	bl	1140c <__errno_location@plt>
   12bc4:	ldr	r0, [r0]
   12bc8:	add	r0, r0, #100	; 0x64
   12bcc:	bl	11da8 <__assert_fail@plt+0x840>
   12bd0:	b	12ab8 <__assert_fail@plt+0x1550>
   12bd4:	mov	r0, sl
   12bd8:	bl	11220 <printf@plt>
   12bdc:	b	12a20 <__assert_fail@plt+0x14b8>
   12be0:	ldr	r0, [pc, #176]	; 12c98 <__assert_fail@plt+0x1730>
   12be4:	bl	11304 <perror@plt>
   12be8:	b	12ab8 <__assert_fail@plt+0x1550>
   12bec:	ldr	r3, [sp, #28]
   12bf0:	cmp	r3, #0
   12bf4:	ldrgt	r3, [sp, #32]
   12bf8:	ldrgt	r2, [sp, #40]	; 0x28
   12bfc:	addgt	r3, r3, r2
   12c00:	strgt	r3, [sp, #40]	; 0x28
   12c04:	ldr	r3, [sp, #28]
   12c08:	add	r3, r3, #1
   12c0c:	str	r3, [sp, #28]
   12c10:	ldr	r3, [sp, #32]
   12c14:	cmp	r3, #512	; 0x200
   12c18:	beq	12810 <__assert_fail@plt+0x12a8>
   12c1c:	ldr	r3, [sp, #28]
   12c20:	cmp	r3, #1
   12c24:	bne	12ab8 <__assert_fail@plt+0x1550>
   12c28:	b	12810 <__assert_fail@plt+0x12a8>
   12c2c:	nop			; (mov r0, r0)
   12c30:	andeq	r0, r0, r0
   12c34:	eormi	r0, r4, r0
   12c38:	andeq	r0, r0, r0
   12c3c:	eormi	r0, r0, r0
   12c40:	andeq	pc, r2, ip, lsr #21
   12c44:	andeq	lr, r1, ip, lsr r3
   12c48:	strdeq	sp, [r1], -r8
   12c4c:	andeq	r1, r1, ip, asr #26
   12c50:	strdeq	r0, [r0], -r6
   12c54:	andeq	pc, r2, r8, lsr #21
   12c58:	andeq	pc, r2, r8, asr #14
   12c5c:	andeq	pc, r2, r0, asr #10
   12c60:	muleq	r1, r0, sp
   12c64:	andeq	pc, r2, r4, ror #8
   12c68:	andeq	pc, r2, ip, asr #2
   12c6c:	andeq	pc, r2, r4, ror r4	; <UNPREDICTABLE>
   12c70:			; <UNDEFINED> instruction: 0x0001ddb0
   12c74:	andeq	pc, r2, r4, asr #10
   12c78:	muleq	r1, ip, sp
   12c7c:			; <UNDEFINED> instruction: 0x0002fab4
   12c80:	ldrbtne	fp, [r8], #1417	; 0x589
   12c84:	andeq	sp, r1, r8, asr #27
   12c88:	ldrdeq	sp, [r1], -r0
   12c8c:	andeq	sp, r1, ip, ror #27
   12c90:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   12c94:	andeq	sp, r1, r8, lsl #23
   12c98:	andeq	sp, r1, r0, lsl #27
   12c9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ca0:	sub	sp, sp, #20
   12ca4:	cmp	r0, #1
   12ca8:	str	r0, [sp, #12]
   12cac:	str	r1, [sp, #8]
   12cb0:	movgt	r6, r0
   12cb4:	ble	12f68 <__assert_fail@plt+0x1a00>
   12cb8:	ldr	r9, [sp, #8]
   12cbc:	sub	r3, r6, #-1073741823	; 0xc0000001
   12cc0:	mov	r1, #58	; 0x3a
   12cc4:	ldr	sl, [r9, r3, lsl #2]
   12cc8:	mov	r0, sl
   12ccc:	bl	113f4 <strchr@plt>
   12cd0:	subs	r7, r0, #0
   12cd4:	beq	12f60 <__assert_fail@plt+0x19f8>
   12cd8:	cmp	r6, #2
   12cdc:	beq	12d38 <__assert_fail@plt+0x17d0>
   12ce0:	sub	r6, r6, #1
   12ce4:	mov	r5, r9
   12ce8:	mov	r4, #1
   12cec:	mov	r8, #58	; 0x3a
   12cf0:	b	12cfc <__assert_fail@plt+0x1794>
   12cf4:	cmp	r4, r6
   12cf8:	beq	12d38 <__assert_fail@plt+0x17d0>
   12cfc:	mov	r1, r8
   12d00:	ldr	r0, [r5, #4]!
   12d04:	bl	113f4 <strchr@plt>
   12d08:	add	r4, r4, #1
   12d0c:	cmp	r0, #0
   12d10:	beq	12cf4 <__assert_fail@plt+0x178c>
   12d14:	ldr	r4, [r9]
   12d18:	ldr	r0, [pc, #800]	; 13040 <__assert_fail@plt+0x1ad8>
   12d1c:	mov	r1, r4
   12d20:	bl	11220 <printf@plt>
   12d24:	mov	r1, r4
   12d28:	ldr	r0, [pc, #788]	; 13044 <__assert_fail@plt+0x1adc>
   12d2c:	bl	11220 <printf@plt>
   12d30:	add	sp, sp, #20
   12d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d38:	ldrb	r3, [sl]
   12d3c:	cmp	r3, #91	; 0x5b
   12d40:	beq	12e58 <__assert_fail@plt+0x18f0>
   12d44:	mov	r3, #0
   12d48:	strb	r3, [r7]
   12d4c:	ldrb	r3, [sl]
   12d50:	add	r7, r7, #1
   12d54:	cmp	r3, #0
   12d58:	bne	12ea0 <__assert_fail@plt+0x1938>
   12d5c:	ldr	r6, [pc, #740]	; 13048 <__assert_fail@plt+0x1ae0>
   12d60:	ldr	r3, [r6, #8]
   12d64:	cmp	r3, #0
   12d68:	beq	12f98 <__assert_fail@plt+0x1a30>
   12d6c:	ldr	r3, [sp, #12]
   12d70:	cmp	r3, #3
   12d74:	ble	12eb8 <__assert_fail@plt+0x1950>
   12d78:	mov	r1, #0
   12d7c:	mov	r0, r7
   12d80:	bl	113f4 <strchr@plt>
   12d84:	mov	r4, #47	; 0x2f
   12d88:	strb	r4, [r0]
   12d8c:	ldr	r3, [sp, #12]
   12d90:	add	sl, r0, #1
   12d94:	cmp	r3, #2
   12d98:	ble	12d30 <__assert_fail@plt+0x17c8>
   12d9c:	ldr	fp, [pc, #680]	; 1304c <__assert_fail@plt+0x1ae4>
   12da0:	mov	r5, #1
   12da4:	ldr	r3, [sp, #8]
   12da8:	lsl	r8, r5, #2
   12dac:	ldr	r9, [r3, r5, lsl #2]
   12db0:	ldrb	r3, [r9]
   12db4:	cmp	r3, #0
   12db8:	bne	12ddc <__assert_fail@plt+0x1874>
   12dbc:	b	12df0 <__assert_fail@plt+0x1888>
   12dc0:	ldrb	r3, [r0, #1]
   12dc4:	cmp	r3, #0
   12dc8:	bne	12f0c <__assert_fail@plt+0x19a4>
   12dcc:	strb	r3, [r0]
   12dd0:	ldrb	r3, [r9]
   12dd4:	cmp	r3, #0
   12dd8:	beq	12df0 <__assert_fail@plt+0x1888>
   12ddc:	mov	r1, r4
   12de0:	mov	r0, r9
   12de4:	bl	114b4 <strrchr@plt>
   12de8:	cmp	r0, #0
   12dec:	bne	12dc0 <__assert_fail@plt+0x1858>
   12df0:	mov	r1, r9
   12df4:	mov	r0, sl
   12df8:	bl	11328 <strcpy@plt>
   12dfc:	ldr	r3, [sp, #8]
   12e00:	mov	r1, #0
   12e04:	ldr	r0, [r3, r8]
   12e08:	bl	11358 <open64@plt>
   12e0c:	subs	r9, r0, #0
   12e10:	blt	12f38 <__assert_fail@plt+0x19d0>
   12e14:	ldr	r3, [r6, #4]
   12e18:	cmp	r3, #0
   12e1c:	bne	12f14 <__assert_fail@plt+0x19ac>
   12e20:	ldrh	r3, [r6, #144]	; 0x90
   12e24:	mov	r0, r9
   12e28:	mov	r2, fp
   12e2c:	rev16	r3, r3
   12e30:	strh	r3, [r6, #18]
   12e34:	mov	r1, r7
   12e38:	bl	127a0 <__assert_fail@plt+0x1238>
   12e3c:	ldr	r3, [sp, #12]
   12e40:	add	r5, r5, #1
   12e44:	sub	r3, r3, #1
   12e48:	cmp	r3, r5
   12e4c:	bgt	12da4 <__assert_fail@plt+0x183c>
   12e50:	add	sp, sp, #20
   12e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e58:	mov	r0, sl
   12e5c:	mov	r1, #93	; 0x5d
   12e60:	bl	113f4 <strchr@plt>
   12e64:	cmp	r0, #0
   12e68:	beq	12d30 <__assert_fail@plt+0x17c8>
   12e6c:	mov	r3, #0
   12e70:	strb	r3, [r0]
   12e74:	ldr	r3, [sp, #12]
   12e78:	ldrb	r1, [r0, #1]
   12e7c:	ldr	r2, [sp, #8]
   12e80:	sub	r3, r3, #-1073741823	; 0xc0000001
   12e84:	cmp	r1, #58	; 0x3a
   12e88:	ldr	r7, [r2, r3, lsl #2]
   12e8c:	bne	12d5c <__assert_fail@plt+0x17f4>
   12e90:	add	sl, r7, #1
   12e94:	cmp	sl, #0
   12e98:	add	r7, r0, #2
   12e9c:	beq	12d5c <__assert_fail@plt+0x17f4>
   12ea0:	mov	r0, sl
   12ea4:	bl	11a90 <__assert_fail@plt+0x528>
   12ea8:	cmp	r0, #0
   12eac:	beq	12d5c <__assert_fail@plt+0x17f4>
   12eb0:	add	sp, sp, #20
   12eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12eb8:	cmp	r3, #2
   12ebc:	beq	12fc8 <__assert_fail@plt+0x1a60>
   12ec0:	ldr	r3, [sp, #8]
   12ec4:	ldr	r4, [r3, #4]
   12ec8:	mov	r1, #0
   12ecc:	mov	r0, r4
   12ed0:	bl	11358 <open64@plt>
   12ed4:	subs	r5, r0, #0
   12ed8:	blt	13014 <__assert_fail@plt+0x1aac>
   12edc:	ldr	r3, [r6, #4]
   12ee0:	cmp	r3, #0
   12ee4:	bne	12fa4 <__assert_fail@plt+0x1a3c>
   12ee8:	ldrh	r3, [r6, #144]	; 0x90
   12eec:	mov	r1, r7
   12ef0:	mov	r0, r5
   12ef4:	rev16	r3, r3
   12ef8:	strh	r3, [r6, #18]
   12efc:	ldr	r2, [pc, #328]	; 1304c <__assert_fail@plt+0x1ae4>
   12f00:	bl	127a0 <__assert_fail@plt+0x1238>
   12f04:	add	sp, sp, #20
   12f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f0c:	add	r9, r0, #1
   12f10:	b	12df0 <__assert_fail@plt+0x1888>
   12f14:	ldr	r1, [sp, #8]
   12f18:	ldr	r3, [pc, #304]	; 13050 <__assert_fail@plt+0x1ae8>
   12f1c:	ldr	r0, [pc, #304]	; 13054 <__assert_fail@plt+0x1aec>
   12f20:	ldr	r1, [r1, r8]
   12f24:	ldr	r2, [r3]
   12f28:	mov	r3, r7
   12f2c:	str	fp, [sp]
   12f30:	bl	11220 <printf@plt>
   12f34:	b	12e20 <__assert_fail@plt+0x18b8>
   12f38:	ldr	r3, [pc, #280]	; 13058 <__assert_fail@plt+0x1af0>
   12f3c:	mov	r2, #6
   12f40:	mov	r1, #1
   12f44:	ldr	r3, [r3]
   12f48:	ldr	r0, [pc, #268]	; 1305c <__assert_fail@plt+0x1af4>
   12f4c:	bl	11310 <fwrite@plt>
   12f50:	ldr	r3, [sp, #8]
   12f54:	ldr	r0, [r3, r8]
   12f58:	bl	11304 <perror@plt>
   12f5c:	b	12e3c <__assert_fail@plt+0x18d4>
   12f60:	mov	r7, sl
   12f64:	b	12d5c <__assert_fail@plt+0x17f4>
   12f68:	add	r3, sp, #8
   12f6c:	add	r2, sp, #12
   12f70:	ldr	r1, [pc, #232]	; 13060 <__assert_fail@plt+0x1af8>
   12f74:	ldr	r0, [pc, #232]	; 13064 <__assert_fail@plt+0x1afc>
   12f78:	bl	12290 <__assert_fail@plt+0xd28>
   12f7c:	ldr	r6, [sp, #12]
   12f80:	cmp	r6, #1
   12f84:	bgt	12cb8 <__assert_fail@plt+0x1750>
   12f88:	ldr	r3, [sp, #8]
   12f8c:	ldr	r0, [pc, #172]	; 13040 <__assert_fail@plt+0x1ad8>
   12f90:	ldr	r4, [r3]
   12f94:	b	12d1c <__assert_fail@plt+0x17b4>
   12f98:	ldr	r0, [pc, #200]	; 13068 <__assert_fail@plt+0x1b00>
   12f9c:	bl	11370 <puts@plt>
   12fa0:	b	12d30 <__assert_fail@plt+0x17c8>
   12fa4:	ldr	r2, [pc, #164]	; 13050 <__assert_fail@plt+0x1ae8>
   12fa8:	ldr	r3, [pc, #156]	; 1304c <__assert_fail@plt+0x1ae4>
   12fac:	mov	r1, r4
   12fb0:	ldr	r2, [r2]
   12fb4:	ldr	r0, [pc, #152]	; 13054 <__assert_fail@plt+0x1aec>
   12fb8:	str	r3, [sp]
   12fbc:	mov	r3, r7
   12fc0:	bl	11220 <printf@plt>
   12fc4:	b	12ee8 <__assert_fail@plt+0x1980>
   12fc8:	ldrb	r3, [r7]
   12fcc:	cmp	r3, #0
   12fd0:	beq	1300c <__assert_fail@plt+0x1aa4>
   12fd4:	mov	r4, #47	; 0x2f
   12fd8:	b	12ff8 <__assert_fail@plt+0x1a90>
   12fdc:	ldrb	r3, [r0, #1]
   12fe0:	cmp	r3, #0
   12fe4:	bne	13038 <__assert_fail@plt+0x1ad0>
   12fe8:	strb	r3, [r0]
   12fec:	ldrb	r3, [r7]
   12ff0:	cmp	r3, #0
   12ff4:	beq	1300c <__assert_fail@plt+0x1aa4>
   12ff8:	mov	r1, r4
   12ffc:	mov	r0, r7
   13000:	bl	114b4 <strrchr@plt>
   13004:	cmp	r0, #0
   13008:	bne	12fdc <__assert_fail@plt+0x1a74>
   1300c:	mov	r4, r7
   13010:	b	12ec8 <__assert_fail@plt+0x1960>
   13014:	ldr	r3, [pc, #60]	; 13058 <__assert_fail@plt+0x1af0>
   13018:	mov	r2, #6
   1301c:	mov	r1, #1
   13020:	ldr	r3, [r3]
   13024:	ldr	r0, [pc, #48]	; 1305c <__assert_fail@plt+0x1af4>
   13028:	bl	11310 <fwrite@plt>
   1302c:	mov	r0, r4
   13030:	bl	11304 <perror@plt>
   13034:	b	12d30 <__assert_fail@plt+0x17c8>
   13038:	add	r4, r0, #1
   1303c:	b	12ec8 <__assert_fail@plt+0x1960>
   13040:	andeq	sp, r1, r0, lsl lr
   13044:	andeq	sp, r1, r4, lsr lr
   13048:	andeq	pc, r2, r4, ror #8
   1304c:	andeq	pc, r2, r4, asr #21
   13050:	andeq	pc, r2, r0, asr #21
   13054:	muleq	r1, r0, lr
   13058:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   1305c:	andeq	sp, r1, r8, lsl #29
   13060:	andeq	sp, r1, r0, lsl #28
   13064:	andeq	sp, r1, r8, lsl #28
   13068:	andeq	sp, r1, r8, ror #28
   1306c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13070:	vpush	{d8}
   13074:	mov	r4, r0
   13078:	ldr	r0, [pc, #1240]	; 13558 <__assert_fail@plt+0x1ff0>
   1307c:	mov	r5, r2
   13080:	sub	sp, sp, #188	; 0xbc
   13084:	str	r1, [sp, #16]
   13088:	mov	r1, #0
   1308c:	str	r2, [sp, #20]
   13090:	bl	11334 <gettimeofday@plt>
   13094:	bl	13928 <__assert_fail@plt+0x23c0>
   13098:	ldr	r1, [pc, #1212]	; 1355c <__assert_fail@plt+0x1ff4>
   1309c:	str	r0, [sp, #28]
   130a0:	mov	r0, r4
   130a4:	bl	111d8 <fdopen@plt>
   130a8:	ldr	r1, [pc, #1200]	; 13560 <__assert_fail@plt+0x1ff8>
   130ac:	str	r0, [sp, #12]
   130b0:	mov	r0, r5
   130b4:	bl	11208 <strcmp@plt>
   130b8:	mov	r3, #1
   130bc:	mov	r2, #0
   130c0:	ldr	r1, [pc, #1180]	; 13564 <__assert_fail@plt+0x1ffc>
   130c4:	clz	r0, r0
   130c8:	lsr	r0, r0, #5
   130cc:	str	r0, [sp, #52]	; 0x34
   130d0:	mov	r0, #14
   130d4:	str	r3, [sp, #32]
   130d8:	str	r3, [sp, #40]	; 0x28
   130dc:	str	r2, [sp, #44]	; 0x2c
   130e0:	bl	112a4 <signal@plt>
   130e4:	ldr	r2, [sp, #40]	; 0x28
   130e8:	cmp	r2, #0
   130ec:	bne	13384 <__assert_fail@plt+0x1e1c>
   130f0:	ldr	r1, [pc, #1136]	; 13568 <__assert_fail@plt+0x2000>
   130f4:	ldr	r3, [sp, #32]
   130f8:	ldr	r0, [pc, #1128]	; 13568 <__assert_fail@plt+0x2000>
   130fc:	strb	r2, [r1]
   13100:	rev16	r3, r3
   13104:	mov	r1, #4
   13108:	str	r1, [sp, #36]	; 0x24
   1310c:	uxth	r3, r3
   13110:	ldr	r2, [sp, #32]
   13114:	strb	r3, [r0, #2]
   13118:	add	r2, r2, #1
   1311c:	lsr	r3, r3, #8
   13120:	strb	r3, [r0, #3]
   13124:	strb	r1, [r0, #1]
   13128:	str	r2, [sp, #32]
   1312c:	ldr	r2, [pc, #1080]	; 1356c <__assert_fail@plt+0x2004>
   13130:	mov	r3, #0
   13134:	ldr	r0, [pc, #1076]	; 13570 <__assert_fail@plt+0x2008>
   13138:	str	r3, [r2]
   1313c:	bl	11244 <_setjmp@plt>
   13140:	ldr	r4, [pc, #1068]	; 13574 <__assert_fail@plt+0x200c>
   13144:	ldr	sl, [pc, #1068]	; 13578 <__assert_fail@plt+0x2010>
   13148:	ldr	r3, [pc, #1068]	; 1357c <__assert_fail@plt+0x2014>
   1314c:	ldr	r3, [r3]
   13150:	cmp	r3, #0
   13154:	bne	13370 <__assert_fail@plt+0x1e08>
   13158:	ldr	r3, [pc, #1052]	; 1357c <__assert_fail@plt+0x2014>
   1315c:	ldr	r1, [pc, #1052]	; 13580 <__assert_fail@plt+0x2018>
   13160:	ldr	r0, [r4, #8]
   13164:	ldr	r3, [r3, #12]
   13168:	ldr	r2, [sp, #36]	; 0x24
   1316c:	stm	sp, {r1, r3}
   13170:	mov	r3, #0
   13174:	ldr	r1, [pc, #1004]	; 13568 <__assert_fail@plt+0x2000>
   13178:	bl	11490 <sendto@plt>
   1317c:	ldr	r3, [sp, #36]	; 0x24
   13180:	cmp	r0, r3
   13184:	bne	13520 <__assert_fail@plt+0x1fb8>
   13188:	ldr	r1, [sp, #52]	; 0x34
   1318c:	ldr	r0, [sp, #12]
   13190:	bl	13ca0 <__assert_fail@plt+0x2738>
   13194:	mov	r9, #128	; 0x80
   13198:	add	r8, sp, #56	; 0x38
   1319c:	mov	r5, #0
   131a0:	ldr	r0, [r4, #4]
   131a4:	bl	112d4 <alarm@plt>
   131a8:	add	r7, sp, #48	; 0x30
   131ac:	mov	r6, #516	; 0x204
   131b0:	ldr	r0, [r4, #8]
   131b4:	ldr	r1, [sp, #28]
   131b8:	str	r7, [sp, #4]
   131bc:	str	r8, [sp]
   131c0:	mov	r3, r5
   131c4:	mov	r2, r6
   131c8:	str	r9, [sp, #48]	; 0x30
   131cc:	bl	112c8 <recvfrom@plt>
   131d0:	cmp	r0, #0
   131d4:	ble	131b0 <__assert_fail@plt+0x1c48>
   131d8:	mov	fp, r0
   131dc:	mov	r0, r5
   131e0:	bl	112d4 <alarm@plt>
   131e4:	ldrh	r3, [sp, #58]	; 0x3a
   131e8:	ldr	r2, [pc, #908]	; 1357c <__assert_fail@plt+0x2014>
   131ec:	rev16	r3, r3
   131f0:	uxth	r3, r3
   131f4:	rev16	r3, r3
   131f8:	strh	r3, [r2, #18]
   131fc:	ldr	r3, [pc, #888]	; 1357c <__assert_fail@plt+0x2014>
   13200:	ldr	r3, [r3]
   13204:	cmp	r3, #0
   13208:	bne	132b4 <__assert_fail@plt+0x1d4c>
   1320c:	ldr	r2, [sp, #28]
   13210:	ldrb	ip, [r2, #1]
   13214:	ldrb	r0, [r2, #3]
   13218:	ldrb	r3, [r2]
   1321c:	ldrb	r1, [r2, #2]
   13220:	orr	r3, r3, ip, lsl #8
   13224:	orr	r1, r1, r0, lsl #8
   13228:	rev16	r3, r3
   1322c:	rev16	r1, r1
   13230:	uxth	r0, r3
   13234:	uxth	r1, r1
   13238:	sxth	r3, r3
   1323c:	lsr	ip, r0, #8
   13240:	strb	r0, [r2]
   13244:	cmp	r3, #5
   13248:	lsr	r0, r1, #8
   1324c:	strb	ip, [r2, #1]
   13250:	strb	r1, [r2, #2]
   13254:	strb	r0, [r2, #3]
   13258:	beq	132c8 <__assert_fail@plt+0x1d60>
   1325c:	cmp	r3, #3
   13260:	bne	131a0 <__assert_fail@plt+0x1c38>
   13264:	ldr	r3, [sp, #32]
   13268:	cmp	r1, r3
   1326c:	beq	134d8 <__assert_fail@plt+0x1f70>
   13270:	ldr	r0, [r4, #8]
   13274:	bl	13d9c <__assert_fail@plt+0x2834>
   13278:	subs	r1, r0, #0
   1327c:	beq	13290 <__assert_fail@plt+0x1d28>
   13280:	ldr	r3, [pc, #756]	; 1357c <__assert_fail@plt+0x2014>
   13284:	ldr	r3, [r3]
   13288:	cmp	r3, #0
   1328c:	bne	134cc <__assert_fail@plt+0x1f64>
   13290:	ldr	r2, [sp, #28]
   13294:	ldr	r3, [sp, #32]
   13298:	ldrb	r1, [r2, #3]
   1329c:	ldrb	r2, [r2, #2]
   132a0:	sub	r3, r3, #1
   132a4:	orr	r2, r2, r1, lsl #8
   132a8:	cmp	r2, r3
   132ac:	bne	1319c <__assert_fail@plt+0x1c34>
   132b0:	b	13148 <__assert_fail@plt+0x1be0>
   132b4:	mov	r2, fp
   132b8:	ldr	r1, [sp, #28]
   132bc:	mov	r0, sl
   132c0:	bl	11c24 <__assert_fail@plt+0x6bc>
   132c4:	b	1320c <__assert_fail@plt+0x1ca4>
   132c8:	add	r2, r2, #4
   132cc:	sxth	r1, r1
   132d0:	ldr	r0, [pc, #684]	; 13584 <__assert_fail@plt+0x201c>
   132d4:	bl	11220 <printf@plt>
   132d8:	ldr	r3, [sp, #32]
   132dc:	ldr	r5, [pc, #664]	; 1357c <__assert_fail@plt+0x2014>
   132e0:	ldr	r2, [pc, #652]	; 13574 <__assert_fail@plt+0x200c>
   132e4:	rev16	r3, r3
   132e8:	ldr	ip, [pc, #632]	; 13568 <__assert_fail@plt+0x2000>
   132ec:	ldr	r1, [r5, #12]
   132f0:	uxth	r3, r3
   132f4:	ldr	r0, [r2, #8]
   132f8:	add	r2, r5, #16
   132fc:	str	r1, [sp, #4]
   13300:	str	r2, [sp]
   13304:	mov	r6, #0
   13308:	mov	r1, #4
   1330c:	lsr	r2, r3, #8
   13310:	strb	r3, [ip, #2]
   13314:	strb	r2, [ip, #3]
   13318:	mov	r3, r6
   1331c:	mov	r2, r1
   13320:	strb	r1, [ip, #1]
   13324:	strb	r6, [ip]
   13328:	mov	r1, ip
   1332c:	bl	11490 <sendto@plt>
   13330:	ldr	r7, [sp, #12]
   13334:	ldr	r1, [sp, #52]	; 0x34
   13338:	mov	r0, r7
   1333c:	ldr	r4, [pc, #580]	; 13588 <__assert_fail@plt+0x2020>
   13340:	bl	13ca0 <__assert_fail@plt+0x2738>
   13344:	mov	r0, r7
   13348:	bl	11478 <fclose@plt>
   1334c:	mov	r1, r6
   13350:	mov	r0, r4
   13354:	bl	11334 <gettimeofday@plt>
   13358:	ldr	r3, [sp, #44]	; 0x2c
   1335c:	cmp	r3, r6
   13360:	bne	13410 <__assert_fail@plt+0x1ea8>
   13364:	add	sp, sp, #188	; 0xbc
   13368:	vpop	{d8}
   1336c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13370:	ldr	r2, [sp, #36]	; 0x24
   13374:	ldr	r1, [pc, #492]	; 13568 <__assert_fail@plt+0x2000>
   13378:	ldr	r0, [pc, #524]	; 1358c <__assert_fail@plt+0x2024>
   1337c:	bl	11c24 <__assert_fail@plt+0x6bc>
   13380:	b	13158 <__assert_fail@plt+0x1bf0>
   13384:	ldr	r2, [pc, #476]	; 13568 <__assert_fail@plt+0x2000>
   13388:	ldr	r7, [sp, #16]
   1338c:	mov	r3, #1
   13390:	mov	r5, #0
   13394:	strb	r3, [r2, #1]
   13398:	strb	r5, [r2]
   1339c:	mov	r0, r7
   133a0:	bl	113e8 <strlen@plt>
   133a4:	ldr	r6, [pc, #484]	; 13590 <__assert_fail@plt+0x2028>
   133a8:	mov	r1, r7
   133ac:	mov	r2, r6
   133b0:	mov	r4, r0
   133b4:	ldr	r0, [pc, #472]	; 13594 <__assert_fail@plt+0x202c>
   133b8:	bl	11448 <strncpy@plt>
   133bc:	cmp	r4, r6
   133c0:	ldr	r2, [pc, #460]	; 13594 <__assert_fail@plt+0x202c>
   133c4:	movcs	r3, r6
   133c8:	movcc	r3, r4
   133cc:	ldr	r6, [sp, #20]
   133d0:	mov	r1, r6
   133d4:	add	r4, r3, r2
   133d8:	add	r4, r4, #1
   133dc:	strb	r5, [r3, r2]
   133e0:	mov	r0, r4
   133e4:	bl	11328 <strcpy@plt>
   133e8:	mov	r0, r6
   133ec:	bl	113e8 <strlen@plt>
   133f0:	ldr	r2, [pc, #368]	; 13568 <__assert_fail@plt+0x2000>
   133f4:	add	r3, r4, r0
   133f8:	add	r3, r3, #1
   133fc:	sub	r3, r3, r2
   13400:	str	r3, [sp, #36]	; 0x24
   13404:	strb	r5, [r4, r0]
   13408:	str	r5, [sp, #40]	; 0x28
   1340c:	b	1312c <__assert_fail@plt+0x1bc4>
   13410:	ldr	r0, [pc, #320]	; 13558 <__assert_fail@plt+0x1ff0>
   13414:	ldr	r3, [r4, #4]
   13418:	ldr	r1, [pc, #376]	; 13598 <__assert_fail@plt+0x2030>
   1341c:	ldr	r2, [r0, #4]
   13420:	vldr	s6, [r0]
   13424:	smull	ip, r0, r1, r3
   13428:	vldr	s8, [r4]
   1342c:	vldr	d5, [pc, #276]	; 13548 <__assert_fail@plt+0x1fe0>
   13430:	smull	ip, r1, r1, r2
   13434:	vcvt.f64.s32	d3, s6
   13438:	vcvt.f64.s32	d4, s8
   1343c:	ldr	r4, [sp, #44]	; 0x2c
   13440:	asr	r2, r2, #31
   13444:	asr	r3, r3, #31
   13448:	rsb	r3, r3, r0, asr #13
   1344c:	rsb	r2, r2, r1, asr #13
   13450:	vmov	s14, r3
   13454:	vmov	s15, r2
   13458:	ldr	r1, [pc, #316]	; 1359c <__assert_fail@plt+0x2034>
   1345c:	mov	r2, r4
   13460:	ldr	r0, [pc, #312]	; 135a0 <__assert_fail@plt+0x2038>
   13464:	vcvt.f64.s32	d6, s15
   13468:	vcvt.f64.s32	d7, s14
   1346c:	vmla.f64	d6, d3, d5
   13470:	vmla.f64	d7, d4, d5
   13474:	vsub.f64	d7, d7, d6
   13478:	vdiv.f64	d8, d7, d5
   1347c:	vstr	d8, [sp]
   13480:	bl	11220 <printf@plt>
   13484:	ldr	r3, [r5, #4]
   13488:	cmp	r3, #0
   1348c:	beq	134b0 <__assert_fail@plt+0x1f48>
   13490:	vmov	s15, r4
   13494:	vldr	d6, [pc, #180]	; 13550 <__assert_fail@plt+0x1fe8>
   13498:	ldr	r0, [pc, #260]	; 135a4 <__assert_fail@plt+0x203c>
   1349c:	vcvt.f64.u32	d7, s15
   134a0:	vmul.f64	d7, d7, d6
   134a4:	vdiv.f64	d6, d7, d8
   134a8:	vmov	r2, r3, d6
   134ac:	bl	11220 <printf@plt>
   134b0:	ldr	r3, [pc, #240]	; 135a8 <__assert_fail@plt+0x2040>
   134b4:	mov	r0, #10
   134b8:	ldr	r1, [r3]
   134bc:	bl	114d8 <putc@plt>
   134c0:	add	sp, sp, #188	; 0xbc
   134c4:	vpop	{d8}
   134c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134cc:	ldr	r0, [pc, #216]	; 135ac <__assert_fail@plt+0x2044>
   134d0:	bl	11220 <printf@plt>
   134d4:	b	13290 <__assert_fail@plt+0x1d28>
   134d8:	ldr	r1, [sp, #52]	; 0x34
   134dc:	sub	r2, fp, #4
   134e0:	mov	r3, r1
   134e4:	ldr	r0, [sp, #12]
   134e8:	add	r1, sp, #28
   134ec:	bl	13b5c <__assert_fail@plt+0x25f4>
   134f0:	str	r0, [sp, #36]	; 0x24
   134f4:	ldr	r3, [sp, #36]	; 0x24
   134f8:	cmp	r3, #0
   134fc:	blt	13534 <__assert_fail@plt+0x1fcc>
   13500:	ldr	r3, [sp, #36]	; 0x24
   13504:	ldr	r2, [sp, #44]	; 0x2c
   13508:	add	r3, r3, r2
   1350c:	str	r3, [sp, #44]	; 0x2c
   13510:	ldr	r3, [sp, #36]	; 0x24
   13514:	cmp	r3, #512	; 0x200
   13518:	bne	132d8 <__assert_fail@plt+0x1d70>
   1351c:	b	130e4 <__assert_fail@plt+0x1b7c>
   13520:	mov	r0, #0
   13524:	bl	112d4 <alarm@plt>
   13528:	ldr	r0, [pc, #128]	; 135b0 <__assert_fail@plt+0x2048>
   1352c:	bl	11304 <perror@plt>
   13530:	b	132d8 <__assert_fail@plt+0x1d70>
   13534:	bl	1140c <__errno_location@plt>
   13538:	ldr	r0, [r0]
   1353c:	add	r0, r0, #100	; 0x64
   13540:	bl	11da8 <__assert_fail@plt+0x840>
   13544:	b	132d8 <__assert_fail@plt+0x1d70>
   13548:	andeq	r0, r0, r0
   1354c:	eormi	r0, r4, r0
   13550:	andeq	r0, r0, r0
   13554:	eormi	r0, r0, r0
   13558:	andeq	pc, r2, ip, lsr #21
   1355c:	andeq	sp, r1, ip, lsr #29
   13560:	strdeq	sp, [r1], -r8
   13564:	andeq	r1, r1, ip, asr #26
   13568:	andeq	pc, r2, r0, asr #10
   1356c:	andeq	pc, r2, r8, lsr #21
   13570:	andeq	pc, r2, r8, asr #14
   13574:	andeq	pc, r2, ip, asr #2
   13578:	muleq	r1, r0, sp
   1357c:	andeq	pc, r2, r4, ror #8
   13580:	andeq	pc, r2, r4, ror r4	; <UNPREDICTABLE>
   13584:	muleq	r1, ip, sp
   13588:			; <UNDEFINED> instruction: 0x0002fab4
   1358c:	andeq	sp, r1, r8, lsl #23
   13590:	strdeq	r0, [r0], -r6
   13594:	andeq	pc, r2, r2, asr #10
   13598:	ldrbtne	fp, [r8], #1417	; 0x589
   1359c:			; <UNDEFINED> instruction: 0x0001deb0
   135a0:	ldrdeq	sp, [r1], -r0
   135a4:	andeq	sp, r1, ip, ror #27
   135a8:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   135ac:			; <UNDEFINED> instruction: 0x0001ddb0
   135b0:	andeq	sp, r1, r0, lsl #27
   135b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135b8:	sub	sp, sp, #28
   135bc:	cmp	r0, #1
   135c0:	str	r0, [sp, #20]
   135c4:	str	r1, [sp, #16]
   135c8:	movgt	r4, r0
   135cc:	ble	13880 <__assert_fail@plt+0x2318>
   135d0:	ldr	r7, [pc, #808]	; 13900 <__assert_fail@plt+0x2398>
   135d4:	ldr	r5, [sp, #16]
   135d8:	ldr	r3, [r7, #8]
   135dc:	cmp	r3, #0
   135e0:	beq	137d8 <__assert_fail@plt+0x2270>
   135e4:	ldr	sl, [pc, #792]	; 13904 <__assert_fail@plt+0x239c>
   135e8:	ldr	fp, [pc, #792]	; 13908 <__assert_fail@plt+0x23a0>
   135ec:	mov	r6, #1
   135f0:	mov	r9, #58	; 0x3a
   135f4:	ldr	r5, [r5, r6, lsl #2]
   135f8:	mov	r1, r9
   135fc:	mov	r0, r5
   13600:	bl	113f4 <strchr@plt>
   13604:	lsl	r2, r6, #2
   13608:	subs	r8, r0, #0
   1360c:	beq	1364c <__assert_fail@plt+0x20e4>
   13610:	cmp	r5, r8
   13614:	addeq	r5, r5, #1
   13618:	beq	1364c <__assert_fail@plt+0x20e4>
   1361c:	ldrb	r3, [r5]
   13620:	cmp	r3, #91	; 0x5b
   13624:	movne	r3, #0
   13628:	strbne	r3, [r8]
   1362c:	addne	r8, r8, #1
   13630:	beq	136f8 <__assert_fail@plt+0x2190>
   13634:	mov	r0, r5
   13638:	bl	11a90 <__assert_fail@plt+0x528>
   1363c:	cmp	r0, #0
   13640:	bne	136d8 <__assert_fail@plt+0x2170>
   13644:	mov	r5, r8
   13648:	ldr	r4, [sp, #20]
   1364c:	cmp	r4, #3
   13650:	ble	13764 <__assert_fail@plt+0x21fc>
   13654:	ldrb	r3, [r5]
   13658:	cmp	r3, #0
   1365c:	movne	r4, #47	; 0x2f
   13660:	bne	13684 <__assert_fail@plt+0x211c>
   13664:	b	13698 <__assert_fail@plt+0x2130>
   13668:	ldrb	r3, [r0, #1]
   1366c:	cmp	r3, #0
   13670:	bne	136f0 <__assert_fail@plt+0x2188>
   13674:	strb	r3, [r0]
   13678:	ldrb	r3, [r5]
   1367c:	cmp	r3, #0
   13680:	beq	13698 <__assert_fail@plt+0x2130>
   13684:	mov	r1, r4
   13688:	mov	r0, r5
   1368c:	bl	114b4 <strrchr@plt>
   13690:	cmp	r0, #0
   13694:	bne	13668 <__assert_fail@plt+0x2100>
   13698:	mov	r4, r5
   1369c:	mov	r1, #420	; 0x1a4
   136a0:	mov	r0, r4
   136a4:	bl	11340 <creat64@plt>
   136a8:	subs	r8, r0, #0
   136ac:	blt	137b4 <__assert_fail@plt+0x224c>
   136b0:	ldr	r3, [r7, #4]
   136b4:	cmp	r3, #0
   136b8:	bne	13748 <__assert_fail@plt+0x21e0>
   136bc:	ldrh	r3, [r7, #144]	; 0x90
   136c0:	mov	r1, r5
   136c4:	mov	r0, r8
   136c8:	rev16	r3, r3
   136cc:	mov	r2, sl
   136d0:	strh	r3, [r7, #18]
   136d4:	bl	1306c <__assert_fail@plt+0x1b04>
   136d8:	ldr	r4, [sp, #20]
   136dc:	add	r6, r6, #1
   136e0:	cmp	r4, r6
   136e4:	ble	137ac <__assert_fail@plt+0x2244>
   136e8:	ldr	r5, [sp, #16]
   136ec:	b	135f4 <__assert_fail@plt+0x208c>
   136f0:	add	r4, r0, #1
   136f4:	b	1369c <__assert_fail@plt+0x2134>
   136f8:	mov	r0, r5
   136fc:	mov	r1, #93	; 0x5d
   13700:	str	r2, [sp, #12]
   13704:	bl	113f4 <strchr@plt>
   13708:	cmp	r0, #0
   1370c:	beq	13808 <__assert_fail@plt+0x22a0>
   13710:	ldrb	r3, [r0, #1]
   13714:	mov	r1, #0
   13718:	strb	r1, [r0]
   1371c:	cmp	r3, #58	; 0x3a
   13720:	ldr	r2, [sp, #12]
   13724:	ldr	r3, [sp, #16]
   13728:	addne	r5, r0, #1
   1372c:	addeq	r5, r0, #2
   13730:	ldr	r3, [r3, r2]
   13734:	adds	r3, r3, #1
   13738:	beq	13648 <__assert_fail@plt+0x20e0>
   1373c:	mov	r8, r5
   13740:	mov	r5, r3
   13744:	b	13634 <__assert_fail@plt+0x20cc>
   13748:	ldr	r1, [fp]
   1374c:	mov	r3, r4
   13750:	str	sl, [sp]
   13754:	mov	r2, r5
   13758:	ldr	r0, [pc, #428]	; 1390c <__assert_fail@plt+0x23a4>
   1375c:	bl	11220 <printf@plt>
   13760:	b	136bc <__assert_fail@plt+0x2154>
   13764:	bne	13834 <__assert_fail@plt+0x22cc>
   13768:	ldr	r3, [sp, #16]
   1376c:	ldr	r4, [r3, #8]
   13770:	mov	r1, #420	; 0x1a4
   13774:	mov	r0, r4
   13778:	bl	11340 <creat64@plt>
   1377c:	subs	r6, r0, #0
   13780:	blt	138dc <__assert_fail@plt+0x2374>
   13784:	ldr	r3, [r7, #4]
   13788:	cmp	r3, #0
   1378c:	bne	138b0 <__assert_fail@plt+0x2348>
   13790:	ldrh	r3, [r7, #144]	; 0x90
   13794:	mov	r1, r5
   13798:	mov	r0, r6
   1379c:	rev16	r3, r3
   137a0:	ldr	r2, [pc, #348]	; 13904 <__assert_fail@plt+0x239c>
   137a4:	strh	r3, [r7, #18]
   137a8:	bl	1306c <__assert_fail@plt+0x1b04>
   137ac:	add	sp, sp, #28
   137b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137b4:	ldr	r3, [pc, #340]	; 13910 <__assert_fail@plt+0x23a8>
   137b8:	mov	r2, #6
   137bc:	mov	r1, #1
   137c0:	ldr	r3, [r3]
   137c4:	ldr	r0, [pc, #328]	; 13914 <__assert_fail@plt+0x23ac>
   137c8:	bl	11310 <fwrite@plt>
   137cc:	mov	r0, r4
   137d0:	bl	11304 <perror@plt>
   137d4:	b	136d8 <__assert_fail@plt+0x2170>
   137d8:	mov	r6, #1
   137dc:	mov	r8, r5
   137e0:	mov	r9, #58	; 0x3a
   137e4:	mov	r1, r9
   137e8:	ldr	r0, [r8, #4]!
   137ec:	bl	113f4 <strchr@plt>
   137f0:	add	r6, r6, #1
   137f4:	cmp	r0, #0
   137f8:	beq	13810 <__assert_fail@plt+0x22a8>
   137fc:	cmp	r6, r4
   13800:	blt	137e4 <__assert_fail@plt+0x227c>
   13804:	b	135e4 <__assert_fail@plt+0x207c>
   13808:	mov	r5, r8
   1380c:	b	1364c <__assert_fail@plt+0x20e4>
   13810:	ldr	r4, [r5]
   13814:	ldr	r0, [pc, #252]	; 13918 <__assert_fail@plt+0x23b0>
   13818:	mov	r1, r4
   1381c:	bl	11220 <printf@plt>
   13820:	mov	r1, r4
   13824:	ldr	r0, [pc, #240]	; 1391c <__assert_fail@plt+0x23b4>
   13828:	bl	11220 <printf@plt>
   1382c:	add	sp, sp, #28
   13830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13834:	ldrb	r3, [r5]
   13838:	cmp	r3, #0
   1383c:	movne	r4, #47	; 0x2f
   13840:	bne	13864 <__assert_fail@plt+0x22fc>
   13844:	b	13878 <__assert_fail@plt+0x2310>
   13848:	ldrb	r3, [r0, #1]
   1384c:	cmp	r3, #0
   13850:	bne	138d4 <__assert_fail@plt+0x236c>
   13854:	strb	r3, [r0]
   13858:	ldrb	r3, [r5]
   1385c:	cmp	r3, #0
   13860:	beq	13878 <__assert_fail@plt+0x2310>
   13864:	mov	r1, r4
   13868:	mov	r0, r5
   1386c:	bl	114b4 <strrchr@plt>
   13870:	cmp	r0, #0
   13874:	bne	13848 <__assert_fail@plt+0x22e0>
   13878:	mov	r4, r5
   1387c:	b	13770 <__assert_fail@plt+0x2208>
   13880:	add	r3, sp, #16
   13884:	add	r2, sp, #20
   13888:	ldr	r1, [pc, #144]	; 13920 <__assert_fail@plt+0x23b8>
   1388c:	ldr	r0, [pc, #144]	; 13924 <__assert_fail@plt+0x23bc>
   13890:	bl	12290 <__assert_fail@plt+0xd28>
   13894:	ldr	r4, [sp, #20]
   13898:	cmp	r4, #1
   1389c:	bgt	135d0 <__assert_fail@plt+0x2068>
   138a0:	ldr	r3, [sp, #16]
   138a4:	ldr	r0, [pc, #108]	; 13918 <__assert_fail@plt+0x23b0>
   138a8:	ldr	r4, [r3]
   138ac:	b	13818 <__assert_fail@plt+0x22b0>
   138b0:	ldr	r1, [pc, #80]	; 13908 <__assert_fail@plt+0x23a0>
   138b4:	ldr	r2, [pc, #72]	; 13904 <__assert_fail@plt+0x239c>
   138b8:	mov	r3, r4
   138bc:	ldr	r1, [r1]
   138c0:	ldr	r0, [pc, #68]	; 1390c <__assert_fail@plt+0x23a4>
   138c4:	str	r2, [sp]
   138c8:	mov	r2, r5
   138cc:	bl	11220 <printf@plt>
   138d0:	b	13790 <__assert_fail@plt+0x2228>
   138d4:	add	r4, r0, #1
   138d8:	b	13770 <__assert_fail@plt+0x2208>
   138dc:	ldr	r3, [pc, #44]	; 13910 <__assert_fail@plt+0x23a8>
   138e0:	mov	r2, #6
   138e4:	mov	r1, #1
   138e8:	ldr	r3, [r3]
   138ec:	ldr	r0, [pc, #32]	; 13914 <__assert_fail@plt+0x23ac>
   138f0:	bl	11310 <fwrite@plt>
   138f4:	mov	r0, r4
   138f8:	bl	11304 <perror@plt>
   138fc:	b	137ac <__assert_fail@plt+0x2244>
   13900:	andeq	pc, r2, r4, ror #8
   13904:	andeq	pc, r2, r4, asr #21
   13908:	andeq	pc, r2, r0, asr #21
   1390c:	andeq	sp, r1, r4, lsr #30
   13910:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   13914:	andeq	sp, r1, r8, lsl #29
   13918:	andeq	sp, r1, ip, asr #29
   1391c:	strdeq	sp, [r1], -r8
   13920:			; <UNDEFINED> instruction: 0x0001debc
   13924:	andeq	sp, r1, r8, asr #29
   13928:	push	{r4, lr}
   1392c:	mov	r2, #0
   13930:	ldr	r3, [pc, #48]	; 13968 <__assert_fail@plt+0x2400>
   13934:	ldr	r0, [pc, #48]	; 1396c <__assert_fail@plt+0x2404>
   13938:	ldr	lr, [pc, #48]	; 13970 <__assert_fail@plt+0x2408>
   1393c:	mvn	r4, #0
   13940:	mvn	ip, #2
   13944:	mvn	r1, #1
   13948:	str	ip, [r0]
   1394c:	str	r1, [r0, #520]	; 0x208
   13950:	str	r2, [r3]
   13954:	str	r2, [r3, #4]
   13958:	str	r2, [r3, #8]
   1395c:	str	r4, [lr]
   13960:	add	r0, r0, #4
   13964:	pop	{r4, pc}
   13968:	strdeq	pc, [r2], -ip
   1396c:	andeq	pc, r2, ip, lsr #23
   13970:	andeq	pc, r2, r8, lsl #8
   13974:	push	{r4, r5, lr}
   13978:	mov	r2, #0
   1397c:	ldr	r3, [pc, #52]	; 139b8 <__assert_fail@plt+0x2450>
   13980:	ldr	r0, [pc, #52]	; 139bc <__assert_fail@plt+0x2454>
   13984:	ldr	lr, [pc, #52]	; 139c0 <__assert_fail@plt+0x2458>
   13988:	mov	r5, #1
   1398c:	mvn	r4, #0
   13990:	mvn	ip, #2
   13994:	mvn	r1, #1
   13998:	str	ip, [r0]
   1399c:	str	r1, [r0, #520]	; 0x208
   139a0:	str	r5, [r3, #8]
   139a4:	str	r2, [r3]
   139a8:	str	r2, [r3, #4]
   139ac:	str	r4, [lr]
   139b0:	add	r0, r0, #4
   139b4:	pop	{r4, r5, pc}
   139b8:	strdeq	pc, [r2], -ip
   139bc:	andeq	pc, r2, ip, lsr #23
   139c0:	andeq	pc, r2, r8, lsl #8
   139c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139c8:	sub	sp, sp, #20
   139cc:	ldr	r5, [pc, #264]	; 13adc <__assert_fail@plt+0x2574>
   139d0:	ldr	sl, [pc, #264]	; 13ae0 <__assert_fail@plt+0x2578>
   139d4:	ldr	r3, [r5, #8]
   139d8:	str	r3, [sp, #4]
   139dc:	lsl	r2, r3, #6
   139e0:	add	r4, r2, r3
   139e4:	str	r2, [sp, #8]
   139e8:	lsl	r4, r4, #3
   139ec:	ldr	r3, [sl, r4]
   139f0:	cmn	r3, #2
   139f4:	beq	13a00 <__assert_fail@plt+0x2498>
   139f8:	add	sp, sp, #20
   139fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a00:	cmp	r1, #0
   13a04:	ldr	r3, [sp, #4]
   13a08:	add	r1, r4, #4
   13a0c:	clz	r3, r3
   13a10:	lsr	r3, r3, #5
   13a14:	str	r3, [r5, #8]
   13a18:	add	r9, sl, r1
   13a1c:	beq	13ac4 <__assert_fail@plt+0x255c>
   13a20:	add	r3, r9, #4
   13a24:	mov	r6, r0
   13a28:	str	r3, [sp, #12]
   13a2c:	ldr	r8, [pc, #176]	; 13ae4 <__assert_fail@plt+0x257c>
   13a30:	add	r9, r9, #516	; 0x204
   13a34:	mov	r4, r3
   13a38:	mov	r7, #13
   13a3c:	mov	fp, #0
   13a40:	b	13a64 <__assert_fail@plt+0x24fc>
   13a44:	ldr	r3, [r8]
   13a48:	str	fp, [r5]
   13a4c:	cmp	r3, #10
   13a50:	moveq	r3, #10
   13a54:	movne	r3, #0
   13a58:	strb	r3, [r4], #1
   13a5c:	cmp	r4, r9
   13a60:	beq	13aa8 <__assert_fail@plt+0x2540>
   13a64:	ldr	r3, [r5]
   13a68:	cmp	r3, #0
   13a6c:	bne	13a44 <__assert_fail@plt+0x24dc>
   13a70:	mov	r0, r6
   13a74:	bl	11550 <getc@plt>
   13a78:	mov	r3, r7
   13a7c:	cmn	r0, #1
   13a80:	beq	13aa8 <__assert_fail@plt+0x2540>
   13a84:	cmp	r0, #13
   13a88:	cmpne	r0, #10
   13a8c:	uxtbne	r3, r0
   13a90:	moveq	r2, #1
   13a94:	streq	r0, [r8]
   13a98:	streq	r2, [r5]
   13a9c:	strb	r3, [r4], #1
   13aa0:	cmp	r4, r9
   13aa4:	bne	13a64 <__assert_fail@plt+0x24fc>
   13aa8:	ldmib	sp, {r2, r3}
   13aac:	add	r8, r3, r2
   13ab0:	ldr	r3, [sp, #12]
   13ab4:	sub	r4, r4, r3
   13ab8:	str	r4, [sl, r8, lsl #3]
   13abc:	add	sp, sp, #20
   13ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ac4:	bl	11460 <fileno@plt>
   13ac8:	add	r1, r9, #4
   13acc:	mov	r2, #512	; 0x200
   13ad0:	bl	1122c <read@plt>
   13ad4:	str	r0, [sl, r4]
   13ad8:	b	139f8 <__assert_fail@plt+0x2490>
   13adc:	strdeq	pc, [r2], -ip
   13ae0:	andeq	pc, r2, ip, lsr #23
   13ae4:	andeq	pc, r2, r8, lsl #8
   13ae8:	ldr	ip, [pc, #100]	; 13b54 <__assert_fail@plt+0x25ec>
   13aec:	push	{r4, r5, r6, r7, r8, lr}
   13af0:	mvn	lr, #1
   13af4:	ldr	r3, [ip, #4]
   13af8:	clz	r5, r3
   13afc:	lsr	r5, r5, #5
   13b00:	ldr	r4, [pc, #80]	; 13b58 <__assert_fail@plt+0x25f0>
   13b04:	lsl	r6, r5, #6
   13b08:	add	r7, r6, r5
   13b0c:	add	r3, r3, r3, lsl #6
   13b10:	lsl	r7, r7, #3
   13b14:	str	lr, [r4, r3, lsl #3]
   13b18:	ldr	r3, [r4, r7]
   13b1c:	mov	r8, r1
   13b20:	cmp	r3, lr
   13b24:	str	r5, [ip, #4]
   13b28:	beq	13b44 <__assert_fail@plt+0x25dc>
   13b2c:	add	r5, r6, r5
   13b30:	mov	r0, r3
   13b34:	add	r4, r4, r5, lsl #3
   13b38:	add	r4, r4, #4
   13b3c:	str	r4, [r8]
   13b40:	pop	{r4, r5, r6, r7, r8, pc}
   13b44:	mov	r1, r2
   13b48:	bl	139c4 <__assert_fail@plt+0x245c>
   13b4c:	ldr	r3, [r4, r7]
   13b50:	b	13b2c <__assert_fail@plt+0x25c4>
   13b54:	strdeq	pc, [r2], -ip
   13b58:	andeq	pc, r2, ip, lsr #23
   13b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b60:	mov	fp, r2
   13b64:	ldr	r9, [pc, #296]	; 13c94 <__assert_fail@plt+0x272c>
   13b68:	ldr	r6, [pc, #296]	; 13c98 <__assert_fail@plt+0x2730>
   13b6c:	sub	sp, sp, #20
   13b70:	ldr	r2, [r9, #4]
   13b74:	clz	lr, r2
   13b78:	lsr	lr, lr, #5
   13b7c:	add	r2, r2, r2, lsl #6
   13b80:	lsl	ip, lr, #6
   13b84:	add	r4, ip, lr
   13b88:	str	fp, [r6, r2, lsl #3]
   13b8c:	ldr	r2, [r6, r4, lsl #3]
   13b90:	str	r1, [sp, #12]
   13b94:	cmn	r2, #2
   13b98:	str	lr, [r9, #4]
   13b9c:	beq	13c30 <__assert_fail@plt+0x26c8>
   13ba0:	ldr	r1, [r9, #8]
   13ba4:	add	r2, r1, r1, lsl #6
   13ba8:	lsl	r2, r2, #3
   13bac:	ldr	r7, [r6, r2]
   13bb0:	cmn	r7, #1
   13bb4:	blt	13c30 <__assert_fail@plt+0x26c8>
   13bb8:	clz	r1, r1
   13bbc:	mvn	r4, #1
   13bc0:	lsr	r1, r1, #5
   13bc4:	add	r5, r6, r2
   13bc8:	cmp	r7, #0
   13bcc:	str	r1, [r9, #8]
   13bd0:	str	r4, [r6, r2]
   13bd4:	add	r5, r5, #8
   13bd8:	ble	13c30 <__assert_fail@plt+0x26c8>
   13bdc:	cmp	r3, #0
   13be0:	beq	13c78 <__assert_fail@plt+0x2710>
   13be4:	ldr	r8, [pc, #176]	; 13c9c <__assert_fail@plt+0x2734>
   13be8:	mov	sl, r0
   13bec:	add	r7, r5, r7
   13bf0:	ldr	r4, [r8]
   13bf4:	cmp	r4, #13
   13bf8:	ldrb	r4, [r5], #1
   13bfc:	bne	13c10 <__assert_fail@plt+0x26a8>
   13c00:	cmp	r4, #10
   13c04:	beq	13c5c <__assert_fail@plt+0x26f4>
   13c08:	cmp	r4, #0
   13c0c:	beq	13c1c <__assert_fail@plt+0x26b4>
   13c10:	mov	r1, sl
   13c14:	mov	r0, r4
   13c18:	bl	114d8 <putc@plt>
   13c1c:	cmp	r5, r7
   13c20:	str	r4, [r8]
   13c24:	bne	13bf4 <__assert_fail@plt+0x268c>
   13c28:	ldr	lr, [r9, #4]
   13c2c:	lsl	ip, lr, #6
   13c30:	add	ip, ip, lr
   13c34:	mvn	r2, #2
   13c38:	lsl	ip, ip, #3
   13c3c:	add	r3, ip, #4
   13c40:	str	r2, [r6, ip]
   13c44:	ldr	r2, [sp, #12]
   13c48:	add	r3, r6, r3
   13c4c:	mov	r0, fp
   13c50:	str	r3, [r2]
   13c54:	add	sp, sp, #20
   13c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c5c:	mov	r3, #1
   13c60:	str	r3, [sp]
   13c64:	mvn	r2, #0
   13c68:	mvn	r3, #0
   13c6c:	mov	r0, sl
   13c70:	bl	11484 <fseeko64@plt>
   13c74:	b	13c10 <__assert_fail@plt+0x26a8>
   13c78:	bl	11460 <fileno@plt>
   13c7c:	mov	r2, r7
   13c80:	mov	r1, r5
   13c84:	bl	11454 <write@plt>
   13c88:	ldr	lr, [r9, #4]
   13c8c:	lsl	ip, lr, #6
   13c90:	b	13c30 <__assert_fail@plt+0x26c8>
   13c94:	strdeq	pc, [r2], -ip
   13c98:	andeq	pc, r2, ip, lsr #23
   13c9c:	andeq	pc, r2, r8, lsl #8
   13ca0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ca4:	sub	sp, sp, #8
   13ca8:	ldr	lr, [pc, #224]	; 13d90 <__assert_fail@plt+0x2828>
   13cac:	ldr	ip, [pc, #224]	; 13d94 <__assert_fail@plt+0x282c>
   13cb0:	ldr	r3, [lr, #8]
   13cb4:	add	r2, r3, r3, lsl #6
   13cb8:	lsl	r2, r2, #3
   13cbc:	ldr	r9, [ip, r2]
   13cc0:	cmn	r9, #1
   13cc4:	blt	13d60 <__assert_fail@plt+0x27f8>
   13cc8:	clz	r3, r3
   13ccc:	mvn	r4, #1
   13cd0:	lsr	r3, r3, #5
   13cd4:	add	r5, ip, r2
   13cd8:	cmp	r9, #0
   13cdc:	str	r3, [lr, #8]
   13ce0:	str	r4, [ip, r2]
   13ce4:	add	r5, r5, #8
   13ce8:	ble	13d88 <__assert_fail@plt+0x2820>
   13cec:	cmp	r1, #0
   13cf0:	beq	13d70 <__assert_fail@plt+0x2808>
   13cf4:	ldr	r7, [pc, #156]	; 13d98 <__assert_fail@plt+0x2830>
   13cf8:	mov	r6, r0
   13cfc:	add	r8, r5, r9
   13d00:	ldr	r4, [r7]
   13d04:	mov	sl, #1
   13d08:	cmp	r4, #13
   13d0c:	ldrb	r4, [r5], #1
   13d10:	bne	13d24 <__assert_fail@plt+0x27bc>
   13d14:	cmp	r4, #10
   13d18:	beq	13d48 <__assert_fail@plt+0x27e0>
   13d1c:	cmp	r4, #0
   13d20:	beq	13d30 <__assert_fail@plt+0x27c8>
   13d24:	mov	r1, r6
   13d28:	mov	r0, r4
   13d2c:	bl	114d8 <putc@plt>
   13d30:	cmp	r5, r8
   13d34:	str	r4, [r7]
   13d38:	bne	13d08 <__assert_fail@plt+0x27a0>
   13d3c:	mov	r0, r9
   13d40:	add	sp, sp, #8
   13d44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d48:	str	sl, [sp]
   13d4c:	mvn	r2, #0
   13d50:	mvn	r3, #0
   13d54:	mov	r0, r6
   13d58:	bl	11484 <fseeko64@plt>
   13d5c:	b	13d24 <__assert_fail@plt+0x27bc>
   13d60:	mov	r9, #0
   13d64:	mov	r0, r9
   13d68:	add	sp, sp, #8
   13d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d70:	bl	11460 <fileno@plt>
   13d74:	mov	r2, r9
   13d78:	mov	r1, r5
   13d7c:	add	sp, sp, #8
   13d80:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d84:	b	11454 <write@plt>
   13d88:	mvn	r9, #0
   13d8c:	b	13d3c <__assert_fail@plt+0x27d4>
   13d90:	strdeq	pc, [r2], -ip
   13d94:	andeq	pc, r2, ip, lsr #23
   13d98:	andeq	pc, r2, r8, lsl #8
   13d9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13da0:	mov	r4, #0
   13da4:	sub	sp, sp, #664	; 0x298
   13da8:	ldr	r7, [pc, #96]	; 13e10 <__assert_fail@plt+0x28a8>
   13dac:	mov	r5, r0
   13db0:	mov	r6, r4
   13db4:	mov	sl, #128	; 0x80
   13db8:	add	r9, sp, #20
   13dbc:	add	r8, sp, #16
   13dc0:	b	13dd8 <__assert_fail@plt+0x2870>
   13dc4:	str	r8, [sp, #4]
   13dc8:	str	r9, [sp]
   13dcc:	add	r4, r4, #1
   13dd0:	str	sl, [sp, #16]
   13dd4:	bl	112c8 <recvfrom@plt>
   13dd8:	add	r2, sp, #12
   13ddc:	mov	r1, r7
   13de0:	mov	r0, r5
   13de4:	bl	19ef0 <argp_parse@@Base+0x1084>
   13de8:	ldr	r2, [sp, #12]
   13dec:	mov	r3, r6
   13df0:	cmp	r2, #0
   13df4:	add	r1, sp, #148	; 0x94
   13df8:	mov	r2, #516	; 0x204
   13dfc:	mov	r0, r5
   13e00:	bne	13dc4 <__assert_fail@plt+0x285c>
   13e04:	mov	r0, r4
   13e08:	add	sp, sp, #664	; 0x298
   13e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e10:	andeq	r5, r0, fp, lsl r4
   13e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e18:	mov	r7, r3
   13e1c:	ldr	sl, [r0, #12]
   13e20:	sub	sp, sp, #36	; 0x24
   13e24:	ldr	r3, [r0, #16]
   13e28:	cmp	sl, #0
   13e2c:	mov	fp, r0
   13e30:	mov	r6, r2
   13e34:	str	r3, [sp, #16]
   13e38:	mov	r9, r1
   13e3c:	ldr	r8, [sp, #72]	; 0x48
   13e40:	ldr	r5, [sp, #76]	; 0x4c
   13e44:	beq	14214 <__assert_fail@plt+0x2cac>
   13e48:	mov	r1, #11
   13e4c:	mov	r0, sl
   13e50:	bl	113f4 <strchr@plt>
   13e54:	cmp	r6, #0
   13e58:	bne	14130 <__assert_fail@plt+0x2bc8>
   13e5c:	cmp	r0, #0
   13e60:	ldr	r3, [fp, #20]
   13e64:	beq	1436c <__assert_fail@plt+0x2e04>
   13e68:	cmp	r3, #0
   13e6c:	sub	r4, r0, sl
   13e70:	beq	14304 <__assert_fail@plt+0x2d9c>
   13e74:	cmp	r4, #0
   13e78:	beq	142a4 <__assert_fail@plt+0x2d3c>
   13e7c:	mov	r0, sl
   13e80:	mov	r1, r4
   13e84:	bl	1128c <strndup@plt>
   13e88:	mov	r3, #1
   13e8c:	str	r3, [sp, #24]
   13e90:	mov	sl, r0
   13e94:	adds	r3, r0, #0
   13e98:	movne	r3, #1
   13e9c:	str	r3, [sp, #20]
   13ea0:	mov	r1, r9
   13ea4:	mov	r0, fp
   13ea8:	bl	19c8c <argp_parse@@Base+0xe20>
   13eac:	ldr	r3, [fp, #20]
   13eb0:	str	r0, [sp, #12]
   13eb4:	ldr	r0, [pc, #1272]	; 143b4 <__assert_fail@plt+0x2e4c>
   13eb8:	ldr	r2, [sp, #12]
   13ebc:	mov	r1, sl
   13ec0:	blx	r3
   13ec4:	subs	r3, r0, #0
   13ec8:	beq	14254 <__assert_fail@plt+0x2cec>
   13ecc:	cmp	r7, #0
   13ed0:	beq	13ef4 <__assert_fail@plt+0x298c>
   13ed4:	ldr	r2, [r5, #28]
   13ed8:	ldr	r1, [r5, #32]
   13edc:	cmp	r2, r1
   13ee0:	bcs	1425c <__assert_fail@plt+0x2cf4>
   13ee4:	add	r0, r2, #1
   13ee8:	mov	r1, #10
   13eec:	str	r0, [r5, #28]
   13ef0:	strb	r1, [r2]
   13ef4:	ldr	r2, [sp, #24]
   13ef8:	cmp	sl, r3
   13efc:	movne	r2, #0
   13f00:	andeq	r2, r2, #1
   13f04:	cmp	r2, #0
   13f08:	beq	14174 <__assert_fail@plt+0x2c0c>
   13f0c:	ldr	r0, [r5, #28]
   13f10:	ldr	r1, [r5, #32]
   13f14:	add	r2, r0, r4
   13f18:	cmp	r1, r2
   13f1c:	bcs	141d4 <__assert_fail@plt+0x2c6c>
   13f20:	mov	r1, r4
   13f24:	mov	r0, r5
   13f28:	str	r3, [sp, #24]
   13f2c:	bl	1baac <argp_parse@@Base+0x2c40>
   13f30:	ldr	r3, [sp, #24]
   13f34:	cmp	r0, #0
   13f38:	bne	141d0 <__assert_fail@plt+0x2c68>
   13f3c:	ldr	r4, [r5, #28]
   13f40:	ldr	r1, [r5, #24]
   13f44:	ldr	r2, [r5, #16]
   13f48:	sub	r4, r4, r1
   13f4c:	cmp	r4, r2
   13f50:	bhi	141f8 <__assert_fail@plt+0x2c90>
   13f54:	ldr	r2, [r5, #20]
   13f58:	ldr	r1, [r5, #4]
   13f5c:	bic	r2, r2, r2, asr #31
   13f60:	cmp	r1, r2
   13f64:	bcs	13f88 <__assert_fail@plt+0x2a20>
   13f68:	ldr	r2, [r5, #28]
   13f6c:	ldr	r1, [r5, #32]
   13f70:	cmp	r2, r1
   13f74:	bcs	14280 <__assert_fail@plt+0x2d18>
   13f78:	add	r0, r2, #1
   13f7c:	mov	r1, #10
   13f80:	str	r0, [r5, #28]
   13f84:	strb	r1, [r2]
   13f88:	cmp	sl, r3
   13f8c:	moveq	r4, #1
   13f90:	beq	13fa0 <__assert_fail@plt+0x2a38>
   13f94:	mov	r0, r3
   13f98:	bl	19de8 <argp_parse@@Base+0xf7c>
   13f9c:	mov	r4, #1
   13fa0:	ldr	r3, [sp, #20]
   13fa4:	cmp	r3, #0
   13fa8:	beq	13fc0 <__assert_fail@plt+0x2a58>
   13fac:	ldr	r3, [fp, #20]
   13fb0:	cmp	r3, #0
   13fb4:	beq	140a4 <__assert_fail@plt+0x2b3c>
   13fb8:	mov	r0, sl
   13fbc:	bl	19de8 <argp_parse@@Base+0xf7c>
   13fc0:	cmp	r6, #0
   13fc4:	beq	140a4 <__assert_fail@plt+0x2b3c>
   13fc8:	ldr	r3, [fp, #20]
   13fcc:	cmp	r3, #0
   13fd0:	beq	140a4 <__assert_fail@plt+0x2b3c>
   13fd4:	ldr	r2, [sp, #12]
   13fd8:	mov	r1, #0
   13fdc:	ldr	r0, [pc, #980]	; 143b8 <__assert_fail@plt+0x2e50>
   13fe0:	blx	r3
   13fe4:	subs	sl, r0, #0
   13fe8:	beq	140a4 <__assert_fail@plt+0x2b3c>
   13fec:	orrs	r3, r7, r4
   13ff0:	beq	14014 <__assert_fail@plt+0x2aac>
   13ff4:	ldr	r3, [r5, #28]
   13ff8:	ldr	r2, [r5, #32]
   13ffc:	cmp	r3, r2
   14000:	bcs	1433c <__assert_fail@plt+0x2dd4>
   14004:	add	r1, r3, #1
   14008:	mov	r2, #10
   1400c:	str	r1, [r5, #28]
   14010:	strb	r2, [r3]
   14014:	mov	r0, sl
   14018:	bl	113e8 <strlen@plt>
   1401c:	subs	r4, r0, #0
   14020:	beq	1404c <__assert_fail@plt+0x2ae4>
   14024:	ldr	r0, [r5, #28]
   14028:	ldr	r2, [r5, #32]
   1402c:	add	r3, r0, r4
   14030:	cmp	r2, r3
   14034:	bcs	142b4 <__assert_fail@plt+0x2d4c>
   14038:	mov	r1, r4
   1403c:	mov	r0, r5
   14040:	bl	1baac <argp_parse@@Base+0x2c40>
   14044:	cmp	r0, #0
   14048:	bne	142b0 <__assert_fail@plt+0x2d48>
   1404c:	mov	r0, sl
   14050:	bl	19de8 <argp_parse@@Base+0xf7c>
   14054:	ldr	r3, [r5, #28]
   14058:	ldr	r1, [r5, #24]
   1405c:	ldr	r2, [r5, #16]
   14060:	sub	r3, r3, r1
   14064:	cmp	r3, r2
   14068:	bhi	142d0 <__assert_fail@plt+0x2d68>
   1406c:	ldr	r3, [r5, #20]
   14070:	ldr	r2, [r5, #4]
   14074:	bic	r3, r3, r3, asr #31
   14078:	cmp	r2, r3
   1407c:	bcs	1420c <__assert_fail@plt+0x2ca4>
   14080:	ldr	r3, [r5, #28]
   14084:	ldr	r2, [r5, #32]
   14088:	cmp	r3, r2
   1408c:	bcs	14320 <__assert_fail@plt+0x2db8>
   14090:	mov	r4, #1
   14094:	add	r2, r3, r4
   14098:	str	r2, [r5, #28]
   1409c:	mov	r2, #10
   140a0:	strb	r2, [r3]
   140a4:	ldr	fp, [sp, #16]
   140a8:	cmp	fp, #0
   140ac:	beq	14124 <__assert_fail@plt+0x2bbc>
   140b0:	ldr	r3, [fp]
   140b4:	cmp	r3, #0
   140b8:	beq	14124 <__assert_fail@plt+0x2bbc>
   140bc:	eor	r2, r4, #1
   140c0:	and	r2, r2, #1
   140c4:	clz	sl, r8
   140c8:	lsr	sl, sl, #5
   140cc:	orrs	r2, sl, r2
   140d0:	bne	140ec <__assert_fail@plt+0x2b84>
   140d4:	b	14358 <__assert_fail@plt+0x2df0>
   140d8:	cmp	r4, #0
   140dc:	movne	r2, sl
   140e0:	orreq	r2, sl, #1
   140e4:	cmp	r2, #0
   140e8:	beq	14124 <__assert_fail@plt+0x2bbc>
   140ec:	orrs	r2, r7, r4
   140f0:	mov	r0, r3
   140f4:	str	r5, [sp, #4]
   140f8:	movne	r3, #1
   140fc:	moveq	r3, #0
   14100:	str	r8, [sp]
   14104:	mov	r2, r6
   14108:	mov	r1, r9
   1410c:	bl	13e14 <__assert_fail@plt+0x28ac>
   14110:	ldr	r3, [fp, #16]
   14114:	add	fp, fp, #16
   14118:	cmp	r3, #0
   1411c:	orr	r4, r4, r0
   14120:	bne	140d8 <__assert_fail@plt+0x2b70>
   14124:	mov	r0, r4
   14128:	add	sp, sp, #36	; 0x24
   1412c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14130:	cmp	r0, #0
   14134:	addne	sl, r0, #1
   14138:	beq	142fc <__assert_fail@plt+0x2d94>
   1413c:	ldr	r3, [fp, #20]
   14140:	cmp	r3, #0
   14144:	beq	142dc <__assert_fail@plt+0x2d74>
   14148:	mov	r3, #0
   1414c:	mov	r1, r9
   14150:	mov	r0, fp
   14154:	mov	r4, r3
   14158:	str	r3, [sp, #20]
   1415c:	bl	19c8c <argp_parse@@Base+0xe20>
   14160:	str	r4, [sp, #24]
   14164:	ldr	r3, [fp, #20]
   14168:	str	r0, [sp, #12]
   1416c:	ldr	r0, [pc, #584]	; 143bc <__assert_fail@plt+0x2e54>
   14170:	b	13eb8 <__assert_fail@plt+0x2950>
   14174:	mov	r0, r3
   14178:	str	r3, [sp, #24]
   1417c:	bl	113e8 <strlen@plt>
   14180:	ldr	r3, [sp, #24]
   14184:	subs	r4, r0, #0
   14188:	beq	13f3c <__assert_fail@plt+0x29d4>
   1418c:	ldr	r0, [r5, #28]
   14190:	ldr	r1, [r5, #32]
   14194:	add	r2, r0, r4
   14198:	cmp	r1, r2
   1419c:	bcs	141c0 <__assert_fail@plt+0x2c58>
   141a0:	mov	r1, r4
   141a4:	mov	r0, r5
   141a8:	str	r3, [sp, #24]
   141ac:	bl	1baac <argp_parse@@Base+0x2c40>
   141b0:	ldr	r3, [sp, #24]
   141b4:	cmp	r0, #0
   141b8:	beq	13f3c <__assert_fail@plt+0x29d4>
   141bc:	ldr	r0, [r5, #28]
   141c0:	mov	r2, r4
   141c4:	mov	r1, r3
   141c8:	str	r3, [sp, #24]
   141cc:	b	141e0 <__assert_fail@plt+0x2c78>
   141d0:	ldr	r0, [r5, #28]
   141d4:	mov	r2, r4
   141d8:	mov	r1, sl
   141dc:	str	r3, [sp, #24]
   141e0:	bl	11298 <memcpy@plt>
   141e4:	ldr	r2, [r5, #28]
   141e8:	ldr	r3, [sp, #24]
   141ec:	add	r4, r2, r4
   141f0:	str	r4, [r5, #28]
   141f4:	b	13f40 <__assert_fail@plt+0x29d8>
   141f8:	mov	r0, r5
   141fc:	str	r3, [sp, #24]
   14200:	bl	1b500 <argp_parse@@Base+0x2694>
   14204:	ldr	r3, [sp, #24]
   14208:	b	13f54 <__assert_fail@plt+0x29ec>
   1420c:	mov	r4, #1
   14210:	b	140a4 <__assert_fail@plt+0x2b3c>
   14214:	ldr	r4, [r0, #20]
   14218:	cmp	r4, #0
   1421c:	beq	14364 <__assert_fail@plt+0x2dfc>
   14220:	bl	19c8c <argp_parse@@Base+0xe20>
   14224:	cmp	r6, #0
   14228:	ldr	r3, [fp, #20]
   1422c:	strne	sl, [sp, #20]
   14230:	strne	sl, [sp, #24]
   14234:	movne	r4, sl
   14238:	streq	r6, [sp, #20]
   1423c:	streq	r6, [sp, #24]
   14240:	moveq	r4, r6
   14244:	str	r0, [sp, #12]
   14248:	ldrne	r0, [pc, #364]	; 143bc <__assert_fail@plt+0x2e54>
   1424c:	ldreq	r0, [pc, #352]	; 143b4 <__assert_fail@plt+0x2e4c>
   14250:	b	13eb8 <__assert_fail@plt+0x2950>
   14254:	mov	r4, r3
   14258:	b	13fa0 <__assert_fail@plt+0x2a38>
   1425c:	mov	r1, #1
   14260:	mov	r0, r5
   14264:	str	r3, [sp, #28]
   14268:	bl	1baac <argp_parse@@Base+0x2c40>
   1426c:	ldr	r3, [sp, #28]
   14270:	cmp	r0, #0
   14274:	beq	13ef4 <__assert_fail@plt+0x298c>
   14278:	ldr	r2, [r5, #28]
   1427c:	b	13ee4 <__assert_fail@plt+0x297c>
   14280:	mov	r1, #1
   14284:	mov	r0, r5
   14288:	str	r3, [sp, #24]
   1428c:	bl	1baac <argp_parse@@Base+0x2c40>
   14290:	ldr	r3, [sp, #24]
   14294:	cmp	r0, #0
   14298:	beq	13f88 <__assert_fail@plt+0x2a20>
   1429c:	ldr	r2, [r5, #28]
   142a0:	b	13f78 <__assert_fail@plt+0x2a10>
   142a4:	str	r4, [sp, #20]
   142a8:	str	r4, [sp, #24]
   142ac:	b	13ea0 <__assert_fail@plt+0x2938>
   142b0:	ldr	r0, [r5, #28]
   142b4:	mov	r2, r4
   142b8:	mov	r1, sl
   142bc:	bl	11298 <memcpy@plt>
   142c0:	ldr	r3, [r5, #28]
   142c4:	add	r4, r3, r4
   142c8:	str	r4, [r5, #28]
   142cc:	b	1404c <__assert_fail@plt+0x2ae4>
   142d0:	mov	r0, r5
   142d4:	bl	1b500 <argp_parse@@Base+0x2694>
   142d8:	b	1406c <__assert_fail@plt+0x2b04>
   142dc:	cmp	sl, #0
   142e0:	beq	14360 <__assert_fail@plt+0x2df8>
   142e4:	str	r3, [sp, #20]
   142e8:	str	r3, [sp, #24]
   142ec:	mov	r4, r3
   142f0:	str	r3, [sp, #12]
   142f4:	mov	r3, sl
   142f8:	b	13ecc <__assert_fail@plt+0x2964>
   142fc:	mov	sl, r0
   14300:	b	1413c <__assert_fail@plt+0x2bd4>
   14304:	adds	r3, r4, #0
   14308:	movne	r3, #1
   1430c:	str	r3, [sp, #24]
   14310:	str	r3, [sp, #20]
   14314:	str	r6, [sp, #12]
   14318:	mov	r3, sl
   1431c:	b	13ecc <__assert_fail@plt+0x2964>
   14320:	mov	r1, #1
   14324:	mov	r0, r5
   14328:	bl	1baac <argp_parse@@Base+0x2c40>
   1432c:	cmp	r0, #0
   14330:	beq	1420c <__assert_fail@plt+0x2ca4>
   14334:	ldr	r3, [r5, #28]
   14338:	b	14090 <__assert_fail@plt+0x2b28>
   1433c:	mov	r1, #1
   14340:	mov	r0, r5
   14344:	bl	1baac <argp_parse@@Base+0x2c40>
   14348:	cmp	r0, #0
   1434c:	beq	14014 <__assert_fail@plt+0x2aac>
   14350:	ldr	r3, [r5, #28]
   14354:	b	14004 <__assert_fail@plt+0x2a9c>
   14358:	mov	r4, #1
   1435c:	b	14124 <__assert_fail@plt+0x2bbc>
   14360:	mov	r4, sl
   14364:	str	r4, [sp, #12]
   14368:	b	13fc0 <__assert_fail@plt+0x2a58>
   1436c:	cmp	r3, #0
   14370:	beq	1439c <__assert_fail@plt+0x2e34>
   14374:	mov	r1, r9
   14378:	mov	r0, fp
   1437c:	bl	19c8c <argp_parse@@Base+0xe20>
   14380:	mov	r4, r6
   14384:	ldr	r3, [fp, #20]
   14388:	str	r6, [sp, #20]
   1438c:	str	r6, [sp, #24]
   14390:	str	r0, [sp, #12]
   14394:	ldr	r0, [pc, #24]	; 143b4 <__assert_fail@plt+0x2e4c>
   14398:	b	13eb8 <__assert_fail@plt+0x2950>
   1439c:	mov	r3, sl
   143a0:	str	r6, [sp, #20]
   143a4:	str	r6, [sp, #24]
   143a8:	mov	r4, r6
   143ac:	str	r6, [sp, #12]
   143b0:	b	13ecc <__assert_fail@plt+0x2964>
   143b4:	andeq	r0, r0, #1
   143b8:	andeq	r0, r0, #4
   143bc:	andeq	r0, r0, #2
   143c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143c4:	sub	sp, sp, #52	; 0x34
   143c8:	mov	r3, r0
   143cc:	str	r0, [sp, #20]
   143d0:	mov	r0, #16
   143d4:	ldr	r6, [r3, #16]
   143d8:	ldr	r4, [r3]
   143dc:	str	r1, [sp, #28]
   143e0:	bl	1b3fc <argp_parse@@Base+0x2590>
   143e4:	subs	r3, r0, #0
   143e8:	str	r3, [sp, #16]
   143ec:	beq	149dc <__assert_fail@plt+0x3474>
   143f0:	mov	r2, r3
   143f4:	cmp	r4, #0
   143f8:	mov	r3, #0
   143fc:	str	r3, [r2, #4]
   14400:	str	r3, [r2, #12]
   14404:	beq	14618 <__assert_fail@plt+0x30b0>
   14408:	ldr	fp, [r4, #12]
   1440c:	ands	fp, fp, #4
   14410:	bne	149f0 <__assert_fail@plt+0x3488>
   14414:	add	r5, r4, #24
   14418:	mov	r7, r4
   1441c:	mov	r9, fp
   14420:	mov	sl, fp
   14424:	mov	r4, r2
   14428:	b	1446c <__assert_fail@plt+0x2f04>
   1442c:	ldr	r3, [r5, #-12]
   14430:	tst	r3, #4
   14434:	addeq	r9, r9, #1
   14438:	streq	r9, [r4, #4]
   1443c:	tst	r3, #8
   14440:	bne	14468 <__assert_fail@plt+0x2f00>
   14444:	sub	r3, r8, #1
   14448:	cmp	r3, #254	; 0xfe
   1444c:	bhi	14468 <__assert_fail@plt+0x2f00>
   14450:	bl	113c4 <__ctype_b_loc@plt>
   14454:	lsl	r8, r8, #1
   14458:	ldr	r3, [r0]
   1445c:	ldrh	r3, [r3, r8]
   14460:	tst	r3, #16384	; 0x4000
   14464:	addne	sl, sl, #1
   14468:	add	r5, r5, #24
   1446c:	ldr	r8, [r5, #-20]	; 0xffffffec
   14470:	cmp	r8, #0
   14474:	bne	1442c <__assert_fail@plt+0x2ec4>
   14478:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1447c:	cmp	r3, #0
   14480:	bne	1442c <__assert_fail@plt+0x2ec4>
   14484:	ldr	r3, [r5, #-8]
   14488:	cmp	r3, #0
   1448c:	bne	1442c <__assert_fail@plt+0x2ec4>
   14490:	ldr	r3, [r5, #-4]
   14494:	cmp	r3, #0
   14498:	bne	1442c <__assert_fail@plt+0x2ec4>
   1449c:	rsb	r9, r9, r9, lsl #3
   144a0:	mov	r4, r7
   144a4:	lsl	r0, r9, #2
   144a8:	mov	r7, r3
   144ac:	bl	1b3fc <argp_parse@@Base+0x2590>
   144b0:	ldr	r5, [sp, #16]
   144b4:	str	r0, [r5]
   144b8:	add	r0, sl, #1
   144bc:	bl	1b3fc <argp_parse@@Base+0x2590>
   144c0:	ldr	r8, [r5]
   144c4:	mov	r3, r5
   144c8:	cmp	r0, #0
   144cc:	cmpne	r8, #0
   144d0:	mov	sl, r0
   144d4:	str	r0, [r3, #8]
   144d8:	beq	14a98 <__assert_fail@plt+0x3530>
   144dc:	ldr	r2, [sp, #16]
   144e0:	ldr	r3, [pc, #1476]	; 14aac <__assert_fail@plt+0x3544>
   144e4:	ldr	r2, [r2, #4]
   144e8:	cmp	r2, r3
   144ec:	bhi	14a84 <__assert_fail@plt+0x351c>
   144f0:	add	r8, r8, #28
   144f4:	mov	r9, sl
   144f8:	mov	r2, fp
   144fc:	ldr	r3, [r4, #4]
   14500:	mov	fp, sl
   14504:	mov	sl, r8
   14508:	ldr	r8, [sp, #28]
   1450c:	str	r6, [sp, #4]
   14510:	cmp	r3, #0
   14514:	bne	14524 <__assert_fail@plt+0x2fbc>
   14518:	ldr	r0, [r4]
   1451c:	cmp	r0, #0
   14520:	beq	14a3c <__assert_fail@plt+0x34d4>
   14524:	str	r7, [sl, #-24]	; 0xffffffe8
   14528:	ldr	r5, [r4, #20]
   1452c:	str	r4, [sl, #-28]	; 0xffffffe4
   14530:	cmp	r5, #0
   14534:	str	fp, [sl, #-20]	; 0xffffffec
   14538:	bne	14550 <__assert_fail@plt+0x2fe8>
   1453c:	ldr	r0, [r4]
   14540:	cmp	r0, #0
   14544:	cmpeq	r3, #0
   14548:	movne	r5, r2
   1454c:	beq	14a60 <__assert_fail@plt+0x34f8>
   14550:	ldr	r2, [sp, #20]
   14554:	mov	r3, r7
   14558:	str	r5, [sl, #-16]
   1455c:	str	r8, [sl, #-12]
   14560:	str	r2, [sl, #-8]
   14564:	add	r3, r3, #1
   14568:	str	r3, [sl, #-24]	; 0xffffffe8
   1456c:	ldr	r3, [r4, #12]
   14570:	tst	r3, #8
   14574:	bne	145e0 <__assert_fail@plt+0x3078>
   14578:	ldr	r6, [r4, #4]
   1457c:	sub	r2, r6, #1
   14580:	cmp	r2, #254	; 0xfe
   14584:	bhi	145e0 <__assert_fail@plt+0x3078>
   14588:	bl	113c4 <__ctype_b_loc@plt>
   1458c:	lsl	r2, r6, #1
   14590:	ldr	r0, [r0]
   14594:	ldrh	r2, [r0, r2]
   14598:	tst	r2, #16384	; 0x4000
   1459c:	beq	145e0 <__assert_fail@plt+0x3078>
   145a0:	cmp	r9, fp
   145a4:	uxtb	r0, r6
   145a8:	bcs	145d8 <__assert_fail@plt+0x3070>
   145ac:	ldrb	r3, [r9]
   145b0:	cmp	r3, r0
   145b4:	movne	r3, r9
   145b8:	subne	ip, fp, #1
   145bc:	bne	145d0 <__assert_fail@plt+0x3068>
   145c0:	b	145e0 <__assert_fail@plt+0x3078>
   145c4:	ldrb	r2, [r3, #1]!
   145c8:	cmp	r2, r0
   145cc:	beq	145e0 <__assert_fail@plt+0x3078>
   145d0:	cmp	ip, r3
   145d4:	bne	145c4 <__assert_fail@plt+0x305c>
   145d8:	strb	r0, [fp]
   145dc:	add	fp, fp, #1
   145e0:	add	r4, r4, #24
   145e4:	ldr	r3, [r4, #4]
   145e8:	cmp	r3, #0
   145ec:	bne	145fc <__assert_fail@plt+0x3094>
   145f0:	ldr	r2, [r4]
   145f4:	cmp	r2, #0
   145f8:	beq	14a18 <__assert_fail@plt+0x34b0>
   145fc:	ldr	r2, [r4, #12]
   14600:	tst	r2, #4
   14604:	beq	14a30 <__assert_fail@plt+0x34c8>
   14608:	ldr	r3, [sl, #-24]	; 0xffffffe8
   1460c:	b	14564 <__assert_fail@plt+0x2ffc>
   14610:	ldr	r6, [sp, #4]
   14614:	strb	r3, [fp]
   14618:	cmp	r6, #0
   1461c:	beq	14758 <__assert_fail@plt+0x31f0>
   14620:	ldr	r0, [r6]
   14624:	cmp	r0, #0
   14628:	beq	14758 <__assert_fail@plt+0x31f0>
   1462c:	add	r3, r6, #16
   14630:	str	r3, [sp, #8]
   14634:	ldr	r3, [sp, #16]
   14638:	add	r3, r3, #12
   1463c:	str	r3, [sp, #44]	; 0x2c
   14640:	ldr	r3, [sp, #8]
   14644:	ldr	r5, [r3, #-4]
   14648:	ldr	r6, [r3, #-8]
   1464c:	cmp	r5, #0
   14650:	bne	1465c <__assert_fail@plt+0x30f4>
   14654:	cmp	r6, #0
   14658:	beq	149b0 <__assert_fail@plt+0x3448>
   1465c:	ldr	r3, [sp, #20]
   14660:	mov	r0, #28
   14664:	ldr	r2, [r3, #16]
   14668:	ldr	r3, [sp, #8]
   1466c:	sub	r3, r3, #16
   14670:	sub	r3, r3, r2
   14674:	asr	r4, r3, #4
   14678:	bl	1b3fc <argp_parse@@Base+0x2590>
   1467c:	subs	r1, r0, #0
   14680:	beq	146c4 <__assert_fail@plt+0x315c>
   14684:	ldr	r3, [sp, #28]
   14688:	ldr	r0, [sp, #16]
   1468c:	cmp	r3, #0
   14690:	ldr	r2, [sp, #20]
   14694:	str	r3, [r1, #12]
   14698:	ldrne	r3, [r3, #20]
   1469c:	str	r2, [r1, #16]
   146a0:	ldr	r2, [r0, #12]
   146a4:	addne	r3, r3, #1
   146a8:	moveq	r3, #0
   146ac:	str	r5, [r1, #8]
   146b0:	str	r6, [r1]
   146b4:	str	r4, [r1, #4]
   146b8:	str	r3, [r1, #20]
   146bc:	str	r2, [r1, #24]
   146c0:	str	r1, [r0, #12]
   146c4:	ldr	r3, [sp, #8]
   146c8:	ldr	r0, [r3, #-16]
   146cc:	bl	143c0 <__assert_fail@plt+0x2e58>
   146d0:	ldr	r3, [sp, #16]
   146d4:	ldr	r2, [r3, #12]
   146d8:	cmp	r2, #0
   146dc:	mov	sl, r0
   146e0:	bne	146ec <__assert_fail@plt+0x3184>
   146e4:	b	149b8 <__assert_fail@plt+0x3450>
   146e8:	mov	r2, r3
   146ec:	ldr	r3, [r2, #24]
   146f0:	cmp	r3, #0
   146f4:	bne	146e8 <__assert_fail@plt+0x3180>
   146f8:	add	r2, r2, #24
   146fc:	ldr	r3, [sl, #4]
   14700:	ldr	r1, [sl, #12]
   14704:	cmp	r3, #0
   14708:	str	r1, [r2]
   1470c:	mov	r2, #0
   14710:	str	r2, [sl, #12]
   14714:	beq	1473c <__assert_fail@plt+0x31d4>
   14718:	ldr	ip, [sp, #16]
   1471c:	ldr	r2, [ip, #4]
   14720:	cmp	r2, #0
   14724:	bne	14764 <__assert_fail@plt+0x31fc>
   14728:	ldr	r0, [sl]
   1472c:	ldr	r1, [sl, #8]
   14730:	stm	ip, {r0, r3}
   14734:	str	r1, [ip, #8]
   14738:	str	r2, [sl, #4]
   1473c:	mov	r0, sl
   14740:	bl	19de8 <argp_parse@@Base+0xf7c>
   14744:	ldr	r3, [sp, #8]
   14748:	ldr	r0, [r3], #16
   1474c:	cmp	r0, #0
   14750:	str	r3, [sp, #8]
   14754:	bne	14644 <__assert_fail@plt+0x30dc>
   14758:	ldr	r0, [sp, #16]
   1475c:	add	sp, sp, #52	; 0x34
   14760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14764:	add	r3, r3, r2
   14768:	str	r3, [sp, #32]
   1476c:	rsb	r0, r3, r3, lsl #3
   14770:	lsl	r0, r0, #2
   14774:	bl	1b3fc <argp_parse@@Base+0x2590>
   14778:	ldr	r3, [sp, #16]
   1477c:	mov	r4, r0
   14780:	str	r0, [sp, #24]
   14784:	ldr	r0, [r3, #8]
   14788:	bl	113e8 <strlen@plt>
   1478c:	mov	r5, r0
   14790:	ldr	r0, [sl, #8]
   14794:	bl	113e8 <strlen@plt>
   14798:	add	r0, r5, r0
   1479c:	add	r0, r0, #1
   147a0:	bl	1b3fc <argp_parse@@Base+0x2590>
   147a4:	cmp	r4, #0
   147a8:	cmpne	r0, #0
   147ac:	mov	r7, r0
   147b0:	beq	149c8 <__assert_fail@plt+0x3460>
   147b4:	ldr	r3, [sp, #32]
   147b8:	ldr	r2, [pc, #748]	; 14aac <__assert_fail@plt+0x3544>
   147bc:	cmp	r3, r2
   147c0:	bhi	14a04 <__assert_fail@plt+0x349c>
   147c4:	ldr	r6, [sp, #16]
   147c8:	ldr	r8, [sp, #24]
   147cc:	ldm	r6, {r3, r4}
   147d0:	mov	r0, r8
   147d4:	rsb	r9, r4, r4, lsl #3
   147d8:	mov	r1, r3
   147dc:	lsl	r9, r9, #2
   147e0:	mov	r2, r9
   147e4:	str	r3, [sp, #36]	; 0x24
   147e8:	bl	113b8 <mempcpy@plt>
   147ec:	ldr	r3, [sl, #4]
   147f0:	ldr	r1, [sl]
   147f4:	str	r3, [sp, #4]
   147f8:	rsb	r2, r3, r3, lsl #3
   147fc:	lsl	r2, r2, #2
   14800:	bl	11298 <memcpy@plt>
   14804:	ldr	r6, [r6, #8]
   14808:	mov	r2, r5
   1480c:	mov	r1, r6
   14810:	mov	r0, r7
   14814:	bl	11298 <memcpy@plt>
   14818:	cmp	r4, #0
   1481c:	beq	149c0 <__assert_fail@plt+0x3458>
   14820:	mov	r2, r8
   14824:	ldr	r3, [r2, #8]
   14828:	subs	r4, r4, #1
   1482c:	sub	r3, r3, r6
   14830:	add	r3, r7, r3
   14834:	str	r3, [r2, #8]
   14838:	add	r2, r2, #28
   1483c:	bne	14824 <__assert_fail@plt+0x32bc>
   14840:	ldr	r3, [sp, #24]
   14844:	add	r1, r3, r9
   14848:	ldr	r3, [sp, #4]
   1484c:	ldr	r9, [sl, #8]
   14850:	cmp	r3, #0
   14854:	add	r3, r7, r5
   14858:	str	r3, [sp, #12]
   1485c:	beq	14948 <__assert_fail@plt+0x33e0>
   14860:	add	fp, r1, #28
   14864:	sub	r8, r3, #1
   14868:	str	sl, [sp, #40]	; 0x28
   1486c:	mov	r6, r3
   14870:	mov	sl, r9
   14874:	mov	r9, fp
   14878:	mov	fp, r8
   1487c:	ldr	r5, [r9, #-24]	; 0xffffffe8
   14880:	str	r6, [r9, #-20]	; 0xffffffec
   14884:	cmp	r5, #0
   14888:	ldr	r4, [r9, #-28]	; 0xffffffe4
   1488c:	bne	148a0 <__assert_fail@plt+0x3338>
   14890:	b	1492c <__assert_fail@plt+0x33c4>
   14894:	subs	r5, r5, #1
   14898:	add	r4, r4, #24
   1489c:	beq	1492c <__assert_fail@plt+0x33c4>
   148a0:	ldr	r3, [r4, #12]
   148a4:	tst	r3, #8
   148a8:	bne	14894 <__assert_fail@plt+0x332c>
   148ac:	ldr	r8, [r4, #4]
   148b0:	sub	r3, r8, #1
   148b4:	cmp	r3, #254	; 0xfe
   148b8:	bhi	14894 <__assert_fail@plt+0x332c>
   148bc:	bl	113c4 <__ctype_b_loc@plt>
   148c0:	lsl	r3, r8, #1
   148c4:	ldr	r2, [r0]
   148c8:	ldrh	r3, [r2, r3]
   148cc:	tst	r3, #16384	; 0x4000
   148d0:	beq	14894 <__assert_fail@plt+0x332c>
   148d4:	ldrb	r1, [sl]
   148d8:	cmp	r1, r8
   148dc:	bne	14894 <__assert_fail@plt+0x332c>
   148e0:	ldr	r3, [sp, #12]
   148e4:	cmp	r7, r3
   148e8:	bcs	14914 <__assert_fail@plt+0x33ac>
   148ec:	ldrb	r3, [r7]
   148f0:	cmp	r3, r1
   148f4:	movne	r3, r7
   148f8:	bne	1490c <__assert_fail@plt+0x33a4>
   148fc:	b	1491c <__assert_fail@plt+0x33b4>
   14900:	ldrb	r2, [r3, #1]!
   14904:	cmp	r2, r1
   14908:	beq	1491c <__assert_fail@plt+0x33b4>
   1490c:	cmp	fp, r3
   14910:	bne	14900 <__assert_fail@plt+0x3398>
   14914:	strb	r1, [r6]
   14918:	add	r6, r6, #1
   1491c:	subs	r5, r5, #1
   14920:	add	sl, sl, #1
   14924:	add	r4, r4, #24
   14928:	bne	148a0 <__assert_fail@plt+0x3338>
   1492c:	ldr	r3, [sp, #4]
   14930:	add	r9, r9, #28
   14934:	subs	r3, r3, #1
   14938:	str	r3, [sp, #4]
   1493c:	bne	1487c <__assert_fail@plt+0x3314>
   14940:	ldr	sl, [sp, #40]	; 0x28
   14944:	mov	r3, r6
   14948:	mov	r2, #0
   1494c:	strb	r2, [r3]
   14950:	ldr	r0, [sp, #36]	; 0x24
   14954:	bl	19de8 <argp_parse@@Base+0xf7c>
   14958:	ldr	r4, [sp, #16]
   1495c:	ldr	r0, [r4, #8]
   14960:	bl	19de8 <argp_parse@@Base+0xf7c>
   14964:	ldr	r2, [sp, #24]
   14968:	ldr	r0, [sl, #12]
   1496c:	str	r2, [r4]
   14970:	ldr	r2, [sp, #32]
   14974:	cmp	r0, #0
   14978:	stmib	r4, {r2, r7}
   1497c:	beq	14990 <__assert_fail@plt+0x3428>
   14980:	ldr	r4, [r0, #24]
   14984:	bl	19de8 <argp_parse@@Base+0xf7c>
   14988:	subs	r0, r4, #0
   1498c:	bne	14980 <__assert_fail@plt+0x3418>
   14990:	ldr	r3, [sl, #4]
   14994:	cmp	r3, #0
   14998:	beq	1473c <__assert_fail@plt+0x31d4>
   1499c:	ldr	r0, [sl]
   149a0:	bl	19de8 <argp_parse@@Base+0xf7c>
   149a4:	ldr	r0, [sl, #8]
   149a8:	bl	19de8 <argp_parse@@Base+0xf7c>
   149ac:	b	1473c <__assert_fail@plt+0x31d4>
   149b0:	ldr	r1, [sp, #28]
   149b4:	b	146cc <__assert_fail@plt+0x3164>
   149b8:	ldr	r2, [sp, #44]	; 0x2c
   149bc:	b	146fc <__assert_fail@plt+0x3194>
   149c0:	ldr	r1, [sp, #24]
   149c4:	b	14848 <__assert_fail@plt+0x32e0>
   149c8:	ldr	r3, [pc, #224]	; 14ab0 <__assert_fail@plt+0x3548>
   149cc:	ldr	r2, [pc, #224]	; 14ab4 <__assert_fail@plt+0x354c>
   149d0:	ldr	r1, [pc, #224]	; 14ab8 <__assert_fail@plt+0x3550>
   149d4:	ldr	r0, [pc, #224]	; 14abc <__assert_fail@plt+0x3554>
   149d8:	bl	11568 <__assert_fail@plt>
   149dc:	ldr	r3, [pc, #220]	; 14ac0 <__assert_fail@plt+0x3558>
   149e0:	ldr	r2, [pc, #220]	; 14ac4 <__assert_fail@plt+0x355c>
   149e4:	ldr	r1, [pc, #204]	; 14ab8 <__assert_fail@plt+0x3550>
   149e8:	ldr	r0, [pc, #216]	; 14ac8 <__assert_fail@plt+0x3560>
   149ec:	bl	11568 <__assert_fail@plt>
   149f0:	ldr	r3, [pc, #200]	; 14ac0 <__assert_fail@plt+0x3558>
   149f4:	mov	r2, #460	; 0x1cc
   149f8:	ldr	r1, [pc, #184]	; 14ab8 <__assert_fail@plt+0x3550>
   149fc:	ldr	r0, [pc, #200]	; 14acc <__assert_fail@plt+0x3564>
   14a00:	bl	11568 <__assert_fail@plt>
   14a04:	ldr	r3, [pc, #164]	; 14ab0 <__assert_fail@plt+0x3548>
   14a08:	mov	r2, #972	; 0x3cc
   14a0c:	ldr	r1, [pc, #164]	; 14ab8 <__assert_fail@plt+0x3550>
   14a10:	ldr	r0, [pc, #184]	; 14ad0 <__assert_fail@plt+0x3568>
   14a14:	bl	11568 <__assert_fail@plt>
   14a18:	ldr	r2, [r4, #16]
   14a1c:	cmp	r2, #0
   14a20:	bne	145fc <__assert_fail@plt+0x3094>
   14a24:	ldr	r2, [r4, #20]
   14a28:	cmp	r2, #0
   14a2c:	bne	145fc <__assert_fail@plt+0x3094>
   14a30:	add	sl, sl, #28
   14a34:	mov	r2, r5
   14a38:	b	14510 <__assert_fail@plt+0x2fa8>
   14a3c:	ldr	r0, [r4, #16]
   14a40:	cmp	r0, #0
   14a44:	beq	14a68 <__assert_fail@plt+0x3500>
   14a48:	str	r3, [sl, #-24]	; 0xffffffe8
   14a4c:	ldr	r5, [r4, #20]
   14a50:	str	r4, [sl, #-28]	; 0xffffffe4
   14a54:	cmp	r5, #0
   14a58:	str	fp, [sl, #-20]	; 0xffffffec
   14a5c:	bne	14550 <__assert_fail@plt+0x2fe8>
   14a60:	add	r5, r2, #1
   14a64:	b	14550 <__assert_fail@plt+0x2fe8>
   14a68:	ldr	r5, [r4, #20]
   14a6c:	cmp	r5, #0
   14a70:	beq	14610 <__assert_fail@plt+0x30a8>
   14a74:	str	r4, [sl, #-28]	; 0xffffffe4
   14a78:	str	r3, [sl, #-24]	; 0xffffffe8
   14a7c:	str	fp, [sl, #-20]	; 0xffffffec
   14a80:	b	14550 <__assert_fail@plt+0x2fe8>
   14a84:	ldr	r3, [pc, #52]	; 14ac0 <__assert_fail@plt+0x3558>
   14a88:	mov	r2, #476	; 0x1dc
   14a8c:	ldr	r1, [pc, #36]	; 14ab8 <__assert_fail@plt+0x3550>
   14a90:	ldr	r0, [pc, #60]	; 14ad4 <__assert_fail@plt+0x356c>
   14a94:	bl	11568 <__assert_fail@plt>
   14a98:	ldr	r3, [pc, #32]	; 14ac0 <__assert_fail@plt+0x3558>
   14a9c:	ldr	r2, [pc, #52]	; 14ad8 <__assert_fail@plt+0x3570>
   14aa0:	ldr	r1, [pc, #16]	; 14ab8 <__assert_fail@plt+0x3550>
   14aa4:	ldr	r0, [pc, #48]	; 14adc <__assert_fail@plt+0x3574>
   14aa8:	bl	11568 <__assert_fail@plt>
   14aac:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14ab0:	muleq	r1, r8, r0
   14ab4:	andeq	r0, r0, sl, asr #7
   14ab8:	andeq	lr, r1, r4, lsr r1
   14abc:			; <UNDEFINED> instruction: 0x0001e1b4
   14ac0:	andeq	lr, r1, ip, lsl #1
   14ac4:	andeq	r0, r0, r2, asr #3
   14ac8:	andeq	lr, r1, r0, asr #2
   14acc:	andeq	lr, r1, r4, asr #2
   14ad0:	ldrdeq	lr, [r1], -r0
   14ad4:	andeq	lr, r1, r8, ror r1
   14ad8:	ldrdeq	r0, [r0], -sl
   14adc:	andeq	lr, r1, r4, asr r1
   14ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ae4:	mov	r7, r2
   14ae8:	sub	sp, sp, #28
   14aec:	mov	r4, r3
   14af0:	ldr	r3, [r7]
   14af4:	ldr	r2, [r0, #20]
   14af8:	str	r3, [sp, #20]
   14afc:	ldr	r3, [r0, #16]
   14b00:	cmp	r2, #0
   14b04:	str	r3, [sp, #12]
   14b08:	ldr	r3, [r0, #8]
   14b0c:	mov	r8, r1
   14b10:	mov	r9, r3
   14b14:	str	r3, [sp, #16]
   14b18:	ldr	r5, [sp, #64]	; 0x40
   14b1c:	beq	14d74 <__assert_fail@plt+0x380c>
   14b20:	mov	r6, r0
   14b24:	bl	19c8c <argp_parse@@Base+0xe20>
   14b28:	ldr	r3, [r6, #20]
   14b2c:	mov	r1, r9
   14b30:	mov	r2, r0
   14b34:	ldr	r0, [pc, #640]	; 14dbc <__assert_fail@plt+0x3854>
   14b38:	blx	r3
   14b3c:	mov	r3, r0
   14b40:	str	r0, [sp, #8]
   14b44:	cmp	r3, #0
   14b48:	beq	14d14 <__assert_fail@plt+0x37ac>
   14b4c:	mov	r1, #10
   14b50:	mov	r0, r3
   14b54:	bl	1125c <strchrnul@plt>
   14b58:	ldrb	sl, [r0]
   14b5c:	mov	r6, r0
   14b60:	cmp	sl, #0
   14b64:	bne	14cac <__assert_fail@plt+0x3744>
   14b68:	ldr	fp, [sp, #8]
   14b6c:	ldr	r3, [r5, #28]
   14b70:	ldr	r1, [r5, #24]
   14b74:	ldr	r0, [r5, #16]
   14b78:	sub	r1, r3, r1
   14b7c:	cmp	r1, r0
   14b80:	add	r9, r6, #1
   14b84:	mov	r1, r3
   14b88:	sub	r9, r9, fp
   14b8c:	bhi	14d44 <__assert_fail@plt+0x37dc>
   14b90:	ldr	r0, [r5, #20]
   14b94:	ldr	ip, [r5, #8]
   14b98:	cmp	r0, #0
   14b9c:	addge	r9, r9, r0
   14ba0:	cmp	r9, ip
   14ba4:	bcc	14cf4 <__assert_fail@plt+0x378c>
   14ba8:	ldr	r1, [r5, #32]
   14bac:	cmp	r1, r3
   14bb0:	bls	14d7c <__assert_fail@plt+0x3814>
   14bb4:	add	r0, r3, #1
   14bb8:	mov	r1, #10
   14bbc:	str	r0, [r5, #28]
   14bc0:	strb	r1, [r3]
   14bc4:	ldr	r0, [r5, #28]
   14bc8:	sub	r9, r6, fp
   14bcc:	ldr	r1, [r5, #32]
   14bd0:	add	r3, r0, r9
   14bd4:	cmp	r1, r3
   14bd8:	bcs	14bf4 <__assert_fail@plt+0x368c>
   14bdc:	mov	r1, r9
   14be0:	mov	r0, r5
   14be4:	bl	1baac <argp_parse@@Base+0x2c40>
   14be8:	cmp	r0, #0
   14bec:	beq	14c0c <__assert_fail@plt+0x36a4>
   14bf0:	ldr	r0, [r5, #28]
   14bf4:	mov	r2, r9
   14bf8:	mov	r1, fp
   14bfc:	bl	11298 <memcpy@plt>
   14c00:	ldr	r3, [r5, #28]
   14c04:	add	r9, r3, r9
   14c08:	str	r9, [r5, #28]
   14c0c:	ldr	r3, [sp, #16]
   14c10:	ldr	r2, [sp, #8]
   14c14:	cmp	r3, r2
   14c18:	beq	14c24 <__assert_fail@plt+0x36bc>
   14c1c:	mov	r0, r2
   14c20:	bl	19de8 <argp_parse@@Base+0xf7c>
   14c24:	ldr	r3, [sp, #12]
   14c28:	cmp	r3, #0
   14c2c:	beq	14c70 <__assert_fail@plt+0x3708>
   14c30:	ldr	r2, [r3]
   14c34:	cmp	r2, #0
   14c38:	beq	14c70 <__assert_fail@plt+0x3708>
   14c3c:	ldr	r9, [sp, #12]
   14c40:	mov	r3, r4
   14c44:	mov	r0, r2
   14c48:	str	r5, [sp]
   14c4c:	mov	r2, r7
   14c50:	mov	r1, r8
   14c54:	bl	14ae0 <__assert_fail@plt+0x3578>
   14c58:	ldr	r2, [r9, #16]!
   14c5c:	cmp	r2, #0
   14c60:	clz	r3, r0
   14c64:	lsr	r3, r3, #5
   14c68:	bne	14c44 <__assert_fail@plt+0x36dc>
   14c6c:	mov	r4, r3
   14c70:	cmp	r4, #0
   14c74:	moveq	sl, #0
   14c78:	andne	sl, sl, #1
   14c7c:	cmp	sl, #0
   14c80:	beq	14d34 <__assert_fail@plt+0x37cc>
   14c84:	ldrb	r0, [r6]
   14c88:	cmp	r0, #0
   14c8c:	bne	14d58 <__assert_fail@plt+0x37f0>
   14c90:	ldr	r3, [sp, #20]
   14c94:	ldrb	r4, [r3]
   14c98:	cmp	r4, #0
   14c9c:	moveq	r0, r4
   14ca0:	strbne	r0, [r3]
   14ca4:	add	sp, sp, #28
   14ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cac:	ldr	r3, [sp, #20]
   14cb0:	ldrb	r9, [r3]
   14cb4:	cmp	r9, #0
   14cb8:	beq	14db4 <__assert_fail@plt+0x384c>
   14cbc:	mov	sl, #0
   14cc0:	add	fp, r0, #1
   14cc4:	add	sl, sl, #1
   14cc8:	mov	r0, fp
   14ccc:	mov	r1, #10
   14cd0:	bl	1125c <strchrnul@plt>
   14cd4:	cmp	sl, r9
   14cd8:	bne	14cc0 <__assert_fail@plt+0x3758>
   14cdc:	mov	r6, r0
   14ce0:	ldr	r3, [r7]
   14ce4:	mov	sl, #1
   14ce8:	add	r3, r3, sl
   14cec:	str	r3, [r7]
   14cf0:	b	14b6c <__assert_fail@plt+0x3604>
   14cf4:	ldr	r0, [r5, #32]
   14cf8:	cmp	r0, r3
   14cfc:	bls	14d98 <__assert_fail@plt+0x3830>
   14d00:	add	r0, r1, #1
   14d04:	mov	r3, #32
   14d08:	str	r0, [r5, #28]
   14d0c:	strb	r3, [r1]
   14d10:	b	14bc4 <__assert_fail@plt+0x365c>
   14d14:	ldr	r3, [sp, #12]
   14d18:	cmp	r3, #0
   14d1c:	beq	14d34 <__assert_fail@plt+0x37cc>
   14d20:	ldr	r2, [r3]
   14d24:	cmp	r2, #0
   14d28:	ldrne	r6, [sp, #8]
   14d2c:	movne	sl, r6
   14d30:	bne	14c3c <__assert_fail@plt+0x36d4>
   14d34:	clz	r0, r4
   14d38:	lsr	r0, r0, #5
   14d3c:	add	sp, sp, #28
   14d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d44:	mov	r0, r5
   14d48:	bl	1b500 <argp_parse@@Base+0x2694>
   14d4c:	ldr	r3, [r5, #28]
   14d50:	mov	r1, r3
   14d54:	b	14b90 <__assert_fail@plt+0x3628>
   14d58:	ldr	r2, [sp, #20]
   14d5c:	mov	r0, #1
   14d60:	ldrb	r3, [r2]
   14d64:	add	r3, r3, r0
   14d68:	strb	r3, [r2]
   14d6c:	add	sp, sp, #28
   14d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d74:	str	r3, [sp, #8]
   14d78:	b	14b44 <__assert_fail@plt+0x35dc>
   14d7c:	mov	r1, #1
   14d80:	mov	r0, r5
   14d84:	bl	1baac <argp_parse@@Base+0x2c40>
   14d88:	cmp	r0, #0
   14d8c:	beq	14bc4 <__assert_fail@plt+0x365c>
   14d90:	ldr	r3, [r5, #28]
   14d94:	b	14bb4 <__assert_fail@plt+0x364c>
   14d98:	mov	r1, #1
   14d9c:	mov	r0, r5
   14da0:	bl	1baac <argp_parse@@Base+0x2c40>
   14da4:	cmp	r0, #0
   14da8:	beq	14bc4 <__assert_fail@plt+0x365c>
   14dac:	ldr	r1, [r5, #28]
   14db0:	b	14d00 <__assert_fail@plt+0x3798>
   14db4:	ldr	fp, [sp, #8]
   14db8:	b	14ce0 <__assert_fail@plt+0x3778>
   14dbc:	andeq	r0, r0, #6
   14dc0:	subs	r3, r0, #0
   14dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dc8:	moveq	r0, r3
   14dcc:	sub	sp, sp, #52	; 0x34
   14dd0:	mov	r4, r1
   14dd4:	beq	14de8 <__assert_fail@plt+0x3880>
   14dd8:	mov	r1, #10
   14ddc:	bl	113f4 <strchr@plt>
   14de0:	adds	r0, r0, #0
   14de4:	movne	r0, #1
   14de8:	cmp	r4, #0
   14dec:	str	r0, [sp, #20]
   14df0:	beq	15100 <__assert_fail@plt+0x3b98>
   14df4:	ldr	r3, [r4]
   14df8:	cmp	r3, #0
   14dfc:	beq	15100 <__assert_fail@plt+0x3b98>
   14e00:	mov	r9, #0
   14e04:	mov	r8, #10
   14e08:	str	r4, [sp, #24]
   14e0c:	ldr	r0, [r3, #8]
   14e10:	ldr	r4, [r3, #16]
   14e14:	cmp	r0, #0
   14e18:	moveq	r0, r9
   14e1c:	beq	14e30 <__assert_fail@plt+0x38c8>
   14e20:	mov	r1, r8
   14e24:	bl	113f4 <strchr@plt>
   14e28:	adds	r0, r0, #0
   14e2c:	movne	r0, #1
   14e30:	cmp	r4, #0
   14e34:	str	r0, [sp]
   14e38:	beq	150dc <__assert_fail@plt+0x3b74>
   14e3c:	ldr	r3, [r4]
   14e40:	cmp	r3, #0
   14e44:	beq	150dc <__assert_fail@plt+0x3b74>
   14e48:	str	r4, [sp, #28]
   14e4c:	ldr	r0, [r3, #8]
   14e50:	ldr	r4, [r3, #16]
   14e54:	cmp	r0, #0
   14e58:	moveq	r0, r9
   14e5c:	beq	14e70 <__assert_fail@plt+0x3908>
   14e60:	mov	r1, r8
   14e64:	bl	113f4 <strchr@plt>
   14e68:	adds	r0, r0, #0
   14e6c:	movne	r0, #1
   14e70:	cmp	r4, #0
   14e74:	str	r0, [sp, #4]
   14e78:	beq	150bc <__assert_fail@plt+0x3b54>
   14e7c:	ldr	r3, [r4]
   14e80:	cmp	r3, #0
   14e84:	beq	150bc <__assert_fail@plt+0x3b54>
   14e88:	str	r4, [sp, #32]
   14e8c:	ldr	r0, [r3, #8]
   14e90:	ldr	r4, [r3, #16]
   14e94:	cmp	r0, #0
   14e98:	moveq	r0, r9
   14e9c:	beq	14eb0 <__assert_fail@plt+0x3948>
   14ea0:	mov	r1, r8
   14ea4:	bl	113f4 <strchr@plt>
   14ea8:	adds	r0, r0, #0
   14eac:	movne	r0, #1
   14eb0:	cmp	r4, #0
   14eb4:	str	r0, [sp, #8]
   14eb8:	beq	1509c <__assert_fail@plt+0x3b34>
   14ebc:	ldr	r3, [r4]
   14ec0:	cmp	r3, #0
   14ec4:	beq	1509c <__assert_fail@plt+0x3b34>
   14ec8:	str	r4, [sp, #36]	; 0x24
   14ecc:	ldr	r0, [r3, #8]
   14ed0:	ldr	r4, [r3, #16]
   14ed4:	cmp	r0, #0
   14ed8:	moveq	r0, r9
   14edc:	beq	14ef0 <__assert_fail@plt+0x3988>
   14ee0:	mov	r1, r8
   14ee4:	bl	113f4 <strchr@plt>
   14ee8:	adds	r0, r0, #0
   14eec:	movne	r0, #1
   14ef0:	cmp	r4, #0
   14ef4:	str	r0, [sp, #12]
   14ef8:	beq	15078 <__assert_fail@plt+0x3b10>
   14efc:	ldr	r3, [r4]
   14f00:	cmp	r3, #0
   14f04:	beq	15078 <__assert_fail@plt+0x3b10>
   14f08:	str	r4, [sp, #40]	; 0x28
   14f0c:	ldr	r0, [r3, #8]
   14f10:	ldr	fp, [r3, #16]
   14f14:	cmp	r0, #0
   14f18:	moveq	r0, r9
   14f1c:	beq	14f30 <__assert_fail@plt+0x39c8>
   14f20:	mov	r1, r8
   14f24:	bl	113f4 <strchr@plt>
   14f28:	adds	r0, r0, #0
   14f2c:	movne	r0, #1
   14f30:	cmp	fp, #0
   14f34:	str	r0, [sp, #16]
   14f38:	beq	15054 <__assert_fail@plt+0x3aec>
   14f3c:	ldr	r3, [fp]
   14f40:	cmp	r3, #0
   14f44:	beq	15054 <__assert_fail@plt+0x3aec>
   14f48:	str	fp, [sp, #44]	; 0x2c
   14f4c:	ldr	r0, [r3, #8]
   14f50:	ldr	r7, [r3, #16]
   14f54:	cmp	r0, #0
   14f58:	moveq	r0, r9
   14f5c:	beq	14f70 <__assert_fail@plt+0x3a08>
   14f60:	mov	r1, r8
   14f64:	bl	113f4 <strchr@plt>
   14f68:	adds	r0, r0, #0
   14f6c:	movne	r0, #1
   14f70:	cmp	r7, #0
   14f74:	mov	r6, r0
   14f78:	beq	15034 <__assert_fail@plt+0x3acc>
   14f7c:	ldr	r3, [r7]
   14f80:	cmp	r3, #0
   14f84:	beq	15034 <__assert_fail@plt+0x3acc>
   14f88:	ldr	r0, [r3, #8]
   14f8c:	ldr	r5, [r3, #16]
   14f90:	cmp	r0, #0
   14f94:	moveq	sl, r9
   14f98:	beq	14fac <__assert_fail@plt+0x3a44>
   14f9c:	mov	r1, r8
   14fa0:	bl	113f4 <strchr@plt>
   14fa4:	adds	sl, r0, #0
   14fa8:	movne	sl, #1
   14fac:	cmp	r5, #0
   14fb0:	beq	15024 <__assert_fail@plt+0x3abc>
   14fb4:	ldr	r3, [r5]
   14fb8:	cmp	r3, #0
   14fbc:	beq	15024 <__assert_fail@plt+0x3abc>
   14fc0:	ldr	r0, [r3, #8]
   14fc4:	ldr	r4, [r3, #16]
   14fc8:	cmp	r0, #0
   14fcc:	moveq	fp, r9
   14fd0:	beq	14fe4 <__assert_fail@plt+0x3a7c>
   14fd4:	mov	r1, r8
   14fd8:	bl	113f4 <strchr@plt>
   14fdc:	adds	fp, r0, #0
   14fe0:	movne	fp, #1
   14fe4:	cmp	r4, #0
   14fe8:	beq	15014 <__assert_fail@plt+0x3aac>
   14fec:	ldr	r3, [r4]
   14ff0:	cmp	r3, #0
   14ff4:	beq	15014 <__assert_fail@plt+0x3aac>
   14ff8:	ldr	r1, [r3, #16]
   14ffc:	ldr	r0, [r3, #8]
   15000:	bl	14dc0 <__assert_fail@plt+0x3858>
   15004:	ldr	r3, [r4, #16]!
   15008:	cmp	r3, #0
   1500c:	add	fp, fp, r0
   15010:	bne	14ff8 <__assert_fail@plt+0x3a90>
   15014:	ldr	r3, [r5, #16]!
   15018:	add	sl, sl, fp
   1501c:	cmp	r3, #0
   15020:	bne	14fc0 <__assert_fail@plt+0x3a58>
   15024:	ldr	r3, [r7, #16]!
   15028:	add	r6, r6, sl
   1502c:	cmp	r3, #0
   15030:	bne	14f88 <__assert_fail@plt+0x3a20>
   15034:	ldr	r2, [sp, #44]	; 0x2c
   15038:	ldr	r3, [r2, #16]!
   1503c:	str	r2, [sp, #44]	; 0x2c
   15040:	ldr	r2, [sp, #16]
   15044:	cmp	r3, #0
   15048:	add	r2, r2, r6
   1504c:	str	r2, [sp, #16]
   15050:	bne	14f4c <__assert_fail@plt+0x39e4>
   15054:	ldr	r2, [sp, #40]	; 0x28
   15058:	ldr	r1, [sp, #16]
   1505c:	ldr	r3, [r2, #16]!
   15060:	str	r2, [sp, #40]	; 0x28
   15064:	ldr	r2, [sp, #12]
   15068:	cmp	r3, #0
   1506c:	add	r2, r2, r1
   15070:	str	r2, [sp, #12]
   15074:	bne	14f0c <__assert_fail@plt+0x39a4>
   15078:	ldr	r2, [sp, #36]	; 0x24
   1507c:	ldr	r1, [sp, #12]
   15080:	ldr	r3, [r2, #16]!
   15084:	str	r2, [sp, #36]	; 0x24
   15088:	ldr	r2, [sp, #8]
   1508c:	cmp	r3, #0
   15090:	add	r2, r2, r1
   15094:	str	r2, [sp, #8]
   15098:	bne	14ecc <__assert_fail@plt+0x3964>
   1509c:	ldr	r2, [sp, #32]
   150a0:	ldr	r3, [r2, #16]!
   150a4:	str	r2, [sp, #32]
   150a8:	ldmib	sp, {r1, r2}
   150ac:	cmp	r3, #0
   150b0:	add	r2, r2, r1
   150b4:	str	r2, [sp, #4]
   150b8:	bne	14e8c <__assert_fail@plt+0x3924>
   150bc:	ldr	r2, [sp, #28]
   150c0:	ldr	r3, [r2, #16]!
   150c4:	str	r2, [sp, #28]
   150c8:	ldm	sp, {r1, r2}
   150cc:	cmp	r3, #0
   150d0:	add	r2, r2, r1
   150d4:	str	r2, [sp]
   150d8:	bne	14e4c <__assert_fail@plt+0x38e4>
   150dc:	ldr	r2, [sp, #24]
   150e0:	ldr	r1, [sp]
   150e4:	ldr	r3, [r2, #16]!
   150e8:	str	r2, [sp, #24]
   150ec:	ldr	r2, [sp, #20]
   150f0:	cmp	r3, #0
   150f4:	add	r2, r2, r1
   150f8:	str	r2, [sp, #20]
   150fc:	bne	14e0c <__assert_fail@plt+0x38a4>
   15100:	ldr	r0, [sp, #20]
   15104:	add	sp, sp, #52	; 0x34
   15108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1510c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15110:	add	fp, sp, #32
   15114:	sub	sp, sp, #36	; 0x24
   15118:	ldr	r3, [r0, #4]
   1511c:	cmp	r3, #0
   15120:	str	r3, [fp, #-40]	; 0xffffffd8
   15124:	bne	15130 <__assert_fail@plt+0x3bc8>
   15128:	sub	sp, fp, #32
   1512c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15130:	mov	r4, r0
   15134:	str	r0, [fp, #-60]	; 0xffffffc4
   15138:	ldr	r0, [r0, #8]
   1513c:	str	r1, [fp, #-44]	; 0xffffffd4
   15140:	bl	113e8 <strlen@plt>
   15144:	ldr	r3, [r4]
   15148:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1514c:	add	r3, r3, #28
   15150:	mov	r9, r3
   15154:	str	r3, [fp, #-64]	; 0xffffffc0
   15158:	mov	sl, r9
   1515c:	str	r2, [fp, #-48]	; 0xffffffd0
   15160:	add	r3, r0, #15
   15164:	bic	r3, r3, #7
   15168:	sub	sp, sp, r3
   1516c:	str	sp, [fp, #-56]	; 0xffffffc8
   15170:	str	sp, [fp, #-52]	; 0xffffffcc
   15174:	ldr	r5, [sl, #-24]	; 0xffffffe8
   15178:	ldr	r4, [sl, #-28]	; 0xffffffe4
   1517c:	cmp	r5, #0
   15180:	ldr	r9, [sl, #-20]	; 0xffffffec
   15184:	beq	151fc <__assert_fail@plt+0x3c94>
   15188:	mov	r8, r4
   1518c:	b	1519c <__assert_fail@plt+0x3c34>
   15190:	subs	r5, r5, #1
   15194:	add	r4, r4, #24
   15198:	beq	151fc <__assert_fail@plt+0x3c94>
   1519c:	ldr	r6, [r4, #12]
   151a0:	tst	r6, #8
   151a4:	bne	15190 <__assert_fail@plt+0x3c28>
   151a8:	ldr	r7, [r4, #4]
   151ac:	sub	r3, r7, #1
   151b0:	cmp	r3, #254	; 0xfe
   151b4:	bhi	15190 <__assert_fail@plt+0x3c28>
   151b8:	bl	113c4 <__ctype_b_loc@plt>
   151bc:	lsl	r3, r7, #1
   151c0:	ldr	r2, [r0]
   151c4:	ldrh	r3, [r2, r3]
   151c8:	tst	r3, #16384	; 0x4000
   151cc:	beq	15190 <__assert_fail@plt+0x3c28>
   151d0:	ldrb	r3, [r9]
   151d4:	cmp	r7, r3
   151d8:	bne	15190 <__assert_fail@plt+0x3c28>
   151dc:	tst	r6, #4
   151e0:	moveq	r8, r4
   151e4:	tst	r6, #2
   151e8:	beq	15370 <__assert_fail@plt+0x3e08>
   151ec:	subs	r5, r5, #1
   151f0:	add	r9, r9, #1
   151f4:	add	r4, r4, #24
   151f8:	bne	1519c <__assert_fail@plt+0x3c34>
   151fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15200:	add	sl, sl, #28
   15204:	subs	r3, r3, #1
   15208:	str	r3, [fp, #-48]	; 0xffffffd0
   1520c:	bne	15174 <__assert_fail@plt+0x3c0c>
   15210:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15214:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15218:	cmp	r3, r2
   1521c:	bcc	15524 <__assert_fail@plt+0x3fbc>
   15220:	ldr	r7, [fp, #-64]	; 0xffffffc0
   15224:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15228:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1522c:	cmp	r5, #0
   15230:	ldr	r6, [r7, #-20]	; 0xffffffec
   15234:	movne	r8, r4
   15238:	bne	1524c <__assert_fail@plt+0x3ce4>
   1523c:	b	152ac <__assert_fail@plt+0x3d44>
   15240:	subs	r5, r5, #1
   15244:	add	r4, r4, #24
   15248:	beq	152ac <__assert_fail@plt+0x3d44>
   1524c:	ldr	r9, [r4, #12]
   15250:	tst	r9, #8
   15254:	bne	15240 <__assert_fail@plt+0x3cd8>
   15258:	ldr	sl, [r4, #4]
   1525c:	sub	r3, sl, #1
   15260:	cmp	r3, #254	; 0xfe
   15264:	bhi	15240 <__assert_fail@plt+0x3cd8>
   15268:	bl	113c4 <__ctype_b_loc@plt>
   1526c:	lsl	r3, sl, #1
   15270:	ldr	r1, [r0]
   15274:	ldrh	r3, [r1, r3]
   15278:	tst	r3, #16384	; 0x4000
   1527c:	beq	15240 <__assert_fail@plt+0x3cd8>
   15280:	ldrb	r3, [r6]
   15284:	cmp	sl, r3
   15288:	bne	15240 <__assert_fail@plt+0x3cd8>
   1528c:	tst	r9, #4
   15290:	moveq	r8, r4
   15294:	tst	r9, #2
   15298:	beq	153a8 <__assert_fail@plt+0x3e40>
   1529c:	subs	r5, r5, #1
   152a0:	add	r6, r6, #1
   152a4:	add	r4, r4, #24
   152a8:	bne	1524c <__assert_fail@plt+0x3ce4>
   152ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   152b0:	add	r7, r7, #28
   152b4:	subs	r3, r3, #1
   152b8:	str	r3, [fp, #-40]	; 0xffffffd8
   152bc:	bne	15224 <__assert_fail@plt+0x3cbc>
   152c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   152c4:	ldm	r3, {r7, r8}
   152c8:	cmp	r8, #0
   152cc:	beq	15128 <__assert_fail@plt+0x3bc0>
   152d0:	ldr	sl, [pc, #652]	; 15564 <__assert_fail@plt+0x3ffc>
   152d4:	ldr	r9, [pc, #652]	; 15568 <__assert_fail@plt+0x4000>
   152d8:	add	r7, r7, #28
   152dc:	ldr	r5, [r7, #-24]	; 0xffffffe8
   152e0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   152e4:	cmp	r5, #0
   152e8:	movne	r6, r4
   152ec:	bne	15300 <__assert_fail@plt+0x3d98>
   152f0:	b	1535c <__assert_fail@plt+0x3df4>
   152f4:	subs	r5, r5, #1
   152f8:	add	r4, r4, #24
   152fc:	beq	1535c <__assert_fail@plt+0x3df4>
   15300:	ldr	r2, [r4]
   15304:	cmp	r2, #0
   15308:	beq	152f4 <__assert_fail@plt+0x3d8c>
   1530c:	ldr	r1, [r4, #12]
   15310:	tst	r1, #4
   15314:	moveq	r6, r4
   15318:	tst	r1, #2
   1531c:	bne	152f4 <__assert_fail@plt+0x3d8c>
   15320:	ldr	r3, [r4, #8]
   15324:	ldr	r0, [r6, #12]
   15328:	cmp	r3, #0
   1532c:	orr	r1, r1, r0
   15330:	beq	15454 <__assert_fail@plt+0x3eec>
   15334:	tst	r1, #16
   15338:	bne	152f4 <__assert_fail@plt+0x3d8c>
   1533c:	tst	r1, #1
   15340:	movne	r1, r9
   15344:	moveq	r1, sl
   15348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1534c:	bl	1bbac <argp_parse@@Base+0x2d40>
   15350:	subs	r5, r5, #1
   15354:	add	r4, r4, #24
   15358:	bne	15300 <__assert_fail@plt+0x3d98>
   1535c:	subs	r8, r8, #1
   15360:	add	r7, r7, #28
   15364:	bne	152dc <__assert_fail@plt+0x3d74>
   15368:	sub	sp, fp, #32
   1536c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15370:	ldr	r3, [r4, #8]
   15374:	cmp	r3, #0
   15378:	bne	151ec <__assert_fail@plt+0x3c84>
   1537c:	ldr	r3, [r8, #8]
   15380:	cmp	r3, #0
   15384:	bne	151ec <__assert_fail@plt+0x3c84>
   15388:	ldr	r3, [r8, #12]
   1538c:	orr	r6, r6, r3
   15390:	tst	r6, #16
   15394:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   15398:	strbeq	r7, [r3]
   1539c:	addeq	r3, r3, #1
   153a0:	streq	r3, [fp, #-52]	; 0xffffffcc
   153a4:	b	151ec <__assert_fail@plt+0x3c84>
   153a8:	ldr	r3, [r4, #8]
   153ac:	ldr	r1, [r8, #12]
   153b0:	cmp	r3, #0
   153b4:	orr	r9, r9, r1
   153b8:	beq	154b0 <__assert_fail@plt+0x3f48>
   153bc:	tst	r9, #16
   153c0:	bne	1529c <__assert_fail@plt+0x3d34>
   153c4:	tst	r9, #1
   153c8:	bne	15478 <__assert_fail@plt+0x3f10>
   153cc:	mov	r0, r3
   153d0:	str	r3, [fp, #-48]	; 0xffffffd0
   153d4:	bl	113e8 <strlen@plt>
   153d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153dc:	ldr	r1, [r3, #28]
   153e0:	ldr	r2, [r3, #24]
   153e4:	sub	r2, r1, r2
   153e8:	mov	r9, r0
   153ec:	ldr	r0, [r3, #16]
   153f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   153f4:	cmp	r2, r0
   153f8:	bhi	1550c <__assert_fail@plt+0x3fa4>
   153fc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15400:	ldr	r2, [ip, #20]
   15404:	ldr	r0, [ip, #8]
   15408:	bic	r2, r2, r2, asr #31
   1540c:	add	r2, r2, #6
   15410:	add	r2, r2, r9
   15414:	cmp	r2, r0
   15418:	bcc	1548c <__assert_fail@plt+0x3f24>
   1541c:	ldr	r2, [ip, #32]
   15420:	mov	r0, ip
   15424:	cmp	r2, r1
   15428:	bls	154c0 <__assert_fail@plt+0x3f58>
   1542c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15430:	add	r2, r1, #1
   15434:	str	r2, [r0, #28]
   15438:	mov	r2, #10
   1543c:	strb	r2, [r1]
   15440:	ldr	r2, [r4, #4]
   15444:	ldr	r1, [pc, #288]	; 1556c <__assert_fail@plt+0x4004>
   15448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1544c:	bl	1bbac <argp_parse@@Base+0x2d40>
   15450:	b	1529c <__assert_fail@plt+0x3d34>
   15454:	tst	r1, #16
   15458:	bne	152f4 <__assert_fail@plt+0x3d8c>
   1545c:	ldr	r3, [r6, #8]
   15460:	cmp	r3, #0
   15464:	bne	1533c <__assert_fail@plt+0x3dd4>
   15468:	ldr	r1, [pc, #256]	; 15570 <__assert_fail@plt+0x4008>
   1546c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15470:	bl	1bbac <argp_parse@@Base+0x2d40>
   15474:	b	152f4 <__assert_fail@plt+0x3d8c>
   15478:	mov	r2, sl
   1547c:	ldr	r1, [pc, #240]	; 15574 <__assert_fail@plt+0x400c>
   15480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15484:	bl	1bbac <argp_parse@@Base+0x2d40>
   15488:	b	1529c <__assert_fail@plt+0x3d34>
   1548c:	ldr	r2, [ip, #32]
   15490:	cmp	r2, r1
   15494:	bls	154e4 <__assert_fail@plt+0x3f7c>
   15498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1549c:	add	r2, r1, #1
   154a0:	str	r2, [r0, #28]
   154a4:	mov	r2, #32
   154a8:	strb	r2, [r1]
   154ac:	b	15440 <__assert_fail@plt+0x3ed8>
   154b0:	ldr	r3, [r8, #8]
   154b4:	cmp	r3, #0
   154b8:	beq	1529c <__assert_fail@plt+0x3d34>
   154bc:	b	153bc <__assert_fail@plt+0x3e54>
   154c0:	mov	r1, #1
   154c4:	str	r3, [fp, #-48]	; 0xffffffd0
   154c8:	mov	r9, ip
   154cc:	bl	1baac <argp_parse@@Base+0x2c40>
   154d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   154d4:	cmp	r0, #0
   154d8:	beq	15440 <__assert_fail@plt+0x3ed8>
   154dc:	ldr	r1, [r9, #28]
   154e0:	b	1542c <__assert_fail@plt+0x3ec4>
   154e4:	ldr	r9, [fp, #-44]	; 0xffffffd4
   154e8:	mov	r1, #1
   154ec:	mov	r0, r9
   154f0:	str	r3, [fp, #-48]	; 0xffffffd0
   154f4:	bl	1baac <argp_parse@@Base+0x2c40>
   154f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   154fc:	cmp	r0, #0
   15500:	beq	15440 <__assert_fail@plt+0x3ed8>
   15504:	ldr	r1, [r9, #28]
   15508:	b	15498 <__assert_fail@plt+0x3f30>
   1550c:	ldr	sl, [fp, #-44]	; 0xffffffd4
   15510:	mov	r0, sl
   15514:	bl	1b500 <argp_parse@@Base+0x2694>
   15518:	ldr	r1, [sl, #28]
   1551c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15520:	b	153fc <__assert_fail@plt+0x3e94>
   15524:	mov	r2, r3
   15528:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   1552c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15530:	ldr	r1, [pc, #64]	; 15578 <__assert_fail@plt+0x4010>
   15534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15538:	strb	ip, [r3]
   1553c:	bl	1bbac <argp_parse@@Base+0x2d40>
   15540:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15544:	ldr	r3, [r2, #4]
   15548:	cmp	r3, #0
   1554c:	str	r3, [fp, #-40]	; 0xffffffd8
   15550:	beq	15128 <__assert_fail@plt+0x3bc0>
   15554:	ldr	r3, [r2]
   15558:	add	r3, r3, #28
   1555c:	str	r3, [fp, #-64]	; 0xffffffc0
   15560:	b	15220 <__assert_fail@plt+0x3cb8>
   15564:	andeq	lr, r1, r4, lsr r2
   15568:	andeq	lr, r1, r4, lsr #4
   1556c:	andeq	lr, r1, r8, lsl r2
   15570:	andeq	lr, r1, r0, asr #4
   15574:	andeq	lr, r1, ip, lsl #4
   15578:	andeq	lr, r1, r4, lsl #4
   1557c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15580:	subs	r4, r1, #0
   15584:	sub	sp, sp, #12
   15588:	mov	r8, r0
   1558c:	mov	r7, r2
   15590:	beq	15764 <__assert_fail@plt+0x41fc>
   15594:	ldr	r3, [r4, #20]
   15598:	cmp	r3, #0
   1559c:	beq	15764 <__assert_fail@plt+0x41fc>
   155a0:	ldr	r1, [r2, #16]
   155a4:	mov	r0, r4
   155a8:	bl	19c8c <argp_parse@@Base+0xe20>
   155ac:	ldr	r3, [r4, #20]
   155b0:	mov	r1, r8
   155b4:	mov	r2, r0
   155b8:	ldr	r0, [pc, #628]	; 15834 <__assert_fail@plt+0x42cc>
   155bc:	blx	r3
   155c0:	mov	r6, r0
   155c4:	cmp	r6, #0
   155c8:	beq	15730 <__assert_fail@plt+0x41c8>
   155cc:	ldrb	r3, [r6]
   155d0:	cmp	r3, #0
   155d4:	beq	15724 <__assert_fail@plt+0x41bc>
   155d8:	ldr	r3, [r7, #8]
   155dc:	ldr	r3, [r3]
   155e0:	cmp	r3, #0
   155e4:	beq	1560c <__assert_fail@plt+0x40a4>
   155e8:	ldr	r4, [r7, #4]
   155ec:	ldr	r3, [r4, #28]
   155f0:	ldr	r2, [r4, #32]
   155f4:	cmp	r3, r2
   155f8:	bcs	15818 <__assert_fail@plt+0x42b0>
   155fc:	add	r1, r3, #1
   15600:	mov	r2, #10
   15604:	str	r1, [r4, #28]
   15608:	strb	r2, [r3]
   1560c:	ldr	r4, [r7, #4]
   15610:	ldr	sl, [pc, #544]	; 15838 <__assert_fail@plt+0x42d0>
   15614:	ldr	r3, [r4, #28]
   15618:	ldr	r1, [r4, #24]
   1561c:	ldr	r2, [r4, #16]
   15620:	sub	r3, r3, r1
   15624:	cmp	r3, r2
   15628:	ldr	r5, [sl, #24]
   1562c:	bhi	157f0 <__assert_fail@plt+0x4288>
   15630:	ldr	r3, [r4, #20]
   15634:	mov	fp, #32
   15638:	cmp	r3, #0
   1563c:	subge	r5, r5, r3
   15640:	mov	r9, #1
   15644:	cmp	r5, #0
   15648:	sub	r5, r5, #1
   1564c:	ble	15678 <__assert_fail@plt+0x4110>
   15650:	ldr	r3, [r4, #28]
   15654:	ldr	r2, [r4, #32]
   15658:	cmp	r3, r2
   1565c:	bcs	15748 <__assert_fail@plt+0x41e0>
   15660:	add	r2, r3, #1
   15664:	cmp	r5, #0
   15668:	str	r2, [r4, #28]
   1566c:	sub	r5, r5, #1
   15670:	strb	fp, [r3]
   15674:	bgt	15650 <__assert_fail@plt+0x40e8>
   15678:	ldr	r4, [r7, #4]
   1567c:	ldr	r9, [sl, #24]
   15680:	ldr	r5, [r4, #28]
   15684:	ldr	r3, [r4, #24]
   15688:	ldr	r2, [r4, #16]
   1568c:	sub	r3, r5, r3
   15690:	cmp	r3, r2
   15694:	strls	r9, [r4, #4]
   15698:	movls	fp, r4
   1569c:	bhi	157a4 <__assert_fail@plt+0x423c>
   156a0:	str	r9, [fp, #12]
   156a4:	mov	r0, r6
   156a8:	bl	113e8 <strlen@plt>
   156ac:	subs	r9, r0, #0
   156b0:	beq	156e8 <__assert_fail@plt+0x4180>
   156b4:	ldr	r2, [r4, #32]
   156b8:	add	r3, r5, r9
   156bc:	cmp	r2, r3
   156c0:	bcc	15774 <__assert_fail@plt+0x420c>
   156c4:	mov	r2, r9
   156c8:	mov	r0, r5
   156cc:	mov	r1, r6
   156d0:	bl	11298 <memcpy@plt>
   156d4:	ldr	r3, [r4, #28]
   156d8:	add	r9, r3, r9
   156dc:	str	r9, [r4, #28]
   156e0:	ldr	r4, [r7, #4]
   156e4:	ldr	r5, [r4, #28]
   156e8:	ldr	r3, [r4, #24]
   156ec:	ldr	r2, [r4, #16]
   156f0:	sub	r3, r5, r3
   156f4:	cmp	r3, r2
   156f8:	movls	r9, r4
   156fc:	bhi	15790 <__assert_fail@plt+0x4228>
   15700:	ldr	r2, [r9, #32]
   15704:	mov	r3, #0
   15708:	cmp	r2, r5
   1570c:	str	r3, [r4, #4]
   15710:	bls	157fc <__assert_fail@plt+0x4294>
   15714:	add	r2, r5, #1
   15718:	mov	r3, #10
   1571c:	str	r2, [r9, #28]
   15720:	strb	r3, [r5]
   15724:	ldr	r3, [r7, #8]
   15728:	mov	r2, #1
   1572c:	str	r2, [r3, #4]
   15730:	cmp	r8, r6
   15734:	beq	1576c <__assert_fail@plt+0x4204>
   15738:	mov	r0, r6
   1573c:	add	sp, sp, #12
   15740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15744:	b	19de8 <argp_parse@@Base+0xf7c>
   15748:	mov	r1, r9
   1574c:	mov	r0, r4
   15750:	bl	1baac <argp_parse@@Base+0x2c40>
   15754:	cmp	r0, #0
   15758:	beq	15644 <__assert_fail@plt+0x40dc>
   1575c:	ldr	r3, [r4, #28]
   15760:	b	15660 <__assert_fail@plt+0x40f8>
   15764:	mov	r6, r8
   15768:	b	155c4 <__assert_fail@plt+0x405c>
   1576c:	add	sp, sp, #12
   15770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15774:	mov	r1, r9
   15778:	mov	r0, r4
   1577c:	bl	1baac <argp_parse@@Base+0x2c40>
   15780:	cmp	r0, #0
   15784:	beq	156e0 <__assert_fail@plt+0x4178>
   15788:	ldr	r5, [r4, #28]
   1578c:	b	156c4 <__assert_fail@plt+0x415c>
   15790:	mov	r0, r4
   15794:	bl	1b500 <argp_parse@@Base+0x2694>
   15798:	ldr	r9, [r7, #4]
   1579c:	ldr	r5, [r9, #28]
   157a0:	b	15700 <__assert_fail@plt+0x4198>
   157a4:	mov	r0, r4
   157a8:	str	r9, [sp, #4]
   157ac:	bl	1b500 <argp_parse@@Base+0x2694>
   157b0:	ldr	fp, [r7, #4]
   157b4:	ldr	r3, [sp, #4]
   157b8:	ldr	r9, [sl, #24]
   157bc:	ldr	r5, [fp, #28]
   157c0:	ldr	r2, [fp, #24]
   157c4:	ldr	r1, [fp, #16]
   157c8:	sub	r2, r5, r2
   157cc:	cmp	r2, r1
   157d0:	str	r3, [r4, #4]
   157d4:	movls	r4, fp
   157d8:	bls	156a0 <__assert_fail@plt+0x4138>
   157dc:	mov	r0, fp
   157e0:	bl	1b500 <argp_parse@@Base+0x2694>
   157e4:	ldr	r4, [r7, #4]
   157e8:	ldr	r5, [r4, #28]
   157ec:	b	156a0 <__assert_fail@plt+0x4138>
   157f0:	mov	r0, r4
   157f4:	bl	1b500 <argp_parse@@Base+0x2694>
   157f8:	b	15630 <__assert_fail@plt+0x40c8>
   157fc:	mov	r1, #1
   15800:	mov	r0, r9
   15804:	bl	1baac <argp_parse@@Base+0x2c40>
   15808:	cmp	r0, #0
   1580c:	beq	15724 <__assert_fail@plt+0x41bc>
   15810:	ldr	r5, [r9, #28]
   15814:	b	15714 <__assert_fail@plt+0x41ac>
   15818:	mov	r1, #1
   1581c:	mov	r0, r4
   15820:	bl	1baac <argp_parse@@Base+0x2c40>
   15824:	cmp	r0, #0
   15828:	beq	1560c <__assert_fail@plt+0x40a4>
   1582c:	ldr	r3, [r4, #28]
   15830:	b	155fc <__assert_fail@plt+0x4094>
   15834:	andeq	r0, r0, #3
   15838:	andeq	pc, r2, ip, lsl #8
   1583c:	ldr	r3, [r1, #12]
   15840:	push	{r4, r5, r6, r7, r8, lr}
   15844:	cmp	r3, #0
   15848:	mov	r6, r1
   1584c:	mov	r5, r0
   15850:	beq	15938 <__assert_fail@plt+0x43d0>
   15854:	ldr	r3, [r1, #8]
   15858:	ldr	r2, [r1]
   1585c:	ldr	r7, [r3]
   15860:	ldr	r3, [r3, #4]
   15864:	ldr	r4, [r2, #16]
   15868:	cmp	r3, #0
   1586c:	cmpne	r7, #0
   15870:	beq	158a8 <__assert_fail@plt+0x4340>
   15874:	ldr	r2, [r2, #12]
   15878:	ldr	r3, [r7, #12]
   1587c:	cmp	r2, r3
   15880:	beq	158a8 <__assert_fail@plt+0x4340>
   15884:	ldr	r8, [r1, #4]
   15888:	ldr	r3, [r8, #28]
   1588c:	ldr	r2, [r8, #32]
   15890:	cmp	r3, r2
   15894:	bcs	15a70 <__assert_fail@plt+0x4508>
   15898:	add	r1, r3, #1
   1589c:	mov	r2, #10
   158a0:	str	r1, [r8, #28]
   158a4:	strb	r2, [r3]
   158a8:	cmp	r4, #0
   158ac:	beq	159ec <__assert_fail@plt+0x4484>
   158b0:	ldr	r0, [r4]
   158b4:	cmp	r0, #0
   158b8:	beq	159ec <__assert_fail@plt+0x4484>
   158bc:	ldrb	r3, [r0]
   158c0:	cmp	r3, #0
   158c4:	beq	159ec <__assert_fail@plt+0x4484>
   158c8:	cmp	r7, #0
   158cc:	beq	158fc <__assert_fail@plt+0x4394>
   158d0:	ldr	r3, [r7, #16]
   158d4:	cmp	r4, r3
   158d8:	beq	159ec <__assert_fail@plt+0x4484>
   158dc:	cmp	r3, #0
   158e0:	beq	158fc <__assert_fail@plt+0x4394>
   158e4:	ldr	r3, [r3, #12]
   158e8:	cmp	r3, #0
   158ec:	cmpne	r4, r3
   158f0:	bne	158e4 <__assert_fail@plt+0x437c>
   158f4:	cmp	r4, r3
   158f8:	beq	159ec <__assert_fail@plt+0x4484>
   158fc:	ldr	r3, [r6, #4]
   15900:	ldr	r1, [r4, #16]
   15904:	mov	r2, r6
   15908:	ldr	r7, [r3, #12]
   1590c:	bl	1557c <__assert_fail@plt+0x4014>
   15910:	ldr	r8, [r6, #4]
   15914:	ldr	r3, [r8, #28]
   15918:	ldr	r1, [r8, #24]
   1591c:	ldr	r2, [r8, #16]
   15920:	sub	r3, r3, r1
   15924:	cmp	r3, r2
   15928:	movls	r4, r8
   1592c:	bhi	15a50 <__assert_fail@plt+0x44e8>
   15930:	str	r7, [r8, #12]
   15934:	b	15a00 <__assert_fail@plt+0x4498>
   15938:	ldr	r7, [r1, #4]
   1593c:	ldr	r3, [r7, #28]
   15940:	ldr	r1, [r7, #32]
   15944:	add	r2, r3, #2
   15948:	cmp	r1, r2
   1594c:	bcc	159d0 <__assert_fail@plt+0x4468>
   15950:	ldr	r2, [pc, #308]	; 15a8c <__assert_fail@plt+0x4524>
   15954:	ldrh	r2, [r2]
   15958:	strh	r2, [r3]
   1595c:	ldr	r4, [r6, #4]
   15960:	ldr	r3, [r7, #28]
   15964:	add	r3, r3, #2
   15968:	str	r3, [r7, #28]
   1596c:	ldr	r1, [r4, #24]
   15970:	ldr	r3, [r4, #28]
   15974:	ldr	r2, [r4, #16]
   15978:	sub	r3, r3, r1
   1597c:	cmp	r3, r2
   15980:	bhi	15a10 <__assert_fail@plt+0x44a8>
   15984:	ldr	r3, [r4, #20]
   15988:	mov	r6, #32
   1598c:	cmp	r3, #0
   15990:	subge	r5, r5, r3
   15994:	mov	r7, #1
   15998:	cmp	r5, #0
   1599c:	sub	r5, r5, #1
   159a0:	ble	159cc <__assert_fail@plt+0x4464>
   159a4:	ldr	r3, [r4, #28]
   159a8:	ldr	r2, [r4, #32]
   159ac:	cmp	r3, r2
   159b0:	bcs	15a1c <__assert_fail@plt+0x44b4>
   159b4:	add	r2, r3, #1
   159b8:	cmp	r5, #0
   159bc:	str	r2, [r4, #28]
   159c0:	sub	r5, r5, #1
   159c4:	strb	r6, [r3]
   159c8:	bgt	159a4 <__assert_fail@plt+0x443c>
   159cc:	pop	{r4, r5, r6, r7, r8, pc}
   159d0:	mov	r1, #2
   159d4:	mov	r0, r7
   159d8:	bl	1baac <argp_parse@@Base+0x2c40>
   159dc:	cmp	r0, #0
   159e0:	beq	15a38 <__assert_fail@plt+0x44d0>
   159e4:	ldr	r3, [r7, #28]
   159e8:	b	15950 <__assert_fail@plt+0x43e8>
   159ec:	ldr	r4, [r6, #4]
   159f0:	ldr	r3, [r4, #28]
   159f4:	ldr	r1, [r4, #24]
   159f8:	ldr	r2, [r4, #16]
   159fc:	sub	r3, r3, r1
   15a00:	mov	r1, #0
   15a04:	cmp	r3, r2
   15a08:	str	r1, [r6, #12]
   15a0c:	bls	15984 <__assert_fail@plt+0x441c>
   15a10:	mov	r0, r4
   15a14:	bl	1b500 <argp_parse@@Base+0x2694>
   15a18:	b	15984 <__assert_fail@plt+0x441c>
   15a1c:	mov	r1, r7
   15a20:	mov	r0, r4
   15a24:	bl	1baac <argp_parse@@Base+0x2c40>
   15a28:	cmp	r0, #0
   15a2c:	beq	15998 <__assert_fail@plt+0x4430>
   15a30:	ldr	r3, [r4, #28]
   15a34:	b	159b4 <__assert_fail@plt+0x444c>
   15a38:	ldr	r4, [r6, #4]
   15a3c:	ldr	r3, [r4, #28]
   15a40:	ldr	r1, [r4, #24]
   15a44:	ldr	r2, [r4, #16]
   15a48:	sub	r3, r3, r1
   15a4c:	b	1597c <__assert_fail@plt+0x4414>
   15a50:	mov	r0, r8
   15a54:	bl	1b500 <argp_parse@@Base+0x2694>
   15a58:	ldr	r4, [r6, #4]
   15a5c:	ldr	r3, [r4, #28]
   15a60:	ldr	r1, [r4, #24]
   15a64:	ldr	r2, [r4, #16]
   15a68:	sub	r3, r3, r1
   15a6c:	b	15930 <__assert_fail@plt+0x43c8>
   15a70:	mov	r1, #1
   15a74:	mov	r0, r8
   15a78:	bl	1baac <argp_parse@@Base+0x2c40>
   15a7c:	cmp	r0, #0
   15a80:	beq	158a8 <__assert_fail@plt+0x4340>
   15a84:	ldr	r3, [r8, #28]
   15a88:	b	15898 <__assert_fail@plt+0x4330>
   15a8c:	andeq	lr, r1, r8, asr #4
   15a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a94:	sub	sp, sp, #28
   15a98:	ldr	r6, [r0, #12]
   15a9c:	ldr	r7, [r1, #12]
   15aa0:	cmp	r6, r7
   15aa4:	beq	15d1c <__assert_fail@plt+0x47b4>
   15aa8:	ldr	r8, [r6, #12]
   15aac:	ldr	r9, [r7, #12]
   15ab0:	mov	r5, r1
   15ab4:	cmp	r8, r9
   15ab8:	mov	r4, r0
   15abc:	beq	15ce4 <__assert_fail@plt+0x477c>
   15ac0:	ldr	sl, [r8, #12]
   15ac4:	ldr	fp, [r9, #12]
   15ac8:	cmp	sl, fp
   15acc:	beq	15d84 <__assert_fail@plt+0x481c>
   15ad0:	ldr	r3, [sl, #12]
   15ad4:	ldr	r2, [fp, #12]
   15ad8:	cmp	r3, r2
   15adc:	beq	15db8 <__assert_fail@plt+0x4850>
   15ae0:	ldr	r1, [r3, #12]
   15ae4:	ldr	r0, [r2, #12]
   15ae8:	str	r1, [sp]
   15aec:	cmp	r1, r0
   15af0:	str	r0, [sp, #4]
   15af4:	beq	15d50 <__assert_fail@plt+0x47e8>
   15af8:	ldr	r1, [r1, #12]
   15afc:	ldr	r0, [r0, #12]
   15b00:	str	r1, [sp, #8]
   15b04:	cmp	r1, r0
   15b08:	str	r0, [sp, #12]
   15b0c:	beq	15dec <__assert_fail@plt+0x4884>
   15b10:	ldr	r0, [r1, #12]
   15b14:	ldr	r1, [sp, #12]
   15b18:	ldr	r1, [r1, #12]
   15b1c:	cmp	r0, r1
   15b20:	beq	15e2c <__assert_fail@plt+0x48c4>
   15b24:	str	r2, [sp, #20]
   15b28:	str	r3, [sp, #16]
   15b2c:	bl	15a90 <__assert_fail@plt+0x4528>
   15b30:	cmp	r0, #0
   15b34:	bne	15cdc <__assert_fail@plt+0x4774>
   15b38:	ldr	r3, [sp, #12]
   15b3c:	ldr	r2, [sp, #20]
   15b40:	ldr	r1, [r3, #8]
   15b44:	ldr	r3, [sp, #8]
   15b48:	mvn	ip, r1
   15b4c:	ldr	r0, [r3, #8]
   15b50:	lsr	ip, ip, #31
   15b54:	ldr	r3, [sp, #16]
   15b58:	cmp	ip, r0, lsr #31
   15b5c:	subne	r0, r0, r1
   15b60:	subeq	r0, r1, r0
   15b64:	cmp	r0, #0
   15b68:	bne	15cdc <__assert_fail@plt+0x4774>
   15b6c:	ldr	r1, [sp, #12]
   15b70:	ldr	r0, [sp, #8]
   15b74:	ldr	r1, [r1, #4]
   15b78:	ldr	r0, [r0, #4]
   15b7c:	sub	r0, r1, r0
   15b80:	cmp	r0, #0
   15b84:	bne	15cdc <__assert_fail@plt+0x4774>
   15b88:	ldr	r1, [sp, #4]
   15b8c:	ldr	r0, [sp]
   15b90:	ldr	r1, [r1, #8]
   15b94:	ldr	r0, [r0, #8]
   15b98:	mvn	ip, r1
   15b9c:	lsr	ip, ip, #31
   15ba0:	cmp	ip, r0, lsr #31
   15ba4:	subne	r0, r0, r1
   15ba8:	subeq	r0, r1, r0
   15bac:	cmp	r0, #0
   15bb0:	bne	15cdc <__assert_fail@plt+0x4774>
   15bb4:	ldr	r1, [sp, #4]
   15bb8:	ldr	r0, [sp]
   15bbc:	ldr	r1, [r1, #4]
   15bc0:	ldr	r0, [r0, #4]
   15bc4:	sub	r0, r1, r0
   15bc8:	cmp	r0, #0
   15bcc:	bne	15cdc <__assert_fail@plt+0x4774>
   15bd0:	ldr	r1, [r2, #8]
   15bd4:	ldr	r0, [r3, #8]
   15bd8:	mvn	ip, r1
   15bdc:	lsr	ip, ip, #31
   15be0:	cmp	ip, r0, lsr #31
   15be4:	subne	r0, r0, r1
   15be8:	subeq	r0, r1, r0
   15bec:	cmp	r0, #0
   15bf0:	bne	15cdc <__assert_fail@plt+0x4774>
   15bf4:	ldr	r2, [r2, #4]
   15bf8:	ldr	r0, [r3, #4]
   15bfc:	sub	r0, r2, r0
   15c00:	cmp	r0, #0
   15c04:	bne	15cdc <__assert_fail@plt+0x4774>
   15c08:	ldr	r3, [fp, #8]
   15c0c:	ldr	r0, [sl, #8]
   15c10:	mvn	r2, r3
   15c14:	lsr	r2, r2, #31
   15c18:	cmp	r2, r0, lsr #31
   15c1c:	subne	r0, r0, r3
   15c20:	subeq	r0, r3, r0
   15c24:	cmp	r0, #0
   15c28:	bne	15cdc <__assert_fail@plt+0x4774>
   15c2c:	ldr	r3, [fp, #4]
   15c30:	ldr	r0, [sl, #4]
   15c34:	sub	r0, r3, r0
   15c38:	cmp	r0, #0
   15c3c:	bne	15cdc <__assert_fail@plt+0x4774>
   15c40:	ldr	r3, [r9, #8]
   15c44:	ldr	r0, [r8, #8]
   15c48:	mvn	r2, r3
   15c4c:	lsr	r2, r2, #31
   15c50:	cmp	r2, r0, lsr #31
   15c54:	subne	r0, r0, r3
   15c58:	subeq	r0, r3, r0
   15c5c:	cmp	r0, #0
   15c60:	bne	15cdc <__assert_fail@plt+0x4774>
   15c64:	ldr	r3, [r9, #4]
   15c68:	ldr	r0, [r8, #4]
   15c6c:	sub	r0, r3, r0
   15c70:	cmp	r0, #0
   15c74:	bne	15cdc <__assert_fail@plt+0x4774>
   15c78:	ldr	r3, [r7, #8]
   15c7c:	ldr	r0, [r6, #8]
   15c80:	mvn	r2, r3
   15c84:	lsr	r2, r2, #31
   15c88:	cmp	r2, r0, lsr #31
   15c8c:	subne	r0, r0, r3
   15c90:	subeq	r0, r3, r0
   15c94:	cmp	r0, #0
   15c98:	bne	15cdc <__assert_fail@plt+0x4774>
   15c9c:	ldr	r3, [r7, #4]
   15ca0:	ldr	r0, [r6, #4]
   15ca4:	sub	r0, r3, r0
   15ca8:	cmp	r0, #0
   15cac:	bne	15cdc <__assert_fail@plt+0x4774>
   15cb0:	ldr	r3, [r5, #8]
   15cb4:	ldr	r0, [r4, #8]
   15cb8:	mvn	r2, r3
   15cbc:	lsr	r2, r2, #31
   15cc0:	cmp	r2, r0, lsr #31
   15cc4:	subne	r0, r0, r3
   15cc8:	subeq	r0, r3, r0
   15ccc:	cmp	r0, #0
   15cd0:	ldreq	r3, [r5, #4]
   15cd4:	ldreq	r0, [r4, #4]
   15cd8:	subeq	r0, r3, r0
   15cdc:	add	sp, sp, #28
   15ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ce4:	ldr	r3, [r7, #8]
   15ce8:	ldr	r0, [r6, #8]
   15cec:	mvn	r2, r3
   15cf0:	ldr	r1, [r7, #4]
   15cf4:	lsr	r2, r2, #31
   15cf8:	cmp	r2, r0, lsr #31
   15cfc:	subne	r0, r0, r3
   15d00:	subeq	r0, r3, r0
   15d04:	ldr	r2, [r6, #4]
   15d08:	cmp	r0, #0
   15d0c:	subeq	r0, r1, r2
   15d10:	beq	15ca8 <__assert_fail@plt+0x4740>
   15d14:	add	sp, sp, #28
   15d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d1c:	ldr	r2, [r1, #8]
   15d20:	ldr	r3, [r0, #8]
   15d24:	mvn	ip, r2
   15d28:	ldr	lr, [r1, #4]
   15d2c:	lsr	ip, ip, #31
   15d30:	cmp	ip, r3, lsr #31
   15d34:	ldr	r1, [r0, #4]
   15d38:	subne	r0, r3, r2
   15d3c:	subeq	r0, r2, r3
   15d40:	cmp	r0, #0
   15d44:	subeq	r0, lr, r1
   15d48:	add	sp, sp, #28
   15d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d50:	ldr	r1, [r2, #8]
   15d54:	ldr	r0, [r3, #8]
   15d58:	mvn	ip, r1
   15d5c:	ldr	r2, [r2, #4]
   15d60:	lsr	ip, ip, #31
   15d64:	cmp	ip, r0, lsr #31
   15d68:	subne	r0, r0, r1
   15d6c:	subeq	r0, r1, r0
   15d70:	ldr	r3, [r3, #4]
   15d74:	cmp	r0, #0
   15d78:	subeq	r0, r2, r3
   15d7c:	beq	15c00 <__assert_fail@plt+0x4698>
   15d80:	b	15cdc <__assert_fail@plt+0x4774>
   15d84:	ldr	r3, [r9, #8]
   15d88:	ldr	r0, [r8, #8]
   15d8c:	mvn	r2, r3
   15d90:	ldr	r1, [r9, #4]
   15d94:	lsr	r2, r2, #31
   15d98:	cmp	r2, r0, lsr #31
   15d9c:	subne	r0, r0, r3
   15da0:	subeq	r0, r3, r0
   15da4:	ldr	r2, [r8, #4]
   15da8:	cmp	r0, #0
   15dac:	subeq	r0, r1, r2
   15db0:	beq	15c70 <__assert_fail@plt+0x4708>
   15db4:	b	15cdc <__assert_fail@plt+0x4774>
   15db8:	ldr	r3, [fp, #8]
   15dbc:	ldr	r0, [sl, #8]
   15dc0:	mvn	r2, r3
   15dc4:	ldr	r1, [fp, #4]
   15dc8:	lsr	r2, r2, #31
   15dcc:	cmp	r2, r0, lsr #31
   15dd0:	subne	r0, r0, r3
   15dd4:	subeq	r0, r3, r0
   15dd8:	ldr	r2, [sl, #4]
   15ddc:	cmp	r0, #0
   15de0:	subeq	r0, r1, r2
   15de4:	beq	15c38 <__assert_fail@plt+0x46d0>
   15de8:	b	15cdc <__assert_fail@plt+0x4774>
   15dec:	ldr	ip, [sp, #4]
   15df0:	ldr	r1, [sp]
   15df4:	ldr	lr, [ip, #8]
   15df8:	ldr	r0, [r1, #8]
   15dfc:	mvn	r1, lr
   15e00:	ldr	ip, [ip, #4]
   15e04:	lsr	r1, r1, #31
   15e08:	cmp	r1, r0, lsr #31
   15e0c:	ldr	r1, [sp]
   15e10:	subne	r0, r0, lr
   15e14:	subeq	r0, lr, r0
   15e18:	ldr	r1, [r1, #4]
   15e1c:	cmp	r0, #0
   15e20:	subeq	r0, ip, r1
   15e24:	beq	15bc8 <__assert_fail@plt+0x4660>
   15e28:	b	15cdc <__assert_fail@plt+0x4774>
   15e2c:	ldr	ip, [sp, #12]
   15e30:	ldr	r1, [sp, #8]
   15e34:	ldr	lr, [ip, #8]
   15e38:	ldr	r0, [r1, #8]
   15e3c:	mvn	r1, lr
   15e40:	ldr	ip, [ip, #4]
   15e44:	lsr	r1, r1, #31
   15e48:	cmp	r1, r0, lsr #31
   15e4c:	ldr	r1, [sp, #8]
   15e50:	subne	r0, r0, lr
   15e54:	subeq	r0, lr, r0
   15e58:	ldr	r1, [r1, #4]
   15e5c:	cmp	r0, #0
   15e60:	subeq	r0, ip, r1
   15e64:	beq	15b80 <__assert_fail@plt+0x4618>
   15e68:	b	15cdc <__assert_fail@plt+0x4774>
   15e6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e70:	mov	r6, r1
   15e74:	ldr	r4, [r0, #16]
   15e78:	sub	sp, sp, #28
   15e7c:	cmp	r4, #0
   15e80:	movne	r2, r4
   15e84:	bne	15e90 <__assert_fail@plt+0x4928>
   15e88:	b	164b8 <__assert_fail@plt+0x4f50>
   15e8c:	mov	r2, r3
   15e90:	ldr	r3, [r2, #12]
   15e94:	cmp	r3, #0
   15e98:	bne	15e8c <__assert_fail@plt+0x4924>
   15e9c:	ldr	r5, [r6, #16]
   15ea0:	ldr	ip, [r2, #8]
   15ea4:	cmp	r5, #0
   15ea8:	movne	r2, r5
   15eac:	bne	15eb8 <__assert_fail@plt+0x4950>
   15eb0:	b	164cc <__assert_fail@plt+0x4f64>
   15eb4:	mov	r2, r3
   15eb8:	ldr	r3, [r2, #12]
   15ebc:	cmp	r3, #0
   15ec0:	bne	15eb4 <__assert_fail@plt+0x494c>
   15ec4:	ldr	r3, [r2, #8]
   15ec8:	mvn	r2, r3
   15ecc:	lsr	r2, r2, #31
   15ed0:	cmp	r2, ip, lsr #31
   15ed4:	subne	r1, ip, r3
   15ed8:	subeq	r1, r3, ip
   15edc:	cmp	r1, #0
   15ee0:	bne	1605c <__assert_fail@plt+0x4af4>
   15ee4:	adds	r1, r5, #0
   15ee8:	movne	r1, #1
   15eec:	cmp	r4, #0
   15ef0:	rsbeq	r1, r1, #0
   15ef4:	rsbne	r1, r1, #1
   15ef8:	cmp	r1, #0
   15efc:	bne	1605c <__assert_fail@plt+0x4af4>
   15f00:	cmp	r4, #0
   15f04:	mov	fp, r0
   15f08:	beq	16254 <__assert_fail@plt+0x4cec>
   15f0c:	ldr	r1, [r4, #20]
   15f10:	ldr	r2, [r5, #20]
   15f14:	cmp	r1, r2
   15f18:	bgt	16068 <__assert_fail@plt+0x4b00>
   15f1c:	bge	16200 <__assert_fail@plt+0x4c98>
   15f20:	ldr	r5, [r5, #12]
   15f24:	ldr	r3, [r5, #20]
   15f28:	cmp	r1, r3
   15f2c:	blt	15f20 <__assert_fail@plt+0x49b8>
   15f30:	ldr	r6, [r4, #12]
   15f34:	ldr	r7, [r5, #12]
   15f38:	cmp	r6, r7
   15f3c:	beq	1673c <__assert_fail@plt+0x51d4>
   15f40:	ldr	r8, [r6, #12]
   15f44:	ldr	r9, [r7, #12]
   15f48:	cmp	r8, r9
   15f4c:	beq	16674 <__assert_fail@plt+0x510c>
   15f50:	ldr	sl, [r8, #12]
   15f54:	ldr	fp, [r9, #12]
   15f58:	cmp	sl, fp
   15f5c:	beq	167a4 <__assert_fail@plt+0x523c>
   15f60:	ldr	r0, [sl, #12]
   15f64:	ldr	r1, [fp, #12]
   15f68:	cmp	r0, r1
   15f6c:	beq	16850 <__assert_fail@plt+0x52e8>
   15f70:	bl	15a90 <__assert_fail@plt+0x4528>
   15f74:	subs	r1, r0, #0
   15f78:	bne	1605c <__assert_fail@plt+0x4af4>
   15f7c:	ldr	r1, [fp, #8]
   15f80:	ldr	r3, [sl, #8]
   15f84:	mvn	r2, r1
   15f88:	lsr	r2, r2, #31
   15f8c:	cmp	r2, r3, lsr #31
   15f90:	subne	r1, r3, r1
   15f94:	subeq	r1, r1, r3
   15f98:	cmp	r1, #0
   15f9c:	bne	1605c <__assert_fail@plt+0x4af4>
   15fa0:	ldr	r1, [fp, #4]
   15fa4:	ldr	r3, [sl, #4]
   15fa8:	sub	r1, r1, r3
   15fac:	cmp	r1, #0
   15fb0:	bne	1605c <__assert_fail@plt+0x4af4>
   15fb4:	ldr	r1, [r9, #8]
   15fb8:	ldr	r3, [r8, #8]
   15fbc:	mvn	r2, r1
   15fc0:	lsr	r2, r2, #31
   15fc4:	cmp	r2, r3, lsr #31
   15fc8:	subne	r1, r3, r1
   15fcc:	subeq	r1, r1, r3
   15fd0:	cmp	r1, #0
   15fd4:	bne	1605c <__assert_fail@plt+0x4af4>
   15fd8:	ldr	r1, [r9, #4]
   15fdc:	ldr	r3, [r8, #4]
   15fe0:	sub	r1, r1, r3
   15fe4:	cmp	r1, #0
   15fe8:	bne	1605c <__assert_fail@plt+0x4af4>
   15fec:	ldr	r1, [r7, #8]
   15ff0:	ldr	r3, [r6, #8]
   15ff4:	mvn	r2, r1
   15ff8:	lsr	r2, r2, #31
   15ffc:	cmp	r2, r3, lsr #31
   16000:	subne	r1, r3, r1
   16004:	subeq	r1, r1, r3
   16008:	cmp	r1, #0
   1600c:	bne	1605c <__assert_fail@plt+0x4af4>
   16010:	ldr	r1, [r7, #4]
   16014:	ldr	r3, [r6, #4]
   16018:	sub	r1, r1, r3
   1601c:	cmp	r1, #0
   16020:	bne	1605c <__assert_fail@plt+0x4af4>
   16024:	ldr	r1, [r5, #8]
   16028:	ldr	r3, [r4, #8]
   1602c:	mvn	r2, r1
   16030:	lsr	r2, r2, #31
   16034:	cmp	r2, r3, lsr #31
   16038:	subne	r1, r3, r1
   1603c:	subeq	r1, r1, r3
   16040:	cmp	r1, #0
   16044:	bne	1605c <__assert_fail@plt+0x4af4>
   16048:	ldr	r1, [r5, #4]
   1604c:	ldr	r3, [r4, #4]
   16050:	sub	r1, r1, r3
   16054:	cmp	r1, #0
   16058:	mvneq	r1, #0
   1605c:	mov	r0, r1
   16060:	add	sp, sp, #28
   16064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16068:	ldr	r4, [r4, #12]
   1606c:	ldr	r3, [r4, #20]
   16070:	cmp	r2, r3
   16074:	blt	16068 <__assert_fail@plt+0x4b00>
   16078:	ldr	r6, [r4, #12]
   1607c:	ldr	r7, [r5, #12]
   16080:	cmp	r6, r7
   16084:	beq	166dc <__assert_fail@plt+0x5174>
   16088:	ldr	r8, [r6, #12]
   1608c:	ldr	r9, [r7, #12]
   16090:	cmp	r8, r9
   16094:	beq	16770 <__assert_fail@plt+0x5208>
   16098:	ldr	sl, [r8, #12]
   1609c:	ldr	fp, [r9, #12]
   160a0:	cmp	sl, fp
   160a4:	beq	166a8 <__assert_fail@plt+0x5140>
   160a8:	ldr	r3, [sl, #12]
   160ac:	ldr	r2, [fp, #12]
   160b0:	cmp	r3, r2
   160b4:	beq	167d8 <__assert_fail@plt+0x5270>
   160b8:	ldr	r0, [r3, #12]
   160bc:	ldr	r1, [r2, #12]
   160c0:	cmp	r0, r1
   160c4:	beq	16884 <__assert_fail@plt+0x531c>
   160c8:	str	r2, [sp, #8]
   160cc:	str	r3, [sp, #4]
   160d0:	bl	15a90 <__assert_fail@plt+0x4528>
   160d4:	subs	r1, r0, #0
   160d8:	bne	1605c <__assert_fail@plt+0x4af4>
   160dc:	ldr	r2, [sp, #8]
   160e0:	ldr	r3, [sp, #4]
   160e4:	ldr	r0, [r2, #8]
   160e8:	ldr	r1, [r3, #8]
   160ec:	mvn	ip, r0
   160f0:	lsr	ip, ip, #31
   160f4:	cmp	ip, r1, lsr #31
   160f8:	subne	r1, r1, r0
   160fc:	subeq	r1, r0, r1
   16100:	cmp	r1, #0
   16104:	bne	1605c <__assert_fail@plt+0x4af4>
   16108:	ldr	r1, [r2, #4]
   1610c:	ldr	r3, [r3, #4]
   16110:	sub	r1, r1, r3
   16114:	cmp	r1, #0
   16118:	bne	1605c <__assert_fail@plt+0x4af4>
   1611c:	ldr	r1, [fp, #8]
   16120:	ldr	r3, [sl, #8]
   16124:	mvn	r2, r1
   16128:	lsr	r2, r2, #31
   1612c:	cmp	r2, r3, lsr #31
   16130:	subne	r1, r3, r1
   16134:	subeq	r1, r1, r3
   16138:	cmp	r1, #0
   1613c:	bne	1605c <__assert_fail@plt+0x4af4>
   16140:	ldr	r1, [fp, #4]
   16144:	ldr	r3, [sl, #4]
   16148:	sub	r1, r1, r3
   1614c:	cmp	r1, #0
   16150:	bne	1605c <__assert_fail@plt+0x4af4>
   16154:	ldr	r1, [r9, #8]
   16158:	ldr	r3, [r8, #8]
   1615c:	mvn	r2, r1
   16160:	lsr	r2, r2, #31
   16164:	cmp	r2, r3, lsr #31
   16168:	subne	r1, r3, r1
   1616c:	subeq	r1, r1, r3
   16170:	cmp	r1, #0
   16174:	bne	1605c <__assert_fail@plt+0x4af4>
   16178:	ldr	r1, [r9, #4]
   1617c:	ldr	r3, [r8, #4]
   16180:	sub	r1, r1, r3
   16184:	cmp	r1, #0
   16188:	bne	1605c <__assert_fail@plt+0x4af4>
   1618c:	ldr	r1, [r7, #8]
   16190:	ldr	r3, [r6, #8]
   16194:	mvn	r2, r1
   16198:	lsr	r2, r2, #31
   1619c:	cmp	r2, r3, lsr #31
   161a0:	subne	r1, r3, r1
   161a4:	subeq	r1, r1, r3
   161a8:	cmp	r1, #0
   161ac:	bne	1605c <__assert_fail@plt+0x4af4>
   161b0:	ldr	r1, [r7, #4]
   161b4:	ldr	r3, [r6, #4]
   161b8:	sub	r1, r1, r3
   161bc:	cmp	r1, #0
   161c0:	bne	1605c <__assert_fail@plt+0x4af4>
   161c4:	ldr	r1, [r5, #8]
   161c8:	ldr	r3, [r4, #8]
   161cc:	mvn	r2, r1
   161d0:	lsr	r2, r2, #31
   161d4:	cmp	r2, r3, lsr #31
   161d8:	subne	r1, r3, r1
   161dc:	subeq	r1, r1, r3
   161e0:	cmp	r1, #0
   161e4:	bne	1605c <__assert_fail@plt+0x4af4>
   161e8:	ldr	r1, [r5, #4]
   161ec:	ldr	r3, [r4, #4]
   161f0:	sub	r1, r1, r3
   161f4:	cmp	r1, #0
   161f8:	moveq	r1, #1
   161fc:	b	1605c <__assert_fail@plt+0x4af4>
   16200:	ldr	r0, [r4, #12]
   16204:	ldr	r1, [r5, #12]
   16208:	cmp	r0, r1
   1620c:	beq	1680c <__assert_fail@plt+0x52a4>
   16210:	bl	15a90 <__assert_fail@plt+0x4528>
   16214:	subs	r1, r0, #0
   16218:	bne	1605c <__assert_fail@plt+0x4af4>
   1621c:	ldr	r1, [r5, #8]
   16220:	ldr	r3, [r4, #8]
   16224:	mvn	r2, r1
   16228:	lsr	r2, r2, #31
   1622c:	cmp	r2, r3, lsr #31
   16230:	subne	r1, r3, r1
   16234:	subeq	r1, r1, r3
   16238:	cmp	r1, #0
   1623c:	bne	1605c <__assert_fail@plt+0x4af4>
   16240:	ldr	r1, [r5, #4]
   16244:	ldr	r3, [r4, #4]
   16248:	sub	r1, r1, r3
   1624c:	cmp	r1, #0
   16250:	bne	1605c <__assert_fail@plt+0x4af4>
   16254:	ldr	r1, [r6, #12]
   16258:	ldr	r3, [fp, #12]
   1625c:	mvn	r2, r1
   16260:	lsr	r2, r2, #31
   16264:	cmp	r2, r3, lsr #31
   16268:	subne	r1, r3, r1
   1626c:	subeq	r1, r1, r3
   16270:	cmp	r1, #0
   16274:	bne	1605c <__assert_fail@plt+0x4af4>
   16278:	ldm	fp, {r8, r9}
   1627c:	cmp	r9, #0
   16280:	beq	168b8 <__assert_fail@plt+0x5350>
   16284:	add	r3, r8, #24
   16288:	mov	r2, r9
   1628c:	ldr	r4, [r3, #-24]	; 0xffffffe8
   16290:	cmp	r4, #0
   16294:	beq	162a4 <__assert_fail@plt+0x4d3c>
   16298:	ldr	r0, [r3, #-12]
   1629c:	tst	r0, #2
   162a0:	beq	162b4 <__assert_fail@plt+0x4d4c>
   162a4:	subs	r2, r2, #1
   162a8:	add	r3, r3, #24
   162ac:	bne	1628c <__assert_fail@plt+0x4d24>
   162b0:	mov	r4, r2
   162b4:	ldm	r6, {r7, sl}
   162b8:	cmp	sl, #0
   162bc:	beq	168c0 <__assert_fail@plt+0x5358>
   162c0:	add	r3, r7, #24
   162c4:	mov	r2, sl
   162c8:	ldr	r5, [r3, #-24]	; 0xffffffe8
   162cc:	cmp	r5, #0
   162d0:	beq	162e0 <__assert_fail@plt+0x4d78>
   162d4:	ldr	r0, [r3, #-12]
   162d8:	tst	r0, #2
   162dc:	beq	162f0 <__assert_fail@plt+0x4d88>
   162e0:	subs	r2, r2, #1
   162e4:	add	r3, r3, #24
   162e8:	bne	162c8 <__assert_fail@plt+0x4d60>
   162ec:	mov	r5, r2
   162f0:	ldr	r3, [r8, #12]
   162f4:	tst	r3, #8
   162f8:	beq	16364 <__assert_fail@plt+0x4dfc>
   162fc:	cmp	r4, #0
   16300:	beq	16364 <__assert_fail@plt+0x4dfc>
   16304:	str	r1, [sp, #4]
   16308:	bl	113c4 <__ctype_b_loc@plt>
   1630c:	ldr	r1, [sp, #4]
   16310:	mov	ip, r4
   16314:	ldr	r0, [r0]
   16318:	ldrb	r2, [ip]
   1631c:	mov	r4, ip
   16320:	add	ip, ip, #1
   16324:	lsl	r3, r2, #1
   16328:	ldrh	r3, [r0, r3]
   1632c:	tst	r3, #8192	; 0x2000
   16330:	bne	16318 <__assert_fail@plt+0x4db0>
   16334:	cmp	r2, #0
   16338:	bne	16354 <__assert_fail@plt+0x4dec>
   1633c:	b	16660 <__assert_fail@plt+0x50f8>
   16340:	ldrb	r3, [r4, #1]!
   16344:	cmp	r3, #0
   16348:	lsl	r3, r3, #1
   1634c:	beq	1635c <__assert_fail@plt+0x4df4>
   16350:	ldrh	r3, [r0, r3]
   16354:	tst	r3, #8
   16358:	beq	16340 <__assert_fail@plt+0x4dd8>
   1635c:	cmp	r2, #45	; 0x2d
   16360:	bne	16660 <__assert_fail@plt+0x50f8>
   16364:	ldr	r3, [r7, #12]
   16368:	tst	r3, #8
   1636c:	beq	163f8 <__assert_fail@plt+0x4e90>
   16370:	cmp	r5, #0
   16374:	movne	r2, r1
   16378:	beq	163f8 <__assert_fail@plt+0x4e90>
   1637c:	str	r1, [sp, #8]
   16380:	str	r2, [sp, #4]
   16384:	bl	113c4 <__ctype_b_loc@plt>
   16388:	ldr	r2, [sp, #4]
   1638c:	ldr	r1, [sp, #8]
   16390:	mov	r3, r5
   16394:	ldr	ip, [r0]
   16398:	ldrb	r0, [r3]
   1639c:	mov	r5, r3
   163a0:	add	r3, r3, #1
   163a4:	lsl	lr, r0, #1
   163a8:	ldrh	lr, [ip, lr]
   163ac:	tst	lr, #8192	; 0x2000
   163b0:	bne	16398 <__assert_fail@plt+0x4e30>
   163b4:	cmp	r0, #0
   163b8:	beq	163e4 <__assert_fail@plt+0x4e7c>
   163bc:	tst	lr, #8
   163c0:	beq	163d4 <__assert_fail@plt+0x4e6c>
   163c4:	b	163e4 <__assert_fail@plt+0x4e7c>
   163c8:	ldrh	r3, [ip, r3]
   163cc:	tst	r3, #8
   163d0:	bne	163e4 <__assert_fail@plt+0x4e7c>
   163d4:	ldrb	r3, [r5, #1]!
   163d8:	cmp	r3, #0
   163dc:	lsl	r3, r3, #1
   163e0:	bne	163c8 <__assert_fail@plt+0x4e60>
   163e4:	cmp	r0, #45	; 0x2d
   163e8:	subne	r2, r2, #1
   163ec:	cmp	r2, #0
   163f0:	movne	r1, r2
   163f4:	bne	1605c <__assert_fail@plt+0x4af4>
   163f8:	ldr	r3, [fp, #8]
   163fc:	cmp	r9, #0
   16400:	mov	r2, r3
   16404:	beq	168c8 <__assert_fail@plt+0x5360>
   16408:	str	r7, [sp, #16]
   1640c:	str	r6, [sp, #20]
   16410:	mov	r3, #1
   16414:	str	r4, [sp, #8]
   16418:	str	r5, [sp, #12]
   1641c:	mov	r7, r1
   16420:	mov	r6, r2
   16424:	b	16440 <__assert_fail@plt+0x4ed8>
   16428:	subs	r9, r9, #1
   1642c:	moveq	ip, #0
   16430:	andne	ip, ip, #1
   16434:	cmp	ip, #0
   16438:	add	r8, r8, #24
   1643c:	beq	164d4 <__assert_fail@plt+0x4f6c>
   16440:	ldr	r4, [r8, #12]
   16444:	mov	ip, r3
   16448:	ands	fp, r4, #8
   1644c:	movne	fp, r7
   16450:	bne	16428 <__assert_fail@plt+0x4ec0>
   16454:	ldr	r5, [r8, #4]
   16458:	sub	r0, r5, #1
   1645c:	cmp	r0, #254	; 0xfe
   16460:	bhi	16428 <__assert_fail@plt+0x4ec0>
   16464:	str	r3, [sp, #4]
   16468:	bl	113c4 <__ctype_b_loc@plt>
   1646c:	lsl	lr, r5, #1
   16470:	ldr	r3, [sp, #4]
   16474:	mov	ip, r3
   16478:	ldr	r0, [r0]
   1647c:	ldrh	r0, [r0, lr]
   16480:	tst	r0, #16384	; 0x4000
   16484:	beq	16428 <__assert_fail@plt+0x4ec0>
   16488:	ldrb	r0, [r6]
   1648c:	mov	ip, r3
   16490:	cmp	r5, r0
   16494:	bne	16428 <__assert_fail@plt+0x4ec0>
   16498:	and	r4, r4, #10
   1649c:	cmp	r4, #0
   164a0:	moveq	fp, r5
   164a4:	movne	fp, #0
   164a8:	add	r6, r6, #1
   164ac:	movne	ip, #1
   164b0:	moveq	ip, #0
   164b4:	b	16428 <__assert_fail@plt+0x4ec0>
   164b8:	ldr	r5, [r6, #16]
   164bc:	ldr	ip, [r0, #12]
   164c0:	cmp	r5, #0
   164c4:	movne	r2, r5
   164c8:	bne	15eb8 <__assert_fail@plt+0x4950>
   164cc:	ldr	r3, [r6, #12]
   164d0:	b	15ec8 <__assert_fail@plt+0x4960>
   164d4:	mov	r3, fp
   164d8:	ldr	r6, [sp, #20]
   164dc:	uxtb	r3, r3
   164e0:	cmp	sl, #0
   164e4:	str	fp, [sp, #4]
   164e8:	mov	r1, r7
   164ec:	ldr	r4, [sp, #8]
   164f0:	ldr	r7, [sp, #16]
   164f4:	ldr	r5, [sp, #12]
   164f8:	ldr	fp, [r6, #8]
   164fc:	str	r3, [sp, #16]
   16500:	beq	16710 <__assert_fail@plt+0x51a8>
   16504:	str	r4, [sp, #8]
   16508:	mov	r8, #1
   1650c:	str	r5, [sp, #12]
   16510:	mov	r4, r1
   16514:	b	16530 <__assert_fail@plt+0x4fc8>
   16518:	subs	sl, sl, #1
   1651c:	moveq	r3, #0
   16520:	andne	r3, r3, #1
   16524:	cmp	r3, #0
   16528:	add	r7, r7, #24
   1652c:	beq	1659c <__assert_fail@plt+0x5034>
   16530:	ldr	r6, [r7, #12]
   16534:	mov	r3, r8
   16538:	ands	r9, r6, #8
   1653c:	movne	r9, r4
   16540:	bne	16518 <__assert_fail@plt+0x4fb0>
   16544:	ldr	r5, [r7, #4]
   16548:	sub	r0, r5, #1
   1654c:	cmp	r0, #254	; 0xfe
   16550:	bhi	16518 <__assert_fail@plt+0x4fb0>
   16554:	bl	113c4 <__ctype_b_loc@plt>
   16558:	lsl	ip, r5, #1
   1655c:	mov	r3, r8
   16560:	ldr	r0, [r0]
   16564:	ldrh	r0, [r0, ip]
   16568:	tst	r0, #16384	; 0x4000
   1656c:	beq	16518 <__assert_fail@plt+0x4fb0>
   16570:	ldrb	r0, [fp]
   16574:	mov	r3, r8
   16578:	cmp	r5, r0
   1657c:	bne	16518 <__assert_fail@plt+0x4fb0>
   16580:	and	r6, r6, #2
   16584:	cmp	r6, #0
   16588:	moveq	r9, r5
   1658c:	add	fp, fp, #1
   16590:	movne	r3, #1
   16594:	moveq	r3, #0
   16598:	b	16518 <__assert_fail@plt+0x4fb0>
   1659c:	mov	r1, r4
   165a0:	ldmib	sp, {r3, r4}
   165a4:	ldr	r5, [sp, #12]
   165a8:	uxtb	r6, r9
   165ac:	cmp	r3, #0
   165b0:	beq	1664c <__assert_fail@plt+0x50e4>
   165b4:	ldr	r3, [sp, #16]
   165b8:	mov	r7, r3
   165bc:	lsl	r8, r3, #2
   165c0:	cmp	r9, #0
   165c4:	beq	16728 <__assert_fail@plt+0x51c0>
   165c8:	lsl	sl, r6, #2
   165cc:	bl	113a0 <__ctype_tolower_loc@plt>
   165d0:	ldr	r3, [r0]
   165d4:	ldr	r1, [r3, r8]
   165d8:	ldr	r3, [r3, sl]
   165dc:	subs	r1, r1, r3
   165e0:	bne	1605c <__assert_fail@plt+0x4af4>
   165e4:	subs	r1, r6, r7
   165e8:	bne	1605c <__assert_fail@plt+0x4af4>
   165ec:	adds	r1, r9, #0
   165f0:	ldr	r3, [sp, #4]
   165f4:	movne	r1, #1
   165f8:	cmp	r3, #0
   165fc:	rsbeq	r1, r1, #0
   16600:	rsbne	r1, r1, #1
   16604:	cmp	r1, #0
   16608:	bne	1605c <__assert_fail@plt+0x4af4>
   1660c:	cmp	r3, #0
   16610:	bne	1605c <__assert_fail@plt+0x4af4>
   16614:	adds	r1, r5, #0
   16618:	movne	r1, #1
   1661c:	cmp	r4, #0
   16620:	rsbeq	r1, r1, #0
   16624:	rsbne	r1, r1, #1
   16628:	cmp	r1, #0
   1662c:	bne	1605c <__assert_fail@plt+0x4af4>
   16630:	cmp	r4, #0
   16634:	beq	1605c <__assert_fail@plt+0x4af4>
   16638:	mov	r1, r5
   1663c:	mov	r0, r4
   16640:	add	sp, sp, #28
   16644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16648:	b	112ec <strcasecmp@plt>
   1664c:	cmp	r4, #0
   16650:	beq	168f4 <__assert_fail@plt+0x538c>
   16654:	ldrb	r7, [r4]
   16658:	lsl	r8, r7, #2
   1665c:	b	165c0 <__assert_fail@plt+0x5058>
   16660:	ldr	r3, [r7, #12]
   16664:	tst	r3, #8
   16668:	bne	16840 <__assert_fail@plt+0x52d8>
   1666c:	mov	r1, #1
   16670:	b	1605c <__assert_fail@plt+0x4af4>
   16674:	ldr	r1, [r7, #8]
   16678:	ldr	r3, [r6, #8]
   1667c:	mvn	r2, r1
   16680:	ldr	r0, [r7, #4]
   16684:	lsr	r2, r2, #31
   16688:	cmp	r2, r3, lsr #31
   1668c:	subne	r1, r3, r1
   16690:	subeq	r1, r1, r3
   16694:	ldr	r2, [r6, #4]
   16698:	cmp	r1, #0
   1669c:	subeq	r1, r0, r2
   166a0:	beq	1601c <__assert_fail@plt+0x4ab4>
   166a4:	b	1605c <__assert_fail@plt+0x4af4>
   166a8:	ldr	r1, [r9, #8]
   166ac:	ldr	r3, [r8, #8]
   166b0:	mvn	r2, r1
   166b4:	ldr	r0, [r9, #4]
   166b8:	lsr	r2, r2, #31
   166bc:	cmp	r2, r3, lsr #31
   166c0:	subne	r1, r3, r1
   166c4:	subeq	r1, r1, r3
   166c8:	ldr	r2, [r8, #4]
   166cc:	cmp	r1, #0
   166d0:	subeq	r1, r0, r2
   166d4:	beq	16184 <__assert_fail@plt+0x4c1c>
   166d8:	b	1605c <__assert_fail@plt+0x4af4>
   166dc:	ldr	r1, [r5, #8]
   166e0:	ldr	r3, [r4, #8]
   166e4:	mvn	r2, r1
   166e8:	ldr	r0, [r5, #4]
   166ec:	lsr	r2, r2, #31
   166f0:	cmp	r2, r3, lsr #31
   166f4:	subne	r1, r3, r1
   166f8:	subeq	r1, r1, r3
   166fc:	ldr	r2, [r4, #4]
   16700:	cmp	r1, #0
   16704:	subeq	r1, r0, r2
   16708:	beq	161f4 <__assert_fail@plt+0x4c8c>
   1670c:	b	1605c <__assert_fail@plt+0x4af4>
   16710:	ldr	r3, [sp, #4]
   16714:	cmp	r3, #0
   16718:	beq	16900 <__assert_fail@plt+0x5398>
   1671c:	ldr	r3, [sp, #16]
   16720:	mov	r7, r3
   16724:	lsl	r8, r3, #2
   16728:	cmp	r5, #0
   1672c:	beq	168e4 <__assert_fail@plt+0x537c>
   16730:	ldrb	r6, [r5]
   16734:	mov	r9, r1
   16738:	b	165c8 <__assert_fail@plt+0x5060>
   1673c:	ldr	r1, [r5, #8]
   16740:	ldr	r3, [r4, #8]
   16744:	mvn	r2, r1
   16748:	ldr	r0, [r5, #4]
   1674c:	lsr	r2, r2, #31
   16750:	cmp	r2, r3, lsr #31
   16754:	subne	r1, r3, r1
   16758:	subeq	r1, r1, r3
   1675c:	ldr	r2, [r4, #4]
   16760:	cmp	r1, #0
   16764:	subeq	r1, r0, r2
   16768:	beq	16054 <__assert_fail@plt+0x4aec>
   1676c:	b	1605c <__assert_fail@plt+0x4af4>
   16770:	ldr	r1, [r7, #8]
   16774:	ldr	r3, [r6, #8]
   16778:	mvn	r2, r1
   1677c:	ldr	r0, [r7, #4]
   16780:	lsr	r2, r2, #31
   16784:	cmp	r2, r3, lsr #31
   16788:	subne	r1, r3, r1
   1678c:	subeq	r1, r1, r3
   16790:	ldr	r2, [r6, #4]
   16794:	cmp	r1, #0
   16798:	subeq	r1, r0, r2
   1679c:	beq	161bc <__assert_fail@plt+0x4c54>
   167a0:	b	1605c <__assert_fail@plt+0x4af4>
   167a4:	ldr	r1, [r9, #8]
   167a8:	ldr	r3, [r8, #8]
   167ac:	mvn	r2, r1
   167b0:	ldr	r0, [r9, #4]
   167b4:	lsr	r2, r2, #31
   167b8:	cmp	r2, r3, lsr #31
   167bc:	subne	r1, r3, r1
   167c0:	subeq	r1, r1, r3
   167c4:	ldr	r2, [r8, #4]
   167c8:	cmp	r1, #0
   167cc:	subeq	r1, r0, r2
   167d0:	beq	15fe4 <__assert_fail@plt+0x4a7c>
   167d4:	b	1605c <__assert_fail@plt+0x4af4>
   167d8:	ldr	r1, [fp, #8]
   167dc:	ldr	r3, [sl, #8]
   167e0:	mvn	r2, r1
   167e4:	ldr	r0, [fp, #4]
   167e8:	lsr	r2, r2, #31
   167ec:	cmp	r2, r3, lsr #31
   167f0:	subne	r1, r3, r1
   167f4:	subeq	r1, r1, r3
   167f8:	ldr	r2, [sl, #4]
   167fc:	cmp	r1, #0
   16800:	subeq	r1, r0, r2
   16804:	beq	1614c <__assert_fail@plt+0x4be4>
   16808:	b	1605c <__assert_fail@plt+0x4af4>
   1680c:	ldr	r1, [r5, #8]
   16810:	ldr	r3, [r4, #8]
   16814:	mvn	r2, r1
   16818:	ldr	r0, [r5, #4]
   1681c:	lsr	r2, r2, #31
   16820:	cmp	r2, r3, lsr #31
   16824:	subne	r1, r3, r1
   16828:	subeq	r1, r1, r3
   1682c:	ldr	r2, [r4, #4]
   16830:	cmp	r1, #0
   16834:	subeq	r1, r0, r2
   16838:	beq	1624c <__assert_fail@plt+0x4ce4>
   1683c:	b	1605c <__assert_fail@plt+0x4af4>
   16840:	cmp	r5, #0
   16844:	beq	1666c <__assert_fail@plt+0x5104>
   16848:	mov	r2, #1
   1684c:	b	1637c <__assert_fail@plt+0x4e14>
   16850:	ldr	r1, [fp, #8]
   16854:	ldr	r3, [sl, #8]
   16858:	mvn	r2, r1
   1685c:	ldr	r0, [fp, #4]
   16860:	lsr	r2, r2, #31
   16864:	cmp	r2, r3, lsr #31
   16868:	subne	r1, r3, r1
   1686c:	subeq	r1, r1, r3
   16870:	ldr	r2, [sl, #4]
   16874:	cmp	r1, #0
   16878:	subeq	r1, r0, r2
   1687c:	beq	15fac <__assert_fail@plt+0x4a44>
   16880:	b	1605c <__assert_fail@plt+0x4af4>
   16884:	ldr	r0, [r2, #8]
   16888:	ldr	r1, [r3, #8]
   1688c:	mvn	ip, r0
   16890:	ldr	r2, [r2, #4]
   16894:	lsr	ip, ip, #31
   16898:	cmp	ip, r1, lsr #31
   1689c:	subne	r1, r1, r0
   168a0:	subeq	r1, r0, r1
   168a4:	ldr	r3, [r3, #4]
   168a8:	cmp	r1, #0
   168ac:	subeq	r1, r2, r3
   168b0:	beq	16114 <__assert_fail@plt+0x4bac>
   168b4:	b	1605c <__assert_fail@plt+0x4af4>
   168b8:	mov	r4, r1
   168bc:	b	162b4 <__assert_fail@plt+0x4d4c>
   168c0:	mov	r5, sl
   168c4:	b	162f0 <__assert_fail@plt+0x4d88>
   168c8:	cmp	sl, #0
   168cc:	ldr	fp, [r6, #8]
   168d0:	streq	r1, [sp, #4]
   168d4:	beq	16900 <__assert_fail@plt+0x5398>
   168d8:	str	r9, [sp, #16]
   168dc:	str	r1, [sp, #4]
   168e0:	b	16504 <__assert_fail@plt+0x4f9c>
   168e4:	mov	r9, r1
   168e8:	mov	sl, r5
   168ec:	mov	r6, r5
   168f0:	b	165cc <__assert_fail@plt+0x5064>
   168f4:	mov	r8, r4
   168f8:	mov	r7, r4
   168fc:	b	165c0 <__assert_fail@plt+0x5058>
   16900:	cmp	r4, #0
   16904:	moveq	r8, r4
   16908:	moveq	r7, r4
   1690c:	beq	16728 <__assert_fail@plt+0x51c0>
   16910:	mov	r9, r1
   16914:	mov	r6, #0
   16918:	b	16654 <__assert_fail@plt+0x50ec>

0001691c <argp_failure@@Base>:
   1691c:	push	{r3}		; (str r3, [sp, #-4]!)
   16920:	push	{r4, r5, r6, r7, lr}
   16924:	subs	r5, r0, #0
   16928:	sub	sp, sp, #200	; 0xc8
   1692c:	mov	r7, r1
   16930:	mov	r6, r2
   16934:	beq	16a84 <argp_failure@@Base+0x168>
   16938:	ldr	r3, [r5, #16]
   1693c:	tst	r3, #2
   16940:	bne	16a74 <argp_failure@@Base+0x158>
   16944:	ldr	r4, [r5, #44]	; 0x2c
   16948:	cmp	r4, #0
   1694c:	beq	16a74 <argp_failure@@Base+0x158>
   16950:	mov	r0, r4
   16954:	bl	114e4 <flockfile@plt>
   16958:	ldr	r0, [r5, #40]	; 0x28
   1695c:	mov	r1, r4
   16960:	bl	111f0 <fputs_unlocked@plt>
   16964:	ldr	r3, [sp, #220]	; 0xdc
   16968:	cmp	r3, #0
   1696c:	beq	169c8 <argp_failure@@Base+0xac>
   16970:	ldr	r3, [r4, #20]
   16974:	ldr	r1, [r4, #24]
   16978:	add	r2, sp, #224	; 0xe0
   1697c:	cmp	r3, r1
   16980:	str	r2, [sp]
   16984:	addcc	r1, r3, #1
   16988:	movcc	r2, #58	; 0x3a
   1698c:	strcc	r1, [r4, #20]
   16990:	strbcc	r2, [r3]
   16994:	bcs	16ad0 <argp_failure@@Base+0x1b4>
   16998:	ldr	r3, [r4, #20]
   1699c:	ldr	r2, [r4, #24]
   169a0:	cmp	r3, r2
   169a4:	addcc	r1, r3, #1
   169a8:	movcc	r2, #32
   169ac:	strcc	r1, [r4, #20]
   169b0:	strbcc	r2, [r3]
   169b4:	bcs	16ac0 <argp_failure@@Base+0x1a4>
   169b8:	ldr	r2, [sp]
   169bc:	ldr	r1, [sp, #220]	; 0xdc
   169c0:	mov	r0, r4
   169c4:	bl	114c0 <vfprintf@plt>
   169c8:	cmp	r6, #0
   169cc:	beq	16a30 <argp_failure@@Base+0x114>
   169d0:	ldr	r3, [r4, #20]
   169d4:	ldr	r2, [r4, #24]
   169d8:	cmp	r3, r2
   169dc:	addcc	r1, r3, #1
   169e0:	movcc	r2, #58	; 0x3a
   169e4:	strcc	r1, [r4, #20]
   169e8:	strbcc	r2, [r3]
   169ec:	bcs	16af0 <argp_failure@@Base+0x1d4>
   169f0:	ldr	r3, [r4, #20]
   169f4:	ldr	r2, [r4, #24]
   169f8:	cmp	r3, r2
   169fc:	addcc	r1, r3, #1
   16a00:	movcc	r2, #32
   16a04:	strcc	r1, [r4, #20]
   16a08:	strbcc	r2, [r3]
   16a0c:	bcs	16ae0 <argp_failure@@Base+0x1c4>
   16a10:	mov	r2, #200	; 0xc8
   16a14:	mov	r1, sp
   16a18:	mov	r0, r6
   16a1c:	bl	11424 <strerror_r@plt>
   16a20:	cmp	r0, #0
   16a24:	beq	16b00 <argp_failure@@Base+0x1e4>
   16a28:	mov	r1, r4
   16a2c:	bl	111f0 <fputs_unlocked@plt>
   16a30:	ldr	r3, [r4, #20]
   16a34:	ldr	r2, [r4, #24]
   16a38:	cmp	r3, r2
   16a3c:	addcc	r1, r3, #1
   16a40:	movcc	r2, #10
   16a44:	strcc	r1, [r4, #20]
   16a48:	strbcc	r2, [r3]
   16a4c:	bcs	16aa8 <argp_failure@@Base+0x18c>
   16a50:	mov	r0, r4
   16a54:	bl	112f8 <funlockfile@plt>
   16a58:	cmp	r7, #0
   16a5c:	beq	16a74 <argp_failure@@Base+0x158>
   16a60:	cmp	r5, #0
   16a64:	beq	16ab8 <argp_failure@@Base+0x19c>
   16a68:	ldr	r3, [r5, #16]
   16a6c:	tst	r3, #32
   16a70:	beq	16ab8 <argp_failure@@Base+0x19c>
   16a74:	add	sp, sp, #200	; 0xc8
   16a78:	pop	{r4, r5, r6, r7, lr}
   16a7c:	add	sp, sp, #4
   16a80:	bx	lr
   16a84:	ldr	r3, [pc, #140]	; 16b18 <argp_failure@@Base+0x1fc>
   16a88:	ldr	r4, [r3]
   16a8c:	cmp	r4, #0
   16a90:	beq	16a74 <argp_failure@@Base+0x158>
   16a94:	mov	r0, r4
   16a98:	bl	114e4 <flockfile@plt>
   16a9c:	ldr	r3, [pc, #120]	; 16b1c <argp_failure@@Base+0x200>
   16aa0:	ldr	r0, [r3]
   16aa4:	b	1695c <argp_failure@@Base+0x40>
   16aa8:	mov	r1, #10
   16aac:	mov	r0, r4
   16ab0:	bl	1149c <__overflow@plt>
   16ab4:	b	16a50 <argp_failure@@Base+0x134>
   16ab8:	mov	r0, r7
   16abc:	bl	113d0 <exit@plt>
   16ac0:	mov	r1, #32
   16ac4:	mov	r0, r4
   16ac8:	bl	1149c <__overflow@plt>
   16acc:	b	169b8 <argp_failure@@Base+0x9c>
   16ad0:	mov	r1, #58	; 0x3a
   16ad4:	mov	r0, r4
   16ad8:	bl	1149c <__overflow@plt>
   16adc:	b	16998 <argp_failure@@Base+0x7c>
   16ae0:	mov	r1, #32
   16ae4:	mov	r0, r4
   16ae8:	bl	1149c <__overflow@plt>
   16aec:	b	16a10 <argp_failure@@Base+0xf4>
   16af0:	mov	r1, #58	; 0x3a
   16af4:	mov	r0, r4
   16af8:	bl	1149c <__overflow@plt>
   16afc:	b	169f0 <argp_failure@@Base+0xd4>
   16b00:	mov	r0, r6
   16b04:	bl	11394 <strerror@plt>
   16b08:	ldr	r3, [pc, #16]	; 16b20 <argp_failure@@Base+0x204>
   16b0c:	cmp	r0, #0
   16b10:	moveq	r0, r3
   16b14:	b	16a28 <argp_failure@@Base+0x10c>
   16b18:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   16b1c:	andeq	pc, r2, r8, asr #8
   16b20:	andeq	lr, r1, ip, asr #4
   16b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b28:	add	fp, sp, #32
   16b2c:	cmp	r2, #0
   16b30:	sub	sp, sp, #116	; 0x74
   16b34:	str	r2, [fp, #-136]	; 0xffffff78
   16b38:	str	r0, [fp, #-116]	; 0xffffff8c
   16b3c:	str	r1, [fp, #-104]	; 0xffffff98
   16b40:	str	r3, [fp, #-100]	; 0xffffff9c
   16b44:	beq	16c68 <argp_failure@@Base+0x34c>
   16b48:	ldr	r3, [pc, #4076]	; 17b3c <argp_failure@@Base+0x1220>
   16b4c:	mov	r0, r2
   16b50:	mov	r4, r3
   16b54:	str	r3, [fp, #-96]	; 0xffffffa0
   16b58:	bl	114e4 <flockfile@plt>
   16b5c:	ldr	sl, [r4, #36]	; 0x24
   16b60:	cmp	sl, #0
   16b64:	beq	1707c <argp_failure@@Base+0x760>
   16b68:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16b6c:	mov	r3, #0
   16b70:	mov	r1, r3
   16b74:	ldr	r2, [r2, #32]
   16b78:	ldr	r0, [fp, #-136]	; 0xffffff78
   16b7c:	bl	1b484 <argp_parse@@Base+0x2618>
   16b80:	subs	sl, r0, #0
   16b84:	beq	17e98 <argp_failure@@Base+0x157c>
   16b88:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16b8c:	ands	r3, r3, #11
   16b90:	streq	r3, [fp, #-108]	; 0xffffff94
   16b94:	bne	174a8 <argp_failure@@Base+0xb8c>
   16b98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16b9c:	ands	r4, r3, #3
   16ba0:	bne	175d0 <argp_failure@@Base+0xcb4>
   16ba4:	tst	r3, #16
   16ba8:	bne	175a8 <argp_failure@@Base+0xc8c>
   16bac:	tst	r3, #4
   16bb0:	bne	17488 <argp_failure@@Base+0xb6c>
   16bb4:	tst	r3, #8
   16bb8:	bne	16c70 <argp_failure@@Base+0x354>
   16bbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16bc0:	tst	r3, #32
   16bc4:	bne	17038 <argp_failure@@Base+0x71c>
   16bc8:	tst	r3, #64	; 0x40
   16bcc:	beq	16c18 <argp_failure@@Base+0x2fc>
   16bd0:	ldr	r5, [pc, #3944]	; 17b40 <argp_failure@@Base+0x1224>
   16bd4:	ldr	r2, [r5]
   16bd8:	cmp	r2, #0
   16bdc:	beq	16c18 <argp_failure@@Base+0x2fc>
   16be0:	cmp	r4, #0
   16be4:	beq	16c0c <argp_failure@@Base+0x2f0>
   16be8:	ldr	r3, [sl, #28]
   16bec:	ldr	r2, [sl, #32]
   16bf0:	cmp	r3, r2
   16bf4:	bcs	17e68 <argp_failure@@Base+0x154c>
   16bf8:	add	r1, r3, #1
   16bfc:	mov	r2, #10
   16c00:	str	r1, [sl, #28]
   16c04:	strb	r2, [r3]
   16c08:	ldr	r2, [r5]
   16c0c:	ldr	r1, [pc, #3888]	; 17b44 <argp_failure@@Base+0x1228>
   16c10:	mov	r0, sl
   16c14:	bl	1bbac <argp_parse@@Base+0x2d40>
   16c18:	ldr	r0, [fp, #-136]	; 0xffffff78
   16c1c:	bl	112f8 <funlockfile@plt>
   16c20:	ldr	r3, [fp, #-108]	; 0xffffff94
   16c24:	cmp	r3, #0
   16c28:	beq	16c60 <argp_failure@@Base+0x344>
   16c2c:	ldr	r0, [r3, #12]
   16c30:	cmp	r0, #0
   16c34:	beq	16c4c <argp_failure@@Base+0x330>
   16c38:	ldr	r4, [r0, #24]
   16c3c:	bl	19de8 <argp_parse@@Base+0xf7c>
   16c40:	subs	r0, r4, #0
   16c44:	bne	16c38 <argp_failure@@Base+0x31c>
   16c48:	ldr	r3, [fp, #-108]	; 0xffffff94
   16c4c:	ldr	r3, [r3, #4]
   16c50:	cmp	r3, #0
   16c54:	bne	17064 <argp_failure@@Base+0x748>
   16c58:	ldr	r0, [fp, #-108]	; 0xffffff94
   16c5c:	bl	19de8 <argp_parse@@Base+0xf7c>
   16c60:	mov	r0, sl
   16c64:	bl	1ba6c <argp_parse@@Base+0x2c00>
   16c68:	sub	sp, fp, #32
   16c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c70:	ldr	r3, [fp, #-108]	; 0xffffff94
   16c74:	ldr	r3, [r3, #4]
   16c78:	cmp	r3, #0
   16c7c:	str	r3, [fp, #-112]	; 0xffffff90
   16c80:	beq	16bbc <argp_failure@@Base+0x2a0>
   16c84:	cmp	r4, #0
   16c88:	beq	17d78 <argp_failure@@Base+0x145c>
   16c8c:	ldr	r3, [sl, #28]
   16c90:	ldr	r2, [sl, #32]
   16c94:	cmp	r3, r2
   16c98:	bcs	17fe4 <argp_failure@@Base+0x16c8>
   16c9c:	add	r1, r3, #1
   16ca0:	mov	r2, #10
   16ca4:	str	r1, [sl, #28]
   16ca8:	strb	r2, [r3]
   16cac:	ldr	r3, [fp, #-108]	; 0xffffff94
   16cb0:	ldr	r2, [fp, #-108]	; 0xffffff94
   16cb4:	ldr	r3, [r3, #4]
   16cb8:	ldr	r8, [r2]
   16cbc:	str	r3, [fp, #-112]	; 0xffffff90
   16cc0:	cmp	r3, #0
   16cc4:	mov	r3, #0
   16cc8:	str	r3, [fp, #-88]	; 0xffffffa8
   16ccc:	str	r3, [fp, #-84]	; 0xffffffac
   16cd0:	str	r3, [fp, #-80]	; 0xffffffb0
   16cd4:	beq	17028 <argp_failure@@Base+0x70c>
   16cd8:	ldr	ip, [sl, #28]
   16cdc:	ldr	r3, [sl, #24]
   16ce0:	ldr	lr, [sl, #16]
   16ce4:	sub	ip, ip, r3
   16ce8:	cmp	ip, lr
   16cec:	ldr	r6, [r8]
   16cf0:	ldr	r9, [r8, #8]
   16cf4:	bhi	17bd8 <argp_failure@@Base+0x12bc>
   16cf8:	ldr	r3, [sl, #4]
   16cfc:	ldr	r0, [r6, #12]
   16d00:	str	r3, [fp, #-120]	; 0xffffff88
   16d04:	ldr	r3, [sl, #12]
   16d08:	mov	r7, #0
   16d0c:	str	r3, [fp, #-124]	; 0xffffff84
   16d10:	sub	r3, fp, #88	; 0x58
   16d14:	str	r7, [sl, #4]
   16d18:	str	r3, [fp, #-68]	; 0xffffffbc
   16d1c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16d20:	ands	r0, r0, #8
   16d24:	mov	r2, #1
   16d28:	str	r2, [fp, #-64]	; 0xffffffc0
   16d2c:	str	r8, [fp, #-76]	; 0xffffffb4
   16d30:	str	sl, [fp, #-72]	; 0xffffffb8
   16d34:	str	r3, [fp, #-60]	; 0xffffffc4
   16d38:	strne	r7, [fp, #-132]	; 0xffffff7c
   16d3c:	bne	16d78 <argp_failure@@Base+0x45c>
   16d40:	ldr	r1, [r8, #4]
   16d44:	cmp	r1, r7
   16d48:	beq	16d74 <argp_failure@@Base+0x458>
   16d4c:	add	r2, r6, #24
   16d50:	ldr	r3, [r2, #-24]	; 0xffffffe8
   16d54:	cmp	r3, #0
   16d58:	beq	16d68 <argp_failure@@Base+0x44c>
   16d5c:	ldr	r3, [r2, #-12]
   16d60:	tst	r3, #2
   16d64:	beq	17c1c <argp_failure@@Base+0x1300>
   16d68:	subs	r1, r1, #1
   16d6c:	add	r2, r2, #24
   16d70:	bne	16d50 <argp_failure@@Base+0x434>
   16d74:	str	r0, [fp, #-132]	; 0xffffff7c
   16d78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16d7c:	cmp	ip, lr
   16d80:	ldr	r4, [r3, #8]
   16d84:	bhi	17bc4 <argp_failure@@Base+0x12a8>
   16d88:	str	r4, [sl, #12]
   16d8c:	ldr	r5, [r8, #4]
   16d90:	cmp	r5, #0
   16d94:	beq	16e18 <argp_failure@@Base+0x4fc>
   16d98:	str	r8, [fp, #-128]	; 0xffffff80
   16d9c:	mov	r4, r6
   16da0:	mov	r8, r9
   16da4:	b	16db4 <argp_failure@@Base+0x498>
   16da8:	subs	r5, r5, #1
   16dac:	add	r4, r4, #24
   16db0:	beq	16e0c <argp_failure@@Base+0x4f0>
   16db4:	ldr	r7, [r4, #12]
   16db8:	tst	r7, #8
   16dbc:	bne	16da8 <argp_failure@@Base+0x48c>
   16dc0:	ldr	r9, [r4, #4]
   16dc4:	sub	r2, r9, #1
   16dc8:	cmp	r2, #254	; 0xfe
   16dcc:	bhi	16da8 <argp_failure@@Base+0x48c>
   16dd0:	bl	113c4 <__ctype_b_loc@plt>
   16dd4:	lsl	r2, r9, #1
   16dd8:	ldr	r1, [r0]
   16ddc:	ldrh	r2, [r1, r2]
   16de0:	tst	r2, #16384	; 0x4000
   16de4:	beq	16da8 <argp_failure@@Base+0x48c>
   16de8:	ldrb	r2, [r8]
   16dec:	cmp	r9, r2
   16df0:	bne	16da8 <argp_failure@@Base+0x48c>
   16df4:	tst	r7, #2
   16df8:	beq	1793c <argp_failure@@Base+0x1020>
   16dfc:	subs	r5, r5, #1
   16e00:	add	r8, r8, #1
   16e04:	add	r4, r4, #24
   16e08:	bne	16db4 <argp_failure@@Base+0x498>
   16e0c:	ldr	r0, [r6, #12]
   16e10:	ldr	r8, [fp, #-128]	; 0xffffff80
   16e14:	and	r0, r0, #8
   16e18:	ldr	r3, [sl, #28]
   16e1c:	ldr	r1, [sl, #24]
   16e20:	cmp	r0, #0
   16e24:	ldr	r2, [sl, #16]
   16e28:	sub	r3, r3, r1
   16e2c:	beq	178a8 <argp_failure@@Base+0xf8c>
   16e30:	cmp	r3, r2
   16e34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16e38:	ldr	r4, [r3, #16]
   16e3c:	bhi	17c34 <argp_failure@@Base+0x1318>
   16e40:	str	r4, [sl, #12]
   16e44:	ldr	r5, [r8, #4]
   16e48:	cmp	r5, #0
   16e4c:	addne	r4, r6, #24
   16e50:	bne	16e64 <argp_failure@@Base+0x548>
   16e54:	b	16ef4 <argp_failure@@Base+0x5d8>
   16e58:	subs	r5, r5, #1
   16e5c:	add	r4, r4, #24
   16e60:	beq	16ef4 <argp_failure@@Base+0x5d8>
   16e64:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16e68:	cmp	r3, #0
   16e6c:	beq	16e58 <argp_failure@@Base+0x53c>
   16e70:	ldr	r3, [r4, #-12]
   16e74:	tst	r3, #2
   16e78:	bne	16e58 <argp_failure@@Base+0x53c>
   16e7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16e80:	sub	r1, fp, #76	; 0x4c
   16e84:	ldr	r0, [r3, #16]
   16e88:	bl	1583c <__assert_fail@plt+0x42d4>
   16e8c:	ldr	r9, [r4, #-24]	; 0xffffffe8
   16e90:	mov	r0, r9
   16e94:	bl	113e8 <strlen@plt>
   16e98:	subs	r7, r0, #0
   16e9c:	beq	16e58 <argp_failure@@Base+0x53c>
   16ea0:	ldr	r2, [sl, #28]
   16ea4:	ldr	lr, [sl, #32]
   16ea8:	add	ip, r2, r7
   16eac:	cmp	lr, ip
   16eb0:	mov	r1, r7
   16eb4:	mov	r0, sl
   16eb8:	bcs	16ecc <argp_failure@@Base+0x5b0>
   16ebc:	bl	1baac <argp_parse@@Base+0x2c40>
   16ec0:	cmp	r0, #0
   16ec4:	beq	16e58 <argp_failure@@Base+0x53c>
   16ec8:	ldr	r2, [sl, #28]
   16ecc:	mov	r0, r2
   16ed0:	mov	r1, r9
   16ed4:	mov	r2, r7
   16ed8:	bl	11298 <memcpy@plt>
   16edc:	ldr	r2, [sl, #28]
   16ee0:	subs	r5, r5, #1
   16ee4:	add	r3, r2, r7
   16ee8:	str	r3, [sl, #28]
   16eec:	add	r4, r4, #24
   16ef0:	bne	16e64 <argp_failure@@Base+0x548>
   16ef4:	ldr	r3, [sl, #28]
   16ef8:	ldr	r1, [sl, #24]
   16efc:	ldr	r2, [sl, #16]
   16f00:	sub	r3, r3, r1
   16f04:	cmp	r3, r2
   16f08:	bhi	17afc <argp_failure@@Base+0x11e0>
   16f0c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16f10:	mov	r3, #0
   16f14:	cmp	r2, r3
   16f18:	str	r3, [sl, #4]
   16f1c:	beq	179bc <argp_failure@@Base+0x10a0>
   16f20:	ldr	r3, [r6, #12]
   16f24:	tst	r3, #8
   16f28:	bne	16f54 <argp_failure@@Base+0x638>
   16f2c:	ldr	r4, [r6, #4]
   16f30:	sub	r3, r4, #1
   16f34:	cmp	r3, #254	; 0xfe
   16f38:	bhi	16f54 <argp_failure@@Base+0x638>
   16f3c:	bl	113c4 <__ctype_b_loc@plt>
   16f40:	lsl	r4, r4, #1
   16f44:	ldr	r3, [r0]
   16f48:	ldrh	r3, [r3, r4]
   16f4c:	tst	r3, #16384	; 0x4000
   16f50:	bne	16f60 <argp_failure@@Base+0x644>
   16f54:	ldr	r3, [r6]
   16f58:	cmp	r3, #0
   16f5c:	beq	17e84 <argp_failure@@Base+0x1568>
   16f60:	ldr	r3, [sl, #28]
   16f64:	ldr	r1, [sl, #24]
   16f68:	ldr	r2, [sl, #16]
   16f6c:	sub	r3, r3, r1
   16f70:	cmp	r3, r2
   16f74:	bhi	17b08 <argp_failure@@Base+0x11ec>
   16f78:	ldr	r3, [fp, #-120]	; 0xffffff88
   16f7c:	str	r3, [sl, #4]
   16f80:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f84:	add	r8, r8, #28
   16f88:	subs	r3, r3, #1
   16f8c:	str	r3, [fp, #-112]	; 0xffffff90
   16f90:	ldr	r3, [fp, #-124]	; 0xffffff84
   16f94:	str	r3, [sl, #12]
   16f98:	bne	16cd8 <argp_failure@@Base+0x3bc>
   16f9c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16fa0:	cmp	r3, #0
   16fa4:	beq	17028 <argp_failure@@Base+0x70c>
   16fa8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16fac:	ldr	r3, [r3, #4]
   16fb0:	cmp	r3, #0
   16fb4:	beq	17028 <argp_failure@@Base+0x70c>
   16fb8:	ldr	r1, [fp, #-104]	; 0xffffff98
   16fbc:	cmp	r1, #0
   16fc0:	beq	18048 <argp_failure@@Base+0x172c>
   16fc4:	ldr	r4, [r1]
   16fc8:	cmp	r4, #0
   16fcc:	beq	18078 <argp_failure@@Base+0x175c>
   16fd0:	ldr	r3, [r4, #20]
   16fd4:	cmp	r3, #0
   16fd8:	beq	17f48 <argp_failure@@Base+0x162c>
   16fdc:	mov	r0, r4
   16fe0:	bl	19c8c <argp_parse@@Base+0xe20>
   16fe4:	ldr	r9, [pc, #3028]	; 17bc0 <argp_failure@@Base+0x12a4>
   16fe8:	ldr	r3, [r4, #20]
   16fec:	mov	r1, r9
   16ff0:	mov	r2, r0
   16ff4:	ldr	r0, [pc, #2892]	; 17b48 <argp_failure@@Base+0x122c>
   16ff8:	blx	r3
   16ffc:	subs	r4, r0, #0
   17000:	beq	17028 <argp_failure@@Base+0x70c>
   17004:	ldrb	r3, [r4]
   17008:	subs	r9, r4, r9
   1700c:	movne	r9, #1
   17010:	cmp	r3, #0
   17014:	bne	17f50 <argp_failure@@Base+0x1634>
   17018:	cmp	r9, #0
   1701c:	beq	17028 <argp_failure@@Base+0x70c>
   17020:	mov	r0, r4
   17024:	bl	19de8 <argp_parse@@Base+0xf7c>
   17028:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1702c:	mov	r4, #1
   17030:	tst	r3, #32
   17034:	beq	16bc8 <argp_failure@@Base+0x2ac>
   17038:	mov	r3, #0
   1703c:	str	r3, [sp]
   17040:	str	sl, [sp, #4]
   17044:	mov	r3, r4
   17048:	ldr	r1, [fp, #-104]	; 0xffffff98
   1704c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   17050:	mov	r2, #1
   17054:	bl	13e14 <__assert_fail@plt+0x28ac>
   17058:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1705c:	orr	r4, r4, r0
   17060:	b	16bc8 <argp_failure@@Base+0x2ac>
   17064:	ldr	r4, [fp, #-108]	; 0xffffff94
   17068:	ldr	r0, [r4]
   1706c:	bl	19de8 <argp_parse@@Base+0xf7c>
   17070:	ldr	r0, [r4, #8]
   17074:	bl	19de8 <argp_parse@@Base+0xf7c>
   17078:	b	16c58 <argp_failure@@Base+0x33c>
   1707c:	ldr	r0, [pc, #2760]	; 17b4c <argp_failure@@Base+0x1230>
   17080:	bl	11364 <getenv@plt>
   17084:	ldr	lr, [fp, #-96]	; 0xffffffa0
   17088:	sub	r3, fp, #76	; 0x4c
   1708c:	mov	ip, r3
   17090:	str	r3, [fp, #-112]	; 0xffffff90
   17094:	mov	r5, r0
   17098:	ldm	lr!, {r0, r1, r2, r3}
   1709c:	cmp	r5, #0
   170a0:	stmia	ip!, {r0, r1, r2, r3}
   170a4:	ldm	lr!, {r0, r1, r2, r3}
   170a8:	stmia	ip!, {r0, r1, r2, r3}
   170ac:	ldm	lr, {r0, r1}
   170b0:	stm	ip, {r0, r1}
   170b4:	beq	16b68 <argp_failure@@Base+0x24c>
   170b8:	ldrb	r8, [r5]
   170bc:	ldr	r9, [pc, #2700]	; 17b50 <argp_failure@@Base+0x1234>
   170c0:	str	sl, [fp, #-120]	; 0xffffff88
   170c4:	cmp	r8, #0
   170c8:	beq	1727c <argp_failure@@Base+0x960>
   170cc:	bl	113c4 <__ctype_b_loc@plt>
   170d0:	mov	r7, r0
   170d4:	ldr	r0, [r0]
   170d8:	b	170e0 <argp_failure@@Base+0x7c4>
   170dc:	ldrb	r8, [r5, #1]!
   170e0:	lsl	r3, r8, #1
   170e4:	ldrh	r1, [r0, r3]
   170e8:	tst	r1, #8192	; 0x2000
   170ec:	bne	170dc <argp_failure@@Base+0x7c0>
   170f0:	ands	r2, r1, #1024	; 0x400
   170f4:	beq	17274 <argp_failure@@Base+0x958>
   170f8:	cmp	r8, #95	; 0x5f
   170fc:	cmpne	r8, #45	; 0x2d
   17100:	lsl	r3, r1, #28
   17104:	moveq	r6, #1
   17108:	movne	r6, #0
   1710c:	orrs	r6, r6, r3, lsr #31
   17110:	beq	17d18 <argp_failure@@Base+0x13fc>
   17114:	mov	r4, r5
   17118:	ldrb	r3, [r4, #1]!
   1711c:	cmp	r3, #95	; 0x5f
   17120:	cmpne	r3, #45	; 0x2d
   17124:	lsl	r1, r3, #1
   17128:	moveq	r2, #1
   1712c:	ldrh	r1, [r0, r1]
   17130:	movne	r2, #0
   17134:	lsl	ip, r1, #28
   17138:	orrs	r2, r2, ip, lsr #31
   1713c:	bne	17118 <argp_failure@@Base+0x7fc>
   17140:	tst	r1, #8192	; 0x2000
   17144:	sub	r6, r4, r5
   17148:	beq	17160 <argp_failure@@Base+0x844>
   1714c:	ldrb	r3, [r4, #1]!
   17150:	lsl	r2, r3, #1
   17154:	ldrh	r1, [r0, r2]
   17158:	tst	r1, #8192	; 0x2000
   1715c:	bne	1714c <argp_failure@@Base+0x830>
   17160:	cmp	r3, #44	; 0x2c
   17164:	cmpne	r3, #0
   17168:	beq	17300 <argp_failure@@Base+0x9e4>
   1716c:	cmp	r3, #61	; 0x3d
   17170:	beq	17878 <argp_failure@@Base+0xf5c>
   17174:	tst	r1, #2048	; 0x800
   17178:	bne	177e8 <argp_failure@@Base+0xecc>
   1717c:	ldr	r3, [fp, #-120]	; 0xffffff88
   17180:	mov	sl, r3
   17184:	str	r3, [fp, #-108]	; 0xffffff94
   17188:	mov	r0, r9
   1718c:	bl	113e8 <strlen@plt>
   17190:	cmp	r6, r0
   17194:	beq	17320 <argp_failure@@Base+0xa04>
   17198:	ldr	r0, [pc, #2484]	; 17b54 <argp_failure@@Base+0x1238>
   1719c:	bl	113e8 <strlen@plt>
   171a0:	cmp	r6, r0
   171a4:	mov	r7, r0
   171a8:	beq	173b4 <argp_failure@@Base+0xa98>
   171ac:	ldr	r0, [pc, #2556]	; 17bb0 <argp_failure@@Base+0x1294>
   171b0:	bl	113e8 <strlen@plt>
   171b4:	cmp	r6, r0
   171b8:	mov	r7, r0
   171bc:	beq	17368 <argp_failure@@Base+0xa4c>
   171c0:	ldr	r0, [pc, #2532]	; 17bac <argp_failure@@Base+0x1290>
   171c4:	bl	113e8 <strlen@plt>
   171c8:	cmp	r6, r0
   171cc:	mov	r7, r0
   171d0:	beq	173d4 <argp_failure@@Base+0xab8>
   171d4:	ldr	r0, [pc, #2500]	; 17ba0 <argp_failure@@Base+0x1284>
   171d8:	bl	113e8 <strlen@plt>
   171dc:	cmp	r6, r0
   171e0:	mov	r7, r0
   171e4:	beq	173f4 <argp_failure@@Base+0xad8>
   171e8:	ldr	r8, [pc, #2504]	; 17bb8 <argp_failure@@Base+0x129c>
   171ec:	mov	r0, r8
   171f0:	bl	113e8 <strlen@plt>
   171f4:	cmp	r6, r0
   171f8:	mov	r7, r0
   171fc:	beq	17414 <argp_failure@@Base+0xaf8>
   17200:	ldr	r8, [pc, #2476]	; 17bb4 <argp_failure@@Base+0x1298>
   17204:	mov	r0, r8
   17208:	bl	113e8 <strlen@plt>
   1720c:	cmp	r6, r0
   17210:	mov	r7, r0
   17214:	beq	17430 <argp_failure@@Base+0xb14>
   17218:	ldr	r8, [pc, #2460]	; 17bbc <argp_failure@@Base+0x12a0>
   1721c:	mov	r0, r8
   17220:	bl	113e8 <strlen@plt>
   17224:	cmp	r6, r0
   17228:	mov	r7, r0
   1722c:	beq	1744c <argp_failure@@Base+0xb30>
   17230:	ldr	r8, [pc, #2336]	; 17b58 <argp_failure@@Base+0x123c>
   17234:	mov	r0, r8
   17238:	bl	113e8 <strlen@plt>
   1723c:	cmp	r0, r6
   17240:	beq	17468 <argp_failure@@Base+0xb4c>
   17244:	mov	r2, #0
   17248:	str	r5, [sp, #4]
   1724c:	str	r6, [sp]
   17250:	mov	r1, r2
   17254:	ldr	r3, [pc, #2304]	; 17b5c <argp_failure@@Base+0x1240>
   17258:	ldr	r0, [fp, #-104]	; 0xffffff98
   1725c:	bl	1691c <argp_failure@@Base>
   17260:	ldrb	r8, [r4]
   17264:	cmp	r8, #44	; 0x2c
   17268:	beq	1735c <argp_failure@@Base+0xa40>
   1726c:	mov	r5, r4
   17270:	b	170c4 <argp_failure@@Base+0x7a8>
   17274:	cmp	r8, #0
   17278:	bne	17e24 <argp_failure@@Base+0x1508>
   1727c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17280:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17284:	cmp	r3, r2
   17288:	ble	18008 <argp_failure@@Base+0x16ec>
   1728c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17290:	cmp	r3, r2
   17294:	ble	17e60 <argp_failure@@Base+0x1544>
   17298:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1729c:	cmp	r3, r2
   172a0:	ble	17e3c <argp_failure@@Base+0x1520>
   172a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   172a8:	cmp	r3, r2
   172ac:	ble	18040 <argp_failure@@Base+0x1724>
   172b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   172b4:	cmp	r3, r2
   172b8:	ble	18038 <argp_failure@@Base+0x171c>
   172bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   172c0:	cmp	r3, r2
   172c4:	ble	18054 <argp_failure@@Base+0x1738>
   172c8:	ldr	lr, [fp, #-112]	; 0xffffff90
   172cc:	ldr	r3, [pc, #2152]	; 17b3c <argp_failure@@Base+0x1220>
   172d0:	mov	r4, #1
   172d4:	mov	r5, r3
   172d8:	str	r3, [fp, #-96]	; 0xffffffa0
   172dc:	ldm	lr!, {r0, r1, r2, r3}
   172e0:	mov	ip, r5
   172e4:	stmia	ip!, {r0, r1, r2, r3}
   172e8:	ldm	lr!, {r0, r1, r2, r3}
   172ec:	stmia	ip!, {r0, r1, r2, r3}
   172f0:	ldm	lr, {r0, r1}
   172f4:	stm	ip, {r0, r1}
   172f8:	str	r4, [r5, #36]	; 0x24
   172fc:	b	16b68 <argp_failure@@Base+0x24c>
   17300:	cmp	r8, #110	; 0x6e
   17304:	beq	17848 <argp_failure@@Base+0xf2c>
   17308:	mov	sl, #1
   1730c:	mov	r0, r9
   17310:	str	sl, [fp, #-108]	; 0xffffff94
   17314:	bl	113e8 <strlen@plt>
   17318:	cmp	r6, r0
   1731c:	bne	17198 <argp_failure@@Base+0x87c>
   17320:	mov	r2, r6
   17324:	mov	r1, r9
   17328:	mov	r0, r5
   1732c:	bl	11538 <strncmp@plt>
   17330:	cmp	r0, #0
   17334:	bne	17198 <argp_failure@@Base+0x87c>
   17338:	mov	r8, r9
   1733c:	ldrb	r3, [r8, #15]
   17340:	ldrb	r8, [r4]
   17344:	sub	r2, fp, #36	; 0x24
   17348:	add	r3, r2, r3
   1734c:	ldr	r2, [fp, #-108]	; 0xffffff94
   17350:	cmp	r8, #44	; 0x2c
   17354:	str	r2, [r3, #-40]	; 0xffffffd8
   17358:	bne	1726c <argp_failure@@Base+0x950>
   1735c:	ldrb	r8, [r4, #1]
   17360:	add	r4, r4, #1
   17364:	b	1726c <argp_failure@@Base+0x950>
   17368:	mov	r2, r0
   1736c:	ldr	r1, [pc, #2108]	; 17bb0 <argp_failure@@Base+0x1294>
   17370:	mov	r0, r5
   17374:	bl	11538 <strncmp@plt>
   17378:	cmp	r0, #0
   1737c:	bne	171c0 <argp_failure@@Base+0x8a4>
   17380:	ldr	r8, [pc, #2088]	; 17bb0 <argp_failure@@Base+0x1294>
   17384:	cmp	sl, #0
   17388:	beq	1733c <argp_failure@@Base+0xa20>
   1738c:	ldrb	r2, [r8, #14]
   17390:	cmp	r2, #0
   17394:	bne	1733c <argp_failure@@Base+0xa20>
   17398:	str	r5, [sp, #4]
   1739c:	str	r7, [sp]
   173a0:	ldr	r3, [pc, #1976]	; 17b60 <argp_failure@@Base+0x1244>
   173a4:	mov	r1, r2
   173a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   173ac:	bl	1691c <argp_failure@@Base>
   173b0:	b	17260 <argp_failure@@Base+0x944>
   173b4:	mov	r2, r0
   173b8:	ldr	r1, [pc, #1940]	; 17b54 <argp_failure@@Base+0x1238>
   173bc:	mov	r0, r5
   173c0:	bl	11538 <strncmp@plt>
   173c4:	cmp	r0, #0
   173c8:	bne	171ac <argp_failure@@Base+0x890>
   173cc:	ldr	r8, [pc, #1920]	; 17b54 <argp_failure@@Base+0x1238>
   173d0:	b	17384 <argp_failure@@Base+0xa68>
   173d4:	mov	r2, r0
   173d8:	ldr	r1, [pc, #1996]	; 17bac <argp_failure@@Base+0x1290>
   173dc:	mov	r0, r5
   173e0:	bl	11538 <strncmp@plt>
   173e4:	cmp	r0, #0
   173e8:	bne	171d4 <argp_failure@@Base+0x8b8>
   173ec:	ldr	r8, [pc, #1976]	; 17bac <argp_failure@@Base+0x1290>
   173f0:	b	17384 <argp_failure@@Base+0xa68>
   173f4:	mov	r2, r0
   173f8:	ldr	r1, [pc, #1952]	; 17ba0 <argp_failure@@Base+0x1284>
   173fc:	mov	r0, r5
   17400:	bl	11538 <strncmp@plt>
   17404:	cmp	r0, #0
   17408:	bne	171e8 <argp_failure@@Base+0x8cc>
   1740c:	ldr	r8, [pc, #1932]	; 17ba0 <argp_failure@@Base+0x1284>
   17410:	b	17384 <argp_failure@@Base+0xa68>
   17414:	mov	r2, r0
   17418:	mov	r1, r8
   1741c:	mov	r0, r5
   17420:	bl	11538 <strncmp@plt>
   17424:	cmp	r0, #0
   17428:	bne	17200 <argp_failure@@Base+0x8e4>
   1742c:	b	17384 <argp_failure@@Base+0xa68>
   17430:	mov	r2, r0
   17434:	mov	r1, r8
   17438:	mov	r0, r5
   1743c:	bl	11538 <strncmp@plt>
   17440:	cmp	r0, #0
   17444:	bne	17218 <argp_failure@@Base+0x8fc>
   17448:	b	17384 <argp_failure@@Base+0xa68>
   1744c:	mov	r2, r0
   17450:	mov	r1, r8
   17454:	mov	r0, r5
   17458:	bl	11538 <strncmp@plt>
   1745c:	cmp	r0, #0
   17460:	bne	17230 <argp_failure@@Base+0x914>
   17464:	b	17384 <argp_failure@@Base+0xa68>
   17468:	mov	r2, r6
   1746c:	mov	r1, r8
   17470:	mov	r0, r5
   17474:	bl	11538 <strncmp@plt>
   17478:	cmp	r0, #0
   1747c:	moveq	r7, r6
   17480:	bne	17244 <argp_failure@@Base+0x928>
   17484:	b	17384 <argp_failure@@Base+0xa68>
   17488:	ldr	r3, [fp, #4]
   1748c:	ldr	r1, [pc, #1744]	; 17b64 <argp_failure@@Base+0x1248>
   17490:	mov	r2, r3
   17494:	mov	r0, sl
   17498:	bl	1bbac <argp_parse@@Base+0x2d40>
   1749c:	mov	r4, #1
   174a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   174a4:	b	16bb4 <argp_failure@@Base+0x298>
   174a8:	mov	r1, #0
   174ac:	ldr	r0, [fp, #-116]	; 0xffffff8c
   174b0:	bl	143c0 <__assert_fail@plt+0x2e58>
   174b4:	ldr	r2, [r0, #4]
   174b8:	ldr	r3, [r0]
   174bc:	cmp	r2, #0
   174c0:	str	r0, [fp, #-108]	; 0xffffff94
   174c4:	str	r2, [fp, #-120]	; 0xffffff88
   174c8:	str	r3, [fp, #-112]	; 0xffffff90
   174cc:	sub	r6, r2, #1
   174d0:	beq	16b98 <argp_failure@@Base+0x27c>
   174d4:	ldr	r5, [pc, #1676]	; 17b68 <argp_failure@@Base+0x124c>
   174d8:	mov	r8, r6
   174dc:	mov	r7, r3
   174e0:	ldm	r7, {r4, r9}
   174e4:	cmp	r9, #0
   174e8:	sub	r9, r9, #1
   174ec:	beq	1752c <argp_failure@@Base+0xc10>
   174f0:	add	r4, r4, #24
   174f4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   174f8:	mov	r1, r5
   174fc:	subs	r0, r3, #0
   17500:	sub	r9, r9, #1
   17504:	beq	17520 <argp_failure@@Base+0xc04>
   17508:	ldr	r3, [r4, #-12]
   1750c:	tst	r3, #2
   17510:	bne	17520 <argp_failure@@Base+0xc04>
   17514:	bl	11208 <strcmp@plt>
   17518:	cmp	r0, #0
   1751c:	beq	17cc0 <argp_failure@@Base+0x13a4>
   17520:	cmn	r9, #1
   17524:	add	r4, r4, #24
   17528:	bne	174f4 <argp_failure@@Base+0xbd8>
   1752c:	sub	r8, r8, #1
   17530:	cmn	r8, #1
   17534:	add	r7, r7, #28
   17538:	bne	174e0 <argp_failure@@Base+0xbc4>
   1753c:	ldr	r7, [fp, #-112]	; 0xffffff90
   17540:	ldr	r9, [pc, #1572]	; 17b6c <argp_failure@@Base+0x1250>
   17544:	ldm	r7, {r4, r5}
   17548:	cmp	r5, #0
   1754c:	sub	r5, r5, #1
   17550:	beq	17590 <argp_failure@@Base+0xc74>
   17554:	add	r4, r4, #24
   17558:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1755c:	mov	r1, r9
   17560:	subs	r0, r3, #0
   17564:	sub	r5, r5, #1
   17568:	beq	17584 <argp_failure@@Base+0xc68>
   1756c:	ldr	r3, [r4, #-12]
   17570:	tst	r3, #2
   17574:	bne	17584 <argp_failure@@Base+0xc68>
   17578:	bl	11208 <strcmp@plt>
   1757c:	cmp	r0, #0
   17580:	beq	17c78 <argp_failure@@Base+0x135c>
   17584:	cmn	r5, #1
   17588:	add	r4, r4, #24
   1758c:	bne	17558 <argp_failure@@Base+0xc3c>
   17590:	cmp	r6, #0
   17594:	add	r7, r7, #28
   17598:	sub	r6, r6, #1
   1759c:	bne	17544 <argp_failure@@Base+0xc28>
   175a0:	ldr	r1, [fp, #-120]	; 0xffffff88
   175a4:	b	17c90 <argp_failure@@Base+0x1374>
   175a8:	mov	r2, #1
   175ac:	mov	r3, #0
   175b0:	stm	sp, {r2, sl}
   175b4:	ldr	r1, [fp, #-104]	; 0xffffff98
   175b8:	mov	r2, r3
   175bc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   175c0:	bl	13e14 <__assert_fail@plt+0x28ac>
   175c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   175c8:	orr	r4, r4, r0
   175cc:	b	16bac <argp_failure@@Base+0x290>
   175d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   175d4:	mov	r4, #1
   175d8:	ldr	r8, [pc, #1424]	; 17b70 <argp_failure@@Base+0x1254>
   175dc:	ldr	r1, [r3, #16]
   175e0:	ldr	r0, [r3, #8]
   175e4:	bl	14dc0 <__assert_fail@plt+0x3858>
   175e8:	mov	r1, #0
   175ec:	mov	r6, r4
   175f0:	add	r3, r0, #14
   175f4:	bic	r3, r3, #7
   175f8:	sub	sp, sp, r3
   175fc:	add	r7, sp, #8
   17600:	mov	r2, r0
   17604:	mov	r0, r7
   17608:	bl	1143c <memset@plt>
   1760c:	sub	r3, fp, #76	; 0x4c
   17610:	str	r3, [fp, #-112]	; 0xffffff90
   17614:	str	r7, [fp, #-120]	; 0xffffff88
   17618:	ldr	r5, [fp, #-96]	; 0xffffffa0
   1761c:	b	1773c <argp_failure@@Base+0xe20>
   17620:	cmp	r4, #0
   17624:	ldr	r3, [fp, #-120]	; 0xffffff88
   17628:	ldr	r7, [sl, #12]
   1762c:	ldrne	r2, [pc, #1344]	; 17b74 <argp_failure@@Base+0x1258>
   17630:	str	r9, [sl, #12]
   17634:	ldreq	r2, [pc, #1340]	; 17b78 <argp_failure@@Base+0x125c>
   17638:	str	r3, [fp, #-76]	; 0xffffffb4
   1763c:	mov	r1, r8
   17640:	ldr	r3, [fp, #4]
   17644:	mov	r0, sl
   17648:	bl	1bbac <argp_parse@@Base+0x2d40>
   1764c:	ldr	r3, [sl, #28]
   17650:	ldr	r1, [sl, #24]
   17654:	ldr	r2, [sl, #16]
   17658:	sub	r3, r3, r1
   1765c:	cmp	r3, r2
   17660:	ldr	r9, [r5, #28]
   17664:	bhi	177b4 <argp_failure@@Base+0xe98>
   17668:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1766c:	ldr	r4, [sl, #4]
   17670:	tst	r3, #2
   17674:	str	r9, [sl, #4]
   17678:	beq	177c0 <argp_failure@@Base+0xea4>
   1767c:	ldr	r3, [fp, #-108]	; 0xffffff94
   17680:	ldr	r3, [r3, #4]
   17684:	cmp	r3, #0
   17688:	beq	176d8 <argp_failure@@Base+0xdbc>
   1768c:	ldr	ip, [sl, #28]
   17690:	ldr	r2, [sl, #32]
   17694:	add	r3, ip, #12
   17698:	cmp	r2, r3
   1769c:	bcs	176b8 <argp_failure@@Base+0xd9c>
   176a0:	mov	r1, #12
   176a4:	mov	r0, sl
   176a8:	bl	1baac <argp_parse@@Base+0x2c40>
   176ac:	cmp	r0, #0
   176b0:	beq	176d8 <argp_failure@@Base+0xdbc>
   176b4:	ldr	ip, [sl, #28]
   176b8:	ldr	r3, [pc, #1212]	; 17b7c <argp_failure@@Base+0x1260>
   176bc:	ldm	r3!, {r0, r1, r2}
   176c0:	str	r0, [ip]
   176c4:	str	r1, [ip, #4]
   176c8:	str	r2, [ip, #8]
   176cc:	ldr	r3, [sl, #28]
   176d0:	add	r3, r3, #12
   176d4:	str	r3, [sl, #28]
   176d8:	mov	r3, r6
   176dc:	ldr	r1, [fp, #-104]	; 0xffffff98
   176e0:	str	sl, [sp]
   176e4:	ldr	r2, [fp, #-112]	; 0xffffff90
   176e8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   176ec:	bl	14ae0 <__assert_fail@plt+0x3578>
   176f0:	ldr	r3, [sl, #28]
   176f4:	ldr	r1, [sl, #24]
   176f8:	sub	r1, r3, r1
   176fc:	mov	r9, r0
   17700:	ldr	r0, [sl, #16]
   17704:	cmp	r1, r0
   17708:	strls	r7, [sl, #12]
   1770c:	bhi	17780 <argp_failure@@Base+0xe64>
   17710:	ldr	r1, [sl, #32]
   17714:	str	r4, [sl, #4]
   17718:	cmp	r1, r3
   1771c:	bls	17764 <argp_failure@@Base+0xe48>
   17720:	add	r1, r3, #1
   17724:	mov	r2, #10
   17728:	str	r1, [sl, #28]
   1772c:	strb	r2, [r3]
   17730:	cmp	r9, #0
   17734:	mov	r4, #0
   17738:	beq	177dc <argp_failure@@Base+0xec0>
   1773c:	ldr	r3, [sl, #28]
   17740:	ldr	r1, [sl, #24]
   17744:	ldr	r2, [sl, #16]
   17748:	sub	r3, r3, r1
   1774c:	cmp	r3, r2
   17750:	ldr	r9, [r5, #28]
   17754:	bls	17620 <argp_failure@@Base+0xd04>
   17758:	mov	r0, sl
   1775c:	bl	1b500 <argp_parse@@Base+0x2694>
   17760:	b	17620 <argp_failure@@Base+0xd04>
   17764:	mov	r1, r6
   17768:	mov	r0, sl
   1776c:	bl	1baac <argp_parse@@Base+0x2c40>
   17770:	cmp	r0, #0
   17774:	beq	17730 <argp_failure@@Base+0xe14>
   17778:	ldr	r3, [sl, #28]
   1777c:	b	17720 <argp_failure@@Base+0xe04>
   17780:	mov	r0, sl
   17784:	bl	1b500 <argp_parse@@Base+0x2694>
   17788:	ldr	r3, [sl, #28]
   1778c:	ldr	r1, [sl, #24]
   17790:	ldr	r0, [sl, #16]
   17794:	sub	r1, r3, r1
   17798:	cmp	r1, r0
   1779c:	str	r7, [sl, #12]
   177a0:	bls	17710 <argp_failure@@Base+0xdf4>
   177a4:	mov	r0, sl
   177a8:	bl	1b500 <argp_parse@@Base+0x2694>
   177ac:	ldr	r3, [sl, #28]
   177b0:	b	17710 <argp_failure@@Base+0xdf4>
   177b4:	mov	r0, sl
   177b8:	bl	1b500 <argp_parse@@Base+0x2694>
   177bc:	b	17668 <argp_failure@@Base+0xd4c>
   177c0:	mov	r1, sl
   177c4:	ldr	r0, [fp, #-108]	; 0xffffff94
   177c8:	bl	1510c <__assert_fail@plt+0x3ba4>
   177cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   177d0:	orr	r3, r3, #2
   177d4:	str	r3, [fp, #-100]	; 0xffffff9c
   177d8:	b	176d8 <argp_failure@@Base+0xdbc>
   177dc:	mov	r4, #1
   177e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   177e4:	b	16ba4 <argp_failure@@Base+0x288>
   177e8:	mov	r2, #10
   177ec:	mov	r1, #0
   177f0:	mov	r0, r4
   177f4:	bl	11214 <strtol@plt>
   177f8:	ldrb	r3, [r4]
   177fc:	ldr	r2, [r7]
   17800:	lsl	r3, r3, #1
   17804:	ldrh	r3, [r2, r3]
   17808:	tst	r3, #2048	; 0x800
   1780c:	str	r0, [fp, #-108]	; 0xffffff94
   17810:	beq	17838 <argp_failure@@Base+0xf1c>
   17814:	ldrb	r3, [r4, #1]!
   17818:	lsl	r3, r3, #1
   1781c:	ldrh	r3, [r2, r3]
   17820:	tst	r3, #2048	; 0x800
   17824:	bne	17814 <argp_failure@@Base+0xef8>
   17828:	b	17838 <argp_failure@@Base+0xf1c>
   1782c:	ldrb	r3, [r4, #1]!
   17830:	lsl	r3, r3, #1
   17834:	ldrh	r3, [r2, r3]
   17838:	tst	r3, #8192	; 0x2000
   1783c:	bne	1782c <argp_failure@@Base+0xf10>
   17840:	ldr	sl, [fp, #-120]	; 0xffffff88
   17844:	b	17188 <argp_failure@@Base+0x86c>
   17848:	ldrb	r3, [r5, #1]
   1784c:	cmp	r3, #111	; 0x6f
   17850:	bne	17308 <argp_failure@@Base+0x9ec>
   17854:	ldrb	r3, [r5, #2]
   17858:	cmp	r3, #45	; 0x2d
   1785c:	bne	17308 <argp_failure@@Base+0x9ec>
   17860:	ldr	r3, [fp, #-120]	; 0xffffff88
   17864:	add	r5, r5, #3
   17868:	sub	r6, r6, #3
   1786c:	str	r3, [fp, #-108]	; 0xffffff94
   17870:	mov	sl, #1
   17874:	b	17188 <argp_failure@@Base+0x86c>
   17878:	ldrb	r3, [r4, #1]
   1787c:	add	r4, r4, #1
   17880:	lsl	r3, r3, #1
   17884:	ldrh	r1, [r0, r3]
   17888:	tst	r1, #8192	; 0x2000
   1788c:	beq	17174 <argp_failure@@Base+0x858>
   17890:	ldrb	r3, [r4, #1]!
   17894:	lsl	r3, r3, #1
   17898:	ldrh	r1, [r0, r3]
   1789c:	tst	r1, #8192	; 0x2000
   178a0:	bne	17890 <argp_failure@@Base+0xf74>
   178a4:	b	17174 <argp_failure@@Base+0x858>
   178a8:	cmp	r3, r2
   178ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178b0:	ldr	r4, [r3, #12]
   178b4:	bhi	17c28 <argp_failure@@Base+0x130c>
   178b8:	str	r4, [sl, #12]
   178bc:	ldr	r5, [r8, #4]
   178c0:	cmp	r5, #0
   178c4:	beq	16ef4 <argp_failure@@Base+0x5d8>
   178c8:	add	r4, r6, #24
   178cc:	ldr	r7, [fp, #-96]	; 0xffffffa0
   178d0:	b	178e0 <argp_failure@@Base+0xfc4>
   178d4:	subs	r5, r5, #1
   178d8:	add	r4, r4, #24
   178dc:	beq	16ef4 <argp_failure@@Base+0x5d8>
   178e0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   178e4:	cmp	r3, #0
   178e8:	beq	178d4 <argp_failure@@Base+0xfb8>
   178ec:	ldr	r3, [r4, #-12]
   178f0:	tst	r3, #2
   178f4:	bne	178d4 <argp_failure@@Base+0xfb8>
   178f8:	sub	r1, fp, #76	; 0x4c
   178fc:	ldr	r0, [r7, #12]
   17900:	bl	1583c <__assert_fail@plt+0x42d4>
   17904:	ldr	r2, [r4, #-24]	; 0xffffffe8
   17908:	ldr	r1, [pc, #624]	; 17b80 <argp_failure@@Base+0x1264>
   1790c:	mov	r0, sl
   17910:	bl	1bbac <argp_parse@@Base+0x2d40>
   17914:	ldr	r3, [r6, #8]
   17918:	ldr	r1, [pc, #612]	; 17b84 <argp_failure@@Base+0x1268>
   1791c:	subs	r2, r3, #0
   17920:	mov	r0, sl
   17924:	beq	178d4 <argp_failure@@Base+0xfb8>
   17928:	ldr	ip, [r6, #12]
   1792c:	tst	ip, #1
   17930:	ldrne	r1, [pc, #592]	; 17b88 <argp_failure@@Base+0x126c>
   17934:	bl	1bbac <argp_parse@@Base+0x2d40>
   17938:	b	178d4 <argp_failure@@Base+0xfb8>
   1793c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17940:	sub	r1, fp, #76	; 0x4c
   17944:	ldr	r0, [r3, #8]
   17948:	bl	1583c <__assert_fail@plt+0x42d4>
   1794c:	ldr	r2, [sl, #28]
   17950:	ldr	r1, [sl, #32]
   17954:	cmp	r2, r1
   17958:	bcs	17c5c <argp_failure@@Base+0x1340>
   1795c:	add	r1, r2, #1
   17960:	mov	r3, #45	; 0x2d
   17964:	str	r1, [sl, #28]
   17968:	strb	r3, [r2]
   1796c:	ldr	r2, [sl, #28]
   17970:	ldr	r1, [sl, #32]
   17974:	ldrb	r7, [r8]
   17978:	cmp	r2, r1
   1797c:	bcs	17c40 <argp_failure@@Base+0x1324>
   17980:	add	r1, r2, #1
   17984:	str	r1, [sl, #28]
   17988:	strb	r7, [r2]
   1798c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   17990:	cmp	r3, #0
   17994:	beq	17bf4 <argp_failure@@Base+0x12d8>
   17998:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1799c:	ldr	r2, [r3]
   179a0:	cmp	r2, #0
   179a4:	bne	17bf4 <argp_failure@@Base+0x12d8>
   179a8:	ldr	r2, [r6, #8]
   179ac:	cmp	r2, #0
   179b0:	movne	r3, #1
   179b4:	strne	r3, [fp, #-80]	; 0xffffffb0
   179b8:	b	16dfc <argp_failure@@Base+0x4e0>
   179bc:	ldr	r5, [r8, #20]
   179c0:	ldr	r9, [r6, #16]
   179c4:	cmp	r5, #0
   179c8:	beq	17ce4 <argp_failure@@Base+0x13c8>
   179cc:	ldr	r3, [r5, #20]
   179d0:	cmp	r3, #0
   179d4:	beq	17ce4 <argp_failure@@Base+0x13c8>
   179d8:	ldr	r1, [fp, #-104]	; 0xffffff98
   179dc:	mov	r0, r5
   179e0:	ldr	r4, [r6, #4]
   179e4:	bl	19c8c <argp_parse@@Base+0xe20>
   179e8:	ldr	r3, [r5, #20]
   179ec:	mov	r1, r9
   179f0:	mov	r2, r0
   179f4:	mov	r0, r4
   179f8:	blx	r3
   179fc:	mov	r4, r0
   17a00:	cmp	r4, #0
   17a04:	beq	17ab8 <argp_failure@@Base+0x119c>
   17a08:	ldrb	r3, [r4]
   17a0c:	cmp	r3, #0
   17a10:	beq	17aa8 <argp_failure@@Base+0x118c>
   17a14:	ldr	r3, [sl, #28]
   17a18:	ldr	r2, [sl, #24]
   17a1c:	ldr	r1, [sl, #16]
   17a20:	sub	r2, r3, r2
   17a24:	cmp	r2, r1
   17a28:	bhi	17db0 <argp_failure@@Base+0x1494>
   17a2c:	ldr	r6, [sl, #20]
   17a30:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17a34:	bic	r6, r6, r6, asr #31
   17a38:	ldr	r5, [r2, #20]
   17a3c:	mov	r7, r5
   17a40:	str	r5, [sl, #4]
   17a44:	add	r2, r5, #3
   17a48:	cmp	r2, r6
   17a4c:	str	r7, [sl, #12]
   17a50:	bcs	17d24 <argp_failure@@Base+0x1408>
   17a54:	ldr	r2, [sl, #32]
   17a58:	cmp	r2, r3
   17a5c:	bls	17f2c <argp_failure@@Base+0x1610>
   17a60:	add	r1, r3, #1
   17a64:	mov	r2, #10
   17a68:	str	r1, [sl, #28]
   17a6c:	strb	r2, [r3]
   17a70:	mov	r0, r4
   17a74:	bl	113e8 <strlen@plt>
   17a78:	subs	r5, r0, #0
   17a7c:	beq	17aa8 <argp_failure@@Base+0x118c>
   17a80:	ldr	r0, [sl, #28]
   17a84:	ldr	r2, [sl, #32]
   17a88:	add	r3, r0, r5
   17a8c:	cmp	r2, r3
   17a90:	bcs	17d94 <argp_failure@@Base+0x1478>
   17a94:	mov	r1, r5
   17a98:	mov	r0, sl
   17a9c:	bl	1baac <argp_parse@@Base+0x2c40>
   17aa0:	cmp	r0, #0
   17aa4:	bne	17d90 <argp_failure@@Base+0x1474>
   17aa8:	cmp	r9, r4
   17aac:	beq	17ab8 <argp_failure@@Base+0x119c>
   17ab0:	mov	r0, r4
   17ab4:	bl	19de8 <argp_parse@@Base+0xf7c>
   17ab8:	ldr	r3, [sl, #28]
   17abc:	ldr	r2, [sl, #24]
   17ac0:	ldr	r1, [sl, #16]
   17ac4:	sub	r2, r3, r2
   17ac8:	cmp	r2, r1
   17acc:	bhi	17d08 <argp_failure@@Base+0x13ec>
   17ad0:	ldr	r1, [sl, #32]
   17ad4:	mov	r2, #0
   17ad8:	cmp	r1, r3
   17adc:	str	r2, [sl, #4]
   17ae0:	bls	17cec <argp_failure@@Base+0x13d0>
   17ae4:	add	r1, r3, #1
   17ae8:	mov	r2, #10
   17aec:	str	r1, [sl, #28]
   17af0:	strb	r2, [r3]
   17af4:	str	r8, [fp, #-88]	; 0xffffffa8
   17af8:	b	16f60 <argp_failure@@Base+0x644>
   17afc:	mov	r0, sl
   17b00:	bl	1b500 <argp_parse@@Base+0x2694>
   17b04:	b	16f0c <argp_failure@@Base+0x5f0>
   17b08:	mov	r0, sl
   17b0c:	bl	1b500 <argp_parse@@Base+0x2694>
   17b10:	ldr	r2, [fp, #-120]	; 0xffffff88
   17b14:	ldr	r3, [sl, #28]
   17b18:	ldr	r1, [sl, #24]
   17b1c:	str	r2, [sl, #4]
   17b20:	ldr	r2, [sl, #16]
   17b24:	sub	r3, r3, r1
   17b28:	cmp	r3, r2
   17b2c:	bls	16f80 <argp_failure@@Base+0x664>
   17b30:	mov	r0, sl
   17b34:	bl	1b500 <argp_parse@@Base+0x2694>
   17b38:	b	16f80 <argp_failure@@Base+0x664>
   17b3c:	andeq	pc, r2, ip, lsl #8
   17b40:			; <UNDEFINED> instruction: 0x0002ffbc
   17b44:	andeq	lr, r1, ip, lsr #8
   17b48:	andeq	r0, r0, #5
   17b4c:	ldrdeq	lr, [r1], -r8
   17b50:	andeq	lr, r1, r4, lsr #1
   17b54:	strheq	lr, [r1], -r4
   17b58:	andeq	lr, r1, r4, lsr #2
   17b5c:	andeq	lr, r1, r8, lsl r3
   17b60:	andeq	lr, r1, r8, ror #5
   17b64:	ldrdeq	lr, [r1], -r4
   17b68:	muleq	r1, ip, r3
   17b6c:	andeq	lr, r1, r4, lsr #7
   17b70:			; <UNDEFINED> instruction: 0x0001e3b4
   17b74:	andeq	lr, r1, ip, lsr #7
   17b78:			; <UNDEFINED> instruction: 0x0001e3bc
   17b7c:	andeq	lr, r1, r4, asr #7
   17b80:	andeq	lr, r1, r4, lsl r4
   17b84:	andeq	lr, r1, r4, lsr #8
   17b88:	andeq	lr, r1, ip, lsl r4
   17b8c:	andeq	lr, r1, ip, lsl #8
   17b90:	muleq	r1, r0, r5
   17b94:	andeq	r5, r1, ip, ror #28
   17b98:	andeq	lr, r1, r8, lsr #8
   17b9c:	andeq	lr, r1, r0, asr #6
   17ba0:	andeq	lr, r1, r4, ror #1
   17ba4:	muleq	r1, r4, r3
   17ba8:	andeq	lr, r1, r0, ror #6
   17bac:	ldrdeq	lr, [r1], -r4
   17bb0:	andeq	lr, r1, r4, asr #1
   17bb4:	andeq	lr, r1, r4, lsl #2
   17bb8:	strdeq	lr, [r1], -r4
   17bbc:	andeq	lr, r1, r4, lsl r1
   17bc0:	andeq	lr, r1, r4, ror #4
   17bc4:	mov	r0, sl
   17bc8:	bl	1b500 <argp_parse@@Base+0x2694>
   17bcc:	ldr	r0, [r6, #12]
   17bd0:	and	r0, r0, #8
   17bd4:	b	16d88 <argp_failure@@Base+0x46c>
   17bd8:	mov	r0, sl
   17bdc:	bl	1b500 <argp_parse@@Base+0x2694>
   17be0:	ldr	ip, [sl, #28]
   17be4:	ldr	r2, [sl, #24]
   17be8:	ldr	lr, [sl, #16]
   17bec:	sub	ip, ip, r2
   17bf0:	b	16cf8 <argp_failure@@Base+0x3dc>
   17bf4:	ldr	r2, [r6, #8]
   17bf8:	cmp	r2, #0
   17bfc:	beq	16dfc <argp_failure@@Base+0x4e0>
   17c00:	ldr	r1, [r6, #12]
   17c04:	mov	r0, sl
   17c08:	tst	r1, #1
   17c0c:	ldrne	r1, [pc, #-136]	; 17b8c <argp_failure@@Base+0x1270>
   17c10:	ldreq	r1, [pc, #-136]	; 17b90 <argp_failure@@Base+0x1274>
   17c14:	bl	1bbac <argp_parse@@Base+0x2d40>
   17c18:	b	16dfc <argp_failure@@Base+0x4e0>
   17c1c:	mov	r3, #1
   17c20:	str	r3, [fp, #-132]	; 0xffffff7c
   17c24:	b	16d78 <argp_failure@@Base+0x45c>
   17c28:	mov	r0, sl
   17c2c:	bl	1b500 <argp_parse@@Base+0x2694>
   17c30:	b	178b8 <argp_failure@@Base+0xf9c>
   17c34:	mov	r0, sl
   17c38:	bl	1b500 <argp_parse@@Base+0x2694>
   17c3c:	b	16e40 <argp_failure@@Base+0x524>
   17c40:	mov	r1, #1
   17c44:	mov	r0, sl
   17c48:	bl	1baac <argp_parse@@Base+0x2c40>
   17c4c:	cmp	r0, #0
   17c50:	beq	1798c <argp_failure@@Base+0x1070>
   17c54:	ldr	r2, [sl, #28]
   17c58:	b	17980 <argp_failure@@Base+0x1064>
   17c5c:	mov	r1, #1
   17c60:	mov	r0, sl
   17c64:	bl	1baac <argp_parse@@Base+0x2c40>
   17c68:	cmp	r0, #0
   17c6c:	beq	1796c <argp_failure@@Base+0x1050>
   17c70:	ldr	r2, [sl, #28]
   17c74:	b	1795c <argp_failure@@Base+0x1040>
   17c78:	mvn	r3, #0
   17c7c:	str	r3, [r7, #12]
   17c80:	ldr	r3, [fp, #-108]	; 0xffffff94
   17c84:	ldr	r1, [r3, #4]
   17c88:	cmp	r1, #0
   17c8c:	beq	16b98 <argp_failure@@Base+0x27c>
   17c90:	ldr	r2, [fp, #-112]	; 0xffffff90
   17c94:	mov	r3, #0
   17c98:	str	r3, [r2, #24]
   17c9c:	add	r3, r3, #1
   17ca0:	cmp	r3, r1
   17ca4:	add	r2, r2, #28
   17ca8:	bcc	17c98 <argp_failure@@Base+0x137c>
   17cac:	ldr	r0, [fp, #-112]	; 0xffffff90
   17cb0:	ldr	r3, [pc, #-292]	; 17b94 <argp_failure@@Base+0x1278>
   17cb4:	mov	r2, #28
   17cb8:	bl	114fc <qsort@plt>
   17cbc:	b	16b98 <argp_failure@@Base+0x27c>
   17cc0:	mvn	r3, #0
   17cc4:	str	r3, [r7, #12]
   17cc8:	ldr	r3, [fp, #-108]	; 0xffffff94
   17ccc:	ldr	r3, [r3, #4]
   17cd0:	cmp	r3, #0
   17cd4:	str	r3, [fp, #-120]	; 0xffffff88
   17cd8:	sub	r6, r3, #1
   17cdc:	bne	1753c <argp_failure@@Base+0xc20>
   17ce0:	b	16b98 <argp_failure@@Base+0x27c>
   17ce4:	mov	r4, r9
   17ce8:	b	17a00 <argp_failure@@Base+0x10e4>
   17cec:	mov	r1, #1
   17cf0:	mov	r0, sl
   17cf4:	bl	1baac <argp_parse@@Base+0x2c40>
   17cf8:	cmp	r0, #0
   17cfc:	beq	17af4 <argp_failure@@Base+0x11d8>
   17d00:	ldr	r3, [sl, #28]
   17d04:	b	17ae4 <argp_failure@@Base+0x11c8>
   17d08:	mov	r0, sl
   17d0c:	bl	1b500 <argp_parse@@Base+0x2694>
   17d10:	ldr	r3, [sl, #28]
   17d14:	b	17ad0 <argp_failure@@Base+0x11b4>
   17d18:	mov	r3, r8
   17d1c:	mov	r4, r5
   17d20:	b	17160 <argp_failure@@Base+0x844>
   17d24:	cmp	r5, r6
   17d28:	bhi	17ea4 <argp_failure@@Base+0x1588>
   17d2c:	ldr	r1, [sl, #32]
   17d30:	add	r2, r3, #3
   17d34:	cmp	r1, r2
   17d38:	bcs	17d54 <argp_failure@@Base+0x1438>
   17d3c:	mov	r1, #3
   17d40:	mov	r0, sl
   17d44:	bl	1baac <argp_parse@@Base+0x2c40>
   17d48:	cmp	r0, #0
   17d4c:	beq	17a70 <argp_failure@@Base+0x1154>
   17d50:	ldr	r3, [sl, #28]
   17d54:	ldr	r2, [pc, #-452]	; 17b98 <argp_failure@@Base+0x127c>
   17d58:	ldrh	r1, [r2]
   17d5c:	ldrb	r2, [r2, #2]
   17d60:	strh	r1, [r3]
   17d64:	strb	r2, [r3, #2]
   17d68:	ldr	r3, [sl, #28]
   17d6c:	add	r3, r3, #3
   17d70:	str	r3, [sl, #28]
   17d74:	b	17a70 <argp_failure@@Base+0x1154>
   17d78:	ldr	r3, [fp, #-108]	; 0xffffff94
   17d7c:	ldr	r8, [r3]
   17d80:	str	r4, [fp, #-88]	; 0xffffffa8
   17d84:	str	r4, [fp, #-84]	; 0xffffffac
   17d88:	str	r4, [fp, #-80]	; 0xffffffb0
   17d8c:	b	16cd8 <argp_failure@@Base+0x3bc>
   17d90:	ldr	r0, [sl, #28]
   17d94:	mov	r2, r5
   17d98:	mov	r1, r4
   17d9c:	bl	11298 <memcpy@plt>
   17da0:	ldr	r3, [sl, #28]
   17da4:	add	r5, r3, r5
   17da8:	str	r5, [sl, #28]
   17dac:	b	17aa8 <argp_failure@@Base+0x118c>
   17db0:	mov	r0, sl
   17db4:	bl	1b500 <argp_parse@@Base+0x2694>
   17db8:	ldr	r3, [sl, #28]
   17dbc:	ldr	r2, [sl, #24]
   17dc0:	ldr	r1, [sl, #16]
   17dc4:	ldr	r6, [sl, #20]
   17dc8:	ldr	r7, [fp, #-96]	; 0xffffffa0
   17dcc:	sub	r2, r3, r2
   17dd0:	cmp	r2, r1
   17dd4:	bic	r6, r6, r6, asr #31
   17dd8:	ldr	r5, [r7, #20]
   17ddc:	bls	17a3c <argp_failure@@Base+0x1120>
   17de0:	mov	r0, sl
   17de4:	bl	1b500 <argp_parse@@Base+0x2694>
   17de8:	ldr	r3, [sl, #28]
   17dec:	ldr	r2, [sl, #24]
   17df0:	ldr	r1, [sl, #16]
   17df4:	sub	r2, r3, r2
   17df8:	str	r5, [sl, #4]
   17dfc:	mov	r5, r7
   17e00:	ldr	r7, [r7, #20]
   17e04:	cmp	r2, r1
   17e08:	movls	r5, r7
   17e0c:	bls	17a44 <argp_failure@@Base+0x1128>
   17e10:	mov	r0, sl
   17e14:	bl	1b500 <argp_parse@@Base+0x2694>
   17e18:	ldr	r5, [r5, #20]
   17e1c:	ldr	r3, [sl, #28]
   17e20:	b	17a44 <argp_failure@@Base+0x1128>
   17e24:	str	r5, [sp]
   17e28:	ldr	r3, [pc, #-660]	; 17b9c <argp_failure@@Base+0x1280>
   17e2c:	mov	r1, r2
   17e30:	ldr	r0, [fp, #-104]	; 0xffffff98
   17e34:	bl	1691c <argp_failure@@Base>
   17e38:	b	1727c <argp_failure@@Base+0x960>
   17e3c:	ldr	r3, [pc, #-676]	; 17ba0 <argp_failure@@Base+0x1284>
   17e40:	ldr	r1, [pc, #-676]	; 17ba4 <argp_failure@@Base+0x1288>
   17e44:	mov	r2, #0
   17e48:	ldr	r0, [fp, #-104]	; 0xffffff98
   17e4c:	stm	sp, {r1, r3}
   17e50:	mov	r1, r2
   17e54:	ldr	r3, [pc, #-692]	; 17ba8 <argp_failure@@Base+0x128c>
   17e58:	bl	1691c <argp_failure@@Base>
   17e5c:	b	16b68 <argp_failure@@Base+0x24c>
   17e60:	ldr	r3, [pc, #-700]	; 17bac <argp_failure@@Base+0x1290>
   17e64:	b	17e40 <argp_failure@@Base+0x1524>
   17e68:	mov	r1, #1
   17e6c:	mov	r0, sl
   17e70:	bl	1baac <argp_parse@@Base+0x2c40>
   17e74:	cmp	r0, #0
   17e78:	beq	16c08 <argp_failure@@Base+0x2ec>
   17e7c:	ldr	r3, [sl, #28]
   17e80:	b	16bf8 <argp_failure@@Base+0x2dc>
   17e84:	ldr	r0, [r6, #16]
   17e88:	sub	r2, fp, #76	; 0x4c
   17e8c:	ldr	r1, [r8, #20]
   17e90:	bl	1557c <__assert_fail@plt+0x4014>
   17e94:	b	17af4 <argp_failure@@Base+0x11d8>
   17e98:	ldr	r0, [fp, #-136]	; 0xffffff78
   17e9c:	bl	112f8 <funlockfile@plt>
   17ea0:	b	16c68 <argp_failure@@Base+0x34c>
   17ea4:	ldr	r2, [sl, #24]
   17ea8:	ldr	r1, [sl, #16]
   17eac:	sub	r3, r3, r2
   17eb0:	cmp	r3, r1
   17eb4:	bhi	1802c <argp_failure@@Base+0x1710>
   17eb8:	ldr	r3, [sl, #20]
   17ebc:	mov	r6, #32
   17ec0:	cmp	r3, #0
   17ec4:	subge	r5, r5, r3
   17ec8:	mov	r7, #1
   17ecc:	cmp	r5, #0
   17ed0:	sub	r5, r5, #1
   17ed4:	ble	17a70 <argp_failure@@Base+0x1154>
   17ed8:	ldr	r3, [sl, #28]
   17edc:	ldr	r2, [sl, #32]
   17ee0:	cmp	r3, r2
   17ee4:	bcs	17f10 <argp_failure@@Base+0x15f4>
   17ee8:	add	r2, r3, #1
   17eec:	cmp	r5, #0
   17ef0:	str	r2, [sl, #28]
   17ef4:	sub	r5, r5, #1
   17ef8:	strb	r6, [r3]
   17efc:	ble	17a70 <argp_failure@@Base+0x1154>
   17f00:	ldr	r3, [sl, #28]
   17f04:	ldr	r2, [sl, #32]
   17f08:	cmp	r3, r2
   17f0c:	bcc	17ee8 <argp_failure@@Base+0x15cc>
   17f10:	mov	r1, r7
   17f14:	mov	r0, sl
   17f18:	bl	1baac <argp_parse@@Base+0x2c40>
   17f1c:	cmp	r0, #0
   17f20:	beq	17ecc <argp_failure@@Base+0x15b0>
   17f24:	ldr	r3, [sl, #28]
   17f28:	b	17ee8 <argp_failure@@Base+0x15cc>
   17f2c:	mov	r1, #1
   17f30:	mov	r0, sl
   17f34:	bl	1baac <argp_parse@@Base+0x2c40>
   17f38:	cmp	r0, #0
   17f3c:	beq	17a70 <argp_failure@@Base+0x1154>
   17f40:	ldr	r3, [sl, #28]
   17f44:	b	17a60 <argp_failure@@Base+0x1144>
   17f48:	ldr	r4, [pc, #-912]	; 17bc0 <argp_failure@@Base+0x12a4>
   17f4c:	ldr	r9, [fp, #-112]	; 0xffffff90
   17f50:	ldr	r3, [sl, #28]
   17f54:	ldr	r2, [sl, #32]
   17f58:	cmp	r3, r2
   17f5c:	bcs	18010 <argp_failure@@Base+0x16f4>
   17f60:	add	r1, r3, #1
   17f64:	mov	r2, #10
   17f68:	str	r1, [sl, #28]
   17f6c:	strb	r2, [r3]
   17f70:	mov	r0, r4
   17f74:	bl	113e8 <strlen@plt>
   17f78:	subs	r6, r0, #0
   17f7c:	beq	18000 <argp_failure@@Base+0x16e4>
   17f80:	ldr	r0, [sl, #28]
   17f84:	ldr	r2, [sl, #32]
   17f88:	add	r3, r0, r6
   17f8c:	cmp	r2, r3
   17f90:	bcs	17fac <argp_failure@@Base+0x1690>
   17f94:	mov	r1, r6
   17f98:	mov	r0, sl
   17f9c:	bl	1baac <argp_parse@@Base+0x2c40>
   17fa0:	cmp	r0, #0
   17fa4:	beq	18000 <argp_failure@@Base+0x16e4>
   17fa8:	ldr	r0, [sl, #28]
   17fac:	mov	r2, r6
   17fb0:	mov	r1, r4
   17fb4:	bl	11298 <memcpy@plt>
   17fb8:	ldr	r3, [sl, #28]
   17fbc:	add	r3, r3, r6
   17fc0:	str	r3, [sl, #28]
   17fc4:	ldr	r2, [sl, #32]
   17fc8:	cmp	r2, r3
   17fcc:	bls	1805c <argp_failure@@Base+0x1740>
   17fd0:	add	r1, r3, #1
   17fd4:	mov	r2, #10
   17fd8:	str	r1, [sl, #28]
   17fdc:	strb	r2, [r3]
   17fe0:	b	17018 <argp_failure@@Base+0x6fc>
   17fe4:	mov	r1, #1
   17fe8:	mov	r0, sl
   17fec:	bl	1baac <argp_parse@@Base+0x2c40>
   17ff0:	cmp	r0, #0
   17ff4:	beq	16cac <argp_failure@@Base+0x390>
   17ff8:	ldr	r3, [sl, #28]
   17ffc:	b	16c9c <argp_failure@@Base+0x380>
   18000:	ldr	r3, [sl, #28]
   18004:	b	17fc4 <argp_failure@@Base+0x16a8>
   18008:	ldr	r3, [pc, #-1120]	; 17bb0 <argp_failure@@Base+0x1294>
   1800c:	b	17e40 <argp_failure@@Base+0x1524>
   18010:	mov	r1, #1
   18014:	mov	r0, sl
   18018:	bl	1baac <argp_parse@@Base+0x2c40>
   1801c:	cmp	r0, #0
   18020:	beq	17f70 <argp_failure@@Base+0x1654>
   18024:	ldr	r3, [sl, #28]
   18028:	b	17f60 <argp_failure@@Base+0x1644>
   1802c:	mov	r0, sl
   18030:	bl	1b500 <argp_parse@@Base+0x2694>
   18034:	b	17eb8 <argp_failure@@Base+0x159c>
   18038:	ldr	r3, [pc, #-1164]	; 17bb4 <argp_failure@@Base+0x1298>
   1803c:	b	17e40 <argp_failure@@Base+0x1524>
   18040:	ldr	r3, [pc, #-1168]	; 17bb8 <argp_failure@@Base+0x129c>
   18044:	b	17e40 <argp_failure@@Base+0x1524>
   18048:	mov	r9, r1
   1804c:	ldr	r4, [pc, #-1172]	; 17bc0 <argp_failure@@Base+0x12a4>
   18050:	b	17f50 <argp_failure@@Base+0x1634>
   18054:	ldr	r3, [pc, #-1184]	; 17bbc <argp_failure@@Base+0x12a0>
   18058:	b	17e40 <argp_failure@@Base+0x1524>
   1805c:	mov	r1, #1
   18060:	mov	r0, sl
   18064:	bl	1baac <argp_parse@@Base+0x2c40>
   18068:	cmp	r0, #0
   1806c:	beq	17018 <argp_failure@@Base+0x6fc>
   18070:	ldr	r3, [sl, #28]
   18074:	b	17fd0 <argp_failure@@Base+0x16b4>
   18078:	ldr	r9, [fp, #-112]	; 0xffffff90
   1807c:	ldr	r4, [pc, #-1220]	; 17bc0 <argp_failure@@Base+0x12a4>
   18080:	b	17f50 <argp_failure@@Base+0x1634>

00018084 <argp_help@@Base>:
   18084:	push	{lr}		; (str lr, [sp, #-4]!)
   18088:	sub	sp, sp, #12
   1808c:	str	r3, [sp]
   18090:	mov	r3, r2
   18094:	mov	r2, r1
   18098:	mov	r1, #0
   1809c:	bl	16b24 <argp_failure@@Base+0x208>
   180a0:	add	sp, sp, #12
   180a4:	pop	{pc}		; (ldr pc, [sp], #4)

000180a8 <argp_state_help@@Base>:
   180a8:	push	{r4, r5, lr}
   180ac:	subs	r4, r0, #0
   180b0:	sub	sp, sp, #12
   180b4:	mov	r5, r2
   180b8:	beq	18118 <argp_state_help@@Base+0x70>
   180bc:	ldr	r3, [r4, #16]
   180c0:	tst	r3, #2
   180c4:	bne	18110 <argp_state_help@@Base+0x68>
   180c8:	cmp	r1, #0
   180cc:	beq	18110 <argp_state_help@@Base+0x68>
   180d0:	tst	r3, #64	; 0x40
   180d4:	ldr	r3, [r4, #40]	; 0x28
   180d8:	orrne	r5, r5, #128	; 0x80
   180dc:	ldr	r0, [r4]
   180e0:	mov	r2, r1
   180e4:	str	r3, [sp]
   180e8:	mov	r1, r4
   180ec:	mov	r3, r5
   180f0:	bl	16b24 <argp_failure@@Base+0x208>
   180f4:	ldr	r3, [r4, #16]
   180f8:	tst	r3, #32
   180fc:	bne	18110 <argp_state_help@@Base+0x68>
   18100:	ands	r0, r5, #256	; 0x100
   18104:	bne	18144 <argp_state_help@@Base+0x9c>
   18108:	tst	r5, #512	; 0x200
   1810c:	bne	18140 <argp_state_help@@Base+0x98>
   18110:	add	sp, sp, #12
   18114:	pop	{r4, r5, pc}
   18118:	cmp	r1, #0
   1811c:	beq	18110 <argp_state_help@@Base+0x68>
   18120:	ldr	r3, [pc, #40]	; 18150 <argp_state_help@@Base+0xa8>
   18124:	mov	r2, r1
   18128:	mov	r1, r4
   1812c:	ldr	ip, [r3]
   18130:	mov	r3, r5
   18134:	str	ip, [sp]
   18138:	bl	16b24 <argp_failure@@Base+0x208>
   1813c:	b	18100 <argp_state_help@@Base+0x58>
   18140:	bl	113d0 <exit@plt>
   18144:	ldr	r3, [pc, #8]	; 18154 <argp_state_help@@Base+0xac>
   18148:	ldr	r0, [r3]
   1814c:	bl	113d0 <exit@plt>
   18150:	andeq	pc, r2, r8, asr #8
   18154:	andeq	pc, r2, r4, lsr r4	; <UNPREDICTABLE>

00018158 <argp_error@@Base>:
   18158:	push	{r1, r2, r3}
   1815c:	push	{r4, r5, lr}
   18160:	subs	r5, r0, #0
   18164:	sub	sp, sp, #16
   18168:	beq	18278 <argp_error@@Base+0x120>
   1816c:	ldr	r3, [r5, #16]
   18170:	tst	r3, #2
   18174:	bne	18268 <argp_error@@Base+0x110>
   18178:	ldr	r4, [r5, #44]	; 0x2c
   1817c:	cmp	r4, #0
   18180:	beq	18268 <argp_error@@Base+0x110>
   18184:	mov	r0, r4
   18188:	bl	114e4 <flockfile@plt>
   1818c:	ldr	r0, [r5, #40]	; 0x28
   18190:	add	r3, sp, #32
   18194:	str	r3, [sp, #12]
   18198:	mov	r1, r4
   1819c:	bl	111f0 <fputs_unlocked@plt>
   181a0:	ldr	r3, [r4, #20]
   181a4:	ldr	r2, [r4, #24]
   181a8:	cmp	r3, r2
   181ac:	addcc	r1, r3, #1
   181b0:	movcc	r2, #58	; 0x3a
   181b4:	strcc	r1, [r4, #20]
   181b8:	strbcc	r2, [r3]
   181bc:	bcs	182a4 <argp_error@@Base+0x14c>
   181c0:	ldr	r3, [r4, #20]
   181c4:	ldr	r2, [r4, #24]
   181c8:	cmp	r3, r2
   181cc:	addcc	r1, r3, #1
   181d0:	movcc	r2, #32
   181d4:	strcc	r1, [r4, #20]
   181d8:	strbcc	r2, [r3]
   181dc:	bcs	182c4 <argp_error@@Base+0x16c>
   181e0:	ldr	r1, [sp, #28]
   181e4:	ldr	r2, [sp, #12]
   181e8:	mov	r0, r4
   181ec:	bl	114c0 <vfprintf@plt>
   181f0:	ldr	r3, [r4, #20]
   181f4:	ldr	r2, [r4, #24]
   181f8:	cmp	r3, r2
   181fc:	addcc	r1, r3, #1
   18200:	movcc	r2, #10
   18204:	strcc	r1, [r4, #20]
   18208:	strbcc	r2, [r3]
   1820c:	bcs	182b4 <argp_error@@Base+0x15c>
   18210:	cmp	r5, #0
   18214:	beq	182d4 <argp_error@@Base+0x17c>
   18218:	ldr	r3, [r5, #16]
   1821c:	tst	r3, #2
   18220:	bne	18260 <argp_error@@Base+0x108>
   18224:	ldr	r2, [r5, #40]	; 0x28
   18228:	tst	r3, #64	; 0x40
   1822c:	moveq	r3, #260	; 0x104
   18230:	movne	r3, #388	; 0x184
   18234:	ldr	r0, [r5]
   18238:	mov	r1, r5
   1823c:	str	r2, [sp]
   18240:	mov	r2, r4
   18244:	bl	16b24 <argp_failure@@Base+0x208>
   18248:	ldr	r3, [r5, #16]
   1824c:	tst	r3, #32
   18250:	bne	18260 <argp_error@@Base+0x108>
   18254:	ldr	r3, [pc, #156]	; 182f8 <argp_error@@Base+0x1a0>
   18258:	ldr	r0, [r3]
   1825c:	bl	113d0 <exit@plt>
   18260:	mov	r0, r4
   18264:	bl	112f8 <funlockfile@plt>
   18268:	add	sp, sp, #16
   1826c:	pop	{r4, r5, lr}
   18270:	add	sp, sp, #12
   18274:	bx	lr
   18278:	ldr	r3, [pc, #124]	; 182fc <argp_error@@Base+0x1a4>
   1827c:	ldr	r4, [r3]
   18280:	cmp	r4, #0
   18284:	beq	18268 <argp_error@@Base+0x110>
   18288:	mov	r0, r4
   1828c:	bl	114e4 <flockfile@plt>
   18290:	ldr	r2, [pc, #104]	; 18300 <argp_error@@Base+0x1a8>
   18294:	add	r3, sp, #32
   18298:	str	r3, [sp, #12]
   1829c:	ldr	r0, [r2]
   182a0:	b	18198 <argp_error@@Base+0x40>
   182a4:	mov	r1, #58	; 0x3a
   182a8:	mov	r0, r4
   182ac:	bl	1149c <__overflow@plt>
   182b0:	b	181c0 <argp_error@@Base+0x68>
   182b4:	mov	r1, #10
   182b8:	mov	r0, r4
   182bc:	bl	1149c <__overflow@plt>
   182c0:	b	18210 <argp_error@@Base+0xb8>
   182c4:	mov	r1, #32
   182c8:	mov	r0, r4
   182cc:	bl	1149c <__overflow@plt>
   182d0:	b	181e0 <argp_error@@Base+0x88>
   182d4:	ldr	r1, [pc, #36]	; 18300 <argp_error@@Base+0x1a8>
   182d8:	mov	r2, r4
   182dc:	mov	r3, #260	; 0x104
   182e0:	ldr	r0, [r1]
   182e4:	mov	r1, r5
   182e8:	str	r0, [sp]
   182ec:	mov	r0, r5
   182f0:	bl	16b24 <argp_failure@@Base+0x208>
   182f4:	b	18254 <argp_error@@Base+0xfc>
   182f8:	andeq	pc, r2, r4, lsr r4	; <UNPREDICTABLE>
   182fc:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   18300:	andeq	pc, r2, r8, asr #8
   18304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18308:	sub	sp, sp, #36	; 0x24
   1830c:	ldr	sl, [r0]
   18310:	str	r0, [sp, #12]
   18314:	cmp	sl, #0
   18318:	str	r1, [sp, #16]
   1831c:	str	r2, [sp, #20]
   18320:	mov	r9, r3
   18324:	ldr	r8, [r0, #16]
   18328:	ldr	r7, [sp, #72]	; 0x48
   1832c:	beq	184f8 <argp_error@@Base+0x3a0>
   18330:	add	fp, sl, #24
   18334:	str	r8, [sp, #28]
   18338:	str	r3, [sp, #24]
   1833c:	ldr	r4, [fp, #-20]	; 0xffffffec
   18340:	sub	r1, fp, #24
   18344:	cmp	r4, #0
   18348:	bne	18358 <argp_error@@Base+0x200>
   1834c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18350:	cmp	r3, #0
   18354:	beq	184cc <argp_error@@Base+0x374>
   18358:	ldr	r3, [fp, #-12]
   1835c:	tst	r3, #4
   18360:	moveq	sl, r1
   18364:	moveq	r5, r3
   18368:	ldrne	r5, [sl, #12]
   1836c:	ands	r5, r5, #8
   18370:	bne	184b4 <argp_error@@Base+0x35c>
   18374:	tst	r3, #8
   18378:	bne	183f4 <argp_error@@Base+0x29c>
   1837c:	sub	r3, r4, #1
   18380:	cmp	r3, #254	; 0xfe
   18384:	bhi	183f4 <argp_error@@Base+0x29c>
   18388:	bl	113c4 <__ctype_b_loc@plt>
   1838c:	lsl	r3, r4, #1
   18390:	ldr	r1, [r0]
   18394:	ldrh	r3, [r1, r3]
   18398:	tst	r3, #16384	; 0x4000
   1839c:	beq	183f4 <argp_error@@Base+0x29c>
   183a0:	ldr	r3, [r7, #4]
   183a4:	add	r1, r3, #1
   183a8:	str	r1, [r7, #4]
   183ac:	strb	r4, [r3]
   183b0:	ldr	r3, [sl, #8]
   183b4:	cmp	r3, #0
   183b8:	beq	183e8 <argp_error@@Base+0x290>
   183bc:	ldr	r3, [r7, #4]
   183c0:	mov	r2, #58	; 0x3a
   183c4:	add	r1, r3, #1
   183c8:	str	r1, [r7, #4]
   183cc:	strb	r2, [r3]
   183d0:	ldr	r3, [sl, #12]
   183d4:	tst	r3, #1
   183d8:	ldrne	r3, [r7, #4]
   183dc:	addne	r1, r3, #1
   183e0:	strne	r1, [r7, #4]
   183e4:	strbne	r2, [r3]
   183e8:	ldr	r3, [r7, #4]
   183ec:	mov	r2, #0
   183f0:	strb	r2, [r3]
   183f4:	ldr	r4, [fp, #-24]	; 0xffffffe8
   183f8:	cmp	r4, #0
   183fc:	beq	184b4 <argp_error@@Base+0x35c>
   18400:	ldr	r8, [r7]
   18404:	ldr	r6, [r8, #8]
   18408:	ldr	r0, [r6]
   1840c:	cmp	r0, #0
   18410:	beq	18434 <argp_error@@Base+0x2dc>
   18414:	mov	r9, r6
   18418:	mov	r1, r4
   1841c:	bl	11208 <strcmp@plt>
   18420:	cmp	r0, #0
   18424:	beq	184bc <argp_error@@Base+0x364>
   18428:	ldr	r0, [r9, #16]!
   1842c:	cmp	r0, #0
   18430:	bne	18418 <argp_error@@Base+0x2c0>
   18434:	ldr	r3, [sl, #8]
   18438:	ldr	r1, [r7, #8]
   1843c:	cmp	r3, #0
   18440:	str	r4, [r1]
   18444:	beq	18458 <argp_error@@Base+0x300>
   18448:	ldr	r3, [sl, #12]
   1844c:	tst	r3, #1
   18450:	moveq	r5, #1
   18454:	movne	r5, #2
   18458:	str	r5, [r1, #4]
   1845c:	ldr	ip, [fp, #-20]	; 0xffffffec
   18460:	mov	r3, #0
   18464:	cmp	ip, r3
   18468:	str	r3, [r1, #8]
   1846c:	ldr	r2, [sp, #24]
   18470:	ldr	r3, [r8, #48]	; 0x30
   18474:	ldreq	ip, [sl, #4]
   18478:	sub	r3, r2, r3
   1847c:	bic	ip, ip, #-16777216	; 0xff000000
   18480:	asr	r3, r3, #2
   18484:	add	lr, r1, #16
   18488:	rsb	r0, r3, r3, lsl #3
   1848c:	add	r0, r0, r0, lsl #6
   18490:	add	r0, r3, r0, lsl #3
   18494:	rsb	r0, r0, r0, lsl #15
   18498:	add	r3, r3, r0, lsl #3
   1849c:	add	r3, r3, #1
   184a0:	add	r3, ip, r3, lsl #24
   184a4:	str	r3, [r1, #12]
   184a8:	mov	r3, #0
   184ac:	str	lr, [r7, #8]
   184b0:	str	r3, [r1, #16]
   184b4:	add	fp, fp, #24
   184b8:	b	1833c <argp_error@@Base+0x1e4>
   184bc:	sub	r6, r9, r6
   184c0:	cmn	r6, #15
   184c4:	bge	184b4 <argp_error@@Base+0x35c>
   184c8:	b	18434 <argp_error@@Base+0x2dc>
   184cc:	ldr	r3, [fp, #-8]
   184d0:	cmp	r3, #0
   184d4:	bne	18358 <argp_error@@Base+0x200>
   184d8:	ldr	r3, [fp, #-4]
   184dc:	cmp	r3, #0
   184e0:	bne	18358 <argp_error@@Base+0x200>
   184e4:	ldr	r3, [sp, #12]
   184e8:	ldr	r8, [sp, #28]
   184ec:	ldr	r9, [sp, #24]
   184f0:	ldr	r3, [r3, #4]
   184f4:	b	1850c <argp_error@@Base+0x3b4>
   184f8:	ldr	r3, [r0, #4]
   184fc:	cmp	r3, #0
   18500:	moveq	r0, r9
   18504:	moveq	r9, r3
   18508:	beq	1857c <argp_error@@Base+0x424>
   1850c:	ldr	r2, [r7, #4]
   18510:	ldr	r1, [sp, #12]
   18514:	str	r3, [r9]
   18518:	cmp	r8, #0
   1851c:	stmib	r9, {r1, r2}
   18520:	ldr	r2, [sp, #16]
   18524:	mov	r3, #0
   18528:	str	r2, [r9, #16]
   1852c:	ldr	r2, [sp, #20]
   18530:	str	r3, [r9, #12]
   18534:	str	r2, [r9, #20]
   18538:	str	r3, [r9, #24]
   1853c:	str	r3, [r9, #32]
   18540:	str	r3, [r9, #28]
   18544:	beq	18578 <argp_error@@Base+0x420>
   18548:	ldr	r2, [r8]
   1854c:	cmp	r2, r3
   18550:	beq	185c4 <argp_error@@Base+0x46c>
   18554:	add	r3, r3, #1
   18558:	ldr	r2, [r8, r3, lsl #4]
   1855c:	cmp	r2, #0
   18560:	bne	18554 <argp_error@@Base+0x3fc>
   18564:	lsl	r3, r3, #2
   18568:	ldr	r2, [r7, #12]
   1856c:	add	r3, r2, r3
   18570:	str	r2, [r9, #28]
   18574:	str	r3, [r7, #12]
   18578:	add	r0, r9, #36	; 0x24
   1857c:	cmp	r8, #0
   18580:	beq	185bc <argp_error@@Base+0x464>
   18584:	ldr	r1, [r8]
   18588:	cmp	r1, #0
   1858c:	beq	185bc <argp_error@@Base+0x464>
   18590:	mov	r2, #0
   18594:	add	r4, r2, #1
   18598:	mov	r3, r0
   1859c:	str	r7, [sp]
   185a0:	mov	r0, r1
   185a4:	mov	r1, r9
   185a8:	bl	18304 <argp_error@@Base+0x1ac>
   185ac:	ldr	r1, [r8, r4, lsl #4]
   185b0:	mov	r2, r4
   185b4:	cmp	r1, #0
   185b8:	bne	18594 <argp_error@@Base+0x43c>
   185bc:	add	sp, sp, #36	; 0x24
   185c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185c4:	mov	r3, r2
   185c8:	b	18568 <argp_error@@Base+0x410>
   185cc:	cmp	r0, #86	; 0x56
   185d0:	beq	185dc <argp_error@@Base+0x484>
   185d4:	mov	r0, #7
   185d8:	bx	lr
   185dc:	ldr	r3, [pc, #104]	; 1864c <argp_error@@Base+0x4f4>
   185e0:	push	{r4, lr}
   185e4:	mov	r4, r2
   185e8:	ldr	r3, [r3]
   185ec:	cmp	r3, #0
   185f0:	beq	18614 <argp_error@@Base+0x4bc>
   185f4:	mov	r1, r2
   185f8:	ldr	r0, [r2, #48]	; 0x30
   185fc:	blx	r3
   18600:	ldr	r0, [r4, #16]
   18604:	ands	r0, r0, #32
   18608:	beq	18648 <argp_error@@Base+0x4f0>
   1860c:	mov	r0, #0
   18610:	pop	{r4, pc}
   18614:	ldr	r3, [pc, #52]	; 18650 <argp_error@@Base+0x4f8>
   18618:	ldr	r2, [r3]
   1861c:	cmp	r2, #0
   18620:	beq	18634 <argp_error@@Base+0x4dc>
   18624:	ldr	r1, [pc, #40]	; 18654 <argp_error@@Base+0x4fc>
   18628:	ldr	r0, [r4, #48]	; 0x30
   1862c:	bl	11400 <fprintf@plt>
   18630:	b	18600 <argp_error@@Base+0x4a8>
   18634:	ldr	r2, [pc, #28]	; 18658 <argp_error@@Base+0x500>
   18638:	ldr	r1, [pc, #28]	; 1865c <argp_error@@Base+0x504>
   1863c:	mov	r0, r4
   18640:	bl	18158 <argp_error@@Base>
   18644:	b	18600 <argp_error@@Base+0x4a8>
   18648:	bl	113d0 <exit@plt>
   1864c:	andeq	pc, r2, ip, lsl #10
   18650:	andeq	pc, r2, r0, asr #31
   18654:	andeq	lr, r1, r4, ror #13
   18658:	andeq	lr, r1, r8, asr r5
   1865c:	andeq	sp, r1, r0, lsl #25
   18660:	cmn	r0, #3
   18664:	push	{r4, r5, lr}
   18668:	mov	r4, r2
   1866c:	sub	sp, sp, #12
   18670:	beq	18754 <argp_error@@Base+0x5fc>
   18674:	ble	186e4 <argp_error@@Base+0x58c>
   18678:	cmn	r0, #2
   1867c:	beq	186a4 <argp_error@@Base+0x54c>
   18680:	cmp	r0, #63	; 0x3f
   18684:	bne	18748 <argp_error@@Base+0x5f0>
   18688:	mov	r0, r4
   1868c:	ldr	r2, [pc, #236]	; 18780 <argp_error@@Base+0x628>
   18690:	ldr	r1, [r4, #48]	; 0x30
   18694:	bl	180a8 <argp_state_help@@Base>
   18698:	mov	r0, #0
   1869c:	add	sp, sp, #12
   186a0:	pop	{r4, r5, pc}
   186a4:	ldr	r3, [pc, #216]	; 18784 <argp_error@@Base+0x62c>
   186a8:	mov	r0, r1
   186ac:	str	r1, [sp, #4]
   186b0:	str	r1, [r3]
   186b4:	bl	19d3c <argp_parse@@Base+0xed0>
   186b8:	ldr	r3, [r4, #16]
   186bc:	ldr	r2, [pc, #196]	; 18788 <argp_error@@Base+0x630>
   186c0:	and	r3, r3, #3
   186c4:	cmp	r3, #1
   186c8:	ldr	r1, [sp, #4]
   186cc:	str	r0, [r4, #40]	; 0x28
   186d0:	str	r0, [r2]
   186d4:	beq	18770 <argp_error@@Base+0x618>
   186d8:	mov	r0, #0
   186dc:	add	sp, sp, #12
   186e0:	pop	{r4, r5, pc}
   186e4:	cmn	r0, #4
   186e8:	bne	18748 <argp_error@@Base+0x5f0>
   186ec:	cmp	r1, #0
   186f0:	ldr	r0, [pc, #148]	; 1878c <argp_error@@Base+0x634>
   186f4:	mov	r2, #10
   186f8:	movne	r0, r1
   186fc:	mov	r1, #0
   18700:	bl	11214 <strtol@plt>
   18704:	ldr	r4, [pc, #132]	; 18790 <argp_error@@Base+0x638>
   18708:	str	r0, [r4]
   1870c:	ldr	r3, [r4]
   18710:	cmp	r3, #0
   18714:	sub	r3, r3, #1
   18718:	str	r3, [r4]
   1871c:	ble	186d8 <argp_error@@Base+0x580>
   18720:	mov	r5, #1
   18724:	mov	r0, r5
   18728:	bl	112bc <sleep@plt>
   1872c:	ldr	r3, [r4]
   18730:	cmp	r3, #0
   18734:	sub	r3, r3, #1
   18738:	str	r3, [r4]
   1873c:	bgt	18724 <argp_error@@Base+0x5cc>
   18740:	mov	r0, #0
   18744:	b	186dc <argp_error@@Base+0x584>
   18748:	mov	r0, #7
   1874c:	add	sp, sp, #12
   18750:	pop	{r4, r5, pc}
   18754:	mov	r0, r4
   18758:	ldr	r2, [pc, #52]	; 18794 <argp_error@@Base+0x63c>
   1875c:	ldr	r1, [r4, #48]	; 0x30
   18760:	bl	180a8 <argp_state_help@@Base>
   18764:	mov	r0, #0
   18768:	add	sp, sp, #12
   1876c:	pop	{r4, r5, pc}
   18770:	ldr	r3, [r4, #8]
   18774:	mov	r0, #0
   18778:	str	r1, [r3]
   1877c:	b	1869c <argp_error@@Base+0x544>
   18780:	andeq	r0, r0, sl, ror r2
   18784:	andeq	pc, r2, ip, asr #8
   18788:	andeq	pc, r2, r8, asr #8
   1878c:	andeq	lr, r1, ip, ror r5
   18790:	andeq	pc, r2, r8, lsl #10
   18794:	andeq	r0, r0, r1, lsl #4
   18798:	ldr	r3, [r0]
   1879c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187a0:	cmp	r3, #0
   187a4:	sub	sp, sp, #12
   187a8:	ldr	lr, [r0, #16]
   187ac:	beq	187e4 <argp_error@@Base+0x68c>
   187b0:	ldr	r0, [r1, #8]
   187b4:	mov	r2, #0
   187b8:	add	r0, r0, #1
   187bc:	str	r0, [r1, #8]
   187c0:	add	r3, r3, #24
   187c4:	ldr	r0, [r3, #-20]	; 0xffffffec
   187c8:	cmp	r0, #0
   187cc:	bne	187dc <argp_error@@Base+0x684>
   187d0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   187d4:	cmp	r0, #0
   187d8:	beq	18d9c <argp_error@@Base+0xc44>
   187dc:	add	r2, r2, #1
   187e0:	b	187c0 <argp_error@@Base+0x668>
   187e4:	ldr	r3, [r0, #4]
   187e8:	cmp	r3, #0
   187ec:	ldrne	r3, [r1, #8]
   187f0:	addne	r3, r3, #1
   187f4:	strne	r3, [r1, #8]
   187f8:	cmp	lr, #0
   187fc:	beq	18b88 <argp_error@@Base+0xa30>
   18800:	ldr	r0, [lr]
   18804:	cmp	r0, #0
   18808:	beq	18b88 <argp_error@@Base+0xa30>
   1880c:	mov	r6, r1
   18810:	str	lr, [sp]
   18814:	ldr	r2, [r0]
   18818:	ldr	r7, [r0, #16]
   1881c:	cmp	r2, #0
   18820:	beq	18858 <argp_error@@Base+0x700>
   18824:	ldr	r0, [r6, #8]
   18828:	mov	r1, #0
   1882c:	add	r0, r0, #1
   18830:	str	r0, [r6, #8]
   18834:	add	r2, r2, #24
   18838:	ldr	r0, [r2, #-20]	; 0xffffffec
   1883c:	cmp	r0, #0
   18840:	bne	18850 <argp_error@@Base+0x6f8>
   18844:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18848:	cmp	r0, #0
   1884c:	beq	18dcc <argp_error@@Base+0xc74>
   18850:	add	r1, r1, #1
   18854:	b	18834 <argp_error@@Base+0x6dc>
   18858:	ldr	r2, [r0, #4]
   1885c:	cmp	r2, #0
   18860:	ldrne	r2, [r6, #8]
   18864:	addne	r2, r2, #1
   18868:	strne	r2, [r6, #8]
   1886c:	cmp	r7, #0
   18870:	beq	18e2c <argp_error@@Base+0xcd4>
   18874:	ldr	r1, [r7]
   18878:	cmp	r1, #0
   1887c:	beq	18e2c <argp_error@@Base+0xcd4>
   18880:	str	r7, [sp, #4]
   18884:	ldr	r2, [r1]
   18888:	ldr	r8, [r1, #16]
   1888c:	cmp	r2, #0
   18890:	beq	188c8 <argp_error@@Base+0x770>
   18894:	ldr	r0, [r6, #8]
   18898:	mov	r1, #0
   1889c:	add	r0, r0, #1
   188a0:	str	r0, [r6, #8]
   188a4:	add	r2, r2, #24
   188a8:	ldr	r0, [r2, #-20]	; 0xffffffec
   188ac:	cmp	r0, #0
   188b0:	bne	188c0 <argp_error@@Base+0x768>
   188b4:	ldr	r0, [r2, #-24]	; 0xffffffe8
   188b8:	cmp	r0, #0
   188bc:	beq	18dfc <argp_error@@Base+0xca4>
   188c0:	add	r1, r1, #1
   188c4:	b	188a4 <argp_error@@Base+0x74c>
   188c8:	ldr	r2, [r1, #4]
   188cc:	cmp	r2, #0
   188d0:	ldrne	r2, [r6, #8]
   188d4:	addne	r2, r2, #1
   188d8:	strne	r2, [r6, #8]
   188dc:	cmp	r8, #0
   188e0:	beq	18e34 <argp_error@@Base+0xcdc>
   188e4:	ldr	r1, [r8]
   188e8:	cmp	r1, #0
   188ec:	beq	18e34 <argp_error@@Base+0xcdc>
   188f0:	ldr	r2, [r1]
   188f4:	ldr	r9, [r1, #16]
   188f8:	cmp	r2, #0
   188fc:	beq	18934 <argp_error@@Base+0x7dc>
   18900:	ldr	r0, [r6, #8]
   18904:	mov	r1, #0
   18908:	add	r0, r0, #1
   1890c:	str	r0, [r6, #8]
   18910:	add	r2, r2, #24
   18914:	ldr	r0, [r2, #-20]	; 0xffffffec
   18918:	cmp	r0, #0
   1891c:	bne	1892c <argp_error@@Base+0x7d4>
   18920:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18924:	cmp	r0, #0
   18928:	beq	18e3c <argp_error@@Base+0xce4>
   1892c:	add	r1, r1, #1
   18930:	b	18910 <argp_error@@Base+0x7b8>
   18934:	ldr	r2, [r1, #4]
   18938:	cmp	r2, #0
   1893c:	ldrne	r2, [r6, #8]
   18940:	addne	r2, r2, #1
   18944:	strne	r2, [r6, #8]
   18948:	cmp	r9, #0
   1894c:	beq	18b38 <argp_error@@Base+0x9e0>
   18950:	ldr	r1, [r9]
   18954:	cmp	r1, #0
   18958:	beq	18b38 <argp_error@@Base+0x9e0>
   1895c:	ldr	r2, [r1]
   18960:	ldr	sl, [r1, #16]
   18964:	cmp	r2, #0
   18968:	beq	189d0 <argp_error@@Base+0x878>
   1896c:	ldr	r0, [r6, #8]
   18970:	mov	r1, #0
   18974:	add	r0, r0, #1
   18978:	str	r0, [r6, #8]
   1897c:	b	18984 <argp_error@@Base+0x82c>
   18980:	add	r1, r1, #1
   18984:	add	r2, r2, #24
   18988:	ldr	r0, [r2, #-20]	; 0xffffffec
   1898c:	cmp	r0, #0
   18990:	bne	18980 <argp_error@@Base+0x828>
   18994:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18998:	cmp	r0, #0
   1899c:	bne	18980 <argp_error@@Base+0x828>
   189a0:	ldr	r0, [r2, #-8]
   189a4:	cmp	r0, #0
   189a8:	bne	18980 <argp_error@@Base+0x828>
   189ac:	ldr	r0, [r2, #-4]
   189b0:	cmp	r0, #0
   189b4:	bne	18980 <argp_error@@Base+0x828>
   189b8:	ldm	r6, {r0, r2}
   189bc:	add	ip, r1, r1, lsl #1
   189c0:	add	r0, r0, ip
   189c4:	add	r1, r2, r1
   189c8:	stm	r6, {r0, r1}
   189cc:	b	189e4 <argp_error@@Base+0x88c>
   189d0:	ldr	r2, [r1, #4]
   189d4:	cmp	r2, #0
   189d8:	ldrne	r2, [r6, #8]
   189dc:	addne	r2, r2, #1
   189e0:	strne	r2, [r6, #8]
   189e4:	cmp	sl, #0
   189e8:	beq	18d94 <argp_error@@Base+0xc3c>
   189ec:	ldr	r1, [sl]
   189f0:	cmp	r1, #0
   189f4:	beq	18d94 <argp_error@@Base+0xc3c>
   189f8:	ldr	r2, [r1]
   189fc:	ldr	fp, [r1, #16]
   18a00:	cmp	r2, #0
   18a04:	beq	18d6c <argp_error@@Base+0xc14>
   18a08:	ldr	r0, [r6, #8]
   18a0c:	mov	r1, #0
   18a10:	add	r0, r0, #1
   18a14:	str	r0, [r6, #8]
   18a18:	b	18a20 <argp_error@@Base+0x8c8>
   18a1c:	add	r1, r1, #1
   18a20:	add	r2, r2, #24
   18a24:	ldr	r0, [r2, #-20]	; 0xffffffec
   18a28:	cmp	r0, #0
   18a2c:	bne	18a1c <argp_error@@Base+0x8c4>
   18a30:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18a34:	cmp	r0, #0
   18a38:	bne	18a1c <argp_error@@Base+0x8c4>
   18a3c:	ldr	r0, [r2, #-8]
   18a40:	cmp	r0, #0
   18a44:	bne	18a1c <argp_error@@Base+0x8c4>
   18a48:	ldr	r0, [r2, #-4]
   18a4c:	cmp	r0, #0
   18a50:	bne	18a1c <argp_error@@Base+0x8c4>
   18a54:	ldm	r6, {r0, r2}
   18a58:	add	ip, r1, r1, lsl #1
   18a5c:	add	r0, r0, ip
   18a60:	add	r1, r2, r1
   18a64:	stm	r6, {r0, r1}
   18a68:	cmp	fp, #0
   18a6c:	beq	18d8c <argp_error@@Base+0xc34>
   18a70:	ldr	r0, [fp]
   18a74:	cmp	r0, #0
   18a78:	beq	18d8c <argp_error@@Base+0xc34>
   18a7c:	ldr	r2, [r0]
   18a80:	ldr	r5, [r0, #16]
   18a84:	cmp	r2, #0
   18a88:	beq	18b90 <argp_error@@Base+0xa38>
   18a8c:	ldr	r0, [r6, #8]
   18a90:	mov	r1, #0
   18a94:	add	r0, r0, #1
   18a98:	str	r0, [r6, #8]
   18a9c:	b	18aa4 <argp_error@@Base+0x94c>
   18aa0:	add	r1, r1, #1
   18aa4:	add	r2, r2, #24
   18aa8:	ldr	r0, [r2, #-20]	; 0xffffffec
   18aac:	cmp	r0, #0
   18ab0:	bne	18aa0 <argp_error@@Base+0x948>
   18ab4:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18ab8:	cmp	r0, #0
   18abc:	bne	18aa0 <argp_error@@Base+0x948>
   18ac0:	ldr	r0, [r2, #-8]
   18ac4:	cmp	r0, #0
   18ac8:	bne	18aa0 <argp_error@@Base+0x948>
   18acc:	ldr	r0, [r2, #-4]
   18ad0:	cmp	r0, #0
   18ad4:	bne	18aa0 <argp_error@@Base+0x948>
   18ad8:	ldm	r6, {r0, r2}
   18adc:	add	ip, r1, r1, lsl #1
   18ae0:	cmp	r5, #0
   18ae4:	add	r0, r0, ip
   18ae8:	add	r1, r2, r1
   18aec:	stm	r6, {r0, r1}
   18af0:	bne	18bac <argp_error@@Base+0xa54>
   18af4:	ldr	r1, [r6, #12]
   18af8:	ldr	r0, [fp, #16]!
   18afc:	add	r2, r1, #1
   18b00:	cmp	r0, #0
   18b04:	str	r2, [r6, #12]
   18b08:	bne	18a7c <argp_error@@Base+0x924>
   18b0c:	ldr	r1, [sl, #16]!
   18b10:	add	r2, r2, #1
   18b14:	cmp	r1, #0
   18b18:	str	r2, [r6, #12]
   18b1c:	bne	189f8 <argp_error@@Base+0x8a0>
   18b20:	ldr	r1, [r9, #16]!
   18b24:	add	r2, r2, #1
   18b28:	cmp	r1, #0
   18b2c:	str	r2, [r6, #12]
   18b30:	bne	1895c <argp_error@@Base+0x804>
   18b34:	b	18b3c <argp_error@@Base+0x9e4>
   18b38:	ldr	r2, [r6, #12]
   18b3c:	ldr	r1, [r8, #16]!
   18b40:	add	r2, r2, #1
   18b44:	cmp	r1, #0
   18b48:	str	r2, [r6, #12]
   18b4c:	bne	188f0 <argp_error@@Base+0x798>
   18b50:	ldr	r3, [sp, #4]
   18b54:	add	r2, r2, #1
   18b58:	ldr	r1, [r3, #16]!
   18b5c:	str	r2, [r6, #12]
   18b60:	cmp	r1, #0
   18b64:	str	r3, [sp, #4]
   18b68:	bne	18884 <argp_error@@Base+0x72c>
   18b6c:	ldr	r3, [sp]
   18b70:	add	r2, r2, #1
   18b74:	ldr	r0, [r3, #16]!
   18b78:	str	r2, [r6, #12]
   18b7c:	cmp	r0, #0
   18b80:	str	r3, [sp]
   18b84:	bne	18814 <argp_error@@Base+0x6bc>
   18b88:	add	sp, sp, #12
   18b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b90:	ldr	r2, [r0, #4]
   18b94:	cmp	r2, #0
   18b98:	ldrne	r2, [r6, #8]
   18b9c:	addne	r2, r2, #1
   18ba0:	strne	r2, [r6, #8]
   18ba4:	cmp	r5, #0
   18ba8:	beq	18af4 <argp_error@@Base+0x99c>
   18bac:	ldr	r0, [r5]
   18bb0:	cmp	r0, #0
   18bb4:	beq	18af4 <argp_error@@Base+0x99c>
   18bb8:	ldr	r2, [r0]
   18bbc:	ldr	r4, [r0, #16]
   18bc0:	cmp	r2, #0
   18bc4:	beq	18d24 <argp_error@@Base+0xbcc>
   18bc8:	ldr	r0, [r6, #8]
   18bcc:	mov	r1, #0
   18bd0:	add	r0, r0, #1
   18bd4:	str	r0, [r6, #8]
   18bd8:	b	18be0 <argp_error@@Base+0xa88>
   18bdc:	add	r1, r1, #1
   18be0:	add	r2, r2, #24
   18be4:	ldr	r0, [r2, #-20]	; 0xffffffec
   18be8:	cmp	r0, #0
   18bec:	bne	18bdc <argp_error@@Base+0xa84>
   18bf0:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18bf4:	cmp	r0, #0
   18bf8:	bne	18bdc <argp_error@@Base+0xa84>
   18bfc:	ldr	r0, [r2, #-8]
   18c00:	cmp	r0, #0
   18c04:	bne	18bdc <argp_error@@Base+0xa84>
   18c08:	ldr	r0, [r2, #-4]
   18c0c:	cmp	r0, #0
   18c10:	bne	18bdc <argp_error@@Base+0xa84>
   18c14:	ldm	r6, {r0, r2}
   18c18:	add	ip, r1, r1, lsl #1
   18c1c:	add	r0, r0, ip
   18c20:	add	r1, r2, r1
   18c24:	stm	r6, {r0, r1}
   18c28:	cmp	r4, #0
   18c2c:	beq	18d44 <argp_error@@Base+0xbec>
   18c30:	ldr	r0, [r4]
   18c34:	cmp	r0, #0
   18c38:	beq	18d44 <argp_error@@Base+0xbec>
   18c3c:	ldr	r1, [r0]
   18c40:	ldr	r2, [r0, #16]
   18c44:	cmp	r1, #0
   18c48:	beq	18d54 <argp_error@@Base+0xbfc>
   18c4c:	ldr	ip, [r6, #8]
   18c50:	mov	r0, #0
   18c54:	add	ip, ip, #1
   18c58:	str	ip, [r6, #8]
   18c5c:	b	18c64 <argp_error@@Base+0xb0c>
   18c60:	add	r0, r0, #1
   18c64:	add	r1, r1, #24
   18c68:	ldr	ip, [r1, #-20]	; 0xffffffec
   18c6c:	cmp	ip, #0
   18c70:	bne	18c60 <argp_error@@Base+0xb08>
   18c74:	ldr	ip, [r1, #-24]	; 0xffffffe8
   18c78:	cmp	ip, #0
   18c7c:	bne	18c60 <argp_error@@Base+0xb08>
   18c80:	ldr	ip, [r1, #-8]
   18c84:	cmp	ip, #0
   18c88:	bne	18c60 <argp_error@@Base+0xb08>
   18c8c:	ldr	ip, [r1, #-4]
   18c90:	cmp	ip, #0
   18c94:	bne	18c60 <argp_error@@Base+0xb08>
   18c98:	ldr	ip, [r6]
   18c9c:	ldr	r1, [r6, #4]
   18ca0:	add	lr, r0, r0, lsl #1
   18ca4:	add	ip, ip, lr
   18ca8:	add	r0, r1, r0
   18cac:	str	ip, [r6]
   18cb0:	str	r0, [r6, #4]
   18cb4:	cmp	r2, #0
   18cb8:	beq	18d4c <argp_error@@Base+0xbf4>
   18cbc:	ldr	r0, [r2]
   18cc0:	cmp	r0, #0
   18cc4:	beq	18d4c <argp_error@@Base+0xbf4>
   18cc8:	mov	r7, r2
   18ccc:	mov	r1, r6
   18cd0:	bl	18798 <argp_error@@Base+0x640>
   18cd4:	ldr	r1, [r6, #12]
   18cd8:	ldr	r0, [r7, #16]!
   18cdc:	add	r1, r1, #1
   18ce0:	cmp	r0, #0
   18ce4:	str	r1, [r6, #12]
   18ce8:	bne	18ccc <argp_error@@Base+0xb74>
   18cec:	ldr	r0, [r4, #16]!
   18cf0:	add	r1, r1, #1
   18cf4:	cmp	r0, #0
   18cf8:	str	r1, [r6, #12]
   18cfc:	bne	18c3c <argp_error@@Base+0xae4>
   18d00:	ldr	r0, [r5, #16]!
   18d04:	add	r1, r1, #1
   18d08:	cmp	r0, #0
   18d0c:	str	r1, [r6, #12]
   18d10:	beq	18af8 <argp_error@@Base+0x9a0>
   18d14:	ldr	r2, [r0]
   18d18:	ldr	r4, [r0, #16]
   18d1c:	cmp	r2, #0
   18d20:	bne	18bc8 <argp_error@@Base+0xa70>
   18d24:	ldr	r2, [r0, #4]
   18d28:	cmp	r2, #0
   18d2c:	beq	18c28 <argp_error@@Base+0xad0>
   18d30:	ldr	r2, [r6, #8]
   18d34:	cmp	r4, #0
   18d38:	add	r2, r2, #1
   18d3c:	str	r2, [r6, #8]
   18d40:	bne	18c30 <argp_error@@Base+0xad8>
   18d44:	ldr	r1, [r6, #12]
   18d48:	b	18d00 <argp_error@@Base+0xba8>
   18d4c:	ldr	r1, [r6, #12]
   18d50:	b	18cec <argp_error@@Base+0xb94>
   18d54:	ldr	r1, [r0, #4]
   18d58:	cmp	r1, #0
   18d5c:	ldrne	r1, [r6, #8]
   18d60:	addne	r1, r1, #1
   18d64:	strne	r1, [r6, #8]
   18d68:	b	18cb4 <argp_error@@Base+0xb5c>
   18d6c:	ldr	r2, [r1, #4]
   18d70:	cmp	r2, #0
   18d74:	beq	18a68 <argp_error@@Base+0x910>
   18d78:	ldr	r2, [r6, #8]
   18d7c:	cmp	fp, #0
   18d80:	add	r2, r2, #1
   18d84:	str	r2, [r6, #8]
   18d88:	bne	18a70 <argp_error@@Base+0x918>
   18d8c:	ldr	r2, [r6, #12]
   18d90:	b	18b0c <argp_error@@Base+0x9b4>
   18d94:	ldr	r2, [r6, #12]
   18d98:	b	18b20 <argp_error@@Base+0x9c8>
   18d9c:	ldr	r0, [r3, #-8]
   18da0:	cmp	r0, #0
   18da4:	bne	187dc <argp_error@@Base+0x684>
   18da8:	ldr	r0, [r3, #-4]
   18dac:	cmp	r0, #0
   18db0:	bne	187dc <argp_error@@Base+0x684>
   18db4:	ldm	r1, {r0, r3}
   18db8:	add	ip, r2, r2, lsl #1
   18dbc:	add	r0, r0, ip
   18dc0:	add	r2, r3, r2
   18dc4:	stm	r1, {r0, r2}
   18dc8:	b	187f8 <argp_error@@Base+0x6a0>
   18dcc:	ldr	r0, [r2, #-8]
   18dd0:	cmp	r0, #0
   18dd4:	bne	18850 <argp_error@@Base+0x6f8>
   18dd8:	ldr	r0, [r2, #-4]
   18ddc:	cmp	r0, #0
   18de0:	bne	18850 <argp_error@@Base+0x6f8>
   18de4:	ldm	r6, {r0, r2}
   18de8:	add	ip, r1, r1, lsl #1
   18dec:	add	r0, r0, ip
   18df0:	add	r1, r2, r1
   18df4:	stm	r6, {r0, r1}
   18df8:	b	1886c <argp_error@@Base+0x714>
   18dfc:	ldr	r0, [r2, #-8]
   18e00:	cmp	r0, #0
   18e04:	bne	188c0 <argp_error@@Base+0x768>
   18e08:	ldr	r0, [r2, #-4]
   18e0c:	cmp	r0, #0
   18e10:	bne	188c0 <argp_error@@Base+0x768>
   18e14:	ldm	r6, {r0, r2}
   18e18:	add	ip, r1, r1, lsl #1
   18e1c:	add	r0, r0, ip
   18e20:	add	r1, r2, r1
   18e24:	stm	r6, {r0, r1}
   18e28:	b	188dc <argp_error@@Base+0x784>
   18e2c:	ldr	r2, [r6, #12]
   18e30:	b	18b6c <argp_error@@Base+0xa14>
   18e34:	ldr	r2, [r6, #12]
   18e38:	b	18b50 <argp_error@@Base+0x9f8>
   18e3c:	ldr	r0, [r2, #-8]
   18e40:	cmp	r0, #0
   18e44:	bne	1892c <argp_error@@Base+0x7d4>
   18e48:	ldr	r0, [r2, #-4]
   18e4c:	cmp	r0, #0
   18e50:	bne	1892c <argp_error@@Base+0x7d4>
   18e54:	ldm	r6, {r0, r2}
   18e58:	add	ip, r1, r1, lsl #1
   18e5c:	add	r0, r0, ip
   18e60:	add	r1, r2, r1
   18e64:	stm	r6, {r0, r1}
   18e68:	b	18948 <argp_error@@Base+0x7f0>

00018e6c <argp_parse@@Base>:
   18e6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e70:	add	fp, sp, #32
   18e74:	tst	r3, #1
   18e78:	sub	sp, sp, #220	; 0xdc
   18e7c:	mov	r7, r3
   18e80:	mov	r8, r0
   18e84:	str	r1, [fp, #-240]	; 0xffffff10
   18e88:	str	r2, [fp, #-236]	; 0xffffff14
   18e8c:	bne	18eb8 <argp_parse@@Base+0x4c>
   18e90:	ldr	r3, [pc, #3488]	; 19c38 <argp_parse@@Base+0xdcc>
   18e94:	ldr	r4, [pc, #3488]	; 19c3c <argp_parse@@Base+0xdd0>
   18e98:	ldr	r2, [r3]
   18e9c:	cmp	r2, #0
   18ea0:	ldreq	r2, [fp, #-236]	; 0xffffff14
   18ea4:	ldreq	r2, [r2]
   18ea8:	streq	r2, [r3]
   18eac:	ldr	r3, [r4]
   18eb0:	cmp	r3, #0
   18eb4:	beq	19598 <argp_parse@@Base+0x72c>
   18eb8:	ands	r3, r7, #16
   18ebc:	beq	1947c <argp_parse@@Base+0x610>
   18ec0:	sub	r5, fp, #196	; 0xc4
   18ec4:	mov	r0, r5
   18ec8:	mov	r2, #36	; 0x24
   18ecc:	mov	r1, #0
   18ed0:	bl	1143c <memset@plt>
   18ed4:	ands	r3, r7, #4
   18ed8:	str	r3, [fp, #-244]	; 0xffffff0c
   18edc:	mov	r3, #0
   18ee0:	moveq	r0, #1
   18ee4:	movne	r0, #0
   18ee8:	cmp	r8, r3
   18eec:	str	r3, [fp, #-224]	; 0xffffff20
   18ef0:	str	r3, [fp, #-220]	; 0xffffff24
   18ef4:	str	r3, [fp, #-216]	; 0xffffff28
   18ef8:	str	r0, [fp, #-228]	; 0xffffff1c
   18efc:	beq	18f70 <argp_parse@@Base+0x104>
   18f00:	ldr	r4, [r8, #16]
   18f04:	ldr	r3, [r8]
   18f08:	cmp	r3, #0
   18f0c:	movne	r2, #1
   18f10:	strne	r2, [fp, #-220]	; 0xffffff24
   18f14:	movne	r2, #0
   18f18:	bne	18f24 <argp_parse@@Base+0xb8>
   18f1c:	b	19a64 <argp_parse@@Base+0xbf8>
   18f20:	add	r2, r2, #1
   18f24:	add	r3, r3, #24
   18f28:	ldr	r1, [r3, #-20]	; 0xffffffec
   18f2c:	cmp	r1, #0
   18f30:	bne	18f20 <argp_parse@@Base+0xb4>
   18f34:	ldr	r1, [r3, #-24]	; 0xffffffe8
   18f38:	cmp	r1, #0
   18f3c:	bne	18f20 <argp_parse@@Base+0xb4>
   18f40:	ldr	r1, [r3, #-8]
   18f44:	cmp	r1, #0
   18f48:	bne	18f20 <argp_parse@@Base+0xb4>
   18f4c:	ldr	r1, [r3, #-4]
   18f50:	cmp	r1, #0
   18f54:	bne	18f20 <argp_parse@@Base+0xb4>
   18f58:	add	r3, r2, r2, lsl #1
   18f5c:	add	r0, r3, r0
   18f60:	str	r2, [fp, #-224]	; 0xffffff20
   18f64:	str	r0, [fp, #-228]	; 0xffffff1c
   18f68:	mov	r6, #72	; 0x48
   18f6c:	b	19a7c <argp_parse@@Base+0xc10>
   18f70:	mov	sl, #36	; 0x24
   18f74:	mov	r6, sl
   18f78:	mov	r4, r8
   18f7c:	mov	r3, #52	; 0x34
   18f80:	str	r3, [fp, #-232]	; 0xffffff18
   18f84:	add	r0, r3, r0
   18f88:	add	r0, r0, #1
   18f8c:	bl	1b3fc <argp_parse@@Base+0x2590>
   18f90:	cmp	r0, #0
   18f94:	mov	r9, r0
   18f98:	str	r0, [fp, #-40]	; 0xffffffd8
   18f9c:	moveq	r5, #12
   18fa0:	beq	1939c <argp_parse@@Base+0x530>
   18fa4:	mov	lr, r5
   18fa8:	mov	r3, #1
   18fac:	str	r3, [fp, #-196]	; 0xffffff3c
   18fb0:	str	r3, [fp, #-192]	; 0xffffff40
   18fb4:	ldm	lr!, {r0, r1, r2, r3}
   18fb8:	sub	ip, fp, #148	; 0x94
   18fbc:	add	r5, r9, sl
   18fc0:	ldr	sl, [fp, #-232]	; 0xffffff18
   18fc4:	stmia	ip!, {r0, r1, r2, r3}
   18fc8:	add	r6, r9, r6
   18fcc:	ldm	lr!, {r0, r1, r2, r3}
   18fd0:	add	sl, r9, sl
   18fd4:	str	r6, [fp, #-104]	; 0xffffff98
   18fd8:	str	r5, [fp, #-152]	; 0xffffff68
   18fdc:	ldr	lr, [lr]
   18fe0:	stmia	ip!, {r0, r1, r2, r3}
   18fe4:	mov	r2, r4
   18fe8:	mov	r0, r6
   18fec:	mov	r1, #0
   18ff0:	str	r9, [fp, #-112]	; 0xffffff90
   18ff4:	str	lr, [ip]
   18ff8:	str	sl, [fp, #-156]	; 0xffffff64
   18ffc:	sub	r4, fp, #160	; 0xa0
   19000:	bl	1143c <memset@plt>
   19004:	tst	r7, #8
   19008:	str	r5, [fp, #-204]	; 0xffffff34
   1900c:	str	sl, [fp, #-208]	; 0xffffff30
   19010:	str	r6, [fp, #-200]	; 0xffffff38
   19014:	str	r4, [fp, #-212]	; 0xffffff2c
   19018:	beq	19530 <argp_parse@@Base+0x6c4>
   1901c:	ldr	r2, [fp, #-232]	; 0xffffff18
   19020:	add	sl, sl, #1
   19024:	mov	r3, #45	; 0x2d
   19028:	str	sl, [fp, #-208]	; 0xffffff30
   1902c:	strb	r3, [r9, r2]
   19030:	mov	r2, #0
   19034:	strb	r2, [sl]
   19038:	ldr	r3, [fp, #-204]	; 0xffffff34
   1903c:	cmp	r8, r2
   19040:	str	r2, [r3]
   19044:	str	r8, [fp, #-160]	; 0xffffff60
   19048:	beq	19560 <argp_parse@@Base+0x6f4>
   1904c:	sub	r1, fp, #212	; 0xd4
   19050:	mov	r0, r8
   19054:	str	r1, [sp]
   19058:	ldr	r3, [fp, #-112]	; 0xffffff90
   1905c:	mov	r1, r2
   19060:	bl	18304 <argp_error@@Base+0x1ac>
   19064:	ldr	r8, [fp, #-160]	; 0xffffff60
   19068:	ldr	r5, [fp, #-112]	; 0xffffff90
   1906c:	mov	r6, r0
   19070:	str	r0, [fp, #-108]	; 0xffffff94
   19074:	mov	r2, #56	; 0x38
   19078:	mov	r1, #0
   1907c:	sub	r0, fp, #96	; 0x60
   19080:	bl	1143c <memset@plt>
   19084:	ldr	r2, [pc, #2996]	; 19c40 <argp_parse@@Base+0xdd4>
   19088:	ldr	r3, [pc, #2996]	; 19c44 <argp_parse@@Base+0xdd8>
   1908c:	ldr	r0, [fp, #-240]	; 0xffffff10
   19090:	ldr	r1, [r2]
   19094:	str	r0, [fp, #-92]	; 0xffffffa4
   19098:	ldr	r2, [r3]
   1909c:	ldr	r0, [fp, #-236]	; 0xffffff14
   190a0:	mov	r3, #1
   190a4:	cmp	r5, r6
   190a8:	str	r8, [fp, #-96]	; 0xffffffa0
   190ac:	str	r0, [fp, #-88]	; 0xffffffa8
   190b0:	str	r7, [fp, #-80]	; 0xffffffb0
   190b4:	str	r4, [fp, #-44]	; 0xffffffd4
   190b8:	str	r1, [fp, #-52]	; 0xffffffcc
   190bc:	str	r2, [fp, #-48]	; 0xffffffd0
   190c0:	str	r3, [fp, #-100]	; 0xffffff9c
   190c4:	bcc	193a8 <argp_parse@@Base+0x53c>
   190c8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   190cc:	tst	r3, #2
   190d0:	bne	19570 <argp_parse@@Base+0x704>
   190d4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   190d8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   190dc:	mov	r2, #1
   190e0:	str	r2, [fp, #-144]	; 0xffffff70
   190e4:	ldr	r2, [fp, #-236]	; 0xffffff14
   190e8:	cmp	r2, r3
   190ec:	beq	19b10 <argp_parse@@Base+0xca4>
   190f0:	ldr	r3, [pc, #2884]	; 19c3c <argp_parse@@Base+0xdd0>
   190f4:	ldr	r3, [r3]
   190f8:	str	r3, [fp, #-56]	; 0xffffffc8
   190fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19100:	ldr	r5, [fp, #-84]	; 0xffffffac
   19104:	ldr	sl, [pc, #2876]	; 19c48 <argp_parse@@Base+0xddc>
   19108:	mov	r0, r4
   1910c:	mov	r6, #0
   19110:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19114:	cmp	r3, #0
   19118:	beq	195ac <argp_parse@@Base+0x740>
   1911c:	cmp	r3, r5
   19120:	strgt	r6, [fp, #-72]	; 0xffffffb8
   19124:	bgt	195ac <argp_parse@@Base+0x740>
   19128:	cmp	r5, r0
   1912c:	blt	19948 <argp_parse@@Base+0xadc>
   19130:	cmp	r5, r0
   19134:	bne	19954 <argp_parse@@Base+0xae8>
   19138:	ldr	r6, [fp, #-112]	; 0xffffff90
   1913c:	ldr	ip, [fp, #-108]	; 0xffffff94
   19140:	cmp	r6, ip
   19144:	bcs	19bd8 <argp_parse@@Base+0xd6c>
   19148:	mov	r5, #0
   1914c:	add	r6, r6, #36	; 0x24
   19150:	mov	r8, r5
   19154:	ldr	r7, [pc, #2800]	; 19c4c <argp_parse@@Base+0xde0>
   19158:	mov	r0, r5
   1915c:	b	191a4 <argp_parse@@Base+0x338>
   19160:	ldr	ip, [r6, #-4]
   19164:	str	ip, [fp, #-60]	; 0xffffffc4
   19168:	ldr	ip, [r6, #-12]
   1916c:	str	ip, [fp, #-68]	; 0xffffffbc
   19170:	ldr	ip, [r6, #-8]
   19174:	str	r3, [fp, #-76]	; 0xffffffb4
   19178:	str	ip, [fp, #-64]	; 0xffffffc0
   1917c:	blx	r4
   19180:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19184:	str	r3, [r6, #-4]
   19188:	ldr	ip, [fp, #-108]	; 0xffffff94
   1918c:	cmp	ip, r6
   19190:	bls	19b80 <argp_parse@@Base+0xd14>
   19194:	cmp	r0, #7
   19198:	cmpne	r0, #0
   1919c:	bne	19b40 <argp_parse@@Base+0xcd4>
   191a0:	add	r6, r6, #36	; 0x24
   191a4:	ldr	r3, [r6, #-24]	; 0xffffffe8
   191a8:	cmp	r3, #0
   191ac:	bne	1918c <argp_parse@@Base+0x320>
   191b0:	ldr	r4, [r6, #-36]	; 0xffffffdc
   191b4:	sub	r2, fp, #96	; 0x60
   191b8:	cmp	r4, #0
   191bc:	mov	r1, r8
   191c0:	mov	r0, r7
   191c4:	bne	19160 <argp_parse@@Base+0x2f4>
   191c8:	cmp	ip, r6
   191cc:	mov	r0, #7
   191d0:	bhi	191a0 <argp_parse@@Base+0x334>
   191d4:	ldr	r6, [fp, #-112]	; 0xffffff90
   191d8:	sub	r4, ip, #36	; 0x24
   191dc:	cmp	r6, r4
   191e0:	movls	r5, #7
   191e4:	bhi	1926c <argp_parse@@Base+0x400>
   191e8:	cmp	r5, #7
   191ec:	cmpne	r5, #0
   191f0:	bne	19b54 <argp_parse@@Base+0xce8>
   191f4:	sub	r4, r4, #36	; 0x24
   191f8:	mov	r8, #0
   191fc:	ldr	r7, [pc, #2636]	; 19c50 <argp_parse@@Base+0xde4>
   19200:	b	1924c <argp_parse@@Base+0x3e0>
   19204:	ldr	ip, [r4, #68]	; 0x44
   19208:	ldr	lr, [r4, #48]	; 0x30
   1920c:	str	ip, [fp, #-60]	; 0xffffffc4
   19210:	ldr	ip, [r4, #60]	; 0x3c
   19214:	str	ip, [fp, #-68]	; 0xffffffbc
   19218:	ldr	ip, [r4, #64]	; 0x40
   1921c:	str	lr, [fp, #-76]	; 0xffffffb4
   19220:	str	ip, [fp, #-64]	; 0xffffffc0
   19224:	blx	r3
   19228:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1922c:	str	r3, [r4, #68]	; 0x44
   19230:	ldr	r6, [fp, #-112]	; 0xffffff90
   19234:	cmp	r6, r4
   19238:	bhi	19bd0 <argp_parse@@Base+0xd64>
   1923c:	cmp	r0, #7
   19240:	cmpne	r0, #0
   19244:	bne	19b64 <argp_parse@@Base+0xcf8>
   19248:	sub	r4, r4, #36	; 0x24
   1924c:	ldr	r3, [r4, #36]	; 0x24
   19250:	sub	r2, fp, #96	; 0x60
   19254:	cmp	r3, #0
   19258:	mov	r1, r8
   1925c:	mov	r0, r7
   19260:	bne	19204 <argp_parse@@Base+0x398>
   19264:	cmp	r6, r4
   19268:	bls	19248 <argp_parse@@Base+0x3dc>
   1926c:	ldr	r3, [fp, #4]
   19270:	cmp	r3, #0
   19274:	beq	19290 <argp_parse@@Base+0x424>
   19278:	mov	r5, #0
   1927c:	ldr	r2, [fp, #4]
   19280:	ldr	r3, [fp, #-84]	; 0xffffffac
   19284:	str	r3, [r2]
   19288:	cmp	r5, #0
   1928c:	bne	19b74 <argp_parse@@Base+0xd08>
   19290:	ldr	ip, [fp, #-108]	; 0xffffff94
   19294:	b	1996c <argp_parse@@Base+0xb00>
   19298:	ldr	r6, [fp, #-112]	; 0xffffff90
   1929c:	mov	r5, r0
   192a0:	ldr	ip, [fp, #-108]	; 0xffffff94
   192a4:	cmp	r6, ip
   192a8:	mov	r4, ip
   192ac:	subcs	r4, ip, #36	; 0x24
   192b0:	bcs	19320 <argp_parse@@Base+0x4b4>
   192b4:	ldr	r8, [pc, #2456]	; 19c54 <argp_parse@@Base+0xde8>
   192b8:	add	r6, r6, #36	; 0x24
   192bc:	mov	r9, #0
   192c0:	ldr	r3, [r6, #-36]	; 0xffffffdc
   192c4:	sub	r2, fp, #96	; 0x60
   192c8:	cmp	r3, #0
   192cc:	mov	r1, r9
   192d0:	mov	r0, r8
   192d4:	mov	r7, r6
   192d8:	beq	1930c <argp_parse@@Base+0x4a0>
   192dc:	ldr	ip, [r6, #-4]
   192e0:	ldr	lr, [r6, #-24]	; 0xffffffe8
   192e4:	str	ip, [fp, #-60]	; 0xffffffc4
   192e8:	ldr	ip, [r6, #-12]
   192ec:	str	ip, [fp, #-68]	; 0xffffffbc
   192f0:	ldr	ip, [r6, #-8]
   192f4:	str	lr, [fp, #-76]	; 0xffffffb4
   192f8:	str	ip, [fp, #-64]	; 0xffffffc0
   192fc:	blx	r3
   19300:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19304:	str	r3, [r6, #-4]
   19308:	ldr	r4, [fp, #-108]	; 0xffffff94
   1930c:	cmp	r7, r4
   19310:	add	r6, r6, #36	; 0x24
   19314:	bcc	192c0 <argp_parse@@Base+0x454>
   19318:	ldr	r6, [fp, #-112]	; 0xffffff90
   1931c:	sub	r4, r4, #36	; 0x24
   19320:	cmp	r6, r4
   19324:	bhi	1938c <argp_parse@@Base+0x520>
   19328:	ldr	r8, [pc, #2344]	; 19c58 <argp_parse@@Base+0xdec>
   1932c:	sub	r4, r4, #36	; 0x24
   19330:	mov	r9, #0
   19334:	ldr	r3, [r4, #36]	; 0x24
   19338:	sub	r2, fp, #96	; 0x60
   1933c:	cmp	r3, #0
   19340:	mov	r1, r9
   19344:	mov	r0, r8
   19348:	mov	r7, r4
   1934c:	beq	19380 <argp_parse@@Base+0x514>
   19350:	ldr	ip, [r4, #68]	; 0x44
   19354:	ldr	lr, [r4, #48]	; 0x30
   19358:	str	ip, [fp, #-60]	; 0xffffffc4
   1935c:	ldr	ip, [r4, #60]	; 0x3c
   19360:	str	ip, [fp, #-68]	; 0xffffffbc
   19364:	ldr	ip, [r4, #64]	; 0x40
   19368:	str	lr, [fp, #-76]	; 0xffffffb4
   1936c:	str	ip, [fp, #-64]	; 0xffffffc0
   19370:	blx	r3
   19374:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19378:	str	r3, [r4, #68]	; 0x44
   1937c:	ldr	r6, [fp, #-112]	; 0xffffff90
   19380:	cmp	r6, r7
   19384:	sub	r4, r4, #36	; 0x24
   19388:	bls	19334 <argp_parse@@Base+0x4c8>
   1938c:	cmp	r5, #7
   19390:	moveq	r5, #22
   19394:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19398:	bl	19de8 <argp_parse@@Base+0xf7c>
   1939c:	mov	r0, r5
   193a0:	sub	sp, fp, #32
   193a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193a8:	ldr	r3, [fp, #8]
   193ac:	add	r4, r5, #36	; 0x24
   193b0:	str	r3, [r5, #24]
   193b4:	mov	r7, #0
   193b8:	ldr	r6, [pc, #2204]	; 19c5c <argp_parse@@Base+0xdf0>
   193bc:	b	19414 <argp_parse@@Base+0x5a8>
   193c0:	ldr	r2, [r4, #-4]
   193c4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   193c8:	str	r2, [fp, #-60]	; 0xffffffc4
   193cc:	ldr	r1, [r4, #-12]
   193d0:	sub	r2, fp, #96	; 0x60
   193d4:	str	r1, [fp, #-68]	; 0xffffffbc
   193d8:	ldr	ip, [r4, #-8]
   193dc:	mov	r1, r7
   193e0:	str	r0, [fp, #-76]	; 0xffffffb4
   193e4:	str	ip, [fp, #-64]	; 0xffffffc0
   193e8:	mov	r0, r6
   193ec:	blx	r3
   193f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   193f4:	str	r3, [r4, #-4]
   193f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   193fc:	cmp	r3, r4
   19400:	bls	19c0c <argp_parse@@Base+0xda0>
   19404:	cmp	r0, #7
   19408:	cmpne	r0, #0
   1940c:	bne	19550 <argp_parse@@Base+0x6e4>
   19410:	add	r4, r4, #36	; 0x24
   19414:	ldr	r3, [r4, #-20]	; 0xffffffec
   19418:	cmp	r3, #0
   1941c:	ldrne	r3, [r3, #28]
   19420:	ldrne	r2, [r4, #-16]
   19424:	ldrne	r3, [r3, r2, lsl #2]
   19428:	strne	r3, [r4, #-12]
   1942c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19430:	cmp	r3, #0
   19434:	bne	193c0 <argp_parse@@Base+0x554>
   19438:	ldr	r3, [r4, #-32]	; 0xffffffe0
   1943c:	ldr	r3, [r3, #16]
   19440:	cmp	r3, #0
   19444:	beq	1946c <argp_parse@@Base+0x600>
   19448:	ldr	r3, [r3]
   1944c:	cmp	r3, #0
   19450:	beq	1946c <argp_parse@@Base+0x600>
   19454:	ldr	r3, [r4, #-8]
   19458:	ldr	r2, [r4, #-12]
   1945c:	str	r2, [r3]
   19460:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19464:	cmp	r3, #0
   19468:	bne	193c0 <argp_parse@@Base+0x554>
   1946c:	ldr	r3, [fp, #-108]	; 0xffffff94
   19470:	cmp	r3, r4
   19474:	bhi	19410 <argp_parse@@Base+0x5a4>
   19478:	b	190c8 <argp_parse@@Base+0x25c>
   1947c:	sub	sp, sp, #72	; 0x48
   19480:	add	r4, sp, #8
   19484:	sub	sp, sp, #40	; 0x28
   19488:	add	r6, sp, #8
   1948c:	mov	r1, r3
   19490:	str	r3, [r6]
   19494:	str	r3, [r6, #4]
   19498:	str	r3, [r6, #8]
   1949c:	str	r3, [r6, #12]
   194a0:	str	r3, [r6, #20]
   194a4:	str	r3, [r6, #24]
   194a8:	mov	r2, #64	; 0x40
   194ac:	mov	r0, r4
   194b0:	str	r4, [r6, #16]
   194b4:	bl	1143c <memset@plt>
   194b8:	ldr	r2, [pc, #1952]	; 19c60 <argp_parse@@Base+0xdf4>
   194bc:	cmp	r8, #0
   194c0:	addne	r3, r4, #16
   194c4:	ldr	r2, [r2]
   194c8:	moveq	r3, r4
   194cc:	ldr	r1, [pc, #1936]	; 19c64 <argp_parse@@Base+0xdf8>
   194d0:	strne	r8, [r4]
   194d4:	cmp	r2, #0
   194d8:	str	r1, [r3]
   194dc:	beq	19b28 <argp_parse@@Base+0xcbc>
   194e0:	ldr	r2, [pc, #1920]	; 19c68 <argp_parse@@Base+0xdfc>
   194e4:	add	ip, r3, #32
   194e8:	str	r2, [r3, #16]
   194ec:	mov	r9, #0
   194f0:	sub	r5, fp, #196	; 0xc4
   194f4:	mov	r1, r9
   194f8:	mov	r0, r5
   194fc:	mov	r2, #36	; 0x24
   19500:	str	r9, [ip]
   19504:	bl	1143c <memset@plt>
   19508:	ands	r3, r7, #4
   1950c:	moveq	r0, #1
   19510:	movne	r0, r9
   19514:	str	r3, [fp, #-244]	; 0xffffff0c
   19518:	mov	r8, r6
   1951c:	str	r9, [fp, #-224]	; 0xffffff20
   19520:	str	r9, [fp, #-220]	; 0xffffff24
   19524:	str	r9, [fp, #-216]	; 0xffffff28
   19528:	str	r0, [fp, #-228]	; 0xffffff1c
   1952c:	b	18f04 <argp_parse@@Base+0x98>
   19530:	ldr	r3, [fp, #-244]	; 0xffffff0c
   19534:	cmp	r3, #0
   19538:	addne	r3, sl, #1
   1953c:	movne	r2, #43	; 0x2b
   19540:	strbne	r2, [sl]
   19544:	strne	r3, [fp, #-208]	; 0xffffff30
   19548:	movne	sl, r3
   1954c:	b	19030 <argp_parse@@Base+0x1c4>
   19550:	mov	r5, r0
   19554:	mov	r0, r5
   19558:	sub	sp, fp, #32
   1955c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19560:	ldr	r5, [fp, #-112]	; 0xffffff90
   19564:	mov	r6, r5
   19568:	str	r5, [fp, #-108]	; 0xffffff94
   1956c:	b	19074 <argp_parse@@Base+0x208>
   19570:	tst	r3, #1
   19574:	mov	r3, #0
   19578:	str	r3, [fp, #-144]	; 0xffffff70
   1957c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19580:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19584:	subne	r3, r3, #4
   19588:	addne	r4, r4, #1
   1958c:	strne	r3, [fp, #-88]	; 0xffffffa8
   19590:	strne	r4, [fp, #-92]	; 0xffffffa4
   19594:	b	190e4 <argp_parse@@Base+0x278>
   19598:	ldr	r3, [fp, #-236]	; 0xffffff14
   1959c:	ldr	r0, [r3]
   195a0:	bl	19d3c <argp_parse@@Base+0xed0>
   195a4:	str	r0, [r4]
   195a8:	b	18eb8 <argp_parse@@Base+0x4c>
   195ac:	cmp	r2, #0
   195b0:	beq	19128 <argp_parse@@Base+0x2bc>
   195b4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   195b8:	str	r5, [fp, #-148]	; 0xffffff6c
   195bc:	ands	ip, r3, #64	; 0x40
   195c0:	mvn	r3, #0
   195c4:	str	r3, [fp, #-140]	; 0xffffff74
   195c8:	ldr	r2, [fp, #-156]	; 0xffffff64
   195cc:	ldr	r3, [fp, #-152]	; 0xffffff68
   195d0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   195d4:	beq	198f4 <argp_parse@@Base+0xa88>
   195d8:	sub	ip, fp, #148	; 0x94
   195dc:	stm	sp, {r6, ip}
   195e0:	bl	19ebc <argp_parse@@Base+0x1050>
   195e4:	ldr	r5, [fp, #-148]	; 0xffffff6c
   195e8:	str	r5, [fp, #-84]	; 0xffffffac
   195ec:	mov	r7, r0
   195f0:	cmn	r7, #1
   195f4:	beq	19914 <argp_parse@@Base+0xaa8>
   195f8:	cmp	r7, #63	; 0x3f
   195fc:	beq	19a18 <argp_parse@@Base+0xbac>
   19600:	cmp	r7, #1
   19604:	beq	1975c <argp_parse@@Base+0x8f0>
   19608:	asrs	r8, r7, #24
   1960c:	bne	196b8 <argp_parse@@Base+0x84c>
   19610:	mov	r1, r7
   19614:	ldr	r0, [fp, #-156]	; 0xffffff64
   19618:	bl	113f4 <strchr@plt>
   1961c:	cmp	r0, #0
   19620:	beq	19728 <argp_parse@@Base+0x8bc>
   19624:	ldr	r4, [fp, #-112]	; 0xffffff90
   19628:	ldr	r2, [fp, #-108]	; 0xffffff94
   1962c:	cmp	r4, r2
   19630:	bcc	19644 <argp_parse@@Base+0x7d8>
   19634:	b	19728 <argp_parse@@Base+0x8bc>
   19638:	add	r4, r4, #36	; 0x24
   1963c:	cmp	r4, r2
   19640:	bcs	19728 <argp_parse@@Base+0x8bc>
   19644:	ldr	r3, [r4, #8]
   19648:	cmp	r0, r3
   1964c:	bcs	19638 <argp_parse@@Base+0x7cc>
   19650:	ldr	r3, [r4]
   19654:	cmp	r3, #0
   19658:	beq	19728 <argp_parse@@Base+0x8bc>
   1965c:	ldr	r2, [r4, #32]
   19660:	ldr	r0, [r4, #28]
   19664:	ldr	ip, [r4, #24]
   19668:	str	r2, [fp, #-60]	; 0xffffffc4
   1966c:	ldr	r2, [r4, #12]
   19670:	ldr	r1, [fp, #-136]	; 0xffffff78
   19674:	str	r0, [fp, #-64]	; 0xffffffc0
   19678:	str	r2, [fp, #-76]	; 0xffffffb4
   1967c:	str	ip, [fp, #-68]	; 0xffffffbc
   19680:	sub	r2, fp, #96	; 0x60
   19684:	mov	r0, r7
   19688:	blx	r3
   1968c:	mov	r8, r6
   19690:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19694:	str	r3, [r4, #32]
   19698:	cmp	r0, #7
   1969c:	beq	19720 <argp_parse@@Base+0x8b4>
   196a0:	cmp	r0, #0
   196a4:	bne	19298 <argp_parse@@Base+0x42c>
   196a8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   196ac:	ldr	r5, [fp, #-84]	; 0xffffffac
   196b0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   196b4:	b	19110 <argp_parse@@Base+0x2a4>
   196b8:	add	r3, r8, r8, lsl #3
   196bc:	ldr	r2, [fp, #-112]	; 0xffffff90
   196c0:	lsl	r3, r3, #2
   196c4:	sub	r3, r3, #36	; 0x24
   196c8:	add	r4, r2, r3
   196cc:	ldr	r5, [r2, r3]
   196d0:	ands	r3, r7, #8388608	; 0x800000
   196d4:	movne	r3, #-16777216	; 0xff000000
   196d8:	cmp	r5, #0
   196dc:	beq	198ac <argp_parse@@Base+0xa40>
   196e0:	ldr	r0, [r4, #32]
   196e4:	ldr	r2, [r4, #24]
   196e8:	str	r0, [fp, #-60]	; 0xffffffc4
   196ec:	ldr	r0, [r4, #28]
   196f0:	str	r2, [fp, #-68]	; 0xffffffbc
   196f4:	ldr	r2, [r4, #12]
   196f8:	str	r0, [fp, #-64]	; 0xffffffc0
   196fc:	bic	r0, r7, #-16777216	; 0xff000000
   19700:	str	r2, [fp, #-76]	; 0xffffffb4
   19704:	orr	r0, r0, r3
   19708:	ldr	r1, [fp, #-136]	; 0xffffff78
   1970c:	sub	r2, fp, #96	; 0x60
   19710:	blx	r5
   19714:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19718:	str	r3, [r4, #32]
   1971c:	b	19698 <argp_parse@@Base+0x82c>
   19720:	cmp	r8, #0
   19724:	bne	198ac <argp_parse@@Base+0xa40>
   19728:	mov	r2, r7
   1972c:	ldr	r3, [pc, #1336]	; 19c6c <argp_parse@@Base+0xe00>
   19730:	ldr	r1, [pc, #1336]	; 19c70 <argp_parse@@Base+0xe04>
   19734:	sub	r0, fp, #96	; 0x60
   19738:	bl	18158 <argp_error@@Base>
   1973c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19740:	mov	r2, #260	; 0x104
   19744:	sub	r0, fp, #96	; 0x60
   19748:	bl	180a8 <argp_state_help@@Base>
   1974c:	mov	r5, #7
   19750:	ldr	r6, [fp, #-112]	; 0xffffff90
   19754:	ldr	ip, [fp, #-108]	; 0xffffff94
   19758:	b	192a4 <argp_parse@@Base+0x438>
   1975c:	ldr	r7, [fp, #-136]	; 0xffffff78
   19760:	ldr	r3, [fp, #-112]	; 0xffffff90
   19764:	ldr	ip, [fp, #-108]	; 0xffffff94
   19768:	sub	r8, r5, #1
   1976c:	cmp	r3, ip
   19770:	str	r8, [fp, #-84]	; 0xffffffac
   19774:	bcs	198a0 <argp_parse@@Base+0xa34>
   19778:	mov	lr, r8
   1977c:	add	r4, r3, #36	; 0x24
   19780:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19784:	add	r5, lr, #1
   19788:	cmp	r3, #0
   1978c:	str	r5, [fp, #-84]	; 0xffffffac
   19790:	sub	r2, fp, #96	; 0x60
   19794:	mov	r1, r7
   19798:	mov	r0, r6
   1979c:	sub	r5, r4, #36	; 0x24
   197a0:	mov	r9, r4
   197a4:	streq	lr, [fp, #-84]	; 0xffffffac
   197a8:	beq	19894 <argp_parse@@Base+0xa28>
   197ac:	ldr	ip, [r4, #-4]
   197b0:	ldr	lr, [r4, #-24]	; 0xffffffe8
   197b4:	str	ip, [fp, #-60]	; 0xffffffc4
   197b8:	ldr	ip, [r4, #-12]
   197bc:	str	ip, [fp, #-68]	; 0xffffffbc
   197c0:	ldr	ip, [r4, #-8]
   197c4:	str	lr, [fp, #-76]	; 0xffffffb4
   197c8:	str	ip, [fp, #-64]	; 0xffffffc0
   197cc:	blx	r3
   197d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   197d4:	str	r3, [r4, #-4]
   197d8:	cmp	r0, #7
   197dc:	beq	19818 <argp_parse@@Base+0x9ac>
   197e0:	cmp	r0, #0
   197e4:	bne	19298 <argp_parse@@Base+0x42c>
   197e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   197ec:	ldr	r5, [fp, #-84]	; 0xffffffac
   197f0:	cmp	r8, r5
   197f4:	sublt	r8, r5, r8
   197f8:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   197fc:	movge	r3, #1
   19800:	addlt	r8, r3, r8
   19804:	strlt	r8, [r4, #-24]	; 0xffffffe8
   19808:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   1980c:	strge	r3, [fp, #-100]	; 0xffffff9c
   19810:	movge	r2, r3
   19814:	b	19110 <argp_parse@@Base+0x2a4>
   19818:	ldr	lr, [fp, #-84]	; 0xffffffac
   1981c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19820:	sub	lr, lr, #1
   19824:	cmp	r3, #0
   19828:	str	lr, [fp, #-84]	; 0xffffffac
   1982c:	beq	19890 <argp_parse@@Base+0xa24>
   19830:	add	r0, r5, #24
   19834:	ldr	r2, [r5, #12]
   19838:	ldm	r0, {r0, r1, ip}
   1983c:	str	r2, [fp, #-76]	; 0xffffffb4
   19840:	sub	r2, fp, #96	; 0x60
   19844:	str	ip, [fp, #-60]	; 0xffffffc4
   19848:	str	r0, [fp, #-68]	; 0xffffffbc
   1984c:	str	r1, [fp, #-64]	; 0xffffffc0
   19850:	mov	r0, sl
   19854:	mov	r1, r6
   19858:	blx	r3
   1985c:	ldr	ip, [fp, #-108]	; 0xffffff94
   19860:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19864:	cmp	r4, ip
   19868:	movcs	r1, #0
   1986c:	movcc	r1, #1
   19870:	mov	r3, r4
   19874:	str	r2, [r5, #32]
   19878:	cmp	r0, #7
   1987c:	movne	r1, #0
   19880:	cmp	r1, #0
   19884:	beq	19bf4 <argp_parse@@Base+0xd88>
   19888:	ldr	lr, [fp, #-84]	; 0xffffffac
   1988c:	b	1977c <argp_parse@@Base+0x910>
   19890:	ldr	ip, [fp, #-108]	; 0xffffff94
   19894:	cmp	r9, ip
   19898:	add	r4, r4, #36	; 0x24
   1989c:	bcc	19780 <argp_parse@@Base+0x914>
   198a0:	ldr	r5, [fp, #-84]	; 0xffffffac
   198a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   198a8:	b	19130 <argp_parse@@Base+0x2c4>
   198ac:	ldr	r3, [fp, #-152]	; 0xffffff68
   198b0:	ldr	r2, [r3, #12]
   198b4:	cmp	r7, r2
   198b8:	bne	198d0 <argp_parse@@Base+0xa64>
   198bc:	b	19a04 <argp_parse@@Base+0xb98>
   198c0:	add	r3, r3, #16
   198c4:	ldr	r2, [r3, #12]
   198c8:	cmp	r7, r2
   198cc:	beq	19a04 <argp_parse@@Base+0xb98>
   198d0:	ldr	r2, [r3]
   198d4:	cmp	r2, #0
   198d8:	bne	198c0 <argp_parse@@Base+0xa54>
   198dc:	ldr	r2, [pc, #912]	; 19c74 <argp_parse@@Base+0xe08>
   198e0:	ldr	r3, [pc, #900]	; 19c6c <argp_parse@@Base+0xe00>
   198e4:	ldr	r1, [pc, #908]	; 19c78 <argp_parse@@Base+0xe0c>
   198e8:	sub	r0, fp, #96	; 0x60
   198ec:	bl	18158 <argp_error@@Base>
   198f0:	b	1973c <argp_parse@@Base+0x8d0>
   198f4:	sub	lr, fp, #148	; 0x94
   198f8:	stm	sp, {ip, lr}
   198fc:	bl	19e68 <argp_parse@@Base+0xffc>
   19900:	ldr	r5, [fp, #-148]	; 0xffffff6c
   19904:	str	r5, [fp, #-84]	; 0xffffffac
   19908:	mov	r7, r0
   1990c:	cmn	r7, #1
   19910:	bne	195f8 <argp_parse@@Base+0x78c>
   19914:	cmp	r5, #1
   19918:	str	r6, [fp, #-100]	; 0xffffff9c
   1991c:	ble	1993c <argp_parse@@Base+0xad0>
   19920:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19924:	sub	r3, r5, #-1073741823	; 0xc0000001
   19928:	ldr	r1, [pc, #844]	; 19c7c <argp_parse@@Base+0xe10>
   1992c:	ldr	r0, [r2, r3, lsl #2]
   19930:	bl	11208 <strcmp@plt>
   19934:	cmp	r0, #0
   19938:	streq	r5, [fp, #-72]	; 0xffffffb8
   1993c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19940:	cmp	r5, r0
   19944:	bge	19130 <argp_parse@@Base+0x2c4>
   19948:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1994c:	tst	r3, #4
   19950:	beq	19a28 <argp_parse@@Base+0xbbc>
   19954:	ldr	r3, [fp, #4]
   19958:	cmp	r3, #0
   1995c:	beq	19ba0 <argp_parse@@Base+0xd34>
   19960:	ldr	r6, [fp, #-112]	; 0xffffff90
   19964:	ldr	ip, [fp, #-108]	; 0xffffff94
   19968:	str	r5, [r3]
   1996c:	sub	r3, ip, #36	; 0x24
   19970:	cmp	r6, r3
   19974:	bhi	19a5c <argp_parse@@Base+0xbf0>
   19978:	ldr	r7, [pc, #768]	; 19c80 <argp_parse@@Base+0xe14>
   1997c:	sub	r4, ip, #72	; 0x48
   19980:	mov	r8, #0
   19984:	ldr	r3, [r4, #36]	; 0x24
   19988:	sub	r2, fp, #96	; 0x60
   1998c:	cmp	r3, #0
   19990:	mov	r1, r8
   19994:	mov	r0, r7
   19998:	beq	199f4 <argp_parse@@Base+0xb88>
   1999c:	ldr	ip, [r4, #68]	; 0x44
   199a0:	ldr	lr, [r4, #48]	; 0x30
   199a4:	str	ip, [fp, #-60]	; 0xffffffc4
   199a8:	ldr	ip, [r4, #60]	; 0x3c
   199ac:	str	ip, [fp, #-68]	; 0xffffffbc
   199b0:	ldr	ip, [r4, #64]	; 0x40
   199b4:	str	lr, [fp, #-76]	; 0xffffffb4
   199b8:	str	ip, [fp, #-64]	; 0xffffffc0
   199bc:	blx	r3
   199c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   199c4:	str	r3, [r4, #68]	; 0x44
   199c8:	ldr	r6, [fp, #-112]	; 0xffffff90
   199cc:	cmp	r6, r4
   199d0:	bhi	19a3c <argp_parse@@Base+0xbd0>
   199d4:	cmp	r0, #7
   199d8:	cmpne	r0, #0
   199dc:	sub	r4, r4, #36	; 0x24
   199e0:	beq	19984 <argp_parse@@Base+0xb18>
   199e4:	ldr	r4, [fp, #-108]	; 0xffffff94
   199e8:	mov	r5, r0
   199ec:	sub	r4, r4, #36	; 0x24
   199f0:	b	19320 <argp_parse@@Base+0x4b4>
   199f4:	cmp	r6, r4
   199f8:	bhi	19a48 <argp_parse@@Base+0xbdc>
   199fc:	sub	r4, r4, #36	; 0x24
   19a00:	b	19984 <argp_parse@@Base+0xb18>
   19a04:	ldr	r2, [r3]
   19a08:	ldr	r3, [pc, #612]	; 19c74 <argp_parse@@Base+0xe08>
   19a0c:	cmp	r2, #0
   19a10:	moveq	r2, r3
   19a14:	b	198e0 <argp_parse@@Base+0xa74>
   19a18:	ldr	r3, [fp, #-140]	; 0xffffff74
   19a1c:	cmn	r3, #1
   19a20:	bne	1973c <argp_parse@@Base+0x8d0>
   19a24:	b	19610 <argp_parse@@Base+0x7a4>
   19a28:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19a2c:	ldr	r7, [r3, r5, lsl #2]
   19a30:	add	r5, r5, #1
   19a34:	str	r7, [fp, #-136]	; 0xffffff78
   19a38:	b	19760 <argp_parse@@Base+0x8f4>
   19a3c:	cmp	r0, #7
   19a40:	mov	r5, r0
   19a44:	bne	19b04 <argp_parse@@Base+0xc98>
   19a48:	ldr	r4, [fp, #-108]	; 0xffffff94
   19a4c:	sub	r4, r4, #36	; 0x24
   19a50:	cmp	r6, r4
   19a54:	movls	r5, #0
   19a58:	bls	19328 <argp_parse@@Base+0x4bc>
   19a5c:	mov	r5, #0
   19a60:	b	19394 <argp_parse@@Base+0x528>
   19a64:	ldr	r3, [r8, #4]
   19a68:	cmp	r3, #0
   19a6c:	moveq	r6, #36	; 0x24
   19a70:	movne	r6, #72	; 0x48
   19a74:	movne	r3, #1
   19a78:	strne	r3, [fp, #-220]	; 0xffffff24
   19a7c:	cmp	r4, #0
   19a80:	beq	19ae0 <argp_parse@@Base+0xc74>
   19a84:	ldr	r0, [r4]
   19a88:	cmp	r0, #0
   19a8c:	beq	19ae0 <argp_parse@@Base+0xc74>
   19a90:	sub	r1, fp, #228	; 0xe4
   19a94:	bl	18798 <argp_error@@Base+0x640>
   19a98:	ldr	r3, [fp, #-216]	; 0xffffff28
   19a9c:	ldr	r0, [r4, #16]!
   19aa0:	add	r3, r3, #1
   19aa4:	cmp	r0, #0
   19aa8:	str	r3, [fp, #-216]	; 0xffffff28
   19aac:	bne	19a90 <argp_parse@@Base+0xc24>
   19ab0:	ldr	r6, [fp, #-220]	; 0xffffff24
   19ab4:	ldr	r2, [fp, #-224]	; 0xffffff20
   19ab8:	add	r6, r6, #1
   19abc:	lsl	r4, r3, #2
   19ac0:	add	r6, r6, r6, lsl #3
   19ac4:	add	r3, r2, #1
   19ac8:	lsl	r6, r6, #2
   19acc:	add	sl, r4, r6
   19ad0:	add	r3, sl, r3, lsl #4
   19ad4:	str	r3, [fp, #-232]	; 0xffffff18
   19ad8:	ldr	r0, [fp, #-228]	; 0xffffff1c
   19adc:	b	18f84 <argp_parse@@Base+0x118>
   19ae0:	ldr	r4, [fp, #-216]	; 0xffffff28
   19ae4:	ldr	r3, [fp, #-224]	; 0xffffff20
   19ae8:	ldr	r0, [fp, #-228]	; 0xffffff1c
   19aec:	lsl	r4, r4, #2
   19af0:	add	r3, r3, #1
   19af4:	add	sl, r4, r6
   19af8:	add	r3, sl, r3, lsl #4
   19afc:	str	r3, [fp, #-232]	; 0xffffff18
   19b00:	b	18f84 <argp_parse@@Base+0x118>
   19b04:	ldr	r4, [fp, #-108]	; 0xffffff94
   19b08:	sub	r4, r4, #36	; 0x24
   19b0c:	b	19320 <argp_parse@@Base+0x4b4>
   19b10:	ldr	r0, [r2]
   19b14:	cmp	r0, #0
   19b18:	beq	190f0 <argp_parse@@Base+0x284>
   19b1c:	bl	19d3c <argp_parse@@Base+0xed0>
   19b20:	str	r0, [fp, #-56]	; 0xffffffc8
   19b24:	b	190fc <argp_parse@@Base+0x290>
   19b28:	ldr	r2, [pc, #340]	; 19c84 <argp_parse@@Base+0xe18>
   19b2c:	ldr	r2, [r2]
   19b30:	cmp	r2, #0
   19b34:	addeq	ip, r3, #16
   19b38:	bne	194e0 <argp_parse@@Base+0x674>
   19b3c:	b	194ec <argp_parse@@Base+0x680>
   19b40:	ldr	r6, [fp, #-112]	; 0xffffff90
   19b44:	sub	ip, ip, #36	; 0x24
   19b48:	cmp	r6, ip
   19b4c:	mov	r5, r0
   19b50:	bls	19b68 <argp_parse@@Base+0xcfc>
   19b54:	ldr	r3, [fp, #4]
   19b58:	cmp	r3, #0
   19b5c:	bne	1927c <argp_parse@@Base+0x410>
   19b60:	b	19288 <argp_parse@@Base+0x41c>
   19b64:	mov	r5, r0
   19b68:	ldr	r3, [fp, #4]
   19b6c:	cmp	r3, #0
   19b70:	bne	1927c <argp_parse@@Base+0x410>
   19b74:	cmp	r5, #7
   19b78:	bne	192a0 <argp_parse@@Base+0x434>
   19b7c:	b	1973c <argp_parse@@Base+0x8d0>
   19b80:	ldr	r6, [fp, #-112]	; 0xffffff90
   19b84:	sub	r4, ip, #36	; 0x24
   19b88:	cmp	r4, r6
   19b8c:	mov	r5, r0
   19b90:	bcs	191e8 <argp_parse@@Base+0x37c>
   19b94:	cmp	r5, #7
   19b98:	beq	1926c <argp_parse@@Base+0x400>
   19b9c:	b	19b54 <argp_parse@@Base+0xce8>
   19ba0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19ba4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ba8:	tst	r3, #2
   19bac:	bne	19740 <argp_parse@@Base+0x8d4>
   19bb0:	cmp	r1, #0
   19bb4:	beq	19740 <argp_parse@@Base+0x8d4>
   19bb8:	mov	r0, r1
   19bbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19bc0:	ldr	r1, [pc, #192]	; 19c88 <argp_parse@@Base+0xe1c>
   19bc4:	bl	11400 <fprintf@plt>
   19bc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19bcc:	b	19740 <argp_parse@@Base+0x8d4>
   19bd0:	mov	r5, r0
   19bd4:	b	19b94 <argp_parse@@Base+0xd28>
   19bd8:	sub	r4, ip, #36	; 0x24
   19bdc:	cmp	r6, r4
   19be0:	bls	191f4 <argp_parse@@Base+0x388>
   19be4:	ldr	r3, [fp, #4]
   19be8:	cmp	r3, #0
   19bec:	bne	19278 <argp_parse@@Base+0x40c>
   19bf0:	b	1996c <argp_parse@@Base+0xb00>
   19bf4:	cmp	r0, #0
   19bf8:	bne	19c24 <argp_parse@@Base+0xdb8>
   19bfc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19c00:	mov	r5, r0
   19c04:	str	r0, [fp, #-84]	; 0xffffffac
   19c08:	b	197f0 <argp_parse@@Base+0x984>
   19c0c:	cmp	r0, #7
   19c10:	mov	r5, r0
   19c14:	beq	190c8 <argp_parse@@Base+0x25c>
   19c18:	cmp	r0, #0
   19c1c:	bne	1939c <argp_parse@@Base+0x530>
   19c20:	b	190c8 <argp_parse@@Base+0x25c>
   19c24:	cmp	r0, #7
   19c28:	mov	r5, r0
   19c2c:	beq	198a0 <argp_parse@@Base+0xa34>
   19c30:	ldr	r6, [fp, #-112]	; 0xffffff90
   19c34:	b	192a4 <argp_parse@@Base+0x438>
   19c38:	andeq	pc, r2, ip, asr #8
   19c3c:	andeq	pc, r2, r8, asr #8
   19c40:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   19c44:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   19c48:	tsteq	r0, r6
   19c4c:	tsteq	r0, r2
   19c50:	tsteq	r0, r1
   19c54:	tsteq	r0, r5
   19c58:	tsteq	r0, r7
   19c5c:	tsteq	r0, r3
   19c60:	andeq	pc, r2, r0, asr #31
   19c64:	andeq	lr, r1, r0, asr #8
   19c68:	andeq	lr, r1, ip, asr r4
   19c6c:	andeq	lr, r1, r8, ror r4
   19c70:	andeq	lr, r1, ip, lsl #11
   19c74:	andeq	lr, r1, r4, lsl #11
   19c78:	muleq	r1, r4, r5
   19c7c:	andeq	lr, r1, r8, lsl #11
   19c80:	tsteq	r0, r4
   19c84:	andeq	pc, r2, ip, lsl #10
   19c88:	andeq	lr, r1, r0, lsr #11
   19c8c:	cmp	r1, #0
   19c90:	beq	19cd0 <argp_parse@@Base+0xe64>
   19c94:	ldr	r2, [r1, #52]	; 0x34
   19c98:	ldr	r3, [r2, #48]	; 0x30
   19c9c:	ldr	r1, [r2, #52]	; 0x34
   19ca0:	cmp	r3, r1
   19ca4:	bcs	19cd0 <argp_parse@@Base+0xe64>
   19ca8:	ldr	r2, [r3, #4]
   19cac:	cmp	r0, r2
   19cb0:	bne	19cc4 <argp_parse@@Base+0xe58>
   19cb4:	b	19cd8 <argp_parse@@Base+0xe6c>
   19cb8:	ldr	r2, [r3, #4]
   19cbc:	cmp	r2, r0
   19cc0:	beq	19cd8 <argp_parse@@Base+0xe6c>
   19cc4:	add	r3, r3, #36	; 0x24
   19cc8:	cmp	r3, r1
   19ccc:	bcc	19cb8 <argp_parse@@Base+0xe4c>
   19cd0:	mov	r0, #0
   19cd4:	bx	lr
   19cd8:	ldr	r0, [r3, #24]
   19cdc:	bx	lr
   19ce0:	ldr	ip, [pc, #32]	; 19d08 <argp_parse@@Base+0xe9c>
   19ce4:	push	{lr}		; (str lr, [sp, #-4]!)
   19ce8:	sub	sp, sp, #12
   19cec:	ldm	ip, {r1, ip}
   19cf0:	ldr	r3, [pc, #20]	; 19d0c <argp_parse@@Base+0xea0>
   19cf4:	ldr	r2, [pc, #20]	; 19d10 <argp_parse@@Base+0xea4>
   19cf8:	str	ip, [sp]
   19cfc:	bl	1a27c <argp_parse@@Base+0x1410>
   19d00:	add	sp, sp, #12
   19d04:	pop	{pc}		; (ldr pc, [sp], #4)
   19d08:	andeq	pc, r2, r0, lsl r5	; <UNPREDICTABLE>
   19d0c:	andeq	lr, r1, r8, ror r6
   19d10:	andeq	lr, r1, r8, lsl #13
   19d14:	ldr	r3, [pc, #20]	; 19d30 <argp_parse@@Base+0xec4>
   19d18:	ldr	r2, [pc, #20]	; 19d34 <argp_parse@@Base+0xec8>
   19d1c:	ldr	ip, [pc, #20]	; 19d38 <argp_parse@@Base+0xecc>
   19d20:	str	r0, [r3]
   19d24:	str	ip, [r2]
   19d28:	str	r1, [r3, #4]
   19d2c:	bx	lr
   19d30:	andeq	pc, r2, r0, lsl r5	; <UNPREDICTABLE>
   19d34:	andeq	pc, r2, ip, lsl #10
   19d38:	andeq	r9, r1, r0, ror #25
   19d3c:	ldrb	r3, [r0]
   19d40:	cmp	r3, #47	; 0x2f
   19d44:	bne	19d54 <argp_parse@@Base+0xee8>
   19d48:	ldrb	r3, [r0, #1]!
   19d4c:	cmp	r3, #47	; 0x2f
   19d50:	beq	19d48 <argp_parse@@Base+0xedc>
   19d54:	cmp	r3, #0
   19d58:	bxeq	lr
   19d5c:	mov	r2, #0
   19d60:	push	{lr}		; (str lr, [sp, #-4]!)
   19d64:	mov	ip, r2
   19d68:	mov	r1, r0
   19d6c:	mov	lr, #1
   19d70:	cmp	r3, #47	; 0x2f
   19d74:	moveq	r2, lr
   19d78:	beq	19d88 <argp_parse@@Base+0xf1c>
   19d7c:	cmp	r2, #0
   19d80:	movne	r0, r1
   19d84:	movne	r2, ip
   19d88:	ldrb	r3, [r1, #1]!
   19d8c:	cmp	r3, #0
   19d90:	bne	19d70 <argp_parse@@Base+0xf04>
   19d94:	pop	{pc}		; (ldr pc, [sp], #4)
   19d98:	push	{r4, lr}
   19d9c:	mov	r4, r0
   19da0:	bl	113e8 <strlen@plt>
   19da4:	cmp	r0, #1
   19da8:	popls	{r4, pc}
   19dac:	sub	r3, r0, #1
   19db0:	add	r2, r4, r3
   19db4:	ldrb	r1, [r4, r3]
   19db8:	cmp	r1, #47	; 0x2f
   19dbc:	popne	{r4, pc}
   19dc0:	cmp	r3, #1
   19dc4:	beq	19dd8 <argp_parse@@Base+0xf6c>
   19dc8:	ldrb	r1, [r2, #-1]!
   19dcc:	sub	r0, r3, #1
   19dd0:	cmp	r1, #47	; 0x2f
   19dd4:	beq	19de0 <argp_parse@@Base+0xf74>
   19dd8:	mov	r0, r3
   19ddc:	pop	{r4, pc}
   19de0:	mov	r3, r0
   19de4:	b	19dc0 <argp_parse@@Base+0xf54>
   19de8:	push	{r4, r5, lr}
   19dec:	sub	sp, sp, #12
   19df0:	mov	r5, r0
   19df4:	bl	1140c <__errno_location@plt>
   19df8:	mov	r2, #0
   19dfc:	mov	r4, r0
   19e00:	ldr	r3, [r0]
   19e04:	str	r2, [r4]
   19e08:	mov	r0, r5
   19e0c:	str	r3, [sp]
   19e10:	str	r3, [sp, #4]
   19e14:	bl	11268 <free@plt>
   19e18:	ldr	r3, [r4]
   19e1c:	add	r2, sp, #8
   19e20:	cmp	r3, #0
   19e24:	moveq	r3, #4
   19e28:	movne	r3, #0
   19e2c:	add	r3, r2, r3
   19e30:	ldr	r3, [r3, #-8]
   19e34:	str	r3, [r4]
   19e38:	add	sp, sp, #12
   19e3c:	pop	{r4, r5, pc}
   19e40:	push	{lr}		; (str lr, [sp, #-4]!)
   19e44:	sub	sp, sp, #20
   19e48:	mov	ip, #0
   19e4c:	ldr	lr, [sp, #24]
   19e50:	str	ip, [sp, #8]
   19e54:	str	lr, [sp]
   19e58:	str	ip, [sp, #4]
   19e5c:	bl	1ca38 <argp_parse@@Base+0x3bcc>
   19e60:	add	sp, sp, #20
   19e64:	pop	{pc}		; (ldr pc, [sp], #4)
   19e68:	push	{r4, lr}
   19e6c:	sub	sp, sp, #16
   19e70:	mov	ip, #0
   19e74:	ldr	r4, [sp, #24]
   19e78:	ldr	lr, [sp, #28]
   19e7c:	str	r4, [sp]
   19e80:	str	lr, [sp, #8]
   19e84:	str	ip, [sp, #12]
   19e88:	str	ip, [sp, #4]
   19e8c:	bl	1c4c4 <argp_parse@@Base+0x3658>
   19e90:	add	sp, sp, #16
   19e94:	pop	{r4, pc}
   19e98:	push	{r4, lr}
   19e9c:	sub	sp, sp, #16
   19ea0:	mov	lr, #0
   19ea4:	ldr	r4, [sp, #24]
   19ea8:	mov	ip, #1
   19eac:	stm	sp, {r4, ip, lr}
   19eb0:	bl	1ca38 <argp_parse@@Base+0x3bcc>
   19eb4:	add	sp, sp, #16
   19eb8:	pop	{r4, pc}
   19ebc:	push	{r4, r5, lr}
   19ec0:	sub	sp, sp, #20
   19ec4:	mov	lr, #0
   19ec8:	ldr	r5, [sp, #32]
   19ecc:	ldr	r4, [sp, #36]	; 0x24
   19ed0:	mov	ip, #1
   19ed4:	str	r5, [sp]
   19ed8:	str	r4, [sp, #8]
   19edc:	str	lr, [sp, #12]
   19ee0:	str	ip, [sp, #4]
   19ee4:	bl	1c4c4 <argp_parse@@Base+0x3658>
   19ee8:	add	sp, sp, #20
   19eec:	pop	{r4, r5, pc}
   19ef0:	push	{r1, r2, r3}
   19ef4:	push	{lr}		; (str lr, [sp, #-4]!)
   19ef8:	sub	sp, sp, #8
   19efc:	add	r3, sp, #16
   19f00:	ldr	r2, [sp, #16]
   19f04:	ldr	r1, [sp, #12]
   19f08:	str	r3, [sp, #4]
   19f0c:	bl	1131c <ioctl@plt>
   19f10:	add	sp, sp, #8
   19f14:	pop	{lr}		; (ldr lr, [sp], #4)
   19f18:	add	sp, sp, #12
   19f1c:	bx	lr
   19f20:	push	{r4, r5, r6, lr}
   19f24:	subs	r4, r0, #0
   19f28:	beq	19f9c <argp_parse@@Base+0x1130>
   19f2c:	mov	r1, #47	; 0x2f
   19f30:	bl	114b4 <strrchr@plt>
   19f34:	subs	r5, r0, #0
   19f38:	beq	19f88 <argp_parse@@Base+0x111c>
   19f3c:	add	r6, r5, #1
   19f40:	sub	r3, r6, r4
   19f44:	cmp	r3, #6
   19f48:	ble	19f88 <argp_parse@@Base+0x111c>
   19f4c:	mov	r2, #7
   19f50:	ldr	r1, [pc, #96]	; 19fb8 <argp_parse@@Base+0x114c>
   19f54:	sub	r0, r5, #6
   19f58:	bl	11538 <strncmp@plt>
   19f5c:	cmp	r0, #0
   19f60:	bne	19f88 <argp_parse@@Base+0x111c>
   19f64:	mov	r2, #3
   19f68:	ldr	r1, [pc, #76]	; 19fbc <argp_parse@@Base+0x1150>
   19f6c:	mov	r0, r6
   19f70:	bl	11538 <strncmp@plt>
   19f74:	cmp	r0, #0
   19f78:	movne	r4, r6
   19f7c:	ldreq	r3, [pc, #60]	; 19fc0 <argp_parse@@Base+0x1154>
   19f80:	addeq	r4, r5, #4
   19f84:	streq	r4, [r3]
   19f88:	ldr	r2, [pc, #52]	; 19fc4 <argp_parse@@Base+0x1158>
   19f8c:	ldr	r3, [pc, #52]	; 19fc8 <argp_parse@@Base+0x115c>
   19f90:	str	r4, [r2]
   19f94:	str	r4, [r3]
   19f98:	pop	{r4, r5, r6, pc}
   19f9c:	ldr	r3, [pc, #40]	; 19fcc <argp_parse@@Base+0x1160>
   19fa0:	mov	r2, #55	; 0x37
   19fa4:	mov	r1, #1
   19fa8:	ldr	r3, [r3]
   19fac:	ldr	r0, [pc, #28]	; 19fd0 <argp_parse@@Base+0x1164>
   19fb0:	bl	11310 <fwrite@plt>
   19fb4:	bl	11544 <abort@plt>
   19fb8:	ldrdeq	lr, [r1], -r0
   19fbc:	ldrdeq	lr, [r1], -r8
   19fc0:	andeq	pc, r2, r8, asr #8
   19fc4:	andeq	pc, r2, r8, lsl r5	; <UNPREDICTABLE>
   19fc8:	andeq	pc, r2, ip, asr #8
   19fcc:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   19fd0:	muleq	r1, r8, r6
   19fd4:	push	{r4, r5, r6, r7, lr}
   19fd8:	sub	sp, sp, #36	; 0x24
   19fdc:	cmp	r1, #0
   19fe0:	mov	r4, r0
   19fe4:	ldr	r5, [sp, #56]	; 0x38
   19fe8:	ldr	r6, [sp, #60]	; 0x3c
   19fec:	beq	1a22c <argp_parse@@Base+0x13c0>
   19ff0:	str	r3, [sp]
   19ff4:	mov	r3, r2
   19ff8:	mov	r2, r1
   19ffc:	ldr	r1, [pc, #564]	; 1a238 <argp_parse@@Base+0x13cc>
   1a000:	bl	11400 <fprintf@plt>
   1a004:	ldr	r3, [pc, #560]	; 1a23c <argp_parse@@Base+0x13d0>
   1a008:	ldr	r2, [pc, #560]	; 1a240 <argp_parse@@Base+0x13d4>
   1a00c:	ldr	r1, [pc, #560]	; 1a244 <argp_parse@@Base+0x13d8>
   1a010:	mov	r0, r4
   1a014:	bl	11400 <fprintf@plt>
   1a018:	mov	r1, r4
   1a01c:	mov	r0, #10
   1a020:	bl	114cc <fputc@plt>
   1a024:	ldr	r1, [pc, #540]	; 1a248 <argp_parse@@Base+0x13dc>
   1a028:	ldr	r2, [pc, #540]	; 1a24c <argp_parse@@Base+0x13e0>
   1a02c:	mov	r0, r4
   1a030:	bl	11400 <fprintf@plt>
   1a034:	mov	r1, r4
   1a038:	mov	r0, #10
   1a03c:	bl	114cc <fputc@plt>
   1a040:	cmp	r6, #9
   1a044:	ldrls	pc, [pc, r6, lsl #2]
   1a048:	b	1a074 <argp_parse@@Base+0x1208>
   1a04c:	strheq	sl, [r1], -r4
   1a050:	andeq	sl, r1, r0, lsl #2
   1a054:	andeq	sl, r1, r8, lsl r1
   1a058:	andeq	sl, r1, r0, lsr r1
   1a05c:	andeq	sl, r1, r0, asr r1
   1a060:	andeq	sl, r1, r8, ror r1
   1a064:	muleq	r1, r8, r1
   1a068:	andeq	sl, r1, r0, asr #3
   1a06c:	strdeq	sl, [r1], -r0
   1a070:	strheq	sl, [r1], -ip
   1a074:	ldr	ip, [r5, #32]
   1a078:	ldr	r1, [r5, #28]
   1a07c:	ldm	r5, {r2, r3}
   1a080:	ldr	r7, [r5, #24]
   1a084:	ldr	r6, [r5, #20]
   1a088:	str	ip, [sp, #24]
   1a08c:	ldr	lr, [r5, #16]
   1a090:	str	r1, [sp, #20]
   1a094:	ldr	r1, [r5, #8]
   1a098:	ldr	ip, [r5, #12]
   1a09c:	mov	r0, r4
   1a0a0:	str	r7, [sp, #16]
   1a0a4:	stm	sp, {r1, ip, lr}
   1a0a8:	str	r6, [sp, #12]
   1a0ac:	ldr	r1, [pc, #412]	; 1a250 <argp_parse@@Base+0x13e4>
   1a0b0:	bl	11400 <fprintf@plt>
   1a0b4:	add	sp, sp, #36	; 0x24
   1a0b8:	pop	{r4, r5, r6, r7, pc}
   1a0bc:	ldr	ip, [r5, #32]
   1a0c0:	ldr	r1, [r5, #28]
   1a0c4:	ldm	r5, {r2, r3}
   1a0c8:	ldr	r7, [r5, #24]
   1a0cc:	ldr	r6, [r5, #20]
   1a0d0:	str	ip, [sp, #24]
   1a0d4:	ldr	lr, [r5, #16]
   1a0d8:	str	r1, [sp, #20]
   1a0dc:	ldr	r1, [r5, #8]
   1a0e0:	ldr	ip, [r5, #12]
   1a0e4:	mov	r0, r4
   1a0e8:	str	r7, [sp, #16]
   1a0ec:	stm	sp, {r1, ip, lr}
   1a0f0:	str	r6, [sp, #12]
   1a0f4:	ldr	r1, [pc, #344]	; 1a254 <argp_parse@@Base+0x13e8>
   1a0f8:	bl	11400 <fprintf@plt>
   1a0fc:	b	1a0b4 <argp_parse@@Base+0x1248>
   1a100:	ldr	r2, [r5]
   1a104:	mov	r0, r4
   1a108:	ldr	r1, [pc, #328]	; 1a258 <argp_parse@@Base+0x13ec>
   1a10c:	add	sp, sp, #36	; 0x24
   1a110:	pop	{r4, r5, r6, r7, lr}
   1a114:	b	11400 <fprintf@plt>
   1a118:	mov	r0, r4
   1a11c:	ldm	r5, {r2, r3}
   1a120:	ldr	r1, [pc, #308]	; 1a25c <argp_parse@@Base+0x13f0>
   1a124:	add	sp, sp, #36	; 0x24
   1a128:	pop	{r4, r5, r6, r7, lr}
   1a12c:	b	11400 <fprintf@plt>
   1a130:	ldr	r1, [r5, #8]
   1a134:	ldm	r5, {r2, r3}
   1a138:	mov	r0, r4
   1a13c:	str	r1, [sp, #56]	; 0x38
   1a140:	ldr	r1, [pc, #280]	; 1a260 <argp_parse@@Base+0x13f4>
   1a144:	add	sp, sp, #36	; 0x24
   1a148:	pop	{r4, r5, r6, r7, lr}
   1a14c:	b	11400 <fprintf@plt>
   1a150:	ldr	r1, [r5, #8]
   1a154:	ldr	ip, [r5, #12]
   1a158:	ldm	r5, {r2, r3}
   1a15c:	mov	r0, r4
   1a160:	str	r1, [sp, #56]	; 0x38
   1a164:	str	ip, [sp, #60]	; 0x3c
   1a168:	ldr	r1, [pc, #244]	; 1a264 <argp_parse@@Base+0x13f8>
   1a16c:	add	sp, sp, #36	; 0x24
   1a170:	pop	{r4, r5, r6, r7, lr}
   1a174:	b	11400 <fprintf@plt>
   1a178:	add	r1, r5, #8
   1a17c:	ldm	r5, {r2, r3}
   1a180:	ldm	r1, {r1, ip, lr}
   1a184:	mov	r0, r4
   1a188:	stm	sp, {r1, ip, lr}
   1a18c:	ldr	r1, [pc, #212]	; 1a268 <argp_parse@@Base+0x13fc>
   1a190:	bl	11400 <fprintf@plt>
   1a194:	b	1a0b4 <argp_parse@@Base+0x1248>
   1a198:	add	r1, r5, #8
   1a19c:	ldr	r6, [r5, #20]
   1a1a0:	ldm	r1, {r1, ip, lr}
   1a1a4:	mov	r0, r4
   1a1a8:	ldm	r5, {r2, r3}
   1a1ac:	str	r6, [sp, #12]
   1a1b0:	stm	sp, {r1, ip, lr}
   1a1b4:	ldr	r1, [pc, #176]	; 1a26c <argp_parse@@Base+0x1400>
   1a1b8:	bl	11400 <fprintf@plt>
   1a1bc:	b	1a0b4 <argp_parse@@Base+0x1248>
   1a1c0:	add	r1, r5, #8
   1a1c4:	ldr	r7, [r5, #24]
   1a1c8:	ldm	r1, {r1, ip, lr}
   1a1cc:	mov	r0, r4
   1a1d0:	ldr	r6, [r5, #20]
   1a1d4:	ldm	r5, {r2, r3}
   1a1d8:	stm	sp, {r1, ip, lr}
   1a1dc:	str	r7, [sp, #16]
   1a1e0:	str	r6, [sp, #12]
   1a1e4:	ldr	r1, [pc, #132]	; 1a270 <argp_parse@@Base+0x1404>
   1a1e8:	bl	11400 <fprintf@plt>
   1a1ec:	b	1a0b4 <argp_parse@@Base+0x1248>
   1a1f0:	ldr	r1, [r5, #28]
   1a1f4:	ldm	r5, {r2, r3}
   1a1f8:	ldr	r7, [r5, #24]
   1a1fc:	ldr	r6, [r5, #20]
   1a200:	ldr	lr, [r5, #16]
   1a204:	str	r1, [sp, #20]
   1a208:	ldr	r1, [r5, #8]
   1a20c:	ldr	ip, [r5, #12]
   1a210:	mov	r0, r4
   1a214:	str	r7, [sp, #16]
   1a218:	stm	sp, {r1, ip, lr}
   1a21c:	str	r6, [sp, #12]
   1a220:	ldr	r1, [pc, #76]	; 1a274 <argp_parse@@Base+0x1408>
   1a224:	bl	11400 <fprintf@plt>
   1a228:	b	1a0b4 <argp_parse@@Base+0x1248>
   1a22c:	ldr	r1, [pc, #68]	; 1a278 <argp_parse@@Base+0x140c>
   1a230:	bl	11400 <fprintf@plt>
   1a234:	b	1a004 <argp_parse@@Base+0x1198>
   1a238:	ldrdeq	lr, [r1], -ip
   1a23c:	andeq	r0, r0, r6, ror #15
   1a240:	strdeq	lr, [r1], -r0
   1a244:	strdeq	lr, [r1], -r0
   1a248:	andeq	lr, r1, r8, lsl r7
   1a24c:	strdeq	lr, [r1], -r4
   1a250:	andeq	lr, r1, r4, lsl #18
   1a254:	ldrdeq	lr, [r1], -r0
   1a258:	andeq	lr, r1, r4, asr #15
   1a25c:	ldrdeq	lr, [r1], -r4
   1a260:	andeq	lr, r1, ip, ror #15
   1a264:	andeq	lr, r1, r8, lsl #16
   1a268:	andeq	lr, r1, r8, lsr #16
   1a26c:	andeq	lr, r1, ip, asr #16
   1a270:	andeq	lr, r1, r4, ror r8
   1a274:	andeq	lr, r1, r0, lsr #17
   1a278:	andeq	lr, r1, r8, ror #13
   1a27c:	push	{r4, r5, r6, r7, lr}
   1a280:	sub	sp, sp, #36	; 0x24
   1a284:	mov	r6, r0
   1a288:	ldr	r5, [sp, #56]	; 0x38
   1a28c:	ldr	r4, [r5]
   1a290:	cmp	r4, #0
   1a294:	beq	1a2b0 <argp_parse@@Base+0x1444>
   1a298:	mov	r0, r5
   1a29c:	mov	r4, #0
   1a2a0:	ldr	ip, [r0, #4]!
   1a2a4:	add	r4, r4, #1
   1a2a8:	cmp	ip, #0
   1a2ac:	bne	1a2a0 <argp_parse@@Base+0x1434>
   1a2b0:	cmp	r1, #0
   1a2b4:	beq	1a4f0 <argp_parse@@Base+0x1684>
   1a2b8:	str	r3, [sp]
   1a2bc:	mov	r0, r6
   1a2c0:	mov	r3, r2
   1a2c4:	mov	r2, r1
   1a2c8:	ldr	r1, [pc, #560]	; 1a500 <argp_parse@@Base+0x1694>
   1a2cc:	bl	11400 <fprintf@plt>
   1a2d0:	ldr	r3, [pc, #556]	; 1a504 <argp_parse@@Base+0x1698>
   1a2d4:	ldr	r2, [pc, #556]	; 1a508 <argp_parse@@Base+0x169c>
   1a2d8:	ldr	r1, [pc, #556]	; 1a50c <argp_parse@@Base+0x16a0>
   1a2dc:	mov	r0, r6
   1a2e0:	bl	11400 <fprintf@plt>
   1a2e4:	mov	r1, r6
   1a2e8:	mov	r0, #10
   1a2ec:	bl	114cc <fputc@plt>
   1a2f0:	ldr	r1, [pc, #536]	; 1a510 <argp_parse@@Base+0x16a4>
   1a2f4:	ldr	r2, [pc, #536]	; 1a514 <argp_parse@@Base+0x16a8>
   1a2f8:	mov	r0, r6
   1a2fc:	bl	11400 <fprintf@plt>
   1a300:	mov	r1, r6
   1a304:	mov	r0, #10
   1a308:	bl	114cc <fputc@plt>
   1a30c:	cmp	r4, #9
   1a310:	ldrls	pc, [pc, r4, lsl #2]
   1a314:	b	1a340 <argp_parse@@Base+0x14d4>
   1a318:	andeq	sl, r1, r0, lsl #7
   1a31c:	andeq	sl, r1, ip, asr #7
   1a320:	andeq	sl, r1, r4, ror #7
   1a324:	strdeq	sl, [r1], -ip
   1a328:	andeq	sl, r1, ip, lsl r4
   1a32c:	andeq	sl, r1, ip, lsr r4
   1a330:	andeq	sl, r1, ip, asr r4
   1a334:	andeq	sl, r1, r4, lsl #9
   1a338:			; <UNDEFINED> instruction: 0x0001a4b4
   1a33c:	andeq	sl, r1, r8, lsl #7
   1a340:	ldr	ip, [r5, #32]
   1a344:	ldr	r1, [r5, #28]
   1a348:	ldm	r5, {r2, r3}
   1a34c:	ldr	r7, [r5, #24]
   1a350:	ldr	r4, [r5, #20]
   1a354:	str	ip, [sp, #24]
   1a358:	ldr	lr, [r5, #16]
   1a35c:	str	r1, [sp, #20]
   1a360:	ldr	r1, [r5, #8]
   1a364:	ldr	ip, [r5, #12]
   1a368:	mov	r0, r6
   1a36c:	str	r7, [sp, #16]
   1a370:	stm	sp, {r1, ip, lr}
   1a374:	str	r4, [sp, #12]
   1a378:	ldr	r1, [pc, #408]	; 1a518 <argp_parse@@Base+0x16ac>
   1a37c:	bl	11400 <fprintf@plt>
   1a380:	add	sp, sp, #36	; 0x24
   1a384:	pop	{r4, r5, r6, r7, pc}
   1a388:	ldr	ip, [r5, #32]
   1a38c:	ldr	r1, [r5, #28]
   1a390:	ldm	r5, {r2, r3}
   1a394:	ldr	r7, [r5, #24]
   1a398:	ldr	r4, [r5, #20]
   1a39c:	str	ip, [sp, #24]
   1a3a0:	ldr	lr, [r5, #16]
   1a3a4:	str	r1, [sp, #20]
   1a3a8:	ldr	r1, [r5, #8]
   1a3ac:	ldr	ip, [r5, #12]
   1a3b0:	mov	r0, r6
   1a3b4:	str	r7, [sp, #16]
   1a3b8:	stm	sp, {r1, ip, lr}
   1a3bc:	str	r4, [sp, #12]
   1a3c0:	ldr	r1, [pc, #340]	; 1a51c <argp_parse@@Base+0x16b0>
   1a3c4:	bl	11400 <fprintf@plt>
   1a3c8:	b	1a380 <argp_parse@@Base+0x1514>
   1a3cc:	ldr	r2, [r5]
   1a3d0:	mov	r0, r6
   1a3d4:	ldr	r1, [pc, #324]	; 1a520 <argp_parse@@Base+0x16b4>
   1a3d8:	add	sp, sp, #36	; 0x24
   1a3dc:	pop	{r4, r5, r6, r7, lr}
   1a3e0:	b	11400 <fprintf@plt>
   1a3e4:	mov	r0, r6
   1a3e8:	ldm	r5, {r2, r3}
   1a3ec:	ldr	r1, [pc, #304]	; 1a524 <argp_parse@@Base+0x16b8>
   1a3f0:	add	sp, sp, #36	; 0x24
   1a3f4:	pop	{r4, r5, r6, r7, lr}
   1a3f8:	b	11400 <fprintf@plt>
   1a3fc:	ldr	r1, [r5, #8]
   1a400:	ldm	r5, {r2, r3}
   1a404:	mov	r0, r6
   1a408:	str	r1, [sp, #56]	; 0x38
   1a40c:	ldr	r1, [pc, #276]	; 1a528 <argp_parse@@Base+0x16bc>
   1a410:	add	sp, sp, #36	; 0x24
   1a414:	pop	{r4, r5, r6, r7, lr}
   1a418:	b	11400 <fprintf@plt>
   1a41c:	ldr	r1, [r5, #8]
   1a420:	ldr	ip, [r5, #12]
   1a424:	ldm	r5, {r2, r3}
   1a428:	mov	r0, r6
   1a42c:	stm	sp, {r1, ip}
   1a430:	ldr	r1, [pc, #244]	; 1a52c <argp_parse@@Base+0x16c0>
   1a434:	bl	11400 <fprintf@plt>
   1a438:	b	1a380 <argp_parse@@Base+0x1514>
   1a43c:	add	r1, r5, #8
   1a440:	ldm	r5, {r2, r3}
   1a444:	ldm	r1, {r1, ip, lr}
   1a448:	mov	r0, r6
   1a44c:	stm	sp, {r1, ip, lr}
   1a450:	ldr	r1, [pc, #216]	; 1a530 <argp_parse@@Base+0x16c4>
   1a454:	bl	11400 <fprintf@plt>
   1a458:	b	1a380 <argp_parse@@Base+0x1514>
   1a45c:	add	r1, r5, #8
   1a460:	ldr	r4, [r5, #20]
   1a464:	ldm	r1, {r1, ip, lr}
   1a468:	mov	r0, r6
   1a46c:	ldm	r5, {r2, r3}
   1a470:	str	r4, [sp, #12]
   1a474:	stm	sp, {r1, ip, lr}
   1a478:	ldr	r1, [pc, #180]	; 1a534 <argp_parse@@Base+0x16c8>
   1a47c:	bl	11400 <fprintf@plt>
   1a480:	b	1a380 <argp_parse@@Base+0x1514>
   1a484:	add	r1, r5, #8
   1a488:	ldr	r7, [r5, #24]
   1a48c:	ldm	r1, {r1, ip, lr}
   1a490:	mov	r0, r6
   1a494:	ldr	r4, [r5, #20]
   1a498:	ldm	r5, {r2, r3}
   1a49c:	stm	sp, {r1, ip, lr}
   1a4a0:	str	r7, [sp, #16]
   1a4a4:	str	r4, [sp, #12]
   1a4a8:	ldr	r1, [pc, #136]	; 1a538 <argp_parse@@Base+0x16cc>
   1a4ac:	bl	11400 <fprintf@plt>
   1a4b0:	b	1a380 <argp_parse@@Base+0x1514>
   1a4b4:	ldr	r1, [r5, #28]
   1a4b8:	ldm	r5, {r2, r3}
   1a4bc:	ldr	r7, [r5, #24]
   1a4c0:	ldr	r4, [r5, #20]
   1a4c4:	ldr	lr, [r5, #16]
   1a4c8:	str	r1, [sp, #20]
   1a4cc:	ldr	r1, [r5, #8]
   1a4d0:	ldr	ip, [r5, #12]
   1a4d4:	mov	r0, r6
   1a4d8:	str	r7, [sp, #16]
   1a4dc:	stm	sp, {r1, ip, lr}
   1a4e0:	str	r4, [sp, #12]
   1a4e4:	ldr	r1, [pc, #80]	; 1a53c <argp_parse@@Base+0x16d0>
   1a4e8:	bl	11400 <fprintf@plt>
   1a4ec:	b	1a380 <argp_parse@@Base+0x1514>
   1a4f0:	ldr	r1, [pc, #72]	; 1a540 <argp_parse@@Base+0x16d4>
   1a4f4:	mov	r0, r6
   1a4f8:	bl	11400 <fprintf@plt>
   1a4fc:	b	1a2d0 <argp_parse@@Base+0x1464>
   1a500:	ldrdeq	lr, [r1], -ip
   1a504:	andeq	r0, r0, r6, ror #15
   1a508:	strdeq	lr, [r1], -r0
   1a50c:	strdeq	lr, [r1], -r0
   1a510:	andeq	lr, r1, r8, lsl r7
   1a514:	strdeq	lr, [r1], -r4
   1a518:	andeq	lr, r1, r4, lsl #18
   1a51c:	ldrdeq	lr, [r1], -r0
   1a520:	andeq	lr, r1, r4, asr #15
   1a524:	ldrdeq	lr, [r1], -r4
   1a528:	andeq	lr, r1, ip, ror #15
   1a52c:	andeq	lr, r1, r8, lsl #16
   1a530:	andeq	lr, r1, r8, lsr #16
   1a534:	andeq	lr, r1, ip, asr #16
   1a538:	andeq	lr, r1, r4, ror r8
   1a53c:	andeq	lr, r1, r0, lsr #17
   1a540:	andeq	lr, r1, r8, ror #13
   1a544:	push	{r4, r5, r6, lr}
   1a548:	sub	sp, sp, #72	; 0x48
   1a54c:	mov	r5, r0
   1a550:	ldr	ip, [sp, #88]	; 0x58
   1a554:	ldr	r0, [ip]
   1a558:	cmp	r0, #0
   1a55c:	str	r0, [sp, #32]
   1a560:	beq	1a868 <argp_parse@@Base+0x19fc>
   1a564:	ldr	r0, [ip, #4]
   1a568:	cmp	r0, #0
   1a56c:	str	r0, [sp, #36]	; 0x24
   1a570:	beq	1a870 <argp_parse@@Base+0x1a04>
   1a574:	ldr	r0, [ip, #8]
   1a578:	cmp	r0, #0
   1a57c:	str	r0, [sp, #40]	; 0x28
   1a580:	beq	1a878 <argp_parse@@Base+0x1a0c>
   1a584:	ldr	r0, [ip, #12]
   1a588:	cmp	r0, #0
   1a58c:	str	r0, [sp, #44]	; 0x2c
   1a590:	beq	1a880 <argp_parse@@Base+0x1a14>
   1a594:	ldr	r0, [ip, #16]
   1a598:	cmp	r0, #0
   1a59c:	str	r0, [sp, #48]	; 0x30
   1a5a0:	beq	1a888 <argp_parse@@Base+0x1a1c>
   1a5a4:	ldr	r0, [ip, #20]
   1a5a8:	cmp	r0, #0
   1a5ac:	str	r0, [sp, #52]	; 0x34
   1a5b0:	beq	1a890 <argp_parse@@Base+0x1a24>
   1a5b4:	ldr	r0, [ip, #24]
   1a5b8:	cmp	r0, #0
   1a5bc:	str	r0, [sp, #56]	; 0x38
   1a5c0:	beq	1a898 <argp_parse@@Base+0x1a2c>
   1a5c4:	ldr	r0, [ip, #28]
   1a5c8:	cmp	r0, #0
   1a5cc:	str	r0, [sp, #60]	; 0x3c
   1a5d0:	beq	1a8a0 <argp_parse@@Base+0x1a34>
   1a5d4:	ldr	r0, [ip, #32]
   1a5d8:	cmp	r0, #0
   1a5dc:	str	r0, [sp, #64]	; 0x40
   1a5e0:	beq	1a8a8 <argp_parse@@Base+0x1a3c>
   1a5e4:	ldr	r0, [ip, #36]	; 0x24
   1a5e8:	cmp	r0, #0
   1a5ec:	movne	r4, #10
   1a5f0:	moveq	r4, #9
   1a5f4:	cmp	r1, #0
   1a5f8:	beq	1a858 <argp_parse@@Base+0x19ec>
   1a5fc:	str	r3, [sp]
   1a600:	mov	r0, r5
   1a604:	mov	r3, r2
   1a608:	mov	r2, r1
   1a60c:	ldr	r1, [pc, #668]	; 1a8b0 <argp_parse@@Base+0x1a44>
   1a610:	bl	11400 <fprintf@plt>
   1a614:	ldr	r3, [pc, #664]	; 1a8b4 <argp_parse@@Base+0x1a48>
   1a618:	ldr	r2, [pc, #664]	; 1a8b8 <argp_parse@@Base+0x1a4c>
   1a61c:	ldr	r1, [pc, #664]	; 1a8bc <argp_parse@@Base+0x1a50>
   1a620:	mov	r0, r5
   1a624:	bl	11400 <fprintf@plt>
   1a628:	mov	r1, r5
   1a62c:	mov	r0, #10
   1a630:	bl	114cc <fputc@plt>
   1a634:	ldr	r1, [pc, #644]	; 1a8c0 <argp_parse@@Base+0x1a54>
   1a638:	ldr	r2, [pc, #644]	; 1a8c4 <argp_parse@@Base+0x1a58>
   1a63c:	mov	r0, r5
   1a640:	bl	11400 <fprintf@plt>
   1a644:	mov	r1, r5
   1a648:	mov	r0, #10
   1a64c:	bl	114cc <fputc@plt>
   1a650:	cmp	r4, #9
   1a654:	ldrls	pc, [pc, r4, lsl #2]
   1a658:	b	1a684 <argp_parse@@Base+0x1818>
   1a65c:	andeq	sl, r1, r8, asr #13
   1a660:	andeq	sl, r1, r8, lsl r7
   1a664:	andeq	sl, r1, r0, lsr r7
   1a668:	andeq	sl, r1, ip, asr #14
   1a66c:	andeq	sl, r1, r0, ror r7
   1a670:	muleq	r1, r4, r7
   1a674:			; <UNDEFINED> instruction: 0x0001a7b8
   1a678:	andeq	sl, r1, r4, ror #15
   1a67c:	andeq	sl, r1, r8, lsl r8
   1a680:	ldrdeq	sl, [r1], -r0
   1a684:	ldr	ip, [sp, #64]	; 0x40
   1a688:	ldr	r1, [sp, #60]	; 0x3c
   1a68c:	ldr	lr, [sp, #48]	; 0x30
   1a690:	str	ip, [sp, #24]
   1a694:	str	r1, [sp, #20]
   1a698:	ldr	ip, [sp, #44]	; 0x2c
   1a69c:	ldr	r1, [sp, #40]	; 0x28
   1a6a0:	ldr	r6, [sp, #56]	; 0x38
   1a6a4:	ldr	r4, [sp, #52]	; 0x34
   1a6a8:	stm	sp, {r1, ip, lr}
   1a6ac:	mov	r0, r5
   1a6b0:	ldr	r3, [sp, #36]	; 0x24
   1a6b4:	ldr	r2, [sp, #32]
   1a6b8:	str	r6, [sp, #16]
   1a6bc:	str	r4, [sp, #12]
   1a6c0:	ldr	r1, [pc, #512]	; 1a8c8 <argp_parse@@Base+0x1a5c>
   1a6c4:	bl	11400 <fprintf@plt>
   1a6c8:	add	sp, sp, #72	; 0x48
   1a6cc:	pop	{r4, r5, r6, pc}
   1a6d0:	ldr	ip, [sp, #64]	; 0x40
   1a6d4:	ldr	r1, [sp, #60]	; 0x3c
   1a6d8:	ldr	lr, [sp, #48]	; 0x30
   1a6dc:	str	ip, [sp, #24]
   1a6e0:	str	r1, [sp, #20]
   1a6e4:	ldr	ip, [sp, #44]	; 0x2c
   1a6e8:	ldr	r1, [sp, #40]	; 0x28
   1a6ec:	ldr	r6, [sp, #56]	; 0x38
   1a6f0:	ldr	r4, [sp, #52]	; 0x34
   1a6f4:	stm	sp, {r1, ip, lr}
   1a6f8:	mov	r0, r5
   1a6fc:	ldr	r3, [sp, #36]	; 0x24
   1a700:	ldr	r2, [sp, #32]
   1a704:	str	r6, [sp, #16]
   1a708:	str	r4, [sp, #12]
   1a70c:	ldr	r1, [pc, #440]	; 1a8cc <argp_parse@@Base+0x1a60>
   1a710:	bl	11400 <fprintf@plt>
   1a714:	b	1a6c8 <argp_parse@@Base+0x185c>
   1a718:	mov	r0, r5
   1a71c:	ldr	r2, [sp, #32]
   1a720:	ldr	r1, [pc, #424]	; 1a8d0 <argp_parse@@Base+0x1a64>
   1a724:	add	sp, sp, #72	; 0x48
   1a728:	pop	{r4, r5, r6, lr}
   1a72c:	b	11400 <fprintf@plt>
   1a730:	mov	r0, r5
   1a734:	ldr	r3, [sp, #36]	; 0x24
   1a738:	ldr	r2, [sp, #32]
   1a73c:	ldr	r1, [pc, #400]	; 1a8d4 <argp_parse@@Base+0x1a68>
   1a740:	add	sp, sp, #72	; 0x48
   1a744:	pop	{r4, r5, r6, lr}
   1a748:	b	11400 <fprintf@plt>
   1a74c:	ldr	r1, [sp, #40]	; 0x28
   1a750:	ldr	r3, [sp, #36]	; 0x24
   1a754:	str	r1, [sp, #88]	; 0x58
   1a758:	ldr	r2, [sp, #32]
   1a75c:	mov	r0, r5
   1a760:	ldr	r1, [pc, #368]	; 1a8d8 <argp_parse@@Base+0x1a6c>
   1a764:	add	sp, sp, #72	; 0x48
   1a768:	pop	{r4, r5, r6, lr}
   1a76c:	b	11400 <fprintf@plt>
   1a770:	ldr	r1, [sp, #40]	; 0x28
   1a774:	ldr	ip, [sp, #44]	; 0x2c
   1a778:	ldr	r3, [sp, #36]	; 0x24
   1a77c:	ldr	r2, [sp, #32]
   1a780:	stm	sp, {r1, ip}
   1a784:	mov	r0, r5
   1a788:	ldr	r1, [pc, #332]	; 1a8dc <argp_parse@@Base+0x1a70>
   1a78c:	bl	11400 <fprintf@plt>
   1a790:	b	1a6c8 <argp_parse@@Base+0x185c>
   1a794:	add	r1, sp, #40	; 0x28
   1a798:	ldr	r3, [sp, #36]	; 0x24
   1a79c:	ldm	r1, {r1, ip, lr}
   1a7a0:	mov	r0, r5
   1a7a4:	ldr	r2, [sp, #32]
   1a7a8:	stm	sp, {r1, ip, lr}
   1a7ac:	ldr	r1, [pc, #300]	; 1a8e0 <argp_parse@@Base+0x1a74>
   1a7b0:	bl	11400 <fprintf@plt>
   1a7b4:	b	1a6c8 <argp_parse@@Base+0x185c>
   1a7b8:	add	r1, sp, #40	; 0x28
   1a7bc:	ldr	r4, [sp, #52]	; 0x34
   1a7c0:	ldm	r1, {r1, ip, lr}
   1a7c4:	mov	r0, r5
   1a7c8:	ldr	r3, [sp, #36]	; 0x24
   1a7cc:	ldr	r2, [sp, #32]
   1a7d0:	stm	sp, {r1, ip, lr}
   1a7d4:	str	r4, [sp, #12]
   1a7d8:	ldr	r1, [pc, #260]	; 1a8e4 <argp_parse@@Base+0x1a78>
   1a7dc:	bl	11400 <fprintf@plt>
   1a7e0:	b	1a6c8 <argp_parse@@Base+0x185c>
   1a7e4:	add	r1, sp, #40	; 0x28
   1a7e8:	ldr	r6, [sp, #56]	; 0x38
   1a7ec:	ldm	r1, {r1, ip, lr}
   1a7f0:	mov	r0, r5
   1a7f4:	ldr	r4, [sp, #52]	; 0x34
   1a7f8:	ldr	r3, [sp, #36]	; 0x24
   1a7fc:	stm	sp, {r1, ip, lr}
   1a800:	ldr	r2, [sp, #32]
   1a804:	str	r6, [sp, #16]
   1a808:	str	r4, [sp, #12]
   1a80c:	ldr	r1, [pc, #212]	; 1a8e8 <argp_parse@@Base+0x1a7c>
   1a810:	bl	11400 <fprintf@plt>
   1a814:	b	1a6c8 <argp_parse@@Base+0x185c>
   1a818:	ldr	r1, [sp, #60]	; 0x3c
   1a81c:	ldr	lr, [sp, #48]	; 0x30
   1a820:	ldr	ip, [sp, #44]	; 0x2c
   1a824:	str	r1, [sp, #20]
   1a828:	ldr	r1, [sp, #40]	; 0x28
   1a82c:	ldr	r6, [sp, #56]	; 0x38
   1a830:	ldr	r4, [sp, #52]	; 0x34
   1a834:	stm	sp, {r1, ip, lr}
   1a838:	mov	r0, r5
   1a83c:	ldr	r3, [sp, #36]	; 0x24
   1a840:	ldr	r2, [sp, #32]
   1a844:	str	r6, [sp, #16]
   1a848:	str	r4, [sp, #12]
   1a84c:	ldr	r1, [pc, #152]	; 1a8ec <argp_parse@@Base+0x1a80>
   1a850:	bl	11400 <fprintf@plt>
   1a854:	b	1a6c8 <argp_parse@@Base+0x185c>
   1a858:	ldr	r1, [pc, #144]	; 1a8f0 <argp_parse@@Base+0x1a84>
   1a85c:	mov	r0, r5
   1a860:	bl	11400 <fprintf@plt>
   1a864:	b	1a614 <argp_parse@@Base+0x17a8>
   1a868:	mov	r4, r0
   1a86c:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a870:	mov	r4, #1
   1a874:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a878:	mov	r4, #2
   1a87c:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a880:	mov	r4, #3
   1a884:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a888:	mov	r4, #4
   1a88c:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a890:	mov	r4, #5
   1a894:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a898:	mov	r4, #6
   1a89c:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a8a0:	mov	r4, #7
   1a8a4:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a8a8:	mov	r4, #8
   1a8ac:	b	1a5f4 <argp_parse@@Base+0x1788>
   1a8b0:	ldrdeq	lr, [r1], -ip
   1a8b4:	andeq	r0, r0, r6, ror #15
   1a8b8:	strdeq	lr, [r1], -r0
   1a8bc:	strdeq	lr, [r1], -r0
   1a8c0:	andeq	lr, r1, r8, lsl r7
   1a8c4:	strdeq	lr, [r1], -r4
   1a8c8:	andeq	lr, r1, r4, lsl #18
   1a8cc:	ldrdeq	lr, [r1], -r0
   1a8d0:	andeq	lr, r1, r4, asr #15
   1a8d4:	ldrdeq	lr, [r1], -r4
   1a8d8:	andeq	lr, r1, ip, ror #15
   1a8dc:	andeq	lr, r1, r8, lsl #16
   1a8e0:	andeq	lr, r1, r8, lsr #16
   1a8e4:	andeq	lr, r1, ip, asr #16
   1a8e8:	andeq	lr, r1, r4, ror r8
   1a8ec:	andeq	lr, r1, r0, lsr #17
   1a8f0:	andeq	lr, r1, r8, ror #13
   1a8f4:	push	{r3}		; (str r3, [sp, #-4]!)
   1a8f8:	push	{r4, r5, r6, lr}
   1a8fc:	sub	sp, sp, #84	; 0x54
   1a900:	add	ip, sp, #104	; 0x68
   1a904:	ldr	lr, [sp, #104]	; 0x68
   1a908:	mov	r5, r0
   1a90c:	cmp	lr, #0
   1a910:	str	lr, [sp, #40]	; 0x28
   1a914:	str	ip, [sp, #36]	; 0x24
   1a918:	beq	1ac20 <argp_parse@@Base+0x1db4>
   1a91c:	ldr	r0, [sp, #108]	; 0x6c
   1a920:	cmp	r0, #0
   1a924:	str	r0, [sp, #44]	; 0x2c
   1a928:	beq	1ac28 <argp_parse@@Base+0x1dbc>
   1a92c:	ldr	r0, [sp, #112]	; 0x70
   1a930:	cmp	r0, #0
   1a934:	str	r0, [sp, #48]	; 0x30
   1a938:	beq	1ac30 <argp_parse@@Base+0x1dc4>
   1a93c:	ldr	r0, [sp, #116]	; 0x74
   1a940:	cmp	r0, #0
   1a944:	str	r0, [sp, #52]	; 0x34
   1a948:	beq	1ac38 <argp_parse@@Base+0x1dcc>
   1a94c:	ldr	r0, [sp, #120]	; 0x78
   1a950:	cmp	r0, #0
   1a954:	str	r0, [sp, #56]	; 0x38
   1a958:	beq	1ac40 <argp_parse@@Base+0x1dd4>
   1a95c:	ldr	r0, [sp, #124]	; 0x7c
   1a960:	cmp	r0, #0
   1a964:	str	r0, [sp, #60]	; 0x3c
   1a968:	beq	1ac48 <argp_parse@@Base+0x1ddc>
   1a96c:	ldr	r0, [sp, #128]	; 0x80
   1a970:	cmp	r0, #0
   1a974:	str	r0, [sp, #64]	; 0x40
   1a978:	beq	1ac50 <argp_parse@@Base+0x1de4>
   1a97c:	ldr	r0, [sp, #132]	; 0x84
   1a980:	cmp	r0, #0
   1a984:	str	r0, [sp, #68]	; 0x44
   1a988:	beq	1ac58 <argp_parse@@Base+0x1dec>
   1a98c:	ldr	r3, [sp, #136]	; 0x88
   1a990:	cmp	r3, #0
   1a994:	str	r3, [sp, #72]	; 0x48
   1a998:	beq	1ac60 <argp_parse@@Base+0x1df4>
   1a99c:	ldr	lr, [sp, #140]	; 0x8c
   1a9a0:	cmp	lr, #0
   1a9a4:	movne	r4, #10
   1a9a8:	moveq	r4, #9
   1a9ac:	cmp	r1, #0
   1a9b0:	ldr	r3, [sp, #100]	; 0x64
   1a9b4:	beq	1ac10 <argp_parse@@Base+0x1da4>
   1a9b8:	str	r3, [sp]
   1a9bc:	mov	r0, r5
   1a9c0:	mov	r3, r2
   1a9c4:	mov	r2, r1
   1a9c8:	ldr	r1, [pc, #664]	; 1ac68 <argp_parse@@Base+0x1dfc>
   1a9cc:	bl	11400 <fprintf@plt>
   1a9d0:	ldr	r3, [pc, #660]	; 1ac6c <argp_parse@@Base+0x1e00>
   1a9d4:	ldr	r2, [pc, #660]	; 1ac70 <argp_parse@@Base+0x1e04>
   1a9d8:	ldr	r1, [pc, #660]	; 1ac74 <argp_parse@@Base+0x1e08>
   1a9dc:	mov	r0, r5
   1a9e0:	bl	11400 <fprintf@plt>
   1a9e4:	mov	r1, r5
   1a9e8:	mov	r0, #10
   1a9ec:	bl	114cc <fputc@plt>
   1a9f0:	ldr	r1, [pc, #640]	; 1ac78 <argp_parse@@Base+0x1e0c>
   1a9f4:	ldr	r2, [pc, #640]	; 1ac7c <argp_parse@@Base+0x1e10>
   1a9f8:	mov	r0, r5
   1a9fc:	bl	11400 <fprintf@plt>
   1aa00:	mov	r1, r5
   1aa04:	mov	r0, #10
   1aa08:	bl	114cc <fputc@plt>
   1aa0c:	cmp	r4, #9
   1aa10:	ldrls	pc, [pc, r4, lsl #2]
   1aa14:	b	1aa40 <argp_parse@@Base+0x1bd4>
   1aa18:	andeq	sl, r1, r4, lsl #21
   1aa1c:	ldrdeq	sl, [r1], -ip
   1aa20:	strdeq	sl, [r1], -r0
   1aa24:	andeq	sl, r1, r8, lsl #22
   1aa28:	andeq	sl, r1, r8, lsr #22
   1aa2c:	andeq	sl, r1, ip, asr #22
   1aa30:	andeq	sl, r1, r0, ror fp
   1aa34:	muleq	r1, ip, fp
   1aa38:	ldrdeq	sl, [r1], -r0
   1aa3c:	muleq	r1, r4, sl
   1aa40:	ldr	ip, [sp, #72]	; 0x48
   1aa44:	ldr	r1, [sp, #68]	; 0x44
   1aa48:	ldr	lr, [sp, #56]	; 0x38
   1aa4c:	str	ip, [sp, #24]
   1aa50:	str	r1, [sp, #20]
   1aa54:	ldr	ip, [sp, #52]	; 0x34
   1aa58:	ldr	r1, [sp, #48]	; 0x30
   1aa5c:	ldr	r6, [sp, #64]	; 0x40
   1aa60:	ldr	r4, [sp, #60]	; 0x3c
   1aa64:	stm	sp, {r1, ip, lr}
   1aa68:	mov	r0, r5
   1aa6c:	ldr	r3, [sp, #44]	; 0x2c
   1aa70:	ldr	r2, [sp, #40]	; 0x28
   1aa74:	str	r6, [sp, #16]
   1aa78:	str	r4, [sp, #12]
   1aa7c:	ldr	r1, [pc, #508]	; 1ac80 <argp_parse@@Base+0x1e14>
   1aa80:	bl	11400 <fprintf@plt>
   1aa84:	add	sp, sp, #84	; 0x54
   1aa88:	pop	{r4, r5, r6, lr}
   1aa8c:	add	sp, sp, #4
   1aa90:	bx	lr
   1aa94:	ldr	ip, [sp, #72]	; 0x48
   1aa98:	ldr	r1, [sp, #68]	; 0x44
   1aa9c:	ldr	lr, [sp, #56]	; 0x38
   1aaa0:	str	ip, [sp, #24]
   1aaa4:	str	r1, [sp, #20]
   1aaa8:	ldr	ip, [sp, #52]	; 0x34
   1aaac:	ldr	r1, [sp, #48]	; 0x30
   1aab0:	ldr	r6, [sp, #64]	; 0x40
   1aab4:	ldr	r4, [sp, #60]	; 0x3c
   1aab8:	stm	sp, {r1, ip, lr}
   1aabc:	mov	r0, r5
   1aac0:	ldr	r3, [sp, #44]	; 0x2c
   1aac4:	ldr	r2, [sp, #40]	; 0x28
   1aac8:	str	r6, [sp, #16]
   1aacc:	str	r4, [sp, #12]
   1aad0:	ldr	r1, [pc, #428]	; 1ac84 <argp_parse@@Base+0x1e18>
   1aad4:	bl	11400 <fprintf@plt>
   1aad8:	b	1aa84 <argp_parse@@Base+0x1c18>
   1aadc:	mov	r0, r5
   1aae0:	ldr	r2, [sp, #40]	; 0x28
   1aae4:	ldr	r1, [pc, #412]	; 1ac88 <argp_parse@@Base+0x1e1c>
   1aae8:	bl	11400 <fprintf@plt>
   1aaec:	b	1aa84 <argp_parse@@Base+0x1c18>
   1aaf0:	mov	r0, r5
   1aaf4:	ldr	r3, [sp, #44]	; 0x2c
   1aaf8:	ldr	r2, [sp, #40]	; 0x28
   1aafc:	ldr	r1, [pc, #392]	; 1ac8c <argp_parse@@Base+0x1e20>
   1ab00:	bl	11400 <fprintf@plt>
   1ab04:	b	1aa84 <argp_parse@@Base+0x1c18>
   1ab08:	ldr	r1, [sp, #48]	; 0x30
   1ab0c:	ldr	r3, [sp, #44]	; 0x2c
   1ab10:	str	r1, [sp]
   1ab14:	ldr	r2, [sp, #40]	; 0x28
   1ab18:	mov	r0, r5
   1ab1c:	ldr	r1, [pc, #364]	; 1ac90 <argp_parse@@Base+0x1e24>
   1ab20:	bl	11400 <fprintf@plt>
   1ab24:	b	1aa84 <argp_parse@@Base+0x1c18>
   1ab28:	ldr	r1, [sp, #48]	; 0x30
   1ab2c:	ldr	ip, [sp, #52]	; 0x34
   1ab30:	ldr	r3, [sp, #44]	; 0x2c
   1ab34:	ldr	r2, [sp, #40]	; 0x28
   1ab38:	stm	sp, {r1, ip}
   1ab3c:	mov	r0, r5
   1ab40:	ldr	r1, [pc, #332]	; 1ac94 <argp_parse@@Base+0x1e28>
   1ab44:	bl	11400 <fprintf@plt>
   1ab48:	b	1aa84 <argp_parse@@Base+0x1c18>
   1ab4c:	add	r1, sp, #48	; 0x30
   1ab50:	ldr	r3, [sp, #44]	; 0x2c
   1ab54:	ldm	r1, {r1, ip, lr}
   1ab58:	mov	r0, r5
   1ab5c:	ldr	r2, [sp, #40]	; 0x28
   1ab60:	stm	sp, {r1, ip, lr}
   1ab64:	ldr	r1, [pc, #300]	; 1ac98 <argp_parse@@Base+0x1e2c>
   1ab68:	bl	11400 <fprintf@plt>
   1ab6c:	b	1aa84 <argp_parse@@Base+0x1c18>
   1ab70:	add	r1, sp, #48	; 0x30
   1ab74:	ldr	r4, [sp, #60]	; 0x3c
   1ab78:	ldm	r1, {r1, ip, lr}
   1ab7c:	mov	r0, r5
   1ab80:	ldr	r3, [sp, #44]	; 0x2c
   1ab84:	ldr	r2, [sp, #40]	; 0x28
   1ab88:	stm	sp, {r1, ip, lr}
   1ab8c:	str	r4, [sp, #12]
   1ab90:	ldr	r1, [pc, #260]	; 1ac9c <argp_parse@@Base+0x1e30>
   1ab94:	bl	11400 <fprintf@plt>
   1ab98:	b	1aa84 <argp_parse@@Base+0x1c18>
   1ab9c:	add	r1, sp, #48	; 0x30
   1aba0:	ldr	r6, [sp, #64]	; 0x40
   1aba4:	ldm	r1, {r1, ip, lr}
   1aba8:	mov	r0, r5
   1abac:	ldr	r4, [sp, #60]	; 0x3c
   1abb0:	ldr	r3, [sp, #44]	; 0x2c
   1abb4:	stm	sp, {r1, ip, lr}
   1abb8:	ldr	r2, [sp, #40]	; 0x28
   1abbc:	str	r6, [sp, #16]
   1abc0:	str	r4, [sp, #12]
   1abc4:	ldr	r1, [pc, #212]	; 1aca0 <argp_parse@@Base+0x1e34>
   1abc8:	bl	11400 <fprintf@plt>
   1abcc:	b	1aa84 <argp_parse@@Base+0x1c18>
   1abd0:	ldr	r1, [sp, #68]	; 0x44
   1abd4:	ldr	lr, [sp, #56]	; 0x38
   1abd8:	ldr	ip, [sp, #52]	; 0x34
   1abdc:	str	r1, [sp, #20]
   1abe0:	ldr	r1, [sp, #48]	; 0x30
   1abe4:	ldr	r6, [sp, #64]	; 0x40
   1abe8:	ldr	r4, [sp, #60]	; 0x3c
   1abec:	stm	sp, {r1, ip, lr}
   1abf0:	mov	r0, r5
   1abf4:	ldr	r3, [sp, #44]	; 0x2c
   1abf8:	ldr	r2, [sp, #40]	; 0x28
   1abfc:	str	r6, [sp, #16]
   1ac00:	str	r4, [sp, #12]
   1ac04:	ldr	r1, [pc, #152]	; 1aca4 <argp_parse@@Base+0x1e38>
   1ac08:	bl	11400 <fprintf@plt>
   1ac0c:	b	1aa84 <argp_parse@@Base+0x1c18>
   1ac10:	ldr	r1, [pc, #144]	; 1aca8 <argp_parse@@Base+0x1e3c>
   1ac14:	mov	r0, r5
   1ac18:	bl	11400 <fprintf@plt>
   1ac1c:	b	1a9d0 <argp_parse@@Base+0x1b64>
   1ac20:	mov	r4, lr
   1ac24:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac28:	mov	r4, #1
   1ac2c:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac30:	mov	r4, #2
   1ac34:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac38:	mov	r4, #3
   1ac3c:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac40:	mov	r4, #4
   1ac44:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac48:	mov	r4, #5
   1ac4c:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac50:	mov	r4, #6
   1ac54:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac58:	mov	r4, #7
   1ac5c:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac60:	mov	r4, #8
   1ac64:	b	1a9ac <argp_parse@@Base+0x1b40>
   1ac68:	ldrdeq	lr, [r1], -ip
   1ac6c:	andeq	r0, r0, r6, ror #15
   1ac70:	strdeq	lr, [r1], -r0
   1ac74:	strdeq	lr, [r1], -r0
   1ac78:	andeq	lr, r1, r8, lsl r7
   1ac7c:	strdeq	lr, [r1], -r4
   1ac80:	andeq	lr, r1, r4, lsl #18
   1ac84:	ldrdeq	lr, [r1], -r0
   1ac88:	andeq	lr, r1, r4, asr #15
   1ac8c:	ldrdeq	lr, [r1], -r4
   1ac90:	andeq	lr, r1, ip, ror #15
   1ac94:	andeq	lr, r1, r8, lsl #16
   1ac98:	andeq	lr, r1, r8, lsr #16
   1ac9c:	andeq	lr, r1, ip, asr #16
   1aca0:	andeq	lr, r1, r4, ror r8
   1aca4:	andeq	lr, r1, r0, lsr #17
   1aca8:	andeq	lr, r1, r8, ror #13
   1acac:	ldr	r3, [pc, #56]	; 1acec <argp_parse@@Base+0x1e80>
   1acb0:	push	{r4, lr}
   1acb4:	mov	r0, #10
   1acb8:	ldr	r1, [r3]
   1acbc:	bl	114cc <fputc@plt>
   1acc0:	ldr	r1, [pc, #40]	; 1acf0 <argp_parse@@Base+0x1e84>
   1acc4:	ldr	r0, [pc, #40]	; 1acf4 <argp_parse@@Base+0x1e88>
   1acc8:	bl	11220 <printf@plt>
   1accc:	ldr	r1, [pc, #36]	; 1acf8 <argp_parse@@Base+0x1e8c>
   1acd0:	ldr	r2, [pc, #36]	; 1acfc <argp_parse@@Base+0x1e90>
   1acd4:	ldr	r0, [pc, #36]	; 1ad00 <argp_parse@@Base+0x1e94>
   1acd8:	bl	11220 <printf@plt>
   1acdc:	ldr	r1, [pc, #32]	; 1ad04 <argp_parse@@Base+0x1e98>
   1ace0:	ldr	r0, [pc, #32]	; 1ad08 <argp_parse@@Base+0x1e9c>
   1ace4:	pop	{r4, lr}
   1ace8:	b	11220 <printf@plt>
   1acec:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   1acf0:	andeq	lr, r1, r0, asr #18
   1acf4:	andeq	lr, r1, r8, asr r9
   1acf8:	andeq	lr, r1, r8, lsl #13
   1acfc:	andeq	lr, r1, ip, ror #18
   1ad00:	muleq	r1, r4, r9
   1ad04:	andeq	lr, r1, r8, lsr #19
   1ad08:	andeq	lr, r1, r8, asr #19
   1ad0c:	push	{r4, r5, r6, lr}
   1ad10:	mov	r6, r0
   1ad14:	mov	r5, r1
   1ad18:	mov	r4, r2
   1ad1c:	bl	1d4dc <argp_parse@@Base+0x4670>
   1ad20:	cmp	r0, #0
   1ad24:	popne	{r4, r5, r6, pc}
   1ad28:	cmp	r6, #0
   1ad2c:	beq	1ad3c <argp_parse@@Base+0x1ed0>
   1ad30:	cmp	r5, #0
   1ad34:	cmpne	r4, #0
   1ad38:	popeq	{r4, r5, r6, pc}
   1ad3c:	bl	1b388 <argp_parse@@Base+0x251c>
   1ad40:	push	{r4, lr}
   1ad44:	bl	1b3fc <argp_parse@@Base+0x2590>
   1ad48:	cmp	r0, #0
   1ad4c:	popne	{r4, pc}
   1ad50:	bl	1b388 <argp_parse@@Base+0x251c>
   1ad54:	push	{r4, lr}
   1ad58:	bl	1b3fc <argp_parse@@Base+0x2590>
   1ad5c:	cmp	r0, #0
   1ad60:	popne	{r4, pc}
   1ad64:	bl	1b388 <argp_parse@@Base+0x251c>
   1ad68:	push	{r4, lr}
   1ad6c:	bl	1b3fc <argp_parse@@Base+0x2590>
   1ad70:	cmp	r0, #0
   1ad74:	popne	{r4, pc}
   1ad78:	bl	1b388 <argp_parse@@Base+0x251c>
   1ad7c:	push	{r4, r5, r6, lr}
   1ad80:	mov	r5, r0
   1ad84:	mov	r4, r1
   1ad88:	bl	1b428 <argp_parse@@Base+0x25bc>
   1ad8c:	cmp	r0, #0
   1ad90:	popne	{r4, r5, r6, pc}
   1ad94:	adds	r4, r4, #0
   1ad98:	movne	r4, #1
   1ad9c:	cmp	r5, #0
   1ada0:	orreq	r4, r4, #1
   1ada4:	cmp	r4, #0
   1ada8:	popeq	{r4, r5, r6, pc}
   1adac:	bl	1b388 <argp_parse@@Base+0x251c>
   1adb0:	push	{r4, lr}
   1adb4:	cmp	r1, #0
   1adb8:	orreq	r1, r1, #1
   1adbc:	bl	1b428 <argp_parse@@Base+0x25bc>
   1adc0:	cmp	r0, #0
   1adc4:	popne	{r4, pc}
   1adc8:	bl	1b388 <argp_parse@@Base+0x251c>
   1adcc:	push	{r4, r5, r6, lr}
   1add0:	mov	r6, r0
   1add4:	mov	r5, r1
   1add8:	mov	r4, r2
   1addc:	bl	1d4dc <argp_parse@@Base+0x4670>
   1ade0:	cmp	r0, #0
   1ade4:	popne	{r4, r5, r6, pc}
   1ade8:	cmp	r6, #0
   1adec:	beq	1adfc <argp_parse@@Base+0x1f90>
   1adf0:	cmp	r5, #0
   1adf4:	cmpne	r4, #0
   1adf8:	popeq	{r4, r5, r6, pc}
   1adfc:	bl	1b388 <argp_parse@@Base+0x251c>
   1ae00:	cmp	r2, #0
   1ae04:	cmpne	r1, #0
   1ae08:	moveq	r2, #1
   1ae0c:	moveq	r1, r2
   1ae10:	push	{r4, lr}
   1ae14:	bl	1d4dc <argp_parse@@Base+0x4670>
   1ae18:	cmp	r0, #0
   1ae1c:	popne	{r4, pc}
   1ae20:	bl	1b388 <argp_parse@@Base+0x251c>
   1ae24:	push	{r4, lr}
   1ae28:	mov	r2, r1
   1ae2c:	mov	r1, r0
   1ae30:	mov	r0, #0
   1ae34:	bl	1d4dc <argp_parse@@Base+0x4670>
   1ae38:	cmp	r0, #0
   1ae3c:	popne	{r4, pc}
   1ae40:	bl	1b388 <argp_parse@@Base+0x251c>
   1ae44:	cmp	r1, #0
   1ae48:	cmpne	r0, #0
   1ae4c:	moveq	r2, #1
   1ae50:	movne	r2, r1
   1ae54:	moveq	r1, r2
   1ae58:	movne	r1, r0
   1ae5c:	push	{r4, lr}
   1ae60:	mov	r0, #0
   1ae64:	bl	1d4dc <argp_parse@@Base+0x4670>
   1ae68:	cmp	r0, #0
   1ae6c:	popne	{r4, pc}
   1ae70:	bl	1b388 <argp_parse@@Base+0x251c>
   1ae74:	cmp	r0, #0
   1ae78:	push	{r4, r5, r6, lr}
   1ae7c:	mov	r5, r1
   1ae80:	ldr	r4, [r1]
   1ae84:	beq	1aec0 <argp_parse@@Base+0x2054>
   1ae88:	lsr	r2, r4, #1
   1ae8c:	add	r3, r2, #1
   1ae90:	mvn	r3, r3
   1ae94:	cmp	r4, r3
   1ae98:	bhi	1aedc <argp_parse@@Base+0x2070>
   1ae9c:	add	r4, r4, #1
   1aea0:	add	r4, r4, r2
   1aea4:	mov	r1, r4
   1aea8:	mov	r2, #1
   1aeac:	bl	1d4dc <argp_parse@@Base+0x4670>
   1aeb0:	cmp	r0, #0
   1aeb4:	beq	1aee0 <argp_parse@@Base+0x2074>
   1aeb8:	str	r4, [r5]
   1aebc:	pop	{r4, r5, r6, pc}
   1aec0:	cmp	r4, #0
   1aec4:	moveq	r4, #64	; 0x40
   1aec8:	mov	r1, r4
   1aecc:	mov	r2, #1
   1aed0:	bl	1d4dc <argp_parse@@Base+0x4670>
   1aed4:	cmp	r0, #0
   1aed8:	bne	1aeb8 <argp_parse@@Base+0x204c>
   1aedc:	bl	1b388 <argp_parse@@Base+0x251c>
   1aee0:	cmp	r4, #0
   1aee4:	bne	1aedc <argp_parse@@Base+0x2070>
   1aee8:	str	r4, [r5]
   1aeec:	pop	{r4, r5, r6, pc}
   1aef0:	cmp	r0, #0
   1aef4:	push	{r4, r5, r6, lr}
   1aef8:	mov	r5, r1
   1aefc:	ldr	r4, [r1]
   1af00:	mov	r6, r2
   1af04:	beq	1af48 <argp_parse@@Base+0x20dc>
   1af08:	lsr	r1, r4, #1
   1af0c:	add	r3, r1, #1
   1af10:	mvn	r3, r3
   1af14:	cmp	r4, r3
   1af18:	bhi	1af80 <argp_parse@@Base+0x2114>
   1af1c:	add	r4, r4, #1
   1af20:	add	r4, r4, r1
   1af24:	mov	r1, r4
   1af28:	bl	1d4dc <argp_parse@@Base+0x4670>
   1af2c:	cmp	r0, #0
   1af30:	bne	1af40 <argp_parse@@Base+0x20d4>
   1af34:	cmp	r4, #0
   1af38:	cmpne	r6, #0
   1af3c:	bne	1af80 <argp_parse@@Base+0x2114>
   1af40:	str	r4, [r5]
   1af44:	pop	{r4, r5, r6, pc}
   1af48:	cmp	r4, #0
   1af4c:	bne	1af68 <argp_parse@@Base+0x20fc>
   1af50:	mov	r1, r2
   1af54:	mov	r0, #64	; 0x40
   1af58:	bl	1d528 <argp_parse@@Base+0x46bc>
   1af5c:	cmp	r0, #0
   1af60:	movne	r4, r0
   1af64:	addeq	r4, r0, #1
   1af68:	mov	r2, r6
   1af6c:	mov	r1, r4
   1af70:	mov	r0, #0
   1af74:	bl	1d4dc <argp_parse@@Base+0x4670>
   1af78:	cmp	r0, #0
   1af7c:	bne	1af40 <argp_parse@@Base+0x20d4>
   1af80:	bl	1b388 <argp_parse@@Base+0x251c>
   1af84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af88:	sub	sp, sp, #12
   1af8c:	ldr	r6, [r1]
   1af90:	mov	r8, r1
   1af94:	mov	r9, r0
   1af98:	asrs	r4, r6, #1
   1af9c:	mov	sl, r2
   1afa0:	mov	fp, r3
   1afa4:	ldr	r7, [sp, #48]	; 0x30
   1afa8:	bmi	1b124 <argp_parse@@Base+0x22b8>
   1afac:	mvn	r1, #-2147483648	; 0x80000000
   1afb0:	sub	r1, r1, r4
   1afb4:	cmp	r6, r1
   1afb8:	movle	r1, #0
   1afbc:	movgt	r1, #1
   1afc0:	mvn	r3, fp
   1afc4:	cmp	r1, #0
   1afc8:	addeq	r4, r4, r6
   1afcc:	mvnne	r4, #-2147483648	; 0x80000000
   1afd0:	lsr	r3, r3, #31
   1afd4:	cmp	fp, r4
   1afd8:	movge	r2, #0
   1afdc:	andlt	r2, r3, #1
   1afe0:	cmp	r2, #0
   1afe4:	beq	1b0d4 <argp_parse@@Base+0x2268>
   1afe8:	cmp	r7, #0
   1afec:	blt	1b1bc <argp_parse@@Base+0x2350>
   1aff0:	bne	1b1b4 <argp_parse@@Base+0x2348>
   1aff4:	mov	r5, #64	; 0x40
   1aff8:	mov	r1, r7
   1affc:	mov	r0, r5
   1b000:	str	r3, [sp, #4]
   1b004:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b008:	mov	r1, r7
   1b00c:	mov	r4, r0
   1b010:	mov	r0, r5
   1b014:	bl	1d954 <argp_parse@@Base+0x4ae8>
   1b018:	ldr	r3, [sp, #4]
   1b01c:	sub	r5, r5, r1
   1b020:	cmp	r9, #0
   1b024:	sub	r2, r4, r6
   1b028:	streq	r9, [r8]
   1b02c:	cmp	r2, sl
   1b030:	bge	1b0b4 <argp_parse@@Base+0x2248>
   1b034:	cmp	sl, #0
   1b038:	blt	1b154 <argp_parse@@Base+0x22e8>
   1b03c:	cmp	r6, #0
   1b040:	blt	1b060 <argp_parse@@Base+0x21f4>
   1b044:	mvn	r2, #-2147483648	; 0x80000000
   1b048:	sub	r2, r2, sl
   1b04c:	cmp	r6, r2
   1b050:	movle	r2, #0
   1b054:	movgt	r2, #1
   1b058:	cmp	r2, #0
   1b05c:	bne	1b150 <argp_parse@@Base+0x22e4>
   1b060:	add	r6, r6, sl
   1b064:	cmp	fp, r6
   1b068:	movge	r3, #0
   1b06c:	andlt	r3, r3, #1
   1b070:	cmp	r3, #0
   1b074:	mov	r4, r6
   1b078:	bne	1b150 <argp_parse@@Base+0x22e4>
   1b07c:	cmp	r7, #0
   1b080:	blt	1b168 <argp_parse@@Base+0x22fc>
   1b084:	beq	1b0b0 <argp_parse@@Base+0x2244>
   1b088:	cmp	r6, #0
   1b08c:	blt	1b20c <argp_parse@@Base+0x23a0>
   1b090:	mov	r1, r7
   1b094:	mvn	r0, #-2147483648	; 0x80000000
   1b098:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b09c:	cmp	r6, r0
   1b0a0:	movle	r0, #0
   1b0a4:	movgt	r0, #1
   1b0a8:	cmp	r0, #0
   1b0ac:	bne	1b150 <argp_parse@@Base+0x22e4>
   1b0b0:	mul	r5, r6, r7
   1b0b4:	mov	r1, r5
   1b0b8:	mov	r0, r9
   1b0bc:	bl	1b428 <argp_parse@@Base+0x25bc>
   1b0c0:	cmp	r0, #0
   1b0c4:	beq	1b138 <argp_parse@@Base+0x22cc>
   1b0c8:	str	r4, [r8]
   1b0cc:	add	sp, sp, #12
   1b0d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0d4:	cmp	r7, #0
   1b0d8:	blt	1b194 <argp_parse@@Base+0x2328>
   1b0dc:	beq	1aff4 <argp_parse@@Base+0x2188>
   1b0e0:	cmp	r4, #0
   1b0e4:	blt	1b1c4 <argp_parse@@Base+0x2358>
   1b0e8:	mov	r1, r7
   1b0ec:	mvn	r0, #-2147483648	; 0x80000000
   1b0f0:	str	r3, [sp, #4]
   1b0f4:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b0f8:	ldr	r3, [sp, #4]
   1b0fc:	cmp	r0, r4
   1b100:	movge	r0, #0
   1b104:	movlt	r0, #1
   1b108:	cmp	r0, #0
   1b10c:	mvnne	r5, #-2147483648	; 0x80000000
   1b110:	bne	1aff8 <argp_parse@@Base+0x218c>
   1b114:	mul	r5, r7, r4
   1b118:	cmp	r5, #63	; 0x3f
   1b11c:	bgt	1b020 <argp_parse@@Base+0x21b4>
   1b120:	b	1aff4 <argp_parse@@Base+0x2188>
   1b124:	rsb	r1, r4, #-2147483648	; 0x80000000
   1b128:	cmp	r6, r1
   1b12c:	movge	r1, #0
   1b130:	movlt	r1, #1
   1b134:	b	1afc0 <argp_parse@@Base+0x2154>
   1b138:	adds	r5, r5, #0
   1b13c:	movne	r5, #1
   1b140:	cmp	r9, #0
   1b144:	orreq	r5, r5, #1
   1b148:	cmp	r5, #0
   1b14c:	beq	1b0c8 <argp_parse@@Base+0x225c>
   1b150:	bl	1b388 <argp_parse@@Base+0x251c>
   1b154:	rsb	r2, sl, #-2147483648	; 0x80000000
   1b158:	cmp	r6, r2
   1b15c:	movge	r2, #0
   1b160:	movlt	r2, #1
   1b164:	b	1b058 <argp_parse@@Base+0x21ec>
   1b168:	cmp	r6, #0
   1b16c:	blt	1b1f0 <argp_parse@@Base+0x2384>
   1b170:	cmn	r7, #1
   1b174:	beq	1b0b0 <argp_parse@@Base+0x2244>
   1b178:	mov	r1, r7
   1b17c:	mov	r0, #-2147483648	; 0x80000000
   1b180:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b184:	cmp	r6, r0
   1b188:	movle	r0, #0
   1b18c:	movgt	r0, #1
   1b190:	b	1b0a8 <argp_parse@@Base+0x223c>
   1b194:	cmp	r4, #0
   1b198:	blt	1b230 <argp_parse@@Base+0x23c4>
   1b19c:	cmn	r7, #1
   1b1a0:	beq	1b114 <argp_parse@@Base+0x22a8>
   1b1a4:	str	r3, [sp, #4]
   1b1a8:	mov	r1, r7
   1b1ac:	mov	r0, #-2147483648	; 0x80000000
   1b1b0:	b	1b0f4 <argp_parse@@Base+0x2288>
   1b1b4:	mov	r4, fp
   1b1b8:	b	1b0e8 <argp_parse@@Base+0x227c>
   1b1bc:	mov	r4, fp
   1b1c0:	b	1b19c <argp_parse@@Base+0x2330>
   1b1c4:	cmn	r4, #1
   1b1c8:	beq	1b114 <argp_parse@@Base+0x22a8>
   1b1cc:	mov	r1, r4
   1b1d0:	mov	r0, #-2147483648	; 0x80000000
   1b1d4:	str	r3, [sp, #4]
   1b1d8:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b1dc:	ldr	r3, [sp, #4]
   1b1e0:	cmp	r7, r0
   1b1e4:	movle	r0, #0
   1b1e8:	movgt	r0, #1
   1b1ec:	b	1b108 <argp_parse@@Base+0x229c>
   1b1f0:	mov	r1, r7
   1b1f4:	mvn	r0, #-2147483648	; 0x80000000
   1b1f8:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b1fc:	cmp	r6, r0
   1b200:	movge	r0, #0
   1b204:	movlt	r0, #1
   1b208:	b	1b0a8 <argp_parse@@Base+0x223c>
   1b20c:	cmn	r6, #1
   1b210:	beq	1b0b0 <argp_parse@@Base+0x2244>
   1b214:	mov	r1, r6
   1b218:	mov	r0, #-2147483648	; 0x80000000
   1b21c:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b220:	cmp	r7, r0
   1b224:	movle	r0, #0
   1b228:	movgt	r0, #1
   1b22c:	b	1b0a8 <argp_parse@@Base+0x223c>
   1b230:	mov	r1, r7
   1b234:	mvn	r0, #-2147483648	; 0x80000000
   1b238:	str	r3, [sp, #4]
   1b23c:	bl	1d734 <argp_parse@@Base+0x48c8>
   1b240:	ldr	r3, [sp, #4]
   1b244:	cmp	r0, r4
   1b248:	movle	r0, #0
   1b24c:	movgt	r0, #1
   1b250:	b	1b108 <argp_parse@@Base+0x229c>
   1b254:	push	{r4, lr}
   1b258:	mov	r1, #1
   1b25c:	bl	1b3b4 <argp_parse@@Base+0x2548>
   1b260:	cmp	r0, #0
   1b264:	popne	{r4, pc}
   1b268:	bl	1b388 <argp_parse@@Base+0x251c>
   1b26c:	push	{r4, lr}
   1b270:	mov	r1, #1
   1b274:	bl	1b3b4 <argp_parse@@Base+0x2548>
   1b278:	cmp	r0, #0
   1b27c:	popne	{r4, pc}
   1b280:	bl	1b388 <argp_parse@@Base+0x251c>
   1b284:	push	{r4, lr}
   1b288:	bl	1b3b4 <argp_parse@@Base+0x2548>
   1b28c:	cmp	r0, #0
   1b290:	popne	{r4, pc}
   1b294:	bl	1b388 <argp_parse@@Base+0x251c>
   1b298:	push	{r4, lr}
   1b29c:	bl	1b3b4 <argp_parse@@Base+0x2548>
   1b2a0:	cmp	r0, #0
   1b2a4:	popne	{r4, pc}
   1b2a8:	bl	1b388 <argp_parse@@Base+0x251c>
   1b2ac:	push	{r4, r5, r6, lr}
   1b2b0:	mov	r6, r0
   1b2b4:	mov	r0, r1
   1b2b8:	mov	r4, r1
   1b2bc:	bl	1b3fc <argp_parse@@Base+0x2590>
   1b2c0:	subs	r5, r0, #0
   1b2c4:	beq	1b2dc <argp_parse@@Base+0x2470>
   1b2c8:	mov	r2, r4
   1b2cc:	mov	r1, r6
   1b2d0:	bl	11298 <memcpy@plt>
   1b2d4:	mov	r0, r5
   1b2d8:	pop	{r4, r5, r6, pc}
   1b2dc:	bl	1b388 <argp_parse@@Base+0x251c>
   1b2e0:	push	{r4, r5, r6, lr}
   1b2e4:	mov	r6, r0
   1b2e8:	mov	r0, r1
   1b2ec:	mov	r4, r1
   1b2f0:	bl	1b3fc <argp_parse@@Base+0x2590>
   1b2f4:	subs	r5, r0, #0
   1b2f8:	beq	1b310 <argp_parse@@Base+0x24a4>
   1b2fc:	mov	r2, r4
   1b300:	mov	r1, r6
   1b304:	bl	11298 <memcpy@plt>
   1b308:	mov	r0, r5
   1b30c:	pop	{r4, r5, r6, pc}
   1b310:	bl	1b388 <argp_parse@@Base+0x251c>
   1b314:	push	{r4, r5, r6, lr}
   1b318:	mov	r6, r0
   1b31c:	add	r0, r1, #1
   1b320:	mov	r4, r1
   1b324:	bl	1b3fc <argp_parse@@Base+0x2590>
   1b328:	subs	r5, r0, #0
   1b32c:	beq	1b34c <argp_parse@@Base+0x24e0>
   1b330:	mov	r3, #0
   1b334:	mov	r1, r6
   1b338:	strb	r3, [r5, r4]
   1b33c:	mov	r2, r4
   1b340:	bl	11298 <memcpy@plt>
   1b344:	mov	r0, r5
   1b348:	pop	{r4, r5, r6, pc}
   1b34c:	bl	1b388 <argp_parse@@Base+0x251c>
   1b350:	push	{r4, r5, r6, lr}
   1b354:	mov	r6, r0
   1b358:	bl	113e8 <strlen@plt>
   1b35c:	add	r4, r0, #1
   1b360:	mov	r0, r4
   1b364:	bl	1b3fc <argp_parse@@Base+0x2590>
   1b368:	subs	r5, r0, #0
   1b36c:	beq	1b384 <argp_parse@@Base+0x2518>
   1b370:	mov	r2, r4
   1b374:	mov	r1, r6
   1b378:	bl	11298 <memcpy@plt>
   1b37c:	mov	r0, r5
   1b380:	pop	{r4, r5, r6, pc}
   1b384:	bl	1b388 <argp_parse@@Base+0x251c>
   1b388:	ldr	r1, [pc, #24]	; 1b3a8 <argp_parse@@Base+0x253c>
   1b38c:	push	{r4, lr}
   1b390:	ldr	r0, [r1]
   1b394:	ldr	r3, [pc, #16]	; 1b3ac <argp_parse@@Base+0x2540>
   1b398:	ldr	r2, [pc, #16]	; 1b3b0 <argp_parse@@Base+0x2544>
   1b39c:	mov	r1, #0
   1b3a0:	bl	1134c <error@plt>
   1b3a4:	bl	11544 <abort@plt>
   1b3a8:	andeq	pc, r2, r8, lsr r4	; <UNPREDICTABLE>
   1b3ac:	andeq	lr, r1, r0, lsr #20
   1b3b0:	andeq	sp, r1, r0, lsl #25
   1b3b4:	cmp	r1, #0
   1b3b8:	cmpne	r0, #0
   1b3bc:	moveq	r1, #1
   1b3c0:	moveq	r0, r1
   1b3c4:	umull	r2, r3, r0, r1
   1b3c8:	adds	r3, r3, #0
   1b3cc:	movne	r3, #1
   1b3d0:	cmp	r2, #0
   1b3d4:	blt	1b3e4 <argp_parse@@Base+0x2578>
   1b3d8:	cmp	r3, #0
   1b3dc:	bne	1b3e4 <argp_parse@@Base+0x2578>
   1b3e0:	b	111e4 <calloc@plt>
   1b3e4:	push	{r4, lr}
   1b3e8:	bl	1140c <__errno_location@plt>
   1b3ec:	mov	r3, #12
   1b3f0:	str	r3, [r0]
   1b3f4:	mov	r0, #0
   1b3f8:	pop	{r4, pc}
   1b3fc:	cmp	r0, #0
   1b400:	moveq	r0, #1
   1b404:	cmp	r0, #0
   1b408:	blt	1b410 <argp_parse@@Base+0x25a4>
   1b40c:	b	1137c <malloc@plt>
   1b410:	push	{r4, lr}
   1b414:	bl	1140c <__errno_location@plt>
   1b418:	mov	r3, #12
   1b41c:	str	r3, [r0]
   1b420:	mov	r0, #0
   1b424:	pop	{r4, pc}
   1b428:	cmp	r0, #0
   1b42c:	beq	1b450 <argp_parse@@Base+0x25e4>
   1b430:	cmp	r1, #0
   1b434:	push	{lr}		; (str lr, [sp, #-4]!)
   1b438:	sub	sp, sp, #12
   1b43c:	beq	1b458 <argp_parse@@Base+0x25ec>
   1b440:	blt	1b470 <argp_parse@@Base+0x2604>
   1b444:	add	sp, sp, #12
   1b448:	pop	{lr}		; (ldr lr, [sp], #4)
   1b44c:	b	112e0 <realloc@plt>
   1b450:	mov	r0, r1
   1b454:	b	1b3fc <argp_parse@@Base+0x2590>
   1b458:	str	r1, [sp, #4]
   1b45c:	bl	19de8 <argp_parse@@Base+0xf7c>
   1b460:	ldr	r3, [sp, #4]
   1b464:	mov	r0, r3
   1b468:	add	sp, sp, #12
   1b46c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b470:	bl	1140c <__errno_location@plt>
   1b474:	mov	r2, #12
   1b478:	mov	r3, #0
   1b47c:	str	r2, [r0]
   1b480:	b	1b464 <argp_parse@@Base+0x25f8>
   1b484:	push	{r4, r5, r6, r7, r8, lr}
   1b488:	mov	r8, r0
   1b48c:	mov	r0, #36	; 0x24
   1b490:	mov	r7, r1
   1b494:	mov	r6, r2
   1b498:	mov	r5, r3
   1b49c:	bl	1b3fc <argp_parse@@Base+0x2590>
   1b4a0:	subs	r4, r0, #0
   1b4a4:	beq	1b4e8 <argp_parse@@Base+0x267c>
   1b4a8:	mov	r0, #0
   1b4ac:	str	r5, [r4, #12]
   1b4b0:	str	r0, [r4, #20]
   1b4b4:	str	r0, [r4, #16]
   1b4b8:	str	r8, [r4]
   1b4bc:	str	r7, [r4, #4]
   1b4c0:	str	r6, [r4, #8]
   1b4c4:	mov	r0, #200	; 0xc8
   1b4c8:	bl	1b3fc <argp_parse@@Base+0x2590>
   1b4cc:	cmp	r0, #0
   1b4d0:	addne	r3, r0, #200	; 0xc8
   1b4d4:	mov	r5, r0
   1b4d8:	str	r0, [r4, #24]
   1b4dc:	strne	r0, [r4, #28]
   1b4e0:	strne	r3, [r4, #32]
   1b4e4:	beq	1b4f0 <argp_parse@@Base+0x2684>
   1b4e8:	mov	r0, r4
   1b4ec:	pop	{r4, r5, r6, r7, r8, pc}
   1b4f0:	mov	r0, r4
   1b4f4:	bl	19de8 <argp_parse@@Base+0xf7c>
   1b4f8:	mov	r4, r5
   1b4fc:	b	1b4e8 <argp_parse@@Base+0x267c>
   1b500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b504:	mov	r7, r0
   1b508:	ldr	r4, [r0, #24]
   1b50c:	ldr	r3, [r0, #16]
   1b510:	ldr	r9, [r0, #28]
   1b514:	sub	sp, sp, #12
   1b518:	add	r4, r4, r3
   1b51c:	mov	sl, #32
   1b520:	cmp	r4, r9
   1b524:	bcs	1b5f8 <argp_parse@@Base+0x278c>
   1b528:	ldr	r8, [r7, #20]
   1b52c:	cmp	r8, #0
   1b530:	bne	1b59c <argp_parse@@Base+0x2730>
   1b534:	ldr	r5, [r7, #4]
   1b538:	cmp	r5, #0
   1b53c:	beq	1b86c <argp_parse@@Base+0x2a00>
   1b540:	ldr	r2, [r7, #32]
   1b544:	add	r3, r9, r5
   1b548:	cmp	r2, r3
   1b54c:	bls	1b564 <argp_parse@@Base+0x26f8>
   1b550:	b	1b994 <argp_parse@@Base+0x2b28>
   1b554:	cmp	r5, r8
   1b558:	str	r1, [r0, #20]
   1b55c:	strb	sl, [r3]
   1b560:	beq	1b590 <argp_parse@@Base+0x2724>
   1b564:	ldr	r0, [r7]
   1b568:	add	r8, r8, #1
   1b56c:	ldr	r3, [r0, #20]
   1b570:	ldr	r2, [r0, #24]
   1b574:	add	r1, r3, #1
   1b578:	cmp	r3, r2
   1b57c:	bcc	1b554 <argp_parse@@Base+0x26e8>
   1b580:	mov	r1, sl
   1b584:	bl	1149c <__overflow@plt>
   1b588:	cmp	r5, r8
   1b58c:	bne	1b564 <argp_parse@@Base+0x26f8>
   1b590:	ldr	r9, [r7, #28]
   1b594:	mov	r8, r5
   1b598:	str	r5, [r7, #20]
   1b59c:	sub	fp, r9, r4
   1b5a0:	mov	r2, fp
   1b5a4:	mov	r1, #10
   1b5a8:	mov	r0, r4
   1b5ac:	bl	1146c <memchr@plt>
   1b5b0:	cmp	r8, #0
   1b5b4:	movlt	r8, #0
   1b5b8:	movlt	r3, r8
   1b5bc:	mov	r5, r0
   1b5c0:	strlt	r3, [r7, #20]
   1b5c4:	cmp	r5, #0
   1b5c8:	beq	1b88c <argp_parse@@Base+0x2a20>
   1b5cc:	sub	r2, r5, r4
   1b5d0:	ldr	r3, [r7, #8]
   1b5d4:	add	r2, r2, r8
   1b5d8:	cmp	r2, r3
   1b5dc:	bge	1b60c <argp_parse@@Base+0x27a0>
   1b5e0:	ldr	r9, [r7, #28]
   1b5e4:	add	r4, r5, #1
   1b5e8:	mov	r3, #0
   1b5ec:	cmp	r4, r9
   1b5f0:	str	r3, [r7, #20]
   1b5f4:	bcc	1b528 <argp_parse@@Base+0x26bc>
   1b5f8:	ldr	r3, [r7, #24]
   1b5fc:	sub	r9, r9, r3
   1b600:	str	r9, [r7, #16]
   1b604:	add	sp, sp, #12
   1b608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b60c:	ldr	r2, [r7, #12]
   1b610:	sub	r6, r3, #1
   1b614:	cmp	r2, #0
   1b618:	str	r2, [sp, #4]
   1b61c:	blt	1b944 <argp_parse@@Base+0x2ad8>
   1b620:	add	r6, r6, #1
   1b624:	sub	r8, r6, r8
   1b628:	adds	r8, r4, r8
   1b62c:	bcs	1b8c4 <argp_parse@@Base+0x2a58>
   1b630:	bl	113c4 <__ctype_b_loc@plt>
   1b634:	mov	r3, r8
   1b638:	ldr	r0, [r0]
   1b63c:	b	1b648 <argp_parse@@Base+0x27dc>
   1b640:	cmp	r3, r4
   1b644:	bcc	1b8c8 <argp_parse@@Base+0x2a5c>
   1b648:	mov	r1, r3
   1b64c:	sub	r3, r3, #1
   1b650:	ldrb	r2, [r1]
   1b654:	mov	r6, r3
   1b658:	lsl	r2, r2, #1
   1b65c:	ldrh	r2, [r0, r2]
   1b660:	tst	r2, #1
   1b664:	beq	1b640 <argp_parse@@Base+0x27d4>
   1b668:	add	r6, r1, #1
   1b66c:	cmp	r6, r4
   1b670:	bls	1b8dc <argp_parse@@Base+0x2a70>
   1b674:	cmp	r4, r1
   1b678:	bhi	1b8d4 <argp_parse@@Base+0x2a68>
   1b67c:	mov	r1, r3
   1b680:	sub	r8, r4, #1
   1b684:	b	1b6a0 <argp_parse@@Base+0x2834>
   1b688:	ldrb	r3, [r1]
   1b68c:	sub	r1, r1, #1
   1b690:	lsl	r3, r3, #1
   1b694:	ldrh	r3, [r0, r3]
   1b698:	tst	r3, #1
   1b69c:	beq	1b9cc <argp_parse@@Base+0x2b60>
   1b6a0:	cmp	r8, r1
   1b6a4:	mov	r2, r1
   1b6a8:	bne	1b688 <argp_parse@@Base+0x281c>
   1b6ac:	add	r8, r8, #1
   1b6b0:	add	r3, fp, #1
   1b6b4:	add	r3, r4, r3
   1b6b8:	cmp	r6, r3
   1b6bc:	beq	1b79c <argp_parse@@Base+0x2930>
   1b6c0:	add	r5, r8, #1
   1b6c4:	ldr	r3, [sp, #4]
   1b6c8:	sub	r1, r6, r5
   1b6cc:	cmp	r1, r3
   1b6d0:	bge	1b7b8 <argp_parse@@Base+0x294c>
   1b6d4:	cmp	r6, r9
   1b6d8:	bcs	1b7b0 <argp_parse@@Base+0x2944>
   1b6dc:	ldr	r3, [r7, #32]
   1b6e0:	ldr	r2, [sp, #4]
   1b6e4:	sub	r3, r3, r9
   1b6e8:	add	r0, r2, #1
   1b6ec:	cmp	r3, r0
   1b6f0:	bgt	1b9fc <argp_parse@@Base+0x2b90>
   1b6f4:	ldr	r0, [r7, #24]
   1b6f8:	cmp	r8, r0
   1b6fc:	bls	1b710 <argp_parse@@Base+0x28a4>
   1b700:	sub	r2, r8, r0
   1b704:	ldr	r3, [r7]
   1b708:	mov	r1, #1
   1b70c:	bl	112b0 <fwrite_unlocked@plt>
   1b710:	ldr	r0, [r7]
   1b714:	ldr	r2, [r0, #24]
   1b718:	ldr	r3, [r0, #20]
   1b71c:	cmp	r3, r2
   1b720:	addcc	r2, r3, #1
   1b724:	strcc	r2, [r0, #20]
   1b728:	movcc	r2, #10
   1b72c:	strbcc	r2, [r3]
   1b730:	bcs	1ba3c <argp_parse@@Base+0x2bd0>
   1b734:	ldr	r5, [r7, #24]
   1b738:	sub	r4, r4, r5
   1b73c:	sub	r1, r6, r5
   1b740:	add	fp, fp, r4
   1b744:	mov	r9, r1
   1b748:	mov	r2, r5
   1b74c:	ldr	r3, [r7, #12]
   1b750:	cmp	r3, r1
   1b754:	bgt	1b7d4 <argp_parse@@Base+0x2968>
   1b758:	cmp	r3, #0
   1b75c:	mov	r4, r5
   1b760:	ble	1b778 <argp_parse@@Base+0x290c>
   1b764:	strb	sl, [r4], #1
   1b768:	ldr	r3, [r7, #12]
   1b76c:	sub	r1, r4, r5
   1b770:	cmp	r1, r3
   1b774:	blt	1b764 <argp_parse@@Base+0x28f8>
   1b778:	cmp	r4, r6
   1b77c:	bcc	1b850 <argp_parse@@Base+0x29e4>
   1b780:	sub	r9, fp, r9
   1b784:	cmp	r3, #0
   1b788:	add	r9, r4, r9
   1b78c:	mvneq	r3, #0
   1b790:	str	r9, [r7, #28]
   1b794:	str	r3, [r7, #20]
   1b798:	b	1b520 <argp_parse@@Base+0x26b4>
   1b79c:	ldr	r3, [r7, #32]
   1b7a0:	ldr	r2, [sp, #4]
   1b7a4:	sub	r3, r3, r8
   1b7a8:	cmp	r3, r2
   1b7ac:	ble	1b6d4 <argp_parse@@Base+0x2868>
   1b7b0:	add	r5, r8, #1
   1b7b4:	sub	r1, r6, r5
   1b7b8:	mov	r3, #10
   1b7bc:	strb	r3, [r8]
   1b7c0:	ldr	r3, [r7, #12]
   1b7c4:	sub	r9, r6, r4
   1b7c8:	cmp	r3, r1
   1b7cc:	mov	r2, r4
   1b7d0:	ble	1b758 <argp_parse@@Base+0x28ec>
   1b7d4:	add	r1, fp, #1
   1b7d8:	add	r1, r2, r1
   1b7dc:	cmp	r6, r1
   1b7e0:	beq	1b9e8 <argp_parse@@Base+0x2b7c>
   1b7e4:	cmp	r3, #0
   1b7e8:	ble	1b844 <argp_parse@@Base+0x29d8>
   1b7ec:	mov	r4, #0
   1b7f0:	mov	r8, r2
   1b7f4:	b	1b810 <argp_parse@@Base+0x29a4>
   1b7f8:	str	ip, [r0, #20]
   1b7fc:	strb	sl, [r3]
   1b800:	ldr	r3, [r7, #12]
   1b804:	add	r4, r4, #1
   1b808:	cmp	r3, r4
   1b80c:	ble	1b840 <argp_parse@@Base+0x29d4>
   1b810:	ldr	r0, [r7]
   1b814:	ldr	r3, [r0, #20]
   1b818:	ldr	r1, [r0, #24]
   1b81c:	add	ip, r3, #1
   1b820:	cmp	r3, r1
   1b824:	bcc	1b7f8 <argp_parse@@Base+0x298c>
   1b828:	mov	r1, sl
   1b82c:	bl	1149c <__overflow@plt>
   1b830:	ldr	r3, [r7, #12]
   1b834:	add	r4, r4, #1
   1b838:	cmp	r3, r4
   1b83c:	bgt	1b810 <argp_parse@@Base+0x29a4>
   1b840:	mov	r2, r8
   1b844:	mov	r4, r5
   1b848:	cmp	r4, r6
   1b84c:	bcs	1b780 <argp_parse@@Base+0x2914>
   1b850:	add	r2, r2, fp
   1b854:	sub	r2, r2, r6
   1b858:	mov	r1, r6
   1b85c:	mov	r0, r4
   1b860:	bl	11250 <memmove@plt>
   1b864:	ldr	r3, [r7, #12]
   1b868:	b	1b780 <argp_parse@@Base+0x2914>
   1b86c:	sub	fp, r9, r4
   1b870:	mov	r2, fp
   1b874:	mov	r1, #10
   1b878:	mov	r0, r4
   1b87c:	bl	1146c <memchr@plt>
   1b880:	mov	r5, r0
   1b884:	cmp	r5, #0
   1b888:	bne	1b5cc <argp_parse@@Base+0x2760>
   1b88c:	ldr	r6, [r7, #8]
   1b890:	add	r3, fp, r8
   1b894:	cmp	r3, r6
   1b898:	bcc	1ba60 <argp_parse@@Base+0x2bf4>
   1b89c:	ldr	r2, [r7, #12]
   1b8a0:	sub	r6, r6, #1
   1b8a4:	cmp	r2, #0
   1b8a8:	str	r2, [sp, #4]
   1b8ac:	blt	1ba4c <argp_parse@@Base+0x2be0>
   1b8b0:	add	r6, r6, #1
   1b8b4:	sub	r8, r6, r8
   1b8b8:	adds	r8, r4, r8
   1b8bc:	mov	r5, r9
   1b8c0:	bcc	1b630 <argp_parse@@Base+0x27c4>
   1b8c4:	mov	r6, r8
   1b8c8:	add	r6, r6, #1
   1b8cc:	cmp	r4, r6
   1b8d0:	bcs	1b8dc <argp_parse@@Base+0x2a70>
   1b8d4:	mov	r8, r6
   1b8d8:	b	1b6b0 <argp_parse@@Base+0x2844>
   1b8dc:	cmp	r8, r5
   1b8e0:	bcs	1b918 <argp_parse@@Base+0x2aac>
   1b8e4:	add	r6, r8, #1
   1b8e8:	b	1b90c <argp_parse@@Base+0x2aa0>
   1b8ec:	bl	113c4 <__ctype_b_loc@plt>
   1b8f0:	ldrb	r3, [r6]
   1b8f4:	add	r6, r6, #1
   1b8f8:	lsl	r3, r3, #1
   1b8fc:	ldr	r2, [r0]
   1b900:	ldrh	r3, [r2, r3]
   1b904:	tst	r3, #1
   1b908:	bne	1b928 <argp_parse@@Base+0x2abc>
   1b90c:	cmp	r6, r5
   1b910:	mov	r8, r6
   1b914:	bne	1b8ec <argp_parse@@Base+0x2a80>
   1b918:	cmp	r8, r5
   1b91c:	beq	1b9d4 <argp_parse@@Base+0x2b68>
   1b920:	bl	113c4 <__ctype_b_loc@plt>
   1b924:	ldr	r2, [r0]
   1b928:	mov	r6, r8
   1b92c:	ldrb	r3, [r6, #1]!
   1b930:	lsl	r3, r3, #1
   1b934:	ldrh	r3, [r2, r3]
   1b938:	tst	r3, #1
   1b93c:	bne	1b92c <argp_parse@@Base+0x2ac0>
   1b940:	b	1b6b0 <argp_parse@@Base+0x2844>
   1b944:	cmp	r9, r5
   1b948:	str	r3, [sp, #4]
   1b94c:	bls	1ba48 <argp_parse@@Base+0x2bdc>
   1b950:	sub	r0, r6, r8
   1b954:	sub	r2, r9, r5
   1b958:	add	r0, r4, r0
   1b95c:	mov	r1, r5
   1b960:	bl	11250 <memmove@plt>
   1b964:	ldr	r2, [r7, #20]
   1b968:	ldr	r9, [r7, #28]
   1b96c:	sub	r6, r6, r2
   1b970:	add	r6, r4, r6
   1b974:	mov	r3, #0
   1b978:	sub	r5, r6, r5
   1b97c:	str	r3, [r7, #20]
   1b980:	ldr	r3, [sp, #4]
   1b984:	sub	r9, r9, r5
   1b988:	add	r4, r4, r3
   1b98c:	str	r9, [r7, #28]
   1b990:	b	1b520 <argp_parse@@Base+0x26b4>
   1b994:	add	r6, r4, r5
   1b998:	sub	r2, r9, r4
   1b99c:	mov	r1, r4
   1b9a0:	mov	r0, r6
   1b9a4:	bl	11250 <memmove@plt>
   1b9a8:	ldr	r3, [r7, #28]
   1b9ac:	mov	r0, r4
   1b9b0:	add	r3, r3, r5
   1b9b4:	str	r3, [r7, #28]
   1b9b8:	mov	r2, r5
   1b9bc:	mov	r1, sl
   1b9c0:	mov	r4, r6
   1b9c4:	bl	1143c <memset@plt>
   1b9c8:	b	1b590 <argp_parse@@Base+0x2724>
   1b9cc:	add	r8, r2, #1
   1b9d0:	b	1b6b0 <argp_parse@@Base+0x2844>
   1b9d4:	mov	r3, #0
   1b9d8:	str	r3, [r7, #20]
   1b9dc:	add	r4, r8, #1
   1b9e0:	ldr	r9, [r7, #28]
   1b9e4:	b	1b520 <argp_parse@@Base+0x26b4>
   1b9e8:	ldr	r1, [r7, #32]
   1b9ec:	sub	r1, r1, r6
   1b9f0:	cmp	r3, r1
   1b9f4:	ble	1b758 <argp_parse@@Base+0x28ec>
   1b9f8:	b	1b7e4 <argp_parse@@Base+0x2978>
   1b9fc:	sub	r9, r9, r6
   1ba00:	mov	r1, r6
   1ba04:	mov	r2, r9
   1ba08:	add	r0, r8, r0
   1ba0c:	bl	11250 <memmove@plt>
   1ba10:	ldr	r1, [r7, #12]
   1ba14:	mov	r3, #10
   1ba18:	add	r6, r1, #1
   1ba1c:	add	r6, r8, r6
   1ba20:	add	r9, r6, r9
   1ba24:	sub	fp, r9, r4
   1ba28:	add	r5, r8, #1
   1ba2c:	strb	r3, [r8]
   1ba30:	sub	r9, r6, r4
   1ba34:	mov	r2, r4
   1ba38:	b	1b74c <argp_parse@@Base+0x28e0>
   1ba3c:	mov	r1, #10
   1ba40:	bl	1149c <__overflow@plt>
   1ba44:	b	1b734 <argp_parse@@Base+0x28c8>
   1ba48:	add	r3, r8, fp
   1ba4c:	sub	r6, r6, r3
   1ba50:	add	r9, r9, r6
   1ba54:	str	r9, [r7, #28]
   1ba58:	str	r3, [r7, #20]
   1ba5c:	b	1b5f8 <argp_parse@@Base+0x278c>
   1ba60:	str	r3, [r7, #20]
   1ba64:	ldr	r9, [r7, #28]
   1ba68:	b	1b5f8 <argp_parse@@Base+0x278c>
   1ba6c:	push	{r4, lr}
   1ba70:	mov	r4, r0
   1ba74:	bl	1b500 <argp_parse@@Base+0x2694>
   1ba78:	ldr	r2, [r4, #28]
   1ba7c:	ldr	r0, [r4, #24]
   1ba80:	cmp	r2, r0
   1ba84:	bls	1ba9c <argp_parse@@Base+0x2c30>
   1ba88:	sub	r2, r2, r0
   1ba8c:	ldr	r3, [r4]
   1ba90:	mov	r1, #1
   1ba94:	bl	112b0 <fwrite_unlocked@plt>
   1ba98:	ldr	r0, [r4, #24]
   1ba9c:	bl	19de8 <argp_parse@@Base+0xf7c>
   1baa0:	mov	r0, r4
   1baa4:	pop	{r4, lr}
   1baa8:	b	19de8 <argp_parse@@Base+0xf7c>
   1baac:	ldr	r3, [r0, #32]
   1bab0:	ldr	r2, [r0, #28]
   1bab4:	sub	r3, r3, r2
   1bab8:	cmp	r3, r1
   1babc:	bcc	1bacc <argp_parse@@Base+0x2c60>
   1bac0:	mov	r3, #1
   1bac4:	mov	r0, r3
   1bac8:	bx	lr
   1bacc:	push	{r4, r5, r6, lr}
   1bad0:	mov	r4, r0
   1bad4:	mov	r5, r1
   1bad8:	bl	1b500 <argp_parse@@Base+0x2694>
   1badc:	ldr	r3, [r4, #24]
   1bae0:	ldr	r2, [r4, #28]
   1bae4:	mov	r0, r3
   1bae8:	sub	r2, r2, r3
   1baec:	mov	r1, #1
   1baf0:	ldr	r3, [r4]
   1baf4:	bl	112b0 <fwrite_unlocked@plt>
   1baf8:	ldr	r2, [r4, #28]
   1bafc:	ldr	r3, [r4, #24]
   1bb00:	sub	r1, r2, r3
   1bb04:	cmp	r0, r1
   1bb08:	bne	1bb50 <argp_parse@@Base+0x2ce4>
   1bb0c:	ldr	r1, [r4, #32]
   1bb10:	mov	r2, #0
   1bb14:	sub	r1, r1, r3
   1bb18:	cmp	r5, r1
   1bb1c:	str	r3, [r4, #28]
   1bb20:	str	r2, [r4, #16]
   1bb24:	bls	1bb44 <argp_parse@@Base+0x2cd8>
   1bb28:	adds	r5, r5, r1
   1bb2c:	bcc	1bb80 <argp_parse@@Base+0x2d14>
   1bb30:	bl	1140c <__errno_location@plt>
   1bb34:	mov	r2, #12
   1bb38:	mov	r3, #0
   1bb3c:	str	r2, [r0]
   1bb40:	b	1bb48 <argp_parse@@Base+0x2cdc>
   1bb44:	mov	r3, #1
   1bb48:	mov	r0, r3
   1bb4c:	pop	{r4, r5, r6, pc}
   1bb50:	ldr	r1, [r4, #16]
   1bb54:	sub	r2, r2, r0
   1bb58:	sub	r1, r1, r0
   1bb5c:	str	r2, [r4, #28]
   1bb60:	str	r1, [r4, #16]
   1bb64:	sub	r2, r2, r3
   1bb68:	add	r1, r3, r0
   1bb6c:	mov	r0, r3
   1bb70:	bl	11250 <memmove@plt>
   1bb74:	mov	r3, #0
   1bb78:	mov	r0, r3
   1bb7c:	pop	{r4, r5, r6, pc}
   1bb80:	mov	r0, r3
   1bb84:	mov	r1, r5
   1bb88:	bl	1b428 <argp_parse@@Base+0x25bc>
   1bb8c:	cmp	r0, #0
   1bb90:	beq	1bb30 <argp_parse@@Base+0x2cc4>
   1bb94:	add	r5, r0, r5
   1bb98:	mov	r3, #1
   1bb9c:	str	r5, [r4, #32]
   1bba0:	str	r0, [r4, #24]
   1bba4:	str	r0, [r4, #28]
   1bba8:	b	1bb48 <argp_parse@@Base+0x2cdc>
   1bbac:	push	{r1, r2, r3}
   1bbb0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1bbb4:	sub	sp, sp, #8
   1bbb8:	mov	r5, r0
   1bbbc:	ldr	r7, [sp, #36]	; 0x24
   1bbc0:	mov	r4, #150	; 0x96
   1bbc4:	mov	r8, #1
   1bbc8:	mov	r9, #0
   1bbcc:	add	r6, sp, #40	; 0x28
   1bbd0:	ldr	r1, [r5, #32]
   1bbd4:	ldr	r0, [r5, #28]
   1bbd8:	sub	r3, r1, r0
   1bbdc:	cmp	r4, r3
   1bbe0:	bhi	1bc28 <argp_parse@@Base+0x2dbc>
   1bbe4:	sub	r4, r1, r0
   1bbe8:	mov	r1, r4
   1bbec:	mov	r3, r6
   1bbf0:	mov	r2, r7
   1bbf4:	str	r6, [sp, #4]
   1bbf8:	bl	114f0 <vsnprintf@plt>
   1bbfc:	cmp	r4, r0
   1bc00:	bls	1bc20 <argp_parse@@Base+0x2db4>
   1bc04:	ldr	r3, [r5, #28]
   1bc08:	add	r3, r3, r0
   1bc0c:	str	r3, [r5, #28]
   1bc10:	add	sp, sp, #8
   1bc14:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1bc18:	add	sp, sp, #12
   1bc1c:	bx	lr
   1bc20:	add	r4, r0, #1
   1bc24:	b	1bbd0 <argp_parse@@Base+0x2d64>
   1bc28:	mov	r0, r5
   1bc2c:	bl	1b500 <argp_parse@@Base+0x2694>
   1bc30:	ldr	r3, [r5, #24]
   1bc34:	ldr	r2, [r5, #28]
   1bc38:	mov	r0, r3
   1bc3c:	sub	r2, r2, r3
   1bc40:	mov	r1, r8
   1bc44:	ldr	r3, [r5]
   1bc48:	bl	112b0 <fwrite_unlocked@plt>
   1bc4c:	ldr	r2, [r5, #28]
   1bc50:	ldr	r3, [r5, #24]
   1bc54:	sub	r1, r2, r3
   1bc58:	cmp	r0, r1
   1bc5c:	bne	1bca4 <argp_parse@@Base+0x2e38>
   1bc60:	ldr	r1, [r5, #32]
   1bc64:	str	r3, [r5, #28]
   1bc68:	sub	r0, r1, r3
   1bc6c:	cmp	r4, r0
   1bc70:	str	r9, [r5, #16]
   1bc74:	movls	r0, r3
   1bc78:	bls	1bbe4 <argp_parse@@Base+0x2d78>
   1bc7c:	adds	r4, r4, r0
   1bc80:	bcc	1bccc <argp_parse@@Base+0x2e60>
   1bc84:	bl	1140c <__errno_location@plt>
   1bc88:	mov	r3, #12
   1bc8c:	str	r3, [r0]
   1bc90:	mvn	r0, #0
   1bc94:	add	sp, sp, #8
   1bc98:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1bc9c:	add	sp, sp, #12
   1bca0:	bx	lr
   1bca4:	ldr	r1, [r5, #16]
   1bca8:	sub	r2, r2, r0
   1bcac:	sub	r1, r1, r0
   1bcb0:	str	r2, [r5, #28]
   1bcb4:	str	r1, [r5, #16]
   1bcb8:	sub	r2, r2, r3
   1bcbc:	add	r1, r3, r0
   1bcc0:	mov	r0, r3
   1bcc4:	bl	11250 <memmove@plt>
   1bcc8:	b	1bc90 <argp_parse@@Base+0x2e24>
   1bccc:	mov	r1, r4
   1bcd0:	mov	r0, r3
   1bcd4:	bl	1b428 <argp_parse@@Base+0x25bc>
   1bcd8:	cmp	r0, #0
   1bcdc:	add	r1, r0, r4
   1bce0:	beq	1bc84 <argp_parse@@Base+0x2e18>
   1bce4:	str	r0, [r5, #24]
   1bce8:	str	r1, [r5, #32]
   1bcec:	str	r0, [r5, #28]
   1bcf0:	b	1bbe4 <argp_parse@@Base+0x2d78>
   1bcf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bcf8:	ldr	r4, [r1, #32]
   1bcfc:	ldr	r8, [r1, #28]
   1bd00:	ldr	r7, [r1]
   1bd04:	add	r6, r0, r4, lsl #2
   1bd08:	mov	r2, r8
   1bd0c:	mov	r5, r7
   1bd10:	cmp	r5, r4
   1bd14:	movle	r3, #0
   1bd18:	movgt	r3, #1
   1bd1c:	cmp	r2, r4
   1bd20:	movge	r3, #0
   1bd24:	cmp	r3, #0
   1bd28:	beq	1bd9c <argp_parse@@Base+0x2f30>
   1bd2c:	sub	r3, r5, r4
   1bd30:	sub	sl, r4, r2
   1bd34:	cmp	r3, sl
   1bd38:	ble	1bd6c <argp_parse@@Base+0x2f00>
   1bd3c:	sub	r5, r5, sl
   1bd40:	add	sl, sl, r2
   1bd44:	add	ip, r0, r5, lsl #2
   1bd48:	add	sl, r0, sl, lsl #2
   1bd4c:	add	r3, r0, r2, lsl #2
   1bd50:	ldr	r9, [ip]
   1bd54:	ldr	lr, [r3]
   1bd58:	str	r9, [r3], #4
   1bd5c:	cmp	r3, sl
   1bd60:	str	lr, [ip], #4
   1bd64:	bne	1bd50 <argp_parse@@Base+0x2ee4>
   1bd68:	b	1bd10 <argp_parse@@Base+0x2ea4>
   1bd6c:	add	sl, r3, r2
   1bd70:	add	r3, r0, r2, lsl #2
   1bd74:	add	r9, r0, sl, lsl #2
   1bd78:	mov	r2, r6
   1bd7c:	ldr	lr, [r2]
   1bd80:	ldr	ip, [r3]
   1bd84:	str	lr, [r3], #4
   1bd88:	cmp	r9, r3
   1bd8c:	str	ip, [r2], #4
   1bd90:	bne	1bd7c <argp_parse@@Base+0x2f10>
   1bd94:	mov	r2, sl
   1bd98:	b	1bd10 <argp_parse@@Base+0x2ea4>
   1bd9c:	sub	r4, r7, r4
   1bda0:	add	r8, r4, r8
   1bda4:	str	r8, [r1, #28]
   1bda8:	str	r7, [r1, #32]
   1bdac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bdb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bdb4:	sub	sp, sp, #52	; 0x34
   1bdb8:	str	r1, [sp, #24]
   1bdbc:	ldr	r1, [sp, #96]	; 0x60
   1bdc0:	str	r0, [sp, #28]
   1bdc4:	str	r2, [sp, #32]
   1bdc8:	ldr	r8, [r1, #20]
   1bdcc:	str	r3, [sp, #12]
   1bdd0:	mov	r7, r8
   1bdd4:	ldrb	r5, [r8]
   1bdd8:	cmp	r5, #61	; 0x3d
   1bddc:	cmpne	r5, #0
   1bde0:	movne	r5, #1
   1bde4:	moveq	r5, #0
   1bde8:	beq	1be04 <argp_parse@@Base+0x2f98>
   1bdec:	ldrb	r3, [r7, #1]!
   1bdf0:	cmp	r3, #0
   1bdf4:	cmpne	r3, #61	; 0x3d
   1bdf8:	bne	1bdec <argp_parse@@Base+0x2f80>
   1bdfc:	ldr	r3, [sp, #12]
   1be00:	sub	r5, r7, r8
   1be04:	ldr	sl, [r3]
   1be08:	cmp	sl, #0
   1be0c:	beq	1c1e4 <argp_parse@@Base+0x3378>
   1be10:	mov	fp, r3
   1be14:	mov	r4, sl
   1be18:	mov	r6, #0
   1be1c:	str	r3, [sp, #20]
   1be20:	mov	r2, r5
   1be24:	mov	r1, r8
   1be28:	mov	r0, r4
   1be2c:	bl	11538 <strncmp@plt>
   1be30:	mov	r9, fp
   1be34:	cmp	r0, #0
   1be38:	mov	r0, r4
   1be3c:	bne	1be4c <argp_parse@@Base+0x2fe0>
   1be40:	bl	113e8 <strlen@plt>
   1be44:	cmp	r0, r5
   1be48:	beq	1bf0c <argp_parse@@Base+0x30a0>
   1be4c:	ldr	r4, [fp, #16]!
   1be50:	add	r6, r6, #1
   1be54:	cmp	r4, #0
   1be58:	bne	1be20 <argp_parse@@Base+0x2fb4>
   1be5c:	ldr	r3, [sp, #100]	; 0x64
   1be60:	cmp	r3, #0
   1be64:	ldr	r3, [sp, #92]	; 0x5c
   1be68:	beq	1bfb0 <argp_parse@@Base+0x3144>
   1be6c:	cmp	r3, #0
   1be70:	bne	1c0c8 <argp_parse@@Base+0x325c>
   1be74:	mov	fp, r3
   1be78:	mov	r0, sl
   1be7c:	ldr	r4, [sp, #12]
   1be80:	ldr	sl, [sp, #96]	; 0x60
   1be84:	mov	r9, fp
   1be88:	mov	r1, r8
   1be8c:	str	r3, [sp, #16]
   1be90:	str	r3, [sp, #44]	; 0x2c
   1be94:	mvn	r3, #0
   1be98:	str	r3, [sp, #40]	; 0x28
   1be9c:	str	fp, [sp, #36]	; 0x24
   1bea0:	mov	r2, r5
   1bea4:	bl	11538 <strncmp@plt>
   1bea8:	cmp	r0, #0
   1beac:	bne	1bee8 <argp_parse@@Base+0x307c>
   1beb0:	cmp	r9, #0
   1beb4:	beq	1c41c <argp_parse@@Base+0x35b0>
   1beb8:	ldr	r2, [r9, #4]
   1bebc:	ldr	r3, [r4, #4]
   1bec0:	cmp	r2, r3
   1bec4:	beq	1c478 <argp_parse@@Base+0x360c>
   1bec8:	ldr	r3, [sp, #16]
   1becc:	cmp	r3, #0
   1bed0:	bne	1bee8 <argp_parse@@Base+0x307c>
   1bed4:	ldr	r3, [sp, #36]	; 0x24
   1bed8:	cmp	r3, #0
   1bedc:	beq	1c354 <argp_parse@@Base+0x34e8>
   1bee0:	mov	r2, #1
   1bee4:	strb	r2, [r3, fp]
   1bee8:	ldr	r0, [r4, #16]!
   1beec:	add	fp, fp, #1
   1bef0:	cmp	r0, #0
   1bef4:	beq	1c024 <argp_parse@@Base+0x31b8>
   1bef8:	ldr	r1, [sl, #20]
   1befc:	b	1bea0 <argp_parse@@Base+0x3034>
   1bf00:	cmp	r9, #0
   1bf04:	beq	1c1e4 <argp_parse@@Base+0x3378>
   1bf08:	ldr	r6, [sp, #40]	; 0x28
   1bf0c:	ldr	r3, [sp, #96]	; 0x60
   1bf10:	ldr	r0, [sp, #96]	; 0x60
   1bf14:	mov	r1, #0
   1bf18:	ldr	r2, [r3]
   1bf1c:	str	r1, [r0, #20]
   1bf20:	add	r3, r2, #1
   1bf24:	str	r3, [r0]
   1bf28:	ldrb	r1, [r7]
   1bf2c:	cmp	r1, #0
   1bf30:	bne	1bf70 <argp_parse@@Base+0x3104>
   1bf34:	ldr	r1, [r9, #4]
   1bf38:	cmp	r1, #1
   1bf3c:	beq	1c254 <argp_parse@@Base+0x33e8>
   1bf40:	ldr	r3, [sp, #88]	; 0x58
   1bf44:	ldr	r2, [r9, #8]
   1bf48:	cmp	r3, #0
   1bf4c:	strne	r6, [r3]
   1bf50:	cmp	r2, #0
   1bf54:	movne	r3, #0
   1bf58:	ldreq	r3, [r9, #12]
   1bf5c:	ldrne	r1, [r9, #12]
   1bf60:	strne	r1, [r2]
   1bf64:	mov	r0, r3
   1bf68:	add	sp, sp, #52	; 0x34
   1bf6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf70:	ldr	r3, [r9, #4]
   1bf74:	cmp	r3, #0
   1bf78:	movne	r3, r0
   1bf7c:	addne	r7, r7, #1
   1bf80:	strne	r7, [r3, #12]
   1bf84:	bne	1bf40 <argp_parse@@Base+0x30d4>
   1bf88:	ldr	r3, [sp, #100]	; 0x64
   1bf8c:	cmp	r3, #0
   1bf90:	bne	1c1ac <argp_parse@@Base+0x3340>
   1bf94:	ldr	r1, [sp, #96]	; 0x60
   1bf98:	ldr	r2, [r9, #12]
   1bf9c:	mov	r3, #63	; 0x3f
   1bfa0:	str	r2, [r1, #8]
   1bfa4:	mov	r0, r3
   1bfa8:	add	sp, sp, #52	; 0x34
   1bfac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfb0:	cmp	r3, #0
   1bfb4:	bne	1c144 <argp_parse@@Base+0x32d8>
   1bfb8:	mov	fp, r3
   1bfbc:	ldr	r4, [sp, #12]
   1bfc0:	mov	r9, fp
   1bfc4:	mov	r0, sl
   1bfc8:	str	r3, [sp, #16]
   1bfcc:	mvn	r3, #0
   1bfd0:	str	r3, [sp, #40]	; 0x28
   1bfd4:	mov	r2, r5
   1bfd8:	mov	r1, r8
   1bfdc:	bl	11538 <strncmp@plt>
   1bfe0:	cmp	r0, #0
   1bfe4:	bne	1c008 <argp_parse@@Base+0x319c>
   1bfe8:	cmp	r9, #0
   1bfec:	beq	1c410 <argp_parse@@Base+0x35a4>
   1bff0:	ldr	r2, [r9, #4]
   1bff4:	ldr	r3, [r4, #4]
   1bff8:	cmp	r2, r3
   1bffc:	beq	1c44c <argp_parse@@Base+0x35e0>
   1c000:	mov	r3, #1
   1c004:	str	r3, [sp, #16]
   1c008:	ldr	r0, [r4, #16]!
   1c00c:	add	fp, fp, #1
   1c010:	cmp	r0, #0
   1c014:	bne	1bfd4 <argp_parse@@Base+0x3168>
   1c018:	ldr	r3, [sp, #92]	; 0x5c
   1c01c:	str	r0, [sp, #36]	; 0x24
   1c020:	str	r3, [sp, #44]	; 0x2c
   1c024:	ldr	r2, [sp, #36]	; 0x24
   1c028:	ldr	r3, [sp, #16]
   1c02c:	cmp	r3, #0
   1c030:	cmpeq	r2, #0
   1c034:	beq	1bf00 <argp_parse@@Base+0x3094>
   1c038:	ldr	r2, [sp, #100]	; 0x64
   1c03c:	cmp	r2, #0
   1c040:	beq	1c2a4 <argp_parse@@Base+0x3438>
   1c044:	cmp	r3, #0
   1c048:	bne	1c27c <argp_parse@@Base+0x3410>
   1c04c:	ldr	r5, [pc, #1108]	; 1c4a8 <argp_parse@@Base+0x363c>
   1c050:	ldr	r3, [sp, #36]	; 0x24
   1c054:	ldr	r7, [pc, #1104]	; 1c4ac <argp_parse@@Base+0x3640>
   1c058:	ldr	r0, [r5]
   1c05c:	add	r6, r3, r6
   1c060:	mov	r4, r3
   1c064:	bl	114e4 <flockfile@plt>
   1c068:	ldr	r3, [sp, #24]
   1c06c:	ldr	r0, [r5]
   1c070:	ldr	r1, [pc, #1080]	; 1c4b0 <argp_parse@@Base+0x3644>
   1c074:	ldr	r2, [r3]
   1c078:	ldr	r3, [sp, #96]	; 0x60
   1c07c:	ldr	r3, [r3, #20]
   1c080:	str	r3, [sp]
   1c084:	ldr	r3, [sp, #104]	; 0x68
   1c088:	bl	11400 <fprintf@plt>
   1c08c:	ldr	r8, [sp, #16]
   1c090:	ldr	r9, [sp, #12]
   1c094:	b	1c0a4 <argp_parse@@Base+0x3238>
   1c098:	cmp	r4, r6
   1c09c:	add	r8, r8, #1
   1c0a0:	beq	1c434 <argp_parse@@Base+0x35c8>
   1c0a4:	ldrb	r3, [r4], #1
   1c0a8:	cmp	r3, #0
   1c0ac:	beq	1c098 <argp_parse@@Base+0x322c>
   1c0b0:	ldr	r3, [r9, r8, lsl #4]
   1c0b4:	ldr	r2, [sp, #104]	; 0x68
   1c0b8:	mov	r1, r7
   1c0bc:	ldr	r0, [r5]
   1c0c0:	bl	11400 <fprintf@plt>
   1c0c4:	b	1c098 <argp_parse@@Base+0x322c>
   1c0c8:	mov	r9, r4
   1c0cc:	str	r4, [sp, #16]
   1c0d0:	str	r4, [sp, #44]	; 0x2c
   1c0d4:	str	r4, [sp, #36]	; 0x24
   1c0d8:	mov	r1, r8
   1c0dc:	mov	r0, sl
   1c0e0:	mov	r8, r4
   1c0e4:	ldr	sl, [sp, #20]
   1c0e8:	ldr	r4, [sp, #96]	; 0x60
   1c0ec:	mov	fp, #1
   1c0f0:	mvn	r3, #0
   1c0f4:	str	r3, [sp, #40]	; 0x28
   1c0f8:	mov	r2, r5
   1c0fc:	bl	11538 <strncmp@plt>
   1c100:	cmp	r0, #0
   1c104:	bne	1c12c <argp_parse@@Base+0x32c0>
   1c108:	cmp	r9, #0
   1c10c:	beq	1c428 <argp_parse@@Base+0x35bc>
   1c110:	ldr	r3, [sp, #16]
   1c114:	cmp	r3, #0
   1c118:	bne	1c12c <argp_parse@@Base+0x32c0>
   1c11c:	ldr	r3, [sp, #36]	; 0x24
   1c120:	cmp	r3, #0
   1c124:	beq	1c398 <argp_parse@@Base+0x352c>
   1c128:	strb	fp, [r3, r8]
   1c12c:	ldr	r0, [sl, #16]!
   1c130:	add	r8, r8, #1
   1c134:	cmp	r0, #0
   1c138:	beq	1c024 <argp_parse@@Base+0x31b8>
   1c13c:	ldr	r1, [r4, #20]
   1c140:	b	1c0f8 <argp_parse@@Base+0x328c>
   1c144:	ldr	r3, [sp, #100]	; 0x64
   1c148:	mov	r0, sl
   1c14c:	mov	r4, r3
   1c150:	ldr	sl, [sp, #20]
   1c154:	mov	r9, r4
   1c158:	str	r3, [sp, #16]
   1c15c:	mvn	r3, #0
   1c160:	str	r3, [sp, #40]	; 0x28
   1c164:	mov	r2, r5
   1c168:	mov	r1, r8
   1c16c:	bl	11538 <strncmp@plt>
   1c170:	cmp	r0, #0
   1c174:	bne	1c18c <argp_parse@@Base+0x3320>
   1c178:	cmp	r9, #0
   1c17c:	moveq	r9, sl
   1c180:	movne	r3, #1
   1c184:	strne	r3, [sp, #16]
   1c188:	streq	r4, [sp, #40]	; 0x28
   1c18c:	ldr	r0, [sl, #16]!
   1c190:	add	r4, r4, #1
   1c194:	cmp	r0, #0
   1c198:	bne	1c164 <argp_parse@@Base+0x32f8>
   1c19c:	ldr	r3, [sp, #100]	; 0x64
   1c1a0:	str	r0, [sp, #36]	; 0x24
   1c1a4:	str	r3, [sp, #44]	; 0x2c
   1c1a8:	b	1c024 <argp_parse@@Base+0x31b8>
   1c1ac:	ldr	r3, [sp, #24]
   1c1b0:	ldr	r1, [pc, #752]	; 1c4a8 <argp_parse@@Base+0x363c>
   1c1b4:	ldr	r2, [r3]
   1c1b8:	ldr	r3, [r9]
   1c1bc:	ldr	r0, [r1]
   1c1c0:	str	r3, [sp]
   1c1c4:	ldr	r1, [pc, #744]	; 1c4b4 <argp_parse@@Base+0x3648>
   1c1c8:	ldr	r3, [sp, #104]	; 0x68
   1c1cc:	bl	11400 <fprintf@plt>
   1c1d0:	ldr	r1, [sp, #96]	; 0x60
   1c1d4:	ldr	r2, [r9, #12]
   1c1d8:	mov	r3, #63	; 0x3f
   1c1dc:	str	r2, [r1, #8]
   1c1e0:	b	1bfa4 <argp_parse@@Base+0x3138>
   1c1e4:	ldr	r3, [sp, #92]	; 0x5c
   1c1e8:	cmp	r3, #0
   1c1ec:	bne	1c3d0 <argp_parse@@Base+0x3564>
   1c1f0:	ldr	r3, [sp, #100]	; 0x64
   1c1f4:	cmp	r3, #0
   1c1f8:	beq	1c224 <argp_parse@@Base+0x33b8>
   1c1fc:	ldr	r3, [sp, #24]
   1c200:	ldr	r1, [pc, #672]	; 1c4a8 <argp_parse@@Base+0x363c>
   1c204:	ldr	r2, [r3]
   1c208:	ldr	r3, [sp, #96]	; 0x60
   1c20c:	ldr	r0, [r1]
   1c210:	ldr	r1, [pc, #672]	; 1c4b8 <argp_parse@@Base+0x364c>
   1c214:	ldr	r3, [r3, #20]
   1c218:	str	r3, [sp]
   1c21c:	ldr	r3, [sp, #104]	; 0x68
   1c220:	bl	11400 <fprintf@plt>
   1c224:	ldr	r3, [sp, #96]	; 0x60
   1c228:	ldr	r1, [sp, #96]	; 0x60
   1c22c:	mov	r2, #0
   1c230:	ldr	r3, [r3]
   1c234:	str	r2, [r1, #20]
   1c238:	add	r3, r3, #1
   1c23c:	str	r3, [r1]
   1c240:	mov	r3, #63	; 0x3f
   1c244:	mov	r0, r3
   1c248:	str	r2, [r1, #8]
   1c24c:	add	sp, sp, #52	; 0x34
   1c250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c254:	ldr	r1, [sp, #28]
   1c258:	cmp	r3, r1
   1c25c:	bge	1c2fc <argp_parse@@Base+0x3490>
   1c260:	ldr	r1, [sp, #24]
   1c264:	add	r2, r2, #2
   1c268:	ldr	r3, [r1, r3, lsl #2]
   1c26c:	ldr	r1, [sp, #96]	; 0x60
   1c270:	str	r3, [r1, #12]
   1c274:	str	r2, [r1]
   1c278:	b	1bf40 <argp_parse@@Base+0x30d4>
   1c27c:	ldr	r3, [sp, #24]
   1c280:	ldr	r1, [pc, #544]	; 1c4a8 <argp_parse@@Base+0x363c>
   1c284:	ldr	r2, [r3]
   1c288:	ldr	r3, [sp, #96]	; 0x60
   1c28c:	ldr	r0, [r1]
   1c290:	ldr	r1, [pc, #548]	; 1c4bc <argp_parse@@Base+0x3650>
   1c294:	ldr	r3, [r3, #20]
   1c298:	str	r3, [sp]
   1c29c:	ldr	r3, [sp, #104]	; 0x68
   1c2a0:	bl	11400 <fprintf@plt>
   1c2a4:	ldr	r3, [sp, #44]	; 0x2c
   1c2a8:	cmp	r3, #0
   1c2ac:	beq	1c2b8 <argp_parse@@Base+0x344c>
   1c2b0:	ldr	r0, [sp, #36]	; 0x24
   1c2b4:	bl	19de8 <argp_parse@@Base+0xf7c>
   1c2b8:	ldr	r3, [sp, #96]	; 0x60
   1c2bc:	ldr	r4, [r3, #20]
   1c2c0:	mov	r0, r4
   1c2c4:	bl	113e8 <strlen@plt>
   1c2c8:	ldr	r3, [sp, #96]	; 0x60
   1c2cc:	ldr	r1, [sp, #96]	; 0x60
   1c2d0:	mov	r2, #0
   1c2d4:	ldr	r3, [r3]
   1c2d8:	str	r2, [r1, #8]
   1c2dc:	add	r3, r3, #1
   1c2e0:	str	r3, [r1]
   1c2e4:	mov	r3, #63	; 0x3f
   1c2e8:	add	r0, r4, r0
   1c2ec:	str	r0, [r1, #20]
   1c2f0:	mov	r0, r3
   1c2f4:	add	sp, sp, #52	; 0x34
   1c2f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2fc:	ldr	r3, [sp, #100]	; 0x64
   1c300:	cmp	r3, #0
   1c304:	bne	1c32c <argp_parse@@Base+0x34c0>
   1c308:	ldr	r2, [sp, #96]	; 0x60
   1c30c:	ldr	r3, [r9, #12]
   1c310:	str	r3, [r2, #8]
   1c314:	ldr	r3, [sp, #32]
   1c318:	ldrb	r3, [r3]
   1c31c:	cmp	r3, #58	; 0x3a
   1c320:	movne	r3, #63	; 0x3f
   1c324:	moveq	r3, #58	; 0x3a
   1c328:	b	1bf64 <argp_parse@@Base+0x30f8>
   1c32c:	ldr	r3, [sp, #24]
   1c330:	ldr	r1, [pc, #368]	; 1c4a8 <argp_parse@@Base+0x363c>
   1c334:	ldr	r2, [r3]
   1c338:	ldr	r3, [r9]
   1c33c:	ldr	r0, [r1]
   1c340:	str	r3, [sp]
   1c344:	ldr	r1, [pc, #372]	; 1c4c0 <argp_parse@@Base+0x3654>
   1c348:	ldr	r3, [sp, #104]	; 0x68
   1c34c:	bl	11400 <fprintf@plt>
   1c350:	b	1c308 <argp_parse@@Base+0x349c>
   1c354:	mov	r0, r6
   1c358:	bl	1b3fc <argp_parse@@Base+0x2590>
   1c35c:	subs	r3, r0, #0
   1c360:	mov	r8, r3
   1c364:	str	r3, [sp, #36]	; 0x24
   1c368:	mov	r3, #1
   1c36c:	streq	r3, [sp, #16]
   1c370:	beq	1bee8 <argp_parse@@Base+0x307c>
   1c374:	mov	r2, r6
   1c378:	mov	r1, #0
   1c37c:	str	r3, [sp, #44]	; 0x2c
   1c380:	bl	1143c <memset@plt>
   1c384:	ldr	r2, [sp, #40]	; 0x28
   1c388:	mov	r1, #1
   1c38c:	ldr	r3, [sp, #36]	; 0x24
   1c390:	strb	r1, [r8, r2]
   1c394:	b	1bee0 <argp_parse@@Base+0x3074>
   1c398:	mov	r0, r6
   1c39c:	bl	1b3fc <argp_parse@@Base+0x2590>
   1c3a0:	subs	r3, r0, #0
   1c3a4:	str	r3, [sp, #36]	; 0x24
   1c3a8:	beq	1c49c <argp_parse@@Base+0x3630>
   1c3ac:	mov	r2, r6
   1c3b0:	mov	r1, #0
   1c3b4:	bl	1143c <memset@plt>
   1c3b8:	mov	r2, #1
   1c3bc:	str	r2, [sp, #44]	; 0x2c
   1c3c0:	ldr	r3, [sp, #36]	; 0x24
   1c3c4:	ldr	r2, [sp, #40]	; 0x28
   1c3c8:	strb	fp, [r3, r2]
   1c3cc:	b	1c128 <argp_parse@@Base+0x32bc>
   1c3d0:	ldr	r3, [sp, #96]	; 0x60
   1c3d4:	ldr	r2, [sp, #24]
   1c3d8:	ldr	r3, [r3]
   1c3dc:	ldr	r3, [r2, r3, lsl #2]
   1c3e0:	ldrb	r3, [r3, #1]
   1c3e4:	cmp	r3, #45	; 0x2d
   1c3e8:	beq	1c1f0 <argp_parse@@Base+0x3384>
   1c3ec:	ldr	r3, [sp, #96]	; 0x60
   1c3f0:	ldr	r0, [sp, #32]
   1c3f4:	ldr	r3, [r3, #20]
   1c3f8:	ldrb	r1, [r3]
   1c3fc:	bl	113f4 <strchr@plt>
   1c400:	cmp	r0, #0
   1c404:	beq	1c1f0 <argp_parse@@Base+0x3384>
   1c408:	mvn	r3, #0
   1c40c:	b	1bf64 <argp_parse@@Base+0x30f8>
   1c410:	str	fp, [sp, #40]	; 0x28
   1c414:	mov	r9, r4
   1c418:	b	1c008 <argp_parse@@Base+0x319c>
   1c41c:	str	fp, [sp, #40]	; 0x28
   1c420:	mov	r9, r4
   1c424:	b	1bee8 <argp_parse@@Base+0x307c>
   1c428:	str	r8, [sp, #40]	; 0x28
   1c42c:	mov	r9, sl
   1c430:	b	1c12c <argp_parse@@Base+0x32c0>
   1c434:	ldr	r1, [r5]
   1c438:	mov	r0, #10
   1c43c:	bl	114cc <fputc@plt>
   1c440:	ldr	r0, [r5]
   1c444:	bl	112f8 <funlockfile@plt>
   1c448:	b	1c2a4 <argp_parse@@Base+0x3438>
   1c44c:	ldr	r2, [r9, #8]
   1c450:	ldr	r3, [r4, #8]
   1c454:	cmp	r2, r3
   1c458:	bne	1c000 <argp_parse@@Base+0x3194>
   1c45c:	ldr	r2, [r9, #12]
   1c460:	ldr	r3, [r4, #12]
   1c464:	ldr	r1, [sp, #16]
   1c468:	cmp	r2, r3
   1c46c:	movne	r1, #1
   1c470:	str	r1, [sp, #16]
   1c474:	b	1c008 <argp_parse@@Base+0x319c>
   1c478:	ldr	r2, [r9, #8]
   1c47c:	ldr	r3, [r4, #8]
   1c480:	cmp	r2, r3
   1c484:	bne	1bec8 <argp_parse@@Base+0x305c>
   1c488:	ldr	r2, [r9, #12]
   1c48c:	ldr	r3, [r4, #12]
   1c490:	cmp	r2, r3
   1c494:	bne	1bec8 <argp_parse@@Base+0x305c>
   1c498:	b	1bee8 <argp_parse@@Base+0x307c>
   1c49c:	mov	r3, #1
   1c4a0:	str	r3, [sp, #16]
   1c4a4:	b	1c12c <argp_parse@@Base+0x32c0>
   1c4a8:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   1c4ac:	andeq	lr, r1, r4, lsl #21
   1c4b0:	andeq	lr, r1, r4, asr sl
   1c4b4:	andeq	lr, r1, ip, lsr #21
   1c4b8:	andeq	lr, r1, ip, lsl #21
   1c4bc:	andeq	lr, r1, r4, lsr sl
   1c4c0:	ldrdeq	lr, [r1], -ip
   1c4c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4c8:	sub	sp, sp, #36	; 0x24
   1c4cc:	subs	r6, r0, #0
   1c4d0:	ldr	r4, [sp, #80]	; 0x50
   1c4d4:	ldr	r8, [r4, #4]
   1c4d8:	ble	1c6ac <argp_parse@@Base+0x3840>
   1c4dc:	mov	sl, r3
   1c4e0:	ldr	r3, [r4]
   1c4e4:	mov	r7, r2
   1c4e8:	mov	r2, #0
   1c4ec:	cmp	r3, r2
   1c4f0:	mov	r9, r1
   1c4f4:	str	r2, [r4, #12]
   1c4f8:	beq	1c734 <argp_parse@@Base+0x38c8>
   1c4fc:	ldr	r2, [r4, #16]
   1c500:	cmp	r2, #0
   1c504:	bne	1c6b8 <argp_parse@@Base+0x384c>
   1c508:	mov	r5, #0
   1c50c:	str	r3, [r4, #32]
   1c510:	str	r3, [r4, #28]
   1c514:	str	r5, [r4, #20]
   1c518:	ldrb	r3, [r7]
   1c51c:	cmp	r3, #45	; 0x2d
   1c520:	moveq	r3, #2
   1c524:	addeq	r7, r7, #1
   1c528:	streq	r3, [r4, #24]
   1c52c:	beq	1c554 <argp_parse@@Base+0x36e8>
   1c530:	cmp	r3, #43	; 0x2b
   1c534:	streq	r5, [r4, #24]
   1c538:	addeq	r7, r7, #1
   1c53c:	beq	1c554 <argp_parse@@Base+0x36e8>
   1c540:	ldr	r3, [sp, #84]	; 0x54
   1c544:	cmp	r3, #0
   1c548:	beq	1c7c4 <argp_parse@@Base+0x3958>
   1c54c:	mov	r3, #0
   1c550:	str	r3, [r4, #24]
   1c554:	mov	r3, #1
   1c558:	str	r3, [r4, #16]
   1c55c:	ldrb	r3, [r7]
   1c560:	cmp	r3, #58	; 0x3a
   1c564:	moveq	r8, #0
   1c568:	cmp	r5, #0
   1c56c:	beq	1c614 <argp_parse@@Base+0x37a8>
   1c570:	ldrb	r3, [r5]
   1c574:	cmp	r3, #0
   1c578:	beq	1c614 <argp_parse@@Base+0x37a8>
   1c57c:	add	r3, r5, #1
   1c580:	str	r3, [r4, #20]
   1c584:	ldrb	fp, [r5]
   1c588:	mov	r0, r7
   1c58c:	str	r3, [sp, #28]
   1c590:	mov	r1, fp
   1c594:	bl	113f4 <strchr@plt>
   1c598:	ldrb	r1, [r5, #1]
   1c59c:	ldr	r3, [sp, #28]
   1c5a0:	cmp	r1, #0
   1c5a4:	ldreq	r1, [r4]
   1c5a8:	addeq	r1, r1, #1
   1c5ac:	streq	r1, [r4]
   1c5b0:	sub	r1, fp, #58	; 0x3a
   1c5b4:	mov	r2, r0
   1c5b8:	cmp	r2, #0
   1c5bc:	cmpne	r1, #1
   1c5c0:	mov	r0, fp
   1c5c4:	bls	1c704 <argp_parse@@Base+0x3898>
   1c5c8:	ldrb	r1, [r2]
   1c5cc:	cmp	r1, #87	; 0x57
   1c5d0:	ldrb	r1, [r2, #1]
   1c5d4:	beq	1c850 <argp_parse@@Base+0x39e4>
   1c5d8:	cmp	r1, #58	; 0x3a
   1c5dc:	bne	1c6fc <argp_parse@@Base+0x3890>
   1c5e0:	ldrb	r2, [r2, #2]
   1c5e4:	cmp	r2, #58	; 0x3a
   1c5e8:	ldrb	r2, [r5, #1]
   1c5ec:	beq	1c948 <argp_parse@@Base+0x3adc>
   1c5f0:	cmp	r2, #0
   1c5f4:	beq	1c928 <argp_parse@@Base+0x3abc>
   1c5f8:	ldr	r2, [r4]
   1c5fc:	str	r3, [r4, #12]
   1c600:	add	r3, r2, #1
   1c604:	str	r3, [r4]
   1c608:	mov	r3, #0
   1c60c:	str	r3, [r4, #20]
   1c610:	b	1c6fc <argp_parse@@Base+0x3890>
   1c614:	ldr	fp, [r4]
   1c618:	ldr	r3, [r4, #32]
   1c61c:	ldr	r2, [r4, #28]
   1c620:	cmp	r3, fp
   1c624:	ldr	r3, [r4, #24]
   1c628:	strgt	fp, [r4, #32]
   1c62c:	cmp	fp, r2
   1c630:	movlt	r2, fp
   1c634:	strlt	fp, [r4, #28]
   1c638:	cmp	r3, #1
   1c63c:	beq	1c744 <argp_parse@@Base+0x38d8>
   1c640:	cmp	r6, fp
   1c644:	beq	1c7ac <argp_parse@@Base+0x3940>
   1c648:	ldr	r3, [pc, #972]	; 1ca1c <argp_parse@@Base+0x3bb0>
   1c64c:	ldr	r5, [r9, fp, lsl #2]
   1c650:	mov	r1, r3
   1c654:	mov	r0, r5
   1c658:	str	r3, [sp, #28]
   1c65c:	bl	11208 <strcmp@plt>
   1c660:	ldr	r3, [sp, #28]
   1c664:	cmp	r0, #0
   1c668:	bne	1c6d4 <argp_parse@@Base+0x3868>
   1c66c:	ldr	r3, [r4, #28]
   1c670:	ldr	r2, [r4, #32]
   1c674:	add	fp, fp, #1
   1c678:	cmp	r3, r2
   1c67c:	str	fp, [r4]
   1c680:	beq	1c844 <argp_parse@@Base+0x39d8>
   1c684:	cmp	fp, r2
   1c688:	beq	1c69c <argp_parse@@Base+0x3830>
   1c68c:	mov	r0, r9
   1c690:	mov	r1, r4
   1c694:	bl	1bcf4 <argp_parse@@Base+0x2e88>
   1c698:	ldr	r3, [r4, #28]
   1c69c:	cmp	r6, r3
   1c6a0:	str	r6, [r4]
   1c6a4:	str	r6, [r4, #32]
   1c6a8:	strne	r3, [r4]
   1c6ac:	mvn	r0, #0
   1c6b0:	add	sp, sp, #36	; 0x24
   1c6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c6b8:	ldrb	r3, [r7]
   1c6bc:	ldr	r5, [r4, #20]
   1c6c0:	sub	r2, r3, #43	; 0x2b
   1c6c4:	tst	r2, #253	; 0xfd
   1c6c8:	ldrbeq	r3, [r7, #1]
   1c6cc:	addeq	r7, r7, #1
   1c6d0:	b	1c560 <argp_parse@@Base+0x36f4>
   1c6d4:	ldrb	r2, [r5]
   1c6d8:	cmp	r2, #45	; 0x2d
   1c6dc:	beq	1c7f8 <argp_parse@@Base+0x398c>
   1c6e0:	ldr	r3, [r4, #24]
   1c6e4:	cmp	r3, #0
   1c6e8:	beq	1c6ac <argp_parse@@Base+0x3840>
   1c6ec:	mov	r0, #1
   1c6f0:	add	fp, fp, #1
   1c6f4:	str	fp, [r4]
   1c6f8:	str	r5, [r4, #12]
   1c6fc:	add	sp, sp, #36	; 0x24
   1c700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c704:	cmp	r8, #0
   1c708:	beq	1c724 <argp_parse@@Base+0x38b8>
   1c70c:	ldr	r1, [pc, #780]	; 1ca20 <argp_parse@@Base+0x3bb4>
   1c710:	ldr	r2, [r9]
   1c714:	mov	r3, fp
   1c718:	ldr	r0, [r1]
   1c71c:	ldr	r1, [pc, #768]	; 1ca24 <argp_parse@@Base+0x3bb8>
   1c720:	bl	11400 <fprintf@plt>
   1c724:	mov	r0, #63	; 0x3f
   1c728:	str	fp, [r4, #8]
   1c72c:	add	sp, sp, #36	; 0x24
   1c730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c734:	mov	r2, #1
   1c738:	mov	r3, r2
   1c73c:	str	r2, [r4]
   1c740:	b	1c508 <argp_parse@@Base+0x369c>
   1c744:	ldr	r3, [r4, #32]
   1c748:	cmp	r3, r2
   1c74c:	beq	1c8c4 <argp_parse@@Base+0x3a58>
   1c750:	cmp	fp, r3
   1c754:	beq	1c768 <argp_parse@@Base+0x38fc>
   1c758:	mov	r1, r4
   1c75c:	mov	r0, r9
   1c760:	bl	1bcf4 <argp_parse@@Base+0x2e88>
   1c764:	ldr	r3, [r4]
   1c768:	cmp	r6, r3
   1c76c:	addgt	r1, r9, r3, lsl #2
   1c770:	bgt	1c788 <argp_parse@@Base+0x391c>
   1c774:	b	1c7a4 <argp_parse@@Base+0x3938>
   1c778:	add	r3, r3, #1
   1c77c:	cmp	r6, r3
   1c780:	str	r3, [r4]
   1c784:	beq	1c7e4 <argp_parse@@Base+0x3978>
   1c788:	ldr	r2, [r1], #4
   1c78c:	ldrb	r0, [r2]
   1c790:	cmp	r0, #45	; 0x2d
   1c794:	bne	1c778 <argp_parse@@Base+0x390c>
   1c798:	ldrb	r2, [r2, #1]
   1c79c:	cmp	r2, #0
   1c7a0:	beq	1c778 <argp_parse@@Base+0x390c>
   1c7a4:	mov	fp, r3
   1c7a8:	b	1c7e8 <argp_parse@@Base+0x397c>
   1c7ac:	ldr	r3, [r4, #28]
   1c7b0:	ldr	r6, [r4, #32]
   1c7b4:	mvn	r0, #0
   1c7b8:	cmp	r6, r3
   1c7bc:	strne	r3, [r4]
   1c7c0:	b	1c6b0 <argp_parse@@Base+0x3844>
   1c7c4:	ldr	r0, [pc, #604]	; 1ca28 <argp_parse@@Base+0x3bbc>
   1c7c8:	bl	11364 <getenv@plt>
   1c7cc:	ldr	r5, [r4, #20]
   1c7d0:	cmp	r0, #0
   1c7d4:	bne	1c54c <argp_parse@@Base+0x36e0>
   1c7d8:	mov	r3, #1
   1c7dc:	str	r3, [r4, #24]
   1c7e0:	b	1c554 <argp_parse@@Base+0x36e8>
   1c7e4:	mov	fp, r6
   1c7e8:	cmp	r6, fp
   1c7ec:	str	fp, [r4, #32]
   1c7f0:	bne	1c648 <argp_parse@@Base+0x37dc>
   1c7f4:	b	1c7ac <argp_parse@@Base+0x3940>
   1c7f8:	ldrb	r1, [r5, #1]
   1c7fc:	cmp	r1, #0
   1c800:	beq	1c6e0 <argp_parse@@Base+0x3874>
   1c804:	cmp	sl, #0
   1c808:	beq	1c83c <argp_parse@@Base+0x39d0>
   1c80c:	cmp	r1, #45	; 0x2d
   1c810:	beq	1c96c <argp_parse@@Base+0x3b00>
   1c814:	ldr	r3, [sp, #76]	; 0x4c
   1c818:	cmp	r3, #0
   1c81c:	beq	1c83c <argp_parse@@Base+0x39d0>
   1c820:	ldrb	r3, [r5, #2]
   1c824:	cmp	r3, #0
   1c828:	bne	1c8d8 <argp_parse@@Base+0x3a6c>
   1c82c:	mov	r0, r7
   1c830:	bl	113f4 <strchr@plt>
   1c834:	cmp	r0, #0
   1c838:	beq	1c8d8 <argp_parse@@Base+0x3a6c>
   1c83c:	add	r5, r5, #1
   1c840:	b	1c57c <argp_parse@@Base+0x3710>
   1c844:	mov	r3, fp
   1c848:	str	fp, [r4, #28]
   1c84c:	b	1c69c <argp_parse@@Base+0x3830>
   1c850:	adds	ip, sl, #0
   1c854:	movne	ip, #1
   1c858:	cmp	r1, #59	; 0x3b
   1c85c:	movne	ip, #0
   1c860:	cmp	ip, #0
   1c864:	beq	1c5d8 <argp_parse@@Base+0x376c>
   1c868:	ldrb	r2, [r5, #1]
   1c86c:	cmp	r2, #0
   1c870:	bne	1c884 <argp_parse@@Base+0x3a18>
   1c874:	ldr	r3, [r4]
   1c878:	cmp	r6, r3
   1c87c:	ldrne	r3, [r9, r3, lsl #2]
   1c880:	beq	1c9c8 <argp_parse@@Base+0x3b5c>
   1c884:	str	r3, [r4, #20]
   1c888:	ldr	lr, [pc, #412]	; 1ca2c <argp_parse@@Base+0x3bc0>
   1c88c:	ldr	r3, [sp, #72]	; 0x48
   1c890:	mov	ip, #0
   1c894:	str	r3, [sp]
   1c898:	str	r8, [sp, #12]
   1c89c:	str	r4, [sp, #8]
   1c8a0:	str	lr, [sp, #16]
   1c8a4:	mov	r3, sl
   1c8a8:	str	ip, [r4, #12]
   1c8ac:	mov	r2, r7
   1c8b0:	mov	r1, r9
   1c8b4:	mov	r0, r6
   1c8b8:	str	ip, [sp, #4]
   1c8bc:	bl	1bdb0 <argp_parse@@Base+0x2f44>
   1c8c0:	b	1c6fc <argp_parse@@Base+0x3890>
   1c8c4:	cmp	fp, r2
   1c8c8:	strne	fp, [r4, #28]
   1c8cc:	movne	r3, fp
   1c8d0:	moveq	r3, r2
   1c8d4:	b	1c768 <argp_parse@@Base+0x38fc>
   1c8d8:	ldr	r2, [sp, #76]	; 0x4c
   1c8dc:	add	r5, r5, #1
   1c8e0:	str	r5, [r4, #20]
   1c8e4:	ldr	r3, [pc, #324]	; 1ca30 <argp_parse@@Base+0x3bc4>
   1c8e8:	str	r2, [sp, #4]
   1c8ec:	ldr	r2, [sp, #72]	; 0x48
   1c8f0:	str	r3, [sp, #16]
   1c8f4:	str	r2, [sp]
   1c8f8:	str	r8, [sp, #12]
   1c8fc:	str	r4, [sp, #8]
   1c900:	mov	r3, sl
   1c904:	mov	r2, r7
   1c908:	mov	r1, r9
   1c90c:	mov	r0, r6
   1c910:	bl	1bdb0 <argp_parse@@Base+0x2f44>
   1c914:	cmn	r0, #1
   1c918:	bne	1c6fc <argp_parse@@Base+0x3890>
   1c91c:	ldr	r3, [r4]
   1c920:	ldr	r5, [r9, r3, lsl #2]
   1c924:	b	1c83c <argp_parse@@Base+0x39d0>
   1c928:	ldr	r3, [r4]
   1c92c:	cmp	r6, r3
   1c930:	beq	1c9a8 <argp_parse@@Base+0x3b3c>
   1c934:	ldr	r2, [r9, r3, lsl #2]
   1c938:	add	r3, r3, #1
   1c93c:	str	r2, [r4, #12]
   1c940:	str	r3, [r4]
   1c944:	b	1c608 <argp_parse@@Base+0x379c>
   1c948:	cmp	r2, #0
   1c94c:	moveq	r3, r2
   1c950:	ldrne	r2, [r4]
   1c954:	str	r3, [r4, #12]
   1c958:	addne	r2, r2, #1
   1c95c:	strne	r2, [r4]
   1c960:	mov	r2, #0
   1c964:	str	r2, [r4, #20]
   1c968:	b	1c6fc <argp_parse@@Base+0x3890>
   1c96c:	add	r5, r5, #2
   1c970:	str	r5, [r4, #20]
   1c974:	str	r3, [sp, #16]
   1c978:	ldr	r3, [sp, #76]	; 0x4c
   1c97c:	str	r8, [sp, #12]
   1c980:	str	r3, [sp, #4]
   1c984:	ldr	r3, [sp, #72]	; 0x48
   1c988:	str	r4, [sp, #8]
   1c98c:	str	r3, [sp]
   1c990:	mov	r2, r7
   1c994:	mov	r3, sl
   1c998:	mov	r1, r9
   1c99c:	mov	r0, r6
   1c9a0:	bl	1bdb0 <argp_parse@@Base+0x2f44>
   1c9a4:	b	1c6fc <argp_parse@@Base+0x3890>
   1c9a8:	cmp	r8, #0
   1c9ac:	bne	1ca00 <argp_parse@@Base+0x3b94>
   1c9b0:	str	fp, [r4, #8]
   1c9b4:	ldrb	r0, [r7]
   1c9b8:	cmp	r0, #58	; 0x3a
   1c9bc:	movne	r0, #63	; 0x3f
   1c9c0:	moveq	r0, #58	; 0x3a
   1c9c4:	b	1c608 <argp_parse@@Base+0x379c>
   1c9c8:	cmp	r8, #0
   1c9cc:	beq	1c9e8 <argp_parse@@Base+0x3b7c>
   1c9d0:	ldr	r1, [pc, #72]	; 1ca20 <argp_parse@@Base+0x3bb4>
   1c9d4:	ldr	r2, [r9]
   1c9d8:	mov	r3, fp
   1c9dc:	ldr	r0, [r1]
   1c9e0:	ldr	r1, [pc, #76]	; 1ca34 <argp_parse@@Base+0x3bc8>
   1c9e4:	bl	11400 <fprintf@plt>
   1c9e8:	str	fp, [r4, #8]
   1c9ec:	ldrb	r0, [r7]
   1c9f0:	cmp	r0, #58	; 0x3a
   1c9f4:	movne	r0, #63	; 0x3f
   1c9f8:	moveq	r0, #58	; 0x3a
   1c9fc:	b	1c6fc <argp_parse@@Base+0x3890>
   1ca00:	ldr	r1, [pc, #24]	; 1ca20 <argp_parse@@Base+0x3bb4>
   1ca04:	ldr	r2, [r9]
   1ca08:	mov	r3, fp
   1ca0c:	ldr	r0, [r1]
   1ca10:	ldr	r1, [pc, #28]	; 1ca34 <argp_parse@@Base+0x3bc8>
   1ca14:	bl	11400 <fprintf@plt>
   1ca18:	b	1c9b0 <argp_parse@@Base+0x3b44>
   1ca1c:	andeq	lr, r1, r8, lsl #11
   1ca20:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   1ca24:	andeq	lr, r1, r8, lsl fp
   1ca28:	andeq	lr, r1, r4, lsl #22
   1ca2c:	andeq	lr, r1, r0, ror #22
   1ca30:	andeq	lr, r1, r4, lsl fp
   1ca34:	andeq	lr, r1, r4, lsr fp
   1ca38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca3c:	sub	sp, sp, #44	; 0x2c
   1ca40:	ldr	r7, [pc, #1572]	; 1d06c <argp_parse@@Base+0x4200>
   1ca44:	ldr	r4, [pc, #1572]	; 1d070 <argp_parse@@Base+0x4204>
   1ca48:	subs	r6, r0, #0
   1ca4c:	ldm	r7, {r5, sl}
   1ca50:	str	r1, [sp, #32]
   1ca54:	str	r3, [sp, #36]	; 0x24
   1ca58:	stm	r4, {r5, sl}
   1ca5c:	ble	1cc08 <argp_parse@@Base+0x3d9c>
   1ca60:	mov	r3, #0
   1ca64:	cmp	r5, #0
   1ca68:	mov	fp, r2
   1ca6c:	str	r3, [r4, #12]
   1ca70:	beq	1ccc4 <argp_parse@@Base+0x3e58>
   1ca74:	ldr	r3, [r4, #16]
   1ca78:	cmp	r3, #0
   1ca7c:	bne	1cc20 <argp_parse@@Base+0x3db4>
   1ca80:	mov	r3, #0
   1ca84:	str	r5, [r4, #32]
   1ca88:	str	r5, [r4, #28]
   1ca8c:	str	r3, [r4, #20]
   1ca90:	ldrb	r2, [fp]
   1ca94:	cmp	r2, #45	; 0x2d
   1ca98:	beq	1cd74 <argp_parse@@Base+0x3f08>
   1ca9c:	cmp	r2, #43	; 0x2b
   1caa0:	streq	r3, [r4, #24]
   1caa4:	addeq	fp, fp, #1
   1caa8:	moveq	r5, r3
   1caac:	beq	1cac8 <argp_parse@@Base+0x3c5c>
   1cab0:	ldr	r2, [sp, #88]	; 0x58
   1cab4:	cmp	r2, #0
   1cab8:	movne	r5, r3
   1cabc:	beq	1cd54 <argp_parse@@Base+0x3ee8>
   1cac0:	mov	r3, #0
   1cac4:	str	r3, [r4, #24]
   1cac8:	mov	r3, #1
   1cacc:	str	r3, [r4, #16]
   1cad0:	ldrb	r3, [fp]
   1cad4:	cmp	r3, #58	; 0x3a
   1cad8:	moveq	sl, #0
   1cadc:	cmp	r5, #0
   1cae0:	beq	1cb64 <argp_parse@@Base+0x3cf8>
   1cae4:	ldrb	r3, [r5]
   1cae8:	cmp	r3, #0
   1caec:	beq	1cb64 <argp_parse@@Base+0x3cf8>
   1caf0:	add	r9, r5, #1
   1caf4:	str	r9, [r4, #20]
   1caf8:	ldrb	r8, [r5]
   1cafc:	mov	r0, fp
   1cb00:	mov	r1, r8
   1cb04:	bl	113f4 <strchr@plt>
   1cb08:	ldrb	r3, [r5, #1]
   1cb0c:	str	r8, [sp, #28]
   1cb10:	cmp	r3, #0
   1cb14:	ldreq	r3, [r4]
   1cb18:	addeq	r3, r3, #1
   1cb1c:	streq	r3, [r4]
   1cb20:	sub	r3, r8, #58	; 0x3a
   1cb24:	cmp	r0, #0
   1cb28:	cmpne	r3, #1
   1cb2c:	bls	1cc88 <argp_parse@@Base+0x3e1c>
   1cb30:	ldrb	r3, [r0]
   1cb34:	cmp	r3, #87	; 0x57
   1cb38:	ldrb	r3, [r0, #1]
   1cb3c:	beq	1cdfc <argp_parse@@Base+0x3f90>
   1cb40:	cmp	r3, #58	; 0x3a
   1cb44:	beq	1cea0 <argp_parse@@Base+0x4034>
   1cb48:	ldr	r3, [r4, #8]
   1cb4c:	mov	r0, r8
   1cb50:	ldr	r9, [r4, #12]
   1cb54:	ldr	r5, [r4]
   1cb58:	str	r3, [sp, #28]
   1cb5c:	mov	r2, r3
   1cb60:	b	1cc70 <argp_parse@@Base+0x3e04>
   1cb64:	ldr	r5, [r4]
   1cb68:	ldr	r8, [r4, #32]
   1cb6c:	ldr	r3, [r4, #28]
   1cb70:	cmp	r8, r5
   1cb74:	ldr	r2, [r4, #24]
   1cb78:	movgt	r8, r5
   1cb7c:	strgt	r5, [r4, #32]
   1cb80:	cmp	r5, r3
   1cb84:	movlt	r3, r5
   1cb88:	strlt	r5, [r4, #28]
   1cb8c:	cmp	r2, #1
   1cb90:	beq	1ccd4 <argp_parse@@Base+0x3e68>
   1cb94:	cmp	r6, r5
   1cb98:	beq	1cd3c <argp_parse@@Base+0x3ed0>
   1cb9c:	ldr	r3, [sp, #32]
   1cba0:	ldr	r9, [r3, r5, lsl #2]
   1cba4:	ldr	r3, [pc, #1224]	; 1d074 <argp_parse@@Base+0x4208>
   1cba8:	mov	r0, r9
   1cbac:	mov	r1, r3
   1cbb0:	str	r3, [sp, #28]
   1cbb4:	bl	11208 <strcmp@plt>
   1cbb8:	ldr	r3, [sp, #28]
   1cbbc:	cmp	r0, #0
   1cbc0:	bne	1cc3c <argp_parse@@Base+0x3dd0>
   1cbc4:	add	r3, r5, #1
   1cbc8:	ldr	r5, [r4, #28]
   1cbcc:	str	r3, [r4]
   1cbd0:	cmp	r5, r8
   1cbd4:	beq	1cdf0 <argp_parse@@Base+0x3f84>
   1cbd8:	cmp	r3, r8
   1cbdc:	beq	1cbf0 <argp_parse@@Base+0x3d84>
   1cbe0:	ldr	r0, [sp, #32]
   1cbe4:	ldr	r1, [pc, #1156]	; 1d070 <argp_parse@@Base+0x4204>
   1cbe8:	bl	1bcf4 <argp_parse@@Base+0x2e88>
   1cbec:	ldr	r5, [r4, #28]
   1cbf0:	mov	r8, r6
   1cbf4:	cmp	r8, r5
   1cbf8:	str	r6, [r4, #32]
   1cbfc:	str	r6, [r4]
   1cc00:	moveq	r5, r6
   1cc04:	bne	1cd4c <argp_parse@@Base+0x3ee0>
   1cc08:	ldr	r3, [r4, #8]
   1cc0c:	ldr	r9, [r4, #12]
   1cc10:	str	r3, [sp, #28]
   1cc14:	mvn	r0, #0
   1cc18:	mov	r2, r3
   1cc1c:	b	1cc70 <argp_parse@@Base+0x3e04>
   1cc20:	ldrb	r3, [r2]
   1cc24:	ldr	r5, [r4, #20]
   1cc28:	sub	r2, r3, #43	; 0x2b
   1cc2c:	tst	r2, #253	; 0xfd
   1cc30:	ldrbeq	r3, [fp, #1]
   1cc34:	addeq	fp, fp, #1
   1cc38:	b	1cad4 <argp_parse@@Base+0x3c68>
   1cc3c:	ldrb	r2, [r9]
   1cc40:	cmp	r2, #45	; 0x2d
   1cc44:	beq	1cda0 <argp_parse@@Base+0x3f34>
   1cc48:	ldr	r3, [r4, #24]
   1cc4c:	cmp	r3, #0
   1cc50:	beq	1cc08 <argp_parse@@Base+0x3d9c>
   1cc54:	ldr	r3, [r4, #8]
   1cc58:	mov	r0, #1
   1cc5c:	mov	r2, r3
   1cc60:	add	r5, r5, #1
   1cc64:	str	r5, [r4]
   1cc68:	str	r9, [r4, #12]
   1cc6c:	str	r3, [sp, #28]
   1cc70:	ldr	r3, [pc, #1024]	; 1d078 <argp_parse@@Base+0x420c>
   1cc74:	str	r5, [r7]
   1cc78:	str	r2, [r7, #8]
   1cc7c:	str	r9, [r3]
   1cc80:	add	sp, sp, #44	; 0x2c
   1cc84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc88:	cmp	sl, #0
   1cc8c:	beq	1ccac <argp_parse@@Base+0x3e40>
   1cc90:	ldr	r1, [pc, #996]	; 1d07c <argp_parse@@Base+0x4210>
   1cc94:	ldr	r3, [sp, #32]
   1cc98:	ldr	r0, [r1]
   1cc9c:	ldr	r2, [r3]
   1cca0:	ldr	r1, [pc, #984]	; 1d080 <argp_parse@@Base+0x4214>
   1cca4:	mov	r3, r8
   1cca8:	bl	11400 <fprintf@plt>
   1ccac:	str	r8, [r4, #8]
   1ccb0:	ldr	r5, [r4]
   1ccb4:	ldr	r9, [r4, #12]
   1ccb8:	mov	r0, #63	; 0x3f
   1ccbc:	ldr	r2, [sp, #28]
   1ccc0:	b	1cc70 <argp_parse@@Base+0x3e04>
   1ccc4:	mov	r3, #1
   1ccc8:	mov	r5, r3
   1cccc:	str	r3, [r4]
   1ccd0:	b	1ca80 <argp_parse@@Base+0x3c14>
   1ccd4:	cmp	r8, r3
   1ccd8:	beq	1ce90 <argp_parse@@Base+0x4024>
   1ccdc:	cmp	r5, r8
   1cce0:	beq	1ccf4 <argp_parse@@Base+0x3e88>
   1cce4:	ldr	r1, [pc, #900]	; 1d070 <argp_parse@@Base+0x4204>
   1cce8:	ldr	r0, [sp, #32]
   1ccec:	bl	1bcf4 <argp_parse@@Base+0x2e88>
   1ccf0:	ldr	r8, [r4]
   1ccf4:	cmp	r6, r8
   1ccf8:	ldrgt	r3, [sp, #32]
   1ccfc:	addgt	r2, r3, r8, lsl #2
   1cd00:	bgt	1cd18 <argp_parse@@Base+0x3eac>
   1cd04:	b	1cd34 <argp_parse@@Base+0x3ec8>
   1cd08:	add	r8, r8, #1
   1cd0c:	cmp	r6, r8
   1cd10:	str	r8, [r4]
   1cd14:	beq	1cd88 <argp_parse@@Base+0x3f1c>
   1cd18:	ldr	r3, [r2], #4
   1cd1c:	ldrb	r1, [r3]
   1cd20:	cmp	r1, #45	; 0x2d
   1cd24:	bne	1cd08 <argp_parse@@Base+0x3e9c>
   1cd28:	ldrb	r3, [r3, #1]
   1cd2c:	cmp	r3, #0
   1cd30:	beq	1cd08 <argp_parse@@Base+0x3e9c>
   1cd34:	mov	r5, r8
   1cd38:	b	1cd8c <argp_parse@@Base+0x3f20>
   1cd3c:	ldr	r5, [r4, #28]
   1cd40:	cmp	r8, r5
   1cd44:	moveq	r5, r6
   1cd48:	beq	1cc08 <argp_parse@@Base+0x3d9c>
   1cd4c:	str	r5, [r4]
   1cd50:	b	1cc08 <argp_parse@@Base+0x3d9c>
   1cd54:	ldr	r0, [pc, #808]	; 1d084 <argp_parse@@Base+0x4218>
   1cd58:	bl	11364 <getenv@plt>
   1cd5c:	ldr	r5, [r4, #20]
   1cd60:	cmp	r0, #0
   1cd64:	bne	1cac0 <argp_parse@@Base+0x3c54>
   1cd68:	mov	r3, #1
   1cd6c:	str	r3, [r4, #24]
   1cd70:	b	1cac8 <argp_parse@@Base+0x3c5c>
   1cd74:	mov	r2, #2
   1cd78:	add	fp, fp, #1
   1cd7c:	mov	r5, r3
   1cd80:	str	r2, [r4, #24]
   1cd84:	b	1cac8 <argp_parse@@Base+0x3c5c>
   1cd88:	mov	r5, r6
   1cd8c:	cmp	r6, r5
   1cd90:	mov	r8, r5
   1cd94:	str	r5, [r4, #32]
   1cd98:	bne	1cb9c <argp_parse@@Base+0x3d30>
   1cd9c:	b	1cd3c <argp_parse@@Base+0x3ed0>
   1cda0:	ldrb	r1, [r9, #1]
   1cda4:	cmp	r1, #0
   1cda8:	beq	1cc48 <argp_parse@@Base+0x3ddc>
   1cdac:	ldr	r2, [sp, #36]	; 0x24
   1cdb0:	cmp	r2, #0
   1cdb4:	beq	1cde8 <argp_parse@@Base+0x3f7c>
   1cdb8:	cmp	r1, #45	; 0x2d
   1cdbc:	beq	1cf9c <argp_parse@@Base+0x4130>
   1cdc0:	ldr	r3, [sp, #84]	; 0x54
   1cdc4:	cmp	r3, #0
   1cdc8:	beq	1cde8 <argp_parse@@Base+0x3f7c>
   1cdcc:	ldrb	r3, [r9, #2]
   1cdd0:	cmp	r3, #0
   1cdd4:	bne	1cee4 <argp_parse@@Base+0x4078>
   1cdd8:	mov	r0, fp
   1cddc:	bl	113f4 <strchr@plt>
   1cde0:	cmp	r0, #0
   1cde4:	beq	1cee4 <argp_parse@@Base+0x4078>
   1cde8:	add	r5, r9, #1
   1cdec:	b	1caf0 <argp_parse@@Base+0x3c84>
   1cdf0:	mov	r5, r3
   1cdf4:	str	r3, [r4, #28]
   1cdf8:	b	1cbf0 <argp_parse@@Base+0x3d84>
   1cdfc:	ldr	r1, [sp, #36]	; 0x24
   1ce00:	sub	r2, r3, #59	; 0x3b
   1ce04:	cmp	r1, #0
   1ce08:	clz	r2, r2
   1ce0c:	lsr	r2, r2, #5
   1ce10:	moveq	r2, #0
   1ce14:	cmp	r2, #0
   1ce18:	beq	1cb40 <argp_parse@@Base+0x3cd4>
   1ce1c:	ldrb	r3, [r5, #1]
   1ce20:	cmp	r3, #0
   1ce24:	bne	1ce3c <argp_parse@@Base+0x3fd0>
   1ce28:	ldr	r3, [r4]
   1ce2c:	cmp	r6, r3
   1ce30:	beq	1d004 <argp_parse@@Base+0x4198>
   1ce34:	ldr	r2, [sp, #32]
   1ce38:	ldr	r9, [r2, r3, lsl #2]
   1ce3c:	ldr	r3, [sp, #80]	; 0x50
   1ce40:	ldr	r1, [sp, #32]
   1ce44:	str	r3, [sp]
   1ce48:	ldr	r3, [sp, #36]	; 0x24
   1ce4c:	ldr	lr, [pc, #564]	; 1d088 <argp_parse@@Base+0x421c>
   1ce50:	mov	r2, fp
   1ce54:	mov	r0, r6
   1ce58:	mov	ip, #0
   1ce5c:	str	sl, [sp, #12]
   1ce60:	str	r4, [sp, #8]
   1ce64:	str	lr, [sp, #16]
   1ce68:	str	ip, [sp, #4]
   1ce6c:	str	r9, [r4, #20]
   1ce70:	str	ip, [r4, #12]
   1ce74:	bl	1bdb0 <argp_parse@@Base+0x2f44>
   1ce78:	ldr	r3, [r4, #8]
   1ce7c:	ldr	r5, [r4]
   1ce80:	ldr	r9, [r4, #12]
   1ce84:	str	r3, [sp, #28]
   1ce88:	mov	r2, r3
   1ce8c:	b	1cc70 <argp_parse@@Base+0x3e04>
   1ce90:	cmp	r5, r8
   1ce94:	movne	r8, r5
   1ce98:	strne	r5, [r4, #28]
   1ce9c:	b	1ccf4 <argp_parse@@Base+0x3e88>
   1cea0:	ldrb	r3, [r0, #2]
   1cea4:	cmp	r3, #58	; 0x3a
   1cea8:	ldrb	r3, [r5, #1]
   1ceac:	beq	1cf64 <argp_parse@@Base+0x40f8>
   1ceb0:	cmp	r3, #0
   1ceb4:	ldr	r5, [r4]
   1ceb8:	beq	1cf38 <argp_parse@@Base+0x40cc>
   1cebc:	ldr	r3, [r4, #8]
   1cec0:	mov	r0, r8
   1cec4:	add	r5, r5, #1
   1cec8:	str	r9, [r4, #12]
   1cecc:	str	r5, [r4]
   1ced0:	str	r3, [sp, #28]
   1ced4:	mov	r3, #0
   1ced8:	str	r3, [r4, #20]
   1cedc:	ldr	r2, [sp, #28]
   1cee0:	b	1cc70 <argp_parse@@Base+0x3e04>
   1cee4:	ldr	r2, [sp, #84]	; 0x54
   1cee8:	ldr	r3, [pc, #412]	; 1d08c <argp_parse@@Base+0x4220>
   1ceec:	str	r2, [sp, #4]
   1cef0:	ldr	r2, [sp, #80]	; 0x50
   1cef4:	str	r3, [sp, #16]
   1cef8:	str	r2, [sp]
   1cefc:	add	r9, r9, #1
   1cf00:	str	sl, [sp, #12]
   1cf04:	str	r4, [sp, #8]
   1cf08:	ldr	r3, [sp, #36]	; 0x24
   1cf0c:	mov	r2, fp
   1cf10:	ldr	r1, [sp, #32]
   1cf14:	mov	r0, r6
   1cf18:	str	r9, [r4, #20]
   1cf1c:	bl	1bdb0 <argp_parse@@Base+0x2f44>
   1cf20:	cmn	r0, #1
   1cf24:	bne	1ce78 <argp_parse@@Base+0x400c>
   1cf28:	ldr	r3, [r4]
   1cf2c:	ldr	r2, [sp, #32]
   1cf30:	ldr	r9, [r2, r3, lsl #2]
   1cf34:	b	1cde8 <argp_parse@@Base+0x3f7c>
   1cf38:	cmp	r6, r5
   1cf3c:	beq	1cfd4 <argp_parse@@Base+0x4168>
   1cf40:	ldr	r3, [r4, #8]
   1cf44:	mov	r0, r8
   1cf48:	str	r3, [sp, #28]
   1cf4c:	ldr	r3, [sp, #32]
   1cf50:	ldr	r9, [r3, r5, lsl #2]
   1cf54:	add	r5, r5, #1
   1cf58:	str	r9, [r4, #12]
   1cf5c:	str	r5, [r4]
   1cf60:	b	1ced4 <argp_parse@@Base+0x4068>
   1cf64:	cmp	r3, #0
   1cf68:	moveq	r9, r3
   1cf6c:	ldrne	r5, [r4]
   1cf70:	mov	r3, #0
   1cf74:	str	r3, [r4, #20]
   1cf78:	ldr	r3, [r4, #8]
   1cf7c:	addne	r5, r5, #1
   1cf80:	ldreq	r5, [r4]
   1cf84:	strne	r5, [r4]
   1cf88:	str	r9, [r4, #12]
   1cf8c:	mov	r0, r8
   1cf90:	str	r3, [sp, #28]
   1cf94:	mov	r2, r3
   1cf98:	b	1cc70 <argp_parse@@Base+0x3e04>
   1cf9c:	str	r3, [sp, #16]
   1cfa0:	ldr	r3, [sp, #84]	; 0x54
   1cfa4:	add	r9, r9, #2
   1cfa8:	str	r3, [sp, #4]
   1cfac:	ldr	r3, [sp, #80]	; 0x50
   1cfb0:	str	sl, [sp, #12]
   1cfb4:	str	r3, [sp]
   1cfb8:	str	r4, [sp, #8]
   1cfbc:	mov	r3, r2
   1cfc0:	ldr	r1, [sp, #32]
   1cfc4:	mov	r2, fp
   1cfc8:	mov	r0, r6
   1cfcc:	str	r9, [r4, #20]
   1cfd0:	b	1ce74 <argp_parse@@Base+0x4008>
   1cfd4:	cmp	sl, #0
   1cfd8:	bne	1d04c <argp_parse@@Base+0x41e0>
   1cfdc:	str	r8, [r4, #8]
   1cfe0:	ldrb	r8, [fp]
   1cfe4:	cmp	r8, #58	; 0x3a
   1cfe8:	moveq	r0, r8
   1cfec:	ldreq	r5, [r4]
   1cff0:	ldreq	r9, [r4, #12]
   1cff4:	ldrne	r5, [r4]
   1cff8:	ldrne	r9, [r4, #12]
   1cffc:	movne	r0, #63	; 0x3f
   1d000:	b	1ced4 <argp_parse@@Base+0x4068>
   1d004:	cmp	sl, #0
   1d008:	beq	1d028 <argp_parse@@Base+0x41bc>
   1d00c:	ldr	r1, [pc, #104]	; 1d07c <argp_parse@@Base+0x4210>
   1d010:	ldr	r3, [sp, #32]
   1d014:	ldr	r0, [r1]
   1d018:	ldr	r2, [r3]
   1d01c:	ldr	r1, [pc, #108]	; 1d090 <argp_parse@@Base+0x4224>
   1d020:	mov	r3, r8
   1d024:	bl	11400 <fprintf@plt>
   1d028:	str	r8, [r4, #8]
   1d02c:	ldrb	r8, [fp]
   1d030:	ldr	r5, [r4]
   1d034:	ldr	r9, [r4, #12]
   1d038:	cmp	r8, #58	; 0x3a
   1d03c:	movne	r0, #63	; 0x3f
   1d040:	moveq	r0, #58	; 0x3a
   1d044:	ldr	r2, [sp, #28]
   1d048:	b	1cc70 <argp_parse@@Base+0x3e04>
   1d04c:	ldr	r3, [sp, #32]
   1d050:	ldr	r1, [pc, #36]	; 1d07c <argp_parse@@Base+0x4210>
   1d054:	ldr	r2, [r3]
   1d058:	ldr	r0, [r1]
   1d05c:	mov	r3, r8
   1d060:	ldr	r1, [pc, #40]	; 1d090 <argp_parse@@Base+0x4224>
   1d064:	bl	11400 <fprintf@plt>
   1d068:	b	1cfdc <argp_parse@@Base+0x4170>
   1d06c:	andeq	pc, r2, ip, lsr r4	; <UNPREDICTABLE>
   1d070:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   1d074:	andeq	lr, r1, r8, lsl #11
   1d078:	andeq	pc, r2, r4, asr #31
   1d07c:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   1d080:	andeq	lr, r1, r8, lsl fp
   1d084:	andeq	lr, r1, r4, lsl #22
   1d088:	andeq	lr, r1, r0, ror #22
   1d08c:	andeq	lr, r1, r4, lsl fp
   1d090:	andeq	lr, r1, r4, lsr fp
   1d094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d098:	sub	sp, sp, #20
   1d09c:	ldr	r7, [pc, #1052]	; 1d4c0 <argp_parse@@Base+0x4654>
   1d0a0:	ldr	r4, [pc, #1052]	; 1d4c4 <argp_parse@@Base+0x4658>
   1d0a4:	subs	r6, r0, #0
   1d0a8:	ldr	r5, [r7]
   1d0ac:	ldr	r3, [r7, #4]
   1d0b0:	str	r1, [sp, #4]
   1d0b4:	str	r5, [r4]
   1d0b8:	str	r3, [r4, #4]
   1d0bc:	ble	1d394 <argp_parse@@Base+0x4528>
   1d0c0:	mov	sl, r2
   1d0c4:	cmp	r5, #0
   1d0c8:	mov	r2, #0
   1d0cc:	str	r2, [r4, #12]
   1d0d0:	beq	1d17c <argp_parse@@Base+0x4310>
   1d0d4:	ldr	r2, [r4, #16]
   1d0d8:	cmp	r2, #0
   1d0dc:	beq	1d188 <argp_parse@@Base+0x431c>
   1d0e0:	ldrb	r2, [sl]
   1d0e4:	sub	r1, r2, #43	; 0x2b
   1d0e8:	tst	r1, #253	; 0xfd
   1d0ec:	ldrbeq	r2, [sl, #1]
   1d0f0:	addeq	sl, sl, #1
   1d0f4:	cmp	r2, #58	; 0x3a
   1d0f8:	ldr	r2, [r4, #20]
   1d0fc:	moveq	r3, #0
   1d100:	cmp	r2, #0
   1d104:	beq	1d1dc <argp_parse@@Base+0x4370>
   1d108:	ldrb	r1, [r2]
   1d10c:	cmp	r1, #0
   1d110:	beq	1d1dc <argp_parse@@Base+0x4370>
   1d114:	add	r9, r2, #1
   1d118:	str	r9, [r4, #20]
   1d11c:	ldrb	r8, [r2]
   1d120:	mov	r0, sl
   1d124:	str	r3, [sp, #12]
   1d128:	mov	r1, r8
   1d12c:	str	r2, [sp, #8]
   1d130:	bl	113f4 <strchr@plt>
   1d134:	ldr	r2, [sp, #8]
   1d138:	mov	fp, r8
   1d13c:	ldr	r3, [sp, #12]
   1d140:	ldrb	r1, [r2, #1]
   1d144:	cmp	r1, #0
   1d148:	addeq	r5, r5, #1
   1d14c:	sub	r1, r8, #58	; 0x3a
   1d150:	streq	r5, [r4]
   1d154:	cmp	r0, #0
   1d158:	cmpne	r1, #1
   1d15c:	bls	1d2c8 <argp_parse@@Base+0x445c>
   1d160:	ldrb	r1, [r0, #1]
   1d164:	cmp	r1, #58	; 0x3a
   1d168:	beq	1d3d4 <argp_parse@@Base+0x4568>
   1d16c:	mov	r0, r8
   1d170:	ldr	r9, [r4, #12]
   1d174:	ldr	fp, [r4, #8]
   1d178:	b	1d2b0 <argp_parse@@Base+0x4444>
   1d17c:	mov	r2, #1
   1d180:	mov	r5, r2
   1d184:	str	r2, [r4]
   1d188:	mov	r2, #0
   1d18c:	str	r5, [r4, #32]
   1d190:	str	r5, [r4, #28]
   1d194:	str	r2, [r4, #20]
   1d198:	ldrb	r1, [sl]
   1d19c:	cmp	r1, #45	; 0x2d
   1d1a0:	moveq	r1, #2
   1d1a4:	addeq	sl, sl, #1
   1d1a8:	streq	r1, [r4, #24]
   1d1ac:	beq	1d1c8 <argp_parse@@Base+0x435c>
   1d1b0:	cmp	r1, #43	; 0x2b
   1d1b4:	addeq	sl, sl, #1
   1d1b8:	moveq	r1, r2
   1d1bc:	movne	r1, r2
   1d1c0:	streq	r2, [r4, #24]
   1d1c4:	strne	r2, [r4, #24]
   1d1c8:	mov	r2, #1
   1d1cc:	str	r2, [r4, #16]
   1d1d0:	ldrb	r2, [sl]
   1d1d4:	cmp	r2, #58	; 0x3a
   1d1d8:	beq	1d300 <argp_parse@@Base+0x4494>
   1d1dc:	add	r1, r4, #24
   1d1e0:	ldm	r1, {r1, r2, r8}
   1d1e4:	cmp	r8, r5
   1d1e8:	movgt	r8, r5
   1d1ec:	strgt	r5, [r4, #32]
   1d1f0:	cmp	r5, r2
   1d1f4:	movlt	r2, r5
   1d1f8:	strlt	r5, [r4, #28]
   1d1fc:	cmp	r1, #1
   1d200:	beq	1d314 <argp_parse@@Base+0x44a8>
   1d204:	cmp	r6, r5
   1d208:	str	r3, [sp, #8]
   1d20c:	beq	1d384 <argp_parse@@Base+0x4518>
   1d210:	ldr	fp, [sp, #4]
   1d214:	ldr	r1, [pc, #684]	; 1d4c8 <argp_parse@@Base+0x465c>
   1d218:	ldr	r9, [fp, r5, lsl #2]
   1d21c:	mov	r0, r9
   1d220:	bl	11208 <strcmp@plt>
   1d224:	ldr	r3, [sp, #8]
   1d228:	cmp	r0, #0
   1d22c:	bne	1d284 <argp_parse@@Base+0x4418>
   1d230:	add	r3, r5, #1
   1d234:	ldr	r5, [r4, #28]
   1d238:	str	r3, [r4]
   1d23c:	cmp	r5, r8
   1d240:	beq	1d3c8 <argp_parse@@Base+0x455c>
   1d244:	cmp	r3, r8
   1d248:	beq	1d25c <argp_parse@@Base+0x43f0>
   1d24c:	mov	r0, fp
   1d250:	ldr	r1, [pc, #620]	; 1d4c4 <argp_parse@@Base+0x4658>
   1d254:	bl	1bcf4 <argp_parse@@Base+0x2e88>
   1d258:	ldr	r5, [r4, #28]
   1d25c:	mov	r8, r6
   1d260:	cmp	r8, r5
   1d264:	str	r6, [r4, #32]
   1d268:	str	r6, [r4]
   1d26c:	beq	1d390 <argp_parse@@Base+0x4524>
   1d270:	str	r5, [r4]
   1d274:	ldr	r9, [r4, #12]
   1d278:	ldr	fp, [r4, #8]
   1d27c:	mvn	r0, #0
   1d280:	b	1d2b0 <argp_parse@@Base+0x4444>
   1d284:	ldrb	r2, [r9]
   1d288:	cmp	r2, #45	; 0x2d
   1d28c:	beq	1d3b4 <argp_parse@@Base+0x4548>
   1d290:	ldr	r3, [r4, #24]
   1d294:	cmp	r3, #0
   1d298:	beq	1d394 <argp_parse@@Base+0x4528>
   1d29c:	ldr	fp, [r4, #8]
   1d2a0:	mov	r0, #1
   1d2a4:	add	r5, r5, #1
   1d2a8:	str	r5, [r4]
   1d2ac:	str	r9, [r4, #12]
   1d2b0:	ldr	r3, [pc, #532]	; 1d4cc <argp_parse@@Base+0x4660>
   1d2b4:	str	r5, [r7]
   1d2b8:	str	fp, [r7, #8]
   1d2bc:	str	r9, [r3]
   1d2c0:	add	sp, sp, #20
   1d2c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2c8:	cmp	r3, #0
   1d2cc:	beq	1d2f0 <argp_parse@@Base+0x4484>
   1d2d0:	ldr	r3, [sp, #4]
   1d2d4:	ldr	r1, [pc, #500]	; 1d4d0 <argp_parse@@Base+0x4664>
   1d2d8:	ldr	r2, [r3]
   1d2dc:	ldr	r0, [r1]
   1d2e0:	mov	r3, r8
   1d2e4:	ldr	r1, [pc, #488]	; 1d4d4 <argp_parse@@Base+0x4668>
   1d2e8:	bl	11400 <fprintf@plt>
   1d2ec:	ldr	r5, [r4]
   1d2f0:	str	r8, [r4, #8]
   1d2f4:	ldr	r9, [r4, #12]
   1d2f8:	mov	r0, #63	; 0x3f
   1d2fc:	b	1d2b0 <argp_parse@@Base+0x4444>
   1d300:	cmp	r1, #1
   1d304:	mov	r8, r5
   1d308:	mov	r2, r5
   1d30c:	mov	r3, #0
   1d310:	bne	1d204 <argp_parse@@Base+0x4398>
   1d314:	cmp	r2, r8
   1d318:	beq	1d40c <argp_parse@@Base+0x45a0>
   1d31c:	cmp	r5, r8
   1d320:	beq	1d33c <argp_parse@@Base+0x44d0>
   1d324:	ldr	r1, [pc, #408]	; 1d4c4 <argp_parse@@Base+0x4658>
   1d328:	ldr	r0, [sp, #4]
   1d32c:	str	r3, [sp, #8]
   1d330:	bl	1bcf4 <argp_parse@@Base+0x2e88>
   1d334:	ldr	r8, [r4]
   1d338:	ldr	r3, [sp, #8]
   1d33c:	cmp	r6, r8
   1d340:	ldrgt	r2, [sp, #4]
   1d344:	addgt	r1, r2, r8, lsl #2
   1d348:	bgt	1d360 <argp_parse@@Base+0x44f4>
   1d34c:	b	1d37c <argp_parse@@Base+0x4510>
   1d350:	add	r8, r8, #1
   1d354:	cmp	r6, r8
   1d358:	str	r8, [r4]
   1d35c:	beq	1d3a4 <argp_parse@@Base+0x4538>
   1d360:	ldr	r2, [r1], #4
   1d364:	ldrb	r0, [r2]
   1d368:	cmp	r0, #45	; 0x2d
   1d36c:	bne	1d350 <argp_parse@@Base+0x44e4>
   1d370:	ldrb	r2, [r2, #1]
   1d374:	cmp	r2, #0
   1d378:	beq	1d350 <argp_parse@@Base+0x44e4>
   1d37c:	mov	r5, r8
   1d380:	b	1d3a8 <argp_parse@@Base+0x453c>
   1d384:	ldr	r5, [r4, #28]
   1d388:	cmp	r8, r5
   1d38c:	bne	1d270 <argp_parse@@Base+0x4404>
   1d390:	mov	r5, r6
   1d394:	ldr	r9, [r4, #12]
   1d398:	ldr	fp, [r4, #8]
   1d39c:	mvn	r0, #0
   1d3a0:	b	1d2b0 <argp_parse@@Base+0x4444>
   1d3a4:	mov	r5, r6
   1d3a8:	mov	r8, r5
   1d3ac:	str	r5, [r4, #32]
   1d3b0:	b	1d204 <argp_parse@@Base+0x4398>
   1d3b4:	ldrb	r2, [r9, #1]
   1d3b8:	cmp	r2, #0
   1d3bc:	beq	1d290 <argp_parse@@Base+0x4424>
   1d3c0:	add	r2, r9, #1
   1d3c4:	b	1d114 <argp_parse@@Base+0x42a8>
   1d3c8:	mov	r5, r3
   1d3cc:	str	r3, [r4, #28]
   1d3d0:	b	1d25c <argp_parse@@Base+0x43f0>
   1d3d4:	ldrb	r1, [r0, #2]
   1d3d8:	cmp	r1, #58	; 0x3a
   1d3dc:	beq	1d448 <argp_parse@@Base+0x45dc>
   1d3e0:	ldrb	r2, [r2, #1]
   1d3e4:	cmp	r2, #0
   1d3e8:	beq	1d41c <argp_parse@@Base+0x45b0>
   1d3ec:	ldr	fp, [r4, #8]
   1d3f0:	mov	r0, r8
   1d3f4:	add	r5, r5, #1
   1d3f8:	str	r5, [r4]
   1d3fc:	str	r9, [r4, #12]
   1d400:	mov	r3, #0
   1d404:	str	r3, [r4, #20]
   1d408:	b	1d2b0 <argp_parse@@Base+0x4444>
   1d40c:	cmp	r5, r8
   1d410:	movne	r8, r5
   1d414:	strne	r5, [r4, #28]
   1d418:	b	1d33c <argp_parse@@Base+0x44d0>
   1d41c:	cmp	r6, r5
   1d420:	beq	1d474 <argp_parse@@Base+0x4608>
   1d424:	ldr	r2, [sp, #4]
   1d428:	add	r3, r5, #1
   1d42c:	ldr	fp, [r4, #8]
   1d430:	ldr	r9, [r2, r5, lsl #2]
   1d434:	mov	r0, r8
   1d438:	mov	r5, r3
   1d43c:	str	r9, [r4, #12]
   1d440:	str	r3, [r4]
   1d444:	b	1d400 <argp_parse@@Base+0x4594>
   1d448:	ldrb	r3, [r2, #1]
   1d44c:	mov	r0, r8
   1d450:	ldr	fp, [r4, #8]
   1d454:	cmp	r3, #0
   1d458:	moveq	r9, r3
   1d45c:	addne	r5, r5, #1
   1d460:	mov	r3, #0
   1d464:	strne	r5, [r4]
   1d468:	str	r9, [r4, #12]
   1d46c:	str	r3, [r4, #20]
   1d470:	b	1d2b0 <argp_parse@@Base+0x4444>
   1d474:	cmp	r3, #0
   1d478:	beq	1d49c <argp_parse@@Base+0x4630>
   1d47c:	ldr	r3, [sp, #4]
   1d480:	ldr	r1, [pc, #72]	; 1d4d0 <argp_parse@@Base+0x4664>
   1d484:	ldr	r2, [r3]
   1d488:	ldr	r0, [r1]
   1d48c:	mov	r3, r8
   1d490:	ldr	r1, [pc, #64]	; 1d4d8 <argp_parse@@Base+0x466c>
   1d494:	bl	11400 <fprintf@plt>
   1d498:	ldr	r6, [r4]
   1d49c:	str	r8, [r4, #8]
   1d4a0:	ldrb	r8, [sl]
   1d4a4:	mov	r5, r6
   1d4a8:	cmp	r8, #58	; 0x3a
   1d4ac:	moveq	r0, r8
   1d4b0:	ldreq	r9, [r4, #12]
   1d4b4:	ldrne	r9, [r4, #12]
   1d4b8:	movne	r0, #63	; 0x3f
   1d4bc:	b	1d400 <argp_parse@@Base+0x4594>
   1d4c0:	andeq	pc, r2, ip, lsr r4	; <UNPREDICTABLE>
   1d4c4:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   1d4c8:	andeq	lr, r1, r8, lsl #11
   1d4cc:	andeq	pc, r2, r4, asr #31
   1d4d0:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   1d4d4:	andeq	lr, r1, r8, lsl fp
   1d4d8:	andeq	lr, r1, r4, lsr fp
   1d4dc:	push	{r4, r5, r6, lr}
   1d4e0:	subs	r4, r2, #0
   1d4e4:	mov	r6, r0
   1d4e8:	mov	r5, r1
   1d4ec:	beq	1d518 <argp_parse@@Base+0x46ac>
   1d4f0:	mov	r1, r4
   1d4f4:	mvn	r0, #0
   1d4f8:	bl	1d528 <argp_parse@@Base+0x46bc>
   1d4fc:	cmp	r0, r5
   1d500:	bcs	1d518 <argp_parse@@Base+0x46ac>
   1d504:	bl	1140c <__errno_location@plt>
   1d508:	mov	r3, #12
   1d50c:	str	r3, [r0]
   1d510:	mov	r0, #0
   1d514:	pop	{r4, r5, r6, pc}
   1d518:	mul	r1, r5, r4
   1d51c:	mov	r0, r6
   1d520:	pop	{r4, r5, r6, lr}
   1d524:	b	1b428 <argp_parse@@Base+0x25bc>
   1d528:	subs	r2, r1, #1
   1d52c:	bxeq	lr
   1d530:	bcc	1d708 <argp_parse@@Base+0x489c>
   1d534:	cmp	r0, r1
   1d538:	bls	1d6ec <argp_parse@@Base+0x4880>
   1d53c:	tst	r1, r2
   1d540:	beq	1d6f8 <argp_parse@@Base+0x488c>
   1d544:	clz	r3, r0
   1d548:	clz	r2, r1
   1d54c:	sub	r3, r2, r3
   1d550:	rsbs	r3, r3, #31
   1d554:	addne	r3, r3, r3, lsl #1
   1d558:	mov	r2, #0
   1d55c:	addne	pc, pc, r3, lsl #2
   1d560:	nop			; (mov r0, r0)
   1d564:	cmp	r0, r1, lsl #31
   1d568:	adc	r2, r2, r2
   1d56c:	subcs	r0, r0, r1, lsl #31
   1d570:	cmp	r0, r1, lsl #30
   1d574:	adc	r2, r2, r2
   1d578:	subcs	r0, r0, r1, lsl #30
   1d57c:	cmp	r0, r1, lsl #29
   1d580:	adc	r2, r2, r2
   1d584:	subcs	r0, r0, r1, lsl #29
   1d588:	cmp	r0, r1, lsl #28
   1d58c:	adc	r2, r2, r2
   1d590:	subcs	r0, r0, r1, lsl #28
   1d594:	cmp	r0, r1, lsl #27
   1d598:	adc	r2, r2, r2
   1d59c:	subcs	r0, r0, r1, lsl #27
   1d5a0:	cmp	r0, r1, lsl #26
   1d5a4:	adc	r2, r2, r2
   1d5a8:	subcs	r0, r0, r1, lsl #26
   1d5ac:	cmp	r0, r1, lsl #25
   1d5b0:	adc	r2, r2, r2
   1d5b4:	subcs	r0, r0, r1, lsl #25
   1d5b8:	cmp	r0, r1, lsl #24
   1d5bc:	adc	r2, r2, r2
   1d5c0:	subcs	r0, r0, r1, lsl #24
   1d5c4:	cmp	r0, r1, lsl #23
   1d5c8:	adc	r2, r2, r2
   1d5cc:	subcs	r0, r0, r1, lsl #23
   1d5d0:	cmp	r0, r1, lsl #22
   1d5d4:	adc	r2, r2, r2
   1d5d8:	subcs	r0, r0, r1, lsl #22
   1d5dc:	cmp	r0, r1, lsl #21
   1d5e0:	adc	r2, r2, r2
   1d5e4:	subcs	r0, r0, r1, lsl #21
   1d5e8:	cmp	r0, r1, lsl #20
   1d5ec:	adc	r2, r2, r2
   1d5f0:	subcs	r0, r0, r1, lsl #20
   1d5f4:	cmp	r0, r1, lsl #19
   1d5f8:	adc	r2, r2, r2
   1d5fc:	subcs	r0, r0, r1, lsl #19
   1d600:	cmp	r0, r1, lsl #18
   1d604:	adc	r2, r2, r2
   1d608:	subcs	r0, r0, r1, lsl #18
   1d60c:	cmp	r0, r1, lsl #17
   1d610:	adc	r2, r2, r2
   1d614:	subcs	r0, r0, r1, lsl #17
   1d618:	cmp	r0, r1, lsl #16
   1d61c:	adc	r2, r2, r2
   1d620:	subcs	r0, r0, r1, lsl #16
   1d624:	cmp	r0, r1, lsl #15
   1d628:	adc	r2, r2, r2
   1d62c:	subcs	r0, r0, r1, lsl #15
   1d630:	cmp	r0, r1, lsl #14
   1d634:	adc	r2, r2, r2
   1d638:	subcs	r0, r0, r1, lsl #14
   1d63c:	cmp	r0, r1, lsl #13
   1d640:	adc	r2, r2, r2
   1d644:	subcs	r0, r0, r1, lsl #13
   1d648:	cmp	r0, r1, lsl #12
   1d64c:	adc	r2, r2, r2
   1d650:	subcs	r0, r0, r1, lsl #12
   1d654:	cmp	r0, r1, lsl #11
   1d658:	adc	r2, r2, r2
   1d65c:	subcs	r0, r0, r1, lsl #11
   1d660:	cmp	r0, r1, lsl #10
   1d664:	adc	r2, r2, r2
   1d668:	subcs	r0, r0, r1, lsl #10
   1d66c:	cmp	r0, r1, lsl #9
   1d670:	adc	r2, r2, r2
   1d674:	subcs	r0, r0, r1, lsl #9
   1d678:	cmp	r0, r1, lsl #8
   1d67c:	adc	r2, r2, r2
   1d680:	subcs	r0, r0, r1, lsl #8
   1d684:	cmp	r0, r1, lsl #7
   1d688:	adc	r2, r2, r2
   1d68c:	subcs	r0, r0, r1, lsl #7
   1d690:	cmp	r0, r1, lsl #6
   1d694:	adc	r2, r2, r2
   1d698:	subcs	r0, r0, r1, lsl #6
   1d69c:	cmp	r0, r1, lsl #5
   1d6a0:	adc	r2, r2, r2
   1d6a4:	subcs	r0, r0, r1, lsl #5
   1d6a8:	cmp	r0, r1, lsl #4
   1d6ac:	adc	r2, r2, r2
   1d6b0:	subcs	r0, r0, r1, lsl #4
   1d6b4:	cmp	r0, r1, lsl #3
   1d6b8:	adc	r2, r2, r2
   1d6bc:	subcs	r0, r0, r1, lsl #3
   1d6c0:	cmp	r0, r1, lsl #2
   1d6c4:	adc	r2, r2, r2
   1d6c8:	subcs	r0, r0, r1, lsl #2
   1d6cc:	cmp	r0, r1, lsl #1
   1d6d0:	adc	r2, r2, r2
   1d6d4:	subcs	r0, r0, r1, lsl #1
   1d6d8:	cmp	r0, r1
   1d6dc:	adc	r2, r2, r2
   1d6e0:	subcs	r0, r0, r1
   1d6e4:	mov	r0, r2
   1d6e8:	bx	lr
   1d6ec:	moveq	r0, #1
   1d6f0:	movne	r0, #0
   1d6f4:	bx	lr
   1d6f8:	clz	r2, r1
   1d6fc:	rsb	r2, r2, #31
   1d700:	lsr	r0, r0, r2
   1d704:	bx	lr
   1d708:	cmp	r0, #0
   1d70c:	mvnne	r0, #0
   1d710:	b	1d974 <argp_parse@@Base+0x4b08>
   1d714:	cmp	r1, #0
   1d718:	beq	1d708 <argp_parse@@Base+0x489c>
   1d71c:	push	{r0, r1, lr}
   1d720:	bl	1d528 <argp_parse@@Base+0x46bc>
   1d724:	pop	{r1, r2, lr}
   1d728:	mul	r3, r2, r0
   1d72c:	sub	r1, r1, r3
   1d730:	bx	lr
   1d734:	cmp	r1, #0
   1d738:	beq	1d944 <argp_parse@@Base+0x4ad8>
   1d73c:	eor	ip, r0, r1
   1d740:	rsbmi	r1, r1, #0
   1d744:	subs	r2, r1, #1
   1d748:	beq	1d910 <argp_parse@@Base+0x4aa4>
   1d74c:	movs	r3, r0
   1d750:	rsbmi	r3, r0, #0
   1d754:	cmp	r3, r1
   1d758:	bls	1d91c <argp_parse@@Base+0x4ab0>
   1d75c:	tst	r1, r2
   1d760:	beq	1d92c <argp_parse@@Base+0x4ac0>
   1d764:	clz	r2, r3
   1d768:	clz	r0, r1
   1d76c:	sub	r2, r0, r2
   1d770:	rsbs	r2, r2, #31
   1d774:	addne	r2, r2, r2, lsl #1
   1d778:	mov	r0, #0
   1d77c:	addne	pc, pc, r2, lsl #2
   1d780:	nop			; (mov r0, r0)
   1d784:	cmp	r3, r1, lsl #31
   1d788:	adc	r0, r0, r0
   1d78c:	subcs	r3, r3, r1, lsl #31
   1d790:	cmp	r3, r1, lsl #30
   1d794:	adc	r0, r0, r0
   1d798:	subcs	r3, r3, r1, lsl #30
   1d79c:	cmp	r3, r1, lsl #29
   1d7a0:	adc	r0, r0, r0
   1d7a4:	subcs	r3, r3, r1, lsl #29
   1d7a8:	cmp	r3, r1, lsl #28
   1d7ac:	adc	r0, r0, r0
   1d7b0:	subcs	r3, r3, r1, lsl #28
   1d7b4:	cmp	r3, r1, lsl #27
   1d7b8:	adc	r0, r0, r0
   1d7bc:	subcs	r3, r3, r1, lsl #27
   1d7c0:	cmp	r3, r1, lsl #26
   1d7c4:	adc	r0, r0, r0
   1d7c8:	subcs	r3, r3, r1, lsl #26
   1d7cc:	cmp	r3, r1, lsl #25
   1d7d0:	adc	r0, r0, r0
   1d7d4:	subcs	r3, r3, r1, lsl #25
   1d7d8:	cmp	r3, r1, lsl #24
   1d7dc:	adc	r0, r0, r0
   1d7e0:	subcs	r3, r3, r1, lsl #24
   1d7e4:	cmp	r3, r1, lsl #23
   1d7e8:	adc	r0, r0, r0
   1d7ec:	subcs	r3, r3, r1, lsl #23
   1d7f0:	cmp	r3, r1, lsl #22
   1d7f4:	adc	r0, r0, r0
   1d7f8:	subcs	r3, r3, r1, lsl #22
   1d7fc:	cmp	r3, r1, lsl #21
   1d800:	adc	r0, r0, r0
   1d804:	subcs	r3, r3, r1, lsl #21
   1d808:	cmp	r3, r1, lsl #20
   1d80c:	adc	r0, r0, r0
   1d810:	subcs	r3, r3, r1, lsl #20
   1d814:	cmp	r3, r1, lsl #19
   1d818:	adc	r0, r0, r0
   1d81c:	subcs	r3, r3, r1, lsl #19
   1d820:	cmp	r3, r1, lsl #18
   1d824:	adc	r0, r0, r0
   1d828:	subcs	r3, r3, r1, lsl #18
   1d82c:	cmp	r3, r1, lsl #17
   1d830:	adc	r0, r0, r0
   1d834:	subcs	r3, r3, r1, lsl #17
   1d838:	cmp	r3, r1, lsl #16
   1d83c:	adc	r0, r0, r0
   1d840:	subcs	r3, r3, r1, lsl #16
   1d844:	cmp	r3, r1, lsl #15
   1d848:	adc	r0, r0, r0
   1d84c:	subcs	r3, r3, r1, lsl #15
   1d850:	cmp	r3, r1, lsl #14
   1d854:	adc	r0, r0, r0
   1d858:	subcs	r3, r3, r1, lsl #14
   1d85c:	cmp	r3, r1, lsl #13
   1d860:	adc	r0, r0, r0
   1d864:	subcs	r3, r3, r1, lsl #13
   1d868:	cmp	r3, r1, lsl #12
   1d86c:	adc	r0, r0, r0
   1d870:	subcs	r3, r3, r1, lsl #12
   1d874:	cmp	r3, r1, lsl #11
   1d878:	adc	r0, r0, r0
   1d87c:	subcs	r3, r3, r1, lsl #11
   1d880:	cmp	r3, r1, lsl #10
   1d884:	adc	r0, r0, r0
   1d888:	subcs	r3, r3, r1, lsl #10
   1d88c:	cmp	r3, r1, lsl #9
   1d890:	adc	r0, r0, r0
   1d894:	subcs	r3, r3, r1, lsl #9
   1d898:	cmp	r3, r1, lsl #8
   1d89c:	adc	r0, r0, r0
   1d8a0:	subcs	r3, r3, r1, lsl #8
   1d8a4:	cmp	r3, r1, lsl #7
   1d8a8:	adc	r0, r0, r0
   1d8ac:	subcs	r3, r3, r1, lsl #7
   1d8b0:	cmp	r3, r1, lsl #6
   1d8b4:	adc	r0, r0, r0
   1d8b8:	subcs	r3, r3, r1, lsl #6
   1d8bc:	cmp	r3, r1, lsl #5
   1d8c0:	adc	r0, r0, r0
   1d8c4:	subcs	r3, r3, r1, lsl #5
   1d8c8:	cmp	r3, r1, lsl #4
   1d8cc:	adc	r0, r0, r0
   1d8d0:	subcs	r3, r3, r1, lsl #4
   1d8d4:	cmp	r3, r1, lsl #3
   1d8d8:	adc	r0, r0, r0
   1d8dc:	subcs	r3, r3, r1, lsl #3
   1d8e0:	cmp	r3, r1, lsl #2
   1d8e4:	adc	r0, r0, r0
   1d8e8:	subcs	r3, r3, r1, lsl #2
   1d8ec:	cmp	r3, r1, lsl #1
   1d8f0:	adc	r0, r0, r0
   1d8f4:	subcs	r3, r3, r1, lsl #1
   1d8f8:	cmp	r3, r1
   1d8fc:	adc	r0, r0, r0
   1d900:	subcs	r3, r3, r1
   1d904:	cmp	ip, #0
   1d908:	rsbmi	r0, r0, #0
   1d90c:	bx	lr
   1d910:	teq	ip, r0
   1d914:	rsbmi	r0, r0, #0
   1d918:	bx	lr
   1d91c:	movcc	r0, #0
   1d920:	asreq	r0, ip, #31
   1d924:	orreq	r0, r0, #1
   1d928:	bx	lr
   1d92c:	clz	r2, r1
   1d930:	rsb	r2, r2, #31
   1d934:	cmp	ip, #0
   1d938:	lsr	r0, r3, r2
   1d93c:	rsbmi	r0, r0, #0
   1d940:	bx	lr
   1d944:	cmp	r0, #0
   1d948:	mvngt	r0, #-2147483648	; 0x80000000
   1d94c:	movlt	r0, #-2147483648	; 0x80000000
   1d950:	b	1d974 <argp_parse@@Base+0x4b08>
   1d954:	cmp	r1, #0
   1d958:	beq	1d944 <argp_parse@@Base+0x4ad8>
   1d95c:	push	{r0, r1, lr}
   1d960:	bl	1d73c <argp_parse@@Base+0x48d0>
   1d964:	pop	{r1, r2, lr}
   1d968:	mul	r3, r2, r0
   1d96c:	sub	r1, r1, r3
   1d970:	bx	lr
   1d974:	push	{r1, lr}
   1d978:	mov	r0, #8
   1d97c:	bl	111fc <raise@plt>
   1d980:	pop	{r1, pc}
   1d984:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d988:	mov	r7, r0
   1d98c:	ldr	r6, [pc, #72]	; 1d9dc <argp_parse@@Base+0x4b70>
   1d990:	ldr	r5, [pc, #72]	; 1d9e0 <argp_parse@@Base+0x4b74>
   1d994:	add	r6, pc, r6
   1d998:	add	r5, pc, r5
   1d99c:	sub	r6, r6, r5
   1d9a0:	mov	r8, r1
   1d9a4:	mov	r9, r2
   1d9a8:	bl	111b8 <fdopen@plt-0x20>
   1d9ac:	asrs	r6, r6, #2
   1d9b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d9b4:	mov	r4, #0
   1d9b8:	add	r4, r4, #1
   1d9bc:	ldr	r3, [r5], #4
   1d9c0:	mov	r2, r9
   1d9c4:	mov	r1, r8
   1d9c8:	mov	r0, r7
   1d9cc:	blx	r3
   1d9d0:	cmp	r6, r4
   1d9d4:	bne	1d9b8 <argp_parse@@Base+0x4b4c>
   1d9d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d9dc:	andeq	r1, r1, ip, ror #10
   1d9e0:	andeq	r1, r1, r4, ror #10
   1d9e4:	bx	lr

Disassembly of section .fini:

0001d9e8 <.fini>:
   1d9e8:	push	{r3, lr}
   1d9ec:	pop	{r3, pc}
