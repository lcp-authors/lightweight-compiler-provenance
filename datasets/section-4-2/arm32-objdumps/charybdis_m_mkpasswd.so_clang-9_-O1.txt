
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

00000610 <_init>:
 610:	push	{r3, lr}
 614:	bl	6cc <call_weak_fn>
 618:	pop	{r3, pc}

Disassembly of section .plt:

0000061c <.plt>:
 61c:	push	{lr}		; (str lr, [sp, #-4]!)
 620:	ldr	lr, [pc, #4]	; 62c <.plt+0x10>
 624:	add	lr, pc, lr
 628:	ldr	pc, [lr, #8]!
 62c:	.word	0x000109d4

00000630 <rb_current_time@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2516]!	; 0x9d4

0000063c <__cxa_finalize@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2508]!	; 0x9cc

00000648 <sendto_one@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2500]!	; 0x9c4

00000654 <read@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000660 <time@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2484]!	; 0x9b4

0000066c <rb_crypt@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #16, 20	; 0x10000
 674:	ldr	pc, [ip, #2476]!	; 0x9ac

00000678 <__gmon_start__@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #16, 20	; 0x10000
 680:	ldr	pc, [ip, #2468]!	; 0x9a4

00000684 <open@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #16, 20	; 0x10000
 68c:	ldr	pc, [ip, #2460]!	; 0x99c

00000690 <srand@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #16, 20	; 0x10000
 698:	ldr	pc, [ip, #2452]!	; 0x994

0000069c <rand@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #16, 20	; 0x10000
 6a4:	ldr	pc, [ip, #2444]!	; 0x98c

000006a8 <sendto_one_notice@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #16, 20	; 0x10000
 6b0:	ldr	pc, [ip, #2436]!	; 0x984

000006b4 <close@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #16, 20	; 0x10000
 6bc:	ldr	pc, [ip, #2428]!	; 0x97c

000006c0 <irccmp@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #16, 20	; 0x10000
 6c8:	ldr	pc, [ip, #2420]!	; 0x974

Disassembly of section .text:

000006cc <call_weak_fn>:
 6cc:	ldr	r3, [pc, #20]	; 6e8 <call_weak_fn+0x1c>
 6d0:	ldr	r2, [pc, #20]	; 6ec <call_weak_fn+0x20>
 6d4:	add	r3, pc, r3
 6d8:	ldr	r2, [r3, r2]
 6dc:	cmp	r2, #0
 6e0:	bxeq	lr
 6e4:	b	678 <__gmon_start__@plt>
 6e8:	.word	0x00010924
 6ec:	.word	0x00000048

000006f0 <deregister_tm_clones>:
 6f0:	ldr	r0, [pc, #44]	; 724 <deregister_tm_clones+0x34>
 6f4:	ldr	r3, [pc, #44]	; 728 <deregister_tm_clones+0x38>
 6f8:	add	r0, pc, r0
 6fc:	add	r3, pc, r3
 700:	cmp	r3, r0
 704:	ldr	r3, [pc, #32]	; 72c <deregister_tm_clones+0x3c>
 708:	add	r3, pc, r3
 70c:	bxeq	lr
 710:	ldr	r2, [pc, #24]	; 730 <deregister_tm_clones+0x40>
 714:	ldr	r3, [r3, r2]
 718:	cmp	r3, #0
 71c:	bxeq	lr
 720:	bx	r3
 724:	.word	0x000109d0
 728:	.word	0x000109cc
 72c:	.word	0x000108f0
 730:	.word	0x00000044

00000734 <register_tm_clones>:
 734:	ldr	r0, [pc, #56]	; 774 <register_tm_clones+0x40>
 738:	ldr	r3, [pc, #56]	; 778 <register_tm_clones+0x44>
 73c:	add	r0, pc, r0
 740:	add	r3, pc, r3
 744:	sub	r1, r3, r0
 748:	ldr	r3, [pc, #44]	; 77c <register_tm_clones+0x48>
 74c:	asr	r1, r1, #2
 750:	add	r3, pc, r3
 754:	add	r1, r1, r1, lsr #31
 758:	asrs	r1, r1, #1
 75c:	bxeq	lr
 760:	ldr	r2, [pc, #24]	; 780 <register_tm_clones+0x4c>
 764:	ldr	r3, [r3, r2]
 768:	cmp	r3, #0
 76c:	bxeq	lr
 770:	bx	r3
 774:	.word	0x0001098c
 778:	.word	0x00010988
 77c:	.word	0x000108a8
 780:	.word	0x0000004c

00000784 <__do_global_dtors_aux>:
 784:	ldr	r3, [pc, #76]	; 7d8 <__do_global_dtors_aux+0x54>
 788:	ldr	r2, [pc, #76]	; 7dc <__do_global_dtors_aux+0x58>
 78c:	add	r3, pc, r3
 790:	add	r2, pc, r2
 794:	ldrb	r3, [r3]
 798:	cmp	r3, #0
 79c:	bxne	lr
 7a0:	ldr	r3, [pc, #56]	; 7e0 <__do_global_dtors_aux+0x5c>
 7a4:	push	{r4, lr}
 7a8:	ldr	r3, [r2, r3]
 7ac:	cmp	r3, #0
 7b0:	beq	7c0 <__do_global_dtors_aux+0x3c>
 7b4:	ldr	r3, [pc, #40]	; 7e4 <__do_global_dtors_aux+0x60>
 7b8:	ldr	r0, [pc, r3]
 7bc:	bl	63c <__cxa_finalize@plt>
 7c0:	bl	6f0 <deregister_tm_clones>
 7c4:	ldr	r3, [pc, #28]	; 7e8 <__do_global_dtors_aux+0x64>
 7c8:	mov	r2, #1
 7cc:	add	r3, pc, r3
 7d0:	strb	r2, [r3]
 7d4:	pop	{r4, pc}
 7d8:	.word	0x0001093c
 7dc:	.word	0x00010868
 7e0:	.word	0x00000040
 7e4:	.word	0x00010898
 7e8:	.word	0x000108fc

000007ec <frame_dummy>:
 7ec:	b	734 <register_tm_clones>

000007f0 <m_mkpasswd>:
 7f0:	push	{r4, r5, r6, r7, fp, lr}
 7f4:	add	fp, sp, #16
 7f8:	sub	sp, sp, #16
 7fc:	mov	r4, r2
 800:	movw	r0, #12597	; 0x3135
 804:	movt	r0, #50	; 0x32
 808:	str	r0, [sp, #11]
 80c:	movw	r0, #18515	; 0x4853
 810:	movt	r0, #13633	; 0x3541
 814:	str	r0, [sp, #8]
 818:	ldr	r6, [fp, #8]
 81c:	ldr	r0, [r6, #4]
 820:	cmp	r0, #0
 824:	beq	844 <m_mkpasswd+0x54>
 828:	ldrb	r0, [r0]
 82c:	cmp	r0, #0
 830:	beq	844 <m_mkpasswd+0x54>
 834:	cmp	r3, #3
 838:	bge	86c <m_mkpasswd+0x7c>
 83c:	add	r5, sp, #8
 840:	b	870 <m_mkpasswd+0x80>
 844:	ldr	r0, [pc, #340]	; 9a0 <m_mkpasswd+0x1b0>
 848:	add	r0, pc, r0
 84c:	str	r0, [sp]
 850:	add	r3, r4, #88	; 0x58
 854:	ldr	r0, [pc, #328]	; 9a4 <m_mkpasswd+0x1b4>
 858:	ldr	r0, [pc, r0]
 85c:	add	r2, r0, #88	; 0x58
 860:	ldr	r1, [pc, #320]	; 9a8 <m_mkpasswd+0x1b8>
 864:	add	r1, pc, r1
 868:	b	8b8 <m_mkpasswd+0xc8>
 86c:	ldr	r5, [r6, #8]
 870:	ldr	r0, [pc, #308]	; 9ac <m_mkpasswd+0x1bc>
 874:	ldr	r0, [pc, r0]
 878:	ldr	r0, [r0, #184]	; 0xb8
 87c:	ldr	r1, [pc, #300]	; 9b0 <m_mkpasswd+0x1c0>
 880:	ldr	r1, [pc, r1]
 884:	add	r7, r0, r1
 888:	bl	630 <rb_current_time@plt>
 88c:	cmp	r7, r0
 890:	ble	8c8 <m_mkpasswd+0xd8>
 894:	ldr	r0, [pc, #280]	; 9b4 <m_mkpasswd+0x1c4>
 898:	add	r0, pc, r0
 89c:	str	r0, [sp]
 8a0:	add	r3, r4, #88	; 0x58
 8a4:	ldr	r0, [pc, #268]	; 9b8 <m_mkpasswd+0x1c8>
 8a8:	ldr	r0, [pc, r0]
 8ac:	add	r2, r0, #88	; 0x58
 8b0:	ldr	r1, [pc, #260]	; 9bc <m_mkpasswd+0x1cc>
 8b4:	add	r1, pc, r1
 8b8:	mov	r0, r4
 8bc:	bl	648 <sendto_one@plt>
 8c0:	sub	sp, fp, #16
 8c4:	pop	{r4, r5, r6, r7, fp, pc}
 8c8:	bl	630 <rb_current_time@plt>
 8cc:	ldr	r1, [pc, #236]	; 9c0 <m_mkpasswd+0x1d0>
 8d0:	add	r1, pc, r1
 8d4:	str	r0, [r1]
 8d8:	ldr	r1, [pc, #228]	; 9c4 <m_mkpasswd+0x1d4>
 8dc:	add	r1, pc, r1
 8e0:	mov	r0, r5
 8e4:	bl	6c0 <irccmp@plt>
 8e8:	cmp	r0, #0
 8ec:	beq	938 <m_mkpasswd+0x148>
 8f0:	ldr	r1, [pc, #212]	; 9cc <m_mkpasswd+0x1dc>
 8f4:	add	r1, pc, r1
 8f8:	mov	r0, r5
 8fc:	bl	6c0 <irccmp@plt>
 900:	cmp	r0, #0
 904:	beq	948 <m_mkpasswd+0x158>
 908:	ldr	r1, [pc, #196]	; 9d4 <m_mkpasswd+0x1e4>
 90c:	add	r1, pc, r1
 910:	mov	r0, r5
 914:	bl	6c0 <irccmp@plt>
 918:	cmp	r0, #0
 91c:	beq	958 <m_mkpasswd+0x168>
 920:	ldr	r1, [pc, #188]	; 9e4 <m_mkpasswd+0x1f4>
 924:	add	r1, pc, r1
 928:	mov	r0, r4
 92c:	bl	6a8 <sendto_one_notice@plt>
 930:	sub	sp, fp, #16
 934:	pop	{r4, r5, r6, r7, fp, pc}
 938:	bl	b6c <make_sha256_salt>
 93c:	ldr	r1, [pc, #132]	; 9c8 <m_mkpasswd+0x1d8>
 940:	add	r1, pc, r1
 944:	b	964 <m_mkpasswd+0x174>
 948:	bl	ba4 <make_sha512_salt>
 94c:	ldr	r1, [pc, #124]	; 9d0 <m_mkpasswd+0x1e0>
 950:	add	r1, pc, r1
 954:	b	964 <m_mkpasswd+0x174>
 958:	bl	bdc <make_md5_salt>
 95c:	ldr	r1, [pc, #116]	; 9d8 <m_mkpasswd+0x1e8>
 960:	add	r1, pc, r1
 964:	ldr	r0, [r6, #4]
 968:	bl	66c <rb_crypt@plt>
 96c:	ldr	r1, [pc, #104]	; 9dc <m_mkpasswd+0x1ec>
 970:	add	r1, pc, r1
 974:	cmp	r0, #0
 978:	movne	r1, r0
 97c:	ldr	r3, [r6, #4]
 980:	str	r1, [sp]
 984:	ldr	r1, [pc, #84]	; 9e0 <m_mkpasswd+0x1f0>
 988:	add	r1, pc, r1
 98c:	mov	r0, r4
 990:	mov	r2, r5
 994:	bl	6a8 <sendto_one_notice@plt>
 998:	sub	sp, fp, #16
 99c:	pop	{r4, r5, r6, r7, fp, pc}
 9a0:	.word	0x000004e5
 9a4:	.word	0x000107f0
 9a8:	.word	0x000004d9
 9ac:	.word	0x000107d8
 9b0:	.word	0x0001084c
 9b4:	.word	0x00000495
 9b8:	.word	0x000107a0
 9bc:	.word	0x000004ae
 9c0:	.word	0x000107fc
 9c4:	.word	0x000004f1
 9c8:	.word	0x00010790
 9cc:	.word	0x00000442
 9d0:	.word	0x00010795
 9d4:	.word	0x000004c8
 9d8:	.word	0x0001079a
 9dc:	.word	0x000004b9
 9e0:	.word	0x0000048b
 9e4:	.word	0x000004b4

000009e8 <mo_mkpasswd>:
 9e8:	push	{r4, r5, r6, sl, fp, lr}
 9ec:	add	fp, sp, #16
 9f0:	sub	sp, sp, #16
 9f4:	mov	r4, r2
 9f8:	movw	r0, #12597	; 0x3135
 9fc:	movt	r0, #50	; 0x32
 a00:	str	r0, [sp, #11]
 a04:	movw	r0, #18515	; 0x4853
 a08:	movt	r0, #13633	; 0x3541
 a0c:	str	r0, [sp, #8]
 a10:	ldr	r6, [fp, #8]
 a14:	ldr	r0, [r6, #4]
 a18:	cmp	r0, #0
 a1c:	beq	a3c <mo_mkpasswd+0x54>
 a20:	ldrb	r0, [r0]
 a24:	cmp	r0, #0
 a28:	beq	a3c <mo_mkpasswd+0x54>
 a2c:	cmp	r3, #3
 a30:	bge	a70 <mo_mkpasswd+0x88>
 a34:	add	r5, sp, #8
 a38:	b	a74 <mo_mkpasswd+0x8c>
 a3c:	ldr	r0, [pc, #248]	; b3c <mo_mkpasswd+0x154>
 a40:	add	r0, pc, r0
 a44:	str	r0, [sp]
 a48:	add	r3, r4, #88	; 0x58
 a4c:	ldr	r0, [pc, #236]	; b40 <mo_mkpasswd+0x158>
 a50:	ldr	r0, [pc, r0]
 a54:	add	r2, r0, #88	; 0x58
 a58:	ldr	r1, [pc, #228]	; b44 <mo_mkpasswd+0x15c>
 a5c:	add	r1, pc, r1
 a60:	mov	r0, r4
 a64:	bl	648 <sendto_one@plt>
 a68:	sub	sp, fp, #16
 a6c:	pop	{r4, r5, r6, sl, fp, pc}
 a70:	ldr	r5, [r6, #8]
 a74:	ldr	r1, [pc, #204]	; b48 <mo_mkpasswd+0x160>
 a78:	add	r1, pc, r1
 a7c:	mov	r0, r5
 a80:	bl	6c0 <irccmp@plt>
 a84:	cmp	r0, #0
 a88:	beq	ad4 <mo_mkpasswd+0xec>
 a8c:	ldr	r1, [pc, #188]	; b50 <mo_mkpasswd+0x168>
 a90:	add	r1, pc, r1
 a94:	mov	r0, r5
 a98:	bl	6c0 <irccmp@plt>
 a9c:	cmp	r0, #0
 aa0:	beq	ae4 <mo_mkpasswd+0xfc>
 aa4:	ldr	r1, [pc, #172]	; b58 <mo_mkpasswd+0x170>
 aa8:	add	r1, pc, r1
 aac:	mov	r0, r5
 ab0:	bl	6c0 <irccmp@plt>
 ab4:	cmp	r0, #0
 ab8:	beq	af4 <mo_mkpasswd+0x10c>
 abc:	ldr	r1, [pc, #164]	; b68 <mo_mkpasswd+0x180>
 ac0:	add	r1, pc, r1
 ac4:	mov	r0, r4
 ac8:	bl	6a8 <sendto_one_notice@plt>
 acc:	sub	sp, fp, #16
 ad0:	pop	{r4, r5, r6, sl, fp, pc}
 ad4:	bl	b6c <make_sha256_salt>
 ad8:	ldr	r1, [pc, #108]	; b4c <mo_mkpasswd+0x164>
 adc:	add	r1, pc, r1
 ae0:	b	b00 <mo_mkpasswd+0x118>
 ae4:	bl	ba4 <make_sha512_salt>
 ae8:	ldr	r1, [pc, #100]	; b54 <mo_mkpasswd+0x16c>
 aec:	add	r1, pc, r1
 af0:	b	b00 <mo_mkpasswd+0x118>
 af4:	bl	bdc <make_md5_salt>
 af8:	ldr	r1, [pc, #92]	; b5c <mo_mkpasswd+0x174>
 afc:	add	r1, pc, r1
 b00:	ldr	r0, [r6, #4]
 b04:	bl	66c <rb_crypt@plt>
 b08:	ldr	r1, [pc, #80]	; b60 <mo_mkpasswd+0x178>
 b0c:	add	r1, pc, r1
 b10:	cmp	r0, #0
 b14:	movne	r1, r0
 b18:	ldr	r3, [r6, #4]
 b1c:	str	r1, [sp]
 b20:	ldr	r1, [pc, #60]	; b64 <mo_mkpasswd+0x17c>
 b24:	add	r1, pc, r1
 b28:	mov	r0, r4
 b2c:	mov	r2, r5
 b30:	bl	6a8 <sendto_one_notice@plt>
 b34:	sub	sp, fp, #16
 b38:	pop	{r4, r5, r6, sl, fp, pc}
 b3c:	.word	0x000002ed
 b40:	.word	0x000105f8
 b44:	.word	0x000002e1
 b48:	.word	0x00000355
 b4c:	.word	0x000105f4
 b50:	.word	0x000002a6
 b54:	.word	0x000105f9
 b58:	.word	0x0000032c
 b5c:	.word	0x000105fe
 b60:	.word	0x0000031d
 b64:	.word	0x000002ef
 b68:	.word	0x00000318

00000b6c <make_sha256_salt>:
 b6c:	push	{r4, r5, fp, lr}
 b70:	add	fp, sp, #8
 b74:	ldr	r4, [pc, #36]	; ba0 <make_sha256_salt+0x34>
 b78:	add	r4, pc, r4
 b7c:	mov	r5, #36	; 0x24
 b80:	strb	r5, [r4, #2]
 b84:	movw	r0, #13604	; 0x3524
 b88:	strh	r0, [r4]
 b8c:	add	r0, r4, #3
 b90:	mov	r1, #16
 b94:	bl	c14 <generate_random_salt>
 b98:	strh	r5, [r4, #19]
 b9c:	pop	{r4, r5, fp, pc}
 ba0:	.word	0x00010558

00000ba4 <make_sha512_salt>:
 ba4:	push	{r4, r5, fp, lr}
 ba8:	add	fp, sp, #8
 bac:	ldr	r4, [pc, #36]	; bd8 <make_sha512_salt+0x34>
 bb0:	add	r4, pc, r4
 bb4:	mov	r5, #36	; 0x24
 bb8:	strb	r5, [r4, #2]
 bbc:	movw	r0, #13860	; 0x3624
 bc0:	strh	r0, [r4]
 bc4:	add	r0, r4, #3
 bc8:	mov	r1, #16
 bcc:	bl	c14 <generate_random_salt>
 bd0:	strh	r5, [r4, #19]
 bd4:	pop	{r4, r5, fp, pc}
 bd8:	.word	0x00010535

00000bdc <make_md5_salt>:
 bdc:	push	{r4, r5, fp, lr}
 be0:	add	fp, sp, #8
 be4:	ldr	r4, [pc, #36]	; c10 <make_md5_salt+0x34>
 be8:	add	r4, pc, r4
 bec:	mov	r5, #36	; 0x24
 bf0:	strb	r5, [r4, #2]
 bf4:	movw	r0, #12580	; 0x3124
 bf8:	strh	r0, [r4]
 bfc:	add	r0, r4, #3
 c00:	mov	r1, #8
 c04:	bl	c14 <generate_random_salt>
 c08:	strh	r5, [r4, #11]
 c0c:	pop	{r4, r5, fp, pc}
 c10:	.word	0x00010512

00000c14 <generate_random_salt>:
 c14:	push	{r4, r5, r6, sl, fp, lr}
 c18:	add	fp, sp, #16
 c1c:	mov	r4, r1
 c20:	mov	r5, r0
 c24:	ldr	r0, [pc, #116]	; ca0 <generate_random_salt+0x8c>
 c28:	add	r0, pc, r0
 c2c:	mov	r1, #0
 c30:	bl	684 <open@plt>
 c34:	cmn	r0, #1
 c38:	ble	c90 <generate_random_salt+0x7c>
 c3c:	mov	r6, r0
 c40:	mov	r1, r5
 c44:	mov	r2, r4
 c48:	bl	654 <read@plt>
 c4c:	cmp	r0, r4
 c50:	bne	c88 <generate_random_salt+0x74>
 c54:	cmp	r4, #1
 c58:	blt	c7c <generate_random_salt+0x68>
 c5c:	ldr	r0, [pc, #64]	; ca4 <generate_random_salt+0x90>
 c60:	add	r0, pc, r0
 c64:	ldrb	r1, [r5]
 c68:	and	r1, r1, #63	; 0x3f
 c6c:	ldrb	r1, [r0, r1]
 c70:	strb	r1, [r5], #1
 c74:	subs	r4, r4, #1
 c78:	bne	c64 <generate_random_salt+0x50>
 c7c:	mov	r0, r6
 c80:	pop	{r4, r5, r6, sl, fp, lr}
 c84:	b	6b4 <close@plt>
 c88:	mov	r0, r6
 c8c:	bl	6b4 <close@plt>
 c90:	mov	r0, r5
 c94:	mov	r1, r4
 c98:	pop	{r4, r5, r6, sl, fp, lr}
 c9c:	b	ca8 <generate_poor_salt>
 ca0:	.word	0x00000205
 ca4:	.word	0x000001da

00000ca8 <generate_poor_salt>:
 ca8:	push	{r4, r5, r6, r7, fp, lr}
 cac:	add	fp, sp, #16
 cb0:	mov	r5, r1
 cb4:	mov	r4, r0
 cb8:	mov	r0, #0
 cbc:	bl	660 <time@plt>
 cc0:	bl	690 <srand@plt>
 cc4:	cmp	r5, #1
 cc8:	blt	cfc <generate_poor_salt+0x54>
 ccc:	ldr	r6, [pc, #48]	; d04 <generate_poor_salt+0x5c>
 cd0:	add	r6, pc, r6
 cd4:	mov	r7, r4
 cd8:	bl	69c <rand@plt>
 cdc:	asr	r1, r0, #31
 ce0:	add	r1, r0, r1, lsr #26
 ce4:	bic	r1, r1, #63	; 0x3f
 ce8:	sub	r0, r0, r1
 cec:	ldrb	r0, [r6, r0]
 cf0:	strb	r0, [r7], #1
 cf4:	subs	r5, r5, #1
 cf8:	bne	cd8 <generate_poor_salt+0x30>
 cfc:	mov	r0, r4
 d00:	pop	{r4, r5, r6, r7, fp, pc}
 d04:	.word	0x0000016a

Disassembly of section .fini:

00000d08 <_fini>:
 d08:	push	{r3, lr}
 d0c:	pop	{r3, pc}
