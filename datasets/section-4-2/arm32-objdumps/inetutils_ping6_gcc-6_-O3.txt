
../repos/inetutils/ping/ping6:     file format elf32-littlearm


Disassembly of section .init:

000110b4 <.init>:
   110b4:	push	{r3, lr}
   110b8:	bl	1180c <__assert_fail@plt+0x3d8>
   110bc:	pop	{r3, pc}

Disassembly of section .plt:

000110c0 <calloc@plt-0x14>:
   110c0:	push	{lr}		; (str lr, [sp, #-4]!)
   110c4:	ldr	lr, [pc, #4]	; 110d0 <calloc@plt-0x4>
   110c8:	add	lr, pc, lr
   110cc:	ldr	pc, [lr, #8]!
   110d0:	andeq	sp, r1, r0, lsr pc

000110d4 <calloc@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #118784	; 0x1d000
   110dc:	ldr	pc, [ip, #3888]!	; 0xf30

000110e0 <fputs_unlocked@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #118784	; 0x1d000
   110e8:	ldr	pc, [ip, #3880]!	; 0xf28

000110ec <raise@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #118784	; 0x1d000
   110f4:	ldr	pc, [ip, #3872]!	; 0xf20

000110f8 <setbuf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #118784	; 0x1d000
   11100:	ldr	pc, [ip, #3864]!	; 0xf18

00011104 <strcmp@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #118784	; 0x1d000
   1110c:	ldr	pc, [ip, #3856]!	; 0xf10

00011110 <strtol@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #118784	; 0x1d000
   11118:	ldr	pc, [ip, #3848]!	; 0xf08

0001111c <setsockopt@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #118784	; 0x1d000
   11124:	ldr	pc, [ip, #3840]!	; 0xf00

00011128 <printf@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #118784	; 0x1d000
   11130:	ldr	pc, [ip, #3832]!	; 0xef8

00011134 <fflush@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #118784	; 0x1d000
   1113c:	ldr	pc, [ip, #3824]!	; 0xef0

00011140 <getuid@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #118784	; 0x1d000
   11148:	ldr	pc, [ip, #3816]!	; 0xee8

0001114c <memmove@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #118784	; 0x1d000
   11154:	ldr	pc, [ip, #3808]!	; 0xee0

00011158 <strchrnul@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #118784	; 0x1d000
   11160:	ldr	pc, [ip, #3800]!	; 0xed8

00011164 <free@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #118784	; 0x1d000
   1116c:	ldr	pc, [ip, #3792]!	; 0xed0

00011170 <gai_strerror@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #118784	; 0x1d000
   11178:	ldr	pc, [ip, #3784]!	; 0xec8

0001117c <strndup@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #118784	; 0x1d000
   11184:	ldr	pc, [ip, #3776]!	; 0xec0

00011188 <memcpy@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #118784	; 0x1d000
   11190:	ldr	pc, [ip, #3768]!	; 0xeb8

00011194 <signal@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #118784	; 0x1d000
   1119c:	ldr	pc, [ip, #3760]!	; 0xeb0

000111a0 <fwrite_unlocked@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #118784	; 0x1d000
   111a8:	ldr	pc, [ip, #3752]!	; 0xea8

000111ac <inet_ntoa@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #118784	; 0x1d000
   111b4:	ldr	pc, [ip, #3744]!	; 0xea0

000111b8 <select@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #118784	; 0x1d000
   111c0:	ldr	pc, [ip, #3736]!	; 0xe98

000111c4 <sleep@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #118784	; 0x1d000
   111cc:	ldr	pc, [ip, #3728]!	; 0xe90

000111d0 <gethostbyaddr@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #118784	; 0x1d000
   111d8:	ldr	pc, [ip, #3720]!	; 0xe88

000111dc <strdup@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #118784	; 0x1d000
   111e4:	ldr	pc, [ip, #3712]!	; 0xe80

000111e8 <realloc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #118784	; 0x1d000
   111f0:	ldr	pc, [ip, #3704]!	; 0xe78

000111f4 <strcasecmp@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #118784	; 0x1d000
   111fc:	ldr	pc, [ip, #3696]!	; 0xe70

00011200 <funlockfile@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #118784	; 0x1d000
   11208:	ldr	pc, [ip, #3688]!	; 0xe68

0001120c <fwrite@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #118784	; 0x1d000
   11214:	ldr	pc, [ip, #3680]!	; 0xe60

00011218 <gettimeofday@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #118784	; 0x1d000
   11220:	ldr	pc, [ip, #3672]!	; 0xe58

00011224 <error@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #118784	; 0x1d000
   1122c:	ldr	pc, [ip, #3664]!	; 0xe50

00011230 <getenv@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #118784	; 0x1d000
   11238:	ldr	pc, [ip, #3656]!	; 0xe48

0001123c <puts@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #118784	; 0x1d000
   11244:	ldr	pc, [ip, #3648]!	; 0xe40

00011248 <malloc@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #118784	; 0x1d000
   11250:	ldr	pc, [ip, #3640]!	; 0xe38

00011254 <__libc_start_main@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #118784	; 0x1d000
   1125c:	ldr	pc, [ip, #3632]!	; 0xe30

00011260 <strerror@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #118784	; 0x1d000
   11268:	ldr	pc, [ip, #3624]!	; 0xe28

0001126c <__ctype_tolower_loc@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #118784	; 0x1d000
   11274:	ldr	pc, [ip, #3616]!	; 0xe20

00011278 <__gmon_start__@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #118784	; 0x1d000
   11280:	ldr	pc, [ip, #3608]!	; 0xe18

00011284 <mempcpy@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #118784	; 0x1d000
   1128c:	ldr	pc, [ip, #3600]!	; 0xe10

00011290 <__ctype_b_loc@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #118784	; 0x1d000
   11298:	ldr	pc, [ip, #3592]!	; 0xe08

0001129c <getpid@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #118784	; 0x1d000
   112a4:	ldr	pc, [ip, #3584]!	; 0xe00

000112a8 <exit@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #118784	; 0x1d000
   112b0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112b4 <strtoul@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #118784	; 0x1d000
   112bc:	ldr	pc, [ip, #3568]!	; 0xdf0

000112c0 <strlen@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #118784	; 0x1d000
   112c8:	ldr	pc, [ip, #3560]!	; 0xde8

000112cc <strchr@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #118784	; 0x1d000
   112d4:	ldr	pc, [ip, #3552]!	; 0xde0

000112d8 <fprintf@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #118784	; 0x1d000
   112e0:	ldr	pc, [ip, #3544]!	; 0xdd8

000112e4 <__errno_location@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #118784	; 0x1d000
   112ec:	ldr	pc, [ip, #3536]!	; 0xdd0

000112f0 <snprintf@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #118784	; 0x1d000
   112f8:	ldr	pc, [ip, #3528]!	; 0xdc8

000112fc <strerror_r@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #118784	; 0x1d000
   11304:	ldr	pc, [ip, #3520]!	; 0xdc0

00011308 <setvbuf@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #118784	; 0x1d000
   11310:	ldr	pc, [ip, #3512]!	; 0xdb8

00011314 <memset@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #118784	; 0x1d000
   1131c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011320 <putchar@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #118784	; 0x1d000
   11328:	ldr	pc, [ip, #3496]!	; 0xda8

0001132c <memchr@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #118784	; 0x1d000
   11334:	ldr	pc, [ip, #3488]!	; 0xda0

00011338 <sendto@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #118784	; 0x1d000
   11340:	ldr	pc, [ip, #3480]!	; 0xd98

00011344 <__overflow@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #118784	; 0x1d000
   1134c:	ldr	pc, [ip, #3472]!	; 0xd90

00011350 <setlocale@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #118784	; 0x1d000
   11358:	ldr	pc, [ip, #3464]!	; 0xd88

0001135c <getnameinfo@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #118784	; 0x1d000
   11364:	ldr	pc, [ip, #3456]!	; 0xd80

00011368 <strrchr@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #118784	; 0x1d000
   11370:	ldr	pc, [ip, #3448]!	; 0xd78

00011374 <vfprintf@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #118784	; 0x1d000
   1137c:	ldr	pc, [ip, #3440]!	; 0xd70

00011380 <fputc@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #118784	; 0x1d000
   11388:	ldr	pc, [ip, #3432]!	; 0xd68

0001138c <setuid@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #118784	; 0x1d000
   11394:	ldr	pc, [ip, #3424]!	; 0xd60

00011398 <sscanf@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #118784	; 0x1d000
   113a0:	ldr	pc, [ip, #3416]!	; 0xd58

000113a4 <putc@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #118784	; 0x1d000
   113ac:	ldr	pc, [ip, #3408]!	; 0xd50

000113b0 <flockfile@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #118784	; 0x1d000
   113b8:	ldr	pc, [ip, #3400]!	; 0xd48

000113bc <vsnprintf@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #118784	; 0x1d000
   113c4:	ldr	pc, [ip, #3392]!	; 0xd40

000113c8 <recvmsg@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #118784	; 0x1d000
   113d0:	ldr	pc, [ip, #3384]!	; 0xd38

000113d4 <qsort@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #118784	; 0x1d000
   113dc:	ldr	pc, [ip, #3376]!	; 0xd30

000113e0 <freeaddrinfo@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #118784	; 0x1d000
   113e8:	ldr	pc, [ip, #3368]!	; 0xd28

000113ec <getaddrinfo@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #118784	; 0x1d000
   113f4:	ldr	pc, [ip, #3360]!	; 0xd20

000113f8 <inet_ntop@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #118784	; 0x1d000
   11400:	ldr	pc, [ip, #3352]!	; 0xd18

00011404 <socket@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #118784	; 0x1d000
   1140c:	ldr	pc, [ip, #3344]!	; 0xd10

00011410 <strncmp@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #118784	; 0x1d000
   11418:	ldr	pc, [ip, #3336]!	; 0xd08

0001141c <abort@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #118784	; 0x1d000
   11424:	ldr	pc, [ip, #3328]!	; 0xd00

00011428 <close@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #118784	; 0x1d000
   11430:	ldr	pc, [ip, #3320]!	; 0xcf8

00011434 <__assert_fail@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #118784	; 0x1d000
   1143c:	ldr	pc, [ip, #3312]!	; 0xcf0

Disassembly of section .text:

00011440 <argp_failure@@Base-0x4a6c>:
   11440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11444:	mov	r4, r0
   11448:	sub	sp, sp, #60	; 0x3c
   1144c:	ldr	r0, [r1]
   11450:	mov	r9, r1
   11454:	bl	19480 <argp_parse@@Base+0x1084>
   11458:	ldr	r1, [pc, #808]	; 11788 <__assert_fail@plt+0x354>
   1145c:	mov	r0, #6
   11460:	bl	11350 <setlocale@plt>
   11464:	bl	11140 <getuid@plt>
   11468:	ldr	r6, [pc, #796]	; 1178c <__assert_fail@plt+0x358>
   1146c:	ldr	r8, [pc, #796]	; 11790 <__assert_fail@plt+0x35c>
   11470:	ldr	r2, [pc, #796]	; 11794 <__assert_fail@plt+0x360>
   11474:	add	r1, r8, #128	; 0x80
   11478:	mov	sl, #1
   1147c:	cmp	r0, #0
   11480:	moveq	r3, #1
   11484:	strbeq	r3, [r6, #8]
   11488:	ldr	r3, [pc, #776]	; 11798 <__assert_fail@plt+0x364>
   1148c:	ldr	r0, [pc, #776]	; 1179c <__assert_fail@plt+0x368>
   11490:	str	r2, [r3]
   11494:	bl	192a4 <argp_parse@@Base+0xea8>
   11498:	mov	r3, #0
   1149c:	add	r2, sp, #16
   114a0:	mov	r1, r4
   114a4:	stm	sp, {r2, r3}
   114a8:	add	r0, r8, #136	; 0x88
   114ac:	mov	r2, r9
   114b0:	bl	183fc <argp_parse@@Base>
   114b4:	bl	1129c <getpid@plt>
   114b8:	mov	r2, #58	; 0x3a
   114bc:	mov	r1, #3
   114c0:	str	sl, [sp, #20]
   114c4:	str	r0, [sp, #12]
   114c8:	mov	r0, #10
   114cc:	bl	11404 <socket@plt>
   114d0:	subs	fp, r0, #0
   114d4:	blt	1169c <__assert_fail@plt+0x268>
   114d8:	mov	r2, #32
   114dc:	mov	r1, #255	; 0xff
   114e0:	add	r0, sp, #24
   114e4:	bl	11314 <memset@plt>
   114e8:	mov	r2, #32
   114ec:	mvn	r0, #2
   114f0:	str	r2, [sp]
   114f4:	mvn	ip, #30
   114f8:	str	r0, [sp, #40]	; 0x28
   114fc:	add	r3, sp, #24
   11500:	mov	r2, sl
   11504:	mov	r1, #58	; 0x3a
   11508:	mov	r0, fp
   1150c:	str	ip, [sp, #24]
   11510:	bl	1111c <setsockopt@plt>
   11514:	cmp	r0, #0
   11518:	bne	1174c <__assert_fail@plt+0x318>
   1151c:	mov	r3, #4
   11520:	str	r3, [sp]
   11524:	mov	r2, #51	; 0x33
   11528:	add	r3, sp, #20
   1152c:	mov	r1, #41	; 0x29
   11530:	mov	r0, fp
   11534:	bl	1111c <setsockopt@plt>
   11538:	subs	r5, r0, #0
   1153c:	bne	1174c <__assert_fail@plt+0x318>
   11540:	mov	r0, #124	; 0x7c
   11544:	bl	1a95c <argp_parse@@Base+0x2560>
   11548:	subs	r7, r0, #0
   1154c:	beq	1174c <__assert_fail@plt+0x318>
   11550:	mov	r2, #124	; 0x7c
   11554:	mov	r1, r5
   11558:	bl	11314 <memset@plt>
   1155c:	ldrh	r3, [sp, #12]
   11560:	mov	r2, #128	; 0x80
   11564:	mov	r0, #1000	; 0x3e8
   11568:	mov	r1, #8
   1156c:	str	r3, [r7, #60]	; 0x3c
   11570:	str	r0, [r7, #20]
   11574:	str	r1, [r7, #56]	; 0x38
   11578:	str	r2, [r7, #72]	; 0x48
   1157c:	mov	r1, r5
   11580:	str	fp, [r7]
   11584:	str	r5, [r7, #8]
   11588:	add	r0, r7, #12
   1158c:	bl	11218 <gettimeofday@plt>
   11590:	mov	r2, #4
   11594:	add	r3, r8, #164	; 0xa4
   11598:	mov	r1, sl
   1159c:	ldr	r0, [r7]
   115a0:	str	r2, [sp]
   115a4:	mov	r2, #6
   115a8:	str	r7, [r6, #36]	; 0x24
   115ac:	bl	1111c <setsockopt@plt>
   115b0:	bl	11140 <getuid@plt>
   115b4:	bl	1138c <setuid@plt>
   115b8:	cmp	r0, #0
   115bc:	bne	11734 <__assert_fail@plt+0x300>
   115c0:	ldr	r2, [pc, #472]	; 117a0 <__assert_fail@plt+0x36c>
   115c4:	mov	r3, #0
   115c8:	mov	r1, r3
   115cc:	ldr	r0, [r2]
   115d0:	mov	r2, #1
   115d4:	bl	11308 <setvbuf@plt>
   115d8:	ldr	r3, [sp, #16]
   115dc:	ldr	r1, [r6, #4]
   115e0:	sub	r4, r4, r3
   115e4:	cmp	r1, #0
   115e8:	add	r9, r9, r3, lsl #2
   115ec:	bne	11728 <__assert_fail@plt+0x2f4>
   115f0:	ldr	r3, [pc, #428]	; 117a4 <__assert_fail@plt+0x370>
   115f4:	ldr	r1, [r3]
   115f8:	cmp	r1, #0
   115fc:	bne	11714 <__assert_fail@plt+0x2e0>
   11600:	ldr	r7, [pc, #416]	; 117a8 <__assert_fail@plt+0x374>
   11604:	ldr	r3, [r7]
   11608:	tst	r3, #2
   1160c:	bne	11700 <__assert_fail@plt+0x2cc>
   11610:	ldr	r3, [r6, #32]
   11614:	cmp	r3, #0
   11618:	ble	11644 <__assert_fail@plt+0x210>
   1161c:	ldr	r2, [r6, #36]	; 0x24
   11620:	mov	r3, #4
   11624:	str	r3, [sp]
   11628:	mov	r1, #41	; 0x29
   1162c:	ldr	r0, [r2]
   11630:	ldr	r3, [pc, #372]	; 117ac <__assert_fail@plt+0x378>
   11634:	mov	r2, #16
   11638:	bl	1111c <setsockopt@plt>
   1163c:	cmp	r0, #0
   11640:	blt	11770 <__assert_fail@plt+0x33c>
   11644:	ldr	r3, [r7]
   11648:	tst	r3, #256	; 0x100
   1164c:	bne	116c0 <__assert_fail@plt+0x28c>
   11650:	ldr	r3, [pc, #344]	; 117b0 <__assert_fail@plt+0x37c>
   11654:	ldr	r1, [r8]
   11658:	ldr	r0, [r3]
   1165c:	bl	12d3c <__assert_fail@plt+0x1908>
   11660:	cmp	r4, #0
   11664:	beq	11768 <__assert_fail@plt+0x334>
   11668:	mov	r7, #0
   1166c:	ldr	r0, [r9], #4
   11670:	bl	12248 <__assert_fail@plt+0xe14>
   11674:	ldr	r3, [r6, #36]	; 0x24
   11678:	subs	r4, r4, #1
   1167c:	str	r7, [r3, #112]	; 0x70
   11680:	str	r7, [r3, #116]	; 0x74
   11684:	str	r7, [r3, #120]	; 0x78
   11688:	orr	r5, r5, r0
   1168c:	bne	1166c <__assert_fail@plt+0x238>
   11690:	mov	r0, r5
   11694:	add	sp, sp, #60	; 0x3c
   11698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1169c:	bl	112e4 <__errno_location@plt>
   116a0:	ldr	r1, [r0]
   116a4:	cmp	r1, #13
   116a8:	cmpne	r1, sl
   116ac:	beq	11758 <__assert_fail@plt+0x324>
   116b0:	mov	r3, #0
   116b4:	mov	r0, #1
   116b8:	str	r3, [r6, #36]	; 0x24
   116bc:	bl	112a8 <exit@plt>
   116c0:	ldr	r2, [r6, #36]	; 0x24
   116c4:	mov	r3, #4
   116c8:	str	r3, [sp]
   116cc:	mov	r1, #41	; 0x29
   116d0:	ldr	r0, [r2]
   116d4:	ldr	r3, [pc, #216]	; 117b4 <__assert_fail@plt+0x380>
   116d8:	mov	r2, #67	; 0x43
   116dc:	bl	1111c <setsockopt@plt>
   116e0:	cmp	r0, #0
   116e4:	bge	11650 <__assert_fail@plt+0x21c>
   116e8:	bl	112e4 <__errno_location@plt>
   116ec:	ldr	r2, [pc, #196]	; 117b8 <__assert_fail@plt+0x384>
   116f0:	ldr	r1, [r0]
   116f4:	mov	r0, #1
   116f8:	bl	11224 <error@plt>
   116fc:	b	11650 <__assert_fail@plt+0x21c>
   11700:	ldr	r3, [pc, #180]	; 117bc <__assert_fail@plt+0x388>
   11704:	ldr	r0, [r6, #36]	; 0x24
   11708:	ldr	r1, [r3]
   1170c:	bl	130e4 <__assert_fail@plt+0x1cb0>
   11710:	b	11610 <__assert_fail@plt+0x1dc>
   11714:	mov	r3, #4
   11718:	ldr	r2, [pc, #160]	; 117c0 <__assert_fail@plt+0x38c>
   1171c:	ldr	r0, [r6, #36]	; 0x24
   11720:	bl	130b4 <__assert_fail@plt+0x1c80>
   11724:	b	11600 <__assert_fail@plt+0x1cc>
   11728:	ldr	r0, [r6, #36]	; 0x24
   1172c:	bl	130ac <__assert_fail@plt+0x1c78>
   11730:	b	115f0 <__assert_fail@plt+0x1bc>
   11734:	bl	112e4 <__errno_location@plt>
   11738:	ldr	r2, [pc, #132]	; 117c4 <__assert_fail@plt+0x390>
   1173c:	ldr	r1, [r0]
   11740:	mov	r0, sl
   11744:	bl	11224 <error@plt>
   11748:	b	115c0 <__assert_fail@plt+0x18c>
   1174c:	mov	r0, fp
   11750:	bl	11428 <close@plt>
   11754:	b	116b0 <__assert_fail@plt+0x27c>
   11758:	mov	r0, sl
   1175c:	ldr	r2, [pc, #100]	; 117c8 <__assert_fail@plt+0x394>
   11760:	bl	11224 <error@plt>
   11764:	b	116b0 <__assert_fail@plt+0x27c>
   11768:	mov	r5, r4
   1176c:	b	11690 <__assert_fail@plt+0x25c>
   11770:	bl	112e4 <__errno_location@plt>
   11774:	ldr	r2, [pc, #80]	; 117cc <__assert_fail@plt+0x398>
   11778:	ldr	r1, [r0]
   1177c:	mov	r0, #0
   11780:	bl	11224 <error@plt>
   11784:	b	11644 <__assert_fail@plt+0x210>
   11788:	andeq	lr, r1, r4, lsr #6
   1178c:	andeq	pc, r2, r4, ror #7
   11790:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11794:	muleq	r1, r8, r3
   11798:	andeq	pc, r2, r8, asr r4	; <UNPREDICTABLE>
   1179c:			; <UNDEFINED> instruction: 0x0001d3b0
   117a0:	ldrdeq	pc, [r2], -ip
   117a4:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   117a8:	andeq	pc, r2, ip, asr #8
   117ac:	andeq	pc, r2, r4, lsl #8
   117b0:	andeq	pc, r2, r4, asr #8
   117b4:	andeq	pc, r2, r4, asr #2
   117b8:	andeq	sp, r1, r8, ror #7
   117bc:	andeq	pc, r2, r4, asr r4	; <UNPREDICTABLE>
   117c0:	andeq	pc, r2, r0, ror #3
   117c4:	andeq	sp, r1, r4, asr #7
   117c8:			; <UNDEFINED> instruction: 0x0001d3b8
   117cc:	andeq	sp, r1, ip, asr #7
   117d0:	mov	fp, #0
   117d4:	mov	lr, #0
   117d8:	pop	{r1}		; (ldr r1, [sp], #4)
   117dc:	mov	r2, sp
   117e0:	push	{r2}		; (str r2, [sp, #-4]!)
   117e4:	push	{r0}		; (str r0, [sp, #-4]!)
   117e8:	ldr	ip, [pc, #16]	; 11800 <__assert_fail@plt+0x3cc>
   117ec:	push	{ip}		; (str ip, [sp, #-4]!)
   117f0:	ldr	r0, [pc, #12]	; 11804 <__assert_fail@plt+0x3d0>
   117f4:	ldr	r3, [pc, #12]	; 11808 <__assert_fail@plt+0x3d4>
   117f8:	bl	11254 <__libc_start_main@plt>
   117fc:	bl	1141c <abort@plt>
   11800:	andeq	ip, r1, r4, asr #30
   11804:	andeq	r1, r1, r0, asr #8
   11808:	andeq	ip, r1, r4, ror #29
   1180c:	ldr	r3, [pc, #20]	; 11828 <__assert_fail@plt+0x3f4>
   11810:	ldr	r2, [pc, #20]	; 1182c <__assert_fail@plt+0x3f8>
   11814:	add	r3, pc, r3
   11818:	ldr	r2, [r3, r2]
   1181c:	cmp	r2, #0
   11820:	bxeq	lr
   11824:	b	11278 <__gmon_start__@plt>
   11828:	andeq	sp, r1, r4, ror #15
   1182c:	andeq	r0, r0, r0, lsr r1
   11830:	ldr	r3, [pc, #28]	; 11854 <__assert_fail@plt+0x420>
   11834:	ldr	r0, [pc, #28]	; 11858 <__assert_fail@plt+0x424>
   11838:	sub	r3, r3, r0
   1183c:	cmp	r3, #6
   11840:	bxls	lr
   11844:	ldr	r3, [pc, #16]	; 1185c <__assert_fail@plt+0x428>
   11848:	cmp	r3, #0
   1184c:	bxeq	lr
   11850:	bx	r3
   11854:	ldrdeq	pc, [r2], -r3
   11858:	ldrdeq	pc, [r2], -r0
   1185c:	andeq	r0, r0, r0
   11860:	ldr	r1, [pc, #36]	; 1188c <__assert_fail@plt+0x458>
   11864:	ldr	r0, [pc, #36]	; 11890 <__assert_fail@plt+0x45c>
   11868:	sub	r1, r1, r0
   1186c:	asr	r1, r1, #2
   11870:	add	r1, r1, r1, lsr #31
   11874:	asrs	r1, r1, #1
   11878:	bxeq	lr
   1187c:	ldr	r3, [pc, #16]	; 11894 <__assert_fail@plt+0x460>
   11880:	cmp	r3, #0
   11884:	bxeq	lr
   11888:	bx	r3
   1188c:	ldrdeq	pc, [r2], -r0
   11890:	ldrdeq	pc, [r2], -r0
   11894:	andeq	r0, r0, r0
   11898:	push	{r4, lr}
   1189c:	ldr	r4, [pc, #24]	; 118bc <__assert_fail@plt+0x488>
   118a0:	ldrb	r3, [r4]
   118a4:	cmp	r3, #0
   118a8:	popne	{r4, pc}
   118ac:	bl	11830 <__assert_fail@plt+0x3fc>
   118b0:	mov	r3, #1
   118b4:	strb	r3, [r4]
   118b8:	pop	{r4, pc}
   118bc:	andeq	pc, r2, r0, ror #7
   118c0:	ldr	r0, [pc, #40]	; 118f0 <__assert_fail@plt+0x4bc>
   118c4:	ldr	r3, [r0]
   118c8:	cmp	r3, #0
   118cc:	bne	118d4 <__assert_fail@plt+0x4a0>
   118d0:	b	11860 <__assert_fail@plt+0x42c>
   118d4:	ldr	r3, [pc, #24]	; 118f4 <__assert_fail@plt+0x4c0>
   118d8:	cmp	r3, #0
   118dc:	beq	118d0 <__assert_fail@plt+0x49c>
   118e0:	push	{r4, lr}
   118e4:	blx	r3
   118e8:	pop	{r4, lr}
   118ec:	b	11860 <__assert_fail@plt+0x42c>
   118f0:	andeq	lr, r2, r4, lsl pc
   118f4:	andeq	r0, r0, r0
   118f8:	ldr	r3, [pc, #8]	; 11908 <__assert_fail@plt+0x4d4>
   118fc:	mov	r2, #1
   11900:	str	r2, [r3]
   11904:	bx	lr
   11908:	andeq	pc, r2, r4, ror #7
   1190c:	cmp	r0, #112	; 0x70
   11910:	push	{r4, r5, lr}
   11914:	mov	r4, r1
   11918:	sub	sp, sp, #12
   1191c:	beq	11bcc <__assert_fail@plt+0x798>
   11920:	bgt	11950 <__assert_fail@plt+0x51c>
   11924:	cmp	r0, #102	; 0x66
   11928:	beq	11b94 <__assert_fail@plt+0x760>
   1192c:	bgt	11998 <__assert_fail@plt+0x564>
   11930:	cmp	r0, #99	; 0x63
   11934:	beq	11ab0 <__assert_fail@plt+0x67c>
   11938:	cmp	r0, #100	; 0x64
   1193c:	beq	11b34 <__assert_fail@plt+0x700>
   11940:	cmp	r0, #84	; 0x54
   11944:	beq	11af0 <__assert_fail@plt+0x6bc>
   11948:	mov	r3, #7
   1194c:	b	1198c <__assert_fail@plt+0x558>
   11950:	cmp	r0, #118	; 0x76
   11954:	beq	11b64 <__assert_fail@plt+0x730>
   11958:	bgt	11a08 <__assert_fail@plt+0x5d4>
   1195c:	cmp	r0, #114	; 0x72
   11960:	beq	11a98 <__assert_fail@plt+0x664>
   11964:	blt	11b7c <__assert_fail@plt+0x748>
   11968:	cmp	r0, #115	; 0x73
   1196c:	bne	11948 <__assert_fail@plt+0x514>
   11970:	mov	r0, r1
   11974:	mov	r2, #1
   11978:	ldr	r1, [pc, #680]	; 11c28 <__assert_fail@plt+0x7f4>
   1197c:	bl	12c90 <__assert_fail@plt+0x185c>
   11980:	ldr	r2, [pc, #676]	; 11c2c <__assert_fail@plt+0x7f8>
   11984:	mov	r3, #0
   11988:	str	r0, [r2, #4]
   1198c:	mov	r0, r3
   11990:	add	sp, sp, #12
   11994:	pop	{r4, r5, pc}
   11998:	cmp	r0, #108	; 0x6c
   1199c:	beq	11a44 <__assert_fail@plt+0x610>
   119a0:	cmp	r0, #110	; 0x6e
   119a4:	beq	11b4c <__assert_fail@plt+0x718>
   119a8:	cmp	r0, #105	; 0x69
   119ac:	bne	11948 <__assert_fail@plt+0x514>
   119b0:	ldr	ip, [pc, #632]	; 11c30 <__assert_fail@plt+0x7fc>
   119b4:	mov	r2, #0
   119b8:	mov	r1, r2
   119bc:	ldr	r3, [ip]
   119c0:	mov	r0, r4
   119c4:	orr	r3, r3, #2
   119c8:	str	r3, [ip]
   119cc:	bl	12c90 <__assert_fail@plt+0x185c>
   119d0:	ldr	r3, [pc, #604]	; 11c34 <__assert_fail@plt+0x800>
   119d4:	mov	r2, #1000	; 0x3e8
   119d8:	ldr	r1, [pc, #600]	; 11c38 <__assert_fail@plt+0x804>
   119dc:	ldrb	r3, [r3, #8]
   119e0:	eor	r3, r3, #1
   119e4:	mul	r0, r2, r0
   119e8:	cmp	r0, #199	; 0xc7
   119ec:	movhi	r3, #0
   119f0:	andls	r3, r3, #1
   119f4:	cmp	r3, #0
   119f8:	str	r0, [r1]
   119fc:	bne	11c10 <__assert_fail@plt+0x7dc>
   11a00:	mov	r3, #0
   11a04:	b	1198c <__assert_fail@plt+0x558>
   11a08:	cmp	r0, #256	; 0x100
   11a0c:	beq	11ad0 <__assert_fail@plt+0x69c>
   11a10:	ldr	r3, [pc, #548]	; 11c3c <__assert_fail@plt+0x808>
   11a14:	cmp	r0, r3
   11a18:	beq	11b20 <__assert_fail@plt+0x6ec>
   11a1c:	cmp	r0, #119	; 0x77
   11a20:	bne	11948 <__assert_fail@plt+0x514>
   11a24:	mov	r0, r1
   11a28:	mov	r2, #0
   11a2c:	mvn	r1, #-2147483648	; 0x80000000
   11a30:	bl	12c90 <__assert_fail@plt+0x185c>
   11a34:	ldr	r2, [pc, #496]	; 11c2c <__assert_fail@plt+0x7f8>
   11a38:	mov	r3, #0
   11a3c:	str	r0, [r2, #12]
   11a40:	b	1198c <__assert_fail@plt+0x558>
   11a44:	ldr	r5, [pc, #488]	; 11c34 <__assert_fail@plt+0x800>
   11a48:	ldrb	r1, [r5, #8]
   11a4c:	cmp	r1, #0
   11a50:	beq	11c00 <__assert_fail@plt+0x7cc>
   11a54:	mov	r0, r4
   11a58:	mov	r2, #0
   11a5c:	add	r1, sp, #4
   11a60:	bl	112b4 <strtoul@plt>
   11a64:	ldr	r3, [sp, #4]
   11a68:	ldrb	r3, [r3]
   11a6c:	cmp	r3, #0
   11a70:	str	r0, [r5, #12]
   11a74:	bne	11a80 <__assert_fail@plt+0x64c>
   11a78:	cmp	r0, #0
   11a7c:	bge	11a00 <__assert_fail@plt+0x5cc>
   11a80:	ldr	r2, [pc, #440]	; 11c40 <__assert_fail@plt+0x80c>
   11a84:	mov	r1, #0
   11a88:	mov	r0, #1
   11a8c:	bl	11224 <error@plt>
   11a90:	mov	r3, #0
   11a94:	b	1198c <__assert_fail@plt+0x558>
   11a98:	ldr	r1, [pc, #420]	; 11c44 <__assert_fail@plt+0x810>
   11a9c:	mov	r3, #0
   11aa0:	ldr	r2, [r1]
   11aa4:	orr	r2, r2, #5
   11aa8:	str	r2, [r1]
   11aac:	b	1198c <__assert_fail@plt+0x558>
   11ab0:	mov	r2, #0
   11ab4:	mov	r0, r1
   11ab8:	mov	r1, r2
   11abc:	bl	12c90 <__assert_fail@plt+0x185c>
   11ac0:	ldr	r2, [pc, #364]	; 11c34 <__assert_fail@plt+0x800>
   11ac4:	mov	r3, #0
   11ac8:	str	r0, [r2, #4]
   11acc:	b	1198c <__assert_fail@plt+0x558>
   11ad0:	mov	r0, r1
   11ad4:	mov	r2, #0
   11ad8:	mov	r1, #255	; 0xff
   11adc:	bl	12c90 <__assert_fail@plt+0x185c>
   11ae0:	ldr	r2, [pc, #332]	; 11c34 <__assert_fail@plt+0x800>
   11ae4:	mov	r3, #0
   11ae8:	str	r0, [r2, #32]
   11aec:	b	1198c <__assert_fail@plt+0x558>
   11af0:	ldr	ip, [pc, #312]	; 11c30 <__assert_fail@plt+0x7fc>
   11af4:	mov	r2, #0
   11af8:	mov	r0, r1
   11afc:	ldr	r3, [ip]
   11b00:	mov	r1, r2
   11b04:	orr	r3, r3, #256	; 0x100
   11b08:	str	r3, [ip]
   11b0c:	bl	12c90 <__assert_fail@plt+0x185c>
   11b10:	ldr	r2, [pc, #276]	; 11c2c <__assert_fail@plt+0x7f8>
   11b14:	mov	r3, #0
   11b18:	str	r0, [r2, #8]
   11b1c:	b	1198c <__assert_fail@plt+0x558>
   11b20:	mov	r0, r2
   11b24:	ldr	r1, [pc, #284]	; 11c48 <__assert_fail@plt+0x814>
   11b28:	bl	176e8 <argp_error@@Base>
   11b2c:	mov	r3, #7
   11b30:	b	1198c <__assert_fail@plt+0x558>
   11b34:	ldr	r1, [pc, #264]	; 11c44 <__assert_fail@plt+0x810>
   11b38:	mov	r3, #0
   11b3c:	ldr	r2, [r1]
   11b40:	orr	r2, r2, #1
   11b44:	str	r2, [r1]
   11b48:	b	1198c <__assert_fail@plt+0x558>
   11b4c:	ldr	r1, [pc, #220]	; 11c30 <__assert_fail@plt+0x7fc>
   11b50:	mov	r3, #0
   11b54:	ldr	r2, [r1]
   11b58:	orr	r2, r2, #4
   11b5c:	str	r2, [r1]
   11b60:	b	1198c <__assert_fail@plt+0x558>
   11b64:	ldr	r1, [pc, #196]	; 11c30 <__assert_fail@plt+0x7fc>
   11b68:	mov	r3, #0
   11b6c:	ldr	r2, [r1]
   11b70:	orr	r2, r2, #32
   11b74:	str	r2, [r1]
   11b78:	b	1198c <__assert_fail@plt+0x558>
   11b7c:	ldr	r1, [pc, #172]	; 11c30 <__assert_fail@plt+0x7fc>
   11b80:	mov	r3, #0
   11b84:	ldr	r2, [r1]
   11b88:	orr	r2, r2, #8
   11b8c:	str	r2, [r1]
   11b90:	b	1198c <__assert_fail@plt+0x558>
   11b94:	ldr	r3, [pc, #152]	; 11c34 <__assert_fail@plt+0x800>
   11b98:	ldrb	r1, [r3, #8]
   11b9c:	cmp	r1, #0
   11ba0:	beq	11bf0 <__assert_fail@plt+0x7bc>
   11ba4:	ldr	r2, [pc, #132]	; 11c30 <__assert_fail@plt+0x7fc>
   11ba8:	ldr	r0, [pc, #156]	; 11c4c <__assert_fail@plt+0x818>
   11bac:	mov	r1, #0
   11bb0:	ldr	r3, [r2]
   11bb4:	ldr	r0, [r0]
   11bb8:	orr	r3, r3, #1
   11bbc:	str	r3, [r2]
   11bc0:	bl	110f8 <setbuf@plt>
   11bc4:	mov	r3, #0
   11bc8:	b	1198c <__assert_fail@plt+0x558>
   11bcc:	ldr	r5, [pc, #124]	; 11c50 <__assert_fail@plt+0x81c>
   11bd0:	mov	r0, r1
   11bd4:	mov	r2, r5
   11bd8:	ldr	r1, [pc, #76]	; 11c2c <__assert_fail@plt+0x7f8>
   11bdc:	bl	12ddc <__assert_fail@plt+0x19a8>
   11be0:	ldr	r2, [pc, #108]	; 11c54 <__assert_fail@plt+0x820>
   11be4:	mov	r3, #0
   11be8:	str	r5, [r2]
   11bec:	b	1198c <__assert_fail@plt+0x558>
   11bf0:	ldr	r2, [pc, #96]	; 11c58 <__assert_fail@plt+0x824>
   11bf4:	mov	r0, #1
   11bf8:	bl	11224 <error@plt>
   11bfc:	b	11ba4 <__assert_fail@plt+0x770>
   11c00:	ldr	r2, [pc, #84]	; 11c5c <__assert_fail@plt+0x828>
   11c04:	mov	r0, #1
   11c08:	bl	11224 <error@plt>
   11c0c:	b	11a54 <__assert_fail@plt+0x620>
   11c10:	mov	r3, r4
   11c14:	ldr	r2, [pc, #68]	; 11c60 <__assert_fail@plt+0x82c>
   11c18:	mov	r1, #0
   11c1c:	mov	r0, #1
   11c20:	bl	11224 <error@plt>
   11c24:	b	11a00 <__assert_fail@plt+0x5cc>
   11c28:	strdeq	pc, [r0], -r7
   11c2c:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11c30:	andeq	pc, r2, ip, asr #8
   11c34:	andeq	pc, r2, r4, ror #7
   11c38:	andeq	pc, r2, r4, asr r4	; <UNPREDICTABLE>
   11c3c:	tsteq	r0, r2
   11c40:	andeq	sp, r1, r0, lsr r0
   11c44:	andeq	pc, r2, r0, asr r4	; <UNPREDICTABLE>
   11c48:	andeq	sp, r1, r8, asr #32
   11c4c:	ldrdeq	pc, [r2], -ip
   11c50:	strdeq	pc, [r2], -r4
   11c54:	andeq	pc, r2, r4, asr #8
   11c58:	ldrdeq	ip, [r1], -r4
   11c5c:	andeq	sp, r1, r0, lsl r0
   11c60:	strdeq	ip, [r1], -r4
   11c64:	ldr	r1, [r0, #4]
   11c68:	ldr	r0, [pc]	; 11c70 <__assert_fail@plt+0x83c>
   11c6c:	b	11128 <printf@plt>
   11c70:	andeq	sp, r1, r0, rrx
   11c74:	push	{r4, r6, r7, r8, r9, lr}
   11c78:	vpush	{d8}
   11c7c:	ldr	r3, [pc, #324]	; 11dc8 <__assert_fail@plt+0x994>
   11c80:	ldr	r4, [pc, #324]	; 11dcc <__assert_fail@plt+0x998>
   11c84:	sub	sp, sp, #24
   11c88:	ldr	r0, [r3]
   11c8c:	bl	11134 <fflush@plt>
   11c90:	ldr	r3, [r4, #36]	; 0x24
   11c94:	ldr	r0, [pc, #308]	; 11dd0 <__assert_fail@plt+0x99c>
   11c98:	ldr	r1, [r3, #52]	; 0x34
   11c9c:	bl	11128 <printf@plt>
   11ca0:	ldr	r3, [r4, #36]	; 0x24
   11ca4:	ldr	r0, [pc, #296]	; 11dd4 <__assert_fail@plt+0x9a0>
   11ca8:	ldr	r1, [r3, #112]	; 0x70
   11cac:	bl	11128 <printf@plt>
   11cb0:	ldr	r3, [r4, #36]	; 0x24
   11cb4:	ldr	r0, [pc, #284]	; 11dd8 <__assert_fail@plt+0x9a4>
   11cb8:	ldr	r1, [r3, #116]	; 0x74
   11cbc:	bl	11128 <printf@plt>
   11cc0:	ldr	r3, [r4, #36]	; 0x24
   11cc4:	ldr	r1, [r3, #120]	; 0x78
   11cc8:	cmp	r1, #0
   11ccc:	bne	11dac <__assert_fail@plt+0x978>
   11cd0:	ldr	r1, [r3, #112]	; 0x70
   11cd4:	cmp	r1, #0
   11cd8:	beq	11d04 <__assert_fail@plt+0x8d0>
   11cdc:	ldr	r0, [r3, #116]	; 0x74
   11ce0:	cmp	r1, r0
   11ce4:	bcc	11d40 <__assert_fail@plt+0x90c>
   11ce8:	sub	r0, r1, r0
   11cec:	mov	r3, #100	; 0x64
   11cf0:	mul	r0, r3, r0
   11cf4:	bl	1ca88 <argp_parse@@Base+0x468c>
   11cf8:	mov	r1, r0
   11cfc:	ldr	r0, [pc, #216]	; 11ddc <__assert_fail@plt+0x9a8>
   11d00:	bl	11128 <printf@plt>
   11d04:	mov	r0, #10
   11d08:	bl	11320 <putchar@plt>
   11d0c:	ldr	r3, [r4, #36]	; 0x24
   11d10:	ldr	r0, [r3, #116]	; 0x74
   11d14:	cmp	r0, #0
   11d18:	beq	11d2c <__assert_fail@plt+0x8f8>
   11d1c:	ldr	r2, [pc, #188]	; 11de0 <__assert_fail@plt+0x9ac>
   11d20:	ldr	r2, [r2, #4]
   11d24:	cmp	r2, #7
   11d28:	bhi	11d4c <__assert_fail@plt+0x918>
   11d2c:	clz	r0, r0
   11d30:	lsr	r0, r0, #5
   11d34:	add	sp, sp, #24
   11d38:	vpop	{d8}
   11d3c:	pop	{r4, r6, r7, r8, r9, pc}
   11d40:	ldr	r0, [pc, #156]	; 11de4 <__assert_fail@plt+0x9b0>
   11d44:	bl	11128 <printf@plt>
   11d48:	b	11d04 <__assert_fail@plt+0x8d0>
   11d4c:	ldr	r2, [r3, #120]	; 0x78
   11d50:	ldr	r3, [r3, #68]	; 0x44
   11d54:	add	r0, r0, r2
   11d58:	vldr	d1, [pc, #96]	; 11dc0 <__assert_fail@plt+0x98c>
   11d5c:	vmov	s15, r0
   11d60:	vldr	d5, [r3, #16]
   11d64:	vldr	d6, [r3, #24]
   11d68:	ldrd	r6, [r3]
   11d6c:	vcvt.f64.u32	d7, s15
   11d70:	ldrd	r8, [r3, #8]
   11d74:	vdiv.f64	d8, d5, d7
   11d78:	vdiv.f64	d0, d6, d7
   11d7c:	vmls.f64	d0, d8, d8
   11d80:	bl	12edc <__assert_fail@plt+0x1aa8>
   11d84:	mov	r3, r7
   11d88:	vstr	d8, [sp]
   11d8c:	strd	r8, [sp, #8]
   11d90:	mov	r2, r6
   11d94:	ldr	r0, [pc, #76]	; 11de8 <__assert_fail@plt+0x9b4>
   11d98:	vstr	d0, [sp, #16]
   11d9c:	bl	11128 <printf@plt>
   11da0:	ldr	r3, [r4, #36]	; 0x24
   11da4:	ldr	r0, [r3, #116]	; 0x74
   11da8:	b	11d2c <__assert_fail@plt+0x8f8>
   11dac:	ldr	r0, [pc, #56]	; 11dec <__assert_fail@plt+0x9b8>
   11db0:	bl	11128 <printf@plt>
   11db4:	ldr	r3, [r4, #36]	; 0x24
   11db8:	b	11cd0 <__assert_fail@plt+0x89c>
   11dbc:	nop			; (mov r0, r0)
   11dc0:	rscsle	sl, r1, #252, 18	; 0x3f0000
   11dc4:	svccc	0x0040624d
   11dc8:	ldrdeq	pc, [r2], -ip
   11dcc:	andeq	pc, r2, r4, ror #7
   11dd0:	andeq	sp, r1, r8, ror r0
   11dd4:	muleq	r1, r4, r0
   11dd8:	strheq	sp, [r1], -r0
   11ddc:	andeq	sp, r1, r0, lsl #2
   11de0:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11de4:	ldrdeq	sp, [r1], -ip
   11de8:	andeq	sp, r1, r4, lsl r1
   11dec:	andeq	sp, r1, r8, asr #1
   11df0:	push	{r4, lr}
   11df4:	mov	r4, r0
   11df8:	ldr	r0, [pc, #84]	; 11e54 <__assert_fail@plt+0xa20>
   11dfc:	bl	11128 <printf@plt>
   11e00:	ldr	r3, [pc, #80]	; 11e58 <__assert_fail@plt+0xa24>
   11e04:	ldrb	r1, [r4, #1]
   11e08:	ldr	r2, [r3, #16]
   11e0c:	cmp	r2, r1
   11e10:	beq	11e4c <__assert_fail@plt+0xa18>
   11e14:	ldr	r2, [r3, #24]
   11e18:	cmp	r1, r2
   11e1c:	beq	11e3c <__assert_fail@plt+0xa08>
   11e20:	ldr	r2, [r3, #32]
   11e24:	cmp	r2, r1
   11e28:	addeq	r3, r3, #32
   11e2c:	beq	11e40 <__assert_fail@plt+0xa0c>
   11e30:	ldr	r0, [pc, #36]	; 11e5c <__assert_fail@plt+0xa28>
   11e34:	pop	{r4, lr}
   11e38:	b	11128 <printf@plt>
   11e3c:	add	r3, r3, #24
   11e40:	ldr	r0, [r3, #4]
   11e44:	pop	{r4, lr}
   11e48:	b	1123c <puts@plt>
   11e4c:	add	r3, r3, #16
   11e50:	b	11e40 <__assert_fail@plt+0xa0c>
   11e54:	andeq	sp, r1, ip, asr #2
   11e58:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11e5c:	andeq	sp, r1, r0, ror #2
   11e60:	push	{r4, lr}
   11e64:	mov	r4, r0
   11e68:	ldr	r0, [pc, #68]	; 11eb4 <__assert_fail@plt+0xa80>
   11e6c:	bl	11128 <printf@plt>
   11e70:	ldr	r3, [pc, #64]	; 11eb8 <__assert_fail@plt+0xa84>
   11e74:	ldrb	r1, [r4, #1]
   11e78:	ldr	r2, [r3, #40]	; 0x28
   11e7c:	cmp	r2, r1
   11e80:	beq	11e9c <__assert_fail@plt+0xa68>
   11e84:	ldr	r2, [r3, #48]	; 0x30
   11e88:	cmp	r1, r2
   11e8c:	beq	11eac <__assert_fail@plt+0xa78>
   11e90:	ldr	r0, [pc, #36]	; 11ebc <__assert_fail@plt+0xa88>
   11e94:	pop	{r4, lr}
   11e98:	b	11128 <printf@plt>
   11e9c:	add	r3, r3, #40	; 0x28
   11ea0:	ldr	r0, [r3, #4]
   11ea4:	pop	{r4, lr}
   11ea8:	b	1123c <puts@plt>
   11eac:	add	r3, r3, #48	; 0x30
   11eb0:	b	11ea0 <__assert_fail@plt+0xa6c>
   11eb4:	andeq	sp, r1, r4, ror r1
   11eb8:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11ebc:	andeq	sp, r1, r0, ror #2
   11ec0:	push	{r4, lr}
   11ec4:	mov	r4, r0
   11ec8:	ldr	r0, [pc, #124]	; 11f4c <__assert_fail@plt+0xb18>
   11ecc:	bl	11128 <printf@plt>
   11ed0:	ldr	r3, [pc, #120]	; 11f50 <__assert_fail@plt+0xb1c>
   11ed4:	ldrb	r1, [r4, #1]
   11ed8:	ldr	r2, [r3, #56]	; 0x38
   11edc:	cmp	r2, r1
   11ee0:	beq	11f34 <__assert_fail@plt+0xb00>
   11ee4:	ldr	r2, [r3, #64]	; 0x40
   11ee8:	cmp	r1, r2
   11eec:	beq	11f3c <__assert_fail@plt+0xb08>
   11ef0:	ldr	r2, [r3, #72]	; 0x48
   11ef4:	cmp	r1, r2
   11ef8:	beq	11f44 <__assert_fail@plt+0xb10>
   11efc:	ldr	r2, [r3, #80]	; 0x50
   11f00:	cmp	r1, r2
   11f04:	beq	11f24 <__assert_fail@plt+0xaf0>
   11f08:	ldr	r2, [r3, #88]	; 0x58
   11f0c:	cmp	r2, r1
   11f10:	addeq	r3, r3, #88	; 0x58
   11f14:	beq	11f28 <__assert_fail@plt+0xaf4>
   11f18:	ldr	r0, [pc, #52]	; 11f54 <__assert_fail@plt+0xb20>
   11f1c:	pop	{r4, lr}
   11f20:	b	11128 <printf@plt>
   11f24:	add	r3, r3, #80	; 0x50
   11f28:	ldr	r0, [r3, #4]
   11f2c:	pop	{r4, lr}
   11f30:	b	1123c <puts@plt>
   11f34:	add	r3, r3, #56	; 0x38
   11f38:	b	11f28 <__assert_fail@plt+0xaf4>
   11f3c:	add	r3, r3, #64	; 0x40
   11f40:	b	11f28 <__assert_fail@plt+0xaf4>
   11f44:	add	r3, r3, #72	; 0x48
   11f48:	b	11f28 <__assert_fail@plt+0xaf4>
   11f4c:	andeq	sp, r1, r4, lsl #3
   11f50:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   11f54:	andeq	sp, r1, r0, ror #2
   11f58:	push	{r4, r5, r6, lr}
   11f5c:	mov	r4, r0
   11f60:	ldr	r5, [pc, #344]	; 120c0 <__assert_fail@plt+0xc8c>
   11f64:	sub	sp, sp, #16
   11f68:	ldr	r3, [r5, #4]
   11f6c:	cmp	r3, #7
   11f70:	movls	r2, #0
   11f74:	bhi	1206c <__assert_fail@plt+0xc38>
   11f78:	ldr	r3, [pc, #324]	; 120c4 <__assert_fail@plt+0xc90>
   11f7c:	ldr	r1, [r3]
   11f80:	cmp	r1, #0
   11f84:	beq	11fa4 <__assert_fail@plt+0xb70>
   11f88:	ldr	r3, [r5, #4]
   11f8c:	mov	r0, #1
   11f90:	cmp	r2, r3
   11f94:	str	r0, [sp]
   11f98:	subcc	r3, r3, r2
   11f9c:	mov	r0, r4
   11fa0:	bl	13000 <__assert_fail@plt+0x1bcc>
   11fa4:	mov	r1, #1
   11fa8:	mov	r0, r4
   11fac:	bl	12f88 <__assert_fail@plt+0x1b54>
   11fb0:	subs	r6, r0, #0
   11fb4:	bne	1209c <__assert_fail@plt+0xc68>
   11fb8:	ldr	r1, [r4, #72]	; 0x48
   11fbc:	ldr	r0, [r4, #112]	; 0x70
   11fc0:	ldr	r5, [r4, #56]	; 0x38
   11fc4:	lsl	r1, r1, #3
   11fc8:	bl	1cc74 <argp_parse@@Base+0x4878>
   11fcc:	ldr	r2, [r4, #76]	; 0x4c
   11fd0:	mov	lr, #1
   11fd4:	mvn	r0, #127	; 0x7f
   11fd8:	add	r5, r5, #8
   11fdc:	ldrb	r3, [r2, r1, asr #3]
   11fe0:	and	ip, r1, #7
   11fe4:	bic	r3, r3, lr, lsl ip
   11fe8:	strb	r3, [r2, r1, asr #3]
   11fec:	ldr	r3, [r4, #80]	; 0x50
   11ff0:	mov	ip, r4
   11ff4:	mov	lr, #28
   11ff8:	strb	r6, [r3, #1]
   11ffc:	strb	r0, [r3]
   12000:	ldr	r2, [r4, #60]	; 0x3c
   12004:	mov	r1, r3
   12008:	rev16	r2, r2
   1200c:	strh	r2, [r3, #4]
   12010:	ldr	r2, [r4, #112]	; 0x70
   12014:	strh	r6, [r3, #2]
   12018:	rev16	r2, r2
   1201c:	strh	r2, [r3, #6]
   12020:	ldr	r0, [ip], #24
   12024:	mov	r3, r6
   12028:	mov	r2, r5
   1202c:	stm	sp, {ip, lr}
   12030:	bl	11338 <sendto@plt>
   12034:	subs	r3, r0, #0
   12038:	blt	1209c <__assert_fail@plt+0xc68>
   1203c:	ldr	r2, [r4, #112]	; 0x70
   12040:	cmp	r5, r3
   12044:	add	r2, r2, #1
   12048:	str	r2, [r4, #112]	; 0x70
   1204c:	beq	12060 <__assert_fail@plt+0xc2c>
   12050:	mov	r2, r5
   12054:	ldr	r1, [r4, #52]	; 0x34
   12058:	ldr	r0, [pc, #104]	; 120c8 <__assert_fail@plt+0xc94>
   1205c:	bl	11128 <printf@plt>
   12060:	mov	r0, r6
   12064:	add	sp, sp, #16
   12068:	pop	{r4, r5, r6, pc}
   1206c:	mov	r1, #0
   12070:	add	r0, sp, #8
   12074:	bl	11218 <gettimeofday@plt>
   12078:	mov	r3, #1
   1207c:	str	r3, [sp]
   12080:	mov	r2, #0
   12084:	add	r1, sp, #8
   12088:	mov	r3, #8
   1208c:	mov	r0, r4
   12090:	bl	13000 <__assert_fail@plt+0x1bcc>
   12094:	mov	r2, #8
   12098:	b	11f78 <__assert_fail@plt+0xb44>
   1209c:	bl	112e4 <__errno_location@plt>
   120a0:	ldr	r2, [pc, #36]	; 120cc <__assert_fail@plt+0xc98>
   120a4:	mvn	r6, #0
   120a8:	ldr	r1, [r0]
   120ac:	mov	r0, #1
   120b0:	bl	11224 <error@plt>
   120b4:	mov	r0, r6
   120b8:	add	sp, sp, #16
   120bc:	pop	{r4, r5, r6, pc}
   120c0:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   120c4:	andeq	pc, r2, r8, asr #8
   120c8:	andeq	sp, r1, r0, lsr #3
   120cc:	andeq	sp, r1, r4, asr #3
   120d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120d4:	sub	sp, sp, #124	; 0x7c
   120d8:	mov	r6, r0
   120dc:	add	fp, sp, #72	; 0x48
   120e0:	add	r1, r0, #32
   120e4:	mov	r2, fp
   120e8:	mov	r3, #46	; 0x2e
   120ec:	mov	r0, #10
   120f0:	add	r5, r6, #8
   120f4:	add	sl, sp, #24
   120f8:	bl	113f8 <inet_ntop@plt>
   120fc:	add	r1, r5, #8
   12100:	mov	r2, sl
   12104:	mov	r3, #46	; 0x2e
   12108:	mov	r0, #10
   1210c:	bl	113f8 <inet_ntop@plt>
   12110:	ldr	r0, [pc, #268]	; 12224 <__assert_fail@plt+0xdf0>
   12114:	bl	11128 <printf@plt>
   12118:	ldr	r2, [pc, #264]	; 12228 <__assert_fail@plt+0xdf4>
   1211c:	ldrb	r1, [r6, #8]
   12120:	mov	r9, r2
   12124:	mov	r4, #0
   12128:	ldr	r7, [pc, #252]	; 1222c <__assert_fail@plt+0xdf8>
   1212c:	ldr	r8, [pc, #252]	; 12230 <__assert_fail@plt+0xdfc>
   12130:	b	12144 <__assert_fail@plt+0xd10>
   12134:	ldrb	r1, [r5, #1]!
   12138:	tst	r4, #1
   1213c:	movne	r2, r8
   12140:	moveq	r2, r9
   12144:	add	r4, r4, #1
   12148:	mov	r0, r7
   1214c:	bl	11128 <printf@plt>
   12150:	cmp	r4, #8
   12154:	bne	12134 <__assert_fail@plt+0xd00>
   12158:	ldr	r0, [pc, #212]	; 12234 <__assert_fail@plt+0xe00>
   1215c:	bl	1123c <puts@plt>
   12160:	ldr	r0, [pc, #208]	; 12238 <__assert_fail@plt+0xe04>
   12164:	bl	1123c <puts@plt>
   12168:	ldrh	r0, [r6, #12]
   1216c:	ldr	r1, [r6, #8]
   12170:	ldrb	lr, [r6, #15]
   12174:	ldrb	ip, [r6, #14]
   12178:	rev	r1, r1
   1217c:	rev16	r0, r0
   12180:	lsr	r2, r1, #20
   12184:	uxth	r0, r0
   12188:	bic	r3, r1, #-16777216	; 0xff000000
   1218c:	bic	r3, r3, #15728640	; 0xf00000
   12190:	stm	sp, {r0, ip, lr}
   12194:	uxtb	r2, r2
   12198:	str	fp, [sp, #16]
   1219c:	str	sl, [sp, #12]
   121a0:	lsr	r1, r1, #28
   121a4:	ldr	r0, [pc, #144]	; 1223c <__assert_fail@plt+0xe08>
   121a8:	bl	11128 <printf@plt>
   121ac:	ldrb	r3, [r6, #14]
   121b0:	cmp	r3, #58	; 0x3a
   121b4:	beq	121c8 <__assert_fail@plt+0xd94>
   121b8:	mov	r0, #10
   121bc:	bl	11320 <putchar@plt>
   121c0:	add	sp, sp, #124	; 0x7c
   121c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121c8:	ldrh	r3, [r6, #12]
   121cc:	ldrb	r2, [r6, #49]	; 0x31
   121d0:	ldrb	r1, [r6, #48]	; 0x30
   121d4:	rev16	r3, r3
   121d8:	ldr	r0, [pc, #96]	; 12240 <__assert_fail@plt+0xe0c>
   121dc:	uxth	r3, r3
   121e0:	bl	11128 <printf@plt>
   121e4:	ldrb	r3, [r6, #48]	; 0x30
   121e8:	sub	r3, r3, #128	; 0x80
   121ec:	cmp	r3, #1
   121f0:	bhi	121b8 <__assert_fail@plt+0xd84>
   121f4:	ldrh	r1, [r6, #52]	; 0x34
   121f8:	ldrh	r2, [r6, #54]	; 0x36
   121fc:	ldr	r0, [pc, #64]	; 12244 <__assert_fail@plt+0xe10>
   12200:	rev16	r1, r1
   12204:	rev16	r2, r2
   12208:	uxth	r1, r1
   1220c:	uxth	r2, r2
   12210:	bl	11128 <printf@plt>
   12214:	mov	r0, #10
   12218:	bl	11320 <putchar@plt>
   1221c:	add	sp, sp, #124	; 0x7c
   12220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12224:	ldrdeq	sp, [r1], -r4
   12228:	andeq	lr, r1, r4, lsr #6
   1222c:	andeq	sp, r1, r8, ror #3
   12230:	andeq	sp, r1, r4, ror #3
   12234:	strdeq	sp, [r1], -r0
   12238:	strdeq	sp, [r1], -ip
   1223c:	andeq	sp, r1, r0, lsr #4
   12240:	andeq	sp, r1, r8, asr #4
   12244:	andeq	sp, r1, r0, ror r2
   12248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1224c:	vpush	{d8-d10}
   12250:	ldr	sl, [pc, #1040]	; 12668 <__assert_fail@plt+0x1234>
   12254:	mov	r6, r0
   12258:	ldr	r3, [sl]
   1225c:	sub	sp, sp, #1840	; 0x730
   12260:	and	r3, r3, #3
   12264:	cmp	r3, #3
   12268:	sub	sp, sp, #4
   1226c:	beq	12c10 <__assert_fail@plt+0x17dc>
   12270:	add	r5, sp, #144	; 0x90
   12274:	mov	r2, #32
   12278:	mov	r1, #0
   1227c:	ldr	r9, [pc, #1000]	; 1266c <__assert_fail@plt+0x1238>
   12280:	mov	r0, r5
   12284:	bl	11314 <memset@plt>
   12288:	ldr	r3, [pc, #1048]	; 126a8 <__assert_fail@plt+0x1274>
   1228c:	vldr	d7, [pc, #956]	; 12650 <__assert_fail@plt+0x121c>
   12290:	ldr	r4, [r9, #36]	; 0x24
   12294:	ldr	r3, [r3, #4]
   12298:	mov	r2, #32
   1229c:	str	r3, [r4, #56]	; 0x38
   122a0:	mov	r1, #0
   122a4:	str	r5, [r4, #68]	; 0x44
   122a8:	add	r0, sp, #816	; 0x330
   122ac:	vstr	d7, [r5]
   122b0:	bl	11314 <memset@plt>
   122b4:	mov	r0, #10
   122b8:	mov	ip, #194	; 0xc2
   122bc:	str	r0, [sp, #820]	; 0x334
   122c0:	add	r2, sp, #816	; 0x330
   122c4:	add	r3, sp, #560	; 0x230
   122c8:	mov	r1, #0
   122cc:	mov	r0, r6
   122d0:	str	ip, [sp, #816]	; 0x330
   122d4:	bl	113ec <getaddrinfo@plt>
   122d8:	cmp	r0, #0
   122dc:	bne	12b28 <__assert_fail@plt+0x16f4>
   122e0:	ldr	r5, [sp, #560]	; 0x230
   122e4:	add	r0, r4, #24
   122e8:	ldr	r2, [r5, #16]
   122ec:	ldr	r1, [r5, #20]
   122f0:	bl	11188 <memcpy@plt>
   122f4:	ldr	r0, [r5, #24]
   122f8:	cmp	r0, #0
   122fc:	moveq	r0, r6
   12300:	bl	111dc <strdup@plt>
   12304:	str	r0, [r4, #52]	; 0x34
   12308:	mov	r0, r5
   1230c:	bl	113e0 <freeaddrinfo@plt>
   12310:	ldr	r3, [r4, #52]	; 0x34
   12314:	cmp	r3, #0
   12318:	beq	12b30 <__assert_fail@plt+0x16fc>
   1231c:	ldr	r0, [r9, #36]	; 0x24
   12320:	mov	r3, #0
   12324:	mov	r1, #1
   12328:	str	r1, [sp, #8]
   1232c:	str	r3, [sp, #4]
   12330:	str	r3, [sp]
   12334:	add	r0, r0, #24
   12338:	mov	r3, #256	; 0x100
   1233c:	add	r2, sp, #304	; 0x130
   12340:	mov	r1, #28
   12344:	bl	1135c <getnameinfo@plt>
   12348:	subs	r3, r0, #0
   1234c:	beq	12370 <__assert_fail@plt+0xf3c>
   12350:	cmn	r3, #11
   12354:	beq	12b48 <__assert_fail@plt+0x1714>
   12358:	bl	11170 <gai_strerror@plt>
   1235c:	mov	r3, r0
   12360:	ldr	r2, [pc, #776]	; 12670 <__assert_fail@plt+0x123c>
   12364:	mov	r1, #0
   12368:	mov	r0, #1
   1236c:	bl	11224 <error@plt>
   12370:	ldr	r1, [r9, #36]	; 0x24
   12374:	ldr	r3, [pc, #812]	; 126a8 <__assert_fail@plt+0x1274>
   12378:	add	r2, sp, #304	; 0x130
   1237c:	ldr	r1, [r1, #52]	; 0x34
   12380:	ldr	r3, [r3, #4]
   12384:	ldr	r0, [pc, #744]	; 12674 <__assert_fail@plt+0x1240>
   12388:	bl	11128 <printf@plt>
   1238c:	ldr	r3, [sl]
   12390:	tst	r3, #32
   12394:	beq	123ac <__assert_fail@plt+0xf78>
   12398:	ldr	r3, [r9, #36]	; 0x24
   1239c:	ldr	r0, [pc, #724]	; 12678 <__assert_fail@plt+0x1244>
   123a0:	ldr	r2, [r3, #60]	; 0x3c
   123a4:	mov	r1, r2
   123a8:	bl	11128 <printf@plt>
   123ac:	mov	r0, #10
   123b0:	bl	11320 <putchar@plt>
   123b4:	ldr	r5, [r9, #36]	; 0x24
   123b8:	ldr	r1, [pc, #700]	; 1267c <__assert_fail@plt+0x1248>
   123bc:	mov	r0, #2
   123c0:	bl	11194 <signal@plt>
   123c4:	ldr	r2, [r9, #12]
   123c8:	mov	r4, #0
   123cc:	ldr	r3, [r5]
   123d0:	add	r8, sp, #68	; 0x44
   123d4:	add	r7, sp, #96	; 0x60
   123d8:	cmp	r2, r4
   123dc:	str	r4, [r8, #4]
   123e0:	str	r4, [sp, #92]	; 0x5c
   123e4:	add	fp, r3, #1
   123e8:	str	r4, [sp, #68]	; 0x44
   123ec:	str	r4, [sp, #84]	; 0x54
   123f0:	str	r4, [sp, #88]	; 0x58
   123f4:	str	r4, [r7], #-4
   123f8:	beq	12414 <__assert_fail@plt+0xfe0>
   123fc:	mov	r0, r5
   12400:	bl	11f58 <__assert_fail@plt+0xb24>
   12404:	ldr	r3, [r9, #12]
   12408:	add	r4, r4, #1
   1240c:	cmp	r4, r3
   12410:	bcc	123fc <__assert_fail@plt+0xfc8>
   12414:	ldr	r3, [sl]
   12418:	tst	r3, #1
   1241c:	ldrne	r3, [pc, #604]	; 12680 <__assert_fail@plt+0x124c>
   12420:	bne	12448 <__assert_fail@plt+0x1014>
   12424:	ldr	r1, [r5, #20]
   12428:	ldr	r3, [pc, #596]	; 12684 <__assert_fail@plt+0x1250>
   1242c:	mov	r2, #1000	; 0x3e8
   12430:	umull	r0, r3, r3, r1
   12434:	lsr	r3, r3, #6
   12438:	str	r3, [sp, #84]	; 0x54
   1243c:	mul	r3, r2, r3
   12440:	sub	r3, r1, r3
   12444:	mul	r3, r2, r3
   12448:	vldr	d10, [pc, #520]	; 12658 <__assert_fail@plt+0x1224>
   1244c:	add	r2, sp, #76	; 0x4c
   12450:	mov	r1, #0
   12454:	mov	r0, r2
   12458:	mov	r4, r1
   1245c:	str	r2, [sp, #20]
   12460:	str	r3, [sp, #88]	; 0x58
   12464:	str	r1, [sp, #32]
   12468:	vldr	d9, [pc, #496]	; 12660 <__assert_fail@plt+0x122c>
   1246c:	bl	11218 <gettimeofday@plt>
   12470:	mov	r0, r5
   12474:	bl	11f58 <__assert_fail@plt+0xb24>
   12478:	str	r4, [sp, #28]
   1247c:	str	r4, [sp, #40]	; 0x28
   12480:	ldr	r4, [pc, #512]	; 12688 <__assert_fail@plt+0x1254>
   12484:	ldr	r6, [r9]
   12488:	cmp	r6, #0
   1248c:	bne	125c8 <__assert_fail@plt+0x1194>
   12490:	mov	r2, #128	; 0x80
   12494:	mov	r1, r6
   12498:	add	r0, sp, #176	; 0xb0
   1249c:	bl	11314 <memset@plt>
   124a0:	ldr	r3, [r5]
   124a4:	add	ip, sp, #1840	; 0x730
   124a8:	cmp	r3, #0
   124ac:	add	r2, r3, #31
   124b0:	movge	r2, r3
   124b4:	asr	r0, r3, #31
   124b8:	asr	r2, r2, #5
   124bc:	lsr	r0, r0, #27
   124c0:	add	r2, ip, r2, lsl #2
   124c4:	add	r3, r3, r0
   124c8:	and	r3, r3, #31
   124cc:	ldr	ip, [r2, #-1664]	; 0xfffff980
   124d0:	sub	r3, r3, r0
   124d4:	mov	lr, #1
   124d8:	mov	r1, r6
   124dc:	orr	r3, ip, lr, lsl r3
   124e0:	mov	r0, r7
   124e4:	str	r3, [r2, #-1664]	; 0xfffff980
   124e8:	bl	11218 <gettimeofday@plt>
   124ec:	ldr	r1, [sp, #88]	; 0x58
   124f0:	ldr	r3, [sp, #80]	; 0x50
   124f4:	ldr	ip, [sp, #96]	; 0x60
   124f8:	ldr	r2, [sp, #76]	; 0x4c
   124fc:	ldr	r0, [sp, #84]	; 0x54
   12500:	add	r3, r3, r1
   12504:	ldr	r1, [sp, #92]	; 0x5c
   12508:	sub	r3, r3, ip
   1250c:	add	r2, r2, r0
   12510:	sub	r2, r2, r1
   12514:	cmp	r3, #0
   12518:	str	r3, [sp, #72]	; 0x48
   1251c:	str	r2, [sp, #68]	; 0x44
   12520:	bge	12838 <__assert_fail@plt+0x1404>
   12524:	sub	r1, r2, #1
   12528:	add	r3, r3, #999424	; 0xf4000
   1252c:	adds	r3, r3, #576	; 0x240
   12530:	mov	r2, r1
   12534:	sub	r1, r1, #1
   12538:	bmi	12528 <__assert_fail@plt+0x10f4>
   1253c:	str	r3, [sp, #72]	; 0x48
   12540:	str	r2, [sp, #68]	; 0x44
   12544:	cmp	r2, #0
   12548:	movlt	r3, #0
   1254c:	strlt	r3, [sp, #72]	; 0x48
   12550:	strlt	r3, [sp, #68]	; 0x44
   12554:	mov	r3, #0
   12558:	mov	r2, r3
   1255c:	str	r8, [sp]
   12560:	add	r1, sp, #176	; 0xb0
   12564:	mov	r0, fp
   12568:	bl	111b8 <select@plt>
   1256c:	subs	r3, r0, #0
   12570:	blt	1262c <__assert_fail@plt+0x11f8>
   12574:	cmp	r3, #1
   12578:	beq	126d4 <__assert_fail@plt+0x12a0>
   1257c:	ldr	r3, [r5, #8]
   12580:	cmp	r3, #0
   12584:	beq	125f8 <__assert_fail@plt+0x11c4>
   12588:	ldr	r2, [r5, #112]	; 0x70
   1258c:	cmp	r3, r2
   12590:	bhi	125f8 <__assert_fail@plt+0x11c4>
   12594:	ldr	r3, [sp, #28]
   12598:	cmp	r3, #0
   1259c:	bne	125c8 <__assert_fail@plt+0x1194>
   125a0:	mov	r3, #1
   125a4:	str	r3, [sp, #28]
   125a8:	mov	r3, #10
   125ac:	str	r3, [sp, #84]	; 0x54
   125b0:	mov	r1, #0
   125b4:	ldr	r0, [sp, #20]
   125b8:	bl	11218 <gettimeofday@plt>
   125bc:	ldr	r6, [r9]
   125c0:	cmp	r6, #0
   125c4:	beq	12490 <__assert_fail@plt+0x105c>
   125c8:	mov	r0, r5
   125cc:	bl	130ec <__assert_fail@plt+0x1cb8>
   125d0:	bl	11c74 <__assert_fail@plt+0x840>
   125d4:	ldr	r3, [r9, #36]	; 0x24
   125d8:	mov	r4, r0
   125dc:	ldr	r0, [r3, #52]	; 0x34
   125e0:	bl	19378 <argp_parse@@Base+0xf7c>
   125e4:	mov	r0, r4
   125e8:	add	sp, sp, #1840	; 0x730
   125ec:	add	sp, sp, #4
   125f0:	vpop	{d8-d10}
   125f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125f8:	mov	r0, r5
   125fc:	bl	11f58 <__assert_fail@plt+0xb24>
   12600:	ldr	r3, [sl]
   12604:	and	r3, r3, #9
   12608:	cmp	r3, #1
   1260c:	beq	12860 <__assert_fail@plt+0x142c>
   12610:	ldr	r3, [pc, #144]	; 126a8 <__assert_fail@plt+0x1274>
   12614:	add	r0, r5, #12
   12618:	ldr	r1, [r3, #12]
   1261c:	bl	13128 <__assert_fail@plt+0x1cf4>
   12620:	cmp	r0, #0
   12624:	beq	125b0 <__assert_fail@plt+0x117c>
   12628:	b	125c8 <__assert_fail@plt+0x1194>
   1262c:	bl	112e4 <__errno_location@plt>
   12630:	ldr	r1, [r0]
   12634:	cmp	r1, #4
   12638:	beq	12484 <__assert_fail@plt+0x1050>
   1263c:	ldr	r2, [pc, #72]	; 1268c <__assert_fail@plt+0x1258>
   12640:	mov	r0, #1
   12644:	bl	11224 <error@plt>
   12648:	b	12484 <__assert_fail@plt+0x1050>
   1264c:	nop			; (mov r0, r0)
   12650:			; <UNDEFINED> instruction: 0xff800000
   12654:	bicmi	ip, sp, r4, ror #26
	...
   12664:	addmi	r4, pc, r0
   12668:	andeq	pc, r2, ip, asr #8
   1266c:	andeq	pc, r2, r4, ror #7
   12670:	andeq	sp, r1, r8, lsr #5
   12674:			; <UNDEFINED> instruction: 0x0001d2b8
   12678:	ldrdeq	sp, [r1], -r8
   1267c:	strdeq	r1, [r1], -r8
   12680:	andeq	r2, r0, r0, lsl r7
   12684:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12688:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   1268c:	andeq	sp, r1, ip, ror #5
   12690:	ldrdeq	pc, [r2], -r8
   12694:	strdeq	sp, [r1], -ip
   12698:	andeq	sp, r1, r4, lsl r3
   1269c:	andeq	sp, r1, ip, lsl r3
   126a0:	andeq	sp, r1, ip, lsr r3
   126a4:	andeq	sp, r1, ip, asr r3
   126a8:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   126ac:	andeq	sp, r1, r0, ror r3
   126b0:	andeq	sp, r1, r8, lsl #7
   126b4:	ldrdeq	pc, [r2], -ip
   126b8:	andeq	sp, r1, r8, lsl #5
   126bc:			; <UNDEFINED> instruction: 0x0002f1b4
   126c0:	andeq	pc, r2, ip, lsr #3
   126c4:	andeq	pc, r2, r4, lsr #3
   126c8:	muleq	r2, ip, r1
   126cc:	andeq	sp, r1, r4, asr r3
   126d0:	andeq	sp, r1, r4, asr #6
   126d4:	ldr	r0, [r5, #56]	; 0x38
   126d8:	ldr	ip, [r5, #80]	; 0x50
   126dc:	add	r0, r0, #8
   126e0:	mov	r6, #0
   126e4:	str	r3, [sp, #128]	; 0x80
   126e8:	str	r3, [sp, #24]
   126ec:	str	r0, [sp, #104]	; 0x68
   126f0:	add	r3, sp, #816	; 0x330
   126f4:	mov	r0, #28
   126f8:	add	lr, sp, #100	; 0x64
   126fc:	str	r3, [sp, #132]	; 0x84
   12700:	str	ip, [sp, #100]	; 0x64
   12704:	add	r3, r5, #84	; 0x54
   12708:	mov	ip, #1024	; 0x400
   1270c:	str	r0, [sp, #120]	; 0x78
   12710:	add	r1, sp, #116	; 0x74
   12714:	ldr	r0, [r5]
   12718:	mov	r2, r6
   1271c:	str	r3, [sp, #44]	; 0x2c
   12720:	str	r3, [sp, #116]	; 0x74
   12724:	str	lr, [sp, #124]	; 0x7c
   12728:	str	r6, [sp, #140]	; 0x8c
   1272c:	str	ip, [sp, #136]	; 0x88
   12730:	bl	113c8 <recvmsg@plt>
   12734:	subs	r3, r0, #0
   12738:	str	r3, [sp, #36]	; 0x24
   1273c:	blt	127dc <__assert_fail@plt+0x13a8>
   12740:	ldr	r2, [sp, #136]	; 0x88
   12744:	ldr	r1, [sp, #132]	; 0x84
   12748:	cmp	r2, #11
   1274c:	movhi	r6, r1
   12750:	ldr	r3, [sp, #24]
   12754:	add	r1, r1, r2
   12758:	b	12774 <__assert_fail@plt+0x1340>
   1275c:	ldr	r2, [r6]
   12760:	add	r2, r2, #3
   12764:	bic	r2, r2, #3
   12768:	add	r2, r6, r2
   1276c:	cmp	r1, r2
   12770:	bcc	127ac <__assert_fail@plt+0x1378>
   12774:	cmp	r6, #0
   12778:	beq	127ac <__assert_fail@plt+0x1378>
   1277c:	ldr	r2, [r6, #4]
   12780:	cmp	r2, #41	; 0x29
   12784:	beq	12824 <__assert_fail@plt+0x13f0>
   12788:	ldr	r0, [r6]
   1278c:	add	r2, r0, #3
   12790:	bic	r2, r2, #3
   12794:	add	r6, r6, r2
   12798:	cmp	r0, #11
   1279c:	add	r2, r6, #12
   127a0:	bls	127ac <__assert_fail@plt+0x1378>
   127a4:	cmp	r1, r2
   127a8:	bcs	1275c <__assert_fail@plt+0x1328>
   127ac:	mvn	r6, #0
   127b0:	ldr	r2, [r5, #80]	; 0x50
   127b4:	str	r2, [sp, #24]
   127b8:	ldrb	r2, [r2]
   127bc:	cmp	r2, #129	; 0x81
   127c0:	beq	12874 <__assert_fail@plt+0x1440>
   127c4:	ldr	r2, [sp, #24]
   127c8:	ldr	r3, [r9, #36]	; 0x24
   127cc:	ldr	r1, [r2, #32]
   127d0:	ldr	r2, [r3, #32]
   127d4:	cmp	r1, r2
   127d8:	beq	12a28 <__assert_fail@plt+0x15f4>
   127dc:	ldr	r3, [sp, #40]	; 0x28
   127e0:	cmp	r3, #0
   127e4:	beq	12a14 <__assert_fail@plt+0x15e0>
   127e8:	ldr	r3, [pc, #-328]	; 126a8 <__assert_fail@plt+0x1274>
   127ec:	add	r0, r5, #12
   127f0:	ldr	r1, [r3, #12]
   127f4:	bl	13128 <__assert_fail@plt+0x1cf4>
   127f8:	cmp	r0, #0
   127fc:	bne	125c8 <__assert_fail@plt+0x1194>
   12800:	ldr	r3, [r5, #8]
   12804:	ldr	r1, [sp, #32]
   12808:	adds	r2, r3, #0
   1280c:	movne	r2, #1
   12810:	cmp	r3, r1
   12814:	movhi	r2, #0
   12818:	cmp	r2, #0
   1281c:	beq	12484 <__assert_fail@plt+0x1050>
   12820:	b	125c8 <__assert_fail@plt+0x1194>
   12824:	ldr	r2, [r6, #8]
   12828:	cmp	r2, #52	; 0x34
   1282c:	bne	12788 <__assert_fail@plt+0x1354>
   12830:	ldr	r6, [r6, #12]
   12834:	b	127b0 <__assert_fail@plt+0x137c>
   12838:	cmp	r3, r4
   1283c:	ble	12544 <__assert_fail@plt+0x1110>
   12840:	add	r1, r2, #1
   12844:	sub	r3, r3, #999424	; 0xf4000
   12848:	sub	r3, r3, #576	; 0x240
   1284c:	cmp	r3, r4
   12850:	mov	r2, r1
   12854:	add	r1, r1, #1
   12858:	bgt	12844 <__assert_fail@plt+0x1410>
   1285c:	b	1253c <__assert_fail@plt+0x1108>
   12860:	ldr	r3, [pc, #-436]	; 126b4 <__assert_fail@plt+0x1280>
   12864:	mov	r0, #46	; 0x2e
   12868:	ldr	r1, [r3]
   1286c:	bl	113a4 <putc@plt>
   12870:	b	12610 <__assert_fail@plt+0x11dc>
   12874:	str	r3, [sp, #48]	; 0x30
   12878:	ldr	r3, [sp, #24]
   1287c:	ldr	r1, [r5, #60]	; 0x3c
   12880:	ldrh	r2, [r3, #4]
   12884:	rev16	r2, r2
   12888:	uxth	r2, r2
   1288c:	cmp	r2, r1
   12890:	bne	127dc <__assert_fail@plt+0x13a8>
   12894:	ldrh	r0, [r3, #6]
   12898:	ldr	r1, [r5, #72]	; 0x48
   1289c:	rev16	r0, r0
   128a0:	lsl	r1, r1, #3
   128a4:	uxth	r0, r0
   128a8:	bl	1ceb4 <argp_parse@@Base+0x4ab8>
   128ac:	ldr	r0, [r5, #76]	; 0x4c
   128b0:	ldrb	r2, [r0, r1, asr #3]
   128b4:	and	ip, r1, #7
   128b8:	asr	lr, r2, ip
   128bc:	ands	r3, lr, #1
   128c0:	moveq	lr, #1
   128c4:	ldrne	r2, [r5, #120]	; 0x78
   128c8:	orreq	r2, r2, lr, lsl ip
   128cc:	strbeq	r2, [r0, r1, asr #3]
   128d0:	ldreq	r2, [r5, #116]	; 0x74
   128d4:	str	r3, [sp, #52]	; 0x34
   128d8:	ldr	r3, [sp, #48]	; 0x30
   128dc:	addne	r2, r2, #1
   128e0:	addeq	r2, r2, lr
   128e4:	strne	r2, [r5, #120]	; 0x78
   128e8:	streq	r2, [r5, #116]	; 0x74
   128ec:	str	r3, [sp, #60]	; 0x3c
   128f0:	ldr	r2, [r5, #68]	; 0x44
   128f4:	add	r3, sp, #108	; 0x6c
   128f8:	mov	r0, r3
   128fc:	mov	r1, #0
   12900:	str	r3, [sp, #48]	; 0x30
   12904:	str	r2, [sp, #56]	; 0x38
   12908:	bl	11218 <gettimeofday@plt>
   1290c:	ldr	r3, [sp, #36]	; 0x24
   12910:	ldr	r2, [sp, #56]	; 0x38
   12914:	sub	r1, r3, #8
   12918:	cmp	r1, #7
   1291c:	movls	r2, #0
   12920:	ldr	r3, [sp, #60]	; 0x3c
   12924:	vmovls.f64	d8, d10
   12928:	strls	r2, [sp, #48]	; 0x30
   1292c:	bhi	12b58 <__assert_fail@plt+0x1724>
   12930:	ldr	r2, [sl]
   12934:	tst	r2, #8
   12938:	bne	129fc <__assert_fail@plt+0x15c8>
   1293c:	ands	r1, r2, #1
   12940:	bne	12bf0 <__assert_fail@plt+0x17bc>
   12944:	tst	r2, #4
   12948:	moveq	r3, #32
   1294c:	str	r1, [sp]
   12950:	stmib	sp, {r1, r3}
   12954:	ldr	r0, [sp, #44]	; 0x2c
   12958:	mov	r3, #256	; 0x100
   1295c:	add	r2, sp, #560	; 0x230
   12960:	mov	r1, #28
   12964:	bl	1135c <getnameinfo@plt>
   12968:	subs	r3, r0, #0
   1296c:	beq	129a0 <__assert_fail@plt+0x156c>
   12970:	cmn	r3, #11
   12974:	beq	12be0 <__assert_fail@plt+0x17ac>
   12978:	bl	11170 <gai_strerror@plt>
   1297c:	ldr	r3, [pc, #-756]	; 12690 <__assert_fail@plt+0x125c>
   12980:	mov	r2, r0
   12984:	ldr	r1, [pc, #-760]	; 12694 <__assert_fail@plt+0x1260>
   12988:	ldr	r0, [r3]
   1298c:	bl	112d8 <fprintf@plt>
   12990:	ldr	r3, [pc, #-768]	; 12698 <__assert_fail@plt+0x1264>
   12994:	ldm	r3, {r0, r1}
   12998:	add	r3, sp, #560	; 0x230
   1299c:	stm	r3, {r0, r1}
   129a0:	ldr	r3, [sp, #24]
   129a4:	ldr	r1, [sp, #36]	; 0x24
   129a8:	add	r2, sp, #560	; 0x230
   129ac:	ldrh	r3, [r3, #6]
   129b0:	ldr	r0, [pc, #-796]	; 1269c <__assert_fail@plt+0x1268>
   129b4:	rev16	r3, r3
   129b8:	uxth	r3, r3
   129bc:	bl	11128 <printf@plt>
   129c0:	cmp	r6, #0
   129c4:	blt	129d4 <__assert_fail@plt+0x15a0>
   129c8:	mov	r1, r6
   129cc:	ldr	r0, [pc, #-820]	; 126a0 <__assert_fail@plt+0x126c>
   129d0:	bl	11128 <printf@plt>
   129d4:	ldr	r3, [sp, #48]	; 0x30
   129d8:	cmp	r3, #0
   129dc:	bne	12c7c <__assert_fail@plt+0x1848>
   129e0:	ldr	r3, [sp, #52]	; 0x34
   129e4:	cmp	r3, #0
   129e8:	bne	12c70 <__assert_fail@plt+0x183c>
   129ec:	ldr	r3, [pc, #-832]	; 126b4 <__assert_fail@plt+0x1280>
   129f0:	mov	r0, #10
   129f4:	ldr	r1, [r3]
   129f8:	bl	113a4 <putc@plt>
   129fc:	ldr	r3, [sp, #32]
   12a00:	add	r3, r3, #1
   12a04:	str	r3, [sp, #32]
   12a08:	ldr	r3, [sp, #40]	; 0x28
   12a0c:	cmp	r3, #0
   12a10:	bne	127e8 <__assert_fail@plt+0x13b4>
   12a14:	mov	r1, r3
   12a18:	mov	r0, r7
   12a1c:	bl	11218 <gettimeofday@plt>
   12a20:	str	r7, [sp, #40]	; 0x28
   12a24:	b	127e8 <__assert_fail@plt+0x13b4>
   12a28:	ldr	r2, [sp, #24]
   12a2c:	ldr	r1, [r2, #36]	; 0x24
   12a30:	ldr	r2, [r3, #36]	; 0x24
   12a34:	cmp	r1, r2
   12a38:	bne	127dc <__assert_fail@plt+0x13a8>
   12a3c:	ldr	r2, [sp, #24]
   12a40:	ldr	r1, [r2, #40]	; 0x28
   12a44:	ldr	r2, [r3, #40]	; 0x28
   12a48:	cmp	r1, r2
   12a4c:	bne	127dc <__assert_fail@plt+0x13a8>
   12a50:	ldr	r2, [sp, #24]
   12a54:	ldr	r3, [r3, #44]	; 0x2c
   12a58:	ldr	r2, [r2, #44]	; 0x2c
   12a5c:	cmp	r2, r3
   12a60:	bne	127dc <__assert_fail@plt+0x13a8>
   12a64:	ldr	r3, [sp, #24]
   12a68:	ldrb	r3, [r3, #14]
   12a6c:	cmp	r3, #58	; 0x3a
   12a70:	bne	127dc <__assert_fail@plt+0x13a8>
   12a74:	ldr	r3, [sp, #24]
   12a78:	ldrb	r3, [r3, #48]	; 0x30
   12a7c:	cmp	r3, #128	; 0x80
   12a80:	bne	127dc <__assert_fail@plt+0x13a8>
   12a84:	ldr	r2, [sp, #24]
   12a88:	ldr	r3, [r5, #60]	; 0x3c
   12a8c:	ldrh	r2, [r2, #52]	; 0x34
   12a90:	rev16	r3, r3
   12a94:	uxth	r3, r3
   12a98:	cmp	r2, r3
   12a9c:	bne	127dc <__assert_fail@plt+0x13a8>
   12aa0:	mov	r1, #28
   12aa4:	ldr	r0, [sp, #44]	; 0x2c
   12aa8:	bl	13184 <__assert_fail@plt+0x1d50>
   12aac:	ldr	r1, [sp, #36]	; 0x24
   12ab0:	mov	r2, r0
   12ab4:	mov	r6, r0
   12ab8:	ldr	r0, [pc, #-1052]	; 126a4 <__assert_fail@plt+0x1270>
   12abc:	bl	11128 <printf@plt>
   12ac0:	mov	r0, r6
   12ac4:	bl	19378 <argp_parse@@Base+0xf7c>
   12ac8:	ldr	r3, [sp, #24]
   12acc:	ldrb	r1, [r3]
   12ad0:	ldr	r3, [pc, #-1072]	; 126a8 <__assert_fail@plt+0x1274>
   12ad4:	ldr	r3, [r3, #96]	; 0x60
   12ad8:	cmp	r1, r3
   12adc:	beq	12c68 <__assert_fail@plt+0x1834>
   12ae0:	ldr	r3, [pc, #-1088]	; 126a8 <__assert_fail@plt+0x1274>
   12ae4:	ldr	r3, [r3, #104]	; 0x68
   12ae8:	cmp	r1, r3
   12aec:	beq	12c60 <__assert_fail@plt+0x182c>
   12af0:	ldr	r3, [pc, #-1104]	; 126a8 <__assert_fail@plt+0x1274>
   12af4:	ldr	r3, [r3, #112]	; 0x70
   12af8:	cmp	r1, r3
   12afc:	beq	12c58 <__assert_fail@plt+0x1824>
   12b00:	ldr	r3, [pc, #-1120]	; 126a8 <__assert_fail@plt+0x1274>
   12b04:	ldr	r3, [r3, #120]	; 0x78
   12b08:	cmp	r1, r3
   12b0c:	beq	12c24 <__assert_fail@plt+0x17f0>
   12b10:	ldr	r0, [pc, #-1132]	; 126ac <__assert_fail@plt+0x1278>
   12b14:	bl	11128 <printf@plt>
   12b18:	ldr	r3, [sp, #32]
   12b1c:	add	r3, r3, #1
   12b20:	str	r3, [sp, #32]
   12b24:	b	12a08 <__assert_fail@plt+0x15d4>
   12b28:	mov	r0, #0
   12b2c:	bl	19378 <argp_parse@@Base+0xf7c>
   12b30:	mov	r3, r6
   12b34:	ldr	r2, [pc, #-1164]	; 126b0 <__assert_fail@plt+0x127c>
   12b38:	mov	r1, #0
   12b3c:	mov	r0, #1
   12b40:	bl	11224 <error@plt>
   12b44:	b	1231c <__assert_fail@plt+0xee8>
   12b48:	bl	112e4 <__errno_location@plt>
   12b4c:	ldr	r0, [r0]
   12b50:	bl	11260 <strerror@plt>
   12b54:	b	1235c <__assert_fail@plt+0xf28>
   12b58:	ldr	r1, [sp, #24]
   12b5c:	add	ip, sp, #560	; 0x230
   12b60:	str	r2, [sp, #60]	; 0x3c
   12b64:	ldr	r0, [r1, #8]!
   12b68:	str	r3, [sp, #56]	; 0x38
   12b6c:	ldr	r1, [r1, #4]
   12b70:	stmia	ip!, {r0, r1}
   12b74:	ldr	r0, [sp, #48]	; 0x30
   12b78:	add	r1, sp, #560	; 0x230
   12b7c:	bl	12e94 <__assert_fail@plt+0x1a60>
   12b80:	vldr	s15, [sp, #112]	; 0x70
   12b84:	ldr	r2, [sp, #60]	; 0x3c
   12b88:	ldr	r3, [sp, #56]	; 0x38
   12b8c:	vcvt.f64.s32	d3, s15
   12b90:	vldr	s15, [sp, #108]	; 0x6c
   12b94:	vldr	d5, [r2]
   12b98:	vldr	d6, [r2, #24]
   12b9c:	str	r3, [sp, #48]	; 0x30
   12ba0:	vcvt.f64.s32	d4, s15
   12ba4:	vldr	d7, [r2, #16]
   12ba8:	vdiv.f64	d8, d3, d9
   12bac:	vmla.f64	d8, d4, d9
   12bb0:	vadd.f64	d7, d7, d8
   12bb4:	vcmpe.f64	d8, d5
   12bb8:	vmla.f64	d6, d8, d8
   12bbc:	vmrs	APSR_nzcv, fpscr
   12bc0:	vstr	d7, [r2, #16]
   12bc4:	vldr	d7, [r2, #8]
   12bc8:	vstrmi	d8, [r2]
   12bcc:	vstr	d6, [r2, #24]
   12bd0:	vcmpe.f64	d8, d7
   12bd4:	vmrs	APSR_nzcv, fpscr
   12bd8:	vstrgt	d8, [r2, #8]
   12bdc:	b	12930 <__assert_fail@plt+0x14fc>
   12be0:	bl	112e4 <__errno_location@plt>
   12be4:	ldr	r0, [r0]
   12be8:	bl	11260 <strerror@plt>
   12bec:	b	1297c <__assert_fail@plt+0x1548>
   12bf0:	ldr	r3, [pc, #-1348]	; 126b4 <__assert_fail@plt+0x1280>
   12bf4:	mov	r0, #8
   12bf8:	ldr	r1, [r3]
   12bfc:	bl	113a4 <putc@plt>
   12c00:	ldr	r3, [sp, #32]
   12c04:	add	r3, r3, #1
   12c08:	str	r3, [sp, #32]
   12c0c:	b	12a08 <__assert_fail@plt+0x15d4>
   12c10:	ldr	r2, [pc, #-1376]	; 126b8 <__assert_fail@plt+0x1284>
   12c14:	mov	r1, #0
   12c18:	mov	r0, #1
   12c1c:	bl	11224 <error@plt>
   12c20:	b	12270 <__assert_fail@plt+0xe3c>
   12c24:	ldr	r3, [pc, #-1392]	; 126bc <__assert_fail@plt+0x1288>
   12c28:	ldr	r3, [r3, #4]
   12c2c:	ldr	r0, [sp, #24]
   12c30:	blx	r3
   12c34:	ldr	r3, [sl]
   12c38:	tst	r3, #32
   12c3c:	beq	129fc <__assert_fail@plt+0x15c8>
   12c40:	ldr	r0, [sp, #24]
   12c44:	bl	120d0 <__assert_fail@plt+0xc9c>
   12c48:	ldr	r3, [sp, #32]
   12c4c:	add	r3, r3, #1
   12c50:	str	r3, [sp, #32]
   12c54:	b	12a08 <__assert_fail@plt+0x15d4>
   12c58:	ldr	r3, [pc, #-1440]	; 126c0 <__assert_fail@plt+0x128c>
   12c5c:	b	12c28 <__assert_fail@plt+0x17f4>
   12c60:	ldr	r3, [pc, #-1444]	; 126c4 <__assert_fail@plt+0x1290>
   12c64:	b	12c28 <__assert_fail@plt+0x17f4>
   12c68:	ldr	r3, [pc, #-1448]	; 126c8 <__assert_fail@plt+0x1294>
   12c6c:	b	12c28 <__assert_fail@plt+0x17f4>
   12c70:	ldr	r0, [pc, #-1452]	; 126cc <__assert_fail@plt+0x1298>
   12c74:	bl	11128 <printf@plt>
   12c78:	b	129ec <__assert_fail@plt+0x15b8>
   12c7c:	vmov	r2, r3, d8
   12c80:	ldr	r0, [pc, #-1464]	; 126d0 <__assert_fail@plt+0x129c>
   12c84:	bl	11128 <printf@plt>
   12c88:	b	129e0 <__assert_fail@plt+0x15ac>
   12c8c:	andeq	r0, r0, r0
   12c90:	push	{r4, r5, r6, r7, lr}
   12c94:	sub	sp, sp, #20
   12c98:	mov	r5, r1
   12c9c:	mov	r6, r2
   12ca0:	add	r1, sp, #12
   12ca4:	mov	r2, #0
   12ca8:	mov	r7, r0
   12cac:	bl	112b4 <strtoul@plt>
   12cb0:	ldr	r3, [sp, #12]
   12cb4:	ldrb	r2, [r3]
   12cb8:	cmp	r2, #0
   12cbc:	mov	r4, r0
   12cc0:	bne	12d14 <__assert_fail@plt+0x18e0>
   12cc4:	cmp	r4, #0
   12cc8:	cmpeq	r6, #0
   12ccc:	beq	12cfc <__assert_fail@plt+0x18c8>
   12cd0:	cmp	r5, #0
   12cd4:	cmpne	r4, r5
   12cd8:	bls	12cf0 <__assert_fail@plt+0x18bc>
   12cdc:	mov	r3, r7
   12ce0:	ldr	r2, [pc, #72]	; 12d30 <__assert_fail@plt+0x18fc>
   12ce4:	mov	r1, #0
   12ce8:	mov	r0, #1
   12cec:	bl	11224 <error@plt>
   12cf0:	mov	r0, r4
   12cf4:	add	sp, sp, #20
   12cf8:	pop	{r4, r5, r6, r7, pc}
   12cfc:	mov	r3, r7
   12d00:	ldr	r2, [pc, #44]	; 12d34 <__assert_fail@plt+0x1900>
   12d04:	mov	r1, #0
   12d08:	mov	r0, #1
   12d0c:	bl	11224 <error@plt>
   12d10:	b	12cd0 <__assert_fail@plt+0x189c>
   12d14:	str	r3, [sp]
   12d18:	ldr	r2, [pc, #24]	; 12d38 <__assert_fail@plt+0x1904>
   12d1c:	mov	r3, r7
   12d20:	mov	r1, #0
   12d24:	mov	r0, #1
   12d28:	bl	11224 <error@plt>
   12d2c:	b	12cc4 <__assert_fail@plt+0x1890>
   12d30:	andeq	sp, r1, ip, lsl #16
   12d34:	strdeq	ip, [r1], -r4
   12d38:	andeq	sp, r1, ip, ror #15
   12d3c:	push	{r4, r5, r6, lr}
   12d40:	ldr	r6, [pc, #140]	; 12dd4 <__assert_fail@plt+0x19a0>
   12d44:	ldr	r3, [r6]
   12d48:	cmp	r3, #0
   12d4c:	popeq	{r4, r5, r6, pc}
   12d50:	mov	r4, r0
   12d54:	mov	r0, r3
   12d58:	mov	r5, r1
   12d5c:	bl	1a2a0 <argp_parse@@Base+0x1ea4>
   12d60:	ldr	r3, [pc, #112]	; 12dd8 <__assert_fail@plt+0x19a4>
   12d64:	cmp	r4, #0
   12d68:	str	r0, [r3]
   12d6c:	beq	12da8 <__assert_fail@plt+0x1974>
   12d70:	ldr	r1, [r6]
   12d74:	add	r1, r0, r1
   12d78:	cmp	r0, r1
   12d7c:	popcs	{r4, r5, r6, pc}
   12d80:	mov	r2, r0
   12d84:	mov	r3, #0
   12d88:	ldrb	r0, [r4, r3]
   12d8c:	add	r3, r3, #1
   12d90:	cmp	r3, r5
   12d94:	movcs	r3, #0
   12d98:	strb	r0, [r2], #1
   12d9c:	cmp	r2, r1
   12da0:	bne	12d88 <__assert_fail@plt+0x1954>
   12da4:	pop	{r4, r5, r6, pc}
   12da8:	ldr	r2, [r6]
   12dac:	cmp	r2, #0
   12db0:	popeq	{r4, r5, r6, pc}
   12db4:	mov	r2, r0
   12db8:	strb	r4, [r2, r4]
   12dbc:	ldr	r2, [r6]
   12dc0:	add	r4, r4, #1
   12dc4:	cmp	r2, r4
   12dc8:	popls	{r4, r5, r6, pc}
   12dcc:	ldr	r2, [r3]
   12dd0:	b	12db8 <__assert_fail@plt+0x1984>
   12dd4:	andeq	pc, r2, r0, asr #2
   12dd8:	andeq	pc, r2, r8, asr #8
   12ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12de0:	mov	r7, r1
   12de4:	ldrb	r5, [r0]
   12de8:	sub	sp, sp, #12
   12dec:	cmp	r5, #0
   12df0:	beq	12e78 <__assert_fail@plt+0x1a44>
   12df4:	ldr	r3, [r1]
   12df8:	cmp	r3, #0
   12dfc:	ble	12e84 <__assert_fail@plt+0x1a50>
   12e00:	mov	r5, #0
   12e04:	mov	r4, r0
   12e08:	ldr	fp, [pc, #124]	; 12e8c <__assert_fail@plt+0x1a58>
   12e0c:	ldr	sl, [pc, #124]	; 12e90 <__assert_fail@plt+0x1a5c>
   12e10:	sub	r6, r2, #1
   12e14:	mov	r9, r5
   12e18:	mov	r8, #1
   12e1c:	b	12e2c <__assert_fail@plt+0x19f8>
   12e20:	ldr	r3, [r7]
   12e24:	cmp	r3, r5
   12e28:	ble	12e78 <__assert_fail@plt+0x1a44>
   12e2c:	add	r3, sp, #4
   12e30:	mov	r2, sp
   12e34:	mov	r1, fp
   12e38:	mov	r0, r4
   12e3c:	bl	11398 <sscanf@plt>
   12e40:	add	r5, r5, #1
   12e44:	mov	r3, r4
   12e48:	mov	r2, sl
   12e4c:	mov	r1, r9
   12e50:	cmp	r0, #1
   12e54:	mov	r0, r8
   12e58:	beq	12e60 <__assert_fail@plt+0x1a2c>
   12e5c:	bl	11224 <error@plt>
   12e60:	ldr	r2, [sp, #4]
   12e64:	ldr	r3, [sp]
   12e68:	strb	r3, [r6, #1]!
   12e6c:	ldrb	r3, [r4, r2]!
   12e70:	cmp	r3, #0
   12e74:	bne	12e20 <__assert_fail@plt+0x19ec>
   12e78:	str	r5, [r7]
   12e7c:	add	sp, sp, #12
   12e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e84:	mov	r5, #0
   12e88:	b	12e78 <__assert_fail@plt+0x1a44>
   12e8c:	andeq	sp, r1, r8, lsr #16
   12e90:	andeq	sp, r1, r0, lsr r8
   12e94:	ldr	r2, [r1, #4]
   12e98:	ldr	r3, [r0, #4]
   12e9c:	sub	r3, r3, r2
   12ea0:	cmp	r3, #0
   12ea4:	ldr	r2, [r0]
   12ea8:	str	r3, [r0, #4]
   12eac:	addlt	r3, r3, #999424	; 0xf4000
   12eb0:	addlt	r3, r3, #576	; 0x240
   12eb4:	sublt	r2, r2, #1
   12eb8:	stmlt	r0, {r2, r3}
   12ebc:	ldr	r3, [r1]
   12ec0:	sub	r2, r2, r3
   12ec4:	str	r2, [r0]
   12ec8:	bx	lr
   12ecc:	vcmpe.f64	d0, #0.0
   12ed0:	vmrs	APSR_nzcv, fpscr
   12ed4:	vnegmi.f64	d0, d0
   12ed8:	bx	lr
   12edc:	vldr	d7, [pc, #92]	; 12f40 <__assert_fail@plt+0x1b0c>
   12ee0:	vcmpe.f64	d0, d7
   12ee4:	vmrs	APSR_nzcv, fpscr
   12ee8:	bmi	12f34 <__assert_fail@plt+0x1b00>
   12eec:	vcmpe.f64	d0, d1
   12ef0:	vmrs	APSR_nzcv, fpscr
   12ef4:	bmi	12f34 <__assert_fail@plt+0x1b00>
   12ef8:	vldr	d2, [pc, #72]	; 12f48 <__assert_fail@plt+0x1b14>
   12efc:	vmov.f64	d3, d7
   12f00:	vmul.f64	d6, d0, d2
   12f04:	vdiv.f64	d7, d0, d6
   12f08:	vadd.f64	d7, d7, d6
   12f0c:	vmul.f64	d7, d7, d2
   12f10:	vsub.f64	d4, d7, d6
   12f14:	vmov.f64	d6, d7
   12f18:	vcmpe.f64	d4, d3
   12f1c:	vneg.f64	d5, d4
   12f20:	vmrs	APSR_nzcv, fpscr
   12f24:	vmovpl.f64	d5, d4
   12f28:	vcmpe.f64	d1, d5
   12f2c:	vmrs	APSR_nzcv, fpscr
   12f30:	bmi	12f04 <__assert_fail@plt+0x1ad0>
   12f34:	vmov.f64	d0, d7
   12f38:	bx	lr
   12f3c:	nop			; (mov r0, r0)
	...
   12f4c:	svccc	0x00e00000
   12f50:	mvn	r0, r0
   12f54:	lsr	r0, r0, #31
   12f58:	bx	lr
   12f5c:	cmp	r2, #0
   12f60:	bic	r3, r2, #-2147483648	; 0x80000000
   12f64:	push	{r4, lr}
   12f68:	mov	r4, r0
   12f6c:	ldrge	r2, [pc, #12]	; 12f80 <__assert_fail@plt+0x1b4c>
   12f70:	ldrlt	r2, [pc, #12]	; 12f84 <__assert_fail@plt+0x1b50>
   12f74:	bl	112f0 <snprintf@plt>
   12f78:	mov	r0, r4
   12f7c:	pop	{r4, pc}
   12f80:	andeq	sp, r1, ip, asr #16
   12f84:	andeq	sp, r1, r0, asr r8
   12f88:	ldr	r3, [r0, #80]	; 0x50
   12f8c:	push	{r4, r5, r6, lr}
   12f90:	cmp	r3, #0
   12f94:	mov	r5, r0
   12f98:	beq	12fb0 <__assert_fail@plt+0x1b7c>
   12f9c:	ldr	r4, [r5, #76]	; 0x4c
   12fa0:	cmp	r4, #0
   12fa4:	beq	12fd8 <__assert_fail@plt+0x1ba4>
   12fa8:	mov	r0, #0
   12fac:	pop	{r4, r5, r6, pc}
   12fb0:	ldr	r0, [r0, #56]	; 0x38
   12fb4:	cmp	r1, #0
   12fb8:	addne	r0, r0, #8
   12fbc:	addeq	r0, r0, #80	; 0x50
   12fc0:	bl	1a95c <argp_parse@@Base+0x2560>
   12fc4:	cmp	r0, #0
   12fc8:	str	r0, [r5, #80]	; 0x50
   12fcc:	bne	12f9c <__assert_fail@plt+0x1b68>
   12fd0:	mvn	r0, #0
   12fd4:	pop	{r4, r5, r6, pc}
   12fd8:	ldr	r0, [r5, #72]	; 0x48
   12fdc:	bl	1a95c <argp_parse@@Base+0x2560>
   12fe0:	cmp	r0, #0
   12fe4:	str	r0, [r5, #76]	; 0x4c
   12fe8:	beq	12fd0 <__assert_fail@plt+0x1b9c>
   12fec:	ldr	r2, [r5, #72]	; 0x48
   12ff0:	mov	r1, r4
   12ff4:	bl	11314 <memset@plt>
   12ff8:	mov	r0, r4
   12ffc:	pop	{r4, r5, r6, pc}
   13000:	push	{r4, r5, r6, r7, r8, lr}
   13004:	mov	r8, r1
   13008:	ldr	r1, [r0, #80]	; 0x50
   1300c:	mov	r5, r3
   13010:	cmp	r1, #0
   13014:	mov	r4, r0
   13018:	mov	r6, r2
   1301c:	ldrb	r3, [sp, #24]
   13020:	beq	13060 <__assert_fail@plt+0x1c2c>
   13024:	ldr	r7, [r4, #76]	; 0x4c
   13028:	cmp	r7, #0
   1302c:	beq	13088 <__assert_fail@plt+0x1c54>
   13030:	ldr	r2, [r4, #56]	; 0x38
   13034:	add	r3, r6, r5
   13038:	cmp	r2, r3
   1303c:	bcc	13080 <__assert_fail@plt+0x1c4c>
   13040:	ldr	r0, [r4, #80]	; 0x50
   13044:	mov	r2, r5
   13048:	add	r0, r0, #8
   1304c:	add	r0, r0, r6
   13050:	mov	r1, r8
   13054:	bl	11188 <memcpy@plt>
   13058:	mov	r0, #0
   1305c:	pop	{r4, r5, r6, r7, r8, pc}
   13060:	ldr	r0, [r0, #56]	; 0x38
   13064:	cmp	r3, #0
   13068:	addne	r0, r0, #8
   1306c:	addeq	r0, r0, #80	; 0x50
   13070:	bl	1a95c <argp_parse@@Base+0x2560>
   13074:	cmp	r0, #0
   13078:	str	r0, [r4, #80]	; 0x50
   1307c:	bne	13024 <__assert_fail@plt+0x1bf0>
   13080:	mvn	r0, #0
   13084:	pop	{r4, r5, r6, r7, r8, pc}
   13088:	ldr	r0, [r4, #72]	; 0x48
   1308c:	bl	1a95c <argp_parse@@Base+0x2560>
   13090:	cmp	r0, #0
   13094:	str	r0, [r4, #76]	; 0x4c
   13098:	beq	13080 <__assert_fail@plt+0x1c4c>
   1309c:	mov	r1, r7
   130a0:	ldr	r2, [r4, #72]	; 0x48
   130a4:	bl	11314 <memset@plt>
   130a8:	b	13030 <__assert_fail@plt+0x1bfc>
   130ac:	str	r1, [r0, #8]
   130b0:	bx	lr
   130b4:	push	{lr}		; (str lr, [sp, #-4]!)
   130b8:	sub	sp, sp, #20
   130bc:	add	ip, sp, #16
   130c0:	ldr	r0, [r0]
   130c4:	str	r3, [sp]
   130c8:	str	r2, [ip, #-4]!
   130cc:	mov	r2, r1
   130d0:	mov	r3, ip
   130d4:	mov	r1, #1
   130d8:	bl	1111c <setsockopt@plt>
   130dc:	add	sp, sp, #20
   130e0:	pop	{pc}		; (ldr pc, [sp], #4)
   130e4:	str	r1, [r0, #20]
   130e8:	bx	lr
   130ec:	push	{r4, lr}
   130f0:	mov	r4, r0
   130f4:	ldr	r0, [r0, #80]	; 0x50
   130f8:	cmp	r0, #0
   130fc:	beq	1310c <__assert_fail@plt+0x1cd8>
   13100:	bl	19378 <argp_parse@@Base+0xf7c>
   13104:	mov	r3, #0
   13108:	str	r3, [r4, #80]	; 0x50
   1310c:	ldr	r0, [r4, #76]	; 0x4c
   13110:	cmp	r0, #0
   13114:	popeq	{r4, pc}
   13118:	bl	19378 <argp_parse@@Base+0xf7c>
   1311c:	mov	r3, #0
   13120:	str	r3, [r4, #76]	; 0x4c
   13124:	pop	{r4, pc}
   13128:	push	{r4, r5, lr}
   1312c:	sub	sp, sp, #12
   13130:	mov	r4, r1
   13134:	mov	r5, r0
   13138:	mov	r1, #0
   1313c:	mov	r0, sp
   13140:	bl	11218 <gettimeofday@plt>
   13144:	cmn	r4, #1
   13148:	moveq	r0, #0
   1314c:	beq	1317c <__assert_fail@plt+0x1d48>
   13150:	ldr	r3, [sp, #4]
   13154:	ldr	r2, [r5, #4]
   13158:	ldr	r0, [sp]
   1315c:	sub	r3, r3, r2
   13160:	cmp	r3, #0
   13164:	ldr	r3, [r5]
   13168:	sublt	r0, r0, #1
   1316c:	sub	r0, r0, r3
   13170:	cmp	r4, r0
   13174:	movgt	r0, #0
   13178:	movle	r0, #1
   1317c:	add	sp, sp, #12
   13180:	pop	{r4, r5, pc}
   13184:	push	{r4, r5, lr}
   13188:	mov	r3, #0
   1318c:	sub	sp, sp, #324	; 0x144
   13190:	mov	ip, #1
   13194:	str	r3, [sp]
   13198:	stmib	sp, {r3, ip}
   1319c:	add	r2, sp, #16
   131a0:	mov	r3, #46	; 0x2e
   131a4:	mov	r4, r0
   131a8:	mov	r5, r1
   131ac:	bl	1135c <getnameinfo@plt>
   131b0:	subs	r3, r0, #0
   131b4:	beq	131f0 <__assert_fail@plt+0x1dbc>
   131b8:	cmn	r3, #11
   131bc:	beq	13290 <__assert_fail@plt+0x1e5c>
   131c0:	bl	11170 <gai_strerror@plt>
   131c4:	mov	r2, r0
   131c8:	ldr	r3, [pc, #232]	; 132b8 <__assert_fail@plt+0x1e84>
   131cc:	ldr	r1, [pc, #232]	; 132bc <__assert_fail@plt+0x1e88>
   131d0:	ldr	r0, [r3]
   131d4:	bl	112d8 <fprintf@plt>
   131d8:	ldr	r0, [pc, #224]	; 132c0 <__assert_fail@plt+0x1e8c>
   131dc:	bl	1a8b0 <argp_parse@@Base+0x24b4>
   131e0:	mov	r4, r0
   131e4:	mov	r0, r4
   131e8:	add	sp, sp, #324	; 0x144
   131ec:	pop	{r4, r5, pc}
   131f0:	ldr	r3, [pc, #204]	; 132c4 <__assert_fail@plt+0x1e90>
   131f4:	ldr	r3, [r3]
   131f8:	ands	r3, r3, #4
   131fc:	bne	13278 <__assert_fail@plt+0x1e44>
   13200:	mov	ip, #40	; 0x28
   13204:	str	r3, [sp, #4]
   13208:	str	r3, [sp]
   1320c:	mov	r1, r5
   13210:	mov	r0, r4
   13214:	add	r2, sp, #64	; 0x40
   13218:	str	ip, [sp, #8]
   1321c:	mov	r3, #256	; 0x100
   13220:	bl	1135c <getnameinfo@plt>
   13224:	cmp	r0, #0
   13228:	add	r0, sp, #16
   1322c:	bne	132a4 <__assert_fail@plt+0x1e70>
   13230:	bl	112c0 <strlen@plt>
   13234:	mov	r5, r0
   13238:	add	r0, sp, #64	; 0x40
   1323c:	bl	112c0 <strlen@plt>
   13240:	add	r5, r5, r0
   13244:	add	r5, r5, #4
   13248:	mov	r0, r5
   1324c:	bl	1a2a0 <argp_parse@@Base+0x1ea4>
   13250:	add	r3, sp, #16
   13254:	str	r3, [sp]
   13258:	mov	r1, r5
   1325c:	add	r3, sp, #64	; 0x40
   13260:	ldr	r2, [pc, #96]	; 132c8 <__assert_fail@plt+0x1e94>
   13264:	mov	r4, r0
   13268:	bl	112f0 <snprintf@plt>
   1326c:	mov	r0, r4
   13270:	add	sp, sp, #324	; 0x144
   13274:	pop	{r4, r5, pc}
   13278:	add	r0, sp, #16
   1327c:	bl	1a8b0 <argp_parse@@Base+0x24b4>
   13280:	mov	r4, r0
   13284:	mov	r0, r4
   13288:	add	sp, sp, #324	; 0x144
   1328c:	pop	{r4, r5, pc}
   13290:	bl	112e4 <__errno_location@plt>
   13294:	ldr	r0, [r0]
   13298:	bl	11260 <strerror@plt>
   1329c:	mov	r2, r0
   132a0:	b	131c8 <__assert_fail@plt+0x1d94>
   132a4:	bl	1a8b0 <argp_parse@@Base+0x24b4>
   132a8:	mov	r4, r0
   132ac:	mov	r0, r4
   132b0:	add	sp, sp, #324	; 0x144
   132b4:	pop	{r4, r5, pc}
   132b8:	ldrdeq	pc, [r2], -r8
   132bc:	strdeq	sp, [r1], -ip
   132c0:	andeq	sp, r1, r4, lsl r3
   132c4:	andeq	pc, r2, ip, asr #8
   132c8:	andeq	sp, r1, r8, asr r8
   132cc:	ldr	r3, [pc, #196]	; 13398 <__assert_fail@plt+0x1f64>
   132d0:	push	{r4, r5, r6, r7, lr}
   132d4:	sub	sp, sp, #20
   132d8:	ldr	r3, [r3]
   132dc:	str	r0, [sp, #12]
   132e0:	tst	r3, #4
   132e4:	bne	13364 <__assert_fail@plt+0x1f30>
   132e8:	mov	r2, #2
   132ec:	mov	r1, #4
   132f0:	add	r0, sp, #12
   132f4:	bl	111d0 <gethostbyaddr@plt>
   132f8:	subs	r6, r0, #0
   132fc:	ldr	r0, [sp, #12]
   13300:	beq	13364 <__assert_fail@plt+0x1f30>
   13304:	bl	111ac <inet_ntoa@plt>
   13308:	mov	r7, r0
   1330c:	bl	112c0 <strlen@plt>
   13310:	mov	r4, r0
   13314:	ldr	r0, [r6]
   13318:	cmp	r0, #0
   1331c:	addeq	r4, r4, #1
   13320:	beq	13330 <__assert_fail@plt+0x1efc>
   13324:	bl	112c0 <strlen@plt>
   13328:	add	r4, r4, #5
   1332c:	add	r4, r4, r0
   13330:	mov	r0, r4
   13334:	bl	1a2a0 <argp_parse@@Base+0x1ea4>
   13338:	ldr	r3, [r6]
   1333c:	cmp	r3, #0
   13340:	mov	r5, r0
   13344:	beq	1337c <__assert_fail@plt+0x1f48>
   13348:	str	r7, [sp]
   1334c:	mov	r1, r4
   13350:	ldr	r2, [pc, #68]	; 1339c <__assert_fail@plt+0x1f68>
   13354:	bl	112f0 <snprintf@plt>
   13358:	mov	r0, r5
   1335c:	add	sp, sp, #20
   13360:	pop	{r4, r5, r6, r7, pc}
   13364:	bl	111ac <inet_ntoa@plt>
   13368:	bl	1a8b0 <argp_parse@@Base+0x24b4>
   1336c:	mov	r5, r0
   13370:	mov	r0, r5
   13374:	add	sp, sp, #20
   13378:	pop	{r4, r5, r6, r7, pc}
   1337c:	mov	r3, r7
   13380:	mov	r1, r4
   13384:	ldr	r2, [pc, #20]	; 133a0 <__assert_fail@plt+0x1f6c>
   13388:	bl	112f0 <snprintf@plt>
   1338c:	mov	r0, r5
   13390:	add	sp, sp, #20
   13394:	pop	{r4, r5, r6, r7, pc}
   13398:	andeq	pc, r2, ip, asr #8
   1339c:	andeq	sp, r1, r8, asr r8
   133a0:	andeq	sp, r1, ip
   133a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133a8:	mov	r7, r3
   133ac:	ldr	sl, [r0, #12]
   133b0:	sub	sp, sp, #36	; 0x24
   133b4:	ldr	r3, [r0, #16]
   133b8:	cmp	sl, #0
   133bc:	mov	fp, r0
   133c0:	mov	r6, r2
   133c4:	str	r3, [sp, #16]
   133c8:	mov	r9, r1
   133cc:	ldr	r8, [sp, #72]	; 0x48
   133d0:	ldr	r5, [sp, #76]	; 0x4c
   133d4:	beq	137a4 <__assert_fail@plt+0x2370>
   133d8:	mov	r1, #11
   133dc:	mov	r0, sl
   133e0:	bl	112cc <strchr@plt>
   133e4:	cmp	r6, #0
   133e8:	bne	136c0 <__assert_fail@plt+0x228c>
   133ec:	cmp	r0, #0
   133f0:	ldr	r3, [fp, #20]
   133f4:	beq	138fc <__assert_fail@plt+0x24c8>
   133f8:	cmp	r3, #0
   133fc:	sub	r4, r0, sl
   13400:	beq	13894 <__assert_fail@plt+0x2460>
   13404:	cmp	r4, #0
   13408:	beq	13834 <__assert_fail@plt+0x2400>
   1340c:	mov	r0, sl
   13410:	mov	r1, r4
   13414:	bl	1117c <strndup@plt>
   13418:	mov	r3, #1
   1341c:	str	r3, [sp, #24]
   13420:	mov	sl, r0
   13424:	adds	r3, r0, #0
   13428:	movne	r3, #1
   1342c:	str	r3, [sp, #20]
   13430:	mov	r1, r9
   13434:	mov	r0, fp
   13438:	bl	1921c <argp_parse@@Base+0xe20>
   1343c:	ldr	r3, [fp, #20]
   13440:	str	r0, [sp, #12]
   13444:	ldr	r0, [pc, #1272]	; 13944 <__assert_fail@plt+0x2510>
   13448:	ldr	r2, [sp, #12]
   1344c:	mov	r1, sl
   13450:	blx	r3
   13454:	subs	r3, r0, #0
   13458:	beq	137e4 <__assert_fail@plt+0x23b0>
   1345c:	cmp	r7, #0
   13460:	beq	13484 <__assert_fail@plt+0x2050>
   13464:	ldr	r2, [r5, #28]
   13468:	ldr	r1, [r5, #32]
   1346c:	cmp	r2, r1
   13470:	bcs	137ec <__assert_fail@plt+0x23b8>
   13474:	add	r0, r2, #1
   13478:	mov	r1, #10
   1347c:	str	r0, [r5, #28]
   13480:	strb	r1, [r2]
   13484:	ldr	r2, [sp, #24]
   13488:	cmp	sl, r3
   1348c:	movne	r2, #0
   13490:	andeq	r2, r2, #1
   13494:	cmp	r2, #0
   13498:	beq	13704 <__assert_fail@plt+0x22d0>
   1349c:	ldr	r0, [r5, #28]
   134a0:	ldr	r1, [r5, #32]
   134a4:	add	r2, r0, r4
   134a8:	cmp	r1, r2
   134ac:	bcs	13764 <__assert_fail@plt+0x2330>
   134b0:	mov	r1, r4
   134b4:	mov	r0, r5
   134b8:	str	r3, [sp, #24]
   134bc:	bl	1b00c <argp_parse@@Base+0x2c10>
   134c0:	ldr	r3, [sp, #24]
   134c4:	cmp	r0, #0
   134c8:	bne	13760 <__assert_fail@plt+0x232c>
   134cc:	ldr	r4, [r5, #28]
   134d0:	ldr	r1, [r5, #24]
   134d4:	ldr	r2, [r5, #16]
   134d8:	sub	r4, r4, r1
   134dc:	cmp	r4, r2
   134e0:	bhi	13788 <__assert_fail@plt+0x2354>
   134e4:	ldr	r2, [r5, #20]
   134e8:	ldr	r1, [r5, #4]
   134ec:	bic	r2, r2, r2, asr #31
   134f0:	cmp	r1, r2
   134f4:	bcs	13518 <__assert_fail@plt+0x20e4>
   134f8:	ldr	r2, [r5, #28]
   134fc:	ldr	r1, [r5, #32]
   13500:	cmp	r2, r1
   13504:	bcs	13810 <__assert_fail@plt+0x23dc>
   13508:	add	r0, r2, #1
   1350c:	mov	r1, #10
   13510:	str	r0, [r5, #28]
   13514:	strb	r1, [r2]
   13518:	cmp	sl, r3
   1351c:	moveq	r4, #1
   13520:	beq	13530 <__assert_fail@plt+0x20fc>
   13524:	mov	r0, r3
   13528:	bl	19378 <argp_parse@@Base+0xf7c>
   1352c:	mov	r4, #1
   13530:	ldr	r3, [sp, #20]
   13534:	cmp	r3, #0
   13538:	beq	13550 <__assert_fail@plt+0x211c>
   1353c:	ldr	r3, [fp, #20]
   13540:	cmp	r3, #0
   13544:	beq	13634 <__assert_fail@plt+0x2200>
   13548:	mov	r0, sl
   1354c:	bl	19378 <argp_parse@@Base+0xf7c>
   13550:	cmp	r6, #0
   13554:	beq	13634 <__assert_fail@plt+0x2200>
   13558:	ldr	r3, [fp, #20]
   1355c:	cmp	r3, #0
   13560:	beq	13634 <__assert_fail@plt+0x2200>
   13564:	ldr	r2, [sp, #12]
   13568:	mov	r1, #0
   1356c:	ldr	r0, [pc, #980]	; 13948 <__assert_fail@plt+0x2514>
   13570:	blx	r3
   13574:	subs	sl, r0, #0
   13578:	beq	13634 <__assert_fail@plt+0x2200>
   1357c:	orrs	r3, r7, r4
   13580:	beq	135a4 <__assert_fail@plt+0x2170>
   13584:	ldr	r3, [r5, #28]
   13588:	ldr	r2, [r5, #32]
   1358c:	cmp	r3, r2
   13590:	bcs	138cc <__assert_fail@plt+0x2498>
   13594:	add	r1, r3, #1
   13598:	mov	r2, #10
   1359c:	str	r1, [r5, #28]
   135a0:	strb	r2, [r3]
   135a4:	mov	r0, sl
   135a8:	bl	112c0 <strlen@plt>
   135ac:	subs	r4, r0, #0
   135b0:	beq	135dc <__assert_fail@plt+0x21a8>
   135b4:	ldr	r0, [r5, #28]
   135b8:	ldr	r2, [r5, #32]
   135bc:	add	r3, r0, r4
   135c0:	cmp	r2, r3
   135c4:	bcs	13844 <__assert_fail@plt+0x2410>
   135c8:	mov	r1, r4
   135cc:	mov	r0, r5
   135d0:	bl	1b00c <argp_parse@@Base+0x2c10>
   135d4:	cmp	r0, #0
   135d8:	bne	13840 <__assert_fail@plt+0x240c>
   135dc:	mov	r0, sl
   135e0:	bl	19378 <argp_parse@@Base+0xf7c>
   135e4:	ldr	r3, [r5, #28]
   135e8:	ldr	r1, [r5, #24]
   135ec:	ldr	r2, [r5, #16]
   135f0:	sub	r3, r3, r1
   135f4:	cmp	r3, r2
   135f8:	bhi	13860 <__assert_fail@plt+0x242c>
   135fc:	ldr	r3, [r5, #20]
   13600:	ldr	r2, [r5, #4]
   13604:	bic	r3, r3, r3, asr #31
   13608:	cmp	r2, r3
   1360c:	bcs	1379c <__assert_fail@plt+0x2368>
   13610:	ldr	r3, [r5, #28]
   13614:	ldr	r2, [r5, #32]
   13618:	cmp	r3, r2
   1361c:	bcs	138b0 <__assert_fail@plt+0x247c>
   13620:	mov	r4, #1
   13624:	add	r2, r3, r4
   13628:	str	r2, [r5, #28]
   1362c:	mov	r2, #10
   13630:	strb	r2, [r3]
   13634:	ldr	fp, [sp, #16]
   13638:	cmp	fp, #0
   1363c:	beq	136b4 <__assert_fail@plt+0x2280>
   13640:	ldr	r3, [fp]
   13644:	cmp	r3, #0
   13648:	beq	136b4 <__assert_fail@plt+0x2280>
   1364c:	eor	r2, r4, #1
   13650:	and	r2, r2, #1
   13654:	clz	sl, r8
   13658:	lsr	sl, sl, #5
   1365c:	orrs	r2, sl, r2
   13660:	bne	1367c <__assert_fail@plt+0x2248>
   13664:	b	138e8 <__assert_fail@plt+0x24b4>
   13668:	cmp	r4, #0
   1366c:	movne	r2, sl
   13670:	orreq	r2, sl, #1
   13674:	cmp	r2, #0
   13678:	beq	136b4 <__assert_fail@plt+0x2280>
   1367c:	orrs	r2, r7, r4
   13680:	mov	r0, r3
   13684:	str	r5, [sp, #4]
   13688:	movne	r3, #1
   1368c:	moveq	r3, #0
   13690:	str	r8, [sp]
   13694:	mov	r2, r6
   13698:	mov	r1, r9
   1369c:	bl	133a4 <__assert_fail@plt+0x1f70>
   136a0:	ldr	r3, [fp, #16]
   136a4:	add	fp, fp, #16
   136a8:	cmp	r3, #0
   136ac:	orr	r4, r4, r0
   136b0:	bne	13668 <__assert_fail@plt+0x2234>
   136b4:	mov	r0, r4
   136b8:	add	sp, sp, #36	; 0x24
   136bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136c0:	cmp	r0, #0
   136c4:	addne	sl, r0, #1
   136c8:	beq	1388c <__assert_fail@plt+0x2458>
   136cc:	ldr	r3, [fp, #20]
   136d0:	cmp	r3, #0
   136d4:	beq	1386c <__assert_fail@plt+0x2438>
   136d8:	mov	r3, #0
   136dc:	mov	r1, r9
   136e0:	mov	r0, fp
   136e4:	mov	r4, r3
   136e8:	str	r3, [sp, #20]
   136ec:	bl	1921c <argp_parse@@Base+0xe20>
   136f0:	str	r4, [sp, #24]
   136f4:	ldr	r3, [fp, #20]
   136f8:	str	r0, [sp, #12]
   136fc:	ldr	r0, [pc, #584]	; 1394c <__assert_fail@plt+0x2518>
   13700:	b	13448 <__assert_fail@plt+0x2014>
   13704:	mov	r0, r3
   13708:	str	r3, [sp, #24]
   1370c:	bl	112c0 <strlen@plt>
   13710:	ldr	r3, [sp, #24]
   13714:	subs	r4, r0, #0
   13718:	beq	134cc <__assert_fail@plt+0x2098>
   1371c:	ldr	r0, [r5, #28]
   13720:	ldr	r1, [r5, #32]
   13724:	add	r2, r0, r4
   13728:	cmp	r1, r2
   1372c:	bcs	13750 <__assert_fail@plt+0x231c>
   13730:	mov	r1, r4
   13734:	mov	r0, r5
   13738:	str	r3, [sp, #24]
   1373c:	bl	1b00c <argp_parse@@Base+0x2c10>
   13740:	ldr	r3, [sp, #24]
   13744:	cmp	r0, #0
   13748:	beq	134cc <__assert_fail@plt+0x2098>
   1374c:	ldr	r0, [r5, #28]
   13750:	mov	r2, r4
   13754:	mov	r1, r3
   13758:	str	r3, [sp, #24]
   1375c:	b	13770 <__assert_fail@plt+0x233c>
   13760:	ldr	r0, [r5, #28]
   13764:	mov	r2, r4
   13768:	mov	r1, sl
   1376c:	str	r3, [sp, #24]
   13770:	bl	11188 <memcpy@plt>
   13774:	ldr	r2, [r5, #28]
   13778:	ldr	r3, [sp, #24]
   1377c:	add	r4, r2, r4
   13780:	str	r4, [r5, #28]
   13784:	b	134d0 <__assert_fail@plt+0x209c>
   13788:	mov	r0, r5
   1378c:	str	r3, [sp, #24]
   13790:	bl	1aa60 <argp_parse@@Base+0x2664>
   13794:	ldr	r3, [sp, #24]
   13798:	b	134e4 <__assert_fail@plt+0x20b0>
   1379c:	mov	r4, #1
   137a0:	b	13634 <__assert_fail@plt+0x2200>
   137a4:	ldr	r4, [r0, #20]
   137a8:	cmp	r4, #0
   137ac:	beq	138f4 <__assert_fail@plt+0x24c0>
   137b0:	bl	1921c <argp_parse@@Base+0xe20>
   137b4:	cmp	r6, #0
   137b8:	ldr	r3, [fp, #20]
   137bc:	strne	sl, [sp, #20]
   137c0:	strne	sl, [sp, #24]
   137c4:	movne	r4, sl
   137c8:	streq	r6, [sp, #20]
   137cc:	streq	r6, [sp, #24]
   137d0:	moveq	r4, r6
   137d4:	str	r0, [sp, #12]
   137d8:	ldrne	r0, [pc, #364]	; 1394c <__assert_fail@plt+0x2518>
   137dc:	ldreq	r0, [pc, #352]	; 13944 <__assert_fail@plt+0x2510>
   137e0:	b	13448 <__assert_fail@plt+0x2014>
   137e4:	mov	r4, r3
   137e8:	b	13530 <__assert_fail@plt+0x20fc>
   137ec:	mov	r1, #1
   137f0:	mov	r0, r5
   137f4:	str	r3, [sp, #28]
   137f8:	bl	1b00c <argp_parse@@Base+0x2c10>
   137fc:	ldr	r3, [sp, #28]
   13800:	cmp	r0, #0
   13804:	beq	13484 <__assert_fail@plt+0x2050>
   13808:	ldr	r2, [r5, #28]
   1380c:	b	13474 <__assert_fail@plt+0x2040>
   13810:	mov	r1, #1
   13814:	mov	r0, r5
   13818:	str	r3, [sp, #24]
   1381c:	bl	1b00c <argp_parse@@Base+0x2c10>
   13820:	ldr	r3, [sp, #24]
   13824:	cmp	r0, #0
   13828:	beq	13518 <__assert_fail@plt+0x20e4>
   1382c:	ldr	r2, [r5, #28]
   13830:	b	13508 <__assert_fail@plt+0x20d4>
   13834:	str	r4, [sp, #20]
   13838:	str	r4, [sp, #24]
   1383c:	b	13430 <__assert_fail@plt+0x1ffc>
   13840:	ldr	r0, [r5, #28]
   13844:	mov	r2, r4
   13848:	mov	r1, sl
   1384c:	bl	11188 <memcpy@plt>
   13850:	ldr	r3, [r5, #28]
   13854:	add	r4, r3, r4
   13858:	str	r4, [r5, #28]
   1385c:	b	135dc <__assert_fail@plt+0x21a8>
   13860:	mov	r0, r5
   13864:	bl	1aa60 <argp_parse@@Base+0x2664>
   13868:	b	135fc <__assert_fail@plt+0x21c8>
   1386c:	cmp	sl, #0
   13870:	beq	138f0 <__assert_fail@plt+0x24bc>
   13874:	str	r3, [sp, #20]
   13878:	str	r3, [sp, #24]
   1387c:	mov	r4, r3
   13880:	str	r3, [sp, #12]
   13884:	mov	r3, sl
   13888:	b	1345c <__assert_fail@plt+0x2028>
   1388c:	mov	sl, r0
   13890:	b	136cc <__assert_fail@plt+0x2298>
   13894:	adds	r3, r4, #0
   13898:	movne	r3, #1
   1389c:	str	r3, [sp, #24]
   138a0:	str	r3, [sp, #20]
   138a4:	str	r6, [sp, #12]
   138a8:	mov	r3, sl
   138ac:	b	1345c <__assert_fail@plt+0x2028>
   138b0:	mov	r1, #1
   138b4:	mov	r0, r5
   138b8:	bl	1b00c <argp_parse@@Base+0x2c10>
   138bc:	cmp	r0, #0
   138c0:	beq	1379c <__assert_fail@plt+0x2368>
   138c4:	ldr	r3, [r5, #28]
   138c8:	b	13620 <__assert_fail@plt+0x21ec>
   138cc:	mov	r1, #1
   138d0:	mov	r0, r5
   138d4:	bl	1b00c <argp_parse@@Base+0x2c10>
   138d8:	cmp	r0, #0
   138dc:	beq	135a4 <__assert_fail@plt+0x2170>
   138e0:	ldr	r3, [r5, #28]
   138e4:	b	13594 <__assert_fail@plt+0x2160>
   138e8:	mov	r4, #1
   138ec:	b	136b4 <__assert_fail@plt+0x2280>
   138f0:	mov	r4, sl
   138f4:	str	r4, [sp, #12]
   138f8:	b	13550 <__assert_fail@plt+0x211c>
   138fc:	cmp	r3, #0
   13900:	beq	1392c <__assert_fail@plt+0x24f8>
   13904:	mov	r1, r9
   13908:	mov	r0, fp
   1390c:	bl	1921c <argp_parse@@Base+0xe20>
   13910:	mov	r4, r6
   13914:	ldr	r3, [fp, #20]
   13918:	str	r6, [sp, #20]
   1391c:	str	r6, [sp, #24]
   13920:	str	r0, [sp, #12]
   13924:	ldr	r0, [pc, #24]	; 13944 <__assert_fail@plt+0x2510>
   13928:	b	13448 <__assert_fail@plt+0x2014>
   1392c:	mov	r3, sl
   13930:	str	r6, [sp, #20]
   13934:	str	r6, [sp, #24]
   13938:	mov	r4, r6
   1393c:	str	r6, [sp, #12]
   13940:	b	1345c <__assert_fail@plt+0x2028>
   13944:	andeq	r0, r0, #1
   13948:	andeq	r0, r0, #4
   1394c:	andeq	r0, r0, #2
   13950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13954:	sub	sp, sp, #52	; 0x34
   13958:	mov	r3, r0
   1395c:	str	r0, [sp, #20]
   13960:	mov	r0, #16
   13964:	ldr	r6, [r3, #16]
   13968:	ldr	r4, [r3]
   1396c:	str	r1, [sp, #28]
   13970:	bl	1a95c <argp_parse@@Base+0x2560>
   13974:	subs	r3, r0, #0
   13978:	str	r3, [sp, #16]
   1397c:	beq	13f6c <__assert_fail@plt+0x2b38>
   13980:	mov	r2, r3
   13984:	cmp	r4, #0
   13988:	mov	r3, #0
   1398c:	str	r3, [r2, #4]
   13990:	str	r3, [r2, #12]
   13994:	beq	13ba8 <__assert_fail@plt+0x2774>
   13998:	ldr	fp, [r4, #12]
   1399c:	ands	fp, fp, #4
   139a0:	bne	13f80 <__assert_fail@plt+0x2b4c>
   139a4:	add	r5, r4, #24
   139a8:	mov	r7, r4
   139ac:	mov	r9, fp
   139b0:	mov	sl, fp
   139b4:	mov	r4, r2
   139b8:	b	139fc <__assert_fail@plt+0x25c8>
   139bc:	ldr	r3, [r5, #-12]
   139c0:	tst	r3, #4
   139c4:	addeq	r9, r9, #1
   139c8:	streq	r9, [r4, #4]
   139cc:	tst	r3, #8
   139d0:	bne	139f8 <__assert_fail@plt+0x25c4>
   139d4:	sub	r3, r8, #1
   139d8:	cmp	r3, #254	; 0xfe
   139dc:	bhi	139f8 <__assert_fail@plt+0x25c4>
   139e0:	bl	11290 <__ctype_b_loc@plt>
   139e4:	lsl	r8, r8, #1
   139e8:	ldr	r3, [r0]
   139ec:	ldrh	r3, [r3, r8]
   139f0:	tst	r3, #16384	; 0x4000
   139f4:	addne	sl, sl, #1
   139f8:	add	r5, r5, #24
   139fc:	ldr	r8, [r5, #-20]	; 0xffffffec
   13a00:	cmp	r8, #0
   13a04:	bne	139bc <__assert_fail@plt+0x2588>
   13a08:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13a0c:	cmp	r3, #0
   13a10:	bne	139bc <__assert_fail@plt+0x2588>
   13a14:	ldr	r3, [r5, #-8]
   13a18:	cmp	r3, #0
   13a1c:	bne	139bc <__assert_fail@plt+0x2588>
   13a20:	ldr	r3, [r5, #-4]
   13a24:	cmp	r3, #0
   13a28:	bne	139bc <__assert_fail@plt+0x2588>
   13a2c:	rsb	r9, r9, r9, lsl #3
   13a30:	mov	r4, r7
   13a34:	lsl	r0, r9, #2
   13a38:	mov	r7, r3
   13a3c:	bl	1a95c <argp_parse@@Base+0x2560>
   13a40:	ldr	r5, [sp, #16]
   13a44:	str	r0, [r5]
   13a48:	add	r0, sl, #1
   13a4c:	bl	1a95c <argp_parse@@Base+0x2560>
   13a50:	ldr	r8, [r5]
   13a54:	mov	r3, r5
   13a58:	cmp	r0, #0
   13a5c:	cmpne	r8, #0
   13a60:	mov	sl, r0
   13a64:	str	r0, [r3, #8]
   13a68:	beq	14028 <__assert_fail@plt+0x2bf4>
   13a6c:	ldr	r2, [sp, #16]
   13a70:	ldr	r3, [pc, #1476]	; 1403c <__assert_fail@plt+0x2c08>
   13a74:	ldr	r2, [r2, #4]
   13a78:	cmp	r2, r3
   13a7c:	bhi	14014 <__assert_fail@plt+0x2be0>
   13a80:	add	r8, r8, #28
   13a84:	mov	r9, sl
   13a88:	mov	r2, fp
   13a8c:	ldr	r3, [r4, #4]
   13a90:	mov	fp, sl
   13a94:	mov	sl, r8
   13a98:	ldr	r8, [sp, #28]
   13a9c:	str	r6, [sp, #4]
   13aa0:	cmp	r3, #0
   13aa4:	bne	13ab4 <__assert_fail@plt+0x2680>
   13aa8:	ldr	r0, [r4]
   13aac:	cmp	r0, #0
   13ab0:	beq	13fcc <__assert_fail@plt+0x2b98>
   13ab4:	str	r7, [sl, #-24]	; 0xffffffe8
   13ab8:	ldr	r5, [r4, #20]
   13abc:	str	r4, [sl, #-28]	; 0xffffffe4
   13ac0:	cmp	r5, #0
   13ac4:	str	fp, [sl, #-20]	; 0xffffffec
   13ac8:	bne	13ae0 <__assert_fail@plt+0x26ac>
   13acc:	ldr	r0, [r4]
   13ad0:	cmp	r0, #0
   13ad4:	cmpeq	r3, #0
   13ad8:	movne	r5, r2
   13adc:	beq	13ff0 <__assert_fail@plt+0x2bbc>
   13ae0:	ldr	r2, [sp, #20]
   13ae4:	mov	r3, r7
   13ae8:	str	r5, [sl, #-16]
   13aec:	str	r8, [sl, #-12]
   13af0:	str	r2, [sl, #-8]
   13af4:	add	r3, r3, #1
   13af8:	str	r3, [sl, #-24]	; 0xffffffe8
   13afc:	ldr	r3, [r4, #12]
   13b00:	tst	r3, #8
   13b04:	bne	13b70 <__assert_fail@plt+0x273c>
   13b08:	ldr	r6, [r4, #4]
   13b0c:	sub	r2, r6, #1
   13b10:	cmp	r2, #254	; 0xfe
   13b14:	bhi	13b70 <__assert_fail@plt+0x273c>
   13b18:	bl	11290 <__ctype_b_loc@plt>
   13b1c:	lsl	r2, r6, #1
   13b20:	ldr	r0, [r0]
   13b24:	ldrh	r2, [r0, r2]
   13b28:	tst	r2, #16384	; 0x4000
   13b2c:	beq	13b70 <__assert_fail@plt+0x273c>
   13b30:	cmp	r9, fp
   13b34:	uxtb	r0, r6
   13b38:	bcs	13b68 <__assert_fail@plt+0x2734>
   13b3c:	ldrb	r3, [r9]
   13b40:	cmp	r3, r0
   13b44:	movne	r3, r9
   13b48:	subne	ip, fp, #1
   13b4c:	bne	13b60 <__assert_fail@plt+0x272c>
   13b50:	b	13b70 <__assert_fail@plt+0x273c>
   13b54:	ldrb	r2, [r3, #1]!
   13b58:	cmp	r2, r0
   13b5c:	beq	13b70 <__assert_fail@plt+0x273c>
   13b60:	cmp	ip, r3
   13b64:	bne	13b54 <__assert_fail@plt+0x2720>
   13b68:	strb	r0, [fp]
   13b6c:	add	fp, fp, #1
   13b70:	add	r4, r4, #24
   13b74:	ldr	r3, [r4, #4]
   13b78:	cmp	r3, #0
   13b7c:	bne	13b8c <__assert_fail@plt+0x2758>
   13b80:	ldr	r2, [r4]
   13b84:	cmp	r2, #0
   13b88:	beq	13fa8 <__assert_fail@plt+0x2b74>
   13b8c:	ldr	r2, [r4, #12]
   13b90:	tst	r2, #4
   13b94:	beq	13fc0 <__assert_fail@plt+0x2b8c>
   13b98:	ldr	r3, [sl, #-24]	; 0xffffffe8
   13b9c:	b	13af4 <__assert_fail@plt+0x26c0>
   13ba0:	ldr	r6, [sp, #4]
   13ba4:	strb	r3, [fp]
   13ba8:	cmp	r6, #0
   13bac:	beq	13ce8 <__assert_fail@plt+0x28b4>
   13bb0:	ldr	r0, [r6]
   13bb4:	cmp	r0, #0
   13bb8:	beq	13ce8 <__assert_fail@plt+0x28b4>
   13bbc:	add	r3, r6, #16
   13bc0:	str	r3, [sp, #8]
   13bc4:	ldr	r3, [sp, #16]
   13bc8:	add	r3, r3, #12
   13bcc:	str	r3, [sp, #44]	; 0x2c
   13bd0:	ldr	r3, [sp, #8]
   13bd4:	ldr	r5, [r3, #-4]
   13bd8:	ldr	r6, [r3, #-8]
   13bdc:	cmp	r5, #0
   13be0:	bne	13bec <__assert_fail@plt+0x27b8>
   13be4:	cmp	r6, #0
   13be8:	beq	13f40 <__assert_fail@plt+0x2b0c>
   13bec:	ldr	r3, [sp, #20]
   13bf0:	mov	r0, #28
   13bf4:	ldr	r2, [r3, #16]
   13bf8:	ldr	r3, [sp, #8]
   13bfc:	sub	r3, r3, #16
   13c00:	sub	r3, r3, r2
   13c04:	asr	r4, r3, #4
   13c08:	bl	1a95c <argp_parse@@Base+0x2560>
   13c0c:	subs	r1, r0, #0
   13c10:	beq	13c54 <__assert_fail@plt+0x2820>
   13c14:	ldr	r3, [sp, #28]
   13c18:	ldr	r0, [sp, #16]
   13c1c:	cmp	r3, #0
   13c20:	ldr	r2, [sp, #20]
   13c24:	str	r3, [r1, #12]
   13c28:	ldrne	r3, [r3, #20]
   13c2c:	str	r2, [r1, #16]
   13c30:	ldr	r2, [r0, #12]
   13c34:	addne	r3, r3, #1
   13c38:	moveq	r3, #0
   13c3c:	str	r5, [r1, #8]
   13c40:	str	r6, [r1]
   13c44:	str	r4, [r1, #4]
   13c48:	str	r3, [r1, #20]
   13c4c:	str	r2, [r1, #24]
   13c50:	str	r1, [r0, #12]
   13c54:	ldr	r3, [sp, #8]
   13c58:	ldr	r0, [r3, #-16]
   13c5c:	bl	13950 <__assert_fail@plt+0x251c>
   13c60:	ldr	r3, [sp, #16]
   13c64:	ldr	r2, [r3, #12]
   13c68:	cmp	r2, #0
   13c6c:	mov	sl, r0
   13c70:	bne	13c7c <__assert_fail@plt+0x2848>
   13c74:	b	13f48 <__assert_fail@plt+0x2b14>
   13c78:	mov	r2, r3
   13c7c:	ldr	r3, [r2, #24]
   13c80:	cmp	r3, #0
   13c84:	bne	13c78 <__assert_fail@plt+0x2844>
   13c88:	add	r2, r2, #24
   13c8c:	ldr	r3, [sl, #4]
   13c90:	ldr	r1, [sl, #12]
   13c94:	cmp	r3, #0
   13c98:	str	r1, [r2]
   13c9c:	mov	r2, #0
   13ca0:	str	r2, [sl, #12]
   13ca4:	beq	13ccc <__assert_fail@plt+0x2898>
   13ca8:	ldr	ip, [sp, #16]
   13cac:	ldr	r2, [ip, #4]
   13cb0:	cmp	r2, #0
   13cb4:	bne	13cf4 <__assert_fail@plt+0x28c0>
   13cb8:	ldr	r0, [sl]
   13cbc:	ldr	r1, [sl, #8]
   13cc0:	stm	ip, {r0, r3}
   13cc4:	str	r1, [ip, #8]
   13cc8:	str	r2, [sl, #4]
   13ccc:	mov	r0, sl
   13cd0:	bl	19378 <argp_parse@@Base+0xf7c>
   13cd4:	ldr	r3, [sp, #8]
   13cd8:	ldr	r0, [r3], #16
   13cdc:	cmp	r0, #0
   13ce0:	str	r3, [sp, #8]
   13ce4:	bne	13bd4 <__assert_fail@plt+0x27a0>
   13ce8:	ldr	r0, [sp, #16]
   13cec:	add	sp, sp, #52	; 0x34
   13cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cf4:	add	r3, r3, r2
   13cf8:	str	r3, [sp, #32]
   13cfc:	rsb	r0, r3, r3, lsl #3
   13d00:	lsl	r0, r0, #2
   13d04:	bl	1a95c <argp_parse@@Base+0x2560>
   13d08:	ldr	r3, [sp, #16]
   13d0c:	mov	r4, r0
   13d10:	str	r0, [sp, #24]
   13d14:	ldr	r0, [r3, #8]
   13d18:	bl	112c0 <strlen@plt>
   13d1c:	mov	r5, r0
   13d20:	ldr	r0, [sl, #8]
   13d24:	bl	112c0 <strlen@plt>
   13d28:	add	r0, r5, r0
   13d2c:	add	r0, r0, #1
   13d30:	bl	1a95c <argp_parse@@Base+0x2560>
   13d34:	cmp	r4, #0
   13d38:	cmpne	r0, #0
   13d3c:	mov	r7, r0
   13d40:	beq	13f58 <__assert_fail@plt+0x2b24>
   13d44:	ldr	r3, [sp, #32]
   13d48:	ldr	r2, [pc, #748]	; 1403c <__assert_fail@plt+0x2c08>
   13d4c:	cmp	r3, r2
   13d50:	bhi	13f94 <__assert_fail@plt+0x2b60>
   13d54:	ldr	r6, [sp, #16]
   13d58:	ldr	r8, [sp, #24]
   13d5c:	ldm	r6, {r3, r4}
   13d60:	mov	r0, r8
   13d64:	rsb	r9, r4, r4, lsl #3
   13d68:	mov	r1, r3
   13d6c:	lsl	r9, r9, #2
   13d70:	mov	r2, r9
   13d74:	str	r3, [sp, #36]	; 0x24
   13d78:	bl	11284 <mempcpy@plt>
   13d7c:	ldr	r3, [sl, #4]
   13d80:	ldr	r1, [sl]
   13d84:	str	r3, [sp, #4]
   13d88:	rsb	r2, r3, r3, lsl #3
   13d8c:	lsl	r2, r2, #2
   13d90:	bl	11188 <memcpy@plt>
   13d94:	ldr	r6, [r6, #8]
   13d98:	mov	r2, r5
   13d9c:	mov	r1, r6
   13da0:	mov	r0, r7
   13da4:	bl	11188 <memcpy@plt>
   13da8:	cmp	r4, #0
   13dac:	beq	13f50 <__assert_fail@plt+0x2b1c>
   13db0:	mov	r2, r8
   13db4:	ldr	r3, [r2, #8]
   13db8:	subs	r4, r4, #1
   13dbc:	sub	r3, r3, r6
   13dc0:	add	r3, r7, r3
   13dc4:	str	r3, [r2, #8]
   13dc8:	add	r2, r2, #28
   13dcc:	bne	13db4 <__assert_fail@plt+0x2980>
   13dd0:	ldr	r3, [sp, #24]
   13dd4:	add	r1, r3, r9
   13dd8:	ldr	r3, [sp, #4]
   13ddc:	ldr	r9, [sl, #8]
   13de0:	cmp	r3, #0
   13de4:	add	r3, r7, r5
   13de8:	str	r3, [sp, #12]
   13dec:	beq	13ed8 <__assert_fail@plt+0x2aa4>
   13df0:	add	fp, r1, #28
   13df4:	sub	r8, r3, #1
   13df8:	str	sl, [sp, #40]	; 0x28
   13dfc:	mov	r6, r3
   13e00:	mov	sl, r9
   13e04:	mov	r9, fp
   13e08:	mov	fp, r8
   13e0c:	ldr	r5, [r9, #-24]	; 0xffffffe8
   13e10:	str	r6, [r9, #-20]	; 0xffffffec
   13e14:	cmp	r5, #0
   13e18:	ldr	r4, [r9, #-28]	; 0xffffffe4
   13e1c:	bne	13e30 <__assert_fail@plt+0x29fc>
   13e20:	b	13ebc <__assert_fail@plt+0x2a88>
   13e24:	subs	r5, r5, #1
   13e28:	add	r4, r4, #24
   13e2c:	beq	13ebc <__assert_fail@plt+0x2a88>
   13e30:	ldr	r3, [r4, #12]
   13e34:	tst	r3, #8
   13e38:	bne	13e24 <__assert_fail@plt+0x29f0>
   13e3c:	ldr	r8, [r4, #4]
   13e40:	sub	r3, r8, #1
   13e44:	cmp	r3, #254	; 0xfe
   13e48:	bhi	13e24 <__assert_fail@plt+0x29f0>
   13e4c:	bl	11290 <__ctype_b_loc@plt>
   13e50:	lsl	r3, r8, #1
   13e54:	ldr	r2, [r0]
   13e58:	ldrh	r3, [r2, r3]
   13e5c:	tst	r3, #16384	; 0x4000
   13e60:	beq	13e24 <__assert_fail@plt+0x29f0>
   13e64:	ldrb	r1, [sl]
   13e68:	cmp	r1, r8
   13e6c:	bne	13e24 <__assert_fail@plt+0x29f0>
   13e70:	ldr	r3, [sp, #12]
   13e74:	cmp	r7, r3
   13e78:	bcs	13ea4 <__assert_fail@plt+0x2a70>
   13e7c:	ldrb	r3, [r7]
   13e80:	cmp	r3, r1
   13e84:	movne	r3, r7
   13e88:	bne	13e9c <__assert_fail@plt+0x2a68>
   13e8c:	b	13eac <__assert_fail@plt+0x2a78>
   13e90:	ldrb	r2, [r3, #1]!
   13e94:	cmp	r2, r1
   13e98:	beq	13eac <__assert_fail@plt+0x2a78>
   13e9c:	cmp	fp, r3
   13ea0:	bne	13e90 <__assert_fail@plt+0x2a5c>
   13ea4:	strb	r1, [r6]
   13ea8:	add	r6, r6, #1
   13eac:	subs	r5, r5, #1
   13eb0:	add	sl, sl, #1
   13eb4:	add	r4, r4, #24
   13eb8:	bne	13e30 <__assert_fail@plt+0x29fc>
   13ebc:	ldr	r3, [sp, #4]
   13ec0:	add	r9, r9, #28
   13ec4:	subs	r3, r3, #1
   13ec8:	str	r3, [sp, #4]
   13ecc:	bne	13e0c <__assert_fail@plt+0x29d8>
   13ed0:	ldr	sl, [sp, #40]	; 0x28
   13ed4:	mov	r3, r6
   13ed8:	mov	r2, #0
   13edc:	strb	r2, [r3]
   13ee0:	ldr	r0, [sp, #36]	; 0x24
   13ee4:	bl	19378 <argp_parse@@Base+0xf7c>
   13ee8:	ldr	r4, [sp, #16]
   13eec:	ldr	r0, [r4, #8]
   13ef0:	bl	19378 <argp_parse@@Base+0xf7c>
   13ef4:	ldr	r2, [sp, #24]
   13ef8:	ldr	r0, [sl, #12]
   13efc:	str	r2, [r4]
   13f00:	ldr	r2, [sp, #32]
   13f04:	cmp	r0, #0
   13f08:	stmib	r4, {r2, r7}
   13f0c:	beq	13f20 <__assert_fail@plt+0x2aec>
   13f10:	ldr	r4, [r0, #24]
   13f14:	bl	19378 <argp_parse@@Base+0xf7c>
   13f18:	subs	r0, r4, #0
   13f1c:	bne	13f10 <__assert_fail@plt+0x2adc>
   13f20:	ldr	r3, [sl, #4]
   13f24:	cmp	r3, #0
   13f28:	beq	13ccc <__assert_fail@plt+0x2898>
   13f2c:	ldr	r0, [sl]
   13f30:	bl	19378 <argp_parse@@Base+0xf7c>
   13f34:	ldr	r0, [sl, #8]
   13f38:	bl	19378 <argp_parse@@Base+0xf7c>
   13f3c:	b	13ccc <__assert_fail@plt+0x2898>
   13f40:	ldr	r1, [sp, #28]
   13f44:	b	13c5c <__assert_fail@plt+0x2828>
   13f48:	ldr	r2, [sp, #44]	; 0x2c
   13f4c:	b	13c8c <__assert_fail@plt+0x2858>
   13f50:	ldr	r1, [sp, #24]
   13f54:	b	13dd8 <__assert_fail@plt+0x29a4>
   13f58:	ldr	r3, [pc, #224]	; 14040 <__assert_fail@plt+0x2c0c>
   13f5c:	ldr	r2, [pc, #224]	; 14044 <__assert_fail@plt+0x2c10>
   13f60:	ldr	r1, [pc, #224]	; 14048 <__assert_fail@plt+0x2c14>
   13f64:	ldr	r0, [pc, #224]	; 1404c <__assert_fail@plt+0x2c18>
   13f68:	bl	11434 <__assert_fail@plt>
   13f6c:	ldr	r3, [pc, #220]	; 14050 <__assert_fail@plt+0x2c1c>
   13f70:	ldr	r2, [pc, #220]	; 14054 <__assert_fail@plt+0x2c20>
   13f74:	ldr	r1, [pc, #204]	; 14048 <__assert_fail@plt+0x2c14>
   13f78:	ldr	r0, [pc, #216]	; 14058 <__assert_fail@plt+0x2c24>
   13f7c:	bl	11434 <__assert_fail@plt>
   13f80:	ldr	r3, [pc, #200]	; 14050 <__assert_fail@plt+0x2c1c>
   13f84:	mov	r2, #460	; 0x1cc
   13f88:	ldr	r1, [pc, #184]	; 14048 <__assert_fail@plt+0x2c14>
   13f8c:	ldr	r0, [pc, #200]	; 1405c <__assert_fail@plt+0x2c28>
   13f90:	bl	11434 <__assert_fail@plt>
   13f94:	ldr	r3, [pc, #164]	; 14040 <__assert_fail@plt+0x2c0c>
   13f98:	mov	r2, #972	; 0x3cc
   13f9c:	ldr	r1, [pc, #164]	; 14048 <__assert_fail@plt+0x2c14>
   13fa0:	ldr	r0, [pc, #184]	; 14060 <__assert_fail@plt+0x2c2c>
   13fa4:	bl	11434 <__assert_fail@plt>
   13fa8:	ldr	r2, [r4, #16]
   13fac:	cmp	r2, #0
   13fb0:	bne	13b8c <__assert_fail@plt+0x2758>
   13fb4:	ldr	r2, [r4, #20]
   13fb8:	cmp	r2, #0
   13fbc:	bne	13b8c <__assert_fail@plt+0x2758>
   13fc0:	add	sl, sl, #28
   13fc4:	mov	r2, r5
   13fc8:	b	13aa0 <__assert_fail@plt+0x266c>
   13fcc:	ldr	r0, [r4, #16]
   13fd0:	cmp	r0, #0
   13fd4:	beq	13ff8 <__assert_fail@plt+0x2bc4>
   13fd8:	str	r3, [sl, #-24]	; 0xffffffe8
   13fdc:	ldr	r5, [r4, #20]
   13fe0:	str	r4, [sl, #-28]	; 0xffffffe4
   13fe4:	cmp	r5, #0
   13fe8:	str	fp, [sl, #-20]	; 0xffffffec
   13fec:	bne	13ae0 <__assert_fail@plt+0x26ac>
   13ff0:	add	r5, r2, #1
   13ff4:	b	13ae0 <__assert_fail@plt+0x26ac>
   13ff8:	ldr	r5, [r4, #20]
   13ffc:	cmp	r5, #0
   14000:	beq	13ba0 <__assert_fail@plt+0x276c>
   14004:	str	r4, [sl, #-28]	; 0xffffffe4
   14008:	str	r3, [sl, #-24]	; 0xffffffe8
   1400c:	str	fp, [sl, #-20]	; 0xffffffec
   14010:	b	13ae0 <__assert_fail@plt+0x26ac>
   14014:	ldr	r3, [pc, #52]	; 14050 <__assert_fail@plt+0x2c1c>
   14018:	mov	r2, #476	; 0x1dc
   1401c:	ldr	r1, [pc, #36]	; 14048 <__assert_fail@plt+0x2c14>
   14020:	ldr	r0, [pc, #60]	; 14064 <__assert_fail@plt+0x2c30>
   14024:	bl	11434 <__assert_fail@plt>
   14028:	ldr	r3, [pc, #32]	; 14050 <__assert_fail@plt+0x2c1c>
   1402c:	ldr	r2, [pc, #52]	; 14068 <__assert_fail@plt+0x2c34>
   14030:	ldr	r1, [pc, #16]	; 14048 <__assert_fail@plt+0x2c14>
   14034:	ldr	r0, [pc, #48]	; 1406c <__assert_fail@plt+0x2c38>
   14038:	bl	11434 <__assert_fail@plt>
   1403c:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14040:	andeq	sp, r1, ip, ror #16
   14044:	andeq	r0, r0, sl, asr #7
   14048:	andeq	sp, r1, r8, lsl #18
   1404c:	andeq	sp, r1, r8, lsl #19
   14050:	andeq	sp, r1, r0, ror #16
   14054:	andeq	r0, r0, r2, asr #3
   14058:	andeq	sp, r1, r4, lsl r9
   1405c:	andeq	sp, r1, r8, lsl r9
   14060:	andeq	sp, r1, r4, lsr #19
   14064:	andeq	sp, r1, ip, asr #18
   14068:	ldrdeq	r0, [r0], -sl
   1406c:	andeq	sp, r1, r8, lsr #18
   14070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14074:	mov	r7, r2
   14078:	sub	sp, sp, #28
   1407c:	mov	r4, r3
   14080:	ldr	r3, [r7]
   14084:	ldr	r2, [r0, #20]
   14088:	str	r3, [sp, #20]
   1408c:	ldr	r3, [r0, #16]
   14090:	cmp	r2, #0
   14094:	str	r3, [sp, #12]
   14098:	ldr	r3, [r0, #8]
   1409c:	mov	r8, r1
   140a0:	mov	r9, r3
   140a4:	str	r3, [sp, #16]
   140a8:	ldr	r5, [sp, #64]	; 0x40
   140ac:	beq	14304 <__assert_fail@plt+0x2ed0>
   140b0:	mov	r6, r0
   140b4:	bl	1921c <argp_parse@@Base+0xe20>
   140b8:	ldr	r3, [r6, #20]
   140bc:	mov	r1, r9
   140c0:	mov	r2, r0
   140c4:	ldr	r0, [pc, #640]	; 1434c <__assert_fail@plt+0x2f18>
   140c8:	blx	r3
   140cc:	mov	r3, r0
   140d0:	str	r0, [sp, #8]
   140d4:	cmp	r3, #0
   140d8:	beq	142a4 <__assert_fail@plt+0x2e70>
   140dc:	mov	r1, #10
   140e0:	mov	r0, r3
   140e4:	bl	11158 <strchrnul@plt>
   140e8:	ldrb	sl, [r0]
   140ec:	mov	r6, r0
   140f0:	cmp	sl, #0
   140f4:	bne	1423c <__assert_fail@plt+0x2e08>
   140f8:	ldr	fp, [sp, #8]
   140fc:	ldr	r3, [r5, #28]
   14100:	ldr	r1, [r5, #24]
   14104:	ldr	r0, [r5, #16]
   14108:	sub	r1, r3, r1
   1410c:	cmp	r1, r0
   14110:	add	r9, r6, #1
   14114:	mov	r1, r3
   14118:	sub	r9, r9, fp
   1411c:	bhi	142d4 <__assert_fail@plt+0x2ea0>
   14120:	ldr	r0, [r5, #20]
   14124:	ldr	ip, [r5, #8]
   14128:	cmp	r0, #0
   1412c:	addge	r9, r9, r0
   14130:	cmp	r9, ip
   14134:	bcc	14284 <__assert_fail@plt+0x2e50>
   14138:	ldr	r1, [r5, #32]
   1413c:	cmp	r1, r3
   14140:	bls	1430c <__assert_fail@plt+0x2ed8>
   14144:	add	r0, r3, #1
   14148:	mov	r1, #10
   1414c:	str	r0, [r5, #28]
   14150:	strb	r1, [r3]
   14154:	ldr	r0, [r5, #28]
   14158:	sub	r9, r6, fp
   1415c:	ldr	r1, [r5, #32]
   14160:	add	r3, r0, r9
   14164:	cmp	r1, r3
   14168:	bcs	14184 <__assert_fail@plt+0x2d50>
   1416c:	mov	r1, r9
   14170:	mov	r0, r5
   14174:	bl	1b00c <argp_parse@@Base+0x2c10>
   14178:	cmp	r0, #0
   1417c:	beq	1419c <__assert_fail@plt+0x2d68>
   14180:	ldr	r0, [r5, #28]
   14184:	mov	r2, r9
   14188:	mov	r1, fp
   1418c:	bl	11188 <memcpy@plt>
   14190:	ldr	r3, [r5, #28]
   14194:	add	r9, r3, r9
   14198:	str	r9, [r5, #28]
   1419c:	ldr	r3, [sp, #16]
   141a0:	ldr	r2, [sp, #8]
   141a4:	cmp	r3, r2
   141a8:	beq	141b4 <__assert_fail@plt+0x2d80>
   141ac:	mov	r0, r2
   141b0:	bl	19378 <argp_parse@@Base+0xf7c>
   141b4:	ldr	r3, [sp, #12]
   141b8:	cmp	r3, #0
   141bc:	beq	14200 <__assert_fail@plt+0x2dcc>
   141c0:	ldr	r2, [r3]
   141c4:	cmp	r2, #0
   141c8:	beq	14200 <__assert_fail@plt+0x2dcc>
   141cc:	ldr	r9, [sp, #12]
   141d0:	mov	r3, r4
   141d4:	mov	r0, r2
   141d8:	str	r5, [sp]
   141dc:	mov	r2, r7
   141e0:	mov	r1, r8
   141e4:	bl	14070 <__assert_fail@plt+0x2c3c>
   141e8:	ldr	r2, [r9, #16]!
   141ec:	cmp	r2, #0
   141f0:	clz	r3, r0
   141f4:	lsr	r3, r3, #5
   141f8:	bne	141d4 <__assert_fail@plt+0x2da0>
   141fc:	mov	r4, r3
   14200:	cmp	r4, #0
   14204:	moveq	sl, #0
   14208:	andne	sl, sl, #1
   1420c:	cmp	sl, #0
   14210:	beq	142c4 <__assert_fail@plt+0x2e90>
   14214:	ldrb	r0, [r6]
   14218:	cmp	r0, #0
   1421c:	bne	142e8 <__assert_fail@plt+0x2eb4>
   14220:	ldr	r3, [sp, #20]
   14224:	ldrb	r4, [r3]
   14228:	cmp	r4, #0
   1422c:	moveq	r0, r4
   14230:	strbne	r0, [r3]
   14234:	add	sp, sp, #28
   14238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1423c:	ldr	r3, [sp, #20]
   14240:	ldrb	r9, [r3]
   14244:	cmp	r9, #0
   14248:	beq	14344 <__assert_fail@plt+0x2f10>
   1424c:	mov	sl, #0
   14250:	add	fp, r0, #1
   14254:	add	sl, sl, #1
   14258:	mov	r0, fp
   1425c:	mov	r1, #10
   14260:	bl	11158 <strchrnul@plt>
   14264:	cmp	sl, r9
   14268:	bne	14250 <__assert_fail@plt+0x2e1c>
   1426c:	mov	r6, r0
   14270:	ldr	r3, [r7]
   14274:	mov	sl, #1
   14278:	add	r3, r3, sl
   1427c:	str	r3, [r7]
   14280:	b	140fc <__assert_fail@plt+0x2cc8>
   14284:	ldr	r0, [r5, #32]
   14288:	cmp	r0, r3
   1428c:	bls	14328 <__assert_fail@plt+0x2ef4>
   14290:	add	r0, r1, #1
   14294:	mov	r3, #32
   14298:	str	r0, [r5, #28]
   1429c:	strb	r3, [r1]
   142a0:	b	14154 <__assert_fail@plt+0x2d20>
   142a4:	ldr	r3, [sp, #12]
   142a8:	cmp	r3, #0
   142ac:	beq	142c4 <__assert_fail@plt+0x2e90>
   142b0:	ldr	r2, [r3]
   142b4:	cmp	r2, #0
   142b8:	ldrne	r6, [sp, #8]
   142bc:	movne	sl, r6
   142c0:	bne	141cc <__assert_fail@plt+0x2d98>
   142c4:	clz	r0, r4
   142c8:	lsr	r0, r0, #5
   142cc:	add	sp, sp, #28
   142d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142d4:	mov	r0, r5
   142d8:	bl	1aa60 <argp_parse@@Base+0x2664>
   142dc:	ldr	r3, [r5, #28]
   142e0:	mov	r1, r3
   142e4:	b	14120 <__assert_fail@plt+0x2cec>
   142e8:	ldr	r2, [sp, #20]
   142ec:	mov	r0, #1
   142f0:	ldrb	r3, [r2]
   142f4:	add	r3, r3, r0
   142f8:	strb	r3, [r2]
   142fc:	add	sp, sp, #28
   14300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14304:	str	r3, [sp, #8]
   14308:	b	140d4 <__assert_fail@plt+0x2ca0>
   1430c:	mov	r1, #1
   14310:	mov	r0, r5
   14314:	bl	1b00c <argp_parse@@Base+0x2c10>
   14318:	cmp	r0, #0
   1431c:	beq	14154 <__assert_fail@plt+0x2d20>
   14320:	ldr	r3, [r5, #28]
   14324:	b	14144 <__assert_fail@plt+0x2d10>
   14328:	mov	r1, #1
   1432c:	mov	r0, r5
   14330:	bl	1b00c <argp_parse@@Base+0x2c10>
   14334:	cmp	r0, #0
   14338:	beq	14154 <__assert_fail@plt+0x2d20>
   1433c:	ldr	r1, [r5, #28]
   14340:	b	14290 <__assert_fail@plt+0x2e5c>
   14344:	ldr	fp, [sp, #8]
   14348:	b	14270 <__assert_fail@plt+0x2e3c>
   1434c:	andeq	r0, r0, #6
   14350:	subs	r3, r0, #0
   14354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14358:	moveq	r0, r3
   1435c:	sub	sp, sp, #52	; 0x34
   14360:	mov	r4, r1
   14364:	beq	14378 <__assert_fail@plt+0x2f44>
   14368:	mov	r1, #10
   1436c:	bl	112cc <strchr@plt>
   14370:	adds	r0, r0, #0
   14374:	movne	r0, #1
   14378:	cmp	r4, #0
   1437c:	str	r0, [sp, #20]
   14380:	beq	14690 <__assert_fail@plt+0x325c>
   14384:	ldr	r3, [r4]
   14388:	cmp	r3, #0
   1438c:	beq	14690 <__assert_fail@plt+0x325c>
   14390:	mov	r9, #0
   14394:	mov	r8, #10
   14398:	str	r4, [sp, #24]
   1439c:	ldr	r0, [r3, #8]
   143a0:	ldr	r4, [r3, #16]
   143a4:	cmp	r0, #0
   143a8:	moveq	r0, r9
   143ac:	beq	143c0 <__assert_fail@plt+0x2f8c>
   143b0:	mov	r1, r8
   143b4:	bl	112cc <strchr@plt>
   143b8:	adds	r0, r0, #0
   143bc:	movne	r0, #1
   143c0:	cmp	r4, #0
   143c4:	str	r0, [sp]
   143c8:	beq	1466c <__assert_fail@plt+0x3238>
   143cc:	ldr	r3, [r4]
   143d0:	cmp	r3, #0
   143d4:	beq	1466c <__assert_fail@plt+0x3238>
   143d8:	str	r4, [sp, #28]
   143dc:	ldr	r0, [r3, #8]
   143e0:	ldr	r4, [r3, #16]
   143e4:	cmp	r0, #0
   143e8:	moveq	r0, r9
   143ec:	beq	14400 <__assert_fail@plt+0x2fcc>
   143f0:	mov	r1, r8
   143f4:	bl	112cc <strchr@plt>
   143f8:	adds	r0, r0, #0
   143fc:	movne	r0, #1
   14400:	cmp	r4, #0
   14404:	str	r0, [sp, #4]
   14408:	beq	1464c <__assert_fail@plt+0x3218>
   1440c:	ldr	r3, [r4]
   14410:	cmp	r3, #0
   14414:	beq	1464c <__assert_fail@plt+0x3218>
   14418:	str	r4, [sp, #32]
   1441c:	ldr	r0, [r3, #8]
   14420:	ldr	r4, [r3, #16]
   14424:	cmp	r0, #0
   14428:	moveq	r0, r9
   1442c:	beq	14440 <__assert_fail@plt+0x300c>
   14430:	mov	r1, r8
   14434:	bl	112cc <strchr@plt>
   14438:	adds	r0, r0, #0
   1443c:	movne	r0, #1
   14440:	cmp	r4, #0
   14444:	str	r0, [sp, #8]
   14448:	beq	1462c <__assert_fail@plt+0x31f8>
   1444c:	ldr	r3, [r4]
   14450:	cmp	r3, #0
   14454:	beq	1462c <__assert_fail@plt+0x31f8>
   14458:	str	r4, [sp, #36]	; 0x24
   1445c:	ldr	r0, [r3, #8]
   14460:	ldr	r4, [r3, #16]
   14464:	cmp	r0, #0
   14468:	moveq	r0, r9
   1446c:	beq	14480 <__assert_fail@plt+0x304c>
   14470:	mov	r1, r8
   14474:	bl	112cc <strchr@plt>
   14478:	adds	r0, r0, #0
   1447c:	movne	r0, #1
   14480:	cmp	r4, #0
   14484:	str	r0, [sp, #12]
   14488:	beq	14608 <__assert_fail@plt+0x31d4>
   1448c:	ldr	r3, [r4]
   14490:	cmp	r3, #0
   14494:	beq	14608 <__assert_fail@plt+0x31d4>
   14498:	str	r4, [sp, #40]	; 0x28
   1449c:	ldr	r0, [r3, #8]
   144a0:	ldr	fp, [r3, #16]
   144a4:	cmp	r0, #0
   144a8:	moveq	r0, r9
   144ac:	beq	144c0 <__assert_fail@plt+0x308c>
   144b0:	mov	r1, r8
   144b4:	bl	112cc <strchr@plt>
   144b8:	adds	r0, r0, #0
   144bc:	movne	r0, #1
   144c0:	cmp	fp, #0
   144c4:	str	r0, [sp, #16]
   144c8:	beq	145e4 <__assert_fail@plt+0x31b0>
   144cc:	ldr	r3, [fp]
   144d0:	cmp	r3, #0
   144d4:	beq	145e4 <__assert_fail@plt+0x31b0>
   144d8:	str	fp, [sp, #44]	; 0x2c
   144dc:	ldr	r0, [r3, #8]
   144e0:	ldr	r7, [r3, #16]
   144e4:	cmp	r0, #0
   144e8:	moveq	r0, r9
   144ec:	beq	14500 <__assert_fail@plt+0x30cc>
   144f0:	mov	r1, r8
   144f4:	bl	112cc <strchr@plt>
   144f8:	adds	r0, r0, #0
   144fc:	movne	r0, #1
   14500:	cmp	r7, #0
   14504:	mov	r6, r0
   14508:	beq	145c4 <__assert_fail@plt+0x3190>
   1450c:	ldr	r3, [r7]
   14510:	cmp	r3, #0
   14514:	beq	145c4 <__assert_fail@plt+0x3190>
   14518:	ldr	r0, [r3, #8]
   1451c:	ldr	r5, [r3, #16]
   14520:	cmp	r0, #0
   14524:	moveq	sl, r9
   14528:	beq	1453c <__assert_fail@plt+0x3108>
   1452c:	mov	r1, r8
   14530:	bl	112cc <strchr@plt>
   14534:	adds	sl, r0, #0
   14538:	movne	sl, #1
   1453c:	cmp	r5, #0
   14540:	beq	145b4 <__assert_fail@plt+0x3180>
   14544:	ldr	r3, [r5]
   14548:	cmp	r3, #0
   1454c:	beq	145b4 <__assert_fail@plt+0x3180>
   14550:	ldr	r0, [r3, #8]
   14554:	ldr	r4, [r3, #16]
   14558:	cmp	r0, #0
   1455c:	moveq	fp, r9
   14560:	beq	14574 <__assert_fail@plt+0x3140>
   14564:	mov	r1, r8
   14568:	bl	112cc <strchr@plt>
   1456c:	adds	fp, r0, #0
   14570:	movne	fp, #1
   14574:	cmp	r4, #0
   14578:	beq	145a4 <__assert_fail@plt+0x3170>
   1457c:	ldr	r3, [r4]
   14580:	cmp	r3, #0
   14584:	beq	145a4 <__assert_fail@plt+0x3170>
   14588:	ldr	r1, [r3, #16]
   1458c:	ldr	r0, [r3, #8]
   14590:	bl	14350 <__assert_fail@plt+0x2f1c>
   14594:	ldr	r3, [r4, #16]!
   14598:	cmp	r3, #0
   1459c:	add	fp, fp, r0
   145a0:	bne	14588 <__assert_fail@plt+0x3154>
   145a4:	ldr	r3, [r5, #16]!
   145a8:	add	sl, sl, fp
   145ac:	cmp	r3, #0
   145b0:	bne	14550 <__assert_fail@plt+0x311c>
   145b4:	ldr	r3, [r7, #16]!
   145b8:	add	r6, r6, sl
   145bc:	cmp	r3, #0
   145c0:	bne	14518 <__assert_fail@plt+0x30e4>
   145c4:	ldr	r2, [sp, #44]	; 0x2c
   145c8:	ldr	r3, [r2, #16]!
   145cc:	str	r2, [sp, #44]	; 0x2c
   145d0:	ldr	r2, [sp, #16]
   145d4:	cmp	r3, #0
   145d8:	add	r2, r2, r6
   145dc:	str	r2, [sp, #16]
   145e0:	bne	144dc <__assert_fail@plt+0x30a8>
   145e4:	ldr	r2, [sp, #40]	; 0x28
   145e8:	ldr	r1, [sp, #16]
   145ec:	ldr	r3, [r2, #16]!
   145f0:	str	r2, [sp, #40]	; 0x28
   145f4:	ldr	r2, [sp, #12]
   145f8:	cmp	r3, #0
   145fc:	add	r2, r2, r1
   14600:	str	r2, [sp, #12]
   14604:	bne	1449c <__assert_fail@plt+0x3068>
   14608:	ldr	r2, [sp, #36]	; 0x24
   1460c:	ldr	r1, [sp, #12]
   14610:	ldr	r3, [r2, #16]!
   14614:	str	r2, [sp, #36]	; 0x24
   14618:	ldr	r2, [sp, #8]
   1461c:	cmp	r3, #0
   14620:	add	r2, r2, r1
   14624:	str	r2, [sp, #8]
   14628:	bne	1445c <__assert_fail@plt+0x3028>
   1462c:	ldr	r2, [sp, #32]
   14630:	ldr	r3, [r2, #16]!
   14634:	str	r2, [sp, #32]
   14638:	ldmib	sp, {r1, r2}
   1463c:	cmp	r3, #0
   14640:	add	r2, r2, r1
   14644:	str	r2, [sp, #4]
   14648:	bne	1441c <__assert_fail@plt+0x2fe8>
   1464c:	ldr	r2, [sp, #28]
   14650:	ldr	r3, [r2, #16]!
   14654:	str	r2, [sp, #28]
   14658:	ldm	sp, {r1, r2}
   1465c:	cmp	r3, #0
   14660:	add	r2, r2, r1
   14664:	str	r2, [sp]
   14668:	bne	143dc <__assert_fail@plt+0x2fa8>
   1466c:	ldr	r2, [sp, #24]
   14670:	ldr	r1, [sp]
   14674:	ldr	r3, [r2, #16]!
   14678:	str	r2, [sp, #24]
   1467c:	ldr	r2, [sp, #20]
   14680:	cmp	r3, #0
   14684:	add	r2, r2, r1
   14688:	str	r2, [sp, #20]
   1468c:	bne	1439c <__assert_fail@plt+0x2f68>
   14690:	ldr	r0, [sp, #20]
   14694:	add	sp, sp, #52	; 0x34
   14698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1469c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146a0:	add	fp, sp, #32
   146a4:	sub	sp, sp, #36	; 0x24
   146a8:	ldr	r3, [r0, #4]
   146ac:	cmp	r3, #0
   146b0:	str	r3, [fp, #-40]	; 0xffffffd8
   146b4:	bne	146c0 <__assert_fail@plt+0x328c>
   146b8:	sub	sp, fp, #32
   146bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146c0:	mov	r4, r0
   146c4:	str	r0, [fp, #-60]	; 0xffffffc4
   146c8:	ldr	r0, [r0, #8]
   146cc:	str	r1, [fp, #-44]	; 0xffffffd4
   146d0:	bl	112c0 <strlen@plt>
   146d4:	ldr	r3, [r4]
   146d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   146dc:	add	r3, r3, #28
   146e0:	mov	r9, r3
   146e4:	str	r3, [fp, #-64]	; 0xffffffc0
   146e8:	mov	sl, r9
   146ec:	str	r2, [fp, #-48]	; 0xffffffd0
   146f0:	add	r3, r0, #15
   146f4:	bic	r3, r3, #7
   146f8:	sub	sp, sp, r3
   146fc:	str	sp, [fp, #-56]	; 0xffffffc8
   14700:	str	sp, [fp, #-52]	; 0xffffffcc
   14704:	ldr	r5, [sl, #-24]	; 0xffffffe8
   14708:	ldr	r4, [sl, #-28]	; 0xffffffe4
   1470c:	cmp	r5, #0
   14710:	ldr	r9, [sl, #-20]	; 0xffffffec
   14714:	beq	1478c <__assert_fail@plt+0x3358>
   14718:	mov	r8, r4
   1471c:	b	1472c <__assert_fail@plt+0x32f8>
   14720:	subs	r5, r5, #1
   14724:	add	r4, r4, #24
   14728:	beq	1478c <__assert_fail@plt+0x3358>
   1472c:	ldr	r6, [r4, #12]
   14730:	tst	r6, #8
   14734:	bne	14720 <__assert_fail@plt+0x32ec>
   14738:	ldr	r7, [r4, #4]
   1473c:	sub	r3, r7, #1
   14740:	cmp	r3, #254	; 0xfe
   14744:	bhi	14720 <__assert_fail@plt+0x32ec>
   14748:	bl	11290 <__ctype_b_loc@plt>
   1474c:	lsl	r3, r7, #1
   14750:	ldr	r2, [r0]
   14754:	ldrh	r3, [r2, r3]
   14758:	tst	r3, #16384	; 0x4000
   1475c:	beq	14720 <__assert_fail@plt+0x32ec>
   14760:	ldrb	r3, [r9]
   14764:	cmp	r7, r3
   14768:	bne	14720 <__assert_fail@plt+0x32ec>
   1476c:	tst	r6, #4
   14770:	moveq	r8, r4
   14774:	tst	r6, #2
   14778:	beq	14900 <__assert_fail@plt+0x34cc>
   1477c:	subs	r5, r5, #1
   14780:	add	r9, r9, #1
   14784:	add	r4, r4, #24
   14788:	bne	1472c <__assert_fail@plt+0x32f8>
   1478c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14790:	add	sl, sl, #28
   14794:	subs	r3, r3, #1
   14798:	str	r3, [fp, #-48]	; 0xffffffd0
   1479c:	bne	14704 <__assert_fail@plt+0x32d0>
   147a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   147a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   147a8:	cmp	r3, r2
   147ac:	bcc	14ab4 <__assert_fail@plt+0x3680>
   147b0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   147b4:	ldr	r5, [r7, #-24]	; 0xffffffe8
   147b8:	ldr	r4, [r7, #-28]	; 0xffffffe4
   147bc:	cmp	r5, #0
   147c0:	ldr	r6, [r7, #-20]	; 0xffffffec
   147c4:	movne	r8, r4
   147c8:	bne	147dc <__assert_fail@plt+0x33a8>
   147cc:	b	1483c <__assert_fail@plt+0x3408>
   147d0:	subs	r5, r5, #1
   147d4:	add	r4, r4, #24
   147d8:	beq	1483c <__assert_fail@plt+0x3408>
   147dc:	ldr	r9, [r4, #12]
   147e0:	tst	r9, #8
   147e4:	bne	147d0 <__assert_fail@plt+0x339c>
   147e8:	ldr	sl, [r4, #4]
   147ec:	sub	r3, sl, #1
   147f0:	cmp	r3, #254	; 0xfe
   147f4:	bhi	147d0 <__assert_fail@plt+0x339c>
   147f8:	bl	11290 <__ctype_b_loc@plt>
   147fc:	lsl	r3, sl, #1
   14800:	ldr	r1, [r0]
   14804:	ldrh	r3, [r1, r3]
   14808:	tst	r3, #16384	; 0x4000
   1480c:	beq	147d0 <__assert_fail@plt+0x339c>
   14810:	ldrb	r3, [r6]
   14814:	cmp	sl, r3
   14818:	bne	147d0 <__assert_fail@plt+0x339c>
   1481c:	tst	r9, #4
   14820:	moveq	r8, r4
   14824:	tst	r9, #2
   14828:	beq	14938 <__assert_fail@plt+0x3504>
   1482c:	subs	r5, r5, #1
   14830:	add	r6, r6, #1
   14834:	add	r4, r4, #24
   14838:	bne	147dc <__assert_fail@plt+0x33a8>
   1483c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14840:	add	r7, r7, #28
   14844:	subs	r3, r3, #1
   14848:	str	r3, [fp, #-40]	; 0xffffffd8
   1484c:	bne	147b4 <__assert_fail@plt+0x3380>
   14850:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14854:	ldm	r3, {r7, r8}
   14858:	cmp	r8, #0
   1485c:	beq	146b8 <__assert_fail@plt+0x3284>
   14860:	ldr	sl, [pc, #652]	; 14af4 <__assert_fail@plt+0x36c0>
   14864:	ldr	r9, [pc, #652]	; 14af8 <__assert_fail@plt+0x36c4>
   14868:	add	r7, r7, #28
   1486c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14870:	ldr	r4, [r7, #-28]	; 0xffffffe4
   14874:	cmp	r5, #0
   14878:	movne	r6, r4
   1487c:	bne	14890 <__assert_fail@plt+0x345c>
   14880:	b	148ec <__assert_fail@plt+0x34b8>
   14884:	subs	r5, r5, #1
   14888:	add	r4, r4, #24
   1488c:	beq	148ec <__assert_fail@plt+0x34b8>
   14890:	ldr	r2, [r4]
   14894:	cmp	r2, #0
   14898:	beq	14884 <__assert_fail@plt+0x3450>
   1489c:	ldr	r1, [r4, #12]
   148a0:	tst	r1, #4
   148a4:	moveq	r6, r4
   148a8:	tst	r1, #2
   148ac:	bne	14884 <__assert_fail@plt+0x3450>
   148b0:	ldr	r3, [r4, #8]
   148b4:	ldr	r0, [r6, #12]
   148b8:	cmp	r3, #0
   148bc:	orr	r1, r1, r0
   148c0:	beq	149e4 <__assert_fail@plt+0x35b0>
   148c4:	tst	r1, #16
   148c8:	bne	14884 <__assert_fail@plt+0x3450>
   148cc:	tst	r1, #1
   148d0:	movne	r1, r9
   148d4:	moveq	r1, sl
   148d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148dc:	bl	1b10c <argp_parse@@Base+0x2d10>
   148e0:	subs	r5, r5, #1
   148e4:	add	r4, r4, #24
   148e8:	bne	14890 <__assert_fail@plt+0x345c>
   148ec:	subs	r8, r8, #1
   148f0:	add	r7, r7, #28
   148f4:	bne	1486c <__assert_fail@plt+0x3438>
   148f8:	sub	sp, fp, #32
   148fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14900:	ldr	r3, [r4, #8]
   14904:	cmp	r3, #0
   14908:	bne	1477c <__assert_fail@plt+0x3348>
   1490c:	ldr	r3, [r8, #8]
   14910:	cmp	r3, #0
   14914:	bne	1477c <__assert_fail@plt+0x3348>
   14918:	ldr	r3, [r8, #12]
   1491c:	orr	r6, r6, r3
   14920:	tst	r6, #16
   14924:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   14928:	strbeq	r7, [r3]
   1492c:	addeq	r3, r3, #1
   14930:	streq	r3, [fp, #-52]	; 0xffffffcc
   14934:	b	1477c <__assert_fail@plt+0x3348>
   14938:	ldr	r3, [r4, #8]
   1493c:	ldr	r1, [r8, #12]
   14940:	cmp	r3, #0
   14944:	orr	r9, r9, r1
   14948:	beq	14a40 <__assert_fail@plt+0x360c>
   1494c:	tst	r9, #16
   14950:	bne	1482c <__assert_fail@plt+0x33f8>
   14954:	tst	r9, #1
   14958:	bne	14a08 <__assert_fail@plt+0x35d4>
   1495c:	mov	r0, r3
   14960:	str	r3, [fp, #-48]	; 0xffffffd0
   14964:	bl	112c0 <strlen@plt>
   14968:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1496c:	ldr	r1, [r3, #28]
   14970:	ldr	r2, [r3, #24]
   14974:	sub	r2, r1, r2
   14978:	mov	r9, r0
   1497c:	ldr	r0, [r3, #16]
   14980:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14984:	cmp	r2, r0
   14988:	bhi	14a9c <__assert_fail@plt+0x3668>
   1498c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14990:	ldr	r2, [ip, #20]
   14994:	ldr	r0, [ip, #8]
   14998:	bic	r2, r2, r2, asr #31
   1499c:	add	r2, r2, #6
   149a0:	add	r2, r2, r9
   149a4:	cmp	r2, r0
   149a8:	bcc	14a1c <__assert_fail@plt+0x35e8>
   149ac:	ldr	r2, [ip, #32]
   149b0:	mov	r0, ip
   149b4:	cmp	r2, r1
   149b8:	bls	14a50 <__assert_fail@plt+0x361c>
   149bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149c0:	add	r2, r1, #1
   149c4:	str	r2, [r0, #28]
   149c8:	mov	r2, #10
   149cc:	strb	r2, [r1]
   149d0:	ldr	r2, [r4, #4]
   149d4:	ldr	r1, [pc, #288]	; 14afc <__assert_fail@plt+0x36c8>
   149d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149dc:	bl	1b10c <argp_parse@@Base+0x2d10>
   149e0:	b	1482c <__assert_fail@plt+0x33f8>
   149e4:	tst	r1, #16
   149e8:	bne	14884 <__assert_fail@plt+0x3450>
   149ec:	ldr	r3, [r6, #8]
   149f0:	cmp	r3, #0
   149f4:	bne	148cc <__assert_fail@plt+0x3498>
   149f8:	ldr	r1, [pc, #256]	; 14b00 <__assert_fail@plt+0x36cc>
   149fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a00:	bl	1b10c <argp_parse@@Base+0x2d10>
   14a04:	b	14884 <__assert_fail@plt+0x3450>
   14a08:	mov	r2, sl
   14a0c:	ldr	r1, [pc, #240]	; 14b04 <__assert_fail@plt+0x36d0>
   14a10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a14:	bl	1b10c <argp_parse@@Base+0x2d10>
   14a18:	b	1482c <__assert_fail@plt+0x33f8>
   14a1c:	ldr	r2, [ip, #32]
   14a20:	cmp	r2, r1
   14a24:	bls	14a74 <__assert_fail@plt+0x3640>
   14a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a2c:	add	r2, r1, #1
   14a30:	str	r2, [r0, #28]
   14a34:	mov	r2, #32
   14a38:	strb	r2, [r1]
   14a3c:	b	149d0 <__assert_fail@plt+0x359c>
   14a40:	ldr	r3, [r8, #8]
   14a44:	cmp	r3, #0
   14a48:	beq	1482c <__assert_fail@plt+0x33f8>
   14a4c:	b	1494c <__assert_fail@plt+0x3518>
   14a50:	mov	r1, #1
   14a54:	str	r3, [fp, #-48]	; 0xffffffd0
   14a58:	mov	r9, ip
   14a5c:	bl	1b00c <argp_parse@@Base+0x2c10>
   14a60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14a64:	cmp	r0, #0
   14a68:	beq	149d0 <__assert_fail@plt+0x359c>
   14a6c:	ldr	r1, [r9, #28]
   14a70:	b	149bc <__assert_fail@plt+0x3588>
   14a74:	ldr	r9, [fp, #-44]	; 0xffffffd4
   14a78:	mov	r1, #1
   14a7c:	mov	r0, r9
   14a80:	str	r3, [fp, #-48]	; 0xffffffd0
   14a84:	bl	1b00c <argp_parse@@Base+0x2c10>
   14a88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14a8c:	cmp	r0, #0
   14a90:	beq	149d0 <__assert_fail@plt+0x359c>
   14a94:	ldr	r1, [r9, #28]
   14a98:	b	14a28 <__assert_fail@plt+0x35f4>
   14a9c:	ldr	sl, [fp, #-44]	; 0xffffffd4
   14aa0:	mov	r0, sl
   14aa4:	bl	1aa60 <argp_parse@@Base+0x2664>
   14aa8:	ldr	r1, [sl, #28]
   14aac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ab0:	b	1498c <__assert_fail@plt+0x3558>
   14ab4:	mov	r2, r3
   14ab8:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   14abc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14ac0:	ldr	r1, [pc, #64]	; 14b08 <__assert_fail@plt+0x36d4>
   14ac4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ac8:	strb	ip, [r3]
   14acc:	bl	1b10c <argp_parse@@Base+0x2d10>
   14ad0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14ad4:	ldr	r3, [r2, #4]
   14ad8:	cmp	r3, #0
   14adc:	str	r3, [fp, #-40]	; 0xffffffd8
   14ae0:	beq	146b8 <__assert_fail@plt+0x3284>
   14ae4:	ldr	r3, [r2]
   14ae8:	add	r3, r3, #28
   14aec:	str	r3, [fp, #-64]	; 0xffffffc0
   14af0:	b	147b0 <__assert_fail@plt+0x337c>
   14af4:	andeq	sp, r1, r8, lsl #20
   14af8:	strdeq	sp, [r1], -r8
   14afc:	andeq	sp, r1, ip, ror #19
   14b00:	andeq	sp, r1, r4, lsl sl
   14b04:	andeq	sp, r1, r0, ror #19
   14b08:	ldrdeq	sp, [r1], -r8
   14b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b10:	subs	r4, r1, #0
   14b14:	sub	sp, sp, #12
   14b18:	mov	r8, r0
   14b1c:	mov	r7, r2
   14b20:	beq	14cf4 <__assert_fail@plt+0x38c0>
   14b24:	ldr	r3, [r4, #20]
   14b28:	cmp	r3, #0
   14b2c:	beq	14cf4 <__assert_fail@plt+0x38c0>
   14b30:	ldr	r1, [r2, #16]
   14b34:	mov	r0, r4
   14b38:	bl	1921c <argp_parse@@Base+0xe20>
   14b3c:	ldr	r3, [r4, #20]
   14b40:	mov	r1, r8
   14b44:	mov	r2, r0
   14b48:	ldr	r0, [pc, #628]	; 14dc4 <__assert_fail@plt+0x3990>
   14b4c:	blx	r3
   14b50:	mov	r6, r0
   14b54:	cmp	r6, #0
   14b58:	beq	14cc0 <__assert_fail@plt+0x388c>
   14b5c:	ldrb	r3, [r6]
   14b60:	cmp	r3, #0
   14b64:	beq	14cb4 <__assert_fail@plt+0x3880>
   14b68:	ldr	r3, [r7, #8]
   14b6c:	ldr	r3, [r3]
   14b70:	cmp	r3, #0
   14b74:	beq	14b9c <__assert_fail@plt+0x3768>
   14b78:	ldr	r4, [r7, #4]
   14b7c:	ldr	r3, [r4, #28]
   14b80:	ldr	r2, [r4, #32]
   14b84:	cmp	r3, r2
   14b88:	bcs	14da8 <__assert_fail@plt+0x3974>
   14b8c:	add	r1, r3, #1
   14b90:	mov	r2, #10
   14b94:	str	r1, [r4, #28]
   14b98:	strb	r2, [r3]
   14b9c:	ldr	r4, [r7, #4]
   14ba0:	ldr	sl, [pc, #544]	; 14dc8 <__assert_fail@plt+0x3994>
   14ba4:	ldr	r3, [r4, #28]
   14ba8:	ldr	r1, [r4, #24]
   14bac:	ldr	r2, [r4, #16]
   14bb0:	sub	r3, r3, r1
   14bb4:	cmp	r3, r2
   14bb8:	ldr	r5, [sl, #24]
   14bbc:	bhi	14d80 <__assert_fail@plt+0x394c>
   14bc0:	ldr	r3, [r4, #20]
   14bc4:	mov	fp, #32
   14bc8:	cmp	r3, #0
   14bcc:	subge	r5, r5, r3
   14bd0:	mov	r9, #1
   14bd4:	cmp	r5, #0
   14bd8:	sub	r5, r5, #1
   14bdc:	ble	14c08 <__assert_fail@plt+0x37d4>
   14be0:	ldr	r3, [r4, #28]
   14be4:	ldr	r2, [r4, #32]
   14be8:	cmp	r3, r2
   14bec:	bcs	14cd8 <__assert_fail@plt+0x38a4>
   14bf0:	add	r2, r3, #1
   14bf4:	cmp	r5, #0
   14bf8:	str	r2, [r4, #28]
   14bfc:	sub	r5, r5, #1
   14c00:	strb	fp, [r3]
   14c04:	bgt	14be0 <__assert_fail@plt+0x37ac>
   14c08:	ldr	r4, [r7, #4]
   14c0c:	ldr	r9, [sl, #24]
   14c10:	ldr	r5, [r4, #28]
   14c14:	ldr	r3, [r4, #24]
   14c18:	ldr	r2, [r4, #16]
   14c1c:	sub	r3, r5, r3
   14c20:	cmp	r3, r2
   14c24:	strls	r9, [r4, #4]
   14c28:	movls	fp, r4
   14c2c:	bhi	14d34 <__assert_fail@plt+0x3900>
   14c30:	str	r9, [fp, #12]
   14c34:	mov	r0, r6
   14c38:	bl	112c0 <strlen@plt>
   14c3c:	subs	r9, r0, #0
   14c40:	beq	14c78 <__assert_fail@plt+0x3844>
   14c44:	ldr	r2, [r4, #32]
   14c48:	add	r3, r5, r9
   14c4c:	cmp	r2, r3
   14c50:	bcc	14d04 <__assert_fail@plt+0x38d0>
   14c54:	mov	r2, r9
   14c58:	mov	r0, r5
   14c5c:	mov	r1, r6
   14c60:	bl	11188 <memcpy@plt>
   14c64:	ldr	r3, [r4, #28]
   14c68:	add	r9, r3, r9
   14c6c:	str	r9, [r4, #28]
   14c70:	ldr	r4, [r7, #4]
   14c74:	ldr	r5, [r4, #28]
   14c78:	ldr	r3, [r4, #24]
   14c7c:	ldr	r2, [r4, #16]
   14c80:	sub	r3, r5, r3
   14c84:	cmp	r3, r2
   14c88:	movls	r9, r4
   14c8c:	bhi	14d20 <__assert_fail@plt+0x38ec>
   14c90:	ldr	r2, [r9, #32]
   14c94:	mov	r3, #0
   14c98:	cmp	r2, r5
   14c9c:	str	r3, [r4, #4]
   14ca0:	bls	14d8c <__assert_fail@plt+0x3958>
   14ca4:	add	r2, r5, #1
   14ca8:	mov	r3, #10
   14cac:	str	r2, [r9, #28]
   14cb0:	strb	r3, [r5]
   14cb4:	ldr	r3, [r7, #8]
   14cb8:	mov	r2, #1
   14cbc:	str	r2, [r3, #4]
   14cc0:	cmp	r8, r6
   14cc4:	beq	14cfc <__assert_fail@plt+0x38c8>
   14cc8:	mov	r0, r6
   14ccc:	add	sp, sp, #12
   14cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cd4:	b	19378 <argp_parse@@Base+0xf7c>
   14cd8:	mov	r1, r9
   14cdc:	mov	r0, r4
   14ce0:	bl	1b00c <argp_parse@@Base+0x2c10>
   14ce4:	cmp	r0, #0
   14ce8:	beq	14bd4 <__assert_fail@plt+0x37a0>
   14cec:	ldr	r3, [r4, #28]
   14cf0:	b	14bf0 <__assert_fail@plt+0x37bc>
   14cf4:	mov	r6, r8
   14cf8:	b	14b54 <__assert_fail@plt+0x3720>
   14cfc:	add	sp, sp, #12
   14d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d04:	mov	r1, r9
   14d08:	mov	r0, r4
   14d0c:	bl	1b00c <argp_parse@@Base+0x2c10>
   14d10:	cmp	r0, #0
   14d14:	beq	14c70 <__assert_fail@plt+0x383c>
   14d18:	ldr	r5, [r4, #28]
   14d1c:	b	14c54 <__assert_fail@plt+0x3820>
   14d20:	mov	r0, r4
   14d24:	bl	1aa60 <argp_parse@@Base+0x2664>
   14d28:	ldr	r9, [r7, #4]
   14d2c:	ldr	r5, [r9, #28]
   14d30:	b	14c90 <__assert_fail@plt+0x385c>
   14d34:	mov	r0, r4
   14d38:	str	r9, [sp, #4]
   14d3c:	bl	1aa60 <argp_parse@@Base+0x2664>
   14d40:	ldr	fp, [r7, #4]
   14d44:	ldr	r3, [sp, #4]
   14d48:	ldr	r9, [sl, #24]
   14d4c:	ldr	r5, [fp, #28]
   14d50:	ldr	r2, [fp, #24]
   14d54:	ldr	r1, [fp, #16]
   14d58:	sub	r2, r5, r2
   14d5c:	cmp	r2, r1
   14d60:	str	r3, [r4, #4]
   14d64:	movls	r4, fp
   14d68:	bls	14c30 <__assert_fail@plt+0x37fc>
   14d6c:	mov	r0, fp
   14d70:	bl	1aa60 <argp_parse@@Base+0x2664>
   14d74:	ldr	r4, [r7, #4]
   14d78:	ldr	r5, [r4, #28]
   14d7c:	b	14c30 <__assert_fail@plt+0x37fc>
   14d80:	mov	r0, r4
   14d84:	bl	1aa60 <argp_parse@@Base+0x2664>
   14d88:	b	14bc0 <__assert_fail@plt+0x378c>
   14d8c:	mov	r1, #1
   14d90:	mov	r0, r9
   14d94:	bl	1b00c <argp_parse@@Base+0x2c10>
   14d98:	cmp	r0, #0
   14d9c:	beq	14cb4 <__assert_fail@plt+0x3880>
   14da0:	ldr	r5, [r9, #28]
   14da4:	b	14ca4 <__assert_fail@plt+0x3870>
   14da8:	mov	r1, #1
   14dac:	mov	r0, r4
   14db0:	bl	1b00c <argp_parse@@Base+0x2c10>
   14db4:	cmp	r0, #0
   14db8:	beq	14b9c <__assert_fail@plt+0x3768>
   14dbc:	ldr	r3, [r4, #28]
   14dc0:	b	14b8c <__assert_fail@plt+0x3758>
   14dc4:	andeq	r0, r0, #3
   14dc8:	muleq	r2, r4, r3
   14dcc:	ldr	r3, [r1, #12]
   14dd0:	push	{r4, r5, r6, r7, r8, lr}
   14dd4:	cmp	r3, #0
   14dd8:	mov	r6, r1
   14ddc:	mov	r5, r0
   14de0:	beq	14ec8 <__assert_fail@plt+0x3a94>
   14de4:	ldr	r3, [r1, #8]
   14de8:	ldr	r2, [r1]
   14dec:	ldr	r7, [r3]
   14df0:	ldr	r3, [r3, #4]
   14df4:	ldr	r4, [r2, #16]
   14df8:	cmp	r3, #0
   14dfc:	cmpne	r7, #0
   14e00:	beq	14e38 <__assert_fail@plt+0x3a04>
   14e04:	ldr	r2, [r2, #12]
   14e08:	ldr	r3, [r7, #12]
   14e0c:	cmp	r2, r3
   14e10:	beq	14e38 <__assert_fail@plt+0x3a04>
   14e14:	ldr	r8, [r1, #4]
   14e18:	ldr	r3, [r8, #28]
   14e1c:	ldr	r2, [r8, #32]
   14e20:	cmp	r3, r2
   14e24:	bcs	15000 <__assert_fail@plt+0x3bcc>
   14e28:	add	r1, r3, #1
   14e2c:	mov	r2, #10
   14e30:	str	r1, [r8, #28]
   14e34:	strb	r2, [r3]
   14e38:	cmp	r4, #0
   14e3c:	beq	14f7c <__assert_fail@plt+0x3b48>
   14e40:	ldr	r0, [r4]
   14e44:	cmp	r0, #0
   14e48:	beq	14f7c <__assert_fail@plt+0x3b48>
   14e4c:	ldrb	r3, [r0]
   14e50:	cmp	r3, #0
   14e54:	beq	14f7c <__assert_fail@plt+0x3b48>
   14e58:	cmp	r7, #0
   14e5c:	beq	14e8c <__assert_fail@plt+0x3a58>
   14e60:	ldr	r3, [r7, #16]
   14e64:	cmp	r4, r3
   14e68:	beq	14f7c <__assert_fail@plt+0x3b48>
   14e6c:	cmp	r3, #0
   14e70:	beq	14e8c <__assert_fail@plt+0x3a58>
   14e74:	ldr	r3, [r3, #12]
   14e78:	cmp	r3, #0
   14e7c:	cmpne	r4, r3
   14e80:	bne	14e74 <__assert_fail@plt+0x3a40>
   14e84:	cmp	r4, r3
   14e88:	beq	14f7c <__assert_fail@plt+0x3b48>
   14e8c:	ldr	r3, [r6, #4]
   14e90:	ldr	r1, [r4, #16]
   14e94:	mov	r2, r6
   14e98:	ldr	r7, [r3, #12]
   14e9c:	bl	14b0c <__assert_fail@plt+0x36d8>
   14ea0:	ldr	r8, [r6, #4]
   14ea4:	ldr	r3, [r8, #28]
   14ea8:	ldr	r1, [r8, #24]
   14eac:	ldr	r2, [r8, #16]
   14eb0:	sub	r3, r3, r1
   14eb4:	cmp	r3, r2
   14eb8:	movls	r4, r8
   14ebc:	bhi	14fe0 <__assert_fail@plt+0x3bac>
   14ec0:	str	r7, [r8, #12]
   14ec4:	b	14f90 <__assert_fail@plt+0x3b5c>
   14ec8:	ldr	r7, [r1, #4]
   14ecc:	ldr	r3, [r7, #28]
   14ed0:	ldr	r1, [r7, #32]
   14ed4:	add	r2, r3, #2
   14ed8:	cmp	r1, r2
   14edc:	bcc	14f60 <__assert_fail@plt+0x3b2c>
   14ee0:	ldr	r2, [pc, #308]	; 1501c <__assert_fail@plt+0x3be8>
   14ee4:	ldrh	r2, [r2]
   14ee8:	strh	r2, [r3]
   14eec:	ldr	r4, [r6, #4]
   14ef0:	ldr	r3, [r7, #28]
   14ef4:	add	r3, r3, #2
   14ef8:	str	r3, [r7, #28]
   14efc:	ldr	r1, [r4, #24]
   14f00:	ldr	r3, [r4, #28]
   14f04:	ldr	r2, [r4, #16]
   14f08:	sub	r3, r3, r1
   14f0c:	cmp	r3, r2
   14f10:	bhi	14fa0 <__assert_fail@plt+0x3b6c>
   14f14:	ldr	r3, [r4, #20]
   14f18:	mov	r6, #32
   14f1c:	cmp	r3, #0
   14f20:	subge	r5, r5, r3
   14f24:	mov	r7, #1
   14f28:	cmp	r5, #0
   14f2c:	sub	r5, r5, #1
   14f30:	ble	14f5c <__assert_fail@plt+0x3b28>
   14f34:	ldr	r3, [r4, #28]
   14f38:	ldr	r2, [r4, #32]
   14f3c:	cmp	r3, r2
   14f40:	bcs	14fac <__assert_fail@plt+0x3b78>
   14f44:	add	r2, r3, #1
   14f48:	cmp	r5, #0
   14f4c:	str	r2, [r4, #28]
   14f50:	sub	r5, r5, #1
   14f54:	strb	r6, [r3]
   14f58:	bgt	14f34 <__assert_fail@plt+0x3b00>
   14f5c:	pop	{r4, r5, r6, r7, r8, pc}
   14f60:	mov	r1, #2
   14f64:	mov	r0, r7
   14f68:	bl	1b00c <argp_parse@@Base+0x2c10>
   14f6c:	cmp	r0, #0
   14f70:	beq	14fc8 <__assert_fail@plt+0x3b94>
   14f74:	ldr	r3, [r7, #28]
   14f78:	b	14ee0 <__assert_fail@plt+0x3aac>
   14f7c:	ldr	r4, [r6, #4]
   14f80:	ldr	r3, [r4, #28]
   14f84:	ldr	r1, [r4, #24]
   14f88:	ldr	r2, [r4, #16]
   14f8c:	sub	r3, r3, r1
   14f90:	mov	r1, #0
   14f94:	cmp	r3, r2
   14f98:	str	r1, [r6, #12]
   14f9c:	bls	14f14 <__assert_fail@plt+0x3ae0>
   14fa0:	mov	r0, r4
   14fa4:	bl	1aa60 <argp_parse@@Base+0x2664>
   14fa8:	b	14f14 <__assert_fail@plt+0x3ae0>
   14fac:	mov	r1, r7
   14fb0:	mov	r0, r4
   14fb4:	bl	1b00c <argp_parse@@Base+0x2c10>
   14fb8:	cmp	r0, #0
   14fbc:	beq	14f28 <__assert_fail@plt+0x3af4>
   14fc0:	ldr	r3, [r4, #28]
   14fc4:	b	14f44 <__assert_fail@plt+0x3b10>
   14fc8:	ldr	r4, [r6, #4]
   14fcc:	ldr	r3, [r4, #28]
   14fd0:	ldr	r1, [r4, #24]
   14fd4:	ldr	r2, [r4, #16]
   14fd8:	sub	r3, r3, r1
   14fdc:	b	14f0c <__assert_fail@plt+0x3ad8>
   14fe0:	mov	r0, r8
   14fe4:	bl	1aa60 <argp_parse@@Base+0x2664>
   14fe8:	ldr	r4, [r6, #4]
   14fec:	ldr	r3, [r4, #28]
   14ff0:	ldr	r1, [r4, #24]
   14ff4:	ldr	r2, [r4, #16]
   14ff8:	sub	r3, r3, r1
   14ffc:	b	14ec0 <__assert_fail@plt+0x3a8c>
   15000:	mov	r1, #1
   15004:	mov	r0, r8
   15008:	bl	1b00c <argp_parse@@Base+0x2c10>
   1500c:	cmp	r0, #0
   15010:	beq	14e38 <__assert_fail@plt+0x3a04>
   15014:	ldr	r3, [r8, #28]
   15018:	b	14e28 <__assert_fail@plt+0x39f4>
   1501c:	andeq	sp, r1, r4, asr #1
   15020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15024:	sub	sp, sp, #28
   15028:	ldr	r6, [r0, #12]
   1502c:	ldr	r7, [r1, #12]
   15030:	cmp	r6, r7
   15034:	beq	152ac <__assert_fail@plt+0x3e78>
   15038:	ldr	r8, [r6, #12]
   1503c:	ldr	r9, [r7, #12]
   15040:	mov	r5, r1
   15044:	cmp	r8, r9
   15048:	mov	r4, r0
   1504c:	beq	15274 <__assert_fail@plt+0x3e40>
   15050:	ldr	sl, [r8, #12]
   15054:	ldr	fp, [r9, #12]
   15058:	cmp	sl, fp
   1505c:	beq	15314 <__assert_fail@plt+0x3ee0>
   15060:	ldr	r3, [sl, #12]
   15064:	ldr	r2, [fp, #12]
   15068:	cmp	r3, r2
   1506c:	beq	15348 <__assert_fail@plt+0x3f14>
   15070:	ldr	r1, [r3, #12]
   15074:	ldr	r0, [r2, #12]
   15078:	str	r1, [sp]
   1507c:	cmp	r1, r0
   15080:	str	r0, [sp, #4]
   15084:	beq	152e0 <__assert_fail@plt+0x3eac>
   15088:	ldr	r1, [r1, #12]
   1508c:	ldr	r0, [r0, #12]
   15090:	str	r1, [sp, #8]
   15094:	cmp	r1, r0
   15098:	str	r0, [sp, #12]
   1509c:	beq	1537c <__assert_fail@plt+0x3f48>
   150a0:	ldr	r0, [r1, #12]
   150a4:	ldr	r1, [sp, #12]
   150a8:	ldr	r1, [r1, #12]
   150ac:	cmp	r0, r1
   150b0:	beq	153bc <__assert_fail@plt+0x3f88>
   150b4:	str	r2, [sp, #20]
   150b8:	str	r3, [sp, #16]
   150bc:	bl	15020 <__assert_fail@plt+0x3bec>
   150c0:	cmp	r0, #0
   150c4:	bne	1526c <__assert_fail@plt+0x3e38>
   150c8:	ldr	r3, [sp, #12]
   150cc:	ldr	r2, [sp, #20]
   150d0:	ldr	r1, [r3, #8]
   150d4:	ldr	r3, [sp, #8]
   150d8:	mvn	ip, r1
   150dc:	ldr	r0, [r3, #8]
   150e0:	lsr	ip, ip, #31
   150e4:	ldr	r3, [sp, #16]
   150e8:	cmp	ip, r0, lsr #31
   150ec:	subne	r0, r0, r1
   150f0:	subeq	r0, r1, r0
   150f4:	cmp	r0, #0
   150f8:	bne	1526c <__assert_fail@plt+0x3e38>
   150fc:	ldr	r1, [sp, #12]
   15100:	ldr	r0, [sp, #8]
   15104:	ldr	r1, [r1, #4]
   15108:	ldr	r0, [r0, #4]
   1510c:	sub	r0, r1, r0
   15110:	cmp	r0, #0
   15114:	bne	1526c <__assert_fail@plt+0x3e38>
   15118:	ldr	r1, [sp, #4]
   1511c:	ldr	r0, [sp]
   15120:	ldr	r1, [r1, #8]
   15124:	ldr	r0, [r0, #8]
   15128:	mvn	ip, r1
   1512c:	lsr	ip, ip, #31
   15130:	cmp	ip, r0, lsr #31
   15134:	subne	r0, r0, r1
   15138:	subeq	r0, r1, r0
   1513c:	cmp	r0, #0
   15140:	bne	1526c <__assert_fail@plt+0x3e38>
   15144:	ldr	r1, [sp, #4]
   15148:	ldr	r0, [sp]
   1514c:	ldr	r1, [r1, #4]
   15150:	ldr	r0, [r0, #4]
   15154:	sub	r0, r1, r0
   15158:	cmp	r0, #0
   1515c:	bne	1526c <__assert_fail@plt+0x3e38>
   15160:	ldr	r1, [r2, #8]
   15164:	ldr	r0, [r3, #8]
   15168:	mvn	ip, r1
   1516c:	lsr	ip, ip, #31
   15170:	cmp	ip, r0, lsr #31
   15174:	subne	r0, r0, r1
   15178:	subeq	r0, r1, r0
   1517c:	cmp	r0, #0
   15180:	bne	1526c <__assert_fail@plt+0x3e38>
   15184:	ldr	r2, [r2, #4]
   15188:	ldr	r0, [r3, #4]
   1518c:	sub	r0, r2, r0
   15190:	cmp	r0, #0
   15194:	bne	1526c <__assert_fail@plt+0x3e38>
   15198:	ldr	r3, [fp, #8]
   1519c:	ldr	r0, [sl, #8]
   151a0:	mvn	r2, r3
   151a4:	lsr	r2, r2, #31
   151a8:	cmp	r2, r0, lsr #31
   151ac:	subne	r0, r0, r3
   151b0:	subeq	r0, r3, r0
   151b4:	cmp	r0, #0
   151b8:	bne	1526c <__assert_fail@plt+0x3e38>
   151bc:	ldr	r3, [fp, #4]
   151c0:	ldr	r0, [sl, #4]
   151c4:	sub	r0, r3, r0
   151c8:	cmp	r0, #0
   151cc:	bne	1526c <__assert_fail@plt+0x3e38>
   151d0:	ldr	r3, [r9, #8]
   151d4:	ldr	r0, [r8, #8]
   151d8:	mvn	r2, r3
   151dc:	lsr	r2, r2, #31
   151e0:	cmp	r2, r0, lsr #31
   151e4:	subne	r0, r0, r3
   151e8:	subeq	r0, r3, r0
   151ec:	cmp	r0, #0
   151f0:	bne	1526c <__assert_fail@plt+0x3e38>
   151f4:	ldr	r3, [r9, #4]
   151f8:	ldr	r0, [r8, #4]
   151fc:	sub	r0, r3, r0
   15200:	cmp	r0, #0
   15204:	bne	1526c <__assert_fail@plt+0x3e38>
   15208:	ldr	r3, [r7, #8]
   1520c:	ldr	r0, [r6, #8]
   15210:	mvn	r2, r3
   15214:	lsr	r2, r2, #31
   15218:	cmp	r2, r0, lsr #31
   1521c:	subne	r0, r0, r3
   15220:	subeq	r0, r3, r0
   15224:	cmp	r0, #0
   15228:	bne	1526c <__assert_fail@plt+0x3e38>
   1522c:	ldr	r3, [r7, #4]
   15230:	ldr	r0, [r6, #4]
   15234:	sub	r0, r3, r0
   15238:	cmp	r0, #0
   1523c:	bne	1526c <__assert_fail@plt+0x3e38>
   15240:	ldr	r3, [r5, #8]
   15244:	ldr	r0, [r4, #8]
   15248:	mvn	r2, r3
   1524c:	lsr	r2, r2, #31
   15250:	cmp	r2, r0, lsr #31
   15254:	subne	r0, r0, r3
   15258:	subeq	r0, r3, r0
   1525c:	cmp	r0, #0
   15260:	ldreq	r3, [r5, #4]
   15264:	ldreq	r0, [r4, #4]
   15268:	subeq	r0, r3, r0
   1526c:	add	sp, sp, #28
   15270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15274:	ldr	r3, [r7, #8]
   15278:	ldr	r0, [r6, #8]
   1527c:	mvn	r2, r3
   15280:	ldr	r1, [r7, #4]
   15284:	lsr	r2, r2, #31
   15288:	cmp	r2, r0, lsr #31
   1528c:	subne	r0, r0, r3
   15290:	subeq	r0, r3, r0
   15294:	ldr	r2, [r6, #4]
   15298:	cmp	r0, #0
   1529c:	subeq	r0, r1, r2
   152a0:	beq	15238 <__assert_fail@plt+0x3e04>
   152a4:	add	sp, sp, #28
   152a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152ac:	ldr	r2, [r1, #8]
   152b0:	ldr	r3, [r0, #8]
   152b4:	mvn	ip, r2
   152b8:	ldr	lr, [r1, #4]
   152bc:	lsr	ip, ip, #31
   152c0:	cmp	ip, r3, lsr #31
   152c4:	ldr	r1, [r0, #4]
   152c8:	subne	r0, r3, r2
   152cc:	subeq	r0, r2, r3
   152d0:	cmp	r0, #0
   152d4:	subeq	r0, lr, r1
   152d8:	add	sp, sp, #28
   152dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152e0:	ldr	r1, [r2, #8]
   152e4:	ldr	r0, [r3, #8]
   152e8:	mvn	ip, r1
   152ec:	ldr	r2, [r2, #4]
   152f0:	lsr	ip, ip, #31
   152f4:	cmp	ip, r0, lsr #31
   152f8:	subne	r0, r0, r1
   152fc:	subeq	r0, r1, r0
   15300:	ldr	r3, [r3, #4]
   15304:	cmp	r0, #0
   15308:	subeq	r0, r2, r3
   1530c:	beq	15190 <__assert_fail@plt+0x3d5c>
   15310:	b	1526c <__assert_fail@plt+0x3e38>
   15314:	ldr	r3, [r9, #8]
   15318:	ldr	r0, [r8, #8]
   1531c:	mvn	r2, r3
   15320:	ldr	r1, [r9, #4]
   15324:	lsr	r2, r2, #31
   15328:	cmp	r2, r0, lsr #31
   1532c:	subne	r0, r0, r3
   15330:	subeq	r0, r3, r0
   15334:	ldr	r2, [r8, #4]
   15338:	cmp	r0, #0
   1533c:	subeq	r0, r1, r2
   15340:	beq	15200 <__assert_fail@plt+0x3dcc>
   15344:	b	1526c <__assert_fail@plt+0x3e38>
   15348:	ldr	r3, [fp, #8]
   1534c:	ldr	r0, [sl, #8]
   15350:	mvn	r2, r3
   15354:	ldr	r1, [fp, #4]
   15358:	lsr	r2, r2, #31
   1535c:	cmp	r2, r0, lsr #31
   15360:	subne	r0, r0, r3
   15364:	subeq	r0, r3, r0
   15368:	ldr	r2, [sl, #4]
   1536c:	cmp	r0, #0
   15370:	subeq	r0, r1, r2
   15374:	beq	151c8 <__assert_fail@plt+0x3d94>
   15378:	b	1526c <__assert_fail@plt+0x3e38>
   1537c:	ldr	ip, [sp, #4]
   15380:	ldr	r1, [sp]
   15384:	ldr	lr, [ip, #8]
   15388:	ldr	r0, [r1, #8]
   1538c:	mvn	r1, lr
   15390:	ldr	ip, [ip, #4]
   15394:	lsr	r1, r1, #31
   15398:	cmp	r1, r0, lsr #31
   1539c:	ldr	r1, [sp]
   153a0:	subne	r0, r0, lr
   153a4:	subeq	r0, lr, r0
   153a8:	ldr	r1, [r1, #4]
   153ac:	cmp	r0, #0
   153b0:	subeq	r0, ip, r1
   153b4:	beq	15158 <__assert_fail@plt+0x3d24>
   153b8:	b	1526c <__assert_fail@plt+0x3e38>
   153bc:	ldr	ip, [sp, #12]
   153c0:	ldr	r1, [sp, #8]
   153c4:	ldr	lr, [ip, #8]
   153c8:	ldr	r0, [r1, #8]
   153cc:	mvn	r1, lr
   153d0:	ldr	ip, [ip, #4]
   153d4:	lsr	r1, r1, #31
   153d8:	cmp	r1, r0, lsr #31
   153dc:	ldr	r1, [sp, #8]
   153e0:	subne	r0, r0, lr
   153e4:	subeq	r0, lr, r0
   153e8:	ldr	r1, [r1, #4]
   153ec:	cmp	r0, #0
   153f0:	subeq	r0, ip, r1
   153f4:	beq	15110 <__assert_fail@plt+0x3cdc>
   153f8:	b	1526c <__assert_fail@plt+0x3e38>
   153fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15400:	mov	r6, r1
   15404:	ldr	r4, [r0, #16]
   15408:	sub	sp, sp, #28
   1540c:	cmp	r4, #0
   15410:	movne	r2, r4
   15414:	bne	15420 <__assert_fail@plt+0x3fec>
   15418:	b	15a48 <__assert_fail@plt+0x4614>
   1541c:	mov	r2, r3
   15420:	ldr	r3, [r2, #12]
   15424:	cmp	r3, #0
   15428:	bne	1541c <__assert_fail@plt+0x3fe8>
   1542c:	ldr	r5, [r6, #16]
   15430:	ldr	ip, [r2, #8]
   15434:	cmp	r5, #0
   15438:	movne	r2, r5
   1543c:	bne	15448 <__assert_fail@plt+0x4014>
   15440:	b	15a5c <__assert_fail@plt+0x4628>
   15444:	mov	r2, r3
   15448:	ldr	r3, [r2, #12]
   1544c:	cmp	r3, #0
   15450:	bne	15444 <__assert_fail@plt+0x4010>
   15454:	ldr	r3, [r2, #8]
   15458:	mvn	r2, r3
   1545c:	lsr	r2, r2, #31
   15460:	cmp	r2, ip, lsr #31
   15464:	subne	r1, ip, r3
   15468:	subeq	r1, r3, ip
   1546c:	cmp	r1, #0
   15470:	bne	155ec <__assert_fail@plt+0x41b8>
   15474:	adds	r1, r5, #0
   15478:	movne	r1, #1
   1547c:	cmp	r4, #0
   15480:	rsbeq	r1, r1, #0
   15484:	rsbne	r1, r1, #1
   15488:	cmp	r1, #0
   1548c:	bne	155ec <__assert_fail@plt+0x41b8>
   15490:	cmp	r4, #0
   15494:	mov	fp, r0
   15498:	beq	157e4 <__assert_fail@plt+0x43b0>
   1549c:	ldr	r1, [r4, #20]
   154a0:	ldr	r2, [r5, #20]
   154a4:	cmp	r1, r2
   154a8:	bgt	155f8 <__assert_fail@plt+0x41c4>
   154ac:	bge	15790 <__assert_fail@plt+0x435c>
   154b0:	ldr	r5, [r5, #12]
   154b4:	ldr	r3, [r5, #20]
   154b8:	cmp	r1, r3
   154bc:	blt	154b0 <__assert_fail@plt+0x407c>
   154c0:	ldr	r6, [r4, #12]
   154c4:	ldr	r7, [r5, #12]
   154c8:	cmp	r6, r7
   154cc:	beq	15ccc <__assert_fail@plt+0x4898>
   154d0:	ldr	r8, [r6, #12]
   154d4:	ldr	r9, [r7, #12]
   154d8:	cmp	r8, r9
   154dc:	beq	15c04 <__assert_fail@plt+0x47d0>
   154e0:	ldr	sl, [r8, #12]
   154e4:	ldr	fp, [r9, #12]
   154e8:	cmp	sl, fp
   154ec:	beq	15d34 <__assert_fail@plt+0x4900>
   154f0:	ldr	r0, [sl, #12]
   154f4:	ldr	r1, [fp, #12]
   154f8:	cmp	r0, r1
   154fc:	beq	15de0 <__assert_fail@plt+0x49ac>
   15500:	bl	15020 <__assert_fail@plt+0x3bec>
   15504:	subs	r1, r0, #0
   15508:	bne	155ec <__assert_fail@plt+0x41b8>
   1550c:	ldr	r1, [fp, #8]
   15510:	ldr	r3, [sl, #8]
   15514:	mvn	r2, r1
   15518:	lsr	r2, r2, #31
   1551c:	cmp	r2, r3, lsr #31
   15520:	subne	r1, r3, r1
   15524:	subeq	r1, r1, r3
   15528:	cmp	r1, #0
   1552c:	bne	155ec <__assert_fail@plt+0x41b8>
   15530:	ldr	r1, [fp, #4]
   15534:	ldr	r3, [sl, #4]
   15538:	sub	r1, r1, r3
   1553c:	cmp	r1, #0
   15540:	bne	155ec <__assert_fail@plt+0x41b8>
   15544:	ldr	r1, [r9, #8]
   15548:	ldr	r3, [r8, #8]
   1554c:	mvn	r2, r1
   15550:	lsr	r2, r2, #31
   15554:	cmp	r2, r3, lsr #31
   15558:	subne	r1, r3, r1
   1555c:	subeq	r1, r1, r3
   15560:	cmp	r1, #0
   15564:	bne	155ec <__assert_fail@plt+0x41b8>
   15568:	ldr	r1, [r9, #4]
   1556c:	ldr	r3, [r8, #4]
   15570:	sub	r1, r1, r3
   15574:	cmp	r1, #0
   15578:	bne	155ec <__assert_fail@plt+0x41b8>
   1557c:	ldr	r1, [r7, #8]
   15580:	ldr	r3, [r6, #8]
   15584:	mvn	r2, r1
   15588:	lsr	r2, r2, #31
   1558c:	cmp	r2, r3, lsr #31
   15590:	subne	r1, r3, r1
   15594:	subeq	r1, r1, r3
   15598:	cmp	r1, #0
   1559c:	bne	155ec <__assert_fail@plt+0x41b8>
   155a0:	ldr	r1, [r7, #4]
   155a4:	ldr	r3, [r6, #4]
   155a8:	sub	r1, r1, r3
   155ac:	cmp	r1, #0
   155b0:	bne	155ec <__assert_fail@plt+0x41b8>
   155b4:	ldr	r1, [r5, #8]
   155b8:	ldr	r3, [r4, #8]
   155bc:	mvn	r2, r1
   155c0:	lsr	r2, r2, #31
   155c4:	cmp	r2, r3, lsr #31
   155c8:	subne	r1, r3, r1
   155cc:	subeq	r1, r1, r3
   155d0:	cmp	r1, #0
   155d4:	bne	155ec <__assert_fail@plt+0x41b8>
   155d8:	ldr	r1, [r5, #4]
   155dc:	ldr	r3, [r4, #4]
   155e0:	sub	r1, r1, r3
   155e4:	cmp	r1, #0
   155e8:	mvneq	r1, #0
   155ec:	mov	r0, r1
   155f0:	add	sp, sp, #28
   155f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155f8:	ldr	r4, [r4, #12]
   155fc:	ldr	r3, [r4, #20]
   15600:	cmp	r2, r3
   15604:	blt	155f8 <__assert_fail@plt+0x41c4>
   15608:	ldr	r6, [r4, #12]
   1560c:	ldr	r7, [r5, #12]
   15610:	cmp	r6, r7
   15614:	beq	15c6c <__assert_fail@plt+0x4838>
   15618:	ldr	r8, [r6, #12]
   1561c:	ldr	r9, [r7, #12]
   15620:	cmp	r8, r9
   15624:	beq	15d00 <__assert_fail@plt+0x48cc>
   15628:	ldr	sl, [r8, #12]
   1562c:	ldr	fp, [r9, #12]
   15630:	cmp	sl, fp
   15634:	beq	15c38 <__assert_fail@plt+0x4804>
   15638:	ldr	r3, [sl, #12]
   1563c:	ldr	r2, [fp, #12]
   15640:	cmp	r3, r2
   15644:	beq	15d68 <__assert_fail@plt+0x4934>
   15648:	ldr	r0, [r3, #12]
   1564c:	ldr	r1, [r2, #12]
   15650:	cmp	r0, r1
   15654:	beq	15e14 <__assert_fail@plt+0x49e0>
   15658:	str	r2, [sp, #8]
   1565c:	str	r3, [sp, #4]
   15660:	bl	15020 <__assert_fail@plt+0x3bec>
   15664:	subs	r1, r0, #0
   15668:	bne	155ec <__assert_fail@plt+0x41b8>
   1566c:	ldr	r2, [sp, #8]
   15670:	ldr	r3, [sp, #4]
   15674:	ldr	r0, [r2, #8]
   15678:	ldr	r1, [r3, #8]
   1567c:	mvn	ip, r0
   15680:	lsr	ip, ip, #31
   15684:	cmp	ip, r1, lsr #31
   15688:	subne	r1, r1, r0
   1568c:	subeq	r1, r0, r1
   15690:	cmp	r1, #0
   15694:	bne	155ec <__assert_fail@plt+0x41b8>
   15698:	ldr	r1, [r2, #4]
   1569c:	ldr	r3, [r3, #4]
   156a0:	sub	r1, r1, r3
   156a4:	cmp	r1, #0
   156a8:	bne	155ec <__assert_fail@plt+0x41b8>
   156ac:	ldr	r1, [fp, #8]
   156b0:	ldr	r3, [sl, #8]
   156b4:	mvn	r2, r1
   156b8:	lsr	r2, r2, #31
   156bc:	cmp	r2, r3, lsr #31
   156c0:	subne	r1, r3, r1
   156c4:	subeq	r1, r1, r3
   156c8:	cmp	r1, #0
   156cc:	bne	155ec <__assert_fail@plt+0x41b8>
   156d0:	ldr	r1, [fp, #4]
   156d4:	ldr	r3, [sl, #4]
   156d8:	sub	r1, r1, r3
   156dc:	cmp	r1, #0
   156e0:	bne	155ec <__assert_fail@plt+0x41b8>
   156e4:	ldr	r1, [r9, #8]
   156e8:	ldr	r3, [r8, #8]
   156ec:	mvn	r2, r1
   156f0:	lsr	r2, r2, #31
   156f4:	cmp	r2, r3, lsr #31
   156f8:	subne	r1, r3, r1
   156fc:	subeq	r1, r1, r3
   15700:	cmp	r1, #0
   15704:	bne	155ec <__assert_fail@plt+0x41b8>
   15708:	ldr	r1, [r9, #4]
   1570c:	ldr	r3, [r8, #4]
   15710:	sub	r1, r1, r3
   15714:	cmp	r1, #0
   15718:	bne	155ec <__assert_fail@plt+0x41b8>
   1571c:	ldr	r1, [r7, #8]
   15720:	ldr	r3, [r6, #8]
   15724:	mvn	r2, r1
   15728:	lsr	r2, r2, #31
   1572c:	cmp	r2, r3, lsr #31
   15730:	subne	r1, r3, r1
   15734:	subeq	r1, r1, r3
   15738:	cmp	r1, #0
   1573c:	bne	155ec <__assert_fail@plt+0x41b8>
   15740:	ldr	r1, [r7, #4]
   15744:	ldr	r3, [r6, #4]
   15748:	sub	r1, r1, r3
   1574c:	cmp	r1, #0
   15750:	bne	155ec <__assert_fail@plt+0x41b8>
   15754:	ldr	r1, [r5, #8]
   15758:	ldr	r3, [r4, #8]
   1575c:	mvn	r2, r1
   15760:	lsr	r2, r2, #31
   15764:	cmp	r2, r3, lsr #31
   15768:	subne	r1, r3, r1
   1576c:	subeq	r1, r1, r3
   15770:	cmp	r1, #0
   15774:	bne	155ec <__assert_fail@plt+0x41b8>
   15778:	ldr	r1, [r5, #4]
   1577c:	ldr	r3, [r4, #4]
   15780:	sub	r1, r1, r3
   15784:	cmp	r1, #0
   15788:	moveq	r1, #1
   1578c:	b	155ec <__assert_fail@plt+0x41b8>
   15790:	ldr	r0, [r4, #12]
   15794:	ldr	r1, [r5, #12]
   15798:	cmp	r0, r1
   1579c:	beq	15d9c <__assert_fail@plt+0x4968>
   157a0:	bl	15020 <__assert_fail@plt+0x3bec>
   157a4:	subs	r1, r0, #0
   157a8:	bne	155ec <__assert_fail@plt+0x41b8>
   157ac:	ldr	r1, [r5, #8]
   157b0:	ldr	r3, [r4, #8]
   157b4:	mvn	r2, r1
   157b8:	lsr	r2, r2, #31
   157bc:	cmp	r2, r3, lsr #31
   157c0:	subne	r1, r3, r1
   157c4:	subeq	r1, r1, r3
   157c8:	cmp	r1, #0
   157cc:	bne	155ec <__assert_fail@plt+0x41b8>
   157d0:	ldr	r1, [r5, #4]
   157d4:	ldr	r3, [r4, #4]
   157d8:	sub	r1, r1, r3
   157dc:	cmp	r1, #0
   157e0:	bne	155ec <__assert_fail@plt+0x41b8>
   157e4:	ldr	r1, [r6, #12]
   157e8:	ldr	r3, [fp, #12]
   157ec:	mvn	r2, r1
   157f0:	lsr	r2, r2, #31
   157f4:	cmp	r2, r3, lsr #31
   157f8:	subne	r1, r3, r1
   157fc:	subeq	r1, r1, r3
   15800:	cmp	r1, #0
   15804:	bne	155ec <__assert_fail@plt+0x41b8>
   15808:	ldm	fp, {r8, r9}
   1580c:	cmp	r9, #0
   15810:	beq	15e48 <__assert_fail@plt+0x4a14>
   15814:	add	r3, r8, #24
   15818:	mov	r2, r9
   1581c:	ldr	r4, [r3, #-24]	; 0xffffffe8
   15820:	cmp	r4, #0
   15824:	beq	15834 <__assert_fail@plt+0x4400>
   15828:	ldr	r0, [r3, #-12]
   1582c:	tst	r0, #2
   15830:	beq	15844 <__assert_fail@plt+0x4410>
   15834:	subs	r2, r2, #1
   15838:	add	r3, r3, #24
   1583c:	bne	1581c <__assert_fail@plt+0x43e8>
   15840:	mov	r4, r2
   15844:	ldm	r6, {r7, sl}
   15848:	cmp	sl, #0
   1584c:	beq	15e50 <__assert_fail@plt+0x4a1c>
   15850:	add	r3, r7, #24
   15854:	mov	r2, sl
   15858:	ldr	r5, [r3, #-24]	; 0xffffffe8
   1585c:	cmp	r5, #0
   15860:	beq	15870 <__assert_fail@plt+0x443c>
   15864:	ldr	r0, [r3, #-12]
   15868:	tst	r0, #2
   1586c:	beq	15880 <__assert_fail@plt+0x444c>
   15870:	subs	r2, r2, #1
   15874:	add	r3, r3, #24
   15878:	bne	15858 <__assert_fail@plt+0x4424>
   1587c:	mov	r5, r2
   15880:	ldr	r3, [r8, #12]
   15884:	tst	r3, #8
   15888:	beq	158f4 <__assert_fail@plt+0x44c0>
   1588c:	cmp	r4, #0
   15890:	beq	158f4 <__assert_fail@plt+0x44c0>
   15894:	str	r1, [sp, #4]
   15898:	bl	11290 <__ctype_b_loc@plt>
   1589c:	ldr	r1, [sp, #4]
   158a0:	mov	ip, r4
   158a4:	ldr	r0, [r0]
   158a8:	ldrb	r2, [ip]
   158ac:	mov	r4, ip
   158b0:	add	ip, ip, #1
   158b4:	lsl	r3, r2, #1
   158b8:	ldrh	r3, [r0, r3]
   158bc:	tst	r3, #8192	; 0x2000
   158c0:	bne	158a8 <__assert_fail@plt+0x4474>
   158c4:	cmp	r2, #0
   158c8:	bne	158e4 <__assert_fail@plt+0x44b0>
   158cc:	b	15bf0 <__assert_fail@plt+0x47bc>
   158d0:	ldrb	r3, [r4, #1]!
   158d4:	cmp	r3, #0
   158d8:	lsl	r3, r3, #1
   158dc:	beq	158ec <__assert_fail@plt+0x44b8>
   158e0:	ldrh	r3, [r0, r3]
   158e4:	tst	r3, #8
   158e8:	beq	158d0 <__assert_fail@plt+0x449c>
   158ec:	cmp	r2, #45	; 0x2d
   158f0:	bne	15bf0 <__assert_fail@plt+0x47bc>
   158f4:	ldr	r3, [r7, #12]
   158f8:	tst	r3, #8
   158fc:	beq	15988 <__assert_fail@plt+0x4554>
   15900:	cmp	r5, #0
   15904:	movne	r2, r1
   15908:	beq	15988 <__assert_fail@plt+0x4554>
   1590c:	str	r1, [sp, #8]
   15910:	str	r2, [sp, #4]
   15914:	bl	11290 <__ctype_b_loc@plt>
   15918:	ldr	r2, [sp, #4]
   1591c:	ldr	r1, [sp, #8]
   15920:	mov	r3, r5
   15924:	ldr	ip, [r0]
   15928:	ldrb	r0, [r3]
   1592c:	mov	r5, r3
   15930:	add	r3, r3, #1
   15934:	lsl	lr, r0, #1
   15938:	ldrh	lr, [ip, lr]
   1593c:	tst	lr, #8192	; 0x2000
   15940:	bne	15928 <__assert_fail@plt+0x44f4>
   15944:	cmp	r0, #0
   15948:	beq	15974 <__assert_fail@plt+0x4540>
   1594c:	tst	lr, #8
   15950:	beq	15964 <__assert_fail@plt+0x4530>
   15954:	b	15974 <__assert_fail@plt+0x4540>
   15958:	ldrh	r3, [ip, r3]
   1595c:	tst	r3, #8
   15960:	bne	15974 <__assert_fail@plt+0x4540>
   15964:	ldrb	r3, [r5, #1]!
   15968:	cmp	r3, #0
   1596c:	lsl	r3, r3, #1
   15970:	bne	15958 <__assert_fail@plt+0x4524>
   15974:	cmp	r0, #45	; 0x2d
   15978:	subne	r2, r2, #1
   1597c:	cmp	r2, #0
   15980:	movne	r1, r2
   15984:	bne	155ec <__assert_fail@plt+0x41b8>
   15988:	ldr	r3, [fp, #8]
   1598c:	cmp	r9, #0
   15990:	mov	r2, r3
   15994:	beq	15e58 <__assert_fail@plt+0x4a24>
   15998:	str	r7, [sp, #16]
   1599c:	str	r6, [sp, #20]
   159a0:	mov	r3, #1
   159a4:	str	r4, [sp, #8]
   159a8:	str	r5, [sp, #12]
   159ac:	mov	r7, r1
   159b0:	mov	r6, r2
   159b4:	b	159d0 <__assert_fail@plt+0x459c>
   159b8:	subs	r9, r9, #1
   159bc:	moveq	ip, #0
   159c0:	andne	ip, ip, #1
   159c4:	cmp	ip, #0
   159c8:	add	r8, r8, #24
   159cc:	beq	15a64 <__assert_fail@plt+0x4630>
   159d0:	ldr	r4, [r8, #12]
   159d4:	mov	ip, r3
   159d8:	ands	fp, r4, #8
   159dc:	movne	fp, r7
   159e0:	bne	159b8 <__assert_fail@plt+0x4584>
   159e4:	ldr	r5, [r8, #4]
   159e8:	sub	r0, r5, #1
   159ec:	cmp	r0, #254	; 0xfe
   159f0:	bhi	159b8 <__assert_fail@plt+0x4584>
   159f4:	str	r3, [sp, #4]
   159f8:	bl	11290 <__ctype_b_loc@plt>
   159fc:	lsl	lr, r5, #1
   15a00:	ldr	r3, [sp, #4]
   15a04:	mov	ip, r3
   15a08:	ldr	r0, [r0]
   15a0c:	ldrh	r0, [r0, lr]
   15a10:	tst	r0, #16384	; 0x4000
   15a14:	beq	159b8 <__assert_fail@plt+0x4584>
   15a18:	ldrb	r0, [r6]
   15a1c:	mov	ip, r3
   15a20:	cmp	r5, r0
   15a24:	bne	159b8 <__assert_fail@plt+0x4584>
   15a28:	and	r4, r4, #10
   15a2c:	cmp	r4, #0
   15a30:	moveq	fp, r5
   15a34:	movne	fp, #0
   15a38:	add	r6, r6, #1
   15a3c:	movne	ip, #1
   15a40:	moveq	ip, #0
   15a44:	b	159b8 <__assert_fail@plt+0x4584>
   15a48:	ldr	r5, [r6, #16]
   15a4c:	ldr	ip, [r0, #12]
   15a50:	cmp	r5, #0
   15a54:	movne	r2, r5
   15a58:	bne	15448 <__assert_fail@plt+0x4014>
   15a5c:	ldr	r3, [r6, #12]
   15a60:	b	15458 <__assert_fail@plt+0x4024>
   15a64:	mov	r3, fp
   15a68:	ldr	r6, [sp, #20]
   15a6c:	uxtb	r3, r3
   15a70:	cmp	sl, #0
   15a74:	str	fp, [sp, #4]
   15a78:	mov	r1, r7
   15a7c:	ldr	r4, [sp, #8]
   15a80:	ldr	r7, [sp, #16]
   15a84:	ldr	r5, [sp, #12]
   15a88:	ldr	fp, [r6, #8]
   15a8c:	str	r3, [sp, #16]
   15a90:	beq	15ca0 <__assert_fail@plt+0x486c>
   15a94:	str	r4, [sp, #8]
   15a98:	mov	r8, #1
   15a9c:	str	r5, [sp, #12]
   15aa0:	mov	r4, r1
   15aa4:	b	15ac0 <__assert_fail@plt+0x468c>
   15aa8:	subs	sl, sl, #1
   15aac:	moveq	r3, #0
   15ab0:	andne	r3, r3, #1
   15ab4:	cmp	r3, #0
   15ab8:	add	r7, r7, #24
   15abc:	beq	15b2c <__assert_fail@plt+0x46f8>
   15ac0:	ldr	r6, [r7, #12]
   15ac4:	mov	r3, r8
   15ac8:	ands	r9, r6, #8
   15acc:	movne	r9, r4
   15ad0:	bne	15aa8 <__assert_fail@plt+0x4674>
   15ad4:	ldr	r5, [r7, #4]
   15ad8:	sub	r0, r5, #1
   15adc:	cmp	r0, #254	; 0xfe
   15ae0:	bhi	15aa8 <__assert_fail@plt+0x4674>
   15ae4:	bl	11290 <__ctype_b_loc@plt>
   15ae8:	lsl	ip, r5, #1
   15aec:	mov	r3, r8
   15af0:	ldr	r0, [r0]
   15af4:	ldrh	r0, [r0, ip]
   15af8:	tst	r0, #16384	; 0x4000
   15afc:	beq	15aa8 <__assert_fail@plt+0x4674>
   15b00:	ldrb	r0, [fp]
   15b04:	mov	r3, r8
   15b08:	cmp	r5, r0
   15b0c:	bne	15aa8 <__assert_fail@plt+0x4674>
   15b10:	and	r6, r6, #2
   15b14:	cmp	r6, #0
   15b18:	moveq	r9, r5
   15b1c:	add	fp, fp, #1
   15b20:	movne	r3, #1
   15b24:	moveq	r3, #0
   15b28:	b	15aa8 <__assert_fail@plt+0x4674>
   15b2c:	mov	r1, r4
   15b30:	ldmib	sp, {r3, r4}
   15b34:	ldr	r5, [sp, #12]
   15b38:	uxtb	r6, r9
   15b3c:	cmp	r3, #0
   15b40:	beq	15bdc <__assert_fail@plt+0x47a8>
   15b44:	ldr	r3, [sp, #16]
   15b48:	mov	r7, r3
   15b4c:	lsl	r8, r3, #2
   15b50:	cmp	r9, #0
   15b54:	beq	15cb8 <__assert_fail@plt+0x4884>
   15b58:	lsl	sl, r6, #2
   15b5c:	bl	1126c <__ctype_tolower_loc@plt>
   15b60:	ldr	r3, [r0]
   15b64:	ldr	r1, [r3, r8]
   15b68:	ldr	r3, [r3, sl]
   15b6c:	subs	r1, r1, r3
   15b70:	bne	155ec <__assert_fail@plt+0x41b8>
   15b74:	subs	r1, r6, r7
   15b78:	bne	155ec <__assert_fail@plt+0x41b8>
   15b7c:	adds	r1, r9, #0
   15b80:	ldr	r3, [sp, #4]
   15b84:	movne	r1, #1
   15b88:	cmp	r3, #0
   15b8c:	rsbeq	r1, r1, #0
   15b90:	rsbne	r1, r1, #1
   15b94:	cmp	r1, #0
   15b98:	bne	155ec <__assert_fail@plt+0x41b8>
   15b9c:	cmp	r3, #0
   15ba0:	bne	155ec <__assert_fail@plt+0x41b8>
   15ba4:	adds	r1, r5, #0
   15ba8:	movne	r1, #1
   15bac:	cmp	r4, #0
   15bb0:	rsbeq	r1, r1, #0
   15bb4:	rsbne	r1, r1, #1
   15bb8:	cmp	r1, #0
   15bbc:	bne	155ec <__assert_fail@plt+0x41b8>
   15bc0:	cmp	r4, #0
   15bc4:	beq	155ec <__assert_fail@plt+0x41b8>
   15bc8:	mov	r1, r5
   15bcc:	mov	r0, r4
   15bd0:	add	sp, sp, #28
   15bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bd8:	b	111f4 <strcasecmp@plt>
   15bdc:	cmp	r4, #0
   15be0:	beq	15e84 <__assert_fail@plt+0x4a50>
   15be4:	ldrb	r7, [r4]
   15be8:	lsl	r8, r7, #2
   15bec:	b	15b50 <__assert_fail@plt+0x471c>
   15bf0:	ldr	r3, [r7, #12]
   15bf4:	tst	r3, #8
   15bf8:	bne	15dd0 <__assert_fail@plt+0x499c>
   15bfc:	mov	r1, #1
   15c00:	b	155ec <__assert_fail@plt+0x41b8>
   15c04:	ldr	r1, [r7, #8]
   15c08:	ldr	r3, [r6, #8]
   15c0c:	mvn	r2, r1
   15c10:	ldr	r0, [r7, #4]
   15c14:	lsr	r2, r2, #31
   15c18:	cmp	r2, r3, lsr #31
   15c1c:	subne	r1, r3, r1
   15c20:	subeq	r1, r1, r3
   15c24:	ldr	r2, [r6, #4]
   15c28:	cmp	r1, #0
   15c2c:	subeq	r1, r0, r2
   15c30:	beq	155ac <__assert_fail@plt+0x4178>
   15c34:	b	155ec <__assert_fail@plt+0x41b8>
   15c38:	ldr	r1, [r9, #8]
   15c3c:	ldr	r3, [r8, #8]
   15c40:	mvn	r2, r1
   15c44:	ldr	r0, [r9, #4]
   15c48:	lsr	r2, r2, #31
   15c4c:	cmp	r2, r3, lsr #31
   15c50:	subne	r1, r3, r1
   15c54:	subeq	r1, r1, r3
   15c58:	ldr	r2, [r8, #4]
   15c5c:	cmp	r1, #0
   15c60:	subeq	r1, r0, r2
   15c64:	beq	15714 <__assert_fail@plt+0x42e0>
   15c68:	b	155ec <__assert_fail@plt+0x41b8>
   15c6c:	ldr	r1, [r5, #8]
   15c70:	ldr	r3, [r4, #8]
   15c74:	mvn	r2, r1
   15c78:	ldr	r0, [r5, #4]
   15c7c:	lsr	r2, r2, #31
   15c80:	cmp	r2, r3, lsr #31
   15c84:	subne	r1, r3, r1
   15c88:	subeq	r1, r1, r3
   15c8c:	ldr	r2, [r4, #4]
   15c90:	cmp	r1, #0
   15c94:	subeq	r1, r0, r2
   15c98:	beq	15784 <__assert_fail@plt+0x4350>
   15c9c:	b	155ec <__assert_fail@plt+0x41b8>
   15ca0:	ldr	r3, [sp, #4]
   15ca4:	cmp	r3, #0
   15ca8:	beq	15e90 <__assert_fail@plt+0x4a5c>
   15cac:	ldr	r3, [sp, #16]
   15cb0:	mov	r7, r3
   15cb4:	lsl	r8, r3, #2
   15cb8:	cmp	r5, #0
   15cbc:	beq	15e74 <__assert_fail@plt+0x4a40>
   15cc0:	ldrb	r6, [r5]
   15cc4:	mov	r9, r1
   15cc8:	b	15b58 <__assert_fail@plt+0x4724>
   15ccc:	ldr	r1, [r5, #8]
   15cd0:	ldr	r3, [r4, #8]
   15cd4:	mvn	r2, r1
   15cd8:	ldr	r0, [r5, #4]
   15cdc:	lsr	r2, r2, #31
   15ce0:	cmp	r2, r3, lsr #31
   15ce4:	subne	r1, r3, r1
   15ce8:	subeq	r1, r1, r3
   15cec:	ldr	r2, [r4, #4]
   15cf0:	cmp	r1, #0
   15cf4:	subeq	r1, r0, r2
   15cf8:	beq	155e4 <__assert_fail@plt+0x41b0>
   15cfc:	b	155ec <__assert_fail@plt+0x41b8>
   15d00:	ldr	r1, [r7, #8]
   15d04:	ldr	r3, [r6, #8]
   15d08:	mvn	r2, r1
   15d0c:	ldr	r0, [r7, #4]
   15d10:	lsr	r2, r2, #31
   15d14:	cmp	r2, r3, lsr #31
   15d18:	subne	r1, r3, r1
   15d1c:	subeq	r1, r1, r3
   15d20:	ldr	r2, [r6, #4]
   15d24:	cmp	r1, #0
   15d28:	subeq	r1, r0, r2
   15d2c:	beq	1574c <__assert_fail@plt+0x4318>
   15d30:	b	155ec <__assert_fail@plt+0x41b8>
   15d34:	ldr	r1, [r9, #8]
   15d38:	ldr	r3, [r8, #8]
   15d3c:	mvn	r2, r1
   15d40:	ldr	r0, [r9, #4]
   15d44:	lsr	r2, r2, #31
   15d48:	cmp	r2, r3, lsr #31
   15d4c:	subne	r1, r3, r1
   15d50:	subeq	r1, r1, r3
   15d54:	ldr	r2, [r8, #4]
   15d58:	cmp	r1, #0
   15d5c:	subeq	r1, r0, r2
   15d60:	beq	15574 <__assert_fail@plt+0x4140>
   15d64:	b	155ec <__assert_fail@plt+0x41b8>
   15d68:	ldr	r1, [fp, #8]
   15d6c:	ldr	r3, [sl, #8]
   15d70:	mvn	r2, r1
   15d74:	ldr	r0, [fp, #4]
   15d78:	lsr	r2, r2, #31
   15d7c:	cmp	r2, r3, lsr #31
   15d80:	subne	r1, r3, r1
   15d84:	subeq	r1, r1, r3
   15d88:	ldr	r2, [sl, #4]
   15d8c:	cmp	r1, #0
   15d90:	subeq	r1, r0, r2
   15d94:	beq	156dc <__assert_fail@plt+0x42a8>
   15d98:	b	155ec <__assert_fail@plt+0x41b8>
   15d9c:	ldr	r1, [r5, #8]
   15da0:	ldr	r3, [r4, #8]
   15da4:	mvn	r2, r1
   15da8:	ldr	r0, [r5, #4]
   15dac:	lsr	r2, r2, #31
   15db0:	cmp	r2, r3, lsr #31
   15db4:	subne	r1, r3, r1
   15db8:	subeq	r1, r1, r3
   15dbc:	ldr	r2, [r4, #4]
   15dc0:	cmp	r1, #0
   15dc4:	subeq	r1, r0, r2
   15dc8:	beq	157dc <__assert_fail@plt+0x43a8>
   15dcc:	b	155ec <__assert_fail@plt+0x41b8>
   15dd0:	cmp	r5, #0
   15dd4:	beq	15bfc <__assert_fail@plt+0x47c8>
   15dd8:	mov	r2, #1
   15ddc:	b	1590c <__assert_fail@plt+0x44d8>
   15de0:	ldr	r1, [fp, #8]
   15de4:	ldr	r3, [sl, #8]
   15de8:	mvn	r2, r1
   15dec:	ldr	r0, [fp, #4]
   15df0:	lsr	r2, r2, #31
   15df4:	cmp	r2, r3, lsr #31
   15df8:	subne	r1, r3, r1
   15dfc:	subeq	r1, r1, r3
   15e00:	ldr	r2, [sl, #4]
   15e04:	cmp	r1, #0
   15e08:	subeq	r1, r0, r2
   15e0c:	beq	1553c <__assert_fail@plt+0x4108>
   15e10:	b	155ec <__assert_fail@plt+0x41b8>
   15e14:	ldr	r0, [r2, #8]
   15e18:	ldr	r1, [r3, #8]
   15e1c:	mvn	ip, r0
   15e20:	ldr	r2, [r2, #4]
   15e24:	lsr	ip, ip, #31
   15e28:	cmp	ip, r1, lsr #31
   15e2c:	subne	r1, r1, r0
   15e30:	subeq	r1, r0, r1
   15e34:	ldr	r3, [r3, #4]
   15e38:	cmp	r1, #0
   15e3c:	subeq	r1, r2, r3
   15e40:	beq	156a4 <__assert_fail@plt+0x4270>
   15e44:	b	155ec <__assert_fail@plt+0x41b8>
   15e48:	mov	r4, r1
   15e4c:	b	15844 <__assert_fail@plt+0x4410>
   15e50:	mov	r5, sl
   15e54:	b	15880 <__assert_fail@plt+0x444c>
   15e58:	cmp	sl, #0
   15e5c:	ldr	fp, [r6, #8]
   15e60:	streq	r1, [sp, #4]
   15e64:	beq	15e90 <__assert_fail@plt+0x4a5c>
   15e68:	str	r9, [sp, #16]
   15e6c:	str	r1, [sp, #4]
   15e70:	b	15a94 <__assert_fail@plt+0x4660>
   15e74:	mov	r9, r1
   15e78:	mov	sl, r5
   15e7c:	mov	r6, r5
   15e80:	b	15b5c <__assert_fail@plt+0x4728>
   15e84:	mov	r8, r4
   15e88:	mov	r7, r4
   15e8c:	b	15b50 <__assert_fail@plt+0x471c>
   15e90:	cmp	r4, #0
   15e94:	moveq	r8, r4
   15e98:	moveq	r7, r4
   15e9c:	beq	15cb8 <__assert_fail@plt+0x4884>
   15ea0:	mov	r9, r1
   15ea4:	mov	r6, #0
   15ea8:	b	15be4 <__assert_fail@plt+0x47b0>

00015eac <argp_failure@@Base>:
   15eac:	push	{r3}		; (str r3, [sp, #-4]!)
   15eb0:	push	{r4, r5, r6, r7, lr}
   15eb4:	subs	r5, r0, #0
   15eb8:	sub	sp, sp, #200	; 0xc8
   15ebc:	mov	r7, r1
   15ec0:	mov	r6, r2
   15ec4:	beq	16014 <argp_failure@@Base+0x168>
   15ec8:	ldr	r3, [r5, #16]
   15ecc:	tst	r3, #2
   15ed0:	bne	16004 <argp_failure@@Base+0x158>
   15ed4:	ldr	r4, [r5, #44]	; 0x2c
   15ed8:	cmp	r4, #0
   15edc:	beq	16004 <argp_failure@@Base+0x158>
   15ee0:	mov	r0, r4
   15ee4:	bl	113b0 <flockfile@plt>
   15ee8:	ldr	r0, [r5, #40]	; 0x28
   15eec:	mov	r1, r4
   15ef0:	bl	110e0 <fputs_unlocked@plt>
   15ef4:	ldr	r3, [sp, #220]	; 0xdc
   15ef8:	cmp	r3, #0
   15efc:	beq	15f58 <argp_failure@@Base+0xac>
   15f00:	ldr	r3, [r4, #20]
   15f04:	ldr	r1, [r4, #24]
   15f08:	add	r2, sp, #224	; 0xe0
   15f0c:	cmp	r3, r1
   15f10:	str	r2, [sp]
   15f14:	addcc	r1, r3, #1
   15f18:	movcc	r2, #58	; 0x3a
   15f1c:	strcc	r1, [r4, #20]
   15f20:	strbcc	r2, [r3]
   15f24:	bcs	16060 <argp_failure@@Base+0x1b4>
   15f28:	ldr	r3, [r4, #20]
   15f2c:	ldr	r2, [r4, #24]
   15f30:	cmp	r3, r2
   15f34:	addcc	r1, r3, #1
   15f38:	movcc	r2, #32
   15f3c:	strcc	r1, [r4, #20]
   15f40:	strbcc	r2, [r3]
   15f44:	bcs	16050 <argp_failure@@Base+0x1a4>
   15f48:	ldr	r2, [sp]
   15f4c:	ldr	r1, [sp, #220]	; 0xdc
   15f50:	mov	r0, r4
   15f54:	bl	11374 <vfprintf@plt>
   15f58:	cmp	r6, #0
   15f5c:	beq	15fc0 <argp_failure@@Base+0x114>
   15f60:	ldr	r3, [r4, #20]
   15f64:	ldr	r2, [r4, #24]
   15f68:	cmp	r3, r2
   15f6c:	addcc	r1, r3, #1
   15f70:	movcc	r2, #58	; 0x3a
   15f74:	strcc	r1, [r4, #20]
   15f78:	strbcc	r2, [r3]
   15f7c:	bcs	16080 <argp_failure@@Base+0x1d4>
   15f80:	ldr	r3, [r4, #20]
   15f84:	ldr	r2, [r4, #24]
   15f88:	cmp	r3, r2
   15f8c:	addcc	r1, r3, #1
   15f90:	movcc	r2, #32
   15f94:	strcc	r1, [r4, #20]
   15f98:	strbcc	r2, [r3]
   15f9c:	bcs	16070 <argp_failure@@Base+0x1c4>
   15fa0:	mov	r2, #200	; 0xc8
   15fa4:	mov	r1, sp
   15fa8:	mov	r0, r6
   15fac:	bl	112fc <strerror_r@plt>
   15fb0:	cmp	r0, #0
   15fb4:	beq	16090 <argp_failure@@Base+0x1e4>
   15fb8:	mov	r1, r4
   15fbc:	bl	110e0 <fputs_unlocked@plt>
   15fc0:	ldr	r3, [r4, #20]
   15fc4:	ldr	r2, [r4, #24]
   15fc8:	cmp	r3, r2
   15fcc:	addcc	r1, r3, #1
   15fd0:	movcc	r2, #10
   15fd4:	strcc	r1, [r4, #20]
   15fd8:	strbcc	r2, [r3]
   15fdc:	bcs	16038 <argp_failure@@Base+0x18c>
   15fe0:	mov	r0, r4
   15fe4:	bl	11200 <funlockfile@plt>
   15fe8:	cmp	r7, #0
   15fec:	beq	16004 <argp_failure@@Base+0x158>
   15ff0:	cmp	r5, #0
   15ff4:	beq	16048 <argp_failure@@Base+0x19c>
   15ff8:	ldr	r3, [r5, #16]
   15ffc:	tst	r3, #32
   16000:	beq	16048 <argp_failure@@Base+0x19c>
   16004:	add	sp, sp, #200	; 0xc8
   16008:	pop	{r4, r5, r6, r7, lr}
   1600c:	add	sp, sp, #4
   16010:	bx	lr
   16014:	ldr	r3, [pc, #140]	; 160a8 <argp_failure@@Base+0x1fc>
   16018:	ldr	r4, [r3]
   1601c:	cmp	r4, #0
   16020:	beq	16004 <argp_failure@@Base+0x158>
   16024:	mov	r0, r4
   16028:	bl	113b0 <flockfile@plt>
   1602c:	ldr	r3, [pc, #120]	; 160ac <argp_failure@@Base+0x200>
   16030:	ldr	r0, [r3]
   16034:	b	15eec <argp_failure@@Base+0x40>
   16038:	mov	r1, #10
   1603c:	mov	r0, r4
   16040:	bl	11344 <__overflow@plt>
   16044:	b	15fe0 <argp_failure@@Base+0x134>
   16048:	mov	r0, r7
   1604c:	bl	112a8 <exit@plt>
   16050:	mov	r1, #32
   16054:	mov	r0, r4
   16058:	bl	11344 <__overflow@plt>
   1605c:	b	15f48 <argp_failure@@Base+0x9c>
   16060:	mov	r1, #58	; 0x3a
   16064:	mov	r0, r4
   16068:	bl	11344 <__overflow@plt>
   1606c:	b	15f28 <argp_failure@@Base+0x7c>
   16070:	mov	r1, #32
   16074:	mov	r0, r4
   16078:	bl	11344 <__overflow@plt>
   1607c:	b	15fa0 <argp_failure@@Base+0xf4>
   16080:	mov	r1, #58	; 0x3a
   16084:	mov	r0, r4
   16088:	bl	11344 <__overflow@plt>
   1608c:	b	15f80 <argp_failure@@Base+0xd4>
   16090:	mov	r0, r6
   16094:	bl	11260 <strerror@plt>
   16098:	ldr	r3, [pc, #16]	; 160b0 <argp_failure@@Base+0x204>
   1609c:	cmp	r0, #0
   160a0:	moveq	r0, r3
   160a4:	b	15fb8 <argp_failure@@Base+0x10c>
   160a8:	ldrdeq	pc, [r2], -r8
   160ac:	ldrdeq	pc, [r2], -r0
   160b0:	andeq	sp, r1, ip, lsl sl
   160b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160b8:	add	fp, sp, #32
   160bc:	cmp	r2, #0
   160c0:	sub	sp, sp, #116	; 0x74
   160c4:	str	r2, [fp, #-136]	; 0xffffff78
   160c8:	str	r0, [fp, #-116]	; 0xffffff8c
   160cc:	str	r1, [fp, #-104]	; 0xffffff98
   160d0:	str	r3, [fp, #-100]	; 0xffffff9c
   160d4:	beq	161f8 <argp_failure@@Base+0x34c>
   160d8:	ldr	r3, [pc, #4076]	; 170cc <argp_failure@@Base+0x1220>
   160dc:	mov	r0, r2
   160e0:	mov	r4, r3
   160e4:	str	r3, [fp, #-96]	; 0xffffffa0
   160e8:	bl	113b0 <flockfile@plt>
   160ec:	ldr	sl, [r4, #36]	; 0x24
   160f0:	cmp	sl, #0
   160f4:	beq	1660c <argp_failure@@Base+0x760>
   160f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   160fc:	mov	r3, #0
   16100:	mov	r1, r3
   16104:	ldr	r2, [r2, #32]
   16108:	ldr	r0, [fp, #-136]	; 0xffffff78
   1610c:	bl	1a9e4 <argp_parse@@Base+0x25e8>
   16110:	subs	sl, r0, #0
   16114:	beq	17428 <argp_failure@@Base+0x157c>
   16118:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1611c:	ands	r3, r3, #11
   16120:	streq	r3, [fp, #-108]	; 0xffffff94
   16124:	bne	16a38 <argp_failure@@Base+0xb8c>
   16128:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1612c:	ands	r4, r3, #3
   16130:	bne	16b60 <argp_failure@@Base+0xcb4>
   16134:	tst	r3, #16
   16138:	bne	16b38 <argp_failure@@Base+0xc8c>
   1613c:	tst	r3, #4
   16140:	bne	16a18 <argp_failure@@Base+0xb6c>
   16144:	tst	r3, #8
   16148:	bne	16200 <argp_failure@@Base+0x354>
   1614c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16150:	tst	r3, #32
   16154:	bne	165c8 <argp_failure@@Base+0x71c>
   16158:	tst	r3, #64	; 0x40
   1615c:	beq	161a8 <argp_failure@@Base+0x2fc>
   16160:	ldr	r5, [pc, #3944]	; 170d0 <argp_failure@@Base+0x1224>
   16164:	ldr	r2, [r5]
   16168:	cmp	r2, #0
   1616c:	beq	161a8 <argp_failure@@Base+0x2fc>
   16170:	cmp	r4, #0
   16174:	beq	1619c <argp_failure@@Base+0x2f0>
   16178:	ldr	r3, [sl, #28]
   1617c:	ldr	r2, [sl, #32]
   16180:	cmp	r3, r2
   16184:	bcs	173f8 <argp_failure@@Base+0x154c>
   16188:	add	r1, r3, #1
   1618c:	mov	r2, #10
   16190:	str	r1, [sl, #28]
   16194:	strb	r2, [r3]
   16198:	ldr	r2, [r5]
   1619c:	ldr	r1, [pc, #3888]	; 170d4 <argp_failure@@Base+0x1228>
   161a0:	mov	r0, sl
   161a4:	bl	1b10c <argp_parse@@Base+0x2d10>
   161a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   161ac:	bl	11200 <funlockfile@plt>
   161b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   161b4:	cmp	r3, #0
   161b8:	beq	161f0 <argp_failure@@Base+0x344>
   161bc:	ldr	r0, [r3, #12]
   161c0:	cmp	r0, #0
   161c4:	beq	161dc <argp_failure@@Base+0x330>
   161c8:	ldr	r4, [r0, #24]
   161cc:	bl	19378 <argp_parse@@Base+0xf7c>
   161d0:	subs	r0, r4, #0
   161d4:	bne	161c8 <argp_failure@@Base+0x31c>
   161d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   161dc:	ldr	r3, [r3, #4]
   161e0:	cmp	r3, #0
   161e4:	bne	165f4 <argp_failure@@Base+0x748>
   161e8:	ldr	r0, [fp, #-108]	; 0xffffff94
   161ec:	bl	19378 <argp_parse@@Base+0xf7c>
   161f0:	mov	r0, sl
   161f4:	bl	1afcc <argp_parse@@Base+0x2bd0>
   161f8:	sub	sp, fp, #32
   161fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16200:	ldr	r3, [fp, #-108]	; 0xffffff94
   16204:	ldr	r3, [r3, #4]
   16208:	cmp	r3, #0
   1620c:	str	r3, [fp, #-112]	; 0xffffff90
   16210:	beq	1614c <argp_failure@@Base+0x2a0>
   16214:	cmp	r4, #0
   16218:	beq	17308 <argp_failure@@Base+0x145c>
   1621c:	ldr	r3, [sl, #28]
   16220:	ldr	r2, [sl, #32]
   16224:	cmp	r3, r2
   16228:	bcs	17574 <argp_failure@@Base+0x16c8>
   1622c:	add	r1, r3, #1
   16230:	mov	r2, #10
   16234:	str	r1, [sl, #28]
   16238:	strb	r2, [r3]
   1623c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16240:	ldr	r2, [fp, #-108]	; 0xffffff94
   16244:	ldr	r3, [r3, #4]
   16248:	ldr	r8, [r2]
   1624c:	str	r3, [fp, #-112]	; 0xffffff90
   16250:	cmp	r3, #0
   16254:	mov	r3, #0
   16258:	str	r3, [fp, #-88]	; 0xffffffa8
   1625c:	str	r3, [fp, #-84]	; 0xffffffac
   16260:	str	r3, [fp, #-80]	; 0xffffffb0
   16264:	beq	165b8 <argp_failure@@Base+0x70c>
   16268:	ldr	ip, [sl, #28]
   1626c:	ldr	r3, [sl, #24]
   16270:	ldr	lr, [sl, #16]
   16274:	sub	ip, ip, r3
   16278:	cmp	ip, lr
   1627c:	ldr	r6, [r8]
   16280:	ldr	r9, [r8, #8]
   16284:	bhi	17168 <argp_failure@@Base+0x12bc>
   16288:	ldr	r3, [sl, #4]
   1628c:	ldr	r0, [r6, #12]
   16290:	str	r3, [fp, #-120]	; 0xffffff88
   16294:	ldr	r3, [sl, #12]
   16298:	mov	r7, #0
   1629c:	str	r3, [fp, #-124]	; 0xffffff84
   162a0:	sub	r3, fp, #88	; 0x58
   162a4:	str	r7, [sl, #4]
   162a8:	str	r3, [fp, #-68]	; 0xffffffbc
   162ac:	ldr	r3, [fp, #-104]	; 0xffffff98
   162b0:	ands	r0, r0, #8
   162b4:	mov	r2, #1
   162b8:	str	r2, [fp, #-64]	; 0xffffffc0
   162bc:	str	r8, [fp, #-76]	; 0xffffffb4
   162c0:	str	sl, [fp, #-72]	; 0xffffffb8
   162c4:	str	r3, [fp, #-60]	; 0xffffffc4
   162c8:	strne	r7, [fp, #-132]	; 0xffffff7c
   162cc:	bne	16308 <argp_failure@@Base+0x45c>
   162d0:	ldr	r1, [r8, #4]
   162d4:	cmp	r1, r7
   162d8:	beq	16304 <argp_failure@@Base+0x458>
   162dc:	add	r2, r6, #24
   162e0:	ldr	r3, [r2, #-24]	; 0xffffffe8
   162e4:	cmp	r3, #0
   162e8:	beq	162f8 <argp_failure@@Base+0x44c>
   162ec:	ldr	r3, [r2, #-12]
   162f0:	tst	r3, #2
   162f4:	beq	171ac <argp_failure@@Base+0x1300>
   162f8:	subs	r1, r1, #1
   162fc:	add	r2, r2, #24
   16300:	bne	162e0 <argp_failure@@Base+0x434>
   16304:	str	r0, [fp, #-132]	; 0xffffff7c
   16308:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1630c:	cmp	ip, lr
   16310:	ldr	r4, [r3, #8]
   16314:	bhi	17154 <argp_failure@@Base+0x12a8>
   16318:	str	r4, [sl, #12]
   1631c:	ldr	r5, [r8, #4]
   16320:	cmp	r5, #0
   16324:	beq	163a8 <argp_failure@@Base+0x4fc>
   16328:	str	r8, [fp, #-128]	; 0xffffff80
   1632c:	mov	r4, r6
   16330:	mov	r8, r9
   16334:	b	16344 <argp_failure@@Base+0x498>
   16338:	subs	r5, r5, #1
   1633c:	add	r4, r4, #24
   16340:	beq	1639c <argp_failure@@Base+0x4f0>
   16344:	ldr	r7, [r4, #12]
   16348:	tst	r7, #8
   1634c:	bne	16338 <argp_failure@@Base+0x48c>
   16350:	ldr	r9, [r4, #4]
   16354:	sub	r2, r9, #1
   16358:	cmp	r2, #254	; 0xfe
   1635c:	bhi	16338 <argp_failure@@Base+0x48c>
   16360:	bl	11290 <__ctype_b_loc@plt>
   16364:	lsl	r2, r9, #1
   16368:	ldr	r1, [r0]
   1636c:	ldrh	r2, [r1, r2]
   16370:	tst	r2, #16384	; 0x4000
   16374:	beq	16338 <argp_failure@@Base+0x48c>
   16378:	ldrb	r2, [r8]
   1637c:	cmp	r9, r2
   16380:	bne	16338 <argp_failure@@Base+0x48c>
   16384:	tst	r7, #2
   16388:	beq	16ecc <argp_failure@@Base+0x1020>
   1638c:	subs	r5, r5, #1
   16390:	add	r8, r8, #1
   16394:	add	r4, r4, #24
   16398:	bne	16344 <argp_failure@@Base+0x498>
   1639c:	ldr	r0, [r6, #12]
   163a0:	ldr	r8, [fp, #-128]	; 0xffffff80
   163a4:	and	r0, r0, #8
   163a8:	ldr	r3, [sl, #28]
   163ac:	ldr	r1, [sl, #24]
   163b0:	cmp	r0, #0
   163b4:	ldr	r2, [sl, #16]
   163b8:	sub	r3, r3, r1
   163bc:	beq	16e38 <argp_failure@@Base+0xf8c>
   163c0:	cmp	r3, r2
   163c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   163c8:	ldr	r4, [r3, #16]
   163cc:	bhi	171c4 <argp_failure@@Base+0x1318>
   163d0:	str	r4, [sl, #12]
   163d4:	ldr	r5, [r8, #4]
   163d8:	cmp	r5, #0
   163dc:	addne	r4, r6, #24
   163e0:	bne	163f4 <argp_failure@@Base+0x548>
   163e4:	b	16484 <argp_failure@@Base+0x5d8>
   163e8:	subs	r5, r5, #1
   163ec:	add	r4, r4, #24
   163f0:	beq	16484 <argp_failure@@Base+0x5d8>
   163f4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   163f8:	cmp	r3, #0
   163fc:	beq	163e8 <argp_failure@@Base+0x53c>
   16400:	ldr	r3, [r4, #-12]
   16404:	tst	r3, #2
   16408:	bne	163e8 <argp_failure@@Base+0x53c>
   1640c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16410:	sub	r1, fp, #76	; 0x4c
   16414:	ldr	r0, [r3, #16]
   16418:	bl	14dcc <__assert_fail@plt+0x3998>
   1641c:	ldr	r9, [r4, #-24]	; 0xffffffe8
   16420:	mov	r0, r9
   16424:	bl	112c0 <strlen@plt>
   16428:	subs	r7, r0, #0
   1642c:	beq	163e8 <argp_failure@@Base+0x53c>
   16430:	ldr	r2, [sl, #28]
   16434:	ldr	lr, [sl, #32]
   16438:	add	ip, r2, r7
   1643c:	cmp	lr, ip
   16440:	mov	r1, r7
   16444:	mov	r0, sl
   16448:	bcs	1645c <argp_failure@@Base+0x5b0>
   1644c:	bl	1b00c <argp_parse@@Base+0x2c10>
   16450:	cmp	r0, #0
   16454:	beq	163e8 <argp_failure@@Base+0x53c>
   16458:	ldr	r2, [sl, #28]
   1645c:	mov	r0, r2
   16460:	mov	r1, r9
   16464:	mov	r2, r7
   16468:	bl	11188 <memcpy@plt>
   1646c:	ldr	r2, [sl, #28]
   16470:	subs	r5, r5, #1
   16474:	add	r3, r2, r7
   16478:	str	r3, [sl, #28]
   1647c:	add	r4, r4, #24
   16480:	bne	163f4 <argp_failure@@Base+0x548>
   16484:	ldr	r3, [sl, #28]
   16488:	ldr	r1, [sl, #24]
   1648c:	ldr	r2, [sl, #16]
   16490:	sub	r3, r3, r1
   16494:	cmp	r3, r2
   16498:	bhi	1708c <argp_failure@@Base+0x11e0>
   1649c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   164a0:	mov	r3, #0
   164a4:	cmp	r2, r3
   164a8:	str	r3, [sl, #4]
   164ac:	beq	16f4c <argp_failure@@Base+0x10a0>
   164b0:	ldr	r3, [r6, #12]
   164b4:	tst	r3, #8
   164b8:	bne	164e4 <argp_failure@@Base+0x638>
   164bc:	ldr	r4, [r6, #4]
   164c0:	sub	r3, r4, #1
   164c4:	cmp	r3, #254	; 0xfe
   164c8:	bhi	164e4 <argp_failure@@Base+0x638>
   164cc:	bl	11290 <__ctype_b_loc@plt>
   164d0:	lsl	r4, r4, #1
   164d4:	ldr	r3, [r0]
   164d8:	ldrh	r3, [r3, r4]
   164dc:	tst	r3, #16384	; 0x4000
   164e0:	bne	164f0 <argp_failure@@Base+0x644>
   164e4:	ldr	r3, [r6]
   164e8:	cmp	r3, #0
   164ec:	beq	17414 <argp_failure@@Base+0x1568>
   164f0:	ldr	r3, [sl, #28]
   164f4:	ldr	r1, [sl, #24]
   164f8:	ldr	r2, [sl, #16]
   164fc:	sub	r3, r3, r1
   16500:	cmp	r3, r2
   16504:	bhi	17098 <argp_failure@@Base+0x11ec>
   16508:	ldr	r3, [fp, #-120]	; 0xffffff88
   1650c:	str	r3, [sl, #4]
   16510:	ldr	r3, [fp, #-112]	; 0xffffff90
   16514:	add	r8, r8, #28
   16518:	subs	r3, r3, #1
   1651c:	str	r3, [fp, #-112]	; 0xffffff90
   16520:	ldr	r3, [fp, #-124]	; 0xffffff84
   16524:	str	r3, [sl, #12]
   16528:	bne	16268 <argp_failure@@Base+0x3bc>
   1652c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16530:	cmp	r3, #0
   16534:	beq	165b8 <argp_failure@@Base+0x70c>
   16538:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1653c:	ldr	r3, [r3, #4]
   16540:	cmp	r3, #0
   16544:	beq	165b8 <argp_failure@@Base+0x70c>
   16548:	ldr	r1, [fp, #-104]	; 0xffffff98
   1654c:	cmp	r1, #0
   16550:	beq	175d8 <argp_failure@@Base+0x172c>
   16554:	ldr	r4, [r1]
   16558:	cmp	r4, #0
   1655c:	beq	17608 <argp_failure@@Base+0x175c>
   16560:	ldr	r3, [r4, #20]
   16564:	cmp	r3, #0
   16568:	beq	174d8 <argp_failure@@Base+0x162c>
   1656c:	mov	r0, r4
   16570:	bl	1921c <argp_parse@@Base+0xe20>
   16574:	ldr	r9, [pc, #3028]	; 17150 <argp_failure@@Base+0x12a4>
   16578:	ldr	r3, [r4, #20]
   1657c:	mov	r1, r9
   16580:	mov	r2, r0
   16584:	ldr	r0, [pc, #2892]	; 170d8 <argp_failure@@Base+0x122c>
   16588:	blx	r3
   1658c:	subs	r4, r0, #0
   16590:	beq	165b8 <argp_failure@@Base+0x70c>
   16594:	ldrb	r3, [r4]
   16598:	subs	r9, r4, r9
   1659c:	movne	r9, #1
   165a0:	cmp	r3, #0
   165a4:	bne	174e0 <argp_failure@@Base+0x1634>
   165a8:	cmp	r9, #0
   165ac:	beq	165b8 <argp_failure@@Base+0x70c>
   165b0:	mov	r0, r4
   165b4:	bl	19378 <argp_parse@@Base+0xf7c>
   165b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165bc:	mov	r4, #1
   165c0:	tst	r3, #32
   165c4:	beq	16158 <argp_failure@@Base+0x2ac>
   165c8:	mov	r3, #0
   165cc:	str	r3, [sp]
   165d0:	str	sl, [sp, #4]
   165d4:	mov	r3, r4
   165d8:	ldr	r1, [fp, #-104]	; 0xffffff98
   165dc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   165e0:	mov	r2, #1
   165e4:	bl	133a4 <__assert_fail@plt+0x1f70>
   165e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165ec:	orr	r4, r4, r0
   165f0:	b	16158 <argp_failure@@Base+0x2ac>
   165f4:	ldr	r4, [fp, #-108]	; 0xffffff94
   165f8:	ldr	r0, [r4]
   165fc:	bl	19378 <argp_parse@@Base+0xf7c>
   16600:	ldr	r0, [r4, #8]
   16604:	bl	19378 <argp_parse@@Base+0xf7c>
   16608:	b	161e8 <argp_failure@@Base+0x33c>
   1660c:	ldr	r0, [pc, #2760]	; 170dc <argp_failure@@Base+0x1230>
   16610:	bl	11230 <getenv@plt>
   16614:	ldr	lr, [fp, #-96]	; 0xffffffa0
   16618:	sub	r3, fp, #76	; 0x4c
   1661c:	mov	ip, r3
   16620:	str	r3, [fp, #-112]	; 0xffffff90
   16624:	mov	r5, r0
   16628:	ldm	lr!, {r0, r1, r2, r3}
   1662c:	cmp	r5, #0
   16630:	stmia	ip!, {r0, r1, r2, r3}
   16634:	ldm	lr!, {r0, r1, r2, r3}
   16638:	stmia	ip!, {r0, r1, r2, r3}
   1663c:	ldm	lr, {r0, r1}
   16640:	stm	ip, {r0, r1}
   16644:	beq	160f8 <argp_failure@@Base+0x24c>
   16648:	ldrb	r8, [r5]
   1664c:	ldr	r9, [pc, #2700]	; 170e0 <argp_failure@@Base+0x1234>
   16650:	str	sl, [fp, #-120]	; 0xffffff88
   16654:	cmp	r8, #0
   16658:	beq	1680c <argp_failure@@Base+0x960>
   1665c:	bl	11290 <__ctype_b_loc@plt>
   16660:	mov	r7, r0
   16664:	ldr	r0, [r0]
   16668:	b	16670 <argp_failure@@Base+0x7c4>
   1666c:	ldrb	r8, [r5, #1]!
   16670:	lsl	r3, r8, #1
   16674:	ldrh	r1, [r0, r3]
   16678:	tst	r1, #8192	; 0x2000
   1667c:	bne	1666c <argp_failure@@Base+0x7c0>
   16680:	ands	r2, r1, #1024	; 0x400
   16684:	beq	16804 <argp_failure@@Base+0x958>
   16688:	cmp	r8, #95	; 0x5f
   1668c:	cmpne	r8, #45	; 0x2d
   16690:	lsl	r3, r1, #28
   16694:	moveq	r6, #1
   16698:	movne	r6, #0
   1669c:	orrs	r6, r6, r3, lsr #31
   166a0:	beq	172a8 <argp_failure@@Base+0x13fc>
   166a4:	mov	r4, r5
   166a8:	ldrb	r3, [r4, #1]!
   166ac:	cmp	r3, #95	; 0x5f
   166b0:	cmpne	r3, #45	; 0x2d
   166b4:	lsl	r1, r3, #1
   166b8:	moveq	r2, #1
   166bc:	ldrh	r1, [r0, r1]
   166c0:	movne	r2, #0
   166c4:	lsl	ip, r1, #28
   166c8:	orrs	r2, r2, ip, lsr #31
   166cc:	bne	166a8 <argp_failure@@Base+0x7fc>
   166d0:	tst	r1, #8192	; 0x2000
   166d4:	sub	r6, r4, r5
   166d8:	beq	166f0 <argp_failure@@Base+0x844>
   166dc:	ldrb	r3, [r4, #1]!
   166e0:	lsl	r2, r3, #1
   166e4:	ldrh	r1, [r0, r2]
   166e8:	tst	r1, #8192	; 0x2000
   166ec:	bne	166dc <argp_failure@@Base+0x830>
   166f0:	cmp	r3, #44	; 0x2c
   166f4:	cmpne	r3, #0
   166f8:	beq	16890 <argp_failure@@Base+0x9e4>
   166fc:	cmp	r3, #61	; 0x3d
   16700:	beq	16e08 <argp_failure@@Base+0xf5c>
   16704:	tst	r1, #2048	; 0x800
   16708:	bne	16d78 <argp_failure@@Base+0xecc>
   1670c:	ldr	r3, [fp, #-120]	; 0xffffff88
   16710:	mov	sl, r3
   16714:	str	r3, [fp, #-108]	; 0xffffff94
   16718:	mov	r0, r9
   1671c:	bl	112c0 <strlen@plt>
   16720:	cmp	r6, r0
   16724:	beq	168b0 <argp_failure@@Base+0xa04>
   16728:	ldr	r0, [pc, #2484]	; 170e4 <argp_failure@@Base+0x1238>
   1672c:	bl	112c0 <strlen@plt>
   16730:	cmp	r6, r0
   16734:	mov	r7, r0
   16738:	beq	16944 <argp_failure@@Base+0xa98>
   1673c:	ldr	r0, [pc, #2556]	; 17140 <argp_failure@@Base+0x1294>
   16740:	bl	112c0 <strlen@plt>
   16744:	cmp	r6, r0
   16748:	mov	r7, r0
   1674c:	beq	168f8 <argp_failure@@Base+0xa4c>
   16750:	ldr	r0, [pc, #2532]	; 1713c <argp_failure@@Base+0x1290>
   16754:	bl	112c0 <strlen@plt>
   16758:	cmp	r6, r0
   1675c:	mov	r7, r0
   16760:	beq	16964 <argp_failure@@Base+0xab8>
   16764:	ldr	r0, [pc, #2500]	; 17130 <argp_failure@@Base+0x1284>
   16768:	bl	112c0 <strlen@plt>
   1676c:	cmp	r6, r0
   16770:	mov	r7, r0
   16774:	beq	16984 <argp_failure@@Base+0xad8>
   16778:	ldr	r8, [pc, #2504]	; 17148 <argp_failure@@Base+0x129c>
   1677c:	mov	r0, r8
   16780:	bl	112c0 <strlen@plt>
   16784:	cmp	r6, r0
   16788:	mov	r7, r0
   1678c:	beq	169a4 <argp_failure@@Base+0xaf8>
   16790:	ldr	r8, [pc, #2476]	; 17144 <argp_failure@@Base+0x1298>
   16794:	mov	r0, r8
   16798:	bl	112c0 <strlen@plt>
   1679c:	cmp	r6, r0
   167a0:	mov	r7, r0
   167a4:	beq	169c0 <argp_failure@@Base+0xb14>
   167a8:	ldr	r8, [pc, #2460]	; 1714c <argp_failure@@Base+0x12a0>
   167ac:	mov	r0, r8
   167b0:	bl	112c0 <strlen@plt>
   167b4:	cmp	r6, r0
   167b8:	mov	r7, r0
   167bc:	beq	169dc <argp_failure@@Base+0xb30>
   167c0:	ldr	r8, [pc, #2336]	; 170e8 <argp_failure@@Base+0x123c>
   167c4:	mov	r0, r8
   167c8:	bl	112c0 <strlen@plt>
   167cc:	cmp	r0, r6
   167d0:	beq	169f8 <argp_failure@@Base+0xb4c>
   167d4:	mov	r2, #0
   167d8:	str	r5, [sp, #4]
   167dc:	str	r6, [sp]
   167e0:	mov	r1, r2
   167e4:	ldr	r3, [pc, #2304]	; 170ec <argp_failure@@Base+0x1240>
   167e8:	ldr	r0, [fp, #-104]	; 0xffffff98
   167ec:	bl	15eac <argp_failure@@Base>
   167f0:	ldrb	r8, [r4]
   167f4:	cmp	r8, #44	; 0x2c
   167f8:	beq	168ec <argp_failure@@Base+0xa40>
   167fc:	mov	r5, r4
   16800:	b	16654 <argp_failure@@Base+0x7a8>
   16804:	cmp	r8, #0
   16808:	bne	173b4 <argp_failure@@Base+0x1508>
   1680c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16810:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16814:	cmp	r3, r2
   16818:	ble	17598 <argp_failure@@Base+0x16ec>
   1681c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16820:	cmp	r3, r2
   16824:	ble	173f0 <argp_failure@@Base+0x1544>
   16828:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1682c:	cmp	r3, r2
   16830:	ble	173cc <argp_failure@@Base+0x1520>
   16834:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16838:	cmp	r3, r2
   1683c:	ble	175d0 <argp_failure@@Base+0x1724>
   16840:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16844:	cmp	r3, r2
   16848:	ble	175c8 <argp_failure@@Base+0x171c>
   1684c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16850:	cmp	r3, r2
   16854:	ble	175e4 <argp_failure@@Base+0x1738>
   16858:	ldr	lr, [fp, #-112]	; 0xffffff90
   1685c:	ldr	r3, [pc, #2152]	; 170cc <argp_failure@@Base+0x1220>
   16860:	mov	r4, #1
   16864:	mov	r5, r3
   16868:	str	r3, [fp, #-96]	; 0xffffffa0
   1686c:	ldm	lr!, {r0, r1, r2, r3}
   16870:	mov	ip, r5
   16874:	stmia	ip!, {r0, r1, r2, r3}
   16878:	ldm	lr!, {r0, r1, r2, r3}
   1687c:	stmia	ip!, {r0, r1, r2, r3}
   16880:	ldm	lr, {r0, r1}
   16884:	stm	ip, {r0, r1}
   16888:	str	r4, [r5, #36]	; 0x24
   1688c:	b	160f8 <argp_failure@@Base+0x24c>
   16890:	cmp	r8, #110	; 0x6e
   16894:	beq	16dd8 <argp_failure@@Base+0xf2c>
   16898:	mov	sl, #1
   1689c:	mov	r0, r9
   168a0:	str	sl, [fp, #-108]	; 0xffffff94
   168a4:	bl	112c0 <strlen@plt>
   168a8:	cmp	r6, r0
   168ac:	bne	16728 <argp_failure@@Base+0x87c>
   168b0:	mov	r2, r6
   168b4:	mov	r1, r9
   168b8:	mov	r0, r5
   168bc:	bl	11410 <strncmp@plt>
   168c0:	cmp	r0, #0
   168c4:	bne	16728 <argp_failure@@Base+0x87c>
   168c8:	mov	r8, r9
   168cc:	ldrb	r3, [r8, #15]
   168d0:	ldrb	r8, [r4]
   168d4:	sub	r2, fp, #36	; 0x24
   168d8:	add	r3, r2, r3
   168dc:	ldr	r2, [fp, #-108]	; 0xffffff94
   168e0:	cmp	r8, #44	; 0x2c
   168e4:	str	r2, [r3, #-40]	; 0xffffffd8
   168e8:	bne	167fc <argp_failure@@Base+0x950>
   168ec:	ldrb	r8, [r4, #1]
   168f0:	add	r4, r4, #1
   168f4:	b	167fc <argp_failure@@Base+0x950>
   168f8:	mov	r2, r0
   168fc:	ldr	r1, [pc, #2108]	; 17140 <argp_failure@@Base+0x1294>
   16900:	mov	r0, r5
   16904:	bl	11410 <strncmp@plt>
   16908:	cmp	r0, #0
   1690c:	bne	16750 <argp_failure@@Base+0x8a4>
   16910:	ldr	r8, [pc, #2088]	; 17140 <argp_failure@@Base+0x1294>
   16914:	cmp	sl, #0
   16918:	beq	168cc <argp_failure@@Base+0xa20>
   1691c:	ldrb	r2, [r8, #14]
   16920:	cmp	r2, #0
   16924:	bne	168cc <argp_failure@@Base+0xa20>
   16928:	str	r5, [sp, #4]
   1692c:	str	r7, [sp]
   16930:	ldr	r3, [pc, #1976]	; 170f0 <argp_failure@@Base+0x1244>
   16934:	mov	r1, r2
   16938:	ldr	r0, [fp, #-104]	; 0xffffff98
   1693c:	bl	15eac <argp_failure@@Base>
   16940:	b	167f0 <argp_failure@@Base+0x944>
   16944:	mov	r2, r0
   16948:	ldr	r1, [pc, #1940]	; 170e4 <argp_failure@@Base+0x1238>
   1694c:	mov	r0, r5
   16950:	bl	11410 <strncmp@plt>
   16954:	cmp	r0, #0
   16958:	bne	1673c <argp_failure@@Base+0x890>
   1695c:	ldr	r8, [pc, #1920]	; 170e4 <argp_failure@@Base+0x1238>
   16960:	b	16914 <argp_failure@@Base+0xa68>
   16964:	mov	r2, r0
   16968:	ldr	r1, [pc, #1996]	; 1713c <argp_failure@@Base+0x1290>
   1696c:	mov	r0, r5
   16970:	bl	11410 <strncmp@plt>
   16974:	cmp	r0, #0
   16978:	bne	16764 <argp_failure@@Base+0x8b8>
   1697c:	ldr	r8, [pc, #1976]	; 1713c <argp_failure@@Base+0x1290>
   16980:	b	16914 <argp_failure@@Base+0xa68>
   16984:	mov	r2, r0
   16988:	ldr	r1, [pc, #1952]	; 17130 <argp_failure@@Base+0x1284>
   1698c:	mov	r0, r5
   16990:	bl	11410 <strncmp@plt>
   16994:	cmp	r0, #0
   16998:	bne	16778 <argp_failure@@Base+0x8cc>
   1699c:	ldr	r8, [pc, #1932]	; 17130 <argp_failure@@Base+0x1284>
   169a0:	b	16914 <argp_failure@@Base+0xa68>
   169a4:	mov	r2, r0
   169a8:	mov	r1, r8
   169ac:	mov	r0, r5
   169b0:	bl	11410 <strncmp@plt>
   169b4:	cmp	r0, #0
   169b8:	bne	16790 <argp_failure@@Base+0x8e4>
   169bc:	b	16914 <argp_failure@@Base+0xa68>
   169c0:	mov	r2, r0
   169c4:	mov	r1, r8
   169c8:	mov	r0, r5
   169cc:	bl	11410 <strncmp@plt>
   169d0:	cmp	r0, #0
   169d4:	bne	167a8 <argp_failure@@Base+0x8fc>
   169d8:	b	16914 <argp_failure@@Base+0xa68>
   169dc:	mov	r2, r0
   169e0:	mov	r1, r8
   169e4:	mov	r0, r5
   169e8:	bl	11410 <strncmp@plt>
   169ec:	cmp	r0, #0
   169f0:	bne	167c0 <argp_failure@@Base+0x914>
   169f4:	b	16914 <argp_failure@@Base+0xa68>
   169f8:	mov	r2, r6
   169fc:	mov	r1, r8
   16a00:	mov	r0, r5
   16a04:	bl	11410 <strncmp@plt>
   16a08:	cmp	r0, #0
   16a0c:	moveq	r7, r6
   16a10:	bne	167d4 <argp_failure@@Base+0x928>
   16a14:	b	16914 <argp_failure@@Base+0xa68>
   16a18:	ldr	r3, [fp, #4]
   16a1c:	ldr	r1, [pc, #1744]	; 170f4 <argp_failure@@Base+0x1248>
   16a20:	mov	r2, r3
   16a24:	mov	r0, sl
   16a28:	bl	1b10c <argp_parse@@Base+0x2d10>
   16a2c:	mov	r4, #1
   16a30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a34:	b	16144 <argp_failure@@Base+0x298>
   16a38:	mov	r1, #0
   16a3c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16a40:	bl	13950 <__assert_fail@plt+0x251c>
   16a44:	ldr	r2, [r0, #4]
   16a48:	ldr	r3, [r0]
   16a4c:	cmp	r2, #0
   16a50:	str	r0, [fp, #-108]	; 0xffffff94
   16a54:	str	r2, [fp, #-120]	; 0xffffff88
   16a58:	str	r3, [fp, #-112]	; 0xffffff90
   16a5c:	sub	r6, r2, #1
   16a60:	beq	16128 <argp_failure@@Base+0x27c>
   16a64:	ldr	r5, [pc, #1676]	; 170f8 <argp_failure@@Base+0x124c>
   16a68:	mov	r8, r6
   16a6c:	mov	r7, r3
   16a70:	ldm	r7, {r4, r9}
   16a74:	cmp	r9, #0
   16a78:	sub	r9, r9, #1
   16a7c:	beq	16abc <argp_failure@@Base+0xc10>
   16a80:	add	r4, r4, #24
   16a84:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16a88:	mov	r1, r5
   16a8c:	subs	r0, r3, #0
   16a90:	sub	r9, r9, #1
   16a94:	beq	16ab0 <argp_failure@@Base+0xc04>
   16a98:	ldr	r3, [r4, #-12]
   16a9c:	tst	r3, #2
   16aa0:	bne	16ab0 <argp_failure@@Base+0xc04>
   16aa4:	bl	11104 <strcmp@plt>
   16aa8:	cmp	r0, #0
   16aac:	beq	17250 <argp_failure@@Base+0x13a4>
   16ab0:	cmn	r9, #1
   16ab4:	add	r4, r4, #24
   16ab8:	bne	16a84 <argp_failure@@Base+0xbd8>
   16abc:	sub	r8, r8, #1
   16ac0:	cmn	r8, #1
   16ac4:	add	r7, r7, #28
   16ac8:	bne	16a70 <argp_failure@@Base+0xbc4>
   16acc:	ldr	r7, [fp, #-112]	; 0xffffff90
   16ad0:	ldr	r9, [pc, #1572]	; 170fc <argp_failure@@Base+0x1250>
   16ad4:	ldm	r7, {r4, r5}
   16ad8:	cmp	r5, #0
   16adc:	sub	r5, r5, #1
   16ae0:	beq	16b20 <argp_failure@@Base+0xc74>
   16ae4:	add	r4, r4, #24
   16ae8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16aec:	mov	r1, r9
   16af0:	subs	r0, r3, #0
   16af4:	sub	r5, r5, #1
   16af8:	beq	16b14 <argp_failure@@Base+0xc68>
   16afc:	ldr	r3, [r4, #-12]
   16b00:	tst	r3, #2
   16b04:	bne	16b14 <argp_failure@@Base+0xc68>
   16b08:	bl	11104 <strcmp@plt>
   16b0c:	cmp	r0, #0
   16b10:	beq	17208 <argp_failure@@Base+0x135c>
   16b14:	cmn	r5, #1
   16b18:	add	r4, r4, #24
   16b1c:	bne	16ae8 <argp_failure@@Base+0xc3c>
   16b20:	cmp	r6, #0
   16b24:	add	r7, r7, #28
   16b28:	sub	r6, r6, #1
   16b2c:	bne	16ad4 <argp_failure@@Base+0xc28>
   16b30:	ldr	r1, [fp, #-120]	; 0xffffff88
   16b34:	b	17220 <argp_failure@@Base+0x1374>
   16b38:	mov	r2, #1
   16b3c:	mov	r3, #0
   16b40:	stm	sp, {r2, sl}
   16b44:	ldr	r1, [fp, #-104]	; 0xffffff98
   16b48:	mov	r2, r3
   16b4c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16b50:	bl	133a4 <__assert_fail@plt+0x1f70>
   16b54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16b58:	orr	r4, r4, r0
   16b5c:	b	1613c <argp_failure@@Base+0x290>
   16b60:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16b64:	mov	r4, #1
   16b68:	ldr	r8, [pc, #1424]	; 17100 <argp_failure@@Base+0x1254>
   16b6c:	ldr	r1, [r3, #16]
   16b70:	ldr	r0, [r3, #8]
   16b74:	bl	14350 <__assert_fail@plt+0x2f1c>
   16b78:	mov	r1, #0
   16b7c:	mov	r6, r4
   16b80:	add	r3, r0, #14
   16b84:	bic	r3, r3, #7
   16b88:	sub	sp, sp, r3
   16b8c:	add	r7, sp, #8
   16b90:	mov	r2, r0
   16b94:	mov	r0, r7
   16b98:	bl	11314 <memset@plt>
   16b9c:	sub	r3, fp, #76	; 0x4c
   16ba0:	str	r3, [fp, #-112]	; 0xffffff90
   16ba4:	str	r7, [fp, #-120]	; 0xffffff88
   16ba8:	ldr	r5, [fp, #-96]	; 0xffffffa0
   16bac:	b	16ccc <argp_failure@@Base+0xe20>
   16bb0:	cmp	r4, #0
   16bb4:	ldr	r3, [fp, #-120]	; 0xffffff88
   16bb8:	ldr	r7, [sl, #12]
   16bbc:	ldrne	r2, [pc, #1344]	; 17104 <argp_failure@@Base+0x1258>
   16bc0:	str	r9, [sl, #12]
   16bc4:	ldreq	r2, [pc, #1340]	; 17108 <argp_failure@@Base+0x125c>
   16bc8:	str	r3, [fp, #-76]	; 0xffffffb4
   16bcc:	mov	r1, r8
   16bd0:	ldr	r3, [fp, #4]
   16bd4:	mov	r0, sl
   16bd8:	bl	1b10c <argp_parse@@Base+0x2d10>
   16bdc:	ldr	r3, [sl, #28]
   16be0:	ldr	r1, [sl, #24]
   16be4:	ldr	r2, [sl, #16]
   16be8:	sub	r3, r3, r1
   16bec:	cmp	r3, r2
   16bf0:	ldr	r9, [r5, #28]
   16bf4:	bhi	16d44 <argp_failure@@Base+0xe98>
   16bf8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16bfc:	ldr	r4, [sl, #4]
   16c00:	tst	r3, #2
   16c04:	str	r9, [sl, #4]
   16c08:	beq	16d50 <argp_failure@@Base+0xea4>
   16c0c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16c10:	ldr	r3, [r3, #4]
   16c14:	cmp	r3, #0
   16c18:	beq	16c68 <argp_failure@@Base+0xdbc>
   16c1c:	ldr	ip, [sl, #28]
   16c20:	ldr	r2, [sl, #32]
   16c24:	add	r3, ip, #12
   16c28:	cmp	r2, r3
   16c2c:	bcs	16c48 <argp_failure@@Base+0xd9c>
   16c30:	mov	r1, #12
   16c34:	mov	r0, sl
   16c38:	bl	1b00c <argp_parse@@Base+0x2c10>
   16c3c:	cmp	r0, #0
   16c40:	beq	16c68 <argp_failure@@Base+0xdbc>
   16c44:	ldr	ip, [sl, #28]
   16c48:	ldr	r3, [pc, #1212]	; 1710c <argp_failure@@Base+0x1260>
   16c4c:	ldm	r3!, {r0, r1, r2}
   16c50:	str	r0, [ip]
   16c54:	str	r1, [ip, #4]
   16c58:	str	r2, [ip, #8]
   16c5c:	ldr	r3, [sl, #28]
   16c60:	add	r3, r3, #12
   16c64:	str	r3, [sl, #28]
   16c68:	mov	r3, r6
   16c6c:	ldr	r1, [fp, #-104]	; 0xffffff98
   16c70:	str	sl, [sp]
   16c74:	ldr	r2, [fp, #-112]	; 0xffffff90
   16c78:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16c7c:	bl	14070 <__assert_fail@plt+0x2c3c>
   16c80:	ldr	r3, [sl, #28]
   16c84:	ldr	r1, [sl, #24]
   16c88:	sub	r1, r3, r1
   16c8c:	mov	r9, r0
   16c90:	ldr	r0, [sl, #16]
   16c94:	cmp	r1, r0
   16c98:	strls	r7, [sl, #12]
   16c9c:	bhi	16d10 <argp_failure@@Base+0xe64>
   16ca0:	ldr	r1, [sl, #32]
   16ca4:	str	r4, [sl, #4]
   16ca8:	cmp	r1, r3
   16cac:	bls	16cf4 <argp_failure@@Base+0xe48>
   16cb0:	add	r1, r3, #1
   16cb4:	mov	r2, #10
   16cb8:	str	r1, [sl, #28]
   16cbc:	strb	r2, [r3]
   16cc0:	cmp	r9, #0
   16cc4:	mov	r4, #0
   16cc8:	beq	16d6c <argp_failure@@Base+0xec0>
   16ccc:	ldr	r3, [sl, #28]
   16cd0:	ldr	r1, [sl, #24]
   16cd4:	ldr	r2, [sl, #16]
   16cd8:	sub	r3, r3, r1
   16cdc:	cmp	r3, r2
   16ce0:	ldr	r9, [r5, #28]
   16ce4:	bls	16bb0 <argp_failure@@Base+0xd04>
   16ce8:	mov	r0, sl
   16cec:	bl	1aa60 <argp_parse@@Base+0x2664>
   16cf0:	b	16bb0 <argp_failure@@Base+0xd04>
   16cf4:	mov	r1, r6
   16cf8:	mov	r0, sl
   16cfc:	bl	1b00c <argp_parse@@Base+0x2c10>
   16d00:	cmp	r0, #0
   16d04:	beq	16cc0 <argp_failure@@Base+0xe14>
   16d08:	ldr	r3, [sl, #28]
   16d0c:	b	16cb0 <argp_failure@@Base+0xe04>
   16d10:	mov	r0, sl
   16d14:	bl	1aa60 <argp_parse@@Base+0x2664>
   16d18:	ldr	r3, [sl, #28]
   16d1c:	ldr	r1, [sl, #24]
   16d20:	ldr	r0, [sl, #16]
   16d24:	sub	r1, r3, r1
   16d28:	cmp	r1, r0
   16d2c:	str	r7, [sl, #12]
   16d30:	bls	16ca0 <argp_failure@@Base+0xdf4>
   16d34:	mov	r0, sl
   16d38:	bl	1aa60 <argp_parse@@Base+0x2664>
   16d3c:	ldr	r3, [sl, #28]
   16d40:	b	16ca0 <argp_failure@@Base+0xdf4>
   16d44:	mov	r0, sl
   16d48:	bl	1aa60 <argp_parse@@Base+0x2664>
   16d4c:	b	16bf8 <argp_failure@@Base+0xd4c>
   16d50:	mov	r1, sl
   16d54:	ldr	r0, [fp, #-108]	; 0xffffff94
   16d58:	bl	1469c <__assert_fail@plt+0x3268>
   16d5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16d60:	orr	r3, r3, #2
   16d64:	str	r3, [fp, #-100]	; 0xffffff9c
   16d68:	b	16c68 <argp_failure@@Base+0xdbc>
   16d6c:	mov	r4, #1
   16d70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16d74:	b	16134 <argp_failure@@Base+0x288>
   16d78:	mov	r2, #10
   16d7c:	mov	r1, #0
   16d80:	mov	r0, r4
   16d84:	bl	11110 <strtol@plt>
   16d88:	ldrb	r3, [r4]
   16d8c:	ldr	r2, [r7]
   16d90:	lsl	r3, r3, #1
   16d94:	ldrh	r3, [r2, r3]
   16d98:	tst	r3, #2048	; 0x800
   16d9c:	str	r0, [fp, #-108]	; 0xffffff94
   16da0:	beq	16dc8 <argp_failure@@Base+0xf1c>
   16da4:	ldrb	r3, [r4, #1]!
   16da8:	lsl	r3, r3, #1
   16dac:	ldrh	r3, [r2, r3]
   16db0:	tst	r3, #2048	; 0x800
   16db4:	bne	16da4 <argp_failure@@Base+0xef8>
   16db8:	b	16dc8 <argp_failure@@Base+0xf1c>
   16dbc:	ldrb	r3, [r4, #1]!
   16dc0:	lsl	r3, r3, #1
   16dc4:	ldrh	r3, [r2, r3]
   16dc8:	tst	r3, #8192	; 0x2000
   16dcc:	bne	16dbc <argp_failure@@Base+0xf10>
   16dd0:	ldr	sl, [fp, #-120]	; 0xffffff88
   16dd4:	b	16718 <argp_failure@@Base+0x86c>
   16dd8:	ldrb	r3, [r5, #1]
   16ddc:	cmp	r3, #111	; 0x6f
   16de0:	bne	16898 <argp_failure@@Base+0x9ec>
   16de4:	ldrb	r3, [r5, #2]
   16de8:	cmp	r3, #45	; 0x2d
   16dec:	bne	16898 <argp_failure@@Base+0x9ec>
   16df0:	ldr	r3, [fp, #-120]	; 0xffffff88
   16df4:	add	r5, r5, #3
   16df8:	sub	r6, r6, #3
   16dfc:	str	r3, [fp, #-108]	; 0xffffff94
   16e00:	mov	sl, #1
   16e04:	b	16718 <argp_failure@@Base+0x86c>
   16e08:	ldrb	r3, [r4, #1]
   16e0c:	add	r4, r4, #1
   16e10:	lsl	r3, r3, #1
   16e14:	ldrh	r1, [r0, r3]
   16e18:	tst	r1, #8192	; 0x2000
   16e1c:	beq	16704 <argp_failure@@Base+0x858>
   16e20:	ldrb	r3, [r4, #1]!
   16e24:	lsl	r3, r3, #1
   16e28:	ldrh	r1, [r0, r3]
   16e2c:	tst	r1, #8192	; 0x2000
   16e30:	bne	16e20 <argp_failure@@Base+0xf74>
   16e34:	b	16704 <argp_failure@@Base+0x858>
   16e38:	cmp	r3, r2
   16e3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16e40:	ldr	r4, [r3, #12]
   16e44:	bhi	171b8 <argp_failure@@Base+0x130c>
   16e48:	str	r4, [sl, #12]
   16e4c:	ldr	r5, [r8, #4]
   16e50:	cmp	r5, #0
   16e54:	beq	16484 <argp_failure@@Base+0x5d8>
   16e58:	add	r4, r6, #24
   16e5c:	ldr	r7, [fp, #-96]	; 0xffffffa0
   16e60:	b	16e70 <argp_failure@@Base+0xfc4>
   16e64:	subs	r5, r5, #1
   16e68:	add	r4, r4, #24
   16e6c:	beq	16484 <argp_failure@@Base+0x5d8>
   16e70:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16e74:	cmp	r3, #0
   16e78:	beq	16e64 <argp_failure@@Base+0xfb8>
   16e7c:	ldr	r3, [r4, #-12]
   16e80:	tst	r3, #2
   16e84:	bne	16e64 <argp_failure@@Base+0xfb8>
   16e88:	sub	r1, fp, #76	; 0x4c
   16e8c:	ldr	r0, [r7, #12]
   16e90:	bl	14dcc <__assert_fail@plt+0x3998>
   16e94:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16e98:	ldr	r1, [pc, #624]	; 17110 <argp_failure@@Base+0x1264>
   16e9c:	mov	r0, sl
   16ea0:	bl	1b10c <argp_parse@@Base+0x2d10>
   16ea4:	ldr	r3, [r6, #8]
   16ea8:	ldr	r1, [pc, #612]	; 17114 <argp_failure@@Base+0x1268>
   16eac:	subs	r2, r3, #0
   16eb0:	mov	r0, sl
   16eb4:	beq	16e64 <argp_failure@@Base+0xfb8>
   16eb8:	ldr	ip, [r6, #12]
   16ebc:	tst	ip, #1
   16ec0:	ldrne	r1, [pc, #592]	; 17118 <argp_failure@@Base+0x126c>
   16ec4:	bl	1b10c <argp_parse@@Base+0x2d10>
   16ec8:	b	16e64 <argp_failure@@Base+0xfb8>
   16ecc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16ed0:	sub	r1, fp, #76	; 0x4c
   16ed4:	ldr	r0, [r3, #8]
   16ed8:	bl	14dcc <__assert_fail@plt+0x3998>
   16edc:	ldr	r2, [sl, #28]
   16ee0:	ldr	r1, [sl, #32]
   16ee4:	cmp	r2, r1
   16ee8:	bcs	171ec <argp_failure@@Base+0x1340>
   16eec:	add	r1, r2, #1
   16ef0:	mov	r3, #45	; 0x2d
   16ef4:	str	r1, [sl, #28]
   16ef8:	strb	r3, [r2]
   16efc:	ldr	r2, [sl, #28]
   16f00:	ldr	r1, [sl, #32]
   16f04:	ldrb	r7, [r8]
   16f08:	cmp	r2, r1
   16f0c:	bcs	171d0 <argp_failure@@Base+0x1324>
   16f10:	add	r1, r2, #1
   16f14:	str	r1, [sl, #28]
   16f18:	strb	r7, [r2]
   16f1c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16f20:	cmp	r3, #0
   16f24:	beq	17184 <argp_failure@@Base+0x12d8>
   16f28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16f2c:	ldr	r2, [r3]
   16f30:	cmp	r2, #0
   16f34:	bne	17184 <argp_failure@@Base+0x12d8>
   16f38:	ldr	r2, [r6, #8]
   16f3c:	cmp	r2, #0
   16f40:	movne	r3, #1
   16f44:	strne	r3, [fp, #-80]	; 0xffffffb0
   16f48:	b	1638c <argp_failure@@Base+0x4e0>
   16f4c:	ldr	r5, [r8, #20]
   16f50:	ldr	r9, [r6, #16]
   16f54:	cmp	r5, #0
   16f58:	beq	17274 <argp_failure@@Base+0x13c8>
   16f5c:	ldr	r3, [r5, #20]
   16f60:	cmp	r3, #0
   16f64:	beq	17274 <argp_failure@@Base+0x13c8>
   16f68:	ldr	r1, [fp, #-104]	; 0xffffff98
   16f6c:	mov	r0, r5
   16f70:	ldr	r4, [r6, #4]
   16f74:	bl	1921c <argp_parse@@Base+0xe20>
   16f78:	ldr	r3, [r5, #20]
   16f7c:	mov	r1, r9
   16f80:	mov	r2, r0
   16f84:	mov	r0, r4
   16f88:	blx	r3
   16f8c:	mov	r4, r0
   16f90:	cmp	r4, #0
   16f94:	beq	17048 <argp_failure@@Base+0x119c>
   16f98:	ldrb	r3, [r4]
   16f9c:	cmp	r3, #0
   16fa0:	beq	17038 <argp_failure@@Base+0x118c>
   16fa4:	ldr	r3, [sl, #28]
   16fa8:	ldr	r2, [sl, #24]
   16fac:	ldr	r1, [sl, #16]
   16fb0:	sub	r2, r3, r2
   16fb4:	cmp	r2, r1
   16fb8:	bhi	17340 <argp_failure@@Base+0x1494>
   16fbc:	ldr	r6, [sl, #20]
   16fc0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16fc4:	bic	r6, r6, r6, asr #31
   16fc8:	ldr	r5, [r2, #20]
   16fcc:	mov	r7, r5
   16fd0:	str	r5, [sl, #4]
   16fd4:	add	r2, r5, #3
   16fd8:	cmp	r2, r6
   16fdc:	str	r7, [sl, #12]
   16fe0:	bcs	172b4 <argp_failure@@Base+0x1408>
   16fe4:	ldr	r2, [sl, #32]
   16fe8:	cmp	r2, r3
   16fec:	bls	174bc <argp_failure@@Base+0x1610>
   16ff0:	add	r1, r3, #1
   16ff4:	mov	r2, #10
   16ff8:	str	r1, [sl, #28]
   16ffc:	strb	r2, [r3]
   17000:	mov	r0, r4
   17004:	bl	112c0 <strlen@plt>
   17008:	subs	r5, r0, #0
   1700c:	beq	17038 <argp_failure@@Base+0x118c>
   17010:	ldr	r0, [sl, #28]
   17014:	ldr	r2, [sl, #32]
   17018:	add	r3, r0, r5
   1701c:	cmp	r2, r3
   17020:	bcs	17324 <argp_failure@@Base+0x1478>
   17024:	mov	r1, r5
   17028:	mov	r0, sl
   1702c:	bl	1b00c <argp_parse@@Base+0x2c10>
   17030:	cmp	r0, #0
   17034:	bne	17320 <argp_failure@@Base+0x1474>
   17038:	cmp	r9, r4
   1703c:	beq	17048 <argp_failure@@Base+0x119c>
   17040:	mov	r0, r4
   17044:	bl	19378 <argp_parse@@Base+0xf7c>
   17048:	ldr	r3, [sl, #28]
   1704c:	ldr	r2, [sl, #24]
   17050:	ldr	r1, [sl, #16]
   17054:	sub	r2, r3, r2
   17058:	cmp	r2, r1
   1705c:	bhi	17298 <argp_failure@@Base+0x13ec>
   17060:	ldr	r1, [sl, #32]
   17064:	mov	r2, #0
   17068:	cmp	r1, r3
   1706c:	str	r2, [sl, #4]
   17070:	bls	1727c <argp_failure@@Base+0x13d0>
   17074:	add	r1, r3, #1
   17078:	mov	r2, #10
   1707c:	str	r1, [sl, #28]
   17080:	strb	r2, [r3]
   17084:	str	r8, [fp, #-88]	; 0xffffffa8
   17088:	b	164f0 <argp_failure@@Base+0x644>
   1708c:	mov	r0, sl
   17090:	bl	1aa60 <argp_parse@@Base+0x2664>
   17094:	b	1649c <argp_failure@@Base+0x5f0>
   17098:	mov	r0, sl
   1709c:	bl	1aa60 <argp_parse@@Base+0x2664>
   170a0:	ldr	r2, [fp, #-120]	; 0xffffff88
   170a4:	ldr	r3, [sl, #28]
   170a8:	ldr	r1, [sl, #24]
   170ac:	str	r2, [sl, #4]
   170b0:	ldr	r2, [sl, #16]
   170b4:	sub	r3, r3, r1
   170b8:	cmp	r3, r2
   170bc:	bls	16510 <argp_failure@@Base+0x664>
   170c0:	mov	r0, sl
   170c4:	bl	1aa60 <argp_parse@@Base+0x2664>
   170c8:	b	16510 <argp_failure@@Base+0x664>
   170cc:	muleq	r2, r4, r3
   170d0:	andeq	pc, r2, r8, asr r4	; <UNPREDICTABLE>
   170d4:	strdeq	sp, [r1], -ip
   170d8:	andeq	r0, r0, #5
   170dc:	andeq	sp, r1, r8, lsr #21
   170e0:	andeq	sp, r1, r8, ror r8
   170e4:	andeq	sp, r1, r8, lsl #17
   170e8:	strdeq	sp, [r1], -r8
   170ec:	andeq	sp, r1, r8, ror #21
   170f0:			; <UNDEFINED> instruction: 0x0001dab8
   170f4:	andeq	sp, r1, r4, lsr #23
   170f8:	andeq	sp, r1, ip, ror #22
   170fc:	andeq	sp, r1, r4, ror fp
   17100:	andeq	sp, r1, r4, lsl #23
   17104:	andeq	sp, r1, ip, ror fp
   17108:	andeq	sp, r1, ip, lsl #23
   1710c:	muleq	r1, r4, fp
   17110:	andeq	sp, r1, r4, ror #23
   17114:	strdeq	sp, [r1], -r4
   17118:	andeq	sp, r1, ip, ror #23
   1711c:	ldrdeq	sp, [r1], -ip
   17120:	andeq	sp, r1, r0, ror #26
   17124:	strdeq	r5, [r1], -ip
   17128:	strdeq	sp, [r1], -r8
   1712c:	andeq	sp, r1, r0, lsl fp
   17130:			; <UNDEFINED> instruction: 0x0001d8b8
   17134:	andeq	sp, r1, r4, ror #22
   17138:	andeq	sp, r1, r0, lsr fp
   1713c:	andeq	sp, r1, r8, lsr #17
   17140:	muleq	r1, r8, r8
   17144:	ldrdeq	sp, [r1], -r8
   17148:	andeq	sp, r1, r8, asr #17
   1714c:	andeq	sp, r1, r8, ror #17
   17150:	andeq	sp, r1, r4, lsr sl
   17154:	mov	r0, sl
   17158:	bl	1aa60 <argp_parse@@Base+0x2664>
   1715c:	ldr	r0, [r6, #12]
   17160:	and	r0, r0, #8
   17164:	b	16318 <argp_failure@@Base+0x46c>
   17168:	mov	r0, sl
   1716c:	bl	1aa60 <argp_parse@@Base+0x2664>
   17170:	ldr	ip, [sl, #28]
   17174:	ldr	r2, [sl, #24]
   17178:	ldr	lr, [sl, #16]
   1717c:	sub	ip, ip, r2
   17180:	b	16288 <argp_failure@@Base+0x3dc>
   17184:	ldr	r2, [r6, #8]
   17188:	cmp	r2, #0
   1718c:	beq	1638c <argp_failure@@Base+0x4e0>
   17190:	ldr	r1, [r6, #12]
   17194:	mov	r0, sl
   17198:	tst	r1, #1
   1719c:	ldrne	r1, [pc, #-136]	; 1711c <argp_failure@@Base+0x1270>
   171a0:	ldreq	r1, [pc, #-136]	; 17120 <argp_failure@@Base+0x1274>
   171a4:	bl	1b10c <argp_parse@@Base+0x2d10>
   171a8:	b	1638c <argp_failure@@Base+0x4e0>
   171ac:	mov	r3, #1
   171b0:	str	r3, [fp, #-132]	; 0xffffff7c
   171b4:	b	16308 <argp_failure@@Base+0x45c>
   171b8:	mov	r0, sl
   171bc:	bl	1aa60 <argp_parse@@Base+0x2664>
   171c0:	b	16e48 <argp_failure@@Base+0xf9c>
   171c4:	mov	r0, sl
   171c8:	bl	1aa60 <argp_parse@@Base+0x2664>
   171cc:	b	163d0 <argp_failure@@Base+0x524>
   171d0:	mov	r1, #1
   171d4:	mov	r0, sl
   171d8:	bl	1b00c <argp_parse@@Base+0x2c10>
   171dc:	cmp	r0, #0
   171e0:	beq	16f1c <argp_failure@@Base+0x1070>
   171e4:	ldr	r2, [sl, #28]
   171e8:	b	16f10 <argp_failure@@Base+0x1064>
   171ec:	mov	r1, #1
   171f0:	mov	r0, sl
   171f4:	bl	1b00c <argp_parse@@Base+0x2c10>
   171f8:	cmp	r0, #0
   171fc:	beq	16efc <argp_failure@@Base+0x1050>
   17200:	ldr	r2, [sl, #28]
   17204:	b	16eec <argp_failure@@Base+0x1040>
   17208:	mvn	r3, #0
   1720c:	str	r3, [r7, #12]
   17210:	ldr	r3, [fp, #-108]	; 0xffffff94
   17214:	ldr	r1, [r3, #4]
   17218:	cmp	r1, #0
   1721c:	beq	16128 <argp_failure@@Base+0x27c>
   17220:	ldr	r2, [fp, #-112]	; 0xffffff90
   17224:	mov	r3, #0
   17228:	str	r3, [r2, #24]
   1722c:	add	r3, r3, #1
   17230:	cmp	r3, r1
   17234:	add	r2, r2, #28
   17238:	bcc	17228 <argp_failure@@Base+0x137c>
   1723c:	ldr	r0, [fp, #-112]	; 0xffffff90
   17240:	ldr	r3, [pc, #-292]	; 17124 <argp_failure@@Base+0x1278>
   17244:	mov	r2, #28
   17248:	bl	113d4 <qsort@plt>
   1724c:	b	16128 <argp_failure@@Base+0x27c>
   17250:	mvn	r3, #0
   17254:	str	r3, [r7, #12]
   17258:	ldr	r3, [fp, #-108]	; 0xffffff94
   1725c:	ldr	r3, [r3, #4]
   17260:	cmp	r3, #0
   17264:	str	r3, [fp, #-120]	; 0xffffff88
   17268:	sub	r6, r3, #1
   1726c:	bne	16acc <argp_failure@@Base+0xc20>
   17270:	b	16128 <argp_failure@@Base+0x27c>
   17274:	mov	r4, r9
   17278:	b	16f90 <argp_failure@@Base+0x10e4>
   1727c:	mov	r1, #1
   17280:	mov	r0, sl
   17284:	bl	1b00c <argp_parse@@Base+0x2c10>
   17288:	cmp	r0, #0
   1728c:	beq	17084 <argp_failure@@Base+0x11d8>
   17290:	ldr	r3, [sl, #28]
   17294:	b	17074 <argp_failure@@Base+0x11c8>
   17298:	mov	r0, sl
   1729c:	bl	1aa60 <argp_parse@@Base+0x2664>
   172a0:	ldr	r3, [sl, #28]
   172a4:	b	17060 <argp_failure@@Base+0x11b4>
   172a8:	mov	r3, r8
   172ac:	mov	r4, r5
   172b0:	b	166f0 <argp_failure@@Base+0x844>
   172b4:	cmp	r5, r6
   172b8:	bhi	17434 <argp_failure@@Base+0x1588>
   172bc:	ldr	r1, [sl, #32]
   172c0:	add	r2, r3, #3
   172c4:	cmp	r1, r2
   172c8:	bcs	172e4 <argp_failure@@Base+0x1438>
   172cc:	mov	r1, #3
   172d0:	mov	r0, sl
   172d4:	bl	1b00c <argp_parse@@Base+0x2c10>
   172d8:	cmp	r0, #0
   172dc:	beq	17000 <argp_failure@@Base+0x1154>
   172e0:	ldr	r3, [sl, #28]
   172e4:	ldr	r2, [pc, #-452]	; 17128 <argp_failure@@Base+0x127c>
   172e8:	ldrh	r1, [r2]
   172ec:	ldrb	r2, [r2, #2]
   172f0:	strh	r1, [r3]
   172f4:	strb	r2, [r3, #2]
   172f8:	ldr	r3, [sl, #28]
   172fc:	add	r3, r3, #3
   17300:	str	r3, [sl, #28]
   17304:	b	17000 <argp_failure@@Base+0x1154>
   17308:	ldr	r3, [fp, #-108]	; 0xffffff94
   1730c:	ldr	r8, [r3]
   17310:	str	r4, [fp, #-88]	; 0xffffffa8
   17314:	str	r4, [fp, #-84]	; 0xffffffac
   17318:	str	r4, [fp, #-80]	; 0xffffffb0
   1731c:	b	16268 <argp_failure@@Base+0x3bc>
   17320:	ldr	r0, [sl, #28]
   17324:	mov	r2, r5
   17328:	mov	r1, r4
   1732c:	bl	11188 <memcpy@plt>
   17330:	ldr	r3, [sl, #28]
   17334:	add	r5, r3, r5
   17338:	str	r5, [sl, #28]
   1733c:	b	17038 <argp_failure@@Base+0x118c>
   17340:	mov	r0, sl
   17344:	bl	1aa60 <argp_parse@@Base+0x2664>
   17348:	ldr	r3, [sl, #28]
   1734c:	ldr	r2, [sl, #24]
   17350:	ldr	r1, [sl, #16]
   17354:	ldr	r6, [sl, #20]
   17358:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1735c:	sub	r2, r3, r2
   17360:	cmp	r2, r1
   17364:	bic	r6, r6, r6, asr #31
   17368:	ldr	r5, [r7, #20]
   1736c:	bls	16fcc <argp_failure@@Base+0x1120>
   17370:	mov	r0, sl
   17374:	bl	1aa60 <argp_parse@@Base+0x2664>
   17378:	ldr	r3, [sl, #28]
   1737c:	ldr	r2, [sl, #24]
   17380:	ldr	r1, [sl, #16]
   17384:	sub	r2, r3, r2
   17388:	str	r5, [sl, #4]
   1738c:	mov	r5, r7
   17390:	ldr	r7, [r7, #20]
   17394:	cmp	r2, r1
   17398:	movls	r5, r7
   1739c:	bls	16fd4 <argp_failure@@Base+0x1128>
   173a0:	mov	r0, sl
   173a4:	bl	1aa60 <argp_parse@@Base+0x2664>
   173a8:	ldr	r5, [r5, #20]
   173ac:	ldr	r3, [sl, #28]
   173b0:	b	16fd4 <argp_failure@@Base+0x1128>
   173b4:	str	r5, [sp]
   173b8:	ldr	r3, [pc, #-660]	; 1712c <argp_failure@@Base+0x1280>
   173bc:	mov	r1, r2
   173c0:	ldr	r0, [fp, #-104]	; 0xffffff98
   173c4:	bl	15eac <argp_failure@@Base>
   173c8:	b	1680c <argp_failure@@Base+0x960>
   173cc:	ldr	r3, [pc, #-676]	; 17130 <argp_failure@@Base+0x1284>
   173d0:	ldr	r1, [pc, #-676]	; 17134 <argp_failure@@Base+0x1288>
   173d4:	mov	r2, #0
   173d8:	ldr	r0, [fp, #-104]	; 0xffffff98
   173dc:	stm	sp, {r1, r3}
   173e0:	mov	r1, r2
   173e4:	ldr	r3, [pc, #-692]	; 17138 <argp_failure@@Base+0x128c>
   173e8:	bl	15eac <argp_failure@@Base>
   173ec:	b	160f8 <argp_failure@@Base+0x24c>
   173f0:	ldr	r3, [pc, #-700]	; 1713c <argp_failure@@Base+0x1290>
   173f4:	b	173d0 <argp_failure@@Base+0x1524>
   173f8:	mov	r1, #1
   173fc:	mov	r0, sl
   17400:	bl	1b00c <argp_parse@@Base+0x2c10>
   17404:	cmp	r0, #0
   17408:	beq	16198 <argp_failure@@Base+0x2ec>
   1740c:	ldr	r3, [sl, #28]
   17410:	b	16188 <argp_failure@@Base+0x2dc>
   17414:	ldr	r0, [r6, #16]
   17418:	sub	r2, fp, #76	; 0x4c
   1741c:	ldr	r1, [r8, #20]
   17420:	bl	14b0c <__assert_fail@plt+0x36d8>
   17424:	b	17084 <argp_failure@@Base+0x11d8>
   17428:	ldr	r0, [fp, #-136]	; 0xffffff78
   1742c:	bl	11200 <funlockfile@plt>
   17430:	b	161f8 <argp_failure@@Base+0x34c>
   17434:	ldr	r2, [sl, #24]
   17438:	ldr	r1, [sl, #16]
   1743c:	sub	r3, r3, r2
   17440:	cmp	r3, r1
   17444:	bhi	175bc <argp_failure@@Base+0x1710>
   17448:	ldr	r3, [sl, #20]
   1744c:	mov	r6, #32
   17450:	cmp	r3, #0
   17454:	subge	r5, r5, r3
   17458:	mov	r7, #1
   1745c:	cmp	r5, #0
   17460:	sub	r5, r5, #1
   17464:	ble	17000 <argp_failure@@Base+0x1154>
   17468:	ldr	r3, [sl, #28]
   1746c:	ldr	r2, [sl, #32]
   17470:	cmp	r3, r2
   17474:	bcs	174a0 <argp_failure@@Base+0x15f4>
   17478:	add	r2, r3, #1
   1747c:	cmp	r5, #0
   17480:	str	r2, [sl, #28]
   17484:	sub	r5, r5, #1
   17488:	strb	r6, [r3]
   1748c:	ble	17000 <argp_failure@@Base+0x1154>
   17490:	ldr	r3, [sl, #28]
   17494:	ldr	r2, [sl, #32]
   17498:	cmp	r3, r2
   1749c:	bcc	17478 <argp_failure@@Base+0x15cc>
   174a0:	mov	r1, r7
   174a4:	mov	r0, sl
   174a8:	bl	1b00c <argp_parse@@Base+0x2c10>
   174ac:	cmp	r0, #0
   174b0:	beq	1745c <argp_failure@@Base+0x15b0>
   174b4:	ldr	r3, [sl, #28]
   174b8:	b	17478 <argp_failure@@Base+0x15cc>
   174bc:	mov	r1, #1
   174c0:	mov	r0, sl
   174c4:	bl	1b00c <argp_parse@@Base+0x2c10>
   174c8:	cmp	r0, #0
   174cc:	beq	17000 <argp_failure@@Base+0x1154>
   174d0:	ldr	r3, [sl, #28]
   174d4:	b	16ff0 <argp_failure@@Base+0x1144>
   174d8:	ldr	r4, [pc, #-912]	; 17150 <argp_failure@@Base+0x12a4>
   174dc:	ldr	r9, [fp, #-112]	; 0xffffff90
   174e0:	ldr	r3, [sl, #28]
   174e4:	ldr	r2, [sl, #32]
   174e8:	cmp	r3, r2
   174ec:	bcs	175a0 <argp_failure@@Base+0x16f4>
   174f0:	add	r1, r3, #1
   174f4:	mov	r2, #10
   174f8:	str	r1, [sl, #28]
   174fc:	strb	r2, [r3]
   17500:	mov	r0, r4
   17504:	bl	112c0 <strlen@plt>
   17508:	subs	r6, r0, #0
   1750c:	beq	17590 <argp_failure@@Base+0x16e4>
   17510:	ldr	r0, [sl, #28]
   17514:	ldr	r2, [sl, #32]
   17518:	add	r3, r0, r6
   1751c:	cmp	r2, r3
   17520:	bcs	1753c <argp_failure@@Base+0x1690>
   17524:	mov	r1, r6
   17528:	mov	r0, sl
   1752c:	bl	1b00c <argp_parse@@Base+0x2c10>
   17530:	cmp	r0, #0
   17534:	beq	17590 <argp_failure@@Base+0x16e4>
   17538:	ldr	r0, [sl, #28]
   1753c:	mov	r2, r6
   17540:	mov	r1, r4
   17544:	bl	11188 <memcpy@plt>
   17548:	ldr	r3, [sl, #28]
   1754c:	add	r3, r3, r6
   17550:	str	r3, [sl, #28]
   17554:	ldr	r2, [sl, #32]
   17558:	cmp	r2, r3
   1755c:	bls	175ec <argp_failure@@Base+0x1740>
   17560:	add	r1, r3, #1
   17564:	mov	r2, #10
   17568:	str	r1, [sl, #28]
   1756c:	strb	r2, [r3]
   17570:	b	165a8 <argp_failure@@Base+0x6fc>
   17574:	mov	r1, #1
   17578:	mov	r0, sl
   1757c:	bl	1b00c <argp_parse@@Base+0x2c10>
   17580:	cmp	r0, #0
   17584:	beq	1623c <argp_failure@@Base+0x390>
   17588:	ldr	r3, [sl, #28]
   1758c:	b	1622c <argp_failure@@Base+0x380>
   17590:	ldr	r3, [sl, #28]
   17594:	b	17554 <argp_failure@@Base+0x16a8>
   17598:	ldr	r3, [pc, #-1120]	; 17140 <argp_failure@@Base+0x1294>
   1759c:	b	173d0 <argp_failure@@Base+0x1524>
   175a0:	mov	r1, #1
   175a4:	mov	r0, sl
   175a8:	bl	1b00c <argp_parse@@Base+0x2c10>
   175ac:	cmp	r0, #0
   175b0:	beq	17500 <argp_failure@@Base+0x1654>
   175b4:	ldr	r3, [sl, #28]
   175b8:	b	174f0 <argp_failure@@Base+0x1644>
   175bc:	mov	r0, sl
   175c0:	bl	1aa60 <argp_parse@@Base+0x2664>
   175c4:	b	17448 <argp_failure@@Base+0x159c>
   175c8:	ldr	r3, [pc, #-1164]	; 17144 <argp_failure@@Base+0x1298>
   175cc:	b	173d0 <argp_failure@@Base+0x1524>
   175d0:	ldr	r3, [pc, #-1168]	; 17148 <argp_failure@@Base+0x129c>
   175d4:	b	173d0 <argp_failure@@Base+0x1524>
   175d8:	mov	r9, r1
   175dc:	ldr	r4, [pc, #-1172]	; 17150 <argp_failure@@Base+0x12a4>
   175e0:	b	174e0 <argp_failure@@Base+0x1634>
   175e4:	ldr	r3, [pc, #-1184]	; 1714c <argp_failure@@Base+0x12a0>
   175e8:	b	173d0 <argp_failure@@Base+0x1524>
   175ec:	mov	r1, #1
   175f0:	mov	r0, sl
   175f4:	bl	1b00c <argp_parse@@Base+0x2c10>
   175f8:	cmp	r0, #0
   175fc:	beq	165a8 <argp_failure@@Base+0x6fc>
   17600:	ldr	r3, [sl, #28]
   17604:	b	17560 <argp_failure@@Base+0x16b4>
   17608:	ldr	r9, [fp, #-112]	; 0xffffff90
   1760c:	ldr	r4, [pc, #-1220]	; 17150 <argp_failure@@Base+0x12a4>
   17610:	b	174e0 <argp_failure@@Base+0x1634>

00017614 <argp_help@@Base>:
   17614:	push	{lr}		; (str lr, [sp, #-4]!)
   17618:	sub	sp, sp, #12
   1761c:	str	r3, [sp]
   17620:	mov	r3, r2
   17624:	mov	r2, r1
   17628:	mov	r1, #0
   1762c:	bl	160b4 <argp_failure@@Base+0x208>
   17630:	add	sp, sp, #12
   17634:	pop	{pc}		; (ldr pc, [sp], #4)

00017638 <argp_state_help@@Base>:
   17638:	push	{r4, r5, lr}
   1763c:	subs	r4, r0, #0
   17640:	sub	sp, sp, #12
   17644:	mov	r5, r2
   17648:	beq	176a8 <argp_state_help@@Base+0x70>
   1764c:	ldr	r3, [r4, #16]
   17650:	tst	r3, #2
   17654:	bne	176a0 <argp_state_help@@Base+0x68>
   17658:	cmp	r1, #0
   1765c:	beq	176a0 <argp_state_help@@Base+0x68>
   17660:	tst	r3, #64	; 0x40
   17664:	ldr	r3, [r4, #40]	; 0x28
   17668:	orrne	r5, r5, #128	; 0x80
   1766c:	ldr	r0, [r4]
   17670:	mov	r2, r1
   17674:	str	r3, [sp]
   17678:	mov	r1, r4
   1767c:	mov	r3, r5
   17680:	bl	160b4 <argp_failure@@Base+0x208>
   17684:	ldr	r3, [r4, #16]
   17688:	tst	r3, #32
   1768c:	bne	176a0 <argp_state_help@@Base+0x68>
   17690:	ands	r0, r5, #256	; 0x100
   17694:	bne	176d4 <argp_state_help@@Base+0x9c>
   17698:	tst	r5, #512	; 0x200
   1769c:	bne	176d0 <argp_state_help@@Base+0x98>
   176a0:	add	sp, sp, #12
   176a4:	pop	{r4, r5, pc}
   176a8:	cmp	r1, #0
   176ac:	beq	176a0 <argp_state_help@@Base+0x68>
   176b0:	ldr	r3, [pc, #40]	; 176e0 <argp_state_help@@Base+0xa8>
   176b4:	mov	r2, r1
   176b8:	mov	r1, r4
   176bc:	ldr	ip, [r3]
   176c0:	mov	r3, r5
   176c4:	str	ip, [sp]
   176c8:	bl	160b4 <argp_failure@@Base+0x208>
   176cc:	b	17690 <argp_state_help@@Base+0x58>
   176d0:	bl	112a8 <exit@plt>
   176d4:	ldr	r3, [pc, #8]	; 176e4 <argp_state_help@@Base+0xac>
   176d8:	ldr	r0, [r3]
   176dc:	bl	112a8 <exit@plt>
   176e0:	ldrdeq	pc, [r2], -r0
   176e4:			; <UNDEFINED> instruction: 0x0002f3bc

000176e8 <argp_error@@Base>:
   176e8:	push	{r1, r2, r3}
   176ec:	push	{r4, r5, lr}
   176f0:	subs	r5, r0, #0
   176f4:	sub	sp, sp, #16
   176f8:	beq	17808 <argp_error@@Base+0x120>
   176fc:	ldr	r3, [r5, #16]
   17700:	tst	r3, #2
   17704:	bne	177f8 <argp_error@@Base+0x110>
   17708:	ldr	r4, [r5, #44]	; 0x2c
   1770c:	cmp	r4, #0
   17710:	beq	177f8 <argp_error@@Base+0x110>
   17714:	mov	r0, r4
   17718:	bl	113b0 <flockfile@plt>
   1771c:	ldr	r0, [r5, #40]	; 0x28
   17720:	add	r3, sp, #32
   17724:	str	r3, [sp, #12]
   17728:	mov	r1, r4
   1772c:	bl	110e0 <fputs_unlocked@plt>
   17730:	ldr	r3, [r4, #20]
   17734:	ldr	r2, [r4, #24]
   17738:	cmp	r3, r2
   1773c:	addcc	r1, r3, #1
   17740:	movcc	r2, #58	; 0x3a
   17744:	strcc	r1, [r4, #20]
   17748:	strbcc	r2, [r3]
   1774c:	bcs	17834 <argp_error@@Base+0x14c>
   17750:	ldr	r3, [r4, #20]
   17754:	ldr	r2, [r4, #24]
   17758:	cmp	r3, r2
   1775c:	addcc	r1, r3, #1
   17760:	movcc	r2, #32
   17764:	strcc	r1, [r4, #20]
   17768:	strbcc	r2, [r3]
   1776c:	bcs	17854 <argp_error@@Base+0x16c>
   17770:	ldr	r1, [sp, #28]
   17774:	ldr	r2, [sp, #12]
   17778:	mov	r0, r4
   1777c:	bl	11374 <vfprintf@plt>
   17780:	ldr	r3, [r4, #20]
   17784:	ldr	r2, [r4, #24]
   17788:	cmp	r3, r2
   1778c:	addcc	r1, r3, #1
   17790:	movcc	r2, #10
   17794:	strcc	r1, [r4, #20]
   17798:	strbcc	r2, [r3]
   1779c:	bcs	17844 <argp_error@@Base+0x15c>
   177a0:	cmp	r5, #0
   177a4:	beq	17864 <argp_error@@Base+0x17c>
   177a8:	ldr	r3, [r5, #16]
   177ac:	tst	r3, #2
   177b0:	bne	177f0 <argp_error@@Base+0x108>
   177b4:	ldr	r2, [r5, #40]	; 0x28
   177b8:	tst	r3, #64	; 0x40
   177bc:	moveq	r3, #260	; 0x104
   177c0:	movne	r3, #388	; 0x184
   177c4:	ldr	r0, [r5]
   177c8:	mov	r1, r5
   177cc:	str	r2, [sp]
   177d0:	mov	r2, r4
   177d4:	bl	160b4 <argp_failure@@Base+0x208>
   177d8:	ldr	r3, [r5, #16]
   177dc:	tst	r3, #32
   177e0:	bne	177f0 <argp_error@@Base+0x108>
   177e4:	ldr	r3, [pc, #156]	; 17888 <argp_error@@Base+0x1a0>
   177e8:	ldr	r0, [r3]
   177ec:	bl	112a8 <exit@plt>
   177f0:	mov	r0, r4
   177f4:	bl	11200 <funlockfile@plt>
   177f8:	add	sp, sp, #16
   177fc:	pop	{r4, r5, lr}
   17800:	add	sp, sp, #12
   17804:	bx	lr
   17808:	ldr	r3, [pc, #124]	; 1788c <argp_error@@Base+0x1a4>
   1780c:	ldr	r4, [r3]
   17810:	cmp	r4, #0
   17814:	beq	177f8 <argp_error@@Base+0x110>
   17818:	mov	r0, r4
   1781c:	bl	113b0 <flockfile@plt>
   17820:	ldr	r2, [pc, #104]	; 17890 <argp_error@@Base+0x1a8>
   17824:	add	r3, sp, #32
   17828:	str	r3, [sp, #12]
   1782c:	ldr	r0, [r2]
   17830:	b	17728 <argp_error@@Base+0x40>
   17834:	mov	r1, #58	; 0x3a
   17838:	mov	r0, r4
   1783c:	bl	11344 <__overflow@plt>
   17840:	b	17750 <argp_error@@Base+0x68>
   17844:	mov	r1, #10
   17848:	mov	r0, r4
   1784c:	bl	11344 <__overflow@plt>
   17850:	b	177a0 <argp_error@@Base+0xb8>
   17854:	mov	r1, #32
   17858:	mov	r0, r4
   1785c:	bl	11344 <__overflow@plt>
   17860:	b	17770 <argp_error@@Base+0x88>
   17864:	ldr	r1, [pc, #36]	; 17890 <argp_error@@Base+0x1a8>
   17868:	mov	r2, r4
   1786c:	mov	r3, #260	; 0x104
   17870:	ldr	r0, [r1]
   17874:	mov	r1, r5
   17878:	str	r0, [sp]
   1787c:	mov	r0, r5
   17880:	bl	160b4 <argp_failure@@Base+0x208>
   17884:	b	177e4 <argp_error@@Base+0xfc>
   17888:			; <UNDEFINED> instruction: 0x0002f3bc
   1788c:	ldrdeq	pc, [r2], -r8
   17890:	ldrdeq	pc, [r2], -r0
   17894:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17898:	sub	sp, sp, #36	; 0x24
   1789c:	ldr	sl, [r0]
   178a0:	str	r0, [sp, #12]
   178a4:	cmp	sl, #0
   178a8:	str	r1, [sp, #16]
   178ac:	str	r2, [sp, #20]
   178b0:	mov	r9, r3
   178b4:	ldr	r8, [r0, #16]
   178b8:	ldr	r7, [sp, #72]	; 0x48
   178bc:	beq	17a88 <argp_error@@Base+0x3a0>
   178c0:	add	fp, sl, #24
   178c4:	str	r8, [sp, #28]
   178c8:	str	r3, [sp, #24]
   178cc:	ldr	r4, [fp, #-20]	; 0xffffffec
   178d0:	sub	r1, fp, #24
   178d4:	cmp	r4, #0
   178d8:	bne	178e8 <argp_error@@Base+0x200>
   178dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178e0:	cmp	r3, #0
   178e4:	beq	17a5c <argp_error@@Base+0x374>
   178e8:	ldr	r3, [fp, #-12]
   178ec:	tst	r3, #4
   178f0:	moveq	sl, r1
   178f4:	moveq	r5, r3
   178f8:	ldrne	r5, [sl, #12]
   178fc:	ands	r5, r5, #8
   17900:	bne	17a44 <argp_error@@Base+0x35c>
   17904:	tst	r3, #8
   17908:	bne	17984 <argp_error@@Base+0x29c>
   1790c:	sub	r3, r4, #1
   17910:	cmp	r3, #254	; 0xfe
   17914:	bhi	17984 <argp_error@@Base+0x29c>
   17918:	bl	11290 <__ctype_b_loc@plt>
   1791c:	lsl	r3, r4, #1
   17920:	ldr	r1, [r0]
   17924:	ldrh	r3, [r1, r3]
   17928:	tst	r3, #16384	; 0x4000
   1792c:	beq	17984 <argp_error@@Base+0x29c>
   17930:	ldr	r3, [r7, #4]
   17934:	add	r1, r3, #1
   17938:	str	r1, [r7, #4]
   1793c:	strb	r4, [r3]
   17940:	ldr	r3, [sl, #8]
   17944:	cmp	r3, #0
   17948:	beq	17978 <argp_error@@Base+0x290>
   1794c:	ldr	r3, [r7, #4]
   17950:	mov	r2, #58	; 0x3a
   17954:	add	r1, r3, #1
   17958:	str	r1, [r7, #4]
   1795c:	strb	r2, [r3]
   17960:	ldr	r3, [sl, #12]
   17964:	tst	r3, #1
   17968:	ldrne	r3, [r7, #4]
   1796c:	addne	r1, r3, #1
   17970:	strne	r1, [r7, #4]
   17974:	strbne	r2, [r3]
   17978:	ldr	r3, [r7, #4]
   1797c:	mov	r2, #0
   17980:	strb	r2, [r3]
   17984:	ldr	r4, [fp, #-24]	; 0xffffffe8
   17988:	cmp	r4, #0
   1798c:	beq	17a44 <argp_error@@Base+0x35c>
   17990:	ldr	r8, [r7]
   17994:	ldr	r6, [r8, #8]
   17998:	ldr	r0, [r6]
   1799c:	cmp	r0, #0
   179a0:	beq	179c4 <argp_error@@Base+0x2dc>
   179a4:	mov	r9, r6
   179a8:	mov	r1, r4
   179ac:	bl	11104 <strcmp@plt>
   179b0:	cmp	r0, #0
   179b4:	beq	17a4c <argp_error@@Base+0x364>
   179b8:	ldr	r0, [r9, #16]!
   179bc:	cmp	r0, #0
   179c0:	bne	179a8 <argp_error@@Base+0x2c0>
   179c4:	ldr	r3, [sl, #8]
   179c8:	ldr	r1, [r7, #8]
   179cc:	cmp	r3, #0
   179d0:	str	r4, [r1]
   179d4:	beq	179e8 <argp_error@@Base+0x300>
   179d8:	ldr	r3, [sl, #12]
   179dc:	tst	r3, #1
   179e0:	moveq	r5, #1
   179e4:	movne	r5, #2
   179e8:	str	r5, [r1, #4]
   179ec:	ldr	ip, [fp, #-20]	; 0xffffffec
   179f0:	mov	r3, #0
   179f4:	cmp	ip, r3
   179f8:	str	r3, [r1, #8]
   179fc:	ldr	r2, [sp, #24]
   17a00:	ldr	r3, [r8, #48]	; 0x30
   17a04:	ldreq	ip, [sl, #4]
   17a08:	sub	r3, r2, r3
   17a0c:	bic	ip, ip, #-16777216	; 0xff000000
   17a10:	asr	r3, r3, #2
   17a14:	add	lr, r1, #16
   17a18:	rsb	r0, r3, r3, lsl #3
   17a1c:	add	r0, r0, r0, lsl #6
   17a20:	add	r0, r3, r0, lsl #3
   17a24:	rsb	r0, r0, r0, lsl #15
   17a28:	add	r3, r3, r0, lsl #3
   17a2c:	add	r3, r3, #1
   17a30:	add	r3, ip, r3, lsl #24
   17a34:	str	r3, [r1, #12]
   17a38:	mov	r3, #0
   17a3c:	str	lr, [r7, #8]
   17a40:	str	r3, [r1, #16]
   17a44:	add	fp, fp, #24
   17a48:	b	178cc <argp_error@@Base+0x1e4>
   17a4c:	sub	r6, r9, r6
   17a50:	cmn	r6, #15
   17a54:	bge	17a44 <argp_error@@Base+0x35c>
   17a58:	b	179c4 <argp_error@@Base+0x2dc>
   17a5c:	ldr	r3, [fp, #-8]
   17a60:	cmp	r3, #0
   17a64:	bne	178e8 <argp_error@@Base+0x200>
   17a68:	ldr	r3, [fp, #-4]
   17a6c:	cmp	r3, #0
   17a70:	bne	178e8 <argp_error@@Base+0x200>
   17a74:	ldr	r3, [sp, #12]
   17a78:	ldr	r8, [sp, #28]
   17a7c:	ldr	r9, [sp, #24]
   17a80:	ldr	r3, [r3, #4]
   17a84:	b	17a9c <argp_error@@Base+0x3b4>
   17a88:	ldr	r3, [r0, #4]
   17a8c:	cmp	r3, #0
   17a90:	moveq	r0, r9
   17a94:	moveq	r9, r3
   17a98:	beq	17b0c <argp_error@@Base+0x424>
   17a9c:	ldr	r2, [r7, #4]
   17aa0:	ldr	r1, [sp, #12]
   17aa4:	str	r3, [r9]
   17aa8:	cmp	r8, #0
   17aac:	stmib	r9, {r1, r2}
   17ab0:	ldr	r2, [sp, #16]
   17ab4:	mov	r3, #0
   17ab8:	str	r2, [r9, #16]
   17abc:	ldr	r2, [sp, #20]
   17ac0:	str	r3, [r9, #12]
   17ac4:	str	r2, [r9, #20]
   17ac8:	str	r3, [r9, #24]
   17acc:	str	r3, [r9, #32]
   17ad0:	str	r3, [r9, #28]
   17ad4:	beq	17b08 <argp_error@@Base+0x420>
   17ad8:	ldr	r2, [r8]
   17adc:	cmp	r2, r3
   17ae0:	beq	17b54 <argp_error@@Base+0x46c>
   17ae4:	add	r3, r3, #1
   17ae8:	ldr	r2, [r8, r3, lsl #4]
   17aec:	cmp	r2, #0
   17af0:	bne	17ae4 <argp_error@@Base+0x3fc>
   17af4:	lsl	r3, r3, #2
   17af8:	ldr	r2, [r7, #12]
   17afc:	add	r3, r2, r3
   17b00:	str	r2, [r9, #28]
   17b04:	str	r3, [r7, #12]
   17b08:	add	r0, r9, #36	; 0x24
   17b0c:	cmp	r8, #0
   17b10:	beq	17b4c <argp_error@@Base+0x464>
   17b14:	ldr	r1, [r8]
   17b18:	cmp	r1, #0
   17b1c:	beq	17b4c <argp_error@@Base+0x464>
   17b20:	mov	r2, #0
   17b24:	add	r4, r2, #1
   17b28:	mov	r3, r0
   17b2c:	str	r7, [sp]
   17b30:	mov	r0, r1
   17b34:	mov	r1, r9
   17b38:	bl	17894 <argp_error@@Base+0x1ac>
   17b3c:	ldr	r1, [r8, r4, lsl #4]
   17b40:	mov	r2, r4
   17b44:	cmp	r1, #0
   17b48:	bne	17b24 <argp_error@@Base+0x43c>
   17b4c:	add	sp, sp, #36	; 0x24
   17b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b54:	mov	r3, r2
   17b58:	b	17af8 <argp_error@@Base+0x410>
   17b5c:	cmp	r0, #86	; 0x56
   17b60:	beq	17b6c <argp_error@@Base+0x484>
   17b64:	mov	r0, #7
   17b68:	bx	lr
   17b6c:	ldr	r3, [pc, #104]	; 17bdc <argp_error@@Base+0x4f4>
   17b70:	push	{r4, lr}
   17b74:	mov	r4, r2
   17b78:	ldr	r3, [r3]
   17b7c:	cmp	r3, #0
   17b80:	beq	17ba4 <argp_error@@Base+0x4bc>
   17b84:	mov	r1, r2
   17b88:	ldr	r0, [r2, #48]	; 0x30
   17b8c:	blx	r3
   17b90:	ldr	r0, [r4, #16]
   17b94:	ands	r0, r0, #32
   17b98:	beq	17bd8 <argp_error@@Base+0x4f0>
   17b9c:	mov	r0, #0
   17ba0:	pop	{r4, pc}
   17ba4:	ldr	r3, [pc, #52]	; 17be0 <argp_error@@Base+0x4f8>
   17ba8:	ldr	r2, [r3]
   17bac:	cmp	r2, #0
   17bb0:	beq	17bc4 <argp_error@@Base+0x4dc>
   17bb4:	ldr	r1, [pc, #40]	; 17be4 <argp_error@@Base+0x4fc>
   17bb8:	ldr	r0, [r4, #48]	; 0x30
   17bbc:	bl	112d8 <fprintf@plt>
   17bc0:	b	17b90 <argp_error@@Base+0x4a8>
   17bc4:	ldr	r2, [pc, #28]	; 17be8 <argp_error@@Base+0x500>
   17bc8:	ldr	r1, [pc, #28]	; 17bec <argp_error@@Base+0x504>
   17bcc:	mov	r0, r4
   17bd0:	bl	176e8 <argp_error@@Base>
   17bd4:	b	17b90 <argp_error@@Base+0x4a8>
   17bd8:	bl	112a8 <exit@plt>
   17bdc:	andeq	pc, r2, r0, lsl r4	; <UNPREDICTABLE>
   17be0:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   17be4:			; <UNDEFINED> instruction: 0x0001deb4
   17be8:	andeq	sp, r1, r8, lsr #26
   17bec:	andeq	sp, r1, ip
   17bf0:	cmn	r0, #3
   17bf4:	push	{r4, r5, lr}
   17bf8:	mov	r4, r2
   17bfc:	sub	sp, sp, #12
   17c00:	beq	17ce4 <argp_error@@Base+0x5fc>
   17c04:	ble	17c74 <argp_error@@Base+0x58c>
   17c08:	cmn	r0, #2
   17c0c:	beq	17c34 <argp_error@@Base+0x54c>
   17c10:	cmp	r0, #63	; 0x3f
   17c14:	bne	17cd8 <argp_error@@Base+0x5f0>
   17c18:	mov	r0, r4
   17c1c:	ldr	r2, [pc, #236]	; 17d10 <argp_error@@Base+0x628>
   17c20:	ldr	r1, [r4, #48]	; 0x30
   17c24:	bl	17638 <argp_state_help@@Base>
   17c28:	mov	r0, #0
   17c2c:	add	sp, sp, #12
   17c30:	pop	{r4, r5, pc}
   17c34:	ldr	r3, [pc, #216]	; 17d14 <argp_error@@Base+0x62c>
   17c38:	mov	r0, r1
   17c3c:	str	r1, [sp, #4]
   17c40:	str	r1, [r3]
   17c44:	bl	192cc <argp_parse@@Base+0xed0>
   17c48:	ldr	r3, [r4, #16]
   17c4c:	ldr	r2, [pc, #196]	; 17d18 <argp_error@@Base+0x630>
   17c50:	and	r3, r3, #3
   17c54:	cmp	r3, #1
   17c58:	ldr	r1, [sp, #4]
   17c5c:	str	r0, [r4, #40]	; 0x28
   17c60:	str	r0, [r2]
   17c64:	beq	17d00 <argp_error@@Base+0x618>
   17c68:	mov	r0, #0
   17c6c:	add	sp, sp, #12
   17c70:	pop	{r4, r5, pc}
   17c74:	cmn	r0, #4
   17c78:	bne	17cd8 <argp_error@@Base+0x5f0>
   17c7c:	cmp	r1, #0
   17c80:	ldr	r0, [pc, #148]	; 17d1c <argp_error@@Base+0x634>
   17c84:	mov	r2, #10
   17c88:	movne	r0, r1
   17c8c:	mov	r1, #0
   17c90:	bl	11110 <strtol@plt>
   17c94:	ldr	r4, [pc, #132]	; 17d20 <argp_error@@Base+0x638>
   17c98:	str	r0, [r4]
   17c9c:	ldr	r3, [r4]
   17ca0:	cmp	r3, #0
   17ca4:	sub	r3, r3, #1
   17ca8:	str	r3, [r4]
   17cac:	ble	17c68 <argp_error@@Base+0x580>
   17cb0:	mov	r5, #1
   17cb4:	mov	r0, r5
   17cb8:	bl	111c4 <sleep@plt>
   17cbc:	ldr	r3, [r4]
   17cc0:	cmp	r3, #0
   17cc4:	sub	r3, r3, #1
   17cc8:	str	r3, [r4]
   17ccc:	bgt	17cb4 <argp_error@@Base+0x5cc>
   17cd0:	mov	r0, #0
   17cd4:	b	17c6c <argp_error@@Base+0x584>
   17cd8:	mov	r0, #7
   17cdc:	add	sp, sp, #12
   17ce0:	pop	{r4, r5, pc}
   17ce4:	mov	r0, r4
   17ce8:	ldr	r2, [pc, #52]	; 17d24 <argp_error@@Base+0x63c>
   17cec:	ldr	r1, [r4, #48]	; 0x30
   17cf0:	bl	17638 <argp_state_help@@Base>
   17cf4:	mov	r0, #0
   17cf8:	add	sp, sp, #12
   17cfc:	pop	{r4, r5, pc}
   17d00:	ldr	r3, [r4, #8]
   17d04:	mov	r0, #0
   17d08:	str	r1, [r3]
   17d0c:	b	17c2c <argp_error@@Base+0x544>
   17d10:	andeq	r0, r0, sl, ror r2
   17d14:	ldrdeq	pc, [r2], -r4
   17d18:	ldrdeq	pc, [r2], -r0
   17d1c:	andeq	sp, r1, ip, asr #26
   17d20:	andeq	pc, r2, ip, lsl #8
   17d24:	andeq	r0, r0, r1, lsl #4
   17d28:	ldr	r3, [r0]
   17d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d30:	cmp	r3, #0
   17d34:	sub	sp, sp, #12
   17d38:	ldr	lr, [r0, #16]
   17d3c:	beq	17d74 <argp_error@@Base+0x68c>
   17d40:	ldr	r0, [r1, #8]
   17d44:	mov	r2, #0
   17d48:	add	r0, r0, #1
   17d4c:	str	r0, [r1, #8]
   17d50:	add	r3, r3, #24
   17d54:	ldr	r0, [r3, #-20]	; 0xffffffec
   17d58:	cmp	r0, #0
   17d5c:	bne	17d6c <argp_error@@Base+0x684>
   17d60:	ldr	r0, [r3, #-24]	; 0xffffffe8
   17d64:	cmp	r0, #0
   17d68:	beq	1832c <argp_error@@Base+0xc44>
   17d6c:	add	r2, r2, #1
   17d70:	b	17d50 <argp_error@@Base+0x668>
   17d74:	ldr	r3, [r0, #4]
   17d78:	cmp	r3, #0
   17d7c:	ldrne	r3, [r1, #8]
   17d80:	addne	r3, r3, #1
   17d84:	strne	r3, [r1, #8]
   17d88:	cmp	lr, #0
   17d8c:	beq	18118 <argp_error@@Base+0xa30>
   17d90:	ldr	r0, [lr]
   17d94:	cmp	r0, #0
   17d98:	beq	18118 <argp_error@@Base+0xa30>
   17d9c:	mov	r6, r1
   17da0:	str	lr, [sp]
   17da4:	ldr	r2, [r0]
   17da8:	ldr	r7, [r0, #16]
   17dac:	cmp	r2, #0
   17db0:	beq	17de8 <argp_error@@Base+0x700>
   17db4:	ldr	r0, [r6, #8]
   17db8:	mov	r1, #0
   17dbc:	add	r0, r0, #1
   17dc0:	str	r0, [r6, #8]
   17dc4:	add	r2, r2, #24
   17dc8:	ldr	r0, [r2, #-20]	; 0xffffffec
   17dcc:	cmp	r0, #0
   17dd0:	bne	17de0 <argp_error@@Base+0x6f8>
   17dd4:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17dd8:	cmp	r0, #0
   17ddc:	beq	1835c <argp_error@@Base+0xc74>
   17de0:	add	r1, r1, #1
   17de4:	b	17dc4 <argp_error@@Base+0x6dc>
   17de8:	ldr	r2, [r0, #4]
   17dec:	cmp	r2, #0
   17df0:	ldrne	r2, [r6, #8]
   17df4:	addne	r2, r2, #1
   17df8:	strne	r2, [r6, #8]
   17dfc:	cmp	r7, #0
   17e00:	beq	183bc <argp_error@@Base+0xcd4>
   17e04:	ldr	r1, [r7]
   17e08:	cmp	r1, #0
   17e0c:	beq	183bc <argp_error@@Base+0xcd4>
   17e10:	str	r7, [sp, #4]
   17e14:	ldr	r2, [r1]
   17e18:	ldr	r8, [r1, #16]
   17e1c:	cmp	r2, #0
   17e20:	beq	17e58 <argp_error@@Base+0x770>
   17e24:	ldr	r0, [r6, #8]
   17e28:	mov	r1, #0
   17e2c:	add	r0, r0, #1
   17e30:	str	r0, [r6, #8]
   17e34:	add	r2, r2, #24
   17e38:	ldr	r0, [r2, #-20]	; 0xffffffec
   17e3c:	cmp	r0, #0
   17e40:	bne	17e50 <argp_error@@Base+0x768>
   17e44:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17e48:	cmp	r0, #0
   17e4c:	beq	1838c <argp_error@@Base+0xca4>
   17e50:	add	r1, r1, #1
   17e54:	b	17e34 <argp_error@@Base+0x74c>
   17e58:	ldr	r2, [r1, #4]
   17e5c:	cmp	r2, #0
   17e60:	ldrne	r2, [r6, #8]
   17e64:	addne	r2, r2, #1
   17e68:	strne	r2, [r6, #8]
   17e6c:	cmp	r8, #0
   17e70:	beq	183c4 <argp_error@@Base+0xcdc>
   17e74:	ldr	r1, [r8]
   17e78:	cmp	r1, #0
   17e7c:	beq	183c4 <argp_error@@Base+0xcdc>
   17e80:	ldr	r2, [r1]
   17e84:	ldr	r9, [r1, #16]
   17e88:	cmp	r2, #0
   17e8c:	beq	17ec4 <argp_error@@Base+0x7dc>
   17e90:	ldr	r0, [r6, #8]
   17e94:	mov	r1, #0
   17e98:	add	r0, r0, #1
   17e9c:	str	r0, [r6, #8]
   17ea0:	add	r2, r2, #24
   17ea4:	ldr	r0, [r2, #-20]	; 0xffffffec
   17ea8:	cmp	r0, #0
   17eac:	bne	17ebc <argp_error@@Base+0x7d4>
   17eb0:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17eb4:	cmp	r0, #0
   17eb8:	beq	183cc <argp_error@@Base+0xce4>
   17ebc:	add	r1, r1, #1
   17ec0:	b	17ea0 <argp_error@@Base+0x7b8>
   17ec4:	ldr	r2, [r1, #4]
   17ec8:	cmp	r2, #0
   17ecc:	ldrne	r2, [r6, #8]
   17ed0:	addne	r2, r2, #1
   17ed4:	strne	r2, [r6, #8]
   17ed8:	cmp	r9, #0
   17edc:	beq	180c8 <argp_error@@Base+0x9e0>
   17ee0:	ldr	r1, [r9]
   17ee4:	cmp	r1, #0
   17ee8:	beq	180c8 <argp_error@@Base+0x9e0>
   17eec:	ldr	r2, [r1]
   17ef0:	ldr	sl, [r1, #16]
   17ef4:	cmp	r2, #0
   17ef8:	beq	17f60 <argp_error@@Base+0x878>
   17efc:	ldr	r0, [r6, #8]
   17f00:	mov	r1, #0
   17f04:	add	r0, r0, #1
   17f08:	str	r0, [r6, #8]
   17f0c:	b	17f14 <argp_error@@Base+0x82c>
   17f10:	add	r1, r1, #1
   17f14:	add	r2, r2, #24
   17f18:	ldr	r0, [r2, #-20]	; 0xffffffec
   17f1c:	cmp	r0, #0
   17f20:	bne	17f10 <argp_error@@Base+0x828>
   17f24:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17f28:	cmp	r0, #0
   17f2c:	bne	17f10 <argp_error@@Base+0x828>
   17f30:	ldr	r0, [r2, #-8]
   17f34:	cmp	r0, #0
   17f38:	bne	17f10 <argp_error@@Base+0x828>
   17f3c:	ldr	r0, [r2, #-4]
   17f40:	cmp	r0, #0
   17f44:	bne	17f10 <argp_error@@Base+0x828>
   17f48:	ldm	r6, {r0, r2}
   17f4c:	add	ip, r1, r1, lsl #1
   17f50:	add	r0, r0, ip
   17f54:	add	r1, r2, r1
   17f58:	stm	r6, {r0, r1}
   17f5c:	b	17f74 <argp_error@@Base+0x88c>
   17f60:	ldr	r2, [r1, #4]
   17f64:	cmp	r2, #0
   17f68:	ldrne	r2, [r6, #8]
   17f6c:	addne	r2, r2, #1
   17f70:	strne	r2, [r6, #8]
   17f74:	cmp	sl, #0
   17f78:	beq	18324 <argp_error@@Base+0xc3c>
   17f7c:	ldr	r1, [sl]
   17f80:	cmp	r1, #0
   17f84:	beq	18324 <argp_error@@Base+0xc3c>
   17f88:	ldr	r2, [r1]
   17f8c:	ldr	fp, [r1, #16]
   17f90:	cmp	r2, #0
   17f94:	beq	182fc <argp_error@@Base+0xc14>
   17f98:	ldr	r0, [r6, #8]
   17f9c:	mov	r1, #0
   17fa0:	add	r0, r0, #1
   17fa4:	str	r0, [r6, #8]
   17fa8:	b	17fb0 <argp_error@@Base+0x8c8>
   17fac:	add	r1, r1, #1
   17fb0:	add	r2, r2, #24
   17fb4:	ldr	r0, [r2, #-20]	; 0xffffffec
   17fb8:	cmp	r0, #0
   17fbc:	bne	17fac <argp_error@@Base+0x8c4>
   17fc0:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17fc4:	cmp	r0, #0
   17fc8:	bne	17fac <argp_error@@Base+0x8c4>
   17fcc:	ldr	r0, [r2, #-8]
   17fd0:	cmp	r0, #0
   17fd4:	bne	17fac <argp_error@@Base+0x8c4>
   17fd8:	ldr	r0, [r2, #-4]
   17fdc:	cmp	r0, #0
   17fe0:	bne	17fac <argp_error@@Base+0x8c4>
   17fe4:	ldm	r6, {r0, r2}
   17fe8:	add	ip, r1, r1, lsl #1
   17fec:	add	r0, r0, ip
   17ff0:	add	r1, r2, r1
   17ff4:	stm	r6, {r0, r1}
   17ff8:	cmp	fp, #0
   17ffc:	beq	1831c <argp_error@@Base+0xc34>
   18000:	ldr	r0, [fp]
   18004:	cmp	r0, #0
   18008:	beq	1831c <argp_error@@Base+0xc34>
   1800c:	ldr	r2, [r0]
   18010:	ldr	r5, [r0, #16]
   18014:	cmp	r2, #0
   18018:	beq	18120 <argp_error@@Base+0xa38>
   1801c:	ldr	r0, [r6, #8]
   18020:	mov	r1, #0
   18024:	add	r0, r0, #1
   18028:	str	r0, [r6, #8]
   1802c:	b	18034 <argp_error@@Base+0x94c>
   18030:	add	r1, r1, #1
   18034:	add	r2, r2, #24
   18038:	ldr	r0, [r2, #-20]	; 0xffffffec
   1803c:	cmp	r0, #0
   18040:	bne	18030 <argp_error@@Base+0x948>
   18044:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18048:	cmp	r0, #0
   1804c:	bne	18030 <argp_error@@Base+0x948>
   18050:	ldr	r0, [r2, #-8]
   18054:	cmp	r0, #0
   18058:	bne	18030 <argp_error@@Base+0x948>
   1805c:	ldr	r0, [r2, #-4]
   18060:	cmp	r0, #0
   18064:	bne	18030 <argp_error@@Base+0x948>
   18068:	ldm	r6, {r0, r2}
   1806c:	add	ip, r1, r1, lsl #1
   18070:	cmp	r5, #0
   18074:	add	r0, r0, ip
   18078:	add	r1, r2, r1
   1807c:	stm	r6, {r0, r1}
   18080:	bne	1813c <argp_error@@Base+0xa54>
   18084:	ldr	r1, [r6, #12]
   18088:	ldr	r0, [fp, #16]!
   1808c:	add	r2, r1, #1
   18090:	cmp	r0, #0
   18094:	str	r2, [r6, #12]
   18098:	bne	1800c <argp_error@@Base+0x924>
   1809c:	ldr	r1, [sl, #16]!
   180a0:	add	r2, r2, #1
   180a4:	cmp	r1, #0
   180a8:	str	r2, [r6, #12]
   180ac:	bne	17f88 <argp_error@@Base+0x8a0>
   180b0:	ldr	r1, [r9, #16]!
   180b4:	add	r2, r2, #1
   180b8:	cmp	r1, #0
   180bc:	str	r2, [r6, #12]
   180c0:	bne	17eec <argp_error@@Base+0x804>
   180c4:	b	180cc <argp_error@@Base+0x9e4>
   180c8:	ldr	r2, [r6, #12]
   180cc:	ldr	r1, [r8, #16]!
   180d0:	add	r2, r2, #1
   180d4:	cmp	r1, #0
   180d8:	str	r2, [r6, #12]
   180dc:	bne	17e80 <argp_error@@Base+0x798>
   180e0:	ldr	r3, [sp, #4]
   180e4:	add	r2, r2, #1
   180e8:	ldr	r1, [r3, #16]!
   180ec:	str	r2, [r6, #12]
   180f0:	cmp	r1, #0
   180f4:	str	r3, [sp, #4]
   180f8:	bne	17e14 <argp_error@@Base+0x72c>
   180fc:	ldr	r3, [sp]
   18100:	add	r2, r2, #1
   18104:	ldr	r0, [r3, #16]!
   18108:	str	r2, [r6, #12]
   1810c:	cmp	r0, #0
   18110:	str	r3, [sp]
   18114:	bne	17da4 <argp_error@@Base+0x6bc>
   18118:	add	sp, sp, #12
   1811c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18120:	ldr	r2, [r0, #4]
   18124:	cmp	r2, #0
   18128:	ldrne	r2, [r6, #8]
   1812c:	addne	r2, r2, #1
   18130:	strne	r2, [r6, #8]
   18134:	cmp	r5, #0
   18138:	beq	18084 <argp_error@@Base+0x99c>
   1813c:	ldr	r0, [r5]
   18140:	cmp	r0, #0
   18144:	beq	18084 <argp_error@@Base+0x99c>
   18148:	ldr	r2, [r0]
   1814c:	ldr	r4, [r0, #16]
   18150:	cmp	r2, #0
   18154:	beq	182b4 <argp_error@@Base+0xbcc>
   18158:	ldr	r0, [r6, #8]
   1815c:	mov	r1, #0
   18160:	add	r0, r0, #1
   18164:	str	r0, [r6, #8]
   18168:	b	18170 <argp_error@@Base+0xa88>
   1816c:	add	r1, r1, #1
   18170:	add	r2, r2, #24
   18174:	ldr	r0, [r2, #-20]	; 0xffffffec
   18178:	cmp	r0, #0
   1817c:	bne	1816c <argp_error@@Base+0xa84>
   18180:	ldr	r0, [r2, #-24]	; 0xffffffe8
   18184:	cmp	r0, #0
   18188:	bne	1816c <argp_error@@Base+0xa84>
   1818c:	ldr	r0, [r2, #-8]
   18190:	cmp	r0, #0
   18194:	bne	1816c <argp_error@@Base+0xa84>
   18198:	ldr	r0, [r2, #-4]
   1819c:	cmp	r0, #0
   181a0:	bne	1816c <argp_error@@Base+0xa84>
   181a4:	ldm	r6, {r0, r2}
   181a8:	add	ip, r1, r1, lsl #1
   181ac:	add	r0, r0, ip
   181b0:	add	r1, r2, r1
   181b4:	stm	r6, {r0, r1}
   181b8:	cmp	r4, #0
   181bc:	beq	182d4 <argp_error@@Base+0xbec>
   181c0:	ldr	r0, [r4]
   181c4:	cmp	r0, #0
   181c8:	beq	182d4 <argp_error@@Base+0xbec>
   181cc:	ldr	r1, [r0]
   181d0:	ldr	r2, [r0, #16]
   181d4:	cmp	r1, #0
   181d8:	beq	182e4 <argp_error@@Base+0xbfc>
   181dc:	ldr	ip, [r6, #8]
   181e0:	mov	r0, #0
   181e4:	add	ip, ip, #1
   181e8:	str	ip, [r6, #8]
   181ec:	b	181f4 <argp_error@@Base+0xb0c>
   181f0:	add	r0, r0, #1
   181f4:	add	r1, r1, #24
   181f8:	ldr	ip, [r1, #-20]	; 0xffffffec
   181fc:	cmp	ip, #0
   18200:	bne	181f0 <argp_error@@Base+0xb08>
   18204:	ldr	ip, [r1, #-24]	; 0xffffffe8
   18208:	cmp	ip, #0
   1820c:	bne	181f0 <argp_error@@Base+0xb08>
   18210:	ldr	ip, [r1, #-8]
   18214:	cmp	ip, #0
   18218:	bne	181f0 <argp_error@@Base+0xb08>
   1821c:	ldr	ip, [r1, #-4]
   18220:	cmp	ip, #0
   18224:	bne	181f0 <argp_error@@Base+0xb08>
   18228:	ldr	ip, [r6]
   1822c:	ldr	r1, [r6, #4]
   18230:	add	lr, r0, r0, lsl #1
   18234:	add	ip, ip, lr
   18238:	add	r0, r1, r0
   1823c:	str	ip, [r6]
   18240:	str	r0, [r6, #4]
   18244:	cmp	r2, #0
   18248:	beq	182dc <argp_error@@Base+0xbf4>
   1824c:	ldr	r0, [r2]
   18250:	cmp	r0, #0
   18254:	beq	182dc <argp_error@@Base+0xbf4>
   18258:	mov	r7, r2
   1825c:	mov	r1, r6
   18260:	bl	17d28 <argp_error@@Base+0x640>
   18264:	ldr	r1, [r6, #12]
   18268:	ldr	r0, [r7, #16]!
   1826c:	add	r1, r1, #1
   18270:	cmp	r0, #0
   18274:	str	r1, [r6, #12]
   18278:	bne	1825c <argp_error@@Base+0xb74>
   1827c:	ldr	r0, [r4, #16]!
   18280:	add	r1, r1, #1
   18284:	cmp	r0, #0
   18288:	str	r1, [r6, #12]
   1828c:	bne	181cc <argp_error@@Base+0xae4>
   18290:	ldr	r0, [r5, #16]!
   18294:	add	r1, r1, #1
   18298:	cmp	r0, #0
   1829c:	str	r1, [r6, #12]
   182a0:	beq	18088 <argp_error@@Base+0x9a0>
   182a4:	ldr	r2, [r0]
   182a8:	ldr	r4, [r0, #16]
   182ac:	cmp	r2, #0
   182b0:	bne	18158 <argp_error@@Base+0xa70>
   182b4:	ldr	r2, [r0, #4]
   182b8:	cmp	r2, #0
   182bc:	beq	181b8 <argp_error@@Base+0xad0>
   182c0:	ldr	r2, [r6, #8]
   182c4:	cmp	r4, #0
   182c8:	add	r2, r2, #1
   182cc:	str	r2, [r6, #8]
   182d0:	bne	181c0 <argp_error@@Base+0xad8>
   182d4:	ldr	r1, [r6, #12]
   182d8:	b	18290 <argp_error@@Base+0xba8>
   182dc:	ldr	r1, [r6, #12]
   182e0:	b	1827c <argp_error@@Base+0xb94>
   182e4:	ldr	r1, [r0, #4]
   182e8:	cmp	r1, #0
   182ec:	ldrne	r1, [r6, #8]
   182f0:	addne	r1, r1, #1
   182f4:	strne	r1, [r6, #8]
   182f8:	b	18244 <argp_error@@Base+0xb5c>
   182fc:	ldr	r2, [r1, #4]
   18300:	cmp	r2, #0
   18304:	beq	17ff8 <argp_error@@Base+0x910>
   18308:	ldr	r2, [r6, #8]
   1830c:	cmp	fp, #0
   18310:	add	r2, r2, #1
   18314:	str	r2, [r6, #8]
   18318:	bne	18000 <argp_error@@Base+0x918>
   1831c:	ldr	r2, [r6, #12]
   18320:	b	1809c <argp_error@@Base+0x9b4>
   18324:	ldr	r2, [r6, #12]
   18328:	b	180b0 <argp_error@@Base+0x9c8>
   1832c:	ldr	r0, [r3, #-8]
   18330:	cmp	r0, #0
   18334:	bne	17d6c <argp_error@@Base+0x684>
   18338:	ldr	r0, [r3, #-4]
   1833c:	cmp	r0, #0
   18340:	bne	17d6c <argp_error@@Base+0x684>
   18344:	ldm	r1, {r0, r3}
   18348:	add	ip, r2, r2, lsl #1
   1834c:	add	r0, r0, ip
   18350:	add	r2, r3, r2
   18354:	stm	r1, {r0, r2}
   18358:	b	17d88 <argp_error@@Base+0x6a0>
   1835c:	ldr	r0, [r2, #-8]
   18360:	cmp	r0, #0
   18364:	bne	17de0 <argp_error@@Base+0x6f8>
   18368:	ldr	r0, [r2, #-4]
   1836c:	cmp	r0, #0
   18370:	bne	17de0 <argp_error@@Base+0x6f8>
   18374:	ldm	r6, {r0, r2}
   18378:	add	ip, r1, r1, lsl #1
   1837c:	add	r0, r0, ip
   18380:	add	r1, r2, r1
   18384:	stm	r6, {r0, r1}
   18388:	b	17dfc <argp_error@@Base+0x714>
   1838c:	ldr	r0, [r2, #-8]
   18390:	cmp	r0, #0
   18394:	bne	17e50 <argp_error@@Base+0x768>
   18398:	ldr	r0, [r2, #-4]
   1839c:	cmp	r0, #0
   183a0:	bne	17e50 <argp_error@@Base+0x768>
   183a4:	ldm	r6, {r0, r2}
   183a8:	add	ip, r1, r1, lsl #1
   183ac:	add	r0, r0, ip
   183b0:	add	r1, r2, r1
   183b4:	stm	r6, {r0, r1}
   183b8:	b	17e6c <argp_error@@Base+0x784>
   183bc:	ldr	r2, [r6, #12]
   183c0:	b	180fc <argp_error@@Base+0xa14>
   183c4:	ldr	r2, [r6, #12]
   183c8:	b	180e0 <argp_error@@Base+0x9f8>
   183cc:	ldr	r0, [r2, #-8]
   183d0:	cmp	r0, #0
   183d4:	bne	17ebc <argp_error@@Base+0x7d4>
   183d8:	ldr	r0, [r2, #-4]
   183dc:	cmp	r0, #0
   183e0:	bne	17ebc <argp_error@@Base+0x7d4>
   183e4:	ldm	r6, {r0, r2}
   183e8:	add	ip, r1, r1, lsl #1
   183ec:	add	r0, r0, ip
   183f0:	add	r1, r2, r1
   183f4:	stm	r6, {r0, r1}
   183f8:	b	17ed8 <argp_error@@Base+0x7f0>

000183fc <argp_parse@@Base>:
   183fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18400:	add	fp, sp, #32
   18404:	tst	r3, #1
   18408:	sub	sp, sp, #220	; 0xdc
   1840c:	mov	r7, r3
   18410:	mov	r8, r0
   18414:	str	r1, [fp, #-240]	; 0xffffff10
   18418:	str	r2, [fp, #-236]	; 0xffffff14
   1841c:	bne	18448 <argp_parse@@Base+0x4c>
   18420:	ldr	r3, [pc, #3488]	; 191c8 <argp_parse@@Base+0xdcc>
   18424:	ldr	r4, [pc, #3488]	; 191cc <argp_parse@@Base+0xdd0>
   18428:	ldr	r2, [r3]
   1842c:	cmp	r2, #0
   18430:	ldreq	r2, [fp, #-236]	; 0xffffff14
   18434:	ldreq	r2, [r2]
   18438:	streq	r2, [r3]
   1843c:	ldr	r3, [r4]
   18440:	cmp	r3, #0
   18444:	beq	18b28 <argp_parse@@Base+0x72c>
   18448:	ands	r3, r7, #16
   1844c:	beq	18a0c <argp_parse@@Base+0x610>
   18450:	sub	r5, fp, #196	; 0xc4
   18454:	mov	r0, r5
   18458:	mov	r2, #36	; 0x24
   1845c:	mov	r1, #0
   18460:	bl	11314 <memset@plt>
   18464:	ands	r3, r7, #4
   18468:	str	r3, [fp, #-244]	; 0xffffff0c
   1846c:	mov	r3, #0
   18470:	moveq	r0, #1
   18474:	movne	r0, #0
   18478:	cmp	r8, r3
   1847c:	str	r3, [fp, #-224]	; 0xffffff20
   18480:	str	r3, [fp, #-220]	; 0xffffff24
   18484:	str	r3, [fp, #-216]	; 0xffffff28
   18488:	str	r0, [fp, #-228]	; 0xffffff1c
   1848c:	beq	18500 <argp_parse@@Base+0x104>
   18490:	ldr	r4, [r8, #16]
   18494:	ldr	r3, [r8]
   18498:	cmp	r3, #0
   1849c:	movne	r2, #1
   184a0:	strne	r2, [fp, #-220]	; 0xffffff24
   184a4:	movne	r2, #0
   184a8:	bne	184b4 <argp_parse@@Base+0xb8>
   184ac:	b	18ff4 <argp_parse@@Base+0xbf8>
   184b0:	add	r2, r2, #1
   184b4:	add	r3, r3, #24
   184b8:	ldr	r1, [r3, #-20]	; 0xffffffec
   184bc:	cmp	r1, #0
   184c0:	bne	184b0 <argp_parse@@Base+0xb4>
   184c4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   184c8:	cmp	r1, #0
   184cc:	bne	184b0 <argp_parse@@Base+0xb4>
   184d0:	ldr	r1, [r3, #-8]
   184d4:	cmp	r1, #0
   184d8:	bne	184b0 <argp_parse@@Base+0xb4>
   184dc:	ldr	r1, [r3, #-4]
   184e0:	cmp	r1, #0
   184e4:	bne	184b0 <argp_parse@@Base+0xb4>
   184e8:	add	r3, r2, r2, lsl #1
   184ec:	add	r0, r3, r0
   184f0:	str	r2, [fp, #-224]	; 0xffffff20
   184f4:	str	r0, [fp, #-228]	; 0xffffff1c
   184f8:	mov	r6, #72	; 0x48
   184fc:	b	1900c <argp_parse@@Base+0xc10>
   18500:	mov	sl, #36	; 0x24
   18504:	mov	r6, sl
   18508:	mov	r4, r8
   1850c:	mov	r3, #52	; 0x34
   18510:	str	r3, [fp, #-232]	; 0xffffff18
   18514:	add	r0, r3, r0
   18518:	add	r0, r0, #1
   1851c:	bl	1a95c <argp_parse@@Base+0x2560>
   18520:	cmp	r0, #0
   18524:	mov	r9, r0
   18528:	str	r0, [fp, #-40]	; 0xffffffd8
   1852c:	moveq	r5, #12
   18530:	beq	1892c <argp_parse@@Base+0x530>
   18534:	mov	lr, r5
   18538:	mov	r3, #1
   1853c:	str	r3, [fp, #-196]	; 0xffffff3c
   18540:	str	r3, [fp, #-192]	; 0xffffff40
   18544:	ldm	lr!, {r0, r1, r2, r3}
   18548:	sub	ip, fp, #148	; 0x94
   1854c:	add	r5, r9, sl
   18550:	ldr	sl, [fp, #-232]	; 0xffffff18
   18554:	stmia	ip!, {r0, r1, r2, r3}
   18558:	add	r6, r9, r6
   1855c:	ldm	lr!, {r0, r1, r2, r3}
   18560:	add	sl, r9, sl
   18564:	str	r6, [fp, #-104]	; 0xffffff98
   18568:	str	r5, [fp, #-152]	; 0xffffff68
   1856c:	ldr	lr, [lr]
   18570:	stmia	ip!, {r0, r1, r2, r3}
   18574:	mov	r2, r4
   18578:	mov	r0, r6
   1857c:	mov	r1, #0
   18580:	str	r9, [fp, #-112]	; 0xffffff90
   18584:	str	lr, [ip]
   18588:	str	sl, [fp, #-156]	; 0xffffff64
   1858c:	sub	r4, fp, #160	; 0xa0
   18590:	bl	11314 <memset@plt>
   18594:	tst	r7, #8
   18598:	str	r5, [fp, #-204]	; 0xffffff34
   1859c:	str	sl, [fp, #-208]	; 0xffffff30
   185a0:	str	r6, [fp, #-200]	; 0xffffff38
   185a4:	str	r4, [fp, #-212]	; 0xffffff2c
   185a8:	beq	18ac0 <argp_parse@@Base+0x6c4>
   185ac:	ldr	r2, [fp, #-232]	; 0xffffff18
   185b0:	add	sl, sl, #1
   185b4:	mov	r3, #45	; 0x2d
   185b8:	str	sl, [fp, #-208]	; 0xffffff30
   185bc:	strb	r3, [r9, r2]
   185c0:	mov	r2, #0
   185c4:	strb	r2, [sl]
   185c8:	ldr	r3, [fp, #-204]	; 0xffffff34
   185cc:	cmp	r8, r2
   185d0:	str	r2, [r3]
   185d4:	str	r8, [fp, #-160]	; 0xffffff60
   185d8:	beq	18af0 <argp_parse@@Base+0x6f4>
   185dc:	sub	r1, fp, #212	; 0xd4
   185e0:	mov	r0, r8
   185e4:	str	r1, [sp]
   185e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   185ec:	mov	r1, r2
   185f0:	bl	17894 <argp_error@@Base+0x1ac>
   185f4:	ldr	r8, [fp, #-160]	; 0xffffff60
   185f8:	ldr	r5, [fp, #-112]	; 0xffffff90
   185fc:	mov	r6, r0
   18600:	str	r0, [fp, #-108]	; 0xffffff94
   18604:	mov	r2, #56	; 0x38
   18608:	mov	r1, #0
   1860c:	sub	r0, fp, #96	; 0x60
   18610:	bl	11314 <memset@plt>
   18614:	ldr	r2, [pc, #2996]	; 191d0 <argp_parse@@Base+0xdd4>
   18618:	ldr	r3, [pc, #2996]	; 191d4 <argp_parse@@Base+0xdd8>
   1861c:	ldr	r0, [fp, #-240]	; 0xffffff10
   18620:	ldr	r1, [r2]
   18624:	str	r0, [fp, #-92]	; 0xffffffa4
   18628:	ldr	r2, [r3]
   1862c:	ldr	r0, [fp, #-236]	; 0xffffff14
   18630:	mov	r3, #1
   18634:	cmp	r5, r6
   18638:	str	r8, [fp, #-96]	; 0xffffffa0
   1863c:	str	r0, [fp, #-88]	; 0xffffffa8
   18640:	str	r7, [fp, #-80]	; 0xffffffb0
   18644:	str	r4, [fp, #-44]	; 0xffffffd4
   18648:	str	r1, [fp, #-52]	; 0xffffffcc
   1864c:	str	r2, [fp, #-48]	; 0xffffffd0
   18650:	str	r3, [fp, #-100]	; 0xffffff9c
   18654:	bcc	18938 <argp_parse@@Base+0x53c>
   18658:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1865c:	tst	r3, #2
   18660:	bne	18b00 <argp_parse@@Base+0x704>
   18664:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18668:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1866c:	mov	r2, #1
   18670:	str	r2, [fp, #-144]	; 0xffffff70
   18674:	ldr	r2, [fp, #-236]	; 0xffffff14
   18678:	cmp	r2, r3
   1867c:	beq	190a0 <argp_parse@@Base+0xca4>
   18680:	ldr	r3, [pc, #2884]	; 191cc <argp_parse@@Base+0xdd0>
   18684:	ldr	r3, [r3]
   18688:	str	r3, [fp, #-56]	; 0xffffffc8
   1868c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18690:	ldr	r5, [fp, #-84]	; 0xffffffac
   18694:	ldr	sl, [pc, #2876]	; 191d8 <argp_parse@@Base+0xddc>
   18698:	mov	r0, r4
   1869c:	mov	r6, #0
   186a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   186a4:	cmp	r3, #0
   186a8:	beq	18b3c <argp_parse@@Base+0x740>
   186ac:	cmp	r3, r5
   186b0:	strgt	r6, [fp, #-72]	; 0xffffffb8
   186b4:	bgt	18b3c <argp_parse@@Base+0x740>
   186b8:	cmp	r5, r0
   186bc:	blt	18ed8 <argp_parse@@Base+0xadc>
   186c0:	cmp	r5, r0
   186c4:	bne	18ee4 <argp_parse@@Base+0xae8>
   186c8:	ldr	r6, [fp, #-112]	; 0xffffff90
   186cc:	ldr	ip, [fp, #-108]	; 0xffffff94
   186d0:	cmp	r6, ip
   186d4:	bcs	19168 <argp_parse@@Base+0xd6c>
   186d8:	mov	r5, #0
   186dc:	add	r6, r6, #36	; 0x24
   186e0:	mov	r8, r5
   186e4:	ldr	r7, [pc, #2800]	; 191dc <argp_parse@@Base+0xde0>
   186e8:	mov	r0, r5
   186ec:	b	18734 <argp_parse@@Base+0x338>
   186f0:	ldr	ip, [r6, #-4]
   186f4:	str	ip, [fp, #-60]	; 0xffffffc4
   186f8:	ldr	ip, [r6, #-12]
   186fc:	str	ip, [fp, #-68]	; 0xffffffbc
   18700:	ldr	ip, [r6, #-8]
   18704:	str	r3, [fp, #-76]	; 0xffffffb4
   18708:	str	ip, [fp, #-64]	; 0xffffffc0
   1870c:	blx	r4
   18710:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18714:	str	r3, [r6, #-4]
   18718:	ldr	ip, [fp, #-108]	; 0xffffff94
   1871c:	cmp	ip, r6
   18720:	bls	19110 <argp_parse@@Base+0xd14>
   18724:	cmp	r0, #7
   18728:	cmpne	r0, #0
   1872c:	bne	190d0 <argp_parse@@Base+0xcd4>
   18730:	add	r6, r6, #36	; 0x24
   18734:	ldr	r3, [r6, #-24]	; 0xffffffe8
   18738:	cmp	r3, #0
   1873c:	bne	1871c <argp_parse@@Base+0x320>
   18740:	ldr	r4, [r6, #-36]	; 0xffffffdc
   18744:	sub	r2, fp, #96	; 0x60
   18748:	cmp	r4, #0
   1874c:	mov	r1, r8
   18750:	mov	r0, r7
   18754:	bne	186f0 <argp_parse@@Base+0x2f4>
   18758:	cmp	ip, r6
   1875c:	mov	r0, #7
   18760:	bhi	18730 <argp_parse@@Base+0x334>
   18764:	ldr	r6, [fp, #-112]	; 0xffffff90
   18768:	sub	r4, ip, #36	; 0x24
   1876c:	cmp	r6, r4
   18770:	movls	r5, #7
   18774:	bhi	187fc <argp_parse@@Base+0x400>
   18778:	cmp	r5, #7
   1877c:	cmpne	r5, #0
   18780:	bne	190e4 <argp_parse@@Base+0xce8>
   18784:	sub	r4, r4, #36	; 0x24
   18788:	mov	r8, #0
   1878c:	ldr	r7, [pc, #2636]	; 191e0 <argp_parse@@Base+0xde4>
   18790:	b	187dc <argp_parse@@Base+0x3e0>
   18794:	ldr	ip, [r4, #68]	; 0x44
   18798:	ldr	lr, [r4, #48]	; 0x30
   1879c:	str	ip, [fp, #-60]	; 0xffffffc4
   187a0:	ldr	ip, [r4, #60]	; 0x3c
   187a4:	str	ip, [fp, #-68]	; 0xffffffbc
   187a8:	ldr	ip, [r4, #64]	; 0x40
   187ac:	str	lr, [fp, #-76]	; 0xffffffb4
   187b0:	str	ip, [fp, #-64]	; 0xffffffc0
   187b4:	blx	r3
   187b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   187bc:	str	r3, [r4, #68]	; 0x44
   187c0:	ldr	r6, [fp, #-112]	; 0xffffff90
   187c4:	cmp	r6, r4
   187c8:	bhi	19160 <argp_parse@@Base+0xd64>
   187cc:	cmp	r0, #7
   187d0:	cmpne	r0, #0
   187d4:	bne	190f4 <argp_parse@@Base+0xcf8>
   187d8:	sub	r4, r4, #36	; 0x24
   187dc:	ldr	r3, [r4, #36]	; 0x24
   187e0:	sub	r2, fp, #96	; 0x60
   187e4:	cmp	r3, #0
   187e8:	mov	r1, r8
   187ec:	mov	r0, r7
   187f0:	bne	18794 <argp_parse@@Base+0x398>
   187f4:	cmp	r6, r4
   187f8:	bls	187d8 <argp_parse@@Base+0x3dc>
   187fc:	ldr	r3, [fp, #4]
   18800:	cmp	r3, #0
   18804:	beq	18820 <argp_parse@@Base+0x424>
   18808:	mov	r5, #0
   1880c:	ldr	r2, [fp, #4]
   18810:	ldr	r3, [fp, #-84]	; 0xffffffac
   18814:	str	r3, [r2]
   18818:	cmp	r5, #0
   1881c:	bne	19104 <argp_parse@@Base+0xd08>
   18820:	ldr	ip, [fp, #-108]	; 0xffffff94
   18824:	b	18efc <argp_parse@@Base+0xb00>
   18828:	ldr	r6, [fp, #-112]	; 0xffffff90
   1882c:	mov	r5, r0
   18830:	ldr	ip, [fp, #-108]	; 0xffffff94
   18834:	cmp	r6, ip
   18838:	mov	r4, ip
   1883c:	subcs	r4, ip, #36	; 0x24
   18840:	bcs	188b0 <argp_parse@@Base+0x4b4>
   18844:	ldr	r8, [pc, #2456]	; 191e4 <argp_parse@@Base+0xde8>
   18848:	add	r6, r6, #36	; 0x24
   1884c:	mov	r9, #0
   18850:	ldr	r3, [r6, #-36]	; 0xffffffdc
   18854:	sub	r2, fp, #96	; 0x60
   18858:	cmp	r3, #0
   1885c:	mov	r1, r9
   18860:	mov	r0, r8
   18864:	mov	r7, r6
   18868:	beq	1889c <argp_parse@@Base+0x4a0>
   1886c:	ldr	ip, [r6, #-4]
   18870:	ldr	lr, [r6, #-24]	; 0xffffffe8
   18874:	str	ip, [fp, #-60]	; 0xffffffc4
   18878:	ldr	ip, [r6, #-12]
   1887c:	str	ip, [fp, #-68]	; 0xffffffbc
   18880:	ldr	ip, [r6, #-8]
   18884:	str	lr, [fp, #-76]	; 0xffffffb4
   18888:	str	ip, [fp, #-64]	; 0xffffffc0
   1888c:	blx	r3
   18890:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18894:	str	r3, [r6, #-4]
   18898:	ldr	r4, [fp, #-108]	; 0xffffff94
   1889c:	cmp	r7, r4
   188a0:	add	r6, r6, #36	; 0x24
   188a4:	bcc	18850 <argp_parse@@Base+0x454>
   188a8:	ldr	r6, [fp, #-112]	; 0xffffff90
   188ac:	sub	r4, r4, #36	; 0x24
   188b0:	cmp	r6, r4
   188b4:	bhi	1891c <argp_parse@@Base+0x520>
   188b8:	ldr	r8, [pc, #2344]	; 191e8 <argp_parse@@Base+0xdec>
   188bc:	sub	r4, r4, #36	; 0x24
   188c0:	mov	r9, #0
   188c4:	ldr	r3, [r4, #36]	; 0x24
   188c8:	sub	r2, fp, #96	; 0x60
   188cc:	cmp	r3, #0
   188d0:	mov	r1, r9
   188d4:	mov	r0, r8
   188d8:	mov	r7, r4
   188dc:	beq	18910 <argp_parse@@Base+0x514>
   188e0:	ldr	ip, [r4, #68]	; 0x44
   188e4:	ldr	lr, [r4, #48]	; 0x30
   188e8:	str	ip, [fp, #-60]	; 0xffffffc4
   188ec:	ldr	ip, [r4, #60]	; 0x3c
   188f0:	str	ip, [fp, #-68]	; 0xffffffbc
   188f4:	ldr	ip, [r4, #64]	; 0x40
   188f8:	str	lr, [fp, #-76]	; 0xffffffb4
   188fc:	str	ip, [fp, #-64]	; 0xffffffc0
   18900:	blx	r3
   18904:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18908:	str	r3, [r4, #68]	; 0x44
   1890c:	ldr	r6, [fp, #-112]	; 0xffffff90
   18910:	cmp	r6, r7
   18914:	sub	r4, r4, #36	; 0x24
   18918:	bls	188c4 <argp_parse@@Base+0x4c8>
   1891c:	cmp	r5, #7
   18920:	moveq	r5, #22
   18924:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18928:	bl	19378 <argp_parse@@Base+0xf7c>
   1892c:	mov	r0, r5
   18930:	sub	sp, fp, #32
   18934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18938:	ldr	r3, [fp, #8]
   1893c:	add	r4, r5, #36	; 0x24
   18940:	str	r3, [r5, #24]
   18944:	mov	r7, #0
   18948:	ldr	r6, [pc, #2204]	; 191ec <argp_parse@@Base+0xdf0>
   1894c:	b	189a4 <argp_parse@@Base+0x5a8>
   18950:	ldr	r2, [r4, #-4]
   18954:	ldr	r0, [r4, #-24]	; 0xffffffe8
   18958:	str	r2, [fp, #-60]	; 0xffffffc4
   1895c:	ldr	r1, [r4, #-12]
   18960:	sub	r2, fp, #96	; 0x60
   18964:	str	r1, [fp, #-68]	; 0xffffffbc
   18968:	ldr	ip, [r4, #-8]
   1896c:	mov	r1, r7
   18970:	str	r0, [fp, #-76]	; 0xffffffb4
   18974:	str	ip, [fp, #-64]	; 0xffffffc0
   18978:	mov	r0, r6
   1897c:	blx	r3
   18980:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18984:	str	r3, [r4, #-4]
   18988:	ldr	r3, [fp, #-108]	; 0xffffff94
   1898c:	cmp	r3, r4
   18990:	bls	1919c <argp_parse@@Base+0xda0>
   18994:	cmp	r0, #7
   18998:	cmpne	r0, #0
   1899c:	bne	18ae0 <argp_parse@@Base+0x6e4>
   189a0:	add	r4, r4, #36	; 0x24
   189a4:	ldr	r3, [r4, #-20]	; 0xffffffec
   189a8:	cmp	r3, #0
   189ac:	ldrne	r3, [r3, #28]
   189b0:	ldrne	r2, [r4, #-16]
   189b4:	ldrne	r3, [r3, r2, lsl #2]
   189b8:	strne	r3, [r4, #-12]
   189bc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   189c0:	cmp	r3, #0
   189c4:	bne	18950 <argp_parse@@Base+0x554>
   189c8:	ldr	r3, [r4, #-32]	; 0xffffffe0
   189cc:	ldr	r3, [r3, #16]
   189d0:	cmp	r3, #0
   189d4:	beq	189fc <argp_parse@@Base+0x600>
   189d8:	ldr	r3, [r3]
   189dc:	cmp	r3, #0
   189e0:	beq	189fc <argp_parse@@Base+0x600>
   189e4:	ldr	r3, [r4, #-8]
   189e8:	ldr	r2, [r4, #-12]
   189ec:	str	r2, [r3]
   189f0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   189f4:	cmp	r3, #0
   189f8:	bne	18950 <argp_parse@@Base+0x554>
   189fc:	ldr	r3, [fp, #-108]	; 0xffffff94
   18a00:	cmp	r3, r4
   18a04:	bhi	189a0 <argp_parse@@Base+0x5a4>
   18a08:	b	18658 <argp_parse@@Base+0x25c>
   18a0c:	sub	sp, sp, #72	; 0x48
   18a10:	add	r4, sp, #8
   18a14:	sub	sp, sp, #40	; 0x28
   18a18:	add	r6, sp, #8
   18a1c:	mov	r1, r3
   18a20:	str	r3, [r6]
   18a24:	str	r3, [r6, #4]
   18a28:	str	r3, [r6, #8]
   18a2c:	str	r3, [r6, #12]
   18a30:	str	r3, [r6, #20]
   18a34:	str	r3, [r6, #24]
   18a38:	mov	r2, #64	; 0x40
   18a3c:	mov	r0, r4
   18a40:	str	r4, [r6, #16]
   18a44:	bl	11314 <memset@plt>
   18a48:	ldr	r2, [pc, #1952]	; 191f0 <argp_parse@@Base+0xdf4>
   18a4c:	cmp	r8, #0
   18a50:	addne	r3, r4, #16
   18a54:	ldr	r2, [r2]
   18a58:	moveq	r3, r4
   18a5c:	ldr	r1, [pc, #1936]	; 191f4 <argp_parse@@Base+0xdf8>
   18a60:	strne	r8, [r4]
   18a64:	cmp	r2, #0
   18a68:	str	r1, [r3]
   18a6c:	beq	190b8 <argp_parse@@Base+0xcbc>
   18a70:	ldr	r2, [pc, #1920]	; 191f8 <argp_parse@@Base+0xdfc>
   18a74:	add	ip, r3, #32
   18a78:	str	r2, [r3, #16]
   18a7c:	mov	r9, #0
   18a80:	sub	r5, fp, #196	; 0xc4
   18a84:	mov	r1, r9
   18a88:	mov	r0, r5
   18a8c:	mov	r2, #36	; 0x24
   18a90:	str	r9, [ip]
   18a94:	bl	11314 <memset@plt>
   18a98:	ands	r3, r7, #4
   18a9c:	moveq	r0, #1
   18aa0:	movne	r0, r9
   18aa4:	str	r3, [fp, #-244]	; 0xffffff0c
   18aa8:	mov	r8, r6
   18aac:	str	r9, [fp, #-224]	; 0xffffff20
   18ab0:	str	r9, [fp, #-220]	; 0xffffff24
   18ab4:	str	r9, [fp, #-216]	; 0xffffff28
   18ab8:	str	r0, [fp, #-228]	; 0xffffff1c
   18abc:	b	18494 <argp_parse@@Base+0x98>
   18ac0:	ldr	r3, [fp, #-244]	; 0xffffff0c
   18ac4:	cmp	r3, #0
   18ac8:	addne	r3, sl, #1
   18acc:	movne	r2, #43	; 0x2b
   18ad0:	strbne	r2, [sl]
   18ad4:	strne	r3, [fp, #-208]	; 0xffffff30
   18ad8:	movne	sl, r3
   18adc:	b	185c0 <argp_parse@@Base+0x1c4>
   18ae0:	mov	r5, r0
   18ae4:	mov	r0, r5
   18ae8:	sub	sp, fp, #32
   18aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18af0:	ldr	r5, [fp, #-112]	; 0xffffff90
   18af4:	mov	r6, r5
   18af8:	str	r5, [fp, #-108]	; 0xffffff94
   18afc:	b	18604 <argp_parse@@Base+0x208>
   18b00:	tst	r3, #1
   18b04:	mov	r3, #0
   18b08:	str	r3, [fp, #-144]	; 0xffffff70
   18b0c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   18b10:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18b14:	subne	r3, r3, #4
   18b18:	addne	r4, r4, #1
   18b1c:	strne	r3, [fp, #-88]	; 0xffffffa8
   18b20:	strne	r4, [fp, #-92]	; 0xffffffa4
   18b24:	b	18674 <argp_parse@@Base+0x278>
   18b28:	ldr	r3, [fp, #-236]	; 0xffffff14
   18b2c:	ldr	r0, [r3]
   18b30:	bl	192cc <argp_parse@@Base+0xed0>
   18b34:	str	r0, [r4]
   18b38:	b	18448 <argp_parse@@Base+0x4c>
   18b3c:	cmp	r2, #0
   18b40:	beq	186b8 <argp_parse@@Base+0x2bc>
   18b44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18b48:	str	r5, [fp, #-148]	; 0xffffff6c
   18b4c:	ands	ip, r3, #64	; 0x40
   18b50:	mvn	r3, #0
   18b54:	str	r3, [fp, #-140]	; 0xffffff74
   18b58:	ldr	r2, [fp, #-156]	; 0xffffff64
   18b5c:	ldr	r3, [fp, #-152]	; 0xffffff68
   18b60:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18b64:	beq	18e84 <argp_parse@@Base+0xa88>
   18b68:	sub	ip, fp, #148	; 0x94
   18b6c:	stm	sp, {r6, ip}
   18b70:	bl	1944c <argp_parse@@Base+0x1050>
   18b74:	ldr	r5, [fp, #-148]	; 0xffffff6c
   18b78:	str	r5, [fp, #-84]	; 0xffffffac
   18b7c:	mov	r7, r0
   18b80:	cmn	r7, #1
   18b84:	beq	18ea4 <argp_parse@@Base+0xaa8>
   18b88:	cmp	r7, #63	; 0x3f
   18b8c:	beq	18fa8 <argp_parse@@Base+0xbac>
   18b90:	cmp	r7, #1
   18b94:	beq	18cec <argp_parse@@Base+0x8f0>
   18b98:	asrs	r8, r7, #24
   18b9c:	bne	18c48 <argp_parse@@Base+0x84c>
   18ba0:	mov	r1, r7
   18ba4:	ldr	r0, [fp, #-156]	; 0xffffff64
   18ba8:	bl	112cc <strchr@plt>
   18bac:	cmp	r0, #0
   18bb0:	beq	18cb8 <argp_parse@@Base+0x8bc>
   18bb4:	ldr	r4, [fp, #-112]	; 0xffffff90
   18bb8:	ldr	r2, [fp, #-108]	; 0xffffff94
   18bbc:	cmp	r4, r2
   18bc0:	bcc	18bd4 <argp_parse@@Base+0x7d8>
   18bc4:	b	18cb8 <argp_parse@@Base+0x8bc>
   18bc8:	add	r4, r4, #36	; 0x24
   18bcc:	cmp	r4, r2
   18bd0:	bcs	18cb8 <argp_parse@@Base+0x8bc>
   18bd4:	ldr	r3, [r4, #8]
   18bd8:	cmp	r0, r3
   18bdc:	bcs	18bc8 <argp_parse@@Base+0x7cc>
   18be0:	ldr	r3, [r4]
   18be4:	cmp	r3, #0
   18be8:	beq	18cb8 <argp_parse@@Base+0x8bc>
   18bec:	ldr	r2, [r4, #32]
   18bf0:	ldr	r0, [r4, #28]
   18bf4:	ldr	ip, [r4, #24]
   18bf8:	str	r2, [fp, #-60]	; 0xffffffc4
   18bfc:	ldr	r2, [r4, #12]
   18c00:	ldr	r1, [fp, #-136]	; 0xffffff78
   18c04:	str	r0, [fp, #-64]	; 0xffffffc0
   18c08:	str	r2, [fp, #-76]	; 0xffffffb4
   18c0c:	str	ip, [fp, #-68]	; 0xffffffbc
   18c10:	sub	r2, fp, #96	; 0x60
   18c14:	mov	r0, r7
   18c18:	blx	r3
   18c1c:	mov	r8, r6
   18c20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18c24:	str	r3, [r4, #32]
   18c28:	cmp	r0, #7
   18c2c:	beq	18cb0 <argp_parse@@Base+0x8b4>
   18c30:	cmp	r0, #0
   18c34:	bne	18828 <argp_parse@@Base+0x42c>
   18c38:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18c3c:	ldr	r5, [fp, #-84]	; 0xffffffac
   18c40:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18c44:	b	186a0 <argp_parse@@Base+0x2a4>
   18c48:	add	r3, r8, r8, lsl #3
   18c4c:	ldr	r2, [fp, #-112]	; 0xffffff90
   18c50:	lsl	r3, r3, #2
   18c54:	sub	r3, r3, #36	; 0x24
   18c58:	add	r4, r2, r3
   18c5c:	ldr	r5, [r2, r3]
   18c60:	ands	r3, r7, #8388608	; 0x800000
   18c64:	movne	r3, #-16777216	; 0xff000000
   18c68:	cmp	r5, #0
   18c6c:	beq	18e3c <argp_parse@@Base+0xa40>
   18c70:	ldr	r0, [r4, #32]
   18c74:	ldr	r2, [r4, #24]
   18c78:	str	r0, [fp, #-60]	; 0xffffffc4
   18c7c:	ldr	r0, [r4, #28]
   18c80:	str	r2, [fp, #-68]	; 0xffffffbc
   18c84:	ldr	r2, [r4, #12]
   18c88:	str	r0, [fp, #-64]	; 0xffffffc0
   18c8c:	bic	r0, r7, #-16777216	; 0xff000000
   18c90:	str	r2, [fp, #-76]	; 0xffffffb4
   18c94:	orr	r0, r0, r3
   18c98:	ldr	r1, [fp, #-136]	; 0xffffff78
   18c9c:	sub	r2, fp, #96	; 0x60
   18ca0:	blx	r5
   18ca4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18ca8:	str	r3, [r4, #32]
   18cac:	b	18c28 <argp_parse@@Base+0x82c>
   18cb0:	cmp	r8, #0
   18cb4:	bne	18e3c <argp_parse@@Base+0xa40>
   18cb8:	mov	r2, r7
   18cbc:	ldr	r3, [pc, #1336]	; 191fc <argp_parse@@Base+0xe00>
   18cc0:	ldr	r1, [pc, #1336]	; 19200 <argp_parse@@Base+0xe04>
   18cc4:	sub	r0, fp, #96	; 0x60
   18cc8:	bl	176e8 <argp_error@@Base>
   18ccc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18cd0:	mov	r2, #260	; 0x104
   18cd4:	sub	r0, fp, #96	; 0x60
   18cd8:	bl	17638 <argp_state_help@@Base>
   18cdc:	mov	r5, #7
   18ce0:	ldr	r6, [fp, #-112]	; 0xffffff90
   18ce4:	ldr	ip, [fp, #-108]	; 0xffffff94
   18ce8:	b	18834 <argp_parse@@Base+0x438>
   18cec:	ldr	r7, [fp, #-136]	; 0xffffff78
   18cf0:	ldr	r3, [fp, #-112]	; 0xffffff90
   18cf4:	ldr	ip, [fp, #-108]	; 0xffffff94
   18cf8:	sub	r8, r5, #1
   18cfc:	cmp	r3, ip
   18d00:	str	r8, [fp, #-84]	; 0xffffffac
   18d04:	bcs	18e30 <argp_parse@@Base+0xa34>
   18d08:	mov	lr, r8
   18d0c:	add	r4, r3, #36	; 0x24
   18d10:	ldr	r3, [r4, #-36]	; 0xffffffdc
   18d14:	add	r5, lr, #1
   18d18:	cmp	r3, #0
   18d1c:	str	r5, [fp, #-84]	; 0xffffffac
   18d20:	sub	r2, fp, #96	; 0x60
   18d24:	mov	r1, r7
   18d28:	mov	r0, r6
   18d2c:	sub	r5, r4, #36	; 0x24
   18d30:	mov	r9, r4
   18d34:	streq	lr, [fp, #-84]	; 0xffffffac
   18d38:	beq	18e24 <argp_parse@@Base+0xa28>
   18d3c:	ldr	ip, [r4, #-4]
   18d40:	ldr	lr, [r4, #-24]	; 0xffffffe8
   18d44:	str	ip, [fp, #-60]	; 0xffffffc4
   18d48:	ldr	ip, [r4, #-12]
   18d4c:	str	ip, [fp, #-68]	; 0xffffffbc
   18d50:	ldr	ip, [r4, #-8]
   18d54:	str	lr, [fp, #-76]	; 0xffffffb4
   18d58:	str	ip, [fp, #-64]	; 0xffffffc0
   18d5c:	blx	r3
   18d60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18d64:	str	r3, [r4, #-4]
   18d68:	cmp	r0, #7
   18d6c:	beq	18da8 <argp_parse@@Base+0x9ac>
   18d70:	cmp	r0, #0
   18d74:	bne	18828 <argp_parse@@Base+0x42c>
   18d78:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18d7c:	ldr	r5, [fp, #-84]	; 0xffffffac
   18d80:	cmp	r8, r5
   18d84:	sublt	r8, r5, r8
   18d88:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   18d8c:	movge	r3, #1
   18d90:	addlt	r8, r3, r8
   18d94:	strlt	r8, [r4, #-24]	; 0xffffffe8
   18d98:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   18d9c:	strge	r3, [fp, #-100]	; 0xffffff9c
   18da0:	movge	r2, r3
   18da4:	b	186a0 <argp_parse@@Base+0x2a4>
   18da8:	ldr	lr, [fp, #-84]	; 0xffffffac
   18dac:	ldr	r3, [r4, #-36]	; 0xffffffdc
   18db0:	sub	lr, lr, #1
   18db4:	cmp	r3, #0
   18db8:	str	lr, [fp, #-84]	; 0xffffffac
   18dbc:	beq	18e20 <argp_parse@@Base+0xa24>
   18dc0:	add	r0, r5, #24
   18dc4:	ldr	r2, [r5, #12]
   18dc8:	ldm	r0, {r0, r1, ip}
   18dcc:	str	r2, [fp, #-76]	; 0xffffffb4
   18dd0:	sub	r2, fp, #96	; 0x60
   18dd4:	str	ip, [fp, #-60]	; 0xffffffc4
   18dd8:	str	r0, [fp, #-68]	; 0xffffffbc
   18ddc:	str	r1, [fp, #-64]	; 0xffffffc0
   18de0:	mov	r0, sl
   18de4:	mov	r1, r6
   18de8:	blx	r3
   18dec:	ldr	ip, [fp, #-108]	; 0xffffff94
   18df0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18df4:	cmp	r4, ip
   18df8:	movcs	r1, #0
   18dfc:	movcc	r1, #1
   18e00:	mov	r3, r4
   18e04:	str	r2, [r5, #32]
   18e08:	cmp	r0, #7
   18e0c:	movne	r1, #0
   18e10:	cmp	r1, #0
   18e14:	beq	19184 <argp_parse@@Base+0xd88>
   18e18:	ldr	lr, [fp, #-84]	; 0xffffffac
   18e1c:	b	18d0c <argp_parse@@Base+0x910>
   18e20:	ldr	ip, [fp, #-108]	; 0xffffff94
   18e24:	cmp	r9, ip
   18e28:	add	r4, r4, #36	; 0x24
   18e2c:	bcc	18d10 <argp_parse@@Base+0x914>
   18e30:	ldr	r5, [fp, #-84]	; 0xffffffac
   18e34:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18e38:	b	186c0 <argp_parse@@Base+0x2c4>
   18e3c:	ldr	r3, [fp, #-152]	; 0xffffff68
   18e40:	ldr	r2, [r3, #12]
   18e44:	cmp	r7, r2
   18e48:	bne	18e60 <argp_parse@@Base+0xa64>
   18e4c:	b	18f94 <argp_parse@@Base+0xb98>
   18e50:	add	r3, r3, #16
   18e54:	ldr	r2, [r3, #12]
   18e58:	cmp	r7, r2
   18e5c:	beq	18f94 <argp_parse@@Base+0xb98>
   18e60:	ldr	r2, [r3]
   18e64:	cmp	r2, #0
   18e68:	bne	18e50 <argp_parse@@Base+0xa54>
   18e6c:	ldr	r2, [pc, #912]	; 19204 <argp_parse@@Base+0xe08>
   18e70:	ldr	r3, [pc, #900]	; 191fc <argp_parse@@Base+0xe00>
   18e74:	ldr	r1, [pc, #908]	; 19208 <argp_parse@@Base+0xe0c>
   18e78:	sub	r0, fp, #96	; 0x60
   18e7c:	bl	176e8 <argp_error@@Base>
   18e80:	b	18ccc <argp_parse@@Base+0x8d0>
   18e84:	sub	lr, fp, #148	; 0x94
   18e88:	stm	sp, {ip, lr}
   18e8c:	bl	193f8 <argp_parse@@Base+0xffc>
   18e90:	ldr	r5, [fp, #-148]	; 0xffffff6c
   18e94:	str	r5, [fp, #-84]	; 0xffffffac
   18e98:	mov	r7, r0
   18e9c:	cmn	r7, #1
   18ea0:	bne	18b88 <argp_parse@@Base+0x78c>
   18ea4:	cmp	r5, #1
   18ea8:	str	r6, [fp, #-100]	; 0xffffff9c
   18eac:	ble	18ecc <argp_parse@@Base+0xad0>
   18eb0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18eb4:	sub	r3, r5, #-1073741823	; 0xc0000001
   18eb8:	ldr	r1, [pc, #844]	; 1920c <argp_parse@@Base+0xe10>
   18ebc:	ldr	r0, [r2, r3, lsl #2]
   18ec0:	bl	11104 <strcmp@plt>
   18ec4:	cmp	r0, #0
   18ec8:	streq	r5, [fp, #-72]	; 0xffffffb8
   18ecc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18ed0:	cmp	r5, r0
   18ed4:	bge	186c0 <argp_parse@@Base+0x2c4>
   18ed8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18edc:	tst	r3, #4
   18ee0:	beq	18fb8 <argp_parse@@Base+0xbbc>
   18ee4:	ldr	r3, [fp, #4]
   18ee8:	cmp	r3, #0
   18eec:	beq	19130 <argp_parse@@Base+0xd34>
   18ef0:	ldr	r6, [fp, #-112]	; 0xffffff90
   18ef4:	ldr	ip, [fp, #-108]	; 0xffffff94
   18ef8:	str	r5, [r3]
   18efc:	sub	r3, ip, #36	; 0x24
   18f00:	cmp	r6, r3
   18f04:	bhi	18fec <argp_parse@@Base+0xbf0>
   18f08:	ldr	r7, [pc, #768]	; 19210 <argp_parse@@Base+0xe14>
   18f0c:	sub	r4, ip, #72	; 0x48
   18f10:	mov	r8, #0
   18f14:	ldr	r3, [r4, #36]	; 0x24
   18f18:	sub	r2, fp, #96	; 0x60
   18f1c:	cmp	r3, #0
   18f20:	mov	r1, r8
   18f24:	mov	r0, r7
   18f28:	beq	18f84 <argp_parse@@Base+0xb88>
   18f2c:	ldr	ip, [r4, #68]	; 0x44
   18f30:	ldr	lr, [r4, #48]	; 0x30
   18f34:	str	ip, [fp, #-60]	; 0xffffffc4
   18f38:	ldr	ip, [r4, #60]	; 0x3c
   18f3c:	str	ip, [fp, #-68]	; 0xffffffbc
   18f40:	ldr	ip, [r4, #64]	; 0x40
   18f44:	str	lr, [fp, #-76]	; 0xffffffb4
   18f48:	str	ip, [fp, #-64]	; 0xffffffc0
   18f4c:	blx	r3
   18f50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18f54:	str	r3, [r4, #68]	; 0x44
   18f58:	ldr	r6, [fp, #-112]	; 0xffffff90
   18f5c:	cmp	r6, r4
   18f60:	bhi	18fcc <argp_parse@@Base+0xbd0>
   18f64:	cmp	r0, #7
   18f68:	cmpne	r0, #0
   18f6c:	sub	r4, r4, #36	; 0x24
   18f70:	beq	18f14 <argp_parse@@Base+0xb18>
   18f74:	ldr	r4, [fp, #-108]	; 0xffffff94
   18f78:	mov	r5, r0
   18f7c:	sub	r4, r4, #36	; 0x24
   18f80:	b	188b0 <argp_parse@@Base+0x4b4>
   18f84:	cmp	r6, r4
   18f88:	bhi	18fd8 <argp_parse@@Base+0xbdc>
   18f8c:	sub	r4, r4, #36	; 0x24
   18f90:	b	18f14 <argp_parse@@Base+0xb18>
   18f94:	ldr	r2, [r3]
   18f98:	ldr	r3, [pc, #612]	; 19204 <argp_parse@@Base+0xe08>
   18f9c:	cmp	r2, #0
   18fa0:	moveq	r2, r3
   18fa4:	b	18e70 <argp_parse@@Base+0xa74>
   18fa8:	ldr	r3, [fp, #-140]	; 0xffffff74
   18fac:	cmn	r3, #1
   18fb0:	bne	18ccc <argp_parse@@Base+0x8d0>
   18fb4:	b	18ba0 <argp_parse@@Base+0x7a4>
   18fb8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18fbc:	ldr	r7, [r3, r5, lsl #2]
   18fc0:	add	r5, r5, #1
   18fc4:	str	r7, [fp, #-136]	; 0xffffff78
   18fc8:	b	18cf0 <argp_parse@@Base+0x8f4>
   18fcc:	cmp	r0, #7
   18fd0:	mov	r5, r0
   18fd4:	bne	19094 <argp_parse@@Base+0xc98>
   18fd8:	ldr	r4, [fp, #-108]	; 0xffffff94
   18fdc:	sub	r4, r4, #36	; 0x24
   18fe0:	cmp	r6, r4
   18fe4:	movls	r5, #0
   18fe8:	bls	188b8 <argp_parse@@Base+0x4bc>
   18fec:	mov	r5, #0
   18ff0:	b	18924 <argp_parse@@Base+0x528>
   18ff4:	ldr	r3, [r8, #4]
   18ff8:	cmp	r3, #0
   18ffc:	moveq	r6, #36	; 0x24
   19000:	movne	r6, #72	; 0x48
   19004:	movne	r3, #1
   19008:	strne	r3, [fp, #-220]	; 0xffffff24
   1900c:	cmp	r4, #0
   19010:	beq	19070 <argp_parse@@Base+0xc74>
   19014:	ldr	r0, [r4]
   19018:	cmp	r0, #0
   1901c:	beq	19070 <argp_parse@@Base+0xc74>
   19020:	sub	r1, fp, #228	; 0xe4
   19024:	bl	17d28 <argp_error@@Base+0x640>
   19028:	ldr	r3, [fp, #-216]	; 0xffffff28
   1902c:	ldr	r0, [r4, #16]!
   19030:	add	r3, r3, #1
   19034:	cmp	r0, #0
   19038:	str	r3, [fp, #-216]	; 0xffffff28
   1903c:	bne	19020 <argp_parse@@Base+0xc24>
   19040:	ldr	r6, [fp, #-220]	; 0xffffff24
   19044:	ldr	r2, [fp, #-224]	; 0xffffff20
   19048:	add	r6, r6, #1
   1904c:	lsl	r4, r3, #2
   19050:	add	r6, r6, r6, lsl #3
   19054:	add	r3, r2, #1
   19058:	lsl	r6, r6, #2
   1905c:	add	sl, r4, r6
   19060:	add	r3, sl, r3, lsl #4
   19064:	str	r3, [fp, #-232]	; 0xffffff18
   19068:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1906c:	b	18514 <argp_parse@@Base+0x118>
   19070:	ldr	r4, [fp, #-216]	; 0xffffff28
   19074:	ldr	r3, [fp, #-224]	; 0xffffff20
   19078:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1907c:	lsl	r4, r4, #2
   19080:	add	r3, r3, #1
   19084:	add	sl, r4, r6
   19088:	add	r3, sl, r3, lsl #4
   1908c:	str	r3, [fp, #-232]	; 0xffffff18
   19090:	b	18514 <argp_parse@@Base+0x118>
   19094:	ldr	r4, [fp, #-108]	; 0xffffff94
   19098:	sub	r4, r4, #36	; 0x24
   1909c:	b	188b0 <argp_parse@@Base+0x4b4>
   190a0:	ldr	r0, [r2]
   190a4:	cmp	r0, #0
   190a8:	beq	18680 <argp_parse@@Base+0x284>
   190ac:	bl	192cc <argp_parse@@Base+0xed0>
   190b0:	str	r0, [fp, #-56]	; 0xffffffc8
   190b4:	b	1868c <argp_parse@@Base+0x290>
   190b8:	ldr	r2, [pc, #340]	; 19214 <argp_parse@@Base+0xe18>
   190bc:	ldr	r2, [r2]
   190c0:	cmp	r2, #0
   190c4:	addeq	ip, r3, #16
   190c8:	bne	18a70 <argp_parse@@Base+0x674>
   190cc:	b	18a7c <argp_parse@@Base+0x680>
   190d0:	ldr	r6, [fp, #-112]	; 0xffffff90
   190d4:	sub	ip, ip, #36	; 0x24
   190d8:	cmp	r6, ip
   190dc:	mov	r5, r0
   190e0:	bls	190f8 <argp_parse@@Base+0xcfc>
   190e4:	ldr	r3, [fp, #4]
   190e8:	cmp	r3, #0
   190ec:	bne	1880c <argp_parse@@Base+0x410>
   190f0:	b	18818 <argp_parse@@Base+0x41c>
   190f4:	mov	r5, r0
   190f8:	ldr	r3, [fp, #4]
   190fc:	cmp	r3, #0
   19100:	bne	1880c <argp_parse@@Base+0x410>
   19104:	cmp	r5, #7
   19108:	bne	18830 <argp_parse@@Base+0x434>
   1910c:	b	18ccc <argp_parse@@Base+0x8d0>
   19110:	ldr	r6, [fp, #-112]	; 0xffffff90
   19114:	sub	r4, ip, #36	; 0x24
   19118:	cmp	r4, r6
   1911c:	mov	r5, r0
   19120:	bcs	18778 <argp_parse@@Base+0x37c>
   19124:	cmp	r5, #7
   19128:	beq	187fc <argp_parse@@Base+0x400>
   1912c:	b	190e4 <argp_parse@@Base+0xce8>
   19130:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19134:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19138:	tst	r3, #2
   1913c:	bne	18cd0 <argp_parse@@Base+0x8d4>
   19140:	cmp	r1, #0
   19144:	beq	18cd0 <argp_parse@@Base+0x8d4>
   19148:	mov	r0, r1
   1914c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19150:	ldr	r1, [pc, #192]	; 19218 <argp_parse@@Base+0xe1c>
   19154:	bl	112d8 <fprintf@plt>
   19158:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1915c:	b	18cd0 <argp_parse@@Base+0x8d4>
   19160:	mov	r5, r0
   19164:	b	19124 <argp_parse@@Base+0xd28>
   19168:	sub	r4, ip, #36	; 0x24
   1916c:	cmp	r6, r4
   19170:	bls	18784 <argp_parse@@Base+0x388>
   19174:	ldr	r3, [fp, #4]
   19178:	cmp	r3, #0
   1917c:	bne	18808 <argp_parse@@Base+0x40c>
   19180:	b	18efc <argp_parse@@Base+0xb00>
   19184:	cmp	r0, #0
   19188:	bne	191b4 <argp_parse@@Base+0xdb8>
   1918c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19190:	mov	r5, r0
   19194:	str	r0, [fp, #-84]	; 0xffffffac
   19198:	b	18d80 <argp_parse@@Base+0x984>
   1919c:	cmp	r0, #7
   191a0:	mov	r5, r0
   191a4:	beq	18658 <argp_parse@@Base+0x25c>
   191a8:	cmp	r0, #0
   191ac:	bne	1892c <argp_parse@@Base+0x530>
   191b0:	b	18658 <argp_parse@@Base+0x25c>
   191b4:	cmp	r0, #7
   191b8:	mov	r5, r0
   191bc:	beq	18e30 <argp_parse@@Base+0xa34>
   191c0:	ldr	r6, [fp, #-112]	; 0xffffff90
   191c4:	b	18834 <argp_parse@@Base+0x438>
   191c8:	ldrdeq	pc, [r2], -r4
   191cc:	ldrdeq	pc, [r2], -r0
   191d0:	ldrdeq	pc, [r2], -r8
   191d4:	ldrdeq	pc, [r2], -ip
   191d8:	tsteq	r0, r6
   191dc:	tsteq	r0, r2
   191e0:	tsteq	r0, r1
   191e4:	tsteq	r0, r5
   191e8:	tsteq	r0, r7
   191ec:	tsteq	r0, r3
   191f0:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   191f4:	andeq	sp, r1, r0, lsl ip
   191f8:	andeq	sp, r1, ip, lsr #24
   191fc:	andeq	sp, r1, r8, asr #24
   19200:	andeq	sp, r1, ip, asr sp
   19204:	andeq	sp, r1, r4, asr sp
   19208:	andeq	sp, r1, r4, ror #26
   1920c:	andeq	sp, r1, r8, asr sp
   19210:	tsteq	r0, r4
   19214:	andeq	pc, r2, r0, lsl r4	; <UNPREDICTABLE>
   19218:	andeq	sp, r1, r0, ror sp
   1921c:	cmp	r1, #0
   19220:	beq	19260 <argp_parse@@Base+0xe64>
   19224:	ldr	r2, [r1, #52]	; 0x34
   19228:	ldr	r3, [r2, #48]	; 0x30
   1922c:	ldr	r1, [r2, #52]	; 0x34
   19230:	cmp	r3, r1
   19234:	bcs	19260 <argp_parse@@Base+0xe64>
   19238:	ldr	r2, [r3, #4]
   1923c:	cmp	r0, r2
   19240:	bne	19254 <argp_parse@@Base+0xe58>
   19244:	b	19268 <argp_parse@@Base+0xe6c>
   19248:	ldr	r2, [r3, #4]
   1924c:	cmp	r2, r0
   19250:	beq	19268 <argp_parse@@Base+0xe6c>
   19254:	add	r3, r3, #36	; 0x24
   19258:	cmp	r3, r1
   1925c:	bcc	19248 <argp_parse@@Base+0xe4c>
   19260:	mov	r0, #0
   19264:	bx	lr
   19268:	ldr	r0, [r3, #24]
   1926c:	bx	lr
   19270:	ldr	ip, [pc, #32]	; 19298 <argp_parse@@Base+0xe9c>
   19274:	push	{lr}		; (str lr, [sp, #-4]!)
   19278:	sub	sp, sp, #12
   1927c:	ldm	ip, {r1, ip}
   19280:	ldr	r3, [pc, #20]	; 1929c <argp_parse@@Base+0xea0>
   19284:	ldr	r2, [pc, #20]	; 192a0 <argp_parse@@Base+0xea4>
   19288:	str	ip, [sp]
   1928c:	bl	197dc <argp_parse@@Base+0x13e0>
   19290:	add	sp, sp, #12
   19294:	pop	{pc}		; (ldr pc, [sp], #4)
   19298:	andeq	pc, r2, r4, lsl r4	; <UNPREDICTABLE>
   1929c:	andeq	sp, r1, r8, asr #28
   192a0:	andeq	sp, r1, r8, asr lr
   192a4:	ldr	r3, [pc, #20]	; 192c0 <argp_parse@@Base+0xec4>
   192a8:	ldr	r2, [pc, #20]	; 192c4 <argp_parse@@Base+0xec8>
   192ac:	ldr	ip, [pc, #20]	; 192c8 <argp_parse@@Base+0xecc>
   192b0:	str	r0, [r3]
   192b4:	str	ip, [r2]
   192b8:	str	r1, [r3, #4]
   192bc:	bx	lr
   192c0:	andeq	pc, r2, r4, lsl r4	; <UNPREDICTABLE>
   192c4:	andeq	pc, r2, r0, lsl r4	; <UNPREDICTABLE>
   192c8:	andeq	r9, r1, r0, ror r2
   192cc:	ldrb	r3, [r0]
   192d0:	cmp	r3, #47	; 0x2f
   192d4:	bne	192e4 <argp_parse@@Base+0xee8>
   192d8:	ldrb	r3, [r0, #1]!
   192dc:	cmp	r3, #47	; 0x2f
   192e0:	beq	192d8 <argp_parse@@Base+0xedc>
   192e4:	cmp	r3, #0
   192e8:	bxeq	lr
   192ec:	mov	r2, #0
   192f0:	push	{lr}		; (str lr, [sp, #-4]!)
   192f4:	mov	ip, r2
   192f8:	mov	r1, r0
   192fc:	mov	lr, #1
   19300:	cmp	r3, #47	; 0x2f
   19304:	moveq	r2, lr
   19308:	beq	19318 <argp_parse@@Base+0xf1c>
   1930c:	cmp	r2, #0
   19310:	movne	r0, r1
   19314:	movne	r2, ip
   19318:	ldrb	r3, [r1, #1]!
   1931c:	cmp	r3, #0
   19320:	bne	19300 <argp_parse@@Base+0xf04>
   19324:	pop	{pc}		; (ldr pc, [sp], #4)
   19328:	push	{r4, lr}
   1932c:	mov	r4, r0
   19330:	bl	112c0 <strlen@plt>
   19334:	cmp	r0, #1
   19338:	popls	{r4, pc}
   1933c:	sub	r3, r0, #1
   19340:	add	r2, r4, r3
   19344:	ldrb	r1, [r4, r3]
   19348:	cmp	r1, #47	; 0x2f
   1934c:	popne	{r4, pc}
   19350:	cmp	r3, #1
   19354:	beq	19368 <argp_parse@@Base+0xf6c>
   19358:	ldrb	r1, [r2, #-1]!
   1935c:	sub	r0, r3, #1
   19360:	cmp	r1, #47	; 0x2f
   19364:	beq	19370 <argp_parse@@Base+0xf74>
   19368:	mov	r0, r3
   1936c:	pop	{r4, pc}
   19370:	mov	r3, r0
   19374:	b	19350 <argp_parse@@Base+0xf54>
   19378:	push	{r4, r5, lr}
   1937c:	sub	sp, sp, #12
   19380:	mov	r5, r0
   19384:	bl	112e4 <__errno_location@plt>
   19388:	mov	r2, #0
   1938c:	mov	r4, r0
   19390:	ldr	r3, [r0]
   19394:	str	r2, [r4]
   19398:	mov	r0, r5
   1939c:	str	r3, [sp]
   193a0:	str	r3, [sp, #4]
   193a4:	bl	11164 <free@plt>
   193a8:	ldr	r3, [r4]
   193ac:	add	r2, sp, #8
   193b0:	cmp	r3, #0
   193b4:	moveq	r3, #4
   193b8:	movne	r3, #0
   193bc:	add	r3, r2, r3
   193c0:	ldr	r3, [r3, #-8]
   193c4:	str	r3, [r4]
   193c8:	add	sp, sp, #12
   193cc:	pop	{r4, r5, pc}
   193d0:	push	{lr}		; (str lr, [sp, #-4]!)
   193d4:	sub	sp, sp, #20
   193d8:	mov	ip, #0
   193dc:	ldr	lr, [sp, #24]
   193e0:	str	ip, [sp, #8]
   193e4:	str	lr, [sp]
   193e8:	str	ip, [sp, #4]
   193ec:	bl	1bf98 <argp_parse@@Base+0x3b9c>
   193f0:	add	sp, sp, #20
   193f4:	pop	{pc}		; (ldr pc, [sp], #4)
   193f8:	push	{r4, lr}
   193fc:	sub	sp, sp, #16
   19400:	mov	ip, #0
   19404:	ldr	r4, [sp, #24]
   19408:	ldr	lr, [sp, #28]
   1940c:	str	r4, [sp]
   19410:	str	lr, [sp, #8]
   19414:	str	ip, [sp, #12]
   19418:	str	ip, [sp, #4]
   1941c:	bl	1ba24 <argp_parse@@Base+0x3628>
   19420:	add	sp, sp, #16
   19424:	pop	{r4, pc}
   19428:	push	{r4, lr}
   1942c:	sub	sp, sp, #16
   19430:	mov	lr, #0
   19434:	ldr	r4, [sp, #24]
   19438:	mov	ip, #1
   1943c:	stm	sp, {r4, ip, lr}
   19440:	bl	1bf98 <argp_parse@@Base+0x3b9c>
   19444:	add	sp, sp, #16
   19448:	pop	{r4, pc}
   1944c:	push	{r4, r5, lr}
   19450:	sub	sp, sp, #20
   19454:	mov	lr, #0
   19458:	ldr	r5, [sp, #32]
   1945c:	ldr	r4, [sp, #36]	; 0x24
   19460:	mov	ip, #1
   19464:	str	r5, [sp]
   19468:	str	r4, [sp, #8]
   1946c:	str	lr, [sp, #12]
   19470:	str	ip, [sp, #4]
   19474:	bl	1ba24 <argp_parse@@Base+0x3628>
   19478:	add	sp, sp, #20
   1947c:	pop	{r4, r5, pc}
   19480:	push	{r4, r5, r6, lr}
   19484:	subs	r4, r0, #0
   19488:	beq	194fc <argp_parse@@Base+0x1100>
   1948c:	mov	r1, #47	; 0x2f
   19490:	bl	11368 <strrchr@plt>
   19494:	subs	r5, r0, #0
   19498:	beq	194e8 <argp_parse@@Base+0x10ec>
   1949c:	add	r6, r5, #1
   194a0:	sub	r3, r6, r4
   194a4:	cmp	r3, #6
   194a8:	ble	194e8 <argp_parse@@Base+0x10ec>
   194ac:	mov	r2, #7
   194b0:	ldr	r1, [pc, #96]	; 19518 <argp_parse@@Base+0x111c>
   194b4:	sub	r0, r5, #6
   194b8:	bl	11410 <strncmp@plt>
   194bc:	cmp	r0, #0
   194c0:	bne	194e8 <argp_parse@@Base+0x10ec>
   194c4:	mov	r2, #3
   194c8:	ldr	r1, [pc, #76]	; 1951c <argp_parse@@Base+0x1120>
   194cc:	mov	r0, r6
   194d0:	bl	11410 <strncmp@plt>
   194d4:	cmp	r0, #0
   194d8:	movne	r4, r6
   194dc:	ldreq	r3, [pc, #60]	; 19520 <argp_parse@@Base+0x1124>
   194e0:	addeq	r4, r5, #4
   194e4:	streq	r4, [r3]
   194e8:	ldr	r2, [pc, #52]	; 19524 <argp_parse@@Base+0x1128>
   194ec:	ldr	r3, [pc, #52]	; 19528 <argp_parse@@Base+0x112c>
   194f0:	str	r4, [r2]
   194f4:	str	r4, [r3]
   194f8:	pop	{r4, r5, r6, pc}
   194fc:	ldr	r3, [pc, #40]	; 1952c <argp_parse@@Base+0x1130>
   19500:	mov	r2, #55	; 0x37
   19504:	mov	r1, #1
   19508:	ldr	r3, [r3]
   1950c:	ldr	r0, [pc, #28]	; 19530 <argp_parse@@Base+0x1134>
   19510:	bl	1120c <fwrite@plt>
   19514:	bl	1141c <abort@plt>
   19518:	andeq	sp, r1, r0, lsr #29
   1951c:	andeq	sp, r1, r8, lsr #29
   19520:	ldrdeq	pc, [r2], -r0
   19524:	andeq	pc, r2, ip, lsl r4	; <UNPREDICTABLE>
   19528:	ldrdeq	pc, [r2], -r4
   1952c:	ldrdeq	pc, [r2], -r8
   19530:	andeq	sp, r1, r8, ror #28
   19534:	push	{r4, r5, r6, r7, lr}
   19538:	sub	sp, sp, #36	; 0x24
   1953c:	cmp	r1, #0
   19540:	mov	r4, r0
   19544:	ldr	r5, [sp, #56]	; 0x38
   19548:	ldr	r6, [sp, #60]	; 0x3c
   1954c:	beq	1978c <argp_parse@@Base+0x1390>
   19550:	str	r3, [sp]
   19554:	mov	r3, r2
   19558:	mov	r2, r1
   1955c:	ldr	r1, [pc, #564]	; 19798 <argp_parse@@Base+0x139c>
   19560:	bl	112d8 <fprintf@plt>
   19564:	ldr	r3, [pc, #560]	; 1979c <argp_parse@@Base+0x13a0>
   19568:	ldr	r2, [pc, #560]	; 197a0 <argp_parse@@Base+0x13a4>
   1956c:	ldr	r1, [pc, #560]	; 197a4 <argp_parse@@Base+0x13a8>
   19570:	mov	r0, r4
   19574:	bl	112d8 <fprintf@plt>
   19578:	mov	r1, r4
   1957c:	mov	r0, #10
   19580:	bl	11380 <fputc@plt>
   19584:	ldr	r1, [pc, #540]	; 197a8 <argp_parse@@Base+0x13ac>
   19588:	ldr	r2, [pc, #540]	; 197ac <argp_parse@@Base+0x13b0>
   1958c:	mov	r0, r4
   19590:	bl	112d8 <fprintf@plt>
   19594:	mov	r1, r4
   19598:	mov	r0, #10
   1959c:	bl	11380 <fputc@plt>
   195a0:	cmp	r6, #9
   195a4:	ldrls	pc, [pc, r6, lsl #2]
   195a8:	b	195d4 <argp_parse@@Base+0x11d8>
   195ac:	andeq	r9, r1, r4, lsl r6
   195b0:	andeq	r9, r1, r0, ror #12
   195b4:	andeq	r9, r1, r8, ror r6
   195b8:	muleq	r1, r0, r6
   195bc:			; <UNDEFINED> instruction: 0x000196b0
   195c0:	ldrdeq	r9, [r1], -r8
   195c4:	strdeq	r9, [r1], -r8
   195c8:	andeq	r9, r1, r0, lsr #14
   195cc:	andeq	r9, r1, r0, asr r7
   195d0:	andeq	r9, r1, ip, lsl r6
   195d4:	ldr	ip, [r5, #32]
   195d8:	ldr	r1, [r5, #28]
   195dc:	ldm	r5, {r2, r3}
   195e0:	ldr	r7, [r5, #24]
   195e4:	ldr	r6, [r5, #20]
   195e8:	str	ip, [sp, #24]
   195ec:	ldr	lr, [r5, #16]
   195f0:	str	r1, [sp, #20]
   195f4:	ldr	r1, [r5, #8]
   195f8:	ldr	ip, [r5, #12]
   195fc:	mov	r0, r4
   19600:	str	r7, [sp, #16]
   19604:	stm	sp, {r1, ip, lr}
   19608:	str	r6, [sp, #12]
   1960c:	ldr	r1, [pc, #412]	; 197b0 <argp_parse@@Base+0x13b4>
   19610:	bl	112d8 <fprintf@plt>
   19614:	add	sp, sp, #36	; 0x24
   19618:	pop	{r4, r5, r6, r7, pc}
   1961c:	ldr	ip, [r5, #32]
   19620:	ldr	r1, [r5, #28]
   19624:	ldm	r5, {r2, r3}
   19628:	ldr	r7, [r5, #24]
   1962c:	ldr	r6, [r5, #20]
   19630:	str	ip, [sp, #24]
   19634:	ldr	lr, [r5, #16]
   19638:	str	r1, [sp, #20]
   1963c:	ldr	r1, [r5, #8]
   19640:	ldr	ip, [r5, #12]
   19644:	mov	r0, r4
   19648:	str	r7, [sp, #16]
   1964c:	stm	sp, {r1, ip, lr}
   19650:	str	r6, [sp, #12]
   19654:	ldr	r1, [pc, #344]	; 197b4 <argp_parse@@Base+0x13b8>
   19658:	bl	112d8 <fprintf@plt>
   1965c:	b	19614 <argp_parse@@Base+0x1218>
   19660:	ldr	r2, [r5]
   19664:	mov	r0, r4
   19668:	ldr	r1, [pc, #328]	; 197b8 <argp_parse@@Base+0x13bc>
   1966c:	add	sp, sp, #36	; 0x24
   19670:	pop	{r4, r5, r6, r7, lr}
   19674:	b	112d8 <fprintf@plt>
   19678:	mov	r0, r4
   1967c:	ldm	r5, {r2, r3}
   19680:	ldr	r1, [pc, #308]	; 197bc <argp_parse@@Base+0x13c0>
   19684:	add	sp, sp, #36	; 0x24
   19688:	pop	{r4, r5, r6, r7, lr}
   1968c:	b	112d8 <fprintf@plt>
   19690:	ldr	r1, [r5, #8]
   19694:	ldm	r5, {r2, r3}
   19698:	mov	r0, r4
   1969c:	str	r1, [sp, #56]	; 0x38
   196a0:	ldr	r1, [pc, #280]	; 197c0 <argp_parse@@Base+0x13c4>
   196a4:	add	sp, sp, #36	; 0x24
   196a8:	pop	{r4, r5, r6, r7, lr}
   196ac:	b	112d8 <fprintf@plt>
   196b0:	ldr	r1, [r5, #8]
   196b4:	ldr	ip, [r5, #12]
   196b8:	ldm	r5, {r2, r3}
   196bc:	mov	r0, r4
   196c0:	str	r1, [sp, #56]	; 0x38
   196c4:	str	ip, [sp, #60]	; 0x3c
   196c8:	ldr	r1, [pc, #244]	; 197c4 <argp_parse@@Base+0x13c8>
   196cc:	add	sp, sp, #36	; 0x24
   196d0:	pop	{r4, r5, r6, r7, lr}
   196d4:	b	112d8 <fprintf@plt>
   196d8:	add	r1, r5, #8
   196dc:	ldm	r5, {r2, r3}
   196e0:	ldm	r1, {r1, ip, lr}
   196e4:	mov	r0, r4
   196e8:	stm	sp, {r1, ip, lr}
   196ec:	ldr	r1, [pc, #212]	; 197c8 <argp_parse@@Base+0x13cc>
   196f0:	bl	112d8 <fprintf@plt>
   196f4:	b	19614 <argp_parse@@Base+0x1218>
   196f8:	add	r1, r5, #8
   196fc:	ldr	r6, [r5, #20]
   19700:	ldm	r1, {r1, ip, lr}
   19704:	mov	r0, r4
   19708:	ldm	r5, {r2, r3}
   1970c:	str	r6, [sp, #12]
   19710:	stm	sp, {r1, ip, lr}
   19714:	ldr	r1, [pc, #176]	; 197cc <argp_parse@@Base+0x13d0>
   19718:	bl	112d8 <fprintf@plt>
   1971c:	b	19614 <argp_parse@@Base+0x1218>
   19720:	add	r1, r5, #8
   19724:	ldr	r7, [r5, #24]
   19728:	ldm	r1, {r1, ip, lr}
   1972c:	mov	r0, r4
   19730:	ldr	r6, [r5, #20]
   19734:	ldm	r5, {r2, r3}
   19738:	stm	sp, {r1, ip, lr}
   1973c:	str	r7, [sp, #16]
   19740:	str	r6, [sp, #12]
   19744:	ldr	r1, [pc, #132]	; 197d0 <argp_parse@@Base+0x13d4>
   19748:	bl	112d8 <fprintf@plt>
   1974c:	b	19614 <argp_parse@@Base+0x1218>
   19750:	ldr	r1, [r5, #28]
   19754:	ldm	r5, {r2, r3}
   19758:	ldr	r7, [r5, #24]
   1975c:	ldr	r6, [r5, #20]
   19760:	ldr	lr, [r5, #16]
   19764:	str	r1, [sp, #20]
   19768:	ldr	r1, [r5, #8]
   1976c:	ldr	ip, [r5, #12]
   19770:	mov	r0, r4
   19774:	str	r7, [sp, #16]
   19778:	stm	sp, {r1, ip, lr}
   1977c:	str	r6, [sp, #12]
   19780:	ldr	r1, [pc, #76]	; 197d4 <argp_parse@@Base+0x13d8>
   19784:	bl	112d8 <fprintf@plt>
   19788:	b	19614 <argp_parse@@Base+0x1218>
   1978c:	ldr	r1, [pc, #68]	; 197d8 <argp_parse@@Base+0x13dc>
   19790:	bl	112d8 <fprintf@plt>
   19794:	b	19564 <argp_parse@@Base+0x1168>
   19798:	andeq	sp, r1, ip, lsr #29
   1979c:	andeq	r0, r0, r6, ror #15
   197a0:			; <UNDEFINED> instruction: 0x0001deb8
   197a4:			; <UNDEFINED> instruction: 0x0001e1b8
   197a8:	andeq	sp, r1, r0, ror #29
   197ac:			; <UNDEFINED> instruction: 0x0001debc
   197b0:	andeq	lr, r1, ip, asr #1
   197b4:	muleq	r1, r8, r0
   197b8:	andeq	sp, r1, ip, lsl #31
   197bc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   197c0:			; <UNDEFINED> instruction: 0x0001dfb4
   197c4:	ldrdeq	sp, [r1], -r0
   197c8:	strdeq	sp, [r1], -r0
   197cc:	andeq	lr, r1, r4, lsl r0
   197d0:	andeq	lr, r1, ip, lsr r0
   197d4:	andeq	lr, r1, r8, rrx
   197d8:	andeq	sp, r1, r0, asr #4
   197dc:	push	{r4, r5, r6, r7, lr}
   197e0:	sub	sp, sp, #36	; 0x24
   197e4:	mov	r6, r0
   197e8:	ldr	r5, [sp, #56]	; 0x38
   197ec:	ldr	r4, [r5]
   197f0:	cmp	r4, #0
   197f4:	beq	19810 <argp_parse@@Base+0x1414>
   197f8:	mov	r0, r5
   197fc:	mov	r4, #0
   19800:	ldr	ip, [r0, #4]!
   19804:	add	r4, r4, #1
   19808:	cmp	ip, #0
   1980c:	bne	19800 <argp_parse@@Base+0x1404>
   19810:	cmp	r1, #0
   19814:	beq	19a50 <argp_parse@@Base+0x1654>
   19818:	str	r3, [sp]
   1981c:	mov	r0, r6
   19820:	mov	r3, r2
   19824:	mov	r2, r1
   19828:	ldr	r1, [pc, #560]	; 19a60 <argp_parse@@Base+0x1664>
   1982c:	bl	112d8 <fprintf@plt>
   19830:	ldr	r3, [pc, #556]	; 19a64 <argp_parse@@Base+0x1668>
   19834:	ldr	r2, [pc, #556]	; 19a68 <argp_parse@@Base+0x166c>
   19838:	ldr	r1, [pc, #556]	; 19a6c <argp_parse@@Base+0x1670>
   1983c:	mov	r0, r6
   19840:	bl	112d8 <fprintf@plt>
   19844:	mov	r1, r6
   19848:	mov	r0, #10
   1984c:	bl	11380 <fputc@plt>
   19850:	ldr	r1, [pc, #536]	; 19a70 <argp_parse@@Base+0x1674>
   19854:	ldr	r2, [pc, #536]	; 19a74 <argp_parse@@Base+0x1678>
   19858:	mov	r0, r6
   1985c:	bl	112d8 <fprintf@plt>
   19860:	mov	r1, r6
   19864:	mov	r0, #10
   19868:	bl	11380 <fputc@plt>
   1986c:	cmp	r4, #9
   19870:	ldrls	pc, [pc, r4, lsl #2]
   19874:	b	198a0 <argp_parse@@Base+0x14a4>
   19878:	andeq	r9, r1, r0, ror #17
   1987c:	andeq	r9, r1, ip, lsr #18
   19880:	andeq	r9, r1, r4, asr #18
   19884:	andeq	r9, r1, ip, asr r9
   19888:	andeq	r9, r1, ip, ror r9
   1988c:	muleq	r1, ip, r9
   19890:			; <UNDEFINED> instruction: 0x000199bc
   19894:	andeq	r9, r1, r4, ror #19
   19898:	andeq	r9, r1, r4, lsl sl
   1989c:	andeq	r9, r1, r8, ror #17
   198a0:	ldr	ip, [r5, #32]
   198a4:	ldr	r1, [r5, #28]
   198a8:	ldm	r5, {r2, r3}
   198ac:	ldr	r7, [r5, #24]
   198b0:	ldr	r4, [r5, #20]
   198b4:	str	ip, [sp, #24]
   198b8:	ldr	lr, [r5, #16]
   198bc:	str	r1, [sp, #20]
   198c0:	ldr	r1, [r5, #8]
   198c4:	ldr	ip, [r5, #12]
   198c8:	mov	r0, r6
   198cc:	str	r7, [sp, #16]
   198d0:	stm	sp, {r1, ip, lr}
   198d4:	str	r4, [sp, #12]
   198d8:	ldr	r1, [pc, #408]	; 19a78 <argp_parse@@Base+0x167c>
   198dc:	bl	112d8 <fprintf@plt>
   198e0:	add	sp, sp, #36	; 0x24
   198e4:	pop	{r4, r5, r6, r7, pc}
   198e8:	ldr	ip, [r5, #32]
   198ec:	ldr	r1, [r5, #28]
   198f0:	ldm	r5, {r2, r3}
   198f4:	ldr	r7, [r5, #24]
   198f8:	ldr	r4, [r5, #20]
   198fc:	str	ip, [sp, #24]
   19900:	ldr	lr, [r5, #16]
   19904:	str	r1, [sp, #20]
   19908:	ldr	r1, [r5, #8]
   1990c:	ldr	ip, [r5, #12]
   19910:	mov	r0, r6
   19914:	str	r7, [sp, #16]
   19918:	stm	sp, {r1, ip, lr}
   1991c:	str	r4, [sp, #12]
   19920:	ldr	r1, [pc, #340]	; 19a7c <argp_parse@@Base+0x1680>
   19924:	bl	112d8 <fprintf@plt>
   19928:	b	198e0 <argp_parse@@Base+0x14e4>
   1992c:	ldr	r2, [r5]
   19930:	mov	r0, r6
   19934:	ldr	r1, [pc, #324]	; 19a80 <argp_parse@@Base+0x1684>
   19938:	add	sp, sp, #36	; 0x24
   1993c:	pop	{r4, r5, r6, r7, lr}
   19940:	b	112d8 <fprintf@plt>
   19944:	mov	r0, r6
   19948:	ldm	r5, {r2, r3}
   1994c:	ldr	r1, [pc, #304]	; 19a84 <argp_parse@@Base+0x1688>
   19950:	add	sp, sp, #36	; 0x24
   19954:	pop	{r4, r5, r6, r7, lr}
   19958:	b	112d8 <fprintf@plt>
   1995c:	ldr	r1, [r5, #8]
   19960:	ldm	r5, {r2, r3}
   19964:	mov	r0, r6
   19968:	str	r1, [sp, #56]	; 0x38
   1996c:	ldr	r1, [pc, #276]	; 19a88 <argp_parse@@Base+0x168c>
   19970:	add	sp, sp, #36	; 0x24
   19974:	pop	{r4, r5, r6, r7, lr}
   19978:	b	112d8 <fprintf@plt>
   1997c:	ldr	r1, [r5, #8]
   19980:	ldr	ip, [r5, #12]
   19984:	ldm	r5, {r2, r3}
   19988:	mov	r0, r6
   1998c:	stm	sp, {r1, ip}
   19990:	ldr	r1, [pc, #244]	; 19a8c <argp_parse@@Base+0x1690>
   19994:	bl	112d8 <fprintf@plt>
   19998:	b	198e0 <argp_parse@@Base+0x14e4>
   1999c:	add	r1, r5, #8
   199a0:	ldm	r5, {r2, r3}
   199a4:	ldm	r1, {r1, ip, lr}
   199a8:	mov	r0, r6
   199ac:	stm	sp, {r1, ip, lr}
   199b0:	ldr	r1, [pc, #216]	; 19a90 <argp_parse@@Base+0x1694>
   199b4:	bl	112d8 <fprintf@plt>
   199b8:	b	198e0 <argp_parse@@Base+0x14e4>
   199bc:	add	r1, r5, #8
   199c0:	ldr	r4, [r5, #20]
   199c4:	ldm	r1, {r1, ip, lr}
   199c8:	mov	r0, r6
   199cc:	ldm	r5, {r2, r3}
   199d0:	str	r4, [sp, #12]
   199d4:	stm	sp, {r1, ip, lr}
   199d8:	ldr	r1, [pc, #180]	; 19a94 <argp_parse@@Base+0x1698>
   199dc:	bl	112d8 <fprintf@plt>
   199e0:	b	198e0 <argp_parse@@Base+0x14e4>
   199e4:	add	r1, r5, #8
   199e8:	ldr	r7, [r5, #24]
   199ec:	ldm	r1, {r1, ip, lr}
   199f0:	mov	r0, r6
   199f4:	ldr	r4, [r5, #20]
   199f8:	ldm	r5, {r2, r3}
   199fc:	stm	sp, {r1, ip, lr}
   19a00:	str	r7, [sp, #16]
   19a04:	str	r4, [sp, #12]
   19a08:	ldr	r1, [pc, #136]	; 19a98 <argp_parse@@Base+0x169c>
   19a0c:	bl	112d8 <fprintf@plt>
   19a10:	b	198e0 <argp_parse@@Base+0x14e4>
   19a14:	ldr	r1, [r5, #28]
   19a18:	ldm	r5, {r2, r3}
   19a1c:	ldr	r7, [r5, #24]
   19a20:	ldr	r4, [r5, #20]
   19a24:	ldr	lr, [r5, #16]
   19a28:	str	r1, [sp, #20]
   19a2c:	ldr	r1, [r5, #8]
   19a30:	ldr	ip, [r5, #12]
   19a34:	mov	r0, r6
   19a38:	str	r7, [sp, #16]
   19a3c:	stm	sp, {r1, ip, lr}
   19a40:	str	r4, [sp, #12]
   19a44:	ldr	r1, [pc, #80]	; 19a9c <argp_parse@@Base+0x16a0>
   19a48:	bl	112d8 <fprintf@plt>
   19a4c:	b	198e0 <argp_parse@@Base+0x14e4>
   19a50:	ldr	r1, [pc, #72]	; 19aa0 <argp_parse@@Base+0x16a4>
   19a54:	mov	r0, r6
   19a58:	bl	112d8 <fprintf@plt>
   19a5c:	b	19830 <argp_parse@@Base+0x1434>
   19a60:	andeq	sp, r1, ip, lsr #29
   19a64:	andeq	r0, r0, r6, ror #15
   19a68:			; <UNDEFINED> instruction: 0x0001deb8
   19a6c:			; <UNDEFINED> instruction: 0x0001e1b8
   19a70:	andeq	sp, r1, r0, ror #29
   19a74:			; <UNDEFINED> instruction: 0x0001debc
   19a78:	andeq	lr, r1, ip, asr #1
   19a7c:	muleq	r1, r8, r0
   19a80:	andeq	sp, r1, ip, lsl #31
   19a84:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19a88:			; <UNDEFINED> instruction: 0x0001dfb4
   19a8c:	ldrdeq	sp, [r1], -r0
   19a90:	strdeq	sp, [r1], -r0
   19a94:	andeq	lr, r1, r4, lsl r0
   19a98:	andeq	lr, r1, ip, lsr r0
   19a9c:	andeq	lr, r1, r8, rrx
   19aa0:	andeq	sp, r1, r0, asr #4
   19aa4:	push	{r4, r5, r6, lr}
   19aa8:	sub	sp, sp, #72	; 0x48
   19aac:	mov	r5, r0
   19ab0:	ldr	ip, [sp, #88]	; 0x58
   19ab4:	ldr	r0, [ip]
   19ab8:	cmp	r0, #0
   19abc:	str	r0, [sp, #32]
   19ac0:	beq	19dc8 <argp_parse@@Base+0x19cc>
   19ac4:	ldr	r0, [ip, #4]
   19ac8:	cmp	r0, #0
   19acc:	str	r0, [sp, #36]	; 0x24
   19ad0:	beq	19dd0 <argp_parse@@Base+0x19d4>
   19ad4:	ldr	r0, [ip, #8]
   19ad8:	cmp	r0, #0
   19adc:	str	r0, [sp, #40]	; 0x28
   19ae0:	beq	19dd8 <argp_parse@@Base+0x19dc>
   19ae4:	ldr	r0, [ip, #12]
   19ae8:	cmp	r0, #0
   19aec:	str	r0, [sp, #44]	; 0x2c
   19af0:	beq	19de0 <argp_parse@@Base+0x19e4>
   19af4:	ldr	r0, [ip, #16]
   19af8:	cmp	r0, #0
   19afc:	str	r0, [sp, #48]	; 0x30
   19b00:	beq	19de8 <argp_parse@@Base+0x19ec>
   19b04:	ldr	r0, [ip, #20]
   19b08:	cmp	r0, #0
   19b0c:	str	r0, [sp, #52]	; 0x34
   19b10:	beq	19df0 <argp_parse@@Base+0x19f4>
   19b14:	ldr	r0, [ip, #24]
   19b18:	cmp	r0, #0
   19b1c:	str	r0, [sp, #56]	; 0x38
   19b20:	beq	19df8 <argp_parse@@Base+0x19fc>
   19b24:	ldr	r0, [ip, #28]
   19b28:	cmp	r0, #0
   19b2c:	str	r0, [sp, #60]	; 0x3c
   19b30:	beq	19e00 <argp_parse@@Base+0x1a04>
   19b34:	ldr	r0, [ip, #32]
   19b38:	cmp	r0, #0
   19b3c:	str	r0, [sp, #64]	; 0x40
   19b40:	beq	19e08 <argp_parse@@Base+0x1a0c>
   19b44:	ldr	r0, [ip, #36]	; 0x24
   19b48:	cmp	r0, #0
   19b4c:	movne	r4, #10
   19b50:	moveq	r4, #9
   19b54:	cmp	r1, #0
   19b58:	beq	19db8 <argp_parse@@Base+0x19bc>
   19b5c:	str	r3, [sp]
   19b60:	mov	r0, r5
   19b64:	mov	r3, r2
   19b68:	mov	r2, r1
   19b6c:	ldr	r1, [pc, #668]	; 19e10 <argp_parse@@Base+0x1a14>
   19b70:	bl	112d8 <fprintf@plt>
   19b74:	ldr	r3, [pc, #664]	; 19e14 <argp_parse@@Base+0x1a18>
   19b78:	ldr	r2, [pc, #664]	; 19e18 <argp_parse@@Base+0x1a1c>
   19b7c:	ldr	r1, [pc, #664]	; 19e1c <argp_parse@@Base+0x1a20>
   19b80:	mov	r0, r5
   19b84:	bl	112d8 <fprintf@plt>
   19b88:	mov	r1, r5
   19b8c:	mov	r0, #10
   19b90:	bl	11380 <fputc@plt>
   19b94:	ldr	r1, [pc, #644]	; 19e20 <argp_parse@@Base+0x1a24>
   19b98:	ldr	r2, [pc, #644]	; 19e24 <argp_parse@@Base+0x1a28>
   19b9c:	mov	r0, r5
   19ba0:	bl	112d8 <fprintf@plt>
   19ba4:	mov	r1, r5
   19ba8:	mov	r0, #10
   19bac:	bl	11380 <fputc@plt>
   19bb0:	cmp	r4, #9
   19bb4:	ldrls	pc, [pc, r4, lsl #2]
   19bb8:	b	19be4 <argp_parse@@Base+0x17e8>
   19bbc:	andeq	r9, r1, r8, lsr #24
   19bc0:	andeq	r9, r1, r8, ror ip
   19bc4:	muleq	r1, r0, ip
   19bc8:	andeq	r9, r1, ip, lsr #25
   19bcc:	ldrdeq	r9, [r1], -r0
   19bd0:	strdeq	r9, [r1], -r4
   19bd4:	andeq	r9, r1, r8, lsl sp
   19bd8:	andeq	r9, r1, r4, asr #26
   19bdc:	andeq	r9, r1, r8, ror sp
   19be0:	andeq	r9, r1, r0, lsr ip
   19be4:	ldr	ip, [sp, #64]	; 0x40
   19be8:	ldr	r1, [sp, #60]	; 0x3c
   19bec:	ldr	lr, [sp, #48]	; 0x30
   19bf0:	str	ip, [sp, #24]
   19bf4:	str	r1, [sp, #20]
   19bf8:	ldr	ip, [sp, #44]	; 0x2c
   19bfc:	ldr	r1, [sp, #40]	; 0x28
   19c00:	ldr	r6, [sp, #56]	; 0x38
   19c04:	ldr	r4, [sp, #52]	; 0x34
   19c08:	stm	sp, {r1, ip, lr}
   19c0c:	mov	r0, r5
   19c10:	ldr	r3, [sp, #36]	; 0x24
   19c14:	ldr	r2, [sp, #32]
   19c18:	str	r6, [sp, #16]
   19c1c:	str	r4, [sp, #12]
   19c20:	ldr	r1, [pc, #512]	; 19e28 <argp_parse@@Base+0x1a2c>
   19c24:	bl	112d8 <fprintf@plt>
   19c28:	add	sp, sp, #72	; 0x48
   19c2c:	pop	{r4, r5, r6, pc}
   19c30:	ldr	ip, [sp, #64]	; 0x40
   19c34:	ldr	r1, [sp, #60]	; 0x3c
   19c38:	ldr	lr, [sp, #48]	; 0x30
   19c3c:	str	ip, [sp, #24]
   19c40:	str	r1, [sp, #20]
   19c44:	ldr	ip, [sp, #44]	; 0x2c
   19c48:	ldr	r1, [sp, #40]	; 0x28
   19c4c:	ldr	r6, [sp, #56]	; 0x38
   19c50:	ldr	r4, [sp, #52]	; 0x34
   19c54:	stm	sp, {r1, ip, lr}
   19c58:	mov	r0, r5
   19c5c:	ldr	r3, [sp, #36]	; 0x24
   19c60:	ldr	r2, [sp, #32]
   19c64:	str	r6, [sp, #16]
   19c68:	str	r4, [sp, #12]
   19c6c:	ldr	r1, [pc, #440]	; 19e2c <argp_parse@@Base+0x1a30>
   19c70:	bl	112d8 <fprintf@plt>
   19c74:	b	19c28 <argp_parse@@Base+0x182c>
   19c78:	mov	r0, r5
   19c7c:	ldr	r2, [sp, #32]
   19c80:	ldr	r1, [pc, #424]	; 19e30 <argp_parse@@Base+0x1a34>
   19c84:	add	sp, sp, #72	; 0x48
   19c88:	pop	{r4, r5, r6, lr}
   19c8c:	b	112d8 <fprintf@plt>
   19c90:	mov	r0, r5
   19c94:	ldr	r3, [sp, #36]	; 0x24
   19c98:	ldr	r2, [sp, #32]
   19c9c:	ldr	r1, [pc, #400]	; 19e34 <argp_parse@@Base+0x1a38>
   19ca0:	add	sp, sp, #72	; 0x48
   19ca4:	pop	{r4, r5, r6, lr}
   19ca8:	b	112d8 <fprintf@plt>
   19cac:	ldr	r1, [sp, #40]	; 0x28
   19cb0:	ldr	r3, [sp, #36]	; 0x24
   19cb4:	str	r1, [sp, #88]	; 0x58
   19cb8:	ldr	r2, [sp, #32]
   19cbc:	mov	r0, r5
   19cc0:	ldr	r1, [pc, #368]	; 19e38 <argp_parse@@Base+0x1a3c>
   19cc4:	add	sp, sp, #72	; 0x48
   19cc8:	pop	{r4, r5, r6, lr}
   19ccc:	b	112d8 <fprintf@plt>
   19cd0:	ldr	r1, [sp, #40]	; 0x28
   19cd4:	ldr	ip, [sp, #44]	; 0x2c
   19cd8:	ldr	r3, [sp, #36]	; 0x24
   19cdc:	ldr	r2, [sp, #32]
   19ce0:	stm	sp, {r1, ip}
   19ce4:	mov	r0, r5
   19ce8:	ldr	r1, [pc, #332]	; 19e3c <argp_parse@@Base+0x1a40>
   19cec:	bl	112d8 <fprintf@plt>
   19cf0:	b	19c28 <argp_parse@@Base+0x182c>
   19cf4:	add	r1, sp, #40	; 0x28
   19cf8:	ldr	r3, [sp, #36]	; 0x24
   19cfc:	ldm	r1, {r1, ip, lr}
   19d00:	mov	r0, r5
   19d04:	ldr	r2, [sp, #32]
   19d08:	stm	sp, {r1, ip, lr}
   19d0c:	ldr	r1, [pc, #300]	; 19e40 <argp_parse@@Base+0x1a44>
   19d10:	bl	112d8 <fprintf@plt>
   19d14:	b	19c28 <argp_parse@@Base+0x182c>
   19d18:	add	r1, sp, #40	; 0x28
   19d1c:	ldr	r4, [sp, #52]	; 0x34
   19d20:	ldm	r1, {r1, ip, lr}
   19d24:	mov	r0, r5
   19d28:	ldr	r3, [sp, #36]	; 0x24
   19d2c:	ldr	r2, [sp, #32]
   19d30:	stm	sp, {r1, ip, lr}
   19d34:	str	r4, [sp, #12]
   19d38:	ldr	r1, [pc, #260]	; 19e44 <argp_parse@@Base+0x1a48>
   19d3c:	bl	112d8 <fprintf@plt>
   19d40:	b	19c28 <argp_parse@@Base+0x182c>
   19d44:	add	r1, sp, #40	; 0x28
   19d48:	ldr	r6, [sp, #56]	; 0x38
   19d4c:	ldm	r1, {r1, ip, lr}
   19d50:	mov	r0, r5
   19d54:	ldr	r4, [sp, #52]	; 0x34
   19d58:	ldr	r3, [sp, #36]	; 0x24
   19d5c:	stm	sp, {r1, ip, lr}
   19d60:	ldr	r2, [sp, #32]
   19d64:	str	r6, [sp, #16]
   19d68:	str	r4, [sp, #12]
   19d6c:	ldr	r1, [pc, #212]	; 19e48 <argp_parse@@Base+0x1a4c>
   19d70:	bl	112d8 <fprintf@plt>
   19d74:	b	19c28 <argp_parse@@Base+0x182c>
   19d78:	ldr	r1, [sp, #60]	; 0x3c
   19d7c:	ldr	lr, [sp, #48]	; 0x30
   19d80:	ldr	ip, [sp, #44]	; 0x2c
   19d84:	str	r1, [sp, #20]
   19d88:	ldr	r1, [sp, #40]	; 0x28
   19d8c:	ldr	r6, [sp, #56]	; 0x38
   19d90:	ldr	r4, [sp, #52]	; 0x34
   19d94:	stm	sp, {r1, ip, lr}
   19d98:	mov	r0, r5
   19d9c:	ldr	r3, [sp, #36]	; 0x24
   19da0:	ldr	r2, [sp, #32]
   19da4:	str	r6, [sp, #16]
   19da8:	str	r4, [sp, #12]
   19dac:	ldr	r1, [pc, #152]	; 19e4c <argp_parse@@Base+0x1a50>
   19db0:	bl	112d8 <fprintf@plt>
   19db4:	b	19c28 <argp_parse@@Base+0x182c>
   19db8:	ldr	r1, [pc, #144]	; 19e50 <argp_parse@@Base+0x1a54>
   19dbc:	mov	r0, r5
   19dc0:	bl	112d8 <fprintf@plt>
   19dc4:	b	19b74 <argp_parse@@Base+0x1778>
   19dc8:	mov	r4, r0
   19dcc:	b	19b54 <argp_parse@@Base+0x1758>
   19dd0:	mov	r4, #1
   19dd4:	b	19b54 <argp_parse@@Base+0x1758>
   19dd8:	mov	r4, #2
   19ddc:	b	19b54 <argp_parse@@Base+0x1758>
   19de0:	mov	r4, #3
   19de4:	b	19b54 <argp_parse@@Base+0x1758>
   19de8:	mov	r4, #4
   19dec:	b	19b54 <argp_parse@@Base+0x1758>
   19df0:	mov	r4, #5
   19df4:	b	19b54 <argp_parse@@Base+0x1758>
   19df8:	mov	r4, #6
   19dfc:	b	19b54 <argp_parse@@Base+0x1758>
   19e00:	mov	r4, #7
   19e04:	b	19b54 <argp_parse@@Base+0x1758>
   19e08:	mov	r4, #8
   19e0c:	b	19b54 <argp_parse@@Base+0x1758>
   19e10:	andeq	sp, r1, ip, lsr #29
   19e14:	andeq	r0, r0, r6, ror #15
   19e18:			; <UNDEFINED> instruction: 0x0001deb8
   19e1c:			; <UNDEFINED> instruction: 0x0001e1b8
   19e20:	andeq	sp, r1, r0, ror #29
   19e24:			; <UNDEFINED> instruction: 0x0001debc
   19e28:	andeq	lr, r1, ip, asr #1
   19e2c:	muleq	r1, r8, r0
   19e30:	andeq	sp, r1, ip, lsl #31
   19e34:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   19e38:			; <UNDEFINED> instruction: 0x0001dfb4
   19e3c:	ldrdeq	sp, [r1], -r0
   19e40:	strdeq	sp, [r1], -r0
   19e44:	andeq	lr, r1, r4, lsl r0
   19e48:	andeq	lr, r1, ip, lsr r0
   19e4c:	andeq	lr, r1, r8, rrx
   19e50:	andeq	sp, r1, r0, asr #4
   19e54:	push	{r3}		; (str r3, [sp, #-4]!)
   19e58:	push	{r4, r5, r6, lr}
   19e5c:	sub	sp, sp, #84	; 0x54
   19e60:	add	ip, sp, #104	; 0x68
   19e64:	ldr	lr, [sp, #104]	; 0x68
   19e68:	mov	r5, r0
   19e6c:	cmp	lr, #0
   19e70:	str	lr, [sp, #40]	; 0x28
   19e74:	str	ip, [sp, #36]	; 0x24
   19e78:	beq	1a180 <argp_parse@@Base+0x1d84>
   19e7c:	ldr	r0, [sp, #108]	; 0x6c
   19e80:	cmp	r0, #0
   19e84:	str	r0, [sp, #44]	; 0x2c
   19e88:	beq	1a188 <argp_parse@@Base+0x1d8c>
   19e8c:	ldr	r0, [sp, #112]	; 0x70
   19e90:	cmp	r0, #0
   19e94:	str	r0, [sp, #48]	; 0x30
   19e98:	beq	1a190 <argp_parse@@Base+0x1d94>
   19e9c:	ldr	r0, [sp, #116]	; 0x74
   19ea0:	cmp	r0, #0
   19ea4:	str	r0, [sp, #52]	; 0x34
   19ea8:	beq	1a198 <argp_parse@@Base+0x1d9c>
   19eac:	ldr	r0, [sp, #120]	; 0x78
   19eb0:	cmp	r0, #0
   19eb4:	str	r0, [sp, #56]	; 0x38
   19eb8:	beq	1a1a0 <argp_parse@@Base+0x1da4>
   19ebc:	ldr	r0, [sp, #124]	; 0x7c
   19ec0:	cmp	r0, #0
   19ec4:	str	r0, [sp, #60]	; 0x3c
   19ec8:	beq	1a1a8 <argp_parse@@Base+0x1dac>
   19ecc:	ldr	r0, [sp, #128]	; 0x80
   19ed0:	cmp	r0, #0
   19ed4:	str	r0, [sp, #64]	; 0x40
   19ed8:	beq	1a1b0 <argp_parse@@Base+0x1db4>
   19edc:	ldr	r0, [sp, #132]	; 0x84
   19ee0:	cmp	r0, #0
   19ee4:	str	r0, [sp, #68]	; 0x44
   19ee8:	beq	1a1b8 <argp_parse@@Base+0x1dbc>
   19eec:	ldr	r3, [sp, #136]	; 0x88
   19ef0:	cmp	r3, #0
   19ef4:	str	r3, [sp, #72]	; 0x48
   19ef8:	beq	1a1c0 <argp_parse@@Base+0x1dc4>
   19efc:	ldr	lr, [sp, #140]	; 0x8c
   19f00:	cmp	lr, #0
   19f04:	movne	r4, #10
   19f08:	moveq	r4, #9
   19f0c:	cmp	r1, #0
   19f10:	ldr	r3, [sp, #100]	; 0x64
   19f14:	beq	1a170 <argp_parse@@Base+0x1d74>
   19f18:	str	r3, [sp]
   19f1c:	mov	r0, r5
   19f20:	mov	r3, r2
   19f24:	mov	r2, r1
   19f28:	ldr	r1, [pc, #664]	; 1a1c8 <argp_parse@@Base+0x1dcc>
   19f2c:	bl	112d8 <fprintf@plt>
   19f30:	ldr	r3, [pc, #660]	; 1a1cc <argp_parse@@Base+0x1dd0>
   19f34:	ldr	r2, [pc, #660]	; 1a1d0 <argp_parse@@Base+0x1dd4>
   19f38:	ldr	r1, [pc, #660]	; 1a1d4 <argp_parse@@Base+0x1dd8>
   19f3c:	mov	r0, r5
   19f40:	bl	112d8 <fprintf@plt>
   19f44:	mov	r1, r5
   19f48:	mov	r0, #10
   19f4c:	bl	11380 <fputc@plt>
   19f50:	ldr	r1, [pc, #640]	; 1a1d8 <argp_parse@@Base+0x1ddc>
   19f54:	ldr	r2, [pc, #640]	; 1a1dc <argp_parse@@Base+0x1de0>
   19f58:	mov	r0, r5
   19f5c:	bl	112d8 <fprintf@plt>
   19f60:	mov	r1, r5
   19f64:	mov	r0, #10
   19f68:	bl	11380 <fputc@plt>
   19f6c:	cmp	r4, #9
   19f70:	ldrls	pc, [pc, r4, lsl #2]
   19f74:	b	19fa0 <argp_parse@@Base+0x1ba4>
   19f78:	andeq	r9, r1, r4, ror #31
   19f7c:	andeq	sl, r1, ip, lsr r0
   19f80:	andeq	sl, r1, r0, asr r0
   19f84:	andeq	sl, r1, r8, rrx
   19f88:	andeq	sl, r1, r8, lsl #1
   19f8c:	andeq	sl, r1, ip, lsr #1
   19f90:	ldrdeq	sl, [r1], -r0
   19f94:	strdeq	sl, [r1], -ip
   19f98:	andeq	sl, r1, r0, lsr r1
   19f9c:	strdeq	r9, [r1], -r4
   19fa0:	ldr	ip, [sp, #72]	; 0x48
   19fa4:	ldr	r1, [sp, #68]	; 0x44
   19fa8:	ldr	lr, [sp, #56]	; 0x38
   19fac:	str	ip, [sp, #24]
   19fb0:	str	r1, [sp, #20]
   19fb4:	ldr	ip, [sp, #52]	; 0x34
   19fb8:	ldr	r1, [sp, #48]	; 0x30
   19fbc:	ldr	r6, [sp, #64]	; 0x40
   19fc0:	ldr	r4, [sp, #60]	; 0x3c
   19fc4:	stm	sp, {r1, ip, lr}
   19fc8:	mov	r0, r5
   19fcc:	ldr	r3, [sp, #44]	; 0x2c
   19fd0:	ldr	r2, [sp, #40]	; 0x28
   19fd4:	str	r6, [sp, #16]
   19fd8:	str	r4, [sp, #12]
   19fdc:	ldr	r1, [pc, #508]	; 1a1e0 <argp_parse@@Base+0x1de4>
   19fe0:	bl	112d8 <fprintf@plt>
   19fe4:	add	sp, sp, #84	; 0x54
   19fe8:	pop	{r4, r5, r6, lr}
   19fec:	add	sp, sp, #4
   19ff0:	bx	lr
   19ff4:	ldr	ip, [sp, #72]	; 0x48
   19ff8:	ldr	r1, [sp, #68]	; 0x44
   19ffc:	ldr	lr, [sp, #56]	; 0x38
   1a000:	str	ip, [sp, #24]
   1a004:	str	r1, [sp, #20]
   1a008:	ldr	ip, [sp, #52]	; 0x34
   1a00c:	ldr	r1, [sp, #48]	; 0x30
   1a010:	ldr	r6, [sp, #64]	; 0x40
   1a014:	ldr	r4, [sp, #60]	; 0x3c
   1a018:	stm	sp, {r1, ip, lr}
   1a01c:	mov	r0, r5
   1a020:	ldr	r3, [sp, #44]	; 0x2c
   1a024:	ldr	r2, [sp, #40]	; 0x28
   1a028:	str	r6, [sp, #16]
   1a02c:	str	r4, [sp, #12]
   1a030:	ldr	r1, [pc, #428]	; 1a1e4 <argp_parse@@Base+0x1de8>
   1a034:	bl	112d8 <fprintf@plt>
   1a038:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a03c:	mov	r0, r5
   1a040:	ldr	r2, [sp, #40]	; 0x28
   1a044:	ldr	r1, [pc, #412]	; 1a1e8 <argp_parse@@Base+0x1dec>
   1a048:	bl	112d8 <fprintf@plt>
   1a04c:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a050:	mov	r0, r5
   1a054:	ldr	r3, [sp, #44]	; 0x2c
   1a058:	ldr	r2, [sp, #40]	; 0x28
   1a05c:	ldr	r1, [pc, #392]	; 1a1ec <argp_parse@@Base+0x1df0>
   1a060:	bl	112d8 <fprintf@plt>
   1a064:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a068:	ldr	r1, [sp, #48]	; 0x30
   1a06c:	ldr	r3, [sp, #44]	; 0x2c
   1a070:	str	r1, [sp]
   1a074:	ldr	r2, [sp, #40]	; 0x28
   1a078:	mov	r0, r5
   1a07c:	ldr	r1, [pc, #364]	; 1a1f0 <argp_parse@@Base+0x1df4>
   1a080:	bl	112d8 <fprintf@plt>
   1a084:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a088:	ldr	r1, [sp, #48]	; 0x30
   1a08c:	ldr	ip, [sp, #52]	; 0x34
   1a090:	ldr	r3, [sp, #44]	; 0x2c
   1a094:	ldr	r2, [sp, #40]	; 0x28
   1a098:	stm	sp, {r1, ip}
   1a09c:	mov	r0, r5
   1a0a0:	ldr	r1, [pc, #332]	; 1a1f4 <argp_parse@@Base+0x1df8>
   1a0a4:	bl	112d8 <fprintf@plt>
   1a0a8:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a0ac:	add	r1, sp, #48	; 0x30
   1a0b0:	ldr	r3, [sp, #44]	; 0x2c
   1a0b4:	ldm	r1, {r1, ip, lr}
   1a0b8:	mov	r0, r5
   1a0bc:	ldr	r2, [sp, #40]	; 0x28
   1a0c0:	stm	sp, {r1, ip, lr}
   1a0c4:	ldr	r1, [pc, #300]	; 1a1f8 <argp_parse@@Base+0x1dfc>
   1a0c8:	bl	112d8 <fprintf@plt>
   1a0cc:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a0d0:	add	r1, sp, #48	; 0x30
   1a0d4:	ldr	r4, [sp, #60]	; 0x3c
   1a0d8:	ldm	r1, {r1, ip, lr}
   1a0dc:	mov	r0, r5
   1a0e0:	ldr	r3, [sp, #44]	; 0x2c
   1a0e4:	ldr	r2, [sp, #40]	; 0x28
   1a0e8:	stm	sp, {r1, ip, lr}
   1a0ec:	str	r4, [sp, #12]
   1a0f0:	ldr	r1, [pc, #260]	; 1a1fc <argp_parse@@Base+0x1e00>
   1a0f4:	bl	112d8 <fprintf@plt>
   1a0f8:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a0fc:	add	r1, sp, #48	; 0x30
   1a100:	ldr	r6, [sp, #64]	; 0x40
   1a104:	ldm	r1, {r1, ip, lr}
   1a108:	mov	r0, r5
   1a10c:	ldr	r4, [sp, #60]	; 0x3c
   1a110:	ldr	r3, [sp, #44]	; 0x2c
   1a114:	stm	sp, {r1, ip, lr}
   1a118:	ldr	r2, [sp, #40]	; 0x28
   1a11c:	str	r6, [sp, #16]
   1a120:	str	r4, [sp, #12]
   1a124:	ldr	r1, [pc, #212]	; 1a200 <argp_parse@@Base+0x1e04>
   1a128:	bl	112d8 <fprintf@plt>
   1a12c:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a130:	ldr	r1, [sp, #68]	; 0x44
   1a134:	ldr	lr, [sp, #56]	; 0x38
   1a138:	ldr	ip, [sp, #52]	; 0x34
   1a13c:	str	r1, [sp, #20]
   1a140:	ldr	r1, [sp, #48]	; 0x30
   1a144:	ldr	r6, [sp, #64]	; 0x40
   1a148:	ldr	r4, [sp, #60]	; 0x3c
   1a14c:	stm	sp, {r1, ip, lr}
   1a150:	mov	r0, r5
   1a154:	ldr	r3, [sp, #44]	; 0x2c
   1a158:	ldr	r2, [sp, #40]	; 0x28
   1a15c:	str	r6, [sp, #16]
   1a160:	str	r4, [sp, #12]
   1a164:	ldr	r1, [pc, #152]	; 1a204 <argp_parse@@Base+0x1e08>
   1a168:	bl	112d8 <fprintf@plt>
   1a16c:	b	19fe4 <argp_parse@@Base+0x1be8>
   1a170:	ldr	r1, [pc, #144]	; 1a208 <argp_parse@@Base+0x1e0c>
   1a174:	mov	r0, r5
   1a178:	bl	112d8 <fprintf@plt>
   1a17c:	b	19f30 <argp_parse@@Base+0x1b34>
   1a180:	mov	r4, lr
   1a184:	b	19f0c <argp_parse@@Base+0x1b10>
   1a188:	mov	r4, #1
   1a18c:	b	19f0c <argp_parse@@Base+0x1b10>
   1a190:	mov	r4, #2
   1a194:	b	19f0c <argp_parse@@Base+0x1b10>
   1a198:	mov	r4, #3
   1a19c:	b	19f0c <argp_parse@@Base+0x1b10>
   1a1a0:	mov	r4, #4
   1a1a4:	b	19f0c <argp_parse@@Base+0x1b10>
   1a1a8:	mov	r4, #5
   1a1ac:	b	19f0c <argp_parse@@Base+0x1b10>
   1a1b0:	mov	r4, #6
   1a1b4:	b	19f0c <argp_parse@@Base+0x1b10>
   1a1b8:	mov	r4, #7
   1a1bc:	b	19f0c <argp_parse@@Base+0x1b10>
   1a1c0:	mov	r4, #8
   1a1c4:	b	19f0c <argp_parse@@Base+0x1b10>
   1a1c8:	andeq	sp, r1, ip, lsr #29
   1a1cc:	andeq	r0, r0, r6, ror #15
   1a1d0:			; <UNDEFINED> instruction: 0x0001deb8
   1a1d4:			; <UNDEFINED> instruction: 0x0001e1b8
   1a1d8:	andeq	sp, r1, r0, ror #29
   1a1dc:			; <UNDEFINED> instruction: 0x0001debc
   1a1e0:	andeq	lr, r1, ip, asr #1
   1a1e4:	muleq	r1, r8, r0
   1a1e8:	andeq	sp, r1, ip, lsl #31
   1a1ec:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1a1f0:			; <UNDEFINED> instruction: 0x0001dfb4
   1a1f4:	ldrdeq	sp, [r1], -r0
   1a1f8:	strdeq	sp, [r1], -r0
   1a1fc:	andeq	lr, r1, r4, lsl r0
   1a200:	andeq	lr, r1, ip, lsr r0
   1a204:	andeq	lr, r1, r8, rrx
   1a208:	andeq	sp, r1, r0, asr #4
   1a20c:	ldr	r3, [pc, #56]	; 1a24c <argp_parse@@Base+0x1e50>
   1a210:	push	{r4, lr}
   1a214:	mov	r0, #10
   1a218:	ldr	r1, [r3]
   1a21c:	bl	11380 <fputc@plt>
   1a220:	ldr	r1, [pc, #40]	; 1a250 <argp_parse@@Base+0x1e54>
   1a224:	ldr	r0, [pc, #40]	; 1a254 <argp_parse@@Base+0x1e58>
   1a228:	bl	11128 <printf@plt>
   1a22c:	ldr	r1, [pc, #36]	; 1a258 <argp_parse@@Base+0x1e5c>
   1a230:	ldr	r2, [pc, #36]	; 1a25c <argp_parse@@Base+0x1e60>
   1a234:	ldr	r0, [pc, #36]	; 1a260 <argp_parse@@Base+0x1e64>
   1a238:	bl	11128 <printf@plt>
   1a23c:	ldr	r1, [pc, #32]	; 1a264 <argp_parse@@Base+0x1e68>
   1a240:	ldr	r0, [pc, #32]	; 1a268 <argp_parse@@Base+0x1e6c>
   1a244:	pop	{r4, lr}
   1a248:	b	11128 <printf@plt>
   1a24c:	ldrdeq	pc, [r2], -ip
   1a250:	andeq	lr, r1, r8, lsl #2
   1a254:	andeq	lr, r1, r0, lsr #2
   1a258:	andeq	sp, r1, r8, asr lr
   1a25c:	andeq	lr, r1, r4, lsr r1
   1a260:	andeq	lr, r1, ip, asr r1
   1a264:	andeq	lr, r1, r0, ror r1
   1a268:	muleq	r1, r0, r1
   1a26c:	push	{r4, r5, r6, lr}
   1a270:	mov	r6, r0
   1a274:	mov	r5, r1
   1a278:	mov	r4, r2
   1a27c:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a280:	cmp	r0, #0
   1a284:	popne	{r4, r5, r6, pc}
   1a288:	cmp	r6, #0
   1a28c:	beq	1a29c <argp_parse@@Base+0x1ea0>
   1a290:	cmp	r5, #0
   1a294:	cmpne	r4, #0
   1a298:	popeq	{r4, r5, r6, pc}
   1a29c:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a2a0:	push	{r4, lr}
   1a2a4:	bl	1a95c <argp_parse@@Base+0x2560>
   1a2a8:	cmp	r0, #0
   1a2ac:	popne	{r4, pc}
   1a2b0:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a2b4:	push	{r4, lr}
   1a2b8:	bl	1a95c <argp_parse@@Base+0x2560>
   1a2bc:	cmp	r0, #0
   1a2c0:	popne	{r4, pc}
   1a2c4:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a2c8:	push	{r4, lr}
   1a2cc:	bl	1a95c <argp_parse@@Base+0x2560>
   1a2d0:	cmp	r0, #0
   1a2d4:	popne	{r4, pc}
   1a2d8:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a2dc:	push	{r4, r5, r6, lr}
   1a2e0:	mov	r5, r0
   1a2e4:	mov	r4, r1
   1a2e8:	bl	1a988 <argp_parse@@Base+0x258c>
   1a2ec:	cmp	r0, #0
   1a2f0:	popne	{r4, r5, r6, pc}
   1a2f4:	adds	r4, r4, #0
   1a2f8:	movne	r4, #1
   1a2fc:	cmp	r5, #0
   1a300:	orreq	r4, r4, #1
   1a304:	cmp	r4, #0
   1a308:	popeq	{r4, r5, r6, pc}
   1a30c:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a310:	push	{r4, lr}
   1a314:	cmp	r1, #0
   1a318:	orreq	r1, r1, #1
   1a31c:	bl	1a988 <argp_parse@@Base+0x258c>
   1a320:	cmp	r0, #0
   1a324:	popne	{r4, pc}
   1a328:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a32c:	push	{r4, r5, r6, lr}
   1a330:	mov	r6, r0
   1a334:	mov	r5, r1
   1a338:	mov	r4, r2
   1a33c:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a340:	cmp	r0, #0
   1a344:	popne	{r4, r5, r6, pc}
   1a348:	cmp	r6, #0
   1a34c:	beq	1a35c <argp_parse@@Base+0x1f60>
   1a350:	cmp	r5, #0
   1a354:	cmpne	r4, #0
   1a358:	popeq	{r4, r5, r6, pc}
   1a35c:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a360:	cmp	r2, #0
   1a364:	cmpne	r1, #0
   1a368:	moveq	r2, #1
   1a36c:	moveq	r1, r2
   1a370:	push	{r4, lr}
   1a374:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a378:	cmp	r0, #0
   1a37c:	popne	{r4, pc}
   1a380:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a384:	push	{r4, lr}
   1a388:	mov	r2, r1
   1a38c:	mov	r1, r0
   1a390:	mov	r0, #0
   1a394:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a398:	cmp	r0, #0
   1a39c:	popne	{r4, pc}
   1a3a0:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a3a4:	cmp	r1, #0
   1a3a8:	cmpne	r0, #0
   1a3ac:	moveq	r2, #1
   1a3b0:	movne	r2, r1
   1a3b4:	moveq	r1, r2
   1a3b8:	movne	r1, r0
   1a3bc:	push	{r4, lr}
   1a3c0:	mov	r0, #0
   1a3c4:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a3c8:	cmp	r0, #0
   1a3cc:	popne	{r4, pc}
   1a3d0:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a3d4:	cmp	r0, #0
   1a3d8:	push	{r4, r5, r6, lr}
   1a3dc:	mov	r5, r1
   1a3e0:	ldr	r4, [r1]
   1a3e4:	beq	1a420 <argp_parse@@Base+0x2024>
   1a3e8:	lsr	r2, r4, #1
   1a3ec:	add	r3, r2, #1
   1a3f0:	mvn	r3, r3
   1a3f4:	cmp	r4, r3
   1a3f8:	bhi	1a43c <argp_parse@@Base+0x2040>
   1a3fc:	add	r4, r4, #1
   1a400:	add	r4, r4, r2
   1a404:	mov	r1, r4
   1a408:	mov	r2, #1
   1a40c:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a410:	cmp	r0, #0
   1a414:	beq	1a440 <argp_parse@@Base+0x2044>
   1a418:	str	r4, [r5]
   1a41c:	pop	{r4, r5, r6, pc}
   1a420:	cmp	r4, #0
   1a424:	moveq	r4, #64	; 0x40
   1a428:	mov	r1, r4
   1a42c:	mov	r2, #1
   1a430:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a434:	cmp	r0, #0
   1a438:	bne	1a418 <argp_parse@@Base+0x201c>
   1a43c:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a440:	cmp	r4, #0
   1a444:	bne	1a43c <argp_parse@@Base+0x2040>
   1a448:	str	r4, [r5]
   1a44c:	pop	{r4, r5, r6, pc}
   1a450:	cmp	r0, #0
   1a454:	push	{r4, r5, r6, lr}
   1a458:	mov	r5, r1
   1a45c:	ldr	r4, [r1]
   1a460:	mov	r6, r2
   1a464:	beq	1a4a8 <argp_parse@@Base+0x20ac>
   1a468:	lsr	r1, r4, #1
   1a46c:	add	r3, r1, #1
   1a470:	mvn	r3, r3
   1a474:	cmp	r4, r3
   1a478:	bhi	1a4e0 <argp_parse@@Base+0x20e4>
   1a47c:	add	r4, r4, #1
   1a480:	add	r4, r4, r1
   1a484:	mov	r1, r4
   1a488:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a48c:	cmp	r0, #0
   1a490:	bne	1a4a0 <argp_parse@@Base+0x20a4>
   1a494:	cmp	r4, #0
   1a498:	cmpne	r6, #0
   1a49c:	bne	1a4e0 <argp_parse@@Base+0x20e4>
   1a4a0:	str	r4, [r5]
   1a4a4:	pop	{r4, r5, r6, pc}
   1a4a8:	cmp	r4, #0
   1a4ac:	bne	1a4c8 <argp_parse@@Base+0x20cc>
   1a4b0:	mov	r1, r2
   1a4b4:	mov	r0, #64	; 0x40
   1a4b8:	bl	1ca88 <argp_parse@@Base+0x468c>
   1a4bc:	cmp	r0, #0
   1a4c0:	movne	r4, r0
   1a4c4:	addeq	r4, r0, #1
   1a4c8:	mov	r2, r6
   1a4cc:	mov	r1, r4
   1a4d0:	mov	r0, #0
   1a4d4:	bl	1ca3c <argp_parse@@Base+0x4640>
   1a4d8:	cmp	r0, #0
   1a4dc:	bne	1a4a0 <argp_parse@@Base+0x20a4>
   1a4e0:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a4e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4e8:	sub	sp, sp, #12
   1a4ec:	ldr	r6, [r1]
   1a4f0:	mov	r8, r1
   1a4f4:	mov	r9, r0
   1a4f8:	asrs	r4, r6, #1
   1a4fc:	mov	sl, r2
   1a500:	mov	fp, r3
   1a504:	ldr	r7, [sp, #48]	; 0x30
   1a508:	bmi	1a684 <argp_parse@@Base+0x2288>
   1a50c:	mvn	r1, #-2147483648	; 0x80000000
   1a510:	sub	r1, r1, r4
   1a514:	cmp	r6, r1
   1a518:	movle	r1, #0
   1a51c:	movgt	r1, #1
   1a520:	mvn	r3, fp
   1a524:	cmp	r1, #0
   1a528:	addeq	r4, r4, r6
   1a52c:	mvnne	r4, #-2147483648	; 0x80000000
   1a530:	lsr	r3, r3, #31
   1a534:	cmp	fp, r4
   1a538:	movge	r2, #0
   1a53c:	andlt	r2, r3, #1
   1a540:	cmp	r2, #0
   1a544:	beq	1a634 <argp_parse@@Base+0x2238>
   1a548:	cmp	r7, #0
   1a54c:	blt	1a71c <argp_parse@@Base+0x2320>
   1a550:	bne	1a714 <argp_parse@@Base+0x2318>
   1a554:	mov	r5, #64	; 0x40
   1a558:	mov	r1, r7
   1a55c:	mov	r0, r5
   1a560:	str	r3, [sp, #4]
   1a564:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a568:	mov	r1, r7
   1a56c:	mov	r4, r0
   1a570:	mov	r0, r5
   1a574:	bl	1ceb4 <argp_parse@@Base+0x4ab8>
   1a578:	ldr	r3, [sp, #4]
   1a57c:	sub	r5, r5, r1
   1a580:	cmp	r9, #0
   1a584:	sub	r2, r4, r6
   1a588:	streq	r9, [r8]
   1a58c:	cmp	r2, sl
   1a590:	bge	1a614 <argp_parse@@Base+0x2218>
   1a594:	cmp	sl, #0
   1a598:	blt	1a6b4 <argp_parse@@Base+0x22b8>
   1a59c:	cmp	r6, #0
   1a5a0:	blt	1a5c0 <argp_parse@@Base+0x21c4>
   1a5a4:	mvn	r2, #-2147483648	; 0x80000000
   1a5a8:	sub	r2, r2, sl
   1a5ac:	cmp	r6, r2
   1a5b0:	movle	r2, #0
   1a5b4:	movgt	r2, #1
   1a5b8:	cmp	r2, #0
   1a5bc:	bne	1a6b0 <argp_parse@@Base+0x22b4>
   1a5c0:	add	r6, r6, sl
   1a5c4:	cmp	fp, r6
   1a5c8:	movge	r3, #0
   1a5cc:	andlt	r3, r3, #1
   1a5d0:	cmp	r3, #0
   1a5d4:	mov	r4, r6
   1a5d8:	bne	1a6b0 <argp_parse@@Base+0x22b4>
   1a5dc:	cmp	r7, #0
   1a5e0:	blt	1a6c8 <argp_parse@@Base+0x22cc>
   1a5e4:	beq	1a610 <argp_parse@@Base+0x2214>
   1a5e8:	cmp	r6, #0
   1a5ec:	blt	1a76c <argp_parse@@Base+0x2370>
   1a5f0:	mov	r1, r7
   1a5f4:	mvn	r0, #-2147483648	; 0x80000000
   1a5f8:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a5fc:	cmp	r6, r0
   1a600:	movle	r0, #0
   1a604:	movgt	r0, #1
   1a608:	cmp	r0, #0
   1a60c:	bne	1a6b0 <argp_parse@@Base+0x22b4>
   1a610:	mul	r5, r6, r7
   1a614:	mov	r1, r5
   1a618:	mov	r0, r9
   1a61c:	bl	1a988 <argp_parse@@Base+0x258c>
   1a620:	cmp	r0, #0
   1a624:	beq	1a698 <argp_parse@@Base+0x229c>
   1a628:	str	r4, [r8]
   1a62c:	add	sp, sp, #12
   1a630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a634:	cmp	r7, #0
   1a638:	blt	1a6f4 <argp_parse@@Base+0x22f8>
   1a63c:	beq	1a554 <argp_parse@@Base+0x2158>
   1a640:	cmp	r4, #0
   1a644:	blt	1a724 <argp_parse@@Base+0x2328>
   1a648:	mov	r1, r7
   1a64c:	mvn	r0, #-2147483648	; 0x80000000
   1a650:	str	r3, [sp, #4]
   1a654:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a658:	ldr	r3, [sp, #4]
   1a65c:	cmp	r0, r4
   1a660:	movge	r0, #0
   1a664:	movlt	r0, #1
   1a668:	cmp	r0, #0
   1a66c:	mvnne	r5, #-2147483648	; 0x80000000
   1a670:	bne	1a558 <argp_parse@@Base+0x215c>
   1a674:	mul	r5, r7, r4
   1a678:	cmp	r5, #63	; 0x3f
   1a67c:	bgt	1a580 <argp_parse@@Base+0x2184>
   1a680:	b	1a554 <argp_parse@@Base+0x2158>
   1a684:	rsb	r1, r4, #-2147483648	; 0x80000000
   1a688:	cmp	r6, r1
   1a68c:	movge	r1, #0
   1a690:	movlt	r1, #1
   1a694:	b	1a520 <argp_parse@@Base+0x2124>
   1a698:	adds	r5, r5, #0
   1a69c:	movne	r5, #1
   1a6a0:	cmp	r9, #0
   1a6a4:	orreq	r5, r5, #1
   1a6a8:	cmp	r5, #0
   1a6ac:	beq	1a628 <argp_parse@@Base+0x222c>
   1a6b0:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a6b4:	rsb	r2, sl, #-2147483648	; 0x80000000
   1a6b8:	cmp	r6, r2
   1a6bc:	movge	r2, #0
   1a6c0:	movlt	r2, #1
   1a6c4:	b	1a5b8 <argp_parse@@Base+0x21bc>
   1a6c8:	cmp	r6, #0
   1a6cc:	blt	1a750 <argp_parse@@Base+0x2354>
   1a6d0:	cmn	r7, #1
   1a6d4:	beq	1a610 <argp_parse@@Base+0x2214>
   1a6d8:	mov	r1, r7
   1a6dc:	mov	r0, #-2147483648	; 0x80000000
   1a6e0:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a6e4:	cmp	r6, r0
   1a6e8:	movle	r0, #0
   1a6ec:	movgt	r0, #1
   1a6f0:	b	1a608 <argp_parse@@Base+0x220c>
   1a6f4:	cmp	r4, #0
   1a6f8:	blt	1a790 <argp_parse@@Base+0x2394>
   1a6fc:	cmn	r7, #1
   1a700:	beq	1a674 <argp_parse@@Base+0x2278>
   1a704:	str	r3, [sp, #4]
   1a708:	mov	r1, r7
   1a70c:	mov	r0, #-2147483648	; 0x80000000
   1a710:	b	1a654 <argp_parse@@Base+0x2258>
   1a714:	mov	r4, fp
   1a718:	b	1a648 <argp_parse@@Base+0x224c>
   1a71c:	mov	r4, fp
   1a720:	b	1a6fc <argp_parse@@Base+0x2300>
   1a724:	cmn	r4, #1
   1a728:	beq	1a674 <argp_parse@@Base+0x2278>
   1a72c:	mov	r1, r4
   1a730:	mov	r0, #-2147483648	; 0x80000000
   1a734:	str	r3, [sp, #4]
   1a738:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a73c:	ldr	r3, [sp, #4]
   1a740:	cmp	r7, r0
   1a744:	movle	r0, #0
   1a748:	movgt	r0, #1
   1a74c:	b	1a668 <argp_parse@@Base+0x226c>
   1a750:	mov	r1, r7
   1a754:	mvn	r0, #-2147483648	; 0x80000000
   1a758:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a75c:	cmp	r6, r0
   1a760:	movge	r0, #0
   1a764:	movlt	r0, #1
   1a768:	b	1a608 <argp_parse@@Base+0x220c>
   1a76c:	cmn	r6, #1
   1a770:	beq	1a610 <argp_parse@@Base+0x2214>
   1a774:	mov	r1, r6
   1a778:	mov	r0, #-2147483648	; 0x80000000
   1a77c:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a780:	cmp	r7, r0
   1a784:	movle	r0, #0
   1a788:	movgt	r0, #1
   1a78c:	b	1a608 <argp_parse@@Base+0x220c>
   1a790:	mov	r1, r7
   1a794:	mvn	r0, #-2147483648	; 0x80000000
   1a798:	str	r3, [sp, #4]
   1a79c:	bl	1cc94 <argp_parse@@Base+0x4898>
   1a7a0:	ldr	r3, [sp, #4]
   1a7a4:	cmp	r0, r4
   1a7a8:	movle	r0, #0
   1a7ac:	movgt	r0, #1
   1a7b0:	b	1a668 <argp_parse@@Base+0x226c>
   1a7b4:	push	{r4, lr}
   1a7b8:	mov	r1, #1
   1a7bc:	bl	1a914 <argp_parse@@Base+0x2518>
   1a7c0:	cmp	r0, #0
   1a7c4:	popne	{r4, pc}
   1a7c8:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a7cc:	push	{r4, lr}
   1a7d0:	mov	r1, #1
   1a7d4:	bl	1a914 <argp_parse@@Base+0x2518>
   1a7d8:	cmp	r0, #0
   1a7dc:	popne	{r4, pc}
   1a7e0:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a7e4:	push	{r4, lr}
   1a7e8:	bl	1a914 <argp_parse@@Base+0x2518>
   1a7ec:	cmp	r0, #0
   1a7f0:	popne	{r4, pc}
   1a7f4:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a7f8:	push	{r4, lr}
   1a7fc:	bl	1a914 <argp_parse@@Base+0x2518>
   1a800:	cmp	r0, #0
   1a804:	popne	{r4, pc}
   1a808:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a80c:	push	{r4, r5, r6, lr}
   1a810:	mov	r6, r0
   1a814:	mov	r0, r1
   1a818:	mov	r4, r1
   1a81c:	bl	1a95c <argp_parse@@Base+0x2560>
   1a820:	subs	r5, r0, #0
   1a824:	beq	1a83c <argp_parse@@Base+0x2440>
   1a828:	mov	r2, r4
   1a82c:	mov	r1, r6
   1a830:	bl	11188 <memcpy@plt>
   1a834:	mov	r0, r5
   1a838:	pop	{r4, r5, r6, pc}
   1a83c:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a840:	push	{r4, r5, r6, lr}
   1a844:	mov	r6, r0
   1a848:	mov	r0, r1
   1a84c:	mov	r4, r1
   1a850:	bl	1a95c <argp_parse@@Base+0x2560>
   1a854:	subs	r5, r0, #0
   1a858:	beq	1a870 <argp_parse@@Base+0x2474>
   1a85c:	mov	r2, r4
   1a860:	mov	r1, r6
   1a864:	bl	11188 <memcpy@plt>
   1a868:	mov	r0, r5
   1a86c:	pop	{r4, r5, r6, pc}
   1a870:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a874:	push	{r4, r5, r6, lr}
   1a878:	mov	r6, r0
   1a87c:	add	r0, r1, #1
   1a880:	mov	r4, r1
   1a884:	bl	1a95c <argp_parse@@Base+0x2560>
   1a888:	subs	r5, r0, #0
   1a88c:	beq	1a8ac <argp_parse@@Base+0x24b0>
   1a890:	mov	r3, #0
   1a894:	mov	r1, r6
   1a898:	strb	r3, [r5, r4]
   1a89c:	mov	r2, r4
   1a8a0:	bl	11188 <memcpy@plt>
   1a8a4:	mov	r0, r5
   1a8a8:	pop	{r4, r5, r6, pc}
   1a8ac:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a8b0:	push	{r4, r5, r6, lr}
   1a8b4:	mov	r6, r0
   1a8b8:	bl	112c0 <strlen@plt>
   1a8bc:	add	r4, r0, #1
   1a8c0:	mov	r0, r4
   1a8c4:	bl	1a95c <argp_parse@@Base+0x2560>
   1a8c8:	subs	r5, r0, #0
   1a8cc:	beq	1a8e4 <argp_parse@@Base+0x24e8>
   1a8d0:	mov	r2, r4
   1a8d4:	mov	r1, r6
   1a8d8:	bl	11188 <memcpy@plt>
   1a8dc:	mov	r0, r5
   1a8e0:	pop	{r4, r5, r6, pc}
   1a8e4:	bl	1a8e8 <argp_parse@@Base+0x24ec>
   1a8e8:	ldr	r1, [pc, #24]	; 1a908 <argp_parse@@Base+0x250c>
   1a8ec:	push	{r4, lr}
   1a8f0:	ldr	r0, [r1]
   1a8f4:	ldr	r3, [pc, #16]	; 1a90c <argp_parse@@Base+0x2510>
   1a8f8:	ldr	r2, [pc, #16]	; 1a910 <argp_parse@@Base+0x2514>
   1a8fc:	mov	r1, #0
   1a900:	bl	11224 <error@plt>
   1a904:	bl	1141c <abort@plt>
   1a908:	andeq	pc, r2, r0, asr #7
   1a90c:	andeq	lr, r1, r8, ror #3
   1a910:	andeq	sp, r1, ip
   1a914:	cmp	r1, #0
   1a918:	cmpne	r0, #0
   1a91c:	moveq	r1, #1
   1a920:	moveq	r0, r1
   1a924:	umull	r2, r3, r0, r1
   1a928:	adds	r3, r3, #0
   1a92c:	movne	r3, #1
   1a930:	cmp	r2, #0
   1a934:	blt	1a944 <argp_parse@@Base+0x2548>
   1a938:	cmp	r3, #0
   1a93c:	bne	1a944 <argp_parse@@Base+0x2548>
   1a940:	b	110d4 <calloc@plt>
   1a944:	push	{r4, lr}
   1a948:	bl	112e4 <__errno_location@plt>
   1a94c:	mov	r3, #12
   1a950:	str	r3, [r0]
   1a954:	mov	r0, #0
   1a958:	pop	{r4, pc}
   1a95c:	cmp	r0, #0
   1a960:	moveq	r0, #1
   1a964:	cmp	r0, #0
   1a968:	blt	1a970 <argp_parse@@Base+0x2574>
   1a96c:	b	11248 <malloc@plt>
   1a970:	push	{r4, lr}
   1a974:	bl	112e4 <__errno_location@plt>
   1a978:	mov	r3, #12
   1a97c:	str	r3, [r0]
   1a980:	mov	r0, #0
   1a984:	pop	{r4, pc}
   1a988:	cmp	r0, #0
   1a98c:	beq	1a9b0 <argp_parse@@Base+0x25b4>
   1a990:	cmp	r1, #0
   1a994:	push	{lr}		; (str lr, [sp, #-4]!)
   1a998:	sub	sp, sp, #12
   1a99c:	beq	1a9b8 <argp_parse@@Base+0x25bc>
   1a9a0:	blt	1a9d0 <argp_parse@@Base+0x25d4>
   1a9a4:	add	sp, sp, #12
   1a9a8:	pop	{lr}		; (ldr lr, [sp], #4)
   1a9ac:	b	111e8 <realloc@plt>
   1a9b0:	mov	r0, r1
   1a9b4:	b	1a95c <argp_parse@@Base+0x2560>
   1a9b8:	str	r1, [sp, #4]
   1a9bc:	bl	19378 <argp_parse@@Base+0xf7c>
   1a9c0:	ldr	r3, [sp, #4]
   1a9c4:	mov	r0, r3
   1a9c8:	add	sp, sp, #12
   1a9cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9d0:	bl	112e4 <__errno_location@plt>
   1a9d4:	mov	r2, #12
   1a9d8:	mov	r3, #0
   1a9dc:	str	r2, [r0]
   1a9e0:	b	1a9c4 <argp_parse@@Base+0x25c8>
   1a9e4:	push	{r4, r5, r6, r7, r8, lr}
   1a9e8:	mov	r8, r0
   1a9ec:	mov	r0, #36	; 0x24
   1a9f0:	mov	r7, r1
   1a9f4:	mov	r6, r2
   1a9f8:	mov	r5, r3
   1a9fc:	bl	1a95c <argp_parse@@Base+0x2560>
   1aa00:	subs	r4, r0, #0
   1aa04:	beq	1aa48 <argp_parse@@Base+0x264c>
   1aa08:	mov	r0, #0
   1aa0c:	str	r5, [r4, #12]
   1aa10:	str	r0, [r4, #20]
   1aa14:	str	r0, [r4, #16]
   1aa18:	str	r8, [r4]
   1aa1c:	str	r7, [r4, #4]
   1aa20:	str	r6, [r4, #8]
   1aa24:	mov	r0, #200	; 0xc8
   1aa28:	bl	1a95c <argp_parse@@Base+0x2560>
   1aa2c:	cmp	r0, #0
   1aa30:	addne	r3, r0, #200	; 0xc8
   1aa34:	mov	r5, r0
   1aa38:	str	r0, [r4, #24]
   1aa3c:	strne	r0, [r4, #28]
   1aa40:	strne	r3, [r4, #32]
   1aa44:	beq	1aa50 <argp_parse@@Base+0x2654>
   1aa48:	mov	r0, r4
   1aa4c:	pop	{r4, r5, r6, r7, r8, pc}
   1aa50:	mov	r0, r4
   1aa54:	bl	19378 <argp_parse@@Base+0xf7c>
   1aa58:	mov	r4, r5
   1aa5c:	b	1aa48 <argp_parse@@Base+0x264c>
   1aa60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa64:	mov	r7, r0
   1aa68:	ldr	r4, [r0, #24]
   1aa6c:	ldr	r3, [r0, #16]
   1aa70:	ldr	r9, [r0, #28]
   1aa74:	sub	sp, sp, #12
   1aa78:	add	r4, r4, r3
   1aa7c:	mov	sl, #32
   1aa80:	cmp	r4, r9
   1aa84:	bcs	1ab58 <argp_parse@@Base+0x275c>
   1aa88:	ldr	r8, [r7, #20]
   1aa8c:	cmp	r8, #0
   1aa90:	bne	1aafc <argp_parse@@Base+0x2700>
   1aa94:	ldr	r5, [r7, #4]
   1aa98:	cmp	r5, #0
   1aa9c:	beq	1adcc <argp_parse@@Base+0x29d0>
   1aaa0:	ldr	r2, [r7, #32]
   1aaa4:	add	r3, r9, r5
   1aaa8:	cmp	r2, r3
   1aaac:	bls	1aac4 <argp_parse@@Base+0x26c8>
   1aab0:	b	1aef4 <argp_parse@@Base+0x2af8>
   1aab4:	cmp	r5, r8
   1aab8:	str	r1, [r0, #20]
   1aabc:	strb	sl, [r3]
   1aac0:	beq	1aaf0 <argp_parse@@Base+0x26f4>
   1aac4:	ldr	r0, [r7]
   1aac8:	add	r8, r8, #1
   1aacc:	ldr	r3, [r0, #20]
   1aad0:	ldr	r2, [r0, #24]
   1aad4:	add	r1, r3, #1
   1aad8:	cmp	r3, r2
   1aadc:	bcc	1aab4 <argp_parse@@Base+0x26b8>
   1aae0:	mov	r1, sl
   1aae4:	bl	11344 <__overflow@plt>
   1aae8:	cmp	r5, r8
   1aaec:	bne	1aac4 <argp_parse@@Base+0x26c8>
   1aaf0:	ldr	r9, [r7, #28]
   1aaf4:	mov	r8, r5
   1aaf8:	str	r5, [r7, #20]
   1aafc:	sub	fp, r9, r4
   1ab00:	mov	r2, fp
   1ab04:	mov	r1, #10
   1ab08:	mov	r0, r4
   1ab0c:	bl	1132c <memchr@plt>
   1ab10:	cmp	r8, #0
   1ab14:	movlt	r8, #0
   1ab18:	movlt	r3, r8
   1ab1c:	mov	r5, r0
   1ab20:	strlt	r3, [r7, #20]
   1ab24:	cmp	r5, #0
   1ab28:	beq	1adec <argp_parse@@Base+0x29f0>
   1ab2c:	sub	r2, r5, r4
   1ab30:	ldr	r3, [r7, #8]
   1ab34:	add	r2, r2, r8
   1ab38:	cmp	r2, r3
   1ab3c:	bge	1ab6c <argp_parse@@Base+0x2770>
   1ab40:	ldr	r9, [r7, #28]
   1ab44:	add	r4, r5, #1
   1ab48:	mov	r3, #0
   1ab4c:	cmp	r4, r9
   1ab50:	str	r3, [r7, #20]
   1ab54:	bcc	1aa88 <argp_parse@@Base+0x268c>
   1ab58:	ldr	r3, [r7, #24]
   1ab5c:	sub	r9, r9, r3
   1ab60:	str	r9, [r7, #16]
   1ab64:	add	sp, sp, #12
   1ab68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab6c:	ldr	r2, [r7, #12]
   1ab70:	sub	r6, r3, #1
   1ab74:	cmp	r2, #0
   1ab78:	str	r2, [sp, #4]
   1ab7c:	blt	1aea4 <argp_parse@@Base+0x2aa8>
   1ab80:	add	r6, r6, #1
   1ab84:	sub	r8, r6, r8
   1ab88:	adds	r8, r4, r8
   1ab8c:	bcs	1ae24 <argp_parse@@Base+0x2a28>
   1ab90:	bl	11290 <__ctype_b_loc@plt>
   1ab94:	mov	r3, r8
   1ab98:	ldr	r0, [r0]
   1ab9c:	b	1aba8 <argp_parse@@Base+0x27ac>
   1aba0:	cmp	r3, r4
   1aba4:	bcc	1ae28 <argp_parse@@Base+0x2a2c>
   1aba8:	mov	r1, r3
   1abac:	sub	r3, r3, #1
   1abb0:	ldrb	r2, [r1]
   1abb4:	mov	r6, r3
   1abb8:	lsl	r2, r2, #1
   1abbc:	ldrh	r2, [r0, r2]
   1abc0:	tst	r2, #1
   1abc4:	beq	1aba0 <argp_parse@@Base+0x27a4>
   1abc8:	add	r6, r1, #1
   1abcc:	cmp	r6, r4
   1abd0:	bls	1ae3c <argp_parse@@Base+0x2a40>
   1abd4:	cmp	r4, r1
   1abd8:	bhi	1ae34 <argp_parse@@Base+0x2a38>
   1abdc:	mov	r1, r3
   1abe0:	sub	r8, r4, #1
   1abe4:	b	1ac00 <argp_parse@@Base+0x2804>
   1abe8:	ldrb	r3, [r1]
   1abec:	sub	r1, r1, #1
   1abf0:	lsl	r3, r3, #1
   1abf4:	ldrh	r3, [r0, r3]
   1abf8:	tst	r3, #1
   1abfc:	beq	1af2c <argp_parse@@Base+0x2b30>
   1ac00:	cmp	r8, r1
   1ac04:	mov	r2, r1
   1ac08:	bne	1abe8 <argp_parse@@Base+0x27ec>
   1ac0c:	add	r8, r8, #1
   1ac10:	add	r3, fp, #1
   1ac14:	add	r3, r4, r3
   1ac18:	cmp	r6, r3
   1ac1c:	beq	1acfc <argp_parse@@Base+0x2900>
   1ac20:	add	r5, r8, #1
   1ac24:	ldr	r3, [sp, #4]
   1ac28:	sub	r1, r6, r5
   1ac2c:	cmp	r1, r3
   1ac30:	bge	1ad18 <argp_parse@@Base+0x291c>
   1ac34:	cmp	r6, r9
   1ac38:	bcs	1ad10 <argp_parse@@Base+0x2914>
   1ac3c:	ldr	r3, [r7, #32]
   1ac40:	ldr	r2, [sp, #4]
   1ac44:	sub	r3, r3, r9
   1ac48:	add	r0, r2, #1
   1ac4c:	cmp	r3, r0
   1ac50:	bgt	1af5c <argp_parse@@Base+0x2b60>
   1ac54:	ldr	r0, [r7, #24]
   1ac58:	cmp	r8, r0
   1ac5c:	bls	1ac70 <argp_parse@@Base+0x2874>
   1ac60:	sub	r2, r8, r0
   1ac64:	ldr	r3, [r7]
   1ac68:	mov	r1, #1
   1ac6c:	bl	111a0 <fwrite_unlocked@plt>
   1ac70:	ldr	r0, [r7]
   1ac74:	ldr	r2, [r0, #24]
   1ac78:	ldr	r3, [r0, #20]
   1ac7c:	cmp	r3, r2
   1ac80:	addcc	r2, r3, #1
   1ac84:	strcc	r2, [r0, #20]
   1ac88:	movcc	r2, #10
   1ac8c:	strbcc	r2, [r3]
   1ac90:	bcs	1af9c <argp_parse@@Base+0x2ba0>
   1ac94:	ldr	r5, [r7, #24]
   1ac98:	sub	r4, r4, r5
   1ac9c:	sub	r1, r6, r5
   1aca0:	add	fp, fp, r4
   1aca4:	mov	r9, r1
   1aca8:	mov	r2, r5
   1acac:	ldr	r3, [r7, #12]
   1acb0:	cmp	r3, r1
   1acb4:	bgt	1ad34 <argp_parse@@Base+0x2938>
   1acb8:	cmp	r3, #0
   1acbc:	mov	r4, r5
   1acc0:	ble	1acd8 <argp_parse@@Base+0x28dc>
   1acc4:	strb	sl, [r4], #1
   1acc8:	ldr	r3, [r7, #12]
   1accc:	sub	r1, r4, r5
   1acd0:	cmp	r1, r3
   1acd4:	blt	1acc4 <argp_parse@@Base+0x28c8>
   1acd8:	cmp	r4, r6
   1acdc:	bcc	1adb0 <argp_parse@@Base+0x29b4>
   1ace0:	sub	r9, fp, r9
   1ace4:	cmp	r3, #0
   1ace8:	add	r9, r4, r9
   1acec:	mvneq	r3, #0
   1acf0:	str	r9, [r7, #28]
   1acf4:	str	r3, [r7, #20]
   1acf8:	b	1aa80 <argp_parse@@Base+0x2684>
   1acfc:	ldr	r3, [r7, #32]
   1ad00:	ldr	r2, [sp, #4]
   1ad04:	sub	r3, r3, r8
   1ad08:	cmp	r3, r2
   1ad0c:	ble	1ac34 <argp_parse@@Base+0x2838>
   1ad10:	add	r5, r8, #1
   1ad14:	sub	r1, r6, r5
   1ad18:	mov	r3, #10
   1ad1c:	strb	r3, [r8]
   1ad20:	ldr	r3, [r7, #12]
   1ad24:	sub	r9, r6, r4
   1ad28:	cmp	r3, r1
   1ad2c:	mov	r2, r4
   1ad30:	ble	1acb8 <argp_parse@@Base+0x28bc>
   1ad34:	add	r1, fp, #1
   1ad38:	add	r1, r2, r1
   1ad3c:	cmp	r6, r1
   1ad40:	beq	1af48 <argp_parse@@Base+0x2b4c>
   1ad44:	cmp	r3, #0
   1ad48:	ble	1ada4 <argp_parse@@Base+0x29a8>
   1ad4c:	mov	r4, #0
   1ad50:	mov	r8, r2
   1ad54:	b	1ad70 <argp_parse@@Base+0x2974>
   1ad58:	str	ip, [r0, #20]
   1ad5c:	strb	sl, [r3]
   1ad60:	ldr	r3, [r7, #12]
   1ad64:	add	r4, r4, #1
   1ad68:	cmp	r3, r4
   1ad6c:	ble	1ada0 <argp_parse@@Base+0x29a4>
   1ad70:	ldr	r0, [r7]
   1ad74:	ldr	r3, [r0, #20]
   1ad78:	ldr	r1, [r0, #24]
   1ad7c:	add	ip, r3, #1
   1ad80:	cmp	r3, r1
   1ad84:	bcc	1ad58 <argp_parse@@Base+0x295c>
   1ad88:	mov	r1, sl
   1ad8c:	bl	11344 <__overflow@plt>
   1ad90:	ldr	r3, [r7, #12]
   1ad94:	add	r4, r4, #1
   1ad98:	cmp	r3, r4
   1ad9c:	bgt	1ad70 <argp_parse@@Base+0x2974>
   1ada0:	mov	r2, r8
   1ada4:	mov	r4, r5
   1ada8:	cmp	r4, r6
   1adac:	bcs	1ace0 <argp_parse@@Base+0x28e4>
   1adb0:	add	r2, r2, fp
   1adb4:	sub	r2, r2, r6
   1adb8:	mov	r1, r6
   1adbc:	mov	r0, r4
   1adc0:	bl	1114c <memmove@plt>
   1adc4:	ldr	r3, [r7, #12]
   1adc8:	b	1ace0 <argp_parse@@Base+0x28e4>
   1adcc:	sub	fp, r9, r4
   1add0:	mov	r2, fp
   1add4:	mov	r1, #10
   1add8:	mov	r0, r4
   1addc:	bl	1132c <memchr@plt>
   1ade0:	mov	r5, r0
   1ade4:	cmp	r5, #0
   1ade8:	bne	1ab2c <argp_parse@@Base+0x2730>
   1adec:	ldr	r6, [r7, #8]
   1adf0:	add	r3, fp, r8
   1adf4:	cmp	r3, r6
   1adf8:	bcc	1afc0 <argp_parse@@Base+0x2bc4>
   1adfc:	ldr	r2, [r7, #12]
   1ae00:	sub	r6, r6, #1
   1ae04:	cmp	r2, #0
   1ae08:	str	r2, [sp, #4]
   1ae0c:	blt	1afac <argp_parse@@Base+0x2bb0>
   1ae10:	add	r6, r6, #1
   1ae14:	sub	r8, r6, r8
   1ae18:	adds	r8, r4, r8
   1ae1c:	mov	r5, r9
   1ae20:	bcc	1ab90 <argp_parse@@Base+0x2794>
   1ae24:	mov	r6, r8
   1ae28:	add	r6, r6, #1
   1ae2c:	cmp	r4, r6
   1ae30:	bcs	1ae3c <argp_parse@@Base+0x2a40>
   1ae34:	mov	r8, r6
   1ae38:	b	1ac10 <argp_parse@@Base+0x2814>
   1ae3c:	cmp	r8, r5
   1ae40:	bcs	1ae78 <argp_parse@@Base+0x2a7c>
   1ae44:	add	r6, r8, #1
   1ae48:	b	1ae6c <argp_parse@@Base+0x2a70>
   1ae4c:	bl	11290 <__ctype_b_loc@plt>
   1ae50:	ldrb	r3, [r6]
   1ae54:	add	r6, r6, #1
   1ae58:	lsl	r3, r3, #1
   1ae5c:	ldr	r2, [r0]
   1ae60:	ldrh	r3, [r2, r3]
   1ae64:	tst	r3, #1
   1ae68:	bne	1ae88 <argp_parse@@Base+0x2a8c>
   1ae6c:	cmp	r6, r5
   1ae70:	mov	r8, r6
   1ae74:	bne	1ae4c <argp_parse@@Base+0x2a50>
   1ae78:	cmp	r8, r5
   1ae7c:	beq	1af34 <argp_parse@@Base+0x2b38>
   1ae80:	bl	11290 <__ctype_b_loc@plt>
   1ae84:	ldr	r2, [r0]
   1ae88:	mov	r6, r8
   1ae8c:	ldrb	r3, [r6, #1]!
   1ae90:	lsl	r3, r3, #1
   1ae94:	ldrh	r3, [r2, r3]
   1ae98:	tst	r3, #1
   1ae9c:	bne	1ae8c <argp_parse@@Base+0x2a90>
   1aea0:	b	1ac10 <argp_parse@@Base+0x2814>
   1aea4:	cmp	r9, r5
   1aea8:	str	r3, [sp, #4]
   1aeac:	bls	1afa8 <argp_parse@@Base+0x2bac>
   1aeb0:	sub	r0, r6, r8
   1aeb4:	sub	r2, r9, r5
   1aeb8:	add	r0, r4, r0
   1aebc:	mov	r1, r5
   1aec0:	bl	1114c <memmove@plt>
   1aec4:	ldr	r2, [r7, #20]
   1aec8:	ldr	r9, [r7, #28]
   1aecc:	sub	r6, r6, r2
   1aed0:	add	r6, r4, r6
   1aed4:	mov	r3, #0
   1aed8:	sub	r5, r6, r5
   1aedc:	str	r3, [r7, #20]
   1aee0:	ldr	r3, [sp, #4]
   1aee4:	sub	r9, r9, r5
   1aee8:	add	r4, r4, r3
   1aeec:	str	r9, [r7, #28]
   1aef0:	b	1aa80 <argp_parse@@Base+0x2684>
   1aef4:	add	r6, r4, r5
   1aef8:	sub	r2, r9, r4
   1aefc:	mov	r1, r4
   1af00:	mov	r0, r6
   1af04:	bl	1114c <memmove@plt>
   1af08:	ldr	r3, [r7, #28]
   1af0c:	mov	r0, r4
   1af10:	add	r3, r3, r5
   1af14:	str	r3, [r7, #28]
   1af18:	mov	r2, r5
   1af1c:	mov	r1, sl
   1af20:	mov	r4, r6
   1af24:	bl	11314 <memset@plt>
   1af28:	b	1aaf0 <argp_parse@@Base+0x26f4>
   1af2c:	add	r8, r2, #1
   1af30:	b	1ac10 <argp_parse@@Base+0x2814>
   1af34:	mov	r3, #0
   1af38:	str	r3, [r7, #20]
   1af3c:	add	r4, r8, #1
   1af40:	ldr	r9, [r7, #28]
   1af44:	b	1aa80 <argp_parse@@Base+0x2684>
   1af48:	ldr	r1, [r7, #32]
   1af4c:	sub	r1, r1, r6
   1af50:	cmp	r3, r1
   1af54:	ble	1acb8 <argp_parse@@Base+0x28bc>
   1af58:	b	1ad44 <argp_parse@@Base+0x2948>
   1af5c:	sub	r9, r9, r6
   1af60:	mov	r1, r6
   1af64:	mov	r2, r9
   1af68:	add	r0, r8, r0
   1af6c:	bl	1114c <memmove@plt>
   1af70:	ldr	r1, [r7, #12]
   1af74:	mov	r3, #10
   1af78:	add	r6, r1, #1
   1af7c:	add	r6, r8, r6
   1af80:	add	r9, r6, r9
   1af84:	sub	fp, r9, r4
   1af88:	add	r5, r8, #1
   1af8c:	strb	r3, [r8]
   1af90:	sub	r9, r6, r4
   1af94:	mov	r2, r4
   1af98:	b	1acac <argp_parse@@Base+0x28b0>
   1af9c:	mov	r1, #10
   1afa0:	bl	11344 <__overflow@plt>
   1afa4:	b	1ac94 <argp_parse@@Base+0x2898>
   1afa8:	add	r3, r8, fp
   1afac:	sub	r6, r6, r3
   1afb0:	add	r9, r9, r6
   1afb4:	str	r9, [r7, #28]
   1afb8:	str	r3, [r7, #20]
   1afbc:	b	1ab58 <argp_parse@@Base+0x275c>
   1afc0:	str	r3, [r7, #20]
   1afc4:	ldr	r9, [r7, #28]
   1afc8:	b	1ab58 <argp_parse@@Base+0x275c>
   1afcc:	push	{r4, lr}
   1afd0:	mov	r4, r0
   1afd4:	bl	1aa60 <argp_parse@@Base+0x2664>
   1afd8:	ldr	r2, [r4, #28]
   1afdc:	ldr	r0, [r4, #24]
   1afe0:	cmp	r2, r0
   1afe4:	bls	1affc <argp_parse@@Base+0x2c00>
   1afe8:	sub	r2, r2, r0
   1afec:	ldr	r3, [r4]
   1aff0:	mov	r1, #1
   1aff4:	bl	111a0 <fwrite_unlocked@plt>
   1aff8:	ldr	r0, [r4, #24]
   1affc:	bl	19378 <argp_parse@@Base+0xf7c>
   1b000:	mov	r0, r4
   1b004:	pop	{r4, lr}
   1b008:	b	19378 <argp_parse@@Base+0xf7c>
   1b00c:	ldr	r3, [r0, #32]
   1b010:	ldr	r2, [r0, #28]
   1b014:	sub	r3, r3, r2
   1b018:	cmp	r3, r1
   1b01c:	bcc	1b02c <argp_parse@@Base+0x2c30>
   1b020:	mov	r3, #1
   1b024:	mov	r0, r3
   1b028:	bx	lr
   1b02c:	push	{r4, r5, r6, lr}
   1b030:	mov	r4, r0
   1b034:	mov	r5, r1
   1b038:	bl	1aa60 <argp_parse@@Base+0x2664>
   1b03c:	ldr	r3, [r4, #24]
   1b040:	ldr	r2, [r4, #28]
   1b044:	mov	r0, r3
   1b048:	sub	r2, r2, r3
   1b04c:	mov	r1, #1
   1b050:	ldr	r3, [r4]
   1b054:	bl	111a0 <fwrite_unlocked@plt>
   1b058:	ldr	r2, [r4, #28]
   1b05c:	ldr	r3, [r4, #24]
   1b060:	sub	r1, r2, r3
   1b064:	cmp	r0, r1
   1b068:	bne	1b0b0 <argp_parse@@Base+0x2cb4>
   1b06c:	ldr	r1, [r4, #32]
   1b070:	mov	r2, #0
   1b074:	sub	r1, r1, r3
   1b078:	cmp	r5, r1
   1b07c:	str	r3, [r4, #28]
   1b080:	str	r2, [r4, #16]
   1b084:	bls	1b0a4 <argp_parse@@Base+0x2ca8>
   1b088:	adds	r5, r5, r1
   1b08c:	bcc	1b0e0 <argp_parse@@Base+0x2ce4>
   1b090:	bl	112e4 <__errno_location@plt>
   1b094:	mov	r2, #12
   1b098:	mov	r3, #0
   1b09c:	str	r2, [r0]
   1b0a0:	b	1b0a8 <argp_parse@@Base+0x2cac>
   1b0a4:	mov	r3, #1
   1b0a8:	mov	r0, r3
   1b0ac:	pop	{r4, r5, r6, pc}
   1b0b0:	ldr	r1, [r4, #16]
   1b0b4:	sub	r2, r2, r0
   1b0b8:	sub	r1, r1, r0
   1b0bc:	str	r2, [r4, #28]
   1b0c0:	str	r1, [r4, #16]
   1b0c4:	sub	r2, r2, r3
   1b0c8:	add	r1, r3, r0
   1b0cc:	mov	r0, r3
   1b0d0:	bl	1114c <memmove@plt>
   1b0d4:	mov	r3, #0
   1b0d8:	mov	r0, r3
   1b0dc:	pop	{r4, r5, r6, pc}
   1b0e0:	mov	r0, r3
   1b0e4:	mov	r1, r5
   1b0e8:	bl	1a988 <argp_parse@@Base+0x258c>
   1b0ec:	cmp	r0, #0
   1b0f0:	beq	1b090 <argp_parse@@Base+0x2c94>
   1b0f4:	add	r5, r0, r5
   1b0f8:	mov	r3, #1
   1b0fc:	str	r5, [r4, #32]
   1b100:	str	r0, [r4, #24]
   1b104:	str	r0, [r4, #28]
   1b108:	b	1b0a8 <argp_parse@@Base+0x2cac>
   1b10c:	push	{r1, r2, r3}
   1b110:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b114:	sub	sp, sp, #8
   1b118:	mov	r5, r0
   1b11c:	ldr	r7, [sp, #36]	; 0x24
   1b120:	mov	r4, #150	; 0x96
   1b124:	mov	r8, #1
   1b128:	mov	r9, #0
   1b12c:	add	r6, sp, #40	; 0x28
   1b130:	ldr	r1, [r5, #32]
   1b134:	ldr	r0, [r5, #28]
   1b138:	sub	r3, r1, r0
   1b13c:	cmp	r4, r3
   1b140:	bhi	1b188 <argp_parse@@Base+0x2d8c>
   1b144:	sub	r4, r1, r0
   1b148:	mov	r1, r4
   1b14c:	mov	r3, r6
   1b150:	mov	r2, r7
   1b154:	str	r6, [sp, #4]
   1b158:	bl	113bc <vsnprintf@plt>
   1b15c:	cmp	r4, r0
   1b160:	bls	1b180 <argp_parse@@Base+0x2d84>
   1b164:	ldr	r3, [r5, #28]
   1b168:	add	r3, r3, r0
   1b16c:	str	r3, [r5, #28]
   1b170:	add	sp, sp, #8
   1b174:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1b178:	add	sp, sp, #12
   1b17c:	bx	lr
   1b180:	add	r4, r0, #1
   1b184:	b	1b130 <argp_parse@@Base+0x2d34>
   1b188:	mov	r0, r5
   1b18c:	bl	1aa60 <argp_parse@@Base+0x2664>
   1b190:	ldr	r3, [r5, #24]
   1b194:	ldr	r2, [r5, #28]
   1b198:	mov	r0, r3
   1b19c:	sub	r2, r2, r3
   1b1a0:	mov	r1, r8
   1b1a4:	ldr	r3, [r5]
   1b1a8:	bl	111a0 <fwrite_unlocked@plt>
   1b1ac:	ldr	r2, [r5, #28]
   1b1b0:	ldr	r3, [r5, #24]
   1b1b4:	sub	r1, r2, r3
   1b1b8:	cmp	r0, r1
   1b1bc:	bne	1b204 <argp_parse@@Base+0x2e08>
   1b1c0:	ldr	r1, [r5, #32]
   1b1c4:	str	r3, [r5, #28]
   1b1c8:	sub	r0, r1, r3
   1b1cc:	cmp	r4, r0
   1b1d0:	str	r9, [r5, #16]
   1b1d4:	movls	r0, r3
   1b1d8:	bls	1b144 <argp_parse@@Base+0x2d48>
   1b1dc:	adds	r4, r4, r0
   1b1e0:	bcc	1b22c <argp_parse@@Base+0x2e30>
   1b1e4:	bl	112e4 <__errno_location@plt>
   1b1e8:	mov	r3, #12
   1b1ec:	str	r3, [r0]
   1b1f0:	mvn	r0, #0
   1b1f4:	add	sp, sp, #8
   1b1f8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1b1fc:	add	sp, sp, #12
   1b200:	bx	lr
   1b204:	ldr	r1, [r5, #16]
   1b208:	sub	r2, r2, r0
   1b20c:	sub	r1, r1, r0
   1b210:	str	r2, [r5, #28]
   1b214:	str	r1, [r5, #16]
   1b218:	sub	r2, r2, r3
   1b21c:	add	r1, r3, r0
   1b220:	mov	r0, r3
   1b224:	bl	1114c <memmove@plt>
   1b228:	b	1b1f0 <argp_parse@@Base+0x2df4>
   1b22c:	mov	r1, r4
   1b230:	mov	r0, r3
   1b234:	bl	1a988 <argp_parse@@Base+0x258c>
   1b238:	cmp	r0, #0
   1b23c:	add	r1, r0, r4
   1b240:	beq	1b1e4 <argp_parse@@Base+0x2de8>
   1b244:	str	r0, [r5, #24]
   1b248:	str	r1, [r5, #32]
   1b24c:	str	r0, [r5, #28]
   1b250:	b	1b144 <argp_parse@@Base+0x2d48>
   1b254:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b258:	ldr	r4, [r1, #32]
   1b25c:	ldr	r8, [r1, #28]
   1b260:	ldr	r7, [r1]
   1b264:	add	r6, r0, r4, lsl #2
   1b268:	mov	r2, r8
   1b26c:	mov	r5, r7
   1b270:	cmp	r5, r4
   1b274:	movle	r3, #0
   1b278:	movgt	r3, #1
   1b27c:	cmp	r2, r4
   1b280:	movge	r3, #0
   1b284:	cmp	r3, #0
   1b288:	beq	1b2fc <argp_parse@@Base+0x2f00>
   1b28c:	sub	r3, r5, r4
   1b290:	sub	sl, r4, r2
   1b294:	cmp	r3, sl
   1b298:	ble	1b2cc <argp_parse@@Base+0x2ed0>
   1b29c:	sub	r5, r5, sl
   1b2a0:	add	sl, sl, r2
   1b2a4:	add	ip, r0, r5, lsl #2
   1b2a8:	add	sl, r0, sl, lsl #2
   1b2ac:	add	r3, r0, r2, lsl #2
   1b2b0:	ldr	r9, [ip]
   1b2b4:	ldr	lr, [r3]
   1b2b8:	str	r9, [r3], #4
   1b2bc:	cmp	r3, sl
   1b2c0:	str	lr, [ip], #4
   1b2c4:	bne	1b2b0 <argp_parse@@Base+0x2eb4>
   1b2c8:	b	1b270 <argp_parse@@Base+0x2e74>
   1b2cc:	add	sl, r3, r2
   1b2d0:	add	r3, r0, r2, lsl #2
   1b2d4:	add	r9, r0, sl, lsl #2
   1b2d8:	mov	r2, r6
   1b2dc:	ldr	lr, [r2]
   1b2e0:	ldr	ip, [r3]
   1b2e4:	str	lr, [r3], #4
   1b2e8:	cmp	r9, r3
   1b2ec:	str	ip, [r2], #4
   1b2f0:	bne	1b2dc <argp_parse@@Base+0x2ee0>
   1b2f4:	mov	r2, sl
   1b2f8:	b	1b270 <argp_parse@@Base+0x2e74>
   1b2fc:	sub	r4, r7, r4
   1b300:	add	r8, r4, r8
   1b304:	str	r8, [r1, #28]
   1b308:	str	r7, [r1, #32]
   1b30c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b314:	sub	sp, sp, #52	; 0x34
   1b318:	str	r1, [sp, #24]
   1b31c:	ldr	r1, [sp, #96]	; 0x60
   1b320:	str	r0, [sp, #28]
   1b324:	str	r2, [sp, #32]
   1b328:	ldr	r8, [r1, #20]
   1b32c:	str	r3, [sp, #12]
   1b330:	mov	r7, r8
   1b334:	ldrb	r5, [r8]
   1b338:	cmp	r5, #61	; 0x3d
   1b33c:	cmpne	r5, #0
   1b340:	movne	r5, #1
   1b344:	moveq	r5, #0
   1b348:	beq	1b364 <argp_parse@@Base+0x2f68>
   1b34c:	ldrb	r3, [r7, #1]!
   1b350:	cmp	r3, #0
   1b354:	cmpne	r3, #61	; 0x3d
   1b358:	bne	1b34c <argp_parse@@Base+0x2f50>
   1b35c:	ldr	r3, [sp, #12]
   1b360:	sub	r5, r7, r8
   1b364:	ldr	sl, [r3]
   1b368:	cmp	sl, #0
   1b36c:	beq	1b744 <argp_parse@@Base+0x3348>
   1b370:	mov	fp, r3
   1b374:	mov	r4, sl
   1b378:	mov	r6, #0
   1b37c:	str	r3, [sp, #20]
   1b380:	mov	r2, r5
   1b384:	mov	r1, r8
   1b388:	mov	r0, r4
   1b38c:	bl	11410 <strncmp@plt>
   1b390:	mov	r9, fp
   1b394:	cmp	r0, #0
   1b398:	mov	r0, r4
   1b39c:	bne	1b3ac <argp_parse@@Base+0x2fb0>
   1b3a0:	bl	112c0 <strlen@plt>
   1b3a4:	cmp	r0, r5
   1b3a8:	beq	1b46c <argp_parse@@Base+0x3070>
   1b3ac:	ldr	r4, [fp, #16]!
   1b3b0:	add	r6, r6, #1
   1b3b4:	cmp	r4, #0
   1b3b8:	bne	1b380 <argp_parse@@Base+0x2f84>
   1b3bc:	ldr	r3, [sp, #100]	; 0x64
   1b3c0:	cmp	r3, #0
   1b3c4:	ldr	r3, [sp, #92]	; 0x5c
   1b3c8:	beq	1b510 <argp_parse@@Base+0x3114>
   1b3cc:	cmp	r3, #0
   1b3d0:	bne	1b628 <argp_parse@@Base+0x322c>
   1b3d4:	mov	fp, r3
   1b3d8:	mov	r0, sl
   1b3dc:	ldr	r4, [sp, #12]
   1b3e0:	ldr	sl, [sp, #96]	; 0x60
   1b3e4:	mov	r9, fp
   1b3e8:	mov	r1, r8
   1b3ec:	str	r3, [sp, #16]
   1b3f0:	str	r3, [sp, #44]	; 0x2c
   1b3f4:	mvn	r3, #0
   1b3f8:	str	r3, [sp, #40]	; 0x28
   1b3fc:	str	fp, [sp, #36]	; 0x24
   1b400:	mov	r2, r5
   1b404:	bl	11410 <strncmp@plt>
   1b408:	cmp	r0, #0
   1b40c:	bne	1b448 <argp_parse@@Base+0x304c>
   1b410:	cmp	r9, #0
   1b414:	beq	1b97c <argp_parse@@Base+0x3580>
   1b418:	ldr	r2, [r9, #4]
   1b41c:	ldr	r3, [r4, #4]
   1b420:	cmp	r2, r3
   1b424:	beq	1b9d8 <argp_parse@@Base+0x35dc>
   1b428:	ldr	r3, [sp, #16]
   1b42c:	cmp	r3, #0
   1b430:	bne	1b448 <argp_parse@@Base+0x304c>
   1b434:	ldr	r3, [sp, #36]	; 0x24
   1b438:	cmp	r3, #0
   1b43c:	beq	1b8b4 <argp_parse@@Base+0x34b8>
   1b440:	mov	r2, #1
   1b444:	strb	r2, [r3, fp]
   1b448:	ldr	r0, [r4, #16]!
   1b44c:	add	fp, fp, #1
   1b450:	cmp	r0, #0
   1b454:	beq	1b584 <argp_parse@@Base+0x3188>
   1b458:	ldr	r1, [sl, #20]
   1b45c:	b	1b400 <argp_parse@@Base+0x3004>
   1b460:	cmp	r9, #0
   1b464:	beq	1b744 <argp_parse@@Base+0x3348>
   1b468:	ldr	r6, [sp, #40]	; 0x28
   1b46c:	ldr	r3, [sp, #96]	; 0x60
   1b470:	ldr	r0, [sp, #96]	; 0x60
   1b474:	mov	r1, #0
   1b478:	ldr	r2, [r3]
   1b47c:	str	r1, [r0, #20]
   1b480:	add	r3, r2, #1
   1b484:	str	r3, [r0]
   1b488:	ldrb	r1, [r7]
   1b48c:	cmp	r1, #0
   1b490:	bne	1b4d0 <argp_parse@@Base+0x30d4>
   1b494:	ldr	r1, [r9, #4]
   1b498:	cmp	r1, #1
   1b49c:	beq	1b7b4 <argp_parse@@Base+0x33b8>
   1b4a0:	ldr	r3, [sp, #88]	; 0x58
   1b4a4:	ldr	r2, [r9, #8]
   1b4a8:	cmp	r3, #0
   1b4ac:	strne	r6, [r3]
   1b4b0:	cmp	r2, #0
   1b4b4:	movne	r3, #0
   1b4b8:	ldreq	r3, [r9, #12]
   1b4bc:	ldrne	r1, [r9, #12]
   1b4c0:	strne	r1, [r2]
   1b4c4:	mov	r0, r3
   1b4c8:	add	sp, sp, #52	; 0x34
   1b4cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4d0:	ldr	r3, [r9, #4]
   1b4d4:	cmp	r3, #0
   1b4d8:	movne	r3, r0
   1b4dc:	addne	r7, r7, #1
   1b4e0:	strne	r7, [r3, #12]
   1b4e4:	bne	1b4a0 <argp_parse@@Base+0x30a4>
   1b4e8:	ldr	r3, [sp, #100]	; 0x64
   1b4ec:	cmp	r3, #0
   1b4f0:	bne	1b70c <argp_parse@@Base+0x3310>
   1b4f4:	ldr	r1, [sp, #96]	; 0x60
   1b4f8:	ldr	r2, [r9, #12]
   1b4fc:	mov	r3, #63	; 0x3f
   1b500:	str	r2, [r1, #8]
   1b504:	mov	r0, r3
   1b508:	add	sp, sp, #52	; 0x34
   1b50c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b510:	cmp	r3, #0
   1b514:	bne	1b6a4 <argp_parse@@Base+0x32a8>
   1b518:	mov	fp, r3
   1b51c:	ldr	r4, [sp, #12]
   1b520:	mov	r9, fp
   1b524:	mov	r0, sl
   1b528:	str	r3, [sp, #16]
   1b52c:	mvn	r3, #0
   1b530:	str	r3, [sp, #40]	; 0x28
   1b534:	mov	r2, r5
   1b538:	mov	r1, r8
   1b53c:	bl	11410 <strncmp@plt>
   1b540:	cmp	r0, #0
   1b544:	bne	1b568 <argp_parse@@Base+0x316c>
   1b548:	cmp	r9, #0
   1b54c:	beq	1b970 <argp_parse@@Base+0x3574>
   1b550:	ldr	r2, [r9, #4]
   1b554:	ldr	r3, [r4, #4]
   1b558:	cmp	r2, r3
   1b55c:	beq	1b9ac <argp_parse@@Base+0x35b0>
   1b560:	mov	r3, #1
   1b564:	str	r3, [sp, #16]
   1b568:	ldr	r0, [r4, #16]!
   1b56c:	add	fp, fp, #1
   1b570:	cmp	r0, #0
   1b574:	bne	1b534 <argp_parse@@Base+0x3138>
   1b578:	ldr	r3, [sp, #92]	; 0x5c
   1b57c:	str	r0, [sp, #36]	; 0x24
   1b580:	str	r3, [sp, #44]	; 0x2c
   1b584:	ldr	r2, [sp, #36]	; 0x24
   1b588:	ldr	r3, [sp, #16]
   1b58c:	cmp	r3, #0
   1b590:	cmpeq	r2, #0
   1b594:	beq	1b460 <argp_parse@@Base+0x3064>
   1b598:	ldr	r2, [sp, #100]	; 0x64
   1b59c:	cmp	r2, #0
   1b5a0:	beq	1b804 <argp_parse@@Base+0x3408>
   1b5a4:	cmp	r3, #0
   1b5a8:	bne	1b7dc <argp_parse@@Base+0x33e0>
   1b5ac:	ldr	r5, [pc, #1108]	; 1ba08 <argp_parse@@Base+0x360c>
   1b5b0:	ldr	r3, [sp, #36]	; 0x24
   1b5b4:	ldr	r7, [pc, #1104]	; 1ba0c <argp_parse@@Base+0x3610>
   1b5b8:	ldr	r0, [r5]
   1b5bc:	add	r6, r3, r6
   1b5c0:	mov	r4, r3
   1b5c4:	bl	113b0 <flockfile@plt>
   1b5c8:	ldr	r3, [sp, #24]
   1b5cc:	ldr	r0, [r5]
   1b5d0:	ldr	r1, [pc, #1080]	; 1ba10 <argp_parse@@Base+0x3614>
   1b5d4:	ldr	r2, [r3]
   1b5d8:	ldr	r3, [sp, #96]	; 0x60
   1b5dc:	ldr	r3, [r3, #20]
   1b5e0:	str	r3, [sp]
   1b5e4:	ldr	r3, [sp, #104]	; 0x68
   1b5e8:	bl	112d8 <fprintf@plt>
   1b5ec:	ldr	r8, [sp, #16]
   1b5f0:	ldr	r9, [sp, #12]
   1b5f4:	b	1b604 <argp_parse@@Base+0x3208>
   1b5f8:	cmp	r4, r6
   1b5fc:	add	r8, r8, #1
   1b600:	beq	1b994 <argp_parse@@Base+0x3598>
   1b604:	ldrb	r3, [r4], #1
   1b608:	cmp	r3, #0
   1b60c:	beq	1b5f8 <argp_parse@@Base+0x31fc>
   1b610:	ldr	r3, [r9, r8, lsl #4]
   1b614:	ldr	r2, [sp, #104]	; 0x68
   1b618:	mov	r1, r7
   1b61c:	ldr	r0, [r5]
   1b620:	bl	112d8 <fprintf@plt>
   1b624:	b	1b5f8 <argp_parse@@Base+0x31fc>
   1b628:	mov	r9, r4
   1b62c:	str	r4, [sp, #16]
   1b630:	str	r4, [sp, #44]	; 0x2c
   1b634:	str	r4, [sp, #36]	; 0x24
   1b638:	mov	r1, r8
   1b63c:	mov	r0, sl
   1b640:	mov	r8, r4
   1b644:	ldr	sl, [sp, #20]
   1b648:	ldr	r4, [sp, #96]	; 0x60
   1b64c:	mov	fp, #1
   1b650:	mvn	r3, #0
   1b654:	str	r3, [sp, #40]	; 0x28
   1b658:	mov	r2, r5
   1b65c:	bl	11410 <strncmp@plt>
   1b660:	cmp	r0, #0
   1b664:	bne	1b68c <argp_parse@@Base+0x3290>
   1b668:	cmp	r9, #0
   1b66c:	beq	1b988 <argp_parse@@Base+0x358c>
   1b670:	ldr	r3, [sp, #16]
   1b674:	cmp	r3, #0
   1b678:	bne	1b68c <argp_parse@@Base+0x3290>
   1b67c:	ldr	r3, [sp, #36]	; 0x24
   1b680:	cmp	r3, #0
   1b684:	beq	1b8f8 <argp_parse@@Base+0x34fc>
   1b688:	strb	fp, [r3, r8]
   1b68c:	ldr	r0, [sl, #16]!
   1b690:	add	r8, r8, #1
   1b694:	cmp	r0, #0
   1b698:	beq	1b584 <argp_parse@@Base+0x3188>
   1b69c:	ldr	r1, [r4, #20]
   1b6a0:	b	1b658 <argp_parse@@Base+0x325c>
   1b6a4:	ldr	r3, [sp, #100]	; 0x64
   1b6a8:	mov	r0, sl
   1b6ac:	mov	r4, r3
   1b6b0:	ldr	sl, [sp, #20]
   1b6b4:	mov	r9, r4
   1b6b8:	str	r3, [sp, #16]
   1b6bc:	mvn	r3, #0
   1b6c0:	str	r3, [sp, #40]	; 0x28
   1b6c4:	mov	r2, r5
   1b6c8:	mov	r1, r8
   1b6cc:	bl	11410 <strncmp@plt>
   1b6d0:	cmp	r0, #0
   1b6d4:	bne	1b6ec <argp_parse@@Base+0x32f0>
   1b6d8:	cmp	r9, #0
   1b6dc:	moveq	r9, sl
   1b6e0:	movne	r3, #1
   1b6e4:	strne	r3, [sp, #16]
   1b6e8:	streq	r4, [sp, #40]	; 0x28
   1b6ec:	ldr	r0, [sl, #16]!
   1b6f0:	add	r4, r4, #1
   1b6f4:	cmp	r0, #0
   1b6f8:	bne	1b6c4 <argp_parse@@Base+0x32c8>
   1b6fc:	ldr	r3, [sp, #100]	; 0x64
   1b700:	str	r0, [sp, #36]	; 0x24
   1b704:	str	r3, [sp, #44]	; 0x2c
   1b708:	b	1b584 <argp_parse@@Base+0x3188>
   1b70c:	ldr	r3, [sp, #24]
   1b710:	ldr	r1, [pc, #752]	; 1ba08 <argp_parse@@Base+0x360c>
   1b714:	ldr	r2, [r3]
   1b718:	ldr	r3, [r9]
   1b71c:	ldr	r0, [r1]
   1b720:	str	r3, [sp]
   1b724:	ldr	r1, [pc, #744]	; 1ba14 <argp_parse@@Base+0x3618>
   1b728:	ldr	r3, [sp, #104]	; 0x68
   1b72c:	bl	112d8 <fprintf@plt>
   1b730:	ldr	r1, [sp, #96]	; 0x60
   1b734:	ldr	r2, [r9, #12]
   1b738:	mov	r3, #63	; 0x3f
   1b73c:	str	r2, [r1, #8]
   1b740:	b	1b504 <argp_parse@@Base+0x3108>
   1b744:	ldr	r3, [sp, #92]	; 0x5c
   1b748:	cmp	r3, #0
   1b74c:	bne	1b930 <argp_parse@@Base+0x3534>
   1b750:	ldr	r3, [sp, #100]	; 0x64
   1b754:	cmp	r3, #0
   1b758:	beq	1b784 <argp_parse@@Base+0x3388>
   1b75c:	ldr	r3, [sp, #24]
   1b760:	ldr	r1, [pc, #672]	; 1ba08 <argp_parse@@Base+0x360c>
   1b764:	ldr	r2, [r3]
   1b768:	ldr	r3, [sp, #96]	; 0x60
   1b76c:	ldr	r0, [r1]
   1b770:	ldr	r1, [pc, #672]	; 1ba18 <argp_parse@@Base+0x361c>
   1b774:	ldr	r3, [r3, #20]
   1b778:	str	r3, [sp]
   1b77c:	ldr	r3, [sp, #104]	; 0x68
   1b780:	bl	112d8 <fprintf@plt>
   1b784:	ldr	r3, [sp, #96]	; 0x60
   1b788:	ldr	r1, [sp, #96]	; 0x60
   1b78c:	mov	r2, #0
   1b790:	ldr	r3, [r3]
   1b794:	str	r2, [r1, #20]
   1b798:	add	r3, r3, #1
   1b79c:	str	r3, [r1]
   1b7a0:	mov	r3, #63	; 0x3f
   1b7a4:	mov	r0, r3
   1b7a8:	str	r2, [r1, #8]
   1b7ac:	add	sp, sp, #52	; 0x34
   1b7b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7b4:	ldr	r1, [sp, #28]
   1b7b8:	cmp	r3, r1
   1b7bc:	bge	1b85c <argp_parse@@Base+0x3460>
   1b7c0:	ldr	r1, [sp, #24]
   1b7c4:	add	r2, r2, #2
   1b7c8:	ldr	r3, [r1, r3, lsl #2]
   1b7cc:	ldr	r1, [sp, #96]	; 0x60
   1b7d0:	str	r3, [r1, #12]
   1b7d4:	str	r2, [r1]
   1b7d8:	b	1b4a0 <argp_parse@@Base+0x30a4>
   1b7dc:	ldr	r3, [sp, #24]
   1b7e0:	ldr	r1, [pc, #544]	; 1ba08 <argp_parse@@Base+0x360c>
   1b7e4:	ldr	r2, [r3]
   1b7e8:	ldr	r3, [sp, #96]	; 0x60
   1b7ec:	ldr	r0, [r1]
   1b7f0:	ldr	r1, [pc, #548]	; 1ba1c <argp_parse@@Base+0x3620>
   1b7f4:	ldr	r3, [r3, #20]
   1b7f8:	str	r3, [sp]
   1b7fc:	ldr	r3, [sp, #104]	; 0x68
   1b800:	bl	112d8 <fprintf@plt>
   1b804:	ldr	r3, [sp, #44]	; 0x2c
   1b808:	cmp	r3, #0
   1b80c:	beq	1b818 <argp_parse@@Base+0x341c>
   1b810:	ldr	r0, [sp, #36]	; 0x24
   1b814:	bl	19378 <argp_parse@@Base+0xf7c>
   1b818:	ldr	r3, [sp, #96]	; 0x60
   1b81c:	ldr	r4, [r3, #20]
   1b820:	mov	r0, r4
   1b824:	bl	112c0 <strlen@plt>
   1b828:	ldr	r3, [sp, #96]	; 0x60
   1b82c:	ldr	r1, [sp, #96]	; 0x60
   1b830:	mov	r2, #0
   1b834:	ldr	r3, [r3]
   1b838:	str	r2, [r1, #8]
   1b83c:	add	r3, r3, #1
   1b840:	str	r3, [r1]
   1b844:	mov	r3, #63	; 0x3f
   1b848:	add	r0, r4, r0
   1b84c:	str	r0, [r1, #20]
   1b850:	mov	r0, r3
   1b854:	add	sp, sp, #52	; 0x34
   1b858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b85c:	ldr	r3, [sp, #100]	; 0x64
   1b860:	cmp	r3, #0
   1b864:	bne	1b88c <argp_parse@@Base+0x3490>
   1b868:	ldr	r2, [sp, #96]	; 0x60
   1b86c:	ldr	r3, [r9, #12]
   1b870:	str	r3, [r2, #8]
   1b874:	ldr	r3, [sp, #32]
   1b878:	ldrb	r3, [r3]
   1b87c:	cmp	r3, #58	; 0x3a
   1b880:	movne	r3, #63	; 0x3f
   1b884:	moveq	r3, #58	; 0x3a
   1b888:	b	1b4c4 <argp_parse@@Base+0x30c8>
   1b88c:	ldr	r3, [sp, #24]
   1b890:	ldr	r1, [pc, #368]	; 1ba08 <argp_parse@@Base+0x360c>
   1b894:	ldr	r2, [r3]
   1b898:	ldr	r3, [r9]
   1b89c:	ldr	r0, [r1]
   1b8a0:	str	r3, [sp]
   1b8a4:	ldr	r1, [pc, #372]	; 1ba20 <argp_parse@@Base+0x3624>
   1b8a8:	ldr	r3, [sp, #104]	; 0x68
   1b8ac:	bl	112d8 <fprintf@plt>
   1b8b0:	b	1b868 <argp_parse@@Base+0x346c>
   1b8b4:	mov	r0, r6
   1b8b8:	bl	1a95c <argp_parse@@Base+0x2560>
   1b8bc:	subs	r3, r0, #0
   1b8c0:	mov	r8, r3
   1b8c4:	str	r3, [sp, #36]	; 0x24
   1b8c8:	mov	r3, #1
   1b8cc:	streq	r3, [sp, #16]
   1b8d0:	beq	1b448 <argp_parse@@Base+0x304c>
   1b8d4:	mov	r2, r6
   1b8d8:	mov	r1, #0
   1b8dc:	str	r3, [sp, #44]	; 0x2c
   1b8e0:	bl	11314 <memset@plt>
   1b8e4:	ldr	r2, [sp, #40]	; 0x28
   1b8e8:	mov	r1, #1
   1b8ec:	ldr	r3, [sp, #36]	; 0x24
   1b8f0:	strb	r1, [r8, r2]
   1b8f4:	b	1b440 <argp_parse@@Base+0x3044>
   1b8f8:	mov	r0, r6
   1b8fc:	bl	1a95c <argp_parse@@Base+0x2560>
   1b900:	subs	r3, r0, #0
   1b904:	str	r3, [sp, #36]	; 0x24
   1b908:	beq	1b9fc <argp_parse@@Base+0x3600>
   1b90c:	mov	r2, r6
   1b910:	mov	r1, #0
   1b914:	bl	11314 <memset@plt>
   1b918:	mov	r2, #1
   1b91c:	str	r2, [sp, #44]	; 0x2c
   1b920:	ldr	r3, [sp, #36]	; 0x24
   1b924:	ldr	r2, [sp, #40]	; 0x28
   1b928:	strb	fp, [r3, r2]
   1b92c:	b	1b688 <argp_parse@@Base+0x328c>
   1b930:	ldr	r3, [sp, #96]	; 0x60
   1b934:	ldr	r2, [sp, #24]
   1b938:	ldr	r3, [r3]
   1b93c:	ldr	r3, [r2, r3, lsl #2]
   1b940:	ldrb	r3, [r3, #1]
   1b944:	cmp	r3, #45	; 0x2d
   1b948:	beq	1b750 <argp_parse@@Base+0x3354>
   1b94c:	ldr	r3, [sp, #96]	; 0x60
   1b950:	ldr	r0, [sp, #32]
   1b954:	ldr	r3, [r3, #20]
   1b958:	ldrb	r1, [r3]
   1b95c:	bl	112cc <strchr@plt>
   1b960:	cmp	r0, #0
   1b964:	beq	1b750 <argp_parse@@Base+0x3354>
   1b968:	mvn	r3, #0
   1b96c:	b	1b4c4 <argp_parse@@Base+0x30c8>
   1b970:	str	fp, [sp, #40]	; 0x28
   1b974:	mov	r9, r4
   1b978:	b	1b568 <argp_parse@@Base+0x316c>
   1b97c:	str	fp, [sp, #40]	; 0x28
   1b980:	mov	r9, r4
   1b984:	b	1b448 <argp_parse@@Base+0x304c>
   1b988:	str	r8, [sp, #40]	; 0x28
   1b98c:	mov	r9, sl
   1b990:	b	1b68c <argp_parse@@Base+0x3290>
   1b994:	ldr	r1, [r5]
   1b998:	mov	r0, #10
   1b99c:	bl	11380 <fputc@plt>
   1b9a0:	ldr	r0, [r5]
   1b9a4:	bl	11200 <funlockfile@plt>
   1b9a8:	b	1b804 <argp_parse@@Base+0x3408>
   1b9ac:	ldr	r2, [r9, #8]
   1b9b0:	ldr	r3, [r4, #8]
   1b9b4:	cmp	r2, r3
   1b9b8:	bne	1b560 <argp_parse@@Base+0x3164>
   1b9bc:	ldr	r2, [r9, #12]
   1b9c0:	ldr	r3, [r4, #12]
   1b9c4:	ldr	r1, [sp, #16]
   1b9c8:	cmp	r2, r3
   1b9cc:	movne	r1, #1
   1b9d0:	str	r1, [sp, #16]
   1b9d4:	b	1b568 <argp_parse@@Base+0x316c>
   1b9d8:	ldr	r2, [r9, #8]
   1b9dc:	ldr	r3, [r4, #8]
   1b9e0:	cmp	r2, r3
   1b9e4:	bne	1b428 <argp_parse@@Base+0x302c>
   1b9e8:	ldr	r2, [r9, #12]
   1b9ec:	ldr	r3, [r4, #12]
   1b9f0:	cmp	r2, r3
   1b9f4:	bne	1b428 <argp_parse@@Base+0x302c>
   1b9f8:	b	1b448 <argp_parse@@Base+0x304c>
   1b9fc:	mov	r3, #1
   1ba00:	str	r3, [sp, #16]
   1ba04:	b	1b68c <argp_parse@@Base+0x3290>
   1ba08:	ldrdeq	pc, [r2], -r8
   1ba0c:	andeq	lr, r1, ip, asr #4
   1ba10:	andeq	lr, r1, ip, lsl r2
   1ba14:	andeq	lr, r1, r4, ror r2
   1ba18:	andeq	lr, r1, r4, asr r2
   1ba1c:	strdeq	lr, [r1], -ip
   1ba20:	andeq	lr, r1, r4, lsr #5
   1ba24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba28:	sub	sp, sp, #36	; 0x24
   1ba2c:	subs	r6, r0, #0
   1ba30:	ldr	r4, [sp, #80]	; 0x50
   1ba34:	ldr	r8, [r4, #4]
   1ba38:	ble	1bc0c <argp_parse@@Base+0x3810>
   1ba3c:	mov	sl, r3
   1ba40:	ldr	r3, [r4]
   1ba44:	mov	r7, r2
   1ba48:	mov	r2, #0
   1ba4c:	cmp	r3, r2
   1ba50:	mov	r9, r1
   1ba54:	str	r2, [r4, #12]
   1ba58:	beq	1bc94 <argp_parse@@Base+0x3898>
   1ba5c:	ldr	r2, [r4, #16]
   1ba60:	cmp	r2, #0
   1ba64:	bne	1bc18 <argp_parse@@Base+0x381c>
   1ba68:	mov	r5, #0
   1ba6c:	str	r3, [r4, #32]
   1ba70:	str	r3, [r4, #28]
   1ba74:	str	r5, [r4, #20]
   1ba78:	ldrb	r3, [r7]
   1ba7c:	cmp	r3, #45	; 0x2d
   1ba80:	moveq	r3, #2
   1ba84:	addeq	r7, r7, #1
   1ba88:	streq	r3, [r4, #24]
   1ba8c:	beq	1bab4 <argp_parse@@Base+0x36b8>
   1ba90:	cmp	r3, #43	; 0x2b
   1ba94:	streq	r5, [r4, #24]
   1ba98:	addeq	r7, r7, #1
   1ba9c:	beq	1bab4 <argp_parse@@Base+0x36b8>
   1baa0:	ldr	r3, [sp, #84]	; 0x54
   1baa4:	cmp	r3, #0
   1baa8:	beq	1bd24 <argp_parse@@Base+0x3928>
   1baac:	mov	r3, #0
   1bab0:	str	r3, [r4, #24]
   1bab4:	mov	r3, #1
   1bab8:	str	r3, [r4, #16]
   1babc:	ldrb	r3, [r7]
   1bac0:	cmp	r3, #58	; 0x3a
   1bac4:	moveq	r8, #0
   1bac8:	cmp	r5, #0
   1bacc:	beq	1bb74 <argp_parse@@Base+0x3778>
   1bad0:	ldrb	r3, [r5]
   1bad4:	cmp	r3, #0
   1bad8:	beq	1bb74 <argp_parse@@Base+0x3778>
   1badc:	add	r3, r5, #1
   1bae0:	str	r3, [r4, #20]
   1bae4:	ldrb	fp, [r5]
   1bae8:	mov	r0, r7
   1baec:	str	r3, [sp, #28]
   1baf0:	mov	r1, fp
   1baf4:	bl	112cc <strchr@plt>
   1baf8:	ldrb	r1, [r5, #1]
   1bafc:	ldr	r3, [sp, #28]
   1bb00:	cmp	r1, #0
   1bb04:	ldreq	r1, [r4]
   1bb08:	addeq	r1, r1, #1
   1bb0c:	streq	r1, [r4]
   1bb10:	sub	r1, fp, #58	; 0x3a
   1bb14:	mov	r2, r0
   1bb18:	cmp	r2, #0
   1bb1c:	cmpne	r1, #1
   1bb20:	mov	r0, fp
   1bb24:	bls	1bc64 <argp_parse@@Base+0x3868>
   1bb28:	ldrb	r1, [r2]
   1bb2c:	cmp	r1, #87	; 0x57
   1bb30:	ldrb	r1, [r2, #1]
   1bb34:	beq	1bdb0 <argp_parse@@Base+0x39b4>
   1bb38:	cmp	r1, #58	; 0x3a
   1bb3c:	bne	1bc5c <argp_parse@@Base+0x3860>
   1bb40:	ldrb	r2, [r2, #2]
   1bb44:	cmp	r2, #58	; 0x3a
   1bb48:	ldrb	r2, [r5, #1]
   1bb4c:	beq	1bea8 <argp_parse@@Base+0x3aac>
   1bb50:	cmp	r2, #0
   1bb54:	beq	1be88 <argp_parse@@Base+0x3a8c>
   1bb58:	ldr	r2, [r4]
   1bb5c:	str	r3, [r4, #12]
   1bb60:	add	r3, r2, #1
   1bb64:	str	r3, [r4]
   1bb68:	mov	r3, #0
   1bb6c:	str	r3, [r4, #20]
   1bb70:	b	1bc5c <argp_parse@@Base+0x3860>
   1bb74:	ldr	fp, [r4]
   1bb78:	ldr	r3, [r4, #32]
   1bb7c:	ldr	r2, [r4, #28]
   1bb80:	cmp	r3, fp
   1bb84:	ldr	r3, [r4, #24]
   1bb88:	strgt	fp, [r4, #32]
   1bb8c:	cmp	fp, r2
   1bb90:	movlt	r2, fp
   1bb94:	strlt	fp, [r4, #28]
   1bb98:	cmp	r3, #1
   1bb9c:	beq	1bca4 <argp_parse@@Base+0x38a8>
   1bba0:	cmp	r6, fp
   1bba4:	beq	1bd0c <argp_parse@@Base+0x3910>
   1bba8:	ldr	r3, [pc, #972]	; 1bf7c <argp_parse@@Base+0x3b80>
   1bbac:	ldr	r5, [r9, fp, lsl #2]
   1bbb0:	mov	r1, r3
   1bbb4:	mov	r0, r5
   1bbb8:	str	r3, [sp, #28]
   1bbbc:	bl	11104 <strcmp@plt>
   1bbc0:	ldr	r3, [sp, #28]
   1bbc4:	cmp	r0, #0
   1bbc8:	bne	1bc34 <argp_parse@@Base+0x3838>
   1bbcc:	ldr	r3, [r4, #28]
   1bbd0:	ldr	r2, [r4, #32]
   1bbd4:	add	fp, fp, #1
   1bbd8:	cmp	r3, r2
   1bbdc:	str	fp, [r4]
   1bbe0:	beq	1bda4 <argp_parse@@Base+0x39a8>
   1bbe4:	cmp	fp, r2
   1bbe8:	beq	1bbfc <argp_parse@@Base+0x3800>
   1bbec:	mov	r0, r9
   1bbf0:	mov	r1, r4
   1bbf4:	bl	1b254 <argp_parse@@Base+0x2e58>
   1bbf8:	ldr	r3, [r4, #28]
   1bbfc:	cmp	r6, r3
   1bc00:	str	r6, [r4]
   1bc04:	str	r6, [r4, #32]
   1bc08:	strne	r3, [r4]
   1bc0c:	mvn	r0, #0
   1bc10:	add	sp, sp, #36	; 0x24
   1bc14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc18:	ldrb	r3, [r7]
   1bc1c:	ldr	r5, [r4, #20]
   1bc20:	sub	r2, r3, #43	; 0x2b
   1bc24:	tst	r2, #253	; 0xfd
   1bc28:	ldrbeq	r3, [r7, #1]
   1bc2c:	addeq	r7, r7, #1
   1bc30:	b	1bac0 <argp_parse@@Base+0x36c4>
   1bc34:	ldrb	r2, [r5]
   1bc38:	cmp	r2, #45	; 0x2d
   1bc3c:	beq	1bd58 <argp_parse@@Base+0x395c>
   1bc40:	ldr	r3, [r4, #24]
   1bc44:	cmp	r3, #0
   1bc48:	beq	1bc0c <argp_parse@@Base+0x3810>
   1bc4c:	mov	r0, #1
   1bc50:	add	fp, fp, #1
   1bc54:	str	fp, [r4]
   1bc58:	str	r5, [r4, #12]
   1bc5c:	add	sp, sp, #36	; 0x24
   1bc60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc64:	cmp	r8, #0
   1bc68:	beq	1bc84 <argp_parse@@Base+0x3888>
   1bc6c:	ldr	r1, [pc, #780]	; 1bf80 <argp_parse@@Base+0x3b84>
   1bc70:	ldr	r2, [r9]
   1bc74:	mov	r3, fp
   1bc78:	ldr	r0, [r1]
   1bc7c:	ldr	r1, [pc, #768]	; 1bf84 <argp_parse@@Base+0x3b88>
   1bc80:	bl	112d8 <fprintf@plt>
   1bc84:	mov	r0, #63	; 0x3f
   1bc88:	str	fp, [r4, #8]
   1bc8c:	add	sp, sp, #36	; 0x24
   1bc90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc94:	mov	r2, #1
   1bc98:	mov	r3, r2
   1bc9c:	str	r2, [r4]
   1bca0:	b	1ba68 <argp_parse@@Base+0x366c>
   1bca4:	ldr	r3, [r4, #32]
   1bca8:	cmp	r3, r2
   1bcac:	beq	1be24 <argp_parse@@Base+0x3a28>
   1bcb0:	cmp	fp, r3
   1bcb4:	beq	1bcc8 <argp_parse@@Base+0x38cc>
   1bcb8:	mov	r1, r4
   1bcbc:	mov	r0, r9
   1bcc0:	bl	1b254 <argp_parse@@Base+0x2e58>
   1bcc4:	ldr	r3, [r4]
   1bcc8:	cmp	r6, r3
   1bccc:	addgt	r1, r9, r3, lsl #2
   1bcd0:	bgt	1bce8 <argp_parse@@Base+0x38ec>
   1bcd4:	b	1bd04 <argp_parse@@Base+0x3908>
   1bcd8:	add	r3, r3, #1
   1bcdc:	cmp	r6, r3
   1bce0:	str	r3, [r4]
   1bce4:	beq	1bd44 <argp_parse@@Base+0x3948>
   1bce8:	ldr	r2, [r1], #4
   1bcec:	ldrb	r0, [r2]
   1bcf0:	cmp	r0, #45	; 0x2d
   1bcf4:	bne	1bcd8 <argp_parse@@Base+0x38dc>
   1bcf8:	ldrb	r2, [r2, #1]
   1bcfc:	cmp	r2, #0
   1bd00:	beq	1bcd8 <argp_parse@@Base+0x38dc>
   1bd04:	mov	fp, r3
   1bd08:	b	1bd48 <argp_parse@@Base+0x394c>
   1bd0c:	ldr	r3, [r4, #28]
   1bd10:	ldr	r6, [r4, #32]
   1bd14:	mvn	r0, #0
   1bd18:	cmp	r6, r3
   1bd1c:	strne	r3, [r4]
   1bd20:	b	1bc10 <argp_parse@@Base+0x3814>
   1bd24:	ldr	r0, [pc, #604]	; 1bf88 <argp_parse@@Base+0x3b8c>
   1bd28:	bl	11230 <getenv@plt>
   1bd2c:	ldr	r5, [r4, #20]
   1bd30:	cmp	r0, #0
   1bd34:	bne	1baac <argp_parse@@Base+0x36b0>
   1bd38:	mov	r3, #1
   1bd3c:	str	r3, [r4, #24]
   1bd40:	b	1bab4 <argp_parse@@Base+0x36b8>
   1bd44:	mov	fp, r6
   1bd48:	cmp	r6, fp
   1bd4c:	str	fp, [r4, #32]
   1bd50:	bne	1bba8 <argp_parse@@Base+0x37ac>
   1bd54:	b	1bd0c <argp_parse@@Base+0x3910>
   1bd58:	ldrb	r1, [r5, #1]
   1bd5c:	cmp	r1, #0
   1bd60:	beq	1bc40 <argp_parse@@Base+0x3844>
   1bd64:	cmp	sl, #0
   1bd68:	beq	1bd9c <argp_parse@@Base+0x39a0>
   1bd6c:	cmp	r1, #45	; 0x2d
   1bd70:	beq	1becc <argp_parse@@Base+0x3ad0>
   1bd74:	ldr	r3, [sp, #76]	; 0x4c
   1bd78:	cmp	r3, #0
   1bd7c:	beq	1bd9c <argp_parse@@Base+0x39a0>
   1bd80:	ldrb	r3, [r5, #2]
   1bd84:	cmp	r3, #0
   1bd88:	bne	1be38 <argp_parse@@Base+0x3a3c>
   1bd8c:	mov	r0, r7
   1bd90:	bl	112cc <strchr@plt>
   1bd94:	cmp	r0, #0
   1bd98:	beq	1be38 <argp_parse@@Base+0x3a3c>
   1bd9c:	add	r5, r5, #1
   1bda0:	b	1badc <argp_parse@@Base+0x36e0>
   1bda4:	mov	r3, fp
   1bda8:	str	fp, [r4, #28]
   1bdac:	b	1bbfc <argp_parse@@Base+0x3800>
   1bdb0:	adds	ip, sl, #0
   1bdb4:	movne	ip, #1
   1bdb8:	cmp	r1, #59	; 0x3b
   1bdbc:	movne	ip, #0
   1bdc0:	cmp	ip, #0
   1bdc4:	beq	1bb38 <argp_parse@@Base+0x373c>
   1bdc8:	ldrb	r2, [r5, #1]
   1bdcc:	cmp	r2, #0
   1bdd0:	bne	1bde4 <argp_parse@@Base+0x39e8>
   1bdd4:	ldr	r3, [r4]
   1bdd8:	cmp	r6, r3
   1bddc:	ldrne	r3, [r9, r3, lsl #2]
   1bde0:	beq	1bf28 <argp_parse@@Base+0x3b2c>
   1bde4:	str	r3, [r4, #20]
   1bde8:	ldr	lr, [pc, #412]	; 1bf8c <argp_parse@@Base+0x3b90>
   1bdec:	ldr	r3, [sp, #72]	; 0x48
   1bdf0:	mov	ip, #0
   1bdf4:	str	r3, [sp]
   1bdf8:	str	r8, [sp, #12]
   1bdfc:	str	r4, [sp, #8]
   1be00:	str	lr, [sp, #16]
   1be04:	mov	r3, sl
   1be08:	str	ip, [r4, #12]
   1be0c:	mov	r2, r7
   1be10:	mov	r1, r9
   1be14:	mov	r0, r6
   1be18:	str	ip, [sp, #4]
   1be1c:	bl	1b310 <argp_parse@@Base+0x2f14>
   1be20:	b	1bc5c <argp_parse@@Base+0x3860>
   1be24:	cmp	fp, r2
   1be28:	strne	fp, [r4, #28]
   1be2c:	movne	r3, fp
   1be30:	moveq	r3, r2
   1be34:	b	1bcc8 <argp_parse@@Base+0x38cc>
   1be38:	ldr	r2, [sp, #76]	; 0x4c
   1be3c:	add	r5, r5, #1
   1be40:	str	r5, [r4, #20]
   1be44:	ldr	r3, [pc, #324]	; 1bf90 <argp_parse@@Base+0x3b94>
   1be48:	str	r2, [sp, #4]
   1be4c:	ldr	r2, [sp, #72]	; 0x48
   1be50:	str	r3, [sp, #16]
   1be54:	str	r2, [sp]
   1be58:	str	r8, [sp, #12]
   1be5c:	str	r4, [sp, #8]
   1be60:	mov	r3, sl
   1be64:	mov	r2, r7
   1be68:	mov	r1, r9
   1be6c:	mov	r0, r6
   1be70:	bl	1b310 <argp_parse@@Base+0x2f14>
   1be74:	cmn	r0, #1
   1be78:	bne	1bc5c <argp_parse@@Base+0x3860>
   1be7c:	ldr	r3, [r4]
   1be80:	ldr	r5, [r9, r3, lsl #2]
   1be84:	b	1bd9c <argp_parse@@Base+0x39a0>
   1be88:	ldr	r3, [r4]
   1be8c:	cmp	r6, r3
   1be90:	beq	1bf08 <argp_parse@@Base+0x3b0c>
   1be94:	ldr	r2, [r9, r3, lsl #2]
   1be98:	add	r3, r3, #1
   1be9c:	str	r2, [r4, #12]
   1bea0:	str	r3, [r4]
   1bea4:	b	1bb68 <argp_parse@@Base+0x376c>
   1bea8:	cmp	r2, #0
   1beac:	moveq	r3, r2
   1beb0:	ldrne	r2, [r4]
   1beb4:	str	r3, [r4, #12]
   1beb8:	addne	r2, r2, #1
   1bebc:	strne	r2, [r4]
   1bec0:	mov	r2, #0
   1bec4:	str	r2, [r4, #20]
   1bec8:	b	1bc5c <argp_parse@@Base+0x3860>
   1becc:	add	r5, r5, #2
   1bed0:	str	r5, [r4, #20]
   1bed4:	str	r3, [sp, #16]
   1bed8:	ldr	r3, [sp, #76]	; 0x4c
   1bedc:	str	r8, [sp, #12]
   1bee0:	str	r3, [sp, #4]
   1bee4:	ldr	r3, [sp, #72]	; 0x48
   1bee8:	str	r4, [sp, #8]
   1beec:	str	r3, [sp]
   1bef0:	mov	r2, r7
   1bef4:	mov	r3, sl
   1bef8:	mov	r1, r9
   1befc:	mov	r0, r6
   1bf00:	bl	1b310 <argp_parse@@Base+0x2f14>
   1bf04:	b	1bc5c <argp_parse@@Base+0x3860>
   1bf08:	cmp	r8, #0
   1bf0c:	bne	1bf60 <argp_parse@@Base+0x3b64>
   1bf10:	str	fp, [r4, #8]
   1bf14:	ldrb	r0, [r7]
   1bf18:	cmp	r0, #58	; 0x3a
   1bf1c:	movne	r0, #63	; 0x3f
   1bf20:	moveq	r0, #58	; 0x3a
   1bf24:	b	1bb68 <argp_parse@@Base+0x376c>
   1bf28:	cmp	r8, #0
   1bf2c:	beq	1bf48 <argp_parse@@Base+0x3b4c>
   1bf30:	ldr	r1, [pc, #72]	; 1bf80 <argp_parse@@Base+0x3b84>
   1bf34:	ldr	r2, [r9]
   1bf38:	mov	r3, fp
   1bf3c:	ldr	r0, [r1]
   1bf40:	ldr	r1, [pc, #76]	; 1bf94 <argp_parse@@Base+0x3b98>
   1bf44:	bl	112d8 <fprintf@plt>
   1bf48:	str	fp, [r4, #8]
   1bf4c:	ldrb	r0, [r7]
   1bf50:	cmp	r0, #58	; 0x3a
   1bf54:	movne	r0, #63	; 0x3f
   1bf58:	moveq	r0, #58	; 0x3a
   1bf5c:	b	1bc5c <argp_parse@@Base+0x3860>
   1bf60:	ldr	r1, [pc, #24]	; 1bf80 <argp_parse@@Base+0x3b84>
   1bf64:	ldr	r2, [r9]
   1bf68:	mov	r3, fp
   1bf6c:	ldr	r0, [r1]
   1bf70:	ldr	r1, [pc, #28]	; 1bf94 <argp_parse@@Base+0x3b98>
   1bf74:	bl	112d8 <fprintf@plt>
   1bf78:	b	1bf10 <argp_parse@@Base+0x3b14>
   1bf7c:	andeq	sp, r1, r8, asr sp
   1bf80:	ldrdeq	pc, [r2], -r8
   1bf84:	andeq	lr, r1, r0, ror #5
   1bf88:	andeq	lr, r1, ip, asr #5
   1bf8c:	andeq	lr, r1, r8, lsr #6
   1bf90:	ldrdeq	lr, [r1], -ip
   1bf94:	strdeq	lr, [r1], -ip
   1bf98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf9c:	sub	sp, sp, #44	; 0x2c
   1bfa0:	ldr	r7, [pc, #1572]	; 1c5cc <argp_parse@@Base+0x41d0>
   1bfa4:	ldr	r4, [pc, #1572]	; 1c5d0 <argp_parse@@Base+0x41d4>
   1bfa8:	subs	r6, r0, #0
   1bfac:	ldm	r7, {r5, sl}
   1bfb0:	str	r1, [sp, #32]
   1bfb4:	str	r3, [sp, #36]	; 0x24
   1bfb8:	stm	r4, {r5, sl}
   1bfbc:	ble	1c168 <argp_parse@@Base+0x3d6c>
   1bfc0:	mov	r3, #0
   1bfc4:	cmp	r5, #0
   1bfc8:	mov	fp, r2
   1bfcc:	str	r3, [r4, #12]
   1bfd0:	beq	1c224 <argp_parse@@Base+0x3e28>
   1bfd4:	ldr	r3, [r4, #16]
   1bfd8:	cmp	r3, #0
   1bfdc:	bne	1c180 <argp_parse@@Base+0x3d84>
   1bfe0:	mov	r3, #0
   1bfe4:	str	r5, [r4, #32]
   1bfe8:	str	r5, [r4, #28]
   1bfec:	str	r3, [r4, #20]
   1bff0:	ldrb	r2, [fp]
   1bff4:	cmp	r2, #45	; 0x2d
   1bff8:	beq	1c2d4 <argp_parse@@Base+0x3ed8>
   1bffc:	cmp	r2, #43	; 0x2b
   1c000:	streq	r3, [r4, #24]
   1c004:	addeq	fp, fp, #1
   1c008:	moveq	r5, r3
   1c00c:	beq	1c028 <argp_parse@@Base+0x3c2c>
   1c010:	ldr	r2, [sp, #88]	; 0x58
   1c014:	cmp	r2, #0
   1c018:	movne	r5, r3
   1c01c:	beq	1c2b4 <argp_parse@@Base+0x3eb8>
   1c020:	mov	r3, #0
   1c024:	str	r3, [r4, #24]
   1c028:	mov	r3, #1
   1c02c:	str	r3, [r4, #16]
   1c030:	ldrb	r3, [fp]
   1c034:	cmp	r3, #58	; 0x3a
   1c038:	moveq	sl, #0
   1c03c:	cmp	r5, #0
   1c040:	beq	1c0c4 <argp_parse@@Base+0x3cc8>
   1c044:	ldrb	r3, [r5]
   1c048:	cmp	r3, #0
   1c04c:	beq	1c0c4 <argp_parse@@Base+0x3cc8>
   1c050:	add	r9, r5, #1
   1c054:	str	r9, [r4, #20]
   1c058:	ldrb	r8, [r5]
   1c05c:	mov	r0, fp
   1c060:	mov	r1, r8
   1c064:	bl	112cc <strchr@plt>
   1c068:	ldrb	r3, [r5, #1]
   1c06c:	str	r8, [sp, #28]
   1c070:	cmp	r3, #0
   1c074:	ldreq	r3, [r4]
   1c078:	addeq	r3, r3, #1
   1c07c:	streq	r3, [r4]
   1c080:	sub	r3, r8, #58	; 0x3a
   1c084:	cmp	r0, #0
   1c088:	cmpne	r3, #1
   1c08c:	bls	1c1e8 <argp_parse@@Base+0x3dec>
   1c090:	ldrb	r3, [r0]
   1c094:	cmp	r3, #87	; 0x57
   1c098:	ldrb	r3, [r0, #1]
   1c09c:	beq	1c35c <argp_parse@@Base+0x3f60>
   1c0a0:	cmp	r3, #58	; 0x3a
   1c0a4:	beq	1c400 <argp_parse@@Base+0x4004>
   1c0a8:	ldr	r3, [r4, #8]
   1c0ac:	mov	r0, r8
   1c0b0:	ldr	r9, [r4, #12]
   1c0b4:	ldr	r5, [r4]
   1c0b8:	str	r3, [sp, #28]
   1c0bc:	mov	r2, r3
   1c0c0:	b	1c1d0 <argp_parse@@Base+0x3dd4>
   1c0c4:	ldr	r5, [r4]
   1c0c8:	ldr	r8, [r4, #32]
   1c0cc:	ldr	r3, [r4, #28]
   1c0d0:	cmp	r8, r5
   1c0d4:	ldr	r2, [r4, #24]
   1c0d8:	movgt	r8, r5
   1c0dc:	strgt	r5, [r4, #32]
   1c0e0:	cmp	r5, r3
   1c0e4:	movlt	r3, r5
   1c0e8:	strlt	r5, [r4, #28]
   1c0ec:	cmp	r2, #1
   1c0f0:	beq	1c234 <argp_parse@@Base+0x3e38>
   1c0f4:	cmp	r6, r5
   1c0f8:	beq	1c29c <argp_parse@@Base+0x3ea0>
   1c0fc:	ldr	r3, [sp, #32]
   1c100:	ldr	r9, [r3, r5, lsl #2]
   1c104:	ldr	r3, [pc, #1224]	; 1c5d4 <argp_parse@@Base+0x41d8>
   1c108:	mov	r0, r9
   1c10c:	mov	r1, r3
   1c110:	str	r3, [sp, #28]
   1c114:	bl	11104 <strcmp@plt>
   1c118:	ldr	r3, [sp, #28]
   1c11c:	cmp	r0, #0
   1c120:	bne	1c19c <argp_parse@@Base+0x3da0>
   1c124:	add	r3, r5, #1
   1c128:	ldr	r5, [r4, #28]
   1c12c:	str	r3, [r4]
   1c130:	cmp	r5, r8
   1c134:	beq	1c350 <argp_parse@@Base+0x3f54>
   1c138:	cmp	r3, r8
   1c13c:	beq	1c150 <argp_parse@@Base+0x3d54>
   1c140:	ldr	r0, [sp, #32]
   1c144:	ldr	r1, [pc, #1156]	; 1c5d0 <argp_parse@@Base+0x41d4>
   1c148:	bl	1b254 <argp_parse@@Base+0x2e58>
   1c14c:	ldr	r5, [r4, #28]
   1c150:	mov	r8, r6
   1c154:	cmp	r8, r5
   1c158:	str	r6, [r4, #32]
   1c15c:	str	r6, [r4]
   1c160:	moveq	r5, r6
   1c164:	bne	1c2ac <argp_parse@@Base+0x3eb0>
   1c168:	ldr	r3, [r4, #8]
   1c16c:	ldr	r9, [r4, #12]
   1c170:	str	r3, [sp, #28]
   1c174:	mvn	r0, #0
   1c178:	mov	r2, r3
   1c17c:	b	1c1d0 <argp_parse@@Base+0x3dd4>
   1c180:	ldrb	r3, [r2]
   1c184:	ldr	r5, [r4, #20]
   1c188:	sub	r2, r3, #43	; 0x2b
   1c18c:	tst	r2, #253	; 0xfd
   1c190:	ldrbeq	r3, [fp, #1]
   1c194:	addeq	fp, fp, #1
   1c198:	b	1c034 <argp_parse@@Base+0x3c38>
   1c19c:	ldrb	r2, [r9]
   1c1a0:	cmp	r2, #45	; 0x2d
   1c1a4:	beq	1c300 <argp_parse@@Base+0x3f04>
   1c1a8:	ldr	r3, [r4, #24]
   1c1ac:	cmp	r3, #0
   1c1b0:	beq	1c168 <argp_parse@@Base+0x3d6c>
   1c1b4:	ldr	r3, [r4, #8]
   1c1b8:	mov	r0, #1
   1c1bc:	mov	r2, r3
   1c1c0:	add	r5, r5, #1
   1c1c4:	str	r5, [r4]
   1c1c8:	str	r9, [r4, #12]
   1c1cc:	str	r3, [sp, #28]
   1c1d0:	ldr	r3, [pc, #1024]	; 1c5d8 <argp_parse@@Base+0x41dc>
   1c1d4:	str	r5, [r7]
   1c1d8:	str	r2, [r7, #8]
   1c1dc:	str	r9, [r3]
   1c1e0:	add	sp, sp, #44	; 0x2c
   1c1e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1e8:	cmp	sl, #0
   1c1ec:	beq	1c20c <argp_parse@@Base+0x3e10>
   1c1f0:	ldr	r1, [pc, #996]	; 1c5dc <argp_parse@@Base+0x41e0>
   1c1f4:	ldr	r3, [sp, #32]
   1c1f8:	ldr	r0, [r1]
   1c1fc:	ldr	r2, [r3]
   1c200:	ldr	r1, [pc, #984]	; 1c5e0 <argp_parse@@Base+0x41e4>
   1c204:	mov	r3, r8
   1c208:	bl	112d8 <fprintf@plt>
   1c20c:	str	r8, [r4, #8]
   1c210:	ldr	r5, [r4]
   1c214:	ldr	r9, [r4, #12]
   1c218:	mov	r0, #63	; 0x3f
   1c21c:	ldr	r2, [sp, #28]
   1c220:	b	1c1d0 <argp_parse@@Base+0x3dd4>
   1c224:	mov	r3, #1
   1c228:	mov	r5, r3
   1c22c:	str	r3, [r4]
   1c230:	b	1bfe0 <argp_parse@@Base+0x3be4>
   1c234:	cmp	r8, r3
   1c238:	beq	1c3f0 <argp_parse@@Base+0x3ff4>
   1c23c:	cmp	r5, r8
   1c240:	beq	1c254 <argp_parse@@Base+0x3e58>
   1c244:	ldr	r1, [pc, #900]	; 1c5d0 <argp_parse@@Base+0x41d4>
   1c248:	ldr	r0, [sp, #32]
   1c24c:	bl	1b254 <argp_parse@@Base+0x2e58>
   1c250:	ldr	r8, [r4]
   1c254:	cmp	r6, r8
   1c258:	ldrgt	r3, [sp, #32]
   1c25c:	addgt	r2, r3, r8, lsl #2
   1c260:	bgt	1c278 <argp_parse@@Base+0x3e7c>
   1c264:	b	1c294 <argp_parse@@Base+0x3e98>
   1c268:	add	r8, r8, #1
   1c26c:	cmp	r6, r8
   1c270:	str	r8, [r4]
   1c274:	beq	1c2e8 <argp_parse@@Base+0x3eec>
   1c278:	ldr	r3, [r2], #4
   1c27c:	ldrb	r1, [r3]
   1c280:	cmp	r1, #45	; 0x2d
   1c284:	bne	1c268 <argp_parse@@Base+0x3e6c>
   1c288:	ldrb	r3, [r3, #1]
   1c28c:	cmp	r3, #0
   1c290:	beq	1c268 <argp_parse@@Base+0x3e6c>
   1c294:	mov	r5, r8
   1c298:	b	1c2ec <argp_parse@@Base+0x3ef0>
   1c29c:	ldr	r5, [r4, #28]
   1c2a0:	cmp	r8, r5
   1c2a4:	moveq	r5, r6
   1c2a8:	beq	1c168 <argp_parse@@Base+0x3d6c>
   1c2ac:	str	r5, [r4]
   1c2b0:	b	1c168 <argp_parse@@Base+0x3d6c>
   1c2b4:	ldr	r0, [pc, #808]	; 1c5e4 <argp_parse@@Base+0x41e8>
   1c2b8:	bl	11230 <getenv@plt>
   1c2bc:	ldr	r5, [r4, #20]
   1c2c0:	cmp	r0, #0
   1c2c4:	bne	1c020 <argp_parse@@Base+0x3c24>
   1c2c8:	mov	r3, #1
   1c2cc:	str	r3, [r4, #24]
   1c2d0:	b	1c028 <argp_parse@@Base+0x3c2c>
   1c2d4:	mov	r2, #2
   1c2d8:	add	fp, fp, #1
   1c2dc:	mov	r5, r3
   1c2e0:	str	r2, [r4, #24]
   1c2e4:	b	1c028 <argp_parse@@Base+0x3c2c>
   1c2e8:	mov	r5, r6
   1c2ec:	cmp	r6, r5
   1c2f0:	mov	r8, r5
   1c2f4:	str	r5, [r4, #32]
   1c2f8:	bne	1c0fc <argp_parse@@Base+0x3d00>
   1c2fc:	b	1c29c <argp_parse@@Base+0x3ea0>
   1c300:	ldrb	r1, [r9, #1]
   1c304:	cmp	r1, #0
   1c308:	beq	1c1a8 <argp_parse@@Base+0x3dac>
   1c30c:	ldr	r2, [sp, #36]	; 0x24
   1c310:	cmp	r2, #0
   1c314:	beq	1c348 <argp_parse@@Base+0x3f4c>
   1c318:	cmp	r1, #45	; 0x2d
   1c31c:	beq	1c4fc <argp_parse@@Base+0x4100>
   1c320:	ldr	r3, [sp, #84]	; 0x54
   1c324:	cmp	r3, #0
   1c328:	beq	1c348 <argp_parse@@Base+0x3f4c>
   1c32c:	ldrb	r3, [r9, #2]
   1c330:	cmp	r3, #0
   1c334:	bne	1c444 <argp_parse@@Base+0x4048>
   1c338:	mov	r0, fp
   1c33c:	bl	112cc <strchr@plt>
   1c340:	cmp	r0, #0
   1c344:	beq	1c444 <argp_parse@@Base+0x4048>
   1c348:	add	r5, r9, #1
   1c34c:	b	1c050 <argp_parse@@Base+0x3c54>
   1c350:	mov	r5, r3
   1c354:	str	r3, [r4, #28]
   1c358:	b	1c150 <argp_parse@@Base+0x3d54>
   1c35c:	ldr	r1, [sp, #36]	; 0x24
   1c360:	sub	r2, r3, #59	; 0x3b
   1c364:	cmp	r1, #0
   1c368:	clz	r2, r2
   1c36c:	lsr	r2, r2, #5
   1c370:	moveq	r2, #0
   1c374:	cmp	r2, #0
   1c378:	beq	1c0a0 <argp_parse@@Base+0x3ca4>
   1c37c:	ldrb	r3, [r5, #1]
   1c380:	cmp	r3, #0
   1c384:	bne	1c39c <argp_parse@@Base+0x3fa0>
   1c388:	ldr	r3, [r4]
   1c38c:	cmp	r6, r3
   1c390:	beq	1c564 <argp_parse@@Base+0x4168>
   1c394:	ldr	r2, [sp, #32]
   1c398:	ldr	r9, [r2, r3, lsl #2]
   1c39c:	ldr	r3, [sp, #80]	; 0x50
   1c3a0:	ldr	r1, [sp, #32]
   1c3a4:	str	r3, [sp]
   1c3a8:	ldr	r3, [sp, #36]	; 0x24
   1c3ac:	ldr	lr, [pc, #564]	; 1c5e8 <argp_parse@@Base+0x41ec>
   1c3b0:	mov	r2, fp
   1c3b4:	mov	r0, r6
   1c3b8:	mov	ip, #0
   1c3bc:	str	sl, [sp, #12]
   1c3c0:	str	r4, [sp, #8]
   1c3c4:	str	lr, [sp, #16]
   1c3c8:	str	ip, [sp, #4]
   1c3cc:	str	r9, [r4, #20]
   1c3d0:	str	ip, [r4, #12]
   1c3d4:	bl	1b310 <argp_parse@@Base+0x2f14>
   1c3d8:	ldr	r3, [r4, #8]
   1c3dc:	ldr	r5, [r4]
   1c3e0:	ldr	r9, [r4, #12]
   1c3e4:	str	r3, [sp, #28]
   1c3e8:	mov	r2, r3
   1c3ec:	b	1c1d0 <argp_parse@@Base+0x3dd4>
   1c3f0:	cmp	r5, r8
   1c3f4:	movne	r8, r5
   1c3f8:	strne	r5, [r4, #28]
   1c3fc:	b	1c254 <argp_parse@@Base+0x3e58>
   1c400:	ldrb	r3, [r0, #2]
   1c404:	cmp	r3, #58	; 0x3a
   1c408:	ldrb	r3, [r5, #1]
   1c40c:	beq	1c4c4 <argp_parse@@Base+0x40c8>
   1c410:	cmp	r3, #0
   1c414:	ldr	r5, [r4]
   1c418:	beq	1c498 <argp_parse@@Base+0x409c>
   1c41c:	ldr	r3, [r4, #8]
   1c420:	mov	r0, r8
   1c424:	add	r5, r5, #1
   1c428:	str	r9, [r4, #12]
   1c42c:	str	r5, [r4]
   1c430:	str	r3, [sp, #28]
   1c434:	mov	r3, #0
   1c438:	str	r3, [r4, #20]
   1c43c:	ldr	r2, [sp, #28]
   1c440:	b	1c1d0 <argp_parse@@Base+0x3dd4>
   1c444:	ldr	r2, [sp, #84]	; 0x54
   1c448:	ldr	r3, [pc, #412]	; 1c5ec <argp_parse@@Base+0x41f0>
   1c44c:	str	r2, [sp, #4]
   1c450:	ldr	r2, [sp, #80]	; 0x50
   1c454:	str	r3, [sp, #16]
   1c458:	str	r2, [sp]
   1c45c:	add	r9, r9, #1
   1c460:	str	sl, [sp, #12]
   1c464:	str	r4, [sp, #8]
   1c468:	ldr	r3, [sp, #36]	; 0x24
   1c46c:	mov	r2, fp
   1c470:	ldr	r1, [sp, #32]
   1c474:	mov	r0, r6
   1c478:	str	r9, [r4, #20]
   1c47c:	bl	1b310 <argp_parse@@Base+0x2f14>
   1c480:	cmn	r0, #1
   1c484:	bne	1c3d8 <argp_parse@@Base+0x3fdc>
   1c488:	ldr	r3, [r4]
   1c48c:	ldr	r2, [sp, #32]
   1c490:	ldr	r9, [r2, r3, lsl #2]
   1c494:	b	1c348 <argp_parse@@Base+0x3f4c>
   1c498:	cmp	r6, r5
   1c49c:	beq	1c534 <argp_parse@@Base+0x4138>
   1c4a0:	ldr	r3, [r4, #8]
   1c4a4:	mov	r0, r8
   1c4a8:	str	r3, [sp, #28]
   1c4ac:	ldr	r3, [sp, #32]
   1c4b0:	ldr	r9, [r3, r5, lsl #2]
   1c4b4:	add	r5, r5, #1
   1c4b8:	str	r9, [r4, #12]
   1c4bc:	str	r5, [r4]
   1c4c0:	b	1c434 <argp_parse@@Base+0x4038>
   1c4c4:	cmp	r3, #0
   1c4c8:	moveq	r9, r3
   1c4cc:	ldrne	r5, [r4]
   1c4d0:	mov	r3, #0
   1c4d4:	str	r3, [r4, #20]
   1c4d8:	ldr	r3, [r4, #8]
   1c4dc:	addne	r5, r5, #1
   1c4e0:	ldreq	r5, [r4]
   1c4e4:	strne	r5, [r4]
   1c4e8:	str	r9, [r4, #12]
   1c4ec:	mov	r0, r8
   1c4f0:	str	r3, [sp, #28]
   1c4f4:	mov	r2, r3
   1c4f8:	b	1c1d0 <argp_parse@@Base+0x3dd4>
   1c4fc:	str	r3, [sp, #16]
   1c500:	ldr	r3, [sp, #84]	; 0x54
   1c504:	add	r9, r9, #2
   1c508:	str	r3, [sp, #4]
   1c50c:	ldr	r3, [sp, #80]	; 0x50
   1c510:	str	sl, [sp, #12]
   1c514:	str	r3, [sp]
   1c518:	str	r4, [sp, #8]
   1c51c:	mov	r3, r2
   1c520:	ldr	r1, [sp, #32]
   1c524:	mov	r2, fp
   1c528:	mov	r0, r6
   1c52c:	str	r9, [r4, #20]
   1c530:	b	1c3d4 <argp_parse@@Base+0x3fd8>
   1c534:	cmp	sl, #0
   1c538:	bne	1c5ac <argp_parse@@Base+0x41b0>
   1c53c:	str	r8, [r4, #8]
   1c540:	ldrb	r8, [fp]
   1c544:	cmp	r8, #58	; 0x3a
   1c548:	moveq	r0, r8
   1c54c:	ldreq	r5, [r4]
   1c550:	ldreq	r9, [r4, #12]
   1c554:	ldrne	r5, [r4]
   1c558:	ldrne	r9, [r4, #12]
   1c55c:	movne	r0, #63	; 0x3f
   1c560:	b	1c434 <argp_parse@@Base+0x4038>
   1c564:	cmp	sl, #0
   1c568:	beq	1c588 <argp_parse@@Base+0x418c>
   1c56c:	ldr	r1, [pc, #104]	; 1c5dc <argp_parse@@Base+0x41e0>
   1c570:	ldr	r3, [sp, #32]
   1c574:	ldr	r0, [r1]
   1c578:	ldr	r2, [r3]
   1c57c:	ldr	r1, [pc, #108]	; 1c5f0 <argp_parse@@Base+0x41f4>
   1c580:	mov	r3, r8
   1c584:	bl	112d8 <fprintf@plt>
   1c588:	str	r8, [r4, #8]
   1c58c:	ldrb	r8, [fp]
   1c590:	ldr	r5, [r4]
   1c594:	ldr	r9, [r4, #12]
   1c598:	cmp	r8, #58	; 0x3a
   1c59c:	movne	r0, #63	; 0x3f
   1c5a0:	moveq	r0, #58	; 0x3a
   1c5a4:	ldr	r2, [sp, #28]
   1c5a8:	b	1c1d0 <argp_parse@@Base+0x3dd4>
   1c5ac:	ldr	r3, [sp, #32]
   1c5b0:	ldr	r1, [pc, #36]	; 1c5dc <argp_parse@@Base+0x41e0>
   1c5b4:	ldr	r2, [r3]
   1c5b8:	ldr	r0, [r1]
   1c5bc:	mov	r3, r8
   1c5c0:	ldr	r1, [pc, #40]	; 1c5f0 <argp_parse@@Base+0x41f4>
   1c5c4:	bl	112d8 <fprintf@plt>
   1c5c8:	b	1c53c <argp_parse@@Base+0x4140>
   1c5cc:	andeq	pc, r2, r4, asr #7
   1c5d0:	andeq	pc, r2, r0, lsr #8
   1c5d4:	andeq	sp, r1, r8, asr sp
   1c5d8:	andeq	pc, r2, r0, ror #8
   1c5dc:	ldrdeq	pc, [r2], -r8
   1c5e0:	andeq	lr, r1, r0, ror #5
   1c5e4:	andeq	lr, r1, ip, asr #5
   1c5e8:	andeq	lr, r1, r8, lsr #6
   1c5ec:	ldrdeq	lr, [r1], -ip
   1c5f0:	strdeq	lr, [r1], -ip
   1c5f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5f8:	sub	sp, sp, #20
   1c5fc:	ldr	r7, [pc, #1052]	; 1ca20 <argp_parse@@Base+0x4624>
   1c600:	ldr	r4, [pc, #1052]	; 1ca24 <argp_parse@@Base+0x4628>
   1c604:	subs	r6, r0, #0
   1c608:	ldr	r5, [r7]
   1c60c:	ldr	r3, [r7, #4]
   1c610:	str	r1, [sp, #4]
   1c614:	str	r5, [r4]
   1c618:	str	r3, [r4, #4]
   1c61c:	ble	1c8f4 <argp_parse@@Base+0x44f8>
   1c620:	mov	sl, r2
   1c624:	cmp	r5, #0
   1c628:	mov	r2, #0
   1c62c:	str	r2, [r4, #12]
   1c630:	beq	1c6dc <argp_parse@@Base+0x42e0>
   1c634:	ldr	r2, [r4, #16]
   1c638:	cmp	r2, #0
   1c63c:	beq	1c6e8 <argp_parse@@Base+0x42ec>
   1c640:	ldrb	r2, [sl]
   1c644:	sub	r1, r2, #43	; 0x2b
   1c648:	tst	r1, #253	; 0xfd
   1c64c:	ldrbeq	r2, [sl, #1]
   1c650:	addeq	sl, sl, #1
   1c654:	cmp	r2, #58	; 0x3a
   1c658:	ldr	r2, [r4, #20]
   1c65c:	moveq	r3, #0
   1c660:	cmp	r2, #0
   1c664:	beq	1c73c <argp_parse@@Base+0x4340>
   1c668:	ldrb	r1, [r2]
   1c66c:	cmp	r1, #0
   1c670:	beq	1c73c <argp_parse@@Base+0x4340>
   1c674:	add	r9, r2, #1
   1c678:	str	r9, [r4, #20]
   1c67c:	ldrb	r8, [r2]
   1c680:	mov	r0, sl
   1c684:	str	r3, [sp, #12]
   1c688:	mov	r1, r8
   1c68c:	str	r2, [sp, #8]
   1c690:	bl	112cc <strchr@plt>
   1c694:	ldr	r2, [sp, #8]
   1c698:	mov	fp, r8
   1c69c:	ldr	r3, [sp, #12]
   1c6a0:	ldrb	r1, [r2, #1]
   1c6a4:	cmp	r1, #0
   1c6a8:	addeq	r5, r5, #1
   1c6ac:	sub	r1, r8, #58	; 0x3a
   1c6b0:	streq	r5, [r4]
   1c6b4:	cmp	r0, #0
   1c6b8:	cmpne	r1, #1
   1c6bc:	bls	1c828 <argp_parse@@Base+0x442c>
   1c6c0:	ldrb	r1, [r0, #1]
   1c6c4:	cmp	r1, #58	; 0x3a
   1c6c8:	beq	1c934 <argp_parse@@Base+0x4538>
   1c6cc:	mov	r0, r8
   1c6d0:	ldr	r9, [r4, #12]
   1c6d4:	ldr	fp, [r4, #8]
   1c6d8:	b	1c810 <argp_parse@@Base+0x4414>
   1c6dc:	mov	r2, #1
   1c6e0:	mov	r5, r2
   1c6e4:	str	r2, [r4]
   1c6e8:	mov	r2, #0
   1c6ec:	str	r5, [r4, #32]
   1c6f0:	str	r5, [r4, #28]
   1c6f4:	str	r2, [r4, #20]
   1c6f8:	ldrb	r1, [sl]
   1c6fc:	cmp	r1, #45	; 0x2d
   1c700:	moveq	r1, #2
   1c704:	addeq	sl, sl, #1
   1c708:	streq	r1, [r4, #24]
   1c70c:	beq	1c728 <argp_parse@@Base+0x432c>
   1c710:	cmp	r1, #43	; 0x2b
   1c714:	addeq	sl, sl, #1
   1c718:	moveq	r1, r2
   1c71c:	movne	r1, r2
   1c720:	streq	r2, [r4, #24]
   1c724:	strne	r2, [r4, #24]
   1c728:	mov	r2, #1
   1c72c:	str	r2, [r4, #16]
   1c730:	ldrb	r2, [sl]
   1c734:	cmp	r2, #58	; 0x3a
   1c738:	beq	1c860 <argp_parse@@Base+0x4464>
   1c73c:	add	r1, r4, #24
   1c740:	ldm	r1, {r1, r2, r8}
   1c744:	cmp	r8, r5
   1c748:	movgt	r8, r5
   1c74c:	strgt	r5, [r4, #32]
   1c750:	cmp	r5, r2
   1c754:	movlt	r2, r5
   1c758:	strlt	r5, [r4, #28]
   1c75c:	cmp	r1, #1
   1c760:	beq	1c874 <argp_parse@@Base+0x4478>
   1c764:	cmp	r6, r5
   1c768:	str	r3, [sp, #8]
   1c76c:	beq	1c8e4 <argp_parse@@Base+0x44e8>
   1c770:	ldr	fp, [sp, #4]
   1c774:	ldr	r1, [pc, #684]	; 1ca28 <argp_parse@@Base+0x462c>
   1c778:	ldr	r9, [fp, r5, lsl #2]
   1c77c:	mov	r0, r9
   1c780:	bl	11104 <strcmp@plt>
   1c784:	ldr	r3, [sp, #8]
   1c788:	cmp	r0, #0
   1c78c:	bne	1c7e4 <argp_parse@@Base+0x43e8>
   1c790:	add	r3, r5, #1
   1c794:	ldr	r5, [r4, #28]
   1c798:	str	r3, [r4]
   1c79c:	cmp	r5, r8
   1c7a0:	beq	1c928 <argp_parse@@Base+0x452c>
   1c7a4:	cmp	r3, r8
   1c7a8:	beq	1c7bc <argp_parse@@Base+0x43c0>
   1c7ac:	mov	r0, fp
   1c7b0:	ldr	r1, [pc, #620]	; 1ca24 <argp_parse@@Base+0x4628>
   1c7b4:	bl	1b254 <argp_parse@@Base+0x2e58>
   1c7b8:	ldr	r5, [r4, #28]
   1c7bc:	mov	r8, r6
   1c7c0:	cmp	r8, r5
   1c7c4:	str	r6, [r4, #32]
   1c7c8:	str	r6, [r4]
   1c7cc:	beq	1c8f0 <argp_parse@@Base+0x44f4>
   1c7d0:	str	r5, [r4]
   1c7d4:	ldr	r9, [r4, #12]
   1c7d8:	ldr	fp, [r4, #8]
   1c7dc:	mvn	r0, #0
   1c7e0:	b	1c810 <argp_parse@@Base+0x4414>
   1c7e4:	ldrb	r2, [r9]
   1c7e8:	cmp	r2, #45	; 0x2d
   1c7ec:	beq	1c914 <argp_parse@@Base+0x4518>
   1c7f0:	ldr	r3, [r4, #24]
   1c7f4:	cmp	r3, #0
   1c7f8:	beq	1c8f4 <argp_parse@@Base+0x44f8>
   1c7fc:	ldr	fp, [r4, #8]
   1c800:	mov	r0, #1
   1c804:	add	r5, r5, #1
   1c808:	str	r5, [r4]
   1c80c:	str	r9, [r4, #12]
   1c810:	ldr	r3, [pc, #532]	; 1ca2c <argp_parse@@Base+0x4630>
   1c814:	str	r5, [r7]
   1c818:	str	fp, [r7, #8]
   1c81c:	str	r9, [r3]
   1c820:	add	sp, sp, #20
   1c824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c828:	cmp	r3, #0
   1c82c:	beq	1c850 <argp_parse@@Base+0x4454>
   1c830:	ldr	r3, [sp, #4]
   1c834:	ldr	r1, [pc, #500]	; 1ca30 <argp_parse@@Base+0x4634>
   1c838:	ldr	r2, [r3]
   1c83c:	ldr	r0, [r1]
   1c840:	mov	r3, r8
   1c844:	ldr	r1, [pc, #488]	; 1ca34 <argp_parse@@Base+0x4638>
   1c848:	bl	112d8 <fprintf@plt>
   1c84c:	ldr	r5, [r4]
   1c850:	str	r8, [r4, #8]
   1c854:	ldr	r9, [r4, #12]
   1c858:	mov	r0, #63	; 0x3f
   1c85c:	b	1c810 <argp_parse@@Base+0x4414>
   1c860:	cmp	r1, #1
   1c864:	mov	r8, r5
   1c868:	mov	r2, r5
   1c86c:	mov	r3, #0
   1c870:	bne	1c764 <argp_parse@@Base+0x4368>
   1c874:	cmp	r2, r8
   1c878:	beq	1c96c <argp_parse@@Base+0x4570>
   1c87c:	cmp	r5, r8
   1c880:	beq	1c89c <argp_parse@@Base+0x44a0>
   1c884:	ldr	r1, [pc, #408]	; 1ca24 <argp_parse@@Base+0x4628>
   1c888:	ldr	r0, [sp, #4]
   1c88c:	str	r3, [sp, #8]
   1c890:	bl	1b254 <argp_parse@@Base+0x2e58>
   1c894:	ldr	r8, [r4]
   1c898:	ldr	r3, [sp, #8]
   1c89c:	cmp	r6, r8
   1c8a0:	ldrgt	r2, [sp, #4]
   1c8a4:	addgt	r1, r2, r8, lsl #2
   1c8a8:	bgt	1c8c0 <argp_parse@@Base+0x44c4>
   1c8ac:	b	1c8dc <argp_parse@@Base+0x44e0>
   1c8b0:	add	r8, r8, #1
   1c8b4:	cmp	r6, r8
   1c8b8:	str	r8, [r4]
   1c8bc:	beq	1c904 <argp_parse@@Base+0x4508>
   1c8c0:	ldr	r2, [r1], #4
   1c8c4:	ldrb	r0, [r2]
   1c8c8:	cmp	r0, #45	; 0x2d
   1c8cc:	bne	1c8b0 <argp_parse@@Base+0x44b4>
   1c8d0:	ldrb	r2, [r2, #1]
   1c8d4:	cmp	r2, #0
   1c8d8:	beq	1c8b0 <argp_parse@@Base+0x44b4>
   1c8dc:	mov	r5, r8
   1c8e0:	b	1c908 <argp_parse@@Base+0x450c>
   1c8e4:	ldr	r5, [r4, #28]
   1c8e8:	cmp	r8, r5
   1c8ec:	bne	1c7d0 <argp_parse@@Base+0x43d4>
   1c8f0:	mov	r5, r6
   1c8f4:	ldr	r9, [r4, #12]
   1c8f8:	ldr	fp, [r4, #8]
   1c8fc:	mvn	r0, #0
   1c900:	b	1c810 <argp_parse@@Base+0x4414>
   1c904:	mov	r5, r6
   1c908:	mov	r8, r5
   1c90c:	str	r5, [r4, #32]
   1c910:	b	1c764 <argp_parse@@Base+0x4368>
   1c914:	ldrb	r2, [r9, #1]
   1c918:	cmp	r2, #0
   1c91c:	beq	1c7f0 <argp_parse@@Base+0x43f4>
   1c920:	add	r2, r9, #1
   1c924:	b	1c674 <argp_parse@@Base+0x4278>
   1c928:	mov	r5, r3
   1c92c:	str	r3, [r4, #28]
   1c930:	b	1c7bc <argp_parse@@Base+0x43c0>
   1c934:	ldrb	r1, [r0, #2]
   1c938:	cmp	r1, #58	; 0x3a
   1c93c:	beq	1c9a8 <argp_parse@@Base+0x45ac>
   1c940:	ldrb	r2, [r2, #1]
   1c944:	cmp	r2, #0
   1c948:	beq	1c97c <argp_parse@@Base+0x4580>
   1c94c:	ldr	fp, [r4, #8]
   1c950:	mov	r0, r8
   1c954:	add	r5, r5, #1
   1c958:	str	r5, [r4]
   1c95c:	str	r9, [r4, #12]
   1c960:	mov	r3, #0
   1c964:	str	r3, [r4, #20]
   1c968:	b	1c810 <argp_parse@@Base+0x4414>
   1c96c:	cmp	r5, r8
   1c970:	movne	r8, r5
   1c974:	strne	r5, [r4, #28]
   1c978:	b	1c89c <argp_parse@@Base+0x44a0>
   1c97c:	cmp	r6, r5
   1c980:	beq	1c9d4 <argp_parse@@Base+0x45d8>
   1c984:	ldr	r2, [sp, #4]
   1c988:	add	r3, r5, #1
   1c98c:	ldr	fp, [r4, #8]
   1c990:	ldr	r9, [r2, r5, lsl #2]
   1c994:	mov	r0, r8
   1c998:	mov	r5, r3
   1c99c:	str	r9, [r4, #12]
   1c9a0:	str	r3, [r4]
   1c9a4:	b	1c960 <argp_parse@@Base+0x4564>
   1c9a8:	ldrb	r3, [r2, #1]
   1c9ac:	mov	r0, r8
   1c9b0:	ldr	fp, [r4, #8]
   1c9b4:	cmp	r3, #0
   1c9b8:	moveq	r9, r3
   1c9bc:	addne	r5, r5, #1
   1c9c0:	mov	r3, #0
   1c9c4:	strne	r5, [r4]
   1c9c8:	str	r9, [r4, #12]
   1c9cc:	str	r3, [r4, #20]
   1c9d0:	b	1c810 <argp_parse@@Base+0x4414>
   1c9d4:	cmp	r3, #0
   1c9d8:	beq	1c9fc <argp_parse@@Base+0x4600>
   1c9dc:	ldr	r3, [sp, #4]
   1c9e0:	ldr	r1, [pc, #72]	; 1ca30 <argp_parse@@Base+0x4634>
   1c9e4:	ldr	r2, [r3]
   1c9e8:	ldr	r0, [r1]
   1c9ec:	mov	r3, r8
   1c9f0:	ldr	r1, [pc, #64]	; 1ca38 <argp_parse@@Base+0x463c>
   1c9f4:	bl	112d8 <fprintf@plt>
   1c9f8:	ldr	r6, [r4]
   1c9fc:	str	r8, [r4, #8]
   1ca00:	ldrb	r8, [sl]
   1ca04:	mov	r5, r6
   1ca08:	cmp	r8, #58	; 0x3a
   1ca0c:	moveq	r0, r8
   1ca10:	ldreq	r9, [r4, #12]
   1ca14:	ldrne	r9, [r4, #12]
   1ca18:	movne	r0, #63	; 0x3f
   1ca1c:	b	1c960 <argp_parse@@Base+0x4564>
   1ca20:	andeq	pc, r2, r4, asr #7
   1ca24:	andeq	pc, r2, r0, lsr #8
   1ca28:	andeq	sp, r1, r8, asr sp
   1ca2c:	andeq	pc, r2, r0, ror #8
   1ca30:	ldrdeq	pc, [r2], -r8
   1ca34:	andeq	lr, r1, r0, ror #5
   1ca38:	strdeq	lr, [r1], -ip
   1ca3c:	push	{r4, r5, r6, lr}
   1ca40:	subs	r4, r2, #0
   1ca44:	mov	r6, r0
   1ca48:	mov	r5, r1
   1ca4c:	beq	1ca78 <argp_parse@@Base+0x467c>
   1ca50:	mov	r1, r4
   1ca54:	mvn	r0, #0
   1ca58:	bl	1ca88 <argp_parse@@Base+0x468c>
   1ca5c:	cmp	r0, r5
   1ca60:	bcs	1ca78 <argp_parse@@Base+0x467c>
   1ca64:	bl	112e4 <__errno_location@plt>
   1ca68:	mov	r3, #12
   1ca6c:	str	r3, [r0]
   1ca70:	mov	r0, #0
   1ca74:	pop	{r4, r5, r6, pc}
   1ca78:	mul	r1, r5, r4
   1ca7c:	mov	r0, r6
   1ca80:	pop	{r4, r5, r6, lr}
   1ca84:	b	1a988 <argp_parse@@Base+0x258c>
   1ca88:	subs	r2, r1, #1
   1ca8c:	bxeq	lr
   1ca90:	bcc	1cc68 <argp_parse@@Base+0x486c>
   1ca94:	cmp	r0, r1
   1ca98:	bls	1cc4c <argp_parse@@Base+0x4850>
   1ca9c:	tst	r1, r2
   1caa0:	beq	1cc58 <argp_parse@@Base+0x485c>
   1caa4:	clz	r3, r0
   1caa8:	clz	r2, r1
   1caac:	sub	r3, r2, r3
   1cab0:	rsbs	r3, r3, #31
   1cab4:	addne	r3, r3, r3, lsl #1
   1cab8:	mov	r2, #0
   1cabc:	addne	pc, pc, r3, lsl #2
   1cac0:	nop			; (mov r0, r0)
   1cac4:	cmp	r0, r1, lsl #31
   1cac8:	adc	r2, r2, r2
   1cacc:	subcs	r0, r0, r1, lsl #31
   1cad0:	cmp	r0, r1, lsl #30
   1cad4:	adc	r2, r2, r2
   1cad8:	subcs	r0, r0, r1, lsl #30
   1cadc:	cmp	r0, r1, lsl #29
   1cae0:	adc	r2, r2, r2
   1cae4:	subcs	r0, r0, r1, lsl #29
   1cae8:	cmp	r0, r1, lsl #28
   1caec:	adc	r2, r2, r2
   1caf0:	subcs	r0, r0, r1, lsl #28
   1caf4:	cmp	r0, r1, lsl #27
   1caf8:	adc	r2, r2, r2
   1cafc:	subcs	r0, r0, r1, lsl #27
   1cb00:	cmp	r0, r1, lsl #26
   1cb04:	adc	r2, r2, r2
   1cb08:	subcs	r0, r0, r1, lsl #26
   1cb0c:	cmp	r0, r1, lsl #25
   1cb10:	adc	r2, r2, r2
   1cb14:	subcs	r0, r0, r1, lsl #25
   1cb18:	cmp	r0, r1, lsl #24
   1cb1c:	adc	r2, r2, r2
   1cb20:	subcs	r0, r0, r1, lsl #24
   1cb24:	cmp	r0, r1, lsl #23
   1cb28:	adc	r2, r2, r2
   1cb2c:	subcs	r0, r0, r1, lsl #23
   1cb30:	cmp	r0, r1, lsl #22
   1cb34:	adc	r2, r2, r2
   1cb38:	subcs	r0, r0, r1, lsl #22
   1cb3c:	cmp	r0, r1, lsl #21
   1cb40:	adc	r2, r2, r2
   1cb44:	subcs	r0, r0, r1, lsl #21
   1cb48:	cmp	r0, r1, lsl #20
   1cb4c:	adc	r2, r2, r2
   1cb50:	subcs	r0, r0, r1, lsl #20
   1cb54:	cmp	r0, r1, lsl #19
   1cb58:	adc	r2, r2, r2
   1cb5c:	subcs	r0, r0, r1, lsl #19
   1cb60:	cmp	r0, r1, lsl #18
   1cb64:	adc	r2, r2, r2
   1cb68:	subcs	r0, r0, r1, lsl #18
   1cb6c:	cmp	r0, r1, lsl #17
   1cb70:	adc	r2, r2, r2
   1cb74:	subcs	r0, r0, r1, lsl #17
   1cb78:	cmp	r0, r1, lsl #16
   1cb7c:	adc	r2, r2, r2
   1cb80:	subcs	r0, r0, r1, lsl #16
   1cb84:	cmp	r0, r1, lsl #15
   1cb88:	adc	r2, r2, r2
   1cb8c:	subcs	r0, r0, r1, lsl #15
   1cb90:	cmp	r0, r1, lsl #14
   1cb94:	adc	r2, r2, r2
   1cb98:	subcs	r0, r0, r1, lsl #14
   1cb9c:	cmp	r0, r1, lsl #13
   1cba0:	adc	r2, r2, r2
   1cba4:	subcs	r0, r0, r1, lsl #13
   1cba8:	cmp	r0, r1, lsl #12
   1cbac:	adc	r2, r2, r2
   1cbb0:	subcs	r0, r0, r1, lsl #12
   1cbb4:	cmp	r0, r1, lsl #11
   1cbb8:	adc	r2, r2, r2
   1cbbc:	subcs	r0, r0, r1, lsl #11
   1cbc0:	cmp	r0, r1, lsl #10
   1cbc4:	adc	r2, r2, r2
   1cbc8:	subcs	r0, r0, r1, lsl #10
   1cbcc:	cmp	r0, r1, lsl #9
   1cbd0:	adc	r2, r2, r2
   1cbd4:	subcs	r0, r0, r1, lsl #9
   1cbd8:	cmp	r0, r1, lsl #8
   1cbdc:	adc	r2, r2, r2
   1cbe0:	subcs	r0, r0, r1, lsl #8
   1cbe4:	cmp	r0, r1, lsl #7
   1cbe8:	adc	r2, r2, r2
   1cbec:	subcs	r0, r0, r1, lsl #7
   1cbf0:	cmp	r0, r1, lsl #6
   1cbf4:	adc	r2, r2, r2
   1cbf8:	subcs	r0, r0, r1, lsl #6
   1cbfc:	cmp	r0, r1, lsl #5
   1cc00:	adc	r2, r2, r2
   1cc04:	subcs	r0, r0, r1, lsl #5
   1cc08:	cmp	r0, r1, lsl #4
   1cc0c:	adc	r2, r2, r2
   1cc10:	subcs	r0, r0, r1, lsl #4
   1cc14:	cmp	r0, r1, lsl #3
   1cc18:	adc	r2, r2, r2
   1cc1c:	subcs	r0, r0, r1, lsl #3
   1cc20:	cmp	r0, r1, lsl #2
   1cc24:	adc	r2, r2, r2
   1cc28:	subcs	r0, r0, r1, lsl #2
   1cc2c:	cmp	r0, r1, lsl #1
   1cc30:	adc	r2, r2, r2
   1cc34:	subcs	r0, r0, r1, lsl #1
   1cc38:	cmp	r0, r1
   1cc3c:	adc	r2, r2, r2
   1cc40:	subcs	r0, r0, r1
   1cc44:	mov	r0, r2
   1cc48:	bx	lr
   1cc4c:	moveq	r0, #1
   1cc50:	movne	r0, #0
   1cc54:	bx	lr
   1cc58:	clz	r2, r1
   1cc5c:	rsb	r2, r2, #31
   1cc60:	lsr	r0, r0, r2
   1cc64:	bx	lr
   1cc68:	cmp	r0, #0
   1cc6c:	mvnne	r0, #0
   1cc70:	b	1ced4 <argp_parse@@Base+0x4ad8>
   1cc74:	cmp	r1, #0
   1cc78:	beq	1cc68 <argp_parse@@Base+0x486c>
   1cc7c:	push	{r0, r1, lr}
   1cc80:	bl	1ca88 <argp_parse@@Base+0x468c>
   1cc84:	pop	{r1, r2, lr}
   1cc88:	mul	r3, r2, r0
   1cc8c:	sub	r1, r1, r3
   1cc90:	bx	lr
   1cc94:	cmp	r1, #0
   1cc98:	beq	1cea4 <argp_parse@@Base+0x4aa8>
   1cc9c:	eor	ip, r0, r1
   1cca0:	rsbmi	r1, r1, #0
   1cca4:	subs	r2, r1, #1
   1cca8:	beq	1ce70 <argp_parse@@Base+0x4a74>
   1ccac:	movs	r3, r0
   1ccb0:	rsbmi	r3, r0, #0
   1ccb4:	cmp	r3, r1
   1ccb8:	bls	1ce7c <argp_parse@@Base+0x4a80>
   1ccbc:	tst	r1, r2
   1ccc0:	beq	1ce8c <argp_parse@@Base+0x4a90>
   1ccc4:	clz	r2, r3
   1ccc8:	clz	r0, r1
   1cccc:	sub	r2, r0, r2
   1ccd0:	rsbs	r2, r2, #31
   1ccd4:	addne	r2, r2, r2, lsl #1
   1ccd8:	mov	r0, #0
   1ccdc:	addne	pc, pc, r2, lsl #2
   1cce0:	nop			; (mov r0, r0)
   1cce4:	cmp	r3, r1, lsl #31
   1cce8:	adc	r0, r0, r0
   1ccec:	subcs	r3, r3, r1, lsl #31
   1ccf0:	cmp	r3, r1, lsl #30
   1ccf4:	adc	r0, r0, r0
   1ccf8:	subcs	r3, r3, r1, lsl #30
   1ccfc:	cmp	r3, r1, lsl #29
   1cd00:	adc	r0, r0, r0
   1cd04:	subcs	r3, r3, r1, lsl #29
   1cd08:	cmp	r3, r1, lsl #28
   1cd0c:	adc	r0, r0, r0
   1cd10:	subcs	r3, r3, r1, lsl #28
   1cd14:	cmp	r3, r1, lsl #27
   1cd18:	adc	r0, r0, r0
   1cd1c:	subcs	r3, r3, r1, lsl #27
   1cd20:	cmp	r3, r1, lsl #26
   1cd24:	adc	r0, r0, r0
   1cd28:	subcs	r3, r3, r1, lsl #26
   1cd2c:	cmp	r3, r1, lsl #25
   1cd30:	adc	r0, r0, r0
   1cd34:	subcs	r3, r3, r1, lsl #25
   1cd38:	cmp	r3, r1, lsl #24
   1cd3c:	adc	r0, r0, r0
   1cd40:	subcs	r3, r3, r1, lsl #24
   1cd44:	cmp	r3, r1, lsl #23
   1cd48:	adc	r0, r0, r0
   1cd4c:	subcs	r3, r3, r1, lsl #23
   1cd50:	cmp	r3, r1, lsl #22
   1cd54:	adc	r0, r0, r0
   1cd58:	subcs	r3, r3, r1, lsl #22
   1cd5c:	cmp	r3, r1, lsl #21
   1cd60:	adc	r0, r0, r0
   1cd64:	subcs	r3, r3, r1, lsl #21
   1cd68:	cmp	r3, r1, lsl #20
   1cd6c:	adc	r0, r0, r0
   1cd70:	subcs	r3, r3, r1, lsl #20
   1cd74:	cmp	r3, r1, lsl #19
   1cd78:	adc	r0, r0, r0
   1cd7c:	subcs	r3, r3, r1, lsl #19
   1cd80:	cmp	r3, r1, lsl #18
   1cd84:	adc	r0, r0, r0
   1cd88:	subcs	r3, r3, r1, lsl #18
   1cd8c:	cmp	r3, r1, lsl #17
   1cd90:	adc	r0, r0, r0
   1cd94:	subcs	r3, r3, r1, lsl #17
   1cd98:	cmp	r3, r1, lsl #16
   1cd9c:	adc	r0, r0, r0
   1cda0:	subcs	r3, r3, r1, lsl #16
   1cda4:	cmp	r3, r1, lsl #15
   1cda8:	adc	r0, r0, r0
   1cdac:	subcs	r3, r3, r1, lsl #15
   1cdb0:	cmp	r3, r1, lsl #14
   1cdb4:	adc	r0, r0, r0
   1cdb8:	subcs	r3, r3, r1, lsl #14
   1cdbc:	cmp	r3, r1, lsl #13
   1cdc0:	adc	r0, r0, r0
   1cdc4:	subcs	r3, r3, r1, lsl #13
   1cdc8:	cmp	r3, r1, lsl #12
   1cdcc:	adc	r0, r0, r0
   1cdd0:	subcs	r3, r3, r1, lsl #12
   1cdd4:	cmp	r3, r1, lsl #11
   1cdd8:	adc	r0, r0, r0
   1cddc:	subcs	r3, r3, r1, lsl #11
   1cde0:	cmp	r3, r1, lsl #10
   1cde4:	adc	r0, r0, r0
   1cde8:	subcs	r3, r3, r1, lsl #10
   1cdec:	cmp	r3, r1, lsl #9
   1cdf0:	adc	r0, r0, r0
   1cdf4:	subcs	r3, r3, r1, lsl #9
   1cdf8:	cmp	r3, r1, lsl #8
   1cdfc:	adc	r0, r0, r0
   1ce00:	subcs	r3, r3, r1, lsl #8
   1ce04:	cmp	r3, r1, lsl #7
   1ce08:	adc	r0, r0, r0
   1ce0c:	subcs	r3, r3, r1, lsl #7
   1ce10:	cmp	r3, r1, lsl #6
   1ce14:	adc	r0, r0, r0
   1ce18:	subcs	r3, r3, r1, lsl #6
   1ce1c:	cmp	r3, r1, lsl #5
   1ce20:	adc	r0, r0, r0
   1ce24:	subcs	r3, r3, r1, lsl #5
   1ce28:	cmp	r3, r1, lsl #4
   1ce2c:	adc	r0, r0, r0
   1ce30:	subcs	r3, r3, r1, lsl #4
   1ce34:	cmp	r3, r1, lsl #3
   1ce38:	adc	r0, r0, r0
   1ce3c:	subcs	r3, r3, r1, lsl #3
   1ce40:	cmp	r3, r1, lsl #2
   1ce44:	adc	r0, r0, r0
   1ce48:	subcs	r3, r3, r1, lsl #2
   1ce4c:	cmp	r3, r1, lsl #1
   1ce50:	adc	r0, r0, r0
   1ce54:	subcs	r3, r3, r1, lsl #1
   1ce58:	cmp	r3, r1
   1ce5c:	adc	r0, r0, r0
   1ce60:	subcs	r3, r3, r1
   1ce64:	cmp	ip, #0
   1ce68:	rsbmi	r0, r0, #0
   1ce6c:	bx	lr
   1ce70:	teq	ip, r0
   1ce74:	rsbmi	r0, r0, #0
   1ce78:	bx	lr
   1ce7c:	movcc	r0, #0
   1ce80:	asreq	r0, ip, #31
   1ce84:	orreq	r0, r0, #1
   1ce88:	bx	lr
   1ce8c:	clz	r2, r1
   1ce90:	rsb	r2, r2, #31
   1ce94:	cmp	ip, #0
   1ce98:	lsr	r0, r3, r2
   1ce9c:	rsbmi	r0, r0, #0
   1cea0:	bx	lr
   1cea4:	cmp	r0, #0
   1cea8:	mvngt	r0, #-2147483648	; 0x80000000
   1ceac:	movlt	r0, #-2147483648	; 0x80000000
   1ceb0:	b	1ced4 <argp_parse@@Base+0x4ad8>
   1ceb4:	cmp	r1, #0
   1ceb8:	beq	1cea4 <argp_parse@@Base+0x4aa8>
   1cebc:	push	{r0, r1, lr}
   1cec0:	bl	1cc9c <argp_parse@@Base+0x48a0>
   1cec4:	pop	{r1, r2, lr}
   1cec8:	mul	r3, r2, r0
   1cecc:	sub	r1, r1, r3
   1ced0:	bx	lr
   1ced4:	push	{r1, lr}
   1ced8:	mov	r0, #8
   1cedc:	bl	110ec <raise@plt>
   1cee0:	pop	{r1, pc}
   1cee4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cee8:	mov	r7, r0
   1ceec:	ldr	r6, [pc, #72]	; 1cf3c <argp_parse@@Base+0x4b40>
   1cef0:	ldr	r5, [pc, #72]	; 1cf40 <argp_parse@@Base+0x4b44>
   1cef4:	add	r6, pc, r6
   1cef8:	add	r5, pc, r5
   1cefc:	sub	r6, r6, r5
   1cf00:	mov	r8, r1
   1cf04:	mov	r9, r2
   1cf08:	bl	110b4 <calloc@plt-0x20>
   1cf0c:	asrs	r6, r6, #2
   1cf10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cf14:	mov	r4, #0
   1cf18:	add	r4, r4, #1
   1cf1c:	ldr	r3, [r5], #4
   1cf20:	mov	r2, r9
   1cf24:	mov	r1, r8
   1cf28:	mov	r0, r7
   1cf2c:	blx	r3
   1cf30:	cmp	r6, r4
   1cf34:	bne	1cf18 <argp_parse@@Base+0x4b1c>
   1cf38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cf3c:	andeq	r2, r1, r4, lsl r0
   1cf40:	andeq	r2, r1, ip
   1cf44:	bx	lr

Disassembly of section .fini:

0001cf48 <.fini>:
   1cf48:	push	{r3, lr}
   1cf4c:	pop	{r3, pc}
