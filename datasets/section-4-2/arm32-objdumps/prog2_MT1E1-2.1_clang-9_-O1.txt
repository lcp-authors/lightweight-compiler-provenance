
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010c70 <.init>:
   10c70:	push	{r3, lr}
   10c74:	bl	10d74 <_start@@Base+0x3c>
   10c78:	pop	{r3, pc}

Disassembly of section .plt:

00010c7c <calloc@plt-0x14>:
   10c7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c80:	ldr	lr, [pc, #4]	; 10c8c <calloc@plt-0x4>
   10c84:	add	lr, pc, lr
   10c88:	ldr	pc, [lr, #8]!
   10c8c:	andeq	r1, r1, r4, ror r3

00010c90 <calloc@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #884]!	; 0x374

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #876]!	; 0x36c

00010ca8 <free@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #868]!	; 0x364

00010cb4 <realloc@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #860]!	; 0x35c

00010cc0 <fwrite@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #852]!	; 0x354

00010ccc <strcpy@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #844]!	; 0x34c

00010cd8 <puts@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #836]!	; 0x344

00010ce4 <malloc@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #828]!	; 0x33c

00010cf0 <__libc_start_main@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #820]!	; 0x334

00010cfc <__gmon_start__@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #812]!	; 0x32c

00010d08 <strlen@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #804]!	; 0x324

00010d14 <fprintf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #796]!	; 0x31c

00010d20 <putchar@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #788]!	; 0x314

00010d2c <abort@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #780]!	; 0x30c

Disassembly of section .text:

00010d38 <_start@@Base>:
   10d38:	mov	fp, #0
   10d3c:	mov	lr, #0
   10d40:	pop	{r1}		; (ldr r1, [sp], #4)
   10d44:	mov	r2, sp
   10d48:	push	{r2}		; (str r2, [sp, #-4]!)
   10d4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d50:	ldr	ip, [pc, #16]	; 10d68 <_start@@Base+0x30>
   10d54:	push	{ip}		; (str ip, [sp, #-4]!)
   10d58:	ldr	r0, [pc, #12]	; 10d6c <_start@@Base+0x34>
   10d5c:	ldr	r3, [pc, #12]	; 10d70 <_start@@Base+0x38>
   10d60:	bl	10cf0 <__libc_start_main@plt>
   10d64:	bl	10d2c <abort@plt>
   10d68:	strdeq	r1, [r1], -r4
   10d6c:	andeq	r1, r1, r0, lsr #32
   10d70:	muleq	r1, r4, sl
   10d74:	ldr	r3, [pc, #20]	; 10d90 <_start@@Base+0x58>
   10d78:	ldr	r2, [pc, #20]	; 10d94 <_start@@Base+0x5c>
   10d7c:	add	r3, pc, r3
   10d80:	ldr	r2, [r3, r2]
   10d84:	cmp	r2, #0
   10d88:	bxeq	lr
   10d8c:	b	10cfc <__gmon_start__@plt>
   10d90:	andeq	r1, r1, ip, ror r2
   10d94:	andeq	r0, r0, r4, asr #32
   10d98:	ldr	r0, [pc, #24]	; 10db8 <_start@@Base+0x80>
   10d9c:	ldr	r3, [pc, #24]	; 10dbc <_start@@Base+0x84>
   10da0:	cmp	r3, r0
   10da4:	bxeq	lr
   10da8:	ldr	r3, [pc, #16]	; 10dc0 <_start@@Base+0x88>
   10dac:	cmp	r3, #0
   10db0:	bxeq	lr
   10db4:	bx	r3
   10db8:	muleq	r2, r8, r1
   10dbc:	muleq	r2, r8, r1
   10dc0:	andeq	r0, r0, r0
   10dc4:	ldr	r0, [pc, #36]	; 10df0 <_start@@Base+0xb8>
   10dc8:	ldr	r1, [pc, #36]	; 10df4 <_start@@Base+0xbc>
   10dcc:	sub	r1, r1, r0
   10dd0:	asr	r1, r1, #2
   10dd4:	add	r1, r1, r1, lsr #31
   10dd8:	asrs	r1, r1, #1
   10ddc:	bxeq	lr
   10de0:	ldr	r3, [pc, #16]	; 10df8 <_start@@Base+0xc0>
   10de4:	cmp	r3, #0
   10de8:	bxeq	lr
   10dec:	bx	r3
   10df0:	muleq	r2, r8, r1
   10df4:	muleq	r2, r8, r1
   10df8:	andeq	r0, r0, r0
   10dfc:	push	{r4, lr}
   10e00:	ldr	r4, [pc, #24]	; 10e20 <_start@@Base+0xe8>
   10e04:	ldrb	r3, [r4]
   10e08:	cmp	r3, #0
   10e0c:	popne	{r4, pc}
   10e10:	bl	10d98 <_start@@Base+0x60>
   10e14:	mov	r3, #1
   10e18:	strb	r3, [r4]
   10e1c:	pop	{r4, pc}
   10e20:	muleq	r2, ip, r1
   10e24:	b	10dc4 <_start@@Base+0x8c>

00010e28 <tira_carta@@Base>:
   10e28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e2c:	add	fp, sp, #24
   10e30:	mov	r8, r0
   10e34:	ldr	r5, [r0]
   10e38:	ldr	r2, [r5]
   10e3c:	ldr	r4, [r1]
   10e40:	ldr	r0, [r4]
   10e44:	mov	r1, r2
   10e48:	bl	10c9c <strcmp@plt>
   10e4c:	cmp	r0, #0
   10e50:	beq	10e80 <tira_carta@@Base+0x58>
   10e54:	ldr	r5, [r8]
   10e58:	ldr	r7, [r5]
   10e5c:	mov	r6, #0
   10e60:	ldr	r4, [r4, #4]
   10e64:	ldr	r0, [r4]
   10e68:	mov	r1, r7
   10e6c:	bl	10c9c <strcmp@plt>
   10e70:	add	r6, r6, #1
   10e74:	cmp	r0, #0
   10e78:	bne	10e60 <tira_carta@@Base+0x38>
   10e7c:	b	10e84 <tira_carta@@Base+0x5c>
   10e80:	mov	r6, #0
   10e84:	mov	r0, r8
   10e88:	mov	r1, r5
   10e8c:	bl	11858 <lista_remove@@Base>
   10e90:	mov	r0, r6
   10e94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010e98 <faz_jogada@@Base>:
   10e98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10e9c:	add	fp, sp, #24
   10ea0:	mov	r9, r2
   10ea4:	mov	r7, r1
   10ea8:	mov	r8, r0
   10eac:	ldr	r6, [r0]
   10eb0:	lsl	r0, r6, #2
   10eb4:	bl	10ce4 <malloc@plt>
   10eb8:	mov	r5, r0
   10ebc:	mvn	r4, #0
   10ec0:	cmp	r6, #1
   10ec4:	blt	10f1c <faz_jogada@@Base+0x84>
   10ec8:	mov	r6, #0
   10ecc:	mov	r0, r7
   10ed0:	mov	r1, r9
   10ed4:	bl	10e28 <tira_carta@@Base>
   10ed8:	str	r0, [r5, r6, lsl #2]
   10edc:	add	r6, r6, #1
   10ee0:	ldr	r0, [r8]
   10ee4:	cmp	r6, r0
   10ee8:	blt	10ecc <faz_jogada@@Base+0x34>
   10eec:	cmp	r0, #1
   10ef0:	blt	10f1c <faz_jogada@@Base+0x84>
   10ef4:	mov	r1, #0
   10ef8:	mvn	r4, #0
   10efc:	mvn	r2, #0
   10f00:	ldr	r3, [r5, r1, lsl #2]
   10f04:	cmp	r3, r2
   10f08:	movgt	r4, r1
   10f0c:	movgt	r2, r3
   10f10:	add	r1, r1, #1
   10f14:	cmp	r0, r1
   10f18:	bne	10f00 <faz_jogada@@Base+0x68>
   10f1c:	mov	r0, r5
   10f20:	bl	10ca8 <free@plt>
   10f24:	ldr	r0, [r8, #8]
   10f28:	ldr	r0, [r0, r4, lsl #2]
   10f2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00010f30 <numero_vitorias@@Base>:
   10f30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f34:	add	fp, sp, #24
   10f38:	mov	r8, r1
   10f3c:	ldr	r1, [r0]
   10f40:	cmp	r1, #1
   10f44:	blt	10f80 <numero_vitorias@@Base+0x50>
   10f48:	ldr	r6, [r0]
   10f4c:	ldr	r7, [r0, #8]
   10f50:	mov	r5, #0
   10f54:	mov	r4, #0
   10f58:	ldr	r1, [r7, r4, lsl #2]
   10f5c:	mov	r0, r8
   10f60:	bl	10c9c <strcmp@plt>
   10f64:	cmp	r0, #0
   10f68:	addeq	r5, r5, #1
   10f6c:	add	r4, r4, #1
   10f70:	cmp	r4, r6
   10f74:	blt	10f58 <numero_vitorias@@Base+0x28>
   10f78:	mov	r0, r5
   10f7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10f80:	mov	r5, #0
   10f84:	mov	r0, r5
   10f88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f8c <insere_carta@@Base>:
   10f8c:	push	{fp, lr}
   10f90:	mov	fp, sp
   10f94:	sub	sp, sp, #8
   10f98:	cmp	r1, #7
   10f9c:	bgt	10fb4 <insere_carta@@Base+0x28>
   10fa0:	mov	r2, #0
   10fa4:	strb	r2, [sp, #5]
   10fa8:	add	r1, r1, #50	; 0x32
   10fac:	strb	r1, [sp, #4]
   10fb0:	b	1100c <insere_carta@@Base+0x80>
   10fb4:	sub	r1, r1, #8
   10fb8:	cmp	r1, #4
   10fbc:	bhi	1100c <insere_carta@@Base+0x80>
   10fc0:	add	r2, pc, #0
   10fc4:	ldr	pc, [r2, r1, lsl #2]
   10fc8:	ldrdeq	r0, [r1], -ip
   10fcc:	andeq	r0, r1, ip, ror #31
   10fd0:	strdeq	r0, [r1], -r4
   10fd4:	strdeq	r0, [r1], -ip
   10fd8:	andeq	r1, r1, r4
   10fdc:	mov	r1, #0
   10fe0:	strb	r1, [sp, #6]
   10fe4:	movw	r1, #12337	; 0x3031
   10fe8:	b	11008 <insere_carta@@Base+0x7c>
   10fec:	mov	r1, #74	; 0x4a
   10ff0:	b	11008 <insere_carta@@Base+0x7c>
   10ff4:	mov	r1, #81	; 0x51
   10ff8:	b	11008 <insere_carta@@Base+0x7c>
   10ffc:	mov	r1, #75	; 0x4b
   11000:	b	11008 <insere_carta@@Base+0x7c>
   11004:	mov	r1, #65	; 0x41
   11008:	strh	r1, [sp, #4]
   1100c:	ldr	r2, [r0]
   11010:	add	r1, sp, #4
   11014:	bl	117ac <lista_insere@@Base>
   11018:	mov	sp, fp
   1101c:	pop	{fp, pc}

00011020 <main@@Base>:
   11020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11024:	add	fp, sp, #28
   11028:	sub	sp, sp, #4
   1102c:	mov	r5, #0
   11030:	bl	112e8 <vetor_novo@@Base>
   11034:	mov	r4, r0
   11038:	movw	r6, #8272	; 0x2050
   1103c:	movt	r6, #2
   11040:	ldr	r1, [r6, r5, lsl #2]
   11044:	mov	r0, r4
   11048:	mov	r2, r5
   1104c:	bl	11438 <vetor_insere@@Base>
   11050:	add	r5, r5, #1
   11054:	cmp	r5, #4
   11058:	bne	11040 <main@@Base+0x20>
   1105c:	mov	r6, #0
   11060:	bl	11708 <lista_nova@@Base>
   11064:	mov	r5, r0
   11068:	movw	r8, #8340	; 0x2094
   1106c:	movt	r8, #2
   11070:	ldr	r1, [r8, -r6, lsl #2]
   11074:	mov	r0, r5
   11078:	bl	10f8c <insere_carta@@Base>
   1107c:	sub	r6, r6, #1
   11080:	cmn	r6, #52	; 0x34
   11084:	bne	11070 <main@@Base+0x50>
   11088:	mov	r6, #0
   1108c:	bl	11708 <lista_nova@@Base>
   11090:	mov	sl, r0
   11094:	movw	r7, #8288	; 0x2060
   11098:	movt	r7, #2
   1109c:	ldr	r1, [r7, -r6, lsl #2]
   110a0:	mov	r0, sl
   110a4:	mov	r2, #0
   110a8:	bl	117ac <lista_insere@@Base>
   110ac:	sub	r6, r6, #1
   110b0:	cmn	r6, #13
   110b4:	bne	1109c <main@@Base+0x7c>
   110b8:	movw	r7, #8600	; 0x2198
   110bc:	movt	r7, #2
   110c0:	ldr	r6, [r7]
   110c4:	mov	r0, r5
   110c8:	mov	r1, sl
   110cc:	bl	10e28 <tira_carta@@Base>
   110d0:	mov	r2, r0
   110d4:	movw	r1, #6963	; 0x1b33
   110d8:	movt	r1, #1
   110dc:	mov	r0, r6
   110e0:	bl	10d14 <fprintf@plt>
   110e4:	ldr	r6, [r7]
   110e8:	mov	r0, r5
   110ec:	mov	r1, sl
   110f0:	bl	10e28 <tira_carta@@Base>
   110f4:	mov	r2, r0
   110f8:	movw	r1, #6992	; 0x1b50
   110fc:	movt	r1, #1
   11100:	mov	r0, r6
   11104:	bl	10d14 <fprintf@plt>
   11108:	ldr	r6, [r7]
   1110c:	mov	r0, r5
   11110:	mov	r1, sl
   11114:	bl	10e28 <tira_carta@@Base>
   11118:	mov	r2, r0
   1111c:	movw	r1, #7020	; 0x1b6c
   11120:	movt	r1, #1
   11124:	mov	r0, r6
   11128:	mov	r6, r7
   1112c:	bl	10d14 <fprintf@plt>
   11130:	ldr	r1, [r8, #196]	; 0xc4
   11134:	mov	r0, r5
   11138:	bl	10f8c <insere_carta@@Base>
   1113c:	ldr	r1, [r8, #200]	; 0xc8
   11140:	mov	r0, r5
   11144:	bl	10f8c <insere_carta@@Base>
   11148:	ldr	r1, [r8, #204]	; 0xcc
   1114c:	mov	r0, r5
   11150:	bl	10f8c <insere_carta@@Base>
   11154:	mov	r7, #0
   11158:	bl	112e8 <vetor_novo@@Base>
   1115c:	mov	r8, r0
   11160:	movw	r9, #7049	; 0x1b89
   11164:	movt	r9, #1
   11168:	b	11188 <main@@Base+0x168>
   1116c:	mov	r0, r4
   11170:	bl	113f8 <vetor_tamanho@@Base>
   11174:	cmp	r0, #4
   11178:	bne	111b4 <main@@Base+0x194>
   1117c:	add	r7, r7, #1
   11180:	cmp	r7, #13
   11184:	beq	111cc <main@@Base+0x1ac>
   11188:	mov	r0, r4
   1118c:	mov	r1, r5
   11190:	mov	r2, sl
   11194:	bl	10e98 <faz_jogada@@Base>
   11198:	cmp	r0, #0
   1119c:	beq	1116c <main@@Base+0x14c>
   111a0:	mov	r1, r0
   111a4:	mov	r0, r8
   111a8:	mov	r2, r7
   111ac:	bl	11438 <vetor_insere@@Base>
   111b0:	b	1116c <main@@Base+0x14c>
   111b4:	ldr	r3, [r6]
   111b8:	mov	r0, r9
   111bc:	mov	r1, #44	; 0x2c
   111c0:	mov	r2, #1
   111c4:	bl	10cc0 <fwrite@plt>
   111c8:	b	1117c <main@@Base+0x15c>
   111cc:	movw	r0, #7141	; 0x1be5
   111d0:	movt	r0, #1
   111d4:	bl	10cd8 <puts@plt>
   111d8:	ldr	r0, [r8]
   111dc:	cmp	r0, #1
   111e0:	bge	1129c <main@@Base+0x27c>
   111e4:	mov	r0, r8
   111e8:	bl	11314 <vetor_apaga@@Base>
   111ec:	mov	r6, #0
   111f0:	bl	112e8 <vetor_novo@@Base>
   111f4:	mov	r7, r0
   111f8:	movw	r8, #8548	; 0x2164
   111fc:	movt	r8, #2
   11200:	ldr	r1, [r8, r6, lsl #2]
   11204:	mov	r0, r7
   11208:	mov	r2, r6
   1120c:	bl	11438 <vetor_insere@@Base>
   11210:	add	r6, r6, #1
   11214:	cmp	r6, #13
   11218:	bne	11200 <main@@Base+0x1e0>
   1121c:	mov	r0, #10
   11220:	bl	10d20 <putchar@plt>
   11224:	mov	r8, #0
   11228:	movw	r0, #8272	; 0x2050
   1122c:	movt	r0, #2
   11230:	ldr	r6, [r0, r8, lsl #2]
   11234:	movw	r0, #8600	; 0x2198
   11238:	movt	r0, #2
   1123c:	ldr	r9, [r0]
   11240:	mov	r0, r7
   11244:	mov	r1, r6
   11248:	bl	10f30 <numero_vitorias@@Base>
   1124c:	mov	r3, r0
   11250:	mov	r0, r9
   11254:	movw	r1, #7109	; 0x1bc5
   11258:	movt	r1, #1
   1125c:	mov	r2, r6
   11260:	bl	10d14 <fprintf@plt>
   11264:	add	r8, r8, #1
   11268:	cmp	r8, #4
   1126c:	bne	11228 <main@@Base+0x208>
   11270:	mov	r0, r4
   11274:	bl	11314 <vetor_apaga@@Base>
   11278:	mov	r0, r5
   1127c:	bl	11734 <lista_apaga@@Base>
   11280:	mov	r0, sl
   11284:	bl	11734 <lista_apaga@@Base>
   11288:	mov	r0, r7
   1128c:	bl	11314 <vetor_apaga@@Base>
   11290:	mov	r0, #0
   11294:	sub	sp, fp, #28
   11298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1129c:	mov	r7, #1
   112a0:	ldr	r9, [r6]
   112a4:	sub	r1, r7, #1
   112a8:	mov	r0, r8
   112ac:	bl	11408 <vetor_elemento@@Base>
   112b0:	mov	r3, r0
   112b4:	mov	r0, r9
   112b8:	movw	r1, #7094	; 0x1bb6
   112bc:	movt	r1, #1
   112c0:	mov	r2, r7
   112c4:	bl	10d14 <fprintf@plt>
   112c8:	cmp	r7, #2
   112cc:	bhi	111e4 <main@@Base+0x1c4>
   112d0:	add	r0, r7, #1
   112d4:	ldr	r1, [r8]
   112d8:	cmp	r7, r1
   112dc:	mov	r7, r0
   112e0:	bge	111e4 <main@@Base+0x1c4>
   112e4:	b	112a0 <main@@Base+0x280>

000112e8 <vetor_novo@@Base>:
   112e8:	push	{fp, lr}
   112ec:	mov	fp, sp
   112f0:	mov	r0, #12
   112f4:	bl	10ce4 <malloc@plt>
   112f8:	cmp	r0, #0
   112fc:	moveq	r0, #0
   11300:	movne	r1, #0
   11304:	strne	r1, [r0]
   11308:	strne	r1, [r0, #4]
   1130c:	strne	r1, [r0, #8]
   11310:	pop	{fp, pc}

00011314 <vetor_apaga@@Base>:
   11314:	cmp	r0, #0
   11318:	bxeq	lr
   1131c:	push	{r4, r5, fp, lr}
   11320:	add	fp, sp, #8
   11324:	mov	r4, r0
   11328:	ldr	r1, [r0]
   1132c:	ldr	r0, [r0, #8]
   11330:	cmp	r1, #1
   11334:	blt	11358 <vetor_apaga@@Base+0x44>
   11338:	mov	r5, #0
   1133c:	ldr	r0, [r0, r5, lsl #2]
   11340:	bl	10ca8 <free@plt>
   11344:	add	r5, r5, #1
   11348:	ldr	r1, [r4]
   1134c:	ldr	r0, [r4, #8]
   11350:	cmp	r5, r1
   11354:	blt	1133c <vetor_apaga@@Base+0x28>
   11358:	bl	10ca8 <free@plt>
   1135c:	mov	r0, r4
   11360:	pop	{r4, r5, fp, lr}
   11364:	b	10ca8 <free@plt>

00011368 <vetor_atribui@@Base>:
   11368:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1136c:	add	fp, sp, #24
   11370:	mvn	r4, #0
   11374:	cmp	r0, #0
   11378:	beq	113f0 <vetor_atribui@@Base+0x88>
   1137c:	mov	r5, r1
   11380:	cmp	r1, #0
   11384:	bmi	113f0 <vetor_atribui@@Base+0x88>
   11388:	mov	r7, r0
   1138c:	ldr	r0, [r0]
   11390:	cmp	r0, r5
   11394:	ble	113f0 <vetor_atribui@@Base+0x88>
   11398:	mov	r6, r2
   1139c:	mov	r0, r2
   113a0:	bl	10d08 <strlen@plt>
   113a4:	mov	r8, r0
   113a8:	ldr	r0, [r7, #8]
   113ac:	ldr	r9, [r0, r5, lsl #2]
   113b0:	mov	r0, r9
   113b4:	bl	10d08 <strlen@plt>
   113b8:	cmp	r8, r0
   113bc:	bls	113dc <vetor_atribui@@Base+0x74>
   113c0:	add	r1, r8, #1
   113c4:	mov	r0, r9
   113c8:	bl	10cb4 <realloc@plt>
   113cc:	ldr	r1, [r7, #8]
   113d0:	str	r0, [r1, r5, lsl #2]
   113d4:	cmp	r0, #0
   113d8:	beq	113f0 <vetor_atribui@@Base+0x88>
   113dc:	ldr	r0, [r7, #8]
   113e0:	ldr	r0, [r0, r5, lsl #2]
   113e4:	mov	r1, r6
   113e8:	bl	10ccc <strcpy@plt>
   113ec:	mov	r4, r5
   113f0:	mov	r0, r4
   113f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000113f8 <vetor_tamanho@@Base>:
   113f8:	cmp	r0, #0
   113fc:	ldrne	r0, [r0]
   11400:	mvneq	r0, #0
   11404:	bx	lr

00011408 <vetor_elemento@@Base>:
   11408:	mov	r2, r0
   1140c:	mov	r0, #0
   11410:	cmp	r2, #0
   11414:	beq	11434 <vetor_elemento@@Base+0x2c>
   11418:	cmp	r1, #0
   1141c:	bmi	11434 <vetor_elemento@@Base+0x2c>
   11420:	ldr	r3, [r2]
   11424:	cmp	r3, r1
   11428:	bxle	lr
   1142c:	ldr	r0, [r2, #8]
   11430:	ldr	r0, [r0, r1, lsl #2]
   11434:	bx	lr

00011438 <vetor_insere@@Base>:
   11438:	push	{r4, r5, r6, r7, fp, lr}
   1143c:	add	fp, sp, #16
   11440:	mvn	r4, #0
   11444:	cmp	r0, #0
   11448:	beq	11504 <vetor_insere@@Base+0xcc>
   1144c:	mov	r5, r2
   11450:	cmp	r2, #0
   11454:	bmi	11504 <vetor_insere@@Base+0xcc>
   11458:	mov	r7, r1
   1145c:	mov	r6, r0
   11460:	ldr	r1, [r0]
   11464:	cmp	r1, r5
   11468:	blt	11504 <vetor_insere@@Base+0xcc>
   1146c:	ldr	r0, [r6, #4]
   11470:	cmp	r1, r0
   11474:	bne	114a0 <vetor_insere@@Base+0x68>
   11478:	lsl	r1, r0, #1
   1147c:	cmp	r0, #0
   11480:	movweq	r1, #1
   11484:	str	r1, [r6, #4]
   11488:	lsl	r1, r1, #2
   1148c:	ldr	r0, [r6, #8]
   11490:	bl	10cb4 <realloc@plt>
   11494:	str	r0, [r6, #8]
   11498:	cmp	r0, #0
   1149c:	beq	11504 <vetor_insere@@Base+0xcc>
   114a0:	ldr	r0, [r6]
   114a4:	cmp	r0, r5
   114a8:	ble	114c8 <vetor_insere@@Base+0x90>
   114ac:	ldr	r1, [r6, #8]
   114b0:	add	r2, r1, r0, lsl #2
   114b4:	ldr	r2, [r2, #-4]
   114b8:	str	r2, [r1, r0, lsl #2]
   114bc:	sub	r0, r0, #1
   114c0:	cmp	r0, r5
   114c4:	bgt	114ac <vetor_insere@@Base+0x74>
   114c8:	mov	r0, r7
   114cc:	bl	10d08 <strlen@plt>
   114d0:	add	r0, r0, #1
   114d4:	mov	r1, #1
   114d8:	bl	10c90 <calloc@plt>
   114dc:	ldr	r1, [r6, #8]
   114e0:	str	r0, [r1, r5, lsl #2]
   114e4:	cmp	r0, #0
   114e8:	beq	11504 <vetor_insere@@Base+0xcc>
   114ec:	mov	r1, r7
   114f0:	bl	10ccc <strcpy@plt>
   114f4:	ldr	r0, [r6]
   114f8:	add	r0, r0, #1
   114fc:	str	r0, [r6]
   11500:	mov	r4, r5
   11504:	mov	r0, r4
   11508:	pop	{r4, r5, r6, r7, fp, pc}

0001150c <vetor_remove@@Base>:
   1150c:	push	{r4, r5, fp, lr}
   11510:	add	fp, sp, #8
   11514:	mov	r4, r0
   11518:	mvn	r0, #0
   1151c:	cmp	r4, #0
   11520:	beq	1158c <vetor_remove@@Base+0x80>
   11524:	mov	r5, r1
   11528:	cmp	r1, #0
   1152c:	bmi	1158c <vetor_remove@@Base+0x80>
   11530:	ldr	r1, [r4]
   11534:	cmp	r1, r5
   11538:	pople	{r4, r5, fp, pc}
   1153c:	ldr	r0, [r4, #8]
   11540:	ldr	r0, [r0, r5, lsl #2]
   11544:	bl	10ca8 <free@plt>
   11548:	ldr	r0, [r4]
   1154c:	add	r1, r5, #1
   11550:	cmp	r1, r0
   11554:	bge	11580 <vetor_remove@@Base+0x74>
   11558:	ldr	r0, [r4]
   1155c:	ldr	r1, [r4, #8]
   11560:	add	r2, r1, r5, lsl #2
   11564:	ldr	r2, [r2, #4]
   11568:	str	r2, [r1, r5, lsl #2]
   1156c:	add	r1, r5, #1
   11570:	add	r2, r5, #2
   11574:	cmp	r2, r0
   11578:	mov	r5, r1
   1157c:	blt	1155c <vetor_remove@@Base+0x50>
   11580:	sub	r0, r0, #1
   11584:	str	r0, [r4]
   11588:	mov	r0, #0
   1158c:	pop	{r4, r5, fp, pc}

00011590 <vetor_pesquisa@@Base>:
   11590:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11594:	add	fp, sp, #24
   11598:	mvn	r8, #0
   1159c:	cmp	r0, #0
   115a0:	beq	115e4 <vetor_pesquisa@@Base+0x54>
   115a4:	mov	r6, r0
   115a8:	ldr	r0, [r0]
   115ac:	cmp	r0, #1
   115b0:	blt	115e4 <vetor_pesquisa@@Base+0x54>
   115b4:	mov	r5, r1
   115b8:	ldr	r4, [r6, #8]
   115bc:	mov	r7, #0
   115c0:	ldr	r0, [r4, r7, lsl #2]
   115c4:	mov	r1, r5
   115c8:	bl	10c9c <strcmp@plt>
   115cc:	cmp	r0, #0
   115d0:	beq	115ec <vetor_pesquisa@@Base+0x5c>
   115d4:	add	r7, r7, #1
   115d8:	ldr	r0, [r6]
   115dc:	cmp	r7, r0
   115e0:	blt	115c0 <vetor_pesquisa@@Base+0x30>
   115e4:	mov	r0, r8
   115e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   115ec:	mov	r0, r7
   115f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115f4 <vetor_ordena@@Base>:
   115f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   115f8:	add	fp, sp, #24
   115fc:	cmp	r0, #0
   11600:	beq	11688 <vetor_ordena@@Base+0x94>
   11604:	mov	r4, r0
   11608:	ldr	r1, [r0]
   1160c:	mov	r0, #0
   11610:	cmp	r1, #2
   11614:	blt	11694 <vetor_ordena@@Base+0xa0>
   11618:	mov	r9, #1
   1161c:	mov	r8, #0
   11620:	b	11644 <vetor_ordena@@Base+0x50>
   11624:	add	r0, r7, #1
   11628:	ldr	r1, [r4, #8]
   1162c:	str	r5, [r1, r0, lsl #2]
   11630:	add	r8, r8, #1
   11634:	add	r9, r9, #1
   11638:	ldr	r0, [r4]
   1163c:	cmp	r9, r0
   11640:	bge	11690 <vetor_ordena@@Base+0x9c>
   11644:	ldr	r0, [r4, #8]
   11648:	ldr	r5, [r0, r9, lsl #2]
   1164c:	mov	r7, r8
   11650:	ldr	r6, [r4, #8]
   11654:	ldr	r1, [r6, r7, lsl #2]
   11658:	mov	r0, r5
   1165c:	bl	10c9c <strcmp@plt>
   11660:	cmn	r0, #1
   11664:	bgt	11624 <vetor_ordena@@Base+0x30>
   11668:	ldr	r0, [r6, r7, lsl #2]!
   1166c:	str	r0, [r6, #4]
   11670:	sub	r0, r7, #1
   11674:	cmp	r7, #0
   11678:	mov	r7, r0
   1167c:	bgt	11650 <vetor_ordena@@Base+0x5c>
   11680:	add	r0, r0, #1
   11684:	b	11628 <vetor_ordena@@Base+0x34>
   11688:	mvn	r0, #0
   1168c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11690:	mov	r0, #0
   11694:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011698 <novo_str@@Base>:
   11698:	push	{r4, r5, r6, sl, fp, lr}
   1169c:	add	fp, sp, #16
   116a0:	mov	r6, r0
   116a4:	mov	r0, #12
   116a8:	bl	10ce4 <malloc@plt>
   116ac:	mov	r5, #0
   116b0:	cmp	r0, #0
   116b4:	beq	116f0 <novo_str@@Base+0x58>
   116b8:	mov	r4, r0
   116bc:	mov	r0, r6
   116c0:	bl	10d08 <strlen@plt>
   116c4:	add	r0, r0, #1
   116c8:	bl	10ce4 <malloc@plt>
   116cc:	str	r0, [r4]
   116d0:	cmp	r0, #0
   116d4:	beq	116f8 <novo_str@@Base+0x60>
   116d8:	mov	r1, r6
   116dc:	bl	10ccc <strcpy@plt>
   116e0:	mov	r0, #0
   116e4:	str	r0, [r4, #4]
   116e8:	str	r0, [r4, #8]
   116ec:	mov	r5, r4
   116f0:	mov	r0, r5
   116f4:	pop	{r4, r5, r6, sl, fp, pc}
   116f8:	mov	r0, r4
   116fc:	bl	10ca8 <free@plt>
   11700:	mov	r0, r5
   11704:	pop	{r4, r5, r6, sl, fp, pc}

00011708 <lista_nova@@Base>:
   11708:	push	{fp, lr}
   1170c:	mov	fp, sp
   11710:	mov	r0, #12
   11714:	bl	10ce4 <malloc@plt>
   11718:	cmp	r0, #0
   1171c:	moveq	r0, #0
   11720:	movne	r1, #0
   11724:	strne	r1, [r0]
   11728:	strne	r1, [r0, #4]
   1172c:	strne	r1, [r0, #8]
   11730:	pop	{fp, pc}

00011734 <lista_apaga@@Base>:
   11734:	cmp	r0, #0
   11738:	bxeq	lr
   1173c:	push	{r4, r5, fp, lr}
   11740:	add	fp, sp, #8
   11744:	mov	r4, r0
   11748:	ldr	r5, [r4]
   1174c:	cmp	r5, #0
   11750:	beq	11770 <lista_apaga@@Base+0x3c>
   11754:	ldr	r0, [r5, #4]
   11758:	str	r0, [r4]
   1175c:	ldr	r0, [r5]
   11760:	bl	10ca8 <free@plt>
   11764:	mov	r0, r5
   11768:	bl	10ca8 <free@plt>
   1176c:	b	11748 <lista_apaga@@Base+0x14>
   11770:	mov	r0, r4
   11774:	pop	{r4, r5, fp, lr}
   11778:	b	10ca8 <free@plt>

0001177c <lista_tamanho@@Base>:
   1177c:	cmp	r0, #0
   11780:	ldrne	r0, [r0, #8]
   11784:	mvneq	r0, #0
   11788:	bx	lr

0001178c <lista_inicio@@Base>:
   1178c:	cmp	r0, #0
   11790:	ldrne	r0, [r0]
   11794:	moveq	r0, #0
   11798:	bx	lr

0001179c <lista_fim@@Base>:
   1179c:	cmp	r0, #0
   117a0:	ldrne	r0, [r0, #4]
   117a4:	moveq	r0, #0
   117a8:	bx	lr

000117ac <lista_insere@@Base>:
   117ac:	push	{r4, r5, r6, sl, fp, lr}
   117b0:	add	fp, sp, #16
   117b4:	mov	r6, #0
   117b8:	cmp	r0, #0
   117bc:	cmpne	r1, #0
   117c0:	bne	117cc <lista_insere@@Base+0x20>
   117c4:	mov	r0, r6
   117c8:	pop	{r4, r5, r6, sl, fp, pc}
   117cc:	mov	r5, r2
   117d0:	mov	r4, r0
   117d4:	mov	r0, r1
   117d8:	bl	11698 <novo_str@@Base>
   117dc:	cmp	r0, #0
   117e0:	beq	117c4 <lista_insere@@Base+0x18>
   117e4:	ldr	r1, [r4]
   117e8:	ldr	r2, [r4, #8]
   117ec:	add	r2, r2, #1
   117f0:	str	r2, [r4, #8]
   117f4:	cmp	r5, #0
   117f8:	beq	1181c <lista_insere@@Base+0x70>
   117fc:	cmp	r1, r5
   11800:	beq	11834 <lista_insere@@Base+0x88>
   11804:	ldr	r1, [r5, #8]
   11808:	str	r5, [r0, #4]
   1180c:	str	r1, [r0, #8]
   11810:	str	r0, [r1, #4]
   11814:	str	r0, [r5, #8]
   11818:	b	1184c <lista_insere@@Base+0xa0>
   1181c:	cmp	r1, #0
   11820:	beq	11844 <lista_insere@@Base+0x98>
   11824:	ldr	r1, [r4, #4]
   11828:	str	r1, [r0, #8]
   1182c:	str	r0, [r1, #4]
   11830:	b	11848 <lista_insere@@Base+0x9c>
   11834:	str	r1, [r0, #4]
   11838:	str	r0, [r1, #8]
   1183c:	str	r0, [r4]
   11840:	b	1184c <lista_insere@@Base+0xa0>
   11844:	str	r0, [r4]
   11848:	str	r0, [r4, #4]
   1184c:	mov	r6, r0
   11850:	mov	r0, r6
   11854:	pop	{r4, r5, r6, sl, fp, pc}

00011858 <lista_remove@@Base>:
   11858:	push	{r4, r5, fp, lr}
   1185c:	add	fp, sp, #8
   11860:	mov	r5, #0
   11864:	cmp	r0, #0
   11868:	movne	r4, r1
   1186c:	cmpne	r1, #0
   11870:	bne	1187c <lista_remove@@Base+0x24>
   11874:	mov	r0, r5
   11878:	pop	{r4, r5, fp, pc}
   1187c:	ldr	r1, [r0, #8]
   11880:	sub	r1, r1, #1
   11884:	str	r1, [r0, #8]
   11888:	ldmib	r4, {r1, r2}
   1188c:	cmp	r2, #0
   11890:	mov	r3, r0
   11894:	addne	r3, r2, #4
   11898:	str	r1, [r3]
   1189c:	ldr	r5, [r4, #4]
   118a0:	ldr	r1, [r4, #8]
   118a4:	add	r2, r5, #8
   118a8:	cmp	r5, #0
   118ac:	addeq	r2, r0, #4
   118b0:	str	r1, [r2]
   118b4:	ldr	r0, [r4]
   118b8:	bl	10ca8 <free@plt>
   118bc:	mov	r0, r4
   118c0:	bl	10ca8 <free@plt>
   118c4:	mov	r0, r5
   118c8:	pop	{r4, r5, fp, pc}

000118cc <lista_pesquisa@@Base>:
   118cc:	push	{r4, r5, r6, sl, fp, lr}
   118d0:	add	fp, sp, #16
   118d4:	mov	r4, #0
   118d8:	cmp	r0, #0
   118dc:	movne	r5, r1
   118e0:	cmpne	r1, #0
   118e4:	bne	118f0 <lista_pesquisa@@Base+0x24>
   118e8:	mov	r0, r4
   118ec:	pop	{r4, r5, r6, sl, fp, pc}
   118f0:	cmp	r2, #1
   118f4:	bhi	118e8 <lista_pesquisa@@Base+0x1c>
   118f8:	cmp	r2, #0
   118fc:	beq	11930 <lista_pesquisa@@Base+0x64>
   11900:	ldr	r6, [r0, #4]
   11904:	cmp	r6, #0
   11908:	beq	118e8 <lista_pesquisa@@Base+0x1c>
   1190c:	ldr	r0, [r6]
   11910:	mov	r1, r5
   11914:	bl	10c9c <strcmp@plt>
   11918:	cmp	r0, #0
   1191c:	beq	11960 <lista_pesquisa@@Base+0x94>
   11920:	ldr	r6, [r6, #8]
   11924:	cmp	r6, #0
   11928:	bne	1190c <lista_pesquisa@@Base+0x40>
   1192c:	b	118e8 <lista_pesquisa@@Base+0x1c>
   11930:	ldr	r6, [r0]
   11934:	cmp	r6, #0
   11938:	beq	118e8 <lista_pesquisa@@Base+0x1c>
   1193c:	ldr	r0, [r6]
   11940:	mov	r1, r5
   11944:	bl	10c9c <strcmp@plt>
   11948:	cmp	r0, #0
   1194c:	beq	11960 <lista_pesquisa@@Base+0x94>
   11950:	ldr	r6, [r6, #4]
   11954:	cmp	r6, #0
   11958:	bne	1193c <lista_pesquisa@@Base+0x70>
   1195c:	b	118e8 <lista_pesquisa@@Base+0x1c>
   11960:	mov	r4, r6
   11964:	mov	r0, r4
   11968:	pop	{r4, r5, r6, sl, fp, pc}

0001196c <lista_ordena@@Base>:
   1196c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11970:	add	fp, sp, #24
   11974:	cmp	r0, #0
   11978:	beq	119ec <lista_ordena@@Base+0x80>
   1197c:	ldr	r4, [r0]
   11980:	mov	r5, r4
   11984:	ldr	r7, [r5, #4]!
   11988:	mov	r8, #0
   1198c:	cmp	r7, #0
   11990:	bne	119ac <lista_ordena@@Base+0x40>
   11994:	b	119f0 <lista_ordena@@Base+0x84>
   11998:	ldr	r4, [r5]
   1199c:	mov	r5, r4
   119a0:	ldr	r7, [r5, #4]!
   119a4:	cmp	r7, #0
   119a8:	beq	119f0 <lista_ordena@@Base+0x84>
   119ac:	mov	r6, r4
   119b0:	ldr	r1, [r6]
   119b4:	ldr	r0, [r7]
   119b8:	bl	10c9c <strcmp@plt>
   119bc:	cmp	r0, #0
   119c0:	movmi	r6, r7
   119c4:	ldr	r7, [r7, #4]
   119c8:	cmp	r7, #0
   119cc:	bne	119b0 <lista_ordena@@Base+0x44>
   119d0:	cmp	r6, r4
   119d4:	beq	11998 <lista_ordena@@Base+0x2c>
   119d8:	ldr	r0, [r4]
   119dc:	ldr	r1, [r6]
   119e0:	str	r1, [r4]
   119e4:	str	r0, [r6]
   119e8:	b	11998 <lista_ordena@@Base+0x2c>
   119ec:	mvn	r8, #0
   119f0:	mov	r0, r8
   119f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000119f8 <lista_inverte@@Base>:
   119f8:	cmp	r0, #0
   119fc:	mvneq	r1, #0
   11a00:	moveq	r0, r1
   11a04:	bxeq	lr
   11a08:	ldr	r2, [r0, #8]
   11a0c:	mov	r1, #0
   11a10:	cmp	r2, #2
   11a14:	blt	11a8c <lista_inverte@@Base+0x94>
   11a18:	beq	11a60 <lista_inverte@@Base+0x68>
   11a1c:	sub	r1, r2, #2
   11a20:	ldr	r2, [r0]
   11a24:	ldr	r2, [r2, #4]
   11a28:	ldr	ip, [r2, #4]
   11a2c:	ldr	r3, [r2, #8]
   11a30:	str	ip, [r3, #4]
   11a34:	ldr	ip, [r2, #4]
   11a38:	ldr	r3, [r2, #8]
   11a3c:	str	r3, [ip, #8]
   11a40:	ldr	r3, [r0]
   11a44:	str	r3, [r2, #4]
   11a48:	ldr	r3, [r0]
   11a4c:	str	r2, [r3, #8]
   11a50:	str	r2, [r0]
   11a54:	subs	r1, r1, #1
   11a58:	mov	r2, ip
   11a5c:	bne	11a28 <lista_inverte@@Base+0x30>
   11a60:	ldr	r2, [r0, #4]
   11a64:	ldr	r3, [r2, #8]
   11a68:	str	r3, [r0, #4]
   11a6c:	mov	r1, #0
   11a70:	str	r1, [r3, #4]
   11a74:	str	r1, [r2, #8]
   11a78:	ldr	r3, [r0]
   11a7c:	str	r3, [r2, #4]
   11a80:	ldr	r3, [r0]
   11a84:	str	r2, [r3, #8]
   11a88:	str	r2, [r0]
   11a8c:	mov	r0, r1
   11a90:	bx	lr

00011a94 <__libc_csu_init@@Base>:
   11a94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a98:	mov	r7, r0
   11a9c:	ldr	r6, [pc, #72]	; 11aec <__libc_csu_init@@Base+0x58>
   11aa0:	ldr	r5, [pc, #72]	; 11af0 <__libc_csu_init@@Base+0x5c>
   11aa4:	add	r6, pc, r6
   11aa8:	add	r5, pc, r5
   11aac:	sub	r6, r6, r5
   11ab0:	mov	r8, r1
   11ab4:	mov	r9, r2
   11ab8:	bl	10c70 <calloc@plt-0x20>
   11abc:	asrs	r6, r6, #2
   11ac0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ac4:	mov	r4, #0
   11ac8:	add	r4, r4, #1
   11acc:	ldr	r3, [r5], #4
   11ad0:	mov	r2, r9
   11ad4:	mov	r1, r8
   11ad8:	mov	r0, r7
   11adc:	blx	r3
   11ae0:	cmp	r6, r4
   11ae4:	bne	11ac8 <__libc_csu_init@@Base+0x34>
   11ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11aec:	andeq	r0, r1, r0, ror #8
   11af0:	andeq	r0, r1, r8, asr r4

00011af4 <__libc_csu_fini@@Base>:
   11af4:	bx	lr

Disassembly of section .fini:

00011af8 <.fini>:
   11af8:	push	{r3, lr}
   11afc:	pop	{r3, pc}
