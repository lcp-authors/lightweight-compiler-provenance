
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

000144cc <.init>:
   144cc:	push	{r3, lr}
   144d0:	bl	14634 <_start@@Base+0x3c>
   144d4:	pop	{r3, pc}

Disassembly of section .plt:

000144d8 <raise@plt-0x14>:
   144d8:	push	{lr}		; (str lr, [sp, #-4]!)
   144dc:	ldr	lr, [pc, #4]	; 144e8 <raise@plt-0x4>
   144e0:	add	lr, pc, lr
   144e4:	ldr	pc, [lr, #8]!
   144e8:	andeq	r0, r5, r8, lsl fp

000144ec <raise@plt>:
   144ec:	add	ip, pc, #0, 12
   144f0:	add	ip, ip, #80, 20	; 0x50000
   144f4:	ldr	pc, [ip, #2840]!	; 0xb18

000144f8 <strcmp@plt>:
   144f8:	add	ip, pc, #0, 12
   144fc:	add	ip, ip, #80, 20	; 0x50000
   14500:	ldr	pc, [ip, #2832]!	; 0xb10

00014504 <memmove@plt>:
   14504:	add	ip, pc, #0, 12
   14508:	add	ip, ip, #80, 20	; 0x50000
   1450c:	ldr	pc, [ip, #2824]!	; 0xb08

00014510 <free@plt>:
   14510:	add	ip, pc, #0, 12
   14514:	add	ip, ip, #80, 20	; 0x50000
   14518:	ldr	pc, [ip, #2816]!	; 0xb00

0001451c <memcpy@plt>:
   1451c:	add	ip, pc, #0, 12
   14520:	add	ip, ip, #80, 20	; 0x50000
   14524:	ldr	pc, [ip, #2808]!	; 0xaf8

00014528 <memcmp@plt>:
   14528:	add	ip, pc, #0, 12
   1452c:	add	ip, ip, #80, 20	; 0x50000
   14530:	ldr	pc, [ip, #2800]!	; 0xaf0

00014534 <realloc@plt>:
   14534:	add	ip, pc, #0, 12
   14538:	add	ip, ip, #80, 20	; 0x50000
   1453c:	ldr	pc, [ip, #2792]!	; 0xae8

00014540 <fwrite@plt>:
   14540:	add	ip, pc, #0, 12
   14544:	add	ip, ip, #80, 20	; 0x50000
   14548:	ldr	pc, [ip, #2784]!	; 0xae0

0001454c <malloc@plt>:
   1454c:	add	ip, pc, #0, 12
   14550:	add	ip, ip, #80, 20	; 0x50000
   14554:	ldr	pc, [ip, #2776]!	; 0xad8

00014558 <__libc_start_main@plt>:
   14558:	add	ip, pc, #0, 12
   1455c:	add	ip, ip, #80, 20	; 0x50000
   14560:	ldr	pc, [ip, #2768]!	; 0xad0

00014564 <__gmon_start__@plt>:
   14564:	add	ip, pc, #0, 12
   14568:	add	ip, ip, #80, 20	; 0x50000
   1456c:	ldr	pc, [ip, #2760]!	; 0xac8

00014570 <strlen@plt>:
   14570:	add	ip, pc, #0, 12
   14574:	add	ip, ip, #80, 20	; 0x50000
   14578:	ldr	pc, [ip, #2752]!	; 0xac0

0001457c <fprintf@plt>:
   1457c:	add	ip, pc, #0, 12
   14580:	add	ip, ip, #80, 20	; 0x50000
   14584:	ldr	pc, [ip, #2744]!	; 0xab8

00014588 <posix_memalign@plt>:
   14588:	add	ip, pc, #0, 12
   1458c:	add	ip, ip, #80, 20	; 0x50000
   14590:	ldr	pc, [ip, #2736]!	; 0xab0

00014594 <memset@plt>:
   14594:	add	ip, pc, #0, 12
   14598:	add	ip, ip, #80, 20	; 0x50000
   1459c:	ldr	pc, [ip, #2728]!	; 0xaa8

000145a0 <strncpy@plt>:
   145a0:	add	ip, pc, #0, 12
   145a4:	add	ip, ip, #80, 20	; 0x50000
   145a8:	ldr	pc, [ip, #2720]!	; 0xaa0

000145ac <strtod@plt>:
   145ac:	add	ip, pc, #0, 12
   145b0:	add	ip, ip, #80, 20	; 0x50000
   145b4:	ldr	pc, [ip, #2712]!	; 0xa98

000145b8 <memchr@plt>:
   145b8:	add	ip, pc, #0, 12
   145bc:	add	ip, ip, #80, 20	; 0x50000
   145c0:	ldr	pc, [ip, #2704]!	; 0xa90

000145c4 <fputc@plt>:
   145c4:	add	ip, pc, #0, 12
   145c8:	add	ip, ip, #80, 20	; 0x50000
   145cc:	ldr	pc, [ip, #2696]!	; 0xa88

000145d0 <sprintf@plt>:
   145d0:	add	ip, pc, #0, 12
   145d4:	add	ip, ip, #80, 20	; 0x50000
   145d8:	ldr	pc, [ip, #2688]!	; 0xa80

000145dc <abort@plt>:
   145dc:	add	ip, pc, #0, 12
   145e0:	add	ip, ip, #80, 20	; 0x50000
   145e4:	ldr	pc, [ip, #2680]!	; 0xa78

000145e8 <__assert_fail@plt>:
   145e8:	add	ip, pc, #0, 12
   145ec:	add	ip, ip, #80, 20	; 0x50000
   145f0:	ldr	pc, [ip, #2672]!	; 0xa70

Disassembly of section .text:

000145f8 <_start@@Base>:
   145f8:	mov	fp, #0
   145fc:	mov	lr, #0
   14600:	pop	{r1}		; (ldr r1, [sp], #4)
   14604:	mov	r2, sp
   14608:	push	{r2}		; (str r2, [sp, #-4]!)
   1460c:	push	{r0}		; (str r0, [sp, #-4]!)
   14610:	ldr	ip, [pc, #16]	; 14628 <_start@@Base+0x30>
   14614:	push	{ip}		; (str ip, [sp, #-4]!)
   14618:	ldr	r0, [pc, #12]	; 1462c <_start@@Base+0x34>
   1461c:	ldr	r3, [pc, #12]	; 14630 <_start@@Base+0x38>
   14620:	bl	14558 <__libc_start_main@plt>
   14624:	bl	145dc <abort@plt>
   14628:	andeq	sp, r4, r0, lsl #30
   1462c:	ldrdeq	fp, [r2], -r4
   14630:	andeq	sp, r4, r0, lsr #29
   14634:	ldr	r3, [pc, #20]	; 14650 <_start@@Base+0x58>
   14638:	ldr	r2, [pc, #20]	; 14654 <_start@@Base+0x5c>
   1463c:	add	r3, pc, r3
   14640:	ldr	r2, [r3, r2]
   14644:	cmp	r2, #0
   14648:	bxeq	lr
   1464c:	b	14564 <__gmon_start__@plt>
   14650:			; <UNDEFINED> instruction: 0x000509bc
   14654:	andeq	r0, r0, ip, rrx
   14658:	ldr	r0, [pc, #24]	; 14678 <_start@@Base+0x80>
   1465c:	ldr	r3, [pc, #24]	; 1467c <_start@@Base+0x84>
   14660:	cmp	r3, r0
   14664:	bxeq	lr
   14668:	ldr	r3, [pc, #16]	; 14680 <_start@@Base+0x88>
   1466c:	cmp	r3, #0
   14670:	bxeq	lr
   14674:	bx	r3
   14678:	andeq	r5, r6, r8, lsr #9
   1467c:	andeq	r5, r6, r8, lsr #9
   14680:	andeq	r0, r0, r0
   14684:	ldr	r0, [pc, #36]	; 146b0 <_start@@Base+0xb8>
   14688:	ldr	r1, [pc, #36]	; 146b4 <_start@@Base+0xbc>
   1468c:	sub	r1, r1, r0
   14690:	asr	r1, r1, #2
   14694:	add	r1, r1, r1, lsr #31
   14698:	asrs	r1, r1, #1
   1469c:	bxeq	lr
   146a0:	ldr	r3, [pc, #16]	; 146b8 <_start@@Base+0xc0>
   146a4:	cmp	r3, #0
   146a8:	bxeq	lr
   146ac:	bx	r3
   146b0:	andeq	r5, r6, r8, lsr #9
   146b4:	andeq	r5, r6, r8, lsr #9
   146b8:	andeq	r0, r0, r0
   146bc:	push	{r4, lr}
   146c0:	ldr	r4, [pc, #24]	; 146e0 <_start@@Base+0xe8>
   146c4:	ldrb	r3, [r4]
   146c8:	cmp	r3, #0
   146cc:	popne	{r4, pc}
   146d0:	bl	14658 <_start@@Base+0x60>
   146d4:	mov	r3, #1
   146d8:	strb	r3, [r4]
   146dc:	pop	{r4, pc}
   146e0:	andeq	r5, r6, r8, lsr #9
   146e4:	b	14684 <_start@@Base+0x8c>
   146e8:	push	{fp}		; (str fp, [sp, #-4]!)
   146ec:	add	fp, sp, #0
   146f0:	sub	sp, sp, #12
   146f4:	mov	r3, r0
   146f8:	strb	r3, [fp, #-5]
   146fc:	ldrb	r3, [fp, #-5]
   14700:	mov	r0, r3
   14704:	add	sp, fp, #0
   14708:	pop	{fp}		; (ldr fp, [sp], #4)
   1470c:	bx	lr
   14710:	str	fp, [sp, #-8]!
   14714:	str	lr, [sp, #4]
   14718:	add	fp, sp, #4
   1471c:	sub	sp, sp, #8
   14720:	str	r0, [fp, #-8]
   14724:	mov	r3, r1
   14728:	strb	r3, [fp, #-9]
   1472c:	ldrb	r3, [fp, #-9]
   14730:	mov	r0, r3
   14734:	bl	146e8 <_start@@Base+0xf0>
   14738:	mov	r3, r0
   1473c:	mov	r2, r3
   14740:	ldr	r3, [fp, #-8]
   14744:	strb	r2, [r3]
   14748:	nop	{0}
   1474c:	sub	sp, fp, #4
   14750:	ldr	fp, [sp]
   14754:	add	sp, sp, #4
   14758:	pop	{pc}		; (ldr pc, [sp], #4)
   1475c:	push	{fp}		; (str fp, [sp, #-4]!)
   14760:	add	fp, sp, #0
   14764:	sub	sp, sp, #12
   14768:	mov	r3, r0
   1476c:	strh	r3, [fp, #-6]
   14770:	ldrh	r3, [fp, #-6]
   14774:	mov	r0, r3
   14778:	add	sp, fp, #0
   1477c:	pop	{fp}		; (ldr fp, [sp], #4)
   14780:	bx	lr
   14784:	str	fp, [sp, #-8]!
   14788:	str	lr, [sp, #4]
   1478c:	add	fp, sp, #4
   14790:	sub	sp, sp, #8
   14794:	str	r0, [fp, #-8]
   14798:	mov	r3, r1
   1479c:	strh	r3, [fp, #-10]
   147a0:	ldrh	r3, [fp, #-10]
   147a4:	mov	r0, r3
   147a8:	bl	1475c <_start@@Base+0x164>
   147ac:	mov	r3, r0
   147b0:	mov	r2, r3
   147b4:	ldr	r3, [fp, #-8]
   147b8:	strh	r2, [r3]
   147bc:	nop	{0}
   147c0:	sub	sp, fp, #4
   147c4:	ldr	fp, [sp]
   147c8:	add	sp, sp, #4
   147cc:	pop	{pc}		; (ldr pc, [sp], #4)
   147d0:	push	{fp}		; (str fp, [sp, #-4]!)
   147d4:	add	fp, sp, #0
   147d8:	sub	sp, sp, #12
   147dc:	str	r0, [fp, #-8]
   147e0:	ldr	r3, [fp, #-8]
   147e4:	mov	r0, r3
   147e8:	add	sp, fp, #0
   147ec:	pop	{fp}		; (ldr fp, [sp], #4)
   147f0:	bx	lr
   147f4:	str	fp, [sp, #-8]!
   147f8:	str	lr, [sp, #4]
   147fc:	add	fp, sp, #4
   14800:	sub	sp, sp, #8
   14804:	str	r0, [fp, #-8]
   14808:	str	r1, [fp, #-12]
   1480c:	ldr	r0, [fp, #-12]
   14810:	bl	147d0 <_start@@Base+0x1d8>
   14814:	mov	r2, r0
   14818:	ldr	r3, [fp, #-8]
   1481c:	str	r2, [r3]
   14820:	nop	{0}
   14824:	sub	sp, fp, #4
   14828:	ldr	fp, [sp]
   1482c:	add	sp, sp, #4
   14830:	pop	{pc}		; (ldr pc, [sp], #4)
   14834:	push	{fp}		; (str fp, [sp, #-4]!)
   14838:	add	fp, sp, #0
   1483c:	sub	sp, sp, #12
   14840:	strd	r0, [fp, #-12]
   14844:	ldrd	r2, [fp, #-12]
   14848:	mov	r0, r2
   1484c:	mov	r1, r3
   14850:	add	sp, fp, #0
   14854:	pop	{fp}		; (ldr fp, [sp], #4)
   14858:	bx	lr
   1485c:	str	fp, [sp, #-8]!
   14860:	str	lr, [sp, #4]
   14864:	add	fp, sp, #4
   14868:	sub	sp, sp, #16
   1486c:	str	r0, [fp, #-8]
   14870:	strd	r2, [fp, #-20]	; 0xffffffec
   14874:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14878:	bl	14834 <_start@@Base+0x23c>
   1487c:	mov	r2, r0
   14880:	mov	r3, r1
   14884:	ldr	r1, [fp, #-8]
   14888:	strd	r2, [r1]
   1488c:	nop	{0}
   14890:	sub	sp, fp, #4
   14894:	ldr	fp, [sp]
   14898:	add	sp, sp, #4
   1489c:	pop	{pc}		; (ldr pc, [sp], #4)
   148a0:	push	{fp}		; (str fp, [sp, #-4]!)
   148a4:	add	fp, sp, #0
   148a8:	sub	sp, sp, #12
   148ac:	mov	r3, r0
   148b0:	strb	r3, [fp, #-5]
   148b4:	ldrsb	r3, [fp, #-5]
   148b8:	mov	r0, r3
   148bc:	add	sp, fp, #0
   148c0:	pop	{fp}		; (ldr fp, [sp], #4)
   148c4:	bx	lr
   148c8:	str	fp, [sp, #-8]!
   148cc:	str	lr, [sp, #4]
   148d0:	add	fp, sp, #4
   148d4:	sub	sp, sp, #8
   148d8:	str	r0, [fp, #-8]
   148dc:	mov	r3, r1
   148e0:	strb	r3, [fp, #-9]
   148e4:	ldrsb	r3, [fp, #-9]
   148e8:	mov	r0, r3
   148ec:	bl	148a0 <_start@@Base+0x2a8>
   148f0:	mov	r3, r0
   148f4:	mov	r2, r3
   148f8:	ldr	r3, [fp, #-8]
   148fc:	strb	r2, [r3]
   14900:	nop	{0}
   14904:	sub	sp, fp, #4
   14908:	ldr	fp, [sp]
   1490c:	add	sp, sp, #4
   14910:	pop	{pc}		; (ldr pc, [sp], #4)
   14914:	push	{fp}		; (str fp, [sp, #-4]!)
   14918:	add	fp, sp, #0
   1491c:	sub	sp, sp, #12
   14920:	mov	r3, r0
   14924:	strh	r3, [fp, #-6]
   14928:	ldrsh	r3, [fp, #-6]
   1492c:	mov	r0, r3
   14930:	add	sp, fp, #0
   14934:	pop	{fp}		; (ldr fp, [sp], #4)
   14938:	bx	lr
   1493c:	str	fp, [sp, #-8]!
   14940:	str	lr, [sp, #4]
   14944:	add	fp, sp, #4
   14948:	sub	sp, sp, #8
   1494c:	str	r0, [fp, #-8]
   14950:	mov	r3, r1
   14954:	strh	r3, [fp, #-10]
   14958:	ldrsh	r3, [fp, #-10]
   1495c:	mov	r0, r3
   14960:	bl	14914 <_start@@Base+0x31c>
   14964:	mov	r3, r0
   14968:	mov	r2, r3
   1496c:	ldr	r3, [fp, #-8]
   14970:	strh	r2, [r3]
   14974:	nop	{0}
   14978:	sub	sp, fp, #4
   1497c:	ldr	fp, [sp]
   14980:	add	sp, sp, #4
   14984:	pop	{pc}		; (ldr pc, [sp], #4)
   14988:	push	{fp}		; (str fp, [sp, #-4]!)
   1498c:	add	fp, sp, #0
   14990:	sub	sp, sp, #12
   14994:	str	r0, [fp, #-8]
   14998:	ldr	r3, [fp, #-8]
   1499c:	mov	r0, r3
   149a0:	add	sp, fp, #0
   149a4:	pop	{fp}		; (ldr fp, [sp], #4)
   149a8:	bx	lr
   149ac:	str	fp, [sp, #-8]!
   149b0:	str	lr, [sp, #4]
   149b4:	add	fp, sp, #4
   149b8:	sub	sp, sp, #8
   149bc:	str	r0, [fp, #-8]
   149c0:	str	r1, [fp, #-12]
   149c4:	ldr	r0, [fp, #-12]
   149c8:	bl	14988 <_start@@Base+0x390>
   149cc:	mov	r2, r0
   149d0:	ldr	r3, [fp, #-8]
   149d4:	str	r2, [r3]
   149d8:	nop	{0}
   149dc:	sub	sp, fp, #4
   149e0:	ldr	fp, [sp]
   149e4:	add	sp, sp, #4
   149e8:	pop	{pc}		; (ldr pc, [sp], #4)
   149ec:	push	{fp}		; (str fp, [sp, #-4]!)
   149f0:	add	fp, sp, #0
   149f4:	sub	sp, sp, #12
   149f8:	strd	r0, [fp, #-12]
   149fc:	ldrd	r2, [fp, #-12]
   14a00:	mov	r0, r2
   14a04:	mov	r1, r3
   14a08:	add	sp, fp, #0
   14a0c:	pop	{fp}		; (ldr fp, [sp], #4)
   14a10:	bx	lr
   14a14:	str	fp, [sp, #-8]!
   14a18:	str	lr, [sp, #4]
   14a1c:	add	fp, sp, #4
   14a20:	sub	sp, sp, #16
   14a24:	str	r0, [fp, #-8]
   14a28:	strd	r2, [fp, #-20]	; 0xffffffec
   14a2c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14a30:	bl	149ec <_start@@Base+0x3f4>
   14a34:	mov	r2, r0
   14a38:	mov	r3, r1
   14a3c:	ldr	r1, [fp, #-8]
   14a40:	strd	r2, [r1]
   14a44:	nop	{0}
   14a48:	sub	sp, fp, #4
   14a4c:	ldr	fp, [sp]
   14a50:	add	sp, sp, #4
   14a54:	pop	{pc}		; (ldr pc, [sp], #4)
   14a58:	push	{fp}		; (str fp, [sp, #-4]!)
   14a5c:	add	fp, sp, #0
   14a60:	sub	sp, sp, #20
   14a64:	vstr	s0, [fp, #-16]
   14a68:	ldr	r3, [fp, #-16]
   14a6c:	str	r3, [fp, #-8]
   14a70:	ldr	r3, [fp, #-8]
   14a74:	str	r3, [fp, #-8]
   14a78:	ldr	r3, [fp, #-8]
   14a7c:	vmov	s15, r3
   14a80:	vmov.f32	s0, s15
   14a84:	add	sp, fp, #0
   14a88:	pop	{fp}		; (ldr fp, [sp], #4)
   14a8c:	bx	lr
   14a90:	str	fp, [sp, #-8]!
   14a94:	str	lr, [sp, #4]
   14a98:	add	fp, sp, #4
   14a9c:	sub	sp, sp, #8
   14aa0:	str	r0, [fp, #-8]
   14aa4:	vstr	s0, [fp, #-12]
   14aa8:	vldr	s0, [fp, #-12]
   14aac:	bl	14a58 <_start@@Base+0x460>
   14ab0:	vmov.f32	s15, s0
   14ab4:	ldr	r3, [fp, #-8]
   14ab8:	vstr	s15, [r3]
   14abc:	nop	{0}
   14ac0:	sub	sp, fp, #4
   14ac4:	ldr	fp, [sp]
   14ac8:	add	sp, sp, #4
   14acc:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad0:	push	{fp}		; (str fp, [sp, #-4]!)
   14ad4:	add	fp, sp, #0
   14ad8:	sub	sp, sp, #20
   14adc:	vstr	d0, [fp, #-20]	; 0xffffffec
   14ae0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14ae4:	strd	r2, [fp, #-12]
   14ae8:	ldrd	r2, [fp, #-12]
   14aec:	strd	r2, [fp, #-12]
   14af0:	ldrd	r2, [fp, #-12]
   14af4:	vmov	d7, r2, r3
   14af8:	vmov.f64	d0, d7
   14afc:	add	sp, fp, #0
   14b00:	pop	{fp}		; (ldr fp, [sp], #4)
   14b04:	bx	lr
   14b08:	str	fp, [sp, #-8]!
   14b0c:	str	lr, [sp, #4]
   14b10:	add	fp, sp, #4
   14b14:	sub	sp, sp, #16
   14b18:	str	r0, [fp, #-8]
   14b1c:	vstr	d0, [fp, #-20]	; 0xffffffec
   14b20:	vldr	d0, [fp, #-20]	; 0xffffffec
   14b24:	bl	14ad0 <_start@@Base+0x4d8>
   14b28:	vmov.f64	d7, d0
   14b2c:	ldr	r3, [fp, #-8]
   14b30:	vstr	d7, [r3]
   14b34:	nop	{0}
   14b38:	sub	sp, fp, #4
   14b3c:	ldr	fp, [sp]
   14b40:	add	sp, sp, #4
   14b44:	pop	{pc}		; (ldr pc, [sp], #4)
   14b48:	push	{fp}		; (str fp, [sp, #-4]!)
   14b4c:	add	fp, sp, #0
   14b50:	sub	sp, sp, #12
   14b54:	mov	r3, r0
   14b58:	strb	r3, [fp, #-5]
   14b5c:	ldrb	r3, [fp, #-5]
   14b60:	mov	r0, r3
   14b64:	add	sp, fp, #0
   14b68:	pop	{fp}		; (ldr fp, [sp], #4)
   14b6c:	bx	lr
   14b70:	str	fp, [sp, #-8]!
   14b74:	str	lr, [sp, #4]
   14b78:	add	fp, sp, #4
   14b7c:	sub	sp, sp, #8
   14b80:	str	r0, [fp, #-8]
   14b84:	mov	r3, r1
   14b88:	strb	r3, [fp, #-9]
   14b8c:	ldrb	r3, [fp, #-9]
   14b90:	mov	r0, r3
   14b94:	bl	14b48 <_start@@Base+0x550>
   14b98:	mov	r3, r0
   14b9c:	mov	r2, r3
   14ba0:	ldr	r3, [fp, #-8]
   14ba4:	strb	r2, [r3]
   14ba8:	nop	{0}
   14bac:	sub	sp, fp, #4
   14bb0:	ldr	fp, [sp]
   14bb4:	add	sp, sp, #4
   14bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bbc:	str	fp, [sp, #-8]!
   14bc0:	str	lr, [sp, #4]
   14bc4:	add	fp, sp, #4
   14bc8:	sub	sp, sp, #16
   14bcc:	str	r0, [fp, #-8]
   14bd0:	str	r1, [fp, #-12]
   14bd4:	str	r2, [fp, #-16]
   14bd8:	str	r3, [fp, #-20]	; 0xffffffec
   14bdc:	mov	r2, #40	; 0x28
   14be0:	mov	r1, #0
   14be4:	ldr	r0, [fp, #-8]
   14be8:	bl	14594 <memset@plt>
   14bec:	ldr	r3, [fp, #-8]
   14bf0:	ldr	r2, [fp, #-12]
   14bf4:	str	r2, [r3]
   14bf8:	ldr	r3, [fp, #-8]
   14bfc:	ldr	r2, [fp, #-16]
   14c00:	str	r2, [r3, #4]
   14c04:	ldr	r3, [fp, #-8]
   14c08:	mov	r2, #1
   14c0c:	str	r2, [r3, #12]
   14c10:	ldr	r3, [fp, #-8]
   14c14:	ldr	r2, [fp, #4]
   14c18:	str	r2, [r3, #8]
   14c1c:	ldr	r3, [fp, #-8]
   14c20:	ldr	r2, [fp, #-16]
   14c24:	str	r2, [r3, #24]
   14c28:	ldr	r3, [fp, #-8]
   14c2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c30:	str	r2, [r3, #28]
   14c34:	ldr	r3, [fp, #-8]
   14c38:	ldr	r2, [fp, #-16]
   14c3c:	str	r2, [r3, #32]
   14c40:	nop	{0}
   14c44:	sub	sp, fp, #4
   14c48:	ldr	fp, [sp]
   14c4c:	add	sp, sp, #4
   14c50:	pop	{pc}		; (ldr pc, [sp], #4)
   14c54:	str	fp, [sp, #-8]!
   14c58:	str	lr, [sp, #4]
   14c5c:	add	fp, sp, #4
   14c60:	sub	sp, sp, #16
   14c64:	str	r0, [fp, #-8]
   14c68:	str	r1, [fp, #-12]
   14c6c:	str	r2, [fp, #-16]
   14c70:	ldr	r2, [fp, #-16]
   14c74:	ldr	r3, [fp, #-12]
   14c78:	sub	r3, r2, r3
   14c7c:	cmp	r3, #1
   14c80:	ble	14ccc <_start@@Base+0x6d4>
   14c84:	ldr	r3, [fp, #-12]
   14c88:	ldrb	r3, [r3]
   14c8c:	cmp	r3, #32
   14c90:	bls	14c9c <_start@@Base+0x6a4>
   14c94:	ldr	r3, [fp, #-12]
   14c98:	b	14ce0 <_start@@Base+0x6e8>
   14c9c:	ldr	r3, [fp, #-12]
   14ca0:	ldrb	r3, [r3]
   14ca4:	cmp	r3, #32
   14ca8:	bne	14ccc <_start@@Base+0x6d4>
   14cac:	ldr	r3, [fp, #-12]
   14cb0:	add	r3, r3, #1
   14cb4:	ldrb	r3, [r3]
   14cb8:	cmp	r3, #32
   14cbc:	bls	14ccc <_start@@Base+0x6d4>
   14cc0:	ldr	r3, [fp, #-12]
   14cc4:	add	r3, r3, #1
   14cc8:	b	14ce0 <_start@@Base+0x6e8>
   14ccc:	ldr	r2, [fp, #-16]
   14cd0:	ldr	r1, [fp, #-12]
   14cd4:	ldr	r0, [fp, #-8]
   14cd8:	bl	3b948 <flatcc_json_parser_space_ext@@Base>
   14cdc:	mov	r3, r0
   14ce0:	mov	r0, r3
   14ce4:	sub	sp, fp, #4
   14ce8:	ldr	fp, [sp]
   14cec:	add	sp, sp, #4
   14cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cf4:	str	fp, [sp, #-8]!
   14cf8:	str	lr, [sp, #4]
   14cfc:	add	fp, sp, #4
   14d00:	sub	sp, sp, #16
   14d04:	str	r0, [fp, #-8]
   14d08:	str	r1, [fp, #-12]
   14d0c:	str	r2, [fp, #-16]
   14d10:	ldr	r2, [fp, #-12]
   14d14:	ldr	r3, [fp, #-16]
   14d18:	cmp	r2, r3
   14d1c:	bne	14d28 <_start@@Base+0x730>
   14d20:	ldr	r3, [fp, #-12]
   14d24:	b	14d64 <_start@@Base+0x76c>
   14d28:	ldr	r3, [fp, #-12]
   14d2c:	ldrb	r3, [r3]
   14d30:	cmp	r3, #34	; 0x22
   14d34:	bne	14d4c <_start@@Base+0x754>
   14d38:	ldr	r3, [fp, #-12]
   14d3c:	add	r3, r3, #1
   14d40:	str	r3, [fp, #-12]
   14d44:	ldr	r3, [fp, #-12]
   14d48:	b	14d64 <_start@@Base+0x76c>
   14d4c:	mov	r3, #5
   14d50:	ldr	r2, [fp, #-16]
   14d54:	ldr	r1, [fp, #-12]
   14d58:	ldr	r0, [fp, #-8]
   14d5c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   14d60:	mov	r3, r0
   14d64:	mov	r0, r3
   14d68:	sub	sp, fp, #4
   14d6c:	ldr	fp, [sp]
   14d70:	add	sp, sp, #4
   14d74:	pop	{pc}		; (ldr pc, [sp], #4)
   14d78:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14d7c:	strd	r6, [sp, #8]
   14d80:	strd	r8, [sp, #16]
   14d84:	str	fp, [sp, #24]
   14d88:	add	fp, sp, #24
   14d8c:	sub	sp, sp, #76	; 0x4c
   14d90:	str	r0, [fp, #-48]	; 0xffffffd0
   14d94:	str	r1, [fp, #-52]	; 0xffffffcc
   14d98:	mov	r2, #0
   14d9c:	mov	r3, #0
   14da0:	strd	r2, [fp, #-36]	; 0xffffffdc
   14da4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14da8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14dac:	sub	r3, r2, r3
   14db0:	str	r3, [fp, #-40]	; 0xffffffd8
   14db4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14db8:	cmp	r3, #8
   14dbc:	bls	14dc8 <_start@@Base+0x7d0>
   14dc0:	mov	r3, #8
   14dc4:	str	r3, [fp, #-40]	; 0xffffffd8
   14dc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14dcc:	cmp	r3, #8
   14dd0:	addls	pc, pc, r3, lsl #2
   14dd4:	b	14fd4 <_start@@Base+0x9dc>
   14dd8:	b	14fd4 <_start@@Base+0x9dc>
   14ddc:	b	14f94 <_start@@Base+0x99c>
   14de0:	b	14f54 <_start@@Base+0x95c>
   14de4:	b	14f14 <_start@@Base+0x91c>
   14de8:	b	14ed4 <_start@@Base+0x8dc>
   14dec:	b	14e9c <_start@@Base+0x8a4>
   14df0:	b	14e58 <_start@@Base+0x860>
   14df4:	b	14e20 <_start@@Base+0x828>
   14df8:	b	14dfc <_start@@Base+0x804>
   14dfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e00:	add	r3, r3, #7
   14e04:	ldrb	r3, [r3]
   14e08:	uxtb	r0, r3
   14e0c:	mov	r1, #0
   14e10:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e14:	orr	r6, r2, r0
   14e18:	orr	r7, r3, r1
   14e1c:	strd	r6, [fp, #-36]	; 0xffffffdc
   14e20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e24:	add	r3, r3, #6
   14e28:	ldrb	r3, [r3]
   14e2c:	uxtb	r2, r3
   14e30:	mov	r3, #0
   14e34:	mov	r0, #0
   14e38:	mov	r1, #0
   14e3c:	lsl	r1, r3, #8
   14e40:	orr	r1, r1, r2, lsr #24
   14e44:	lsl	r0, r2, #8
   14e48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e4c:	orr	r8, r2, r0
   14e50:	orr	r9, r3, r1
   14e54:	strd	r8, [fp, #-36]	; 0xffffffdc
   14e58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e5c:	add	r3, r3, #5
   14e60:	ldrb	r3, [r3]
   14e64:	uxtb	r2, r3
   14e68:	mov	r3, #0
   14e6c:	mov	r0, #0
   14e70:	mov	r1, #0
   14e74:	lsl	r1, r3, #16
   14e78:	orr	r1, r1, r2, lsr #16
   14e7c:	lsl	r0, r2, #16
   14e80:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e84:	orr	ip, r2, r0
   14e88:	str	ip, [fp, #-60]	; 0xffffffc4
   14e8c:	orr	r3, r3, r1
   14e90:	str	r3, [fp, #-56]	; 0xffffffc8
   14e94:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   14e98:	strd	r2, [fp, #-36]	; 0xffffffdc
   14e9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ea0:	add	r3, r3, #4
   14ea4:	ldrb	r3, [r3]
   14ea8:	uxtb	r2, r3
   14eac:	mov	r3, #0
   14eb0:	lsr	r5, r2, #8
   14eb4:	lsl	r4, r2, #24
   14eb8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14ebc:	orr	r1, r2, r4
   14ec0:	str	r1, [fp, #-68]	; 0xffffffbc
   14ec4:	orr	r3, r3, r5
   14ec8:	str	r3, [fp, #-64]	; 0xffffffc0
   14ecc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14ed0:	strd	r2, [fp, #-36]	; 0xffffffdc
   14ed4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ed8:	add	r3, r3, #3
   14edc:	ldrb	r3, [r3]
   14ee0:	uxtb	r0, r3
   14ee4:	mov	r1, #0
   14ee8:	mov	r2, #0
   14eec:	mov	r3, #0
   14ef0:	mov	r3, r0
   14ef4:	mov	r2, #0
   14ef8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14efc:	orr	ip, r0, r2
   14f00:	str	ip, [fp, #-76]	; 0xffffffb4
   14f04:	orr	r3, r1, r3
   14f08:	str	r3, [fp, #-72]	; 0xffffffb8
   14f0c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   14f10:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f18:	add	r3, r3, #2
   14f1c:	ldrb	r3, [r3]
   14f20:	uxtb	r0, r3
   14f24:	mov	r1, #0
   14f28:	mov	r2, #0
   14f2c:	mov	r3, #0
   14f30:	lsl	r3, r0, #8
   14f34:	mov	r2, #0
   14f38:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14f3c:	orr	ip, r0, r2
   14f40:	str	ip, [fp, #-84]	; 0xffffffac
   14f44:	orr	r3, r1, r3
   14f48:	str	r3, [fp, #-80]	; 0xffffffb0
   14f4c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14f50:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f58:	add	r3, r3, #1
   14f5c:	ldrb	r3, [r3]
   14f60:	uxtb	r0, r3
   14f64:	mov	r1, #0
   14f68:	mov	r2, #0
   14f6c:	mov	r3, #0
   14f70:	lsl	r3, r0, #16
   14f74:	mov	r2, #0
   14f78:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14f7c:	orr	ip, r0, r2
   14f80:	str	ip, [fp, #-92]	; 0xffffffa4
   14f84:	orr	r3, r1, r3
   14f88:	str	r3, [fp, #-88]	; 0xffffffa8
   14f8c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   14f90:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f98:	ldrb	r3, [r3]
   14f9c:	uxtb	r0, r3
   14fa0:	mov	r1, #0
   14fa4:	mov	r2, #0
   14fa8:	mov	r3, #0
   14fac:	lsl	r3, r0, #24
   14fb0:	mov	r2, #0
   14fb4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14fb8:	orr	ip, r0, r2
   14fbc:	str	ip, [fp, #-100]	; 0xffffff9c
   14fc0:	orr	r3, r1, r3
   14fc4:	str	r3, [fp, #-96]	; 0xffffffa0
   14fc8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   14fcc:	strd	r2, [fp, #-36]	; 0xffffffdc
   14fd0:	nop	{0}
   14fd4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14fd8:	mov	r0, r2
   14fdc:	mov	r1, r3
   14fe0:	sub	sp, fp, #24
   14fe4:	ldrd	r4, [sp]
   14fe8:	ldrd	r6, [sp, #8]
   14fec:	ldrd	r8, [sp, #16]
   14ff0:	ldr	fp, [sp, #24]
   14ff4:	add	sp, sp, #28
   14ff8:	bx	lr
   14ffc:	str	fp, [sp, #-8]!
   15000:	str	lr, [sp, #4]
   15004:	add	fp, sp, #4
   15008:	sub	sp, sp, #16
   1500c:	str	r0, [fp, #-16]
   15010:	str	r1, [fp, #-20]	; 0xffffffec
   15014:	ldr	r2, [fp, #-20]	; 0xffffffec
   15018:	ldr	r3, [fp, #-16]
   1501c:	sub	r3, r2, r3
   15020:	str	r3, [fp, #-8]
   15024:	ldr	r1, [fp, #-20]	; 0xffffffec
   15028:	ldr	r0, [fp, #-16]
   1502c:	bl	14d78 <_start@@Base+0x780>
   15030:	mov	r2, r0
   15034:	mov	r3, r1
   15038:	mov	r0, r2
   1503c:	mov	r1, r3
   15040:	sub	sp, fp, #4
   15044:	ldr	fp, [sp]
   15048:	add	sp, sp, #4
   1504c:	pop	{pc}		; (ldr pc, [sp], #4)
   15050:	push	{fp}		; (str fp, [sp, #-4]!)
   15054:	add	fp, sp, #0
   15058:	sub	sp, sp, #28
   1505c:	str	r0, [fp, #-16]
   15060:	str	r1, [fp, #-20]	; 0xffffffec
   15064:	str	r2, [fp, #-24]	; 0xffffffe8
   15068:	str	r3, [fp, #-28]	; 0xffffffe4
   1506c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15070:	str	r3, [fp, #-8]
   15074:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15078:	ldr	r3, [fp, #-20]	; 0xffffffec
   1507c:	sub	r3, r2, r3
   15080:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15084:	cmp	r2, r3
   15088:	blt	15094 <_start@@Base+0xa9c>
   1508c:	ldr	r3, [fp, #-8]
   15090:	b	150c4 <_start@@Base+0xacc>
   15094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15098:	ldr	r2, [fp, #-20]	; 0xffffffec
   1509c:	add	r3, r2, r3
   150a0:	ldrb	r3, [r3]
   150a4:	cmp	r3, #46	; 0x2e
   150a8:	beq	150b4 <_start@@Base+0xabc>
   150ac:	ldr	r3, [fp, #-8]
   150b0:	b	150c4 <_start@@Base+0xacc>
   150b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150b8:	add	r3, r3, #1
   150bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   150c0:	add	r3, r2, r3
   150c4:	mov	r0, r3
   150c8:	add	sp, fp, #0
   150cc:	pop	{fp}		; (ldr fp, [sp], #4)
   150d0:	bx	lr
   150d4:	str	fp, [sp, #-8]!
   150d8:	str	lr, [sp, #4]
   150dc:	add	fp, sp, #4
   150e0:	sub	sp, sp, #16
   150e4:	str	r0, [fp, #-8]
   150e8:	str	r1, [fp, #-12]
   150ec:	str	r2, [fp, #-16]
   150f0:	ldr	r2, [fp, #-16]
   150f4:	ldr	r1, [fp, #-12]
   150f8:	ldr	r0, [fp, #-8]
   150fc:	bl	14cf4 <_start@@Base+0x6fc>
   15100:	str	r0, [fp, #-12]
   15104:	ldr	r2, [fp, #-16]
   15108:	ldr	r1, [fp, #-12]
   1510c:	ldr	r0, [fp, #-8]
   15110:	bl	14c54 <_start@@Base+0x65c>
   15114:	str	r0, [fp, #-12]
   15118:	ldr	r3, [fp, #-12]
   1511c:	mov	r0, r3
   15120:	sub	sp, fp, #4
   15124:	ldr	fp, [sp]
   15128:	add	sp, sp, #4
   1512c:	pop	{pc}		; (ldr pc, [sp], #4)
   15130:	str	fp, [sp, #-8]!
   15134:	str	lr, [sp, #4]
   15138:	add	fp, sp, #4
   1513c:	sub	sp, sp, #16
   15140:	str	r0, [fp, #-8]
   15144:	str	r1, [fp, #-12]
   15148:	str	r2, [fp, #-16]
   1514c:	str	r3, [fp, #-20]	; 0xffffffec
   15150:	ldr	r2, [fp, #-12]
   15154:	ldr	r3, [fp, #-16]
   15158:	cmp	r2, r3
   1515c:	beq	15170 <_start@@Base+0xb78>
   15160:	ldr	r3, [fp, #-12]
   15164:	ldrb	r3, [r3]
   15168:	cmp	r3, #123	; 0x7b
   1516c:	beq	15198 <_start@@Base+0xba0>
   15170:	ldr	r3, [fp, #-20]	; 0xffffffec
   15174:	mov	r2, #0
   15178:	str	r2, [r3]
   1517c:	mov	r3, #21
   15180:	ldr	r2, [fp, #-16]
   15184:	ldr	r1, [fp, #-12]
   15188:	ldr	r0, [fp, #-8]
   1518c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15190:	mov	r3, r0
   15194:	b	15210 <_start@@Base+0xc18>
   15198:	ldr	r3, [fp, #-12]
   1519c:	add	r3, r3, #1
   151a0:	ldr	r2, [fp, #-16]
   151a4:	mov	r1, r3
   151a8:	ldr	r0, [fp, #-8]
   151ac:	bl	14c54 <_start@@Base+0x65c>
   151b0:	str	r0, [fp, #-12]
   151b4:	ldr	r2, [fp, #-12]
   151b8:	ldr	r3, [fp, #-16]
   151bc:	cmp	r2, r3
   151c0:	beq	15200 <_start@@Base+0xc08>
   151c4:	ldr	r3, [fp, #-12]
   151c8:	ldrb	r3, [r3]
   151cc:	cmp	r3, #125	; 0x7d
   151d0:	bne	15200 <_start@@Base+0xc08>
   151d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   151d8:	mov	r2, #0
   151dc:	str	r2, [r3]
   151e0:	ldr	r3, [fp, #-12]
   151e4:	add	r3, r3, #1
   151e8:	ldr	r2, [fp, #-16]
   151ec:	mov	r1, r3
   151f0:	ldr	r0, [fp, #-8]
   151f4:	bl	14c54 <_start@@Base+0x65c>
   151f8:	mov	r3, r0
   151fc:	b	15210 <_start@@Base+0xc18>
   15200:	ldr	r3, [fp, #-20]	; 0xffffffec
   15204:	mov	r2, #1
   15208:	str	r2, [r3]
   1520c:	ldr	r3, [fp, #-12]
   15210:	mov	r0, r3
   15214:	sub	sp, fp, #4
   15218:	ldr	fp, [sp]
   1521c:	add	sp, sp, #4
   15220:	pop	{pc}		; (ldr pc, [sp], #4)
   15224:	str	fp, [sp, #-8]!
   15228:	str	lr, [sp, #4]
   1522c:	add	fp, sp, #4
   15230:	sub	sp, sp, #16
   15234:	str	r0, [fp, #-8]
   15238:	str	r1, [fp, #-12]
   1523c:	str	r2, [fp, #-16]
   15240:	str	r3, [fp, #-20]	; 0xffffffec
   15244:	ldr	r2, [fp, #-16]
   15248:	ldr	r1, [fp, #-12]
   1524c:	ldr	r0, [fp, #-8]
   15250:	bl	14c54 <_start@@Base+0x65c>
   15254:	str	r0, [fp, #-12]
   15258:	ldr	r2, [fp, #-12]
   1525c:	ldr	r3, [fp, #-16]
   15260:	cmp	r2, r3
   15264:	bne	1527c <_start@@Base+0xc84>
   15268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1526c:	mov	r2, #0
   15270:	str	r2, [r3]
   15274:	ldr	r3, [fp, #-12]
   15278:	b	15384 <_start@@Base+0xd8c>
   1527c:	ldr	r3, [fp, #-12]
   15280:	ldrb	r3, [r3]
   15284:	cmp	r3, #44	; 0x2c
   15288:	beq	152e4 <_start@@Base+0xcec>
   1528c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15290:	mov	r2, #0
   15294:	str	r2, [r3]
   15298:	ldr	r3, [fp, #-12]
   1529c:	ldrb	r3, [r3]
   152a0:	cmp	r3, #125	; 0x7d
   152a4:	beq	152c4 <_start@@Base+0xccc>
   152a8:	mov	r3, #10
   152ac:	ldr	r2, [fp, #-16]
   152b0:	ldr	r1, [fp, #-12]
   152b4:	ldr	r0, [fp, #-8]
   152b8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   152bc:	mov	r3, r0
   152c0:	b	15384 <_start@@Base+0xd8c>
   152c4:	ldr	r3, [fp, #-12]
   152c8:	add	r3, r3, #1
   152cc:	ldr	r2, [fp, #-16]
   152d0:	mov	r1, r3
   152d4:	ldr	r0, [fp, #-8]
   152d8:	bl	14c54 <_start@@Base+0x65c>
   152dc:	mov	r3, r0
   152e0:	b	15384 <_start@@Base+0xd8c>
   152e4:	ldr	r3, [fp, #-12]
   152e8:	add	r3, r3, #1
   152ec:	ldr	r2, [fp, #-16]
   152f0:	mov	r1, r3
   152f4:	ldr	r0, [fp, #-8]
   152f8:	bl	14c54 <_start@@Base+0x65c>
   152fc:	str	r0, [fp, #-12]
   15300:	ldr	r2, [fp, #-12]
   15304:	ldr	r3, [fp, #-16]
   15308:	cmp	r2, r3
   1530c:	bne	15338 <_start@@Base+0xd40>
   15310:	ldr	r3, [fp, #-20]	; 0xffffffec
   15314:	mov	r2, #0
   15318:	str	r2, [r3]
   1531c:	mov	r3, #10
   15320:	ldr	r2, [fp, #-16]
   15324:	ldr	r1, [fp, #-12]
   15328:	ldr	r0, [fp, #-8]
   1532c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15330:	mov	r3, r0
   15334:	b	15384 <_start@@Base+0xd8c>
   15338:	ldr	r3, [fp, #-12]
   1533c:	ldrb	r3, [r3]
   15340:	cmp	r3, #125	; 0x7d
   15344:	bne	15374 <_start@@Base+0xd7c>
   15348:	ldr	r3, [fp, #-20]	; 0xffffffec
   1534c:	mov	r2, #0
   15350:	str	r2, [r3]
   15354:	ldr	r3, [fp, #-12]
   15358:	add	r3, r3, #1
   1535c:	ldr	r2, [fp, #-16]
   15360:	mov	r1, r3
   15364:	ldr	r0, [fp, #-8]
   15368:	bl	14c54 <_start@@Base+0x65c>
   1536c:	mov	r3, r0
   15370:	b	15384 <_start@@Base+0xd8c>
   15374:	ldr	r3, [fp, #-20]	; 0xffffffec
   15378:	mov	r2, #1
   1537c:	str	r2, [r3]
   15380:	ldr	r3, [fp, #-12]
   15384:	mov	r0, r3
   15388:	sub	sp, fp, #4
   1538c:	ldr	fp, [sp]
   15390:	add	sp, sp, #4
   15394:	pop	{pc}		; (ldr pc, [sp], #4)
   15398:	str	fp, [sp, #-8]!
   1539c:	str	lr, [sp, #4]
   153a0:	add	fp, sp, #4
   153a4:	sub	sp, sp, #16
   153a8:	str	r0, [fp, #-8]
   153ac:	str	r1, [fp, #-12]
   153b0:	str	r2, [fp, #-16]
   153b4:	str	r3, [fp, #-20]	; 0xffffffec
   153b8:	ldr	r2, [fp, #-12]
   153bc:	ldr	r3, [fp, #-16]
   153c0:	cmp	r2, r3
   153c4:	beq	153d8 <_start@@Base+0xde0>
   153c8:	ldr	r3, [fp, #-12]
   153cc:	ldrb	r3, [r3]
   153d0:	cmp	r3, #91	; 0x5b
   153d4:	beq	15400 <_start@@Base+0xe08>
   153d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   153dc:	mov	r2, #0
   153e0:	str	r2, [r3]
   153e4:	mov	r3, #22
   153e8:	ldr	r2, [fp, #-16]
   153ec:	ldr	r1, [fp, #-12]
   153f0:	ldr	r0, [fp, #-8]
   153f4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   153f8:	mov	r3, r0
   153fc:	b	15478 <_start@@Base+0xe80>
   15400:	ldr	r3, [fp, #-12]
   15404:	add	r3, r3, #1
   15408:	ldr	r2, [fp, #-16]
   1540c:	mov	r1, r3
   15410:	ldr	r0, [fp, #-8]
   15414:	bl	14c54 <_start@@Base+0x65c>
   15418:	str	r0, [fp, #-12]
   1541c:	ldr	r2, [fp, #-12]
   15420:	ldr	r3, [fp, #-16]
   15424:	cmp	r2, r3
   15428:	beq	15468 <_start@@Base+0xe70>
   1542c:	ldr	r3, [fp, #-12]
   15430:	ldrb	r3, [r3]
   15434:	cmp	r3, #93	; 0x5d
   15438:	bne	15468 <_start@@Base+0xe70>
   1543c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15440:	mov	r2, #0
   15444:	str	r2, [r3]
   15448:	ldr	r3, [fp, #-12]
   1544c:	add	r3, r3, #1
   15450:	ldr	r2, [fp, #-16]
   15454:	mov	r1, r3
   15458:	ldr	r0, [fp, #-8]
   1545c:	bl	14c54 <_start@@Base+0x65c>
   15460:	mov	r3, r0
   15464:	b	15478 <_start@@Base+0xe80>
   15468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1546c:	mov	r2, #1
   15470:	str	r2, [r3]
   15474:	ldr	r3, [fp, #-12]
   15478:	mov	r0, r3
   1547c:	sub	sp, fp, #4
   15480:	ldr	fp, [sp]
   15484:	add	sp, sp, #4
   15488:	pop	{pc}		; (ldr pc, [sp], #4)
   1548c:	str	fp, [sp, #-8]!
   15490:	str	lr, [sp, #4]
   15494:	add	fp, sp, #4
   15498:	sub	sp, sp, #16
   1549c:	str	r0, [fp, #-8]
   154a0:	str	r1, [fp, #-12]
   154a4:	str	r2, [fp, #-16]
   154a8:	str	r3, [fp, #-20]	; 0xffffffec
   154ac:	ldr	r2, [fp, #-16]
   154b0:	ldr	r1, [fp, #-12]
   154b4:	ldr	r0, [fp, #-8]
   154b8:	bl	14c54 <_start@@Base+0x65c>
   154bc:	str	r0, [fp, #-12]
   154c0:	ldr	r2, [fp, #-12]
   154c4:	ldr	r3, [fp, #-16]
   154c8:	cmp	r2, r3
   154cc:	bne	154e4 <_start@@Base+0xeec>
   154d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   154d4:	mov	r2, #0
   154d8:	str	r2, [r3]
   154dc:	ldr	r3, [fp, #-12]
   154e0:	b	155ec <_start@@Base+0xff4>
   154e4:	ldr	r3, [fp, #-12]
   154e8:	ldrb	r3, [r3]
   154ec:	cmp	r3, #44	; 0x2c
   154f0:	beq	1554c <_start@@Base+0xf54>
   154f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   154f8:	mov	r2, #0
   154fc:	str	r2, [r3]
   15500:	ldr	r3, [fp, #-12]
   15504:	ldrb	r3, [r3]
   15508:	cmp	r3, #93	; 0x5d
   1550c:	beq	1552c <_start@@Base+0xf34>
   15510:	mov	r3, #9
   15514:	ldr	r2, [fp, #-16]
   15518:	ldr	r1, [fp, #-12]
   1551c:	ldr	r0, [fp, #-8]
   15520:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15524:	mov	r3, r0
   15528:	b	155ec <_start@@Base+0xff4>
   1552c:	ldr	r3, [fp, #-12]
   15530:	add	r3, r3, #1
   15534:	ldr	r2, [fp, #-16]
   15538:	mov	r1, r3
   1553c:	ldr	r0, [fp, #-8]
   15540:	bl	14c54 <_start@@Base+0x65c>
   15544:	mov	r3, r0
   15548:	b	155ec <_start@@Base+0xff4>
   1554c:	ldr	r3, [fp, #-12]
   15550:	add	r3, r3, #1
   15554:	ldr	r2, [fp, #-16]
   15558:	mov	r1, r3
   1555c:	ldr	r0, [fp, #-8]
   15560:	bl	14c54 <_start@@Base+0x65c>
   15564:	str	r0, [fp, #-12]
   15568:	ldr	r2, [fp, #-12]
   1556c:	ldr	r3, [fp, #-16]
   15570:	cmp	r2, r3
   15574:	bne	155a0 <_start@@Base+0xfa8>
   15578:	ldr	r3, [fp, #-20]	; 0xffffffec
   1557c:	mov	r2, #0
   15580:	str	r2, [r3]
   15584:	mov	r3, #9
   15588:	ldr	r2, [fp, #-16]
   1558c:	ldr	r1, [fp, #-12]
   15590:	ldr	r0, [fp, #-8]
   15594:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15598:	mov	r3, r0
   1559c:	b	155ec <_start@@Base+0xff4>
   155a0:	ldr	r3, [fp, #-12]
   155a4:	ldrb	r3, [r3]
   155a8:	cmp	r3, #93	; 0x5d
   155ac:	bne	155dc <_start@@Base+0xfe4>
   155b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   155b4:	mov	r2, #0
   155b8:	str	r2, [r3]
   155bc:	ldr	r3, [fp, #-12]
   155c0:	add	r3, r3, #1
   155c4:	ldr	r2, [fp, #-16]
   155c8:	mov	r1, r3
   155cc:	ldr	r0, [fp, #-8]
   155d0:	bl	14c54 <_start@@Base+0x65c>
   155d4:	mov	r3, r0
   155d8:	b	155ec <_start@@Base+0xff4>
   155dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   155e0:	mov	r2, #1
   155e4:	str	r2, [r3]
   155e8:	ldr	r3, [fp, #-12]
   155ec:	mov	r0, r3
   155f0:	sub	sp, fp, #4
   155f4:	ldr	fp, [sp]
   155f8:	add	sp, sp, #4
   155fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15600:	str	fp, [sp, #-8]!
   15604:	str	lr, [sp, #4]
   15608:	add	fp, sp, #4
   1560c:	sub	sp, sp, #24
   15610:	str	r0, [fp, #-16]
   15614:	str	r1, [fp, #-20]	; 0xffffffec
   15618:	str	r2, [fp, #-24]	; 0xffffffe8
   1561c:	str	r3, [fp, #-28]	; 0xffffffe4
   15620:	ldr	r3, [fp, #-20]	; 0xffffffec
   15624:	str	r3, [fp, #-8]
   15628:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1562c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15630:	sub	r3, r2, r3
   15634:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15638:	cmp	r2, r3
   1563c:	blt	15648 <_start@@Base+0x1050>
   15640:	ldr	r3, [fp, #-8]
   15644:	b	156ec <_start@@Base+0x10f4>
   15648:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1564c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15650:	add	r3, r2, r3
   15654:	ldrb	r3, [r3]
   15658:	cmp	r3, #34	; 0x22
   1565c:	beq	15668 <_start@@Base+0x1070>
   15660:	ldr	r3, [fp, #-8]
   15664:	b	156ec <_start@@Base+0x10f4>
   15668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1566c:	add	r3, r3, #1
   15670:	ldr	r2, [fp, #-20]	; 0xffffffec
   15674:	add	r3, r2, r3
   15678:	str	r3, [fp, #-20]	; 0xffffffec
   1567c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15680:	ldr	r1, [fp, #-20]	; 0xffffffec
   15684:	ldr	r0, [fp, #-16]
   15688:	bl	14c54 <_start@@Base+0x65c>
   1568c:	str	r0, [fp, #-20]	; 0xffffffec
   15690:	ldr	r2, [fp, #-20]	; 0xffffffec
   15694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15698:	cmp	r2, r3
   1569c:	beq	156d4 <_start@@Base+0x10dc>
   156a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   156a4:	ldrb	r3, [r3]
   156a8:	cmp	r3, #58	; 0x3a
   156ac:	bne	156d4 <_start@@Base+0x10dc>
   156b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   156b4:	add	r3, r3, #1
   156b8:	str	r3, [fp, #-20]	; 0xffffffec
   156bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   156c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   156c4:	ldr	r0, [fp, #-16]
   156c8:	bl	14c54 <_start@@Base+0x65c>
   156cc:	mov	r3, r0
   156d0:	b	156ec <_start@@Base+0x10f4>
   156d4:	mov	r3, #4
   156d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   156dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   156e0:	ldr	r0, [fp, #-16]
   156e4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   156e8:	mov	r3, r0
   156ec:	mov	r0, r3
   156f0:	sub	sp, fp, #4
   156f4:	ldr	fp, [sp]
   156f8:	add	sp, sp, #4
   156fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15700:	str	fp, [sp, #-8]!
   15704:	str	lr, [sp, #4]
   15708:	add	fp, sp, #4
   1570c:	sub	sp, sp, #16
   15710:	str	r0, [fp, #-8]
   15714:	str	r1, [fp, #-12]
   15718:	str	r2, [fp, #-16]
   1571c:	str	r3, [fp, #-20]	; 0xffffffec
   15720:	ldr	r3, [fp, #-20]	; 0xffffffec
   15724:	cmp	r3, #0
   15728:	beq	15748 <_start@@Base+0x1150>
   1572c:	mov	r3, #8
   15730:	ldr	r2, [fp, #-16]
   15734:	ldr	r1, [fp, #-12]
   15738:	ldr	r0, [fp, #-8]
   1573c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15740:	mov	r3, r0
   15744:	b	15758 <_start@@Base+0x1160>
   15748:	ldr	r1, [fp, #12]
   1574c:	ldrd	r2, [fp, #4]
   15750:	strd	r2, [r1]
   15754:	ldr	r3, [fp, #-12]
   15758:	mov	r0, r3
   1575c:	sub	sp, fp, #4
   15760:	ldr	fp, [sp]
   15764:	add	sp, sp, #4
   15768:	pop	{pc}		; (ldr pc, [sp], #4)
   1576c:	str	fp, [sp, #-8]!
   15770:	str	lr, [sp, #4]
   15774:	add	fp, sp, #4
   15778:	sub	sp, sp, #16
   1577c:	str	r0, [fp, #-8]
   15780:	str	r1, [fp, #-12]
   15784:	str	r2, [fp, #-16]
   15788:	str	r3, [fp, #-20]	; 0xffffffec
   1578c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15790:	cmp	r3, #0
   15794:	beq	157b4 <_start@@Base+0x11bc>
   15798:	mov	r3, #8
   1579c:	ldr	r2, [fp, #-16]
   157a0:	ldr	r1, [fp, #-12]
   157a4:	ldr	r0, [fp, #-8]
   157a8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   157ac:	mov	r3, r0
   157b0:	b	157e0 <_start@@Base+0x11e8>
   157b4:	ldr	r2, [fp, #4]
   157b8:	ldr	r3, [fp, #8]
   157bc:	orr	r3, r2, r3
   157c0:	cmp	r3, #0
   157c4:	movne	r3, #1
   157c8:	moveq	r3, #0
   157cc:	uxtb	r3, r3
   157d0:	mov	r2, r3
   157d4:	ldr	r3, [fp, #12]
   157d8:	strb	r2, [r3]
   157dc:	ldr	r3, [fp, #-12]
   157e0:	mov	r0, r3
   157e4:	sub	sp, fp, #4
   157e8:	ldr	fp, [sp]
   157ec:	add	sp, sp, #4
   157f0:	pop	{pc}		; (ldr pc, [sp], #4)
   157f4:	str	fp, [sp, #-8]!
   157f8:	str	lr, [sp, #4]
   157fc:	add	fp, sp, #4
   15800:	sub	sp, sp, #16
   15804:	str	r0, [fp, #-8]
   15808:	str	r1, [fp, #-12]
   1580c:	str	r2, [fp, #-16]
   15810:	str	r3, [fp, #-20]	; 0xffffffec
   15814:	ldr	r3, [fp, #-20]	; 0xffffffec
   15818:	cmp	r3, #0
   1581c:	beq	1583c <_start@@Base+0x1244>
   15820:	mov	r3, #8
   15824:	ldr	r2, [fp, #-16]
   15828:	ldr	r1, [fp, #-12]
   1582c:	ldr	r0, [fp, #-8]
   15830:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15834:	mov	r3, r0
   15838:	b	15880 <_start@@Base+0x1288>
   1583c:	ldrd	r2, [fp, #4]
   15840:	mvn	r0, #0
   15844:	mov	r1, #0
   15848:	cmp	r3, r1
   1584c:	cmpeq	r2, r0
   15850:	bls	15870 <_start@@Base+0x1278>
   15854:	mov	r3, #7
   15858:	ldr	r2, [fp, #-16]
   1585c:	ldr	r1, [fp, #-12]
   15860:	ldr	r0, [fp, #-8]
   15864:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15868:	mov	r3, r0
   1586c:	b	15880 <_start@@Base+0x1288>
   15870:	ldr	r2, [fp, #4]
   15874:	ldr	r3, [fp, #12]
   15878:	str	r2, [r3]
   1587c:	ldr	r3, [fp, #-12]
   15880:	mov	r0, r3
   15884:	sub	sp, fp, #4
   15888:	ldr	fp, [sp]
   1588c:	add	sp, sp, #4
   15890:	pop	{pc}		; (ldr pc, [sp], #4)
   15894:	str	fp, [sp, #-8]!
   15898:	str	lr, [sp, #4]
   1589c:	add	fp, sp, #4
   158a0:	sub	sp, sp, #16
   158a4:	str	r0, [fp, #-8]
   158a8:	str	r1, [fp, #-12]
   158ac:	str	r2, [fp, #-16]
   158b0:	str	r3, [fp, #-20]	; 0xffffffec
   158b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   158b8:	cmp	r3, #0
   158bc:	beq	158dc <_start@@Base+0x12e4>
   158c0:	mov	r3, #8
   158c4:	ldr	r2, [fp, #-16]
   158c8:	ldr	r1, [fp, #-12]
   158cc:	ldr	r0, [fp, #-8]
   158d0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   158d4:	mov	r3, r0
   158d8:	b	15920 <_start@@Base+0x1328>
   158dc:	ldrd	r2, [fp, #4]
   158e0:	movw	r0, #65535	; 0xffff
   158e4:	mov	r1, #0
   158e8:	cmp	r3, r1
   158ec:	cmpeq	r2, r0
   158f0:	bls	15910 <_start@@Base+0x1318>
   158f4:	mov	r3, #7
   158f8:	ldr	r2, [fp, #-16]
   158fc:	ldr	r1, [fp, #-12]
   15900:	ldr	r0, [fp, #-8]
   15904:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15908:	mov	r3, r0
   1590c:	b	15920 <_start@@Base+0x1328>
   15910:	ldrh	r2, [fp, #4]
   15914:	ldr	r3, [fp, #12]
   15918:	strh	r2, [r3]
   1591c:	ldr	r3, [fp, #-12]
   15920:	mov	r0, r3
   15924:	sub	sp, fp, #4
   15928:	ldr	fp, [sp]
   1592c:	add	sp, sp, #4
   15930:	pop	{pc}		; (ldr pc, [sp], #4)
   15934:	str	fp, [sp, #-8]!
   15938:	str	lr, [sp, #4]
   1593c:	add	fp, sp, #4
   15940:	sub	sp, sp, #16
   15944:	str	r0, [fp, #-8]
   15948:	str	r1, [fp, #-12]
   1594c:	str	r2, [fp, #-16]
   15950:	str	r3, [fp, #-20]	; 0xffffffec
   15954:	ldr	r3, [fp, #-20]	; 0xffffffec
   15958:	cmp	r3, #0
   1595c:	beq	1597c <_start@@Base+0x1384>
   15960:	mov	r3, #8
   15964:	ldr	r2, [fp, #-16]
   15968:	ldr	r1, [fp, #-12]
   1596c:	ldr	r0, [fp, #-8]
   15970:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15974:	mov	r3, r0
   15978:	b	159b8 <_start@@Base+0x13c0>
   1597c:	ldrd	r2, [fp, #4]
   15980:	cmp	r3, #0
   15984:	cmpeq	r2, #255	; 0xff
   15988:	bls	159a8 <_start@@Base+0x13b0>
   1598c:	mov	r3, #7
   15990:	ldr	r2, [fp, #-16]
   15994:	ldr	r1, [fp, #-12]
   15998:	ldr	r0, [fp, #-8]
   1599c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   159a0:	mov	r3, r0
   159a4:	b	159b8 <_start@@Base+0x13c0>
   159a8:	ldrb	r2, [fp, #4]
   159ac:	ldr	r3, [fp, #12]
   159b0:	strb	r2, [r3]
   159b4:	ldr	r3, [fp, #-12]
   159b8:	mov	r0, r3
   159bc:	sub	sp, fp, #4
   159c0:	ldr	fp, [sp]
   159c4:	add	sp, sp, #4
   159c8:	pop	{pc}		; (ldr pc, [sp], #4)
   159cc:	str	fp, [sp, #-8]!
   159d0:	str	lr, [sp, #4]
   159d4:	add	fp, sp, #4
   159d8:	sub	sp, sp, #16
   159dc:	str	r0, [fp, #-8]
   159e0:	str	r1, [fp, #-12]
   159e4:	str	r2, [fp, #-16]
   159e8:	str	r3, [fp, #-20]	; 0xffffffec
   159ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   159f0:	cmp	r3, #0
   159f4:	beq	15a3c <_start@@Base+0x1444>
   159f8:	ldrd	r2, [fp, #4]
   159fc:	cmp	r3, #-2147483648	; 0x80000000
   15a00:	cmpeq	r2, #0
   15a04:	bls	15a24 <_start@@Base+0x142c>
   15a08:	mov	r3, #8
   15a0c:	ldr	r2, [fp, #-16]
   15a10:	ldr	r1, [fp, #-12]
   15a14:	ldr	r0, [fp, #-8]
   15a18:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15a1c:	mov	r3, r0
   15a20:	b	15a78 <_start@@Base+0x1480>
   15a24:	ldrd	r2, [fp, #4]
   15a28:	rsbs	r2, r2, #0
   15a2c:	rsc	r3, r3, #0
   15a30:	ldr	r1, [fp, #12]
   15a34:	strd	r2, [r1]
   15a38:	b	15a74 <_start@@Base+0x147c>
   15a3c:	ldrd	r2, [fp, #4]
   15a40:	cmp	r2, #0
   15a44:	sbcs	r3, r3, #0
   15a48:	bge	15a68 <_start@@Base+0x1470>
   15a4c:	mov	r3, #7
   15a50:	ldr	r2, [fp, #-16]
   15a54:	ldr	r1, [fp, #-12]
   15a58:	ldr	r0, [fp, #-8]
   15a5c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15a60:	mov	r3, r0
   15a64:	b	15a78 <_start@@Base+0x1480>
   15a68:	ldrd	r2, [fp, #4]
   15a6c:	ldr	r1, [fp, #12]
   15a70:	strd	r2, [r1]
   15a74:	ldr	r3, [fp, #-12]
   15a78:	mov	r0, r3
   15a7c:	sub	sp, fp, #4
   15a80:	ldr	fp, [sp]
   15a84:	add	sp, sp, #4
   15a88:	pop	{pc}		; (ldr pc, [sp], #4)
   15a8c:	str	fp, [sp, #-8]!
   15a90:	str	lr, [sp, #4]
   15a94:	add	fp, sp, #4
   15a98:	sub	sp, sp, #16
   15a9c:	str	r0, [fp, #-8]
   15aa0:	str	r1, [fp, #-12]
   15aa4:	str	r2, [fp, #-16]
   15aa8:	str	r3, [fp, #-20]	; 0xffffffec
   15aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ab0:	cmp	r3, #0
   15ab4:	beq	15afc <_start@@Base+0x1504>
   15ab8:	ldrd	r2, [fp, #4]
   15abc:	cmp	r3, #0
   15ac0:	cmpeq	r2, #-2147483648	; 0x80000000
   15ac4:	bls	15ae4 <_start@@Base+0x14ec>
   15ac8:	mov	r3, #8
   15acc:	ldr	r2, [fp, #-16]
   15ad0:	ldr	r1, [fp, #-12]
   15ad4:	ldr	r0, [fp, #-8]
   15ad8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15adc:	mov	r3, r0
   15ae0:	b	15b40 <_start@@Base+0x1548>
   15ae4:	ldr	r3, [fp, #4]
   15ae8:	rsb	r3, r3, #0
   15aec:	mov	r2, r3
   15af0:	ldr	r3, [fp, #12]
   15af4:	str	r2, [r3]
   15af8:	b	15b3c <_start@@Base+0x1544>
   15afc:	ldrd	r2, [fp, #4]
   15b00:	mvn	r0, #-2147483648	; 0x80000000
   15b04:	mov	r1, #0
   15b08:	cmp	r3, r1
   15b0c:	cmpeq	r2, r0
   15b10:	bls	15b30 <_start@@Base+0x1538>
   15b14:	mov	r3, #7
   15b18:	ldr	r2, [fp, #-16]
   15b1c:	ldr	r1, [fp, #-12]
   15b20:	ldr	r0, [fp, #-8]
   15b24:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15b28:	mov	r3, r0
   15b2c:	b	15b40 <_start@@Base+0x1548>
   15b30:	ldr	r2, [fp, #4]
   15b34:	ldr	r3, [fp, #12]
   15b38:	str	r2, [r3]
   15b3c:	ldr	r3, [fp, #-12]
   15b40:	mov	r0, r3
   15b44:	sub	sp, fp, #4
   15b48:	ldr	fp, [sp]
   15b4c:	add	sp, sp, #4
   15b50:	pop	{pc}		; (ldr pc, [sp], #4)
   15b54:	str	fp, [sp, #-8]!
   15b58:	str	lr, [sp, #4]
   15b5c:	add	fp, sp, #4
   15b60:	sub	sp, sp, #16
   15b64:	str	r0, [fp, #-8]
   15b68:	str	r1, [fp, #-12]
   15b6c:	str	r2, [fp, #-16]
   15b70:	str	r3, [fp, #-20]	; 0xffffffec
   15b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b78:	cmp	r3, #0
   15b7c:	beq	15bc8 <_start@@Base+0x15d0>
   15b80:	ldrd	r2, [fp, #4]
   15b84:	cmp	r3, #0
   15b88:	cmpeq	r2, #32768	; 0x8000
   15b8c:	bls	15bac <_start@@Base+0x15b4>
   15b90:	mov	r3, #8
   15b94:	ldr	r2, [fp, #-16]
   15b98:	ldr	r1, [fp, #-12]
   15b9c:	ldr	r0, [fp, #-8]
   15ba0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15ba4:	mov	r3, r0
   15ba8:	b	15c0c <_start@@Base+0x1614>
   15bac:	ldrh	r3, [fp, #4]
   15bb0:	rsb	r3, r3, #0
   15bb4:	uxth	r3, r3
   15bb8:	sxth	r2, r3
   15bbc:	ldr	r3, [fp, #12]
   15bc0:	strh	r2, [r3]
   15bc4:	b	15c08 <_start@@Base+0x1610>
   15bc8:	ldrd	r2, [fp, #4]
   15bcc:	movw	r0, #32767	; 0x7fff
   15bd0:	mov	r1, #0
   15bd4:	cmp	r3, r1
   15bd8:	cmpeq	r2, r0
   15bdc:	bls	15bfc <_start@@Base+0x1604>
   15be0:	mov	r3, #7
   15be4:	ldr	r2, [fp, #-16]
   15be8:	ldr	r1, [fp, #-12]
   15bec:	ldr	r0, [fp, #-8]
   15bf0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15bf4:	mov	r3, r0
   15bf8:	b	15c0c <_start@@Base+0x1614>
   15bfc:	ldrsh	r2, [fp, #4]
   15c00:	ldr	r3, [fp, #12]
   15c04:	strh	r2, [r3]
   15c08:	ldr	r3, [fp, #-12]
   15c0c:	mov	r0, r3
   15c10:	sub	sp, fp, #4
   15c14:	ldr	fp, [sp]
   15c18:	add	sp, sp, #4
   15c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c20:	str	fp, [sp, #-8]!
   15c24:	str	lr, [sp, #4]
   15c28:	add	fp, sp, #4
   15c2c:	sub	sp, sp, #16
   15c30:	str	r0, [fp, #-8]
   15c34:	str	r1, [fp, #-12]
   15c38:	str	r2, [fp, #-16]
   15c3c:	str	r3, [fp, #-20]	; 0xffffffec
   15c40:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c44:	cmp	r3, #0
   15c48:	beq	15c94 <_start@@Base+0x169c>
   15c4c:	ldrd	r2, [fp, #4]
   15c50:	cmp	r3, #0
   15c54:	cmpeq	r2, #128	; 0x80
   15c58:	bls	15c78 <_start@@Base+0x1680>
   15c5c:	mov	r3, #8
   15c60:	ldr	r2, [fp, #-16]
   15c64:	ldr	r1, [fp, #-12]
   15c68:	ldr	r0, [fp, #-8]
   15c6c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15c70:	mov	r3, r0
   15c74:	b	15cd0 <_start@@Base+0x16d8>
   15c78:	ldrb	r3, [fp, #4]
   15c7c:	rsb	r3, r3, #0
   15c80:	uxtb	r3, r3
   15c84:	sxtb	r2, r3
   15c88:	ldr	r3, [fp, #12]
   15c8c:	strb	r2, [r3]
   15c90:	b	15ccc <_start@@Base+0x16d4>
   15c94:	ldrd	r2, [fp, #4]
   15c98:	cmp	r3, #0
   15c9c:	cmpeq	r2, #127	; 0x7f
   15ca0:	bls	15cc0 <_start@@Base+0x16c8>
   15ca4:	mov	r3, #7
   15ca8:	ldr	r2, [fp, #-16]
   15cac:	ldr	r1, [fp, #-12]
   15cb0:	ldr	r0, [fp, #-8]
   15cb4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15cb8:	mov	r3, r0
   15cbc:	b	15cd0 <_start@@Base+0x16d8>
   15cc0:	ldrsb	r2, [fp, #4]
   15cc4:	ldr	r3, [fp, #12]
   15cc8:	strb	r2, [r3]
   15ccc:	ldr	r3, [fp, #-12]
   15cd0:	mov	r0, r3
   15cd4:	sub	sp, fp, #4
   15cd8:	ldr	fp, [sp]
   15cdc:	add	sp, sp, #4
   15ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ce4:	str	fp, [sp, #-8]!
   15ce8:	str	lr, [sp, #4]
   15cec:	add	fp, sp, #4
   15cf0:	sub	sp, sp, #16
   15cf4:	str	r0, [fp, #-8]
   15cf8:	str	r1, [fp, #-12]
   15cfc:	str	r2, [fp, #-16]
   15d00:	str	r3, [fp, #-20]	; 0xffffffec
   15d04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d08:	cmp	r3, #0
   15d0c:	beq	15d24 <_start@@Base+0x172c>
   15d10:	ldrd	r0, [fp, #4]
   15d14:	bl	4dca0 <flatcc_json_printer_clear@@Base+0x5ec>
   15d18:	mov	r3, r0
   15d1c:	eor	r2, r3, #-2147483648	; 0x80000000
   15d20:	b	15d30 <_start@@Base+0x1738>
   15d24:	ldrd	r0, [fp, #4]
   15d28:	bl	4dca0 <flatcc_json_printer_clear@@Base+0x5ec>
   15d2c:	mov	r2, r0
   15d30:	ldr	r3, [fp, #12]
   15d34:	str	r2, [r3]
   15d38:	ldr	r3, [fp, #-12]
   15d3c:	mov	r0, r3
   15d40:	sub	sp, fp, #4
   15d44:	ldr	fp, [sp]
   15d48:	add	sp, sp, #4
   15d4c:	pop	{pc}		; (ldr pc, [sp], #4)
   15d50:	str	fp, [sp, #-8]!
   15d54:	str	lr, [sp, #4]
   15d58:	add	fp, sp, #4
   15d5c:	sub	sp, sp, #16
   15d60:	str	r0, [fp, #-8]
   15d64:	str	r1, [fp, #-12]
   15d68:	str	r2, [fp, #-16]
   15d6c:	str	r3, [fp, #-20]	; 0xffffffec
   15d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d74:	cmp	r3, #0
   15d78:	beq	15d94 <_start@@Base+0x179c>
   15d7c:	ldrd	r0, [fp, #4]
   15d80:	bl	4da68 <flatcc_json_printer_clear@@Base+0x3b4>
   15d84:	mov	r2, r0
   15d88:	mov	r3, r1
   15d8c:	eor	r3, r3, #-2147483648	; 0x80000000
   15d90:	b	15da4 <_start@@Base+0x17ac>
   15d94:	ldrd	r0, [fp, #4]
   15d98:	bl	4da68 <flatcc_json_printer_clear@@Base+0x3b4>
   15d9c:	mov	r2, r0
   15da0:	mov	r3, r1
   15da4:	ldr	r1, [fp, #12]
   15da8:	strd	r2, [r1]
   15dac:	ldr	r3, [fp, #-12]
   15db0:	mov	r0, r3
   15db4:	sub	sp, fp, #4
   15db8:	ldr	fp, [sp]
   15dbc:	add	sp, sp, #4
   15dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   15dc4:	str	fp, [sp, #-8]!
   15dc8:	str	lr, [sp, #4]
   15dcc:	add	fp, sp, #4
   15dd0:	sub	sp, sp, #16
   15dd4:	str	r0, [fp, #-8]
   15dd8:	str	r1, [fp, #-12]
   15ddc:	str	r2, [fp, #-16]
   15de0:	ldr	r2, [fp, #-16]
   15de4:	ldr	r3, [fp, #-12]
   15de8:	sub	r3, r2, r3
   15dec:	cmp	r3, #3
   15df0:	ble	15e24 <_start@@Base+0x182c>
   15df4:	mov	r2, #4
   15df8:	ldr	r3, [pc, #80]	; 15e50 <_start@@Base+0x1858>
   15dfc:	add	r3, pc, r3
   15e00:	mov	r1, r3
   15e04:	ldr	r0, [fp, #-12]
   15e08:	bl	14528 <memcmp@plt>
   15e0c:	mov	r3, r0
   15e10:	cmp	r3, #0
   15e14:	bne	15e24 <_start@@Base+0x182c>
   15e18:	ldr	r3, [fp, #-12]
   15e1c:	add	r3, r3, #4
   15e20:	b	15e3c <_start@@Base+0x1844>
   15e24:	mov	r3, #26
   15e28:	ldr	r2, [fp, #-16]
   15e2c:	ldr	r1, [fp, #-12]
   15e30:	ldr	r0, [fp, #-8]
   15e34:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   15e38:	mov	r3, r0
   15e3c:	mov	r0, r3
   15e40:	sub	sp, fp, #4
   15e44:	ldr	fp, [sp]
   15e48:	add	sp, sp, #4
   15e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e50:	andeq	r8, r3, r4, lsl r1
   15e54:	str	fp, [sp, #-8]!
   15e58:	str	lr, [sp, #4]
   15e5c:	add	fp, sp, #4
   15e60:	sub	sp, sp, #56	; 0x38
   15e64:	str	r0, [fp, #-32]	; 0xffffffe0
   15e68:	str	r1, [fp, #-36]	; 0xffffffdc
   15e6c:	str	r2, [fp, #-40]	; 0xffffffd8
   15e70:	str	r3, [fp, #-44]	; 0xffffffd4
   15e74:	mov	r2, #0
   15e78:	mov	r3, #0
   15e7c:	strd	r2, [fp, #-20]	; 0xffffffec
   15e80:	mov	r3, #0
   15e84:	str	r3, [fp, #-24]	; 0xffffffe8
   15e88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e8c:	str	r3, [fp, #-8]
   15e90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e94:	mov	r2, #0
   15e98:	mov	r3, #0
   15e9c:	strd	r2, [r1]
   15ea0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15ea4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ea8:	cmp	r2, r3
   15eac:	bne	15eb8 <_start@@Base+0x18c0>
   15eb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15eb4:	b	15f20 <_start@@Base+0x1928>
   15eb8:	sub	r2, fp, #24
   15ebc:	sub	r3, fp, #20
   15ec0:	str	r3, [sp]
   15ec4:	mov	r3, r2
   15ec8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15ecc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ed4:	bl	3d578 <flatcc_json_parser_integer@@Base>
   15ed8:	str	r0, [fp, #-36]	; 0xffffffdc
   15edc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15ee0:	ldr	r3, [fp, #-8]
   15ee4:	cmp	r2, r3
   15ee8:	beq	15f1c <_start@@Base+0x1924>
   15eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ef0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15ef4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ef8:	str	r1, [sp, #8]
   15efc:	strd	r2, [sp]
   15f00:	mov	r3, r0
   15f04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f10:	bl	15700 <_start@@Base+0x1108>
   15f14:	mov	r3, r0
   15f18:	b	15f20 <_start@@Base+0x1928>
   15f1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f20:	mov	r0, r3
   15f24:	sub	sp, fp, #4
   15f28:	ldr	fp, [sp]
   15f2c:	add	sp, sp, #4
   15f30:	pop	{pc}		; (ldr pc, [sp], #4)
   15f34:	str	fp, [sp, #-8]!
   15f38:	str	lr, [sp, #4]
   15f3c:	add	fp, sp, #4
   15f40:	sub	sp, sp, #56	; 0x38
   15f44:	str	r0, [fp, #-32]	; 0xffffffe0
   15f48:	str	r1, [fp, #-36]	; 0xffffffdc
   15f4c:	str	r2, [fp, #-40]	; 0xffffffd8
   15f50:	str	r3, [fp, #-44]	; 0xffffffd4
   15f54:	mov	r2, #0
   15f58:	mov	r3, #0
   15f5c:	strd	r2, [fp, #-20]	; 0xffffffec
   15f60:	mov	r3, #0
   15f64:	str	r3, [fp, #-24]	; 0xffffffe8
   15f68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f6c:	str	r3, [fp, #-8]
   15f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f74:	mov	r2, #0
   15f78:	str	r2, [r3]
   15f7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15f80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f84:	cmp	r2, r3
   15f88:	bne	15f94 <_start@@Base+0x199c>
   15f8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f90:	b	15ffc <_start@@Base+0x1a04>
   15f94:	sub	r2, fp, #24
   15f98:	sub	r3, fp, #20
   15f9c:	str	r3, [sp]
   15fa0:	mov	r3, r2
   15fa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15fa8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fb0:	bl	3d578 <flatcc_json_parser_integer@@Base>
   15fb4:	str	r0, [fp, #-36]	; 0xffffffdc
   15fb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15fbc:	ldr	r3, [fp, #-8]
   15fc0:	cmp	r2, r3
   15fc4:	beq	15ff8 <_start@@Base+0x1a00>
   15fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fcc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15fd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15fd4:	str	r1, [sp, #8]
   15fd8:	strd	r2, [sp]
   15fdc:	mov	r3, r0
   15fe0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15fe4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fec:	bl	157f4 <_start@@Base+0x11fc>
   15ff0:	mov	r3, r0
   15ff4:	b	15ffc <_start@@Base+0x1a04>
   15ff8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ffc:	mov	r0, r3
   16000:	sub	sp, fp, #4
   16004:	ldr	fp, [sp]
   16008:	add	sp, sp, #4
   1600c:	pop	{pc}		; (ldr pc, [sp], #4)
   16010:	str	fp, [sp, #-8]!
   16014:	str	lr, [sp, #4]
   16018:	add	fp, sp, #4
   1601c:	sub	sp, sp, #56	; 0x38
   16020:	str	r0, [fp, #-32]	; 0xffffffe0
   16024:	str	r1, [fp, #-36]	; 0xffffffdc
   16028:	str	r2, [fp, #-40]	; 0xffffffd8
   1602c:	str	r3, [fp, #-44]	; 0xffffffd4
   16030:	mov	r2, #0
   16034:	mov	r3, #0
   16038:	strd	r2, [fp, #-20]	; 0xffffffec
   1603c:	mov	r3, #0
   16040:	str	r3, [fp, #-24]	; 0xffffffe8
   16044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16048:	str	r3, [fp, #-8]
   1604c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16050:	mov	r2, #0
   16054:	strh	r2, [r3]
   16058:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1605c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16060:	cmp	r2, r3
   16064:	bne	16070 <_start@@Base+0x1a78>
   16068:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1606c:	b	160d8 <_start@@Base+0x1ae0>
   16070:	sub	r2, fp, #24
   16074:	sub	r3, fp, #20
   16078:	str	r3, [sp]
   1607c:	mov	r3, r2
   16080:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16084:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1608c:	bl	3d578 <flatcc_json_parser_integer@@Base>
   16090:	str	r0, [fp, #-36]	; 0xffffffdc
   16094:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16098:	ldr	r3, [fp, #-8]
   1609c:	cmp	r2, r3
   160a0:	beq	160d4 <_start@@Base+0x1adc>
   160a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160a8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   160ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160b0:	str	r1, [sp, #8]
   160b4:	strd	r2, [sp]
   160b8:	mov	r3, r0
   160bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   160c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   160c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160c8:	bl	15894 <_start@@Base+0x129c>
   160cc:	mov	r3, r0
   160d0:	b	160d8 <_start@@Base+0x1ae0>
   160d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160d8:	mov	r0, r3
   160dc:	sub	sp, fp, #4
   160e0:	ldr	fp, [sp]
   160e4:	add	sp, sp, #4
   160e8:	pop	{pc}		; (ldr pc, [sp], #4)
   160ec:	str	fp, [sp, #-8]!
   160f0:	str	lr, [sp, #4]
   160f4:	add	fp, sp, #4
   160f8:	sub	sp, sp, #56	; 0x38
   160fc:	str	r0, [fp, #-32]	; 0xffffffe0
   16100:	str	r1, [fp, #-36]	; 0xffffffdc
   16104:	str	r2, [fp, #-40]	; 0xffffffd8
   16108:	str	r3, [fp, #-44]	; 0xffffffd4
   1610c:	mov	r2, #0
   16110:	mov	r3, #0
   16114:	strd	r2, [fp, #-20]	; 0xffffffec
   16118:	mov	r3, #0
   1611c:	str	r3, [fp, #-24]	; 0xffffffe8
   16120:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16124:	str	r3, [fp, #-8]
   16128:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1612c:	mov	r2, #0
   16130:	strb	r2, [r3]
   16134:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1613c:	cmp	r2, r3
   16140:	bne	1614c <_start@@Base+0x1b54>
   16144:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16148:	b	161b4 <_start@@Base+0x1bbc>
   1614c:	sub	r2, fp, #24
   16150:	sub	r3, fp, #20
   16154:	str	r3, [sp]
   16158:	mov	r3, r2
   1615c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16160:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16164:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16168:	bl	3d578 <flatcc_json_parser_integer@@Base>
   1616c:	str	r0, [fp, #-36]	; 0xffffffdc
   16170:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16174:	ldr	r3, [fp, #-8]
   16178:	cmp	r2, r3
   1617c:	beq	161b0 <_start@@Base+0x1bb8>
   16180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16184:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16188:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1618c:	str	r1, [sp, #8]
   16190:	strd	r2, [sp]
   16194:	mov	r3, r0
   16198:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1619c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   161a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161a4:	bl	15934 <_start@@Base+0x133c>
   161a8:	mov	r3, r0
   161ac:	b	161b4 <_start@@Base+0x1bbc>
   161b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161b4:	mov	r0, r3
   161b8:	sub	sp, fp, #4
   161bc:	ldr	fp, [sp]
   161c0:	add	sp, sp, #4
   161c4:	pop	{pc}		; (ldr pc, [sp], #4)
   161c8:	str	fp, [sp, #-8]!
   161cc:	str	lr, [sp, #4]
   161d0:	add	fp, sp, #4
   161d4:	sub	sp, sp, #56	; 0x38
   161d8:	str	r0, [fp, #-32]	; 0xffffffe0
   161dc:	str	r1, [fp, #-36]	; 0xffffffdc
   161e0:	str	r2, [fp, #-40]	; 0xffffffd8
   161e4:	str	r3, [fp, #-44]	; 0xffffffd4
   161e8:	mov	r2, #0
   161ec:	mov	r3, #0
   161f0:	strd	r2, [fp, #-20]	; 0xffffffec
   161f4:	mov	r3, #0
   161f8:	str	r3, [fp, #-24]	; 0xffffffe8
   161fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16200:	str	r3, [fp, #-8]
   16204:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16208:	mov	r2, #0
   1620c:	mov	r3, #0
   16210:	strd	r2, [r1]
   16214:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16218:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1621c:	cmp	r2, r3
   16220:	bne	1622c <_start@@Base+0x1c34>
   16224:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16228:	b	16294 <_start@@Base+0x1c9c>
   1622c:	sub	r2, fp, #24
   16230:	sub	r3, fp, #20
   16234:	str	r3, [sp]
   16238:	mov	r3, r2
   1623c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16240:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16248:	bl	3d578 <flatcc_json_parser_integer@@Base>
   1624c:	str	r0, [fp, #-36]	; 0xffffffdc
   16250:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16254:	ldr	r3, [fp, #-8]
   16258:	cmp	r2, r3
   1625c:	beq	16290 <_start@@Base+0x1c98>
   16260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16264:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16268:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1626c:	str	r1, [sp, #8]
   16270:	strd	r2, [sp]
   16274:	mov	r3, r0
   16278:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1627c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16280:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16284:	bl	159cc <_start@@Base+0x13d4>
   16288:	mov	r3, r0
   1628c:	b	16294 <_start@@Base+0x1c9c>
   16290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16294:	mov	r0, r3
   16298:	sub	sp, fp, #4
   1629c:	ldr	fp, [sp]
   162a0:	add	sp, sp, #4
   162a4:	pop	{pc}		; (ldr pc, [sp], #4)
   162a8:	str	fp, [sp, #-8]!
   162ac:	str	lr, [sp, #4]
   162b0:	add	fp, sp, #4
   162b4:	sub	sp, sp, #56	; 0x38
   162b8:	str	r0, [fp, #-32]	; 0xffffffe0
   162bc:	str	r1, [fp, #-36]	; 0xffffffdc
   162c0:	str	r2, [fp, #-40]	; 0xffffffd8
   162c4:	str	r3, [fp, #-44]	; 0xffffffd4
   162c8:	mov	r2, #0
   162cc:	mov	r3, #0
   162d0:	strd	r2, [fp, #-20]	; 0xffffffec
   162d4:	mov	r3, #0
   162d8:	str	r3, [fp, #-24]	; 0xffffffe8
   162dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162e0:	str	r3, [fp, #-8]
   162e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162e8:	mov	r2, #0
   162ec:	str	r2, [r3]
   162f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   162f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162f8:	cmp	r2, r3
   162fc:	bne	16308 <_start@@Base+0x1d10>
   16300:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16304:	b	16370 <_start@@Base+0x1d78>
   16308:	sub	r2, fp, #24
   1630c:	sub	r3, fp, #20
   16310:	str	r3, [sp]
   16314:	mov	r3, r2
   16318:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1631c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16324:	bl	3d578 <flatcc_json_parser_integer@@Base>
   16328:	str	r0, [fp, #-36]	; 0xffffffdc
   1632c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16330:	ldr	r3, [fp, #-8]
   16334:	cmp	r2, r3
   16338:	beq	1636c <_start@@Base+0x1d74>
   1633c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16340:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16344:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16348:	str	r1, [sp, #8]
   1634c:	strd	r2, [sp]
   16350:	mov	r3, r0
   16354:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16358:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1635c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16360:	bl	15a8c <_start@@Base+0x1494>
   16364:	mov	r3, r0
   16368:	b	16370 <_start@@Base+0x1d78>
   1636c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16370:	mov	r0, r3
   16374:	sub	sp, fp, #4
   16378:	ldr	fp, [sp]
   1637c:	add	sp, sp, #4
   16380:	pop	{pc}		; (ldr pc, [sp], #4)
   16384:	str	fp, [sp, #-8]!
   16388:	str	lr, [sp, #4]
   1638c:	add	fp, sp, #4
   16390:	sub	sp, sp, #56	; 0x38
   16394:	str	r0, [fp, #-32]	; 0xffffffe0
   16398:	str	r1, [fp, #-36]	; 0xffffffdc
   1639c:	str	r2, [fp, #-40]	; 0xffffffd8
   163a0:	str	r3, [fp, #-44]	; 0xffffffd4
   163a4:	mov	r2, #0
   163a8:	mov	r3, #0
   163ac:	strd	r2, [fp, #-20]	; 0xffffffec
   163b0:	mov	r3, #0
   163b4:	str	r3, [fp, #-24]	; 0xffffffe8
   163b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   163bc:	str	r3, [fp, #-8]
   163c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   163c4:	mov	r2, #0
   163c8:	strh	r2, [r3]
   163cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   163d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   163d4:	cmp	r2, r3
   163d8:	bne	163e4 <_start@@Base+0x1dec>
   163dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   163e0:	b	1644c <_start@@Base+0x1e54>
   163e4:	sub	r2, fp, #24
   163e8:	sub	r3, fp, #20
   163ec:	str	r3, [sp]
   163f0:	mov	r3, r2
   163f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   163f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   163fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16400:	bl	3d578 <flatcc_json_parser_integer@@Base>
   16404:	str	r0, [fp, #-36]	; 0xffffffdc
   16408:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1640c:	ldr	r3, [fp, #-8]
   16410:	cmp	r2, r3
   16414:	beq	16448 <_start@@Base+0x1e50>
   16418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1641c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16420:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16424:	str	r1, [sp, #8]
   16428:	strd	r2, [sp]
   1642c:	mov	r3, r0
   16430:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16434:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1643c:	bl	15b54 <_start@@Base+0x155c>
   16440:	mov	r3, r0
   16444:	b	1644c <_start@@Base+0x1e54>
   16448:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1644c:	mov	r0, r3
   16450:	sub	sp, fp, #4
   16454:	ldr	fp, [sp]
   16458:	add	sp, sp, #4
   1645c:	pop	{pc}		; (ldr pc, [sp], #4)
   16460:	str	fp, [sp, #-8]!
   16464:	str	lr, [sp, #4]
   16468:	add	fp, sp, #4
   1646c:	sub	sp, sp, #56	; 0x38
   16470:	str	r0, [fp, #-32]	; 0xffffffe0
   16474:	str	r1, [fp, #-36]	; 0xffffffdc
   16478:	str	r2, [fp, #-40]	; 0xffffffd8
   1647c:	str	r3, [fp, #-44]	; 0xffffffd4
   16480:	mov	r2, #0
   16484:	mov	r3, #0
   16488:	strd	r2, [fp, #-20]	; 0xffffffec
   1648c:	mov	r3, #0
   16490:	str	r3, [fp, #-24]	; 0xffffffe8
   16494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16498:	str	r3, [fp, #-8]
   1649c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   164a0:	mov	r2, #0
   164a4:	strb	r2, [r3]
   164a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   164ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   164b0:	cmp	r2, r3
   164b4:	bne	164c0 <_start@@Base+0x1ec8>
   164b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   164bc:	b	16528 <_start@@Base+0x1f30>
   164c0:	sub	r2, fp, #24
   164c4:	sub	r3, fp, #20
   164c8:	str	r3, [sp]
   164cc:	mov	r3, r2
   164d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   164d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   164d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   164dc:	bl	3d578 <flatcc_json_parser_integer@@Base>
   164e0:	str	r0, [fp, #-36]	; 0xffffffdc
   164e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   164e8:	ldr	r3, [fp, #-8]
   164ec:	cmp	r2, r3
   164f0:	beq	16524 <_start@@Base+0x1f2c>
   164f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164f8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   164fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16500:	str	r1, [sp, #8]
   16504:	strd	r2, [sp]
   16508:	mov	r3, r0
   1650c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16510:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16514:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16518:	bl	15c20 <_start@@Base+0x1628>
   1651c:	mov	r3, r0
   16520:	b	16528 <_start@@Base+0x1f30>
   16524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16528:	mov	r0, r3
   1652c:	sub	sp, fp, #4
   16530:	ldr	fp, [sp]
   16534:	add	sp, sp, #4
   16538:	pop	{pc}		; (ldr pc, [sp], #4)
   1653c:	str	fp, [sp, #-8]!
   16540:	str	lr, [sp, #4]
   16544:	add	fp, sp, #4
   16548:	sub	sp, sp, #24
   1654c:	str	r0, [fp, #-16]
   16550:	str	r1, [fp, #-20]	; 0xffffffec
   16554:	str	r2, [fp, #-24]	; 0xffffffe8
   16558:	str	r3, [fp, #-28]	; 0xffffffe4
   1655c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16560:	str	r3, [fp, #-8]
   16564:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1656c:	sub	r3, r2, r3
   16570:	cmp	r3, #3
   16574:	ble	165b4 <_start@@Base+0x1fbc>
   16578:	mov	r2, #4
   1657c:	ldr	r3, [pc, #208]	; 16654 <_start@@Base+0x205c>
   16580:	add	r3, pc, r3
   16584:	mov	r1, r3
   16588:	ldr	r0, [fp, #-20]	; 0xffffffec
   1658c:	bl	14528 <memcmp@plt>
   16590:	mov	r3, r0
   16594:	cmp	r3, #0
   16598:	bne	165b4 <_start@@Base+0x1fbc>
   1659c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   165a0:	mov	r2, #1
   165a4:	strb	r2, [r3]
   165a8:	ldr	r3, [fp, #-8]
   165ac:	add	r3, r3, #4
   165b0:	b	16640 <_start@@Base+0x2048>
   165b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   165b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   165bc:	sub	r3, r2, r3
   165c0:	cmp	r3, #4
   165c4:	ble	16604 <_start@@Base+0x200c>
   165c8:	mov	r2, #5
   165cc:	ldr	r3, [pc, #132]	; 16658 <_start@@Base+0x2060>
   165d0:	add	r3, pc, r3
   165d4:	mov	r1, r3
   165d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   165dc:	bl	14528 <memcmp@plt>
   165e0:	mov	r3, r0
   165e4:	cmp	r3, #0
   165e8:	bne	16604 <_start@@Base+0x200c>
   165ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   165f0:	mov	r2, #0
   165f4:	strb	r2, [r3]
   165f8:	ldr	r3, [fp, #-8]
   165fc:	add	r3, r3, #5
   16600:	b	16640 <_start@@Base+0x2048>
   16604:	sub	r3, fp, #9
   16608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1660c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16610:	ldr	r0, [fp, #-16]
   16614:	bl	160ec <_start@@Base+0x1af4>
   16618:	str	r0, [fp, #-20]	; 0xffffffec
   1661c:	ldrb	r3, [fp, #-9]
   16620:	cmp	r3, #0
   16624:	movne	r3, #1
   16628:	moveq	r3, #0
   1662c:	uxtb	r3, r3
   16630:	mov	r2, r3
   16634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16638:	strb	r2, [r3]
   1663c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16640:	mov	r0, r3
   16644:	sub	sp, fp, #4
   16648:	ldr	fp, [sp]
   1664c:	add	sp, sp, #4
   16650:	pop	{pc}		; (ldr pc, [sp], #4)
   16654:	muleq	r3, r8, r9
   16658:	andeq	r7, r3, r0, asr r9
   1665c:	strd	r4, [sp, #-20]!	; 0xffffffec
   16660:	str	r6, [sp, #8]
   16664:	str	fp, [sp, #12]
   16668:	str	lr, [sp, #16]
   1666c:	add	fp, sp, #16
   16670:	sub	sp, sp, #68	; 0x44
   16674:	str	r0, [fp, #-56]	; 0xffffffc8
   16678:	str	r1, [fp, #-60]	; 0xffffffc4
   1667c:	str	r2, [fp, #-64]	; 0xffffffc0
   16680:	str	r3, [fp, #-68]	; 0xffffffbc
   16684:	mov	r2, #0
   16688:	mov	r3, #0
   1668c:	strd	r2, [fp, #-36]	; 0xffffffdc
   16690:	ldr	r1, [fp, #4]
   16694:	mov	r2, #0
   16698:	mov	r3, #0
   1669c:	strd	r2, [r1]
   166a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   166a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   166a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   166ac:	bl	150d4 <_start@@Base+0xadc>
   166b0:	str	r0, [fp, #-60]	; 0xffffffc4
   166b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   166b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   166bc:	cmp	r2, r3
   166c0:	bne	166cc <_start@@Base+0x20d4>
   166c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   166c8:	b	167ec <_start@@Base+0x21f4>
   166cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   166d0:	str	r3, [fp, #-24]	; 0xffffffe8
   166d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   166d8:	ldr	r6, [r3]
   166dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   166e0:	str	r3, [fp, #-28]	; 0xffffffe4
   166e4:	sub	r2, fp, #48	; 0x30
   166e8:	sub	r3, fp, #52	; 0x34
   166ec:	str	r3, [sp, #4]
   166f0:	sub	r3, fp, #44	; 0x2c
   166f4:	str	r3, [sp]
   166f8:	mov	r3, r2
   166fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16700:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16704:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16708:	blx	r6
   1670c:	str	r0, [fp, #-60]	; 0xffffffc4
   16710:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16714:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16718:	cmp	r2, r3
   1671c:	bne	16728 <_start@@Base+0x2130>
   16720:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16724:	b	167ec <_start@@Base+0x21f4>
   16728:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1672c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16730:	cmp	r2, r3
   16734:	bne	16754 <_start@@Base+0x215c>
   16738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1673c:	add	r3, r3, #4
   16740:	str	r3, [fp, #-24]	; 0xffffffe8
   16744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16748:	ldr	r3, [r3]
   1674c:	cmp	r3, #0
   16750:	bne	166d4 <_start@@Base+0x20dc>
   16754:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16758:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1675c:	cmp	r2, r3
   16760:	bne	16780 <_start@@Base+0x2188>
   16764:	mov	r3, #23
   16768:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1676c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16770:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16774:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   16778:	mov	r3, r0
   1677c:	b	167ec <_start@@Base+0x21f4>
   16780:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16784:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16788:	sub	r1, fp, #36	; 0x24
   1678c:	str	r1, [sp, #8]
   16790:	strd	r2, [sp]
   16794:	mov	r3, r0
   16798:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1679c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   167a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   167a4:	bl	15700 <_start@@Base+0x1108>
   167a8:	mov	r2, r0
   167ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   167b0:	cmp	r3, r2
   167b4:	bne	167c0 <_start@@Base+0x21c8>
   167b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   167bc:	b	167ec <_start@@Base+0x21f4>
   167c0:	ldr	r3, [fp, #4]
   167c4:	ldrd	r0, [r3]
   167c8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   167cc:	adds	r4, r0, r2
   167d0:	adc	r5, r1, r3
   167d4:	ldr	r3, [fp, #4]
   167d8:	strd	r4, [r3]
   167dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   167e0:	cmp	r3, #0
   167e4:	bne	166cc <_start@@Base+0x20d4>
   167e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   167ec:	mov	r0, r3
   167f0:	sub	sp, fp, #16
   167f4:	ldrd	r4, [sp]
   167f8:	ldr	r6, [sp, #8]
   167fc:	ldr	fp, [sp, #12]
   16800:	add	sp, sp, #16
   16804:	pop	{pc}		; (ldr pc, [sp], #4)
   16808:	str	r4, [sp, #-12]!
   1680c:	str	fp, [sp, #4]
   16810:	str	lr, [sp, #8]
   16814:	add	fp, sp, #8
   16818:	sub	sp, sp, #68	; 0x44
   1681c:	str	r0, [fp, #-48]	; 0xffffffd0
   16820:	str	r1, [fp, #-52]	; 0xffffffcc
   16824:	str	r2, [fp, #-56]	; 0xffffffc8
   16828:	str	r3, [fp, #-60]	; 0xffffffc4
   1682c:	mov	r3, #0
   16830:	str	r3, [fp, #-24]	; 0xffffffe8
   16834:	ldr	r3, [fp, #4]
   16838:	mov	r2, #0
   1683c:	str	r2, [r3]
   16840:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16844:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16848:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1684c:	bl	150d4 <_start@@Base+0xadc>
   16850:	str	r0, [fp, #-52]	; 0xffffffcc
   16854:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16858:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1685c:	cmp	r2, r3
   16860:	bne	1686c <_start@@Base+0x2274>
   16864:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16868:	b	16988 <_start@@Base+0x2390>
   1686c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16870:	str	r3, [fp, #-16]
   16874:	ldr	r3, [fp, #-16]
   16878:	ldr	r4, [r3]
   1687c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16880:	str	r3, [fp, #-20]	; 0xffffffec
   16884:	sub	r2, fp, #40	; 0x28
   16888:	sub	r3, fp, #44	; 0x2c
   1688c:	str	r3, [sp, #4]
   16890:	sub	r3, fp, #36	; 0x24
   16894:	str	r3, [sp]
   16898:	mov	r3, r2
   1689c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   168a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   168a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   168a8:	blx	r4
   168ac:	str	r0, [fp, #-52]	; 0xffffffcc
   168b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   168b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   168b8:	cmp	r2, r3
   168bc:	bne	168c8 <_start@@Base+0x22d0>
   168c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   168c4:	b	16988 <_start@@Base+0x2390>
   168c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   168cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   168d0:	cmp	r2, r3
   168d4:	bne	168f4 <_start@@Base+0x22fc>
   168d8:	ldr	r3, [fp, #-16]
   168dc:	add	r3, r3, #4
   168e0:	str	r3, [fp, #-16]
   168e4:	ldr	r3, [fp, #-16]
   168e8:	ldr	r3, [r3]
   168ec:	cmp	r3, #0
   168f0:	bne	16874 <_start@@Base+0x227c>
   168f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   168f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   168fc:	cmp	r2, r3
   16900:	bne	16920 <_start@@Base+0x2328>
   16904:	mov	r3, #23
   16908:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1690c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16910:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16914:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   16918:	mov	r3, r0
   1691c:	b	16988 <_start@@Base+0x2390>
   16920:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16924:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16928:	sub	r1, fp, #24
   1692c:	str	r1, [sp, #8]
   16930:	strd	r2, [sp]
   16934:	mov	r3, r0
   16938:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1693c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16940:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16944:	bl	157f4 <_start@@Base+0x11fc>
   16948:	mov	r2, r0
   1694c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16950:	cmp	r3, r2
   16954:	bne	16960 <_start@@Base+0x2368>
   16958:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1695c:	b	16988 <_start@@Base+0x2390>
   16960:	ldr	r3, [fp, #4]
   16964:	ldr	r2, [r3]
   16968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1696c:	add	r2, r2, r3
   16970:	ldr	r3, [fp, #4]
   16974:	str	r2, [r3]
   16978:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1697c:	cmp	r3, #0
   16980:	bne	1686c <_start@@Base+0x2274>
   16984:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16988:	mov	r0, r3
   1698c:	sub	sp, fp, #8
   16990:	ldr	r4, [sp]
   16994:	ldr	fp, [sp, #4]
   16998:	add	sp, sp, #8
   1699c:	pop	{pc}		; (ldr pc, [sp], #4)
   169a0:	str	r4, [sp, #-12]!
   169a4:	str	fp, [sp, #4]
   169a8:	str	lr, [sp, #8]
   169ac:	add	fp, sp, #8
   169b0:	sub	sp, sp, #68	; 0x44
   169b4:	str	r0, [fp, #-48]	; 0xffffffd0
   169b8:	str	r1, [fp, #-52]	; 0xffffffcc
   169bc:	str	r2, [fp, #-56]	; 0xffffffc8
   169c0:	str	r3, [fp, #-60]	; 0xffffffc4
   169c4:	mov	r3, #0
   169c8:	strh	r3, [fp, #-22]	; 0xffffffea
   169cc:	ldr	r3, [fp, #4]
   169d0:	mov	r2, #0
   169d4:	strh	r2, [r3]
   169d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   169dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   169e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   169e4:	bl	150d4 <_start@@Base+0xadc>
   169e8:	str	r0, [fp, #-52]	; 0xffffffcc
   169ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   169f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   169f4:	cmp	r2, r3
   169f8:	bne	16a04 <_start@@Base+0x240c>
   169fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a00:	b	16b24 <_start@@Base+0x252c>
   16a04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16a08:	str	r3, [fp, #-16]
   16a0c:	ldr	r3, [fp, #-16]
   16a10:	ldr	r4, [r3]
   16a14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a18:	str	r3, [fp, #-20]	; 0xffffffec
   16a1c:	sub	r2, fp, #40	; 0x28
   16a20:	sub	r3, fp, #44	; 0x2c
   16a24:	str	r3, [sp, #4]
   16a28:	sub	r3, fp, #36	; 0x24
   16a2c:	str	r3, [sp]
   16a30:	mov	r3, r2
   16a34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16a38:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16a40:	blx	r4
   16a44:	str	r0, [fp, #-52]	; 0xffffffcc
   16a48:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16a4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a50:	cmp	r2, r3
   16a54:	bne	16a60 <_start@@Base+0x2468>
   16a58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a5c:	b	16b24 <_start@@Base+0x252c>
   16a60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a68:	cmp	r2, r3
   16a6c:	bne	16a8c <_start@@Base+0x2494>
   16a70:	ldr	r3, [fp, #-16]
   16a74:	add	r3, r3, #4
   16a78:	str	r3, [fp, #-16]
   16a7c:	ldr	r3, [fp, #-16]
   16a80:	ldr	r3, [r3]
   16a84:	cmp	r3, #0
   16a88:	bne	16a0c <_start@@Base+0x2414>
   16a8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a94:	cmp	r2, r3
   16a98:	bne	16ab8 <_start@@Base+0x24c0>
   16a9c:	mov	r3, #23
   16aa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16aa4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16aa8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16aac:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   16ab0:	mov	r3, r0
   16ab4:	b	16b24 <_start@@Base+0x252c>
   16ab8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16abc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16ac0:	sub	r1, fp, #22
   16ac4:	str	r1, [sp, #8]
   16ac8:	strd	r2, [sp]
   16acc:	mov	r3, r0
   16ad0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ad4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16ad8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16adc:	bl	15894 <_start@@Base+0x129c>
   16ae0:	mov	r2, r0
   16ae4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ae8:	cmp	r3, r2
   16aec:	bne	16af8 <_start@@Base+0x2500>
   16af0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16af4:	b	16b24 <_start@@Base+0x252c>
   16af8:	ldr	r3, [fp, #4]
   16afc:	ldrh	r2, [r3]
   16b00:	ldrh	r3, [fp, #-22]	; 0xffffffea
   16b04:	add	r3, r2, r3
   16b08:	uxth	r2, r3
   16b0c:	ldr	r3, [fp, #4]
   16b10:	strh	r2, [r3]
   16b14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b18:	cmp	r3, #0
   16b1c:	bne	16a04 <_start@@Base+0x240c>
   16b20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b24:	mov	r0, r3
   16b28:	sub	sp, fp, #8
   16b2c:	ldr	r4, [sp]
   16b30:	ldr	fp, [sp, #4]
   16b34:	add	sp, sp, #8
   16b38:	pop	{pc}		; (ldr pc, [sp], #4)
   16b3c:	str	r4, [sp, #-12]!
   16b40:	str	fp, [sp, #4]
   16b44:	str	lr, [sp, #8]
   16b48:	add	fp, sp, #8
   16b4c:	sub	sp, sp, #68	; 0x44
   16b50:	str	r0, [fp, #-48]	; 0xffffffd0
   16b54:	str	r1, [fp, #-52]	; 0xffffffcc
   16b58:	str	r2, [fp, #-56]	; 0xffffffc8
   16b5c:	str	r3, [fp, #-60]	; 0xffffffc4
   16b60:	mov	r3, #0
   16b64:	strb	r3, [fp, #-21]	; 0xffffffeb
   16b68:	ldr	r3, [fp, #4]
   16b6c:	mov	r2, #0
   16b70:	strb	r2, [r3]
   16b74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16b78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16b7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b80:	bl	150d4 <_start@@Base+0xadc>
   16b84:	str	r0, [fp, #-52]	; 0xffffffcc
   16b88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16b8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16b90:	cmp	r2, r3
   16b94:	bne	16ba0 <_start@@Base+0x25a8>
   16b98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b9c:	b	16cc0 <_start@@Base+0x26c8>
   16ba0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16ba4:	str	r3, [fp, #-16]
   16ba8:	ldr	r3, [fp, #-16]
   16bac:	ldr	r4, [r3]
   16bb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16bb4:	str	r3, [fp, #-20]	; 0xffffffec
   16bb8:	sub	r2, fp, #40	; 0x28
   16bbc:	sub	r3, fp, #44	; 0x2c
   16bc0:	str	r3, [sp, #4]
   16bc4:	sub	r3, fp, #36	; 0x24
   16bc8:	str	r3, [sp]
   16bcc:	mov	r3, r2
   16bd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16bd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16bdc:	blx	r4
   16be0:	str	r0, [fp, #-52]	; 0xffffffcc
   16be4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16be8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16bec:	cmp	r2, r3
   16bf0:	bne	16bfc <_start@@Base+0x2604>
   16bf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16bf8:	b	16cc0 <_start@@Base+0x26c8>
   16bfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16c00:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c04:	cmp	r2, r3
   16c08:	bne	16c28 <_start@@Base+0x2630>
   16c0c:	ldr	r3, [fp, #-16]
   16c10:	add	r3, r3, #4
   16c14:	str	r3, [fp, #-16]
   16c18:	ldr	r3, [fp, #-16]
   16c1c:	ldr	r3, [r3]
   16c20:	cmp	r3, #0
   16c24:	bne	16ba8 <_start@@Base+0x25b0>
   16c28:	ldr	r2, [fp, #-20]	; 0xffffffec
   16c2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16c30:	cmp	r2, r3
   16c34:	bne	16c54 <_start@@Base+0x265c>
   16c38:	mov	r3, #23
   16c3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c48:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   16c4c:	mov	r3, r0
   16c50:	b	16cc0 <_start@@Base+0x26c8>
   16c54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c58:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16c5c:	sub	r1, fp, #21
   16c60:	str	r1, [sp, #8]
   16c64:	strd	r2, [sp]
   16c68:	mov	r3, r0
   16c6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c70:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c78:	bl	15934 <_start@@Base+0x133c>
   16c7c:	mov	r2, r0
   16c80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c84:	cmp	r3, r2
   16c88:	bne	16c94 <_start@@Base+0x269c>
   16c8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c90:	b	16cc0 <_start@@Base+0x26c8>
   16c94:	ldr	r3, [fp, #4]
   16c98:	ldrb	r2, [r3]
   16c9c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   16ca0:	add	r3, r2, r3
   16ca4:	uxtb	r2, r3
   16ca8:	ldr	r3, [fp, #4]
   16cac:	strb	r2, [r3]
   16cb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16cb4:	cmp	r3, #0
   16cb8:	bne	16ba0 <_start@@Base+0x25a8>
   16cbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16cc0:	mov	r0, r3
   16cc4:	sub	sp, fp, #8
   16cc8:	ldr	r4, [sp]
   16ccc:	ldr	fp, [sp, #4]
   16cd0:	add	sp, sp, #8
   16cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   16cd8:	strd	r4, [sp, #-20]!	; 0xffffffec
   16cdc:	str	r6, [sp, #8]
   16ce0:	str	fp, [sp, #12]
   16ce4:	str	lr, [sp, #16]
   16ce8:	add	fp, sp, #16
   16cec:	sub	sp, sp, #68	; 0x44
   16cf0:	str	r0, [fp, #-56]	; 0xffffffc8
   16cf4:	str	r1, [fp, #-60]	; 0xffffffc4
   16cf8:	str	r2, [fp, #-64]	; 0xffffffc0
   16cfc:	str	r3, [fp, #-68]	; 0xffffffbc
   16d00:	mov	r2, #0
   16d04:	mov	r3, #0
   16d08:	strd	r2, [fp, #-36]	; 0xffffffdc
   16d0c:	ldr	r1, [fp, #4]
   16d10:	mov	r2, #0
   16d14:	mov	r3, #0
   16d18:	strd	r2, [r1]
   16d1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16d20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16d24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16d28:	bl	150d4 <_start@@Base+0xadc>
   16d2c:	str	r0, [fp, #-60]	; 0xffffffc4
   16d30:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16d34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d38:	cmp	r2, r3
   16d3c:	bne	16d48 <_start@@Base+0x2750>
   16d40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16d44:	b	16e68 <_start@@Base+0x2870>
   16d48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16d4c:	str	r3, [fp, #-24]	; 0xffffffe8
   16d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d54:	ldr	r6, [r3]
   16d58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16d5c:	str	r3, [fp, #-28]	; 0xffffffe4
   16d60:	sub	r2, fp, #48	; 0x30
   16d64:	sub	r3, fp, #52	; 0x34
   16d68:	str	r3, [sp, #4]
   16d6c:	sub	r3, fp, #44	; 0x2c
   16d70:	str	r3, [sp]
   16d74:	mov	r3, r2
   16d78:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16d7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16d84:	blx	r6
   16d88:	str	r0, [fp, #-60]	; 0xffffffc4
   16d8c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16d90:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d94:	cmp	r2, r3
   16d98:	bne	16da4 <_start@@Base+0x27ac>
   16d9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16da0:	b	16e68 <_start@@Base+0x2870>
   16da4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16da8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16dac:	cmp	r2, r3
   16db0:	bne	16dd0 <_start@@Base+0x27d8>
   16db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16db8:	add	r3, r3, #4
   16dbc:	str	r3, [fp, #-24]	; 0xffffffe8
   16dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16dc4:	ldr	r3, [r3]
   16dc8:	cmp	r3, #0
   16dcc:	bne	16d50 <_start@@Base+0x2758>
   16dd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16dd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16dd8:	cmp	r2, r3
   16ddc:	bne	16dfc <_start@@Base+0x2804>
   16de0:	mov	r3, #23
   16de4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16de8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16dec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16df0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   16df4:	mov	r3, r0
   16df8:	b	16e68 <_start@@Base+0x2870>
   16dfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16e00:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16e04:	sub	r1, fp, #36	; 0x24
   16e08:	str	r1, [sp, #8]
   16e0c:	strd	r2, [sp]
   16e10:	mov	r3, r0
   16e14:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16e18:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16e1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16e20:	bl	159cc <_start@@Base+0x13d4>
   16e24:	mov	r2, r0
   16e28:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e2c:	cmp	r3, r2
   16e30:	bne	16e3c <_start@@Base+0x2844>
   16e34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e38:	b	16e68 <_start@@Base+0x2870>
   16e3c:	ldr	r3, [fp, #4]
   16e40:	ldrd	r0, [r3]
   16e44:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16e48:	adds	r4, r0, r2
   16e4c:	adc	r5, r1, r3
   16e50:	ldr	r3, [fp, #4]
   16e54:	strd	r4, [r3]
   16e58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16e5c:	cmp	r3, #0
   16e60:	bne	16d48 <_start@@Base+0x2750>
   16e64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16e68:	mov	r0, r3
   16e6c:	sub	sp, fp, #16
   16e70:	ldrd	r4, [sp]
   16e74:	ldr	r6, [sp, #8]
   16e78:	ldr	fp, [sp, #12]
   16e7c:	add	sp, sp, #16
   16e80:	pop	{pc}		; (ldr pc, [sp], #4)
   16e84:	str	r4, [sp, #-12]!
   16e88:	str	fp, [sp, #4]
   16e8c:	str	lr, [sp, #8]
   16e90:	add	fp, sp, #8
   16e94:	sub	sp, sp, #68	; 0x44
   16e98:	str	r0, [fp, #-48]	; 0xffffffd0
   16e9c:	str	r1, [fp, #-52]	; 0xffffffcc
   16ea0:	str	r2, [fp, #-56]	; 0xffffffc8
   16ea4:	str	r3, [fp, #-60]	; 0xffffffc4
   16ea8:	mov	r3, #0
   16eac:	str	r3, [fp, #-24]	; 0xffffffe8
   16eb0:	ldr	r3, [fp, #4]
   16eb4:	mov	r2, #0
   16eb8:	str	r2, [r3]
   16ebc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ec0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16ec4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16ec8:	bl	150d4 <_start@@Base+0xadc>
   16ecc:	str	r0, [fp, #-52]	; 0xffffffcc
   16ed0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16ed4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ed8:	cmp	r2, r3
   16edc:	bne	16ee8 <_start@@Base+0x28f0>
   16ee0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16ee4:	b	17004 <_start@@Base+0x2a0c>
   16ee8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16eec:	str	r3, [fp, #-16]
   16ef0:	ldr	r3, [fp, #-16]
   16ef4:	ldr	r4, [r3]
   16ef8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16efc:	str	r3, [fp, #-20]	; 0xffffffec
   16f00:	sub	r2, fp, #40	; 0x28
   16f04:	sub	r3, fp, #44	; 0x2c
   16f08:	str	r3, [sp, #4]
   16f0c:	sub	r3, fp, #36	; 0x24
   16f10:	str	r3, [sp]
   16f14:	mov	r3, r2
   16f18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f24:	blx	r4
   16f28:	str	r0, [fp, #-52]	; 0xffffffcc
   16f2c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f34:	cmp	r2, r3
   16f38:	bne	16f44 <_start@@Base+0x294c>
   16f3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f40:	b	17004 <_start@@Base+0x2a0c>
   16f44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f4c:	cmp	r2, r3
   16f50:	bne	16f70 <_start@@Base+0x2978>
   16f54:	ldr	r3, [fp, #-16]
   16f58:	add	r3, r3, #4
   16f5c:	str	r3, [fp, #-16]
   16f60:	ldr	r3, [fp, #-16]
   16f64:	ldr	r3, [r3]
   16f68:	cmp	r3, #0
   16f6c:	bne	16ef0 <_start@@Base+0x28f8>
   16f70:	ldr	r2, [fp, #-20]	; 0xffffffec
   16f74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f78:	cmp	r2, r3
   16f7c:	bne	16f9c <_start@@Base+0x29a4>
   16f80:	mov	r3, #23
   16f84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16f8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f90:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   16f94:	mov	r3, r0
   16f98:	b	17004 <_start@@Base+0x2a0c>
   16f9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16fa0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16fa4:	sub	r1, fp, #24
   16fa8:	str	r1, [sp, #8]
   16fac:	strd	r2, [sp]
   16fb0:	mov	r3, r0
   16fb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16fb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16fbc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16fc0:	bl	15a8c <_start@@Base+0x1494>
   16fc4:	mov	r2, r0
   16fc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fcc:	cmp	r3, r2
   16fd0:	bne	16fdc <_start@@Base+0x29e4>
   16fd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fd8:	b	17004 <_start@@Base+0x2a0c>
   16fdc:	ldr	r3, [fp, #4]
   16fe0:	ldr	r2, [r3]
   16fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16fe8:	add	r2, r2, r3
   16fec:	ldr	r3, [fp, #4]
   16ff0:	str	r2, [r3]
   16ff4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ff8:	cmp	r3, #0
   16ffc:	bne	16ee8 <_start@@Base+0x28f0>
   17000:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17004:	mov	r0, r3
   17008:	sub	sp, fp, #8
   1700c:	ldr	r4, [sp]
   17010:	ldr	fp, [sp, #4]
   17014:	add	sp, sp, #8
   17018:	pop	{pc}		; (ldr pc, [sp], #4)
   1701c:	str	r4, [sp, #-12]!
   17020:	str	fp, [sp, #4]
   17024:	str	lr, [sp, #8]
   17028:	add	fp, sp, #8
   1702c:	sub	sp, sp, #68	; 0x44
   17030:	str	r0, [fp, #-48]	; 0xffffffd0
   17034:	str	r1, [fp, #-52]	; 0xffffffcc
   17038:	str	r2, [fp, #-56]	; 0xffffffc8
   1703c:	str	r3, [fp, #-60]	; 0xffffffc4
   17040:	mov	r3, #0
   17044:	strh	r3, [fp, #-22]	; 0xffffffea
   17048:	ldr	r3, [fp, #4]
   1704c:	mov	r2, #0
   17050:	strh	r2, [r3]
   17054:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17058:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1705c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17060:	bl	150d4 <_start@@Base+0xadc>
   17064:	str	r0, [fp, #-52]	; 0xffffffcc
   17068:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1706c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17070:	cmp	r2, r3
   17074:	bne	17080 <_start@@Base+0x2a88>
   17078:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1707c:	b	171ac <_start@@Base+0x2bb4>
   17080:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17084:	str	r3, [fp, #-16]
   17088:	ldr	r3, [fp, #-16]
   1708c:	ldr	r4, [r3]
   17090:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17094:	str	r3, [fp, #-20]	; 0xffffffec
   17098:	sub	r2, fp, #40	; 0x28
   1709c:	sub	r3, fp, #44	; 0x2c
   170a0:	str	r3, [sp, #4]
   170a4:	sub	r3, fp, #36	; 0x24
   170a8:	str	r3, [sp]
   170ac:	mov	r3, r2
   170b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   170b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   170b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   170bc:	blx	r4
   170c0:	str	r0, [fp, #-52]	; 0xffffffcc
   170c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   170c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   170cc:	cmp	r2, r3
   170d0:	bne	170dc <_start@@Base+0x2ae4>
   170d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170d8:	b	171ac <_start@@Base+0x2bb4>
   170dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   170e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   170e4:	cmp	r2, r3
   170e8:	bne	17108 <_start@@Base+0x2b10>
   170ec:	ldr	r3, [fp, #-16]
   170f0:	add	r3, r3, #4
   170f4:	str	r3, [fp, #-16]
   170f8:	ldr	r3, [fp, #-16]
   170fc:	ldr	r3, [r3]
   17100:	cmp	r3, #0
   17104:	bne	17088 <_start@@Base+0x2a90>
   17108:	ldr	r2, [fp, #-20]	; 0xffffffec
   1710c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17110:	cmp	r2, r3
   17114:	bne	17134 <_start@@Base+0x2b3c>
   17118:	mov	r3, #23
   1711c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17120:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17124:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17128:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1712c:	mov	r3, r0
   17130:	b	171ac <_start@@Base+0x2bb4>
   17134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17138:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1713c:	sub	r1, fp, #22
   17140:	str	r1, [sp, #8]
   17144:	strd	r2, [sp]
   17148:	mov	r3, r0
   1714c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17150:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17154:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17158:	bl	15b54 <_start@@Base+0x155c>
   1715c:	mov	r2, r0
   17160:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17164:	cmp	r3, r2
   17168:	bne	17174 <_start@@Base+0x2b7c>
   1716c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17170:	b	171ac <_start@@Base+0x2bb4>
   17174:	ldr	r3, [fp, #4]
   17178:	ldrsh	r3, [r3]
   1717c:	uxth	r2, r3
   17180:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   17184:	uxth	r3, r3
   17188:	add	r3, r2, r3
   1718c:	uxth	r3, r3
   17190:	sxth	r2, r3
   17194:	ldr	r3, [fp, #4]
   17198:	strh	r2, [r3]
   1719c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   171a0:	cmp	r3, #0
   171a4:	bne	17080 <_start@@Base+0x2a88>
   171a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171ac:	mov	r0, r3
   171b0:	sub	sp, fp, #8
   171b4:	ldr	r4, [sp]
   171b8:	ldr	fp, [sp, #4]
   171bc:	add	sp, sp, #8
   171c0:	pop	{pc}		; (ldr pc, [sp], #4)
   171c4:	str	r4, [sp, #-12]!
   171c8:	str	fp, [sp, #4]
   171cc:	str	lr, [sp, #8]
   171d0:	add	fp, sp, #8
   171d4:	sub	sp, sp, #68	; 0x44
   171d8:	str	r0, [fp, #-48]	; 0xffffffd0
   171dc:	str	r1, [fp, #-52]	; 0xffffffcc
   171e0:	str	r2, [fp, #-56]	; 0xffffffc8
   171e4:	str	r3, [fp, #-60]	; 0xffffffc4
   171e8:	mov	r3, #0
   171ec:	strb	r3, [fp, #-21]	; 0xffffffeb
   171f0:	ldr	r3, [fp, #4]
   171f4:	mov	r2, #0
   171f8:	strb	r2, [r3]
   171fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17200:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17204:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17208:	bl	150d4 <_start@@Base+0xadc>
   1720c:	str	r0, [fp, #-52]	; 0xffffffcc
   17210:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17214:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17218:	cmp	r2, r3
   1721c:	bne	17228 <_start@@Base+0x2c30>
   17220:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17224:	b	17354 <_start@@Base+0x2d5c>
   17228:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1722c:	str	r3, [fp, #-16]
   17230:	ldr	r3, [fp, #-16]
   17234:	ldr	r4, [r3]
   17238:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1723c:	str	r3, [fp, #-20]	; 0xffffffec
   17240:	sub	r2, fp, #40	; 0x28
   17244:	sub	r3, fp, #44	; 0x2c
   17248:	str	r3, [sp, #4]
   1724c:	sub	r3, fp, #36	; 0x24
   17250:	str	r3, [sp]
   17254:	mov	r3, r2
   17258:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1725c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17260:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17264:	blx	r4
   17268:	str	r0, [fp, #-52]	; 0xffffffcc
   1726c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17270:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17274:	cmp	r2, r3
   17278:	bne	17284 <_start@@Base+0x2c8c>
   1727c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17280:	b	17354 <_start@@Base+0x2d5c>
   17284:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1728c:	cmp	r2, r3
   17290:	bne	172b0 <_start@@Base+0x2cb8>
   17294:	ldr	r3, [fp, #-16]
   17298:	add	r3, r3, #4
   1729c:	str	r3, [fp, #-16]
   172a0:	ldr	r3, [fp, #-16]
   172a4:	ldr	r3, [r3]
   172a8:	cmp	r3, #0
   172ac:	bne	17230 <_start@@Base+0x2c38>
   172b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   172b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172b8:	cmp	r2, r3
   172bc:	bne	172dc <_start@@Base+0x2ce4>
   172c0:	mov	r3, #23
   172c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   172c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   172cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   172d0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   172d4:	mov	r3, r0
   172d8:	b	17354 <_start@@Base+0x2d5c>
   172dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172e0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   172e4:	sub	r1, fp, #21
   172e8:	str	r1, [sp, #8]
   172ec:	strd	r2, [sp]
   172f0:	mov	r3, r0
   172f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   172f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   172fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17300:	bl	15c20 <_start@@Base+0x1628>
   17304:	mov	r2, r0
   17308:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1730c:	cmp	r3, r2
   17310:	bne	1731c <_start@@Base+0x2d24>
   17314:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17318:	b	17354 <_start@@Base+0x2d5c>
   1731c:	ldr	r3, [fp, #4]
   17320:	ldrsb	r3, [r3]
   17324:	uxtb	r2, r3
   17328:	ldrsb	r3, [fp, #-21]	; 0xffffffeb
   1732c:	uxtb	r3, r3
   17330:	add	r3, r2, r3
   17334:	uxtb	r3, r3
   17338:	sxtb	r2, r3
   1733c:	ldr	r3, [fp, #4]
   17340:	strb	r2, [r3]
   17344:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17348:	cmp	r3, #0
   1734c:	bne	17228 <_start@@Base+0x2c30>
   17350:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17354:	mov	r0, r3
   17358:	sub	sp, fp, #8
   1735c:	ldr	r4, [sp]
   17360:	ldr	fp, [sp, #4]
   17364:	add	sp, sp, #8
   17368:	pop	{pc}		; (ldr pc, [sp], #4)
   1736c:	str	r4, [sp, #-12]!
   17370:	str	fp, [sp, #4]
   17374:	str	lr, [sp, #8]
   17378:	add	fp, sp, #8
   1737c:	sub	sp, sp, #68	; 0x44
   17380:	str	r0, [fp, #-48]	; 0xffffffd0
   17384:	str	r1, [fp, #-52]	; 0xffffffcc
   17388:	str	r2, [fp, #-56]	; 0xffffffc8
   1738c:	str	r3, [fp, #-60]	; 0xffffffc4
   17390:	mov	r3, #0
   17394:	strb	r3, [fp, #-21]	; 0xffffffeb
   17398:	ldr	r3, [fp, #4]
   1739c:	mov	r2, #0
   173a0:	strb	r2, [r3]
   173a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   173a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   173ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   173b0:	bl	150d4 <_start@@Base+0xadc>
   173b4:	str	r0, [fp, #-52]	; 0xffffffcc
   173b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   173bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   173c0:	cmp	r2, r3
   173c4:	bne	173d0 <_start@@Base+0x2dd8>
   173c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   173cc:	b	174f0 <_start@@Base+0x2ef8>
   173d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   173d4:	str	r3, [fp, #-16]
   173d8:	ldr	r3, [fp, #-16]
   173dc:	ldr	r4, [r3]
   173e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   173e4:	str	r3, [fp, #-20]	; 0xffffffec
   173e8:	sub	r2, fp, #40	; 0x28
   173ec:	sub	r3, fp, #44	; 0x2c
   173f0:	str	r3, [sp, #4]
   173f4:	sub	r3, fp, #36	; 0x24
   173f8:	str	r3, [sp]
   173fc:	mov	r3, r2
   17400:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17404:	ldr	r1, [fp, #-20]	; 0xffffffec
   17408:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1740c:	blx	r4
   17410:	str	r0, [fp, #-52]	; 0xffffffcc
   17414:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17418:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1741c:	cmp	r2, r3
   17420:	bne	1742c <_start@@Base+0x2e34>
   17424:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17428:	b	174f0 <_start@@Base+0x2ef8>
   1742c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17430:	ldr	r3, [fp, #-20]	; 0xffffffec
   17434:	cmp	r2, r3
   17438:	bne	17458 <_start@@Base+0x2e60>
   1743c:	ldr	r3, [fp, #-16]
   17440:	add	r3, r3, #4
   17444:	str	r3, [fp, #-16]
   17448:	ldr	r3, [fp, #-16]
   1744c:	ldr	r3, [r3]
   17450:	cmp	r3, #0
   17454:	bne	173d8 <_start@@Base+0x2de0>
   17458:	ldr	r2, [fp, #-20]	; 0xffffffec
   1745c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17460:	cmp	r2, r3
   17464:	bne	17484 <_start@@Base+0x2e8c>
   17468:	mov	r3, #23
   1746c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17470:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17474:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17478:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1747c:	mov	r3, r0
   17480:	b	174f0 <_start@@Base+0x2ef8>
   17484:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17488:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1748c:	sub	r1, fp, #21
   17490:	str	r1, [sp, #8]
   17494:	strd	r2, [sp]
   17498:	mov	r3, r0
   1749c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   174a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   174a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   174a8:	bl	1576c <_start@@Base+0x1174>
   174ac:	mov	r2, r0
   174b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   174b4:	cmp	r3, r2
   174b8:	bne	174c4 <_start@@Base+0x2ecc>
   174bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   174c0:	b	174f0 <_start@@Base+0x2ef8>
   174c4:	ldr	r3, [fp, #4]
   174c8:	ldrb	r2, [r3]
   174cc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   174d0:	add	r3, r2, r3
   174d4:	uxtb	r2, r3
   174d8:	ldr	r3, [fp, #4]
   174dc:	strb	r2, [r3]
   174e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   174e4:	cmp	r3, #0
   174e8:	bne	173d0 <_start@@Base+0x2dd8>
   174ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   174f0:	mov	r0, r3
   174f4:	sub	sp, fp, #8
   174f8:	ldr	r4, [sp]
   174fc:	ldr	fp, [sp, #4]
   17500:	add	sp, sp, #8
   17504:	pop	{pc}		; (ldr pc, [sp], #4)
   17508:	str	r4, [sp, #-12]!
   1750c:	str	fp, [sp, #4]
   17510:	str	lr, [sp, #8]
   17514:	add	fp, sp, #8
   17518:	sub	sp, sp, #68	; 0x44
   1751c:	str	r0, [fp, #-48]	; 0xffffffd0
   17520:	str	r1, [fp, #-52]	; 0xffffffcc
   17524:	str	r2, [fp, #-56]	; 0xffffffc8
   17528:	str	r3, [fp, #-60]	; 0xffffffc4
   1752c:	mov	r3, #0
   17530:	str	r3, [fp, #-24]	; 0xffffffe8
   17534:	ldr	r3, [fp, #4]
   17538:	mov	r2, #0
   1753c:	str	r2, [r3]
   17540:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17544:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17548:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1754c:	bl	150d4 <_start@@Base+0xadc>
   17550:	str	r0, [fp, #-52]	; 0xffffffcc
   17554:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17558:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1755c:	cmp	r2, r3
   17560:	bne	1756c <_start@@Base+0x2f74>
   17564:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17568:	b	17688 <_start@@Base+0x3090>
   1756c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17570:	str	r3, [fp, #-16]
   17574:	ldr	r3, [fp, #-16]
   17578:	ldr	r4, [r3]
   1757c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17580:	str	r3, [fp, #-20]	; 0xffffffec
   17584:	sub	r2, fp, #40	; 0x28
   17588:	sub	r3, fp, #44	; 0x2c
   1758c:	str	r3, [sp, #4]
   17590:	sub	r3, fp, #36	; 0x24
   17594:	str	r3, [sp]
   17598:	mov	r3, r2
   1759c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   175a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   175a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   175a8:	blx	r4
   175ac:	str	r0, [fp, #-52]	; 0xffffffcc
   175b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   175b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   175b8:	cmp	r2, r3
   175bc:	bne	175c8 <_start@@Base+0x2fd0>
   175c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   175c4:	b	17688 <_start@@Base+0x3090>
   175c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   175cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   175d0:	cmp	r2, r3
   175d4:	bne	175f4 <_start@@Base+0x2ffc>
   175d8:	ldr	r3, [fp, #-16]
   175dc:	add	r3, r3, #4
   175e0:	str	r3, [fp, #-16]
   175e4:	ldr	r3, [fp, #-16]
   175e8:	ldr	r3, [r3]
   175ec:	cmp	r3, #0
   175f0:	bne	17574 <_start@@Base+0x2f7c>
   175f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   175f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   175fc:	cmp	r2, r3
   17600:	bne	17620 <_start@@Base+0x3028>
   17604:	mov	r3, #23
   17608:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1760c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17610:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17614:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   17618:	mov	r3, r0
   1761c:	b	17688 <_start@@Base+0x3090>
   17620:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17624:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17628:	sub	r1, fp, #24
   1762c:	str	r1, [sp, #8]
   17630:	strd	r2, [sp]
   17634:	mov	r3, r0
   17638:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1763c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17640:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17644:	bl	15ce4 <_start@@Base+0x16ec>
   17648:	mov	r2, r0
   1764c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17650:	cmp	r3, r2
   17654:	bne	17660 <_start@@Base+0x3068>
   17658:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1765c:	b	17688 <_start@@Base+0x3090>
   17660:	ldr	r3, [fp, #4]
   17664:	vldr	s14, [r3]
   17668:	vldr	s15, [fp, #-24]	; 0xffffffe8
   1766c:	vadd.f32	s15, s14, s15
   17670:	ldr	r3, [fp, #4]
   17674:	vstr	s15, [r3]
   17678:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1767c:	cmp	r3, #0
   17680:	bne	1756c <_start@@Base+0x2f74>
   17684:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17688:	mov	r0, r3
   1768c:	sub	sp, fp, #8
   17690:	ldr	r4, [sp]
   17694:	ldr	fp, [sp, #4]
   17698:	add	sp, sp, #8
   1769c:	pop	{pc}		; (ldr pc, [sp], #4)
   176a0:	str	r4, [sp, #-12]!
   176a4:	str	fp, [sp, #4]
   176a8:	str	lr, [sp, #8]
   176ac:	add	fp, sp, #8
   176b0:	sub	sp, sp, #68	; 0x44
   176b4:	str	r0, [fp, #-48]	; 0xffffffd0
   176b8:	str	r1, [fp, #-52]	; 0xffffffcc
   176bc:	str	r2, [fp, #-56]	; 0xffffffc8
   176c0:	str	r3, [fp, #-60]	; 0xffffffc4
   176c4:	mov	r2, #0
   176c8:	mov	r3, #0
   176cc:	strd	r2, [fp, #-28]	; 0xffffffe4
   176d0:	ldr	r1, [fp, #4]
   176d4:	mov	r2, #0
   176d8:	mov	r3, #0
   176dc:	strd	r2, [r1]
   176e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   176e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   176e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   176ec:	bl	150d4 <_start@@Base+0xadc>
   176f0:	str	r0, [fp, #-52]	; 0xffffffcc
   176f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   176f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   176fc:	cmp	r2, r3
   17700:	bne	1770c <_start@@Base+0x3114>
   17704:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17708:	b	17828 <_start@@Base+0x3230>
   1770c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17710:	str	r3, [fp, #-16]
   17714:	ldr	r3, [fp, #-16]
   17718:	ldr	r4, [r3]
   1771c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17720:	str	r3, [fp, #-20]	; 0xffffffec
   17724:	sub	r2, fp, #40	; 0x28
   17728:	sub	r3, fp, #44	; 0x2c
   1772c:	str	r3, [sp, #4]
   17730:	sub	r3, fp, #36	; 0x24
   17734:	str	r3, [sp]
   17738:	mov	r3, r2
   1773c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17740:	ldr	r1, [fp, #-20]	; 0xffffffec
   17744:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17748:	blx	r4
   1774c:	str	r0, [fp, #-52]	; 0xffffffcc
   17750:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17754:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17758:	cmp	r2, r3
   1775c:	bne	17768 <_start@@Base+0x3170>
   17760:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17764:	b	17828 <_start@@Base+0x3230>
   17768:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1776c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17770:	cmp	r2, r3
   17774:	bne	17794 <_start@@Base+0x319c>
   17778:	ldr	r3, [fp, #-16]
   1777c:	add	r3, r3, #4
   17780:	str	r3, [fp, #-16]
   17784:	ldr	r3, [fp, #-16]
   17788:	ldr	r3, [r3]
   1778c:	cmp	r3, #0
   17790:	bne	17714 <_start@@Base+0x311c>
   17794:	ldr	r2, [fp, #-20]	; 0xffffffec
   17798:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1779c:	cmp	r2, r3
   177a0:	bne	177c0 <_start@@Base+0x31c8>
   177a4:	mov	r3, #23
   177a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   177ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   177b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   177b4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   177b8:	mov	r3, r0
   177bc:	b	17828 <_start@@Base+0x3230>
   177c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177c4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   177c8:	sub	r1, fp, #28
   177cc:	str	r1, [sp, #8]
   177d0:	strd	r2, [sp]
   177d4:	mov	r3, r0
   177d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   177dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   177e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   177e4:	bl	15d50 <_start@@Base+0x1758>
   177e8:	mov	r2, r0
   177ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   177f0:	cmp	r3, r2
   177f4:	bne	17800 <_start@@Base+0x3208>
   177f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   177fc:	b	17828 <_start@@Base+0x3230>
   17800:	ldr	r3, [fp, #4]
   17804:	vldr	d6, [r3]
   17808:	vldr	d7, [fp, #-28]	; 0xffffffe4
   1780c:	vadd.f64	d7, d6, d7
   17810:	ldr	r3, [fp, #4]
   17814:	vstr	d7, [r3]
   17818:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1781c:	cmp	r3, #0
   17820:	bne	1770c <_start@@Base+0x3114>
   17824:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17828:	mov	r0, r3
   1782c:	sub	sp, fp, #8
   17830:	ldr	r4, [sp]
   17834:	ldr	fp, [sp, #4]
   17838:	add	sp, sp, #8
   1783c:	pop	{pc}		; (ldr pc, [sp], #4)
   17840:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17844:	strd	r6, [sp, #8]
   17848:	str	fp, [sp, #16]
   1784c:	str	lr, [sp, #20]
   17850:	add	fp, sp, #20
   17854:	sub	sp, sp, #48	; 0x30
   17858:	str	r0, [fp, #-48]	; 0xffffffd0
   1785c:	str	r1, [fp, #-52]	; 0xffffffcc
   17860:	str	r2, [fp, #-56]	; 0xffffffc8
   17864:	str	r3, [fp, #-60]	; 0xffffffc4
   17868:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1786c:	str	r3, [fp, #-24]	; 0xffffffe8
   17870:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17874:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17878:	bl	14ffc <_start@@Base+0xa04>
   1787c:	strd	r0, [fp, #-36]	; 0xffffffdc
   17880:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17884:	mov	r0, #0
   17888:	mvn	r1, #255	; 0xff
   1788c:	and	r6, r2, r0
   17890:	and	r7, r3, r1
   17894:	add	r3, pc, #356	; 0x164
   17898:	ldrd	r2, [r3]
   1789c:	cmp	r7, r3
   178a0:	cmpeq	r6, r2
   178a4:	bne	17900 <_start@@Base+0x3308>
   178a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   178ac:	str	r3, [fp, #-40]	; 0xffffffd8
   178b0:	ldr	r3, [fp, #8]
   178b4:	str	r3, [sp]
   178b8:	mov	r3, #3
   178bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   178c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   178c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   178c8:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   178cc:	str	r0, [fp, #-52]	; 0xffffffcc
   178d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   178d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   178d8:	cmp	r2, r3
   178dc:	beq	17908 <_start@@Base+0x3310>
   178e0:	ldr	r1, [fp, #4]
   178e4:	mov	r2, #17
   178e8:	mov	r3, #0
   178ec:	strd	r2, [r1]
   178f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   178f4:	mov	r2, #0
   178f8:	str	r2, [r3]
   178fc:	b	179e0 <_start@@Base+0x33e8>
   17900:	nop	{0}
   17904:	b	1790c <_start@@Base+0x3314>
   17908:	nop	{0}
   1790c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17910:	add	r1, pc, #240	; 0xf0
   17914:	ldrd	r0, [r1]
   17918:	cmp	r3, r1
   1791c:	cmpeq	r2, r0
   17920:	bne	179d8 <_start@@Base+0x33e0>
   17924:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17928:	add	r3, r3, #8
   1792c:	str	r3, [fp, #-52]	; 0xffffffcc
   17930:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17934:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17938:	bl	14ffc <_start@@Base+0xa04>
   1793c:	strd	r0, [fp, #-36]	; 0xffffffdc
   17940:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17944:	mov	r0, #0
   17948:	mov	r1, #0
   1794c:	movt	r1, #65535	; 0xffff
   17950:	and	r4, r2, r0
   17954:	and	r5, r3, r1
   17958:	mov	r2, #0
   1795c:	mov	r3, #0
   17960:	movt	r3, #24940	; 0x616c
   17964:	cmp	r5, r3
   17968:	cmpeq	r4, r2
   1796c:	bne	179d0 <_start@@Base+0x33d8>
   17970:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17974:	str	r3, [fp, #-40]	; 0xffffffd8
   17978:	ldr	r3, [fp, #8]
   1797c:	str	r3, [sp]
   17980:	mov	r3, #2
   17984:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17988:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1798c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17990:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   17994:	str	r0, [fp, #-52]	; 0xffffffcc
   17998:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1799c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   179a0:	cmp	r2, r3
   179a4:	beq	179c8 <_start@@Base+0x33d0>
   179a8:	ldr	r1, [fp, #4]
   179ac:	mov	r2, #0
   179b0:	mov	r3, #0
   179b4:	strd	r2, [r1]
   179b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   179bc:	mov	r2, #0
   179c0:	str	r2, [r3]
   179c4:	b	179e0 <_start@@Base+0x33e8>
   179c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179cc:	b	179e4 <_start@@Base+0x33ec>
   179d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179d4:	b	179e4 <_start@@Base+0x33ec>
   179d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179dc:	b	179e4 <_start@@Base+0x33ec>
   179e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   179e4:	mov	r0, r3
   179e8:	sub	sp, fp, #20
   179ec:	ldrd	r4, [sp]
   179f0:	ldrd	r6, [sp, #8]
   179f4:	ldr	fp, [sp, #16]
   179f8:	add	sp, sp, #20
   179fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17a00:	andeq	r0, r0, r0
   17a04:	strbtmi	r6, [pc], -r0, lsl #30
   17a08:	strbvc	r6, [r4, #-1366]!	; 0xfffffaaa
   17a0c:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   17a10:	str	fp, [sp, #-8]!
   17a14:	str	lr, [sp, #4]
   17a18:	add	fp, sp, #4
   17a1c:	sub	sp, sp, #24
   17a20:	str	r0, [fp, #-16]
   17a24:	str	r1, [fp, #-20]	; 0xffffffec
   17a28:	str	r2, [fp, #-24]	; 0xffffffe8
   17a2c:	str	r3, [fp, #-28]	; 0xffffffe4
   17a30:	sub	r3, fp, #8
   17a34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a38:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a3c:	ldr	r0, [fp, #-16]
   17a40:	bl	15130 <_start@@Base+0xb38>
   17a44:	str	r0, [fp, #-20]	; 0xffffffec
   17a48:	b	17a78 <_start@@Base+0x3480>
   17a4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a54:	ldr	r0, [fp, #-16]
   17a58:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   17a5c:	str	r0, [fp, #-20]	; 0xffffffec
   17a60:	sub	r3, fp, #8
   17a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a68:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a6c:	ldr	r0, [fp, #-16]
   17a70:	bl	15224 <_start@@Base+0xc2c>
   17a74:	str	r0, [fp, #-20]	; 0xffffffec
   17a78:	ldr	r3, [fp, #-8]
   17a7c:	cmp	r3, #0
   17a80:	bne	17a4c <_start@@Base+0x3454>
   17a84:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a88:	mov	r0, r3
   17a8c:	sub	sp, fp, #4
   17a90:	ldr	fp, [sp]
   17a94:	add	sp, sp, #4
   17a98:	pop	{pc}		; (ldr pc, [sp], #4)
   17a9c:	str	fp, [sp, #-8]!
   17aa0:	str	lr, [sp, #4]
   17aa4:	add	fp, sp, #4
   17aa8:	sub	sp, sp, #24
   17aac:	str	r0, [fp, #-16]
   17ab0:	str	r1, [fp, #-20]	; 0xffffffec
   17ab4:	str	r2, [fp, #-24]	; 0xffffffe8
   17ab8:	str	r3, [fp, #-28]	; 0xffffffe4
   17abc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ac0:	mov	r2, #0
   17ac4:	str	r2, [r3]
   17ac8:	ldr	r3, [fp, #-16]
   17acc:	ldr	r3, [r3]
   17ad0:	mov	r2, #1
   17ad4:	mov	r1, #0
   17ad8:	mov	r0, r3
   17adc:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   17ae0:	str	r0, [fp, #-8]
   17ae4:	ldr	r3, [fp, #-8]
   17ae8:	cmp	r3, #0
   17aec:	beq	17b4c <_start@@Base+0x3554>
   17af0:	ldr	r3, [fp, #-8]
   17af4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17af8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17afc:	ldr	r0, [fp, #-16]
   17b00:	bl	17a10 <_start@@Base+0x3418>
   17b04:	str	r0, [fp, #-20]	; 0xffffffec
   17b08:	ldr	r2, [fp, #-20]	; 0xffffffec
   17b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b10:	cmp	r2, r3
   17b14:	beq	17b54 <_start@@Base+0x355c>
   17b18:	ldr	r3, [fp, #-16]
   17b1c:	ldr	r3, [r3]
   17b20:	mov	r0, r3
   17b24:	bl	2f19c <flatcc_builder_end_struct@@Base>
   17b28:	mov	r2, r0
   17b2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b30:	str	r2, [r3]
   17b34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b38:	ldr	r3, [r3]
   17b3c:	cmp	r3, #0
   17b40:	beq	17b54 <_start@@Base+0x355c>
   17b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b48:	b	17b70 <_start@@Base+0x3578>
   17b4c:	nop	{0}
   17b50:	b	17b58 <_start@@Base+0x3560>
   17b54:	nop	{0}
   17b58:	mov	r3, #33	; 0x21
   17b5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b60:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b64:	ldr	r0, [fp, #-16]
   17b68:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   17b6c:	mov	r3, r0
   17b70:	mov	r0, r3
   17b74:	sub	sp, fp, #4
   17b78:	ldr	fp, [sp]
   17b7c:	add	sp, sp, #4
   17b80:	pop	{pc}		; (ldr pc, [sp], #4)
   17b84:	push	{fp}		; (str fp, [sp, #-4]!)
   17b88:	add	fp, sp, #0
   17b8c:	sub	sp, sp, #20
   17b90:	str	r0, [fp, #-8]
   17b94:	str	r1, [fp, #-12]
   17b98:	str	r2, [fp, #-16]
   17b9c:	str	r3, [fp, #-20]	; 0xffffffec
   17ba0:	ldr	r3, [fp, #-12]
   17ba4:	mov	r0, r3
   17ba8:	add	sp, fp, #0
   17bac:	pop	{fp}		; (ldr fp, [sp], #4)
   17bb0:	bx	lr
   17bb4:	push	{fp}		; (str fp, [sp, #-4]!)
   17bb8:	add	fp, sp, #0
   17bbc:	sub	sp, sp, #20
   17bc0:	str	r0, [fp, #-8]
   17bc4:	str	r1, [fp, #-12]
   17bc8:	str	r2, [fp, #-16]
   17bcc:	str	r3, [fp, #-20]	; 0xffffffec
   17bd0:	ldr	r3, [fp, #-12]
   17bd4:	mov	r0, r3
   17bd8:	add	sp, fp, #0
   17bdc:	pop	{fp}		; (ldr fp, [sp], #4)
   17be0:	bx	lr
   17be4:	push	{fp}		; (str fp, [sp, #-4]!)
   17be8:	add	fp, sp, #0
   17bec:	sub	sp, sp, #20
   17bf0:	str	r0, [fp, #-8]
   17bf4:	str	r1, [fp, #-12]
   17bf8:	str	r2, [fp, #-16]
   17bfc:	str	r3, [fp, #-20]	; 0xffffffec
   17c00:	ldr	r3, [fp, #-12]
   17c04:	mov	r0, r3
   17c08:	add	sp, fp, #0
   17c0c:	pop	{fp}		; (ldr fp, [sp], #4)
   17c10:	bx	lr
   17c14:	push	{fp}		; (str fp, [sp, #-4]!)
   17c18:	add	fp, sp, #0
   17c1c:	sub	sp, sp, #20
   17c20:	str	r0, [fp, #-8]
   17c24:	str	r1, [fp, #-12]
   17c28:	str	r2, [fp, #-16]
   17c2c:	str	r3, [fp, #-20]	; 0xffffffec
   17c30:	ldr	r3, [fp, #-12]
   17c34:	mov	r0, r3
   17c38:	add	sp, fp, #0
   17c3c:	pop	{fp}		; (ldr fp, [sp], #4)
   17c40:	bx	lr
   17c44:	push	{fp}		; (str fp, [sp, #-4]!)
   17c48:	add	fp, sp, #0
   17c4c:	sub	sp, sp, #20
   17c50:	str	r0, [fp, #-8]
   17c54:	str	r1, [fp, #-12]
   17c58:	str	r2, [fp, #-16]
   17c5c:	str	r3, [fp, #-20]	; 0xffffffec
   17c60:	ldr	r3, [fp, #-12]
   17c64:	mov	r0, r3
   17c68:	add	sp, fp, #0
   17c6c:	pop	{fp}		; (ldr fp, [sp], #4)
   17c70:	bx	lr
   17c74:	strd	r4, [sp, #-16]!
   17c78:	str	fp, [sp, #8]
   17c7c:	str	lr, [sp, #12]
   17c80:	add	fp, sp, #12
   17c84:	sub	sp, sp, #48	; 0x30
   17c88:	str	r0, [fp, #-40]	; 0xffffffd8
   17c8c:	str	r1, [fp, #-44]	; 0xffffffd4
   17c90:	str	r2, [fp, #-48]	; 0xffffffd0
   17c94:	str	r3, [fp, #-52]	; 0xffffffcc
   17c98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17c9c:	str	r3, [fp, #-16]
   17ca0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ca8:	bl	14ffc <_start@@Base+0xa04>
   17cac:	strd	r0, [fp, #-28]	; 0xffffffe4
   17cb0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17cb4:	add	r1, pc, #220	; 0xdc
   17cb8:	ldrd	r0, [r1]
   17cbc:	cmp	r3, r1
   17cc0:	cmpeq	r2, r0
   17cc4:	bne	17d7c <_start@@Base+0x3784>
   17cc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ccc:	add	r3, r3, #8
   17cd0:	str	r3, [fp, #-44]	; 0xffffffd4
   17cd4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17cdc:	bl	14ffc <_start@@Base+0xa04>
   17ce0:	strd	r0, [fp, #-28]	; 0xffffffe4
   17ce4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17ce8:	mov	r0, #0
   17cec:	mvn	r1, #255	; 0xff
   17cf0:	and	r4, r2, r0
   17cf4:	and	r5, r3, r1
   17cf8:	add	r3, pc, #160	; 0xa0
   17cfc:	ldrd	r2, [r3]
   17d00:	cmp	r5, r3
   17d04:	cmpeq	r4, r2
   17d08:	bne	17d74 <_start@@Base+0x377c>
   17d0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17d10:	str	r3, [fp, #-32]	; 0xffffffe0
   17d14:	mov	r3, #3
   17d18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17d1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d24:	bl	15050 <_start@@Base+0xa58>
   17d28:	str	r0, [fp, #-44]	; 0xffffffd4
   17d2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d34:	cmp	r2, r3
   17d38:	beq	17d6c <_start@@Base+0x3774>
   17d3c:	ldr	r3, [fp, #8]
   17d40:	str	r3, [sp, #4]
   17d44:	ldr	r3, [fp, #4]
   17d48:	str	r3, [sp]
   17d4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17d50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17d54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d5c:	bl	17840 <_start@@Base+0x3248>
   17d60:	str	r0, [fp, #-44]	; 0xffffffd4
   17d64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17d68:	b	17d80 <_start@@Base+0x3788>
   17d6c:	ldr	r3, [fp, #-16]
   17d70:	b	17d80 <_start@@Base+0x3788>
   17d74:	ldr	r3, [fp, #-16]
   17d78:	b	17d80 <_start@@Base+0x3788>
   17d7c:	ldr	r3, [fp, #-16]
   17d80:	mov	r0, r3
   17d84:	sub	sp, fp, #12
   17d88:	ldrd	r4, [sp]
   17d8c:	ldr	fp, [sp, #8]
   17d90:	add	sp, sp, #12
   17d94:	pop	{pc}		; (ldr pc, [sp], #4)
   17d98:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   17d9c:	ldrbtmi	r6, [r2], -sp, ror #30
   17da0:	andeq	r0, r0, r0
   17da4:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   17da8:	strd	r4, [sp, #-16]!
   17dac:	str	fp, [sp, #8]
   17db0:	str	lr, [sp, #12]
   17db4:	add	fp, sp, #12
   17db8:	sub	sp, sp, #48	; 0x30
   17dbc:	str	r0, [fp, #-40]	; 0xffffffd8
   17dc0:	str	r1, [fp, #-44]	; 0xffffffd4
   17dc4:	str	r2, [fp, #-48]	; 0xffffffd0
   17dc8:	str	r3, [fp, #-52]	; 0xffffffcc
   17dcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17dd0:	str	r3, [fp, #-16]
   17dd4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ddc:	bl	14ffc <_start@@Base+0xa04>
   17de0:	strd	r0, [fp, #-28]	; 0xffffffe4
   17de4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17de8:	add	r1, pc, #392	; 0x188
   17dec:	ldrd	r0, [r1]
   17df0:	cmp	r3, r1
   17df4:	cmpeq	r2, r0
   17df8:	bne	17f5c <_start@@Base+0x3964>
   17dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e00:	add	r3, r3, #8
   17e04:	str	r3, [fp, #-44]	; 0xffffffd4
   17e08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e10:	bl	14ffc <_start@@Base+0xa04>
   17e14:	strd	r0, [fp, #-28]	; 0xffffffe4
   17e18:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17e1c:	add	r1, pc, #348	; 0x15c
   17e20:	ldrd	r0, [r1]
   17e24:	cmp	r3, r1
   17e28:	cmpeq	r2, r0
   17e2c:	bne	17f54 <_start@@Base+0x395c>
   17e30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e34:	add	r3, r3, #8
   17e38:	str	r3, [fp, #-44]	; 0xffffffd4
   17e3c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e44:	bl	14ffc <_start@@Base+0xa04>
   17e48:	strd	r0, [fp, #-28]	; 0xffffffe4
   17e4c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17e50:	add	r1, pc, #304	; 0x130
   17e54:	ldrd	r0, [r1]
   17e58:	cmp	r3, r1
   17e5c:	cmpeq	r2, r0
   17e60:	bne	17f4c <_start@@Base+0x3954>
   17e64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e68:	add	r3, r3, #8
   17e6c:	str	r3, [fp, #-44]	; 0xffffffd4
   17e70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e78:	bl	14ffc <_start@@Base+0xa04>
   17e7c:	strd	r0, [fp, #-28]	; 0xffffffe4
   17e80:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17e84:	add	r1, pc, #260	; 0x104
   17e88:	ldrd	r0, [r1]
   17e8c:	cmp	r3, r1
   17e90:	cmpeq	r2, r0
   17e94:	bne	17f44 <_start@@Base+0x394c>
   17e98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e9c:	add	r3, r3, #8
   17ea0:	str	r3, [fp, #-44]	; 0xffffffd4
   17ea4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17ea8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17eac:	bl	14ffc <_start@@Base+0xa04>
   17eb0:	strd	r0, [fp, #-28]	; 0xffffffe4
   17eb4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17eb8:	mov	r0, #0
   17ebc:	mov	r1, #-16777216	; 0xff000000
   17ec0:	and	r4, r2, r0
   17ec4:	and	r5, r3, r1
   17ec8:	cmp	r5, #1694498816	; 0x65000000
   17ecc:	cmpeq	r4, #0
   17ed0:	bne	17f3c <_start@@Base+0x3944>
   17ed4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ed8:	str	r3, [fp, #-32]	; 0xffffffe0
   17edc:	mov	r3, #1
   17ee0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17ee4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17ee8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17eec:	bl	15050 <_start@@Base+0xa58>
   17ef0:	str	r0, [fp, #-44]	; 0xffffffd4
   17ef4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17efc:	cmp	r2, r3
   17f00:	beq	17f34 <_start@@Base+0x393c>
   17f04:	ldr	r3, [fp, #8]
   17f08:	str	r3, [sp, #4]
   17f0c:	ldr	r3, [fp, #4]
   17f10:	str	r3, [sp]
   17f14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17f18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17f1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17f20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17f24:	bl	17840 <_start@@Base+0x3248>
   17f28:	str	r0, [fp, #-44]	; 0xffffffd4
   17f2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17f30:	b	17f60 <_start@@Base+0x3968>
   17f34:	ldr	r3, [fp, #-16]
   17f38:	b	17f60 <_start@@Base+0x3968>
   17f3c:	ldr	r3, [fp, #-16]
   17f40:	b	17f60 <_start@@Base+0x3968>
   17f44:	ldr	r3, [fp, #-16]
   17f48:	b	17f60 <_start@@Base+0x3968>
   17f4c:	ldr	r3, [fp, #-16]
   17f50:	b	17f60 <_start@@Base+0x3968>
   17f54:	ldr	r3, [fp, #-16]
   17f58:	b	17f60 <_start@@Base+0x3968>
   17f5c:	ldr	r3, [fp, #-16]
   17f60:	mov	r0, r3
   17f64:	sub	sp, fp, #12
   17f68:	ldrd	r4, [sp]
   17f6c:	ldr	fp, [sp, #8]
   17f70:	add	sp, sp, #12
   17f74:	pop	{pc}		; (ldr pc, [sp], #4)
   17f78:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   17f7c:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   17f80:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   17f84:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   17f88:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   17f8c:	cmnpl	r0, #-1073741800	; 0xc0000018
   17f90:	cmnvs	ip, #100, 10	; 0x19000000
   17f94:	svcvs	0x006d496e
   17f98:	push	{fp}		; (str fp, [sp, #-4]!)
   17f9c:	add	fp, sp, #0
   17fa0:	sub	sp, sp, #20
   17fa4:	str	r0, [fp, #-8]
   17fa8:	str	r1, [fp, #-12]
   17fac:	str	r2, [fp, #-16]
   17fb0:	str	r3, [fp, #-20]	; 0xffffffec
   17fb4:	ldr	r3, [fp, #-12]
   17fb8:	mov	r0, r3
   17fbc:	add	sp, fp, #0
   17fc0:	pop	{fp}		; (ldr fp, [sp], #4)
   17fc4:	bx	lr
   17fc8:	push	{fp}		; (str fp, [sp, #-4]!)
   17fcc:	add	fp, sp, #0
   17fd0:	sub	sp, sp, #20
   17fd4:	str	r0, [fp, #-8]
   17fd8:	str	r1, [fp, #-12]
   17fdc:	str	r2, [fp, #-16]
   17fe0:	str	r3, [fp, #-20]	; 0xffffffec
   17fe4:	ldr	r3, [fp, #-12]
   17fe8:	mov	r0, r3
   17fec:	add	sp, fp, #0
   17ff0:	pop	{fp}		; (ldr fp, [sp], #4)
   17ff4:	bx	lr
   17ff8:	push	{fp}		; (str fp, [sp, #-4]!)
   17ffc:	add	fp, sp, #0
   18000:	sub	sp, sp, #20
   18004:	str	r0, [fp, #-8]
   18008:	str	r1, [fp, #-12]
   1800c:	str	r2, [fp, #-16]
   18010:	str	r3, [fp, #-20]	; 0xffffffec
   18014:	ldr	r3, [fp, #-12]
   18018:	mov	r0, r3
   1801c:	add	sp, fp, #0
   18020:	pop	{fp}		; (ldr fp, [sp], #4)
   18024:	bx	lr
   18028:	push	{fp}		; (str fp, [sp, #-4]!)
   1802c:	add	fp, sp, #0
   18030:	sub	sp, sp, #20
   18034:	str	r0, [fp, #-8]
   18038:	str	r1, [fp, #-12]
   1803c:	str	r2, [fp, #-16]
   18040:	str	r3, [fp, #-20]	; 0xffffffec
   18044:	ldr	r3, [fp, #-12]
   18048:	mov	r0, r3
   1804c:	add	sp, fp, #0
   18050:	pop	{fp}		; (ldr fp, [sp], #4)
   18054:	bx	lr
   18058:	push	{fp}		; (str fp, [sp, #-4]!)
   1805c:	add	fp, sp, #0
   18060:	sub	sp, sp, #20
   18064:	str	r0, [fp, #-8]
   18068:	str	r1, [fp, #-12]
   1806c:	str	r2, [fp, #-16]
   18070:	str	r3, [fp, #-20]	; 0xffffffec
   18074:	ldr	r3, [fp, #-12]
   18078:	mov	r0, r3
   1807c:	add	sp, fp, #0
   18080:	pop	{fp}		; (ldr fp, [sp], #4)
   18084:	bx	lr
   18088:	strd	r4, [sp, #-16]!
   1808c:	str	fp, [sp, #8]
   18090:	str	lr, [sp, #12]
   18094:	add	fp, sp, #12
   18098:	sub	sp, sp, #48	; 0x30
   1809c:	str	r0, [fp, #-40]	; 0xffffffd8
   180a0:	str	r1, [fp, #-44]	; 0xffffffd4
   180a4:	str	r2, [fp, #-48]	; 0xffffffd0
   180a8:	str	r3, [fp, #-52]	; 0xffffffcc
   180ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   180b0:	str	r3, [fp, #-16]
   180b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   180b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   180bc:	bl	14ffc <_start@@Base+0xa04>
   180c0:	strd	r0, [fp, #-28]	; 0xffffffe4
   180c4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   180c8:	add	r1, pc, #224	; 0xe0
   180cc:	ldrd	r0, [r1]
   180d0:	cmp	r3, r1
   180d4:	cmpeq	r2, r0
   180d8:	bne	18190 <_start@@Base+0x3b98>
   180dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   180e0:	add	r3, r3, #8
   180e4:	str	r3, [fp, #-44]	; 0xffffffd4
   180e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   180ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   180f0:	bl	14ffc <_start@@Base+0xa04>
   180f4:	strd	r0, [fp, #-28]	; 0xffffffe4
   180f8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   180fc:	mov	r0, #0
   18100:	mvn	r1, #255	; 0xff
   18104:	and	r4, r2, r0
   18108:	and	r5, r3, r1
   1810c:	add	r3, pc, #164	; 0xa4
   18110:	ldrd	r2, [r3]
   18114:	cmp	r5, r3
   18118:	cmpeq	r4, r2
   1811c:	bne	18188 <_start@@Base+0x3b90>
   18120:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18124:	str	r3, [fp, #-32]	; 0xffffffe0
   18128:	mov	r3, #3
   1812c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18130:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18138:	bl	15050 <_start@@Base+0xa58>
   1813c:	str	r0, [fp, #-44]	; 0xffffffd4
   18140:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18148:	cmp	r2, r3
   1814c:	beq	18180 <_start@@Base+0x3b88>
   18150:	ldr	r3, [fp, #8]
   18154:	str	r3, [sp, #4]
   18158:	ldr	r3, [fp, #4]
   1815c:	str	r3, [sp]
   18160:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18164:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18168:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1816c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18170:	bl	17840 <_start@@Base+0x3248>
   18174:	str	r0, [fp, #-44]	; 0xffffffd4
   18178:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1817c:	b	18194 <_start@@Base+0x3b9c>
   18180:	ldr	r3, [fp, #-16]
   18184:	b	18194 <_start@@Base+0x3b9c>
   18188:	ldr	r3, [fp, #-16]
   1818c:	b	18194 <_start@@Base+0x3b9c>
   18190:	ldr	r3, [fp, #-16]
   18194:	mov	r0, r3
   18198:	sub	sp, fp, #12
   1819c:	ldrd	r4, [sp]
   181a0:	ldr	fp, [sp, #8]
   181a4:	add	sp, sp, #12
   181a8:	pop	{pc}		; (ldr pc, [sp], #4)
   181ac:	nop	{0}
   181b0:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   181b4:	ldrbtmi	r6, [r2], -sp, ror #30
   181b8:	andeq	r0, r0, r0
   181bc:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   181c0:	strd	r4, [sp, #-16]!
   181c4:	str	fp, [sp, #8]
   181c8:	str	lr, [sp, #12]
   181cc:	add	fp, sp, #12
   181d0:	sub	sp, sp, #48	; 0x30
   181d4:	str	r0, [fp, #-40]	; 0xffffffd8
   181d8:	str	r1, [fp, #-44]	; 0xffffffd4
   181dc:	str	r2, [fp, #-48]	; 0xffffffd0
   181e0:	str	r3, [fp, #-52]	; 0xffffffcc
   181e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   181e8:	str	r3, [fp, #-16]
   181ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   181f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   181f4:	bl	14ffc <_start@@Base+0xa04>
   181f8:	strd	r0, [fp, #-28]	; 0xffffffe4
   181fc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18200:	add	r1, pc, #392	; 0x188
   18204:	ldrd	r0, [r1]
   18208:	cmp	r3, r1
   1820c:	cmpeq	r2, r0
   18210:	bne	18374 <_start@@Base+0x3d7c>
   18214:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18218:	add	r3, r3, #8
   1821c:	str	r3, [fp, #-44]	; 0xffffffd4
   18220:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18228:	bl	14ffc <_start@@Base+0xa04>
   1822c:	strd	r0, [fp, #-28]	; 0xffffffe4
   18230:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18234:	add	r1, pc, #348	; 0x15c
   18238:	ldrd	r0, [r1]
   1823c:	cmp	r3, r1
   18240:	cmpeq	r2, r0
   18244:	bne	1836c <_start@@Base+0x3d74>
   18248:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1824c:	add	r3, r3, #8
   18250:	str	r3, [fp, #-44]	; 0xffffffd4
   18254:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1825c:	bl	14ffc <_start@@Base+0xa04>
   18260:	strd	r0, [fp, #-28]	; 0xffffffe4
   18264:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18268:	add	r1, pc, #304	; 0x130
   1826c:	ldrd	r0, [r1]
   18270:	cmp	r3, r1
   18274:	cmpeq	r2, r0
   18278:	bne	18364 <_start@@Base+0x3d6c>
   1827c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18280:	add	r3, r3, #8
   18284:	str	r3, [fp, #-44]	; 0xffffffd4
   18288:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1828c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18290:	bl	14ffc <_start@@Base+0xa04>
   18294:	strd	r0, [fp, #-28]	; 0xffffffe4
   18298:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1829c:	add	r1, pc, #260	; 0x104
   182a0:	ldrd	r0, [r1]
   182a4:	cmp	r3, r1
   182a8:	cmpeq	r2, r0
   182ac:	bne	1835c <_start@@Base+0x3d64>
   182b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   182b4:	add	r3, r3, #8
   182b8:	str	r3, [fp, #-44]	; 0xffffffd4
   182bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   182c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   182c4:	bl	14ffc <_start@@Base+0xa04>
   182c8:	strd	r0, [fp, #-28]	; 0xffffffe4
   182cc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   182d0:	mov	r0, #0
   182d4:	mov	r1, #-16777216	; 0xff000000
   182d8:	and	r4, r2, r0
   182dc:	and	r5, r3, r1
   182e0:	cmp	r5, #1694498816	; 0x65000000
   182e4:	cmpeq	r4, #0
   182e8:	bne	18354 <_start@@Base+0x3d5c>
   182ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   182f0:	str	r3, [fp, #-32]	; 0xffffffe0
   182f4:	mov	r3, #1
   182f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   182fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18300:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18304:	bl	15050 <_start@@Base+0xa58>
   18308:	str	r0, [fp, #-44]	; 0xffffffd4
   1830c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18314:	cmp	r2, r3
   18318:	beq	1834c <_start@@Base+0x3d54>
   1831c:	ldr	r3, [fp, #8]
   18320:	str	r3, [sp, #4]
   18324:	ldr	r3, [fp, #4]
   18328:	str	r3, [sp]
   1832c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18330:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18334:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18338:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1833c:	bl	17840 <_start@@Base+0x3248>
   18340:	str	r0, [fp, #-44]	; 0xffffffd4
   18344:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18348:	b	18378 <_start@@Base+0x3d80>
   1834c:	ldr	r3, [fp, #-16]
   18350:	b	18378 <_start@@Base+0x3d80>
   18354:	ldr	r3, [fp, #-16]
   18358:	b	18378 <_start@@Base+0x3d80>
   1835c:	ldr	r3, [fp, #-16]
   18360:	b	18378 <_start@@Base+0x3d80>
   18364:	ldr	r3, [fp, #-16]
   18368:	b	18378 <_start@@Base+0x3d80>
   1836c:	ldr	r3, [fp, #-16]
   18370:	b	18378 <_start@@Base+0x3d80>
   18374:	ldr	r3, [fp, #-16]
   18378:	mov	r0, r3
   1837c:	sub	sp, fp, #12
   18380:	ldrd	r4, [sp]
   18384:	ldr	fp, [sp, #8]
   18388:	add	sp, sp, #12
   1838c:	pop	{pc}		; (ldr pc, [sp], #4)
   18390:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   18394:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   18398:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   1839c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   183a0:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   183a4:	cmnpl	r0, #-1073741800	; 0xc0000018
   183a8:	cmnvs	ip, #100, 10	; 0x19000000
   183ac:	svcvs	0x006d496e
   183b0:	push	{fp}		; (str fp, [sp, #-4]!)
   183b4:	add	fp, sp, #0
   183b8:	sub	sp, sp, #20
   183bc:	str	r0, [fp, #-8]
   183c0:	str	r1, [fp, #-12]
   183c4:	str	r2, [fp, #-16]
   183c8:	str	r3, [fp, #-20]	; 0xffffffec
   183cc:	ldr	r3, [fp, #-12]
   183d0:	mov	r0, r3
   183d4:	add	sp, fp, #0
   183d8:	pop	{fp}		; (ldr fp, [sp], #4)
   183dc:	bx	lr
   183e0:	push	{fp}		; (str fp, [sp, #-4]!)
   183e4:	add	fp, sp, #0
   183e8:	sub	sp, sp, #20
   183ec:	str	r0, [fp, #-8]
   183f0:	str	r1, [fp, #-12]
   183f4:	str	r2, [fp, #-16]
   183f8:	str	r3, [fp, #-20]	; 0xffffffec
   183fc:	ldr	r3, [fp, #-12]
   18400:	mov	r0, r3
   18404:	add	sp, fp, #0
   18408:	pop	{fp}		; (ldr fp, [sp], #4)
   1840c:	bx	lr
   18410:	push	{fp}		; (str fp, [sp, #-4]!)
   18414:	add	fp, sp, #0
   18418:	sub	sp, sp, #20
   1841c:	str	r0, [fp, #-8]
   18420:	str	r1, [fp, #-12]
   18424:	str	r2, [fp, #-16]
   18428:	str	r3, [fp, #-20]	; 0xffffffec
   1842c:	ldr	r3, [fp, #-12]
   18430:	mov	r0, r3
   18434:	add	sp, fp, #0
   18438:	pop	{fp}		; (ldr fp, [sp], #4)
   1843c:	bx	lr
   18440:	push	{fp}		; (str fp, [sp, #-4]!)
   18444:	add	fp, sp, #0
   18448:	sub	sp, sp, #20
   1844c:	str	r0, [fp, #-8]
   18450:	str	r1, [fp, #-12]
   18454:	str	r2, [fp, #-16]
   18458:	str	r3, [fp, #-20]	; 0xffffffec
   1845c:	ldr	r3, [fp, #-12]
   18460:	mov	r0, r3
   18464:	add	sp, fp, #0
   18468:	pop	{fp}		; (ldr fp, [sp], #4)
   1846c:	bx	lr
   18470:	push	{fp}		; (str fp, [sp, #-4]!)
   18474:	add	fp, sp, #0
   18478:	sub	sp, sp, #20
   1847c:	str	r0, [fp, #-8]
   18480:	str	r1, [fp, #-12]
   18484:	str	r2, [fp, #-16]
   18488:	str	r3, [fp, #-20]	; 0xffffffec
   1848c:	ldr	r3, [fp, #-12]
   18490:	mov	r0, r3
   18494:	add	sp, fp, #0
   18498:	pop	{fp}		; (ldr fp, [sp], #4)
   1849c:	bx	lr
   184a0:	push	{fp}		; (str fp, [sp, #-4]!)
   184a4:	add	fp, sp, #0
   184a8:	sub	sp, sp, #20
   184ac:	str	r0, [fp, #-8]
   184b0:	str	r1, [fp, #-12]
   184b4:	str	r2, [fp, #-16]
   184b8:	str	r3, [fp, #-20]	; 0xffffffec
   184bc:	ldr	r3, [fp, #-12]
   184c0:	mov	r0, r3
   184c4:	add	sp, fp, #0
   184c8:	pop	{fp}		; (ldr fp, [sp], #4)
   184cc:	bx	lr
   184d0:	push	{fp}		; (str fp, [sp, #-4]!)
   184d4:	add	fp, sp, #0
   184d8:	sub	sp, sp, #20
   184dc:	str	r0, [fp, #-8]
   184e0:	str	r1, [fp, #-12]
   184e4:	str	r2, [fp, #-16]
   184e8:	str	r3, [fp, #-20]	; 0xffffffec
   184ec:	ldr	r3, [fp, #-12]
   184f0:	mov	r0, r3
   184f4:	add	sp, fp, #0
   184f8:	pop	{fp}		; (ldr fp, [sp], #4)
   184fc:	bx	lr
   18500:	str	fp, [sp, #-8]!
   18504:	str	lr, [sp, #4]
   18508:	add	fp, sp, #4
   1850c:	sub	sp, sp, #24
   18510:	str	r0, [fp, #-16]
   18514:	str	r1, [fp, #-20]	; 0xffffffec
   18518:	str	r2, [fp, #-24]	; 0xffffffe8
   1851c:	str	r3, [fp, #-28]	; 0xffffffe4
   18520:	sub	r3, fp, #8
   18524:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18528:	ldr	r1, [fp, #-20]	; 0xffffffec
   1852c:	ldr	r0, [fp, #-16]
   18530:	bl	15130 <_start@@Base+0xb38>
   18534:	str	r0, [fp, #-20]	; 0xffffffec
   18538:	b	18568 <_start@@Base+0x3f70>
   1853c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18540:	ldr	r1, [fp, #-20]	; 0xffffffec
   18544:	ldr	r0, [fp, #-16]
   18548:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1854c:	str	r0, [fp, #-20]	; 0xffffffec
   18550:	sub	r3, fp, #8
   18554:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18558:	ldr	r1, [fp, #-20]	; 0xffffffec
   1855c:	ldr	r0, [fp, #-16]
   18560:	bl	15224 <_start@@Base+0xc2c>
   18564:	str	r0, [fp, #-20]	; 0xffffffec
   18568:	ldr	r3, [fp, #-8]
   1856c:	cmp	r3, #0
   18570:	bne	1853c <_start@@Base+0x3f44>
   18574:	ldr	r3, [fp, #-20]	; 0xffffffec
   18578:	mov	r0, r3
   1857c:	sub	sp, fp, #4
   18580:	ldr	fp, [sp]
   18584:	add	sp, sp, #4
   18588:	pop	{pc}		; (ldr pc, [sp], #4)
   1858c:	str	fp, [sp, #-8]!
   18590:	str	lr, [sp, #4]
   18594:	add	fp, sp, #4
   18598:	sub	sp, sp, #24
   1859c:	str	r0, [fp, #-16]
   185a0:	str	r1, [fp, #-20]	; 0xffffffec
   185a4:	str	r2, [fp, #-24]	; 0xffffffe8
   185a8:	str	r3, [fp, #-28]	; 0xffffffe4
   185ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   185b0:	mov	r2, #0
   185b4:	str	r2, [r3]
   185b8:	ldr	r3, [fp, #-16]
   185bc:	ldr	r3, [r3]
   185c0:	mov	r2, #1
   185c4:	mov	r1, #0
   185c8:	mov	r0, r3
   185cc:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   185d0:	str	r0, [fp, #-8]
   185d4:	ldr	r3, [fp, #-8]
   185d8:	cmp	r3, #0
   185dc:	beq	1863c <_start@@Base+0x4044>
   185e0:	ldr	r3, [fp, #-8]
   185e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   185ec:	ldr	r0, [fp, #-16]
   185f0:	bl	18500 <_start@@Base+0x3f08>
   185f4:	str	r0, [fp, #-20]	; 0xffffffec
   185f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   185fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18600:	cmp	r2, r3
   18604:	beq	18644 <_start@@Base+0x404c>
   18608:	ldr	r3, [fp, #-16]
   1860c:	ldr	r3, [r3]
   18610:	mov	r0, r3
   18614:	bl	2f19c <flatcc_builder_end_struct@@Base>
   18618:	mov	r2, r0
   1861c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18620:	str	r2, [r3]
   18624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18628:	ldr	r3, [r3]
   1862c:	cmp	r3, #0
   18630:	beq	18644 <_start@@Base+0x404c>
   18634:	ldr	r3, [fp, #-20]	; 0xffffffec
   18638:	b	18660 <_start@@Base+0x4068>
   1863c:	nop	{0}
   18640:	b	18648 <_start@@Base+0x4050>
   18644:	nop	{0}
   18648:	mov	r3, #33	; 0x21
   1864c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18650:	ldr	r1, [fp, #-20]	; 0xffffffec
   18654:	ldr	r0, [fp, #-16]
   18658:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1865c:	mov	r3, r0
   18660:	mov	r0, r3
   18664:	sub	sp, fp, #4
   18668:	ldr	fp, [sp]
   1866c:	add	sp, sp, #4
   18670:	pop	{pc}		; (ldr pc, [sp], #4)
   18674:	str	fp, [sp, #-8]!
   18678:	str	lr, [sp, #4]
   1867c:	add	fp, sp, #4
   18680:	sub	sp, sp, #24
   18684:	str	r0, [fp, #-16]
   18688:	str	r1, [fp, #-20]	; 0xffffffec
   1868c:	str	r2, [fp, #-24]	; 0xffffffe8
   18690:	str	r3, [fp, #-28]	; 0xffffffe4
   18694:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18698:	mov	r2, #0
   1869c:	str	r2, [r3]
   186a0:	ldr	r3, [fp, #-16]
   186a4:	ldr	r3, [r3]
   186a8:	mov	r1, #0
   186ac:	mov	r0, r3
   186b0:	bl	2ff58 <flatcc_builder_start_table@@Base>
   186b4:	mov	r3, r0
   186b8:	cmp	r3, #0
   186bc:	bne	1876c <_start@@Base+0x4174>
   186c0:	sub	r3, fp, #8
   186c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   186cc:	ldr	r0, [fp, #-16]
   186d0:	bl	15130 <_start@@Base+0xb38>
   186d4:	str	r0, [fp, #-20]	; 0xffffffec
   186d8:	b	1871c <_start@@Base+0x4124>
   186dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   186e4:	ldr	r0, [fp, #-16]
   186e8:	bl	14cf4 <_start@@Base+0x6fc>
   186ec:	str	r0, [fp, #-20]	; 0xffffffec
   186f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   186f8:	ldr	r0, [fp, #-16]
   186fc:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   18700:	str	r0, [fp, #-20]	; 0xffffffec
   18704:	sub	r3, fp, #8
   18708:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1870c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18710:	ldr	r0, [fp, #-16]
   18714:	bl	15224 <_start@@Base+0xc2c>
   18718:	str	r0, [fp, #-20]	; 0xffffffec
   1871c:	ldr	r3, [fp, #-8]
   18720:	cmp	r3, #0
   18724:	bne	186dc <_start@@Base+0x40e4>
   18728:	ldr	r3, [fp, #-16]
   1872c:	ldr	r3, [r3, #20]
   18730:	cmp	r3, #0
   18734:	bne	18774 <_start@@Base+0x417c>
   18738:	ldr	r3, [fp, #-16]
   1873c:	ldr	r3, [r3]
   18740:	mov	r0, r3
   18744:	bl	30b0c <flatcc_builder_end_table@@Base>
   18748:	mov	r2, r0
   1874c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18750:	str	r2, [r3]
   18754:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18758:	ldr	r3, [r3]
   1875c:	cmp	r3, #0
   18760:	beq	1877c <_start@@Base+0x4184>
   18764:	ldr	r3, [fp, #-20]	; 0xffffffec
   18768:	b	18798 <_start@@Base+0x41a0>
   1876c:	nop	{0}
   18770:	b	18780 <_start@@Base+0x4188>
   18774:	nop	{0}
   18778:	b	18780 <_start@@Base+0x4188>
   1877c:	nop	{0}
   18780:	mov	r3, #33	; 0x21
   18784:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18788:	ldr	r1, [fp, #-20]	; 0xffffffec
   1878c:	ldr	r0, [fp, #-16]
   18790:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   18794:	mov	r3, r0
   18798:	mov	r0, r3
   1879c:	sub	sp, fp, #4
   187a0:	ldr	fp, [sp]
   187a4:	add	sp, sp, #4
   187a8:	pop	{pc}		; (ldr pc, [sp], #4)
   187ac:	str	fp, [sp, #-8]!
   187b0:	str	lr, [sp, #4]
   187b4:	add	fp, sp, #4
   187b8:	sub	sp, sp, #24
   187bc:	str	r0, [fp, #-16]
   187c0:	str	r1, [fp, #-20]	; 0xffffffec
   187c4:	str	r2, [fp, #-24]	; 0xffffffe8
   187c8:	str	r3, [fp, #-28]	; 0xffffffe4
   187cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   187d0:	mov	r2, #0
   187d4:	str	r2, [r3]
   187d8:	ldr	r3, [fp, #-16]
   187dc:	ldr	r3, [r3]
   187e0:	mov	r1, #0
   187e4:	mov	r0, r3
   187e8:	bl	2ff58 <flatcc_builder_start_table@@Base>
   187ec:	mov	r3, r0
   187f0:	cmp	r3, #0
   187f4:	bne	188a4 <_start@@Base+0x42ac>
   187f8:	sub	r3, fp, #8
   187fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18800:	ldr	r1, [fp, #-20]	; 0xffffffec
   18804:	ldr	r0, [fp, #-16]
   18808:	bl	15130 <_start@@Base+0xb38>
   1880c:	str	r0, [fp, #-20]	; 0xffffffec
   18810:	b	18854 <_start@@Base+0x425c>
   18814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18818:	ldr	r1, [fp, #-20]	; 0xffffffec
   1881c:	ldr	r0, [fp, #-16]
   18820:	bl	14cf4 <_start@@Base+0x6fc>
   18824:	str	r0, [fp, #-20]	; 0xffffffec
   18828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1882c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18830:	ldr	r0, [fp, #-16]
   18834:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   18838:	str	r0, [fp, #-20]	; 0xffffffec
   1883c:	sub	r3, fp, #8
   18840:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18844:	ldr	r1, [fp, #-20]	; 0xffffffec
   18848:	ldr	r0, [fp, #-16]
   1884c:	bl	15224 <_start@@Base+0xc2c>
   18850:	str	r0, [fp, #-20]	; 0xffffffec
   18854:	ldr	r3, [fp, #-8]
   18858:	cmp	r3, #0
   1885c:	bne	18814 <_start@@Base+0x421c>
   18860:	ldr	r3, [fp, #-16]
   18864:	ldr	r3, [r3, #20]
   18868:	cmp	r3, #0
   1886c:	bne	188ac <_start@@Base+0x42b4>
   18870:	ldr	r3, [fp, #-16]
   18874:	ldr	r3, [r3]
   18878:	mov	r0, r3
   1887c:	bl	30b0c <flatcc_builder_end_table@@Base>
   18880:	mov	r2, r0
   18884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18888:	str	r2, [r3]
   1888c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18890:	ldr	r3, [r3]
   18894:	cmp	r3, #0
   18898:	beq	188b4 <_start@@Base+0x42bc>
   1889c:	ldr	r3, [fp, #-20]	; 0xffffffec
   188a0:	b	188d0 <_start@@Base+0x42d8>
   188a4:	nop	{0}
   188a8:	b	188b8 <_start@@Base+0x42c0>
   188ac:	nop	{0}
   188b0:	b	188b8 <_start@@Base+0x42c0>
   188b4:	nop	{0}
   188b8:	mov	r3, #33	; 0x21
   188bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   188c4:	ldr	r0, [fp, #-16]
   188c8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   188cc:	mov	r3, r0
   188d0:	mov	r0, r3
   188d4:	sub	sp, fp, #4
   188d8:	ldr	fp, [sp]
   188dc:	add	sp, sp, #4
   188e0:	pop	{pc}		; (ldr pc, [sp], #4)
   188e4:	str	fp, [sp, #-8]!
   188e8:	str	lr, [sp, #4]
   188ec:	add	fp, sp, #4
   188f0:	sub	sp, sp, #16
   188f4:	str	r0, [fp, #-8]
   188f8:	str	r1, [fp, #-12]
   188fc:	str	r2, [fp, #-16]
   18900:	strb	r3, [fp, #-17]	; 0xffffffef
   18904:	ldr	r3, [fp, #4]
   18908:	mov	r2, #0
   1890c:	str	r2, [r3]
   18910:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18914:	cmp	r3, #0
   18918:	beq	18928 <_start@@Base+0x4330>
   1891c:	cmp	r3, #1
   18920:	beq	18940 <_start@@Base+0x4348>
   18924:	b	18970 <_start@@Base+0x4378>
   18928:	ldr	r2, [fp, #-16]
   1892c:	ldr	r1, [fp, #-12]
   18930:	ldr	r0, [fp, #-8]
   18934:	bl	15dc4 <_start@@Base+0x17cc>
   18938:	mov	r3, r0
   1893c:	b	189f0 <_start@@Base+0x43f8>
   18940:	ldr	r3, [fp, #4]
   18944:	ldr	r2, [fp, #-16]
   18948:	ldr	r1, [fp, #-12]
   1894c:	ldr	r0, [fp, #-8]
   18950:	bl	18674 <_start@@Base+0x407c>
   18954:	str	r0, [fp, #-12]
   18958:	nop	{0}
   1895c:	ldr	r3, [fp, #-8]
   18960:	ldr	r3, [r3, #20]
   18964:	cmp	r3, #0
   18968:	beq	189c0 <_start@@Base+0x43c8>
   1896c:	b	189b8 <_start@@Base+0x43c0>
   18970:	ldr	r3, [fp, #-8]
   18974:	ldr	r3, [r3, #8]
   18978:	and	r3, r3, #1
   1897c:	cmp	r3, #0
   18980:	bne	189a0 <_start@@Base+0x43a8>
   18984:	mov	r3, #15
   18988:	ldr	r2, [fp, #-16]
   1898c:	ldr	r1, [fp, #-12]
   18990:	ldr	r0, [fp, #-8]
   18994:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   18998:	mov	r3, r0
   1899c:	b	189f0 <_start@@Base+0x43f8>
   189a0:	ldr	r2, [fp, #-16]
   189a4:	ldr	r1, [fp, #-12]
   189a8:	ldr	r0, [fp, #-8]
   189ac:	bl	3cf4c <flatcc_json_parser_generic_json@@Base>
   189b0:	mov	r3, r0
   189b4:	b	189f0 <_start@@Base+0x43f8>
   189b8:	ldr	r3, [fp, #-12]
   189bc:	b	189f0 <_start@@Base+0x43f8>
   189c0:	ldr	r3, [fp, #4]
   189c4:	ldr	r3, [r3]
   189c8:	cmp	r3, #0
   189cc:	bne	189ec <_start@@Base+0x43f4>
   189d0:	mov	r3, #33	; 0x21
   189d4:	ldr	r2, [fp, #-16]
   189d8:	ldr	r1, [fp, #-12]
   189dc:	ldr	r0, [fp, #-8]
   189e0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   189e4:	mov	r3, r0
   189e8:	b	189f0 <_start@@Base+0x43f8>
   189ec:	ldr	r3, [fp, #-12]
   189f0:	mov	r0, r3
   189f4:	sub	sp, fp, #4
   189f8:	ldr	fp, [sp]
   189fc:	add	sp, sp, #4
   18a00:	pop	{pc}		; (ldr pc, [sp], #4)
   18a04:	push	{fp}		; (str fp, [sp, #-4]!)
   18a08:	add	fp, sp, #0
   18a0c:	sub	sp, sp, #12
   18a10:	mov	r3, r0
   18a14:	strb	r3, [fp, #-5]
   18a18:	ldrb	r3, [fp, #-5]
   18a1c:	cmp	r3, #0
   18a20:	beq	18a30 <_start@@Base+0x4438>
   18a24:	cmp	r3, #1
   18a28:	beq	18a38 <_start@@Base+0x4440>
   18a2c:	b	18a40 <_start@@Base+0x4448>
   18a30:	mov	r3, #1
   18a34:	b	18a44 <_start@@Base+0x444c>
   18a38:	mov	r3, #1
   18a3c:	b	18a44 <_start@@Base+0x444c>
   18a40:	mov	r3, #0
   18a44:	mov	r0, r3
   18a48:	add	sp, fp, #0
   18a4c:	pop	{fp}		; (ldr fp, [sp], #4)
   18a50:	bx	lr
   18a54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18a58:	strd	r6, [sp, #8]
   18a5c:	str	fp, [sp, #16]
   18a60:	str	lr, [sp, #20]
   18a64:	add	fp, sp, #20
   18a68:	sub	sp, sp, #48	; 0x30
   18a6c:	str	r0, [fp, #-48]	; 0xffffffd0
   18a70:	str	r1, [fp, #-52]	; 0xffffffcc
   18a74:	str	r2, [fp, #-56]	; 0xffffffc8
   18a78:	str	r3, [fp, #-60]	; 0xffffffc4
   18a7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18a80:	str	r3, [fp, #-24]	; 0xffffffe8
   18a84:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18a88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a8c:	bl	14ffc <_start@@Base+0xa04>
   18a90:	strd	r0, [fp, #-36]	; 0xffffffdc
   18a94:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18a98:	add	r1, pc, #416	; 0x1a0
   18a9c:	ldrd	r0, [r1]
   18aa0:	cmp	r3, r1
   18aa4:	cmpeq	r2, r0
   18aa8:	bne	18b8c <_start@@Base+0x4594>
   18aac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ab0:	add	r3, r3, #8
   18ab4:	str	r3, [fp, #-52]	; 0xffffffcc
   18ab8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18abc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18ac0:	bl	14ffc <_start@@Base+0xa04>
   18ac4:	strd	r0, [fp, #-36]	; 0xffffffdc
   18ac8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18acc:	add	r1, pc, #372	; 0x174
   18ad0:	ldrd	r0, [r1]
   18ad4:	cmp	r3, r1
   18ad8:	cmpeq	r2, r0
   18adc:	bne	18b84 <_start@@Base+0x458c>
   18ae0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ae4:	add	r3, r3, #8
   18ae8:	str	r3, [fp, #-52]	; 0xffffffcc
   18aec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18af0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18af4:	bl	14ffc <_start@@Base+0xa04>
   18af8:	strd	r0, [fp, #-36]	; 0xffffffdc
   18afc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18b00:	mov	r0, #0
   18b04:	mov	r1, #-16777216	; 0xff000000
   18b08:	and	r6, r2, r0
   18b0c:	and	r7, r3, r1
   18b10:	cmp	r7, #1694498816	; 0x65000000
   18b14:	cmpeq	r6, #0
   18b18:	bne	18b7c <_start@@Base+0x4584>
   18b1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18b20:	str	r3, [fp, #-40]	; 0xffffffd8
   18b24:	ldr	r3, [fp, #8]
   18b28:	str	r3, [sp]
   18b2c:	mov	r3, #1
   18b30:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18b34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b3c:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   18b40:	str	r0, [fp, #-52]	; 0xffffffcc
   18b44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18b48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18b4c:	cmp	r2, r3
   18b50:	beq	18b74 <_start@@Base+0x457c>
   18b54:	ldr	r1, [fp, #4]
   18b58:	mov	r2, #1
   18b5c:	mov	r3, #0
   18b60:	strd	r2, [r1]
   18b64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18b68:	mov	r2, #0
   18b6c:	str	r2, [r3]
   18b70:	b	18c1c <_start@@Base+0x4624>
   18b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b78:	b	18c20 <_start@@Base+0x4628>
   18b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b80:	b	18c20 <_start@@Base+0x4628>
   18b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b88:	b	18c20 <_start@@Base+0x4628>
   18b8c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18b90:	mov	r0, #0
   18b94:	mvn	r1, #0
   18b98:	and	r4, r2, r0
   18b9c:	and	r5, r3, r1
   18ba0:	add	r3, pc, #168	; 0xa8
   18ba4:	ldrd	r2, [r3]
   18ba8:	cmp	r5, r3
   18bac:	cmpeq	r4, r2
   18bb0:	bne	18c14 <_start@@Base+0x461c>
   18bb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18bb8:	str	r3, [fp, #-40]	; 0xffffffd8
   18bbc:	ldr	r3, [fp, #8]
   18bc0:	str	r3, [sp]
   18bc4:	mov	r3, #4
   18bc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18bcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18bd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18bd4:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   18bd8:	str	r0, [fp, #-52]	; 0xffffffcc
   18bdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18be4:	cmp	r2, r3
   18be8:	beq	18c0c <_start@@Base+0x4614>
   18bec:	ldr	r1, [fp, #4]
   18bf0:	mov	r2, #0
   18bf4:	mov	r3, #0
   18bf8:	strd	r2, [r1]
   18bfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18c00:	mov	r2, #0
   18c04:	str	r2, [r3]
   18c08:	b	18c1c <_start@@Base+0x4624>
   18c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c10:	b	18c20 <_start@@Base+0x4628>
   18c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c18:	b	18c20 <_start@@Base+0x4628>
   18c1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18c20:	mov	r0, r3
   18c24:	sub	sp, fp, #20
   18c28:	ldrd	r4, [sp]
   18c2c:	ldrd	r6, [sp, #8]
   18c30:	ldr	fp, [sp, #16]
   18c34:	add	sp, sp, #20
   18c38:	pop	{pc}		; (ldr pc, [sp], #4)
   18c3c:	nop	{0}
   18c40:	rsbvc	r6, r5, #116, 28	; 0x740
   18c44:	stmdbmi	lr!, {r0, r5, r6, ip, lr}^
   18c48:	cmnvc	r0, #-1073741800	; 0xc0000018
   18c4c:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   18c50:	andeq	r0, r0, r0
   18c54:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   18c58:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18c5c:	strd	r6, [sp, #8]
   18c60:	strd	r8, [sp, #16]
   18c64:	str	fp, [sp, #24]
   18c68:	str	lr, [sp, #28]
   18c6c:	add	fp, sp, #28
   18c70:	sub	sp, sp, #48	; 0x30
   18c74:	str	r0, [fp, #-56]	; 0xffffffc8
   18c78:	str	r1, [fp, #-60]	; 0xffffffc4
   18c7c:	str	r2, [fp, #-64]	; 0xffffffc0
   18c80:	str	r3, [fp, #-68]	; 0xffffffbc
   18c84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18c88:	str	r3, [fp, #-32]	; 0xffffffe0
   18c8c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18c90:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18c94:	bl	14ffc <_start@@Base+0xa04>
   18c98:	strd	r0, [fp, #-44]	; 0xffffffd4
   18c9c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18ca0:	add	r1, pc, #472	; 0x1d8
   18ca4:	ldrd	r0, [r1]
   18ca8:	cmp	r3, r1
   18cac:	cmpeq	r2, r0
   18cb0:	bhi	18d44 <_start@@Base+0x474c>
   18cb4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18cb8:	mov	r0, #0
   18cbc:	mvn	r1, #0
   18cc0:	and	r8, r2, r0
   18cc4:	and	r9, r3, r1
   18cc8:	add	r3, pc, #440	; 0x1b8
   18ccc:	ldrd	r2, [r3]
   18cd0:	cmp	r9, r3
   18cd4:	cmpeq	r8, r2
   18cd8:	bne	18d3c <_start@@Base+0x4744>
   18cdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18ce0:	str	r3, [fp, #-48]	; 0xffffffd0
   18ce4:	ldr	r3, [fp, #8]
   18ce8:	str	r3, [sp]
   18cec:	mov	r3, #4
   18cf0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18cf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18cf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18cfc:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   18d00:	str	r0, [fp, #-60]	; 0xffffffc4
   18d04:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18d08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18d0c:	cmp	r2, r3
   18d10:	beq	18d34 <_start@@Base+0x473c>
   18d14:	ldr	r1, [fp, #4]
   18d18:	mvn	r2, #11
   18d1c:	mvn	r3, #0
   18d20:	strd	r2, [r1]
   18d24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18d28:	mov	r2, #1
   18d2c:	str	r2, [r3]
   18d30:	b	18e5c <_start@@Base+0x4864>
   18d34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d38:	b	18e60 <_start@@Base+0x4868>
   18d3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d40:	b	18e60 <_start@@Base+0x4868>
   18d44:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18d48:	mov	r0, #0
   18d4c:	mvn	r1, #0
   18d50:	and	r6, r2, r0
   18d54:	and	r7, r3, r1
   18d58:	add	r3, pc, #304	; 0x130
   18d5c:	ldrd	r2, [r3]
   18d60:	cmp	r7, r3
   18d64:	cmpeq	r6, r2
   18d68:	bne	18dcc <_start@@Base+0x47d4>
   18d6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18d70:	str	r3, [fp, #-48]	; 0xffffffd0
   18d74:	ldr	r3, [fp, #8]
   18d78:	str	r3, [sp]
   18d7c:	mov	r3, #4
   18d80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18d84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18d88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18d8c:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   18d90:	str	r0, [fp, #-60]	; 0xffffffc4
   18d94:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18d98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18d9c:	cmp	r2, r3
   18da0:	beq	18dc4 <_start@@Base+0x47cc>
   18da4:	ldr	r1, [fp, #4]
   18da8:	mvn	r2, #9
   18dac:	mvn	r3, #0
   18db0:	strd	r2, [r1]
   18db4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18db8:	mov	r2, #1
   18dbc:	str	r2, [r3]
   18dc0:	b	18e5c <_start@@Base+0x4864>
   18dc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18dc8:	b	18e60 <_start@@Base+0x4868>
   18dcc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18dd0:	mov	r0, #0
   18dd4:	mvn	r1, #0
   18dd8:	and	r4, r2, r0
   18ddc:	and	r5, r3, r1
   18de0:	add	r3, pc, #176	; 0xb0
   18de4:	ldrd	r2, [r3]
   18de8:	cmp	r5, r3
   18dec:	cmpeq	r4, r2
   18df0:	bne	18e54 <_start@@Base+0x485c>
   18df4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18df8:	str	r3, [fp, #-48]	; 0xffffffd0
   18dfc:	ldr	r3, [fp, #8]
   18e00:	str	r3, [sp]
   18e04:	mov	r3, #4
   18e08:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18e0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18e10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18e14:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   18e18:	str	r0, [fp, #-60]	; 0xffffffc4
   18e1c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18e20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18e24:	cmp	r2, r3
   18e28:	beq	18e4c <_start@@Base+0x4854>
   18e2c:	ldr	r1, [fp, #4]
   18e30:	mvn	r2, #10
   18e34:	mvn	r3, #0
   18e38:	strd	r2, [r1]
   18e3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18e40:	mov	r2, #1
   18e44:	str	r2, [r3]
   18e48:	b	18e5c <_start@@Base+0x4864>
   18e4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e50:	b	18e60 <_start@@Base+0x4868>
   18e54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e58:	b	18e60 <_start@@Base+0x4868>
   18e5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18e60:	mov	r0, r3
   18e64:	sub	sp, fp, #28
   18e68:	ldrd	r4, [sp]
   18e6c:	ldrd	r6, [sp, #8]
   18e70:	ldrd	r8, [sp, #16]
   18e74:	ldr	fp, [sp, #24]
   18e78:	add	sp, sp, #28
   18e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   18e80:			; <UNDEFINED> instruction: 0xffffffff
   18e84:	mcrvs	7, 3, r6, cr5, cr1, {1}
   18e88:	andeq	r0, r0, r0
   18e8c:	mcrvs	7, 3, r6, cr5, cr1, {1}
   18e90:	andeq	r0, r0, r0
   18e94:	mcrvs	7, 3, r6, cr5, cr3, {1}
   18e98:	andeq	r0, r0, r0
   18e9c:	mcrvs	7, 3, r6, cr5, cr2, {1}
   18ea0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18ea4:	strd	r6, [sp, #8]
   18ea8:	strd	r8, [sp, #16]
   18eac:	str	fp, [sp, #24]
   18eb0:	str	lr, [sp, #28]
   18eb4:	add	fp, sp, #28
   18eb8:	sub	sp, sp, #56	; 0x38
   18ebc:	str	r0, [fp, #-56]	; 0xffffffc8
   18ec0:	str	r1, [fp, #-60]	; 0xffffffc4
   18ec4:	str	r2, [fp, #-64]	; 0xffffffc0
   18ec8:	str	r3, [fp, #-68]	; 0xffffffbc
   18ecc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18ed0:	str	r3, [fp, #-32]	; 0xffffffe0
   18ed4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18ed8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18edc:	bl	14ffc <_start@@Base+0xa04>
   18ee0:	strd	r0, [fp, #-44]	; 0xffffffd4
   18ee4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18ee8:	add	r1, pc, #656	; 0x290
   18eec:	ldrd	r0, [r1]
   18ef0:	cmp	r3, r1
   18ef4:	cmpeq	r2, r0
   18ef8:	bhi	18f98 <_start@@Base+0x49a0>
   18efc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18f00:	mov	r0, #0
   18f04:	mvn	r1, #0
   18f08:	and	ip, r2, r0
   18f0c:	str	ip, [fp, #-76]	; 0xffffffb4
   18f10:	and	r3, r3, r1
   18f14:	str	r3, [fp, #-72]	; 0xffffffb8
   18f18:	add	r3, pc, #616	; 0x268
   18f1c:	ldrd	r2, [r3]
   18f20:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   18f24:	cmp	r1, r3
   18f28:	cmpeq	r0, r2
   18f2c:	bne	18f90 <_start@@Base+0x4998>
   18f30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18f34:	str	r3, [fp, #-48]	; 0xffffffd0
   18f38:	ldr	r3, [fp, #8]
   18f3c:	str	r3, [sp]
   18f40:	mov	r3, #4
   18f44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18f48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18f4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18f50:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   18f54:	str	r0, [fp, #-60]	; 0xffffffc4
   18f58:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18f5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18f60:	cmp	r2, r3
   18f64:	beq	18f88 <_start@@Base+0x4990>
   18f68:	ldr	r1, [fp, #4]
   18f6c:	mov	r2, #2
   18f70:	mov	r3, #0
   18f74:	strd	r2, [r1]
   18f78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18f7c:	mov	r2, #0
   18f80:	str	r2, [r3]
   18f84:	b	1915c <_start@@Base+0x4b64>
   18f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f8c:	b	19160 <_start@@Base+0x4b68>
   18f90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f94:	b	19160 <_start@@Base+0x4b68>
   18f98:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18f9c:	add	r1, pc, #492	; 0x1ec
   18fa0:	ldrd	r0, [r1]
   18fa4:	cmp	r3, r1
   18fa8:	cmpeq	r2, r0
   18fac:	bhi	19040 <_start@@Base+0x4a48>
   18fb0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18fb4:	mov	r0, #0
   18fb8:	mvn	r1, #0
   18fbc:	and	r8, r2, r0
   18fc0:	and	r9, r3, r1
   18fc4:	add	r3, pc, #460	; 0x1cc
   18fc8:	ldrd	r2, [r3]
   18fcc:	cmp	r9, r3
   18fd0:	cmpeq	r8, r2
   18fd4:	bne	19038 <_start@@Base+0x4a40>
   18fd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18fdc:	str	r3, [fp, #-48]	; 0xffffffd0
   18fe0:	ldr	r3, [fp, #8]
   18fe4:	str	r3, [sp]
   18fe8:	mov	r3, #4
   18fec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18ff0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18ff4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18ff8:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   18ffc:	str	r0, [fp, #-60]	; 0xffffffc4
   19000:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19004:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19008:	cmp	r2, r3
   1900c:	beq	19030 <_start@@Base+0x4a38>
   19010:	ldr	r1, [fp, #4]
   19014:	mov	r2, #42	; 0x2a
   19018:	mov	r3, #0
   1901c:	strd	r2, [r1]
   19020:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19024:	mov	r2, #0
   19028:	str	r2, [r3]
   1902c:	b	1915c <_start@@Base+0x4b64>
   19030:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19034:	b	19160 <_start@@Base+0x4b68>
   19038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1903c:	b	19160 <_start@@Base+0x4b68>
   19040:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19044:	mvn	r0, #255	; 0xff
   19048:	mvn	r1, #0
   1904c:	and	r6, r2, r0
   19050:	and	r7, r3, r1
   19054:	add	r3, pc, #324	; 0x144
   19058:	ldrd	r2, [r3]
   1905c:	cmp	r7, r3
   19060:	cmpeq	r6, r2
   19064:	bne	190c8 <_start@@Base+0x4ad0>
   19068:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1906c:	str	r3, [fp, #-48]	; 0xffffffd0
   19070:	ldr	r3, [fp, #8]
   19074:	str	r3, [sp]
   19078:	mov	r3, #7
   1907c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19080:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19084:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19088:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   1908c:	str	r0, [fp, #-60]	; 0xffffffc4
   19090:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19094:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19098:	cmp	r2, r3
   1909c:	beq	190c0 <_start@@Base+0x4ac8>
   190a0:	ldr	r1, [fp, #4]
   190a4:	mvn	r2, #0
   190a8:	mvn	r3, #0
   190ac:	strd	r2, [r1]
   190b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   190b4:	mov	r2, #1
   190b8:	str	r2, [r3]
   190bc:	b	1915c <_start@@Base+0x4b64>
   190c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   190c4:	b	19160 <_start@@Base+0x4b68>
   190c8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   190cc:	mov	r0, #0
   190d0:	movt	r0, #65535	; 0xffff
   190d4:	mvn	r1, #0
   190d8:	and	r4, r2, r0
   190dc:	and	r5, r3, r1
   190e0:	add	r3, pc, #192	; 0xc0
   190e4:	ldrd	r2, [r3]
   190e8:	cmp	r5, r3
   190ec:	cmpeq	r4, r2
   190f0:	bne	19154 <_start@@Base+0x4b5c>
   190f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   190f8:	str	r3, [fp, #-48]	; 0xffffffd0
   190fc:	ldr	r3, [fp, #8]
   19100:	str	r3, [sp]
   19104:	mov	r3, #6
   19108:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1910c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19110:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19114:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   19118:	str	r0, [fp, #-60]	; 0xffffffc4
   1911c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19120:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19124:	cmp	r2, r3
   19128:	beq	1914c <_start@@Base+0x4b54>
   1912c:	ldr	r1, [fp, #4]
   19130:	mvn	r2, #1
   19134:	mvn	r3, #0
   19138:	strd	r2, [r1]
   1913c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19140:	mov	r2, #1
   19144:	str	r2, [r3]
   19148:	b	1915c <_start@@Base+0x4b64>
   1914c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19150:	b	19160 <_start@@Base+0x4b68>
   19154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19158:	b	19160 <_start@@Base+0x4b68>
   1915c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19160:	mov	r0, r3
   19164:	sub	sp, fp, #28
   19168:	ldrd	r4, [sp]
   1916c:	ldrd	r6, [sp, #8]
   19170:	ldrd	r8, [sp, #16]
   19174:	ldr	fp, [sp, #24]
   19178:	add	sp, sp, #28
   1917c:	pop	{pc}		; (ldr pc, [sp], #4)
   19180:			; <UNDEFINED> instruction: 0xffffffff
   19184:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   19188:	andeq	r0, r0, r0
   1918c:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   19190:	strbvs	pc, [r6, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   19194:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   19198:	andeq	r0, r0, r0
   1919c:	stmdbvs	lr!, {r1, r4, r5, sl, ip, sp, lr}^
   191a0:	strbvs	r3, [r7, #-512]!	; 0xfffffe00
   191a4:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   191a8:	strbvs	r0, [r7, #-0]!
   191ac:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   191b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   191b4:	strd	r6, [sp, #8]
   191b8:	strd	r8, [sp, #16]
   191bc:	str	fp, [sp, #24]
   191c0:	str	lr, [sp, #28]
   191c4:	add	fp, sp, #28
   191c8:	sub	sp, sp, #48	; 0x30
   191cc:	str	r0, [fp, #-56]	; 0xffffffc8
   191d0:	str	r1, [fp, #-60]	; 0xffffffc4
   191d4:	str	r2, [fp, #-64]	; 0xffffffc0
   191d8:	str	r3, [fp, #-68]	; 0xffffffbc
   191dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   191e0:	str	r3, [fp, #-32]	; 0xffffffe0
   191e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   191e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   191ec:	bl	14ffc <_start@@Base+0xa04>
   191f0:	strd	r0, [fp, #-44]	; 0xffffffd4
   191f4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   191f8:	add	r1, pc, #480	; 0x1e0
   191fc:	ldrd	r0, [r1]
   19200:	cmp	r3, r1
   19204:	cmpeq	r2, r0
   19208:	bhi	1929c <_start@@Base+0x4ca4>
   1920c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19210:	mov	r0, #0
   19214:	mvn	r1, #0
   19218:	and	r8, r2, r0
   1921c:	and	r9, r3, r1
   19220:	add	r3, pc, #448	; 0x1c0
   19224:	ldrd	r2, [r3]
   19228:	cmp	r9, r3
   1922c:	cmpeq	r8, r2
   19230:	bne	19294 <_start@@Base+0x4c9c>
   19234:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19238:	str	r3, [fp, #-48]	; 0xffffffd0
   1923c:	ldr	r3, [fp, #8]
   19240:	str	r3, [sp]
   19244:	mov	r3, #4
   19248:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1924c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19250:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19254:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   19258:	str	r0, [fp, #-60]	; 0xffffffc4
   1925c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19260:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19264:	cmp	r2, r3
   19268:	beq	1928c <_start@@Base+0x4c94>
   1926c:	ldr	r1, [fp, #4]
   19270:	mov	r2, #3
   19274:	mov	r3, #0
   19278:	strd	r2, [r1]
   1927c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19280:	mov	r2, #0
   19284:	str	r2, [r3]
   19288:	b	193b8 <_start@@Base+0x4dc0>
   1928c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19290:	b	193bc <_start@@Base+0x4dc4>
   19294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19298:	b	193bc <_start@@Base+0x4dc4>
   1929c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   192a0:	mov	r0, #0
   192a4:	movt	r0, #65535	; 0xffff
   192a8:	mvn	r1, #0
   192ac:	and	r6, r2, r0
   192b0:	and	r7, r3, r1
   192b4:	add	r3, pc, #308	; 0x134
   192b8:	ldrd	r2, [r3]
   192bc:	cmp	r7, r3
   192c0:	cmpeq	r6, r2
   192c4:	bne	19328 <_start@@Base+0x4d30>
   192c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   192cc:	str	r3, [fp, #-48]	; 0xffffffd0
   192d0:	ldr	r3, [fp, #8]
   192d4:	str	r3, [sp]
   192d8:	mov	r3, #6
   192dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   192e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   192e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   192e8:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   192ec:	str	r0, [fp, #-60]	; 0xffffffc4
   192f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   192f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   192f8:	cmp	r2, r3
   192fc:	beq	19320 <_start@@Base+0x4d28>
   19300:	ldr	r1, [fp, #4]
   19304:	mvn	r2, #1
   19308:	mvn	r3, #0
   1930c:	strd	r2, [r1]
   19310:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19314:	mov	r2, #1
   19318:	str	r2, [r3]
   1931c:	b	193b8 <_start@@Base+0x4dc0>
   19320:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19324:	b	193bc <_start@@Base+0x4dc4>
   19328:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1932c:	mov	r0, #0
   19330:	mvn	r1, #0
   19334:	and	r4, r2, r0
   19338:	and	r5, r3, r1
   1933c:	add	r3, pc, #180	; 0xb4
   19340:	ldrd	r2, [r3]
   19344:	cmp	r5, r3
   19348:	cmpeq	r4, r2
   1934c:	bne	193b0 <_start@@Base+0x4db8>
   19350:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19354:	str	r3, [fp, #-48]	; 0xffffffd0
   19358:	ldr	r3, [fp, #8]
   1935c:	str	r3, [sp]
   19360:	mov	r3, #4
   19364:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19368:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1936c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19370:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   19374:	str	r0, [fp, #-60]	; 0xffffffc4
   19378:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1937c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19380:	cmp	r2, r3
   19384:	beq	193a8 <_start@@Base+0x4db0>
   19388:	ldr	r1, [fp, #4]
   1938c:	add	r3, pc, #108	; 0x6c
   19390:	ldrd	r2, [r3]
   19394:	strd	r2, [r1]
   19398:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1939c:	mov	r2, #0
   193a0:	str	r2, [r3]
   193a4:	b	193b8 <_start@@Base+0x4dc0>
   193a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193ac:	b	193bc <_start@@Base+0x4dc4>
   193b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193b4:	b	193bc <_start@@Base+0x4dc4>
   193b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   193bc:	mov	r0, r3
   193c0:	sub	sp, fp, #28
   193c4:	ldrd	r4, [sp]
   193c8:	ldrd	r6, [sp, #8]
   193cc:	ldrd	r8, [sp, #16]
   193d0:	ldr	fp, [sp, #24]
   193d4:	add	sp, sp, #28
   193d8:	pop	{pc}		; (ldr pc, [sp], #4)
   193dc:	nop	{0}
   193e0:			; <UNDEFINED> instruction: 0xffffffff
   193e4:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   193e8:	andeq	r0, r0, r0
   193ec:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   193f0:	strbvs	r0, [r7, #-0]!
   193f4:	stmdavs	r5!, {r1, r2, r3, r5, r6, fp, ip, sp, lr}^
   193f8:	andeq	r0, r0, r0
   193fc:	stmdavs	r5!, {r1, r4, r5, fp, ip, sp, lr}^
   19400:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   19404:	andeq	r0, r0, r0
   19408:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1940c:	strd	r6, [sp, #8]
   19410:	strd	r8, [sp, #16]
   19414:	str	fp, [sp, #24]
   19418:	str	lr, [sp, #28]
   1941c:	add	fp, sp, #28
   19420:	sub	sp, sp, #48	; 0x30
   19424:	str	r0, [fp, #-56]	; 0xffffffc8
   19428:	str	r1, [fp, #-60]	; 0xffffffc4
   1942c:	str	r2, [fp, #-64]	; 0xffffffc0
   19430:	str	r3, [fp, #-68]	; 0xffffffbc
   19434:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19438:	str	r3, [fp, #-32]	; 0xffffffe0
   1943c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19440:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19444:	bl	14ffc <_start@@Base+0xa04>
   19448:	strd	r0, [fp, #-44]	; 0xffffffd4
   1944c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19450:	add	r1, pc, #472	; 0x1d8
   19454:	ldrd	r0, [r1]
   19458:	cmp	r3, r1
   1945c:	cmpeq	r2, r0
   19460:	bhi	194f4 <_start@@Base+0x4efc>
   19464:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19468:	mov	r0, #0
   1946c:	mvn	r1, #0
   19470:	and	r8, r2, r0
   19474:	and	r9, r3, r1
   19478:	add	r3, pc, #440	; 0x1b8
   1947c:	ldrd	r2, [r3]
   19480:	cmp	r9, r3
   19484:	cmpeq	r8, r2
   19488:	bne	194ec <_start@@Base+0x4ef4>
   1948c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19490:	str	r3, [fp, #-48]	; 0xffffffd0
   19494:	ldr	r3, [fp, #8]
   19498:	str	r3, [sp]
   1949c:	mov	r3, #4
   194a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   194a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   194a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   194ac:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   194b0:	str	r0, [fp, #-60]	; 0xffffffc4
   194b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   194b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   194bc:	cmp	r2, r3
   194c0:	beq	194e4 <_start@@Base+0x4eec>
   194c4:	ldr	r1, [fp, #4]
   194c8:	mov	r2, #8
   194cc:	mov	r3, #0
   194d0:	strd	r2, [r1]
   194d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   194d8:	mov	r2, #0
   194dc:	str	r2, [r3]
   194e0:	b	1960c <_start@@Base+0x5014>
   194e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194e8:	b	19610 <_start@@Base+0x5018>
   194ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194f0:	b	19610 <_start@@Base+0x5018>
   194f4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   194f8:	mov	r0, #0
   194fc:	mvn	r1, #255	; 0xff
   19500:	and	r6, r2, r0
   19504:	and	r7, r3, r1
   19508:	add	r3, pc, #304	; 0x130
   1950c:	ldrd	r2, [r3]
   19510:	cmp	r7, r3
   19514:	cmpeq	r6, r2
   19518:	bne	1957c <_start@@Base+0x4f84>
   1951c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19520:	str	r3, [fp, #-48]	; 0xffffffd0
   19524:	ldr	r3, [fp, #8]
   19528:	str	r3, [sp]
   1952c:	mov	r3, #3
   19530:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19534:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19538:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1953c:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   19540:	str	r0, [fp, #-60]	; 0xffffffc4
   19544:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19548:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1954c:	cmp	r2, r3
   19550:	beq	19574 <_start@@Base+0x4f7c>
   19554:	ldr	r1, [fp, #4]
   19558:	mov	r2, #1
   1955c:	mov	r3, #0
   19560:	strd	r2, [r1]
   19564:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19568:	mov	r2, #0
   1956c:	str	r2, [r3]
   19570:	b	1960c <_start@@Base+0x5014>
   19574:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19578:	b	19610 <_start@@Base+0x5018>
   1957c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19580:	mov	r0, #-16777216	; 0xff000000
   19584:	mvn	r1, #0
   19588:	and	r4, r2, r0
   1958c:	and	r5, r3, r1
   19590:	add	r3, pc, #176	; 0xb0
   19594:	ldrd	r2, [r3]
   19598:	cmp	r5, r3
   1959c:	cmpeq	r4, r2
   195a0:	bne	19604 <_start@@Base+0x500c>
   195a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   195a8:	str	r3, [fp, #-48]	; 0xffffffd0
   195ac:	ldr	r3, [fp, #8]
   195b0:	str	r3, [sp]
   195b4:	mov	r3, #5
   195b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   195bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   195c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   195c4:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   195c8:	str	r0, [fp, #-60]	; 0xffffffc4
   195cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   195d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   195d4:	cmp	r2, r3
   195d8:	beq	195fc <_start@@Base+0x5004>
   195dc:	ldr	r1, [fp, #4]
   195e0:	mov	r2, #2
   195e4:	mov	r3, #0
   195e8:	strd	r2, [r1]
   195ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   195f0:	mov	r2, #0
   195f4:	str	r2, [r3]
   195f8:	b	1960c <_start@@Base+0x5014>
   195fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19600:	b	19610 <_start@@Base+0x5018>
   19604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19608:	b	19610 <_start@@Base+0x5018>
   1960c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19610:	mov	r0, r3
   19614:	sub	sp, fp, #28
   19618:	ldrd	r4, [sp]
   1961c:	ldrd	r6, [sp, #8]
   19620:	ldrd	r8, [sp, #16]
   19624:	ldr	fp, [sp, #24]
   19628:	add	sp, sp, #28
   1962c:	pop	{pc}		; (ldr pc, [sp], #4)
   19630:	ldclvs	15, cr15, [pc, #1020]!	; 19a34 <_start@@Base+0x543c>
   19634:	ldrbmi	r6, [r2, -r5, ror #10]!
   19638:	andeq	r0, r0, r0
   1963c:	rsbmi	r7, ip, #423624704	; 0x19400000
   19640:	andeq	r0, r0, r0
   19644:	rsbpl	r6, r5, #0, 8
   19648:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   1964c:	ldrbmi	r6, [r2, -r5, ror #10]!
   19650:	str	fp, [sp, #-8]!
   19654:	str	lr, [sp, #4]
   19658:	add	fp, sp, #4
   1965c:	sub	sp, sp, #16
   19660:	str	r0, [fp, #-8]
   19664:	str	r1, [fp, #-12]
   19668:	str	r2, [fp, #-16]
   1966c:	strb	r3, [fp, #-17]	; 0xffffffef
   19670:	ldr	r3, [fp, #4]
   19674:	mov	r2, #0
   19678:	str	r2, [r3]
   1967c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   19680:	cmp	r3, #4
   19684:	addls	pc, pc, r3, lsl #2
   19688:	b	19728 <_start@@Base+0x5130>
   1968c:	b	196a0 <_start@@Base+0x50a8>
   19690:	b	196b8 <_start@@Base+0x50c0>
   19694:	b	196d4 <_start@@Base+0x50dc>
   19698:	b	196f0 <_start@@Base+0x50f8>
   1969c:	b	1970c <_start@@Base+0x5114>
   196a0:	ldr	r2, [fp, #-16]
   196a4:	ldr	r1, [fp, #-12]
   196a8:	ldr	r0, [fp, #-8]
   196ac:	bl	15dc4 <_start@@Base+0x17cc>
   196b0:	mov	r3, r0
   196b4:	b	197b8 <_start@@Base+0x51c0>
   196b8:	ldr	r3, [fp, #4]
   196bc:	ldr	r2, [fp, #-16]
   196c0:	ldr	r1, [fp, #-12]
   196c4:	ldr	r0, [fp, #-8]
   196c8:	bl	1ed10 <_start@@Base+0xa718>
   196cc:	str	r0, [fp, #-12]
   196d0:	b	19770 <_start@@Base+0x5178>
   196d4:	ldr	r3, [fp, #4]
   196d8:	ldr	r2, [fp, #-16]
   196dc:	ldr	r1, [fp, #-12]
   196e0:	ldr	r0, [fp, #-8]
   196e4:	bl	1a5c4 <_start@@Base+0x5fcc>
   196e8:	str	r0, [fp, #-12]
   196ec:	b	19770 <_start@@Base+0x5178>
   196f0:	ldr	r3, [fp, #4]
   196f4:	ldr	r2, [fp, #-16]
   196f8:	ldr	r1, [fp, #-12]
   196fc:	ldr	r0, [fp, #-8]
   19700:	bl	187ac <_start@@Base+0x41b4>
   19704:	str	r0, [fp, #-12]
   19708:	b	19770 <_start@@Base+0x5178>
   1970c:	ldr	r3, [fp, #4]
   19710:	ldr	r2, [fp, #-16]
   19714:	ldr	r1, [fp, #-12]
   19718:	ldr	r0, [fp, #-8]
   1971c:	bl	1c8e4 <_start@@Base+0x82ec>
   19720:	str	r0, [fp, #-12]
   19724:	b	19770 <_start@@Base+0x5178>
   19728:	ldr	r3, [fp, #-8]
   1972c:	ldr	r3, [r3, #8]
   19730:	and	r3, r3, #1
   19734:	cmp	r3, #0
   19738:	bne	19758 <_start@@Base+0x5160>
   1973c:	mov	r3, #15
   19740:	ldr	r2, [fp, #-16]
   19744:	ldr	r1, [fp, #-12]
   19748:	ldr	r0, [fp, #-8]
   1974c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   19750:	mov	r3, r0
   19754:	b	197b8 <_start@@Base+0x51c0>
   19758:	ldr	r2, [fp, #-16]
   1975c:	ldr	r1, [fp, #-12]
   19760:	ldr	r0, [fp, #-8]
   19764:	bl	3cf4c <flatcc_json_parser_generic_json@@Base>
   19768:	mov	r3, r0
   1976c:	b	197b8 <_start@@Base+0x51c0>
   19770:	ldr	r3, [fp, #-8]
   19774:	ldr	r3, [r3, #20]
   19778:	cmp	r3, #0
   1977c:	beq	19788 <_start@@Base+0x5190>
   19780:	ldr	r3, [fp, #-12]
   19784:	b	197b8 <_start@@Base+0x51c0>
   19788:	ldr	r3, [fp, #4]
   1978c:	ldr	r3, [r3]
   19790:	cmp	r3, #0
   19794:	bne	197b4 <_start@@Base+0x51bc>
   19798:	mov	r3, #33	; 0x21
   1979c:	ldr	r2, [fp, #-16]
   197a0:	ldr	r1, [fp, #-12]
   197a4:	ldr	r0, [fp, #-8]
   197a8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   197ac:	mov	r3, r0
   197b0:	b	197b8 <_start@@Base+0x51c0>
   197b4:	ldr	r3, [fp, #-12]
   197b8:	mov	r0, r3
   197bc:	sub	sp, fp, #4
   197c0:	ldr	fp, [sp]
   197c4:	add	sp, sp, #4
   197c8:	pop	{pc}		; (ldr pc, [sp], #4)
   197cc:	push	{fp}		; (str fp, [sp, #-4]!)
   197d0:	add	fp, sp, #0
   197d4:	sub	sp, sp, #12
   197d8:	mov	r3, r0
   197dc:	strb	r3, [fp, #-5]
   197e0:	ldrb	r3, [fp, #-5]
   197e4:	cmp	r3, #4
   197e8:	addls	pc, pc, r3, lsl #2
   197ec:	b	1982c <_start@@Base+0x5234>
   197f0:	b	19804 <_start@@Base+0x520c>
   197f4:	b	1980c <_start@@Base+0x5214>
   197f8:	b	19814 <_start@@Base+0x521c>
   197fc:	b	1981c <_start@@Base+0x5224>
   19800:	b	19824 <_start@@Base+0x522c>
   19804:	mov	r3, #1
   19808:	b	19830 <_start@@Base+0x5238>
   1980c:	mov	r3, #1
   19810:	b	19830 <_start@@Base+0x5238>
   19814:	mov	r3, #1
   19818:	b	19830 <_start@@Base+0x5238>
   1981c:	mov	r3, #1
   19820:	b	19830 <_start@@Base+0x5238>
   19824:	mov	r3, #1
   19828:	b	19830 <_start@@Base+0x5238>
   1982c:	mov	r3, #0
   19830:	mov	r0, r3
   19834:	add	sp, fp, #0
   19838:	pop	{fp}		; (ldr fp, [sp], #4)
   1983c:	bx	lr
   19840:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19844:	strd	r6, [sp, #8]
   19848:	strd	r8, [sp, #16]
   1984c:	str	fp, [sp, #24]
   19850:	str	lr, [sp, #28]
   19854:	add	fp, sp, #28
   19858:	sub	sp, sp, #56	; 0x38
   1985c:	str	r0, [fp, #-56]	; 0xffffffc8
   19860:	str	r1, [fp, #-60]	; 0xffffffc4
   19864:	str	r2, [fp, #-64]	; 0xffffffc0
   19868:	str	r3, [fp, #-68]	; 0xffffffbc
   1986c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19870:	str	r3, [fp, #-32]	; 0xffffffe0
   19874:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19878:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1987c:	bl	14ffc <_start@@Base+0xa04>
   19880:	strd	r0, [fp, #-44]	; 0xffffffd4
   19884:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19888:	add	r1, pc, #872	; 0x368
   1988c:	ldrd	r0, [r1]
   19890:	cmp	r3, r1
   19894:	cmpeq	r2, r0
   19898:	bhi	19938 <_start@@Base+0x5340>
   1989c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   198a0:	mov	r0, #0
   198a4:	mvn	r1, #255	; 0xff
   198a8:	and	ip, r2, r0
   198ac:	str	ip, [fp, #-76]	; 0xffffffb4
   198b0:	and	r3, r3, r1
   198b4:	str	r3, [fp, #-72]	; 0xffffffb8
   198b8:	add	r3, pc, #832	; 0x340
   198bc:	ldrd	r2, [r3]
   198c0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   198c4:	cmp	r1, r3
   198c8:	cmpeq	r0, r2
   198cc:	bne	19930 <_start@@Base+0x5338>
   198d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   198d4:	str	r3, [fp, #-48]	; 0xffffffd0
   198d8:	ldr	r3, [fp, #8]
   198dc:	str	r3, [sp]
   198e0:	mov	r3, #3
   198e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   198e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   198ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   198f0:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   198f4:	str	r0, [fp, #-60]	; 0xffffffc4
   198f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   198fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19900:	cmp	r2, r3
   19904:	beq	19928 <_start@@Base+0x5330>
   19908:	ldr	r1, [fp, #4]
   1990c:	mov	r2, #4
   19910:	mov	r3, #0
   19914:	strd	r2, [r1]
   19918:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1991c:	mov	r2, #0
   19920:	str	r2, [r3]
   19924:	b	19bd0 <_start@@Base+0x55d8>
   19928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1992c:	b	19bd4 <_start@@Base+0x55dc>
   19930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19934:	b	19bd4 <_start@@Base+0x55dc>
   19938:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1993c:	add	r1, pc, #708	; 0x2c4
   19940:	ldrd	r0, [r1]
   19944:	cmp	r3, r1
   19948:	cmpeq	r2, r0
   1994c:	bne	199a8 <_start@@Base+0x53b0>
   19950:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19954:	str	r3, [fp, #-48]	; 0xffffffd0
   19958:	ldr	r3, [fp, #8]
   1995c:	str	r3, [sp]
   19960:	mov	r3, #8
   19964:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19968:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1996c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19970:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   19974:	str	r0, [fp, #-60]	; 0xffffffc4
   19978:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1997c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19980:	cmp	r2, r3
   19984:	beq	19a28 <_start@@Base+0x5430>
   19988:	ldr	r1, [fp, #4]
   1998c:	mov	r2, #3
   19990:	mov	r3, #0
   19994:	strd	r2, [r1]
   19998:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1999c:	mov	r2, #0
   199a0:	str	r2, [r3]
   199a4:	b	19bd0 <_start@@Base+0x55d8>
   199a8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   199ac:	mvn	r0, #255	; 0xff
   199b0:	mvn	r1, #0
   199b4:	and	r8, r2, r0
   199b8:	and	r9, r3, r1
   199bc:	add	r3, pc, #588	; 0x24c
   199c0:	ldrd	r2, [r3]
   199c4:	cmp	r9, r3
   199c8:	cmpeq	r8, r2
   199cc:	bne	19a30 <_start@@Base+0x5438>
   199d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   199d4:	str	r3, [fp, #-48]	; 0xffffffd0
   199d8:	ldr	r3, [fp, #8]
   199dc:	str	r3, [sp]
   199e0:	mov	r3, #7
   199e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   199e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   199ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   199f0:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   199f4:	str	r0, [fp, #-60]	; 0xffffffc4
   199f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   199fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19a00:	cmp	r2, r3
   19a04:	beq	19a38 <_start@@Base+0x5440>
   19a08:	ldr	r1, [fp, #4]
   19a0c:	mov	r2, #1
   19a10:	mov	r3, #0
   19a14:	strd	r2, [r1]
   19a18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19a1c:	mov	r2, #0
   19a20:	str	r2, [r3]
   19a24:	b	19bd0 <_start@@Base+0x55d8>
   19a28:	nop	{0}
   19a2c:	b	19a3c <_start@@Base+0x5444>
   19a30:	nop	{0}
   19a34:	b	19a3c <_start@@Base+0x5444>
   19a38:	nop	{0}
   19a3c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19a40:	mov	r0, #0
   19a44:	mvn	r1, #0
   19a48:	and	r6, r2, r0
   19a4c:	and	r7, r3, r1
   19a50:	add	r3, pc, #448	; 0x1c0
   19a54:	ldrd	r2, [r3]
   19a58:	cmp	r7, r3
   19a5c:	cmpeq	r6, r2
   19a60:	bne	19abc <_start@@Base+0x54c4>
   19a64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19a68:	str	r3, [fp, #-48]	; 0xffffffd0
   19a6c:	ldr	r3, [fp, #8]
   19a70:	str	r3, [sp]
   19a74:	mov	r3, #4
   19a78:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19a7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19a80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19a84:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   19a88:	str	r0, [fp, #-60]	; 0xffffffc4
   19a8c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19a90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19a94:	cmp	r2, r3
   19a98:	beq	19ac4 <_start@@Base+0x54cc>
   19a9c:	ldr	r1, [fp, #4]
   19aa0:	mov	r2, #0
   19aa4:	mov	r3, #0
   19aa8:	strd	r2, [r1]
   19aac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19ab0:	mov	r2, #0
   19ab4:	str	r2, [r3]
   19ab8:	b	19bd0 <_start@@Base+0x55d8>
   19abc:	nop	{0}
   19ac0:	b	19ac8 <_start@@Base+0x54d0>
   19ac4:	nop	{0}
   19ac8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19acc:	add	r1, pc, #332	; 0x14c
   19ad0:	ldrd	r0, [r1]
   19ad4:	cmp	r3, r1
   19ad8:	cmpeq	r2, r0
   19adc:	bne	19bc8 <_start@@Base+0x55d0>
   19ae0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19ae4:	add	r3, r3, #8
   19ae8:	str	r3, [fp, #-60]	; 0xffffffc4
   19aec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19af0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19af4:	bl	14ffc <_start@@Base+0xa04>
   19af8:	strd	r0, [fp, #-44]	; 0xffffffd4
   19afc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19b00:	add	r1, pc, #288	; 0x120
   19b04:	ldrd	r0, [r1]
   19b08:	cmp	r3, r1
   19b0c:	cmpeq	r2, r0
   19b10:	bne	19bc0 <_start@@Base+0x55c8>
   19b14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19b18:	add	r3, r3, #8
   19b1c:	str	r3, [fp, #-60]	; 0xffffffc4
   19b20:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19b24:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19b28:	bl	14ffc <_start@@Base+0xa04>
   19b2c:	strd	r0, [fp, #-44]	; 0xffffffd4
   19b30:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19b34:	mvn	r0, #255	; 0xff
   19b38:	mvn	r1, #0
   19b3c:	and	r4, r2, r0
   19b40:	and	r5, r3, r1
   19b44:	add	r3, pc, #228	; 0xe4
   19b48:	ldrd	r2, [r3]
   19b4c:	cmp	r5, r3
   19b50:	cmpeq	r4, r2
   19b54:	bne	19bb8 <_start@@Base+0x55c0>
   19b58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19b5c:	str	r3, [fp, #-48]	; 0xffffffd0
   19b60:	ldr	r3, [fp, #8]
   19b64:	str	r3, [sp]
   19b68:	mov	r3, #7
   19b6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19b70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19b74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b78:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   19b7c:	str	r0, [fp, #-60]	; 0xffffffc4
   19b80:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19b84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19b88:	cmp	r2, r3
   19b8c:	beq	19bb0 <_start@@Base+0x55b8>
   19b90:	ldr	r1, [fp, #4]
   19b94:	mov	r2, #2
   19b98:	mov	r3, #0
   19b9c:	strd	r2, [r1]
   19ba0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19ba4:	mov	r2, #0
   19ba8:	str	r2, [r3]
   19bac:	b	19bd0 <_start@@Base+0x55d8>
   19bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bb4:	b	19bd4 <_start@@Base+0x55dc>
   19bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bbc:	b	19bd4 <_start@@Base+0x55dc>
   19bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bc4:	b	19bd4 <_start@@Base+0x55dc>
   19bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bcc:	b	19bd4 <_start@@Base+0x55dc>
   19bd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19bd4:	mov	r0, r3
   19bd8:	sub	sp, fp, #28
   19bdc:	ldrd	r4, [sp]
   19be0:	ldrd	r6, [sp, #8]
   19be4:	ldrd	r8, [sp, #16]
   19be8:	ldr	fp, [sp, #24]
   19bec:	add	sp, sp, #28
   19bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   19bf4:	nop	{0}
   19bf8:	strbtvc	r7, [r5], #-511	; 0xfffffe01
   19bfc:	stclmi	14, cr6, [pc, #-460]!	; 19a38 <_start@@Base+0x5440>
   19c00:	andeq	r0, r0, r0
   19c04:	cmnmi	ip, r0, lsl #8
   19c08:	strbtvc	r7, [r5], #-562	; 0xfffffdce
   19c0c:	stclmi	14, cr6, [pc, #-460]!	; 19a48 <_start@@Base+0x5450>
   19c10:	strbtvc	r7, [r5], #-512	; 0xfffffe00
   19c14:	stclmi	14, cr6, [pc, #-460]!	; 19a50 <_start@@Base+0x5458>
   19c18:	andeq	r0, r0, r0
   19c1c:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   19c20:	cmnpl	r9, #112, 26	; 0x1c00
   19c24:	strbtpl	r7, [r5], #-884	; 0xfffffc8c
   19c28:	rsbvs	r6, ip, #364904448	; 0x15c00000
   19c2c:	cfstrdvs	mvd5, [r5], #-388	; 0xfffffe7c
   19c30:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   19c34:	ldmdbvs	r4!, {r0, r2, r6, fp, sp, lr}^
   19c38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19c3c:	strd	r6, [sp, #8]
   19c40:	str	fp, [sp, #16]
   19c44:	str	lr, [sp, #20]
   19c48:	add	fp, sp, #20
   19c4c:	sub	sp, sp, #48	; 0x30
   19c50:	str	r0, [fp, #-48]	; 0xffffffd0
   19c54:	str	r1, [fp, #-52]	; 0xffffffcc
   19c58:	str	r2, [fp, #-56]	; 0xffffffc8
   19c5c:	str	r3, [fp, #-60]	; 0xffffffc4
   19c60:	sub	r3, fp, #40	; 0x28
   19c64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19c68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19c6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19c70:	bl	15130 <_start@@Base+0xb38>
   19c74:	str	r0, [fp, #-52]	; 0xffffffcc
   19c78:	b	19ee0 <_start@@Base+0x58e8>
   19c7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19c80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19c84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19c88:	bl	14cf4 <_start@@Base+0x6fc>
   19c8c:	str	r0, [fp, #-52]	; 0xffffffcc
   19c90:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19c94:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19c98:	bl	14ffc <_start@@Base+0xa04>
   19c9c:	strd	r0, [fp, #-28]	; 0xffffffe4
   19ca0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19ca4:	mov	r0, #0
   19ca8:	mov	r1, #-16777216	; 0xff000000
   19cac:	and	r4, r2, r0
   19cb0:	and	r5, r3, r1
   19cb4:	cmp	r5, #1644167168	; 0x62000000
   19cb8:	cmpeq	r4, #0
   19cbc:	bne	19dac <_start@@Base+0x57b4>
   19cc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19cc4:	str	r3, [fp, #-32]	; 0xffffffe0
   19cc8:	mov	r3, #1
   19ccc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19cd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19cd4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19cd8:	bl	15600 <_start@@Base+0x1008>
   19cdc:	str	r0, [fp, #-52]	; 0xffffffcc
   19ce0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19ce4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19ce8:	cmp	r2, r3
   19cec:	beq	19d94 <_start@@Base+0x579c>
   19cf0:	mov	r3, #0
   19cf4:	strb	r3, [fp, #-41]	; 0xffffffd7
   19cf8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19cfc:	add	r3, r3, #2
   19d00:	str	r3, [fp, #-36]	; 0xffffffdc
   19d04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19d08:	str	r3, [fp, #-32]	; 0xffffffe0
   19d0c:	sub	r3, fp, #41	; 0x29
   19d10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19d14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19d18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19d1c:	bl	16460 <_start@@Base+0x1e68>
   19d20:	str	r0, [fp, #-52]	; 0xffffffcc
   19d24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19d28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19d2c:	cmp	r2, r3
   19d30:	bne	19d80 <_start@@Base+0x5788>
   19d34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19d38:	str	r3, [fp, #-32]	; 0xffffffe0
   19d3c:	sub	r3, fp, #41	; 0x29
   19d40:	str	r3, [sp]
   19d44:	ldr	r3, [pc, #488]	; 19f34 <_start@@Base+0x593c>
   19d48:	add	r3, pc, r3
   19d4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19d50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19d54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19d58:	bl	171c4 <_start@@Base+0x2bcc>
   19d5c:	str	r0, [fp, #-52]	; 0xffffffcc
   19d60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19d64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d68:	cmp	r2, r3
   19d6c:	beq	19ef4 <_start@@Base+0x58fc>
   19d70:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19d74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19d78:	cmp	r2, r3
   19d7c:	beq	19ef4 <_start@@Base+0x58fc>
   19d80:	ldrsb	r3, [fp, #-41]	; 0xffffffd7
   19d84:	mov	r1, r3
   19d88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19d8c:	bl	148c8 <_start@@Base+0x2d0>
   19d90:	b	19ec8 <_start@@Base+0x58d0>
   19d94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19d98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19d9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19da0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   19da4:	str	r0, [fp, #-52]	; 0xffffffcc
   19da8:	b	19ec8 <_start@@Base+0x58d0>
   19dac:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19db0:	mov	r0, #0
   19db4:	mov	r1, #-16777216	; 0xff000000
   19db8:	and	r6, r2, r0
   19dbc:	and	r7, r3, r1
   19dc0:	cmp	r7, #1627389952	; 0x61000000
   19dc4:	cmpeq	r6, #0
   19dc8:	bne	19eb4 <_start@@Base+0x58bc>
   19dcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19dd0:	str	r3, [fp, #-32]	; 0xffffffe0
   19dd4:	mov	r3, #1
   19dd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19ddc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19de0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19de4:	bl	15600 <_start@@Base+0x1008>
   19de8:	str	r0, [fp, #-52]	; 0xffffffcc
   19dec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19df0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19df4:	cmp	r2, r3
   19df8:	beq	19e9c <_start@@Base+0x58a4>
   19dfc:	mov	r3, #0
   19e00:	strh	r3, [fp, #-44]	; 0xffffffd4
   19e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e08:	str	r3, [fp, #-36]	; 0xffffffdc
   19e0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19e10:	str	r3, [fp, #-32]	; 0xffffffe0
   19e14:	sub	r3, fp, #44	; 0x2c
   19e18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19e1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19e20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19e24:	bl	16384 <_start@@Base+0x1d8c>
   19e28:	str	r0, [fp, #-52]	; 0xffffffcc
   19e2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19e30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19e34:	cmp	r2, r3
   19e38:	bne	19e88 <_start@@Base+0x5890>
   19e3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19e40:	str	r3, [fp, #-32]	; 0xffffffe0
   19e44:	sub	r3, fp, #44	; 0x2c
   19e48:	str	r3, [sp]
   19e4c:	ldr	r3, [pc, #228]	; 19f38 <_start@@Base+0x5940>
   19e50:	add	r3, pc, r3
   19e54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19e58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19e5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19e60:	bl	1701c <_start@@Base+0x2a24>
   19e64:	str	r0, [fp, #-52]	; 0xffffffcc
   19e68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e70:	cmp	r2, r3
   19e74:	beq	19efc <_start@@Base+0x5904>
   19e78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19e7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19e80:	cmp	r2, r3
   19e84:	beq	19efc <_start@@Base+0x5904>
   19e88:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   19e8c:	mov	r1, r3
   19e90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e94:	bl	1493c <_start@@Base+0x344>
   19e98:	b	19ec8 <_start@@Base+0x58d0>
   19e9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19ea0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ea4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19ea8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   19eac:	str	r0, [fp, #-52]	; 0xffffffcc
   19eb0:	b	19ec8 <_start@@Base+0x58d0>
   19eb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19eb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ebc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19ec0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   19ec4:	str	r0, [fp, #-52]	; 0xffffffcc
   19ec8:	sub	r3, fp, #40	; 0x28
   19ecc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19ed0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ed4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19ed8:	bl	15224 <_start@@Base+0xc2c>
   19edc:	str	r0, [fp, #-52]	; 0xffffffcc
   19ee0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ee4:	cmp	r3, #0
   19ee8:	bne	19c7c <_start@@Base+0x5684>
   19eec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19ef0:	b	19f18 <_start@@Base+0x5920>
   19ef4:	nop	{0}
   19ef8:	b	19f00 <_start@@Base+0x5908>
   19efc:	nop	{0}
   19f00:	mov	r3, #33	; 0x21
   19f04:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19f08:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19f0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19f10:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   19f14:	mov	r3, r0
   19f18:	mov	r0, r3
   19f1c:	sub	sp, fp, #20
   19f20:	ldrd	r4, [sp]
   19f24:	ldrd	r6, [sp, #8]
   19f28:	ldr	fp, [sp, #16]
   19f2c:	add	sp, sp, #20
   19f30:	pop	{pc}		; (ldr pc, [sp], #4)
   19f34:	andeq	fp, r4, r0, asr #6
   19f38:	andeq	fp, r4, r4, asr #4
   19f3c:	str	fp, [sp, #-8]!
   19f40:	str	lr, [sp, #4]
   19f44:	add	fp, sp, #4
   19f48:	sub	sp, sp, #24
   19f4c:	str	r0, [fp, #-16]
   19f50:	str	r1, [fp, #-20]	; 0xffffffec
   19f54:	str	r2, [fp, #-24]	; 0xffffffe8
   19f58:	str	r3, [fp, #-28]	; 0xffffffe4
   19f5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f60:	mov	r2, #0
   19f64:	str	r2, [r3]
   19f68:	ldr	r3, [fp, #-16]
   19f6c:	ldr	r3, [r3]
   19f70:	mov	r2, #2
   19f74:	mov	r1, #4
   19f78:	mov	r0, r3
   19f7c:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   19f80:	str	r0, [fp, #-8]
   19f84:	ldr	r3, [fp, #-8]
   19f88:	cmp	r3, #0
   19f8c:	beq	19fec <_start@@Base+0x59f4>
   19f90:	ldr	r3, [fp, #-8]
   19f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19f98:	ldr	r1, [fp, #-20]	; 0xffffffec
   19f9c:	ldr	r0, [fp, #-16]
   19fa0:	bl	19c38 <_start@@Base+0x5640>
   19fa4:	str	r0, [fp, #-20]	; 0xffffffec
   19fa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19fac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19fb0:	cmp	r2, r3
   19fb4:	beq	19ff4 <_start@@Base+0x59fc>
   19fb8:	ldr	r3, [fp, #-16]
   19fbc:	ldr	r3, [r3]
   19fc0:	mov	r0, r3
   19fc4:	bl	2f19c <flatcc_builder_end_struct@@Base>
   19fc8:	mov	r2, r0
   19fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19fd0:	str	r2, [r3]
   19fd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19fd8:	ldr	r3, [r3]
   19fdc:	cmp	r3, #0
   19fe0:	beq	19ff4 <_start@@Base+0x59fc>
   19fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fe8:	b	1a010 <_start@@Base+0x5a18>
   19fec:	nop	{0}
   19ff0:	b	19ff8 <_start@@Base+0x5a00>
   19ff4:	nop	{0}
   19ff8:	mov	r3, #33	; 0x21
   19ffc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a000:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a004:	ldr	r0, [fp, #-16]
   1a008:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1a00c:	mov	r3, r0
   1a010:	mov	r0, r3
   1a014:	sub	sp, fp, #4
   1a018:	ldr	fp, [sp]
   1a01c:	add	sp, sp, #4
   1a020:	pop	{pc}		; (ldr pc, [sp], #4)
   1a024:	str	fp, [sp, #-8]!
   1a028:	str	lr, [sp, #4]
   1a02c:	add	fp, sp, #4
   1a030:	sub	sp, sp, #24
   1a034:	str	r0, [fp, #-16]
   1a038:	str	r1, [fp, #-20]	; 0xffffffec
   1a03c:	str	r2, [fp, #-24]	; 0xffffffe8
   1a040:	str	r3, [fp, #-28]	; 0xffffffe4
   1a044:	sub	r3, fp, #8
   1a048:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a04c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a050:	ldr	r0, [fp, #-16]
   1a054:	bl	15130 <_start@@Base+0xb38>
   1a058:	str	r0, [fp, #-20]	; 0xffffffec
   1a05c:	b	1a08c <_start@@Base+0x5a94>
   1a060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a064:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a068:	ldr	r0, [fp, #-16]
   1a06c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1a070:	str	r0, [fp, #-20]	; 0xffffffec
   1a074:	sub	r3, fp, #8
   1a078:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a07c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a080:	ldr	r0, [fp, #-16]
   1a084:	bl	15224 <_start@@Base+0xc2c>
   1a088:	str	r0, [fp, #-20]	; 0xffffffec
   1a08c:	ldr	r3, [fp, #-8]
   1a090:	cmp	r3, #0
   1a094:	bne	1a060 <_start@@Base+0x5a68>
   1a098:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a09c:	mov	r0, r3
   1a0a0:	sub	sp, fp, #4
   1a0a4:	ldr	fp, [sp]
   1a0a8:	add	sp, sp, #4
   1a0ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0b0:	str	fp, [sp, #-8]!
   1a0b4:	str	lr, [sp, #4]
   1a0b8:	add	fp, sp, #4
   1a0bc:	sub	sp, sp, #24
   1a0c0:	str	r0, [fp, #-16]
   1a0c4:	str	r1, [fp, #-20]	; 0xffffffec
   1a0c8:	str	r2, [fp, #-24]	; 0xffffffe8
   1a0cc:	str	r3, [fp, #-28]	; 0xffffffe4
   1a0d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a0d4:	mov	r2, #0
   1a0d8:	str	r2, [r3]
   1a0dc:	ldr	r3, [fp, #-16]
   1a0e0:	ldr	r3, [r3]
   1a0e4:	mov	r2, #1
   1a0e8:	mov	r1, #0
   1a0ec:	mov	r0, r3
   1a0f0:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   1a0f4:	str	r0, [fp, #-8]
   1a0f8:	ldr	r3, [fp, #-8]
   1a0fc:	cmp	r3, #0
   1a100:	beq	1a160 <_start@@Base+0x5b68>
   1a104:	ldr	r3, [fp, #-8]
   1a108:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a10c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a110:	ldr	r0, [fp, #-16]
   1a114:	bl	1a024 <_start@@Base+0x5a2c>
   1a118:	str	r0, [fp, #-20]	; 0xffffffec
   1a11c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a124:	cmp	r2, r3
   1a128:	beq	1a168 <_start@@Base+0x5b70>
   1a12c:	ldr	r3, [fp, #-16]
   1a130:	ldr	r3, [r3]
   1a134:	mov	r0, r3
   1a138:	bl	2f19c <flatcc_builder_end_struct@@Base>
   1a13c:	mov	r2, r0
   1a140:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a144:	str	r2, [r3]
   1a148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a14c:	ldr	r3, [r3]
   1a150:	cmp	r3, #0
   1a154:	beq	1a168 <_start@@Base+0x5b70>
   1a158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a15c:	b	1a184 <_start@@Base+0x5b8c>
   1a160:	nop	{0}
   1a164:	b	1a16c <_start@@Base+0x5b74>
   1a168:	nop	{0}
   1a16c:	mov	r3, #33	; 0x21
   1a170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a174:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a178:	ldr	r0, [fp, #-16]
   1a17c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1a180:	mov	r3, r0
   1a184:	mov	r0, r3
   1a188:	sub	sp, fp, #4
   1a18c:	ldr	fp, [sp]
   1a190:	add	sp, sp, #4
   1a194:	pop	{pc}		; (ldr pc, [sp], #4)
   1a198:	str	fp, [sp, #-8]!
   1a19c:	str	lr, [sp, #4]
   1a1a0:	add	fp, sp, #4
   1a1a4:	sub	sp, sp, #24
   1a1a8:	str	r0, [fp, #-16]
   1a1ac:	str	r1, [fp, #-20]	; 0xffffffec
   1a1b0:	str	r2, [fp, #-24]	; 0xffffffe8
   1a1b4:	str	r3, [fp, #-28]	; 0xffffffe4
   1a1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a1bc:	mov	r2, #0
   1a1c0:	str	r2, [r3]
   1a1c4:	ldr	r3, [fp, #-16]
   1a1c8:	ldr	r3, [r3]
   1a1cc:	mov	r1, #0
   1a1d0:	mov	r0, r3
   1a1d4:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1a1d8:	mov	r3, r0
   1a1dc:	cmp	r3, #0
   1a1e0:	bne	1a290 <_start@@Base+0x5c98>
   1a1e4:	sub	r3, fp, #8
   1a1e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a1ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a1f0:	ldr	r0, [fp, #-16]
   1a1f4:	bl	15130 <_start@@Base+0xb38>
   1a1f8:	str	r0, [fp, #-20]	; 0xffffffec
   1a1fc:	b	1a240 <_start@@Base+0x5c48>
   1a200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a204:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a208:	ldr	r0, [fp, #-16]
   1a20c:	bl	14cf4 <_start@@Base+0x6fc>
   1a210:	str	r0, [fp, #-20]	; 0xffffffec
   1a214:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a218:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a21c:	ldr	r0, [fp, #-16]
   1a220:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1a224:	str	r0, [fp, #-20]	; 0xffffffec
   1a228:	sub	r3, fp, #8
   1a22c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a230:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a234:	ldr	r0, [fp, #-16]
   1a238:	bl	15224 <_start@@Base+0xc2c>
   1a23c:	str	r0, [fp, #-20]	; 0xffffffec
   1a240:	ldr	r3, [fp, #-8]
   1a244:	cmp	r3, #0
   1a248:	bne	1a200 <_start@@Base+0x5c08>
   1a24c:	ldr	r3, [fp, #-16]
   1a250:	ldr	r3, [r3, #20]
   1a254:	cmp	r3, #0
   1a258:	bne	1a298 <_start@@Base+0x5ca0>
   1a25c:	ldr	r3, [fp, #-16]
   1a260:	ldr	r3, [r3]
   1a264:	mov	r0, r3
   1a268:	bl	30b0c <flatcc_builder_end_table@@Base>
   1a26c:	mov	r2, r0
   1a270:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a274:	str	r2, [r3]
   1a278:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a27c:	ldr	r3, [r3]
   1a280:	cmp	r3, #0
   1a284:	beq	1a2a0 <_start@@Base+0x5ca8>
   1a288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a28c:	b	1a2bc <_start@@Base+0x5cc4>
   1a290:	nop	{0}
   1a294:	b	1a2a4 <_start@@Base+0x5cac>
   1a298:	nop	{0}
   1a29c:	b	1a2a4 <_start@@Base+0x5cac>
   1a2a0:	nop	{0}
   1a2a4:	mov	r3, #33	; 0x21
   1a2a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a2ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a2b0:	ldr	r0, [fp, #-16]
   1a2b4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1a2b8:	mov	r3, r0
   1a2bc:	mov	r0, r3
   1a2c0:	sub	sp, fp, #4
   1a2c4:	ldr	fp, [sp]
   1a2c8:	add	sp, sp, #4
   1a2cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2d0:	strd	r4, [sp, #-16]!
   1a2d4:	str	fp, [sp, #8]
   1a2d8:	str	lr, [sp, #12]
   1a2dc:	add	fp, sp, #12
   1a2e0:	sub	sp, sp, #40	; 0x28
   1a2e4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a2e8:	str	r1, [fp, #-44]	; 0xffffffd4
   1a2ec:	str	r2, [fp, #-48]	; 0xffffffd0
   1a2f0:	str	r3, [fp, #-52]	; 0xffffffcc
   1a2f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a2f8:	mov	r2, #0
   1a2fc:	str	r2, [r3]
   1a300:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a304:	ldr	r3, [r3]
   1a308:	mov	r1, #1
   1a30c:	mov	r0, r3
   1a310:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1a314:	mov	r3, r0
   1a318:	cmp	r3, #0
   1a31c:	bne	1a490 <_start@@Base+0x5e98>
   1a320:	sub	r3, fp, #32
   1a324:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a328:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a32c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a330:	bl	15130 <_start@@Base+0xb38>
   1a334:	str	r0, [fp, #-44]	; 0xffffffd4
   1a338:	b	1a440 <_start@@Base+0x5e48>
   1a33c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a340:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a344:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a348:	bl	14cf4 <_start@@Base+0x6fc>
   1a34c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a350:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a354:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a358:	bl	14ffc <_start@@Base+0xa04>
   1a35c:	strd	r0, [fp, #-20]	; 0xffffffec
   1a360:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a364:	mov	r0, #-16777216	; 0xff000000
   1a368:	mvn	r1, #0
   1a36c:	and	r4, r2, r0
   1a370:	and	r5, r3, r1
   1a374:	add	r3, pc, #356	; 0x164
   1a378:	ldrd	r2, [r3]
   1a37c:	cmp	r5, r3
   1a380:	cmpeq	r4, r2
   1a384:	bne	1a414 <_start@@Base+0x5e1c>
   1a388:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a38c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a390:	mov	r3, #5
   1a394:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a39c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3a0:	bl	15600 <_start@@Base+0x1008>
   1a3a4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a3ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a3b0:	cmp	r2, r3
   1a3b4:	beq	1a3fc <_start@@Base+0x5e04>
   1a3b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a3bc:	ldr	r0, [r3]
   1a3c0:	mov	r3, #1
   1a3c4:	mov	r2, #0
   1a3c8:	mov	r1, #0
   1a3cc:	bl	3255c <flatcc_builder_table_add@@Base>
   1a3d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a3d8:	cmp	r3, #0
   1a3dc:	beq	1a498 <_start@@Base+0x5ea0>
   1a3e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a3e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a3e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a3ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3f0:	bl	1a024 <_start@@Base+0x5a2c>
   1a3f4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3f8:	b	1a428 <_start@@Base+0x5e30>
   1a3fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a400:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a404:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a408:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1a40c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a410:	b	1a428 <_start@@Base+0x5e30>
   1a414:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a418:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a41c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a420:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1a424:	str	r0, [fp, #-44]	; 0xffffffd4
   1a428:	sub	r3, fp, #32
   1a42c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a430:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a434:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a438:	bl	15224 <_start@@Base+0xc2c>
   1a43c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a444:	cmp	r3, #0
   1a448:	bne	1a33c <_start@@Base+0x5d44>
   1a44c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a450:	ldr	r3, [r3, #20]
   1a454:	cmp	r3, #0
   1a458:	bne	1a4a0 <_start@@Base+0x5ea8>
   1a45c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a460:	ldr	r3, [r3]
   1a464:	mov	r0, r3
   1a468:	bl	30b0c <flatcc_builder_end_table@@Base>
   1a46c:	mov	r2, r0
   1a470:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a474:	str	r2, [r3]
   1a478:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a47c:	ldr	r3, [r3]
   1a480:	cmp	r3, #0
   1a484:	beq	1a4a8 <_start@@Base+0x5eb0>
   1a488:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a48c:	b	1a4c4 <_start@@Base+0x5ecc>
   1a490:	nop	{0}
   1a494:	b	1a4ac <_start@@Base+0x5eb4>
   1a498:	nop	{0}
   1a49c:	b	1a4ac <_start@@Base+0x5eb4>
   1a4a0:	nop	{0}
   1a4a4:	b	1a4ac <_start@@Base+0x5eb4>
   1a4a8:	nop	{0}
   1a4ac:	mov	r3, #33	; 0x21
   1a4b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a4b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a4b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a4bc:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1a4c0:	mov	r3, r0
   1a4c4:	mov	r0, r3
   1a4c8:	sub	sp, fp, #12
   1a4cc:	ldrd	r4, [sp]
   1a4d0:	ldr	fp, [sp, #8]
   1a4d4:	add	sp, sp, #12
   1a4d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4dc:	nop	{0}
   1a4e0:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   1a4e4:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   1a4e8:	strd	r4, [sp, #-16]!
   1a4ec:	str	fp, [sp, #8]
   1a4f0:	str	lr, [sp, #12]
   1a4f4:	add	fp, sp, #12
   1a4f8:	sub	sp, sp, #48	; 0x30
   1a4fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1a500:	str	r1, [fp, #-44]	; 0xffffffd4
   1a504:	str	r2, [fp, #-48]	; 0xffffffd0
   1a508:	str	r3, [fp, #-52]	; 0xffffffcc
   1a50c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a510:	str	r3, [fp, #-16]
   1a514:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a518:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a51c:	bl	14ffc <_start@@Base+0xa04>
   1a520:	strd	r0, [fp, #-28]	; 0xffffffe4
   1a524:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1a528:	mov	r0, #0
   1a52c:	mov	r1, #-16777216	; 0xff000000
   1a530:	and	r4, r2, r0
   1a534:	and	r5, r3, r1
   1a538:	cmp	r5, #2013265920	; 0x78000000
   1a53c:	cmpeq	r4, #0
   1a540:	bne	1a5a8 <_start@@Base+0x5fb0>
   1a544:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a548:	str	r3, [fp, #-32]	; 0xffffffe0
   1a54c:	ldr	r3, [fp, #8]
   1a550:	str	r3, [sp]
   1a554:	mov	r3, #1
   1a558:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a55c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a560:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a564:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   1a568:	str	r0, [fp, #-44]	; 0xffffffd4
   1a56c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a574:	cmp	r2, r3
   1a578:	beq	1a5a0 <_start@@Base+0x5fa8>
   1a57c:	ldr	r1, [fp, #4]
   1a580:	mov	r2, #0
   1a584:	mov	r3, #0
   1a588:	strd	r2, [r1]
   1a58c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a590:	mov	r2, #0
   1a594:	str	r2, [r3]
   1a598:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a59c:	b	1a5ac <_start@@Base+0x5fb4>
   1a5a0:	ldr	r3, [fp, #-16]
   1a5a4:	b	1a5ac <_start@@Base+0x5fb4>
   1a5a8:	ldr	r3, [fp, #-16]
   1a5ac:	mov	r0, r3
   1a5b0:	sub	sp, fp, #12
   1a5b4:	ldrd	r4, [sp]
   1a5b8:	ldr	fp, [sp, #8]
   1a5bc:	add	sp, sp, #12
   1a5c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a5c8:	strd	r6, [sp, #8]
   1a5cc:	strd	r8, [sp, #16]
   1a5d0:	str	fp, [sp, #24]
   1a5d4:	str	lr, [sp, #28]
   1a5d8:	add	fp, sp, #28
   1a5dc:	sub	sp, sp, #56	; 0x38
   1a5e0:	str	r0, [fp, #-56]	; 0xffffffc8
   1a5e4:	str	r1, [fp, #-60]	; 0xffffffc4
   1a5e8:	str	r2, [fp, #-64]	; 0xffffffc0
   1a5ec:	str	r3, [fp, #-68]	; 0xffffffbc
   1a5f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a5f4:	mov	r2, #0
   1a5f8:	str	r2, [r3]
   1a5fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a600:	ldr	r3, [r3]
   1a604:	mov	r1, #4
   1a608:	mov	r0, r3
   1a60c:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1a610:	mov	r3, r0
   1a614:	cmp	r3, #0
   1a618:	bne	1ac48 <_start@@Base+0x6650>
   1a61c:	sub	r3, fp, #48	; 0x30
   1a620:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a624:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a628:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a62c:	bl	15130 <_start@@Base+0xb38>
   1a630:	str	r0, [fp, #-60]	; 0xffffffc4
   1a634:	b	1abf8 <_start@@Base+0x6600>
   1a638:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a63c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a640:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a644:	bl	14cf4 <_start@@Base+0x6fc>
   1a648:	str	r0, [fp, #-60]	; 0xffffffc4
   1a64c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a650:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a654:	bl	14ffc <_start@@Base+0xa04>
   1a658:	strd	r0, [fp, #-36]	; 0xffffffdc
   1a65c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a660:	mov	r0, #0
   1a664:	movt	r0, #65535	; 0xffff
   1a668:	mvn	r1, #0
   1a66c:	and	r4, r2, r0
   1a670:	and	r5, r3, r1
   1a674:	add	r3, pc, #956	; 0x3bc
   1a678:	ldrd	r2, [r3]
   1a67c:	cmp	r5, r3
   1a680:	cmpeq	r4, r2
   1a684:	bne	1a798 <_start@@Base+0x61a0>
   1a688:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a68c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a690:	mov	r3, #6
   1a694:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a698:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a69c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a6a0:	bl	15600 <_start@@Base+0x1008>
   1a6a4:	str	r0, [fp, #-60]	; 0xffffffc4
   1a6a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a6ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a6b0:	cmp	r2, r3
   1a6b4:	beq	1a8d0 <_start@@Base+0x62d8>
   1a6b8:	mov	r3, #0
   1a6bc:	strb	r3, [fp, #-49]	; 0xffffffcf
   1a6c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a6c4:	str	r3, [fp, #-40]	; 0xffffffd8
   1a6c8:	sub	r3, fp, #49	; 0x31
   1a6cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a6d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a6d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a6d8:	bl	16460 <_start@@Base+0x1e68>
   1a6dc:	str	r0, [fp, #-60]	; 0xffffffc4
   1a6e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a6e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a6e8:	cmp	r2, r3
   1a6ec:	bne	1a73c <_start@@Base+0x6144>
   1a6f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a6f4:	str	r3, [fp, #-40]	; 0xffffffd8
   1a6f8:	sub	r3, fp, #49	; 0x31
   1a6fc:	str	r3, [sp]
   1a700:	ldr	r3, [pc, #840]	; 1aa50 <_start@@Base+0x6458>
   1a704:	add	r3, pc, r3
   1a708:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a70c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a710:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a714:	bl	171c4 <_start@@Base+0x2bcc>
   1a718:	str	r0, [fp, #-60]	; 0xffffffc4
   1a71c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a724:	cmp	r2, r3
   1a728:	beq	1ac50 <_start@@Base+0x6658>
   1a72c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a730:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a734:	cmp	r2, r3
   1a738:	beq	1ac50 <_start@@Base+0x6658>
   1a73c:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
   1a740:	cmp	r3, #2
   1a744:	bne	1a75c <_start@@Base+0x6164>
   1a748:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a74c:	ldr	r3, [r3, #8]
   1a750:	and	r3, r3, #2
   1a754:	cmp	r3, #0
   1a758:	beq	1abdc <_start@@Base+0x65e4>
   1a75c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a760:	ldr	r0, [r3]
   1a764:	mov	r3, #1
   1a768:	mov	r2, #1
   1a76c:	mov	r1, #1
   1a770:	bl	3255c <flatcc_builder_table_add@@Base>
   1a774:	str	r0, [fp, #-44]	; 0xffffffd4
   1a778:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a77c:	cmp	r3, #0
   1a780:	beq	1ac58 <_start@@Base+0x6660>
   1a784:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
   1a788:	mov	r1, r3
   1a78c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a790:	bl	148c8 <_start@@Base+0x2d0>
   1a794:	b	1abdc <_start@@Base+0x65e4>
   1a798:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a79c:	mov	r0, #-16777216	; 0xff000000
   1a7a0:	mvn	r1, #0
   1a7a4:	and	r6, r2, r0
   1a7a8:	and	r7, r3, r1
   1a7ac:	add	r3, pc, #652	; 0x28c
   1a7b0:	ldrd	r2, [r3]
   1a7b4:	cmp	r7, r3
   1a7b8:	cmpeq	r6, r2
   1a7bc:	bne	1a8d8 <_start@@Base+0x62e0>
   1a7c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a7c4:	str	r3, [fp, #-40]	; 0xffffffd8
   1a7c8:	mov	r3, #5
   1a7cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a7d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a7d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a7d8:	bl	15600 <_start@@Base+0x1008>
   1a7dc:	str	r0, [fp, #-60]	; 0xffffffc4
   1a7e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a7e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a7e8:	cmp	r2, r3
   1a7ec:	beq	1a8e0 <_start@@Base+0x62e8>
   1a7f0:	mov	r3, #0
   1a7f4:	strb	r3, [fp, #-50]	; 0xffffffce
   1a7f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a7fc:	str	r3, [fp, #-40]	; 0xffffffd8
   1a800:	sub	r3, fp, #50	; 0x32
   1a804:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a808:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a80c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a810:	bl	16460 <_start@@Base+0x1e68>
   1a814:	str	r0, [fp, #-60]	; 0xffffffc4
   1a818:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a81c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a820:	cmp	r2, r3
   1a824:	bne	1a874 <_start@@Base+0x627c>
   1a828:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a82c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a830:	sub	r3, fp, #50	; 0x32
   1a834:	str	r3, [sp]
   1a838:	ldr	r3, [pc, #532]	; 1aa54 <_start@@Base+0x645c>
   1a83c:	add	r3, pc, r3
   1a840:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a844:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a848:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a84c:	bl	171c4 <_start@@Base+0x2bcc>
   1a850:	str	r0, [fp, #-60]	; 0xffffffc4
   1a854:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a858:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a85c:	cmp	r2, r3
   1a860:	beq	1ac60 <_start@@Base+0x6668>
   1a864:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a868:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a86c:	cmp	r2, r3
   1a870:	beq	1ac60 <_start@@Base+0x6668>
   1a874:	ldrsb	r3, [fp, #-50]	; 0xffffffce
   1a878:	cmp	r3, #2
   1a87c:	bne	1a894 <_start@@Base+0x629c>
   1a880:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a884:	ldr	r3, [r3, #8]
   1a888:	and	r3, r3, #2
   1a88c:	cmp	r3, #0
   1a890:	beq	1abdc <_start@@Base+0x65e4>
   1a894:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a898:	ldr	r0, [r3]
   1a89c:	mov	r3, #1
   1a8a0:	mov	r2, #1
   1a8a4:	mov	r1, #0
   1a8a8:	bl	3255c <flatcc_builder_table_add@@Base>
   1a8ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a8b4:	cmp	r3, #0
   1a8b8:	beq	1ac68 <_start@@Base+0x6670>
   1a8bc:	ldrsb	r3, [fp, #-50]	; 0xffffffce
   1a8c0:	mov	r1, r3
   1a8c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8c8:	bl	148c8 <_start@@Base+0x2d0>
   1a8cc:	b	1abdc <_start@@Base+0x65e4>
   1a8d0:	nop	{0}
   1a8d4:	b	1a8e4 <_start@@Base+0x62ec>
   1a8d8:	nop	{0}
   1a8dc:	b	1a8e4 <_start@@Base+0x62ec>
   1a8e0:	nop	{0}
   1a8e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a8e8:	mov	r0, #0
   1a8ec:	mvn	r1, #255	; 0xff
   1a8f0:	and	r8, r2, r0
   1a8f4:	and	r9, r3, r1
   1a8f8:	add	r3, pc, #328	; 0x148
   1a8fc:	ldrd	r2, [r3]
   1a900:	cmp	r9, r3
   1a904:	cmpeq	r8, r2
   1a908:	bne	1aa60 <_start@@Base+0x6468>
   1a90c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a910:	str	r3, [fp, #-40]	; 0xffffffd8
   1a914:	mov	r3, #3
   1a918:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a91c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a920:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a924:	bl	15600 <_start@@Base+0x1008>
   1a928:	str	r0, [fp, #-60]	; 0xffffffc4
   1a92c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a930:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a934:	cmp	r2, r3
   1a938:	beq	1aa1c <_start@@Base+0x6424>
   1a93c:	mov	r3, #0
   1a940:	strb	r3, [fp, #-51]	; 0xffffffcd
   1a944:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a948:	str	r3, [fp, #-40]	; 0xffffffd8
   1a94c:	sub	r3, fp, #51	; 0x33
   1a950:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a954:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a958:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a95c:	bl	160ec <_start@@Base+0x1af4>
   1a960:	str	r0, [fp, #-60]	; 0xffffffc4
   1a964:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a968:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a96c:	cmp	r2, r3
   1a970:	bne	1a9c0 <_start@@Base+0x63c8>
   1a974:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a978:	str	r3, [fp, #-40]	; 0xffffffd8
   1a97c:	sub	r3, fp, #51	; 0x33
   1a980:	str	r3, [sp]
   1a984:	ldr	r3, [pc, #204]	; 1aa58 <_start@@Base+0x6460>
   1a988:	add	r3, pc, r3
   1a98c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a990:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a994:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a998:	bl	16b3c <_start@@Base+0x2544>
   1a99c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a9a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a9a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9a8:	cmp	r2, r3
   1a9ac:	beq	1ac70 <_start@@Base+0x6678>
   1a9b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a9b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a9b8:	cmp	r2, r3
   1a9bc:	beq	1ac70 <_start@@Base+0x6678>
   1a9c0:	ldrb	r3, [fp, #-51]	; 0xffffffcd
   1a9c4:	cmp	r3, #2
   1a9c8:	bne	1a9e0 <_start@@Base+0x63e8>
   1a9cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a9d0:	ldr	r3, [r3, #8]
   1a9d4:	and	r3, r3, #2
   1a9d8:	cmp	r3, #0
   1a9dc:	beq	1abe0 <_start@@Base+0x65e8>
   1a9e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a9e4:	ldr	r0, [r3]
   1a9e8:	mov	r3, #1
   1a9ec:	mov	r2, #1
   1a9f0:	mov	r1, #3
   1a9f4:	bl	3255c <flatcc_builder_table_add@@Base>
   1a9f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aa00:	cmp	r3, #0
   1aa04:	beq	1ac78 <_start@@Base+0x6680>
   1aa08:	ldrb	r3, [fp, #-51]	; 0xffffffcd
   1aa0c:	mov	r1, r3
   1aa10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa14:	bl	14710 <_start@@Base+0x118>
   1aa18:	b	1abe0 <_start@@Base+0x65e8>
   1aa1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1aa20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1aa24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aa28:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1aa2c:	str	r0, [fp, #-60]	; 0xffffffc4
   1aa30:	b	1abe0 <_start@@Base+0x65e8>
   1aa34:	nop	{0}
   1aa38:	eorsvc	r0, r2, #0
   1aa3c:	cmnvs	pc, #28416	; 0x6f00
   1aa40:	andvc	r0, r0, #0
   1aa44:	cmnvs	pc, #28416	; 0x6f00
   1aa48:	andeq	r0, r0, r0
   1aa4c:	strbvc	r3, [r3, #-512]!	; 0xfffffe00
   1aa50:	muleq	r4, ip, r9
   1aa54:	andeq	sl, r4, r4, ror r8
   1aa58:	andeq	sl, r4, r8, lsr r7
   1aa5c:			; <UNDEFINED> instruction: 0x0004a5b4
   1aa60:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1aa64:	mov	r0, #0
   1aa68:	mov	r1, #0
   1aa6c:	movt	r1, #65535	; 0xffff
   1aa70:	and	ip, r2, r0
   1aa74:	str	ip, [fp, #-76]	; 0xffffffb4
   1aa78:	and	r3, r3, r1
   1aa7c:	str	r3, [fp, #-72]	; 0xffffffb8
   1aa80:	mov	r2, #0
   1aa84:	mov	r3, #0
   1aa88:	movt	r3, #30051	; 0x7563
   1aa8c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1aa90:	cmp	r1, r3
   1aa94:	cmpeq	r0, r2
   1aa98:	bne	1abc4 <_start@@Base+0x65cc>
   1aa9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aaa0:	str	r3, [fp, #-40]	; 0xffffffd8
   1aaa4:	mov	r3, #2
   1aaa8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1aaac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aab0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aab4:	bl	15600 <_start@@Base+0x1008>
   1aab8:	str	r0, [fp, #-60]	; 0xffffffc4
   1aabc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aac0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aac4:	cmp	r2, r3
   1aac8:	beq	1abac <_start@@Base+0x65b4>
   1aacc:	mov	r3, #0
   1aad0:	strb	r3, [fp, #-52]	; 0xffffffcc
   1aad4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aad8:	str	r3, [fp, #-40]	; 0xffffffd8
   1aadc:	sub	r3, fp, #52	; 0x34
   1aae0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1aae4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aae8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aaec:	bl	160ec <_start@@Base+0x1af4>
   1aaf0:	str	r0, [fp, #-60]	; 0xffffffc4
   1aaf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aaf8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aafc:	cmp	r2, r3
   1ab00:	bne	1ab50 <_start@@Base+0x6558>
   1ab04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ab08:	str	r3, [fp, #-40]	; 0xffffffd8
   1ab0c:	sub	r3, fp, #52	; 0x34
   1ab10:	str	r3, [sp]
   1ab14:	ldr	r3, [pc, #-192]	; 1aa5c <_start@@Base+0x6464>
   1ab18:	add	r3, pc, r3
   1ab1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ab20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ab28:	bl	16b3c <_start@@Base+0x2544>
   1ab2c:	str	r0, [fp, #-60]	; 0xffffffc4
   1ab30:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ab34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab38:	cmp	r2, r3
   1ab3c:	beq	1ac80 <_start@@Base+0x6688>
   1ab40:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ab44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ab48:	cmp	r2, r3
   1ab4c:	beq	1ac80 <_start@@Base+0x6688>
   1ab50:	ldrb	r3, [fp, #-52]	; 0xffffffcc
   1ab54:	cmp	r3, #2
   1ab58:	bne	1ab70 <_start@@Base+0x6578>
   1ab5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ab60:	ldr	r3, [r3, #8]
   1ab64:	and	r3, r3, #2
   1ab68:	cmp	r3, #0
   1ab6c:	beq	1abe0 <_start@@Base+0x65e8>
   1ab70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ab74:	ldr	r0, [r3]
   1ab78:	mov	r3, #1
   1ab7c:	mov	r2, #1
   1ab80:	mov	r1, #2
   1ab84:	bl	3255c <flatcc_builder_table_add@@Base>
   1ab88:	str	r0, [fp, #-44]	; 0xffffffd4
   1ab8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab90:	cmp	r3, #0
   1ab94:	beq	1ac88 <_start@@Base+0x6690>
   1ab98:	ldrb	r3, [fp, #-52]	; 0xffffffcc
   1ab9c:	mov	r1, r3
   1aba0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aba4:	bl	14710 <_start@@Base+0x118>
   1aba8:	b	1abe0 <_start@@Base+0x65e8>
   1abac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1abb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1abb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1abb8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1abbc:	str	r0, [fp, #-60]	; 0xffffffc4
   1abc0:	b	1abe0 <_start@@Base+0x65e8>
   1abc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1abc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1abcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1abd0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1abd4:	str	r0, [fp, #-60]	; 0xffffffc4
   1abd8:	b	1abe0 <_start@@Base+0x65e8>
   1abdc:	nop	{0}
   1abe0:	sub	r3, fp, #48	; 0x30
   1abe4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1abe8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1abec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1abf0:	bl	15224 <_start@@Base+0xc2c>
   1abf4:	str	r0, [fp, #-60]	; 0xffffffc4
   1abf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1abfc:	cmp	r3, #0
   1ac00:	bne	1a638 <_start@@Base+0x6040>
   1ac04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ac08:	ldr	r3, [r3, #20]
   1ac0c:	cmp	r3, #0
   1ac10:	bne	1ac90 <_start@@Base+0x6698>
   1ac14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ac18:	ldr	r3, [r3]
   1ac1c:	mov	r0, r3
   1ac20:	bl	30b0c <flatcc_builder_end_table@@Base>
   1ac24:	mov	r2, r0
   1ac28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ac2c:	str	r2, [r3]
   1ac30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ac34:	ldr	r3, [r3]
   1ac38:	cmp	r3, #0
   1ac3c:	beq	1ac98 <_start@@Base+0x66a0>
   1ac40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ac44:	b	1acb4 <_start@@Base+0x66bc>
   1ac48:	nop	{0}
   1ac4c:	b	1ac9c <_start@@Base+0x66a4>
   1ac50:	nop	{0}
   1ac54:	b	1ac9c <_start@@Base+0x66a4>
   1ac58:	nop	{0}
   1ac5c:	b	1ac9c <_start@@Base+0x66a4>
   1ac60:	nop	{0}
   1ac64:	b	1ac9c <_start@@Base+0x66a4>
   1ac68:	nop	{0}
   1ac6c:	b	1ac9c <_start@@Base+0x66a4>
   1ac70:	nop	{0}
   1ac74:	b	1ac9c <_start@@Base+0x66a4>
   1ac78:	nop	{0}
   1ac7c:	b	1ac9c <_start@@Base+0x66a4>
   1ac80:	nop	{0}
   1ac84:	b	1ac9c <_start@@Base+0x66a4>
   1ac88:	nop	{0}
   1ac8c:	b	1ac9c <_start@@Base+0x66a4>
   1ac90:	nop	{0}
   1ac94:	b	1ac9c <_start@@Base+0x66a4>
   1ac98:	nop	{0}
   1ac9c:	mov	r3, #33	; 0x21
   1aca0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1aca4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1aca8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1acac:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1acb0:	mov	r3, r0
   1acb4:	mov	r0, r3
   1acb8:	sub	sp, fp, #28
   1acbc:	ldrd	r4, [sp]
   1acc0:	ldrd	r6, [sp, #8]
   1acc4:	ldrd	r8, [sp, #16]
   1acc8:	ldr	fp, [sp, #24]
   1accc:	add	sp, sp, #28
   1acd0:	pop	{pc}		; (ldr pc, [sp], #4)
   1acd4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1acd8:	strd	r6, [sp, #8]
   1acdc:	strd	r8, [sp, #16]
   1ace0:	str	fp, [sp, #24]
   1ace4:	str	lr, [sp, #28]
   1ace8:	add	fp, sp, #28
   1acec:	sub	sp, sp, #112	; 0x70
   1acf0:	str	r0, [fp, #-96]	; 0xffffffa0
   1acf4:	str	r1, [fp, #-100]	; 0xffffff9c
   1acf8:	str	r2, [fp, #-104]	; 0xffffff98
   1acfc:	str	r3, [fp, #-108]	; 0xffffff94
   1ad00:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ad04:	mov	r2, #0
   1ad08:	str	r2, [r3]
   1ad0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ad10:	ldr	r3, [r3]
   1ad14:	mov	r1, #6
   1ad18:	mov	r0, r3
   1ad1c:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1ad20:	mov	r3, r0
   1ad24:	cmp	r3, #0
   1ad28:	bne	1b638 <_start@@Base+0x7040>
   1ad2c:	sub	r3, fp, #48	; 0x30
   1ad30:	ldr	r2, [fp, #-104]	; 0xffffff98
   1ad34:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1ad38:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ad3c:	bl	15130 <_start@@Base+0xb38>
   1ad40:	str	r0, [fp, #-100]	; 0xffffff9c
   1ad44:	b	1b5e8 <_start@@Base+0x6ff0>
   1ad48:	ldr	r2, [fp, #-104]	; 0xffffff98
   1ad4c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1ad50:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ad54:	bl	14cf4 <_start@@Base+0x6fc>
   1ad58:	str	r0, [fp, #-100]	; 0xffffff9c
   1ad5c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1ad60:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ad64:	bl	14ffc <_start@@Base+0xa04>
   1ad68:	strd	r0, [fp, #-36]	; 0xffffffdc
   1ad6c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ad70:	add	r3, pc, #944	; 0x3b0
   1ad74:	ldrd	r2, [r3]
   1ad78:	cmp	r1, r3
   1ad7c:	cmpeq	r0, r2
   1ad80:	bhi	1ae54 <_start@@Base+0x685c>
   1ad84:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ad88:	mov	r2, #0
   1ad8c:	movt	r2, #65535	; 0xffff
   1ad90:	mvn	r3, #0
   1ad94:	and	r4, r0, r2
   1ad98:	and	r5, r1, r3
   1ad9c:	add	r3, pc, #908	; 0x38c
   1ada0:	ldrd	r2, [r3]
   1ada4:	cmp	r5, r3
   1ada8:	cmpeq	r4, r2
   1adac:	bne	1ae3c <_start@@Base+0x6844>
   1adb0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1adb4:	str	r3, [fp, #-40]	; 0xffffffd8
   1adb8:	mov	r3, #6
   1adbc:	ldr	r2, [fp, #-104]	; 0xffffff98
   1adc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1adc4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1adc8:	bl	15600 <_start@@Base+0x1008>
   1adcc:	str	r0, [fp, #-100]	; 0xffffff9c
   1add0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1add4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1add8:	cmp	r2, r3
   1addc:	beq	1ae24 <_start@@Base+0x682c>
   1ade0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ade4:	ldr	r0, [r3]
   1ade8:	mov	r3, #1
   1adec:	mov	r2, #0
   1adf0:	mov	r1, #0
   1adf4:	bl	3255c <flatcc_builder_table_add@@Base>
   1adf8:	str	r0, [fp, #-44]	; 0xffffffd4
   1adfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ae00:	cmp	r3, #0
   1ae04:	beq	1b640 <_start@@Base+0x7048>
   1ae08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ae0c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1ae10:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1ae14:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ae18:	bl	18500 <_start@@Base+0x3f08>
   1ae1c:	str	r0, [fp, #-100]	; 0xffffff9c
   1ae20:	b	1b5d0 <_start@@Base+0x6fd8>
   1ae24:	ldr	r2, [fp, #-104]	; 0xffffff98
   1ae28:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1ae2c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ae30:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ae34:	str	r0, [fp, #-100]	; 0xffffff9c
   1ae38:	b	1b5d0 <_start@@Base+0x6fd8>
   1ae3c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1ae40:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1ae44:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ae48:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ae4c:	str	r0, [fp, #-100]	; 0xffffff9c
   1ae50:	b	1b5d0 <_start@@Base+0x6fd8>
   1ae54:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ae58:	add	r3, pc, #728	; 0x2d8
   1ae5c:	ldrd	r2, [r3]
   1ae60:	cmp	r1, r3
   1ae64:	cmpeq	r0, r2
   1ae68:	bhi	1b158 <_start@@Base+0x6b60>
   1ae6c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ae70:	mvn	r2, #255	; 0xff
   1ae74:	mvn	r3, #0
   1ae78:	and	r6, r0, r2
   1ae7c:	and	r7, r1, r3
   1ae80:	add	r3, pc, #696	; 0x2b8
   1ae84:	ldrd	r2, [r3]
   1ae88:	cmp	r7, r3
   1ae8c:	cmpeq	r6, r2
   1ae90:	bne	1afbc <_start@@Base+0x69c4>
   1ae94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ae98:	str	r3, [fp, #-40]	; 0xffffffd8
   1ae9c:	mov	r3, #7
   1aea0:	ldr	r2, [fp, #-104]	; 0xffffff98
   1aea4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aea8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1aeac:	bl	15600 <_start@@Base+0x1008>
   1aeb0:	str	r0, [fp, #-100]	; 0xffffff9c
   1aeb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aeb8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1aebc:	cmp	r2, r3
   1aec0:	beq	1afa4 <_start@@Base+0x69ac>
   1aec4:	mov	r2, #0
   1aec8:	mov	r3, #0
   1aecc:	strd	r2, [fp, #-60]	; 0xffffffc4
   1aed0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1aed4:	str	r3, [fp, #-40]	; 0xffffffd8
   1aed8:	sub	r3, fp, #60	; 0x3c
   1aedc:	ldr	r2, [fp, #-104]	; 0xffffff98
   1aee0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aee4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1aee8:	bl	161c8 <_start@@Base+0x1bd0>
   1aeec:	str	r0, [fp, #-100]	; 0xffffff9c
   1aef0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aef4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1aef8:	cmp	r2, r3
   1aefc:	bne	1af4c <_start@@Base+0x6954>
   1af00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1af04:	str	r3, [fp, #-40]	; 0xffffffd8
   1af08:	sub	r3, fp, #60	; 0x3c
   1af0c:	str	r3, [sp]
   1af10:	ldr	r3, [pc, #568]	; 1b150 <_start@@Base+0x6b58>
   1af14:	add	r3, pc, r3
   1af18:	ldr	r2, [fp, #-104]	; 0xffffff98
   1af1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1af20:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1af24:	bl	16cd8 <_start@@Base+0x26e0>
   1af28:	str	r0, [fp, #-100]	; 0xffffff9c
   1af2c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1af30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1af34:	cmp	r2, r3
   1af38:	beq	1b648 <_start@@Base+0x7050>
   1af3c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1af40:	ldr	r3, [fp, #-104]	; 0xffffff98
   1af44:	cmp	r2, r3
   1af48:	beq	1b648 <_start@@Base+0x7050>
   1af4c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1af50:	orrs	r3, r2, r3
   1af54:	bne	1af6c <_start@@Base+0x6974>
   1af58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1af5c:	ldr	r3, [r3, #8]
   1af60:	and	r3, r3, #2
   1af64:	cmp	r3, #0
   1af68:	beq	1b5d0 <_start@@Base+0x6fd8>
   1af6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1af70:	ldr	r0, [r3]
   1af74:	mov	r3, #8
   1af78:	mov	r2, #8
   1af7c:	mov	r1, #2
   1af80:	bl	3255c <flatcc_builder_table_add@@Base>
   1af84:	str	r0, [fp, #-44]	; 0xffffffd4
   1af88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af8c:	cmp	r3, #0
   1af90:	beq	1b650 <_start@@Base+0x7058>
   1af94:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1af98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af9c:	bl	14a14 <_start@@Base+0x41c>
   1afa0:	b	1b5d0 <_start@@Base+0x6fd8>
   1afa4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1afa8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1afac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1afb0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1afb4:	str	r0, [fp, #-100]	; 0xffffff9c
   1afb8:	b	1b5d0 <_start@@Base+0x6fd8>
   1afbc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1afc0:	mov	r2, #0
   1afc4:	movt	r2, #65535	; 0xffff
   1afc8:	mvn	r3, #0
   1afcc:	and	r8, r0, r2
   1afd0:	and	r9, r1, r3
   1afd4:	add	r3, pc, #364	; 0x16c
   1afd8:	ldrd	r2, [r3]
   1afdc:	cmp	r9, r3
   1afe0:	cmpeq	r8, r2
   1afe4:	bne	1b110 <_start@@Base+0x6b18>
   1afe8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1afec:	str	r3, [fp, #-40]	; 0xffffffd8
   1aff0:	mov	r3, #6
   1aff4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1aff8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1affc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b000:	bl	15600 <_start@@Base+0x1008>
   1b004:	str	r0, [fp, #-100]	; 0xffffff9c
   1b008:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b00c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b010:	cmp	r2, r3
   1b014:	beq	1b0f8 <_start@@Base+0x6b00>
   1b018:	mov	r2, #0
   1b01c:	mov	r3, #0
   1b020:	strd	r2, [fp, #-68]	; 0xffffffbc
   1b024:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b028:	str	r3, [fp, #-40]	; 0xffffffd8
   1b02c:	sub	r3, fp, #68	; 0x44
   1b030:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b034:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b038:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b03c:	bl	161c8 <_start@@Base+0x1bd0>
   1b040:	str	r0, [fp, #-100]	; 0xffffff9c
   1b044:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b048:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b04c:	cmp	r2, r3
   1b050:	bne	1b0a0 <_start@@Base+0x6aa8>
   1b054:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b058:	str	r3, [fp, #-40]	; 0xffffffd8
   1b05c:	sub	r3, fp, #68	; 0x44
   1b060:	str	r3, [sp]
   1b064:	ldr	r3, [pc, #232]	; 1b154 <_start@@Base+0x6b5c>
   1b068:	add	r3, pc, r3
   1b06c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b070:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b074:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b078:	bl	16cd8 <_start@@Base+0x26e0>
   1b07c:	str	r0, [fp, #-100]	; 0xffffff9c
   1b080:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b084:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b088:	cmp	r2, r3
   1b08c:	beq	1b658 <_start@@Base+0x7060>
   1b090:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b094:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b098:	cmp	r2, r3
   1b09c:	beq	1b658 <_start@@Base+0x7060>
   1b0a0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1b0a4:	orrs	r3, r2, r3
   1b0a8:	bne	1b0c0 <_start@@Base+0x6ac8>
   1b0ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b0b0:	ldr	r3, [r3, #8]
   1b0b4:	and	r3, r3, #2
   1b0b8:	cmp	r3, #0
   1b0bc:	beq	1b5d0 <_start@@Base+0x6fd8>
   1b0c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b0c4:	ldr	r0, [r3]
   1b0c8:	mov	r3, #8
   1b0cc:	mov	r2, #8
   1b0d0:	mov	r1, #1
   1b0d4:	bl	3255c <flatcc_builder_table_add@@Base>
   1b0d8:	str	r0, [fp, #-44]	; 0xffffffd4
   1b0dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b0e0:	cmp	r3, #0
   1b0e4:	beq	1b660 <_start@@Base+0x7068>
   1b0e8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1b0ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0f0:	bl	14a14 <_start@@Base+0x41c>
   1b0f4:	b	1b5d0 <_start@@Base+0x6fd8>
   1b0f8:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b0fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b100:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b104:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b108:	str	r0, [fp, #-100]	; 0xffffff9c
   1b10c:	b	1b5d0 <_start@@Base+0x6fd8>
   1b110:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b114:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b118:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b11c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b120:	str	r0, [fp, #-100]	; 0xffffff9c
   1b124:	b	1b5d0 <_start@@Base+0x6fd8>
   1b128:	strdvs	pc, [fp, #-255]!	; 0xffffff01
   1b12c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b130:	cmnvs	ip, r0
   1b134:	strbvs	r6, [ip, -r2, ror #30]!
   1b138:	strdvs	r3, [ip, #-47]!	; 0xffffffd1
   1b13c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b140:	cmnvs	ip, r0, lsl #4
   1b144:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b148:	cmnvs	ip, r0
   1b14c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b150:	andeq	sl, r4, r4, asr #3
   1b154:	andeq	sl, r4, r0, lsl #1
   1b158:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b15c:	add	r3, pc, #732	; 0x2dc
   1b160:	ldrd	r2, [r3]
   1b164:	cmp	r1, r3
   1b168:	cmpeq	r0, r2
   1b16c:	bhi	1b2e4 <_start@@Base+0x6cec>
   1b170:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b174:	mvn	r2, #255	; 0xff
   1b178:	mvn	r3, #0
   1b17c:	and	ip, r0, r2
   1b180:	str	ip, [fp, #-116]	; 0xffffff8c
   1b184:	and	r3, r1, r3
   1b188:	str	r3, [fp, #-112]	; 0xffffff90
   1b18c:	add	r3, pc, #692	; 0x2b4
   1b190:	ldrd	r2, [r3]
   1b194:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1b198:	cmp	r1, r3
   1b19c:	cmpeq	r0, r2
   1b1a0:	bne	1b2cc <_start@@Base+0x6cd4>
   1b1a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b1a8:	str	r3, [fp, #-40]	; 0xffffffd8
   1b1ac:	mov	r3, #7
   1b1b0:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b1b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b1bc:	bl	15600 <_start@@Base+0x1008>
   1b1c0:	str	r0, [fp, #-100]	; 0xffffff9c
   1b1c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b1c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b1cc:	cmp	r2, r3
   1b1d0:	beq	1b2b4 <_start@@Base+0x6cbc>
   1b1d4:	mov	r3, #0
   1b1d8:	str	r3, [fp, #-72]	; 0xffffffb8
   1b1dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b1e0:	str	r3, [fp, #-40]	; 0xffffffd8
   1b1e4:	sub	r3, fp, #72	; 0x48
   1b1e8:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b1ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b1f4:	bl	162a8 <_start@@Base+0x1cb0>
   1b1f8:	str	r0, [fp, #-100]	; 0xffffff9c
   1b1fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b200:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b204:	cmp	r2, r3
   1b208:	bne	1b258 <_start@@Base+0x6c60>
   1b20c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b210:	str	r3, [fp, #-40]	; 0xffffffd8
   1b214:	sub	r3, fp, #72	; 0x48
   1b218:	str	r3, [sp]
   1b21c:	ldr	r3, [pc, #564]	; 1b458 <_start@@Base+0x6e60>
   1b220:	add	r3, pc, r3
   1b224:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b228:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b22c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b230:	bl	16e84 <_start@@Base+0x288c>
   1b234:	str	r0, [fp, #-100]	; 0xffffff9c
   1b238:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b23c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b240:	cmp	r2, r3
   1b244:	beq	1b668 <_start@@Base+0x7070>
   1b248:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b24c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b250:	cmp	r2, r3
   1b254:	beq	1b668 <_start@@Base+0x7070>
   1b258:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b25c:	cmp	r3, #0
   1b260:	bne	1b278 <_start@@Base+0x6c80>
   1b264:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b268:	ldr	r3, [r3, #8]
   1b26c:	and	r3, r3, #2
   1b270:	cmp	r3, #0
   1b274:	beq	1b5d0 <_start@@Base+0x6fd8>
   1b278:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b27c:	ldr	r0, [r3]
   1b280:	mov	r3, #4
   1b284:	mov	r2, #4
   1b288:	mov	r1, #3
   1b28c:	bl	3255c <flatcc_builder_table_add@@Base>
   1b290:	str	r0, [fp, #-44]	; 0xffffffd4
   1b294:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b298:	cmp	r3, #0
   1b29c:	beq	1b670 <_start@@Base+0x7078>
   1b2a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b2a4:	mov	r1, r3
   1b2a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b2ac:	bl	149ac <_start@@Base+0x3b4>
   1b2b0:	b	1b5d0 <_start@@Base+0x6fd8>
   1b2b4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b2b8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b2bc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b2c0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b2c4:	str	r0, [fp, #-100]	; 0xffffff9c
   1b2c8:	b	1b5d0 <_start@@Base+0x6fd8>
   1b2cc:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b2d0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b2d4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b2d8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b2dc:	str	r0, [fp, #-100]	; 0xffffff9c
   1b2e0:	b	1b5d0 <_start@@Base+0x6fd8>
   1b2e4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b2e8:	mvn	r2, #255	; 0xff
   1b2ec:	mvn	r3, #0
   1b2f0:	and	ip, r0, r2
   1b2f4:	str	ip, [fp, #-124]	; 0xffffff84
   1b2f8:	and	r3, r1, r3
   1b2fc:	str	r3, [fp, #-120]	; 0xffffff88
   1b300:	add	r3, pc, #328	; 0x148
   1b304:	ldrd	r2, [r3]
   1b308:	ldrd	r0, [fp, #-124]	; 0xffffff84
   1b30c:	cmp	r1, r3
   1b310:	cmpeq	r0, r2
   1b314:	bne	1b460 <_start@@Base+0x6e68>
   1b318:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b31c:	str	r3, [fp, #-40]	; 0xffffffd8
   1b320:	mov	r3, #7
   1b324:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b328:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b32c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b330:	bl	15600 <_start@@Base+0x1008>
   1b334:	str	r0, [fp, #-100]	; 0xffffff9c
   1b338:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b33c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b340:	cmp	r2, r3
   1b344:	beq	1b428 <_start@@Base+0x6e30>
   1b348:	mov	r2, #0
   1b34c:	mov	r3, #0
   1b350:	strd	r2, [fp, #-84]	; 0xffffffac
   1b354:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b358:	str	r3, [fp, #-40]	; 0xffffffd8
   1b35c:	sub	r3, fp, #84	; 0x54
   1b360:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b364:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b368:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b36c:	bl	161c8 <_start@@Base+0x1bd0>
   1b370:	str	r0, [fp, #-100]	; 0xffffff9c
   1b374:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b378:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b37c:	cmp	r2, r3
   1b380:	bne	1b3d0 <_start@@Base+0x6dd8>
   1b384:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b388:	str	r3, [fp, #-40]	; 0xffffffd8
   1b38c:	sub	r3, fp, #84	; 0x54
   1b390:	str	r3, [sp]
   1b394:	ldr	r3, [pc, #192]	; 1b45c <_start@@Base+0x6e64>
   1b398:	add	r3, pc, r3
   1b39c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b3a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b3a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b3a8:	bl	16cd8 <_start@@Base+0x26e0>
   1b3ac:	str	r0, [fp, #-100]	; 0xffffff9c
   1b3b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b3b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b3b8:	cmp	r2, r3
   1b3bc:	beq	1b678 <_start@@Base+0x7080>
   1b3c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b3c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b3c8:	cmp	r2, r3
   1b3cc:	beq	1b678 <_start@@Base+0x7080>
   1b3d0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1b3d4:	orrs	r3, r2, r3
   1b3d8:	bne	1b3f0 <_start@@Base+0x6df8>
   1b3dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b3e0:	ldr	r3, [r3, #8]
   1b3e4:	and	r3, r3, #2
   1b3e8:	cmp	r3, #0
   1b3ec:	beq	1b5d0 <_start@@Base+0x6fd8>
   1b3f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b3f4:	ldr	r0, [r3]
   1b3f8:	mov	r3, #8
   1b3fc:	mov	r2, #8
   1b400:	mov	r1, #5
   1b404:	bl	3255c <flatcc_builder_table_add@@Base>
   1b408:	str	r0, [fp, #-44]	; 0xffffffd4
   1b40c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b410:	cmp	r3, #0
   1b414:	beq	1b680 <_start@@Base+0x7088>
   1b418:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1b41c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b420:	bl	14a14 <_start@@Base+0x41c>
   1b424:	b	1b5d0 <_start@@Base+0x6fd8>
   1b428:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b42c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b430:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b434:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b438:	str	r0, [fp, #-100]	; 0xffffff9c
   1b43c:	b	1b5d0 <_start@@Base+0x6fd8>
   1b440:	strdvs	r3, [ip, #-63]!	; 0xffffffc1
   1b444:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b448:	cmnvs	ip, r0, lsl #6
   1b44c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b450:	cmnvs	ip, r0, lsl #10
   1b454:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b458:	ldrdeq	r9, [r4], -r8
   1b45c:	andeq	r9, r4, ip, ror #26
   1b460:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b464:	mvn	r2, #255	; 0xff
   1b468:	mvn	r3, #0
   1b46c:	and	ip, r0, r2
   1b470:	str	ip, [fp, #-132]	; 0xffffff7c
   1b474:	and	r3, r1, r3
   1b478:	str	r3, [fp, #-128]	; 0xffffff80
   1b47c:	add	r3, pc, #604	; 0x25c
   1b480:	ldrd	r2, [r3]
   1b484:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   1b488:	cmp	r1, r3
   1b48c:	cmpeq	r0, r2
   1b490:	bne	1b5bc <_start@@Base+0x6fc4>
   1b494:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b498:	str	r3, [fp, #-40]	; 0xffffffd8
   1b49c:	mov	r3, #7
   1b4a0:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b4a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b4a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b4ac:	bl	15600 <_start@@Base+0x1008>
   1b4b0:	str	r0, [fp, #-100]	; 0xffffff9c
   1b4b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b4b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b4bc:	cmp	r2, r3
   1b4c0:	beq	1b5a4 <_start@@Base+0x6fac>
   1b4c4:	mov	r2, #0
   1b4c8:	mov	r3, #0
   1b4cc:	strd	r2, [fp, #-92]	; 0xffffffa4
   1b4d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b4d4:	str	r3, [fp, #-40]	; 0xffffffd8
   1b4d8:	sub	r3, fp, #92	; 0x5c
   1b4dc:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b4e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b4e4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b4e8:	bl	161c8 <_start@@Base+0x1bd0>
   1b4ec:	str	r0, [fp, #-100]	; 0xffffff9c
   1b4f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b4f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b4f8:	cmp	r2, r3
   1b4fc:	bne	1b54c <_start@@Base+0x6f54>
   1b500:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b504:	str	r3, [fp, #-40]	; 0xffffffd8
   1b508:	sub	r3, fp, #92	; 0x5c
   1b50c:	str	r3, [sp]
   1b510:	ldr	r3, [pc, #464]	; 1b6e8 <_start@@Base+0x70f0>
   1b514:	add	r3, pc, r3
   1b518:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b51c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b520:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b524:	bl	16cd8 <_start@@Base+0x26e0>
   1b528:	str	r0, [fp, #-100]	; 0xffffff9c
   1b52c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b534:	cmp	r2, r3
   1b538:	beq	1b688 <_start@@Base+0x7090>
   1b53c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1b540:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b544:	cmp	r2, r3
   1b548:	beq	1b688 <_start@@Base+0x7090>
   1b54c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1b550:	orrs	r3, r2, r3
   1b554:	bne	1b56c <_start@@Base+0x6f74>
   1b558:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b55c:	ldr	r3, [r3, #8]
   1b560:	and	r3, r3, #2
   1b564:	cmp	r3, #0
   1b568:	beq	1b5d0 <_start@@Base+0x6fd8>
   1b56c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b570:	ldr	r0, [r3]
   1b574:	mov	r3, #8
   1b578:	mov	r2, #8
   1b57c:	mov	r1, #4
   1b580:	bl	3255c <flatcc_builder_table_add@@Base>
   1b584:	str	r0, [fp, #-44]	; 0xffffffd4
   1b588:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b58c:	cmp	r3, #0
   1b590:	beq	1b690 <_start@@Base+0x7098>
   1b594:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1b598:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b59c:	bl	14a14 <_start@@Base+0x41c>
   1b5a0:	b	1b5d0 <_start@@Base+0x6fd8>
   1b5a4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b5a8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b5ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b5b0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b5b4:	str	r0, [fp, #-100]	; 0xffffff9c
   1b5b8:	b	1b5d0 <_start@@Base+0x6fd8>
   1b5bc:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b5c0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b5c4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b5c8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b5cc:	str	r0, [fp, #-100]	; 0xffffff9c
   1b5d0:	sub	r3, fp, #48	; 0x30
   1b5d4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b5d8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b5dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b5e0:	bl	15224 <_start@@Base+0xc2c>
   1b5e4:	str	r0, [fp, #-100]	; 0xffffff9c
   1b5e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b5ec:	cmp	r3, #0
   1b5f0:	bne	1ad48 <_start@@Base+0x6750>
   1b5f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b5f8:	ldr	r3, [r3, #20]
   1b5fc:	cmp	r3, #0
   1b600:	bne	1b698 <_start@@Base+0x70a0>
   1b604:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b608:	ldr	r3, [r3]
   1b60c:	mov	r0, r3
   1b610:	bl	30b0c <flatcc_builder_end_table@@Base>
   1b614:	mov	r2, r0
   1b618:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b61c:	str	r2, [r3]
   1b620:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b624:	ldr	r3, [r3]
   1b628:	cmp	r3, #0
   1b62c:	beq	1b6a0 <_start@@Base+0x70a8>
   1b630:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b634:	b	1b6bc <_start@@Base+0x70c4>
   1b638:	nop	{0}
   1b63c:	b	1b6a4 <_start@@Base+0x70ac>
   1b640:	nop	{0}
   1b644:	b	1b6a4 <_start@@Base+0x70ac>
   1b648:	nop	{0}
   1b64c:	b	1b6a4 <_start@@Base+0x70ac>
   1b650:	nop	{0}
   1b654:	b	1b6a4 <_start@@Base+0x70ac>
   1b658:	nop	{0}
   1b65c:	b	1b6a4 <_start@@Base+0x70ac>
   1b660:	nop	{0}
   1b664:	b	1b6a4 <_start@@Base+0x70ac>
   1b668:	nop	{0}
   1b66c:	b	1b6a4 <_start@@Base+0x70ac>
   1b670:	nop	{0}
   1b674:	b	1b6a4 <_start@@Base+0x70ac>
   1b678:	nop	{0}
   1b67c:	b	1b6a4 <_start@@Base+0x70ac>
   1b680:	nop	{0}
   1b684:	b	1b6a4 <_start@@Base+0x70ac>
   1b688:	nop	{0}
   1b68c:	b	1b6a4 <_start@@Base+0x70ac>
   1b690:	nop	{0}
   1b694:	b	1b6a4 <_start@@Base+0x70ac>
   1b698:	nop	{0}
   1b69c:	b	1b6a4 <_start@@Base+0x70ac>
   1b6a0:	nop	{0}
   1b6a4:	mov	r3, #33	; 0x21
   1b6a8:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b6ac:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b6b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b6b4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1b6b8:	mov	r3, r0
   1b6bc:	mov	r0, r3
   1b6c0:	sub	sp, fp, #28
   1b6c4:	ldrd	r4, [sp]
   1b6c8:	ldrd	r6, [sp, #8]
   1b6cc:	ldrd	r8, [sp, #16]
   1b6d0:	ldr	fp, [sp, #24]
   1b6d4:	add	sp, sp, #28
   1b6d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6dc:	nop	{0}
   1b6e0:	cmnvs	ip, r0, lsl #8
   1b6e4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b6e8:	strdeq	r9, [r4], -ip
   1b6ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b6f0:	strd	r6, [sp, #8]
   1b6f4:	strd	r8, [sp, #16]
   1b6f8:	str	fp, [sp, #24]
   1b6fc:	str	lr, [sp, #28]
   1b700:	add	fp, sp, #28
   1b704:	sub	sp, sp, #96	; 0x60
   1b708:	str	r0, [fp, #-80]	; 0xffffffb0
   1b70c:	str	r1, [fp, #-84]	; 0xffffffac
   1b710:	str	r2, [fp, #-88]	; 0xffffffa8
   1b714:	str	r3, [fp, #-92]	; 0xffffffa4
   1b718:	sub	r3, fp, #48	; 0x30
   1b71c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b720:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b724:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b728:	bl	15130 <_start@@Base+0xb38>
   1b72c:	str	r0, [fp, #-84]	; 0xffffffac
   1b730:	b	1be54 <_start@@Base+0x785c>
   1b734:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b738:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b73c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b740:	bl	14cf4 <_start@@Base+0x6fc>
   1b744:	str	r0, [fp, #-84]	; 0xffffffac
   1b748:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1b74c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1b750:	bl	14ffc <_start@@Base+0xa04>
   1b754:	strd	r0, [fp, #-36]	; 0xffffffdc
   1b758:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b75c:	add	r3, pc, #796	; 0x31c
   1b760:	ldrd	r2, [r3]
   1b764:	cmp	r1, r3
   1b768:	cmpeq	r0, r2
   1b76c:	bhi	1b9b4 <_start@@Base+0x73bc>
   1b770:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b774:	mov	r2, #-16777216	; 0xff000000
   1b778:	mvn	r3, #0
   1b77c:	and	r4, r0, r2
   1b780:	and	r5, r1, r3
   1b784:	add	r3, pc, #764	; 0x2fc
   1b788:	ldrd	r2, [r3]
   1b78c:	cmp	r5, r3
   1b790:	cmpeq	r4, r2
   1b794:	bne	1b884 <_start@@Base+0x728c>
   1b798:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b79c:	str	r3, [fp, #-40]	; 0xffffffd8
   1b7a0:	mov	r3, #5
   1b7a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b7a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b7ac:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b7b0:	bl	15600 <_start@@Base+0x1008>
   1b7b4:	str	r0, [fp, #-84]	; 0xffffffac
   1b7b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b7bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b7c0:	cmp	r2, r3
   1b7c4:	beq	1b86c <_start@@Base+0x7274>
   1b7c8:	mov	r3, #0
   1b7cc:	strb	r3, [fp, #-49]	; 0xffffffcf
   1b7d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b7d4:	add	r3, r3, #24
   1b7d8:	str	r3, [fp, #-44]	; 0xffffffd4
   1b7dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b7e0:	str	r3, [fp, #-40]	; 0xffffffd8
   1b7e4:	sub	r3, fp, #49	; 0x31
   1b7e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b7ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b7f0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b7f4:	bl	16460 <_start@@Base+0x1e68>
   1b7f8:	str	r0, [fp, #-84]	; 0xffffffac
   1b7fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b800:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b804:	cmp	r2, r3
   1b808:	bne	1b858 <_start@@Base+0x7260>
   1b80c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b810:	str	r3, [fp, #-40]	; 0xffffffd8
   1b814:	sub	r3, fp, #49	; 0x31
   1b818:	str	r3, [sp]
   1b81c:	ldr	r3, [pc, #636]	; 1baa0 <_start@@Base+0x74a8>
   1b820:	add	r3, pc, r3
   1b824:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b828:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b82c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b830:	bl	171c4 <_start@@Base+0x2bcc>
   1b834:	str	r0, [fp, #-84]	; 0xffffffac
   1b838:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b840:	cmp	r2, r3
   1b844:	beq	1be68 <_start@@Base+0x7870>
   1b848:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b84c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1b850:	cmp	r2, r3
   1b854:	beq	1be68 <_start@@Base+0x7870>
   1b858:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
   1b85c:	mov	r1, r3
   1b860:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b864:	bl	148c8 <_start@@Base+0x2d0>
   1b868:	b	1be3c <_start@@Base+0x7844>
   1b86c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b870:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b874:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b878:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b87c:	str	r0, [fp, #-84]	; 0xffffffac
   1b880:	b	1be3c <_start@@Base+0x7844>
   1b884:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b888:	mov	r2, #-16777216	; 0xff000000
   1b88c:	mvn	r3, #0
   1b890:	and	r6, r0, r2
   1b894:	and	r7, r1, r3
   1b898:	add	r3, pc, #496	; 0x1f0
   1b89c:	ldrd	r2, [r3]
   1b8a0:	cmp	r7, r3
   1b8a4:	cmpeq	r6, r2
   1b8a8:	bne	1b99c <_start@@Base+0x73a4>
   1b8ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b8b0:	str	r3, [fp, #-40]	; 0xffffffd8
   1b8b4:	mov	r3, #5
   1b8b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b8bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b8c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b8c4:	bl	15600 <_start@@Base+0x1008>
   1b8c8:	str	r0, [fp, #-84]	; 0xffffffac
   1b8cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b8d0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b8d4:	cmp	r2, r3
   1b8d8:	beq	1b984 <_start@@Base+0x738c>
   1b8dc:	mov	r2, #0
   1b8e0:	mov	r3, #0
   1b8e4:	strd	r2, [fp, #-60]	; 0xffffffc4
   1b8e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b8ec:	add	r3, r3, #16
   1b8f0:	str	r3, [fp, #-44]	; 0xffffffd4
   1b8f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b8f8:	str	r3, [fp, #-40]	; 0xffffffd8
   1b8fc:	sub	r3, fp, #60	; 0x3c
   1b900:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b904:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b908:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b90c:	bl	3cbfc <flatcc_json_parser_double@@Base>
   1b910:	str	r0, [fp, #-84]	; 0xffffffac
   1b914:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b918:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b91c:	cmp	r2, r3
   1b920:	bne	1b970 <_start@@Base+0x7378>
   1b924:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b928:	str	r3, [fp, #-40]	; 0xffffffd8
   1b92c:	sub	r3, fp, #60	; 0x3c
   1b930:	str	r3, [sp]
   1b934:	ldr	r3, [pc, #360]	; 1baa4 <_start@@Base+0x74ac>
   1b938:	add	r3, pc, r3
   1b93c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b940:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b944:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b948:	bl	176a0 <_start@@Base+0x30a8>
   1b94c:	str	r0, [fp, #-84]	; 0xffffffac
   1b950:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b958:	cmp	r2, r3
   1b95c:	beq	1be70 <_start@@Base+0x7878>
   1b960:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b964:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1b968:	cmp	r2, r3
   1b96c:	beq	1be70 <_start@@Base+0x7878>
   1b970:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1b974:	vmov.f64	d0, d7
   1b978:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b97c:	bl	14b08 <_start@@Base+0x510>
   1b980:	b	1be3c <_start@@Base+0x7844>
   1b984:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b988:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b98c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b990:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b994:	str	r0, [fp, #-84]	; 0xffffffac
   1b998:	b	1be3c <_start@@Base+0x7844>
   1b99c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1b9a0:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b9a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b9a8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1b9ac:	str	r0, [fp, #-84]	; 0xffffffac
   1b9b0:	b	1be3c <_start@@Base+0x7844>
   1b9b4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b9b8:	mvn	r2, #0
   1b9bc:	mvn	r3, #-2013265920	; 0x88000000
   1b9c0:	cmp	r1, r3
   1b9c4:	cmpeq	r0, r2
   1b9c8:	bhi	1bab4 <_start@@Base+0x74bc>
   1b9cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b9d0:	mov	r2, #-16777216	; 0xff000000
   1b9d4:	mvn	r3, #0
   1b9d8:	and	r8, r0, r2
   1b9dc:	and	r9, r1, r3
   1b9e0:	add	r3, pc, #176	; 0xb0
   1b9e4:	ldrd	r2, [r3]
   1b9e8:	cmp	r9, r3
   1b9ec:	cmpeq	r8, r2
   1b9f0:	bne	1ba64 <_start@@Base+0x746c>
   1b9f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b9f8:	str	r3, [fp, #-40]	; 0xffffffd8
   1b9fc:	mov	r3, #5
   1ba00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ba08:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ba0c:	bl	15600 <_start@@Base+0x1008>
   1ba10:	str	r0, [fp, #-84]	; 0xffffffac
   1ba14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ba18:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ba1c:	cmp	r2, r3
   1ba20:	beq	1ba4c <_start@@Base+0x7454>
   1ba24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ba28:	add	r3, r3, #26
   1ba2c:	str	r3, [fp, #-44]	; 0xffffffd4
   1ba30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba38:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ba3c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ba40:	bl	19c38 <_start@@Base+0x5640>
   1ba44:	str	r0, [fp, #-84]	; 0xffffffac
   1ba48:	b	1be3c <_start@@Base+0x7844>
   1ba4c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba50:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ba54:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ba58:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ba5c:	str	r0, [fp, #-84]	; 0xffffffac
   1ba60:	b	1be3c <_start@@Base+0x7844>
   1ba64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ba68:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ba6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ba70:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ba74:	str	r0, [fp, #-84]	; 0xffffffac
   1ba78:	b	1be3c <_start@@Base+0x7844>
   1ba7c:	nop	{0}
   1ba80:	rscscc	pc, pc, #1020	; 0x3fc
   1ba84:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ba88:	andcc	r0, r0, #0
   1ba8c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ba90:	mrscc	r0, (UNDEF: 0)
   1ba94:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1ba98:	movwcc	r0, #0
   1ba9c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1baa0:	andeq	r9, r4, r0, lsl #18
   1baa4:	strdeq	r9, [r4], -r8
   1baa8:	andeq	r9, r4, r0, asr #11
   1baac:	muleq	r4, ip, r4
   1bab0:	muleq	r4, r0, r3
   1bab4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1bab8:	mvn	r2, #0
   1babc:	mvn	r3, #-2030043136	; 0x87000000
   1bac0:	cmp	r1, r3
   1bac4:	cmpeq	r0, r2
   1bac8:	bhi	1bbf8 <_start@@Base+0x7600>
   1bacc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1bad0:	mov	r2, #0
   1bad4:	mov	r3, #-16777216	; 0xff000000
   1bad8:	and	ip, r0, r2
   1badc:	str	ip, [fp, #-100]	; 0xffffff9c
   1bae0:	and	r3, r1, r3
   1bae4:	str	r3, [fp, #-96]	; 0xffffffa0
   1bae8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1baec:	cmp	r3, #2013265920	; 0x78000000
   1baf0:	cmpeq	r2, #0
   1baf4:	bne	1bbe0 <_start@@Base+0x75e8>
   1baf8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bafc:	str	r3, [fp, #-40]	; 0xffffffd8
   1bb00:	mov	r3, #1
   1bb04:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bb08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bb0c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bb10:	bl	15600 <_start@@Base+0x1008>
   1bb14:	str	r0, [fp, #-84]	; 0xffffffac
   1bb18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bb1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bb20:	cmp	r2, r3
   1bb24:	beq	1bbc8 <_start@@Base+0x75d0>
   1bb28:	mov	r3, #0
   1bb2c:	str	r3, [fp, #-64]	; 0xffffffc0
   1bb30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bb34:	str	r3, [fp, #-44]	; 0xffffffd4
   1bb38:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bb3c:	str	r3, [fp, #-40]	; 0xffffffd8
   1bb40:	sub	r3, fp, #64	; 0x40
   1bb44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bb48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bb4c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bb50:	bl	3cda8 <flatcc_json_parser_float@@Base>
   1bb54:	str	r0, [fp, #-84]	; 0xffffffac
   1bb58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bb5c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bb60:	cmp	r2, r3
   1bb64:	bne	1bbb4 <_start@@Base+0x75bc>
   1bb68:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bb6c:	str	r3, [fp, #-40]	; 0xffffffd8
   1bb70:	sub	r3, fp, #64	; 0x40
   1bb74:	str	r3, [sp]
   1bb78:	ldr	r3, [pc, #-216]	; 1baa8 <_start@@Base+0x74b0>
   1bb7c:	add	r3, pc, r3
   1bb80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bb84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bb88:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bb8c:	bl	17508 <_start@@Base+0x2f10>
   1bb90:	str	r0, [fp, #-84]	; 0xffffffac
   1bb94:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bb98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bb9c:	cmp	r2, r3
   1bba0:	beq	1be78 <_start@@Base+0x7880>
   1bba4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bba8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bbac:	cmp	r2, r3
   1bbb0:	beq	1be78 <_start@@Base+0x7880>
   1bbb4:	vldr	s15, [fp, #-64]	; 0xffffffc0
   1bbb8:	vmov.f32	s0, s15
   1bbbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bbc0:	bl	14a90 <_start@@Base+0x498>
   1bbc4:	b	1be3c <_start@@Base+0x7844>
   1bbc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bbcc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bbd0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bbd4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1bbd8:	str	r0, [fp, #-84]	; 0xffffffac
   1bbdc:	b	1be3c <_start@@Base+0x7844>
   1bbe0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bbe4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bbe8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bbec:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1bbf0:	str	r0, [fp, #-84]	; 0xffffffac
   1bbf4:	b	1be3c <_start@@Base+0x7844>
   1bbf8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1bbfc:	mov	r2, #0
   1bc00:	mov	r3, #-16777216	; 0xff000000
   1bc04:	and	ip, r0, r2
   1bc08:	str	ip, [fp, #-108]	; 0xffffff94
   1bc0c:	and	r3, r1, r3
   1bc10:	str	r3, [fp, #-104]	; 0xffffff98
   1bc14:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1bc18:	cmp	r3, #2046820352	; 0x7a000000
   1bc1c:	cmpeq	r2, #0
   1bc20:	bne	1bd10 <_start@@Base+0x7718>
   1bc24:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bc28:	str	r3, [fp, #-40]	; 0xffffffd8
   1bc2c:	mov	r3, #1
   1bc30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bc38:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bc3c:	bl	15600 <_start@@Base+0x1008>
   1bc40:	str	r0, [fp, #-84]	; 0xffffffac
   1bc44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bc48:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bc4c:	cmp	r2, r3
   1bc50:	beq	1bcf8 <_start@@Base+0x7700>
   1bc54:	mov	r3, #0
   1bc58:	str	r3, [fp, #-68]	; 0xffffffbc
   1bc5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bc60:	add	r3, r3, #8
   1bc64:	str	r3, [fp, #-44]	; 0xffffffd4
   1bc68:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bc6c:	str	r3, [fp, #-40]	; 0xffffffd8
   1bc70:	sub	r3, fp, #68	; 0x44
   1bc74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bc78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bc7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bc80:	bl	3cda8 <flatcc_json_parser_float@@Base>
   1bc84:	str	r0, [fp, #-84]	; 0xffffffac
   1bc88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bc8c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bc90:	cmp	r2, r3
   1bc94:	bne	1bce4 <_start@@Base+0x76ec>
   1bc98:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bc9c:	str	r3, [fp, #-40]	; 0xffffffd8
   1bca0:	sub	r3, fp, #68	; 0x44
   1bca4:	str	r3, [sp]
   1bca8:	ldr	r3, [pc, #-516]	; 1baac <_start@@Base+0x74b4>
   1bcac:	add	r3, pc, r3
   1bcb0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bcb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bcb8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bcbc:	bl	17508 <_start@@Base+0x2f10>
   1bcc0:	str	r0, [fp, #-84]	; 0xffffffac
   1bcc4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bcc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bccc:	cmp	r2, r3
   1bcd0:	beq	1be80 <_start@@Base+0x7888>
   1bcd4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bcd8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bcdc:	cmp	r2, r3
   1bce0:	beq	1be80 <_start@@Base+0x7888>
   1bce4:	vldr	s15, [fp, #-68]	; 0xffffffbc
   1bce8:	vmov.f32	s0, s15
   1bcec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bcf0:	bl	14a90 <_start@@Base+0x498>
   1bcf4:	b	1be3c <_start@@Base+0x7844>
   1bcf8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bcfc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bd00:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bd04:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1bd08:	str	r0, [fp, #-84]	; 0xffffffac
   1bd0c:	b	1be3c <_start@@Base+0x7844>
   1bd10:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1bd14:	mov	r2, #0
   1bd18:	mov	r3, #-16777216	; 0xff000000
   1bd1c:	and	ip, r0, r2
   1bd20:	str	ip, [fp, #-116]	; 0xffffff8c
   1bd24:	and	r3, r1, r3
   1bd28:	str	r3, [fp, #-112]	; 0xffffff90
   1bd2c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1bd30:	cmp	r3, #2030043136	; 0x79000000
   1bd34:	cmpeq	r2, #0
   1bd38:	bne	1be28 <_start@@Base+0x7830>
   1bd3c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd40:	str	r3, [fp, #-40]	; 0xffffffd8
   1bd44:	mov	r3, #1
   1bd48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bd4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd50:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bd54:	bl	15600 <_start@@Base+0x1008>
   1bd58:	str	r0, [fp, #-84]	; 0xffffffac
   1bd5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bd60:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd64:	cmp	r2, r3
   1bd68:	beq	1be10 <_start@@Base+0x7818>
   1bd6c:	mov	r3, #0
   1bd70:	str	r3, [fp, #-72]	; 0xffffffb8
   1bd74:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1bd78:	add	r3, r3, #4
   1bd7c:	str	r3, [fp, #-44]	; 0xffffffd4
   1bd80:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd84:	str	r3, [fp, #-40]	; 0xffffffd8
   1bd88:	sub	r3, fp, #72	; 0x48
   1bd8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bd90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd94:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bd98:	bl	3cda8 <flatcc_json_parser_float@@Base>
   1bd9c:	str	r0, [fp, #-84]	; 0xffffffac
   1bda0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bda4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bda8:	cmp	r2, r3
   1bdac:	bne	1bdfc <_start@@Base+0x7804>
   1bdb0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bdb4:	str	r3, [fp, #-40]	; 0xffffffd8
   1bdb8:	sub	r3, fp, #72	; 0x48
   1bdbc:	str	r3, [sp]
   1bdc0:	ldr	r3, [pc, #-792]	; 1bab0 <_start@@Base+0x74b8>
   1bdc4:	add	r3, pc, r3
   1bdc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1bdcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bdd0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1bdd4:	bl	17508 <_start@@Base+0x2f10>
   1bdd8:	str	r0, [fp, #-84]	; 0xffffffac
   1bddc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bde0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bde4:	cmp	r2, r3
   1bde8:	beq	1be88 <_start@@Base+0x7890>
   1bdec:	ldr	r2, [fp, #-84]	; 0xffffffac
   1bdf0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bdf4:	cmp	r2, r3
   1bdf8:	beq	1be88 <_start@@Base+0x7890>
   1bdfc:	vldr	s15, [fp, #-72]	; 0xffffffb8
   1be00:	vmov.f32	s0, s15
   1be04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1be08:	bl	14a90 <_start@@Base+0x498>
   1be0c:	b	1be3c <_start@@Base+0x7844>
   1be10:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be14:	ldr	r1, [fp, #-84]	; 0xffffffac
   1be18:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1be1c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1be20:	str	r0, [fp, #-84]	; 0xffffffac
   1be24:	b	1be3c <_start@@Base+0x7844>
   1be28:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be2c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1be30:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1be34:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1be38:	str	r0, [fp, #-84]	; 0xffffffac
   1be3c:	sub	r3, fp, #48	; 0x30
   1be40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be44:	ldr	r1, [fp, #-84]	; 0xffffffac
   1be48:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1be4c:	bl	15224 <_start@@Base+0xc2c>
   1be50:	str	r0, [fp, #-84]	; 0xffffffac
   1be54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1be58:	cmp	r3, #0
   1be5c:	bne	1b734 <_start@@Base+0x713c>
   1be60:	ldr	r3, [fp, #-84]	; 0xffffffac
   1be64:	b	1bea4 <_start@@Base+0x78ac>
   1be68:	nop	{0}
   1be6c:	b	1be8c <_start@@Base+0x7894>
   1be70:	nop	{0}
   1be74:	b	1be8c <_start@@Base+0x7894>
   1be78:	nop	{0}
   1be7c:	b	1be8c <_start@@Base+0x7894>
   1be80:	nop	{0}
   1be84:	b	1be8c <_start@@Base+0x7894>
   1be88:	nop	{0}
   1be8c:	mov	r3, #33	; 0x21
   1be90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1be94:	ldr	r1, [fp, #-84]	; 0xffffffac
   1be98:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1be9c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1bea0:	mov	r3, r0
   1bea4:	mov	r0, r3
   1bea8:	sub	sp, fp, #28
   1beac:	ldrd	r4, [sp]
   1beb0:	ldrd	r6, [sp, #8]
   1beb4:	ldrd	r8, [sp, #16]
   1beb8:	ldr	fp, [sp, #24]
   1bebc:	add	sp, sp, #28
   1bec0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bec4:	str	fp, [sp, #-8]!
   1bec8:	str	lr, [sp, #4]
   1becc:	add	fp, sp, #4
   1bed0:	sub	sp, sp, #24
   1bed4:	str	r0, [fp, #-16]
   1bed8:	str	r1, [fp, #-20]	; 0xffffffec
   1bedc:	str	r2, [fp, #-24]	; 0xffffffe8
   1bee0:	str	r3, [fp, #-28]	; 0xffffffe4
   1bee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bee8:	mov	r2, #0
   1beec:	str	r2, [r3]
   1bef0:	ldr	r3, [fp, #-16]
   1bef4:	ldr	r3, [r3]
   1bef8:	mov	r2, #16
   1befc:	mov	r1, #32
   1bf00:	mov	r0, r3
   1bf04:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   1bf08:	str	r0, [fp, #-8]
   1bf0c:	ldr	r3, [fp, #-8]
   1bf10:	cmp	r3, #0
   1bf14:	beq	1bf74 <_start@@Base+0x797c>
   1bf18:	ldr	r3, [fp, #-8]
   1bf1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bf20:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bf24:	ldr	r0, [fp, #-16]
   1bf28:	bl	1b6ec <_start@@Base+0x70f4>
   1bf2c:	str	r0, [fp, #-20]	; 0xffffffec
   1bf30:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bf34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf38:	cmp	r2, r3
   1bf3c:	beq	1bf7c <_start@@Base+0x7984>
   1bf40:	ldr	r3, [fp, #-16]
   1bf44:	ldr	r3, [r3]
   1bf48:	mov	r0, r3
   1bf4c:	bl	2f19c <flatcc_builder_end_struct@@Base>
   1bf50:	mov	r2, r0
   1bf54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf58:	str	r2, [r3]
   1bf5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf60:	ldr	r3, [r3]
   1bf64:	cmp	r3, #0
   1bf68:	beq	1bf7c <_start@@Base+0x7984>
   1bf6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf70:	b	1bf98 <_start@@Base+0x79a0>
   1bf74:	nop	{0}
   1bf78:	b	1bf80 <_start@@Base+0x7988>
   1bf7c:	nop	{0}
   1bf80:	mov	r3, #33	; 0x21
   1bf84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bf88:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bf8c:	ldr	r0, [fp, #-16]
   1bf90:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1bf94:	mov	r3, r0
   1bf98:	mov	r0, r3
   1bf9c:	sub	sp, fp, #4
   1bfa0:	ldr	fp, [sp]
   1bfa4:	add	sp, sp, #4
   1bfa8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bfac:	strd	r4, [sp, #-16]!
   1bfb0:	str	fp, [sp, #8]
   1bfb4:	str	lr, [sp, #12]
   1bfb8:	add	fp, sp, #12
   1bfbc:	sub	sp, sp, #56	; 0x38
   1bfc0:	str	r0, [fp, #-48]	; 0xffffffd0
   1bfc4:	str	r1, [fp, #-52]	; 0xffffffcc
   1bfc8:	str	r2, [fp, #-56]	; 0xffffffc8
   1bfcc:	str	r3, [fp, #-60]	; 0xffffffc4
   1bfd0:	sub	r3, fp, #32
   1bfd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bfd8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bfdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bfe0:	bl	15130 <_start@@Base+0xb38>
   1bfe4:	str	r0, [fp, #-52]	; 0xffffffcc
   1bfe8:	b	1c258 <_start@@Base+0x7c60>
   1bfec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bff0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bff4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bff8:	bl	14cf4 <_start@@Base+0x6fc>
   1bffc:	str	r0, [fp, #-52]	; 0xffffffcc
   1c000:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c004:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c008:	bl	14ffc <_start@@Base+0xa04>
   1c00c:	strd	r0, [fp, #-20]	; 0xffffffec
   1c010:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1c014:	mov	r0, #0
   1c018:	mov	r1, #0
   1c01c:	movt	r1, #65535	; 0xffff
   1c020:	and	r4, r2, r0
   1c024:	and	r5, r3, r1
   1c028:	mov	r2, #0
   1c02c:	mov	r3, #0
   1c030:	movt	r3, #26980	; 0x6964
   1c034:	cmp	r5, r3
   1c038:	cmpeq	r4, r2
   1c03c:	bne	1c128 <_start@@Base+0x7b30>
   1c040:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c044:	str	r3, [fp, #-24]	; 0xffffffe8
   1c048:	mov	r3, #2
   1c04c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c050:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c054:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c058:	bl	15600 <_start@@Base+0x1008>
   1c05c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c064:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c068:	cmp	r2, r3
   1c06c:	beq	1c110 <_start@@Base+0x7b18>
   1c070:	mov	r3, #0
   1c074:	str	r3, [fp, #-36]	; 0xffffffdc
   1c078:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c07c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c080:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c084:	str	r3, [fp, #-24]	; 0xffffffe8
   1c088:	sub	r3, fp, #36	; 0x24
   1c08c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c094:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c098:	bl	15f34 <_start@@Base+0x193c>
   1c09c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c0a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c0a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c0a8:	cmp	r2, r3
   1c0ac:	bne	1c0fc <_start@@Base+0x7b04>
   1c0b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c0b4:	str	r3, [fp, #-24]	; 0xffffffe8
   1c0b8:	sub	r3, fp, #36	; 0x24
   1c0bc:	str	r3, [sp]
   1c0c0:	ldr	r3, [pc, #488]	; 1c2b0 <_start@@Base+0x7cb8>
   1c0c4:	add	r3, pc, r3
   1c0c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c0cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c0d4:	bl	16808 <_start@@Base+0x2210>
   1c0d8:	str	r0, [fp, #-52]	; 0xffffffcc
   1c0dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c0e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c0e4:	cmp	r2, r3
   1c0e8:	beq	1c26c <_start@@Base+0x7c74>
   1c0ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c0f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c0f4:	cmp	r2, r3
   1c0f8:	beq	1c26c <_start@@Base+0x7c74>
   1c0fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c100:	mov	r1, r3
   1c104:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c108:	bl	147f4 <_start@@Base+0x1fc>
   1c10c:	b	1c240 <_start@@Base+0x7c48>
   1c110:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c114:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c118:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c11c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c120:	str	r0, [fp, #-52]	; 0xffffffcc
   1c124:	b	1c240 <_start@@Base+0x7c48>
   1c128:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1c12c:	add	r1, pc, #372	; 0x174
   1c130:	ldrd	r0, [r1]
   1c134:	cmp	r3, r1
   1c138:	cmpeq	r2, r0
   1c13c:	bne	1c22c <_start@@Base+0x7c34>
   1c140:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c144:	str	r3, [fp, #-24]	; 0xffffffe8
   1c148:	mov	r3, #8
   1c14c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c154:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c158:	bl	15600 <_start@@Base+0x1008>
   1c15c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c160:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c164:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c168:	cmp	r2, r3
   1c16c:	beq	1c214 <_start@@Base+0x7c1c>
   1c170:	mov	r3, #0
   1c174:	str	r3, [fp, #-40]	; 0xffffffd8
   1c178:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c17c:	add	r3, r3, #4
   1c180:	str	r3, [fp, #-28]	; 0xffffffe4
   1c184:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c188:	str	r3, [fp, #-24]	; 0xffffffe8
   1c18c:	sub	r3, fp, #40	; 0x28
   1c190:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c198:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c19c:	bl	15f34 <_start@@Base+0x193c>
   1c1a0:	str	r0, [fp, #-52]	; 0xffffffcc
   1c1a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c1a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c1ac:	cmp	r2, r3
   1c1b0:	bne	1c200 <_start@@Base+0x7c08>
   1c1b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c1b8:	str	r3, [fp, #-24]	; 0xffffffe8
   1c1bc:	sub	r3, fp, #40	; 0x28
   1c1c0:	str	r3, [sp]
   1c1c4:	ldr	r3, [pc, #232]	; 1c2b4 <_start@@Base+0x7cbc>
   1c1c8:	add	r3, pc, r3
   1c1cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c1d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c1d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c1d8:	bl	16808 <_start@@Base+0x2210>
   1c1dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1c1e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1e8:	cmp	r2, r3
   1c1ec:	beq	1c274 <_start@@Base+0x7c7c>
   1c1f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c1f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c1f8:	cmp	r2, r3
   1c1fc:	beq	1c274 <_start@@Base+0x7c7c>
   1c200:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c204:	mov	r1, r3
   1c208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c20c:	bl	147f4 <_start@@Base+0x1fc>
   1c210:	b	1c240 <_start@@Base+0x7c48>
   1c214:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c218:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c21c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c220:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c224:	str	r0, [fp, #-52]	; 0xffffffcc
   1c228:	b	1c240 <_start@@Base+0x7c48>
   1c22c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c230:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c234:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c238:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c23c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c240:	sub	r3, fp, #32
   1c244:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c248:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c24c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c250:	bl	15224 <_start@@Base+0xc2c>
   1c254:	str	r0, [fp, #-52]	; 0xffffffcc
   1c258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c25c:	cmp	r3, #0
   1c260:	bne	1bfec <_start@@Base+0x79f4>
   1c264:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c268:	b	1c290 <_start@@Base+0x7c98>
   1c26c:	nop	{0}
   1c270:	b	1c278 <_start@@Base+0x7c80>
   1c274:	nop	{0}
   1c278:	mov	r3, #33	; 0x21
   1c27c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c280:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c284:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c288:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1c28c:	mov	r3, r0
   1c290:	mov	r0, r3
   1c294:	sub	sp, fp, #12
   1c298:	ldrd	r4, [sp]
   1c29c:	ldr	fp, [sp, #8]
   1c2a0:	add	sp, sp, #12
   1c2a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2a8:	cmnvs	lr, r5, ror #6
   1c2ac:	strbtvs	r7, [r9], #-884	; 0xfffffc8c
   1c2b0:	muleq	r4, ip, r0
   1c2b4:	andeq	r8, r4, r4, lsr #31
   1c2b8:	str	fp, [sp, #-8]!
   1c2bc:	str	lr, [sp, #4]
   1c2c0:	add	fp, sp, #4
   1c2c4:	sub	sp, sp, #24
   1c2c8:	str	r0, [fp, #-16]
   1c2cc:	str	r1, [fp, #-20]	; 0xffffffec
   1c2d0:	str	r2, [fp, #-24]	; 0xffffffe8
   1c2d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c2d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c2dc:	mov	r2, #0
   1c2e0:	str	r2, [r3]
   1c2e4:	ldr	r3, [fp, #-16]
   1c2e8:	ldr	r3, [r3]
   1c2ec:	mov	r2, #4
   1c2f0:	mov	r1, #8
   1c2f4:	mov	r0, r3
   1c2f8:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   1c2fc:	str	r0, [fp, #-8]
   1c300:	ldr	r3, [fp, #-8]
   1c304:	cmp	r3, #0
   1c308:	beq	1c368 <_start@@Base+0x7d70>
   1c30c:	ldr	r3, [fp, #-8]
   1c310:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c314:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c318:	ldr	r0, [fp, #-16]
   1c31c:	bl	1bfac <_start@@Base+0x79b4>
   1c320:	str	r0, [fp, #-20]	; 0xffffffec
   1c324:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c32c:	cmp	r2, r3
   1c330:	beq	1c370 <_start@@Base+0x7d78>
   1c334:	ldr	r3, [fp, #-16]
   1c338:	ldr	r3, [r3]
   1c33c:	mov	r0, r3
   1c340:	bl	2f19c <flatcc_builder_end_struct@@Base>
   1c344:	mov	r2, r0
   1c348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c34c:	str	r2, [r3]
   1c350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c354:	ldr	r3, [r3]
   1c358:	cmp	r3, #0
   1c35c:	beq	1c370 <_start@@Base+0x7d78>
   1c360:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c364:	b	1c38c <_start@@Base+0x7d94>
   1c368:	nop	{0}
   1c36c:	b	1c374 <_start@@Base+0x7d7c>
   1c370:	nop	{0}
   1c374:	mov	r3, #33	; 0x21
   1c378:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c37c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c380:	ldr	r0, [fp, #-16]
   1c384:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1c388:	mov	r3, r0
   1c38c:	mov	r0, r3
   1c390:	sub	sp, fp, #4
   1c394:	ldr	fp, [sp]
   1c398:	add	sp, sp, #4
   1c39c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c3a4:	strd	r6, [sp, #8]
   1c3a8:	strd	r8, [sp, #16]
   1c3ac:	str	fp, [sp, #24]
   1c3b0:	str	lr, [sp, #28]
   1c3b4:	add	fp, sp, #28
   1c3b8:	sub	sp, sp, #64	; 0x40
   1c3bc:	str	r0, [fp, #-72]	; 0xffffffb8
   1c3c0:	str	r1, [fp, #-76]	; 0xffffffb4
   1c3c4:	str	r2, [fp, #-80]	; 0xffffffb0
   1c3c8:	str	r3, [fp, #-84]	; 0xffffffac
   1c3cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c3d0:	mov	r2, #0
   1c3d4:	str	r2, [r3]
   1c3d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c3dc:	ldr	r3, [r3]
   1c3e0:	mov	r1, #3
   1c3e4:	mov	r0, r3
   1c3e8:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1c3ec:	mov	r3, r0
   1c3f0:	cmp	r3, #0
   1c3f4:	bne	1c870 <_start@@Base+0x8278>
   1c3f8:	sub	r3, fp, #52	; 0x34
   1c3fc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c400:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c404:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c408:	bl	15130 <_start@@Base+0xb38>
   1c40c:	str	r0, [fp, #-76]	; 0xffffffb4
   1c410:	b	1c808 <_start@@Base+0x8210>
   1c414:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c418:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c41c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c420:	bl	14cf4 <_start@@Base+0x6fc>
   1c424:	str	r0, [fp, #-76]	; 0xffffffb4
   1c428:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1c42c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1c430:	bl	14ffc <_start@@Base+0xa04>
   1c434:	strd	r0, [fp, #-36]	; 0xffffffdc
   1c438:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c43c:	mvn	r0, #0
   1c440:	movw	r1, #65535	; 0xffff
   1c444:	movt	r1, #26979	; 0x6963
   1c448:	cmp	r3, r1
   1c44c:	cmpeq	r2, r0
   1c450:	bhi	1c5bc <_start@@Base+0x7fc4>
   1c454:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c458:	mov	r0, #-16777216	; 0xff000000
   1c45c:	mvn	r1, #0
   1c460:	and	r4, r2, r0
   1c464:	and	r5, r3, r1
   1c468:	add	r3, pc, #1000	; 0x3e8
   1c46c:	ldrd	r2, [r3]
   1c470:	cmp	r5, r3
   1c474:	cmpeq	r4, r2
   1c478:	bne	1c5a4 <_start@@Base+0x7fac>
   1c47c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c480:	str	r3, [fp, #-40]	; 0xffffffd8
   1c484:	mov	r3, #5
   1c488:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c48c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c490:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c494:	bl	15600 <_start@@Base+0x1008>
   1c498:	str	r0, [fp, #-76]	; 0xffffffb4
   1c49c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c4a0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c4a4:	cmp	r2, r3
   1c4a8:	beq	1c58c <_start@@Base+0x7f94>
   1c4ac:	mov	r3, #0
   1c4b0:	strh	r3, [fp, #-58]	; 0xffffffc6
   1c4b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c4b8:	str	r3, [fp, #-40]	; 0xffffffd8
   1c4bc:	sub	r3, fp, #58	; 0x3a
   1c4c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c4c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c4c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c4cc:	bl	16010 <_start@@Base+0x1a18>
   1c4d0:	str	r0, [fp, #-76]	; 0xffffffb4
   1c4d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c4d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c4dc:	cmp	r2, r3
   1c4e0:	bne	1c530 <_start@@Base+0x7f38>
   1c4e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c4e8:	str	r3, [fp, #-40]	; 0xffffffd8
   1c4ec:	sub	r3, fp, #58	; 0x3a
   1c4f0:	str	r3, [sp]
   1c4f4:	ldr	r3, [pc, #876]	; 1c868 <_start@@Base+0x8270>
   1c4f8:	add	r3, pc, r3
   1c4fc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c500:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c504:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c508:	bl	169a0 <_start@@Base+0x23a8>
   1c50c:	str	r0, [fp, #-76]	; 0xffffffb4
   1c510:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1c514:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c518:	cmp	r2, r3
   1c51c:	beq	1c878 <_start@@Base+0x8280>
   1c520:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1c524:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c528:	cmp	r2, r3
   1c52c:	beq	1c878 <_start@@Base+0x8280>
   1c530:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   1c534:	cmp	r3, #0
   1c538:	bne	1c550 <_start@@Base+0x7f58>
   1c53c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c540:	ldr	r3, [r3, #8]
   1c544:	and	r3, r3, #2
   1c548:	cmp	r3, #0
   1c54c:	beq	1c7f0 <_start@@Base+0x81f8>
   1c550:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c554:	ldr	r0, [r3]
   1c558:	mov	r3, #2
   1c55c:	mov	r2, #2
   1c560:	mov	r1, #2
   1c564:	bl	3255c <flatcc_builder_table_add@@Base>
   1c568:	str	r0, [fp, #-44]	; 0xffffffd4
   1c56c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c570:	cmp	r3, #0
   1c574:	beq	1c880 <_start@@Base+0x8288>
   1c578:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   1c57c:	mov	r1, r3
   1c580:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c584:	bl	14784 <_start@@Base+0x18c>
   1c588:	b	1c7f0 <_start@@Base+0x81f8>
   1c58c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c590:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c594:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c598:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c59c:	str	r0, [fp, #-76]	; 0xffffffb4
   1c5a0:	b	1c7f0 <_start@@Base+0x81f8>
   1c5a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c5a8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c5ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c5b0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c5b4:	str	r0, [fp, #-76]	; 0xffffffb4
   1c5b8:	b	1c7f0 <_start@@Base+0x81f8>
   1c5bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c5c0:	mov	r0, #0
   1c5c4:	mvn	r1, #255	; 0xff
   1c5c8:	and	r6, r2, r0
   1c5cc:	and	r7, r3, r1
   1c5d0:	add	r3, pc, #648	; 0x288
   1c5d4:	ldrd	r2, [r3]
   1c5d8:	cmp	r7, r3
   1c5dc:	cmpeq	r6, r2
   1c5e0:	bne	1c70c <_start@@Base+0x8114>
   1c5e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c5e8:	str	r3, [fp, #-40]	; 0xffffffd8
   1c5ec:	mov	r3, #3
   1c5f0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c5f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c5f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c5fc:	bl	15600 <_start@@Base+0x1008>
   1c600:	str	r0, [fp, #-76]	; 0xffffffb4
   1c604:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c608:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c60c:	cmp	r2, r3
   1c610:	beq	1c6f4 <_start@@Base+0x80fc>
   1c614:	mov	r2, #0
   1c618:	mov	r3, #0
   1c61c:	strd	r2, [fp, #-68]	; 0xffffffbc
   1c620:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c624:	str	r3, [fp, #-40]	; 0xffffffd8
   1c628:	sub	r3, fp, #68	; 0x44
   1c62c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c630:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c634:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c638:	bl	161c8 <_start@@Base+0x1bd0>
   1c63c:	str	r0, [fp, #-76]	; 0xffffffb4
   1c640:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c644:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c648:	cmp	r2, r3
   1c64c:	bne	1c69c <_start@@Base+0x80a4>
   1c650:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c654:	str	r3, [fp, #-40]	; 0xffffffd8
   1c658:	sub	r3, fp, #68	; 0x44
   1c65c:	str	r3, [sp]
   1c660:	ldr	r3, [pc, #516]	; 1c86c <_start@@Base+0x8274>
   1c664:	add	r3, pc, r3
   1c668:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c66c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c670:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c674:	bl	16cd8 <_start@@Base+0x26e0>
   1c678:	str	r0, [fp, #-76]	; 0xffffffb4
   1c67c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1c680:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c684:	cmp	r2, r3
   1c688:	beq	1c888 <_start@@Base+0x8290>
   1c68c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1c690:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c694:	cmp	r2, r3
   1c698:	beq	1c888 <_start@@Base+0x8290>
   1c69c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1c6a0:	orrs	r3, r2, r3
   1c6a4:	bne	1c6bc <_start@@Base+0x80c4>
   1c6a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c6ac:	ldr	r3, [r3, #8]
   1c6b0:	and	r3, r3, #2
   1c6b4:	cmp	r3, #0
   1c6b8:	beq	1c7f0 <_start@@Base+0x81f8>
   1c6bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c6c0:	ldr	r0, [r3]
   1c6c4:	mov	r3, #8
   1c6c8:	mov	r2, #8
   1c6cc:	mov	r1, #1
   1c6d0:	bl	3255c <flatcc_builder_table_add@@Base>
   1c6d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c6d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c6dc:	cmp	r3, #0
   1c6e0:	beq	1c890 <_start@@Base+0x8298>
   1c6e4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1c6e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c6ec:	bl	14a14 <_start@@Base+0x41c>
   1c6f0:	b	1c7f0 <_start@@Base+0x81f8>
   1c6f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c6f8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c6fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c700:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c704:	str	r0, [fp, #-76]	; 0xffffffb4
   1c708:	b	1c7f0 <_start@@Base+0x81f8>
   1c70c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c710:	mov	r0, #0
   1c714:	mov	r1, #0
   1c718:	movt	r1, #65535	; 0xffff
   1c71c:	and	r8, r2, r0
   1c720:	and	r9, r3, r1
   1c724:	mov	r2, #0
   1c728:	mov	r3, #0
   1c72c:	movt	r3, #26980	; 0x6964
   1c730:	cmp	r9, r3
   1c734:	cmpeq	r8, r2
   1c738:	bne	1c7dc <_start@@Base+0x81e4>
   1c73c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c740:	str	r3, [fp, #-40]	; 0xffffffd8
   1c744:	mov	r3, #2
   1c748:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c74c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c750:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c754:	bl	15600 <_start@@Base+0x1008>
   1c758:	str	r0, [fp, #-76]	; 0xffffffb4
   1c75c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c760:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c764:	cmp	r2, r3
   1c768:	beq	1c7c4 <_start@@Base+0x81cc>
   1c76c:	sub	r3, fp, #56	; 0x38
   1c770:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c774:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c778:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c77c:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   1c780:	str	r0, [fp, #-76]	; 0xffffffb4
   1c784:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c788:	cmp	r3, #0
   1c78c:	beq	1c898 <_start@@Base+0x82a0>
   1c790:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c794:	ldr	r3, [r3]
   1c798:	mov	r1, #0
   1c79c:	mov	r0, r3
   1c7a0:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1c7a4:	str	r0, [fp, #-48]	; 0xffffffd0
   1c7a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c7ac:	cmp	r3, #0
   1c7b0:	beq	1c898 <_start@@Base+0x82a0>
   1c7b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c7b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c7bc:	str	r2, [r3]
   1c7c0:	b	1c7f0 <_start@@Base+0x81f8>
   1c7c4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c7c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c7cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c7d0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c7d4:	str	r0, [fp, #-76]	; 0xffffffb4
   1c7d8:	b	1c7f0 <_start@@Base+0x81f8>
   1c7dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c7e0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c7e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c7e8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1c7ec:	str	r0, [fp, #-76]	; 0xffffffb4
   1c7f0:	sub	r3, fp, #52	; 0x34
   1c7f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c7f8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c7fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c800:	bl	15224 <_start@@Base+0xc2c>
   1c804:	str	r0, [fp, #-76]	; 0xffffffb4
   1c808:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c80c:	cmp	r3, #0
   1c810:	bne	1c414 <_start@@Base+0x7e1c>
   1c814:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c818:	ldr	r3, [r3, #20]
   1c81c:	cmp	r3, #0
   1c820:	bne	1c8a0 <_start@@Base+0x82a8>
   1c824:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c828:	ldr	r3, [r3]
   1c82c:	mov	r0, r3
   1c830:	bl	30b0c <flatcc_builder_end_table@@Base>
   1c834:	mov	r2, r0
   1c838:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c83c:	str	r2, [r3]
   1c840:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c844:	ldr	r3, [r3]
   1c848:	cmp	r3, #0
   1c84c:	beq	1c8a8 <_start@@Base+0x82b0>
   1c850:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c854:	b	1c8c4 <_start@@Base+0x82cc>
   1c858:	strvc	r0, [r0], #-0
   1c85c:	cmnvs	pc, #461373440	; 0x1b800000
   1c860:	andeq	r0, r0, r0
   1c864:	strbtvc	r6, [r1], -r0, lsl #24
   1c868:	andeq	r8, r4, r0, lsl #25
   1c86c:	andeq	r8, r4, r0, lsr #22
   1c870:	nop	{0}
   1c874:	b	1c8ac <_start@@Base+0x82b4>
   1c878:	nop	{0}
   1c87c:	b	1c8ac <_start@@Base+0x82b4>
   1c880:	nop	{0}
   1c884:	b	1c8ac <_start@@Base+0x82b4>
   1c888:	nop	{0}
   1c88c:	b	1c8ac <_start@@Base+0x82b4>
   1c890:	nop	{0}
   1c894:	b	1c8ac <_start@@Base+0x82b4>
   1c898:	nop	{0}
   1c89c:	b	1c8ac <_start@@Base+0x82b4>
   1c8a0:	nop	{0}
   1c8a4:	b	1c8ac <_start@@Base+0x82b4>
   1c8a8:	nop	{0}
   1c8ac:	mov	r3, #33	; 0x21
   1c8b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c8b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1c8b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1c8bc:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1c8c0:	mov	r3, r0
   1c8c4:	mov	r0, r3
   1c8c8:	sub	sp, fp, #28
   1c8cc:	ldrd	r4, [sp]
   1c8d0:	ldrd	r6, [sp, #8]
   1c8d4:	ldrd	r8, [sp, #16]
   1c8d8:	ldr	fp, [sp, #24]
   1c8dc:	add	sp, sp, #28
   1c8e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8e4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c8e8:	strd	r6, [sp, #8]
   1c8ec:	strd	r8, [sp, #16]
   1c8f0:	str	fp, [sp, #24]
   1c8f4:	str	lr, [sp, #28]
   1c8f8:	add	fp, sp, #28
   1c8fc:	sub	sp, sp, #80	; 0x50
   1c900:	str	r0, [fp, #-64]	; 0xffffffc0
   1c904:	str	r1, [fp, #-68]	; 0xffffffbc
   1c908:	str	r2, [fp, #-72]	; 0xffffffb8
   1c90c:	str	r3, [fp, #-76]	; 0xffffffb4
   1c910:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1c914:	mov	r2, #0
   1c918:	str	r2, [r3]
   1c91c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c920:	ldr	r3, [r3]
   1c924:	mov	r1, #4
   1c928:	mov	r0, r3
   1c92c:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1c930:	mov	r3, r0
   1c934:	cmp	r3, #0
   1c938:	bne	1cd84 <_start@@Base+0x878c>
   1c93c:	sub	r3, fp, #56	; 0x38
   1c940:	str	r3, [sp]
   1c944:	mov	r3, #1
   1c948:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c94c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c950:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1c954:	bl	3dc40 <flatcc_json_parser_prepare_unions@@Base>
   1c958:	mov	r2, r0
   1c95c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c960:	cmp	r3, r2
   1c964:	beq	1cd8c <_start@@Base+0x8794>
   1c968:	sub	r3, fp, #48	; 0x30
   1c96c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c970:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c974:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1c978:	bl	15130 <_start@@Base+0xb38>
   1c97c:	str	r0, [fp, #-68]	; 0xffffffbc
   1c980:	b	1cd1c <_start@@Base+0x8724>
   1c984:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c988:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c98c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1c990:	bl	14cf4 <_start@@Base+0x6fc>
   1c994:	str	r0, [fp, #-68]	; 0xffffffbc
   1c998:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1c99c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1c9a0:	bl	14ffc <_start@@Base+0xa04>
   1c9a4:	strd	r0, [fp, #-36]	; 0xffffffdc
   1c9a8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c9ac:	add	r1, pc, #1004	; 0x3ec
   1c9b0:	ldrd	r0, [r1]
   1c9b4:	cmp	r3, r1
   1c9b8:	cmpeq	r2, r0
   1c9bc:	bne	1cab4 <_start@@Base+0x84bc>
   1c9c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c9c4:	add	r3, r3, #8
   1c9c8:	str	r3, [fp, #-68]	; 0xffffffbc
   1c9cc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1c9d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1c9d4:	bl	14ffc <_start@@Base+0xa04>
   1c9d8:	strd	r0, [fp, #-36]	; 0xffffffdc
   1c9dc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1c9e0:	mov	r0, #0
   1c9e4:	mvn	r1, #0
   1c9e8:	and	r4, r2, r0
   1c9ec:	and	r5, r3, r1
   1c9f0:	add	r3, pc, #944	; 0x3b0
   1c9f4:	ldrd	r2, [r3]
   1c9f8:	cmp	r5, r3
   1c9fc:	cmpeq	r4, r2
   1ca00:	bne	1ca9c <_start@@Base+0x84a4>
   1ca04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ca08:	str	r3, [fp, #-40]	; 0xffffffd8
   1ca0c:	mov	r3, #4
   1ca10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ca14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ca18:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1ca1c:	bl	15600 <_start@@Base+0x1008>
   1ca20:	str	r0, [fp, #-68]	; 0xffffffbc
   1ca24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ca2c:	cmp	r2, r3
   1ca30:	beq	1ca84 <_start@@Base+0x848c>
   1ca34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ca38:	ldr	r2, [pc, #904]	; 1cdc8 <_start@@Base+0x87d0>
   1ca3c:	add	r2, pc, r2
   1ca40:	str	r2, [sp, #16]
   1ca44:	ldr	r2, [pc, #896]	; 1cdcc <_start@@Base+0x87d4>
   1ca48:	add	r2, pc, r2
   1ca4c:	str	r2, [sp, #12]
   1ca50:	ldr	r2, [pc, #888]	; 1cdd0 <_start@@Base+0x87d8>
   1ca54:	add	r2, pc, r2
   1ca58:	str	r2, [sp, #8]
   1ca5c:	str	r3, [sp, #4]
   1ca60:	mov	r3, #3
   1ca64:	str	r3, [sp]
   1ca68:	mov	r3, #0
   1ca6c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ca70:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1ca74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1ca78:	bl	3e5a8 <flatcc_json_parser_union_type_vector@@Base>
   1ca7c:	str	r0, [fp, #-68]	; 0xffffffbc
   1ca80:	b	1cd04 <_start@@Base+0x870c>
   1ca84:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ca88:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1ca8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1ca90:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ca94:	str	r0, [fp, #-68]	; 0xffffffbc
   1ca98:	b	1cd04 <_start@@Base+0x870c>
   1ca9c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1caa0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1caa4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1caa8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1caac:	str	r0, [fp, #-68]	; 0xffffffbc
   1cab0:	b	1cd04 <_start@@Base+0x870c>
   1cab4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cab8:	mvn	r0, #255	; 0xff
   1cabc:	mvn	r1, #0
   1cac0:	and	r6, r2, r0
   1cac4:	and	r7, r3, r1
   1cac8:	add	r3, pc, #736	; 0x2e0
   1cacc:	ldrd	r2, [r3]
   1cad0:	cmp	r7, r3
   1cad4:	cmpeq	r6, r2
   1cad8:	bne	1cb44 <_start@@Base+0x854c>
   1cadc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cae0:	str	r3, [fp, #-40]	; 0xffffffd8
   1cae4:	mov	r3, #7
   1cae8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1caec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1caf0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1caf4:	bl	15600 <_start@@Base+0x1008>
   1caf8:	str	r0, [fp, #-68]	; 0xffffffbc
   1cafc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb00:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cb04:	cmp	r2, r3
   1cb08:	beq	1cb4c <_start@@Base+0x8554>
   1cb0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb10:	ldr	r2, [pc, #700]	; 1cdd4 <_start@@Base+0x87dc>
   1cb14:	add	r2, pc, r2
   1cb18:	str	r2, [sp, #8]
   1cb1c:	str	r3, [sp, #4]
   1cb20:	mov	r3, #3
   1cb24:	str	r3, [sp]
   1cb28:	mov	r3, #0
   1cb2c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cb30:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cb34:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cb38:	bl	3e448 <flatcc_json_parser_union_vector@@Base>
   1cb3c:	str	r0, [fp, #-68]	; 0xffffffbc
   1cb40:	b	1cd04 <_start@@Base+0x870c>
   1cb44:	nop	{0}
   1cb48:	b	1cb50 <_start@@Base+0x8558>
   1cb4c:	nop	{0}
   1cb50:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cb54:	mov	r0, #0
   1cb58:	movt	r0, #65535	; 0xffff
   1cb5c:	mvn	r1, #0
   1cb60:	and	r8, r2, r0
   1cb64:	and	r9, r3, r1
   1cb68:	add	r3, pc, #584	; 0x248
   1cb6c:	ldrd	r2, [r3]
   1cb70:	cmp	r9, r3
   1cb74:	cmpeq	r8, r2
   1cb78:	bne	1cc1c <_start@@Base+0x8624>
   1cb7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cb80:	str	r3, [fp, #-40]	; 0xffffffd8
   1cb84:	mov	r3, #6
   1cb88:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cb8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cb90:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cb94:	bl	15600 <_start@@Base+0x1008>
   1cb98:	str	r0, [fp, #-68]	; 0xffffffbc
   1cb9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cba0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cba4:	cmp	r2, r3
   1cba8:	beq	1cc04 <_start@@Base+0x860c>
   1cbac:	sub	r3, fp, #52	; 0x34
   1cbb0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cbb4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cbb8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cbbc:	bl	1ce24 <_start@@Base+0x882c>
   1cbc0:	str	r0, [fp, #-68]	; 0xffffffbc
   1cbc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cbc8:	cmp	r3, #0
   1cbcc:	beq	1cd94 <_start@@Base+0x879c>
   1cbd0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cbd4:	ldr	r3, [r3]
   1cbd8:	mov	r1, #0
   1cbdc:	mov	r0, r3
   1cbe0:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1cbe4:	str	r0, [fp, #-44]	; 0xffffffd4
   1cbe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cbec:	cmp	r3, #0
   1cbf0:	beq	1cd94 <_start@@Base+0x879c>
   1cbf4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cbf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cbfc:	str	r2, [r3]
   1cc00:	b	1cd04 <_start@@Base+0x870c>
   1cc04:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cc08:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cc0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cc10:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1cc14:	str	r0, [fp, #-68]	; 0xffffffbc
   1cc18:	b	1cd04 <_start@@Base+0x870c>
   1cc1c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cc20:	mov	r0, #-16777216	; 0xff000000
   1cc24:	mvn	r1, #0
   1cc28:	and	ip, r2, r0
   1cc2c:	str	ip, [fp, #-84]	; 0xffffffac
   1cc30:	and	r3, r3, r1
   1cc34:	str	r3, [fp, #-80]	; 0xffffffb0
   1cc38:	add	r3, pc, #384	; 0x180
   1cc3c:	ldrd	r2, [r3]
   1cc40:	ldrd	r0, [fp, #-84]	; 0xffffffac
   1cc44:	cmp	r1, r3
   1cc48:	cmpeq	r0, r2
   1cc4c:	bne	1ccf0 <_start@@Base+0x86f8>
   1cc50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cc54:	str	r3, [fp, #-40]	; 0xffffffd8
   1cc58:	mov	r3, #5
   1cc5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cc60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cc64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cc68:	bl	15600 <_start@@Base+0x1008>
   1cc6c:	str	r0, [fp, #-68]	; 0xffffffbc
   1cc70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cc74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cc78:	cmp	r2, r3
   1cc7c:	beq	1ccd8 <_start@@Base+0x86e0>
   1cc80:	sub	r3, fp, #52	; 0x34
   1cc84:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cc88:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cc8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cc90:	bl	2515c <_start@@Base+0x10b64>
   1cc94:	str	r0, [fp, #-68]	; 0xffffffbc
   1cc98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc9c:	cmp	r3, #0
   1cca0:	beq	1cdd8 <_start@@Base+0x87e0>
   1cca4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cca8:	ldr	r3, [r3]
   1ccac:	mov	r1, #1
   1ccb0:	mov	r0, r3
   1ccb4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1ccb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1ccbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ccc0:	cmp	r3, #0
   1ccc4:	beq	1cdd8 <_start@@Base+0x87e0>
   1ccc8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cccc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ccd0:	str	r2, [r3]
   1ccd4:	b	1cd04 <_start@@Base+0x870c>
   1ccd8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ccdc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cce0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cce4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1cce8:	str	r0, [fp, #-68]	; 0xffffffbc
   1ccec:	b	1cd04 <_start@@Base+0x870c>
   1ccf0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ccf4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1ccf8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1ccfc:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1cd00:	str	r0, [fp, #-68]	; 0xffffffbc
   1cd04:	sub	r3, fp, #48	; 0x30
   1cd08:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cd0c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cd10:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cd14:	bl	15224 <_start@@Base+0xc2c>
   1cd18:	str	r0, [fp, #-68]	; 0xffffffbc
   1cd1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cd20:	cmp	r3, #0
   1cd24:	bne	1c984 <_start@@Base+0x838c>
   1cd28:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cd2c:	ldr	r3, [r3, #20]
   1cd30:	cmp	r3, #0
   1cd34:	bne	1cde0 <_start@@Base+0x87e8>
   1cd38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cd3c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cd40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cd44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cd48:	bl	3dd04 <flatcc_json_parser_finalize_unions@@Base>
   1cd4c:	str	r0, [fp, #-68]	; 0xffffffbc
   1cd50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cd54:	ldr	r3, [r3]
   1cd58:	mov	r0, r3
   1cd5c:	bl	30b0c <flatcc_builder_end_table@@Base>
   1cd60:	mov	r2, r0
   1cd64:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1cd68:	str	r2, [r3]
   1cd6c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1cd70:	ldr	r3, [r3]
   1cd74:	cmp	r3, #0
   1cd78:	beq	1cde8 <_start@@Base+0x87f0>
   1cd7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cd80:	b	1ce04 <_start@@Base+0x880c>
   1cd84:	nop	{0}
   1cd88:	b	1cdec <_start@@Base+0x87f4>
   1cd8c:	nop	{0}
   1cd90:	b	1cdec <_start@@Base+0x87f4>
   1cd94:	nop	{0}
   1cd98:	b	1cdec <_start@@Base+0x87f4>
   1cd9c:	nop	{0}
   1cda0:	cmnvs	lr, pc, asr r9
   1cda4:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1cda8:	andeq	r0, r0, r0
   1cdac:	ldrbtvc	r7, [r9], #-101	; 0xffffff9b
   1cdb0:	cmnvs	lr, r0, lsl #18
   1cdb4:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1cdb8:	ldmdbvs	r8!, {}^	; <UNPREDICTABLE>
   1cdbc:	rsbsvc	r6, r2, r6, ror #10
   1cdc0:	strvs	r0, [r0, #-0]
   1cdc4:	stclvs	6, cr7, [pc, #-420]!	; 1cc28 <_start@@Base+0x8630>
   1cdc8:			; <UNDEFINED> instruction: 0xffffcd88
   1cdcc:			; <UNDEFINED> instruction: 0xffffcc00
   1cdd0:	andeq	r8, r4, ip, lsr r7
   1cdd4:			; <UNDEFINED> instruction: 0xffffcb34
   1cdd8:	nop	{0}
   1cddc:	b	1cdec <_start@@Base+0x87f4>
   1cde0:	nop	{0}
   1cde4:	b	1cdec <_start@@Base+0x87f4>
   1cde8:	nop	{0}
   1cdec:	mov	r3, #33	; 0x21
   1cdf0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cdf4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1cdf8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cdfc:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1ce00:	mov	r3, r0
   1ce04:	mov	r0, r3
   1ce08:	sub	sp, fp, #28
   1ce0c:	ldrd	r4, [sp]
   1ce10:	ldrd	r6, [sp, #8]
   1ce14:	ldrd	r8, [sp, #16]
   1ce18:	ldr	fp, [sp, #24]
   1ce1c:	add	sp, sp, #28
   1ce20:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ce28:	strd	r6, [sp, #8]
   1ce2c:	strd	r8, [sp, #16]
   1ce30:	str	fp, [sp, #24]
   1ce34:	str	lr, [sp, #28]
   1ce38:	add	fp, sp, #28
   1ce3c:	sub	sp, sp, #40	; 0x28
   1ce40:	str	r0, [fp, #-56]	; 0xffffffc8
   1ce44:	str	r1, [fp, #-60]	; 0xffffffc4
   1ce48:	str	r2, [fp, #-64]	; 0xffffffc0
   1ce4c:	str	r3, [fp, #-68]	; 0xffffffbc
   1ce50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ce54:	mov	r2, #0
   1ce58:	str	r2, [r3]
   1ce5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce60:	ldr	r3, [r3]
   1ce64:	mov	r1, #3
   1ce68:	mov	r0, r3
   1ce6c:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1ce70:	mov	r3, r0
   1ce74:	cmp	r3, #0
   1ce78:	bne	1d214 <_start@@Base+0x8c1c>
   1ce7c:	sub	r3, fp, #48	; 0x30
   1ce80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ce84:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ce88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ce8c:	bl	15130 <_start@@Base+0xb38>
   1ce90:	str	r0, [fp, #-60]	; 0xffffffc4
   1ce94:	b	1d1c4 <_start@@Base+0x8bcc>
   1ce98:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ce9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cea0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cea4:	bl	14cf4 <_start@@Base+0x6fc>
   1cea8:	str	r0, [fp, #-60]	; 0xffffffc4
   1ceac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1ceb0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ceb4:	bl	14ffc <_start@@Base+0xa04>
   1ceb8:	strd	r0, [fp, #-36]	; 0xffffffdc
   1cebc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cec0:	add	r1, pc, #944	; 0x3b0
   1cec4:	ldrd	r0, [r1]
   1cec8:	cmp	r3, r1
   1cecc:	cmpeq	r2, r0
   1ced0:	bne	1d198 <_start@@Base+0x8ba0>
   1ced4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ced8:	add	r3, r3, #8
   1cedc:	str	r3, [fp, #-60]	; 0xffffffc4
   1cee0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cee4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1cee8:	bl	14ffc <_start@@Base+0xa04>
   1ceec:	strd	r0, [fp, #-36]	; 0xffffffdc
   1cef0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cef4:	add	r1, pc, #900	; 0x384
   1cef8:	ldrd	r0, [r1]
   1cefc:	cmp	r3, r1
   1cf00:	cmpeq	r2, r0
   1cf04:	bne	1d180 <_start@@Base+0x8b88>
   1cf08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cf0c:	add	r3, r3, #8
   1cf10:	str	r3, [fp, #-60]	; 0xffffffc4
   1cf14:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cf18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1cf1c:	bl	14ffc <_start@@Base+0xa04>
   1cf20:	strd	r0, [fp, #-36]	; 0xffffffdc
   1cf24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cf28:	mov	r0, #0
   1cf2c:	movt	r0, #65535	; 0xffff
   1cf30:	mvn	r1, #0
   1cf34:	and	r4, r2, r0
   1cf38:	and	r5, r3, r1
   1cf3c:	add	r3, pc, #836	; 0x344
   1cf40:	ldrd	r2, [r3]
   1cf44:	cmp	r5, r3
   1cf48:	cmpeq	r4, r2
   1cf4c:	bne	1cfd8 <_start@@Base+0x89e0>
   1cf50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cf54:	str	r3, [fp, #-40]	; 0xffffffd8
   1cf58:	mov	r3, #6
   1cf5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cf60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1cf64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cf68:	bl	15600 <_start@@Base+0x1008>
   1cf6c:	str	r0, [fp, #-60]	; 0xffffffc4
   1cf70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cf74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cf78:	cmp	r2, r3
   1cf7c:	beq	1d088 <_start@@Base+0x8a90>
   1cf80:	sub	r3, fp, #52	; 0x34
   1cf84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cf88:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1cf8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cf90:	bl	1df80 <_start@@Base+0x9988>
   1cf94:	str	r0, [fp, #-60]	; 0xffffffc4
   1cf98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cf9c:	cmp	r3, #0
   1cfa0:	beq	1d21c <_start@@Base+0x8c24>
   1cfa4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cfa8:	ldr	r3, [r3]
   1cfac:	mov	r1, #1
   1cfb0:	mov	r0, r3
   1cfb4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1cfb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1cfbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cfc0:	cmp	r3, #0
   1cfc4:	beq	1d21c <_start@@Base+0x8c24>
   1cfc8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cfcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cfd0:	str	r2, [r3]
   1cfd4:	b	1d1ac <_start@@Base+0x8bb4>
   1cfd8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1cfdc:	mov	r0, #-16777216	; 0xff000000
   1cfe0:	mvn	r1, #0
   1cfe4:	and	r6, r2, r0
   1cfe8:	and	r7, r3, r1
   1cfec:	add	r3, pc, #668	; 0x29c
   1cff0:	ldrd	r2, [r3]
   1cff4:	cmp	r7, r3
   1cff8:	cmpeq	r6, r2
   1cffc:	bne	1d090 <_start@@Base+0x8a98>
   1d000:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d004:	str	r3, [fp, #-40]	; 0xffffffd8
   1d008:	mov	r3, #5
   1d00c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d010:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d014:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d018:	bl	15600 <_start@@Base+0x1008>
   1d01c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d020:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d024:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d028:	cmp	r2, r3
   1d02c:	beq	1d098 <_start@@Base+0x8aa0>
   1d030:	sub	r3, fp, #52	; 0x34
   1d034:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d038:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d03c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d040:	bl	1d2a0 <_start@@Base+0x8ca8>
   1d044:	str	r0, [fp, #-60]	; 0xffffffc4
   1d048:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d04c:	cmp	r3, #0
   1d050:	beq	1d224 <_start@@Base+0x8c2c>
   1d054:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d058:	ldr	r3, [r3]
   1d05c:	mov	r1, #0
   1d060:	mov	r0, r3
   1d064:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1d068:	str	r0, [fp, #-44]	; 0xffffffd4
   1d06c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d070:	cmp	r3, #0
   1d074:	beq	1d224 <_start@@Base+0x8c2c>
   1d078:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d07c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d080:	str	r2, [r3]
   1d084:	b	1d1ac <_start@@Base+0x8bb4>
   1d088:	nop	{0}
   1d08c:	b	1d09c <_start@@Base+0x8aa4>
   1d090:	nop	{0}
   1d094:	b	1d09c <_start@@Base+0x8aa4>
   1d098:	nop	{0}
   1d09c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d0a0:	mov	r0, #0
   1d0a4:	movt	r0, #65535	; 0xffff
   1d0a8:	mvn	r1, #0
   1d0ac:	and	r8, r2, r0
   1d0b0:	and	r9, r3, r1
   1d0b4:	add	r3, pc, #476	; 0x1dc
   1d0b8:	ldrd	r2, [r3]
   1d0bc:	cmp	r9, r3
   1d0c0:	cmpeq	r8, r2
   1d0c4:	bne	1d168 <_start@@Base+0x8b70>
   1d0c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d0cc:	str	r3, [fp, #-40]	; 0xffffffd8
   1d0d0:	mov	r3, #6
   1d0d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d0d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d0dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d0e0:	bl	15600 <_start@@Base+0x1008>
   1d0e4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d0e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d0ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d0f0:	cmp	r2, r3
   1d0f4:	beq	1d150 <_start@@Base+0x8b58>
   1d0f8:	sub	r3, fp, #52	; 0x34
   1d0fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d100:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d104:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d108:	bl	1e3f0 <_start@@Base+0x9df8>
   1d10c:	str	r0, [fp, #-60]	; 0xffffffc4
   1d110:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d114:	cmp	r3, #0
   1d118:	beq	1d22c <_start@@Base+0x8c34>
   1d11c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d120:	ldr	r3, [r3]
   1d124:	mov	r1, #2
   1d128:	mov	r0, r3
   1d12c:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1d130:	str	r0, [fp, #-44]	; 0xffffffd4
   1d134:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d138:	cmp	r3, #0
   1d13c:	beq	1d22c <_start@@Base+0x8c34>
   1d140:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d144:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d148:	str	r2, [r3]
   1d14c:	b	1d1ac <_start@@Base+0x8bb4>
   1d150:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d154:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d158:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d15c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d160:	str	r0, [fp, #-60]	; 0xffffffc4
   1d164:	b	1d1ac <_start@@Base+0x8bb4>
   1d168:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d16c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d170:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d174:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d178:	str	r0, [fp, #-60]	; 0xffffffc4
   1d17c:	b	1d1ac <_start@@Base+0x8bb4>
   1d180:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d184:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d188:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d18c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d190:	str	r0, [fp, #-60]	; 0xffffffc4
   1d194:	b	1d1ac <_start@@Base+0x8bb4>
   1d198:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d19c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d1a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d1a4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d1a8:	str	r0, [fp, #-60]	; 0xffffffc4
   1d1ac:	sub	r3, fp, #48	; 0x30
   1d1b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d1b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d1b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d1bc:	bl	15224 <_start@@Base+0xc2c>
   1d1c0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d1c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d1c8:	cmp	r3, #0
   1d1cc:	bne	1ce98 <_start@@Base+0x88a0>
   1d1d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d1d4:	ldr	r3, [r3, #20]
   1d1d8:	cmp	r3, #0
   1d1dc:	bne	1d234 <_start@@Base+0x8c3c>
   1d1e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d1e4:	ldr	r3, [r3]
   1d1e8:	mov	r0, r3
   1d1ec:	bl	30b0c <flatcc_builder_end_table@@Base>
   1d1f0:	mov	r2, r0
   1d1f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d1f8:	str	r2, [r3]
   1d1fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d200:	ldr	r3, [r3]
   1d204:	cmp	r3, #0
   1d208:	beq	1d23c <_start@@Base+0x8c44>
   1d20c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d210:	b	1d258 <_start@@Base+0x8c60>
   1d214:	nop	{0}
   1d218:	b	1d240 <_start@@Base+0x8c48>
   1d21c:	nop	{0}
   1d220:	b	1d240 <_start@@Base+0x8c48>
   1d224:	nop	{0}
   1d228:	b	1d240 <_start@@Base+0x8c48>
   1d22c:	nop	{0}
   1d230:	b	1d240 <_start@@Base+0x8c48>
   1d234:	nop	{0}
   1d238:	b	1d240 <_start@@Base+0x8c48>
   1d23c:	nop	{0}
   1d240:	mov	r3, #33	; 0x21
   1d244:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d248:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d24c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d250:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1d254:	mov	r3, r0
   1d258:	mov	r0, r3
   1d25c:	sub	sp, fp, #28
   1d260:	ldrd	r4, [sp]
   1d264:	ldrd	r6, [sp, #8]
   1d268:	ldrd	r8, [sp, #16]
   1d26c:	ldr	fp, [sp, #24]
   1d270:	add	sp, sp, #28
   1d274:	pop	{pc}		; (ldr pc, [sp], #4)
   1d278:	bvs	1cf9038 <__bss_end__@@Base+0x1c93b8c>
   1d27c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1d280:	ldmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
   1d284:	rsbsvc	r6, r2, r6, ror #10
   1d288:	ldrvs	r0, [r2, -r0]!
   1d28c:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1d290:	strvs	r0, [r0, -r0]
   1d294:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1d298:	ldrvs	r0, [r3, -r0]!
   1d29c:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1d2a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d2a4:	strd	r6, [sp, #8]
   1d2a8:	strd	r8, [sp, #16]
   1d2ac:	str	fp, [sp, #24]
   1d2b0:	str	lr, [sp, #28]
   1d2b4:	add	fp, sp, #28
   1d2b8:	sub	sp, sp, #120	; 0x78
   1d2bc:	str	r0, [fp, #-104]	; 0xffffff98
   1d2c0:	str	r1, [fp, #-108]	; 0xffffff94
   1d2c4:	str	r2, [fp, #-112]	; 0xffffff90
   1d2c8:	str	r3, [fp, #-116]	; 0xffffff8c
   1d2cc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1d2d0:	mov	r2, #0
   1d2d4:	str	r2, [r3]
   1d2d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d2dc:	ldr	r3, [r3]
   1d2e0:	mov	r1, #9
   1d2e4:	mov	r0, r3
   1d2e8:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1d2ec:	mov	r3, r0
   1d2f0:	cmp	r3, #0
   1d2f4:	bne	1dea8 <_start@@Base+0x98b0>
   1d2f8:	sub	r3, fp, #52	; 0x34
   1d2fc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d300:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d304:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d308:	bl	15130 <_start@@Base+0xb38>
   1d30c:	str	r0, [fp, #-108]	; 0xffffff94
   1d310:	b	1de58 <_start@@Base+0x9860>
   1d314:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d318:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d31c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d320:	bl	14cf4 <_start@@Base+0x6fc>
   1d324:	str	r0, [fp, #-108]	; 0xffffff94
   1d328:	ldr	r1, [fp, #-112]	; 0xffffff90
   1d32c:	ldr	r0, [fp, #-108]	; 0xffffff94
   1d330:	bl	14ffc <_start@@Base+0xa04>
   1d334:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d338:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d33c:	add	r3, pc, #932	; 0x3a4
   1d340:	ldrd	r2, [r3]
   1d344:	cmp	r1, r3
   1d348:	cmpeq	r0, r2
   1d34c:	bhi	1d7ec <_start@@Base+0x91f4>
   1d350:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d354:	add	r3, pc, #916	; 0x394
   1d358:	ldrd	r2, [r3]
   1d35c:	cmp	r1, r3
   1d360:	cmpeq	r0, r2
   1d364:	bne	1d4e4 <_start@@Base+0x8eec>
   1d368:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d36c:	add	r3, r3, #8
   1d370:	str	r3, [fp, #-108]	; 0xffffff94
   1d374:	ldr	r1, [fp, #-112]	; 0xffffff90
   1d378:	ldr	r0, [fp, #-108]	; 0xffffff94
   1d37c:	bl	14ffc <_start@@Base+0xa04>
   1d380:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d384:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d388:	mov	r2, #0
   1d38c:	mov	r3, #-16777216	; 0xff000000
   1d390:	and	r4, r0, r2
   1d394:	and	r5, r1, r3
   1d398:	cmp	r5, #889192448	; 0x35000000
   1d39c:	cmpeq	r4, #0
   1d3a0:	bne	1d4cc <_start@@Base+0x8ed4>
   1d3a4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d3a8:	str	r3, [fp, #-40]	; 0xffffffd8
   1d3ac:	mov	r3, #1
   1d3b0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d3b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d3b8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d3bc:	bl	15600 <_start@@Base+0x1008>
   1d3c0:	str	r0, [fp, #-108]	; 0xffffff94
   1d3c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d3c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d3cc:	cmp	r2, r3
   1d3d0:	beq	1d4b4 <_start@@Base+0x8ebc>
   1d3d4:	mov	r3, #0
   1d3d8:	str	r3, [fp, #-60]	; 0xffffffc4
   1d3dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d3e0:	str	r3, [fp, #-40]	; 0xffffffd8
   1d3e4:	sub	r3, fp, #60	; 0x3c
   1d3e8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d3ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d3f0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d3f4:	bl	15f34 <_start@@Base+0x193c>
   1d3f8:	str	r0, [fp, #-108]	; 0xffffff94
   1d3fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d400:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d404:	cmp	r2, r3
   1d408:	bne	1d458 <_start@@Base+0x8e60>
   1d40c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d410:	str	r3, [fp, #-40]	; 0xffffffd8
   1d414:	sub	r3, fp, #60	; 0x3c
   1d418:	str	r3, [sp]
   1d41c:	ldr	r3, [pc, #732]	; 1d700 <_start@@Base+0x9108>
   1d420:	add	r3, pc, r3
   1d424:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d428:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d42c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d430:	bl	16808 <_start@@Base+0x2210>
   1d434:	str	r0, [fp, #-108]	; 0xffffff94
   1d438:	ldr	r2, [fp, #-108]	; 0xffffff94
   1d43c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d440:	cmp	r2, r3
   1d444:	beq	1deb0 <_start@@Base+0x98b8>
   1d448:	ldr	r2, [fp, #-108]	; 0xffffff94
   1d44c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1d450:	cmp	r2, r3
   1d454:	beq	1deb0 <_start@@Base+0x98b8>
   1d458:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d45c:	cmp	r3, #0
   1d460:	bne	1d478 <_start@@Base+0x8e80>
   1d464:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d468:	ldr	r3, [r3, #8]
   1d46c:	and	r3, r3, #2
   1d470:	cmp	r3, #0
   1d474:	beq	1de40 <_start@@Base+0x9848>
   1d478:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d47c:	ldr	r0, [r3]
   1d480:	mov	r3, #4
   1d484:	mov	r2, #4
   1d488:	mov	r1, #1
   1d48c:	bl	3255c <flatcc_builder_table_add@@Base>
   1d490:	str	r0, [fp, #-44]	; 0xffffffd4
   1d494:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d498:	cmp	r3, #0
   1d49c:	beq	1deb8 <_start@@Base+0x98c0>
   1d4a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d4a4:	mov	r1, r3
   1d4a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d4ac:	bl	147f4 <_start@@Base+0x1fc>
   1d4b0:	b	1de40 <_start@@Base+0x9848>
   1d4b4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d4b8:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d4bc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d4c0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d4c4:	str	r0, [fp, #-108]	; 0xffffff94
   1d4c8:	b	1de40 <_start@@Base+0x9848>
   1d4cc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d4d0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d4d4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d4d8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d4dc:	str	r0, [fp, #-108]	; 0xffffff94
   1d4e0:	b	1de40 <_start@@Base+0x9848>
   1d4e4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d4e8:	mov	r2, #0
   1d4ec:	mvn	r3, #0
   1d4f0:	and	r6, r0, r2
   1d4f4:	and	r7, r1, r3
   1d4f8:	mov	r2, #0
   1d4fc:	movw	r3, #24929	; 0x6161
   1d500:	movt	r3, #24929	; 0x6161
   1d504:	cmp	r7, r3
   1d508:	cmpeq	r6, r2
   1d50c:	bne	1d598 <_start@@Base+0x8fa0>
   1d510:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d514:	str	r3, [fp, #-40]	; 0xffffffd8
   1d518:	mov	r3, #4
   1d51c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d520:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d524:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d528:	bl	15600 <_start@@Base+0x1008>
   1d52c:	str	r0, [fp, #-108]	; 0xffffff94
   1d530:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d534:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d538:	cmp	r2, r3
   1d53c:	beq	1d5a0 <_start@@Base+0x8fa8>
   1d540:	sub	r3, fp, #56	; 0x38
   1d544:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d548:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d54c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d550:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   1d554:	str	r0, [fp, #-108]	; 0xffffff94
   1d558:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d55c:	cmp	r3, #0
   1d560:	beq	1dec0 <_start@@Base+0x98c8>
   1d564:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d568:	ldr	r3, [r3]
   1d56c:	mov	r1, #0
   1d570:	mov	r0, r3
   1d574:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1d578:	str	r0, [fp, #-48]	; 0xffffffd0
   1d57c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d580:	cmp	r3, #0
   1d584:	beq	1dec0 <_start@@Base+0x98c8>
   1d588:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d58c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d590:	str	r2, [r3]
   1d594:	b	1de40 <_start@@Base+0x9848>
   1d598:	nop	{0}
   1d59c:	b	1d5a4 <_start@@Base+0x8fac>
   1d5a0:	nop	{0}
   1d5a4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d5a8:	add	r3, pc, #328	; 0x148
   1d5ac:	ldrd	r2, [r3]
   1d5b0:	cmp	r1, r3
   1d5b4:	cmpeq	r0, r2
   1d5b8:	bne	1d708 <_start@@Base+0x9110>
   1d5bc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d5c0:	str	r3, [fp, #-40]	; 0xffffffd8
   1d5c4:	mov	r3, #8
   1d5c8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d5cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d5d0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d5d4:	bl	15600 <_start@@Base+0x1008>
   1d5d8:	str	r0, [fp, #-108]	; 0xffffff94
   1d5dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d5e0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d5e4:	cmp	r2, r3
   1d5e8:	beq	1d6cc <_start@@Base+0x90d4>
   1d5ec:	mov	r2, #0
   1d5f0:	mov	r3, #0
   1d5f4:	strd	r2, [fp, #-68]	; 0xffffffbc
   1d5f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d5fc:	str	r3, [fp, #-40]	; 0xffffffd8
   1d600:	sub	r3, fp, #68	; 0x44
   1d604:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d608:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d60c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d610:	bl	161c8 <_start@@Base+0x1bd0>
   1d614:	str	r0, [fp, #-108]	; 0xffffff94
   1d618:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d61c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d620:	cmp	r2, r3
   1d624:	bne	1d674 <_start@@Base+0x907c>
   1d628:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d62c:	str	r3, [fp, #-40]	; 0xffffffd8
   1d630:	sub	r3, fp, #68	; 0x44
   1d634:	str	r3, [sp]
   1d638:	ldr	r3, [pc, #196]	; 1d704 <_start@@Base+0x910c>
   1d63c:	add	r3, pc, r3
   1d640:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d644:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d648:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d64c:	bl	16cd8 <_start@@Base+0x26e0>
   1d650:	str	r0, [fp, #-108]	; 0xffffff94
   1d654:	ldr	r2, [fp, #-108]	; 0xffffff94
   1d658:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d65c:	cmp	r2, r3
   1d660:	beq	1dec8 <_start@@Base+0x98d0>
   1d664:	ldr	r2, [fp, #-108]	; 0xffffff94
   1d668:	ldr	r3, [fp, #-112]	; 0xffffff90
   1d66c:	cmp	r2, r3
   1d670:	beq	1dec8 <_start@@Base+0x98d0>
   1d674:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1d678:	orrs	r3, r2, r3
   1d67c:	bne	1d694 <_start@@Base+0x909c>
   1d680:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d684:	ldr	r3, [r3, #8]
   1d688:	and	r3, r3, #2
   1d68c:	cmp	r3, #0
   1d690:	beq	1de40 <_start@@Base+0x9848>
   1d694:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d698:	ldr	r0, [r3]
   1d69c:	mov	r3, #8
   1d6a0:	mov	r2, #8
   1d6a4:	mov	r1, #3
   1d6a8:	bl	3255c <flatcc_builder_table_add@@Base>
   1d6ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1d6b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d6b4:	cmp	r3, #0
   1d6b8:	beq	1ded0 <_start@@Base+0x98d8>
   1d6bc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1d6c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d6c4:	bl	14a14 <_start@@Base+0x41c>
   1d6c8:	b	1de40 <_start@@Base+0x9848>
   1d6cc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d6d0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d6d4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d6d8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d6dc:	str	r0, [fp, #-108]	; 0xffffff94
   1d6e0:	b	1de40 <_start@@Base+0x9848>
   1d6e4:	nop	{0}
   1d6e8:			; <UNDEFINED> instruction: 0xffffffff
   1d6ec:	cmnvs	r3, #-2013265919	; 0x88000001
   1d6f0:	teqcc	r2, r4, lsr r3
   1d6f4:	cmnvs	r1, r1, ror #2
   1d6f8:	teqcc	r2, r4, lsr r3
   1d6fc:	rsbvs	r6, r2, #536870918	; 0x20000006
   1d700:	andeq	r7, r4, r0, lsl #27
   1d704:	andeq	r7, r4, r0, ror fp
   1d708:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d70c:	mov	r2, #0
   1d710:	mvn	r3, #0
   1d714:	and	r8, r0, r2
   1d718:	and	r9, r1, r3
   1d71c:	mov	r2, #0
   1d720:	movw	r3, #25186	; 0x6262
   1d724:	movt	r3, #25186	; 0x6262
   1d728:	cmp	r9, r3
   1d72c:	cmpeq	r8, r2
   1d730:	bne	1d7d4 <_start@@Base+0x91dc>
   1d734:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d738:	str	r3, [fp, #-40]	; 0xffffffd8
   1d73c:	mov	r3, #4
   1d740:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d744:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d748:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d74c:	bl	15600 <_start@@Base+0x1008>
   1d750:	str	r0, [fp, #-108]	; 0xffffff94
   1d754:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d758:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d75c:	cmp	r2, r3
   1d760:	beq	1d7bc <_start@@Base+0x91c4>
   1d764:	sub	r3, fp, #56	; 0x38
   1d768:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d76c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d770:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d774:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   1d778:	str	r0, [fp, #-108]	; 0xffffff94
   1d77c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d780:	cmp	r3, #0
   1d784:	beq	1ded8 <_start@@Base+0x98e0>
   1d788:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d78c:	ldr	r3, [r3]
   1d790:	mov	r1, #2
   1d794:	mov	r0, r3
   1d798:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1d79c:	str	r0, [fp, #-48]	; 0xffffffd0
   1d7a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d7a4:	cmp	r3, #0
   1d7a8:	beq	1ded8 <_start@@Base+0x98e0>
   1d7ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d7b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d7b4:	str	r2, [r3]
   1d7b8:	b	1de40 <_start@@Base+0x9848>
   1d7bc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d7c0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d7c4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d7c8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d7cc:	str	r0, [fp, #-108]	; 0xffffff94
   1d7d0:	b	1de40 <_start@@Base+0x9848>
   1d7d4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d7d8:	ldr	r1, [fp, #-108]	; 0xffffff94
   1d7dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d7e0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1d7e4:	str	r0, [fp, #-108]	; 0xffffff94
   1d7e8:	b	1de40 <_start@@Base+0x9848>
   1d7ec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d7f0:	add	r3, pc, #880	; 0x370
   1d7f4:	ldrd	r2, [r3]
   1d7f8:	cmp	r1, r3
   1d7fc:	cmpeq	r0, r2
   1d800:	bne	1da9c <_start@@Base+0x94a4>
   1d804:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d808:	str	r3, [fp, #-40]	; 0xffffffd8
   1d80c:	mov	r3, #8
   1d810:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d814:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d818:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d81c:	bl	15600 <_start@@Base+0x1008>
   1d820:	str	r0, [fp, #-108]	; 0xffffff94
   1d824:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d828:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d82c:	cmp	r2, r3
   1d830:	beq	1d914 <_start@@Base+0x931c>
   1d834:	mov	r2, #0
   1d838:	mov	r3, #0
   1d83c:	strd	r2, [fp, #-76]	; 0xffffffb4
   1d840:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d844:	str	r3, [fp, #-40]	; 0xffffffd8
   1d848:	sub	r3, fp, #76	; 0x4c
   1d84c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d850:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d854:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d858:	bl	161c8 <_start@@Base+0x1bd0>
   1d85c:	str	r0, [fp, #-108]	; 0xffffff94
   1d860:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d864:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d868:	cmp	r2, r3
   1d86c:	bne	1d8bc <_start@@Base+0x92c4>
   1d870:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d874:	str	r3, [fp, #-40]	; 0xffffffd8
   1d878:	sub	r3, fp, #76	; 0x4c
   1d87c:	str	r3, [sp]
   1d880:	ldr	r3, [pc, #744]	; 1db70 <_start@@Base+0x9578>
   1d884:	add	r3, pc, r3
   1d888:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d88c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d890:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d894:	bl	16cd8 <_start@@Base+0x26e0>
   1d898:	str	r0, [fp, #-108]	; 0xffffff94
   1d89c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1d8a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d8a4:	cmp	r2, r3
   1d8a8:	beq	1dee0 <_start@@Base+0x98e8>
   1d8ac:	ldr	r2, [fp, #-108]	; 0xffffff94
   1d8b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1d8b4:	cmp	r2, r3
   1d8b8:	beq	1dee0 <_start@@Base+0x98e8>
   1d8bc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1d8c0:	orrs	r3, r2, r3
   1d8c4:	bne	1d8dc <_start@@Base+0x92e4>
   1d8c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d8cc:	ldr	r3, [r3, #8]
   1d8d0:	and	r3, r3, #2
   1d8d4:	cmp	r3, #0
   1d8d8:	beq	1de40 <_start@@Base+0x9848>
   1d8dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d8e0:	ldr	r0, [r3]
   1d8e4:	mov	r3, #8
   1d8e8:	mov	r2, #8
   1d8ec:	mov	r1, #5
   1d8f0:	bl	3255c <flatcc_builder_table_add@@Base>
   1d8f4:	str	r0, [fp, #-44]	; 0xffffffd4
   1d8f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d8fc:	cmp	r3, #0
   1d900:	beq	1dee8 <_start@@Base+0x98f0>
   1d904:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1d908:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d90c:	bl	14a14 <_start@@Base+0x41c>
   1d910:	b	1de40 <_start@@Base+0x9848>
   1d914:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d918:	add	r3, r3, #8
   1d91c:	str	r3, [fp, #-108]	; 0xffffff94
   1d920:	ldr	r1, [fp, #-112]	; 0xffffff90
   1d924:	ldr	r0, [fp, #-108]	; 0xffffff94
   1d928:	bl	14ffc <_start@@Base+0xa04>
   1d92c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d930:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1d934:	mov	r2, #0
   1d938:	mov	r3, #-16777216	; 0xff000000
   1d93c:	and	ip, r0, r2
   1d940:	str	ip, [fp, #-124]	; 0xffffff84
   1d944:	and	r3, r1, r3
   1d948:	str	r3, [fp, #-120]	; 0xffffff88
   1d94c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   1d950:	cmp	r3, #889192448	; 0x35000000
   1d954:	cmpeq	r2, #0
   1d958:	bne	1da84 <_start@@Base+0x948c>
   1d95c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d960:	str	r3, [fp, #-40]	; 0xffffffd8
   1d964:	mov	r3, #1
   1d968:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d96c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d970:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d974:	bl	15600 <_start@@Base+0x1008>
   1d978:	str	r0, [fp, #-108]	; 0xffffff94
   1d97c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d980:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d984:	cmp	r2, r3
   1d988:	beq	1da6c <_start@@Base+0x9474>
   1d98c:	mov	r3, #0
   1d990:	str	r3, [fp, #-80]	; 0xffffffb0
   1d994:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d998:	str	r3, [fp, #-40]	; 0xffffffd8
   1d99c:	sub	r3, fp, #80	; 0x50
   1d9a0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d9a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d9a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d9ac:	bl	15f34 <_start@@Base+0x193c>
   1d9b0:	str	r0, [fp, #-108]	; 0xffffff94
   1d9b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d9b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d9bc:	cmp	r2, r3
   1d9c0:	bne	1da10 <_start@@Base+0x9418>
   1d9c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d9c8:	str	r3, [fp, #-40]	; 0xffffffd8
   1d9cc:	sub	r3, fp, #80	; 0x50
   1d9d0:	str	r3, [sp]
   1d9d4:	ldr	r3, [pc, #408]	; 1db74 <_start@@Base+0x957c>
   1d9d8:	add	r3, pc, r3
   1d9dc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1d9e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d9e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d9e8:	bl	16808 <_start@@Base+0x2210>
   1d9ec:	str	r0, [fp, #-108]	; 0xffffff94
   1d9f0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1d9f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d9f8:	cmp	r2, r3
   1d9fc:	beq	1def0 <_start@@Base+0x98f8>
   1da00:	ldr	r2, [fp, #-108]	; 0xffffff94
   1da04:	ldr	r3, [fp, #-112]	; 0xffffff90
   1da08:	cmp	r2, r3
   1da0c:	beq	1def0 <_start@@Base+0x98f8>
   1da10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1da14:	cmp	r3, #0
   1da18:	bne	1da30 <_start@@Base+0x9438>
   1da1c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1da20:	ldr	r3, [r3, #8]
   1da24:	and	r3, r3, #2
   1da28:	cmp	r3, #0
   1da2c:	beq	1de40 <_start@@Base+0x9848>
   1da30:	ldr	r3, [fp, #-104]	; 0xffffff98
   1da34:	ldr	r0, [r3]
   1da38:	mov	r3, #4
   1da3c:	mov	r2, #4
   1da40:	mov	r1, #6
   1da44:	bl	3255c <flatcc_builder_table_add@@Base>
   1da48:	str	r0, [fp, #-44]	; 0xffffffd4
   1da4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1da50:	cmp	r3, #0
   1da54:	beq	1def8 <_start@@Base+0x9900>
   1da58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1da5c:	mov	r1, r3
   1da60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1da64:	bl	147f4 <_start@@Base+0x1fc>
   1da68:	b	1de40 <_start@@Base+0x9848>
   1da6c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1da70:	ldr	r1, [fp, #-108]	; 0xffffff94
   1da74:	ldr	r0, [fp, #-104]	; 0xffffff98
   1da78:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1da7c:	str	r0, [fp, #-108]	; 0xffffff94
   1da80:	b	1de40 <_start@@Base+0x9848>
   1da84:	ldr	r2, [fp, #-112]	; 0xffffff90
   1da88:	ldr	r1, [fp, #-108]	; 0xffffff94
   1da8c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1da90:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1da94:	str	r0, [fp, #-108]	; 0xffffff94
   1da98:	b	1de40 <_start@@Base+0x9848>
   1da9c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1daa0:	mov	r2, #0
   1daa4:	mvn	r3, #0
   1daa8:	and	ip, r0, r2
   1daac:	str	ip, [fp, #-132]	; 0xffffff7c
   1dab0:	and	r3, r1, r3
   1dab4:	str	r3, [fp, #-128]	; 0xffffff80
   1dab8:	mov	r2, #0
   1dabc:	movw	r3, #25443	; 0x6363
   1dac0:	movt	r3, #25443	; 0x6363
   1dac4:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   1dac8:	cmp	r1, r3
   1dacc:	cmpeq	r0, r2
   1dad0:	bne	1db5c <_start@@Base+0x9564>
   1dad4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dad8:	str	r3, [fp, #-40]	; 0xffffffd8
   1dadc:	mov	r3, #4
   1dae0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dae4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dae8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1daec:	bl	15600 <_start@@Base+0x1008>
   1daf0:	str	r0, [fp, #-108]	; 0xffffff94
   1daf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1daf8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dafc:	cmp	r2, r3
   1db00:	beq	1db78 <_start@@Base+0x9580>
   1db04:	sub	r3, fp, #56	; 0x38
   1db08:	ldr	r2, [fp, #-112]	; 0xffffff90
   1db0c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1db10:	ldr	r0, [fp, #-104]	; 0xffffff98
   1db14:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   1db18:	str	r0, [fp, #-108]	; 0xffffff94
   1db1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1db20:	cmp	r3, #0
   1db24:	beq	1df00 <_start@@Base+0x9908>
   1db28:	ldr	r3, [fp, #-104]	; 0xffffff98
   1db2c:	ldr	r3, [r3]
   1db30:	mov	r1, #4
   1db34:	mov	r0, r3
   1db38:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1db3c:	str	r0, [fp, #-48]	; 0xffffffd0
   1db40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1db44:	cmp	r3, #0
   1db48:	beq	1df00 <_start@@Base+0x9908>
   1db4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1db50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1db54:	str	r2, [r3]
   1db58:	b	1de40 <_start@@Base+0x9848>
   1db5c:	nop	{0}
   1db60:	b	1db7c <_start@@Base+0x9584>
   1db64:	nop	{0}
   1db68:	teqcc	r2, r4, lsr r3
   1db6c:	cmnvs	r3, #-1946157055	; 0x8c000001
   1db70:	andeq	r7, r4, r4, lsr r9
   1db74:	andeq	r7, r4, ip, ror #15
   1db78:	nop	{0}
   1db7c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1db80:	add	r3, pc, #1000	; 0x3e8
   1db84:	ldrd	r2, [r3]
   1db88:	cmp	r1, r3
   1db8c:	cmpeq	r0, r2
   1db90:	bne	1de2c <_start@@Base+0x9834>
   1db94:	ldr	r3, [fp, #-108]	; 0xffffff94
   1db98:	str	r3, [fp, #-40]	; 0xffffffd8
   1db9c:	mov	r3, #8
   1dba0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dba4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dba8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1dbac:	bl	15600 <_start@@Base+0x1008>
   1dbb0:	str	r0, [fp, #-108]	; 0xffffff94
   1dbb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dbb8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dbbc:	cmp	r2, r3
   1dbc0:	beq	1dca4 <_start@@Base+0x96ac>
   1dbc4:	mov	r2, #0
   1dbc8:	mov	r3, #0
   1dbcc:	strd	r2, [fp, #-92]	; 0xffffffa4
   1dbd0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dbd4:	str	r3, [fp, #-40]	; 0xffffffd8
   1dbd8:	sub	r3, fp, #92	; 0x5c
   1dbdc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dbe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dbe4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1dbe8:	bl	161c8 <_start@@Base+0x1bd0>
   1dbec:	str	r0, [fp, #-108]	; 0xffffff94
   1dbf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dbf4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dbf8:	cmp	r2, r3
   1dbfc:	bne	1dc4c <_start@@Base+0x9654>
   1dc00:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dc04:	str	r3, [fp, #-40]	; 0xffffffd8
   1dc08:	sub	r3, fp, #92	; 0x5c
   1dc0c:	str	r3, [sp]
   1dc10:	ldr	r3, [pc, #864]	; 1df78 <_start@@Base+0x9980>
   1dc14:	add	r3, pc, r3
   1dc18:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dc1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dc20:	ldr	r0, [fp, #-104]	; 0xffffff98
   1dc24:	bl	16cd8 <_start@@Base+0x26e0>
   1dc28:	str	r0, [fp, #-108]	; 0xffffff94
   1dc2c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1dc30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc34:	cmp	r2, r3
   1dc38:	beq	1df08 <_start@@Base+0x9910>
   1dc3c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1dc40:	ldr	r3, [fp, #-112]	; 0xffffff90
   1dc44:	cmp	r2, r3
   1dc48:	beq	1df08 <_start@@Base+0x9910>
   1dc4c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1dc50:	orrs	r3, r2, r3
   1dc54:	bne	1dc6c <_start@@Base+0x9674>
   1dc58:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dc5c:	ldr	r3, [r3, #8]
   1dc60:	and	r3, r3, #2
   1dc64:	cmp	r3, #0
   1dc68:	beq	1de40 <_start@@Base+0x9848>
   1dc6c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dc70:	ldr	r0, [r3]
   1dc74:	mov	r3, #8
   1dc78:	mov	r2, #8
   1dc7c:	mov	r1, #7
   1dc80:	bl	3255c <flatcc_builder_table_add@@Base>
   1dc84:	str	r0, [fp, #-44]	; 0xffffffd4
   1dc88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dc8c:	cmp	r3, #0
   1dc90:	beq	1df10 <_start@@Base+0x9918>
   1dc94:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1dc98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dc9c:	bl	14a14 <_start@@Base+0x41c>
   1dca0:	b	1de40 <_start@@Base+0x9848>
   1dca4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dca8:	add	r3, r3, #8
   1dcac:	str	r3, [fp, #-108]	; 0xffffff94
   1dcb0:	ldr	r1, [fp, #-112]	; 0xffffff90
   1dcb4:	ldr	r0, [fp, #-108]	; 0xffffff94
   1dcb8:	bl	14ffc <_start@@Base+0xa04>
   1dcbc:	strd	r0, [fp, #-36]	; 0xffffffdc
   1dcc0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1dcc4:	mov	r2, #0
   1dcc8:	mov	r3, #-16777216	; 0xff000000
   1dccc:	and	ip, r0, r2
   1dcd0:	str	ip, [fp, #-140]	; 0xffffff74
   1dcd4:	and	r3, r1, r3
   1dcd8:	str	r3, [fp, #-136]	; 0xffffff78
   1dcdc:	ldrd	r2, [fp, #-140]	; 0xffffff74
   1dce0:	cmp	r3, #889192448	; 0x35000000
   1dce4:	cmpeq	r2, #0
   1dce8:	bne	1de14 <_start@@Base+0x981c>
   1dcec:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dcf0:	str	r3, [fp, #-40]	; 0xffffffd8
   1dcf4:	mov	r3, #1
   1dcf8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dcfc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dd00:	ldr	r0, [fp, #-104]	; 0xffffff98
   1dd04:	bl	15600 <_start@@Base+0x1008>
   1dd08:	str	r0, [fp, #-108]	; 0xffffff94
   1dd0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dd10:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dd14:	cmp	r2, r3
   1dd18:	beq	1ddfc <_start@@Base+0x9804>
   1dd1c:	mov	r3, #0
   1dd20:	str	r3, [fp, #-96]	; 0xffffffa0
   1dd24:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dd28:	str	r3, [fp, #-40]	; 0xffffffd8
   1dd2c:	sub	r3, fp, #96	; 0x60
   1dd30:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dd34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dd38:	ldr	r0, [fp, #-104]	; 0xffffff98
   1dd3c:	bl	15f34 <_start@@Base+0x193c>
   1dd40:	str	r0, [fp, #-108]	; 0xffffff94
   1dd44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dd48:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dd4c:	cmp	r2, r3
   1dd50:	bne	1dda0 <_start@@Base+0x97a8>
   1dd54:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dd58:	str	r3, [fp, #-40]	; 0xffffffd8
   1dd5c:	sub	r3, fp, #96	; 0x60
   1dd60:	str	r3, [sp]
   1dd64:	ldr	r3, [pc, #528]	; 1df7c <_start@@Base+0x9984>
   1dd68:	add	r3, pc, r3
   1dd6c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dd70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1dd74:	ldr	r0, [fp, #-104]	; 0xffffff98
   1dd78:	bl	16808 <_start@@Base+0x2210>
   1dd7c:	str	r0, [fp, #-108]	; 0xffffff94
   1dd80:	ldr	r2, [fp, #-108]	; 0xffffff94
   1dd84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dd88:	cmp	r2, r3
   1dd8c:	beq	1df18 <_start@@Base+0x9920>
   1dd90:	ldr	r2, [fp, #-108]	; 0xffffff94
   1dd94:	ldr	r3, [fp, #-112]	; 0xffffff90
   1dd98:	cmp	r2, r3
   1dd9c:	beq	1df18 <_start@@Base+0x9920>
   1dda0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1dda4:	cmp	r3, #0
   1dda8:	bne	1ddc0 <_start@@Base+0x97c8>
   1ddac:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ddb0:	ldr	r3, [r3, #8]
   1ddb4:	and	r3, r3, #2
   1ddb8:	cmp	r3, #0
   1ddbc:	beq	1de40 <_start@@Base+0x9848>
   1ddc0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ddc4:	ldr	r0, [r3]
   1ddc8:	mov	r3, #4
   1ddcc:	mov	r2, #4
   1ddd0:	mov	r1, #8
   1ddd4:	bl	3255c <flatcc_builder_table_add@@Base>
   1ddd8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dddc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dde0:	cmp	r3, #0
   1dde4:	beq	1df20 <_start@@Base+0x9928>
   1dde8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ddec:	mov	r1, r3
   1ddf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ddf4:	bl	147f4 <_start@@Base+0x1fc>
   1ddf8:	b	1de40 <_start@@Base+0x9848>
   1ddfc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1de00:	ldr	r1, [fp, #-108]	; 0xffffff94
   1de04:	ldr	r0, [fp, #-104]	; 0xffffff98
   1de08:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1de0c:	str	r0, [fp, #-108]	; 0xffffff94
   1de10:	b	1de40 <_start@@Base+0x9848>
   1de14:	ldr	r2, [fp, #-112]	; 0xffffff90
   1de18:	ldr	r1, [fp, #-108]	; 0xffffff94
   1de1c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1de20:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1de24:	str	r0, [fp, #-108]	; 0xffffff94
   1de28:	b	1de40 <_start@@Base+0x9848>
   1de2c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1de30:	ldr	r1, [fp, #-108]	; 0xffffff94
   1de34:	ldr	r0, [fp, #-104]	; 0xffffff98
   1de38:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1de3c:	str	r0, [fp, #-108]	; 0xffffff94
   1de40:	sub	r3, fp, #52	; 0x34
   1de44:	ldr	r2, [fp, #-112]	; 0xffffff90
   1de48:	ldr	r1, [fp, #-108]	; 0xffffff94
   1de4c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1de50:	bl	15224 <_start@@Base+0xc2c>
   1de54:	str	r0, [fp, #-108]	; 0xffffff94
   1de58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1de5c:	cmp	r3, #0
   1de60:	bne	1d314 <_start@@Base+0x8d1c>
   1de64:	ldr	r3, [fp, #-104]	; 0xffffff98
   1de68:	ldr	r3, [r3, #20]
   1de6c:	cmp	r3, #0
   1de70:	bne	1df28 <_start@@Base+0x9930>
   1de74:	ldr	r3, [fp, #-104]	; 0xffffff98
   1de78:	ldr	r3, [r3]
   1de7c:	mov	r0, r3
   1de80:	bl	30b0c <flatcc_builder_end_table@@Base>
   1de84:	mov	r2, r0
   1de88:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1de8c:	str	r2, [r3]
   1de90:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1de94:	ldr	r3, [r3]
   1de98:	cmp	r3, #0
   1de9c:	beq	1df30 <_start@@Base+0x9938>
   1dea0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dea4:	b	1df4c <_start@@Base+0x9954>
   1dea8:	nop	{0}
   1deac:	b	1df34 <_start@@Base+0x993c>
   1deb0:	nop	{0}
   1deb4:	b	1df34 <_start@@Base+0x993c>
   1deb8:	nop	{0}
   1debc:	b	1df34 <_start@@Base+0x993c>
   1dec0:	nop	{0}
   1dec4:	b	1df34 <_start@@Base+0x993c>
   1dec8:	nop	{0}
   1decc:	b	1df34 <_start@@Base+0x993c>
   1ded0:	nop	{0}
   1ded4:	b	1df34 <_start@@Base+0x993c>
   1ded8:	nop	{0}
   1dedc:	b	1df34 <_start@@Base+0x993c>
   1dee0:	nop	{0}
   1dee4:	b	1df34 <_start@@Base+0x993c>
   1dee8:	nop	{0}
   1deec:	b	1df34 <_start@@Base+0x993c>
   1def0:	nop	{0}
   1def4:	b	1df34 <_start@@Base+0x993c>
   1def8:	nop	{0}
   1defc:	b	1df34 <_start@@Base+0x993c>
   1df00:	nop	{0}
   1df04:	b	1df34 <_start@@Base+0x993c>
   1df08:	nop	{0}
   1df0c:	b	1df34 <_start@@Base+0x993c>
   1df10:	nop	{0}
   1df14:	b	1df34 <_start@@Base+0x993c>
   1df18:	nop	{0}
   1df1c:	b	1df34 <_start@@Base+0x993c>
   1df20:	nop	{0}
   1df24:	b	1df34 <_start@@Base+0x993c>
   1df28:	nop	{0}
   1df2c:	b	1df34 <_start@@Base+0x993c>
   1df30:	nop	{0}
   1df34:	mov	r3, #33	; 0x21
   1df38:	ldr	r2, [fp, #-112]	; 0xffffff90
   1df3c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1df40:	ldr	r0, [fp, #-104]	; 0xffffff98
   1df44:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1df48:	mov	r3, r0
   1df4c:	mov	r0, r3
   1df50:	sub	sp, fp, #28
   1df54:	ldrd	r4, [sp]
   1df58:	ldrd	r6, [sp, #8]
   1df5c:	ldrd	r8, [sp, #16]
   1df60:	ldr	fp, [sp, #24]
   1df64:	add	sp, sp, #28
   1df68:	pop	{pc}		; (ldr pc, [sp], #4)
   1df6c:	nop	{0}
   1df70:	teqcc	r2, r4, lsr r3
   1df74:	strbtvs	r6, [r4], #-1124	; 0xfffffb9c
   1df78:			; <UNDEFINED> instruction: 0x000475bc
   1df7c:	andeq	r7, r4, r4, ror r4
   1df80:	strd	r4, [sp, #-16]!
   1df84:	str	fp, [sp, #8]
   1df88:	str	lr, [sp, #12]
   1df8c:	add	fp, sp, #12
   1df90:	sub	sp, sp, #64	; 0x40
   1df94:	str	r0, [fp, #-56]	; 0xffffffc8
   1df98:	str	r1, [fp, #-60]	; 0xffffffc4
   1df9c:	str	r2, [fp, #-64]	; 0xffffffc0
   1dfa0:	str	r3, [fp, #-68]	; 0xffffffbc
   1dfa4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1dfa8:	mov	r2, #0
   1dfac:	str	r2, [r3]
   1dfb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dfb4:	ldr	r3, [r3]
   1dfb8:	mov	r1, #2
   1dfbc:	mov	r0, r3
   1dfc0:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1dfc4:	mov	r3, r0
   1dfc8:	cmp	r3, #0
   1dfcc:	bne	1e368 <_start@@Base+0x9d70>
   1dfd0:	sub	r3, fp, #32
   1dfd4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1dfd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1dfdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dfe0:	bl	15130 <_start@@Base+0xb38>
   1dfe4:	str	r0, [fp, #-60]	; 0xffffffc4
   1dfe8:	b	1e318 <_start@@Base+0x9d20>
   1dfec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1dff0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1dff4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dff8:	bl	14cf4 <_start@@Base+0x6fc>
   1dffc:	str	r0, [fp, #-60]	; 0xffffffc4
   1e000:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1e004:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e008:	bl	14ffc <_start@@Base+0xa04>
   1e00c:	strd	r0, [fp, #-20]	; 0xffffffec
   1e010:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1e014:	add	r1, pc, #948	; 0x3b4
   1e018:	ldrd	r0, [r1]
   1e01c:	cmp	r3, r1
   1e020:	cmpeq	r2, r0
   1e024:	bne	1e2ec <_start@@Base+0x9cf4>
   1e028:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e02c:	add	r3, r3, #8
   1e030:	str	r3, [fp, #-60]	; 0xffffffc4
   1e034:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1e038:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e03c:	bl	14ffc <_start@@Base+0xa04>
   1e040:	strd	r0, [fp, #-20]	; 0xffffffec
   1e044:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1e048:	mvn	r0, #255	; 0xff
   1e04c:	mvn	r1, #0
   1e050:	and	r4, r2, r0
   1e054:	and	r5, r3, r1
   1e058:	add	r3, pc, #888	; 0x378
   1e05c:	ldrd	r2, [r3]
   1e060:	cmp	r5, r3
   1e064:	cmpeq	r4, r2
   1e068:	bne	1e194 <_start@@Base+0x9b9c>
   1e06c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e070:	str	r3, [fp, #-24]	; 0xffffffe8
   1e074:	mov	r3, #7
   1e078:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e07c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e080:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e084:	bl	15600 <_start@@Base+0x1008>
   1e088:	str	r0, [fp, #-60]	; 0xffffffc4
   1e08c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e090:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e094:	cmp	r2, r3
   1e098:	beq	1e17c <_start@@Base+0x9b84>
   1e09c:	mov	r2, #0
   1e0a0:	mov	r3, #0
   1e0a4:	strd	r2, [fp, #-44]	; 0xffffffd4
   1e0a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e0ac:	str	r3, [fp, #-24]	; 0xffffffe8
   1e0b0:	sub	r3, fp, #44	; 0x2c
   1e0b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e0b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e0c0:	bl	161c8 <_start@@Base+0x1bd0>
   1e0c4:	str	r0, [fp, #-60]	; 0xffffffc4
   1e0c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e0d0:	cmp	r2, r3
   1e0d4:	bne	1e124 <_start@@Base+0x9b2c>
   1e0d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e0dc:	str	r3, [fp, #-24]	; 0xffffffe8
   1e0e0:	sub	r3, fp, #44	; 0x2c
   1e0e4:	str	r3, [sp]
   1e0e8:	ldr	r3, [pc, #760]	; 1e3e8 <_start@@Base+0x9df0>
   1e0ec:	add	r3, pc, r3
   1e0f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e0f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e0fc:	bl	16cd8 <_start@@Base+0x26e0>
   1e100:	str	r0, [fp, #-60]	; 0xffffffc4
   1e104:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e10c:	cmp	r2, r3
   1e110:	beq	1e370 <_start@@Base+0x9d78>
   1e114:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e118:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e11c:	cmp	r2, r3
   1e120:	beq	1e370 <_start@@Base+0x9d78>
   1e124:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1e128:	orrs	r3, r2, r3
   1e12c:	bne	1e144 <_start@@Base+0x9b4c>
   1e130:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e134:	ldr	r3, [r3, #8]
   1e138:	and	r3, r3, #2
   1e13c:	cmp	r3, #0
   1e140:	beq	1e300 <_start@@Base+0x9d08>
   1e144:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e148:	ldr	r0, [r3]
   1e14c:	mov	r3, #8
   1e150:	mov	r2, #8
   1e154:	mov	r1, #0
   1e158:	bl	3255c <flatcc_builder_table_add@@Base>
   1e15c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e160:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e164:	cmp	r3, #0
   1e168:	beq	1e378 <_start@@Base+0x9d80>
   1e16c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1e170:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e174:	bl	14a14 <_start@@Base+0x41c>
   1e178:	b	1e300 <_start@@Base+0x9d08>
   1e17c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e180:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e184:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e188:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e18c:	str	r0, [fp, #-60]	; 0xffffffc4
   1e190:	b	1e300 <_start@@Base+0x9d08>
   1e194:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1e198:	add	r1, pc, #576	; 0x240
   1e19c:	ldrd	r0, [r1]
   1e1a0:	cmp	r3, r1
   1e1a4:	cmpeq	r2, r0
   1e1a8:	bne	1e2d4 <_start@@Base+0x9cdc>
   1e1ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e1b0:	str	r3, [fp, #-24]	; 0xffffffe8
   1e1b4:	mov	r3, #8
   1e1b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e1bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e1c4:	bl	15600 <_start@@Base+0x1008>
   1e1c8:	str	r0, [fp, #-60]	; 0xffffffc4
   1e1cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e1d4:	cmp	r2, r3
   1e1d8:	beq	1e2bc <_start@@Base+0x9cc4>
   1e1dc:	mov	r3, #0
   1e1e0:	str	r3, [fp, #-48]	; 0xffffffd0
   1e1e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e1e8:	str	r3, [fp, #-24]	; 0xffffffe8
   1e1ec:	sub	r3, fp, #48	; 0x30
   1e1f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e1f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e1fc:	bl	15f34 <_start@@Base+0x193c>
   1e200:	str	r0, [fp, #-60]	; 0xffffffc4
   1e204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e208:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e20c:	cmp	r2, r3
   1e210:	bne	1e260 <_start@@Base+0x9c68>
   1e214:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e218:	str	r3, [fp, #-24]	; 0xffffffe8
   1e21c:	sub	r3, fp, #48	; 0x30
   1e220:	str	r3, [sp]
   1e224:	ldr	r3, [pc, #448]	; 1e3ec <_start@@Base+0x9df4>
   1e228:	add	r3, pc, r3
   1e22c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e234:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e238:	bl	16808 <_start@@Base+0x2210>
   1e23c:	str	r0, [fp, #-60]	; 0xffffffc4
   1e240:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e248:	cmp	r2, r3
   1e24c:	beq	1e380 <_start@@Base+0x9d88>
   1e250:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e254:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e258:	cmp	r2, r3
   1e25c:	beq	1e380 <_start@@Base+0x9d88>
   1e260:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e264:	cmp	r3, #0
   1e268:	bne	1e280 <_start@@Base+0x9c88>
   1e26c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e270:	ldr	r3, [r3, #8]
   1e274:	and	r3, r3, #2
   1e278:	cmp	r3, #0
   1e27c:	beq	1e300 <_start@@Base+0x9d08>
   1e280:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e284:	ldr	r0, [r3]
   1e288:	mov	r3, #4
   1e28c:	mov	r2, #4
   1e290:	mov	r1, #1
   1e294:	bl	3255c <flatcc_builder_table_add@@Base>
   1e298:	str	r0, [fp, #-28]	; 0xffffffe4
   1e29c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e2a0:	cmp	r3, #0
   1e2a4:	beq	1e388 <_start@@Base+0x9d90>
   1e2a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e2ac:	mov	r1, r3
   1e2b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e2b4:	bl	147f4 <_start@@Base+0x1fc>
   1e2b8:	b	1e300 <_start@@Base+0x9d08>
   1e2bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e2c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e2c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e2c8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e2cc:	str	r0, [fp, #-60]	; 0xffffffc4
   1e2d0:	b	1e300 <_start@@Base+0x9d08>
   1e2d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e2d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e2dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e2e0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e2e4:	str	r0, [fp, #-60]	; 0xffffffc4
   1e2e8:	b	1e300 <_start@@Base+0x9d08>
   1e2ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e2f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e2f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e2f8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e2fc:	str	r0, [fp, #-60]	; 0xffffffc4
   1e300:	sub	r3, fp, #32
   1e304:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e308:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e30c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e310:	bl	15224 <_start@@Base+0xc2c>
   1e314:	str	r0, [fp, #-60]	; 0xffffffc4
   1e318:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e31c:	cmp	r3, #0
   1e320:	bne	1dfec <_start@@Base+0x99f4>
   1e324:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e328:	ldr	r3, [r3, #20]
   1e32c:	cmp	r3, #0
   1e330:	bne	1e390 <_start@@Base+0x9d98>
   1e334:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e338:	ldr	r3, [r3]
   1e33c:	mov	r0, r3
   1e340:	bl	30b0c <flatcc_builder_end_table@@Base>
   1e344:	mov	r2, r0
   1e348:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e34c:	str	r2, [r3]
   1e350:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e354:	ldr	r3, [r3]
   1e358:	cmp	r3, #0
   1e35c:	beq	1e398 <_start@@Base+0x9da0>
   1e360:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e364:	b	1e3b4 <_start@@Base+0x9dbc>
   1e368:	nop	{0}
   1e36c:	b	1e39c <_start@@Base+0x9da4>
   1e370:	nop	{0}
   1e374:	b	1e39c <_start@@Base+0x9da4>
   1e378:	nop	{0}
   1e37c:	b	1e39c <_start@@Base+0x9da4>
   1e380:	nop	{0}
   1e384:	b	1e39c <_start@@Base+0x9da4>
   1e388:	nop	{0}
   1e38c:	b	1e39c <_start@@Base+0x9da4>
   1e390:	nop	{0}
   1e394:	b	1e39c <_start@@Base+0x9da4>
   1e398:	nop	{0}
   1e39c:	mov	r3, #33	; 0x21
   1e3a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e3a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e3a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e3ac:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1e3b0:	mov	r3, r0
   1e3b4:	mov	r0, r3
   1e3b8:	sub	sp, fp, #12
   1e3bc:	ldrd	r4, [sp]
   1e3c0:	ldr	fp, [sp, #8]
   1e3c4:	add	sp, sp, #12
   1e3c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3cc:	nop	{0}
   1e3d0:	svcpl	0x00626262
   1e3d4:	cmnvs	r1, r1, ror #2
   1e3d8:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1e3dc:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e3e0:	cmnvs	r2, pc, asr r4
   1e3e4:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e3e8:	strdeq	r7, [r4], -ip
   1e3ec:	andeq	r6, r4, ip, asr #31
   1e3f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1e3f4:	strd	r6, [sp, #8]
   1e3f8:	str	fp, [sp, #16]
   1e3fc:	str	lr, [sp, #20]
   1e400:	add	fp, sp, #20
   1e404:	sub	sp, sp, #56	; 0x38
   1e408:	str	r0, [fp, #-56]	; 0xffffffc8
   1e40c:	str	r1, [fp, #-60]	; 0xffffffc4
   1e410:	str	r2, [fp, #-64]	; 0xffffffc0
   1e414:	str	r3, [fp, #-68]	; 0xffffffbc
   1e418:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e41c:	mov	r2, #0
   1e420:	str	r2, [r3]
   1e424:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e428:	ldr	r3, [r3]
   1e42c:	mov	r1, #2
   1e430:	mov	r0, r3
   1e434:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1e438:	mov	r3, r0
   1e43c:	cmp	r3, #0
   1e440:	bne	1e838 <_start@@Base+0xa240>
   1e444:	sub	r3, fp, #40	; 0x28
   1e448:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e44c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e450:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e454:	bl	15130 <_start@@Base+0xb38>
   1e458:	str	r0, [fp, #-60]	; 0xffffffc4
   1e45c:	b	1e7e8 <_start@@Base+0xa1f0>
   1e460:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e464:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e468:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e46c:	bl	14cf4 <_start@@Base+0x6fc>
   1e470:	str	r0, [fp, #-60]	; 0xffffffc4
   1e474:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1e478:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e47c:	bl	14ffc <_start@@Base+0xa04>
   1e480:	strd	r0, [fp, #-28]	; 0xffffffe4
   1e484:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1e488:	add	r1, pc, #984	; 0x3d8
   1e48c:	ldrd	r0, [r1]
   1e490:	cmp	r3, r1
   1e494:	cmpeq	r2, r0
   1e498:	bne	1e7bc <_start@@Base+0xa1c4>
   1e49c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e4a0:	add	r3, r3, #8
   1e4a4:	str	r3, [fp, #-60]	; 0xffffffc4
   1e4a8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1e4ac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e4b0:	bl	14ffc <_start@@Base+0xa04>
   1e4b4:	strd	r0, [fp, #-28]	; 0xffffffe4
   1e4b8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1e4bc:	add	r1, pc, #940	; 0x3ac
   1e4c0:	ldrd	r0, [r1]
   1e4c4:	cmp	r3, r1
   1e4c8:	cmpeq	r2, r0
   1e4cc:	bne	1e654 <_start@@Base+0xa05c>
   1e4d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e4d4:	add	r3, r3, #8
   1e4d8:	str	r3, [fp, #-60]	; 0xffffffc4
   1e4dc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1e4e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e4e4:	bl	14ffc <_start@@Base+0xa04>
   1e4e8:	strd	r0, [fp, #-28]	; 0xffffffe4
   1e4ec:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1e4f0:	mov	r0, #-16777216	; 0xff000000
   1e4f4:	mvn	r1, #0
   1e4f8:	and	r4, r2, r0
   1e4fc:	and	r5, r3, r1
   1e500:	add	r3, pc, #880	; 0x370
   1e504:	ldrd	r2, [r3]
   1e508:	cmp	r5, r3
   1e50c:	cmpeq	r4, r2
   1e510:	bne	1e63c <_start@@Base+0xa044>
   1e514:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e518:	str	r3, [fp, #-32]	; 0xffffffe0
   1e51c:	mov	r3, #5
   1e520:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e524:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e528:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e52c:	bl	15600 <_start@@Base+0x1008>
   1e530:	str	r0, [fp, #-60]	; 0xffffffc4
   1e534:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e538:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e53c:	cmp	r2, r3
   1e540:	beq	1e624 <_start@@Base+0xa02c>
   1e544:	mov	r3, #0
   1e548:	str	r3, [fp, #-44]	; 0xffffffd4
   1e54c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e550:	str	r3, [fp, #-32]	; 0xffffffe0
   1e554:	sub	r3, fp, #44	; 0x2c
   1e558:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e55c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e560:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e564:	bl	15f34 <_start@@Base+0x193c>
   1e568:	str	r0, [fp, #-60]	; 0xffffffc4
   1e56c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e570:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e574:	cmp	r2, r3
   1e578:	bne	1e5c8 <_start@@Base+0x9fd0>
   1e57c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e580:	str	r3, [fp, #-32]	; 0xffffffe0
   1e584:	sub	r3, fp, #44	; 0x2c
   1e588:	str	r3, [sp]
   1e58c:	ldr	r3, [pc, #756]	; 1e888 <_start@@Base+0xa290>
   1e590:	add	r3, pc, r3
   1e594:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e598:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e59c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e5a0:	bl	16808 <_start@@Base+0x2210>
   1e5a4:	str	r0, [fp, #-60]	; 0xffffffc4
   1e5a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e5ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e5b0:	cmp	r2, r3
   1e5b4:	beq	1e840 <_start@@Base+0xa248>
   1e5b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e5bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e5c0:	cmp	r2, r3
   1e5c4:	beq	1e840 <_start@@Base+0xa248>
   1e5c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e5cc:	cmp	r3, #0
   1e5d0:	bne	1e5e8 <_start@@Base+0x9ff0>
   1e5d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e5d8:	ldr	r3, [r3, #8]
   1e5dc:	and	r3, r3, #2
   1e5e0:	cmp	r3, #0
   1e5e4:	beq	1e7d0 <_start@@Base+0xa1d8>
   1e5e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e5ec:	ldr	r0, [r3]
   1e5f0:	mov	r3, #4
   1e5f4:	mov	r2, #4
   1e5f8:	mov	r1, #1
   1e5fc:	bl	3255c <flatcc_builder_table_add@@Base>
   1e600:	str	r0, [fp, #-36]	; 0xffffffdc
   1e604:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e608:	cmp	r3, #0
   1e60c:	beq	1e848 <_start@@Base+0xa250>
   1e610:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e614:	mov	r1, r3
   1e618:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e61c:	bl	147f4 <_start@@Base+0x1fc>
   1e620:	b	1e7d0 <_start@@Base+0xa1d8>
   1e624:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e628:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e62c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e630:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e634:	str	r0, [fp, #-60]	; 0xffffffc4
   1e638:	b	1e7d0 <_start@@Base+0xa1d8>
   1e63c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e640:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e644:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e648:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e64c:	str	r0, [fp, #-60]	; 0xffffffc4
   1e650:	b	1e7d0 <_start@@Base+0xa1d8>
   1e654:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1e658:	mvn	r0, #255	; 0xff
   1e65c:	mvn	r1, #0
   1e660:	and	r6, r2, r0
   1e664:	and	r7, r3, r1
   1e668:	add	r3, pc, #528	; 0x210
   1e66c:	ldrd	r2, [r3]
   1e670:	cmp	r7, r3
   1e674:	cmpeq	r6, r2
   1e678:	bne	1e7a4 <_start@@Base+0xa1ac>
   1e67c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e680:	str	r3, [fp, #-32]	; 0xffffffe0
   1e684:	mov	r3, #7
   1e688:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e68c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e690:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e694:	bl	15600 <_start@@Base+0x1008>
   1e698:	str	r0, [fp, #-60]	; 0xffffffc4
   1e69c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e6a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e6a4:	cmp	r2, r3
   1e6a8:	beq	1e78c <_start@@Base+0xa194>
   1e6ac:	mov	r2, #0
   1e6b0:	mov	r3, #0
   1e6b4:	strd	r2, [fp, #-52]	; 0xffffffcc
   1e6b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e6bc:	str	r3, [fp, #-32]	; 0xffffffe0
   1e6c0:	sub	r3, fp, #52	; 0x34
   1e6c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e6c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e6cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e6d0:	bl	161c8 <_start@@Base+0x1bd0>
   1e6d4:	str	r0, [fp, #-60]	; 0xffffffc4
   1e6d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e6dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e6e0:	cmp	r2, r3
   1e6e4:	bne	1e734 <_start@@Base+0xa13c>
   1e6e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e6ec:	str	r3, [fp, #-32]	; 0xffffffe0
   1e6f0:	sub	r3, fp, #52	; 0x34
   1e6f4:	str	r3, [sp]
   1e6f8:	ldr	r3, [pc, #396]	; 1e88c <_start@@Base+0xa294>
   1e6fc:	add	r3, pc, r3
   1e700:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e704:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e708:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e70c:	bl	16cd8 <_start@@Base+0x26e0>
   1e710:	str	r0, [fp, #-60]	; 0xffffffc4
   1e714:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e718:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e71c:	cmp	r2, r3
   1e720:	beq	1e850 <_start@@Base+0xa258>
   1e724:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e728:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e72c:	cmp	r2, r3
   1e730:	beq	1e850 <_start@@Base+0xa258>
   1e734:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1e738:	orrs	r3, r2, r3
   1e73c:	bne	1e754 <_start@@Base+0xa15c>
   1e740:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e744:	ldr	r3, [r3, #8]
   1e748:	and	r3, r3, #2
   1e74c:	cmp	r3, #0
   1e750:	beq	1e7d0 <_start@@Base+0xa1d8>
   1e754:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e758:	ldr	r0, [r3]
   1e75c:	mov	r3, #8
   1e760:	mov	r2, #8
   1e764:	mov	r1, #0
   1e768:	bl	3255c <flatcc_builder_table_add@@Base>
   1e76c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e770:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e774:	cmp	r3, #0
   1e778:	beq	1e858 <_start@@Base+0xa260>
   1e77c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1e780:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e784:	bl	14a14 <_start@@Base+0x41c>
   1e788:	b	1e7d0 <_start@@Base+0xa1d8>
   1e78c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e790:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e794:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e798:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e79c:	str	r0, [fp, #-60]	; 0xffffffc4
   1e7a0:	b	1e7d0 <_start@@Base+0xa1d8>
   1e7a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e7a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e7ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e7b0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e7b4:	str	r0, [fp, #-60]	; 0xffffffc4
   1e7b8:	b	1e7d0 <_start@@Base+0xa1d8>
   1e7bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e7c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e7c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e7c8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1e7cc:	str	r0, [fp, #-60]	; 0xffffffc4
   1e7d0:	sub	r3, fp, #40	; 0x28
   1e7d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e7d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e7dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e7e0:	bl	15224 <_start@@Base+0xc2c>
   1e7e4:	str	r0, [fp, #-60]	; 0xffffffc4
   1e7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e7ec:	cmp	r3, #0
   1e7f0:	bne	1e460 <_start@@Base+0x9e68>
   1e7f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e7f8:	ldr	r3, [r3, #20]
   1e7fc:	cmp	r3, #0
   1e800:	bne	1e860 <_start@@Base+0xa268>
   1e804:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e808:	ldr	r3, [r3]
   1e80c:	mov	r0, r3
   1e810:	bl	30b0c <flatcc_builder_end_table@@Base>
   1e814:	mov	r2, r0
   1e818:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e81c:	str	r2, [r3]
   1e820:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e824:	ldr	r3, [r3]
   1e828:	cmp	r3, #0
   1e82c:	beq	1e890 <_start@@Base+0xa298>
   1e830:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e834:	b	1e8ac <_start@@Base+0xa2b4>
   1e838:	nop	{0}
   1e83c:	b	1e894 <_start@@Base+0xa29c>
   1e840:	nop	{0}
   1e844:	b	1e894 <_start@@Base+0xa29c>
   1e848:	nop	{0}
   1e84c:	b	1e894 <_start@@Base+0xa29c>
   1e850:	nop	{0}
   1e854:	b	1e894 <_start@@Base+0xa29c>
   1e858:	nop	{0}
   1e85c:	b	1e894 <_start@@Base+0xa29c>
   1e860:	nop	{0}
   1e864:	b	1e894 <_start@@Base+0xa29c>
   1e868:	svcpl	0x00626262
   1e86c:	cmnvs	r1, r1, ror #2
   1e870:	cmnvs	r2, pc, asr r4
   1e874:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e878:	movwvc	r0, #0
   1e87c:	cmnvc	r4, #112, 10	; 0x1c000000
   1e880:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1e884:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e888:	andeq	r6, r4, r0, ror ip
   1e88c:	andeq	r6, r4, r0, lsl fp
   1e890:	nop	{0}
   1e894:	mov	r3, #33	; 0x21
   1e898:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e89c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e8a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e8a4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1e8a8:	mov	r3, r0
   1e8ac:	mov	r0, r3
   1e8b0:	sub	sp, fp, #20
   1e8b4:	ldrd	r4, [sp]
   1e8b8:	ldrd	r6, [sp, #8]
   1e8bc:	ldr	fp, [sp, #16]
   1e8c0:	add	sp, sp, #20
   1e8c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e8c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e8cc:	strd	r6, [sp, #8]
   1e8d0:	strd	r8, [sp, #16]
   1e8d4:	str	fp, [sp, #24]
   1e8d8:	str	lr, [sp, #28]
   1e8dc:	add	fp, sp, #28
   1e8e0:	sub	sp, sp, #48	; 0x30
   1e8e4:	str	r0, [fp, #-56]	; 0xffffffc8
   1e8e8:	str	r1, [fp, #-60]	; 0xffffffc4
   1e8ec:	str	r2, [fp, #-64]	; 0xffffffc0
   1e8f0:	str	r3, [fp, #-68]	; 0xffffffbc
   1e8f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e8f8:	mov	r2, #0
   1e8fc:	str	r2, [r3]
   1e900:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e904:	ldr	r3, [r3]
   1e908:	mov	r1, #3
   1e90c:	mov	r0, r3
   1e910:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1e914:	mov	r3, r0
   1e918:	cmp	r3, #0
   1e91c:	bne	1ec8c <_start@@Base+0xa694>
   1e920:	sub	r3, fp, #48	; 0x30
   1e924:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e928:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e92c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e930:	bl	15130 <_start@@Base+0xb38>
   1e934:	str	r0, [fp, #-60]	; 0xffffffc4
   1e938:	b	1ec3c <_start@@Base+0xa644>
   1e93c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e940:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e944:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e948:	bl	14cf4 <_start@@Base+0x6fc>
   1e94c:	str	r0, [fp, #-60]	; 0xffffffc4
   1e950:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1e954:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e958:	bl	14ffc <_start@@Base+0xa04>
   1e95c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1e960:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1e964:	add	r1, pc, #900	; 0x384
   1e968:	ldrd	r0, [r1]
   1e96c:	cmp	r3, r1
   1e970:	cmpeq	r2, r0
   1e974:	bhi	1ea64 <_start@@Base+0xa46c>
   1e978:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1e97c:	mov	r0, #0
   1e980:	mvn	r1, #0
   1e984:	and	r4, r2, r0
   1e988:	and	r5, r3, r1
   1e98c:	add	r3, pc, #868	; 0x364
   1e990:	ldrd	r2, [r3]
   1e994:	cmp	r5, r3
   1e998:	cmpeq	r4, r2
   1e99c:	bne	1ea4c <_start@@Base+0xa454>
   1e9a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e9a4:	str	r3, [fp, #-40]	; 0xffffffd8
   1e9a8:	mov	r3, #4
   1e9ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e9b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e9b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e9b8:	bl	15600 <_start@@Base+0x1008>
   1e9bc:	str	r0, [fp, #-60]	; 0xffffffc4
   1e9c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e9c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e9c8:	cmp	r2, r3
   1e9cc:	beq	1ea34 <_start@@Base+0xa43c>
   1e9d0:	sub	r2, fp, #52	; 0x34
   1e9d4:	mov	r3, #0
   1e9d8:	str	r3, [sp]
   1e9dc:	mov	r3, r2
   1e9e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e9e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1e9e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e9ec:	bl	3d7ac <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e9f0:	str	r0, [fp, #-60]	; 0xffffffc4
   1e9f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e9f8:	cmp	r3, #0
   1e9fc:	beq	1ec94 <_start@@Base+0xa69c>
   1ea00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ea04:	ldr	r3, [r3]
   1ea08:	mov	r1, #0
   1ea0c:	mov	r0, r3
   1ea10:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1ea14:	str	r0, [fp, #-44]	; 0xffffffd4
   1ea18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ea1c:	cmp	r3, #0
   1ea20:	beq	1ec94 <_start@@Base+0xa69c>
   1ea24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ea28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ea2c:	str	r2, [r3]
   1ea30:	b	1ec24 <_start@@Base+0xa62c>
   1ea34:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ea38:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ea3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ea40:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ea44:	str	r0, [fp, #-60]	; 0xffffffc4
   1ea48:	b	1ec24 <_start@@Base+0xa62c>
   1ea4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ea50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ea54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ea58:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ea5c:	str	r0, [fp, #-60]	; 0xffffffc4
   1ea60:	b	1ec24 <_start@@Base+0xa62c>
   1ea64:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1ea68:	mvn	r0, #255	; 0xff
   1ea6c:	mvn	r1, #0
   1ea70:	and	r6, r2, r0
   1ea74:	and	r7, r3, r1
   1ea78:	add	r3, pc, #640	; 0x280
   1ea7c:	ldrd	r2, [r3]
   1ea80:	cmp	r7, r3
   1ea84:	cmpeq	r6, r2
   1ea88:	bne	1eb38 <_start@@Base+0xa540>
   1ea8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ea90:	str	r3, [fp, #-40]	; 0xffffffd8
   1ea94:	mov	r3, #7
   1ea98:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ea9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1eaa0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eaa4:	bl	15600 <_start@@Base+0x1008>
   1eaa8:	str	r0, [fp, #-60]	; 0xffffffc4
   1eaac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1eab0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1eab4:	cmp	r2, r3
   1eab8:	beq	1eb20 <_start@@Base+0xa528>
   1eabc:	sub	r2, fp, #52	; 0x34
   1eac0:	mov	r3, #1
   1eac4:	str	r3, [sp]
   1eac8:	mov	r3, r2
   1eacc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ead0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ead4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ead8:	bl	3d7ac <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1eadc:	str	r0, [fp, #-60]	; 0xffffffc4
   1eae0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eae4:	cmp	r3, #0
   1eae8:	beq	1ec9c <_start@@Base+0xa6a4>
   1eaec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eaf0:	ldr	r3, [r3]
   1eaf4:	mov	r1, #1
   1eaf8:	mov	r0, r3
   1eafc:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1eb00:	str	r0, [fp, #-44]	; 0xffffffd4
   1eb04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eb08:	cmp	r3, #0
   1eb0c:	beq	1ec9c <_start@@Base+0xa6a4>
   1eb10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1eb14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eb18:	str	r2, [r3]
   1eb1c:	b	1ec24 <_start@@Base+0xa62c>
   1eb20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1eb24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1eb28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eb2c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1eb30:	str	r0, [fp, #-60]	; 0xffffffc4
   1eb34:	b	1ec24 <_start@@Base+0xa62c>
   1eb38:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1eb3c:	mov	r0, #0
   1eb40:	movt	r0, #65535	; 0xffff
   1eb44:	mvn	r1, #0
   1eb48:	and	r8, r2, r0
   1eb4c:	and	r9, r3, r1
   1eb50:	add	r3, pc, #432	; 0x1b0
   1eb54:	ldrd	r2, [r3]
   1eb58:	cmp	r9, r3
   1eb5c:	cmpeq	r8, r2
   1eb60:	bne	1ec10 <_start@@Base+0xa618>
   1eb64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1eb68:	str	r3, [fp, #-40]	; 0xffffffd8
   1eb6c:	mov	r3, #6
   1eb70:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1eb74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1eb78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eb7c:	bl	15600 <_start@@Base+0x1008>
   1eb80:	str	r0, [fp, #-60]	; 0xffffffc4
   1eb84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1eb88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1eb8c:	cmp	r2, r3
   1eb90:	beq	1ebf8 <_start@@Base+0xa600>
   1eb94:	sub	r2, fp, #52	; 0x34
   1eb98:	mov	r3, #0
   1eb9c:	str	r3, [sp]
   1eba0:	mov	r3, r2
   1eba4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1eba8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ebac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ebb0:	bl	3d7ac <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1ebb4:	str	r0, [fp, #-60]	; 0xffffffc4
   1ebb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ebbc:	cmp	r3, #0
   1ebc0:	beq	1eca4 <_start@@Base+0xa6ac>
   1ebc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ebc8:	ldr	r3, [r3]
   1ebcc:	mov	r1, #2
   1ebd0:	mov	r0, r3
   1ebd4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1ebd8:	str	r0, [fp, #-44]	; 0xffffffd4
   1ebdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ebe0:	cmp	r3, #0
   1ebe4:	beq	1eca4 <_start@@Base+0xa6ac>
   1ebe8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ebec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ebf0:	str	r2, [r3]
   1ebf4:	b	1ec24 <_start@@Base+0xa62c>
   1ebf8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ebfc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ec00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ec04:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ec08:	str	r0, [fp, #-60]	; 0xffffffc4
   1ec0c:	b	1ec24 <_start@@Base+0xa62c>
   1ec10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ec14:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ec18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ec1c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1ec20:	str	r0, [fp, #-60]	; 0xffffffc4
   1ec24:	sub	r3, fp, #48	; 0x30
   1ec28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ec2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ec30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ec34:	bl	15224 <_start@@Base+0xc2c>
   1ec38:	str	r0, [fp, #-60]	; 0xffffffc4
   1ec3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ec40:	cmp	r3, #0
   1ec44:	bne	1e93c <_start@@Base+0xa344>
   1ec48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ec4c:	ldr	r3, [r3, #20]
   1ec50:	cmp	r3, #0
   1ec54:	bne	1ecac <_start@@Base+0xa6b4>
   1ec58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ec5c:	ldr	r3, [r3]
   1ec60:	mov	r0, r3
   1ec64:	bl	30b0c <flatcc_builder_end_table@@Base>
   1ec68:	mov	r2, r0
   1ec6c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ec70:	str	r2, [r3]
   1ec74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ec78:	ldr	r3, [r3]
   1ec7c:	cmp	r3, #0
   1ec80:	beq	1ecb4 <_start@@Base+0xa6bc>
   1ec84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ec88:	b	1ecd0 <_start@@Base+0xa6d8>
   1ec8c:	nop	{0}
   1ec90:	b	1ecb8 <_start@@Base+0xa6c0>
   1ec94:	nop	{0}
   1ec98:	b	1ecb8 <_start@@Base+0xa6c0>
   1ec9c:	nop	{0}
   1eca0:	b	1ecb8 <_start@@Base+0xa6c0>
   1eca4:	nop	{0}
   1eca8:	b	1ecb8 <_start@@Base+0xa6c0>
   1ecac:	nop	{0}
   1ecb0:	b	1ecb8 <_start@@Base+0xa6c0>
   1ecb4:	nop	{0}
   1ecb8:	mov	r3, #33	; 0x21
   1ecbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ecc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ecc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ecc8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   1eccc:	mov	r3, r0
   1ecd0:	mov	r0, r3
   1ecd4:	sub	sp, fp, #28
   1ecd8:	ldrd	r4, [sp]
   1ecdc:	ldrd	r6, [sp, #8]
   1ece0:	ldrd	r8, [sp, #16]
   1ece4:	ldr	fp, [sp, #24]
   1ece8:	add	sp, sp, #28
   1ecec:	pop	{pc}		; (ldr pc, [sp], #4)
   1ecf0:	strbvs	pc, [r3, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   1ecf4:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1ecf8:	andeq	r0, r0, r0
   1ecfc:	strbtvs	r7, [r1], #-1121	; 0xfffffb9f
   1ed00:	cmnvs	r4, r0, lsl #2
   1ed04:	ldrbvc	r6, [r2, #-3172]!	; 0xfffff39c
   1ed08:	strbvs	r0, [r4, #-0]!
   1ed0c:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1ed10:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ed14:	strd	r6, [sp, #8]
   1ed18:	strd	r8, [sp, #16]
   1ed1c:	str	fp, [sp, #24]
   1ed20:	str	lr, [sp, #28]
   1ed24:	add	fp, sp, #28
   1ed28:	sub	sp, sp, #368	; 0x170
   1ed2c:	str	r0, [fp, #-160]	; 0xffffff60
   1ed30:	str	r1, [fp, #-164]	; 0xffffff5c
   1ed34:	str	r2, [fp, #-168]	; 0xffffff58
   1ed38:	str	r3, [fp, #-172]	; 0xffffff54
   1ed3c:	ldr	r2, [fp, #-172]	; 0xffffff54
   1ed40:	mov	r3, #0
   1ed44:	str	r3, [r2]
   1ed48:	ldr	r3, [fp, #-160]	; 0xffffff60
   1ed4c:	ldr	r3, [r3]
   1ed50:	mov	r1, #36	; 0x24
   1ed54:	mov	r0, r3
   1ed58:	bl	2ff58 <flatcc_builder_start_table@@Base>
   1ed5c:	mov	r3, r0
   1ed60:	cmp	r3, #0
   1ed64:	bne	22774 <_start@@Base+0xe17c>
   1ed68:	sub	r3, fp, #60	; 0x3c
   1ed6c:	str	r3, [sp]
   1ed70:	mov	r3, #1
   1ed74:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ed78:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ed7c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ed80:	bl	3dc40 <flatcc_json_parser_prepare_unions@@Base>
   1ed84:	mov	r2, r0
   1ed88:	ldr	r3, [fp, #-168]	; 0xffffff58
   1ed8c:	cmp	r3, r2
   1ed90:	beq	2277c <_start@@Base+0xe184>
   1ed94:	sub	r3, fp, #52	; 0x34
   1ed98:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ed9c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1eda0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1eda4:	bl	15130 <_start@@Base+0xb38>
   1eda8:	str	r0, [fp, #-164]	; 0xffffff5c
   1edac:	b	226d0 <_start@@Base+0xe0d8>
   1edb0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1edb4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1edb8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1edbc:	bl	14cf4 <_start@@Base+0x6fc>
   1edc0:	str	r0, [fp, #-164]	; 0xffffff5c
   1edc4:	ldr	r1, [fp, #-168]	; 0xffffff58
   1edc8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1edcc:	bl	14ffc <_start@@Base+0xa04>
   1edd0:	strd	r0, [fp, #-36]	; 0xffffffdc
   1edd4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1edd8:	add	r3, pc, #840	; 0x348
   1eddc:	ldrd	r2, [r3]
   1ede0:	cmp	r1, r3
   1ede4:	cmpeq	r0, r2
   1ede8:	bhi	20058 <_start@@Base+0xba60>
   1edec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1edf0:	add	r3, pc, #824	; 0x338
   1edf4:	ldrd	r2, [r3]
   1edf8:	cmp	r1, r3
   1edfc:	cmpeq	r0, r2
   1ee00:	bhi	1f80c <_start@@Base+0xb214>
   1ee04:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ee08:	add	r3, pc, #808	; 0x328
   1ee0c:	ldrd	r2, [r3]
   1ee10:	cmp	r1, r3
   1ee14:	cmpeq	r0, r2
   1ee18:	bhi	1f064 <_start@@Base+0xaa6c>
   1ee1c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ee20:	mov	r2, #-16777216	; 0xff000000
   1ee24:	mvn	r3, #0
   1ee28:	and	ip, r0, r2
   1ee2c:	str	ip, [fp, #-180]	; 0xffffff4c
   1ee30:	and	r3, r1, r3
   1ee34:	str	r3, [fp, #-176]	; 0xffffff50
   1ee38:	add	r3, pc, #768	; 0x300
   1ee3c:	ldrd	r2, [r3]
   1ee40:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   1ee44:	cmp	r1, r3
   1ee48:	cmpeq	r0, r2
   1ee4c:	bne	1eef0 <_start@@Base+0xa8f8>
   1ee50:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ee54:	str	r3, [fp, #-40]	; 0xffffffd8
   1ee58:	mov	r3, #5
   1ee5c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ee60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ee64:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ee68:	bl	15600 <_start@@Base+0x1008>
   1ee6c:	str	r0, [fp, #-164]	; 0xffffff5c
   1ee70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ee74:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ee78:	cmp	r2, r3
   1ee7c:	beq	1eed8 <_start@@Base+0xa8e0>
   1ee80:	sub	r3, fp, #56	; 0x38
   1ee84:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ee88:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1ee8c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ee90:	bl	1ed10 <_start@@Base+0xa718>
   1ee94:	str	r0, [fp, #-164]	; 0xffffff5c
   1ee98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee9c:	cmp	r3, #0
   1eea0:	beq	22784 <_start@@Base+0xe18c>
   1eea4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1eea8:	ldr	r3, [r3]
   1eeac:	mov	r1, #12
   1eeb0:	mov	r0, r3
   1eeb4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1eeb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1eebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eec0:	cmp	r3, #0
   1eec4:	beq	22784 <_start@@Base+0xe18c>
   1eec8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1eecc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eed0:	str	r2, [r3]
   1eed4:	b	226b8 <_start@@Base+0xe0c0>
   1eed8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1eedc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1eee0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1eee4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1eee8:	str	r0, [fp, #-164]	; 0xffffff5c
   1eeec:	b	226b8 <_start@@Base+0xe0c0>
   1eef0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1eef4:	mov	r2, #-16777216	; 0xff000000
   1eef8:	mvn	r3, #0
   1eefc:	and	ip, r0, r2
   1ef00:	str	ip, [fp, #-188]	; 0xffffff44
   1ef04:	and	r3, r1, r3
   1ef08:	str	r3, [fp, #-184]	; 0xffffff48
   1ef0c:	add	r3, pc, #564	; 0x234
   1ef10:	ldrd	r2, [r3]
   1ef14:	ldrd	r0, [fp, #-188]	; 0xffffff44
   1ef18:	cmp	r1, r3
   1ef1c:	cmpeq	r0, r2
   1ef20:	bne	1f04c <_start@@Base+0xaa54>
   1ef24:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ef28:	str	r3, [fp, #-40]	; 0xffffffd8
   1ef2c:	mov	r3, #5
   1ef30:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ef34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ef38:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ef3c:	bl	15600 <_start@@Base+0x1008>
   1ef40:	str	r0, [fp, #-164]	; 0xffffff5c
   1ef44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ef48:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ef4c:	cmp	r2, r3
   1ef50:	beq	1f034 <_start@@Base+0xaa3c>
   1ef54:	mov	r3, #0
   1ef58:	strb	r3, [fp, #-61]	; 0xffffffc3
   1ef5c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ef60:	str	r3, [fp, #-40]	; 0xffffffd8
   1ef64:	sub	r3, fp, #61	; 0x3d
   1ef68:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ef6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ef70:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ef74:	bl	16460 <_start@@Base+0x1e68>
   1ef78:	str	r0, [fp, #-164]	; 0xffffff5c
   1ef7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ef80:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ef84:	cmp	r2, r3
   1ef88:	bne	1efd8 <_start@@Base+0xa9e0>
   1ef8c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ef90:	str	r3, [fp, #-40]	; 0xffffffd8
   1ef94:	sub	r3, fp, #61	; 0x3d
   1ef98:	str	r3, [sp]
   1ef9c:	ldr	r3, [pc, #436]	; 1f158 <_start@@Base+0xab60>
   1efa0:	add	r3, pc, r3
   1efa4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1efa8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1efac:	ldr	r0, [fp, #-160]	; 0xffffff60
   1efb0:	bl	171c4 <_start@@Base+0x2bcc>
   1efb4:	str	r0, [fp, #-164]	; 0xffffff5c
   1efb8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1efbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1efc0:	cmp	r2, r3
   1efc4:	beq	2278c <_start@@Base+0xe194>
   1efc8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1efcc:	ldr	r3, [fp, #-168]	; 0xffffff58
   1efd0:	cmp	r2, r3
   1efd4:	beq	2278c <_start@@Base+0xe194>
   1efd8:	ldrsb	r3, [fp, #-61]	; 0xffffffc3
   1efdc:	cmp	r3, #8
   1efe0:	bne	1eff8 <_start@@Base+0xaa00>
   1efe4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1efe8:	ldr	r3, [r3, #8]
   1efec:	and	r3, r3, #2
   1eff0:	cmp	r3, #0
   1eff4:	beq	226b8 <_start@@Base+0xe0c0>
   1eff8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1effc:	ldr	r0, [r3]
   1f000:	mov	r3, #1
   1f004:	mov	r2, #1
   1f008:	mov	r1, #6
   1f00c:	bl	3255c <flatcc_builder_table_add@@Base>
   1f010:	str	r0, [fp, #-48]	; 0xffffffd0
   1f014:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f018:	cmp	r3, #0
   1f01c:	beq	22794 <_start@@Base+0xe19c>
   1f020:	ldrsb	r3, [fp, #-61]	; 0xffffffc3
   1f024:	mov	r1, r3
   1f028:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f02c:	bl	148c8 <_start@@Base+0x2d0>
   1f030:	b	226b8 <_start@@Base+0xe0c0>
   1f034:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f038:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f03c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f040:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f044:	str	r0, [fp, #-164]	; 0xffffff5c
   1f048:	b	226b8 <_start@@Base+0xe0c0>
   1f04c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f050:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f054:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f058:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f05c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f060:	b	226b8 <_start@@Base+0xe0c0>
   1f064:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f068:	mvn	r2, #0
   1f06c:	movw	r3, #65535	; 0xffff
   1f070:	movt	r3, #26735	; 0x686f
   1f074:	cmp	r1, r3
   1f078:	cmpeq	r0, r2
   1f07c:	bhi	1f2c4 <_start@@Base+0xaccc>
   1f080:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f084:	mov	r2, #0
   1f088:	mvn	r3, #0
   1f08c:	and	ip, r0, r2
   1f090:	str	ip, [fp, #-196]	; 0xffffff3c
   1f094:	and	r3, r1, r3
   1f098:	str	r3, [fp, #-192]	; 0xffffff40
   1f09c:	add	r3, pc, #172	; 0xac
   1f0a0:	ldrd	r2, [r3]
   1f0a4:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   1f0a8:	cmp	r1, r3
   1f0ac:	cmpeq	r0, r2
   1f0b0:	bne	1f2ac <_start@@Base+0xacb4>
   1f0b4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f0b8:	str	r3, [fp, #-40]	; 0xffffffd8
   1f0bc:	mov	r3, #4
   1f0c0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f0c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f0c8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f0cc:	bl	15600 <_start@@Base+0x1008>
   1f0d0:	str	r0, [fp, #-164]	; 0xffffff5c
   1f0d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f0d8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f0dc:	cmp	r2, r3
   1f0e0:	beq	1f294 <_start@@Base+0xac9c>
   1f0e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f0e8:	ldr	r0, [r3]
   1f0ec:	mvn	r3, #0
   1f0f0:	mov	r2, #1
   1f0f4:	mov	r1, #1
   1f0f8:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   1f0fc:	mov	r3, r0
   1f100:	cmp	r3, #0
   1f104:	bne	2279c <_start@@Base+0xe1a4>
   1f108:	sub	r3, fp, #52	; 0x34
   1f10c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f110:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f114:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f118:	bl	15398 <_start@@Base+0xda0>
   1f11c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f120:	b	1f230 <_start@@Base+0xac38>
   1f124:	nop	{0}
   1f128:	cmnvs	r2, r0, ror #4
   1f12c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f130:			; <UNDEFINED> instruction: 0xffffffff
   1f134:	cdpvs	13, 6, cr6, cr1, cr4, {3}
   1f138:			; <UNDEFINED> instruction: 0xffffffff
   1f13c:			; <UNDEFINED> instruction: 0x666c6577
   1f140:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   1f144:	strbvs	r6, [lr, #-1389]!	; 0xfffffa93
   1f148:	andvc	r0, r0, #0
   1f14c:	cmnvs	pc, #28416	; 0x6f00
   1f150:	andeq	r0, r0, r0
   1f154:			; <UNDEFINED> instruction: 0x666c6578
   1f158:	andeq	r6, r4, r8, ror r2
   1f15c:	andeq	r6, r4, r8, asr r0
   1f160:	mov	r3, #0
   1f164:	strb	r3, [fp, #-62]	; 0xffffffc2
   1f168:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f16c:	ldr	r3, [r3]
   1f170:	mov	r1, #1
   1f174:	mov	r0, r3
   1f178:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   1f17c:	str	r0, [fp, #-48]	; 0xffffffd0
   1f180:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f184:	cmp	r3, #0
   1f188:	beq	227a4 <_start@@Base+0xe1ac>
   1f18c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f190:	str	r3, [fp, #-40]	; 0xffffffd8
   1f194:	sub	r3, fp, #62	; 0x3e
   1f198:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f19c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f1a0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f1a4:	bl	160ec <_start@@Base+0x1af4>
   1f1a8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f1ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f1b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f1b4:	cmp	r2, r3
   1f1b8:	bne	1f208 <_start@@Base+0xac10>
   1f1bc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f1c0:	str	r3, [fp, #-40]	; 0xffffffd8
   1f1c4:	sub	r3, fp, #62	; 0x3e
   1f1c8:	str	r3, [sp]
   1f1cc:	ldr	r3, [pc, #-120]	; 1f15c <_start@@Base+0xab64>
   1f1d0:	add	r3, pc, r3
   1f1d4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f1d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f1dc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f1e0:	bl	16b3c <_start@@Base+0x2544>
   1f1e4:	str	r0, [fp, #-164]	; 0xffffff5c
   1f1e8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f1ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f1f0:	cmp	r2, r3
   1f1f4:	beq	227ac <_start@@Base+0xe1b4>
   1f1f8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f1fc:	ldr	r3, [fp, #-168]	; 0xffffff58
   1f200:	cmp	r2, r3
   1f204:	beq	227ac <_start@@Base+0xe1b4>
   1f208:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   1f20c:	mov	r1, r3
   1f210:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f214:	bl	14710 <_start@@Base+0x118>
   1f218:	sub	r3, fp, #52	; 0x34
   1f21c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f220:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f224:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f228:	bl	1548c <_start@@Base+0xe94>
   1f22c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f230:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f234:	cmp	r3, #0
   1f238:	bne	1f160 <_start@@Base+0xab68>
   1f23c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f240:	ldr	r3, [r3]
   1f244:	mov	r0, r3
   1f248:	bl	30f80 <flatcc_builder_end_vector@@Base>
   1f24c:	mov	r3, r0
   1f250:	str	r3, [fp, #-56]	; 0xffffffc8
   1f254:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f258:	cmp	r3, #0
   1f25c:	beq	227b4 <_start@@Base+0xe1bc>
   1f260:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f264:	ldr	r3, [r3]
   1f268:	mov	r1, #30
   1f26c:	mov	r0, r3
   1f270:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1f274:	str	r0, [fp, #-44]	; 0xffffffd4
   1f278:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f27c:	cmp	r3, #0
   1f280:	beq	227b4 <_start@@Base+0xe1bc>
   1f284:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f28c:	str	r2, [r3]
   1f290:	b	226b8 <_start@@Base+0xe0c0>
   1f294:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f298:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f29c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f2a0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f2a4:	str	r0, [fp, #-164]	; 0xffffff5c
   1f2a8:	b	226b8 <_start@@Base+0xe0c0>
   1f2ac:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f2b0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f2b4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f2b8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f2bc:	str	r0, [fp, #-164]	; 0xffffff5c
   1f2c0:	b	226b8 <_start@@Base+0xe0c0>
   1f2c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f2c8:	add	r3, pc, #944	; 0x3b0
   1f2cc:	ldrd	r2, [r3]
   1f2d0:	cmp	r1, r3
   1f2d4:	cmpeq	r0, r2
   1f2d8:	bhi	1f458 <_start@@Base+0xae60>
   1f2dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f2e0:	mov	r2, #0
   1f2e4:	mov	r3, #0
   1f2e8:	movt	r3, #65535	; 0xffff
   1f2ec:	and	ip, r0, r2
   1f2f0:	str	ip, [fp, #-204]	; 0xffffff34
   1f2f4:	and	r3, r1, r3
   1f2f8:	str	r3, [fp, #-200]	; 0xffffff38
   1f2fc:	mov	r2, #0
   1f300:	mov	r3, #0
   1f304:	movt	r3, #26736	; 0x6870
   1f308:	ldrd	r0, [fp, #-204]	; 0xffffff34
   1f30c:	cmp	r1, r3
   1f310:	cmpeq	r0, r2
   1f314:	bne	1f440 <_start@@Base+0xae48>
   1f318:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f31c:	str	r3, [fp, #-40]	; 0xffffffd8
   1f320:	mov	r3, #2
   1f324:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f328:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f32c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f330:	bl	15600 <_start@@Base+0x1008>
   1f334:	str	r0, [fp, #-164]	; 0xffffff5c
   1f338:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f33c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f340:	cmp	r2, r3
   1f344:	beq	1f428 <_start@@Base+0xae30>
   1f348:	mov	r3, #0
   1f34c:	strh	r3, [fp, #-64]	; 0xffffffc0
   1f350:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f354:	str	r3, [fp, #-40]	; 0xffffffd8
   1f358:	sub	r3, fp, #64	; 0x40
   1f35c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f360:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f364:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f368:	bl	16384 <_start@@Base+0x1d8c>
   1f36c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f370:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f374:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f378:	cmp	r2, r3
   1f37c:	bne	1f3cc <_start@@Base+0xadd4>
   1f380:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f384:	str	r3, [fp, #-40]	; 0xffffffd8
   1f388:	sub	r3, fp, #64	; 0x40
   1f38c:	str	r3, [sp]
   1f390:	ldr	r3, [pc, #760]	; 1f690 <_start@@Base+0xb098>
   1f394:	add	r3, pc, r3
   1f398:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f39c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f3a0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f3a4:	bl	1701c <_start@@Base+0x2a24>
   1f3a8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f3ac:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f3b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f3b4:	cmp	r2, r3
   1f3b8:	beq	227bc <_start@@Base+0xe1c4>
   1f3bc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f3c0:	ldr	r3, [fp, #-168]	; 0xffffff58
   1f3c4:	cmp	r2, r3
   1f3c8:	beq	227bc <_start@@Base+0xe1c4>
   1f3cc:	ldrsh	r3, [fp, #-64]	; 0xffffffc0
   1f3d0:	cmp	r3, #100	; 0x64
   1f3d4:	bne	1f3ec <_start@@Base+0xadf4>
   1f3d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f3dc:	ldr	r3, [r3, #8]
   1f3e0:	and	r3, r3, #2
   1f3e4:	cmp	r3, #0
   1f3e8:	beq	226b8 <_start@@Base+0xe0c0>
   1f3ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f3f0:	ldr	r0, [r3]
   1f3f4:	mov	r3, #2
   1f3f8:	mov	r2, #2
   1f3fc:	mov	r1, #2
   1f400:	bl	3255c <flatcc_builder_table_add@@Base>
   1f404:	str	r0, [fp, #-48]	; 0xffffffd0
   1f408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f40c:	cmp	r3, #0
   1f410:	beq	227c4 <_start@@Base+0xe1cc>
   1f414:	ldrsh	r3, [fp, #-64]	; 0xffffffc0
   1f418:	mov	r1, r3
   1f41c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f420:	bl	1493c <_start@@Base+0x344>
   1f424:	b	226b8 <_start@@Base+0xe0c0>
   1f428:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f42c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f430:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f434:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f438:	str	r0, [fp, #-164]	; 0xffffff5c
   1f43c:	b	226b8 <_start@@Base+0xe0c0>
   1f440:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f444:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f448:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f44c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f450:	str	r0, [fp, #-164]	; 0xffffff5c
   1f454:	b	226b8 <_start@@Base+0xe0c0>
   1f458:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f45c:	add	r3, pc, #548	; 0x224
   1f460:	ldrd	r2, [r3]
   1f464:	cmp	r1, r3
   1f468:	cmpeq	r0, r2
   1f46c:	bne	1f698 <_start@@Base+0xb0a0>
   1f470:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f474:	add	r3, r3, #8
   1f478:	str	r3, [fp, #-164]	; 0xffffff5c
   1f47c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1f480:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1f484:	bl	14ffc <_start@@Base+0xa04>
   1f488:	strd	r0, [fp, #-36]	; 0xffffffdc
   1f48c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f490:	mov	r2, #0
   1f494:	mov	r3, #-16777216	; 0xff000000
   1f498:	and	r4, r0, r2
   1f49c:	and	r5, r1, r3
   1f4a0:	cmp	r5, #2030043136	; 0x79000000
   1f4a4:	cmpeq	r4, #0
   1f4a8:	bne	1f668 <_start@@Base+0xb070>
   1f4ac:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f4b0:	str	r3, [fp, #-40]	; 0xffffffd8
   1f4b4:	mov	r3, #1
   1f4b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f4bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f4c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f4c4:	bl	15600 <_start@@Base+0x1008>
   1f4c8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f4cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f4d0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f4d4:	cmp	r2, r3
   1f4d8:	beq	1f650 <_start@@Base+0xb058>
   1f4dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f4e0:	ldr	r0, [r3]
   1f4e4:	mvn	r3, #0
   1f4e8:	mov	r2, #1
   1f4ec:	mov	r1, #1
   1f4f0:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   1f4f4:	mov	r3, r0
   1f4f8:	cmp	r3, #0
   1f4fc:	bne	227cc <_start@@Base+0xe1d4>
   1f500:	sub	r3, fp, #52	; 0x34
   1f504:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f508:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f50c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f510:	bl	15398 <_start@@Base+0xda0>
   1f514:	str	r0, [fp, #-164]	; 0xffffff5c
   1f518:	b	1f5ec <_start@@Base+0xaff4>
   1f51c:	mov	r3, #0
   1f520:	strb	r3, [fp, #-65]	; 0xffffffbf
   1f524:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f528:	ldr	r3, [r3]
   1f52c:	mov	r1, #1
   1f530:	mov	r0, r3
   1f534:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   1f538:	str	r0, [fp, #-48]	; 0xffffffd0
   1f53c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f540:	cmp	r3, #0
   1f544:	beq	227d4 <_start@@Base+0xe1dc>
   1f548:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f54c:	str	r3, [fp, #-40]	; 0xffffffd8
   1f550:	sub	r3, fp, #65	; 0x41
   1f554:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f558:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f55c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f560:	bl	160ec <_start@@Base+0x1af4>
   1f564:	str	r0, [fp, #-164]	; 0xffffff5c
   1f568:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f56c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f570:	cmp	r2, r3
   1f574:	bne	1f5c4 <_start@@Base+0xafcc>
   1f578:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f57c:	str	r3, [fp, #-40]	; 0xffffffd8
   1f580:	sub	r3, fp, #65	; 0x41
   1f584:	str	r3, [sp]
   1f588:	ldr	r3, [pc, #260]	; 1f694 <_start@@Base+0xb09c>
   1f58c:	add	r3, pc, r3
   1f590:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f594:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f598:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f59c:	bl	16b3c <_start@@Base+0x2544>
   1f5a0:	str	r0, [fp, #-164]	; 0xffffff5c
   1f5a4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f5a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f5ac:	cmp	r2, r3
   1f5b0:	beq	227dc <_start@@Base+0xe1e4>
   1f5b4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f5b8:	ldr	r3, [fp, #-168]	; 0xffffff58
   1f5bc:	cmp	r2, r3
   1f5c0:	beq	227dc <_start@@Base+0xe1e4>
   1f5c4:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   1f5c8:	mov	r1, r3
   1f5cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f5d0:	bl	14710 <_start@@Base+0x118>
   1f5d4:	sub	r3, fp, #52	; 0x34
   1f5d8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f5dc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f5e0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f5e4:	bl	1548c <_start@@Base+0xe94>
   1f5e8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f5ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f5f0:	cmp	r3, #0
   1f5f4:	bne	1f51c <_start@@Base+0xaf24>
   1f5f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f5fc:	ldr	r3, [r3]
   1f600:	mov	r0, r3
   1f604:	bl	30f80 <flatcc_builder_end_vector@@Base>
   1f608:	mov	r3, r0
   1f60c:	str	r3, [fp, #-56]	; 0xffffffc8
   1f610:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f614:	cmp	r3, #0
   1f618:	beq	227e4 <_start@@Base+0xe1ec>
   1f61c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f620:	ldr	r3, [r3]
   1f624:	mov	r1, #5
   1f628:	mov	r0, r3
   1f62c:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1f630:	str	r0, [fp, #-44]	; 0xffffffd4
   1f634:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f638:	cmp	r3, #0
   1f63c:	beq	227e4 <_start@@Base+0xe1ec>
   1f640:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f644:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f648:	str	r2, [r3]
   1f64c:	b	226b8 <_start@@Base+0xe0c0>
   1f650:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f654:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f658:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f65c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f660:	str	r0, [fp, #-164]	; 0xffffff5c
   1f664:	b	226b8 <_start@@Base+0xe0c0>
   1f668:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f66c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f670:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f674:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f678:	str	r0, [fp, #-164]	; 0xffffff5c
   1f67c:	b	226b8 <_start@@Base+0xe0c0>
   1f680:	mrcvs	15, 3, r6, cr4, cr1, {3}
   1f684:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1f688:	mrcvs	15, 3, r6, cr4, cr2, {3}
   1f68c:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1f690:	andeq	r5, r4, r0, lsr #29
   1f694:			; <UNDEFINED> instruction: 0x00045cb4
   1f698:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f69c:	mov	r2, #0
   1f6a0:	mvn	r3, #0
   1f6a4:	and	ip, r0, r2
   1f6a8:	str	ip, [fp, #-212]	; 0xffffff2c
   1f6ac:	and	r3, r1, r3
   1f6b0:	str	r3, [fp, #-208]	; 0xffffff30
   1f6b4:	add	r3, pc, #988	; 0x3dc
   1f6b8:	ldrd	r2, [r3]
   1f6bc:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   1f6c0:	cmp	r1, r3
   1f6c4:	cmpeq	r0, r2
   1f6c8:	bne	1f7f4 <_start@@Base+0xb1fc>
   1f6cc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f6d0:	str	r3, [fp, #-40]	; 0xffffffd8
   1f6d4:	mov	r3, #4
   1f6d8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f6dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f6e0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f6e4:	bl	15600 <_start@@Base+0x1008>
   1f6e8:	str	r0, [fp, #-164]	; 0xffffff5c
   1f6ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f6f0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f6f4:	cmp	r2, r3
   1f6f8:	beq	1f7dc <_start@@Base+0xb1e4>
   1f6fc:	mov	r3, #0
   1f700:	strh	r3, [fp, #-68]	; 0xffffffbc
   1f704:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f708:	str	r3, [fp, #-40]	; 0xffffffd8
   1f70c:	sub	r3, fp, #68	; 0x44
   1f710:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f714:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f718:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f71c:	bl	16384 <_start@@Base+0x1d8c>
   1f720:	str	r0, [fp, #-164]	; 0xffffff5c
   1f724:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f728:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f72c:	cmp	r2, r3
   1f730:	bne	1f780 <_start@@Base+0xb188>
   1f734:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f738:	str	r3, [fp, #-40]	; 0xffffffd8
   1f73c:	sub	r3, fp, #68	; 0x44
   1f740:	str	r3, [sp]
   1f744:	ldr	r3, [pc, #900]	; 1fad0 <_start@@Base+0xb4d8>
   1f748:	add	r3, pc, r3
   1f74c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f750:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f754:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f758:	bl	1701c <_start@@Base+0x2a24>
   1f75c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f760:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f764:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f768:	cmp	r2, r3
   1f76c:	beq	227ec <_start@@Base+0xe1f4>
   1f770:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f774:	ldr	r3, [fp, #-168]	; 0xffffff58
   1f778:	cmp	r2, r3
   1f77c:	beq	227ec <_start@@Base+0xe1f4>
   1f780:	ldrsh	r3, [fp, #-68]	; 0xffffffbc
   1f784:	cmp	r3, #150	; 0x96
   1f788:	bne	1f7a0 <_start@@Base+0xb1a8>
   1f78c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f790:	ldr	r3, [r3, #8]
   1f794:	and	r3, r3, #2
   1f798:	cmp	r3, #0
   1f79c:	beq	226b8 <_start@@Base+0xe0c0>
   1f7a0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f7a4:	ldr	r0, [r3]
   1f7a8:	mov	r3, #2
   1f7ac:	mov	r2, #2
   1f7b0:	mov	r1, #1
   1f7b4:	bl	3255c <flatcc_builder_table_add@@Base>
   1f7b8:	str	r0, [fp, #-48]	; 0xffffffd0
   1f7bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f7c0:	cmp	r3, #0
   1f7c4:	beq	227f4 <_start@@Base+0xe1fc>
   1f7c8:	ldrsh	r3, [fp, #-68]	; 0xffffffbc
   1f7cc:	mov	r1, r3
   1f7d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f7d4:	bl	1493c <_start@@Base+0x344>
   1f7d8:	b	226b8 <_start@@Base+0xe0c0>
   1f7dc:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f7e0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f7e4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f7e8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f7ec:	str	r0, [fp, #-164]	; 0xffffff5c
   1f7f0:	b	226b8 <_start@@Base+0xe0c0>
   1f7f4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f7f8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f7fc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f800:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f804:	str	r0, [fp, #-164]	; 0xffffff5c
   1f808:	b	226b8 <_start@@Base+0xe0c0>
   1f80c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f810:	add	r3, pc, #648	; 0x288
   1f814:	ldrd	r2, [r3]
   1f818:	cmp	r1, r3
   1f81c:	cmpeq	r0, r2
   1f820:	bhi	1fbac <_start@@Base+0xb5b4>
   1f824:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f828:	add	r3, pc, #632	; 0x278
   1f82c:	ldrd	r2, [r3]
   1f830:	cmp	r1, r3
   1f834:	cmpeq	r0, r2
   1f838:	bhi	1f928 <_start@@Base+0xb330>
   1f83c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f840:	mov	r2, #0
   1f844:	mvn	r3, #0
   1f848:	and	ip, r0, r2
   1f84c:	str	ip, [fp, #-220]	; 0xffffff24
   1f850:	and	r3, r1, r3
   1f854:	str	r3, [fp, #-216]	; 0xffffff28
   1f858:	add	r3, pc, #592	; 0x250
   1f85c:	ldrd	r2, [r3]
   1f860:	ldrd	r0, [fp, #-220]	; 0xffffff24
   1f864:	cmp	r1, r3
   1f868:	cmpeq	r0, r2
   1f86c:	bne	1f910 <_start@@Base+0xb318>
   1f870:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f874:	str	r3, [fp, #-40]	; 0xffffffd8
   1f878:	mov	r3, #4
   1f87c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f880:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f884:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f888:	bl	15600 <_start@@Base+0x1008>
   1f88c:	str	r0, [fp, #-164]	; 0xffffff5c
   1f890:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f894:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f898:	cmp	r2, r3
   1f89c:	beq	1f8f8 <_start@@Base+0xb300>
   1f8a0:	sub	r3, fp, #56	; 0x38
   1f8a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f8a8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f8ac:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f8b0:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   1f8b4:	str	r0, [fp, #-164]	; 0xffffff5c
   1f8b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f8bc:	cmp	r3, #0
   1f8c0:	beq	227fc <_start@@Base+0xe204>
   1f8c4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f8c8:	ldr	r3, [r3]
   1f8cc:	mov	r1, #3
   1f8d0:	mov	r0, r3
   1f8d4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1f8d8:	str	r0, [fp, #-44]	; 0xffffffd4
   1f8dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f8e0:	cmp	r3, #0
   1f8e4:	beq	227fc <_start@@Base+0xe204>
   1f8e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f8ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f8f0:	str	r2, [r3]
   1f8f4:	b	226b8 <_start@@Base+0xe0c0>
   1f8f8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f8fc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f900:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f904:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f908:	str	r0, [fp, #-164]	; 0xffffff5c
   1f90c:	b	226b8 <_start@@Base+0xe0c0>
   1f910:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f914:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f918:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f91c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1f920:	str	r0, [fp, #-164]	; 0xffffff5c
   1f924:	b	226b8 <_start@@Base+0xe0c0>
   1f928:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f92c:	add	r3, pc, #388	; 0x184
   1f930:	ldrd	r2, [r3]
   1f934:	cmp	r1, r3
   1f938:	cmpeq	r0, r2
   1f93c:	bne	1fad4 <_start@@Base+0xb4dc>
   1f940:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f944:	add	r3, r3, #8
   1f948:	str	r3, [fp, #-164]	; 0xffffff5c
   1f94c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1f950:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1f954:	bl	14ffc <_start@@Base+0xa04>
   1f958:	strd	r0, [fp, #-36]	; 0xffffffdc
   1f95c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f960:	add	r3, pc, #344	; 0x158
   1f964:	ldrd	r2, [r3]
   1f968:	cmp	r1, r3
   1f96c:	cmpeq	r0, r2
   1f970:	bne	1fa7c <_start@@Base+0xb484>
   1f974:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f978:	add	r3, r3, #8
   1f97c:	str	r3, [fp, #-164]	; 0xffffff5c
   1f980:	ldr	r1, [fp, #-168]	; 0xffffff58
   1f984:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1f988:	bl	14ffc <_start@@Base+0xa04>
   1f98c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1f990:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f994:	mov	r2, #-16777216	; 0xff000000
   1f998:	mvn	r3, #0
   1f99c:	and	ip, r0, r2
   1f9a0:	str	ip, [fp, #-228]	; 0xffffff1c
   1f9a4:	and	r3, r1, r3
   1f9a8:	str	r3, [fp, #-224]	; 0xffffff20
   1f9ac:	add	r3, pc, #276	; 0x114
   1f9b0:	ldrd	r2, [r3]
   1f9b4:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   1f9b8:	cmp	r1, r3
   1f9bc:	cmpeq	r0, r2
   1f9c0:	bne	1fa64 <_start@@Base+0xb46c>
   1f9c4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f9c8:	str	r3, [fp, #-40]	; 0xffffffd8
   1f9cc:	mov	r3, #5
   1f9d0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f9d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1f9d8:	ldr	r0, [fp, #-160]	; 0xffffff60
   1f9dc:	bl	15600 <_start@@Base+0x1008>
   1f9e0:	str	r0, [fp, #-164]	; 0xffffff5c
   1f9e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f9e8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f9ec:	cmp	r2, r3
   1f9f0:	beq	1fa4c <_start@@Base+0xb454>
   1f9f4:	sub	r3, fp, #56	; 0x38
   1f9f8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f9fc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa00:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa04:	bl	18674 <_start@@Base+0x407c>
   1fa08:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fa10:	cmp	r3, #0
   1fa14:	beq	22804 <_start@@Base+0xe20c>
   1fa18:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fa1c:	ldr	r3, [r3]
   1fa20:	mov	r1, #34	; 0x22
   1fa24:	mov	r0, r3
   1fa28:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1fa2c:	str	r0, [fp, #-44]	; 0xffffffd4
   1fa30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fa34:	cmp	r3, #0
   1fa38:	beq	22804 <_start@@Base+0xe20c>
   1fa3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1fa40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fa44:	str	r2, [r3]
   1fa48:	b	226b8 <_start@@Base+0xe0c0>
   1fa4c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fa50:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa54:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa58:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa5c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa60:	b	226b8 <_start@@Base+0xe0c0>
   1fa64:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fa68:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa6c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa70:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa74:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa78:	b	226b8 <_start@@Base+0xe0c0>
   1fa7c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fa80:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fa84:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fa88:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa8c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fa90:	b	226b8 <_start@@Base+0xe0c0>
   1fa94:	nop	{0}
   1fa98:	andeq	r0, r0, r0
   1fa9c:	stclvs	14, cr6, [r1, #-388]!	; 0xfffffe7c
   1faa0:			; <UNDEFINED> instruction: 0xffffffff
   1faa4:	strbtvc	r7, [r5], #-883	; 0xfffffc8d
   1faa8:	cdpvs	15, 7, cr5, cr4, cr13, {3}
   1faac:	rsbvc	r7, r1, r5, ror #4
   1fab0:	andeq	r0, r0, r0
   1fab4:	cdpvs	13, 6, cr6, cr1, cr5, {3}
   1fab8:	cdpvs	15, 7, cr5, cr4, cr14, {3}
   1fabc:	rsbvc	r7, r1, r5, ror #4
   1fac0:	rsbvc	r6, r1, r5, ror #6
   1fac4:	smcvs	54867	; 0xd653
   1fac8:	strvc	r0, [r0], #-0
   1facc:	svcpl	0x00746573
   1fad0:	andeq	r5, r4, r4, lsl #22
   1fad4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1fad8:	mov	r2, #0
   1fadc:	mvn	r3, #255	; 0xff
   1fae0:	and	ip, r0, r2
   1fae4:	str	ip, [fp, #-236]	; 0xffffff14
   1fae8:	and	r3, r1, r3
   1faec:	str	r3, [fp, #-232]	; 0xffffff18
   1faf0:	add	r3, pc, #872	; 0x368
   1faf4:	ldrd	r2, [r3]
   1faf8:	ldrd	r0, [fp, #-236]	; 0xffffff14
   1fafc:	cmp	r1, r3
   1fb00:	cmpeq	r0, r2
   1fb04:	bne	1fb94 <_start@@Base+0xb59c>
   1fb08:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fb0c:	str	r3, [fp, #-40]	; 0xffffffd8
   1fb10:	mov	r3, #3
   1fb14:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fb18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fb1c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fb20:	bl	15600 <_start@@Base+0x1008>
   1fb24:	str	r0, [fp, #-164]	; 0xffffff5c
   1fb28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fb2c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fb30:	cmp	r2, r3
   1fb34:	beq	1fb7c <_start@@Base+0xb584>
   1fb38:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fb3c:	ldr	r0, [r3]
   1fb40:	mov	r3, #16
   1fb44:	mov	r2, #32
   1fb48:	mov	r1, #0
   1fb4c:	bl	3255c <flatcc_builder_table_add@@Base>
   1fb50:	str	r0, [fp, #-48]	; 0xffffffd0
   1fb54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fb58:	cmp	r3, #0
   1fb5c:	beq	2280c <_start@@Base+0xe214>
   1fb60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fb64:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fb68:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fb6c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fb70:	bl	1b6ec <_start@@Base+0x70f4>
   1fb74:	str	r0, [fp, #-164]	; 0xffffff5c
   1fb78:	b	226b8 <_start@@Base+0xe0c0>
   1fb7c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fb80:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fb84:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fb88:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1fb8c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fb90:	b	226b8 <_start@@Base+0xe0c0>
   1fb94:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fb98:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fb9c:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fba0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   1fba4:	str	r0, [fp, #-164]	; 0xffffff5c
   1fba8:	b	226b8 <_start@@Base+0xe0c0>
   1fbac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1fbb0:	mov	r2, #-16777216	; 0xff000000
   1fbb4:	mvn	r3, #0
   1fbb8:	and	ip, r0, r2
   1fbbc:	str	ip, [fp, #-244]	; 0xffffff0c
   1fbc0:	and	r3, r1, r3
   1fbc4:	str	r3, [fp, #-240]	; 0xffffff10
   1fbc8:	add	r3, pc, #664	; 0x298
   1fbcc:	ldrd	r2, [r3]
   1fbd0:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   1fbd4:	cmp	r1, r3
   1fbd8:	cmpeq	r0, r2
   1fbdc:	bne	1fd08 <_start@@Base+0xb710>
   1fbe0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fbe4:	str	r3, [fp, #-40]	; 0xffffffd8
   1fbe8:	mov	r3, #5
   1fbec:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fbf0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fbf4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fbf8:	bl	15600 <_start@@Base+0x1008>
   1fbfc:	str	r0, [fp, #-164]	; 0xffffff5c
   1fc00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fc04:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fc08:	cmp	r2, r3
   1fc0c:	beq	1fda4 <_start@@Base+0xb7ac>
   1fc10:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fc14:	ldr	r0, [r3]
   1fc18:	mvn	r3, #-1073741824	; 0xc0000000
   1fc1c:	mov	r2, #2
   1fc20:	mov	r1, #4
   1fc24:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   1fc28:	mov	r3, r0
   1fc2c:	cmp	r3, #0
   1fc30:	bne	22814 <_start@@Base+0xe21c>
   1fc34:	sub	r3, fp, #52	; 0x34
   1fc38:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fc3c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fc40:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fc44:	bl	15398 <_start@@Base+0xda0>
   1fc48:	str	r0, [fp, #-164]	; 0xffffff5c
   1fc4c:	b	1fca4 <_start@@Base+0xb6ac>
   1fc50:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fc54:	ldr	r3, [r3]
   1fc58:	mov	r1, #1
   1fc5c:	mov	r0, r3
   1fc60:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   1fc64:	str	r0, [fp, #-48]	; 0xffffffd0
   1fc68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fc6c:	cmp	r3, #0
   1fc70:	beq	2281c <_start@@Base+0xe224>
   1fc74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fc78:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fc7c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fc80:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fc84:	bl	19c38 <_start@@Base+0x5640>
   1fc88:	str	r0, [fp, #-164]	; 0xffffff5c
   1fc8c:	sub	r3, fp, #52	; 0x34
   1fc90:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fc94:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fc98:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fc9c:	bl	1548c <_start@@Base+0xe94>
   1fca0:	str	r0, [fp, #-164]	; 0xffffff5c
   1fca4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fca8:	cmp	r3, #0
   1fcac:	bne	1fc50 <_start@@Base+0xb658>
   1fcb0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fcb4:	ldr	r3, [r3]
   1fcb8:	mov	r0, r3
   1fcbc:	bl	30f80 <flatcc_builder_end_vector@@Base>
   1fcc0:	mov	r3, r0
   1fcc4:	str	r3, [fp, #-56]	; 0xffffffc8
   1fcc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fccc:	cmp	r3, #0
   1fcd0:	beq	22824 <_start@@Base+0xe22c>
   1fcd4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fcd8:	ldr	r3, [r3]
   1fcdc:	mov	r1, #9
   1fce0:	mov	r0, r3
   1fce4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1fce8:	str	r0, [fp, #-44]	; 0xffffffd4
   1fcec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fcf0:	cmp	r3, #0
   1fcf4:	beq	22824 <_start@@Base+0xe22c>
   1fcf8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1fcfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fd00:	str	r2, [r3]
   1fd04:	b	226b8 <_start@@Base+0xe0c0>
   1fd08:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1fd0c:	mov	r2, #0
   1fd10:	mvn	r3, #0
   1fd14:	and	ip, r0, r2
   1fd18:	str	ip, [fp, #-252]	; 0xffffff04
   1fd1c:	and	r3, r1, r3
   1fd20:	str	r3, [fp, #-248]	; 0xffffff08
   1fd24:	add	r3, pc, #324	; 0x144
   1fd28:	ldrd	r2, [r3]
   1fd2c:	ldrd	r0, [fp, #-252]	; 0xffffff04
   1fd30:	cmp	r1, r3
   1fd34:	cmpeq	r0, r2
   1fd38:	bne	1fdac <_start@@Base+0xb7b4>
   1fd3c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fd40:	str	r3, [fp, #-40]	; 0xffffffd8
   1fd44:	mov	r3, #4
   1fd48:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fd4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fd50:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fd54:	bl	15600 <_start@@Base+0x1008>
   1fd58:	str	r0, [fp, #-164]	; 0xffffff5c
   1fd5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fd60:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fd64:	cmp	r2, r3
   1fd68:	beq	1fdb4 <_start@@Base+0xb7bc>
   1fd6c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1fd70:	ldr	r3, [pc, #264]	; 1fe80 <_start@@Base+0xb888>
   1fd74:	add	r3, pc, r3
   1fd78:	str	r3, [sp, #8]
   1fd7c:	str	r2, [sp, #4]
   1fd80:	mov	r3, #8
   1fd84:	str	r3, [sp]
   1fd88:	mov	r3, #0
   1fd8c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fd90:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fd94:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fd98:	bl	3dd90 <flatcc_json_parser_union@@Base>
   1fd9c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fda0:	b	226b8 <_start@@Base+0xe0c0>
   1fda4:	nop	{0}
   1fda8:	b	1fdb8 <_start@@Base+0xb7c0>
   1fdac:	nop	{0}
   1fdb0:	b	1fdb8 <_start@@Base+0xb7c0>
   1fdb4:	nop	{0}
   1fdb8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1fdbc:	mov	r2, #-16777216	; 0xff000000
   1fdc0:	mvn	r3, #0
   1fdc4:	and	ip, r0, r2
   1fdc8:	str	ip, [fp, #-260]	; 0xfffffefc
   1fdcc:	and	r3, r1, r3
   1fdd0:	str	r3, [fp, #-256]	; 0xffffff00
   1fdd4:	add	r3, pc, #156	; 0x9c
   1fdd8:	ldrd	r2, [r3]
   1fddc:	sub	r1, fp, #260	; 0x104
   1fde0:	ldrd	r0, [r1]
   1fde4:	cmp	r1, r3
   1fde8:	cmpeq	r0, r2
   1fdec:	bne	1ff3c <_start@@Base+0xb944>
   1fdf0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fdf4:	str	r3, [fp, #-40]	; 0xffffffd8
   1fdf8:	mov	r3, #5
   1fdfc:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fe00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1fe04:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fe08:	bl	15600 <_start@@Base+0x1008>
   1fe0c:	str	r0, [fp, #-164]	; 0xffffff5c
   1fe10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fe14:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1fe18:	cmp	r2, r3
   1fe1c:	beq	1ff44 <_start@@Base+0xb94c>
   1fe20:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fe24:	ldr	r0, [r3]
   1fe28:	mvn	r3, #-1073741824	; 0xc0000000
   1fe2c:	mov	r2, #2
   1fe30:	mov	r1, #4
   1fe34:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   1fe38:	mov	r3, r0
   1fe3c:	cmp	r3, #0
   1fe40:	bne	2282c <_start@@Base+0xe234>
   1fe44:	sub	r3, fp, #52	; 0x34
   1fe48:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fe4c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fe50:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fe54:	bl	15398 <_start@@Base+0xda0>
   1fe58:	str	r0, [fp, #-164]	; 0xffffff5c
   1fe5c:	b	1fed8 <_start@@Base+0xb8e0>
   1fe60:	andeq	r0, r0, r0
   1fe64:	rsbvc	r7, pc, r0, lsl #6
   1fe68:	strcc	r0, [r0], #-0
   1fe6c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fe70:	andeq	r0, r0, r0
   1fe74:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fe78:	strcc	r0, [r0, #-0]
   1fe7c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fe80:			; <UNDEFINED> instruction: 0xffff98d4
   1fe84:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fe88:	ldr	r3, [r3]
   1fe8c:	mov	r1, #1
   1fe90:	mov	r0, r3
   1fe94:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   1fe98:	str	r0, [fp, #-48]	; 0xffffffd0
   1fe9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fea0:	cmp	r3, #0
   1fea4:	beq	22834 <_start@@Base+0xe23c>
   1fea8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1feac:	ldr	r2, [fp, #-168]	; 0xffffff58
   1feb0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1feb4:	ldr	r0, [fp, #-160]	; 0xffffff60
   1feb8:	bl	19c38 <_start@@Base+0x5640>
   1febc:	str	r0, [fp, #-164]	; 0xffffff5c
   1fec0:	sub	r3, fp, #52	; 0x34
   1fec4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fec8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1fecc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1fed0:	bl	1548c <_start@@Base+0xe94>
   1fed4:	str	r0, [fp, #-164]	; 0xffffff5c
   1fed8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fedc:	cmp	r3, #0
   1fee0:	bne	1fe84 <_start@@Base+0xb88c>
   1fee4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fee8:	ldr	r3, [r3]
   1feec:	mov	r0, r3
   1fef0:	bl	30f80 <flatcc_builder_end_vector@@Base>
   1fef4:	mov	r3, r0
   1fef8:	str	r3, [fp, #-56]	; 0xffffffc8
   1fefc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ff00:	cmp	r3, #0
   1ff04:	beq	2283c <_start@@Base+0xe244>
   1ff08:	ldr	r3, [fp, #-160]	; 0xffffff60
   1ff0c:	ldr	r3, [r3]
   1ff10:	mov	r1, #31
   1ff14:	mov	r0, r3
   1ff18:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   1ff1c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ff20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ff24:	cmp	r3, #0
   1ff28:	beq	2283c <_start@@Base+0xe244>
   1ff2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ff30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ff34:	str	r2, [r3]
   1ff38:	b	226b8 <_start@@Base+0xe0c0>
   1ff3c:	nop	{0}
   1ff40:	b	1ff48 <_start@@Base+0xb950>
   1ff44:	nop	{0}
   1ff48:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ff4c:	add	r3, pc, #812	; 0x32c
   1ff50:	ldrd	r2, [r3]
   1ff54:	cmp	r1, r3
   1ff58:	cmpeq	r0, r2
   1ff5c:	bne	20040 <_start@@Base+0xba48>
   1ff60:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ff64:	add	r3, r3, #8
   1ff68:	str	r3, [fp, #-164]	; 0xffffff5c
   1ff6c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1ff70:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1ff74:	bl	14ffc <_start@@Base+0xa04>
   1ff78:	strd	r0, [fp, #-36]	; 0xffffffdc
   1ff7c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1ff80:	mov	r2, #0
   1ff84:	mov	r3, #-16777216	; 0xff000000
   1ff88:	and	r6, r0, r2
   1ff8c:	and	r7, r1, r3
   1ff90:	cmp	r7, #1694498816	; 0x65000000
   1ff94:	cmpeq	r6, #0
   1ff98:	bne	20028 <_start@@Base+0xba30>
   1ff9c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ffa0:	str	r3, [fp, #-40]	; 0xffffffd8
   1ffa4:	mov	r3, #1
   1ffa8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1ffac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ffb0:	ldr	r0, [fp, #-160]	; 0xffffff60
   1ffb4:	bl	15600 <_start@@Base+0x1008>
   1ffb8:	str	r0, [fp, #-164]	; 0xffffff5c
   1ffbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ffc0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1ffc4:	cmp	r2, r3
   1ffc8:	beq	20010 <_start@@Base+0xba18>
   1ffcc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ffd0:	ldr	r3, [pc, #720]	; 202a8 <_start@@Base+0xbcb0>
   1ffd4:	add	r3, pc, r3
   1ffd8:	str	r3, [sp, #12]
   1ffdc:	ldr	r3, [pc, #712]	; 202ac <_start@@Base+0xbcb4>
   1ffe0:	add	r3, pc, r3
   1ffe4:	str	r3, [sp, #8]
   1ffe8:	str	r2, [sp, #4]
   1ffec:	mov	r3, #8
   1fff0:	str	r3, [sp]
   1fff4:	mov	r3, #0
   1fff8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1fffc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20000:	ldr	r0, [fp, #-160]	; 0xffffff60
   20004:	bl	3df74 <flatcc_json_parser_union_type@@Base>
   20008:	str	r0, [fp, #-164]	; 0xffffff5c
   2000c:	b	226b8 <_start@@Base+0xe0c0>
   20010:	ldr	r2, [fp, #-168]	; 0xffffff58
   20014:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20018:	ldr	r0, [fp, #-160]	; 0xffffff60
   2001c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20020:	str	r0, [fp, #-164]	; 0xffffff5c
   20024:	b	226b8 <_start@@Base+0xe0c0>
   20028:	ldr	r2, [fp, #-168]	; 0xffffff58
   2002c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20030:	ldr	r0, [fp, #-160]	; 0xffffff60
   20034:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20038:	str	r0, [fp, #-164]	; 0xffffff5c
   2003c:	b	226b8 <_start@@Base+0xe0c0>
   20040:	ldr	r2, [fp, #-168]	; 0xffffff58
   20044:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20048:	ldr	r0, [fp, #-160]	; 0xffffff60
   2004c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20050:	str	r0, [fp, #-164]	; 0xffffff5c
   20054:	b	226b8 <_start@@Base+0xe0c0>
   20058:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2005c:	add	r3, pc, #548	; 0x224
   20060:	ldrd	r2, [r3]
   20064:	cmp	r1, r3
   20068:	cmpeq	r0, r2
   2006c:	bhi	210f4 <_start@@Base+0xcafc>
   20070:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20074:	add	r3, pc, #532	; 0x214
   20078:	ldrd	r2, [r3]
   2007c:	cmp	r1, r3
   20080:	cmpeq	r0, r2
   20084:	bne	209f4 <_start@@Base+0xc3fc>
   20088:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2008c:	add	r3, r3, #8
   20090:	str	r3, [fp, #-164]	; 0xffffff5c
   20094:	ldr	r1, [fp, #-168]	; 0xffffff58
   20098:	ldr	r0, [fp, #-164]	; 0xffffff5c
   2009c:	bl	14ffc <_start@@Base+0xa04>
   200a0:	strd	r0, [fp, #-36]	; 0xffffffdc
   200a4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   200a8:	add	r3, pc, #488	; 0x1e8
   200ac:	ldrd	r2, [r3]
   200b0:	cmp	r1, r3
   200b4:	cmpeq	r0, r2
   200b8:	bhi	20494 <_start@@Base+0xbe9c>
   200bc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   200c0:	add	r3, pc, #472	; 0x1d8
   200c4:	ldrd	r2, [r3]
   200c8:	cmp	r1, r3
   200cc:	cmpeq	r0, r2
   200d0:	bne	20278 <_start@@Base+0xbc80>
   200d4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   200d8:	str	r3, [fp, #-40]	; 0xffffffd8
   200dc:	mov	r3, #8
   200e0:	ldr	r2, [fp, #-168]	; 0xffffff58
   200e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   200e8:	ldr	r0, [fp, #-160]	; 0xffffff60
   200ec:	bl	15600 <_start@@Base+0x1008>
   200f0:	str	r0, [fp, #-164]	; 0xffffff5c
   200f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   200f8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   200fc:	cmp	r2, r3
   20100:	beq	202b4 <_start@@Base+0xbcbc>
   20104:	ldr	r3, [fp, #-160]	; 0xffffff60
   20108:	ldr	r0, [r3]
   2010c:	mvn	r3, #0
   20110:	mov	r2, #1
   20114:	mov	r1, #1
   20118:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   2011c:	mov	r3, r0
   20120:	cmp	r3, #0
   20124:	bne	22844 <_start@@Base+0xe24c>
   20128:	sub	r3, fp, #52	; 0x34
   2012c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20130:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20134:	ldr	r0, [fp, #-160]	; 0xffffff60
   20138:	bl	15398 <_start@@Base+0xda0>
   2013c:	str	r0, [fp, #-164]	; 0xffffff5c
   20140:	b	20214 <_start@@Base+0xbc1c>
   20144:	mov	r3, #0
   20148:	strb	r3, [fp, #-69]	; 0xffffffbb
   2014c:	ldr	r3, [fp, #-160]	; 0xffffff60
   20150:	ldr	r3, [r3]
   20154:	mov	r1, #1
   20158:	mov	r0, r3
   2015c:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   20160:	str	r0, [fp, #-48]	; 0xffffffd0
   20164:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20168:	cmp	r3, #0
   2016c:	beq	2284c <_start@@Base+0xe254>
   20170:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20174:	str	r3, [fp, #-40]	; 0xffffffd8
   20178:	sub	r3, fp, #69	; 0x45
   2017c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20180:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20184:	ldr	r0, [fp, #-160]	; 0xffffff60
   20188:	bl	1653c <_start@@Base+0x1f44>
   2018c:	str	r0, [fp, #-164]	; 0xffffff5c
   20190:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20194:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20198:	cmp	r2, r3
   2019c:	bne	201ec <_start@@Base+0xbbf4>
   201a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   201a4:	str	r3, [fp, #-40]	; 0xffffffd8
   201a8:	sub	r3, fp, #69	; 0x45
   201ac:	str	r3, [sp]
   201b0:	ldr	r3, [pc, #248]	; 202b0 <_start@@Base+0xbcb8>
   201b4:	add	r3, pc, r3
   201b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   201bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   201c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   201c4:	bl	1736c <_start@@Base+0x2d74>
   201c8:	str	r0, [fp, #-164]	; 0xffffff5c
   201cc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   201d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   201d4:	cmp	r2, r3
   201d8:	beq	22854 <_start@@Base+0xe25c>
   201dc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   201e0:	ldr	r3, [fp, #-168]	; 0xffffff58
   201e4:	cmp	r2, r3
   201e8:	beq	22854 <_start@@Base+0xe25c>
   201ec:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   201f0:	mov	r1, r3
   201f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   201f8:	bl	14b70 <_start@@Base+0x578>
   201fc:	sub	r3, fp, #52	; 0x34
   20200:	ldr	r2, [fp, #-168]	; 0xffffff58
   20204:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20208:	ldr	r0, [fp, #-160]	; 0xffffff60
   2020c:	bl	1548c <_start@@Base+0xe94>
   20210:	str	r0, [fp, #-164]	; 0xffffff5c
   20214:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20218:	cmp	r3, #0
   2021c:	bne	20144 <_start@@Base+0xbb4c>
   20220:	ldr	r3, [fp, #-160]	; 0xffffff60
   20224:	ldr	r3, [r3]
   20228:	mov	r0, r3
   2022c:	bl	30f80 <flatcc_builder_end_vector@@Base>
   20230:	mov	r3, r0
   20234:	str	r3, [fp, #-56]	; 0xffffffc8
   20238:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2023c:	cmp	r3, #0
   20240:	beq	2285c <_start@@Base+0xe264>
   20244:	ldr	r3, [fp, #-160]	; 0xffffff60
   20248:	ldr	r3, [r3]
   2024c:	mov	r1, #24
   20250:	mov	r0, r3
   20254:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   20258:	str	r0, [fp, #-44]	; 0xffffffd4
   2025c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20260:	cmp	r3, #0
   20264:	beq	2285c <_start@@Base+0xe264>
   20268:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2026c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20270:	str	r2, [r3]
   20274:	b	226b8 <_start@@Base+0xe0c0>
   20278:	nop	{0}
   2027c:	b	202b8 <_start@@Base+0xbcc0>
   20280:	svcpl	0x00747970
   20284:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20288:	shsub8vs	pc, r2, pc	; <UNPREDICTABLE>
   2028c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20290:	cmnvs	r2, r1, ror #4
   20294:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20298:	ldrbtvc	r6, [r2], #-2413	; 0xfffff693
   2029c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   202a0:	svcvs	0x006f6c73
   202a4:	stmdbvc	pc!, {r1, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   202a8:			; <UNDEFINED> instruction: 0xffff9674
   202ac:	andeq	r5, r4, r8, ror r2
   202b0:	strheq	r5, [r4], -r4
   202b4:	nop	{0}
   202b8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   202bc:	add	r3, pc, #916	; 0x394
   202c0:	ldrd	r2, [r3]
   202c4:	cmp	r1, r3
   202c8:	cmpeq	r0, r2
   202cc:	bne	2047c <_start@@Base+0xbe84>
   202d0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   202d4:	add	r3, r3, #8
   202d8:	str	r3, [fp, #-164]	; 0xffffff5c
   202dc:	ldr	r1, [fp, #-168]	; 0xffffff58
   202e0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   202e4:	bl	14ffc <_start@@Base+0xa04>
   202e8:	strd	r0, [fp, #-36]	; 0xffffffdc
   202ec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   202f0:	mvn	r2, #255	; 0xff
   202f4:	mvn	r3, #0
   202f8:	and	ip, r0, r2
   202fc:	str	ip, [fp, #-268]	; 0xfffffef4
   20300:	and	r3, r1, r3
   20304:	str	r3, [fp, #-264]	; 0xfffffef8
   20308:	add	r3, pc, #848	; 0x350
   2030c:	ldrd	r2, [r3]
   20310:	sub	r1, fp, #268	; 0x10c
   20314:	ldrd	r0, [r1]
   20318:	cmp	r1, r3
   2031c:	cmpeq	r0, r2
   20320:	bne	20464 <_start@@Base+0xbe6c>
   20324:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20328:	str	r3, [fp, #-40]	; 0xffffffd8
   2032c:	mov	r3, #7
   20330:	ldr	r2, [fp, #-168]	; 0xffffff58
   20334:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20338:	ldr	r0, [fp, #-160]	; 0xffffff60
   2033c:	bl	15600 <_start@@Base+0x1008>
   20340:	str	r0, [fp, #-164]	; 0xffffff5c
   20344:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20348:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2034c:	cmp	r2, r3
   20350:	beq	2044c <_start@@Base+0xbe54>
   20354:	ldr	r3, [fp, #-160]	; 0xffffff60
   20358:	ldr	r0, [r3]
   2035c:	mvn	r3, #-536870912	; 0xe0000000
   20360:	mov	r2, #4
   20364:	mov	r1, #8
   20368:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   2036c:	mov	r3, r0
   20370:	cmp	r3, #0
   20374:	bne	22864 <_start@@Base+0xe26c>
   20378:	sub	r3, fp, #52	; 0x34
   2037c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20380:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20384:	ldr	r0, [fp, #-160]	; 0xffffff60
   20388:	bl	15398 <_start@@Base+0xda0>
   2038c:	str	r0, [fp, #-164]	; 0xffffff5c
   20390:	b	203e8 <_start@@Base+0xbdf0>
   20394:	ldr	r3, [fp, #-160]	; 0xffffff60
   20398:	ldr	r3, [r3]
   2039c:	mov	r1, #1
   203a0:	mov	r0, r3
   203a4:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   203a8:	str	r0, [fp, #-48]	; 0xffffffd0
   203ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   203b0:	cmp	r3, #0
   203b4:	beq	2286c <_start@@Base+0xe274>
   203b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   203bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   203c0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   203c4:	ldr	r0, [fp, #-160]	; 0xffffff60
   203c8:	bl	1bfac <_start@@Base+0x79b4>
   203cc:	str	r0, [fp, #-164]	; 0xffffff5c
   203d0:	sub	r3, fp, #52	; 0x34
   203d4:	ldr	r2, [fp, #-168]	; 0xffffff58
   203d8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   203dc:	ldr	r0, [fp, #-160]	; 0xffffff60
   203e0:	bl	1548c <_start@@Base+0xe94>
   203e4:	str	r0, [fp, #-164]	; 0xffffff5c
   203e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   203ec:	cmp	r3, #0
   203f0:	bne	20394 <_start@@Base+0xbd9c>
   203f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   203f8:	ldr	r3, [r3]
   203fc:	mov	r0, r3
   20400:	bl	30f80 <flatcc_builder_end_vector@@Base>
   20404:	mov	r3, r0
   20408:	str	r3, [fp, #-56]	; 0xffffffc8
   2040c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20410:	cmp	r3, #0
   20414:	beq	22874 <_start@@Base+0xe27c>
   20418:	ldr	r3, [fp, #-160]	; 0xffffff60
   2041c:	ldr	r3, [r3]
   20420:	mov	r1, #29
   20424:	mov	r0, r3
   20428:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   2042c:	str	r0, [fp, #-44]	; 0xffffffd4
   20430:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20434:	cmp	r3, #0
   20438:	beq	22874 <_start@@Base+0xe27c>
   2043c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20440:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20444:	str	r2, [r3]
   20448:	b	226b8 <_start@@Base+0xe0c0>
   2044c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20450:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20454:	ldr	r0, [fp, #-160]	; 0xffffff60
   20458:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2045c:	str	r0, [fp, #-164]	; 0xffffff5c
   20460:	b	226b8 <_start@@Base+0xe0c0>
   20464:	ldr	r2, [fp, #-168]	; 0xffffff58
   20468:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2046c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20470:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20474:	str	r0, [fp, #-164]	; 0xffffff5c
   20478:	b	226b8 <_start@@Base+0xe0c0>
   2047c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20480:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20484:	ldr	r0, [fp, #-160]	; 0xffffff60
   20488:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2048c:	str	r0, [fp, #-164]	; 0xffffff5c
   20490:	b	226b8 <_start@@Base+0xe0c0>
   20494:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20498:	add	r3, pc, #456	; 0x1c8
   2049c:	ldrd	r2, [r3]
   204a0:	cmp	r1, r3
   204a4:	cmpeq	r0, r2
   204a8:	bne	20810 <_start@@Base+0xc218>
   204ac:	ldr	r3, [fp, #-164]	; 0xffffff5c
   204b0:	add	r3, r3, #8
   204b4:	str	r3, [fp, #-164]	; 0xffffff5c
   204b8:	ldr	r1, [fp, #-168]	; 0xffffff58
   204bc:	ldr	r0, [fp, #-164]	; 0xffffff5c
   204c0:	bl	14ffc <_start@@Base+0xa04>
   204c4:	strd	r0, [fp, #-36]	; 0xffffffdc
   204c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   204cc:	mov	r2, #0
   204d0:	mov	r3, #0
   204d4:	movt	r3, #65535	; 0xffff
   204d8:	and	ip, r0, r2
   204dc:	str	ip, [fp, #-276]	; 0xfffffeec
   204e0:	and	r3, r1, r3
   204e4:	str	r3, [fp, #-272]	; 0xfffffef0
   204e8:	mov	r2, #0
   204ec:	mov	r3, #0
   204f0:	movt	r3, #26418	; 0x6732
   204f4:	sub	r1, fp, #276	; 0x114
   204f8:	ldrd	r0, [r1]
   204fc:	cmp	r1, r3
   20500:	cmpeq	r0, r2
   20504:	bne	20688 <_start@@Base+0xc090>
   20508:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2050c:	str	r3, [fp, #-40]	; 0xffffffd8
   20510:	mov	r3, #2
   20514:	ldr	r2, [fp, #-168]	; 0xffffff58
   20518:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2051c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20520:	bl	15600 <_start@@Base+0x1008>
   20524:	str	r0, [fp, #-164]	; 0xffffff5c
   20528:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2052c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20530:	cmp	r2, r3
   20534:	beq	20640 <_start@@Base+0xc048>
   20538:	ldr	r3, [fp, #-160]	; 0xffffff60
   2053c:	ldr	r3, [r3]
   20540:	mov	r0, r3
   20544:	bl	2fd40 <flatcc_builder_start_offset_vector@@Base>
   20548:	mov	r3, r0
   2054c:	cmp	r3, #0
   20550:	bne	2287c <_start@@Base+0xe284>
   20554:	sub	r3, fp, #52	; 0x34
   20558:	ldr	r2, [fp, #-168]	; 0xffffff58
   2055c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20560:	ldr	r0, [fp, #-160]	; 0xffffff60
   20564:	bl	15398 <_start@@Base+0xda0>
   20568:	str	r0, [fp, #-164]	; 0xffffff5c
   2056c:	b	205dc <_start@@Base+0xbfe4>
   20570:	sub	r3, fp, #56	; 0x38
   20574:	ldr	r2, [fp, #-168]	; 0xffffff58
   20578:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2057c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20580:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   20584:	str	r0, [fp, #-164]	; 0xffffff5c
   20588:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2058c:	cmp	r3, #0
   20590:	beq	22884 <_start@@Base+0xe28c>
   20594:	ldr	r3, [fp, #-160]	; 0xffffff60
   20598:	ldr	r3, [r3]
   2059c:	mov	r1, #1
   205a0:	mov	r0, r3
   205a4:	bl	2f584 <flatcc_builder_extend_offset_vector@@Base>
   205a8:	str	r0, [fp, #-44]	; 0xffffffd4
   205ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   205b0:	cmp	r3, #0
   205b4:	beq	22884 <_start@@Base+0xe28c>
   205b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   205bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   205c0:	str	r2, [r3]
   205c4:	sub	r3, fp, #52	; 0x34
   205c8:	ldr	r2, [fp, #-168]	; 0xffffff58
   205cc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   205d0:	ldr	r0, [fp, #-160]	; 0xffffff60
   205d4:	bl	1548c <_start@@Base+0xe94>
   205d8:	str	r0, [fp, #-164]	; 0xffffff5c
   205dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   205e0:	cmp	r3, #0
   205e4:	bne	20570 <_start@@Base+0xbf78>
   205e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   205ec:	ldr	r3, [r3]
   205f0:	mov	r0, r3
   205f4:	bl	31448 <flatcc_builder_end_offset_vector@@Base>
   205f8:	mov	r3, r0
   205fc:	str	r3, [fp, #-56]	; 0xffffffc8
   20600:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20604:	cmp	r3, #0
   20608:	beq	2288c <_start@@Base+0xe294>
   2060c:	ldr	r3, [fp, #-160]	; 0xffffff60
   20610:	ldr	r3, [r3]
   20614:	mov	r1, #28
   20618:	mov	r0, r3
   2061c:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   20620:	str	r0, [fp, #-44]	; 0xffffffd4
   20624:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20628:	cmp	r3, #0
   2062c:	beq	2288c <_start@@Base+0xe294>
   20630:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20634:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20638:	str	r2, [r3]
   2063c:	b	226b8 <_start@@Base+0xe0c0>
   20640:	ldr	r2, [fp, #-168]	; 0xffffff58
   20644:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20648:	ldr	r0, [fp, #-160]	; 0xffffff60
   2064c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20650:	str	r0, [fp, #-164]	; 0xffffff5c
   20654:	b	226b8 <_start@@Base+0xe0c0>
   20658:	svcvs	0x00727465
   2065c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   20660:	strbvc	r7, [r3, #-1024]!	; 0xfffffc00
   20664:	ldrbtvs	r7, [r3], #-1138	; 0xfffffb8e
   20668:	ldrbtvc	r6, [r2], #-2414	; 0xfffff692
   2066c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   20670:	cmnvs	r2, r5, ror #24
   20674:	stmdbvc	pc!, {r2, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   20678:	strbvs	r7, [sp, #-115]!	; 0xffffff8d
   2067c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20680:	rsbvs	r7, r1, #-1811939327	; 0x94000001
   20684:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20688:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2068c:	mov	r2, #0
   20690:	mov	r3, #-16777216	; 0xff000000
   20694:	and	r8, r0, r2
   20698:	and	r9, r1, r3
   2069c:	cmp	r9, #1728053248	; 0x67000000
   206a0:	cmpeq	r8, #0
   206a4:	bne	207f8 <_start@@Base+0xc200>
   206a8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   206ac:	str	r3, [fp, #-40]	; 0xffffffd8
   206b0:	mov	r3, #1
   206b4:	ldr	r2, [fp, #-168]	; 0xffffff58
   206b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   206bc:	ldr	r0, [fp, #-160]	; 0xffffff60
   206c0:	bl	15600 <_start@@Base+0x1008>
   206c4:	str	r0, [fp, #-164]	; 0xffffff5c
   206c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   206cc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   206d0:	cmp	r2, r3
   206d4:	beq	207e0 <_start@@Base+0xc1e8>
   206d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   206dc:	ldr	r3, [r3]
   206e0:	mov	r0, r3
   206e4:	bl	2fd40 <flatcc_builder_start_offset_vector@@Base>
   206e8:	mov	r3, r0
   206ec:	cmp	r3, #0
   206f0:	bne	22894 <_start@@Base+0xe29c>
   206f4:	sub	r3, fp, #52	; 0x34
   206f8:	ldr	r2, [fp, #-168]	; 0xffffff58
   206fc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20700:	ldr	r0, [fp, #-160]	; 0xffffff60
   20704:	bl	15398 <_start@@Base+0xda0>
   20708:	str	r0, [fp, #-164]	; 0xffffff5c
   2070c:	b	2077c <_start@@Base+0xc184>
   20710:	sub	r3, fp, #56	; 0x38
   20714:	ldr	r2, [fp, #-168]	; 0xffffff58
   20718:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2071c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20720:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   20724:	str	r0, [fp, #-164]	; 0xffffff5c
   20728:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2072c:	cmp	r3, #0
   20730:	beq	2289c <_start@@Base+0xe2a4>
   20734:	ldr	r3, [fp, #-160]	; 0xffffff60
   20738:	ldr	r3, [r3]
   2073c:	mov	r1, #1
   20740:	mov	r0, r3
   20744:	bl	2f584 <flatcc_builder_extend_offset_vector@@Base>
   20748:	str	r0, [fp, #-44]	; 0xffffffd4
   2074c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20750:	cmp	r3, #0
   20754:	beq	2289c <_start@@Base+0xe2a4>
   20758:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2075c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20760:	str	r2, [r3]
   20764:	sub	r3, fp, #52	; 0x34
   20768:	ldr	r2, [fp, #-168]	; 0xffffff58
   2076c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20770:	ldr	r0, [fp, #-160]	; 0xffffff60
   20774:	bl	1548c <_start@@Base+0xe94>
   20778:	str	r0, [fp, #-164]	; 0xffffff5c
   2077c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20780:	cmp	r3, #0
   20784:	bne	20710 <_start@@Base+0xc118>
   20788:	ldr	r3, [fp, #-160]	; 0xffffff60
   2078c:	ldr	r3, [r3]
   20790:	mov	r0, r3
   20794:	bl	31448 <flatcc_builder_end_offset_vector@@Base>
   20798:	mov	r3, r0
   2079c:	str	r3, [fp, #-56]	; 0xffffffc8
   207a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   207a4:	cmp	r3, #0
   207a8:	beq	228a4 <_start@@Base+0xe2ac>
   207ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   207b0:	ldr	r3, [r3]
   207b4:	mov	r1, #10
   207b8:	mov	r0, r3
   207bc:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   207c0:	str	r0, [fp, #-44]	; 0xffffffd4
   207c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   207c8:	cmp	r3, #0
   207cc:	beq	228a4 <_start@@Base+0xe2ac>
   207d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   207d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   207d8:	str	r2, [r3]
   207dc:	b	226b8 <_start@@Base+0xe0c0>
   207e0:	ldr	r2, [fp, #-168]	; 0xffffff58
   207e4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   207e8:	ldr	r0, [fp, #-160]	; 0xffffff60
   207ec:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   207f0:	str	r0, [fp, #-164]	; 0xffffff5c
   207f4:	b	226b8 <_start@@Base+0xe0c0>
   207f8:	ldr	r2, [fp, #-168]	; 0xffffff58
   207fc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20800:	ldr	r0, [fp, #-160]	; 0xffffff60
   20804:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20808:	str	r0, [fp, #-164]	; 0xffffff5c
   2080c:	b	226b8 <_start@@Base+0xe0c0>
   20810:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20814:	sub	r3, pc, #428	; 0x1ac
   20818:	ldrd	r2, [r3]
   2081c:	cmp	r1, r3
   20820:	cmpeq	r0, r2
   20824:	bne	209dc <_start@@Base+0xc3e4>
   20828:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2082c:	add	r3, r3, #8
   20830:	str	r3, [fp, #-164]	; 0xffffff5c
   20834:	ldr	r1, [fp, #-168]	; 0xffffff58
   20838:	ldr	r0, [fp, #-164]	; 0xffffff5c
   2083c:	bl	14ffc <_start@@Base+0xa04>
   20840:	strd	r0, [fp, #-36]	; 0xffffffdc
   20844:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20848:	mov	r2, #0
   2084c:	mov	r3, #-16777216	; 0xff000000
   20850:	and	ip, r0, r2
   20854:	str	ip, [fp, #-284]	; 0xfffffee4
   20858:	and	r3, r1, r3
   2085c:	str	r3, [fp, #-280]	; 0xfffffee8
   20860:	sub	r3, fp, #284	; 0x11c
   20864:	ldrd	r2, [r3]
   20868:	cmp	r3, #1929379840	; 0x73000000
   2086c:	cmpeq	r2, #0
   20870:	bne	209c4 <_start@@Base+0xc3cc>
   20874:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20878:	str	r3, [fp, #-40]	; 0xffffffd8
   2087c:	mov	r3, #1
   20880:	ldr	r2, [fp, #-168]	; 0xffffff58
   20884:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20888:	ldr	r0, [fp, #-160]	; 0xffffff60
   2088c:	bl	15600 <_start@@Base+0x1008>
   20890:	str	r0, [fp, #-164]	; 0xffffff5c
   20894:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20898:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2089c:	cmp	r2, r3
   208a0:	beq	209ac <_start@@Base+0xc3b4>
   208a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   208a8:	ldr	r3, [r3]
   208ac:	mov	r0, r3
   208b0:	bl	2fd40 <flatcc_builder_start_offset_vector@@Base>
   208b4:	mov	r3, r0
   208b8:	cmp	r3, #0
   208bc:	bne	228ac <_start@@Base+0xe2b4>
   208c0:	sub	r3, fp, #52	; 0x34
   208c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   208c8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   208cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   208d0:	bl	15398 <_start@@Base+0xda0>
   208d4:	str	r0, [fp, #-164]	; 0xffffff5c
   208d8:	b	20948 <_start@@Base+0xc350>
   208dc:	sub	r3, fp, #56	; 0x38
   208e0:	ldr	r2, [fp, #-168]	; 0xffffff58
   208e4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   208e8:	ldr	r0, [fp, #-160]	; 0xffffff60
   208ec:	bl	1ed10 <_start@@Base+0xa718>
   208f0:	str	r0, [fp, #-164]	; 0xffffff5c
   208f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   208f8:	cmp	r3, #0
   208fc:	beq	228b4 <_start@@Base+0xe2bc>
   20900:	ldr	r3, [fp, #-160]	; 0xffffff60
   20904:	ldr	r3, [r3]
   20908:	mov	r1, #1
   2090c:	mov	r0, r3
   20910:	bl	2f584 <flatcc_builder_extend_offset_vector@@Base>
   20914:	str	r0, [fp, #-44]	; 0xffffffd4
   20918:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2091c:	cmp	r3, #0
   20920:	beq	228b4 <_start@@Base+0xe2bc>
   20924:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20928:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2092c:	str	r2, [r3]
   20930:	sub	r3, fp, #52	; 0x34
   20934:	ldr	r2, [fp, #-168]	; 0xffffff58
   20938:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2093c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20940:	bl	1548c <_start@@Base+0xe94>
   20944:	str	r0, [fp, #-164]	; 0xffffff5c
   20948:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2094c:	cmp	r3, #0
   20950:	bne	208dc <_start@@Base+0xc2e4>
   20954:	ldr	r3, [fp, #-160]	; 0xffffff60
   20958:	ldr	r3, [r3]
   2095c:	mov	r0, r3
   20960:	bl	31448 <flatcc_builder_end_offset_vector@@Base>
   20964:	mov	r3, r0
   20968:	str	r3, [fp, #-56]	; 0xffffffc8
   2096c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20970:	cmp	r3, #0
   20974:	beq	228bc <_start@@Base+0xe2c4>
   20978:	ldr	r3, [fp, #-160]	; 0xffffff60
   2097c:	ldr	r3, [r3]
   20980:	mov	r1, #11
   20984:	mov	r0, r3
   20988:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   2098c:	str	r0, [fp, #-44]	; 0xffffffd4
   20990:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20994:	cmp	r3, #0
   20998:	beq	228bc <_start@@Base+0xe2c4>
   2099c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   209a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   209a4:	str	r2, [r3]
   209a8:	b	226b8 <_start@@Base+0xe0c0>
   209ac:	ldr	r2, [fp, #-168]	; 0xffffff58
   209b0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   209b4:	ldr	r0, [fp, #-160]	; 0xffffff60
   209b8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   209bc:	str	r0, [fp, #-164]	; 0xffffff5c
   209c0:	b	226b8 <_start@@Base+0xe0c0>
   209c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   209c8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   209cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   209d0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   209d4:	str	r0, [fp, #-164]	; 0xffffff5c
   209d8:	b	226b8 <_start@@Base+0xe0c0>
   209dc:	ldr	r2, [fp, #-168]	; 0xffffff58
   209e0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   209e4:	ldr	r0, [fp, #-160]	; 0xffffff60
   209e8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   209ec:	str	r0, [fp, #-164]	; 0xffffff5c
   209f0:	b	226b8 <_start@@Base+0xe0c0>
   209f4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   209f8:	sub	r3, pc, #904	; 0x388
   209fc:	ldrd	r2, [r3]
   20a00:	cmp	r1, r3
   20a04:	cmpeq	r0, r2
   20a08:	bhi	20c90 <_start@@Base+0xc698>
   20a0c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20a10:	sub	r3, pc, #920	; 0x398
   20a14:	ldrd	r2, [r3]
   20a18:	cmp	r1, r3
   20a1c:	cmpeq	r0, r2
   20a20:	bne	20b38 <_start@@Base+0xc540>
   20a24:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20a28:	add	r3, r3, #8
   20a2c:	str	r3, [fp, #-164]	; 0xffffff5c
   20a30:	ldr	r1, [fp, #-168]	; 0xffffff58
   20a34:	ldr	r0, [fp, #-164]	; 0xffffff5c
   20a38:	bl	14ffc <_start@@Base+0xa04>
   20a3c:	strd	r0, [fp, #-36]	; 0xffffffdc
   20a40:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20a44:	mov	r2, #0
   20a48:	mov	r3, #0
   20a4c:	movt	r3, #65535	; 0xffff
   20a50:	and	ip, r0, r2
   20a54:	str	ip, [fp, #-292]	; 0xfffffedc
   20a58:	and	r3, r1, r3
   20a5c:	str	r3, [fp, #-288]	; 0xfffffee0
   20a60:	mov	r2, #0
   20a64:	mov	r3, #0
   20a68:	movt	r3, #13876	; 0x3634
   20a6c:	sub	r1, fp, #292	; 0x124
   20a70:	ldrd	r0, [r1]
   20a74:	cmp	r1, r3
   20a78:	cmpeq	r0, r2
   20a7c:	bne	20b20 <_start@@Base+0xc528>
   20a80:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20a84:	str	r3, [fp, #-40]	; 0xffffffd8
   20a88:	mov	r3, #2
   20a8c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20a90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20a94:	ldr	r0, [fp, #-160]	; 0xffffff60
   20a98:	bl	15600 <_start@@Base+0x1008>
   20a9c:	str	r0, [fp, #-164]	; 0xffffff5c
   20aa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20aa4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20aa8:	cmp	r2, r3
   20aac:	beq	20b08 <_start@@Base+0xc510>
   20ab0:	sub	r3, fp, #56	; 0x38
   20ab4:	ldr	r2, [fp, #-168]	; 0xffffff58
   20ab8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20abc:	ldr	r0, [fp, #-160]	; 0xffffff60
   20ac0:	bl	1e8c8 <_start@@Base+0xa2d0>
   20ac4:	str	r0, [fp, #-164]	; 0xffffff5c
   20ac8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20acc:	cmp	r3, #0
   20ad0:	beq	228c4 <_start@@Base+0xe2cc>
   20ad4:	ldr	r3, [fp, #-160]	; 0xffffff60
   20ad8:	ldr	r3, [r3]
   20adc:	mov	r1, #35	; 0x23
   20ae0:	mov	r0, r3
   20ae4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   20ae8:	str	r0, [fp, #-44]	; 0xffffffd4
   20aec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20af0:	cmp	r3, #0
   20af4:	beq	228c4 <_start@@Base+0xe2cc>
   20af8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20afc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20b00:	str	r2, [r3]
   20b04:	b	226b8 <_start@@Base+0xe0c0>
   20b08:	ldr	r2, [fp, #-168]	; 0xffffff58
   20b0c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20b10:	ldr	r0, [fp, #-160]	; 0xffffff60
   20b14:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20b18:	str	r0, [fp, #-164]	; 0xffffff5c
   20b1c:	b	226b8 <_start@@Base+0xe0c0>
   20b20:	ldr	r2, [fp, #-168]	; 0xffffff58
   20b24:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20b28:	ldr	r0, [fp, #-160]	; 0xffffff60
   20b2c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20b30:	str	r0, [fp, #-164]	; 0xffffff5c
   20b34:	b	226b8 <_start@@Base+0xe0c0>
   20b38:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20b3c:	add	r3, pc, #1004	; 0x3ec
   20b40:	ldrd	r2, [r3]
   20b44:	cmp	r1, r3
   20b48:	cmpeq	r0, r2
   20b4c:	bne	20c78 <_start@@Base+0xc680>
   20b50:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20b54:	str	r3, [fp, #-40]	; 0xffffffd8
   20b58:	mov	r3, #8
   20b5c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20b60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20b64:	ldr	r0, [fp, #-160]	; 0xffffff60
   20b68:	bl	15600 <_start@@Base+0x1008>
   20b6c:	str	r0, [fp, #-164]	; 0xffffff5c
   20b70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20b74:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20b78:	cmp	r2, r3
   20b7c:	beq	20c60 <_start@@Base+0xc668>
   20b80:	mov	r3, #0
   20b84:	strb	r3, [fp, #-70]	; 0xffffffba
   20b88:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20b8c:	str	r3, [fp, #-40]	; 0xffffffd8
   20b90:	sub	r3, fp, #70	; 0x46
   20b94:	ldr	r2, [fp, #-168]	; 0xffffff58
   20b98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20b9c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20ba0:	bl	1653c <_start@@Base+0x1f44>
   20ba4:	str	r0, [fp, #-164]	; 0xffffff5c
   20ba8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20bac:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20bb0:	cmp	r2, r3
   20bb4:	bne	20c04 <_start@@Base+0xc60c>
   20bb8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20bbc:	str	r3, [fp, #-40]	; 0xffffffd8
   20bc0:	sub	r3, fp, #70	; 0x46
   20bc4:	str	r3, [sp]
   20bc8:	ldr	r3, [pc, #900]	; 20f54 <_start@@Base+0xc95c>
   20bcc:	add	r3, pc, r3
   20bd0:	ldr	r2, [fp, #-168]	; 0xffffff58
   20bd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20bd8:	ldr	r0, [fp, #-160]	; 0xffffff60
   20bdc:	bl	1736c <_start@@Base+0x2d74>
   20be0:	str	r0, [fp, #-164]	; 0xffffff5c
   20be4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20be8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20bec:	cmp	r2, r3
   20bf0:	beq	228cc <_start@@Base+0xe2d4>
   20bf4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20bf8:	ldr	r3, [fp, #-168]	; 0xffffff58
   20bfc:	cmp	r2, r3
   20c00:	beq	228cc <_start@@Base+0xe2d4>
   20c04:	ldrb	r3, [fp, #-70]	; 0xffffffba
   20c08:	cmp	r3, #1
   20c0c:	bne	20c24 <_start@@Base+0xc62c>
   20c10:	ldr	r3, [fp, #-160]	; 0xffffff60
   20c14:	ldr	r3, [r3, #8]
   20c18:	and	r3, r3, #2
   20c1c:	cmp	r3, #0
   20c20:	beq	226b8 <_start@@Base+0xe0c0>
   20c24:	ldr	r3, [fp, #-160]	; 0xffffff60
   20c28:	ldr	r0, [r3]
   20c2c:	mov	r3, #1
   20c30:	mov	r2, #1
   20c34:	mov	r1, #15
   20c38:	bl	3255c <flatcc_builder_table_add@@Base>
   20c3c:	str	r0, [fp, #-48]	; 0xffffffd0
   20c40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20c44:	cmp	r3, #0
   20c48:	beq	228d4 <_start@@Base+0xe2dc>
   20c4c:	ldrb	r3, [fp, #-70]	; 0xffffffba
   20c50:	mov	r1, r3
   20c54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20c58:	bl	14b70 <_start@@Base+0x578>
   20c5c:	b	226b8 <_start@@Base+0xe0c0>
   20c60:	ldr	r2, [fp, #-168]	; 0xffffff58
   20c64:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20c68:	ldr	r0, [fp, #-160]	; 0xffffff60
   20c6c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20c70:	str	r0, [fp, #-164]	; 0xffffff5c
   20c74:	b	226b8 <_start@@Base+0xe0c0>
   20c78:	ldr	r2, [fp, #-168]	; 0xffffff58
   20c7c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20c80:	ldr	r0, [fp, #-160]	; 0xffffff60
   20c84:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20c88:	str	r0, [fp, #-164]	; 0xffffff5c
   20c8c:	b	226b8 <_start@@Base+0xe0c0>
   20c90:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20c94:	add	r3, pc, #668	; 0x29c
   20c98:	ldrd	r2, [r3]
   20c9c:	cmp	r1, r3
   20ca0:	cmpeq	r0, r2
   20ca4:	bhi	20ddc <_start@@Base+0xc7e4>
   20ca8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20cac:	add	r3, pc, #652	; 0x28c
   20cb0:	ldrd	r2, [r3]
   20cb4:	cmp	r1, r3
   20cb8:	cmpeq	r0, r2
   20cbc:	bne	20dc4 <_start@@Base+0xc7cc>
   20cc0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20cc4:	add	r3, r3, #8
   20cc8:	str	r3, [fp, #-164]	; 0xffffff5c
   20ccc:	ldr	r1, [fp, #-168]	; 0xffffff58
   20cd0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   20cd4:	bl	14ffc <_start@@Base+0xa04>
   20cd8:	strd	r0, [fp, #-36]	; 0xffffffdc
   20cdc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20ce0:	mov	r2, #0
   20ce4:	mov	r3, #-16777216	; 0xff000000
   20ce8:	and	ip, r0, r2
   20cec:	str	ip, [fp, #-300]	; 0xfffffed4
   20cf0:	and	r3, r1, r3
   20cf4:	str	r3, [fp, #-296]	; 0xfffffed8
   20cf8:	sub	r3, fp, #300	; 0x12c
   20cfc:	ldrd	r2, [r3]
   20d00:	cmp	r3, #2030043136	; 0x79000000
   20d04:	cmpeq	r2, #0
   20d08:	bne	20dac <_start@@Base+0xc7b4>
   20d0c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20d10:	str	r3, [fp, #-40]	; 0xffffffd8
   20d14:	mov	r3, #1
   20d18:	ldr	r2, [fp, #-168]	; 0xffffff58
   20d1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20d20:	ldr	r0, [fp, #-160]	; 0xffffff60
   20d24:	bl	15600 <_start@@Base+0x1008>
   20d28:	str	r0, [fp, #-164]	; 0xffffff5c
   20d2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20d30:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20d34:	cmp	r2, r3
   20d38:	beq	20d94 <_start@@Base+0xc79c>
   20d3c:	sub	r3, fp, #56	; 0x38
   20d40:	ldr	r2, [fp, #-168]	; 0xffffff58
   20d44:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20d48:	ldr	r0, [fp, #-160]	; 0xffffff60
   20d4c:	bl	1c3a0 <_start@@Base+0x7da8>
   20d50:	str	r0, [fp, #-164]	; 0xffffff5c
   20d54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20d58:	cmp	r3, #0
   20d5c:	beq	228dc <_start@@Base+0xe2e4>
   20d60:	ldr	r3, [fp, #-160]	; 0xffffff60
   20d64:	ldr	r3, [r3]
   20d68:	mov	r1, #14
   20d6c:	mov	r0, r3
   20d70:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   20d74:	str	r0, [fp, #-44]	; 0xffffffd4
   20d78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20d7c:	cmp	r3, #0
   20d80:	beq	228dc <_start@@Base+0xe2e4>
   20d84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20d8c:	str	r2, [r3]
   20d90:	b	226b8 <_start@@Base+0xe0c0>
   20d94:	ldr	r2, [fp, #-168]	; 0xffffff58
   20d98:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20d9c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20da0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20da4:	str	r0, [fp, #-164]	; 0xffffff5c
   20da8:	b	226b8 <_start@@Base+0xe0c0>
   20dac:	ldr	r2, [fp, #-168]	; 0xffffff58
   20db0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20db4:	ldr	r0, [fp, #-160]	; 0xffffff60
   20db8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20dbc:	str	r0, [fp, #-164]	; 0xffffff5c
   20dc0:	b	226b8 <_start@@Base+0xe0c0>
   20dc4:	ldr	r2, [fp, #-168]	; 0xffffff58
   20dc8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20dcc:	ldr	r0, [fp, #-160]	; 0xffffff60
   20dd0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20dd4:	str	r0, [fp, #-164]	; 0xffffff5c
   20dd8:	b	226b8 <_start@@Base+0xe0c0>
   20ddc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20de0:	mov	r2, #0
   20de4:	movt	r2, #65535	; 0xffff
   20de8:	mvn	r3, #0
   20dec:	and	ip, r0, r2
   20df0:	str	ip, [fp, #-308]	; 0xfffffecc
   20df4:	and	r3, r1, r3
   20df8:	str	r3, [fp, #-304]	; 0xfffffed0
   20dfc:	add	r3, pc, #324	; 0x144
   20e00:	ldrd	r2, [r3]
   20e04:	sub	r1, fp, #308	; 0x134
   20e08:	ldrd	r0, [r1]
   20e0c:	cmp	r1, r3
   20e10:	cmpeq	r0, r2
   20e14:	bne	20f74 <_start@@Base+0xc97c>
   20e18:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20e1c:	str	r3, [fp, #-40]	; 0xffffffd8
   20e20:	mov	r3, #6
   20e24:	ldr	r2, [fp, #-168]	; 0xffffff58
   20e28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20e2c:	ldr	r0, [fp, #-160]	; 0xffffff60
   20e30:	bl	15600 <_start@@Base+0x1008>
   20e34:	str	r0, [fp, #-164]	; 0xffffff5c
   20e38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20e3c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20e40:	cmp	r2, r3
   20e44:	beq	20f5c <_start@@Base+0xc964>
   20e48:	mov	r3, #0
   20e4c:	str	r3, [fp, #-76]	; 0xffffffb4
   20e50:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20e54:	str	r3, [fp, #-40]	; 0xffffffd8
   20e58:	sub	r3, fp, #76	; 0x4c
   20e5c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20e60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20e64:	ldr	r0, [fp, #-160]	; 0xffffff60
   20e68:	bl	3cda8 <flatcc_json_parser_float@@Base>
   20e6c:	str	r0, [fp, #-164]	; 0xffffff5c
   20e70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20e74:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20e78:	cmp	r2, r3
   20e7c:	bne	20ecc <_start@@Base+0xc8d4>
   20e80:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20e84:	str	r3, [fp, #-40]	; 0xffffffd8
   20e88:	sub	r3, fp, #76	; 0x4c
   20e8c:	str	r3, [sp]
   20e90:	ldr	r3, [pc, #192]	; 20f58 <_start@@Base+0xc960>
   20e94:	add	r3, pc, r3
   20e98:	ldr	r2, [fp, #-168]	; 0xffffff58
   20e9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20ea0:	ldr	r0, [fp, #-160]	; 0xffffff60
   20ea4:	bl	17508 <_start@@Base+0x2f10>
   20ea8:	str	r0, [fp, #-164]	; 0xffffff5c
   20eac:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20eb4:	cmp	r2, r3
   20eb8:	beq	228e4 <_start@@Base+0xe2ec>
   20ebc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   20ec0:	ldr	r3, [fp, #-168]	; 0xffffff58
   20ec4:	cmp	r2, r3
   20ec8:	beq	228e4 <_start@@Base+0xe2ec>
   20ecc:	vldr	s15, [fp, #-76]	; 0xffffffb4
   20ed0:	vldr	s14, [pc, #120]	; 20f50 <_start@@Base+0xc958>
   20ed4:	vcmp.f32	s15, s14
   20ed8:	vmrs	APSR_nzcv, fpscr
   20edc:	bne	20ef4 <_start@@Base+0xc8fc>
   20ee0:	ldr	r3, [fp, #-160]	; 0xffffff60
   20ee4:	ldr	r3, [r3, #8]
   20ee8:	and	r3, r3, #2
   20eec:	cmp	r3, #0
   20ef0:	beq	226b8 <_start@@Base+0xe0c0>
   20ef4:	ldr	r3, [fp, #-160]	; 0xffffff60
   20ef8:	ldr	r0, [r3]
   20efc:	mov	r3, #4
   20f00:	mov	r2, #4
   20f04:	mov	r1, #26
   20f08:	bl	3255c <flatcc_builder_table_add@@Base>
   20f0c:	str	r0, [fp, #-48]	; 0xffffffd0
   20f10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20f14:	cmp	r3, #0
   20f18:	beq	228ec <_start@@Base+0xe2f4>
   20f1c:	vldr	s15, [fp, #-76]	; 0xffffffb4
   20f20:	vmov.f32	s0, s15
   20f24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20f28:	bl	14a90 <_start@@Base+0x498>
   20f2c:	b	226b8 <_start@@Base+0xe0c0>
   20f30:	rsbvs	r6, pc, #108, 30	; 0x1b0
   20f34:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20f38:	ldrbvs	pc, [pc, #4095]!	; 21f3f <_start@@Base+0xd947>	; <UNPREDICTABLE>
   20f3c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20f40:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   20f44:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20f48:	ldrtvs	r0, [r2], -r0
   20f4c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20f50:	submi	r0, r0, r0
   20f54:	andeq	r4, r4, r8, lsr #13
   20f58:	andeq	r4, r4, ip, ror #7
   20f5c:	ldr	r2, [fp, #-168]	; 0xffffff58
   20f60:	ldr	r1, [fp, #-164]	; 0xffffff5c
   20f64:	ldr	r0, [fp, #-160]	; 0xffffff60
   20f68:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   20f6c:	str	r0, [fp, #-164]	; 0xffffff5c
   20f70:	b	226b8 <_start@@Base+0xe0c0>
   20f74:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   20f78:	mov	r2, #-16777216	; 0xff000000
   20f7c:	mvn	r3, #0
   20f80:	and	ip, r0, r2
   20f84:	str	ip, [fp, #-316]	; 0xfffffec4
   20f88:	and	r3, r1, r3
   20f8c:	str	r3, [fp, #-312]	; 0xfffffec8
   20f90:	add	r3, pc, #760	; 0x2f8
   20f94:	ldrd	r2, [r3]
   20f98:	sub	r1, fp, #316	; 0x13c
   20f9c:	ldrd	r0, [r1]
   20fa0:	cmp	r1, r3
   20fa4:	cmpeq	r0, r2
   20fa8:	bne	210dc <_start@@Base+0xcae4>
   20fac:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20fb0:	str	r3, [fp, #-40]	; 0xffffffd8
   20fb4:	mov	r3, #5
   20fb8:	ldr	r2, [fp, #-168]	; 0xffffff58
   20fbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20fc0:	ldr	r0, [fp, #-160]	; 0xffffff60
   20fc4:	bl	15600 <_start@@Base+0x1008>
   20fc8:	str	r0, [fp, #-164]	; 0xffffff5c
   20fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20fd0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20fd4:	cmp	r2, r3
   20fd8:	beq	210c4 <_start@@Base+0xcacc>
   20fdc:	mov	r3, #0
   20fe0:	str	r3, [fp, #-80]	; 0xffffffb0
   20fe4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   20fe8:	str	r3, [fp, #-40]	; 0xffffffd8
   20fec:	sub	r3, fp, #80	; 0x50
   20ff0:	ldr	r2, [fp, #-168]	; 0xffffff58
   20ff4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20ff8:	ldr	r0, [fp, #-160]	; 0xffffff60
   20ffc:	bl	3cda8 <flatcc_json_parser_float@@Base>
   21000:	str	r0, [fp, #-164]	; 0xffffff5c
   21004:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21008:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2100c:	cmp	r2, r3
   21010:	bne	21060 <_start@@Base+0xca68>
   21014:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21018:	str	r3, [fp, #-40]	; 0xffffffd8
   2101c:	sub	r3, fp, #80	; 0x50
   21020:	str	r3, [sp]
   21024:	ldr	r3, [pc, #640]	; 212ac <_start@@Base+0xccb4>
   21028:	add	r3, pc, r3
   2102c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21030:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21034:	ldr	r0, [fp, #-160]	; 0xffffff60
   21038:	bl	17508 <_start@@Base+0x2f10>
   2103c:	str	r0, [fp, #-164]	; 0xffffff5c
   21040:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21044:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21048:	cmp	r2, r3
   2104c:	beq	228f4 <_start@@Base+0xe2fc>
   21050:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21054:	ldr	r3, [fp, #-168]	; 0xffffff58
   21058:	cmp	r2, r3
   2105c:	beq	228f4 <_start@@Base+0xe2fc>
   21060:	vldr	s15, [fp, #-80]	; 0xffffffb0
   21064:	vldr	s14, [pc, #572]	; 212a8 <_start@@Base+0xccb0>
   21068:	vcmp.f32	s15, s14
   2106c:	vmrs	APSR_nzcv, fpscr
   21070:	bne	21088 <_start@@Base+0xca90>
   21074:	ldr	r3, [fp, #-160]	; 0xffffff60
   21078:	ldr	r3, [r3, #8]
   2107c:	and	r3, r3, #2
   21080:	cmp	r3, #0
   21084:	beq	226b8 <_start@@Base+0xe0c0>
   21088:	ldr	r3, [fp, #-160]	; 0xffffff60
   2108c:	ldr	r0, [r3]
   21090:	mov	r3, #4
   21094:	mov	r2, #4
   21098:	mov	r1, #25
   2109c:	bl	3255c <flatcc_builder_table_add@@Base>
   210a0:	str	r0, [fp, #-48]	; 0xffffffd0
   210a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   210a8:	cmp	r3, #0
   210ac:	beq	228fc <_start@@Base+0xe304>
   210b0:	vldr	s15, [fp, #-80]	; 0xffffffb0
   210b4:	vmov.f32	s0, s15
   210b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   210bc:	bl	14a90 <_start@@Base+0x498>
   210c0:	b	226b8 <_start@@Base+0xe0c0>
   210c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   210c8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   210cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   210d0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   210d4:	str	r0, [fp, #-164]	; 0xffffff5c
   210d8:	b	226b8 <_start@@Base+0xe0c0>
   210dc:	ldr	r2, [fp, #-168]	; 0xffffff58
   210e0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   210e4:	ldr	r0, [fp, #-160]	; 0xffffff60
   210e8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   210ec:	str	r0, [fp, #-164]	; 0xffffff5c
   210f0:	b	226b8 <_start@@Base+0xe0c0>
   210f4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   210f8:	add	r3, pc, #408	; 0x198
   210fc:	ldrd	r2, [r3]
   21100:	cmp	r1, r3
   21104:	cmpeq	r0, r2
   21108:	bhi	212b4 <_start@@Base+0xccbc>
   2110c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21110:	mov	r2, #0
   21114:	movt	r2, #65535	; 0xffff
   21118:	mvn	r3, #0
   2111c:	and	ip, r0, r2
   21120:	str	ip, [fp, #-324]	; 0xfffffebc
   21124:	and	r3, r1, r3
   21128:	str	r3, [fp, #-320]	; 0xfffffec0
   2112c:	add	r3, pc, #364	; 0x16c
   21130:	ldrd	r2, [r3]
   21134:	sub	r1, fp, #324	; 0x144
   21138:	ldrd	r0, [r1]
   2113c:	cmp	r1, r3
   21140:	cmpeq	r0, r2
   21144:	bne	21274 <_start@@Base+0xcc7c>
   21148:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2114c:	str	r3, [fp, #-40]	; 0xffffffd8
   21150:	mov	r3, #6
   21154:	ldr	r2, [fp, #-168]	; 0xffffff58
   21158:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2115c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21160:	bl	15600 <_start@@Base+0x1008>
   21164:	str	r0, [fp, #-164]	; 0xffffff5c
   21168:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2116c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21170:	cmp	r2, r3
   21174:	beq	2125c <_start@@Base+0xcc64>
   21178:	mov	r3, #0
   2117c:	str	r3, [fp, #-84]	; 0xffffffac
   21180:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21184:	str	r3, [fp, #-40]	; 0xffffffd8
   21188:	sub	r3, fp, #84	; 0x54
   2118c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21190:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21194:	ldr	r0, [fp, #-160]	; 0xffffff60
   21198:	bl	3cda8 <flatcc_json_parser_float@@Base>
   2119c:	str	r0, [fp, #-164]	; 0xffffff5c
   211a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   211a4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   211a8:	cmp	r2, r3
   211ac:	bne	211fc <_start@@Base+0xcc04>
   211b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   211b4:	str	r3, [fp, #-40]	; 0xffffffd8
   211b8:	sub	r3, fp, #84	; 0x54
   211bc:	str	r3, [sp]
   211c0:	ldr	r3, [pc, #232]	; 212b0 <_start@@Base+0xccb8>
   211c4:	add	r3, pc, r3
   211c8:	ldr	r2, [fp, #-168]	; 0xffffff58
   211cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   211d0:	ldr	r0, [fp, #-160]	; 0xffffff60
   211d4:	bl	17508 <_start@@Base+0x2f10>
   211d8:	str	r0, [fp, #-164]	; 0xffffff5c
   211dc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   211e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   211e4:	cmp	r2, r3
   211e8:	beq	22904 <_start@@Base+0xe30c>
   211ec:	ldr	r2, [fp, #-164]	; 0xffffff5c
   211f0:	ldr	r3, [fp, #-168]	; 0xffffff58
   211f4:	cmp	r2, r3
   211f8:	beq	22904 <_start@@Base+0xe30c>
   211fc:	vldr	s15, [fp, #-84]	; 0xffffffac
   21200:	vcmp.f32	s15, #0.0
   21204:	vmrs	APSR_nzcv, fpscr
   21208:	bne	21220 <_start@@Base+0xcc28>
   2120c:	ldr	r3, [fp, #-160]	; 0xffffff60
   21210:	ldr	r3, [r3, #8]
   21214:	and	r3, r3, #2
   21218:	cmp	r3, #0
   2121c:	beq	226b8 <_start@@Base+0xe0c0>
   21220:	ldr	r3, [fp, #-160]	; 0xffffff60
   21224:	ldr	r0, [r3]
   21228:	mov	r3, #4
   2122c:	mov	r2, #4
   21230:	mov	r1, #27
   21234:	bl	3255c <flatcc_builder_table_add@@Base>
   21238:	str	r0, [fp, #-48]	; 0xffffffd0
   2123c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21240:	cmp	r3, #0
   21244:	beq	2290c <_start@@Base+0xe314>
   21248:	vldr	s15, [fp, #-84]	; 0xffffffac
   2124c:	vmov.f32	s0, s15
   21250:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21254:	bl	14a90 <_start@@Base+0x498>
   21258:	b	226b8 <_start@@Base+0xe0c0>
   2125c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21260:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21264:	ldr	r0, [fp, #-160]	; 0xffffff60
   21268:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2126c:	str	r0, [fp, #-164]	; 0xffffff5c
   21270:	b	226b8 <_start@@Base+0xe0c0>
   21274:	ldr	r2, [fp, #-168]	; 0xffffff58
   21278:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2127c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21280:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   21284:	str	r0, [fp, #-164]	; 0xffffff5c
   21288:	b	226b8 <_start@@Base+0xe0c0>
   2128c:	nop	{0}
   21290:	strvs	r0, [r0], -r0
   21294:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   21298:	stmdavs	r1!, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}^
   2129c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   212a0:	ldrtvs	r0, [r3], -r0
   212a4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   212a8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   212ac:	andeq	r4, r4, r4, ror #4
   212b0:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   212b4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   212b8:	add	r3, pc, #784	; 0x310
   212bc:	ldrd	r2, [r3]
   212c0:	cmp	r1, r3
   212c4:	cmpeq	r0, r2
   212c8:	bne	21e94 <_start@@Base+0xd89c>
   212cc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   212d0:	add	r3, r3, #8
   212d4:	str	r3, [fp, #-164]	; 0xffffff5c
   212d8:	ldr	r1, [fp, #-168]	; 0xffffff58
   212dc:	ldr	r0, [fp, #-164]	; 0xffffff5c
   212e0:	bl	14ffc <_start@@Base+0xa04>
   212e4:	strd	r0, [fp, #-36]	; 0xffffffdc
   212e8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   212ec:	add	r3, pc, #740	; 0x2e4
   212f0:	ldrd	r2, [r3]
   212f4:	cmp	r1, r3
   212f8:	cmpeq	r0, r2
   212fc:	bhi	215f0 <_start@@Base+0xcff8>
   21300:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21304:	add	r3, pc, #724	; 0x2d4
   21308:	ldrd	r2, [r3]
   2130c:	cmp	r1, r3
   21310:	cmpeq	r0, r2
   21314:	bne	215b4 <_start@@Base+0xcfbc>
   21318:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2131c:	str	r3, [fp, #-40]	; 0xffffffd8
   21320:	mov	r3, #8
   21324:	ldr	r2, [fp, #-168]	; 0xffffff58
   21328:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2132c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21330:	bl	15600 <_start@@Base+0x1008>
   21334:	str	r0, [fp, #-164]	; 0xffffff5c
   21338:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2133c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21340:	cmp	r2, r3
   21344:	beq	21428 <_start@@Base+0xce30>
   21348:	mov	r3, #0
   2134c:	str	r3, [fp, #-88]	; 0xffffffa8
   21350:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21354:	str	r3, [fp, #-40]	; 0xffffffd8
   21358:	sub	r3, fp, #88	; 0x58
   2135c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21360:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21364:	ldr	r0, [fp, #-160]	; 0xffffff60
   21368:	bl	162a8 <_start@@Base+0x1cb0>
   2136c:	str	r0, [fp, #-164]	; 0xffffff5c
   21370:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21374:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21378:	cmp	r2, r3
   2137c:	bne	213cc <_start@@Base+0xcdd4>
   21380:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21384:	str	r3, [fp, #-40]	; 0xffffffd8
   21388:	sub	r3, fp, #88	; 0x58
   2138c:	str	r3, [sp]
   21390:	ldr	r3, [pc, #592]	; 215e8 <_start@@Base+0xcff0>
   21394:	add	r3, pc, r3
   21398:	ldr	r2, [fp, #-168]	; 0xffffff58
   2139c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   213a0:	ldr	r0, [fp, #-160]	; 0xffffff60
   213a4:	bl	16e84 <_start@@Base+0x288c>
   213a8:	str	r0, [fp, #-164]	; 0xffffff5c
   213ac:	ldr	r2, [fp, #-164]	; 0xffffff5c
   213b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   213b4:	cmp	r2, r3
   213b8:	beq	22914 <_start@@Base+0xe31c>
   213bc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   213c0:	ldr	r3, [fp, #-168]	; 0xffffff58
   213c4:	cmp	r2, r3
   213c8:	beq	22914 <_start@@Base+0xe31c>
   213cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   213d0:	cmp	r3, #0
   213d4:	bne	213ec <_start@@Base+0xcdf4>
   213d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   213dc:	ldr	r3, [r3, #8]
   213e0:	and	r3, r3, #2
   213e4:	cmp	r3, #0
   213e8:	beq	226b8 <_start@@Base+0xe0c0>
   213ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   213f0:	ldr	r0, [r3]
   213f4:	mov	r3, #4
   213f8:	mov	r2, #4
   213fc:	mov	r1, #16
   21400:	bl	3255c <flatcc_builder_table_add@@Base>
   21404:	str	r0, [fp, #-48]	; 0xffffffd0
   21408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2140c:	cmp	r3, #0
   21410:	beq	2291c <_start@@Base+0xe324>
   21414:	ldr	r3, [fp, #-88]	; 0xffffffa8
   21418:	mov	r1, r3
   2141c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21420:	bl	149ac <_start@@Base+0x3b4>
   21424:	b	226b8 <_start@@Base+0xe0c0>
   21428:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2142c:	add	r3, r3, #8
   21430:	str	r3, [fp, #-164]	; 0xffffff5c
   21434:	ldr	r1, [fp, #-168]	; 0xffffff58
   21438:	ldr	r0, [fp, #-164]	; 0xffffff5c
   2143c:	bl	14ffc <_start@@Base+0xa04>
   21440:	strd	r0, [fp, #-36]	; 0xffffffdc
   21444:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21448:	mov	r2, #0
   2144c:	mov	r3, #-16777216	; 0xff000000
   21450:	and	ip, r0, r2
   21454:	str	ip, [fp, #-332]	; 0xfffffeb4
   21458:	and	r3, r1, r3
   2145c:	str	r3, [fp, #-328]	; 0xfffffeb8
   21460:	sub	r3, fp, #332	; 0x14c
   21464:	ldrd	r2, [r3]
   21468:	cmp	r3, #1627389952	; 0x61000000
   2146c:	cmpeq	r2, #0
   21470:	bne	2159c <_start@@Base+0xcfa4>
   21474:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21478:	str	r3, [fp, #-40]	; 0xffffffd8
   2147c:	mov	r3, #1
   21480:	ldr	r2, [fp, #-168]	; 0xffffff58
   21484:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21488:	ldr	r0, [fp, #-160]	; 0xffffff60
   2148c:	bl	15600 <_start@@Base+0x1008>
   21490:	str	r0, [fp, #-164]	; 0xffffff5c
   21494:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21498:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2149c:	cmp	r2, r3
   214a0:	beq	21584 <_start@@Base+0xcf8c>
   214a4:	mov	r3, #0
   214a8:	str	r3, [fp, #-92]	; 0xffffffa4
   214ac:	ldr	r3, [fp, #-164]	; 0xffffff5c
   214b0:	str	r3, [fp, #-40]	; 0xffffffd8
   214b4:	sub	r3, fp, #92	; 0x5c
   214b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   214bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   214c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   214c4:	bl	162a8 <_start@@Base+0x1cb0>
   214c8:	str	r0, [fp, #-164]	; 0xffffff5c
   214cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   214d0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   214d4:	cmp	r2, r3
   214d8:	bne	21528 <_start@@Base+0xcf30>
   214dc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   214e0:	str	r3, [fp, #-40]	; 0xffffffd8
   214e4:	sub	r3, fp, #92	; 0x5c
   214e8:	str	r3, [sp]
   214ec:	ldr	r3, [pc, #248]	; 215ec <_start@@Base+0xcff4>
   214f0:	add	r3, pc, r3
   214f4:	ldr	r2, [fp, #-168]	; 0xffffff58
   214f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   214fc:	ldr	r0, [fp, #-160]	; 0xffffff60
   21500:	bl	16e84 <_start@@Base+0x288c>
   21504:	str	r0, [fp, #-164]	; 0xffffff5c
   21508:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2150c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21510:	cmp	r2, r3
   21514:	beq	22924 <_start@@Base+0xe32c>
   21518:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2151c:	ldr	r3, [fp, #-168]	; 0xffffff58
   21520:	cmp	r2, r3
   21524:	beq	22924 <_start@@Base+0xe32c>
   21528:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2152c:	cmp	r3, #0
   21530:	bne	21548 <_start@@Base+0xcf50>
   21534:	ldr	r3, [fp, #-160]	; 0xffffff60
   21538:	ldr	r3, [r3, #8]
   2153c:	and	r3, r3, #2
   21540:	cmp	r3, #0
   21544:	beq	226b8 <_start@@Base+0xe0c0>
   21548:	ldr	r3, [fp, #-160]	; 0xffffff60
   2154c:	ldr	r0, [r3]
   21550:	mov	r3, #4
   21554:	mov	r2, #4
   21558:	mov	r1, #20
   2155c:	bl	3255c <flatcc_builder_table_add@@Base>
   21560:	str	r0, [fp, #-48]	; 0xffffffd0
   21564:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21568:	cmp	r3, #0
   2156c:	beq	2292c <_start@@Base+0xe334>
   21570:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21574:	mov	r1, r3
   21578:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2157c:	bl	149ac <_start@@Base+0x3b4>
   21580:	b	226b8 <_start@@Base+0xe0c0>
   21584:	ldr	r2, [fp, #-168]	; 0xffffff58
   21588:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2158c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21590:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   21594:	str	r0, [fp, #-164]	; 0xffffff5c
   21598:	b	226b8 <_start@@Base+0xe0c0>
   2159c:	ldr	r2, [fp, #-168]	; 0xffffff58
   215a0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   215a4:	ldr	r0, [fp, #-160]	; 0xffffff60
   215a8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   215ac:	str	r0, [fp, #-164]	; 0xffffff5c
   215b0:	b	226b8 <_start@@Base+0xe0c0>
   215b4:	ldr	r2, [fp, #-168]	; 0xffffff58
   215b8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   215bc:	ldr	r0, [fp, #-160]	; 0xffffff60
   215c0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   215c4:	str	r0, [fp, #-164]	; 0xffffff5c
   215c8:	b	226b8 <_start@@Base+0xe0c0>
   215cc:	nop	{0}
   215d0:	stmdavs	r1!, {r3, r5, r6, r8, r9, ip, sp, lr}^
   215d4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   215d8:			; <UNDEFINED> instruction: 0x666e7630
   215dc:	teqvc	r6, #1593835520	; 0x5f000000
   215e0:			; <UNDEFINED> instruction: 0x666e7631
   215e4:	teqvc	r3, #-268435451	; 0xf0000005
   215e8:	andeq	r3, r4, r0, lsl pc
   215ec:	andeq	r3, r4, r0, asr #27
   215f0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   215f4:	add	r3, pc, #732	; 0x2dc
   215f8:	ldrd	r2, [r3]
   215fc:	cmp	r1, r3
   21600:	cmpeq	r0, r2
   21604:	bhi	218f0 <_start@@Base+0xd2f8>
   21608:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2160c:	add	r3, pc, #716	; 0x2cc
   21610:	ldrd	r2, [r3]
   21614:	cmp	r1, r3
   21618:	cmpeq	r0, r2
   2161c:	bne	218bc <_start@@Base+0xd2c4>
   21620:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21624:	str	r3, [fp, #-40]	; 0xffffffd8
   21628:	mov	r3, #8
   2162c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21630:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21634:	ldr	r0, [fp, #-160]	; 0xffffff60
   21638:	bl	15600 <_start@@Base+0x1008>
   2163c:	str	r0, [fp, #-164]	; 0xffffff5c
   21640:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21644:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21648:	cmp	r2, r3
   2164c:	beq	21730 <_start@@Base+0xd138>
   21650:	mov	r2, #0
   21654:	mov	r3, #0
   21658:	strd	r2, [fp, #-100]	; 0xffffff9c
   2165c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21660:	str	r3, [fp, #-40]	; 0xffffffd8
   21664:	sub	r3, fp, #100	; 0x64
   21668:	ldr	r2, [fp, #-168]	; 0xffffff58
   2166c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21670:	ldr	r0, [fp, #-160]	; 0xffffff60
   21674:	bl	161c8 <_start@@Base+0x1bd0>
   21678:	str	r0, [fp, #-164]	; 0xffffff5c
   2167c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21680:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21684:	cmp	r2, r3
   21688:	bne	216d8 <_start@@Base+0xd0e0>
   2168c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21690:	str	r3, [fp, #-40]	; 0xffffffd8
   21694:	sub	r3, fp, #100	; 0x64
   21698:	str	r3, [sp]
   2169c:	ldr	r3, [pc, #580]	; 218e8 <_start@@Base+0xd2f0>
   216a0:	add	r3, pc, r3
   216a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   216a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   216ac:	ldr	r0, [fp, #-160]	; 0xffffff60
   216b0:	bl	16cd8 <_start@@Base+0x26e0>
   216b4:	str	r0, [fp, #-164]	; 0xffffff5c
   216b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   216bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   216c0:	cmp	r2, r3
   216c4:	beq	22934 <_start@@Base+0xe33c>
   216c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   216cc:	ldr	r3, [fp, #-168]	; 0xffffff58
   216d0:	cmp	r2, r3
   216d4:	beq	22934 <_start@@Base+0xe33c>
   216d8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   216dc:	orrs	r3, r2, r3
   216e0:	bne	216f8 <_start@@Base+0xd100>
   216e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   216e8:	ldr	r3, [r3, #8]
   216ec:	and	r3, r3, #2
   216f0:	cmp	r3, #0
   216f4:	beq	226b8 <_start@@Base+0xe0c0>
   216f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   216fc:	ldr	r0, [r3]
   21700:	mov	r3, #8
   21704:	mov	r2, #8
   21708:	mov	r1, #18
   2170c:	bl	3255c <flatcc_builder_table_add@@Base>
   21710:	str	r0, [fp, #-48]	; 0xffffffd0
   21714:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21718:	cmp	r3, #0
   2171c:	beq	2293c <_start@@Base+0xe344>
   21720:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   21724:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21728:	bl	14a14 <_start@@Base+0x41c>
   2172c:	b	226b8 <_start@@Base+0xe0c0>
   21730:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21734:	add	r3, r3, #8
   21738:	str	r3, [fp, #-164]	; 0xffffff5c
   2173c:	ldr	r1, [fp, #-168]	; 0xffffff58
   21740:	ldr	r0, [fp, #-164]	; 0xffffff5c
   21744:	bl	14ffc <_start@@Base+0xa04>
   21748:	strd	r0, [fp, #-36]	; 0xffffffdc
   2174c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21750:	mov	r2, #0
   21754:	mov	r3, #-16777216	; 0xff000000
   21758:	and	ip, r0, r2
   2175c:	str	ip, [fp, #-340]	; 0xfffffeac
   21760:	and	r3, r1, r3
   21764:	str	r3, [fp, #-336]	; 0xfffffeb0
   21768:	sub	r3, fp, #340	; 0x154
   2176c:	ldrd	r2, [r3]
   21770:	cmp	r3, #1627389952	; 0x61000000
   21774:	cmpeq	r2, #0
   21778:	bne	218a4 <_start@@Base+0xd2ac>
   2177c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21780:	str	r3, [fp, #-40]	; 0xffffffd8
   21784:	mov	r3, #1
   21788:	ldr	r2, [fp, #-168]	; 0xffffff58
   2178c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21790:	ldr	r0, [fp, #-160]	; 0xffffff60
   21794:	bl	15600 <_start@@Base+0x1008>
   21798:	str	r0, [fp, #-164]	; 0xffffff5c
   2179c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   217a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   217a4:	cmp	r2, r3
   217a8:	beq	2188c <_start@@Base+0xd294>
   217ac:	mov	r2, #0
   217b0:	mov	r3, #0
   217b4:	strd	r2, [fp, #-108]	; 0xffffff94
   217b8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   217bc:	str	r3, [fp, #-40]	; 0xffffffd8
   217c0:	sub	r3, fp, #108	; 0x6c
   217c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   217c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   217cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   217d0:	bl	161c8 <_start@@Base+0x1bd0>
   217d4:	str	r0, [fp, #-164]	; 0xffffff5c
   217d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   217dc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   217e0:	cmp	r2, r3
   217e4:	bne	21834 <_start@@Base+0xd23c>
   217e8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   217ec:	str	r3, [fp, #-40]	; 0xffffffd8
   217f0:	sub	r3, fp, #108	; 0x6c
   217f4:	str	r3, [sp]
   217f8:	ldr	r3, [pc, #236]	; 218ec <_start@@Base+0xd2f4>
   217fc:	add	r3, pc, r3
   21800:	ldr	r2, [fp, #-168]	; 0xffffff58
   21804:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21808:	ldr	r0, [fp, #-160]	; 0xffffff60
   2180c:	bl	16cd8 <_start@@Base+0x26e0>
   21810:	str	r0, [fp, #-164]	; 0xffffff5c
   21814:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21818:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2181c:	cmp	r2, r3
   21820:	beq	22944 <_start@@Base+0xe34c>
   21824:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21828:	ldr	r3, [fp, #-168]	; 0xffffff58
   2182c:	cmp	r2, r3
   21830:	beq	22944 <_start@@Base+0xe34c>
   21834:	ldrd	r2, [fp, #-108]	; 0xffffff94
   21838:	orrs	r3, r2, r3
   2183c:	bne	21854 <_start@@Base+0xd25c>
   21840:	ldr	r3, [fp, #-160]	; 0xffffff60
   21844:	ldr	r3, [r3, #8]
   21848:	and	r3, r3, #2
   2184c:	cmp	r3, #0
   21850:	beq	226b8 <_start@@Base+0xe0c0>
   21854:	ldr	r3, [fp, #-160]	; 0xffffff60
   21858:	ldr	r0, [r3]
   2185c:	mov	r3, #8
   21860:	mov	r2, #8
   21864:	mov	r1, #22
   21868:	bl	3255c <flatcc_builder_table_add@@Base>
   2186c:	str	r0, [fp, #-48]	; 0xffffffd0
   21870:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21874:	cmp	r3, #0
   21878:	beq	2294c <_start@@Base+0xe354>
   2187c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   21880:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21884:	bl	14a14 <_start@@Base+0x41c>
   21888:	b	226b8 <_start@@Base+0xe0c0>
   2188c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21890:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21894:	ldr	r0, [fp, #-160]	; 0xffffff60
   21898:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2189c:	str	r0, [fp, #-164]	; 0xffffff5c
   218a0:	b	226b8 <_start@@Base+0xe0c0>
   218a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   218a8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   218ac:	ldr	r0, [fp, #-160]	; 0xffffff60
   218b0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   218b4:	str	r0, [fp, #-164]	; 0xffffff5c
   218b8:	b	226b8 <_start@@Base+0xe0c0>
   218bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   218c0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   218c4:	ldr	r0, [fp, #-160]	; 0xffffff60
   218c8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   218cc:	str	r0, [fp, #-164]	; 0xffffff5c
   218d0:	b	226b8 <_start@@Base+0xe0c0>
   218d4:	nop	{0}
   218d8:			; <UNDEFINED> instruction: 0x666e7630
   218dc:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   218e0:			; <UNDEFINED> instruction: 0x666e7631
   218e4:	teqvc	r6, #1593835520	; 0x5f000000
   218e8:	andeq	r3, r4, ip, lsl ip
   218ec:	andeq	r3, r4, ip, asr #21
   218f0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   218f4:	add	r3, pc, #980	; 0x3d4
   218f8:	ldrd	r2, [r3]
   218fc:	cmp	r1, r3
   21900:	cmpeq	r0, r2
   21904:	bne	21ba4 <_start@@Base+0xd5ac>
   21908:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2190c:	str	r3, [fp, #-40]	; 0xffffffd8
   21910:	mov	r3, #8
   21914:	ldr	r2, [fp, #-168]	; 0xffffff58
   21918:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2191c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21920:	bl	15600 <_start@@Base+0x1008>
   21924:	str	r0, [fp, #-164]	; 0xffffff5c
   21928:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2192c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21930:	cmp	r2, r3
   21934:	beq	21a18 <_start@@Base+0xd420>
   21938:	mov	r3, #0
   2193c:	str	r3, [fp, #-112]	; 0xffffff90
   21940:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21944:	str	r3, [fp, #-40]	; 0xffffffd8
   21948:	sub	r3, fp, #112	; 0x70
   2194c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21950:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21954:	ldr	r0, [fp, #-160]	; 0xffffff60
   21958:	bl	15f34 <_start@@Base+0x193c>
   2195c:	str	r0, [fp, #-164]	; 0xffffff5c
   21960:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21964:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21968:	cmp	r2, r3
   2196c:	bne	219bc <_start@@Base+0xd3c4>
   21970:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21974:	str	r3, [fp, #-40]	; 0xffffffd8
   21978:	sub	r3, fp, #112	; 0x70
   2197c:	str	r3, [sp]
   21980:	ldr	r3, [pc, #856]	; 21ce0 <_start@@Base+0xd6e8>
   21984:	add	r3, pc, r3
   21988:	ldr	r2, [fp, #-168]	; 0xffffff58
   2198c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21990:	ldr	r0, [fp, #-160]	; 0xffffff60
   21994:	bl	16808 <_start@@Base+0x2210>
   21998:	str	r0, [fp, #-164]	; 0xffffff5c
   2199c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   219a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   219a4:	cmp	r2, r3
   219a8:	beq	22954 <_start@@Base+0xe35c>
   219ac:	ldr	r2, [fp, #-164]	; 0xffffff5c
   219b0:	ldr	r3, [fp, #-168]	; 0xffffff58
   219b4:	cmp	r2, r3
   219b8:	beq	22954 <_start@@Base+0xe35c>
   219bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   219c0:	cmp	r3, #0
   219c4:	bne	219dc <_start@@Base+0xd3e4>
   219c8:	ldr	r3, [fp, #-160]	; 0xffffff60
   219cc:	ldr	r3, [r3, #8]
   219d0:	and	r3, r3, #2
   219d4:	cmp	r3, #0
   219d8:	beq	226b8 <_start@@Base+0xe0c0>
   219dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   219e0:	ldr	r0, [r3]
   219e4:	mov	r3, #4
   219e8:	mov	r2, #4
   219ec:	mov	r1, #17
   219f0:	bl	3255c <flatcc_builder_table_add@@Base>
   219f4:	str	r0, [fp, #-48]	; 0xffffffd0
   219f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   219fc:	cmp	r3, #0
   21a00:	beq	2295c <_start@@Base+0xe364>
   21a04:	ldr	r3, [fp, #-112]	; 0xffffff90
   21a08:	mov	r1, r3
   21a0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21a10:	bl	147f4 <_start@@Base+0x1fc>
   21a14:	b	226b8 <_start@@Base+0xe0c0>
   21a18:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21a1c:	add	r3, r3, #8
   21a20:	str	r3, [fp, #-164]	; 0xffffff5c
   21a24:	ldr	r1, [fp, #-168]	; 0xffffff58
   21a28:	ldr	r0, [fp, #-164]	; 0xffffff5c
   21a2c:	bl	14ffc <_start@@Base+0xa04>
   21a30:	strd	r0, [fp, #-36]	; 0xffffffdc
   21a34:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21a38:	mov	r2, #0
   21a3c:	mov	r3, #-16777216	; 0xff000000
   21a40:	and	ip, r0, r2
   21a44:	str	ip, [fp, #-348]	; 0xfffffea4
   21a48:	and	r3, r1, r3
   21a4c:	str	r3, [fp, #-344]	; 0xfffffea8
   21a50:	sub	r3, fp, #348	; 0x15c
   21a54:	ldrd	r2, [r3]
   21a58:	cmp	r3, #1627389952	; 0x61000000
   21a5c:	cmpeq	r2, #0
   21a60:	bne	21b8c <_start@@Base+0xd594>
   21a64:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21a68:	str	r3, [fp, #-40]	; 0xffffffd8
   21a6c:	mov	r3, #1
   21a70:	ldr	r2, [fp, #-168]	; 0xffffff58
   21a74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21a78:	ldr	r0, [fp, #-160]	; 0xffffff60
   21a7c:	bl	15600 <_start@@Base+0x1008>
   21a80:	str	r0, [fp, #-164]	; 0xffffff5c
   21a84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21a88:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21a8c:	cmp	r2, r3
   21a90:	beq	21b74 <_start@@Base+0xd57c>
   21a94:	mov	r3, #0
   21a98:	str	r3, [fp, #-116]	; 0xffffff8c
   21a9c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21aa0:	str	r3, [fp, #-40]	; 0xffffffd8
   21aa4:	sub	r3, fp, #116	; 0x74
   21aa8:	ldr	r2, [fp, #-168]	; 0xffffff58
   21aac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21ab0:	ldr	r0, [fp, #-160]	; 0xffffff60
   21ab4:	bl	15f34 <_start@@Base+0x193c>
   21ab8:	str	r0, [fp, #-164]	; 0xffffff5c
   21abc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21ac0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21ac4:	cmp	r2, r3
   21ac8:	bne	21b18 <_start@@Base+0xd520>
   21acc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21ad0:	str	r3, [fp, #-40]	; 0xffffffd8
   21ad4:	sub	r3, fp, #116	; 0x74
   21ad8:	str	r3, [sp]
   21adc:	ldr	r3, [pc, #512]	; 21ce4 <_start@@Base+0xd6ec>
   21ae0:	add	r3, pc, r3
   21ae4:	ldr	r2, [fp, #-168]	; 0xffffff58
   21ae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21aec:	ldr	r0, [fp, #-160]	; 0xffffff60
   21af0:	bl	16808 <_start@@Base+0x2210>
   21af4:	str	r0, [fp, #-164]	; 0xffffff5c
   21af8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21afc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21b00:	cmp	r2, r3
   21b04:	beq	22964 <_start@@Base+0xe36c>
   21b08:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21b0c:	ldr	r3, [fp, #-168]	; 0xffffff58
   21b10:	cmp	r2, r3
   21b14:	beq	22964 <_start@@Base+0xe36c>
   21b18:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21b1c:	cmp	r3, #0
   21b20:	bne	21b38 <_start@@Base+0xd540>
   21b24:	ldr	r3, [fp, #-160]	; 0xffffff60
   21b28:	ldr	r3, [r3, #8]
   21b2c:	and	r3, r3, #2
   21b30:	cmp	r3, #0
   21b34:	beq	226b8 <_start@@Base+0xe0c0>
   21b38:	ldr	r3, [fp, #-160]	; 0xffffff60
   21b3c:	ldr	r0, [r3]
   21b40:	mov	r3, #4
   21b44:	mov	r2, #4
   21b48:	mov	r1, #21
   21b4c:	bl	3255c <flatcc_builder_table_add@@Base>
   21b50:	str	r0, [fp, #-48]	; 0xffffffd0
   21b54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21b58:	cmp	r3, #0
   21b5c:	beq	2296c <_start@@Base+0xe374>
   21b60:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21b64:	mov	r1, r3
   21b68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21b6c:	bl	147f4 <_start@@Base+0x1fc>
   21b70:	b	226b8 <_start@@Base+0xe0c0>
   21b74:	ldr	r2, [fp, #-168]	; 0xffffff58
   21b78:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21b7c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21b80:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   21b84:	str	r0, [fp, #-164]	; 0xffffff5c
   21b88:	b	226b8 <_start@@Base+0xe0c0>
   21b8c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21b90:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21b94:	ldr	r0, [fp, #-160]	; 0xffffff60
   21b98:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   21b9c:	str	r0, [fp, #-164]	; 0xffffff5c
   21ba0:	b	226b8 <_start@@Base+0xe0c0>
   21ba4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21ba8:	add	r3, pc, #296	; 0x128
   21bac:	ldrd	r2, [r3]
   21bb0:	cmp	r1, r3
   21bb4:	cmpeq	r0, r2
   21bb8:	bne	21e7c <_start@@Base+0xd884>
   21bbc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21bc0:	str	r3, [fp, #-40]	; 0xffffffd8
   21bc4:	mov	r3, #8
   21bc8:	ldr	r2, [fp, #-168]	; 0xffffff58
   21bcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21bd0:	ldr	r0, [fp, #-160]	; 0xffffff60
   21bd4:	bl	15600 <_start@@Base+0x1008>
   21bd8:	str	r0, [fp, #-164]	; 0xffffff5c
   21bdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21be0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21be4:	cmp	r2, r3
   21be8:	beq	21cf0 <_start@@Base+0xd6f8>
   21bec:	mov	r2, #0
   21bf0:	mov	r3, #0
   21bf4:	strd	r2, [fp, #-124]	; 0xffffff84
   21bf8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21bfc:	str	r3, [fp, #-40]	; 0xffffffd8
   21c00:	sub	r3, fp, #124	; 0x7c
   21c04:	ldr	r2, [fp, #-168]	; 0xffffff58
   21c08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21c0c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21c10:	bl	15e54 <_start@@Base+0x185c>
   21c14:	str	r0, [fp, #-164]	; 0xffffff5c
   21c18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21c1c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21c20:	cmp	r2, r3
   21c24:	bne	21c74 <_start@@Base+0xd67c>
   21c28:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21c2c:	str	r3, [fp, #-40]	; 0xffffffd8
   21c30:	sub	r3, fp, #124	; 0x7c
   21c34:	str	r3, [sp]
   21c38:	ldr	r3, [pc, #168]	; 21ce8 <_start@@Base+0xd6f0>
   21c3c:	add	r3, pc, r3
   21c40:	ldr	r2, [fp, #-168]	; 0xffffff58
   21c44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21c48:	ldr	r0, [fp, #-160]	; 0xffffff60
   21c4c:	bl	1665c <_start@@Base+0x2064>
   21c50:	str	r0, [fp, #-164]	; 0xffffff5c
   21c54:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21c58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21c5c:	cmp	r2, r3
   21c60:	beq	22974 <_start@@Base+0xe37c>
   21c64:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21c68:	ldr	r3, [fp, #-168]	; 0xffffff58
   21c6c:	cmp	r2, r3
   21c70:	beq	22974 <_start@@Base+0xe37c>
   21c74:	ldrd	r2, [fp, #-124]	; 0xffffff84
   21c78:	orrs	r3, r2, r3
   21c7c:	bne	21c94 <_start@@Base+0xd69c>
   21c80:	ldr	r3, [fp, #-160]	; 0xffffff60
   21c84:	ldr	r3, [r3, #8]
   21c88:	and	r3, r3, #2
   21c8c:	cmp	r3, #0
   21c90:	beq	226b8 <_start@@Base+0xe0c0>
   21c94:	ldr	r3, [fp, #-160]	; 0xffffff60
   21c98:	ldr	r0, [r3]
   21c9c:	mov	r3, #8
   21ca0:	mov	r2, #8
   21ca4:	mov	r1, #19
   21ca8:	bl	3255c <flatcc_builder_table_add@@Base>
   21cac:	str	r0, [fp, #-48]	; 0xffffffd0
   21cb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21cb4:	cmp	r3, #0
   21cb8:	beq	2297c <_start@@Base+0xe384>
   21cbc:	ldrd	r2, [fp, #-124]	; 0xffffff84
   21cc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21cc4:	bl	1485c <_start@@Base+0x264>
   21cc8:	b	226b8 <_start@@Base+0xe0c0>
   21ccc:	nop	{0}
   21cd0:			; <UNDEFINED> instruction: 0x666e7631
   21cd4:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   21cd8:			; <UNDEFINED> instruction: 0x666e7631
   21cdc:	ldrvc	r3, [r6, #-1119]!	; 0xfffffba1
   21ce0:	andeq	r3, r4, r0, asr r9
   21ce4:	andeq	r3, r4, r0, lsl #16
   21ce8:			; <UNDEFINED> instruction: 0x000436b0
   21cec:	andeq	r3, r4, ip, lsr r5
   21cf0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21cf4:	add	r3, r3, #8
   21cf8:	str	r3, [fp, #-164]	; 0xffffff5c
   21cfc:	ldr	r1, [fp, #-168]	; 0xffffff58
   21d00:	ldr	r0, [fp, #-164]	; 0xffffff5c
   21d04:	bl	14ffc <_start@@Base+0xa04>
   21d08:	strd	r0, [fp, #-36]	; 0xffffffdc
   21d0c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21d10:	mov	r2, #0
   21d14:	mov	r3, #-16777216	; 0xff000000
   21d18:	and	ip, r0, r2
   21d1c:	str	ip, [fp, #-356]	; 0xfffffe9c
   21d20:	and	r3, r1, r3
   21d24:	str	r3, [fp, #-352]	; 0xfffffea0
   21d28:	sub	r3, fp, #356	; 0x164
   21d2c:	ldrd	r2, [r3]
   21d30:	cmp	r3, #1627389952	; 0x61000000
   21d34:	cmpeq	r2, #0
   21d38:	bne	21e64 <_start@@Base+0xd86c>
   21d3c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21d40:	str	r3, [fp, #-40]	; 0xffffffd8
   21d44:	mov	r3, #1
   21d48:	ldr	r2, [fp, #-168]	; 0xffffff58
   21d4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21d50:	ldr	r0, [fp, #-160]	; 0xffffff60
   21d54:	bl	15600 <_start@@Base+0x1008>
   21d58:	str	r0, [fp, #-164]	; 0xffffff5c
   21d5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21d60:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21d64:	cmp	r2, r3
   21d68:	beq	21e4c <_start@@Base+0xd854>
   21d6c:	mov	r2, #0
   21d70:	mov	r3, #0
   21d74:	strd	r2, [fp, #-132]	; 0xffffff7c
   21d78:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21d7c:	str	r3, [fp, #-40]	; 0xffffffd8
   21d80:	sub	r3, fp, #132	; 0x84
   21d84:	ldr	r2, [fp, #-168]	; 0xffffff58
   21d88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21d8c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21d90:	bl	15e54 <_start@@Base+0x185c>
   21d94:	str	r0, [fp, #-164]	; 0xffffff5c
   21d98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21d9c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21da0:	cmp	r2, r3
   21da4:	bne	21df4 <_start@@Base+0xd7fc>
   21da8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21dac:	str	r3, [fp, #-40]	; 0xffffffd8
   21db0:	sub	r3, fp, #132	; 0x84
   21db4:	str	r3, [sp]
   21db8:	ldr	r3, [pc, #-212]	; 21cec <_start@@Base+0xd6f4>
   21dbc:	add	r3, pc, r3
   21dc0:	ldr	r2, [fp, #-168]	; 0xffffff58
   21dc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21dc8:	ldr	r0, [fp, #-160]	; 0xffffff60
   21dcc:	bl	1665c <_start@@Base+0x2064>
   21dd0:	str	r0, [fp, #-164]	; 0xffffff5c
   21dd4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21dd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ddc:	cmp	r2, r3
   21de0:	beq	22984 <_start@@Base+0xe38c>
   21de4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21de8:	ldr	r3, [fp, #-168]	; 0xffffff58
   21dec:	cmp	r2, r3
   21df0:	beq	22984 <_start@@Base+0xe38c>
   21df4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   21df8:	orrs	r3, r2, r3
   21dfc:	bne	21e14 <_start@@Base+0xd81c>
   21e00:	ldr	r3, [fp, #-160]	; 0xffffff60
   21e04:	ldr	r3, [r3, #8]
   21e08:	and	r3, r3, #2
   21e0c:	cmp	r3, #0
   21e10:	beq	226b8 <_start@@Base+0xe0c0>
   21e14:	ldr	r3, [fp, #-160]	; 0xffffff60
   21e18:	ldr	r0, [r3]
   21e1c:	mov	r3, #8
   21e20:	mov	r2, #8
   21e24:	mov	r1, #23
   21e28:	bl	3255c <flatcc_builder_table_add@@Base>
   21e2c:	str	r0, [fp, #-48]	; 0xffffffd0
   21e30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21e34:	cmp	r3, #0
   21e38:	beq	2298c <_start@@Base+0xe394>
   21e3c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   21e40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21e44:	bl	1485c <_start@@Base+0x264>
   21e48:	b	226b8 <_start@@Base+0xe0c0>
   21e4c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21e50:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21e54:	ldr	r0, [fp, #-160]	; 0xffffff60
   21e58:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   21e5c:	str	r0, [fp, #-164]	; 0xffffff5c
   21e60:	b	226b8 <_start@@Base+0xe0c0>
   21e64:	ldr	r2, [fp, #-168]	; 0xffffff58
   21e68:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21e6c:	ldr	r0, [fp, #-160]	; 0xffffff60
   21e70:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   21e74:	str	r0, [fp, #-164]	; 0xffffff5c
   21e78:	b	226b8 <_start@@Base+0xe0c0>
   21e7c:	ldr	r2, [fp, #-168]	; 0xffffff58
   21e80:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21e84:	ldr	r0, [fp, #-160]	; 0xffffff60
   21e88:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   21e8c:	str	r0, [fp, #-164]	; 0xffffff5c
   21e90:	b	226b8 <_start@@Base+0xe0c0>
   21e94:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21e98:	add	r3, pc, #832	; 0x340
   21e9c:	ldrd	r2, [r3]
   21ea0:	cmp	r1, r3
   21ea4:	cmpeq	r0, r2
   21ea8:	bhi	22204 <_start@@Base+0xdc0c>
   21eac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21eb0:	add	r3, pc, #816	; 0x330
   21eb4:	ldrd	r2, [r3]
   21eb8:	cmp	r1, r3
   21ebc:	cmpeq	r0, r2
   21ec0:	bne	221c4 <_start@@Base+0xdbcc>
   21ec4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21ec8:	add	r3, r3, #8
   21ecc:	str	r3, [fp, #-164]	; 0xffffff5c
   21ed0:	ldr	r1, [fp, #-168]	; 0xffffff58
   21ed4:	ldr	r0, [fp, #-164]	; 0xffffff5c
   21ed8:	bl	14ffc <_start@@Base+0xa04>
   21edc:	strd	r0, [fp, #-36]	; 0xffffffdc
   21ee0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21ee4:	add	r3, pc, #772	; 0x304
   21ee8:	ldrd	r2, [r3]
   21eec:	cmp	r1, r3
   21ef0:	cmpeq	r0, r2
   21ef4:	bne	221ac <_start@@Base+0xdbb4>
   21ef8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21efc:	add	r3, r3, #8
   21f00:	str	r3, [fp, #-164]	; 0xffffff5c
   21f04:	ldr	r1, [fp, #-168]	; 0xffffff58
   21f08:	ldr	r0, [fp, #-164]	; 0xffffff5c
   21f0c:	bl	14ffc <_start@@Base+0xa04>
   21f10:	strd	r0, [fp, #-36]	; 0xffffffdc
   21f14:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   21f18:	mov	r2, #0
   21f1c:	mvn	r3, #0
   21f20:	and	ip, r0, r2
   21f24:	str	ip, [fp, #-364]	; 0xfffffe94
   21f28:	and	r3, r1, r3
   21f2c:	str	r3, [fp, #-360]	; 0xfffffe98
   21f30:	add	r3, pc, #704	; 0x2c0
   21f34:	ldrd	r2, [r3]
   21f38:	sub	r1, fp, #364	; 0x16c
   21f3c:	ldrd	r0, [r1]
   21f40:	cmp	r1, r3
   21f44:	cmpeq	r0, r2
   21f48:	bne	22194 <_start@@Base+0xdb9c>
   21f4c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21f50:	str	r3, [fp, #-40]	; 0xffffffd8
   21f54:	mov	r3, #4
   21f58:	ldr	r2, [fp, #-168]	; 0xffffff58
   21f5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21f60:	ldr	r0, [fp, #-160]	; 0xffffff60
   21f64:	bl	15600 <_start@@Base+0x1008>
   21f68:	str	r0, [fp, #-164]	; 0xffffff5c
   21f6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21f70:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21f74:	cmp	r2, r3
   21f78:	beq	2217c <_start@@Base+0xdb84>
   21f7c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   21f80:	ldr	r3, [fp, #-168]	; 0xffffff58
   21f84:	cmp	r2, r3
   21f88:	beq	220d4 <_start@@Base+0xdadc>
   21f8c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   21f90:	ldrb	r3, [r3]
   21f94:	cmp	r3, #91	; 0x5b
   21f98:	bne	220d4 <_start@@Base+0xdadc>
   21f9c:	ldr	r3, [fp, #-160]	; 0xffffff60
   21fa0:	ldr	r0, [r3]
   21fa4:	mvn	r3, #0
   21fa8:	mov	r2, #1
   21fac:	mov	r1, #1
   21fb0:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   21fb4:	mov	r3, r0
   21fb8:	cmp	r3, #0
   21fbc:	bne	22994 <_start@@Base+0xe39c>
   21fc0:	sub	r3, fp, #52	; 0x34
   21fc4:	ldr	r2, [fp, #-168]	; 0xffffff58
   21fc8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   21fcc:	ldr	r0, [fp, #-160]	; 0xffffff60
   21fd0:	bl	15398 <_start@@Base+0xda0>
   21fd4:	str	r0, [fp, #-164]	; 0xffffff5c
   21fd8:	b	220ac <_start@@Base+0xdab4>
   21fdc:	mov	r3, #0
   21fe0:	strb	r3, [fp, #-133]	; 0xffffff7b
   21fe4:	ldr	r3, [fp, #-160]	; 0xffffff60
   21fe8:	ldr	r3, [r3]
   21fec:	mov	r1, #1
   21ff0:	mov	r0, r3
   21ff4:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   21ff8:	str	r0, [fp, #-48]	; 0xffffffd0
   21ffc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22000:	cmp	r3, #0
   22004:	beq	2299c <_start@@Base+0xe3a4>
   22008:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2200c:	str	r3, [fp, #-40]	; 0xffffffd8
   22010:	sub	r3, fp, #133	; 0x85
   22014:	ldr	r2, [fp, #-168]	; 0xffffff58
   22018:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2201c:	ldr	r0, [fp, #-160]	; 0xffffff60
   22020:	bl	160ec <_start@@Base+0x1af4>
   22024:	str	r0, [fp, #-164]	; 0xffffff5c
   22028:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2202c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22030:	cmp	r2, r3
   22034:	bne	22084 <_start@@Base+0xda8c>
   22038:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2203c:	str	r3, [fp, #-40]	; 0xffffffd8
   22040:	sub	r3, fp, #133	; 0x85
   22044:	str	r3, [sp]
   22048:	ldr	r3, [pc, #432]	; 22200 <_start@@Base+0xdc08>
   2204c:	add	r3, pc, r3
   22050:	ldr	r2, [fp, #-168]	; 0xffffff58
   22054:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22058:	ldr	r0, [fp, #-160]	; 0xffffff60
   2205c:	bl	16b3c <_start@@Base+0x2544>
   22060:	str	r0, [fp, #-164]	; 0xffffff5c
   22064:	ldr	r2, [fp, #-164]	; 0xffffff5c
   22068:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2206c:	cmp	r2, r3
   22070:	beq	229a4 <_start@@Base+0xe3ac>
   22074:	ldr	r2, [fp, #-164]	; 0xffffff5c
   22078:	ldr	r3, [fp, #-168]	; 0xffffff58
   2207c:	cmp	r2, r3
   22080:	beq	229a4 <_start@@Base+0xe3ac>
   22084:	ldrb	r3, [fp, #-133]	; 0xffffff7b
   22088:	mov	r1, r3
   2208c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22090:	bl	14710 <_start@@Base+0x118>
   22094:	sub	r3, fp, #52	; 0x34
   22098:	ldr	r2, [fp, #-168]	; 0xffffff58
   2209c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   220a0:	ldr	r0, [fp, #-160]	; 0xffffff60
   220a4:	bl	1548c <_start@@Base+0xe94>
   220a8:	str	r0, [fp, #-164]	; 0xffffff5c
   220ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   220b0:	cmp	r3, #0
   220b4:	bne	21fdc <_start@@Base+0xd9e4>
   220b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   220bc:	ldr	r3, [r3]
   220c0:	mov	r0, r3
   220c4:	bl	30f80 <flatcc_builder_end_vector@@Base>
   220c8:	mov	r3, r0
   220cc:	str	r3, [fp, #-56]	; 0xffffffc8
   220d0:	b	2213c <_start@@Base+0xdb44>
   220d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   220d8:	ldr	r0, [r3]
   220dc:	mov	r3, #0
   220e0:	mov	r2, #0
   220e4:	mov	r1, #0
   220e8:	bl	2ee20 <flatcc_builder_start_buffer@@Base>
   220ec:	mov	r3, r0
   220f0:	cmp	r3, #0
   220f4:	bne	229ac <_start@@Base+0xe3b4>
   220f8:	sub	r3, fp, #56	; 0x38
   220fc:	ldr	r2, [fp, #-168]	; 0xffffff58
   22100:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22104:	ldr	r0, [fp, #-160]	; 0xffffff60
   22108:	bl	1ed10 <_start@@Base+0xa718>
   2210c:	str	r0, [fp, #-164]	; 0xffffff5c
   22110:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22114:	cmp	r3, #0
   22118:	beq	229b4 <_start@@Base+0xe3bc>
   2211c:	ldr	r3, [fp, #-160]	; 0xffffff60
   22120:	ldr	r2, [r3]
   22124:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22128:	mov	r1, r3
   2212c:	mov	r0, r2
   22130:	bl	2ef90 <flatcc_builder_end_buffer@@Base>
   22134:	mov	r3, r0
   22138:	str	r3, [fp, #-56]	; 0xffffffc8
   2213c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22140:	cmp	r3, #0
   22144:	beq	229bc <_start@@Base+0xe3c4>
   22148:	ldr	r3, [fp, #-160]	; 0xffffff60
   2214c:	ldr	r3, [r3]
   22150:	mov	r1, #13
   22154:	mov	r0, r3
   22158:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   2215c:	str	r0, [fp, #-44]	; 0xffffffd4
   22160:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22164:	cmp	r3, #0
   22168:	beq	229bc <_start@@Base+0xe3c4>
   2216c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22170:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22174:	str	r2, [r3]
   22178:	b	226b8 <_start@@Base+0xe0c0>
   2217c:	ldr	r2, [fp, #-168]	; 0xffffff58
   22180:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22184:	ldr	r0, [fp, #-160]	; 0xffffff60
   22188:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2218c:	str	r0, [fp, #-164]	; 0xffffff5c
   22190:	b	226b8 <_start@@Base+0xe0c0>
   22194:	ldr	r2, [fp, #-168]	; 0xffffff58
   22198:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2219c:	ldr	r0, [fp, #-160]	; 0xffffff60
   221a0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   221a4:	str	r0, [fp, #-164]	; 0xffffff5c
   221a8:	b	226b8 <_start@@Base+0xe0c0>
   221ac:	ldr	r2, [fp, #-168]	; 0xffffff58
   221b0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   221b4:	ldr	r0, [fp, #-160]	; 0xffffff60
   221b8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   221bc:	str	r0, [fp, #-164]	; 0xffffff5c
   221c0:	b	226b8 <_start@@Base+0xe0c0>
   221c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   221c8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   221cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   221d0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   221d4:	str	r0, [fp, #-164]	; 0xffffff5c
   221d8:	b	226b8 <_start@@Base+0xe0c0>
   221dc:	nop	{0}
   221e0:	svcvs	0x00725f6e
   221e4:			; <UNDEFINED> instruction: 0x76656374
   221e8:	mcrvs	3, 3, r7, cr5, cr4, {3}
   221ec:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   221f0:	cmnvs	r4, r5, ror r2
   221f4:	strbvs	r6, [r4, #-1644]!	; 0xfffff994
   221f8:	andeq	r0, r0, r0
   221fc:			; <UNDEFINED> instruction: 0x66666572
   22200:			; <UNDEFINED> instruction: 0x000432b8
   22204:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22208:	add	r3, pc, #784	; 0x310
   2220c:	ldrd	r2, [r3]
   22210:	cmp	r1, r3
   22214:	cmpeq	r0, r2
   22218:	bne	226a4 <_start@@Base+0xe0ac>
   2221c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22220:	add	r3, r3, #8
   22224:	str	r3, [fp, #-164]	; 0xffffff5c
   22228:	ldr	r1, [fp, #-168]	; 0xffffff58
   2222c:	ldr	r0, [fp, #-164]	; 0xffffff5c
   22230:	bl	14ffc <_start@@Base+0xa04>
   22234:	strd	r0, [fp, #-36]	; 0xffffffdc
   22238:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2223c:	add	r3, pc, #740	; 0x2e4
   22240:	ldrd	r2, [r3]
   22244:	cmp	r1, r3
   22248:	cmpeq	r0, r2
   2224c:	bne	22474 <_start@@Base+0xde7c>
   22250:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22254:	add	r3, r3, #8
   22258:	str	r3, [fp, #-164]	; 0xffffff5c
   2225c:	ldr	r1, [fp, #-168]	; 0xffffff58
   22260:	ldr	r0, [fp, #-164]	; 0xffffff5c
   22264:	bl	14ffc <_start@@Base+0xa04>
   22268:	strd	r0, [fp, #-36]	; 0xffffffdc
   2226c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22270:	mov	r2, #0
   22274:	mov	r3, #-16777216	; 0xff000000
   22278:	and	ip, r0, r2
   2227c:	str	ip, [fp, #-372]	; 0xfffffe8c
   22280:	and	r3, r1, r3
   22284:	str	r3, [fp, #-368]	; 0xfffffe90
   22288:	sub	r3, fp, #372	; 0x174
   2228c:	ldrd	r2, [r3]
   22290:	cmp	r3, #1929379840	; 0x73000000
   22294:	cmpeq	r2, #0
   22298:	bne	2245c <_start@@Base+0xde64>
   2229c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   222a0:	str	r3, [fp, #-40]	; 0xffffffd8
   222a4:	mov	r3, #1
   222a8:	ldr	r2, [fp, #-168]	; 0xffffff58
   222ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   222b0:	ldr	r0, [fp, #-160]	; 0xffffff60
   222b4:	bl	15600 <_start@@Base+0x1008>
   222b8:	str	r0, [fp, #-164]	; 0xffffff5c
   222bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   222c0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   222c4:	cmp	r2, r3
   222c8:	beq	22444 <_start@@Base+0xde4c>
   222cc:	ldr	r3, [fp, #-160]	; 0xffffff60
   222d0:	ldr	r0, [r3]
   222d4:	mvn	r3, #-536870912	; 0xe0000000
   222d8:	mov	r2, #8
   222dc:	mov	r1, #8
   222e0:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   222e4:	mov	r3, r0
   222e8:	cmp	r3, #0
   222ec:	bne	229c4 <_start@@Base+0xe3cc>
   222f0:	sub	r3, fp, #52	; 0x34
   222f4:	ldr	r2, [fp, #-168]	; 0xffffff58
   222f8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   222fc:	ldr	r0, [fp, #-160]	; 0xffffff60
   22300:	bl	15398 <_start@@Base+0xda0>
   22304:	str	r0, [fp, #-164]	; 0xffffff5c
   22308:	b	223e0 <_start@@Base+0xdde8>
   2230c:	mov	r2, #0
   22310:	mov	r3, #0
   22314:	strd	r2, [fp, #-148]	; 0xffffff6c
   22318:	ldr	r3, [fp, #-160]	; 0xffffff60
   2231c:	ldr	r3, [r3]
   22320:	mov	r1, #1
   22324:	mov	r0, r3
   22328:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   2232c:	str	r0, [fp, #-48]	; 0xffffffd0
   22330:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22334:	cmp	r3, #0
   22338:	beq	229cc <_start@@Base+0xe3d4>
   2233c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22340:	str	r3, [fp, #-40]	; 0xffffffd8
   22344:	sub	r3, fp, #148	; 0x94
   22348:	ldr	r2, [fp, #-168]	; 0xffffff58
   2234c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22350:	ldr	r0, [fp, #-160]	; 0xffffff60
   22354:	bl	3cbfc <flatcc_json_parser_double@@Base>
   22358:	str	r0, [fp, #-164]	; 0xffffff5c
   2235c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22360:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22364:	cmp	r2, r3
   22368:	bne	223b8 <_start@@Base+0xddc0>
   2236c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22370:	str	r3, [fp, #-40]	; 0xffffffd8
   22374:	sub	r3, fp, #148	; 0x94
   22378:	str	r3, [sp]
   2237c:	ldr	r3, [pc, #436]	; 22538 <_start@@Base+0xdf40>
   22380:	add	r3, pc, r3
   22384:	ldr	r2, [fp, #-168]	; 0xffffff58
   22388:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2238c:	ldr	r0, [fp, #-160]	; 0xffffff60
   22390:	bl	176a0 <_start@@Base+0x30a8>
   22394:	str	r0, [fp, #-164]	; 0xffffff5c
   22398:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2239c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   223a0:	cmp	r2, r3
   223a4:	beq	229d4 <_start@@Base+0xe3dc>
   223a8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   223ac:	ldr	r3, [fp, #-168]	; 0xffffff58
   223b0:	cmp	r2, r3
   223b4:	beq	229d4 <_start@@Base+0xe3dc>
   223b8:	vldr	d7, [fp, #-148]	; 0xffffff6c
   223bc:	vmov.f64	d0, d7
   223c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   223c4:	bl	14b08 <_start@@Base+0x510>
   223c8:	sub	r3, fp, #52	; 0x34
   223cc:	ldr	r2, [fp, #-168]	; 0xffffff58
   223d0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   223d4:	ldr	r0, [fp, #-160]	; 0xffffff60
   223d8:	bl	1548c <_start@@Base+0xe94>
   223dc:	str	r0, [fp, #-164]	; 0xffffff5c
   223e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   223e4:	cmp	r3, #0
   223e8:	bne	2230c <_start@@Base+0xdd14>
   223ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   223f0:	ldr	r3, [r3]
   223f4:	mov	r0, r3
   223f8:	bl	30f80 <flatcc_builder_end_vector@@Base>
   223fc:	mov	r3, r0
   22400:	str	r3, [fp, #-56]	; 0xffffffc8
   22404:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22408:	cmp	r3, #0
   2240c:	beq	229dc <_start@@Base+0xe3e4>
   22410:	ldr	r3, [fp, #-160]	; 0xffffff60
   22414:	ldr	r3, [r3]
   22418:	mov	r1, #33	; 0x21
   2241c:	mov	r0, r3
   22420:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   22424:	str	r0, [fp, #-44]	; 0xffffffd4
   22428:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2242c:	cmp	r3, #0
   22430:	beq	229dc <_start@@Base+0xe3e4>
   22434:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22438:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2243c:	str	r2, [r3]
   22440:	b	226b8 <_start@@Base+0xe0c0>
   22444:	ldr	r2, [fp, #-168]	; 0xffffff58
   22448:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2244c:	ldr	r0, [fp, #-160]	; 0xffffff60
   22450:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   22454:	str	r0, [fp, #-164]	; 0xffffff5c
   22458:	b	226b8 <_start@@Base+0xe0c0>
   2245c:	ldr	r2, [fp, #-168]	; 0xffffff58
   22460:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22464:	ldr	r0, [fp, #-160]	; 0xffffff60
   22468:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2246c:	str	r0, [fp, #-164]	; 0xffffff5c
   22470:	b	226b8 <_start@@Base+0xe0c0>
   22474:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22478:	mvn	r2, #255	; 0xff
   2247c:	mvn	r3, #0
   22480:	and	ip, r0, r2
   22484:	str	ip, [fp, #-380]	; 0xfffffe84
   22488:	and	r3, r1, r3
   2248c:	str	r3, [fp, #-376]	; 0xfffffe88
   22490:	add	r3, pc, #152	; 0x98
   22494:	ldrd	r2, [r3]
   22498:	sub	r1, fp, #380	; 0x17c
   2249c:	ldrd	r0, [r1]
   224a0:	cmp	r1, r3
   224a4:	cmpeq	r0, r2
   224a8:	bne	2268c <_start@@Base+0xe094>
   224ac:	ldr	r3, [fp, #-164]	; 0xffffff5c
   224b0:	str	r3, [fp, #-40]	; 0xffffffd8
   224b4:	mov	r3, #7
   224b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   224bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   224c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   224c4:	bl	15600 <_start@@Base+0x1008>
   224c8:	str	r0, [fp, #-164]	; 0xffffff5c
   224cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   224d0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   224d4:	cmp	r2, r3
   224d8:	beq	22674 <_start@@Base+0xe07c>
   224dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   224e0:	ldr	r0, [r3]
   224e4:	mvn	r3, #-536870912	; 0xe0000000
   224e8:	mov	r2, #8
   224ec:	mov	r1, #8
   224f0:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   224f4:	mov	r3, r0
   224f8:	cmp	r3, #0
   224fc:	bne	229e4 <_start@@Base+0xe3ec>
   22500:	sub	r3, fp, #52	; 0x34
   22504:	ldr	r2, [fp, #-168]	; 0xffffff58
   22508:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2250c:	ldr	r0, [fp, #-160]	; 0xffffff60
   22510:	bl	15398 <_start@@Base+0xda0>
   22514:	str	r0, [fp, #-164]	; 0xffffff5c
   22518:	b	22610 <_start@@Base+0xe018>
   2251c:	nop	{0}
   22520:	svcvs	0x00725f6f
   22524:			; <UNDEFINED> instruction: 0x76656374
   22528:	strbvc	r6, [r2, #-3173]!	; 0xfffff39b
   2252c:	ldrbvs	r6, [pc], -pc, ror #8
   22530:	cdpvs	3, 6, cr7, cr7, cr0, {0}
   22534:	ldrbvs	r6, [pc], -pc, ror #24
   22538:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   2253c:	andeq	r2, r4, r8, ror #26
   22540:	mov	r2, #0
   22544:	mov	r3, #0
   22548:	strd	r2, [fp, #-156]	; 0xffffff64
   2254c:	ldr	r3, [fp, #-160]	; 0xffffff60
   22550:	ldr	r3, [r3]
   22554:	mov	r1, #1
   22558:	mov	r0, r3
   2255c:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   22560:	str	r0, [fp, #-48]	; 0xffffffd0
   22564:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22568:	cmp	r3, #0
   2256c:	beq	229ec <_start@@Base+0xe3f4>
   22570:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22574:	str	r3, [fp, #-40]	; 0xffffffd8
   22578:	sub	r3, fp, #156	; 0x9c
   2257c:	ldr	r2, [fp, #-168]	; 0xffffff58
   22580:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22584:	ldr	r0, [fp, #-160]	; 0xffffff60
   22588:	bl	161c8 <_start@@Base+0x1bd0>
   2258c:	str	r0, [fp, #-164]	; 0xffffff5c
   22590:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22594:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22598:	cmp	r2, r3
   2259c:	bne	225ec <_start@@Base+0xdff4>
   225a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   225a4:	str	r3, [fp, #-40]	; 0xffffffd8
   225a8:	sub	r3, fp, #156	; 0x9c
   225ac:	str	r3, [sp]
   225b0:	ldr	r3, [pc, #-124]	; 2253c <_start@@Base+0xdf44>
   225b4:	add	r3, pc, r3
   225b8:	ldr	r2, [fp, #-168]	; 0xffffff58
   225bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   225c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   225c4:	bl	16cd8 <_start@@Base+0x26e0>
   225c8:	str	r0, [fp, #-164]	; 0xffffff5c
   225cc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   225d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225d4:	cmp	r2, r3
   225d8:	beq	229f4 <_start@@Base+0xe3fc>
   225dc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   225e0:	ldr	r3, [fp, #-168]	; 0xffffff58
   225e4:	cmp	r2, r3
   225e8:	beq	229f4 <_start@@Base+0xe3fc>
   225ec:	ldrd	r2, [fp, #-156]	; 0xffffff64
   225f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   225f4:	bl	14a14 <_start@@Base+0x41c>
   225f8:	sub	r3, fp, #52	; 0x34
   225fc:	ldr	r2, [fp, #-168]	; 0xffffff58
   22600:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22604:	ldr	r0, [fp, #-160]	; 0xffffff60
   22608:	bl	1548c <_start@@Base+0xe94>
   2260c:	str	r0, [fp, #-164]	; 0xffffff5c
   22610:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22614:	cmp	r3, #0
   22618:	bne	22540 <_start@@Base+0xdf48>
   2261c:	ldr	r3, [fp, #-160]	; 0xffffff60
   22620:	ldr	r3, [r3]
   22624:	mov	r0, r3
   22628:	bl	30f80 <flatcc_builder_end_vector@@Base>
   2262c:	mov	r3, r0
   22630:	str	r3, [fp, #-56]	; 0xffffffc8
   22634:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22638:	cmp	r3, #0
   2263c:	beq	229fc <_start@@Base+0xe404>
   22640:	ldr	r3, [fp, #-160]	; 0xffffff60
   22644:	ldr	r3, [r3]
   22648:	mov	r1, #32
   2264c:	mov	r0, r3
   22650:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   22654:	str	r0, [fp, #-44]	; 0xffffffd4
   22658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2265c:	cmp	r3, #0
   22660:	beq	229fc <_start@@Base+0xe404>
   22664:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22668:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2266c:	str	r2, [r3]
   22670:	b	226b8 <_start@@Base+0xe0c0>
   22674:	ldr	r2, [fp, #-168]	; 0xffffff58
   22678:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2267c:	ldr	r0, [fp, #-160]	; 0xffffff60
   22680:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   22684:	str	r0, [fp, #-164]	; 0xffffff5c
   22688:	b	226b8 <_start@@Base+0xe0c0>
   2268c:	ldr	r2, [fp, #-168]	; 0xffffff58
   22690:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22694:	ldr	r0, [fp, #-160]	; 0xffffff60
   22698:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2269c:	str	r0, [fp, #-164]	; 0xffffff5c
   226a0:	b	226b8 <_start@@Base+0xe0c0>
   226a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   226a8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   226ac:	ldr	r0, [fp, #-160]	; 0xffffff60
   226b0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   226b4:	str	r0, [fp, #-164]	; 0xffffff5c
   226b8:	sub	r3, fp, #52	; 0x34
   226bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   226c0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   226c4:	ldr	r0, [fp, #-160]	; 0xffffff60
   226c8:	bl	15224 <_start@@Base+0xc2c>
   226cc:	str	r0, [fp, #-164]	; 0xffffff5c
   226d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   226d4:	cmp	r3, #0
   226d8:	bne	1edb0 <_start@@Base+0xa7b8>
   226dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   226e0:	ldr	r3, [r3, #20]
   226e4:	cmp	r3, #0
   226e8:	bne	22a04 <_start@@Base+0xe40c>
   226ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   226f0:	ldr	r3, [r3]
   226f4:	mov	r1, #3
   226f8:	mov	r0, r3
   226fc:	bl	307f8 <flatcc_builder_check_required_field@@Base>
   22700:	mov	r3, r0
   22704:	cmp	r3, #0
   22708:	bne	22728 <_start@@Base+0xe130>
   2270c:	mov	r3, #29
   22710:	ldr	r2, [fp, #-168]	; 0xffffff58
   22714:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22718:	ldr	r0, [fp, #-160]	; 0xffffff60
   2271c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   22720:	str	r0, [fp, #-164]	; 0xffffff5c
   22724:	b	22a10 <_start@@Base+0xe418>
   22728:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2272c:	ldr	r2, [fp, #-168]	; 0xffffff58
   22730:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22734:	ldr	r0, [fp, #-160]	; 0xffffff60
   22738:	bl	3dd04 <flatcc_json_parser_finalize_unions@@Base>
   2273c:	str	r0, [fp, #-164]	; 0xffffff5c
   22740:	ldr	r3, [fp, #-160]	; 0xffffff60
   22744:	ldr	r3, [r3]
   22748:	mov	r0, r3
   2274c:	bl	30b0c <flatcc_builder_end_table@@Base>
   22750:	mov	r2, r0
   22754:	ldr	r3, [fp, #-172]	; 0xffffff54
   22758:	str	r2, [r3]
   2275c:	ldr	r3, [fp, #-172]	; 0xffffff54
   22760:	ldr	r3, [r3]
   22764:	cmp	r3, #0
   22768:	beq	22a0c <_start@@Base+0xe414>
   2276c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   22770:	b	22a28 <_start@@Base+0xe430>
   22774:	nop	{0}
   22778:	b	22a10 <_start@@Base+0xe418>
   2277c:	nop	{0}
   22780:	b	22a10 <_start@@Base+0xe418>
   22784:	nop	{0}
   22788:	b	22a10 <_start@@Base+0xe418>
   2278c:	nop	{0}
   22790:	b	22a10 <_start@@Base+0xe418>
   22794:	nop	{0}
   22798:	b	22a10 <_start@@Base+0xe418>
   2279c:	nop	{0}
   227a0:	b	22a10 <_start@@Base+0xe418>
   227a4:	nop	{0}
   227a8:	b	22a10 <_start@@Base+0xe418>
   227ac:	nop	{0}
   227b0:	b	22a10 <_start@@Base+0xe418>
   227b4:	nop	{0}
   227b8:	b	22a10 <_start@@Base+0xe418>
   227bc:	nop	{0}
   227c0:	b	22a10 <_start@@Base+0xe418>
   227c4:	nop	{0}
   227c8:	b	22a10 <_start@@Base+0xe418>
   227cc:	nop	{0}
   227d0:	b	22a10 <_start@@Base+0xe418>
   227d4:	nop	{0}
   227d8:	b	22a10 <_start@@Base+0xe418>
   227dc:	nop	{0}
   227e0:	b	22a10 <_start@@Base+0xe418>
   227e4:	nop	{0}
   227e8:	b	22a10 <_start@@Base+0xe418>
   227ec:	nop	{0}
   227f0:	b	22a10 <_start@@Base+0xe418>
   227f4:	nop	{0}
   227f8:	b	22a10 <_start@@Base+0xe418>
   227fc:	nop	{0}
   22800:	b	22a10 <_start@@Base+0xe418>
   22804:	nop	{0}
   22808:	b	22a10 <_start@@Base+0xe418>
   2280c:	nop	{0}
   22810:	b	22a10 <_start@@Base+0xe418>
   22814:	nop	{0}
   22818:	b	22a10 <_start@@Base+0xe418>
   2281c:	nop	{0}
   22820:	b	22a10 <_start@@Base+0xe418>
   22824:	nop	{0}
   22828:	b	22a10 <_start@@Base+0xe418>
   2282c:	nop	{0}
   22830:	b	22a10 <_start@@Base+0xe418>
   22834:	nop	{0}
   22838:	b	22a10 <_start@@Base+0xe418>
   2283c:	nop	{0}
   22840:	b	22a10 <_start@@Base+0xe418>
   22844:	nop	{0}
   22848:	b	22a10 <_start@@Base+0xe418>
   2284c:	nop	{0}
   22850:	b	22a10 <_start@@Base+0xe418>
   22854:	nop	{0}
   22858:	b	22a10 <_start@@Base+0xe418>
   2285c:	nop	{0}
   22860:	b	22a10 <_start@@Base+0xe418>
   22864:	nop	{0}
   22868:	b	22a10 <_start@@Base+0xe418>
   2286c:	nop	{0}
   22870:	b	22a10 <_start@@Base+0xe418>
   22874:	nop	{0}
   22878:	b	22a10 <_start@@Base+0xe418>
   2287c:	nop	{0}
   22880:	b	22a10 <_start@@Base+0xe418>
   22884:	nop	{0}
   22888:	b	22a10 <_start@@Base+0xe418>
   2288c:	nop	{0}
   22890:	b	22a10 <_start@@Base+0xe418>
   22894:	nop	{0}
   22898:	b	22a10 <_start@@Base+0xe418>
   2289c:	nop	{0}
   228a0:	b	22a10 <_start@@Base+0xe418>
   228a4:	nop	{0}
   228a8:	b	22a10 <_start@@Base+0xe418>
   228ac:	nop	{0}
   228b0:	b	22a10 <_start@@Base+0xe418>
   228b4:	nop	{0}
   228b8:	b	22a10 <_start@@Base+0xe418>
   228bc:	nop	{0}
   228c0:	b	22a10 <_start@@Base+0xe418>
   228c4:	nop	{0}
   228c8:	b	22a10 <_start@@Base+0xe418>
   228cc:	nop	{0}
   228d0:	b	22a10 <_start@@Base+0xe418>
   228d4:	nop	{0}
   228d8:	b	22a10 <_start@@Base+0xe418>
   228dc:	nop	{0}
   228e0:	b	22a10 <_start@@Base+0xe418>
   228e4:	nop	{0}
   228e8:	b	22a10 <_start@@Base+0xe418>
   228ec:	nop	{0}
   228f0:	b	22a10 <_start@@Base+0xe418>
   228f4:	nop	{0}
   228f8:	b	22a10 <_start@@Base+0xe418>
   228fc:	nop	{0}
   22900:	b	22a10 <_start@@Base+0xe418>
   22904:	nop	{0}
   22908:	b	22a10 <_start@@Base+0xe418>
   2290c:	nop	{0}
   22910:	b	22a10 <_start@@Base+0xe418>
   22914:	nop	{0}
   22918:	b	22a10 <_start@@Base+0xe418>
   2291c:	nop	{0}
   22920:	b	22a10 <_start@@Base+0xe418>
   22924:	nop	{0}
   22928:	b	22a10 <_start@@Base+0xe418>
   2292c:	nop	{0}
   22930:	b	22a10 <_start@@Base+0xe418>
   22934:	nop	{0}
   22938:	b	22a10 <_start@@Base+0xe418>
   2293c:	nop	{0}
   22940:	b	22a10 <_start@@Base+0xe418>
   22944:	nop	{0}
   22948:	b	22a10 <_start@@Base+0xe418>
   2294c:	nop	{0}
   22950:	b	22a10 <_start@@Base+0xe418>
   22954:	nop	{0}
   22958:	b	22a10 <_start@@Base+0xe418>
   2295c:	nop	{0}
   22960:	b	22a10 <_start@@Base+0xe418>
   22964:	nop	{0}
   22968:	b	22a10 <_start@@Base+0xe418>
   2296c:	nop	{0}
   22970:	b	22a10 <_start@@Base+0xe418>
   22974:	nop	{0}
   22978:	b	22a10 <_start@@Base+0xe418>
   2297c:	nop	{0}
   22980:	b	22a10 <_start@@Base+0xe418>
   22984:	nop	{0}
   22988:	b	22a10 <_start@@Base+0xe418>
   2298c:	nop	{0}
   22990:	b	22a10 <_start@@Base+0xe418>
   22994:	nop	{0}
   22998:	b	22a10 <_start@@Base+0xe418>
   2299c:	nop	{0}
   229a0:	b	22a10 <_start@@Base+0xe418>
   229a4:	nop	{0}
   229a8:	b	22a10 <_start@@Base+0xe418>
   229ac:	nop	{0}
   229b0:	b	22a10 <_start@@Base+0xe418>
   229b4:	nop	{0}
   229b8:	b	22a10 <_start@@Base+0xe418>
   229bc:	nop	{0}
   229c0:	b	22a10 <_start@@Base+0xe418>
   229c4:	nop	{0}
   229c8:	b	22a10 <_start@@Base+0xe418>
   229cc:	nop	{0}
   229d0:	b	22a10 <_start@@Base+0xe418>
   229d4:	nop	{0}
   229d8:	b	22a10 <_start@@Base+0xe418>
   229dc:	nop	{0}
   229e0:	b	22a10 <_start@@Base+0xe418>
   229e4:	nop	{0}
   229e8:	b	22a10 <_start@@Base+0xe418>
   229ec:	nop	{0}
   229f0:	b	22a10 <_start@@Base+0xe418>
   229f4:	nop	{0}
   229f8:	b	22a10 <_start@@Base+0xe418>
   229fc:	nop	{0}
   22a00:	b	22a10 <_start@@Base+0xe418>
   22a04:	nop	{0}
   22a08:	b	22a10 <_start@@Base+0xe418>
   22a0c:	nop	{0}
   22a10:	mov	r3, #33	; 0x21
   22a14:	ldr	r2, [fp, #-168]	; 0xffffff58
   22a18:	ldr	r1, [fp, #-164]	; 0xffffff5c
   22a1c:	ldr	r0, [fp, #-160]	; 0xffffff60
   22a20:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   22a24:	mov	r3, r0
   22a28:	mov	r0, r3
   22a2c:	sub	sp, fp, #28
   22a30:	ldrd	r4, [sp]
   22a34:	ldrd	r6, [sp, #8]
   22a38:	ldrd	r8, [sp, #16]
   22a3c:	ldr	fp, [sp, #24]
   22a40:	add	sp, sp, #28
   22a44:	pop	{pc}		; (ldr pc, [sp], #4)
   22a48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   22a4c:	strd	r6, [sp, #8]
   22a50:	strd	r8, [sp, #16]
   22a54:	str	fp, [sp, #24]
   22a58:	str	lr, [sp, #28]
   22a5c:	add	fp, sp, #28
   22a60:	sub	sp, sp, #200	; 0xc8
   22a64:	str	r0, [fp, #-136]	; 0xffffff78
   22a68:	str	r1, [fp, #-140]	; 0xffffff74
   22a6c:	str	r2, [fp, #-144]	; 0xffffff70
   22a70:	str	r3, [fp, #-148]	; 0xffffff6c
   22a74:	ldr	r2, [fp, #-148]	; 0xffffff6c
   22a78:	mov	r3, #0
   22a7c:	str	r3, [r2]
   22a80:	ldr	r3, [fp, #-136]	; 0xffffff78
   22a84:	ldr	r3, [r3]
   22a88:	mov	r1, #12
   22a8c:	mov	r0, r3
   22a90:	bl	2ff58 <flatcc_builder_start_table@@Base>
   22a94:	mov	r3, r0
   22a98:	cmp	r3, #0
   22a9c:	bne	23ecc <_start@@Base+0xf8d4>
   22aa0:	sub	r3, fp, #56	; 0x38
   22aa4:	ldr	r2, [fp, #-144]	; 0xffffff70
   22aa8:	ldr	r1, [fp, #-140]	; 0xffffff74
   22aac:	ldr	r0, [fp, #-136]	; 0xffffff78
   22ab0:	bl	15130 <_start@@Base+0xb38>
   22ab4:	str	r0, [fp, #-140]	; 0xffffff74
   22ab8:	b	23e7c <_start@@Base+0xf884>
   22abc:	ldr	r2, [fp, #-144]	; 0xffffff70
   22ac0:	ldr	r1, [fp, #-140]	; 0xffffff74
   22ac4:	ldr	r0, [fp, #-136]	; 0xffffff78
   22ac8:	bl	14cf4 <_start@@Base+0x6fc>
   22acc:	str	r0, [fp, #-140]	; 0xffffff74
   22ad0:	ldr	r1, [fp, #-144]	; 0xffffff70
   22ad4:	ldr	r0, [fp, #-140]	; 0xffffff74
   22ad8:	bl	14ffc <_start@@Base+0xa04>
   22adc:	strd	r0, [fp, #-36]	; 0xffffffdc
   22ae0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22ae4:	mvn	r2, #0
   22ae8:	movw	r3, #65535	; 0xffff
   22aec:	movt	r3, #26935	; 0x6937
   22af0:	cmp	r1, r3
   22af4:	cmpeq	r0, r2
   22af8:	bhi	2326c <_start@@Base+0xec74>
   22afc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22b00:	add	r3, pc, #720	; 0x2d0
   22b04:	ldrd	r2, [r3]
   22b08:	cmp	r1, r3
   22b0c:	cmpeq	r0, r2
   22b10:	bhi	22df8 <_start@@Base+0xe800>
   22b14:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22b18:	mov	r2, #0
   22b1c:	mvn	r3, #255	; 0xff
   22b20:	and	r4, r0, r2
   22b24:	and	r5, r1, r3
   22b28:	add	r3, pc, #688	; 0x2b0
   22b2c:	ldrd	r2, [r3]
   22b30:	cmp	r5, r3
   22b34:	cmpeq	r4, r2
   22b38:	bne	22c6c <_start@@Base+0xe674>
   22b3c:	ldr	r3, [fp, #-140]	; 0xffffff74
   22b40:	str	r3, [fp, #-40]	; 0xffffffd8
   22b44:	mov	r3, #3
   22b48:	ldr	r2, [fp, #-144]	; 0xffffff70
   22b4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22b50:	ldr	r0, [fp, #-136]	; 0xffffff78
   22b54:	bl	15600 <_start@@Base+0x1008>
   22b58:	str	r0, [fp, #-140]	; 0xffffff74
   22b5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22b60:	ldr	r3, [fp, #-140]	; 0xffffff74
   22b64:	cmp	r2, r3
   22b68:	beq	22c54 <_start@@Base+0xe65c>
   22b6c:	mov	r2, #0
   22b70:	mov	r3, #0
   22b74:	strd	r2, [fp, #-68]	; 0xffffffbc
   22b78:	ldr	r3, [fp, #-140]	; 0xffffff74
   22b7c:	str	r3, [fp, #-40]	; 0xffffffd8
   22b80:	sub	r3, fp, #68	; 0x44
   22b84:	ldr	r2, [fp, #-144]	; 0xffffff70
   22b88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22b8c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22b90:	bl	3cbfc <flatcc_json_parser_double@@Base>
   22b94:	str	r0, [fp, #-140]	; 0xffffff74
   22b98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22b9c:	ldr	r3, [fp, #-140]	; 0xffffff74
   22ba0:	cmp	r2, r3
   22ba4:	bne	22bf4 <_start@@Base+0xe5fc>
   22ba8:	ldr	r3, [fp, #-140]	; 0xffffff74
   22bac:	str	r3, [fp, #-40]	; 0xffffffd8
   22bb0:	sub	r3, fp, #68	; 0x44
   22bb4:	str	r3, [sp]
   22bb8:	ldr	r3, [pc, #560]	; 22df0 <_start@@Base+0xe7f8>
   22bbc:	add	r3, pc, r3
   22bc0:	ldr	r2, [fp, #-144]	; 0xffffff70
   22bc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22bc8:	ldr	r0, [fp, #-136]	; 0xffffff78
   22bcc:	bl	176a0 <_start@@Base+0x30a8>
   22bd0:	str	r0, [fp, #-140]	; 0xffffff74
   22bd4:	ldr	r2, [fp, #-140]	; 0xffffff74
   22bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22bdc:	cmp	r2, r3
   22be0:	beq	23ed4 <_start@@Base+0xf8dc>
   22be4:	ldr	r2, [fp, #-140]	; 0xffffff74
   22be8:	ldr	r3, [fp, #-144]	; 0xffffff70
   22bec:	cmp	r2, r3
   22bf0:	beq	23ed4 <_start@@Base+0xf8dc>
   22bf4:	vldr	d7, [fp, #-68]	; 0xffffffbc
   22bf8:	vcmp.f64	d7, #0.0
   22bfc:	vmrs	APSR_nzcv, fpscr
   22c00:	bne	22c18 <_start@@Base+0xe620>
   22c04:	ldr	r3, [fp, #-136]	; 0xffffff78
   22c08:	ldr	r3, [r3, #8]
   22c0c:	and	r3, r3, #2
   22c10:	cmp	r3, #0
   22c14:	beq	23e64 <_start@@Base+0xf86c>
   22c18:	ldr	r3, [fp, #-136]	; 0xffffff78
   22c1c:	ldr	r0, [r3]
   22c20:	mov	r3, #8
   22c24:	mov	r2, #8
   22c28:	mov	r1, #9
   22c2c:	bl	3255c <flatcc_builder_table_add@@Base>
   22c30:	str	r0, [fp, #-44]	; 0xffffffd4
   22c34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22c38:	cmp	r3, #0
   22c3c:	beq	23edc <_start@@Base+0xf8e4>
   22c40:	vldr	d7, [fp, #-68]	; 0xffffffbc
   22c44:	vmov.f64	d0, d7
   22c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22c4c:	bl	14b08 <_start@@Base+0x510>
   22c50:	b	23e64 <_start@@Base+0xf86c>
   22c54:	ldr	r2, [fp, #-144]	; 0xffffff70
   22c58:	ldr	r1, [fp, #-140]	; 0xffffff74
   22c5c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22c60:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   22c64:	str	r0, [fp, #-140]	; 0xffffff74
   22c68:	b	23e64 <_start@@Base+0xf86c>
   22c6c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22c70:	mov	r2, #0
   22c74:	mvn	r3, #255	; 0xff
   22c78:	and	r6, r0, r2
   22c7c:	and	r7, r1, r3
   22c80:	add	r3, pc, #352	; 0x160
   22c84:	ldrd	r2, [r3]
   22c88:	cmp	r7, r3
   22c8c:	cmpeq	r6, r2
   22c90:	bne	22dc0 <_start@@Base+0xe7c8>
   22c94:	ldr	r3, [fp, #-140]	; 0xffffff74
   22c98:	str	r3, [fp, #-40]	; 0xffffffd8
   22c9c:	mov	r3, #3
   22ca0:	ldr	r2, [fp, #-144]	; 0xffffff70
   22ca4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22ca8:	ldr	r0, [fp, #-136]	; 0xffffff78
   22cac:	bl	15600 <_start@@Base+0x1008>
   22cb0:	str	r0, [fp, #-140]	; 0xffffff74
   22cb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22cb8:	ldr	r3, [fp, #-140]	; 0xffffff74
   22cbc:	cmp	r2, r3
   22cc0:	beq	22da8 <_start@@Base+0xe7b0>
   22cc4:	mov	r3, #0
   22cc8:	str	r3, [fp, #-72]	; 0xffffffb8
   22ccc:	ldr	r3, [fp, #-140]	; 0xffffff74
   22cd0:	str	r3, [fp, #-40]	; 0xffffffd8
   22cd4:	sub	r3, fp, #72	; 0x48
   22cd8:	ldr	r2, [fp, #-144]	; 0xffffff70
   22cdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22ce0:	ldr	r0, [fp, #-136]	; 0xffffff78
   22ce4:	bl	3cda8 <flatcc_json_parser_float@@Base>
   22ce8:	str	r0, [fp, #-140]	; 0xffffff74
   22cec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22cf0:	ldr	r3, [fp, #-140]	; 0xffffff74
   22cf4:	cmp	r2, r3
   22cf8:	bne	22d48 <_start@@Base+0xe750>
   22cfc:	ldr	r3, [fp, #-140]	; 0xffffff74
   22d00:	str	r3, [fp, #-40]	; 0xffffffd8
   22d04:	sub	r3, fp, #72	; 0x48
   22d08:	str	r3, [sp]
   22d0c:	ldr	r3, [pc, #224]	; 22df4 <_start@@Base+0xe7fc>
   22d10:	add	r3, pc, r3
   22d14:	ldr	r2, [fp, #-144]	; 0xffffff70
   22d18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22d1c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22d20:	bl	17508 <_start@@Base+0x2f10>
   22d24:	str	r0, [fp, #-140]	; 0xffffff74
   22d28:	ldr	r2, [fp, #-140]	; 0xffffff74
   22d2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22d30:	cmp	r2, r3
   22d34:	beq	23ee4 <_start@@Base+0xf8ec>
   22d38:	ldr	r2, [fp, #-140]	; 0xffffff74
   22d3c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22d40:	cmp	r2, r3
   22d44:	beq	23ee4 <_start@@Base+0xf8ec>
   22d48:	vldr	s15, [fp, #-72]	; 0xffffffb8
   22d4c:	vcmp.f32	s15, #0.0
   22d50:	vmrs	APSR_nzcv, fpscr
   22d54:	bne	22d6c <_start@@Base+0xe774>
   22d58:	ldr	r3, [fp, #-136]	; 0xffffff78
   22d5c:	ldr	r3, [r3, #8]
   22d60:	and	r3, r3, #2
   22d64:	cmp	r3, #0
   22d68:	beq	23e64 <_start@@Base+0xf86c>
   22d6c:	ldr	r3, [fp, #-136]	; 0xffffff78
   22d70:	ldr	r0, [r3]
   22d74:	mov	r3, #4
   22d78:	mov	r2, #4
   22d7c:	mov	r1, #8
   22d80:	bl	3255c <flatcc_builder_table_add@@Base>
   22d84:	str	r0, [fp, #-44]	; 0xffffffd4
   22d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22d8c:	cmp	r3, #0
   22d90:	beq	23eec <_start@@Base+0xf8f4>
   22d94:	vldr	s15, [fp, #-72]	; 0xffffffb8
   22d98:	vmov.f32	s0, s15
   22d9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22da0:	bl	14a90 <_start@@Base+0x498>
   22da4:	b	23e64 <_start@@Base+0xf86c>
   22da8:	ldr	r2, [fp, #-144]	; 0xffffff70
   22dac:	ldr	r1, [fp, #-140]	; 0xffffff74
   22db0:	ldr	r0, [fp, #-136]	; 0xffffff78
   22db4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   22db8:	str	r0, [fp, #-140]	; 0xffffff74
   22dbc:	b	23e64 <_start@@Base+0xf86c>
   22dc0:	ldr	r2, [fp, #-144]	; 0xffffff70
   22dc4:	ldr	r1, [fp, #-140]	; 0xffffff74
   22dc8:	ldr	r0, [fp, #-136]	; 0xffffff78
   22dcc:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   22dd0:	str	r0, [fp, #-140]	; 0xffffff74
   22dd4:	b	23e64 <_start@@Base+0xf86c>
   22dd8:			; <UNDEFINED> instruction: 0xffffffff
   22ddc:	ldmdbvs	r1!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
   22de0:	andeq	r0, r0, r0
   22de4:	ldrtvs	r3, [r6], -r0, lsl #8
   22de8:	andeq	r0, r0, r0
   22dec:	ldrtvs	r3, [r3], -r0, lsl #4
   22df0:	andeq	r2, r4, ip, ror #14
   22df4:	andeq	r2, r4, r4, lsr #12
   22df8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22dfc:	add	r3, pc, #724	; 0x2d4
   22e00:	ldrd	r2, [r3]
   22e04:	cmp	r1, r3
   22e08:	cmpeq	r0, r2
   22e0c:	bhi	22f78 <_start@@Base+0xe980>
   22e10:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22e14:	mov	r2, #0
   22e18:	mvn	r3, #255	; 0xff
   22e1c:	and	r8, r0, r2
   22e20:	and	r9, r1, r3
   22e24:	add	r3, pc, #692	; 0x2b4
   22e28:	ldrd	r2, [r3]
   22e2c:	cmp	r9, r3
   22e30:	cmpeq	r8, r2
   22e34:	bne	22f60 <_start@@Base+0xe968>
   22e38:	ldr	r3, [fp, #-140]	; 0xffffff74
   22e3c:	str	r3, [fp, #-40]	; 0xffffffd8
   22e40:	mov	r3, #3
   22e44:	ldr	r2, [fp, #-144]	; 0xffffff70
   22e48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22e4c:	ldr	r0, [fp, #-136]	; 0xffffff78
   22e50:	bl	15600 <_start@@Base+0x1008>
   22e54:	str	r0, [fp, #-140]	; 0xffffff74
   22e58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22e5c:	ldr	r3, [fp, #-140]	; 0xffffff74
   22e60:	cmp	r2, r3
   22e64:	beq	22f48 <_start@@Base+0xe950>
   22e68:	mov	r3, #0
   22e6c:	strh	r3, [fp, #-74]	; 0xffffffb6
   22e70:	ldr	r3, [fp, #-140]	; 0xffffff74
   22e74:	str	r3, [fp, #-40]	; 0xffffffd8
   22e78:	sub	r3, fp, #74	; 0x4a
   22e7c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22e80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22e84:	ldr	r0, [fp, #-136]	; 0xffffff78
   22e88:	bl	16384 <_start@@Base+0x1d8c>
   22e8c:	str	r0, [fp, #-140]	; 0xffffff74
   22e90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22e94:	ldr	r3, [fp, #-140]	; 0xffffff74
   22e98:	cmp	r2, r3
   22e9c:	bne	22eec <_start@@Base+0xe8f4>
   22ea0:	ldr	r3, [fp, #-140]	; 0xffffff74
   22ea4:	str	r3, [fp, #-40]	; 0xffffffd8
   22ea8:	sub	r3, fp, #74	; 0x4a
   22eac:	str	r3, [sp]
   22eb0:	ldr	r3, [pc, #568]	; 230f0 <_start@@Base+0xeaf8>
   22eb4:	add	r3, pc, r3
   22eb8:	ldr	r2, [fp, #-144]	; 0xffffff70
   22ebc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22ec0:	ldr	r0, [fp, #-136]	; 0xffffff78
   22ec4:	bl	1701c <_start@@Base+0x2a24>
   22ec8:	str	r0, [fp, #-140]	; 0xffffff74
   22ecc:	ldr	r2, [fp, #-140]	; 0xffffff74
   22ed0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22ed4:	cmp	r2, r3
   22ed8:	beq	23ef4 <_start@@Base+0xf8fc>
   22edc:	ldr	r2, [fp, #-140]	; 0xffffff74
   22ee0:	ldr	r3, [fp, #-144]	; 0xffffff70
   22ee4:	cmp	r2, r3
   22ee8:	beq	23ef4 <_start@@Base+0xf8fc>
   22eec:	ldrsh	r3, [fp, #-74]	; 0xffffffb6
   22ef0:	cmp	r3, #0
   22ef4:	bne	22f0c <_start@@Base+0xe914>
   22ef8:	ldr	r3, [fp, #-136]	; 0xffffff78
   22efc:	ldr	r3, [r3, #8]
   22f00:	and	r3, r3, #2
   22f04:	cmp	r3, #0
   22f08:	beq	23e64 <_start@@Base+0xf86c>
   22f0c:	ldr	r3, [fp, #-136]	; 0xffffff78
   22f10:	ldr	r0, [r3]
   22f14:	mov	r3, #2
   22f18:	mov	r2, #2
   22f1c:	mov	r1, #2
   22f20:	bl	3255c <flatcc_builder_table_add@@Base>
   22f24:	str	r0, [fp, #-44]	; 0xffffffd4
   22f28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22f2c:	cmp	r3, #0
   22f30:	beq	23efc <_start@@Base+0xf904>
   22f34:	ldrsh	r3, [fp, #-74]	; 0xffffffb6
   22f38:	mov	r1, r3
   22f3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22f40:	bl	1493c <_start@@Base+0x344>
   22f44:	b	23e64 <_start@@Base+0xf86c>
   22f48:	ldr	r2, [fp, #-144]	; 0xffffff70
   22f4c:	ldr	r1, [fp, #-140]	; 0xffffff74
   22f50:	ldr	r0, [fp, #-136]	; 0xffffff78
   22f54:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   22f58:	str	r0, [fp, #-140]	; 0xffffff74
   22f5c:	b	23e64 <_start@@Base+0xf86c>
   22f60:	ldr	r2, [fp, #-144]	; 0xffffff70
   22f64:	ldr	r1, [fp, #-140]	; 0xffffff74
   22f68:	ldr	r0, [fp, #-136]	; 0xffffff78
   22f6c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   22f70:	str	r0, [fp, #-140]	; 0xffffff74
   22f74:	b	23e64 <_start@@Base+0xf86c>
   22f78:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   22f7c:	mov	r2, #0
   22f80:	mvn	r3, #255	; 0xff
   22f84:	and	ip, r0, r2
   22f88:	str	ip, [fp, #-156]	; 0xffffff64
   22f8c:	and	r3, r1, r3
   22f90:	str	r3, [fp, #-152]	; 0xffffff68
   22f94:	add	r3, pc, #332	; 0x14c
   22f98:	ldrd	r2, [r3]
   22f9c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   22fa0:	cmp	r1, r3
   22fa4:	cmpeq	r0, r2
   22fa8:	bne	230f8 <_start@@Base+0xeb00>
   22fac:	ldr	r3, [fp, #-140]	; 0xffffff74
   22fb0:	str	r3, [fp, #-40]	; 0xffffffd8
   22fb4:	mov	r3, #3
   22fb8:	ldr	r2, [fp, #-144]	; 0xffffff70
   22fbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22fc0:	ldr	r0, [fp, #-136]	; 0xffffff78
   22fc4:	bl	15600 <_start@@Base+0x1008>
   22fc8:	str	r0, [fp, #-140]	; 0xffffff74
   22fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22fd0:	ldr	r3, [fp, #-140]	; 0xffffff74
   22fd4:	cmp	r2, r3
   22fd8:	beq	230bc <_start@@Base+0xeac4>
   22fdc:	mov	r2, #0
   22fe0:	mov	r3, #0
   22fe4:	strd	r2, [fp, #-84]	; 0xffffffac
   22fe8:	ldr	r3, [fp, #-140]	; 0xffffff74
   22fec:	str	r3, [fp, #-40]	; 0xffffffd8
   22ff0:	sub	r3, fp, #84	; 0x54
   22ff4:	ldr	r2, [fp, #-144]	; 0xffffff70
   22ff8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22ffc:	ldr	r0, [fp, #-136]	; 0xffffff78
   23000:	bl	161c8 <_start@@Base+0x1bd0>
   23004:	str	r0, [fp, #-140]	; 0xffffff74
   23008:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2300c:	ldr	r3, [fp, #-140]	; 0xffffff74
   23010:	cmp	r2, r3
   23014:	bne	23064 <_start@@Base+0xea6c>
   23018:	ldr	r3, [fp, #-140]	; 0xffffff74
   2301c:	str	r3, [fp, #-40]	; 0xffffffd8
   23020:	sub	r3, fp, #84	; 0x54
   23024:	str	r3, [sp]
   23028:	ldr	r3, [pc, #196]	; 230f4 <_start@@Base+0xeafc>
   2302c:	add	r3, pc, r3
   23030:	ldr	r2, [fp, #-144]	; 0xffffff70
   23034:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23038:	ldr	r0, [fp, #-136]	; 0xffffff78
   2303c:	bl	16cd8 <_start@@Base+0x26e0>
   23040:	str	r0, [fp, #-140]	; 0xffffff74
   23044:	ldr	r2, [fp, #-140]	; 0xffffff74
   23048:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2304c:	cmp	r2, r3
   23050:	beq	23f04 <_start@@Base+0xf90c>
   23054:	ldr	r2, [fp, #-140]	; 0xffffff74
   23058:	ldr	r3, [fp, #-144]	; 0xffffff70
   2305c:	cmp	r2, r3
   23060:	beq	23f04 <_start@@Base+0xf90c>
   23064:	ldrd	r2, [fp, #-84]	; 0xffffffac
   23068:	orrs	r3, r2, r3
   2306c:	bne	23084 <_start@@Base+0xea8c>
   23070:	ldr	r3, [fp, #-136]	; 0xffffff78
   23074:	ldr	r3, [r3, #8]
   23078:	and	r3, r3, #2
   2307c:	cmp	r3, #0
   23080:	beq	23e64 <_start@@Base+0xf86c>
   23084:	ldr	r3, [fp, #-136]	; 0xffffff78
   23088:	ldr	r0, [r3]
   2308c:	mov	r3, #8
   23090:	mov	r2, #8
   23094:	mov	r1, #6
   23098:	bl	3255c <flatcc_builder_table_add@@Base>
   2309c:	str	r0, [fp, #-44]	; 0xffffffd4
   230a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   230a4:	cmp	r3, #0
   230a8:	beq	23f0c <_start@@Base+0xf914>
   230ac:	ldrd	r2, [fp, #-84]	; 0xffffffac
   230b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   230b4:	bl	14a14 <_start@@Base+0x41c>
   230b8:	b	23e64 <_start@@Base+0xf86c>
   230bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   230c0:	ldr	r1, [fp, #-140]	; 0xffffff74
   230c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   230c8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   230cc:	str	r0, [fp, #-140]	; 0xffffff74
   230d0:	b	23e64 <_start@@Base+0xf86c>
   230d4:	nop	{0}
   230d8:			; <UNDEFINED> instruction: 0xffffffff
   230dc:	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, sp}
   230e0:	andeq	r0, r0, r0
   230e4:	ldmdbvs	r1!, {r9, sl, ip, sp}
   230e8:	andeq	r0, r0, r0
   230ec:	ldmdbvs	r6!, {sl, ip, sp}
   230f0:	andeq	r2, r4, ip, lsl #9
   230f4:	andeq	r2, r4, r0, lsr #6
   230f8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   230fc:	mov	r2, #0
   23100:	mvn	r3, #255	; 0xff
   23104:	and	ip, r0, r2
   23108:	str	ip, [fp, #-164]	; 0xffffff5c
   2310c:	and	r3, r1, r3
   23110:	str	r3, [fp, #-160]	; 0xffffff60
   23114:	add	r3, pc, #764	; 0x2fc
   23118:	ldrd	r2, [r3]
   2311c:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   23120:	cmp	r1, r3
   23124:	cmpeq	r0, r2
   23128:	bne	23254 <_start@@Base+0xec5c>
   2312c:	ldr	r3, [fp, #-140]	; 0xffffff74
   23130:	str	r3, [fp, #-40]	; 0xffffffd8
   23134:	mov	r3, #3
   23138:	ldr	r2, [fp, #-144]	; 0xffffff70
   2313c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23140:	ldr	r0, [fp, #-136]	; 0xffffff78
   23144:	bl	15600 <_start@@Base+0x1008>
   23148:	str	r0, [fp, #-140]	; 0xffffff74
   2314c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23150:	ldr	r3, [fp, #-140]	; 0xffffff74
   23154:	cmp	r2, r3
   23158:	beq	2323c <_start@@Base+0xec44>
   2315c:	mov	r3, #0
   23160:	str	r3, [fp, #-88]	; 0xffffffa8
   23164:	ldr	r3, [fp, #-140]	; 0xffffff74
   23168:	str	r3, [fp, #-40]	; 0xffffffd8
   2316c:	sub	r3, fp, #88	; 0x58
   23170:	ldr	r2, [fp, #-144]	; 0xffffff70
   23174:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23178:	ldr	r0, [fp, #-136]	; 0xffffff78
   2317c:	bl	162a8 <_start@@Base+0x1cb0>
   23180:	str	r0, [fp, #-140]	; 0xffffff74
   23184:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23188:	ldr	r3, [fp, #-140]	; 0xffffff74
   2318c:	cmp	r2, r3
   23190:	bne	231e0 <_start@@Base+0xebe8>
   23194:	ldr	r3, [fp, #-140]	; 0xffffff74
   23198:	str	r3, [fp, #-40]	; 0xffffffd8
   2319c:	sub	r3, fp, #88	; 0x58
   231a0:	str	r3, [sp]
   231a4:	ldr	r3, [pc, #644]	; 23430 <_start@@Base+0xee38>
   231a8:	add	r3, pc, r3
   231ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   231b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   231b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   231b8:	bl	16e84 <_start@@Base+0x288c>
   231bc:	str	r0, [fp, #-140]	; 0xffffff74
   231c0:	ldr	r2, [fp, #-140]	; 0xffffff74
   231c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   231c8:	cmp	r2, r3
   231cc:	beq	23f14 <_start@@Base+0xf91c>
   231d0:	ldr	r2, [fp, #-140]	; 0xffffff74
   231d4:	ldr	r3, [fp, #-144]	; 0xffffff70
   231d8:	cmp	r2, r3
   231dc:	beq	23f14 <_start@@Base+0xf91c>
   231e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   231e4:	cmp	r3, #0
   231e8:	bne	23200 <_start@@Base+0xec08>
   231ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   231f0:	ldr	r3, [r3, #8]
   231f4:	and	r3, r3, #2
   231f8:	cmp	r3, #0
   231fc:	beq	23e64 <_start@@Base+0xf86c>
   23200:	ldr	r3, [fp, #-136]	; 0xffffff78
   23204:	ldr	r0, [r3]
   23208:	mov	r3, #4
   2320c:	mov	r2, #4
   23210:	mov	r1, #4
   23214:	bl	3255c <flatcc_builder_table_add@@Base>
   23218:	str	r0, [fp, #-44]	; 0xffffffd4
   2321c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23220:	cmp	r3, #0
   23224:	beq	23f1c <_start@@Base+0xf924>
   23228:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2322c:	mov	r1, r3
   23230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23234:	bl	149ac <_start@@Base+0x3b4>
   23238:	b	23e64 <_start@@Base+0xf86c>
   2323c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23240:	ldr	r1, [fp, #-140]	; 0xffffff74
   23244:	ldr	r0, [fp, #-136]	; 0xffffff78
   23248:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2324c:	str	r0, [fp, #-140]	; 0xffffff74
   23250:	b	23e64 <_start@@Base+0xf86c>
   23254:	ldr	r2, [fp, #-144]	; 0xffffff70
   23258:	ldr	r1, [fp, #-140]	; 0xffffff74
   2325c:	ldr	r0, [fp, #-136]	; 0xffffff78
   23260:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23264:	str	r0, [fp, #-140]	; 0xffffff74
   23268:	b	23e64 <_start@@Base+0xf86c>
   2326c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23270:	add	r3, pc, #424	; 0x1a8
   23274:	ldrd	r2, [r3]
   23278:	cmp	r1, r3
   2327c:	cmpeq	r0, r2
   23280:	bhi	23720 <_start@@Base+0xf128>
   23284:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23288:	add	r3, pc, #408	; 0x198
   2328c:	ldrd	r2, [r3]
   23290:	cmp	r1, r3
   23294:	cmpeq	r0, r2
   23298:	bhi	23438 <_start@@Base+0xee40>
   2329c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   232a0:	mov	r2, #0
   232a4:	mov	r3, #0
   232a8:	movt	r3, #65535	; 0xffff
   232ac:	and	ip, r0, r2
   232b0:	str	ip, [fp, #-172]	; 0xffffff54
   232b4:	and	r3, r1, r3
   232b8:	str	r3, [fp, #-168]	; 0xffffff58
   232bc:	mov	r2, #0
   232c0:	mov	r3, #0
   232c4:	movt	r3, #26936	; 0x6938
   232c8:	ldrd	r0, [fp, #-172]	; 0xffffff54
   232cc:	cmp	r1, r3
   232d0:	cmpeq	r0, r2
   232d4:	bne	23400 <_start@@Base+0xee08>
   232d8:	ldr	r3, [fp, #-140]	; 0xffffff74
   232dc:	str	r3, [fp, #-40]	; 0xffffffd8
   232e0:	mov	r3, #2
   232e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   232e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   232ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   232f0:	bl	15600 <_start@@Base+0x1008>
   232f4:	str	r0, [fp, #-140]	; 0xffffff74
   232f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   232fc:	ldr	r3, [fp, #-140]	; 0xffffff74
   23300:	cmp	r2, r3
   23304:	beq	233e8 <_start@@Base+0xedf0>
   23308:	mov	r3, #0
   2330c:	strb	r3, [fp, #-89]	; 0xffffffa7
   23310:	ldr	r3, [fp, #-140]	; 0xffffff74
   23314:	str	r3, [fp, #-40]	; 0xffffffd8
   23318:	sub	r3, fp, #89	; 0x59
   2331c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23320:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23324:	ldr	r0, [fp, #-136]	; 0xffffff78
   23328:	bl	16460 <_start@@Base+0x1e68>
   2332c:	str	r0, [fp, #-140]	; 0xffffff74
   23330:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23334:	ldr	r3, [fp, #-140]	; 0xffffff74
   23338:	cmp	r2, r3
   2333c:	bne	2338c <_start@@Base+0xed94>
   23340:	ldr	r3, [fp, #-140]	; 0xffffff74
   23344:	str	r3, [fp, #-40]	; 0xffffffd8
   23348:	sub	r3, fp, #89	; 0x59
   2334c:	str	r3, [sp]
   23350:	ldr	r3, [pc, #220]	; 23434 <_start@@Base+0xee3c>
   23354:	add	r3, pc, r3
   23358:	ldr	r2, [fp, #-144]	; 0xffffff70
   2335c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23360:	ldr	r0, [fp, #-136]	; 0xffffff78
   23364:	bl	171c4 <_start@@Base+0x2bcc>
   23368:	str	r0, [fp, #-140]	; 0xffffff74
   2336c:	ldr	r2, [fp, #-140]	; 0xffffff74
   23370:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23374:	cmp	r2, r3
   23378:	beq	23f24 <_start@@Base+0xf92c>
   2337c:	ldr	r2, [fp, #-140]	; 0xffffff74
   23380:	ldr	r3, [fp, #-144]	; 0xffffff70
   23384:	cmp	r2, r3
   23388:	beq	23f24 <_start@@Base+0xf92c>
   2338c:	ldrsb	r3, [fp, #-89]	; 0xffffffa7
   23390:	cmp	r3, #0
   23394:	bne	233ac <_start@@Base+0xedb4>
   23398:	ldr	r3, [fp, #-136]	; 0xffffff78
   2339c:	ldr	r3, [r3, #8]
   233a0:	and	r3, r3, #2
   233a4:	cmp	r3, #0
   233a8:	beq	23e64 <_start@@Base+0xf86c>
   233ac:	ldr	r3, [fp, #-136]	; 0xffffff78
   233b0:	ldr	r0, [r3]
   233b4:	mov	r3, #1
   233b8:	mov	r2, #1
   233bc:	mov	r1, #0
   233c0:	bl	3255c <flatcc_builder_table_add@@Base>
   233c4:	str	r0, [fp, #-44]	; 0xffffffd4
   233c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   233cc:	cmp	r3, #0
   233d0:	beq	23f2c <_start@@Base+0xf934>
   233d4:	ldrsb	r3, [fp, #-89]	; 0xffffffa7
   233d8:	mov	r1, r3
   233dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   233e0:	bl	148c8 <_start@@Base+0x2d0>
   233e4:	b	23e64 <_start@@Base+0xf86c>
   233e8:	ldr	r2, [fp, #-144]	; 0xffffff70
   233ec:	ldr	r1, [fp, #-140]	; 0xffffff74
   233f0:	ldr	r0, [fp, #-136]	; 0xffffff78
   233f4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   233f8:	str	r0, [fp, #-140]	; 0xffffff74
   233fc:	b	23e64 <_start@@Base+0xf86c>
   23400:	ldr	r2, [fp, #-144]	; 0xffffff70
   23404:	ldr	r1, [fp, #-140]	; 0xffffff74
   23408:	ldr	r0, [fp, #-136]	; 0xffffff78
   2340c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23410:	str	r0, [fp, #-140]	; 0xffffff74
   23414:	b	23e64 <_start@@Base+0xf86c>
   23418:	andeq	r0, r0, r0
   2341c:	ldmdbvs	r3!, {r9, ip, sp}
   23420:			; <UNDEFINED> instruction: 0xffffffff
   23424:	ldrvc	r3, [r6, #-1023]!	; 0xfffffc01
   23428:			; <UNDEFINED> instruction: 0xffffffff
   2342c:	ldrvc	r3, [r1, #-1535]!	; 0xfffffa01
   23430:			; <UNDEFINED> instruction: 0x000421b0
   23434:	andeq	r2, r4, r0, lsl r0
   23438:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2343c:	mov	r2, #0
   23440:	mvn	r3, #255	; 0xff
   23444:	and	ip, r0, r2
   23448:	str	ip, [fp, #-180]	; 0xffffff4c
   2344c:	and	r3, r1, r3
   23450:	str	r3, [fp, #-176]	; 0xffffff50
   23454:	add	r3, pc, #684	; 0x2ac
   23458:	ldrd	r2, [r3]
   2345c:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   23460:	cmp	r1, r3
   23464:	cmpeq	r0, r2
   23468:	bne	23594 <_start@@Base+0xef9c>
   2346c:	ldr	r3, [fp, #-140]	; 0xffffff74
   23470:	str	r3, [fp, #-40]	; 0xffffffd8
   23474:	mov	r3, #3
   23478:	ldr	r2, [fp, #-144]	; 0xffffff70
   2347c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23480:	ldr	r0, [fp, #-136]	; 0xffffff78
   23484:	bl	15600 <_start@@Base+0x1008>
   23488:	str	r0, [fp, #-140]	; 0xffffff74
   2348c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23490:	ldr	r3, [fp, #-140]	; 0xffffff74
   23494:	cmp	r2, r3
   23498:	beq	2357c <_start@@Base+0xef84>
   2349c:	mov	r3, #0
   234a0:	str	r3, [fp, #-96]	; 0xffffffa0
   234a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   234a8:	str	r3, [fp, #-40]	; 0xffffffd8
   234ac:	sub	r3, fp, #96	; 0x60
   234b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   234b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   234b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   234bc:	bl	15f34 <_start@@Base+0x193c>
   234c0:	str	r0, [fp, #-140]	; 0xffffff74
   234c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   234c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   234cc:	cmp	r2, r3
   234d0:	bne	23520 <_start@@Base+0xef28>
   234d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   234d8:	str	r3, [fp, #-40]	; 0xffffffd8
   234dc:	sub	r3, fp, #96	; 0x60
   234e0:	str	r3, [sp]
   234e4:	ldr	r3, [pc, #556]	; 23718 <_start@@Base+0xf120>
   234e8:	add	r3, pc, r3
   234ec:	ldr	r2, [fp, #-144]	; 0xffffff70
   234f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   234f4:	ldr	r0, [fp, #-136]	; 0xffffff78
   234f8:	bl	16808 <_start@@Base+0x2210>
   234fc:	str	r0, [fp, #-140]	; 0xffffff74
   23500:	ldr	r2, [fp, #-140]	; 0xffffff74
   23504:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23508:	cmp	r2, r3
   2350c:	beq	23f34 <_start@@Base+0xf93c>
   23510:	ldr	r2, [fp, #-140]	; 0xffffff74
   23514:	ldr	r3, [fp, #-144]	; 0xffffff70
   23518:	cmp	r2, r3
   2351c:	beq	23f34 <_start@@Base+0xf93c>
   23520:	ldr	r3, [fp, #-96]	; 0xffffffa0
   23524:	cmp	r3, #0
   23528:	bne	23540 <_start@@Base+0xef48>
   2352c:	ldr	r3, [fp, #-136]	; 0xffffff78
   23530:	ldr	r3, [r3, #8]
   23534:	and	r3, r3, #2
   23538:	cmp	r3, #0
   2353c:	beq	23e64 <_start@@Base+0xf86c>
   23540:	ldr	r3, [fp, #-136]	; 0xffffff78
   23544:	ldr	r0, [r3]
   23548:	mov	r3, #4
   2354c:	mov	r2, #4
   23550:	mov	r1, #5
   23554:	bl	3255c <flatcc_builder_table_add@@Base>
   23558:	str	r0, [fp, #-44]	; 0xffffffd4
   2355c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23560:	cmp	r3, #0
   23564:	beq	23f3c <_start@@Base+0xf944>
   23568:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2356c:	mov	r1, r3
   23570:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23574:	bl	147f4 <_start@@Base+0x1fc>
   23578:	b	23e64 <_start@@Base+0xf86c>
   2357c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23580:	ldr	r1, [fp, #-140]	; 0xffffff74
   23584:	ldr	r0, [fp, #-136]	; 0xffffff78
   23588:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2358c:	str	r0, [fp, #-140]	; 0xffffff74
   23590:	b	23e64 <_start@@Base+0xf86c>
   23594:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23598:	mov	r2, #0
   2359c:	mvn	r3, #255	; 0xff
   235a0:	and	ip, r0, r2
   235a4:	str	ip, [fp, #-188]	; 0xffffff44
   235a8:	and	r3, r1, r3
   235ac:	str	r3, [fp, #-184]	; 0xffffff48
   235b0:	add	r3, pc, #344	; 0x158
   235b4:	ldrd	r2, [r3]
   235b8:	ldrd	r0, [fp, #-188]	; 0xffffff44
   235bc:	cmp	r1, r3
   235c0:	cmpeq	r0, r2
   235c4:	bne	236f0 <_start@@Base+0xf0f8>
   235c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   235cc:	str	r3, [fp, #-40]	; 0xffffffd8
   235d0:	mov	r3, #3
   235d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   235d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   235dc:	ldr	r0, [fp, #-136]	; 0xffffff78
   235e0:	bl	15600 <_start@@Base+0x1008>
   235e4:	str	r0, [fp, #-140]	; 0xffffff74
   235e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   235ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   235f0:	cmp	r2, r3
   235f4:	beq	236d8 <_start@@Base+0xf0e0>
   235f8:	mov	r3, #0
   235fc:	strh	r3, [fp, #-98]	; 0xffffff9e
   23600:	ldr	r3, [fp, #-140]	; 0xffffff74
   23604:	str	r3, [fp, #-40]	; 0xffffffd8
   23608:	sub	r3, fp, #98	; 0x62
   2360c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23610:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23614:	ldr	r0, [fp, #-136]	; 0xffffff78
   23618:	bl	16010 <_start@@Base+0x1a18>
   2361c:	str	r0, [fp, #-140]	; 0xffffff74
   23620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23624:	ldr	r3, [fp, #-140]	; 0xffffff74
   23628:	cmp	r2, r3
   2362c:	bne	2367c <_start@@Base+0xf084>
   23630:	ldr	r3, [fp, #-140]	; 0xffffff74
   23634:	str	r3, [fp, #-40]	; 0xffffffd8
   23638:	sub	r3, fp, #98	; 0x62
   2363c:	str	r3, [sp]
   23640:	ldr	r3, [pc, #212]	; 2371c <_start@@Base+0xf124>
   23644:	add	r3, pc, r3
   23648:	ldr	r2, [fp, #-144]	; 0xffffff70
   2364c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23650:	ldr	r0, [fp, #-136]	; 0xffffff78
   23654:	bl	169a0 <_start@@Base+0x23a8>
   23658:	str	r0, [fp, #-140]	; 0xffffff74
   2365c:	ldr	r2, [fp, #-140]	; 0xffffff74
   23660:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23664:	cmp	r2, r3
   23668:	beq	23f44 <_start@@Base+0xf94c>
   2366c:	ldr	r2, [fp, #-140]	; 0xffffff74
   23670:	ldr	r3, [fp, #-144]	; 0xffffff70
   23674:	cmp	r2, r3
   23678:	beq	23f44 <_start@@Base+0xf94c>
   2367c:	ldrh	r3, [fp, #-98]	; 0xffffff9e
   23680:	cmp	r3, #0
   23684:	bne	2369c <_start@@Base+0xf0a4>
   23688:	ldr	r3, [fp, #-136]	; 0xffffff78
   2368c:	ldr	r3, [r3, #8]
   23690:	and	r3, r3, #2
   23694:	cmp	r3, #0
   23698:	beq	23e64 <_start@@Base+0xf86c>
   2369c:	ldr	r3, [fp, #-136]	; 0xffffff78
   236a0:	ldr	r0, [r3]
   236a4:	mov	r3, #2
   236a8:	mov	r2, #2
   236ac:	mov	r1, #3
   236b0:	bl	3255c <flatcc_builder_table_add@@Base>
   236b4:	str	r0, [fp, #-44]	; 0xffffffd4
   236b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   236bc:	cmp	r3, #0
   236c0:	beq	23f4c <_start@@Base+0xf954>
   236c4:	ldrh	r3, [fp, #-98]	; 0xffffff9e
   236c8:	mov	r1, r3
   236cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   236d0:	bl	14784 <_start@@Base+0x18c>
   236d4:	b	23e64 <_start@@Base+0xf86c>
   236d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   236dc:	ldr	r1, [fp, #-140]	; 0xffffff74
   236e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   236e4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   236e8:	str	r0, [fp, #-140]	; 0xffffff74
   236ec:	b	23e64 <_start@@Base+0xf86c>
   236f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   236f4:	ldr	r1, [fp, #-140]	; 0xffffff74
   236f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   236fc:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23700:	str	r0, [fp, #-140]	; 0xffffff74
   23704:	b	23e64 <_start@@Base+0xf86c>
   23708:	andeq	r0, r0, r0
   2370c:	ldrvc	r3, [r3, #-512]!	; 0xfffffe00
   23710:	andeq	r0, r0, r0
   23714:	ldrvc	r3, [r1, #-1536]!	; 0xfffffa00
   23718:	andeq	r1, r4, r8, lsl #29
   2371c:	andeq	r1, r4, r8, lsr sp
   23720:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23724:	mvn	r2, #0
   23728:	movw	r3, #65535	; 0xffff
   2372c:	movt	r3, #30007	; 0x7537
   23730:	cmp	r1, r3
   23734:	cmpeq	r0, r2
   23738:	bhi	238b0 <_start@@Base+0xf2b8>
   2373c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23740:	mov	r2, #0
   23744:	mvn	r3, #255	; 0xff
   23748:	and	ip, r0, r2
   2374c:	str	ip, [fp, #-196]	; 0xffffff3c
   23750:	and	r3, r1, r3
   23754:	str	r3, [fp, #-192]	; 0xffffff40
   23758:	add	r3, pc, #912	; 0x390
   2375c:	ldrd	r2, [r3]
   23760:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   23764:	cmp	r1, r3
   23768:	cmpeq	r0, r2
   2376c:	bne	23898 <_start@@Base+0xf2a0>
   23770:	ldr	r3, [fp, #-140]	; 0xffffff74
   23774:	str	r3, [fp, #-40]	; 0xffffffd8
   23778:	mov	r3, #3
   2377c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23780:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23784:	ldr	r0, [fp, #-136]	; 0xffffff78
   23788:	bl	15600 <_start@@Base+0x1008>
   2378c:	str	r0, [fp, #-140]	; 0xffffff74
   23790:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23794:	ldr	r3, [fp, #-140]	; 0xffffff74
   23798:	cmp	r2, r3
   2379c:	beq	23880 <_start@@Base+0xf288>
   237a0:	mov	r2, #0
   237a4:	mov	r3, #0
   237a8:	strd	r2, [fp, #-108]	; 0xffffff94
   237ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   237b0:	str	r3, [fp, #-40]	; 0xffffffd8
   237b4:	sub	r3, fp, #108	; 0x6c
   237b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   237bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   237c0:	ldr	r0, [fp, #-136]	; 0xffffff78
   237c4:	bl	15e54 <_start@@Base+0x185c>
   237c8:	str	r0, [fp, #-140]	; 0xffffff74
   237cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   237d0:	ldr	r3, [fp, #-140]	; 0xffffff74
   237d4:	cmp	r2, r3
   237d8:	bne	23828 <_start@@Base+0xf230>
   237dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   237e0:	str	r3, [fp, #-40]	; 0xffffffd8
   237e4:	sub	r3, fp, #108	; 0x6c
   237e8:	str	r3, [sp]
   237ec:	ldr	r3, [pc, #780]	; 23b00 <_start@@Base+0xf508>
   237f0:	add	r3, pc, r3
   237f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   237f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   237fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   23800:	bl	1665c <_start@@Base+0x2064>
   23804:	str	r0, [fp, #-140]	; 0xffffff74
   23808:	ldr	r2, [fp, #-140]	; 0xffffff74
   2380c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23810:	cmp	r2, r3
   23814:	beq	23f54 <_start@@Base+0xf95c>
   23818:	ldr	r2, [fp, #-140]	; 0xffffff74
   2381c:	ldr	r3, [fp, #-144]	; 0xffffff70
   23820:	cmp	r2, r3
   23824:	beq	23f54 <_start@@Base+0xf95c>
   23828:	ldrd	r2, [fp, #-108]	; 0xffffff94
   2382c:	orrs	r3, r2, r3
   23830:	bne	23848 <_start@@Base+0xf250>
   23834:	ldr	r3, [fp, #-136]	; 0xffffff78
   23838:	ldr	r3, [r3, #8]
   2383c:	and	r3, r3, #2
   23840:	cmp	r3, #0
   23844:	beq	23e64 <_start@@Base+0xf86c>
   23848:	ldr	r3, [fp, #-136]	; 0xffffff78
   2384c:	ldr	r0, [r3]
   23850:	mov	r3, #8
   23854:	mov	r2, #8
   23858:	mov	r1, #7
   2385c:	bl	3255c <flatcc_builder_table_add@@Base>
   23860:	str	r0, [fp, #-44]	; 0xffffffd4
   23864:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23868:	cmp	r3, #0
   2386c:	beq	23f5c <_start@@Base+0xf964>
   23870:	ldrd	r2, [fp, #-108]	; 0xffffff94
   23874:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23878:	bl	1485c <_start@@Base+0x264>
   2387c:	b	23e64 <_start@@Base+0xf86c>
   23880:	ldr	r2, [fp, #-144]	; 0xffffff70
   23884:	ldr	r1, [fp, #-140]	; 0xffffff74
   23888:	ldr	r0, [fp, #-136]	; 0xffffff78
   2388c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23890:	str	r0, [fp, #-140]	; 0xffffff74
   23894:	b	23e64 <_start@@Base+0xf86c>
   23898:	ldr	r2, [fp, #-144]	; 0xffffff70
   2389c:	ldr	r1, [fp, #-140]	; 0xffffff74
   238a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   238a4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   238a8:	str	r0, [fp, #-140]	; 0xffffff74
   238ac:	b	23e64 <_start@@Base+0xf86c>
   238b0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   238b4:	mvn	r2, #0
   238b8:	movw	r3, #65535	; 0xffff
   238bc:	movt	r3, #30263	; 0x7637
   238c0:	cmp	r1, r3
   238c4:	cmpeq	r0, r2
   238c8:	bhi	23a48 <_start@@Base+0xf450>
   238cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   238d0:	mov	r2, #0
   238d4:	mov	r3, #0
   238d8:	movt	r3, #65535	; 0xffff
   238dc:	and	ip, r0, r2
   238e0:	str	ip, [fp, #-204]	; 0xffffff34
   238e4:	and	r3, r1, r3
   238e8:	str	r3, [fp, #-200]	; 0xffffff38
   238ec:	mov	r2, #0
   238f0:	mov	r3, #0
   238f4:	movt	r3, #30008	; 0x7538
   238f8:	ldrd	r0, [fp, #-204]	; 0xffffff34
   238fc:	cmp	r1, r3
   23900:	cmpeq	r0, r2
   23904:	bne	23a30 <_start@@Base+0xf438>
   23908:	ldr	r3, [fp, #-140]	; 0xffffff74
   2390c:	str	r3, [fp, #-40]	; 0xffffffd8
   23910:	mov	r3, #2
   23914:	ldr	r2, [fp, #-144]	; 0xffffff70
   23918:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2391c:	ldr	r0, [fp, #-136]	; 0xffffff78
   23920:	bl	15600 <_start@@Base+0x1008>
   23924:	str	r0, [fp, #-140]	; 0xffffff74
   23928:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2392c:	ldr	r3, [fp, #-140]	; 0xffffff74
   23930:	cmp	r2, r3
   23934:	beq	23a18 <_start@@Base+0xf420>
   23938:	mov	r3, #0
   2393c:	strb	r3, [fp, #-109]	; 0xffffff93
   23940:	ldr	r3, [fp, #-140]	; 0xffffff74
   23944:	str	r3, [fp, #-40]	; 0xffffffd8
   23948:	sub	r3, fp, #109	; 0x6d
   2394c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23950:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23954:	ldr	r0, [fp, #-136]	; 0xffffff78
   23958:	bl	160ec <_start@@Base+0x1af4>
   2395c:	str	r0, [fp, #-140]	; 0xffffff74
   23960:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23964:	ldr	r3, [fp, #-140]	; 0xffffff74
   23968:	cmp	r2, r3
   2396c:	bne	239bc <_start@@Base+0xf3c4>
   23970:	ldr	r3, [fp, #-140]	; 0xffffff74
   23974:	str	r3, [fp, #-40]	; 0xffffffd8
   23978:	sub	r3, fp, #109	; 0x6d
   2397c:	str	r3, [sp]
   23980:	ldr	r3, [pc, #380]	; 23b04 <_start@@Base+0xf50c>
   23984:	add	r3, pc, r3
   23988:	ldr	r2, [fp, #-144]	; 0xffffff70
   2398c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23990:	ldr	r0, [fp, #-136]	; 0xffffff78
   23994:	bl	16b3c <_start@@Base+0x2544>
   23998:	str	r0, [fp, #-140]	; 0xffffff74
   2399c:	ldr	r2, [fp, #-140]	; 0xffffff74
   239a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   239a4:	cmp	r2, r3
   239a8:	beq	23f64 <_start@@Base+0xf96c>
   239ac:	ldr	r2, [fp, #-140]	; 0xffffff74
   239b0:	ldr	r3, [fp, #-144]	; 0xffffff70
   239b4:	cmp	r2, r3
   239b8:	beq	23f64 <_start@@Base+0xf96c>
   239bc:	ldrb	r3, [fp, #-109]	; 0xffffff93
   239c0:	cmp	r3, #0
   239c4:	bne	239dc <_start@@Base+0xf3e4>
   239c8:	ldr	r3, [fp, #-136]	; 0xffffff78
   239cc:	ldr	r3, [r3, #8]
   239d0:	and	r3, r3, #2
   239d4:	cmp	r3, #0
   239d8:	beq	23e64 <_start@@Base+0xf86c>
   239dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   239e0:	ldr	r0, [r3]
   239e4:	mov	r3, #1
   239e8:	mov	r2, #1
   239ec:	mov	r1, #1
   239f0:	bl	3255c <flatcc_builder_table_add@@Base>
   239f4:	str	r0, [fp, #-44]	; 0xffffffd4
   239f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   239fc:	cmp	r3, #0
   23a00:	beq	23f6c <_start@@Base+0xf974>
   23a04:	ldrb	r3, [fp, #-109]	; 0xffffff93
   23a08:	mov	r1, r3
   23a0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23a10:	bl	14710 <_start@@Base+0x118>
   23a14:	b	23e64 <_start@@Base+0xf86c>
   23a18:	ldr	r2, [fp, #-144]	; 0xffffff70
   23a1c:	ldr	r1, [fp, #-140]	; 0xffffff74
   23a20:	ldr	r0, [fp, #-136]	; 0xffffff78
   23a24:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23a28:	str	r0, [fp, #-140]	; 0xffffff74
   23a2c:	b	23e64 <_start@@Base+0xf86c>
   23a30:	ldr	r2, [fp, #-144]	; 0xffffff70
   23a34:	ldr	r1, [fp, #-140]	; 0xffffff74
   23a38:	ldr	r0, [fp, #-136]	; 0xffffff78
   23a3c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23a40:	str	r0, [fp, #-140]	; 0xffffff74
   23a44:	b	23e64 <_start@@Base+0xf86c>
   23a48:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23a4c:	mov	r2, #0
   23a50:	mvn	r3, #0
   23a54:	and	ip, r0, r2
   23a58:	str	ip, [fp, #-212]	; 0xffffff2c
   23a5c:	and	r3, r1, r3
   23a60:	str	r3, [fp, #-208]	; 0xffffff30
   23a64:	add	r3, pc, #140	; 0x8c
   23a68:	ldrd	r2, [r3]
   23a6c:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   23a70:	cmp	r1, r3
   23a74:	cmpeq	r0, r2
   23a78:	bne	23c5c <_start@@Base+0xf664>
   23a7c:	ldr	r3, [fp, #-140]	; 0xffffff74
   23a80:	str	r3, [fp, #-40]	; 0xffffffd8
   23a84:	mov	r3, #4
   23a88:	ldr	r2, [fp, #-144]	; 0xffffff70
   23a8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23a90:	ldr	r0, [fp, #-136]	; 0xffffff78
   23a94:	bl	15600 <_start@@Base+0x1008>
   23a98:	str	r0, [fp, #-140]	; 0xffffff74
   23a9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23aa0:	ldr	r3, [fp, #-140]	; 0xffffff74
   23aa4:	cmp	r2, r3
   23aa8:	beq	23c44 <_start@@Base+0xf64c>
   23aac:	ldr	r3, [fp, #-136]	; 0xffffff78
   23ab0:	ldr	r0, [r3]
   23ab4:	mvn	r3, #-536870912	; 0xe0000000
   23ab8:	mov	r2, #8
   23abc:	mov	r1, #8
   23ac0:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   23ac4:	mov	r3, r0
   23ac8:	cmp	r3, #0
   23acc:	bne	23f74 <_start@@Base+0xf97c>
   23ad0:	sub	r3, fp, #56	; 0x38
   23ad4:	ldr	r2, [fp, #-144]	; 0xffffff70
   23ad8:	ldr	r1, [fp, #-140]	; 0xffffff74
   23adc:	ldr	r0, [fp, #-136]	; 0xffffff78
   23ae0:	bl	15398 <_start@@Base+0xda0>
   23ae4:	str	r0, [fp, #-140]	; 0xffffff74
   23ae8:	b	23be4 <_start@@Base+0xf5ec>
   23aec:	nop	{0}
   23af0:	andeq	r0, r0, r0
   23af4:	ldrvc	r3, [r6, #-1024]!	; 0xfffffc00
   23af8:	andeq	r0, r0, r0
   23afc:			; <UNDEFINED> instruction: 0x76663634
   23b00:	muleq	r4, r8, fp
   23b04:	andeq	r1, r4, r0, lsl sl
   23b08:	andeq	r1, r4, ip, lsl r8
   23b0c:	andeq	r1, r4, r4, lsr r6
   23b10:	mov	r2, #0
   23b14:	mov	r3, #0
   23b18:	strd	r2, [fp, #-124]	; 0xffffff84
   23b1c:	ldr	r3, [fp, #-136]	; 0xffffff78
   23b20:	ldr	r3, [r3]
   23b24:	mov	r1, #1
   23b28:	mov	r0, r3
   23b2c:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   23b30:	str	r0, [fp, #-44]	; 0xffffffd4
   23b34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23b38:	cmp	r3, #0
   23b3c:	beq	23f7c <_start@@Base+0xf984>
   23b40:	ldr	r3, [fp, #-140]	; 0xffffff74
   23b44:	str	r3, [fp, #-40]	; 0xffffffd8
   23b48:	sub	r3, fp, #124	; 0x7c
   23b4c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23b50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23b54:	ldr	r0, [fp, #-136]	; 0xffffff78
   23b58:	bl	3cbfc <flatcc_json_parser_double@@Base>
   23b5c:	str	r0, [fp, #-140]	; 0xffffff74
   23b60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b64:	ldr	r3, [fp, #-140]	; 0xffffff74
   23b68:	cmp	r2, r3
   23b6c:	bne	23bbc <_start@@Base+0xf5c4>
   23b70:	ldr	r3, [fp, #-140]	; 0xffffff74
   23b74:	str	r3, [fp, #-40]	; 0xffffffd8
   23b78:	sub	r3, fp, #124	; 0x7c
   23b7c:	str	r3, [sp]
   23b80:	ldr	r3, [pc, #-128]	; 23b08 <_start@@Base+0xf510>
   23b84:	add	r3, pc, r3
   23b88:	ldr	r2, [fp, #-144]	; 0xffffff70
   23b8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23b90:	ldr	r0, [fp, #-136]	; 0xffffff78
   23b94:	bl	176a0 <_start@@Base+0x30a8>
   23b98:	str	r0, [fp, #-140]	; 0xffffff74
   23b9c:	ldr	r2, [fp, #-140]	; 0xffffff74
   23ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23ba4:	cmp	r2, r3
   23ba8:	beq	23f84 <_start@@Base+0xf98c>
   23bac:	ldr	r2, [fp, #-140]	; 0xffffff74
   23bb0:	ldr	r3, [fp, #-144]	; 0xffffff70
   23bb4:	cmp	r2, r3
   23bb8:	beq	23f84 <_start@@Base+0xf98c>
   23bbc:	vldr	d7, [fp, #-124]	; 0xffffff84
   23bc0:	vmov.f64	d0, d7
   23bc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23bc8:	bl	14b08 <_start@@Base+0x510>
   23bcc:	sub	r3, fp, #56	; 0x38
   23bd0:	ldr	r2, [fp, #-144]	; 0xffffff70
   23bd4:	ldr	r1, [fp, #-140]	; 0xffffff74
   23bd8:	ldr	r0, [fp, #-136]	; 0xffffff78
   23bdc:	bl	1548c <_start@@Base+0xe94>
   23be0:	str	r0, [fp, #-140]	; 0xffffff74
   23be4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23be8:	cmp	r3, #0
   23bec:	bne	23b10 <_start@@Base+0xf518>
   23bf0:	ldr	r3, [fp, #-136]	; 0xffffff78
   23bf4:	ldr	r3, [r3]
   23bf8:	mov	r0, r3
   23bfc:	bl	30f80 <flatcc_builder_end_vector@@Base>
   23c00:	str	r0, [fp, #-48]	; 0xffffffd0
   23c04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23c08:	cmp	r3, #0
   23c0c:	beq	23f8c <_start@@Base+0xf994>
   23c10:	ldr	r3, [fp, #-136]	; 0xffffff78
   23c14:	ldr	r3, [r3]
   23c18:	mov	r1, #11
   23c1c:	mov	r0, r3
   23c20:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   23c24:	str	r0, [fp, #-52]	; 0xffffffcc
   23c28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23c2c:	cmp	r3, #0
   23c30:	beq	23f8c <_start@@Base+0xf994>
   23c34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   23c38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23c3c:	str	r3, [r2]
   23c40:	b	23e64 <_start@@Base+0xf86c>
   23c44:	ldr	r2, [fp, #-144]	; 0xffffff70
   23c48:	ldr	r1, [fp, #-140]	; 0xffffff74
   23c4c:	ldr	r0, [fp, #-136]	; 0xffffff78
   23c50:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23c54:	str	r0, [fp, #-140]	; 0xffffff74
   23c58:	b	23e64 <_start@@Base+0xf86c>
   23c5c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   23c60:	mov	r2, #0
   23c64:	mov	r3, #0
   23c68:	movt	r3, #65535	; 0xffff
   23c6c:	and	ip, r0, r2
   23c70:	str	ip, [fp, #-220]	; 0xffffff24
   23c74:	and	r3, r1, r3
   23c78:	str	r3, [fp, #-216]	; 0xffffff28
   23c7c:	mov	r2, #0
   23c80:	mov	r3, #0
   23c84:	movt	r3, #30264	; 0x7638
   23c88:	ldrd	r0, [fp, #-220]	; 0xffffff24
   23c8c:	cmp	r1, r3
   23c90:	cmpeq	r0, r2
   23c94:	bne	23e50 <_start@@Base+0xf858>
   23c98:	ldr	r3, [fp, #-140]	; 0xffffff74
   23c9c:	str	r3, [fp, #-40]	; 0xffffffd8
   23ca0:	mov	r3, #2
   23ca4:	ldr	r2, [fp, #-144]	; 0xffffff70
   23ca8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23cac:	ldr	r0, [fp, #-136]	; 0xffffff78
   23cb0:	bl	15600 <_start@@Base+0x1008>
   23cb4:	str	r0, [fp, #-140]	; 0xffffff74
   23cb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23cbc:	ldr	r3, [fp, #-140]	; 0xffffff74
   23cc0:	cmp	r2, r3
   23cc4:	beq	23e38 <_start@@Base+0xf840>
   23cc8:	ldr	r3, [fp, #-136]	; 0xffffff78
   23ccc:	ldr	r0, [r3]
   23cd0:	mvn	r3, #0
   23cd4:	mov	r2, #1
   23cd8:	mov	r1, #1
   23cdc:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   23ce0:	mov	r3, r0
   23ce4:	cmp	r3, #0
   23ce8:	bne	23f94 <_start@@Base+0xf99c>
   23cec:	sub	r3, fp, #56	; 0x38
   23cf0:	ldr	r2, [fp, #-144]	; 0xffffff70
   23cf4:	ldr	r1, [fp, #-140]	; 0xffffff74
   23cf8:	ldr	r0, [fp, #-136]	; 0xffffff78
   23cfc:	bl	15398 <_start@@Base+0xda0>
   23d00:	str	r0, [fp, #-140]	; 0xffffff74
   23d04:	b	23dd8 <_start@@Base+0xf7e0>
   23d08:	mov	r3, #0
   23d0c:	strb	r3, [fp, #-125]	; 0xffffff83
   23d10:	ldr	r3, [fp, #-136]	; 0xffffff78
   23d14:	ldr	r3, [r3]
   23d18:	mov	r1, #1
   23d1c:	mov	r0, r3
   23d20:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   23d24:	str	r0, [fp, #-44]	; 0xffffffd4
   23d28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23d2c:	cmp	r3, #0
   23d30:	beq	23f9c <_start@@Base+0xf9a4>
   23d34:	ldr	r3, [fp, #-140]	; 0xffffff74
   23d38:	str	r3, [fp, #-40]	; 0xffffffd8
   23d3c:	sub	r3, fp, #125	; 0x7d
   23d40:	ldr	r2, [fp, #-144]	; 0xffffff70
   23d44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23d48:	ldr	r0, [fp, #-136]	; 0xffffff78
   23d4c:	bl	16460 <_start@@Base+0x1e68>
   23d50:	str	r0, [fp, #-140]	; 0xffffff74
   23d54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23d58:	ldr	r3, [fp, #-140]	; 0xffffff74
   23d5c:	cmp	r2, r3
   23d60:	bne	23db0 <_start@@Base+0xf7b8>
   23d64:	ldr	r3, [fp, #-140]	; 0xffffff74
   23d68:	str	r3, [fp, #-40]	; 0xffffffd8
   23d6c:	sub	r3, fp, #125	; 0x7d
   23d70:	str	r3, [sp]
   23d74:	ldr	r3, [pc, #-624]	; 23b0c <_start@@Base+0xf514>
   23d78:	add	r3, pc, r3
   23d7c:	ldr	r2, [fp, #-144]	; 0xffffff70
   23d80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23d84:	ldr	r0, [fp, #-136]	; 0xffffff78
   23d88:	bl	171c4 <_start@@Base+0x2bcc>
   23d8c:	str	r0, [fp, #-140]	; 0xffffff74
   23d90:	ldr	r2, [fp, #-140]	; 0xffffff74
   23d94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23d98:	cmp	r2, r3
   23d9c:	beq	23fa4 <_start@@Base+0xf9ac>
   23da0:	ldr	r2, [fp, #-140]	; 0xffffff74
   23da4:	ldr	r3, [fp, #-144]	; 0xffffff70
   23da8:	cmp	r2, r3
   23dac:	beq	23fa4 <_start@@Base+0xf9ac>
   23db0:	ldrsb	r3, [fp, #-125]	; 0xffffff83
   23db4:	mov	r1, r3
   23db8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23dbc:	bl	148c8 <_start@@Base+0x2d0>
   23dc0:	sub	r3, fp, #56	; 0x38
   23dc4:	ldr	r2, [fp, #-144]	; 0xffffff70
   23dc8:	ldr	r1, [fp, #-140]	; 0xffffff74
   23dcc:	ldr	r0, [fp, #-136]	; 0xffffff78
   23dd0:	bl	1548c <_start@@Base+0xe94>
   23dd4:	str	r0, [fp, #-140]	; 0xffffff74
   23dd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23ddc:	cmp	r3, #0
   23de0:	bne	23d08 <_start@@Base+0xf710>
   23de4:	ldr	r3, [fp, #-136]	; 0xffffff78
   23de8:	ldr	r3, [r3]
   23dec:	mov	r0, r3
   23df0:	bl	30f80 <flatcc_builder_end_vector@@Base>
   23df4:	str	r0, [fp, #-48]	; 0xffffffd0
   23df8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23dfc:	cmp	r3, #0
   23e00:	beq	23fac <_start@@Base+0xf9b4>
   23e04:	ldr	r3, [fp, #-136]	; 0xffffff78
   23e08:	ldr	r3, [r3]
   23e0c:	mov	r1, #10
   23e10:	mov	r0, r3
   23e14:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   23e18:	str	r0, [fp, #-52]	; 0xffffffcc
   23e1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23e20:	cmp	r3, #0
   23e24:	beq	23fac <_start@@Base+0xf9b4>
   23e28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   23e2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23e30:	str	r3, [r2]
   23e34:	b	23e64 <_start@@Base+0xf86c>
   23e38:	ldr	r2, [fp, #-144]	; 0xffffff70
   23e3c:	ldr	r1, [fp, #-140]	; 0xffffff74
   23e40:	ldr	r0, [fp, #-136]	; 0xffffff78
   23e44:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23e48:	str	r0, [fp, #-140]	; 0xffffff74
   23e4c:	b	23e64 <_start@@Base+0xf86c>
   23e50:	ldr	r2, [fp, #-144]	; 0xffffff70
   23e54:	ldr	r1, [fp, #-140]	; 0xffffff74
   23e58:	ldr	r0, [fp, #-136]	; 0xffffff78
   23e5c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   23e60:	str	r0, [fp, #-140]	; 0xffffff74
   23e64:	sub	r3, fp, #56	; 0x38
   23e68:	ldr	r2, [fp, #-144]	; 0xffffff70
   23e6c:	ldr	r1, [fp, #-140]	; 0xffffff74
   23e70:	ldr	r0, [fp, #-136]	; 0xffffff78
   23e74:	bl	15224 <_start@@Base+0xc2c>
   23e78:	str	r0, [fp, #-140]	; 0xffffff74
   23e7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23e80:	cmp	r3, #0
   23e84:	bne	22abc <_start@@Base+0xe4c4>
   23e88:	ldr	r3, [fp, #-136]	; 0xffffff78
   23e8c:	ldr	r3, [r3, #20]
   23e90:	cmp	r3, #0
   23e94:	bne	23fb4 <_start@@Base+0xf9bc>
   23e98:	ldr	r3, [fp, #-136]	; 0xffffff78
   23e9c:	ldr	r3, [r3]
   23ea0:	mov	r0, r3
   23ea4:	bl	30b0c <flatcc_builder_end_table@@Base>
   23ea8:	mov	r2, r0
   23eac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   23eb0:	str	r2, [r3]
   23eb4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   23eb8:	ldr	r3, [r3]
   23ebc:	cmp	r3, #0
   23ec0:	beq	23fbc <_start@@Base+0xf9c4>
   23ec4:	ldr	r3, [fp, #-140]	; 0xffffff74
   23ec8:	b	23fd8 <_start@@Base+0xf9e0>
   23ecc:	nop	{0}
   23ed0:	b	23fc0 <_start@@Base+0xf9c8>
   23ed4:	nop	{0}
   23ed8:	b	23fc0 <_start@@Base+0xf9c8>
   23edc:	nop	{0}
   23ee0:	b	23fc0 <_start@@Base+0xf9c8>
   23ee4:	nop	{0}
   23ee8:	b	23fc0 <_start@@Base+0xf9c8>
   23eec:	nop	{0}
   23ef0:	b	23fc0 <_start@@Base+0xf9c8>
   23ef4:	nop	{0}
   23ef8:	b	23fc0 <_start@@Base+0xf9c8>
   23efc:	nop	{0}
   23f00:	b	23fc0 <_start@@Base+0xf9c8>
   23f04:	nop	{0}
   23f08:	b	23fc0 <_start@@Base+0xf9c8>
   23f0c:	nop	{0}
   23f10:	b	23fc0 <_start@@Base+0xf9c8>
   23f14:	nop	{0}
   23f18:	b	23fc0 <_start@@Base+0xf9c8>
   23f1c:	nop	{0}
   23f20:	b	23fc0 <_start@@Base+0xf9c8>
   23f24:	nop	{0}
   23f28:	b	23fc0 <_start@@Base+0xf9c8>
   23f2c:	nop	{0}
   23f30:	b	23fc0 <_start@@Base+0xf9c8>
   23f34:	nop	{0}
   23f38:	b	23fc0 <_start@@Base+0xf9c8>
   23f3c:	nop	{0}
   23f40:	b	23fc0 <_start@@Base+0xf9c8>
   23f44:	nop	{0}
   23f48:	b	23fc0 <_start@@Base+0xf9c8>
   23f4c:	nop	{0}
   23f50:	b	23fc0 <_start@@Base+0xf9c8>
   23f54:	nop	{0}
   23f58:	b	23fc0 <_start@@Base+0xf9c8>
   23f5c:	nop	{0}
   23f60:	b	23fc0 <_start@@Base+0xf9c8>
   23f64:	nop	{0}
   23f68:	b	23fc0 <_start@@Base+0xf9c8>
   23f6c:	nop	{0}
   23f70:	b	23fc0 <_start@@Base+0xf9c8>
   23f74:	nop	{0}
   23f78:	b	23fc0 <_start@@Base+0xf9c8>
   23f7c:	nop	{0}
   23f80:	b	23fc0 <_start@@Base+0xf9c8>
   23f84:	nop	{0}
   23f88:	b	23fc0 <_start@@Base+0xf9c8>
   23f8c:	nop	{0}
   23f90:	b	23fc0 <_start@@Base+0xf9c8>
   23f94:	nop	{0}
   23f98:	b	23fc0 <_start@@Base+0xf9c8>
   23f9c:	nop	{0}
   23fa0:	b	23fc0 <_start@@Base+0xf9c8>
   23fa4:	nop	{0}
   23fa8:	b	23fc0 <_start@@Base+0xf9c8>
   23fac:	nop	{0}
   23fb0:	b	23fc0 <_start@@Base+0xf9c8>
   23fb4:	nop	{0}
   23fb8:	b	23fc0 <_start@@Base+0xf9c8>
   23fbc:	nop	{0}
   23fc0:	mov	r3, #33	; 0x21
   23fc4:	ldr	r2, [fp, #-144]	; 0xffffff70
   23fc8:	ldr	r1, [fp, #-140]	; 0xffffff74
   23fcc:	ldr	r0, [fp, #-136]	; 0xffffff78
   23fd0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   23fd4:	mov	r3, r0
   23fd8:	mov	r0, r3
   23fdc:	sub	sp, fp, #28
   23fe0:	ldrd	r4, [sp]
   23fe4:	ldrd	r6, [sp, #8]
   23fe8:	ldrd	r8, [sp, #16]
   23fec:	ldr	fp, [sp, #24]
   23ff0:	add	sp, sp, #28
   23ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   23ff8:	strd	r4, [sp, #-16]!
   23ffc:	str	fp, [sp, #8]
   24000:	str	lr, [sp, #12]
   24004:	add	fp, sp, #12
   24008:	sub	sp, sp, #48	; 0x30
   2400c:	str	r0, [fp, #-40]	; 0xffffffd8
   24010:	str	r1, [fp, #-44]	; 0xffffffd4
   24014:	str	r2, [fp, #-48]	; 0xffffffd0
   24018:	str	r3, [fp, #-52]	; 0xffffffcc
   2401c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24020:	mov	r2, #0
   24024:	str	r2, [r3]
   24028:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2402c:	ldr	r3, [r3]
   24030:	mov	r1, #1
   24034:	mov	r0, r3
   24038:	bl	2ff58 <flatcc_builder_start_table@@Base>
   2403c:	mov	r3, r0
   24040:	cmp	r3, #0
   24044:	bne	242ec <_start@@Base+0xfcf4>
   24048:	sub	r3, fp, #32
   2404c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24050:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24054:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24058:	bl	15130 <_start@@Base+0xb38>
   2405c:	str	r0, [fp, #-44]	; 0xffffffd4
   24060:	b	2429c <_start@@Base+0xfca4>
   24064:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24068:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2406c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24070:	bl	14cf4 <_start@@Base+0x6fc>
   24074:	str	r0, [fp, #-44]	; 0xffffffd4
   24078:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2407c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24080:	bl	14ffc <_start@@Base+0xa04>
   24084:	strd	r0, [fp, #-20]	; 0xffffffec
   24088:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2408c:	add	r1, pc, #684	; 0x2ac
   24090:	ldrd	r0, [r1]
   24094:	cmp	r3, r1
   24098:	cmpeq	r2, r0
   2409c:	bne	24270 <_start@@Base+0xfc78>
   240a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   240a4:	add	r3, r3, #8
   240a8:	str	r3, [fp, #-44]	; 0xffffffd4
   240ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   240b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   240b4:	bl	14ffc <_start@@Base+0xa04>
   240b8:	strd	r0, [fp, #-20]	; 0xffffffec
   240bc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   240c0:	add	r1, pc, #640	; 0x280
   240c4:	ldrd	r0, [r1]
   240c8:	cmp	r3, r1
   240cc:	cmpeq	r2, r0
   240d0:	bne	24258 <_start@@Base+0xfc60>
   240d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   240d8:	add	r3, r3, #8
   240dc:	str	r3, [fp, #-44]	; 0xffffffd4
   240e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   240e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   240e8:	bl	14ffc <_start@@Base+0xa04>
   240ec:	strd	r0, [fp, #-20]	; 0xffffffec
   240f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   240f4:	mov	r0, #0
   240f8:	mvn	r1, #255	; 0xff
   240fc:	and	r4, r2, r0
   24100:	and	r5, r3, r1
   24104:	add	r3, pc, #580	; 0x244
   24108:	ldrd	r2, [r3]
   2410c:	cmp	r5, r3
   24110:	cmpeq	r4, r2
   24114:	bne	24240 <_start@@Base+0xfc48>
   24118:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2411c:	str	r3, [fp, #-24]	; 0xffffffe8
   24120:	mov	r3, #3
   24124:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2412c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24130:	bl	15600 <_start@@Base+0x1008>
   24134:	str	r0, [fp, #-44]	; 0xffffffd4
   24138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2413c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24140:	cmp	r2, r3
   24144:	beq	24228 <_start@@Base+0xfc30>
   24148:	mov	r3, #0
   2414c:	str	r3, [fp, #-36]	; 0xffffffdc
   24150:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24154:	str	r3, [fp, #-24]	; 0xffffffe8
   24158:	sub	r3, fp, #36	; 0x24
   2415c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24164:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24168:	bl	162a8 <_start@@Base+0x1cb0>
   2416c:	str	r0, [fp, #-44]	; 0xffffffd4
   24170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24178:	cmp	r2, r3
   2417c:	bne	241cc <_start@@Base+0xfbd4>
   24180:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24184:	str	r3, [fp, #-24]	; 0xffffffe8
   24188:	sub	r3, fp, #36	; 0x24
   2418c:	str	r3, [sp]
   24190:	ldr	r3, [pc, #448]	; 24358 <_start@@Base+0xfd60>
   24194:	add	r3, pc, r3
   24198:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2419c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   241a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   241a4:	bl	16e84 <_start@@Base+0x288c>
   241a8:	str	r0, [fp, #-44]	; 0xffffffd4
   241ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   241b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   241b4:	cmp	r2, r3
   241b8:	beq	242f4 <_start@@Base+0xfcfc>
   241bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   241c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   241c4:	cmp	r2, r3
   241c8:	beq	242f4 <_start@@Base+0xfcfc>
   241cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   241d0:	cmp	r3, #0
   241d4:	bne	241ec <_start@@Base+0xfbf4>
   241d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   241dc:	ldr	r3, [r3, #8]
   241e0:	and	r3, r3, #2
   241e4:	cmp	r3, #0
   241e8:	beq	24284 <_start@@Base+0xfc8c>
   241ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   241f0:	ldr	r0, [r3]
   241f4:	mov	r3, #4
   241f8:	mov	r2, #4
   241fc:	mov	r1, #0
   24200:	bl	3255c <flatcc_builder_table_add@@Base>
   24204:	str	r0, [fp, #-28]	; 0xffffffe4
   24208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2420c:	cmp	r3, #0
   24210:	beq	242fc <_start@@Base+0xfd04>
   24214:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24218:	mov	r1, r3
   2421c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24220:	bl	149ac <_start@@Base+0x3b4>
   24224:	b	24284 <_start@@Base+0xfc8c>
   24228:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2422c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24230:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24234:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   24238:	str	r0, [fp, #-44]	; 0xffffffd4
   2423c:	b	24284 <_start@@Base+0xfc8c>
   24240:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24244:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24248:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2424c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   24250:	str	r0, [fp, #-44]	; 0xffffffd4
   24254:	b	24284 <_start@@Base+0xfc8c>
   24258:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2425c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24260:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24264:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   24268:	str	r0, [fp, #-44]	; 0xffffffd4
   2426c:	b	24284 <_start@@Base+0xfc8c>
   24270:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24274:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24278:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2427c:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   24280:	str	r0, [fp, #-44]	; 0xffffffd4
   24284:	sub	r3, fp, #32
   24288:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2428c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24290:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24294:	bl	15224 <_start@@Base+0xc2c>
   24298:	str	r0, [fp, #-44]	; 0xffffffd4
   2429c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   242a0:	cmp	r3, #0
   242a4:	bne	24064 <_start@@Base+0xfa6c>
   242a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   242ac:	ldr	r3, [r3, #20]
   242b0:	cmp	r3, #0
   242b4:	bne	24304 <_start@@Base+0xfd0c>
   242b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   242bc:	ldr	r3, [r3]
   242c0:	mov	r0, r3
   242c4:	bl	30b0c <flatcc_builder_end_table@@Base>
   242c8:	mov	r2, r0
   242cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   242d0:	str	r2, [r3]
   242d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   242d8:	ldr	r3, [r3]
   242dc:	cmp	r3, #0
   242e0:	beq	2430c <_start@@Base+0xfd14>
   242e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   242e8:	b	24328 <_start@@Base+0xfd30>
   242ec:	nop	{0}
   242f0:	b	24310 <_start@@Base+0xfd18>
   242f4:	nop	{0}
   242f8:	b	24310 <_start@@Base+0xfd18>
   242fc:	nop	{0}
   24300:	b	24310 <_start@@Base+0xfd18>
   24304:	nop	{0}
   24308:	b	24310 <_start@@Base+0xfd18>
   2430c:	nop	{0}
   24310:	mov	r3, #33	; 0x21
   24314:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24318:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2431c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24320:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   24324:	mov	r3, r0
   24328:	mov	r0, r3
   2432c:	sub	sp, fp, #12
   24330:	ldrd	r4, [sp]
   24334:	ldr	fp, [sp, #8]
   24338:	add	sp, sp, #12
   2433c:	pop	{pc}		; (ldr pc, [sp], #4)
   24340:	ldrbvs	r6, [pc], #-372	; 24348 <_start@@Base+0xfd50>
   24344:	cmnvc	r7, #456	; 0x1c8
   24348:	svcpl	0x0064616d
   2434c:	strbtvc	r6, [r1], #-875	; 0xfffffc95
   24350:	andeq	r0, r0, r0
   24354:	cmnvs	r7, r0, lsl #10
   24358:	andeq	r1, r4, r4, lsr #4
   2435c:	strd	r4, [sp, #-16]!
   24360:	str	fp, [sp, #8]
   24364:	str	lr, [sp, #12]
   24368:	add	fp, sp, #12
   2436c:	sub	sp, sp, #48	; 0x30
   24370:	str	r0, [fp, #-40]	; 0xffffffd8
   24374:	str	r1, [fp, #-44]	; 0xffffffd4
   24378:	str	r2, [fp, #-48]	; 0xffffffd0
   2437c:	str	r3, [fp, #-52]	; 0xffffffcc
   24380:	sub	r3, fp, #32
   24384:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24388:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2438c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24390:	bl	15130 <_start@@Base+0xb38>
   24394:	str	r0, [fp, #-44]	; 0xffffffd4
   24398:	b	24548 <_start@@Base+0xff50>
   2439c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   243a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   243a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   243a8:	bl	14cf4 <_start@@Base+0x6fc>
   243ac:	str	r0, [fp, #-44]	; 0xffffffd4
   243b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   243b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   243b8:	bl	14ffc <_start@@Base+0xa04>
   243bc:	strd	r0, [fp, #-20]	; 0xffffffec
   243c0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   243c4:	add	r1, pc, #452	; 0x1c4
   243c8:	ldrd	r0, [r1]
   243cc:	cmp	r3, r1
   243d0:	cmpeq	r2, r0
   243d4:	bne	2451c <_start@@Base+0xff24>
   243d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   243dc:	add	r3, r3, #8
   243e0:	str	r3, [fp, #-44]	; 0xffffffd4
   243e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   243e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   243ec:	bl	14ffc <_start@@Base+0xa04>
   243f0:	strd	r0, [fp, #-20]	; 0xffffffec
   243f4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   243f8:	mov	r0, #0
   243fc:	mvn	r1, #255	; 0xff
   24400:	and	r4, r2, r0
   24404:	and	r5, r3, r1
   24408:	add	r3, pc, #392	; 0x188
   2440c:	ldrd	r2, [r3]
   24410:	cmp	r5, r3
   24414:	cmpeq	r4, r2
   24418:	bne	24504 <_start@@Base+0xff0c>
   2441c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24420:	str	r3, [fp, #-24]	; 0xffffffe8
   24424:	mov	r3, #3
   24428:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2442c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24430:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24434:	bl	15600 <_start@@Base+0x1008>
   24438:	str	r0, [fp, #-44]	; 0xffffffd4
   2443c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24440:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24444:	cmp	r2, r3
   24448:	beq	244ec <_start@@Base+0xfef4>
   2444c:	mov	r3, #0
   24450:	strh	r3, [fp, #-34]	; 0xffffffde
   24454:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24458:	str	r3, [fp, #-28]	; 0xffffffe4
   2445c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24460:	str	r3, [fp, #-24]	; 0xffffffe8
   24464:	sub	r3, fp, #34	; 0x22
   24468:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2446c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24470:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24474:	bl	16010 <_start@@Base+0x1a18>
   24478:	str	r0, [fp, #-44]	; 0xffffffd4
   2447c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24480:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24484:	cmp	r2, r3
   24488:	bne	244d8 <_start@@Base+0xfee0>
   2448c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24490:	str	r3, [fp, #-24]	; 0xffffffe8
   24494:	sub	r3, fp, #34	; 0x22
   24498:	str	r3, [sp]
   2449c:	ldr	r3, [pc, #252]	; 245a0 <_start@@Base+0xffa8>
   244a0:	add	r3, pc, r3
   244a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   244a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   244ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   244b0:	bl	169a0 <_start@@Base+0x23a8>
   244b4:	str	r0, [fp, #-44]	; 0xffffffd4
   244b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   244bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244c0:	cmp	r2, r3
   244c4:	beq	2455c <_start@@Base+0xff64>
   244c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   244cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   244d0:	cmp	r2, r3
   244d4:	beq	2455c <_start@@Base+0xff64>
   244d8:	ldrh	r3, [fp, #-34]	; 0xffffffde
   244dc:	mov	r1, r3
   244e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   244e4:	bl	14784 <_start@@Base+0x18c>
   244e8:	b	24530 <_start@@Base+0xff38>
   244ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   244f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   244f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   244f8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   244fc:	str	r0, [fp, #-44]	; 0xffffffd4
   24500:	b	24530 <_start@@Base+0xff38>
   24504:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24508:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2450c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24510:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   24514:	str	r0, [fp, #-44]	; 0xffffffd4
   24518:	b	24530 <_start@@Base+0xff38>
   2451c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24520:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24528:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2452c:	str	r0, [fp, #-44]	; 0xffffffd4
   24530:	sub	r3, fp, #32
   24534:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24538:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2453c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24540:	bl	15224 <_start@@Base+0xc2c>
   24544:	str	r0, [fp, #-44]	; 0xffffffd4
   24548:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2454c:	cmp	r3, #0
   24550:	bne	2439c <_start@@Base+0xfda4>
   24554:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24558:	b	24578 <_start@@Base+0xff80>
   2455c:	nop	{0}
   24560:	mov	r3, #33	; 0x21
   24564:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2456c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24570:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   24574:	mov	r3, r0
   24578:	mov	r0, r3
   2457c:	sub	sp, fp, #12
   24580:	ldrd	r4, [sp]
   24584:	ldr	fp, [sp, #8]
   24588:	add	sp, sp, #12
   2458c:	pop	{pc}		; (ldr pc, [sp], #4)
   24590:	svcpl	0x006c656e
   24594:	stmdavs	r1!, {r1, r4, r5, r6, r8, fp, sp, lr}^
   24598:	andeq	r0, r0, r0
   2459c:	ldrbvs	r6, [r4, -r0, lsl #16]!
   245a0:	andeq	r0, r4, r4, lsr #30
   245a4:	str	fp, [sp, #-8]!
   245a8:	str	lr, [sp, #4]
   245ac:	add	fp, sp, #4
   245b0:	sub	sp, sp, #24
   245b4:	str	r0, [fp, #-16]
   245b8:	str	r1, [fp, #-20]	; 0xffffffec
   245bc:	str	r2, [fp, #-24]	; 0xffffffe8
   245c0:	str	r3, [fp, #-28]	; 0xffffffe4
   245c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   245c8:	mov	r2, #0
   245cc:	str	r2, [r3]
   245d0:	ldr	r3, [fp, #-16]
   245d4:	ldr	r3, [r3]
   245d8:	mov	r2, #2
   245dc:	mov	r1, #2
   245e0:	mov	r0, r3
   245e4:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   245e8:	str	r0, [fp, #-8]
   245ec:	ldr	r3, [fp, #-8]
   245f0:	cmp	r3, #0
   245f4:	beq	24654 <_start@@Base+0x1005c>
   245f8:	ldr	r3, [fp, #-8]
   245fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24600:	ldr	r1, [fp, #-20]	; 0xffffffec
   24604:	ldr	r0, [fp, #-16]
   24608:	bl	2435c <_start@@Base+0xfd64>
   2460c:	str	r0, [fp, #-20]	; 0xffffffec
   24610:	ldr	r2, [fp, #-20]	; 0xffffffec
   24614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24618:	cmp	r2, r3
   2461c:	beq	2465c <_start@@Base+0x10064>
   24620:	ldr	r3, [fp, #-16]
   24624:	ldr	r3, [r3]
   24628:	mov	r0, r3
   2462c:	bl	2f19c <flatcc_builder_end_struct@@Base>
   24630:	mov	r2, r0
   24634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24638:	str	r2, [r3]
   2463c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24640:	ldr	r3, [r3]
   24644:	cmp	r3, #0
   24648:	beq	2465c <_start@@Base+0x10064>
   2464c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24650:	b	24678 <_start@@Base+0x10080>
   24654:	nop	{0}
   24658:	b	24660 <_start@@Base+0x10068>
   2465c:	nop	{0}
   24660:	mov	r3, #33	; 0x21
   24664:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24668:	ldr	r1, [fp, #-20]	; 0xffffffec
   2466c:	ldr	r0, [fp, #-16]
   24670:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   24674:	mov	r3, r0
   24678:	mov	r0, r3
   2467c:	sub	sp, fp, #4
   24680:	ldr	fp, [sp]
   24684:	add	sp, sp, #4
   24688:	pop	{pc}		; (ldr pc, [sp], #4)
   2468c:	strd	r4, [sp, #-16]!
   24690:	str	fp, [sp, #8]
   24694:	str	lr, [sp, #12]
   24698:	add	fp, sp, #12
   2469c:	sub	sp, sp, #48	; 0x30
   246a0:	str	r0, [fp, #-40]	; 0xffffffd8
   246a4:	str	r1, [fp, #-44]	; 0xffffffd4
   246a8:	str	r2, [fp, #-48]	; 0xffffffd0
   246ac:	str	r3, [fp, #-52]	; 0xffffffcc
   246b0:	sub	r3, fp, #32
   246b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   246b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   246bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   246c0:	bl	15130 <_start@@Base+0xb38>
   246c4:	str	r0, [fp, #-44]	; 0xffffffd4
   246c8:	b	24880 <_start@@Base+0x10288>
   246cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   246d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   246d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   246d8:	bl	14cf4 <_start@@Base+0x6fc>
   246dc:	str	r0, [fp, #-44]	; 0xffffffd4
   246e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   246e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   246e8:	bl	14ffc <_start@@Base+0xa04>
   246ec:	strd	r0, [fp, #-20]	; 0xffffffec
   246f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   246f4:	add	r1, pc, #460	; 0x1cc
   246f8:	ldrd	r0, [r1]
   246fc:	cmp	r3, r1
   24700:	cmpeq	r2, r0
   24704:	bne	24854 <_start@@Base+0x1025c>
   24708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2470c:	add	r3, r3, #8
   24710:	str	r3, [fp, #-44]	; 0xffffffd4
   24714:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24718:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2471c:	bl	14ffc <_start@@Base+0xa04>
   24720:	strd	r0, [fp, #-20]	; 0xffffffec
   24724:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24728:	mov	r0, #0
   2472c:	mov	r1, #0
   24730:	movt	r1, #65535	; 0xffff
   24734:	and	r4, r2, r0
   24738:	and	r5, r3, r1
   2473c:	mov	r2, #0
   24740:	mov	r3, #0
   24744:	movt	r3, #24932	; 0x6164
   24748:	cmp	r5, r3
   2474c:	cmpeq	r4, r2
   24750:	bne	2483c <_start@@Base+0x10244>
   24754:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24758:	str	r3, [fp, #-24]	; 0xffffffe8
   2475c:	mov	r3, #2
   24760:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24768:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2476c:	bl	15600 <_start@@Base+0x1008>
   24770:	str	r0, [fp, #-44]	; 0xffffffd4
   24774:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24778:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2477c:	cmp	r2, r3
   24780:	beq	24824 <_start@@Base+0x1022c>
   24784:	mov	r3, #0
   24788:	str	r3, [fp, #-36]	; 0xffffffdc
   2478c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24790:	str	r3, [fp, #-28]	; 0xffffffe4
   24794:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24798:	str	r3, [fp, #-24]	; 0xffffffe8
   2479c:	sub	r3, fp, #36	; 0x24
   247a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   247a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   247a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   247ac:	bl	162a8 <_start@@Base+0x1cb0>
   247b0:	str	r0, [fp, #-44]	; 0xffffffd4
   247b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   247b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   247bc:	cmp	r2, r3
   247c0:	bne	24810 <_start@@Base+0x10218>
   247c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   247c8:	str	r3, [fp, #-24]	; 0xffffffe8
   247cc:	sub	r3, fp, #36	; 0x24
   247d0:	str	r3, [sp]
   247d4:	ldr	r3, [pc, #244]	; 248d0 <_start@@Base+0x102d8>
   247d8:	add	r3, pc, r3
   247dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   247e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   247e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   247e8:	bl	16e84 <_start@@Base+0x288c>
   247ec:	str	r0, [fp, #-44]	; 0xffffffd4
   247f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   247f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   247f8:	cmp	r2, r3
   247fc:	beq	24894 <_start@@Base+0x1029c>
   24800:	ldr	r2, [fp, #-44]	; 0xffffffd4
   24804:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24808:	cmp	r2, r3
   2480c:	beq	24894 <_start@@Base+0x1029c>
   24810:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24814:	mov	r1, r3
   24818:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2481c:	bl	149ac <_start@@Base+0x3b4>
   24820:	b	24868 <_start@@Base+0x10270>
   24824:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24828:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2482c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24830:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   24834:	str	r0, [fp, #-44]	; 0xffffffd4
   24838:	b	24868 <_start@@Base+0x10270>
   2483c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24840:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24844:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24848:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2484c:	str	r0, [fp, #-44]	; 0xffffffd4
   24850:	b	24868 <_start@@Base+0x10270>
   24854:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24858:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2485c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24860:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   24864:	str	r0, [fp, #-44]	; 0xffffffd4
   24868:	sub	r3, fp, #32
   2486c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24870:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24874:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24878:	bl	15224 <_start@@Base+0xc2c>
   2487c:	str	r0, [fp, #-44]	; 0xffffffd4
   24880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24884:	cmp	r3, #0
   24888:	bne	246cc <_start@@Base+0x100d4>
   2488c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24890:	b	248b0 <_start@@Base+0x102b8>
   24894:	nop	{0}
   24898:	mov	r3, #33	; 0x21
   2489c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   248a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   248a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   248a8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   248ac:	mov	r3, r0
   248b0:	mov	r0, r3
   248b4:	sub	sp, fp, #12
   248b8:	ldrd	r4, [sp]
   248bc:	ldr	fp, [sp, #8]
   248c0:	add	sp, sp, #12
   248c4:	pop	{pc}		; (ldr pc, [sp], #4)
   248c8:	cmpvc	pc, #1342177286	; 0x50000006
   248cc:	rsbvs	r6, pc, #428	; 0x1ac
   248d0:	strdeq	r0, [r4], -r8
   248d4:	str	fp, [sp, #-8]!
   248d8:	str	lr, [sp, #4]
   248dc:	add	fp, sp, #4
   248e0:	sub	sp, sp, #24
   248e4:	str	r0, [fp, #-16]
   248e8:	str	r1, [fp, #-20]	; 0xffffffec
   248ec:	str	r2, [fp, #-24]	; 0xffffffe8
   248f0:	str	r3, [fp, #-28]	; 0xffffffe4
   248f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   248f8:	mov	r2, #0
   248fc:	str	r2, [r3]
   24900:	ldr	r3, [fp, #-16]
   24904:	ldr	r3, [r3]
   24908:	mov	r2, #4
   2490c:	mov	r1, #4
   24910:	mov	r0, r3
   24914:	bl	2f0f0 <flatcc_builder_start_struct@@Base>
   24918:	str	r0, [fp, #-8]
   2491c:	ldr	r3, [fp, #-8]
   24920:	cmp	r3, #0
   24924:	beq	24984 <_start@@Base+0x1038c>
   24928:	ldr	r3, [fp, #-8]
   2492c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24930:	ldr	r1, [fp, #-20]	; 0xffffffec
   24934:	ldr	r0, [fp, #-16]
   24938:	bl	2468c <_start@@Base+0x10094>
   2493c:	str	r0, [fp, #-20]	; 0xffffffec
   24940:	ldr	r2, [fp, #-20]	; 0xffffffec
   24944:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24948:	cmp	r2, r3
   2494c:	beq	2498c <_start@@Base+0x10394>
   24950:	ldr	r3, [fp, #-16]
   24954:	ldr	r3, [r3]
   24958:	mov	r0, r3
   2495c:	bl	2f19c <flatcc_builder_end_struct@@Base>
   24960:	mov	r2, r0
   24964:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24968:	str	r2, [r3]
   2496c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24970:	ldr	r3, [r3]
   24974:	cmp	r3, #0
   24978:	beq	2498c <_start@@Base+0x10394>
   2497c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24980:	b	249a8 <_start@@Base+0x103b0>
   24984:	nop	{0}
   24988:	b	24990 <_start@@Base+0x10398>
   2498c:	nop	{0}
   24990:	mov	r3, #33	; 0x21
   24994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24998:	ldr	r1, [fp, #-20]	; 0xffffffec
   2499c:	ldr	r0, [fp, #-16]
   249a0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   249a4:	mov	r3, r0
   249a8:	mov	r0, r3
   249ac:	sub	sp, fp, #4
   249b0:	ldr	fp, [sp]
   249b4:	add	sp, sp, #4
   249b8:	pop	{pc}		; (ldr pc, [sp], #4)
   249bc:	str	fp, [sp, #-8]!
   249c0:	str	lr, [sp, #4]
   249c4:	add	fp, sp, #4
   249c8:	sub	sp, sp, #16
   249cc:	str	r0, [fp, #-8]
   249d0:	str	r1, [fp, #-12]
   249d4:	str	r2, [fp, #-16]
   249d8:	strb	r3, [fp, #-17]	; 0xffffffef
   249dc:	ldr	r3, [fp, #4]
   249e0:	mov	r2, #0
   249e4:	str	r2, [r3]
   249e8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   249ec:	cmp	r3, #9
   249f0:	beq	24a84 <_start@@Base+0x1048c>
   249f4:	cmp	r3, #9
   249f8:	bgt	24a18 <_start@@Base+0x10420>
   249fc:	cmp	r3, #2
   24a00:	beq	24a4c <_start@@Base+0x10454>
   24a04:	cmp	r3, #8
   24a08:	beq	24a68 <_start@@Base+0x10470>
   24a0c:	cmp	r3, #0
   24a10:	beq	24a34 <_start@@Base+0x1043c>
   24a14:	b	24af4 <_start@@Base+0x104fc>
   24a18:	cmp	r3, #11
   24a1c:	beq	24abc <_start@@Base+0x104c4>
   24a20:	cmp	r3, #11
   24a24:	blt	24aa0 <_start@@Base+0x104a8>
   24a28:	cmp	r3, #255	; 0xff
   24a2c:	beq	24ad8 <_start@@Base+0x104e0>
   24a30:	b	24af4 <_start@@Base+0x104fc>
   24a34:	ldr	r2, [fp, #-16]
   24a38:	ldr	r1, [fp, #-12]
   24a3c:	ldr	r0, [fp, #-8]
   24a40:	bl	15dc4 <_start@@Base+0x17cc>
   24a44:	mov	r3, r0
   24a48:	b	24b84 <_start@@Base+0x1058c>
   24a4c:	ldr	r3, [fp, #4]
   24a50:	ldr	r2, [fp, #-16]
   24a54:	ldr	r1, [fp, #-12]
   24a58:	ldr	r0, [fp, #-8]
   24a5c:	bl	23ff8 <_start@@Base+0xfa00>
   24a60:	str	r0, [fp, #-12]
   24a64:	b	24b3c <_start@@Base+0x10544>
   24a68:	ldr	r3, [fp, #4]
   24a6c:	ldr	r2, [fp, #-16]
   24a70:	ldr	r1, [fp, #-12]
   24a74:	ldr	r0, [fp, #-8]
   24a78:	bl	245a4 <_start@@Base+0xffac>
   24a7c:	str	r0, [fp, #-12]
   24a80:	b	24b3c <_start@@Base+0x10544>
   24a84:	ldr	r3, [fp, #4]
   24a88:	ldr	r2, [fp, #-16]
   24a8c:	ldr	r1, [fp, #-12]
   24a90:	ldr	r0, [fp, #-8]
   24a94:	bl	248d4 <_start@@Base+0x102dc>
   24a98:	str	r0, [fp, #-12]
   24a9c:	b	24b3c <_start@@Base+0x10544>
   24aa0:	ldr	r3, [fp, #4]
   24aa4:	ldr	r2, [fp, #-16]
   24aa8:	ldr	r1, [fp, #-12]
   24aac:	ldr	r0, [fp, #-8]
   24ab0:	bl	248d4 <_start@@Base+0x102dc>
   24ab4:	str	r0, [fp, #-12]
   24ab8:	b	24b3c <_start@@Base+0x10544>
   24abc:	ldr	r3, [fp, #4]
   24ac0:	ldr	r2, [fp, #-16]
   24ac4:	ldr	r1, [fp, #-12]
   24ac8:	ldr	r0, [fp, #-8]
   24acc:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   24ad0:	str	r0, [fp, #-12]
   24ad4:	b	24b3c <_start@@Base+0x10544>
   24ad8:	ldr	r3, [fp, #4]
   24adc:	ldr	r2, [fp, #-16]
   24ae0:	ldr	r1, [fp, #-12]
   24ae4:	ldr	r0, [fp, #-8]
   24ae8:	bl	3da30 <flatcc_json_parser_build_string@@Base>
   24aec:	str	r0, [fp, #-12]
   24af0:	b	24b3c <_start@@Base+0x10544>
   24af4:	ldr	r3, [fp, #-8]
   24af8:	ldr	r3, [r3, #8]
   24afc:	and	r3, r3, #1
   24b00:	cmp	r3, #0
   24b04:	bne	24b24 <_start@@Base+0x1052c>
   24b08:	mov	r3, #15
   24b0c:	ldr	r2, [fp, #-16]
   24b10:	ldr	r1, [fp, #-12]
   24b14:	ldr	r0, [fp, #-8]
   24b18:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   24b1c:	mov	r3, r0
   24b20:	b	24b84 <_start@@Base+0x1058c>
   24b24:	ldr	r2, [fp, #-16]
   24b28:	ldr	r1, [fp, #-12]
   24b2c:	ldr	r0, [fp, #-8]
   24b30:	bl	3cf4c <flatcc_json_parser_generic_json@@Base>
   24b34:	mov	r3, r0
   24b38:	b	24b84 <_start@@Base+0x1058c>
   24b3c:	ldr	r3, [fp, #-8]
   24b40:	ldr	r3, [r3, #20]
   24b44:	cmp	r3, #0
   24b48:	beq	24b54 <_start@@Base+0x1055c>
   24b4c:	ldr	r3, [fp, #-12]
   24b50:	b	24b84 <_start@@Base+0x1058c>
   24b54:	ldr	r3, [fp, #4]
   24b58:	ldr	r3, [r3]
   24b5c:	cmp	r3, #0
   24b60:	bne	24b80 <_start@@Base+0x10588>
   24b64:	mov	r3, #33	; 0x21
   24b68:	ldr	r2, [fp, #-16]
   24b6c:	ldr	r1, [fp, #-12]
   24b70:	ldr	r0, [fp, #-8]
   24b74:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   24b78:	mov	r3, r0
   24b7c:	b	24b84 <_start@@Base+0x1058c>
   24b80:	ldr	r3, [fp, #-12]
   24b84:	mov	r0, r3
   24b88:	sub	sp, fp, #4
   24b8c:	ldr	fp, [sp]
   24b90:	add	sp, sp, #4
   24b94:	pop	{pc}		; (ldr pc, [sp], #4)
   24b98:	push	{fp}		; (str fp, [sp, #-4]!)
   24b9c:	add	fp, sp, #0
   24ba0:	sub	sp, sp, #12
   24ba4:	mov	r3, r0
   24ba8:	strb	r3, [fp, #-5]
   24bac:	ldrb	r3, [fp, #-5]
   24bb0:	cmp	r3, #9
   24bb4:	beq	24c10 <_start@@Base+0x10618>
   24bb8:	cmp	r3, #9
   24bbc:	bgt	24bdc <_start@@Base+0x105e4>
   24bc0:	cmp	r3, #2
   24bc4:	beq	24c00 <_start@@Base+0x10608>
   24bc8:	cmp	r3, #8
   24bcc:	beq	24c08 <_start@@Base+0x10610>
   24bd0:	cmp	r3, #0
   24bd4:	beq	24bf8 <_start@@Base+0x10600>
   24bd8:	b	24c30 <_start@@Base+0x10638>
   24bdc:	cmp	r3, #11
   24be0:	beq	24c20 <_start@@Base+0x10628>
   24be4:	cmp	r3, #11
   24be8:	blt	24c18 <_start@@Base+0x10620>
   24bec:	cmp	r3, #255	; 0xff
   24bf0:	beq	24c28 <_start@@Base+0x10630>
   24bf4:	b	24c30 <_start@@Base+0x10638>
   24bf8:	mov	r3, #1
   24bfc:	b	24c34 <_start@@Base+0x1063c>
   24c00:	mov	r3, #1
   24c04:	b	24c34 <_start@@Base+0x1063c>
   24c08:	mov	r3, #1
   24c0c:	b	24c34 <_start@@Base+0x1063c>
   24c10:	mov	r3, #1
   24c14:	b	24c34 <_start@@Base+0x1063c>
   24c18:	mov	r3, #1
   24c1c:	b	24c34 <_start@@Base+0x1063c>
   24c20:	mov	r3, #1
   24c24:	b	24c34 <_start@@Base+0x1063c>
   24c28:	mov	r3, #1
   24c2c:	b	24c34 <_start@@Base+0x1063c>
   24c30:	mov	r3, #0
   24c34:	mov	r0, r3
   24c38:	add	sp, fp, #0
   24c3c:	pop	{fp}		; (ldr fp, [sp], #4)
   24c40:	bx	lr
   24c44:	strd	r4, [sp, #-32]!	; 0xffffffe0
   24c48:	strd	r6, [sp, #8]
   24c4c:	strd	r8, [sp, #16]
   24c50:	str	fp, [sp, #24]
   24c54:	str	lr, [sp, #28]
   24c58:	add	fp, sp, #28
   24c5c:	sub	sp, sp, #72	; 0x48
   24c60:	str	r0, [fp, #-56]	; 0xffffffc8
   24c64:	str	r1, [fp, #-60]	; 0xffffffc4
   24c68:	str	r2, [fp, #-64]	; 0xffffffc0
   24c6c:	str	r3, [fp, #-68]	; 0xffffffbc
   24c70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24c74:	str	r3, [fp, #-32]	; 0xffffffe0
   24c78:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24c7c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   24c80:	bl	14ffc <_start@@Base+0xa04>
   24c84:	strd	r0, [fp, #-44]	; 0xffffffd4
   24c88:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   24c8c:	add	r3, pc, #972	; 0x3cc
   24c90:	ldrd	r2, [r3]
   24c94:	cmp	r1, r3
   24c98:	cmpeq	r0, r2
   24c9c:	bhi	24e84 <_start@@Base+0x1088c>
   24ca0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24ca4:	add	r1, pc, #956	; 0x3bc
   24ca8:	ldrd	r0, [r1]
   24cac:	cmp	r3, r1
   24cb0:	cmpeq	r2, r0
   24cb4:	bhi	24d54 <_start@@Base+0x1075c>
   24cb8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24cbc:	mov	r0, #-16777216	; 0xff000000
   24cc0:	mvn	r1, #0
   24cc4:	and	ip, r2, r0
   24cc8:	str	ip, [fp, #-76]	; 0xffffffb4
   24ccc:	and	r3, r3, r1
   24cd0:	str	r3, [fp, #-72]	; 0xffffffb8
   24cd4:	add	r3, pc, #916	; 0x394
   24cd8:	ldrd	r2, [r3]
   24cdc:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   24ce0:	cmp	r1, r3
   24ce4:	cmpeq	r0, r2
   24ce8:	bne	24d4c <_start@@Base+0x10754>
   24cec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24cf0:	str	r3, [fp, #-48]	; 0xffffffd0
   24cf4:	ldr	r3, [fp, #8]
   24cf8:	str	r3, [sp]
   24cfc:	mov	r3, #5
   24d00:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24d04:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24d08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24d0c:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   24d10:	str	r0, [fp, #-60]	; 0xffffffc4
   24d14:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24d18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24d1c:	cmp	r2, r3
   24d20:	beq	24d44 <_start@@Base+0x1074c>
   24d24:	ldr	r1, [fp, #4]
   24d28:	mov	r2, #9
   24d2c:	mov	r3, #0
   24d30:	strd	r2, [r1]
   24d34:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24d38:	mov	r2, #0
   24d3c:	str	r2, [r3]
   24d40:	b	25138 <_start@@Base+0x10b40>
   24d44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d48:	b	2513c <_start@@Base+0x10b44>
   24d4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d50:	b	2513c <_start@@Base+0x10b44>
   24d54:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24d58:	mov	r0, #-16777216	; 0xff000000
   24d5c:	mvn	r1, #0
   24d60:	and	ip, r2, r0
   24d64:	str	ip, [fp, #-84]	; 0xffffffac
   24d68:	and	r3, r3, r1
   24d6c:	str	r3, [fp, #-80]	; 0xffffffb0
   24d70:	add	r3, pc, #768	; 0x300
   24d74:	ldrd	r2, [r3]
   24d78:	ldrd	r0, [fp, #-84]	; 0xffffffac
   24d7c:	cmp	r1, r3
   24d80:	cmpeq	r0, r2
   24d84:	bne	24de8 <_start@@Base+0x107f0>
   24d88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24d8c:	str	r3, [fp, #-48]	; 0xffffffd0
   24d90:	ldr	r3, [fp, #8]
   24d94:	str	r3, [sp]
   24d98:	mov	r3, #5
   24d9c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24da0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24da4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24da8:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   24dac:	str	r0, [fp, #-60]	; 0xffffffc4
   24db0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24db4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24db8:	cmp	r2, r3
   24dbc:	beq	24de0 <_start@@Base+0x107e8>
   24dc0:	ldr	r1, [fp, #4]
   24dc4:	mov	r2, #2
   24dc8:	mov	r3, #0
   24dcc:	strd	r2, [r1]
   24dd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24dd4:	mov	r2, #0
   24dd8:	str	r2, [r3]
   24ddc:	b	25138 <_start@@Base+0x10b40>
   24de0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24de4:	b	2513c <_start@@Base+0x10b44>
   24de8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24dec:	mvn	r0, #255	; 0xff
   24df0:	mvn	r1, #0
   24df4:	and	ip, r2, r0
   24df8:	str	ip, [fp, #-92]	; 0xffffffa4
   24dfc:	and	r3, r3, r1
   24e00:	str	r3, [fp, #-88]	; 0xffffffa8
   24e04:	add	r3, pc, #628	; 0x274
   24e08:	ldrd	r2, [r3]
   24e0c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   24e10:	cmp	r1, r3
   24e14:	cmpeq	r0, r2
   24e18:	bne	24e7c <_start@@Base+0x10884>
   24e1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24e20:	str	r3, [fp, #-48]	; 0xffffffd0
   24e24:	ldr	r3, [fp, #8]
   24e28:	str	r3, [sp]
   24e2c:	mov	r3, #7
   24e30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24e34:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24e38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24e3c:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   24e40:	str	r0, [fp, #-60]	; 0xffffffc4
   24e44:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24e48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24e4c:	cmp	r2, r3
   24e50:	beq	24e74 <_start@@Base+0x1087c>
   24e54:	ldr	r1, [fp, #4]
   24e58:	mov	r2, #10
   24e5c:	mov	r3, #0
   24e60:	strd	r2, [r1]
   24e64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24e68:	mov	r2, #0
   24e6c:	str	r2, [r3]
   24e70:	b	25138 <_start@@Base+0x10b40>
   24e74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24e78:	b	2513c <_start@@Base+0x10b44>
   24e7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24e80:	b	2513c <_start@@Base+0x10b44>
   24e84:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24e88:	add	r1, pc, #504	; 0x1f8
   24e8c:	ldrd	r0, [r1]
   24e90:	cmp	r3, r1
   24e94:	cmpeq	r2, r0
   24e98:	bhi	24f2c <_start@@Base+0x10934>
   24e9c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24ea0:	mov	r0, #0
   24ea4:	mvn	r1, #0
   24ea8:	and	r8, r2, r0
   24eac:	and	r9, r3, r1
   24eb0:	add	r3, pc, #472	; 0x1d8
   24eb4:	ldrd	r2, [r3]
   24eb8:	cmp	r9, r3
   24ebc:	cmpeq	r8, r2
   24ec0:	bne	24f24 <_start@@Base+0x1092c>
   24ec4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24ec8:	str	r3, [fp, #-48]	; 0xffffffd0
   24ecc:	ldr	r3, [fp, #8]
   24ed0:	str	r3, [sp]
   24ed4:	mov	r3, #4
   24ed8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24edc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24ee0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24ee4:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   24ee8:	str	r0, [fp, #-60]	; 0xffffffc4
   24eec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24ef0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24ef4:	cmp	r2, r3
   24ef8:	beq	24f1c <_start@@Base+0x10924>
   24efc:	ldr	r1, [fp, #4]
   24f00:	mov	r2, #0
   24f04:	mov	r3, #0
   24f08:	strd	r2, [r1]
   24f0c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24f10:	mov	r2, #0
   24f14:	str	r2, [r3]
   24f18:	b	25138 <_start@@Base+0x10b40>
   24f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f20:	b	2513c <_start@@Base+0x10b44>
   24f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f28:	b	2513c <_start@@Base+0x10b44>
   24f2c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24f30:	add	r1, pc, #352	; 0x160
   24f34:	ldrd	r0, [r1]
   24f38:	cmp	r3, r1
   24f3c:	cmpeq	r2, r0
   24f40:	bhi	24fd4 <_start@@Base+0x109dc>
   24f44:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24f48:	mov	r0, #-16777216	; 0xff000000
   24f4c:	mvn	r1, #0
   24f50:	and	r6, r2, r0
   24f54:	and	r7, r3, r1
   24f58:	add	r3, pc, #320	; 0x140
   24f5c:	ldrd	r2, [r3]
   24f60:	cmp	r7, r3
   24f64:	cmpeq	r6, r2
   24f68:	bne	24fcc <_start@@Base+0x109d4>
   24f6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24f70:	str	r3, [fp, #-48]	; 0xffffffd0
   24f74:	ldr	r3, [fp, #8]
   24f78:	str	r3, [sp]
   24f7c:	mov	r3, #5
   24f80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   24f84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24f88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24f8c:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   24f90:	str	r0, [fp, #-60]	; 0xffffffc4
   24f94:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24f98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24f9c:	cmp	r2, r3
   24fa0:	beq	24fc4 <_start@@Base+0x109cc>
   24fa4:	ldr	r1, [fp, #4]
   24fa8:	mov	r2, #11
   24fac:	mov	r3, #0
   24fb0:	strd	r2, [r1]
   24fb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24fb8:	mov	r2, #0
   24fbc:	str	r2, [r3]
   24fc0:	b	25138 <_start@@Base+0x10b40>
   24fc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24fc8:	b	2513c <_start@@Base+0x10b44>
   24fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24fd0:	b	2513c <_start@@Base+0x10b44>
   24fd4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   24fd8:	mov	r0, #0
   24fdc:	movt	r0, #65535	; 0xffff
   24fe0:	mvn	r1, #0
   24fe4:	and	r4, r2, r0
   24fe8:	and	r5, r3, r1
   24fec:	add	r3, pc, #180	; 0xb4
   24ff0:	ldrd	r2, [r3]
   24ff4:	cmp	r5, r3
   24ff8:	cmpeq	r4, r2
   24ffc:	bne	250b8 <_start@@Base+0x10ac0>
   25000:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25004:	str	r3, [fp, #-48]	; 0xffffffd0
   25008:	ldr	r3, [fp, #8]
   2500c:	str	r3, [sp]
   25010:	mov	r3, #6
   25014:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25018:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2501c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25020:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   25024:	str	r0, [fp, #-60]	; 0xffffffc4
   25028:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2502c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25030:	cmp	r2, r3
   25034:	beq	25058 <_start@@Base+0x10a60>
   25038:	ldr	r1, [fp, #4]
   2503c:	mov	r2, #255	; 0xff
   25040:	mov	r3, #0
   25044:	strd	r2, [r1]
   25048:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2504c:	mov	r2, #0
   25050:	str	r2, [r3]
   25054:	b	25138 <_start@@Base+0x10b40>
   25058:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2505c:	b	2513c <_start@@Base+0x10b44>
   25060:			; <UNDEFINED> instruction: 0xffffffff
   25064:	cdpmi	14, 4, cr4, cr15, cr4, {2}
   25068:			; <UNDEFINED> instruction: 0x46616dff
   2506c:	rsbmi	r6, pc, #428	; 0x1ac
   25070:	strvs	r0, [r0, #-0]
   25074:	rsbmi	r6, r5, #108, 24	; 0x6c00
   25078:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   2507c:	ldclmi	12, cr4, [r5, #-388]!	; 0xfffffe7c
   25080:	strbtmi	r6, [r1], -r0, lsl #28
   25084:	rsbmi	r6, pc, #428	; 0x1ac
   25088:	ldrshvc	pc, [pc, #255]	; 2518f <_start@@Base+0x10b97>	; <UNPREDICTABLE>
   2508c:	svcmi	0x00746865
   25090:	andeq	r0, r0, r0
   25094:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   25098:	cdpvs	5, 7, cr6, cr10, cr11, {3}
   2509c:	rsbpl	r7, r1, #117	; 0x75
   250a0:	andvc	r0, r0, #0
   250a4:	svcmi	0x00746865
   250a8:	strbvs	r0, [r4, #-0]!
   250ac:	strbpl	r7, [lr, #-1395]!	; 0xfffffa8d
   250b0:	cdpvs	5, 7, cr6, cr10, cr12, {3}
   250b4:	rsbpl	r7, r1, #117	; 0x75
   250b8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   250bc:	sub	r1, pc, #20
   250c0:	ldrd	r0, [r1]
   250c4:	cmp	r3, r1
   250c8:	cmpeq	r2, r0
   250cc:	bne	25130 <_start@@Base+0x10b38>
   250d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   250d4:	str	r3, [fp, #-48]	; 0xffffffd0
   250d8:	ldr	r3, [fp, #8]
   250dc:	str	r3, [sp]
   250e0:	mov	r3, #8
   250e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   250e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   250ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   250f0:	bl	3c5c4 <flatcc_json_parser_match_constant@@Base>
   250f4:	str	r0, [fp, #-60]	; 0xffffffc4
   250f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   250fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25100:	cmp	r2, r3
   25104:	beq	25128 <_start@@Base+0x10b30>
   25108:	ldr	r1, [fp, #4]
   2510c:	mov	r2, #8
   25110:	mov	r3, #0
   25114:	strd	r2, [r1]
   25118:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2511c:	mov	r2, #0
   25120:	str	r2, [r3]
   25124:	b	25138 <_start@@Base+0x10b40>
   25128:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2512c:	b	2513c <_start@@Base+0x10b44>
   25130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25134:	b	2513c <_start@@Base+0x10b44>
   25138:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2513c:	mov	r0, r3
   25140:	sub	sp, fp, #28
   25144:	ldrd	r4, [sp]
   25148:	ldrd	r6, [sp, #8]
   2514c:	ldrd	r8, [sp, #16]
   25150:	ldr	fp, [sp, #24]
   25154:	add	sp, sp, #28
   25158:	pop	{pc}		; (ldr pc, [sp], #4)
   2515c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   25160:	strd	r6, [sp, #8]
   25164:	strd	r8, [sp, #16]
   25168:	str	fp, [sp, #24]
   2516c:	str	lr, [sp, #28]
   25170:	add	fp, sp, #28
   25174:	sub	sp, sp, #120	; 0x78
   25178:	str	r0, [fp, #-56]	; 0xffffffc8
   2517c:	str	r1, [fp, #-60]	; 0xffffffc4
   25180:	str	r2, [fp, #-64]	; 0xffffffc0
   25184:	str	r3, [fp, #-68]	; 0xffffffbc
   25188:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2518c:	mov	r3, #0
   25190:	str	r3, [r2]
   25194:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25198:	ldr	r3, [r3]
   2519c:	mov	r1, #10
   251a0:	mov	r0, r3
   251a4:	bl	2ff58 <flatcc_builder_start_table@@Base>
   251a8:	mov	r3, r0
   251ac:	cmp	r3, #0
   251b0:	bne	25cb8 <_start@@Base+0x116c0>
   251b4:	sub	r3, fp, #48	; 0x30
   251b8:	str	r3, [sp]
   251bc:	mov	r3, #5
   251c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   251c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   251c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   251cc:	bl	3dc40 <flatcc_json_parser_prepare_unions@@Base>
   251d0:	mov	r2, r0
   251d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   251d8:	cmp	r3, r2
   251dc:	beq	25cc0 <_start@@Base+0x116c8>
   251e0:	sub	r3, fp, #44	; 0x2c
   251e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   251e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   251ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   251f0:	bl	15130 <_start@@Base+0xb38>
   251f4:	str	r0, [fp, #-60]	; 0xffffffc4
   251f8:	b	25c50 <_start@@Base+0x11658>
   251fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25200:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25204:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25208:	bl	14cf4 <_start@@Base+0x6fc>
   2520c:	str	r0, [fp, #-60]	; 0xffffffc4
   25210:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25214:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25218:	bl	14ffc <_start@@Base+0xa04>
   2521c:	strd	r0, [fp, #-36]	; 0xffffffdc
   25220:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25224:	add	r3, pc, #924	; 0x39c
   25228:	ldrd	r2, [r3]
   2522c:	cmp	r1, r3
   25230:	cmpeq	r0, r2
   25234:	bhi	25608 <_start@@Base+0x11010>
   25238:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2523c:	add	r3, pc, #908	; 0x38c
   25240:	ldrd	r2, [r3]
   25244:	cmp	r1, r3
   25248:	cmpeq	r0, r2
   2524c:	bne	253e8 <_start@@Base+0x10df0>
   25250:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25254:	add	r3, r3, #8
   25258:	str	r3, [fp, #-60]	; 0xffffffc4
   2525c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25260:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25264:	bl	14ffc <_start@@Base+0xa04>
   25268:	strd	r0, [fp, #-36]	; 0xffffffdc
   2526c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25270:	mvn	r2, #255	; 0xff
   25274:	mvn	r3, #0
   25278:	and	r6, r0, r2
   2527c:	and	r7, r1, r3
   25280:	add	r3, pc, #848	; 0x350
   25284:	ldrd	r2, [r3]
   25288:	cmp	r7, r3
   2528c:	cmpeq	r6, r2
   25290:	bne	25320 <_start@@Base+0x10d28>
   25294:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25298:	str	r3, [fp, #-40]	; 0xffffffd8
   2529c:	mov	r3, #7
   252a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   252a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   252a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   252ac:	bl	15600 <_start@@Base+0x1008>
   252b0:	str	r0, [fp, #-60]	; 0xffffffc4
   252b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   252b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   252bc:	cmp	r2, r3
   252c0:	beq	25308 <_start@@Base+0x10d10>
   252c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   252c8:	ldr	r3, [pc, #800]	; 255f0 <_start@@Base+0x10ff8>
   252cc:	add	r3, pc, r3
   252d0:	str	r3, [sp, #12]
   252d4:	ldr	r3, [pc, #792]	; 255f4 <_start@@Base+0x10ffc>
   252d8:	add	r3, pc, r3
   252dc:	str	r3, [sp, #8]
   252e0:	str	r2, [sp, #4]
   252e4:	mov	r3, #3
   252e8:	str	r3, [sp]
   252ec:	mov	r3, #1
   252f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   252f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   252f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   252fc:	bl	3df74 <flatcc_json_parser_union_type@@Base>
   25300:	str	r0, [fp, #-60]	; 0xffffffc4
   25304:	b	25c38 <_start@@Base+0x11640>
   25308:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2530c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25310:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25314:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25318:	str	r0, [fp, #-60]	; 0xffffffc4
   2531c:	b	25c38 <_start@@Base+0x11640>
   25320:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25324:	mov	r2, #0
   25328:	mov	r3, #0
   2532c:	movt	r3, #65535	; 0xffff
   25330:	and	r8, r0, r2
   25334:	and	r9, r1, r3
   25338:	mov	r2, #0
   2533c:	mov	r3, #0
   25340:	movt	r3, #29556	; 0x7374
   25344:	cmp	r9, r3
   25348:	cmpeq	r8, r2
   2534c:	bne	253d0 <_start@@Base+0x10dd8>
   25350:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25354:	str	r3, [fp, #-40]	; 0xffffffd8
   25358:	mov	r3, #2
   2535c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25360:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25364:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25368:	bl	15600 <_start@@Base+0x1008>
   2536c:	str	r0, [fp, #-60]	; 0xffffffc4
   25370:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25374:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25378:	cmp	r2, r3
   2537c:	beq	253b8 <_start@@Base+0x10dc0>
   25380:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25384:	ldr	r3, [pc, #620]	; 255f8 <_start@@Base+0x11000>
   25388:	add	r3, pc, r3
   2538c:	str	r3, [sp, #8]
   25390:	str	r2, [sp, #4]
   25394:	mov	r3, #3
   25398:	str	r3, [sp]
   2539c:	mov	r3, #1
   253a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   253a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   253a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   253ac:	bl	3dd90 <flatcc_json_parser_union@@Base>
   253b0:	str	r0, [fp, #-60]	; 0xffffffc4
   253b4:	b	25c38 <_start@@Base+0x11640>
   253b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   253bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   253c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   253c4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   253c8:	str	r0, [fp, #-60]	; 0xffffffc4
   253cc:	b	25c38 <_start@@Base+0x11640>
   253d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   253d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   253d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   253dc:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   253e0:	str	r0, [fp, #-60]	; 0xffffffc4
   253e4:	b	25c38 <_start@@Base+0x11640>
   253e8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   253ec:	add	r3, pc, #492	; 0x1ec
   253f0:	ldrd	r2, [r3]
   253f4:	cmp	r1, r3
   253f8:	cmpeq	r0, r2
   253fc:	bne	254fc <_start@@Base+0x10f04>
   25400:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25404:	add	r3, r3, #8
   25408:	str	r3, [fp, #-60]	; 0xffffffc4
   2540c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25410:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25414:	bl	14ffc <_start@@Base+0xa04>
   25418:	strd	r0, [fp, #-36]	; 0xffffffdc
   2541c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25420:	mov	r2, #0
   25424:	mov	r3, #0
   25428:	movt	r3, #65535	; 0xffff
   2542c:	and	ip, r0, r2
   25430:	str	ip, [fp, #-76]	; 0xffffffb4
   25434:	and	r3, r1, r3
   25438:	str	r3, [fp, #-72]	; 0xffffffb8
   2543c:	mov	r2, #0
   25440:	mov	r3, #0
   25444:	movt	r3, #28773	; 0x7065
   25448:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   2544c:	cmp	r1, r3
   25450:	cmpeq	r0, r2
   25454:	bne	254e4 <_start@@Base+0x10eec>
   25458:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2545c:	str	r3, [fp, #-40]	; 0xffffffd8
   25460:	mov	r3, #2
   25464:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25468:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2546c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25470:	bl	15600 <_start@@Base+0x1008>
   25474:	str	r0, [fp, #-60]	; 0xffffffc4
   25478:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2547c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25480:	cmp	r2, r3
   25484:	beq	254cc <_start@@Base+0x10ed4>
   25488:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2548c:	ldr	r3, [pc, #360]	; 255fc <_start@@Base+0x11004>
   25490:	add	r3, pc, r3
   25494:	str	r3, [sp, #12]
   25498:	ldr	r3, [pc, #352]	; 25600 <_start@@Base+0x11008>
   2549c:	add	r3, pc, r3
   254a0:	str	r3, [sp, #8]
   254a4:	str	r2, [sp, #4]
   254a8:	mov	r3, #7
   254ac:	str	r3, [sp]
   254b0:	mov	r3, #3
   254b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   254b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   254bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   254c0:	bl	3df74 <flatcc_json_parser_union_type@@Base>
   254c4:	str	r0, [fp, #-60]	; 0xffffffc4
   254c8:	b	25c38 <_start@@Base+0x11640>
   254cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   254d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   254d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   254d8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   254dc:	str	r0, [fp, #-60]	; 0xffffffc4
   254e0:	b	25c38 <_start@@Base+0x11640>
   254e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   254e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   254ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   254f0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   254f4:	str	r0, [fp, #-60]	; 0xffffffc4
   254f8:	b	25c38 <_start@@Base+0x11640>
   254fc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25500:	mov	r2, #-16777216	; 0xff000000
   25504:	mvn	r3, #0
   25508:	and	ip, r0, r2
   2550c:	str	ip, [fp, #-84]	; 0xffffffac
   25510:	and	r3, r1, r3
   25514:	str	r3, [fp, #-80]	; 0xffffffb0
   25518:	add	r3, pc, #200	; 0xc8
   2551c:	ldrd	r2, [r3]
   25520:	ldrd	r0, [fp, #-84]	; 0xffffffac
   25524:	cmp	r1, r3
   25528:	cmpeq	r0, r2
   2552c:	bne	255b0 <_start@@Base+0x10fb8>
   25530:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25534:	str	r3, [fp, #-40]	; 0xffffffd8
   25538:	mov	r3, #5
   2553c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25540:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25544:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25548:	bl	15600 <_start@@Base+0x1008>
   2554c:	str	r0, [fp, #-60]	; 0xffffffc4
   25550:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25554:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25558:	cmp	r2, r3
   2555c:	beq	25598 <_start@@Base+0x10fa0>
   25560:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25564:	ldr	r3, [pc, #152]	; 25604 <_start@@Base+0x1100c>
   25568:	add	r3, pc, r3
   2556c:	str	r3, [sp, #8]
   25570:	str	r2, [sp, #4]
   25574:	mov	r3, #7
   25578:	str	r3, [sp]
   2557c:	mov	r3, #3
   25580:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25584:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25588:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2558c:	bl	3dd90 <flatcc_json_parser_union@@Base>
   25590:	str	r0, [fp, #-60]	; 0xffffffc4
   25594:	b	25c38 <_start@@Base+0x11640>
   25598:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2559c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   255a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   255a4:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   255a8:	str	r0, [fp, #-60]	; 0xffffffc4
   255ac:	b	25c38 <_start@@Base+0x11640>
   255b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   255b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   255b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   255bc:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   255c0:	str	r0, [fp, #-60]	; 0xffffffc4
   255c4:	b	25c38 <_start@@Base+0x11640>
   255c8:	cmnvs	r3, r4, ror #8
   255cc:	cmnvs	r8, #-2147483620	; 0x8000001c
   255d0:	strbvs	r6, [pc, -r9, ror #28]!
   255d4:	cmnvs	lr, r1, ror #8
   255d8:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   255dc:	cmnvc	r4, #116, 30	; 0x1d0
   255e0:	svcvs	0x005f7479
   255e4:	cmnvs	r1, #6464	; 0x1940
   255e8:	svcvs	0x00000000
   255ec:	cmnvs	r1, #6464	; 0x1940
   255f0:			; <UNDEFINED> instruction: 0xfffff6e8
   255f4:	andeq	r0, r4, r4, lsl #2
   255f8:			; <UNDEFINED> instruction: 0xfffff62c
   255fc:			; <UNDEFINED> instruction: 0xfffff524
   25600:	andeq	pc, r3, r0, asr pc	; <UNPREDICTABLE>
   25604:			; <UNDEFINED> instruction: 0xfffff44c
   25608:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2560c:	add	r3, pc, #988	; 0x3dc
   25610:	ldrd	r2, [r3]
   25614:	cmp	r1, r3
   25618:	cmpeq	r0, r2
   2561c:	bhi	2580c <_start@@Base+0x11214>
   25620:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25624:	add	r3, pc, #972	; 0x3cc
   25628:	ldrd	r2, [r3]
   2562c:	cmp	r1, r3
   25630:	cmpeq	r0, r2
   25634:	bne	257f4 <_start@@Base+0x111fc>
   25638:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2563c:	add	r3, r3, #8
   25640:	str	r3, [fp, #-60]	; 0xffffffc4
   25644:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25648:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2564c:	bl	14ffc <_start@@Base+0xa04>
   25650:	strd	r0, [fp, #-36]	; 0xffffffdc
   25654:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25658:	mvn	r2, #255	; 0xff
   2565c:	mvn	r3, #0
   25660:	and	ip, r0, r2
   25664:	str	ip, [fp, #-92]	; 0xffffffa4
   25668:	and	r3, r1, r3
   2566c:	str	r3, [fp, #-88]	; 0xffffffa8
   25670:	add	r3, pc, #904	; 0x388
   25674:	ldrd	r2, [r3]
   25678:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   2567c:	cmp	r1, r3
   25680:	cmpeq	r0, r2
   25684:	bne	25720 <_start@@Base+0x11128>
   25688:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2568c:	str	r3, [fp, #-40]	; 0xffffffd8
   25690:	mov	r3, #7
   25694:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25698:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2569c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   256a0:	bl	15600 <_start@@Base+0x1008>
   256a4:	str	r0, [fp, #-60]	; 0xffffffc4
   256a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   256ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   256b0:	cmp	r2, r3
   256b4:	beq	25708 <_start@@Base+0x11110>
   256b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   256bc:	ldr	r3, [pc, #868]	; 25a28 <_start@@Base+0x11430>
   256c0:	add	r3, pc, r3
   256c4:	str	r3, [sp, #16]
   256c8:	ldr	r3, [pc, #860]	; 25a2c <_start@@Base+0x11434>
   256cc:	add	r3, pc, r3
   256d0:	str	r3, [sp, #12]
   256d4:	ldr	r3, [pc, #852]	; 25a30 <_start@@Base+0x11438>
   256d8:	add	r3, pc, r3
   256dc:	str	r3, [sp, #8]
   256e0:	str	r2, [sp, #4]
   256e4:	mov	r3, #9
   256e8:	str	r3, [sp]
   256ec:	mov	r3, #4
   256f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   256f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   256f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   256fc:	bl	3e5a8 <flatcc_json_parser_union_type_vector@@Base>
   25700:	str	r0, [fp, #-60]	; 0xffffffc4
   25704:	b	25c38 <_start@@Base+0x11640>
   25708:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2570c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25710:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25714:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25718:	str	r0, [fp, #-60]	; 0xffffffc4
   2571c:	b	25c38 <_start@@Base+0x11640>
   25720:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25724:	mov	r2, #0
   25728:	mov	r3, #0
   2572c:	movt	r3, #65535	; 0xffff
   25730:	and	ip, r0, r2
   25734:	str	ip, [fp, #-100]	; 0xffffff9c
   25738:	and	r3, r1, r3
   2573c:	str	r3, [fp, #-96]	; 0xffffffa0
   25740:	mov	r2, #0
   25744:	mov	r3, #0
   25748:	movt	r3, #29299	; 0x7273
   2574c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   25750:	cmp	r1, r3
   25754:	cmpeq	r0, r2
   25758:	bne	257dc <_start@@Base+0x111e4>
   2575c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25760:	str	r3, [fp, #-40]	; 0xffffffd8
   25764:	mov	r3, #2
   25768:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2576c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25770:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25774:	bl	15600 <_start@@Base+0x1008>
   25778:	str	r0, [fp, #-60]	; 0xffffffc4
   2577c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25780:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25784:	cmp	r2, r3
   25788:	beq	257c4 <_start@@Base+0x111cc>
   2578c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25790:	ldr	r3, [pc, #668]	; 25a34 <_start@@Base+0x1143c>
   25794:	add	r3, pc, r3
   25798:	str	r3, [sp, #8]
   2579c:	str	r2, [sp, #4]
   257a0:	mov	r3, #9
   257a4:	str	r3, [sp]
   257a8:	mov	r3, #4
   257ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   257b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   257b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   257b8:	bl	3e448 <flatcc_json_parser_union_vector@@Base>
   257bc:	str	r0, [fp, #-60]	; 0xffffffc4
   257c0:	b	25c38 <_start@@Base+0x11640>
   257c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   257c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   257cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   257d0:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   257d4:	str	r0, [fp, #-60]	; 0xffffffc4
   257d8:	b	25c38 <_start@@Base+0x11640>
   257dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   257e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   257e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   257e8:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   257ec:	str	r0, [fp, #-60]	; 0xffffffc4
   257f0:	b	25c38 <_start@@Base+0x11640>
   257f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   257f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   257fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25800:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25804:	str	r0, [fp, #-60]	; 0xffffffc4
   25808:	b	25c38 <_start@@Base+0x11640>
   2580c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25810:	add	r3, pc, #496	; 0x1f0
   25814:	ldrd	r2, [r3]
   25818:	cmp	r1, r3
   2581c:	cmpeq	r0, r2
   25820:	bne	25a74 <_start@@Base+0x1147c>
   25824:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25828:	add	r3, r3, #8
   2582c:	str	r3, [fp, #-60]	; 0xffffffc4
   25830:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25834:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25838:	bl	14ffc <_start@@Base+0xa04>
   2583c:	strd	r0, [fp, #-36]	; 0xffffffdc
   25840:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25844:	add	r3, pc, #452	; 0x1c4
   25848:	ldrd	r2, [r3]
   2584c:	cmp	r1, r3
   25850:	cmpeq	r0, r2
   25854:	bne	2594c <_start@@Base+0x11354>
   25858:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2585c:	add	r3, r3, #8
   25860:	str	r3, [fp, #-60]	; 0xffffffc4
   25864:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25868:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2586c:	bl	14ffc <_start@@Base+0xa04>
   25870:	strd	r0, [fp, #-36]	; 0xffffffdc
   25874:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25878:	mov	r2, #0
   2587c:	mvn	r3, #255	; 0xff
   25880:	and	ip, r0, r2
   25884:	str	ip, [fp, #-108]	; 0xffffff94
   25888:	and	r3, r1, r3
   2588c:	str	r3, [fp, #-104]	; 0xffffff98
   25890:	add	r3, pc, #384	; 0x180
   25894:	ldrd	r2, [r3]
   25898:	ldrd	r0, [fp, #-108]	; 0xffffff94
   2589c:	cmp	r1, r3
   258a0:	cmpeq	r0, r2
   258a4:	bne	25934 <_start@@Base+0x1133c>
   258a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   258ac:	str	r3, [fp, #-40]	; 0xffffffd8
   258b0:	mov	r3, #3
   258b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   258b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   258bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   258c0:	bl	15600 <_start@@Base+0x1008>
   258c4:	str	r0, [fp, #-60]	; 0xffffffc4
   258c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   258cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   258d0:	cmp	r2, r3
   258d4:	beq	2591c <_start@@Base+0x11324>
   258d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   258dc:	ldr	r3, [pc, #340]	; 25a38 <_start@@Base+0x11440>
   258e0:	add	r3, pc, r3
   258e4:	str	r3, [sp, #12]
   258e8:	ldr	r3, [pc, #332]	; 25a3c <_start@@Base+0x11444>
   258ec:	add	r3, pc, r3
   258f0:	str	r3, [sp, #8]
   258f4:	str	r2, [sp, #4]
   258f8:	mov	r3, #1
   258fc:	str	r3, [sp]
   25900:	mov	r3, #0
   25904:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25908:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2590c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25910:	bl	3df74 <flatcc_json_parser_union_type@@Base>
   25914:	str	r0, [fp, #-60]	; 0xffffffc4
   25918:	b	25c38 <_start@@Base+0x11640>
   2591c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25920:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25924:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25928:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   2592c:	str	r0, [fp, #-60]	; 0xffffffc4
   25930:	b	25c38 <_start@@Base+0x11640>
   25934:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25938:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2593c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25940:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25944:	str	r0, [fp, #-60]	; 0xffffffc4
   25948:	b	25c38 <_start@@Base+0x11640>
   2594c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25950:	mov	r2, #0
   25954:	movt	r2, #65535	; 0xffff
   25958:	mvn	r3, #0
   2595c:	and	ip, r0, r2
   25960:	str	ip, [fp, #-116]	; 0xffffff8c
   25964:	and	r3, r1, r3
   25968:	str	r3, [fp, #-112]	; 0xffffff90
   2596c:	add	r3, pc, #172	; 0xac
   25970:	ldrd	r2, [r3]
   25974:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   25978:	cmp	r1, r3
   2597c:	cmpeq	r0, r2
   25980:	bne	25a5c <_start@@Base+0x11464>
   25984:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25988:	str	r3, [fp, #-40]	; 0xffffffd8
   2598c:	mov	r3, #6
   25990:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25994:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25998:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2599c:	bl	15600 <_start@@Base+0x1008>
   259a0:	str	r0, [fp, #-60]	; 0xffffffc4
   259a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   259a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   259ac:	cmp	r2, r3
   259b0:	beq	25a44 <_start@@Base+0x1144c>
   259b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   259b8:	ldr	r3, [pc, #128]	; 25a40 <_start@@Base+0x11448>
   259bc:	add	r3, pc, r3
   259c0:	str	r3, [sp, #8]
   259c4:	str	r2, [sp, #4]
   259c8:	mov	r3, #1
   259cc:	str	r3, [sp]
   259d0:	mov	r3, #0
   259d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   259d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   259dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   259e0:	bl	3dd90 <flatcc_json_parser_union@@Base>
   259e4:	str	r0, [fp, #-60]	; 0xffffffc4
   259e8:	b	25c38 <_start@@Base+0x11640>
   259ec:	nop	{0}
   259f0:	svcpl	0x00636860
   259f4:			; <UNDEFINED> instruction: 0x6d61696e
   259f8:	cmnvs	r3, r5, ror #8
   259fc:	cmnvs	r8, #-2147483620	; 0x8000001c
   25a00:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   25a04:	rsbsvc	r5, r3, #116, 30	; 0x1d0
   25a08:	svcpl	0x00636861
   25a0c:			; <UNDEFINED> instruction: 0x6d61696e
   25a10:	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
   25a14:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   25a18:	andeq	r0, r0, r0
   25a1c:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   25a20:	ldrbvs	r0, [r2, #-0]!
   25a24:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   25a28:			; <UNDEFINED> instruction: 0xfffff4d0
   25a2c:			; <UNDEFINED> instruction: 0xfffff2e8
   25a30:	andeq	pc, r3, r4, lsr #26
   25a34:			; <UNDEFINED> instruction: 0xfffff220
   25a38:			; <UNDEFINED> instruction: 0xfffff0d4
   25a3c:	andeq	pc, r3, r0, lsr #22
   25a40:			; <UNDEFINED> instruction: 0xffffeff8
   25a44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25a48:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25a4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25a50:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25a54:	str	r0, [fp, #-60]	; 0xffffffc4
   25a58:	b	25c38 <_start@@Base+0x11640>
   25a5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25a60:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25a64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25a68:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25a6c:	str	r0, [fp, #-60]	; 0xffffffc4
   25a70:	b	25c38 <_start@@Base+0x11640>
   25a74:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25a78:	add	r3, pc, #656	; 0x290
   25a7c:	ldrd	r2, [r3]
   25a80:	cmp	r1, r3
   25a84:	cmpeq	r0, r2
   25a88:	bne	25c24 <_start@@Base+0x1162c>
   25a8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25a90:	add	r3, r3, #8
   25a94:	str	r3, [fp, #-60]	; 0xffffffc4
   25a98:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25a9c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25aa0:	bl	14ffc <_start@@Base+0xa04>
   25aa4:	strd	r0, [fp, #-36]	; 0xffffffdc
   25aa8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25aac:	mov	r2, #0
   25ab0:	movt	r2, #65535	; 0xffff
   25ab4:	mvn	r3, #0
   25ab8:	and	ip, r0, r2
   25abc:	str	ip, [fp, #-124]	; 0xffffff84
   25ac0:	and	r3, r1, r3
   25ac4:	str	r3, [fp, #-120]	; 0xffffff88
   25ac8:	add	r3, pc, #584	; 0x248
   25acc:	ldrd	r2, [r3]
   25ad0:	ldrd	r0, [fp, #-124]	; 0xffffff84
   25ad4:	cmp	r1, r3
   25ad8:	cmpeq	r0, r2
   25adc:	bne	25b6c <_start@@Base+0x11574>
   25ae0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25ae4:	str	r3, [fp, #-40]	; 0xffffffd8
   25ae8:	mov	r3, #6
   25aec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25af0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25af4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25af8:	bl	15600 <_start@@Base+0x1008>
   25afc:	str	r0, [fp, #-60]	; 0xffffffc4
   25b00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25b04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25b08:	cmp	r2, r3
   25b0c:	beq	25b54 <_start@@Base+0x1155c>
   25b10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25b14:	ldr	r3, [pc, #516]	; 25d20 <_start@@Base+0x11728>
   25b18:	add	r3, pc, r3
   25b1c:	str	r3, [sp, #12]
   25b20:	ldr	r3, [pc, #508]	; 25d24 <_start@@Base+0x1172c>
   25b24:	add	r3, pc, r3
   25b28:	str	r3, [sp, #8]
   25b2c:	str	r2, [sp, #4]
   25b30:	mov	r3, #5
   25b34:	str	r3, [sp]
   25b38:	mov	r3, #2
   25b3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25b40:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25b44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25b48:	bl	3df74 <flatcc_json_parser_union_type@@Base>
   25b4c:	str	r0, [fp, #-60]	; 0xffffffc4
   25b50:	b	25c38 <_start@@Base+0x11640>
   25b54:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25b58:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25b5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25b60:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25b64:	str	r0, [fp, #-60]	; 0xffffffc4
   25b68:	b	25c38 <_start@@Base+0x11640>
   25b6c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   25b70:	mov	r2, #0
   25b74:	mov	r3, #-16777216	; 0xff000000
   25b78:	and	r4, r0, r2
   25b7c:	and	r5, r1, r3
   25b80:	cmp	r5, #1795162112	; 0x6b000000
   25b84:	cmpeq	r4, #0
   25b88:	bne	25c0c <_start@@Base+0x11614>
   25b8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25b90:	str	r3, [fp, #-40]	; 0xffffffd8
   25b94:	mov	r3, #1
   25b98:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25b9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25ba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25ba4:	bl	15600 <_start@@Base+0x1008>
   25ba8:	str	r0, [fp, #-60]	; 0xffffffc4
   25bac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25bb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25bb4:	cmp	r2, r3
   25bb8:	beq	25bf4 <_start@@Base+0x115fc>
   25bbc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   25bc0:	ldr	r3, [pc, #352]	; 25d28 <_start@@Base+0x11730>
   25bc4:	add	r3, pc, r3
   25bc8:	str	r3, [sp, #8]
   25bcc:	str	r2, [sp, #4]
   25bd0:	mov	r3, #5
   25bd4:	str	r3, [sp]
   25bd8:	mov	r3, #2
   25bdc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25be0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25be4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25be8:	bl	3dd90 <flatcc_json_parser_union@@Base>
   25bec:	str	r0, [fp, #-60]	; 0xffffffc4
   25bf0:	b	25c38 <_start@@Base+0x11640>
   25bf4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25bf8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25bfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25c00:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25c04:	str	r0, [fp, #-60]	; 0xffffffc4
   25c08:	b	25c38 <_start@@Base+0x11640>
   25c0c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25c10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25c14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25c18:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25c1c:	str	r0, [fp, #-60]	; 0xffffffc4
   25c20:	b	25c38 <_start@@Base+0x11640>
   25c24:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25c28:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25c2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25c30:	bl	3c758 <flatcc_json_parser_unmatched_symbol@@Base>
   25c34:	str	r0, [fp, #-60]	; 0xffffffc4
   25c38:	sub	r3, fp, #44	; 0x2c
   25c3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25c40:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25c44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25c48:	bl	15224 <_start@@Base+0xc2c>
   25c4c:	str	r0, [fp, #-60]	; 0xffffffc4
   25c50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25c54:	cmp	r3, #0
   25c58:	bne	251fc <_start@@Base+0x10c04>
   25c5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25c60:	ldr	r3, [r3, #20]
   25c64:	cmp	r3, #0
   25c68:	bne	25cc8 <_start@@Base+0x116d0>
   25c6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25c70:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25c74:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25c78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25c7c:	bl	3dd04 <flatcc_json_parser_finalize_unions@@Base>
   25c80:	str	r0, [fp, #-60]	; 0xffffffc4
   25c84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25c88:	ldr	r3, [r3]
   25c8c:	mov	r0, r3
   25c90:	bl	30b0c <flatcc_builder_end_table@@Base>
   25c94:	mov	r2, r0
   25c98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25c9c:	str	r2, [r3]
   25ca0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25ca4:	ldr	r3, [r3]
   25ca8:	cmp	r3, #0
   25cac:	beq	25cd0 <_start@@Base+0x116d8>
   25cb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25cb4:	b	25cec <_start@@Base+0x116f4>
   25cb8:	nop	{0}
   25cbc:	b	25cd4 <_start@@Base+0x116dc>
   25cc0:	nop	{0}
   25cc4:	b	25cd4 <_start@@Base+0x116dc>
   25cc8:	nop	{0}
   25ccc:	b	25cd4 <_start@@Base+0x116dc>
   25cd0:	nop	{0}
   25cd4:	mov	r3, #33	; 0x21
   25cd8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25cdc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25ce0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25ce4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   25ce8:	mov	r3, r0
   25cec:	mov	r0, r3
   25cf0:	sub	sp, fp, #28
   25cf4:	ldrd	r4, [sp]
   25cf8:	ldrd	r6, [sp, #8]
   25cfc:	ldrd	r8, [sp, #16]
   25d00:	ldr	fp, [sp, #24]
   25d04:	add	sp, sp, #28
   25d08:	pop	{pc}		; (ldr pc, [sp], #4)
   25d0c:	nop	{0}
   25d10:	svcpl	0x006b6963
   25d14:	cmnvc	r9, #1694498816	; 0x65000000
   25d18:	rsbvc	r0, r5, r0
   25d1c:	blvs	1802f08 <__bss_end__@@Base+0x179da5c>
   25d20:			; <UNDEFINED> instruction: 0xffffee9c
   25d24:	strdeq	pc, [r3], -r8
   25d28:			; <UNDEFINED> instruction: 0xffffedf0
   25d2c:	push	{fp}		; (str fp, [sp, #-4]!)
   25d30:	add	fp, sp, #0
   25d34:	sub	sp, sp, #20
   25d38:	str	r0, [fp, #-8]
   25d3c:	str	r1, [fp, #-12]
   25d40:	str	r2, [fp, #-16]
   25d44:	str	r3, [fp, #-20]	; 0xffffffec
   25d48:	ldr	r3, [fp, #-12]
   25d4c:	mov	r0, r3
   25d50:	add	sp, fp, #0
   25d54:	pop	{fp}		; (ldr fp, [sp], #4)
   25d58:	bx	lr
   25d5c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   25d60:	strd	r6, [sp, #8]
   25d64:	strd	r8, [sp, #16]
   25d68:	str	fp, [sp, #24]
   25d6c:	str	lr, [sp, #28]
   25d70:	add	fp, sp, #28
   25d74:	sub	sp, sp, #56	; 0x38
   25d78:	str	r0, [fp, #-56]	; 0xffffffc8
   25d7c:	str	r1, [fp, #-60]	; 0xffffffc4
   25d80:	str	r2, [fp, #-64]	; 0xffffffc0
   25d84:	str	r3, [fp, #-68]	; 0xffffffbc
   25d88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25d8c:	str	r3, [fp, #-32]	; 0xffffffe0
   25d90:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25d94:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25d98:	bl	14ffc <_start@@Base+0xa04>
   25d9c:	strd	r0, [fp, #-44]	; 0xffffffd4
   25da0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25da4:	add	r1, pc, #924	; 0x39c
   25da8:	ldrd	r0, [r1]
   25dac:	cmp	r3, r1
   25db0:	cmpeq	r2, r0
   25db4:	bhi	25f90 <_start@@Base+0x11998>
   25db8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25dbc:	add	r1, pc, #908	; 0x38c
   25dc0:	ldrd	r0, [r1]
   25dc4:	cmp	r3, r1
   25dc8:	cmpeq	r2, r0
   25dcc:	bhi	25e70 <_start@@Base+0x11878>
   25dd0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25dd4:	mov	r0, #0
   25dd8:	mvn	r1, #255	; 0xff
   25ddc:	and	ip, r2, r0
   25de0:	str	ip, [fp, #-76]	; 0xffffffb4
   25de4:	and	r3, r3, r1
   25de8:	str	r3, [fp, #-72]	; 0xffffffb8
   25dec:	add	r3, pc, #868	; 0x364
   25df0:	ldrd	r2, [r3]
   25df4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   25df8:	cmp	r1, r3
   25dfc:	cmpeq	r0, r2
   25e00:	bne	25e68 <_start@@Base+0x11870>
   25e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25e08:	str	r3, [fp, #-48]	; 0xffffffd0
   25e0c:	mov	r3, #3
   25e10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25e14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25e18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25e1c:	bl	15050 <_start@@Base+0xa58>
   25e20:	str	r0, [fp, #-60]	; 0xffffffc4
   25e24:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25e28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25e2c:	cmp	r2, r3
   25e30:	beq	25e60 <_start@@Base+0x11868>
   25e34:	ldr	r3, [fp, #8]
   25e38:	str	r3, [sp, #4]
   25e3c:	ldr	r3, [fp, #4]
   25e40:	str	r3, [sp]
   25e44:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25e48:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25e4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25e50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25e54:	bl	19840 <_start@@Base+0x5248>
   25e58:	str	r0, [fp, #-60]	; 0xffffffc4
   25e5c:	b	2627c <_start@@Base+0x11c84>
   25e60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25e64:	b	26280 <_start@@Base+0x11c88>
   25e68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25e6c:	b	26280 <_start@@Base+0x11c88>
   25e70:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25e74:	mov	r0, #0
   25e78:	mvn	r1, #255	; 0xff
   25e7c:	and	r8, r2, r0
   25e80:	and	r9, r3, r1
   25e84:	add	r3, pc, #724	; 0x2d4
   25e88:	ldrd	r2, [r3]
   25e8c:	cmp	r9, r3
   25e90:	cmpeq	r8, r2
   25e94:	bne	25efc <_start@@Base+0x11904>
   25e98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25e9c:	str	r3, [fp, #-48]	; 0xffffffd0
   25ea0:	mov	r3, #3
   25ea4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25ea8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25eac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25eb0:	bl	15050 <_start@@Base+0xa58>
   25eb4:	str	r0, [fp, #-60]	; 0xffffffc4
   25eb8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25ebc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25ec0:	cmp	r2, r3
   25ec4:	beq	25ef4 <_start@@Base+0x118fc>
   25ec8:	ldr	r3, [fp, #8]
   25ecc:	str	r3, [sp, #4]
   25ed0:	ldr	r3, [fp, #4]
   25ed4:	str	r3, [sp]
   25ed8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25edc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25ee0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25ee4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25ee8:	bl	18a54 <_start@@Base+0x445c>
   25eec:	str	r0, [fp, #-60]	; 0xffffffc4
   25ef0:	b	2627c <_start@@Base+0x11c84>
   25ef4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25ef8:	b	26280 <_start@@Base+0x11c88>
   25efc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25f00:	mov	r0, #-16777216	; 0xff000000
   25f04:	mvn	r1, #0
   25f08:	and	r6, r2, r0
   25f0c:	and	r7, r3, r1
   25f10:	add	r3, pc, #592	; 0x250
   25f14:	ldrd	r2, [r3]
   25f18:	cmp	r7, r3
   25f1c:	cmpeq	r6, r2
   25f20:	bne	25f88 <_start@@Base+0x11990>
   25f24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25f28:	str	r3, [fp, #-48]	; 0xffffffd0
   25f2c:	mov	r3, #5
   25f30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25f34:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25f38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25f3c:	bl	15050 <_start@@Base+0xa58>
   25f40:	str	r0, [fp, #-60]	; 0xffffffc4
   25f44:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25f48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25f4c:	cmp	r2, r3
   25f50:	beq	25f80 <_start@@Base+0x11988>
   25f54:	ldr	r3, [fp, #8]
   25f58:	str	r3, [sp, #4]
   25f5c:	ldr	r3, [fp, #4]
   25f60:	str	r3, [sp]
   25f64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25f68:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25f6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   25f70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25f74:	bl	19408 <_start@@Base+0x4e10>
   25f78:	str	r0, [fp, #-60]	; 0xffffffc4
   25f7c:	b	2627c <_start@@Base+0x11c84>
   25f80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25f84:	b	26280 <_start@@Base+0x11c88>
   25f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25f8c:	b	26280 <_start@@Base+0x11c88>
   25f90:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25f94:	add	r1, pc, #468	; 0x1d4
   25f98:	ldrd	r0, [r1]
   25f9c:	cmp	r3, r1
   25fa0:	cmpeq	r2, r0
   25fa4:	bhi	2602c <_start@@Base+0x11a34>
   25fa8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   25fac:	add	r1, pc, #452	; 0x1c4
   25fb0:	ldrd	r0, [r1]
   25fb4:	cmp	r3, r1
   25fb8:	cmpeq	r2, r0
   25fbc:	bne	26024 <_start@@Base+0x11a2c>
   25fc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25fc4:	str	r3, [fp, #-48]	; 0xffffffd0
   25fc8:	mov	r3, #8
   25fcc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25fd0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25fd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25fd8:	bl	15050 <_start@@Base+0xa58>
   25fdc:	str	r0, [fp, #-60]	; 0xffffffc4
   25fe0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25fe4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25fe8:	cmp	r2, r3
   25fec:	beq	2601c <_start@@Base+0x11a24>
   25ff0:	ldr	r3, [fp, #8]
   25ff4:	str	r3, [sp, #4]
   25ff8:	ldr	r3, [fp, #4]
   25ffc:	str	r3, [sp]
   26000:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26004:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26008:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2600c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26010:	bl	191b0 <_start@@Base+0x4bb8>
   26014:	str	r0, [fp, #-60]	; 0xffffffc4
   26018:	b	2627c <_start@@Base+0x11c84>
   2601c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26020:	b	26280 <_start@@Base+0x11c88>
   26024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26028:	b	26280 <_start@@Base+0x11c88>
   2602c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26030:	add	r1, pc, #328	; 0x148
   26034:	ldrd	r0, [r1]
   26038:	cmp	r3, r1
   2603c:	cmpeq	r2, r0
   26040:	bhi	260c8 <_start@@Base+0x11ad0>
   26044:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26048:	add	r1, pc, #312	; 0x138
   2604c:	ldrd	r0, [r1]
   26050:	cmp	r3, r1
   26054:	cmpeq	r2, r0
   26058:	bne	260c0 <_start@@Base+0x11ac8>
   2605c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26060:	str	r3, [fp, #-48]	; 0xffffffd0
   26064:	mov	r3, #8
   26068:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2606c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26070:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26074:	bl	15050 <_start@@Base+0xa58>
   26078:	str	r0, [fp, #-60]	; 0xffffffc4
   2607c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26080:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26084:	cmp	r2, r3
   26088:	beq	260b8 <_start@@Base+0x11ac0>
   2608c:	ldr	r3, [fp, #8]
   26090:	str	r3, [sp, #4]
   26094:	ldr	r3, [fp, #4]
   26098:	str	r3, [sp]
   2609c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   260a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   260a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   260a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   260ac:	bl	18ea0 <_start@@Base+0x48a8>
   260b0:	str	r0, [fp, #-60]	; 0xffffffc4
   260b4:	b	2627c <_start@@Base+0x11c84>
   260b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   260bc:	b	26280 <_start@@Base+0x11c88>
   260c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   260c4:	b	26280 <_start@@Base+0x11c88>
   260c8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   260cc:	add	r1, pc, #188	; 0xbc
   260d0:	ldrd	r0, [r1]
   260d4:	cmp	r3, r1
   260d8:	cmpeq	r2, r0
   260dc:	bne	2613c <_start@@Base+0x11b44>
   260e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   260e4:	str	r3, [fp, #-48]	; 0xffffffd0
   260e8:	mov	r3, #8
   260ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   260f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   260f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   260f8:	bl	15050 <_start@@Base+0xa58>
   260fc:	str	r0, [fp, #-60]	; 0xffffffc4
   26100:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26104:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26108:	cmp	r2, r3
   2610c:	beq	261a8 <_start@@Base+0x11bb0>
   26110:	ldr	r3, [fp, #8]
   26114:	str	r3, [sp, #4]
   26118:	ldr	r3, [fp, #4]
   2611c:	str	r3, [sp]
   26120:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26124:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26128:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2612c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26130:	bl	18c58 <_start@@Base+0x4660>
   26134:	str	r0, [fp, #-60]	; 0xffffffc4
   26138:	b	2627c <_start@@Base+0x11c84>
   2613c:	nop	{0}
   26140:	b	261ac <_start@@Base+0x11bb4>
   26144:	nop	{0}
   26148:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   2614c:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   26150:	ldrshvc	pc, [pc, #255]	; 26257 <_start@@Base+0x11c5f>	; <UNPREDICTABLE>
   26154:	cmnmi	pc, #28416	; 0x6f00
   26158:	andeq	r0, r0, r0
   2615c:	cmnmi	lr, r0, lsl #18
   26160:	andeq	r0, r0, r0
   26164:	strbtmi	r6, [pc], -r0, lsl #30
   26168:	andvc	r0, r0, #0
   2616c:	cmnmi	pc, #28416	; 0x6f00
   26170:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   26174:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   26178:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   2617c:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   26180:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   26184:	mcrvs	7, 3, r6, cr5, cr15, {2}
   26188:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   2618c:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   26190:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   26194:	mcrvs	7, 3, r6, cr5, cr15, {2}
   26198:	cfldrdvs	mvd7, [r0, #-484]!	; 0xfffffe1c
   2619c:	cdpvs	4, 6, cr7, cr15, cr5, {3}
   261a0:	andeq	r0, r0, r0
   261a4:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   261a8:	nop	{0}
   261ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   261b0:	sub	r1, pc, #32
   261b4:	ldrd	r0, [r1]
   261b8:	cmp	r3, r1
   261bc:	cmpeq	r2, r0
   261c0:	bne	26274 <_start@@Base+0x11c7c>
   261c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   261c8:	add	r3, r3, #8
   261cc:	str	r3, [fp, #-60]	; 0xffffffc4
   261d0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   261d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   261d8:	bl	14ffc <_start@@Base+0xa04>
   261dc:	strd	r0, [fp, #-44]	; 0xffffffd4
   261e0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   261e4:	mov	r0, #0
   261e8:	mvn	r1, #0
   261ec:	and	r4, r2, r0
   261f0:	and	r5, r3, r1
   261f4:	sub	r3, pc, #92	; 0x5c
   261f8:	ldrd	r2, [r3]
   261fc:	cmp	r5, r3
   26200:	cmpeq	r4, r2
   26204:	bne	2626c <_start@@Base+0x11c74>
   26208:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2620c:	str	r3, [fp, #-48]	; 0xffffffd0
   26210:	mov	r3, #4
   26214:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26218:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2621c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26220:	bl	15050 <_start@@Base+0xa58>
   26224:	str	r0, [fp, #-60]	; 0xffffffc4
   26228:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2622c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26230:	cmp	r2, r3
   26234:	beq	26264 <_start@@Base+0x11c6c>
   26238:	ldr	r3, [fp, #8]
   2623c:	str	r3, [sp, #4]
   26240:	ldr	r3, [fp, #4]
   26244:	str	r3, [sp]
   26248:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2624c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26250:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26254:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26258:	bl	1a4e8 <_start@@Base+0x5ef0>
   2625c:	str	r0, [fp, #-60]	; 0xffffffc4
   26260:	b	2627c <_start@@Base+0x11c84>
   26264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26268:	b	26280 <_start@@Base+0x11c88>
   2626c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26270:	b	26280 <_start@@Base+0x11c88>
   26274:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26278:	b	26280 <_start@@Base+0x11c88>
   2627c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26280:	mov	r0, r3
   26284:	sub	sp, fp, #28
   26288:	ldrd	r4, [sp]
   2628c:	ldrd	r6, [sp, #8]
   26290:	ldrd	r8, [sp, #16]
   26294:	ldr	fp, [sp, #24]
   26298:	add	sp, sp, #28
   2629c:	pop	{pc}		; (ldr pc, [sp], #4)
   262a0:	push	{fp}		; (str fp, [sp, #-4]!)
   262a4:	add	fp, sp, #0
   262a8:	sub	sp, sp, #20
   262ac:	str	r0, [fp, #-8]
   262b0:	str	r1, [fp, #-12]
   262b4:	str	r2, [fp, #-16]
   262b8:	str	r3, [fp, #-20]	; 0xffffffec
   262bc:	ldr	r3, [fp, #-12]
   262c0:	mov	r0, r3
   262c4:	add	sp, fp, #0
   262c8:	pop	{fp}		; (ldr fp, [sp], #4)
   262cc:	bx	lr
   262d0:	push	{fp}		; (str fp, [sp, #-4]!)
   262d4:	add	fp, sp, #0
   262d8:	sub	sp, sp, #20
   262dc:	str	r0, [fp, #-8]
   262e0:	str	r1, [fp, #-12]
   262e4:	str	r2, [fp, #-16]
   262e8:	str	r3, [fp, #-20]	; 0xffffffec
   262ec:	ldr	r3, [fp, #-12]
   262f0:	mov	r0, r3
   262f4:	add	sp, fp, #0
   262f8:	pop	{fp}		; (ldr fp, [sp], #4)
   262fc:	bx	lr
   26300:	strd	r4, [sp, #-16]!
   26304:	str	fp, [sp, #8]
   26308:	str	lr, [sp, #12]
   2630c:	add	fp, sp, #12
   26310:	sub	sp, sp, #48	; 0x30
   26314:	str	r0, [fp, #-40]	; 0xffffffd8
   26318:	str	r1, [fp, #-44]	; 0xffffffd4
   2631c:	str	r2, [fp, #-48]	; 0xffffffd0
   26320:	str	r3, [fp, #-52]	; 0xffffffcc
   26324:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26328:	str	r3, [fp, #-16]
   2632c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26334:	bl	14ffc <_start@@Base+0xa04>
   26338:	strd	r0, [fp, #-28]	; 0xffffffe4
   2633c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   26340:	add	r1, pc, #216	; 0xd8
   26344:	ldrd	r0, [r1]
   26348:	cmp	r3, r1
   2634c:	cmpeq	r2, r0
   26350:	bne	26400 <_start@@Base+0x11e08>
   26354:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26358:	add	r3, r3, #8
   2635c:	str	r3, [fp, #-44]	; 0xffffffd4
   26360:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26368:	bl	14ffc <_start@@Base+0xa04>
   2636c:	strd	r0, [fp, #-28]	; 0xffffffe4
   26370:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   26374:	mov	r0, #0
   26378:	mov	r1, #-16777216	; 0xff000000
   2637c:	and	r4, r2, r0
   26380:	and	r5, r3, r1
   26384:	cmp	r5, #1912602624	; 0x72000000
   26388:	cmpeq	r4, #0
   2638c:	bne	263f8 <_start@@Base+0x11e00>
   26390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26394:	str	r3, [fp, #-32]	; 0xffffffe0
   26398:	mov	r3, #1
   2639c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   263a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   263a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   263a8:	bl	15050 <_start@@Base+0xa58>
   263ac:	str	r0, [fp, #-44]	; 0xffffffd4
   263b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   263b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   263b8:	cmp	r2, r3
   263bc:	beq	263f0 <_start@@Base+0x11df8>
   263c0:	ldr	r3, [fp, #8]
   263c4:	str	r3, [sp, #4]
   263c8:	ldr	r3, [fp, #4]
   263cc:	str	r3, [sp]
   263d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   263d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   263d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   263dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   263e0:	bl	24c44 <_start@@Base+0x1064c>
   263e4:	str	r0, [fp, #-44]	; 0xffffffd4
   263e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   263ec:	b	26404 <_start@@Base+0x11e0c>
   263f0:	ldr	r3, [fp, #-16]
   263f4:	b	26404 <_start@@Base+0x11e0c>
   263f8:	ldr	r3, [fp, #-16]
   263fc:	b	26404 <_start@@Base+0x11e0c>
   26400:	ldr	r3, [fp, #-16]
   26404:	mov	r0, r3
   26408:	sub	sp, fp, #12
   2640c:	ldrd	r4, [sp]
   26410:	ldr	fp, [sp, #8]
   26414:	add	sp, sp, #12
   26418:	pop	{pc}		; (ldr pc, [sp], #4)
   2641c:	nop	{0}
   26420:	cmnvs	r3, r5, ror #8
   26424:	cmnmi	r8, #-2147483620	; 0x8000001c
   26428:	strd	r4, [sp, #-16]!
   2642c:	str	fp, [sp, #8]
   26430:	str	lr, [sp, #12]
   26434:	add	fp, sp, #12
   26438:	sub	sp, sp, #48	; 0x30
   2643c:	str	r0, [fp, #-40]	; 0xffffffd8
   26440:	str	r1, [fp, #-44]	; 0xffffffd4
   26444:	str	r2, [fp, #-48]	; 0xffffffd0
   26448:	str	r3, [fp, #-52]	; 0xffffffcc
   2644c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26450:	str	r3, [fp, #-16]
   26454:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26458:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2645c:	bl	14ffc <_start@@Base+0xa04>
   26460:	strd	r0, [fp, #-28]	; 0xffffffe4
   26464:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   26468:	add	r1, pc, #224	; 0xe0
   2646c:	ldrd	r0, [r1]
   26470:	cmp	r3, r1
   26474:	cmpeq	r2, r0
   26478:	bne	26530 <_start@@Base+0x11f38>
   2647c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26480:	add	r3, r3, #8
   26484:	str	r3, [fp, #-44]	; 0xffffffd4
   26488:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2648c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26490:	bl	14ffc <_start@@Base+0xa04>
   26494:	strd	r0, [fp, #-28]	; 0xffffffe4
   26498:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2649c:	mov	r0, #0
   264a0:	mvn	r1, #255	; 0xff
   264a4:	and	r4, r2, r0
   264a8:	and	r5, r3, r1
   264ac:	add	r3, pc, #164	; 0xa4
   264b0:	ldrd	r2, [r3]
   264b4:	cmp	r5, r3
   264b8:	cmpeq	r4, r2
   264bc:	bne	26528 <_start@@Base+0x11f30>
   264c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   264c4:	str	r3, [fp, #-32]	; 0xffffffe0
   264c8:	mov	r3, #3
   264cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   264d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   264d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   264d8:	bl	15050 <_start@@Base+0xa58>
   264dc:	str	r0, [fp, #-44]	; 0xffffffd4
   264e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   264e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   264e8:	cmp	r2, r3
   264ec:	beq	26520 <_start@@Base+0x11f28>
   264f0:	ldr	r3, [fp, #8]
   264f4:	str	r3, [sp, #4]
   264f8:	ldr	r3, [fp, #4]
   264fc:	str	r3, [sp]
   26500:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26504:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26508:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2650c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26510:	bl	17840 <_start@@Base+0x3248>
   26514:	str	r0, [fp, #-44]	; 0xffffffd4
   26518:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2651c:	b	26534 <_start@@Base+0x11f3c>
   26520:	ldr	r3, [fp, #-16]
   26524:	b	26534 <_start@@Base+0x11f3c>
   26528:	ldr	r3, [fp, #-16]
   2652c:	b	26534 <_start@@Base+0x11f3c>
   26530:	ldr	r3, [fp, #-16]
   26534:	mov	r0, r3
   26538:	sub	sp, fp, #12
   2653c:	ldrd	r4, [sp]
   26540:	ldr	fp, [sp, #8]
   26544:	add	sp, sp, #12
   26548:	pop	{pc}		; (ldr pc, [sp], #4)
   2654c:	nop	{0}
   26550:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   26554:	ldrbtmi	r6, [r2], -sp, ror #30
   26558:	andeq	r0, r0, r0
   2655c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   26560:	strd	r4, [sp, #-32]!	; 0xffffffe0
   26564:	strd	r6, [sp, #8]
   26568:	strd	r8, [sp, #16]
   2656c:	str	fp, [sp, #24]
   26570:	str	lr, [sp, #28]
   26574:	add	fp, sp, #28
   26578:	sub	sp, sp, #96	; 0x60
   2657c:	str	r0, [fp, #-56]	; 0xffffffc8
   26580:	str	r1, [fp, #-60]	; 0xffffffc4
   26584:	str	r2, [fp, #-64]	; 0xffffffc0
   26588:	str	r3, [fp, #-68]	; 0xffffffbc
   2658c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26590:	str	r3, [fp, #-32]	; 0xffffffe0
   26594:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26598:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2659c:	bl	14ffc <_start@@Base+0xa04>
   265a0:	strd	r0, [fp, #-44]	; 0xffffffd4
   265a4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   265a8:	add	r3, pc, #816	; 0x330
   265ac:	ldrd	r2, [r3]
   265b0:	cmp	r1, r3
   265b4:	cmpeq	r0, r2
   265b8:	bhi	266c0 <_start@@Base+0x120c8>
   265bc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   265c0:	add	r1, pc, #800	; 0x320
   265c4:	ldrd	r0, [r1]
   265c8:	cmp	r3, r1
   265cc:	cmpeq	r2, r0
   265d0:	bne	266b8 <_start@@Base+0x120c0>
   265d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   265d8:	add	r3, r3, #8
   265dc:	str	r3, [fp, #-60]	; 0xffffffc4
   265e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   265e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   265e8:	bl	14ffc <_start@@Base+0xa04>
   265ec:	strd	r0, [fp, #-44]	; 0xffffffd4
   265f0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   265f4:	add	r1, pc, #756	; 0x2f4
   265f8:	ldrd	r0, [r1]
   265fc:	cmp	r3, r1
   26600:	cmpeq	r2, r0
   26604:	bne	266b0 <_start@@Base+0x120b8>
   26608:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2660c:	add	r3, r3, #8
   26610:	str	r3, [fp, #-60]	; 0xffffffc4
   26614:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26618:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2661c:	bl	14ffc <_start@@Base+0xa04>
   26620:	strd	r0, [fp, #-44]	; 0xffffffd4
   26624:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26628:	mov	r0, #0
   2662c:	mov	r1, #-16777216	; 0xff000000
   26630:	and	r4, r2, r0
   26634:	and	r5, r3, r1
   26638:	cmp	r5, #1912602624	; 0x72000000
   2663c:	cmpeq	r4, #0
   26640:	bne	266a8 <_start@@Base+0x120b0>
   26644:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26648:	str	r3, [fp, #-48]	; 0xffffffd0
   2664c:	mov	r3, #1
   26650:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26654:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26658:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2665c:	bl	15050 <_start@@Base+0xa58>
   26660:	str	r0, [fp, #-60]	; 0xffffffc4
   26664:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26668:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2666c:	cmp	r2, r3
   26670:	beq	266a0 <_start@@Base+0x120a8>
   26674:	ldr	r3, [fp, #8]
   26678:	str	r3, [sp, #4]
   2667c:	ldr	r3, [fp, #4]
   26680:	str	r3, [sp]
   26684:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26688:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2668c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26690:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26694:	bl	24c44 <_start@@Base+0x1064c>
   26698:	str	r0, [fp, #-60]	; 0xffffffc4
   2669c:	b	26f68 <_start@@Base+0x12970>
   266a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   266a4:	b	26f6c <_start@@Base+0x12974>
   266a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   266ac:	b	26f6c <_start@@Base+0x12974>
   266b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   266b4:	b	26f6c <_start@@Base+0x12974>
   266b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   266bc:	b	26f6c <_start@@Base+0x12974>
   266c0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   266c4:	add	r3, pc, #556	; 0x22c
   266c8:	ldrd	r2, [r3]
   266cc:	cmp	r1, r3
   266d0:	cmpeq	r0, r2
   266d4:	bne	26dec <_start@@Base+0x127f4>
   266d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   266dc:	add	r3, r3, #8
   266e0:	str	r3, [fp, #-60]	; 0xffffffc4
   266e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   266e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   266ec:	bl	14ffc <_start@@Base+0xa04>
   266f0:	strd	r0, [fp, #-44]	; 0xffffffd4
   266f4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   266f8:	add	r3, pc, #512	; 0x200
   266fc:	ldrd	r2, [r3]
   26700:	cmp	r1, r3
   26704:	cmpeq	r0, r2
   26708:	bhi	26a5c <_start@@Base+0x12464>
   2670c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26710:	add	r1, pc, #496	; 0x1f0
   26714:	ldrd	r0, [r1]
   26718:	cmp	r3, r1
   2671c:	cmpeq	r2, r0
   26720:	bhi	26808 <_start@@Base+0x12210>
   26724:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26728:	add	r1, pc, #480	; 0x1e0
   2672c:	ldrd	r0, [r1]
   26730:	cmp	r3, r1
   26734:	cmpeq	r2, r0
   26738:	bne	26800 <_start@@Base+0x12208>
   2673c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26740:	add	r3, r3, #8
   26744:	str	r3, [fp, #-60]	; 0xffffffc4
   26748:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2674c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26750:	bl	14ffc <_start@@Base+0xa04>
   26754:	strd	r0, [fp, #-44]	; 0xffffffd4
   26758:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2675c:	mov	r0, #0
   26760:	mov	r1, #0
   26764:	movt	r1, #65535	; 0xffff
   26768:	and	ip, r2, r0
   2676c:	str	ip, [fp, #-76]	; 0xffffffb4
   26770:	and	r3, r3, r1
   26774:	str	r3, [fp, #-72]	; 0xffffffb8
   26778:	mov	r2, #0
   2677c:	mov	r3, #0
   26780:	movt	r3, #28281	; 0x6e79
   26784:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   26788:	cmp	r1, r3
   2678c:	cmpeq	r0, r2
   26790:	bne	267f8 <_start@@Base+0x12200>
   26794:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26798:	str	r3, [fp, #-48]	; 0xffffffd0
   2679c:	mov	r3, #2
   267a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   267a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   267a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   267ac:	bl	15050 <_start@@Base+0xa58>
   267b0:	str	r0, [fp, #-60]	; 0xffffffc4
   267b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   267b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   267bc:	cmp	r2, r3
   267c0:	beq	267f0 <_start@@Base+0x121f8>
   267c4:	ldr	r3, [fp, #8]
   267c8:	str	r3, [sp, #4]
   267cc:	ldr	r3, [fp, #4]
   267d0:	str	r3, [sp]
   267d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   267d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   267dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   267e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   267e4:	bl	19840 <_start@@Base+0x5248>
   267e8:	str	r0, [fp, #-60]	; 0xffffffc4
   267ec:	b	26f68 <_start@@Base+0x12970>
   267f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   267f4:	b	26f6c <_start@@Base+0x12974>
   267f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   267fc:	b	26f6c <_start@@Base+0x12974>
   26800:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26804:	b	26f6c <_start@@Base+0x12974>
   26808:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2680c:	add	r1, pc, #260	; 0x104
   26810:	ldrd	r0, [r1]
   26814:	cmp	r3, r1
   26818:	cmpeq	r2, r0
   2681c:	bne	26978 <_start@@Base+0x12380>
   26820:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26824:	add	r3, r3, #8
   26828:	str	r3, [fp, #-60]	; 0xffffffc4
   2682c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26830:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26834:	bl	14ffc <_start@@Base+0xa04>
   26838:	strd	r0, [fp, #-44]	; 0xffffffd4
   2683c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26840:	mov	r0, #0
   26844:	mvn	r1, #0
   26848:	and	ip, r2, r0
   2684c:	str	ip, [fp, #-84]	; 0xffffffac
   26850:	and	r3, r3, r1
   26854:	str	r3, [fp, #-80]	; 0xffffffb0
   26858:	add	r3, pc, #192	; 0xc0
   2685c:	ldrd	r2, [r3]
   26860:	ldrd	r0, [fp, #-84]	; 0xffffffac
   26864:	cmp	r1, r3
   26868:	cmpeq	r0, r2
   2686c:	bne	268d4 <_start@@Base+0x122dc>
   26870:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26874:	str	r3, [fp, #-48]	; 0xffffffd0
   26878:	mov	r3, #4
   2687c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26880:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26884:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26888:	bl	15050 <_start@@Base+0xa58>
   2688c:	str	r0, [fp, #-60]	; 0xffffffc4
   26890:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26894:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26898:	cmp	r2, r3
   2689c:	beq	268cc <_start@@Base+0x122d4>
   268a0:	ldr	r3, [fp, #8]
   268a4:	str	r3, [sp, #4]
   268a8:	ldr	r3, [fp, #4]
   268ac:	str	r3, [sp]
   268b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   268b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   268b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   268bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   268c0:	bl	19408 <_start@@Base+0x4e10>
   268c4:	str	r0, [fp, #-60]	; 0xffffffc4
   268c8:	b	26f68 <_start@@Base+0x12970>
   268cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   268d0:	b	26f6c <_start@@Base+0x12974>
   268d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   268d8:	b	26f6c <_start@@Base+0x12974>
   268dc:	nop	{0}
   268e0:	stclvs	14, cr2, [r5, #-272]!	; 0xfffffef0
   268e4:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   268e8:	cmnvs	r3, lr, lsr #18
   268ec:			; <UNDEFINED> instruction: 0x46616e74
   268f0:	cmnvs	r3, r5, ror #8
   268f4:	cmnmi	r8, #-2147483620	; 0x8000001c
   268f8:	stclvs	14, cr2, [r5, #-276]!	; 0xfffffeec
   268fc:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   26900:	stclvs	14, cr2, [r5], #-412	; 0xfffffe64
   26904:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26908:	stclvs	14, cr2, [r5], #-264	; 0xfffffef8
   2690c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26910:	stclvs	14, cr2, [r5], #-260	; 0xfffffefc
   26914:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26918:	stclvs	14, cr2, [r5], #-268	; 0xfffffef4
   2691c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26920:	andeq	r0, r0, r0
   26924:	svcvs	0x006c6f72
   26928:	stclvs	14, cr2, [r5], #-280	; 0xfffffee8
   2692c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26930:	stclvs	14, cr2, [r5], #-416	; 0xfffffe60
   26934:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26938:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   2693c:	ldrbvs	r5, [r8, #-3941]!	; 0xfffff09b
   26940:	stclvs	14, cr2, [r5], #-436	; 0xfffffe4c
   26944:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26948:	stclvs	14, cr2, [r5], #-420	; 0xfffffe5c
   2694c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26950:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   26954:	cdpvs	15, 7, cr5, cr4, cr5, {3}
   26958:	stclvs	14, cr2, [r5], #-440	; 0xfffffe48
   2695c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   26960:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   26964:	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
   26968:	rsbsvc	r7, r4, r5, ror #18
   2696c:	svcvs	0x0074656d
   26970:	andeq	r0, r0, r0
   26974:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   26978:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2697c:	sub	r1, pc, #92	; 0x5c
   26980:	ldrd	r0, [r1]
   26984:	cmp	r3, r1
   26988:	cmpeq	r2, r0
   2698c:	bne	26a54 <_start@@Base+0x1245c>
   26990:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26994:	add	r3, r3, #8
   26998:	str	r3, [fp, #-60]	; 0xffffffc4
   2699c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   269a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   269a4:	bl	14ffc <_start@@Base+0xa04>
   269a8:	strd	r0, [fp, #-44]	; 0xffffffd4
   269ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   269b0:	mov	r0, #0
   269b4:	mov	r1, #0
   269b8:	movt	r1, #65535	; 0xffff
   269bc:	and	ip, r2, r0
   269c0:	str	ip, [fp, #-92]	; 0xffffffa4
   269c4:	and	r3, r3, r1
   269c8:	str	r3, [fp, #-88]	; 0xffffffa8
   269cc:	mov	r2, #0
   269d0:	mov	r3, #0
   269d4:	movt	r3, #28527	; 0x6f6f
   269d8:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   269dc:	cmp	r1, r3
   269e0:	cmpeq	r0, r2
   269e4:	bne	26a4c <_start@@Base+0x12454>
   269e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   269ec:	str	r3, [fp, #-48]	; 0xffffffd0
   269f0:	mov	r3, #2
   269f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   269f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   269fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26a00:	bl	15050 <_start@@Base+0xa58>
   26a04:	str	r0, [fp, #-60]	; 0xffffffc4
   26a08:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26a0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26a10:	cmp	r2, r3
   26a14:	beq	26a44 <_start@@Base+0x1244c>
   26a18:	ldr	r3, [fp, #8]
   26a1c:	str	r3, [sp, #4]
   26a20:	ldr	r3, [fp, #4]
   26a24:	str	r3, [sp]
   26a28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26a2c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26a30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26a34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26a38:	bl	18a54 <_start@@Base+0x445c>
   26a3c:	str	r0, [fp, #-60]	; 0xffffffc4
   26a40:	b	26f68 <_start@@Base+0x12970>
   26a44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a48:	b	26f6c <_start@@Base+0x12974>
   26a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a50:	b	26f6c <_start@@Base+0x12974>
   26a54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a58:	b	26f6c <_start@@Base+0x12974>
   26a5c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26a60:	sub	r1, pc, #312	; 0x138
   26a64:	ldrd	r0, [r1]
   26a68:	cmp	r3, r1
   26a6c:	cmpeq	r2, r0
   26a70:	bhi	26b50 <_start@@Base+0x12558>
   26a74:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26a78:	sub	r1, pc, #336	; 0x150
   26a7c:	ldrd	r0, [r1]
   26a80:	cmp	r3, r1
   26a84:	cmpeq	r2, r0
   26a88:	bne	26b48 <_start@@Base+0x12550>
   26a8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26a90:	add	r3, r3, #8
   26a94:	str	r3, [fp, #-60]	; 0xffffffc4
   26a98:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26a9c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26aa0:	bl	14ffc <_start@@Base+0xa04>
   26aa4:	strd	r0, [fp, #-44]	; 0xffffffd4
   26aa8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26aac:	mvn	r0, #255	; 0xff
   26ab0:	mvn	r1, #0
   26ab4:	and	ip, r2, r0
   26ab8:	str	ip, [fp, #-100]	; 0xffffff9c
   26abc:	and	r3, r3, r1
   26ac0:	str	r3, [fp, #-96]	; 0xffffffa0
   26ac4:	sub	r3, pc, #404	; 0x194
   26ac8:	ldrd	r2, [r3]
   26acc:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   26ad0:	cmp	r1, r3
   26ad4:	cmpeq	r0, r2
   26ad8:	bne	26b40 <_start@@Base+0x12548>
   26adc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ae0:	str	r3, [fp, #-48]	; 0xffffffd0
   26ae4:	mov	r3, #7
   26ae8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26aec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26af0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26af4:	bl	15050 <_start@@Base+0xa58>
   26af8:	str	r0, [fp, #-60]	; 0xffffffc4
   26afc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26b00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26b04:	cmp	r2, r3
   26b08:	beq	26b38 <_start@@Base+0x12540>
   26b0c:	ldr	r3, [fp, #8]
   26b10:	str	r3, [sp, #4]
   26b14:	ldr	r3, [fp, #4]
   26b18:	str	r3, [sp]
   26b1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26b20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26b24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26b28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26b2c:	bl	191b0 <_start@@Base+0x4bb8>
   26b30:	str	r0, [fp, #-60]	; 0xffffffc4
   26b34:	b	26f68 <_start@@Base+0x12970>
   26b38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b3c:	b	26f6c <_start@@Base+0x12974>
   26b40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b44:	b	26f6c <_start@@Base+0x12974>
   26b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b4c:	b	26f6c <_start@@Base+0x12974>
   26b50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26b54:	sub	r1, pc, #540	; 0x21c
   26b58:	ldrd	r0, [r1]
   26b5c:	cmp	r3, r1
   26b60:	cmpeq	r2, r0
   26b64:	bhi	26c44 <_start@@Base+0x1264c>
   26b68:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26b6c:	sub	r1, pc, #556	; 0x22c
   26b70:	ldrd	r0, [r1]
   26b74:	cmp	r3, r1
   26b78:	cmpeq	r2, r0
   26b7c:	bne	26c3c <_start@@Base+0x12644>
   26b80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26b84:	add	r3, r3, #8
   26b88:	str	r3, [fp, #-60]	; 0xffffffc4
   26b8c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26b90:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26b94:	bl	14ffc <_start@@Base+0xa04>
   26b98:	strd	r0, [fp, #-44]	; 0xffffffd4
   26b9c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26ba0:	mvn	r0, #255	; 0xff
   26ba4:	mvn	r1, #0
   26ba8:	and	ip, r2, r0
   26bac:	str	ip, [fp, #-108]	; 0xffffff94
   26bb0:	and	r3, r3, r1
   26bb4:	str	r3, [fp, #-104]	; 0xffffff98
   26bb8:	sub	r3, pc, #624	; 0x270
   26bbc:	ldrd	r2, [r3]
   26bc0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   26bc4:	cmp	r1, r3
   26bc8:	cmpeq	r0, r2
   26bcc:	bne	26c34 <_start@@Base+0x1263c>
   26bd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26bd4:	str	r3, [fp, #-48]	; 0xffffffd0
   26bd8:	mov	r3, #7
   26bdc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26be0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26be4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26be8:	bl	15050 <_start@@Base+0xa58>
   26bec:	str	r0, [fp, #-60]	; 0xffffffc4
   26bf0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26bf4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26bf8:	cmp	r2, r3
   26bfc:	beq	26c2c <_start@@Base+0x12634>
   26c00:	ldr	r3, [fp, #8]
   26c04:	str	r3, [sp, #4]
   26c08:	ldr	r3, [fp, #4]
   26c0c:	str	r3, [sp]
   26c10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26c14:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26c18:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26c1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26c20:	bl	18ea0 <_start@@Base+0x48a8>
   26c24:	str	r0, [fp, #-60]	; 0xffffffc4
   26c28:	b	26f68 <_start@@Base+0x12970>
   26c2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26c30:	b	26f6c <_start@@Base+0x12974>
   26c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26c38:	b	26f6c <_start@@Base+0x12974>
   26c3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26c40:	b	26f6c <_start@@Base+0x12974>
   26c44:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26c48:	sub	r1, pc, #760	; 0x2f8
   26c4c:	ldrd	r0, [r1]
   26c50:	cmp	r3, r1
   26c54:	cmpeq	r2, r0
   26c58:	bne	26de4 <_start@@Base+0x127ec>
   26c5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26c60:	add	r3, r3, #8
   26c64:	str	r3, [fp, #-60]	; 0xffffffc4
   26c68:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26c6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26c70:	bl	14ffc <_start@@Base+0xa04>
   26c74:	strd	r0, [fp, #-44]	; 0xffffffd4
   26c78:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26c7c:	mvn	r0, #255	; 0xff
   26c80:	mvn	r1, #0
   26c84:	and	ip, r2, r0
   26c88:	str	ip, [fp, #-116]	; 0xffffff8c
   26c8c:	and	r3, r3, r1
   26c90:	str	r3, [fp, #-112]	; 0xffffff90
   26c94:	sub	r3, pc, #828	; 0x33c
   26c98:	ldrd	r2, [r3]
   26c9c:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   26ca0:	cmp	r1, r3
   26ca4:	cmpeq	r0, r2
   26ca8:	bne	26d08 <_start@@Base+0x12710>
   26cac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26cb0:	str	r3, [fp, #-48]	; 0xffffffd0
   26cb4:	mov	r3, #7
   26cb8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26cbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26cc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26cc4:	bl	15050 <_start@@Base+0xa58>
   26cc8:	str	r0, [fp, #-60]	; 0xffffffc4
   26ccc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26cd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26cd4:	cmp	r2, r3
   26cd8:	beq	26d10 <_start@@Base+0x12718>
   26cdc:	ldr	r3, [fp, #8]
   26ce0:	str	r3, [sp, #4]
   26ce4:	ldr	r3, [fp, #4]
   26ce8:	str	r3, [sp]
   26cec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26cf0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26cf4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26cf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26cfc:	bl	18c58 <_start@@Base+0x4660>
   26d00:	str	r0, [fp, #-60]	; 0xffffffc4
   26d04:	b	26f68 <_start@@Base+0x12970>
   26d08:	nop	{0}
   26d0c:	b	26d14 <_start@@Base+0x1271c>
   26d10:	nop	{0}
   26d14:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26d18:	sub	r1, pc, #952	; 0x3b8
   26d1c:	ldrd	r0, [r1]
   26d20:	cmp	r3, r1
   26d24:	cmpeq	r2, r0
   26d28:	bne	26ddc <_start@@Base+0x127e4>
   26d2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d30:	add	r3, r3, #8
   26d34:	str	r3, [fp, #-60]	; 0xffffffc4
   26d38:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26d3c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26d40:	bl	14ffc <_start@@Base+0xa04>
   26d44:	strd	r0, [fp, #-44]	; 0xffffffd4
   26d48:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26d4c:	mov	r0, #0
   26d50:	mvn	r1, #255	; 0xff
   26d54:	and	r8, r2, r0
   26d58:	and	r9, r3, r1
   26d5c:	sub	r3, pc, #1012	; 0x3f4
   26d60:	ldrd	r2, [r3]
   26d64:	cmp	r9, r3
   26d68:	cmpeq	r8, r2
   26d6c:	bne	26dd4 <_start@@Base+0x127dc>
   26d70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d74:	str	r3, [fp, #-48]	; 0xffffffd0
   26d78:	mov	r3, #3
   26d7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26d80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26d84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26d88:	bl	15050 <_start@@Base+0xa58>
   26d8c:	str	r0, [fp, #-60]	; 0xffffffc4
   26d90:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26d94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26d98:	cmp	r2, r3
   26d9c:	beq	26dcc <_start@@Base+0x127d4>
   26da0:	ldr	r3, [fp, #8]
   26da4:	str	r3, [sp, #4]
   26da8:	ldr	r3, [fp, #4]
   26dac:	str	r3, [sp]
   26db0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26db4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26db8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26dbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26dc0:	bl	1a4e8 <_start@@Base+0x5ef0>
   26dc4:	str	r0, [fp, #-60]	; 0xffffffc4
   26dc8:	b	26f68 <_start@@Base+0x12970>
   26dcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26dd0:	b	26f6c <_start@@Base+0x12974>
   26dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26dd8:	b	26f6c <_start@@Base+0x12974>
   26ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26de0:	b	26f6c <_start@@Base+0x12974>
   26de4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26de8:	b	26f6c <_start@@Base+0x12974>
   26dec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26df0:	add	r1, pc, #408	; 0x198
   26df4:	ldrd	r0, [r1]
   26df8:	cmp	r3, r1
   26dfc:	cmpeq	r2, r0
   26e00:	bne	26f60 <_start@@Base+0x12968>
   26e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e08:	add	r3, r3, #8
   26e0c:	str	r3, [fp, #-60]	; 0xffffffc4
   26e10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26e14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26e18:	bl	14ffc <_start@@Base+0xa04>
   26e1c:	strd	r0, [fp, #-44]	; 0xffffffd4
   26e20:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26e24:	add	r1, pc, #364	; 0x16c
   26e28:	ldrd	r0, [r1]
   26e2c:	cmp	r3, r1
   26e30:	cmpeq	r2, r0
   26e34:	bne	26f58 <_start@@Base+0x12960>
   26e38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e3c:	add	r3, r3, #8
   26e40:	str	r3, [fp, #-60]	; 0xffffffc4
   26e44:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26e48:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26e4c:	bl	14ffc <_start@@Base+0xa04>
   26e50:	strd	r0, [fp, #-44]	; 0xffffffd4
   26e54:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26e58:	add	r1, pc, #320	; 0x140
   26e5c:	ldrd	r0, [r1]
   26e60:	cmp	r3, r1
   26e64:	cmpeq	r2, r0
   26e68:	bne	26f50 <_start@@Base+0x12958>
   26e6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e70:	add	r3, r3, #8
   26e74:	str	r3, [fp, #-60]	; 0xffffffc4
   26e78:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26e7c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26e80:	bl	14ffc <_start@@Base+0xa04>
   26e84:	strd	r0, [fp, #-44]	; 0xffffffd4
   26e88:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26e8c:	add	r1, pc, #276	; 0x114
   26e90:	ldrd	r0, [r1]
   26e94:	cmp	r3, r1
   26e98:	cmpeq	r2, r0
   26e9c:	bne	26f48 <_start@@Base+0x12950>
   26ea0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ea4:	add	r3, r3, #8
   26ea8:	str	r3, [fp, #-60]	; 0xffffffc4
   26eac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26eb0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26eb4:	bl	14ffc <_start@@Base+0xa04>
   26eb8:	strd	r0, [fp, #-44]	; 0xffffffd4
   26ebc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   26ec0:	mov	r0, #0
   26ec4:	mov	r1, #-16777216	; 0xff000000
   26ec8:	and	r6, r2, r0
   26ecc:	and	r7, r3, r1
   26ed0:	cmp	r7, #1694498816	; 0x65000000
   26ed4:	cmpeq	r6, #0
   26ed8:	bne	26f40 <_start@@Base+0x12948>
   26edc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ee0:	str	r3, [fp, #-48]	; 0xffffffd0
   26ee4:	mov	r3, #1
   26ee8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26eec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26ef0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26ef4:	bl	15050 <_start@@Base+0xa58>
   26ef8:	str	r0, [fp, #-60]	; 0xffffffc4
   26efc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26f00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26f04:	cmp	r2, r3
   26f08:	beq	26f38 <_start@@Base+0x12940>
   26f0c:	ldr	r3, [fp, #8]
   26f10:	str	r3, [sp, #4]
   26f14:	ldr	r3, [fp, #4]
   26f18:	str	r3, [sp]
   26f1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26f20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26f24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26f28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26f2c:	bl	17840 <_start@@Base+0x3248>
   26f30:	str	r0, [fp, #-60]	; 0xffffffc4
   26f34:	b	26f68 <_start@@Base+0x12970>
   26f38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f3c:	b	26f6c <_start@@Base+0x12974>
   26f40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f44:	b	26f6c <_start@@Base+0x12974>
   26f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f4c:	b	26f6c <_start@@Base+0x12974>
   26f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f54:	b	26f6c <_start@@Base+0x12974>
   26f58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f5c:	b	26f6c <_start@@Base+0x12974>
   26f60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f64:	b	26f6c <_start@@Base+0x12974>
   26f68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26f6c:	mov	r0, r3
   26f70:	sub	sp, fp, #28
   26f74:	ldrd	r4, [sp]
   26f78:	ldrd	r6, [sp, #8]
   26f7c:	ldrd	r8, [sp, #16]
   26f80:	ldr	fp, [sp, #24]
   26f84:	add	sp, sp, #28
   26f88:	pop	{pc}		; (ldr pc, [sp], #4)
   26f8c:	nop	{0}
   26f90:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   26f94:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   26f98:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   26f9c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   26fa0:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   26fa4:	cmnpl	r0, #-1073741800	; 0xc0000018
   26fa8:	cmnvs	ip, #100, 10	; 0x19000000
   26fac:	svcvs	0x006d496e
   26fb0:	str	fp, [sp, #-8]!
   26fb4:	str	lr, [sp, #4]
   26fb8:	add	fp, sp, #4
   26fbc:	sub	sp, sp, #72	; 0x48
   26fc0:	str	r0, [fp, #-56]	; 0xffffffc8
   26fc4:	str	r1, [fp, #-60]	; 0xffffffc4
   26fc8:	str	r2, [fp, #-64]	; 0xffffffc0
   26fcc:	str	r3, [fp, #-68]	; 0xffffffbc
   26fd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26fd4:	cmp	r3, #0
   26fd8:	bne	26fe4 <_start@@Base+0x129ec>
   26fdc:	sub	r3, fp, #44	; 0x2c
   26fe0:	b	26fe8 <_start@@Base+0x129f0>
   26fe4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26fe8:	str	r3, [fp, #-60]	; 0xffffffc4
   26fec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26ff0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26ff4:	add	r2, r2, r3
   26ff8:	ldr	r3, [fp, #4]
   26ffc:	str	r3, [sp]
   27000:	mov	r3, r2
   27004:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27008:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2700c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   27010:	bl	14bbc <_start@@Base+0x5c4>
   27014:	mov	r3, #0
   27018:	mov	r2, #0
   2701c:	ldr	r1, [pc, #156]	; 270c0 <_start@@Base+0x12ac8>
   27020:	add	r1, pc, r1
   27024:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27028:	bl	2ee20 <flatcc_builder_start_buffer@@Base>
   2702c:	mov	r3, r0
   27030:	cmp	r3, #0
   27034:	beq	27040 <_start@@Base+0x12a48>
   27038:	mvn	r3, #0
   2703c:	b	270ac <_start@@Base+0x12ab4>
   27040:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27044:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27048:	add	r2, r2, r3
   2704c:	sub	r3, fp, #48	; 0x30
   27050:	ldr	r1, [fp, #-64]	; 0xffffffc0
   27054:	ldr	r0, [fp, #-60]	; 0xffffffc4
   27058:	bl	1ed10 <_start@@Base+0xa718>
   2705c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27060:	ldr	r3, [r3, #20]
   27064:	cmp	r3, #0
   27068:	beq	27078 <_start@@Base+0x12a80>
   2706c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27070:	ldr	r3, [r3, #20]
   27074:	b	270ac <_start@@Base+0x12ab4>
   27078:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2707c:	mov	r1, r3
   27080:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27084:	bl	2ef90 <flatcc_builder_end_buffer@@Base>
   27088:	mov	r3, r0
   2708c:	cmp	r3, #0
   27090:	bne	2709c <_start@@Base+0x12aa4>
   27094:	mvn	r3, #0
   27098:	b	270ac <_start@@Base+0x12ab4>
   2709c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   270a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   270a4:	str	r2, [r3, #36]	; 0x24
   270a8:	mov	r3, #0
   270ac:	mov	r0, r3
   270b0:	sub	sp, fp, #4
   270b4:	ldr	fp, [sp]
   270b8:	add	sp, sp, #4
   270bc:	pop	{pc}		; (ldr pc, [sp], #4)
   270c0:	andeq	r6, r2, r8, lsl #30
   270c4:	push	{fp}		; (str fp, [sp, #-4]!)
   270c8:	add	fp, sp, #0
   270cc:	sub	sp, sp, #12
   270d0:	str	r0, [fp, #-8]
   270d4:	str	r1, [fp, #-12]
   270d8:	ldr	r3, [fp, #-12]
   270dc:	cmp	r3, #0
   270e0:	movne	r3, #1
   270e4:	moveq	r3, #0
   270e8:	uxtb	r3, r3
   270ec:	mov	r2, r3
   270f0:	ldr	r3, [fp, #-8]
   270f4:	strb	r2, [r3, #26]
   270f8:	nop	{0}
   270fc:	add	sp, fp, #0
   27100:	pop	{fp}		; (ldr fp, [sp], #4)
   27104:	bx	lr
   27108:	push	{fp}		; (str fp, [sp, #-4]!)
   2710c:	add	fp, sp, #0
   27110:	sub	sp, sp, #12
   27114:	str	r0, [fp, #-8]
   27118:	str	r1, [fp, #-12]
   2711c:	ldr	r3, [fp, #-12]
   27120:	cmp	r3, #0
   27124:	movne	r3, #1
   27128:	moveq	r3, #0
   2712c:	uxtb	r3, r3
   27130:	mov	r2, r3
   27134:	ldr	r3, [fp, #-8]
   27138:	strb	r2, [r3, #27]
   2713c:	nop	{0}
   27140:	add	sp, fp, #0
   27144:	pop	{fp}		; (ldr fp, [sp], #4)
   27148:	bx	lr
   2714c:	push	{fp}		; (str fp, [sp, #-4]!)
   27150:	add	fp, sp, #0
   27154:	sub	sp, sp, #12
   27158:	str	r0, [fp, #-8]
   2715c:	mov	r3, r1
   27160:	strb	r3, [fp, #-9]
   27164:	ldr	r3, [fp, #-8]
   27168:	ldrb	r2, [fp, #-9]
   2716c:	strb	r2, [r3, #25]
   27170:	nop	{0}
   27174:	add	sp, fp, #0
   27178:	pop	{fp}		; (ldr fp, [sp], #4)
   2717c:	bx	lr
   27180:	str	fp, [sp, #-8]!
   27184:	str	lr, [sp, #4]
   27188:	add	fp, sp, #4
   2718c:	sub	sp, sp, #8
   27190:	str	r0, [fp, #-8]
   27194:	mov	r1, #2
   27198:	ldr	r0, [fp, #-8]
   2719c:	bl	2714c <_start@@Base+0x12b54>
   271a0:	mov	r1, #1
   271a4:	ldr	r0, [fp, #-8]
   271a8:	bl	270c4 <_start@@Base+0x12acc>
   271ac:	mov	r1, #0
   271b0:	ldr	r0, [fp, #-8]
   271b4:	bl	27108 <_start@@Base+0x12b10>
   271b8:	nop	{0}
   271bc:	sub	sp, fp, #4
   271c0:	ldr	fp, [sp]
   271c4:	add	sp, sp, #4
   271c8:	pop	{pc}		; (ldr pc, [sp], #4)
   271cc:	str	fp, [sp, #-8]!
   271d0:	str	lr, [sp, #4]
   271d4:	add	fp, sp, #4
   271d8:	sub	sp, sp, #8
   271dc:	str	r0, [fp, #-8]
   271e0:	str	r1, [fp, #-12]
   271e4:	ldr	r3, [fp, #-12]
   271e8:	and	r3, r3, #1
   271ec:	cmp	r3, #0
   271f0:	movne	r3, #1
   271f4:	moveq	r3, #0
   271f8:	uxtb	r3, r3
   271fc:	mov	r2, r3
   27200:	ldr	r3, [fp, #-8]
   27204:	strb	r2, [r3, #26]
   27208:	ldr	r3, [fp, #-12]
   2720c:	and	r3, r3, #2
   27210:	cmp	r3, #0
   27214:	movne	r3, #1
   27218:	moveq	r3, #0
   2721c:	uxtb	r3, r3
   27220:	mov	r2, r3
   27224:	ldr	r3, [fp, #-8]
   27228:	strb	r2, [r3, #27]
   2722c:	ldr	r3, [fp, #-12]
   27230:	and	r3, r3, #4
   27234:	cmp	r3, #0
   27238:	movne	r3, #1
   2723c:	moveq	r3, #0
   27240:	uxtb	r3, r3
   27244:	mov	r2, r3
   27248:	ldr	r3, [fp, #-8]
   2724c:	strb	r2, [r3, #28]
   27250:	ldr	r3, [fp, #-12]
   27254:	and	r3, r3, #8
   27258:	cmp	r3, #0
   2725c:	movne	r3, #1
   27260:	moveq	r3, #0
   27264:	uxtb	r3, r3
   27268:	mov	r2, r3
   2726c:	ldr	r3, [fp, #-8]
   27270:	strb	r2, [r3, #29]
   27274:	ldr	r3, [fp, #-12]
   27278:	and	r3, r3, #16
   2727c:	cmp	r3, #0
   27280:	beq	27290 <_start@@Base+0x12c98>
   27284:	mov	r1, #2
   27288:	ldr	r0, [fp, #-8]
   2728c:	bl	2714c <_start@@Base+0x12b54>
   27290:	ldr	r3, [fp, #-12]
   27294:	and	r3, r3, #32
   27298:	cmp	r3, #0
   2729c:	beq	272a8 <_start@@Base+0x12cb0>
   272a0:	ldr	r0, [fp, #-8]
   272a4:	bl	27180 <_start@@Base+0x12b88>
   272a8:	nop	{0}
   272ac:	sub	sp, fp, #4
   272b0:	ldr	fp, [sp]
   272b4:	add	sp, sp, #4
   272b8:	pop	{pc}		; (ldr pc, [sp], #4)
   272bc:	str	fp, [sp, #-8]!
   272c0:	str	lr, [sp, #4]
   272c4:	add	fp, sp, #4
   272c8:	sub	sp, sp, #16
   272cc:	str	r0, [fp, #-8]
   272d0:	strd	r2, [fp, #-20]	; 0xffffffec
   272d4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   272d8:	orrs	r3, r2, r3
   272dc:	beq	272f4 <_start@@Base+0x12cfc>
   272e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   272e4:	cmp	r3, #0
   272e8:	cmpeq	r2, #17
   272ec:	beq	27310 <_start@@Base+0x12d18>
   272f0:	b	2732c <_start@@Base+0x12d34>
   272f4:	mov	r2, #10
   272f8:	ldr	r3, [pc, #80]	; 27350 <_start@@Base+0x12d58>
   272fc:	add	r3, pc, r3
   27300:	mov	r1, r3
   27304:	ldr	r0, [fp, #-8]
   27308:	bl	44f74 <flatcc_json_printer_enum@@Base>
   2730c:	b	2733c <_start@@Base+0x12d44>
   27310:	mov	r2, #3
   27314:	ldr	r3, [pc, #56]	; 27354 <_start@@Base+0x12d5c>
   27318:	add	r3, pc, r3
   2731c:	mov	r1, r3
   27320:	ldr	r0, [fp, #-8]
   27324:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27328:	b	2733c <_start@@Base+0x12d44>
   2732c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   27330:	ldr	r0, [fp, #-8]
   27334:	bl	44e64 <flatcc_json_printer_int64@@Base>
   27338:	nop	{0}
   2733c:	nop	{0}
   27340:	sub	sp, fp, #4
   27344:	ldr	fp, [sp]
   27348:	add	sp, sp, #4
   2734c:	pop	{pc}		; (ldr pc, [sp], #4)
   27350:	andeq	r6, r2, r4, lsr ip
   27354:	andeq	r6, r2, r4, lsr #24
   27358:	push	{fp}		; (str fp, [sp, #-4]!)
   2735c:	add	fp, sp, #0
   27360:	sub	sp, sp, #12
   27364:	str	r0, [fp, #-8]
   27368:	str	r1, [fp, #-12]
   2736c:	nop	{0}
   27370:	add	sp, fp, #0
   27374:	pop	{fp}		; (ldr fp, [sp], #4)
   27378:	bx	lr
   2737c:	str	fp, [sp, #-8]!
   27380:	str	lr, [sp, #4]
   27384:	add	fp, sp, #4
   27388:	sub	sp, sp, #8
   2738c:	str	r0, [fp, #-8]
   27390:	str	r1, [fp, #-12]
   27394:	ldr	r3, [fp, #-12]
   27398:	cmn	r3, #11
   2739c:	beq	273d4 <_start@@Base+0x12ddc>
   273a0:	ldr	r3, [fp, #-12]
   273a4:	cmn	r3, #10
   273a8:	beq	273f0 <_start@@Base+0x12df8>
   273ac:	ldr	r3, [fp, #-12]
   273b0:	cmn	r3, #12
   273b4:	bne	2740c <_start@@Base+0x12e14>
   273b8:	mov	r2, #4
   273bc:	ldr	r3, [pc, #108]	; 27430 <_start@@Base+0x12e38>
   273c0:	add	r3, pc, r3
   273c4:	mov	r1, r3
   273c8:	ldr	r0, [fp, #-8]
   273cc:	bl	44f74 <flatcc_json_printer_enum@@Base>
   273d0:	b	2741c <_start@@Base+0x12e24>
   273d4:	mov	r2, #4
   273d8:	ldr	r3, [pc, #84]	; 27434 <_start@@Base+0x12e3c>
   273dc:	add	r3, pc, r3
   273e0:	mov	r1, r3
   273e4:	ldr	r0, [fp, #-8]
   273e8:	bl	44f74 <flatcc_json_printer_enum@@Base>
   273ec:	b	2741c <_start@@Base+0x12e24>
   273f0:	mov	r2, #4
   273f4:	ldr	r3, [pc, #60]	; 27438 <_start@@Base+0x12e40>
   273f8:	add	r3, pc, r3
   273fc:	mov	r1, r3
   27400:	ldr	r0, [fp, #-8]
   27404:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27408:	b	2741c <_start@@Base+0x12e24>
   2740c:	ldr	r1, [fp, #-12]
   27410:	ldr	r0, [fp, #-8]
   27414:	bl	44e0c <flatcc_json_printer_int32@@Base>
   27418:	nop	{0}
   2741c:	nop	{0}
   27420:	sub	sp, fp, #4
   27424:	ldr	fp, [sp]
   27428:	add	sp, sp, #4
   2742c:	pop	{pc}		; (ldr pc, [sp], #4)
   27430:	andeq	r6, r2, r0, lsl #23
   27434:	andeq	r6, r2, ip, ror #22
   27438:	andeq	r6, r2, r8, asr fp
   2743c:	str	fp, [sp, #-8]!
   27440:	str	lr, [sp, #4]
   27444:	add	fp, sp, #4
   27448:	sub	sp, sp, #8
   2744c:	str	r0, [fp, #-8]
   27450:	str	r1, [fp, #-12]
   27454:	ldr	r3, [fp, #-12]
   27458:	cmn	r3, #1
   2745c:	beq	274b4 <_start@@Base+0x12ebc>
   27460:	ldr	r3, [fp, #-12]
   27464:	cmp	r3, #0
   27468:	bge	2747c <_start@@Base+0x12e84>
   2746c:	ldr	r3, [fp, #-12]
   27470:	cmn	r3, #2
   27474:	beq	27498 <_start@@Base+0x12ea0>
   27478:	b	27508 <_start@@Base+0x12f10>
   2747c:	ldr	r3, [fp, #-12]
   27480:	cmp	r3, #2
   27484:	beq	274d0 <_start@@Base+0x12ed8>
   27488:	ldr	r3, [fp, #-12]
   2748c:	cmp	r3, #42	; 0x2a
   27490:	beq	274ec <_start@@Base+0x12ef4>
   27494:	b	27508 <_start@@Base+0x12f10>
   27498:	mov	r2, #6
   2749c:	ldr	r3, [pc, #136]	; 2752c <_start@@Base+0x12f34>
   274a0:	add	r3, pc, r3
   274a4:	mov	r1, r3
   274a8:	ldr	r0, [fp, #-8]
   274ac:	bl	44f74 <flatcc_json_printer_enum@@Base>
   274b0:	b	27518 <_start@@Base+0x12f20>
   274b4:	mov	r2, #7
   274b8:	ldr	r3, [pc, #112]	; 27530 <_start@@Base+0x12f38>
   274bc:	add	r3, pc, r3
   274c0:	mov	r1, r3
   274c4:	ldr	r0, [fp, #-8]
   274c8:	bl	44f74 <flatcc_json_printer_enum@@Base>
   274cc:	b	27518 <_start@@Base+0x12f20>
   274d0:	mov	r2, #4
   274d4:	ldr	r3, [pc, #88]	; 27534 <_start@@Base+0x12f3c>
   274d8:	add	r3, pc, r3
   274dc:	mov	r1, r3
   274e0:	ldr	r0, [fp, #-8]
   274e4:	bl	44f74 <flatcc_json_printer_enum@@Base>
   274e8:	b	27518 <_start@@Base+0x12f20>
   274ec:	mov	r2, #4
   274f0:	ldr	r3, [pc, #64]	; 27538 <_start@@Base+0x12f40>
   274f4:	add	r3, pc, r3
   274f8:	mov	r1, r3
   274fc:	ldr	r0, [fp, #-8]
   27500:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27504:	b	27518 <_start@@Base+0x12f20>
   27508:	ldr	r1, [fp, #-12]
   2750c:	ldr	r0, [fp, #-8]
   27510:	bl	44e0c <flatcc_json_printer_int32@@Base>
   27514:	nop	{0}
   27518:	nop	{0}
   2751c:	sub	sp, fp, #4
   27520:	ldr	fp, [sp]
   27524:	add	sp, sp, #4
   27528:	pop	{pc}		; (ldr pc, [sp], #4)
   2752c:			; <UNDEFINED> instruction: 0x00026ab8
   27530:	andeq	r6, r2, r4, lsr #21
   27534:	muleq	r2, r0, sl
   27538:	andeq	r6, r2, ip, ror sl
   2753c:	str	fp, [sp, #-8]!
   27540:	str	lr, [sp, #4]
   27544:	add	fp, sp, #4
   27548:	sub	sp, sp, #8
   2754c:	str	r0, [fp, #-8]
   27550:	str	r1, [fp, #-12]
   27554:	ldr	r3, [fp, #-12]
   27558:	cmp	r3, #3
   2755c:	beq	2759c <_start@@Base+0x12fa4>
   27560:	ldr	r2, [fp, #-12]
   27564:	movw	r3, #48815	; 0xbeaf
   27568:	movt	r3, #32431	; 0x7eaf
   2756c:	cmp	r2, r3
   27570:	beq	275b8 <_start@@Base+0x12fc0>
   27574:	ldr	r3, [fp, #-12]
   27578:	cmn	r3, #2
   2757c:	bne	275d4 <_start@@Base+0x12fdc>
   27580:	mov	r2, #6
   27584:	ldr	r3, [pc, #108]	; 275f8 <_start@@Base+0x13000>
   27588:	add	r3, pc, r3
   2758c:	mov	r1, r3
   27590:	ldr	r0, [fp, #-8]
   27594:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27598:	b	275e4 <_start@@Base+0x12fec>
   2759c:	mov	r2, #4
   275a0:	ldr	r3, [pc, #84]	; 275fc <_start@@Base+0x13004>
   275a4:	add	r3, pc, r3
   275a8:	mov	r1, r3
   275ac:	ldr	r0, [fp, #-8]
   275b0:	bl	44f74 <flatcc_json_printer_enum@@Base>
   275b4:	b	275e4 <_start@@Base+0x12fec>
   275b8:	mov	r2, #4
   275bc:	ldr	r3, [pc, #60]	; 27600 <_start@@Base+0x13008>
   275c0:	add	r3, pc, r3
   275c4:	mov	r1, r3
   275c8:	ldr	r0, [fp, #-8]
   275cc:	bl	44f74 <flatcc_json_printer_enum@@Base>
   275d0:	b	275e4 <_start@@Base+0x12fec>
   275d4:	ldr	r1, [fp, #-12]
   275d8:	ldr	r0, [fp, #-8]
   275dc:	bl	44e0c <flatcc_json_printer_int32@@Base>
   275e0:	nop	{0}
   275e4:	nop	{0}
   275e8:	sub	sp, fp, #4
   275ec:	ldr	fp, [sp]
   275f0:	add	sp, sp, #4
   275f4:	pop	{pc}		; (ldr pc, [sp], #4)
   275f8:	strdeq	r6, [r2], -r0
   275fc:	ldrdeq	r6, [r2], -ip
   27600:	andeq	r6, r2, r8, asr #19
   27604:	str	fp, [sp, #-8]!
   27608:	str	lr, [sp, #4]
   2760c:	add	fp, sp, #4
   27610:	sub	sp, sp, #24
   27614:	str	r0, [fp, #-24]	; 0xffffffe8
   27618:	mov	r3, r1
   2761c:	strb	r3, [fp, #-25]	; 0xffffffe7
   27620:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   27624:	strb	r3, [fp, #-9]
   27628:	ldrb	r2, [fp, #-9]
   2762c:	ldrb	r3, [fp, #-9]
   27630:	sub	r3, r3, #1
   27634:	and	r3, r3, r2
   27638:	cmp	r3, #0
   2763c:	movne	r3, #1
   27640:	moveq	r3, #0
   27644:	uxtb	r3, r3
   27648:	str	r3, [fp, #-16]
   2764c:	mov	r3, #0
   27650:	str	r3, [fp, #-8]
   27654:	ldrb	r3, [fp, #-9]
   27658:	and	r3, r3, #244	; 0xf4
   2765c:	cmp	r3, #0
   27660:	bne	27670 <_start@@Base+0x13078>
   27664:	ldrb	r3, [fp, #-9]
   27668:	cmp	r3, #0
   2766c:	bne	27684 <_start@@Base+0x1308c>
   27670:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   27674:	mov	r1, r3
   27678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2767c:	bl	44d4c <flatcc_json_printer_int8@@Base>
   27680:	b	2772c <_start@@Base+0x13134>
   27684:	ldr	r1, [fp, #-16]
   27688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2768c:	bl	44fb8 <flatcc_json_printer_delimit_enum_flags@@Base>
   27690:	ldrb	r3, [fp, #-9]
   27694:	and	r3, r3, #1
   27698:	cmp	r3, #0
   2769c:	beq	276c0 <_start@@Base+0x130c8>
   276a0:	ldr	r1, [fp, #-8]
   276a4:	add	r3, r1, #1
   276a8:	str	r3, [fp, #-8]
   276ac:	mov	r3, #3
   276b0:	ldr	r2, [pc, #132]	; 2773c <_start@@Base+0x13144>
   276b4:	add	r2, pc, r2
   276b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   276bc:	bl	45030 <flatcc_json_printer_enum_flag@@Base>
   276c0:	ldrb	r3, [fp, #-9]
   276c4:	and	r3, r3, #2
   276c8:	cmp	r3, #0
   276cc:	beq	276f0 <_start@@Base+0x130f8>
   276d0:	ldr	r1, [fp, #-8]
   276d4:	add	r3, r1, #1
   276d8:	str	r3, [fp, #-8]
   276dc:	mov	r3, #5
   276e0:	ldr	r2, [pc, #88]	; 27740 <_start@@Base+0x13148>
   276e4:	add	r2, pc, r2
   276e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   276ec:	bl	45030 <flatcc_json_printer_enum_flag@@Base>
   276f0:	ldrb	r3, [fp, #-9]
   276f4:	and	r3, r3, #8
   276f8:	cmp	r3, #0
   276fc:	beq	27720 <_start@@Base+0x13128>
   27700:	ldr	r1, [fp, #-8]
   27704:	add	r3, r1, #1
   27708:	str	r3, [fp, #-8]
   2770c:	mov	r3, #4
   27710:	ldr	r2, [pc, #44]	; 27744 <_start@@Base+0x1314c>
   27714:	add	r2, pc, r2
   27718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2771c:	bl	45030 <flatcc_json_printer_enum_flag@@Base>
   27720:	ldr	r1, [fp, #-16]
   27724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27728:	bl	44fb8 <flatcc_json_printer_delimit_enum_flags@@Base>
   2772c:	sub	sp, fp, #4
   27730:	ldr	fp, [sp]
   27734:	add	sp, sp, #4
   27738:	pop	{pc}		; (ldr pc, [sp], #4)
   2773c:	ldrdeq	r6, [r2], -ip
   27740:			; <UNDEFINED> instruction: 0x000268b0
   27744:	andeq	r6, r2, r8, lsl #17
   27748:	str	fp, [sp, #-8]!
   2774c:	str	lr, [sp, #4]
   27750:	add	fp, sp, #4
   27754:	sub	sp, sp, #8
   27758:	str	r0, [fp, #-8]
   2775c:	str	r1, [fp, #-12]
   27760:	ldr	r3, [fp, #-12]
   27764:	cmp	r3, #0
   27768:	bne	27788 <_start@@Base+0x13190>
   2776c:	mov	r2, #1
   27770:	ldr	r3, [pc, #52]	; 277ac <_start@@Base+0x131b4>
   27774:	add	r3, pc, r3
   27778:	mov	r1, r3
   2777c:	ldr	r0, [fp, #-8]
   27780:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27784:	b	27798 <_start@@Base+0x131a0>
   27788:	ldr	r1, [fp, #-12]
   2778c:	ldr	r0, [fp, #-8]
   27790:	bl	44e0c <flatcc_json_printer_int32@@Base>
   27794:	nop	{0}
   27798:	nop	{0}
   2779c:	sub	sp, fp, #4
   277a0:	ldr	fp, [sp]
   277a4:	add	sp, sp, #4
   277a8:	pop	{pc}		; (ldr pc, [sp], #4)
   277ac:	andeq	r6, r2, r0, lsr r8
   277b0:	str	fp, [sp, #-8]!
   277b4:	str	lr, [sp, #4]
   277b8:	add	fp, sp, #4
   277bc:	sub	sp, sp, #8
   277c0:	str	r0, [fp, #-8]
   277c4:	mov	r3, r1
   277c8:	strb	r3, [fp, #-9]
   277cc:	ldrb	r3, [fp, #-9]
   277d0:	cmp	r3, #1
   277d4:	bne	277f4 <_start@@Base+0x131fc>
   277d8:	mov	r2, #17
   277dc:	ldr	r3, [pc, #64]	; 27824 <_start@@Base+0x1322c>
   277e0:	add	r3, pc, r3
   277e4:	mov	r1, r3
   277e8:	ldr	r0, [fp, #-8]
   277ec:	bl	44f74 <flatcc_json_printer_enum@@Base>
   277f0:	b	27810 <_start@@Base+0x13218>
   277f4:	mov	r2, #4
   277f8:	ldr	r3, [pc, #40]	; 27828 <_start@@Base+0x13230>
   277fc:	add	r3, pc, r3
   27800:	mov	r1, r3
   27804:	ldr	r0, [fp, #-8]
   27808:	bl	44f74 <flatcc_json_printer_enum@@Base>
   2780c:	nop	{0}
   27810:	nop	{0}
   27814:	sub	sp, fp, #4
   27818:	ldr	fp, [sp]
   2781c:	add	sp, sp, #4
   27820:	pop	{pc}		; (ldr pc, [sp], #4)
   27824:	andeq	r6, r2, r8, asr #15
   27828:	andeq	r6, r2, r0, asr #15
   2782c:	str	fp, [sp, #-8]!
   27830:	str	lr, [sp, #4]
   27834:	add	fp, sp, #4
   27838:	sub	sp, sp, #8
   2783c:	str	r0, [fp, #-8]
   27840:	str	r1, [fp, #-12]
   27844:	ldr	r3, [fp, #-12]
   27848:	ldrb	r3, [r3, #8]
   2784c:	cmp	r3, #1
   27850:	bne	27870 <_start@@Base+0x13278>
   27854:	ldr	r3, [pc, #44]	; 27888 <_start@@Base+0x13290>
   27858:	add	r3, pc, r3
   2785c:	mov	r2, r3
   27860:	ldr	r1, [fp, #-12]
   27864:	ldr	r0, [fp, #-8]
   27868:	bl	4c4ec <flatcc_json_printer_union_table@@Base>
   2786c:	b	27874 <_start@@Base+0x1327c>
   27870:	nop	{0}
   27874:	nop	{0}
   27878:	sub	sp, fp, #4
   2787c:	ldr	fp, [sp]
   27880:	add	sp, sp, #4
   27884:	pop	{pc}		; (ldr pc, [sp], #4)
   27888:			; <UNDEFINED> instruction: 0x000007b4
   2788c:	str	fp, [sp, #-8]!
   27890:	str	lr, [sp, #4]
   27894:	add	fp, sp, #4
   27898:	sub	sp, sp, #8
   2789c:	str	r0, [fp, #-8]
   278a0:	mov	r3, r1
   278a4:	strb	r3, [fp, #-9]
   278a8:	ldrb	r3, [fp, #-9]
   278ac:	sub	r3, r3, #1
   278b0:	cmp	r3, #3
   278b4:	addls	pc, pc, r3, lsl #2
   278b8:	b	2793c <_start@@Base+0x13344>
   278bc:	b	278cc <_start@@Base+0x132d4>
   278c0:	b	278e8 <_start@@Base+0x132f0>
   278c4:	b	27904 <_start@@Base+0x1330c>
   278c8:	b	27920 <_start@@Base+0x13328>
   278cc:	mov	r2, #7
   278d0:	ldr	r3, [pc, #148]	; 2796c <_start@@Base+0x13374>
   278d4:	add	r3, pc, r3
   278d8:	mov	r1, r3
   278dc:	ldr	r0, [fp, #-8]
   278e0:	bl	44f74 <flatcc_json_printer_enum@@Base>
   278e4:	b	27958 <_start@@Base+0x13360>
   278e8:	mov	r2, #23
   278ec:	ldr	r3, [pc, #124]	; 27970 <_start@@Base+0x13378>
   278f0:	add	r3, pc, r3
   278f4:	mov	r1, r3
   278f8:	ldr	r0, [fp, #-8]
   278fc:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27900:	b	27958 <_start@@Base+0x13360>
   27904:	mov	r2, #8
   27908:	ldr	r3, [pc, #100]	; 27974 <_start@@Base+0x1337c>
   2790c:	add	r3, pc, r3
   27910:	mov	r1, r3
   27914:	ldr	r0, [fp, #-8]
   27918:	bl	44f74 <flatcc_json_printer_enum@@Base>
   2791c:	b	27958 <_start@@Base+0x13360>
   27920:	mov	r2, #3
   27924:	ldr	r3, [pc, #76]	; 27978 <_start@@Base+0x13380>
   27928:	add	r3, pc, r3
   2792c:	mov	r1, r3
   27930:	ldr	r0, [fp, #-8]
   27934:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27938:	b	27958 <_start@@Base+0x13360>
   2793c:	mov	r2, #4
   27940:	ldr	r3, [pc, #52]	; 2797c <_start@@Base+0x13384>
   27944:	add	r3, pc, r3
   27948:	mov	r1, r3
   2794c:	ldr	r0, [fp, #-8]
   27950:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27954:	nop	{0}
   27958:	nop	{0}
   2795c:	sub	sp, fp, #4
   27960:	ldr	fp, [sp]
   27964:	add	sp, sp, #4
   27968:	pop	{pc}		; (ldr pc, [sp], #4)
   2796c:	strdeq	r6, [r2], -r0
   27970:	ldrdeq	r6, [r2], -ip
   27974:	ldrdeq	r6, [r2], -r8
   27978:	andeq	r6, r2, r8, asr #13
   2797c:	andeq	r6, r2, r8, ror r6
   27980:	str	fp, [sp, #-8]!
   27984:	str	lr, [sp, #4]
   27988:	add	fp, sp, #4
   2798c:	sub	sp, sp, #8
   27990:	str	r0, [fp, #-8]
   27994:	str	r1, [fp, #-12]
   27998:	ldr	r3, [fp, #-12]
   2799c:	ldrb	r3, [r3, #8]
   279a0:	sub	r3, r3, #1
   279a4:	cmp	r3, #3
   279a8:	addls	pc, pc, r3, lsl #2
   279ac:	b	27a30 <_start@@Base+0x13438>
   279b0:	b	279c0 <_start@@Base+0x133c8>
   279b4:	b	279dc <_start@@Base+0x133e4>
   279b8:	b	279f8 <_start@@Base+0x13400>
   279bc:	b	27a14 <_start@@Base+0x1341c>
   279c0:	ldr	r3, [pc, #128]	; 27a48 <_start@@Base+0x13450>
   279c4:	add	r3, pc, r3
   279c8:	mov	r2, r3
   279cc:	ldr	r1, [fp, #-12]
   279d0:	ldr	r0, [fp, #-8]
   279d4:	bl	4c4ec <flatcc_json_printer_union_table@@Base>
   279d8:	b	27a34 <_start@@Base+0x1343c>
   279dc:	ldr	r3, [pc, #104]	; 27a4c <_start@@Base+0x13454>
   279e0:	add	r3, pc, r3
   279e4:	mov	r2, r3
   279e8:	ldr	r1, [fp, #-12]
   279ec:	ldr	r0, [fp, #-8]
   279f0:	bl	4c4ec <flatcc_json_printer_union_table@@Base>
   279f4:	b	27a34 <_start@@Base+0x1343c>
   279f8:	ldr	r3, [pc, #80]	; 27a50 <_start@@Base+0x13458>
   279fc:	add	r3, pc, r3
   27a00:	mov	r2, r3
   27a04:	ldr	r1, [fp, #-12]
   27a08:	ldr	r0, [fp, #-8]
   27a0c:	bl	4c4ec <flatcc_json_printer_union_table@@Base>
   27a10:	b	27a34 <_start@@Base+0x1343c>
   27a14:	ldr	r3, [pc, #56]	; 27a54 <_start@@Base+0x1345c>
   27a18:	add	r3, pc, r3
   27a1c:	mov	r2, r3
   27a20:	ldr	r1, [fp, #-12]
   27a24:	ldr	r0, [fp, #-8]
   27a28:	bl	4c4ec <flatcc_json_printer_union_table@@Base>
   27a2c:	b	27a34 <_start@@Base+0x1343c>
   27a30:	nop	{0}
   27a34:	nop	{0}
   27a38:	sub	sp, fp, #4
   27a3c:	ldr	fp, [sp]
   27a40:	add	sp, sp, #4
   27a44:	pop	{pc}		; (ldr pc, [sp], #4)
   27a48:	andeq	r0, r0, r4, asr #30
   27a4c:	strdeq	r0, [r0], -r8
   27a50:	andeq	r0, r0, r4, lsr r6
   27a54:	andeq	r0, r0, r4, ror #19
   27a58:	str	fp, [sp, #-8]!
   27a5c:	str	lr, [sp, #4]
   27a60:	add	fp, sp, #4
   27a64:	sub	sp, sp, #8
   27a68:	str	r0, [fp, #-8]
   27a6c:	mov	r3, r1
   27a70:	strb	r3, [fp, #-9]
   27a74:	ldrb	r3, [fp, #-9]
   27a78:	cmp	r3, #9
   27a7c:	beq	27af0 <_start@@Base+0x134f8>
   27a80:	cmp	r3, #9
   27a84:	bgt	27a9c <_start@@Base+0x134a4>
   27a88:	cmp	r3, #2
   27a8c:	beq	27ab8 <_start@@Base+0x134c0>
   27a90:	cmp	r3, #8
   27a94:	beq	27ad4 <_start@@Base+0x134dc>
   27a98:	b	27b60 <_start@@Base+0x13568>
   27a9c:	cmp	r3, #11
   27aa0:	beq	27b28 <_start@@Base+0x13530>
   27aa4:	cmp	r3, #11
   27aa8:	blt	27b0c <_start@@Base+0x13514>
   27aac:	cmp	r3, #255	; 0xff
   27ab0:	beq	27b44 <_start@@Base+0x1354c>
   27ab4:	b	27b60 <_start@@Base+0x13568>
   27ab8:	mov	r2, #5
   27abc:	ldr	r3, [pc, #204]	; 27b90 <_start@@Base+0x13598>
   27ac0:	add	r3, pc, r3
   27ac4:	mov	r1, r3
   27ac8:	ldr	r0, [fp, #-8]
   27acc:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27ad0:	b	27b7c <_start@@Base+0x13584>
   27ad4:	mov	r2, #8
   27ad8:	ldr	r3, [pc, #180]	; 27b94 <_start@@Base+0x1359c>
   27adc:	add	r3, pc, r3
   27ae0:	mov	r1, r3
   27ae4:	ldr	r0, [fp, #-8]
   27ae8:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27aec:	b	27b7c <_start@@Base+0x13584>
   27af0:	mov	r2, #5
   27af4:	ldr	r3, [pc, #156]	; 27b98 <_start@@Base+0x135a0>
   27af8:	add	r3, pc, r3
   27afc:	mov	r1, r3
   27b00:	ldr	r0, [fp, #-8]
   27b04:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27b08:	b	27b7c <_start@@Base+0x13584>
   27b0c:	mov	r2, #7
   27b10:	ldr	r3, [pc, #132]	; 27b9c <_start@@Base+0x135a4>
   27b14:	add	r3, pc, r3
   27b18:	mov	r1, r3
   27b1c:	ldr	r0, [fp, #-8]
   27b20:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27b24:	b	27b7c <_start@@Base+0x13584>
   27b28:	mov	r2, #5
   27b2c:	ldr	r3, [pc, #108]	; 27ba0 <_start@@Base+0x135a8>
   27b30:	add	r3, pc, r3
   27b34:	mov	r1, r3
   27b38:	ldr	r0, [fp, #-8]
   27b3c:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27b40:	b	27b7c <_start@@Base+0x13584>
   27b44:	mov	r2, #6
   27b48:	ldr	r3, [pc, #84]	; 27ba4 <_start@@Base+0x135ac>
   27b4c:	add	r3, pc, r3
   27b50:	mov	r1, r3
   27b54:	ldr	r0, [fp, #-8]
   27b58:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27b5c:	b	27b7c <_start@@Base+0x13584>
   27b60:	mov	r2, #4
   27b64:	ldr	r3, [pc, #60]	; 27ba8 <_start@@Base+0x135b0>
   27b68:	add	r3, pc, r3
   27b6c:	mov	r1, r3
   27b70:	ldr	r0, [fp, #-8]
   27b74:	bl	44f74 <flatcc_json_printer_enum@@Base>
   27b78:	nop	{0}
   27b7c:	nop	{0}
   27b80:	sub	sp, fp, #4
   27b84:	ldr	fp, [sp]
   27b88:	add	sp, sp, #4
   27b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   27b90:	andeq	r6, r2, r4, lsr r5
   27b94:	andeq	r6, r2, r0, lsr #10
   27b98:	andeq	r6, r2, r0, lsl r5
   27b9c:	strdeq	r6, [r2], -ip
   27ba0:	andeq	r6, r2, r8, ror #9
   27ba4:	ldrdeq	r6, [r2], -r4
   27ba8:	andeq	r6, r2, r4, asr r4
   27bac:	str	fp, [sp, #-8]!
   27bb0:	str	lr, [sp, #4]
   27bb4:	add	fp, sp, #4
   27bb8:	sub	sp, sp, #8
   27bbc:	str	r0, [fp, #-8]
   27bc0:	str	r1, [fp, #-12]
   27bc4:	ldr	r3, [fp, #-12]
   27bc8:	ldrb	r3, [r3, #8]
   27bcc:	cmp	r3, #9
   27bd0:	beq	27c44 <_start@@Base+0x1364c>
   27bd4:	cmp	r3, #9
   27bd8:	bgt	27bf0 <_start@@Base+0x135f8>
   27bdc:	cmp	r3, #2
   27be0:	beq	27c0c <_start@@Base+0x13614>
   27be4:	cmp	r3, #8
   27be8:	beq	27c28 <_start@@Base+0x13630>
   27bec:	b	27c9c <_start@@Base+0x136a4>
   27bf0:	cmp	r3, #11
   27bf4:	beq	27c7c <_start@@Base+0x13684>
   27bf8:	cmp	r3, #11
   27bfc:	blt	27c60 <_start@@Base+0x13668>
   27c00:	cmp	r3, #255	; 0xff
   27c04:	beq	27c8c <_start@@Base+0x13694>
   27c08:	b	27c9c <_start@@Base+0x136a4>
   27c0c:	ldr	r3, [pc, #156]	; 27cb0 <_start@@Base+0x136b8>
   27c10:	add	r3, pc, r3
   27c14:	mov	r2, r3
   27c18:	ldr	r1, [fp, #-12]
   27c1c:	ldr	r0, [fp, #-8]
   27c20:	bl	4c4ec <flatcc_json_printer_union_table@@Base>
   27c24:	b	27c9c <_start@@Base+0x136a4>
   27c28:	ldr	r3, [pc, #132]	; 27cb4 <_start@@Base+0x136bc>
   27c2c:	add	r3, pc, r3
   27c30:	mov	r2, r3
   27c34:	ldr	r1, [fp, #-12]
   27c38:	ldr	r0, [fp, #-8]
   27c3c:	bl	4c544 <flatcc_json_printer_union_struct@@Base>
   27c40:	b	27c9c <_start@@Base+0x136a4>
   27c44:	ldr	r3, [pc, #108]	; 27cb8 <_start@@Base+0x136c0>
   27c48:	add	r3, pc, r3
   27c4c:	mov	r2, r3
   27c50:	ldr	r1, [fp, #-12]
   27c54:	ldr	r0, [fp, #-8]
   27c58:	bl	4c544 <flatcc_json_printer_union_struct@@Base>
   27c5c:	b	27c9c <_start@@Base+0x136a4>
   27c60:	ldr	r3, [pc, #84]	; 27cbc <_start@@Base+0x136c4>
   27c64:	add	r3, pc, r3
   27c68:	mov	r2, r3
   27c6c:	ldr	r1, [fp, #-12]
   27c70:	ldr	r0, [fp, #-8]
   27c74:	bl	4c544 <flatcc_json_printer_union_struct@@Base>
   27c78:	b	27c9c <_start@@Base+0x136a4>
   27c7c:	ldr	r1, [fp, #-12]
   27c80:	ldr	r0, [fp, #-8]
   27c84:	bl	4c62c <flatcc_json_printer_union_string@@Base>
   27c88:	b	27c9c <_start@@Base+0x136a4>
   27c8c:	ldr	r1, [fp, #-12]
   27c90:	ldr	r0, [fp, #-8]
   27c94:	bl	4c62c <flatcc_json_printer_union_string@@Base>
   27c98:	nop	{0}
   27c9c:	nop	{0}
   27ca0:	sub	sp, fp, #4
   27ca4:	ldr	fp, [sp]
   27ca8:	add	sp, sp, #4
   27cac:	pop	{pc}		; (ldr pc, [sp], #4)
   27cb0:	strdeq	r1, [r0], -ip
   27cb4:	andeq	r0, r0, r0, lsr r3
   27cb8:	andeq	r0, r0, ip, ror #6
   27cbc:	andeq	r0, r0, r0, asr r3
   27cc0:	push	{fp}		; (str fp, [sp, #-4]!)
   27cc4:	add	fp, sp, #0
   27cc8:	sub	sp, sp, #12
   27ccc:	str	r0, [fp, #-8]
   27cd0:	str	r1, [fp, #-12]
   27cd4:	nop	{0}
   27cd8:	add	sp, fp, #0
   27cdc:	pop	{fp}		; (ldr fp, [sp], #4)
   27ce0:	bx	lr
   27ce4:	str	fp, [sp, #-8]!
   27ce8:	str	lr, [sp, #4]
   27cec:	add	fp, sp, #4
   27cf0:	sub	sp, sp, #16
   27cf4:	str	r0, [fp, #-8]
   27cf8:	str	r1, [fp, #-12]
   27cfc:	mov	r3, #1
   27d00:	str	r3, [sp, #4]
   27d04:	ldr	r3, [pc, #84]	; 27d60 <_start@@Base+0x13768>
   27d08:	add	r3, pc, r3
   27d0c:	str	r3, [sp]
   27d10:	mov	r3, #0
   27d14:	ldr	r2, [fp, #-12]
   27d18:	mov	r1, #0
   27d1c:	ldr	r0, [fp, #-8]
   27d20:	bl	46ed8 <flatcc_json_printer_int16_struct_field@@Base>
   27d24:	mov	r3, #1
   27d28:	str	r3, [sp, #4]
   27d2c:	ldr	r3, [pc, #48]	; 27d64 <_start@@Base+0x1376c>
   27d30:	add	r3, pc, r3
   27d34:	str	r3, [sp]
   27d38:	mov	r3, #2
   27d3c:	ldr	r2, [fp, #-12]
   27d40:	mov	r1, #1
   27d44:	ldr	r0, [fp, #-8]
   27d48:	bl	46e1c <flatcc_json_printer_int8_struct_field@@Base>
   27d4c:	nop	{0}
   27d50:	sub	sp, fp, #4
   27d54:	ldr	fp, [sp]
   27d58:	add	sp, sp, #4
   27d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   27d60:	andeq	r6, r2, r0, lsr #6
   27d64:	strdeq	r6, [r2], -ip
   27d68:	push	{fp}		; (str fp, [sp, #-4]!)
   27d6c:	add	fp, sp, #0
   27d70:	sub	sp, sp, #12
   27d74:	str	r0, [fp, #-8]
   27d78:	str	r1, [fp, #-12]
   27d7c:	nop	{0}
   27d80:	add	sp, fp, #0
   27d84:	pop	{fp}		; (ldr fp, [sp], #4)
   27d88:	bx	lr
   27d8c:	str	fp, [sp, #-8]!
   27d90:	str	lr, [sp, #4]
   27d94:	add	fp, sp, #4
   27d98:	sub	sp, sp, #24
   27d9c:	str	r0, [fp, #-8]
   27da0:	str	r1, [fp, #-12]
   27da4:	mov	r3, #1
   27da8:	str	r3, [sp, #4]
   27dac:	ldr	r3, [pc, #268]	; 27ec0 <_start@@Base+0x138c8>
   27db0:	add	r3, pc, r3
   27db4:	str	r3, [sp]
   27db8:	mov	r3, #0
   27dbc:	ldr	r2, [fp, #-12]
   27dc0:	mov	r1, #0
   27dc4:	ldr	r0, [fp, #-8]
   27dc8:	bl	471b8 <flatcc_json_printer_float_struct_field@@Base>
   27dcc:	mov	r3, #1
   27dd0:	str	r3, [sp, #4]
   27dd4:	ldr	r3, [pc, #232]	; 27ec4 <_start@@Base+0x138cc>
   27dd8:	add	r3, pc, r3
   27ddc:	str	r3, [sp]
   27de0:	mov	r3, #4
   27de4:	ldr	r2, [fp, #-12]
   27de8:	mov	r1, #1
   27dec:	ldr	r0, [fp, #-8]
   27df0:	bl	471b8 <flatcc_json_printer_float_struct_field@@Base>
   27df4:	mov	r3, #1
   27df8:	str	r3, [sp, #4]
   27dfc:	ldr	r3, [pc, #196]	; 27ec8 <_start@@Base+0x138d0>
   27e00:	add	r3, pc, r3
   27e04:	str	r3, [sp]
   27e08:	mov	r3, #8
   27e0c:	ldr	r2, [fp, #-12]
   27e10:	mov	r1, #2
   27e14:	ldr	r0, [fp, #-8]
   27e18:	bl	471b8 <flatcc_json_printer_float_struct_field@@Base>
   27e1c:	mov	r3, #5
   27e20:	str	r3, [sp, #4]
   27e24:	ldr	r3, [pc, #160]	; 27ecc <_start@@Base+0x138d4>
   27e28:	add	r3, pc, r3
   27e2c:	str	r3, [sp]
   27e30:	mov	r3, #16
   27e34:	ldr	r2, [fp, #-12]
   27e38:	mov	r1, #3
   27e3c:	ldr	r0, [fp, #-8]
   27e40:	bl	47274 <flatcc_json_printer_double_struct_field@@Base>
   27e44:	ldr	r3, [pc, #132]	; 27ed0 <_start@@Base+0x138d8>
   27e48:	add	r3, pc, r3
   27e4c:	str	r3, [sp, #8]
   27e50:	mov	r3, #5
   27e54:	str	r3, [sp, #4]
   27e58:	ldr	r3, [pc, #116]	; 27ed4 <_start@@Base+0x138dc>
   27e5c:	add	r3, pc, r3
   27e60:	str	r3, [sp]
   27e64:	mov	r3, #24
   27e68:	ldr	r2, [fp, #-12]
   27e6c:	mov	r1, #4
   27e70:	ldr	r0, [fp, #-8]
   27e74:	bl	476a0 <flatcc_json_printer_int8_enum_struct_field@@Base>
   27e78:	ldr	r3, [pc, #88]	; 27ed8 <_start@@Base+0x138e0>
   27e7c:	add	r3, pc, r3
   27e80:	str	r3, [sp, #8]
   27e84:	mov	r3, #5
   27e88:	str	r3, [sp, #4]
   27e8c:	ldr	r3, [pc, #72]	; 27edc <_start@@Base+0x138e4>
   27e90:	add	r3, pc, r3
   27e94:	str	r3, [sp]
   27e98:	mov	r3, #26
   27e9c:	ldr	r2, [fp, #-12]
   27ea0:	mov	r1, #5
   27ea4:	ldr	r0, [fp, #-8]
   27ea8:	bl	4c678 <flatcc_json_printer_embedded_struct_field@@Base>
   27eac:	nop	{0}
   27eb0:	sub	sp, fp, #4
   27eb4:	ldr	fp, [sp]
   27eb8:	add	sp, sp, #4
   27ebc:	pop	{pc}		; (ldr pc, [sp], #4)
   27ec0:	strdeq	r6, [r2], -r4
   27ec4:	andeq	r6, r2, r8, asr r2
   27ec8:	andeq	r6, r2, r4, lsr r2
   27ecc:	andeq	r6, r2, r0, lsl r2
   27ed0:			; <UNDEFINED> instruction: 0xfffff7b4
   27ed4:	andeq	r6, r2, r4, ror #3
   27ed8:			; <UNDEFINED> instruction: 0xfffffe60
   27edc:			; <UNDEFINED> instruction: 0x000261b8
   27ee0:	str	fp, [sp, #-8]!
   27ee4:	str	lr, [sp, #4]
   27ee8:	add	fp, sp, #4
   27eec:	sub	sp, sp, #16
   27ef0:	str	r0, [fp, #-8]
   27ef4:	str	r1, [fp, #-12]
   27ef8:	mov	r3, #2
   27efc:	str	r3, [sp, #4]
   27f00:	ldr	r3, [pc, #84]	; 27f5c <_start@@Base+0x13964>
   27f04:	add	r3, pc, r3
   27f08:	str	r3, [sp]
   27f0c:	mov	r3, #0
   27f10:	ldr	r2, [fp, #-12]
   27f14:	mov	r1, #0
   27f18:	ldr	r0, [fp, #-8]
   27f1c:	bl	46cb4 <flatcc_json_printer_uint32_struct_field@@Base>
   27f20:	mov	r3, #8
   27f24:	str	r3, [sp, #4]
   27f28:	ldr	r3, [pc, #48]	; 27f60 <_start@@Base+0x13968>
   27f2c:	add	r3, pc, r3
   27f30:	str	r3, [sp]
   27f34:	mov	r3, #4
   27f38:	ldr	r2, [fp, #-12]
   27f3c:	mov	r1, #1
   27f40:	ldr	r0, [fp, #-8]
   27f44:	bl	46cb4 <flatcc_json_printer_uint32_struct_field@@Base>
   27f48:	nop	{0}
   27f4c:	sub	sp, fp, #4
   27f50:	ldr	fp, [sp]
   27f54:	add	sp, sp, #4
   27f58:	pop	{pc}		; (ldr pc, [sp], #4)
   27f5c:	andeq	r6, r2, ip, asr #2
   27f60:	andeq	r6, r2, r8, lsr #2
   27f64:	str	fp, [sp, #-8]!
   27f68:	str	lr, [sp, #4]
   27f6c:	add	fp, sp, #4
   27f70:	sub	sp, sp, #16
   27f74:	str	r0, [fp, #-8]
   27f78:	str	r1, [fp, #-12]
   27f7c:	mov	r3, #11
   27f80:	str	r3, [sp, #4]
   27f84:	ldr	r3, [pc, #44]	; 27fb8 <_start@@Base+0x139c0>
   27f88:	add	r3, pc, r3
   27f8c:	str	r3, [sp]
   27f90:	mov	r3, #0
   27f94:	ldr	r2, [fp, #-12]
   27f98:	mov	r1, #0
   27f9c:	ldr	r0, [fp, #-8]
   27fa0:	bl	46bf8 <flatcc_json_printer_uint16_struct_field@@Base>
   27fa4:	nop	{0}
   27fa8:	sub	sp, fp, #4
   27fac:	ldr	fp, [sp]
   27fb0:	add	sp, sp, #4
   27fb4:	pop	{pc}		; (ldr pc, [sp], #4)
   27fb8:	ldrdeq	r6, [r2], -r8
   27fbc:	str	fp, [sp, #-8]!
   27fc0:	str	lr, [sp, #4]
   27fc4:	add	fp, sp, #4
   27fc8:	sub	sp, sp, #16
   27fcc:	str	r0, [fp, #-8]
   27fd0:	str	r1, [fp, #-12]
   27fd4:	mov	r3, #10
   27fd8:	str	r3, [sp, #4]
   27fdc:	ldr	r3, [pc, #44]	; 28010 <_start@@Base+0x13a18>
   27fe0:	add	r3, pc, r3
   27fe4:	str	r3, [sp]
   27fe8:	mov	r3, #0
   27fec:	ldr	r2, [fp, #-12]
   27ff0:	mov	r1, #0
   27ff4:	ldr	r0, [fp, #-8]
   27ff8:	bl	46f94 <flatcc_json_printer_int32_struct_field@@Base>
   27ffc:	nop	{0}
   28000:	sub	sp, fp, #4
   28004:	ldr	fp, [sp]
   28008:	add	sp, sp, #4
   2800c:	pop	{pc}		; (ldr pc, [sp], #4)
   28010:	andeq	r6, r2, ip, lsl #1
   28014:	push	{fp}		; (str fp, [sp, #-4]!)
   28018:	add	fp, sp, #0
   2801c:	sub	sp, sp, #12
   28020:	str	r0, [fp, #-8]
   28024:	str	r1, [fp, #-12]
   28028:	nop	{0}
   2802c:	add	sp, fp, #0
   28030:	pop	{fp}		; (ldr fp, [sp], #4)
   28034:	bx	lr
   28038:	push	{fp}		; (str fp, [sp, #-4]!)
   2803c:	add	fp, sp, #0
   28040:	sub	sp, sp, #12
   28044:	str	r0, [fp, #-8]
   28048:	str	r1, [fp, #-12]
   2804c:	nop	{0}
   28050:	add	sp, fp, #0
   28054:	pop	{fp}		; (ldr fp, [sp], #4)
   28058:	bx	lr
   2805c:	push	{fp}		; (str fp, [sp, #-4]!)
   28060:	add	fp, sp, #0
   28064:	sub	sp, sp, #12
   28068:	str	r0, [fp, #-8]
   2806c:	str	r1, [fp, #-12]
   28070:	nop	{0}
   28074:	add	sp, fp, #0
   28078:	pop	{fp}		; (ldr fp, [sp], #4)
   2807c:	bx	lr
   28080:	str	fp, [sp, #-8]!
   28084:	str	lr, [sp, #4]
   28088:	add	fp, sp, #4
   2808c:	sub	sp, sp, #16
   28090:	str	r0, [fp, #-8]
   28094:	str	r1, [fp, #-12]
   28098:	ldr	r3, [pc, #56]	; 280d8 <_start@@Base+0x13ae0>
   2809c:	add	r3, pc, r3
   280a0:	str	r3, [sp, #4]
   280a4:	mov	r3, #5
   280a8:	str	r3, [sp]
   280ac:	ldr	r3, [pc, #40]	; 280dc <_start@@Base+0x13ae4>
   280b0:	add	r3, pc, r3
   280b4:	mov	r2, #0
   280b8:	ldr	r1, [fp, #-12]
   280bc:	ldr	r0, [fp, #-8]
   280c0:	bl	4c798 <flatcc_json_printer_struct_field@@Base>
   280c4:	nop	{0}
   280c8:	sub	sp, fp, #4
   280cc:	ldr	fp, [sp]
   280d0:	add	sp, sp, #4
   280d4:	pop	{pc}		; (ldr pc, [sp], #4)
   280d8:			; <UNDEFINED> instruction: 0xfffffcc4
   280dc:	andeq	r5, r2, r8, asr #31
   280e0:	str	fp, [sp, #-8]!
   280e4:	str	lr, [sp, #4]
   280e8:	add	fp, sp, #4
   280ec:	sub	sp, sp, #24
   280f0:	str	r0, [fp, #-8]
   280f4:	str	r1, [fp, #-12]
   280f8:	ldr	r3, [pc, #196]	; 281c4 <_start@@Base+0x13bcc>
   280fc:	add	r3, pc, r3
   28100:	str	r3, [sp, #8]
   28104:	mov	r3, #2
   28108:	str	r3, [sp, #4]
   2810c:	mov	r3, #5
   28110:	str	r3, [sp]
   28114:	ldr	r3, [pc, #172]	; 281c8 <_start@@Base+0x13bd0>
   28118:	add	r3, pc, r3
   2811c:	mov	r2, #0
   28120:	ldr	r1, [fp, #-12]
   28124:	ldr	r0, [fp, #-8]
   28128:	bl	464fc <flatcc_json_printer_int8_enum_field@@Base>
   2812c:	ldr	r3, [pc, #152]	; 281cc <_start@@Base+0x13bd4>
   28130:	add	r3, pc, r3
   28134:	str	r3, [sp, #8]
   28138:	mov	r3, #2
   2813c:	str	r3, [sp, #4]
   28140:	mov	r3, #6
   28144:	str	r3, [sp]
   28148:	ldr	r3, [pc, #128]	; 281d0 <_start@@Base+0x13bd8>
   2814c:	add	r3, pc, r3
   28150:	mov	r2, #1
   28154:	ldr	r1, [fp, #-12]
   28158:	ldr	r0, [fp, #-8]
   2815c:	bl	464fc <flatcc_json_printer_int8_enum_field@@Base>
   28160:	mov	r3, #2
   28164:	str	r3, [sp, #4]
   28168:	mov	r3, #2
   2816c:	str	r3, [sp]
   28170:	ldr	r3, [pc, #92]	; 281d4 <_start@@Base+0x13bdc>
   28174:	add	r3, pc, r3
   28178:	mov	r2, #2
   2817c:	ldr	r1, [fp, #-12]
   28180:	ldr	r0, [fp, #-8]
   28184:	bl	453dc <flatcc_json_printer_uint8_field@@Base>
   28188:	mov	r3, #2
   2818c:	str	r3, [sp, #4]
   28190:	mov	r3, #3
   28194:	str	r3, [sp]
   28198:	ldr	r3, [pc, #56]	; 281d8 <_start@@Base+0x13be0>
   2819c:	add	r3, pc, r3
   281a0:	mov	r2, #3
   281a4:	ldr	r1, [fp, #-12]
   281a8:	ldr	r0, [fp, #-8]
   281ac:	bl	453dc <flatcc_json_printer_uint8_field@@Base>
   281b0:	nop	{0}
   281b4:	sub	sp, fp, #4
   281b8:	ldr	fp, [sp]
   281bc:	add	sp, sp, #4
   281c0:	pop	{pc}		; (ldr pc, [sp], #4)
   281c4:			; <UNDEFINED> instruction: 0xfffff500
   281c8:	andeq	r5, r2, r8, ror #30
   281cc:			; <UNDEFINED> instruction: 0xfffff4cc
   281d0:	andeq	r5, r2, ip, lsr pc
   281d4:	andeq	r5, r2, ip, lsl pc
   281d8:	strdeq	r5, [r2], -r8
   281dc:	str	fp, [sp, #-8]!
   281e0:	str	lr, [sp, #4]
   281e4:	add	fp, sp, #4
   281e8:	sub	sp, sp, #32
   281ec:	str	r0, [fp, #-8]
   281f0:	str	r1, [fp, #-12]
   281f4:	ldr	r3, [pc, #308]	; 28330 <_start@@Base+0x13d38>
   281f8:	add	r3, pc, r3
   281fc:	str	r3, [sp, #4]
   28200:	mov	r3, #6
   28204:	str	r3, [sp]
   28208:	ldr	r3, [pc, #292]	; 28334 <_start@@Base+0x13d3c>
   2820c:	add	r3, pc, r3
   28210:	mov	r2, #0
   28214:	ldr	r1, [fp, #-12]
   28218:	ldr	r0, [fp, #-8]
   2821c:	bl	4c798 <flatcc_json_printer_struct_field@@Base>
   28220:	ldr	r3, [pc, #272]	; 28338 <_start@@Base+0x13d40>
   28224:	add	r3, pc, r3
   28228:	str	r3, [sp, #16]
   2822c:	mov	r2, #0
   28230:	mov	r3, #0
   28234:	strd	r2, [sp, #8]
   28238:	mov	r3, #6
   2823c:	str	r3, [sp]
   28240:	ldr	r3, [pc, #244]	; 2833c <_start@@Base+0x13d44>
   28244:	add	r3, pc, r3
   28248:	mov	r2, #1
   2824c:	ldr	r1, [fp, #-12]
   28250:	ldr	r0, [fp, #-8]
   28254:	bl	468bc <flatcc_json_printer_int64_enum_field@@Base>
   28258:	ldr	r3, [pc, #224]	; 28340 <_start@@Base+0x13d48>
   2825c:	add	r3, pc, r3
   28260:	str	r3, [sp, #16]
   28264:	mov	r2, #0
   28268:	mov	r3, #0
   2826c:	strd	r2, [sp, #8]
   28270:	mov	r3, #7
   28274:	str	r3, [sp]
   28278:	ldr	r3, [pc, #196]	; 28344 <_start@@Base+0x13d4c>
   2827c:	add	r3, pc, r3
   28280:	mov	r2, #2
   28284:	ldr	r1, [fp, #-12]
   28288:	ldr	r0, [fp, #-8]
   2828c:	bl	468bc <flatcc_json_printer_int64_enum_field@@Base>
   28290:	mov	r3, #0
   28294:	str	r3, [sp, #4]
   28298:	mov	r3, #7
   2829c:	str	r3, [sp]
   282a0:	ldr	r3, [pc, #160]	; 28348 <_start@@Base+0x13d50>
   282a4:	add	r3, pc, r3
   282a8:	mov	r2, #3
   282ac:	ldr	r1, [fp, #-12]
   282b0:	ldr	r0, [fp, #-8]
   282b4:	bl	45a78 <flatcc_json_printer_int32_field@@Base>
   282b8:	ldr	r3, [pc, #140]	; 2834c <_start@@Base+0x13d54>
   282bc:	add	r3, pc, r3
   282c0:	str	r3, [sp, #16]
   282c4:	mov	r2, #0
   282c8:	mov	r3, #0
   282cc:	strd	r2, [sp, #8]
   282d0:	mov	r3, #7
   282d4:	str	r3, [sp]
   282d8:	ldr	r3, [pc, #112]	; 28350 <_start@@Base+0x13d58>
   282dc:	add	r3, pc, r3
   282e0:	mov	r2, #4
   282e4:	ldr	r1, [fp, #-12]
   282e8:	ldr	r0, [fp, #-8]
   282ec:	bl	468bc <flatcc_json_printer_int64_enum_field@@Base>
   282f0:	mov	r2, #0
   282f4:	mov	r3, #0
   282f8:	strd	r2, [sp, #8]
   282fc:	mov	r3, #7
   28300:	str	r3, [sp]
   28304:	ldr	r3, [pc, #72]	; 28354 <_start@@Base+0x13d5c>
   28308:	add	r3, pc, r3
   2830c:	mov	r2, #5
   28310:	ldr	r1, [fp, #-12]
   28314:	ldr	r0, [fp, #-8]
   28318:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   2831c:	nop	{0}
   28320:	sub	sp, fp, #4
   28324:	ldr	fp, [sp]
   28328:	add	sp, sp, #4
   2832c:	pop	{pc}		; (ldr pc, [sp], #4)
   28330:			; <UNDEFINED> instruction: 0xfffffac0
   28334:	andeq	r5, r2, ip, lsl #29
   28338:			; <UNDEFINED> instruction: 0xfffff090
   2833c:	andeq	r5, r2, ip, asr lr
   28340:			; <UNDEFINED> instruction: 0xfffff058
   28344:	andeq	r5, r2, ip, lsr #28
   28348:	andeq	r5, r2, ip, lsl #28
   2834c:			; <UNDEFINED> instruction: 0xffffeff8
   28350:	ldrdeq	r5, [r2], -ip
   28354:			; <UNDEFINED> instruction: 0x00025db8
   28358:	str	fp, [sp, #-8]!
   2835c:	str	lr, [sp, #4]
   28360:	add	fp, sp, #4
   28364:	sub	sp, sp, #24
   28368:	str	r0, [fp, #-8]
   2836c:	str	r1, [fp, #-12]
   28370:	mov	r3, #2
   28374:	str	r3, [sp]
   28378:	ldr	r3, [pc, #120]	; 283f8 <_start@@Base+0x13e00>
   2837c:	add	r3, pc, r3
   28380:	mov	r2, #0
   28384:	ldr	r1, [fp, #-12]
   28388:	ldr	r0, [fp, #-8]
   2838c:	bl	4524c <flatcc_json_printer_string_field@@Base>
   28390:	mov	r2, #0
   28394:	mov	r3, #0
   28398:	strd	r2, [sp, #8]
   2839c:	mov	r3, #3
   283a0:	str	r3, [sp]
   283a4:	ldr	r3, [pc, #80]	; 283fc <_start@@Base+0x13e04>
   283a8:	add	r3, pc, r3
   283ac:	mov	r2, #1
   283b0:	ldr	r1, [fp, #-12]
   283b4:	ldr	r0, [fp, #-8]
   283b8:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   283bc:	mov	r3, #0
   283c0:	str	r3, [sp, #4]
   283c4:	mov	r3, #5
   283c8:	str	r3, [sp]
   283cc:	ldr	r3, [pc, #44]	; 28400 <_start@@Base+0x13e08>
   283d0:	add	r3, pc, r3
   283d4:	mov	r2, #2
   283d8:	ldr	r1, [fp, #-12]
   283dc:	ldr	r0, [fp, #-8]
   283e0:	bl	454f8 <flatcc_json_printer_uint16_field@@Base>
   283e4:	nop	{0}
   283e8:	sub	sp, fp, #4
   283ec:	ldr	fp, [sp]
   283f0:	add	sp, sp, #4
   283f4:	pop	{pc}		; (ldr pc, [sp], #4)
   283f8:	ldrdeq	r5, [r2], -r4
   283fc:	andeq	r5, r2, r0, lsr #26
   28400:	strdeq	r5, [r2], -ip
   28404:	str	fp, [sp, #-8]!
   28408:	str	lr, [sp, #4]
   2840c:	add	fp, sp, #4
   28410:	sub	sp, sp, #24
   28414:	str	r0, [fp, #-8]
   28418:	str	r1, [fp, #-12]
   2841c:	ldr	r3, [pc, #156]	; 284c0 <_start@@Base+0x13ec8>
   28420:	add	r3, pc, r3
   28424:	str	r3, [sp, #4]
   28428:	mov	r3, #6
   2842c:	str	r3, [sp]
   28430:	ldr	r3, [pc, #140]	; 284c4 <_start@@Base+0x13ecc>
   28434:	add	r3, pc, r3
   28438:	mov	r2, #0
   2843c:	ldr	r1, [fp, #-12]
   28440:	ldr	r0, [fp, #-8]
   28444:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28448:	ldr	r3, [pc, #120]	; 284c8 <_start@@Base+0x13ed0>
   2844c:	add	r3, pc, r3
   28450:	str	r3, [sp, #4]
   28454:	mov	r3, #5
   28458:	str	r3, [sp]
   2845c:	ldr	r3, [pc, #104]	; 284cc <_start@@Base+0x13ed4>
   28460:	add	r3, pc, r3
   28464:	mov	r2, #1
   28468:	ldr	r1, [fp, #-12]
   2846c:	ldr	r0, [fp, #-8]
   28470:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28474:	ldr	r3, [pc, #84]	; 284d0 <_start@@Base+0x13ed8>
   28478:	add	r3, pc, r3
   2847c:	str	r3, [sp, #8]
   28480:	ldr	r3, [pc, #76]	; 284d4 <_start@@Base+0x13edc>
   28484:	add	r3, pc, r3
   28488:	str	r3, [sp, #4]
   2848c:	mov	r3, #7
   28490:	str	r3, [sp]
   28494:	ldr	r3, [pc, #60]	; 284d8 <_start@@Base+0x13ee0>
   28498:	add	r3, pc, r3
   2849c:	mov	r2, #3
   284a0:	ldr	r1, [fp, #-12]
   284a4:	ldr	r0, [fp, #-8]
   284a8:	bl	4bcfc <flatcc_json_printer_union_vector_field@@Base>
   284ac:	nop	{0}
   284b0:	sub	sp, fp, #4
   284b4:	ldr	fp, [sp]
   284b8:	add	sp, sp, #4
   284bc:	pop	{pc}		; (ldr pc, [sp], #4)
   284c0:	strheq	r0, [r0], -r4
   284c4:	andeq	r5, r2, r0, lsr #25
   284c8:	andeq	r0, r0, r8, lsl lr
   284cc:	andeq	r5, r2, ip, ror ip
   284d0:			; <UNDEFINED> instruction: 0xfffff500
   284d4:			; <UNDEFINED> instruction: 0xfffff400
   284d8:	andeq	r5, r2, ip, asr #24
   284dc:	str	fp, [sp, #-8]!
   284e0:	str	lr, [sp, #4]
   284e4:	add	fp, sp, #4
   284e8:	sub	sp, sp, #16
   284ec:	str	r0, [fp, #-8]
   284f0:	str	r1, [fp, #-12]
   284f4:	ldr	r3, [pc, #144]	; 2858c <_start@@Base+0x13f94>
   284f8:	add	r3, pc, r3
   284fc:	str	r3, [sp, #4]
   28500:	mov	r3, #21
   28504:	str	r3, [sp]
   28508:	ldr	r3, [pc, #128]	; 28590 <_start@@Base+0x13f98>
   2850c:	add	r3, pc, r3
   28510:	mov	r2, #0
   28514:	ldr	r1, [fp, #-12]
   28518:	ldr	r0, [fp, #-8]
   2851c:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28520:	ldr	r3, [pc, #108]	; 28594 <_start@@Base+0x13f9c>
   28524:	add	r3, pc, r3
   28528:	str	r3, [sp, #4]
   2852c:	mov	r3, #22
   28530:	str	r3, [sp]
   28534:	ldr	r3, [pc, #92]	; 28598 <_start@@Base+0x13fa0>
   28538:	add	r3, pc, r3
   2853c:	mov	r2, #1
   28540:	ldr	r1, [fp, #-12]
   28544:	ldr	r0, [fp, #-8]
   28548:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   2854c:	ldr	r3, [pc, #72]	; 2859c <_start@@Base+0x13fa4>
   28550:	add	r3, pc, r3
   28554:	str	r3, [sp, #4]
   28558:	mov	r3, #22
   2855c:	str	r3, [sp]
   28560:	ldr	r3, [pc, #56]	; 285a0 <_start@@Base+0x13fa8>
   28564:	add	r3, pc, r3
   28568:	mov	r2, #2
   2856c:	ldr	r1, [fp, #-12]
   28570:	ldr	r0, [fp, #-8]
   28574:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28578:	nop	{0}
   2857c:	sub	sp, fp, #4
   28580:	ldr	fp, [sp]
   28584:	add	sp, sp, #4
   28588:	pop	{pc}		; (ldr pc, [sp], #4)
   2858c:	andeq	r0, r0, r4, lsr #1
   28590:	andeq	r5, r2, r0, ror #23
   28594:	andeq	r0, r0, r4, lsr #4
   28598:	andeq	r5, r2, ip, asr #23
   2859c:	andeq	r0, r0, r0, lsl #5
   285a0:			; <UNDEFINED> instruction: 0x00025bb8
   285a4:	str	fp, [sp, #-8]!
   285a8:	str	lr, [sp, #4]
   285ac:	add	fp, sp, #4
   285b0:	sub	sp, sp, #24
   285b4:	str	r0, [fp, #-8]
   285b8:	str	r1, [fp, #-12]
   285bc:	mov	r3, #4
   285c0:	str	r3, [sp]
   285c4:	ldr	r3, [pc, #352]	; 2872c <_start@@Base+0x14134>
   285c8:	add	r3, pc, r3
   285cc:	mov	r2, #0
   285d0:	ldr	r1, [fp, #-12]
   285d4:	ldr	r0, [fp, #-8]
   285d8:	bl	4524c <flatcc_json_printer_string_field@@Base>
   285dc:	mov	r3, #0
   285e0:	str	r3, [sp, #4]
   285e4:	mov	r3, #9
   285e8:	str	r3, [sp]
   285ec:	ldr	r3, [pc, #316]	; 28730 <_start@@Base+0x14138>
   285f0:	add	r3, pc, r3
   285f4:	mov	r2, #1
   285f8:	ldr	r1, [fp, #-12]
   285fc:	ldr	r0, [fp, #-8]
   28600:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   28604:	mov	r3, #4
   28608:	str	r3, [sp]
   2860c:	ldr	r3, [pc, #288]	; 28734 <_start@@Base+0x1413c>
   28610:	add	r3, pc, r3
   28614:	mov	r2, #2
   28618:	ldr	r1, [fp, #-12]
   2861c:	ldr	r0, [fp, #-8]
   28620:	bl	4524c <flatcc_json_printer_string_field@@Base>
   28624:	mov	r2, #0
   28628:	mov	r3, #0
   2862c:	strd	r2, [sp, #8]
   28630:	mov	r3, #8
   28634:	str	r3, [sp]
   28638:	ldr	r3, [pc, #248]	; 28738 <_start@@Base+0x14140>
   2863c:	add	r3, pc, r3
   28640:	mov	r2, #3
   28644:	ldr	r1, [fp, #-12]
   28648:	ldr	r0, [fp, #-8]
   2864c:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   28650:	mov	r3, #4
   28654:	str	r3, [sp]
   28658:	ldr	r3, [pc, #220]	; 2873c <_start@@Base+0x14144>
   2865c:	add	r3, pc, r3
   28660:	mov	r2, #4
   28664:	ldr	r1, [fp, #-12]
   28668:	ldr	r0, [fp, #-8]
   2866c:	bl	4524c <flatcc_json_printer_string_field@@Base>
   28670:	mov	r2, #0
   28674:	mov	r3, #0
   28678:	strd	r2, [sp, #8]
   2867c:	mov	r3, #8
   28680:	str	r3, [sp]
   28684:	ldr	r3, [pc, #180]	; 28740 <_start@@Base+0x14148>
   28688:	add	r3, pc, r3
   2868c:	mov	r2, #5
   28690:	ldr	r1, [fp, #-12]
   28694:	ldr	r0, [fp, #-8]
   28698:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   2869c:	mov	r3, #0
   286a0:	str	r3, [sp, #4]
   286a4:	mov	r3, #9
   286a8:	str	r3, [sp]
   286ac:	ldr	r3, [pc, #144]	; 28744 <_start@@Base+0x1414c>
   286b0:	add	r3, pc, r3
   286b4:	mov	r2, #6
   286b8:	ldr	r1, [fp, #-12]
   286bc:	ldr	r0, [fp, #-8]
   286c0:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   286c4:	mov	r2, #0
   286c8:	mov	r3, #0
   286cc:	strd	r2, [sp, #8]
   286d0:	mov	r3, #8
   286d4:	str	r3, [sp]
   286d8:	ldr	r3, [pc, #104]	; 28748 <_start@@Base+0x14150>
   286dc:	add	r3, pc, r3
   286e0:	mov	r2, #7
   286e4:	ldr	r1, [fp, #-12]
   286e8:	ldr	r0, [fp, #-8]
   286ec:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   286f0:	mov	r3, #0
   286f4:	str	r3, [sp, #4]
   286f8:	mov	r3, #9
   286fc:	str	r3, [sp]
   28700:	ldr	r3, [pc, #68]	; 2874c <_start@@Base+0x14154>
   28704:	add	r3, pc, r3
   28708:	mov	r2, #8
   2870c:	ldr	r1, [fp, #-12]
   28710:	ldr	r0, [fp, #-8]
   28714:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   28718:	nop	{0}
   2871c:	sub	sp, fp, #4
   28720:	ldr	fp, [sp]
   28724:	add	sp, sp, #4
   28728:	pop	{pc}		; (ldr pc, [sp], #4)
   2872c:	andeq	r5, r2, ip, ror #22
   28730:	andeq	r5, r2, ip, asr #22
   28734:	andeq	r5, r2, r8, lsr fp
   28738:	andeq	r5, r2, r4, lsl fp
   2873c:	andeq	r5, r2, r0, lsl #22
   28740:	ldrdeq	r5, [r2], -ip
   28744:	andeq	r5, r2, r0, asr #21
   28748:	andeq	r5, r2, r0, lsr #21
   2874c:	andeq	r5, r2, r4, lsl #21
   28750:	str	fp, [sp, #-8]!
   28754:	str	lr, [sp, #4]
   28758:	add	fp, sp, #4
   2875c:	sub	sp, sp, #24
   28760:	str	r0, [fp, #-8]
   28764:	str	r1, [fp, #-12]
   28768:	mov	r2, #0
   2876c:	mov	r3, #0
   28770:	strd	r2, [sp, #8]
   28774:	mov	r3, #15
   28778:	str	r3, [sp]
   2877c:	ldr	r3, [pc, #76]	; 287d0 <_start@@Base+0x141d8>
   28780:	add	r3, pc, r3
   28784:	mov	r2, #0
   28788:	ldr	r1, [fp, #-12]
   2878c:	ldr	r0, [fp, #-8]
   28790:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   28794:	mov	r3, #0
   28798:	str	r3, [sp, #4]
   2879c:	mov	r3, #16
   287a0:	str	r3, [sp]
   287a4:	ldr	r3, [pc, #40]	; 287d4 <_start@@Base+0x141dc>
   287a8:	add	r3, pc, r3
   287ac:	mov	r2, #1
   287b0:	ldr	r1, [fp, #-12]
   287b4:	ldr	r0, [fp, #-8]
   287b8:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   287bc:	nop	{0}
   287c0:	sub	sp, fp, #4
   287c4:	ldr	fp, [sp]
   287c8:	add	sp, sp, #4
   287cc:	pop	{pc}		; (ldr pc, [sp], #4)
   287d0:	andeq	r5, r2, r4, lsl sl
   287d4:	strdeq	r5, [r2], -ip
   287d8:	str	fp, [sp, #-8]!
   287dc:	str	lr, [sp, #4]
   287e0:	add	fp, sp, #4
   287e4:	sub	sp, sp, #24
   287e8:	str	r0, [fp, #-8]
   287ec:	str	r1, [fp, #-12]
   287f0:	mov	r2, #0
   287f4:	mov	r3, #0
   287f8:	strd	r2, [sp, #8]
   287fc:	mov	r3, #15
   28800:	str	r3, [sp]
   28804:	ldr	r3, [pc, #76]	; 28858 <_start@@Base+0x14260>
   28808:	add	r3, pc, r3
   2880c:	mov	r2, #0
   28810:	ldr	r1, [fp, #-12]
   28814:	ldr	r0, [fp, #-8]
   28818:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   2881c:	mov	r3, #0
   28820:	str	r3, [sp, #4]
   28824:	mov	r3, #21
   28828:	str	r3, [sp]
   2882c:	ldr	r3, [pc, #40]	; 2885c <_start@@Base+0x14264>
   28830:	add	r3, pc, r3
   28834:	mov	r2, #1
   28838:	ldr	r1, [fp, #-12]
   2883c:	ldr	r0, [fp, #-8]
   28840:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   28844:	nop	{0}
   28848:	sub	sp, fp, #4
   2884c:	ldr	fp, [sp]
   28850:	add	sp, sp, #4
   28854:	pop	{pc}		; (ldr pc, [sp], #4)
   28858:	andeq	r5, r2, ip, lsl #19
   2885c:	andeq	r5, r2, r8, lsl #19
   28860:	str	fp, [sp, #-8]!
   28864:	str	lr, [sp, #4]
   28868:	add	fp, sp, #4
   2886c:	sub	sp, sp, #16
   28870:	str	r0, [fp, #-8]
   28874:	str	r1, [fp, #-12]
   28878:	mov	r3, #0
   2887c:	str	r3, [sp, #4]
   28880:	mov	r3, #4
   28884:	str	r3, [sp]
   28888:	ldr	r3, [pc, #116]	; 28904 <_start@@Base+0x1430c>
   2888c:	add	r3, pc, r3
   28890:	mov	r2, #0
   28894:	ldr	r1, [fp, #-12]
   28898:	ldr	r0, [fp, #-8]
   2889c:	bl	45300 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   288a0:	mov	r3, #1
   288a4:	str	r3, [sp, #4]
   288a8:	mov	r3, #7
   288ac:	str	r3, [sp]
   288b0:	ldr	r3, [pc, #80]	; 28908 <_start@@Base+0x14310>
   288b4:	add	r3, pc, r3
   288b8:	mov	r2, #1
   288bc:	ldr	r1, [fp, #-12]
   288c0:	ldr	r0, [fp, #-8]
   288c4:	bl	45300 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   288c8:	mov	r3, #0
   288cc:	str	r3, [sp, #4]
   288d0:	mov	r3, #6
   288d4:	str	r3, [sp]
   288d8:	ldr	r3, [pc, #44]	; 2890c <_start@@Base+0x14314>
   288dc:	add	r3, pc, r3
   288e0:	mov	r2, #2
   288e4:	ldr	r1, [fp, #-12]
   288e8:	ldr	r0, [fp, #-8]
   288ec:	bl	45300 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   288f0:	nop	{0}
   288f4:	sub	sp, fp, #4
   288f8:	ldr	fp, [sp]
   288fc:	add	sp, sp, #4
   28900:	pop	{pc}		; (ldr pc, [sp], #4)
   28904:	andeq	r5, r2, r4, asr #18
   28908:	andeq	r5, r2, r4, lsr #18
   2890c:	andeq	r5, r2, r4, lsl #18
   28910:	str	fp, [sp, #-8]!
   28914:	str	lr, [sp, #4]
   28918:	add	fp, sp, #4
   2891c:	sub	sp, sp, #24
   28920:	str	r0, [fp, #-8]
   28924:	str	r1, [fp, #-12]
   28928:	ldr	r3, [pc, #1424]	; 28ec0 <_start@@Base+0x148c8>
   2892c:	add	r3, pc, r3
   28930:	str	r3, [sp, #4]
   28934:	mov	r3, #3
   28938:	str	r3, [sp]
   2893c:	ldr	r3, [pc, #1408]	; 28ec4 <_start@@Base+0x148cc>
   28940:	add	r3, pc, r3
   28944:	mov	r2, #0
   28948:	ldr	r1, [fp, #-12]
   2894c:	ldr	r0, [fp, #-8]
   28950:	bl	4c798 <flatcc_json_printer_struct_field@@Base>
   28954:	mov	r3, #150	; 0x96
   28958:	str	r3, [sp, #4]
   2895c:	mov	r3, #4
   28960:	str	r3, [sp]
   28964:	ldr	r3, [pc, #1372]	; 28ec8 <_start@@Base+0x148d0>
   28968:	add	r3, pc, r3
   2896c:	mov	r2, #1
   28970:	ldr	r1, [fp, #-12]
   28974:	ldr	r0, [fp, #-8]
   28978:	bl	4595c <flatcc_json_printer_int16_field@@Base>
   2897c:	mov	r3, #100	; 0x64
   28980:	str	r3, [sp, #4]
   28984:	mov	r3, #2
   28988:	str	r3, [sp]
   2898c:	ldr	r3, [pc, #1336]	; 28ecc <_start@@Base+0x148d4>
   28990:	add	r3, pc, r3
   28994:	mov	r2, #2
   28998:	ldr	r1, [fp, #-12]
   2899c:	ldr	r0, [fp, #-8]
   289a0:	bl	4595c <flatcc_json_printer_int16_field@@Base>
   289a4:	mov	r3, #4
   289a8:	str	r3, [sp]
   289ac:	ldr	r3, [pc, #1308]	; 28ed0 <_start@@Base+0x148d8>
   289b0:	add	r3, pc, r3
   289b4:	mov	r2, #3
   289b8:	ldr	r1, [fp, #-12]
   289bc:	ldr	r0, [fp, #-8]
   289c0:	bl	4524c <flatcc_json_printer_string_field@@Base>
   289c4:	mov	r3, #9
   289c8:	str	r3, [sp]
   289cc:	ldr	r3, [pc, #1280]	; 28ed4 <_start@@Base+0x148dc>
   289d0:	add	r3, pc, r3
   289d4:	mov	r2, #5
   289d8:	ldr	r1, [fp, #-12]
   289dc:	ldr	r0, [fp, #-8]
   289e0:	bl	47dac <flatcc_json_printer_uint8_vector_field@@Base>
   289e4:	ldr	r3, [pc, #1260]	; 28ed8 <_start@@Base+0x148e0>
   289e8:	add	r3, pc, r3
   289ec:	str	r3, [sp, #8]
   289f0:	mov	r3, #8
   289f4:	str	r3, [sp, #4]
   289f8:	mov	r3, #5
   289fc:	str	r3, [sp]
   28a00:	ldr	r3, [pc, #1236]	; 28edc <_start@@Base+0x148e4>
   28a04:	add	r3, pc, r3
   28a08:	mov	r2, #6
   28a0c:	ldr	r1, [fp, #-12]
   28a10:	ldr	r0, [fp, #-8]
   28a14:	bl	464fc <flatcc_json_printer_int8_enum_field@@Base>
   28a18:	ldr	r3, [pc, #1216]	; 28ee0 <_start@@Base+0x148e8>
   28a1c:	add	r3, pc, r3
   28a20:	str	r3, [sp, #8]
   28a24:	ldr	r3, [pc, #1208]	; 28ee4 <_start@@Base+0x148ec>
   28a28:	add	r3, pc, r3
   28a2c:	str	r3, [sp, #4]
   28a30:	mov	r3, #4
   28a34:	str	r3, [sp]
   28a38:	ldr	r3, [pc, #1192]	; 28ee8 <_start@@Base+0x148f0>
   28a3c:	add	r3, pc, r3
   28a40:	mov	r2, #8
   28a44:	ldr	r1, [fp, #-12]
   28a48:	ldr	r0, [fp, #-8]
   28a4c:	bl	4c1d4 <flatcc_json_printer_union_field@@Base>
   28a50:	ldr	r3, [pc, #1172]	; 28eec <_start@@Base+0x148f4>
   28a54:	add	r3, pc, r3
   28a58:	str	r3, [sp, #8]
   28a5c:	mov	r3, #4
   28a60:	str	r3, [sp, #4]
   28a64:	mov	r3, #5
   28a68:	str	r3, [sp]
   28a6c:	ldr	r3, [pc, #1148]	; 28ef0 <_start@@Base+0x148f8>
   28a70:	add	r3, pc, r3
   28a74:	mov	r2, #9
   28a78:	ldr	r1, [fp, #-12]
   28a7c:	ldr	r0, [fp, #-8]
   28a80:	bl	4b53c <flatcc_json_printer_struct_vector_field@@Base>
   28a84:	mov	r3, #17
   28a88:	str	r3, [sp]
   28a8c:	ldr	r3, [pc, #1120]	; 28ef4 <_start@@Base+0x148fc>
   28a90:	add	r3, pc, r3
   28a94:	mov	r2, #10
   28a98:	ldr	r1, [fp, #-12]
   28a9c:	ldr	r0, [fp, #-8]
   28aa0:	bl	4b8b4 <flatcc_json_printer_string_vector_field@@Base>
   28aa4:	ldr	r3, [pc, #1100]	; 28ef8 <_start@@Base+0x14900>
   28aa8:	add	r3, pc, r3
   28aac:	str	r3, [sp, #4]
   28ab0:	mov	r3, #17
   28ab4:	str	r3, [sp]
   28ab8:	ldr	r3, [pc, #1084]	; 28efc <_start@@Base+0x14904>
   28abc:	add	r3, pc, r3
   28ac0:	mov	r2, #11
   28ac4:	ldr	r1, [fp, #-12]
   28ac8:	ldr	r0, [fp, #-8]
   28acc:	bl	4bb10 <flatcc_json_printer_table_vector_field@@Base>
   28ad0:	ldr	r3, [pc, #1064]	; 28f00 <_start@@Base+0x14908>
   28ad4:	add	r3, pc, r3
   28ad8:	str	r3, [sp, #4]
   28adc:	mov	r3, #5
   28ae0:	str	r3, [sp]
   28ae4:	ldr	r3, [pc, #1048]	; 28f04 <_start@@Base+0x1490c>
   28ae8:	add	r3, pc, r3
   28aec:	mov	r2, #12
   28af0:	ldr	r1, [fp, #-12]
   28af4:	ldr	r0, [fp, #-8]
   28af8:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28afc:	ldr	r3, [pc, #1028]	; 28f08 <_start@@Base+0x14910>
   28b00:	add	r3, pc, r3
   28b04:	str	r3, [sp, #8]
   28b08:	mov	r3, #0
   28b0c:	str	r3, [sp, #4]
   28b10:	mov	r3, #20
   28b14:	str	r3, [sp]
   28b18:	ldr	r3, [pc, #1004]	; 28f0c <_start@@Base+0x14914>
   28b1c:	add	r3, pc, r3
   28b20:	mov	r2, #13
   28b24:	ldr	r1, [fp, #-12]
   28b28:	ldr	r0, [fp, #-8]
   28b2c:	bl	4ce3c <flatcc_json_printer_table_as_nested_root@@Base>
   28b30:	ldr	r3, [pc, #984]	; 28f10 <_start@@Base+0x14918>
   28b34:	add	r3, pc, r3
   28b38:	str	r3, [sp, #4]
   28b3c:	mov	r3, #9
   28b40:	str	r3, [sp]
   28b44:	ldr	r3, [pc, #968]	; 28f14 <_start@@Base+0x1491c>
   28b48:	add	r3, pc, r3
   28b4c:	mov	r2, #14
   28b50:	ldr	r1, [fp, #-12]
   28b54:	ldr	r0, [fp, #-8]
   28b58:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28b5c:	mov	r3, #1
   28b60:	str	r3, [sp, #4]
   28b64:	mov	r3, #8
   28b68:	str	r3, [sp]
   28b6c:	ldr	r3, [pc, #932]	; 28f18 <_start@@Base+0x14920>
   28b70:	add	r3, pc, r3
   28b74:	mov	r2, #15
   28b78:	ldr	r1, [fp, #-12]
   28b7c:	ldr	r0, [fp, #-8]
   28b80:	bl	45ca4 <flatcc_json_printer_bool_field@@Base>
   28b84:	mov	r3, #0
   28b88:	str	r3, [sp, #4]
   28b8c:	mov	r3, #16
   28b90:	str	r3, [sp]
   28b94:	ldr	r3, [pc, #896]	; 28f1c <_start@@Base+0x14924>
   28b98:	add	r3, pc, r3
   28b9c:	mov	r2, #16
   28ba0:	ldr	r1, [fp, #-12]
   28ba4:	ldr	r0, [fp, #-8]
   28ba8:	bl	45a78 <flatcc_json_printer_int32_field@@Base>
   28bac:	mov	r3, #0
   28bb0:	str	r3, [sp, #4]
   28bb4:	mov	r3, #16
   28bb8:	str	r3, [sp]
   28bbc:	ldr	r3, [pc, #860]	; 28f20 <_start@@Base+0x14928>
   28bc0:	add	r3, pc, r3
   28bc4:	mov	r2, #17
   28bc8:	ldr	r1, [fp, #-12]
   28bcc:	ldr	r0, [fp, #-8]
   28bd0:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   28bd4:	mov	r2, #0
   28bd8:	mov	r3, #0
   28bdc:	strd	r2, [sp, #8]
   28be0:	mov	r3, #16
   28be4:	str	r3, [sp]
   28be8:	ldr	r3, [pc, #820]	; 28f24 <_start@@Base+0x1492c>
   28bec:	add	r3, pc, r3
   28bf0:	mov	r2, #18
   28bf4:	ldr	r1, [fp, #-12]
   28bf8:	ldr	r0, [fp, #-8]
   28bfc:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   28c00:	mov	r2, #0
   28c04:	mov	r3, #0
   28c08:	strd	r2, [sp, #8]
   28c0c:	mov	r3, #16
   28c10:	str	r3, [sp]
   28c14:	ldr	r3, [pc, #780]	; 28f28 <_start@@Base+0x14930>
   28c18:	add	r3, pc, r3
   28c1c:	mov	r2, #19
   28c20:	ldr	r1, [fp, #-12]
   28c24:	ldr	r0, [fp, #-8]
   28c28:	bl	45728 <flatcc_json_printer_uint64_field@@Base>
   28c2c:	mov	r3, #0
   28c30:	str	r3, [sp, #4]
   28c34:	mov	r3, #17
   28c38:	str	r3, [sp]
   28c3c:	ldr	r3, [pc, #744]	; 28f2c <_start@@Base+0x14934>
   28c40:	add	r3, pc, r3
   28c44:	mov	r2, #20
   28c48:	ldr	r1, [fp, #-12]
   28c4c:	ldr	r0, [fp, #-8]
   28c50:	bl	45a78 <flatcc_json_printer_int32_field@@Base>
   28c54:	mov	r3, #0
   28c58:	str	r3, [sp, #4]
   28c5c:	mov	r3, #17
   28c60:	str	r3, [sp]
   28c64:	ldr	r3, [pc, #708]	; 28f30 <_start@@Base+0x14938>
   28c68:	add	r3, pc, r3
   28c6c:	mov	r2, #21
   28c70:	ldr	r1, [fp, #-12]
   28c74:	ldr	r0, [fp, #-8]
   28c78:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   28c7c:	mov	r2, #0
   28c80:	mov	r3, #0
   28c84:	strd	r2, [sp, #8]
   28c88:	mov	r3, #17
   28c8c:	str	r3, [sp]
   28c90:	ldr	r3, [pc, #668]	; 28f34 <_start@@Base+0x1493c>
   28c94:	add	r3, pc, r3
   28c98:	mov	r2, #22
   28c9c:	ldr	r1, [fp, #-12]
   28ca0:	ldr	r0, [fp, #-8]
   28ca4:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   28ca8:	mov	r2, #0
   28cac:	mov	r3, #0
   28cb0:	strd	r2, [sp, #8]
   28cb4:	mov	r3, #17
   28cb8:	str	r3, [sp]
   28cbc:	ldr	r3, [pc, #628]	; 28f38 <_start@@Base+0x14940>
   28cc0:	add	r3, pc, r3
   28cc4:	mov	r2, #23
   28cc8:	ldr	r1, [fp, #-12]
   28ccc:	ldr	r0, [fp, #-8]
   28cd0:	bl	45728 <flatcc_json_printer_uint64_field@@Base>
   28cd4:	mov	r3, #16
   28cd8:	str	r3, [sp]
   28cdc:	ldr	r3, [pc, #600]	; 28f3c <_start@@Base+0x14944>
   28ce0:	add	r3, pc, r3
   28ce4:	mov	r2, #24
   28ce8:	ldr	r1, [fp, #-12]
   28cec:	ldr	r0, [fp, #-8]
   28cf0:	bl	492ec <flatcc_json_printer_bool_vector_field@@Base>
   28cf4:	mov	r3, #5
   28cf8:	str	r3, [sp]
   28cfc:	vldr	s0, [pc, #432]	; 28eb4 <_start@@Base+0x148bc>
   28d00:	ldr	r3, [pc, #568]	; 28f40 <_start@@Base+0x14948>
   28d04:	add	r3, pc, r3
   28d08:	mov	r2, #25
   28d0c:	ldr	r1, [fp, #-12]
   28d10:	ldr	r0, [fp, #-8]
   28d14:	bl	45dc0 <flatcc_json_printer_float_field@@Base>
   28d18:	mov	r3, #6
   28d1c:	str	r3, [sp]
   28d20:	vldr	s0, [pc, #400]	; 28eb8 <_start@@Base+0x148c0>
   28d24:	ldr	r3, [pc, #536]	; 28f44 <_start@@Base+0x1494c>
   28d28:	add	r3, pc, r3
   28d2c:	mov	r2, #26
   28d30:	ldr	r1, [fp, #-12]
   28d34:	ldr	r0, [fp, #-8]
   28d38:	bl	45dc0 <flatcc_json_printer_float_field@@Base>
   28d3c:	mov	r3, #6
   28d40:	str	r3, [sp]
   28d44:	vldr	s0, [pc, #368]	; 28ebc <_start@@Base+0x148c4>
   28d48:	ldr	r3, [pc, #504]	; 28f48 <_start@@Base+0x14950>
   28d4c:	add	r3, pc, r3
   28d50:	mov	r2, #27
   28d54:	ldr	r1, [fp, #-12]
   28d58:	ldr	r0, [fp, #-8]
   28d5c:	bl	45dc0 <flatcc_json_printer_float_field@@Base>
   28d60:	mov	r3, #18
   28d64:	str	r3, [sp]
   28d68:	ldr	r3, [pc, #476]	; 28f4c <_start@@Base+0x14954>
   28d6c:	add	r3, pc, r3
   28d70:	mov	r2, #28
   28d74:	ldr	r1, [fp, #-12]
   28d78:	ldr	r0, [fp, #-8]
   28d7c:	bl	4b8b4 <flatcc_json_printer_string_vector_field@@Base>
   28d80:	ldr	r3, [pc, #456]	; 28f50 <_start@@Base+0x14958>
   28d84:	add	r3, pc, r3
   28d88:	str	r3, [sp, #8]
   28d8c:	mov	r3, #8
   28d90:	str	r3, [sp, #4]
   28d94:	mov	r3, #23
   28d98:	str	r3, [sp]
   28d9c:	ldr	r3, [pc, #432]	; 28f54 <_start@@Base+0x1495c>
   28da0:	add	r3, pc, r3
   28da4:	mov	r2, #29
   28da8:	ldr	r1, [fp, #-12]
   28dac:	ldr	r0, [fp, #-8]
   28db0:	bl	4b53c <flatcc_json_printer_struct_vector_field@@Base>
   28db4:	mov	r3, #4
   28db8:	str	r3, [sp]
   28dbc:	ldr	r3, [pc, #404]	; 28f58 <_start@@Base+0x14960>
   28dc0:	add	r3, pc, r3
   28dc4:	mov	r2, #30
   28dc8:	ldr	r1, [fp, #-12]
   28dcc:	ldr	r0, [fp, #-8]
   28dd0:	bl	47dac <flatcc_json_printer_uint8_vector_field@@Base>
   28dd4:	ldr	r3, [pc, #384]	; 28f5c <_start@@Base+0x14964>
   28dd8:	add	r3, pc, r3
   28ddc:	str	r3, [sp, #8]
   28de0:	mov	r3, #4
   28de4:	str	r3, [sp, #4]
   28de8:	mov	r3, #5
   28dec:	str	r3, [sp]
   28df0:	ldr	r3, [pc, #360]	; 28f60 <_start@@Base+0x14968>
   28df4:	add	r3, pc, r3
   28df8:	mov	r2, #31
   28dfc:	ldr	r1, [fp, #-12]
   28e00:	ldr	r0, [fp, #-8]
   28e04:	bl	4b53c <flatcc_json_printer_struct_vector_field@@Base>
   28e08:	mov	r3, #15
   28e0c:	str	r3, [sp]
   28e10:	ldr	r3, [pc, #332]	; 28f64 <_start@@Base+0x1496c>
   28e14:	add	r3, pc, r3
   28e18:	mov	r2, #32
   28e1c:	ldr	r1, [fp, #-12]
   28e20:	ldr	r0, [fp, #-8]
   28e24:	bl	49054 <flatcc_json_printer_int64_vector_field@@Base>
   28e28:	mov	r3, #17
   28e2c:	str	r3, [sp]
   28e30:	ldr	r3, [pc, #304]	; 28f68 <_start@@Base+0x14970>
   28e34:	add	r3, pc, r3
   28e38:	mov	r2, #33	; 0x21
   28e3c:	ldr	r1, [fp, #-12]
   28e40:	ldr	r0, [fp, #-8]
   28e44:	bl	4984c <flatcc_json_printer_double_vector_field@@Base>
   28e48:	ldr	r3, [pc, #284]	; 28f6c <_start@@Base+0x14974>
   28e4c:	add	r3, pc, r3
   28e50:	str	r3, [sp, #4]
   28e54:	mov	r3, #21
   28e58:	str	r3, [sp]
   28e5c:	ldr	r3, [pc, #268]	; 28f70 <_start@@Base+0x14978>
   28e60:	add	r3, pc, r3
   28e64:	mov	r2, #34	; 0x22
   28e68:	ldr	r1, [fp, #-12]
   28e6c:	ldr	r0, [fp, #-8]
   28e70:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28e74:	ldr	r3, [pc, #248]	; 28f74 <_start@@Base+0x1497c>
   28e78:	add	r3, pc, r3
   28e7c:	str	r3, [sp, #4]
   28e80:	mov	r3, #10
   28e84:	str	r3, [sp]
   28e88:	ldr	r3, [pc, #232]	; 28f78 <_start@@Base+0x14980>
   28e8c:	add	r3, pc, r3
   28e90:	mov	r2, #35	; 0x23
   28e94:	ldr	r1, [fp, #-12]
   28e98:	ldr	r0, [fp, #-8]
   28e9c:	bl	4c118 <flatcc_json_printer_table_field@@Base>
   28ea0:	nop	{0}
   28ea4:	sub	sp, fp, #4
   28ea8:	ldr	fp, [sp]
   28eac:	add	sp, sp, #4
   28eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   28eb4:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   28eb8:	submi	r0, r0, r0
   28ebc:	andeq	r0, r0, r0
   28ec0:			; <UNDEFINED> instruction: 0xfffff458
   28ec4:	andeq	r5, r2, r8, lsr #17
   28ec8:	andeq	r5, r2, r4, lsl #17
   28ecc:	andeq	r5, r2, r4, ror #16
   28ed0:	andeq	r5, r2, r8, asr #16
   28ed4:	andeq	r5, r2, r0, lsr r8
   28ed8:			; <UNDEFINED> instruction: 0xffffec14
   28edc:	andeq	r5, r2, ip, ror r6
   28ee0:			; <UNDEFINED> instruction: 0xffffef5c
   28ee4:			; <UNDEFINED> instruction: 0xffffee5c
   28ee8:	ldrdeq	r5, [r2], -r0
   28eec:			; <UNDEFINED> instruction: 0xfffff288
   28ef0:	andeq	r5, r2, r4, lsr #15
   28ef4:	andeq	r5, r2, ip, lsl #15
   28ef8:			; <UNDEFINED> instruction: 0xfffffe60
   28efc:	andeq	r5, r2, r4, ror r7
   28f00:			; <UNDEFINED> instruction: 0xfffffe34
   28f04:	andeq	r5, r2, ip, asr r7
   28f08:			; <UNDEFINED> instruction: 0xfffffe08
   28f0c:	andeq	r5, r2, r0, lsr r7
   28f10:			; <UNDEFINED> instruction: 0xfffff81c
   28f14:	andeq	r5, r2, ip, lsl r7
   28f18:	andeq	r5, r2, r0, lsl #14
   28f1c:	andeq	r5, r2, r4, ror #13
   28f20:	ldrdeq	r5, [r2], -r0
   28f24:			; <UNDEFINED> instruction: 0x000256b8
   28f28:	andeq	r5, r2, r0, lsr #13
   28f2c:	andeq	r5, r2, ip, lsl #13
   28f30:	andeq	r5, r2, r8, ror r6
   28f34:	andeq	r5, r2, r0, ror #12
   28f38:	andeq	r5, r2, r8, asr #12
   28f3c:	andeq	r5, r2, ip, lsr r6
   28f40:	andeq	r5, r2, ip, lsr #12
   28f44:	andeq	r5, r2, r0, lsl r6
   28f48:	strdeq	r5, [r2], -r4
   28f4c:	ldrdeq	r5, [r2], -ip
   28f50:			; <UNDEFINED> instruction: 0xfffff154
   28f54:			; <UNDEFINED> instruction: 0x000255bc
   28f58:			; <UNDEFINED> instruction: 0x000255b4
   28f5c:			; <UNDEFINED> instruction: 0xffffef04
   28f60:	andeq	r5, r2, r8, lsl #11
   28f64:	andeq	r5, r2, r0, ror r5
   28f68:	andeq	r5, r2, r0, ror #10
   28f6c:			; <UNDEFINED> instruction: 0xfffff1c0
   28f70:	andeq	r5, r2, r8, asr #10
   28f74:			; <UNDEFINED> instruction: 0xfffff9e0
   28f78:	andeq	r5, r2, r4, lsr r5
   28f7c:	str	fp, [sp, #-8]!
   28f80:	str	lr, [sp, #4]
   28f84:	add	fp, sp, #4
   28f88:	sub	sp, sp, #24
   28f8c:	str	r0, [fp, #-8]
   28f90:	str	r1, [fp, #-12]
   28f94:	str	r2, [fp, #-16]
   28f98:	str	r3, [fp, #-20]	; 0xffffffec
   28f9c:	ldr	r3, [pc, #48]	; 28fd4 <_start@@Base+0x149dc>
   28fa0:	add	r3, pc, r3
   28fa4:	str	r3, [sp]
   28fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28fac:	ldr	r2, [fp, #-16]
   28fb0:	ldr	r1, [fp, #-12]
   28fb4:	ldr	r0, [fp, #-8]
   28fb8:	bl	4cb9c <flatcc_json_printer_table_as_root@@Base>
   28fbc:	mov	r3, r0
   28fc0:	mov	r0, r3
   28fc4:	sub	sp, fp, #4
   28fc8:	ldr	fp, [sp]
   28fcc:	add	sp, sp, #4
   28fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   28fd4:			; <UNDEFINED> instruction: 0xfffff968
   28fd8:	str	fp, [sp, #-8]!
   28fdc:	str	lr, [sp, #4]
   28fe0:	add	fp, sp, #4
   28fe4:	sub	sp, sp, #24
   28fe8:	str	r0, [fp, #-8]
   28fec:	str	r1, [fp, #-12]
   28ff0:	mov	r3, #0
   28ff4:	str	r3, [sp, #4]
   28ff8:	mov	r3, #2
   28ffc:	str	r3, [sp]
   29000:	ldr	r3, [pc, #476]	; 291e4 <_start@@Base+0x14bec>
   29004:	add	r3, pc, r3
   29008:	mov	r2, #0
   2900c:	ldr	r1, [fp, #-12]
   29010:	ldr	r0, [fp, #-8]
   29014:	bl	45840 <flatcc_json_printer_int8_field@@Base>
   29018:	mov	r3, #0
   2901c:	str	r3, [sp, #4]
   29020:	mov	r3, #2
   29024:	str	r3, [sp]
   29028:	ldr	r3, [pc, #440]	; 291e8 <_start@@Base+0x14bf0>
   2902c:	add	r3, pc, r3
   29030:	mov	r2, #1
   29034:	ldr	r1, [fp, #-12]
   29038:	ldr	r0, [fp, #-8]
   2903c:	bl	453dc <flatcc_json_printer_uint8_field@@Base>
   29040:	mov	r3, #0
   29044:	str	r3, [sp, #4]
   29048:	mov	r3, #3
   2904c:	str	r3, [sp]
   29050:	ldr	r3, [pc, #404]	; 291ec <_start@@Base+0x14bf4>
   29054:	add	r3, pc, r3
   29058:	mov	r2, #2
   2905c:	ldr	r1, [fp, #-12]
   29060:	ldr	r0, [fp, #-8]
   29064:	bl	4595c <flatcc_json_printer_int16_field@@Base>
   29068:	mov	r3, #0
   2906c:	str	r3, [sp, #4]
   29070:	mov	r3, #3
   29074:	str	r3, [sp]
   29078:	ldr	r3, [pc, #368]	; 291f0 <_start@@Base+0x14bf8>
   2907c:	add	r3, pc, r3
   29080:	mov	r2, #3
   29084:	ldr	r1, [fp, #-12]
   29088:	ldr	r0, [fp, #-8]
   2908c:	bl	454f8 <flatcc_json_printer_uint16_field@@Base>
   29090:	mov	r3, #0
   29094:	str	r3, [sp, #4]
   29098:	mov	r3, #3
   2909c:	str	r3, [sp]
   290a0:	ldr	r3, [pc, #332]	; 291f4 <_start@@Base+0x14bfc>
   290a4:	add	r3, pc, r3
   290a8:	mov	r2, #4
   290ac:	ldr	r1, [fp, #-12]
   290b0:	ldr	r0, [fp, #-8]
   290b4:	bl	45a78 <flatcc_json_printer_int32_field@@Base>
   290b8:	mov	r3, #0
   290bc:	str	r3, [sp, #4]
   290c0:	mov	r3, #3
   290c4:	str	r3, [sp]
   290c8:	ldr	r3, [pc, #296]	; 291f8 <_start@@Base+0x14c00>
   290cc:	add	r3, pc, r3
   290d0:	mov	r2, #5
   290d4:	ldr	r1, [fp, #-12]
   290d8:	ldr	r0, [fp, #-8]
   290dc:	bl	45614 <flatcc_json_printer_uint32_field@@Base>
   290e0:	mov	r2, #0
   290e4:	mov	r3, #0
   290e8:	strd	r2, [sp, #8]
   290ec:	mov	r3, #3
   290f0:	str	r3, [sp]
   290f4:	ldr	r3, [pc, #256]	; 291fc <_start@@Base+0x14c04>
   290f8:	add	r3, pc, r3
   290fc:	mov	r2, #6
   29100:	ldr	r1, [fp, #-12]
   29104:	ldr	r0, [fp, #-8]
   29108:	bl	45b8c <flatcc_json_printer_int64_field@@Base>
   2910c:	mov	r2, #0
   29110:	mov	r3, #0
   29114:	strd	r2, [sp, #8]
   29118:	mov	r3, #3
   2911c:	str	r3, [sp]
   29120:	ldr	r3, [pc, #216]	; 29200 <_start@@Base+0x14c08>
   29124:	add	r3, pc, r3
   29128:	mov	r2, #7
   2912c:	ldr	r1, [fp, #-12]
   29130:	ldr	r0, [fp, #-8]
   29134:	bl	45728 <flatcc_json_printer_uint64_field@@Base>
   29138:	mov	r3, #3
   2913c:	str	r3, [sp]
   29140:	vldr	s0, [pc, #152]	; 291e0 <_start@@Base+0x14be8>
   29144:	ldr	r3, [pc, #184]	; 29204 <_start@@Base+0x14c0c>
   29148:	add	r3, pc, r3
   2914c:	mov	r2, #8
   29150:	ldr	r1, [fp, #-12]
   29154:	ldr	r0, [fp, #-8]
   29158:	bl	45dc0 <flatcc_json_printer_float_field@@Base>
   2915c:	mov	r3, #3
   29160:	str	r3, [sp]
   29164:	vldr	d0, [pc, #108]	; 291d8 <_start@@Base+0x14be0>
   29168:	ldr	r3, [pc, #152]	; 29208 <_start@@Base+0x14c10>
   2916c:	add	r3, pc, r3
   29170:	mov	r2, #9
   29174:	ldr	r1, [fp, #-12]
   29178:	ldr	r0, [fp, #-8]
   2917c:	bl	45ee4 <flatcc_json_printer_double_field@@Base>
   29180:	mov	r3, #2
   29184:	str	r3, [sp]
   29188:	ldr	r3, [pc, #124]	; 2920c <_start@@Base+0x14c14>
   2918c:	add	r3, pc, r3
   29190:	mov	r2, #10
   29194:	ldr	r1, [fp, #-12]
   29198:	ldr	r0, [fp, #-8]
   2919c:	bl	4884c <flatcc_json_printer_int8_vector_field@@Base>
   291a0:	mov	r3, #4
   291a4:	str	r3, [sp]
   291a8:	ldr	r3, [pc, #96]	; 29210 <_start@@Base+0x14c18>
   291ac:	add	r3, pc, r3
   291b0:	mov	r2, #11
   291b4:	ldr	r1, [fp, #-12]
   291b8:	ldr	r0, [fp, #-8]
   291bc:	bl	4984c <flatcc_json_printer_double_vector_field@@Base>
   291c0:	nop	{0}
   291c4:	sub	sp, fp, #4
   291c8:	ldr	fp, [sp]
   291cc:	add	sp, sp, #4
   291d0:	pop	{pc}		; (ldr pc, [sp], #4)
   291d4:	nop	{0}
	...
   291e4:	andeq	r5, r2, r8, asr #7
   291e8:	andeq	r5, r2, r4, lsr #7
   291ec:	andeq	r5, r2, r0, lsl #7
   291f0:	andeq	r5, r2, ip, asr r3
   291f4:	andeq	r5, r2, r8, lsr r3
   291f8:	andeq	r5, r2, r4, lsl r3
   291fc:	andeq	r5, r2, ip, ror #5
   29200:	andeq	r5, r2, r4, asr #5
   29204:	andeq	r5, r2, r4, lsr #5
   29208:	andeq	r5, r2, r4, lsl #5
   2920c:	andeq	r5, r2, r8, ror #4
   29210:	andeq	r5, r2, ip, asr #4
   29214:	str	fp, [sp, #-8]!
   29218:	str	lr, [sp, #4]
   2921c:	add	fp, sp, #4
   29220:	sub	sp, sp, #16
   29224:	str	r0, [fp, #-8]
   29228:	str	r1, [fp, #-12]
   2922c:	mov	r3, #0
   29230:	str	r3, [sp, #4]
   29234:	mov	r3, #19
   29238:	str	r3, [sp]
   2923c:	ldr	r3, [pc, #36]	; 29268 <_start@@Base+0x14c70>
   29240:	add	r3, pc, r3
   29244:	mov	r2, #0
   29248:	ldr	r1, [fp, #-12]
   2924c:	ldr	r0, [fp, #-8]
   29250:	bl	45a78 <flatcc_json_printer_int32_field@@Base>
   29254:	nop	{0}
   29258:	sub	sp, fp, #4
   2925c:	ldr	fp, [sp]
   29260:	add	sp, sp, #4
   29264:	pop	{pc}		; (ldr pc, [sp], #4)
   29268:	andeq	r5, r2, r0, asr #3
   2926c:	str	fp, [sp, #-8]!
   29270:	str	lr, [sp, #4]
   29274:	add	fp, sp, #4
   29278:	sub	sp, sp, #24
   2927c:	str	r0, [fp, #-8]
   29280:	str	r1, [fp, #-12]
   29284:	ldr	r3, [pc, #292]	; 293b0 <_start@@Base+0x14db8>
   29288:	add	r3, pc, r3
   2928c:	str	r3, [sp, #8]
   29290:	ldr	r3, [pc, #284]	; 293b4 <_start@@Base+0x14dbc>
   29294:	add	r3, pc, r3
   29298:	str	r3, [sp, #4]
   2929c:	mov	r3, #14
   292a0:	str	r3, [sp]
   292a4:	ldr	r3, [pc, #268]	; 293b8 <_start@@Base+0x14dc0>
   292a8:	add	r3, pc, r3
   292ac:	mov	r2, #1
   292b0:	ldr	r1, [fp, #-12]
   292b4:	ldr	r0, [fp, #-8]
   292b8:	bl	4c1d4 <flatcc_json_printer_union_field@@Base>
   292bc:	ldr	r3, [pc, #248]	; 293bc <_start@@Base+0x14dc4>
   292c0:	add	r3, pc, r3
   292c4:	str	r3, [sp, #8]
   292c8:	ldr	r3, [pc, #240]	; 293c0 <_start@@Base+0x14dc8>
   292cc:	add	r3, pc, r3
   292d0:	str	r3, [sp, #4]
   292d4:	mov	r3, #10
   292d8:	str	r3, [sp]
   292dc:	ldr	r3, [pc, #224]	; 293c4 <_start@@Base+0x14dcc>
   292e0:	add	r3, pc, r3
   292e4:	mov	r2, #3
   292e8:	ldr	r1, [fp, #-12]
   292ec:	ldr	r0, [fp, #-8]
   292f0:	bl	4c1d4 <flatcc_json_printer_union_field@@Base>
   292f4:	ldr	r3, [pc, #204]	; 293c8 <_start@@Base+0x14dd0>
   292f8:	add	r3, pc, r3
   292fc:	str	r3, [sp, #8]
   29300:	ldr	r3, [pc, #196]	; 293cc <_start@@Base+0x14dd4>
   29304:	add	r3, pc, r3
   29308:	str	r3, [sp, #4]
   2930c:	mov	r3, #9
   29310:	str	r3, [sp]
   29314:	ldr	r3, [pc, #180]	; 293d0 <_start@@Base+0x14dd8>
   29318:	add	r3, pc, r3
   2931c:	mov	r2, #5
   29320:	ldr	r1, [fp, #-12]
   29324:	ldr	r0, [fp, #-8]
   29328:	bl	4c1d4 <flatcc_json_printer_union_field@@Base>
   2932c:	ldr	r3, [pc, #160]	; 293d4 <_start@@Base+0x14ddc>
   29330:	add	r3, pc, r3
   29334:	str	r3, [sp, #8]
   29338:	ldr	r3, [pc, #152]	; 293d8 <_start@@Base+0x14de0>
   2933c:	add	r3, pc, r3
   29340:	str	r3, [sp, #4]
   29344:	mov	r3, #5
   29348:	str	r3, [sp]
   2934c:	ldr	r3, [pc, #136]	; 293dc <_start@@Base+0x14de4>
   29350:	add	r3, pc, r3
   29354:	mov	r2, #7
   29358:	ldr	r1, [fp, #-12]
   2935c:	ldr	r0, [fp, #-8]
   29360:	bl	4c1d4 <flatcc_json_printer_union_field@@Base>
   29364:	ldr	r3, [pc, #116]	; 293e0 <_start@@Base+0x14de8>
   29368:	add	r3, pc, r3
   2936c:	str	r3, [sp, #8]
   29370:	ldr	r3, [pc, #108]	; 293e4 <_start@@Base+0x14dec>
   29374:	add	r3, pc, r3
   29378:	str	r3, [sp, #4]
   2937c:	mov	r3, #10
   29380:	str	r3, [sp]
   29384:	ldr	r3, [pc, #92]	; 293e8 <_start@@Base+0x14df0>
   29388:	add	r3, pc, r3
   2938c:	mov	r2, #9
   29390:	ldr	r1, [fp, #-12]
   29394:	ldr	r0, [fp, #-8]
   29398:	bl	4bcfc <flatcc_json_printer_union_vector_field@@Base>
   2939c:	nop	{0}
   293a0:	sub	sp, fp, #4
   293a4:	ldr	fp, [sp]
   293a8:	add	sp, sp, #4
   293ac:	pop	{pc}		; (ldr pc, [sp], #4)
   293b0:			; <UNDEFINED> instruction: 0xffffe91c
   293b4:			; <UNDEFINED> instruction: 0xffffe7bc
   293b8:	andeq	r5, r2, ip, ror #2
   293bc:			; <UNDEFINED> instruction: 0xffffe8e4
   293c0:			; <UNDEFINED> instruction: 0xffffe784
   293c4:	andeq	r5, r2, r4, asr #2
   293c8:			; <UNDEFINED> instruction: 0xffffe8ac
   293cc:			; <UNDEFINED> instruction: 0xffffe74c
   293d0:	andeq	r5, r2, r8, lsl r1
   293d4:			; <UNDEFINED> instruction: 0xffffe874
   293d8:			; <UNDEFINED> instruction: 0xffffe714
   293dc:	andeq	r5, r2, ip, ror #1
   293e0:			; <UNDEFINED> instruction: 0xffffe83c
   293e4:			; <UNDEFINED> instruction: 0xffffe6dc
   293e8:	strheq	r5, [r2], -ip
   293ec:	str	fp, [sp, #-8]!
   293f0:	str	lr, [sp, #4]
   293f4:	add	fp, sp, #4
   293f8:	sub	sp, sp, #64	; 0x40
   293fc:	str	r0, [fp, #-56]	; 0xffffffc8
   29400:	str	r1, [fp, #-60]	; 0xffffffc4
   29404:	str	r2, [fp, #-64]	; 0xffffffc0
   29408:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2940c:	cmp	r3, #0
   29410:	bne	29428 <_start@@Base+0x14e30>
   29414:	sub	r3, fp, #52	; 0x34
   29418:	str	r3, [fp, #-56]	; 0xffffffc8
   2941c:	mov	r1, #0
   29420:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29424:	bl	4d0a8 <flatcc_json_printer_init@@Base>
   29428:	ldr	r3, [pc, #40]	; 29458 <_start@@Base+0x14e60>
   2942c:	add	r3, pc, r3
   29430:	ldr	r2, [fp, #-64]	; 0xffffffc0
   29434:	ldr	r1, [fp, #-60]	; 0xffffffc4
   29438:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2943c:	bl	28f7c <_start@@Base+0x14984>
   29440:	mov	r3, r0
   29444:	mov	r0, r3
   29448:	sub	sp, fp, #4
   2944c:	ldr	fp, [sp]
   29450:	add	sp, sp, #4
   29454:	pop	{pc}		; (ldr pc, [sp], #4)
   29458:	strdeq	r4, [r2], -ip
   2945c:	str	fp, [sp, #-8]!
   29460:	str	lr, [sp, #4]
   29464:	add	fp, sp, #4
   29468:	sub	sp, sp, #8
   2946c:	str	r0, [fp, #-8]
   29470:	ldr	r3, [fp, #-8]
   29474:	ldrb	r3, [r3, #12]
   29478:	cmp	r3, #1
   2947c:	bne	2949c <_start@@Base+0x14ea4>
   29480:	ldr	r3, [pc, #44]	; 294b4 <_start@@Base+0x14ebc>
   29484:	add	r3, pc, r3
   29488:	mov	r1, r3
   2948c:	ldr	r0, [fp, #-8]
   29490:	bl	3567c <flatcc_verify_union_table@@Base>
   29494:	mov	r3, r0
   29498:	b	294a0 <_start@@Base+0x14ea8>
   2949c:	mov	r3, #0
   294a0:	mov	r0, r3
   294a4:	sub	sp, fp, #4
   294a8:	ldr	fp, [sp]
   294ac:	add	sp, sp, #4
   294b0:	pop	{pc}		; (ldr pc, [sp], #4)
   294b4:	strdeq	r0, [r0], -ip
   294b8:	str	fp, [sp, #-8]!
   294bc:	str	lr, [sp, #4]
   294c0:	add	fp, sp, #4
   294c4:	sub	sp, sp, #8
   294c8:	str	r0, [fp, #-8]
   294cc:	ldr	r3, [fp, #-8]
   294d0:	ldrb	r3, [r3, #12]
   294d4:	sub	r3, r3, #1
   294d8:	cmp	r3, #3
   294dc:	addls	pc, pc, r3, lsl #2
   294e0:	b	29564 <_start@@Base+0x14f6c>
   294e4:	b	294f4 <_start@@Base+0x14efc>
   294e8:	b	29510 <_start@@Base+0x14f18>
   294ec:	b	2952c <_start@@Base+0x14f34>
   294f0:	b	29548 <_start@@Base+0x14f50>
   294f4:	ldr	r3, [pc, #128]	; 2957c <_start@@Base+0x14f84>
   294f8:	add	r3, pc, r3
   294fc:	mov	r1, r3
   29500:	ldr	r0, [fp, #-8]
   29504:	bl	3567c <flatcc_verify_union_table@@Base>
   29508:	mov	r3, r0
   2950c:	b	29568 <_start@@Base+0x14f70>
   29510:	ldr	r3, [pc, #104]	; 29580 <_start@@Base+0x14f88>
   29514:	add	r3, pc, r3
   29518:	mov	r1, r3
   2951c:	ldr	r0, [fp, #-8]
   29520:	bl	3567c <flatcc_verify_union_table@@Base>
   29524:	mov	r3, r0
   29528:	b	29568 <_start@@Base+0x14f70>
   2952c:	ldr	r3, [pc, #80]	; 29584 <_start@@Base+0x14f8c>
   29530:	add	r3, pc, r3
   29534:	mov	r1, r3
   29538:	ldr	r0, [fp, #-8]
   2953c:	bl	3567c <flatcc_verify_union_table@@Base>
   29540:	mov	r3, r0
   29544:	b	29568 <_start@@Base+0x14f70>
   29548:	ldr	r3, [pc, #56]	; 29588 <_start@@Base+0x14f90>
   2954c:	add	r3, pc, r3
   29550:	mov	r1, r3
   29554:	ldr	r0, [fp, #-8]
   29558:	bl	3567c <flatcc_verify_union_table@@Base>
   2955c:	mov	r3, r0
   29560:	b	29568 <_start@@Base+0x14f70>
   29564:	mov	r3, #0
   29568:	mov	r0, r3
   2956c:	sub	sp, fp, #4
   29570:	ldr	fp, [sp]
   29574:	add	sp, sp, #4
   29578:	pop	{pc}		; (ldr pc, [sp], #4)
   2957c:	andeq	r0, r0, r4, lsr sl
   29580:	andeq	r0, r0, r0, lsr r2
   29584:	andeq	r0, r0, r4, ror r1
   29588:			; <UNDEFINED> instruction: 0x000004b4
   2958c:	str	fp, [sp, #-8]!
   29590:	str	lr, [sp, #4]
   29594:	add	fp, sp, #4
   29598:	sub	sp, sp, #8
   2959c:	str	r0, [fp, #-8]
   295a0:	ldr	r3, [fp, #-8]
   295a4:	ldrb	r3, [r3, #12]
   295a8:	cmp	r3, #9
   295ac:	beq	2961c <_start@@Base+0x15024>
   295b0:	cmp	r3, #9
   295b4:	bgt	295cc <_start@@Base+0x14fd4>
   295b8:	cmp	r3, #2
   295bc:	beq	295e8 <_start@@Base+0x14ff0>
   295c0:	cmp	r3, #8
   295c4:	beq	29604 <_start@@Base+0x1500c>
   295c8:	b	2966c <_start@@Base+0x15074>
   295cc:	cmp	r3, #11
   295d0:	beq	2964c <_start@@Base+0x15054>
   295d4:	cmp	r3, #11
   295d8:	blt	29634 <_start@@Base+0x1503c>
   295dc:	cmp	r3, #255	; 0xff
   295e0:	beq	2965c <_start@@Base+0x15064>
   295e4:	b	2966c <_start@@Base+0x15074>
   295e8:	ldr	r3, [pc, #148]	; 29684 <_start@@Base+0x1508c>
   295ec:	add	r3, pc, r3
   295f0:	mov	r1, r3
   295f4:	ldr	r0, [fp, #-8]
   295f8:	bl	3567c <flatcc_verify_union_table@@Base>
   295fc:	mov	r3, r0
   29600:	b	29670 <_start@@Base+0x15078>
   29604:	mov	r2, #2
   29608:	mov	r1, #2
   2960c:	ldr	r0, [fp, #-8]
   29610:	bl	356ec <flatcc_verify_union_struct@@Base>
   29614:	mov	r3, r0
   29618:	b	29670 <_start@@Base+0x15078>
   2961c:	mov	r2, #4
   29620:	mov	r1, #4
   29624:	ldr	r0, [fp, #-8]
   29628:	bl	356ec <flatcc_verify_union_struct@@Base>
   2962c:	mov	r3, r0
   29630:	b	29670 <_start@@Base+0x15078>
   29634:	mov	r2, #4
   29638:	mov	r1, #4
   2963c:	ldr	r0, [fp, #-8]
   29640:	bl	356ec <flatcc_verify_union_struct@@Base>
   29644:	mov	r3, r0
   29648:	b	29670 <_start@@Base+0x15078>
   2964c:	ldr	r0, [fp, #-8]
   29650:	bl	3574c <flatcc_verify_union_string@@Base>
   29654:	mov	r3, r0
   29658:	b	29670 <_start@@Base+0x15078>
   2965c:	ldr	r0, [fp, #-8]
   29660:	bl	3574c <flatcc_verify_union_string@@Base>
   29664:	mov	r3, r0
   29668:	b	29670 <_start@@Base+0x15078>
   2966c:	mov	r3, #0
   29670:	mov	r0, r3
   29674:	sub	sp, fp, #4
   29678:	ldr	fp, [sp]
   2967c:	add	sp, sp, #4
   29680:	pop	{pc}		; (ldr pc, [sp], #4)
   29684:	andeq	r1, r0, ip, asr r2
   29688:	push	{fp}		; (str fp, [sp, #-4]!)
   2968c:	add	fp, sp, #0
   29690:	sub	sp, sp, #12
   29694:	str	r0, [fp, #-8]
   29698:	mov	r3, #0
   2969c:	mov	r0, r3
   296a0:	add	sp, fp, #0
   296a4:	pop	{fp}		; (ldr fp, [sp], #4)
   296a8:	bx	lr
   296ac:	push	{fp}		; (str fp, [sp, #-4]!)
   296b0:	add	fp, sp, #0
   296b4:	sub	sp, sp, #12
   296b8:	str	r0, [fp, #-8]
   296bc:	mov	r3, #0
   296c0:	mov	r0, r3
   296c4:	add	sp, fp, #0
   296c8:	pop	{fp}		; (ldr fp, [sp], #4)
   296cc:	bx	lr
   296d0:	push	{fp}		; (str fp, [sp, #-4]!)
   296d4:	add	fp, sp, #0
   296d8:	sub	sp, sp, #12
   296dc:	str	r0, [fp, #-8]
   296e0:	mov	r3, #0
   296e4:	mov	r0, r3
   296e8:	add	sp, fp, #0
   296ec:	pop	{fp}		; (ldr fp, [sp], #4)
   296f0:	bx	lr
   296f4:	str	fp, [sp, #-8]!
   296f8:	str	lr, [sp, #4]
   296fc:	add	fp, sp, #4
   29700:	sub	sp, sp, #16
   29704:	str	r0, [fp, #-16]
   29708:	mov	r3, #1
   2970c:	mov	r2, #0
   29710:	mov	r1, #0
   29714:	ldr	r0, [fp, #-16]
   29718:	bl	351d4 <flatcc_verify_field@@Base>
   2971c:	str	r0, [fp, #-8]
   29720:	ldr	r3, [fp, #-8]
   29724:	cmp	r3, #0
   29728:	beq	29734 <_start@@Base+0x1513c>
   2972c:	ldr	r3, [fp, #-8]
   29730:	b	29738 <_start@@Base+0x15140>
   29734:	mov	r3, #0
   29738:	mov	r0, r3
   2973c:	sub	sp, fp, #4
   29740:	ldr	fp, [sp]
   29744:	add	sp, sp, #4
   29748:	pop	{pc}		; (ldr pc, [sp], #4)
   2974c:	str	fp, [sp, #-8]!
   29750:	str	lr, [sp, #4]
   29754:	add	fp, sp, #4
   29758:	sub	sp, sp, #16
   2975c:	str	r0, [fp, #-16]
   29760:	mov	r3, #1
   29764:	mov	r2, #1
   29768:	mov	r1, #0
   2976c:	ldr	r0, [fp, #-16]
   29770:	bl	351d4 <flatcc_verify_field@@Base>
   29774:	str	r0, [fp, #-8]
   29778:	ldr	r3, [fp, #-8]
   2977c:	cmp	r3, #0
   29780:	beq	2978c <_start@@Base+0x15194>
   29784:	ldr	r3, [fp, #-8]
   29788:	b	29814 <_start@@Base+0x1521c>
   2978c:	mov	r3, #1
   29790:	mov	r2, #1
   29794:	mov	r1, #1
   29798:	ldr	r0, [fp, #-16]
   2979c:	bl	351d4 <flatcc_verify_field@@Base>
   297a0:	str	r0, [fp, #-8]
   297a4:	ldr	r3, [fp, #-8]
   297a8:	cmp	r3, #0
   297ac:	beq	297b8 <_start@@Base+0x151c0>
   297b0:	ldr	r3, [fp, #-8]
   297b4:	b	29814 <_start@@Base+0x1521c>
   297b8:	mov	r3, #1
   297bc:	mov	r2, #1
   297c0:	mov	r1, #2
   297c4:	ldr	r0, [fp, #-16]
   297c8:	bl	351d4 <flatcc_verify_field@@Base>
   297cc:	str	r0, [fp, #-8]
   297d0:	ldr	r3, [fp, #-8]
   297d4:	cmp	r3, #0
   297d8:	beq	297e4 <_start@@Base+0x151ec>
   297dc:	ldr	r3, [fp, #-8]
   297e0:	b	29814 <_start@@Base+0x1521c>
   297e4:	mov	r3, #1
   297e8:	mov	r2, #1
   297ec:	mov	r1, #3
   297f0:	ldr	r0, [fp, #-16]
   297f4:	bl	351d4 <flatcc_verify_field@@Base>
   297f8:	str	r0, [fp, #-8]
   297fc:	ldr	r3, [fp, #-8]
   29800:	cmp	r3, #0
   29804:	beq	29810 <_start@@Base+0x15218>
   29808:	ldr	r3, [fp, #-8]
   2980c:	b	29814 <_start@@Base+0x1521c>
   29810:	mov	r3, #0
   29814:	mov	r0, r3
   29818:	sub	sp, fp, #4
   2981c:	ldr	fp, [sp]
   29820:	add	sp, sp, #4
   29824:	pop	{pc}		; (ldr pc, [sp], #4)
   29828:	str	fp, [sp, #-8]!
   2982c:	str	lr, [sp, #4]
   29830:	add	fp, sp, #4
   29834:	sub	sp, sp, #16
   29838:	str	r0, [fp, #-16]
   2983c:	mov	r3, #1
   29840:	mov	r2, #0
   29844:	mov	r1, #0
   29848:	ldr	r0, [fp, #-16]
   2984c:	bl	351d4 <flatcc_verify_field@@Base>
   29850:	str	r0, [fp, #-8]
   29854:	ldr	r3, [fp, #-8]
   29858:	cmp	r3, #0
   2985c:	beq	29868 <_start@@Base+0x15270>
   29860:	ldr	r3, [fp, #-8]
   29864:	b	29948 <_start@@Base+0x15350>
   29868:	mov	r3, #8
   2986c:	mov	r2, #8
   29870:	mov	r1, #1
   29874:	ldr	r0, [fp, #-16]
   29878:	bl	351d4 <flatcc_verify_field@@Base>
   2987c:	str	r0, [fp, #-8]
   29880:	ldr	r3, [fp, #-8]
   29884:	cmp	r3, #0
   29888:	beq	29894 <_start@@Base+0x1529c>
   2988c:	ldr	r3, [fp, #-8]
   29890:	b	29948 <_start@@Base+0x15350>
   29894:	mov	r3, #8
   29898:	mov	r2, #8
   2989c:	mov	r1, #2
   298a0:	ldr	r0, [fp, #-16]
   298a4:	bl	351d4 <flatcc_verify_field@@Base>
   298a8:	str	r0, [fp, #-8]
   298ac:	ldr	r3, [fp, #-8]
   298b0:	cmp	r3, #0
   298b4:	beq	298c0 <_start@@Base+0x152c8>
   298b8:	ldr	r3, [fp, #-8]
   298bc:	b	29948 <_start@@Base+0x15350>
   298c0:	mov	r3, #4
   298c4:	mov	r2, #4
   298c8:	mov	r1, #3
   298cc:	ldr	r0, [fp, #-16]
   298d0:	bl	351d4 <flatcc_verify_field@@Base>
   298d4:	str	r0, [fp, #-8]
   298d8:	ldr	r3, [fp, #-8]
   298dc:	cmp	r3, #0
   298e0:	beq	298ec <_start@@Base+0x152f4>
   298e4:	ldr	r3, [fp, #-8]
   298e8:	b	29948 <_start@@Base+0x15350>
   298ec:	mov	r3, #8
   298f0:	mov	r2, #8
   298f4:	mov	r1, #4
   298f8:	ldr	r0, [fp, #-16]
   298fc:	bl	351d4 <flatcc_verify_field@@Base>
   29900:	str	r0, [fp, #-8]
   29904:	ldr	r3, [fp, #-8]
   29908:	cmp	r3, #0
   2990c:	beq	29918 <_start@@Base+0x15320>
   29910:	ldr	r3, [fp, #-8]
   29914:	b	29948 <_start@@Base+0x15350>
   29918:	mov	r3, #8
   2991c:	mov	r2, #8
   29920:	mov	r1, #5
   29924:	ldr	r0, [fp, #-16]
   29928:	bl	351d4 <flatcc_verify_field@@Base>
   2992c:	str	r0, [fp, #-8]
   29930:	ldr	r3, [fp, #-8]
   29934:	cmp	r3, #0
   29938:	beq	29944 <_start@@Base+0x1534c>
   2993c:	ldr	r3, [fp, #-8]
   29940:	b	29948 <_start@@Base+0x15350>
   29944:	mov	r3, #0
   29948:	mov	r0, r3
   2994c:	sub	sp, fp, #4
   29950:	ldr	fp, [sp]
   29954:	add	sp, sp, #4
   29958:	pop	{pc}		; (ldr pc, [sp], #4)
   2995c:	str	fp, [sp, #-8]!
   29960:	str	lr, [sp, #4]
   29964:	add	fp, sp, #4
   29968:	sub	sp, sp, #16
   2996c:	str	r0, [fp, #-16]
   29970:	mov	r2, #0
   29974:	mov	r1, #0
   29978:	ldr	r0, [fp, #-16]
   2997c:	bl	35264 <flatcc_verify_string_field@@Base>
   29980:	str	r0, [fp, #-8]
   29984:	ldr	r3, [fp, #-8]
   29988:	cmp	r3, #0
   2998c:	beq	29998 <_start@@Base+0x153a0>
   29990:	ldr	r3, [fp, #-8]
   29994:	b	299f4 <_start@@Base+0x153fc>
   29998:	mov	r3, #8
   2999c:	mov	r2, #8
   299a0:	mov	r1, #1
   299a4:	ldr	r0, [fp, #-16]
   299a8:	bl	351d4 <flatcc_verify_field@@Base>
   299ac:	str	r0, [fp, #-8]
   299b0:	ldr	r3, [fp, #-8]
   299b4:	cmp	r3, #0
   299b8:	beq	299c4 <_start@@Base+0x153cc>
   299bc:	ldr	r3, [fp, #-8]
   299c0:	b	299f4 <_start@@Base+0x153fc>
   299c4:	mov	r3, #2
   299c8:	mov	r2, #2
   299cc:	mov	r1, #2
   299d0:	ldr	r0, [fp, #-16]
   299d4:	bl	351d4 <flatcc_verify_field@@Base>
   299d8:	str	r0, [fp, #-8]
   299dc:	ldr	r3, [fp, #-8]
   299e0:	cmp	r3, #0
   299e4:	beq	299f0 <_start@@Base+0x153f8>
   299e8:	ldr	r3, [fp, #-8]
   299ec:	b	299f4 <_start@@Base+0x153fc>
   299f0:	mov	r3, #0
   299f4:	mov	r0, r3
   299f8:	sub	sp, fp, #4
   299fc:	ldr	fp, [sp]
   29a00:	add	sp, sp, #4
   29a04:	pop	{pc}		; (ldr pc, [sp], #4)
   29a08:	str	fp, [sp, #-8]!
   29a0c:	str	lr, [sp, #4]
   29a10:	add	fp, sp, #4
   29a14:	sub	sp, sp, #16
   29a18:	str	r0, [fp, #-16]
   29a1c:	ldr	r3, [pc, #160]	; 29ac4 <_start@@Base+0x154cc>
   29a20:	add	r3, pc, r3
   29a24:	mov	r2, #0
   29a28:	mov	r1, #0
   29a2c:	ldr	r0, [fp, #-16]
   29a30:	bl	354c4 <flatcc_verify_table_field@@Base>
   29a34:	str	r0, [fp, #-8]
   29a38:	ldr	r3, [fp, #-8]
   29a3c:	cmp	r3, #0
   29a40:	beq	29a4c <_start@@Base+0x15454>
   29a44:	ldr	r3, [fp, #-8]
   29a48:	b	29ab0 <_start@@Base+0x154b8>
   29a4c:	ldr	r3, [pc, #116]	; 29ac8 <_start@@Base+0x154d0>
   29a50:	add	r3, pc, r3
   29a54:	mov	r2, #0
   29a58:	mov	r1, #1
   29a5c:	ldr	r0, [fp, #-16]
   29a60:	bl	354c4 <flatcc_verify_table_field@@Base>
   29a64:	str	r0, [fp, #-8]
   29a68:	ldr	r3, [fp, #-8]
   29a6c:	cmp	r3, #0
   29a70:	beq	29a7c <_start@@Base+0x15484>
   29a74:	ldr	r3, [fp, #-8]
   29a78:	b	29ab0 <_start@@Base+0x154b8>
   29a7c:	ldr	r3, [pc, #72]	; 29acc <_start@@Base+0x154d4>
   29a80:	add	r3, pc, r3
   29a84:	mov	r2, #0
   29a88:	mov	r1, #3
   29a8c:	ldr	r0, [fp, #-16]
   29a90:	bl	3613c <flatcc_verify_union_vector_field@@Base>
   29a94:	str	r0, [fp, #-8]
   29a98:	ldr	r3, [fp, #-8]
   29a9c:	cmp	r3, #0
   29aa0:	beq	29aac <_start@@Base+0x154b4>
   29aa4:	ldr	r3, [fp, #-8]
   29aa8:	b	29ab0 <_start@@Base+0x154b8>
   29aac:	mov	r3, #0
   29ab0:	mov	r0, r3
   29ab4:	sub	sp, fp, #4
   29ab8:	ldr	fp, [sp]
   29abc:	add	sp, sp, #4
   29ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   29ac4:	andeq	r0, r0, r8, lsr #1
   29ac8:	andeq	r0, r0, r0, asr lr
   29acc:			; <UNDEFINED> instruction: 0xfffffa30
   29ad0:	str	fp, [sp, #-8]!
   29ad4:	str	lr, [sp, #4]
   29ad8:	add	fp, sp, #4
   29adc:	sub	sp, sp, #16
   29ae0:	str	r0, [fp, #-16]
   29ae4:	ldr	r3, [pc, #160]	; 29b8c <_start@@Base+0x15594>
   29ae8:	add	r3, pc, r3
   29aec:	mov	r2, #0
   29af0:	mov	r1, #0
   29af4:	ldr	r0, [fp, #-16]
   29af8:	bl	354c4 <flatcc_verify_table_field@@Base>
   29afc:	str	r0, [fp, #-8]
   29b00:	ldr	r3, [fp, #-8]
   29b04:	cmp	r3, #0
   29b08:	beq	29b14 <_start@@Base+0x1551c>
   29b0c:	ldr	r3, [fp, #-8]
   29b10:	b	29b78 <_start@@Base+0x15580>
   29b14:	ldr	r3, [pc, #116]	; 29b90 <_start@@Base+0x15598>
   29b18:	add	r3, pc, r3
   29b1c:	mov	r2, #0
   29b20:	mov	r1, #1
   29b24:	ldr	r0, [fp, #-16]
   29b28:	bl	354c4 <flatcc_verify_table_field@@Base>
   29b2c:	str	r0, [fp, #-8]
   29b30:	ldr	r3, [fp, #-8]
   29b34:	cmp	r3, #0
   29b38:	beq	29b44 <_start@@Base+0x1554c>
   29b3c:	ldr	r3, [fp, #-8]
   29b40:	b	29b78 <_start@@Base+0x15580>
   29b44:	ldr	r3, [pc, #72]	; 29b94 <_start@@Base+0x1559c>
   29b48:	add	r3, pc, r3
   29b4c:	mov	r2, #0
   29b50:	mov	r1, #2
   29b54:	ldr	r0, [fp, #-16]
   29b58:	bl	354c4 <flatcc_verify_table_field@@Base>
   29b5c:	str	r0, [fp, #-8]
   29b60:	ldr	r3, [fp, #-8]
   29b64:	cmp	r3, #0
   29b68:	beq	29b74 <_start@@Base+0x1557c>
   29b6c:	ldr	r3, [fp, #-8]
   29b70:	b	29b78 <_start@@Base+0x15580>
   29b74:	mov	r3, #0
   29b78:	mov	r0, r3
   29b7c:	sub	sp, fp, #4
   29b80:	ldr	fp, [sp]
   29b84:	add	sp, sp, #4
   29b88:	pop	{pc}		; (ldr pc, [sp], #4)
   29b8c:	andeq	r0, r0, r8, lsr #1
   29b90:	andeq	r0, r0, r4, lsr #4
   29b94:	andeq	r0, r0, r8, ror r2
   29b98:	str	fp, [sp, #-8]!
   29b9c:	str	lr, [sp, #4]
   29ba0:	add	fp, sp, #4
   29ba4:	sub	sp, sp, #16
   29ba8:	str	r0, [fp, #-16]
   29bac:	mov	r2, #0
   29bb0:	mov	r1, #0
   29bb4:	ldr	r0, [fp, #-16]
   29bb8:	bl	35264 <flatcc_verify_string_field@@Base>
   29bbc:	str	r0, [fp, #-8]
   29bc0:	ldr	r3, [fp, #-8]
   29bc4:	cmp	r3, #0
   29bc8:	beq	29bd4 <_start@@Base+0x155dc>
   29bcc:	ldr	r3, [fp, #-8]
   29bd0:	b	29d30 <_start@@Base+0x15738>
   29bd4:	mov	r3, #4
   29bd8:	mov	r2, #4
   29bdc:	mov	r1, #1
   29be0:	ldr	r0, [fp, #-16]
   29be4:	bl	351d4 <flatcc_verify_field@@Base>
   29be8:	str	r0, [fp, #-8]
   29bec:	ldr	r3, [fp, #-8]
   29bf0:	cmp	r3, #0
   29bf4:	beq	29c00 <_start@@Base+0x15608>
   29bf8:	ldr	r3, [fp, #-8]
   29bfc:	b	29d30 <_start@@Base+0x15738>
   29c00:	mov	r2, #0
   29c04:	mov	r1, #2
   29c08:	ldr	r0, [fp, #-16]
   29c0c:	bl	35264 <flatcc_verify_string_field@@Base>
   29c10:	str	r0, [fp, #-8]
   29c14:	ldr	r3, [fp, #-8]
   29c18:	cmp	r3, #0
   29c1c:	beq	29c28 <_start@@Base+0x15630>
   29c20:	ldr	r3, [fp, #-8]
   29c24:	b	29d30 <_start@@Base+0x15738>
   29c28:	mov	r3, #8
   29c2c:	mov	r2, #8
   29c30:	mov	r1, #3
   29c34:	ldr	r0, [fp, #-16]
   29c38:	bl	351d4 <flatcc_verify_field@@Base>
   29c3c:	str	r0, [fp, #-8]
   29c40:	ldr	r3, [fp, #-8]
   29c44:	cmp	r3, #0
   29c48:	beq	29c54 <_start@@Base+0x1565c>
   29c4c:	ldr	r3, [fp, #-8]
   29c50:	b	29d30 <_start@@Base+0x15738>
   29c54:	mov	r2, #0
   29c58:	mov	r1, #4
   29c5c:	ldr	r0, [fp, #-16]
   29c60:	bl	35264 <flatcc_verify_string_field@@Base>
   29c64:	str	r0, [fp, #-8]
   29c68:	ldr	r3, [fp, #-8]
   29c6c:	cmp	r3, #0
   29c70:	beq	29c7c <_start@@Base+0x15684>
   29c74:	ldr	r3, [fp, #-8]
   29c78:	b	29d30 <_start@@Base+0x15738>
   29c7c:	mov	r3, #8
   29c80:	mov	r2, #8
   29c84:	mov	r1, #5
   29c88:	ldr	r0, [fp, #-16]
   29c8c:	bl	351d4 <flatcc_verify_field@@Base>
   29c90:	str	r0, [fp, #-8]
   29c94:	ldr	r3, [fp, #-8]
   29c98:	cmp	r3, #0
   29c9c:	beq	29ca8 <_start@@Base+0x156b0>
   29ca0:	ldr	r3, [fp, #-8]
   29ca4:	b	29d30 <_start@@Base+0x15738>
   29ca8:	mov	r3, #4
   29cac:	mov	r2, #4
   29cb0:	mov	r1, #6
   29cb4:	ldr	r0, [fp, #-16]
   29cb8:	bl	351d4 <flatcc_verify_field@@Base>
   29cbc:	str	r0, [fp, #-8]
   29cc0:	ldr	r3, [fp, #-8]
   29cc4:	cmp	r3, #0
   29cc8:	beq	29cd4 <_start@@Base+0x156dc>
   29ccc:	ldr	r3, [fp, #-8]
   29cd0:	b	29d30 <_start@@Base+0x15738>
   29cd4:	mov	r3, #8
   29cd8:	mov	r2, #8
   29cdc:	mov	r1, #7
   29ce0:	ldr	r0, [fp, #-16]
   29ce4:	bl	351d4 <flatcc_verify_field@@Base>
   29ce8:	str	r0, [fp, #-8]
   29cec:	ldr	r3, [fp, #-8]
   29cf0:	cmp	r3, #0
   29cf4:	beq	29d00 <_start@@Base+0x15708>
   29cf8:	ldr	r3, [fp, #-8]
   29cfc:	b	29d30 <_start@@Base+0x15738>
   29d00:	mov	r3, #4
   29d04:	mov	r2, #4
   29d08:	mov	r1, #8
   29d0c:	ldr	r0, [fp, #-16]
   29d10:	bl	351d4 <flatcc_verify_field@@Base>
   29d14:	str	r0, [fp, #-8]
   29d18:	ldr	r3, [fp, #-8]
   29d1c:	cmp	r3, #0
   29d20:	beq	29d2c <_start@@Base+0x15734>
   29d24:	ldr	r3, [fp, #-8]
   29d28:	b	29d30 <_start@@Base+0x15738>
   29d2c:	mov	r3, #0
   29d30:	mov	r0, r3
   29d34:	sub	sp, fp, #4
   29d38:	ldr	fp, [sp]
   29d3c:	add	sp, sp, #4
   29d40:	pop	{pc}		; (ldr pc, [sp], #4)
   29d44:	str	fp, [sp, #-8]!
   29d48:	str	lr, [sp, #4]
   29d4c:	add	fp, sp, #4
   29d50:	sub	sp, sp, #16
   29d54:	str	r0, [fp, #-16]
   29d58:	mov	r3, #8
   29d5c:	mov	r2, #8
   29d60:	mov	r1, #0
   29d64:	ldr	r0, [fp, #-16]
   29d68:	bl	351d4 <flatcc_verify_field@@Base>
   29d6c:	str	r0, [fp, #-8]
   29d70:	ldr	r3, [fp, #-8]
   29d74:	cmp	r3, #0
   29d78:	beq	29d84 <_start@@Base+0x1578c>
   29d7c:	ldr	r3, [fp, #-8]
   29d80:	b	29db4 <_start@@Base+0x157bc>
   29d84:	mov	r3, #4
   29d88:	mov	r2, #4
   29d8c:	mov	r1, #1
   29d90:	ldr	r0, [fp, #-16]
   29d94:	bl	351d4 <flatcc_verify_field@@Base>
   29d98:	str	r0, [fp, #-8]
   29d9c:	ldr	r3, [fp, #-8]
   29da0:	cmp	r3, #0
   29da4:	beq	29db0 <_start@@Base+0x157b8>
   29da8:	ldr	r3, [fp, #-8]
   29dac:	b	29db4 <_start@@Base+0x157bc>
   29db0:	mov	r3, #0
   29db4:	mov	r0, r3
   29db8:	sub	sp, fp, #4
   29dbc:	ldr	fp, [sp]
   29dc0:	add	sp, sp, #4
   29dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   29dc8:	str	fp, [sp, #-8]!
   29dcc:	str	lr, [sp, #4]
   29dd0:	add	fp, sp, #4
   29dd4:	sub	sp, sp, #16
   29dd8:	str	r0, [fp, #-16]
   29ddc:	mov	r3, #8
   29de0:	mov	r2, #8
   29de4:	mov	r1, #0
   29de8:	ldr	r0, [fp, #-16]
   29dec:	bl	351d4 <flatcc_verify_field@@Base>
   29df0:	str	r0, [fp, #-8]
   29df4:	ldr	r3, [fp, #-8]
   29df8:	cmp	r3, #0
   29dfc:	beq	29e08 <_start@@Base+0x15810>
   29e00:	ldr	r3, [fp, #-8]
   29e04:	b	29e38 <_start@@Base+0x15840>
   29e08:	mov	r3, #4
   29e0c:	mov	r2, #4
   29e10:	mov	r1, #1
   29e14:	ldr	r0, [fp, #-16]
   29e18:	bl	351d4 <flatcc_verify_field@@Base>
   29e1c:	str	r0, [fp, #-8]
   29e20:	ldr	r3, [fp, #-8]
   29e24:	cmp	r3, #0
   29e28:	beq	29e34 <_start@@Base+0x1583c>
   29e2c:	ldr	r3, [fp, #-8]
   29e30:	b	29e38 <_start@@Base+0x15840>
   29e34:	mov	r3, #0
   29e38:	mov	r0, r3
   29e3c:	sub	sp, fp, #4
   29e40:	ldr	fp, [sp]
   29e44:	add	sp, sp, #4
   29e48:	pop	{pc}		; (ldr pc, [sp], #4)
   29e4c:	str	fp, [sp, #-8]!
   29e50:	str	lr, [sp, #4]
   29e54:	add	fp, sp, #4
   29e58:	sub	sp, sp, #24
   29e5c:	str	r0, [fp, #-16]
   29e60:	mvn	r3, #0
   29e64:	str	r3, [sp, #4]
   29e68:	mov	r3, #1
   29e6c:	str	r3, [sp]
   29e70:	mov	r3, #1
   29e74:	mov	r2, #0
   29e78:	mov	r1, #0
   29e7c:	ldr	r0, [fp, #-16]
   29e80:	bl	35324 <flatcc_verify_vector_field@@Base>
   29e84:	str	r0, [fp, #-8]
   29e88:	ldr	r3, [fp, #-8]
   29e8c:	cmp	r3, #0
   29e90:	beq	29e9c <_start@@Base+0x158a4>
   29e94:	ldr	r3, [fp, #-8]
   29e98:	b	29f1c <_start@@Base+0x15924>
   29e9c:	mvn	r3, #0
   29ea0:	str	r3, [sp, #4]
   29ea4:	mov	r3, #1
   29ea8:	str	r3, [sp]
   29eac:	mov	r3, #1
   29eb0:	mov	r2, #0
   29eb4:	mov	r1, #1
   29eb8:	ldr	r0, [fp, #-16]
   29ebc:	bl	35324 <flatcc_verify_vector_field@@Base>
   29ec0:	str	r0, [fp, #-8]
   29ec4:	ldr	r3, [fp, #-8]
   29ec8:	cmp	r3, #0
   29ecc:	beq	29ed8 <_start@@Base+0x158e0>
   29ed0:	ldr	r3, [fp, #-8]
   29ed4:	b	29f1c <_start@@Base+0x15924>
   29ed8:	ldr	r3, [pc, #80]	; 29f30 <_start@@Base+0x15938>
   29edc:	add	r3, pc, r3
   29ee0:	str	r3, [sp, #4]
   29ee4:	mov	r3, #1
   29ee8:	str	r3, [sp]
   29eec:	mov	r3, #0
   29ef0:	mov	r2, #0
   29ef4:	mov	r1, #2
   29ef8:	ldr	r0, [fp, #-16]
   29efc:	bl	35d64 <flatcc_verify_table_as_nested_root@@Base>
   29f00:	str	r0, [fp, #-8]
   29f04:	ldr	r3, [fp, #-8]
   29f08:	cmp	r3, #0
   29f0c:	beq	29f18 <_start@@Base+0x15920>
   29f10:	ldr	r3, [fp, #-8]
   29f14:	b	29f1c <_start@@Base+0x15924>
   29f18:	mov	r3, #0
   29f1c:	mov	r0, r3
   29f20:	sub	sp, fp, #4
   29f24:	ldr	fp, [sp]
   29f28:	add	sp, sp, #4
   29f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   29f30:	andeq	r0, r0, r0, asr r0
   29f34:	str	fp, [sp, #-8]!
   29f38:	str	lr, [sp, #4]
   29f3c:	add	fp, sp, #4
   29f40:	sub	sp, sp, #24
   29f44:	str	r0, [fp, #-16]
   29f48:	mov	r3, #16
   29f4c:	mov	r2, #32
   29f50:	mov	r1, #0
   29f54:	ldr	r0, [fp, #-16]
   29f58:	bl	351d4 <flatcc_verify_field@@Base>
   29f5c:	str	r0, [fp, #-8]
   29f60:	ldr	r3, [fp, #-8]
   29f64:	cmp	r3, #0
   29f68:	beq	29f74 <_start@@Base+0x1597c>
   29f6c:	ldr	r3, [fp, #-8]
   29f70:	b	2a5c4 <_start@@Base+0x15fcc>
   29f74:	mov	r3, #2
   29f78:	mov	r2, #2
   29f7c:	mov	r1, #2
   29f80:	ldr	r0, [fp, #-16]
   29f84:	bl	351d4 <flatcc_verify_field@@Base>
   29f88:	str	r0, [fp, #-8]
   29f8c:	ldr	r3, [fp, #-8]
   29f90:	cmp	r3, #0
   29f94:	beq	29fa0 <_start@@Base+0x159a8>
   29f98:	ldr	r3, [fp, #-8]
   29f9c:	b	2a5c4 <_start@@Base+0x15fcc>
   29fa0:	mov	r3, #2
   29fa4:	mov	r2, #2
   29fa8:	mov	r1, #1
   29fac:	ldr	r0, [fp, #-16]
   29fb0:	bl	351d4 <flatcc_verify_field@@Base>
   29fb4:	str	r0, [fp, #-8]
   29fb8:	ldr	r3, [fp, #-8]
   29fbc:	cmp	r3, #0
   29fc0:	beq	29fcc <_start@@Base+0x159d4>
   29fc4:	ldr	r3, [fp, #-8]
   29fc8:	b	2a5c4 <_start@@Base+0x15fcc>
   29fcc:	mov	r2, #1
   29fd0:	mov	r1, #3
   29fd4:	ldr	r0, [fp, #-16]
   29fd8:	bl	35264 <flatcc_verify_string_field@@Base>
   29fdc:	str	r0, [fp, #-8]
   29fe0:	ldr	r3, [fp, #-8]
   29fe4:	cmp	r3, #0
   29fe8:	beq	29ff4 <_start@@Base+0x159fc>
   29fec:	ldr	r3, [fp, #-8]
   29ff0:	b	2a5c4 <_start@@Base+0x15fcc>
   29ff4:	mov	r3, #1
   29ff8:	mov	r2, #1
   29ffc:	mov	r1, #6
   2a000:	ldr	r0, [fp, #-16]
   2a004:	bl	351d4 <flatcc_verify_field@@Base>
   2a008:	str	r0, [fp, #-8]
   2a00c:	ldr	r3, [fp, #-8]
   2a010:	cmp	r3, #0
   2a014:	beq	2a020 <_start@@Base+0x15a28>
   2a018:	ldr	r3, [fp, #-8]
   2a01c:	b	2a5c4 <_start@@Base+0x15fcc>
   2a020:	mvn	r3, #0
   2a024:	str	r3, [sp, #4]
   2a028:	mov	r3, #1
   2a02c:	str	r3, [sp]
   2a030:	mov	r3, #1
   2a034:	mov	r2, #0
   2a038:	mov	r1, #5
   2a03c:	ldr	r0, [fp, #-16]
   2a040:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a044:	str	r0, [fp, #-8]
   2a048:	ldr	r3, [fp, #-8]
   2a04c:	cmp	r3, #0
   2a050:	beq	2a05c <_start@@Base+0x15a64>
   2a054:	ldr	r3, [fp, #-8]
   2a058:	b	2a5c4 <_start@@Base+0x15fcc>
   2a05c:	ldr	r3, [pc, #1396]	; 2a5d8 <_start@@Base+0x15fe0>
   2a060:	add	r3, pc, r3
   2a064:	mov	r2, #0
   2a068:	mov	r1, #11
   2a06c:	ldr	r0, [fp, #-16]
   2a070:	bl	355a0 <flatcc_verify_table_vector_field@@Base>
   2a074:	str	r0, [fp, #-8]
   2a078:	ldr	r3, [fp, #-8]
   2a07c:	cmp	r3, #0
   2a080:	beq	2a08c <_start@@Base+0x15a94>
   2a084:	ldr	r3, [fp, #-8]
   2a088:	b	2a5c4 <_start@@Base+0x15fcc>
   2a08c:	mov	r2, #0
   2a090:	mov	r1, #10
   2a094:	ldr	r0, [fp, #-16]
   2a098:	bl	35404 <flatcc_verify_string_vector_field@@Base>
   2a09c:	str	r0, [fp, #-8]
   2a0a0:	ldr	r3, [fp, #-8]
   2a0a4:	cmp	r3, #0
   2a0a8:	beq	2a0b4 <_start@@Base+0x15abc>
   2a0ac:	ldr	r3, [fp, #-8]
   2a0b0:	b	2a5c4 <_start@@Base+0x15fcc>
   2a0b4:	mov	r2, #0
   2a0b8:	mov	r1, #28
   2a0bc:	ldr	r0, [fp, #-16]
   2a0c0:	bl	35404 <flatcc_verify_string_vector_field@@Base>
   2a0c4:	str	r0, [fp, #-8]
   2a0c8:	ldr	r3, [fp, #-8]
   2a0cc:	cmp	r3, #0
   2a0d0:	beq	2a0dc <_start@@Base+0x15ae4>
   2a0d4:	ldr	r3, [fp, #-8]
   2a0d8:	b	2a5c4 <_start@@Base+0x15fcc>
   2a0dc:	mvn	r3, #0
   2a0e0:	str	r3, [sp, #4]
   2a0e4:	mov	r3, #1
   2a0e8:	str	r3, [sp]
   2a0ec:	mov	r3, #1
   2a0f0:	mov	r2, #0
   2a0f4:	mov	r1, #24
   2a0f8:	ldr	r0, [fp, #-16]
   2a0fc:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a100:	str	r0, [fp, #-8]
   2a104:	ldr	r3, [fp, #-8]
   2a108:	cmp	r3, #0
   2a10c:	beq	2a118 <_start@@Base+0x15b20>
   2a110:	ldr	r3, [fp, #-8]
   2a114:	b	2a5c4 <_start@@Base+0x15fcc>
   2a118:	mvn	r3, #-536870912	; 0xe0000000
   2a11c:	str	r3, [sp, #4]
   2a120:	mov	r3, #4
   2a124:	str	r3, [sp]
   2a128:	mov	r3, #8
   2a12c:	mov	r2, #0
   2a130:	mov	r1, #29
   2a134:	ldr	r0, [fp, #-16]
   2a138:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a13c:	str	r0, [fp, #-8]
   2a140:	ldr	r3, [fp, #-8]
   2a144:	cmp	r3, #0
   2a148:	beq	2a154 <_start@@Base+0x15b5c>
   2a14c:	ldr	r3, [fp, #-8]
   2a150:	b	2a5c4 <_start@@Base+0x15fcc>
   2a154:	ldr	r3, [pc, #1152]	; 2a5dc <_start@@Base+0x15fe4>
   2a158:	add	r3, pc, r3
   2a15c:	mov	r2, #0
   2a160:	mov	r1, #12
   2a164:	ldr	r0, [fp, #-16]
   2a168:	bl	354c4 <flatcc_verify_table_field@@Base>
   2a16c:	str	r0, [fp, #-8]
   2a170:	ldr	r3, [fp, #-8]
   2a174:	cmp	r3, #0
   2a178:	beq	2a184 <_start@@Base+0x15b8c>
   2a17c:	ldr	r3, [fp, #-8]
   2a180:	b	2a5c4 <_start@@Base+0x15fcc>
   2a184:	ldr	r3, [pc, #1108]	; 2a5e0 <_start@@Base+0x15fe8>
   2a188:	add	r3, pc, r3
   2a18c:	mov	r2, #0
   2a190:	mov	r1, #8
   2a194:	ldr	r0, [fp, #-16]
   2a198:	bl	35ed0 <flatcc_verify_union_field@@Base>
   2a19c:	str	r0, [fp, #-8]
   2a1a0:	ldr	r3, [fp, #-8]
   2a1a4:	cmp	r3, #0
   2a1a8:	beq	2a1b4 <_start@@Base+0x15bbc>
   2a1ac:	ldr	r3, [fp, #-8]
   2a1b0:	b	2a5c4 <_start@@Base+0x15fcc>
   2a1b4:	mvn	r3, #-1073741824	; 0xc0000000
   2a1b8:	str	r3, [sp, #4]
   2a1bc:	mov	r3, #2
   2a1c0:	str	r3, [sp]
   2a1c4:	mov	r3, #4
   2a1c8:	mov	r2, #0
   2a1cc:	mov	r1, #9
   2a1d0:	ldr	r0, [fp, #-16]
   2a1d4:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a1d8:	str	r0, [fp, #-8]
   2a1dc:	ldr	r3, [fp, #-8]
   2a1e0:	cmp	r3, #0
   2a1e4:	beq	2a1f0 <_start@@Base+0x15bf8>
   2a1e8:	ldr	r3, [fp, #-8]
   2a1ec:	b	2a5c4 <_start@@Base+0x15fcc>
   2a1f0:	mvn	r3, #-1073741824	; 0xc0000000
   2a1f4:	str	r3, [sp, #4]
   2a1f8:	mov	r3, #2
   2a1fc:	str	r3, [sp]
   2a200:	mov	r3, #4
   2a204:	mov	r2, #0
   2a208:	mov	r1, #31
   2a20c:	ldr	r0, [fp, #-16]
   2a210:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a214:	str	r0, [fp, #-8]
   2a218:	ldr	r3, [fp, #-8]
   2a21c:	cmp	r3, #0
   2a220:	beq	2a22c <_start@@Base+0x15c34>
   2a224:	ldr	r3, [fp, #-8]
   2a228:	b	2a5c4 <_start@@Base+0x15fcc>
   2a22c:	ldr	r3, [pc, #944]	; 2a5e4 <_start@@Base+0x15fec>
   2a230:	add	r3, pc, r3
   2a234:	str	r3, [sp, #4]
   2a238:	mov	r3, #1
   2a23c:	str	r3, [sp]
   2a240:	mov	r3, #0
   2a244:	mov	r2, #0
   2a248:	mov	r1, #13
   2a24c:	ldr	r0, [fp, #-16]
   2a250:	bl	35d64 <flatcc_verify_table_as_nested_root@@Base>
   2a254:	str	r0, [fp, #-8]
   2a258:	ldr	r3, [fp, #-8]
   2a25c:	cmp	r3, #0
   2a260:	beq	2a26c <_start@@Base+0x15c74>
   2a264:	ldr	r3, [fp, #-8]
   2a268:	b	2a5c4 <_start@@Base+0x15fcc>
   2a26c:	ldr	r3, [pc, #884]	; 2a5e8 <_start@@Base+0x15ff0>
   2a270:	add	r3, pc, r3
   2a274:	mov	r2, #0
   2a278:	mov	r1, #14
   2a27c:	ldr	r0, [fp, #-16]
   2a280:	bl	354c4 <flatcc_verify_table_field@@Base>
   2a284:	str	r0, [fp, #-8]
   2a288:	ldr	r3, [fp, #-8]
   2a28c:	cmp	r3, #0
   2a290:	beq	2a29c <_start@@Base+0x15ca4>
   2a294:	ldr	r3, [fp, #-8]
   2a298:	b	2a5c4 <_start@@Base+0x15fcc>
   2a29c:	mov	r3, #1
   2a2a0:	mov	r2, #1
   2a2a4:	mov	r1, #15
   2a2a8:	ldr	r0, [fp, #-16]
   2a2ac:	bl	351d4 <flatcc_verify_field@@Base>
   2a2b0:	str	r0, [fp, #-8]
   2a2b4:	ldr	r3, [fp, #-8]
   2a2b8:	cmp	r3, #0
   2a2bc:	beq	2a2c8 <_start@@Base+0x15cd0>
   2a2c0:	ldr	r3, [fp, #-8]
   2a2c4:	b	2a5c4 <_start@@Base+0x15fcc>
   2a2c8:	mov	r3, #4
   2a2cc:	mov	r2, #4
   2a2d0:	mov	r1, #16
   2a2d4:	ldr	r0, [fp, #-16]
   2a2d8:	bl	351d4 <flatcc_verify_field@@Base>
   2a2dc:	str	r0, [fp, #-8]
   2a2e0:	ldr	r3, [fp, #-8]
   2a2e4:	cmp	r3, #0
   2a2e8:	beq	2a2f4 <_start@@Base+0x15cfc>
   2a2ec:	ldr	r3, [fp, #-8]
   2a2f0:	b	2a5c4 <_start@@Base+0x15fcc>
   2a2f4:	mov	r3, #4
   2a2f8:	mov	r2, #4
   2a2fc:	mov	r1, #17
   2a300:	ldr	r0, [fp, #-16]
   2a304:	bl	351d4 <flatcc_verify_field@@Base>
   2a308:	str	r0, [fp, #-8]
   2a30c:	ldr	r3, [fp, #-8]
   2a310:	cmp	r3, #0
   2a314:	beq	2a320 <_start@@Base+0x15d28>
   2a318:	ldr	r3, [fp, #-8]
   2a31c:	b	2a5c4 <_start@@Base+0x15fcc>
   2a320:	mov	r3, #8
   2a324:	mov	r2, #8
   2a328:	mov	r1, #18
   2a32c:	ldr	r0, [fp, #-16]
   2a330:	bl	351d4 <flatcc_verify_field@@Base>
   2a334:	str	r0, [fp, #-8]
   2a338:	ldr	r3, [fp, #-8]
   2a33c:	cmp	r3, #0
   2a340:	beq	2a34c <_start@@Base+0x15d54>
   2a344:	ldr	r3, [fp, #-8]
   2a348:	b	2a5c4 <_start@@Base+0x15fcc>
   2a34c:	mov	r3, #8
   2a350:	mov	r2, #8
   2a354:	mov	r1, #19
   2a358:	ldr	r0, [fp, #-16]
   2a35c:	bl	351d4 <flatcc_verify_field@@Base>
   2a360:	str	r0, [fp, #-8]
   2a364:	ldr	r3, [fp, #-8]
   2a368:	cmp	r3, #0
   2a36c:	beq	2a378 <_start@@Base+0x15d80>
   2a370:	ldr	r3, [fp, #-8]
   2a374:	b	2a5c4 <_start@@Base+0x15fcc>
   2a378:	mov	r3, #4
   2a37c:	mov	r2, #4
   2a380:	mov	r1, #20
   2a384:	ldr	r0, [fp, #-16]
   2a388:	bl	351d4 <flatcc_verify_field@@Base>
   2a38c:	str	r0, [fp, #-8]
   2a390:	ldr	r3, [fp, #-8]
   2a394:	cmp	r3, #0
   2a398:	beq	2a3a4 <_start@@Base+0x15dac>
   2a39c:	ldr	r3, [fp, #-8]
   2a3a0:	b	2a5c4 <_start@@Base+0x15fcc>
   2a3a4:	mov	r3, #4
   2a3a8:	mov	r2, #4
   2a3ac:	mov	r1, #21
   2a3b0:	ldr	r0, [fp, #-16]
   2a3b4:	bl	351d4 <flatcc_verify_field@@Base>
   2a3b8:	str	r0, [fp, #-8]
   2a3bc:	ldr	r3, [fp, #-8]
   2a3c0:	cmp	r3, #0
   2a3c4:	beq	2a3d0 <_start@@Base+0x15dd8>
   2a3c8:	ldr	r3, [fp, #-8]
   2a3cc:	b	2a5c4 <_start@@Base+0x15fcc>
   2a3d0:	mov	r3, #8
   2a3d4:	mov	r2, #8
   2a3d8:	mov	r1, #22
   2a3dc:	ldr	r0, [fp, #-16]
   2a3e0:	bl	351d4 <flatcc_verify_field@@Base>
   2a3e4:	str	r0, [fp, #-8]
   2a3e8:	ldr	r3, [fp, #-8]
   2a3ec:	cmp	r3, #0
   2a3f0:	beq	2a3fc <_start@@Base+0x15e04>
   2a3f4:	ldr	r3, [fp, #-8]
   2a3f8:	b	2a5c4 <_start@@Base+0x15fcc>
   2a3fc:	mov	r3, #8
   2a400:	mov	r2, #8
   2a404:	mov	r1, #23
   2a408:	ldr	r0, [fp, #-16]
   2a40c:	bl	351d4 <flatcc_verify_field@@Base>
   2a410:	str	r0, [fp, #-8]
   2a414:	ldr	r3, [fp, #-8]
   2a418:	cmp	r3, #0
   2a41c:	beq	2a428 <_start@@Base+0x15e30>
   2a420:	ldr	r3, [fp, #-8]
   2a424:	b	2a5c4 <_start@@Base+0x15fcc>
   2a428:	mov	r3, #4
   2a42c:	mov	r2, #4
   2a430:	mov	r1, #25
   2a434:	ldr	r0, [fp, #-16]
   2a438:	bl	351d4 <flatcc_verify_field@@Base>
   2a43c:	str	r0, [fp, #-8]
   2a440:	ldr	r3, [fp, #-8]
   2a444:	cmp	r3, #0
   2a448:	beq	2a454 <_start@@Base+0x15e5c>
   2a44c:	ldr	r3, [fp, #-8]
   2a450:	b	2a5c4 <_start@@Base+0x15fcc>
   2a454:	mov	r3, #4
   2a458:	mov	r2, #4
   2a45c:	mov	r1, #26
   2a460:	ldr	r0, [fp, #-16]
   2a464:	bl	351d4 <flatcc_verify_field@@Base>
   2a468:	str	r0, [fp, #-8]
   2a46c:	ldr	r3, [fp, #-8]
   2a470:	cmp	r3, #0
   2a474:	beq	2a480 <_start@@Base+0x15e88>
   2a478:	ldr	r3, [fp, #-8]
   2a47c:	b	2a5c4 <_start@@Base+0x15fcc>
   2a480:	mov	r3, #4
   2a484:	mov	r2, #4
   2a488:	mov	r1, #27
   2a48c:	ldr	r0, [fp, #-16]
   2a490:	bl	351d4 <flatcc_verify_field@@Base>
   2a494:	str	r0, [fp, #-8]
   2a498:	ldr	r3, [fp, #-8]
   2a49c:	cmp	r3, #0
   2a4a0:	beq	2a4ac <_start@@Base+0x15eb4>
   2a4a4:	ldr	r3, [fp, #-8]
   2a4a8:	b	2a5c4 <_start@@Base+0x15fcc>
   2a4ac:	mvn	r3, #0
   2a4b0:	str	r3, [sp, #4]
   2a4b4:	mov	r3, #1
   2a4b8:	str	r3, [sp]
   2a4bc:	mov	r3, #1
   2a4c0:	mov	r2, #0
   2a4c4:	mov	r1, #30
   2a4c8:	ldr	r0, [fp, #-16]
   2a4cc:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a4d0:	str	r0, [fp, #-8]
   2a4d4:	ldr	r3, [fp, #-8]
   2a4d8:	cmp	r3, #0
   2a4dc:	beq	2a4e8 <_start@@Base+0x15ef0>
   2a4e0:	ldr	r3, [fp, #-8]
   2a4e4:	b	2a5c4 <_start@@Base+0x15fcc>
   2a4e8:	mvn	r3, #-536870912	; 0xe0000000
   2a4ec:	str	r3, [sp, #4]
   2a4f0:	mov	r3, #8
   2a4f4:	str	r3, [sp]
   2a4f8:	mov	r3, #8
   2a4fc:	mov	r2, #0
   2a500:	mov	r1, #32
   2a504:	ldr	r0, [fp, #-16]
   2a508:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a50c:	str	r0, [fp, #-8]
   2a510:	ldr	r3, [fp, #-8]
   2a514:	cmp	r3, #0
   2a518:	beq	2a524 <_start@@Base+0x15f2c>
   2a51c:	ldr	r3, [fp, #-8]
   2a520:	b	2a5c4 <_start@@Base+0x15fcc>
   2a524:	mvn	r3, #-536870912	; 0xe0000000
   2a528:	str	r3, [sp, #4]
   2a52c:	mov	r3, #8
   2a530:	str	r3, [sp]
   2a534:	mov	r3, #8
   2a538:	mov	r2, #0
   2a53c:	mov	r1, #33	; 0x21
   2a540:	ldr	r0, [fp, #-16]
   2a544:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a548:	str	r0, [fp, #-8]
   2a54c:	ldr	r3, [fp, #-8]
   2a550:	cmp	r3, #0
   2a554:	beq	2a560 <_start@@Base+0x15f68>
   2a558:	ldr	r3, [fp, #-8]
   2a55c:	b	2a5c4 <_start@@Base+0x15fcc>
   2a560:	ldr	r3, [pc, #132]	; 2a5ec <_start@@Base+0x15ff4>
   2a564:	add	r3, pc, r3
   2a568:	mov	r2, #0
   2a56c:	mov	r1, #34	; 0x22
   2a570:	ldr	r0, [fp, #-16]
   2a574:	bl	354c4 <flatcc_verify_table_field@@Base>
   2a578:	str	r0, [fp, #-8]
   2a57c:	ldr	r3, [fp, #-8]
   2a580:	cmp	r3, #0
   2a584:	beq	2a590 <_start@@Base+0x15f98>
   2a588:	ldr	r3, [fp, #-8]
   2a58c:	b	2a5c4 <_start@@Base+0x15fcc>
   2a590:	ldr	r3, [pc, #88]	; 2a5f0 <_start@@Base+0x15ff8>
   2a594:	add	r3, pc, r3
   2a598:	mov	r2, #0
   2a59c:	mov	r1, #35	; 0x23
   2a5a0:	ldr	r0, [fp, #-16]
   2a5a4:	bl	354c4 <flatcc_verify_table_field@@Base>
   2a5a8:	str	r0, [fp, #-8]
   2a5ac:	ldr	r3, [fp, #-8]
   2a5b0:	cmp	r3, #0
   2a5b4:	beq	2a5c0 <_start@@Base+0x15fc8>
   2a5b8:	ldr	r3, [fp, #-8]
   2a5bc:	b	2a5c4 <_start@@Base+0x15fcc>
   2a5c0:	mov	r3, #0
   2a5c4:	mov	r0, r3
   2a5c8:	sub	sp, fp, #4
   2a5cc:	ldr	fp, [sp]
   2a5d0:	add	sp, sp, #4
   2a5d4:	pop	{pc}		; (ldr pc, [sp], #4)
   2a5d8:			; <UNDEFINED> instruction: 0xfffffecc
   2a5dc:			; <UNDEFINED> instruction: 0xfffffdd4
   2a5e0:			; <UNDEFINED> instruction: 0xfffff328
   2a5e4:			; <UNDEFINED> instruction: 0xfffffcfc
   2a5e8:			; <UNDEFINED> instruction: 0xfffff6e4
   2a5ec:			; <UNDEFINED> instruction: 0xfffff11c
   2a5f0:			; <UNDEFINED> instruction: 0xfffff8b0
   2a5f4:	str	fp, [sp, #-8]!
   2a5f8:	str	lr, [sp, #4]
   2a5fc:	add	fp, sp, #4
   2a600:	sub	sp, sp, #24
   2a604:	str	r0, [fp, #-16]
   2a608:	mov	r3, #1
   2a60c:	mov	r2, #1
   2a610:	mov	r1, #0
   2a614:	ldr	r0, [fp, #-16]
   2a618:	bl	351d4 <flatcc_verify_field@@Base>
   2a61c:	str	r0, [fp, #-8]
   2a620:	ldr	r3, [fp, #-8]
   2a624:	cmp	r3, #0
   2a628:	beq	2a634 <_start@@Base+0x1603c>
   2a62c:	ldr	r3, [fp, #-8]
   2a630:	b	2a83c <_start@@Base+0x16244>
   2a634:	mov	r3, #1
   2a638:	mov	r2, #1
   2a63c:	mov	r1, #1
   2a640:	ldr	r0, [fp, #-16]
   2a644:	bl	351d4 <flatcc_verify_field@@Base>
   2a648:	str	r0, [fp, #-8]
   2a64c:	ldr	r3, [fp, #-8]
   2a650:	cmp	r3, #0
   2a654:	beq	2a660 <_start@@Base+0x16068>
   2a658:	ldr	r3, [fp, #-8]
   2a65c:	b	2a83c <_start@@Base+0x16244>
   2a660:	mov	r3, #2
   2a664:	mov	r2, #2
   2a668:	mov	r1, #2
   2a66c:	ldr	r0, [fp, #-16]
   2a670:	bl	351d4 <flatcc_verify_field@@Base>
   2a674:	str	r0, [fp, #-8]
   2a678:	ldr	r3, [fp, #-8]
   2a67c:	cmp	r3, #0
   2a680:	beq	2a68c <_start@@Base+0x16094>
   2a684:	ldr	r3, [fp, #-8]
   2a688:	b	2a83c <_start@@Base+0x16244>
   2a68c:	mov	r3, #2
   2a690:	mov	r2, #2
   2a694:	mov	r1, #3
   2a698:	ldr	r0, [fp, #-16]
   2a69c:	bl	351d4 <flatcc_verify_field@@Base>
   2a6a0:	str	r0, [fp, #-8]
   2a6a4:	ldr	r3, [fp, #-8]
   2a6a8:	cmp	r3, #0
   2a6ac:	beq	2a6b8 <_start@@Base+0x160c0>
   2a6b0:	ldr	r3, [fp, #-8]
   2a6b4:	b	2a83c <_start@@Base+0x16244>
   2a6b8:	mov	r3, #4
   2a6bc:	mov	r2, #4
   2a6c0:	mov	r1, #4
   2a6c4:	ldr	r0, [fp, #-16]
   2a6c8:	bl	351d4 <flatcc_verify_field@@Base>
   2a6cc:	str	r0, [fp, #-8]
   2a6d0:	ldr	r3, [fp, #-8]
   2a6d4:	cmp	r3, #0
   2a6d8:	beq	2a6e4 <_start@@Base+0x160ec>
   2a6dc:	ldr	r3, [fp, #-8]
   2a6e0:	b	2a83c <_start@@Base+0x16244>
   2a6e4:	mov	r3, #4
   2a6e8:	mov	r2, #4
   2a6ec:	mov	r1, #5
   2a6f0:	ldr	r0, [fp, #-16]
   2a6f4:	bl	351d4 <flatcc_verify_field@@Base>
   2a6f8:	str	r0, [fp, #-8]
   2a6fc:	ldr	r3, [fp, #-8]
   2a700:	cmp	r3, #0
   2a704:	beq	2a710 <_start@@Base+0x16118>
   2a708:	ldr	r3, [fp, #-8]
   2a70c:	b	2a83c <_start@@Base+0x16244>
   2a710:	mov	r3, #8
   2a714:	mov	r2, #8
   2a718:	mov	r1, #6
   2a71c:	ldr	r0, [fp, #-16]
   2a720:	bl	351d4 <flatcc_verify_field@@Base>
   2a724:	str	r0, [fp, #-8]
   2a728:	ldr	r3, [fp, #-8]
   2a72c:	cmp	r3, #0
   2a730:	beq	2a73c <_start@@Base+0x16144>
   2a734:	ldr	r3, [fp, #-8]
   2a738:	b	2a83c <_start@@Base+0x16244>
   2a73c:	mov	r3, #8
   2a740:	mov	r2, #8
   2a744:	mov	r1, #7
   2a748:	ldr	r0, [fp, #-16]
   2a74c:	bl	351d4 <flatcc_verify_field@@Base>
   2a750:	str	r0, [fp, #-8]
   2a754:	ldr	r3, [fp, #-8]
   2a758:	cmp	r3, #0
   2a75c:	beq	2a768 <_start@@Base+0x16170>
   2a760:	ldr	r3, [fp, #-8]
   2a764:	b	2a83c <_start@@Base+0x16244>
   2a768:	mov	r3, #4
   2a76c:	mov	r2, #4
   2a770:	mov	r1, #8
   2a774:	ldr	r0, [fp, #-16]
   2a778:	bl	351d4 <flatcc_verify_field@@Base>
   2a77c:	str	r0, [fp, #-8]
   2a780:	ldr	r3, [fp, #-8]
   2a784:	cmp	r3, #0
   2a788:	beq	2a794 <_start@@Base+0x1619c>
   2a78c:	ldr	r3, [fp, #-8]
   2a790:	b	2a83c <_start@@Base+0x16244>
   2a794:	mov	r3, #8
   2a798:	mov	r2, #8
   2a79c:	mov	r1, #9
   2a7a0:	ldr	r0, [fp, #-16]
   2a7a4:	bl	351d4 <flatcc_verify_field@@Base>
   2a7a8:	str	r0, [fp, #-8]
   2a7ac:	ldr	r3, [fp, #-8]
   2a7b0:	cmp	r3, #0
   2a7b4:	beq	2a7c0 <_start@@Base+0x161c8>
   2a7b8:	ldr	r3, [fp, #-8]
   2a7bc:	b	2a83c <_start@@Base+0x16244>
   2a7c0:	mvn	r3, #0
   2a7c4:	str	r3, [sp, #4]
   2a7c8:	mov	r3, #1
   2a7cc:	str	r3, [sp]
   2a7d0:	mov	r3, #1
   2a7d4:	mov	r2, #0
   2a7d8:	mov	r1, #10
   2a7dc:	ldr	r0, [fp, #-16]
   2a7e0:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a7e4:	str	r0, [fp, #-8]
   2a7e8:	ldr	r3, [fp, #-8]
   2a7ec:	cmp	r3, #0
   2a7f0:	beq	2a7fc <_start@@Base+0x16204>
   2a7f4:	ldr	r3, [fp, #-8]
   2a7f8:	b	2a83c <_start@@Base+0x16244>
   2a7fc:	mvn	r3, #-536870912	; 0xe0000000
   2a800:	str	r3, [sp, #4]
   2a804:	mov	r3, #8
   2a808:	str	r3, [sp]
   2a80c:	mov	r3, #8
   2a810:	mov	r2, #0
   2a814:	mov	r1, #11
   2a818:	ldr	r0, [fp, #-16]
   2a81c:	bl	35324 <flatcc_verify_vector_field@@Base>
   2a820:	str	r0, [fp, #-8]
   2a824:	ldr	r3, [fp, #-8]
   2a828:	cmp	r3, #0
   2a82c:	beq	2a838 <_start@@Base+0x16240>
   2a830:	ldr	r3, [fp, #-8]
   2a834:	b	2a83c <_start@@Base+0x16244>
   2a838:	mov	r3, #0
   2a83c:	mov	r0, r3
   2a840:	sub	sp, fp, #4
   2a844:	ldr	fp, [sp]
   2a848:	add	sp, sp, #4
   2a84c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a850:	str	fp, [sp, #-8]!
   2a854:	str	lr, [sp, #4]
   2a858:	add	fp, sp, #4
   2a85c:	sub	sp, sp, #16
   2a860:	str	r0, [fp, #-16]
   2a864:	mov	r3, #4
   2a868:	mov	r2, #4
   2a86c:	mov	r1, #0
   2a870:	ldr	r0, [fp, #-16]
   2a874:	bl	351d4 <flatcc_verify_field@@Base>
   2a878:	str	r0, [fp, #-8]
   2a87c:	ldr	r3, [fp, #-8]
   2a880:	cmp	r3, #0
   2a884:	beq	2a890 <_start@@Base+0x16298>
   2a888:	ldr	r3, [fp, #-8]
   2a88c:	b	2a894 <_start@@Base+0x1629c>
   2a890:	mov	r3, #0
   2a894:	mov	r0, r3
   2a898:	sub	sp, fp, #4
   2a89c:	ldr	fp, [sp]
   2a8a0:	add	sp, sp, #4
   2a8a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2a8a8:	str	fp, [sp, #-8]!
   2a8ac:	str	lr, [sp, #4]
   2a8b0:	add	fp, sp, #4
   2a8b4:	sub	sp, sp, #16
   2a8b8:	str	r0, [fp, #-16]
   2a8bc:	ldr	r3, [pc, #256]	; 2a9c4 <_start@@Base+0x163cc>
   2a8c0:	add	r3, pc, r3
   2a8c4:	mov	r2, #0
   2a8c8:	mov	r1, #1
   2a8cc:	ldr	r0, [fp, #-16]
   2a8d0:	bl	35ed0 <flatcc_verify_union_field@@Base>
   2a8d4:	str	r0, [fp, #-8]
   2a8d8:	ldr	r3, [fp, #-8]
   2a8dc:	cmp	r3, #0
   2a8e0:	beq	2a8ec <_start@@Base+0x162f4>
   2a8e4:	ldr	r3, [fp, #-8]
   2a8e8:	b	2a9b0 <_start@@Base+0x163b8>
   2a8ec:	ldr	r3, [pc, #212]	; 2a9c8 <_start@@Base+0x163d0>
   2a8f0:	add	r3, pc, r3
   2a8f4:	mov	r2, #0
   2a8f8:	mov	r1, #3
   2a8fc:	ldr	r0, [fp, #-16]
   2a900:	bl	35ed0 <flatcc_verify_union_field@@Base>
   2a904:	str	r0, [fp, #-8]
   2a908:	ldr	r3, [fp, #-8]
   2a90c:	cmp	r3, #0
   2a910:	beq	2a91c <_start@@Base+0x16324>
   2a914:	ldr	r3, [fp, #-8]
   2a918:	b	2a9b0 <_start@@Base+0x163b8>
   2a91c:	ldr	r3, [pc, #168]	; 2a9cc <_start@@Base+0x163d4>
   2a920:	add	r3, pc, r3
   2a924:	mov	r2, #0
   2a928:	mov	r1, #5
   2a92c:	ldr	r0, [fp, #-16]
   2a930:	bl	35ed0 <flatcc_verify_union_field@@Base>
   2a934:	str	r0, [fp, #-8]
   2a938:	ldr	r3, [fp, #-8]
   2a93c:	cmp	r3, #0
   2a940:	beq	2a94c <_start@@Base+0x16354>
   2a944:	ldr	r3, [fp, #-8]
   2a948:	b	2a9b0 <_start@@Base+0x163b8>
   2a94c:	ldr	r3, [pc, #124]	; 2a9d0 <_start@@Base+0x163d8>
   2a950:	add	r3, pc, r3
   2a954:	mov	r2, #0
   2a958:	mov	r1, #7
   2a95c:	ldr	r0, [fp, #-16]
   2a960:	bl	35ed0 <flatcc_verify_union_field@@Base>
   2a964:	str	r0, [fp, #-8]
   2a968:	ldr	r3, [fp, #-8]
   2a96c:	cmp	r3, #0
   2a970:	beq	2a97c <_start@@Base+0x16384>
   2a974:	ldr	r3, [fp, #-8]
   2a978:	b	2a9b0 <_start@@Base+0x163b8>
   2a97c:	ldr	r3, [pc, #80]	; 2a9d4 <_start@@Base+0x163dc>
   2a980:	add	r3, pc, r3
   2a984:	mov	r2, #0
   2a988:	mov	r1, #9
   2a98c:	ldr	r0, [fp, #-16]
   2a990:	bl	3613c <flatcc_verify_union_vector_field@@Base>
   2a994:	str	r0, [fp, #-8]
   2a998:	ldr	r3, [fp, #-8]
   2a99c:	cmp	r3, #0
   2a9a0:	beq	2a9ac <_start@@Base+0x163b4>
   2a9a4:	ldr	r3, [fp, #-8]
   2a9a8:	b	2a9b0 <_start@@Base+0x163b8>
   2a9ac:	mov	r3, #0
   2a9b0:	mov	r0, r3
   2a9b4:	sub	sp, fp, #4
   2a9b8:	ldr	fp, [sp]
   2a9bc:	add	sp, sp, #4
   2a9c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a9c4:			; <UNDEFINED> instruction: 0xffffecc4
   2a9c8:			; <UNDEFINED> instruction: 0xffffec94
   2a9cc:			; <UNDEFINED> instruction: 0xffffec64
   2a9d0:			; <UNDEFINED> instruction: 0xffffec34
   2a9d4:			; <UNDEFINED> instruction: 0xffffec04
   2a9d8:	str	fp, [sp, #-8]!
   2a9dc:	str	lr, [sp, #4]
   2a9e0:	add	fp, sp, #4
   2a9e4:	sub	sp, sp, #48	; 0x30
   2a9e8:	str	r0, [fp, #-40]	; 0xffffffd8
   2a9ec:	str	r1, [fp, #-44]	; 0xffffffd4
   2a9f0:	str	r2, [fp, #-48]	; 0xffffffd0
   2a9f4:	str	r3, [fp, #-52]	; 0xffffffcc
   2a9f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a9fc:	str	r3, [fp, #-12]
   2aa00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aa04:	cmp	r3, #0
   2aa08:	beq	2aa24 <_start@@Base+0x1642c>
   2aa0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2aa10:	ldr	r3, [pc, #448]	; 2abd8 <_start@@Base+0x165e0>
   2aa14:	add	r3, pc, r3
   2aa18:	mov	r1, r3
   2aa1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2aa20:	bl	1457c <fprintf@plt>
   2aa24:	mov	r3, #0
   2aa28:	str	r3, [fp, #-8]
   2aa2c:	b	2ab60 <_start@@Base+0x16568>
   2aa30:	ldr	r3, [fp, #-8]
   2aa34:	and	r3, r3, #15
   2aa38:	cmp	r3, #0
   2aa3c:	bne	2aa84 <_start@@Base+0x1648c>
   2aa40:	ldr	r3, [fp, #-8]
   2aa44:	cmp	r3, #0
   2aa48:	beq	2aa68 <_start@@Base+0x16470>
   2aa4c:	sub	r3, fp, #32
   2aa50:	mov	r2, r3
   2aa54:	ldr	r3, [pc, #384]	; 2abdc <_start@@Base+0x165e4>
   2aa58:	add	r3, pc, r3
   2aa5c:	mov	r1, r3
   2aa60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2aa64:	bl	1457c <fprintf@plt>
   2aa68:	ldr	r2, [fp, #-8]
   2aa6c:	ldr	r3, [pc, #364]	; 2abe0 <_start@@Base+0x165e8>
   2aa70:	add	r3, pc, r3
   2aa74:	mov	r1, r3
   2aa78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2aa7c:	bl	1457c <fprintf@plt>
   2aa80:	b	2aaa0 <_start@@Base+0x164a8>
   2aa84:	ldr	r3, [fp, #-8]
   2aa88:	and	r3, r3, #7
   2aa8c:	cmp	r3, #0
   2aa90:	bne	2aaa0 <_start@@Base+0x164a8>
   2aa94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2aa98:	mov	r0, #32
   2aa9c:	bl	145c4 <fputc@plt>
   2aaa0:	ldr	r2, [fp, #-12]
   2aaa4:	ldr	r3, [fp, #-8]
   2aaa8:	add	r3, r2, r3
   2aaac:	ldrb	r3, [r3]
   2aab0:	mov	r2, r3
   2aab4:	ldr	r3, [pc, #296]	; 2abe4 <_start@@Base+0x165ec>
   2aab8:	add	r3, pc, r3
   2aabc:	mov	r1, r3
   2aac0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2aac4:	bl	1457c <fprintf@plt>
   2aac8:	ldr	r2, [fp, #-12]
   2aacc:	ldr	r3, [fp, #-8]
   2aad0:	add	r3, r2, r3
   2aad4:	ldrb	r3, [r3]
   2aad8:	cmp	r3, #31
   2aadc:	bls	2aaf8 <_start@@Base+0x16500>
   2aae0:	ldr	r2, [fp, #-12]
   2aae4:	ldr	r3, [fp, #-8]
   2aae8:	add	r3, r2, r3
   2aaec:	ldrb	r3, [r3]
   2aaf0:	cmp	r3, #126	; 0x7e
   2aaf4:	bls	2ab14 <_start@@Base+0x1651c>
   2aaf8:	ldr	r3, [fp, #-8]
   2aafc:	and	r3, r3, #15
   2ab00:	sub	r2, fp, #4
   2ab04:	add	r3, r2, r3
   2ab08:	mov	r2, #46	; 0x2e
   2ab0c:	strb	r2, [r3, #-28]	; 0xffffffe4
   2ab10:	b	2ab38 <_start@@Base+0x16540>
   2ab14:	ldr	r2, [fp, #-12]
   2ab18:	ldr	r3, [fp, #-8]
   2ab1c:	add	r2, r2, r3
   2ab20:	ldr	r3, [fp, #-8]
   2ab24:	and	r3, r3, #15
   2ab28:	ldrb	r2, [r2]
   2ab2c:	sub	r1, fp, #4
   2ab30:	add	r3, r1, r3
   2ab34:	strb	r2, [r3, #-28]	; 0xffffffe4
   2ab38:	ldr	r3, [fp, #-8]
   2ab3c:	and	r3, r3, #15
   2ab40:	add	r3, r3, #1
   2ab44:	sub	r2, fp, #4
   2ab48:	add	r3, r2, r3
   2ab4c:	mov	r2, #0
   2ab50:	strb	r2, [r3, #-28]	; 0xffffffe4
   2ab54:	ldr	r3, [fp, #-8]
   2ab58:	add	r3, r3, #1
   2ab5c:	str	r3, [fp, #-8]
   2ab60:	ldr	r2, [fp, #-8]
   2ab64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ab68:	cmp	r2, r3
   2ab6c:	bcc	2aa30 <_start@@Base+0x16438>
   2ab70:	b	2ab98 <_start@@Base+0x165a0>
   2ab74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ab78:	mov	r2, #3
   2ab7c:	mov	r1, #1
   2ab80:	ldr	r0, [pc, #96]	; 2abe8 <_start@@Base+0x165f0>
   2ab84:	add	r0, pc, r0
   2ab88:	bl	14540 <fwrite@plt>
   2ab8c:	ldr	r3, [fp, #-8]
   2ab90:	add	r3, r3, #1
   2ab94:	str	r3, [fp, #-8]
   2ab98:	ldr	r3, [fp, #-8]
   2ab9c:	and	r3, r3, #15
   2aba0:	cmp	r3, #0
   2aba4:	bne	2ab74 <_start@@Base+0x1657c>
   2aba8:	sub	r3, fp, #32
   2abac:	mov	r2, r3
   2abb0:	ldr	r3, [pc, #52]	; 2abec <_start@@Base+0x165f4>
   2abb4:	add	r3, pc, r3
   2abb8:	mov	r1, r3
   2abbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2abc0:	bl	1457c <fprintf@plt>
   2abc4:	nop	{0}
   2abc8:	sub	sp, fp, #4
   2abcc:	ldr	fp, [sp]
   2abd0:	add	sp, sp, #4
   2abd4:	pop	{pc}		; (ldr pc, [sp], #4)
   2abd8:	andeq	r3, r2, ip, lsr sl
   2abdc:	andeq	r3, r2, r0, lsl #20
   2abe0:	strdeq	r3, [r2], -r0
   2abe4:			; <UNDEFINED> instruction: 0x000239b0
   2abe8:	andeq	r3, r2, ip, ror #17
   2abec:	andeq	r3, r2, r4, lsr #17

0002abf0 <test_json@@Base>:
   2abf0:	strd	r4, [sp, #-16]!
   2abf4:	str	fp, [sp, #8]
   2abf8:	str	lr, [sp, #12]
   2abfc:	add	fp, sp, #12
   2ac00:	sub	sp, sp, #384	; 0x180
   2ac04:	str	r0, [fp, #-368]	; 0xfffffe90
   2ac08:	str	r1, [fp, #-372]	; 0xfffffe8c
   2ac0c:	str	r2, [fp, #-376]	; 0xfffffe88
   2ac10:	str	r3, [fp, #-380]	; 0xfffffe84
   2ac14:	ldr	r4, [pc, #1068]	; 2b048 <test_json@@Base+0x458>
   2ac18:	add	r4, pc, r4
   2ac1c:	mvn	r3, #0
   2ac20:	str	r3, [fp, #-16]
   2ac24:	mov	r3, #0
   2ac28:	str	r3, [fp, #-20]	; 0xffffffec
   2ac2c:	mov	r3, #0
   2ac30:	str	r3, [fp, #-28]	; 0xffffffe4
   2ac34:	sub	r3, fp, #276	; 0x114
   2ac38:	str	r3, [fp, #-32]	; 0xffffffe0
   2ac3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac40:	bl	2d818 <flatcc_builder_init@@Base>
   2ac44:	sub	r3, fp, #364	; 0x16c
   2ac48:	mov	r1, #0
   2ac4c:	mov	r0, r3
   2ac50:	bl	4d4e0 <flatcc_json_printer_init_dynamic_buffer@@Base>
   2ac54:	sub	r3, fp, #364	; 0x16c
   2ac58:	ldr	r1, [fp, #8]
   2ac5c:	mov	r0, r3
   2ac60:	bl	271cc <_start@@Base+0x12bd4>
   2ac64:	ldr	r0, [fp, #-372]	; 0xfffffe8c
   2ac68:	bl	14570 <strlen@plt>
   2ac6c:	ldr	r3, [fp, #-368]	; 0xfffffe90
   2ac70:	ldr	r3, [r3]
   2ac74:	ldr	r2, [fp, #-368]	; 0xfffffe90
   2ac78:	ldr	r2, [r2, #4]
   2ac7c:	sub	r1, fp, #316	; 0x13c
   2ac80:	str	r2, [sp, #8]
   2ac84:	str	r3, [sp, #4]
   2ac88:	ldr	r3, [fp, #4]
   2ac8c:	str	r3, [sp]
   2ac90:	mov	r3, r0
   2ac94:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   2ac98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac9c:	bl	3ea28 <flatcc_json_parser_table_as_root@@Base>
   2aca0:	str	r0, [fp, #-36]	; 0xffffffdc
   2aca4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2aca8:	ldr	r3, [fp, #-380]	; 0xfffffe84
   2acac:	cmp	r2, r3
   2acb0:	beq	2ae50 <test_json@@Base+0x260>
   2acb4:	ldr	r3, [fp, #-380]	; 0xfffffe84
   2acb8:	cmp	r3, #0
   2acbc:	beq	2ad9c <test_json@@Base+0x1ac>
   2acc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2acc4:	cmp	r3, #0
   2acc8:	beq	2ad4c <test_json@@Base+0x15c>
   2accc:	ldr	r3, [pc, #888]	; 2b04c <test_json@@Base+0x45c>
   2acd0:	ldr	r3, [r4, r3]
   2acd4:	ldr	r5, [r3]
   2acd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2acdc:	bl	3b4e8 <flatcc_json_parser_error_string@@Base>
   2ace0:	mov	r3, r0
   2ace4:	ldr	r2, [fp, #12]
   2ace8:	ldr	r1, [pc, #864]	; 2b050 <test_json@@Base+0x460>
   2acec:	add	r1, pc, r1
   2acf0:	mov	r0, r5
   2acf4:	bl	1457c <fprintf@plt>
   2acf8:	ldr	r3, [pc, #844]	; 2b04c <test_json@@Base+0x45c>
   2acfc:	ldr	r3, [r4, r3]
   2ad00:	ldr	r5, [r3]
   2ad04:	ldr	r0, [fp, #-380]	; 0xfffffe84
   2ad08:	bl	3b4e8 <flatcc_json_parser_error_string@@Base>
   2ad0c:	mov	r3, r0
   2ad10:	mov	r2, r3
   2ad14:	ldr	r3, [pc, #824]	; 2b054 <test_json@@Base+0x464>
   2ad18:	add	r3, pc, r3
   2ad1c:	mov	r1, r3
   2ad20:	mov	r0, r5
   2ad24:	bl	1457c <fprintf@plt>
   2ad28:	ldr	r3, [pc, #796]	; 2b04c <test_json@@Base+0x45c>
   2ad2c:	ldr	r3, [r4, r3]
   2ad30:	ldr	r3, [r3]
   2ad34:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   2ad38:	ldr	r1, [pc, #792]	; 2b058 <test_json@@Base+0x468>
   2ad3c:	add	r1, pc, r1
   2ad40:	mov	r0, r3
   2ad44:	bl	1457c <fprintf@plt>
   2ad48:	b	2ade8 <test_json@@Base+0x1f8>
   2ad4c:	ldr	r3, [pc, #760]	; 2b04c <test_json@@Base+0x45c>
   2ad50:	ldr	r3, [r4, r3]
   2ad54:	ldr	r5, [r3]
   2ad58:	ldr	r0, [fp, #-380]	; 0xfffffe84
   2ad5c:	bl	3b4e8 <flatcc_json_parser_error_string@@Base>
   2ad60:	mov	r3, r0
   2ad64:	ldr	r2, [fp, #12]
   2ad68:	ldr	r1, [pc, #748]	; 2b05c <test_json@@Base+0x46c>
   2ad6c:	add	r1, pc, r1
   2ad70:	mov	r0, r5
   2ad74:	bl	1457c <fprintf@plt>
   2ad78:	ldr	r3, [pc, #716]	; 2b04c <test_json@@Base+0x45c>
   2ad7c:	ldr	r3, [r4, r3]
   2ad80:	ldr	r3, [r3]
   2ad84:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   2ad88:	ldr	r1, [pc, #720]	; 2b060 <test_json@@Base+0x470>
   2ad8c:	add	r1, pc, r1
   2ad90:	mov	r0, r3
   2ad94:	bl	1457c <fprintf@plt>
   2ad98:	b	2ade8 <test_json@@Base+0x1f8>
   2ad9c:	ldr	r3, [pc, #680]	; 2b04c <test_json@@Base+0x45c>
   2ada0:	ldr	r3, [r4, r3]
   2ada4:	ldr	r5, [r3]
   2ada8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2adac:	bl	3b4e8 <flatcc_json_parser_error_string@@Base>
   2adb0:	mov	r3, r0
   2adb4:	ldr	r2, [fp, #12]
   2adb8:	ldr	r1, [pc, #676]	; 2b064 <test_json@@Base+0x474>
   2adbc:	add	r1, pc, r1
   2adc0:	mov	r0, r5
   2adc4:	bl	1457c <fprintf@plt>
   2adc8:	ldr	r3, [pc, #636]	; 2b04c <test_json@@Base+0x45c>
   2adcc:	ldr	r3, [r4, r3]
   2add0:	ldr	r3, [r3]
   2add4:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   2add8:	ldr	r1, [pc, #648]	; 2b068 <test_json@@Base+0x478>
   2addc:	add	r1, pc, r1
   2ade0:	mov	r0, r3
   2ade4:	bl	1457c <fprintf@plt>
   2ade8:	mov	r3, #0
   2adec:	str	r3, [fp, #-24]	; 0xffffffe8
   2adf0:	b	2ae18 <test_json@@Base+0x228>
   2adf4:	ldr	r3, [pc, #592]	; 2b04c <test_json@@Base+0x45c>
   2adf8:	ldr	r3, [r4, r3]
   2adfc:	ldr	r3, [r3]
   2ae00:	mov	r1, r3
   2ae04:	mov	r0, #32
   2ae08:	bl	145c4 <fputc@plt>
   2ae0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae10:	add	r3, r3, #1
   2ae14:	str	r3, [fp, #-24]	; 0xffffffe8
   2ae18:	ldr	r3, [fp, #-300]	; 0xfffffed4
   2ae1c:	sub	r3, r3, #1
   2ae20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ae24:	cmp	r2, r3
   2ae28:	blt	2adf4 <test_json@@Base+0x204>
   2ae2c:	ldr	r3, [pc, #536]	; 2b04c <test_json@@Base+0x45c>
   2ae30:	ldr	r3, [r4, r3]
   2ae34:	ldr	r3, [r3]
   2ae38:	mov	r2, #2
   2ae3c:	mov	r1, #1
   2ae40:	ldr	r0, [pc, #548]	; 2b06c <test_json@@Base+0x47c>
   2ae44:	add	r0, pc, r0
   2ae48:	bl	14540 <fwrite@plt>
   2ae4c:	b	2aff8 <test_json@@Base+0x408>
   2ae50:	ldr	r3, [fp, #-380]	; 0xfffffe84
   2ae54:	cmp	r3, #0
   2ae58:	beq	2ae68 <test_json@@Base+0x278>
   2ae5c:	mov	r3, #0
   2ae60:	str	r3, [fp, #-16]
   2ae64:	b	2afd4 <test_json@@Base+0x3e4>
   2ae68:	sub	r3, fp, #40	; 0x28
   2ae6c:	mov	r1, r3
   2ae70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ae74:	bl	32eac <flatcc_builder_finalize_aligned_buffer@@Base>
   2ae78:	str	r0, [fp, #-20]	; 0xffffffec
   2ae7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2ae80:	ldr	r3, [fp, #-368]	; 0xfffffe90
   2ae84:	ldr	r2, [r3]
   2ae88:	ldr	r3, [fp, #-368]	; 0xfffffe90
   2ae8c:	ldr	r3, [r3, #12]
   2ae90:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ae94:	bl	35b08 <flatcc_verify_table_as_root@@Base>
   2ae98:	str	r0, [fp, #-16]
   2ae9c:	ldr	r3, [fp, #-16]
   2aea0:	cmp	r3, #0
   2aea4:	beq	2aee4 <test_json@@Base+0x2f4>
   2aea8:	ldr	r3, [pc, #412]	; 2b04c <test_json@@Base+0x45c>
   2aeac:	ldr	r3, [r4, r3]
   2aeb0:	ldr	r5, [r3]
   2aeb4:	ldr	r0, [fp, #-16]
   2aeb8:	bl	33de8 <flatcc_verify_error_string@@Base>
   2aebc:	mov	r3, r0
   2aec0:	str	r3, [sp]
   2aec4:	ldr	r3, [fp, #12]
   2aec8:	ldr	r2, [pc, #416]	; 2b070 <test_json@@Base+0x480>
   2aecc:	add	r2, pc, r2
   2aed0:	ldr	r1, [pc, #412]	; 2b074 <test_json@@Base+0x484>
   2aed4:	add	r1, pc, r1
   2aed8:	mov	r0, r5
   2aedc:	bl	1457c <fprintf@plt>
   2aee0:	b	2aff8 <test_json@@Base+0x408>
   2aee4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2aee8:	ldr	r3, [fp, #-368]	; 0xfffffe90
   2aeec:	ldr	r1, [r3]
   2aef0:	ldr	r3, [fp, #-368]	; 0xfffffe90
   2aef4:	ldr	r3, [r3, #8]
   2aef8:	sub	r0, fp, #364	; 0x16c
   2aefc:	str	r3, [sp]
   2af00:	mov	r3, r1
   2af04:	ldr	r1, [fp, #-20]	; 0xffffffec
   2af08:	bl	4cb9c <flatcc_json_printer_table_as_root@@Base>
   2af0c:	sub	r2, fp, #44	; 0x2c
   2af10:	sub	r3, fp, #364	; 0x16c
   2af14:	mov	r1, r2
   2af18:	mov	r0, r3
   2af1c:	bl	4d5f0 <flatcc_json_printer_get_buffer@@Base>
   2af20:	str	r0, [fp, #-28]	; 0xffffffe4
   2af24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2af28:	cmp	r3, #0
   2af2c:	beq	2af48 <test_json@@Base+0x358>
   2af30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2af34:	ldr	r0, [fp, #-376]	; 0xfffffe88
   2af38:	bl	144f8 <strcmp@plt>
   2af3c:	mov	r3, r0
   2af40:	cmp	r3, #0
   2af44:	beq	2afcc <test_json@@Base+0x3dc>
   2af48:	ldr	r3, [pc, #252]	; 2b04c <test_json@@Base+0x45c>
   2af4c:	ldr	r3, [r4, r3]
   2af50:	ldr	r3, [r3]
   2af54:	ldr	r2, [fp, #12]
   2af58:	ldr	r1, [pc, #280]	; 2b078 <test_json@@Base+0x488>
   2af5c:	add	r1, pc, r1
   2af60:	mov	r0, r3
   2af64:	bl	1457c <fprintf@plt>
   2af68:	ldr	r3, [pc, #220]	; 2b04c <test_json@@Base+0x45c>
   2af6c:	ldr	r3, [r4, r3]
   2af70:	ldr	r3, [r3]
   2af74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2af78:	ldr	r1, [pc, #252]	; 2b07c <test_json@@Base+0x48c>
   2af7c:	add	r1, pc, r1
   2af80:	mov	r0, r3
   2af84:	bl	1457c <fprintf@plt>
   2af88:	ldr	r3, [pc, #188]	; 2b04c <test_json@@Base+0x45c>
   2af8c:	ldr	r3, [r4, r3]
   2af90:	ldr	r3, [r3]
   2af94:	mov	r2, #10
   2af98:	mov	r1, #1
   2af9c:	ldr	r0, [pc, #220]	; 2b080 <test_json@@Base+0x490>
   2afa0:	add	r0, pc, r0
   2afa4:	bl	14540 <fwrite@plt>
   2afa8:	ldr	r3, [pc, #156]	; 2b04c <test_json@@Base+0x45c>
   2afac:	ldr	r3, [r4, r3]
   2afb0:	ldr	r3, [r3]
   2afb4:	ldr	r2, [fp, #-376]	; 0xfffffe88
   2afb8:	ldr	r1, [pc, #196]	; 2b084 <test_json@@Base+0x494>
   2afbc:	add	r1, pc, r1
   2afc0:	mov	r0, r3
   2afc4:	bl	1457c <fprintf@plt>
   2afc8:	b	2aff8 <test_json@@Base+0x408>
   2afcc:	mov	r3, #0
   2afd0:	str	r3, [fp, #-16]
   2afd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2afd8:	bl	32fe8 <flatcc_builder_aligned_free@@Base>
   2afdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2afe0:	bl	2daf4 <flatcc_builder_clear@@Base>
   2afe4:	sub	r3, fp, #364	; 0x16c
   2afe8:	mov	r0, r3
   2afec:	bl	4d6b4 <flatcc_json_printer_clear@@Base>
   2aff0:	ldr	r3, [fp, #-16]
   2aff4:	b	2b030 <test_json@@Base+0x440>
   2aff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2affc:	cmp	r3, #0
   2b000:	beq	2b024 <test_json@@Base+0x434>
   2b004:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b008:	ldr	r3, [pc, #60]	; 2b04c <test_json@@Base+0x45c>
   2b00c:	ldr	r3, [r4, r3]
   2b010:	ldr	r3, [r3]
   2b014:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b018:	ldr	r0, [pc, #104]	; 2b088 <test_json@@Base+0x498>
   2b01c:	add	r0, pc, r0
   2b020:	bl	2a9d8 <_start@@Base+0x163e0>
   2b024:	mvn	r3, #0
   2b028:	str	r3, [fp, #-16]
   2b02c:	b	2afd4 <test_json@@Base+0x3e4>
   2b030:	mov	r0, r3
   2b034:	sub	sp, fp, #12
   2b038:	ldrd	r4, [sp]
   2b03c:	ldr	fp, [sp, #8]
   2b040:	add	sp, sp, #12
   2b044:	pop	{pc}		; (ldr pc, [sp], #4)
   2b048:	andeq	sl, r3, r0, ror #7
   2b04c:	andeq	r0, r0, r8, rrx
   2b050:	muleq	r2, r8, r7
   2b054:	muleq	r2, r4, r7
   2b058:	muleq	r2, r0, r7
   2b05c:	andeq	r3, r2, r4, ror #14
   2b060:	andeq	r3, r2, r0, asr #14
   2b064:	andeq	r3, r2, r4, asr r7
   2b068:	strdeq	r3, [r2], -r0
   2b06c:	strdeq	r3, [r2], -r0
   2b070:	andeq	r3, r2, ip, ror #12
   2b074:	andeq	r3, r2, r8, asr #13
   2b078:	andeq	r3, r2, r8, ror #12
   2b07c:	andeq	r3, r2, r0, asr r5
   2b080:	andeq	r3, r2, ip, asr r6
   2b084:	andeq	r3, r2, r0, lsl r5
   2b088:	andeq	r3, r2, ip, ror #11

0002b08c <edge_case_tests@@Base>:
   2b08c:	str	fp, [sp, #-8]!
   2b090:	str	lr, [sp, #4]
   2b094:	add	fp, sp, #4
   2b098:	sub	sp, sp, #24
   2b09c:	mov	r3, #0
   2b0a0:	str	r3, [fp, #-8]
   2b0a4:	ldr	r3, [pc, #640]	; 2b32c <edge_case_tests@@Base+0x2a0>
   2b0a8:	add	r3, pc, r3
   2b0ac:	str	r3, [fp, #-12]
   2b0b0:	mov	r3, #158	; 0x9e
   2b0b4:	str	r3, [sp, #8]
   2b0b8:	mov	r3, #0
   2b0bc:	str	r3, [sp, #4]
   2b0c0:	mov	r3, #0
   2b0c4:	str	r3, [sp]
   2b0c8:	mov	r3, #0
   2b0cc:	ldr	r2, [pc, #604]	; 2b330 <edge_case_tests@@Base+0x2a4>
   2b0d0:	add	r2, pc, r2
   2b0d4:	ldr	r1, [pc, #600]	; 2b334 <edge_case_tests@@Base+0x2a8>
   2b0d8:	add	r1, pc, r1
   2b0dc:	ldr	r0, [fp, #-12]
   2b0e0:	bl	2abf0 <test_json@@Base>
   2b0e4:	mov	r2, r0
   2b0e8:	ldr	r3, [fp, #-8]
   2b0ec:	orr	r3, r3, r2
   2b0f0:	str	r3, [fp, #-8]
   2b0f4:	mov	r3, #168	; 0xa8
   2b0f8:	str	r3, [sp, #8]
   2b0fc:	mov	r3, #0
   2b100:	str	r3, [sp, #4]
   2b104:	mov	r3, #2
   2b108:	str	r3, [sp]
   2b10c:	mov	r3, #0
   2b110:	ldr	r2, [pc, #544]	; 2b338 <edge_case_tests@@Base+0x2ac>
   2b114:	add	r2, pc, r2
   2b118:	ldr	r1, [pc, #540]	; 2b33c <edge_case_tests@@Base+0x2b0>
   2b11c:	add	r1, pc, r1
   2b120:	ldr	r0, [fp, #-12]
   2b124:	bl	2abf0 <test_json@@Base>
   2b128:	mov	r2, r0
   2b12c:	ldr	r3, [fp, #-8]
   2b130:	orr	r3, r3, r2
   2b134:	str	r3, [fp, #-8]
   2b138:	mov	r3, #172	; 0xac
   2b13c:	str	r3, [sp, #8]
   2b140:	mov	r3, #2
   2b144:	str	r3, [sp, #4]
   2b148:	mov	r3, #0
   2b14c:	str	r3, [sp]
   2b150:	mov	r3, #0
   2b154:	ldr	r2, [pc, #484]	; 2b340 <edge_case_tests@@Base+0x2b4>
   2b158:	add	r2, pc, r2
   2b15c:	ldr	r1, [pc, #480]	; 2b344 <edge_case_tests@@Base+0x2b8>
   2b160:	add	r1, pc, r1
   2b164:	ldr	r0, [fp, #-12]
   2b168:	bl	2abf0 <test_json@@Base>
   2b16c:	mov	r2, r0
   2b170:	ldr	r3, [fp, #-8]
   2b174:	orr	r3, r3, r2
   2b178:	str	r3, [fp, #-8]
   2b17c:	mov	r3, #176	; 0xb0
   2b180:	str	r3, [sp, #8]
   2b184:	mov	r3, #4
   2b188:	str	r3, [sp, #4]
   2b18c:	mov	r3, #2
   2b190:	str	r3, [sp]
   2b194:	mov	r3, #0
   2b198:	ldr	r2, [pc, #424]	; 2b348 <edge_case_tests@@Base+0x2bc>
   2b19c:	add	r2, pc, r2
   2b1a0:	ldr	r1, [pc, #420]	; 2b34c <edge_case_tests@@Base+0x2c0>
   2b1a4:	add	r1, pc, r1
   2b1a8:	ldr	r0, [fp, #-12]
   2b1ac:	bl	2abf0 <test_json@@Base>
   2b1b0:	mov	r2, r0
   2b1b4:	ldr	r3, [fp, #-8]
   2b1b8:	orr	r3, r3, r2
   2b1bc:	str	r3, [fp, #-8]
   2b1c0:	mov	r3, #180	; 0xb4
   2b1c4:	str	r3, [sp, #8]
   2b1c8:	mov	r3, #8
   2b1cc:	str	r3, [sp, #4]
   2b1d0:	mov	r3, #0
   2b1d4:	str	r3, [sp]
   2b1d8:	mov	r3, #0
   2b1dc:	ldr	r2, [pc, #364]	; 2b350 <edge_case_tests@@Base+0x2c4>
   2b1e0:	add	r2, pc, r2
   2b1e4:	ldr	r1, [pc, #360]	; 2b354 <edge_case_tests@@Base+0x2c8>
   2b1e8:	add	r1, pc, r1
   2b1ec:	ldr	r0, [fp, #-12]
   2b1f0:	bl	2abf0 <test_json@@Base>
   2b1f4:	mov	r2, r0
   2b1f8:	ldr	r3, [fp, #-8]
   2b1fc:	orr	r3, r3, r2
   2b200:	str	r3, [fp, #-8]
   2b204:	mov	r3, #195	; 0xc3
   2b208:	str	r3, [sp, #8]
   2b20c:	mov	r3, #0
   2b210:	str	r3, [sp, #4]
   2b214:	mov	r3, #2
   2b218:	str	r3, [sp]
   2b21c:	mov	r3, #0
   2b220:	ldr	r2, [pc, #304]	; 2b358 <edge_case_tests@@Base+0x2cc>
   2b224:	add	r2, pc, r2
   2b228:	ldr	r1, [pc, #300]	; 2b35c <edge_case_tests@@Base+0x2d0>
   2b22c:	add	r1, pc, r1
   2b230:	ldr	r0, [fp, #-12]
   2b234:	bl	2abf0 <test_json@@Base>
   2b238:	mov	r2, r0
   2b23c:	ldr	r3, [fp, #-8]
   2b240:	orr	r3, r3, r2
   2b244:	str	r3, [fp, #-8]
   2b248:	mov	r3, #199	; 0xc7
   2b24c:	str	r3, [sp, #8]
   2b250:	mov	r3, #0
   2b254:	str	r3, [sp, #4]
   2b258:	mov	r3, #1
   2b25c:	str	r3, [sp]
   2b260:	mov	r3, #0
   2b264:	ldr	r2, [pc, #244]	; 2b360 <edge_case_tests@@Base+0x2d4>
   2b268:	add	r2, pc, r2
   2b26c:	ldr	r1, [pc, #240]	; 2b364 <edge_case_tests@@Base+0x2d8>
   2b270:	add	r1, pc, r1
   2b274:	ldr	r0, [fp, #-12]
   2b278:	bl	2abf0 <test_json@@Base>
   2b27c:	mov	r2, r0
   2b280:	ldr	r3, [fp, #-8]
   2b284:	orr	r3, r3, r2
   2b288:	str	r3, [fp, #-8]
   2b28c:	mov	r3, #203	; 0xcb
   2b290:	str	r3, [sp, #8]
   2b294:	mov	r3, #1
   2b298:	str	r3, [sp, #4]
   2b29c:	mov	r3, #1
   2b2a0:	str	r3, [sp]
   2b2a4:	mov	r3, #0
   2b2a8:	ldr	r2, [pc, #184]	; 2b368 <edge_case_tests@@Base+0x2dc>
   2b2ac:	add	r2, pc, r2
   2b2b0:	ldr	r1, [pc, #180]	; 2b36c <edge_case_tests@@Base+0x2e0>
   2b2b4:	add	r1, pc, r1
   2b2b8:	ldr	r0, [fp, #-12]
   2b2bc:	bl	2abf0 <test_json@@Base>
   2b2c0:	mov	r2, r0
   2b2c4:	ldr	r3, [fp, #-8]
   2b2c8:	orr	r3, r3, r2
   2b2cc:	str	r3, [fp, #-8]
   2b2d0:	mov	r3, #209	; 0xd1
   2b2d4:	str	r3, [sp, #8]
   2b2d8:	mov	r3, #0
   2b2dc:	str	r3, [sp, #4]
   2b2e0:	mov	r3, #1
   2b2e4:	str	r3, [sp]
   2b2e8:	mov	r3, #0
   2b2ec:	ldr	r2, [pc, #124]	; 2b370 <edge_case_tests@@Base+0x2e4>
   2b2f0:	add	r2, pc, r2
   2b2f4:	ldr	r1, [pc, #120]	; 2b374 <edge_case_tests@@Base+0x2e8>
   2b2f8:	add	r1, pc, r1
   2b2fc:	ldr	r0, [fp, #-12]
   2b300:	bl	2abf0 <test_json@@Base>
   2b304:	mov	r2, r0
   2b308:	ldr	r3, [fp, #-8]
   2b30c:	orr	r3, r3, r2
   2b310:	str	r3, [fp, #-8]
   2b314:	ldr	r3, [fp, #-8]
   2b318:	mov	r0, r3
   2b31c:	sub	sp, fp, #4
   2b320:	ldr	fp, [sp]
   2b324:	add	sp, sp, #4
   2b328:	pop	{pc}		; (ldr pc, [sp], #4)
   2b32c:	andeq	r9, r3, r8, lsr lr
   2b330:	andeq	r3, r2, r8, asr #10
   2b334:	andeq	r3, r2, r0, ror #10
   2b338:	andeq	r3, r2, ip, asr r5
   2b33c:	andeq	r3, r2, r8, ror r5
   2b340:	andeq	r3, r2, r0, ror #10
   2b344:	andeq	r3, r2, r8, ror r5
   2b348:	andeq	r3, r2, r4, ror #10
   2b34c:	strdeq	r3, [r2], -r0
   2b350:	andeq	r3, r2, r4, lsr r5
   2b354:	andeq	r3, r2, r0, asr #12
   2b358:	andeq	r3, r2, ip, asr #8
   2b35c:	andeq	r3, r2, r0, lsr #12
   2b360:	andeq	r3, r2, ip, lsl #12
   2b364:	andeq	r3, r2, r0, lsr #12
   2b368:	andeq	r3, r2, r8, lsl r6
   2b36c:	ldrdeq	r3, [r2], -ip
   2b370:	andeq	r3, r2, r4, lsl #11
   2b374:	andeq	r3, r2, r4, ror #11

0002b378 <error_case_tests@@Base>:
   2b378:	str	fp, [sp, #-8]!
   2b37c:	str	lr, [sp, #4]
   2b380:	add	fp, sp, #4
   2b384:	sub	sp, sp, #24
   2b388:	mov	r3, #0
   2b38c:	str	r3, [fp, #-8]
   2b390:	ldr	r3, [pc, #796]	; 2b6b4 <error_case_tests@@Base+0x33c>
   2b394:	add	r3, pc, r3
   2b398:	str	r3, [fp, #-12]
   2b39c:	movw	r3, #285	; 0x11d
   2b3a0:	str	r3, [sp, #8]
   2b3a4:	mov	r3, #0
   2b3a8:	str	r3, [sp, #4]
   2b3ac:	mov	r3, #0
   2b3b0:	str	r3, [sp]
   2b3b4:	mov	r3, #13
   2b3b8:	mov	r2, #0
   2b3bc:	ldr	r1, [pc, #756]	; 2b6b8 <error_case_tests@@Base+0x340>
   2b3c0:	add	r1, pc, r1
   2b3c4:	ldr	r0, [fp, #-12]
   2b3c8:	bl	2abf0 <test_json@@Base>
   2b3cc:	mov	r2, r0
   2b3d0:	ldr	r3, [fp, #-8]
   2b3d4:	orr	r3, r3, r2
   2b3d8:	str	r3, [fp, #-8]
   2b3dc:	movw	r3, #287	; 0x11f
   2b3e0:	str	r3, [sp, #8]
   2b3e4:	mov	r3, #0
   2b3e8:	str	r3, [sp, #4]
   2b3ec:	mov	r3, #0
   2b3f0:	str	r3, [sp]
   2b3f4:	mov	r3, #13
   2b3f8:	mov	r2, #0
   2b3fc:	ldr	r1, [pc, #696]	; 2b6bc <error_case_tests@@Base+0x344>
   2b400:	add	r1, pc, r1
   2b404:	ldr	r0, [fp, #-12]
   2b408:	bl	2abf0 <test_json@@Base>
   2b40c:	mov	r2, r0
   2b410:	ldr	r3, [fp, #-8]
   2b414:	orr	r3, r3, r2
   2b418:	str	r3, [fp, #-8]
   2b41c:	movw	r3, #289	; 0x121
   2b420:	str	r3, [sp, #8]
   2b424:	mov	r3, #0
   2b428:	str	r3, [sp, #4]
   2b42c:	mov	r3, #0
   2b430:	str	r3, [sp]
   2b434:	mov	r3, #13
   2b438:	mov	r2, #0
   2b43c:	ldr	r1, [pc, #636]	; 2b6c0 <error_case_tests@@Base+0x348>
   2b440:	add	r1, pc, r1
   2b444:	ldr	r0, [fp, #-12]
   2b448:	bl	2abf0 <test_json@@Base>
   2b44c:	mov	r2, r0
   2b450:	ldr	r3, [fp, #-8]
   2b454:	orr	r3, r3, r2
   2b458:	str	r3, [fp, #-8]
   2b45c:	movw	r3, #291	; 0x123
   2b460:	str	r3, [sp, #8]
   2b464:	mov	r3, #0
   2b468:	str	r3, [sp, #4]
   2b46c:	mov	r3, #0
   2b470:	str	r3, [sp]
   2b474:	mov	r3, #13
   2b478:	mov	r2, #0
   2b47c:	ldr	r1, [pc, #576]	; 2b6c4 <error_case_tests@@Base+0x34c>
   2b480:	add	r1, pc, r1
   2b484:	ldr	r0, [fp, #-12]
   2b488:	bl	2abf0 <test_json@@Base>
   2b48c:	mov	r2, r0
   2b490:	ldr	r3, [fp, #-8]
   2b494:	orr	r3, r3, r2
   2b498:	str	r3, [fp, #-8]
   2b49c:	movw	r3, #293	; 0x125
   2b4a0:	str	r3, [sp, #8]
   2b4a4:	mov	r3, #0
   2b4a8:	str	r3, [sp, #4]
   2b4ac:	mov	r3, #0
   2b4b0:	str	r3, [sp]
   2b4b4:	mov	r3, #13
   2b4b8:	mov	r2, #0
   2b4bc:	ldr	r1, [pc, #516]	; 2b6c8 <error_case_tests@@Base+0x350>
   2b4c0:	add	r1, pc, r1
   2b4c4:	ldr	r0, [fp, #-12]
   2b4c8:	bl	2abf0 <test_json@@Base>
   2b4cc:	mov	r2, r0
   2b4d0:	ldr	r3, [fp, #-8]
   2b4d4:	orr	r3, r3, r2
   2b4d8:	str	r3, [fp, #-8]
   2b4dc:	mov	r3, #296	; 0x128
   2b4e0:	str	r3, [sp, #8]
   2b4e4:	mov	r3, #0
   2b4e8:	str	r3, [sp, #4]
   2b4ec:	mov	r3, #0
   2b4f0:	str	r3, [sp]
   2b4f4:	mov	r3, #13
   2b4f8:	mov	r2, #0
   2b4fc:	ldr	r1, [pc, #456]	; 2b6cc <error_case_tests@@Base+0x354>
   2b500:	add	r1, pc, r1
   2b504:	ldr	r0, [fp, #-12]
   2b508:	bl	2abf0 <test_json@@Base>
   2b50c:	mov	r2, r0
   2b510:	ldr	r3, [fp, #-8]
   2b514:	orr	r3, r3, r2
   2b518:	str	r3, [fp, #-8]
   2b51c:	movw	r3, #299	; 0x12b
   2b520:	str	r3, [sp, #8]
   2b524:	mov	r3, #0
   2b528:	str	r3, [sp, #4]
   2b52c:	mov	r3, #0
   2b530:	str	r3, [sp]
   2b534:	mov	r3, #13
   2b538:	mov	r2, #0
   2b53c:	ldr	r1, [pc, #396]	; 2b6d0 <error_case_tests@@Base+0x358>
   2b540:	add	r1, pc, r1
   2b544:	ldr	r0, [fp, #-12]
   2b548:	bl	2abf0 <test_json@@Base>
   2b54c:	mov	r2, r0
   2b550:	ldr	r3, [fp, #-8]
   2b554:	orr	r3, r3, r2
   2b558:	str	r3, [fp, #-8]
   2b55c:	movw	r3, #303	; 0x12f
   2b560:	str	r3, [sp, #8]
   2b564:	mov	r3, #0
   2b568:	str	r3, [sp, #4]
   2b56c:	mov	r3, #0
   2b570:	str	r3, [sp]
   2b574:	mov	r3, #13
   2b578:	mov	r2, #0
   2b57c:	ldr	r1, [pc, #336]	; 2b6d4 <error_case_tests@@Base+0x35c>
   2b580:	add	r1, pc, r1
   2b584:	ldr	r0, [fp, #-12]
   2b588:	bl	2abf0 <test_json@@Base>
   2b58c:	mov	r2, r0
   2b590:	ldr	r3, [fp, #-8]
   2b594:	orr	r3, r3, r2
   2b598:	str	r3, [fp, #-8]
   2b59c:	movw	r3, #307	; 0x133
   2b5a0:	str	r3, [sp, #8]
   2b5a4:	mov	r3, #0
   2b5a8:	str	r3, [sp, #4]
   2b5ac:	mov	r3, #0
   2b5b0:	str	r3, [sp]
   2b5b4:	mov	r3, #13
   2b5b8:	mov	r2, #0
   2b5bc:	ldr	r1, [pc, #276]	; 2b6d8 <error_case_tests@@Base+0x360>
   2b5c0:	add	r1, pc, r1
   2b5c4:	ldr	r0, [fp, #-12]
   2b5c8:	bl	2abf0 <test_json@@Base>
   2b5cc:	mov	r2, r0
   2b5d0:	ldr	r3, [fp, #-8]
   2b5d4:	orr	r3, r3, r2
   2b5d8:	str	r3, [fp, #-8]
   2b5dc:	movw	r3, #311	; 0x137
   2b5e0:	str	r3, [sp, #8]
   2b5e4:	mov	r3, #0
   2b5e8:	str	r3, [sp, #4]
   2b5ec:	mov	r3, #0
   2b5f0:	str	r3, [sp]
   2b5f4:	mov	r3, #5
   2b5f8:	mov	r2, #0
   2b5fc:	ldr	r1, [pc, #216]	; 2b6dc <error_case_tests@@Base+0x364>
   2b600:	add	r1, pc, r1
   2b604:	ldr	r0, [fp, #-12]
   2b608:	bl	2abf0 <test_json@@Base>
   2b60c:	mov	r2, r0
   2b610:	ldr	r3, [fp, #-8]
   2b614:	orr	r3, r3, r2
   2b618:	str	r3, [fp, #-8]
   2b61c:	movw	r3, #314	; 0x13a
   2b620:	str	r3, [sp, #8]
   2b624:	mov	r3, #0
   2b628:	str	r3, [sp, #4]
   2b62c:	mov	r3, #0
   2b630:	str	r3, [sp]
   2b634:	mov	r3, #5
   2b638:	mov	r2, #0
   2b63c:	ldr	r1, [pc, #156]	; 2b6e0 <error_case_tests@@Base+0x368>
   2b640:	add	r1, pc, r1
   2b644:	ldr	r0, [fp, #-12]
   2b648:	bl	2abf0 <test_json@@Base>
   2b64c:	mov	r2, r0
   2b650:	ldr	r3, [fp, #-8]
   2b654:	orr	r3, r3, r2
   2b658:	str	r3, [fp, #-8]
   2b65c:	movw	r3, #317	; 0x13d
   2b660:	str	r3, [sp, #8]
   2b664:	mov	r3, #0
   2b668:	str	r3, [sp, #4]
   2b66c:	mov	r3, #0
   2b670:	str	r3, [sp]
   2b674:	mov	r3, #5
   2b678:	mov	r2, #0
   2b67c:	ldr	r1, [pc, #96]	; 2b6e4 <error_case_tests@@Base+0x36c>
   2b680:	add	r1, pc, r1
   2b684:	ldr	r0, [fp, #-12]
   2b688:	bl	2abf0 <test_json@@Base>
   2b68c:	mov	r2, r0
   2b690:	ldr	r3, [fp, #-8]
   2b694:	orr	r3, r3, r2
   2b698:	str	r3, [fp, #-8]
   2b69c:	ldr	r3, [fp, #-8]
   2b6a0:	mov	r0, r3
   2b6a4:	sub	sp, fp, #4
   2b6a8:	ldr	fp, [sp]
   2b6ac:	add	sp, sp, #4
   2b6b0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b6b4:	andeq	r9, r3, ip, asr #22
   2b6b8:	muleq	r2, r0, r5
   2b6bc:	andeq	r3, r2, ip, ror #10
   2b6c0:	muleq	r2, r0, r5
   2b6c4:			; <UNDEFINED> instruction: 0x000235b0
   2b6c8:	andeq	r3, r2, r8, asr #11
   2b6cc:	andeq	r3, r2, r0, ror #11
   2b6d0:	andeq	r3, r2, r0, asr #12
   2b6d4:	muleq	r2, ip, r6
   2b6d8:	andeq	r3, r2, r4, lsr #14
   2b6dc:	andeq	r3, r2, ip, lsr #15
   2b6e0:	andeq	r3, r2, r4, lsl #15
   2b6e4:	andeq	r3, r2, ip, ror #14

0002b6e8 <base64_tests@@Base>:
   2b6e8:	str	fp, [sp, #-8]!
   2b6ec:	str	lr, [sp, #4]
   2b6f0:	add	fp, sp, #4
   2b6f4:	sub	sp, sp, #24
   2b6f8:	mov	r3, #0
   2b6fc:	str	r3, [fp, #-8]
   2b700:	ldr	r3, [pc, #564]	; 2b93c <base64_tests@@Base+0x254>
   2b704:	add	r3, pc, r3
   2b708:	str	r3, [fp, #-12]
   2b70c:	movw	r3, #369	; 0x171
   2b710:	str	r3, [sp, #8]
   2b714:	mov	r3, #0
   2b718:	str	r3, [sp, #4]
   2b71c:	mov	r3, #0
   2b720:	str	r3, [sp]
   2b724:	mov	r3, #0
   2b728:	ldr	r2, [pc, #528]	; 2b940 <base64_tests@@Base+0x258>
   2b72c:	add	r2, pc, r2
   2b730:	ldr	r1, [pc, #524]	; 2b944 <base64_tests@@Base+0x25c>
   2b734:	add	r1, pc, r1
   2b738:	ldr	r0, [fp, #-12]
   2b73c:	bl	2abf0 <test_json@@Base>
   2b740:	mov	r2, r0
   2b744:	ldr	r3, [fp, #-8]
   2b748:	orr	r3, r3, r2
   2b74c:	str	r3, [fp, #-8]
   2b750:	mov	r3, #372	; 0x174
   2b754:	str	r3, [sp, #8]
   2b758:	mov	r3, #0
   2b75c:	str	r3, [sp, #4]
   2b760:	mov	r3, #0
   2b764:	str	r3, [sp]
   2b768:	mov	r3, #0
   2b76c:	ldr	r2, [pc, #468]	; 2b948 <base64_tests@@Base+0x260>
   2b770:	add	r2, pc, r2
   2b774:	ldr	r1, [pc, #464]	; 2b94c <base64_tests@@Base+0x264>
   2b778:	add	r1, pc, r1
   2b77c:	ldr	r0, [fp, #-12]
   2b780:	bl	2abf0 <test_json@@Base>
   2b784:	mov	r2, r0
   2b788:	ldr	r3, [fp, #-8]
   2b78c:	orr	r3, r3, r2
   2b790:	str	r3, [fp, #-8]
   2b794:	mov	r3, #376	; 0x178
   2b798:	str	r3, [sp, #8]
   2b79c:	mov	r3, #0
   2b7a0:	str	r3, [sp, #4]
   2b7a4:	mov	r3, #0
   2b7a8:	str	r3, [sp]
   2b7ac:	mov	r3, #0
   2b7b0:	ldr	r2, [pc, #408]	; 2b950 <base64_tests@@Base+0x268>
   2b7b4:	add	r2, pc, r2
   2b7b8:	ldr	r1, [pc, #404]	; 2b954 <base64_tests@@Base+0x26c>
   2b7bc:	add	r1, pc, r1
   2b7c0:	ldr	r0, [fp, #-12]
   2b7c4:	bl	2abf0 <test_json@@Base>
   2b7c8:	mov	r2, r0
   2b7cc:	ldr	r3, [fp, #-8]
   2b7d0:	orr	r3, r3, r2
   2b7d4:	str	r3, [fp, #-8]
   2b7d8:	movw	r3, #379	; 0x17b
   2b7dc:	str	r3, [sp, #8]
   2b7e0:	mov	r3, #0
   2b7e4:	str	r3, [sp, #4]
   2b7e8:	mov	r3, #0
   2b7ec:	str	r3, [sp]
   2b7f0:	mov	r3, #0
   2b7f4:	ldr	r2, [pc, #348]	; 2b958 <base64_tests@@Base+0x270>
   2b7f8:	add	r2, pc, r2
   2b7fc:	ldr	r1, [pc, #344]	; 2b95c <base64_tests@@Base+0x274>
   2b800:	add	r1, pc, r1
   2b804:	ldr	r0, [fp, #-12]
   2b808:	bl	2abf0 <test_json@@Base>
   2b80c:	mov	r2, r0
   2b810:	ldr	r3, [fp, #-8]
   2b814:	orr	r3, r3, r2
   2b818:	str	r3, [fp, #-8]
   2b81c:	movw	r3, #382	; 0x17e
   2b820:	str	r3, [sp, #8]
   2b824:	mov	r3, #0
   2b828:	str	r3, [sp, #4]
   2b82c:	mov	r3, #0
   2b830:	str	r3, [sp]
   2b834:	mov	r3, #0
   2b838:	ldr	r2, [pc, #288]	; 2b960 <base64_tests@@Base+0x278>
   2b83c:	add	r2, pc, r2
   2b840:	ldr	r1, [pc, #284]	; 2b964 <base64_tests@@Base+0x27c>
   2b844:	add	r1, pc, r1
   2b848:	ldr	r0, [fp, #-12]
   2b84c:	bl	2abf0 <test_json@@Base>
   2b850:	mov	r2, r0
   2b854:	ldr	r3, [fp, #-8]
   2b858:	orr	r3, r3, r2
   2b85c:	str	r3, [fp, #-8]
   2b860:	movw	r3, #385	; 0x181
   2b864:	str	r3, [sp, #8]
   2b868:	mov	r3, #0
   2b86c:	str	r3, [sp, #4]
   2b870:	mov	r3, #0
   2b874:	str	r3, [sp]
   2b878:	mov	r3, #0
   2b87c:	ldr	r2, [pc, #228]	; 2b968 <base64_tests@@Base+0x280>
   2b880:	add	r2, pc, r2
   2b884:	ldr	r1, [pc, #224]	; 2b96c <base64_tests@@Base+0x284>
   2b888:	add	r1, pc, r1
   2b88c:	ldr	r0, [fp, #-12]
   2b890:	bl	2abf0 <test_json@@Base>
   2b894:	mov	r2, r0
   2b898:	ldr	r3, [fp, #-8]
   2b89c:	orr	r3, r3, r2
   2b8a0:	str	r3, [fp, #-8]
   2b8a4:	mov	r3, #388	; 0x184
   2b8a8:	str	r3, [sp, #8]
   2b8ac:	mov	r3, #0
   2b8b0:	str	r3, [sp, #4]
   2b8b4:	mov	r3, #0
   2b8b8:	str	r3, [sp]
   2b8bc:	mov	r3, #31
   2b8c0:	mov	r2, #0
   2b8c4:	ldr	r1, [pc, #164]	; 2b970 <base64_tests@@Base+0x288>
   2b8c8:	add	r1, pc, r1
   2b8cc:	ldr	r0, [fp, #-12]
   2b8d0:	bl	2abf0 <test_json@@Base>
   2b8d4:	mov	r2, r0
   2b8d8:	ldr	r3, [fp, #-8]
   2b8dc:	orr	r3, r3, r2
   2b8e0:	str	r3, [fp, #-8]
   2b8e4:	movw	r3, #391	; 0x187
   2b8e8:	str	r3, [sp, #8]
   2b8ec:	mov	r3, #0
   2b8f0:	str	r3, [sp, #4]
   2b8f4:	mov	r3, #0
   2b8f8:	str	r3, [sp]
   2b8fc:	mov	r3, #32
   2b900:	mov	r2, #0
   2b904:	ldr	r1, [pc, #104]	; 2b974 <base64_tests@@Base+0x28c>
   2b908:	add	r1, pc, r1
   2b90c:	ldr	r0, [fp, #-12]
   2b910:	bl	2abf0 <test_json@@Base>
   2b914:	mov	r2, r0
   2b918:	ldr	r3, [fp, #-8]
   2b91c:	orr	r3, r3, r2
   2b920:	str	r3, [fp, #-8]
   2b924:	ldr	r3, [fp, #-8]
   2b928:	mov	r0, r3
   2b92c:	sub	sp, fp, #4
   2b930:	ldr	fp, [sp]
   2b934:	add	sp, sp, #4
   2b938:	pop	{pc}		; (ldr pc, [sp], #4)
   2b93c:	ldrdeq	r9, [r3], -ip
   2b940:	ldrdeq	r2, [r2], -r4
   2b944:	strdeq	r3, [r2], -r0
   2b948:	andeq	r3, r2, ip, asr #13
   2b94c:	andeq	r3, r2, r8, ror #13
   2b950:	ldrdeq	r3, [r2], -r4
   2b954:	andeq	r3, r2, r0, lsl #15
   2b958:	andeq	r3, r2, r0, lsl #16
   2b95c:			; <UNDEFINED> instruction: 0x000238b0
   2b960:	andeq	r3, r2, ip, asr #12
   2b964:	andeq	r3, r2, r8, lsr #18
   2b968:	andeq	r3, r2, r8, ror r7
   2b96c:	muleq	r2, ip, r9
   2b970:	andeq	r3, r2, r8, lsl sl
   2b974:	muleq	r2, r4, sl

0002b978 <mixed_type_union_tests@@Base>:
   2b978:	str	fp, [sp, #-8]!
   2b97c:	str	lr, [sp, #4]
   2b980:	add	fp, sp, #4
   2b984:	sub	sp, sp, #24
   2b988:	mov	r3, #0
   2b98c:	str	r3, [fp, #-8]
   2b990:	ldr	r3, [pc, #504]	; 2bb90 <mixed_type_union_tests@@Base+0x218>
   2b994:	add	r3, pc, r3
   2b998:	str	r3, [fp, #-12]
   2b99c:	mov	r3, #432	; 0x1b0
   2b9a0:	str	r3, [sp, #8]
   2b9a4:	mov	r3, #0
   2b9a8:	str	r3, [sp, #4]
   2b9ac:	mov	r3, #0
   2b9b0:	str	r3, [sp]
   2b9b4:	mov	r3, #0
   2b9b8:	ldr	r2, [pc, #468]	; 2bb94 <mixed_type_union_tests@@Base+0x21c>
   2b9bc:	add	r2, pc, r2
   2b9c0:	ldr	r1, [pc, #464]	; 2bb98 <mixed_type_union_tests@@Base+0x220>
   2b9c4:	add	r1, pc, r1
   2b9c8:	ldr	r0, [fp, #-12]
   2b9cc:	bl	2abf0 <test_json@@Base>
   2b9d0:	mov	r2, r0
   2b9d4:	ldr	r3, [fp, #-8]
   2b9d8:	orr	r3, r3, r2
   2b9dc:	str	r3, [fp, #-8]
   2b9e0:	movw	r3, #437	; 0x1b5
   2b9e4:	str	r3, [sp, #8]
   2b9e8:	mov	r3, #0
   2b9ec:	str	r3, [sp, #4]
   2b9f0:	mov	r3, #0
   2b9f4:	str	r3, [sp]
   2b9f8:	mov	r3, #0
   2b9fc:	ldr	r2, [pc, #408]	; 2bb9c <mixed_type_union_tests@@Base+0x224>
   2ba00:	add	r2, pc, r2
   2ba04:	ldr	r1, [pc, #404]	; 2bba0 <mixed_type_union_tests@@Base+0x228>
   2ba08:	add	r1, pc, r1
   2ba0c:	ldr	r0, [fp, #-12]
   2ba10:	bl	2abf0 <test_json@@Base>
   2ba14:	mov	r2, r0
   2ba18:	ldr	r3, [fp, #-8]
   2ba1c:	orr	r3, r3, r2
   2ba20:	str	r3, [fp, #-8]
   2ba24:	movw	r3, #442	; 0x1ba
   2ba28:	str	r3, [sp, #8]
   2ba2c:	mov	r3, #0
   2ba30:	str	r3, [sp, #4]
   2ba34:	mov	r3, #0
   2ba38:	str	r3, [sp]
   2ba3c:	mov	r3, #0
   2ba40:	ldr	r2, [pc, #348]	; 2bba4 <mixed_type_union_tests@@Base+0x22c>
   2ba44:	add	r2, pc, r2
   2ba48:	ldr	r1, [pc, #344]	; 2bba8 <mixed_type_union_tests@@Base+0x230>
   2ba4c:	add	r1, pc, r1
   2ba50:	ldr	r0, [fp, #-12]
   2ba54:	bl	2abf0 <test_json@@Base>
   2ba58:	mov	r2, r0
   2ba5c:	ldr	r3, [fp, #-8]
   2ba60:	orr	r3, r3, r2
   2ba64:	str	r3, [fp, #-8]
   2ba68:	movw	r3, #449	; 0x1c1
   2ba6c:	str	r3, [sp, #8]
   2ba70:	mov	r3, #0
   2ba74:	str	r3, [sp, #4]
   2ba78:	mov	r3, #0
   2ba7c:	str	r3, [sp]
   2ba80:	mov	r3, #0
   2ba84:	ldr	r2, [pc, #288]	; 2bbac <mixed_type_union_tests@@Base+0x234>
   2ba88:	add	r2, pc, r2
   2ba8c:	ldr	r1, [pc, #284]	; 2bbb0 <mixed_type_union_tests@@Base+0x238>
   2ba90:	add	r1, pc, r1
   2ba94:	ldr	r0, [fp, #-12]
   2ba98:	bl	2abf0 <test_json@@Base>
   2ba9c:	mov	r2, r0
   2baa0:	ldr	r3, [fp, #-8]
   2baa4:	orr	r3, r3, r2
   2baa8:	str	r3, [fp, #-8]
   2baac:	movw	r3, #458	; 0x1ca
   2bab0:	str	r3, [sp, #8]
   2bab4:	mov	r3, #0
   2bab8:	str	r3, [sp, #4]
   2babc:	mov	r3, #0
   2bac0:	str	r3, [sp]
   2bac4:	mov	r3, #0
   2bac8:	ldr	r2, [pc, #228]	; 2bbb4 <mixed_type_union_tests@@Base+0x23c>
   2bacc:	add	r2, pc, r2
   2bad0:	ldr	r1, [pc, #224]	; 2bbb8 <mixed_type_union_tests@@Base+0x240>
   2bad4:	add	r1, pc, r1
   2bad8:	ldr	r0, [fp, #-12]
   2badc:	bl	2abf0 <test_json@@Base>
   2bae0:	mov	r2, r0
   2bae4:	ldr	r3, [fp, #-8]
   2bae8:	orr	r3, r3, r2
   2baec:	str	r3, [fp, #-8]
   2baf0:	movw	r3, #469	; 0x1d5
   2baf4:	str	r3, [sp, #8]
   2baf8:	mov	r3, #0
   2bafc:	str	r3, [sp, #4]
   2bb00:	mov	r3, #0
   2bb04:	str	r3, [sp]
   2bb08:	mov	r3, #0
   2bb0c:	ldr	r2, [pc, #168]	; 2bbbc <mixed_type_union_tests@@Base+0x244>
   2bb10:	add	r2, pc, r2
   2bb14:	ldr	r1, [pc, #164]	; 2bbc0 <mixed_type_union_tests@@Base+0x248>
   2bb18:	add	r1, pc, r1
   2bb1c:	ldr	r0, [fp, #-12]
   2bb20:	bl	2abf0 <test_json@@Base>
   2bb24:	mov	r2, r0
   2bb28:	ldr	r3, [fp, #-8]
   2bb2c:	orr	r3, r3, r2
   2bb30:	str	r3, [fp, #-8]
   2bb34:	movw	r3, #474	; 0x1da
   2bb38:	str	r3, [sp, #8]
   2bb3c:	mov	r3, #0
   2bb40:	str	r3, [sp, #4]
   2bb44:	mov	r3, #0
   2bb48:	str	r3, [sp]
   2bb4c:	mov	r3, #0
   2bb50:	ldr	r2, [pc, #108]	; 2bbc4 <mixed_type_union_tests@@Base+0x24c>
   2bb54:	add	r2, pc, r2
   2bb58:	ldr	r1, [pc, #104]	; 2bbc8 <mixed_type_union_tests@@Base+0x250>
   2bb5c:	add	r1, pc, r1
   2bb60:	ldr	r0, [fp, #-12]
   2bb64:	bl	2abf0 <test_json@@Base>
   2bb68:	mov	r2, r0
   2bb6c:	ldr	r3, [fp, #-8]
   2bb70:	orr	r3, r3, r2
   2bb74:	str	r3, [fp, #-8]
   2bb78:	ldr	r3, [fp, #-8]
   2bb7c:	mov	r0, r3
   2bb80:	sub	sp, fp, #4
   2bb84:	ldr	fp, [sp]
   2bb88:	add	sp, sp, #4
   2bb8c:	pop	{pc}		; (ldr pc, [sp], #4)
   2bb90:	andeq	r9, r3, ip, ror #10
   2bb94:	muleq	r2, ip, sl
   2bb98:	ldrdeq	r3, [r2], -ip
   2bb9c:	strdeq	r3, [r2], -r0
   2bba0:	andeq	r3, r2, r0, ror #22
   2bba4:	andeq	r3, r2, ip, lsr #21
   2bba8:	andeq	r3, r2, r0, lsr #23
   2bbac:	strdeq	r3, [r2], -ip
   2bbb0:			; <UNDEFINED> instruction: 0x00023cb0
   2bbb4:	andeq	r3, r2, r4, asr sp
   2bbb8:	andeq	r3, r2, ip, lsr #28
   2bbbc:	strdeq	r3, [r2], -r8
   2bbc0:	andeq	r4, r2, r8, lsr r0
   2bbc4:	muleq	r2, ip, r9
   2bbc8:	andeq	r4, r2, r8, ror r1

0002bbcc <union_vector_tests@@Base>:
   2bbcc:	str	fp, [sp, #-8]!
   2bbd0:	str	lr, [sp, #4]
   2bbd4:	add	fp, sp, #4
   2bbd8:	sub	sp, sp, #24
   2bbdc:	mov	r3, #0
   2bbe0:	str	r3, [fp, #-8]
   2bbe4:	ldr	r3, [pc, #436]	; 2bda0 <union_vector_tests@@Base+0x1d4>
   2bbe8:	add	r3, pc, r3
   2bbec:	str	r3, [fp, #-12]
   2bbf0:	movw	r3, #485	; 0x1e5
   2bbf4:	str	r3, [sp, #8]
   2bbf8:	mov	r3, #0
   2bbfc:	str	r3, [sp, #4]
   2bc00:	mov	r3, #0
   2bc04:	str	r3, [sp]
   2bc08:	mov	r3, #0
   2bc0c:	ldr	r2, [pc, #400]	; 2bda4 <union_vector_tests@@Base+0x1d8>
   2bc10:	add	r2, pc, r2
   2bc14:	ldr	r1, [pc, #396]	; 2bda8 <union_vector_tests@@Base+0x1dc>
   2bc18:	add	r1, pc, r1
   2bc1c:	ldr	r0, [fp, #-12]
   2bc20:	bl	2abf0 <test_json@@Base>
   2bc24:	mov	r2, r0
   2bc28:	ldr	r3, [fp, #-8]
   2bc2c:	orr	r3, r3, r2
   2bc30:	str	r3, [fp, #-8]
   2bc34:	mov	r3, #488	; 0x1e8
   2bc38:	str	r3, [sp, #8]
   2bc3c:	mov	r3, #0
   2bc40:	str	r3, [sp, #4]
   2bc44:	mov	r3, #0
   2bc48:	str	r3, [sp]
   2bc4c:	mov	r3, #0
   2bc50:	ldr	r2, [pc, #340]	; 2bdac <union_vector_tests@@Base+0x1e0>
   2bc54:	add	r2, pc, r2
   2bc58:	ldr	r1, [pc, #336]	; 2bdb0 <union_vector_tests@@Base+0x1e4>
   2bc5c:	add	r1, pc, r1
   2bc60:	ldr	r0, [fp, #-12]
   2bc64:	bl	2abf0 <test_json@@Base>
   2bc68:	mov	r2, r0
   2bc6c:	ldr	r3, [fp, #-8]
   2bc70:	orr	r3, r3, r2
   2bc74:	str	r3, [fp, #-8]
   2bc78:	movw	r3, #491	; 0x1eb
   2bc7c:	str	r3, [sp, #8]
   2bc80:	mov	r3, #0
   2bc84:	str	r3, [sp, #4]
   2bc88:	mov	r3, #0
   2bc8c:	str	r3, [sp]
   2bc90:	mov	r3, #0
   2bc94:	ldr	r2, [pc, #280]	; 2bdb4 <union_vector_tests@@Base+0x1e8>
   2bc98:	add	r2, pc, r2
   2bc9c:	ldr	r1, [pc, #276]	; 2bdb8 <union_vector_tests@@Base+0x1ec>
   2bca0:	add	r1, pc, r1
   2bca4:	ldr	r0, [fp, #-12]
   2bca8:	bl	2abf0 <test_json@@Base>
   2bcac:	mov	r2, r0
   2bcb0:	ldr	r3, [fp, #-8]
   2bcb4:	orr	r3, r3, r2
   2bcb8:	str	r3, [fp, #-8]
   2bcbc:	movw	r3, #494	; 0x1ee
   2bcc0:	str	r3, [sp, #8]
   2bcc4:	mov	r3, #0
   2bcc8:	str	r3, [sp, #4]
   2bccc:	mov	r3, #0
   2bcd0:	str	r3, [sp]
   2bcd4:	mov	r3, #0
   2bcd8:	ldr	r2, [pc, #220]	; 2bdbc <union_vector_tests@@Base+0x1f0>
   2bcdc:	add	r2, pc, r2
   2bce0:	ldr	r1, [pc, #216]	; 2bdc0 <union_vector_tests@@Base+0x1f4>
   2bce4:	add	r1, pc, r1
   2bce8:	ldr	r0, [fp, #-12]
   2bcec:	bl	2abf0 <test_json@@Base>
   2bcf0:	mov	r2, r0
   2bcf4:	ldr	r3, [fp, #-8]
   2bcf8:	orr	r3, r3, r2
   2bcfc:	str	r3, [fp, #-8]
   2bd00:	movw	r3, #497	; 0x1f1
   2bd04:	str	r3, [sp, #8]
   2bd08:	mov	r3, #0
   2bd0c:	str	r3, [sp, #4]
   2bd10:	mov	r3, #0
   2bd14:	str	r3, [sp]
   2bd18:	mov	r3, #0
   2bd1c:	ldr	r2, [pc, #160]	; 2bdc4 <union_vector_tests@@Base+0x1f8>
   2bd20:	add	r2, pc, r2
   2bd24:	ldr	r1, [pc, #156]	; 2bdc8 <union_vector_tests@@Base+0x1fc>
   2bd28:	add	r1, pc, r1
   2bd2c:	ldr	r0, [fp, #-12]
   2bd30:	bl	2abf0 <test_json@@Base>
   2bd34:	mov	r2, r0
   2bd38:	ldr	r3, [fp, #-8]
   2bd3c:	orr	r3, r3, r2
   2bd40:	str	r3, [fp, #-8]
   2bd44:	mov	r3, #500	; 0x1f4
   2bd48:	str	r3, [sp, #8]
   2bd4c:	mov	r3, #0
   2bd50:	str	r3, [sp, #4]
   2bd54:	mov	r3, #0
   2bd58:	str	r3, [sp]
   2bd5c:	mov	r3, #0
   2bd60:	ldr	r2, [pc, #100]	; 2bdcc <union_vector_tests@@Base+0x200>
   2bd64:	add	r2, pc, r2
   2bd68:	ldr	r1, [pc, #96]	; 2bdd0 <union_vector_tests@@Base+0x204>
   2bd6c:	add	r1, pc, r1
   2bd70:	ldr	r0, [fp, #-12]
   2bd74:	bl	2abf0 <test_json@@Base>
   2bd78:	mov	r2, r0
   2bd7c:	ldr	r3, [fp, #-8]
   2bd80:	orr	r3, r3, r2
   2bd84:	str	r3, [fp, #-8]
   2bd88:	ldr	r3, [fp, #-8]
   2bd8c:	mov	r0, r3
   2bd90:	sub	sp, fp, #4
   2bd94:	ldr	fp, [sp]
   2bd98:	add	sp, sp, #4
   2bd9c:	pop	{pc}		; (ldr pc, [sp], #4)
   2bda0:	andeq	r9, r3, r8, lsl #6
   2bda4:	andeq	r4, r2, r4, asr r1
   2bda8:	andeq	r4, r2, r4, lsl #3
   2bdac:	andeq	r4, r2, r8, lsl #3
   2bdb0:	andeq	r4, r2, ip, lsr #3
   2bdb4:	andeq	r4, r2, r4, lsr #3
   2bdb8:	andeq	r4, r2, r0, ror #3
   2bdbc:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   2bdc0:	andeq	r4, r2, r8, asr r2
   2bdc4:	andeq	r4, r2, r4, asr #32
   2bdc8:	muleq	r2, r4, r2
   2bdcc:	muleq	r2, r8, r2
   2bdd0:	andeq	r4, r2, ip, ror #5

0002bdd4 <main@@Base>:
   2bdd4:	str	fp, [sp, #-8]!
   2bdd8:	str	lr, [sp, #4]
   2bddc:	add	fp, sp, #4
   2bde0:	sub	sp, sp, #24
   2bde4:	mov	r3, #0
   2bde8:	str	r3, [fp, #-8]
   2bdec:	ldr	r3, [pc, #2800]	; 2c8e4 <main@@Base+0xb10>
   2bdf0:	add	r3, pc, r3
   2bdf4:	str	r3, [fp, #-12]
   2bdf8:	bl	2b08c <edge_case_tests@@Base>
   2bdfc:	mov	r2, r0
   2be00:	ldr	r3, [fp, #-8]
   2be04:	orr	r3, r3, r2
   2be08:	str	r3, [fp, #-8]
   2be0c:	bl	2b378 <error_case_tests@@Base>
   2be10:	mov	r2, r0
   2be14:	ldr	r3, [fp, #-8]
   2be18:	orr	r3, r3, r2
   2be1c:	str	r3, [fp, #-8]
   2be20:	bl	2bbcc <union_vector_tests@@Base>
   2be24:	mov	r2, r0
   2be28:	ldr	r3, [fp, #-8]
   2be2c:	orr	r3, r3, r2
   2be30:	str	r3, [fp, #-8]
   2be34:	bl	2b6e8 <base64_tests@@Base>
   2be38:	mov	r2, r0
   2be3c:	ldr	r3, [fp, #-8]
   2be40:	orr	r3, r3, r2
   2be44:	str	r3, [fp, #-8]
   2be48:	bl	2b978 <mixed_type_union_tests@@Base>
   2be4c:	mov	r2, r0
   2be50:	ldr	r3, [fp, #-8]
   2be54:	orr	r3, r3, r2
   2be58:	str	r3, [fp, #-8]
   2be5c:	movw	r3, #525	; 0x20d
   2be60:	str	r3, [sp, #8]
   2be64:	mov	r3, #0
   2be68:	str	r3, [sp, #4]
   2be6c:	mov	r3, #0
   2be70:	str	r3, [sp]
   2be74:	mov	r3, #0
   2be78:	ldr	r2, [pc, #2664]	; 2c8e8 <main@@Base+0xb14>
   2be7c:	add	r2, pc, r2
   2be80:	ldr	r1, [pc, #2660]	; 2c8ec <main@@Base+0xb18>
   2be84:	add	r1, pc, r1
   2be88:	ldr	r0, [fp, #-12]
   2be8c:	bl	2abf0 <test_json@@Base>
   2be90:	mov	r2, r0
   2be94:	ldr	r3, [fp, #-8]
   2be98:	orr	r3, r3, r2
   2be9c:	str	r3, [fp, #-8]
   2bea0:	mov	r3, #528	; 0x210
   2bea4:	str	r3, [sp, #8]
   2bea8:	mov	r3, #0
   2beac:	str	r3, [sp, #4]
   2beb0:	mov	r3, #0
   2beb4:	str	r3, [sp]
   2beb8:	mov	r3, #0
   2bebc:	ldr	r2, [pc, #2604]	; 2c8f0 <main@@Base+0xb1c>
   2bec0:	add	r2, pc, r2
   2bec4:	ldr	r1, [pc, #2600]	; 2c8f4 <main@@Base+0xb20>
   2bec8:	add	r1, pc, r1
   2becc:	ldr	r0, [fp, #-12]
   2bed0:	bl	2abf0 <test_json@@Base>
   2bed4:	mov	r2, r0
   2bed8:	ldr	r3, [fp, #-8]
   2bedc:	orr	r3, r3, r2
   2bee0:	str	r3, [fp, #-8]
   2bee4:	movw	r3, #531	; 0x213
   2bee8:	str	r3, [sp, #8]
   2beec:	mov	r3, #0
   2bef0:	str	r3, [sp, #4]
   2bef4:	mov	r3, #0
   2bef8:	str	r3, [sp]
   2befc:	mov	r3, #0
   2bf00:	ldr	r2, [pc, #2544]	; 2c8f8 <main@@Base+0xb24>
   2bf04:	add	r2, pc, r2
   2bf08:	ldr	r1, [pc, #2540]	; 2c8fc <main@@Base+0xb28>
   2bf0c:	add	r1, pc, r1
   2bf10:	ldr	r0, [fp, #-12]
   2bf14:	bl	2abf0 <test_json@@Base>
   2bf18:	mov	r2, r0
   2bf1c:	ldr	r3, [fp, #-8]
   2bf20:	orr	r3, r3, r2
   2bf24:	str	r3, [fp, #-8]
   2bf28:	movw	r3, #534	; 0x216
   2bf2c:	str	r3, [sp, #8]
   2bf30:	mov	r3, #0
   2bf34:	str	r3, [sp, #4]
   2bf38:	mov	r3, #0
   2bf3c:	str	r3, [sp]
   2bf40:	mov	r3, #0
   2bf44:	ldr	r2, [pc, #2484]	; 2c900 <main@@Base+0xb2c>
   2bf48:	add	r2, pc, r2
   2bf4c:	ldr	r1, [pc, #2480]	; 2c904 <main@@Base+0xb30>
   2bf50:	add	r1, pc, r1
   2bf54:	ldr	r0, [fp, #-12]
   2bf58:	bl	2abf0 <test_json@@Base>
   2bf5c:	mov	r2, r0
   2bf60:	ldr	r3, [fp, #-8]
   2bf64:	orr	r3, r3, r2
   2bf68:	str	r3, [fp, #-8]
   2bf6c:	movw	r3, #537	; 0x219
   2bf70:	str	r3, [sp, #8]
   2bf74:	mov	r3, #0
   2bf78:	str	r3, [sp, #4]
   2bf7c:	mov	r3, #0
   2bf80:	str	r3, [sp]
   2bf84:	mov	r3, #0
   2bf88:	ldr	r2, [pc, #2424]	; 2c908 <main@@Base+0xb34>
   2bf8c:	add	r2, pc, r2
   2bf90:	ldr	r1, [pc, #2420]	; 2c90c <main@@Base+0xb38>
   2bf94:	add	r1, pc, r1
   2bf98:	ldr	r0, [fp, #-12]
   2bf9c:	bl	2abf0 <test_json@@Base>
   2bfa0:	mov	r2, r0
   2bfa4:	ldr	r3, [fp, #-8]
   2bfa8:	orr	r3, r3, r2
   2bfac:	str	r3, [fp, #-8]
   2bfb0:	mov	r3, #540	; 0x21c
   2bfb4:	str	r3, [sp, #8]
   2bfb8:	mov	r3, #0
   2bfbc:	str	r3, [sp, #4]
   2bfc0:	mov	r3, #0
   2bfc4:	str	r3, [sp]
   2bfc8:	mov	r3, #0
   2bfcc:	ldr	r2, [pc, #2364]	; 2c910 <main@@Base+0xb3c>
   2bfd0:	add	r2, pc, r2
   2bfd4:	ldr	r1, [pc, #2360]	; 2c914 <main@@Base+0xb40>
   2bfd8:	add	r1, pc, r1
   2bfdc:	ldr	r0, [fp, #-12]
   2bfe0:	bl	2abf0 <test_json@@Base>
   2bfe4:	mov	r2, r0
   2bfe8:	ldr	r3, [fp, #-8]
   2bfec:	orr	r3, r3, r2
   2bff0:	str	r3, [fp, #-8]
   2bff4:	movw	r3, #543	; 0x21f
   2bff8:	str	r3, [sp, #8]
   2bffc:	mov	r3, #0
   2c000:	str	r3, [sp, #4]
   2c004:	mov	r3, #0
   2c008:	str	r3, [sp]
   2c00c:	mov	r3, #0
   2c010:	ldr	r2, [pc, #2304]	; 2c918 <main@@Base+0xb44>
   2c014:	add	r2, pc, r2
   2c018:	ldr	r1, [pc, #2300]	; 2c91c <main@@Base+0xb48>
   2c01c:	add	r1, pc, r1
   2c020:	ldr	r0, [fp, #-12]
   2c024:	bl	2abf0 <test_json@@Base>
   2c028:	mov	r2, r0
   2c02c:	ldr	r3, [fp, #-8]
   2c030:	orr	r3, r3, r2
   2c034:	str	r3, [fp, #-8]
   2c038:	movw	r3, #547	; 0x223
   2c03c:	str	r3, [sp, #8]
   2c040:	mov	r3, #0
   2c044:	str	r3, [sp, #4]
   2c048:	mov	r3, #0
   2c04c:	str	r3, [sp]
   2c050:	mov	r3, #0
   2c054:	ldr	r2, [pc, #2244]	; 2c920 <main@@Base+0xb4c>
   2c058:	add	r2, pc, r2
   2c05c:	ldr	r1, [pc, #2240]	; 2c924 <main@@Base+0xb50>
   2c060:	add	r1, pc, r1
   2c064:	ldr	r0, [fp, #-12]
   2c068:	bl	2abf0 <test_json@@Base>
   2c06c:	mov	r2, r0
   2c070:	ldr	r3, [fp, #-8]
   2c074:	orr	r3, r3, r2
   2c078:	str	r3, [fp, #-8]
   2c07c:	movw	r3, #551	; 0x227
   2c080:	str	r3, [sp, #8]
   2c084:	mov	r3, #0
   2c088:	str	r3, [sp, #4]
   2c08c:	mov	r3, #0
   2c090:	str	r3, [sp]
   2c094:	mov	r3, #0
   2c098:	ldr	r2, [pc, #2184]	; 2c928 <main@@Base+0xb54>
   2c09c:	add	r2, pc, r2
   2c0a0:	ldr	r1, [pc, #2180]	; 2c92c <main@@Base+0xb58>
   2c0a4:	add	r1, pc, r1
   2c0a8:	ldr	r0, [fp, #-12]
   2c0ac:	bl	2abf0 <test_json@@Base>
   2c0b0:	mov	r2, r0
   2c0b4:	ldr	r3, [fp, #-8]
   2c0b8:	orr	r3, r3, r2
   2c0bc:	str	r3, [fp, #-8]
   2c0c0:	movw	r3, #601	; 0x259
   2c0c4:	str	r3, [sp, #8]
   2c0c8:	mov	r3, #0
   2c0cc:	str	r3, [sp, #4]
   2c0d0:	mov	r3, #0
   2c0d4:	str	r3, [sp]
   2c0d8:	mov	r3, #0
   2c0dc:	ldr	r2, [pc, #2124]	; 2c930 <main@@Base+0xb5c>
   2c0e0:	add	r2, pc, r2
   2c0e4:	ldr	r1, [pc, #2120]	; 2c934 <main@@Base+0xb60>
   2c0e8:	add	r1, pc, r1
   2c0ec:	ldr	r0, [fp, #-12]
   2c0f0:	bl	2abf0 <test_json@@Base>
   2c0f4:	mov	r2, r0
   2c0f8:	ldr	r3, [fp, #-8]
   2c0fc:	orr	r3, r3, r2
   2c100:	str	r3, [fp, #-8]
   2c104:	mov	r3, #604	; 0x25c
   2c108:	str	r3, [sp, #8]
   2c10c:	mov	r3, #0
   2c110:	str	r3, [sp, #4]
   2c114:	mov	r3, #0
   2c118:	str	r3, [sp]
   2c11c:	mov	r3, #0
   2c120:	ldr	r2, [pc, #2064]	; 2c938 <main@@Base+0xb64>
   2c124:	add	r2, pc, r2
   2c128:	ldr	r1, [pc, #2060]	; 2c93c <main@@Base+0xb68>
   2c12c:	add	r1, pc, r1
   2c130:	ldr	r0, [fp, #-12]
   2c134:	bl	2abf0 <test_json@@Base>
   2c138:	mov	r2, r0
   2c13c:	ldr	r3, [fp, #-8]
   2c140:	orr	r3, r3, r2
   2c144:	str	r3, [fp, #-8]
   2c148:	movw	r3, #607	; 0x25f
   2c14c:	str	r3, [sp, #8]
   2c150:	mov	r3, #0
   2c154:	str	r3, [sp, #4]
   2c158:	mov	r3, #0
   2c15c:	str	r3, [sp]
   2c160:	mov	r3, #0
   2c164:	ldr	r2, [pc, #2004]	; 2c940 <main@@Base+0xb6c>
   2c168:	add	r2, pc, r2
   2c16c:	ldr	r1, [pc, #2000]	; 2c944 <main@@Base+0xb70>
   2c170:	add	r1, pc, r1
   2c174:	ldr	r0, [fp, #-12]
   2c178:	bl	2abf0 <test_json@@Base>
   2c17c:	mov	r2, r0
   2c180:	ldr	r3, [fp, #-8]
   2c184:	orr	r3, r3, r2
   2c188:	str	r3, [fp, #-8]
   2c18c:	movw	r3, #610	; 0x262
   2c190:	str	r3, [sp, #8]
   2c194:	mov	r3, #0
   2c198:	str	r3, [sp, #4]
   2c19c:	mov	r3, #0
   2c1a0:	str	r3, [sp]
   2c1a4:	mov	r3, #0
   2c1a8:	ldr	r2, [pc, #1944]	; 2c948 <main@@Base+0xb74>
   2c1ac:	add	r2, pc, r2
   2c1b0:	ldr	r1, [pc, #1940]	; 2c94c <main@@Base+0xb78>
   2c1b4:	add	r1, pc, r1
   2c1b8:	ldr	r0, [fp, #-12]
   2c1bc:	bl	2abf0 <test_json@@Base>
   2c1c0:	mov	r2, r0
   2c1c4:	ldr	r3, [fp, #-8]
   2c1c8:	orr	r3, r3, r2
   2c1cc:	str	r3, [fp, #-8]
   2c1d0:	movw	r3, #613	; 0x265
   2c1d4:	str	r3, [sp, #8]
   2c1d8:	mov	r3, #0
   2c1dc:	str	r3, [sp, #4]
   2c1e0:	mov	r3, #0
   2c1e4:	str	r3, [sp]
   2c1e8:	mov	r3, #0
   2c1ec:	ldr	r2, [pc, #1884]	; 2c950 <main@@Base+0xb7c>
   2c1f0:	add	r2, pc, r2
   2c1f4:	ldr	r1, [pc, #1880]	; 2c954 <main@@Base+0xb80>
   2c1f8:	add	r1, pc, r1
   2c1fc:	ldr	r0, [fp, #-12]
   2c200:	bl	2abf0 <test_json@@Base>
   2c204:	mov	r2, r0
   2c208:	ldr	r3, [fp, #-8]
   2c20c:	orr	r3, r3, r2
   2c210:	str	r3, [fp, #-8]
   2c214:	mov	r3, #616	; 0x268
   2c218:	str	r3, [sp, #8]
   2c21c:	mov	r3, #0
   2c220:	str	r3, [sp, #4]
   2c224:	mov	r3, #0
   2c228:	str	r3, [sp]
   2c22c:	mov	r3, #0
   2c230:	ldr	r2, [pc, #1824]	; 2c958 <main@@Base+0xb84>
   2c234:	add	r2, pc, r2
   2c238:	ldr	r1, [pc, #1820]	; 2c95c <main@@Base+0xb88>
   2c23c:	add	r1, pc, r1
   2c240:	ldr	r0, [fp, #-12]
   2c244:	bl	2abf0 <test_json@@Base>
   2c248:	mov	r2, r0
   2c24c:	ldr	r3, [fp, #-8]
   2c250:	orr	r3, r3, r2
   2c254:	str	r3, [fp, #-8]
   2c258:	movw	r3, #619	; 0x26b
   2c25c:	str	r3, [sp, #8]
   2c260:	mov	r3, #0
   2c264:	str	r3, [sp, #4]
   2c268:	mov	r3, #0
   2c26c:	str	r3, [sp]
   2c270:	mov	r3, #0
   2c274:	ldr	r2, [pc, #1764]	; 2c960 <main@@Base+0xb8c>
   2c278:	add	r2, pc, r2
   2c27c:	ldr	r1, [pc, #1760]	; 2c964 <main@@Base+0xb90>
   2c280:	add	r1, pc, r1
   2c284:	ldr	r0, [fp, #-12]
   2c288:	bl	2abf0 <test_json@@Base>
   2c28c:	mov	r2, r0
   2c290:	ldr	r3, [fp, #-8]
   2c294:	orr	r3, r3, r2
   2c298:	str	r3, [fp, #-8]
   2c29c:	movw	r3, #622	; 0x26e
   2c2a0:	str	r3, [sp, #8]
   2c2a4:	mov	r3, #0
   2c2a8:	str	r3, [sp, #4]
   2c2ac:	mov	r3, #0
   2c2b0:	str	r3, [sp]
   2c2b4:	mov	r3, #0
   2c2b8:	ldr	r2, [pc, #1704]	; 2c968 <main@@Base+0xb94>
   2c2bc:	add	r2, pc, r2
   2c2c0:	ldr	r1, [pc, #1700]	; 2c96c <main@@Base+0xb98>
   2c2c4:	add	r1, pc, r1
   2c2c8:	ldr	r0, [fp, #-12]
   2c2cc:	bl	2abf0 <test_json@@Base>
   2c2d0:	mov	r2, r0
   2c2d4:	ldr	r3, [fp, #-8]
   2c2d8:	orr	r3, r3, r2
   2c2dc:	str	r3, [fp, #-8]
   2c2e0:	movw	r3, #625	; 0x271
   2c2e4:	str	r3, [sp, #8]
   2c2e8:	mov	r3, #0
   2c2ec:	str	r3, [sp, #4]
   2c2f0:	mov	r3, #0
   2c2f4:	str	r3, [sp]
   2c2f8:	mov	r3, #0
   2c2fc:	ldr	r2, [pc, #1644]	; 2c970 <main@@Base+0xb9c>
   2c300:	add	r2, pc, r2
   2c304:	ldr	r1, [pc, #1640]	; 2c974 <main@@Base+0xba0>
   2c308:	add	r1, pc, r1
   2c30c:	ldr	r0, [fp, #-12]
   2c310:	bl	2abf0 <test_json@@Base>
   2c314:	mov	r2, r0
   2c318:	ldr	r3, [fp, #-8]
   2c31c:	orr	r3, r3, r2
   2c320:	str	r3, [fp, #-8]
   2c324:	mov	r3, #628	; 0x274
   2c328:	str	r3, [sp, #8]
   2c32c:	mov	r3, #0
   2c330:	str	r3, [sp, #4]
   2c334:	mov	r3, #0
   2c338:	str	r3, [sp]
   2c33c:	mov	r3, #0
   2c340:	ldr	r2, [pc, #1584]	; 2c978 <main@@Base+0xba4>
   2c344:	add	r2, pc, r2
   2c348:	ldr	r1, [pc, #1580]	; 2c97c <main@@Base+0xba8>
   2c34c:	add	r1, pc, r1
   2c350:	ldr	r0, [fp, #-12]
   2c354:	bl	2abf0 <test_json@@Base>
   2c358:	mov	r2, r0
   2c35c:	ldr	r3, [fp, #-8]
   2c360:	orr	r3, r3, r2
   2c364:	str	r3, [fp, #-8]
   2c368:	movw	r3, #631	; 0x277
   2c36c:	str	r3, [sp, #8]
   2c370:	mov	r3, #0
   2c374:	str	r3, [sp, #4]
   2c378:	mov	r3, #0
   2c37c:	str	r3, [sp]
   2c380:	mov	r3, #0
   2c384:	ldr	r2, [pc, #1524]	; 2c980 <main@@Base+0xbac>
   2c388:	add	r2, pc, r2
   2c38c:	ldr	r1, [pc, #1520]	; 2c984 <main@@Base+0xbb0>
   2c390:	add	r1, pc, r1
   2c394:	ldr	r0, [fp, #-12]
   2c398:	bl	2abf0 <test_json@@Base>
   2c39c:	mov	r2, r0
   2c3a0:	ldr	r3, [fp, #-8]
   2c3a4:	orr	r3, r3, r2
   2c3a8:	str	r3, [fp, #-8]
   2c3ac:	movw	r3, #634	; 0x27a
   2c3b0:	str	r3, [sp, #8]
   2c3b4:	mov	r3, #0
   2c3b8:	str	r3, [sp, #4]
   2c3bc:	mov	r3, #0
   2c3c0:	str	r3, [sp]
   2c3c4:	mov	r3, #0
   2c3c8:	ldr	r2, [pc, #1464]	; 2c988 <main@@Base+0xbb4>
   2c3cc:	add	r2, pc, r2
   2c3d0:	ldr	r1, [pc, #1460]	; 2c98c <main@@Base+0xbb8>
   2c3d4:	add	r1, pc, r1
   2c3d8:	ldr	r0, [fp, #-12]
   2c3dc:	bl	2abf0 <test_json@@Base>
   2c3e0:	mov	r2, r0
   2c3e4:	ldr	r3, [fp, #-8]
   2c3e8:	orr	r3, r3, r2
   2c3ec:	str	r3, [fp, #-8]
   2c3f0:	movw	r3, #638	; 0x27e
   2c3f4:	str	r3, [sp, #8]
   2c3f8:	mov	r3, #0
   2c3fc:	str	r3, [sp, #4]
   2c400:	mov	r3, #0
   2c404:	str	r3, [sp]
   2c408:	mov	r3, #0
   2c40c:	ldr	r2, [pc, #1404]	; 2c990 <main@@Base+0xbbc>
   2c410:	add	r2, pc, r2
   2c414:	ldr	r1, [pc, #1400]	; 2c994 <main@@Base+0xbc0>
   2c418:	add	r1, pc, r1
   2c41c:	ldr	r0, [fp, #-12]
   2c420:	bl	2abf0 <test_json@@Base>
   2c424:	mov	r2, r0
   2c428:	ldr	r3, [fp, #-8]
   2c42c:	orr	r3, r3, r2
   2c430:	str	r3, [fp, #-8]
   2c434:	movw	r3, #642	; 0x282
   2c438:	str	r3, [sp, #8]
   2c43c:	mov	r3, #0
   2c440:	str	r3, [sp, #4]
   2c444:	mov	r3, #0
   2c448:	str	r3, [sp]
   2c44c:	mov	r3, #0
   2c450:	ldr	r2, [pc, #1344]	; 2c998 <main@@Base+0xbc4>
   2c454:	add	r2, pc, r2
   2c458:	ldr	r1, [pc, #1340]	; 2c99c <main@@Base+0xbc8>
   2c45c:	add	r1, pc, r1
   2c460:	ldr	r0, [fp, #-12]
   2c464:	bl	2abf0 <test_json@@Base>
   2c468:	mov	r2, r0
   2c46c:	ldr	r3, [fp, #-8]
   2c470:	orr	r3, r3, r2
   2c474:	str	r3, [fp, #-8]
   2c478:	movw	r3, #646	; 0x286
   2c47c:	str	r3, [sp, #8]
   2c480:	mov	r3, #0
   2c484:	str	r3, [sp, #4]
   2c488:	mov	r3, #0
   2c48c:	str	r3, [sp]
   2c490:	mov	r3, #0
   2c494:	ldr	r2, [pc, #1284]	; 2c9a0 <main@@Base+0xbcc>
   2c498:	add	r2, pc, r2
   2c49c:	ldr	r1, [pc, #1280]	; 2c9a4 <main@@Base+0xbd0>
   2c4a0:	add	r1, pc, r1
   2c4a4:	ldr	r0, [fp, #-12]
   2c4a8:	bl	2abf0 <test_json@@Base>
   2c4ac:	mov	r2, r0
   2c4b0:	ldr	r3, [fp, #-8]
   2c4b4:	orr	r3, r3, r2
   2c4b8:	str	r3, [fp, #-8]
   2c4bc:	movw	r3, #649	; 0x289
   2c4c0:	str	r3, [sp, #8]
   2c4c4:	mov	r3, #0
   2c4c8:	str	r3, [sp, #4]
   2c4cc:	mov	r3, #0
   2c4d0:	str	r3, [sp]
   2c4d4:	mov	r3, #0
   2c4d8:	ldr	r2, [pc, #1224]	; 2c9a8 <main@@Base+0xbd4>
   2c4dc:	add	r2, pc, r2
   2c4e0:	ldr	r1, [pc, #1220]	; 2c9ac <main@@Base+0xbd8>
   2c4e4:	add	r1, pc, r1
   2c4e8:	ldr	r0, [fp, #-12]
   2c4ec:	bl	2abf0 <test_json@@Base>
   2c4f0:	mov	r2, r0
   2c4f4:	ldr	r3, [fp, #-8]
   2c4f8:	orr	r3, r3, r2
   2c4fc:	str	r3, [fp, #-8]
   2c500:	mov	r3, #716	; 0x2cc
   2c504:	str	r3, [sp, #8]
   2c508:	mov	r3, #0
   2c50c:	str	r3, [sp, #4]
   2c510:	mov	r3, #0
   2c514:	str	r3, [sp]
   2c518:	mov	r3, #0
   2c51c:	ldr	r2, [pc, #1164]	; 2c9b0 <main@@Base+0xbdc>
   2c520:	add	r2, pc, r2
   2c524:	ldr	r1, [pc, #1160]	; 2c9b4 <main@@Base+0xbe0>
   2c528:	add	r1, pc, r1
   2c52c:	ldr	r0, [fp, #-12]
   2c530:	bl	2abf0 <test_json@@Base>
   2c534:	mov	r2, r0
   2c538:	ldr	r3, [fp, #-8]
   2c53c:	orr	r3, r3, r2
   2c540:	str	r3, [fp, #-8]
   2c544:	movw	r3, #731	; 0x2db
   2c548:	str	r3, [sp, #8]
   2c54c:	mov	r3, #0
   2c550:	str	r3, [sp, #4]
   2c554:	mov	r3, #0
   2c558:	str	r3, [sp]
   2c55c:	mov	r3, #0
   2c560:	ldr	r2, [pc, #1104]	; 2c9b8 <main@@Base+0xbe4>
   2c564:	add	r2, pc, r2
   2c568:	ldr	r1, [pc, #1100]	; 2c9bc <main@@Base+0xbe8>
   2c56c:	add	r1, pc, r1
   2c570:	ldr	r0, [fp, #-12]
   2c574:	bl	2abf0 <test_json@@Base>
   2c578:	mov	r2, r0
   2c57c:	ldr	r3, [fp, #-8]
   2c580:	orr	r3, r3, r2
   2c584:	str	r3, [fp, #-8]
   2c588:	movw	r3, #734	; 0x2de
   2c58c:	str	r3, [sp, #8]
   2c590:	mov	r3, #0
   2c594:	str	r3, [sp, #4]
   2c598:	mov	r3, #0
   2c59c:	str	r3, [sp]
   2c5a0:	mov	r3, #0
   2c5a4:	ldr	r2, [pc, #1044]	; 2c9c0 <main@@Base+0xbec>
   2c5a8:	add	r2, pc, r2
   2c5ac:	ldr	r1, [pc, #1040]	; 2c9c4 <main@@Base+0xbf0>
   2c5b0:	add	r1, pc, r1
   2c5b4:	ldr	r0, [fp, #-12]
   2c5b8:	bl	2abf0 <test_json@@Base>
   2c5bc:	mov	r2, r0
   2c5c0:	ldr	r3, [fp, #-8]
   2c5c4:	orr	r3, r3, r2
   2c5c8:	str	r3, [fp, #-8]
   2c5cc:	movw	r3, #738	; 0x2e2
   2c5d0:	str	r3, [sp, #8]
   2c5d4:	mov	r3, #0
   2c5d8:	str	r3, [sp, #4]
   2c5dc:	mov	r3, #0
   2c5e0:	str	r3, [sp]
   2c5e4:	mov	r3, #0
   2c5e8:	ldr	r2, [pc, #984]	; 2c9c8 <main@@Base+0xbf4>
   2c5ec:	add	r2, pc, r2
   2c5f0:	ldr	r1, [pc, #980]	; 2c9cc <main@@Base+0xbf8>
   2c5f4:	add	r1, pc, r1
   2c5f8:	ldr	r0, [fp, #-12]
   2c5fc:	bl	2abf0 <test_json@@Base>
   2c600:	mov	r2, r0
   2c604:	ldr	r3, [fp, #-8]
   2c608:	orr	r3, r3, r2
   2c60c:	str	r3, [fp, #-8]
   2c610:	movw	r3, #750	; 0x2ee
   2c614:	str	r3, [sp, #8]
   2c618:	mov	r3, #0
   2c61c:	str	r3, [sp, #4]
   2c620:	mov	r3, #0
   2c624:	str	r3, [sp]
   2c628:	mov	r3, #0
   2c62c:	ldr	r2, [pc, #924]	; 2c9d0 <main@@Base+0xbfc>
   2c630:	add	r2, pc, r2
   2c634:	ldr	r1, [pc, #920]	; 2c9d4 <main@@Base+0xc00>
   2c638:	add	r1, pc, r1
   2c63c:	ldr	r0, [fp, #-12]
   2c640:	bl	2abf0 <test_json@@Base>
   2c644:	mov	r2, r0
   2c648:	ldr	r3, [fp, #-8]
   2c64c:	orr	r3, r3, r2
   2c650:	str	r3, [fp, #-8]
   2c654:	movw	r3, #766	; 0x2fe
   2c658:	str	r3, [sp, #8]
   2c65c:	mov	r3, #0
   2c660:	str	r3, [sp, #4]
   2c664:	mov	r3, #0
   2c668:	str	r3, [sp]
   2c66c:	mov	r3, #0
   2c670:	ldr	r2, [pc, #864]	; 2c9d8 <main@@Base+0xc04>
   2c674:	add	r2, pc, r2
   2c678:	ldr	r1, [pc, #860]	; 2c9dc <main@@Base+0xc08>
   2c67c:	add	r1, pc, r1
   2c680:	ldr	r0, [fp, #-12]
   2c684:	bl	2abf0 <test_json@@Base>
   2c688:	mov	r2, r0
   2c68c:	ldr	r3, [fp, #-8]
   2c690:	orr	r3, r3, r2
   2c694:	str	r3, [fp, #-8]
   2c698:	movw	r3, #770	; 0x302
   2c69c:	str	r3, [sp, #8]
   2c6a0:	mov	r3, #0
   2c6a4:	str	r3, [sp, #4]
   2c6a8:	mov	r3, #0
   2c6ac:	str	r3, [sp]
   2c6b0:	mov	r3, #0
   2c6b4:	ldr	r2, [pc, #804]	; 2c9e0 <main@@Base+0xc0c>
   2c6b8:	add	r2, pc, r2
   2c6bc:	ldr	r1, [pc, #800]	; 2c9e4 <main@@Base+0xc10>
   2c6c0:	add	r1, pc, r1
   2c6c4:	ldr	r0, [fp, #-12]
   2c6c8:	bl	2abf0 <test_json@@Base>
   2c6cc:	mov	r2, r0
   2c6d0:	ldr	r3, [fp, #-8]
   2c6d4:	orr	r3, r3, r2
   2c6d8:	str	r3, [fp, #-8]
   2c6dc:	mov	r3, #776	; 0x308
   2c6e0:	str	r3, [sp, #8]
   2c6e4:	mov	r3, #0
   2c6e8:	str	r3, [sp, #4]
   2c6ec:	mov	r3, #0
   2c6f0:	str	r3, [sp]
   2c6f4:	mov	r3, #0
   2c6f8:	ldr	r2, [pc, #744]	; 2c9e8 <main@@Base+0xc14>
   2c6fc:	add	r2, pc, r2
   2c700:	ldr	r1, [pc, #740]	; 2c9ec <main@@Base+0xc18>
   2c704:	add	r1, pc, r1
   2c708:	ldr	r0, [fp, #-12]
   2c70c:	bl	2abf0 <test_json@@Base>
   2c710:	mov	r2, r0
   2c714:	ldr	r3, [fp, #-8]
   2c718:	orr	r3, r3, r2
   2c71c:	str	r3, [fp, #-8]
   2c720:	movw	r3, #781	; 0x30d
   2c724:	str	r3, [sp, #8]
   2c728:	mov	r3, #0
   2c72c:	str	r3, [sp, #4]
   2c730:	mov	r3, #0
   2c734:	str	r3, [sp]
   2c738:	mov	r3, #0
   2c73c:	ldr	r2, [pc, #684]	; 2c9f0 <main@@Base+0xc1c>
   2c740:	add	r2, pc, r2
   2c744:	ldr	r1, [pc, #680]	; 2c9f4 <main@@Base+0xc20>
   2c748:	add	r1, pc, r1
   2c74c:	ldr	r0, [fp, #-12]
   2c750:	bl	2abf0 <test_json@@Base>
   2c754:	mov	r2, r0
   2c758:	ldr	r3, [fp, #-8]
   2c75c:	orr	r3, r3, r2
   2c760:	str	r3, [fp, #-8]
   2c764:	movw	r3, #786	; 0x312
   2c768:	str	r3, [sp, #8]
   2c76c:	mov	r3, #0
   2c770:	str	r3, [sp, #4]
   2c774:	mov	r3, #0
   2c778:	str	r3, [sp]
   2c77c:	mov	r3, #0
   2c780:	ldr	r2, [pc, #624]	; 2c9f8 <main@@Base+0xc24>
   2c784:	add	r2, pc, r2
   2c788:	ldr	r1, [pc, #620]	; 2c9fc <main@@Base+0xc28>
   2c78c:	add	r1, pc, r1
   2c790:	ldr	r0, [fp, #-12]
   2c794:	bl	2abf0 <test_json@@Base>
   2c798:	mov	r2, r0
   2c79c:	ldr	r3, [fp, #-8]
   2c7a0:	orr	r3, r3, r2
   2c7a4:	str	r3, [fp, #-8]
   2c7a8:	movw	r3, #791	; 0x317
   2c7ac:	str	r3, [sp, #8]
   2c7b0:	mov	r3, #0
   2c7b4:	str	r3, [sp, #4]
   2c7b8:	mov	r3, #0
   2c7bc:	str	r3, [sp]
   2c7c0:	mov	r3, #0
   2c7c4:	ldr	r2, [pc, #564]	; 2ca00 <main@@Base+0xc2c>
   2c7c8:	add	r2, pc, r2
   2c7cc:	ldr	r1, [pc, #560]	; 2ca04 <main@@Base+0xc30>
   2c7d0:	add	r1, pc, r1
   2c7d4:	ldr	r0, [fp, #-12]
   2c7d8:	bl	2abf0 <test_json@@Base>
   2c7dc:	mov	r2, r0
   2c7e0:	ldr	r3, [fp, #-8]
   2c7e4:	orr	r3, r3, r2
   2c7e8:	str	r3, [fp, #-8]
   2c7ec:	mov	r3, #796	; 0x31c
   2c7f0:	str	r3, [sp, #8]
   2c7f4:	mov	r3, #0
   2c7f8:	str	r3, [sp, #4]
   2c7fc:	mov	r3, #0
   2c800:	str	r3, [sp]
   2c804:	mov	r3, #0
   2c808:	ldr	r2, [pc, #504]	; 2ca08 <main@@Base+0xc34>
   2c80c:	add	r2, pc, r2
   2c810:	ldr	r1, [pc, #500]	; 2ca0c <main@@Base+0xc38>
   2c814:	add	r1, pc, r1
   2c818:	ldr	r0, [fp, #-12]
   2c81c:	bl	2abf0 <test_json@@Base>
   2c820:	mov	r2, r0
   2c824:	ldr	r3, [fp, #-8]
   2c828:	orr	r3, r3, r2
   2c82c:	str	r3, [fp, #-8]
   2c830:	movw	r3, #801	; 0x321
   2c834:	str	r3, [sp, #8]
   2c838:	mov	r3, #0
   2c83c:	str	r3, [sp, #4]
   2c840:	mov	r3, #0
   2c844:	str	r3, [sp]
   2c848:	mov	r3, #0
   2c84c:	ldr	r2, [pc, #444]	; 2ca10 <main@@Base+0xc3c>
   2c850:	add	r2, pc, r2
   2c854:	ldr	r1, [pc, #440]	; 2ca14 <main@@Base+0xc40>
   2c858:	add	r1, pc, r1
   2c85c:	ldr	r0, [fp, #-12]
   2c860:	bl	2abf0 <test_json@@Base>
   2c864:	mov	r2, r0
   2c868:	ldr	r3, [fp, #-8]
   2c86c:	orr	r3, r3, r2
   2c870:	str	r3, [fp, #-8]
   2c874:	movw	r3, #806	; 0x326
   2c878:	str	r3, [sp, #8]
   2c87c:	mov	r3, #0
   2c880:	str	r3, [sp, #4]
   2c884:	mov	r3, #0
   2c888:	str	r3, [sp]
   2c88c:	mov	r3, #0
   2c890:	ldr	r2, [pc, #384]	; 2ca18 <main@@Base+0xc44>
   2c894:	add	r2, pc, r2
   2c898:	ldr	r1, [pc, #380]	; 2ca1c <main@@Base+0xc48>
   2c89c:	add	r1, pc, r1
   2c8a0:	ldr	r0, [fp, #-12]
   2c8a4:	bl	2abf0 <test_json@@Base>
   2c8a8:	mov	r2, r0
   2c8ac:	ldr	r3, [fp, #-8]
   2c8b0:	orr	r3, r3, r2
   2c8b4:	str	r3, [fp, #-8]
   2c8b8:	ldr	r3, [fp, #-8]
   2c8bc:	cmp	r3, #0
   2c8c0:	beq	2c8cc <main@@Base+0xaf8>
   2c8c4:	mvn	r3, #0
   2c8c8:	b	2c8d0 <main@@Base+0xafc>
   2c8cc:	mov	r3, #0
   2c8d0:	mov	r0, r3
   2c8d4:	sub	sp, fp, #4
   2c8d8:	ldr	fp, [sp]
   2c8dc:	add	sp, sp, #4
   2c8e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c8e4:	strdeq	r9, [r3], -r0
   2c8e8:	andeq	r2, r2, r4, lsl #17
   2c8ec:	andeq	r4, r2, ip, lsr r2
   2c8f0:	andeq	r4, r2, r8, lsl r2
   2c8f4:	andeq	r4, r2, r4, lsr r2
   2c8f8:	andeq	r4, r2, r0, lsr #4
   2c8fc:	andeq	r4, r2, ip, lsr r2
   2c900:	andeq	r4, r2, r8, lsr #4
   2c904:	andeq	r4, r2, ip, asr #4
   2c908:	andeq	r4, r2, r4, ror #3
   2c90c:	andeq	r4, r2, ip, lsr r2
   2c910:	andeq	r4, r2, r8, lsl #2
   2c914:	andeq	r4, r2, r4, lsr r2
   2c918:	andeq	r4, r2, r0, lsl r1
   2c91c:	andeq	r4, r2, r8, lsl r2
   2c920:	andeq	r2, r2, r8, lsr #13
   2c924:	andeq	r4, r2, r0, lsl #4
   2c928:	andeq	r2, r2, r4, ror #12
   2c92c:	strdeq	r2, [r2], -r0
   2c930:	strdeq	r3, [r2], -r8
   2c934:	andeq	r4, r2, r0, lsr #3
   2c938:	andeq	r4, r2, r0
   2c93c:	andeq	r4, r2, r0, lsl #3
   2c940:	andeq	r4, r2, r8, ror #2
   2c944:	andeq	r4, r2, r8, lsl #3
   2c948:	andeq	r3, r2, r4, asr #31
   2c94c:	andeq	r4, r2, r8, ror #2
   2c950:	andeq	r4, r2, r0, asr r1
   2c954:	andeq	r4, r2, r8, ror #2
   2c958:	andeq	r4, r2, r0, asr r1
   2c95c:	andeq	r4, r2, r8, ror #2
   2c960:	andeq	r4, r2, r0, asr r1
   2c964:	andeq	r4, r2, r8, ror #2
   2c968:	andeq	r3, r2, ip, lsl lr
   2c96c:	andeq	r4, r2, r8, asr #2
   2c970:	ldrdeq	r3, [r2], -r8
   2c974:	andeq	r4, r2, r0, lsr r1
   2c978:	andeq	r4, r2, r0, lsr r1
   2c97c:	andeq	r4, r2, r4, asr #2
   2c980:	andeq	r4, r2, ip, ror #1
   2c984:	andeq	r4, r2, r0, lsl #2
   2c988:	strdeq	r4, [r2], -r0
   2c98c:	andeq	r4, r2, r0, lsr r1
   2c990:	andeq	r4, r2, r8, asr #2
   2c994:	andeq	r4, r2, ip, lsl #3
   2c998:	andeq	r4, r2, r8, lsr #3
   2c99c:	andeq	r4, r2, r4, lsl #4
   2c9a0:	andeq	r2, r2, r8, ror #4
   2c9a4:	andeq	r4, r2, r0, lsr r2
   2c9a8:	andeq	r2, r2, r4, lsr #4
   2c9ac:	andeq	r4, r2, r8, lsl r2
   2c9b0:	andeq	r4, r2, r4, lsl #4
   2c9b4:	andeq	r4, r2, ip, asr r2
   2c9b8:	muleq	r2, r0, r2
   2c9bc:			; <UNDEFINED> instruction: 0x000242b8
   2c9c0:			; <UNDEFINED> instruction: 0x000242bc
   2c9c4:	andeq	r4, r2, r8, asr #5
   2c9c8:	andeq	r4, r2, r8, lsr #5
   2c9cc:	andeq	r4, r2, r4, ror #5
   2c9d0:	andeq	r4, r2, r4, ror #4
   2c9d4:	andeq	r4, r2, r8, ror #5
   2c9d8:	andeq	r4, r2, ip, asr #6
   2c9dc:	andeq	r4, r2, r8, ror #6
   2c9e0:	andeq	r4, r2, r4, asr r3
   2c9e4:	andeq	r4, r2, r8, ror r3
   2c9e8:	andeq	r4, r2, ip, ror #6
   2c9ec:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   2c9f0:	andeq	r1, r2, r0, asr #31
   2c9f4:	andeq	r4, r2, ip, lsl #8
   2c9f8:	andeq	r4, r2, r8, asr #8
   2c9fc:			; <UNDEFINED> instruction: 0x000244b0
   2ca00:	strdeq	r4, [r2], -r0
   2ca04:	andeq	r4, r2, r8, ror #10
   2ca08:			; <UNDEFINED> instruction: 0x000245b8
   2ca0c:	andeq	r4, r2, r0, lsr #12
   2ca10:	andeq	r4, r2, r0, ror #12
   2ca14:	ldrdeq	r4, [r2], -r8
   2ca18:	andeq	r4, r2, r8, lsr #14
   2ca1c:	andeq	r4, r2, r4, lsr #15
   2ca20:	str	fp, [sp, #-8]!
   2ca24:	str	lr, [sp, #4]
   2ca28:	add	fp, sp, #4
   2ca2c:	sub	sp, sp, #16
   2ca30:	str	r0, [fp, #-16]
   2ca34:	str	r1, [fp, #-20]	; 0xffffffec
   2ca38:	mov	r3, #0
   2ca3c:	str	r3, [fp, #-12]
   2ca40:	ldr	r3, [fp, #-16]
   2ca44:	cmp	r3, #3
   2ca48:	bhi	2ca54 <main@@Base+0xc80>
   2ca4c:	mov	r3, #4
   2ca50:	str	r3, [fp, #-16]
   2ca54:	sub	r3, fp, #12
   2ca58:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ca5c:	ldr	r1, [fp, #-16]
   2ca60:	mov	r0, r3
   2ca64:	bl	14588 <posix_memalign@plt>
   2ca68:	str	r0, [fp, #-8]
   2ca6c:	ldr	r3, [fp, #-8]
   2ca70:	cmp	r3, #0
   2ca74:	beq	2ca98 <main@@Base+0xcc4>
   2ca78:	ldr	r3, [fp, #-12]
   2ca7c:	cmp	r3, #0
   2ca80:	beq	2ca98 <main@@Base+0xcc4>
   2ca84:	ldr	r3, [fp, #-12]
   2ca88:	mov	r0, r3
   2ca8c:	bl	14510 <free@plt>
   2ca90:	mov	r3, #0
   2ca94:	str	r3, [fp, #-12]
   2ca98:	ldr	r3, [fp, #-12]
   2ca9c:	mov	r0, r3
   2caa0:	sub	sp, fp, #4
   2caa4:	ldr	fp, [sp]
   2caa8:	add	sp, sp, #4
   2caac:	pop	{pc}		; (ldr pc, [sp], #4)
   2cab0:	push	{fp}		; (str fp, [sp, #-4]!)
   2cab4:	add	fp, sp, #0
   2cab8:	sub	sp, sp, #12
   2cabc:	str	r0, [fp, #-8]
   2cac0:	ldr	r3, [fp, #-8]
   2cac4:	mov	r0, r3
   2cac8:	add	sp, fp, #0
   2cacc:	pop	{fp}		; (ldr fp, [sp], #4)
   2cad0:	bx	lr
   2cad4:	push	{fp}		; (str fp, [sp, #-4]!)
   2cad8:	add	fp, sp, #0
   2cadc:	sub	sp, sp, #12
   2cae0:	mov	r3, r0
   2cae4:	strb	r3, [fp, #-5]
   2cae8:	ldrb	r3, [fp, #-5]
   2caec:	mov	r0, r3
   2caf0:	add	sp, fp, #0
   2caf4:	pop	{fp}		; (ldr fp, [sp], #4)
   2caf8:	bx	lr
   2cafc:	push	{fp}		; (str fp, [sp, #-4]!)
   2cb00:	add	fp, sp, #0
   2cb04:	sub	sp, sp, #12
   2cb08:	str	r0, [fp, #-8]
   2cb0c:	ldr	r3, [fp, #-8]
   2cb10:	mov	r0, r3
   2cb14:	add	sp, fp, #0
   2cb18:	pop	{fp}		; (ldr fp, [sp], #4)
   2cb1c:	bx	lr
   2cb20:	push	{fp}		; (str fp, [sp, #-4]!)
   2cb24:	add	fp, sp, #0
   2cb28:	sub	sp, sp, #12
   2cb2c:	str	r0, [fp, #-8]
   2cb30:	str	r1, [fp, #-12]
   2cb34:	ldr	r3, [fp, #-8]
   2cb38:	ldr	r2, [r3]
   2cb3c:	ldr	r3, [fp, #-8]
   2cb40:	ldr	r3, [r3, #4]
   2cb44:	cmp	r2, r3
   2cb48:	bne	2cb74 <main@@Base+0xda0>
   2cb4c:	ldr	r3, [fp, #-12]
   2cb50:	cmp	r3, #0
   2cb54:	beq	2cb68 <main@@Base+0xd94>
   2cb58:	ldr	r3, [fp, #-8]
   2cb5c:	ldr	r2, [r3, #24]
   2cb60:	ldr	r3, [fp, #-12]
   2cb64:	str	r2, [r3]
   2cb68:	ldr	r3, [fp, #-8]
   2cb6c:	ldr	r3, [r3, #8]
   2cb70:	b	2cb90 <main@@Base+0xdbc>
   2cb74:	ldr	r3, [fp, #-12]
   2cb78:	cmp	r3, #0
   2cb7c:	beq	2cb8c <main@@Base+0xdb8>
   2cb80:	ldr	r3, [fp, #-12]
   2cb84:	mov	r2, #0
   2cb88:	str	r2, [r3]
   2cb8c:	mov	r3, #0
   2cb90:	mov	r0, r3
   2cb94:	add	sp, fp, #0
   2cb98:	pop	{fp}		; (ldr fp, [sp], #4)
   2cb9c:	bx	lr
   2cba0:	str	fp, [sp, #-8]!
   2cba4:	str	lr, [sp, #4]
   2cba8:	add	fp, sp, #4
   2cbac:	sub	sp, sp, #16
   2cbb0:	str	r0, [fp, #-16]
   2cbb4:	str	r1, [fp, #-20]	; 0xffffffec
   2cbb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cbbc:	mov	r1, #0
   2cbc0:	ldr	r0, [fp, #-16]
   2cbc4:	bl	145b8 <memchr@plt>
   2cbc8:	str	r0, [fp, #-8]
   2cbcc:	ldr	r3, [fp, #-8]
   2cbd0:	cmp	r3, #0
   2cbd4:	beq	2cbe8 <main@@Base+0xe14>
   2cbd8:	ldr	r2, [fp, #-8]
   2cbdc:	ldr	r3, [fp, #-16]
   2cbe0:	sub	r3, r2, r3
   2cbe4:	b	2cbec <main@@Base+0xe18>
   2cbe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbec:	mov	r0, r3
   2cbf0:	sub	sp, fp, #4
   2cbf4:	ldr	fp, [sp]
   2cbf8:	add	sp, sp, #4
   2cbfc:	pop	{pc}		; (ldr pc, [sp], #4)

0002cc00 <flatcc_builder_default_alloc@@Base>:
   2cc00:	str	fp, [sp, #-8]!
   2cc04:	str	lr, [sp, #4]
   2cc08:	add	fp, sp, #4
   2cc0c:	sub	sp, sp, #24
   2cc10:	str	r0, [fp, #-16]
   2cc14:	str	r1, [fp, #-20]	; 0xffffffec
   2cc18:	str	r2, [fp, #-24]	; 0xffffffe8
   2cc1c:	str	r3, [fp, #-28]	; 0xffffffe4
   2cc20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc24:	cmp	r3, #0
   2cc28:	bne	2cc6c <flatcc_builder_default_alloc@@Base+0x6c>
   2cc2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc30:	ldr	r3, [r3]
   2cc34:	cmp	r3, #0
   2cc38:	beq	2cc64 <flatcc_builder_default_alloc@@Base+0x64>
   2cc3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc40:	ldr	r3, [r3]
   2cc44:	mov	r0, r3
   2cc48:	bl	14510 <free@plt>
   2cc4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc50:	mov	r2, #0
   2cc54:	str	r2, [r3]
   2cc58:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc5c:	mov	r2, #0
   2cc60:	str	r2, [r3, #4]
   2cc64:	mov	r3, #0
   2cc68:	b	2cdc0 <flatcc_builder_default_alloc@@Base+0x1c0>
   2cc6c:	ldr	r3, [fp, #4]
   2cc70:	sub	r3, r3, #1
   2cc74:	cmp	r3, #6
   2cc78:	addls	pc, pc, r3, lsl #2
   2cc7c:	b	2cccc <flatcc_builder_default_alloc@@Base+0xcc>
   2cc80:	b	2cc9c <flatcc_builder_default_alloc@@Base+0x9c>
   2cc84:	b	2cccc <flatcc_builder_default_alloc@@Base+0xcc>
   2cc88:	b	2cccc <flatcc_builder_default_alloc@@Base+0xcc>
   2cc8c:	b	2ccb4 <flatcc_builder_default_alloc@@Base+0xb4>
   2cc90:	b	2cca8 <flatcc_builder_default_alloc@@Base+0xa8>
   2cc94:	b	2cccc <flatcc_builder_default_alloc@@Base+0xcc>
   2cc98:	b	2ccc0 <flatcc_builder_default_alloc@@Base+0xc0>
   2cc9c:	mov	r3, #256	; 0x100
   2cca0:	str	r3, [fp, #-8]
   2cca4:	b	2ccd8 <flatcc_builder_default_alloc@@Base+0xd8>
   2cca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ccac:	str	r3, [fp, #-8]
   2ccb0:	b	2ccd8 <flatcc_builder_default_alloc@@Base+0xd8>
   2ccb4:	mov	r3, #288	; 0x120
   2ccb8:	str	r3, [fp, #-8]
   2ccbc:	b	2ccd8 <flatcc_builder_default_alloc@@Base+0xd8>
   2ccc0:	mov	r3, #64	; 0x40
   2ccc4:	str	r3, [fp, #-8]
   2ccc8:	b	2ccd8 <flatcc_builder_default_alloc@@Base+0xd8>
   2cccc:	mov	r3, #32
   2ccd0:	str	r3, [fp, #-8]
   2ccd4:	nop	{0}
   2ccd8:	b	2cce8 <flatcc_builder_default_alloc@@Base+0xe8>
   2ccdc:	ldr	r3, [fp, #-8]
   2cce0:	lsl	r3, r3, #1
   2cce4:	str	r3, [fp, #-8]
   2cce8:	ldr	r2, [fp, #-8]
   2ccec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ccf0:	cmp	r2, r3
   2ccf4:	bcc	2ccdc <flatcc_builder_default_alloc@@Base+0xdc>
   2ccf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ccfc:	ldr	r3, [r3, #4]
   2cd00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cd04:	cmp	r2, r3
   2cd08:	bhi	2cd2c <flatcc_builder_default_alloc@@Base+0x12c>
   2cd0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd10:	ldr	r3, [r3, #4]
   2cd14:	lsr	r3, r3, #1
   2cd18:	ldr	r2, [fp, #-8]
   2cd1c:	cmp	r2, r3
   2cd20:	bhi	2cd2c <flatcc_builder_default_alloc@@Base+0x12c>
   2cd24:	mov	r3, #0
   2cd28:	b	2cdc0 <flatcc_builder_default_alloc@@Base+0x1c0>
   2cd2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd30:	ldr	r3, [r3]
   2cd34:	ldr	r1, [fp, #-8]
   2cd38:	mov	r0, r3
   2cd3c:	bl	14534 <realloc@plt>
   2cd40:	str	r0, [fp, #-12]
   2cd44:	ldr	r3, [fp, #-12]
   2cd48:	cmp	r3, #0
   2cd4c:	bne	2cd58 <flatcc_builder_default_alloc@@Base+0x158>
   2cd50:	mvn	r3, #0
   2cd54:	b	2cdc0 <flatcc_builder_default_alloc@@Base+0x1c0>
   2cd58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cd5c:	cmp	r3, #0
   2cd60:	beq	2cda4 <flatcc_builder_default_alloc@@Base+0x1a4>
   2cd64:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd68:	ldr	r3, [r3, #4]
   2cd6c:	ldr	r2, [fp, #-8]
   2cd70:	cmp	r2, r3
   2cd74:	bls	2cda4 <flatcc_builder_default_alloc@@Base+0x1a4>
   2cd78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd7c:	ldr	r3, [r3, #4]
   2cd80:	ldr	r2, [fp, #-12]
   2cd84:	add	r0, r2, r3
   2cd88:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd8c:	ldr	r3, [r3, #4]
   2cd90:	ldr	r2, [fp, #-8]
   2cd94:	sub	r3, r2, r3
   2cd98:	mov	r2, r3
   2cd9c:	mov	r1, #0
   2cda0:	bl	14594 <memset@plt>
   2cda4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cda8:	ldr	r2, [fp, #-12]
   2cdac:	str	r2, [r3]
   2cdb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cdb4:	ldr	r2, [fp, #-8]
   2cdb8:	str	r2, [r3, #4]
   2cdbc:	mov	r3, #0
   2cdc0:	mov	r0, r3
   2cdc4:	sub	sp, fp, #4
   2cdc8:	ldr	fp, [sp]
   2cdcc:	add	sp, sp, #4
   2cdd0:	pop	{pc}		; (ldr pc, [sp], #4)
   2cdd4:	push	{fp}		; (str fp, [sp, #-4]!)
   2cdd8:	add	fp, sp, #0
   2cddc:	sub	sp, sp, #20
   2cde0:	str	r0, [fp, #-16]
   2cde4:	str	r1, [fp, #-20]	; 0xffffffec
   2cde8:	ldr	r3, [fp, #-16]
   2cdec:	add	r3, r3, #52	; 0x34
   2cdf0:	add	r3, r3, #8
   2cdf4:	str	r3, [fp, #-8]
   2cdf8:	ldr	r3, [fp, #-16]
   2cdfc:	ldr	r2, [r3, #60]	; 0x3c
   2ce00:	ldr	r3, [fp, #-16]
   2ce04:	ldr	r3, [r3, #28]
   2ce08:	add	r2, r2, r3
   2ce0c:	ldr	r3, [fp, #-16]
   2ce10:	str	r2, [r3, #16]
   2ce14:	ldr	r3, [fp, #-8]
   2ce18:	ldr	r2, [r3, #4]
   2ce1c:	ldr	r3, [fp, #-16]
   2ce20:	ldr	r3, [r3, #28]
   2ce24:	sub	r2, r2, r3
   2ce28:	ldr	r3, [fp, #-16]
   2ce2c:	str	r2, [r3, #24]
   2ce30:	ldr	r3, [fp, #-16]
   2ce34:	ldr	r3, [r3, #24]
   2ce38:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ce3c:	cmp	r2, r3
   2ce40:	bcs	2ce50 <flatcc_builder_default_alloc@@Base+0x250>
   2ce44:	ldr	r3, [fp, #-16]
   2ce48:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ce4c:	str	r2, [r3, #24]
   2ce50:	ldr	r3, [fp, #-16]
   2ce54:	ldr	r3, [r3, #32]
   2ce58:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ce5c:	str	r2, [r3, #4]
   2ce60:	nop	{0}
   2ce64:	add	sp, fp, #0
   2ce68:	pop	{fp}		; (ldr fp, [sp], #4)
   2ce6c:	bx	lr
   2ce70:	str	r4, [sp, #-12]!
   2ce74:	str	fp, [sp, #4]
   2ce78:	str	lr, [sp, #8]
   2ce7c:	add	fp, sp, #8
   2ce80:	sub	sp, sp, #36	; 0x24
   2ce84:	str	r0, [fp, #-24]	; 0xffffffe8
   2ce88:	str	r1, [fp, #-28]	; 0xffffffe4
   2ce8c:	str	r2, [fp, #-32]	; 0xffffffe0
   2ce90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ce94:	add	r3, r3, #52	; 0x34
   2ce98:	add	r3, r3, #8
   2ce9c:	str	r3, [fp, #-16]
   2cea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cea4:	ldr	r4, [r3, #48]	; 0x30
   2cea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ceac:	ldr	r0, [r3, #40]	; 0x28
   2ceb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ceb4:	ldr	r2, [r3, #28]
   2ceb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cebc:	add	r2, r2, r3
   2cec0:	mov	r3, #1
   2cec4:	str	r3, [sp]
   2cec8:	mov	r3, #1
   2cecc:	ldr	r1, [fp, #-16]
   2ced0:	blx	r4
   2ced4:	mov	r3, r0
   2ced8:	cmp	r3, #0
   2cedc:	beq	2cee8 <flatcc_builder_default_alloc@@Base+0x2e8>
   2cee0:	mvn	r3, #0
   2cee4:	b	2cef8 <flatcc_builder_default_alloc@@Base+0x2f8>
   2cee8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ceec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cef0:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   2cef4:	mov	r3, #0
   2cef8:	mov	r0, r3
   2cefc:	sub	sp, fp, #8
   2cf00:	ldr	r4, [sp]
   2cf04:	ldr	fp, [sp, #4]
   2cf08:	add	sp, sp, #8
   2cf0c:	pop	{pc}		; (ldr pc, [sp], #4)
   2cf10:	str	fp, [sp, #-8]!
   2cf14:	str	lr, [sp, #4]
   2cf18:	add	fp, sp, #4
   2cf1c:	sub	sp, sp, #16
   2cf20:	str	r0, [fp, #-16]
   2cf24:	str	r1, [fp, #-20]	; 0xffffffec
   2cf28:	ldr	r3, [fp, #-16]
   2cf2c:	ldr	r3, [r3, #20]
   2cf30:	str	r3, [fp, #-8]
   2cf34:	ldr	r3, [fp, #-16]
   2cf38:	ldr	r2, [r3, #20]
   2cf3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cf40:	add	r2, r2, r3
   2cf44:	ldr	r3, [fp, #-16]
   2cf48:	str	r2, [r3, #20]
   2cf4c:	ldr	r3, [fp, #-16]
   2cf50:	ldr	r2, [r3, #20]
   2cf54:	ldr	r3, [fp, #-16]
   2cf58:	ldr	r3, [r3, #24]
   2cf5c:	cmp	r2, r3
   2cf60:	bcc	2cf94 <flatcc_builder_default_alloc@@Base+0x394>
   2cf64:	ldr	r3, [fp, #-16]
   2cf68:	ldr	r3, [r3, #20]
   2cf6c:	add	r3, r3, #1
   2cf70:	mvn	r2, #3
   2cf74:	mov	r1, r3
   2cf78:	ldr	r0, [fp, #-16]
   2cf7c:	bl	2ce70 <flatcc_builder_default_alloc@@Base+0x270>
   2cf80:	mov	r3, r0
   2cf84:	cmp	r3, #0
   2cf88:	beq	2cf94 <flatcc_builder_default_alloc@@Base+0x394>
   2cf8c:	mov	r3, #0
   2cf90:	b	2cfa4 <flatcc_builder_default_alloc@@Base+0x3a4>
   2cf94:	ldr	r3, [fp, #-16]
   2cf98:	ldr	r2, [r3, #16]
   2cf9c:	ldr	r3, [fp, #-8]
   2cfa0:	add	r3, r2, r3
   2cfa4:	mov	r0, r3
   2cfa8:	sub	sp, fp, #4
   2cfac:	ldr	fp, [sp]
   2cfb0:	add	sp, sp, #4
   2cfb4:	pop	{pc}		; (ldr pc, [sp], #4)
   2cfb8:	str	fp, [sp, #-8]!
   2cfbc:	str	lr, [sp, #4]
   2cfc0:	add	fp, sp, #4
   2cfc4:	sub	sp, sp, #8
   2cfc8:	str	r0, [fp, #-8]
   2cfcc:	str	r1, [fp, #-12]
   2cfd0:	ldr	r3, [fp, #-8]
   2cfd4:	ldr	r2, [r3, #20]
   2cfd8:	ldr	r3, [fp, #-12]
   2cfdc:	sub	r2, r2, r3
   2cfe0:	ldr	r3, [fp, #-8]
   2cfe4:	str	r2, [r3, #20]
   2cfe8:	ldr	r3, [fp, #-8]
   2cfec:	ldr	r2, [r3, #16]
   2cff0:	ldr	r3, [fp, #-8]
   2cff4:	ldr	r3, [r3, #20]
   2cff8:	add	r3, r2, r3
   2cffc:	ldr	r2, [fp, #-12]
   2d000:	mov	r1, #0
   2d004:	mov	r0, r3
   2d008:	bl	14594 <memset@plt>
   2d00c:	nop	{0}
   2d010:	sub	sp, fp, #4
   2d014:	ldr	fp, [sp]
   2d018:	add	sp, sp, #4
   2d01c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d020:	str	fp, [sp, #-8]!
   2d024:	str	lr, [sp, #4]
   2d028:	add	fp, sp, #4
   2d02c:	sub	sp, sp, #24
   2d030:	str	r0, [fp, #-16]
   2d034:	str	r1, [fp, #-20]	; 0xffffffec
   2d038:	str	r2, [fp, #-24]	; 0xffffffe8
   2d03c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d040:	ldr	r0, [fp, #-16]
   2d044:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   2d048:	str	r0, [fp, #-8]
   2d04c:	ldr	r3, [fp, #-8]
   2d050:	cmp	r3, #0
   2d054:	bne	2d060 <flatcc_builder_default_alloc@@Base+0x460>
   2d058:	mov	r3, #0
   2d05c:	b	2d074 <flatcc_builder_default_alloc@@Base+0x474>
   2d060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d064:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d068:	ldr	r0, [fp, #-8]
   2d06c:	bl	1451c <memcpy@plt>
   2d070:	ldr	r3, [fp, #-8]
   2d074:	mov	r0, r3
   2d078:	sub	sp, fp, #4
   2d07c:	ldr	fp, [sp]
   2d080:	add	sp, sp, #4
   2d084:	pop	{pc}		; (ldr pc, [sp], #4)
   2d088:	str	fp, [sp, #-8]!
   2d08c:	str	lr, [sp, #4]
   2d090:	add	fp, sp, #4
   2d094:	sub	sp, sp, #24
   2d098:	str	r0, [fp, #-16]
   2d09c:	str	r1, [fp, #-20]	; 0xffffffec
   2d0a0:	mov	r1, r2
   2d0a4:	mov	r2, r3
   2d0a8:	mov	r3, r1
   2d0ac:	strh	r3, [fp, #-22]	; 0xffffffea
   2d0b0:	mov	r3, r2
   2d0b4:	strh	r3, [fp, #-24]	; 0xffffffe8
   2d0b8:	ldr	r3, [fp, #-16]
   2d0bc:	ldr	r2, [r3, #20]
   2d0c0:	ldrh	r3, [fp, #-22]	; 0xffffffea
   2d0c4:	add	r3, r2, r3
   2d0c8:	sub	r3, r3, #1
   2d0cc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2d0d0:	rsb	r2, r2, #0
   2d0d4:	and	r3, r3, r2
   2d0d8:	str	r3, [fp, #-8]
   2d0dc:	ldr	r2, [fp, #-8]
   2d0e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d0e4:	add	r2, r2, r3
   2d0e8:	ldr	r3, [fp, #-16]
   2d0ec:	str	r2, [r3, #20]
   2d0f0:	ldr	r3, [fp, #-16]
   2d0f4:	ldr	r2, [r3, #20]
   2d0f8:	ldr	r3, [fp, #-16]
   2d0fc:	ldr	r3, [r3, #24]
   2d100:	cmp	r2, r3
   2d104:	bcc	2d138 <flatcc_builder_default_alloc@@Base+0x538>
   2d108:	ldr	r3, [fp, #-16]
   2d10c:	ldr	r3, [r3, #20]
   2d110:	add	r3, r3, #1
   2d114:	movw	r2, #65532	; 0xfffc
   2d118:	mov	r1, r3
   2d11c:	ldr	r0, [fp, #-16]
   2d120:	bl	2ce70 <flatcc_builder_default_alloc@@Base+0x270>
   2d124:	mov	r3, r0
   2d128:	cmp	r3, #0
   2d12c:	beq	2d138 <flatcc_builder_default_alloc@@Base+0x538>
   2d130:	mov	r3, #0
   2d134:	b	2d198 <flatcc_builder_default_alloc@@Base+0x598>
   2d138:	ldr	r3, [fp, #-8]
   2d13c:	uxth	r2, r3
   2d140:	ldr	r3, [fp, #-16]
   2d144:	ldr	r1, [r3, #4]
   2d148:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   2d14c:	lsl	r3, r3, #1
   2d150:	add	r3, r1, r3
   2d154:	add	r2, r2, #4
   2d158:	uxth	r2, r2
   2d15c:	strh	r2, [r3]
   2d160:	ldr	r3, [fp, #-16]
   2d164:	ldrh	r3, [r3, #8]
   2d168:	ldrh	r2, [fp, #-24]	; 0xffffffe8
   2d16c:	cmp	r2, r3
   2d170:	bcc	2d188 <flatcc_builder_default_alloc@@Base+0x588>
   2d174:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   2d178:	add	r3, r3, #1
   2d17c:	uxth	r2, r3
   2d180:	ldr	r3, [fp, #-16]
   2d184:	strh	r2, [r3, #8]
   2d188:	ldr	r3, [fp, #-16]
   2d18c:	ldr	r2, [r3, #16]
   2d190:	ldr	r3, [fp, #-8]
   2d194:	add	r3, r2, r3
   2d198:	mov	r0, r3
   2d19c:	sub	sp, fp, #4
   2d1a0:	ldr	fp, [sp]
   2d1a4:	add	sp, sp, #4
   2d1a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d1ac:	str	fp, [sp, #-8]!
   2d1b0:	str	lr, [sp, #4]
   2d1b4:	add	fp, sp, #4
   2d1b8:	sub	sp, sp, #16
   2d1bc:	str	r0, [fp, #-16]
   2d1c0:	mov	r3, r1
   2d1c4:	strh	r3, [fp, #-18]	; 0xffffffee
   2d1c8:	ldr	r3, [fp, #-16]
   2d1cc:	ldr	r3, [r3, #20]
   2d1d0:	add	r3, r3, #3
   2d1d4:	bic	r3, r3, #3
   2d1d8:	str	r3, [fp, #-8]
   2d1dc:	ldr	r3, [fp, #-8]
   2d1e0:	add	r2, r3, #4
   2d1e4:	ldr	r3, [fp, #-16]
   2d1e8:	str	r2, [r3, #20]
   2d1ec:	ldr	r3, [fp, #-16]
   2d1f0:	ldr	r2, [r3, #20]
   2d1f4:	ldr	r3, [fp, #-16]
   2d1f8:	ldr	r3, [r3, #24]
   2d1fc:	cmp	r2, r3
   2d200:	bls	2d230 <flatcc_builder_default_alloc@@Base+0x630>
   2d204:	ldr	r3, [fp, #-16]
   2d208:	ldr	r3, [r3, #20]
   2d20c:	movw	r2, #65532	; 0xfffc
   2d210:	mov	r1, r3
   2d214:	ldr	r0, [fp, #-16]
   2d218:	bl	2ce70 <flatcc_builder_default_alloc@@Base+0x270>
   2d21c:	mov	r3, r0
   2d220:	cmp	r3, #0
   2d224:	beq	2d230 <flatcc_builder_default_alloc@@Base+0x630>
   2d228:	mov	r3, #0
   2d22c:	b	2d2b0 <flatcc_builder_default_alloc@@Base+0x6b0>
   2d230:	ldr	r3, [fp, #-8]
   2d234:	uxth	r2, r3
   2d238:	ldr	r3, [fp, #-16]
   2d23c:	ldr	r1, [r3, #4]
   2d240:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2d244:	lsl	r3, r3, #1
   2d248:	add	r3, r1, r3
   2d24c:	add	r2, r2, #4
   2d250:	uxth	r2, r2
   2d254:	strh	r2, [r3]
   2d258:	ldr	r3, [fp, #-16]
   2d25c:	ldrh	r3, [r3, #8]
   2d260:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2d264:	cmp	r2, r3
   2d268:	bcc	2d280 <flatcc_builder_default_alloc@@Base+0x680>
   2d26c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2d270:	add	r3, r3, #1
   2d274:	uxth	r2, r3
   2d278:	ldr	r3, [fp, #-16]
   2d27c:	strh	r2, [r3, #8]
   2d280:	ldr	r3, [fp, #-16]
   2d284:	ldr	r3, [r3]
   2d288:	add	r1, r3, #2
   2d28c:	ldr	r2, [fp, #-16]
   2d290:	str	r1, [r2]
   2d294:	ldr	r2, [fp, #-8]
   2d298:	uxth	r2, r2
   2d29c:	strh	r2, [r3]
   2d2a0:	ldr	r3, [fp, #-16]
   2d2a4:	ldr	r2, [r3, #16]
   2d2a8:	ldr	r3, [fp, #-8]
   2d2ac:	add	r3, r2, r3
   2d2b0:	mov	r0, r3
   2d2b4:	sub	sp, fp, #4
   2d2b8:	ldr	fp, [sp]
   2d2bc:	add	sp, sp, #4
   2d2c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d2c4:	str	r4, [sp, #-12]!
   2d2c8:	str	fp, [sp, #4]
   2d2cc:	str	lr, [sp, #8]
   2d2d0:	add	fp, sp, #8
   2d2d4:	sub	sp, sp, #36	; 0x24
   2d2d8:	str	r0, [fp, #-24]	; 0xffffffe8
   2d2dc:	str	r1, [fp, #-28]	; 0xffffffe4
   2d2e0:	str	r2, [fp, #-32]	; 0xffffffe0
   2d2e4:	str	r3, [fp, #-36]	; 0xffffffdc
   2d2e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d2ec:	add	r2, r3, #52	; 0x34
   2d2f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d2f4:	lsl	r3, r3, #3
   2d2f8:	add	r3, r2, r3
   2d2fc:	str	r3, [fp, #-16]
   2d300:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d304:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d308:	add	r2, r2, r3
   2d30c:	ldr	r3, [fp, #-16]
   2d310:	ldr	r3, [r3, #4]
   2d314:	cmp	r2, r3
   2d318:	bls	2d378 <flatcc_builder_default_alloc@@Base+0x778>
   2d31c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d320:	ldr	r4, [r3, #48]	; 0x30
   2d324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d328:	ldr	r0, [r3, #40]	; 0x28
   2d32c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d330:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d334:	add	r2, r2, r3
   2d338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d33c:	str	r3, [sp]
   2d340:	ldr	r3, [fp, #4]
   2d344:	ldr	r1, [fp, #-16]
   2d348:	blx	r4
   2d34c:	mov	r3, r0
   2d350:	cmp	r3, #0
   2d354:	beq	2d378 <flatcc_builder_default_alloc@@Base+0x778>
   2d358:	ldr	r3, [pc, #68]	; 2d3a4 <flatcc_builder_default_alloc@@Base+0x7a4>
   2d35c:	add	r3, pc, r3
   2d360:	mov	r2, #308	; 0x134
   2d364:	ldr	r1, [pc, #60]	; 2d3a8 <flatcc_builder_default_alloc@@Base+0x7a8>
   2d368:	add	r1, pc, r1
   2d36c:	ldr	r0, [pc, #56]	; 2d3ac <flatcc_builder_default_alloc@@Base+0x7ac>
   2d370:	add	r0, pc, r0
   2d374:	bl	145e8 <__assert_fail@plt>
   2d378:	ldr	r3, [fp, #-16]
   2d37c:	ldr	r3, [r3]
   2d380:	mov	r2, r3
   2d384:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d388:	add	r3, r2, r3
   2d38c:	mov	r0, r3
   2d390:	sub	sp, fp, #8
   2d394:	ldr	r4, [sp]
   2d398:	ldr	fp, [sp, #4]
   2d39c:	add	sp, sp, #8
   2d3a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d3a4:	andeq	r4, r2, ip, lsr #7
   2d3a8:	andeq	r3, r2, ip, ror #30
   2d3ac:	andeq	r3, r2, r4, asr #31
   2d3b0:	str	fp, [sp, #-8]!
   2d3b4:	str	lr, [sp, #4]
   2d3b8:	add	fp, sp, #4
   2d3bc:	sub	sp, sp, #24
   2d3c0:	str	r0, [fp, #-16]
   2d3c4:	str	r1, [fp, #-20]	; 0xffffffec
   2d3c8:	ldr	r3, [fp, #-16]
   2d3cc:	ldr	r3, [r3, #32]
   2d3d0:	ldr	r2, [r3, #16]
   2d3d4:	ldr	r3, [fp, #-16]
   2d3d8:	ldr	r3, [r3, #32]
   2d3dc:	ldrh	r3, [r3, #28]
   2d3e0:	lsl	r3, r3, #1
   2d3e4:	add	r3, r2, r3
   2d3e8:	str	r3, [fp, #-8]
   2d3ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d3f0:	add	r3, r3, #2
   2d3f4:	lsl	r3, r3, #1
   2d3f8:	str	r3, [fp, #-12]
   2d3fc:	mov	r3, #1
   2d400:	str	r3, [sp]
   2d404:	ldr	r3, [fp, #-12]
   2d408:	ldr	r2, [fp, #-8]
   2d40c:	mov	r1, #0
   2d410:	ldr	r0, [fp, #-16]
   2d414:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   2d418:	mov	r2, r0
   2d41c:	ldr	r3, [fp, #-16]
   2d420:	str	r2, [r3, #4]
   2d424:	ldr	r3, [fp, #-16]
   2d428:	ldr	r3, [r3, #4]
   2d42c:	cmp	r3, #0
   2d430:	bne	2d43c <flatcc_builder_default_alloc@@Base+0x83c>
   2d434:	mvn	r3, #0
   2d438:	b	2d4b4 <flatcc_builder_default_alloc@@Base+0x8b4>
   2d43c:	ldr	r3, [fp, #-16]
   2d440:	ldr	r3, [r3, #4]
   2d444:	add	r2, r3, #4
   2d448:	ldr	r3, [fp, #-16]
   2d44c:	str	r2, [r3, #4]
   2d450:	ldr	r3, [fp, #-16]
   2d454:	ldr	r3, [r3, #32]
   2d458:	ldr	r3, [r3, #20]
   2d45c:	str	r3, [fp, #-8]
   2d460:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d464:	lsl	r3, r3, #1
   2d468:	add	r3, r3, #1
   2d46c:	str	r3, [fp, #-12]
   2d470:	mov	r3, #0
   2d474:	str	r3, [sp]
   2d478:	ldr	r3, [fp, #-12]
   2d47c:	ldr	r2, [fp, #-8]
   2d480:	mov	r1, #3
   2d484:	ldr	r0, [fp, #-16]
   2d488:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   2d48c:	mov	r2, r0
   2d490:	ldr	r3, [fp, #-16]
   2d494:	str	r2, [r3]
   2d498:	ldr	r3, [fp, #-16]
   2d49c:	ldr	r3, [r3]
   2d4a0:	cmp	r3, #0
   2d4a4:	bne	2d4b0 <flatcc_builder_default_alloc@@Base+0x8b0>
   2d4a8:	mvn	r3, #0
   2d4ac:	b	2d4b4 <flatcc_builder_default_alloc@@Base+0x8b4>
   2d4b0:	mov	r3, #0
   2d4b4:	mov	r0, r3
   2d4b8:	sub	sp, fp, #4
   2d4bc:	ldr	fp, [sp]
   2d4c0:	add	sp, sp, #4
   2d4c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2d4c8:	str	r4, [sp, #-12]!
   2d4cc:	str	fp, [sp, #4]
   2d4d0:	str	lr, [sp, #8]
   2d4d4:	add	fp, sp, #8
   2d4d8:	sub	sp, sp, #36	; 0x24
   2d4dc:	str	r0, [fp, #-32]	; 0xffffffe0
   2d4e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d4e4:	add	r3, r3, #52	; 0x34
   2d4e8:	add	r3, r3, #40	; 0x28
   2d4ec:	str	r3, [fp, #-24]	; 0xffffffe8
   2d4f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d4f4:	ldr	r3, [r3, #124]	; 0x7c
   2d4f8:	cmp	r3, #0
   2d4fc:	beq	2d520 <flatcc_builder_default_alloc@@Base+0x920>
   2d500:	ldr	r3, [pc, #292]	; 2d62c <flatcc_builder_default_alloc@@Base+0xa2c>
   2d504:	add	r3, pc, r3
   2d508:	movw	r2, #342	; 0x156
   2d50c:	ldr	r1, [pc, #284]	; 2d630 <flatcc_builder_default_alloc@@Base+0xa30>
   2d510:	add	r1, pc, r1
   2d514:	ldr	r0, [pc, #280]	; 2d634 <flatcc_builder_default_alloc@@Base+0xa34>
   2d518:	add	r0, pc, r0
   2d51c:	bl	145e8 <__assert_fail@plt>
   2d520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d524:	ldr	r2, [r3, #124]	; 0x7c
   2d528:	mov	r3, #0
   2d52c:	str	r3, [sp]
   2d530:	mov	r3, #16
   2d534:	mov	r1, #6
   2d538:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d53c:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   2d540:	mov	r3, r0
   2d544:	cmp	r3, #0
   2d548:	bne	2d554 <flatcc_builder_default_alloc@@Base+0x954>
   2d54c:	mvn	r3, #0
   2d550:	b	2d614 <flatcc_builder_default_alloc@@Base+0xa14>
   2d554:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d558:	mov	r2, #16
   2d55c:	str	r2, [r3, #124]	; 0x7c
   2d560:	mov	r3, #256	; 0x100
   2d564:	str	r3, [fp, #-16]
   2d568:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d56c:	ldr	r4, [r3, #48]	; 0x30
   2d570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d574:	ldr	r0, [r3, #40]	; 0x28
   2d578:	mov	r3, #5
   2d57c:	str	r3, [sp]
   2d580:	mov	r3, #1
   2d584:	ldr	r2, [fp, #-16]
   2d588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d58c:	blx	r4
   2d590:	mov	r3, r0
   2d594:	cmp	r3, #0
   2d598:	beq	2d5b0 <flatcc_builder_default_alloc@@Base+0x9b0>
   2d59c:	mvn	r3, #0
   2d5a0:	b	2d614 <flatcc_builder_default_alloc@@Base+0xa14>
   2d5a4:	ldr	r3, [fp, #-16]
   2d5a8:	lsl	r3, r3, #1
   2d5ac:	str	r3, [fp, #-16]
   2d5b0:	ldr	r3, [fp, #-16]
   2d5b4:	lsl	r2, r3, #1
   2d5b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5bc:	ldr	r3, [r3, #4]
   2d5c0:	cmp	r2, r3
   2d5c4:	bls	2d5a4 <flatcc_builder_default_alloc@@Base+0x9a4>
   2d5c8:	ldr	r3, [fp, #-16]
   2d5cc:	lsr	r3, r3, #2
   2d5d0:	str	r3, [fp, #-16]
   2d5d4:	mov	r3, #0
   2d5d8:	str	r3, [fp, #-20]	; 0xffffffec
   2d5dc:	b	2d5ec <flatcc_builder_default_alloc@@Base+0x9ec>
   2d5e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d5e4:	add	r3, r3, #1
   2d5e8:	str	r3, [fp, #-20]	; 0xffffffec
   2d5ec:	mov	r2, #1
   2d5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d5f4:	lsl	r3, r2, r3
   2d5f8:	ldr	r2, [fp, #-16]
   2d5fc:	cmp	r2, r3
   2d600:	bhi	2d5e0 <flatcc_builder_default_alloc@@Base+0x9e0>
   2d604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d608:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d60c:	str	r2, [r3, #116]	; 0x74
   2d610:	mov	r3, #0
   2d614:	mov	r0, r3
   2d618:	sub	sp, fp, #8
   2d61c:	ldr	r4, [sp]
   2d620:	ldr	fp, [sp, #4]
   2d624:	add	sp, sp, #8
   2d628:	pop	{pc}		; (ldr pc, [sp], #4)
   2d62c:	strdeq	r4, [r2], -r8
   2d630:	andeq	r3, r2, r4, asr #27
   2d634:	andeq	r3, r2, r0, lsr #28
   2d638:	str	fp, [sp, #-8]!
   2d63c:	str	lr, [sp, #4]
   2d640:	add	fp, sp, #4
   2d644:	sub	sp, sp, #16
   2d648:	str	r0, [fp, #-16]
   2d64c:	str	r1, [fp, #-20]	; 0xffffffec
   2d650:	ldr	r3, [fp, #-16]
   2d654:	ldr	r3, [r3, #116]	; 0x74
   2d658:	cmp	r3, #0
   2d65c:	bne	2d67c <flatcc_builder_default_alloc@@Base+0xa7c>
   2d660:	ldr	r0, [fp, #-16]
   2d664:	bl	2d4c8 <flatcc_builder_default_alloc@@Base+0x8c8>
   2d668:	mov	r3, r0
   2d66c:	cmp	r3, #0
   2d670:	beq	2d67c <flatcc_builder_default_alloc@@Base+0xa7c>
   2d674:	mov	r3, #0
   2d678:	b	2d6a8 <flatcc_builder_default_alloc@@Base+0xaa8>
   2d67c:	ldr	r3, [fp, #-16]
   2d680:	ldr	r3, [r3, #92]	; 0x5c
   2d684:	str	r3, [fp, #-8]
   2d688:	ldr	r3, [fp, #-16]
   2d68c:	ldr	r3, [r3, #116]	; 0x74
   2d690:	rsb	r3, r3, #32
   2d694:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d698:	lsr	r3, r2, r3
   2d69c:	lsl	r3, r3, #2
   2d6a0:	ldr	r2, [fp, #-8]
   2d6a4:	add	r3, r2, r3
   2d6a8:	mov	r0, r3
   2d6ac:	sub	sp, fp, #4
   2d6b0:	ldr	fp, [sp]
   2d6b4:	add	sp, sp, #4
   2d6b8:	pop	{pc}		; (ldr pc, [sp], #4)

0002d6bc <flatcc_builder_flush_vtable_cache@@Base>:
   2d6bc:	str	fp, [sp, #-8]!
   2d6c0:	str	lr, [sp, #4]
   2d6c4:	add	fp, sp, #4
   2d6c8:	sub	sp, sp, #16
   2d6cc:	str	r0, [fp, #-16]
   2d6d0:	ldr	r3, [fp, #-16]
   2d6d4:	add	r3, r3, #52	; 0x34
   2d6d8:	add	r3, r3, #40	; 0x28
   2d6dc:	str	r3, [fp, #-8]
   2d6e0:	ldr	r3, [fp, #-16]
   2d6e4:	ldr	r3, [r3, #116]	; 0x74
   2d6e8:	cmp	r3, #0
   2d6ec:	beq	2d728 <flatcc_builder_flush_vtable_cache@@Base+0x6c>
   2d6f0:	ldr	r3, [fp, #-8]
   2d6f4:	ldr	r0, [r3]
   2d6f8:	ldr	r3, [fp, #-8]
   2d6fc:	ldr	r3, [r3, #4]
   2d700:	mov	r2, r3
   2d704:	mov	r1, #0
   2d708:	bl	14594 <memset@plt>
   2d70c:	ldr	r3, [fp, #-16]
   2d710:	mov	r2, #16
   2d714:	str	r2, [r3, #124]	; 0x7c
   2d718:	ldr	r3, [fp, #-16]
   2d71c:	mov	r2, #0
   2d720:	str	r2, [r3, #120]	; 0x78
   2d724:	b	2d72c <flatcc_builder_flush_vtable_cache@@Base+0x70>
   2d728:	nop	{0}
   2d72c:	sub	sp, fp, #4
   2d730:	ldr	fp, [sp]
   2d734:	add	sp, sp, #4
   2d738:	pop	{pc}		; (ldr pc, [sp], #4)

0002d73c <flatcc_builder_custom_init@@Base>:
   2d73c:	str	r4, [sp, #-12]!
   2d740:	str	fp, [sp, #4]
   2d744:	str	lr, [sp, #8]
   2d748:	add	fp, sp, #8
   2d74c:	sub	sp, sp, #20
   2d750:	str	r0, [fp, #-16]
   2d754:	str	r1, [fp, #-20]	; 0xffffffec
   2d758:	str	r2, [fp, #-24]	; 0xffffffe8
   2d75c:	str	r3, [fp, #-28]	; 0xffffffe4
   2d760:	ldr	r4, [pc, #164]	; 2d80c <flatcc_builder_custom_init@@Base+0xd0>
   2d764:	add	r4, pc, r4
   2d768:	mov	r2, #232	; 0xe8
   2d76c:	mov	r1, #0
   2d770:	ldr	r0, [fp, #-16]
   2d774:	bl	14594 <memset@plt>
   2d778:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d77c:	cmp	r3, #0
   2d780:	bne	2d7a8 <flatcc_builder_custom_init@@Base+0x6c>
   2d784:	ldr	r3, [fp, #-16]
   2d788:	mov	r2, #1
   2d78c:	str	r2, [r3, #184]	; 0xb8
   2d790:	ldr	r3, [pc, #120]	; 2d810 <flatcc_builder_custom_init@@Base+0xd4>
   2d794:	ldr	r3, [r4, r3]
   2d798:	str	r3, [fp, #-20]	; 0xffffffec
   2d79c:	ldr	r3, [fp, #-16]
   2d7a0:	add	r3, r3, #188	; 0xbc
   2d7a4:	str	r3, [fp, #-24]	; 0xffffffe8
   2d7a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d7ac:	cmp	r3, #0
   2d7b0:	bne	2d7c0 <flatcc_builder_custom_init@@Base+0x84>
   2d7b4:	ldr	r3, [pc, #88]	; 2d814 <flatcc_builder_custom_init@@Base+0xd8>
   2d7b8:	ldr	r3, [r4, r3]
   2d7bc:	str	r3, [fp, #-28]	; 0xffffffe4
   2d7c0:	ldr	r3, [fp, #-16]
   2d7c4:	ldr	r2, [fp, #4]
   2d7c8:	str	r2, [r3, #40]	; 0x28
   2d7cc:	ldr	r3, [fp, #-16]
   2d7d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d7d4:	str	r2, [r3, #48]	; 0x30
   2d7d8:	ldr	r3, [fp, #-16]
   2d7dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d7e0:	str	r2, [r3, #36]	; 0x24
   2d7e4:	ldr	r3, [fp, #-16]
   2d7e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d7ec:	str	r2, [r3, #44]	; 0x2c
   2d7f0:	mov	r3, #0
   2d7f4:	mov	r0, r3
   2d7f8:	sub	sp, fp, #8
   2d7fc:	ldr	r4, [sp]
   2d800:	ldr	fp, [sp, #4]
   2d804:	add	sp, sp, #8
   2d808:	pop	{pc}		; (ldr pc, [sp], #4)
   2d80c:	muleq	r3, r4, r8
   2d810:	andeq	r0, r0, r8, ror r0
   2d814:	andeq	r0, r0, r0, ror r0

0002d818 <flatcc_builder_init@@Base>:
   2d818:	str	fp, [sp, #-8]!
   2d81c:	str	lr, [sp, #4]
   2d820:	add	fp, sp, #4
   2d824:	sub	sp, sp, #16
   2d828:	str	r0, [fp, #-8]
   2d82c:	mov	r3, #0
   2d830:	str	r3, [sp]
   2d834:	mov	r3, #0
   2d838:	mov	r2, #0
   2d83c:	mov	r1, #0
   2d840:	ldr	r0, [fp, #-8]
   2d844:	bl	2d73c <flatcc_builder_custom_init@@Base>
   2d848:	mov	r3, r0
   2d84c:	mov	r0, r3
   2d850:	sub	sp, fp, #4
   2d854:	ldr	fp, [sp]
   2d858:	add	sp, sp, #4
   2d85c:	pop	{pc}		; (ldr pc, [sp], #4)

0002d860 <flatcc_builder_custom_reset@@Base>:
   2d860:	str	r4, [sp, #-12]!
   2d864:	str	fp, [sp, #4]
   2d868:	str	lr, [sp, #8]
   2d86c:	add	fp, sp, #8
   2d870:	sub	sp, sp, #36	; 0x24
   2d874:	str	r0, [fp, #-24]	; 0xffffffe8
   2d878:	str	r1, [fp, #-28]	; 0xffffffe4
   2d87c:	str	r2, [fp, #-32]	; 0xffffffe0
   2d880:	mov	r3, #0
   2d884:	str	r3, [fp, #-16]
   2d888:	b	2d964 <flatcc_builder_custom_reset@@Base+0x104>
   2d88c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d890:	add	r2, r3, #52	; 0x34
   2d894:	ldr	r3, [fp, #-16]
   2d898:	lsl	r3, r3, #3
   2d89c:	add	r3, r2, r3
   2d8a0:	str	r3, [fp, #-20]	; 0xffffffec
   2d8a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d8a8:	ldr	r3, [r3]
   2d8ac:	cmp	r3, #0
   2d8b0:	beq	2d928 <flatcc_builder_custom_reset@@Base+0xc8>
   2d8b4:	ldr	r3, [fp, #-16]
   2d8b8:	cmp	r3, #5
   2d8bc:	beq	2d908 <flatcc_builder_custom_reset@@Base+0xa8>
   2d8c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d8c4:	cmp	r3, #0
   2d8c8:	beq	2d908 <flatcc_builder_custom_reset@@Base+0xa8>
   2d8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d8d0:	ldr	r4, [r3, #48]	; 0x30
   2d8d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d8d8:	ldr	r0, [r3, #40]	; 0x28
   2d8dc:	ldr	r3, [fp, #-16]
   2d8e0:	str	r3, [sp]
   2d8e4:	mov	r3, #1
   2d8e8:	mov	r2, #1
   2d8ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d8f0:	blx	r4
   2d8f4:	mov	r3, r0
   2d8f8:	cmp	r3, #0
   2d8fc:	beq	2d908 <flatcc_builder_custom_reset@@Base+0xa8>
   2d900:	mvn	r3, #0
   2d904:	b	2da94 <flatcc_builder_custom_reset@@Base+0x234>
   2d908:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d90c:	ldr	r0, [r3]
   2d910:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d914:	ldr	r3, [r3, #4]
   2d918:	mov	r2, r3
   2d91c:	mov	r1, #0
   2d920:	bl	14594 <memset@plt>
   2d924:	b	2d958 <flatcc_builder_custom_reset@@Base+0xf8>
   2d928:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d92c:	ldr	r3, [r3, #4]
   2d930:	cmp	r3, #0
   2d934:	beq	2d958 <flatcc_builder_custom_reset@@Base+0xf8>
   2d938:	ldr	r3, [pc, #364]	; 2daac <flatcc_builder_custom_reset@@Base+0x24c>
   2d93c:	add	r3, pc, r3
   2d940:	movw	r2, #434	; 0x1b2
   2d944:	ldr	r1, [pc, #356]	; 2dab0 <flatcc_builder_custom_reset@@Base+0x250>
   2d948:	add	r1, pc, r1
   2d94c:	ldr	r0, [pc, #352]	; 2dab4 <flatcc_builder_custom_reset@@Base+0x254>
   2d950:	add	r0, pc, r0
   2d954:	bl	145e8 <__assert_fail@plt>
   2d958:	ldr	r3, [fp, #-16]
   2d95c:	add	r3, r3, #1
   2d960:	str	r3, [fp, #-16]
   2d964:	ldr	r3, [fp, #-16]
   2d968:	cmp	r3, #7
   2d96c:	ble	2d88c <flatcc_builder_custom_reset@@Base+0x2c>
   2d970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d974:	mov	r2, #0
   2d978:	str	r2, [r3, #120]	; 0x78
   2d97c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d980:	ldr	r3, [r3, #124]	; 0x7c
   2d984:	cmp	r3, #0
   2d988:	beq	2d998 <flatcc_builder_custom_reset@@Base+0x138>
   2d98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d990:	mov	r2, #16
   2d994:	str	r2, [r3, #124]	; 0x7c
   2d998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d99c:	mov	r2, #0
   2d9a0:	strh	r2, [r3, #128]	; 0x80
   2d9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9a8:	mov	r2, #0
   2d9ac:	str	r2, [r3, #136]	; 0x88
   2d9b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9b4:	mov	r2, #0
   2d9b8:	str	r2, [r3, #140]	; 0x8c
   2d9bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9c0:	mov	r2, #0
   2d9c4:	str	r2, [r3, #156]	; 0x9c
   2d9c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9cc:	mov	r2, #0
   2d9d0:	str	r2, [r3, #160]	; 0xa0
   2d9d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9d8:	mov	r2, #0
   2d9dc:	str	r2, [r3, #20]
   2d9e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9e4:	mov	r2, #0
   2d9e8:	str	r2, [r3, #24]
   2d9ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9f0:	mov	r2, #0
   2d9f4:	str	r2, [r3, #148]	; 0x94
   2d9f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9fc:	mov	r2, #0
   2da00:	str	r2, [r3, #152]	; 0x98
   2da04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da08:	ldr	r2, [r3, #60]	; 0x3c
   2da0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da10:	str	r2, [r3, #16]
   2da14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da18:	ldr	r2, [r3, #76]	; 0x4c
   2da1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da20:	str	r2, [r3]
   2da24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da28:	ldr	r2, [r3, #52]	; 0x34
   2da2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da30:	str	r2, [r3, #4]
   2da34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da38:	mov	r2, #0
   2da3c:	str	r2, [r3, #32]
   2da40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2da44:	cmp	r3, #0
   2da48:	beq	2da70 <flatcc_builder_custom_reset@@Base+0x210>
   2da4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da50:	mov	r2, #0
   2da54:	str	r2, [r3, #172]	; 0xac
   2da58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da5c:	mov	r2, #0
   2da60:	str	r2, [r3, #176]	; 0xb0
   2da64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da68:	mov	r2, #0
   2da6c:	str	r2, [r3, #180]	; 0xb4
   2da70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da74:	ldr	r3, [r3, #184]	; 0xb8
   2da78:	cmp	r3, #0
   2da7c:	beq	2da90 <flatcc_builder_custom_reset@@Base+0x230>
   2da80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da84:	add	r3, r3, #188	; 0xbc
   2da88:	mov	r0, r3
   2da8c:	bl	336f4 <flatcc_emitter_reset@@Base>
   2da90:	mov	r3, #0
   2da94:	mov	r0, r3
   2da98:	sub	sp, fp, #8
   2da9c:	ldr	r4, [sp]
   2daa0:	ldr	fp, [sp, #4]
   2daa4:	add	sp, sp, #8
   2daa8:	pop	{pc}		; (ldr pc, [sp], #4)
   2daac:	ldrdeq	r3, [r2], -ip
   2dab0:	andeq	r3, r2, ip, lsl #19
   2dab4:	strdeq	r3, [r2], -r8

0002dab8 <flatcc_builder_reset@@Base>:
   2dab8:	str	fp, [sp, #-8]!
   2dabc:	str	lr, [sp, #4]
   2dac0:	add	fp, sp, #4
   2dac4:	sub	sp, sp, #8
   2dac8:	str	r0, [fp, #-8]
   2dacc:	mov	r2, #0
   2dad0:	mov	r1, #0
   2dad4:	ldr	r0, [fp, #-8]
   2dad8:	bl	2d860 <flatcc_builder_custom_reset@@Base>
   2dadc:	mov	r3, r0
   2dae0:	mov	r0, r3
   2dae4:	sub	sp, fp, #4
   2dae8:	ldr	fp, [sp]
   2daec:	add	sp, sp, #4
   2daf0:	pop	{pc}		; (ldr pc, [sp], #4)

0002daf4 <flatcc_builder_clear@@Base>:
   2daf4:	str	r4, [sp, #-12]!
   2daf8:	str	fp, [sp, #4]
   2dafc:	str	lr, [sp, #8]
   2db00:	add	fp, sp, #8
   2db04:	sub	sp, sp, #28
   2db08:	str	r0, [fp, #-24]	; 0xffffffe8
   2db0c:	mov	r3, #0
   2db10:	str	r3, [fp, #-16]
   2db14:	b	2db64 <flatcc_builder_clear@@Base+0x70>
   2db18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2db1c:	add	r2, r3, #52	; 0x34
   2db20:	ldr	r3, [fp, #-16]
   2db24:	lsl	r3, r3, #3
   2db28:	add	r3, r2, r3
   2db2c:	str	r3, [fp, #-20]	; 0xffffffec
   2db30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2db34:	ldr	r4, [r3, #48]	; 0x30
   2db38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2db3c:	ldr	r0, [r3, #40]	; 0x28
   2db40:	ldr	r3, [fp, #-16]
   2db44:	str	r3, [sp]
   2db48:	mov	r3, #0
   2db4c:	mov	r2, #0
   2db50:	ldr	r1, [fp, #-20]	; 0xffffffec
   2db54:	blx	r4
   2db58:	ldr	r3, [fp, #-16]
   2db5c:	add	r3, r3, #1
   2db60:	str	r3, [fp, #-16]
   2db64:	ldr	r3, [fp, #-16]
   2db68:	cmp	r3, #7
   2db6c:	ble	2db18 <flatcc_builder_clear@@Base+0x24>
   2db70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2db74:	ldr	r3, [r3, #184]	; 0xb8
   2db78:	cmp	r3, #0
   2db7c:	beq	2db90 <flatcc_builder_clear@@Base+0x9c>
   2db80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2db84:	add	r3, r3, #188	; 0xbc
   2db88:	mov	r0, r3
   2db8c:	bl	33890 <flatcc_emitter_clear@@Base>
   2db90:	mov	r2, #232	; 0xe8
   2db94:	mov	r1, #0
   2db98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db9c:	bl	14594 <memset@plt>
   2dba0:	nop	{0}
   2dba4:	sub	sp, fp, #8
   2dba8:	ldr	r4, [sp]
   2dbac:	ldr	fp, [sp, #4]
   2dbb0:	add	sp, sp, #8
   2dbb4:	pop	{pc}		; (ldr pc, [sp], #4)
   2dbb8:	push	{fp}		; (str fp, [sp, #-4]!)
   2dbbc:	add	fp, sp, #0
   2dbc0:	sub	sp, sp, #12
   2dbc4:	str	r0, [fp, #-8]
   2dbc8:	mov	r3, r1
   2dbcc:	strh	r3, [fp, #-10]
   2dbd0:	ldr	r3, [fp, #-8]
   2dbd4:	ldrh	r3, [r3, #128]	; 0x80
   2dbd8:	ldrh	r2, [fp, #-10]
   2dbdc:	cmp	r2, r3
   2dbe0:	bls	2dbf0 <flatcc_builder_clear@@Base+0xfc>
   2dbe4:	ldr	r3, [fp, #-8]
   2dbe8:	ldrh	r2, [fp, #-10]
   2dbec:	strh	r2, [r3, #128]	; 0x80
   2dbf0:	nop	{0}
   2dbf4:	add	sp, fp, #0
   2dbf8:	pop	{fp}		; (ldr fp, [sp], #4)
   2dbfc:	bx	lr
   2dc00:	push	{fp}		; (str fp, [sp, #-4]!)
   2dc04:	add	fp, sp, #0
   2dc08:	sub	sp, sp, #12
   2dc0c:	str	r0, [fp, #-8]
   2dc10:	mov	r3, r1
   2dc14:	strh	r3, [fp, #-10]
   2dc18:	ldr	r3, [fp, #-8]
   2dc1c:	ldrh	r3, [r3]
   2dc20:	ldrh	r2, [fp, #-10]
   2dc24:	cmp	r2, r3
   2dc28:	bls	2dc38 <flatcc_builder_clear@@Base+0x144>
   2dc2c:	ldr	r3, [fp, #-8]
   2dc30:	ldrh	r2, [fp, #-10]
   2dc34:	strh	r2, [r3]
   2dc38:	nop	{0}
   2dc3c:	add	sp, fp, #0
   2dc40:	pop	{fp}		; (ldr fp, [sp], #4)
   2dc44:	bx	lr

0002dc48 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2dc48:	str	fp, [sp, #-8]!
   2dc4c:	str	lr, [sp, #4]
   2dc50:	add	fp, sp, #4
   2dc54:	sub	sp, sp, #24
   2dc58:	str	r0, [fp, #-16]
   2dc5c:	str	r1, [fp, #-20]	; 0xffffffec
   2dc60:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dc64:	add	r3, r3, #3
   2dc68:	bic	r3, r3, #3
   2dc6c:	add	r3, r3, #4
   2dc70:	str	r3, [fp, #-20]	; 0xffffffec
   2dc74:	ldr	r3, [fp, #-16]
   2dc78:	ldr	r2, [r3, #228]	; 0xe4
   2dc7c:	mov	r3, #0
   2dc80:	str	r3, [sp]
   2dc84:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dc88:	mov	r1, #7
   2dc8c:	ldr	r0, [fp, #-16]
   2dc90:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   2dc94:	str	r0, [fp, #-8]
   2dc98:	ldr	r3, [fp, #-8]
   2dc9c:	cmp	r3, #0
   2dca0:	bne	2dcac <flatcc_builder_enter_user_frame_ptr@@Base+0x64>
   2dca4:	mov	r3, #0
   2dca8:	b	2dd04 <flatcc_builder_enter_user_frame_ptr@@Base+0xbc>
   2dcac:	ldr	r2, [fp, #-20]	; 0xffffffec
   2dcb0:	mov	r1, #0
   2dcb4:	ldr	r0, [fp, #-8]
   2dcb8:	bl	14594 <memset@plt>
   2dcbc:	ldr	r3, [fp, #-8]
   2dcc0:	add	r2, r3, #4
   2dcc4:	str	r2, [fp, #-8]
   2dcc8:	ldr	r2, [fp, #-16]
   2dccc:	ldr	r2, [r2, #224]	; 0xe0
   2dcd0:	str	r2, [r3]
   2dcd4:	ldr	r3, [fp, #-16]
   2dcd8:	ldr	r3, [r3, #228]	; 0xe4
   2dcdc:	add	r2, r3, #4
   2dce0:	ldr	r3, [fp, #-16]
   2dce4:	str	r2, [r3, #224]	; 0xe0
   2dce8:	ldr	r3, [fp, #-16]
   2dcec:	ldr	r2, [r3, #228]	; 0xe4
   2dcf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dcf4:	add	r2, r2, r3
   2dcf8:	ldr	r3, [fp, #-16]
   2dcfc:	str	r2, [r3, #228]	; 0xe4
   2dd00:	ldr	r3, [fp, #-8]
   2dd04:	mov	r0, r3
   2dd08:	sub	sp, fp, #4
   2dd0c:	ldr	fp, [sp]
   2dd10:	add	sp, sp, #4
   2dd14:	pop	{pc}		; (ldr pc, [sp], #4)

0002dd18 <flatcc_builder_enter_user_frame@@Base>:
   2dd18:	str	fp, [sp, #-8]!
   2dd1c:	str	lr, [sp, #4]
   2dd20:	add	fp, sp, #4
   2dd24:	sub	sp, sp, #24
   2dd28:	str	r0, [fp, #-16]
   2dd2c:	str	r1, [fp, #-20]	; 0xffffffec
   2dd30:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dd34:	add	r3, r3, #3
   2dd38:	bic	r3, r3, #3
   2dd3c:	add	r3, r3, #4
   2dd40:	str	r3, [fp, #-20]	; 0xffffffec
   2dd44:	ldr	r3, [fp, #-16]
   2dd48:	ldr	r2, [r3, #228]	; 0xe4
   2dd4c:	mov	r3, #0
   2dd50:	str	r3, [sp]
   2dd54:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dd58:	mov	r1, #7
   2dd5c:	ldr	r0, [fp, #-16]
   2dd60:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   2dd64:	str	r0, [fp, #-8]
   2dd68:	ldr	r3, [fp, #-8]
   2dd6c:	cmp	r3, #0
   2dd70:	bne	2dd7c <flatcc_builder_enter_user_frame@@Base+0x64>
   2dd74:	mov	r3, #0
   2dd78:	b	2ddd8 <flatcc_builder_enter_user_frame@@Base+0xc0>
   2dd7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2dd80:	mov	r1, #0
   2dd84:	ldr	r0, [fp, #-8]
   2dd88:	bl	14594 <memset@plt>
   2dd8c:	ldr	r3, [fp, #-8]
   2dd90:	add	r2, r3, #4
   2dd94:	str	r2, [fp, #-8]
   2dd98:	ldr	r2, [fp, #-16]
   2dd9c:	ldr	r2, [r2, #224]	; 0xe0
   2dda0:	str	r2, [r3]
   2dda4:	ldr	r3, [fp, #-16]
   2dda8:	ldr	r3, [r3, #228]	; 0xe4
   2ddac:	add	r2, r3, #4
   2ddb0:	ldr	r3, [fp, #-16]
   2ddb4:	str	r2, [r3, #224]	; 0xe0
   2ddb8:	ldr	r3, [fp, #-16]
   2ddbc:	ldr	r2, [r3, #228]	; 0xe4
   2ddc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ddc4:	add	r2, r2, r3
   2ddc8:	ldr	r3, [fp, #-16]
   2ddcc:	str	r2, [r3, #228]	; 0xe4
   2ddd0:	ldr	r3, [fp, #-16]
   2ddd4:	ldr	r3, [r3, #224]	; 0xe0
   2ddd8:	mov	r0, r3
   2dddc:	sub	sp, fp, #4
   2dde0:	ldr	fp, [sp]
   2dde4:	add	sp, sp, #4
   2dde8:	pop	{pc}		; (ldr pc, [sp], #4)

0002ddec <flatcc_builder_exit_user_frame@@Base>:
   2ddec:	str	fp, [sp, #-8]!
   2ddf0:	str	lr, [sp, #4]
   2ddf4:	add	fp, sp, #4
   2ddf8:	sub	sp, sp, #16
   2ddfc:	str	r0, [fp, #-16]
   2de00:	ldr	r3, [fp, #-16]
   2de04:	ldr	r3, [r3, #224]	; 0xe0
   2de08:	cmp	r3, #0
   2de0c:	bne	2de30 <flatcc_builder_exit_user_frame@@Base+0x44>
   2de10:	ldr	r3, [pc, #112]	; 2de88 <flatcc_builder_exit_user_frame@@Base+0x9c>
   2de14:	add	r3, pc, r3
   2de18:	movw	r2, #542	; 0x21e
   2de1c:	ldr	r1, [pc, #104]	; 2de8c <flatcc_builder_exit_user_frame@@Base+0xa0>
   2de20:	add	r1, pc, r1
   2de24:	ldr	r0, [pc, #100]	; 2de90 <flatcc_builder_exit_user_frame@@Base+0xa4>
   2de28:	add	r0, pc, r0
   2de2c:	bl	145e8 <__assert_fail@plt>
   2de30:	ldr	r3, [fp, #-16]
   2de34:	ldr	r2, [r3, #108]	; 0x6c
   2de38:	ldr	r3, [fp, #-16]
   2de3c:	ldr	r3, [r3, #224]	; 0xe0
   2de40:	add	r3, r2, r3
   2de44:	str	r3, [fp, #-8]
   2de48:	ldr	r3, [fp, #-16]
   2de4c:	ldr	r3, [r3, #224]	; 0xe0
   2de50:	sub	r2, r3, #4
   2de54:	ldr	r3, [fp, #-16]
   2de58:	str	r2, [r3, #228]	; 0xe4
   2de5c:	ldr	r3, [fp, #-8]
   2de60:	ldr	r2, [r3, #-4]
   2de64:	ldr	r3, [fp, #-16]
   2de68:	str	r2, [r3, #224]	; 0xe0
   2de6c:	ldr	r3, [fp, #-16]
   2de70:	ldr	r3, [r3, #224]	; 0xe0
   2de74:	mov	r0, r3
   2de78:	sub	sp, fp, #4
   2de7c:	ldr	fp, [sp]
   2de80:	add	sp, sp, #4
   2de84:	pop	{pc}		; (ldr pc, [sp], #4)
   2de88:	andeq	r3, r2, r0, lsr #18
   2de8c:			; <UNDEFINED> instruction: 0x000234b4
   2de90:	andeq	r3, r2, r4, lsr r5

0002de94 <flatcc_builder_exit_user_frame_at@@Base>:
   2de94:	str	fp, [sp, #-8]!
   2de98:	str	lr, [sp, #4]
   2de9c:	add	fp, sp, #4
   2dea0:	sub	sp, sp, #8
   2dea4:	str	r0, [fp, #-8]
   2dea8:	str	r1, [fp, #-12]
   2deac:	ldr	r3, [fp, #-8]
   2deb0:	ldr	r3, [r3, #224]	; 0xe0
   2deb4:	ldr	r2, [fp, #-12]
   2deb8:	cmp	r2, r3
   2debc:	bls	2dee0 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   2dec0:	ldr	r3, [pc, #68]	; 2df0c <flatcc_builder_exit_user_frame_at@@Base+0x78>
   2dec4:	add	r3, pc, r3
   2dec8:	movw	r2, #551	; 0x227
   2decc:	ldr	r1, [pc, #60]	; 2df10 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   2ded0:	add	r1, pc, r1
   2ded4:	ldr	r0, [pc, #56]	; 2df14 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   2ded8:	add	r0, pc, r0
   2dedc:	bl	145e8 <__assert_fail@plt>
   2dee0:	ldr	r3, [fp, #-8]
   2dee4:	ldr	r2, [fp, #-12]
   2dee8:	str	r2, [r3, #224]	; 0xe0
   2deec:	ldr	r0, [fp, #-8]
   2def0:	bl	2ddec <flatcc_builder_exit_user_frame@@Base>
   2def4:	mov	r3, r0
   2def8:	mov	r0, r3
   2defc:	sub	sp, fp, #4
   2df00:	ldr	fp, [sp]
   2df04:	add	sp, sp, #4
   2df08:	pop	{pc}		; (ldr pc, [sp], #4)
   2df0c:	muleq	r2, r0, r8
   2df10:	andeq	r3, r2, r4, lsl #8
   2df14:	andeq	r3, r2, r0, lsr #9

0002df18 <flatcc_builder_get_current_user_frame@@Base>:
   2df18:	push	{fp}		; (str fp, [sp, #-4]!)
   2df1c:	add	fp, sp, #0
   2df20:	sub	sp, sp, #12
   2df24:	str	r0, [fp, #-8]
   2df28:	ldr	r3, [fp, #-8]
   2df2c:	ldr	r3, [r3, #224]	; 0xe0
   2df30:	mov	r0, r3
   2df34:	add	sp, fp, #0
   2df38:	pop	{fp}		; (ldr fp, [sp], #4)
   2df3c:	bx	lr

0002df40 <flatcc_builder_get_user_frame_ptr@@Base>:
   2df40:	push	{fp}		; (str fp, [sp, #-4]!)
   2df44:	add	fp, sp, #0
   2df48:	sub	sp, sp, #12
   2df4c:	str	r0, [fp, #-8]
   2df50:	str	r1, [fp, #-12]
   2df54:	ldr	r3, [fp, #-8]
   2df58:	ldr	r2, [r3, #108]	; 0x6c
   2df5c:	ldr	r3, [fp, #-12]
   2df60:	add	r3, r2, r3
   2df64:	mov	r0, r3
   2df68:	add	sp, fp, #0
   2df6c:	pop	{fp}		; (ldr fp, [sp], #4)
   2df70:	bx	lr
   2df74:	str	fp, [sp, #-8]!
   2df78:	str	lr, [sp, #4]
   2df7c:	add	fp, sp, #4
   2df80:	sub	sp, sp, #16
   2df84:	str	r0, [fp, #-8]
   2df88:	mov	r3, r1
   2df8c:	strh	r3, [fp, #-10]
   2df90:	ldr	r3, [fp, #-8]
   2df94:	ldr	r3, [r3, #156]	; 0x9c
   2df98:	add	r2, r3, #1
   2df9c:	ldr	r3, [fp, #-8]
   2dfa0:	str	r2, [r3, #156]	; 0x9c
   2dfa4:	ldr	r3, [fp, #-8]
   2dfa8:	ldr	r2, [r3, #156]	; 0x9c
   2dfac:	ldr	r3, [fp, #-8]
   2dfb0:	ldr	r3, [r3, #160]	; 0xa0
   2dfb4:	cmp	r2, r3
   2dfb8:	ble	2e0ac <flatcc_builder_get_user_frame_ptr@@Base+0x16c>
   2dfbc:	ldr	r3, [fp, #-8]
   2dfc0:	ldr	r3, [r3, #176]	; 0xb0
   2dfc4:	cmp	r3, #0
   2dfc8:	ble	2dfec <flatcc_builder_get_user_frame_ptr@@Base+0xac>
   2dfcc:	ldr	r3, [fp, #-8]
   2dfd0:	ldr	r2, [r3, #156]	; 0x9c
   2dfd4:	ldr	r3, [fp, #-8]
   2dfd8:	ldr	r3, [r3, #176]	; 0xb0
   2dfdc:	cmp	r2, r3
   2dfe0:	ble	2dfec <flatcc_builder_get_user_frame_ptr@@Base+0xac>
   2dfe4:	mvn	r3, #0
   2dfe8:	b	2e14c <flatcc_builder_get_user_frame_ptr@@Base+0x20c>
   2dfec:	ldr	r3, [fp, #-8]
   2dff0:	ldr	r3, [r3, #156]	; 0x9c
   2dff4:	sub	r3, r3, #1
   2dff8:	mov	r2, r3
   2dffc:	mov	r3, r2
   2e000:	lsl	r3, r3, #3
   2e004:	add	r3, r3, r2
   2e008:	lsl	r3, r3, #2
   2e00c:	mov	r2, r3
   2e010:	mov	r3, #0
   2e014:	str	r3, [sp]
   2e018:	mov	r3, #36	; 0x24
   2e01c:	mov	r1, #4
   2e020:	ldr	r0, [fp, #-8]
   2e024:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   2e028:	mov	r2, r0
   2e02c:	ldr	r3, [fp, #-8]
   2e030:	str	r2, [r3, #32]
   2e034:	ldr	r3, [fp, #-8]
   2e038:	ldr	r3, [r3, #32]
   2e03c:	cmp	r3, #0
   2e040:	bne	2e04c <flatcc_builder_get_user_frame_ptr@@Base+0x10c>
   2e044:	mvn	r3, #0
   2e048:	b	2e14c <flatcc_builder_get_user_frame_ptr@@Base+0x20c>
   2e04c:	ldr	r3, [fp, #-8]
   2e050:	ldr	r2, [r3, #88]	; 0x58
   2e054:	movw	r3, #36409	; 0x8e39
   2e058:	movt	r3, #14563	; 0x38e3
   2e05c:	umull	r2, r3, r3, r2
   2e060:	lsr	r3, r3, #3
   2e064:	mov	r2, r3
   2e068:	ldr	r3, [fp, #-8]
   2e06c:	str	r2, [r3, #160]	; 0xa0
   2e070:	ldr	r3, [fp, #-8]
   2e074:	ldr	r3, [r3, #176]	; 0xb0
   2e078:	cmp	r3, #0
   2e07c:	ble	2e0c0 <flatcc_builder_get_user_frame_ptr@@Base+0x180>
   2e080:	ldr	r3, [fp, #-8]
   2e084:	ldr	r2, [r3, #176]	; 0xb0
   2e088:	ldr	r3, [fp, #-8]
   2e08c:	ldr	r3, [r3, #160]	; 0xa0
   2e090:	cmp	r2, r3
   2e094:	bge	2e0c0 <flatcc_builder_get_user_frame_ptr@@Base+0x180>
   2e098:	ldr	r3, [fp, #-8]
   2e09c:	ldr	r2, [r3, #176]	; 0xb0
   2e0a0:	ldr	r3, [fp, #-8]
   2e0a4:	str	r2, [r3, #160]	; 0xa0
   2e0a8:	b	2e0c0 <flatcc_builder_get_user_frame_ptr@@Base+0x180>
   2e0ac:	ldr	r3, [fp, #-8]
   2e0b0:	ldr	r3, [r3, #32]
   2e0b4:	add	r2, r3, #36	; 0x24
   2e0b8:	ldr	r3, [fp, #-8]
   2e0bc:	str	r2, [r3, #32]
   2e0c0:	ldr	r3, [fp, #-8]
   2e0c4:	ldr	r3, [r3, #32]
   2e0c8:	ldr	r2, [fp, #-8]
   2e0cc:	ldr	r2, [r2, #20]
   2e0d0:	str	r2, [r3, #8]
   2e0d4:	ldr	r3, [fp, #-8]
   2e0d8:	ldr	r3, [r3, #32]
   2e0dc:	ldr	r2, [fp, #-8]
   2e0e0:	ldrh	r2, [r2, #130]	; 0x82
   2e0e4:	strh	r2, [r3, #12]
   2e0e8:	ldr	r3, [fp, #-8]
   2e0ec:	ldrh	r2, [fp, #-10]
   2e0f0:	strh	r2, [r3, #130]	; 0x82
   2e0f4:	ldr	r3, [fp, #-8]
   2e0f8:	ldr	r3, [r3, #32]
   2e0fc:	ldr	r2, [fp, #-8]
   2e100:	ldr	r2, [r2, #28]
   2e104:	str	r2, [r3]
   2e108:	ldr	r3, [fp, #-8]
   2e10c:	ldr	r3, [r3, #32]
   2e110:	mvn	r2, #3
   2e114:	str	r2, [r3, #4]
   2e118:	ldr	r3, [fp, #-8]
   2e11c:	ldr	r2, [r3, #28]
   2e120:	ldr	r3, [fp, #-8]
   2e124:	ldr	r3, [r3, #20]
   2e128:	add	r3, r2, r3
   2e12c:	add	r3, r3, #7
   2e130:	bic	r2, r3, #7
   2e134:	ldr	r3, [fp, #-8]
   2e138:	str	r2, [r3, #28]
   2e13c:	ldr	r3, [fp, #-8]
   2e140:	mov	r2, #0
   2e144:	str	r2, [r3, #20]
   2e148:	mov	r3, #0
   2e14c:	mov	r0, r3
   2e150:	sub	sp, fp, #4
   2e154:	ldr	fp, [sp]
   2e158:	add	sp, sp, #4
   2e15c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e160:	str	fp, [sp, #-8]!
   2e164:	str	lr, [sp, #4]
   2e168:	add	fp, sp, #4
   2e16c:	sub	sp, sp, #8
   2e170:	str	r0, [fp, #-8]
   2e174:	ldr	r3, [fp, #-8]
   2e178:	ldr	r0, [r3, #16]
   2e17c:	ldr	r3, [fp, #-8]
   2e180:	ldr	r3, [r3, #20]
   2e184:	mov	r2, r3
   2e188:	mov	r1, #0
   2e18c:	bl	14594 <memset@plt>
   2e190:	ldr	r3, [fp, #-8]
   2e194:	ldr	r3, [r3, #32]
   2e198:	ldr	r2, [r3, #8]
   2e19c:	ldr	r3, [fp, #-8]
   2e1a0:	str	r2, [r3, #20]
   2e1a4:	ldr	r3, [fp, #-8]
   2e1a8:	ldr	r3, [r3, #32]
   2e1ac:	ldr	r2, [r3]
   2e1b0:	ldr	r3, [fp, #-8]
   2e1b4:	str	r2, [r3, #28]
   2e1b8:	ldr	r3, [fp, #-8]
   2e1bc:	ldr	r3, [r3, #32]
   2e1c0:	ldr	r3, [r3, #4]
   2e1c4:	mov	r1, r3
   2e1c8:	ldr	r0, [fp, #-8]
   2e1cc:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   2e1d0:	ldr	r3, [fp, #-8]
   2e1d4:	ldrh	r3, [r3, #130]	; 0x82
   2e1d8:	mov	r1, r3
   2e1dc:	ldr	r0, [fp, #-8]
   2e1e0:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   2e1e4:	ldr	r3, [fp, #-8]
   2e1e8:	ldr	r3, [r3, #32]
   2e1ec:	ldrh	r2, [r3, #12]
   2e1f0:	ldr	r3, [fp, #-8]
   2e1f4:	strh	r2, [r3, #130]	; 0x82
   2e1f8:	ldr	r3, [fp, #-8]
   2e1fc:	ldr	r3, [r3, #32]
   2e200:	sub	r2, r3, #36	; 0x24
   2e204:	ldr	r3, [fp, #-8]
   2e208:	str	r2, [r3, #32]
   2e20c:	ldr	r3, [fp, #-8]
   2e210:	ldr	r3, [r3, #156]	; 0x9c
   2e214:	sub	r2, r3, #1
   2e218:	ldr	r3, [fp, #-8]
   2e21c:	str	r2, [r3, #156]	; 0x9c
   2e220:	nop	{0}
   2e224:	sub	sp, fp, #4
   2e228:	ldr	fp, [sp]
   2e22c:	add	sp, sp, #4
   2e230:	pop	{pc}		; (ldr pc, [sp], #4)
   2e234:	push	{fp}		; (str fp, [sp, #-4]!)
   2e238:	add	fp, sp, #0
   2e23c:	sub	sp, sp, #20
   2e240:	str	r0, [fp, #-8]
   2e244:	str	r1, [fp, #-12]
   2e248:	mov	r3, r2
   2e24c:	strh	r3, [fp, #-14]
   2e250:	ldr	r3, [fp, #-8]
   2e254:	ldr	r3, [r3, #136]	; 0x88
   2e258:	mov	r2, r3
   2e25c:	ldr	r3, [fp, #-12]
   2e260:	sub	r3, r2, r3
   2e264:	ldrh	r2, [fp, #-14]
   2e268:	sub	r2, r2, #1
   2e26c:	and	r3, r3, r2
   2e270:	mov	r0, r3
   2e274:	add	sp, fp, #0
   2e278:	pop	{fp}		; (ldr fp, [sp], #4)
   2e27c:	bx	lr
   2e280:	push	{fp}		; (str fp, [sp, #-4]!)
   2e284:	add	fp, sp, #0
   2e288:	sub	sp, sp, #12
   2e28c:	str	r0, [fp, #-8]
   2e290:	mov	r3, r1
   2e294:	strh	r3, [fp, #-10]
   2e298:	ldr	r3, [fp, #-8]
   2e29c:	ldr	r2, [r3, #140]	; 0x8c
   2e2a0:	ldrh	r3, [fp, #-10]
   2e2a4:	sub	r3, r3, #1
   2e2a8:	and	r3, r3, r2
   2e2ac:	mov	r0, r3
   2e2b0:	add	sp, fp, #0
   2e2b4:	pop	{fp}		; (ldr fp, [sp], #4)
   2e2b8:	bx	lr
   2e2bc:	str	r4, [sp, #-12]!
   2e2c0:	str	fp, [sp, #4]
   2e2c4:	str	lr, [sp, #8]
   2e2c8:	add	fp, sp, #8
   2e2cc:	sub	sp, sp, #28
   2e2d0:	str	r0, [fp, #-24]	; 0xffffffe8
   2e2d4:	str	r1, [fp, #-28]	; 0xffffffe4
   2e2d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2dc:	ldr	r3, [r3, #136]	; 0x88
   2e2e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e2e4:	ldr	r2, [r2]
   2e2e8:	sub	r3, r3, r2
   2e2ec:	str	r3, [fp, #-16]
   2e2f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2f4:	ldr	r3, [r3, #136]	; 0x88
   2e2f8:	ldr	r2, [fp, #-16]
   2e2fc:	cmp	r2, r3
   2e300:	blt	2e324 <flatcc_builder_get_user_frame_ptr@@Base+0x3e4>
   2e304:	ldr	r3, [pc, #164]	; 2e3b0 <flatcc_builder_get_user_frame_ptr@@Base+0x470>
   2e308:	add	r3, pc, r3
   2e30c:	movw	r2, #647	; 0x287
   2e310:	ldr	r1, [pc, #156]	; 2e3b4 <flatcc_builder_get_user_frame_ptr@@Base+0x474>
   2e314:	add	r1, pc, r1
   2e318:	ldr	r0, [pc, #152]	; 2e3b8 <flatcc_builder_get_user_frame_ptr@@Base+0x478>
   2e31c:	add	r0, pc, r0
   2e320:	bl	145e8 <__assert_fail@plt>
   2e324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e328:	ldr	r4, [r3, #44]	; 0x2c
   2e32c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e330:	ldr	r0, [r3, #36]	; 0x24
   2e334:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e338:	add	r1, r3, #8
   2e33c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e340:	ldr	r2, [r3, #4]
   2e344:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e348:	ldr	r3, [r3]
   2e34c:	str	r3, [sp]
   2e350:	ldr	r3, [fp, #-16]
   2e354:	blx	r4
   2e358:	mov	r3, r0
   2e35c:	cmp	r3, #0
   2e360:	beq	2e384 <flatcc_builder_get_user_frame_ptr@@Base+0x444>
   2e364:	ldr	r3, [pc, #80]	; 2e3bc <flatcc_builder_get_user_frame_ptr@@Base+0x47c>
   2e368:	add	r3, pc, r3
   2e36c:	movw	r2, #651	; 0x28b
   2e370:	ldr	r1, [pc, #72]	; 2e3c0 <flatcc_builder_get_user_frame_ptr@@Base+0x480>
   2e374:	add	r1, pc, r1
   2e378:	ldr	r0, [pc, #68]	; 2e3c4 <flatcc_builder_get_user_frame_ptr@@Base+0x484>
   2e37c:	add	r0, pc, r0
   2e380:	bl	145e8 <__assert_fail@plt>
   2e384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e388:	ldr	r2, [fp, #-16]
   2e38c:	str	r2, [r3, #136]	; 0x88
   2e390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e394:	ldr	r3, [r3, #136]	; 0x88
   2e398:	mov	r0, r3
   2e39c:	sub	sp, fp, #8
   2e3a0:	ldr	r4, [sp]
   2e3a4:	ldr	fp, [sp, #4]
   2e3a8:	add	sp, sp, #8
   2e3ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2e3b0:	andeq	r3, r2, ip, lsl #9
   2e3b4:	andeq	r2, r2, r0, asr #31
   2e3b8:	andeq	r3, r2, r8, lsl r0
   2e3bc:	andeq	r3, r2, ip, lsr #8
   2e3c0:	andeq	r2, r2, r0, ror #30
   2e3c4:			; <UNDEFINED> instruction: 0x00022fb8
   2e3c8:	str	r4, [sp, #-12]!
   2e3cc:	str	fp, [sp, #4]
   2e3d0:	str	lr, [sp, #8]
   2e3d4:	add	fp, sp, #8
   2e3d8:	sub	sp, sp, #28
   2e3dc:	str	r0, [fp, #-24]	; 0xffffffe8
   2e3e0:	str	r1, [fp, #-28]	; 0xffffffe4
   2e3e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e3e8:	ldr	r3, [r3, #140]	; 0x8c
   2e3ec:	str	r3, [fp, #-16]
   2e3f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e3f4:	ldr	r3, [r3]
   2e3f8:	mov	r2, r3
   2e3fc:	ldr	r3, [fp, #-16]
   2e400:	add	r2, r2, r3
   2e404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e408:	str	r2, [r3, #140]	; 0x8c
   2e40c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e410:	ldr	r3, [r3, #140]	; 0x8c
   2e414:	ldr	r2, [fp, #-16]
   2e418:	cmp	r2, r3
   2e41c:	ble	2e440 <flatcc_builder_get_user_frame_ptr@@Base+0x500>
   2e420:	ldr	r3, [pc, #152]	; 2e4c0 <flatcc_builder_get_user_frame_ptr@@Base+0x580>
   2e424:	add	r3, pc, r3
   2e428:	movw	r2, #673	; 0x2a1
   2e42c:	ldr	r1, [pc, #144]	; 2e4c4 <flatcc_builder_get_user_frame_ptr@@Base+0x584>
   2e430:	add	r1, pc, r1
   2e434:	ldr	r0, [pc, #140]	; 2e4c8 <flatcc_builder_get_user_frame_ptr@@Base+0x588>
   2e438:	add	r0, pc, r0
   2e43c:	bl	145e8 <__assert_fail@plt>
   2e440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e444:	ldr	r4, [r3, #44]	; 0x2c
   2e448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e44c:	ldr	r0, [r3, #36]	; 0x24
   2e450:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e454:	add	r1, r3, #8
   2e458:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e45c:	ldr	r2, [r3, #4]
   2e460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e464:	ldr	r3, [r3]
   2e468:	str	r3, [sp]
   2e46c:	ldr	r3, [fp, #-16]
   2e470:	blx	r4
   2e474:	mov	r3, r0
   2e478:	cmp	r3, #0
   2e47c:	beq	2e4a0 <flatcc_builder_get_user_frame_ptr@@Base+0x560>
   2e480:	ldr	r3, [pc, #68]	; 2e4cc <flatcc_builder_get_user_frame_ptr@@Base+0x58c>
   2e484:	add	r3, pc, r3
   2e488:	movw	r2, #677	; 0x2a5
   2e48c:	ldr	r1, [pc, #60]	; 2e4d0 <flatcc_builder_get_user_frame_ptr@@Base+0x590>
   2e490:	add	r1, pc, r1
   2e494:	ldr	r0, [pc, #56]	; 2e4d4 <flatcc_builder_get_user_frame_ptr@@Base+0x594>
   2e498:	add	r0, pc, r0
   2e49c:	bl	145e8 <__assert_fail@plt>
   2e4a0:	ldr	r3, [fp, #-16]
   2e4a4:	add	r3, r3, #1
   2e4a8:	mov	r0, r3
   2e4ac:	sub	sp, fp, #8
   2e4b0:	ldr	r4, [sp]
   2e4b4:	ldr	fp, [sp, #4]
   2e4b8:	add	sp, sp, #8
   2e4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2e4c0:	andeq	r3, r2, r4, ror #6
   2e4c4:	andeq	r2, r2, r4, lsr #29
   2e4c8:	strdeq	r2, [r2], -ip
   2e4cc:	andeq	r3, r2, r4, lsl #6
   2e4d0:	andeq	r2, r2, r4, asr #28
   2e4d4:	muleq	r2, ip, lr
   2e4d8:	str	r4, [sp, #-12]!
   2e4dc:	str	fp, [sp, #4]
   2e4e0:	str	lr, [sp, #8]
   2e4e4:	add	fp, sp, #8
   2e4e8:	sub	sp, sp, #100	; 0x64
   2e4ec:	str	r0, [fp, #-96]	; 0xffffffa0
   2e4f0:	str	r1, [fp, #-100]	; 0xffffff9c
   2e4f4:	str	r3, [fp, #-108]	; 0xffffff94
   2e4f8:	mov	r3, r2
   2e4fc:	strh	r3, [fp, #-102]	; 0xffffff9a
   2e500:	ldr	r4, [pc, #332]	; 2e654 <flatcc_builder_get_user_frame_ptr@@Base+0x714>
   2e504:	add	r4, pc, r4
   2e508:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e50c:	cmp	r3, #0
   2e510:	bne	2e538 <flatcc_builder_get_user_frame_ptr@@Base+0x5f8>
   2e514:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e518:	ldrh	r3, [r3, #132]	; 0x84
   2e51c:	cmp	r3, #0
   2e520:	beq	2e530 <flatcc_builder_get_user_frame_ptr@@Base+0x5f0>
   2e524:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e528:	ldrh	r3, [r3, #132]	; 0x84
   2e52c:	b	2e53c <flatcc_builder_get_user_frame_ptr@@Base+0x5fc>
   2e530:	mov	r3, #1
   2e534:	b	2e53c <flatcc_builder_get_user_frame_ptr@@Base+0x5fc>
   2e538:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e53c:	strh	r3, [fp, #-102]	; 0xffffff9a
   2e540:	mov	r1, #4
   2e544:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2e548:	bl	2dc00 <flatcc_builder_clear@@Base+0x10c>
   2e54c:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e550:	mov	r1, r3
   2e554:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2e558:	bl	2dc00 <flatcc_builder_clear@@Base+0x10c>
   2e55c:	ldr	r3, [fp, #-108]	; 0xffffff94
   2e560:	cmp	r3, #0
   2e564:	bne	2e638 <flatcc_builder_get_user_frame_ptr@@Base+0x6f8>
   2e568:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e56c:	mov	r1, r3
   2e570:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2e574:	bl	2e280 <flatcc_builder_get_user_frame_ptr@@Base+0x340>
   2e578:	str	r0, [fp, #-16]
   2e57c:	ldr	r3, [fp, #-16]
   2e580:	cmp	r3, #0
   2e584:	beq	2e638 <flatcc_builder_get_user_frame_ptr@@Base+0x6f8>
   2e588:	mov	r3, #0
   2e58c:	str	r3, [fp, #-88]	; 0xffffffa8
   2e590:	mov	r3, #0
   2e594:	str	r3, [fp, #-84]	; 0xffffffac
   2e598:	ldr	r3, [fp, #-16]
   2e59c:	cmp	r3, #0
   2e5a0:	beq	2e5fc <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   2e5a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2e5a8:	ldr	r3, [fp, #-16]
   2e5ac:	add	r3, r2, r3
   2e5b0:	str	r3, [fp, #-88]	; 0xffffffa8
   2e5b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e5b8:	add	r3, r3, #1
   2e5bc:	lsl	r3, r3, #3
   2e5c0:	sub	r2, fp, #12
   2e5c4:	add	r3, r2, r3
   2e5c8:	ldr	r2, [pc, #136]	; 2e658 <flatcc_builder_get_user_frame_ptr@@Base+0x718>
   2e5cc:	ldr	r2, [r4, r2]
   2e5d0:	str	r2, [r3, #-76]	; 0xffffffb4
   2e5d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e5d8:	add	r3, r3, #1
   2e5dc:	lsl	r3, r3, #3
   2e5e0:	sub	r2, fp, #12
   2e5e4:	add	r3, r2, r3
   2e5e8:	ldr	r2, [fp, #-16]
   2e5ec:	str	r2, [r3, #-72]	; 0xffffffb8
   2e5f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e5f4:	add	r3, r3, #1
   2e5f8:	str	r3, [fp, #-84]	; 0xffffffac
   2e5fc:	sub	r3, fp, #88	; 0x58
   2e600:	mov	r1, r3
   2e604:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2e608:	bl	2e3c8 <flatcc_builder_get_user_frame_ptr@@Base+0x488>
   2e60c:	mov	r3, r0
   2e610:	cmp	r3, #0
   2e614:	bne	2e638 <flatcc_builder_get_user_frame_ptr@@Base+0x6f8>
   2e618:	ldr	r3, [pc, #60]	; 2e65c <flatcc_builder_get_user_frame_ptr@@Base+0x71c>
   2e61c:	add	r3, pc, r3
   2e620:	movw	r2, #702	; 0x2be
   2e624:	ldr	r1, [pc, #52]	; 2e660 <flatcc_builder_get_user_frame_ptr@@Base+0x720>
   2e628:	add	r1, pc, r1
   2e62c:	ldr	r0, [pc, #48]	; 2e664 <flatcc_builder_get_user_frame_ptr@@Base+0x724>
   2e630:	add	r0, pc, r0
   2e634:	bl	145e8 <__assert_fail@plt>
   2e638:	mov	r3, #0
   2e63c:	mov	r0, r3
   2e640:	sub	sp, fp, #8
   2e644:	ldr	r4, [sp]
   2e648:	ldr	fp, [sp, #4]
   2e64c:	add	sp, sp, #8
   2e650:	pop	{pc}		; (ldr pc, [sp], #4)
   2e654:	strdeq	r6, [r3], -r4
   2e658:	andeq	r0, r0, r4, rrx
   2e65c:	andeq	r3, r2, ip, asr r1
   2e660:	andeq	r2, r2, ip, lsr #25
   2e664:	andeq	r2, r2, r4, lsl #26

0002e668 <flatcc_builder_embed_buffer@@Base>:
   2e668:	str	r4, [sp, #-12]!
   2e66c:	str	fp, [sp, #4]
   2e670:	str	lr, [sp, #8]
   2e674:	add	fp, sp, #8
   2e678:	sub	sp, sp, #108	; 0x6c
   2e67c:	str	r0, [fp, #-104]	; 0xffffff98
   2e680:	str	r2, [fp, #-112]	; 0xffffff90
   2e684:	str	r3, [fp, #-116]	; 0xffffff8c
   2e688:	mov	r3, r1
   2e68c:	strh	r3, [fp, #-106]	; 0xffffff96
   2e690:	ldr	r4, [pc, #504]	; 2e890 <flatcc_builder_embed_buffer@@Base+0x228>
   2e694:	add	r4, pc, r4
   2e698:	ldr	r3, [fp, #8]
   2e69c:	and	r3, r3, #2
   2e6a0:	str	r3, [fp, #-16]
   2e6a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   2e6a8:	ldr	r3, [r3, #152]	; 0x98
   2e6ac:	cmp	r3, #0
   2e6b0:	movne	r3, #1
   2e6b4:	moveq	r3, #0
   2e6b8:	uxtb	r3, r3
   2e6bc:	ldrh	r2, [fp, #-106]	; 0xffffff96
   2e6c0:	add	r1, fp, #4
   2e6c4:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e6c8:	bl	2e4d8 <flatcc_builder_get_user_frame_ptr@@Base+0x598>
   2e6cc:	mov	r3, r0
   2e6d0:	cmp	r3, #0
   2e6d4:	beq	2e6e0 <flatcc_builder_embed_buffer@@Base+0x78>
   2e6d8:	mov	r3, #0
   2e6dc:	b	2e878 <flatcc_builder_embed_buffer@@Base+0x210>
   2e6e0:	ldr	r3, [fp, #-16]
   2e6e4:	cmp	r3, #0
   2e6e8:	beq	2e6f4 <flatcc_builder_embed_buffer@@Base+0x8c>
   2e6ec:	mov	r2, #4
   2e6f0:	b	2e6f8 <flatcc_builder_embed_buffer@@Base+0x90>
   2e6f4:	mov	r2, #0
   2e6f8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e6fc:	add	r3, r2, r3
   2e700:	ldrh	r2, [fp, #4]
   2e704:	mov	r1, r3
   2e708:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e70c:	bl	2e234 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2e710:	str	r0, [fp, #-20]	; 0xffffffec
   2e714:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e718:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e71c:	add	r3, r2, r3
   2e720:	mov	r0, r3
   2e724:	bl	2cab0 <main@@Base+0xcdc>
   2e728:	mov	r3, r0
   2e72c:	str	r3, [fp, #-24]	; 0xffffffe8
   2e730:	mov	r3, #0
   2e734:	str	r3, [fp, #-96]	; 0xffffffa0
   2e738:	mov	r3, #0
   2e73c:	str	r3, [fp, #-92]	; 0xffffffa4
   2e740:	ldr	r3, [fp, #-104]	; 0xffffff98
   2e744:	ldr	r3, [r3, #152]	; 0x98
   2e748:	cmp	r3, #0
   2e74c:	beq	2e7a0 <flatcc_builder_embed_buffer@@Base+0x138>
   2e750:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e754:	add	r3, r3, #4
   2e758:	str	r3, [fp, #-96]	; 0xffffffa0
   2e75c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e760:	add	r3, r3, #1
   2e764:	lsl	r3, r3, #3
   2e768:	sub	r2, fp, #12
   2e76c:	add	r3, r2, r3
   2e770:	sub	r2, fp, #24
   2e774:	str	r2, [r3, #-84]	; 0xffffffac
   2e778:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e77c:	add	r3, r3, #1
   2e780:	lsl	r3, r3, #3
   2e784:	sub	r2, fp, #12
   2e788:	add	r3, r2, r3
   2e78c:	mov	r2, #4
   2e790:	str	r2, [r3, #-80]	; 0xffffffb0
   2e794:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e798:	add	r3, r3, #1
   2e79c:	str	r3, [fp, #-92]	; 0xffffffa4
   2e7a0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e7a4:	cmp	r3, #0
   2e7a8:	beq	2e800 <flatcc_builder_embed_buffer@@Base+0x198>
   2e7ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2e7b0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e7b4:	add	r3, r2, r3
   2e7b8:	str	r3, [fp, #-96]	; 0xffffffa0
   2e7bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e7c0:	add	r3, r3, #1
   2e7c4:	lsl	r3, r3, #3
   2e7c8:	sub	r2, fp, #12
   2e7cc:	add	r3, r2, r3
   2e7d0:	ldr	r2, [fp, #-112]	; 0xffffff90
   2e7d4:	str	r2, [r3, #-84]	; 0xffffffac
   2e7d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e7dc:	add	r3, r3, #1
   2e7e0:	lsl	r3, r3, #3
   2e7e4:	sub	r2, fp, #12
   2e7e8:	add	r3, r2, r3
   2e7ec:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e7f0:	str	r2, [r3, #-80]	; 0xffffffb0
   2e7f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e7f8:	add	r3, r3, #1
   2e7fc:	str	r3, [fp, #-92]	; 0xffffffa4
   2e800:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e804:	cmp	r3, #0
   2e808:	beq	2e864 <flatcc_builder_embed_buffer@@Base+0x1fc>
   2e80c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2e810:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e814:	add	r3, r2, r3
   2e818:	str	r3, [fp, #-96]	; 0xffffffa0
   2e81c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e820:	add	r3, r3, #1
   2e824:	lsl	r3, r3, #3
   2e828:	sub	r2, fp, #12
   2e82c:	add	r3, r2, r3
   2e830:	ldr	r2, [pc, #92]	; 2e894 <flatcc_builder_embed_buffer@@Base+0x22c>
   2e834:	ldr	r2, [r4, r2]
   2e838:	str	r2, [r3, #-84]	; 0xffffffac
   2e83c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e840:	add	r3, r3, #1
   2e844:	lsl	r3, r3, #3
   2e848:	sub	r2, fp, #12
   2e84c:	add	r3, r2, r3
   2e850:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e854:	str	r2, [r3, #-80]	; 0xffffffb0
   2e858:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e85c:	add	r3, r3, #1
   2e860:	str	r3, [fp, #-92]	; 0xffffffa4
   2e864:	sub	r3, fp, #96	; 0x60
   2e868:	mov	r1, r3
   2e86c:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e870:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2e874:	mov	r3, r0
   2e878:	mov	r0, r3
   2e87c:	sub	sp, fp, #8
   2e880:	ldr	r4, [sp]
   2e884:	ldr	fp, [sp, #4]
   2e888:	add	sp, sp, #8
   2e88c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e890:	andeq	r6, r3, r4, ror #18
   2e894:	andeq	r0, r0, r4, rrx

0002e898 <flatcc_builder_create_buffer@@Base>:
   2e898:	str	r4, [sp, #-12]!
   2e89c:	str	fp, [sp, #4]
   2e8a0:	str	lr, [sp, #8]
   2e8a4:	add	fp, sp, #8
   2e8a8:	sub	sp, sp, #132	; 0x84
   2e8ac:	str	r0, [fp, #-128]	; 0xffffff80
   2e8b0:	str	r1, [fp, #-132]	; 0xffffff7c
   2e8b4:	str	r3, [fp, #-140]	; 0xffffff74
   2e8b8:	mov	r3, r2
   2e8bc:	strh	r3, [fp, #-134]	; 0xffffff7a
   2e8c0:	ldr	r4, [pc, #944]	; 2ec78 <flatcc_builder_create_buffer@@Base+0x3e0>
   2e8c4:	add	r4, pc, r4
   2e8c8:	mov	r3, #0
   2e8cc:	str	r3, [fp, #-16]
   2e8d0:	mov	r3, #0
   2e8d4:	str	r3, [fp, #-120]	; 0xffffff88
   2e8d8:	ldr	r3, [fp, #8]
   2e8dc:	and	r3, r3, #1
   2e8e0:	cmp	r3, #0
   2e8e4:	movne	r3, #1
   2e8e8:	moveq	r3, #0
   2e8ec:	uxtb	r3, r3
   2e8f0:	str	r3, [fp, #-20]	; 0xffffffec
   2e8f4:	ldr	r3, [fp, #8]
   2e8f8:	and	r3, r3, #2
   2e8fc:	cmp	r3, #0
   2e900:	movne	r3, #1
   2e904:	moveq	r3, #0
   2e908:	uxtb	r3, r3
   2e90c:	str	r3, [fp, #-24]	; 0xffffffe8
   2e910:	ldrh	r2, [fp, #-134]	; 0xffffff7a
   2e914:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e918:	add	r1, fp, #4
   2e91c:	ldr	r0, [fp, #-128]	; 0xffffff80
   2e920:	bl	2e4d8 <flatcc_builder_get_user_frame_ptr@@Base+0x598>
   2e924:	mov	r3, r0
   2e928:	cmp	r3, #0
   2e92c:	beq	2e938 <flatcc_builder_create_buffer@@Base+0xa0>
   2e930:	mov	r3, #0
   2e934:	b	2ec60 <flatcc_builder_create_buffer@@Base+0x3c8>
   2e938:	ldrh	r3, [fp, #4]
   2e93c:	mov	r1, r3
   2e940:	ldr	r0, [fp, #-128]	; 0xffffff80
   2e944:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   2e948:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2e94c:	cmp	r3, #0
   2e950:	beq	2e988 <flatcc_builder_create_buffer@@Base+0xf0>
   2e954:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2e958:	ldr	r3, [r3]
   2e95c:	str	r3, [fp, #-120]	; 0xffffff88
   2e960:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e964:	mov	r0, r3
   2e968:	bl	2cafc <main@@Base+0xd28>
   2e96c:	mov	r3, r0
   2e970:	str	r3, [fp, #-120]	; 0xffffff88
   2e974:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e978:	mov	r0, r3
   2e97c:	bl	2cab0 <main@@Base+0xcdc>
   2e980:	mov	r3, r0
   2e984:	str	r3, [fp, #-120]	; 0xffffff88
   2e988:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e98c:	cmp	r3, #0
   2e990:	beq	2e99c <flatcc_builder_create_buffer@@Base+0x104>
   2e994:	mov	r3, #4
   2e998:	b	2e9a0 <flatcc_builder_create_buffer@@Base+0x108>
   2e99c:	mov	r3, #0
   2e9a0:	str	r3, [fp, #-16]
   2e9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e9a8:	cmp	r3, #0
   2e9ac:	beq	2e9b8 <flatcc_builder_create_buffer@@Base+0x120>
   2e9b0:	mov	r2, #4
   2e9b4:	b	2e9bc <flatcc_builder_create_buffer@@Base+0x124>
   2e9b8:	mov	r2, #0
   2e9bc:	ldr	r3, [fp, #-16]
   2e9c0:	add	r3, r2, r3
   2e9c4:	add	r3, r3, #4
   2e9c8:	ldrh	r2, [fp, #4]
   2e9cc:	mov	r1, r3
   2e9d0:	ldr	r0, [fp, #-128]	; 0xffffff80
   2e9d4:	bl	2e234 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2e9d8:	str	r0, [fp, #-28]	; 0xffffffe4
   2e9dc:	mov	r3, #0
   2e9e0:	str	r3, [fp, #-116]	; 0xffffff8c
   2e9e4:	mov	r3, #0
   2e9e8:	str	r3, [fp, #-112]	; 0xffffff90
   2e9ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e9f0:	cmp	r3, #0
   2e9f4:	bne	2ea04 <flatcc_builder_create_buffer@@Base+0x16c>
   2e9f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e9fc:	cmp	r3, #0
   2ea00:	beq	2ea54 <flatcc_builder_create_buffer@@Base+0x1bc>
   2ea04:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2ea08:	add	r3, r3, #4
   2ea0c:	str	r3, [fp, #-116]	; 0xffffff8c
   2ea10:	ldr	r3, [fp, #-112]	; 0xffffff90
   2ea14:	add	r3, r3, #1
   2ea18:	lsl	r3, r3, #3
   2ea1c:	sub	r2, fp, #12
   2ea20:	add	r3, r2, r3
   2ea24:	sub	r2, fp, #44	; 0x2c
   2ea28:	str	r2, [r3, #-104]	; 0xffffff98
   2ea2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   2ea30:	add	r3, r3, #1
   2ea34:	lsl	r3, r3, #3
   2ea38:	sub	r2, fp, #12
   2ea3c:	add	r3, r2, r3
   2ea40:	mov	r2, #4
   2ea44:	str	r2, [r3, #-100]	; 0xffffff9c
   2ea48:	ldr	r3, [fp, #-112]	; 0xffffff90
   2ea4c:	add	r3, r3, #1
   2ea50:	str	r3, [fp, #-112]	; 0xffffff90
   2ea54:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2ea58:	add	r3, r3, #4
   2ea5c:	str	r3, [fp, #-116]	; 0xffffff8c
   2ea60:	ldr	r3, [fp, #-112]	; 0xffffff90
   2ea64:	add	r3, r3, #1
   2ea68:	lsl	r3, r3, #3
   2ea6c:	sub	r2, fp, #12
   2ea70:	add	r3, r2, r3
   2ea74:	sub	r2, fp, #40	; 0x28
   2ea78:	str	r2, [r3, #-104]	; 0xffffff98
   2ea7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   2ea80:	add	r3, r3, #1
   2ea84:	lsl	r3, r3, #3
   2ea88:	sub	r2, fp, #12
   2ea8c:	add	r3, r2, r3
   2ea90:	mov	r2, #4
   2ea94:	str	r2, [r3, #-100]	; 0xffffff9c
   2ea98:	ldr	r3, [fp, #-112]	; 0xffffff90
   2ea9c:	add	r3, r3, #1
   2eaa0:	str	r3, [fp, #-112]	; 0xffffff90
   2eaa4:	ldr	r3, [fp, #-16]
   2eaa8:	cmp	r3, #0
   2eaac:	beq	2eb04 <flatcc_builder_create_buffer@@Base+0x26c>
   2eab0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2eab4:	ldr	r3, [fp, #-16]
   2eab8:	add	r3, r2, r3
   2eabc:	str	r3, [fp, #-116]	; 0xffffff8c
   2eac0:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eac4:	add	r3, r3, #1
   2eac8:	lsl	r3, r3, #3
   2eacc:	sub	r2, fp, #12
   2ead0:	add	r3, r2, r3
   2ead4:	sub	r2, fp, #120	; 0x78
   2ead8:	str	r2, [r3, #-104]	; 0xffffff98
   2eadc:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eae0:	add	r3, r3, #1
   2eae4:	lsl	r3, r3, #3
   2eae8:	sub	r2, fp, #12
   2eaec:	add	r3, r2, r3
   2eaf0:	ldr	r2, [fp, #-16]
   2eaf4:	str	r2, [r3, #-100]	; 0xffffff9c
   2eaf8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eafc:	add	r3, r3, #1
   2eb00:	str	r3, [fp, #-112]	; 0xffffff90
   2eb04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb08:	cmp	r3, #0
   2eb0c:	beq	2eb68 <flatcc_builder_create_buffer@@Base+0x2d0>
   2eb10:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2eb14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb18:	add	r3, r2, r3
   2eb1c:	str	r3, [fp, #-116]	; 0xffffff8c
   2eb20:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eb24:	add	r3, r3, #1
   2eb28:	lsl	r3, r3, #3
   2eb2c:	sub	r2, fp, #12
   2eb30:	add	r3, r2, r3
   2eb34:	ldr	r2, [pc, #320]	; 2ec7c <flatcc_builder_create_buffer@@Base+0x3e4>
   2eb38:	ldr	r2, [r4, r2]
   2eb3c:	str	r2, [r3, #-104]	; 0xffffff98
   2eb40:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eb44:	add	r3, r3, #1
   2eb48:	lsl	r3, r3, #3
   2eb4c:	sub	r2, fp, #12
   2eb50:	add	r3, r2, r3
   2eb54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2eb58:	str	r2, [r3, #-100]	; 0xffffff9c
   2eb5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eb60:	add	r3, r3, #1
   2eb64:	str	r3, [fp, #-112]	; 0xffffff90
   2eb68:	ldr	r3, [fp, #-128]	; 0xffffff80
   2eb6c:	ldr	r3, [r3, #136]	; 0x88
   2eb70:	mov	r2, r3
   2eb74:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2eb78:	sub	r3, r2, r3
   2eb7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2eb80:	cmp	r2, #0
   2eb84:	bne	2eb94 <flatcc_builder_create_buffer@@Base+0x2fc>
   2eb88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eb8c:	cmp	r2, #0
   2eb90:	beq	2eb9c <flatcc_builder_create_buffer@@Base+0x304>
   2eb94:	mov	r2, #4
   2eb98:	b	2eba0 <flatcc_builder_create_buffer@@Base+0x308>
   2eb9c:	mov	r2, #0
   2eba0:	add	r3, r2, r3
   2eba4:	str	r3, [fp, #-32]	; 0xffffffe0
   2eba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ebac:	cmp	r3, #0
   2ebb0:	beq	2ebdc <flatcc_builder_create_buffer@@Base+0x344>
   2ebb4:	ldr	r3, [fp, #-128]	; 0xffffff80
   2ebb8:	ldr	r3, [r3, #144]	; 0x90
   2ebbc:	mov	r2, r3
   2ebc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ebc4:	sub	r3, r2, r3
   2ebc8:	mov	r0, r3
   2ebcc:	bl	2cab0 <main@@Base+0xcdc>
   2ebd0:	mov	r3, r0
   2ebd4:	str	r3, [fp, #-44]	; 0xffffffd4
   2ebd8:	b	2ec00 <flatcc_builder_create_buffer@@Base+0x368>
   2ebdc:	ldr	r3, [fp, #-128]	; 0xffffff80
   2ebe0:	ldr	r3, [r3, #140]	; 0x8c
   2ebe4:	mov	r2, r3
   2ebe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ebec:	sub	r3, r2, r3
   2ebf0:	mov	r0, r3
   2ebf4:	bl	2cab0 <main@@Base+0xcdc>
   2ebf8:	mov	r3, r0
   2ebfc:	str	r3, [fp, #-44]	; 0xffffffd4
   2ec00:	ldr	r2, [fp, #-140]	; 0xffffff74
   2ec04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ec08:	sub	r3, r2, r3
   2ec0c:	mov	r0, r3
   2ec10:	bl	2cab0 <main@@Base+0xcdc>
   2ec14:	mov	r3, r0
   2ec18:	str	r3, [fp, #-40]	; 0xffffffd8
   2ec1c:	sub	r3, fp, #116	; 0x74
   2ec20:	mov	r1, r3
   2ec24:	ldr	r0, [fp, #-128]	; 0xffffff80
   2ec28:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2ec2c:	str	r0, [fp, #-36]	; 0xffffffdc
   2ec30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ec34:	cmp	r3, #0
   2ec38:	bne	2ec5c <flatcc_builder_create_buffer@@Base+0x3c4>
   2ec3c:	ldr	r3, [pc, #60]	; 2ec80 <flatcc_builder_create_buffer@@Base+0x3e8>
   2ec40:	add	r3, pc, r3
   2ec44:	mov	r2, #772	; 0x304
   2ec48:	ldr	r1, [pc, #52]	; 2ec84 <flatcc_builder_create_buffer@@Base+0x3ec>
   2ec4c:	add	r1, pc, r1
   2ec50:	ldr	r0, [pc, #48]	; 2ec88 <flatcc_builder_create_buffer@@Base+0x3f0>
   2ec54:	add	r0, pc, r0
   2ec58:	bl	145e8 <__assert_fail@plt>
   2ec5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ec60:	mov	r0, r3
   2ec64:	sub	sp, fp, #8
   2ec68:	ldr	r4, [sp]
   2ec6c:	ldr	fp, [sp, #4]
   2ec70:	add	sp, sp, #8
   2ec74:	pop	{pc}		; (ldr pc, [sp], #4)
   2ec78:	andeq	r6, r3, r4, lsr r7
   2ec7c:	andeq	r0, r0, r4, rrx
   2ec80:	andeq	r2, r2, r0, ror #22
   2ec84:	andeq	r2, r2, r8, lsl #13
   2ec88:	andeq	r2, r2, r0, ror #13

0002ec8c <flatcc_builder_create_struct@@Base>:
   2ec8c:	str	r4, [sp, #-12]!
   2ec90:	str	fp, [sp, #4]
   2ec94:	str	lr, [sp, #8]
   2ec98:	add	fp, sp, #8
   2ec9c:	sub	sp, sp, #100	; 0x64
   2eca0:	str	r0, [fp, #-96]	; 0xffffffa0
   2eca4:	str	r1, [fp, #-100]	; 0xffffff9c
   2eca8:	str	r2, [fp, #-104]	; 0xffffff98
   2ecac:	strh	r3, [fp, #-106]	; 0xffffff96
   2ecb0:	ldr	r4, [pc, #340]	; 2ee0c <flatcc_builder_create_struct@@Base+0x180>
   2ecb4:	add	r4, pc, r4
   2ecb8:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2ecbc:	cmp	r3, #0
   2ecc0:	bne	2ece4 <flatcc_builder_create_struct@@Base+0x58>
   2ecc4:	ldr	r3, [pc, #324]	; 2ee10 <flatcc_builder_create_struct@@Base+0x184>
   2ecc8:	add	r3, pc, r3
   2eccc:	movw	r2, #783	; 0x30f
   2ecd0:	ldr	r1, [pc, #316]	; 2ee14 <flatcc_builder_create_struct@@Base+0x188>
   2ecd4:	add	r1, pc, r1
   2ecd8:	ldr	r0, [pc, #312]	; 2ee18 <flatcc_builder_create_struct@@Base+0x18c>
   2ecdc:	add	r0, pc, r0
   2ece0:	bl	145e8 <__assert_fail@plt>
   2ece4:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2ece8:	mov	r1, r3
   2ecec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2ecf0:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   2ecf4:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2ecf8:	mov	r2, r3
   2ecfc:	ldr	r1, [fp, #-104]	; 0xffffff98
   2ed00:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2ed04:	bl	2e234 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   2ed08:	str	r0, [fp, #-16]
   2ed0c:	mov	r3, #0
   2ed10:	str	r3, [fp, #-88]	; 0xffffffa8
   2ed14:	mov	r3, #0
   2ed18:	str	r3, [fp, #-84]	; 0xffffffac
   2ed1c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2ed20:	cmp	r3, #0
   2ed24:	beq	2ed7c <flatcc_builder_create_struct@@Base+0xf0>
   2ed28:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2ed2c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2ed30:	add	r3, r2, r3
   2ed34:	str	r3, [fp, #-88]	; 0xffffffa8
   2ed38:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ed3c:	add	r3, r3, #1
   2ed40:	lsl	r3, r3, #3
   2ed44:	sub	r2, fp, #12
   2ed48:	add	r3, r2, r3
   2ed4c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2ed50:	str	r2, [r3, #-76]	; 0xffffffb4
   2ed54:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ed58:	add	r3, r3, #1
   2ed5c:	lsl	r3, r3, #3
   2ed60:	sub	r2, fp, #12
   2ed64:	add	r3, r2, r3
   2ed68:	ldr	r2, [fp, #-104]	; 0xffffff98
   2ed6c:	str	r2, [r3, #-72]	; 0xffffffb8
   2ed70:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ed74:	add	r3, r3, #1
   2ed78:	str	r3, [fp, #-84]	; 0xffffffac
   2ed7c:	ldr	r3, [fp, #-16]
   2ed80:	cmp	r3, #0
   2ed84:	beq	2ede0 <flatcc_builder_create_struct@@Base+0x154>
   2ed88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2ed8c:	ldr	r3, [fp, #-16]
   2ed90:	add	r3, r2, r3
   2ed94:	str	r3, [fp, #-88]	; 0xffffffa8
   2ed98:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ed9c:	add	r3, r3, #1
   2eda0:	lsl	r3, r3, #3
   2eda4:	sub	r2, fp, #12
   2eda8:	add	r3, r2, r3
   2edac:	ldr	r2, [pc, #104]	; 2ee1c <flatcc_builder_create_struct@@Base+0x190>
   2edb0:	ldr	r2, [r4, r2]
   2edb4:	str	r2, [r3, #-76]	; 0xffffffb4
   2edb8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2edbc:	add	r3, r3, #1
   2edc0:	lsl	r3, r3, #3
   2edc4:	sub	r2, fp, #12
   2edc8:	add	r3, r2, r3
   2edcc:	ldr	r2, [fp, #-16]
   2edd0:	str	r2, [r3, #-72]	; 0xffffffb8
   2edd4:	ldr	r3, [fp, #-84]	; 0xffffffac
   2edd8:	add	r3, r3, #1
   2eddc:	str	r3, [fp, #-84]	; 0xffffffac
   2ede0:	sub	r3, fp, #88	; 0x58
   2ede4:	mov	r1, r3
   2ede8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2edec:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   2edf0:	mov	r3, r0
   2edf4:	mov	r0, r3
   2edf8:	sub	sp, fp, #8
   2edfc:	ldr	r4, [sp]
   2ee00:	ldr	fp, [sp, #4]
   2ee04:	add	sp, sp, #8
   2ee08:	pop	{pc}		; (ldr pc, [sp], #4)
   2ee0c:	andeq	r6, r3, r4, asr #6
   2ee10:	strdeq	r2, [r2], -r8
   2ee14:	andeq	r2, r2, r0, lsl #12
   2ee18:			; <UNDEFINED> instruction: 0x000226bc
   2ee1c:	andeq	r0, r0, r4, rrx

0002ee20 <flatcc_builder_start_buffer@@Base>:
   2ee20:	str	r4, [sp, #-12]!
   2ee24:	str	fp, [sp, #4]
   2ee28:	str	lr, [sp, #8]
   2ee2c:	add	fp, sp, #8
   2ee30:	sub	sp, sp, #20
   2ee34:	str	r0, [fp, #-16]
   2ee38:	str	r1, [fp, #-20]	; 0xffffffec
   2ee3c:	str	r3, [fp, #-28]	; 0xffffffe4
   2ee40:	mov	r3, r2
   2ee44:	strh	r3, [fp, #-22]	; 0xffffffea
   2ee48:	ldr	r4, [pc, #312]	; 2ef88 <flatcc_builder_start_buffer@@Base+0x168>
   2ee4c:	add	r4, pc, r4
   2ee50:	ldr	r3, [fp, #-16]
   2ee54:	ldrh	r3, [r3, #128]	; 0x80
   2ee58:	mov	r1, r3
   2ee5c:	ldr	r0, [fp, #-16]
   2ee60:	bl	2df74 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2ee64:	mov	r3, r0
   2ee68:	cmp	r3, #0
   2ee6c:	beq	2ee78 <flatcc_builder_start_buffer@@Base+0x58>
   2ee70:	mvn	r3, #0
   2ee74:	b	2ef70 <flatcc_builder_start_buffer@@Base+0x150>
   2ee78:	ldr	r3, [fp, #-16]
   2ee7c:	mov	r2, #1
   2ee80:	strh	r2, [r3, #128]	; 0x80
   2ee84:	ldr	r3, [fp, #-16]
   2ee88:	ldr	r3, [r3, #32]
   2ee8c:	ldr	r2, [fp, #-16]
   2ee90:	ldrh	r2, [r2, #132]	; 0x84
   2ee94:	strh	r2, [r3, #34]	; 0x22
   2ee98:	ldr	r3, [fp, #-16]
   2ee9c:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2eea0:	strh	r2, [r3, #132]	; 0x84
   2eea4:	ldr	r3, [fp, #-16]
   2eea8:	ldr	r3, [r3, #32]
   2eeac:	ldr	r2, [fp, #-16]
   2eeb0:	ldrh	r2, [r2, #164]	; 0xa4
   2eeb4:	strh	r2, [r3, #32]
   2eeb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eebc:	uxth	r2, r3
   2eec0:	ldr	r3, [fp, #-16]
   2eec4:	strh	r2, [r3, #164]	; 0xa4
   2eec8:	ldr	r3, [fp, #-16]
   2eecc:	ldr	r3, [r3, #32]
   2eed0:	ldr	r2, [fp, #-16]
   2eed4:	ldr	r2, [r2, #144]	; 0x90
   2eed8:	str	r2, [r3, #20]
   2eedc:	ldr	r3, [fp, #-16]
   2eee0:	ldr	r3, [r3, #32]
   2eee4:	ldr	r2, [fp, #-16]
   2eee8:	ldr	r2, [r2, #152]	; 0x98
   2eeec:	str	r2, [r3, #28]
   2eef0:	ldr	r3, [fp, #-16]
   2eef4:	ldr	r2, [r3, #136]	; 0x88
   2eef8:	ldr	r3, [fp, #-16]
   2eefc:	str	r2, [r3, #144]	; 0x90
   2ef00:	ldr	r3, [fp, #-16]
   2ef04:	ldr	r3, [r3, #148]	; 0x94
   2ef08:	add	r1, r3, #1
   2ef0c:	ldr	r2, [fp, #-16]
   2ef10:	str	r1, [r2, #148]	; 0x94
   2ef14:	ldr	r2, [fp, #-16]
   2ef18:	str	r3, [r2, #152]	; 0x98
   2ef1c:	ldr	r3, [fp, #-16]
   2ef20:	ldr	r3, [r3, #32]
   2ef24:	ldr	r2, [fp, #-16]
   2ef28:	ldr	r2, [r2, #168]	; 0xa8
   2ef2c:	str	r2, [r3, #16]
   2ef30:	ldr	r3, [fp, #-16]
   2ef34:	add	r2, r3, #168	; 0xa8
   2ef38:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ef3c:	cmp	r3, #0
   2ef40:	beq	2ef4c <flatcc_builder_start_buffer@@Base+0x12c>
   2ef44:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ef48:	b	2ef54 <flatcc_builder_start_buffer@@Base+0x134>
   2ef4c:	ldr	r3, [pc, #56]	; 2ef8c <flatcc_builder_start_buffer@@Base+0x16c>
   2ef50:	ldr	r3, [r4, r3]
   2ef54:	ldr	r3, [r3]
   2ef58:	str	r3, [r2]
   2ef5c:	ldr	r3, [fp, #-16]
   2ef60:	ldr	r3, [r3, #32]
   2ef64:	mov	r2, #1
   2ef68:	strh	r2, [r3, #14]
   2ef6c:	mov	r3, #0
   2ef70:	mov	r0, r3
   2ef74:	sub	sp, fp, #8
   2ef78:	ldr	r4, [sp]
   2ef7c:	ldr	fp, [sp, #4]
   2ef80:	add	sp, sp, #8
   2ef84:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef88:	andeq	r6, r3, ip, lsr #3
   2ef8c:	andeq	r0, r0, r4, rrx

0002ef90 <flatcc_builder_end_buffer@@Base>:
   2ef90:	str	fp, [sp, #-8]!
   2ef94:	str	lr, [sp, #4]
   2ef98:	add	fp, sp, #4
   2ef9c:	sub	sp, sp, #24
   2efa0:	str	r0, [fp, #-16]
   2efa4:	str	r1, [fp, #-20]	; 0xffffffec
   2efa8:	ldr	r3, [fp, #-16]
   2efac:	ldrh	r3, [r3, #164]	; 0xa4
   2efb0:	and	r3, r3, #2
   2efb4:	str	r3, [fp, #-8]
   2efb8:	ldr	r3, [fp, #-16]
   2efbc:	ldr	r3, [r3, #152]	; 0x98
   2efc0:	cmp	r3, #0
   2efc4:	movne	r3, #1
   2efc8:	moveq	r3, #0
   2efcc:	uxtb	r3, r3
   2efd0:	mov	r2, r3
   2efd4:	ldr	r3, [fp, #-8]
   2efd8:	orr	r3, r3, r2
   2efdc:	str	r3, [fp, #-8]
   2efe0:	ldr	r3, [fp, #-16]
   2efe4:	ldr	r3, [r3, #32]
   2efe8:	ldrh	r3, [r3, #14]
   2efec:	cmp	r3, #1
   2eff0:	beq	2f014 <flatcc_builder_end_buffer@@Base+0x84>
   2eff4:	ldr	r3, [pc, #232]	; 2f0e4 <flatcc_builder_end_buffer@@Base+0x154>
   2eff8:	add	r3, pc, r3
   2effc:	movw	r2, #838	; 0x346
   2f000:	ldr	r1, [pc, #224]	; 2f0e8 <flatcc_builder_end_buffer@@Base+0x158>
   2f004:	add	r1, pc, r1
   2f008:	ldr	r0, [pc, #220]	; 2f0ec <flatcc_builder_end_buffer@@Base+0x15c>
   2f00c:	add	r0, pc, r0
   2f010:	bl	145e8 <__assert_fail@plt>
   2f014:	ldr	r3, [fp, #-16]
   2f018:	ldrh	r3, [r3, #132]	; 0x84
   2f01c:	mov	r1, r3
   2f020:	ldr	r0, [fp, #-16]
   2f024:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   2f028:	ldr	r3, [fp, #-16]
   2f02c:	add	r1, r3, #168	; 0xa8
   2f030:	ldr	r3, [fp, #-16]
   2f034:	ldrh	r0, [r3, #132]	; 0x84
   2f038:	ldr	r3, [fp, #-16]
   2f03c:	ldrh	r3, [r3, #128]	; 0x80
   2f040:	ldr	r2, [fp, #-8]
   2f044:	str	r2, [sp, #4]
   2f048:	str	r3, [sp]
   2f04c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f050:	mov	r2, r0
   2f054:	ldr	r0, [fp, #-16]
   2f058:	bl	2e898 <flatcc_builder_create_buffer@@Base>
   2f05c:	str	r0, [fp, #-12]
   2f060:	ldr	r3, [fp, #-12]
   2f064:	cmp	r3, #0
   2f068:	bne	2f074 <flatcc_builder_end_buffer@@Base+0xe4>
   2f06c:	mov	r3, #0
   2f070:	b	2f0d0 <flatcc_builder_end_buffer@@Base+0x140>
   2f074:	ldr	r3, [fp, #-16]
   2f078:	ldr	r3, [r3, #32]
   2f07c:	ldr	r2, [r3, #20]
   2f080:	ldr	r3, [fp, #-16]
   2f084:	str	r2, [r3, #144]	; 0x90
   2f088:	ldr	r3, [fp, #-16]
   2f08c:	ldr	r3, [r3, #32]
   2f090:	ldr	r2, [r3, #28]
   2f094:	ldr	r3, [fp, #-16]
   2f098:	str	r2, [r3, #152]	; 0x98
   2f09c:	ldr	r3, [fp, #-16]
   2f0a0:	ldr	r3, [r3, #32]
   2f0a4:	ldr	r2, [r3, #16]
   2f0a8:	ldr	r3, [fp, #-16]
   2f0ac:	str	r2, [r3, #168]	; 0xa8
   2f0b0:	ldr	r3, [fp, #-16]
   2f0b4:	ldr	r3, [r3, #32]
   2f0b8:	ldrh	r2, [r3, #32]
   2f0bc:	ldr	r3, [fp, #-16]
   2f0c0:	strh	r2, [r3, #164]	; 0xa4
   2f0c4:	ldr	r0, [fp, #-16]
   2f0c8:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2f0cc:	ldr	r3, [fp, #-12]
   2f0d0:	mov	r0, r3
   2f0d4:	sub	sp, fp, #4
   2f0d8:	ldr	fp, [sp]
   2f0dc:	add	sp, sp, #4
   2f0e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2f0e4:	andeq	r2, r2, r8, ror #15
   2f0e8:	ldrdeq	r2, [r2], -r0
   2f0ec:	muleq	r2, r8, r3

0002f0f0 <flatcc_builder_start_struct@@Base>:
   2f0f0:	str	fp, [sp, #-8]!
   2f0f4:	str	lr, [sp, #4]
   2f0f8:	add	fp, sp, #4
   2f0fc:	sub	sp, sp, #16
   2f100:	str	r0, [fp, #-8]
   2f104:	str	r1, [fp, #-12]
   2f108:	mov	r3, r2
   2f10c:	strh	r3, [fp, #-14]
   2f110:	ldrh	r3, [fp, #-14]
   2f114:	mov	r1, r3
   2f118:	ldr	r0, [fp, #-8]
   2f11c:	bl	2df74 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2f120:	mov	r3, r0
   2f124:	cmp	r3, #0
   2f128:	beq	2f134 <flatcc_builder_start_struct@@Base+0x44>
   2f12c:	mov	r3, #0
   2f130:	b	2f160 <flatcc_builder_start_struct@@Base+0x70>
   2f134:	ldr	r3, [fp, #-8]
   2f138:	ldr	r3, [r3, #32]
   2f13c:	mov	r2, #2
   2f140:	strh	r2, [r3, #14]
   2f144:	mvn	r1, #3
   2f148:	ldr	r0, [fp, #-8]
   2f14c:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   2f150:	ldr	r1, [fp, #-12]
   2f154:	ldr	r0, [fp, #-8]
   2f158:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   2f15c:	mov	r3, r0
   2f160:	mov	r0, r3
   2f164:	sub	sp, fp, #4
   2f168:	ldr	fp, [sp]
   2f16c:	add	sp, sp, #4
   2f170:	pop	{pc}		; (ldr pc, [sp], #4)

0002f174 <flatcc_builder_struct_edit@@Base>:
   2f174:	push	{fp}		; (str fp, [sp, #-4]!)
   2f178:	add	fp, sp, #0
   2f17c:	sub	sp, sp, #12
   2f180:	str	r0, [fp, #-8]
   2f184:	ldr	r3, [fp, #-8]
   2f188:	ldr	r3, [r3, #16]
   2f18c:	mov	r0, r3
   2f190:	add	sp, fp, #0
   2f194:	pop	{fp}		; (ldr fp, [sp], #4)
   2f198:	bx	lr

0002f19c <flatcc_builder_end_struct@@Base>:
   2f19c:	str	fp, [sp, #-8]!
   2f1a0:	str	lr, [sp, #4]
   2f1a4:	add	fp, sp, #4
   2f1a8:	sub	sp, sp, #16
   2f1ac:	str	r0, [fp, #-16]
   2f1b0:	ldr	r3, [fp, #-16]
   2f1b4:	ldr	r3, [r3, #32]
   2f1b8:	ldrh	r3, [r3, #14]
   2f1bc:	cmp	r3, #2
   2f1c0:	beq	2f1e4 <flatcc_builder_end_struct@@Base+0x48>
   2f1c4:	ldr	r3, [pc, #112]	; 2f23c <flatcc_builder_end_struct@@Base+0xa0>
   2f1c8:	add	r3, pc, r3
   2f1cc:	mov	r2, #872	; 0x368
   2f1d0:	ldr	r1, [pc, #104]	; 2f240 <flatcc_builder_end_struct@@Base+0xa4>
   2f1d4:	add	r1, pc, r1
   2f1d8:	ldr	r0, [pc, #100]	; 2f244 <flatcc_builder_end_struct@@Base+0xa8>
   2f1dc:	add	r0, pc, r0
   2f1e0:	bl	145e8 <__assert_fail@plt>
   2f1e4:	ldr	r3, [fp, #-16]
   2f1e8:	ldr	r1, [r3, #16]
   2f1ec:	ldr	r3, [fp, #-16]
   2f1f0:	ldr	r2, [r3, #20]
   2f1f4:	ldr	r3, [fp, #-16]
   2f1f8:	ldrh	r3, [r3, #130]	; 0x82
   2f1fc:	ldr	r0, [fp, #-16]
   2f200:	bl	2ec8c <flatcc_builder_create_struct@@Base>
   2f204:	str	r0, [fp, #-8]
   2f208:	ldr	r3, [fp, #-8]
   2f20c:	cmp	r3, #0
   2f210:	bne	2f21c <flatcc_builder_end_struct@@Base+0x80>
   2f214:	mov	r3, #0
   2f218:	b	2f228 <flatcc_builder_end_struct@@Base+0x8c>
   2f21c:	ldr	r0, [fp, #-16]
   2f220:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   2f224:	ldr	r3, [fp, #-8]
   2f228:	mov	r0, r3
   2f22c:	sub	sp, fp, #4
   2f230:	ldr	fp, [sp]
   2f234:	add	sp, sp, #4
   2f238:	pop	{pc}		; (ldr pc, [sp], #4)
   2f23c:	andeq	r2, r2, r4, lsr r6
   2f240:	andeq	r2, r2, r0, lsl #2
   2f244:	strdeq	r2, [r2], -r4
   2f248:	str	fp, [sp, #-8]!
   2f24c:	str	lr, [sp, #4]
   2f250:	add	fp, sp, #4
   2f254:	sub	sp, sp, #24
   2f258:	str	r0, [fp, #-16]
   2f25c:	str	r1, [fp, #-20]	; 0xffffffec
   2f260:	str	r2, [fp, #-24]	; 0xffffffe8
   2f264:	ldr	r3, [fp, #-16]
   2f268:	ldr	r3, [r3, #32]
   2f26c:	ldr	r3, [r3, #20]
   2f270:	str	r3, [fp, #-8]
   2f274:	ldr	r2, [fp, #-8]
   2f278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f27c:	add	r3, r2, r3
   2f280:	str	r3, [fp, #-12]
   2f284:	ldr	r2, [fp, #-8]
   2f288:	ldr	r3, [fp, #-12]
   2f28c:	cmp	r2, r3
   2f290:	bhi	2f2a4 <flatcc_builder_end_struct@@Base+0x108>
   2f294:	ldr	r2, [fp, #-12]
   2f298:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f29c:	cmp	r2, r3
   2f2a0:	bls	2f2ec <flatcc_builder_end_struct@@Base+0x150>
   2f2a4:	ldr	r2, [fp, #-8]
   2f2a8:	ldr	r3, [fp, #-12]
   2f2ac:	cmp	r2, r3
   2f2b0:	bhi	2f2c4 <flatcc_builder_end_struct@@Base+0x128>
   2f2b4:	ldr	r2, [fp, #-12]
   2f2b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2bc:	cmp	r2, r3
   2f2c0:	bls	2f2e4 <flatcc_builder_end_struct@@Base+0x148>
   2f2c4:	ldr	r3, [pc, #72]	; 2f314 <flatcc_builder_end_struct@@Base+0x178>
   2f2c8:	add	r3, pc, r3
   2f2cc:	mov	r2, #892	; 0x37c
   2f2d0:	ldr	r1, [pc, #64]	; 2f318 <flatcc_builder_end_struct@@Base+0x17c>
   2f2d4:	add	r1, pc, r1
   2f2d8:	ldr	r0, [pc, #60]	; 2f31c <flatcc_builder_end_struct@@Base+0x180>
   2f2dc:	add	r0, pc, r0
   2f2e0:	bl	145e8 <__assert_fail@plt>
   2f2e4:	mvn	r3, #0
   2f2e8:	b	2f300 <flatcc_builder_end_struct@@Base+0x164>
   2f2ec:	ldr	r3, [fp, #-16]
   2f2f0:	ldr	r3, [r3, #32]
   2f2f4:	ldr	r2, [fp, #-12]
   2f2f8:	str	r2, [r3, #20]
   2f2fc:	mov	r3, #0
   2f300:	mov	r0, r3
   2f304:	sub	sp, fp, #4
   2f308:	ldr	fp, [sp]
   2f30c:	add	sp, sp, #4
   2f310:	pop	{pc}		; (ldr pc, [sp], #4)
   2f314:	andeq	r2, r2, r0, asr r5
   2f318:	andeq	r2, r2, r0
   2f31c:	andeq	r2, r2, r0, lsr #2

0002f320 <flatcc_builder_extend_vector@@Base>:
   2f320:	str	fp, [sp, #-8]!
   2f324:	str	lr, [sp, #4]
   2f328:	add	fp, sp, #4
   2f32c:	sub	sp, sp, #8
   2f330:	str	r0, [fp, #-8]
   2f334:	str	r1, [fp, #-12]
   2f338:	ldr	r3, [fp, #-8]
   2f33c:	ldr	r3, [r3, #32]
   2f340:	ldr	r3, [r3, #24]
   2f344:	mov	r2, r3
   2f348:	ldr	r1, [fp, #-12]
   2f34c:	ldr	r0, [fp, #-8]
   2f350:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   2f354:	mov	r3, r0
   2f358:	cmp	r3, #0
   2f35c:	beq	2f368 <flatcc_builder_extend_vector@@Base+0x48>
   2f360:	mov	r3, #0
   2f364:	b	2f38c <flatcc_builder_extend_vector@@Base+0x6c>
   2f368:	ldr	r3, [fp, #-8]
   2f36c:	ldr	r3, [r3, #32]
   2f370:	ldr	r3, [r3, #16]
   2f374:	ldr	r2, [fp, #-12]
   2f378:	mul	r3, r2, r3
   2f37c:	mov	r1, r3
   2f380:	ldr	r0, [fp, #-8]
   2f384:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   2f388:	mov	r3, r0
   2f38c:	mov	r0, r3
   2f390:	sub	sp, fp, #4
   2f394:	ldr	fp, [sp]
   2f398:	add	sp, sp, #4
   2f39c:	pop	{pc}		; (ldr pc, [sp], #4)

0002f3a0 <flatcc_builder_vector_push@@Base>:
   2f3a0:	str	fp, [sp, #-8]!
   2f3a4:	str	lr, [sp, #4]
   2f3a8:	add	fp, sp, #4
   2f3ac:	sub	sp, sp, #8
   2f3b0:	str	r0, [fp, #-8]
   2f3b4:	str	r1, [fp, #-12]
   2f3b8:	ldr	r3, [fp, #-8]
   2f3bc:	ldr	r3, [r3, #32]
   2f3c0:	ldrh	r3, [r3, #14]
   2f3c4:	cmp	r3, #4
   2f3c8:	beq	2f3ec <flatcc_builder_vector_push@@Base+0x4c>
   2f3cc:	ldr	r3, [pc, #208]	; 2f4a4 <flatcc_builder_vector_push@@Base+0x104>
   2f3d0:	add	r3, pc, r3
   2f3d4:	movw	r2, #907	; 0x38b
   2f3d8:	ldr	r1, [pc, #200]	; 2f4a8 <flatcc_builder_vector_push@@Base+0x108>
   2f3dc:	add	r1, pc, r1
   2f3e0:	ldr	r0, [pc, #196]	; 2f4ac <flatcc_builder_vector_push@@Base+0x10c>
   2f3e4:	add	r0, pc, r0
   2f3e8:	bl	145e8 <__assert_fail@plt>
   2f3ec:	ldr	r3, [fp, #-8]
   2f3f0:	ldr	r3, [r3, #32]
   2f3f4:	ldr	r2, [r3, #20]
   2f3f8:	ldr	r3, [fp, #-8]
   2f3fc:	ldr	r3, [r3, #32]
   2f400:	ldr	r3, [r3, #24]
   2f404:	cmp	r2, r3
   2f408:	bls	2f454 <flatcc_builder_vector_push@@Base+0xb4>
   2f40c:	ldr	r3, [fp, #-8]
   2f410:	ldr	r3, [r3, #32]
   2f414:	ldr	r2, [r3, #20]
   2f418:	ldr	r3, [fp, #-8]
   2f41c:	ldr	r3, [r3, #32]
   2f420:	ldr	r3, [r3, #24]
   2f424:	cmp	r2, r3
   2f428:	bls	2f44c <flatcc_builder_vector_push@@Base+0xac>
   2f42c:	ldr	r3, [pc, #124]	; 2f4b0 <flatcc_builder_vector_push@@Base+0x110>
   2f430:	add	r3, pc, r3
   2f434:	mov	r2, #908	; 0x38c
   2f438:	ldr	r1, [pc, #116]	; 2f4b4 <flatcc_builder_vector_push@@Base+0x114>
   2f43c:	add	r1, pc, r1
   2f440:	ldr	r0, [pc, #112]	; 2f4b8 <flatcc_builder_vector_push@@Base+0x118>
   2f444:	add	r0, pc, r0
   2f448:	bl	145e8 <__assert_fail@plt>
   2f44c:	mov	r3, #0
   2f450:	b	2f490 <flatcc_builder_vector_push@@Base+0xf0>
   2f454:	ldr	r3, [fp, #-8]
   2f458:	ldr	r3, [r3, #32]
   2f45c:	ldr	r2, [r3, #20]
   2f460:	ldr	r3, [fp, #-8]
   2f464:	ldr	r3, [r3, #32]
   2f468:	add	r2, r2, #1
   2f46c:	str	r2, [r3, #20]
   2f470:	ldr	r3, [fp, #-8]
   2f474:	ldr	r3, [r3, #32]
   2f478:	ldr	r3, [r3, #16]
   2f47c:	mov	r2, r3
   2f480:	ldr	r1, [fp, #-12]
   2f484:	ldr	r0, [fp, #-8]
   2f488:	bl	2d020 <flatcc_builder_default_alloc@@Base+0x420>
   2f48c:	mov	r3, r0
   2f490:	mov	r0, r3
   2f494:	sub	sp, fp, #4
   2f498:	ldr	fp, [sp]
   2f49c:	add	sp, sp, #4
   2f4a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2f4a4:	andeq	r2, r2, ip, asr r4
   2f4a8:	strdeq	r1, [r2], -r8
   2f4ac:	andeq	r2, r2, r4, lsr r0
   2f4b0:	strdeq	r2, [r2], -ip
   2f4b4:	muleq	r2, r8, lr
   2f4b8:	andeq	r2, r2, r0

0002f4bc <flatcc_builder_append_vector@@Base>:
   2f4bc:	str	fp, [sp, #-8]!
   2f4c0:	str	lr, [sp, #4]
   2f4c4:	add	fp, sp, #4
   2f4c8:	sub	sp, sp, #16
   2f4cc:	str	r0, [fp, #-8]
   2f4d0:	str	r1, [fp, #-12]
   2f4d4:	str	r2, [fp, #-16]
   2f4d8:	ldr	r3, [fp, #-8]
   2f4dc:	ldr	r3, [r3, #32]
   2f4e0:	ldrh	r3, [r3, #14]
   2f4e4:	cmp	r3, #4
   2f4e8:	beq	2f50c <flatcc_builder_append_vector@@Base+0x50>
   2f4ec:	ldr	r3, [pc, #132]	; 2f578 <flatcc_builder_append_vector@@Base+0xbc>
   2f4f0:	add	r3, pc, r3
   2f4f4:	movw	r2, #915	; 0x393
   2f4f8:	ldr	r1, [pc, #124]	; 2f57c <flatcc_builder_append_vector@@Base+0xc0>
   2f4fc:	add	r1, pc, r1
   2f500:	ldr	r0, [pc, #120]	; 2f580 <flatcc_builder_append_vector@@Base+0xc4>
   2f504:	add	r0, pc, r0
   2f508:	bl	145e8 <__assert_fail@plt>
   2f50c:	ldr	r3, [fp, #-8]
   2f510:	ldr	r3, [r3, #32]
   2f514:	ldr	r3, [r3, #24]
   2f518:	mov	r2, r3
   2f51c:	ldr	r1, [fp, #-16]
   2f520:	ldr	r0, [fp, #-8]
   2f524:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   2f528:	mov	r3, r0
   2f52c:	cmp	r3, #0
   2f530:	beq	2f53c <flatcc_builder_append_vector@@Base+0x80>
   2f534:	mov	r3, #0
   2f538:	b	2f564 <flatcc_builder_append_vector@@Base+0xa8>
   2f53c:	ldr	r3, [fp, #-8]
   2f540:	ldr	r3, [r3, #32]
   2f544:	ldr	r3, [r3, #16]
   2f548:	ldr	r2, [fp, #-16]
   2f54c:	mul	r3, r2, r3
   2f550:	mov	r2, r3
   2f554:	ldr	r1, [fp, #-12]
   2f558:	ldr	r0, [fp, #-8]
   2f55c:	bl	2d020 <flatcc_builder_default_alloc@@Base+0x420>
   2f560:	mov	r3, r0
   2f564:	mov	r0, r3
   2f568:	sub	sp, fp, #4
   2f56c:	ldr	fp, [sp]
   2f570:	add	sp, sp, #4
   2f574:	pop	{pc}		; (ldr pc, [sp], #4)
   2f578:	andeq	r2, r2, r8, asr r3
   2f57c:	ldrdeq	r1, [r2], -r8
   2f580:	andeq	r1, r2, r4, lsl pc

0002f584 <flatcc_builder_extend_offset_vector@@Base>:
   2f584:	str	fp, [sp, #-8]!
   2f588:	str	lr, [sp, #4]
   2f58c:	add	fp, sp, #4
   2f590:	sub	sp, sp, #8
   2f594:	str	r0, [fp, #-8]
   2f598:	str	r1, [fp, #-12]
   2f59c:	mvn	r2, #-1073741824	; 0xc0000000
   2f5a0:	ldr	r1, [fp, #-12]
   2f5a4:	ldr	r0, [fp, #-8]
   2f5a8:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   2f5ac:	mov	r3, r0
   2f5b0:	cmp	r3, #0
   2f5b4:	beq	2f5c0 <flatcc_builder_extend_offset_vector@@Base+0x3c>
   2f5b8:	mov	r3, #0
   2f5bc:	b	2f5d8 <flatcc_builder_extend_offset_vector@@Base+0x54>
   2f5c0:	ldr	r3, [fp, #-12]
   2f5c4:	lsl	r3, r3, #2
   2f5c8:	mov	r1, r3
   2f5cc:	ldr	r0, [fp, #-8]
   2f5d0:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   2f5d4:	mov	r3, r0
   2f5d8:	mov	r0, r3
   2f5dc:	sub	sp, fp, #4
   2f5e0:	ldr	fp, [sp]
   2f5e4:	add	sp, sp, #4
   2f5e8:	pop	{pc}		; (ldr pc, [sp], #4)

0002f5ec <flatcc_builder_offset_vector_push@@Base>:
   2f5ec:	str	fp, [sp, #-8]!
   2f5f0:	str	lr, [sp, #4]
   2f5f4:	add	fp, sp, #4
   2f5f8:	sub	sp, sp, #16
   2f5fc:	str	r0, [fp, #-16]
   2f600:	str	r1, [fp, #-20]	; 0xffffffec
   2f604:	ldr	r3, [fp, #-16]
   2f608:	ldr	r3, [r3, #32]
   2f60c:	ldrh	r3, [r3, #14]
   2f610:	cmp	r3, #5
   2f614:	beq	2f638 <flatcc_builder_offset_vector_push@@Base+0x4c>
   2f618:	ldr	r3, [pc, #152]	; 2f6b8 <flatcc_builder_offset_vector_push@@Base+0xcc>
   2f61c:	add	r3, pc, r3
   2f620:	movw	r2, #934	; 0x3a6
   2f624:	ldr	r1, [pc, #144]	; 2f6bc <flatcc_builder_offset_vector_push@@Base+0xd0>
   2f628:	add	r1, pc, r1
   2f62c:	ldr	r0, [pc, #140]	; 2f6c0 <flatcc_builder_offset_vector_push@@Base+0xd4>
   2f630:	add	r0, pc, r0
   2f634:	bl	145e8 <__assert_fail@plt>
   2f638:	ldr	r3, [fp, #-16]
   2f63c:	ldr	r3, [r3, #32]
   2f640:	ldr	r3, [r3, #20]
   2f644:	cmn	r3, #-1073741823	; 0xc0000001
   2f648:	bne	2f654 <flatcc_builder_offset_vector_push@@Base+0x68>
   2f64c:	mov	r3, #0
   2f650:	b	2f6a4 <flatcc_builder_offset_vector_push@@Base+0xb8>
   2f654:	ldr	r3, [fp, #-16]
   2f658:	ldr	r3, [r3, #32]
   2f65c:	ldr	r2, [r3, #20]
   2f660:	ldr	r3, [fp, #-16]
   2f664:	ldr	r3, [r3, #32]
   2f668:	add	r2, r2, #1
   2f66c:	str	r2, [r3, #20]
   2f670:	mov	r1, #4
   2f674:	ldr	r0, [fp, #-16]
   2f678:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   2f67c:	str	r0, [fp, #-8]
   2f680:	ldr	r3, [fp, #-8]
   2f684:	cmp	r3, #0
   2f688:	bne	2f694 <flatcc_builder_offset_vector_push@@Base+0xa8>
   2f68c:	mov	r3, #0
   2f690:	b	2f6a4 <flatcc_builder_offset_vector_push@@Base+0xb8>
   2f694:	ldr	r3, [fp, #-8]
   2f698:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f69c:	str	r2, [r3]
   2f6a0:	ldr	r3, [fp, #-8]
   2f6a4:	mov	r0, r3
   2f6a8:	sub	sp, fp, #4
   2f6ac:	ldr	fp, [sp]
   2f6b0:	add	sp, sp, #4
   2f6b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2f6b8:	andeq	r2, r2, ip, asr #4
   2f6bc:	andeq	r1, r2, ip, lsr #25
   2f6c0:	andeq	r1, r2, r4, asr lr

0002f6c4 <flatcc_builder_append_offset_vector@@Base>:
   2f6c4:	str	fp, [sp, #-8]!
   2f6c8:	str	lr, [sp, #4]
   2f6cc:	add	fp, sp, #4
   2f6d0:	sub	sp, sp, #16
   2f6d4:	str	r0, [fp, #-8]
   2f6d8:	str	r1, [fp, #-12]
   2f6dc:	str	r2, [fp, #-16]
   2f6e0:	ldr	r3, [fp, #-8]
   2f6e4:	ldr	r3, [r3, #32]
   2f6e8:	ldrh	r3, [r3, #14]
   2f6ec:	cmp	r3, #5
   2f6f0:	beq	2f714 <flatcc_builder_append_offset_vector@@Base+0x50>
   2f6f4:	ldr	r3, [pc, #108]	; 2f768 <flatcc_builder_append_offset_vector@@Base+0xa4>
   2f6f8:	add	r3, pc, r3
   2f6fc:	mov	r2, #948	; 0x3b4
   2f700:	ldr	r1, [pc, #100]	; 2f76c <flatcc_builder_append_offset_vector@@Base+0xa8>
   2f704:	add	r1, pc, r1
   2f708:	ldr	r0, [pc, #96]	; 2f770 <flatcc_builder_append_offset_vector@@Base+0xac>
   2f70c:	add	r0, pc, r0
   2f710:	bl	145e8 <__assert_fail@plt>
   2f714:	mvn	r2, #-1073741824	; 0xc0000000
   2f718:	ldr	r1, [fp, #-16]
   2f71c:	ldr	r0, [fp, #-8]
   2f720:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   2f724:	mov	r3, r0
   2f728:	cmp	r3, #0
   2f72c:	beq	2f738 <flatcc_builder_append_offset_vector@@Base+0x74>
   2f730:	mov	r3, #0
   2f734:	b	2f754 <flatcc_builder_append_offset_vector@@Base+0x90>
   2f738:	ldr	r3, [fp, #-16]
   2f73c:	lsl	r3, r3, #2
   2f740:	mov	r2, r3
   2f744:	ldr	r1, [fp, #-12]
   2f748:	ldr	r0, [fp, #-8]
   2f74c:	bl	2d020 <flatcc_builder_default_alloc@@Base+0x420>
   2f750:	mov	r3, r0
   2f754:	mov	r0, r3
   2f758:	sub	sp, fp, #4
   2f75c:	ldr	fp, [sp]
   2f760:	add	sp, sp, #4
   2f764:	pop	{pc}		; (ldr pc, [sp], #4)
   2f768:	muleq	r2, r4, r1
   2f76c:	ldrdeq	r1, [r2], -r0
   2f770:	andeq	r1, r2, r8, ror sp

0002f774 <flatcc_builder_extend_string@@Base>:
   2f774:	str	fp, [sp, #-8]!
   2f778:	str	lr, [sp, #4]
   2f77c:	add	fp, sp, #4
   2f780:	sub	sp, sp, #8
   2f784:	str	r0, [fp, #-8]
   2f788:	str	r1, [fp, #-12]
   2f78c:	ldr	r3, [fp, #-8]
   2f790:	ldr	r3, [r3, #32]
   2f794:	ldrh	r3, [r3, #14]
   2f798:	cmp	r3, #6
   2f79c:	beq	2f7c0 <flatcc_builder_extend_string@@Base+0x4c>
   2f7a0:	ldr	r3, [pc, #96]	; 2f808 <flatcc_builder_extend_string@@Base+0x94>
   2f7a4:	add	r3, pc, r3
   2f7a8:	movw	r2, #957	; 0x3bd
   2f7ac:	ldr	r1, [pc, #88]	; 2f80c <flatcc_builder_extend_string@@Base+0x98>
   2f7b0:	add	r1, pc, r1
   2f7b4:	ldr	r0, [pc, #84]	; 2f810 <flatcc_builder_extend_string@@Base+0x9c>
   2f7b8:	add	r0, pc, r0
   2f7bc:	bl	145e8 <__assert_fail@plt>
   2f7c0:	mvn	r2, #0
   2f7c4:	ldr	r1, [fp, #-12]
   2f7c8:	ldr	r0, [fp, #-8]
   2f7cc:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   2f7d0:	mov	r3, r0
   2f7d4:	cmp	r3, #0
   2f7d8:	beq	2f7e4 <flatcc_builder_extend_string@@Base+0x70>
   2f7dc:	mov	r3, #0
   2f7e0:	b	2f7f4 <flatcc_builder_extend_string@@Base+0x80>
   2f7e4:	ldr	r1, [fp, #-12]
   2f7e8:	ldr	r0, [fp, #-8]
   2f7ec:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   2f7f0:	mov	r3, r0
   2f7f4:	mov	r0, r3
   2f7f8:	sub	sp, fp, #4
   2f7fc:	ldr	fp, [sp]
   2f800:	add	sp, sp, #4
   2f804:	pop	{pc}		; (ldr pc, [sp], #4)
   2f808:	andeq	r2, r2, ip, lsl #2
   2f80c:	andeq	r1, r2, r4, lsr #22
   2f810:	andeq	r1, r2, r0, lsl #26

0002f814 <flatcc_builder_append_string@@Base>:
   2f814:	str	fp, [sp, #-8]!
   2f818:	str	lr, [sp, #4]
   2f81c:	add	fp, sp, #4
   2f820:	sub	sp, sp, #16
   2f824:	str	r0, [fp, #-8]
   2f828:	str	r1, [fp, #-12]
   2f82c:	str	r2, [fp, #-16]
   2f830:	ldr	r3, [fp, #-8]
   2f834:	ldr	r3, [r3, #32]
   2f838:	ldrh	r3, [r3, #14]
   2f83c:	cmp	r3, #6
   2f840:	beq	2f864 <flatcc_builder_append_string@@Base+0x50>
   2f844:	ldr	r3, [pc, #100]	; 2f8b0 <flatcc_builder_append_string@@Base+0x9c>
   2f848:	add	r3, pc, r3
   2f84c:	movw	r2, #966	; 0x3c6
   2f850:	ldr	r1, [pc, #92]	; 2f8b4 <flatcc_builder_append_string@@Base+0xa0>
   2f854:	add	r1, pc, r1
   2f858:	ldr	r0, [pc, #88]	; 2f8b8 <flatcc_builder_append_string@@Base+0xa4>
   2f85c:	add	r0, pc, r0
   2f860:	bl	145e8 <__assert_fail@plt>
   2f864:	mvn	r2, #0
   2f868:	ldr	r1, [fp, #-16]
   2f86c:	ldr	r0, [fp, #-8]
   2f870:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   2f874:	mov	r3, r0
   2f878:	cmp	r3, #0
   2f87c:	beq	2f888 <flatcc_builder_append_string@@Base+0x74>
   2f880:	mov	r3, #0
   2f884:	b	2f89c <flatcc_builder_append_string@@Base+0x88>
   2f888:	ldr	r2, [fp, #-16]
   2f88c:	ldr	r1, [fp, #-12]
   2f890:	ldr	r0, [fp, #-8]
   2f894:	bl	2d020 <flatcc_builder_default_alloc@@Base+0x420>
   2f898:	mov	r3, r0
   2f89c:	mov	r0, r3
   2f8a0:	sub	sp, fp, #4
   2f8a4:	ldr	fp, [sp]
   2f8a8:	add	sp, sp, #4
   2f8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2f8b0:	andeq	r2, r2, r8, lsl #1
   2f8b4:	andeq	r1, r2, r0, lsl #21
   2f8b8:	andeq	r1, r2, ip, asr ip

0002f8bc <flatcc_builder_append_string_str@@Base>:
   2f8bc:	str	fp, [sp, #-8]!
   2f8c0:	str	lr, [sp, #4]
   2f8c4:	add	fp, sp, #4
   2f8c8:	sub	sp, sp, #8
   2f8cc:	str	r0, [fp, #-8]
   2f8d0:	str	r1, [fp, #-12]
   2f8d4:	ldr	r0, [fp, #-12]
   2f8d8:	bl	14570 <strlen@plt>
   2f8dc:	mov	r3, r0
   2f8e0:	mov	r2, r3
   2f8e4:	ldr	r1, [fp, #-12]
   2f8e8:	ldr	r0, [fp, #-8]
   2f8ec:	bl	2f814 <flatcc_builder_append_string@@Base>
   2f8f0:	mov	r3, r0
   2f8f4:	mov	r0, r3
   2f8f8:	sub	sp, fp, #4
   2f8fc:	ldr	fp, [sp]
   2f900:	add	sp, sp, #4
   2f904:	pop	{pc}		; (ldr pc, [sp], #4)

0002f908 <flatcc_builder_append_string_strn@@Base>:
   2f908:	str	fp, [sp, #-8]!
   2f90c:	str	lr, [sp, #4]
   2f910:	add	fp, sp, #4
   2f914:	sub	sp, sp, #16
   2f918:	str	r0, [fp, #-8]
   2f91c:	str	r1, [fp, #-12]
   2f920:	str	r2, [fp, #-16]
   2f924:	ldr	r1, [fp, #-16]
   2f928:	ldr	r0, [fp, #-12]
   2f92c:	bl	2cba0 <main@@Base+0xdcc>
   2f930:	mov	r3, r0
   2f934:	mov	r2, r3
   2f938:	ldr	r1, [fp, #-12]
   2f93c:	ldr	r0, [fp, #-8]
   2f940:	bl	2f814 <flatcc_builder_append_string@@Base>
   2f944:	mov	r3, r0
   2f948:	mov	r0, r3
   2f94c:	sub	sp, fp, #4
   2f950:	ldr	fp, [sp]
   2f954:	add	sp, sp, #4
   2f958:	pop	{pc}		; (ldr pc, [sp], #4)

0002f95c <flatcc_builder_truncate_vector@@Base>:
   2f95c:	str	fp, [sp, #-8]!
   2f960:	str	lr, [sp, #4]
   2f964:	add	fp, sp, #4
   2f968:	sub	sp, sp, #8
   2f96c:	str	r0, [fp, #-8]
   2f970:	str	r1, [fp, #-12]
   2f974:	ldr	r3, [fp, #-8]
   2f978:	ldr	r3, [r3, #32]
   2f97c:	ldrh	r3, [r3, #14]
   2f980:	cmp	r3, #4
   2f984:	beq	2f9a8 <flatcc_builder_truncate_vector@@Base+0x4c>
   2f988:	ldr	r3, [pc, #200]	; 2fa58 <flatcc_builder_truncate_vector@@Base+0xfc>
   2f98c:	add	r3, pc, r3
   2f990:	movw	r2, #985	; 0x3d9
   2f994:	ldr	r1, [pc, #192]	; 2fa5c <flatcc_builder_truncate_vector@@Base+0x100>
   2f998:	add	r1, pc, r1
   2f99c:	ldr	r0, [pc, #188]	; 2fa60 <flatcc_builder_truncate_vector@@Base+0x104>
   2f9a0:	add	r0, pc, r0
   2f9a4:	bl	145e8 <__assert_fail@plt>
   2f9a8:	ldr	r3, [fp, #-8]
   2f9ac:	ldr	r3, [r3, #32]
   2f9b0:	ldr	r3, [r3, #20]
   2f9b4:	ldr	r2, [fp, #-12]
   2f9b8:	cmp	r2, r3
   2f9bc:	bls	2fa00 <flatcc_builder_truncate_vector@@Base+0xa4>
   2f9c0:	ldr	r3, [fp, #-8]
   2f9c4:	ldr	r3, [r3, #32]
   2f9c8:	ldr	r3, [r3, #20]
   2f9cc:	ldr	r2, [fp, #-12]
   2f9d0:	cmp	r2, r3
   2f9d4:	bls	2f9f8 <flatcc_builder_truncate_vector@@Base+0x9c>
   2f9d8:	ldr	r3, [pc, #132]	; 2fa64 <flatcc_builder_truncate_vector@@Base+0x108>
   2f9dc:	add	r3, pc, r3
   2f9e0:	movw	r2, #986	; 0x3da
   2f9e4:	ldr	r1, [pc, #124]	; 2fa68 <flatcc_builder_truncate_vector@@Base+0x10c>
   2f9e8:	add	r1, pc, r1
   2f9ec:	ldr	r0, [pc, #120]	; 2fa6c <flatcc_builder_truncate_vector@@Base+0x110>
   2f9f0:	add	r0, pc, r0
   2f9f4:	bl	145e8 <__assert_fail@plt>
   2f9f8:	mvn	r3, #0
   2f9fc:	b	2fa44 <flatcc_builder_truncate_vector@@Base+0xe8>
   2fa00:	ldr	r3, [fp, #-8]
   2fa04:	ldr	r3, [r3, #32]
   2fa08:	ldr	r1, [r3, #20]
   2fa0c:	ldr	r3, [fp, #-8]
   2fa10:	ldr	r3, [r3, #32]
   2fa14:	ldr	r2, [fp, #-12]
   2fa18:	sub	r2, r1, r2
   2fa1c:	str	r2, [r3, #20]
   2fa20:	ldr	r3, [fp, #-8]
   2fa24:	ldr	r3, [r3, #32]
   2fa28:	ldr	r3, [r3, #16]
   2fa2c:	ldr	r2, [fp, #-12]
   2fa30:	mul	r3, r2, r3
   2fa34:	mov	r1, r3
   2fa38:	ldr	r0, [fp, #-8]
   2fa3c:	bl	2cfb8 <flatcc_builder_default_alloc@@Base+0x3b8>
   2fa40:	mov	r3, #0
   2fa44:	mov	r0, r3
   2fa48:	sub	sp, fp, #4
   2fa4c:	ldr	fp, [sp]
   2fa50:	add	sp, sp, #4
   2fa54:	pop	{pc}		; (ldr pc, [sp], #4)
   2fa58:	andeq	r1, r2, r4, ror #30
   2fa5c:	andeq	r1, r2, ip, lsr r9
   2fa60:	andeq	r1, r2, r8, ror sl
   2fa64:	andeq	r1, r2, r4, lsl pc
   2fa68:	andeq	r1, r2, ip, ror #17
   2fa6c:	strdeq	r1, [r2], -r4

0002fa70 <flatcc_builder_truncate_offset_vector@@Base>:
   2fa70:	str	fp, [sp, #-8]!
   2fa74:	str	lr, [sp, #4]
   2fa78:	add	fp, sp, #4
   2fa7c:	sub	sp, sp, #8
   2fa80:	str	r0, [fp, #-8]
   2fa84:	str	r1, [fp, #-12]
   2fa88:	ldr	r3, [fp, #-8]
   2fa8c:	ldr	r3, [r3, #32]
   2fa90:	ldrh	r3, [r3, #14]
   2fa94:	cmp	r3, #5
   2fa98:	beq	2fabc <flatcc_builder_truncate_offset_vector@@Base+0x4c>
   2fa9c:	ldr	r3, [pc, #200]	; 2fb6c <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   2faa0:	add	r3, pc, r3
   2faa4:	movw	r2, #994	; 0x3e2
   2faa8:	ldr	r1, [pc, #192]	; 2fb70 <flatcc_builder_truncate_offset_vector@@Base+0x100>
   2faac:	add	r1, pc, r1
   2fab0:	ldr	r0, [pc, #188]	; 2fb74 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   2fab4:	add	r0, pc, r0
   2fab8:	bl	145e8 <__assert_fail@plt>
   2fabc:	ldr	r3, [fp, #-8]
   2fac0:	ldr	r3, [r3, #32]
   2fac4:	ldr	r3, [r3, #20]
   2fac8:	ldr	r2, [fp, #-12]
   2facc:	cmp	r2, r3
   2fad0:	bls	2fb14 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   2fad4:	ldr	r3, [fp, #-8]
   2fad8:	ldr	r3, [r3, #32]
   2fadc:	ldr	r3, [r3, #20]
   2fae0:	ldr	r2, [fp, #-12]
   2fae4:	cmp	r2, r3
   2fae8:	bls	2fb0c <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   2faec:	ldr	r3, [pc, #132]	; 2fb78 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   2faf0:	add	r3, pc, r3
   2faf4:	movw	r2, #995	; 0x3e3
   2faf8:	ldr	r1, [pc, #124]	; 2fb7c <flatcc_builder_truncate_offset_vector@@Base+0x10c>
   2fafc:	add	r1, pc, r1
   2fb00:	ldr	r0, [pc, #120]	; 2fb80 <flatcc_builder_truncate_offset_vector@@Base+0x110>
   2fb04:	add	r0, pc, r0
   2fb08:	bl	145e8 <__assert_fail@plt>
   2fb0c:	mvn	r3, #0
   2fb10:	b	2fb58 <flatcc_builder_truncate_offset_vector@@Base+0xe8>
   2fb14:	ldr	r3, [fp, #-8]
   2fb18:	ldr	r3, [r3, #32]
   2fb1c:	ldr	r1, [r3, #20]
   2fb20:	ldr	r3, [fp, #-8]
   2fb24:	ldr	r3, [r3, #32]
   2fb28:	ldr	r2, [fp, #-12]
   2fb2c:	sub	r2, r1, r2
   2fb30:	str	r2, [r3, #20]
   2fb34:	ldr	r3, [fp, #-8]
   2fb38:	ldr	r3, [r3, #32]
   2fb3c:	ldr	r3, [r3, #16]
   2fb40:	ldr	r2, [fp, #-12]
   2fb44:	mul	r3, r2, r3
   2fb48:	mov	r1, r3
   2fb4c:	ldr	r0, [fp, #-8]
   2fb50:	bl	2cfb8 <flatcc_builder_default_alloc@@Base+0x3b8>
   2fb54:	mov	r3, #0
   2fb58:	mov	r0, r3
   2fb5c:	sub	sp, fp, #4
   2fb60:	ldr	fp, [sp]
   2fb64:	add	sp, sp, #4
   2fb68:	pop	{pc}		; (ldr pc, [sp], #4)
   2fb6c:	andeq	r1, r2, r0, ror lr
   2fb70:	andeq	r1, r2, r8, lsr #16
   2fb74:	ldrdeq	r1, [r2], -r0
   2fb78:	andeq	r1, r2, r0, lsr #28
   2fb7c:	ldrdeq	r1, [r2], -r8
   2fb80:	andeq	r1, r2, r4, lsl #20

0002fb84 <flatcc_builder_truncate_string@@Base>:
   2fb84:	str	fp, [sp, #-8]!
   2fb88:	str	lr, [sp, #4]
   2fb8c:	add	fp, sp, #4
   2fb90:	sub	sp, sp, #8
   2fb94:	str	r0, [fp, #-8]
   2fb98:	str	r1, [fp, #-12]
   2fb9c:	ldr	r3, [fp, #-8]
   2fba0:	ldr	r3, [r3, #32]
   2fba4:	ldrh	r3, [r3, #14]
   2fba8:	cmp	r3, #6
   2fbac:	beq	2fbd0 <flatcc_builder_truncate_string@@Base+0x4c>
   2fbb0:	ldr	r3, [pc, #180]	; 2fc6c <flatcc_builder_truncate_string@@Base+0xe8>
   2fbb4:	add	r3, pc, r3
   2fbb8:	movw	r2, #1003	; 0x3eb
   2fbbc:	ldr	r1, [pc, #172]	; 2fc70 <flatcc_builder_truncate_string@@Base+0xec>
   2fbc0:	add	r1, pc, r1
   2fbc4:	ldr	r0, [pc, #168]	; 2fc74 <flatcc_builder_truncate_string@@Base+0xf0>
   2fbc8:	add	r0, pc, r0
   2fbcc:	bl	145e8 <__assert_fail@plt>
   2fbd0:	ldr	r3, [fp, #-8]
   2fbd4:	ldr	r3, [r3, #32]
   2fbd8:	ldr	r3, [r3, #20]
   2fbdc:	ldr	r2, [fp, #-12]
   2fbe0:	cmp	r2, r3
   2fbe4:	bls	2fc28 <flatcc_builder_truncate_string@@Base+0xa4>
   2fbe8:	ldr	r3, [fp, #-8]
   2fbec:	ldr	r3, [r3, #32]
   2fbf0:	ldr	r3, [r3, #20]
   2fbf4:	ldr	r2, [fp, #-12]
   2fbf8:	cmp	r2, r3
   2fbfc:	bls	2fc20 <flatcc_builder_truncate_string@@Base+0x9c>
   2fc00:	ldr	r3, [pc, #112]	; 2fc78 <flatcc_builder_truncate_string@@Base+0xf4>
   2fc04:	add	r3, pc, r3
   2fc08:	mov	r2, #1004	; 0x3ec
   2fc0c:	ldr	r1, [pc, #104]	; 2fc7c <flatcc_builder_truncate_string@@Base+0xf8>
   2fc10:	add	r1, pc, r1
   2fc14:	ldr	r0, [pc, #100]	; 2fc80 <flatcc_builder_truncate_string@@Base+0xfc>
   2fc18:	add	r0, pc, r0
   2fc1c:	bl	145e8 <__assert_fail@plt>
   2fc20:	mvn	r3, #0
   2fc24:	b	2fc58 <flatcc_builder_truncate_string@@Base+0xd4>
   2fc28:	ldr	r3, [fp, #-8]
   2fc2c:	ldr	r3, [r3, #32]
   2fc30:	ldr	r1, [r3, #20]
   2fc34:	ldr	r3, [fp, #-8]
   2fc38:	ldr	r3, [r3, #32]
   2fc3c:	ldr	r2, [fp, #-12]
   2fc40:	sub	r2, r1, r2
   2fc44:	str	r2, [r3, #20]
   2fc48:	ldr	r1, [fp, #-12]
   2fc4c:	ldr	r0, [fp, #-8]
   2fc50:	bl	2cfb8 <flatcc_builder_default_alloc@@Base+0x3b8>
   2fc54:	mov	r3, #0
   2fc58:	mov	r0, r3
   2fc5c:	sub	sp, fp, #4
   2fc60:	ldr	fp, [sp]
   2fc64:	add	sp, sp, #4
   2fc68:	pop	{pc}		; (ldr pc, [sp], #4)
   2fc6c:	andeq	r1, r2, r4, lsl #27
   2fc70:	andeq	r1, r2, r4, lsl r7
   2fc74:	strdeq	r1, [r2], -r0
   2fc78:	andeq	r1, r2, r4, lsr sp
   2fc7c:	andeq	r1, r2, r4, asr #13
   2fc80:	andeq	r1, r2, ip, lsr #18

0002fc84 <flatcc_builder_start_vector@@Base>:
   2fc84:	str	fp, [sp, #-8]!
   2fc88:	str	lr, [sp, #4]
   2fc8c:	add	fp, sp, #4
   2fc90:	sub	sp, sp, #16
   2fc94:	str	r0, [fp, #-8]
   2fc98:	str	r1, [fp, #-12]
   2fc9c:	str	r3, [fp, #-20]	; 0xffffffec
   2fca0:	mov	r3, r2
   2fca4:	strh	r3, [fp, #-14]
   2fca8:	sub	r3, fp, #14
   2fcac:	mov	r1, #4
   2fcb0:	mov	r0, r3
   2fcb4:	bl	2dc00 <flatcc_builder_clear@@Base+0x10c>
   2fcb8:	ldrh	r3, [fp, #-14]
   2fcbc:	mov	r1, r3
   2fcc0:	ldr	r0, [fp, #-8]
   2fcc4:	bl	2df74 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2fcc8:	mov	r3, r0
   2fccc:	cmp	r3, #0
   2fcd0:	beq	2fcdc <flatcc_builder_start_vector@@Base+0x58>
   2fcd4:	mvn	r3, #0
   2fcd8:	b	2fd2c <flatcc_builder_start_vector@@Base+0xa8>
   2fcdc:	ldr	r3, [fp, #-8]
   2fce0:	ldr	r3, [r3, #32]
   2fce4:	ldr	r2, [fp, #-12]
   2fce8:	str	r2, [r3, #16]
   2fcec:	ldr	r3, [fp, #-8]
   2fcf0:	ldr	r3, [r3, #32]
   2fcf4:	mov	r2, #0
   2fcf8:	str	r2, [r3, #20]
   2fcfc:	ldr	r3, [fp, #-8]
   2fd00:	ldr	r3, [r3, #32]
   2fd04:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fd08:	str	r2, [r3, #24]
   2fd0c:	ldr	r3, [fp, #-8]
   2fd10:	ldr	r3, [r3, #32]
   2fd14:	mov	r2, #4
   2fd18:	strh	r2, [r3, #14]
   2fd1c:	mvn	r1, #3
   2fd20:	ldr	r0, [fp, #-8]
   2fd24:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   2fd28:	mov	r3, #0
   2fd2c:	mov	r0, r3
   2fd30:	sub	sp, fp, #4
   2fd34:	ldr	fp, [sp]
   2fd38:	add	sp, sp, #4
   2fd3c:	pop	{pc}		; (ldr pc, [sp], #4)

0002fd40 <flatcc_builder_start_offset_vector@@Base>:
   2fd40:	str	fp, [sp, #-8]!
   2fd44:	str	lr, [sp, #4]
   2fd48:	add	fp, sp, #4
   2fd4c:	sub	sp, sp, #8
   2fd50:	str	r0, [fp, #-8]
   2fd54:	mov	r1, #4
   2fd58:	ldr	r0, [fp, #-8]
   2fd5c:	bl	2df74 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2fd60:	mov	r3, r0
   2fd64:	cmp	r3, #0
   2fd68:	beq	2fd74 <flatcc_builder_start_offset_vector@@Base+0x34>
   2fd6c:	mvn	r3, #0
   2fd70:	b	2fdb4 <flatcc_builder_start_offset_vector@@Base+0x74>
   2fd74:	ldr	r3, [fp, #-8]
   2fd78:	ldr	r3, [r3, #32]
   2fd7c:	mov	r2, #4
   2fd80:	str	r2, [r3, #16]
   2fd84:	ldr	r3, [fp, #-8]
   2fd88:	ldr	r3, [r3, #32]
   2fd8c:	mov	r2, #0
   2fd90:	str	r2, [r3, #20]
   2fd94:	ldr	r3, [fp, #-8]
   2fd98:	ldr	r3, [r3, #32]
   2fd9c:	mov	r2, #5
   2fda0:	strh	r2, [r3, #14]
   2fda4:	mvn	r1, #3
   2fda8:	ldr	r0, [fp, #-8]
   2fdac:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   2fdb0:	mov	r3, #0
   2fdb4:	mov	r0, r3
   2fdb8:	sub	sp, fp, #4
   2fdbc:	ldr	fp, [sp]
   2fdc0:	add	sp, sp, #4
   2fdc4:	pop	{pc}		; (ldr pc, [sp], #4)

0002fdc8 <flatcc_builder_create_offset_vector@@Base>:
   2fdc8:	str	fp, [sp, #-8]!
   2fdcc:	str	lr, [sp, #4]
   2fdd0:	add	fp, sp, #4
   2fdd4:	sub	sp, sp, #24
   2fdd8:	str	r0, [fp, #-16]
   2fddc:	str	r1, [fp, #-20]	; 0xffffffec
   2fde0:	str	r2, [fp, #-24]	; 0xffffffe8
   2fde4:	ldr	r0, [fp, #-16]
   2fde8:	bl	2fd40 <flatcc_builder_start_offset_vector@@Base>
   2fdec:	mov	r3, r0
   2fdf0:	cmp	r3, #0
   2fdf4:	beq	2fe00 <flatcc_builder_create_offset_vector@@Base+0x38>
   2fdf8:	mov	r3, #0
   2fdfc:	b	2fe48 <flatcc_builder_create_offset_vector@@Base+0x80>
   2fe00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fe04:	ldr	r0, [fp, #-16]
   2fe08:	bl	2f584 <flatcc_builder_extend_offset_vector@@Base>
   2fe0c:	str	r0, [fp, #-8]
   2fe10:	ldr	r3, [fp, #-8]
   2fe14:	cmp	r3, #0
   2fe18:	bne	2fe24 <flatcc_builder_create_offset_vector@@Base+0x5c>
   2fe1c:	mov	r3, #0
   2fe20:	b	2fe48 <flatcc_builder_create_offset_vector@@Base+0x80>
   2fe24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe28:	lsl	r3, r3, #2
   2fe2c:	mov	r2, r3
   2fe30:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fe34:	ldr	r0, [fp, #-8]
   2fe38:	bl	1451c <memcpy@plt>
   2fe3c:	ldr	r0, [fp, #-16]
   2fe40:	bl	31448 <flatcc_builder_end_offset_vector@@Base>
   2fe44:	mov	r3, r0
   2fe48:	mov	r0, r3
   2fe4c:	sub	sp, fp, #4
   2fe50:	ldr	fp, [sp]
   2fe54:	add	sp, sp, #4
   2fe58:	pop	{pc}		; (ldr pc, [sp], #4)

0002fe5c <flatcc_builder_start_string@@Base>:
   2fe5c:	str	fp, [sp, #-8]!
   2fe60:	str	lr, [sp, #4]
   2fe64:	add	fp, sp, #4
   2fe68:	sub	sp, sp, #8
   2fe6c:	str	r0, [fp, #-8]
   2fe70:	mov	r1, #1
   2fe74:	ldr	r0, [fp, #-8]
   2fe78:	bl	2df74 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2fe7c:	mov	r3, r0
   2fe80:	cmp	r3, #0
   2fe84:	beq	2fe90 <flatcc_builder_start_string@@Base+0x34>
   2fe88:	mvn	r3, #0
   2fe8c:	b	2fed0 <flatcc_builder_start_string@@Base+0x74>
   2fe90:	ldr	r3, [fp, #-8]
   2fe94:	ldr	r3, [r3, #32]
   2fe98:	mov	r2, #1
   2fe9c:	str	r2, [r3, #16]
   2fea0:	ldr	r3, [fp, #-8]
   2fea4:	ldr	r3, [r3, #32]
   2fea8:	mov	r2, #0
   2feac:	str	r2, [r3, #20]
   2feb0:	ldr	r3, [fp, #-8]
   2feb4:	ldr	r3, [r3, #32]
   2feb8:	mov	r2, #6
   2febc:	strh	r2, [r3, #14]
   2fec0:	mvn	r1, #3
   2fec4:	ldr	r0, [fp, #-8]
   2fec8:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   2fecc:	mov	r3, #0
   2fed0:	mov	r0, r3
   2fed4:	sub	sp, fp, #4
   2fed8:	ldr	fp, [sp]
   2fedc:	add	sp, sp, #4
   2fee0:	pop	{pc}		; (ldr pc, [sp], #4)

0002fee4 <flatcc_builder_reserve_table@@Base>:
   2fee4:	str	fp, [sp, #-8]!
   2fee8:	str	lr, [sp, #4]
   2feec:	add	fp, sp, #4
   2fef0:	sub	sp, sp, #8
   2fef4:	str	r0, [fp, #-8]
   2fef8:	str	r1, [fp, #-12]
   2fefc:	ldr	r3, [fp, #-12]
   2ff00:	cmp	r3, #0
   2ff04:	bge	2ff28 <flatcc_builder_reserve_table@@Base+0x44>
   2ff08:	ldr	r3, [pc, #60]	; 2ff4c <flatcc_builder_reserve_table@@Base+0x68>
   2ff0c:	add	r3, pc, r3
   2ff10:	movw	r2, #1065	; 0x429
   2ff14:	ldr	r1, [pc, #52]	; 2ff50 <flatcc_builder_reserve_table@@Base+0x6c>
   2ff18:	add	r1, pc, r1
   2ff1c:	ldr	r0, [pc, #48]	; 2ff54 <flatcc_builder_reserve_table@@Base+0x70>
   2ff20:	add	r0, pc, r0
   2ff24:	bl	145e8 <__assert_fail@plt>
   2ff28:	ldr	r1, [fp, #-12]
   2ff2c:	ldr	r0, [fp, #-8]
   2ff30:	bl	2d3b0 <flatcc_builder_default_alloc@@Base+0x7b0>
   2ff34:	mov	r3, r0
   2ff38:	mov	r0, r3
   2ff3c:	sub	sp, fp, #4
   2ff40:	ldr	fp, [sp]
   2ff44:	add	sp, sp, #4
   2ff48:	pop	{pc}		; (ldr pc, [sp], #4)
   2ff4c:	andeq	r1, r2, ip, asr #20
   2ff50:			; <UNDEFINED> instruction: 0x000213bc
   2ff54:	andeq	r1, r2, r8, asr #12

0002ff58 <flatcc_builder_start_table@@Base>:
   2ff58:	str	fp, [sp, #-8]!
   2ff5c:	str	lr, [sp, #4]
   2ff60:	add	fp, sp, #4
   2ff64:	sub	sp, sp, #8
   2ff68:	str	r0, [fp, #-8]
   2ff6c:	str	r1, [fp, #-12]
   2ff70:	mov	r1, #4
   2ff74:	ldr	r0, [fp, #-8]
   2ff78:	bl	2df74 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2ff7c:	mov	r3, r0
   2ff80:	cmp	r3, #0
   2ff84:	beq	2ff90 <flatcc_builder_start_table@@Base+0x38>
   2ff88:	mvn	r3, #0
   2ff8c:	b	30070 <flatcc_builder_start_table@@Base+0x118>
   2ff90:	ldr	r3, [fp, #-8]
   2ff94:	ldr	r3, [r3, #4]
   2ff98:	mov	r1, r3
   2ff9c:	ldr	r3, [fp, #-8]
   2ffa0:	ldr	r3, [r3, #52]	; 0x34
   2ffa4:	mov	r2, r3
   2ffa8:	ldr	r3, [fp, #-8]
   2ffac:	ldr	r3, [r3, #32]
   2ffb0:	sub	r2, r1, r2
   2ffb4:	str	r2, [r3, #16]
   2ffb8:	ldr	r3, [fp, #-8]
   2ffbc:	ldr	r3, [r3]
   2ffc0:	mov	r1, r3
   2ffc4:	ldr	r3, [fp, #-8]
   2ffc8:	ldr	r3, [r3, #76]	; 0x4c
   2ffcc:	mov	r2, r3
   2ffd0:	ldr	r3, [fp, #-8]
   2ffd4:	ldr	r3, [r3, #32]
   2ffd8:	sub	r2, r1, r2
   2ffdc:	str	r2, [r3, #20]
   2ffe0:	ldr	r3, [fp, #-8]
   2ffe4:	ldr	r3, [r3, #32]
   2ffe8:	ldr	r2, [fp, #-8]
   2ffec:	ldr	r2, [r2, #12]
   2fff0:	str	r2, [r3, #24]
   2fff4:	ldr	r3, [fp, #-8]
   2fff8:	ldr	r3, [r3, #32]
   2fffc:	ldr	r2, [fp, #-8]
   30000:	ldrh	r2, [r2, #8]
   30004:	strh	r2, [r3, #28]
   30008:	ldr	r3, [fp, #-8]
   3000c:	mov	r2, #0
   30010:	str	r2, [r3, #12]
   30014:	ldr	r2, [fp, #-8]
   30018:	movw	r3, #15186	; 0x3b52
   3001c:	movt	r3, #12137	; 0x2f69
   30020:	str	r3, [r2, #12]
   30024:	ldr	r3, [fp, #-8]
   30028:	mov	r2, #0
   3002c:	strh	r2, [r3, #8]
   30030:	ldr	r3, [fp, #-8]
   30034:	ldr	r3, [r3, #32]
   30038:	mov	r2, #3
   3003c:	strh	r2, [r3, #14]
   30040:	ldr	r1, [fp, #-12]
   30044:	ldr	r0, [fp, #-8]
   30048:	bl	2d3b0 <flatcc_builder_default_alloc@@Base+0x7b0>
   3004c:	mov	r3, r0
   30050:	cmp	r3, #0
   30054:	beq	30060 <flatcc_builder_start_table@@Base+0x108>
   30058:	mvn	r3, #0
   3005c:	b	30070 <flatcc_builder_start_table@@Base+0x118>
   30060:	movw	r1, #65532	; 0xfffc
   30064:	ldr	r0, [fp, #-8]
   30068:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   3006c:	mov	r3, #0
   30070:	mov	r0, r3
   30074:	sub	sp, fp, #4
   30078:	ldr	fp, [sp]
   3007c:	add	sp, sp, #4
   30080:	pop	{pc}		; (ldr pc, [sp], #4)

00030084 <flatcc_builder_create_vtable@@Base>:
   30084:	str	fp, [sp, #-8]!
   30088:	str	lr, [sp, #4]
   3008c:	add	fp, sp, #4
   30090:	sub	sp, sp, #96	; 0x60
   30094:	str	r0, [fp, #-88]	; 0xffffffa8
   30098:	str	r1, [fp, #-92]	; 0xffffffa4
   3009c:	mov	r3, r2
   300a0:	strh	r3, [fp, #-94]	; 0xffffffa2
   300a4:	mov	r3, #0
   300a8:	str	r3, [fp, #-80]	; 0xffffffb0
   300ac:	mov	r3, #0
   300b0:	str	r3, [fp, #-76]	; 0xffffffb4
   300b4:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   300b8:	cmp	r3, #0
   300bc:	beq	30114 <flatcc_builder_create_vtable@@Base+0x90>
   300c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   300c4:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   300c8:	add	r3, r2, r3
   300cc:	str	r3, [fp, #-80]	; 0xffffffb0
   300d0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   300d4:	add	r3, r3, #1
   300d8:	lsl	r3, r3, #3
   300dc:	sub	r2, fp, #4
   300e0:	add	r3, r2, r3
   300e4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   300e8:	str	r2, [r3, #-76]	; 0xffffffb4
   300ec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   300f0:	ldrh	r2, [fp, #-94]	; 0xffffffa2
   300f4:	add	r3, r3, #1
   300f8:	lsl	r3, r3, #3
   300fc:	sub	r1, fp, #4
   30100:	add	r3, r1, r3
   30104:	str	r2, [r3, #-72]	; 0xffffffb8
   30108:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3010c:	add	r3, r3, #1
   30110:	str	r3, [fp, #-76]	; 0xffffffb4
   30114:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30118:	ldr	r3, [r3, #152]	; 0x98
   3011c:	cmp	r3, #0
   30120:	bne	3015c <flatcc_builder_create_vtable@@Base+0xd8>
   30124:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30128:	ldr	r3, [r3, #180]	; 0xb4
   3012c:	cmp	r3, #0
   30130:	bne	3015c <flatcc_builder_create_vtable@@Base+0xd8>
   30134:	sub	r3, fp, #80	; 0x50
   30138:	mov	r1, r3
   3013c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30140:	bl	2e3c8 <flatcc_builder_get_user_frame_ptr@@Base+0x488>
   30144:	str	r0, [fp, #-8]
   30148:	ldr	r3, [fp, #-8]
   3014c:	cmp	r3, #0
   30150:	bne	30190 <flatcc_builder_create_vtable@@Base+0x10c>
   30154:	mov	r3, #0
   30158:	b	30194 <flatcc_builder_create_vtable@@Base+0x110>
   3015c:	sub	r3, fp, #80	; 0x50
   30160:	mov	r1, r3
   30164:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30168:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   3016c:	str	r0, [fp, #-8]
   30170:	ldr	r3, [fp, #-8]
   30174:	cmp	r3, #0
   30178:	bne	30184 <flatcc_builder_create_vtable@@Base+0x100>
   3017c:	mov	r3, #0
   30180:	b	30194 <flatcc_builder_create_vtable@@Base+0x110>
   30184:	ldr	r3, [fp, #-8]
   30188:	add	r3, r3, #1
   3018c:	str	r3, [fp, #-8]
   30190:	ldr	r3, [fp, #-8]
   30194:	mov	r0, r3
   30198:	sub	sp, fp, #4
   3019c:	ldr	fp, [sp]
   301a0:	add	sp, sp, #4
   301a4:	pop	{pc}		; (ldr pc, [sp], #4)

000301a8 <flatcc_builder_create_cached_vtable@@Base>:
   301a8:	str	fp, [sp, #-8]!
   301ac:	str	lr, [sp, #4]
   301b0:	add	fp, sp, #4
   301b4:	sub	sp, sp, #48	; 0x30
   301b8:	str	r0, [fp, #-32]	; 0xffffffe0
   301bc:	str	r1, [fp, #-36]	; 0xffffffdc
   301c0:	str	r3, [fp, #-44]	; 0xffffffd4
   301c4:	mov	r3, r2
   301c8:	strh	r3, [fp, #-38]	; 0xffffffda
   301cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   301d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   301d4:	bl	2d638 <flatcc_builder_default_alloc@@Base+0xa38>
   301d8:	str	r0, [fp, #-20]	; 0xffffffec
   301dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   301e0:	cmp	r3, #0
   301e4:	bne	301f0 <flatcc_builder_create_cached_vtable@@Base+0x48>
   301e8:	mov	r3, #0
   301ec:	b	304b4 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   301f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   301f4:	str	r3, [fp, #-12]
   301f8:	ldr	r3, [fp, #-12]
   301fc:	ldr	r3, [r3]
   30200:	str	r3, [fp, #-16]
   30204:	mov	r3, #0
   30208:	str	r3, [fp, #-8]
   3020c:	b	30310 <flatcc_builder_create_cached_vtable@@Base+0x168>
   30210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30214:	ldr	r2, [r3, #100]	; 0x64
   30218:	ldr	r3, [fp, #-16]
   3021c:	add	r3, r2, r3
   30220:	str	r3, [fp, #-24]	; 0xffffffe8
   30224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30228:	ldr	r2, [r3, #68]	; 0x44
   3022c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30230:	ldr	r3, [r3, #8]
   30234:	add	r3, r2, r3
   30238:	str	r3, [fp, #-28]	; 0xffffffe4
   3023c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30240:	ldrh	r3, [r3]
   30244:	ldrh	r2, [fp, #-38]	; 0xffffffda
   30248:	cmp	r2, r3
   3024c:	bne	30270 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   30250:	ldrh	r3, [fp, #-38]	; 0xffffffda
   30254:	mov	r2, r3
   30258:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3025c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30260:	bl	14528 <memcmp@plt>
   30264:	mov	r3, r0
   30268:	cmp	r3, #0
   3026c:	beq	3028c <flatcc_builder_create_cached_vtable@@Base+0xe4>
   30270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30274:	add	r3, r3, #12
   30278:	str	r3, [fp, #-12]
   3027c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30280:	ldr	r3, [r3, #12]
   30284:	str	r3, [fp, #-16]
   30288:	b	30310 <flatcc_builder_create_cached_vtable@@Base+0x168>
   3028c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30290:	ldr	r2, [r3, #4]
   30294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30298:	ldr	r3, [r3, #152]	; 0x98
   3029c:	cmp	r2, r3
   302a0:	beq	302c8 <flatcc_builder_create_cached_vtable@@Base+0x120>
   302a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302a8:	str	r3, [fp, #-8]
   302ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302b0:	add	r3, r3, #12
   302b4:	str	r3, [fp, #-12]
   302b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302bc:	ldr	r3, [r3, #12]
   302c0:	str	r3, [fp, #-16]
   302c4:	b	30310 <flatcc_builder_create_cached_vtable@@Base+0x168>
   302c8:	ldr	r2, [fp, #-12]
   302cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   302d0:	cmp	r2, r3
   302d4:	beq	30304 <flatcc_builder_create_cached_vtable@@Base+0x15c>
   302d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302dc:	ldr	r2, [r3, #12]
   302e0:	ldr	r3, [fp, #-12]
   302e4:	str	r2, [r3]
   302e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   302ec:	ldr	r2, [r3]
   302f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302f4:	str	r2, [r3, #12]
   302f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   302fc:	ldr	r2, [fp, #-16]
   30300:	str	r2, [r3]
   30304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30308:	ldr	r3, [r3]
   3030c:	b	304b4 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   30310:	ldr	r3, [fp, #-16]
   30314:	cmp	r3, #0
   30318:	bne	30210 <flatcc_builder_create_cached_vtable@@Base+0x68>
   3031c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30320:	ldr	r2, [r3, #124]	; 0x7c
   30324:	mov	r3, #0
   30328:	str	r3, [sp]
   3032c:	mov	r3, #16
   30330:	mov	r1, #6
   30334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30338:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   3033c:	str	r0, [fp, #-24]	; 0xffffffe8
   30340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30344:	cmp	r3, #0
   30348:	bne	30354 <flatcc_builder_create_cached_vtable@@Base+0x1ac>
   3034c:	mov	r3, #0
   30350:	b	304b4 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   30354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30358:	ldr	r3, [r3, #124]	; 0x7c
   3035c:	str	r3, [fp, #-16]
   30360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30364:	ldr	r3, [r3, #124]	; 0x7c
   30368:	add	r2, r3, #16
   3036c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30370:	str	r2, [r3, #124]	; 0x7c
   30374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30378:	ldr	r2, [r3, #152]	; 0x98
   3037c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30380:	str	r2, [r3, #4]
   30384:	ldr	r3, [fp, #-20]	; 0xffffffec
   30388:	ldr	r2, [r3]
   3038c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30390:	str	r2, [r3, #12]
   30394:	ldr	r3, [fp, #-20]	; 0xffffffec
   30398:	ldr	r2, [fp, #-16]
   3039c:	str	r2, [r3]
   303a0:	ldrh	r3, [fp, #-38]	; 0xffffffda
   303a4:	mov	r2, r3
   303a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   303ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   303b0:	bl	30084 <flatcc_builder_create_vtable@@Base>
   303b4:	mov	r2, r0
   303b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   303bc:	str	r2, [r3]
   303c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   303c4:	ldr	r3, [r3]
   303c8:	cmp	r3, #0
   303cc:	bne	303d8 <flatcc_builder_create_cached_vtable@@Base+0x230>
   303d0:	mov	r3, #0
   303d4:	b	304b4 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   303d8:	ldr	r3, [fp, #-8]
   303dc:	cmp	r3, #0
   303e0:	beq	303f8 <flatcc_builder_create_cached_vtable@@Base+0x250>
   303e4:	ldr	r3, [fp, #-8]
   303e8:	ldr	r2, [r3, #8]
   303ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   303f0:	str	r2, [r3, #8]
   303f4:	b	304ac <flatcc_builder_create_cached_vtable@@Base+0x304>
   303f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   303fc:	ldr	r3, [r3, #172]	; 0xac
   30400:	cmp	r3, #0
   30404:	beq	30434 <flatcc_builder_create_cached_vtable@@Base+0x28c>
   30408:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3040c:	ldr	r2, [r3, #172]	; 0xac
   30410:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30414:	ldr	r1, [r3, #120]	; 0x78
   30418:	ldrh	r3, [fp, #-38]	; 0xffffffda
   3041c:	add	r3, r1, r3
   30420:	cmp	r2, r3
   30424:	bcs	30434 <flatcc_builder_create_cached_vtable@@Base+0x28c>
   30428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3042c:	bl	2d6bc <flatcc_builder_flush_vtable_cache@@Base>
   30430:	b	304ac <flatcc_builder_create_cached_vtable@@Base+0x304>
   30434:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30438:	ldr	r2, [r3, #120]	; 0x78
   3043c:	ldrh	r1, [fp, #-38]	; 0xffffffda
   30440:	mov	r3, #0
   30444:	str	r3, [sp]
   30448:	mov	r3, r1
   3044c:	mov	r1, #2
   30450:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30454:	bl	2d2c4 <flatcc_builder_default_alloc@@Base+0x6c4>
   30458:	str	r0, [fp, #-28]	; 0xffffffe4
   3045c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30460:	cmp	r3, #0
   30464:	bne	30470 <flatcc_builder_create_cached_vtable@@Base+0x2c8>
   30468:	mvn	r3, #0
   3046c:	b	304b4 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   30470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30474:	ldr	r2, [r3, #120]	; 0x78
   30478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3047c:	str	r2, [r3, #8]
   30480:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30484:	ldr	r2, [r3, #120]	; 0x78
   30488:	ldrh	r3, [fp, #-38]	; 0xffffffda
   3048c:	add	r2, r2, r3
   30490:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30494:	str	r2, [r3, #120]	; 0x78
   30498:	ldrh	r3, [fp, #-38]	; 0xffffffda
   3049c:	mov	r2, r3
   304a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   304a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   304a8:	bl	1451c <memcpy@plt>
   304ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   304b0:	ldr	r3, [r3]
   304b4:	mov	r0, r3
   304b8:	sub	sp, fp, #4
   304bc:	ldr	fp, [sp]
   304c0:	add	sp, sp, #4
   304c4:	pop	{pc}		; (ldr pc, [sp], #4)

000304c8 <flatcc_builder_create_table@@Base>:
   304c8:	str	r4, [sp, #-12]!
   304cc:	str	fp, [sp, #4]
   304d0:	str	lr, [sp, #8]
   304d4:	add	fp, sp, #8
   304d8:	sub	sp, sp, #124	; 0x7c
   304dc:	str	r0, [fp, #-120]	; 0xffffff88
   304e0:	str	r1, [fp, #-124]	; 0xffffff84
   304e4:	str	r2, [fp, #-128]	; 0xffffff80
   304e8:	strh	r3, [fp, #-130]	; 0xffffff7e
   304ec:	ldr	r4, [pc, #740]	; 307d8 <flatcc_builder_create_table@@Base+0x310>
   304f0:	add	r4, pc, r4
   304f4:	ldr	r3, [fp, #8]
   304f8:	cmp	r3, #0
   304fc:	bge	30520 <flatcc_builder_create_table@@Base+0x58>
   30500:	ldr	r3, [pc, #724]	; 307dc <flatcc_builder_create_table@@Base+0x314>
   30504:	add	r3, pc, r3
   30508:	movw	r2, #1237	; 0x4d5
   3050c:	ldr	r1, [pc, #716]	; 307e0 <flatcc_builder_create_table@@Base+0x318>
   30510:	add	r1, pc, r1
   30514:	ldr	r0, [pc, #712]	; 307e4 <flatcc_builder_create_table@@Base+0x31c>
   30518:	add	r0, pc, r0
   3051c:	bl	145e8 <__assert_fail@plt>
   30520:	ldr	r3, [fp, #12]
   30524:	and	r3, r3, #1
   30528:	cmp	r3, #0
   3052c:	bne	30550 <flatcc_builder_create_table@@Base+0x88>
   30530:	ldr	r3, [pc, #688]	; 307e8 <flatcc_builder_create_table@@Base+0x320>
   30534:	add	r3, pc, r3
   30538:	movw	r2, #1243	; 0x4db
   3053c:	ldr	r1, [pc, #680]	; 307ec <flatcc_builder_create_table@@Base+0x324>
   30540:	add	r1, pc, r1
   30544:	ldr	r0, [pc, #676]	; 307f0 <flatcc_builder_create_table@@Base+0x328>
   30548:	add	r0, pc, r0
   3054c:	bl	145e8 <__assert_fail@plt>
   30550:	sub	r3, fp, #130	; 0x82
   30554:	mov	r1, #4
   30558:	mov	r0, r3
   3055c:	bl	2dc00 <flatcc_builder_clear@@Base+0x10c>
   30560:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   30564:	mov	r1, r3
   30568:	ldr	r0, [fp, #-120]	; 0xffffff88
   3056c:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   30570:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   30574:	mov	r2, r3
   30578:	ldr	r1, [fp, #-128]	; 0xffffff80
   3057c:	ldr	r0, [fp, #-120]	; 0xffffff88
   30580:	bl	2e234 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   30584:	str	r0, [fp, #-20]	; 0xffffffec
   30588:	ldr	r3, [fp, #-120]	; 0xffffff88
   3058c:	ldr	r3, [r3, #136]	; 0x88
   30590:	mov	r1, r3
   30594:	ldr	r2, [fp, #-20]	; 0xffffffec
   30598:	ldr	r3, [fp, #-128]	; 0xffffff80
   3059c:	add	r3, r2, r3
   305a0:	sub	r3, r1, r3
   305a4:	sub	r3, r3, #4
   305a8:	str	r3, [fp, #-24]	; 0xffffffe8
   305ac:	ldr	r3, [fp, #12]
   305b0:	sub	r3, r3, #1
   305b4:	str	r3, [fp, #-28]	; 0xffffffe4
   305b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   305bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   305c0:	sub	r3, r2, r3
   305c4:	str	r3, [fp, #-32]	; 0xffffffe0
   305c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   305cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   305d0:	sub	r3, r2, r3
   305d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   305d8:	cmp	r2, r3
   305dc:	beq	305e8 <flatcc_builder_create_table@@Base+0x120>
   305e0:	mvn	r3, #0
   305e4:	b	307c0 <flatcc_builder_create_table@@Base+0x2f8>
   305e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   305ec:	bl	2cab0 <main@@Base+0xcdc>
   305f0:	mov	r3, r0
   305f4:	str	r3, [fp, #-44]	; 0xffffffd4
   305f8:	mov	r3, #0
   305fc:	str	r3, [fp, #-16]
   30600:	b	30678 <flatcc_builder_create_table@@Base+0x1b0>
   30604:	ldr	r3, [fp, #-16]
   30608:	lsl	r3, r3, #1
   3060c:	ldr	r2, [fp, #4]
   30610:	add	r3, r2, r3
   30614:	ldrh	r3, [r3]
   30618:	mov	r2, r3
   3061c:	ldr	r3, [fp, #-124]	; 0xffffff84
   30620:	add	r3, r2, r3
   30624:	str	r3, [fp, #-36]	; 0xffffffdc
   30628:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3062c:	ldr	r2, [r3]
   30630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30634:	sub	r3, r2, r3
   30638:	ldr	r2, [fp, #-16]
   3063c:	lsl	r2, r2, #1
   30640:	ldr	r1, [fp, #4]
   30644:	add	r2, r1, r2
   30648:	ldrh	r2, [r2]
   3064c:	sub	r3, r3, r2
   30650:	sub	r3, r3, #4
   30654:	str	r3, [fp, #-40]	; 0xffffffd8
   30658:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3065c:	bl	2cab0 <main@@Base+0xcdc>
   30660:	mov	r2, r0
   30664:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30668:	str	r2, [r3]
   3066c:	ldr	r3, [fp, #-16]
   30670:	add	r3, r3, #1
   30674:	str	r3, [fp, #-16]
   30678:	ldr	r2, [fp, #-16]
   3067c:	ldr	r3, [fp, #8]
   30680:	cmp	r2, r3
   30684:	blt	30604 <flatcc_builder_create_table@@Base+0x13c>
   30688:	mov	r3, #0
   3068c:	str	r3, [fp, #-116]	; 0xffffff8c
   30690:	mov	r3, #0
   30694:	str	r3, [fp, #-112]	; 0xffffff90
   30698:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3069c:	add	r3, r3, #4
   306a0:	str	r3, [fp, #-116]	; 0xffffff8c
   306a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   306a8:	add	r3, r3, #1
   306ac:	lsl	r3, r3, #3
   306b0:	sub	r2, fp, #12
   306b4:	add	r3, r2, r3
   306b8:	sub	r2, fp, #44	; 0x2c
   306bc:	str	r2, [r3, #-104]	; 0xffffff98
   306c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   306c4:	add	r3, r3, #1
   306c8:	lsl	r3, r3, #3
   306cc:	sub	r2, fp, #12
   306d0:	add	r3, r2, r3
   306d4:	mov	r2, #4
   306d8:	str	r2, [r3, #-100]	; 0xffffff9c
   306dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   306e0:	add	r3, r3, #1
   306e4:	str	r3, [fp, #-112]	; 0xffffff90
   306e8:	ldr	r3, [fp, #-128]	; 0xffffff80
   306ec:	cmp	r3, #0
   306f0:	beq	30748 <flatcc_builder_create_table@@Base+0x280>
   306f4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   306f8:	ldr	r3, [fp, #-128]	; 0xffffff80
   306fc:	add	r3, r2, r3
   30700:	str	r3, [fp, #-116]	; 0xffffff8c
   30704:	ldr	r3, [fp, #-112]	; 0xffffff90
   30708:	add	r3, r3, #1
   3070c:	lsl	r3, r3, #3
   30710:	sub	r2, fp, #12
   30714:	add	r3, r2, r3
   30718:	ldr	r2, [fp, #-124]	; 0xffffff84
   3071c:	str	r2, [r3, #-104]	; 0xffffff98
   30720:	ldr	r3, [fp, #-112]	; 0xffffff90
   30724:	add	r3, r3, #1
   30728:	lsl	r3, r3, #3
   3072c:	sub	r2, fp, #12
   30730:	add	r3, r2, r3
   30734:	ldr	r2, [fp, #-128]	; 0xffffff80
   30738:	str	r2, [r3, #-100]	; 0xffffff9c
   3073c:	ldr	r3, [fp, #-112]	; 0xffffff90
   30740:	add	r3, r3, #1
   30744:	str	r3, [fp, #-112]	; 0xffffff90
   30748:	ldr	r3, [fp, #-20]	; 0xffffffec
   3074c:	cmp	r3, #0
   30750:	beq	307ac <flatcc_builder_create_table@@Base+0x2e4>
   30754:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3075c:	add	r3, r2, r3
   30760:	str	r3, [fp, #-116]	; 0xffffff8c
   30764:	ldr	r3, [fp, #-112]	; 0xffffff90
   30768:	add	r3, r3, #1
   3076c:	lsl	r3, r3, #3
   30770:	sub	r2, fp, #12
   30774:	add	r3, r2, r3
   30778:	ldr	r2, [pc, #116]	; 307f4 <flatcc_builder_create_table@@Base+0x32c>
   3077c:	ldr	r2, [r4, r2]
   30780:	str	r2, [r3, #-104]	; 0xffffff98
   30784:	ldr	r3, [fp, #-112]	; 0xffffff90
   30788:	add	r3, r3, #1
   3078c:	lsl	r3, r3, #3
   30790:	sub	r2, fp, #12
   30794:	add	r3, r2, r3
   30798:	ldr	r2, [fp, #-20]	; 0xffffffec
   3079c:	str	r2, [r3, #-100]	; 0xffffff9c
   307a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   307a4:	add	r3, r3, #1
   307a8:	str	r3, [fp, #-112]	; 0xffffff90
   307ac:	sub	r3, fp, #116	; 0x74
   307b0:	mov	r1, r3
   307b4:	ldr	r0, [fp, #-120]	; 0xffffff88
   307b8:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   307bc:	mov	r3, r0
   307c0:	mov	r0, r3
   307c4:	sub	sp, fp, #8
   307c8:	ldr	r4, [sp]
   307cc:	ldr	fp, [sp, #4]
   307d0:	add	sp, sp, #8
   307d4:	pop	{pc}		; (ldr pc, [sp], #4)
   307d8:	andeq	r4, r3, r8, lsl #22
   307dc:	andeq	r1, r2, r4, ror r4
   307e0:	andeq	r0, r2, r4, asr #27
   307e4:	andeq	r1, r2, ip, asr r0
   307e8:	andeq	r1, r2, r4, asr #8
   307ec:	muleq	r2, r4, sp
   307f0:	andeq	r1, r2, r0, asr #32
   307f4:	andeq	r0, r0, r4, rrx

000307f8 <flatcc_builder_check_required_field@@Base>:
   307f8:	str	fp, [sp, #-8]!
   307fc:	str	lr, [sp, #4]
   30800:	add	fp, sp, #4
   30804:	sub	sp, sp, #8
   30808:	str	r0, [fp, #-8]
   3080c:	mov	r3, r1
   30810:	strh	r3, [fp, #-10]
   30814:	ldr	r3, [fp, #-8]
   30818:	ldr	r3, [r3, #32]
   3081c:	ldrh	r3, [r3, #14]
   30820:	cmp	r3, #3
   30824:	beq	30848 <flatcc_builder_check_required_field@@Base+0x50>
   30828:	ldr	r3, [pc, #108]	; 3089c <flatcc_builder_check_required_field@@Base+0xa4>
   3082c:	add	r3, pc, r3
   30830:	movw	r2, #1272	; 0x4f8
   30834:	ldr	r1, [pc, #100]	; 308a0 <flatcc_builder_check_required_field@@Base+0xa8>
   30838:	add	r1, pc, r1
   3083c:	ldr	r0, [pc, #96]	; 308a4 <flatcc_builder_check_required_field@@Base+0xac>
   30840:	add	r0, pc, r0
   30844:	bl	145e8 <__assert_fail@plt>
   30848:	ldr	r3, [fp, #-8]
   3084c:	ldrh	r3, [r3, #8]
   30850:	ldrh	r2, [fp, #-10]
   30854:	cmp	r2, r3
   30858:	bcs	30884 <flatcc_builder_check_required_field@@Base+0x8c>
   3085c:	ldr	r3, [fp, #-8]
   30860:	ldr	r2, [r3, #4]
   30864:	ldrh	r3, [fp, #-10]
   30868:	lsl	r3, r3, #1
   3086c:	add	r3, r2, r3
   30870:	ldrh	r3, [r3]
   30874:	cmp	r3, #0
   30878:	beq	30884 <flatcc_builder_check_required_field@@Base+0x8c>
   3087c:	mov	r3, #1
   30880:	b	30888 <flatcc_builder_check_required_field@@Base+0x90>
   30884:	mov	r3, #0
   30888:	mov	r0, r3
   3088c:	sub	sp, fp, #4
   30890:	ldr	fp, [sp]
   30894:	add	sp, sp, #4
   30898:	pop	{pc}		; (ldr pc, [sp], #4)
   3089c:	andeq	r1, r2, r8, ror #2
   308a0:	muleq	r2, ip, sl
   308a4:	andeq	r0, r2, r4, asr sp

000308a8 <flatcc_builder_check_union_field@@Base>:
   308a8:	str	fp, [sp, #-8]!
   308ac:	str	lr, [sp, #4]
   308b0:	add	fp, sp, #4
   308b4:	sub	sp, sp, #8
   308b8:	str	r0, [fp, #-8]
   308bc:	mov	r3, r1
   308c0:	strh	r3, [fp, #-10]
   308c4:	ldr	r3, [fp, #-8]
   308c8:	ldr	r3, [r3, #32]
   308cc:	ldrh	r3, [r3, #14]
   308d0:	cmp	r3, #3
   308d4:	beq	308f8 <flatcc_builder_check_union_field@@Base+0x50>
   308d8:	ldr	r3, [pc, #300]	; 30a0c <flatcc_builder_check_union_field@@Base+0x164>
   308dc:	add	r3, pc, r3
   308e0:	movw	r2, #1279	; 0x4ff
   308e4:	ldr	r1, [pc, #292]	; 30a10 <flatcc_builder_check_union_field@@Base+0x168>
   308e8:	add	r1, pc, r1
   308ec:	ldr	r0, [pc, #288]	; 30a14 <flatcc_builder_check_union_field@@Base+0x16c>
   308f0:	add	r0, pc, r0
   308f4:	bl	145e8 <__assert_fail@plt>
   308f8:	ldrh	r3, [fp, #-10]
   308fc:	cmp	r3, #0
   30900:	beq	30918 <flatcc_builder_check_union_field@@Base+0x70>
   30904:	ldr	r3, [fp, #-8]
   30908:	ldrh	r3, [r3, #8]
   3090c:	ldrh	r2, [fp, #-10]
   30910:	cmp	r2, r3
   30914:	bcc	30920 <flatcc_builder_check_union_field@@Base+0x78>
   30918:	mov	r3, #0
   3091c:	b	309f8 <flatcc_builder_check_union_field@@Base+0x150>
   30920:	ldr	r3, [fp, #-8]
   30924:	ldr	r2, [r3, #4]
   30928:	ldrh	r3, [fp, #-10]
   3092c:	sub	r3, r3, #-2147483647	; 0x80000001
   30930:	lsl	r3, r3, #1
   30934:	add	r3, r2, r3
   30938:	ldrh	r3, [r3]
   3093c:	cmp	r3, #0
   30940:	bne	30970 <flatcc_builder_check_union_field@@Base+0xc8>
   30944:	ldr	r3, [fp, #-8]
   30948:	ldr	r2, [r3, #4]
   3094c:	ldrh	r3, [fp, #-10]
   30950:	lsl	r3, r3, #1
   30954:	add	r3, r2, r3
   30958:	ldrh	r3, [r3]
   3095c:	cmp	r3, #0
   30960:	moveq	r3, #1
   30964:	movne	r3, #0
   30968:	uxtb	r3, r3
   3096c:	b	309f8 <flatcc_builder_check_union_field@@Base+0x150>
   30970:	ldr	r3, [fp, #-8]
   30974:	ldr	r3, [r3, #16]
   30978:	ldr	r2, [fp, #-8]
   3097c:	ldr	r1, [r2, #4]
   30980:	ldrh	r2, [fp, #-10]
   30984:	sub	r2, r2, #-2147483647	; 0x80000001
   30988:	lsl	r2, r2, #1
   3098c:	add	r2, r1, r2
   30990:	ldrh	r2, [r2]
   30994:	add	r3, r3, r2
   30998:	ldrb	r3, [r3]
   3099c:	cmp	r3, #0
   309a0:	beq	309d0 <flatcc_builder_check_union_field@@Base+0x128>
   309a4:	ldr	r3, [fp, #-8]
   309a8:	ldr	r2, [r3, #4]
   309ac:	ldrh	r3, [fp, #-10]
   309b0:	lsl	r3, r3, #1
   309b4:	add	r3, r2, r3
   309b8:	ldrh	r3, [r3]
   309bc:	cmp	r3, #0
   309c0:	movne	r3, #1
   309c4:	moveq	r3, #0
   309c8:	uxtb	r3, r3
   309cc:	b	309f8 <flatcc_builder_check_union_field@@Base+0x150>
   309d0:	ldr	r3, [fp, #-8]
   309d4:	ldr	r2, [r3, #4]
   309d8:	ldrh	r3, [fp, #-10]
   309dc:	lsl	r3, r3, #1
   309e0:	add	r3, r2, r3
   309e4:	ldrh	r3, [r3]
   309e8:	cmp	r3, #0
   309ec:	moveq	r3, #1
   309f0:	movne	r3, #0
   309f4:	uxtb	r3, r3
   309f8:	mov	r0, r3
   309fc:	sub	sp, fp, #4
   30a00:	ldr	fp, [sp]
   30a04:	add	sp, sp, #4
   30a08:	pop	{pc}		; (ldr pc, [sp], #4)
   30a0c:	ldrdeq	r1, [r2], -ip
   30a10:	andeq	r0, r2, ip, ror #19
   30a14:	andeq	r0, r2, r4, lsr #25

00030a18 <flatcc_builder_check_required@@Base>:
   30a18:	str	fp, [sp, #-8]!
   30a1c:	str	lr, [sp, #4]
   30a20:	add	fp, sp, #4
   30a24:	sub	sp, sp, #24
   30a28:	str	r0, [fp, #-16]
   30a2c:	str	r1, [fp, #-20]	; 0xffffffec
   30a30:	str	r2, [fp, #-24]	; 0xffffffe8
   30a34:	ldr	r3, [fp, #-16]
   30a38:	ldr	r3, [r3, #32]
   30a3c:	ldrh	r3, [r3, #14]
   30a40:	cmp	r3, #3
   30a44:	beq	30a68 <flatcc_builder_check_required@@Base+0x50>
   30a48:	ldr	r3, [pc, #176]	; 30b00 <flatcc_builder_check_required@@Base+0xe8>
   30a4c:	add	r3, pc, r3
   30a50:	movw	r2, #1297	; 0x511
   30a54:	ldr	r1, [pc, #168]	; 30b04 <flatcc_builder_check_required@@Base+0xec>
   30a58:	add	r1, pc, r1
   30a5c:	ldr	r0, [pc, #164]	; 30b08 <flatcc_builder_check_required@@Base+0xf0>
   30a60:	add	r0, pc, r0
   30a64:	bl	145e8 <__assert_fail@plt>
   30a68:	ldr	r3, [fp, #-16]
   30a6c:	ldrh	r3, [r3, #8]
   30a70:	mov	r2, r3
   30a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a78:	cmp	r3, r2
   30a7c:	ble	30a88 <flatcc_builder_check_required@@Base+0x70>
   30a80:	mov	r3, #0
   30a84:	b	30aec <flatcc_builder_check_required@@Base+0xd4>
   30a88:	mov	r3, #0
   30a8c:	str	r3, [fp, #-8]
   30a90:	b	30ad8 <flatcc_builder_check_required@@Base+0xc0>
   30a94:	ldr	r3, [fp, #-16]
   30a98:	ldr	r2, [r3, #4]
   30a9c:	ldr	r3, [fp, #-8]
   30aa0:	lsl	r3, r3, #1
   30aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   30aa8:	add	r3, r1, r3
   30aac:	ldrh	r3, [r3]
   30ab0:	lsl	r3, r3, #1
   30ab4:	add	r3, r2, r3
   30ab8:	ldrh	r3, [r3]
   30abc:	cmp	r3, #0
   30ac0:	bne	30acc <flatcc_builder_check_required@@Base+0xb4>
   30ac4:	mov	r3, #0
   30ac8:	b	30aec <flatcc_builder_check_required@@Base+0xd4>
   30acc:	ldr	r3, [fp, #-8]
   30ad0:	add	r3, r3, #1
   30ad4:	str	r3, [fp, #-8]
   30ad8:	ldr	r2, [fp, #-8]
   30adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ae0:	cmp	r2, r3
   30ae4:	blt	30a94 <flatcc_builder_check_required@@Base+0x7c>
   30ae8:	mov	r3, #1
   30aec:	mov	r0, r3
   30af0:	sub	sp, fp, #4
   30af4:	ldr	fp, [sp]
   30af8:	add	sp, sp, #4
   30afc:	pop	{pc}		; (ldr pc, [sp], #4)
   30b00:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   30b04:	andeq	r0, r2, ip, ror r8
   30b08:	andeq	r0, r2, r4, lsr fp

00030b0c <flatcc_builder_end_table@@Base>:
   30b0c:	str	fp, [sp, #-8]!
   30b10:	str	lr, [sp, #4]
   30b14:	add	fp, sp, #4
   30b18:	sub	sp, sp, #48	; 0x30
   30b1c:	str	r0, [fp, #-32]	; 0xffffffe0
   30b20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b24:	ldr	r3, [r3, #32]
   30b28:	ldrh	r3, [r3, #14]
   30b2c:	cmp	r3, #3
   30b30:	beq	30b54 <flatcc_builder_end_table@@Base+0x48>
   30b34:	ldr	r3, [pc, #520]	; 30d44 <flatcc_builder_end_table@@Base+0x238>
   30b38:	add	r3, pc, r3
   30b3c:	movw	r2, #1317	; 0x525
   30b40:	ldr	r1, [pc, #512]	; 30d48 <flatcc_builder_end_table@@Base+0x23c>
   30b44:	add	r1, pc, r1
   30b48:	ldr	r0, [pc, #508]	; 30d4c <flatcc_builder_end_table@@Base+0x240>
   30b4c:	add	r0, pc, r0
   30b50:	bl	145e8 <__assert_fail@plt>
   30b54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b58:	ldr	r3, [r3, #4]
   30b5c:	sub	r3, r3, #4
   30b60:	str	r3, [fp, #-8]
   30b64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b68:	ldrh	r3, [r3, #8]
   30b6c:	add	r3, r3, #2
   30b70:	uxth	r3, r3
   30b74:	lsl	r3, r3, #1
   30b78:	strh	r3, [fp, #-10]
   30b7c:	ldr	r3, [fp, #-8]
   30b80:	ldrh	r2, [fp, #-10]
   30b84:	strh	r2, [r3]
   30b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b8c:	ldr	r3, [r3, #20]
   30b90:	uxth	r2, r3
   30b94:	ldr	r3, [fp, #-8]
   30b98:	add	r3, r3, #2
   30b9c:	add	r2, r2, #4
   30ba0:	uxth	r2, r2
   30ba4:	strh	r2, [r3]
   30ba8:	ldr	r3, [fp, #-8]
   30bac:	ldrh	r3, [r3]
   30bb0:	mov	r2, r3
   30bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30bb8:	ldr	r3, [r3, #12]
   30bbc:	eor	r2, r2, r3
   30bc0:	movw	r3, #31153	; 0x79b1
   30bc4:	movt	r3, #40503	; 0x9e37
   30bc8:	mul	r3, r3, r2
   30bcc:	ldr	r2, [fp, #-8]
   30bd0:	add	r2, r2, #2
   30bd4:	ldrh	r2, [r2]
   30bd8:	eor	r2, r2, r3
   30bdc:	movw	r3, #31153	; 0x79b1
   30be0:	movt	r3, #40503	; 0x9e37
   30be4:	mul	r2, r3, r2
   30be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30bec:	str	r2, [r3, #12]
   30bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30bf4:	ldr	r3, [r3, #12]
   30bf8:	ldrh	r2, [fp, #-10]
   30bfc:	ldr	r1, [fp, #-8]
   30c00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30c04:	bl	301a8 <flatcc_builder_create_cached_vtable@@Base>
   30c08:	str	r0, [fp, #-16]
   30c0c:	ldr	r3, [fp, #-16]
   30c10:	cmp	r3, #0
   30c14:	bne	30c20 <flatcc_builder_end_table@@Base+0x114>
   30c18:	mov	r3, #0
   30c1c:	b	30d30 <flatcc_builder_end_table@@Base+0x224>
   30c20:	ldrh	r3, [fp, #-10]
   30c24:	mov	r2, r3
   30c28:	mov	r1, #0
   30c2c:	ldr	r0, [fp, #-8]
   30c30:	bl	14594 <memset@plt>
   30c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30c38:	ldr	r2, [r3, #76]	; 0x4c
   30c3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30c40:	ldr	r3, [r3, #32]
   30c44:	ldr	r3, [r3, #20]
   30c48:	add	r3, r2, r3
   30c4c:	str	r3, [fp, #-20]	; 0xffffffec
   30c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30c54:	ldr	r2, [r3]
   30c58:	ldr	r3, [fp, #-20]	; 0xffffffec
   30c5c:	sub	r3, r2, r3
   30c60:	asr	r3, r3, #1
   30c64:	str	r3, [fp, #-24]	; 0xffffffe8
   30c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30c6c:	ldr	r1, [r3, #16]
   30c70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30c74:	ldr	r2, [r3, #20]
   30c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30c7c:	ldrh	r0, [r3, #130]	; 0x82
   30c80:	ldr	r3, [fp, #-16]
   30c84:	str	r3, [sp, #8]
   30c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30c8c:	str	r3, [sp, #4]
   30c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   30c94:	str	r3, [sp]
   30c98:	mov	r3, r0
   30c9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ca0:	bl	304c8 <flatcc_builder_create_table@@Base>
   30ca4:	str	r0, [fp, #-28]	; 0xffffffe4
   30ca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30cac:	cmp	r3, #0
   30cb0:	bne	30cbc <flatcc_builder_end_table@@Base+0x1b0>
   30cb4:	mov	r3, #0
   30cb8:	b	30d30 <flatcc_builder_end_table@@Base+0x224>
   30cbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30cc0:	ldr	r3, [r3, #32]
   30cc4:	ldr	r2, [r3, #24]
   30cc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30ccc:	str	r2, [r3, #12]
   30cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30cd4:	ldr	r3, [r3, #32]
   30cd8:	ldrh	r2, [r3, #28]
   30cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30ce0:	strh	r2, [r3, #8]
   30ce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30ce8:	ldr	r2, [r3, #52]	; 0x34
   30cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30cf0:	ldr	r3, [r3, #32]
   30cf4:	ldr	r3, [r3, #16]
   30cf8:	add	r2, r2, r3
   30cfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30d00:	str	r2, [r3, #4]
   30d04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30d08:	ldr	r2, [r3, #76]	; 0x4c
   30d0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30d10:	ldr	r3, [r3, #32]
   30d14:	ldr	r3, [r3, #20]
   30d18:	add	r2, r2, r3
   30d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30d20:	str	r2, [r3]
   30d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d28:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   30d2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30d30:	mov	r0, r3
   30d34:	sub	sp, fp, #4
   30d38:	ldr	fp, [sp]
   30d3c:	add	sp, sp, #4
   30d40:	pop	{pc}		; (ldr pc, [sp], #4)
   30d44:	andeq	r0, r2, r4, asr #29
   30d48:	muleq	r2, r0, r7
   30d4c:	andeq	r0, r2, r8, asr #20

00030d50 <flatcc_builder_create_vector@@Base>:
   30d50:	str	r4, [sp, #-12]!
   30d54:	str	fp, [sp, #4]
   30d58:	str	lr, [sp, #8]
   30d5c:	add	fp, sp, #8
   30d60:	sub	sp, sp, #108	; 0x6c
   30d64:	str	r0, [fp, #-104]	; 0xffffff98
   30d68:	str	r1, [fp, #-108]	; 0xffffff94
   30d6c:	str	r2, [fp, #-112]	; 0xffffff90
   30d70:	str	r3, [fp, #-116]	; 0xffffff8c
   30d74:	ldr	r4, [pc, #496]	; 30f6c <flatcc_builder_create_vector@@Base+0x21c>
   30d78:	add	r4, pc, r4
   30d7c:	ldr	r2, [fp, #-112]	; 0xffffff90
   30d80:	ldr	r3, [fp, #8]
   30d84:	cmp	r2, r3
   30d88:	bls	30dc4 <flatcc_builder_create_vector@@Base+0x74>
   30d8c:	ldr	r2, [fp, #-112]	; 0xffffff90
   30d90:	ldr	r3, [fp, #8]
   30d94:	cmp	r2, r3
   30d98:	bls	30dbc <flatcc_builder_create_vector@@Base+0x6c>
   30d9c:	ldr	r3, [pc, #460]	; 30f70 <flatcc_builder_create_vector@@Base+0x220>
   30da0:	add	r3, pc, r3
   30da4:	movw	r2, #1365	; 0x555
   30da8:	ldr	r1, [pc, #452]	; 30f74 <flatcc_builder_create_vector@@Base+0x224>
   30dac:	add	r1, pc, r1
   30db0:	ldr	r0, [pc, #448]	; 30f78 <flatcc_builder_create_vector@@Base+0x228>
   30db4:	add	r0, pc, r0
   30db8:	bl	145e8 <__assert_fail@plt>
   30dbc:	mov	r3, #0
   30dc0:	b	30f54 <flatcc_builder_create_vector@@Base+0x204>
   30dc4:	mov	r1, #4
   30dc8:	add	r3, fp, #4
   30dcc:	mov	r0, r3
   30dd0:	bl	2dc00 <flatcc_builder_clear@@Base+0x10c>
   30dd4:	ldrh	r3, [fp, #4]
   30dd8:	mov	r1, r3
   30ddc:	ldr	r0, [fp, #-104]	; 0xffffff98
   30de0:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   30de4:	ldr	r3, [fp, #-112]	; 0xffffff90
   30de8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30dec:	mul	r3, r2, r3
   30df0:	str	r3, [fp, #-16]
   30df4:	ldr	r0, [fp, #-112]	; 0xffffff90
   30df8:	bl	2cab0 <main@@Base+0xcdc>
   30dfc:	mov	r3, r0
   30e00:	str	r3, [fp, #-24]	; 0xffffffe8
   30e04:	ldrh	r3, [fp, #4]
   30e08:	mov	r2, r3
   30e0c:	ldr	r1, [fp, #-16]
   30e10:	ldr	r0, [fp, #-104]	; 0xffffff98
   30e14:	bl	2e234 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   30e18:	str	r0, [fp, #-20]	; 0xffffffec
   30e1c:	mov	r3, #0
   30e20:	str	r3, [fp, #-96]	; 0xffffffa0
   30e24:	mov	r3, #0
   30e28:	str	r3, [fp, #-92]	; 0xffffffa4
   30e2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   30e30:	add	r3, r3, #4
   30e34:	str	r3, [fp, #-96]	; 0xffffffa0
   30e38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30e3c:	add	r3, r3, #1
   30e40:	lsl	r3, r3, #3
   30e44:	sub	r2, fp, #12
   30e48:	add	r3, r2, r3
   30e4c:	sub	r2, fp, #24
   30e50:	str	r2, [r3, #-84]	; 0xffffffac
   30e54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30e58:	add	r3, r3, #1
   30e5c:	lsl	r3, r3, #3
   30e60:	sub	r2, fp, #12
   30e64:	add	r3, r2, r3
   30e68:	mov	r2, #4
   30e6c:	str	r2, [r3, #-80]	; 0xffffffb0
   30e70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30e74:	add	r3, r3, #1
   30e78:	str	r3, [fp, #-92]	; 0xffffffa4
   30e7c:	ldr	r3, [fp, #-16]
   30e80:	cmp	r3, #0
   30e84:	beq	30edc <flatcc_builder_create_vector@@Base+0x18c>
   30e88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   30e8c:	ldr	r3, [fp, #-16]
   30e90:	add	r3, r2, r3
   30e94:	str	r3, [fp, #-96]	; 0xffffffa0
   30e98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30e9c:	add	r3, r3, #1
   30ea0:	lsl	r3, r3, #3
   30ea4:	sub	r2, fp, #12
   30ea8:	add	r3, r2, r3
   30eac:	ldr	r2, [fp, #-108]	; 0xffffff94
   30eb0:	str	r2, [r3, #-84]	; 0xffffffac
   30eb4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30eb8:	add	r3, r3, #1
   30ebc:	lsl	r3, r3, #3
   30ec0:	sub	r2, fp, #12
   30ec4:	add	r3, r2, r3
   30ec8:	ldr	r2, [fp, #-16]
   30ecc:	str	r2, [r3, #-80]	; 0xffffffb0
   30ed0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30ed4:	add	r3, r3, #1
   30ed8:	str	r3, [fp, #-92]	; 0xffffffa4
   30edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   30ee0:	cmp	r3, #0
   30ee4:	beq	30f40 <flatcc_builder_create_vector@@Base+0x1f0>
   30ee8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   30eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   30ef0:	add	r3, r2, r3
   30ef4:	str	r3, [fp, #-96]	; 0xffffffa0
   30ef8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30efc:	add	r3, r3, #1
   30f00:	lsl	r3, r3, #3
   30f04:	sub	r2, fp, #12
   30f08:	add	r3, r2, r3
   30f0c:	ldr	r2, [pc, #104]	; 30f7c <flatcc_builder_create_vector@@Base+0x22c>
   30f10:	ldr	r2, [r4, r2]
   30f14:	str	r2, [r3, #-84]	; 0xffffffac
   30f18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30f1c:	add	r3, r3, #1
   30f20:	lsl	r3, r3, #3
   30f24:	sub	r2, fp, #12
   30f28:	add	r3, r2, r3
   30f2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   30f30:	str	r2, [r3, #-80]	; 0xffffffb0
   30f34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30f38:	add	r3, r3, #1
   30f3c:	str	r3, [fp, #-92]	; 0xffffffa4
   30f40:	sub	r3, fp, #96	; 0x60
   30f44:	mov	r1, r3
   30f48:	ldr	r0, [fp, #-104]	; 0xffffff98
   30f4c:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   30f50:	mov	r3, r0
   30f54:	mov	r0, r3
   30f58:	sub	sp, fp, #8
   30f5c:	ldr	r4, [sp]
   30f60:	ldr	fp, [sp, #4]
   30f64:	add	sp, sp, #8
   30f68:	pop	{pc}		; (ldr pc, [sp], #4)
   30f6c:	andeq	r4, r3, r0, lsl #5
   30f70:	andeq	r0, r2, r8, ror ip
   30f74:	andeq	r0, r2, r8, lsr #10
   30f78:	andeq	r0, r2, ip, lsl #16
   30f7c:	andeq	r0, r0, r4, rrx

00030f80 <flatcc_builder_end_vector@@Base>:
   30f80:	str	fp, [sp, #-8]!
   30f84:	str	lr, [sp, #4]
   30f88:	add	fp, sp, #4
   30f8c:	sub	sp, sp, #24
   30f90:	str	r0, [fp, #-16]
   30f94:	ldr	r3, [fp, #-16]
   30f98:	ldr	r3, [r3, #32]
   30f9c:	ldrh	r3, [r3, #14]
   30fa0:	cmp	r3, #4
   30fa4:	beq	30fc8 <flatcc_builder_end_vector@@Base+0x48>
   30fa8:	ldr	r3, [pc, #156]	; 3104c <flatcc_builder_end_vector@@Base+0xcc>
   30fac:	add	r3, pc, r3
   30fb0:	movw	r2, #1400	; 0x578
   30fb4:	ldr	r1, [pc, #148]	; 31050 <flatcc_builder_end_vector@@Base+0xd0>
   30fb8:	add	r1, pc, r1
   30fbc:	ldr	r0, [pc, #144]	; 31054 <flatcc_builder_end_vector@@Base+0xd4>
   30fc0:	add	r0, pc, r0
   30fc4:	bl	145e8 <__assert_fail@plt>
   30fc8:	ldr	r3, [fp, #-16]
   30fcc:	ldr	r1, [r3, #16]
   30fd0:	ldr	r3, [fp, #-16]
   30fd4:	ldr	r3, [r3, #32]
   30fd8:	ldr	r0, [r3, #20]
   30fdc:	ldr	r3, [fp, #-16]
   30fe0:	ldr	r3, [r3, #32]
   30fe4:	ldr	ip, [r3, #16]
   30fe8:	ldr	r3, [fp, #-16]
   30fec:	ldrh	r3, [r3, #130]	; 0x82
   30ff0:	ldr	r2, [fp, #-16]
   30ff4:	ldr	r2, [r2, #32]
   30ff8:	ldr	r2, [r2, #24]
   30ffc:	str	r2, [sp, #4]
   31000:	str	r3, [sp]
   31004:	mov	r3, ip
   31008:	mov	r2, r0
   3100c:	ldr	r0, [fp, #-16]
   31010:	bl	30d50 <flatcc_builder_create_vector@@Base>
   31014:	str	r0, [fp, #-8]
   31018:	ldr	r3, [fp, #-8]
   3101c:	cmp	r3, #0
   31020:	bne	3102c <flatcc_builder_end_vector@@Base+0xac>
   31024:	mov	r3, #0
   31028:	b	31038 <flatcc_builder_end_vector@@Base+0xb8>
   3102c:	ldr	r0, [fp, #-16]
   31030:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   31034:	ldr	r3, [fp, #-8]
   31038:	mov	r0, r3
   3103c:	sub	sp, fp, #4
   31040:	ldr	fp, [sp]
   31044:	add	sp, sp, #4
   31048:	pop	{pc}		; (ldr pc, [sp], #4)
   3104c:	andeq	r0, r2, ip, lsl #21
   31050:	andeq	r0, r2, ip, lsl r3
   31054:	andeq	r0, r2, r8, asr r4

00031058 <flatcc_builder_vector_count@@Base>:
   31058:	push	{fp}		; (str fp, [sp, #-4]!)
   3105c:	add	fp, sp, #0
   31060:	sub	sp, sp, #12
   31064:	str	r0, [fp, #-8]
   31068:	ldr	r3, [fp, #-8]
   3106c:	ldr	r3, [r3, #32]
   31070:	ldr	r3, [r3, #20]
   31074:	mov	r0, r3
   31078:	add	sp, fp, #0
   3107c:	pop	{fp}		; (ldr fp, [sp], #4)
   31080:	bx	lr

00031084 <flatcc_builder_vector_edit@@Base>:
   31084:	push	{fp}		; (str fp, [sp, #-4]!)
   31088:	add	fp, sp, #0
   3108c:	sub	sp, sp, #12
   31090:	str	r0, [fp, #-8]
   31094:	ldr	r3, [fp, #-8]
   31098:	ldr	r3, [r3, #16]
   3109c:	mov	r0, r3
   310a0:	add	sp, fp, #0
   310a4:	pop	{fp}		; (ldr fp, [sp], #4)
   310a8:	bx	lr
   310ac:	str	r4, [sp, #-12]!
   310b0:	str	fp, [sp, #4]
   310b4:	str	lr, [sp, #8]
   310b8:	add	fp, sp, #8
   310bc:	sub	sp, sp, #116	; 0x74
   310c0:	str	r0, [fp, #-112]	; 0xffffff90
   310c4:	str	r1, [fp, #-116]	; 0xffffff8c
   310c8:	str	r2, [fp, #-120]	; 0xffffff88
   310cc:	str	r3, [fp, #-124]	; 0xffffff84
   310d0:	ldr	r4, [pc, #764]	; 313d4 <flatcc_builder_vector_edit@@Base+0x350>
   310d4:	add	r4, pc, r4
   310d8:	ldr	r3, [fp, #-120]	; 0xffffff88
   310dc:	cmn	r3, #-1073741823	; 0xc0000001
   310e0:	bls	310ec <flatcc_builder_vector_edit@@Base+0x68>
   310e4:	mov	r3, #0
   310e8:	b	313bc <flatcc_builder_vector_edit@@Base+0x338>
   310ec:	mov	r1, #4
   310f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   310f4:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   310f8:	ldr	r3, [fp, #-120]	; 0xffffff88
   310fc:	lsl	r3, r3, #2
   31100:	str	r3, [fp, #-20]	; 0xffffffec
   31104:	ldr	r0, [fp, #-120]	; 0xffffff88
   31108:	bl	2cab0 <main@@Base+0xcdc>
   3110c:	mov	r3, r0
   31110:	str	r3, [fp, #-36]	; 0xffffffdc
   31114:	mov	r2, #4
   31118:	ldr	r1, [fp, #-20]	; 0xffffffec
   3111c:	ldr	r0, [fp, #-112]	; 0xffffff90
   31120:	bl	2e234 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   31124:	str	r0, [fp, #-24]	; 0xffffffe8
   31128:	mov	r3, #0
   3112c:	str	r3, [fp, #-108]	; 0xffffff94
   31130:	mov	r3, #0
   31134:	str	r3, [fp, #-104]	; 0xffffff98
   31138:	ldr	r3, [fp, #-108]	; 0xffffff94
   3113c:	add	r3, r3, #4
   31140:	str	r3, [fp, #-108]	; 0xffffff94
   31144:	ldr	r3, [fp, #-104]	; 0xffffff98
   31148:	add	r3, r3, #1
   3114c:	lsl	r3, r3, #3
   31150:	sub	r2, fp, #12
   31154:	add	r3, r2, r3
   31158:	sub	r2, fp, #36	; 0x24
   3115c:	str	r2, [r3, #-96]	; 0xffffffa0
   31160:	ldr	r3, [fp, #-104]	; 0xffffff98
   31164:	add	r3, r3, #1
   31168:	lsl	r3, r3, #3
   3116c:	sub	r2, fp, #12
   31170:	add	r3, r2, r3
   31174:	mov	r2, #4
   31178:	str	r2, [r3, #-92]	; 0xffffffa4
   3117c:	ldr	r3, [fp, #-104]	; 0xffffff98
   31180:	add	r3, r3, #1
   31184:	str	r3, [fp, #-104]	; 0xffffff98
   31188:	ldr	r3, [fp, #-20]	; 0xffffffec
   3118c:	cmp	r3, #0
   31190:	beq	311e8 <flatcc_builder_vector_edit@@Base+0x164>
   31194:	ldr	r2, [fp, #-108]	; 0xffffff94
   31198:	ldr	r3, [fp, #-20]	; 0xffffffec
   3119c:	add	r3, r2, r3
   311a0:	str	r3, [fp, #-108]	; 0xffffff94
   311a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   311a8:	add	r3, r3, #1
   311ac:	lsl	r3, r3, #3
   311b0:	sub	r2, fp, #12
   311b4:	add	r3, r2, r3
   311b8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   311bc:	str	r2, [r3, #-96]	; 0xffffffa0
   311c0:	ldr	r3, [fp, #-104]	; 0xffffff98
   311c4:	add	r3, r3, #1
   311c8:	lsl	r3, r3, #3
   311cc:	sub	r2, fp, #12
   311d0:	add	r3, r2, r3
   311d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   311d8:	str	r2, [r3, #-92]	; 0xffffffa4
   311dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   311e0:	add	r3, r3, #1
   311e4:	str	r3, [fp, #-104]	; 0xffffff98
   311e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   311ec:	cmp	r3, #0
   311f0:	beq	3124c <flatcc_builder_vector_edit@@Base+0x1c8>
   311f4:	ldr	r2, [fp, #-108]	; 0xffffff94
   311f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   311fc:	add	r3, r2, r3
   31200:	str	r3, [fp, #-108]	; 0xffffff94
   31204:	ldr	r3, [fp, #-104]	; 0xffffff98
   31208:	add	r3, r3, #1
   3120c:	lsl	r3, r3, #3
   31210:	sub	r2, fp, #12
   31214:	add	r3, r2, r3
   31218:	ldr	r2, [pc, #440]	; 313d8 <flatcc_builder_vector_edit@@Base+0x354>
   3121c:	ldr	r2, [r4, r2]
   31220:	str	r2, [r3, #-96]	; 0xffffffa0
   31224:	ldr	r3, [fp, #-104]	; 0xffffff98
   31228:	add	r3, r3, #1
   3122c:	lsl	r3, r3, #3
   31230:	sub	r2, fp, #12
   31234:	add	r3, r2, r3
   31238:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3123c:	str	r2, [r3, #-92]	; 0xffffffa4
   31240:	ldr	r3, [fp, #-104]	; 0xffffff98
   31244:	add	r3, r3, #1
   31248:	str	r3, [fp, #-104]	; 0xffffff98
   3124c:	ldr	r3, [fp, #-112]	; 0xffffff90
   31250:	ldr	r3, [r3, #136]	; 0x88
   31254:	mov	r2, r3
   31258:	ldr	r3, [fp, #-108]	; 0xffffff94
   3125c:	sub	r3, r2, r3
   31260:	str	r3, [fp, #-28]	; 0xffffffe4
   31264:	mov	r3, #0
   31268:	str	r3, [fp, #-16]
   3126c:	b	31398 <flatcc_builder_vector_edit@@Base+0x314>
   31270:	ldr	r3, [fp, #-16]
   31274:	lsl	r3, r3, #2
   31278:	ldr	r2, [fp, #-116]	; 0xffffff8c
   3127c:	add	r3, r2, r3
   31280:	ldr	r3, [r3]
   31284:	cmp	r3, #0
   31288:	beq	31328 <flatcc_builder_vector_edit@@Base+0x2a4>
   3128c:	ldr	r3, [fp, #-16]
   31290:	lsl	r3, r3, #2
   31294:	ldr	r2, [fp, #-116]	; 0xffffff8c
   31298:	add	r3, r2, r3
   3129c:	ldr	r3, [r3]
   312a0:	mov	r2, r3
   312a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   312a8:	sub	r2, r2, r3
   312ac:	ldr	r3, [fp, #-16]
   312b0:	lsl	r3, r3, #2
   312b4:	sub	r3, r2, r3
   312b8:	sub	r3, r3, #4
   312bc:	str	r3, [fp, #-32]	; 0xffffffe0
   312c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   312c4:	bl	2cab0 <main@@Base+0xcdc>
   312c8:	mov	r1, r0
   312cc:	ldr	r3, [fp, #-16]
   312d0:	lsl	r3, r3, #2
   312d4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   312d8:	add	r3, r2, r3
   312dc:	mov	r2, r1
   312e0:	str	r2, [r3]
   312e4:	ldr	r3, [fp, #-124]	; 0xffffff84
   312e8:	cmp	r3, #0
   312ec:	beq	3138c <flatcc_builder_vector_edit@@Base+0x308>
   312f0:	ldr	r2, [fp, #-124]	; 0xffffff84
   312f4:	ldr	r3, [fp, #-16]
   312f8:	add	r3, r2, r3
   312fc:	ldrb	r3, [r3]
   31300:	cmp	r3, #0
   31304:	bne	3138c <flatcc_builder_vector_edit@@Base+0x308>
   31308:	ldr	r3, [pc, #204]	; 313dc <flatcc_builder_vector_edit@@Base+0x358>
   3130c:	add	r3, pc, r3
   31310:	movw	r2, #1457	; 0x5b1
   31314:	ldr	r1, [pc, #196]	; 313e0 <flatcc_builder_vector_edit@@Base+0x35c>
   31318:	add	r1, pc, r1
   3131c:	ldr	r0, [pc, #192]	; 313e4 <flatcc_builder_vector_edit@@Base+0x360>
   31320:	add	r0, pc, r0
   31324:	bl	145e8 <__assert_fail@plt>
   31328:	ldr	r3, [fp, #-124]	; 0xffffff84
   3132c:	cmp	r3, #0
   31330:	beq	3136c <flatcc_builder_vector_edit@@Base+0x2e8>
   31334:	ldr	r2, [fp, #-124]	; 0xffffff84
   31338:	ldr	r3, [fp, #-16]
   3133c:	add	r3, r2, r3
   31340:	ldrb	r3, [r3]
   31344:	cmp	r3, #0
   31348:	beq	3138c <flatcc_builder_vector_edit@@Base+0x308>
   3134c:	ldr	r3, [pc, #148]	; 313e8 <flatcc_builder_vector_edit@@Base+0x364>
   31350:	add	r3, pc, r3
   31354:	movw	r2, #1461	; 0x5b5
   31358:	ldr	r1, [pc, #140]	; 313ec <flatcc_builder_vector_edit@@Base+0x368>
   3135c:	add	r1, pc, r1
   31360:	ldr	r0, [pc, #136]	; 313f0 <flatcc_builder_vector_edit@@Base+0x36c>
   31364:	add	r0, pc, r0
   31368:	bl	145e8 <__assert_fail@plt>
   3136c:	ldr	r3, [pc, #128]	; 313f4 <flatcc_builder_vector_edit@@Base+0x370>
   31370:	add	r3, pc, r3
   31374:	movw	r2, #1463	; 0x5b7
   31378:	ldr	r1, [pc, #120]	; 313f8 <flatcc_builder_vector_edit@@Base+0x374>
   3137c:	add	r1, pc, r1
   31380:	ldr	r0, [pc, #116]	; 313fc <flatcc_builder_vector_edit@@Base+0x378>
   31384:	add	r0, pc, r0
   31388:	bl	145e8 <__assert_fail@plt>
   3138c:	ldr	r3, [fp, #-16]
   31390:	add	r3, r3, #1
   31394:	str	r3, [fp, #-16]
   31398:	ldr	r2, [fp, #-16]
   3139c:	ldr	r3, [fp, #-120]	; 0xffffff88
   313a0:	cmp	r2, r3
   313a4:	bcc	31270 <flatcc_builder_vector_edit@@Base+0x1ec>
   313a8:	sub	r3, fp, #108	; 0x6c
   313ac:	mov	r1, r3
   313b0:	ldr	r0, [fp, #-112]	; 0xffffff90
   313b4:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   313b8:	mov	r3, r0
   313bc:	mov	r0, r3
   313c0:	sub	sp, fp, #8
   313c4:	ldr	r4, [sp]
   313c8:	ldr	fp, [sp, #4]
   313cc:	add	sp, sp, #8
   313d0:	pop	{pc}		; (ldr pc, [sp], #4)
   313d4:	andeq	r3, r3, r4, lsr #30
   313d8:	andeq	r0, r0, r4, rrx
   313dc:	andeq	r0, r2, r8, asr #14
   313e0:			; <UNDEFINED> instruction: 0x0001ffbc
   313e4:			; <UNDEFINED> instruction: 0x000202b4
   313e8:	andeq	r0, r2, r4, lsl #14
   313ec:	andeq	pc, r1, r8, ror pc	; <UNPREDICTABLE>
   313f0:	andeq	r0, r2, r0, lsl #5
   313f4:	andeq	r0, r2, r4, ror #13
   313f8:	andeq	pc, r1, r8, asr pc	; <UNPREDICTABLE>
   313fc:			; <UNDEFINED> instruction: 0x0001ffb0

00031400 <flatcc_builder_create_offset_vector_direct@@Base>:
   31400:	str	fp, [sp, #-8]!
   31404:	str	lr, [sp, #4]
   31408:	add	fp, sp, #4
   3140c:	sub	sp, sp, #16
   31410:	str	r0, [fp, #-8]
   31414:	str	r1, [fp, #-12]
   31418:	str	r2, [fp, #-16]
   3141c:	mov	r3, #0
   31420:	ldr	r2, [fp, #-16]
   31424:	ldr	r1, [fp, #-12]
   31428:	ldr	r0, [fp, #-8]
   3142c:	bl	310ac <flatcc_builder_vector_edit@@Base+0x28>
   31430:	mov	r3, r0
   31434:	mov	r0, r3
   31438:	sub	sp, fp, #4
   3143c:	ldr	fp, [sp]
   31440:	add	sp, sp, #4
   31444:	pop	{pc}		; (ldr pc, [sp], #4)

00031448 <flatcc_builder_end_offset_vector@@Base>:
   31448:	str	fp, [sp, #-8]!
   3144c:	str	lr, [sp, #4]
   31450:	add	fp, sp, #4
   31454:	sub	sp, sp, #16
   31458:	str	r0, [fp, #-16]
   3145c:	ldr	r3, [fp, #-16]
   31460:	ldr	r3, [r3, #32]
   31464:	ldrh	r3, [r3, #14]
   31468:	cmp	r3, #5
   3146c:	beq	31490 <flatcc_builder_end_offset_vector@@Base+0x48>
   31470:	ldr	r3, [pc, #112]	; 314e8 <flatcc_builder_end_offset_vector@@Base+0xa0>
   31474:	add	r3, pc, r3
   31478:	movw	r2, #1480	; 0x5c8
   3147c:	ldr	r1, [pc, #104]	; 314ec <flatcc_builder_end_offset_vector@@Base+0xa4>
   31480:	add	r1, pc, r1
   31484:	ldr	r0, [pc, #100]	; 314f0 <flatcc_builder_end_offset_vector@@Base+0xa8>
   31488:	add	r0, pc, r0
   3148c:	bl	145e8 <__assert_fail@plt>
   31490:	ldr	r3, [fp, #-16]
   31494:	ldr	r1, [r3, #16]
   31498:	ldr	r3, [fp, #-16]
   3149c:	ldr	r3, [r3, #32]
   314a0:	ldr	r3, [r3, #20]
   314a4:	mov	r2, r3
   314a8:	ldr	r0, [fp, #-16]
   314ac:	bl	31400 <flatcc_builder_create_offset_vector_direct@@Base>
   314b0:	str	r0, [fp, #-8]
   314b4:	ldr	r3, [fp, #-8]
   314b8:	cmp	r3, #0
   314bc:	bne	314c8 <flatcc_builder_end_offset_vector@@Base+0x80>
   314c0:	mov	r3, #0
   314c4:	b	314d4 <flatcc_builder_end_offset_vector@@Base+0x8c>
   314c8:	ldr	r0, [fp, #-16]
   314cc:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   314d0:	ldr	r3, [fp, #-8]
   314d4:	mov	r0, r3
   314d8:	sub	sp, fp, #4
   314dc:	ldr	fp, [sp]
   314e0:	add	sp, sp, #4
   314e4:	pop	{pc}		; (ldr pc, [sp], #4)
   314e8:	andeq	r0, r2, r0, lsl #12
   314ec:	andeq	pc, r1, r4, asr lr	; <UNPREDICTABLE>
   314f0:	strdeq	pc, [r1], -ip

000314f4 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   314f4:	str	fp, [sp, #-8]!
   314f8:	str	lr, [sp, #4]
   314fc:	add	fp, sp, #4
   31500:	sub	sp, sp, #16
   31504:	str	r0, [fp, #-16]
   31508:	str	r1, [fp, #-20]	; 0xffffffec
   3150c:	ldr	r3, [fp, #-16]
   31510:	ldr	r3, [r3, #32]
   31514:	ldrh	r3, [r3, #14]
   31518:	cmp	r3, #5
   3151c:	beq	31540 <flatcc_builder_end_offset_vector_for_unions@@Base+0x4c>
   31520:	ldr	r3, [pc, #112]	; 31598 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   31524:	add	r3, pc, r3
   31528:	movw	r2, #1493	; 0x5d5
   3152c:	ldr	r1, [pc, #104]	; 3159c <flatcc_builder_end_offset_vector_for_unions@@Base+0xa8>
   31530:	add	r1, pc, r1
   31534:	ldr	r0, [pc, #100]	; 315a0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xac>
   31538:	add	r0, pc, r0
   3153c:	bl	145e8 <__assert_fail@plt>
   31540:	ldr	r3, [fp, #-16]
   31544:	ldr	r1, [r3, #16]
   31548:	ldr	r3, [fp, #-16]
   3154c:	ldr	r3, [r3, #32]
   31550:	ldr	r2, [r3, #20]
   31554:	ldr	r3, [fp, #-20]	; 0xffffffec
   31558:	ldr	r0, [fp, #-16]
   3155c:	bl	310ac <flatcc_builder_vector_edit@@Base+0x28>
   31560:	str	r0, [fp, #-8]
   31564:	ldr	r3, [fp, #-8]
   31568:	cmp	r3, #0
   3156c:	bne	31578 <flatcc_builder_end_offset_vector_for_unions@@Base+0x84>
   31570:	mov	r3, #0
   31574:	b	31584 <flatcc_builder_end_offset_vector_for_unions@@Base+0x90>
   31578:	ldr	r0, [fp, #-16]
   3157c:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   31580:	ldr	r3, [fp, #-8]
   31584:	mov	r0, r3
   31588:	sub	sp, fp, #4
   3158c:	ldr	fp, [sp]
   31590:	add	sp, sp, #4
   31594:	pop	{pc}		; (ldr pc, [sp], #4)
   31598:	andeq	r0, r2, r4, ror r5
   3159c:	andeq	pc, r1, r4, lsr #27
   315a0:	andeq	pc, r1, ip, asr #30

000315a4 <flatcc_builder_offset_vector_edit@@Base>:
   315a4:	push	{fp}		; (str fp, [sp, #-4]!)
   315a8:	add	fp, sp, #0
   315ac:	sub	sp, sp, #12
   315b0:	str	r0, [fp, #-8]
   315b4:	ldr	r3, [fp, #-8]
   315b8:	ldr	r3, [r3, #16]
   315bc:	mov	r0, r3
   315c0:	add	sp, fp, #0
   315c4:	pop	{fp}		; (ldr fp, [sp], #4)
   315c8:	bx	lr

000315cc <flatcc_builder_offset_vector_count@@Base>:
   315cc:	push	{fp}		; (str fp, [sp, #-4]!)
   315d0:	add	fp, sp, #0
   315d4:	sub	sp, sp, #12
   315d8:	str	r0, [fp, #-8]
   315dc:	ldr	r3, [fp, #-8]
   315e0:	ldr	r3, [r3, #32]
   315e4:	ldr	r3, [r3, #20]
   315e8:	mov	r0, r3
   315ec:	add	sp, fp, #0
   315f0:	pop	{fp}		; (ldr fp, [sp], #4)
   315f4:	bx	lr

000315f8 <flatcc_builder_table_add_union@@Base>:
   315f8:	str	fp, [sp, #-8]!
   315fc:	str	lr, [sp, #4]
   31600:	add	fp, sp, #4
   31604:	sub	sp, sp, #24
   31608:	str	r0, [fp, #-16]
   3160c:	str	r1, [fp, #-20]	; 0xffffffec
   31610:	sub	r1, fp, #28
   31614:	stm	r1, {r2, r3}
   31618:	ldr	r3, [fp, #-16]
   3161c:	ldr	r3, [r3, #32]
   31620:	ldrh	r3, [r3, #14]
   31624:	cmp	r3, #3
   31628:	beq	3164c <flatcc_builder_table_add_union@@Base+0x54>
   3162c:	ldr	r3, [pc, #360]	; 3179c <flatcc_builder_table_add_union@@Base+0x1a4>
   31630:	add	r3, pc, r3
   31634:	movw	r2, #1518	; 0x5ee
   31638:	ldr	r1, [pc, #352]	; 317a0 <flatcc_builder_table_add_union@@Base+0x1a8>
   3163c:	add	r1, pc, r1
   31640:	ldr	r0, [pc, #348]	; 317a4 <flatcc_builder_table_add_union@@Base+0x1ac>
   31644:	add	r0, pc, r0
   31648:	bl	145e8 <__assert_fail@plt>
   3164c:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   31650:	cmp	r3, #0
   31654:	bne	316a4 <flatcc_builder_table_add_union@@Base+0xac>
   31658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3165c:	cmp	r3, #0
   31660:	beq	316a4 <flatcc_builder_table_add_union@@Base+0xac>
   31664:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   31668:	cmp	r3, #0
   3166c:	bne	3169c <flatcc_builder_table_add_union@@Base+0xa4>
   31670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31674:	cmp	r3, #0
   31678:	beq	3169c <flatcc_builder_table_add_union@@Base+0xa4>
   3167c:	ldr	r3, [pc, #292]	; 317a8 <flatcc_builder_table_add_union@@Base+0x1b0>
   31680:	add	r3, pc, r3
   31684:	movw	r2, #1519	; 0x5ef
   31688:	ldr	r1, [pc, #284]	; 317ac <flatcc_builder_table_add_union@@Base+0x1b4>
   3168c:	add	r1, pc, r1
   31690:	ldr	r0, [pc, #280]	; 317b0 <flatcc_builder_table_add_union@@Base+0x1b8>
   31694:	add	r0, pc, r0
   31698:	bl	145e8 <__assert_fail@plt>
   3169c:	mvn	r3, #0
   316a0:	b	31788 <flatcc_builder_table_add_union@@Base+0x190>
   316a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   316a8:	cmp	r3, #0
   316ac:	beq	3170c <flatcc_builder_table_add_union@@Base+0x114>
   316b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   316b4:	ldr	r0, [fp, #-16]
   316b8:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   316bc:	str	r0, [fp, #-8]
   316c0:	ldr	r3, [fp, #-8]
   316c4:	cmp	r3, #0
   316c8:	bne	31700 <flatcc_builder_table_add_union@@Base+0x108>
   316cc:	ldr	r3, [fp, #-8]
   316d0:	cmp	r3, #0
   316d4:	bne	316f8 <flatcc_builder_table_add_union@@Base+0x100>
   316d8:	ldr	r3, [pc, #212]	; 317b4 <flatcc_builder_table_add_union@@Base+0x1bc>
   316dc:	add	r3, pc, r3
   316e0:	movw	r2, #1522	; 0x5f2
   316e4:	ldr	r1, [pc, #204]	; 317b8 <flatcc_builder_table_add_union@@Base+0x1c0>
   316e8:	add	r1, pc, r1
   316ec:	ldr	r0, [pc, #200]	; 317bc <flatcc_builder_table_add_union@@Base+0x1c4>
   316f0:	add	r0, pc, r0
   316f4:	bl	145e8 <__assert_fail@plt>
   316f8:	mvn	r3, #0
   316fc:	b	31788 <flatcc_builder_table_add_union@@Base+0x190>
   31700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31704:	ldr	r3, [fp, #-8]
   31708:	str	r2, [r3]
   3170c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31710:	sub	r1, r3, #1
   31714:	mov	r3, #1
   31718:	mov	r2, #1
   3171c:	ldr	r0, [fp, #-16]
   31720:	bl	3255c <flatcc_builder_table_add@@Base>
   31724:	str	r0, [fp, #-12]
   31728:	ldr	r3, [fp, #-12]
   3172c:	cmp	r3, #0
   31730:	bne	31768 <flatcc_builder_table_add_union@@Base+0x170>
   31734:	ldr	r3, [fp, #-12]
   31738:	cmp	r3, #0
   3173c:	bne	31760 <flatcc_builder_table_add_union@@Base+0x168>
   31740:	ldr	r3, [pc, #120]	; 317c0 <flatcc_builder_table_add_union@@Base+0x1c8>
   31744:	add	r3, pc, r3
   31748:	movw	r2, #1526	; 0x5f6
   3174c:	ldr	r1, [pc, #112]	; 317c4 <flatcc_builder_table_add_union@@Base+0x1cc>
   31750:	add	r1, pc, r1
   31754:	ldr	r0, [pc, #108]	; 317c8 <flatcc_builder_table_add_union@@Base+0x1d0>
   31758:	add	r0, pc, r0
   3175c:	bl	145e8 <__assert_fail@plt>
   31760:	mvn	r3, #0
   31764:	b	31788 <flatcc_builder_table_add_union@@Base+0x190>
   31768:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   3176c:	mov	r0, r3
   31770:	bl	2cad4 <main@@Base+0xd00>
   31774:	mov	r3, r0
   31778:	mov	r2, r3
   3177c:	ldr	r3, [fp, #-12]
   31780:	strb	r2, [r3]
   31784:	mov	r3, #0
   31788:	mov	r0, r3
   3178c:	sub	sp, fp, #4
   31790:	ldr	fp, [sp]
   31794:	add	sp, sp, #4
   31798:	pop	{pc}		; (ldr pc, [sp], #4)
   3179c:	muleq	r2, r4, r4
   317a0:	muleq	r1, r8, ip
   317a4:	andeq	pc, r1, r0, asr pc	; <UNPREDICTABLE>
   317a8:	andeq	r0, r2, r4, asr #8
   317ac:	andeq	pc, r1, r8, asr #24
   317b0:	andeq	pc, r1, r0, ror #30
   317b4:	andeq	r0, r2, r8, ror #7
   317b8:	andeq	pc, r1, ip, ror #23
   317bc:	andeq	pc, r1, r8, lsr #30
   317c0:	andeq	r0, r2, r0, lsl #7
   317c4:	andeq	pc, r1, r4, lsl #23
   317c8:	andeq	pc, r1, ip, asr #29

000317cc <flatcc_builder_table_add_union_vector@@Base>:
   317cc:	str	fp, [sp, #-8]!
   317d0:	str	lr, [sp, #4]
   317d4:	add	fp, sp, #4
   317d8:	sub	sp, sp, #24
   317dc:	str	r0, [fp, #-16]
   317e0:	str	r1, [fp, #-20]	; 0xffffffec
   317e4:	sub	r1, fp, #28
   317e8:	stm	r1, {r2, r3}
   317ec:	ldr	r3, [fp, #-16]
   317f0:	ldr	r3, [r3, #32]
   317f4:	ldrh	r3, [r3, #14]
   317f8:	cmp	r3, #3
   317fc:	beq	31820 <flatcc_builder_table_add_union_vector@@Base+0x54>
   31800:	ldr	r3, [pc, #404]	; 3199c <flatcc_builder_table_add_union_vector@@Base+0x1d0>
   31804:	add	r3, pc, r3
   31808:	mov	r2, #1536	; 0x600
   3180c:	ldr	r1, [pc, #396]	; 319a0 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   31810:	add	r1, pc, r1
   31814:	ldr	r0, [pc, #392]	; 319a4 <flatcc_builder_table_add_union_vector@@Base+0x1d8>
   31818:	add	r0, pc, r0
   3181c:	bl	145e8 <__assert_fail@plt>
   31820:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31824:	cmp	r3, #0
   31828:	moveq	r3, #1
   3182c:	movne	r3, #0
   31830:	uxtb	r2, r3
   31834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31838:	cmp	r3, #0
   3183c:	moveq	r3, #1
   31840:	movne	r3, #0
   31844:	uxtb	r3, r3
   31848:	eor	r3, r3, r2
   3184c:	uxtb	r3, r3
   31850:	cmp	r3, #0
   31854:	beq	318b8 <flatcc_builder_table_add_union_vector@@Base+0xec>
   31858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3185c:	cmp	r3, #0
   31860:	movne	r3, #1
   31864:	moveq	r3, #0
   31868:	uxtb	r2, r3
   3186c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31870:	cmp	r3, #0
   31874:	moveq	r3, #1
   31878:	movne	r3, #0
   3187c:	uxtb	r3, r3
   31880:	eor	r3, r3, r2
   31884:	uxtb	r3, r3
   31888:	cmp	r3, #0
   3188c:	bne	318b0 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   31890:	ldr	r3, [pc, #272]	; 319a8 <flatcc_builder_table_add_union_vector@@Base+0x1dc>
   31894:	add	r3, pc, r3
   31898:	movw	r2, #1537	; 0x601
   3189c:	ldr	r1, [pc, #264]	; 319ac <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   318a0:	add	r1, pc, r1
   318a4:	ldr	r0, [pc, #260]	; 319b0 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   318a8:	add	r0, pc, r0
   318ac:	bl	145e8 <__assert_fail@plt>
   318b0:	mvn	r3, #0
   318b4:	b	31988 <flatcc_builder_table_add_union_vector@@Base+0x1bc>
   318b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   318bc:	cmp	r3, #0
   318c0:	beq	31984 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   318c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   318c8:	sub	r3, r3, #1
   318cc:	mov	r1, r3
   318d0:	ldr	r0, [fp, #-16]
   318d4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   318d8:	str	r0, [fp, #-8]
   318dc:	ldr	r3, [fp, #-8]
   318e0:	cmp	r3, #0
   318e4:	bne	3191c <flatcc_builder_table_add_union_vector@@Base+0x150>
   318e8:	ldr	r3, [fp, #-8]
   318ec:	cmp	r3, #0
   318f0:	bne	31914 <flatcc_builder_table_add_union_vector@@Base+0x148>
   318f4:	ldr	r3, [pc, #184]	; 319b4 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   318f8:	add	r3, pc, r3
   318fc:	movw	r2, #1540	; 0x604
   31900:	ldr	r1, [pc, #176]	; 319b8 <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   31904:	add	r1, pc, r1
   31908:	ldr	r0, [pc, #172]	; 319bc <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   3190c:	add	r0, pc, r0
   31910:	bl	145e8 <__assert_fail@plt>
   31914:	mvn	r3, #0
   31918:	b	31988 <flatcc_builder_table_add_union_vector@@Base+0x1bc>
   3191c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31920:	ldr	r3, [fp, #-8]
   31924:	str	r2, [r3]
   31928:	ldr	r1, [fp, #-20]	; 0xffffffec
   3192c:	ldr	r0, [fp, #-16]
   31930:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   31934:	str	r0, [fp, #-8]
   31938:	ldr	r3, [fp, #-8]
   3193c:	cmp	r3, #0
   31940:	bne	31978 <flatcc_builder_table_add_union_vector@@Base+0x1ac>
   31944:	ldr	r3, [fp, #-8]
   31948:	cmp	r3, #0
   3194c:	bne	31970 <flatcc_builder_table_add_union_vector@@Base+0x1a4>
   31950:	ldr	r3, [pc, #104]	; 319c0 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   31954:	add	r3, pc, r3
   31958:	movw	r2, #1544	; 0x608
   3195c:	ldr	r1, [pc, #96]	; 319c4 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   31960:	add	r1, pc, r1
   31964:	ldr	r0, [pc, #92]	; 319c8 <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   31968:	add	r0, pc, r0
   3196c:	bl	145e8 <__assert_fail@plt>
   31970:	mvn	r3, #0
   31974:	b	31988 <flatcc_builder_table_add_union_vector@@Base+0x1bc>
   31978:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3197c:	ldr	r3, [fp, #-8]
   31980:	str	r2, [r3]
   31984:	mov	r3, #0
   31988:	mov	r0, r3
   3198c:	sub	sp, fp, #4
   31990:	ldr	fp, [sp]
   31994:	add	sp, sp, #4
   31998:	pop	{pc}		; (ldr pc, [sp], #4)
   3199c:	andeq	r0, r2, r0, ror #5
   319a0:	andeq	pc, r1, r4, asr #21
   319a4:	andeq	pc, r1, ip, ror sp	; <UNPREDICTABLE>
   319a8:	andeq	r0, r2, r0, asr r2
   319ac:	andeq	pc, r1, r4, lsr sl	; <UNPREDICTABLE>
   319b0:	andeq	pc, r1, r8, lsl #27
   319b4:	andeq	r0, r2, ip, ror #3
   319b8:	ldrdeq	pc, [r1], -r0
   319bc:	andeq	pc, r1, ip, lsl #26
   319c0:	muleq	r2, r0, r1
   319c4:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   319c8:			; <UNDEFINED> instruction: 0x0001fcb0

000319cc <flatcc_builder_create_union_vector@@Base>:
   319cc:	str	fp, [sp, #-8]!
   319d0:	str	lr, [sp, #4]
   319d4:	add	fp, sp, #4
   319d8:	sub	sp, sp, #48	; 0x30
   319dc:	str	r0, [fp, #-32]	; 0xffffffe0
   319e0:	str	r1, [fp, #-36]	; 0xffffffdc
   319e4:	str	r2, [fp, #-40]	; 0xffffffd8
   319e8:	str	r3, [fp, #-44]	; 0xffffffd4
   319ec:	mov	r3, #0
   319f0:	str	r3, [fp, #-24]	; 0xffffffe8
   319f4:	mov	r3, #0
   319f8:	str	r3, [fp, #-20]	; 0xffffffec
   319fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31a00:	bl	2fd40 <flatcc_builder_start_offset_vector@@Base>
   31a04:	mov	r3, r0
   31a08:	cmp	r3, #0
   31a0c:	beq	31a28 <flatcc_builder_create_union_vector@@Base+0x5c>
   31a10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a14:	mov	r1, r3
   31a18:	sub	r3, fp, #24
   31a1c:	ldrd	r2, [r3]
   31a20:	strd	r2, [r1]
   31a24:	b	31b44 <flatcc_builder_create_union_vector@@Base+0x178>
   31a28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31a2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31a30:	bl	2f584 <flatcc_builder_extend_offset_vector@@Base>
   31a34:	mov	r3, r0
   31a38:	cmp	r3, #0
   31a3c:	bne	31a58 <flatcc_builder_create_union_vector@@Base+0x8c>
   31a40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a44:	mov	r1, r3
   31a48:	sub	r3, fp, #24
   31a4c:	ldrd	r2, [r3]
   31a50:	strd	r2, [r1]
   31a54:	b	31b44 <flatcc_builder_create_union_vector@@Base+0x178>
   31a58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31a5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31a60:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   31a64:	str	r0, [fp, #-12]
   31a68:	ldr	r3, [fp, #-12]
   31a6c:	cmp	r3, #0
   31a70:	bne	31a8c <flatcc_builder_create_union_vector@@Base+0xc0>
   31a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a78:	mov	r1, r3
   31a7c:	sub	r3, fp, #24
   31a80:	ldrd	r2, [r3]
   31a84:	strd	r2, [r1]
   31a88:	b	31b44 <flatcc_builder_create_union_vector@@Base+0x178>
   31a8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31a90:	bl	315a4 <flatcc_builder_offset_vector_edit@@Base>
   31a94:	str	r0, [fp, #-16]
   31a98:	mov	r3, #0
   31a9c:	str	r3, [fp, #-8]
   31aa0:	b	31afc <flatcc_builder_create_union_vector@@Base+0x130>
   31aa4:	ldr	r3, [fp, #-8]
   31aa8:	lsl	r3, r3, #3
   31aac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31ab0:	add	r2, r2, r3
   31ab4:	ldr	r1, [fp, #-12]
   31ab8:	ldr	r3, [fp, #-8]
   31abc:	add	r3, r1, r3
   31ac0:	ldrb	r2, [r2]
   31ac4:	strb	r2, [r3]
   31ac8:	ldr	r3, [fp, #-8]
   31acc:	lsl	r3, r3, #3
   31ad0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31ad4:	add	r2, r2, r3
   31ad8:	ldr	r3, [fp, #-8]
   31adc:	lsl	r3, r3, #2
   31ae0:	ldr	r1, [fp, #-16]
   31ae4:	add	r3, r1, r3
   31ae8:	ldr	r2, [r2, #4]
   31aec:	str	r2, [r3]
   31af0:	ldr	r3, [fp, #-8]
   31af4:	add	r3, r3, #1
   31af8:	str	r3, [fp, #-8]
   31afc:	ldr	r2, [fp, #-8]
   31b00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31b04:	cmp	r2, r3
   31b08:	bcc	31aa4 <flatcc_builder_create_union_vector@@Base+0xd8>
   31b0c:	sub	r0, fp, #24
   31b10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31b14:	str	r3, [sp]
   31b18:	ldr	r3, [fp, #-16]
   31b1c:	ldr	r2, [fp, #-12]
   31b20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31b24:	bl	31b58 <flatcc_builder_create_union_vector_direct@@Base>
   31b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31b2c:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   31b30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31b34:	mov	r1, r3
   31b38:	sub	r3, fp, #24
   31b3c:	ldrd	r2, [r3]
   31b40:	strd	r2, [r1]
   31b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31b48:	sub	sp, fp, #4
   31b4c:	ldr	fp, [sp]
   31b50:	add	sp, sp, #4
   31b54:	pop	{pc}		; (ldr pc, [sp], #4)

00031b58 <flatcc_builder_create_union_vector_direct@@Base>:
   31b58:	str	fp, [sp, #-8]!
   31b5c:	str	lr, [sp, #4]
   31b60:	add	fp, sp, #4
   31b64:	sub	sp, sp, #32
   31b68:	str	r0, [fp, #-16]
   31b6c:	str	r1, [fp, #-20]	; 0xffffffec
   31b70:	str	r2, [fp, #-24]	; 0xffffffe8
   31b74:	str	r3, [fp, #-28]	; 0xffffffe4
   31b78:	mov	r3, #0
   31b7c:	str	r3, [fp, #-12]
   31b80:	mov	r3, #0
   31b84:	str	r3, [fp, #-8]
   31b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31b8c:	ldr	r2, [fp, #4]
   31b90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31b94:	ldr	r0, [fp, #-20]	; 0xffffffec
   31b98:	bl	310ac <flatcc_builder_vector_edit@@Base+0x28>
   31b9c:	mov	r3, r0
   31ba0:	str	r3, [fp, #-8]
   31ba4:	ldr	r3, [fp, #-8]
   31ba8:	cmp	r3, #0
   31bac:	bne	31bc8 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   31bb0:	ldr	r3, [fp, #-16]
   31bb4:	mov	r1, r3
   31bb8:	sub	r3, fp, #12
   31bbc:	ldrd	r2, [r3]
   31bc0:	strd	r2, [r1]
   31bc4:	b	31c2c <flatcc_builder_create_union_vector_direct@@Base+0xd4>
   31bc8:	mvn	r3, #0
   31bcc:	str	r3, [sp, #4]
   31bd0:	mov	r3, #1
   31bd4:	str	r3, [sp]
   31bd8:	mov	r3, #1
   31bdc:	ldr	r2, [fp, #4]
   31be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31be4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31be8:	bl	30d50 <flatcc_builder_create_vector@@Base>
   31bec:	mov	r3, r0
   31bf0:	str	r3, [fp, #-12]
   31bf4:	ldr	r3, [fp, #-12]
   31bf8:	cmp	r3, #0
   31bfc:	bne	31c18 <flatcc_builder_create_union_vector_direct@@Base+0xc0>
   31c00:	ldr	r3, [fp, #-16]
   31c04:	mov	r1, r3
   31c08:	sub	r3, fp, #12
   31c0c:	ldrd	r2, [r3]
   31c10:	strd	r2, [r1]
   31c14:	b	31c2c <flatcc_builder_create_union_vector_direct@@Base+0xd4>
   31c18:	ldr	r3, [fp, #-16]
   31c1c:	mov	r1, r3
   31c20:	sub	r3, fp, #12
   31c24:	ldrd	r2, [r3]
   31c28:	strd	r2, [r1]
   31c2c:	ldr	r0, [fp, #-16]
   31c30:	sub	sp, fp, #4
   31c34:	ldr	fp, [sp]
   31c38:	add	sp, sp, #4
   31c3c:	pop	{pc}		; (ldr pc, [sp], #4)

00031c40 <flatcc_builder_start_union_vector@@Base>:
   31c40:	str	fp, [sp, #-8]!
   31c44:	str	lr, [sp, #4]
   31c48:	add	fp, sp, #4
   31c4c:	sub	sp, sp, #8
   31c50:	str	r0, [fp, #-8]
   31c54:	mov	r1, #4
   31c58:	ldr	r0, [fp, #-8]
   31c5c:	bl	2df74 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   31c60:	mov	r3, r0
   31c64:	cmp	r3, #0
   31c68:	beq	31c74 <flatcc_builder_start_union_vector@@Base+0x34>
   31c6c:	mvn	r3, #0
   31c70:	b	31cb4 <flatcc_builder_start_union_vector@@Base+0x74>
   31c74:	ldr	r3, [fp, #-8]
   31c78:	ldr	r3, [r3, #32]
   31c7c:	mov	r2, #8
   31c80:	str	r2, [r3, #16]
   31c84:	ldr	r3, [fp, #-8]
   31c88:	ldr	r3, [r3, #32]
   31c8c:	mov	r2, #0
   31c90:	str	r2, [r3, #20]
   31c94:	ldr	r3, [fp, #-8]
   31c98:	ldr	r3, [r3, #32]
   31c9c:	mov	r2, #7
   31ca0:	strh	r2, [r3, #14]
   31ca4:	mvn	r1, #3
   31ca8:	ldr	r0, [fp, #-8]
   31cac:	bl	2cdd4 <flatcc_builder_default_alloc@@Base+0x1d4>
   31cb0:	mov	r3, #0
   31cb4:	mov	r0, r3
   31cb8:	sub	sp, fp, #4
   31cbc:	ldr	fp, [sp]
   31cc0:	add	sp, sp, #4
   31cc4:	pop	{pc}		; (ldr pc, [sp], #4)

00031cc8 <flatcc_builder_end_union_vector@@Base>:
   31cc8:	str	fp, [sp, #-8]!
   31ccc:	str	lr, [sp, #4]
   31cd0:	add	fp, sp, #4
   31cd4:	sub	sp, sp, #48	; 0x30
   31cd8:	str	r0, [fp, #-40]	; 0xffffffd8
   31cdc:	str	r1, [fp, #-44]	; 0xffffffd4
   31ce0:	mov	r3, #0
   31ce4:	str	r3, [fp, #-32]	; 0xffffffe0
   31ce8:	mov	r3, #0
   31cec:	str	r3, [fp, #-28]	; 0xffffffe4
   31cf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31cf4:	ldr	r3, [r3, #32]
   31cf8:	ldrh	r3, [r3, #14]
   31cfc:	cmp	r3, #7
   31d00:	beq	31d24 <flatcc_builder_end_union_vector@@Base+0x5c>
   31d04:	ldr	r3, [pc, #328]	; 31e54 <flatcc_builder_end_union_vector@@Base+0x18c>
   31d08:	add	r3, pc, r3
   31d0c:	movw	r2, #1617	; 0x651
   31d10:	ldr	r1, [pc, #320]	; 31e58 <flatcc_builder_end_union_vector@@Base+0x190>
   31d14:	add	r1, pc, r1
   31d18:	ldr	r0, [pc, #316]	; 31e5c <flatcc_builder_end_union_vector@@Base+0x194>
   31d1c:	add	r0, pc, r0
   31d20:	bl	145e8 <__assert_fail@plt>
   31d24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31d28:	bl	31e88 <flatcc_builder_union_vector_count@@Base>
   31d2c:	str	r0, [fp, #-12]
   31d30:	ldr	r2, [fp, #-12]
   31d34:	mov	r3, r2
   31d38:	lsl	r3, r3, #2
   31d3c:	add	r3, r3, r2
   31d40:	mov	r1, r3
   31d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31d48:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   31d4c:	str	r0, [fp, #-16]
   31d50:	ldr	r3, [fp, #-16]
   31d54:	cmp	r3, #0
   31d58:	bne	31d74 <flatcc_builder_end_union_vector@@Base+0xac>
   31d5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d60:	mov	r1, r3
   31d64:	sub	r3, fp, #32
   31d68:	ldrd	r2, [r3]
   31d6c:	strd	r2, [r1]
   31d70:	b	31e40 <flatcc_builder_end_union_vector@@Base+0x178>
   31d74:	ldr	r3, [fp, #-12]
   31d78:	lsl	r3, r3, #2
   31d7c:	ldr	r2, [fp, #-16]
   31d80:	add	r3, r2, r3
   31d84:	str	r3, [fp, #-20]	; 0xffffffec
   31d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31d8c:	bl	31e60 <flatcc_builder_union_vector_edit@@Base>
   31d90:	str	r0, [fp, #-24]	; 0xffffffe8
   31d94:	mov	r3, #0
   31d98:	str	r3, [fp, #-8]
   31d9c:	b	31df8 <flatcc_builder_end_union_vector@@Base+0x130>
   31da0:	ldr	r3, [fp, #-8]
   31da4:	lsl	r3, r3, #3
   31da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31dac:	add	r2, r2, r3
   31db0:	ldr	r1, [fp, #-20]	; 0xffffffec
   31db4:	ldr	r3, [fp, #-8]
   31db8:	add	r3, r1, r3
   31dbc:	ldrb	r2, [r2]
   31dc0:	strb	r2, [r3]
   31dc4:	ldr	r3, [fp, #-8]
   31dc8:	lsl	r3, r3, #3
   31dcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31dd0:	add	r2, r2, r3
   31dd4:	ldr	r3, [fp, #-8]
   31dd8:	lsl	r3, r3, #2
   31ddc:	ldr	r1, [fp, #-16]
   31de0:	add	r3, r1, r3
   31de4:	ldr	r2, [r2, #4]
   31de8:	str	r2, [r3]
   31dec:	ldr	r3, [fp, #-8]
   31df0:	add	r3, r3, #1
   31df4:	str	r3, [fp, #-8]
   31df8:	ldr	r2, [fp, #-8]
   31dfc:	ldr	r3, [fp, #-12]
   31e00:	cmp	r2, r3
   31e04:	bcc	31da0 <flatcc_builder_end_union_vector@@Base+0xd8>
   31e08:	sub	r0, fp, #32
   31e0c:	ldr	r3, [fp, #-12]
   31e10:	str	r3, [sp]
   31e14:	ldr	r3, [fp, #-16]
   31e18:	ldr	r2, [fp, #-20]	; 0xffffffec
   31e1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31e20:	bl	31b58 <flatcc_builder_create_union_vector_direct@@Base>
   31e24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31e28:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   31e2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31e30:	mov	r1, r3
   31e34:	sub	r3, fp, #32
   31e38:	ldrd	r2, [r3]
   31e3c:	strd	r2, [r1]
   31e40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31e44:	sub	sp, fp, #4
   31e48:	ldr	fp, [sp]
   31e4c:	add	sp, sp, #4
   31e50:	pop	{pc}		; (ldr pc, [sp], #4)
   31e54:	andeq	pc, r1, r4, lsl #28
   31e58:	andeq	pc, r1, r0, asr #11
   31e5c:	andeq	pc, r1, ip, lsr r9	; <UNPREDICTABLE>

00031e60 <flatcc_builder_union_vector_edit@@Base>:
   31e60:	push	{fp}		; (str fp, [sp, #-4]!)
   31e64:	add	fp, sp, #0
   31e68:	sub	sp, sp, #12
   31e6c:	str	r0, [fp, #-8]
   31e70:	ldr	r3, [fp, #-8]
   31e74:	ldr	r3, [r3, #16]
   31e78:	mov	r0, r3
   31e7c:	add	sp, fp, #0
   31e80:	pop	{fp}		; (ldr fp, [sp], #4)
   31e84:	bx	lr

00031e88 <flatcc_builder_union_vector_count@@Base>:
   31e88:	push	{fp}		; (str fp, [sp, #-4]!)
   31e8c:	add	fp, sp, #0
   31e90:	sub	sp, sp, #12
   31e94:	str	r0, [fp, #-8]
   31e98:	ldr	r3, [fp, #-8]
   31e9c:	ldr	r3, [r3, #32]
   31ea0:	ldr	r3, [r3, #20]
   31ea4:	mov	r0, r3
   31ea8:	add	sp, fp, #0
   31eac:	pop	{fp}		; (ldr fp, [sp], #4)
   31eb0:	bx	lr

00031eb4 <flatcc_builder_extend_union_vector@@Base>:
   31eb4:	str	fp, [sp, #-8]!
   31eb8:	str	lr, [sp, #4]
   31ebc:	add	fp, sp, #4
   31ec0:	sub	sp, sp, #8
   31ec4:	str	r0, [fp, #-8]
   31ec8:	str	r1, [fp, #-12]
   31ecc:	mvn	r2, #-536870912	; 0xe0000000
   31ed0:	ldr	r1, [fp, #-12]
   31ed4:	ldr	r0, [fp, #-8]
   31ed8:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   31edc:	mov	r3, r0
   31ee0:	cmp	r3, #0
   31ee4:	beq	31ef0 <flatcc_builder_extend_union_vector@@Base+0x3c>
   31ee8:	mov	r3, #0
   31eec:	b	31f08 <flatcc_builder_extend_union_vector@@Base+0x54>
   31ef0:	ldr	r3, [fp, #-12]
   31ef4:	lsl	r3, r3, #3
   31ef8:	mov	r1, r3
   31efc:	ldr	r0, [fp, #-8]
   31f00:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   31f04:	mov	r3, r0
   31f08:	mov	r0, r3
   31f0c:	sub	sp, fp, #4
   31f10:	ldr	fp, [sp]
   31f14:	add	sp, sp, #4
   31f18:	pop	{pc}		; (ldr pc, [sp], #4)

00031f1c <flatcc_builder_truncate_union_vector@@Base>:
   31f1c:	str	fp, [sp, #-8]!
   31f20:	str	lr, [sp, #4]
   31f24:	add	fp, sp, #4
   31f28:	sub	sp, sp, #8
   31f2c:	str	r0, [fp, #-8]
   31f30:	str	r1, [fp, #-12]
   31f34:	ldr	r3, [fp, #-8]
   31f38:	ldr	r3, [r3, #32]
   31f3c:	ldrh	r3, [r3, #14]
   31f40:	cmp	r3, #7
   31f44:	beq	31f68 <flatcc_builder_truncate_union_vector@@Base+0x4c>
   31f48:	ldr	r3, [pc, #200]	; 32018 <flatcc_builder_truncate_union_vector@@Base+0xfc>
   31f4c:	add	r3, pc, r3
   31f50:	movw	r2, #1665	; 0x681
   31f54:	ldr	r1, [pc, #192]	; 3201c <flatcc_builder_truncate_union_vector@@Base+0x100>
   31f58:	add	r1, pc, r1
   31f5c:	ldr	r0, [pc, #188]	; 32020 <flatcc_builder_truncate_union_vector@@Base+0x104>
   31f60:	add	r0, pc, r0
   31f64:	bl	145e8 <__assert_fail@plt>
   31f68:	ldr	r3, [fp, #-8]
   31f6c:	ldr	r3, [r3, #32]
   31f70:	ldr	r3, [r3, #20]
   31f74:	ldr	r2, [fp, #-12]
   31f78:	cmp	r2, r3
   31f7c:	bls	31fc0 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   31f80:	ldr	r3, [fp, #-8]
   31f84:	ldr	r3, [r3, #32]
   31f88:	ldr	r3, [r3, #20]
   31f8c:	ldr	r2, [fp, #-12]
   31f90:	cmp	r2, r3
   31f94:	bls	31fb8 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   31f98:	ldr	r3, [pc, #132]	; 32024 <flatcc_builder_truncate_union_vector@@Base+0x108>
   31f9c:	add	r3, pc, r3
   31fa0:	movw	r2, #1666	; 0x682
   31fa4:	ldr	r1, [pc, #124]	; 32028 <flatcc_builder_truncate_union_vector@@Base+0x10c>
   31fa8:	add	r1, pc, r1
   31fac:	ldr	r0, [pc, #120]	; 3202c <flatcc_builder_truncate_union_vector@@Base+0x110>
   31fb0:	add	r0, pc, r0
   31fb4:	bl	145e8 <__assert_fail@plt>
   31fb8:	mvn	r3, #0
   31fbc:	b	32004 <flatcc_builder_truncate_union_vector@@Base+0xe8>
   31fc0:	ldr	r3, [fp, #-8]
   31fc4:	ldr	r3, [r3, #32]
   31fc8:	ldr	r1, [r3, #20]
   31fcc:	ldr	r3, [fp, #-8]
   31fd0:	ldr	r3, [r3, #32]
   31fd4:	ldr	r2, [fp, #-12]
   31fd8:	sub	r2, r1, r2
   31fdc:	str	r2, [r3, #20]
   31fe0:	ldr	r3, [fp, #-8]
   31fe4:	ldr	r3, [r3, #32]
   31fe8:	ldr	r3, [r3, #16]
   31fec:	ldr	r2, [fp, #-12]
   31ff0:	mul	r3, r2, r3
   31ff4:	mov	r1, r3
   31ff8:	ldr	r0, [fp, #-8]
   31ffc:	bl	2cfb8 <flatcc_builder_default_alloc@@Base+0x3b8>
   32000:	mov	r3, #0
   32004:	mov	r0, r3
   32008:	sub	sp, fp, #4
   3200c:	ldr	fp, [sp]
   32010:	add	sp, sp, #4
   32014:	pop	{pc}		; (ldr pc, [sp], #4)
   32018:	andeq	pc, r1, r0, ror #23
   3201c:	andeq	pc, r1, ip, ror r3	; <UNPREDICTABLE>
   32020:	strdeq	pc, [r1], -r8
   32024:	muleq	r1, r0, fp
   32028:	andeq	pc, r1, ip, lsr #6
   3202c:	andeq	pc, r1, r8, asr r5	; <UNPREDICTABLE>

00032030 <flatcc_builder_union_vector_push@@Base>:
   32030:	str	fp, [sp, #-8]!
   32034:	str	lr, [sp, #4]
   32038:	add	fp, sp, #4
   3203c:	sub	sp, sp, #24
   32040:	str	r0, [fp, #-16]
   32044:	sub	r3, fp, #24
   32048:	stm	r3, {r1, r2}
   3204c:	ldr	r3, [fp, #-16]
   32050:	ldr	r3, [r3, #32]
   32054:	ldrh	r3, [r3, #14]
   32058:	cmp	r3, #7
   3205c:	beq	32080 <flatcc_builder_union_vector_push@@Base+0x50>
   32060:	ldr	r3, [pc, #160]	; 32108 <flatcc_builder_union_vector_push@@Base+0xd8>
   32064:	add	r3, pc, r3
   32068:	movw	r2, #1677	; 0x68d
   3206c:	ldr	r1, [pc, #152]	; 3210c <flatcc_builder_union_vector_push@@Base+0xdc>
   32070:	add	r1, pc, r1
   32074:	ldr	r0, [pc, #148]	; 32110 <flatcc_builder_union_vector_push@@Base+0xe0>
   32078:	add	r0, pc, r0
   3207c:	bl	145e8 <__assert_fail@plt>
   32080:	ldr	r3, [fp, #-16]
   32084:	ldr	r3, [r3, #32]
   32088:	ldr	r3, [r3, #20]
   3208c:	cmn	r3, #-536870911	; 0xe0000001
   32090:	bne	3209c <flatcc_builder_union_vector_push@@Base+0x6c>
   32094:	mov	r3, #0
   32098:	b	320f4 <flatcc_builder_union_vector_push@@Base+0xc4>
   3209c:	ldr	r3, [fp, #-16]
   320a0:	ldr	r3, [r3, #32]
   320a4:	ldr	r2, [r3, #20]
   320a8:	ldr	r3, [fp, #-16]
   320ac:	ldr	r3, [r3, #32]
   320b0:	add	r2, r2, #1
   320b4:	str	r2, [r3, #20]
   320b8:	mov	r1, #8
   320bc:	ldr	r0, [fp, #-16]
   320c0:	bl	2cf10 <flatcc_builder_default_alloc@@Base+0x310>
   320c4:	str	r0, [fp, #-8]
   320c8:	ldr	r3, [fp, #-8]
   320cc:	cmp	r3, #0
   320d0:	bne	320dc <flatcc_builder_union_vector_push@@Base+0xac>
   320d4:	mov	r3, #0
   320d8:	b	320f4 <flatcc_builder_union_vector_push@@Base+0xc4>
   320dc:	ldr	r3, [fp, #-8]
   320e0:	mov	r1, r3
   320e4:	sub	r3, fp, #24
   320e8:	ldrd	r2, [r3]
   320ec:	strd	r2, [r1]
   320f0:	ldr	r3, [fp, #-8]
   320f4:	mov	r0, r3
   320f8:	sub	sp, fp, #4
   320fc:	ldr	fp, [sp]
   32100:	add	sp, sp, #4
   32104:	pop	{pc}		; (ldr pc, [sp], #4)
   32108:	strdeq	pc, [r1], -r0
   3210c:	andeq	pc, r1, r4, ror #4
   32110:	andeq	pc, r1, r0, ror #11

00032114 <flatcc_builder_append_union_vector@@Base>:
   32114:	str	fp, [sp, #-8]!
   32118:	str	lr, [sp, #4]
   3211c:	add	fp, sp, #4
   32120:	sub	sp, sp, #16
   32124:	str	r0, [fp, #-8]
   32128:	str	r1, [fp, #-12]
   3212c:	str	r2, [fp, #-16]
   32130:	ldr	r3, [fp, #-8]
   32134:	ldr	r3, [r3, #32]
   32138:	ldrh	r3, [r3, #14]
   3213c:	cmp	r3, #7
   32140:	beq	32164 <flatcc_builder_append_union_vector@@Base+0x50>
   32144:	ldr	r3, [pc, #108]	; 321b8 <flatcc_builder_append_union_vector@@Base+0xa4>
   32148:	add	r3, pc, r3
   3214c:	movw	r2, #1692	; 0x69c
   32150:	ldr	r1, [pc, #100]	; 321bc <flatcc_builder_append_union_vector@@Base+0xa8>
   32154:	add	r1, pc, r1
   32158:	ldr	r0, [pc, #96]	; 321c0 <flatcc_builder_append_union_vector@@Base+0xac>
   3215c:	add	r0, pc, r0
   32160:	bl	145e8 <__assert_fail@plt>
   32164:	mvn	r2, #-536870912	; 0xe0000000
   32168:	ldr	r1, [fp, #-16]
   3216c:	ldr	r0, [fp, #-8]
   32170:	bl	2f248 <flatcc_builder_end_struct@@Base+0xac>
   32174:	mov	r3, r0
   32178:	cmp	r3, #0
   3217c:	beq	32188 <flatcc_builder_append_union_vector@@Base+0x74>
   32180:	mov	r3, #0
   32184:	b	321a4 <flatcc_builder_append_union_vector@@Base+0x90>
   32188:	ldr	r3, [fp, #-16]
   3218c:	lsl	r3, r3, #3
   32190:	mov	r2, r3
   32194:	ldr	r1, [fp, #-12]
   32198:	ldr	r0, [fp, #-8]
   3219c:	bl	2d020 <flatcc_builder_default_alloc@@Base+0x420>
   321a0:	mov	r3, r0
   321a4:	mov	r0, r3
   321a8:	sub	sp, fp, #4
   321ac:	ldr	fp, [sp]
   321b0:	add	sp, sp, #4
   321b4:	pop	{pc}		; (ldr pc, [sp], #4)
   321b8:	andeq	pc, r1, r0, lsr sl	; <UNPREDICTABLE>
   321bc:	andeq	pc, r1, r0, lsl #3
   321c0:	strdeq	pc, [r1], -ip

000321c4 <flatcc_builder_create_string@@Base>:
   321c4:	str	r4, [sp, #-12]!
   321c8:	str	fp, [sp, #4]
   321cc:	str	lr, [sp, #8]
   321d0:	add	fp, sp, #8
   321d4:	sub	sp, sp, #100	; 0x64
   321d8:	str	r0, [fp, #-96]	; 0xffffffa0
   321dc:	str	r1, [fp, #-100]	; 0xffffff9c
   321e0:	str	r2, [fp, #-104]	; 0xffffff98
   321e4:	ldr	r4, [pc, #388]	; 32370 <flatcc_builder_create_string@@Base+0x1ac>
   321e8:	add	r4, pc, r4
   321ec:	ldr	r0, [fp, #-104]	; 0xffffff98
   321f0:	bl	2cab0 <main@@Base+0xcdc>
   321f4:	mov	r3, r0
   321f8:	str	r3, [fp, #-20]	; 0xffffffec
   321fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   32200:	add	r3, r3, #1
   32204:	mov	r2, #4
   32208:	mov	r1, r3
   3220c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   32210:	bl	2e234 <flatcc_builder_get_user_frame_ptr@@Base+0x2f4>
   32214:	mov	r3, r0
   32218:	add	r3, r3, #1
   3221c:	str	r3, [fp, #-16]
   32220:	mov	r3, #0
   32224:	str	r3, [fp, #-92]	; 0xffffffa4
   32228:	mov	r3, #0
   3222c:	str	r3, [fp, #-88]	; 0xffffffa8
   32230:	ldr	r3, [fp, #-92]	; 0xffffffa4
   32234:	add	r3, r3, #4
   32238:	str	r3, [fp, #-92]	; 0xffffffa4
   3223c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   32240:	add	r3, r3, #1
   32244:	lsl	r3, r3, #3
   32248:	sub	r2, fp, #12
   3224c:	add	r3, r2, r3
   32250:	sub	r2, fp, #20
   32254:	str	r2, [r3, #-80]	; 0xffffffb0
   32258:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3225c:	add	r3, r3, #1
   32260:	lsl	r3, r3, #3
   32264:	sub	r2, fp, #12
   32268:	add	r3, r2, r3
   3226c:	mov	r2, #4
   32270:	str	r2, [r3, #-76]	; 0xffffffb4
   32274:	ldr	r3, [fp, #-88]	; 0xffffffa8
   32278:	add	r3, r3, #1
   3227c:	str	r3, [fp, #-88]	; 0xffffffa8
   32280:	ldr	r3, [fp, #-104]	; 0xffffff98
   32284:	cmp	r3, #0
   32288:	beq	322e0 <flatcc_builder_create_string@@Base+0x11c>
   3228c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   32290:	ldr	r3, [fp, #-104]	; 0xffffff98
   32294:	add	r3, r2, r3
   32298:	str	r3, [fp, #-92]	; 0xffffffa4
   3229c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   322a0:	add	r3, r3, #1
   322a4:	lsl	r3, r3, #3
   322a8:	sub	r2, fp, #12
   322ac:	add	r3, r2, r3
   322b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   322b4:	str	r2, [r3, #-80]	; 0xffffffb0
   322b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   322bc:	add	r3, r3, #1
   322c0:	lsl	r3, r3, #3
   322c4:	sub	r2, fp, #12
   322c8:	add	r3, r2, r3
   322cc:	ldr	r2, [fp, #-104]	; 0xffffff98
   322d0:	str	r2, [r3, #-76]	; 0xffffffb4
   322d4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   322d8:	add	r3, r3, #1
   322dc:	str	r3, [fp, #-88]	; 0xffffffa8
   322e0:	ldr	r3, [fp, #-16]
   322e4:	cmp	r3, #0
   322e8:	beq	32344 <flatcc_builder_create_string@@Base+0x180>
   322ec:	ldr	r2, [fp, #-92]	; 0xffffffa4
   322f0:	ldr	r3, [fp, #-16]
   322f4:	add	r3, r2, r3
   322f8:	str	r3, [fp, #-92]	; 0xffffffa4
   322fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   32300:	add	r3, r3, #1
   32304:	lsl	r3, r3, #3
   32308:	sub	r2, fp, #12
   3230c:	add	r3, r2, r3
   32310:	ldr	r2, [pc, #92]	; 32374 <flatcc_builder_create_string@@Base+0x1b0>
   32314:	ldr	r2, [r4, r2]
   32318:	str	r2, [r3, #-80]	; 0xffffffb0
   3231c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   32320:	add	r3, r3, #1
   32324:	lsl	r3, r3, #3
   32328:	sub	r2, fp, #12
   3232c:	add	r3, r2, r3
   32330:	ldr	r2, [fp, #-16]
   32334:	str	r2, [r3, #-76]	; 0xffffffb4
   32338:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3233c:	add	r3, r3, #1
   32340:	str	r3, [fp, #-88]	; 0xffffffa8
   32344:	sub	r3, fp, #92	; 0x5c
   32348:	mov	r1, r3
   3234c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   32350:	bl	2e2bc <flatcc_builder_get_user_frame_ptr@@Base+0x37c>
   32354:	mov	r3, r0
   32358:	mov	r0, r3
   3235c:	sub	sp, fp, #8
   32360:	ldr	r4, [sp]
   32364:	ldr	fp, [sp, #4]
   32368:	add	sp, sp, #8
   3236c:	pop	{pc}		; (ldr pc, [sp], #4)
   32370:	andeq	r2, r3, r0, lsl lr
   32374:	andeq	r0, r0, r4, rrx

00032378 <flatcc_builder_create_string_str@@Base>:
   32378:	str	fp, [sp, #-8]!
   3237c:	str	lr, [sp, #4]
   32380:	add	fp, sp, #4
   32384:	sub	sp, sp, #8
   32388:	str	r0, [fp, #-8]
   3238c:	str	r1, [fp, #-12]
   32390:	ldr	r0, [fp, #-12]
   32394:	bl	14570 <strlen@plt>
   32398:	mov	r3, r0
   3239c:	mov	r2, r3
   323a0:	ldr	r1, [fp, #-12]
   323a4:	ldr	r0, [fp, #-8]
   323a8:	bl	321c4 <flatcc_builder_create_string@@Base>
   323ac:	mov	r3, r0
   323b0:	mov	r0, r3
   323b4:	sub	sp, fp, #4
   323b8:	ldr	fp, [sp]
   323bc:	add	sp, sp, #4
   323c0:	pop	{pc}		; (ldr pc, [sp], #4)

000323c4 <flatcc_builder_create_string_strn@@Base>:
   323c4:	str	fp, [sp, #-8]!
   323c8:	str	lr, [sp, #4]
   323cc:	add	fp, sp, #4
   323d0:	sub	sp, sp, #16
   323d4:	str	r0, [fp, #-8]
   323d8:	str	r1, [fp, #-12]
   323dc:	str	r2, [fp, #-16]
   323e0:	ldr	r1, [fp, #-16]
   323e4:	ldr	r0, [fp, #-12]
   323e8:	bl	2cba0 <main@@Base+0xdcc>
   323ec:	mov	r3, r0
   323f0:	mov	r2, r3
   323f4:	ldr	r1, [fp, #-12]
   323f8:	ldr	r0, [fp, #-8]
   323fc:	bl	321c4 <flatcc_builder_create_string@@Base>
   32400:	mov	r3, r0
   32404:	mov	r0, r3
   32408:	sub	sp, fp, #4
   3240c:	ldr	fp, [sp]
   32410:	add	sp, sp, #4
   32414:	pop	{pc}		; (ldr pc, [sp], #4)

00032418 <flatcc_builder_end_string@@Base>:
   32418:	str	fp, [sp, #-8]!
   3241c:	str	lr, [sp, #4]
   32420:	add	fp, sp, #4
   32424:	sub	sp, sp, #16
   32428:	str	r0, [fp, #-16]
   3242c:	ldr	r3, [fp, #-16]
   32430:	ldr	r3, [r3, #32]
   32434:	ldrh	r3, [r3, #14]
   32438:	cmp	r3, #6
   3243c:	beq	32460 <flatcc_builder_end_string@@Base+0x48>
   32440:	ldr	r3, [pc, #168]	; 324f0 <flatcc_builder_end_string@@Base+0xd8>
   32444:	add	r3, pc, r3
   32448:	movw	r2, #1732	; 0x6c4
   3244c:	ldr	r1, [pc, #160]	; 324f4 <flatcc_builder_end_string@@Base+0xdc>
   32450:	add	r1, pc, r1
   32454:	ldr	r0, [pc, #156]	; 324f8 <flatcc_builder_end_string@@Base+0xe0>
   32458:	add	r0, pc, r0
   3245c:	bl	145e8 <__assert_fail@plt>
   32460:	ldr	r3, [fp, #-16]
   32464:	ldr	r3, [r3, #32]
   32468:	ldr	r2, [r3, #20]
   3246c:	ldr	r3, [fp, #-16]
   32470:	ldr	r3, [r3, #20]
   32474:	cmp	r2, r3
   32478:	beq	3249c <flatcc_builder_end_string@@Base+0x84>
   3247c:	ldr	r3, [pc, #120]	; 324fc <flatcc_builder_end_string@@Base+0xe4>
   32480:	add	r3, pc, r3
   32484:	movw	r2, #1733	; 0x6c5
   32488:	ldr	r1, [pc, #112]	; 32500 <flatcc_builder_end_string@@Base+0xe8>
   3248c:	add	r1, pc, r1
   32490:	ldr	r0, [pc, #108]	; 32504 <flatcc_builder_end_string@@Base+0xec>
   32494:	add	r0, pc, r0
   32498:	bl	145e8 <__assert_fail@plt>
   3249c:	ldr	r3, [fp, #-16]
   324a0:	ldr	r1, [r3, #16]
   324a4:	ldr	r3, [fp, #-16]
   324a8:	ldr	r3, [r3, #20]
   324ac:	mov	r2, r3
   324b0:	ldr	r0, [fp, #-16]
   324b4:	bl	321c4 <flatcc_builder_create_string@@Base>
   324b8:	str	r0, [fp, #-8]
   324bc:	ldr	r3, [fp, #-8]
   324c0:	cmp	r3, #0
   324c4:	bne	324d0 <flatcc_builder_end_string@@Base+0xb8>
   324c8:	mov	r3, #0
   324cc:	b	324dc <flatcc_builder_end_string@@Base+0xc4>
   324d0:	ldr	r0, [fp, #-16]
   324d4:	bl	2e160 <flatcc_builder_get_user_frame_ptr@@Base+0x220>
   324d8:	ldr	r3, [fp, #-8]
   324dc:	mov	r0, r3
   324e0:	sub	sp, fp, #4
   324e4:	ldr	fp, [sp]
   324e8:	add	sp, sp, #4
   324ec:	pop	{pc}		; (ldr pc, [sp], #4)
   324f0:	andeq	pc, r1, r8, asr r7	; <UNPREDICTABLE>
   324f4:	andeq	lr, r1, r4, lsl #29
   324f8:	andeq	pc, r1, r0, rrx
   324fc:	andeq	pc, r1, ip, lsl r7	; <UNPREDICTABLE>
   32500:	andeq	lr, r1, r8, asr #28
   32504:	strdeq	pc, [r1], -r8

00032508 <flatcc_builder_string_edit@@Base>:
   32508:	push	{fp}		; (str fp, [sp, #-4]!)
   3250c:	add	fp, sp, #0
   32510:	sub	sp, sp, #12
   32514:	str	r0, [fp, #-8]
   32518:	ldr	r3, [fp, #-8]
   3251c:	ldr	r3, [r3, #16]
   32520:	mov	r0, r3
   32524:	add	sp, fp, #0
   32528:	pop	{fp}		; (ldr fp, [sp], #4)
   3252c:	bx	lr

00032530 <flatcc_builder_string_len@@Base>:
   32530:	push	{fp}		; (str fp, [sp, #-4]!)
   32534:	add	fp, sp, #0
   32538:	sub	sp, sp, #12
   3253c:	str	r0, [fp, #-8]
   32540:	ldr	r3, [fp, #-8]
   32544:	ldr	r3, [r3, #32]
   32548:	ldr	r3, [r3, #20]
   3254c:	mov	r0, r3
   32550:	add	sp, fp, #0
   32554:	pop	{fp}		; (ldr fp, [sp], #4)
   32558:	bx	lr

0003255c <flatcc_builder_table_add@@Base>:
   3255c:	str	fp, [sp, #-8]!
   32560:	str	lr, [sp, #4]
   32564:	add	fp, sp, #4
   32568:	sub	sp, sp, #16
   3256c:	str	r0, [fp, #-8]
   32570:	str	r1, [fp, #-12]
   32574:	str	r2, [fp, #-16]
   32578:	strh	r3, [fp, #-18]	; 0xffffffee
   3257c:	ldr	r3, [fp, #-8]
   32580:	ldr	r3, [r3, #32]
   32584:	ldrh	r3, [r3, #14]
   32588:	cmp	r3, #3
   3258c:	beq	325b0 <flatcc_builder_table_add@@Base+0x54>
   32590:	ldr	r3, [pc, #284]	; 326b4 <flatcc_builder_table_add@@Base+0x158>
   32594:	add	r3, pc, r3
   32598:	movw	r2, #1773	; 0x6ed
   3259c:	ldr	r1, [pc, #276]	; 326b8 <flatcc_builder_table_add@@Base+0x15c>
   325a0:	add	r1, pc, r1
   325a4:	ldr	r0, [pc, #272]	; 326bc <flatcc_builder_table_add@@Base+0x160>
   325a8:	add	r0, pc, r0
   325ac:	bl	145e8 <__assert_fail@plt>
   325b0:	ldr	r3, [fp, #-12]
   325b4:	cmp	r3, #0
   325b8:	blt	325cc <flatcc_builder_table_add@@Base+0x70>
   325bc:	ldr	r3, [fp, #-12]
   325c0:	movw	r2, #32764	; 0x7ffc
   325c4:	cmp	r3, r2
   325c8:	ble	325ec <flatcc_builder_table_add@@Base+0x90>
   325cc:	ldr	r3, [pc, #236]	; 326c0 <flatcc_builder_table_add@@Base+0x164>
   325d0:	add	r3, pc, r3
   325d4:	movw	r2, #1774	; 0x6ee
   325d8:	ldr	r1, [pc, #228]	; 326c4 <flatcc_builder_table_add@@Base+0x168>
   325dc:	add	r1, pc, r1
   325e0:	ldr	r0, [pc, #224]	; 326c8 <flatcc_builder_table_add@@Base+0x16c>
   325e4:	add	r0, pc, r0
   325e8:	bl	145e8 <__assert_fail@plt>
   325ec:	ldr	r3, [fp, #-8]
   325f0:	ldrh	r3, [r3, #130]	; 0x82
   325f4:	ldrh	r2, [fp, #-18]	; 0xffffffee
   325f8:	cmp	r2, r3
   325fc:	bls	3260c <flatcc_builder_table_add@@Base+0xb0>
   32600:	ldr	r3, [fp, #-8]
   32604:	ldrh	r2, [fp, #-18]	; 0xffffffee
   32608:	strh	r2, [r3, #130]	; 0x82
   3260c:	ldr	r3, [fp, #-8]
   32610:	ldr	r2, [r3, #4]
   32614:	ldr	r3, [fp, #-12]
   32618:	lsl	r3, r3, #1
   3261c:	add	r3, r2, r3
   32620:	ldrh	r3, [r3]
   32624:	cmp	r3, #0
   32628:	beq	3264c <flatcc_builder_table_add@@Base+0xf0>
   3262c:	ldr	r3, [pc, #152]	; 326cc <flatcc_builder_table_add@@Base+0x170>
   32630:	add	r3, pc, r3
   32634:	movw	r2, #1784	; 0x6f8
   32638:	ldr	r1, [pc, #144]	; 326d0 <flatcc_builder_table_add@@Base+0x174>
   3263c:	add	r1, pc, r1
   32640:	ldr	r0, [pc, #140]	; 326d4 <flatcc_builder_table_add@@Base+0x178>
   32644:	add	r0, pc, r0
   32648:	bl	145e8 <__assert_fail@plt>
   3264c:	ldr	r3, [fp, #-8]
   32650:	ldr	r2, [r3, #12]
   32654:	ldr	r3, [fp, #-12]
   32658:	eor	r2, r2, r3
   3265c:	movw	r3, #31153	; 0x79b1
   32660:	movt	r3, #40503	; 0x9e37
   32664:	mul	r2, r3, r2
   32668:	ldr	r3, [fp, #-16]
   3266c:	eor	r2, r2, r3
   32670:	movw	r3, #31153	; 0x79b1
   32674:	movt	r3, #40503	; 0x9e37
   32678:	mul	r2, r3, r2
   3267c:	ldr	r3, [fp, #-8]
   32680:	str	r2, [r3, #12]
   32684:	ldr	r3, [fp, #-12]
   32688:	uxth	r3, r3
   3268c:	ldrh	r2, [fp, #-18]	; 0xffffffee
   32690:	ldr	r1, [fp, #-16]
   32694:	ldr	r0, [fp, #-8]
   32698:	bl	2d088 <flatcc_builder_default_alloc@@Base+0x488>
   3269c:	mov	r3, r0
   326a0:	mov	r0, r3
   326a4:	sub	sp, fp, #4
   326a8:	ldr	fp, [sp]
   326ac:	add	sp, sp, #4
   326b0:	pop	{pc}		; (ldr pc, [sp], #4)
   326b4:	andeq	pc, r1, r4, lsr #12
   326b8:	andeq	lr, r1, r4, lsr sp
   326bc:	andeq	lr, r1, ip, ror #31
   326c0:	andeq	pc, r1, r8, ror #11
   326c4:	strdeq	lr, [r1], -r8
   326c8:	andeq	pc, r1, ip, asr #1
   326cc:	andeq	pc, r1, r8, lsl #11
   326d0:	muleq	r1, r8, ip
   326d4:	strdeq	lr, [r1], -r0

000326d8 <flatcc_builder_table_edit@@Base>:
   326d8:	str	fp, [sp, #-8]!
   326dc:	str	lr, [sp, #4]
   326e0:	add	fp, sp, #4
   326e4:	sub	sp, sp, #8
   326e8:	str	r0, [fp, #-8]
   326ec:	str	r1, [fp, #-12]
   326f0:	ldr	r3, [fp, #-8]
   326f4:	ldr	r3, [r3, #32]
   326f8:	ldrh	r3, [r3, #14]
   326fc:	cmp	r3, #3
   32700:	beq	32724 <flatcc_builder_table_edit@@Base+0x4c>
   32704:	ldr	r3, [pc, #72]	; 32754 <flatcc_builder_table_edit@@Base+0x7c>
   32708:	add	r3, pc, r3
   3270c:	movw	r2, #1794	; 0x702
   32710:	ldr	r1, [pc, #64]	; 32758 <flatcc_builder_table_edit@@Base+0x80>
   32714:	add	r1, pc, r1
   32718:	ldr	r0, [pc, #60]	; 3275c <flatcc_builder_table_edit@@Base+0x84>
   3271c:	add	r0, pc, r0
   32720:	bl	145e8 <__assert_fail@plt>
   32724:	ldr	r3, [fp, #-8]
   32728:	ldr	r2, [r3, #16]
   3272c:	ldr	r3, [fp, #-8]
   32730:	ldr	r1, [r3, #20]
   32734:	ldr	r3, [fp, #-12]
   32738:	sub	r3, r1, r3
   3273c:	add	r3, r2, r3
   32740:	mov	r0, r3
   32744:	sub	sp, fp, #4
   32748:	ldr	fp, [sp]
   3274c:	add	sp, sp, #4
   32750:	pop	{pc}		; (ldr pc, [sp], #4)
   32754:	andeq	pc, r1, ip, asr #9
   32758:	andeq	lr, r1, r0, asr #23
   3275c:	andeq	lr, r1, r8, ror lr

00032760 <flatcc_builder_table_add_copy@@Base>:
   32760:	str	fp, [sp, #-8]!
   32764:	str	lr, [sp, #4]
   32768:	add	fp, sp, #4
   3276c:	sub	sp, sp, #24
   32770:	str	r0, [fp, #-16]
   32774:	str	r1, [fp, #-20]	; 0xffffffec
   32778:	str	r2, [fp, #-24]	; 0xffffffe8
   3277c:	str	r3, [fp, #-28]	; 0xffffffe4
   32780:	ldrh	r3, [fp, #4]
   32784:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32788:	ldr	r1, [fp, #-20]	; 0xffffffec
   3278c:	ldr	r0, [fp, #-16]
   32790:	bl	3255c <flatcc_builder_table_add@@Base>
   32794:	str	r0, [fp, #-8]
   32798:	ldr	r3, [fp, #-8]
   3279c:	cmp	r3, #0
   327a0:	beq	327b4 <flatcc_builder_table_add_copy@@Base+0x54>
   327a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   327a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   327ac:	ldr	r0, [fp, #-8]
   327b0:	bl	1451c <memcpy@plt>
   327b4:	ldr	r3, [fp, #-8]
   327b8:	mov	r0, r3
   327bc:	sub	sp, fp, #4
   327c0:	ldr	fp, [sp]
   327c4:	add	sp, sp, #4
   327c8:	pop	{pc}		; (ldr pc, [sp], #4)

000327cc <flatcc_builder_table_add_offset@@Base>:
   327cc:	str	fp, [sp, #-8]!
   327d0:	str	lr, [sp, #4]
   327d4:	add	fp, sp, #4
   327d8:	sub	sp, sp, #8
   327dc:	str	r0, [fp, #-8]
   327e0:	str	r1, [fp, #-12]
   327e4:	ldr	r3, [fp, #-8]
   327e8:	ldr	r3, [r3, #32]
   327ec:	ldrh	r3, [r3, #14]
   327f0:	cmp	r3, #3
   327f4:	beq	32818 <flatcc_builder_table_add_offset@@Base+0x4c>
   327f8:	ldr	r3, [pc, #244]	; 328f4 <flatcc_builder_table_add_offset@@Base+0x128>
   327fc:	add	r3, pc, r3
   32800:	movw	r2, #1811	; 0x713
   32804:	ldr	r1, [pc, #236]	; 328f8 <flatcc_builder_table_add_offset@@Base+0x12c>
   32808:	add	r1, pc, r1
   3280c:	ldr	r0, [pc, #232]	; 328fc <flatcc_builder_table_add_offset@@Base+0x130>
   32810:	add	r0, pc, r0
   32814:	bl	145e8 <__assert_fail@plt>
   32818:	ldr	r3, [fp, #-12]
   3281c:	cmp	r3, #0
   32820:	blt	32834 <flatcc_builder_table_add_offset@@Base+0x68>
   32824:	ldr	r3, [fp, #-12]
   32828:	movw	r2, #32764	; 0x7ffc
   3282c:	cmp	r3, r2
   32830:	ble	32854 <flatcc_builder_table_add_offset@@Base+0x88>
   32834:	ldr	r3, [pc, #196]	; 32900 <flatcc_builder_table_add_offset@@Base+0x134>
   32838:	add	r3, pc, r3
   3283c:	movw	r2, #1812	; 0x714
   32840:	ldr	r1, [pc, #188]	; 32904 <flatcc_builder_table_add_offset@@Base+0x138>
   32844:	add	r1, pc, r1
   32848:	ldr	r0, [pc, #184]	; 32908 <flatcc_builder_table_add_offset@@Base+0x13c>
   3284c:	add	r0, pc, r0
   32850:	bl	145e8 <__assert_fail@plt>
   32854:	ldr	r3, [fp, #-8]
   32858:	ldr	r2, [r3, #4]
   3285c:	ldr	r3, [fp, #-12]
   32860:	lsl	r3, r3, #1
   32864:	add	r3, r2, r3
   32868:	ldrh	r3, [r3]
   3286c:	cmp	r3, #0
   32870:	beq	32894 <flatcc_builder_table_add_offset@@Base+0xc8>
   32874:	ldr	r3, [pc, #144]	; 3290c <flatcc_builder_table_add_offset@@Base+0x140>
   32878:	add	r3, pc, r3
   3287c:	movw	r2, #1819	; 0x71b
   32880:	ldr	r1, [pc, #136]	; 32910 <flatcc_builder_table_add_offset@@Base+0x144>
   32884:	add	r1, pc, r1
   32888:	ldr	r0, [pc, #132]	; 32914 <flatcc_builder_table_add_offset@@Base+0x148>
   3288c:	add	r0, pc, r0
   32890:	bl	145e8 <__assert_fail@plt>
   32894:	ldr	r3, [fp, #-8]
   32898:	ldr	r2, [r3, #12]
   3289c:	ldr	r3, [fp, #-12]
   328a0:	eor	r2, r2, r3
   328a4:	movw	r3, #31153	; 0x79b1
   328a8:	movt	r3, #40503	; 0x9e37
   328ac:	mul	r3, r3, r2
   328b0:	eor	r2, r3, #4
   328b4:	movw	r3, #31153	; 0x79b1
   328b8:	movt	r3, #40503	; 0x9e37
   328bc:	mul	r2, r3, r2
   328c0:	ldr	r3, [fp, #-8]
   328c4:	str	r2, [r3, #12]
   328c8:	ldr	r3, [fp, #-12]
   328cc:	uxth	r3, r3
   328d0:	mov	r1, r3
   328d4:	ldr	r0, [fp, #-8]
   328d8:	bl	2d1ac <flatcc_builder_default_alloc@@Base+0x5ac>
   328dc:	mov	r3, r0
   328e0:	mov	r0, r3
   328e4:	sub	sp, fp, #4
   328e8:	ldr	fp, [sp]
   328ec:	add	sp, sp, #4
   328f0:	pop	{pc}		; (ldr pc, [sp], #4)
   328f4:	strdeq	pc, [r1], -r4
   328f8:	andeq	lr, r1, ip, asr #21
   328fc:	andeq	lr, r1, r4, lsl #27
   32900:			; <UNDEFINED> instruction: 0x0001f3b8
   32904:	muleq	r1, r0, sl
   32908:	andeq	lr, r1, r4, ror #28
   3290c:	andeq	pc, r1, r8, ror r3	; <UNPREDICTABLE>
   32910:	andeq	lr, r1, r0, asr sl
   32914:	andeq	lr, r1, r8, lsr #21

00032918 <flatcc_builder_push_buffer_alignment@@Base>:
   32918:	push	{fp}		; (str fp, [sp, #-4]!)
   3291c:	add	fp, sp, #0
   32920:	sub	sp, sp, #20
   32924:	str	r0, [fp, #-16]
   32928:	ldr	r3, [fp, #-16]
   3292c:	ldrh	r3, [r3, #128]	; 0x80
   32930:	strh	r3, [fp, #-6]
   32934:	ldr	r3, [fp, #-16]
   32938:	mov	r2, #4
   3293c:	strh	r2, [r3, #128]	; 0x80
   32940:	ldrh	r3, [fp, #-6]
   32944:	mov	r0, r3
   32948:	add	sp, fp, #0
   3294c:	pop	{fp}		; (ldr fp, [sp], #4)
   32950:	bx	lr

00032954 <flatcc_builder_pop_buffer_alignment@@Base>:
   32954:	str	fp, [sp, #-8]!
   32958:	str	lr, [sp, #4]
   3295c:	add	fp, sp, #4
   32960:	sub	sp, sp, #8
   32964:	str	r0, [fp, #-8]
   32968:	mov	r3, r1
   3296c:	strh	r3, [fp, #-10]
   32970:	ldrh	r3, [fp, #-10]
   32974:	mov	r1, r3
   32978:	ldr	r0, [fp, #-8]
   3297c:	bl	2dbb8 <flatcc_builder_clear@@Base+0xc4>
   32980:	nop	{0}
   32984:	sub	sp, fp, #4
   32988:	ldr	fp, [sp]
   3298c:	add	sp, sp, #4
   32990:	pop	{pc}		; (ldr pc, [sp], #4)

00032994 <flatcc_builder_get_buffer_alignment@@Base>:
   32994:	push	{fp}		; (str fp, [sp, #-4]!)
   32998:	add	fp, sp, #0
   3299c:	sub	sp, sp, #12
   329a0:	str	r0, [fp, #-8]
   329a4:	ldr	r3, [fp, #-8]
   329a8:	ldrh	r3, [r3, #128]	; 0x80
   329ac:	mov	r0, r3
   329b0:	add	sp, fp, #0
   329b4:	pop	{fp}		; (ldr fp, [sp], #4)
   329b8:	bx	lr

000329bc <flatcc_builder_set_vtable_clustering@@Base>:
   329bc:	push	{fp}		; (str fp, [sp, #-4]!)
   329c0:	add	fp, sp, #0
   329c4:	sub	sp, sp, #12
   329c8:	str	r0, [fp, #-8]
   329cc:	str	r1, [fp, #-12]
   329d0:	ldr	r3, [fp, #-12]
   329d4:	cmp	r3, #0
   329d8:	moveq	r3, #1
   329dc:	movne	r3, #0
   329e0:	uxtb	r3, r3
   329e4:	mov	r2, r3
   329e8:	ldr	r3, [fp, #-8]
   329ec:	str	r2, [r3, #180]	; 0xb4
   329f0:	nop	{0}
   329f4:	add	sp, fp, #0
   329f8:	pop	{fp}		; (ldr fp, [sp], #4)
   329fc:	bx	lr

00032a00 <flatcc_builder_set_block_align@@Base>:
   32a00:	push	{fp}		; (str fp, [sp, #-4]!)
   32a04:	add	fp, sp, #0
   32a08:	sub	sp, sp, #12
   32a0c:	str	r0, [fp, #-8]
   32a10:	mov	r3, r1
   32a14:	strh	r3, [fp, #-10]
   32a18:	ldr	r3, [fp, #-8]
   32a1c:	ldrh	r2, [fp, #-10]
   32a20:	strh	r2, [r3, #132]	; 0x84
   32a24:	nop	{0}
   32a28:	add	sp, fp, #0
   32a2c:	pop	{fp}		; (ldr fp, [sp], #4)
   32a30:	bx	lr

00032a34 <flatcc_builder_get_level@@Base>:
   32a34:	push	{fp}		; (str fp, [sp, #-4]!)
   32a38:	add	fp, sp, #0
   32a3c:	sub	sp, sp, #12
   32a40:	str	r0, [fp, #-8]
   32a44:	ldr	r3, [fp, #-8]
   32a48:	ldr	r3, [r3, #156]	; 0x9c
   32a4c:	mov	r0, r3
   32a50:	add	sp, fp, #0
   32a54:	pop	{fp}		; (ldr fp, [sp], #4)
   32a58:	bx	lr

00032a5c <flatcc_builder_set_max_level@@Base>:
   32a5c:	push	{fp}		; (str fp, [sp, #-4]!)
   32a60:	add	fp, sp, #0
   32a64:	sub	sp, sp, #12
   32a68:	str	r0, [fp, #-8]
   32a6c:	str	r1, [fp, #-12]
   32a70:	ldr	r3, [fp, #-8]
   32a74:	ldr	r2, [fp, #-12]
   32a78:	str	r2, [r3, #176]	; 0xb0
   32a7c:	ldr	r3, [fp, #-8]
   32a80:	ldr	r2, [r3, #160]	; 0xa0
   32a84:	ldr	r3, [fp, #-8]
   32a88:	ldr	r3, [r3, #176]	; 0xb0
   32a8c:	cmp	r2, r3
   32a90:	bge	32aa4 <flatcc_builder_set_max_level@@Base+0x48>
   32a94:	ldr	r3, [fp, #-8]
   32a98:	ldr	r2, [r3, #176]	; 0xb0
   32a9c:	ldr	r3, [fp, #-8]
   32aa0:	str	r2, [r3, #160]	; 0xa0
   32aa4:	nop	{0}
   32aa8:	add	sp, fp, #0
   32aac:	pop	{fp}		; (ldr fp, [sp], #4)
   32ab0:	bx	lr

00032ab4 <flatcc_builder_get_buffer_size@@Base>:
   32ab4:	push	{fp}		; (str fp, [sp, #-4]!)
   32ab8:	add	fp, sp, #0
   32abc:	sub	sp, sp, #12
   32ac0:	str	r0, [fp, #-8]
   32ac4:	ldr	r3, [fp, #-8]
   32ac8:	ldr	r2, [r3, #140]	; 0x8c
   32acc:	ldr	r3, [fp, #-8]
   32ad0:	ldr	r3, [r3, #136]	; 0x88
   32ad4:	sub	r3, r2, r3
   32ad8:	mov	r0, r3
   32adc:	add	sp, fp, #0
   32ae0:	pop	{fp}		; (ldr fp, [sp], #4)
   32ae4:	bx	lr

00032ae8 <flatcc_builder_get_buffer_start@@Base>:
   32ae8:	push	{fp}		; (str fp, [sp, #-4]!)
   32aec:	add	fp, sp, #0
   32af0:	sub	sp, sp, #12
   32af4:	str	r0, [fp, #-8]
   32af8:	ldr	r3, [fp, #-8]
   32afc:	ldr	r3, [r3, #136]	; 0x88
   32b00:	mov	r0, r3
   32b04:	add	sp, fp, #0
   32b08:	pop	{fp}		; (ldr fp, [sp], #4)
   32b0c:	bx	lr

00032b10 <flatcc_builder_get_buffer_end@@Base>:
   32b10:	push	{fp}		; (str fp, [sp, #-4]!)
   32b14:	add	fp, sp, #0
   32b18:	sub	sp, sp, #12
   32b1c:	str	r0, [fp, #-8]
   32b20:	ldr	r3, [fp, #-8]
   32b24:	ldr	r3, [r3, #140]	; 0x8c
   32b28:	mov	r0, r3
   32b2c:	add	sp, fp, #0
   32b30:	pop	{fp}		; (ldr fp, [sp], #4)
   32b34:	bx	lr

00032b38 <flatcc_builder_set_vtable_cache_limit@@Base>:
   32b38:	push	{fp}		; (str fp, [sp, #-4]!)
   32b3c:	add	fp, sp, #0
   32b40:	sub	sp, sp, #12
   32b44:	str	r0, [fp, #-8]
   32b48:	str	r1, [fp, #-12]
   32b4c:	ldr	r3, [fp, #-8]
   32b50:	ldr	r2, [fp, #-12]
   32b54:	str	r2, [r3, #172]	; 0xac
   32b58:	nop	{0}
   32b5c:	add	sp, fp, #0
   32b60:	pop	{fp}		; (ldr fp, [sp], #4)
   32b64:	bx	lr

00032b68 <flatcc_builder_set_identifier@@Base>:
   32b68:	push	{fp}		; (str fp, [sp, #-4]!)
   32b6c:	add	fp, sp, #0
   32b70:	sub	sp, sp, #12
   32b74:	str	r0, [fp, #-8]
   32b78:	str	r1, [fp, #-12]
   32b7c:	ldr	r1, [pc, #60]	; 32bc0 <flatcc_builder_set_identifier@@Base+0x58>
   32b80:	add	r1, pc, r1
   32b84:	ldr	r3, [fp, #-8]
   32b88:	add	r2, r3, #168	; 0xa8
   32b8c:	ldr	r3, [fp, #-12]
   32b90:	cmp	r3, #0
   32b94:	beq	32ba0 <flatcc_builder_set_identifier@@Base+0x38>
   32b98:	ldr	r3, [fp, #-12]
   32b9c:	b	32ba8 <flatcc_builder_set_identifier@@Base+0x40>
   32ba0:	ldr	r3, [pc, #28]	; 32bc4 <flatcc_builder_set_identifier@@Base+0x5c>
   32ba4:	ldr	r3, [r1, r3]
   32ba8:	ldr	r3, [r3]
   32bac:	str	r3, [r2]
   32bb0:	nop	{0}
   32bb4:	add	sp, fp, #0
   32bb8:	pop	{fp}		; (ldr fp, [sp], #4)
   32bbc:	bx	lr
   32bc0:	andeq	r2, r3, r8, ror r4
   32bc4:	andeq	r0, r0, r4, rrx

00032bc8 <flatcc_builder_get_type@@Base>:
   32bc8:	push	{fp}		; (str fp, [sp, #-4]!)
   32bcc:	add	fp, sp, #0
   32bd0:	sub	sp, sp, #12
   32bd4:	str	r0, [fp, #-8]
   32bd8:	ldr	r3, [fp, #-8]
   32bdc:	ldr	r3, [r3, #32]
   32be0:	cmp	r3, #0
   32be4:	beq	32bf8 <flatcc_builder_get_type@@Base+0x30>
   32be8:	ldr	r3, [fp, #-8]
   32bec:	ldr	r3, [r3, #32]
   32bf0:	ldrh	r3, [r3, #14]
   32bf4:	b	32bfc <flatcc_builder_get_type@@Base+0x34>
   32bf8:	mov	r3, #0
   32bfc:	mov	r0, r3
   32c00:	add	sp, fp, #0
   32c04:	pop	{fp}		; (ldr fp, [sp], #4)
   32c08:	bx	lr

00032c0c <flatcc_builder_get_type_at@@Base>:
   32c0c:	push	{fp}		; (str fp, [sp, #-4]!)
   32c10:	add	fp, sp, #0
   32c14:	sub	sp, sp, #12
   32c18:	str	r0, [fp, #-8]
   32c1c:	str	r1, [fp, #-12]
   32c20:	ldr	r3, [fp, #-12]
   32c24:	cmp	r3, #0
   32c28:	ble	32c40 <flatcc_builder_get_type_at@@Base+0x34>
   32c2c:	ldr	r3, [fp, #-8]
   32c30:	ldr	r3, [r3, #156]	; 0x9c
   32c34:	ldr	r2, [fp, #-12]
   32c38:	cmp	r2, r3
   32c3c:	ble	32c48 <flatcc_builder_get_type_at@@Base+0x3c>
   32c40:	mov	r3, #0
   32c44:	b	32c7c <flatcc_builder_get_type_at@@Base+0x70>
   32c48:	ldr	r3, [fp, #-8]
   32c4c:	ldr	r2, [r3, #32]
   32c50:	ldr	r3, [fp, #-8]
   32c54:	ldr	r3, [r3, #156]	; 0x9c
   32c58:	ldr	r1, [fp, #-12]
   32c5c:	sub	r3, r1, r3
   32c60:	mov	r1, r3
   32c64:	mov	r3, r1
   32c68:	lsl	r3, r3, #3
   32c6c:	add	r3, r3, r1
   32c70:	lsl	r3, r3, #2
   32c74:	add	r3, r2, r3
   32c78:	ldrh	r3, [r3, #14]
   32c7c:	mov	r0, r3
   32c80:	add	sp, fp, #0
   32c84:	pop	{fp}		; (ldr fp, [sp], #4)
   32c88:	bx	lr

00032c8c <flatcc_builder_get_direct_buffer@@Base>:
   32c8c:	str	fp, [sp, #-8]!
   32c90:	str	lr, [sp, #4]
   32c94:	add	fp, sp, #4
   32c98:	sub	sp, sp, #8
   32c9c:	str	r0, [fp, #-8]
   32ca0:	str	r1, [fp, #-12]
   32ca4:	ldr	r3, [fp, #-8]
   32ca8:	ldr	r3, [r3, #184]	; 0xb8
   32cac:	cmp	r3, #0
   32cb0:	beq	32cd0 <flatcc_builder_get_direct_buffer@@Base+0x44>
   32cb4:	ldr	r3, [fp, #-8]
   32cb8:	add	r3, r3, #188	; 0xbc
   32cbc:	ldr	r1, [fp, #-12]
   32cc0:	mov	r0, r3
   32cc4:	bl	2cb20 <main@@Base+0xd4c>
   32cc8:	mov	r3, r0
   32ccc:	b	32cec <flatcc_builder_get_direct_buffer@@Base+0x60>
   32cd0:	ldr	r3, [fp, #-12]
   32cd4:	cmp	r3, #0
   32cd8:	beq	32ce8 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   32cdc:	ldr	r3, [fp, #-12]
   32ce0:	mov	r2, #0
   32ce4:	str	r2, [r3]
   32ce8:	mov	r3, #0
   32cec:	mov	r0, r3
   32cf0:	sub	sp, fp, #4
   32cf4:	ldr	fp, [sp]
   32cf8:	add	sp, sp, #4
   32cfc:	pop	{pc}		; (ldr pc, [sp], #4)

00032d00 <flatcc_builder_copy_buffer@@Base>:
   32d00:	str	fp, [sp, #-8]!
   32d04:	str	lr, [sp, #4]
   32d08:	add	fp, sp, #4
   32d0c:	sub	sp, sp, #16
   32d10:	str	r0, [fp, #-8]
   32d14:	str	r1, [fp, #-12]
   32d18:	str	r2, [fp, #-16]
   32d1c:	ldr	r3, [fp, #-8]
   32d20:	ldr	r3, [r3, #184]	; 0xb8
   32d24:	cmp	r3, #0
   32d28:	bne	32d34 <flatcc_builder_copy_buffer@@Base+0x34>
   32d2c:	mov	r3, #0
   32d30:	b	32d80 <flatcc_builder_copy_buffer@@Base+0x80>
   32d34:	ldr	r3, [fp, #-8]
   32d38:	add	r3, r3, #188	; 0xbc
   32d3c:	ldr	r2, [fp, #-16]
   32d40:	ldr	r1, [fp, #-12]
   32d44:	mov	r0, r3
   32d48:	bl	33b54 <flatcc_emitter_copy_buffer@@Base>
   32d4c:	str	r0, [fp, #-12]
   32d50:	ldr	r3, [fp, #-12]
   32d54:	cmp	r3, #0
   32d58:	bne	32d7c <flatcc_builder_copy_buffer@@Base+0x7c>
   32d5c:	ldr	r3, [pc, #48]	; 32d94 <flatcc_builder_copy_buffer@@Base+0x94>
   32d60:	add	r3, pc, r3
   32d64:	movw	r2, #1926	; 0x786
   32d68:	ldr	r1, [pc, #40]	; 32d98 <flatcc_builder_copy_buffer@@Base+0x98>
   32d6c:	add	r1, pc, r1
   32d70:	ldr	r0, [pc, #36]	; 32d9c <flatcc_builder_copy_buffer@@Base+0x9c>
   32d74:	add	r0, pc, r0
   32d78:	bl	145e8 <__assert_fail@plt>
   32d7c:	ldr	r3, [fp, #-12]
   32d80:	mov	r0, r3
   32d84:	sub	sp, fp, #4
   32d88:	ldr	fp, [sp]
   32d8c:	add	sp, sp, #4
   32d90:	pop	{pc}		; (ldr pc, [sp], #4)
   32d94:			; <UNDEFINED> instruction: 0x0001eeb0
   32d98:	andeq	lr, r1, r8, ror #10
   32d9c:	andeq	lr, r1, r0, lsl #19

00032da0 <flatcc_builder_finalize_buffer@@Base>:
   32da0:	str	fp, [sp, #-8]!
   32da4:	str	lr, [sp, #4]
   32da8:	add	fp, sp, #4
   32dac:	sub	sp, sp, #16
   32db0:	str	r0, [fp, #-16]
   32db4:	str	r1, [fp, #-20]	; 0xffffffec
   32db8:	ldr	r0, [fp, #-16]
   32dbc:	bl	32ab4 <flatcc_builder_get_buffer_size@@Base>
   32dc0:	str	r0, [fp, #-8]
   32dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   32dc8:	cmp	r3, #0
   32dcc:	beq	32ddc <flatcc_builder_finalize_buffer@@Base+0x3c>
   32dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32dd4:	ldr	r2, [fp, #-8]
   32dd8:	str	r2, [r3]
   32ddc:	ldr	r0, [fp, #-8]
   32de0:	bl	1454c <malloc@plt>
   32de4:	mov	r3, r0
   32de8:	str	r3, [fp, #-12]
   32dec:	ldr	r3, [fp, #-12]
   32df0:	cmp	r3, #0
   32df4:	bne	32e18 <flatcc_builder_finalize_buffer@@Base+0x78>
   32df8:	ldr	r3, [pc, #148]	; 32e94 <flatcc_builder_finalize_buffer@@Base+0xf4>
   32dfc:	add	r3, pc, r3
   32e00:	movw	r2, #1944	; 0x798
   32e04:	ldr	r1, [pc, #140]	; 32e98 <flatcc_builder_finalize_buffer@@Base+0xf8>
   32e08:	add	r1, pc, r1
   32e0c:	ldr	r0, [pc, #136]	; 32e9c <flatcc_builder_finalize_buffer@@Base+0xfc>
   32e10:	add	r0, pc, r0
   32e14:	bl	145e8 <__assert_fail@plt>
   32e18:	ldr	r2, [fp, #-8]
   32e1c:	ldr	r1, [fp, #-12]
   32e20:	ldr	r0, [fp, #-16]
   32e24:	bl	32d00 <flatcc_builder_copy_buffer@@Base>
   32e28:	mov	r3, r0
   32e2c:	cmp	r3, #0
   32e30:	bne	32e54 <flatcc_builder_finalize_buffer@@Base+0xb4>
   32e34:	ldr	r3, [pc, #100]	; 32ea0 <flatcc_builder_finalize_buffer@@Base+0x100>
   32e38:	add	r3, pc, r3
   32e3c:	movw	r2, #1948	; 0x79c
   32e40:	ldr	r1, [pc, #92]	; 32ea4 <flatcc_builder_finalize_buffer@@Base+0x104>
   32e44:	add	r1, pc, r1
   32e48:	ldr	r0, [pc, #88]	; 32ea8 <flatcc_builder_finalize_buffer@@Base+0x108>
   32e4c:	add	r0, pc, r0
   32e50:	bl	145e8 <__assert_fail@plt>
   32e54:	nop	{0}
   32e58:	ldr	r3, [fp, #-12]
   32e5c:	cmp	r3, #0
   32e60:	bne	32e7c <flatcc_builder_finalize_buffer@@Base+0xdc>
   32e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e68:	cmp	r3, #0
   32e6c:	beq	32e7c <flatcc_builder_finalize_buffer@@Base+0xdc>
   32e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e74:	mov	r2, #0
   32e78:	str	r2, [r3]
   32e7c:	ldr	r3, [fp, #-12]
   32e80:	mov	r0, r3
   32e84:	sub	sp, fp, #4
   32e88:	ldr	fp, [sp]
   32e8c:	add	sp, sp, #4
   32e90:	pop	{pc}		; (ldr pc, [sp], #4)
   32e94:	andeq	lr, r1, r0, lsr lr
   32e98:	andeq	lr, r1, ip, asr #9
   32e9c:	andeq	lr, r1, r4, lsr #10
   32ea0:	strdeq	lr, [r1], -r4
   32ea4:	muleq	r1, r0, r4
   32ea8:	andeq	lr, r1, r8, ror #9

00032eac <flatcc_builder_finalize_aligned_buffer@@Base>:
   32eac:	str	fp, [sp, #-8]!
   32eb0:	str	lr, [sp, #4]
   32eb4:	add	fp, sp, #4
   32eb8:	sub	sp, sp, #24
   32ebc:	str	r0, [fp, #-24]	; 0xffffffe8
   32ec0:	str	r1, [fp, #-28]	; 0xffffffe4
   32ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ec8:	bl	32ab4 <flatcc_builder_get_buffer_size@@Base>
   32ecc:	str	r0, [fp, #-12]
   32ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32ed4:	cmp	r3, #0
   32ed8:	beq	32ee8 <flatcc_builder_finalize_aligned_buffer@@Base+0x3c>
   32edc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32ee0:	ldr	r2, [fp, #-12]
   32ee4:	str	r2, [r3]
   32ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32eec:	bl	32994 <flatcc_builder_get_buffer_alignment@@Base>
   32ef0:	mov	r3, r0
   32ef4:	str	r3, [fp, #-16]
   32ef8:	ldr	r2, [fp, #-12]
   32efc:	ldr	r3, [fp, #-16]
   32f00:	add	r3, r2, r3
   32f04:	sub	r2, r3, #1
   32f08:	ldr	r3, [fp, #-16]
   32f0c:	rsb	r3, r3, #0
   32f10:	and	r3, r3, r2
   32f14:	str	r3, [fp, #-12]
   32f18:	ldr	r1, [fp, #-12]
   32f1c:	ldr	r0, [fp, #-16]
   32f20:	bl	2ca20 <main@@Base+0xc4c>
   32f24:	str	r0, [fp, #-8]
   32f28:	ldr	r3, [fp, #-8]
   32f2c:	cmp	r3, #0
   32f30:	beq	32f64 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   32f34:	ldr	r2, [fp, #-12]
   32f38:	ldr	r1, [fp, #-8]
   32f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f40:	bl	32d00 <flatcc_builder_copy_buffer@@Base>
   32f44:	mov	r3, r0
   32f48:	cmp	r3, #0
   32f4c:	bne	32f6c <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   32f50:	ldr	r0, [fp, #-8]
   32f54:	bl	14510 <free@plt>
   32f58:	mov	r3, #0
   32f5c:	str	r3, [fp, #-8]
   32f60:	b	32f70 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   32f64:	nop	{0}
   32f68:	b	32f70 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   32f6c:	nop	{0}
   32f70:	ldr	r3, [fp, #-8]
   32f74:	cmp	r3, #0
   32f78:	bne	32f94 <flatcc_builder_finalize_aligned_buffer@@Base+0xe8>
   32f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32f80:	cmp	r3, #0
   32f84:	beq	32f94 <flatcc_builder_finalize_aligned_buffer@@Base+0xe8>
   32f88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32f8c:	mov	r2, #0
   32f90:	str	r2, [r3]
   32f94:	ldr	r3, [fp, #-8]
   32f98:	mov	r0, r3
   32f9c:	sub	sp, fp, #4
   32fa0:	ldr	fp, [sp]
   32fa4:	add	sp, sp, #4
   32fa8:	pop	{pc}		; (ldr pc, [sp], #4)

00032fac <flatcc_builder_aligned_alloc@@Base>:
   32fac:	str	fp, [sp, #-8]!
   32fb0:	str	lr, [sp, #4]
   32fb4:	add	fp, sp, #4
   32fb8:	sub	sp, sp, #8
   32fbc:	str	r0, [fp, #-8]
   32fc0:	str	r1, [fp, #-12]
   32fc4:	ldr	r1, [fp, #-12]
   32fc8:	ldr	r0, [fp, #-8]
   32fcc:	bl	2ca20 <main@@Base+0xc4c>
   32fd0:	mov	r3, r0
   32fd4:	mov	r0, r3
   32fd8:	sub	sp, fp, #4
   32fdc:	ldr	fp, [sp]
   32fe0:	add	sp, sp, #4
   32fe4:	pop	{pc}		; (ldr pc, [sp], #4)

00032fe8 <flatcc_builder_aligned_free@@Base>:
   32fe8:	str	fp, [sp, #-8]!
   32fec:	str	lr, [sp, #4]
   32ff0:	add	fp, sp, #4
   32ff4:	sub	sp, sp, #8
   32ff8:	str	r0, [fp, #-8]
   32ffc:	ldr	r0, [fp, #-8]
   33000:	bl	14510 <free@plt>
   33004:	nop	{0}
   33008:	sub	sp, fp, #4
   3300c:	ldr	fp, [sp]
   33010:	add	sp, sp, #4
   33014:	pop	{pc}		; (ldr pc, [sp], #4)

00033018 <flatcc_builder_get_emit_context@@Base>:
   33018:	push	{fp}		; (str fp, [sp, #-4]!)
   3301c:	add	fp, sp, #0
   33020:	sub	sp, sp, #12
   33024:	str	r0, [fp, #-8]
   33028:	ldr	r3, [fp, #-8]
   3302c:	ldr	r3, [r3, #36]	; 0x24
   33030:	mov	r0, r3
   33034:	add	sp, fp, #0
   33038:	pop	{fp}		; (ldr fp, [sp], #4)
   3303c:	bx	lr
   33040:	str	fp, [sp, #-8]!
   33044:	str	lr, [sp, #4]
   33048:	add	fp, sp, #4
   3304c:	sub	sp, sp, #16
   33050:	str	r0, [fp, #-16]
   33054:	mov	r3, #0
   33058:	str	r3, [fp, #-8]
   3305c:	ldr	r3, [fp, #-16]
   33060:	ldr	r3, [r3]
   33064:	cmp	r3, #0
   33068:	beq	330c0 <flatcc_builder_get_emit_context@@Base+0xa8>
   3306c:	ldr	r3, [fp, #-16]
   33070:	ldr	r3, [r3]
   33074:	ldr	r2, [r3, #2948]	; 0xb84
   33078:	ldr	r3, [fp, #-16]
   3307c:	ldr	r3, [r3, #4]
   33080:	cmp	r2, r3
   33084:	beq	330c0 <flatcc_builder_get_emit_context@@Base+0xa8>
   33088:	ldr	r3, [fp, #-16]
   3308c:	ldr	r3, [r3]
   33090:	ldr	r2, [r3, #2952]	; 0xb88
   33094:	ldr	r3, [fp, #-16]
   33098:	ldr	r3, [r3]
   3309c:	ldr	r3, [r3, #2948]	; 0xb84
   330a0:	sub	r2, r2, #2944	; 0xb80
   330a4:	str	r2, [r3, #2952]	; 0xb88
   330a8:	ldr	r3, [fp, #-16]
   330ac:	ldr	r3, [r3]
   330b0:	ldr	r2, [r3, #2948]	; 0xb84
   330b4:	ldr	r3, [fp, #-16]
   330b8:	str	r2, [r3]
   330bc:	b	331e8 <flatcc_builder_get_emit_context@@Base+0x1d0>
   330c0:	movw	r0, #2956	; 0xb8c
   330c4:	bl	1454c <malloc@plt>
   330c8:	mov	r3, r0
   330cc:	str	r3, [fp, #-8]
   330d0:	ldr	r3, [fp, #-8]
   330d4:	cmp	r3, #0
   330d8:	bne	330e4 <flatcc_builder_get_emit_context@@Base+0xcc>
   330dc:	mvn	r3, #0
   330e0:	b	3322c <flatcc_builder_get_emit_context@@Base+0x214>
   330e4:	ldr	r3, [fp, #-16]
   330e8:	ldr	r3, [r3, #28]
   330ec:	add	r2, r3, #2944	; 0xb80
   330f0:	ldr	r3, [fp, #-16]
   330f4:	str	r2, [r3, #28]
   330f8:	ldr	r3, [fp, #-16]
   330fc:	ldr	r3, [r3]
   33100:	cmp	r3, #0
   33104:	beq	33158 <flatcc_builder_get_emit_context@@Base+0x140>
   33108:	ldr	r3, [fp, #-16]
   3310c:	ldr	r2, [r3, #4]
   33110:	ldr	r3, [fp, #-8]
   33114:	str	r2, [r3, #2948]	; 0xb84
   33118:	ldr	r3, [fp, #-16]
   3311c:	ldr	r2, [r3]
   33120:	ldr	r3, [fp, #-8]
   33124:	str	r2, [r3, #2944]	; 0xb80
   33128:	ldr	r3, [fp, #-16]
   3312c:	ldr	r3, [r3]
   33130:	ldr	r2, [fp, #-8]
   33134:	str	r2, [r3, #2948]	; 0xb84
   33138:	ldr	r3, [fp, #-16]
   3313c:	ldr	r3, [r3, #4]
   33140:	ldr	r2, [fp, #-8]
   33144:	str	r2, [r3, #2944]	; 0xb80
   33148:	ldr	r3, [fp, #-16]
   3314c:	ldr	r2, [fp, #-8]
   33150:	str	r2, [r3]
   33154:	b	331e8 <flatcc_builder_get_emit_context@@Base+0x1d0>
   33158:	ldr	r3, [fp, #-16]
   3315c:	ldr	r2, [fp, #-8]
   33160:	str	r2, [r3]
   33164:	ldr	r3, [fp, #-16]
   33168:	ldr	r2, [fp, #-8]
   3316c:	str	r2, [r3, #4]
   33170:	ldr	r3, [fp, #-8]
   33174:	ldr	r2, [fp, #-8]
   33178:	str	r2, [r3, #2944]	; 0xb80
   3317c:	ldr	r3, [fp, #-8]
   33180:	ldr	r2, [fp, #-8]
   33184:	str	r2, [r3, #2948]	; 0xb84
   33188:	ldr	r3, [fp, #-16]
   3318c:	ldr	r3, [r3]
   33190:	add	r2, r3, #1472	; 0x5c0
   33194:	ldr	r3, [fp, #-16]
   33198:	str	r2, [r3, #8]
   3319c:	ldr	r3, [fp, #-16]
   331a0:	ldr	r2, [r3, #8]
   331a4:	ldr	r3, [fp, #-16]
   331a8:	str	r2, [r3, #16]
   331ac:	ldr	r3, [fp, #-16]
   331b0:	mov	r2, #1472	; 0x5c0
   331b4:	str	r2, [r3, #12]
   331b8:	ldr	r3, [fp, #-16]
   331bc:	ldr	r3, [r3, #12]
   331c0:	rsb	r2, r3, #2944	; 0xb80
   331c4:	ldr	r3, [fp, #-16]
   331c8:	str	r2, [r3, #20]
   331cc:	ldr	r3, [fp, #-16]
   331d0:	ldr	r3, [r3, #12]
   331d4:	rsb	r2, r3, #0
   331d8:	ldr	r3, [fp, #-8]
   331dc:	str	r2, [r3, #2952]	; 0xb88
   331e0:	mov	r3, #0
   331e4:	b	3322c <flatcc_builder_get_emit_context@@Base+0x214>
   331e8:	ldr	r3, [fp, #-16]
   331ec:	ldr	r3, [r3]
   331f0:	add	r2, r3, #2944	; 0xb80
   331f4:	ldr	r3, [fp, #-16]
   331f8:	str	r2, [r3, #8]
   331fc:	ldr	r3, [fp, #-16]
   33200:	mov	r2, #2944	; 0xb80
   33204:	str	r2, [r3, #12]
   33208:	ldr	r3, [fp, #-16]
   3320c:	ldr	r3, [r3]
   33210:	ldr	r3, [r3, #2944]	; 0xb80
   33214:	ldr	r2, [r3, #2952]	; 0xb88
   33218:	ldr	r3, [fp, #-16]
   3321c:	ldr	r3, [r3]
   33220:	sub	r2, r2, #2944	; 0xb80
   33224:	str	r2, [r3, #2952]	; 0xb88
   33228:	mov	r3, #0
   3322c:	mov	r0, r3
   33230:	sub	sp, fp, #4
   33234:	ldr	fp, [sp]
   33238:	add	sp, sp, #4
   3323c:	pop	{pc}		; (ldr pc, [sp], #4)
   33240:	str	fp, [sp, #-8]!
   33244:	str	lr, [sp, #4]
   33248:	add	fp, sp, #4
   3324c:	sub	sp, sp, #16
   33250:	str	r0, [fp, #-16]
   33254:	mov	r3, #0
   33258:	str	r3, [fp, #-8]
   3325c:	ldr	r3, [fp, #-16]
   33260:	ldr	r3, [r3, #4]
   33264:	cmp	r3, #0
   33268:	beq	332a0 <flatcc_builder_get_emit_context@@Base+0x288>
   3326c:	ldr	r3, [fp, #-16]
   33270:	ldr	r3, [r3, #4]
   33274:	ldr	r2, [r3, #2944]	; 0xb80
   33278:	ldr	r3, [fp, #-16]
   3327c:	ldr	r3, [r3]
   33280:	cmp	r2, r3
   33284:	beq	332a0 <flatcc_builder_get_emit_context@@Base+0x288>
   33288:	ldr	r3, [fp, #-16]
   3328c:	ldr	r3, [r3, #4]
   33290:	ldr	r2, [r3, #2944]	; 0xb80
   33294:	ldr	r3, [fp, #-16]
   33298:	str	r2, [r3, #4]
   3329c:	b	333c8 <flatcc_builder_get_emit_context@@Base+0x3b0>
   332a0:	movw	r0, #2956	; 0xb8c
   332a4:	bl	1454c <malloc@plt>
   332a8:	mov	r3, r0
   332ac:	str	r3, [fp, #-8]
   332b0:	ldr	r3, [fp, #-8]
   332b4:	cmp	r3, #0
   332b8:	bne	332c4 <flatcc_builder_get_emit_context@@Base+0x2ac>
   332bc:	mvn	r3, #0
   332c0:	b	3340c <flatcc_builder_get_emit_context@@Base+0x3f4>
   332c4:	ldr	r3, [fp, #-16]
   332c8:	ldr	r3, [r3, #28]
   332cc:	add	r2, r3, #2944	; 0xb80
   332d0:	ldr	r3, [fp, #-16]
   332d4:	str	r2, [r3, #28]
   332d8:	ldr	r3, [fp, #-16]
   332dc:	ldr	r3, [r3, #4]
   332e0:	cmp	r3, #0
   332e4:	beq	33338 <flatcc_builder_get_emit_context@@Base+0x320>
   332e8:	ldr	r3, [fp, #-16]
   332ec:	ldr	r2, [r3, #4]
   332f0:	ldr	r3, [fp, #-8]
   332f4:	str	r2, [r3, #2948]	; 0xb84
   332f8:	ldr	r3, [fp, #-16]
   332fc:	ldr	r2, [r3]
   33300:	ldr	r3, [fp, #-8]
   33304:	str	r2, [r3, #2944]	; 0xb80
   33308:	ldr	r3, [fp, #-16]
   3330c:	ldr	r3, [r3]
   33310:	ldr	r2, [fp, #-8]
   33314:	str	r2, [r3, #2948]	; 0xb84
   33318:	ldr	r3, [fp, #-16]
   3331c:	ldr	r3, [r3, #4]
   33320:	ldr	r2, [fp, #-8]
   33324:	str	r2, [r3, #2944]	; 0xb80
   33328:	ldr	r3, [fp, #-16]
   3332c:	ldr	r2, [fp, #-8]
   33330:	str	r2, [r3, #4]
   33334:	b	333c8 <flatcc_builder_get_emit_context@@Base+0x3b0>
   33338:	ldr	r3, [fp, #-16]
   3333c:	ldr	r2, [fp, #-8]
   33340:	str	r2, [r3]
   33344:	ldr	r3, [fp, #-16]
   33348:	ldr	r2, [fp, #-8]
   3334c:	str	r2, [r3, #4]
   33350:	ldr	r3, [fp, #-8]
   33354:	ldr	r2, [fp, #-8]
   33358:	str	r2, [r3, #2944]	; 0xb80
   3335c:	ldr	r3, [fp, #-8]
   33360:	ldr	r2, [fp, #-8]
   33364:	str	r2, [r3, #2948]	; 0xb84
   33368:	ldr	r3, [fp, #-16]
   3336c:	ldr	r3, [r3]
   33370:	add	r2, r3, #1472	; 0x5c0
   33374:	ldr	r3, [fp, #-16]
   33378:	str	r2, [r3, #8]
   3337c:	ldr	r3, [fp, #-16]
   33380:	ldr	r2, [r3, #8]
   33384:	ldr	r3, [fp, #-16]
   33388:	str	r2, [r3, #16]
   3338c:	ldr	r3, [fp, #-16]
   33390:	mov	r2, #1472	; 0x5c0
   33394:	str	r2, [r3, #12]
   33398:	ldr	r3, [fp, #-16]
   3339c:	ldr	r3, [r3, #12]
   333a0:	rsb	r2, r3, #2944	; 0xb80
   333a4:	ldr	r3, [fp, #-16]
   333a8:	str	r2, [r3, #20]
   333ac:	ldr	r3, [fp, #-16]
   333b0:	ldr	r3, [r3, #12]
   333b4:	rsb	r2, r3, #0
   333b8:	ldr	r3, [fp, #-8]
   333bc:	str	r2, [r3, #2952]	; 0xb88
   333c0:	mov	r3, #0
   333c4:	b	3340c <flatcc_builder_get_emit_context@@Base+0x3f4>
   333c8:	ldr	r3, [fp, #-16]
   333cc:	ldr	r3, [r3, #4]
   333d0:	mov	r2, r3
   333d4:	ldr	r3, [fp, #-16]
   333d8:	str	r2, [r3, #16]
   333dc:	ldr	r3, [fp, #-16]
   333e0:	mov	r2, #2944	; 0xb80
   333e4:	str	r2, [r3, #20]
   333e8:	ldr	r3, [fp, #-16]
   333ec:	ldr	r3, [r3, #4]
   333f0:	ldr	r3, [r3, #2948]	; 0xb84
   333f4:	ldr	r2, [r3, #2952]	; 0xb88
   333f8:	ldr	r3, [fp, #-16]
   333fc:	ldr	r3, [r3, #4]
   33400:	add	r2, r2, #2944	; 0xb80
   33404:	str	r2, [r3, #2952]	; 0xb88
   33408:	mov	r3, #0
   3340c:	mov	r0, r3
   33410:	sub	sp, fp, #4
   33414:	ldr	fp, [sp]
   33418:	add	sp, sp, #4
   3341c:	pop	{pc}		; (ldr pc, [sp], #4)
   33420:	str	fp, [sp, #-8]!
   33424:	str	lr, [sp, #4]
   33428:	add	fp, sp, #4
   3342c:	sub	sp, sp, #24
   33430:	str	r0, [fp, #-16]
   33434:	str	r1, [fp, #-20]	; 0xffffffec
   33438:	str	r2, [fp, #-24]	; 0xffffffe8
   3343c:	ldr	r2, [fp, #-20]	; 0xffffffec
   33440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33444:	add	r3, r2, r3
   33448:	str	r3, [fp, #-20]	; 0xffffffec
   3344c:	b	33510 <flatcc_builder_get_emit_context@@Base+0x4f8>
   33450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33454:	str	r3, [fp, #-8]
   33458:	ldr	r3, [fp, #-16]
   3345c:	ldr	r3, [r3, #12]
   33460:	ldr	r2, [fp, #-8]
   33464:	cmp	r2, r3
   33468:	bls	334a0 <flatcc_builder_get_emit_context@@Base+0x488>
   3346c:	ldr	r3, [fp, #-16]
   33470:	ldr	r3, [r3, #12]
   33474:	str	r3, [fp, #-8]
   33478:	ldr	r3, [fp, #-8]
   3347c:	cmp	r3, #0
   33480:	bne	334a0 <flatcc_builder_get_emit_context@@Base+0x488>
   33484:	ldr	r0, [fp, #-16]
   33488:	bl	33040 <flatcc_builder_get_emit_context@@Base+0x28>
   3348c:	mov	r3, r0
   33490:	cmp	r3, #0
   33494:	beq	33510 <flatcc_builder_get_emit_context@@Base+0x4f8>
   33498:	mvn	r3, #0
   3349c:	b	33520 <flatcc_builder_get_emit_context@@Base+0x508>
   334a0:	ldr	r3, [fp, #-16]
   334a4:	ldr	r2, [r3, #8]
   334a8:	ldr	r3, [fp, #-8]
   334ac:	rsb	r3, r3, #0
   334b0:	add	r2, r2, r3
   334b4:	ldr	r3, [fp, #-16]
   334b8:	str	r2, [r3, #8]
   334bc:	ldr	r3, [fp, #-16]
   334c0:	ldr	r2, [r3, #12]
   334c4:	ldr	r3, [fp, #-8]
   334c8:	sub	r2, r2, r3
   334cc:	ldr	r3, [fp, #-16]
   334d0:	str	r2, [r3, #12]
   334d4:	ldr	r3, [fp, #-8]
   334d8:	rsb	r3, r3, #0
   334dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   334e0:	add	r3, r2, r3
   334e4:	str	r3, [fp, #-20]	; 0xffffffec
   334e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   334ec:	ldr	r3, [fp, #-8]
   334f0:	sub	r3, r2, r3
   334f4:	str	r3, [fp, #-24]	; 0xffffffe8
   334f8:	ldr	r3, [fp, #-16]
   334fc:	ldr	r3, [r3, #8]
   33500:	ldr	r2, [fp, #-8]
   33504:	ldr	r1, [fp, #-20]	; 0xffffffec
   33508:	mov	r0, r3
   3350c:	bl	1451c <memcpy@plt>
   33510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33514:	cmp	r3, #0
   33518:	bne	33450 <flatcc_builder_get_emit_context@@Base+0x438>
   3351c:	mov	r3, #0
   33520:	mov	r0, r3
   33524:	sub	sp, fp, #4
   33528:	ldr	fp, [sp]
   3352c:	add	sp, sp, #4
   33530:	pop	{pc}		; (ldr pc, [sp], #4)
   33534:	str	fp, [sp, #-8]!
   33538:	str	lr, [sp, #4]
   3353c:	add	fp, sp, #4
   33540:	sub	sp, sp, #24
   33544:	str	r0, [fp, #-16]
   33548:	str	r1, [fp, #-20]	; 0xffffffec
   3354c:	str	r2, [fp, #-24]	; 0xffffffe8
   33550:	b	3360c <flatcc_builder_get_emit_context@@Base+0x5f4>
   33554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33558:	str	r3, [fp, #-8]
   3355c:	ldr	r3, [fp, #-16]
   33560:	ldr	r3, [r3, #20]
   33564:	ldr	r2, [fp, #-8]
   33568:	cmp	r2, r3
   3356c:	bls	335a4 <flatcc_builder_get_emit_context@@Base+0x58c>
   33570:	ldr	r3, [fp, #-16]
   33574:	ldr	r3, [r3, #20]
   33578:	str	r3, [fp, #-8]
   3357c:	ldr	r3, [fp, #-8]
   33580:	cmp	r3, #0
   33584:	bne	335a4 <flatcc_builder_get_emit_context@@Base+0x58c>
   33588:	ldr	r0, [fp, #-16]
   3358c:	bl	33240 <flatcc_builder_get_emit_context@@Base+0x228>
   33590:	mov	r3, r0
   33594:	cmp	r3, #0
   33598:	beq	3360c <flatcc_builder_get_emit_context@@Base+0x5f4>
   3359c:	mvn	r3, #0
   335a0:	b	3361c <flatcc_builder_get_emit_context@@Base+0x604>
   335a4:	ldr	r3, [fp, #-16]
   335a8:	ldr	r3, [r3, #16]
   335ac:	ldr	r2, [fp, #-8]
   335b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   335b4:	mov	r0, r3
   335b8:	bl	1451c <memcpy@plt>
   335bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   335c0:	ldr	r3, [fp, #-8]
   335c4:	sub	r3, r2, r3
   335c8:	str	r3, [fp, #-24]	; 0xffffffe8
   335cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   335d0:	ldr	r3, [fp, #-8]
   335d4:	add	r3, r2, r3
   335d8:	str	r3, [fp, #-20]	; 0xffffffec
   335dc:	ldr	r3, [fp, #-16]
   335e0:	ldr	r2, [r3, #16]
   335e4:	ldr	r3, [fp, #-8]
   335e8:	add	r2, r2, r3
   335ec:	ldr	r3, [fp, #-16]
   335f0:	str	r2, [r3, #16]
   335f4:	ldr	r3, [fp, #-16]
   335f8:	ldr	r2, [r3, #20]
   335fc:	ldr	r3, [fp, #-8]
   33600:	sub	r2, r2, r3
   33604:	ldr	r3, [fp, #-16]
   33608:	str	r2, [r3, #20]
   3360c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33610:	cmp	r3, #0
   33614:	bne	33554 <flatcc_builder_get_emit_context@@Base+0x53c>
   33618:	mov	r3, #0
   3361c:	mov	r0, r3
   33620:	sub	sp, fp, #4
   33624:	ldr	fp, [sp]
   33628:	add	sp, sp, #4
   3362c:	pop	{pc}		; (ldr pc, [sp], #4)

00033630 <flatcc_emitter_recycle_page@@Base>:
   33630:	push	{fp}		; (str fp, [sp, #-4]!)
   33634:	add	fp, sp, #0
   33638:	sub	sp, sp, #12
   3363c:	str	r0, [fp, #-8]
   33640:	str	r1, [fp, #-12]
   33644:	ldr	r3, [fp, #-8]
   33648:	ldr	r3, [r3]
   3364c:	ldr	r2, [fp, #-12]
   33650:	cmp	r2, r3
   33654:	beq	3366c <flatcc_emitter_recycle_page@@Base+0x3c>
   33658:	ldr	r3, [fp, #-8]
   3365c:	ldr	r3, [r3, #4]
   33660:	ldr	r2, [fp, #-12]
   33664:	cmp	r2, r3
   33668:	bne	33674 <flatcc_emitter_recycle_page@@Base+0x44>
   3366c:	mvn	r3, #0
   33670:	b	336e4 <flatcc_emitter_recycle_page@@Base+0xb4>
   33674:	ldr	r3, [fp, #-12]
   33678:	ldr	r3, [r3, #2944]	; 0xb80
   3367c:	ldr	r2, [fp, #-12]
   33680:	ldr	r2, [r2, #2948]	; 0xb84
   33684:	str	r2, [r3, #2948]	; 0xb84
   33688:	ldr	r3, [fp, #-12]
   3368c:	ldr	r3, [r3, #2948]	; 0xb84
   33690:	ldr	r2, [fp, #-12]
   33694:	ldr	r2, [r2, #2944]	; 0xb80
   33698:	str	r2, [r3, #2944]	; 0xb80
   3369c:	ldr	r3, [fp, #-8]
   336a0:	ldr	r3, [r3]
   336a4:	ldr	r2, [r3, #2948]	; 0xb84
   336a8:	ldr	r3, [fp, #-12]
   336ac:	str	r2, [r3, #2948]	; 0xb84
   336b0:	ldr	r3, [fp, #-8]
   336b4:	ldr	r2, [r3]
   336b8:	ldr	r3, [fp, #-12]
   336bc:	str	r2, [r3, #2944]	; 0xb80
   336c0:	ldr	r3, [fp, #-12]
   336c4:	ldr	r3, [r3, #2948]	; 0xb84
   336c8:	ldr	r2, [fp, #-12]
   336cc:	str	r2, [r3, #2944]	; 0xb80
   336d0:	ldr	r3, [fp, #-12]
   336d4:	ldr	r3, [r3, #2944]	; 0xb80
   336d8:	ldr	r2, [fp, #-12]
   336dc:	str	r2, [r3, #2948]	; 0xb84
   336e0:	mov	r3, #0
   336e4:	mov	r0, r3
   336e8:	add	sp, fp, #0
   336ec:	pop	{fp}		; (ldr fp, [sp], #4)
   336f0:	bx	lr

000336f4 <flatcc_emitter_reset@@Base>:
   336f4:	str	fp, [sp, #-8]!
   336f8:	str	lr, [sp, #4]
   336fc:	add	fp, sp, #4
   33700:	sub	sp, sp, #16
   33704:	str	r0, [fp, #-16]
   33708:	ldr	r3, [fp, #-16]
   3370c:	ldr	r3, [r3]
   33710:	str	r3, [fp, #-8]
   33714:	ldr	r3, [fp, #-16]
   33718:	ldr	r3, [r3]
   3371c:	cmp	r3, #0
   33720:	beq	3387c <flatcc_emitter_reset@@Base+0x188>
   33724:	ldr	r3, [fp, #-16]
   33728:	ldr	r2, [r3]
   3372c:	ldr	r3, [fp, #-16]
   33730:	str	r2, [r3, #4]
   33734:	ldr	r3, [fp, #-16]
   33738:	ldr	r3, [r3]
   3373c:	add	r2, r3, #1472	; 0x5c0
   33740:	ldr	r3, [fp, #-16]
   33744:	str	r2, [r3, #8]
   33748:	ldr	r3, [fp, #-16]
   3374c:	ldr	r2, [r3, #8]
   33750:	ldr	r3, [fp, #-16]
   33754:	str	r2, [r3, #16]
   33758:	ldr	r3, [fp, #-16]
   3375c:	mov	r2, #1472	; 0x5c0
   33760:	str	r2, [r3, #12]
   33764:	ldr	r3, [fp, #-16]
   33768:	mov	r2, #1472	; 0x5c0
   3376c:	str	r2, [r3, #20]
   33770:	ldr	r3, [fp, #-16]
   33774:	ldr	r3, [r3, #12]
   33778:	mov	r2, r3
   3377c:	ldr	r3, [fp, #-16]
   33780:	ldr	r3, [r3]
   33784:	rsb	r2, r2, #0
   33788:	str	r2, [r3, #2952]	; 0xb88
   3378c:	ldr	r3, [fp, #-16]
   33790:	ldr	r3, [r3, #32]
   33794:	cmp	r3, #0
   33798:	bne	337ac <flatcc_emitter_reset@@Base+0xb8>
   3379c:	ldr	r3, [fp, #-16]
   337a0:	ldr	r2, [r3, #24]
   337a4:	ldr	r3, [fp, #-16]
   337a8:	str	r2, [r3, #32]
   337ac:	ldr	r3, [fp, #-16]
   337b0:	ldr	r2, [r3, #32]
   337b4:	mov	r3, r2
   337b8:	lsl	r3, r3, #1
   337bc:	add	r3, r3, r2
   337c0:	lsr	r2, r3, #2
   337c4:	ldr	r3, [fp, #-16]
   337c8:	ldr	r3, [r3, #24]
   337cc:	lsr	r3, r3, #2
   337d0:	add	r2, r2, r3
   337d4:	ldr	r3, [fp, #-16]
   337d8:	str	r2, [r3, #32]
   337dc:	ldr	r3, [fp, #-16]
   337e0:	mov	r2, #0
   337e4:	str	r2, [r3, #24]
   337e8:	b	33840 <flatcc_emitter_reset@@Base+0x14c>
   337ec:	ldr	r3, [fp, #-16]
   337f0:	ldr	r3, [r3, #4]
   337f4:	ldr	r3, [r3, #2944]	; 0xb80
   337f8:	str	r3, [fp, #-8]
   337fc:	ldr	r3, [fp, #-16]
   33800:	ldr	r3, [r3, #4]
   33804:	ldr	r2, [fp, #-8]
   33808:	ldr	r2, [r2, #2944]	; 0xb80
   3380c:	str	r2, [r3, #2944]	; 0xb80
   33810:	ldr	r3, [fp, #-8]
   33814:	ldr	r3, [r3, #2944]	; 0xb80
   33818:	ldr	r2, [fp, #-16]
   3381c:	ldr	r2, [r2, #4]
   33820:	str	r2, [r3, #2948]	; 0xb84
   33824:	ldr	r0, [fp, #-8]
   33828:	bl	14510 <free@plt>
   3382c:	ldr	r3, [fp, #-16]
   33830:	ldr	r3, [r3, #28]
   33834:	sub	r2, r3, #2944	; 0xb80
   33838:	ldr	r3, [fp, #-16]
   3383c:	str	r2, [r3, #28]
   33840:	ldr	r3, [fp, #-16]
   33844:	ldr	r3, [r3, #32]
   33848:	lsl	r2, r3, #1
   3384c:	ldr	r3, [fp, #-16]
   33850:	ldr	r3, [r3, #28]
   33854:	cmp	r2, r3
   33858:	bcs	33880 <flatcc_emitter_reset@@Base+0x18c>
   3385c:	ldr	r3, [fp, #-16]
   33860:	ldr	r3, [r3, #4]
   33864:	ldr	r2, [r3, #2944]	; 0xb80
   33868:	ldr	r3, [fp, #-16]
   3386c:	ldr	r3, [r3]
   33870:	cmp	r2, r3
   33874:	bne	337ec <flatcc_emitter_reset@@Base+0xf8>
   33878:	b	33880 <flatcc_emitter_reset@@Base+0x18c>
   3387c:	nop	{0}
   33880:	sub	sp, fp, #4
   33884:	ldr	fp, [sp]
   33888:	add	sp, sp, #4
   3388c:	pop	{pc}		; (ldr pc, [sp], #4)

00033890 <flatcc_emitter_clear@@Base>:
   33890:	str	fp, [sp, #-8]!
   33894:	str	lr, [sp, #4]
   33898:	add	fp, sp, #4
   3389c:	sub	sp, sp, #16
   338a0:	str	r0, [fp, #-16]
   338a4:	ldr	r3, [fp, #-16]
   338a8:	ldr	r3, [r3]
   338ac:	str	r3, [fp, #-8]
   338b0:	ldr	r3, [fp, #-8]
   338b4:	cmp	r3, #0
   338b8:	beq	33918 <flatcc_emitter_clear@@Base+0x88>
   338bc:	ldr	r3, [fp, #-8]
   338c0:	ldr	r3, [r3, #2948]	; 0xb84
   338c4:	mov	r2, #0
   338c8:	str	r2, [r3, #2944]	; 0xb80
   338cc:	b	338ec <flatcc_emitter_clear@@Base+0x5c>
   338d0:	ldr	r3, [fp, #-8]
   338d4:	ldr	r3, [r3, #2944]	; 0xb80
   338d8:	str	r3, [fp, #-8]
   338dc:	ldr	r3, [fp, #-8]
   338e0:	ldr	r3, [r3, #2948]	; 0xb84
   338e4:	mov	r0, r3
   338e8:	bl	14510 <free@plt>
   338ec:	ldr	r3, [fp, #-8]
   338f0:	ldr	r3, [r3, #2944]	; 0xb80
   338f4:	cmp	r3, #0
   338f8:	bne	338d0 <flatcc_emitter_clear@@Base+0x40>
   338fc:	ldr	r0, [fp, #-8]
   33900:	bl	14510 <free@plt>
   33904:	mov	r2, #36	; 0x24
   33908:	mov	r1, #0
   3390c:	ldr	r0, [fp, #-16]
   33910:	bl	14594 <memset@plt>
   33914:	b	3391c <flatcc_emitter_clear@@Base+0x8c>
   33918:	nop	{0}
   3391c:	sub	sp, fp, #4
   33920:	ldr	fp, [sp]
   33924:	add	sp, sp, #4
   33928:	pop	{pc}		; (ldr pc, [sp], #4)

0003392c <flatcc_emitter@@Base>:
   3392c:	str	fp, [sp, #-8]!
   33930:	str	lr, [sp, #4]
   33934:	add	fp, sp, #4
   33938:	sub	sp, sp, #24
   3393c:	str	r0, [fp, #-16]
   33940:	str	r1, [fp, #-20]	; 0xffffffec
   33944:	str	r2, [fp, #-24]	; 0xffffffe8
   33948:	str	r3, [fp, #-28]	; 0xffffffe4
   3394c:	ldr	r3, [fp, #-16]
   33950:	str	r3, [fp, #-12]
   33954:	ldr	r3, [fp, #-12]
   33958:	ldr	r2, [r3, #24]
   3395c:	ldr	r3, [fp, #4]
   33960:	add	r2, r2, r3
   33964:	ldr	r3, [fp, #-12]
   33968:	str	r2, [r3, #24]
   3396c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33970:	cmp	r3, #0
   33974:	bge	33a3c <flatcc_emitter@@Base+0x110>
   33978:	ldr	r3, [fp, #-12]
   3397c:	ldr	r3, [r3, #12]
   33980:	ldr	r2, [fp, #4]
   33984:	cmp	r2, r3
   33988:	bhi	339d0 <flatcc_emitter@@Base+0xa4>
   3398c:	ldr	r3, [fp, #-12]
   33990:	ldr	r2, [r3, #8]
   33994:	ldr	r3, [fp, #4]
   33998:	rsb	r3, r3, #0
   3399c:	add	r2, r2, r3
   339a0:	ldr	r3, [fp, #-12]
   339a4:	str	r2, [r3, #8]
   339a8:	ldr	r3, [fp, #-12]
   339ac:	ldr	r2, [r3, #12]
   339b0:	ldr	r3, [fp, #4]
   339b4:	sub	r2, r2, r3
   339b8:	ldr	r3, [fp, #-12]
   339bc:	str	r2, [r3, #12]
   339c0:	ldr	r3, [fp, #-12]
   339c4:	ldr	r3, [r3, #8]
   339c8:	str	r3, [fp, #-8]
   339cc:	b	33ae8 <flatcc_emitter@@Base+0x1bc>
   339d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   339d4:	lsl	r3, r3, #3
   339d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   339dc:	add	r3, r2, r3
   339e0:	str	r3, [fp, #-20]	; 0xffffffec
   339e4:	b	33a24 <flatcc_emitter@@Base+0xf8>
   339e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   339ec:	sub	r3, r3, #8
   339f0:	str	r3, [fp, #-20]	; 0xffffffec
   339f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   339f8:	ldr	r1, [r3]
   339fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   33a00:	ldr	r3, [r3, #4]
   33a04:	mov	r2, r3
   33a08:	ldr	r0, [fp, #-12]
   33a0c:	bl	33420 <flatcc_builder_get_emit_context@@Base+0x408>
   33a10:	mov	r3, r0
   33a14:	cmp	r3, #0
   33a18:	beq	33a24 <flatcc_emitter@@Base+0xf8>
   33a1c:	mvn	r3, #0
   33a20:	b	33b40 <flatcc_emitter@@Base+0x214>
   33a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33a28:	sub	r2, r3, #1
   33a2c:	str	r2, [fp, #-24]	; 0xffffffe8
   33a30:	cmp	r3, #0
   33a34:	bne	339e8 <flatcc_emitter@@Base+0xbc>
   33a38:	b	33ae0 <flatcc_emitter@@Base+0x1b4>
   33a3c:	ldr	r3, [fp, #-12]
   33a40:	ldr	r3, [r3, #20]
   33a44:	ldr	r2, [fp, #4]
   33a48:	cmp	r2, r3
   33a4c:	bhi	33acc <flatcc_emitter@@Base+0x1a0>
   33a50:	ldr	r3, [fp, #-12]
   33a54:	ldr	r3, [r3, #16]
   33a58:	str	r3, [fp, #-8]
   33a5c:	ldr	r3, [fp, #-12]
   33a60:	ldr	r2, [r3, #16]
   33a64:	ldr	r3, [fp, #4]
   33a68:	add	r2, r2, r3
   33a6c:	ldr	r3, [fp, #-12]
   33a70:	str	r2, [r3, #16]
   33a74:	ldr	r3, [fp, #-12]
   33a78:	ldr	r2, [r3, #20]
   33a7c:	ldr	r3, [fp, #4]
   33a80:	sub	r2, r2, r3
   33a84:	ldr	r3, [fp, #-12]
   33a88:	str	r2, [r3, #20]
   33a8c:	b	33ae8 <flatcc_emitter@@Base+0x1bc>
   33a90:	ldr	r3, [fp, #-20]	; 0xffffffec
   33a94:	ldr	r1, [r3]
   33a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   33a9c:	ldr	r3, [r3, #4]
   33aa0:	mov	r2, r3
   33aa4:	ldr	r0, [fp, #-12]
   33aa8:	bl	33534 <flatcc_builder_get_emit_context@@Base+0x51c>
   33aac:	mov	r3, r0
   33ab0:	cmp	r3, #0
   33ab4:	beq	33ac0 <flatcc_emitter@@Base+0x194>
   33ab8:	mvn	r3, #0
   33abc:	b	33b40 <flatcc_emitter@@Base+0x214>
   33ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ac4:	add	r3, r3, #8
   33ac8:	str	r3, [fp, #-20]	; 0xffffffec
   33acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33ad0:	sub	r2, r3, #1
   33ad4:	str	r2, [fp, #-24]	; 0xffffffe8
   33ad8:	cmp	r3, #0
   33adc:	bne	33a90 <flatcc_emitter@@Base+0x164>
   33ae0:	mov	r3, #0
   33ae4:	b	33b40 <flatcc_emitter@@Base+0x214>
   33ae8:	b	33b28 <flatcc_emitter@@Base+0x1fc>
   33aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   33af0:	ldr	r1, [r3]
   33af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33af8:	ldr	r3, [r3, #4]
   33afc:	mov	r2, r3
   33b00:	ldr	r0, [fp, #-8]
   33b04:	bl	1451c <memcpy@plt>
   33b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   33b0c:	ldr	r3, [r3, #4]
   33b10:	ldr	r2, [fp, #-8]
   33b14:	add	r3, r2, r3
   33b18:	str	r3, [fp, #-8]
   33b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33b20:	add	r3, r3, #8
   33b24:	str	r3, [fp, #-20]	; 0xffffffec
   33b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33b2c:	sub	r2, r3, #1
   33b30:	str	r2, [fp, #-24]	; 0xffffffe8
   33b34:	cmp	r3, #0
   33b38:	bne	33aec <flatcc_emitter@@Base+0x1c0>
   33b3c:	mov	r3, #0
   33b40:	mov	r0, r3
   33b44:	sub	sp, fp, #4
   33b48:	ldr	fp, [sp]
   33b4c:	add	sp, sp, #4
   33b50:	pop	{pc}		; (ldr pc, [sp], #4)

00033b54 <flatcc_emitter_copy_buffer@@Base>:
   33b54:	str	fp, [sp, #-8]!
   33b58:	str	lr, [sp, #4]
   33b5c:	add	fp, sp, #4
   33b60:	sub	sp, sp, #24
   33b64:	str	r0, [fp, #-16]
   33b68:	str	r1, [fp, #-20]	; 0xffffffec
   33b6c:	str	r2, [fp, #-24]	; 0xffffffe8
   33b70:	ldr	r3, [fp, #-16]
   33b74:	ldr	r3, [r3, #24]
   33b78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33b7c:	cmp	r2, r3
   33b80:	bcs	33b8c <flatcc_emitter_copy_buffer@@Base+0x38>
   33b84:	mov	r3, #0
   33b88:	b	33c8c <flatcc_emitter_copy_buffer@@Base+0x138>
   33b8c:	ldr	r3, [fp, #-16]
   33b90:	ldr	r3, [r3]
   33b94:	cmp	r3, #0
   33b98:	bne	33ba4 <flatcc_emitter_copy_buffer@@Base+0x50>
   33b9c:	mov	r3, #0
   33ba0:	b	33c8c <flatcc_emitter_copy_buffer@@Base+0x138>
   33ba4:	ldr	r3, [fp, #-16]
   33ba8:	ldr	r2, [r3]
   33bac:	ldr	r3, [fp, #-16]
   33bb0:	ldr	r3, [r3, #4]
   33bb4:	cmp	r2, r3
   33bb8:	bne	33be0 <flatcc_emitter_copy_buffer@@Base+0x8c>
   33bbc:	ldr	r3, [fp, #-16]
   33bc0:	ldr	r1, [r3, #8]
   33bc4:	ldr	r3, [fp, #-16]
   33bc8:	ldr	r3, [r3, #24]
   33bcc:	mov	r2, r3
   33bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   33bd4:	bl	1451c <memcpy@plt>
   33bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   33bdc:	b	33c8c <flatcc_emitter_copy_buffer@@Base+0x138>
   33be0:	ldr	r3, [fp, #-16]
   33be4:	ldr	r3, [r3, #12]
   33be8:	rsb	r3, r3, #2944	; 0xb80
   33bec:	str	r3, [fp, #-12]
   33bf0:	ldr	r3, [fp, #-16]
   33bf4:	ldr	r3, [r3, #8]
   33bf8:	ldr	r2, [fp, #-12]
   33bfc:	mov	r1, r3
   33c00:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c04:	bl	1451c <memcpy@plt>
   33c08:	ldr	r2, [fp, #-20]	; 0xffffffec
   33c0c:	ldr	r3, [fp, #-12]
   33c10:	add	r3, r2, r3
   33c14:	str	r3, [fp, #-20]	; 0xffffffec
   33c18:	ldr	r3, [fp, #-16]
   33c1c:	ldr	r3, [r3]
   33c20:	ldr	r3, [r3, #2944]	; 0xb80
   33c24:	str	r3, [fp, #-8]
   33c28:	b	33c58 <flatcc_emitter_copy_buffer@@Base+0x104>
   33c2c:	ldr	r3, [fp, #-8]
   33c30:	mov	r2, #2944	; 0xb80
   33c34:	mov	r1, r3
   33c38:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c3c:	bl	1451c <memcpy@plt>
   33c40:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c44:	add	r3, r3, #2944	; 0xb80
   33c48:	str	r3, [fp, #-20]	; 0xffffffec
   33c4c:	ldr	r3, [fp, #-8]
   33c50:	ldr	r3, [r3, #2944]	; 0xb80
   33c54:	str	r3, [fp, #-8]
   33c58:	ldr	r3, [fp, #-16]
   33c5c:	ldr	r3, [r3, #4]
   33c60:	ldr	r2, [fp, #-8]
   33c64:	cmp	r2, r3
   33c68:	bne	33c2c <flatcc_emitter_copy_buffer@@Base+0xd8>
   33c6c:	ldr	r1, [fp, #-8]
   33c70:	ldr	r3, [fp, #-16]
   33c74:	ldr	r3, [r3, #20]
   33c78:	rsb	r3, r3, #2944	; 0xb80
   33c7c:	mov	r2, r3
   33c80:	ldr	r0, [fp, #-20]	; 0xffffffec
   33c84:	bl	1451c <memcpy@plt>
   33c88:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c8c:	mov	r0, r3
   33c90:	sub	sp, fp, #4
   33c94:	ldr	fp, [sp]
   33c98:	add	sp, sp, #4
   33c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   33ca0:	push	{fp}		; (str fp, [sp, #-4]!)
   33ca4:	add	fp, sp, #0
   33ca8:	sub	sp, sp, #12
   33cac:	str	r0, [fp, #-8]
   33cb0:	ldr	r3, [fp, #-8]
   33cb4:	mov	r0, r3
   33cb8:	add	sp, fp, #0
   33cbc:	pop	{fp}		; (ldr fp, [sp], #4)
   33cc0:	bx	lr
   33cc4:	str	fp, [sp, #-8]!
   33cc8:	str	lr, [sp, #4]
   33ccc:	add	fp, sp, #4
   33cd0:	sub	sp, sp, #8
   33cd4:	str	r0, [fp, #-8]
   33cd8:	ldr	r3, [fp, #-8]
   33cdc:	ldr	r3, [r3]
   33ce0:	mov	r0, r3
   33ce4:	bl	33ca0 <flatcc_emitter_copy_buffer@@Base+0x14c>
   33ce8:	mov	r3, r0
   33cec:	mov	r0, r3
   33cf0:	sub	sp, fp, #4
   33cf4:	ldr	fp, [sp]
   33cf8:	add	sp, sp, #4
   33cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   33d00:	push	{fp}		; (str fp, [sp, #-4]!)
   33d04:	add	fp, sp, #0
   33d08:	sub	sp, sp, #12
   33d0c:	mov	r3, r0
   33d10:	strh	r3, [fp, #-6]
   33d14:	ldrh	r3, [fp, #-6]
   33d18:	mov	r0, r3
   33d1c:	add	sp, fp, #0
   33d20:	pop	{fp}		; (ldr fp, [sp], #4)
   33d24:	bx	lr
   33d28:	str	fp, [sp, #-8]!
   33d2c:	str	lr, [sp, #4]
   33d30:	add	fp, sp, #4
   33d34:	sub	sp, sp, #8
   33d38:	str	r0, [fp, #-8]
   33d3c:	ldr	r3, [fp, #-8]
   33d40:	ldrh	r3, [r3]
   33d44:	mov	r0, r3
   33d48:	bl	33d00 <flatcc_emitter_copy_buffer@@Base+0x1ac>
   33d4c:	mov	r3, r0
   33d50:	mov	r0, r3
   33d54:	sub	sp, fp, #4
   33d58:	ldr	fp, [sp]
   33d5c:	add	sp, sp, #4
   33d60:	pop	{pc}		; (ldr pc, [sp], #4)
   33d64:	push	{fp}		; (str fp, [sp, #-4]!)
   33d68:	add	fp, sp, #0
   33d6c:	sub	sp, sp, #12
   33d70:	str	r0, [fp, #-8]
   33d74:	ldr	r3, [fp, #-8]
   33d78:	mov	r0, r3
   33d7c:	add	sp, fp, #0
   33d80:	pop	{fp}		; (ldr fp, [sp], #4)
   33d84:	bx	lr
   33d88:	push	{fp}		; (str fp, [sp, #-4]!)
   33d8c:	add	fp, sp, #0
   33d90:	sub	sp, sp, #12
   33d94:	str	r0, [fp, #-8]
   33d98:	ldr	r3, [fp, #-8]
   33d9c:	mov	r0, r3
   33da0:	add	sp, fp, #0
   33da4:	pop	{fp}		; (ldr fp, [sp], #4)
   33da8:	bx	lr
   33dac:	str	fp, [sp, #-8]!
   33db0:	str	lr, [sp, #4]
   33db4:	add	fp, sp, #4
   33db8:	sub	sp, sp, #8
   33dbc:	str	r0, [fp, #-8]
   33dc0:	ldr	r3, [fp, #-8]
   33dc4:	ldr	r3, [r3]
   33dc8:	mov	r0, r3
   33dcc:	bl	33d64 <flatcc_emitter_copy_buffer@@Base+0x210>
   33dd0:	mov	r3, r0
   33dd4:	mov	r0, r3
   33dd8:	sub	sp, fp, #4
   33ddc:	ldr	fp, [sp]
   33de0:	add	sp, sp, #4
   33de4:	pop	{pc}		; (ldr pc, [sp], #4)

00033de8 <flatcc_verify_error_string@@Base>:
   33de8:	push	{fp}		; (str fp, [sp, #-4]!)
   33dec:	add	fp, sp, #0
   33df0:	sub	sp, sp, #12
   33df4:	str	r0, [fp, #-8]
   33df8:	ldr	r3, [fp, #-8]
   33dfc:	cmp	r3, #36	; 0x24
   33e00:	addls	pc, pc, r3, lsl #2
   33e04:	b	34058 <flatcc_verify_error_string@@Base+0x270>
   33e08:	b	33e9c <flatcc_verify_error_string@@Base+0xb4>
   33e0c:	b	33ea8 <flatcc_verify_error_string@@Base+0xc0>
   33e10:	b	33eb4 <flatcc_verify_error_string@@Base+0xcc>
   33e14:	b	33ec0 <flatcc_verify_error_string@@Base+0xd8>
   33e18:	b	33ecc <flatcc_verify_error_string@@Base+0xe4>
   33e1c:	b	33ed8 <flatcc_verify_error_string@@Base+0xf0>
   33e20:	b	33ee4 <flatcc_verify_error_string@@Base+0xfc>
   33e24:	b	33ef0 <flatcc_verify_error_string@@Base+0x108>
   33e28:	b	33efc <flatcc_verify_error_string@@Base+0x114>
   33e2c:	b	33f08 <flatcc_verify_error_string@@Base+0x120>
   33e30:	b	33f14 <flatcc_verify_error_string@@Base+0x12c>
   33e34:	b	33f20 <flatcc_verify_error_string@@Base+0x138>
   33e38:	b	33f2c <flatcc_verify_error_string@@Base+0x144>
   33e3c:	b	33f38 <flatcc_verify_error_string@@Base+0x150>
   33e40:	b	33f44 <flatcc_verify_error_string@@Base+0x15c>
   33e44:	b	33f50 <flatcc_verify_error_string@@Base+0x168>
   33e48:	b	33f5c <flatcc_verify_error_string@@Base+0x174>
   33e4c:	b	33f68 <flatcc_verify_error_string@@Base+0x180>
   33e50:	b	33f74 <flatcc_verify_error_string@@Base+0x18c>
   33e54:	b	33f80 <flatcc_verify_error_string@@Base+0x198>
   33e58:	b	33f8c <flatcc_verify_error_string@@Base+0x1a4>
   33e5c:	b	33f98 <flatcc_verify_error_string@@Base+0x1b0>
   33e60:	b	33fa4 <flatcc_verify_error_string@@Base+0x1bc>
   33e64:	b	33fb0 <flatcc_verify_error_string@@Base+0x1c8>
   33e68:	b	33fbc <flatcc_verify_error_string@@Base+0x1d4>
   33e6c:	b	33fc8 <flatcc_verify_error_string@@Base+0x1e0>
   33e70:	b	33fd4 <flatcc_verify_error_string@@Base+0x1ec>
   33e74:	b	33fe0 <flatcc_verify_error_string@@Base+0x1f8>
   33e78:	b	33fec <flatcc_verify_error_string@@Base+0x204>
   33e7c:	b	33ff8 <flatcc_verify_error_string@@Base+0x210>
   33e80:	b	34004 <flatcc_verify_error_string@@Base+0x21c>
   33e84:	b	34010 <flatcc_verify_error_string@@Base+0x228>
   33e88:	b	3401c <flatcc_verify_error_string@@Base+0x234>
   33e8c:	b	34028 <flatcc_verify_error_string@@Base+0x240>
   33e90:	b	34034 <flatcc_verify_error_string@@Base+0x24c>
   33e94:	b	34040 <flatcc_verify_error_string@@Base+0x258>
   33e98:	b	3404c <flatcc_verify_error_string@@Base+0x264>
   33e9c:	ldr	r3, [pc, #460]	; 34070 <flatcc_verify_error_string@@Base+0x288>
   33ea0:	add	r3, pc, r3
   33ea4:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33ea8:	ldr	r3, [pc, #452]	; 34074 <flatcc_verify_error_string@@Base+0x28c>
   33eac:	add	r3, pc, r3
   33eb0:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33eb4:	ldr	r3, [pc, #444]	; 34078 <flatcc_verify_error_string@@Base+0x290>
   33eb8:	add	r3, pc, r3
   33ebc:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33ec0:	ldr	r3, [pc, #436]	; 3407c <flatcc_verify_error_string@@Base+0x294>
   33ec4:	add	r3, pc, r3
   33ec8:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33ecc:	ldr	r3, [pc, #428]	; 34080 <flatcc_verify_error_string@@Base+0x298>
   33ed0:	add	r3, pc, r3
   33ed4:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33ed8:	ldr	r3, [pc, #420]	; 34084 <flatcc_verify_error_string@@Base+0x29c>
   33edc:	add	r3, pc, r3
   33ee0:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33ee4:	ldr	r3, [pc, #412]	; 34088 <flatcc_verify_error_string@@Base+0x2a0>
   33ee8:	add	r3, pc, r3
   33eec:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33ef0:	ldr	r3, [pc, #404]	; 3408c <flatcc_verify_error_string@@Base+0x2a4>
   33ef4:	add	r3, pc, r3
   33ef8:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33efc:	ldr	r3, [pc, #396]	; 34090 <flatcc_verify_error_string@@Base+0x2a8>
   33f00:	add	r3, pc, r3
   33f04:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f08:	ldr	r3, [pc, #388]	; 34094 <flatcc_verify_error_string@@Base+0x2ac>
   33f0c:	add	r3, pc, r3
   33f10:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f14:	ldr	r3, [pc, #380]	; 34098 <flatcc_verify_error_string@@Base+0x2b0>
   33f18:	add	r3, pc, r3
   33f1c:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f20:	ldr	r3, [pc, #372]	; 3409c <flatcc_verify_error_string@@Base+0x2b4>
   33f24:	add	r3, pc, r3
   33f28:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f2c:	ldr	r3, [pc, #364]	; 340a0 <flatcc_verify_error_string@@Base+0x2b8>
   33f30:	add	r3, pc, r3
   33f34:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f38:	ldr	r3, [pc, #356]	; 340a4 <flatcc_verify_error_string@@Base+0x2bc>
   33f3c:	add	r3, pc, r3
   33f40:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f44:	ldr	r3, [pc, #348]	; 340a8 <flatcc_verify_error_string@@Base+0x2c0>
   33f48:	add	r3, pc, r3
   33f4c:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f50:	ldr	r3, [pc, #340]	; 340ac <flatcc_verify_error_string@@Base+0x2c4>
   33f54:	add	r3, pc, r3
   33f58:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f5c:	ldr	r3, [pc, #332]	; 340b0 <flatcc_verify_error_string@@Base+0x2c8>
   33f60:	add	r3, pc, r3
   33f64:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f68:	ldr	r3, [pc, #324]	; 340b4 <flatcc_verify_error_string@@Base+0x2cc>
   33f6c:	add	r3, pc, r3
   33f70:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f74:	ldr	r3, [pc, #316]	; 340b8 <flatcc_verify_error_string@@Base+0x2d0>
   33f78:	add	r3, pc, r3
   33f7c:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f80:	ldr	r3, [pc, #308]	; 340bc <flatcc_verify_error_string@@Base+0x2d4>
   33f84:	add	r3, pc, r3
   33f88:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f8c:	ldr	r3, [pc, #300]	; 340c0 <flatcc_verify_error_string@@Base+0x2d8>
   33f90:	add	r3, pc, r3
   33f94:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33f98:	ldr	r3, [pc, #292]	; 340c4 <flatcc_verify_error_string@@Base+0x2dc>
   33f9c:	add	r3, pc, r3
   33fa0:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33fa4:	ldr	r3, [pc, #284]	; 340c8 <flatcc_verify_error_string@@Base+0x2e0>
   33fa8:	add	r3, pc, r3
   33fac:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33fb0:	ldr	r3, [pc, #276]	; 340cc <flatcc_verify_error_string@@Base+0x2e4>
   33fb4:	add	r3, pc, r3
   33fb8:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33fbc:	ldr	r3, [pc, #268]	; 340d0 <flatcc_verify_error_string@@Base+0x2e8>
   33fc0:	add	r3, pc, r3
   33fc4:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33fc8:	ldr	r3, [pc, #260]	; 340d4 <flatcc_verify_error_string@@Base+0x2ec>
   33fcc:	add	r3, pc, r3
   33fd0:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33fd4:	ldr	r3, [pc, #252]	; 340d8 <flatcc_verify_error_string@@Base+0x2f0>
   33fd8:	add	r3, pc, r3
   33fdc:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33fe0:	ldr	r3, [pc, #244]	; 340dc <flatcc_verify_error_string@@Base+0x2f4>
   33fe4:	add	r3, pc, r3
   33fe8:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33fec:	ldr	r3, [pc, #236]	; 340e0 <flatcc_verify_error_string@@Base+0x2f8>
   33ff0:	add	r3, pc, r3
   33ff4:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   33ff8:	ldr	r3, [pc, #228]	; 340e4 <flatcc_verify_error_string@@Base+0x2fc>
   33ffc:	add	r3, pc, r3
   34000:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   34004:	ldr	r3, [pc, #220]	; 340e8 <flatcc_verify_error_string@@Base+0x300>
   34008:	add	r3, pc, r3
   3400c:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   34010:	ldr	r3, [pc, #212]	; 340ec <flatcc_verify_error_string@@Base+0x304>
   34014:	add	r3, pc, r3
   34018:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   3401c:	ldr	r3, [pc, #204]	; 340f0 <flatcc_verify_error_string@@Base+0x308>
   34020:	add	r3, pc, r3
   34024:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   34028:	ldr	r3, [pc, #196]	; 340f4 <flatcc_verify_error_string@@Base+0x30c>
   3402c:	add	r3, pc, r3
   34030:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   34034:	ldr	r3, [pc, #188]	; 340f8 <flatcc_verify_error_string@@Base+0x310>
   34038:	add	r3, pc, r3
   3403c:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   34040:	ldr	r3, [pc, #180]	; 340fc <flatcc_verify_error_string@@Base+0x314>
   34044:	add	r3, pc, r3
   34048:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   3404c:	ldr	r3, [pc, #172]	; 34100 <flatcc_verify_error_string@@Base+0x318>
   34050:	add	r3, pc, r3
   34054:	b	34060 <flatcc_verify_error_string@@Base+0x278>
   34058:	ldr	r3, [pc, #164]	; 34104 <flatcc_verify_error_string@@Base+0x31c>
   3405c:	add	r3, pc, r3
   34060:	mov	r0, r3
   34064:	add	sp, fp, #0
   34068:	pop	{fp}		; (ldr fp, [sp], #4)
   3406c:	bx	lr
   34070:			; <UNDEFINED> instruction: 0x0001ddb4
   34074:	andeq	sp, r1, ip, lsr #27
   34078:			; <UNDEFINED> instruction: 0x0001ddb8
   3407c:	andeq	sp, r1, r0, asr #27
   34080:	ldrdeq	sp, [r1], -r0
   34084:	ldrdeq	sp, [r1], -ip
   34088:	strdeq	sp, [r1], -r4
   3408c:	andeq	sp, r1, r8, lsl #28
   34090:	andeq	sp, r1, r8, lsl lr
   34094:	andeq	sp, r1, r0, lsr #28
   34098:	andeq	sp, r1, r8, lsr #28
   3409c:	andeq	sp, r1, r4, lsr lr
   340a0:	andeq	sp, r1, ip, lsr lr
   340a4:	andeq	sp, r1, r8, asr #28
   340a8:	andeq	sp, r1, r8, asr lr
   340ac:	andeq	sp, r1, r8, ror #28
   340b0:	andeq	sp, r1, r4, lsl #29
   340b4:	andeq	sp, r1, r0, lsr #29
   340b8:			; <UNDEFINED> instruction: 0x0001debc
   340bc:	andeq	sp, r1, r4, asr #29
   340c0:	andeq	sp, r1, r0, ror #29
   340c4:	andeq	sp, r1, ip, ror #29
   340c8:	andeq	sp, r1, ip, lsl #30
   340cc:	andeq	sp, r1, r4, lsr pc
   340d0:	andeq	sp, r1, r4, asr pc
   340d4:	andeq	sp, r1, r4, ror pc
   340d8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   340dc:	andeq	sp, r1, r0, lsr #31
   340e0:			; <UNDEFINED> instruction: 0x0001dfb0
   340e4:			; <UNDEFINED> instruction: 0x0001dfbc
   340e8:	ldrdeq	sp, [r1], -r8
   340ec:	strdeq	sp, [r1], -r4
   340f0:	andeq	lr, r1, r0
   340f4:	andeq	lr, r1, ip, lsl r0
   340f8:	andeq	lr, r1, r8, lsr r0
   340fc:	andeq	lr, r1, r0, rrx
   34100:	andeq	lr, r1, ip, ror r0
   34104:	andeq	lr, r1, r0, lsl #1
   34108:	str	fp, [sp, #-8]!
   3410c:	str	lr, [sp, #4]
   34110:	add	fp, sp, #4
   34114:	sub	sp, sp, #8
   34118:	str	r0, [fp, #-8]
   3411c:	str	r1, [fp, #-12]
   34120:	ldr	r2, [fp, #-8]
   34124:	ldr	r3, [fp, #-12]
   34128:	add	r3, r2, r3
   3412c:	mov	r0, r3
   34130:	bl	33cc4 <flatcc_emitter_copy_buffer@@Base+0x170>
   34134:	mov	r3, r0
   34138:	mov	r0, r3
   3413c:	sub	sp, fp, #4
   34140:	ldr	fp, [sp]
   34144:	add	sp, sp, #4
   34148:	pop	{pc}		; (ldr pc, [sp], #4)
   3414c:	str	fp, [sp, #-8]!
   34150:	str	lr, [sp, #4]
   34154:	add	fp, sp, #4
   34158:	sub	sp, sp, #16
   3415c:	str	r0, [fp, #-16]
   34160:	mov	r3, #0
   34164:	str	r3, [fp, #-8]
   34168:	sub	r3, fp, #8
   3416c:	mov	r2, #4
   34170:	ldr	r1, [fp, #-16]
   34174:	mov	r0, r3
   34178:	bl	145a0 <strncpy@plt>
   3417c:	ldr	r3, [fp, #-8]
   34180:	mov	r0, r3
   34184:	bl	33d88 <flatcc_emitter_copy_buffer@@Base+0x234>
   34188:	mov	r3, r0
   3418c:	mov	r0, r3
   34190:	sub	sp, fp, #4
   34194:	ldr	fp, [sp]
   34198:	add	sp, sp, #4
   3419c:	pop	{pc}		; (ldr pc, [sp], #4)
   341a0:	str	fp, [sp, #-8]!
   341a4:	str	lr, [sp, #4]
   341a8:	add	fp, sp, #4
   341ac:	sub	sp, sp, #8
   341b0:	str	r0, [fp, #-8]
   341b4:	str	r1, [fp, #-12]
   341b8:	ldr	r2, [fp, #-8]
   341bc:	ldr	r3, [fp, #-12]
   341c0:	add	r3, r2, r3
   341c4:	mov	r0, r3
   341c8:	bl	33dac <flatcc_emitter_copy_buffer@@Base+0x258>
   341cc:	mov	r3, r0
   341d0:	mov	r0, r3
   341d4:	sub	sp, fp, #4
   341d8:	ldr	fp, [sp]
   341dc:	add	sp, sp, #4
   341e0:	pop	{pc}		; (ldr pc, [sp], #4)
   341e4:	str	fp, [sp, #-8]!
   341e8:	str	lr, [sp, #4]
   341ec:	add	fp, sp, #4
   341f0:	sub	sp, sp, #8
   341f4:	str	r0, [fp, #-8]
   341f8:	str	r1, [fp, #-12]
   341fc:	ldr	r2, [fp, #-8]
   34200:	ldr	r3, [fp, #-12]
   34204:	add	r3, r2, r3
   34208:	mov	r0, r3
   3420c:	bl	33d28 <flatcc_emitter_copy_buffer@@Base+0x1d4>
   34210:	mov	r3, r0
   34214:	mov	r0, r3
   34218:	sub	sp, fp, #4
   3421c:	ldr	fp, [sp]
   34220:	add	sp, sp, #4
   34224:	pop	{pc}		; (ldr pc, [sp], #4)
   34228:	push	{fp}		; (str fp, [sp, #-4]!)
   3422c:	add	fp, sp, #0
   34230:	sub	sp, sp, #28
   34234:	str	r0, [fp, #-16]
   34238:	str	r1, [fp, #-20]	; 0xffffffec
   3423c:	str	r2, [fp, #-24]	; 0xffffffe8
   34240:	ldr	r2, [fp, #-20]	; 0xffffffec
   34244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34248:	add	r3, r2, r3
   3424c:	str	r3, [fp, #-8]
   34250:	ldr	r2, [fp, #-8]
   34254:	ldr	r3, [fp, #-20]	; 0xffffffec
   34258:	cmp	r2, r3
   3425c:	bls	3428c <flatcc_verify_error_string@@Base+0x4a4>
   34260:	ldr	r3, [fp, #-8]
   34264:	add	r3, r3, #4
   34268:	ldr	r2, [fp, #-16]
   3426c:	cmp	r2, r3
   34270:	bcc	3428c <flatcc_verify_error_string@@Base+0x4a4>
   34274:	ldr	r3, [fp, #-8]
   34278:	and	r3, r3, #3
   3427c:	cmp	r3, #0
   34280:	bne	3428c <flatcc_verify_error_string@@Base+0x4a4>
   34284:	mov	r3, #1
   34288:	b	34290 <flatcc_verify_error_string@@Base+0x4a8>
   3428c:	mov	r3, #0
   34290:	mov	r0, r3
   34294:	add	sp, fp, #0
   34298:	pop	{fp}		; (ldr fp, [sp], #4)
   3429c:	bx	lr
   342a0:	push	{fp}		; (str fp, [sp, #-4]!)
   342a4:	add	fp, sp, #0
   342a8:	sub	sp, sp, #28
   342ac:	str	r0, [fp, #-16]
   342b0:	str	r1, [fp, #-20]	; 0xffffffec
   342b4:	str	r2, [fp, #-24]	; 0xffffffe8
   342b8:	strh	r3, [fp, #-26]	; 0xffffffe6
   342bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   342c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   342c4:	add	r3, r2, r3
   342c8:	str	r3, [fp, #-8]
   342cc:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   342d0:	cmp	r3, #4
   342d4:	movcs	r3, r3
   342d8:	movcc	r3, #4
   342dc:	strh	r3, [fp, #-26]	; 0xffffffe6
   342e0:	ldr	r2, [fp, #-8]
   342e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   342e8:	cmp	r2, r3
   342ec:	bls	3432c <flatcc_verify_error_string@@Base+0x544>
   342f0:	ldr	r3, [fp, #-8]
   342f4:	add	r3, r3, #4
   342f8:	ldr	r2, [fp, #-16]
   342fc:	cmp	r2, r3
   34300:	bcc	3432c <flatcc_verify_error_string@@Base+0x544>
   34304:	ldr	r3, [fp, #-8]
   34308:	add	r2, r3, #4
   3430c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   34310:	sub	r3, r3, #1
   34314:	orr	r3, r3, #3
   34318:	and	r3, r3, r2
   3431c:	cmp	r3, #0
   34320:	bne	3432c <flatcc_verify_error_string@@Base+0x544>
   34324:	mov	r3, #1
   34328:	b	34330 <flatcc_verify_error_string@@Base+0x548>
   3432c:	mov	r3, #0
   34330:	mov	r0, r3
   34334:	add	sp, fp, #0
   34338:	pop	{fp}		; (ldr fp, [sp], #4)
   3433c:	bx	lr
   34340:	push	{fp}		; (str fp, [sp, #-4]!)
   34344:	add	fp, sp, #0
   34348:	sub	sp, sp, #36	; 0x24
   3434c:	str	r0, [fp, #-24]	; 0xffffffe8
   34350:	str	r1, [fp, #-28]	; 0xffffffe4
   34354:	str	r2, [fp, #-32]	; 0xffffffe0
   34358:	str	r3, [fp, #-36]	; 0xffffffdc
   3435c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34360:	cmp	r3, #0
   34364:	beq	34380 <flatcc_verify_error_string@@Base+0x598>
   34368:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3436c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34370:	add	r3, r2, r3
   34374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34378:	cmp	r2, r3
   3437c:	bcs	34388 <flatcc_verify_error_string@@Base+0x5a0>
   34380:	mov	r3, #18
   34384:	b	34448 <flatcc_verify_error_string@@Base+0x660>
   34388:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3438c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34390:	add	r3, r2, r3
   34394:	str	r3, [fp, #-28]	; 0xffffffe4
   34398:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3439c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   343a0:	add	r3, r2, r3
   343a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   343a8:	cmp	r2, r3
   343ac:	movls	r3, #1
   343b0:	movhi	r3, #0
   343b4:	uxtb	r3, r3
   343b8:	str	r3, [fp, #-8]
   343bc:	ldr	r3, [fp, #-8]
   343c0:	cmp	r3, #0
   343c4:	bne	343d0 <flatcc_verify_error_string@@Base+0x5e8>
   343c8:	mov	r3, #10
   343cc:	b	34448 <flatcc_verify_error_string@@Base+0x660>
   343d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   343d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   343d8:	add	r3, r2, r3
   343dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343e0:	cmp	r2, r3
   343e4:	movcs	r3, #1
   343e8:	movcc	r3, #0
   343ec:	uxtb	r3, r3
   343f0:	str	r3, [fp, #-12]
   343f4:	ldr	r3, [fp, #-12]
   343f8:	cmp	r3, #0
   343fc:	bne	34408 <flatcc_verify_error_string@@Base+0x620>
   34400:	mov	r3, #9
   34404:	b	34448 <flatcc_verify_error_string@@Base+0x660>
   34408:	ldrh	r3, [fp, #4]
   3440c:	sub	r3, r3, #1
   34410:	mov	r2, r3
   34414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34418:	and	r3, r3, r2
   3441c:	cmp	r3, #0
   34420:	moveq	r3, #1
   34424:	movne	r3, #0
   34428:	uxtb	r3, r3
   3442c:	str	r3, [fp, #-16]
   34430:	ldr	r3, [fp, #-16]
   34434:	cmp	r3, #0
   34438:	bne	34444 <flatcc_verify_error_string@@Base+0x65c>
   3443c:	mov	r3, #11
   34440:	b	34448 <flatcc_verify_error_string@@Base+0x660>
   34444:	mov	r3, #0
   34448:	mov	r0, r3
   3444c:	add	sp, fp, #0
   34450:	pop	{fp}		; (ldr fp, [sp], #4)
   34454:	bx	lr
   34458:	str	fp, [sp, #-8]!
   3445c:	str	lr, [sp, #4]
   34460:	add	fp, sp, #4
   34464:	sub	sp, sp, #16
   34468:	str	r0, [fp, #-16]
   3446c:	mov	r3, r1
   34470:	strh	r3, [fp, #-18]	; 0xffffffee
   34474:	ldrh	r3, [fp, #-18]	; 0xffffffee
   34478:	add	r3, r3, #2
   3447c:	uxth	r3, r3
   34480:	lsl	r3, r3, #1
   34484:	strh	r3, [fp, #-6]
   34488:	ldr	r3, [fp, #-16]
   3448c:	ldrh	r3, [r3, #22]
   34490:	ldrh	r2, [fp, #-6]
   34494:	cmp	r2, r3
   34498:	bcc	344a4 <flatcc_verify_error_string@@Base+0x6bc>
   3449c:	mov	r3, #0
   344a0:	b	344c0 <flatcc_verify_error_string@@Base+0x6d8>
   344a4:	ldr	r3, [fp, #-16]
   344a8:	ldr	r3, [r3, #12]
   344ac:	ldrh	r2, [fp, #-6]
   344b0:	mov	r1, r2
   344b4:	mov	r0, r3
   344b8:	bl	341e4 <flatcc_verify_error_string@@Base+0x3fc>
   344bc:	mov	r3, r0
   344c0:	mov	r0, r3
   344c4:	sub	sp, fp, #4
   344c8:	ldr	fp, [sp]
   344cc:	add	sp, sp, #4
   344d0:	pop	{pc}		; (ldr pc, [sp], #4)
   344d4:	str	fp, [sp, #-8]!
   344d8:	str	lr, [sp, #4]
   344dc:	add	fp, sp, #4
   344e0:	sub	sp, sp, #16
   344e4:	str	r0, [fp, #-16]
   344e8:	mov	r3, r1
   344ec:	strh	r3, [fp, #-18]	; 0xffffffee
   344f0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   344f4:	mov	r1, r3
   344f8:	ldr	r0, [fp, #-16]
   344fc:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   34500:	mov	r3, r0
   34504:	strh	r3, [fp, #-6]
   34508:	ldrh	r3, [fp, #-6]
   3450c:	cmp	r3, #0
   34510:	beq	34534 <flatcc_verify_error_string@@Base+0x74c>
   34514:	ldr	r3, [fp, #-16]
   34518:	ldr	r2, [r3]
   3451c:	ldr	r3, [fp, #-16]
   34520:	ldr	r1, [r3, #16]
   34524:	ldrh	r3, [fp, #-6]
   34528:	add	r3, r1, r3
   3452c:	add	r3, r2, r3
   34530:	b	34538 <flatcc_verify_error_string@@Base+0x750>
   34534:	mov	r3, #0
   34538:	mov	r0, r3
   3453c:	sub	sp, fp, #4
   34540:	ldr	fp, [sp]
   34544:	add	sp, sp, #4
   34548:	pop	{pc}		; (ldr pc, [sp], #4)
   3454c:	str	fp, [sp, #-8]!
   34550:	str	lr, [sp, #4]
   34554:	add	fp, sp, #4
   34558:	sub	sp, sp, #48	; 0x30
   3455c:	str	r0, [fp, #-40]	; 0xffffffd8
   34560:	str	r2, [fp, #-48]	; 0xffffffd0
   34564:	str	r3, [fp, #-52]	; 0xffffffcc
   34568:	mov	r3, r1
   3456c:	strh	r3, [fp, #-42]	; 0xffffffd6
   34570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34574:	ldr	r3, [r3]
   34578:	str	r3, [fp, #-8]
   3457c:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   34580:	mov	r1, r3
   34584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34588:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   3458c:	mov	r3, r0
   34590:	strh	r3, [fp, #-10]
   34594:	ldrh	r3, [fp, #-10]
   34598:	cmp	r3, #0
   3459c:	bne	345d4 <flatcc_verify_error_string@@Base+0x7ec>
   345a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   345a4:	cmp	r3, #0
   345a8:	moveq	r3, #1
   345ac:	movne	r3, #0
   345b0:	uxtb	r3, r3
   345b4:	str	r3, [fp, #-16]
   345b8:	ldr	r3, [fp, #-16]
   345bc:	cmp	r3, #0
   345c0:	bne	345cc <flatcc_verify_error_string@@Base+0x7e4>
   345c4:	mov	r3, #4
   345c8:	b	3469c <flatcc_verify_error_string@@Base+0x8b4>
   345cc:	mov	r3, #0
   345d0:	b	3469c <flatcc_verify_error_string@@Base+0x8b4>
   345d4:	ldrh	r3, [fp, #-10]
   345d8:	str	r3, [fp, #-20]	; 0xffffffec
   345dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   345e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   345e4:	add	r3, r2, r3
   345e8:	str	r3, [fp, #-24]	; 0xffffffe8
   345ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   345f0:	ldrh	r3, [r3, #20]
   345f4:	mov	r2, r3
   345f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   345fc:	cmp	r3, r2
   34600:	movls	r3, #1
   34604:	movhi	r3, #0
   34608:	uxtb	r3, r3
   3460c:	str	r3, [fp, #-28]	; 0xffffffe4
   34610:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34614:	cmp	r3, #0
   34618:	bne	34624 <flatcc_verify_error_string@@Base+0x83c>
   3461c:	mov	r3, #13
   34620:	b	3469c <flatcc_verify_error_string@@Base+0x8b4>
   34624:	mov	r3, #1
   34628:	str	r3, [fp, #-32]	; 0xffffffe0
   3462c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34630:	cmp	r3, #0
   34634:	bne	34640 <flatcc_verify_error_string@@Base+0x858>
   34638:	mov	r3, #14
   3463c:	b	3469c <flatcc_verify_error_string@@Base+0x8b4>
   34640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34644:	ldr	r2, [r3, #16]
   34648:	ldr	r3, [fp, #-8]
   3464c:	add	r3, r2, r3
   34650:	ldr	r2, [fp, #-20]	; 0xffffffec
   34654:	add	r3, r2, r3
   34658:	str	r3, [fp, #-20]	; 0xffffffec
   3465c:	ldrh	r3, [fp, #4]
   34660:	sub	r3, r3, #1
   34664:	mov	r2, r3
   34668:	ldr	r3, [fp, #-20]	; 0xffffffec
   3466c:	and	r3, r3, r2
   34670:	cmp	r3, #0
   34674:	moveq	r3, #1
   34678:	movne	r3, #0
   3467c:	uxtb	r3, r3
   34680:	str	r3, [fp, #-36]	; 0xffffffdc
   34684:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34688:	cmp	r3, #0
   3468c:	bne	34698 <flatcc_verify_error_string@@Base+0x8b0>
   34690:	mov	r3, #12
   34694:	b	3469c <flatcc_verify_error_string@@Base+0x8b4>
   34698:	mov	r3, #0
   3469c:	mov	r0, r3
   346a0:	sub	sp, fp, #4
   346a4:	ldr	fp, [sp]
   346a8:	add	sp, sp, #4
   346ac:	pop	{pc}		; (ldr pc, [sp], #4)
   346b0:	str	fp, [sp, #-8]!
   346b4:	str	lr, [sp, #4]
   346b8:	add	fp, sp, #4
   346bc:	sub	sp, sp, #40	; 0x28
   346c0:	str	r0, [fp, #-32]	; 0xffffffe0
   346c4:	str	r2, [fp, #-40]	; 0xffffffd8
   346c8:	str	r3, [fp, #-44]	; 0xffffffd4
   346cc:	mov	r3, r1
   346d0:	strh	r3, [fp, #-34]	; 0xffffffde
   346d4:	ldrh	r3, [fp, #-34]	; 0xffffffde
   346d8:	mov	r1, r3
   346dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   346e0:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   346e4:	mov	r3, r0
   346e8:	strh	r3, [fp, #-6]
   346ec:	ldrh	r3, [fp, #-6]
   346f0:	cmp	r3, #0
   346f4:	bne	34720 <flatcc_verify_error_string@@Base+0x938>
   346f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   346fc:	mov	r2, #0
   34700:	str	r2, [r3]
   34704:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34708:	cmp	r3, #0
   3470c:	beq	34718 <flatcc_verify_error_string@@Base+0x930>
   34710:	mov	r3, #4
   34714:	b	347dc <flatcc_verify_error_string@@Base+0x9f4>
   34718:	mov	r3, #0
   3471c:	b	347dc <flatcc_verify_error_string@@Base+0x9f4>
   34720:	ldrh	r3, [fp, #-6]
   34724:	str	r3, [fp, #-12]
   34728:	ldr	r3, [fp, #-12]
   3472c:	add	r3, r3, #4
   34730:	str	r3, [fp, #-16]
   34734:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34738:	ldrh	r3, [r3, #20]
   3473c:	mov	r2, r3
   34740:	ldr	r3, [fp, #-16]
   34744:	cmp	r3, r2
   34748:	movls	r3, #1
   3474c:	movhi	r3, #0
   34750:	uxtb	r3, r3
   34754:	str	r3, [fp, #-20]	; 0xffffffec
   34758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3475c:	cmp	r3, #0
   34760:	bne	3476c <flatcc_verify_error_string@@Base+0x984>
   34764:	mov	r3, #13
   34768:	b	347dc <flatcc_verify_error_string@@Base+0x9f4>
   3476c:	mov	r3, #1
   34770:	str	r3, [fp, #-24]	; 0xffffffe8
   34774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34778:	cmp	r3, #0
   3477c:	bne	34788 <flatcc_verify_error_string@@Base+0x9a0>
   34780:	mov	r3, #14
   34784:	b	347dc <flatcc_verify_error_string@@Base+0x9f4>
   34788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3478c:	ldr	r3, [r3, #16]
   34790:	ldr	r2, [fp, #-12]
   34794:	add	r3, r2, r3
   34798:	str	r3, [fp, #-12]
   3479c:	ldr	r3, [fp, #-12]
   347a0:	and	r3, r3, #3
   347a4:	cmp	r3, #0
   347a8:	moveq	r3, #1
   347ac:	movne	r3, #0
   347b0:	uxtb	r3, r3
   347b4:	str	r3, [fp, #-28]	; 0xffffffe4
   347b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   347bc:	cmp	r3, #0
   347c0:	bne	347cc <flatcc_verify_error_string@@Base+0x9e4>
   347c4:	mov	r3, #12
   347c8:	b	347dc <flatcc_verify_error_string@@Base+0x9f4>
   347cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   347d0:	ldr	r2, [fp, #-12]
   347d4:	str	r2, [r3]
   347d8:	mov	r3, #0
   347dc:	mov	r0, r3
   347e0:	sub	sp, fp, #4
   347e4:	ldr	fp, [sp]
   347e8:	add	sp, sp, #4
   347ec:	pop	{pc}		; (ldr pc, [sp], #4)
   347f0:	str	fp, [sp, #-8]!
   347f4:	str	lr, [sp, #4]
   347f8:	add	fp, sp, #4
   347fc:	sub	sp, sp, #32
   34800:	str	r0, [fp, #-24]	; 0xffffffe8
   34804:	str	r1, [fp, #-28]	; 0xffffffe4
   34808:	str	r2, [fp, #-32]	; 0xffffffe0
   3480c:	str	r3, [fp, #-36]	; 0xffffffdc
   34810:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34814:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34818:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3481c:	bl	34228 <flatcc_verify_error_string@@Base+0x440>
   34820:	str	r0, [fp, #-8]
   34824:	ldr	r3, [fp, #-8]
   34828:	cmp	r3, #0
   3482c:	bne	34838 <flatcc_verify_error_string@@Base+0xa50>
   34830:	mov	r3, #17
   34834:	b	348e4 <flatcc_verify_error_string@@Base+0xafc>
   34838:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3483c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34840:	add	r3, r2, r3
   34844:	str	r3, [fp, #-32]	; 0xffffffe0
   34848:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3484c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34850:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34854:	str	r0, [fp, #-12]
   34858:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3485c:	add	r3, r3, #4
   34860:	str	r3, [fp, #-32]	; 0xffffffe0
   34864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3486c:	sub	r2, r2, r3
   34870:	ldr	r3, [fp, #-12]
   34874:	add	r3, r3, #1
   34878:	cmp	r2, r3
   3487c:	movcs	r3, #1
   34880:	movcc	r3, #0
   34884:	uxtb	r3, r3
   34888:	str	r3, [fp, #-16]
   3488c:	ldr	r3, [fp, #-16]
   34890:	cmp	r3, #0
   34894:	bne	348a0 <flatcc_verify_error_string@@Base+0xab8>
   34898:	mov	r3, #8
   3489c:	b	348e4 <flatcc_verify_error_string@@Base+0xafc>
   348a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   348a4:	ldr	r3, [fp, #-12]
   348a8:	add	r3, r2, r3
   348ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   348b0:	add	r3, r2, r3
   348b4:	ldrb	r3, [r3]
   348b8:	cmp	r3, #0
   348bc:	moveq	r3, #1
   348c0:	movne	r3, #0
   348c4:	uxtb	r3, r3
   348c8:	str	r3, [fp, #-20]	; 0xffffffec
   348cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   348d0:	cmp	r3, #0
   348d4:	bne	348e0 <flatcc_verify_error_string@@Base+0xaf8>
   348d8:	mov	r3, #7
   348dc:	b	348e4 <flatcc_verify_error_string@@Base+0xafc>
   348e0:	mov	r3, #0
   348e4:	mov	r0, r3
   348e8:	sub	sp, fp, #4
   348ec:	ldr	fp, [sp]
   348f0:	add	sp, sp, #4
   348f4:	pop	{pc}		; (ldr pc, [sp], #4)
   348f8:	str	fp, [sp, #-8]!
   348fc:	str	lr, [sp, #4]
   34900:	add	fp, sp, #4
   34904:	sub	sp, sp, #32
   34908:	str	r0, [fp, #-24]	; 0xffffffe8
   3490c:	str	r1, [fp, #-28]	; 0xffffffe4
   34910:	str	r2, [fp, #-32]	; 0xffffffe0
   34914:	str	r3, [fp, #-36]	; 0xffffffdc
   34918:	ldrh	r3, [fp, #8]
   3491c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34920:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34924:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34928:	bl	342a0 <flatcc_verify_error_string@@Base+0x4b8>
   3492c:	str	r0, [fp, #-8]
   34930:	ldr	r3, [fp, #-8]
   34934:	cmp	r3, #0
   34938:	bne	34944 <flatcc_verify_error_string@@Base+0xb5c>
   3493c:	mov	r3, #16
   34940:	b	349e4 <flatcc_verify_error_string@@Base+0xbfc>
   34944:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34948:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3494c:	add	r3, r2, r3
   34950:	str	r3, [fp, #-32]	; 0xffffffe0
   34954:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3495c:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34960:	str	r0, [fp, #-12]
   34964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34968:	add	r3, r3, #4
   3496c:	str	r3, [fp, #-32]	; 0xffffffe0
   34970:	ldr	r2, [fp, #-12]
   34974:	ldr	r3, [fp, #12]
   34978:	cmp	r2, r3
   3497c:	movls	r3, #1
   34980:	movhi	r3, #0
   34984:	uxtb	r3, r3
   34988:	str	r3, [fp, #-16]
   3498c:	ldr	r3, [fp, #-16]
   34990:	cmp	r3, #0
   34994:	bne	349a0 <flatcc_verify_error_string@@Base+0xbb8>
   34998:	mov	r3, #25
   3499c:	b	349e4 <flatcc_verify_error_string@@Base+0xbfc>
   349a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   349a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   349a8:	sub	r2, r2, r3
   349ac:	ldr	r3, [fp, #-12]
   349b0:	ldr	r1, [fp, #4]
   349b4:	mul	r3, r1, r3
   349b8:	cmp	r2, r3
   349bc:	movcs	r3, #1
   349c0:	movcc	r3, #0
   349c4:	uxtb	r3, r3
   349c8:	str	r3, [fp, #-20]	; 0xffffffec
   349cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   349d0:	cmp	r3, #0
   349d4:	bne	349e0 <flatcc_verify_error_string@@Base+0xbf8>
   349d8:	mov	r3, #26
   349dc:	b	349e4 <flatcc_verify_error_string@@Base+0xbfc>
   349e0:	mov	r3, #0
   349e4:	mov	r0, r3
   349e8:	sub	sp, fp, #4
   349ec:	ldr	fp, [sp]
   349f0:	add	sp, sp, #4
   349f4:	pop	{pc}		; (ldr pc, [sp], #4)
   349f8:	str	fp, [sp, #-8]!
   349fc:	str	lr, [sp, #4]
   34a00:	add	fp, sp, #4
   34a04:	sub	sp, sp, #40	; 0x28
   34a08:	str	r0, [fp, #-16]
   34a0c:	str	r1, [fp, #-20]	; 0xffffffec
   34a10:	str	r2, [fp, #-24]	; 0xffffffe8
   34a14:	str	r3, [fp, #-28]	; 0xffffffe4
   34a18:	mvn	r3, #-1073741824	; 0xc0000000
   34a1c:	str	r3, [sp, #8]
   34a20:	mov	r3, #4
   34a24:	str	r3, [sp, #4]
   34a28:	mov	r3, #4
   34a2c:	str	r3, [sp]
   34a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34a34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a38:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a3c:	ldr	r0, [fp, #-16]
   34a40:	bl	348f8 <flatcc_verify_error_string@@Base+0xb10>
   34a44:	mov	r3, r0
   34a48:	cmp	r3, #0
   34a4c:	beq	34a84 <flatcc_verify_error_string@@Base+0xc9c>
   34a50:	mvn	r3, #-1073741824	; 0xc0000000
   34a54:	str	r3, [sp, #8]
   34a58:	mov	r3, #4
   34a5c:	str	r3, [sp, #4]
   34a60:	mov	r3, #4
   34a64:	str	r3, [sp]
   34a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a70:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a74:	ldr	r0, [fp, #-16]
   34a78:	bl	348f8 <flatcc_verify_error_string@@Base+0xb10>
   34a7c:	mov	r3, r0
   34a80:	b	34b3c <flatcc_verify_error_string@@Base+0xd54>
   34a84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34a88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34a8c:	add	r3, r2, r3
   34a90:	str	r3, [fp, #-24]	; 0xffffffe8
   34a94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34a98:	ldr	r0, [fp, #-16]
   34a9c:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34aa0:	str	r0, [fp, #-12]
   34aa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34aa8:	add	r3, r3, #4
   34aac:	str	r3, [fp, #-24]	; 0xffffffe8
   34ab0:	mov	r3, #0
   34ab4:	str	r3, [fp, #-8]
   34ab8:	b	34b28 <flatcc_verify_error_string@@Base+0xd40>
   34abc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34ac0:	ldr	r0, [fp, #-16]
   34ac4:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34ac8:	mov	r3, r0
   34acc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34ad0:	ldr	r1, [fp, #-20]	; 0xffffffec
   34ad4:	ldr	r0, [fp, #-16]
   34ad8:	bl	347f0 <flatcc_verify_error_string@@Base+0xa08>
   34adc:	mov	r3, r0
   34ae0:	cmp	r3, #0
   34ae4:	beq	34b10 <flatcc_verify_error_string@@Base+0xd28>
   34ae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34aec:	ldr	r0, [fp, #-16]
   34af0:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34af4:	mov	r3, r0
   34af8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34afc:	ldr	r1, [fp, #-20]	; 0xffffffec
   34b00:	ldr	r0, [fp, #-16]
   34b04:	bl	347f0 <flatcc_verify_error_string@@Base+0xa08>
   34b08:	mov	r3, r0
   34b0c:	b	34b3c <flatcc_verify_error_string@@Base+0xd54>
   34b10:	ldr	r3, [fp, #-8]
   34b14:	add	r3, r3, #1
   34b18:	str	r3, [fp, #-8]
   34b1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34b20:	add	r3, r3, #4
   34b24:	str	r3, [fp, #-24]	; 0xffffffe8
   34b28:	ldr	r2, [fp, #-8]
   34b2c:	ldr	r3, [fp, #-12]
   34b30:	cmp	r2, r3
   34b34:	bcc	34abc <flatcc_verify_error_string@@Base+0xcd4>
   34b38:	mov	r3, #0
   34b3c:	mov	r0, r3
   34b40:	sub	sp, fp, #4
   34b44:	ldr	fp, [sp]
   34b48:	add	sp, sp, #4
   34b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   34b50:	str	r4, [sp, #-12]!
   34b54:	str	fp, [sp, #4]
   34b58:	str	lr, [sp, #8]
   34b5c:	add	fp, sp, #8
   34b60:	sub	sp, sp, #84	; 0x54
   34b64:	str	r0, [fp, #-80]	; 0xffffffb0
   34b68:	str	r1, [fp, #-84]	; 0xffffffac
   34b6c:	str	r2, [fp, #-88]	; 0xffffffa8
   34b70:	str	r3, [fp, #-92]	; 0xffffffa4
   34b74:	ldr	r3, [fp, #4]
   34b78:	sub	r3, r3, #1
   34b7c:	str	r3, [fp, #-68]	; 0xffffffbc
   34b80:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34b84:	str	r3, [fp, #-16]
   34b88:	ldr	r3, [fp, #-16]
   34b8c:	cmp	r3, #0
   34b90:	bne	34b9c <flatcc_verify_error_string@@Base+0xdb4>
   34b94:	mov	r3, #3
   34b98:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34b9c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   34ba0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   34ba4:	ldr	r0, [fp, #-84]	; 0xffffffac
   34ba8:	bl	34228 <flatcc_verify_error_string@@Base+0x440>
   34bac:	str	r0, [fp, #-20]	; 0xffffffec
   34bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   34bb4:	cmp	r3, #0
   34bb8:	bne	34bc4 <flatcc_verify_error_string@@Base+0xddc>
   34bbc:	mov	r3, #15
   34bc0:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34bc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   34bc8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   34bcc:	add	r3, r2, r3
   34bd0:	str	r3, [fp, #-60]	; 0xffffffc4
   34bd4:	ldr	r4, [fp, #-60]	; 0xffffffc4
   34bd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34bdc:	mov	r1, r3
   34be0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   34be4:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34be8:	mov	r3, r0
   34bec:	sub	r3, r4, r3
   34bf0:	str	r3, [fp, #-24]	; 0xffffffe8
   34bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34bf8:	cmp	r3, #0
   34bfc:	blt	34c18 <flatcc_verify_error_string@@Base+0xe30>
   34c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34c04:	and	r3, r3, #1
   34c08:	cmp	r3, #0
   34c0c:	bne	34c18 <flatcc_verify_error_string@@Base+0xe30>
   34c10:	mov	r3, #1
   34c14:	b	34c1c <flatcc_verify_error_string@@Base+0xe34>
   34c18:	mov	r3, #0
   34c1c:	str	r3, [fp, #-28]	; 0xffffffe4
   34c20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34c24:	cmp	r3, #0
   34c28:	bne	34c34 <flatcc_verify_error_string@@Base+0xe4c>
   34c2c:	mov	r3, #29
   34c30:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34c34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34c38:	add	r3, r3, #2
   34c3c:	ldr	r2, [fp, #-84]	; 0xffffffac
   34c40:	cmp	r2, r3
   34c44:	movcs	r3, #1
   34c48:	movcc	r3, #0
   34c4c:	uxtb	r3, r3
   34c50:	str	r3, [fp, #-32]	; 0xffffffe0
   34c54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34c58:	cmp	r3, #0
   34c5c:	bne	34c68 <flatcc_verify_error_string@@Base+0xe80>
   34c60:	mov	r3, #27
   34c64:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34c6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   34c70:	bl	341e4 <flatcc_verify_error_string@@Base+0x3fc>
   34c74:	mov	r3, r0
   34c78:	strh	r3, [fp, #-54]	; 0xffffffca
   34c7c:	ldrh	r3, [fp, #-54]	; 0xffffffca
   34c80:	mov	r2, r3
   34c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34c88:	add	r3, r3, r2
   34c8c:	str	r3, [fp, #-36]	; 0xffffffdc
   34c90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34c94:	ldr	r3, [fp, #-84]	; 0xffffffac
   34c98:	cmp	r2, r3
   34c9c:	bhi	34cb8 <flatcc_verify_error_string@@Base+0xed0>
   34ca0:	ldrh	r3, [fp, #-54]	; 0xffffffca
   34ca4:	and	r3, r3, #1
   34ca8:	cmp	r3, #0
   34cac:	bne	34cb8 <flatcc_verify_error_string@@Base+0xed0>
   34cb0:	mov	r3, #1
   34cb4:	b	34cbc <flatcc_verify_error_string@@Base+0xed4>
   34cb8:	mov	r3, #0
   34cbc:	str	r3, [fp, #-40]	; 0xffffffd8
   34cc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34cc4:	cmp	r3, #0
   34cc8:	bne	34cd4 <flatcc_verify_error_string@@Base+0xeec>
   34ccc:	mov	r3, #30
   34cd0:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34cd4:	mov	r3, #1
   34cd8:	str	r3, [fp, #-44]	; 0xffffffd4
   34cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34ce0:	cmp	r3, #0
   34ce4:	bne	34cf0 <flatcc_verify_error_string@@Base+0xf08>
   34ce8:	mov	r3, #31
   34cec:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34cf0:	ldrh	r3, [fp, #-54]	; 0xffffffca
   34cf4:	cmp	r3, #3
   34cf8:	movhi	r3, #1
   34cfc:	movls	r3, #0
   34d00:	uxtb	r3, r3
   34d04:	str	r3, [fp, #-48]	; 0xffffffd0
   34d08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   34d0c:	cmp	r3, #0
   34d10:	bne	34d1c <flatcc_verify_error_string@@Base+0xf34>
   34d14:	mov	r3, #28
   34d18:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34d1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34d20:	add	r3, r3, #2
   34d24:	mov	r1, r3
   34d28:	ldr	r0, [fp, #-80]	; 0xffffffb0
   34d2c:	bl	341e4 <flatcc_verify_error_string@@Base+0x3fc>
   34d30:	mov	r3, r0
   34d34:	strh	r3, [fp, #-56]	; 0xffffffc8
   34d38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34d3c:	ldr	r2, [fp, #-84]	; 0xffffffac
   34d40:	sub	r3, r2, r3
   34d44:	ldrh	r2, [fp, #-56]	; 0xffffffc8
   34d48:	cmp	r3, r2
   34d4c:	movcs	r3, #1
   34d50:	movcc	r3, #0
   34d54:	uxtb	r3, r3
   34d58:	str	r3, [fp, #-52]	; 0xffffffcc
   34d5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   34d60:	cmp	r3, #0
   34d64:	bne	34d70 <flatcc_verify_error_string@@Base+0xf88>
   34d68:	mov	r3, #20
   34d6c:	b	34da4 <flatcc_verify_error_string@@Base+0xfbc>
   34d70:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34d74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34d78:	add	r3, r2, r3
   34d7c:	str	r3, [fp, #-64]	; 0xffffffc0
   34d80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   34d84:	str	r3, [fp, #-76]	; 0xffffffb4
   34d88:	ldr	r3, [fp, #-84]	; 0xffffffac
   34d8c:	str	r3, [fp, #-72]	; 0xffffffb8
   34d90:	sub	r2, fp, #76	; 0x4c
   34d94:	ldr	r3, [fp, #8]
   34d98:	mov	r0, r2
   34d9c:	blx	r3
   34da0:	mov	r3, r0
   34da4:	mov	r0, r3
   34da8:	sub	sp, fp, #8
   34dac:	ldr	r4, [sp]
   34db0:	ldr	fp, [sp, #4]
   34db4:	add	sp, sp, #8
   34db8:	pop	{pc}		; (ldr pc, [sp], #4)
   34dbc:	str	fp, [sp, #-8]!
   34dc0:	str	lr, [sp, #4]
   34dc4:	add	fp, sp, #4
   34dc8:	sub	sp, sp, #48	; 0x30
   34dcc:	str	r0, [fp, #-24]	; 0xffffffe8
   34dd0:	str	r1, [fp, #-28]	; 0xffffffe4
   34dd4:	str	r2, [fp, #-32]	; 0xffffffe0
   34dd8:	str	r3, [fp, #-36]	; 0xffffffdc
   34ddc:	ldr	r3, [fp, #4]
   34de0:	sub	r2, r3, #1
   34de4:	str	r2, [fp, #4]
   34de8:	cmp	r3, #0
   34dec:	movgt	r3, #1
   34df0:	movle	r3, #0
   34df4:	uxtb	r3, r3
   34df8:	str	r3, [fp, #-12]
   34dfc:	ldr	r3, [fp, #-12]
   34e00:	cmp	r3, #0
   34e04:	bne	34e10 <flatcc_verify_error_string@@Base+0x1028>
   34e08:	mov	r3, #3
   34e0c:	b	34f5c <flatcc_verify_error_string@@Base+0x1174>
   34e10:	mvn	r3, #-1073741824	; 0xc0000000
   34e14:	str	r3, [sp, #8]
   34e18:	mov	r3, #4
   34e1c:	str	r3, [sp, #4]
   34e20:	mov	r3, #4
   34e24:	str	r3, [sp]
   34e28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34e2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34e30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34e38:	bl	348f8 <flatcc_verify_error_string@@Base+0xb10>
   34e3c:	mov	r3, r0
   34e40:	cmp	r3, #0
   34e44:	beq	34e7c <flatcc_verify_error_string@@Base+0x1094>
   34e48:	mvn	r3, #-1073741824	; 0xc0000000
   34e4c:	str	r3, [sp, #8]
   34e50:	mov	r3, #4
   34e54:	str	r3, [sp, #4]
   34e58:	mov	r3, #4
   34e5c:	str	r3, [sp]
   34e60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34e64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34e68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34e70:	bl	348f8 <flatcc_verify_error_string@@Base+0xb10>
   34e74:	mov	r3, r0
   34e78:	b	34f5c <flatcc_verify_error_string@@Base+0x1174>
   34e7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34e84:	add	r3, r2, r3
   34e88:	str	r3, [fp, #-32]	; 0xffffffe0
   34e8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34e94:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34e98:	str	r0, [fp, #-16]
   34e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34ea0:	add	r3, r3, #4
   34ea4:	str	r3, [fp, #-32]	; 0xffffffe0
   34ea8:	mov	r3, #0
   34eac:	str	r3, [fp, #-8]
   34eb0:	b	34f48 <flatcc_verify_error_string@@Base+0x1160>
   34eb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34ebc:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34ec0:	mov	r2, r0
   34ec4:	ldr	r3, [fp, #8]
   34ec8:	str	r3, [sp, #4]
   34ecc:	ldr	r3, [fp, #4]
   34ed0:	str	r3, [sp]
   34ed4:	mov	r3, r2
   34ed8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34edc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34ee4:	bl	34b50 <flatcc_verify_error_string@@Base+0xd68>
   34ee8:	mov	r3, r0
   34eec:	cmp	r3, #0
   34ef0:	beq	34f30 <flatcc_verify_error_string@@Base+0x1148>
   34ef4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34efc:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   34f00:	mov	r2, r0
   34f04:	ldr	r3, [fp, #8]
   34f08:	str	r3, [sp, #4]
   34f0c:	ldr	r3, [fp, #4]
   34f10:	str	r3, [sp]
   34f14:	mov	r3, r2
   34f18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34f1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34f24:	bl	34b50 <flatcc_verify_error_string@@Base+0xd68>
   34f28:	mov	r3, r0
   34f2c:	b	34f5c <flatcc_verify_error_string@@Base+0x1174>
   34f30:	ldr	r3, [fp, #-8]
   34f34:	add	r3, r3, #1
   34f38:	str	r3, [fp, #-8]
   34f3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34f40:	add	r3, r3, #4
   34f44:	str	r3, [fp, #-32]	; 0xffffffe0
   34f48:	ldr	r2, [fp, #-8]
   34f4c:	ldr	r3, [fp, #-16]
   34f50:	cmp	r2, r3
   34f54:	bcc	34eb4 <flatcc_verify_error_string@@Base+0x10cc>
   34f58:	mov	r3, #0
   34f5c:	mov	r0, r3
   34f60:	sub	sp, fp, #4
   34f64:	ldr	fp, [sp]
   34f68:	add	sp, sp, #4
   34f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   34f70:	str	fp, [sp, #-8]!
   34f74:	str	lr, [sp, #4]
   34f78:	add	fp, sp, #4
   34f7c:	sub	sp, sp, #88	; 0x58
   34f80:	str	r0, [fp, #-64]	; 0xffffffc0
   34f84:	str	r1, [fp, #-68]	; 0xffffffbc
   34f88:	str	r2, [fp, #-72]	; 0xffffffb8
   34f8c:	str	r3, [fp, #-76]	; 0xffffffb4
   34f90:	ldr	r3, [fp, #12]
   34f94:	sub	r2, r3, #1
   34f98:	str	r2, [fp, #12]
   34f9c:	cmp	r3, #0
   34fa0:	movgt	r3, #1
   34fa4:	movle	r3, #0
   34fa8:	uxtb	r3, r3
   34fac:	str	r3, [fp, #-12]
   34fb0:	ldr	r3, [fp, #-12]
   34fb4:	cmp	r3, #0
   34fb8:	bne	34fc4 <flatcc_verify_error_string@@Base+0x11dc>
   34fbc:	mov	r3, #3
   34fc0:	b	351c0 <flatcc_verify_error_string@@Base+0x13d8>
   34fc4:	mvn	r3, #-1073741824	; 0xc0000000
   34fc8:	str	r3, [sp, #8]
   34fcc:	mov	r3, #4
   34fd0:	str	r3, [sp, #4]
   34fd4:	mov	r3, #4
   34fd8:	str	r3, [sp]
   34fdc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34fe0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34fe4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   34fe8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34fec:	bl	348f8 <flatcc_verify_error_string@@Base+0xb10>
   34ff0:	mov	r3, r0
   34ff4:	cmp	r3, #0
   34ff8:	beq	35030 <flatcc_verify_error_string@@Base+0x1248>
   34ffc:	mvn	r3, #-1073741824	; 0xc0000000
   35000:	str	r3, [sp, #8]
   35004:	mov	r3, #4
   35008:	str	r3, [sp, #4]
   3500c:	mov	r3, #4
   35010:	str	r3, [sp]
   35014:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35018:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3501c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   35020:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35024:	bl	348f8 <flatcc_verify_error_string@@Base+0xb10>
   35028:	mov	r3, r0
   3502c:	b	351c0 <flatcc_verify_error_string@@Base+0x13d8>
   35030:	ldr	r2, [fp, #-72]	; 0xffffffb8
   35034:	ldr	r3, [fp, #-76]	; 0xffffffb4
   35038:	add	r3, r2, r3
   3503c:	str	r3, [fp, #-72]	; 0xffffffb8
   35040:	ldr	r1, [fp, #-72]	; 0xffffffb8
   35044:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35048:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   3504c:	str	r0, [fp, #-16]
   35050:	ldr	r2, [fp, #-16]
   35054:	ldr	r3, [fp, #4]
   35058:	cmp	r2, r3
   3505c:	moveq	r3, #1
   35060:	movne	r3, #0
   35064:	uxtb	r3, r3
   35068:	str	r3, [fp, #-20]	; 0xffffffec
   3506c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35070:	cmp	r3, #0
   35074:	bne	35080 <flatcc_verify_error_string@@Base+0x1298>
   35078:	mov	r3, #34	; 0x22
   3507c:	b	351c0 <flatcc_verify_error_string@@Base+0x13d8>
   35080:	ldr	r3, [fp, #-72]	; 0xffffffb8
   35084:	add	r3, r3, #4
   35088:	str	r3, [fp, #-72]	; 0xffffffb8
   3508c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35090:	str	r3, [fp, #-56]	; 0xffffffc8
   35094:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35098:	str	r3, [fp, #-52]	; 0xffffffcc
   3509c:	ldr	r3, [fp, #12]
   350a0:	str	r3, [fp, #-48]	; 0xffffffd0
   350a4:	mov	r3, #0
   350a8:	str	r3, [fp, #-8]
   350ac:	b	351ac <flatcc_verify_error_string@@Base+0x13c4>
   350b0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   350b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   350b8:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   350bc:	str	r0, [fp, #-24]	; 0xffffffe8
   350c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   350c4:	cmp	r3, #0
   350c8:	bne	35104 <flatcc_verify_error_string@@Base+0x131c>
   350cc:	ldr	r2, [fp, #8]
   350d0:	ldr	r3, [fp, #-8]
   350d4:	add	r3, r2, r3
   350d8:	ldrb	r3, [r3]
   350dc:	cmp	r3, #0
   350e0:	moveq	r3, #1
   350e4:	movne	r3, #0
   350e8:	uxtb	r3, r3
   350ec:	str	r3, [fp, #-28]	; 0xffffffe4
   350f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   350f4:	cmp	r3, #0
   350f8:	bne	35194 <flatcc_verify_error_string@@Base+0x13ac>
   350fc:	mov	r3, #32
   35100:	b	351c0 <flatcc_verify_error_string@@Base+0x13d8>
   35104:	ldr	r2, [fp, #8]
   35108:	ldr	r3, [fp, #-8]
   3510c:	add	r3, r2, r3
   35110:	ldrb	r3, [r3]
   35114:	cmp	r3, #0
   35118:	movne	r3, #1
   3511c:	moveq	r3, #0
   35120:	uxtb	r3, r3
   35124:	str	r3, [fp, #-32]	; 0xffffffe0
   35128:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3512c:	cmp	r3, #0
   35130:	bne	3513c <flatcc_verify_error_string@@Base+0x1354>
   35134:	mov	r3, #33	; 0x21
   35138:	b	351c0 <flatcc_verify_error_string@@Base+0x13d8>
   3513c:	ldr	r2, [fp, #8]
   35140:	ldr	r3, [fp, #-8]
   35144:	add	r3, r2, r3
   35148:	ldrb	r3, [r3]
   3514c:	strb	r3, [fp, #-44]	; 0xffffffd4
   35150:	ldr	r3, [fp, #-72]	; 0xffffffb8
   35154:	str	r3, [fp, #-40]	; 0xffffffd8
   35158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3515c:	str	r3, [fp, #-36]	; 0xffffffdc
   35160:	sub	r2, fp, #56	; 0x38
   35164:	ldr	r3, [fp, #16]
   35168:	mov	r0, r2
   3516c:	blx	r3
   35170:	mov	r3, r0
   35174:	cmp	r3, #0
   35178:	beq	35194 <flatcc_verify_error_string@@Base+0x13ac>
   3517c:	sub	r2, fp, #56	; 0x38
   35180:	ldr	r3, [fp, #16]
   35184:	mov	r0, r2
   35188:	blx	r3
   3518c:	mov	r3, r0
   35190:	b	351c0 <flatcc_verify_error_string@@Base+0x13d8>
   35194:	ldr	r3, [fp, #-8]
   35198:	add	r3, r3, #1
   3519c:	str	r3, [fp, #-8]
   351a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   351a4:	add	r3, r3, #4
   351a8:	str	r3, [fp, #-72]	; 0xffffffb8
   351ac:	ldr	r2, [fp, #-8]
   351b0:	ldr	r3, [fp, #-16]
   351b4:	cmp	r2, r3
   351b8:	bcc	350b0 <flatcc_verify_error_string@@Base+0x12c8>
   351bc:	mov	r3, #0
   351c0:	mov	r0, r3
   351c4:	sub	sp, fp, #4
   351c8:	ldr	fp, [sp]
   351cc:	add	sp, sp, #4
   351d0:	pop	{pc}		; (ldr pc, [sp], #4)

000351d4 <flatcc_verify_field@@Base>:
   351d4:	str	fp, [sp, #-8]!
   351d8:	str	lr, [sp, #4]
   351dc:	add	fp, sp, #4
   351e0:	sub	sp, sp, #24
   351e4:	str	r0, [fp, #-8]
   351e8:	str	r2, [fp, #-16]
   351ec:	mov	r2, r3
   351f0:	mov	r3, r1
   351f4:	strh	r3, [fp, #-10]
   351f8:	mov	r3, r2
   351fc:	strh	r3, [fp, #-12]
   35200:	ldrh	r1, [fp, #-10]
   35204:	ldrh	r3, [fp, #-12]
   35208:	str	r3, [sp]
   3520c:	ldr	r3, [fp, #-16]
   35210:	mov	r2, #0
   35214:	ldr	r0, [fp, #-8]
   35218:	bl	3454c <flatcc_verify_error_string@@Base+0x764>
   3521c:	mov	r3, r0
   35220:	cmp	r3, #0
   35224:	beq	3524c <flatcc_verify_field@@Base+0x78>
   35228:	ldrh	r1, [fp, #-10]
   3522c:	ldrh	r3, [fp, #-12]
   35230:	str	r3, [sp]
   35234:	ldr	r3, [fp, #-16]
   35238:	mov	r2, #0
   3523c:	ldr	r0, [fp, #-8]
   35240:	bl	3454c <flatcc_verify_error_string@@Base+0x764>
   35244:	mov	r3, r0
   35248:	b	35250 <flatcc_verify_field@@Base+0x7c>
   3524c:	mov	r3, #0
   35250:	mov	r0, r3
   35254:	sub	sp, fp, #4
   35258:	ldr	fp, [sp]
   3525c:	add	sp, sp, #4
   35260:	pop	{pc}		; (ldr pc, [sp], #4)

00035264 <flatcc_verify_string_field@@Base>:
   35264:	strd	r4, [sp, #-20]!	; 0xffffffec
   35268:	str	r6, [sp, #8]
   3526c:	str	fp, [sp, #12]
   35270:	str	lr, [sp, #16]
   35274:	add	fp, sp, #16
   35278:	sub	sp, sp, #28
   3527c:	str	r0, [fp, #-32]	; 0xffffffe0
   35280:	mov	r3, r1
   35284:	str	r2, [fp, #-40]	; 0xffffffd8
   35288:	strh	r3, [fp, #-34]	; 0xffffffde
   3528c:	sub	r3, fp, #28
   35290:	ldrh	r1, [fp, #-34]	; 0xffffffde
   35294:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3529c:	bl	346b0 <flatcc_verify_error_string@@Base+0x8c8>
   352a0:	str	r0, [fp, #-24]	; 0xffffffe8
   352a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   352a8:	cmp	r3, #0
   352ac:	bne	352bc <flatcc_verify_string_field@@Base+0x58>
   352b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   352b4:	cmp	r3, #0
   352b8:	bne	352c4 <flatcc_verify_string_field@@Base+0x60>
   352bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   352c0:	b	35308 <flatcc_verify_string_field@@Base+0xa4>
   352c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352c8:	ldr	r4, [r3]
   352cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352d0:	ldr	r5, [r3, #4]
   352d4:	ldr	r6, [fp, #-28]	; 0xffffffe4
   352d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   352dc:	ldr	r3, [r3]
   352e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   352e4:	mov	r1, r2
   352e8:	mov	r0, r3
   352ec:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   352f0:	mov	r3, r0
   352f4:	mov	r2, r6
   352f8:	mov	r1, r5
   352fc:	mov	r0, r4
   35300:	bl	347f0 <flatcc_verify_error_string@@Base+0xa08>
   35304:	mov	r3, r0
   35308:	mov	r0, r3
   3530c:	sub	sp, fp, #16
   35310:	ldrd	r4, [sp]
   35314:	ldr	r6, [sp, #8]
   35318:	ldr	fp, [sp, #12]
   3531c:	add	sp, sp, #16
   35320:	pop	{pc}		; (ldr pc, [sp], #4)

00035324 <flatcc_verify_vector_field@@Base>:
   35324:	strd	r4, [sp, #-20]!	; 0xffffffec
   35328:	str	r6, [sp, #8]
   3532c:	str	fp, [sp, #12]
   35330:	str	lr, [sp, #16]
   35334:	add	fp, sp, #16
   35338:	sub	sp, sp, #44	; 0x2c
   3533c:	str	r0, [fp, #-32]	; 0xffffffe0
   35340:	str	r2, [fp, #-40]	; 0xffffffd8
   35344:	str	r3, [fp, #-44]	; 0xffffffd4
   35348:	mov	r3, r1
   3534c:	strh	r3, [fp, #-34]	; 0xffffffde
   35350:	sub	r3, fp, #28
   35354:	ldrh	r1, [fp, #-34]	; 0xffffffde
   35358:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3535c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35360:	bl	346b0 <flatcc_verify_error_string@@Base+0x8c8>
   35364:	str	r0, [fp, #-24]	; 0xffffffe8
   35368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3536c:	cmp	r3, #0
   35370:	bne	35380 <flatcc_verify_vector_field@@Base+0x5c>
   35374:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35378:	cmp	r3, #0
   3537c:	bne	35388 <flatcc_verify_vector_field@@Base+0x64>
   35380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35384:	b	353e8 <flatcc_verify_vector_field@@Base+0xc4>
   35388:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3538c:	ldr	r4, [r3]
   35390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35394:	ldr	r5, [r3, #4]
   35398:	ldr	r6, [fp, #-28]	; 0xffffffe4
   3539c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   353a0:	ldr	r3, [r3]
   353a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   353a8:	mov	r1, r2
   353ac:	mov	r0, r3
   353b0:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   353b4:	mov	r2, r0
   353b8:	ldr	r3, [fp, #8]
   353bc:	str	r3, [sp, #8]
   353c0:	ldrh	r3, [fp, #4]
   353c4:	str	r3, [sp, #4]
   353c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   353cc:	str	r3, [sp]
   353d0:	mov	r3, r2
   353d4:	mov	r2, r6
   353d8:	mov	r1, r5
   353dc:	mov	r0, r4
   353e0:	bl	348f8 <flatcc_verify_error_string@@Base+0xb10>
   353e4:	mov	r3, r0
   353e8:	mov	r0, r3
   353ec:	sub	sp, fp, #16
   353f0:	ldrd	r4, [sp]
   353f4:	ldr	r6, [sp, #8]
   353f8:	ldr	fp, [sp, #12]
   353fc:	add	sp, sp, #16
   35400:	pop	{pc}		; (ldr pc, [sp], #4)

00035404 <flatcc_verify_string_vector_field@@Base>:
   35404:	strd	r4, [sp, #-20]!	; 0xffffffec
   35408:	str	r6, [sp, #8]
   3540c:	str	fp, [sp, #12]
   35410:	str	lr, [sp, #16]
   35414:	add	fp, sp, #16
   35418:	sub	sp, sp, #28
   3541c:	str	r0, [fp, #-32]	; 0xffffffe0
   35420:	mov	r3, r1
   35424:	str	r2, [fp, #-40]	; 0xffffffd8
   35428:	strh	r3, [fp, #-34]	; 0xffffffde
   3542c:	sub	r3, fp, #28
   35430:	ldrh	r1, [fp, #-34]	; 0xffffffde
   35434:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3543c:	bl	346b0 <flatcc_verify_error_string@@Base+0x8c8>
   35440:	str	r0, [fp, #-24]	; 0xffffffe8
   35444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35448:	cmp	r3, #0
   3544c:	bne	3545c <flatcc_verify_string_vector_field@@Base+0x58>
   35450:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35454:	cmp	r3, #0
   35458:	bne	35464 <flatcc_verify_string_vector_field@@Base+0x60>
   3545c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35460:	b	354a8 <flatcc_verify_string_vector_field@@Base+0xa4>
   35464:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35468:	ldr	r4, [r3]
   3546c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35470:	ldr	r5, [r3, #4]
   35474:	ldr	r6, [fp, #-28]	; 0xffffffe4
   35478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3547c:	ldr	r3, [r3]
   35480:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35484:	mov	r1, r2
   35488:	mov	r0, r3
   3548c:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35490:	mov	r3, r0
   35494:	mov	r2, r6
   35498:	mov	r1, r5
   3549c:	mov	r0, r4
   354a0:	bl	349f8 <flatcc_verify_error_string@@Base+0xc10>
   354a4:	mov	r3, r0
   354a8:	mov	r0, r3
   354ac:	sub	sp, fp, #16
   354b0:	ldrd	r4, [sp]
   354b4:	ldr	r6, [sp, #8]
   354b8:	ldr	fp, [sp, #12]
   354bc:	add	sp, sp, #16
   354c0:	pop	{pc}		; (ldr pc, [sp], #4)

000354c4 <flatcc_verify_table_field@@Base>:
   354c4:	strd	r4, [sp, #-20]!	; 0xffffffec
   354c8:	str	r6, [sp, #8]
   354cc:	str	fp, [sp, #12]
   354d0:	str	lr, [sp, #16]
   354d4:	add	fp, sp, #16
   354d8:	sub	sp, sp, #36	; 0x24
   354dc:	str	r0, [fp, #-32]	; 0xffffffe0
   354e0:	str	r2, [fp, #-40]	; 0xffffffd8
   354e4:	str	r3, [fp, #-44]	; 0xffffffd4
   354e8:	mov	r3, r1
   354ec:	strh	r3, [fp, #-34]	; 0xffffffde
   354f0:	sub	r3, fp, #28
   354f4:	ldrh	r1, [fp, #-34]	; 0xffffffde
   354f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   354fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35500:	bl	346b0 <flatcc_verify_error_string@@Base+0x8c8>
   35504:	str	r0, [fp, #-24]	; 0xffffffe8
   35508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3550c:	cmp	r3, #0
   35510:	bne	35520 <flatcc_verify_table_field@@Base+0x5c>
   35514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35518:	cmp	r3, #0
   3551c:	bne	35528 <flatcc_verify_table_field@@Base+0x64>
   35520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35524:	b	35584 <flatcc_verify_table_field@@Base+0xc0>
   35528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3552c:	ldr	r4, [r3]
   35530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35534:	ldr	r5, [r3, #4]
   35538:	ldr	r6, [fp, #-28]	; 0xffffffe4
   3553c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35540:	ldr	r3, [r3]
   35544:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35548:	mov	r1, r2
   3554c:	mov	r0, r3
   35550:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35554:	mov	r1, r0
   35558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3555c:	ldr	r3, [r3, #8]
   35560:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35564:	str	r2, [sp, #4]
   35568:	str	r3, [sp]
   3556c:	mov	r3, r1
   35570:	mov	r2, r6
   35574:	mov	r1, r5
   35578:	mov	r0, r4
   3557c:	bl	34b50 <flatcc_verify_error_string@@Base+0xd68>
   35580:	mov	r3, r0
   35584:	mov	r0, r3
   35588:	sub	sp, fp, #16
   3558c:	ldrd	r4, [sp]
   35590:	ldr	r6, [sp, #8]
   35594:	ldr	fp, [sp, #12]
   35598:	add	sp, sp, #16
   3559c:	pop	{pc}		; (ldr pc, [sp], #4)

000355a0 <flatcc_verify_table_vector_field@@Base>:
   355a0:	strd	r4, [sp, #-20]!	; 0xffffffec
   355a4:	str	r6, [sp, #8]
   355a8:	str	fp, [sp, #12]
   355ac:	str	lr, [sp, #16]
   355b0:	add	fp, sp, #16
   355b4:	sub	sp, sp, #36	; 0x24
   355b8:	str	r0, [fp, #-32]	; 0xffffffe0
   355bc:	str	r2, [fp, #-40]	; 0xffffffd8
   355c0:	str	r3, [fp, #-44]	; 0xffffffd4
   355c4:	mov	r3, r1
   355c8:	strh	r3, [fp, #-34]	; 0xffffffde
   355cc:	sub	r3, fp, #28
   355d0:	ldrh	r1, [fp, #-34]	; 0xffffffde
   355d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   355d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   355dc:	bl	346b0 <flatcc_verify_error_string@@Base+0x8c8>
   355e0:	str	r0, [fp, #-24]	; 0xffffffe8
   355e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   355e8:	cmp	r3, #0
   355ec:	bne	355fc <flatcc_verify_table_vector_field@@Base+0x5c>
   355f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   355f4:	cmp	r3, #0
   355f8:	bne	35604 <flatcc_verify_table_vector_field@@Base+0x64>
   355fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35600:	b	35660 <flatcc_verify_table_vector_field@@Base+0xc0>
   35604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35608:	ldr	r4, [r3]
   3560c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35610:	ldr	r5, [r3, #4]
   35614:	ldr	r6, [fp, #-28]	; 0xffffffe4
   35618:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3561c:	ldr	r3, [r3]
   35620:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35624:	mov	r1, r2
   35628:	mov	r0, r3
   3562c:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35630:	mov	r1, r0
   35634:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35638:	ldr	r3, [r3, #8]
   3563c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35640:	str	r2, [sp, #4]
   35644:	str	r3, [sp]
   35648:	mov	r3, r1
   3564c:	mov	r2, r6
   35650:	mov	r1, r5
   35654:	mov	r0, r4
   35658:	bl	34dbc <flatcc_verify_error_string@@Base+0xfd4>
   3565c:	mov	r3, r0
   35660:	mov	r0, r3
   35664:	sub	sp, fp, #16
   35668:	ldrd	r4, [sp]
   3566c:	ldr	r6, [sp, #8]
   35670:	ldr	fp, [sp, #12]
   35674:	add	sp, sp, #16
   35678:	pop	{pc}		; (ldr pc, [sp], #4)

0003567c <flatcc_verify_union_table@@Base>:
   3567c:	str	fp, [sp, #-8]!
   35680:	str	lr, [sp, #4]
   35684:	add	fp, sp, #4
   35688:	sub	sp, sp, #16
   3568c:	str	r0, [fp, #-8]
   35690:	str	r1, [fp, #-12]
   35694:	ldr	r3, [fp, #-8]
   35698:	ldr	r0, [r3]
   3569c:	ldr	r3, [fp, #-8]
   356a0:	ldr	r1, [r3, #4]
   356a4:	ldr	r3, [fp, #-8]
   356a8:	ldr	ip, [r3, #16]
   356ac:	ldr	r3, [fp, #-8]
   356b0:	ldr	lr, [r3, #20]
   356b4:	ldr	r3, [fp, #-8]
   356b8:	ldr	r3, [r3, #8]
   356bc:	ldr	r2, [fp, #-12]
   356c0:	str	r2, [sp, #4]
   356c4:	str	r3, [sp]
   356c8:	mov	r3, lr
   356cc:	mov	r2, ip
   356d0:	bl	34b50 <flatcc_verify_error_string@@Base+0xd68>
   356d4:	mov	r3, r0
   356d8:	mov	r0, r3
   356dc:	sub	sp, fp, #4
   356e0:	ldr	fp, [sp]
   356e4:	add	sp, sp, #4
   356e8:	pop	{pc}		; (ldr pc, [sp], #4)

000356ec <flatcc_verify_union_struct@@Base>:
   356ec:	str	fp, [sp, #-8]!
   356f0:	str	lr, [sp, #4]
   356f4:	add	fp, sp, #4
   356f8:	sub	sp, sp, #24
   356fc:	str	r0, [fp, #-8]
   35700:	str	r1, [fp, #-12]
   35704:	mov	r3, r2
   35708:	strh	r3, [fp, #-14]
   3570c:	ldr	r3, [fp, #-8]
   35710:	ldr	r0, [r3, #4]
   35714:	ldr	r3, [fp, #-8]
   35718:	ldr	r1, [r3, #16]
   3571c:	ldr	r3, [fp, #-8]
   35720:	ldr	r2, [r3, #20]
   35724:	ldrh	r3, [fp, #-14]
   35728:	str	r3, [sp]
   3572c:	ldr	r3, [fp, #-12]
   35730:	bl	34340 <flatcc_verify_error_string@@Base+0x558>
   35734:	mov	r3, r0
   35738:	mov	r0, r3
   3573c:	sub	sp, fp, #4
   35740:	ldr	fp, [sp]
   35744:	add	sp, sp, #4
   35748:	pop	{pc}		; (ldr pc, [sp], #4)

0003574c <flatcc_verify_union_string@@Base>:
   3574c:	str	fp, [sp, #-8]!
   35750:	str	lr, [sp, #4]
   35754:	add	fp, sp, #4
   35758:	sub	sp, sp, #8
   3575c:	str	r0, [fp, #-8]
   35760:	ldr	r3, [fp, #-8]
   35764:	ldr	r0, [r3]
   35768:	ldr	r3, [fp, #-8]
   3576c:	ldr	r1, [r3, #4]
   35770:	ldr	r3, [fp, #-8]
   35774:	ldr	r2, [r3, #16]
   35778:	ldr	r3, [fp, #-8]
   3577c:	ldr	r3, [r3, #20]
   35780:	bl	347f0 <flatcc_verify_error_string@@Base+0xa08>
   35784:	mov	r3, r0
   35788:	mov	r0, r3
   3578c:	sub	sp, fp, #4
   35790:	ldr	fp, [sp]
   35794:	add	sp, sp, #4
   35798:	pop	{pc}		; (ldr pc, [sp], #4)

0003579c <flatcc_verify_buffer_header@@Base>:
   3579c:	str	fp, [sp, #-8]!
   357a0:	str	lr, [sp, #4]
   357a4:	add	fp, sp, #4
   357a8:	sub	sp, sp, #40	; 0x28
   357ac:	str	r0, [fp, #-32]	; 0xffffffe0
   357b0:	str	r1, [fp, #-36]	; 0xffffffdc
   357b4:	str	r2, [fp, #-40]	; 0xffffffd8
   357b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   357bc:	and	r3, r3, #3
   357c0:	cmp	r3, #0
   357c4:	moveq	r3, #1
   357c8:	movne	r3, #0
   357cc:	uxtb	r3, r3
   357d0:	str	r3, [fp, #-8]
   357d4:	ldr	r3, [fp, #-8]
   357d8:	cmp	r3, #0
   357dc:	bne	357e8 <flatcc_verify_buffer_header@@Base+0x4c>
   357e0:	mov	r3, #5
   357e4:	b	358ac <flatcc_verify_buffer_header@@Base+0x110>
   357e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   357ec:	cmn	r3, #9
   357f0:	movls	r3, #1
   357f4:	movhi	r3, #0
   357f8:	uxtb	r3, r3
   357fc:	str	r3, [fp, #-12]
   35800:	ldr	r3, [fp, #-12]
   35804:	cmp	r3, #0
   35808:	bne	35814 <flatcc_verify_buffer_header@@Base+0x78>
   3580c:	mov	r3, #6
   35810:	b	358ac <flatcc_verify_buffer_header@@Base+0x110>
   35814:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35818:	cmp	r3, #7
   3581c:	movhi	r3, #1
   35820:	movls	r3, #0
   35824:	uxtb	r3, r3
   35828:	str	r3, [fp, #-16]
   3582c:	ldr	r3, [fp, #-16]
   35830:	cmp	r3, #0
   35834:	bne	35840 <flatcc_verify_buffer_header@@Base+0xa4>
   35838:	mov	r3, #1
   3583c:	b	358ac <flatcc_verify_buffer_header@@Base+0x110>
   35840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35844:	cmp	r3, #0
   35848:	beq	358a8 <flatcc_verify_buffer_header@@Base+0x10c>
   3584c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35850:	bl	3414c <flatcc_verify_error_string@@Base+0x364>
   35854:	str	r0, [fp, #-20]	; 0xffffffec
   35858:	mov	r1, #4
   3585c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35860:	bl	341a0 <flatcc_verify_error_string@@Base+0x3b8>
   35864:	str	r0, [fp, #-24]	; 0xffffffe8
   35868:	ldr	r3, [fp, #-20]	; 0xffffffec
   3586c:	cmp	r3, #0
   35870:	beq	35884 <flatcc_verify_buffer_header@@Base+0xe8>
   35874:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35878:	ldr	r3, [fp, #-20]	; 0xffffffec
   3587c:	cmp	r2, r3
   35880:	bne	3588c <flatcc_verify_buffer_header@@Base+0xf0>
   35884:	mov	r3, #1
   35888:	b	35890 <flatcc_verify_buffer_header@@Base+0xf4>
   3588c:	mov	r3, #0
   35890:	str	r3, [fp, #-28]	; 0xffffffe4
   35894:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35898:	cmp	r3, #0
   3589c:	bne	358a8 <flatcc_verify_buffer_header@@Base+0x10c>
   358a0:	mov	r3, #2
   358a4:	b	358ac <flatcc_verify_buffer_header@@Base+0x110>
   358a8:	mov	r3, #0
   358ac:	mov	r0, r3
   358b0:	sub	sp, fp, #4
   358b4:	ldr	fp, [sp]
   358b8:	add	sp, sp, #4
   358bc:	pop	{pc}		; (ldr pc, [sp], #4)

000358c0 <flatcc_verify_typed_buffer_header@@Base>:
   358c0:	str	fp, [sp, #-8]!
   358c4:	str	lr, [sp, #4]
   358c8:	add	fp, sp, #4
   358cc:	sub	sp, sp, #40	; 0x28
   358d0:	str	r0, [fp, #-32]	; 0xffffffe0
   358d4:	str	r1, [fp, #-36]	; 0xffffffdc
   358d8:	str	r2, [fp, #-40]	; 0xffffffd8
   358dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   358e0:	and	r3, r3, #3
   358e4:	cmp	r3, #0
   358e8:	moveq	r3, #1
   358ec:	movne	r3, #0
   358f0:	uxtb	r3, r3
   358f4:	str	r3, [fp, #-8]
   358f8:	ldr	r3, [fp, #-8]
   358fc:	cmp	r3, #0
   35900:	bne	3590c <flatcc_verify_typed_buffer_header@@Base+0x4c>
   35904:	mov	r3, #5
   35908:	b	359cc <flatcc_verify_typed_buffer_header@@Base+0x10c>
   3590c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35910:	cmn	r3, #9
   35914:	movls	r3, #1
   35918:	movhi	r3, #0
   3591c:	uxtb	r3, r3
   35920:	str	r3, [fp, #-12]
   35924:	ldr	r3, [fp, #-12]
   35928:	cmp	r3, #0
   3592c:	bne	35938 <flatcc_verify_typed_buffer_header@@Base+0x78>
   35930:	mov	r3, #6
   35934:	b	359cc <flatcc_verify_typed_buffer_header@@Base+0x10c>
   35938:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3593c:	cmp	r3, #7
   35940:	movhi	r3, #1
   35944:	movls	r3, #0
   35948:	uxtb	r3, r3
   3594c:	str	r3, [fp, #-16]
   35950:	ldr	r3, [fp, #-16]
   35954:	cmp	r3, #0
   35958:	bne	35964 <flatcc_verify_typed_buffer_header@@Base+0xa4>
   3595c:	mov	r3, #1
   35960:	b	359cc <flatcc_verify_typed_buffer_header@@Base+0x10c>
   35964:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35968:	cmp	r3, #0
   3596c:	beq	359c8 <flatcc_verify_typed_buffer_header@@Base+0x108>
   35970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35974:	str	r3, [fp, #-20]	; 0xffffffec
   35978:	mov	r1, #4
   3597c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35980:	bl	341a0 <flatcc_verify_error_string@@Base+0x3b8>
   35984:	str	r0, [fp, #-24]	; 0xffffffe8
   35988:	ldr	r3, [fp, #-20]	; 0xffffffec
   3598c:	cmp	r3, #0
   35990:	beq	359a4 <flatcc_verify_typed_buffer_header@@Base+0xe4>
   35994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35998:	ldr	r3, [fp, #-20]	; 0xffffffec
   3599c:	cmp	r2, r3
   359a0:	bne	359ac <flatcc_verify_typed_buffer_header@@Base+0xec>
   359a4:	mov	r3, #1
   359a8:	b	359b0 <flatcc_verify_typed_buffer_header@@Base+0xf0>
   359ac:	mov	r3, #0
   359b0:	str	r3, [fp, #-28]	; 0xffffffe4
   359b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   359b8:	cmp	r3, #0
   359bc:	bne	359c8 <flatcc_verify_typed_buffer_header@@Base+0x108>
   359c0:	mov	r3, #2
   359c4:	b	359cc <flatcc_verify_typed_buffer_header@@Base+0x10c>
   359c8:	mov	r3, #0
   359cc:	mov	r0, r3
   359d0:	sub	sp, fp, #4
   359d4:	ldr	fp, [sp]
   359d8:	add	sp, sp, #4
   359dc:	pop	{pc}		; (ldr pc, [sp], #4)

000359e0 <flatcc_verify_struct_as_root@@Base>:
   359e0:	str	fp, [sp, #-8]!
   359e4:	str	lr, [sp, #4]
   359e8:	add	fp, sp, #4
   359ec:	sub	sp, sp, #24
   359f0:	str	r0, [fp, #-8]
   359f4:	str	r1, [fp, #-12]
   359f8:	str	r2, [fp, #-16]
   359fc:	str	r3, [fp, #-20]	; 0xffffffec
   35a00:	ldr	r2, [fp, #-16]
   35a04:	ldr	r1, [fp, #-12]
   35a08:	ldr	r0, [fp, #-8]
   35a0c:	bl	3579c <flatcc_verify_buffer_header@@Base>
   35a10:	mov	r3, r0
   35a14:	cmp	r3, #0
   35a18:	beq	35a34 <flatcc_verify_struct_as_root@@Base+0x54>
   35a1c:	ldr	r2, [fp, #-16]
   35a20:	ldr	r1, [fp, #-12]
   35a24:	ldr	r0, [fp, #-8]
   35a28:	bl	3579c <flatcc_verify_buffer_header@@Base>
   35a2c:	mov	r3, r0
   35a30:	b	35a60 <flatcc_verify_struct_as_root@@Base+0x80>
   35a34:	mov	r1, #0
   35a38:	ldr	r0, [fp, #-8]
   35a3c:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35a40:	mov	r2, r0
   35a44:	ldrh	r3, [fp, #4]
   35a48:	str	r3, [sp]
   35a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35a50:	mov	r1, #0
   35a54:	ldr	r0, [fp, #-12]
   35a58:	bl	34340 <flatcc_verify_error_string@@Base+0x558>
   35a5c:	mov	r3, r0
   35a60:	mov	r0, r3
   35a64:	sub	sp, fp, #4
   35a68:	ldr	fp, [sp]
   35a6c:	add	sp, sp, #4
   35a70:	pop	{pc}		; (ldr pc, [sp], #4)

00035a74 <flatcc_verify_struct_as_typed_root@@Base>:
   35a74:	str	fp, [sp, #-8]!
   35a78:	str	lr, [sp, #4]
   35a7c:	add	fp, sp, #4
   35a80:	sub	sp, sp, #24
   35a84:	str	r0, [fp, #-8]
   35a88:	str	r1, [fp, #-12]
   35a8c:	str	r2, [fp, #-16]
   35a90:	str	r3, [fp, #-20]	; 0xffffffec
   35a94:	ldr	r2, [fp, #-16]
   35a98:	ldr	r1, [fp, #-12]
   35a9c:	ldr	r0, [fp, #-8]
   35aa0:	bl	358c0 <flatcc_verify_typed_buffer_header@@Base>
   35aa4:	mov	r3, r0
   35aa8:	cmp	r3, #0
   35aac:	beq	35ac8 <flatcc_verify_struct_as_typed_root@@Base+0x54>
   35ab0:	ldr	r2, [fp, #-16]
   35ab4:	ldr	r1, [fp, #-12]
   35ab8:	ldr	r0, [fp, #-8]
   35abc:	bl	358c0 <flatcc_verify_typed_buffer_header@@Base>
   35ac0:	mov	r3, r0
   35ac4:	b	35af4 <flatcc_verify_struct_as_typed_root@@Base+0x80>
   35ac8:	mov	r1, #0
   35acc:	ldr	r0, [fp, #-8]
   35ad0:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35ad4:	mov	r2, r0
   35ad8:	ldrh	r3, [fp, #4]
   35adc:	str	r3, [sp]
   35ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   35ae4:	mov	r1, #0
   35ae8:	ldr	r0, [fp, #-12]
   35aec:	bl	34340 <flatcc_verify_error_string@@Base+0x558>
   35af0:	mov	r3, r0
   35af4:	mov	r0, r3
   35af8:	sub	sp, fp, #4
   35afc:	ldr	fp, [sp]
   35b00:	add	sp, sp, #4
   35b04:	pop	{pc}		; (ldr pc, [sp], #4)

00035b08 <flatcc_verify_table_as_root@@Base>:
   35b08:	str	fp, [sp, #-8]!
   35b0c:	str	lr, [sp, #4]
   35b10:	add	fp, sp, #4
   35b14:	sub	sp, sp, #24
   35b18:	str	r0, [fp, #-8]
   35b1c:	str	r1, [fp, #-12]
   35b20:	str	r2, [fp, #-16]
   35b24:	str	r3, [fp, #-20]	; 0xffffffec
   35b28:	ldr	r2, [fp, #-16]
   35b2c:	ldr	r1, [fp, #-12]
   35b30:	ldr	r0, [fp, #-8]
   35b34:	bl	3579c <flatcc_verify_buffer_header@@Base>
   35b38:	mov	r3, r0
   35b3c:	cmp	r3, #0
   35b40:	beq	35b5c <flatcc_verify_table_as_root@@Base+0x54>
   35b44:	ldr	r2, [fp, #-16]
   35b48:	ldr	r1, [fp, #-12]
   35b4c:	ldr	r0, [fp, #-8]
   35b50:	bl	3579c <flatcc_verify_buffer_header@@Base>
   35b54:	mov	r3, r0
   35b58:	b	35b94 <flatcc_verify_table_as_root@@Base+0x8c>
   35b5c:	mov	r1, #0
   35b60:	ldr	r0, [fp, #-8]
   35b64:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35b68:	mov	r2, r0
   35b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35b70:	str	r3, [sp, #4]
   35b74:	mov	r3, #100	; 0x64
   35b78:	str	r3, [sp]
   35b7c:	mov	r3, r2
   35b80:	mov	r2, #0
   35b84:	ldr	r1, [fp, #-12]
   35b88:	ldr	r0, [fp, #-8]
   35b8c:	bl	34b50 <flatcc_verify_error_string@@Base+0xd68>
   35b90:	mov	r3, r0
   35b94:	mov	r0, r3
   35b98:	sub	sp, fp, #4
   35b9c:	ldr	fp, [sp]
   35ba0:	add	sp, sp, #4
   35ba4:	pop	{pc}		; (ldr pc, [sp], #4)

00035ba8 <flatcc_verify_table_as_typed_root@@Base>:
   35ba8:	str	fp, [sp, #-8]!
   35bac:	str	lr, [sp, #4]
   35bb0:	add	fp, sp, #4
   35bb4:	sub	sp, sp, #24
   35bb8:	str	r0, [fp, #-8]
   35bbc:	str	r1, [fp, #-12]
   35bc0:	str	r2, [fp, #-16]
   35bc4:	str	r3, [fp, #-20]	; 0xffffffec
   35bc8:	ldr	r2, [fp, #-16]
   35bcc:	ldr	r1, [fp, #-12]
   35bd0:	ldr	r0, [fp, #-8]
   35bd4:	bl	358c0 <flatcc_verify_typed_buffer_header@@Base>
   35bd8:	mov	r3, r0
   35bdc:	cmp	r3, #0
   35be0:	beq	35bfc <flatcc_verify_table_as_typed_root@@Base+0x54>
   35be4:	ldr	r2, [fp, #-16]
   35be8:	ldr	r1, [fp, #-12]
   35bec:	ldr	r0, [fp, #-8]
   35bf0:	bl	358c0 <flatcc_verify_typed_buffer_header@@Base>
   35bf4:	mov	r3, r0
   35bf8:	b	35c34 <flatcc_verify_table_as_typed_root@@Base+0x8c>
   35bfc:	mov	r1, #0
   35c00:	ldr	r0, [fp, #-8]
   35c04:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35c08:	mov	r2, r0
   35c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35c10:	str	r3, [sp, #4]
   35c14:	mov	r3, #100	; 0x64
   35c18:	str	r3, [sp]
   35c1c:	mov	r3, r2
   35c20:	mov	r2, #0
   35c24:	ldr	r1, [fp, #-12]
   35c28:	ldr	r0, [fp, #-8]
   35c2c:	bl	34b50 <flatcc_verify_error_string@@Base+0xd68>
   35c30:	mov	r3, r0
   35c34:	mov	r0, r3
   35c38:	sub	sp, fp, #4
   35c3c:	ldr	fp, [sp]
   35c40:	add	sp, sp, #4
   35c44:	pop	{pc}		; (ldr pc, [sp], #4)

00035c48 <flatcc_verify_struct_as_nested_root@@Base>:
   35c48:	str	fp, [sp, #-8]!
   35c4c:	str	lr, [sp, #4]
   35c50:	add	fp, sp, #4
   35c54:	sub	sp, sp, #32
   35c58:	str	r0, [fp, #-16]
   35c5c:	str	r2, [fp, #-24]	; 0xffffffe8
   35c60:	str	r3, [fp, #-28]	; 0xffffffe4
   35c64:	mov	r3, r1
   35c68:	strh	r3, [fp, #-18]	; 0xffffffee
   35c6c:	ldrh	r2, [fp, #8]
   35c70:	ldrh	r1, [fp, #-18]	; 0xffffffee
   35c74:	mvn	r3, #0
   35c78:	str	r3, [sp, #4]
   35c7c:	mov	r3, #1
   35c80:	str	r3, [sp]
   35c84:	mov	r3, r2
   35c88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35c8c:	ldr	r0, [fp, #-16]
   35c90:	bl	35324 <flatcc_verify_vector_field@@Base>
   35c94:	mov	r3, r0
   35c98:	cmp	r3, #0
   35c9c:	beq	35cd0 <flatcc_verify_struct_as_nested_root@@Base+0x88>
   35ca0:	ldrh	r2, [fp, #8]
   35ca4:	ldrh	r1, [fp, #-18]	; 0xffffffee
   35ca8:	mvn	r3, #0
   35cac:	str	r3, [sp, #4]
   35cb0:	mov	r3, #1
   35cb4:	str	r3, [sp]
   35cb8:	mov	r3, r2
   35cbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35cc0:	ldr	r0, [fp, #-16]
   35cc4:	bl	35324 <flatcc_verify_vector_field@@Base>
   35cc8:	mov	r3, r0
   35ccc:	b	35d50 <flatcc_verify_struct_as_nested_root@@Base+0x108>
   35cd0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   35cd4:	mov	r1, r3
   35cd8:	ldr	r0, [fp, #-16]
   35cdc:	bl	344d4 <flatcc_verify_error_string@@Base+0x6ec>
   35ce0:	str	r0, [fp, #-8]
   35ce4:	ldr	r3, [fp, #-8]
   35ce8:	cmp	r3, #0
   35cec:	bne	35cf8 <flatcc_verify_struct_as_nested_root@@Base+0xb0>
   35cf0:	mov	r3, #0
   35cf4:	b	35d50 <flatcc_verify_struct_as_nested_root@@Base+0x108>
   35cf8:	mov	r1, #0
   35cfc:	ldr	r0, [fp, #-8]
   35d00:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35d04:	mov	r2, r0
   35d08:	ldr	r3, [fp, #-8]
   35d0c:	add	r3, r2, r3
   35d10:	str	r3, [fp, #-8]
   35d14:	mov	r1, #0
   35d18:	ldr	r0, [fp, #-8]
   35d1c:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35d20:	str	r0, [fp, #-12]
   35d24:	ldr	r3, [fp, #-8]
   35d28:	add	r3, r3, #4
   35d2c:	str	r3, [fp, #-8]
   35d30:	ldrh	r3, [fp, #8]
   35d34:	str	r3, [sp]
   35d38:	ldr	r3, [fp, #4]
   35d3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35d40:	ldr	r1, [fp, #-12]
   35d44:	ldr	r0, [fp, #-8]
   35d48:	bl	359e0 <flatcc_verify_struct_as_root@@Base>
   35d4c:	mov	r3, r0
   35d50:	mov	r0, r3
   35d54:	sub	sp, fp, #4
   35d58:	ldr	fp, [sp]
   35d5c:	add	sp, sp, #4
   35d60:	pop	{pc}		; (ldr pc, [sp], #4)

00035d64 <flatcc_verify_table_as_nested_root@@Base>:
   35d64:	str	fp, [sp, #-8]!
   35d68:	str	lr, [sp, #4]
   35d6c:	add	fp, sp, #4
   35d70:	sub	sp, sp, #32
   35d74:	str	r0, [fp, #-16]
   35d78:	str	r2, [fp, #-24]	; 0xffffffe8
   35d7c:	str	r3, [fp, #-28]	; 0xffffffe4
   35d80:	mov	r3, r1
   35d84:	strh	r3, [fp, #-18]	; 0xffffffee
   35d88:	ldrh	r2, [fp, #4]
   35d8c:	ldrh	r1, [fp, #-18]	; 0xffffffee
   35d90:	mvn	r3, #0
   35d94:	str	r3, [sp, #4]
   35d98:	mov	r3, #1
   35d9c:	str	r3, [sp]
   35da0:	mov	r3, r2
   35da4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35da8:	ldr	r0, [fp, #-16]
   35dac:	bl	35324 <flatcc_verify_vector_field@@Base>
   35db0:	mov	r3, r0
   35db4:	cmp	r3, #0
   35db8:	beq	35dec <flatcc_verify_table_as_nested_root@@Base+0x88>
   35dbc:	ldrh	r2, [fp, #4]
   35dc0:	ldrh	r1, [fp, #-18]	; 0xffffffee
   35dc4:	mvn	r3, #0
   35dc8:	str	r3, [sp, #4]
   35dcc:	mov	r3, #1
   35dd0:	str	r3, [sp]
   35dd4:	mov	r3, r2
   35dd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35ddc:	ldr	r0, [fp, #-16]
   35de0:	bl	35324 <flatcc_verify_vector_field@@Base>
   35de4:	mov	r3, r0
   35de8:	b	35ebc <flatcc_verify_table_as_nested_root@@Base+0x158>
   35dec:	ldrh	r3, [fp, #-18]	; 0xffffffee
   35df0:	mov	r1, r3
   35df4:	ldr	r0, [fp, #-16]
   35df8:	bl	344d4 <flatcc_verify_error_string@@Base+0x6ec>
   35dfc:	str	r0, [fp, #-8]
   35e00:	ldr	r3, [fp, #-8]
   35e04:	cmp	r3, #0
   35e08:	bne	35e14 <flatcc_verify_table_as_nested_root@@Base+0xb0>
   35e0c:	mov	r3, #0
   35e10:	b	35ebc <flatcc_verify_table_as_nested_root@@Base+0x158>
   35e14:	mov	r1, #0
   35e18:	ldr	r0, [fp, #-8]
   35e1c:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35e20:	mov	r2, r0
   35e24:	ldr	r3, [fp, #-8]
   35e28:	add	r3, r2, r3
   35e2c:	str	r3, [fp, #-8]
   35e30:	mov	r1, #0
   35e34:	ldr	r0, [fp, #-8]
   35e38:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35e3c:	str	r0, [fp, #-12]
   35e40:	ldr	r3, [fp, #-8]
   35e44:	add	r3, r3, #4
   35e48:	str	r3, [fp, #-8]
   35e4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35e50:	ldr	r1, [fp, #-12]
   35e54:	ldr	r0, [fp, #-8]
   35e58:	bl	3579c <flatcc_verify_buffer_header@@Base>
   35e5c:	mov	r3, r0
   35e60:	cmp	r3, #0
   35e64:	beq	35e80 <flatcc_verify_table_as_nested_root@@Base+0x11c>
   35e68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35e6c:	ldr	r1, [fp, #-12]
   35e70:	ldr	r0, [fp, #-8]
   35e74:	bl	3579c <flatcc_verify_buffer_header@@Base>
   35e78:	mov	r3, r0
   35e7c:	b	35ebc <flatcc_verify_table_as_nested_root@@Base+0x158>
   35e80:	mov	r1, #0
   35e84:	ldr	r0, [fp, #-8]
   35e88:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   35e8c:	mov	r1, r0
   35e90:	ldr	r3, [fp, #-16]
   35e94:	ldr	r3, [r3, #8]
   35e98:	ldr	r2, [fp, #8]
   35e9c:	str	r2, [sp, #4]
   35ea0:	str	r3, [sp]
   35ea4:	mov	r3, r1
   35ea8:	mov	r2, #0
   35eac:	ldr	r1, [fp, #-12]
   35eb0:	ldr	r0, [fp, #-8]
   35eb4:	bl	34b50 <flatcc_verify_error_string@@Base+0xd68>
   35eb8:	mov	r3, r0
   35ebc:	mov	r0, r3
   35ec0:	sub	sp, fp, #4
   35ec4:	ldr	fp, [sp]
   35ec8:	add	sp, sp, #4
   35ecc:	pop	{pc}		; (ldr pc, [sp], #4)

00035ed0 <flatcc_verify_union_field@@Base>:
   35ed0:	str	fp, [sp, #-8]!
   35ed4:	str	lr, [sp, #4]
   35ed8:	add	fp, sp, #4
   35edc:	sub	sp, sp, #80	; 0x50
   35ee0:	str	r0, [fp, #-64]	; 0xffffffc0
   35ee4:	str	r2, [fp, #-72]	; 0xffffffb8
   35ee8:	str	r3, [fp, #-76]	; 0xffffffb4
   35eec:	mov	r3, r1
   35ef0:	strh	r3, [fp, #-66]	; 0xffffffbe
   35ef4:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   35ef8:	sub	r3, r3, #1
   35efc:	uxth	r3, r3
   35f00:	mov	r1, r3
   35f04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35f08:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   35f0c:	mov	r3, r0
   35f10:	strh	r3, [fp, #-6]
   35f14:	ldrh	r3, [fp, #-6]
   35f18:	cmp	r3, #0
   35f1c:	bne	35f98 <flatcc_verify_union_field@@Base+0xc8>
   35f20:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   35f24:	mov	r1, r3
   35f28:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35f2c:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   35f30:	mov	r3, r0
   35f34:	strh	r3, [fp, #-8]
   35f38:	ldrh	r3, [fp, #-8]
   35f3c:	cmp	r3, #0
   35f40:	moveq	r3, #1
   35f44:	movne	r3, #0
   35f48:	uxtb	r3, r3
   35f4c:	str	r3, [fp, #-12]
   35f50:	ldr	r3, [fp, #-12]
   35f54:	cmp	r3, #0
   35f58:	bne	35f64 <flatcc_verify_union_field@@Base+0x94>
   35f5c:	mov	r3, #23
   35f60:	b	36128 <flatcc_verify_union_field@@Base+0x258>
   35f64:	ldr	r3, [fp, #-72]	; 0xffffffb8
   35f68:	cmp	r3, #0
   35f6c:	moveq	r3, #1
   35f70:	movne	r3, #0
   35f74:	uxtb	r3, r3
   35f78:	str	r3, [fp, #-16]
   35f7c:	ldr	r3, [fp, #-16]
   35f80:	cmp	r3, #0
   35f84:	bne	35f90 <flatcc_verify_union_field@@Base+0xc0>
   35f88:	mov	r3, #21
   35f8c:	b	36128 <flatcc_verify_union_field@@Base+0x258>
   35f90:	mov	r3, #0
   35f94:	b	36128 <flatcc_verify_union_field@@Base+0x258>
   35f98:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   35f9c:	sub	r3, r3, #1
   35fa0:	uxth	r1, r3
   35fa4:	mov	r3, #1
   35fa8:	str	r3, [sp]
   35fac:	mov	r3, #1
   35fb0:	mov	r2, #0
   35fb4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35fb8:	bl	3454c <flatcc_verify_error_string@@Base+0x764>
   35fbc:	mov	r3, r0
   35fc0:	cmp	r3, #0
   35fc4:	beq	35ff4 <flatcc_verify_union_field@@Base+0x124>
   35fc8:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   35fcc:	sub	r3, r3, #1
   35fd0:	uxth	r1, r3
   35fd4:	mov	r3, #1
   35fd8:	str	r3, [sp]
   35fdc:	mov	r3, #1
   35fe0:	mov	r2, #0
   35fe4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35fe8:	bl	3454c <flatcc_verify_error_string@@Base+0x764>
   35fec:	mov	r3, r0
   35ff0:	b	36128 <flatcc_verify_union_field@@Base+0x258>
   35ff4:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   35ff8:	mov	r1, r3
   35ffc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36000:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   36004:	mov	r3, r0
   36008:	strh	r3, [fp, #-8]
   3600c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36010:	ldr	r2, [r3]
   36014:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36018:	ldr	r1, [r3, #16]
   3601c:	ldrh	r3, [fp, #-6]
   36020:	add	r3, r1, r3
   36024:	add	r3, r2, r3
   36028:	str	r3, [fp, #-20]	; 0xffffffec
   3602c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36030:	ldrb	r3, [r3]
   36034:	cmp	r3, #0
   36038:	bne	36048 <flatcc_verify_union_field@@Base+0x178>
   3603c:	ldrh	r3, [fp, #-8]
   36040:	cmp	r3, #0
   36044:	bne	36050 <flatcc_verify_union_field@@Base+0x180>
   36048:	mov	r3, #1
   3604c:	b	36054 <flatcc_verify_union_field@@Base+0x184>
   36050:	mov	r3, #0
   36054:	str	r3, [fp, #-24]	; 0xffffffe8
   36058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3605c:	cmp	r3, #0
   36060:	bne	3606c <flatcc_verify_union_field@@Base+0x19c>
   36064:	mov	r3, #24
   36068:	b	36128 <flatcc_verify_union_field@@Base+0x258>
   3606c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36070:	ldrb	r3, [r3]
   36074:	cmp	r3, #0
   36078:	bne	36084 <flatcc_verify_union_field@@Base+0x1b4>
   3607c:	mov	r3, #0
   36080:	b	36128 <flatcc_verify_union_field@@Base+0x258>
   36084:	sub	r3, fp, #32
   36088:	ldrh	r1, [fp, #-66]	; 0xffffffbe
   3608c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   36090:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36094:	bl	346b0 <flatcc_verify_error_string@@Base+0x8c8>
   36098:	str	r0, [fp, #-28]	; 0xffffffe4
   3609c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   360a0:	cmp	r3, #0
   360a4:	bne	360b4 <flatcc_verify_union_field@@Base+0x1e4>
   360a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   360ac:	cmp	r3, #0
   360b0:	bne	360bc <flatcc_verify_union_field@@Base+0x1ec>
   360b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   360b8:	b	36128 <flatcc_verify_union_field@@Base+0x258>
   360bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   360c0:	ldr	r3, [r3]
   360c4:	str	r3, [fp, #-56]	; 0xffffffc8
   360c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   360cc:	ldr	r3, [r3, #4]
   360d0:	str	r3, [fp, #-52]	; 0xffffffcc
   360d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   360d8:	ldr	r3, [r3, #8]
   360dc:	str	r3, [fp, #-48]	; 0xffffffd0
   360e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   360e4:	str	r3, [fp, #-40]	; 0xffffffd8
   360e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   360ec:	ldr	r3, [r3]
   360f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   360f4:	mov	r1, r2
   360f8:	mov	r0, r3
   360fc:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   36100:	mov	r3, r0
   36104:	str	r3, [fp, #-36]	; 0xffffffdc
   36108:	ldr	r3, [fp, #-20]	; 0xffffffec
   3610c:	ldrb	r3, [r3]
   36110:	strb	r3, [fp, #-44]	; 0xffffffd4
   36114:	sub	r2, fp, #56	; 0x38
   36118:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3611c:	mov	r0, r2
   36120:	blx	r3
   36124:	mov	r3, r0
   36128:	mov	r0, r3
   3612c:	sub	sp, fp, #4
   36130:	ldr	fp, [sp]
   36134:	add	sp, sp, #4
   36138:	pop	{pc}		; (ldr pc, [sp], #4)

0003613c <flatcc_verify_union_vector_field@@Base>:
   3613c:	strd	r4, [sp, #-20]!	; 0xffffffec
   36140:	str	r6, [sp, #8]
   36144:	str	fp, [sp, #12]
   36148:	str	lr, [sp, #16]
   3614c:	add	fp, sp, #16
   36150:	sub	sp, sp, #68	; 0x44
   36154:	str	r0, [fp, #-56]	; 0xffffffc8
   36158:	str	r2, [fp, #-64]	; 0xffffffc0
   3615c:	str	r3, [fp, #-68]	; 0xffffffbc
   36160:	mov	r3, r1
   36164:	strh	r3, [fp, #-58]	; 0xffffffc6
   36168:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   3616c:	sub	r3, r3, #1
   36170:	uxth	r3, r3
   36174:	mov	r1, r3
   36178:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3617c:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   36180:	mov	r3, r0
   36184:	strh	r3, [fp, #-22]	; 0xffffffea
   36188:	ldrh	r3, [fp, #-22]	; 0xffffffea
   3618c:	cmp	r3, #0
   36190:	bne	361e4 <flatcc_verify_union_vector_field@@Base+0xa8>
   36194:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   36198:	mov	r1, r3
   3619c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   361a0:	bl	34458 <flatcc_verify_error_string@@Base+0x670>
   361a4:	mov	r3, r0
   361a8:	strh	r3, [fp, #-24]	; 0xffffffe8
   361ac:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   361b0:	cmp	r3, #0
   361b4:	bne	361e4 <flatcc_verify_union_vector_field@@Base+0xa8>
   361b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   361bc:	cmp	r3, #0
   361c0:	moveq	r3, #1
   361c4:	movne	r3, #0
   361c8:	uxtb	r3, r3
   361cc:	str	r3, [fp, #-28]	; 0xffffffe4
   361d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   361d4:	cmp	r3, #0
   361d8:	bne	361e4 <flatcc_verify_union_vector_field@@Base+0xa8>
   361dc:	mov	r3, #22
   361e0:	b	36364 <flatcc_verify_union_vector_field@@Base+0x228>
   361e4:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   361e8:	sub	r3, r3, #1
   361ec:	uxth	r1, r3
   361f0:	mvn	r3, #0
   361f4:	str	r3, [sp, #4]
   361f8:	mov	r3, #1
   361fc:	str	r3, [sp]
   36200:	mov	r3, #1
   36204:	ldr	r2, [fp, #-64]	; 0xffffffc0
   36208:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3620c:	bl	35324 <flatcc_verify_vector_field@@Base>
   36210:	mov	r3, r0
   36214:	cmp	r3, #0
   36218:	beq	36250 <flatcc_verify_union_vector_field@@Base+0x114>
   3621c:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   36220:	sub	r3, r3, #1
   36224:	uxth	r1, r3
   36228:	mvn	r3, #0
   3622c:	str	r3, [sp, #4]
   36230:	mov	r3, #1
   36234:	str	r3, [sp]
   36238:	mov	r3, #1
   3623c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   36240:	ldr	r0, [fp, #-56]	; 0xffffffc8
   36244:	bl	35324 <flatcc_verify_vector_field@@Base>
   36248:	mov	r3, r0
   3624c:	b	36364 <flatcc_verify_union_vector_field@@Base+0x228>
   36250:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   36254:	sub	r3, r3, #1
   36258:	uxth	r3, r3
   3625c:	mov	r1, r3
   36260:	ldr	r0, [fp, #-56]	; 0xffffffc8
   36264:	bl	344d4 <flatcc_verify_error_string@@Base+0x6ec>
   36268:	str	r0, [fp, #-32]	; 0xffffffe0
   3626c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36270:	cmp	r3, #0
   36274:	bne	36280 <flatcc_verify_union_vector_field@@Base+0x144>
   36278:	mov	r3, #0
   3627c:	b	36364 <flatcc_verify_union_vector_field@@Base+0x228>
   36280:	mov	r1, #0
   36284:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36288:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   3628c:	mov	r2, r0
   36290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36294:	add	r3, r2, r3
   36298:	str	r3, [fp, #-32]	; 0xffffffe0
   3629c:	mov	r1, #0
   362a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   362a4:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   362a8:	str	r0, [fp, #-36]	; 0xffffffdc
   362ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   362b0:	add	r3, r3, #4
   362b4:	str	r3, [fp, #-32]	; 0xffffffe0
   362b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   362bc:	str	r3, [fp, #-40]	; 0xffffffd8
   362c0:	sub	r3, fp, #48	; 0x30
   362c4:	ldrh	r1, [fp, #-58]	; 0xffffffc6
   362c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   362cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   362d0:	bl	346b0 <flatcc_verify_error_string@@Base+0x8c8>
   362d4:	str	r0, [fp, #-44]	; 0xffffffd4
   362d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   362dc:	cmp	r3, #0
   362e0:	bne	362f0 <flatcc_verify_union_vector_field@@Base+0x1b4>
   362e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   362e8:	cmp	r3, #0
   362ec:	bne	362f8 <flatcc_verify_union_vector_field@@Base+0x1bc>
   362f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   362f4:	b	36364 <flatcc_verify_union_vector_field@@Base+0x228>
   362f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   362fc:	ldr	r4, [r3]
   36300:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36304:	ldr	r5, [r3, #4]
   36308:	ldr	r6, [fp, #-48]	; 0xffffffd0
   3630c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36310:	ldr	r3, [r3]
   36314:	ldr	r2, [fp, #-48]	; 0xffffffd0
   36318:	mov	r1, r2
   3631c:	mov	r0, r3
   36320:	bl	34108 <flatcc_verify_error_string@@Base+0x320>
   36324:	mov	r1, r0
   36328:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3632c:	ldr	r3, [r3, #8]
   36330:	ldr	r2, [fp, #-68]	; 0xffffffbc
   36334:	str	r2, [sp, #12]
   36338:	str	r3, [sp, #8]
   3633c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36340:	str	r3, [sp, #4]
   36344:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36348:	str	r3, [sp]
   3634c:	mov	r3, r1
   36350:	mov	r2, r6
   36354:	mov	r1, r5
   36358:	mov	r0, r4
   3635c:	bl	34f70 <flatcc_verify_error_string@@Base+0x1188>
   36360:	mov	r3, r0
   36364:	mov	r0, r3
   36368:	sub	sp, fp, #16
   3636c:	ldrd	r4, [sp]
   36370:	ldr	r6, [sp, #8]
   36374:	ldr	fp, [sp, #12]
   36378:	add	sp, sp, #16
   3637c:	pop	{pc}		; (ldr pc, [sp], #4)
   36380:	push	{fp}		; (str fp, [sp, #-4]!)
   36384:	add	fp, sp, #0
   36388:	sub	sp, sp, #12
   3638c:	mov	r3, r0
   36390:	strb	r3, [fp, #-5]
   36394:	ldrb	r3, [fp, #-5]
   36398:	mov	r0, r3
   3639c:	add	sp, fp, #0
   363a0:	pop	{fp}		; (ldr fp, [sp], #4)
   363a4:	bx	lr
   363a8:	str	fp, [sp, #-8]!
   363ac:	str	lr, [sp, #4]
   363b0:	add	fp, sp, #4
   363b4:	sub	sp, sp, #8
   363b8:	str	r0, [fp, #-8]
   363bc:	mov	r3, r1
   363c0:	strb	r3, [fp, #-9]
   363c4:	ldrb	r3, [fp, #-9]
   363c8:	mov	r0, r3
   363cc:	bl	36380 <flatcc_verify_union_vector_field@@Base+0x244>
   363d0:	mov	r3, r0
   363d4:	mov	r2, r3
   363d8:	ldr	r3, [fp, #-8]
   363dc:	strb	r2, [r3]
   363e0:	nop	{0}
   363e4:	sub	sp, fp, #4
   363e8:	ldr	fp, [sp]
   363ec:	add	sp, sp, #4
   363f0:	pop	{pc}		; (ldr pc, [sp], #4)
   363f4:	str	fp, [sp, #-8]!
   363f8:	str	lr, [sp, #4]
   363fc:	add	fp, sp, #4
   36400:	sub	sp, sp, #16
   36404:	str	r0, [fp, #-8]
   36408:	str	r1, [fp, #-12]
   3640c:	str	r2, [fp, #-16]
   36410:	str	r3, [fp, #-20]	; 0xffffffec
   36414:	mov	r2, #40	; 0x28
   36418:	mov	r1, #0
   3641c:	ldr	r0, [fp, #-8]
   36420:	bl	14594 <memset@plt>
   36424:	ldr	r3, [fp, #-8]
   36428:	ldr	r2, [fp, #-12]
   3642c:	str	r2, [r3]
   36430:	ldr	r3, [fp, #-8]
   36434:	ldr	r2, [fp, #-16]
   36438:	str	r2, [r3, #4]
   3643c:	ldr	r3, [fp, #-8]
   36440:	mov	r2, #1
   36444:	str	r2, [r3, #12]
   36448:	ldr	r3, [fp, #-8]
   3644c:	ldr	r2, [fp, #4]
   36450:	str	r2, [r3, #8]
   36454:	ldr	r3, [fp, #-8]
   36458:	ldr	r2, [fp, #-16]
   3645c:	str	r2, [r3, #24]
   36460:	ldr	r3, [fp, #-8]
   36464:	ldr	r2, [fp, #-20]	; 0xffffffec
   36468:	str	r2, [r3, #28]
   3646c:	ldr	r3, [fp, #-8]
   36470:	ldr	r2, [fp, #-16]
   36474:	str	r2, [r3, #32]
   36478:	nop	{0}
   3647c:	sub	sp, fp, #4
   36480:	ldr	fp, [sp]
   36484:	add	sp, sp, #4
   36488:	pop	{pc}		; (ldr pc, [sp], #4)
   3648c:	str	fp, [sp, #-8]!
   36490:	str	lr, [sp, #4]
   36494:	add	fp, sp, #4
   36498:	sub	sp, sp, #16
   3649c:	str	r0, [fp, #-8]
   364a0:	str	r1, [fp, #-12]
   364a4:	str	r2, [fp, #-16]
   364a8:	ldr	r2, [fp, #-16]
   364ac:	ldr	r3, [fp, #-12]
   364b0:	sub	r3, r2, r3
   364b4:	cmp	r3, #1
   364b8:	ble	36504 <flatcc_verify_union_vector_field@@Base+0x3c8>
   364bc:	ldr	r3, [fp, #-12]
   364c0:	ldrb	r3, [r3]
   364c4:	cmp	r3, #32
   364c8:	bls	364d4 <flatcc_verify_union_vector_field@@Base+0x398>
   364cc:	ldr	r3, [fp, #-12]
   364d0:	b	36518 <flatcc_verify_union_vector_field@@Base+0x3dc>
   364d4:	ldr	r3, [fp, #-12]
   364d8:	ldrb	r3, [r3]
   364dc:	cmp	r3, #32
   364e0:	bne	36504 <flatcc_verify_union_vector_field@@Base+0x3c8>
   364e4:	ldr	r3, [fp, #-12]
   364e8:	add	r3, r3, #1
   364ec:	ldrb	r3, [r3]
   364f0:	cmp	r3, #32
   364f4:	bls	36504 <flatcc_verify_union_vector_field@@Base+0x3c8>
   364f8:	ldr	r3, [fp, #-12]
   364fc:	add	r3, r3, #1
   36500:	b	36518 <flatcc_verify_union_vector_field@@Base+0x3dc>
   36504:	ldr	r2, [fp, #-16]
   36508:	ldr	r1, [fp, #-12]
   3650c:	ldr	r0, [fp, #-8]
   36510:	bl	3b948 <flatcc_json_parser_space_ext@@Base>
   36514:	mov	r3, r0
   36518:	mov	r0, r3
   3651c:	sub	sp, fp, #4
   36520:	ldr	fp, [sp]
   36524:	add	sp, sp, #4
   36528:	pop	{pc}		; (ldr pc, [sp], #4)
   3652c:	str	fp, [sp, #-8]!
   36530:	str	lr, [sp, #4]
   36534:	add	fp, sp, #4
   36538:	sub	sp, sp, #16
   3653c:	str	r0, [fp, #-8]
   36540:	str	r1, [fp, #-12]
   36544:	str	r2, [fp, #-16]
   36548:	ldr	r2, [fp, #-12]
   3654c:	ldr	r3, [fp, #-16]
   36550:	cmp	r2, r3
   36554:	beq	36568 <flatcc_verify_union_vector_field@@Base+0x42c>
   36558:	ldr	r3, [fp, #-12]
   3655c:	ldrb	r3, [r3]
   36560:	cmp	r3, #34	; 0x22
   36564:	beq	36584 <flatcc_verify_union_vector_field@@Base+0x448>
   36568:	mov	r3, #16
   3656c:	ldr	r2, [fp, #-16]
   36570:	ldr	r1, [fp, #-12]
   36574:	ldr	r0, [fp, #-8]
   36578:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3657c:	mov	r3, r0
   36580:	b	36594 <flatcc_verify_union_vector_field@@Base+0x458>
   36584:	ldr	r3, [fp, #-12]
   36588:	add	r3, r3, #1
   3658c:	str	r3, [fp, #-12]
   36590:	ldr	r3, [fp, #-12]
   36594:	mov	r0, r3
   36598:	sub	sp, fp, #4
   3659c:	ldr	fp, [sp]
   365a0:	add	sp, sp, #4
   365a4:	pop	{pc}		; (ldr pc, [sp], #4)
   365a8:	str	fp, [sp, #-8]!
   365ac:	str	lr, [sp, #4]
   365b0:	add	fp, sp, #4
   365b4:	sub	sp, sp, #16
   365b8:	str	r0, [fp, #-8]
   365bc:	str	r1, [fp, #-12]
   365c0:	str	r2, [fp, #-16]
   365c4:	ldr	r2, [fp, #-12]
   365c8:	ldr	r3, [fp, #-16]
   365cc:	cmp	r2, r3
   365d0:	beq	365e4 <flatcc_verify_union_vector_field@@Base+0x4a8>
   365d4:	ldr	r3, [fp, #-12]
   365d8:	ldrb	r3, [r3]
   365dc:	cmp	r3, #34	; 0x22
   365e0:	beq	36600 <flatcc_verify_union_vector_field@@Base+0x4c4>
   365e4:	mov	r3, #20
   365e8:	ldr	r2, [fp, #-16]
   365ec:	ldr	r1, [fp, #-12]
   365f0:	ldr	r0, [fp, #-8]
   365f4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   365f8:	mov	r3, r0
   365fc:	b	36610 <flatcc_verify_union_vector_field@@Base+0x4d4>
   36600:	ldr	r3, [fp, #-12]
   36604:	add	r3, r3, #1
   36608:	str	r3, [fp, #-12]
   3660c:	ldr	r3, [fp, #-12]
   36610:	mov	r0, r3
   36614:	sub	sp, fp, #4
   36618:	ldr	fp, [sp]
   3661c:	add	sp, sp, #4
   36620:	pop	{pc}		; (ldr pc, [sp], #4)
   36624:	str	fp, [sp, #-8]!
   36628:	str	lr, [sp, #4]
   3662c:	add	fp, sp, #4
   36630:	sub	sp, sp, #16
   36634:	str	r0, [fp, #-8]
   36638:	str	r1, [fp, #-12]
   3663c:	str	r2, [fp, #-16]
   36640:	ldr	r2, [fp, #-12]
   36644:	ldr	r3, [fp, #-16]
   36648:	cmp	r2, r3
   3664c:	bne	36658 <flatcc_verify_union_vector_field@@Base+0x51c>
   36650:	ldr	r3, [fp, #-12]
   36654:	b	36694 <flatcc_verify_union_vector_field@@Base+0x558>
   36658:	ldr	r3, [fp, #-12]
   3665c:	ldrb	r3, [r3]
   36660:	cmp	r3, #34	; 0x22
   36664:	bne	3667c <flatcc_verify_union_vector_field@@Base+0x540>
   36668:	ldr	r3, [fp, #-12]
   3666c:	add	r3, r3, #1
   36670:	str	r3, [fp, #-12]
   36674:	ldr	r3, [fp, #-12]
   36678:	b	36694 <flatcc_verify_union_vector_field@@Base+0x558>
   3667c:	mov	r3, #5
   36680:	ldr	r2, [fp, #-16]
   36684:	ldr	r1, [fp, #-12]
   36688:	ldr	r0, [fp, #-8]
   3668c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36690:	mov	r3, r0
   36694:	mov	r0, r3
   36698:	sub	sp, fp, #4
   3669c:	ldr	fp, [sp]
   366a0:	add	sp, sp, #4
   366a4:	pop	{pc}		; (ldr pc, [sp], #4)
   366a8:	str	fp, [sp, #-8]!
   366ac:	str	lr, [sp, #4]
   366b0:	add	fp, sp, #4
   366b4:	sub	sp, sp, #24
   366b8:	str	r0, [fp, #-16]
   366bc:	str	r1, [fp, #-20]	; 0xffffffec
   366c0:	str	r2, [fp, #-24]	; 0xffffffe8
   366c4:	mov	r3, #0
   366c8:	strb	r3, [fp, #-5]
   366cc:	b	3670c <flatcc_verify_union_vector_field@@Base+0x5d0>
   366d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   366d4:	ldrb	r3, [r3]
   366d8:	cmp	r3, #92	; 0x5c
   366dc:	bne	36700 <flatcc_verify_union_vector_field@@Base+0x5c4>
   366e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   366e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   366e8:	sub	r3, r2, r3
   366ec:	cmp	r3, #1
   366f0:	ble	36730 <flatcc_verify_union_vector_field@@Base+0x5f4>
   366f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   366f8:	add	r3, r3, #1
   366fc:	str	r3, [fp, #-20]	; 0xffffffec
   36700:	ldr	r3, [fp, #-20]	; 0xffffffec
   36704:	add	r3, r3, #1
   36708:	str	r3, [fp, #-20]	; 0xffffffec
   3670c:	ldr	r2, [fp, #-20]	; 0xffffffec
   36710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36714:	cmp	r2, r3
   36718:	beq	36734 <flatcc_verify_union_vector_field@@Base+0x5f8>
   3671c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36720:	ldrb	r3, [r3]
   36724:	cmp	r3, #34	; 0x22
   36728:	bne	366d0 <flatcc_verify_union_vector_field@@Base+0x594>
   3672c:	b	36734 <flatcc_verify_union_vector_field@@Base+0x5f8>
   36730:	nop	{0}
   36734:	ldr	r2, [fp, #-20]	; 0xffffffec
   36738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3673c:	cmp	r2, r3
   36740:	beq	36754 <flatcc_verify_union_vector_field@@Base+0x618>
   36744:	ldr	r3, [fp, #-20]	; 0xffffffec
   36748:	ldrb	r3, [r3]
   3674c:	cmp	r3, #34	; 0x22
   36750:	beq	36770 <flatcc_verify_union_vector_field@@Base+0x634>
   36754:	mov	r3, #20
   36758:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3675c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36760:	ldr	r0, [fp, #-16]
   36764:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36768:	mov	r3, r0
   3676c:	b	36780 <flatcc_verify_union_vector_field@@Base+0x644>
   36770:	ldr	r3, [fp, #-20]	; 0xffffffec
   36774:	add	r3, r3, #1
   36778:	str	r3, [fp, #-20]	; 0xffffffec
   3677c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36780:	mov	r0, r3
   36784:	sub	sp, fp, #4
   36788:	ldr	fp, [sp]
   3678c:	add	sp, sp, #4
   36790:	pop	{pc}		; (ldr pc, [sp], #4)
   36794:	str	fp, [sp, #-8]!
   36798:	str	lr, [sp, #4]
   3679c:	add	fp, sp, #4
   367a0:	sub	sp, sp, #16
   367a4:	str	r0, [fp, #-8]
   367a8:	str	r1, [fp, #-12]
   367ac:	str	r2, [fp, #-16]
   367b0:	ldr	r2, [fp, #-16]
   367b4:	ldr	r1, [fp, #-12]
   367b8:	ldr	r0, [fp, #-8]
   367bc:	bl	36624 <flatcc_verify_union_vector_field@@Base+0x4e8>
   367c0:	str	r0, [fp, #-12]
   367c4:	ldr	r2, [fp, #-16]
   367c8:	ldr	r1, [fp, #-12]
   367cc:	ldr	r0, [fp, #-8]
   367d0:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   367d4:	str	r0, [fp, #-12]
   367d8:	ldr	r3, [fp, #-12]
   367dc:	mov	r0, r3
   367e0:	sub	sp, fp, #4
   367e4:	ldr	fp, [sp]
   367e8:	add	sp, sp, #4
   367ec:	pop	{pc}		; (ldr pc, [sp], #4)
   367f0:	str	fp, [sp, #-8]!
   367f4:	str	lr, [sp, #4]
   367f8:	add	fp, sp, #4
   367fc:	sub	sp, sp, #16
   36800:	str	r0, [fp, #-8]
   36804:	str	r1, [fp, #-12]
   36808:	str	r2, [fp, #-16]
   3680c:	str	r3, [fp, #-20]	; 0xffffffec
   36810:	ldr	r2, [fp, #-16]
   36814:	ldr	r1, [fp, #-12]
   36818:	ldr	r0, [fp, #-8]
   3681c:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   36820:	str	r0, [fp, #-12]
   36824:	ldr	r2, [fp, #-12]
   36828:	ldr	r3, [fp, #-16]
   3682c:	cmp	r2, r3
   36830:	bne	36848 <flatcc_verify_union_vector_field@@Base+0x70c>
   36834:	ldr	r3, [fp, #-20]	; 0xffffffec
   36838:	mov	r2, #0
   3683c:	str	r2, [r3]
   36840:	ldr	r3, [fp, #-12]
   36844:	b	36950 <flatcc_verify_union_vector_field@@Base+0x814>
   36848:	ldr	r3, [fp, #-12]
   3684c:	ldrb	r3, [r3]
   36850:	cmp	r3, #44	; 0x2c
   36854:	beq	368b0 <flatcc_verify_union_vector_field@@Base+0x774>
   36858:	ldr	r3, [fp, #-20]	; 0xffffffec
   3685c:	mov	r2, #0
   36860:	str	r2, [r3]
   36864:	ldr	r3, [fp, #-12]
   36868:	ldrb	r3, [r3]
   3686c:	cmp	r3, #125	; 0x7d
   36870:	beq	36890 <flatcc_verify_union_vector_field@@Base+0x754>
   36874:	mov	r3, #10
   36878:	ldr	r2, [fp, #-16]
   3687c:	ldr	r1, [fp, #-12]
   36880:	ldr	r0, [fp, #-8]
   36884:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36888:	mov	r3, r0
   3688c:	b	36950 <flatcc_verify_union_vector_field@@Base+0x814>
   36890:	ldr	r3, [fp, #-12]
   36894:	add	r3, r3, #1
   36898:	ldr	r2, [fp, #-16]
   3689c:	mov	r1, r3
   368a0:	ldr	r0, [fp, #-8]
   368a4:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   368a8:	mov	r3, r0
   368ac:	b	36950 <flatcc_verify_union_vector_field@@Base+0x814>
   368b0:	ldr	r3, [fp, #-12]
   368b4:	add	r3, r3, #1
   368b8:	ldr	r2, [fp, #-16]
   368bc:	mov	r1, r3
   368c0:	ldr	r0, [fp, #-8]
   368c4:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   368c8:	str	r0, [fp, #-12]
   368cc:	ldr	r2, [fp, #-12]
   368d0:	ldr	r3, [fp, #-16]
   368d4:	cmp	r2, r3
   368d8:	bne	36904 <flatcc_verify_union_vector_field@@Base+0x7c8>
   368dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   368e0:	mov	r2, #0
   368e4:	str	r2, [r3]
   368e8:	mov	r3, #10
   368ec:	ldr	r2, [fp, #-16]
   368f0:	ldr	r1, [fp, #-12]
   368f4:	ldr	r0, [fp, #-8]
   368f8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   368fc:	mov	r3, r0
   36900:	b	36950 <flatcc_verify_union_vector_field@@Base+0x814>
   36904:	ldr	r3, [fp, #-12]
   36908:	ldrb	r3, [r3]
   3690c:	cmp	r3, #125	; 0x7d
   36910:	bne	36940 <flatcc_verify_union_vector_field@@Base+0x804>
   36914:	ldr	r3, [fp, #-20]	; 0xffffffec
   36918:	mov	r2, #0
   3691c:	str	r2, [r3]
   36920:	ldr	r3, [fp, #-12]
   36924:	add	r3, r3, #1
   36928:	ldr	r2, [fp, #-16]
   3692c:	mov	r1, r3
   36930:	ldr	r0, [fp, #-8]
   36934:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   36938:	mov	r3, r0
   3693c:	b	36950 <flatcc_verify_union_vector_field@@Base+0x814>
   36940:	ldr	r3, [fp, #-20]	; 0xffffffec
   36944:	mov	r2, #1
   36948:	str	r2, [r3]
   3694c:	ldr	r3, [fp, #-12]
   36950:	mov	r0, r3
   36954:	sub	sp, fp, #4
   36958:	ldr	fp, [sp]
   3695c:	add	sp, sp, #4
   36960:	pop	{pc}		; (ldr pc, [sp], #4)
   36964:	str	fp, [sp, #-8]!
   36968:	str	lr, [sp, #4]
   3696c:	add	fp, sp, #4
   36970:	sub	sp, sp, #16
   36974:	str	r0, [fp, #-8]
   36978:	str	r1, [fp, #-12]
   3697c:	str	r2, [fp, #-16]
   36980:	str	r3, [fp, #-20]	; 0xffffffec
   36984:	ldr	r2, [fp, #-12]
   36988:	ldr	r3, [fp, #-16]
   3698c:	cmp	r2, r3
   36990:	beq	369a4 <flatcc_verify_union_vector_field@@Base+0x868>
   36994:	ldr	r3, [fp, #-12]
   36998:	ldrb	r3, [r3]
   3699c:	cmp	r3, #91	; 0x5b
   369a0:	beq	369cc <flatcc_verify_union_vector_field@@Base+0x890>
   369a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   369a8:	mov	r2, #0
   369ac:	str	r2, [r3]
   369b0:	mov	r3, #22
   369b4:	ldr	r2, [fp, #-16]
   369b8:	ldr	r1, [fp, #-12]
   369bc:	ldr	r0, [fp, #-8]
   369c0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   369c4:	mov	r3, r0
   369c8:	b	36a44 <flatcc_verify_union_vector_field@@Base+0x908>
   369cc:	ldr	r3, [fp, #-12]
   369d0:	add	r3, r3, #1
   369d4:	ldr	r2, [fp, #-16]
   369d8:	mov	r1, r3
   369dc:	ldr	r0, [fp, #-8]
   369e0:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   369e4:	str	r0, [fp, #-12]
   369e8:	ldr	r2, [fp, #-12]
   369ec:	ldr	r3, [fp, #-16]
   369f0:	cmp	r2, r3
   369f4:	beq	36a34 <flatcc_verify_union_vector_field@@Base+0x8f8>
   369f8:	ldr	r3, [fp, #-12]
   369fc:	ldrb	r3, [r3]
   36a00:	cmp	r3, #93	; 0x5d
   36a04:	bne	36a34 <flatcc_verify_union_vector_field@@Base+0x8f8>
   36a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   36a0c:	mov	r2, #0
   36a10:	str	r2, [r3]
   36a14:	ldr	r3, [fp, #-12]
   36a18:	add	r3, r3, #1
   36a1c:	ldr	r2, [fp, #-16]
   36a20:	mov	r1, r3
   36a24:	ldr	r0, [fp, #-8]
   36a28:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   36a2c:	mov	r3, r0
   36a30:	b	36a44 <flatcc_verify_union_vector_field@@Base+0x908>
   36a34:	ldr	r3, [fp, #-20]	; 0xffffffec
   36a38:	mov	r2, #1
   36a3c:	str	r2, [r3]
   36a40:	ldr	r3, [fp, #-12]
   36a44:	mov	r0, r3
   36a48:	sub	sp, fp, #4
   36a4c:	ldr	fp, [sp]
   36a50:	add	sp, sp, #4
   36a54:	pop	{pc}		; (ldr pc, [sp], #4)
   36a58:	str	fp, [sp, #-8]!
   36a5c:	str	lr, [sp, #4]
   36a60:	add	fp, sp, #4
   36a64:	sub	sp, sp, #16
   36a68:	str	r0, [fp, #-8]
   36a6c:	str	r1, [fp, #-12]
   36a70:	str	r2, [fp, #-16]
   36a74:	str	r3, [fp, #-20]	; 0xffffffec
   36a78:	ldr	r2, [fp, #-16]
   36a7c:	ldr	r1, [fp, #-12]
   36a80:	ldr	r0, [fp, #-8]
   36a84:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   36a88:	str	r0, [fp, #-12]
   36a8c:	ldr	r2, [fp, #-12]
   36a90:	ldr	r3, [fp, #-16]
   36a94:	cmp	r2, r3
   36a98:	bne	36ab0 <flatcc_verify_union_vector_field@@Base+0x974>
   36a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36aa0:	mov	r2, #0
   36aa4:	str	r2, [r3]
   36aa8:	ldr	r3, [fp, #-12]
   36aac:	b	36bb8 <flatcc_verify_union_vector_field@@Base+0xa7c>
   36ab0:	ldr	r3, [fp, #-12]
   36ab4:	ldrb	r3, [r3]
   36ab8:	cmp	r3, #44	; 0x2c
   36abc:	beq	36b18 <flatcc_verify_union_vector_field@@Base+0x9dc>
   36ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   36ac4:	mov	r2, #0
   36ac8:	str	r2, [r3]
   36acc:	ldr	r3, [fp, #-12]
   36ad0:	ldrb	r3, [r3]
   36ad4:	cmp	r3, #93	; 0x5d
   36ad8:	beq	36af8 <flatcc_verify_union_vector_field@@Base+0x9bc>
   36adc:	mov	r3, #9
   36ae0:	ldr	r2, [fp, #-16]
   36ae4:	ldr	r1, [fp, #-12]
   36ae8:	ldr	r0, [fp, #-8]
   36aec:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36af0:	mov	r3, r0
   36af4:	b	36bb8 <flatcc_verify_union_vector_field@@Base+0xa7c>
   36af8:	ldr	r3, [fp, #-12]
   36afc:	add	r3, r3, #1
   36b00:	ldr	r2, [fp, #-16]
   36b04:	mov	r1, r3
   36b08:	ldr	r0, [fp, #-8]
   36b0c:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   36b10:	mov	r3, r0
   36b14:	b	36bb8 <flatcc_verify_union_vector_field@@Base+0xa7c>
   36b18:	ldr	r3, [fp, #-12]
   36b1c:	add	r3, r3, #1
   36b20:	ldr	r2, [fp, #-16]
   36b24:	mov	r1, r3
   36b28:	ldr	r0, [fp, #-8]
   36b2c:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   36b30:	str	r0, [fp, #-12]
   36b34:	ldr	r2, [fp, #-12]
   36b38:	ldr	r3, [fp, #-16]
   36b3c:	cmp	r2, r3
   36b40:	bne	36b6c <flatcc_verify_union_vector_field@@Base+0xa30>
   36b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   36b48:	mov	r2, #0
   36b4c:	str	r2, [r3]
   36b50:	mov	r3, #9
   36b54:	ldr	r2, [fp, #-16]
   36b58:	ldr	r1, [fp, #-12]
   36b5c:	ldr	r0, [fp, #-8]
   36b60:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36b64:	mov	r3, r0
   36b68:	b	36bb8 <flatcc_verify_union_vector_field@@Base+0xa7c>
   36b6c:	ldr	r3, [fp, #-12]
   36b70:	ldrb	r3, [r3]
   36b74:	cmp	r3, #93	; 0x5d
   36b78:	bne	36ba8 <flatcc_verify_union_vector_field@@Base+0xa6c>
   36b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36b80:	mov	r2, #0
   36b84:	str	r2, [r3]
   36b88:	ldr	r3, [fp, #-12]
   36b8c:	add	r3, r3, #1
   36b90:	ldr	r2, [fp, #-16]
   36b94:	mov	r1, r3
   36b98:	ldr	r0, [fp, #-8]
   36b9c:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   36ba0:	mov	r3, r0
   36ba4:	b	36bb8 <flatcc_verify_union_vector_field@@Base+0xa7c>
   36ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   36bac:	mov	r2, #1
   36bb0:	str	r2, [r3]
   36bb4:	ldr	r3, [fp, #-12]
   36bb8:	mov	r0, r3
   36bbc:	sub	sp, fp, #4
   36bc0:	ldr	fp, [sp]
   36bc4:	add	sp, sp, #4
   36bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   36bcc:	str	fp, [sp, #-8]!
   36bd0:	str	lr, [sp, #4]
   36bd4:	add	fp, sp, #4
   36bd8:	sub	sp, sp, #16
   36bdc:	str	r0, [fp, #-8]
   36be0:	str	r1, [fp, #-12]
   36be4:	str	r2, [fp, #-16]
   36be8:	str	r3, [fp, #-20]	; 0xffffffec
   36bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   36bf0:	cmp	r3, #0
   36bf4:	beq	36c14 <flatcc_verify_union_vector_field@@Base+0xad8>
   36bf8:	mov	r3, #8
   36bfc:	ldr	r2, [fp, #-16]
   36c00:	ldr	r1, [fp, #-12]
   36c04:	ldr	r0, [fp, #-8]
   36c08:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36c0c:	mov	r3, r0
   36c10:	b	36c24 <flatcc_verify_union_vector_field@@Base+0xae8>
   36c14:	ldr	r1, [fp, #12]
   36c18:	ldrd	r2, [fp, #4]
   36c1c:	strd	r2, [r1]
   36c20:	ldr	r3, [fp, #-12]
   36c24:	mov	r0, r3
   36c28:	sub	sp, fp, #4
   36c2c:	ldr	fp, [sp]
   36c30:	add	sp, sp, #4
   36c34:	pop	{pc}		; (ldr pc, [sp], #4)
   36c38:	str	fp, [sp, #-8]!
   36c3c:	str	lr, [sp, #4]
   36c40:	add	fp, sp, #4
   36c44:	sub	sp, sp, #16
   36c48:	str	r0, [fp, #-8]
   36c4c:	str	r1, [fp, #-12]
   36c50:	str	r2, [fp, #-16]
   36c54:	str	r3, [fp, #-20]	; 0xffffffec
   36c58:	ldr	r3, [fp, #-20]	; 0xffffffec
   36c5c:	cmp	r3, #0
   36c60:	beq	36c80 <flatcc_verify_union_vector_field@@Base+0xb44>
   36c64:	mov	r3, #8
   36c68:	ldr	r2, [fp, #-16]
   36c6c:	ldr	r1, [fp, #-12]
   36c70:	ldr	r0, [fp, #-8]
   36c74:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36c78:	mov	r3, r0
   36c7c:	b	36cac <flatcc_verify_union_vector_field@@Base+0xb70>
   36c80:	ldr	r2, [fp, #4]
   36c84:	ldr	r3, [fp, #8]
   36c88:	orr	r3, r2, r3
   36c8c:	cmp	r3, #0
   36c90:	movne	r3, #1
   36c94:	moveq	r3, #0
   36c98:	uxtb	r3, r3
   36c9c:	mov	r2, r3
   36ca0:	ldr	r3, [fp, #12]
   36ca4:	strb	r2, [r3]
   36ca8:	ldr	r3, [fp, #-12]
   36cac:	mov	r0, r3
   36cb0:	sub	sp, fp, #4
   36cb4:	ldr	fp, [sp]
   36cb8:	add	sp, sp, #4
   36cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   36cc0:	str	fp, [sp, #-8]!
   36cc4:	str	lr, [sp, #4]
   36cc8:	add	fp, sp, #4
   36ccc:	sub	sp, sp, #16
   36cd0:	str	r0, [fp, #-8]
   36cd4:	str	r1, [fp, #-12]
   36cd8:	str	r2, [fp, #-16]
   36cdc:	str	r3, [fp, #-20]	; 0xffffffec
   36ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   36ce4:	cmp	r3, #0
   36ce8:	beq	36d08 <flatcc_verify_union_vector_field@@Base+0xbcc>
   36cec:	mov	r3, #8
   36cf0:	ldr	r2, [fp, #-16]
   36cf4:	ldr	r1, [fp, #-12]
   36cf8:	ldr	r0, [fp, #-8]
   36cfc:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36d00:	mov	r3, r0
   36d04:	b	36d4c <flatcc_verify_union_vector_field@@Base+0xc10>
   36d08:	ldrd	r2, [fp, #4]
   36d0c:	mvn	r0, #0
   36d10:	mov	r1, #0
   36d14:	cmp	r3, r1
   36d18:	cmpeq	r2, r0
   36d1c:	bls	36d3c <flatcc_verify_union_vector_field@@Base+0xc00>
   36d20:	mov	r3, #7
   36d24:	ldr	r2, [fp, #-16]
   36d28:	ldr	r1, [fp, #-12]
   36d2c:	ldr	r0, [fp, #-8]
   36d30:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36d34:	mov	r3, r0
   36d38:	b	36d4c <flatcc_verify_union_vector_field@@Base+0xc10>
   36d3c:	ldr	r2, [fp, #4]
   36d40:	ldr	r3, [fp, #12]
   36d44:	str	r2, [r3]
   36d48:	ldr	r3, [fp, #-12]
   36d4c:	mov	r0, r3
   36d50:	sub	sp, fp, #4
   36d54:	ldr	fp, [sp]
   36d58:	add	sp, sp, #4
   36d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   36d60:	str	fp, [sp, #-8]!
   36d64:	str	lr, [sp, #4]
   36d68:	add	fp, sp, #4
   36d6c:	sub	sp, sp, #16
   36d70:	str	r0, [fp, #-8]
   36d74:	str	r1, [fp, #-12]
   36d78:	str	r2, [fp, #-16]
   36d7c:	str	r3, [fp, #-20]	; 0xffffffec
   36d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   36d84:	cmp	r3, #0
   36d88:	beq	36da8 <flatcc_verify_union_vector_field@@Base+0xc6c>
   36d8c:	mov	r3, #8
   36d90:	ldr	r2, [fp, #-16]
   36d94:	ldr	r1, [fp, #-12]
   36d98:	ldr	r0, [fp, #-8]
   36d9c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36da0:	mov	r3, r0
   36da4:	b	36dec <flatcc_verify_union_vector_field@@Base+0xcb0>
   36da8:	ldrd	r2, [fp, #4]
   36dac:	movw	r0, #65535	; 0xffff
   36db0:	mov	r1, #0
   36db4:	cmp	r3, r1
   36db8:	cmpeq	r2, r0
   36dbc:	bls	36ddc <flatcc_verify_union_vector_field@@Base+0xca0>
   36dc0:	mov	r3, #7
   36dc4:	ldr	r2, [fp, #-16]
   36dc8:	ldr	r1, [fp, #-12]
   36dcc:	ldr	r0, [fp, #-8]
   36dd0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36dd4:	mov	r3, r0
   36dd8:	b	36dec <flatcc_verify_union_vector_field@@Base+0xcb0>
   36ddc:	ldrh	r2, [fp, #4]
   36de0:	ldr	r3, [fp, #12]
   36de4:	strh	r2, [r3]
   36de8:	ldr	r3, [fp, #-12]
   36dec:	mov	r0, r3
   36df0:	sub	sp, fp, #4
   36df4:	ldr	fp, [sp]
   36df8:	add	sp, sp, #4
   36dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   36e00:	str	fp, [sp, #-8]!
   36e04:	str	lr, [sp, #4]
   36e08:	add	fp, sp, #4
   36e0c:	sub	sp, sp, #16
   36e10:	str	r0, [fp, #-8]
   36e14:	str	r1, [fp, #-12]
   36e18:	str	r2, [fp, #-16]
   36e1c:	str	r3, [fp, #-20]	; 0xffffffec
   36e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   36e24:	cmp	r3, #0
   36e28:	beq	36e48 <flatcc_verify_union_vector_field@@Base+0xd0c>
   36e2c:	mov	r3, #8
   36e30:	ldr	r2, [fp, #-16]
   36e34:	ldr	r1, [fp, #-12]
   36e38:	ldr	r0, [fp, #-8]
   36e3c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36e40:	mov	r3, r0
   36e44:	b	36e84 <flatcc_verify_union_vector_field@@Base+0xd48>
   36e48:	ldrd	r2, [fp, #4]
   36e4c:	cmp	r3, #0
   36e50:	cmpeq	r2, #255	; 0xff
   36e54:	bls	36e74 <flatcc_verify_union_vector_field@@Base+0xd38>
   36e58:	mov	r3, #7
   36e5c:	ldr	r2, [fp, #-16]
   36e60:	ldr	r1, [fp, #-12]
   36e64:	ldr	r0, [fp, #-8]
   36e68:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36e6c:	mov	r3, r0
   36e70:	b	36e84 <flatcc_verify_union_vector_field@@Base+0xd48>
   36e74:	ldrb	r2, [fp, #4]
   36e78:	ldr	r3, [fp, #12]
   36e7c:	strb	r2, [r3]
   36e80:	ldr	r3, [fp, #-12]
   36e84:	mov	r0, r3
   36e88:	sub	sp, fp, #4
   36e8c:	ldr	fp, [sp]
   36e90:	add	sp, sp, #4
   36e94:	pop	{pc}		; (ldr pc, [sp], #4)
   36e98:	str	fp, [sp, #-8]!
   36e9c:	str	lr, [sp, #4]
   36ea0:	add	fp, sp, #4
   36ea4:	sub	sp, sp, #16
   36ea8:	str	r0, [fp, #-8]
   36eac:	str	r1, [fp, #-12]
   36eb0:	str	r2, [fp, #-16]
   36eb4:	str	r3, [fp, #-20]	; 0xffffffec
   36eb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   36ebc:	cmp	r3, #0
   36ec0:	beq	36f08 <flatcc_verify_union_vector_field@@Base+0xdcc>
   36ec4:	ldrd	r2, [fp, #4]
   36ec8:	cmp	r3, #-2147483648	; 0x80000000
   36ecc:	cmpeq	r2, #0
   36ed0:	bls	36ef0 <flatcc_verify_union_vector_field@@Base+0xdb4>
   36ed4:	mov	r3, #8
   36ed8:	ldr	r2, [fp, #-16]
   36edc:	ldr	r1, [fp, #-12]
   36ee0:	ldr	r0, [fp, #-8]
   36ee4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36ee8:	mov	r3, r0
   36eec:	b	36f44 <flatcc_verify_union_vector_field@@Base+0xe08>
   36ef0:	ldrd	r2, [fp, #4]
   36ef4:	rsbs	r2, r2, #0
   36ef8:	rsc	r3, r3, #0
   36efc:	ldr	r1, [fp, #12]
   36f00:	strd	r2, [r1]
   36f04:	b	36f40 <flatcc_verify_union_vector_field@@Base+0xe04>
   36f08:	ldrd	r2, [fp, #4]
   36f0c:	cmp	r2, #0
   36f10:	sbcs	r3, r3, #0
   36f14:	bge	36f34 <flatcc_verify_union_vector_field@@Base+0xdf8>
   36f18:	mov	r3, #7
   36f1c:	ldr	r2, [fp, #-16]
   36f20:	ldr	r1, [fp, #-12]
   36f24:	ldr	r0, [fp, #-8]
   36f28:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36f2c:	mov	r3, r0
   36f30:	b	36f44 <flatcc_verify_union_vector_field@@Base+0xe08>
   36f34:	ldrd	r2, [fp, #4]
   36f38:	ldr	r1, [fp, #12]
   36f3c:	strd	r2, [r1]
   36f40:	ldr	r3, [fp, #-12]
   36f44:	mov	r0, r3
   36f48:	sub	sp, fp, #4
   36f4c:	ldr	fp, [sp]
   36f50:	add	sp, sp, #4
   36f54:	pop	{pc}		; (ldr pc, [sp], #4)
   36f58:	str	fp, [sp, #-8]!
   36f5c:	str	lr, [sp, #4]
   36f60:	add	fp, sp, #4
   36f64:	sub	sp, sp, #16
   36f68:	str	r0, [fp, #-8]
   36f6c:	str	r1, [fp, #-12]
   36f70:	str	r2, [fp, #-16]
   36f74:	str	r3, [fp, #-20]	; 0xffffffec
   36f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   36f7c:	cmp	r3, #0
   36f80:	beq	36fc8 <flatcc_verify_union_vector_field@@Base+0xe8c>
   36f84:	ldrd	r2, [fp, #4]
   36f88:	cmp	r3, #0
   36f8c:	cmpeq	r2, #-2147483648	; 0x80000000
   36f90:	bls	36fb0 <flatcc_verify_union_vector_field@@Base+0xe74>
   36f94:	mov	r3, #8
   36f98:	ldr	r2, [fp, #-16]
   36f9c:	ldr	r1, [fp, #-12]
   36fa0:	ldr	r0, [fp, #-8]
   36fa4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36fa8:	mov	r3, r0
   36fac:	b	3700c <flatcc_verify_union_vector_field@@Base+0xed0>
   36fb0:	ldr	r3, [fp, #4]
   36fb4:	rsb	r3, r3, #0
   36fb8:	mov	r2, r3
   36fbc:	ldr	r3, [fp, #12]
   36fc0:	str	r2, [r3]
   36fc4:	b	37008 <flatcc_verify_union_vector_field@@Base+0xecc>
   36fc8:	ldrd	r2, [fp, #4]
   36fcc:	mvn	r0, #-2147483648	; 0x80000000
   36fd0:	mov	r1, #0
   36fd4:	cmp	r3, r1
   36fd8:	cmpeq	r2, r0
   36fdc:	bls	36ffc <flatcc_verify_union_vector_field@@Base+0xec0>
   36fe0:	mov	r3, #7
   36fe4:	ldr	r2, [fp, #-16]
   36fe8:	ldr	r1, [fp, #-12]
   36fec:	ldr	r0, [fp, #-8]
   36ff0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   36ff4:	mov	r3, r0
   36ff8:	b	3700c <flatcc_verify_union_vector_field@@Base+0xed0>
   36ffc:	ldr	r2, [fp, #4]
   37000:	ldr	r3, [fp, #12]
   37004:	str	r2, [r3]
   37008:	ldr	r3, [fp, #-12]
   3700c:	mov	r0, r3
   37010:	sub	sp, fp, #4
   37014:	ldr	fp, [sp]
   37018:	add	sp, sp, #4
   3701c:	pop	{pc}		; (ldr pc, [sp], #4)
   37020:	str	fp, [sp, #-8]!
   37024:	str	lr, [sp, #4]
   37028:	add	fp, sp, #4
   3702c:	sub	sp, sp, #16
   37030:	str	r0, [fp, #-8]
   37034:	str	r1, [fp, #-12]
   37038:	str	r2, [fp, #-16]
   3703c:	str	r3, [fp, #-20]	; 0xffffffec
   37040:	ldr	r3, [fp, #-20]	; 0xffffffec
   37044:	cmp	r3, #0
   37048:	beq	37094 <flatcc_verify_union_vector_field@@Base+0xf58>
   3704c:	ldrd	r2, [fp, #4]
   37050:	cmp	r3, #0
   37054:	cmpeq	r2, #32768	; 0x8000
   37058:	bls	37078 <flatcc_verify_union_vector_field@@Base+0xf3c>
   3705c:	mov	r3, #8
   37060:	ldr	r2, [fp, #-16]
   37064:	ldr	r1, [fp, #-12]
   37068:	ldr	r0, [fp, #-8]
   3706c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37070:	mov	r3, r0
   37074:	b	370d8 <flatcc_verify_union_vector_field@@Base+0xf9c>
   37078:	ldrh	r3, [fp, #4]
   3707c:	rsb	r3, r3, #0
   37080:	uxth	r3, r3
   37084:	sxth	r2, r3
   37088:	ldr	r3, [fp, #12]
   3708c:	strh	r2, [r3]
   37090:	b	370d4 <flatcc_verify_union_vector_field@@Base+0xf98>
   37094:	ldrd	r2, [fp, #4]
   37098:	movw	r0, #32767	; 0x7fff
   3709c:	mov	r1, #0
   370a0:	cmp	r3, r1
   370a4:	cmpeq	r2, r0
   370a8:	bls	370c8 <flatcc_verify_union_vector_field@@Base+0xf8c>
   370ac:	mov	r3, #7
   370b0:	ldr	r2, [fp, #-16]
   370b4:	ldr	r1, [fp, #-12]
   370b8:	ldr	r0, [fp, #-8]
   370bc:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   370c0:	mov	r3, r0
   370c4:	b	370d8 <flatcc_verify_union_vector_field@@Base+0xf9c>
   370c8:	ldrsh	r2, [fp, #4]
   370cc:	ldr	r3, [fp, #12]
   370d0:	strh	r2, [r3]
   370d4:	ldr	r3, [fp, #-12]
   370d8:	mov	r0, r3
   370dc:	sub	sp, fp, #4
   370e0:	ldr	fp, [sp]
   370e4:	add	sp, sp, #4
   370e8:	pop	{pc}		; (ldr pc, [sp], #4)
   370ec:	str	fp, [sp, #-8]!
   370f0:	str	lr, [sp, #4]
   370f4:	add	fp, sp, #4
   370f8:	sub	sp, sp, #16
   370fc:	str	r0, [fp, #-8]
   37100:	str	r1, [fp, #-12]
   37104:	str	r2, [fp, #-16]
   37108:	str	r3, [fp, #-20]	; 0xffffffec
   3710c:	ldr	r3, [fp, #-20]	; 0xffffffec
   37110:	cmp	r3, #0
   37114:	beq	37160 <flatcc_verify_union_vector_field@@Base+0x1024>
   37118:	ldrd	r2, [fp, #4]
   3711c:	cmp	r3, #0
   37120:	cmpeq	r2, #128	; 0x80
   37124:	bls	37144 <flatcc_verify_union_vector_field@@Base+0x1008>
   37128:	mov	r3, #8
   3712c:	ldr	r2, [fp, #-16]
   37130:	ldr	r1, [fp, #-12]
   37134:	ldr	r0, [fp, #-8]
   37138:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3713c:	mov	r3, r0
   37140:	b	3719c <flatcc_verify_union_vector_field@@Base+0x1060>
   37144:	ldrb	r3, [fp, #4]
   37148:	rsb	r3, r3, #0
   3714c:	uxtb	r3, r3
   37150:	sxtb	r2, r3
   37154:	ldr	r3, [fp, #12]
   37158:	strb	r2, [r3]
   3715c:	b	37198 <flatcc_verify_union_vector_field@@Base+0x105c>
   37160:	ldrd	r2, [fp, #4]
   37164:	cmp	r3, #0
   37168:	cmpeq	r2, #127	; 0x7f
   3716c:	bls	3718c <flatcc_verify_union_vector_field@@Base+0x1050>
   37170:	mov	r3, #7
   37174:	ldr	r2, [fp, #-16]
   37178:	ldr	r1, [fp, #-12]
   3717c:	ldr	r0, [fp, #-8]
   37180:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37184:	mov	r3, r0
   37188:	b	3719c <flatcc_verify_union_vector_field@@Base+0x1060>
   3718c:	ldrsb	r2, [fp, #4]
   37190:	ldr	r3, [fp, #12]
   37194:	strb	r2, [r3]
   37198:	ldr	r3, [fp, #-12]
   3719c:	mov	r0, r3
   371a0:	sub	sp, fp, #4
   371a4:	ldr	fp, [sp]
   371a8:	add	sp, sp, #4
   371ac:	pop	{pc}		; (ldr pc, [sp], #4)
   371b0:	str	fp, [sp, #-8]!
   371b4:	str	lr, [sp, #4]
   371b8:	add	fp, sp, #4
   371bc:	sub	sp, sp, #16
   371c0:	str	r0, [fp, #-8]
   371c4:	str	r1, [fp, #-12]
   371c8:	str	r2, [fp, #-16]
   371cc:	str	r3, [fp, #-20]	; 0xffffffec
   371d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   371d4:	cmp	r3, #0
   371d8:	beq	371f0 <flatcc_verify_union_vector_field@@Base+0x10b4>
   371dc:	ldrd	r0, [fp, #4]
   371e0:	bl	4dca0 <flatcc_json_printer_clear@@Base+0x5ec>
   371e4:	mov	r3, r0
   371e8:	eor	r2, r3, #-2147483648	; 0x80000000
   371ec:	b	371fc <flatcc_verify_union_vector_field@@Base+0x10c0>
   371f0:	ldrd	r0, [fp, #4]
   371f4:	bl	4dca0 <flatcc_json_printer_clear@@Base+0x5ec>
   371f8:	mov	r2, r0
   371fc:	ldr	r3, [fp, #12]
   37200:	str	r2, [r3]
   37204:	ldr	r3, [fp, #-12]
   37208:	mov	r0, r3
   3720c:	sub	sp, fp, #4
   37210:	ldr	fp, [sp]
   37214:	add	sp, sp, #4
   37218:	pop	{pc}		; (ldr pc, [sp], #4)
   3721c:	str	fp, [sp, #-8]!
   37220:	str	lr, [sp, #4]
   37224:	add	fp, sp, #4
   37228:	sub	sp, sp, #16
   3722c:	str	r0, [fp, #-8]
   37230:	str	r1, [fp, #-12]
   37234:	str	r2, [fp, #-16]
   37238:	str	r3, [fp, #-20]	; 0xffffffec
   3723c:	ldr	r3, [fp, #-20]	; 0xffffffec
   37240:	cmp	r3, #0
   37244:	beq	37260 <flatcc_verify_union_vector_field@@Base+0x1124>
   37248:	ldrd	r0, [fp, #4]
   3724c:	bl	4da68 <flatcc_json_printer_clear@@Base+0x3b4>
   37250:	mov	r2, r0
   37254:	mov	r3, r1
   37258:	eor	r3, r3, #-2147483648	; 0x80000000
   3725c:	b	37270 <flatcc_verify_union_vector_field@@Base+0x1134>
   37260:	ldrd	r0, [fp, #4]
   37264:	bl	4da68 <flatcc_json_printer_clear@@Base+0x3b4>
   37268:	mov	r2, r0
   3726c:	mov	r3, r1
   37270:	ldr	r1, [fp, #12]
   37274:	strd	r2, [r1]
   37278:	ldr	r3, [fp, #-12]
   3727c:	mov	r0, r3
   37280:	sub	sp, fp, #4
   37284:	ldr	fp, [sp]
   37288:	add	sp, sp, #4
   3728c:	pop	{pc}		; (ldr pc, [sp], #4)
   37290:	str	fp, [sp, #-8]!
   37294:	str	lr, [sp, #4]
   37298:	add	fp, sp, #4
   3729c:	sub	sp, sp, #8
   372a0:	str	r0, [fp, #-8]
   372a4:	str	r1, [fp, #-12]
   372a8:	ldr	r2, [fp, #-12]
   372ac:	ldr	r3, [fp, #-8]
   372b0:	sub	r3, r2, r3
   372b4:	cmp	r3, #3
   372b8:	ble	372ec <flatcc_verify_union_vector_field@@Base+0x11b0>
   372bc:	mov	r2, #4
   372c0:	ldr	r3, [pc, #60]	; 37304 <flatcc_verify_union_vector_field@@Base+0x11c8>
   372c4:	add	r3, pc, r3
   372c8:	mov	r1, r3
   372cc:	ldr	r0, [fp, #-8]
   372d0:	bl	14528 <memcmp@plt>
   372d4:	mov	r3, r0
   372d8:	cmp	r3, #0
   372dc:	bne	372ec <flatcc_verify_union_vector_field@@Base+0x11b0>
   372e0:	ldr	r3, [fp, #-8]
   372e4:	add	r3, r3, #4
   372e8:	b	372f0 <flatcc_verify_union_vector_field@@Base+0x11b4>
   372ec:	ldr	r3, [fp, #-8]
   372f0:	mov	r0, r3
   372f4:	sub	sp, fp, #4
   372f8:	ldr	fp, [sp]
   372fc:	add	sp, sp, #4
   37300:	pop	{pc}		; (ldr pc, [sp], #4)
   37304:	andeq	sl, r1, r8, lsr #28
   37308:	str	fp, [sp, #-8]!
   3730c:	str	lr, [sp, #4]
   37310:	add	fp, sp, #4
   37314:	sub	sp, sp, #56	; 0x38
   37318:	str	r0, [fp, #-32]	; 0xffffffe0
   3731c:	str	r1, [fp, #-36]	; 0xffffffdc
   37320:	str	r2, [fp, #-40]	; 0xffffffd8
   37324:	str	r3, [fp, #-44]	; 0xffffffd4
   37328:	mov	r2, #0
   3732c:	mov	r3, #0
   37330:	strd	r2, [fp, #-20]	; 0xffffffec
   37334:	mov	r3, #0
   37338:	str	r3, [fp, #-24]	; 0xffffffe8
   3733c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37340:	str	r3, [fp, #-8]
   37344:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37348:	mov	r2, #0
   3734c:	strb	r2, [r3]
   37350:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37358:	cmp	r2, r3
   3735c:	bne	37368 <flatcc_verify_union_vector_field@@Base+0x122c>
   37360:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37364:	b	373d0 <flatcc_verify_union_vector_field@@Base+0x1294>
   37368:	sub	r2, fp, #24
   3736c:	sub	r3, fp, #20
   37370:	str	r3, [sp]
   37374:	mov	r3, r2
   37378:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3737c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37384:	bl	3d578 <flatcc_json_parser_integer@@Base>
   37388:	str	r0, [fp, #-36]	; 0xffffffdc
   3738c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37390:	ldr	r3, [fp, #-8]
   37394:	cmp	r2, r3
   37398:	beq	373cc <flatcc_verify_union_vector_field@@Base+0x1290>
   3739c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   373a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   373a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   373a8:	str	r1, [sp, #8]
   373ac:	strd	r2, [sp]
   373b0:	mov	r3, r0
   373b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   373b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   373bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   373c0:	bl	36e00 <flatcc_verify_union_vector_field@@Base+0xcc4>
   373c4:	mov	r3, r0
   373c8:	b	373d0 <flatcc_verify_union_vector_field@@Base+0x1294>
   373cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   373d0:	mov	r0, r3
   373d4:	sub	sp, fp, #4
   373d8:	ldr	fp, [sp]
   373dc:	add	sp, sp, #4
   373e0:	pop	{pc}		; (ldr pc, [sp], #4)
   373e4:	str	fp, [sp, #-8]!
   373e8:	str	lr, [sp, #4]
   373ec:	add	fp, sp, #4
   373f0:	sub	sp, sp, #24
   373f4:	str	r0, [fp, #-16]
   373f8:	str	r1, [fp, #-20]	; 0xffffffec
   373fc:	str	r2, [fp, #-24]	; 0xffffffe8
   37400:	str	r3, [fp, #-28]	; 0xffffffe4
   37404:	ldr	r3, [fp, #-20]	; 0xffffffec
   37408:	str	r3, [fp, #-8]
   3740c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37410:	ldr	r3, [fp, #-20]	; 0xffffffec
   37414:	sub	r3, r2, r3
   37418:	cmp	r3, #3
   3741c:	ble	3745c <flatcc_verify_union_vector_field@@Base+0x1320>
   37420:	mov	r2, #4
   37424:	ldr	r3, [pc, #208]	; 374fc <flatcc_verify_union_vector_field@@Base+0x13c0>
   37428:	add	r3, pc, r3
   3742c:	mov	r1, r3
   37430:	ldr	r0, [fp, #-20]	; 0xffffffec
   37434:	bl	14528 <memcmp@plt>
   37438:	mov	r3, r0
   3743c:	cmp	r3, #0
   37440:	bne	3745c <flatcc_verify_union_vector_field@@Base+0x1320>
   37444:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37448:	mov	r2, #1
   3744c:	strb	r2, [r3]
   37450:	ldr	r3, [fp, #-8]
   37454:	add	r3, r3, #4
   37458:	b	374e8 <flatcc_verify_union_vector_field@@Base+0x13ac>
   3745c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37460:	ldr	r3, [fp, #-20]	; 0xffffffec
   37464:	sub	r3, r2, r3
   37468:	cmp	r3, #4
   3746c:	ble	374ac <flatcc_verify_union_vector_field@@Base+0x1370>
   37470:	mov	r2, #5
   37474:	ldr	r3, [pc, #132]	; 37500 <flatcc_verify_union_vector_field@@Base+0x13c4>
   37478:	add	r3, pc, r3
   3747c:	mov	r1, r3
   37480:	ldr	r0, [fp, #-20]	; 0xffffffec
   37484:	bl	14528 <memcmp@plt>
   37488:	mov	r3, r0
   3748c:	cmp	r3, #0
   37490:	bne	374ac <flatcc_verify_union_vector_field@@Base+0x1370>
   37494:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37498:	mov	r2, #0
   3749c:	strb	r2, [r3]
   374a0:	ldr	r3, [fp, #-8]
   374a4:	add	r3, r3, #5
   374a8:	b	374e8 <flatcc_verify_union_vector_field@@Base+0x13ac>
   374ac:	sub	r3, fp, #9
   374b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   374b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   374b8:	ldr	r0, [fp, #-16]
   374bc:	bl	37308 <flatcc_verify_union_vector_field@@Base+0x11cc>
   374c0:	str	r0, [fp, #-20]	; 0xffffffec
   374c4:	ldrb	r3, [fp, #-9]
   374c8:	cmp	r3, #0
   374cc:	movne	r3, #1
   374d0:	moveq	r3, #0
   374d4:	uxtb	r3, r3
   374d8:	mov	r2, r3
   374dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   374e0:	strb	r2, [r3]
   374e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   374e8:	mov	r0, r3
   374ec:	sub	sp, fp, #4
   374f0:	ldr	fp, [sp]
   374f4:	add	sp, sp, #4
   374f8:	pop	{pc}		; (ldr pc, [sp], #4)
   374fc:	andeq	sl, r1, ip, asr #25
   37500:	andeq	sl, r1, r4, lsl #25
   37504:	strd	r4, [sp, #-20]!	; 0xffffffec
   37508:	str	r6, [sp, #8]
   3750c:	str	fp, [sp, #12]
   37510:	str	lr, [sp, #16]
   37514:	add	fp, sp, #16
   37518:	sub	sp, sp, #68	; 0x44
   3751c:	str	r0, [fp, #-56]	; 0xffffffc8
   37520:	str	r1, [fp, #-60]	; 0xffffffc4
   37524:	str	r2, [fp, #-64]	; 0xffffffc0
   37528:	str	r3, [fp, #-68]	; 0xffffffbc
   3752c:	mov	r2, #0
   37530:	mov	r3, #0
   37534:	strd	r2, [fp, #-36]	; 0xffffffdc
   37538:	ldr	r1, [fp, #4]
   3753c:	mov	r2, #0
   37540:	mov	r3, #0
   37544:	strd	r2, [r1]
   37548:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3754c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37550:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37554:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   37558:	str	r0, [fp, #-60]	; 0xffffffc4
   3755c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37560:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37564:	cmp	r2, r3
   37568:	bne	37574 <flatcc_verify_union_vector_field@@Base+0x1438>
   3756c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37570:	b	37694 <flatcc_verify_union_vector_field@@Base+0x1558>
   37574:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37578:	str	r3, [fp, #-24]	; 0xffffffe8
   3757c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37580:	ldr	r6, [r3]
   37584:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37588:	str	r3, [fp, #-28]	; 0xffffffe4
   3758c:	sub	r2, fp, #48	; 0x30
   37590:	sub	r3, fp, #52	; 0x34
   37594:	str	r3, [sp, #4]
   37598:	sub	r3, fp, #44	; 0x2c
   3759c:	str	r3, [sp]
   375a0:	mov	r3, r2
   375a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   375a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   375ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   375b0:	blx	r6
   375b4:	str	r0, [fp, #-60]	; 0xffffffc4
   375b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   375bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   375c0:	cmp	r2, r3
   375c4:	bne	375d0 <flatcc_verify_union_vector_field@@Base+0x1494>
   375c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   375cc:	b	37694 <flatcc_verify_union_vector_field@@Base+0x1558>
   375d0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   375d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   375d8:	cmp	r2, r3
   375dc:	bne	375fc <flatcc_verify_union_vector_field@@Base+0x14c0>
   375e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   375e4:	add	r3, r3, #4
   375e8:	str	r3, [fp, #-24]	; 0xffffffe8
   375ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   375f0:	ldr	r3, [r3]
   375f4:	cmp	r3, #0
   375f8:	bne	3757c <flatcc_verify_union_vector_field@@Base+0x1440>
   375fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   37600:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37604:	cmp	r2, r3
   37608:	bne	37628 <flatcc_verify_union_vector_field@@Base+0x14ec>
   3760c:	mov	r3, #23
   37610:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37614:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37618:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3761c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37620:	mov	r3, r0
   37624:	b	37694 <flatcc_verify_union_vector_field@@Base+0x1558>
   37628:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3762c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   37630:	sub	r1, fp, #36	; 0x24
   37634:	str	r1, [sp, #8]
   37638:	strd	r2, [sp]
   3763c:	mov	r3, r0
   37640:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37644:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37648:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3764c:	bl	36bcc <flatcc_verify_union_vector_field@@Base+0xa90>
   37650:	mov	r2, r0
   37654:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37658:	cmp	r3, r2
   3765c:	bne	37668 <flatcc_verify_union_vector_field@@Base+0x152c>
   37660:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37664:	b	37694 <flatcc_verify_union_vector_field@@Base+0x1558>
   37668:	ldr	r3, [fp, #4]
   3766c:	ldrd	r0, [r3]
   37670:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37674:	adds	r4, r0, r2
   37678:	adc	r5, r1, r3
   3767c:	ldr	r3, [fp, #4]
   37680:	strd	r4, [r3]
   37684:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37688:	cmp	r3, #0
   3768c:	bne	37574 <flatcc_verify_union_vector_field@@Base+0x1438>
   37690:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37694:	mov	r0, r3
   37698:	sub	sp, fp, #16
   3769c:	ldrd	r4, [sp]
   376a0:	ldr	r6, [sp, #8]
   376a4:	ldr	fp, [sp, #12]
   376a8:	add	sp, sp, #16
   376ac:	pop	{pc}		; (ldr pc, [sp], #4)
   376b0:	str	r4, [sp, #-12]!
   376b4:	str	fp, [sp, #4]
   376b8:	str	lr, [sp, #8]
   376bc:	add	fp, sp, #8
   376c0:	sub	sp, sp, #68	; 0x44
   376c4:	str	r0, [fp, #-48]	; 0xffffffd0
   376c8:	str	r1, [fp, #-52]	; 0xffffffcc
   376cc:	str	r2, [fp, #-56]	; 0xffffffc8
   376d0:	str	r3, [fp, #-60]	; 0xffffffc4
   376d4:	mov	r3, #0
   376d8:	str	r3, [fp, #-24]	; 0xffffffe8
   376dc:	ldr	r3, [fp, #4]
   376e0:	mov	r2, #0
   376e4:	str	r2, [r3]
   376e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   376ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   376f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   376f4:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   376f8:	str	r0, [fp, #-52]	; 0xffffffcc
   376fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37700:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37704:	cmp	r2, r3
   37708:	bne	37714 <flatcc_verify_union_vector_field@@Base+0x15d8>
   3770c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37710:	b	37830 <flatcc_verify_union_vector_field@@Base+0x16f4>
   37714:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37718:	str	r3, [fp, #-16]
   3771c:	ldr	r3, [fp, #-16]
   37720:	ldr	r4, [r3]
   37724:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37728:	str	r3, [fp, #-20]	; 0xffffffec
   3772c:	sub	r2, fp, #40	; 0x28
   37730:	sub	r3, fp, #44	; 0x2c
   37734:	str	r3, [sp, #4]
   37738:	sub	r3, fp, #36	; 0x24
   3773c:	str	r3, [sp]
   37740:	mov	r3, r2
   37744:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37748:	ldr	r1, [fp, #-20]	; 0xffffffec
   3774c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37750:	blx	r4
   37754:	str	r0, [fp, #-52]	; 0xffffffcc
   37758:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3775c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37760:	cmp	r2, r3
   37764:	bne	37770 <flatcc_verify_union_vector_field@@Base+0x1634>
   37768:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3776c:	b	37830 <flatcc_verify_union_vector_field@@Base+0x16f4>
   37770:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37774:	ldr	r3, [fp, #-20]	; 0xffffffec
   37778:	cmp	r2, r3
   3777c:	bne	3779c <flatcc_verify_union_vector_field@@Base+0x1660>
   37780:	ldr	r3, [fp, #-16]
   37784:	add	r3, r3, #4
   37788:	str	r3, [fp, #-16]
   3778c:	ldr	r3, [fp, #-16]
   37790:	ldr	r3, [r3]
   37794:	cmp	r3, #0
   37798:	bne	3771c <flatcc_verify_union_vector_field@@Base+0x15e0>
   3779c:	ldr	r2, [fp, #-20]	; 0xffffffec
   377a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   377a4:	cmp	r2, r3
   377a8:	bne	377c8 <flatcc_verify_union_vector_field@@Base+0x168c>
   377ac:	mov	r3, #23
   377b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   377b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   377b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   377bc:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   377c0:	mov	r3, r0
   377c4:	b	37830 <flatcc_verify_union_vector_field@@Base+0x16f4>
   377c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   377cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   377d0:	sub	r1, fp, #24
   377d4:	str	r1, [sp, #8]
   377d8:	strd	r2, [sp]
   377dc:	mov	r3, r0
   377e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   377e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   377e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   377ec:	bl	36cc0 <flatcc_verify_union_vector_field@@Base+0xb84>
   377f0:	mov	r2, r0
   377f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   377f8:	cmp	r3, r2
   377fc:	bne	37808 <flatcc_verify_union_vector_field@@Base+0x16cc>
   37800:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37804:	b	37830 <flatcc_verify_union_vector_field@@Base+0x16f4>
   37808:	ldr	r3, [fp, #4]
   3780c:	ldr	r2, [r3]
   37810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37814:	add	r2, r2, r3
   37818:	ldr	r3, [fp, #4]
   3781c:	str	r2, [r3]
   37820:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37824:	cmp	r3, #0
   37828:	bne	37714 <flatcc_verify_union_vector_field@@Base+0x15d8>
   3782c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37830:	mov	r0, r3
   37834:	sub	sp, fp, #8
   37838:	ldr	r4, [sp]
   3783c:	ldr	fp, [sp, #4]
   37840:	add	sp, sp, #8
   37844:	pop	{pc}		; (ldr pc, [sp], #4)
   37848:	str	r4, [sp, #-12]!
   3784c:	str	fp, [sp, #4]
   37850:	str	lr, [sp, #8]
   37854:	add	fp, sp, #8
   37858:	sub	sp, sp, #68	; 0x44
   3785c:	str	r0, [fp, #-48]	; 0xffffffd0
   37860:	str	r1, [fp, #-52]	; 0xffffffcc
   37864:	str	r2, [fp, #-56]	; 0xffffffc8
   37868:	str	r3, [fp, #-60]	; 0xffffffc4
   3786c:	mov	r3, #0
   37870:	strh	r3, [fp, #-22]	; 0xffffffea
   37874:	ldr	r3, [fp, #4]
   37878:	mov	r2, #0
   3787c:	strh	r2, [r3]
   37880:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37884:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37888:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3788c:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   37890:	str	r0, [fp, #-52]	; 0xffffffcc
   37894:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37898:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3789c:	cmp	r2, r3
   378a0:	bne	378ac <flatcc_verify_union_vector_field@@Base+0x1770>
   378a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   378a8:	b	379cc <flatcc_verify_union_vector_field@@Base+0x1890>
   378ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   378b0:	str	r3, [fp, #-16]
   378b4:	ldr	r3, [fp, #-16]
   378b8:	ldr	r4, [r3]
   378bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   378c0:	str	r3, [fp, #-20]	; 0xffffffec
   378c4:	sub	r2, fp, #40	; 0x28
   378c8:	sub	r3, fp, #44	; 0x2c
   378cc:	str	r3, [sp, #4]
   378d0:	sub	r3, fp, #36	; 0x24
   378d4:	str	r3, [sp]
   378d8:	mov	r3, r2
   378dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   378e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   378e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   378e8:	blx	r4
   378ec:	str	r0, [fp, #-52]	; 0xffffffcc
   378f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   378f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   378f8:	cmp	r2, r3
   378fc:	bne	37908 <flatcc_verify_union_vector_field@@Base+0x17cc>
   37900:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37904:	b	379cc <flatcc_verify_union_vector_field@@Base+0x1890>
   37908:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3790c:	ldr	r3, [fp, #-20]	; 0xffffffec
   37910:	cmp	r2, r3
   37914:	bne	37934 <flatcc_verify_union_vector_field@@Base+0x17f8>
   37918:	ldr	r3, [fp, #-16]
   3791c:	add	r3, r3, #4
   37920:	str	r3, [fp, #-16]
   37924:	ldr	r3, [fp, #-16]
   37928:	ldr	r3, [r3]
   3792c:	cmp	r3, #0
   37930:	bne	378b4 <flatcc_verify_union_vector_field@@Base+0x1778>
   37934:	ldr	r2, [fp, #-20]	; 0xffffffec
   37938:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3793c:	cmp	r2, r3
   37940:	bne	37960 <flatcc_verify_union_vector_field@@Base+0x1824>
   37944:	mov	r3, #23
   37948:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3794c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37950:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37954:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37958:	mov	r3, r0
   3795c:	b	379cc <flatcc_verify_union_vector_field@@Base+0x1890>
   37960:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37964:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37968:	sub	r1, fp, #22
   3796c:	str	r1, [sp, #8]
   37970:	strd	r2, [sp]
   37974:	mov	r3, r0
   37978:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3797c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37980:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37984:	bl	36d60 <flatcc_verify_union_vector_field@@Base+0xc24>
   37988:	mov	r2, r0
   3798c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37990:	cmp	r3, r2
   37994:	bne	379a0 <flatcc_verify_union_vector_field@@Base+0x1864>
   37998:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3799c:	b	379cc <flatcc_verify_union_vector_field@@Base+0x1890>
   379a0:	ldr	r3, [fp, #4]
   379a4:	ldrh	r2, [r3]
   379a8:	ldrh	r3, [fp, #-22]	; 0xffffffea
   379ac:	add	r3, r2, r3
   379b0:	uxth	r2, r3
   379b4:	ldr	r3, [fp, #4]
   379b8:	strh	r2, [r3]
   379bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   379c0:	cmp	r3, #0
   379c4:	bne	378ac <flatcc_verify_union_vector_field@@Base+0x1770>
   379c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   379cc:	mov	r0, r3
   379d0:	sub	sp, fp, #8
   379d4:	ldr	r4, [sp]
   379d8:	ldr	fp, [sp, #4]
   379dc:	add	sp, sp, #8
   379e0:	pop	{pc}		; (ldr pc, [sp], #4)
   379e4:	str	r4, [sp, #-12]!
   379e8:	str	fp, [sp, #4]
   379ec:	str	lr, [sp, #8]
   379f0:	add	fp, sp, #8
   379f4:	sub	sp, sp, #68	; 0x44
   379f8:	str	r0, [fp, #-48]	; 0xffffffd0
   379fc:	str	r1, [fp, #-52]	; 0xffffffcc
   37a00:	str	r2, [fp, #-56]	; 0xffffffc8
   37a04:	str	r3, [fp, #-60]	; 0xffffffc4
   37a08:	mov	r3, #0
   37a0c:	strb	r3, [fp, #-21]	; 0xffffffeb
   37a10:	ldr	r3, [fp, #4]
   37a14:	mov	r2, #0
   37a18:	strb	r2, [r3]
   37a1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37a20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37a24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37a28:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   37a2c:	str	r0, [fp, #-52]	; 0xffffffcc
   37a30:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37a34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37a38:	cmp	r2, r3
   37a3c:	bne	37a48 <flatcc_verify_union_vector_field@@Base+0x190c>
   37a40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37a44:	b	37b68 <flatcc_verify_union_vector_field@@Base+0x1a2c>
   37a48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37a4c:	str	r3, [fp, #-16]
   37a50:	ldr	r3, [fp, #-16]
   37a54:	ldr	r4, [r3]
   37a58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37a5c:	str	r3, [fp, #-20]	; 0xffffffec
   37a60:	sub	r2, fp, #40	; 0x28
   37a64:	sub	r3, fp, #44	; 0x2c
   37a68:	str	r3, [sp, #4]
   37a6c:	sub	r3, fp, #36	; 0x24
   37a70:	str	r3, [sp]
   37a74:	mov	r3, r2
   37a78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37a7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37a80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37a84:	blx	r4
   37a88:	str	r0, [fp, #-52]	; 0xffffffcc
   37a8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37a90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37a94:	cmp	r2, r3
   37a98:	bne	37aa4 <flatcc_verify_union_vector_field@@Base+0x1968>
   37a9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37aa0:	b	37b68 <flatcc_verify_union_vector_field@@Base+0x1a2c>
   37aa4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   37aac:	cmp	r2, r3
   37ab0:	bne	37ad0 <flatcc_verify_union_vector_field@@Base+0x1994>
   37ab4:	ldr	r3, [fp, #-16]
   37ab8:	add	r3, r3, #4
   37abc:	str	r3, [fp, #-16]
   37ac0:	ldr	r3, [fp, #-16]
   37ac4:	ldr	r3, [r3]
   37ac8:	cmp	r3, #0
   37acc:	bne	37a50 <flatcc_verify_union_vector_field@@Base+0x1914>
   37ad0:	ldr	r2, [fp, #-20]	; 0xffffffec
   37ad4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37ad8:	cmp	r2, r3
   37adc:	bne	37afc <flatcc_verify_union_vector_field@@Base+0x19c0>
   37ae0:	mov	r3, #23
   37ae4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37ae8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37aec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37af0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37af4:	mov	r3, r0
   37af8:	b	37b68 <flatcc_verify_union_vector_field@@Base+0x1a2c>
   37afc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37b00:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37b04:	sub	r1, fp, #21
   37b08:	str	r1, [sp, #8]
   37b0c:	strd	r2, [sp]
   37b10:	mov	r3, r0
   37b14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37b18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37b1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37b20:	bl	36e00 <flatcc_verify_union_vector_field@@Base+0xcc4>
   37b24:	mov	r2, r0
   37b28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37b2c:	cmp	r3, r2
   37b30:	bne	37b3c <flatcc_verify_union_vector_field@@Base+0x1a00>
   37b34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37b38:	b	37b68 <flatcc_verify_union_vector_field@@Base+0x1a2c>
   37b3c:	ldr	r3, [fp, #4]
   37b40:	ldrb	r2, [r3]
   37b44:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   37b48:	add	r3, r2, r3
   37b4c:	uxtb	r2, r3
   37b50:	ldr	r3, [fp, #4]
   37b54:	strb	r2, [r3]
   37b58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37b5c:	cmp	r3, #0
   37b60:	bne	37a48 <flatcc_verify_union_vector_field@@Base+0x190c>
   37b64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37b68:	mov	r0, r3
   37b6c:	sub	sp, fp, #8
   37b70:	ldr	r4, [sp]
   37b74:	ldr	fp, [sp, #4]
   37b78:	add	sp, sp, #8
   37b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   37b80:	strd	r4, [sp, #-20]!	; 0xffffffec
   37b84:	str	r6, [sp, #8]
   37b88:	str	fp, [sp, #12]
   37b8c:	str	lr, [sp, #16]
   37b90:	add	fp, sp, #16
   37b94:	sub	sp, sp, #68	; 0x44
   37b98:	str	r0, [fp, #-56]	; 0xffffffc8
   37b9c:	str	r1, [fp, #-60]	; 0xffffffc4
   37ba0:	str	r2, [fp, #-64]	; 0xffffffc0
   37ba4:	str	r3, [fp, #-68]	; 0xffffffbc
   37ba8:	mov	r2, #0
   37bac:	mov	r3, #0
   37bb0:	strd	r2, [fp, #-36]	; 0xffffffdc
   37bb4:	ldr	r1, [fp, #4]
   37bb8:	mov	r2, #0
   37bbc:	mov	r3, #0
   37bc0:	strd	r2, [r1]
   37bc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37bc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37bcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37bd0:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   37bd4:	str	r0, [fp, #-60]	; 0xffffffc4
   37bd8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37bdc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37be0:	cmp	r2, r3
   37be4:	bne	37bf0 <flatcc_verify_union_vector_field@@Base+0x1ab4>
   37be8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37bec:	b	37d10 <flatcc_verify_union_vector_field@@Base+0x1bd4>
   37bf0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37bf4:	str	r3, [fp, #-24]	; 0xffffffe8
   37bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37bfc:	ldr	r6, [r3]
   37c00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37c04:	str	r3, [fp, #-28]	; 0xffffffe4
   37c08:	sub	r2, fp, #48	; 0x30
   37c0c:	sub	r3, fp, #52	; 0x34
   37c10:	str	r3, [sp, #4]
   37c14:	sub	r3, fp, #44	; 0x2c
   37c18:	str	r3, [sp]
   37c1c:	mov	r3, r2
   37c20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37c24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37c28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37c2c:	blx	r6
   37c30:	str	r0, [fp, #-60]	; 0xffffffc4
   37c34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37c38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37c3c:	cmp	r2, r3
   37c40:	bne	37c4c <flatcc_verify_union_vector_field@@Base+0x1b10>
   37c44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37c48:	b	37d10 <flatcc_verify_union_vector_field@@Base+0x1bd4>
   37c4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37c50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37c54:	cmp	r2, r3
   37c58:	bne	37c78 <flatcc_verify_union_vector_field@@Base+0x1b3c>
   37c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37c60:	add	r3, r3, #4
   37c64:	str	r3, [fp, #-24]	; 0xffffffe8
   37c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37c6c:	ldr	r3, [r3]
   37c70:	cmp	r3, #0
   37c74:	bne	37bf8 <flatcc_verify_union_vector_field@@Base+0x1abc>
   37c78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   37c7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37c80:	cmp	r2, r3
   37c84:	bne	37ca4 <flatcc_verify_union_vector_field@@Base+0x1b68>
   37c88:	mov	r3, #23
   37c8c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37c90:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37c94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37c98:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37c9c:	mov	r3, r0
   37ca0:	b	37d10 <flatcc_verify_union_vector_field@@Base+0x1bd4>
   37ca4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37ca8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   37cac:	sub	r1, fp, #36	; 0x24
   37cb0:	str	r1, [sp, #8]
   37cb4:	strd	r2, [sp]
   37cb8:	mov	r3, r0
   37cbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37cc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37cc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37cc8:	bl	36e98 <flatcc_verify_union_vector_field@@Base+0xd5c>
   37ccc:	mov	r2, r0
   37cd0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37cd4:	cmp	r3, r2
   37cd8:	bne	37ce4 <flatcc_verify_union_vector_field@@Base+0x1ba8>
   37cdc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37ce0:	b	37d10 <flatcc_verify_union_vector_field@@Base+0x1bd4>
   37ce4:	ldr	r3, [fp, #4]
   37ce8:	ldrd	r0, [r3]
   37cec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37cf0:	adds	r4, r0, r2
   37cf4:	adc	r5, r1, r3
   37cf8:	ldr	r3, [fp, #4]
   37cfc:	strd	r4, [r3]
   37d00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37d04:	cmp	r3, #0
   37d08:	bne	37bf0 <flatcc_verify_union_vector_field@@Base+0x1ab4>
   37d0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37d10:	mov	r0, r3
   37d14:	sub	sp, fp, #16
   37d18:	ldrd	r4, [sp]
   37d1c:	ldr	r6, [sp, #8]
   37d20:	ldr	fp, [sp, #12]
   37d24:	add	sp, sp, #16
   37d28:	pop	{pc}		; (ldr pc, [sp], #4)
   37d2c:	str	r4, [sp, #-12]!
   37d30:	str	fp, [sp, #4]
   37d34:	str	lr, [sp, #8]
   37d38:	add	fp, sp, #8
   37d3c:	sub	sp, sp, #68	; 0x44
   37d40:	str	r0, [fp, #-48]	; 0xffffffd0
   37d44:	str	r1, [fp, #-52]	; 0xffffffcc
   37d48:	str	r2, [fp, #-56]	; 0xffffffc8
   37d4c:	str	r3, [fp, #-60]	; 0xffffffc4
   37d50:	mov	r3, #0
   37d54:	str	r3, [fp, #-24]	; 0xffffffe8
   37d58:	ldr	r3, [fp, #4]
   37d5c:	mov	r2, #0
   37d60:	str	r2, [r3]
   37d64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37d68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37d6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37d70:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   37d74:	str	r0, [fp, #-52]	; 0xffffffcc
   37d78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37d7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37d80:	cmp	r2, r3
   37d84:	bne	37d90 <flatcc_verify_union_vector_field@@Base+0x1c54>
   37d88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37d8c:	b	37eac <flatcc_verify_union_vector_field@@Base+0x1d70>
   37d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37d94:	str	r3, [fp, #-16]
   37d98:	ldr	r3, [fp, #-16]
   37d9c:	ldr	r4, [r3]
   37da0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37da4:	str	r3, [fp, #-20]	; 0xffffffec
   37da8:	sub	r2, fp, #40	; 0x28
   37dac:	sub	r3, fp, #44	; 0x2c
   37db0:	str	r3, [sp, #4]
   37db4:	sub	r3, fp, #36	; 0x24
   37db8:	str	r3, [sp]
   37dbc:	mov	r3, r2
   37dc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37dc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   37dc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37dcc:	blx	r4
   37dd0:	str	r0, [fp, #-52]	; 0xffffffcc
   37dd4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37dd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37ddc:	cmp	r2, r3
   37de0:	bne	37dec <flatcc_verify_union_vector_field@@Base+0x1cb0>
   37de4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37de8:	b	37eac <flatcc_verify_union_vector_field@@Base+0x1d70>
   37dec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   37df4:	cmp	r2, r3
   37df8:	bne	37e18 <flatcc_verify_union_vector_field@@Base+0x1cdc>
   37dfc:	ldr	r3, [fp, #-16]
   37e00:	add	r3, r3, #4
   37e04:	str	r3, [fp, #-16]
   37e08:	ldr	r3, [fp, #-16]
   37e0c:	ldr	r3, [r3]
   37e10:	cmp	r3, #0
   37e14:	bne	37d98 <flatcc_verify_union_vector_field@@Base+0x1c5c>
   37e18:	ldr	r2, [fp, #-20]	; 0xffffffec
   37e1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37e20:	cmp	r2, r3
   37e24:	bne	37e44 <flatcc_verify_union_vector_field@@Base+0x1d08>
   37e28:	mov	r3, #23
   37e2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37e30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37e34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37e38:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37e3c:	mov	r3, r0
   37e40:	b	37eac <flatcc_verify_union_vector_field@@Base+0x1d70>
   37e44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37e48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37e4c:	sub	r1, fp, #24
   37e50:	str	r1, [sp, #8]
   37e54:	strd	r2, [sp]
   37e58:	mov	r3, r0
   37e5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37e60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37e64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37e68:	bl	36f58 <flatcc_verify_union_vector_field@@Base+0xe1c>
   37e6c:	mov	r2, r0
   37e70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37e74:	cmp	r3, r2
   37e78:	bne	37e84 <flatcc_verify_union_vector_field@@Base+0x1d48>
   37e7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37e80:	b	37eac <flatcc_verify_union_vector_field@@Base+0x1d70>
   37e84:	ldr	r3, [fp, #4]
   37e88:	ldr	r2, [r3]
   37e8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37e90:	add	r2, r2, r3
   37e94:	ldr	r3, [fp, #4]
   37e98:	str	r2, [r3]
   37e9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37ea0:	cmp	r3, #0
   37ea4:	bne	37d90 <flatcc_verify_union_vector_field@@Base+0x1c54>
   37ea8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37eac:	mov	r0, r3
   37eb0:	sub	sp, fp, #8
   37eb4:	ldr	r4, [sp]
   37eb8:	ldr	fp, [sp, #4]
   37ebc:	add	sp, sp, #8
   37ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   37ec4:	str	r4, [sp, #-12]!
   37ec8:	str	fp, [sp, #4]
   37ecc:	str	lr, [sp, #8]
   37ed0:	add	fp, sp, #8
   37ed4:	sub	sp, sp, #68	; 0x44
   37ed8:	str	r0, [fp, #-48]	; 0xffffffd0
   37edc:	str	r1, [fp, #-52]	; 0xffffffcc
   37ee0:	str	r2, [fp, #-56]	; 0xffffffc8
   37ee4:	str	r3, [fp, #-60]	; 0xffffffc4
   37ee8:	mov	r3, #0
   37eec:	strh	r3, [fp, #-22]	; 0xffffffea
   37ef0:	ldr	r3, [fp, #4]
   37ef4:	mov	r2, #0
   37ef8:	strh	r2, [r3]
   37efc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37f00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37f08:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   37f0c:	str	r0, [fp, #-52]	; 0xffffffcc
   37f10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37f14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37f18:	cmp	r2, r3
   37f1c:	bne	37f28 <flatcc_verify_union_vector_field@@Base+0x1dec>
   37f20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37f24:	b	38054 <flatcc_verify_union_vector_field@@Base+0x1f18>
   37f28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37f2c:	str	r3, [fp, #-16]
   37f30:	ldr	r3, [fp, #-16]
   37f34:	ldr	r4, [r3]
   37f38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37f3c:	str	r3, [fp, #-20]	; 0xffffffec
   37f40:	sub	r2, fp, #40	; 0x28
   37f44:	sub	r3, fp, #44	; 0x2c
   37f48:	str	r3, [sp, #4]
   37f4c:	sub	r3, fp, #36	; 0x24
   37f50:	str	r3, [sp]
   37f54:	mov	r3, r2
   37f58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37f5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37f60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37f64:	blx	r4
   37f68:	str	r0, [fp, #-52]	; 0xffffffcc
   37f6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37f70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37f74:	cmp	r2, r3
   37f78:	bne	37f84 <flatcc_verify_union_vector_field@@Base+0x1e48>
   37f7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37f80:	b	38054 <flatcc_verify_union_vector_field@@Base+0x1f18>
   37f84:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   37f8c:	cmp	r2, r3
   37f90:	bne	37fb0 <flatcc_verify_union_vector_field@@Base+0x1e74>
   37f94:	ldr	r3, [fp, #-16]
   37f98:	add	r3, r3, #4
   37f9c:	str	r3, [fp, #-16]
   37fa0:	ldr	r3, [fp, #-16]
   37fa4:	ldr	r3, [r3]
   37fa8:	cmp	r3, #0
   37fac:	bne	37f30 <flatcc_verify_union_vector_field@@Base+0x1df4>
   37fb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   37fb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37fb8:	cmp	r2, r3
   37fbc:	bne	37fdc <flatcc_verify_union_vector_field@@Base+0x1ea0>
   37fc0:	mov	r3, #23
   37fc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37fc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37fcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37fd0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   37fd4:	mov	r3, r0
   37fd8:	b	38054 <flatcc_verify_union_vector_field@@Base+0x1f18>
   37fdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37fe0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37fe4:	sub	r1, fp, #22
   37fe8:	str	r1, [sp, #8]
   37fec:	strd	r2, [sp]
   37ff0:	mov	r3, r0
   37ff4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37ff8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38000:	bl	37020 <flatcc_verify_union_vector_field@@Base+0xee4>
   38004:	mov	r2, r0
   38008:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3800c:	cmp	r3, r2
   38010:	bne	3801c <flatcc_verify_union_vector_field@@Base+0x1ee0>
   38014:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38018:	b	38054 <flatcc_verify_union_vector_field@@Base+0x1f18>
   3801c:	ldr	r3, [fp, #4]
   38020:	ldrsh	r3, [r3]
   38024:	uxth	r2, r3
   38028:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   3802c:	uxth	r3, r3
   38030:	add	r3, r2, r3
   38034:	uxth	r3, r3
   38038:	sxth	r2, r3
   3803c:	ldr	r3, [fp, #4]
   38040:	strh	r2, [r3]
   38044:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38048:	cmp	r3, #0
   3804c:	bne	37f28 <flatcc_verify_union_vector_field@@Base+0x1dec>
   38050:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38054:	mov	r0, r3
   38058:	sub	sp, fp, #8
   3805c:	ldr	r4, [sp]
   38060:	ldr	fp, [sp, #4]
   38064:	add	sp, sp, #8
   38068:	pop	{pc}		; (ldr pc, [sp], #4)
   3806c:	str	r4, [sp, #-12]!
   38070:	str	fp, [sp, #4]
   38074:	str	lr, [sp, #8]
   38078:	add	fp, sp, #8
   3807c:	sub	sp, sp, #68	; 0x44
   38080:	str	r0, [fp, #-48]	; 0xffffffd0
   38084:	str	r1, [fp, #-52]	; 0xffffffcc
   38088:	str	r2, [fp, #-56]	; 0xffffffc8
   3808c:	str	r3, [fp, #-60]	; 0xffffffc4
   38090:	mov	r3, #0
   38094:	strb	r3, [fp, #-21]	; 0xffffffeb
   38098:	ldr	r3, [fp, #4]
   3809c:	mov	r2, #0
   380a0:	strb	r2, [r3]
   380a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   380a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   380ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   380b0:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   380b4:	str	r0, [fp, #-52]	; 0xffffffcc
   380b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   380bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   380c0:	cmp	r2, r3
   380c4:	bne	380d0 <flatcc_verify_union_vector_field@@Base+0x1f94>
   380c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   380cc:	b	381fc <flatcc_verify_union_vector_field@@Base+0x20c0>
   380d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   380d4:	str	r3, [fp, #-16]
   380d8:	ldr	r3, [fp, #-16]
   380dc:	ldr	r4, [r3]
   380e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   380e4:	str	r3, [fp, #-20]	; 0xffffffec
   380e8:	sub	r2, fp, #40	; 0x28
   380ec:	sub	r3, fp, #44	; 0x2c
   380f0:	str	r3, [sp, #4]
   380f4:	sub	r3, fp, #36	; 0x24
   380f8:	str	r3, [sp]
   380fc:	mov	r3, r2
   38100:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38104:	ldr	r1, [fp, #-20]	; 0xffffffec
   38108:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3810c:	blx	r4
   38110:	str	r0, [fp, #-52]	; 0xffffffcc
   38114:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38118:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3811c:	cmp	r2, r3
   38120:	bne	3812c <flatcc_verify_union_vector_field@@Base+0x1ff0>
   38124:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38128:	b	381fc <flatcc_verify_union_vector_field@@Base+0x20c0>
   3812c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38130:	ldr	r3, [fp, #-20]	; 0xffffffec
   38134:	cmp	r2, r3
   38138:	bne	38158 <flatcc_verify_union_vector_field@@Base+0x201c>
   3813c:	ldr	r3, [fp, #-16]
   38140:	add	r3, r3, #4
   38144:	str	r3, [fp, #-16]
   38148:	ldr	r3, [fp, #-16]
   3814c:	ldr	r3, [r3]
   38150:	cmp	r3, #0
   38154:	bne	380d8 <flatcc_verify_union_vector_field@@Base+0x1f9c>
   38158:	ldr	r2, [fp, #-20]	; 0xffffffec
   3815c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38160:	cmp	r2, r3
   38164:	bne	38184 <flatcc_verify_union_vector_field@@Base+0x2048>
   38168:	mov	r3, #23
   3816c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38170:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38174:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38178:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3817c:	mov	r3, r0
   38180:	b	381fc <flatcc_verify_union_vector_field@@Base+0x20c0>
   38184:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38188:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3818c:	sub	r1, fp, #21
   38190:	str	r1, [sp, #8]
   38194:	strd	r2, [sp]
   38198:	mov	r3, r0
   3819c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   381a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   381a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   381a8:	bl	370ec <flatcc_verify_union_vector_field@@Base+0xfb0>
   381ac:	mov	r2, r0
   381b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   381b4:	cmp	r3, r2
   381b8:	bne	381c4 <flatcc_verify_union_vector_field@@Base+0x2088>
   381bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   381c0:	b	381fc <flatcc_verify_union_vector_field@@Base+0x20c0>
   381c4:	ldr	r3, [fp, #4]
   381c8:	ldrsb	r3, [r3]
   381cc:	uxtb	r2, r3
   381d0:	ldrsb	r3, [fp, #-21]	; 0xffffffeb
   381d4:	uxtb	r3, r3
   381d8:	add	r3, r2, r3
   381dc:	uxtb	r3, r3
   381e0:	sxtb	r2, r3
   381e4:	ldr	r3, [fp, #4]
   381e8:	strb	r2, [r3]
   381ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   381f0:	cmp	r3, #0
   381f4:	bne	380d0 <flatcc_verify_union_vector_field@@Base+0x1f94>
   381f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   381fc:	mov	r0, r3
   38200:	sub	sp, fp, #8
   38204:	ldr	r4, [sp]
   38208:	ldr	fp, [sp, #4]
   3820c:	add	sp, sp, #8
   38210:	pop	{pc}		; (ldr pc, [sp], #4)
   38214:	str	r4, [sp, #-12]!
   38218:	str	fp, [sp, #4]
   3821c:	str	lr, [sp, #8]
   38220:	add	fp, sp, #8
   38224:	sub	sp, sp, #68	; 0x44
   38228:	str	r0, [fp, #-48]	; 0xffffffd0
   3822c:	str	r1, [fp, #-52]	; 0xffffffcc
   38230:	str	r2, [fp, #-56]	; 0xffffffc8
   38234:	str	r3, [fp, #-60]	; 0xffffffc4
   38238:	mov	r3, #0
   3823c:	strb	r3, [fp, #-21]	; 0xffffffeb
   38240:	ldr	r3, [fp, #4]
   38244:	mov	r2, #0
   38248:	strb	r2, [r3]
   3824c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38250:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38254:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38258:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   3825c:	str	r0, [fp, #-52]	; 0xffffffcc
   38260:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38264:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38268:	cmp	r2, r3
   3826c:	bne	38278 <flatcc_verify_union_vector_field@@Base+0x213c>
   38270:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38274:	b	38398 <flatcc_verify_union_vector_field@@Base+0x225c>
   38278:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3827c:	str	r3, [fp, #-16]
   38280:	ldr	r3, [fp, #-16]
   38284:	ldr	r4, [r3]
   38288:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3828c:	str	r3, [fp, #-20]	; 0xffffffec
   38290:	sub	r2, fp, #40	; 0x28
   38294:	sub	r3, fp, #44	; 0x2c
   38298:	str	r3, [sp, #4]
   3829c:	sub	r3, fp, #36	; 0x24
   382a0:	str	r3, [sp]
   382a4:	mov	r3, r2
   382a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   382ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   382b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   382b4:	blx	r4
   382b8:	str	r0, [fp, #-52]	; 0xffffffcc
   382bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   382c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   382c4:	cmp	r2, r3
   382c8:	bne	382d4 <flatcc_verify_union_vector_field@@Base+0x2198>
   382cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   382d0:	b	38398 <flatcc_verify_union_vector_field@@Base+0x225c>
   382d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   382d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   382dc:	cmp	r2, r3
   382e0:	bne	38300 <flatcc_verify_union_vector_field@@Base+0x21c4>
   382e4:	ldr	r3, [fp, #-16]
   382e8:	add	r3, r3, #4
   382ec:	str	r3, [fp, #-16]
   382f0:	ldr	r3, [fp, #-16]
   382f4:	ldr	r3, [r3]
   382f8:	cmp	r3, #0
   382fc:	bne	38280 <flatcc_verify_union_vector_field@@Base+0x2144>
   38300:	ldr	r2, [fp, #-20]	; 0xffffffec
   38304:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38308:	cmp	r2, r3
   3830c:	bne	3832c <flatcc_verify_union_vector_field@@Base+0x21f0>
   38310:	mov	r3, #23
   38314:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38318:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3831c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38320:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   38324:	mov	r3, r0
   38328:	b	38398 <flatcc_verify_union_vector_field@@Base+0x225c>
   3832c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38330:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   38334:	sub	r1, fp, #21
   38338:	str	r1, [sp, #8]
   3833c:	strd	r2, [sp]
   38340:	mov	r3, r0
   38344:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38348:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3834c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38350:	bl	36c38 <flatcc_verify_union_vector_field@@Base+0xafc>
   38354:	mov	r2, r0
   38358:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3835c:	cmp	r3, r2
   38360:	bne	3836c <flatcc_verify_union_vector_field@@Base+0x2230>
   38364:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38368:	b	38398 <flatcc_verify_union_vector_field@@Base+0x225c>
   3836c:	ldr	r3, [fp, #4]
   38370:	ldrb	r2, [r3]
   38374:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   38378:	add	r3, r2, r3
   3837c:	uxtb	r2, r3
   38380:	ldr	r3, [fp, #4]
   38384:	strb	r2, [r3]
   38388:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3838c:	cmp	r3, #0
   38390:	bne	38278 <flatcc_verify_union_vector_field@@Base+0x213c>
   38394:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38398:	mov	r0, r3
   3839c:	sub	sp, fp, #8
   383a0:	ldr	r4, [sp]
   383a4:	ldr	fp, [sp, #4]
   383a8:	add	sp, sp, #8
   383ac:	pop	{pc}		; (ldr pc, [sp], #4)
   383b0:	str	r4, [sp, #-12]!
   383b4:	str	fp, [sp, #4]
   383b8:	str	lr, [sp, #8]
   383bc:	add	fp, sp, #8
   383c0:	sub	sp, sp, #68	; 0x44
   383c4:	str	r0, [fp, #-48]	; 0xffffffd0
   383c8:	str	r1, [fp, #-52]	; 0xffffffcc
   383cc:	str	r2, [fp, #-56]	; 0xffffffc8
   383d0:	str	r3, [fp, #-60]	; 0xffffffc4
   383d4:	mov	r3, #0
   383d8:	str	r3, [fp, #-24]	; 0xffffffe8
   383dc:	ldr	r3, [fp, #4]
   383e0:	mov	r2, #0
   383e4:	str	r2, [r3]
   383e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   383ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   383f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   383f4:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   383f8:	str	r0, [fp, #-52]	; 0xffffffcc
   383fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38400:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38404:	cmp	r2, r3
   38408:	bne	38414 <flatcc_verify_union_vector_field@@Base+0x22d8>
   3840c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38410:	b	38530 <flatcc_verify_union_vector_field@@Base+0x23f4>
   38414:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38418:	str	r3, [fp, #-16]
   3841c:	ldr	r3, [fp, #-16]
   38420:	ldr	r4, [r3]
   38424:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38428:	str	r3, [fp, #-20]	; 0xffffffec
   3842c:	sub	r2, fp, #40	; 0x28
   38430:	sub	r3, fp, #44	; 0x2c
   38434:	str	r3, [sp, #4]
   38438:	sub	r3, fp, #36	; 0x24
   3843c:	str	r3, [sp]
   38440:	mov	r3, r2
   38444:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38448:	ldr	r1, [fp, #-20]	; 0xffffffec
   3844c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38450:	blx	r4
   38454:	str	r0, [fp, #-52]	; 0xffffffcc
   38458:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3845c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38460:	cmp	r2, r3
   38464:	bne	38470 <flatcc_verify_union_vector_field@@Base+0x2334>
   38468:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3846c:	b	38530 <flatcc_verify_union_vector_field@@Base+0x23f4>
   38470:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38474:	ldr	r3, [fp, #-20]	; 0xffffffec
   38478:	cmp	r2, r3
   3847c:	bne	3849c <flatcc_verify_union_vector_field@@Base+0x2360>
   38480:	ldr	r3, [fp, #-16]
   38484:	add	r3, r3, #4
   38488:	str	r3, [fp, #-16]
   3848c:	ldr	r3, [fp, #-16]
   38490:	ldr	r3, [r3]
   38494:	cmp	r3, #0
   38498:	bne	3841c <flatcc_verify_union_vector_field@@Base+0x22e0>
   3849c:	ldr	r2, [fp, #-20]	; 0xffffffec
   384a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   384a4:	cmp	r2, r3
   384a8:	bne	384c8 <flatcc_verify_union_vector_field@@Base+0x238c>
   384ac:	mov	r3, #23
   384b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   384b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   384b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   384bc:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   384c0:	mov	r3, r0
   384c4:	b	38530 <flatcc_verify_union_vector_field@@Base+0x23f4>
   384c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   384cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   384d0:	sub	r1, fp, #24
   384d4:	str	r1, [sp, #8]
   384d8:	strd	r2, [sp]
   384dc:	mov	r3, r0
   384e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   384e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   384e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   384ec:	bl	371b0 <flatcc_verify_union_vector_field@@Base+0x1074>
   384f0:	mov	r2, r0
   384f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   384f8:	cmp	r3, r2
   384fc:	bne	38508 <flatcc_verify_union_vector_field@@Base+0x23cc>
   38500:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38504:	b	38530 <flatcc_verify_union_vector_field@@Base+0x23f4>
   38508:	ldr	r3, [fp, #4]
   3850c:	vldr	s14, [r3]
   38510:	vldr	s15, [fp, #-24]	; 0xffffffe8
   38514:	vadd.f32	s15, s14, s15
   38518:	ldr	r3, [fp, #4]
   3851c:	vstr	s15, [r3]
   38520:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38524:	cmp	r3, #0
   38528:	bne	38414 <flatcc_verify_union_vector_field@@Base+0x22d8>
   3852c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38530:	mov	r0, r3
   38534:	sub	sp, fp, #8
   38538:	ldr	r4, [sp]
   3853c:	ldr	fp, [sp, #4]
   38540:	add	sp, sp, #8
   38544:	pop	{pc}		; (ldr pc, [sp], #4)
   38548:	str	r4, [sp, #-12]!
   3854c:	str	fp, [sp, #4]
   38550:	str	lr, [sp, #8]
   38554:	add	fp, sp, #8
   38558:	sub	sp, sp, #68	; 0x44
   3855c:	str	r0, [fp, #-48]	; 0xffffffd0
   38560:	str	r1, [fp, #-52]	; 0xffffffcc
   38564:	str	r2, [fp, #-56]	; 0xffffffc8
   38568:	str	r3, [fp, #-60]	; 0xffffffc4
   3856c:	mov	r2, #0
   38570:	mov	r3, #0
   38574:	strd	r2, [fp, #-28]	; 0xffffffe4
   38578:	ldr	r1, [fp, #4]
   3857c:	mov	r2, #0
   38580:	mov	r3, #0
   38584:	strd	r2, [r1]
   38588:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3858c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38590:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38594:	bl	36794 <flatcc_verify_union_vector_field@@Base+0x658>
   38598:	str	r0, [fp, #-52]	; 0xffffffcc
   3859c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   385a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   385a4:	cmp	r2, r3
   385a8:	bne	385b4 <flatcc_verify_union_vector_field@@Base+0x2478>
   385ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   385b0:	b	386d0 <flatcc_verify_union_vector_field@@Base+0x2594>
   385b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   385b8:	str	r3, [fp, #-16]
   385bc:	ldr	r3, [fp, #-16]
   385c0:	ldr	r4, [r3]
   385c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   385c8:	str	r3, [fp, #-20]	; 0xffffffec
   385cc:	sub	r2, fp, #40	; 0x28
   385d0:	sub	r3, fp, #44	; 0x2c
   385d4:	str	r3, [sp, #4]
   385d8:	sub	r3, fp, #36	; 0x24
   385dc:	str	r3, [sp]
   385e0:	mov	r3, r2
   385e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   385e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   385ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   385f0:	blx	r4
   385f4:	str	r0, [fp, #-52]	; 0xffffffcc
   385f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   385fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38600:	cmp	r2, r3
   38604:	bne	38610 <flatcc_verify_union_vector_field@@Base+0x24d4>
   38608:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3860c:	b	386d0 <flatcc_verify_union_vector_field@@Base+0x2594>
   38610:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38614:	ldr	r3, [fp, #-20]	; 0xffffffec
   38618:	cmp	r2, r3
   3861c:	bne	3863c <flatcc_verify_union_vector_field@@Base+0x2500>
   38620:	ldr	r3, [fp, #-16]
   38624:	add	r3, r3, #4
   38628:	str	r3, [fp, #-16]
   3862c:	ldr	r3, [fp, #-16]
   38630:	ldr	r3, [r3]
   38634:	cmp	r3, #0
   38638:	bne	385bc <flatcc_verify_union_vector_field@@Base+0x2480>
   3863c:	ldr	r2, [fp, #-20]	; 0xffffffec
   38640:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38644:	cmp	r2, r3
   38648:	bne	38668 <flatcc_verify_union_vector_field@@Base+0x252c>
   3864c:	mov	r3, #23
   38650:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38654:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38658:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3865c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   38660:	mov	r3, r0
   38664:	b	386d0 <flatcc_verify_union_vector_field@@Base+0x2594>
   38668:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3866c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   38670:	sub	r1, fp, #28
   38674:	str	r1, [sp, #8]
   38678:	strd	r2, [sp]
   3867c:	mov	r3, r0
   38680:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38684:	ldr	r1, [fp, #-52]	; 0xffffffcc
   38688:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3868c:	bl	3721c <flatcc_verify_union_vector_field@@Base+0x10e0>
   38690:	mov	r2, r0
   38694:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38698:	cmp	r3, r2
   3869c:	bne	386a8 <flatcc_verify_union_vector_field@@Base+0x256c>
   386a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   386a4:	b	386d0 <flatcc_verify_union_vector_field@@Base+0x2594>
   386a8:	ldr	r3, [fp, #4]
   386ac:	vldr	d6, [r3]
   386b0:	vldr	d7, [fp, #-28]	; 0xffffffe4
   386b4:	vadd.f64	d7, d6, d7
   386b8:	ldr	r3, [fp, #4]
   386bc:	vstr	d7, [r3]
   386c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   386c4:	cmp	r3, #0
   386c8:	bne	385b4 <flatcc_verify_union_vector_field@@Base+0x2478>
   386cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   386d0:	mov	r0, r3
   386d4:	sub	sp, fp, #8
   386d8:	ldr	r4, [sp]
   386dc:	ldr	fp, [sp, #4]
   386e0:	add	sp, sp, #8
   386e4:	pop	{pc}		; (ldr pc, [sp], #4)
   386e8:	push	{fp}		; (str fp, [sp, #-4]!)
   386ec:	add	fp, sp, #0
   386f0:	sub	sp, sp, #20
   386f4:	vstr	d0, [fp, #-20]	; 0xffffffec
   386f8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   386fc:	strd	r2, [fp, #-12]
   38700:	ldrd	r2, [fp, #-12]
   38704:	mov	r0, r2
   38708:	mov	r1, r3
   3870c:	add	sp, fp, #0
   38710:	pop	{fp}		; (ldr fp, [sp], #4)
   38714:	bx	lr
   38718:	push	{fp}		; (str fp, [sp, #-4]!)
   3871c:	add	fp, sp, #0
   38720:	sub	sp, sp, #20
   38724:	strd	r0, [fp, #-20]	; 0xffffffec
   38728:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3872c:	strd	r2, [fp, #-12]
   38730:	ldrd	r2, [fp, #-12]
   38734:	vmov	d7, r2, r3
   38738:	vmov.f64	d0, d7
   3873c:	add	sp, fp, #0
   38740:	pop	{fp}		; (ldr fp, [sp], #4)
   38744:	bx	lr
   38748:	push	{fp}		; (str fp, [sp, #-4]!)
   3874c:	add	fp, sp, #0
   38750:	sub	sp, sp, #20
   38754:	vstr	d0, [fp, #-20]	; 0xffffffec
   38758:	vldr	d7, [fp, #-20]	; 0xffffffec
   3875c:	vcvt.s32.f64	s15, d7
   38760:	vmov	r3, s15
   38764:	str	r3, [fp, #-8]
   38768:	vldr	d7, [fp, #-20]	; 0xffffffec
   3876c:	vcmpe.f64	d7, #0.0
   38770:	vmrs	APSR_nzcv, fpscr
   38774:	bpl	38780 <flatcc_verify_union_vector_field@@Base+0x2644>
   38778:	ldr	r3, [fp, #-8]
   3877c:	b	387b0 <flatcc_verify_union_vector_field@@Base+0x2674>
   38780:	ldr	r3, [fp, #-8]
   38784:	vmov	s15, r3
   38788:	vcvt.f64.s32	d7, s15
   3878c:	vldr	d6, [fp, #-20]	; 0xffffffec
   38790:	vsub.f64	d7, d6, d7
   38794:	vcmp.f64	d7, #0.0
   38798:	vmrs	APSR_nzcv, fpscr
   3879c:	beq	387ac <flatcc_verify_union_vector_field@@Base+0x2670>
   387a0:	ldr	r3, [fp, #-8]
   387a4:	add	r3, r3, #1
   387a8:	b	387b0 <flatcc_verify_union_vector_field@@Base+0x2674>
   387ac:	ldr	r3, [fp, #-8]
   387b0:	mov	r0, r3
   387b4:	add	sp, fp, #0
   387b8:	pop	{fp}		; (ldr fp, [sp], #4)
   387bc:	bx	lr
   387c0:	str	fp, [sp, #-8]!
   387c4:	str	lr, [sp, #4]
   387c8:	add	fp, sp, #4
   387cc:	sub	sp, sp, #16
   387d0:	str	r0, [fp, #-16]
   387d4:	str	r1, [fp, #-20]	; 0xffffffec
   387d8:	ldr	r3, [fp, #-16]
   387dc:	add	r3, r3, #63	; 0x3f
   387e0:	vmov	s15, r3
   387e4:	vcvt.f64.s32	d7, s15
   387e8:	vldr	d6, [pc, #176]	; 388a0 <flatcc_verify_union_vector_field@@Base+0x2764>
   387ec:	vmul.f64	d7, d7, d6
   387f0:	vmov.f64	d0, d7
   387f4:	bl	38748 <flatcc_verify_union_vector_field@@Base+0x260c>
   387f8:	str	r0, [fp, #-8]
   387fc:	ldr	r3, [fp, #-8]
   38800:	add	r3, r3, #344	; 0x158
   38804:	add	r3, r3, #3
   38808:	add	r2, r3, #7
   3880c:	cmp	r3, #0
   38810:	movlt	r3, r2
   38814:	movge	r3, r3
   38818:	asr	r3, r3, #3
   3881c:	add	r3, r3, #1
   38820:	str	r3, [fp, #-12]
   38824:	ldr	r2, [pc, #124]	; 388a8 <flatcc_verify_union_vector_field@@Base+0x276c>
   38828:	add	r2, pc, r2
   3882c:	ldr	r3, [fp, #-12]
   38830:	lsl	r3, r3, #4
   38834:	add	r3, r2, r3
   38838:	ldrd	r2, [r3]
   3883c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38840:	strd	r2, [r1]
   38844:	ldr	r2, [pc, #96]	; 388ac <flatcc_verify_union_vector_field@@Base+0x2770>
   38848:	add	r2, pc, r2
   3884c:	ldr	r3, [fp, #-12]
   38850:	lsl	r3, r3, #4
   38854:	add	r3, r2, r3
   38858:	add	r3, r3, #8
   3885c:	ldrsh	r3, [r3]
   38860:	mov	r2, r3
   38864:	ldr	r3, [fp, #-20]	; 0xffffffec
   38868:	str	r2, [r3, #8]
   3886c:	ldr	r2, [pc, #60]	; 388b0 <flatcc_verify_union_vector_field@@Base+0x2774>
   38870:	add	r2, pc, r2
   38874:	ldr	r3, [fp, #-12]
   38878:	lsl	r3, r3, #4
   3887c:	add	r3, r2, r3
   38880:	add	r3, r3, #10
   38884:	ldrsh	r3, [r3]
   38888:	mov	r0, r3
   3888c:	sub	sp, fp, #4
   38890:	ldr	fp, [sp]
   38894:	add	sp, sp, #4
   38898:	pop	{pc}		; (ldr pc, [sp], #4)
   3889c:	nop	{0}
   388a0:			; <UNDEFINED> instruction: 0x509f79fe
   388a4:	svccc	0x00d34413
   388a8:	andeq	r9, r1, r0, ror #17
   388ac:	andeq	r9, r1, r0, asr #17
   388b0:	muleq	r1, r8, r8
   388b4:	sub	sp, sp, #8
   388b8:	strd	r4, [sp, #-16]!
   388bc:	str	fp, [sp, #8]
   388c0:	str	lr, [sp, #12]
   388c4:	add	fp, sp, #12
   388c8:	sub	sp, sp, #24
   388cc:	str	r0, [fp, #-32]	; 0xffffffe0
   388d0:	add	r1, fp, #4
   388d4:	stm	r1, {r2, r3}
   388d8:	ldrd	r0, [fp, #4]
   388dc:	ldrd	r2, [fp, #20]
   388e0:	subs	r4, r0, r2
   388e4:	sbc	r5, r1, r3
   388e8:	strd	r4, [fp, #-28]	; 0xffffffe4
   388ec:	ldr	r3, [fp, #12]
   388f0:	str	r3, [fp, #-20]	; 0xffffffec
   388f4:	ldr	r2, [fp, #12]
   388f8:	ldr	r3, [fp, #28]
   388fc:	cmp	r2, r3
   38900:	bne	38918 <flatcc_verify_union_vector_field@@Base+0x27dc>
   38904:	ldrd	r0, [fp, #4]
   38908:	ldrd	r2, [fp, #20]
   3890c:	cmp	r1, r3
   38910:	cmpeq	r0, r2
   38914:	bcs	38938 <flatcc_verify_union_vector_field@@Base+0x27fc>
   38918:	ldr	r3, [pc, #84]	; 38974 <flatcc_verify_union_vector_field@@Base+0x2838>
   3891c:	add	r3, pc, r3
   38920:	mov	r2, #239	; 0xef
   38924:	ldr	r1, [pc, #76]	; 38978 <flatcc_verify_union_vector_field@@Base+0x283c>
   38928:	add	r1, pc, r1
   3892c:	ldr	r0, [pc, #72]	; 3897c <flatcc_verify_union_vector_field@@Base+0x2840>
   38930:	add	r0, pc, r0
   38934:	bl	145e8 <__assert_fail@plt>
   38938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3893c:	mov	r0, r3
   38940:	sub	r1, fp, #28
   38944:	ldrd	r2, [r1]
   38948:	strd	r2, [r0]
   3894c:	ldrd	r2, [r1, #8]
   38950:	strd	r2, [r0, #8]
   38954:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38958:	sub	sp, fp, #12
   3895c:	ldrd	r4, [sp]
   38960:	ldr	fp, [sp, #8]
   38964:	ldr	lr, [sp, #12]
   38968:	add	sp, sp, #16
   3896c:	add	sp, sp, #8
   38970:	bx	lr
   38974:	andeq	sl, r1, r4, asr r3
   38978:	andeq	r9, r1, r0, asr sp
   3897c:			; <UNDEFINED> instruction: 0x00019db8
   38980:	sub	sp, sp, #8
   38984:	strd	r4, [sp, #-32]!	; 0xffffffe0
   38988:	strd	r6, [sp, #8]
   3898c:	strd	r8, [sp, #16]
   38990:	str	fp, [sp, #24]
   38994:	str	lr, [sp, #28]
   38998:	add	fp, sp, #28
   3899c:	sub	sp, sp, #152	; 0x98
   389a0:	str	r0, [fp, #-120]	; 0xffffff88
   389a4:	add	r1, fp, #4
   389a8:	stm	r1, {r2, r3}
   389ac:	ldrd	r2, [fp, #4]
   389b0:	mov	r0, #0
   389b4:	mov	r1, #0
   389b8:	mov	r0, r3
   389bc:	mov	r1, #0
   389c0:	strd	r0, [fp, #-36]	; 0xffffffdc
   389c4:	ldrd	r0, [fp, #4]
   389c8:	mvn	r2, #0
   389cc:	mov	r3, #0
   389d0:	and	r4, r0, r2
   389d4:	and	r5, r1, r3
   389d8:	strd	r4, [fp, #-44]	; 0xffffffd4
   389dc:	ldrd	r2, [fp, #20]
   389e0:	mov	r0, #0
   389e4:	mov	r1, #0
   389e8:	mov	r0, r3
   389ec:	mov	r1, #0
   389f0:	strd	r0, [fp, #-52]	; 0xffffffcc
   389f4:	ldrd	r0, [fp, #20]
   389f8:	mvn	r2, #0
   389fc:	mov	r3, #0
   38a00:	and	r6, r0, r2
   38a04:	and	r7, r1, r3
   38a08:	strd	r6, [fp, #-60]	; 0xffffffc4
   38a0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38a10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38a14:	mul	r1, r3, r2
   38a18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   38a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38a20:	mul	r3, r3, r2
   38a24:	add	r1, r1, r3
   38a28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38a2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38a30:	umull	r2, r3, r2, r3
   38a34:	add	r1, r1, r3
   38a38:	mov	r3, r1
   38a3c:	strd	r2, [fp, #-68]	; 0xffffffbc
   38a40:	strd	r2, [fp, #-68]	; 0xffffffbc
   38a44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   38a48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38a4c:	mul	r1, r3, r2
   38a50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   38a54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38a58:	mul	r3, r3, r2
   38a5c:	add	r1, r1, r3
   38a60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   38a64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38a68:	umull	r2, r3, r2, r3
   38a6c:	add	r1, r1, r3
   38a70:	mov	r3, r1
   38a74:	strd	r2, [fp, #-76]	; 0xffffffb4
   38a78:	strd	r2, [fp, #-76]	; 0xffffffb4
   38a7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38a80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38a84:	mul	r1, r3, r2
   38a88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38a8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38a90:	mul	r3, r3, r2
   38a94:	add	r1, r1, r3
   38a98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38a9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38aa0:	umull	r2, r3, r2, r3
   38aa4:	add	r1, r1, r3
   38aa8:	mov	r3, r1
   38aac:	strd	r2, [fp, #-84]	; 0xffffffac
   38ab0:	strd	r2, [fp, #-84]	; 0xffffffac
   38ab4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   38ab8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38abc:	mul	r1, r3, r2
   38ac0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38ac4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38ac8:	mul	r3, r3, r2
   38acc:	add	r1, r1, r3
   38ad0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   38ad4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38ad8:	umull	r2, r3, r2, r3
   38adc:	add	r1, r1, r3
   38ae0:	mov	r3, r1
   38ae4:	strd	r2, [fp, #-92]	; 0xffffffa4
   38ae8:	strd	r2, [fp, #-92]	; 0xffffffa4
   38aec:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   38af0:	mov	r4, #0
   38af4:	mov	r5, #0
   38af8:	mov	r4, r3
   38afc:	mov	r5, #0
   38b00:	ldrd	r0, [fp, #-84]	; 0xffffffac
   38b04:	mvn	r2, #0
   38b08:	mov	r3, #0
   38b0c:	and	r8, r0, r2
   38b10:	and	r9, r1, r3
   38b14:	adds	r3, r4, r8
   38b18:	str	r3, [fp, #-132]	; 0xffffff7c
   38b1c:	adc	r3, r5, r9
   38b20:	str	r3, [fp, #-128]	; 0xffffff80
   38b24:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   38b28:	mvn	r2, #0
   38b2c:	mov	r3, #0
   38b30:	and	ip, r0, r2
   38b34:	str	ip, [fp, #-140]	; 0xffffff74
   38b38:	and	r3, r1, r3
   38b3c:	str	r3, [fp, #-136]	; 0xffffff78
   38b40:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   38b44:	mov	ip, r0
   38b48:	ldrd	r2, [fp, #-140]	; 0xffffff74
   38b4c:	mov	lr, r2
   38b50:	adds	ip, ip, lr
   38b54:	str	ip, [fp, #-172]	; 0xffffff54
   38b58:	adc	r3, r1, r3
   38b5c:	str	r3, [fp, #-168]	; 0xffffff58
   38b60:	ldrd	r2, [fp, #-172]	; 0xffffff54
   38b64:	strd	r2, [fp, #-100]	; 0xffffff9c
   38b68:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   38b6c:	adds	r1, r2, #-2147483648	; 0x80000000
   38b70:	str	r1, [fp, #-180]	; 0xffffff4c
   38b74:	adc	r3, r3, #0
   38b78:	str	r3, [fp, #-176]	; 0xffffff50
   38b7c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   38b80:	strd	r2, [fp, #-100]	; 0xffffff9c
   38b84:	ldrd	r0, [fp, #-84]	; 0xffffffac
   38b88:	mov	r2, #0
   38b8c:	mov	r3, #0
   38b90:	mov	r2, r1
   38b94:	mov	r3, #0
   38b98:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   38b9c:	adds	ip, r2, r0
   38ba0:	str	ip, [fp, #-148]	; 0xffffff6c
   38ba4:	adc	r3, r3, r1
   38ba8:	str	r3, [fp, #-144]	; 0xffffff70
   38bac:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   38bb0:	mov	r2, #0
   38bb4:	mov	r3, #0
   38bb8:	mov	r2, r1
   38bbc:	mov	r3, #0
   38bc0:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   38bc4:	mov	ip, r0
   38bc8:	adds	ip, ip, r2
   38bcc:	str	ip, [fp, #-156]	; 0xffffff64
   38bd0:	adc	r3, r1, r3
   38bd4:	str	r3, [fp, #-152]	; 0xffffff68
   38bd8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   38bdc:	mov	r2, #0
   38be0:	mov	r3, #0
   38be4:	mov	r2, r1
   38be8:	mov	r3, #0
   38bec:	ldrd	r0, [fp, #-156]	; 0xffffff64
   38bf0:	mov	ip, r0
   38bf4:	adds	ip, ip, r2
   38bf8:	str	ip, [fp, #-164]	; 0xffffff5c
   38bfc:	adc	r3, r1, r3
   38c00:	str	r3, [fp, #-160]	; 0xffffff60
   38c04:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   38c08:	strd	r2, [fp, #-116]	; 0xffffff8c
   38c0c:	ldr	r2, [fp, #12]
   38c10:	ldr	r3, [fp, #28]
   38c14:	add	r3, r2, r3
   38c18:	add	r3, r3, #64	; 0x40
   38c1c:	str	r3, [fp, #-108]	; 0xffffff94
   38c20:	ldr	r3, [fp, #-120]	; 0xffffff88
   38c24:	mov	r0, r3
   38c28:	sub	r1, fp, #116	; 0x74
   38c2c:	ldrd	r2, [r1]
   38c30:	strd	r2, [r0]
   38c34:	ldrd	r2, [r1, #8]
   38c38:	strd	r2, [r0, #8]
   38c3c:	ldr	r0, [fp, #-120]	; 0xffffff88
   38c40:	sub	sp, fp, #28
   38c44:	ldrd	r4, [sp]
   38c48:	ldrd	r6, [sp, #8]
   38c4c:	ldrd	r8, [sp, #16]
   38c50:	ldr	fp, [sp, #24]
   38c54:	ldr	lr, [sp, #28]
   38c58:	add	sp, sp, #32
   38c5c:	add	sp, sp, #8
   38c60:	bx	lr
   38c64:	sub	sp, sp, #8
   38c68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   38c6c:	strd	r6, [sp, #8]
   38c70:	str	fp, [sp, #16]
   38c74:	str	lr, [sp, #20]
   38c78:	add	fp, sp, #20
   38c7c:	sub	sp, sp, #8
   38c80:	str	r0, [fp, #-24]	; 0xffffffe8
   38c84:	add	r1, fp, #4
   38c88:	stm	r1, {r2, r3}
   38c8c:	ldrd	r2, [fp, #4]
   38c90:	orrs	r3, r2, r3
   38c94:	bne	38ce0 <flatcc_verify_union_vector_field@@Base+0x2ba4>
   38c98:	ldr	r3, [pc, #216]	; 38d78 <flatcc_verify_union_vector_field@@Base+0x2c3c>
   38c9c:	add	r3, pc, r3
   38ca0:	mov	r2, #260	; 0x104
   38ca4:	ldr	r1, [pc, #208]	; 38d7c <flatcc_verify_union_vector_field@@Base+0x2c40>
   38ca8:	add	r1, pc, r1
   38cac:	ldr	r0, [pc, #204]	; 38d80 <flatcc_verify_union_vector_field@@Base+0x2c44>
   38cb0:	add	r0, pc, r0
   38cb4:	bl	145e8 <__assert_fail@plt>
   38cb8:	ldrd	r0, [fp, #4]
   38cbc:	mov	r2, #0
   38cc0:	mov	r3, #0
   38cc4:	lsl	r3, r1, #10
   38cc8:	orr	r3, r3, r0, lsr #22
   38ccc:	lsl	r2, r0, #10
   38cd0:	strd	r2, [fp, #4]
   38cd4:	ldr	r3, [fp, #12]
   38cd8:	sub	r3, r3, #10
   38cdc:	str	r3, [fp, #12]
   38ce0:	ldrd	r2, [fp, #4]
   38ce4:	mov	r0, #0
   38ce8:	mov	r1, #0
   38cec:	movt	r1, #65472	; 0xffc0
   38cf0:	and	r4, r2, r0
   38cf4:	and	r5, r3, r1
   38cf8:	orrs	r3, r4, r5
   38cfc:	beq	38cb8 <flatcc_verify_union_vector_field@@Base+0x2b7c>
   38d00:	b	38d28 <flatcc_verify_union_vector_field@@Base+0x2bec>
   38d04:	ldrd	r2, [fp, #4]
   38d08:	adds	r6, r2, r2
   38d0c:	adc	r7, r3, r3
   38d10:	mov	r2, r6
   38d14:	mov	r3, r7
   38d18:	strd	r2, [fp, #4]
   38d1c:	ldr	r3, [fp, #12]
   38d20:	sub	r3, r3, #1
   38d24:	str	r3, [fp, #12]
   38d28:	ldrd	r2, [fp, #4]
   38d2c:	cmp	r2, #0
   38d30:	sbcs	r3, r3, #0
   38d34:	bge	38d04 <flatcc_verify_union_vector_field@@Base+0x2bc8>
   38d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38d3c:	mov	r0, r3
   38d40:	add	r1, fp, #4
   38d44:	ldrd	r2, [r1]
   38d48:	strd	r2, [r0]
   38d4c:	ldrd	r2, [r1, #8]
   38d50:	strd	r2, [r0, #8]
   38d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d58:	sub	sp, fp, #20
   38d5c:	ldrd	r4, [sp]
   38d60:	ldrd	r6, [sp, #8]
   38d64:	ldr	fp, [sp, #16]
   38d68:	ldr	lr, [sp, #20]
   38d6c:	add	sp, sp, #24
   38d70:	add	sp, sp, #8
   38d74:	bx	lr
   38d78:	andeq	r9, r1, r8, ror #31
   38d7c:	ldrdeq	r9, [r1], -r0
   38d80:	andeq	r9, r1, r4, asr sl
   38d84:	strd	r4, [sp, #-32]!	; 0xffffffe0
   38d88:	strd	r6, [sp, #8]
   38d8c:	strd	r8, [sp, #16]
   38d90:	str	fp, [sp, #24]
   38d94:	str	lr, [sp, #28]
   38d98:	add	fp, sp, #28
   38d9c:	sub	sp, sp, #48	; 0x30
   38da0:	str	r0, [fp, #-56]	; 0xffffffc8
   38da4:	vstr	d0, [fp, #-68]	; 0xffffffbc
   38da8:	vldr	d0, [fp, #-68]	; 0xffffffbc
   38dac:	bl	386e8 <flatcc_verify_union_vector_field@@Base+0x25ac>
   38db0:	strd	r0, [fp, #-36]	; 0xffffffdc
   38db4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   38db8:	mov	r0, #0
   38dbc:	mov	r1, #0
   38dc0:	movt	r1, #32752	; 0x7ff0
   38dc4:	and	ip, r2, r0
   38dc8:	str	ip, [fp, #-76]	; 0xffffffb4
   38dcc:	and	r3, r3, r1
   38dd0:	str	r3, [fp, #-72]	; 0xffffffb8
   38dd4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   38dd8:	orrs	r3, r2, r3
   38ddc:	bne	38e0c <flatcc_verify_union_vector_field@@Base+0x2cd0>
   38de0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   38de4:	mvn	r0, #0
   38de8:	movw	r1, #65535	; 0xffff
   38dec:	movt	r1, #15
   38df0:	and	r8, r2, r0
   38df4:	and	r9, r3, r1
   38df8:	strd	r8, [fp, #-52]	; 0xffffffcc
   38dfc:	movw	r3, #64462	; 0xfbce
   38e00:	movt	r3, #65535	; 0xffff
   38e04:	str	r3, [fp, #-44]	; 0xffffffd4
   38e08:	b	38e58 <flatcc_verify_union_vector_field@@Base+0x2d1c>
   38e0c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   38e10:	mvn	r0, #0
   38e14:	movw	r1, #65535	; 0xffff
   38e18:	movt	r1, #15
   38e1c:	and	r4, r2, r0
   38e20:	and	r5, r3, r1
   38e24:	adds	r6, r4, #0
   38e28:	adc	r7, r5, #1048576	; 0x100000
   38e2c:	strd	r6, [fp, #-52]	; 0xffffffcc
   38e30:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   38e34:	mov	r2, #0
   38e38:	mov	r3, #0
   38e3c:	lsr	r2, r1, #20
   38e40:	mov	r3, #0
   38e44:	mov	r3, r2
   38e48:	ubfx	r3, r3, #0, #11
   38e4c:	sub	r3, r3, #1072	; 0x430
   38e50:	sub	r3, r3, #3
   38e54:	str	r3, [fp, #-44]	; 0xffffffd4
   38e58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38e5c:	mov	r0, r3
   38e60:	sub	r1, fp, #52	; 0x34
   38e64:	ldrd	r2, [r1]
   38e68:	strd	r2, [r0]
   38e6c:	ldrd	r2, [r1, #8]
   38e70:	strd	r2, [r0, #8]
   38e74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   38e78:	sub	sp, fp, #28
   38e7c:	ldrd	r4, [sp]
   38e80:	ldrd	r6, [sp, #8]
   38e84:	ldrd	r8, [sp, #16]
   38e88:	ldr	fp, [sp, #24]
   38e8c:	add	sp, sp, #28
   38e90:	pop	{pc}		; (ldr pc, [sp], #4)
   38e94:	strd	r4, [sp, #-32]!	; 0xffffffe0
   38e98:	strd	r6, [sp, #8]
   38e9c:	strd	r8, [sp, #16]
   38ea0:	str	fp, [sp, #24]
   38ea4:	str	lr, [sp, #28]
   38ea8:	add	fp, sp, #28
   38eac:	sub	sp, sp, #112	; 0x70
   38eb0:	sub	ip, fp, #100	; 0x64
   38eb4:	stm	ip, {r0, r1, r2, r3}
   38eb8:	mov	r2, #0
   38ebc:	mov	r3, #1048576	; 0x100000
   38ec0:	strd	r2, [fp, #-44]	; 0xffffffd4
   38ec4:	mvn	r2, #0
   38ec8:	movw	r3, #65535	; 0xffff
   38ecc:	movt	r3, #15
   38ed0:	strd	r2, [fp, #-52]	; 0xffffffcc
   38ed4:	movw	r3, #64462	; 0xfbce
   38ed8:	movt	r3, #65535	; 0xffff
   38edc:	str	r3, [fp, #-56]	; 0xffffffc8
   38ee0:	movw	r3, #1075	; 0x433
   38ee4:	str	r3, [fp, #-60]	; 0xffffffc4
   38ee8:	mov	r3, #52	; 0x34
   38eec:	str	r3, [fp, #-64]	; 0xffffffc0
   38ef0:	sub	r0, fp, #84	; 0x54
   38ef4:	sub	r1, fp, #100	; 0x64
   38ef8:	ldrd	r2, [r1]
   38efc:	strd	r2, [r0]
   38f00:	ldrd	r2, [r1, #8]
   38f04:	strd	r2, [r0, #8]
   38f08:	b	38f34 <flatcc_verify_union_vector_field@@Base+0x2df8>
   38f0c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   38f10:	mov	r0, #0
   38f14:	mov	r1, #0
   38f18:	lsr	r0, r2, #1
   38f1c:	orr	r0, r0, r3, lsl #31
   38f20:	lsr	r1, r3, #1
   38f24:	strd	r0, [fp, #-84]	; 0xffffffac
   38f28:	ldr	r3, [fp, #-76]	; 0xffffffb4
   38f2c:	add	r3, r3, #1
   38f30:	str	r3, [fp, #-76]	; 0xffffffb4
   38f34:	ldrd	r4, [fp, #-84]	; 0xffffffac
   38f38:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   38f3c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   38f40:	adds	ip, r0, r2
   38f44:	str	ip, [fp, #-108]	; 0xffffff94
   38f48:	adc	r3, r1, r3
   38f4c:	str	r3, [fp, #-104]	; 0xffffff98
   38f50:	ldrd	r2, [fp, #-108]	; 0xffffff94
   38f54:	cmp	r5, r3
   38f58:	cmpeq	r4, r2
   38f5c:	bhi	38f0c <flatcc_verify_union_vector_field@@Base+0x2dd0>
   38f60:	ldr	r3, [fp, #-76]	; 0xffffffb4
   38f64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38f68:	cmp	r2, r3
   38f6c:	ble	38fa0 <flatcc_verify_union_vector_field@@Base+0x2e64>
   38f70:	vldr	d7, [pc, #296]	; 390a0 <flatcc_verify_union_vector_field@@Base+0x2f64>
   38f74:	b	3907c <flatcc_verify_union_vector_field@@Base+0x2f40>
   38f78:	ldrd	r2, [fp, #-84]	; 0xffffffac
   38f7c:	adds	r1, r2, r2
   38f80:	str	r1, [fp, #-140]	; 0xffffff74
   38f84:	adc	r3, r3, r3
   38f88:	str	r3, [fp, #-136]	; 0xffffff78
   38f8c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   38f90:	strd	r2, [fp, #-84]	; 0xffffffac
   38f94:	ldr	r3, [fp, #-76]	; 0xffffffb4
   38f98:	sub	r3, r3, #1
   38f9c:	str	r3, [fp, #-76]	; 0xffffffb4
   38fa0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   38fa4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38fa8:	cmp	r2, r3
   38fac:	bge	38fd4 <flatcc_verify_union_vector_field@@Base+0x2e98>
   38fb0:	ldrd	r0, [fp, #-84]	; 0xffffffac
   38fb4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   38fb8:	and	ip, r0, r2
   38fbc:	str	ip, [fp, #-116]	; 0xffffff8c
   38fc0:	and	r3, r1, r3
   38fc4:	str	r3, [fp, #-112]	; 0xffffff90
   38fc8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   38fcc:	orrs	r3, r2, r3
   38fd0:	beq	38f78 <flatcc_verify_union_vector_field@@Base+0x2e3c>
   38fd4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   38fd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38fdc:	cmp	r2, r3
   38fe0:	bne	39018 <flatcc_verify_union_vector_field@@Base+0x2edc>
   38fe4:	ldrd	r0, [fp, #-84]	; 0xffffffac
   38fe8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   38fec:	and	ip, r0, r2
   38ff0:	str	ip, [fp, #-124]	; 0xffffff84
   38ff4:	and	r3, r1, r3
   38ff8:	str	r3, [fp, #-120]	; 0xffffff88
   38ffc:	ldrd	r2, [fp, #-124]	; 0xffffff84
   39000:	orrs	r3, r2, r3
   39004:	bne	39018 <flatcc_verify_union_vector_field@@Base+0x2edc>
   39008:	mov	r2, #0
   3900c:	mov	r3, #0
   39010:	strd	r2, [fp, #-36]	; 0xffffffdc
   39014:	b	39030 <flatcc_verify_union_vector_field@@Base+0x2ef4>
   39018:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3901c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39020:	add	r3, r2, r3
   39024:	mov	r2, r3
   39028:	asr	r3, r2, #31
   3902c:	strd	r2, [fp, #-36]	; 0xffffffdc
   39030:	ldrd	r0, [fp, #-84]	; 0xffffffac
   39034:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   39038:	and	r8, r0, r2
   3903c:	and	r9, r1, r3
   39040:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   39044:	ldr	r1, [fp, #-64]	; 0xffffffc0
   39048:	sub	ip, r1, #32
   3904c:	rsb	r0, r1, #32
   39050:	lsl	r7, r3, r1
   39054:	orr	r7, r7, r2, lsl ip
   39058:	orr	r7, r7, r2, lsr r0
   3905c:	lsl	r6, r2, r1
   39060:	orr	r3, r8, r6
   39064:	str	r3, [fp, #-132]	; 0xffffff7c
   39068:	orr	r3, r9, r7
   3906c:	str	r3, [fp, #-128]	; 0xffffff80
   39070:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   39074:	bl	38718 <flatcc_verify_union_vector_field@@Base+0x25dc>
   39078:	vmov.f64	d7, d0
   3907c:	vmov.f64	d0, d7
   39080:	sub	sp, fp, #28
   39084:	ldrd	r4, [sp]
   39088:	ldrd	r6, [sp, #8]
   3908c:	ldrd	r8, [sp, #16]
   39090:	ldr	fp, [sp, #24]
   39094:	add	sp, sp, #28
   39098:	pop	{pc}		; (ldr pc, [sp], #4)
   3909c:	nop	{0}
	...
   390a8:	push	{fp}		; (str fp, [sp, #-4]!)
   390ac:	add	fp, sp, #0
   390b0:	sub	sp, sp, #28
   390b4:	str	r0, [fp, #-16]
   390b8:	str	r1, [fp, #-20]	; 0xffffffec
   390bc:	str	r2, [fp, #-24]	; 0xffffffe8
   390c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   390c4:	add	r3, r3, #1
   390c8:	movw	r2, #1233	; 0x4d1
   390cc:	mul	r3, r2, r3
   390d0:	asr	r3, r3, #12
   390d4:	add	r3, r3, #1
   390d8:	str	r3, [fp, #-8]
   390dc:	ldr	r3, [pc, #76]	; 39130 <flatcc_verify_union_vector_field@@Base+0x2ff4>
   390e0:	add	r3, pc, r3
   390e4:	ldr	r2, [fp, #-8]
   390e8:	ldr	r3, [r3, r2, lsl #2]
   390ec:	ldr	r2, [fp, #-16]
   390f0:	cmp	r2, r3
   390f4:	bcs	39104 <flatcc_verify_union_vector_field@@Base+0x2fc8>
   390f8:	ldr	r3, [fp, #-8]
   390fc:	sub	r3, r3, #1
   39100:	str	r3, [fp, #-8]
   39104:	ldr	r3, [pc, #40]	; 39134 <flatcc_verify_union_vector_field@@Base+0x2ff8>
   39108:	add	r3, pc, r3
   3910c:	ldr	r2, [fp, #-8]
   39110:	ldr	r2, [r3, r2, lsl #2]
   39114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39118:	str	r2, [r3]
   3911c:	ldr	r3, [fp, #-8]
   39120:	mov	r0, r3
   39124:	add	sp, fp, #0
   39128:	pop	{fp}		; (ldr fp, [sp], #4)
   3912c:	bx	lr
   39130:	andeq	r9, r1, r0, lsr r6
   39134:	andeq	r9, r1, r8, lsl #12
   39138:	str	fp, [sp, #-8]!
   3913c:	str	lr, [sp, #4]
   39140:	add	fp, sp, #4
   39144:	sub	sp, sp, #24
   39148:	str	r0, [fp, #-24]	; 0xffffffe8
   3914c:	str	r1, [fp, #-28]	; 0xffffffe4
   39150:	mov	r3, #348	; 0x15c
   39154:	str	r3, [fp, #-8]
   39158:	mov	r3, #8
   3915c:	str	r3, [fp, #-12]
   39160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39164:	cmn	r3, #348	; 0x15c
   39168:	bge	3918c <flatcc_verify_union_vector_field@@Base+0x3050>
   3916c:	ldr	r3, [pc, #336]	; 392c4 <flatcc_verify_union_vector_field@@Base+0x3188>
   39170:	add	r3, pc, r3
   39174:	mov	r2, #80	; 0x50
   39178:	ldr	r1, [pc, #328]	; 392c8 <flatcc_verify_union_vector_field@@Base+0x318c>
   3917c:	add	r1, pc, r1
   39180:	ldr	r0, [pc, #324]	; 392cc <flatcc_verify_union_vector_field@@Base+0x3190>
   39184:	add	r0, pc, r0
   39188:	bl	145e8 <__assert_fail@plt>
   3918c:	ldr	r3, [fp, #-12]
   39190:	add	r3, r3, #336	; 0x150
   39194:	add	r3, r3, #3
   39198:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3919c:	cmp	r2, r3
   391a0:	ble	391c4 <flatcc_verify_union_vector_field@@Base+0x3088>
   391a4:	ldr	r3, [pc, #292]	; 392d0 <flatcc_verify_union_vector_field@@Base+0x3194>
   391a8:	add	r3, pc, r3
   391ac:	mov	r2, #81	; 0x51
   391b0:	ldr	r1, [pc, #284]	; 392d4 <flatcc_verify_union_vector_field@@Base+0x3198>
   391b4:	add	r1, pc, r1
   391b8:	ldr	r0, [pc, #280]	; 392d8 <flatcc_verify_union_vector_field@@Base+0x319c>
   391bc:	add	r0, pc, r0
   391c0:	bl	145e8 <__assert_fail@plt>
   391c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   391c8:	ldr	r3, [fp, #-8]
   391cc:	add	r2, r2, r3
   391d0:	ldr	r3, [fp, #-12]
   391d4:	sdiv	r3, r2, r3
   391d8:	str	r3, [fp, #-16]
   391dc:	ldr	r2, [pc, #248]	; 392dc <flatcc_verify_union_vector_field@@Base+0x31a0>
   391e0:	add	r2, pc, r2
   391e4:	ldr	r3, [fp, #-16]
   391e8:	lsl	r3, r3, #4
   391ec:	add	r3, r2, r3
   391f0:	add	r3, r3, #10
   391f4:	ldrsh	r3, [r3]
   391f8:	str	r3, [fp, #-20]	; 0xffffffec
   391fc:	ldr	r2, [pc, #220]	; 392e0 <flatcc_verify_union_vector_field@@Base+0x31a4>
   39200:	add	r2, pc, r2
   39204:	ldr	r3, [fp, #-16]
   39208:	lsl	r3, r3, #4
   3920c:	add	r3, r2, r3
   39210:	ldrd	r2, [r3]
   39214:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39218:	strd	r2, [r1]
   3921c:	ldr	r2, [pc, #192]	; 392e4 <flatcc_verify_union_vector_field@@Base+0x31a8>
   39220:	add	r2, pc, r2
   39224:	ldr	r3, [fp, #-16]
   39228:	lsl	r3, r3, #4
   3922c:	add	r3, r2, r3
   39230:	add	r3, r3, #8
   39234:	ldrsh	r3, [r3]
   39238:	mov	r2, r3
   3923c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39240:	str	r2, [r3, #8]
   39244:	ldr	r2, [fp, #-20]	; 0xffffffec
   39248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3924c:	cmp	r2, r3
   39250:	ble	39274 <flatcc_verify_union_vector_field@@Base+0x3138>
   39254:	ldr	r3, [pc, #140]	; 392e8 <flatcc_verify_union_vector_field@@Base+0x31ac>
   39258:	add	r3, pc, r3
   3925c:	mov	r2, #88	; 0x58
   39260:	ldr	r1, [pc, #132]	; 392ec <flatcc_verify_union_vector_field@@Base+0x31b0>
   39264:	add	r1, pc, r1
   39268:	ldr	r0, [pc, #128]	; 392f0 <flatcc_verify_union_vector_field@@Base+0x31b4>
   3926c:	add	r0, pc, r0
   39270:	bl	145e8 <__assert_fail@plt>
   39274:	ldr	r2, [fp, #-20]	; 0xffffffec
   39278:	ldr	r3, [fp, #-12]
   3927c:	add	r3, r2, r3
   39280:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39284:	cmp	r2, r3
   39288:	blt	392ac <flatcc_verify_union_vector_field@@Base+0x3170>
   3928c:	ldr	r3, [pc, #96]	; 392f4 <flatcc_verify_union_vector_field@@Base+0x31b8>
   39290:	add	r3, pc, r3
   39294:	mov	r2, #89	; 0x59
   39298:	ldr	r1, [pc, #88]	; 392f8 <flatcc_verify_union_vector_field@@Base+0x31bc>
   3929c:	add	r1, pc, r1
   392a0:	ldr	r0, [pc, #84]	; 392fc <flatcc_verify_union_vector_field@@Base+0x31c0>
   392a4:	add	r0, pc, r0
   392a8:	bl	145e8 <__assert_fail@plt>
   392ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   392b0:	mov	r0, r3
   392b4:	sub	sp, fp, #4
   392b8:	ldr	fp, [sp]
   392bc:	add	sp, sp, #4
   392c0:	pop	{pc}		; (ldr pc, [sp], #4)
   392c4:	andeq	r9, r1, ip, lsr #22
   392c8:	andeq	r9, r1, r0, asr #11
   392cc:	andeq	r9, r1, r8, lsr #12
   392d0:	strdeq	r9, [r1], -r4
   392d4:	andeq	r9, r1, r8, lsl #11
   392d8:	andeq	r9, r1, r0, lsl r6
   392dc:	andeq	r8, r1, r8, lsr #30
   392e0:	andeq	r8, r1, r8, lsl #30
   392e4:	andeq	r8, r1, r8, ror #29
   392e8:	andeq	r9, r1, r4, asr #20
   392ec:	ldrdeq	r9, [r1], -r8
   392f0:	andeq	r9, r1, ip, lsl #11
   392f4:	andeq	r9, r1, ip, lsl #20
   392f8:	andeq	r9, r1, r0, lsr #9
   392fc:	andeq	r9, r1, r4, ror #10

00039300 <grisu3_diy_fp_encode_double@@Base>:
   39300:	strd	r4, [sp, #-32]!	; 0xffffffe0
   39304:	strd	r6, [sp, #8]
   39308:	strd	r8, [sp, #16]
   3930c:	str	fp, [sp, #24]
   39310:	str	lr, [sp, #28]
   39314:	add	fp, sp, #28
   39318:	sub	sp, sp, #216	; 0xd8
   3931c:	strd	r0, [fp, #-156]	; 0xffffff64
   39320:	str	r2, [fp, #-160]	; 0xffffff60
   39324:	str	r3, [fp, #-164]	; 0xffffff5c
   39328:	mov	r3, #3
   3932c:	str	r3, [fp, #-40]	; 0xffffffd8
   39330:	mov	r2, #1
   39334:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39338:	lsl	r3, r2, r3
   3933c:	str	r3, [fp, #-44]	; 0xffffffd4
   39340:	movw	r3, #64462	; 0xfbce
   39344:	movt	r3, #65535	; 0xffff
   39348:	str	r3, [fp, #-48]	; 0xffffffd0
   3934c:	mov	r2, #0
   39350:	mov	r3, #1048576	; 0x100000
   39354:	strd	r2, [fp, #-60]	; 0xffffffc4
   39358:	mov	r3, #64	; 0x40
   3935c:	str	r3, [fp, #-64]	; 0xffffffc0
   39360:	mov	r3, #19
   39364:	str	r3, [fp, #-68]	; 0xffffffbc
   39368:	ldr	r3, [fp, #4]
   3936c:	cmp	r3, #0
   39370:	beq	39388 <grisu3_diy_fp_encode_double@@Base+0x88>
   39374:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39378:	lsr	r3, r2, #31
   3937c:	add	r3, r3, r2
   39380:	asr	r3, r3, #1
   39384:	b	3938c <grisu3_diy_fp_encode_double@@Base+0x8c>
   39388:	mov	r3, #0
   3938c:	str	r3, [fp, #-32]	; 0xffffffe0
   39390:	ldr	r2, [fp, #-160]	; 0xffffff60
   39394:	ldr	r3, [fp, #-164]	; 0xffffff5c
   39398:	sub	r3, r2, r3
   3939c:	str	r3, [fp, #-72]	; 0xffffffb8
   393a0:	ldrd	r2, [fp, #-156]	; 0xffffff64
   393a4:	strd	r2, [fp, #-116]	; 0xffffff8c
   393a8:	mov	r3, #0
   393ac:	str	r3, [fp, #-108]	; 0xffffff94
   393b0:	sub	r0, fp, #116	; 0x74
   393b4:	mov	r1, sp
   393b8:	sub	r3, fp, #108	; 0x6c
   393bc:	ldrd	r2, [r3]
   393c0:	strd	r2, [r1]
   393c4:	sub	r3, fp, #116	; 0x74
   393c8:	ldm	r3, {r2, r3}
   393cc:	bl	38c64 <flatcc_verify_union_vector_field@@Base+0x2b28>
   393d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   393d4:	rsb	r2, r3, #0
   393d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   393dc:	lsl	r3, r3, r2
   393e0:	str	r3, [fp, #-32]	; 0xffffffe0
   393e4:	sub	r3, fp, #132	; 0x84
   393e8:	mov	r1, r3
   393ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   393f0:	bl	39138 <flatcc_verify_union_vector_field@@Base+0x2ffc>
   393f4:	str	r0, [fp, #-76]	; 0xffffffb4
   393f8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   393fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39400:	cmp	r2, r3
   39404:	beq	394f4 <grisu3_diy_fp_encode_double@@Base+0x1f4>
   39408:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3940c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   39410:	sub	r3, r2, r3
   39414:	sub	r3, r3, #1
   39418:	str	r3, [fp, #-80]	; 0xffffffb0
   3941c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39420:	cmp	r3, #0
   39424:	blt	39434 <grisu3_diy_fp_encode_double@@Base+0x134>
   39428:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3942c:	cmp	r3, #6
   39430:	ble	39454 <grisu3_diy_fp_encode_double@@Base+0x154>
   39434:	ldr	r3, [pc, #1132]	; 398a8 <grisu3_diy_fp_encode_double@@Base+0x5a8>
   39438:	add	r3, pc, r3
   3943c:	mov	r2, #185	; 0xb9
   39440:	ldr	r1, [pc, #1124]	; 398ac <grisu3_diy_fp_encode_double@@Base+0x5ac>
   39444:	add	r1, pc, r1
   39448:	ldr	r0, [pc, #1120]	; 398b0 <grisu3_diy_fp_encode_double@@Base+0x5b0>
   3944c:	add	r0, pc, r0
   39450:	bl	145e8 <__assert_fail@plt>
   39454:	sub	ip, fp, #180	; 0xb4
   39458:	ldr	r2, [pc, #1108]	; 398b4 <grisu3_diy_fp_encode_double@@Base+0x5b4>
   3945c:	add	r2, pc, r2
   39460:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39464:	add	r0, sp, #8
   39468:	lsl	r1, r3, #4
   3946c:	add	r1, r2, r1
   39470:	ldrd	r2, [r1]
   39474:	strd	r2, [r0]
   39478:	ldrd	r2, [r1, #8]
   3947c:	strd	r2, [r0, #8]
   39480:	mov	r1, sp
   39484:	sub	r3, fp, #108	; 0x6c
   39488:	ldrd	r2, [r3]
   3948c:	strd	r2, [r1]
   39490:	sub	r3, fp, #116	; 0x74
   39494:	ldm	r3, {r2, r3}
   39498:	mov	r0, ip
   3949c:	bl	38980 <flatcc_verify_union_vector_field@@Base+0x2844>
   394a0:	sub	r0, fp, #116	; 0x74
   394a4:	sub	r1, fp, #180	; 0xb4
   394a8:	ldrd	r2, [r1]
   394ac:	strd	r2, [r0]
   394b0:	ldrd	r2, [r1, #8]
   394b4:	strd	r2, [r0, #8]
   394b8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   394bc:	add	r2, r3, #1
   394c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   394c4:	add	r2, r2, r3
   394c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   394cc:	cmp	r3, r2
   394d0:	bge	394f4 <grisu3_diy_fp_encode_double@@Base+0x1f4>
   394d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   394d8:	lsr	r3, r2, #31
   394dc:	add	r3, r3, r2
   394e0:	asr	r3, r3, #1
   394e4:	mov	r2, r3
   394e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   394ec:	add	r3, r3, r2
   394f0:	str	r3, [fp, #-32]	; 0xffffffe0
   394f4:	sub	ip, fp, #180	; 0xb4
   394f8:	add	r0, sp, #8
   394fc:	sub	r1, fp, #132	; 0x84
   39500:	ldrd	r2, [r1]
   39504:	strd	r2, [r0]
   39508:	ldrd	r2, [r1, #8]
   3950c:	strd	r2, [r0, #8]
   39510:	mov	r1, sp
   39514:	sub	r3, fp, #108	; 0x6c
   39518:	ldrd	r2, [r3]
   3951c:	strd	r2, [r1]
   39520:	sub	r3, fp, #116	; 0x74
   39524:	ldm	r3, {r2, r3}
   39528:	mov	r0, ip
   3952c:	bl	38980 <flatcc_verify_union_vector_field@@Base+0x2844>
   39530:	sub	r0, fp, #116	; 0x74
   39534:	sub	r1, fp, #180	; 0xb4
   39538:	ldrd	r2, [r1]
   3953c:	strd	r2, [r0]
   39540:	ldrd	r2, [r1, #8]
   39544:	strd	r2, [r0, #8]
   39548:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3954c:	cmp	r3, #0
   39550:	movne	r3, #1
   39554:	moveq	r3, #0
   39558:	uxtb	r3, r3
   3955c:	mov	r2, r3
   39560:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39564:	add	r2, r2, r3
   39568:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3956c:	add	r3, r3, r2
   39570:	str	r3, [fp, #-32]	; 0xffffffe0
   39574:	ldr	r3, [fp, #-108]	; 0xffffff94
   39578:	str	r3, [fp, #-84]	; 0xffffffac
   3957c:	sub	r0, fp, #180	; 0xb4
   39580:	mov	r1, sp
   39584:	sub	r3, fp, #108	; 0x6c
   39588:	ldrd	r2, [r3]
   3958c:	strd	r2, [r1]
   39590:	sub	r3, fp, #116	; 0x74
   39594:	ldm	r3, {r2, r3}
   39598:	bl	38c64 <flatcc_verify_union_vector_field@@Base+0x2b28>
   3959c:	sub	r0, fp, #116	; 0x74
   395a0:	sub	r1, fp, #180	; 0xb4
   395a4:	ldrd	r2, [r1]
   395a8:	strd	r2, [r0]
   395ac:	ldrd	r2, [r1, #8]
   395b0:	strd	r2, [r0, #8]
   395b4:	ldr	r2, [fp, #-108]	; 0xffffff94
   395b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   395bc:	sub	r2, r3, r2
   395c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   395c4:	lsl	r3, r3, r2
   395c8:	str	r3, [fp, #-32]	; 0xffffffe0
   395cc:	ldr	r2, [fp, #-108]	; 0xffffff94
   395d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   395d4:	add	r3, r3, r2
   395d8:	str	r3, [fp, #-88]	; 0xffffffa8
   395dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   395e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   395e4:	add	r2, r2, r3
   395e8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   395ec:	cmp	r3, r2
   395f0:	bge	3961c <grisu3_diy_fp_encode_double@@Base+0x31c>
   395f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   395f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   395fc:	cmp	r2, r3
   39600:	ble	39614 <grisu3_diy_fp_encode_double@@Base+0x314>
   39604:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39608:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3960c:	sub	r3, r2, r3
   39610:	b	39620 <grisu3_diy_fp_encode_double@@Base+0x320>
   39614:	mov	r3, #0
   39618:	b	39620 <grisu3_diy_fp_encode_double@@Base+0x320>
   3961c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39620:	str	r3, [fp, #-88]	; 0xffffffa8
   39624:	ldr	r2, [fp, #-64]	; 0xffffffc0
   39628:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3962c:	sub	r3, r2, r3
   39630:	str	r3, [fp, #-36]	; 0xffffffdc
   39634:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39638:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3963c:	add	r2, r2, r3
   39640:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39644:	cmp	r3, r2
   39648:	bgt	396c8 <grisu3_diy_fp_encode_double@@Base+0x3c8>
   3964c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39650:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39654:	add	r2, r2, r3
   39658:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3965c:	sub	r3, r2, r3
   39660:	sub	r3, r3, #1
   39664:	str	r3, [fp, #-92]	; 0xffffffa4
   39668:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   3966c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   39670:	rsb	ip, r1, #32
   39674:	sub	r0, r1, #32
   39678:	lsr	r4, r2, r1
   3967c:	orr	r4, r4, r3, lsl ip
   39680:	orr	r4, r4, r3, lsr r0
   39684:	lsr	r5, r3, r1
   39688:	strd	r4, [fp, #-116]	; 0xffffff8c
   3968c:	ldr	r2, [fp, #-108]	; 0xffffff94
   39690:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39694:	add	r3, r2, r3
   39698:	str	r3, [fp, #-108]	; 0xffffff94
   3969c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   396a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   396a4:	asr	r3, r2, r3
   396a8:	add	r2, r3, #1
   396ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   396b0:	add	r3, r3, r2
   396b4:	str	r3, [fp, #-32]	; 0xffffffe0
   396b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   396bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   396c0:	sub	r3, r2, r3
   396c4:	str	r3, [fp, #-36]	; 0xffffffdc
   396c8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   396cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   396d0:	rsb	ip, r1, #32
   396d4:	sub	r0, r1, #32
   396d8:	lsr	r8, r2, r1
   396dc:	orr	r8, r8, r3, lsl ip
   396e0:	orr	r8, r8, r3, lsr r0
   396e4:	lsr	r9, r3, r1
   396e8:	strd	r8, [fp, #-148]	; 0xffffff6c
   396ec:	ldr	r2, [fp, #-108]	; 0xffffff94
   396f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   396f4:	add	r3, r2, r3
   396f8:	str	r3, [fp, #-140]	; 0xffffff74
   396fc:	ldrd	r4, [fp, #-116]	; 0xffffff8c
   39700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39704:	sub	r1, r3, #1
   39708:	mov	r2, #1
   3970c:	mov	r3, #0
   39710:	sub	ip, r1, #32
   39714:	rsb	r0, r1, #32
   39718:	lsl	r7, r3, r1
   3971c:	orr	r7, r7, r2, lsl ip
   39720:	orr	r7, r7, r2, lsr r0
   39724:	lsl	r6, r2, r1
   39728:	and	r3, r4, r6
   3972c:	str	r3, [fp, #-196]	; 0xffffff3c
   39730:	and	r3, r5, r7
   39734:	str	r3, [fp, #-192]	; 0xffffff40
   39738:	ldr	r1, [fp, #-196]	; 0xffffff3c
   3973c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39740:	mov	r2, r3
   39744:	asr	r3, r2, #31
   39748:	mov	r3, r2
   3974c:	mul	r3, r3, r1
   39750:	str	r3, [fp, #-96]	; 0xffffffa0
   39754:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39758:	mov	r2, r3
   3975c:	asr	r3, r2, #31
   39760:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39764:	sub	r1, r1, #1
   39768:	sub	ip, r1, #32
   3976c:	rsb	r0, r1, #32
   39770:	lsl	lr, r3, r1
   39774:	str	lr, [fp, #-184]	; 0xffffff48
   39778:	ldr	lr, [fp, #-184]	; 0xffffff48
   3977c:	orr	ip, lr, r2, lsl ip
   39780:	str	ip, [fp, #-184]	; 0xffffff48
   39784:	ldr	ip, [fp, #-184]	; 0xffffff48
   39788:	orr	r0, ip, r2, lsr r0
   3978c:	str	r0, [fp, #-184]	; 0xffffff48
   39790:	lsl	r3, r2, r1
   39794:	str	r3, [fp, #-188]	; 0xffffff44
   39798:	ldr	r3, [fp, #-188]	; 0xffffff44
   3979c:	str	r3, [fp, #-100]	; 0xffffff9c
   397a0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   397a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   397a8:	add	r3, r2, r3
   397ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   397b0:	cmp	r2, r3
   397b4:	blt	39834 <grisu3_diy_fp_encode_double@@Base+0x534>
   397b8:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   397bc:	adds	r1, r2, #1
   397c0:	str	r1, [fp, #-204]	; 0xffffff34
   397c4:	adc	r3, r3, #0
   397c8:	str	r3, [fp, #-200]	; 0xffffff38
   397cc:	ldrd	r2, [fp, #-204]	; 0xffffff34
   397d0:	strd	r2, [fp, #-148]	; 0xffffff6c
   397d4:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   397d8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   397dc:	adds	ip, r2, r2
   397e0:	str	ip, [fp, #-220]	; 0xffffff24
   397e4:	adc	r3, r3, r3
   397e8:	str	r3, [fp, #-216]	; 0xffffff28
   397ec:	ldrd	r2, [fp, #-220]	; 0xffffff24
   397f0:	and	ip, r0, r2
   397f4:	str	ip, [fp, #-212]	; 0xffffff2c
   397f8:	and	r3, r1, r3
   397fc:	str	r3, [fp, #-208]	; 0xffffff30
   39800:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   39804:	orrs	r3, r2, r3
   39808:	beq	39834 <grisu3_diy_fp_encode_double@@Base+0x534>
   3980c:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   39810:	mov	r2, #0
   39814:	mov	r3, #0
   39818:	lsr	r2, r0, #1
   3981c:	orr	r2, r2, r1, lsl #31
   39820:	lsr	r3, r1, #1
   39824:	strd	r2, [fp, #-148]	; 0xffffff6c
   39828:	ldr	r3, [fp, #-140]	; 0xffffff74
   3982c:	add	r3, r3, #1
   39830:	str	r3, [fp, #-140]	; 0xffffff74
   39834:	sub	r3, fp, #148	; 0x94
   39838:	ldm	r3, {r0, r1, r2, r3}
   3983c:	bl	38e94 <flatcc_verify_union_vector_field@@Base+0x2d58>
   39840:	vmov.f64	d7, d0
   39844:	ldr	r3, [fp, #8]
   39848:	vstr	d7, [r3]
   3984c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   39850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39854:	sub	r3, r2, r3
   39858:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3985c:	cmp	r2, r3
   39860:	ble	3987c <grisu3_diy_fp_encode_double@@Base+0x57c>
   39864:	ldr	r2, [fp, #-100]	; 0xffffff9c
   39868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3986c:	add	r3, r2, r3
   39870:	ldr	r2, [fp, #-96]	; 0xffffffa0
   39874:	cmp	r2, r3
   39878:	blt	39884 <grisu3_diy_fp_encode_double@@Base+0x584>
   3987c:	mov	r3, #1
   39880:	b	39888 <grisu3_diy_fp_encode_double@@Base+0x588>
   39884:	mov	r3, #0
   39888:	mov	r0, r3
   3988c:	sub	sp, fp, #28
   39890:	ldrd	r4, [sp]
   39894:	ldrd	r6, [sp, #8]
   39898:	ldrd	r8, [sp, #16]
   3989c:	ldr	fp, [sp, #24]
   398a0:	add	sp, sp, #28
   398a4:	pop	{pc}		; (ldr pc, [sp], #4)
   398a8:	andeq	r9, r1, r4, lsl #17
   398ac:	strdeq	r9, [r1], -r8
   398b0:	ldrdeq	r9, [r1], -r8
   398b4:	ldrdeq	fp, [r2], -r4
   398b8:	str	fp, [sp, #-8]!
   398bc:	str	lr, [sp, #4]
   398c0:	add	fp, sp, #4
   398c4:	sub	sp, sp, #48	; 0x30
   398c8:	str	r0, [fp, #-32]	; 0xffffffe0
   398cc:	str	r1, [fp, #-36]	; 0xffffffdc
   398d0:	str	r2, [fp, #-40]	; 0xffffffd8
   398d4:	movw	r3, #309	; 0x135
   398d8:	str	r3, [fp, #-16]
   398dc:	movw	r3, #65212	; 0xfebc
   398e0:	movt	r3, #65535	; 0xffff
   398e4:	str	r3, [fp, #-20]	; 0xffffffec
   398e8:	ldrd	r2, [fp, #4]
   398ec:	orrs	r3, r2, r3
   398f0:	beq	39904 <grisu3_diy_fp_encode_double@@Base+0x604>
   398f4:	ldr	r2, [fp, #12]
   398f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   398fc:	cmp	r2, r3
   39900:	bge	39918 <grisu3_diy_fp_encode_double@@Base+0x618>
   39904:	ldr	r1, [fp, #24]
   39908:	mov	r2, #0
   3990c:	mov	r3, #0
   39910:	strd	r2, [r1]
   39914:	b	39f04 <grisu3_diy_fp_encode_double@@Base+0xc04>
   39918:	ldr	r3, [fp, #12]
   3991c:	sub	r3, r3, #1
   39920:	ldr	r2, [fp, #-16]
   39924:	cmp	r2, r3
   39928:	bge	3994c <grisu3_diy_fp_encode_double@@Base+0x64c>
   3992c:	mov	r0, #0
   39930:	mov	r1, #0
   39934:	movt	r1, #32752	; 0x7ff0
   39938:	bl	38718 <flatcc_verify_union_vector_field@@Base+0x25dc>
   3993c:	vmov.f64	d7, d0
   39940:	ldr	r3, [fp, #24]
   39944:	vstr	d7, [r3]
   39948:	b	39f04 <grisu3_diy_fp_encode_double@@Base+0xc04>
   3994c:	ldrd	r2, [fp, #4]
   39950:	mvn	r0, #0
   39954:	movw	r1, #65535	; 0xffff
   39958:	movt	r1, #31
   3995c:	cmp	r3, r1
   39960:	cmpeq	r2, r0
   39964:	bhi	39de4 <grisu3_diy_fp_encode_double@@Base+0xae4>
   39968:	ldr	r3, [fp, #12]
   3996c:	cmp	r3, #0
   39970:	blt	39de4 <grisu3_diy_fp_encode_double@@Base+0xae4>
   39974:	ldr	r3, [fp, #12]
   39978:	cmp	r3, #22
   3997c:	bgt	39de4 <grisu3_diy_fp_encode_double@@Base+0xae4>
   39980:	ldrd	r0, [fp, #4]
   39984:	bl	4da68 <flatcc_json_printer_clear@@Base+0x3b4>
   39988:	mov	r2, r0
   3998c:	mov	r3, r1
   39990:	strd	r2, [fp, #-12]
   39994:	ldr	r2, [fp, #12]
   39998:	ldr	r3, [fp, #16]
   3999c:	sub	r3, r2, r3
   399a0:	add	r3, r3, #22
   399a4:	cmp	r3, #44	; 0x2c
   399a8:	addls	pc, pc, r3, lsl #2
   399ac:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   399b0:	b	39a64 <grisu3_diy_fp_encode_double@@Base+0x764>
   399b4:	b	39a78 <grisu3_diy_fp_encode_double@@Base+0x778>
   399b8:	b	39a8c <grisu3_diy_fp_encode_double@@Base+0x78c>
   399bc:	b	39aa0 <grisu3_diy_fp_encode_double@@Base+0x7a0>
   399c0:	b	39ab4 <grisu3_diy_fp_encode_double@@Base+0x7b4>
   399c4:	b	39ac8 <grisu3_diy_fp_encode_double@@Base+0x7c8>
   399c8:	b	39adc <grisu3_diy_fp_encode_double@@Base+0x7dc>
   399cc:	b	39af0 <grisu3_diy_fp_encode_double@@Base+0x7f0>
   399d0:	b	39b04 <grisu3_diy_fp_encode_double@@Base+0x804>
   399d4:	b	39b18 <grisu3_diy_fp_encode_double@@Base+0x818>
   399d8:	b	39b2c <grisu3_diy_fp_encode_double@@Base+0x82c>
   399dc:	b	39b40 <grisu3_diy_fp_encode_double@@Base+0x840>
   399e0:	b	39b54 <grisu3_diy_fp_encode_double@@Base+0x854>
   399e4:	b	39b68 <grisu3_diy_fp_encode_double@@Base+0x868>
   399e8:	b	39b7c <grisu3_diy_fp_encode_double@@Base+0x87c>
   399ec:	b	39b90 <grisu3_diy_fp_encode_double@@Base+0x890>
   399f0:	b	39ba4 <grisu3_diy_fp_encode_double@@Base+0x8a4>
   399f4:	b	39bb8 <grisu3_diy_fp_encode_double@@Base+0x8b8>
   399f8:	b	39bcc <grisu3_diy_fp_encode_double@@Base+0x8cc>
   399fc:	b	39be0 <grisu3_diy_fp_encode_double@@Base+0x8e0>
   39a00:	b	39bf4 <grisu3_diy_fp_encode_double@@Base+0x8f4>
   39a04:	b	39c08 <grisu3_diy_fp_encode_double@@Base+0x908>
   39a08:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39a0c:	b	39c1c <grisu3_diy_fp_encode_double@@Base+0x91c>
   39a10:	b	39c30 <grisu3_diy_fp_encode_double@@Base+0x930>
   39a14:	b	39c44 <grisu3_diy_fp_encode_double@@Base+0x944>
   39a18:	b	39c58 <grisu3_diy_fp_encode_double@@Base+0x958>
   39a1c:	b	39c6c <grisu3_diy_fp_encode_double@@Base+0x96c>
   39a20:	b	39c80 <grisu3_diy_fp_encode_double@@Base+0x980>
   39a24:	b	39c94 <grisu3_diy_fp_encode_double@@Base+0x994>
   39a28:	b	39ca8 <grisu3_diy_fp_encode_double@@Base+0x9a8>
   39a2c:	b	39cbc <grisu3_diy_fp_encode_double@@Base+0x9bc>
   39a30:	b	39cd0 <grisu3_diy_fp_encode_double@@Base+0x9d0>
   39a34:	b	39ce4 <grisu3_diy_fp_encode_double@@Base+0x9e4>
   39a38:	b	39cf8 <grisu3_diy_fp_encode_double@@Base+0x9f8>
   39a3c:	b	39d0c <grisu3_diy_fp_encode_double@@Base+0xa0c>
   39a40:	b	39d20 <grisu3_diy_fp_encode_double@@Base+0xa20>
   39a44:	b	39d34 <grisu3_diy_fp_encode_double@@Base+0xa34>
   39a48:	b	39d48 <grisu3_diy_fp_encode_double@@Base+0xa48>
   39a4c:	b	39d5c <grisu3_diy_fp_encode_double@@Base+0xa5c>
   39a50:	b	39d70 <grisu3_diy_fp_encode_double@@Base+0xa70>
   39a54:	b	39d84 <grisu3_diy_fp_encode_double@@Base+0xa84>
   39a58:	b	39d98 <grisu3_diy_fp_encode_double@@Base+0xa98>
   39a5c:	b	39dac <grisu3_diy_fp_encode_double@@Base+0xaac>
   39a60:	b	39dc0 <grisu3_diy_fp_encode_double@@Base+0xac0>
   39a64:	vldr	d6, [fp, #-12]
   39a68:	vldr	d5, [pc, #992]	; 39e50 <grisu3_diy_fp_encode_double@@Base+0xb50>
   39a6c:	vdiv.f64	d7, d6, d5
   39a70:	vstr	d7, [fp, #-12]
   39a74:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39a78:	vldr	d6, [fp, #-12]
   39a7c:	vldr	d5, [pc, #980]	; 39e58 <grisu3_diy_fp_encode_double@@Base+0xb58>
   39a80:	vdiv.f64	d7, d6, d5
   39a84:	vstr	d7, [fp, #-12]
   39a88:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39a8c:	vldr	d6, [fp, #-12]
   39a90:	vldr	d5, [pc, #968]	; 39e60 <grisu3_diy_fp_encode_double@@Base+0xb60>
   39a94:	vdiv.f64	d7, d6, d5
   39a98:	vstr	d7, [fp, #-12]
   39a9c:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39aa0:	vldr	d6, [fp, #-12]
   39aa4:	vldr	d5, [pc, #956]	; 39e68 <grisu3_diy_fp_encode_double@@Base+0xb68>
   39aa8:	vdiv.f64	d7, d6, d5
   39aac:	vstr	d7, [fp, #-12]
   39ab0:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39ab4:	vldr	d6, [fp, #-12]
   39ab8:	vldr	d5, [pc, #944]	; 39e70 <grisu3_diy_fp_encode_double@@Base+0xb70>
   39abc:	vdiv.f64	d7, d6, d5
   39ac0:	vstr	d7, [fp, #-12]
   39ac4:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39ac8:	vldr	d6, [fp, #-12]
   39acc:	vldr	d5, [pc, #932]	; 39e78 <grisu3_diy_fp_encode_double@@Base+0xb78>
   39ad0:	vdiv.f64	d7, d6, d5
   39ad4:	vstr	d7, [fp, #-12]
   39ad8:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39adc:	vldr	d6, [fp, #-12]
   39ae0:	vldr	d5, [pc, #920]	; 39e80 <grisu3_diy_fp_encode_double@@Base+0xb80>
   39ae4:	vdiv.f64	d7, d6, d5
   39ae8:	vstr	d7, [fp, #-12]
   39aec:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39af0:	vldr	d6, [fp, #-12]
   39af4:	vldr	d5, [pc, #908]	; 39e88 <grisu3_diy_fp_encode_double@@Base+0xb88>
   39af8:	vdiv.f64	d7, d6, d5
   39afc:	vstr	d7, [fp, #-12]
   39b00:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b04:	vldr	d6, [fp, #-12]
   39b08:	vldr	d5, [pc, #896]	; 39e90 <grisu3_diy_fp_encode_double@@Base+0xb90>
   39b0c:	vdiv.f64	d7, d6, d5
   39b10:	vstr	d7, [fp, #-12]
   39b14:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b18:	vldr	d6, [fp, #-12]
   39b1c:	vldr	d5, [pc, #884]	; 39e98 <grisu3_diy_fp_encode_double@@Base+0xb98>
   39b20:	vdiv.f64	d7, d6, d5
   39b24:	vstr	d7, [fp, #-12]
   39b28:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b2c:	vldr	d6, [fp, #-12]
   39b30:	vldr	d5, [pc, #872]	; 39ea0 <grisu3_diy_fp_encode_double@@Base+0xba0>
   39b34:	vdiv.f64	d7, d6, d5
   39b38:	vstr	d7, [fp, #-12]
   39b3c:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b40:	vldr	d6, [fp, #-12]
   39b44:	vldr	d5, [pc, #860]	; 39ea8 <grisu3_diy_fp_encode_double@@Base+0xba8>
   39b48:	vdiv.f64	d7, d6, d5
   39b4c:	vstr	d7, [fp, #-12]
   39b50:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b54:	vldr	d6, [fp, #-12]
   39b58:	vldr	d5, [pc, #848]	; 39eb0 <grisu3_diy_fp_encode_double@@Base+0xbb0>
   39b5c:	vdiv.f64	d7, d6, d5
   39b60:	vstr	d7, [fp, #-12]
   39b64:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b68:	vldr	d6, [fp, #-12]
   39b6c:	vldr	d5, [pc, #836]	; 39eb8 <grisu3_diy_fp_encode_double@@Base+0xbb8>
   39b70:	vdiv.f64	d7, d6, d5
   39b74:	vstr	d7, [fp, #-12]
   39b78:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b7c:	vldr	d6, [fp, #-12]
   39b80:	vldr	d5, [pc, #824]	; 39ec0 <grisu3_diy_fp_encode_double@@Base+0xbc0>
   39b84:	vdiv.f64	d7, d6, d5
   39b88:	vstr	d7, [fp, #-12]
   39b8c:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39b90:	vldr	d6, [fp, #-12]
   39b94:	vldr	d5, [pc, #812]	; 39ec8 <grisu3_diy_fp_encode_double@@Base+0xbc8>
   39b98:	vdiv.f64	d7, d6, d5
   39b9c:	vstr	d7, [fp, #-12]
   39ba0:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39ba4:	vldr	d6, [fp, #-12]
   39ba8:	vldr	d5, [pc, #800]	; 39ed0 <grisu3_diy_fp_encode_double@@Base+0xbd0>
   39bac:	vdiv.f64	d7, d6, d5
   39bb0:	vstr	d7, [fp, #-12]
   39bb4:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39bb8:	vldr	d6, [fp, #-12]
   39bbc:	vldr	d5, [pc, #788]	; 39ed8 <grisu3_diy_fp_encode_double@@Base+0xbd8>
   39bc0:	vdiv.f64	d7, d6, d5
   39bc4:	vstr	d7, [fp, #-12]
   39bc8:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39bcc:	vldr	d6, [fp, #-12]
   39bd0:	vldr	d5, [pc, #776]	; 39ee0 <grisu3_diy_fp_encode_double@@Base+0xbe0>
   39bd4:	vdiv.f64	d7, d6, d5
   39bd8:	vstr	d7, [fp, #-12]
   39bdc:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39be0:	vldr	d6, [fp, #-12]
   39be4:	vldr	d5, [pc, #764]	; 39ee8 <grisu3_diy_fp_encode_double@@Base+0xbe8>
   39be8:	vdiv.f64	d7, d6, d5
   39bec:	vstr	d7, [fp, #-12]
   39bf0:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39bf4:	vldr	d6, [fp, #-12]
   39bf8:	vldr	d5, [pc, #752]	; 39ef0 <grisu3_diy_fp_encode_double@@Base+0xbf0>
   39bfc:	vdiv.f64	d7, d6, d5
   39c00:	vstr	d7, [fp, #-12]
   39c04:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c08:	vldr	d6, [fp, #-12]
   39c0c:	vldr	d5, [pc, #740]	; 39ef8 <grisu3_diy_fp_encode_double@@Base+0xbf8>
   39c10:	vdiv.f64	d7, d6, d5
   39c14:	vstr	d7, [fp, #-12]
   39c18:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c1c:	vldr	d7, [fp, #-12]
   39c20:	vldr	d6, [pc, #720]	; 39ef8 <grisu3_diy_fp_encode_double@@Base+0xbf8>
   39c24:	vmul.f64	d7, d7, d6
   39c28:	vstr	d7, [fp, #-12]
   39c2c:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c30:	vldr	d7, [fp, #-12]
   39c34:	vldr	d6, [pc, #692]	; 39ef0 <grisu3_diy_fp_encode_double@@Base+0xbf0>
   39c38:	vmul.f64	d7, d7, d6
   39c3c:	vstr	d7, [fp, #-12]
   39c40:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c44:	vldr	d7, [fp, #-12]
   39c48:	vldr	d6, [pc, #664]	; 39ee8 <grisu3_diy_fp_encode_double@@Base+0xbe8>
   39c4c:	vmul.f64	d7, d7, d6
   39c50:	vstr	d7, [fp, #-12]
   39c54:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c58:	vldr	d7, [fp, #-12]
   39c5c:	vldr	d6, [pc, #636]	; 39ee0 <grisu3_diy_fp_encode_double@@Base+0xbe0>
   39c60:	vmul.f64	d7, d7, d6
   39c64:	vstr	d7, [fp, #-12]
   39c68:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c6c:	vldr	d7, [fp, #-12]
   39c70:	vldr	d6, [pc, #608]	; 39ed8 <grisu3_diy_fp_encode_double@@Base+0xbd8>
   39c74:	vmul.f64	d7, d7, d6
   39c78:	vstr	d7, [fp, #-12]
   39c7c:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c80:	vldr	d7, [fp, #-12]
   39c84:	vldr	d6, [pc, #580]	; 39ed0 <grisu3_diy_fp_encode_double@@Base+0xbd0>
   39c88:	vmul.f64	d7, d7, d6
   39c8c:	vstr	d7, [fp, #-12]
   39c90:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39c94:	vldr	d7, [fp, #-12]
   39c98:	vldr	d6, [pc, #552]	; 39ec8 <grisu3_diy_fp_encode_double@@Base+0xbc8>
   39c9c:	vmul.f64	d7, d7, d6
   39ca0:	vstr	d7, [fp, #-12]
   39ca4:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39ca8:	vldr	d7, [fp, #-12]
   39cac:	vldr	d6, [pc, #524]	; 39ec0 <grisu3_diy_fp_encode_double@@Base+0xbc0>
   39cb0:	vmul.f64	d7, d7, d6
   39cb4:	vstr	d7, [fp, #-12]
   39cb8:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39cbc:	vldr	d7, [fp, #-12]
   39cc0:	vldr	d6, [pc, #496]	; 39eb8 <grisu3_diy_fp_encode_double@@Base+0xbb8>
   39cc4:	vmul.f64	d7, d7, d6
   39cc8:	vstr	d7, [fp, #-12]
   39ccc:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39cd0:	vldr	d7, [fp, #-12]
   39cd4:	vldr	d6, [pc, #468]	; 39eb0 <grisu3_diy_fp_encode_double@@Base+0xbb0>
   39cd8:	vmul.f64	d7, d7, d6
   39cdc:	vstr	d7, [fp, #-12]
   39ce0:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39ce4:	vldr	d7, [fp, #-12]
   39ce8:	vldr	d6, [pc, #440]	; 39ea8 <grisu3_diy_fp_encode_double@@Base+0xba8>
   39cec:	vmul.f64	d7, d7, d6
   39cf0:	vstr	d7, [fp, #-12]
   39cf4:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39cf8:	vldr	d7, [fp, #-12]
   39cfc:	vldr	d6, [pc, #412]	; 39ea0 <grisu3_diy_fp_encode_double@@Base+0xba0>
   39d00:	vmul.f64	d7, d7, d6
   39d04:	vstr	d7, [fp, #-12]
   39d08:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d0c:	vldr	d7, [fp, #-12]
   39d10:	vldr	d6, [pc, #384]	; 39e98 <grisu3_diy_fp_encode_double@@Base+0xb98>
   39d14:	vmul.f64	d7, d7, d6
   39d18:	vstr	d7, [fp, #-12]
   39d1c:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d20:	vldr	d7, [fp, #-12]
   39d24:	vldr	d6, [pc, #356]	; 39e90 <grisu3_diy_fp_encode_double@@Base+0xb90>
   39d28:	vmul.f64	d7, d7, d6
   39d2c:	vstr	d7, [fp, #-12]
   39d30:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d34:	vldr	d7, [fp, #-12]
   39d38:	vldr	d6, [pc, #328]	; 39e88 <grisu3_diy_fp_encode_double@@Base+0xb88>
   39d3c:	vmul.f64	d7, d7, d6
   39d40:	vstr	d7, [fp, #-12]
   39d44:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d48:	vldr	d7, [fp, #-12]
   39d4c:	vldr	d6, [pc, #300]	; 39e80 <grisu3_diy_fp_encode_double@@Base+0xb80>
   39d50:	vmul.f64	d7, d7, d6
   39d54:	vstr	d7, [fp, #-12]
   39d58:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d5c:	vldr	d7, [fp, #-12]
   39d60:	vldr	d6, [pc, #272]	; 39e78 <grisu3_diy_fp_encode_double@@Base+0xb78>
   39d64:	vmul.f64	d7, d7, d6
   39d68:	vstr	d7, [fp, #-12]
   39d6c:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d70:	vldr	d7, [fp, #-12]
   39d74:	vldr	d6, [pc, #244]	; 39e70 <grisu3_diy_fp_encode_double@@Base+0xb70>
   39d78:	vmul.f64	d7, d7, d6
   39d7c:	vstr	d7, [fp, #-12]
   39d80:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d84:	vldr	d7, [fp, #-12]
   39d88:	vldr	d6, [pc, #216]	; 39e68 <grisu3_diy_fp_encode_double@@Base+0xb68>
   39d8c:	vmul.f64	d7, d7, d6
   39d90:	vstr	d7, [fp, #-12]
   39d94:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39d98:	vldr	d7, [fp, #-12]
   39d9c:	vldr	d6, [pc, #188]	; 39e60 <grisu3_diy_fp_encode_double@@Base+0xb60>
   39da0:	vmul.f64	d7, d7, d6
   39da4:	vstr	d7, [fp, #-12]
   39da8:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39dac:	vldr	d7, [fp, #-12]
   39db0:	vldr	d6, [pc, #160]	; 39e58 <grisu3_diy_fp_encode_double@@Base+0xb58>
   39db4:	vmul.f64	d7, d7, d6
   39db8:	vstr	d7, [fp, #-12]
   39dbc:	b	39dd4 <grisu3_diy_fp_encode_double@@Base+0xad4>
   39dc0:	vldr	d7, [fp, #-12]
   39dc4:	vldr	d6, [pc, #132]	; 39e50 <grisu3_diy_fp_encode_double@@Base+0xb50>
   39dc8:	vmul.f64	d7, d7, d6
   39dcc:	vstr	d7, [fp, #-12]
   39dd0:	nop	{0}
   39dd4:	ldr	r1, [fp, #24]
   39dd8:	ldrd	r2, [fp, #-12]
   39ddc:	strd	r2, [r1]
   39de0:	b	39f04 <grisu3_diy_fp_encode_double@@Base+0xc04>
   39de4:	ldr	r3, [fp, #24]
   39de8:	str	r3, [sp, #4]
   39dec:	ldr	r3, [fp, #20]
   39df0:	str	r3, [sp]
   39df4:	ldr	r3, [fp, #16]
   39df8:	ldr	r2, [fp, #12]
   39dfc:	ldrd	r0, [fp, #4]
   39e00:	bl	39300 <grisu3_diy_fp_encode_double@@Base>
   39e04:	mov	r3, r0
   39e08:	cmp	r3, #0
   39e0c:	bne	39f00 <grisu3_diy_fp_encode_double@@Base+0xc00>
   39e10:	sub	r3, fp, #24
   39e14:	mov	r1, r3
   39e18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39e1c:	bl	145ac <strtod@plt>
   39e20:	vmov.f64	d7, d0
   39e24:	ldr	r3, [fp, #24]
   39e28:	vstr	d7, [r3]
   39e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39e30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39e34:	cmp	r2, r3
   39e38:	bls	39e44 <grisu3_diy_fp_encode_double@@Base+0xb44>
   39e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39e40:	b	39f28 <grisu3_diy_fp_encode_double@@Base+0xc28>
   39e44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39e48:	b	39f28 <grisu3_diy_fp_encode_double@@Base+0xc28>
   39e4c:	nop	{0}
   39e50:			; <UNDEFINED> instruction: 0x064dd592
   39e54:	strmi	pc, [r0], #207	; 0xcf
   39e58:	usatle	lr, #2, r0, asr #30
   39e5c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   39e60:	ldmvc	r5!, {r6, sl, fp, pc}
   39e64:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   39e68:	addsvs	r3, r1, r0, lsl #26
   39e6c:	mvnmi	r5, #228, 16	; 0xe40000
   39e70:	strbvs	ip, [lr, -r0, lsl #16]
   39e74:			; <UNDEFINED> instruction: 0x43abc16d
   39e78:	ldrbhi	sl, [r8]
   39e7c:	cmnmi	r6, #1459617792	; 0x57000000
   39e80:	strbcc	r8, [r0, r0]!
   39e84:	movtmi	ip, #4985	; 0x1379
   39e88:	ldrtcs	r0, [r4], -r0
   39e8c:	movwmi	r6, #52213	; 0xcbf5
   39e90:	cdpne	0, 9, cr0, cr0, cr0, {0}
   39e94:	sbcsmi	fp, r6, #196, 24	; 0xc400
   39e98:	strb	r0, [r0, #-0]
   39e9c:	adcmi	r3, r2, #156	; 0x9c
   39ea0:	andge	r0, r0, #0
   39ea4:	rsbmi	r1, sp, #148, 20	; 0x94000
   39ea8:	stmda	r0, {}	; <UNPREDICTABLE>
   39eac:	eorsmi	r4, r7, #7733248	; 0x760000
   39eb0:	andcs	r0, r0, r0
   39eb4:	andmi	sl, r2, #95	; 0x5f
   39eb8:	andeq	r0, r0, r0
   39ebc:	bicmi	ip, sp, r5, ror #26
   39ec0:	andeq	r0, r0, r0
   39ec4:	orrsmi	sp, r7, r4, lsl #15
   39ec8:	andeq	r0, r0, r0
   39ecc:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   39ed0:	andeq	r0, r0, r0
   39ed4:	smlawbmi	lr, r0, r4, r8
   39ed8:	andeq	r0, r0, r0
   39edc:	rscsmi	r6, r8, r0, lsl #20
   39ee0:	andeq	r0, r0, r0
   39ee4:	sbcmi	r8, r3, r0, lsl #16
   39ee8:	andeq	r0, r0, r0
   39eec:	addmi	r4, pc, r0
   39ef0:	andeq	r0, r0, r0
   39ef4:	subsmi	r0, r9, r0
   39ef8:	andeq	r0, r0, r0
   39efc:	eormi	r0, r4, r0
   39f00:	nop	{0}
   39f04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39f08:	cmp	r3, #0
   39f0c:	beq	39f24 <grisu3_diy_fp_encode_double@@Base+0xc24>
   39f10:	ldr	r3, [fp, #24]
   39f14:	vldr	d7, [r3]
   39f18:	vneg.f64	d7, d7
   39f1c:	ldr	r3, [fp, #24]
   39f20:	vstr	d7, [r3]
   39f24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39f28:	mov	r0, r3
   39f2c:	sub	sp, fp, #4
   39f30:	ldr	fp, [sp]
   39f34:	add	sp, sp, #4
   39f38:	pop	{pc}		; (ldr pc, [sp], #4)
   39f3c:	push	{fp}		; (str fp, [sp, #-4]!)
   39f40:	add	fp, sp, #0
   39f44:	sub	sp, sp, #20
   39f48:	str	r0, [fp, #-8]
   39f4c:	str	r1, [fp, #-12]
   39f50:	str	r2, [fp, #-16]
   39f54:	str	r3, [fp, #-20]	; 0xffffffec
   39f58:	ldr	r1, [fp, #-20]	; 0xffffffec
   39f5c:	mov	r2, #0
   39f60:	mov	r3, #0
   39f64:	strd	r2, [r1]
   39f68:	ldr	r3, [fp, #-8]
   39f6c:	mov	r0, r3
   39f70:	add	sp, fp, #0
   39f74:	pop	{fp}		; (ldr fp, [sp], #4)
   39f78:	bx	lr
   39f7c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   39f80:	strd	r6, [sp, #8]
   39f84:	strd	r8, [sp, #16]
   39f88:	str	fp, [sp, #24]
   39f8c:	str	lr, [sp, #28]
   39f90:	add	fp, sp, #28
   39f94:	sub	sp, sp, #136	; 0x88
   39f98:	str	r0, [fp, #-80]	; 0xffffffb0
   39f9c:	str	r1, [fp, #-84]	; 0xffffffac
   39fa0:	str	r2, [fp, #-88]	; 0xffffffa8
   39fa4:	mov	r3, #0
   39fa8:	str	r3, [fp, #-36]	; 0xffffffdc
   39fac:	mov	r3, #0
   39fb0:	str	r3, [fp, #-40]	; 0xffffffd8
   39fb4:	mov	r2, #0
   39fb8:	mov	r3, #0
   39fbc:	strd	r2, [fp, #-52]	; 0xffffffcc
   39fc0:	mov	r3, #0
   39fc4:	str	r3, [fp, #-56]	; 0xffffffc8
   39fc8:	mov	r3, #0
   39fcc:	str	r3, [fp, #-60]	; 0xffffffc4
   39fd0:	mov	r3, #0
   39fd4:	str	r3, [fp, #-64]	; 0xffffffc0
   39fd8:	mov	r3, #0
   39fdc:	str	r3, [fp, #-68]	; 0xffffffbc
   39fe0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   39fe4:	mov	r2, #0
   39fe8:	mov	r3, #0
   39fec:	strd	r2, [r1]
   39ff0:	ldr	r3, [fp, #-84]	; 0xffffffac
   39ff4:	add	r2, r3, #1
   39ff8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39ffc:	add	r3, r3, r2
   3a000:	str	r3, [fp, #-32]	; 0xffffffe0
   3a004:	ldr	r3, [fp, #-84]	; 0xffffffac
   3a008:	cmp	r3, #1000	; 0x3e8
   3a00c:	ble	3a020 <grisu3_diy_fp_encode_double@@Base+0xd20>
   3a010:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a014:	add	r3, r3, #1000	; 0x3e8
   3a018:	add	r3, r3, #1
   3a01c:	str	r3, [fp, #-32]	; 0xffffffe0
   3a020:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a028:	cmp	r2, r3
   3a02c:	bne	3a038 <grisu3_diy_fp_encode_double@@Base+0xd38>
   3a030:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a034:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a038:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a03c:	str	r3, [fp, #-72]	; 0xffffffb8
   3a040:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a044:	ldrb	r3, [r3]
   3a048:	cmp	r3, #45	; 0x2d
   3a04c:	bne	3a07c <grisu3_diy_fp_encode_double@@Base+0xd7c>
   3a050:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a054:	add	r3, r3, #1
   3a058:	str	r3, [fp, #-80]	; 0xffffffb0
   3a05c:	mov	r3, #1
   3a060:	str	r3, [fp, #-36]	; 0xffffffdc
   3a064:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a06c:	cmp	r2, r3
   3a070:	bne	3a07c <grisu3_diy_fp_encode_double@@Base+0xd7c>
   3a074:	mov	r3, #0
   3a078:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a07c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a080:	ldrb	r3, [r3]
   3a084:	cmp	r3, #48	; 0x30
   3a088:	bne	3a128 <grisu3_diy_fp_encode_double@@Base+0xe28>
   3a08c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a090:	add	r3, r3, #1
   3a094:	str	r3, [fp, #-80]	; 0xffffffb0
   3a098:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a09c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a0a0:	cmp	r2, r3
   3a0a4:	beq	3a104 <grisu3_diy_fp_encode_double@@Base+0xe04>
   3a0a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a0ac:	ldrb	r3, [r3]
   3a0b0:	orr	r3, r3, #32
   3a0b4:	uxtb	r3, r3
   3a0b8:	cmp	r3, #120	; 0x78
   3a0bc:	bne	3a104 <grisu3_diy_fp_encode_double@@Base+0xe04>
   3a0c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3a0c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a0c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3a0cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   3a0d0:	bl	39f3c <grisu3_diy_fp_encode_double@@Base+0xc3c>
   3a0d4:	str	r0, [fp, #-76]	; 0xffffffb4
   3a0d8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3a0dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a0e0:	cmp	r2, r3
   3a0e4:	bne	3a0f0 <grisu3_diy_fp_encode_double@@Base+0xdf0>
   3a0e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3a0ec:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a0f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3a0f4:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a0f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a0fc:	add	r3, r3, #1
   3a100:	str	r3, [fp, #-80]	; 0xffffffb0
   3a104:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a10c:	cmp	r2, r3
   3a110:	beq	3a184 <grisu3_diy_fp_encode_double@@Base+0xe84>
   3a114:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a118:	ldrb	r3, [r3]
   3a11c:	cmp	r3, #48	; 0x30
   3a120:	beq	3a0f8 <grisu3_diy_fp_encode_double@@Base+0xdf8>
   3a124:	b	3a184 <grisu3_diy_fp_encode_double@@Base+0xe84>
   3a128:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a12c:	ldrb	r3, [r3]
   3a130:	cmp	r3, #48	; 0x30
   3a134:	bls	3a148 <grisu3_diy_fp_encode_double@@Base+0xe48>
   3a138:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a13c:	ldrb	r3, [r3]
   3a140:	cmp	r3, #57	; 0x39
   3a144:	bls	3a164 <grisu3_diy_fp_encode_double@@Base+0xe64>
   3a148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a14c:	cmp	r3, #0
   3a150:	bne	3a15c <grisu3_diy_fp_encode_double@@Base+0xe5c>
   3a154:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3a158:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a15c:	mov	r3, #0
   3a160:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a164:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a168:	add	r3, r2, #1
   3a16c:	str	r3, [fp, #-80]	; 0xffffffb0
   3a170:	ldrb	r3, [r2]
   3a174:	sub	r3, r3, #48	; 0x30
   3a178:	mov	r2, r3
   3a17c:	asr	r3, r2, #31
   3a180:	strd	r2, [fp, #-52]	; 0xffffffcc
   3a184:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a188:	str	r3, [fp, #-76]	; 0xffffffb4
   3a18c:	b	3a274 <grisu3_diy_fp_encode_double@@Base+0xf74>
   3a190:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3a194:	add	r3, pc, #924	; 0x39c
   3a198:	ldrd	r2, [r3]
   3a19c:	cmp	r1, r3
   3a1a0:	cmpeq	r0, r2
   3a1a4:	bls	3a1f0 <grisu3_diy_fp_encode_double@@Base+0xef0>
   3a1a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a1ac:	ldrb	r3, [r3]
   3a1b0:	cmp	r3, #52	; 0x34
   3a1b4:	movhi	r3, #1
   3a1b8:	movls	r3, #0
   3a1bc:	uxtb	r3, r3
   3a1c0:	uxtb	r2, r3
   3a1c4:	mov	r3, #0
   3a1c8:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3a1cc:	adds	ip, r0, r2
   3a1d0:	str	ip, [fp, #-100]	; 0xffffff9c
   3a1d4:	adc	r3, r1, r3
   3a1d8:	str	r3, [fp, #-96]	; 0xffffffa0
   3a1dc:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   3a1e0:	strd	r2, [fp, #-52]	; 0xffffffcc
   3a1e4:	mov	r3, #1
   3a1e8:	str	r3, [fp, #-68]	; 0xffffffbc
   3a1ec:	b	3a2a4 <grisu3_diy_fp_encode_double@@Base+0xfa4>
   3a1f0:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   3a1f4:	mov	r2, r4
   3a1f8:	mov	r3, r5
   3a1fc:	mov	r0, #0
   3a200:	mov	r1, #0
   3a204:	lsl	r1, r3, #2
   3a208:	orr	r1, r1, r2, lsr #30
   3a20c:	lsl	r0, r2, #2
   3a210:	mov	r2, r0
   3a214:	mov	r3, r1
   3a218:	adds	r2, r2, r4
   3a21c:	adc	r3, r3, r5
   3a220:	adds	r1, r2, r2
   3a224:	str	r1, [fp, #-108]	; 0xffffff94
   3a228:	adc	r3, r3, r3
   3a22c:	str	r3, [fp, #-104]	; 0xffffff98
   3a230:	ldrd	r2, [fp, #-108]	; 0xffffff94
   3a234:	mov	r0, r2
   3a238:	mov	r1, r3
   3a23c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a240:	add	r3, r2, #1
   3a244:	str	r3, [fp, #-80]	; 0xffffffb0
   3a248:	ldrb	r3, [r2]
   3a24c:	uxtb	r2, r3
   3a250:	mov	r3, #0
   3a254:	adds	r8, r0, r2
   3a258:	adc	r9, r1, r3
   3a25c:	subs	r3, r8, #48	; 0x30
   3a260:	str	r3, [fp, #-116]	; 0xffffff8c
   3a264:	sbc	r3, r9, #0
   3a268:	str	r3, [fp, #-112]	; 0xffffff90
   3a26c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   3a270:	strd	r2, [fp, #-52]	; 0xffffffcc
   3a274:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a27c:	cmp	r2, r3
   3a280:	beq	3a2a4 <grisu3_diy_fp_encode_double@@Base+0xfa4>
   3a284:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a288:	ldrb	r3, [r3]
   3a28c:	cmp	r3, #47	; 0x2f
   3a290:	bls	3a2a4 <grisu3_diy_fp_encode_double@@Base+0xfa4>
   3a294:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a298:	ldrb	r3, [r3]
   3a29c:	cmp	r3, #57	; 0x39
   3a2a0:	bls	3a190 <grisu3_diy_fp_encode_double@@Base+0xe90>
   3a2a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a2a8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3a2ac:	sub	r3, r2, r3
   3a2b0:	str	r3, [fp, #-64]	; 0xffffffc0
   3a2b4:	b	3a2d0 <grisu3_diy_fp_encode_double@@Base+0xfd0>
   3a2b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a2bc:	add	r3, r3, #1
   3a2c0:	str	r3, [fp, #-56]	; 0xffffffc8
   3a2c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a2c8:	add	r3, r3, #1
   3a2cc:	str	r3, [fp, #-80]	; 0xffffffb0
   3a2d0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a2d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a2d8:	cmp	r2, r3
   3a2dc:	beq	3a2f0 <grisu3_diy_fp_encode_double@@Base+0xff0>
   3a2e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a2e4:	ldrb	r3, [r3]
   3a2e8:	cmp	r3, #48	; 0x30
   3a2ec:	beq	3a2b8 <grisu3_diy_fp_encode_double@@Base+0xfb8>
   3a2f0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a2f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a2f8:	cmp	r2, r3
   3a2fc:	beq	3a38c <grisu3_diy_fp_encode_double@@Base+0x108c>
   3a300:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a304:	ldrb	r3, [r3]
   3a308:	cmp	r3, #48	; 0x30
   3a30c:	bls	3a38c <grisu3_diy_fp_encode_double@@Base+0x108c>
   3a310:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a314:	ldrb	r3, [r3]
   3a318:	cmp	r3, #57	; 0x39
   3a31c:	bhi	3a38c <grisu3_diy_fp_encode_double@@Base+0x108c>
   3a320:	mov	r3, #1
   3a324:	str	r3, [fp, #-68]	; 0xffffffbc
   3a328:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a32c:	add	r3, r3, #1
   3a330:	str	r3, [fp, #-56]	; 0xffffffc8
   3a334:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a338:	add	r3, r3, #1
   3a33c:	str	r3, [fp, #-80]	; 0xffffffb0
   3a340:	b	3a35c <grisu3_diy_fp_encode_double@@Base+0x105c>
   3a344:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a348:	add	r3, r3, #1
   3a34c:	str	r3, [fp, #-56]	; 0xffffffc8
   3a350:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a354:	add	r3, r3, #1
   3a358:	str	r3, [fp, #-80]	; 0xffffffb0
   3a35c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a364:	cmp	r2, r3
   3a368:	beq	3a38c <grisu3_diy_fp_encode_double@@Base+0x108c>
   3a36c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a370:	ldrb	r3, [r3]
   3a374:	cmp	r3, #47	; 0x2f
   3a378:	bls	3a38c <grisu3_diy_fp_encode_double@@Base+0x108c>
   3a37c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a380:	ldrb	r3, [r3]
   3a384:	cmp	r3, #57	; 0x39
   3a388:	bls	3a344 <grisu3_diy_fp_encode_double@@Base+0x1044>
   3a38c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a394:	cmp	r2, r3
   3a398:	beq	3a5fc <grisu3_diy_fp_encode_double@@Base+0x12fc>
   3a39c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a3a0:	ldrb	r3, [r3]
   3a3a4:	cmp	r3, #46	; 0x2e
   3a3a8:	bne	3a5fc <grisu3_diy_fp_encode_double@@Base+0x12fc>
   3a3ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a3b0:	add	r3, r3, #1
   3a3b4:	str	r3, [fp, #-80]	; 0xffffffb0
   3a3b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a3bc:	str	r3, [fp, #-76]	; 0xffffffb4
   3a3c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a3c4:	ldrb	r3, [r3]
   3a3c8:	cmp	r3, #47	; 0x2f
   3a3cc:	bls	3a3e0 <grisu3_diy_fp_encode_double@@Base+0x10e0>
   3a3d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a3d4:	ldrb	r3, [r3]
   3a3d8:	cmp	r3, #57	; 0x39
   3a3dc:	bls	3a4e4 <grisu3_diy_fp_encode_double@@Base+0x11e4>
   3a3e0:	mov	r3, #0
   3a3e4:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a3e8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   3a3ec:	add	r1, pc, #324	; 0x144
   3a3f0:	ldrd	r0, [r1]
   3a3f4:	cmp	r3, r1
   3a3f8:	cmpeq	r2, r0
   3a3fc:	bls	3a454 <grisu3_diy_fp_encode_double@@Base+0x1154>
   3a400:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3a404:	cmp	r3, #0
   3a408:	bne	3a518 <grisu3_diy_fp_encode_double@@Base+0x1218>
   3a40c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a410:	ldrb	r3, [r3]
   3a414:	cmp	r3, #52	; 0x34
   3a418:	movhi	r3, #1
   3a41c:	movls	r3, #0
   3a420:	uxtb	r3, r3
   3a424:	uxtb	r2, r3
   3a428:	mov	r3, #0
   3a42c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3a430:	adds	ip, r0, r2
   3a434:	str	ip, [fp, #-124]	; 0xffffff84
   3a438:	adc	r3, r1, r3
   3a43c:	str	r3, [fp, #-120]	; 0xffffff88
   3a440:	ldrd	r2, [fp, #-124]	; 0xffffff84
   3a444:	strd	r2, [fp, #-52]	; 0xffffffcc
   3a448:	mov	r3, #1
   3a44c:	str	r3, [fp, #-68]	; 0xffffffbc
   3a450:	b	3a518 <grisu3_diy_fp_encode_double@@Base+0x1218>
   3a454:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   3a458:	mov	r2, r4
   3a45c:	mov	r3, r5
   3a460:	mov	r0, #0
   3a464:	mov	r1, #0
   3a468:	lsl	r1, r3, #2
   3a46c:	orr	r1, r1, r2, lsr #30
   3a470:	lsl	r0, r2, #2
   3a474:	mov	r2, r0
   3a478:	mov	r3, r1
   3a47c:	adds	r2, r2, r4
   3a480:	adc	r3, r3, r5
   3a484:	adds	r1, r2, r2
   3a488:	str	r1, [fp, #-132]	; 0xffffff7c
   3a48c:	adc	r3, r3, r3
   3a490:	str	r3, [fp, #-128]	; 0xffffff80
   3a494:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   3a498:	mov	r0, r2
   3a49c:	mov	r1, r3
   3a4a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a4a4:	add	r2, r3, #1
   3a4a8:	str	r2, [fp, #-80]	; 0xffffffb0
   3a4ac:	ldrb	r3, [r3]
   3a4b0:	uxtb	r2, r3
   3a4b4:	mov	r3, #0
   3a4b8:	adds	r6, r0, r2
   3a4bc:	adc	r7, r1, r3
   3a4c0:	subs	r3, r6, #48	; 0x30
   3a4c4:	str	r3, [fp, #-140]	; 0xffffff74
   3a4c8:	sbc	r3, r7, #0
   3a4cc:	str	r3, [fp, #-136]	; 0xffffff78
   3a4d0:	ldrd	r2, [fp, #-140]	; 0xffffff74
   3a4d4:	strd	r2, [fp, #-52]	; 0xffffffcc
   3a4d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a4dc:	sub	r3, r3, #1
   3a4e0:	str	r3, [fp, #-56]	; 0xffffffc8
   3a4e4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a4e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a4ec:	cmp	r2, r3
   3a4f0:	beq	3a51c <grisu3_diy_fp_encode_double@@Base+0x121c>
   3a4f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a4f8:	ldrb	r3, [r3]
   3a4fc:	cmp	r3, #47	; 0x2f
   3a500:	bls	3a51c <grisu3_diy_fp_encode_double@@Base+0x121c>
   3a504:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a508:	ldrb	r3, [r3]
   3a50c:	cmp	r3, #57	; 0x39
   3a510:	bls	3a3e8 <grisu3_diy_fp_encode_double@@Base+0x10e8>
   3a514:	b	3a51c <grisu3_diy_fp_encode_double@@Base+0x121c>
   3a518:	nop	{0}
   3a51c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a520:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3a524:	sub	r3, r2, r3
   3a528:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3a52c:	add	r3, r2, r3
   3a530:	str	r3, [fp, #-64]	; 0xffffffc0
   3a534:	b	3a558 <grisu3_diy_fp_encode_double@@Base+0x1258>
   3a538:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
   3a53c:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   3a540:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a544:	add	r3, r3, #1
   3a548:	str	r3, [fp, #-56]	; 0xffffffc8
   3a54c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a550:	add	r3, r3, #1
   3a554:	str	r3, [fp, #-80]	; 0xffffffb0
   3a558:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a55c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a560:	cmp	r2, r3
   3a564:	beq	3a578 <grisu3_diy_fp_encode_double@@Base+0x1278>
   3a568:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a56c:	ldrb	r3, [r3]
   3a570:	cmp	r3, #48	; 0x30
   3a574:	beq	3a540 <grisu3_diy_fp_encode_double@@Base+0x1240>
   3a578:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a57c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a580:	cmp	r2, r3
   3a584:	beq	3a5fc <grisu3_diy_fp_encode_double@@Base+0x12fc>
   3a588:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a58c:	ldrb	r3, [r3]
   3a590:	cmp	r3, #48	; 0x30
   3a594:	bls	3a5fc <grisu3_diy_fp_encode_double@@Base+0x12fc>
   3a598:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a59c:	ldrb	r3, [r3]
   3a5a0:	cmp	r3, #57	; 0x39
   3a5a4:	bhi	3a5fc <grisu3_diy_fp_encode_double@@Base+0x12fc>
   3a5a8:	mov	r3, #1
   3a5ac:	str	r3, [fp, #-68]	; 0xffffffbc
   3a5b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a5b4:	add	r3, r3, #1
   3a5b8:	str	r3, [fp, #-80]	; 0xffffffb0
   3a5bc:	b	3a5cc <grisu3_diy_fp_encode_double@@Base+0x12cc>
   3a5c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a5c4:	add	r3, r3, #1
   3a5c8:	str	r3, [fp, #-80]	; 0xffffffb0
   3a5cc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a5d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a5d4:	cmp	r2, r3
   3a5d8:	beq	3a5fc <grisu3_diy_fp_encode_double@@Base+0x12fc>
   3a5dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a5e0:	ldrb	r3, [r3]
   3a5e4:	cmp	r3, #47	; 0x2f
   3a5e8:	bls	3a5fc <grisu3_diy_fp_encode_double@@Base+0x12fc>
   3a5ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a5f0:	ldrb	r3, [r3]
   3a5f4:	cmp	r3, #57	; 0x39
   3a5f8:	bls	3a5c0 <grisu3_diy_fp_encode_double@@Base+0x12c0>
   3a5fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3a600:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a604:	add	r3, r2, r3
   3a608:	str	r3, [fp, #-56]	; 0xffffffc8
   3a60c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a614:	cmp	r2, r3
   3a618:	beq	3a784 <grisu3_diy_fp_encode_double@@Base+0x1484>
   3a61c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a620:	ldrb	r3, [r3]
   3a624:	orr	r3, r3, #32
   3a628:	uxtb	r3, r3
   3a62c:	cmp	r3, #101	; 0x65
   3a630:	bne	3a784 <grisu3_diy_fp_encode_double@@Base+0x1484>
   3a634:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3a638:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a63c:	sub	r3, r2, r3
   3a640:	cmp	r3, #1
   3a644:	bgt	3a650 <grisu3_diy_fp_encode_double@@Base+0x1350>
   3a648:	mov	r3, #0
   3a64c:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a650:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a654:	add	r3, r3, #1
   3a658:	str	r3, [fp, #-80]	; 0xffffffb0
   3a65c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a660:	ldrb	r3, [r3]
   3a664:	cmp	r3, #43	; 0x2b
   3a668:	bne	3a690 <grisu3_diy_fp_encode_double@@Base+0x1390>
   3a66c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a670:	add	r3, r3, #1
   3a674:	str	r3, [fp, #-80]	; 0xffffffb0
   3a678:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a67c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a680:	cmp	r2, r3
   3a684:	bne	3a6cc <grisu3_diy_fp_encode_double@@Base+0x13cc>
   3a688:	mov	r3, #0
   3a68c:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a690:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a694:	ldrb	r3, [r3]
   3a698:	cmp	r3, #45	; 0x2d
   3a69c:	bne	3a6cc <grisu3_diy_fp_encode_double@@Base+0x13cc>
   3a6a0:	mov	r3, #1
   3a6a4:	str	r3, [fp, #-40]	; 0xffffffd8
   3a6a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a6ac:	add	r3, r3, #1
   3a6b0:	str	r3, [fp, #-80]	; 0xffffffb0
   3a6b4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a6b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a6bc:	cmp	r2, r3
   3a6c0:	bne	3a6cc <grisu3_diy_fp_encode_double@@Base+0x13cc>
   3a6c4:	mov	r3, #0
   3a6c8:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a6cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a6d0:	ldrb	r3, [r3]
   3a6d4:	cmp	r3, #47	; 0x2f
   3a6d8:	bls	3a6ec <grisu3_diy_fp_encode_double@@Base+0x13ec>
   3a6dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a6e0:	ldrb	r3, [r3]
   3a6e4:	cmp	r3, #57	; 0x39
   3a6e8:	bls	3a6f4 <grisu3_diy_fp_encode_double@@Base+0x13f4>
   3a6ec:	mov	r3, #0
   3a6f0:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a6f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a6f8:	add	r2, r3, #1
   3a6fc:	str	r2, [fp, #-80]	; 0xffffffb0
   3a700:	ldrb	r3, [r3]
   3a704:	sub	r3, r3, #48	; 0x30
   3a708:	str	r3, [fp, #-60]	; 0xffffffc4
   3a70c:	b	3a754 <grisu3_diy_fp_encode_double@@Base+0x1454>
   3a710:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a714:	cmp	r3, #32768	; 0x8000
   3a718:	bge	3a748 <grisu3_diy_fp_encode_double@@Base+0x1448>
   3a71c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3a720:	mov	r3, r2
   3a724:	lsl	r3, r3, #2
   3a728:	add	r3, r3, r2
   3a72c:	lsl	r3, r3, #1
   3a730:	mov	r2, r3
   3a734:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a738:	ldrb	r3, [r3]
   3a73c:	add	r3, r2, r3
   3a740:	sub	r3, r3, #48	; 0x30
   3a744:	str	r3, [fp, #-60]	; 0xffffffc4
   3a748:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a74c:	add	r3, r3, #1
   3a750:	str	r3, [fp, #-80]	; 0xffffffb0
   3a754:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a75c:	cmp	r2, r3
   3a760:	beq	3a784 <grisu3_diy_fp_encode_double@@Base+0x1484>
   3a764:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a768:	ldrb	r3, [r3]
   3a76c:	cmp	r3, #47	; 0x2f
   3a770:	bls	3a784 <grisu3_diy_fp_encode_double@@Base+0x1484>
   3a774:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3a778:	ldrb	r3, [r3]
   3a77c:	cmp	r3, #57	; 0x39
   3a780:	bls	3a710 <grisu3_diy_fp_encode_double@@Base+0x1410>
   3a784:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a788:	cmp	r3, #0
   3a78c:	beq	3a79c <grisu3_diy_fp_encode_double@@Base+0x149c>
   3a790:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a794:	rsb	r3, r3, #0
   3a798:	b	3a7a0 <grisu3_diy_fp_encode_double@@Base+0x14a0>
   3a79c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a7a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3a7a4:	add	r3, r2, r3
   3a7a8:	str	r3, [fp, #-56]	; 0xffffffc8
   3a7ac:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a7b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a7b4:	cmp	r2, r3
   3a7b8:	bne	3a7c4 <grisu3_diy_fp_encode_double@@Base+0x14c4>
   3a7bc:	mov	r3, #0
   3a7c0:	b	3a800 <grisu3_diy_fp_encode_double@@Base+0x1500>
   3a7c4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3a7c8:	str	r3, [sp, #20]
   3a7cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3a7d0:	str	r3, [sp, #16]
   3a7d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3a7d8:	str	r3, [sp, #12]
   3a7dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a7e0:	str	r3, [sp, #8]
   3a7e4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   3a7e8:	strd	r2, [sp]
   3a7ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3a7f0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   3a7f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3a7f8:	bl	398b8 <grisu3_diy_fp_encode_double@@Base+0x5b8>
   3a7fc:	mov	r3, r0
   3a800:	mov	r0, r3
   3a804:	sub	sp, fp, #28
   3a808:	ldrd	r4, [sp]
   3a80c:	ldrd	r6, [sp, #8]
   3a810:	ldrd	r8, [sp, #16]
   3a814:	ldr	fp, [sp, #24]
   3a818:	add	sp, sp, #28
   3a81c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a820:	str	fp, [sp, #-8]!
   3a824:	str	lr, [sp, #4]
   3a828:	add	fp, sp, #4
   3a82c:	sub	sp, sp, #16
   3a830:	str	r0, [fp, #-8]
   3a834:	str	r1, [fp, #-12]
   3a838:	str	r2, [fp, #-16]
   3a83c:	ldr	r2, [fp, #-16]
   3a840:	ldr	r1, [fp, #-12]
   3a844:	ldr	r0, [fp, #-8]
   3a848:	bl	39f7c <grisu3_diy_fp_encode_double@@Base+0xc7c>
   3a84c:	mov	r3, r0
   3a850:	mov	r0, r3
   3a854:	sub	sp, fp, #4
   3a858:	ldr	fp, [sp]
   3a85c:	add	sp, sp, #4
   3a860:	pop	{pc}		; (ldr pc, [sp], #4)
   3a864:	str	fp, [sp, #-8]!
   3a868:	str	lr, [sp, #4]
   3a86c:	add	fp, sp, #4
   3a870:	sub	sp, sp, #40	; 0x28
   3a874:	str	r0, [fp, #-32]	; 0xffffffe0
   3a878:	str	r1, [fp, #-36]	; 0xffffffdc
   3a87c:	str	r2, [fp, #-40]	; 0xffffffd8
   3a880:	mov	r3, #0
   3a884:	movt	r3, #32640	; 0x7f80
   3a888:	str	r3, [fp, #-24]	; 0xffffffe8
   3a88c:	sub	r3, fp, #20
   3a890:	mov	r2, r3
   3a894:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3a898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a89c:	bl	3a820 <grisu3_diy_fp_encode_double@@Base+0x1520>
   3a8a0:	str	r0, [fp, #-8]
   3a8a4:	vldr	d7, [fp, #-20]	; 0xffffffec
   3a8a8:	vcvt.f32.f64	s15, d7
   3a8ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a8b0:	vstr	s15, [r3]
   3a8b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a8b8:	vldr	s15, [r3]
   3a8bc:	vabs.f32	s15, s15
   3a8c0:	vldr	s14, [pc, #124]	; 3a944 <grisu3_diy_fp_encode_double@@Base+0x1644>
   3a8c4:	vcmp.f32	s15, s14
   3a8c8:	vmrs	APSR_nzcv, fpscr
   3a8cc:	movle	r3, #1
   3a8d0:	movgt	r3, #0
   3a8d4:	uxtb	r3, r3
   3a8d8:	eor	r3, r3, #1
   3a8dc:	uxtb	r3, r3
   3a8e0:	cmp	r3, #0
   3a8e4:	beq	3a8f0 <grisu3_diy_fp_encode_double@@Base+0x15f0>
   3a8e8:	mov	r3, #1
   3a8ec:	b	3a8f4 <grisu3_diy_fp_encode_double@@Base+0x15f4>
   3a8f0:	mov	r3, #0
   3a8f4:	cmp	r3, #0
   3a8f8:	beq	3a92c <grisu3_diy_fp_encode_double@@Base+0x162c>
   3a8fc:	vldr	d7, [fp, #-20]	; 0xffffffec
   3a900:	vcmpe.f64	d7, #0.0
   3a904:	vmrs	APSR_nzcv, fpscr
   3a908:	bpl	3a918 <grisu3_diy_fp_encode_double@@Base+0x1618>
   3a90c:	vldr	s15, [fp, #-24]	; 0xffffffe8
   3a910:	vneg.f32	s15, s15
   3a914:	b	3a91c <grisu3_diy_fp_encode_double@@Base+0x161c>
   3a918:	vldr	s15, [fp, #-24]	; 0xffffffe8
   3a91c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a920:	vstr	s15, [r3]
   3a924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a928:	b	3a930 <grisu3_diy_fp_encode_double@@Base+0x1630>
   3a92c:	ldr	r3, [fp, #-8]
   3a930:	mov	r0, r3
   3a934:	sub	sp, fp, #4
   3a938:	ldr	fp, [sp]
   3a93c:	add	sp, sp, #4
   3a940:	pop	{pc}		; (ldr pc, [sp], #4)
   3a944:	svcvc	0x007fffff
   3a948:	push	{fp}		; (str fp, [sp, #-4]!)
   3a94c:	add	fp, sp, #0
   3a950:	sub	sp, sp, #12
   3a954:	str	r0, [fp, #-8]
   3a958:	ldr	r3, [fp, #-8]
   3a95c:	cmp	r3, #5
   3a960:	addls	pc, pc, r3, lsl #2
   3a964:	b	3a9c8 <grisu3_diy_fp_encode_double@@Base+0x16c8>
   3a968:	b	3a980 <grisu3_diy_fp_encode_double@@Base+0x1680>
   3a96c:	b	3a9a4 <grisu3_diy_fp_encode_double@@Base+0x16a4>
   3a970:	b	3a98c <grisu3_diy_fp_encode_double@@Base+0x168c>
   3a974:	b	3a998 <grisu3_diy_fp_encode_double@@Base+0x1698>
   3a978:	b	3a9b0 <grisu3_diy_fp_encode_double@@Base+0x16b0>
   3a97c:	b	3a9bc <grisu3_diy_fp_encode_double@@Base+0x16bc>
   3a980:	ldr	r3, [pc, #88]	; 3a9e0 <grisu3_diy_fp_encode_double@@Base+0x16e0>
   3a984:	add	r3, pc, r3
   3a988:	b	3a9d0 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   3a98c:	ldr	r3, [pc, #80]	; 3a9e4 <grisu3_diy_fp_encode_double@@Base+0x16e4>
   3a990:	add	r3, pc, r3
   3a994:	b	3a9d0 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   3a998:	ldr	r3, [pc, #72]	; 3a9e8 <grisu3_diy_fp_encode_double@@Base+0x16e8>
   3a99c:	add	r3, pc, r3
   3a9a0:	b	3a9d0 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   3a9a4:	ldr	r3, [pc, #64]	; 3a9ec <grisu3_diy_fp_encode_double@@Base+0x16ec>
   3a9a8:	add	r3, pc, r3
   3a9ac:	b	3a9d0 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   3a9b0:	ldr	r3, [pc, #56]	; 3a9f0 <grisu3_diy_fp_encode_double@@Base+0x16f0>
   3a9b4:	add	r3, pc, r3
   3a9b8:	b	3a9d0 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   3a9bc:	ldr	r3, [pc, #48]	; 3a9f4 <grisu3_diy_fp_encode_double@@Base+0x16f4>
   3a9c0:	add	r3, pc, r3
   3a9c4:	b	3a9d0 <grisu3_diy_fp_encode_double@@Base+0x16d0>
   3a9c8:	ldr	r3, [pc, #40]	; 3a9f8 <grisu3_diy_fp_encode_double@@Base+0x16f8>
   3a9cc:	add	r3, pc, r3
   3a9d0:	mov	r0, r3
   3a9d4:	add	sp, fp, #0
   3a9d8:	pop	{fp}		; (ldr fp, [sp], #4)
   3a9dc:	bx	lr
   3a9e0:			; <UNDEFINED> instruction: 0x00017ebc
   3a9e4:			; <UNDEFINED> instruction: 0x00017eb4
   3a9e8:			; <UNDEFINED> instruction: 0x00017ebc
   3a9ec:	andeq	r7, r1, r0, asr #29
   3a9f0:	andeq	r7, r1, r8, asr #29
   3a9f4:	ldrdeq	r7, [r1], -r0
   3a9f8:	ldrdeq	r7, [r1], -ip
   3a9fc:	push	{fp}		; (str fp, [sp, #-4]!)
   3aa00:	add	fp, sp, #0
   3aa04:	sub	sp, sp, #28
   3aa08:	str	r0, [fp, #-24]	; 0xffffffe8
   3aa0c:	str	r1, [fp, #-28]	; 0xffffffe4
   3aa10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3aa14:	movw	r3, #43691	; 0xaaab
   3aa18:	movt	r3, #43690	; 0xaaaa
   3aa1c:	umull	r1, r3, r3, r2
   3aa20:	lsr	r1, r3, #1
   3aa24:	mov	r3, r1
   3aa28:	lsl	r3, r3, #1
   3aa2c:	add	r3, r3, r1
   3aa30:	sub	r3, r2, r3
   3aa34:	str	r3, [fp, #-12]
   3aa38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3aa3c:	lsl	r2, r3, #2
   3aa40:	movw	r3, #43691	; 0xaaab
   3aa44:	movt	r3, #43690	; 0xaaaa
   3aa48:	umull	r2, r3, r3, r2
   3aa4c:	lsr	r3, r3, #1
   3aa50:	add	r3, r3, #3
   3aa54:	bic	r3, r3, #3
   3aa58:	str	r3, [fp, #-8]
   3aa5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aa60:	and	r3, r3, #128	; 0x80
   3aa64:	str	r3, [fp, #-16]
   3aa68:	ldr	r3, [fp, #-16]
   3aa6c:	cmp	r3, #0
   3aa70:	bne	3aaac <grisu3_diy_fp_encode_double@@Base+0x17ac>
   3aa74:	ldr	r3, [fp, #-12]
   3aa78:	cmp	r3, #1
   3aa7c:	beq	3aa9c <grisu3_diy_fp_encode_double@@Base+0x179c>
   3aa80:	ldr	r3, [fp, #-12]
   3aa84:	cmp	r3, #2
   3aa88:	bne	3aab4 <grisu3_diy_fp_encode_double@@Base+0x17b4>
   3aa8c:	ldr	r3, [fp, #-8]
   3aa90:	sub	r3, r3, #1
   3aa94:	str	r3, [fp, #-8]
   3aa98:	b	3aab8 <grisu3_diy_fp_encode_double@@Base+0x17b8>
   3aa9c:	ldr	r3, [fp, #-8]
   3aaa0:	sub	r3, r3, #2
   3aaa4:	str	r3, [fp, #-8]
   3aaa8:	b	3aab8 <grisu3_diy_fp_encode_double@@Base+0x17b8>
   3aaac:	nop	{0}
   3aab0:	b	3aab8 <grisu3_diy_fp_encode_double@@Base+0x17b8>
   3aab4:	nop	{0}
   3aab8:	ldr	r3, [fp, #-8]
   3aabc:	mov	r0, r3
   3aac0:	add	sp, fp, #0
   3aac4:	pop	{fp}		; (ldr fp, [sp], #4)
   3aac8:	bx	lr
   3aacc:	push	{fp}		; (str fp, [sp, #-4]!)
   3aad0:	add	fp, sp, #0
   3aad4:	sub	sp, sp, #20
   3aad8:	str	r0, [fp, #-16]
   3aadc:	ldr	r3, [fp, #-16]
   3aae0:	and	r3, r3, #3
   3aae4:	str	r3, [fp, #-8]
   3aae8:	ldr	r3, [fp, #-16]
   3aaec:	lsr	r2, r3, #2
   3aaf0:	mov	r3, r2
   3aaf4:	lsl	r3, r3, #1
   3aaf8:	add	r3, r3, r2
   3aafc:	str	r3, [fp, #-12]
   3ab00:	ldr	r3, [fp, #-8]
   3ab04:	cmp	r3, #2
   3ab08:	beq	3ab24 <grisu3_diy_fp_encode_double@@Base+0x1824>
   3ab0c:	ldr	r3, [fp, #-8]
   3ab10:	cmp	r3, #3
   3ab14:	bne	3ab30 <grisu3_diy_fp_encode_double@@Base+0x1830>
   3ab18:	ldr	r3, [fp, #-12]
   3ab1c:	add	r3, r3, #2
   3ab20:	b	3ab34 <grisu3_diy_fp_encode_double@@Base+0x1834>
   3ab24:	ldr	r3, [fp, #-12]
   3ab28:	add	r3, r3, #1
   3ab2c:	b	3ab34 <grisu3_diy_fp_encode_double@@Base+0x1834>
   3ab30:	ldr	r3, [fp, #-12]
   3ab34:	mov	r0, r3
   3ab38:	add	sp, fp, #0
   3ab3c:	pop	{fp}		; (ldr fp, [sp], #4)
   3ab40:	bx	lr
   3ab44:	push	{fp}		; (str fp, [sp, #-4]!)
   3ab48:	add	fp, sp, #0
   3ab4c:	sub	sp, sp, #52	; 0x34
   3ab50:	str	r0, [fp, #-40]	; 0xffffffd8
   3ab54:	str	r1, [fp, #-44]	; 0xffffffd4
   3ab58:	str	r2, [fp, #-48]	; 0xffffffd0
   3ab5c:	str	r3, [fp, #-52]	; 0xffffffcc
   3ab60:	ldr	r3, [pc, #928]	; 3af08 <grisu3_diy_fp_encode_double@@Base+0x1c08>
   3ab64:	add	r3, pc, r3
   3ab68:	str	r3, [fp, #-20]	; 0xffffffec
   3ab6c:	ldr	r3, [pc, #920]	; 3af0c <grisu3_diy_fp_encode_double@@Base+0x1c0c>
   3ab70:	add	r3, pc, r3
   3ab74:	str	r3, [fp, #-24]	; 0xffffffe8
   3ab78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ab7c:	str	r3, [fp, #-28]	; 0xffffffe4
   3ab80:	ldr	r3, [fp, #4]
   3ab84:	and	r3, r3, #128	; 0x80
   3ab88:	str	r3, [fp, #-32]	; 0xffffffe0
   3ab8c:	mov	r3, #0
   3ab90:	str	r3, [fp, #-12]
   3ab94:	mov	r3, #3
   3ab98:	str	r3, [fp, #-16]
   3ab9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3aba0:	cmp	r3, #0
   3aba4:	bne	3abb4 <grisu3_diy_fp_encode_double@@Base+0x18b4>
   3aba8:	mov	r3, #2
   3abac:	str	r3, [fp, #-16]
   3abb0:	b	3aeac <grisu3_diy_fp_encode_double@@Base+0x1bac>
   3abb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3abb8:	ldr	r3, [r3]
   3abbc:	str	r3, [fp, #-12]
   3abc0:	ldr	r3, [fp, #4]
   3abc4:	bic	r3, r3, #224	; 0xe0
   3abc8:	str	r3, [fp, #4]
   3abcc:	ldr	r3, [fp, #4]
   3abd0:	cmp	r3, #0
   3abd4:	beq	3abe8 <grisu3_diy_fp_encode_double@@Base+0x18e8>
   3abd8:	ldr	r3, [fp, #4]
   3abdc:	cmp	r3, #1
   3abe0:	beq	3abf4 <grisu3_diy_fp_encode_double@@Base+0x18f4>
   3abe4:	b	3aeac <grisu3_diy_fp_encode_double@@Base+0x1bac>
   3abe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3abec:	str	r3, [fp, #-8]
   3abf0:	b	3ac00 <grisu3_diy_fp_encode_double@@Base+0x1900>
   3abf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3abf8:	str	r3, [fp, #-8]
   3abfc:	nop	{0}
   3ac00:	mov	r3, #0
   3ac04:	str	r3, [fp, #-16]
   3ac08:	b	3ad0c <grisu3_diy_fp_encode_double@@Base+0x1a0c>
   3ac0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ac10:	ldrb	r3, [r3]
   3ac14:	lsr	r3, r3, #2
   3ac18:	uxtb	r3, r3
   3ac1c:	mov	r2, r3
   3ac20:	ldr	r3, [fp, #-8]
   3ac24:	add	r3, r3, r2
   3ac28:	ldrb	r2, [r3]
   3ac2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ac30:	strb	r2, [r3]
   3ac34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ac38:	ldrb	r3, [r3]
   3ac3c:	lsl	r3, r3, #4
   3ac40:	and	r3, r3, #48	; 0x30
   3ac44:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3ac48:	add	r2, r2, #1
   3ac4c:	ldrb	r2, [r2]
   3ac50:	lsr	r2, r2, #4
   3ac54:	uxtb	r2, r2
   3ac58:	orr	r3, r3, r2
   3ac5c:	mov	r2, r3
   3ac60:	ldr	r3, [fp, #-8]
   3ac64:	add	r2, r3, r2
   3ac68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ac6c:	add	r3, r3, #1
   3ac70:	ldrb	r2, [r2]
   3ac74:	strb	r2, [r3]
   3ac78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ac7c:	add	r3, r3, #1
   3ac80:	ldrb	r3, [r3]
   3ac84:	lsl	r3, r3, #2
   3ac88:	and	r3, r3, #60	; 0x3c
   3ac8c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3ac90:	add	r2, r2, #2
   3ac94:	ldrb	r2, [r2]
   3ac98:	lsr	r2, r2, #6
   3ac9c:	uxtb	r2, r2
   3aca0:	orr	r3, r3, r2
   3aca4:	mov	r2, r3
   3aca8:	ldr	r3, [fp, #-8]
   3acac:	add	r2, r3, r2
   3acb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3acb4:	add	r3, r3, #2
   3acb8:	ldrb	r2, [r2]
   3acbc:	strb	r2, [r3]
   3acc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3acc4:	add	r3, r3, #2
   3acc8:	ldrb	r3, [r3]
   3accc:	and	r3, r3, #63	; 0x3f
   3acd0:	ldr	r2, [fp, #-8]
   3acd4:	add	r2, r2, r3
   3acd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3acdc:	add	r3, r3, #3
   3ace0:	ldrb	r2, [r2]
   3ace4:	strb	r2, [r3]
   3ace8:	ldr	r3, [fp, #-12]
   3acec:	sub	r3, r3, #3
   3acf0:	str	r3, [fp, #-12]
   3acf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3acf8:	add	r3, r3, #4
   3acfc:	str	r3, [fp, #-40]	; 0xffffffd8
   3ad00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ad04:	add	r3, r3, #3
   3ad08:	str	r3, [fp, #-44]	; 0xffffffd4
   3ad0c:	ldr	r3, [fp, #-12]
   3ad10:	cmp	r3, #2
   3ad14:	bhi	3ac0c <grisu3_diy_fp_encode_double@@Base+0x190c>
   3ad18:	ldr	r3, [fp, #-12]
   3ad1c:	cmp	r3, #1
   3ad20:	beq	3adf8 <grisu3_diy_fp_encode_double@@Base+0x1af8>
   3ad24:	ldr	r3, [fp, #-12]
   3ad28:	cmp	r3, #2
   3ad2c:	bne	3ae8c <grisu3_diy_fp_encode_double@@Base+0x1b8c>
   3ad30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ad34:	ldrb	r3, [r3]
   3ad38:	lsr	r3, r3, #2
   3ad3c:	uxtb	r3, r3
   3ad40:	mov	r2, r3
   3ad44:	ldr	r3, [fp, #-8]
   3ad48:	add	r3, r3, r2
   3ad4c:	ldrb	r2, [r3]
   3ad50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ad54:	strb	r2, [r3]
   3ad58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ad5c:	ldrb	r3, [r3]
   3ad60:	lsl	r3, r3, #4
   3ad64:	and	r3, r3, #48	; 0x30
   3ad68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3ad6c:	add	r2, r2, #1
   3ad70:	ldrb	r2, [r2]
   3ad74:	lsr	r2, r2, #4
   3ad78:	uxtb	r2, r2
   3ad7c:	orr	r3, r3, r2
   3ad80:	mov	r2, r3
   3ad84:	ldr	r3, [fp, #-8]
   3ad88:	add	r2, r3, r2
   3ad8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ad90:	add	r3, r3, #1
   3ad94:	ldrb	r2, [r2]
   3ad98:	strb	r2, [r3]
   3ad9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ada0:	add	r3, r3, #1
   3ada4:	ldrb	r3, [r3]
   3ada8:	lsl	r3, r3, #2
   3adac:	and	r3, r3, #60	; 0x3c
   3adb0:	ldr	r2, [fp, #-8]
   3adb4:	add	r2, r2, r3
   3adb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3adbc:	add	r3, r3, #2
   3adc0:	ldrb	r2, [r2]
   3adc4:	strb	r2, [r3]
   3adc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3adcc:	add	r3, r3, #3
   3add0:	str	r3, [fp, #-40]	; 0xffffffd8
   3add4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3add8:	cmp	r3, #0
   3addc:	beq	3ae98 <grisu3_diy_fp_encode_double@@Base+0x1b98>
   3ade0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ade4:	add	r2, r3, #1
   3ade8:	str	r2, [fp, #-40]	; 0xffffffd8
   3adec:	mov	r2, #61	; 0x3d
   3adf0:	strb	r2, [r3]
   3adf4:	b	3ae98 <grisu3_diy_fp_encode_double@@Base+0x1b98>
   3adf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3adfc:	ldrb	r3, [r3]
   3ae00:	lsr	r3, r3, #2
   3ae04:	uxtb	r3, r3
   3ae08:	mov	r2, r3
   3ae0c:	ldr	r3, [fp, #-8]
   3ae10:	add	r3, r3, r2
   3ae14:	ldrb	r2, [r3]
   3ae18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ae1c:	strb	r2, [r3]
   3ae20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ae24:	ldrb	r3, [r3]
   3ae28:	lsl	r3, r3, #4
   3ae2c:	and	r3, r3, #48	; 0x30
   3ae30:	ldr	r2, [fp, #-8]
   3ae34:	add	r2, r2, r3
   3ae38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ae3c:	add	r3, r3, #1
   3ae40:	ldrb	r2, [r2]
   3ae44:	strb	r2, [r3]
   3ae48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ae4c:	add	r3, r3, #2
   3ae50:	str	r3, [fp, #-40]	; 0xffffffd8
   3ae54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ae58:	cmp	r3, #0
   3ae5c:	beq	3aea0 <grisu3_diy_fp_encode_double@@Base+0x1ba0>
   3ae60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ae64:	add	r2, r3, #1
   3ae68:	str	r2, [fp, #-40]	; 0xffffffd8
   3ae6c:	mov	r2, #61	; 0x3d
   3ae70:	strb	r2, [r3]
   3ae74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ae78:	add	r2, r3, #1
   3ae7c:	str	r2, [fp, #-40]	; 0xffffffd8
   3ae80:	mov	r2, #61	; 0x3d
   3ae84:	strb	r2, [r3]
   3ae88:	b	3aea0 <grisu3_diy_fp_encode_double@@Base+0x1ba0>
   3ae8c:	mov	r3, #0
   3ae90:	str	r3, [fp, #-32]	; 0xffffffe0
   3ae94:	b	3aea4 <grisu3_diy_fp_encode_double@@Base+0x1ba4>
   3ae98:	nop	{0}
   3ae9c:	b	3aea4 <grisu3_diy_fp_encode_double@@Base+0x1ba4>
   3aea0:	nop	{0}
   3aea4:	mov	r3, #0
   3aea8:	str	r3, [fp, #-12]
   3aeac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aeb0:	cmp	r3, #0
   3aeb4:	beq	3aed0 <grisu3_diy_fp_encode_double@@Base+0x1bd0>
   3aeb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3aebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aec0:	sub	r3, r2, r3
   3aec4:	mov	r2, r3
   3aec8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aecc:	str	r2, [r3]
   3aed0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3aed4:	cmp	r3, #0
   3aed8:	beq	3aef4 <grisu3_diy_fp_encode_double@@Base+0x1bf4>
   3aedc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3aee0:	ldr	r2, [r3]
   3aee4:	ldr	r3, [fp, #-12]
   3aee8:	sub	r2, r2, r3
   3aeec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3aef0:	str	r2, [r3]
   3aef4:	ldr	r3, [fp, #-16]
   3aef8:	mov	r0, r3
   3aefc:	add	sp, fp, #0
   3af00:	pop	{fp}		; (ldr fp, [sp], #4)
   3af04:	bx	lr
   3af08:	andeq	r7, r1, r4, asr sp
   3af0c:	andeq	r7, r1, ip, lsl #27
   3af10:	push	{fp}		; (str fp, [sp, #-4]!)
   3af14:	add	fp, sp, #0
   3af18:	sub	sp, sp, #60	; 0x3c
   3af1c:	str	r0, [fp, #-48]	; 0xffffffd0
   3af20:	str	r1, [fp, #-52]	; 0xffffffcc
   3af24:	str	r2, [fp, #-56]	; 0xffffffc8
   3af28:	str	r3, [fp, #-60]	; 0xffffffc4
   3af2c:	mov	r3, #0
   3af30:	str	r3, [fp, #-8]
   3af34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3af38:	str	r3, [fp, #-36]	; 0xffffffdc
   3af3c:	mvn	r3, #0
   3af40:	str	r3, [fp, #-20]	; 0xffffffec
   3af44:	mvn	r3, #0
   3af48:	str	r3, [fp, #-24]	; 0xffffffe8
   3af4c:	ldr	r3, [pc, #1388]	; 3b4c0 <grisu3_diy_fp_encode_double@@Base+0x21c0>
   3af50:	add	r3, pc, r3
   3af54:	str	r3, [fp, #-32]	; 0xffffffe0
   3af58:	ldr	r3, [fp, #4]
   3af5c:	and	r3, r3, #32
   3af60:	str	r3, [fp, #-40]	; 0xffffffd8
   3af64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3af68:	cmp	r3, #0
   3af6c:	beq	3af7c <grisu3_diy_fp_encode_double@@Base+0x1c7c>
   3af70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3af74:	ldr	r3, [r3]
   3af78:	str	r3, [fp, #-24]	; 0xffffffe8
   3af7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3af80:	str	r3, [fp, #-28]	; 0xffffffe4
   3af84:	ldr	r3, [fp, #4]
   3af88:	bic	r3, r3, #224	; 0xe0
   3af8c:	str	r3, [fp, #4]
   3af90:	ldr	r3, [fp, #4]
   3af94:	cmp	r3, #0
   3af98:	beq	3afac <grisu3_diy_fp_encode_double@@Base+0x1cac>
   3af9c:	ldr	r3, [fp, #4]
   3afa0:	cmp	r3, #1
   3afa4:	beq	3afd4 <grisu3_diy_fp_encode_double@@Base+0x1cd4>
   3afa8:	b	3affc <grisu3_diy_fp_encode_double@@Base+0x1cfc>
   3afac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3afb0:	cmp	r3, #0
   3afb4:	beq	3afc4 <grisu3_diy_fp_encode_double@@Base+0x1cc4>
   3afb8:	ldr	r3, [pc, #1284]	; 3b4c4 <grisu3_diy_fp_encode_double@@Base+0x21c4>
   3afbc:	add	r3, pc, r3
   3afc0:	b	3afcc <grisu3_diy_fp_encode_double@@Base+0x1ccc>
   3afc4:	ldr	r3, [pc, #1276]	; 3b4c8 <grisu3_diy_fp_encode_double@@Base+0x21c8>
   3afc8:	add	r3, pc, r3
   3afcc:	str	r3, [fp, #-32]	; 0xffffffe0
   3afd0:	b	3b008 <grisu3_diy_fp_encode_double@@Base+0x1d08>
   3afd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3afd8:	cmp	r3, #0
   3afdc:	beq	3afec <grisu3_diy_fp_encode_double@@Base+0x1cec>
   3afe0:	ldr	r3, [pc, #1252]	; 3b4cc <grisu3_diy_fp_encode_double@@Base+0x21cc>
   3afe4:	add	r3, pc, r3
   3afe8:	b	3aff4 <grisu3_diy_fp_encode_double@@Base+0x1cf4>
   3afec:	ldr	r3, [pc, #1244]	; 3b4d0 <grisu3_diy_fp_encode_double@@Base+0x21d0>
   3aff0:	add	r3, pc, r3
   3aff4:	str	r3, [fp, #-32]	; 0xffffffe0
   3aff8:	b	3b008 <grisu3_diy_fp_encode_double@@Base+0x1d08>
   3affc:	mov	r3, #3
   3b000:	str	r3, [fp, #-8]
   3b004:	b	3b2f4 <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   3b008:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b00c:	cmp	r3, #0
   3b010:	beq	3b2e4 <grisu3_diy_fp_encode_double@@Base+0x1fe4>
   3b014:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b018:	ldr	r3, [r3]
   3b01c:	cmp	r3, #0
   3b020:	beq	3b2e4 <grisu3_diy_fp_encode_double@@Base+0x1fe4>
   3b024:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b028:	ldr	r3, [r3]
   3b02c:	str	r3, [fp, #-20]	; 0xffffffec
   3b030:	b	3b2e4 <grisu3_diy_fp_encode_double@@Base+0x1fe4>
   3b034:	mov	r3, #0
   3b038:	str	r3, [fp, #-12]
   3b03c:	b	3b204 <grisu3_diy_fp_encode_double@@Base+0x1f04>
   3b040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b044:	ldr	r3, [fp, #-12]
   3b048:	cmp	r2, r3
   3b04c:	bne	3b06c <grisu3_diy_fp_encode_double@@Base+0x1d6c>
   3b050:	ldr	r3, [fp, #-12]
   3b054:	str	r3, [fp, #-16]
   3b058:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b05c:	ldr	r3, [fp, #-12]
   3b060:	sub	r3, r2, r3
   3b064:	str	r3, [fp, #-24]	; 0xffffffe8
   3b068:	b	3b344 <grisu3_diy_fp_encode_double@@Base+0x2044>
   3b06c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3b070:	ldr	r3, [fp, #-12]
   3b074:	add	r3, r2, r3
   3b078:	ldrb	r3, [r3]
   3b07c:	mov	r2, r3
   3b080:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b084:	add	r3, r3, r2
   3b088:	ldrb	r1, [r3]
   3b08c:	sub	r2, fp, #44	; 0x2c
   3b090:	ldr	r3, [fp, #-12]
   3b094:	add	r3, r2, r3
   3b098:	mov	r2, r1
   3b09c:	strb	r2, [r3]
   3b0a0:	sub	r2, fp, #44	; 0x2c
   3b0a4:	ldr	r3, [fp, #-12]
   3b0a8:	add	r3, r2, r3
   3b0ac:	ldrb	r2, [r3]
   3b0b0:	ldr	r3, [pc, #1052]	; 3b4d4 <grisu3_diy_fp_encode_double@@Base+0x21d4>
   3b0b4:	add	r3, pc, r3
   3b0b8:	ldrb	r3, [r3]
   3b0bc:	cmp	r2, r3
   3b0c0:	bcc	3b1f8 <grisu3_diy_fp_encode_double@@Base+0x1ef8>
   3b0c4:	sub	r2, fp, #44	; 0x2c
   3b0c8:	ldr	r3, [fp, #-12]
   3b0cc:	add	r3, r2, r3
   3b0d0:	ldrb	r2, [r3]
   3b0d4:	ldr	r3, [pc, #1020]	; 3b4d8 <grisu3_diy_fp_encode_double@@Base+0x21d8>
   3b0d8:	add	r3, pc, r3
   3b0dc:	ldrb	r3, [r3]
   3b0e0:	cmp	r2, r3
   3b0e4:	bne	3b110 <grisu3_diy_fp_encode_double@@Base+0x1e10>
   3b0e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b0ec:	add	r3, r3, #1
   3b0f0:	str	r3, [fp, #-52]	; 0xffffffcc
   3b0f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b0f8:	sub	r3, r3, #1
   3b0fc:	str	r3, [fp, #-24]	; 0xffffffe8
   3b100:	ldr	r3, [fp, #-12]
   3b104:	sub	r3, r3, #1
   3b108:	str	r3, [fp, #-12]
   3b10c:	b	3b1f8 <grisu3_diy_fp_encode_double@@Base+0x1ef8>
   3b110:	ldr	r3, [fp, #-12]
   3b114:	str	r3, [fp, #-16]
   3b118:	sub	r2, fp, #44	; 0x2c
   3b11c:	ldr	r3, [fp, #-12]
   3b120:	add	r3, r2, r3
   3b124:	ldrb	r2, [r3]
   3b128:	ldr	r3, [pc, #940]	; 3b4dc <grisu3_diy_fp_encode_double@@Base+0x21dc>
   3b12c:	add	r3, pc, r3
   3b130:	ldrb	r3, [r3]
   3b134:	cmp	r2, r3
   3b138:	bne	3b1e4 <grisu3_diy_fp_encode_double@@Base+0x1ee4>
   3b13c:	ldr	r3, [fp, #-12]
   3b140:	add	r3, r3, #1
   3b144:	str	r3, [fp, #-12]
   3b148:	b	3b1c0 <grisu3_diy_fp_encode_double@@Base+0x1ec0>
   3b14c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3b150:	ldr	r3, [fp, #-12]
   3b154:	add	r3, r2, r3
   3b158:	ldrb	r3, [r3]
   3b15c:	mov	r2, r3
   3b160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b164:	add	r3, r3, r2
   3b168:	ldrb	r2, [r3]
   3b16c:	ldr	r3, [pc, #876]	; 3b4e0 <grisu3_diy_fp_encode_double@@Base+0x21e0>
   3b170:	add	r3, pc, r3
   3b174:	ldrb	r3, [r3]
   3b178:	cmp	r2, r3
   3b17c:	beq	3b1b4 <grisu3_diy_fp_encode_double@@Base+0x1eb4>
   3b180:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3b184:	ldr	r3, [fp, #-12]
   3b188:	add	r3, r2, r3
   3b18c:	ldrb	r3, [r3]
   3b190:	mov	r2, r3
   3b194:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b198:	add	r3, r3, r2
   3b19c:	ldrb	r2, [r3]
   3b1a0:	ldr	r3, [pc, #828]	; 3b4e4 <grisu3_diy_fp_encode_double@@Base+0x21e4>
   3b1a4:	add	r3, pc, r3
   3b1a8:	ldrb	r3, [r3]
   3b1ac:	cmp	r2, r3
   3b1b0:	bne	3b1e0 <grisu3_diy_fp_encode_double@@Base+0x1ee0>
   3b1b4:	ldr	r3, [fp, #-12]
   3b1b8:	add	r3, r3, #1
   3b1bc:	str	r3, [fp, #-12]
   3b1c0:	ldr	r2, [fp, #-12]
   3b1c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b1c8:	cmp	r2, r3
   3b1cc:	bcs	3b1e4 <grisu3_diy_fp_encode_double@@Base+0x1ee4>
   3b1d0:	ldr	r3, [fp, #-12]
   3b1d4:	cmp	r3, #7
   3b1d8:	bls	3b14c <grisu3_diy_fp_encode_double@@Base+0x1e4c>
   3b1dc:	b	3b1e4 <grisu3_diy_fp_encode_double@@Base+0x1ee4>
   3b1e0:	nop	{0}
   3b1e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b1e8:	ldr	r3, [fp, #-12]
   3b1ec:	sub	r3, r2, r3
   3b1f0:	str	r3, [fp, #-24]	; 0xffffffe8
   3b1f4:	b	3b344 <grisu3_diy_fp_encode_double@@Base+0x2044>
   3b1f8:	ldr	r3, [fp, #-12]
   3b1fc:	add	r3, r3, #1
   3b200:	str	r3, [fp, #-12]
   3b204:	ldr	r3, [fp, #-12]
   3b208:	cmp	r3, #3
   3b20c:	bls	3b040 <grisu3_diy_fp_encode_double@@Base+0x1d40>
   3b210:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b214:	cmp	r3, #2
   3b218:	bls	3b490 <grisu3_diy_fp_encode_double@@Base+0x2190>
   3b21c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   3b220:	lsl	r3, r3, #2
   3b224:	sxtb	r2, r3
   3b228:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3b22c:	lsr	r3, r3, #4
   3b230:	uxtb	r3, r3
   3b234:	sxtb	r3, r3
   3b238:	orr	r3, r2, r3
   3b23c:	sxtb	r3, r3
   3b240:	uxtb	r2, r3
   3b244:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b248:	strb	r2, [r3]
   3b24c:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3b250:	lsl	r3, r3, #4
   3b254:	sxtb	r2, r3
   3b258:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   3b25c:	lsr	r3, r3, #2
   3b260:	uxtb	r3, r3
   3b264:	sxtb	r3, r3
   3b268:	orr	r3, r2, r3
   3b26c:	sxtb	r2, r3
   3b270:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b274:	add	r3, r3, #1
   3b278:	uxtb	r2, r2
   3b27c:	strb	r2, [r3]
   3b280:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   3b284:	lsl	r3, r3, #6
   3b288:	sxtb	r2, r3
   3b28c:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3b290:	sxtb	r3, r3
   3b294:	orr	r3, r2, r3
   3b298:	sxtb	r2, r3
   3b29c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b2a0:	add	r3, r3, #2
   3b2a4:	uxtb	r2, r2
   3b2a8:	strb	r2, [r3]
   3b2ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b2b0:	add	r3, r3, #3
   3b2b4:	str	r3, [fp, #-48]	; 0xffffffd0
   3b2b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b2bc:	add	r3, r3, #4
   3b2c0:	str	r3, [fp, #-52]	; 0xffffffcc
   3b2c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b2c8:	sub	r3, r3, #3
   3b2cc:	str	r3, [fp, #-20]	; 0xffffffec
   3b2d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b2d4:	sub	r3, r3, #4
   3b2d8:	str	r3, [fp, #-24]	; 0xffffffe8
   3b2dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b2e0:	str	r3, [fp, #-28]	; 0xffffffe4
   3b2e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b2e8:	cmp	r3, #0
   3b2ec:	bne	3b034 <grisu3_diy_fp_encode_double@@Base+0x1d34>
   3b2f0:	nop	{0}
   3b2f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b2f8:	cmp	r3, #0
   3b2fc:	beq	3b318 <grisu3_diy_fp_encode_double@@Base+0x2018>
   3b300:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3b304:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b308:	sub	r3, r2, r3
   3b30c:	mov	r2, r3
   3b310:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b314:	str	r2, [r3]
   3b318:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3b31c:	cmp	r3, #0
   3b320:	beq	3b33c <grisu3_diy_fp_encode_double@@Base+0x203c>
   3b324:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3b328:	ldr	r2, [r3]
   3b32c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b330:	sub	r2, r2, r3
   3b334:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3b338:	str	r2, [r3]
   3b33c:	ldr	r3, [fp, #-8]
   3b340:	b	3b4b0 <grisu3_diy_fp_encode_double@@Base+0x21b0>
   3b344:	ldr	r3, [fp, #-16]
   3b348:	cmp	r3, #2
   3b34c:	beq	3b36c <grisu3_diy_fp_encode_double@@Base+0x206c>
   3b350:	ldr	r3, [fp, #-16]
   3b354:	cmp	r3, #3
   3b358:	beq	3b3cc <grisu3_diy_fp_encode_double@@Base+0x20cc>
   3b35c:	ldr	r3, [fp, #-16]
   3b360:	cmp	r3, #0
   3b364:	bne	3b460 <grisu3_diy_fp_encode_double@@Base+0x2160>
   3b368:	b	3b46c <grisu3_diy_fp_encode_double@@Base+0x216c>
   3b36c:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3b370:	lsl	r3, r3, #4
   3b374:	uxtb	r3, r3
   3b378:	cmp	r3, #0
   3b37c:	bne	3b478 <grisu3_diy_fp_encode_double@@Base+0x2178>
   3b380:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b384:	cmp	r3, #0
   3b388:	beq	3b498 <grisu3_diy_fp_encode_double@@Base+0x2198>
   3b38c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   3b390:	lsl	r3, r3, #2
   3b394:	sxtb	r2, r3
   3b398:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3b39c:	lsr	r3, r3, #4
   3b3a0:	uxtb	r3, r3
   3b3a4:	sxtb	r3, r3
   3b3a8:	orr	r3, r2, r3
   3b3ac:	sxtb	r3, r3
   3b3b0:	uxtb	r2, r3
   3b3b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b3b8:	strb	r2, [r3]
   3b3bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b3c0:	add	r3, r3, #1
   3b3c4:	str	r3, [fp, #-48]	; 0xffffffd0
   3b3c8:	b	3b46c <grisu3_diy_fp_encode_double@@Base+0x216c>
   3b3cc:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   3b3d0:	lsl	r3, r3, #6
   3b3d4:	uxtb	r3, r3
   3b3d8:	cmp	r3, #0
   3b3dc:	bne	3b480 <grisu3_diy_fp_encode_double@@Base+0x2180>
   3b3e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b3e4:	cmp	r3, #1
   3b3e8:	bls	3b4a0 <grisu3_diy_fp_encode_double@@Base+0x21a0>
   3b3ec:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   3b3f0:	lsl	r3, r3, #2
   3b3f4:	sxtb	r2, r3
   3b3f8:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3b3fc:	lsr	r3, r3, #4
   3b400:	uxtb	r3, r3
   3b404:	sxtb	r3, r3
   3b408:	orr	r3, r2, r3
   3b40c:	sxtb	r3, r3
   3b410:	uxtb	r2, r3
   3b414:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b418:	strb	r2, [r3]
   3b41c:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3b420:	lsl	r3, r3, #4
   3b424:	sxtb	r2, r3
   3b428:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   3b42c:	lsr	r3, r3, #2
   3b430:	uxtb	r3, r3
   3b434:	sxtb	r3, r3
   3b438:	orr	r3, r2, r3
   3b43c:	sxtb	r2, r3
   3b440:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b444:	add	r3, r3, #1
   3b448:	uxtb	r2, r2
   3b44c:	strb	r2, [r3]
   3b450:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b454:	add	r3, r3, #2
   3b458:	str	r3, [fp, #-48]	; 0xffffffd0
   3b45c:	b	3b46c <grisu3_diy_fp_encode_double@@Base+0x216c>
   3b460:	mov	r3, #4
   3b464:	str	r3, [fp, #-8]
   3b468:	b	3b2f4 <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   3b46c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b470:	str	r3, [fp, #-28]	; 0xffffffe4
   3b474:	b	3b2f4 <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   3b478:	nop	{0}
   3b47c:	b	3b484 <grisu3_diy_fp_encode_double@@Base+0x2184>
   3b480:	nop	{0}
   3b484:	mov	r3, #5
   3b488:	str	r3, [fp, #-8]
   3b48c:	b	3b2f4 <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   3b490:	nop	{0}
   3b494:	b	3b4a4 <grisu3_diy_fp_encode_double@@Base+0x21a4>
   3b498:	nop	{0}
   3b49c:	b	3b4a4 <grisu3_diy_fp_encode_double@@Base+0x21a4>
   3b4a0:	nop	{0}
   3b4a4:	mov	r3, #1
   3b4a8:	str	r3, [fp, #-8]
   3b4ac:	b	3b2f4 <grisu3_diy_fp_encode_double@@Base+0x1ff4>
   3b4b0:	mov	r0, r3
   3b4b4:	add	sp, fp, #0
   3b4b8:	pop	{fp}		; (ldr fp, [sp], #4)
   3b4bc:	bx	lr
   3b4c0:	andeq	r7, r1, r8, lsl #27
   3b4c4:	andeq	r7, r1, ip, lsl lr
   3b4c8:	andeq	r7, r1, r0, lsl sp
   3b4cc:	strdeq	r7, [r1], -r4
   3b4d0:	andeq	r7, r1, r8, ror #31
   3b4d4:	andeq	r8, r1, r4, lsr #32
   3b4d8:	andeq	r8, r1, r1
   3b4dc:	andeq	r7, r1, lr, lsr #31
   3b4e0:	andeq	r7, r1, sl, ror #30
   3b4e4:	andeq	r7, r1, r5, lsr pc

0003b4e8 <flatcc_json_parser_error_string@@Base>:
   3b4e8:	push	{fp}		; (str fp, [sp, #-4]!)
   3b4ec:	add	fp, sp, #0
   3b4f0:	sub	sp, sp, #12
   3b4f4:	str	r0, [fp, #-8]
   3b4f8:	ldr	r3, [fp, #-8]
   3b4fc:	cmp	r3, #34	; 0x22
   3b500:	addls	pc, pc, r3, lsl #2
   3b504:	b	3b738 <flatcc_json_parser_error_string@@Base+0x250>
   3b508:	b	3b594 <flatcc_json_parser_error_string@@Base+0xac>
   3b50c:	b	3b5a0 <flatcc_json_parser_error_string@@Base+0xb8>
   3b510:	b	3b5ac <flatcc_json_parser_error_string@@Base+0xc4>
   3b514:	b	3b5b8 <flatcc_json_parser_error_string@@Base+0xd0>
   3b518:	b	3b5c4 <flatcc_json_parser_error_string@@Base+0xdc>
   3b51c:	b	3b5d0 <flatcc_json_parser_error_string@@Base+0xe8>
   3b520:	b	3b5dc <flatcc_json_parser_error_string@@Base+0xf4>
   3b524:	b	3b5e8 <flatcc_json_parser_error_string@@Base+0x100>
   3b528:	b	3b5f4 <flatcc_json_parser_error_string@@Base+0x10c>
   3b52c:	b	3b600 <flatcc_json_parser_error_string@@Base+0x118>
   3b530:	b	3b60c <flatcc_json_parser_error_string@@Base+0x124>
   3b534:	b	3b618 <flatcc_json_parser_error_string@@Base+0x130>
   3b538:	b	3b624 <flatcc_json_parser_error_string@@Base+0x13c>
   3b53c:	b	3b630 <flatcc_json_parser_error_string@@Base+0x148>
   3b540:	b	3b63c <flatcc_json_parser_error_string@@Base+0x154>
   3b544:	b	3b648 <flatcc_json_parser_error_string@@Base+0x160>
   3b548:	b	3b654 <flatcc_json_parser_error_string@@Base+0x16c>
   3b54c:	b	3b660 <flatcc_json_parser_error_string@@Base+0x178>
   3b550:	b	3b66c <flatcc_json_parser_error_string@@Base+0x184>
   3b554:	b	3b678 <flatcc_json_parser_error_string@@Base+0x190>
   3b558:	b	3b684 <flatcc_json_parser_error_string@@Base+0x19c>
   3b55c:	b	3b690 <flatcc_json_parser_error_string@@Base+0x1a8>
   3b560:	b	3b69c <flatcc_json_parser_error_string@@Base+0x1b4>
   3b564:	b	3b6a8 <flatcc_json_parser_error_string@@Base+0x1c0>
   3b568:	b	3b6b4 <flatcc_json_parser_error_string@@Base+0x1cc>
   3b56c:	b	3b6c0 <flatcc_json_parser_error_string@@Base+0x1d8>
   3b570:	b	3b6cc <flatcc_json_parser_error_string@@Base+0x1e4>
   3b574:	b	3b6d8 <flatcc_json_parser_error_string@@Base+0x1f0>
   3b578:	b	3b6e4 <flatcc_json_parser_error_string@@Base+0x1fc>
   3b57c:	b	3b6f0 <flatcc_json_parser_error_string@@Base+0x208>
   3b580:	b	3b6fc <flatcc_json_parser_error_string@@Base+0x214>
   3b584:	b	3b708 <flatcc_json_parser_error_string@@Base+0x220>
   3b588:	b	3b714 <flatcc_json_parser_error_string@@Base+0x22c>
   3b58c:	b	3b720 <flatcc_json_parser_error_string@@Base+0x238>
   3b590:	b	3b72c <flatcc_json_parser_error_string@@Base+0x244>
   3b594:	ldr	r3, [pc, #436]	; 3b750 <flatcc_json_parser_error_string@@Base+0x268>
   3b598:	add	r3, pc, r3
   3b59c:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5a0:	ldr	r3, [pc, #428]	; 3b754 <flatcc_json_parser_error_string@@Base+0x26c>
   3b5a4:	add	r3, pc, r3
   3b5a8:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5ac:	ldr	r3, [pc, #420]	; 3b758 <flatcc_json_parser_error_string@@Base+0x270>
   3b5b0:	add	r3, pc, r3
   3b5b4:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5b8:	ldr	r3, [pc, #412]	; 3b75c <flatcc_json_parser_error_string@@Base+0x274>
   3b5bc:	add	r3, pc, r3
   3b5c0:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5c4:	ldr	r3, [pc, #404]	; 3b760 <flatcc_json_parser_error_string@@Base+0x278>
   3b5c8:	add	r3, pc, r3
   3b5cc:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5d0:	ldr	r3, [pc, #396]	; 3b764 <flatcc_json_parser_error_string@@Base+0x27c>
   3b5d4:	add	r3, pc, r3
   3b5d8:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5dc:	ldr	r3, [pc, #388]	; 3b768 <flatcc_json_parser_error_string@@Base+0x280>
   3b5e0:	add	r3, pc, r3
   3b5e4:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5e8:	ldr	r3, [pc, #380]	; 3b76c <flatcc_json_parser_error_string@@Base+0x284>
   3b5ec:	add	r3, pc, r3
   3b5f0:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b5f4:	ldr	r3, [pc, #372]	; 3b770 <flatcc_json_parser_error_string@@Base+0x288>
   3b5f8:	add	r3, pc, r3
   3b5fc:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b600:	ldr	r3, [pc, #364]	; 3b774 <flatcc_json_parser_error_string@@Base+0x28c>
   3b604:	add	r3, pc, r3
   3b608:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b60c:	ldr	r3, [pc, #356]	; 3b778 <flatcc_json_parser_error_string@@Base+0x290>
   3b610:	add	r3, pc, r3
   3b614:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b618:	ldr	r3, [pc, #348]	; 3b77c <flatcc_json_parser_error_string@@Base+0x294>
   3b61c:	add	r3, pc, r3
   3b620:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b624:	ldr	r3, [pc, #340]	; 3b780 <flatcc_json_parser_error_string@@Base+0x298>
   3b628:	add	r3, pc, r3
   3b62c:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b630:	ldr	r3, [pc, #332]	; 3b784 <flatcc_json_parser_error_string@@Base+0x29c>
   3b634:	add	r3, pc, r3
   3b638:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b63c:	ldr	r3, [pc, #324]	; 3b788 <flatcc_json_parser_error_string@@Base+0x2a0>
   3b640:	add	r3, pc, r3
   3b644:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b648:	ldr	r3, [pc, #316]	; 3b78c <flatcc_json_parser_error_string@@Base+0x2a4>
   3b64c:	add	r3, pc, r3
   3b650:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b654:	ldr	r3, [pc, #308]	; 3b790 <flatcc_json_parser_error_string@@Base+0x2a8>
   3b658:	add	r3, pc, r3
   3b65c:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b660:	ldr	r3, [pc, #300]	; 3b794 <flatcc_json_parser_error_string@@Base+0x2ac>
   3b664:	add	r3, pc, r3
   3b668:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b66c:	ldr	r3, [pc, #292]	; 3b798 <flatcc_json_parser_error_string@@Base+0x2b0>
   3b670:	add	r3, pc, r3
   3b674:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b678:	ldr	r3, [pc, #284]	; 3b79c <flatcc_json_parser_error_string@@Base+0x2b4>
   3b67c:	add	r3, pc, r3
   3b680:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b684:	ldr	r3, [pc, #276]	; 3b7a0 <flatcc_json_parser_error_string@@Base+0x2b8>
   3b688:	add	r3, pc, r3
   3b68c:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b690:	ldr	r3, [pc, #268]	; 3b7a4 <flatcc_json_parser_error_string@@Base+0x2bc>
   3b694:	add	r3, pc, r3
   3b698:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b69c:	ldr	r3, [pc, #260]	; 3b7a8 <flatcc_json_parser_error_string@@Base+0x2c0>
   3b6a0:	add	r3, pc, r3
   3b6a4:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6a8:	ldr	r3, [pc, #252]	; 3b7ac <flatcc_json_parser_error_string@@Base+0x2c4>
   3b6ac:	add	r3, pc, r3
   3b6b0:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6b4:	ldr	r3, [pc, #244]	; 3b7b0 <flatcc_json_parser_error_string@@Base+0x2c8>
   3b6b8:	add	r3, pc, r3
   3b6bc:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6c0:	ldr	r3, [pc, #236]	; 3b7b4 <flatcc_json_parser_error_string@@Base+0x2cc>
   3b6c4:	add	r3, pc, r3
   3b6c8:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6cc:	ldr	r3, [pc, #228]	; 3b7b8 <flatcc_json_parser_error_string@@Base+0x2d0>
   3b6d0:	add	r3, pc, r3
   3b6d4:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6d8:	ldr	r3, [pc, #220]	; 3b7bc <flatcc_json_parser_error_string@@Base+0x2d4>
   3b6dc:	add	r3, pc, r3
   3b6e0:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6e4:	ldr	r3, [pc, #212]	; 3b7c0 <flatcc_json_parser_error_string@@Base+0x2d8>
   3b6e8:	add	r3, pc, r3
   3b6ec:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6f0:	ldr	r3, [pc, #204]	; 3b7c4 <flatcc_json_parser_error_string@@Base+0x2dc>
   3b6f4:	add	r3, pc, r3
   3b6f8:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b6fc:	ldr	r3, [pc, #196]	; 3b7c8 <flatcc_json_parser_error_string@@Base+0x2e0>
   3b700:	add	r3, pc, r3
   3b704:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b708:	ldr	r3, [pc, #188]	; 3b7cc <flatcc_json_parser_error_string@@Base+0x2e4>
   3b70c:	add	r3, pc, r3
   3b710:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b714:	ldr	r3, [pc, #180]	; 3b7d0 <flatcc_json_parser_error_string@@Base+0x2e8>
   3b718:	add	r3, pc, r3
   3b71c:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b720:	ldr	r3, [pc, #172]	; 3b7d4 <flatcc_json_parser_error_string@@Base+0x2ec>
   3b724:	add	r3, pc, r3
   3b728:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b72c:	ldr	r3, [pc, #164]	; 3b7d8 <flatcc_json_parser_error_string@@Base+0x2f0>
   3b730:	add	r3, pc, r3
   3b734:	b	3b740 <flatcc_json_parser_error_string@@Base+0x258>
   3b738:	ldr	r3, [pc, #156]	; 3b7dc <flatcc_json_parser_error_string@@Base+0x2f4>
   3b73c:	add	r3, pc, r3
   3b740:	mov	r0, r3
   3b744:	add	sp, fp, #0
   3b748:	pop	{fp}		; (ldr fp, [sp], #4)
   3b74c:	bx	lr
   3b750:	andeq	r7, r1, r8, lsr #5
   3b754:	muleq	r1, ip, r3
   3b758:	muleq	r1, r4, r3
   3b75c:	muleq	r1, r8, r3
   3b760:	muleq	r1, ip, r3
   3b764:	andeq	r7, r1, r0, lsr #7
   3b768:	andeq	r7, r1, ip, lsr #7
   3b76c:			; <UNDEFINED> instruction: 0x000173b0
   3b770:			; <UNDEFINED> instruction: 0x000173b0
   3b774:			; <UNDEFINED> instruction: 0x000173b0
   3b778:			; <UNDEFINED> instruction: 0x000173b8
   3b77c:	andeq	r7, r1, r0, asr #7
   3b780:	andeq	r7, r1, r4, asr #7
   3b784:	andeq	r7, r1, ip, asr #7
   3b788:	ldrdeq	r7, [r1], -r0
   3b78c:	andeq	r7, r1, r0, ror #7
   3b790:	andeq	r7, r1, r8, ror #7
   3b794:	andeq	r7, r1, ip, ror #7
   3b798:	strdeq	r7, [r1], -r4
   3b79c:	strdeq	r7, [r1], -r8
   3b7a0:	strdeq	r7, [r1], -ip
   3b7a4:	andeq	r7, r1, r4, lsl #8
   3b7a8:	andeq	r7, r1, r8, lsl #8
   3b7ac:	andeq	r7, r1, ip, lsl #8
   3b7b0:	andeq	r7, r1, r4, lsr #8
   3b7b4:	andeq	r7, r1, ip, lsr #8
   3b7b8:	andeq	r7, r1, r0, asr #8
   3b7bc:	andeq	r7, r1, r4, asr r4
   3b7c0:	andeq	r7, r1, r4, ror #8
   3b7c4:	andeq	r7, r1, r4, ror r4
   3b7c8:	andeq	r7, r1, r0, lsl #9
   3b7cc:	muleq	r1, r4, r4
   3b7d0:	andeq	r7, r1, r0, lsr #9
   3b7d4:			; <UNDEFINED> instruction: 0x000174b0
   3b7d8:			; <UNDEFINED> instruction: 0x000174b4
   3b7dc:			; <UNDEFINED> instruction: 0x000174b8

0003b7e0 <flatcc_json_parser_set_error@@Base>:
   3b7e0:	push	{fp}		; (str fp, [sp, #-4]!)
   3b7e4:	add	fp, sp, #0
   3b7e8:	sub	sp, sp, #20
   3b7ec:	str	r0, [fp, #-8]
   3b7f0:	str	r1, [fp, #-12]
   3b7f4:	str	r2, [fp, #-16]
   3b7f8:	str	r3, [fp, #-20]	; 0xffffffec
   3b7fc:	ldr	r3, [fp, #-8]
   3b800:	ldr	r3, [r3, #20]
   3b804:	cmp	r3, #0
   3b808:	bne	3b840 <flatcc_json_parser_set_error@@Base+0x60>
   3b80c:	ldr	r3, [fp, #-8]
   3b810:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b814:	str	r2, [r3, #20]
   3b818:	ldr	r3, [fp, #-8]
   3b81c:	ldr	r3, [r3, #4]
   3b820:	ldr	r2, [fp, #-12]
   3b824:	sub	r3, r2, r3
   3b828:	add	r2, r3, #1
   3b82c:	ldr	r3, [fp, #-8]
   3b830:	str	r2, [r3, #16]
   3b834:	ldr	r3, [fp, #-8]
   3b838:	ldr	r2, [fp, #-12]
   3b83c:	str	r2, [r3, #32]
   3b840:	ldr	r3, [fp, #-16]
   3b844:	mov	r0, r3
   3b848:	add	sp, fp, #0
   3b84c:	pop	{fp}		; (ldr fp, [sp], #4)
   3b850:	bx	lr

0003b854 <flatcc_json_parser_string_part@@Base>:
   3b854:	str	fp, [sp, #-8]!
   3b858:	str	lr, [sp, #4]
   3b85c:	add	fp, sp, #4
   3b860:	sub	sp, sp, #16
   3b864:	str	r0, [fp, #-8]
   3b868:	str	r1, [fp, #-12]
   3b86c:	str	r2, [fp, #-16]
   3b870:	b	3b880 <flatcc_json_parser_string_part@@Base+0x2c>
   3b874:	ldr	r3, [fp, #-12]
   3b878:	add	r3, r3, #1
   3b87c:	str	r3, [fp, #-12]
   3b880:	ldr	r2, [fp, #-12]
   3b884:	ldr	r3, [fp, #-16]
   3b888:	cmp	r2, r3
   3b88c:	beq	3b8c0 <flatcc_json_parser_string_part@@Base+0x6c>
   3b890:	ldr	r3, [fp, #-12]
   3b894:	ldrb	r3, [r3]
   3b898:	cmp	r3, #34	; 0x22
   3b89c:	beq	3b8c0 <flatcc_json_parser_string_part@@Base+0x6c>
   3b8a0:	ldr	r3, [fp, #-12]
   3b8a4:	ldrb	r3, [r3]
   3b8a8:	cmp	r3, #31
   3b8ac:	bls	3b8c0 <flatcc_json_parser_string_part@@Base+0x6c>
   3b8b0:	ldr	r3, [fp, #-12]
   3b8b4:	ldrb	r3, [r3]
   3b8b8:	cmp	r3, #92	; 0x5c
   3b8bc:	bne	3b874 <flatcc_json_parser_string_part@@Base+0x20>
   3b8c0:	ldr	r2, [fp, #-12]
   3b8c4:	ldr	r3, [fp, #-16]
   3b8c8:	cmp	r2, r3
   3b8cc:	bne	3b8ec <flatcc_json_parser_string_part@@Base+0x98>
   3b8d0:	mov	r3, #20
   3b8d4:	ldr	r2, [fp, #-16]
   3b8d8:	ldr	r1, [fp, #-12]
   3b8dc:	ldr	r0, [fp, #-8]
   3b8e0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3b8e4:	mov	r3, r0
   3b8e8:	b	3b934 <flatcc_json_parser_string_part@@Base+0xe0>
   3b8ec:	ldr	r3, [fp, #-12]
   3b8f0:	ldrb	r3, [r3]
   3b8f4:	cmp	r3, #34	; 0x22
   3b8f8:	bne	3b904 <flatcc_json_parser_string_part@@Base+0xb0>
   3b8fc:	ldr	r3, [fp, #-12]
   3b900:	b	3b934 <flatcc_json_parser_string_part@@Base+0xe0>
   3b904:	ldr	r3, [fp, #-12]
   3b908:	ldrb	r3, [r3]
   3b90c:	cmp	r3, #31
   3b910:	bhi	3b930 <flatcc_json_parser_string_part@@Base+0xdc>
   3b914:	mov	r3, #17
   3b918:	ldr	r2, [fp, #-16]
   3b91c:	ldr	r1, [fp, #-12]
   3b920:	ldr	r0, [fp, #-8]
   3b924:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3b928:	mov	r3, r0
   3b92c:	b	3b934 <flatcc_json_parser_string_part@@Base+0xe0>
   3b930:	ldr	r3, [fp, #-12]
   3b934:	mov	r0, r3
   3b938:	sub	sp, fp, #4
   3b93c:	ldr	fp, [sp]
   3b940:	add	sp, sp, #4
   3b944:	pop	{pc}		; (ldr pc, [sp], #4)

0003b948 <flatcc_json_parser_space_ext@@Base>:
   3b948:	str	fp, [sp, #-8]!
   3b94c:	str	lr, [sp, #4]
   3b950:	add	fp, sp, #4
   3b954:	sub	sp, sp, #16
   3b958:	str	r0, [fp, #-8]
   3b95c:	str	r1, [fp, #-12]
   3b960:	str	r2, [fp, #-16]
   3b964:	b	3b974 <flatcc_json_parser_space_ext@@Base+0x2c>
   3b968:	ldr	r3, [fp, #-12]
   3b96c:	add	r3, r3, #1
   3b970:	str	r3, [fp, #-12]
   3b974:	ldr	r2, [fp, #-12]
   3b978:	ldr	r3, [fp, #-16]
   3b97c:	cmp	r2, r3
   3b980:	beq	3bab0 <flatcc_json_parser_space_ext@@Base+0x168>
   3b984:	ldr	r3, [fp, #-12]
   3b988:	ldrb	r3, [r3]
   3b98c:	cmp	r3, #32
   3b990:	beq	3b968 <flatcc_json_parser_space_ext@@Base+0x20>
   3b994:	b	3bab0 <flatcc_json_parser_space_ext@@Base+0x168>
   3b998:	ldr	r3, [fp, #-12]
   3b99c:	ldrb	r3, [r3]
   3b9a0:	sub	r3, r3, #9
   3b9a4:	cmp	r3, #23
   3b9a8:	addls	pc, pc, r3, lsl #2
   3b9ac:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9b0:	b	3ba84 <flatcc_json_parser_space_ext@@Base+0x13c>
   3b9b4:	b	3ba54 <flatcc_json_parser_space_ext@@Base+0x10c>
   3b9b8:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9bc:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9c0:	b	3ba10 <flatcc_json_parser_space_ext@@Base+0xc8>
   3b9c4:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9c8:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9cc:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9d0:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9d4:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9d8:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9dc:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9e0:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9e4:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9e8:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9ec:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9f0:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9f4:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9f8:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3b9fc:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3ba00:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3ba04:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3ba08:	b	3ba94 <flatcc_json_parser_space_ext@@Base+0x14c>
   3ba0c:	b	3b964 <flatcc_json_parser_space_ext@@Base+0x1c>
   3ba10:	ldr	r2, [fp, #-16]
   3ba14:	ldr	r3, [fp, #-12]
   3ba18:	sub	r3, r2, r3
   3ba1c:	cmp	r3, #1
   3ba20:	ble	3ba40 <flatcc_json_parser_space_ext@@Base+0xf8>
   3ba24:	ldr	r3, [fp, #-12]
   3ba28:	add	r3, r3, #1
   3ba2c:	ldrb	r3, [r3]
   3ba30:	cmp	r3, #10
   3ba34:	bne	3ba40 <flatcc_json_parser_space_ext@@Base+0xf8>
   3ba38:	mov	r3, #1
   3ba3c:	b	3ba44 <flatcc_json_parser_space_ext@@Base+0xfc>
   3ba40:	mov	r3, #0
   3ba44:	mov	r2, r3
   3ba48:	ldr	r3, [fp, #-12]
   3ba4c:	add	r3, r3, r2
   3ba50:	str	r3, [fp, #-12]
   3ba54:	ldr	r3, [fp, #-8]
   3ba58:	ldr	r3, [r3, #12]
   3ba5c:	add	r2, r3, #1
   3ba60:	ldr	r3, [fp, #-8]
   3ba64:	str	r2, [r3, #12]
   3ba68:	ldr	r3, [fp, #-12]
   3ba6c:	add	r3, r3, #1
   3ba70:	str	r3, [fp, #-12]
   3ba74:	ldr	r3, [fp, #-8]
   3ba78:	ldr	r2, [fp, #-12]
   3ba7c:	str	r2, [r3, #4]
   3ba80:	b	3bab0 <flatcc_json_parser_space_ext@@Base+0x168>
   3ba84:	ldr	r3, [fp, #-12]
   3ba88:	add	r3, r3, #1
   3ba8c:	str	r3, [fp, #-12]
   3ba90:	b	3bab0 <flatcc_json_parser_space_ext@@Base+0x168>
   3ba94:	mov	r3, #5
   3ba98:	ldr	r2, [fp, #-16]
   3ba9c:	ldr	r1, [fp, #-12]
   3baa0:	ldr	r0, [fp, #-8]
   3baa4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3baa8:	mov	r3, r0
   3baac:	b	3bad4 <flatcc_json_parser_space_ext@@Base+0x18c>
   3bab0:	ldr	r2, [fp, #-12]
   3bab4:	ldr	r3, [fp, #-16]
   3bab8:	cmp	r2, r3
   3babc:	beq	3bad0 <flatcc_json_parser_space_ext@@Base+0x188>
   3bac0:	ldr	r3, [fp, #-12]
   3bac4:	ldrb	r3, [r3]
   3bac8:	cmp	r3, #32
   3bacc:	bls	3b998 <flatcc_json_parser_space_ext@@Base+0x50>
   3bad0:	ldr	r3, [fp, #-12]
   3bad4:	mov	r0, r3
   3bad8:	sub	sp, fp, #4
   3badc:	ldr	fp, [sp]
   3bae0:	add	sp, sp, #4
   3bae4:	pop	{pc}		; (ldr pc, [sp], #4)

0003bae8 <flatcc_json_parser_string_escape@@Base>:
   3bae8:	str	fp, [sp, #-8]!
   3baec:	str	lr, [sp, #4]
   3baf0:	add	fp, sp, #4
   3baf4:	sub	sp, sp, #24
   3baf8:	str	r0, [fp, #-16]
   3bafc:	str	r1, [fp, #-20]	; 0xffffffec
   3bb00:	str	r2, [fp, #-24]	; 0xffffffe8
   3bb04:	str	r3, [fp, #-28]	; 0xffffffe4
   3bb08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bb0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bb10:	sub	r3, r2, r3
   3bb14:	cmp	r3, #1
   3bb18:	ble	3bb2c <flatcc_json_parser_string_escape@@Base+0x44>
   3bb1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bb20:	ldrb	r3, [r3]
   3bb24:	cmp	r3, #92	; 0x5c
   3bb28:	beq	3bb54 <flatcc_json_parser_string_escape@@Base+0x6c>
   3bb2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bb30:	mov	r2, #0
   3bb34:	strb	r2, [r3]
   3bb38:	mov	r3, #18
   3bb3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bb40:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bb44:	ldr	r0, [fp, #-16]
   3bb48:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3bb4c:	mov	r3, r0
   3bb50:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3bb54:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bb58:	add	r3, r3, #1
   3bb5c:	ldrb	r3, [r3]
   3bb60:	sub	r3, r3, #34	; 0x22
   3bb64:	cmp	r3, #86	; 0x56
   3bb68:	addls	pc, pc, r3, lsl #2
   3bb6c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb70:	b	3c40c <flatcc_json_parser_string_escape@@Base+0x924>
   3bb74:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb78:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb7c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb80:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb84:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb88:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb8c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb90:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb94:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb98:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bb9c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bba0:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bba4:	b	3c45c <flatcc_json_parser_string_escape@@Base+0x974>
   3bba8:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbac:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbb0:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbb4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbb8:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbbc:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbc0:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbc4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbc8:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbcc:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbd0:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbd4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbd8:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbdc:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbe0:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbe4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbe8:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbec:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbf0:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbf4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbf8:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bbfc:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc00:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc04:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc08:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc0c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc10:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc14:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc18:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc1c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc20:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc24:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc28:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc2c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc30:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc34:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc38:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc3c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc40:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc44:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc48:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc4c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc50:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc54:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc58:	b	3c434 <flatcc_json_parser_string_escape@@Base+0x94c>
   3bc5c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc60:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc64:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc68:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc6c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc70:	b	3c3bc <flatcc_json_parser_string_escape@@Base+0x8d4>
   3bc74:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc78:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc7c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc80:	b	3c3e4 <flatcc_json_parser_string_escape@@Base+0x8fc>
   3bc84:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc88:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc8c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc90:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc94:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc98:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bc9c:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bca0:	b	3c36c <flatcc_json_parser_string_escape@@Base+0x884>
   3bca4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bca8:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bcac:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bcb0:	b	3c394 <flatcc_json_parser_string_escape@@Base+0x8ac>
   3bcb4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bcb8:	b	3c344 <flatcc_json_parser_string_escape@@Base+0x85c>
   3bcbc:	b	3bea8 <flatcc_json_parser_string_escape@@Base+0x3c0>
   3bcc0:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bcc4:	b	3c484 <flatcc_json_parser_string_escape@@Base+0x99c>
   3bcc8:	b	3bccc <flatcc_json_parser_string_escape@@Base+0x1e4>
   3bccc:	mov	r3, #0
   3bcd0:	strb	r3, [fp, #-5]
   3bcd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bcd8:	mov	r2, #1
   3bcdc:	strb	r2, [r3]
   3bce0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bce8:	sub	r3, r2, r3
   3bcec:	cmp	r3, #3
   3bcf0:	bgt	3bd1c <flatcc_json_parser_string_escape@@Base+0x234>
   3bcf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bcf8:	mov	r2, #0
   3bcfc:	strb	r2, [r3]
   3bd00:	mov	r3, #18
   3bd04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bd08:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bd0c:	ldr	r0, [fp, #-16]
   3bd10:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3bd14:	mov	r3, r0
   3bd18:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3bd1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bd20:	ldrb	r3, [r3, #2]
   3bd24:	strb	r3, [fp, #-9]
   3bd28:	ldrb	r3, [fp, #-9]
   3bd2c:	cmp	r3, #47	; 0x2f
   3bd30:	bls	3bd64 <flatcc_json_parser_string_escape@@Base+0x27c>
   3bd34:	ldrb	r3, [fp, #-9]
   3bd38:	cmp	r3, #57	; 0x39
   3bd3c:	bhi	3bd64 <flatcc_json_parser_string_escape@@Base+0x27c>
   3bd40:	ldrb	r3, [fp, #-9]
   3bd44:	sub	r3, r3, #48	; 0x30
   3bd48:	lsl	r3, r3, #4
   3bd4c:	sxtb	r2, r3
   3bd50:	ldrsb	r3, [fp, #-5]
   3bd54:	orr	r3, r2, r3
   3bd58:	sxtb	r3, r3
   3bd5c:	strb	r3, [fp, #-5]
   3bd60:	b	3bdd4 <flatcc_json_parser_string_escape@@Base+0x2ec>
   3bd64:	ldrb	r3, [fp, #-9]
   3bd68:	orr	r3, r3, #32
   3bd6c:	strb	r3, [fp, #-9]
   3bd70:	ldrb	r3, [fp, #-9]
   3bd74:	cmp	r3, #96	; 0x60
   3bd78:	bls	3bdac <flatcc_json_parser_string_escape@@Base+0x2c4>
   3bd7c:	ldrb	r3, [fp, #-9]
   3bd80:	cmp	r3, #102	; 0x66
   3bd84:	bhi	3bdac <flatcc_json_parser_string_escape@@Base+0x2c4>
   3bd88:	ldrb	r3, [fp, #-9]
   3bd8c:	sub	r3, r3, #87	; 0x57
   3bd90:	lsl	r3, r3, #4
   3bd94:	sxtb	r2, r3
   3bd98:	ldrsb	r3, [fp, #-5]
   3bd9c:	orr	r3, r2, r3
   3bda0:	sxtb	r3, r3
   3bda4:	strb	r3, [fp, #-5]
   3bda8:	b	3bdd4 <flatcc_json_parser_string_escape@@Base+0x2ec>
   3bdac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bdb0:	mov	r2, #0
   3bdb4:	strb	r2, [r3]
   3bdb8:	mov	r3, #18
   3bdbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bdc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bdc4:	ldr	r0, [fp, #-16]
   3bdc8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3bdcc:	mov	r3, r0
   3bdd0:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3bdd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bdd8:	ldrb	r3, [r3, #3]
   3bddc:	strb	r3, [fp, #-9]
   3bde0:	ldrb	r3, [fp, #-9]
   3bde4:	cmp	r3, #47	; 0x2f
   3bde8:	bls	3be1c <flatcc_json_parser_string_escape@@Base+0x334>
   3bdec:	ldrb	r3, [fp, #-9]
   3bdf0:	cmp	r3, #57	; 0x39
   3bdf4:	bhi	3be1c <flatcc_json_parser_string_escape@@Base+0x334>
   3bdf8:	ldrb	r3, [fp, #-9]
   3bdfc:	sub	r3, r3, #48	; 0x30
   3be00:	uxtb	r3, r3
   3be04:	sxtb	r2, r3
   3be08:	ldrsb	r3, [fp, #-5]
   3be0c:	orr	r3, r2, r3
   3be10:	sxtb	r3, r3
   3be14:	strb	r3, [fp, #-5]
   3be18:	b	3be8c <flatcc_json_parser_string_escape@@Base+0x3a4>
   3be1c:	ldrb	r3, [fp, #-9]
   3be20:	orr	r3, r3, #32
   3be24:	strb	r3, [fp, #-9]
   3be28:	ldrb	r3, [fp, #-9]
   3be2c:	cmp	r3, #96	; 0x60
   3be30:	bls	3be64 <flatcc_json_parser_string_escape@@Base+0x37c>
   3be34:	ldrb	r3, [fp, #-9]
   3be38:	cmp	r3, #102	; 0x66
   3be3c:	bhi	3be64 <flatcc_json_parser_string_escape@@Base+0x37c>
   3be40:	ldrb	r3, [fp, #-9]
   3be44:	sub	r3, r3, #87	; 0x57
   3be48:	uxtb	r3, r3
   3be4c:	sxtb	r2, r3
   3be50:	ldrsb	r3, [fp, #-5]
   3be54:	orr	r3, r2, r3
   3be58:	sxtb	r3, r3
   3be5c:	strb	r3, [fp, #-5]
   3be60:	b	3be8c <flatcc_json_parser_string_escape@@Base+0x3a4>
   3be64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3be68:	mov	r2, #0
   3be6c:	strb	r2, [r3]
   3be70:	mov	r3, #18
   3be74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3be78:	ldr	r1, [fp, #-20]	; 0xffffffec
   3be7c:	ldr	r0, [fp, #-16]
   3be80:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3be84:	mov	r3, r0
   3be88:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3be8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3be90:	add	r3, r3, #1
   3be94:	ldrb	r2, [fp, #-5]
   3be98:	strb	r2, [r3]
   3be9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bea0:	add	r3, r3, #4
   3bea4:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3bea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3beac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3beb0:	sub	r3, r2, r3
   3beb4:	cmp	r3, #5
   3beb8:	bgt	3bee4 <flatcc_json_parser_string_escape@@Base+0x3fc>
   3bebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bec0:	mov	r2, #0
   3bec4:	strb	r2, [r3]
   3bec8:	mov	r3, #18
   3becc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bed4:	ldr	r0, [fp, #-16]
   3bed8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3bedc:	mov	r3, r0
   3bee0:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3bee4:	mov	r3, #0
   3bee8:	strh	r3, [fp, #-8]
   3beec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bef0:	ldrb	r3, [r3, #2]
   3bef4:	strb	r3, [fp, #-9]
   3bef8:	ldrb	r3, [fp, #-9]
   3befc:	cmp	r3, #47	; 0x2f
   3bf00:	bls	3bf30 <flatcc_json_parser_string_escape@@Base+0x448>
   3bf04:	ldrb	r3, [fp, #-9]
   3bf08:	cmp	r3, #57	; 0x39
   3bf0c:	bhi	3bf30 <flatcc_json_parser_string_escape@@Base+0x448>
   3bf10:	ldrb	r3, [fp, #-9]
   3bf14:	uxth	r3, r3
   3bf18:	sub	r3, r3, #48	; 0x30
   3bf1c:	strh	r3, [fp, #-12]
   3bf20:	ldrh	r3, [fp, #-12]
   3bf24:	lsl	r3, r3, #12
   3bf28:	strh	r3, [fp, #-8]
   3bf2c:	b	3bfac <flatcc_json_parser_string_escape@@Base+0x4c4>
   3bf30:	ldrb	r3, [fp, #-9]
   3bf34:	orr	r3, r3, #32
   3bf38:	strb	r3, [fp, #-9]
   3bf3c:	ldrb	r3, [fp, #-9]
   3bf40:	cmp	r3, #96	; 0x60
   3bf44:	bls	3bf84 <flatcc_json_parser_string_escape@@Base+0x49c>
   3bf48:	ldrb	r3, [fp, #-9]
   3bf4c:	cmp	r3, #102	; 0x66
   3bf50:	bhi	3bf84 <flatcc_json_parser_string_escape@@Base+0x49c>
   3bf54:	ldrb	r3, [fp, #-9]
   3bf58:	uxth	r3, r3
   3bf5c:	sub	r3, r3, #87	; 0x57
   3bf60:	strh	r3, [fp, #-12]
   3bf64:	ldrh	r3, [fp, #-12]
   3bf68:	lsl	r3, r3, #12
   3bf6c:	sxth	r2, r3
   3bf70:	ldrsh	r3, [fp, #-8]
   3bf74:	orr	r3, r2, r3
   3bf78:	sxth	r3, r3
   3bf7c:	strh	r3, [fp, #-8]
   3bf80:	b	3bfac <flatcc_json_parser_string_escape@@Base+0x4c4>
   3bf84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bf88:	mov	r2, #0
   3bf8c:	strb	r2, [r3]
   3bf90:	mov	r3, #18
   3bf94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bf98:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bf9c:	ldr	r0, [fp, #-16]
   3bfa0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3bfa4:	mov	r3, r0
   3bfa8:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3bfac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bfb0:	ldrb	r3, [r3, #3]
   3bfb4:	strb	r3, [fp, #-9]
   3bfb8:	ldrb	r3, [fp, #-9]
   3bfbc:	cmp	r3, #47	; 0x2f
   3bfc0:	bls	3c000 <flatcc_json_parser_string_escape@@Base+0x518>
   3bfc4:	ldrb	r3, [fp, #-9]
   3bfc8:	cmp	r3, #57	; 0x39
   3bfcc:	bhi	3c000 <flatcc_json_parser_string_escape@@Base+0x518>
   3bfd0:	ldrb	r3, [fp, #-9]
   3bfd4:	uxth	r3, r3
   3bfd8:	sub	r3, r3, #48	; 0x30
   3bfdc:	strh	r3, [fp, #-12]
   3bfe0:	ldrh	r3, [fp, #-12]
   3bfe4:	lsl	r3, r3, #8
   3bfe8:	sxth	r2, r3
   3bfec:	ldrsh	r3, [fp, #-8]
   3bff0:	orr	r3, r2, r3
   3bff4:	sxth	r3, r3
   3bff8:	strh	r3, [fp, #-8]
   3bffc:	b	3c07c <flatcc_json_parser_string_escape@@Base+0x594>
   3c000:	ldrb	r3, [fp, #-9]
   3c004:	orr	r3, r3, #32
   3c008:	strb	r3, [fp, #-9]
   3c00c:	ldrb	r3, [fp, #-9]
   3c010:	cmp	r3, #96	; 0x60
   3c014:	bls	3c054 <flatcc_json_parser_string_escape@@Base+0x56c>
   3c018:	ldrb	r3, [fp, #-9]
   3c01c:	cmp	r3, #102	; 0x66
   3c020:	bhi	3c054 <flatcc_json_parser_string_escape@@Base+0x56c>
   3c024:	ldrb	r3, [fp, #-9]
   3c028:	uxth	r3, r3
   3c02c:	sub	r3, r3, #87	; 0x57
   3c030:	strh	r3, [fp, #-12]
   3c034:	ldrh	r3, [fp, #-12]
   3c038:	lsl	r3, r3, #8
   3c03c:	sxth	r2, r3
   3c040:	ldrsh	r3, [fp, #-8]
   3c044:	orr	r3, r2, r3
   3c048:	sxth	r3, r3
   3c04c:	strh	r3, [fp, #-8]
   3c050:	b	3c07c <flatcc_json_parser_string_escape@@Base+0x594>
   3c054:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c058:	mov	r2, #0
   3c05c:	strb	r2, [r3]
   3c060:	mov	r3, #18
   3c064:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c068:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c06c:	ldr	r0, [fp, #-16]
   3c070:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c074:	mov	r3, r0
   3c078:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c07c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c080:	ldrb	r3, [r3, #4]
   3c084:	strb	r3, [fp, #-9]
   3c088:	ldrb	r3, [fp, #-9]
   3c08c:	cmp	r3, #47	; 0x2f
   3c090:	bls	3c0d0 <flatcc_json_parser_string_escape@@Base+0x5e8>
   3c094:	ldrb	r3, [fp, #-9]
   3c098:	cmp	r3, #57	; 0x39
   3c09c:	bhi	3c0d0 <flatcc_json_parser_string_escape@@Base+0x5e8>
   3c0a0:	ldrb	r3, [fp, #-9]
   3c0a4:	uxth	r3, r3
   3c0a8:	sub	r3, r3, #48	; 0x30
   3c0ac:	strh	r3, [fp, #-12]
   3c0b0:	ldrh	r3, [fp, #-12]
   3c0b4:	lsl	r3, r3, #4
   3c0b8:	sxth	r2, r3
   3c0bc:	ldrsh	r3, [fp, #-8]
   3c0c0:	orr	r3, r2, r3
   3c0c4:	sxth	r3, r3
   3c0c8:	strh	r3, [fp, #-8]
   3c0cc:	b	3c14c <flatcc_json_parser_string_escape@@Base+0x664>
   3c0d0:	ldrb	r3, [fp, #-9]
   3c0d4:	orr	r3, r3, #32
   3c0d8:	strb	r3, [fp, #-9]
   3c0dc:	ldrb	r3, [fp, #-9]
   3c0e0:	cmp	r3, #96	; 0x60
   3c0e4:	bls	3c124 <flatcc_json_parser_string_escape@@Base+0x63c>
   3c0e8:	ldrb	r3, [fp, #-9]
   3c0ec:	cmp	r3, #102	; 0x66
   3c0f0:	bhi	3c124 <flatcc_json_parser_string_escape@@Base+0x63c>
   3c0f4:	ldrb	r3, [fp, #-9]
   3c0f8:	uxth	r3, r3
   3c0fc:	sub	r3, r3, #87	; 0x57
   3c100:	strh	r3, [fp, #-12]
   3c104:	ldrh	r3, [fp, #-12]
   3c108:	lsl	r3, r3, #4
   3c10c:	sxth	r2, r3
   3c110:	ldrsh	r3, [fp, #-8]
   3c114:	orr	r3, r2, r3
   3c118:	sxth	r3, r3
   3c11c:	strh	r3, [fp, #-8]
   3c120:	b	3c14c <flatcc_json_parser_string_escape@@Base+0x664>
   3c124:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c128:	mov	r2, #0
   3c12c:	strb	r2, [r3]
   3c130:	mov	r3, #18
   3c134:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c138:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c13c:	ldr	r0, [fp, #-16]
   3c140:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c144:	mov	r3, r0
   3c148:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c14c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c150:	ldrb	r3, [r3, #5]
   3c154:	strb	r3, [fp, #-9]
   3c158:	ldrb	r3, [fp, #-9]
   3c15c:	cmp	r3, #47	; 0x2f
   3c160:	bls	3c194 <flatcc_json_parser_string_escape@@Base+0x6ac>
   3c164:	ldrb	r3, [fp, #-9]
   3c168:	cmp	r3, #57	; 0x39
   3c16c:	bhi	3c194 <flatcc_json_parser_string_escape@@Base+0x6ac>
   3c170:	ldrb	r3, [fp, #-9]
   3c174:	uxth	r3, r3
   3c178:	sub	r3, r3, #48	; 0x30
   3c17c:	strh	r3, [fp, #-12]
   3c180:	ldrh	r2, [fp, #-8]
   3c184:	ldrh	r3, [fp, #-12]
   3c188:	orr	r3, r2, r3
   3c18c:	strh	r3, [fp, #-8]
   3c190:	b	3c204 <flatcc_json_parser_string_escape@@Base+0x71c>
   3c194:	ldrb	r3, [fp, #-9]
   3c198:	orr	r3, r3, #32
   3c19c:	strb	r3, [fp, #-9]
   3c1a0:	ldrb	r3, [fp, #-9]
   3c1a4:	cmp	r3, #96	; 0x60
   3c1a8:	bls	3c1dc <flatcc_json_parser_string_escape@@Base+0x6f4>
   3c1ac:	ldrb	r3, [fp, #-9]
   3c1b0:	cmp	r3, #102	; 0x66
   3c1b4:	bhi	3c1dc <flatcc_json_parser_string_escape@@Base+0x6f4>
   3c1b8:	ldrb	r3, [fp, #-9]
   3c1bc:	uxth	r3, r3
   3c1c0:	sub	r3, r3, #87	; 0x57
   3c1c4:	strh	r3, [fp, #-12]
   3c1c8:	ldrh	r2, [fp, #-8]
   3c1cc:	ldrh	r3, [fp, #-12]
   3c1d0:	orr	r3, r2, r3
   3c1d4:	strh	r3, [fp, #-8]
   3c1d8:	b	3c204 <flatcc_json_parser_string_escape@@Base+0x71c>
   3c1dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c1e0:	mov	r2, #0
   3c1e4:	strb	r2, [r3]
   3c1e8:	mov	r3, #18
   3c1ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c1f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c1f4:	ldr	r0, [fp, #-16]
   3c1f8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c1fc:	mov	r3, r0
   3c200:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c204:	ldrh	r3, [fp, #-8]
   3c208:	cmp	r3, #127	; 0x7f
   3c20c:	bhi	3c234 <flatcc_json_parser_string_escape@@Base+0x74c>
   3c210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c214:	mov	r2, #1
   3c218:	strb	r2, [r3]
   3c21c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c220:	add	r3, r3, #1
   3c224:	ldrh	r2, [fp, #-8]
   3c228:	uxtb	r2, r2
   3c22c:	strb	r2, [r3]
   3c230:	b	3c338 <flatcc_json_parser_string_escape@@Base+0x850>
   3c234:	ldrh	r3, [fp, #-8]
   3c238:	cmp	r3, #2048	; 0x800
   3c23c:	bcs	3c2a4 <flatcc_json_parser_string_escape@@Base+0x7bc>
   3c240:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c244:	mov	r2, #2
   3c248:	strb	r2, [r3]
   3c24c:	ldrh	r3, [fp, #-8]
   3c250:	lsr	r3, r3, #6
   3c254:	uxth	r3, r3
   3c258:	uxtb	r3, r3
   3c25c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c260:	add	r2, r2, #1
   3c264:	mvn	r3, r3, lsl #26
   3c268:	mvn	r3, r3, lsr #26
   3c26c:	uxtb	r3, r3
   3c270:	strb	r3, [r2]
   3c274:	ldrh	r3, [fp, #-8]
   3c278:	sxtb	r3, r3
   3c27c:	and	r3, r3, #63	; 0x3f
   3c280:	sxtb	r3, r3
   3c284:	mvn	r3, r3, lsl #25
   3c288:	mvn	r3, r3, lsr #25
   3c28c:	sxtb	r2, r3
   3c290:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c294:	add	r3, r3, #2
   3c298:	uxtb	r2, r2
   3c29c:	strb	r2, [r3]
   3c2a0:	b	3c338 <flatcc_json_parser_string_escape@@Base+0x850>
   3c2a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c2a8:	mov	r2, #3
   3c2ac:	strb	r2, [r3]
   3c2b0:	ldrh	r3, [fp, #-8]
   3c2b4:	lsr	r3, r3, #12
   3c2b8:	uxth	r3, r3
   3c2bc:	uxtb	r3, r3
   3c2c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c2c4:	add	r2, r2, #1
   3c2c8:	mvn	r3, r3, lsl #27
   3c2cc:	mvn	r3, r3, lsr #27
   3c2d0:	uxtb	r3, r3
   3c2d4:	strb	r3, [r2]
   3c2d8:	ldrh	r3, [fp, #-8]
   3c2dc:	lsr	r3, r3, #6
   3c2e0:	uxth	r3, r3
   3c2e4:	sxtb	r3, r3
   3c2e8:	and	r3, r3, #63	; 0x3f
   3c2ec:	sxtb	r3, r3
   3c2f0:	mvn	r3, r3, lsl #25
   3c2f4:	mvn	r3, r3, lsr #25
   3c2f8:	sxtb	r2, r3
   3c2fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c300:	add	r3, r3, #2
   3c304:	uxtb	r2, r2
   3c308:	strb	r2, [r3]
   3c30c:	ldrh	r3, [fp, #-8]
   3c310:	sxtb	r3, r3
   3c314:	and	r3, r3, #63	; 0x3f
   3c318:	sxtb	r3, r3
   3c31c:	mvn	r3, r3, lsl #25
   3c320:	mvn	r3, r3, lsr #25
   3c324:	sxtb	r2, r3
   3c328:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c32c:	add	r3, r3, #3
   3c330:	uxtb	r2, r2
   3c334:	strb	r2, [r3]
   3c338:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c33c:	add	r3, r3, #6
   3c340:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c344:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c348:	mov	r2, #1
   3c34c:	strb	r2, [r3]
   3c350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c354:	add	r3, r3, #1
   3c358:	mov	r2, #9
   3c35c:	strb	r2, [r3]
   3c360:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c364:	add	r3, r3, #2
   3c368:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c36c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c370:	mov	r2, #1
   3c374:	strb	r2, [r3]
   3c378:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c37c:	add	r3, r3, #1
   3c380:	mov	r2, #10
   3c384:	strb	r2, [r3]
   3c388:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c38c:	add	r3, r3, #2
   3c390:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c394:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c398:	mov	r2, #1
   3c39c:	strb	r2, [r3]
   3c3a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c3a4:	add	r3, r3, #1
   3c3a8:	mov	r2, #13
   3c3ac:	strb	r2, [r3]
   3c3b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c3b4:	add	r3, r3, #2
   3c3b8:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c3bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c3c0:	mov	r2, #1
   3c3c4:	strb	r2, [r3]
   3c3c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c3cc:	add	r3, r3, #1
   3c3d0:	mov	r2, #8
   3c3d4:	strb	r2, [r3]
   3c3d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c3dc:	add	r3, r3, #2
   3c3e0:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c3e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c3e8:	mov	r2, #1
   3c3ec:	strb	r2, [r3]
   3c3f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c3f4:	add	r3, r3, #1
   3c3f8:	mov	r2, #12
   3c3fc:	strb	r2, [r3]
   3c400:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c404:	add	r3, r3, #2
   3c408:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c40c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c410:	mov	r2, #1
   3c414:	strb	r2, [r3]
   3c418:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c41c:	add	r3, r3, #1
   3c420:	mov	r2, #34	; 0x22
   3c424:	strb	r2, [r3]
   3c428:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c42c:	add	r3, r3, #2
   3c430:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c438:	mov	r2, #1
   3c43c:	strb	r2, [r3]
   3c440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c444:	add	r3, r3, #1
   3c448:	mov	r2, #92	; 0x5c
   3c44c:	strb	r2, [r3]
   3c450:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c454:	add	r3, r3, #2
   3c458:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c45c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c460:	mov	r2, #1
   3c464:	strb	r2, [r3]
   3c468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c46c:	add	r3, r3, #1
   3c470:	mov	r2, #47	; 0x2f
   3c474:	strb	r2, [r3]
   3c478:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c47c:	add	r3, r3, #2
   3c480:	b	3c4a8 <flatcc_json_parser_string_escape@@Base+0x9c0>
   3c484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c488:	mov	r2, #0
   3c48c:	strb	r2, [r3]
   3c490:	mov	r3, #18
   3c494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c498:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c49c:	ldr	r0, [fp, #-16]
   3c4a0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c4a4:	mov	r3, r0
   3c4a8:	mov	r0, r3
   3c4ac:	sub	sp, fp, #4
   3c4b0:	ldr	fp, [sp]
   3c4b4:	add	sp, sp, #4
   3c4b8:	pop	{pc}		; (ldr pc, [sp], #4)

0003c4bc <flatcc_json_parser_skip_constant@@Base>:
   3c4bc:	str	fp, [sp, #-8]!
   3c4c0:	str	lr, [sp, #4]
   3c4c4:	add	fp, sp, #4
   3c4c8:	sub	sp, sp, #24
   3c4cc:	str	r0, [fp, #-16]
   3c4d0:	str	r1, [fp, #-20]	; 0xffffffec
   3c4d4:	str	r2, [fp, #-24]	; 0xffffffe8
   3c4d8:	b	3c59c <flatcc_json_parser_skip_constant@@Base+0xe0>
   3c4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c4e0:	ldrb	r3, [r3]
   3c4e4:	strb	r3, [fp, #-5]
   3c4e8:	ldrsb	r3, [fp, #-5]
   3c4ec:	cmp	r3, #0
   3c4f0:	blt	3c524 <flatcc_json_parser_skip_constant@@Base+0x68>
   3c4f4:	ldrb	r3, [fp, #-5]
   3c4f8:	cmp	r3, #95	; 0x5f
   3c4fc:	beq	3c524 <flatcc_json_parser_skip_constant@@Base+0x68>
   3c500:	ldrb	r3, [fp, #-5]
   3c504:	cmp	r3, #47	; 0x2f
   3c508:	bls	3c518 <flatcc_json_parser_skip_constant@@Base+0x5c>
   3c50c:	ldrb	r3, [fp, #-5]
   3c510:	cmp	r3, #57	; 0x39
   3c514:	bls	3c524 <flatcc_json_parser_skip_constant@@Base+0x68>
   3c518:	ldrb	r3, [fp, #-5]
   3c51c:	cmp	r3, #46	; 0x2e
   3c520:	bne	3c534 <flatcc_json_parser_skip_constant@@Base+0x78>
   3c524:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c528:	add	r3, r3, #1
   3c52c:	str	r3, [fp, #-20]	; 0xffffffec
   3c530:	b	3c59c <flatcc_json_parser_skip_constant@@Base+0xe0>
   3c534:	ldrb	r3, [fp, #-5]
   3c538:	orr	r3, r3, #32
   3c53c:	strb	r3, [fp, #-5]
   3c540:	ldrb	r3, [fp, #-5]
   3c544:	cmp	r3, #96	; 0x60
   3c548:	bls	3c568 <flatcc_json_parser_skip_constant@@Base+0xac>
   3c54c:	ldrb	r3, [fp, #-5]
   3c550:	cmp	r3, #122	; 0x7a
   3c554:	bhi	3c568 <flatcc_json_parser_skip_constant@@Base+0xac>
   3c558:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c55c:	add	r3, r3, #1
   3c560:	str	r3, [fp, #-20]	; 0xffffffec
   3c564:	b	3c59c <flatcc_json_parser_skip_constant@@Base+0xe0>
   3c568:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c56c:	str	r3, [fp, #-12]
   3c570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c574:	ldr	r1, [fp, #-12]
   3c578:	ldr	r0, [fp, #-16]
   3c57c:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3c580:	str	r0, [fp, #-20]	; 0xffffffec
   3c584:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c588:	ldr	r3, [fp, #-12]
   3c58c:	cmp	r2, r3
   3c590:	bne	3c59c <flatcc_json_parser_skip_constant@@Base+0xe0>
   3c594:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c598:	b	3c5b0 <flatcc_json_parser_skip_constant@@Base+0xf4>
   3c59c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c5a4:	cmp	r2, r3
   3c5a8:	bne	3c4dc <flatcc_json_parser_skip_constant@@Base+0x20>
   3c5ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c5b0:	mov	r0, r3
   3c5b4:	sub	sp, fp, #4
   3c5b8:	ldr	fp, [sp]
   3c5bc:	add	sp, sp, #4
   3c5c0:	pop	{pc}		; (ldr pc, [sp], #4)

0003c5c4 <flatcc_json_parser_match_constant@@Base>:
   3c5c4:	str	fp, [sp, #-8]!
   3c5c8:	str	lr, [sp, #4]
   3c5cc:	add	fp, sp, #4
   3c5d0:	sub	sp, sp, #24
   3c5d4:	str	r0, [fp, #-16]
   3c5d8:	str	r1, [fp, #-20]	; 0xffffffec
   3c5dc:	str	r2, [fp, #-24]	; 0xffffffe8
   3c5e0:	str	r3, [fp, #-28]	; 0xffffffe4
   3c5e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c5e8:	str	r3, [fp, #-8]
   3c5ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c5f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c5f4:	add	r3, r2, r3
   3c5f8:	str	r3, [fp, #-12]
   3c5fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c600:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c604:	sub	r3, r2, r3
   3c608:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c60c:	cmp	r2, r3
   3c610:	blt	3c628 <flatcc_json_parser_match_constant@@Base+0x64>
   3c614:	ldr	r3, [fp, #4]
   3c618:	mov	r2, #0
   3c61c:	str	r2, [r3]
   3c620:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c624:	b	3c744 <flatcc_json_parser_match_constant@@Base+0x180>
   3c628:	ldr	r3, [fp, #-12]
   3c62c:	str	r3, [fp, #-20]	; 0xffffffec
   3c630:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c634:	ldrb	r3, [r3]
   3c638:	cmp	r3, #32
   3c63c:	bne	3c6c4 <flatcc_json_parser_match_constant@@Base+0x100>
   3c640:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c644:	add	r3, r3, #1
   3c648:	str	r3, [fp, #-20]	; 0xffffffec
   3c64c:	b	3c65c <flatcc_json_parser_match_constant@@Base+0x98>
   3c650:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c654:	add	r3, r3, #1
   3c658:	str	r3, [fp, #-20]	; 0xffffffec
   3c65c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c664:	cmp	r2, r3
   3c668:	beq	3c67c <flatcc_json_parser_match_constant@@Base+0xb8>
   3c66c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c670:	ldrb	r3, [r3]
   3c674:	cmp	r3, #32
   3c678:	beq	3c650 <flatcc_json_parser_match_constant@@Base+0x8c>
   3c67c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c684:	cmp	r2, r3
   3c688:	bne	3c6a0 <flatcc_json_parser_match_constant@@Base+0xdc>
   3c68c:	ldr	r3, [fp, #4]
   3c690:	mov	r2, #0
   3c694:	str	r2, [r3]
   3c698:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c69c:	b	3c744 <flatcc_json_parser_match_constant@@Base+0x180>
   3c6a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c6a4:	ldrb	r3, [r3]
   3c6a8:	cmp	r3, #34	; 0x22
   3c6ac:	beq	3c6c4 <flatcc_json_parser_match_constant@@Base+0x100>
   3c6b0:	ldr	r3, [fp, #4]
   3c6b4:	mov	r2, #1
   3c6b8:	str	r2, [r3]
   3c6bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c6c0:	b	3c744 <flatcc_json_parser_match_constant@@Base+0x180>
   3c6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c6c8:	ldrb	r3, [r3]
   3c6cc:	cmp	r3, #34	; 0x22
   3c6d0:	beq	3c704 <flatcc_json_parser_match_constant@@Base+0x140>
   3c6d4:	cmp	r3, #92	; 0x5c
   3c6d8:	bne	3c734 <flatcc_json_parser_match_constant@@Base+0x170>
   3c6dc:	ldr	r3, [fp, #4]
   3c6e0:	mov	r2, #0
   3c6e4:	str	r2, [r3]
   3c6e8:	mov	r3, #18
   3c6ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c6f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c6f4:	ldr	r0, [fp, #-16]
   3c6f8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c6fc:	mov	r3, r0
   3c700:	b	3c744 <flatcc_json_parser_match_constant@@Base+0x180>
   3c704:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c708:	add	r3, r3, #1
   3c70c:	mov	r2, #0
   3c710:	mov	r1, r3
   3c714:	ldr	r0, [fp, #-16]
   3c718:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3c71c:	str	r0, [fp, #-20]	; 0xffffffec
   3c720:	ldr	r3, [fp, #4]
   3c724:	mov	r2, #0
   3c728:	str	r2, [r3]
   3c72c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c730:	b	3c744 <flatcc_json_parser_match_constant@@Base+0x180>
   3c734:	ldr	r3, [fp, #4]
   3c738:	mov	r2, #0
   3c73c:	str	r2, [r3]
   3c740:	ldr	r3, [fp, #-8]
   3c744:	mov	r0, r3
   3c748:	sub	sp, fp, #4
   3c74c:	ldr	fp, [sp]
   3c750:	add	sp, sp, #4
   3c754:	pop	{pc}		; (ldr pc, [sp], #4)

0003c758 <flatcc_json_parser_unmatched_symbol@@Base>:
   3c758:	str	fp, [sp, #-8]!
   3c75c:	str	lr, [sp, #4]
   3c760:	add	fp, sp, #4
   3c764:	sub	sp, sp, #16
   3c768:	str	r0, [fp, #-8]
   3c76c:	str	r1, [fp, #-12]
   3c770:	str	r2, [fp, #-16]
   3c774:	ldr	r3, [fp, #-8]
   3c778:	ldr	r3, [r3, #8]
   3c77c:	and	r3, r3, #1
   3c780:	cmp	r3, #0
   3c784:	beq	3c828 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
   3c788:	ldr	r2, [fp, #-16]
   3c78c:	ldr	r1, [fp, #-12]
   3c790:	ldr	r0, [fp, #-8]
   3c794:	bl	366a8 <flatcc_verify_union_vector_field@@Base+0x56c>
   3c798:	str	r0, [fp, #-12]
   3c79c:	ldr	r2, [fp, #-16]
   3c7a0:	ldr	r1, [fp, #-12]
   3c7a4:	ldr	r0, [fp, #-8]
   3c7a8:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3c7ac:	str	r0, [fp, #-12]
   3c7b0:	ldr	r2, [fp, #-12]
   3c7b4:	ldr	r3, [fp, #-16]
   3c7b8:	cmp	r2, r3
   3c7bc:	beq	3c80c <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   3c7c0:	ldr	r3, [fp, #-12]
   3c7c4:	ldrb	r3, [r3]
   3c7c8:	cmp	r3, #58	; 0x3a
   3c7cc:	bne	3c80c <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   3c7d0:	ldr	r3, [fp, #-12]
   3c7d4:	add	r3, r3, #1
   3c7d8:	str	r3, [fp, #-12]
   3c7dc:	ldr	r2, [fp, #-16]
   3c7e0:	ldr	r1, [fp, #-12]
   3c7e4:	ldr	r0, [fp, #-8]
   3c7e8:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3c7ec:	str	r0, [fp, #-12]
   3c7f0:	nop	{0}
   3c7f4:	ldr	r2, [fp, #-16]
   3c7f8:	ldr	r1, [fp, #-12]
   3c7fc:	ldr	r0, [fp, #-8]
   3c800:	bl	3cf4c <flatcc_json_parser_generic_json@@Base>
   3c804:	mov	r3, r0
   3c808:	b	3c840 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   3c80c:	mov	r3, #4
   3c810:	ldr	r2, [fp, #-16]
   3c814:	ldr	r1, [fp, #-12]
   3c818:	ldr	r0, [fp, #-8]
   3c81c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c820:	mov	r3, r0
   3c824:	b	3c840 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   3c828:	mov	r3, #13
   3c82c:	ldr	r2, [fp, #-16]
   3c830:	ldr	r1, [fp, #-12]
   3c834:	ldr	r0, [fp, #-8]
   3c838:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c83c:	mov	r3, r0
   3c840:	mov	r0, r3
   3c844:	sub	sp, fp, #4
   3c848:	ldr	fp, [sp]
   3c84c:	add	sp, sp, #4
   3c850:	pop	{pc}		; (ldr pc, [sp], #4)
   3c854:	str	fp, [sp, #-8]!
   3c858:	str	lr, [sp, #4]
   3c85c:	add	fp, sp, #4
   3c860:	sub	sp, sp, #16
   3c864:	str	r0, [fp, #-8]
   3c868:	str	r1, [fp, #-12]
   3c86c:	str	r2, [fp, #-16]
   3c870:	ldr	r2, [fp, #-12]
   3c874:	ldr	r3, [fp, #-16]
   3c878:	cmp	r2, r3
   3c87c:	bne	3c888 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
   3c880:	ldr	r3, [fp, #-12]
   3c884:	b	3cbe8 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3c888:	ldr	r3, [fp, #-12]
   3c88c:	ldrb	r3, [r3]
   3c890:	cmp	r3, #45	; 0x2d
   3c894:	bne	3c8d0 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   3c898:	ldr	r3, [fp, #-12]
   3c89c:	add	r3, r3, #1
   3c8a0:	str	r3, [fp, #-12]
   3c8a4:	ldr	r2, [fp, #-12]
   3c8a8:	ldr	r3, [fp, #-16]
   3c8ac:	cmp	r2, r3
   3c8b0:	bne	3c8d0 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   3c8b4:	mov	r3, #6
   3c8b8:	ldr	r2, [fp, #-16]
   3c8bc:	ldr	r1, [fp, #-12]
   3c8c0:	ldr	r0, [fp, #-8]
   3c8c4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c8c8:	mov	r3, r0
   3c8cc:	b	3cbe8 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3c8d0:	ldr	r3, [fp, #-12]
   3c8d4:	ldrb	r3, [r3]
   3c8d8:	cmp	r3, #48	; 0x30
   3c8dc:	bne	3c8f0 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   3c8e0:	ldr	r3, [fp, #-12]
   3c8e4:	add	r3, r3, #1
   3c8e8:	str	r3, [fp, #-12]
   3c8ec:	b	3c978 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   3c8f0:	ldr	r3, [fp, #-12]
   3c8f4:	ldrb	r3, [r3]
   3c8f8:	cmp	r3, #48	; 0x30
   3c8fc:	bls	3c910 <flatcc_json_parser_unmatched_symbol@@Base+0x1b8>
   3c900:	ldr	r3, [fp, #-12]
   3c904:	ldrb	r3, [r3]
   3c908:	cmp	r3, #57	; 0x39
   3c90c:	bls	3c92c <flatcc_json_parser_unmatched_symbol@@Base+0x1d4>
   3c910:	mov	r3, #6
   3c914:	ldr	r2, [fp, #-16]
   3c918:	ldr	r1, [fp, #-12]
   3c91c:	ldr	r0, [fp, #-8]
   3c920:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c924:	mov	r3, r0
   3c928:	b	3cbe8 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3c92c:	ldr	r3, [fp, #-12]
   3c930:	add	r3, r3, #1
   3c934:	str	r3, [fp, #-12]
   3c938:	b	3c948 <flatcc_json_parser_unmatched_symbol@@Base+0x1f0>
   3c93c:	ldr	r3, [fp, #-12]
   3c940:	add	r3, r3, #1
   3c944:	str	r3, [fp, #-12]
   3c948:	ldr	r2, [fp, #-12]
   3c94c:	ldr	r3, [fp, #-16]
   3c950:	cmp	r2, r3
   3c954:	beq	3c978 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   3c958:	ldr	r3, [fp, #-12]
   3c95c:	ldrb	r3, [r3]
   3c960:	cmp	r3, #47	; 0x2f
   3c964:	bls	3c978 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   3c968:	ldr	r3, [fp, #-12]
   3c96c:	ldrb	r3, [r3]
   3c970:	cmp	r3, #57	; 0x39
   3c974:	bls	3c93c <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
   3c978:	ldr	r2, [fp, #-12]
   3c97c:	ldr	r3, [fp, #-16]
   3c980:	cmp	r2, r3
   3c984:	beq	3ca2c <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   3c988:	ldr	r3, [fp, #-12]
   3c98c:	ldrb	r3, [r3]
   3c990:	cmp	r3, #46	; 0x2e
   3c994:	bne	3ca2c <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   3c998:	ldr	r3, [fp, #-12]
   3c99c:	add	r3, r3, #1
   3c9a0:	str	r3, [fp, #-12]
   3c9a4:	ldr	r3, [fp, #-12]
   3c9a8:	ldrb	r3, [r3]
   3c9ac:	cmp	r3, #47	; 0x2f
   3c9b0:	bls	3c9c4 <flatcc_json_parser_unmatched_symbol@@Base+0x26c>
   3c9b4:	ldr	r3, [fp, #-12]
   3c9b8:	ldrb	r3, [r3]
   3c9bc:	cmp	r3, #57	; 0x39
   3c9c0:	bls	3c9e0 <flatcc_json_parser_unmatched_symbol@@Base+0x288>
   3c9c4:	mov	r3, #6
   3c9c8:	ldr	r2, [fp, #-16]
   3c9cc:	ldr	r1, [fp, #-12]
   3c9d0:	ldr	r0, [fp, #-8]
   3c9d4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3c9d8:	mov	r3, r0
   3c9dc:	b	3cbe8 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3c9e0:	ldr	r3, [fp, #-12]
   3c9e4:	add	r3, r3, #1
   3c9e8:	str	r3, [fp, #-12]
   3c9ec:	b	3c9fc <flatcc_json_parser_unmatched_symbol@@Base+0x2a4>
   3c9f0:	ldr	r3, [fp, #-12]
   3c9f4:	add	r3, r3, #1
   3c9f8:	str	r3, [fp, #-12]
   3c9fc:	ldr	r2, [fp, #-12]
   3ca00:	ldr	r3, [fp, #-16]
   3ca04:	cmp	r2, r3
   3ca08:	beq	3ca2c <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   3ca0c:	ldr	r3, [fp, #-12]
   3ca10:	ldrb	r3, [r3]
   3ca14:	cmp	r3, #47	; 0x2f
   3ca18:	bls	3ca2c <flatcc_json_parser_unmatched_symbol@@Base+0x2d4>
   3ca1c:	ldr	r3, [fp, #-12]
   3ca20:	ldrb	r3, [r3]
   3ca24:	cmp	r3, #57	; 0x39
   3ca28:	bls	3c9f0 <flatcc_json_parser_unmatched_symbol@@Base+0x298>
   3ca2c:	ldr	r2, [fp, #-12]
   3ca30:	ldr	r3, [fp, #-16]
   3ca34:	cmp	r2, r3
   3ca38:	beq	3cb58 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   3ca3c:	ldr	r3, [fp, #-12]
   3ca40:	ldrb	r3, [r3]
   3ca44:	cmp	r3, #101	; 0x65
   3ca48:	beq	3ca5c <flatcc_json_parser_unmatched_symbol@@Base+0x304>
   3ca4c:	ldr	r3, [fp, #-12]
   3ca50:	ldrb	r3, [r3]
   3ca54:	cmp	r3, #69	; 0x45
   3ca58:	bne	3cb58 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   3ca5c:	ldr	r3, [fp, #-12]
   3ca60:	add	r3, r3, #1
   3ca64:	str	r3, [fp, #-12]
   3ca68:	ldr	r2, [fp, #-12]
   3ca6c:	ldr	r3, [fp, #-16]
   3ca70:	cmp	r2, r3
   3ca74:	bne	3ca94 <flatcc_json_parser_unmatched_symbol@@Base+0x33c>
   3ca78:	mov	r3, #6
   3ca7c:	ldr	r2, [fp, #-16]
   3ca80:	ldr	r1, [fp, #-12]
   3ca84:	ldr	r0, [fp, #-8]
   3ca88:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3ca8c:	mov	r3, r0
   3ca90:	b	3cbe8 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3ca94:	ldr	r3, [fp, #-12]
   3ca98:	ldrb	r3, [r3]
   3ca9c:	cmp	r3, #43	; 0x2b
   3caa0:	beq	3cab4 <flatcc_json_parser_unmatched_symbol@@Base+0x35c>
   3caa4:	ldr	r3, [fp, #-12]
   3caa8:	ldrb	r3, [r3]
   3caac:	cmp	r3, #45	; 0x2d
   3cab0:	bne	3cac0 <flatcc_json_parser_unmatched_symbol@@Base+0x368>
   3cab4:	ldr	r3, [fp, #-12]
   3cab8:	add	r3, r3, #1
   3cabc:	str	r3, [fp, #-12]
   3cac0:	ldr	r2, [fp, #-12]
   3cac4:	ldr	r3, [fp, #-16]
   3cac8:	cmp	r2, r3
   3cacc:	beq	3caf0 <flatcc_json_parser_unmatched_symbol@@Base+0x398>
   3cad0:	ldr	r3, [fp, #-12]
   3cad4:	ldrb	r3, [r3]
   3cad8:	cmp	r3, #47	; 0x2f
   3cadc:	bls	3caf0 <flatcc_json_parser_unmatched_symbol@@Base+0x398>
   3cae0:	ldr	r3, [fp, #-12]
   3cae4:	ldrb	r3, [r3]
   3cae8:	cmp	r3, #57	; 0x39
   3caec:	bls	3cb0c <flatcc_json_parser_unmatched_symbol@@Base+0x3b4>
   3caf0:	mov	r3, #6
   3caf4:	ldr	r2, [fp, #-16]
   3caf8:	ldr	r1, [fp, #-12]
   3cafc:	ldr	r0, [fp, #-8]
   3cb00:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3cb04:	mov	r3, r0
   3cb08:	b	3cbe8 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3cb0c:	ldr	r3, [fp, #-12]
   3cb10:	add	r3, r3, #1
   3cb14:	str	r3, [fp, #-12]
   3cb18:	b	3cb28 <flatcc_json_parser_unmatched_symbol@@Base+0x3d0>
   3cb1c:	ldr	r3, [fp, #-12]
   3cb20:	add	r3, r3, #1
   3cb24:	str	r3, [fp, #-12]
   3cb28:	ldr	r2, [fp, #-12]
   3cb2c:	ldr	r3, [fp, #-16]
   3cb30:	cmp	r2, r3
   3cb34:	beq	3cb58 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   3cb38:	ldr	r3, [fp, #-12]
   3cb3c:	ldrb	r3, [r3]
   3cb40:	cmp	r3, #47	; 0x2f
   3cb44:	bls	3cb58 <flatcc_json_parser_unmatched_symbol@@Base+0x400>
   3cb48:	ldr	r3, [fp, #-12]
   3cb4c:	ldrb	r3, [r3]
   3cb50:	cmp	r3, #57	; 0x39
   3cb54:	bls	3cb1c <flatcc_json_parser_unmatched_symbol@@Base+0x3c4>
   3cb58:	ldr	r2, [fp, #-12]
   3cb5c:	ldr	r3, [fp, #-16]
   3cb60:	cmp	r2, r3
   3cb64:	beq	3cbd0 <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   3cb68:	ldr	r3, [fp, #-12]
   3cb6c:	ldrb	r3, [r3]
   3cb70:	cmp	r3, #32
   3cb74:	beq	3cbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3cb78:	cmp	r3, #32
   3cb7c:	bgt	3cb9c <flatcc_json_parser_unmatched_symbol@@Base+0x444>
   3cb80:	cmp	r3, #9
   3cb84:	blt	3cbd0 <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   3cb88:	cmp	r3, #11
   3cb8c:	ble	3cbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3cb90:	cmp	r3, #13
   3cb94:	beq	3cbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3cb98:	b	3cbd0 <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   3cb9c:	cmp	r3, #58	; 0x3a
   3cba0:	beq	3cbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3cba4:	cmp	r3, #58	; 0x3a
   3cba8:	bgt	3cbb8 <flatcc_json_parser_unmatched_symbol@@Base+0x460>
   3cbac:	cmp	r3, #44	; 0x2c
   3cbb0:	beq	3cbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3cbb4:	b	3cbd0 <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   3cbb8:	cmp	r3, #93	; 0x5d
   3cbbc:	beq	3cbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x470>
   3cbc0:	cmp	r3, #125	; 0x7d
   3cbc4:	bne	3cbd0 <flatcc_json_parser_unmatched_symbol@@Base+0x478>
   3cbc8:	ldr	r3, [fp, #-12]
   3cbcc:	b	3cbe8 <flatcc_json_parser_unmatched_symbol@@Base+0x490>
   3cbd0:	mov	r3, #6
   3cbd4:	ldr	r2, [fp, #-16]
   3cbd8:	ldr	r1, [fp, #-12]
   3cbdc:	ldr	r0, [fp, #-8]
   3cbe0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3cbe4:	mov	r3, r0
   3cbe8:	mov	r0, r3
   3cbec:	sub	sp, fp, #4
   3cbf0:	ldr	fp, [sp]
   3cbf4:	add	sp, sp, #4
   3cbf8:	pop	{pc}		; (ldr pc, [sp], #4)

0003cbfc <flatcc_json_parser_double@@Base>:
   3cbfc:	str	fp, [sp, #-8]!
   3cc00:	str	lr, [sp, #4]
   3cc04:	add	fp, sp, #4
   3cc08:	sub	sp, sp, #24
   3cc0c:	str	r0, [fp, #-16]
   3cc10:	str	r1, [fp, #-20]	; 0xffffffec
   3cc14:	str	r2, [fp, #-24]	; 0xffffffe8
   3cc18:	str	r3, [fp, #-28]	; 0xffffffe4
   3cc1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cc20:	mov	r2, #0
   3cc24:	mov	r3, #0
   3cc28:	strd	r2, [r1]
   3cc2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cc30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cc34:	cmp	r2, r3
   3cc38:	bne	3cc44 <flatcc_json_parser_double@@Base+0x48>
   3cc3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cc40:	b	3cd8c <flatcc_json_parser_double@@Base+0x190>
   3cc44:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cc48:	str	r3, [fp, #-8]
   3cc4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cc50:	ldrb	r3, [r3]
   3cc54:	cmp	r3, #45	; 0x2d
   3cc58:	bne	3cc68 <flatcc_json_parser_double@@Base+0x6c>
   3cc5c:	ldr	r3, [fp, #-8]
   3cc60:	add	r3, r3, #1
   3cc64:	str	r3, [fp, #-8]
   3cc68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cc6c:	ldr	r3, [fp, #-8]
   3cc70:	sub	r3, r2, r3
   3cc74:	cmp	r3, #1
   3cc78:	ble	3cccc <flatcc_json_parser_double@@Base+0xd0>
   3cc7c:	ldr	r3, [fp, #-8]
   3cc80:	ldrb	r3, [r3]
   3cc84:	cmp	r3, #46	; 0x2e
   3cc88:	beq	3ccb0 <flatcc_json_parser_double@@Base+0xb4>
   3cc8c:	ldr	r3, [fp, #-8]
   3cc90:	ldrb	r3, [r3]
   3cc94:	cmp	r3, #48	; 0x30
   3cc98:	bne	3cccc <flatcc_json_parser_double@@Base+0xd0>
   3cc9c:	ldr	r3, [fp, #-8]
   3cca0:	add	r3, r3, #1
   3cca4:	ldrb	r3, [r3]
   3cca8:	cmp	r3, #48	; 0x30
   3ccac:	bne	3cccc <flatcc_json_parser_double@@Base+0xd0>
   3ccb0:	mov	r3, #6
   3ccb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ccb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ccbc:	ldr	r0, [fp, #-16]
   3ccc0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3ccc4:	mov	r3, r0
   3ccc8:	b	3cd8c <flatcc_json_parser_double@@Base+0x190>
   3cccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ccd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ccd4:	sub	r3, r2, r3
   3ccd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3ccdc:	mov	r1, r3
   3cce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3cce4:	bl	3a820 <grisu3_diy_fp_encode_double@@Base+0x1520>
   3cce8:	str	r0, [fp, #-12]
   3ccec:	ldr	r3, [fp, #-12]
   3ccf0:	cmp	r3, #0
   3ccf4:	beq	3cd08 <flatcc_json_parser_double@@Base+0x10c>
   3ccf8:	ldr	r2, [fp, #-12]
   3ccfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cd00:	cmp	r2, r3
   3cd04:	bne	3cd88 <flatcc_json_parser_double@@Base+0x18c>
   3cd08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cd0c:	vldr	d7, [r3]
   3cd10:	vabs.f64	d7, d7
   3cd14:	vldr	d6, [pc, #132]	; 3cda0 <flatcc_json_parser_double@@Base+0x1a4>
   3cd18:	vcmp.f64	d7, d6
   3cd1c:	vmrs	APSR_nzcv, fpscr
   3cd20:	movle	r3, #1
   3cd24:	movgt	r3, #0
   3cd28:	uxtb	r3, r3
   3cd2c:	eor	r3, r3, #1
   3cd30:	uxtb	r3, r3
   3cd34:	cmp	r3, #0
   3cd38:	beq	3cd44 <flatcc_json_parser_double@@Base+0x148>
   3cd3c:	mov	r3, #1
   3cd40:	b	3cd48 <flatcc_json_parser_double@@Base+0x14c>
   3cd44:	mov	r3, #0
   3cd48:	cmp	r3, #0
   3cd4c:	beq	3cd6c <flatcc_json_parser_double@@Base+0x170>
   3cd50:	mov	r3, #7
   3cd54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cd58:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cd5c:	ldr	r0, [fp, #-16]
   3cd60:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3cd64:	mov	r3, r0
   3cd68:	b	3cd8c <flatcc_json_parser_double@@Base+0x190>
   3cd6c:	mov	r3, #6
   3cd70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cd74:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cd78:	ldr	r0, [fp, #-16]
   3cd7c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3cd80:	mov	r3, r0
   3cd84:	b	3cd8c <flatcc_json_parser_double@@Base+0x190>
   3cd88:	ldr	r3, [fp, #-12]
   3cd8c:	mov	r0, r3
   3cd90:	sub	sp, fp, #4
   3cd94:	ldr	fp, [sp]
   3cd98:	add	sp, sp, #4
   3cd9c:	pop	{pc}		; (ldr pc, [sp], #4)
   3cda0:			; <UNDEFINED> instruction: 0xffffffff
   3cda4:	svcvc	0x00efffff

0003cda8 <flatcc_json_parser_float@@Base>:
   3cda8:	str	fp, [sp, #-8]!
   3cdac:	str	lr, [sp, #4]
   3cdb0:	add	fp, sp, #4
   3cdb4:	sub	sp, sp, #24
   3cdb8:	str	r0, [fp, #-16]
   3cdbc:	str	r1, [fp, #-20]	; 0xffffffec
   3cdc0:	str	r2, [fp, #-24]	; 0xffffffe8
   3cdc4:	str	r3, [fp, #-28]	; 0xffffffe4
   3cdc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cdcc:	mov	r2, #0
   3cdd0:	str	r2, [r3]
   3cdd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cdd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cddc:	cmp	r2, r3
   3cde0:	bne	3cdec <flatcc_json_parser_float@@Base+0x44>
   3cde4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cde8:	b	3cf34 <flatcc_json_parser_float@@Base+0x18c>
   3cdec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cdf0:	str	r3, [fp, #-8]
   3cdf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cdf8:	ldrb	r3, [r3]
   3cdfc:	cmp	r3, #45	; 0x2d
   3ce00:	bne	3ce10 <flatcc_json_parser_float@@Base+0x68>
   3ce04:	ldr	r3, [fp, #-8]
   3ce08:	add	r3, r3, #1
   3ce0c:	str	r3, [fp, #-8]
   3ce10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ce14:	ldr	r3, [fp, #-8]
   3ce18:	sub	r3, r2, r3
   3ce1c:	cmp	r3, #1
   3ce20:	ble	3ce74 <flatcc_json_parser_float@@Base+0xcc>
   3ce24:	ldr	r3, [fp, #-8]
   3ce28:	ldrb	r3, [r3]
   3ce2c:	cmp	r3, #46	; 0x2e
   3ce30:	beq	3ce58 <flatcc_json_parser_float@@Base+0xb0>
   3ce34:	ldr	r3, [fp, #-8]
   3ce38:	ldrb	r3, [r3]
   3ce3c:	cmp	r3, #48	; 0x30
   3ce40:	bne	3ce74 <flatcc_json_parser_float@@Base+0xcc>
   3ce44:	ldr	r3, [fp, #-8]
   3ce48:	add	r3, r3, #1
   3ce4c:	ldrb	r3, [r3]
   3ce50:	cmp	r3, #48	; 0x30
   3ce54:	bne	3ce74 <flatcc_json_parser_float@@Base+0xcc>
   3ce58:	mov	r3, #6
   3ce5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ce60:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ce64:	ldr	r0, [fp, #-16]
   3ce68:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3ce6c:	mov	r3, r0
   3ce70:	b	3cf34 <flatcc_json_parser_float@@Base+0x18c>
   3ce74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ce78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ce7c:	sub	r3, r2, r3
   3ce80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3ce84:	mov	r1, r3
   3ce88:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ce8c:	bl	3a864 <grisu3_diy_fp_encode_double@@Base+0x1564>
   3ce90:	str	r0, [fp, #-12]
   3ce94:	ldr	r3, [fp, #-12]
   3ce98:	cmp	r3, #0
   3ce9c:	beq	3ceb0 <flatcc_json_parser_float@@Base+0x108>
   3cea0:	ldr	r2, [fp, #-12]
   3cea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cea8:	cmp	r2, r3
   3ceac:	bne	3cf30 <flatcc_json_parser_float@@Base+0x188>
   3ceb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ceb4:	vldr	s15, [r3]
   3ceb8:	vabs.f32	s15, s15
   3cebc:	vldr	s14, [pc, #132]	; 3cf48 <flatcc_json_parser_float@@Base+0x1a0>
   3cec0:	vcmp.f32	s15, s14
   3cec4:	vmrs	APSR_nzcv, fpscr
   3cec8:	movle	r3, #1
   3cecc:	movgt	r3, #0
   3ced0:	uxtb	r3, r3
   3ced4:	eor	r3, r3, #1
   3ced8:	uxtb	r3, r3
   3cedc:	cmp	r3, #0
   3cee0:	beq	3ceec <flatcc_json_parser_float@@Base+0x144>
   3cee4:	mov	r3, #1
   3cee8:	b	3cef0 <flatcc_json_parser_float@@Base+0x148>
   3ceec:	mov	r3, #0
   3cef0:	cmp	r3, #0
   3cef4:	beq	3cf14 <flatcc_json_parser_float@@Base+0x16c>
   3cef8:	mov	r3, #7
   3cefc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cf00:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cf04:	ldr	r0, [fp, #-16]
   3cf08:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3cf0c:	mov	r3, r0
   3cf10:	b	3cf34 <flatcc_json_parser_float@@Base+0x18c>
   3cf14:	mov	r3, #6
   3cf18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cf1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cf20:	ldr	r0, [fp, #-16]
   3cf24:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3cf28:	mov	r3, r0
   3cf2c:	b	3cf34 <flatcc_json_parser_float@@Base+0x18c>
   3cf30:	ldr	r3, [fp, #-12]
   3cf34:	mov	r0, r3
   3cf38:	sub	sp, fp, #4
   3cf3c:	ldr	fp, [sp]
   3cf40:	add	sp, sp, #4
   3cf44:	pop	{pc}		; (ldr pc, [sp], #4)
   3cf48:	svcvc	0x007fffff

0003cf4c <flatcc_json_parser_generic_json@@Base>:
   3cf4c:	str	fp, [sp, #-8]!
   3cf50:	str	lr, [sp, #4]
   3cf54:	add	fp, sp, #4
   3cf58:	sub	sp, sp, #552	; 0x228
   3cf5c:	str	r0, [fp, #-544]	; 0xfffffde0
   3cf60:	str	r1, [fp, #-548]	; 0xfffffddc
   3cf64:	str	r2, [fp, #-552]	; 0xfffffdd8
   3cf68:	mov	r3, #0
   3cf6c:	str	r3, [fp, #-536]	; 0xfffffde8
   3cf70:	sub	r3, fp, #528	; 0x210
   3cf74:	str	r3, [fp, #-8]
   3cf78:	ldr	r3, [fp, #-8]
   3cf7c:	add	r3, r3, #512	; 0x200
   3cf80:	str	r3, [fp, #-12]
   3cf84:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3cf88:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3cf8c:	cmp	r2, r3
   3cf90:	bne	3cf9c <flatcc_json_parser_generic_json@@Base+0x50>
   3cf94:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3cf98:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3cf9c:	sub	r3, fp, #528	; 0x210
   3cfa0:	ldr	r2, [fp, #-8]
   3cfa4:	cmp	r2, r3
   3cfa8:	beq	3d070 <flatcc_json_parser_generic_json@@Base+0x124>
   3cfac:	ldr	r3, [fp, #-8]
   3cfb0:	sub	r3, r3, #1
   3cfb4:	ldrb	r3, [r3]
   3cfb8:	cmp	r3, #125	; 0x7d
   3cfbc:	bne	3d070 <flatcc_json_parser_generic_json@@Base+0x124>
   3cfc0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3cfc4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3cfc8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3cfcc:	bl	36624 <flatcc_verify_union_vector_field@@Base+0x4e8>
   3cfd0:	str	r0, [fp, #-548]	; 0xfffffddc
   3cfd4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3cfd8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3cfdc:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3cfe0:	bl	366a8 <flatcc_verify_union_vector_field@@Base+0x56c>
   3cfe4:	str	r0, [fp, #-548]	; 0xfffffddc
   3cfe8:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3cfec:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3cff0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3cff4:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3cff8:	str	r0, [fp, #-548]	; 0xfffffddc
   3cffc:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3d000:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3d004:	cmp	r2, r3
   3d008:	bne	3d028 <flatcc_json_parser_generic_json@@Base+0xdc>
   3d00c:	mov	r3, #10
   3d010:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d014:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d018:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d01c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d020:	mov	r3, r0
   3d024:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d028:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d02c:	ldrb	r3, [r3]
   3d030:	cmp	r3, #58	; 0x3a
   3d034:	beq	3d054 <flatcc_json_parser_generic_json@@Base+0x108>
   3d038:	mov	r3, #4
   3d03c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d040:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d044:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d048:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d04c:	mov	r3, r0
   3d050:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d054:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d058:	add	r3, r3, #1
   3d05c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d060:	mov	r1, r3
   3d064:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d068:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3d06c:	str	r0, [fp, #-548]	; 0xfffffddc
   3d070:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d074:	ldrb	r3, [r3]
   3d078:	sub	r3, r3, #34	; 0x22
   3d07c:	cmp	r3, #89	; 0x59
   3d080:	addls	pc, pc, r3, lsl #2
   3d084:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d088:	b	3d1f0 <flatcc_json_parser_generic_json@@Base+0x2a4>
   3d08c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d090:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d094:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d098:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d09c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0a0:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0a4:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0a8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0ac:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0b0:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0b4:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0b8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0bc:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0c0:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0c4:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0c8:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0cc:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0d0:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0d4:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0d8:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0dc:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0e0:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0e4:	b	3d294 <flatcc_json_parser_generic_json@@Base+0x348>
   3d0e8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0ec:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0f0:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0f4:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0f8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d0fc:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d100:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d104:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d108:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d10c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d110:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d114:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d118:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d11c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d120:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d124:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d128:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d12c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d130:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d134:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d138:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d13c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d140:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d144:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d148:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d14c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d150:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d154:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d158:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d15c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d160:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d164:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d168:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d16c:	b	3d340 <flatcc_json_parser_generic_json@@Base+0x3f4>
   3d170:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d174:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d178:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d17c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d180:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d184:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d188:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d18c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d190:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d194:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d198:	b	3d2ac <flatcc_json_parser_generic_json@@Base+0x360>
   3d19c:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1a0:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1a4:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1a8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1ac:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1b0:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1b4:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1b8:	b	3d2fc <flatcc_json_parser_generic_json@@Base+0x3b0>
   3d1bc:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1c0:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1c4:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1c8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1cc:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1d0:	b	3d2ac <flatcc_json_parser_generic_json@@Base+0x360>
   3d1d4:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1d8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1dc:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1e0:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1e4:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1e8:	b	3d440 <flatcc_json_parser_generic_json@@Base+0x4f4>
   3d1ec:	b	3d3c0 <flatcc_json_parser_generic_json@@Base+0x474>
   3d1f0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d1f4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d1f8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d1fc:	bl	3652c <flatcc_verify_union_vector_field@@Base+0x3f0>
   3d200:	str	r0, [fp, #-548]	; 0xfffffddc
   3d204:	b	3d254 <flatcc_json_parser_generic_json@@Base+0x308>
   3d208:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d20c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d210:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d214:	bl	3b854 <flatcc_json_parser_string_part@@Base>
   3d218:	str	r0, [fp, #-548]	; 0xfffffddc
   3d21c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3d220:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3d224:	cmp	r2, r3
   3d228:	beq	3d23c <flatcc_json_parser_generic_json@@Base+0x2f0>
   3d22c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d230:	ldrb	r3, [r3]
   3d234:	cmp	r3, #34	; 0x22
   3d238:	beq	3d278 <flatcc_json_parser_generic_json@@Base+0x32c>
   3d23c:	sub	r3, fp, #532	; 0x214
   3d240:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d244:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d248:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d24c:	bl	3bae8 <flatcc_json_parser_string_escape@@Base>
   3d250:	str	r0, [fp, #-548]	; 0xfffffddc
   3d254:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3d258:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3d25c:	cmp	r2, r3
   3d260:	beq	3d27c <flatcc_json_parser_generic_json@@Base+0x330>
   3d264:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d268:	ldrb	r3, [r3]
   3d26c:	cmp	r3, #34	; 0x22
   3d270:	bne	3d208 <flatcc_json_parser_generic_json@@Base+0x2bc>
   3d274:	b	3d27c <flatcc_json_parser_generic_json@@Base+0x330>
   3d278:	nop	{0}
   3d27c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d280:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d284:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d288:	bl	365a8 <flatcc_verify_union_vector_field@@Base+0x46c>
   3d28c:	str	r0, [fp, #-548]	; 0xfffffddc
   3d290:	b	3d478 <flatcc_json_parser_generic_json@@Base+0x52c>
   3d294:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d298:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d29c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d2a0:	bl	3c854 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   3d2a4:	str	r0, [fp, #-548]	; 0xfffffddc
   3d2a8:	b	3d478 <flatcc_json_parser_generic_json@@Base+0x52c>
   3d2ac:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d2b0:	str	r3, [fp, #-16]
   3d2b4:	sub	r3, fp, #536	; 0x218
   3d2b8:	sub	r3, r3, #1
   3d2bc:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d2c0:	ldr	r1, [fp, #-16]
   3d2c4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d2c8:	bl	373e4 <flatcc_verify_union_vector_field@@Base+0x12a8>
   3d2cc:	str	r0, [fp, #-548]	; 0xfffffddc
   3d2d0:	ldr	r2, [fp, #-16]
   3d2d4:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d2d8:	cmp	r2, r3
   3d2dc:	bne	3d45c <flatcc_json_parser_generic_json@@Base+0x510>
   3d2e0:	mov	r3, #5
   3d2e4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d2e8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d2ec:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d2f0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d2f4:	mov	r3, r0
   3d2f8:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d2fc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d300:	str	r3, [fp, #-16]
   3d304:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   3d308:	ldr	r0, [fp, #-16]
   3d30c:	bl	37290 <flatcc_verify_union_vector_field@@Base+0x1154>
   3d310:	str	r0, [fp, #-548]	; 0xfffffddc
   3d314:	ldr	r2, [fp, #-16]
   3d318:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d31c:	cmp	r2, r3
   3d320:	bne	3d464 <flatcc_json_parser_generic_json@@Base+0x518>
   3d324:	mov	r3, #5
   3d328:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d32c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d330:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d334:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d338:	mov	r3, r0
   3d33c:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d340:	ldr	r2, [fp, #-8]
   3d344:	ldr	r3, [fp, #-12]
   3d348:	cmp	r2, r3
   3d34c:	bne	3d36c <flatcc_json_parser_generic_json@@Base+0x420>
   3d350:	mov	r3, #2
   3d354:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d358:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d35c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d360:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d364:	mov	r3, r0
   3d368:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d36c:	ldr	r3, [fp, #-8]
   3d370:	add	r2, r3, #1
   3d374:	str	r2, [fp, #-8]
   3d378:	mov	r2, #93	; 0x5d
   3d37c:	strb	r2, [r3]
   3d380:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d384:	add	r3, r3, #1
   3d388:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d38c:	mov	r1, r3
   3d390:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d394:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3d398:	str	r0, [fp, #-548]	; 0xfffffddc
   3d39c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3d3a0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3d3a4:	cmp	r2, r3
   3d3a8:	beq	3cf84 <flatcc_json_parser_generic_json@@Base+0x38>
   3d3ac:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d3b0:	ldrb	r3, [r3]
   3d3b4:	cmp	r3, #93	; 0x5d
   3d3b8:	beq	3d46c <flatcc_json_parser_generic_json@@Base+0x520>
   3d3bc:	b	3cf84 <flatcc_json_parser_generic_json@@Base+0x38>
   3d3c0:	ldr	r2, [fp, #-8]
   3d3c4:	ldr	r3, [fp, #-12]
   3d3c8:	cmp	r2, r3
   3d3cc:	bne	3d3ec <flatcc_json_parser_generic_json@@Base+0x4a0>
   3d3d0:	mov	r3, #2
   3d3d4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d3d8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d3dc:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d3e0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d3e4:	mov	r3, r0
   3d3e8:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d3ec:	ldr	r3, [fp, #-8]
   3d3f0:	add	r2, r3, #1
   3d3f4:	str	r2, [fp, #-8]
   3d3f8:	mov	r2, #125	; 0x7d
   3d3fc:	strb	r2, [r3]
   3d400:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d404:	add	r3, r3, #1
   3d408:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d40c:	mov	r1, r3
   3d410:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d414:	bl	3648c <flatcc_verify_union_vector_field@@Base+0x350>
   3d418:	str	r0, [fp, #-548]	; 0xfffffddc
   3d41c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3d420:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3d424:	cmp	r2, r3
   3d428:	beq	3cf84 <flatcc_json_parser_generic_json@@Base+0x38>
   3d42c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d430:	ldrb	r3, [r3]
   3d434:	cmp	r3, #125	; 0x7d
   3d438:	beq	3d474 <flatcc_json_parser_generic_json@@Base+0x528>
   3d43c:	b	3cf84 <flatcc_json_parser_generic_json@@Base+0x38>
   3d440:	mov	r3, #5
   3d444:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d448:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d44c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d450:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d454:	mov	r3, r0
   3d458:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d45c:	nop	{0}
   3d460:	b	3d4e8 <flatcc_json_parser_generic_json@@Base+0x59c>
   3d464:	nop	{0}
   3d468:	b	3d4e8 <flatcc_json_parser_generic_json@@Base+0x59c>
   3d46c:	nop	{0}
   3d470:	b	3d4e8 <flatcc_json_parser_generic_json@@Base+0x59c>
   3d474:	nop	{0}
   3d478:	b	3d4e8 <flatcc_json_parser_generic_json@@Base+0x59c>
   3d47c:	ldr	r3, [fp, #-8]
   3d480:	sub	r3, r3, #1
   3d484:	str	r3, [fp, #-8]
   3d488:	ldr	r3, [fp, #-8]
   3d48c:	ldrb	r3, [r3]
   3d490:	cmp	r3, #93	; 0x5d
   3d494:	bne	3d4b4 <flatcc_json_parser_generic_json@@Base+0x568>
   3d498:	sub	r3, fp, #536	; 0x218
   3d49c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d4a0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d4a4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d4a8:	bl	36a58 <flatcc_verify_union_vector_field@@Base+0x91c>
   3d4ac:	str	r0, [fp, #-548]	; 0xfffffddc
   3d4b0:	b	3d4cc <flatcc_json_parser_generic_json@@Base+0x580>
   3d4b4:	sub	r3, fp, #536	; 0x218
   3d4b8:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d4bc:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d4c0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d4c4:	bl	367f0 <flatcc_verify_union_vector_field@@Base+0x6b4>
   3d4c8:	str	r0, [fp, #-548]	; 0xfffffddc
   3d4cc:	ldr	r3, [fp, #-536]	; 0xfffffde8
   3d4d0:	cmp	r3, #0
   3d4d4:	beq	3d4e8 <flatcc_json_parser_generic_json@@Base+0x59c>
   3d4d8:	ldr	r3, [fp, #-8]
   3d4dc:	add	r3, r3, #1
   3d4e0:	str	r3, [fp, #-8]
   3d4e4:	b	3cf84 <flatcc_json_parser_generic_json@@Base+0x38>
   3d4e8:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3d4ec:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3d4f0:	cmp	r2, r3
   3d4f4:	beq	3d508 <flatcc_json_parser_generic_json@@Base+0x5bc>
   3d4f8:	sub	r3, fp, #528	; 0x210
   3d4fc:	ldr	r2, [fp, #-8]
   3d500:	cmp	r2, r3
   3d504:	bne	3d47c <flatcc_json_parser_generic_json@@Base+0x530>
   3d508:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3d50c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3d510:	cmp	r2, r3
   3d514:	bne	3d560 <flatcc_json_parser_generic_json@@Base+0x614>
   3d518:	sub	r3, fp, #528	; 0x210
   3d51c:	ldr	r2, [fp, #-8]
   3d520:	cmp	r2, r3
   3d524:	beq	3d560 <flatcc_json_parser_generic_json@@Base+0x614>
   3d528:	ldr	r3, [fp, #-8]
   3d52c:	sub	r3, r3, #1
   3d530:	ldrb	r3, [r3]
   3d534:	cmp	r3, #93	; 0x5d
   3d538:	bne	3d544 <flatcc_json_parser_generic_json@@Base+0x5f8>
   3d53c:	mov	r3, #9
   3d540:	b	3d548 <flatcc_json_parser_generic_json@@Base+0x5fc>
   3d544:	mov	r3, #10
   3d548:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3d54c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3d550:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3d554:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d558:	mov	r3, r0
   3d55c:	b	3d564 <flatcc_json_parser_generic_json@@Base+0x618>
   3d560:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3d564:	mov	r0, r3
   3d568:	sub	sp, fp, #4
   3d56c:	ldr	fp, [sp]
   3d570:	add	sp, sp, #4
   3d574:	pop	{pc}		; (ldr pc, [sp], #4)

0003d578 <flatcc_json_parser_integer@@Base>:
   3d578:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3d57c:	strd	r6, [sp, #8]
   3d580:	strd	r8, [sp, #16]
   3d584:	str	fp, [sp, #24]
   3d588:	str	lr, [sp, #28]
   3d58c:	add	fp, sp, #28
   3d590:	sub	sp, sp, #48	; 0x30
   3d594:	str	r0, [fp, #-56]	; 0xffffffc8
   3d598:	str	r1, [fp, #-60]	; 0xffffffc4
   3d59c:	str	r2, [fp, #-64]	; 0xffffffc0
   3d5a0:	str	r3, [fp, #-68]	; 0xffffffbc
   3d5a4:	mov	r2, #0
   3d5a8:	mov	r3, #0
   3d5ac:	strd	r2, [fp, #-36]	; 0xffffffdc
   3d5b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3d5b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d5b8:	cmp	r2, r3
   3d5bc:	bne	3d5c8 <flatcc_json_parser_integer@@Base+0x50>
   3d5c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d5c4:	b	3d78c <flatcc_json_parser_integer@@Base+0x214>
   3d5c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d5cc:	str	r3, [fp, #-40]	; 0xffffffd8
   3d5d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d5d4:	ldrb	r3, [r3]
   3d5d8:	cmp	r3, #45	; 0x2d
   3d5dc:	moveq	r3, #1
   3d5e0:	movne	r3, #0
   3d5e4:	uxtb	r3, r3
   3d5e8:	mov	r2, r3
   3d5ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d5f0:	str	r2, [r3]
   3d5f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d5f8:	ldr	r3, [r3]
   3d5fc:	mov	r2, r3
   3d600:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d604:	add	r3, r3, r2
   3d608:	str	r3, [fp, #-60]	; 0xffffffc4
   3d60c:	b	3d6d8 <flatcc_json_parser_integer@@Base+0x160>
   3d610:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3d614:	strd	r2, [fp, #-52]	; 0xffffffcc
   3d618:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   3d61c:	mov	r2, r6
   3d620:	mov	r3, r7
   3d624:	mov	r0, #0
   3d628:	mov	r1, #0
   3d62c:	lsl	r1, r3, #2
   3d630:	orr	r1, r1, r2, lsr #30
   3d634:	lsl	r0, r2, #2
   3d638:	mov	r2, r0
   3d63c:	mov	r3, r1
   3d640:	adds	r2, r2, r6
   3d644:	adc	r3, r3, r7
   3d648:	adds	r1, r2, r2
   3d64c:	str	r1, [fp, #-76]	; 0xffffffb4
   3d650:	adc	r3, r3, r3
   3d654:	str	r3, [fp, #-72]	; 0xffffffb8
   3d658:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   3d65c:	mov	r0, r2
   3d660:	mov	r1, r3
   3d664:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d668:	ldrb	r3, [r3]
   3d66c:	uxtb	r2, r3
   3d670:	mov	r3, #0
   3d674:	adds	r4, r0, r2
   3d678:	adc	r5, r1, r3
   3d67c:	subs	r8, r4, #48	; 0x30
   3d680:	sbc	r9, r5, #0
   3d684:	strd	r8, [fp, #-36]	; 0xffffffdc
   3d688:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3d68c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3d690:	cmp	r1, r3
   3d694:	cmpeq	r0, r2
   3d698:	bls	3d6cc <flatcc_json_parser_integer@@Base+0x154>
   3d69c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d6a0:	cmp	r3, #0
   3d6a4:	beq	3d6b0 <flatcc_json_parser_integer@@Base+0x138>
   3d6a8:	mov	r3, #8
   3d6ac:	b	3d6b4 <flatcc_json_parser_integer@@Base+0x13c>
   3d6b0:	mov	r3, #7
   3d6b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3d6b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3d6bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3d6c0:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d6c4:	mov	r3, r0
   3d6c8:	b	3d78c <flatcc_json_parser_integer@@Base+0x214>
   3d6cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d6d0:	add	r3, r3, #1
   3d6d4:	str	r3, [fp, #-60]	; 0xffffffc4
   3d6d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3d6dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d6e0:	cmp	r2, r3
   3d6e4:	beq	3d708 <flatcc_json_parser_integer@@Base+0x190>
   3d6e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d6ec:	ldrb	r3, [r3]
   3d6f0:	cmp	r3, #47	; 0x2f
   3d6f4:	bls	3d708 <flatcc_json_parser_integer@@Base+0x190>
   3d6f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d6fc:	ldrb	r3, [r3]
   3d700:	cmp	r3, #57	; 0x39
   3d704:	bls	3d610 <flatcc_json_parser_integer@@Base+0x98>
   3d708:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3d70c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d710:	cmp	r2, r3
   3d714:	bne	3d720 <flatcc_json_parser_integer@@Base+0x1a8>
   3d718:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d71c:	b	3d78c <flatcc_json_parser_integer@@Base+0x214>
   3d720:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3d724:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d728:	cmp	r2, r3
   3d72c:	beq	3d77c <flatcc_json_parser_integer@@Base+0x204>
   3d730:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d734:	ldrb	r3, [r3]
   3d738:	cmp	r3, #101	; 0x65
   3d73c:	beq	3d760 <flatcc_json_parser_integer@@Base+0x1e8>
   3d740:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d744:	ldrb	r3, [r3]
   3d748:	cmp	r3, #69	; 0x45
   3d74c:	beq	3d760 <flatcc_json_parser_integer@@Base+0x1e8>
   3d750:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d754:	ldrb	r3, [r3]
   3d758:	cmp	r3, #46	; 0x2e
   3d75c:	bne	3d77c <flatcc_json_parser_integer@@Base+0x204>
   3d760:	mov	r3, #12
   3d764:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3d768:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3d76c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3d770:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d774:	mov	r3, r0
   3d778:	b	3d78c <flatcc_json_parser_integer@@Base+0x214>
   3d77c:	ldr	r1, [fp, #4]
   3d780:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3d784:	strd	r2, [r1]
   3d788:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3d78c:	mov	r0, r3
   3d790:	sub	sp, fp, #28
   3d794:	ldrd	r4, [sp]
   3d798:	ldrd	r6, [sp, #8]
   3d79c:	ldrd	r8, [sp, #16]
   3d7a0:	ldr	fp, [sp, #24]
   3d7a4:	add	sp, sp, #28
   3d7a8:	pop	{pc}		; (ldr pc, [sp], #4)

0003d7ac <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3d7ac:	str	fp, [sp, #-8]!
   3d7b0:	str	lr, [sp, #4]
   3d7b4:	add	fp, sp, #4
   3d7b8:	sub	sp, sp, #56	; 0x38
   3d7bc:	str	r0, [fp, #-40]	; 0xffffffd8
   3d7c0:	str	r1, [fp, #-44]	; 0xffffffd4
   3d7c4:	str	r2, [fp, #-48]	; 0xffffffd0
   3d7c8:	str	r3, [fp, #-52]	; 0xffffffcc
   3d7cc:	ldr	r3, [fp, #4]
   3d7d0:	cmp	r3, #0
   3d7d4:	movne	r3, #1
   3d7d8:	moveq	r3, #0
   3d7dc:	uxtb	r3, r3
   3d7e0:	str	r3, [fp, #-8]
   3d7e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d7e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d7ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d7f0:	bl	3652c <flatcc_verify_union_vector_field@@Base+0x3f0>
   3d7f4:	str	r0, [fp, #-44]	; 0xffffffd4
   3d7f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3d7fc:	str	r3, [fp, #-12]
   3d800:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d804:	ldr	r1, [fp, #-12]
   3d808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d80c:	bl	3b854 <flatcc_json_parser_string_part@@Base>
   3d810:	str	r0, [fp, #-44]	; 0xffffffd4
   3d814:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3d818:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d81c:	cmp	r2, r3
   3d820:	beq	3d9e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x234>
   3d824:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3d828:	ldrb	r3, [r3]
   3d82c:	cmp	r3, #34	; 0x22
   3d830:	bne	3d9e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x234>
   3d834:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3d838:	ldr	r3, [fp, #-12]
   3d83c:	sub	r3, r2, r3
   3d840:	mov	r0, r3
   3d844:	bl	3aacc <grisu3_diy_fp_encode_double@@Base+0x17cc>
   3d848:	str	r0, [fp, #-16]
   3d84c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d850:	ldr	r0, [r3]
   3d854:	mvn	r3, #0
   3d858:	mov	r2, #1
   3d85c:	mov	r1, #1
   3d860:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   3d864:	mov	r3, r0
   3d868:	cmp	r3, #0
   3d86c:	bne	3d99c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   3d870:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d874:	ldr	r3, [r3]
   3d878:	ldr	r1, [fp, #-16]
   3d87c:	mov	r0, r3
   3d880:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   3d884:	str	r0, [fp, #-20]	; 0xffffffec
   3d888:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d88c:	cmp	r3, #0
   3d890:	beq	3d9a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f8>
   3d894:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3d898:	ldr	r3, [fp, #-12]
   3d89c:	sub	r3, r2, r3
   3d8a0:	str	r3, [fp, #-32]	; 0xffffffe0
   3d8a4:	ldr	r3, [fp, #-16]
   3d8a8:	str	r3, [fp, #-28]	; 0xffffffe4
   3d8ac:	sub	r1, fp, #32
   3d8b0:	sub	r2, fp, #28
   3d8b4:	ldr	r3, [fp, #-8]
   3d8b8:	str	r3, [sp]
   3d8bc:	mov	r3, r1
   3d8c0:	ldr	r1, [fp, #-12]
   3d8c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d8c8:	bl	3af10 <grisu3_diy_fp_encode_double@@Base+0x1c10>
   3d8cc:	str	r0, [fp, #-24]	; 0xffffffe8
   3d8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d8d4:	cmp	r3, #0
   3d8d8:	beq	3d8f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x144>
   3d8dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d8e0:	ldr	r2, [fp, #-12]
   3d8e4:	add	r3, r2, r3
   3d8e8:	str	r3, [fp, #-44]	; 0xffffffd4
   3d8ec:	b	3d9e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x238>
   3d8f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3d8f4:	ldr	r3, [fp, #-12]
   3d8f8:	sub	r3, r2, r3
   3d8fc:	mov	r2, r3
   3d900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d904:	cmp	r2, r3
   3d908:	beq	3d920 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x174>
   3d90c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d910:	ldr	r2, [fp, #-12]
   3d914:	add	r3, r2, r3
   3d918:	str	r3, [fp, #-44]	; 0xffffffd4
   3d91c:	b	3d9e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x238>
   3d920:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d924:	ldr	r2, [fp, #-16]
   3d928:	cmp	r2, r3
   3d92c:	bls	3d958 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   3d930:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d934:	ldr	r0, [r3]
   3d938:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d93c:	ldr	r2, [fp, #-16]
   3d940:	sub	r3, r2, r3
   3d944:	mov	r1, r3
   3d948:	bl	2f95c <flatcc_builder_truncate_vector@@Base>
   3d94c:	mov	r3, r0
   3d950:	cmp	r3, #0
   3d954:	bne	3d9ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x200>
   3d958:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d95c:	ldr	r3, [r3]
   3d960:	mov	r0, r3
   3d964:	bl	30f80 <flatcc_builder_end_vector@@Base>
   3d968:	mov	r2, r0
   3d96c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d970:	str	r2, [r3]
   3d974:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d978:	ldr	r3, [r3]
   3d97c:	cmp	r3, #0
   3d980:	beq	3d9b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   3d984:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d988:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d98c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d990:	bl	365a8 <flatcc_verify_union_vector_field@@Base+0x46c>
   3d994:	mov	r3, r0
   3d998:	b	3da1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x270>
   3d99c:	nop	{0}
   3d9a0:	b	3d9b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   3d9a4:	nop	{0}
   3d9a8:	b	3d9b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   3d9ac:	nop	{0}
   3d9b0:	b	3d9b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   3d9b4:	nop	{0}
   3d9b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d9bc:	mov	r2, #0
   3d9c0:	str	r2, [r3]
   3d9c4:	mov	r3, #33	; 0x21
   3d9c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d9cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d9d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d9d4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3d9d8:	mov	r3, r0
   3d9dc:	b	3da1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x270>
   3d9e0:	nop	{0}
   3d9e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d9e8:	mov	r2, #0
   3d9ec:	str	r2, [r3]
   3d9f0:	ldr	r3, [fp, #4]
   3d9f4:	cmp	r3, #0
   3d9f8:	beq	3da04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x258>
   3d9fc:	mov	r3, #32
   3da00:	b	3da08 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x25c>
   3da04:	mov	r3, #31
   3da08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3da0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3da10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3da14:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3da18:	mov	r3, r0
   3da1c:	mov	r0, r3
   3da20:	sub	sp, fp, #4
   3da24:	ldr	fp, [sp]
   3da28:	add	sp, sp, #4
   3da2c:	pop	{pc}		; (ldr pc, [sp], #4)

0003da30 <flatcc_json_parser_build_string@@Base>:
   3da30:	str	fp, [sp, #-8]!
   3da34:	str	lr, [sp, #4]
   3da38:	add	fp, sp, #4
   3da3c:	sub	sp, sp, #24
   3da40:	str	r0, [fp, #-16]
   3da44:	str	r1, [fp, #-20]	; 0xffffffec
   3da48:	str	r2, [fp, #-24]	; 0xffffffe8
   3da4c:	str	r3, [fp, #-28]	; 0xffffffe4
   3da50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3da54:	ldr	r1, [fp, #-20]	; 0xffffffec
   3da58:	ldr	r0, [fp, #-16]
   3da5c:	bl	3652c <flatcc_verify_union_vector_field@@Base+0x3f0>
   3da60:	str	r0, [fp, #-20]	; 0xffffffec
   3da64:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da68:	str	r3, [fp, #-8]
   3da6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3da70:	ldr	r1, [fp, #-8]
   3da74:	ldr	r0, [fp, #-16]
   3da78:	bl	3b854 <flatcc_json_parser_string_part@@Base>
   3da7c:	str	r0, [fp, #-20]	; 0xffffffec
   3da80:	ldr	r2, [fp, #-20]	; 0xffffffec
   3da84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da88:	cmp	r2, r3
   3da8c:	beq	3dad0 <flatcc_json_parser_build_string@@Base+0xa0>
   3da90:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da94:	ldrb	r3, [r3]
   3da98:	cmp	r3, #34	; 0x22
   3da9c:	bne	3dad0 <flatcc_json_parser_build_string@@Base+0xa0>
   3daa0:	ldr	r3, [fp, #-16]
   3daa4:	ldr	r0, [r3]
   3daa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3daac:	ldr	r3, [fp, #-8]
   3dab0:	sub	r3, r2, r3
   3dab4:	mov	r2, r3
   3dab8:	ldr	r1, [fp, #-8]
   3dabc:	bl	321c4 <flatcc_builder_create_string@@Base>
   3dac0:	mov	r2, r0
   3dac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dac8:	str	r2, [r3]
   3dacc:	b	3dbf0 <flatcc_json_parser_build_string@@Base+0x1c0>
   3dad0:	ldr	r3, [fp, #-16]
   3dad4:	ldr	r3, [r3]
   3dad8:	mov	r0, r3
   3dadc:	bl	2fe5c <flatcc_builder_start_string@@Base>
   3dae0:	mov	r3, r0
   3dae4:	cmp	r3, #0
   3dae8:	bne	3dc08 <flatcc_json_parser_build_string@@Base+0x1d8>
   3daec:	ldr	r3, [fp, #-16]
   3daf0:	ldr	r0, [r3]
   3daf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3daf8:	ldr	r3, [fp, #-8]
   3dafc:	sub	r3, r2, r3
   3db00:	mov	r2, r3
   3db04:	ldr	r1, [fp, #-8]
   3db08:	bl	2f814 <flatcc_builder_append_string@@Base>
   3db0c:	mov	r3, r0
   3db10:	cmp	r3, #0
   3db14:	beq	3dc08 <flatcc_json_parser_build_string@@Base+0x1d8>
   3db18:	b	3dbb4 <flatcc_json_parser_build_string@@Base+0x184>
   3db1c:	sub	r3, fp, #12
   3db20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3db24:	ldr	r1, [fp, #-20]	; 0xffffffec
   3db28:	ldr	r0, [fp, #-16]
   3db2c:	bl	3bae8 <flatcc_json_parser_string_escape@@Base>
   3db30:	str	r0, [fp, #-20]	; 0xffffffec
   3db34:	ldr	r3, [fp, #-16]
   3db38:	ldr	r0, [r3]
   3db3c:	sub	r3, fp, #12
   3db40:	add	r3, r3, #1
   3db44:	ldrb	r2, [fp, #-12]
   3db48:	mov	r1, r3
   3db4c:	bl	2f814 <flatcc_builder_append_string@@Base>
   3db50:	mov	r3, r0
   3db54:	cmp	r3, #0
   3db58:	beq	3dc10 <flatcc_json_parser_build_string@@Base+0x1e0>
   3db5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3db60:	str	r3, [fp, #-8]
   3db64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3db68:	ldr	r1, [fp, #-8]
   3db6c:	ldr	r0, [fp, #-16]
   3db70:	bl	3b854 <flatcc_json_parser_string_part@@Base>
   3db74:	str	r0, [fp, #-20]	; 0xffffffec
   3db78:	ldr	r2, [fp, #-20]	; 0xffffffec
   3db7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3db80:	cmp	r2, r3
   3db84:	beq	3dbb4 <flatcc_json_parser_build_string@@Base+0x184>
   3db88:	ldr	r3, [fp, #-16]
   3db8c:	ldr	r0, [r3]
   3db90:	ldr	r2, [fp, #-20]	; 0xffffffec
   3db94:	ldr	r3, [fp, #-8]
   3db98:	sub	r3, r2, r3
   3db9c:	mov	r2, r3
   3dba0:	ldr	r1, [fp, #-8]
   3dba4:	bl	2f814 <flatcc_builder_append_string@@Base>
   3dba8:	mov	r3, r0
   3dbac:	cmp	r3, #0
   3dbb0:	beq	3dc18 <flatcc_json_parser_build_string@@Base+0x1e8>
   3dbb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3dbb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dbbc:	cmp	r2, r3
   3dbc0:	beq	3dbd4 <flatcc_json_parser_build_string@@Base+0x1a4>
   3dbc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dbc8:	ldrb	r3, [r3]
   3dbcc:	cmp	r3, #34	; 0x22
   3dbd0:	bne	3db1c <flatcc_json_parser_build_string@@Base+0xec>
   3dbd4:	ldr	r3, [fp, #-16]
   3dbd8:	ldr	r3, [r3]
   3dbdc:	mov	r0, r3
   3dbe0:	bl	32418 <flatcc_builder_end_string@@Base>
   3dbe4:	mov	r2, r0
   3dbe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dbec:	str	r2, [r3]
   3dbf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3dbf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3dbf8:	ldr	r0, [fp, #-16]
   3dbfc:	bl	365a8 <flatcc_verify_union_vector_field@@Base+0x46c>
   3dc00:	mov	r3, r0
   3dc04:	b	3dc2c <flatcc_json_parser_build_string@@Base+0x1fc>
   3dc08:	nop	{0}
   3dc0c:	b	3dc1c <flatcc_json_parser_build_string@@Base+0x1ec>
   3dc10:	nop	{0}
   3dc14:	b	3dc1c <flatcc_json_parser_build_string@@Base+0x1ec>
   3dc18:	nop	{0}
   3dc1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dc20:	mov	r2, #0
   3dc24:	str	r2, [r3]
   3dc28:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dc2c:	mov	r0, r3
   3dc30:	sub	sp, fp, #4
   3dc34:	ldr	fp, [sp]
   3dc38:	add	sp, sp, #4
   3dc3c:	pop	{pc}		; (ldr pc, [sp], #4)

0003dc40 <flatcc_json_parser_prepare_unions@@Base>:
   3dc40:	str	fp, [sp, #-8]!
   3dc44:	str	lr, [sp, #4]
   3dc48:	add	fp, sp, #4
   3dc4c:	sub	sp, sp, #24
   3dc50:	str	r0, [fp, #-16]
   3dc54:	str	r1, [fp, #-20]	; 0xffffffec
   3dc58:	str	r2, [fp, #-24]	; 0xffffffe8
   3dc5c:	str	r3, [fp, #-28]	; 0xffffffe4
   3dc60:	ldr	r3, [fp, #-16]
   3dc64:	ldr	r0, [r3]
   3dc68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3dc6c:	mov	r3, r2
   3dc70:	lsl	r3, r3, #1
   3dc74:	add	r3, r3, r2
   3dc78:	lsl	r3, r3, #3
   3dc7c:	add	r3, r3, #8
   3dc80:	mov	r1, r3
   3dc84:	bl	2dd18 <flatcc_builder_enter_user_frame@@Base>
   3dc88:	mov	r2, r0
   3dc8c:	ldr	r3, [fp, #4]
   3dc90:	str	r2, [r3]
   3dc94:	ldr	r3, [fp, #4]
   3dc98:	ldr	r3, [r3]
   3dc9c:	cmp	r3, #0
   3dca0:	bne	3dcc0 <flatcc_json_parser_prepare_unions@@Base+0x80>
   3dca4:	mov	r3, #33	; 0x21
   3dca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3dcac:	ldr	r1, [fp, #-20]	; 0xffffffec
   3dcb0:	ldr	r0, [fp, #-16]
   3dcb4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3dcb8:	mov	r3, r0
   3dcbc:	b	3dcf0 <flatcc_json_parser_prepare_unions@@Base+0xb0>
   3dcc0:	ldr	r3, [fp, #-16]
   3dcc4:	ldr	r2, [r3]
   3dcc8:	ldr	r3, [fp, #4]
   3dccc:	ldr	r3, [r3]
   3dcd0:	mov	r1, r3
   3dcd4:	mov	r0, r2
   3dcd8:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3dcdc:	str	r0, [fp, #-8]
   3dce0:	ldr	r3, [fp, #-8]
   3dce4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3dce8:	str	r2, [r3]
   3dcec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dcf0:	mov	r0, r3
   3dcf4:	sub	sp, fp, #4
   3dcf8:	ldr	fp, [sp]
   3dcfc:	add	sp, sp, #4
   3dd00:	pop	{pc}		; (ldr pc, [sp], #4)

0003dd04 <flatcc_json_parser_finalize_unions@@Base>:
   3dd04:	str	fp, [sp, #-8]!
   3dd08:	str	lr, [sp, #4]
   3dd0c:	add	fp, sp, #4
   3dd10:	sub	sp, sp, #24
   3dd14:	str	r0, [fp, #-16]
   3dd18:	str	r1, [fp, #-20]	; 0xffffffec
   3dd1c:	str	r2, [fp, #-24]	; 0xffffffe8
   3dd20:	str	r3, [fp, #-28]	; 0xffffffe4
   3dd24:	ldr	r3, [fp, #-16]
   3dd28:	ldr	r3, [r3]
   3dd2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3dd30:	mov	r0, r3
   3dd34:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3dd38:	str	r0, [fp, #-8]
   3dd3c:	ldr	r3, [fp, #-8]
   3dd40:	ldr	r3, [r3, #4]
   3dd44:	cmp	r3, #0
   3dd48:	beq	3dd64 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3dd4c:	mov	r3, #27
   3dd50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3dd54:	ldr	r1, [fp, #-20]	; 0xffffffec
   3dd58:	ldr	r0, [fp, #-16]
   3dd5c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3dd60:	str	r0, [fp, #-20]	; 0xffffffec
   3dd64:	ldr	r3, [fp, #-16]
   3dd68:	ldr	r3, [r3]
   3dd6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3dd70:	mov	r0, r3
   3dd74:	bl	2de94 <flatcc_builder_exit_user_frame_at@@Base>
   3dd78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dd7c:	mov	r0, r3
   3dd80:	sub	sp, fp, #4
   3dd84:	ldr	fp, [sp]
   3dd88:	add	sp, sp, #4
   3dd8c:	pop	{pc}		; (ldr pc, [sp], #4)

0003dd90 <flatcc_json_parser_union@@Base>:
   3dd90:	str	r4, [sp, #-12]!
   3dd94:	str	fp, [sp, #4]
   3dd98:	str	lr, [sp, #8]
   3dd9c:	add	fp, sp, #8
   3dda0:	sub	sp, sp, #44	; 0x2c
   3dda4:	str	r0, [fp, #-32]	; 0xffffffe0
   3dda8:	str	r1, [fp, #-36]	; 0xffffffdc
   3ddac:	str	r2, [fp, #-40]	; 0xffffffd8
   3ddb0:	str	r3, [fp, #-44]	; 0xffffffd4
   3ddb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ddb8:	ldr	r3, [r3]
   3ddbc:	ldr	r1, [fp, #8]
   3ddc0:	mov	r0, r3
   3ddc4:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3ddc8:	str	r0, [fp, #-16]
   3ddcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3ddd0:	mov	r3, r2
   3ddd4:	lsl	r3, r3, #1
   3ddd8:	add	r3, r3, r2
   3dddc:	lsl	r3, r3, #3
   3dde0:	add	r3, r3, #8
   3dde4:	ldr	r2, [fp, #-16]
   3dde8:	add	r3, r2, r3
   3ddec:	str	r3, [fp, #-20]	; 0xffffffec
   3ddf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ddf4:	ldr	r3, [r3]
   3ddf8:	cmp	r3, #0
   3ddfc:	beq	3de1c <flatcc_json_parser_union@@Base+0x8c>
   3de00:	mov	r3, #28
   3de04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3de08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3de0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3de10:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3de14:	mov	r3, r0
   3de18:	b	3df5c <flatcc_json_parser_union@@Base+0x1cc>
   3de1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de20:	ldrb	r3, [r3, #12]
   3de24:	cmp	r3, #0
   3de28:	bne	3de8c <flatcc_json_parser_union@@Base+0xfc>
   3de2c:	ldr	r3, [fp, #-16]
   3de30:	ldr	r3, [r3, #4]
   3de34:	add	r2, r3, #1
   3de38:	ldr	r3, [fp, #-16]
   3de3c:	str	r2, [r3, #4]
   3de40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3de44:	ldr	r2, [r3, #12]
   3de48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de4c:	str	r2, [r3, #8]
   3de50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3de54:	ldr	r2, [r3, #4]
   3de58:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de5c:	str	r2, [r3, #4]
   3de60:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3de68:	str	r2, [r3]
   3de6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de70:	ldr	r3, [r3]
   3de74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3de78:	mov	r1, r3
   3de7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3de80:	bl	3cf4c <flatcc_json_parser_generic_json@@Base>
   3de84:	str	r0, [fp, #-36]	; 0xffffffdc
   3de88:	b	3df58 <flatcc_json_parser_union@@Base+0x1c8>
   3de8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de90:	ldrb	r3, [r3, #13]
   3de94:	strb	r3, [fp, #-28]	; 0xffffffe4
   3de98:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de9c:	ldrb	r3, [r3, #13]
   3dea0:	cmp	r3, #0
   3dea4:	bne	3dec4 <flatcc_json_parser_union@@Base+0x134>
   3dea8:	mov	r3, #25
   3deac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3deb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3deb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3deb8:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3debc:	mov	r3, r0
   3dec0:	b	3df5c <flatcc_json_parser_union@@Base+0x1cc>
   3dec4:	ldr	r3, [fp, #-16]
   3dec8:	ldr	r3, [r3, #4]
   3decc:	sub	r2, r3, #1
   3ded0:	ldr	r3, [fp, #-16]
   3ded4:	str	r2, [r3, #4]
   3ded8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dedc:	ldrb	r2, [r3, #13]
   3dee0:	sub	r3, fp, #28
   3dee4:	add	r3, r3, #4
   3dee8:	str	r3, [sp]
   3deec:	ldr	r4, [fp, #12]
   3def0:	mov	r3, r2
   3def4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3def8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3defc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3df00:	blx	r4
   3df04:	str	r0, [fp, #-36]	; 0xffffffdc
   3df08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3df0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3df10:	cmp	r2, r3
   3df14:	beq	3df58 <flatcc_json_parser_union@@Base+0x1c8>
   3df18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3df1c:	ldr	r0, [r3]
   3df20:	ldrh	r1, [fp, #4]
   3df24:	sub	r3, fp, #28
   3df28:	ldm	r3, {r2, r3}
   3df2c:	bl	315f8 <flatcc_builder_table_add_union@@Base>
   3df30:	mov	r3, r0
   3df34:	cmp	r3, #0
   3df38:	beq	3df58 <flatcc_json_parser_union@@Base+0x1c8>
   3df3c:	mov	r3, #28
   3df40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3df44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3df48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3df4c:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3df50:	mov	r3, r0
   3df54:	b	3df5c <flatcc_json_parser_union@@Base+0x1cc>
   3df58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3df5c:	mov	r0, r3
   3df60:	sub	sp, fp, #8
   3df64:	ldr	r4, [sp]
   3df68:	ldr	fp, [sp, #4]
   3df6c:	add	sp, sp, #8
   3df70:	pop	{pc}		; (ldr pc, [sp], #4)

0003df74 <flatcc_json_parser_union_type@@Base>:
   3df74:	str	r4, [sp, #-12]!
   3df78:	str	fp, [sp, #4]
   3df7c:	str	lr, [sp, #8]
   3df80:	add	fp, sp, #8
   3df84:	sub	sp, sp, #60	; 0x3c
   3df88:	str	r0, [fp, #-48]	; 0xffffffd0
   3df8c:	str	r1, [fp, #-52]	; 0xffffffcc
   3df90:	str	r2, [fp, #-56]	; 0xffffffc8
   3df94:	str	r3, [fp, #-60]	; 0xffffffc4
   3df98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3df9c:	ldr	r3, [r3]
   3dfa0:	ldr	r1, [fp, #8]
   3dfa4:	mov	r0, r3
   3dfa8:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3dfac:	str	r0, [fp, #-16]
   3dfb0:	ldr	r3, [fp, #-16]
   3dfb4:	add	r1, r3, #8
   3dfb8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3dfbc:	mov	r3, r2
   3dfc0:	lsl	r3, r3, #1
   3dfc4:	add	r3, r3, r2
   3dfc8:	lsl	r3, r3, #3
   3dfcc:	add	r3, r1, r3
   3dfd0:	str	r3, [fp, #-20]	; 0xffffffec
   3dfd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dfd8:	ldrb	r3, [r3, #12]
   3dfdc:	cmp	r3, #0
   3dfe0:	beq	3e000 <flatcc_json_parser_union_type@@Base+0x8c>
   3dfe4:	mov	r3, #28
   3dfe8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3dfec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3dff0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3dff4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3dff8:	mov	r3, r0
   3dffc:	b	3e1d4 <flatcc_json_parser_union_type@@Base+0x260>
   3e000:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e004:	mov	r2, #1
   3e008:	strb	r2, [r3, #12]
   3e00c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e010:	str	r3, [fp, #-24]	; 0xffffffe8
   3e014:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e018:	add	r3, r3, #13
   3e01c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3e020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3e024:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3e028:	bl	37308 <flatcc_verify_union_vector_field@@Base+0x11cc>
   3e02c:	str	r0, [fp, #-52]	; 0xffffffcc
   3e030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e034:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e038:	cmp	r2, r3
   3e03c:	bne	3e064 <flatcc_json_parser_union_type@@Base+0xf0>
   3e040:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e044:	add	r3, r3, #13
   3e048:	str	r3, [sp]
   3e04c:	ldr	r3, [fp, #12]
   3e050:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3e054:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3e058:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3e05c:	bl	379e4 <flatcc_verify_union_vector_field@@Base+0x18a8>
   3e060:	str	r0, [fp, #-52]	; 0xffffffcc
   3e064:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e068:	ldr	r3, [r3]
   3e06c:	cmp	r3, #0
   3e070:	bne	3e0a8 <flatcc_json_parser_union_type@@Base+0x134>
   3e074:	ldr	r3, [fp, #-16]
   3e078:	ldr	r3, [r3, #4]
   3e07c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e080:	ldrb	r2, [r2, #13]
   3e084:	cmp	r2, #0
   3e088:	movne	r2, #1
   3e08c:	moveq	r2, #0
   3e090:	uxtb	r2, r2
   3e094:	add	r2, r3, r2
   3e098:	ldr	r3, [fp, #-16]
   3e09c:	str	r2, [r3, #4]
   3e0a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e0a4:	b	3e1d4 <flatcc_json_parser_union_type@@Base+0x260>
   3e0a8:	ldr	r3, [fp, #-16]
   3e0ac:	ldr	r3, [r3, #4]
   3e0b0:	cmp	r3, #0
   3e0b4:	bne	3e0d8 <flatcc_json_parser_union_type@@Base+0x164>
   3e0b8:	ldr	r3, [pc, #300]	; 3e1ec <flatcc_json_parser_union_type@@Base+0x278>
   3e0bc:	add	r3, pc, r3
   3e0c0:	movw	r2, #965	; 0x3c5
   3e0c4:	ldr	r1, [pc, #292]	; 3e1f0 <flatcc_json_parser_union_type@@Base+0x27c>
   3e0c8:	add	r1, pc, r1
   3e0cc:	ldr	r0, [pc, #288]	; 3e1f4 <flatcc_json_parser_union_type@@Base+0x280>
   3e0d0:	add	r0, pc, r0
   3e0d4:	bl	145e8 <__assert_fail@plt>
   3e0d8:	ldr	r3, [fp, #-16]
   3e0dc:	ldr	r3, [r3, #4]
   3e0e0:	sub	r2, r3, #1
   3e0e4:	ldr	r3, [fp, #-16]
   3e0e8:	str	r2, [r3, #4]
   3e0ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e0f0:	ldr	r3, [r3, #12]
   3e0f4:	str	r3, [fp, #-28]	; 0xffffffe4
   3e0f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e0fc:	ldr	r3, [r3, #4]
   3e100:	str	r3, [fp, #-32]	; 0xffffffe0
   3e104:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e108:	ldr	r2, [r3, #8]
   3e10c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e110:	str	r2, [r3, #12]
   3e114:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e118:	ldr	r2, [r3, #4]
   3e11c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e120:	str	r2, [r3, #4]
   3e124:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e128:	ldrb	r3, [r3, #13]
   3e12c:	strb	r3, [fp, #-40]	; 0xffffffd8
   3e130:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e134:	ldr	r1, [r3]
   3e138:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e13c:	ldrb	r2, [r3, #13]
   3e140:	sub	r3, fp, #40	; 0x28
   3e144:	add	r3, r3, #4
   3e148:	str	r3, [sp]
   3e14c:	ldr	r4, [fp, #16]
   3e150:	mov	r3, r2
   3e154:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3e158:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3e15c:	blx	r4
   3e160:	mov	r2, r0
   3e164:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3e168:	cmp	r3, r2
   3e16c:	bne	3e178 <flatcc_json_parser_union_type@@Base+0x204>
   3e170:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3e174:	b	3e1d4 <flatcc_json_parser_union_type@@Base+0x260>
   3e178:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e17c:	ldr	r0, [r3]
   3e180:	ldrh	r1, [fp, #4]
   3e184:	sub	r3, fp, #40	; 0x28
   3e188:	ldm	r3, {r2, r3}
   3e18c:	bl	315f8 <flatcc_builder_table_add_union@@Base>
   3e190:	mov	r3, r0
   3e194:	cmp	r3, #0
   3e198:	beq	3e1b8 <flatcc_json_parser_union_type@@Base+0x244>
   3e19c:	mov	r3, #28
   3e1a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3e1a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3e1a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3e1ac:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3e1b0:	mov	r3, r0
   3e1b4:	b	3e1d4 <flatcc_json_parser_union_type@@Base+0x260>
   3e1b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e1bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e1c0:	str	r2, [r3, #12]
   3e1c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e1c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3e1cc:	str	r2, [r3, #4]
   3e1d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e1d4:	mov	r0, r3
   3e1d8:	sub	sp, fp, #8
   3e1dc:	ldr	r4, [sp]
   3e1e0:	ldr	fp, [sp, #4]
   3e1e4:	add	sp, sp, #8
   3e1e8:	pop	{pc}		; (ldr pc, [sp], #4)
   3e1ec:	andeq	r5, r1, r0, lsr #32
   3e1f0:	andeq	r4, r1, r4, lsr fp
   3e1f4:	muleq	r1, r0, fp
   3e1f8:	str	r4, [sp, #-12]!
   3e1fc:	str	fp, [sp, #4]
   3e200:	str	lr, [sp, #8]
   3e204:	add	fp, sp, #8
   3e208:	sub	sp, sp, #52	; 0x34
   3e20c:	str	r0, [fp, #-40]	; 0xffffffd8
   3e210:	str	r1, [fp, #-44]	; 0xffffffd4
   3e214:	str	r2, [fp, #-48]	; 0xffffffd0
   3e218:	str	r3, [fp, #-52]	; 0xffffffcc
   3e21c:	mov	r3, #0
   3e220:	str	r3, [fp, #-28]	; 0xffffffe4
   3e224:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e228:	ldr	r3, [r3]
   3e22c:	mov	r0, r3
   3e230:	bl	2fd40 <flatcc_builder_start_offset_vector@@Base>
   3e234:	mov	r3, r0
   3e238:	cmp	r3, #0
   3e23c:	bne	3e3fc <flatcc_json_parser_union_type@@Base+0x488>
   3e240:	sub	r3, fp, #32
   3e244:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e248:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3e24c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e250:	bl	36964 <flatcc_verify_union_vector_field@@Base+0x828>
   3e254:	str	r0, [fp, #-44]	; 0xffffffd4
   3e258:	mov	r3, #0
   3e25c:	str	r3, [fp, #-16]
   3e260:	b	3e348 <flatcc_json_parser_union_type@@Base+0x3d4>
   3e264:	ldr	r2, [fp, #-16]
   3e268:	ldr	r3, [fp, #4]
   3e26c:	cmp	r2, r3
   3e270:	bne	3e290 <flatcc_json_parser_union_type@@Base+0x31c>
   3e274:	mov	r3, #30
   3e278:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e27c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3e280:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e284:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3e288:	mov	r3, r0
   3e28c:	b	3e430 <flatcc_json_parser_union_type@@Base+0x4bc>
   3e290:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e294:	ldr	r3, [r3]
   3e298:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3e29c:	mov	r0, r3
   3e2a0:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3e2a4:	str	r0, [fp, #-20]	; 0xffffffec
   3e2a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e2ac:	ldr	r3, [fp, #-16]
   3e2b0:	add	r3, r2, r3
   3e2b4:	ldrb	r2, [r3]
   3e2b8:	sub	r3, fp, #28
   3e2bc:	str	r3, [sp]
   3e2c0:	ldr	r4, [fp, #12]
   3e2c4:	mov	r3, r2
   3e2c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e2cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3e2d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e2d4:	blx	r4
   3e2d8:	str	r0, [fp, #-44]	; 0xffffffd4
   3e2dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3e2e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e2e4:	cmp	r2, r3
   3e2e8:	bne	3e2f4 <flatcc_json_parser_union_type@@Base+0x380>
   3e2ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3e2f0:	b	3e430 <flatcc_json_parser_union_type@@Base+0x4bc>
   3e2f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e2f8:	ldr	r3, [r3]
   3e2fc:	mov	r1, #1
   3e300:	mov	r0, r3
   3e304:	bl	2f584 <flatcc_builder_extend_offset_vector@@Base>
   3e308:	str	r0, [fp, #-24]	; 0xffffffe8
   3e30c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e310:	cmp	r3, #0
   3e314:	beq	3e404 <flatcc_json_parser_union_type@@Base+0x490>
   3e318:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e31c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e320:	str	r2, [r3]
   3e324:	sub	r3, fp, #32
   3e328:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e32c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3e330:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e334:	bl	36a58 <flatcc_verify_union_vector_field@@Base+0x91c>
   3e338:	str	r0, [fp, #-44]	; 0xffffffd4
   3e33c:	ldr	r3, [fp, #-16]
   3e340:	add	r3, r3, #1
   3e344:	str	r3, [fp, #-16]
   3e348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e34c:	cmp	r3, #0
   3e350:	bne	3e264 <flatcc_json_parser_union_type@@Base+0x2f0>
   3e354:	ldr	r2, [fp, #-16]
   3e358:	ldr	r3, [fp, #4]
   3e35c:	cmp	r2, r3
   3e360:	beq	3e380 <flatcc_json_parser_union_type@@Base+0x40c>
   3e364:	mov	r3, #30
   3e368:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e36c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3e370:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e374:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3e378:	mov	r3, r0
   3e37c:	b	3e430 <flatcc_json_parser_union_type@@Base+0x4bc>
   3e380:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e384:	ldr	r3, [r3]
   3e388:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3e38c:	mov	r0, r3
   3e390:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3e394:	str	r0, [fp, #-20]	; 0xffffffec
   3e398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e39c:	ldr	r3, [r3]
   3e3a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e3a4:	mov	r0, r3
   3e3a8:	bl	314f4 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3e3ac:	mov	r3, r0
   3e3b0:	str	r3, [fp, #-28]	; 0xffffffe4
   3e3b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e3b8:	cmp	r3, #0
   3e3bc:	beq	3e40c <flatcc_json_parser_union_type@@Base+0x498>
   3e3c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e3c4:	ldr	r3, [r3]
   3e3c8:	ldrh	r2, [fp, #8]
   3e3cc:	mov	r1, r2
   3e3d0:	mov	r0, r3
   3e3d4:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   3e3d8:	str	r0, [fp, #-24]	; 0xffffffe8
   3e3dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e3e0:	cmp	r3, #0
   3e3e4:	beq	3e414 <flatcc_json_parser_union_type@@Base+0x4a0>
   3e3e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e3ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e3f0:	str	r2, [r3]
   3e3f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3e3f8:	b	3e430 <flatcc_json_parser_union_type@@Base+0x4bc>
   3e3fc:	nop	{0}
   3e400:	b	3e418 <flatcc_json_parser_union_type@@Base+0x4a4>
   3e404:	nop	{0}
   3e408:	b	3e418 <flatcc_json_parser_union_type@@Base+0x4a4>
   3e40c:	nop	{0}
   3e410:	b	3e418 <flatcc_json_parser_union_type@@Base+0x4a4>
   3e414:	nop	{0}
   3e418:	mov	r3, #33	; 0x21
   3e41c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e420:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3e424:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e428:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3e42c:	mov	r3, r0
   3e430:	mov	r0, r3
   3e434:	sub	sp, fp, #8
   3e438:	ldr	r4, [sp]
   3e43c:	ldr	fp, [sp, #4]
   3e440:	add	sp, sp, #8
   3e444:	pop	{pc}		; (ldr pc, [sp], #4)

0003e448 <flatcc_json_parser_union_vector@@Base>:
   3e448:	str	fp, [sp, #-8]!
   3e44c:	str	lr, [sp, #4]
   3e450:	add	fp, sp, #4
   3e454:	sub	sp, sp, #40	; 0x28
   3e458:	str	r0, [fp, #-16]
   3e45c:	str	r1, [fp, #-20]	; 0xffffffec
   3e460:	str	r2, [fp, #-24]	; 0xffffffe8
   3e464:	str	r3, [fp, #-28]	; 0xffffffe4
   3e468:	ldr	r3, [fp, #-16]
   3e46c:	ldr	r3, [r3]
   3e470:	ldr	r1, [fp, #8]
   3e474:	mov	r0, r3
   3e478:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3e47c:	str	r0, [fp, #-8]
   3e480:	ldr	r3, [fp, #-8]
   3e484:	add	r1, r3, #8
   3e488:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e48c:	mov	r3, r2
   3e490:	lsl	r3, r3, #1
   3e494:	add	r3, r3, r2
   3e498:	lsl	r3, r3, #3
   3e49c:	add	r3, r1, r3
   3e4a0:	str	r3, [fp, #-12]
   3e4a4:	ldr	r3, [fp, #-12]
   3e4a8:	ldr	r3, [r3]
   3e4ac:	cmp	r3, #0
   3e4b0:	beq	3e4d0 <flatcc_json_parser_union_vector@@Base+0x88>
   3e4b4:	mov	r3, #28
   3e4b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e4bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e4c0:	ldr	r0, [fp, #-16]
   3e4c4:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3e4c8:	mov	r3, r0
   3e4cc:	b	3e594 <flatcc_json_parser_union_vector@@Base+0x14c>
   3e4d0:	ldr	r3, [fp, #-12]
   3e4d4:	ldrb	r3, [r3, #12]
   3e4d8:	cmp	r3, #0
   3e4dc:	bne	3e540 <flatcc_json_parser_union_vector@@Base+0xf8>
   3e4e0:	ldr	r3, [fp, #-8]
   3e4e4:	ldr	r3, [r3, #4]
   3e4e8:	add	r2, r3, #1
   3e4ec:	ldr	r3, [fp, #-8]
   3e4f0:	str	r2, [r3, #4]
   3e4f4:	ldr	r3, [fp, #-16]
   3e4f8:	ldr	r2, [r3, #12]
   3e4fc:	ldr	r3, [fp, #-12]
   3e500:	str	r2, [r3, #8]
   3e504:	ldr	r3, [fp, #-16]
   3e508:	ldr	r2, [r3, #4]
   3e50c:	ldr	r3, [fp, #-12]
   3e510:	str	r2, [r3, #4]
   3e514:	ldr	r3, [fp, #-12]
   3e518:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e51c:	str	r2, [r3]
   3e520:	ldr	r3, [fp, #-12]
   3e524:	ldr	r3, [r3]
   3e528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e52c:	mov	r1, r3
   3e530:	ldr	r0, [fp, #-16]
   3e534:	bl	3cf4c <flatcc_json_parser_generic_json@@Base>
   3e538:	str	r0, [fp, #-20]	; 0xffffffec
   3e53c:	b	3e590 <flatcc_json_parser_union_vector@@Base+0x148>
   3e540:	ldr	r3, [fp, #-8]
   3e544:	ldr	r3, [r3, #4]
   3e548:	sub	r2, r3, #1
   3e54c:	ldr	r3, [fp, #-8]
   3e550:	str	r2, [r3, #4]
   3e554:	ldr	r3, [fp, #-12]
   3e558:	ldr	r1, [r3, #20]
   3e55c:	ldr	r3, [fp, #-12]
   3e560:	ldr	r3, [r3, #16]
   3e564:	ldr	r2, [fp, #12]
   3e568:	str	r2, [sp, #8]
   3e56c:	ldrh	r2, [fp, #4]
   3e570:	str	r2, [sp, #4]
   3e574:	str	r3, [sp]
   3e578:	mov	r3, r1
   3e57c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e580:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e584:	ldr	r0, [fp, #-16]
   3e588:	bl	3e1f8 <flatcc_json_parser_union_type@@Base+0x284>
   3e58c:	str	r0, [fp, #-20]	; 0xffffffec
   3e590:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e594:	mov	r0, r3
   3e598:	sub	sp, fp, #4
   3e59c:	ldr	fp, [sp]
   3e5a0:	add	sp, sp, #4
   3e5a4:	pop	{pc}		; (ldr pc, [sp], #4)

0003e5a8 <flatcc_json_parser_union_type_vector@@Base>:
   3e5a8:	str	fp, [sp, #-8]!
   3e5ac:	str	lr, [sp, #4]
   3e5b0:	add	fp, sp, #4
   3e5b4:	sub	sp, sp, #88	; 0x58
   3e5b8:	str	r0, [fp, #-64]	; 0xffffffc0
   3e5bc:	str	r1, [fp, #-68]	; 0xffffffbc
   3e5c0:	str	r2, [fp, #-72]	; 0xffffffb8
   3e5c4:	str	r3, [fp, #-76]	; 0xffffffb4
   3e5c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e5cc:	ldr	r3, [r3]
   3e5d0:	ldr	r1, [fp, #8]
   3e5d4:	mov	r0, r3
   3e5d8:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3e5dc:	str	r0, [fp, #-8]
   3e5e0:	ldr	r3, [fp, #-8]
   3e5e4:	add	r1, r3, #8
   3e5e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3e5ec:	mov	r3, r2
   3e5f0:	lsl	r3, r3, #1
   3e5f4:	add	r3, r3, r2
   3e5f8:	lsl	r3, r3, #3
   3e5fc:	add	r3, r1, r3
   3e600:	str	r3, [fp, #-12]
   3e604:	ldr	r3, [fp, #-12]
   3e608:	ldrb	r3, [r3, #12]
   3e60c:	cmp	r3, #0
   3e610:	beq	3e630 <flatcc_json_parser_union_type_vector@@Base+0x88>
   3e614:	mov	r3, #28
   3e618:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e61c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e620:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e624:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3e628:	mov	r3, r0
   3e62c:	b	3ea08 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3e630:	ldr	r3, [fp, #-12]
   3e634:	mov	r2, #1
   3e638:	strb	r2, [r3, #12]
   3e63c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e640:	ldr	r0, [r3]
   3e644:	mvn	r3, #0
   3e648:	mov	r2, #1
   3e64c:	mov	r1, #1
   3e650:	bl	2fc84 <flatcc_builder_start_vector@@Base>
   3e654:	mov	r3, r0
   3e658:	cmp	r3, #0
   3e65c:	bne	3e9cc <flatcc_json_parser_union_type_vector@@Base+0x424>
   3e660:	sub	r3, fp, #56	; 0x38
   3e664:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e668:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e66c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e670:	bl	36964 <flatcc_verify_union_vector_field@@Base+0x828>
   3e674:	str	r0, [fp, #-68]	; 0xffffffbc
   3e678:	b	3e794 <flatcc_json_parser_union_type_vector@@Base+0x1ec>
   3e67c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e680:	ldr	r3, [r3]
   3e684:	mov	r1, #1
   3e688:	mov	r0, r3
   3e68c:	bl	2f320 <flatcc_builder_extend_vector@@Base>
   3e690:	str	r0, [fp, #-16]
   3e694:	ldr	r3, [fp, #-16]
   3e698:	cmp	r3, #0
   3e69c:	beq	3e9d4 <flatcc_json_parser_union_type_vector@@Base+0x42c>
   3e6a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3e6a4:	str	r3, [fp, #-20]	; 0xffffffec
   3e6a8:	sub	r3, fp, #57	; 0x39
   3e6ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e6b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e6b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e6b8:	bl	37308 <flatcc_verify_union_vector_field@@Base+0x11cc>
   3e6bc:	str	r0, [fp, #-68]	; 0xffffffbc
   3e6c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e6c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3e6c8:	cmp	r2, r3
   3e6cc:	bne	3e718 <flatcc_json_parser_union_type_vector@@Base+0x170>
   3e6d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3e6d4:	str	r3, [fp, #-20]	; 0xffffffec
   3e6d8:	sub	r3, fp, #57	; 0x39
   3e6dc:	str	r3, [sp]
   3e6e0:	ldr	r3, [fp, #12]
   3e6e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e6e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e6ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e6f0:	bl	379e4 <flatcc_verify_union_vector_field@@Base+0x18a8>
   3e6f4:	str	r0, [fp, #-68]	; 0xffffffbc
   3e6f8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3e6fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e700:	cmp	r2, r3
   3e704:	beq	3e9dc <flatcc_json_parser_union_type_vector@@Base+0x434>
   3e708:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3e70c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3e710:	cmp	r2, r3
   3e714:	beq	3e9dc <flatcc_json_parser_union_type_vector@@Base+0x434>
   3e718:	ldrb	r2, [fp, #-57]	; 0xffffffc7
   3e71c:	ldr	r3, [fp, #20]
   3e720:	mov	r0, r2
   3e724:	blx	r3
   3e728:	mov	r3, r0
   3e72c:	cmp	r3, #0
   3e730:	bne	3e76c <flatcc_json_parser_union_type_vector@@Base+0x1c4>
   3e734:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e738:	ldr	r3, [r3, #8]
   3e73c:	and	r3, r3, #1
   3e740:	cmp	r3, #0
   3e744:	bne	3e764 <flatcc_json_parser_union_type_vector@@Base+0x1bc>
   3e748:	mov	r3, #15
   3e74c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e750:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e754:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e758:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3e75c:	mov	r3, r0
   3e760:	b	3ea08 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3e764:	mov	r3, #0
   3e768:	strb	r3, [fp, #-57]	; 0xffffffc7
   3e76c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   3e770:	mov	r1, r3
   3e774:	ldr	r0, [fp, #-16]
   3e778:	bl	363a8 <flatcc_verify_union_vector_field@@Base+0x26c>
   3e77c:	sub	r3, fp, #56	; 0x38
   3e780:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e784:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e788:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e78c:	bl	36a58 <flatcc_verify_union_vector_field@@Base+0x91c>
   3e790:	str	r0, [fp, #-68]	; 0xffffffbc
   3e794:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3e798:	cmp	r3, #0
   3e79c:	bne	3e67c <flatcc_json_parser_union_type_vector@@Base+0xd4>
   3e7a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e7a4:	ldr	r3, [r3]
   3e7a8:	mov	r0, r3
   3e7ac:	bl	31058 <flatcc_builder_vector_count@@Base>
   3e7b0:	str	r0, [fp, #-24]	; 0xffffffe8
   3e7b4:	ldr	r3, [fp, #-12]
   3e7b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e7bc:	str	r2, [r3, #16]
   3e7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e7c4:	str	r3, [fp, #-28]	; 0xffffffe4
   3e7c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e7cc:	ldr	r3, [r3]
   3e7d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3e7d4:	mov	r0, r3
   3e7d8:	bl	2dd18 <flatcc_builder_enter_user_frame@@Base>
   3e7dc:	str	r0, [fp, #-32]	; 0xffffffe0
   3e7e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e7e4:	ldr	r3, [r3]
   3e7e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3e7ec:	mov	r0, r3
   3e7f0:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3e7f4:	str	r0, [fp, #-36]	; 0xffffffdc
   3e7f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e7fc:	ldr	r3, [r3]
   3e800:	mov	r0, r3
   3e804:	bl	31084 <flatcc_builder_vector_edit@@Base>
   3e808:	mov	r3, r0
   3e80c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e810:	mov	r1, r3
   3e814:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3e818:	bl	1451c <memcpy@plt>
   3e81c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e820:	ldr	r3, [r3]
   3e824:	mov	r0, r3
   3e828:	bl	30f80 <flatcc_builder_end_vector@@Base>
   3e82c:	str	r0, [fp, #-40]	; 0xffffffd8
   3e830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e834:	cmp	r3, #0
   3e838:	beq	3e9e4 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3e83c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e840:	ldr	r2, [r3]
   3e844:	ldrh	r3, [fp, #4]
   3e848:	sub	r3, r3, #1
   3e84c:	mov	r1, r3
   3e850:	mov	r0, r2
   3e854:	bl	327cc <flatcc_builder_table_add_offset@@Base>
   3e858:	str	r0, [fp, #-44]	; 0xffffffd4
   3e85c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3e860:	cmp	r3, #0
   3e864:	beq	3e9ec <flatcc_json_parser_union_type_vector@@Base+0x444>
   3e868:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3e86c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e870:	str	r2, [r3]
   3e874:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e878:	ldr	r3, [r3]
   3e87c:	ldr	r1, [fp, #8]
   3e880:	mov	r0, r3
   3e884:	bl	2df40 <flatcc_builder_get_user_frame_ptr@@Base>
   3e888:	str	r0, [fp, #-8]
   3e88c:	ldr	r3, [fp, #-8]
   3e890:	add	r1, r3, #8
   3e894:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3e898:	mov	r3, r2
   3e89c:	lsl	r3, r3, #1
   3e8a0:	add	r3, r3, r2
   3e8a4:	lsl	r3, r3, #3
   3e8a8:	add	r3, r1, r3
   3e8ac:	str	r3, [fp, #-12]
   3e8b0:	ldr	r3, [fp, #-12]
   3e8b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3e8b8:	str	r2, [r3, #20]
   3e8bc:	ldr	r3, [fp, #-12]
   3e8c0:	ldr	r3, [r3]
   3e8c4:	cmp	r3, #0
   3e8c8:	bne	3e8e8 <flatcc_json_parser_union_type_vector@@Base+0x340>
   3e8cc:	ldr	r3, [fp, #-8]
   3e8d0:	ldr	r3, [r3, #4]
   3e8d4:	add	r2, r3, #1
   3e8d8:	ldr	r3, [fp, #-8]
   3e8dc:	str	r2, [r3, #4]
   3e8e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3e8e4:	b	3ea08 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3e8e8:	ldr	r3, [fp, #-8]
   3e8ec:	ldr	r3, [r3, #4]
   3e8f0:	cmp	r3, #0
   3e8f4:	bne	3e918 <flatcc_json_parser_union_type_vector@@Base+0x370>
   3e8f8:	ldr	r3, [pc, #284]	; 3ea1c <flatcc_json_parser_union_type_vector@@Base+0x474>
   3e8fc:	add	r3, pc, r3
   3e900:	movw	r2, #1122	; 0x462
   3e904:	ldr	r1, [pc, #276]	; 3ea20 <flatcc_json_parser_union_type_vector@@Base+0x478>
   3e908:	add	r1, pc, r1
   3e90c:	ldr	r0, [pc, #272]	; 3ea24 <flatcc_json_parser_union_type_vector@@Base+0x47c>
   3e910:	add	r0, pc, r0
   3e914:	bl	145e8 <__assert_fail@plt>
   3e918:	ldr	r3, [fp, #-8]
   3e91c:	ldr	r3, [r3, #4]
   3e920:	sub	r2, r3, #1
   3e924:	ldr	r3, [fp, #-8]
   3e928:	str	r2, [r3, #4]
   3e92c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e930:	ldr	r3, [r3, #12]
   3e934:	str	r3, [fp, #-48]	; 0xffffffd0
   3e938:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e93c:	ldr	r3, [r3, #4]
   3e940:	str	r3, [fp, #-52]	; 0xffffffcc
   3e944:	ldr	r3, [fp, #-12]
   3e948:	ldr	r2, [r3, #8]
   3e94c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e950:	str	r2, [r3, #12]
   3e954:	ldr	r3, [fp, #-12]
   3e958:	ldr	r2, [r3, #4]
   3e95c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e960:	str	r2, [r3, #4]
   3e964:	ldr	r3, [fp, #-12]
   3e968:	ldr	r1, [r3]
   3e96c:	ldr	r3, [fp, #16]
   3e970:	str	r3, [sp, #8]
   3e974:	ldrh	r3, [fp, #4]
   3e978:	str	r3, [sp, #4]
   3e97c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e980:	str	r3, [sp]
   3e984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e988:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e98c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e990:	bl	3e1f8 <flatcc_json_parser_union_type@@Base+0x284>
   3e994:	mov	r2, r0
   3e998:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3e99c:	cmp	r3, r2
   3e9a0:	bne	3e9ac <flatcc_json_parser_union_type_vector@@Base+0x404>
   3e9a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3e9a8:	b	3ea08 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3e9ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e9b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e9b4:	str	r2, [r3, #12]
   3e9b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3e9bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3e9c0:	str	r2, [r3, #4]
   3e9c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3e9c8:	b	3ea08 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3e9cc:	nop	{0}
   3e9d0:	b	3e9f0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   3e9d4:	nop	{0}
   3e9d8:	b	3e9f0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   3e9dc:	nop	{0}
   3e9e0:	b	3e9f0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   3e9e4:	nop	{0}
   3e9e8:	b	3e9f0 <flatcc_json_parser_union_type_vector@@Base+0x448>
   3e9ec:	nop	{0}
   3e9f0:	mov	r3, #33	; 0x21
   3e9f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3e9f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e9fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3ea00:	bl	3b7e0 <flatcc_json_parser_set_error@@Base>
   3ea04:	mov	r3, r0
   3ea08:	mov	r0, r3
   3ea0c:	sub	sp, fp, #4
   3ea10:	ldr	fp, [sp]
   3ea14:	add	sp, sp, #4
   3ea18:	pop	{pc}		; (ldr pc, [sp], #4)
   3ea1c:	andeq	r4, r1, r0, lsl #16
   3ea20:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   3ea24:	andeq	r4, r1, r0, asr r3

0003ea28 <flatcc_json_parser_table_as_root@@Base>:
   3ea28:	str	r4, [sp, #-12]!
   3ea2c:	str	fp, [sp, #4]
   3ea30:	str	lr, [sp, #8]
   3ea34:	add	fp, sp, #8
   3ea38:	sub	sp, sp, #76	; 0x4c
   3ea3c:	str	r0, [fp, #-64]	; 0xffffffc0
   3ea40:	str	r1, [fp, #-68]	; 0xffffffbc
   3ea44:	str	r2, [fp, #-72]	; 0xffffffb8
   3ea48:	str	r3, [fp, #-76]	; 0xffffffb4
   3ea4c:	ldr	r3, [fp, #4]
   3ea50:	asr	r3, r3, #1
   3ea54:	and	r3, r3, #2
   3ea58:	str	r3, [fp, #-16]
   3ea5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ea60:	cmp	r3, #0
   3ea64:	bne	3ea70 <flatcc_json_parser_table_as_root@@Base+0x48>
   3ea68:	sub	r3, fp, #56	; 0x38
   3ea6c:	b	3ea74 <flatcc_json_parser_table_as_root@@Base+0x4c>
   3ea70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ea74:	str	r3, [fp, #-68]	; 0xffffffbc
   3ea78:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ea7c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3ea80:	add	r2, r2, r3
   3ea84:	ldr	r3, [fp, #4]
   3ea88:	str	r3, [sp]
   3ea8c:	mov	r3, r2
   3ea90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ea94:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3ea98:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3ea9c:	bl	363f4 <flatcc_verify_union_vector_field@@Base+0x2b8>
   3eaa0:	ldr	r3, [fp, #-16]
   3eaa4:	mov	r2, #0
   3eaa8:	ldr	r1, [fp, #8]
   3eaac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3eab0:	bl	2ee20 <flatcc_builder_start_buffer@@Base>
   3eab4:	mov	r3, r0
   3eab8:	cmp	r3, #0
   3eabc:	beq	3eac8 <flatcc_json_parser_table_as_root@@Base+0xa0>
   3eac0:	mvn	r3, #0
   3eac4:	b	3eb38 <flatcc_json_parser_table_as_root@@Base+0x110>
   3eac8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3eacc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3ead0:	add	r2, r2, r3
   3ead4:	sub	r3, fp, #60	; 0x3c
   3ead8:	ldr	r4, [fp, #12]
   3eadc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   3eae0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3eae4:	blx	r4
   3eae8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3eaec:	ldr	r3, [r3, #20]
   3eaf0:	cmp	r3, #0
   3eaf4:	beq	3eb04 <flatcc_json_parser_table_as_root@@Base+0xdc>
   3eaf8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3eafc:	ldr	r3, [r3, #20]
   3eb00:	b	3eb38 <flatcc_json_parser_table_as_root@@Base+0x110>
   3eb04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3eb08:	mov	r1, r3
   3eb0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3eb10:	bl	2ef90 <flatcc_builder_end_buffer@@Base>
   3eb14:	mov	r3, r0
   3eb18:	cmp	r3, #0
   3eb1c:	bne	3eb28 <flatcc_json_parser_table_as_root@@Base+0x100>
   3eb20:	mvn	r3, #0
   3eb24:	b	3eb38 <flatcc_json_parser_table_as_root@@Base+0x110>
   3eb28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3eb2c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3eb30:	str	r2, [r3, #36]	; 0x24
   3eb34:	mov	r3, #0
   3eb38:	mov	r0, r3
   3eb3c:	sub	sp, fp, #8
   3eb40:	ldr	r4, [sp]
   3eb44:	ldr	fp, [sp, #4]
   3eb48:	add	sp, sp, #8
   3eb4c:	pop	{pc}		; (ldr pc, [sp], #4)

0003eb50 <flatcc_json_parser_struct_as_root@@Base>:
   3eb50:	str	r4, [sp, #-12]!
   3eb54:	str	fp, [sp, #4]
   3eb58:	str	lr, [sp, #8]
   3eb5c:	add	fp, sp, #8
   3eb60:	sub	sp, sp, #76	; 0x4c
   3eb64:	str	r0, [fp, #-64]	; 0xffffffc0
   3eb68:	str	r1, [fp, #-68]	; 0xffffffbc
   3eb6c:	str	r2, [fp, #-72]	; 0xffffffb8
   3eb70:	str	r3, [fp, #-76]	; 0xffffffb4
   3eb74:	ldr	r3, [fp, #4]
   3eb78:	asr	r3, r3, #1
   3eb7c:	and	r3, r3, #2
   3eb80:	str	r3, [fp, #-16]
   3eb84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3eb88:	cmp	r3, #0
   3eb8c:	bne	3eb98 <flatcc_json_parser_struct_as_root@@Base+0x48>
   3eb90:	sub	r3, fp, #56	; 0x38
   3eb94:	b	3eb9c <flatcc_json_parser_struct_as_root@@Base+0x4c>
   3eb98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3eb9c:	str	r3, [fp, #-68]	; 0xffffffbc
   3eba0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3eba4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3eba8:	add	r2, r2, r3
   3ebac:	ldr	r3, [fp, #4]
   3ebb0:	str	r3, [sp]
   3ebb4:	mov	r3, r2
   3ebb8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ebbc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3ebc0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3ebc4:	bl	363f4 <flatcc_verify_union_vector_field@@Base+0x2b8>
   3ebc8:	ldr	r3, [fp, #-16]
   3ebcc:	mov	r2, #0
   3ebd0:	ldr	r1, [fp, #8]
   3ebd4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3ebd8:	bl	2ee20 <flatcc_builder_start_buffer@@Base>
   3ebdc:	mov	r3, r0
   3ebe0:	cmp	r3, #0
   3ebe4:	beq	3ebf0 <flatcc_json_parser_struct_as_root@@Base+0xa0>
   3ebe8:	mvn	r3, #0
   3ebec:	b	3ec60 <flatcc_json_parser_struct_as_root@@Base+0x110>
   3ebf0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ebf4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3ebf8:	add	r2, r2, r3
   3ebfc:	sub	r3, fp, #60	; 0x3c
   3ec00:	ldr	r4, [fp, #12]
   3ec04:	ldr	r1, [fp, #-72]	; 0xffffffb8
   3ec08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3ec0c:	blx	r4
   3ec10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ec14:	ldr	r3, [r3, #20]
   3ec18:	cmp	r3, #0
   3ec1c:	beq	3ec2c <flatcc_json_parser_struct_as_root@@Base+0xdc>
   3ec20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ec24:	ldr	r3, [r3, #20]
   3ec28:	b	3ec60 <flatcc_json_parser_struct_as_root@@Base+0x110>
   3ec2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3ec30:	mov	r1, r3
   3ec34:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3ec38:	bl	2ef90 <flatcc_builder_end_buffer@@Base>
   3ec3c:	mov	r3, r0
   3ec40:	cmp	r3, #0
   3ec44:	bne	3ec50 <flatcc_json_parser_struct_as_root@@Base+0x100>
   3ec48:	mvn	r3, #0
   3ec4c:	b	3ec60 <flatcc_json_parser_struct_as_root@@Base+0x110>
   3ec50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ec54:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ec58:	str	r2, [r3, #36]	; 0x24
   3ec5c:	mov	r3, #0
   3ec60:	mov	r0, r3
   3ec64:	sub	sp, fp, #8
   3ec68:	ldr	r4, [sp]
   3ec6c:	ldr	fp, [sp, #4]
   3ec70:	add	sp, sp, #8
   3ec74:	pop	{pc}		; (ldr pc, [sp], #4)
   3ec78:	push	{fp}		; (str fp, [sp, #-4]!)
   3ec7c:	add	fp, sp, #0
   3ec80:	sub	sp, sp, #12
   3ec84:	mov	r3, r0
   3ec88:	strb	r3, [fp, #-5]
   3ec8c:	ldrb	r3, [fp, #-5]
   3ec90:	mov	r0, r3
   3ec94:	add	sp, fp, #0
   3ec98:	pop	{fp}		; (ldr fp, [sp], #4)
   3ec9c:	bx	lr
   3eca0:	str	fp, [sp, #-8]!
   3eca4:	str	lr, [sp, #4]
   3eca8:	add	fp, sp, #4
   3ecac:	sub	sp, sp, #8
   3ecb0:	str	r0, [fp, #-8]
   3ecb4:	ldr	r3, [fp, #-8]
   3ecb8:	ldrb	r3, [r3]
   3ecbc:	mov	r0, r3
   3ecc0:	bl	3ec78 <flatcc_json_parser_struct_as_root@@Base+0x128>
   3ecc4:	mov	r3, r0
   3ecc8:	mov	r0, r3
   3eccc:	sub	sp, fp, #4
   3ecd0:	ldr	fp, [sp]
   3ecd4:	add	sp, sp, #4
   3ecd8:	pop	{pc}		; (ldr pc, [sp], #4)
   3ecdc:	push	{fp}		; (str fp, [sp, #-4]!)
   3ece0:	add	fp, sp, #0
   3ece4:	sub	sp, sp, #12
   3ece8:	mov	r3, r0
   3ecec:	strh	r3, [fp, #-6]
   3ecf0:	ldrh	r3, [fp, #-6]
   3ecf4:	mov	r0, r3
   3ecf8:	add	sp, fp, #0
   3ecfc:	pop	{fp}		; (ldr fp, [sp], #4)
   3ed00:	bx	lr
   3ed04:	str	fp, [sp, #-8]!
   3ed08:	str	lr, [sp, #4]
   3ed0c:	add	fp, sp, #4
   3ed10:	sub	sp, sp, #8
   3ed14:	str	r0, [fp, #-8]
   3ed18:	ldr	r3, [fp, #-8]
   3ed1c:	ldrh	r3, [r3]
   3ed20:	mov	r0, r3
   3ed24:	bl	3ecdc <flatcc_json_parser_struct_as_root@@Base+0x18c>
   3ed28:	mov	r3, r0
   3ed2c:	mov	r0, r3
   3ed30:	sub	sp, fp, #4
   3ed34:	ldr	fp, [sp]
   3ed38:	add	sp, sp, #4
   3ed3c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ed40:	push	{fp}		; (str fp, [sp, #-4]!)
   3ed44:	add	fp, sp, #0
   3ed48:	sub	sp, sp, #12
   3ed4c:	str	r0, [fp, #-8]
   3ed50:	ldr	r3, [fp, #-8]
   3ed54:	mov	r0, r3
   3ed58:	add	sp, fp, #0
   3ed5c:	pop	{fp}		; (ldr fp, [sp], #4)
   3ed60:	bx	lr
   3ed64:	str	fp, [sp, #-8]!
   3ed68:	str	lr, [sp, #4]
   3ed6c:	add	fp, sp, #4
   3ed70:	sub	sp, sp, #8
   3ed74:	str	r0, [fp, #-8]
   3ed78:	ldr	r3, [fp, #-8]
   3ed7c:	ldr	r3, [r3]
   3ed80:	mov	r0, r3
   3ed84:	bl	3ed40 <flatcc_json_parser_struct_as_root@@Base+0x1f0>
   3ed88:	mov	r3, r0
   3ed8c:	mov	r0, r3
   3ed90:	sub	sp, fp, #4
   3ed94:	ldr	fp, [sp]
   3ed98:	add	sp, sp, #4
   3ed9c:	pop	{pc}		; (ldr pc, [sp], #4)
   3eda0:	push	{fp}		; (str fp, [sp, #-4]!)
   3eda4:	add	fp, sp, #0
   3eda8:	sub	sp, sp, #12
   3edac:	strd	r0, [fp, #-12]
   3edb0:	ldrd	r2, [fp, #-12]
   3edb4:	mov	r0, r2
   3edb8:	mov	r1, r3
   3edbc:	add	sp, fp, #0
   3edc0:	pop	{fp}		; (ldr fp, [sp], #4)
   3edc4:	bx	lr
   3edc8:	str	fp, [sp, #-8]!
   3edcc:	str	lr, [sp, #4]
   3edd0:	add	fp, sp, #4
   3edd4:	sub	sp, sp, #8
   3edd8:	str	r0, [fp, #-8]
   3eddc:	ldr	r3, [fp, #-8]
   3ede0:	ldrd	r2, [r3]
   3ede4:	mov	r0, r2
   3ede8:	mov	r1, r3
   3edec:	bl	3eda0 <flatcc_json_parser_struct_as_root@@Base+0x250>
   3edf0:	mov	r2, r0
   3edf4:	mov	r3, r1
   3edf8:	mov	r0, r2
   3edfc:	mov	r1, r3
   3ee00:	sub	sp, fp, #4
   3ee04:	ldr	fp, [sp]
   3ee08:	add	sp, sp, #4
   3ee0c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ee10:	push	{fp}		; (str fp, [sp, #-4]!)
   3ee14:	add	fp, sp, #0
   3ee18:	sub	sp, sp, #12
   3ee1c:	mov	r3, r0
   3ee20:	strb	r3, [fp, #-5]
   3ee24:	ldrsb	r3, [fp, #-5]
   3ee28:	mov	r0, r3
   3ee2c:	add	sp, fp, #0
   3ee30:	pop	{fp}		; (ldr fp, [sp], #4)
   3ee34:	bx	lr
   3ee38:	str	fp, [sp, #-8]!
   3ee3c:	str	lr, [sp, #4]
   3ee40:	add	fp, sp, #4
   3ee44:	sub	sp, sp, #8
   3ee48:	str	r0, [fp, #-8]
   3ee4c:	ldr	r3, [fp, #-8]
   3ee50:	ldrsb	r3, [r3]
   3ee54:	mov	r0, r3
   3ee58:	bl	3ee10 <flatcc_json_parser_struct_as_root@@Base+0x2c0>
   3ee5c:	mov	r3, r0
   3ee60:	mov	r0, r3
   3ee64:	sub	sp, fp, #4
   3ee68:	ldr	fp, [sp]
   3ee6c:	add	sp, sp, #4
   3ee70:	pop	{pc}		; (ldr pc, [sp], #4)
   3ee74:	push	{fp}		; (str fp, [sp, #-4]!)
   3ee78:	add	fp, sp, #0
   3ee7c:	sub	sp, sp, #12
   3ee80:	mov	r3, r0
   3ee84:	strh	r3, [fp, #-6]
   3ee88:	ldrsh	r3, [fp, #-6]
   3ee8c:	mov	r0, r3
   3ee90:	add	sp, fp, #0
   3ee94:	pop	{fp}		; (ldr fp, [sp], #4)
   3ee98:	bx	lr
   3ee9c:	str	fp, [sp, #-8]!
   3eea0:	str	lr, [sp, #4]
   3eea4:	add	fp, sp, #4
   3eea8:	sub	sp, sp, #8
   3eeac:	str	r0, [fp, #-8]
   3eeb0:	ldr	r3, [fp, #-8]
   3eeb4:	ldrsh	r3, [r3]
   3eeb8:	mov	r0, r3
   3eebc:	bl	3ee74 <flatcc_json_parser_struct_as_root@@Base+0x324>
   3eec0:	mov	r3, r0
   3eec4:	mov	r0, r3
   3eec8:	sub	sp, fp, #4
   3eecc:	ldr	fp, [sp]
   3eed0:	add	sp, sp, #4
   3eed4:	pop	{pc}		; (ldr pc, [sp], #4)
   3eed8:	push	{fp}		; (str fp, [sp, #-4]!)
   3eedc:	add	fp, sp, #0
   3eee0:	sub	sp, sp, #12
   3eee4:	str	r0, [fp, #-8]
   3eee8:	ldr	r3, [fp, #-8]
   3eeec:	mov	r0, r3
   3eef0:	add	sp, fp, #0
   3eef4:	pop	{fp}		; (ldr fp, [sp], #4)
   3eef8:	bx	lr
   3eefc:	str	fp, [sp, #-8]!
   3ef00:	str	lr, [sp, #4]
   3ef04:	add	fp, sp, #4
   3ef08:	sub	sp, sp, #8
   3ef0c:	str	r0, [fp, #-8]
   3ef10:	ldr	r3, [fp, #-8]
   3ef14:	ldr	r3, [r3]
   3ef18:	mov	r0, r3
   3ef1c:	bl	3eed8 <flatcc_json_parser_struct_as_root@@Base+0x388>
   3ef20:	mov	r3, r0
   3ef24:	mov	r0, r3
   3ef28:	sub	sp, fp, #4
   3ef2c:	ldr	fp, [sp]
   3ef30:	add	sp, sp, #4
   3ef34:	pop	{pc}		; (ldr pc, [sp], #4)
   3ef38:	push	{fp}		; (str fp, [sp, #-4]!)
   3ef3c:	add	fp, sp, #0
   3ef40:	sub	sp, sp, #12
   3ef44:	strd	r0, [fp, #-12]
   3ef48:	ldrd	r2, [fp, #-12]
   3ef4c:	mov	r0, r2
   3ef50:	mov	r1, r3
   3ef54:	add	sp, fp, #0
   3ef58:	pop	{fp}		; (ldr fp, [sp], #4)
   3ef5c:	bx	lr
   3ef60:	str	fp, [sp, #-8]!
   3ef64:	str	lr, [sp, #4]
   3ef68:	add	fp, sp, #4
   3ef6c:	sub	sp, sp, #8
   3ef70:	str	r0, [fp, #-8]
   3ef74:	ldr	r3, [fp, #-8]
   3ef78:	ldrd	r2, [r3]
   3ef7c:	mov	r0, r2
   3ef80:	mov	r1, r3
   3ef84:	bl	3ef38 <flatcc_json_parser_struct_as_root@@Base+0x3e8>
   3ef88:	mov	r2, r0
   3ef8c:	mov	r3, r1
   3ef90:	mov	r0, r2
   3ef94:	mov	r1, r3
   3ef98:	sub	sp, fp, #4
   3ef9c:	ldr	fp, [sp]
   3efa0:	add	sp, sp, #4
   3efa4:	pop	{pc}		; (ldr pc, [sp], #4)
   3efa8:	push	{fp}		; (str fp, [sp, #-4]!)
   3efac:	add	fp, sp, #0
   3efb0:	sub	sp, sp, #20
   3efb4:	vstr	s0, [fp, #-16]
   3efb8:	ldr	r3, [fp, #-16]
   3efbc:	str	r3, [fp, #-8]
   3efc0:	ldr	r3, [fp, #-8]
   3efc4:	str	r3, [fp, #-8]
   3efc8:	ldr	r3, [fp, #-8]
   3efcc:	vmov	s15, r3
   3efd0:	vmov.f32	s0, s15
   3efd4:	add	sp, fp, #0
   3efd8:	pop	{fp}		; (ldr fp, [sp], #4)
   3efdc:	bx	lr
   3efe0:	str	fp, [sp, #-8]!
   3efe4:	str	lr, [sp, #4]
   3efe8:	add	fp, sp, #4
   3efec:	sub	sp, sp, #8
   3eff0:	str	r0, [fp, #-8]
   3eff4:	ldr	r3, [fp, #-8]
   3eff8:	vldr	s15, [r3]
   3effc:	vmov.f32	s0, s15
   3f000:	bl	3efa8 <flatcc_json_parser_struct_as_root@@Base+0x458>
   3f004:	vmov.f32	s15, s0
   3f008:	vmov.f32	s0, s15
   3f00c:	sub	sp, fp, #4
   3f010:	ldr	fp, [sp]
   3f014:	add	sp, sp, #4
   3f018:	pop	{pc}		; (ldr pc, [sp], #4)
   3f01c:	push	{fp}		; (str fp, [sp, #-4]!)
   3f020:	add	fp, sp, #0
   3f024:	sub	sp, sp, #20
   3f028:	vstr	d0, [fp, #-20]	; 0xffffffec
   3f02c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3f030:	strd	r2, [fp, #-12]
   3f034:	ldrd	r2, [fp, #-12]
   3f038:	strd	r2, [fp, #-12]
   3f03c:	ldrd	r2, [fp, #-12]
   3f040:	vmov	d7, r2, r3
   3f044:	vmov.f64	d0, d7
   3f048:	add	sp, fp, #0
   3f04c:	pop	{fp}		; (ldr fp, [sp], #4)
   3f050:	bx	lr
   3f054:	str	fp, [sp, #-8]!
   3f058:	str	lr, [sp, #4]
   3f05c:	add	fp, sp, #4
   3f060:	sub	sp, sp, #8
   3f064:	str	r0, [fp, #-8]
   3f068:	ldr	r3, [fp, #-8]
   3f06c:	vldr	d7, [r3]
   3f070:	vmov.f64	d0, d7
   3f074:	bl	3f01c <flatcc_json_parser_struct_as_root@@Base+0x4cc>
   3f078:	vmov.f64	d7, d0
   3f07c:	vmov.f64	d0, d7
   3f080:	sub	sp, fp, #4
   3f084:	ldr	fp, [sp]
   3f088:	add	sp, sp, #4
   3f08c:	pop	{pc}		; (ldr pc, [sp], #4)
   3f090:	push	{fp}		; (str fp, [sp, #-4]!)
   3f094:	add	fp, sp, #0
   3f098:	sub	sp, sp, #12
   3f09c:	mov	r3, r0
   3f0a0:	strb	r3, [fp, #-5]
   3f0a4:	ldrb	r3, [fp, #-5]
   3f0a8:	mov	r0, r3
   3f0ac:	add	sp, fp, #0
   3f0b0:	pop	{fp}		; (ldr fp, [sp], #4)
   3f0b4:	bx	lr
   3f0b8:	str	fp, [sp, #-8]!
   3f0bc:	str	lr, [sp, #4]
   3f0c0:	add	fp, sp, #4
   3f0c4:	sub	sp, sp, #8
   3f0c8:	str	r0, [fp, #-8]
   3f0cc:	ldr	r3, [fp, #-8]
   3f0d0:	ldrb	r3, [r3]
   3f0d4:	mov	r0, r3
   3f0d8:	bl	3f090 <flatcc_json_parser_struct_as_root@@Base+0x540>
   3f0dc:	mov	r3, r0
   3f0e0:	mov	r0, r3
   3f0e4:	sub	sp, fp, #4
   3f0e8:	ldr	fp, [sp]
   3f0ec:	add	sp, sp, #4
   3f0f0:	pop	{pc}		; (ldr pc, [sp], #4)
   3f0f4:	push	{fp}		; (str fp, [sp, #-4]!)
   3f0f8:	add	fp, sp, #0
   3f0fc:	sub	sp, sp, #12
   3f100:	str	r0, [fp, #-8]
   3f104:	ldr	r3, [fp, #-8]
   3f108:	mov	r0, r3
   3f10c:	add	sp, fp, #0
   3f110:	pop	{fp}		; (ldr fp, [sp], #4)
   3f114:	bx	lr
   3f118:	str	fp, [sp, #-8]!
   3f11c:	str	lr, [sp, #4]
   3f120:	add	fp, sp, #4
   3f124:	sub	sp, sp, #8
   3f128:	str	r0, [fp, #-8]
   3f12c:	ldr	r3, [fp, #-8]
   3f130:	ldr	r3, [r3]
   3f134:	mov	r0, r3
   3f138:	bl	3f0f4 <flatcc_json_parser_struct_as_root@@Base+0x5a4>
   3f13c:	mov	r3, r0
   3f140:	mov	r0, r3
   3f144:	sub	sp, fp, #4
   3f148:	ldr	fp, [sp]
   3f14c:	add	sp, sp, #4
   3f150:	pop	{pc}		; (ldr pc, [sp], #4)
   3f154:	push	{fp}		; (str fp, [sp, #-4]!)
   3f158:	add	fp, sp, #0
   3f15c:	sub	sp, sp, #12
   3f160:	str	r0, [fp, #-8]
   3f164:	ldr	r3, [fp, #-8]
   3f168:	mov	r0, r3
   3f16c:	add	sp, fp, #0
   3f170:	pop	{fp}		; (ldr fp, [sp], #4)
   3f174:	bx	lr
   3f178:	str	fp, [sp, #-8]!
   3f17c:	str	lr, [sp, #4]
   3f180:	add	fp, sp, #4
   3f184:	sub	sp, sp, #8
   3f188:	str	r0, [fp, #-8]
   3f18c:	ldr	r3, [fp, #-8]
   3f190:	ldr	r3, [r3]
   3f194:	mov	r0, r3
   3f198:	bl	3f154 <flatcc_json_parser_struct_as_root@@Base+0x604>
   3f19c:	mov	r3, r0
   3f1a0:	mov	r0, r3
   3f1a4:	sub	sp, fp, #4
   3f1a8:	ldr	fp, [sp]
   3f1ac:	add	sp, sp, #4
   3f1b0:	pop	{pc}		; (ldr pc, [sp], #4)
   3f1b4:	push	{fp}		; (str fp, [sp, #-4]!)
   3f1b8:	add	fp, sp, #0
   3f1bc:	sub	sp, sp, #12
   3f1c0:	mov	r3, r0
   3f1c4:	strh	r3, [fp, #-6]
   3f1c8:	ldrh	r3, [fp, #-6]
   3f1cc:	mov	r0, r3
   3f1d0:	add	sp, fp, #0
   3f1d4:	pop	{fp}		; (ldr fp, [sp], #4)
   3f1d8:	bx	lr
   3f1dc:	str	fp, [sp, #-8]!
   3f1e0:	str	lr, [sp, #4]
   3f1e4:	add	fp, sp, #4
   3f1e8:	sub	sp, sp, #8
   3f1ec:	str	r0, [fp, #-8]
   3f1f0:	ldr	r3, [fp, #-8]
   3f1f4:	ldrh	r3, [r3]
   3f1f8:	mov	r0, r3
   3f1fc:	bl	3f1b4 <flatcc_json_parser_struct_as_root@@Base+0x664>
   3f200:	mov	r3, r0
   3f204:	mov	r0, r3
   3f208:	sub	sp, fp, #4
   3f20c:	ldr	fp, [sp]
   3f210:	add	sp, sp, #4
   3f214:	pop	{pc}		; (ldr pc, [sp], #4)
   3f218:	push	{fp}		; (str fp, [sp, #-4]!)
   3f21c:	add	fp, sp, #0
   3f220:	sub	sp, sp, #12
   3f224:	mov	r3, r0
   3f228:	strb	r3, [fp, #-5]
   3f22c:	ldrb	r3, [fp, #-5]
   3f230:	mov	r0, r3
   3f234:	add	sp, fp, #0
   3f238:	pop	{fp}		; (ldr fp, [sp], #4)
   3f23c:	bx	lr
   3f240:	str	fp, [sp, #-8]!
   3f244:	str	lr, [sp, #4]
   3f248:	add	fp, sp, #4
   3f24c:	sub	sp, sp, #8
   3f250:	str	r0, [fp, #-8]
   3f254:	ldr	r3, [fp, #-8]
   3f258:	ldrb	r3, [r3]
   3f25c:	mov	r0, r3
   3f260:	bl	3f218 <flatcc_json_parser_struct_as_root@@Base+0x6c8>
   3f264:	mov	r3, r0
   3f268:	mov	r0, r3
   3f26c:	sub	sp, fp, #4
   3f270:	ldr	fp, [sp]
   3f274:	add	sp, sp, #4
   3f278:	pop	{pc}		; (ldr pc, [sp], #4)
   3f27c:	push	{fp}		; (str fp, [sp, #-4]!)
   3f280:	add	fp, sp, #0
   3f284:	sub	sp, sp, #12
   3f288:	str	r0, [fp, #-8]
   3f28c:	ldr	r3, [fp, #-8]
   3f290:	mov	r0, r3
   3f294:	add	sp, fp, #0
   3f298:	pop	{fp}		; (ldr fp, [sp], #4)
   3f29c:	bx	lr
   3f2a0:	push	{fp}		; (str fp, [sp, #-4]!)
   3f2a4:	add	fp, sp, #0
   3f2a8:	sub	sp, sp, #12
   3f2ac:	str	r0, [fp, #-8]
   3f2b0:	ldr	r3, [fp, #-8]
   3f2b4:	mov	r0, r3
   3f2b8:	add	sp, fp, #0
   3f2bc:	pop	{fp}		; (ldr fp, [sp], #4)
   3f2c0:	bx	lr
   3f2c4:	str	fp, [sp, #-8]!
   3f2c8:	str	lr, [sp, #4]
   3f2cc:	add	fp, sp, #4
   3f2d0:	sub	sp, sp, #8
   3f2d4:	str	r0, [fp, #-8]
   3f2d8:	ldr	r3, [fp, #-8]
   3f2dc:	ldr	r3, [r3]
   3f2e0:	mov	r0, r3
   3f2e4:	bl	3f27c <flatcc_json_parser_struct_as_root@@Base+0x72c>
   3f2e8:	mov	r3, r0
   3f2ec:	mov	r0, r3
   3f2f0:	sub	sp, fp, #4
   3f2f4:	ldr	fp, [sp]
   3f2f8:	add	sp, sp, #4
   3f2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   3f300:	push	{fp}		; (str fp, [sp, #-4]!)
   3f304:	add	fp, sp, #0
   3f308:	sub	sp, sp, #12
   3f30c:	str	r0, [fp, #-8]
   3f310:	str	r1, [fp, #-12]
   3f314:	ldr	r3, [fp, #-8]
   3f318:	ldr	r3, [r3, #36]	; 0x24
   3f31c:	cmp	r3, #0
   3f320:	bne	3f330 <flatcc_json_parser_struct_as_root@@Base+0x7e0>
   3f324:	ldr	r3, [fp, #-8]
   3f328:	ldr	r2, [fp, #-12]
   3f32c:	str	r2, [r3, #36]	; 0x24
   3f330:	nop	{0}
   3f334:	add	sp, fp, #0
   3f338:	pop	{fp}		; (ldr fp, [sp], #4)
   3f33c:	bx	lr
   3f340:	push	{fp}		; (str fp, [sp, #-4]!)
   3f344:	add	fp, sp, #0
   3f348:	sub	sp, sp, #12
   3f34c:	str	r0, [fp, #-8]
   3f350:	ldr	r3, [fp, #-8]
   3f354:	ldr	r3, [r3, #36]	; 0x24
   3f358:	mov	r0, r3
   3f35c:	add	sp, fp, #0
   3f360:	pop	{fp}		; (ldr fp, [sp], #4)
   3f364:	bx	lr
   3f368:	str	fp, [sp, #-8]!
   3f36c:	str	lr, [sp, #4]
   3f370:	add	fp, sp, #4
   3f374:	sub	sp, sp, #8
   3f378:	str	r0, [fp, #-8]
   3f37c:	ldr	r3, [fp, #-8]
   3f380:	ldr	r2, [r3, #20]
   3f384:	ldr	r3, [fp, #-8]
   3f388:	ldr	r3, [r3, #16]
   3f38c:	cmp	r2, r3
   3f390:	bcc	3f3a8 <flatcc_json_parser_struct_as_root@@Base+0x858>
   3f394:	ldr	r3, [fp, #-8]
   3f398:	ldr	r3, [r3, #44]	; 0x2c
   3f39c:	mov	r1, #0
   3f3a0:	ldr	r0, [fp, #-8]
   3f3a4:	blx	r3
   3f3a8:	nop	{0}
   3f3ac:	sub	sp, fp, #4
   3f3b0:	ldr	fp, [sp]
   3f3b4:	add	sp, sp, #4
   3f3b8:	pop	{pc}		; (ldr pc, [sp], #4)
   3f3bc:	str	fp, [sp, #-8]!
   3f3c0:	str	lr, [sp, #4]
   3f3c4:	add	fp, sp, #4
   3f3c8:	sub	sp, sp, #8
   3f3cc:	str	r0, [fp, #-8]
   3f3d0:	str	r1, [fp, #-12]
   3f3d4:	ldr	r3, [fp, #-8]
   3f3d8:	cmp	r3, #0
   3f3dc:	beq	3f400 <flatcc_json_parser_struct_as_root@@Base+0x8b0>
   3f3e0:	mov	r2, #5
   3f3e4:	ldr	r3, [pc, #68]	; 3f430 <flatcc_json_parser_struct_as_root@@Base+0x8e0>
   3f3e8:	add	r3, pc, r3
   3f3ec:	mov	r1, r3
   3f3f0:	ldr	r0, [fp, #-12]
   3f3f4:	bl	1451c <memcpy@plt>
   3f3f8:	mov	r3, #4
   3f3fc:	b	3f41c <flatcc_json_parser_struct_as_root@@Base+0x8cc>
   3f400:	mov	r2, #6
   3f404:	ldr	r3, [pc, #40]	; 3f434 <flatcc_json_parser_struct_as_root@@Base+0x8e4>
   3f408:	add	r3, pc, r3
   3f40c:	mov	r1, r3
   3f410:	ldr	r0, [fp, #-12]
   3f414:	bl	1451c <memcpy@plt>
   3f418:	mov	r3, #5
   3f41c:	mov	r0, r3
   3f420:	sub	sp, fp, #4
   3f424:	ldr	fp, [sp]
   3f428:	add	sp, sp, #4
   3f42c:	pop	{pc}		; (ldr pc, [sp], #4)
   3f430:	andeq	r3, r1, r0, lsl lr
   3f434:	strdeq	r3, [r1], -r8
   3f438:	push	{fp}		; (str fp, [sp, #-4]!)
   3f43c:	add	fp, sp, #0
   3f440:	sub	sp, sp, #20
   3f444:	mov	r3, r0
   3f448:	str	r1, [fp, #-20]	; 0xffffffec
   3f44c:	strb	r3, [fp, #-13]
   3f450:	ldrb	r3, [fp, #-13]
   3f454:	cmp	r3, #99	; 0x63
   3f458:	bls	3f518 <flatcc_json_parser_struct_as_root@@Base+0x9c8>
   3f45c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f460:	add	r3, r3, #3
   3f464:	str	r3, [fp, #-20]	; 0xffffffec
   3f468:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f46c:	mov	r2, #0
   3f470:	strb	r2, [r3]
   3f474:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f478:	sub	r3, r3, #2
   3f47c:	str	r3, [fp, #-20]	; 0xffffffec
   3f480:	ldrb	r2, [fp, #-13]
   3f484:	movw	r3, #34079	; 0x851f
   3f488:	movt	r3, #20971	; 0x51eb
   3f48c:	umull	r1, r3, r3, r2
   3f490:	lsr	r3, r3, #5
   3f494:	mov	r1, #100	; 0x64
   3f498:	mul	r3, r1, r3
   3f49c:	sub	r3, r2, r3
   3f4a0:	uxtb	r3, r3
   3f4a4:	lsl	r3, r3, #1
   3f4a8:	mov	r2, r3
   3f4ac:	ldr	r3, [pc, #332]	; 3f600 <flatcc_json_parser_struct_as_root@@Base+0xab0>
   3f4b0:	add	r3, pc, r3
   3f4b4:	add	r3, r2, r3
   3f4b8:	str	r3, [fp, #-8]
   3f4bc:	ldrb	r2, [fp, #-13]
   3f4c0:	movw	r3, #34079	; 0x851f
   3f4c4:	movt	r3, #20971	; 0x51eb
   3f4c8:	umull	r2, r3, r3, r2
   3f4cc:	lsr	r3, r3, #5
   3f4d0:	strb	r3, [fp, #-13]
   3f4d4:	ldr	r3, [fp, #-8]
   3f4d8:	ldrb	r2, [r3]
   3f4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f4e0:	strb	r2, [r3]
   3f4e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f4e8:	add	r3, r3, #1
   3f4ec:	ldr	r2, [fp, #-8]
   3f4f0:	ldrb	r2, [r2, #1]
   3f4f4:	strb	r2, [r3]
   3f4f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f4fc:	sub	r3, r3, #1
   3f500:	ldrb	r2, [fp, #-13]
   3f504:	add	r2, r2, #48	; 0x30
   3f508:	uxtb	r2, r2
   3f50c:	strb	r2, [r3]
   3f510:	mov	r3, #3
   3f514:	b	3f5f0 <flatcc_json_parser_struct_as_root@@Base+0xaa0>
   3f518:	ldrb	r3, [fp, #-13]
   3f51c:	cmp	r3, #9
   3f520:	bls	3f5c8 <flatcc_json_parser_struct_as_root@@Base+0xa78>
   3f524:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f528:	add	r3, r3, #2
   3f52c:	str	r3, [fp, #-20]	; 0xffffffec
   3f530:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f534:	mov	r2, #0
   3f538:	strb	r2, [r3]
   3f53c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f540:	sub	r3, r3, #2
   3f544:	str	r3, [fp, #-20]	; 0xffffffec
   3f548:	ldrb	r2, [fp, #-13]
   3f54c:	movw	r3, #34079	; 0x851f
   3f550:	movt	r3, #20971	; 0x51eb
   3f554:	umull	r1, r3, r3, r2
   3f558:	lsr	r3, r3, #5
   3f55c:	mov	r1, #100	; 0x64
   3f560:	mul	r3, r1, r3
   3f564:	sub	r3, r2, r3
   3f568:	uxtb	r3, r3
   3f56c:	lsl	r3, r3, #1
   3f570:	mov	r2, r3
   3f574:	ldr	r3, [pc, #136]	; 3f604 <flatcc_json_parser_struct_as_root@@Base+0xab4>
   3f578:	add	r3, pc, r3
   3f57c:	add	r3, r2, r3
   3f580:	str	r3, [fp, #-8]
   3f584:	ldrb	r2, [fp, #-13]
   3f588:	movw	r3, #34079	; 0x851f
   3f58c:	movt	r3, #20971	; 0x51eb
   3f590:	umull	r2, r3, r3, r2
   3f594:	lsr	r3, r3, #5
   3f598:	strb	r3, [fp, #-13]
   3f59c:	ldr	r3, [fp, #-8]
   3f5a0:	ldrb	r2, [r3]
   3f5a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f5a8:	strb	r2, [r3]
   3f5ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f5b0:	add	r3, r3, #1
   3f5b4:	ldr	r2, [fp, #-8]
   3f5b8:	ldrb	r2, [r2, #1]
   3f5bc:	strb	r2, [r3]
   3f5c0:	mov	r3, #2
   3f5c4:	b	3f5f0 <flatcc_json_parser_struct_as_root@@Base+0xaa0>
   3f5c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f5cc:	add	r3, r3, #1
   3f5d0:	mov	r2, #0
   3f5d4:	strb	r2, [r3]
   3f5d8:	ldrb	r3, [fp, #-13]
   3f5dc:	add	r3, r3, #48	; 0x30
   3f5e0:	uxtb	r2, r3
   3f5e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f5e8:	strb	r2, [r3]
   3f5ec:	mov	r3, #1
   3f5f0:	mov	r0, r3
   3f5f4:	add	sp, fp, #0
   3f5f8:	pop	{fp}		; (ldr fp, [sp], #4)
   3f5fc:	bx	lr
   3f600:	andeq	r3, r1, ip, ror ip
   3f604:			; <UNDEFINED> instruction: 0x00013bb4
   3f608:	push	{fp}		; (str fp, [sp, #-4]!)
   3f60c:	add	fp, sp, #0
   3f610:	sub	sp, sp, #20
   3f614:	mov	r3, r0
   3f618:	str	r1, [fp, #-20]	; 0xffffffec
   3f61c:	strh	r3, [fp, #-14]
   3f620:	mov	r3, #0
   3f624:	str	r3, [fp, #-8]
   3f628:	ldrh	r3, [fp, #-14]
   3f62c:	cmp	r3, #1000	; 0x3e8
   3f630:	bcc	3f65c <flatcc_json_parser_struct_as_root@@Base+0xb0c>
   3f634:	ldrh	r3, [fp, #-14]
   3f638:	movw	r2, #9999	; 0x270f
   3f63c:	cmp	r3, r2
   3f640:	bls	3f650 <flatcc_json_parser_struct_as_root@@Base+0xb00>
   3f644:	mov	r3, #5
   3f648:	str	r3, [fp, #-8]
   3f64c:	b	3f694 <flatcc_json_parser_struct_as_root@@Base+0xb44>
   3f650:	mov	r3, #4
   3f654:	str	r3, [fp, #-8]
   3f658:	b	3f694 <flatcc_json_parser_struct_as_root@@Base+0xb44>
   3f65c:	ldrh	r3, [fp, #-14]
   3f660:	cmp	r3, #99	; 0x63
   3f664:	bls	3f674 <flatcc_json_parser_struct_as_root@@Base+0xb24>
   3f668:	mov	r3, #3
   3f66c:	str	r3, [fp, #-8]
   3f670:	b	3f694 <flatcc_json_parser_struct_as_root@@Base+0xb44>
   3f674:	ldrh	r3, [fp, #-14]
   3f678:	cmp	r3, #9
   3f67c:	bls	3f68c <flatcc_json_parser_struct_as_root@@Base+0xb3c>
   3f680:	mov	r3, #2
   3f684:	str	r3, [fp, #-8]
   3f688:	b	3f694 <flatcc_json_parser_struct_as_root@@Base+0xb44>
   3f68c:	mov	r3, #1
   3f690:	str	r3, [fp, #-8]
   3f694:	ldr	r3, [fp, #-8]
   3f698:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f69c:	add	r3, r2, r3
   3f6a0:	str	r3, [fp, #-20]	; 0xffffffec
   3f6a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f6a8:	mov	r2, #0
   3f6ac:	strb	r2, [r3]
   3f6b0:	ldr	r3, [fp, #-8]
   3f6b4:	and	r3, r3, #1
   3f6b8:	cmp	r3, #0
   3f6bc:	beq	3f810 <flatcc_json_parser_struct_as_root@@Base+0xcc0>
   3f6c0:	ldr	r3, [fp, #-8]
   3f6c4:	cmp	r3, #3
   3f6c8:	beq	3f76c <flatcc_json_parser_struct_as_root@@Base+0xc1c>
   3f6cc:	ldr	r3, [fp, #-8]
   3f6d0:	cmp	r3, #5
   3f6d4:	beq	3f6e8 <flatcc_json_parser_struct_as_root@@Base+0xb98>
   3f6d8:	ldr	r3, [fp, #-8]
   3f6dc:	cmp	r3, #1
   3f6e0:	beq	3f7f0 <flatcc_json_parser_struct_as_root@@Base+0xca0>
   3f6e4:	b	3f930 <flatcc_json_parser_struct_as_root@@Base+0xde0>
   3f6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f6ec:	sub	r3, r3, #2
   3f6f0:	str	r3, [fp, #-20]	; 0xffffffec
   3f6f4:	ldrh	r2, [fp, #-14]
   3f6f8:	movw	r3, #34079	; 0x851f
   3f6fc:	movt	r3, #20971	; 0x51eb
   3f700:	umull	r1, r3, r3, r2
   3f704:	lsr	r3, r3, #5
   3f708:	mov	r1, #100	; 0x64
   3f70c:	mul	r3, r1, r3
   3f710:	sub	r3, r2, r3
   3f714:	uxth	r3, r3
   3f718:	lsl	r3, r3, #1
   3f71c:	mov	r2, r3
   3f720:	ldr	r3, [pc, #540]	; 3f944 <flatcc_json_parser_struct_as_root@@Base+0xdf4>
   3f724:	add	r3, pc, r3
   3f728:	add	r3, r2, r3
   3f72c:	str	r3, [fp, #-12]
   3f730:	ldrh	r2, [fp, #-14]
   3f734:	movw	r3, #34079	; 0x851f
   3f738:	movt	r3, #20971	; 0x51eb
   3f73c:	umull	r2, r3, r3, r2
   3f740:	lsr	r3, r3, #5
   3f744:	strh	r3, [fp, #-14]
   3f748:	ldr	r3, [fp, #-12]
   3f74c:	ldrb	r2, [r3]
   3f750:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f754:	strb	r2, [r3]
   3f758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f75c:	add	r3, r3, #1
   3f760:	ldr	r2, [fp, #-12]
   3f764:	ldrb	r2, [r2, #1]
   3f768:	strb	r2, [r3]
   3f76c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f770:	sub	r3, r3, #2
   3f774:	str	r3, [fp, #-20]	; 0xffffffec
   3f778:	ldrh	r2, [fp, #-14]
   3f77c:	movw	r3, #34079	; 0x851f
   3f780:	movt	r3, #20971	; 0x51eb
   3f784:	umull	r1, r3, r3, r2
   3f788:	lsr	r3, r3, #5
   3f78c:	mov	r1, #100	; 0x64
   3f790:	mul	r3, r1, r3
   3f794:	sub	r3, r2, r3
   3f798:	uxth	r3, r3
   3f79c:	lsl	r3, r3, #1
   3f7a0:	mov	r2, r3
   3f7a4:	ldr	r3, [pc, #412]	; 3f948 <flatcc_json_parser_struct_as_root@@Base+0xdf8>
   3f7a8:	add	r3, pc, r3
   3f7ac:	add	r3, r2, r3
   3f7b0:	str	r3, [fp, #-12]
   3f7b4:	ldrh	r2, [fp, #-14]
   3f7b8:	movw	r3, #34079	; 0x851f
   3f7bc:	movt	r3, #20971	; 0x51eb
   3f7c0:	umull	r2, r3, r3, r2
   3f7c4:	lsr	r3, r3, #5
   3f7c8:	strh	r3, [fp, #-14]
   3f7cc:	ldr	r3, [fp, #-12]
   3f7d0:	ldrb	r2, [r3]
   3f7d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f7d8:	strb	r2, [r3]
   3f7dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f7e0:	add	r3, r3, #1
   3f7e4:	ldr	r2, [fp, #-12]
   3f7e8:	ldrb	r2, [r2, #1]
   3f7ec:	strb	r2, [r3]
   3f7f0:	ldrh	r3, [fp, #-14]
   3f7f4:	uxtb	r2, r3
   3f7f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f7fc:	sub	r3, r3, #1
   3f800:	add	r2, r2, #48	; 0x30
   3f804:	uxtb	r2, r2
   3f808:	strb	r2, [r3]
   3f80c:	b	3f930 <flatcc_json_parser_struct_as_root@@Base+0xde0>
   3f810:	ldr	r3, [fp, #-8]
   3f814:	cmp	r3, #2
   3f818:	beq	3f8ac <flatcc_json_parser_struct_as_root@@Base+0xd5c>
   3f81c:	ldr	r3, [fp, #-8]
   3f820:	cmp	r3, #4
   3f824:	bne	3f930 <flatcc_json_parser_struct_as_root@@Base+0xde0>
   3f828:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f82c:	sub	r3, r3, #2
   3f830:	str	r3, [fp, #-20]	; 0xffffffec
   3f834:	ldrh	r2, [fp, #-14]
   3f838:	movw	r3, #34079	; 0x851f
   3f83c:	movt	r3, #20971	; 0x51eb
   3f840:	umull	r1, r3, r3, r2
   3f844:	lsr	r3, r3, #5
   3f848:	mov	r1, #100	; 0x64
   3f84c:	mul	r3, r1, r3
   3f850:	sub	r3, r2, r3
   3f854:	uxth	r3, r3
   3f858:	lsl	r3, r3, #1
   3f85c:	mov	r2, r3
   3f860:	ldr	r3, [pc, #228]	; 3f94c <flatcc_json_parser_struct_as_root@@Base+0xdfc>
   3f864:	add	r3, pc, r3
   3f868:	add	r3, r2, r3
   3f86c:	str	r3, [fp, #-12]
   3f870:	ldrh	r2, [fp, #-14]
   3f874:	movw	r3, #34079	; 0x851f
   3f878:	movt	r3, #20971	; 0x51eb
   3f87c:	umull	r2, r3, r3, r2
   3f880:	lsr	r3, r3, #5
   3f884:	strh	r3, [fp, #-14]
   3f888:	ldr	r3, [fp, #-12]
   3f88c:	ldrb	r2, [r3]
   3f890:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f894:	strb	r2, [r3]
   3f898:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f89c:	add	r3, r3, #1
   3f8a0:	ldr	r2, [fp, #-12]
   3f8a4:	ldrb	r2, [r2, #1]
   3f8a8:	strb	r2, [r3]
   3f8ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f8b0:	sub	r3, r3, #2
   3f8b4:	str	r3, [fp, #-20]	; 0xffffffec
   3f8b8:	ldrh	r2, [fp, #-14]
   3f8bc:	movw	r3, #34079	; 0x851f
   3f8c0:	movt	r3, #20971	; 0x51eb
   3f8c4:	umull	r1, r3, r3, r2
   3f8c8:	lsr	r3, r3, #5
   3f8cc:	mov	r1, #100	; 0x64
   3f8d0:	mul	r3, r1, r3
   3f8d4:	sub	r3, r2, r3
   3f8d8:	uxth	r3, r3
   3f8dc:	lsl	r3, r3, #1
   3f8e0:	mov	r2, r3
   3f8e4:	ldr	r3, [pc, #100]	; 3f950 <flatcc_json_parser_struct_as_root@@Base+0xe00>
   3f8e8:	add	r3, pc, r3
   3f8ec:	add	r3, r2, r3
   3f8f0:	str	r3, [fp, #-12]
   3f8f4:	ldrh	r2, [fp, #-14]
   3f8f8:	movw	r3, #34079	; 0x851f
   3f8fc:	movt	r3, #20971	; 0x51eb
   3f900:	umull	r2, r3, r3, r2
   3f904:	lsr	r3, r3, #5
   3f908:	strh	r3, [fp, #-14]
   3f90c:	ldr	r3, [fp, #-12]
   3f910:	ldrb	r2, [r3]
   3f914:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f918:	strb	r2, [r3]
   3f91c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f920:	add	r3, r3, #1
   3f924:	ldr	r2, [fp, #-12]
   3f928:	ldrb	r2, [r2, #1]
   3f92c:	strb	r2, [r3]
   3f930:	ldr	r3, [fp, #-8]
   3f934:	mov	r0, r3
   3f938:	add	sp, fp, #0
   3f93c:	pop	{fp}		; (ldr fp, [sp], #4)
   3f940:	bx	lr
   3f944:	andeq	r3, r1, r8, lsl #20
   3f948:	andeq	r3, r1, r4, lsl #19
   3f94c:	andeq	r3, r1, r8, asr #17
   3f950:	andeq	r3, r1, r4, asr #16
   3f954:	push	{fp}		; (str fp, [sp, #-4]!)
   3f958:	add	fp, sp, #0
   3f95c:	sub	sp, sp, #20
   3f960:	str	r0, [fp, #-16]
   3f964:	str	r1, [fp, #-20]	; 0xffffffec
   3f968:	mov	r3, #0
   3f96c:	str	r3, [fp, #-8]
   3f970:	ldr	r3, [fp, #-16]
   3f974:	movw	r2, #9999	; 0x270f
   3f978:	cmp	r3, r2
   3f97c:	bls	3fa2c <flatcc_json_parser_struct_as_root@@Base+0xedc>
   3f980:	ldr	r2, [fp, #-16]
   3f984:	movw	r3, #38527	; 0x967f
   3f988:	movt	r3, #152	; 0x98
   3f98c:	cmp	r2, r3
   3f990:	bls	3f9e0 <flatcc_json_parser_struct_as_root@@Base+0xe90>
   3f994:	ldr	r2, [fp, #-16]
   3f998:	movw	r3, #51711	; 0xc9ff
   3f99c:	movt	r3, #15258	; 0x3b9a
   3f9a0:	cmp	r2, r3
   3f9a4:	bls	3f9b4 <flatcc_json_parser_struct_as_root@@Base+0xe64>
   3f9a8:	mov	r3, #10
   3f9ac:	str	r3, [fp, #-8]
   3f9b0:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3f9b4:	ldr	r2, [fp, #-16]
   3f9b8:	movw	r3, #57599	; 0xe0ff
   3f9bc:	movt	r3, #1525	; 0x5f5
   3f9c0:	cmp	r2, r3
   3f9c4:	bls	3f9d4 <flatcc_json_parser_struct_as_root@@Base+0xe84>
   3f9c8:	mov	r3, #9
   3f9cc:	str	r3, [fp, #-8]
   3f9d0:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3f9d4:	mov	r3, #8
   3f9d8:	str	r3, [fp, #-8]
   3f9dc:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3f9e0:	ldr	r2, [fp, #-16]
   3f9e4:	movw	r3, #16959	; 0x423f
   3f9e8:	movt	r3, #15
   3f9ec:	cmp	r2, r3
   3f9f0:	bls	3fa00 <flatcc_json_parser_struct_as_root@@Base+0xeb0>
   3f9f4:	mov	r3, #7
   3f9f8:	str	r3, [fp, #-8]
   3f9fc:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3fa00:	ldr	r2, [fp, #-16]
   3fa04:	movw	r3, #34463	; 0x869f
   3fa08:	movt	r3, #1
   3fa0c:	cmp	r2, r3
   3fa10:	bls	3fa20 <flatcc_json_parser_struct_as_root@@Base+0xed0>
   3fa14:	mov	r3, #6
   3fa18:	str	r3, [fp, #-8]
   3fa1c:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3fa20:	mov	r3, #5
   3fa24:	str	r3, [fp, #-8]
   3fa28:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3fa2c:	ldr	r3, [fp, #-16]
   3fa30:	cmp	r3, #99	; 0x63
   3fa34:	bls	3fa5c <flatcc_json_parser_struct_as_root@@Base+0xf0c>
   3fa38:	ldr	r3, [fp, #-16]
   3fa3c:	cmp	r3, #1000	; 0x3e8
   3fa40:	bcc	3fa50 <flatcc_json_parser_struct_as_root@@Base+0xf00>
   3fa44:	mov	r3, #4
   3fa48:	str	r3, [fp, #-8]
   3fa4c:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3fa50:	mov	r3, #3
   3fa54:	str	r3, [fp, #-8]
   3fa58:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3fa5c:	ldr	r3, [fp, #-16]
   3fa60:	cmp	r3, #9
   3fa64:	bls	3fa74 <flatcc_json_parser_struct_as_root@@Base+0xf24>
   3fa68:	mov	r3, #2
   3fa6c:	str	r3, [fp, #-8]
   3fa70:	b	3fa7c <flatcc_json_parser_struct_as_root@@Base+0xf2c>
   3fa74:	mov	r3, #1
   3fa78:	str	r3, [fp, #-8]
   3fa7c:	ldr	r3, [fp, #-8]
   3fa80:	ldr	r2, [fp, #-20]	; 0xffffffec
   3fa84:	add	r3, r2, r3
   3fa88:	str	r3, [fp, #-20]	; 0xffffffec
   3fa8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fa90:	mov	r2, #0
   3fa94:	strb	r2, [r3]
   3fa98:	ldr	r3, [fp, #-8]
   3fa9c:	and	r3, r3, #1
   3faa0:	cmp	r3, #0
   3faa4:	beq	3fcf0 <flatcc_json_parser_struct_as_root@@Base+0x11a0>
   3faa8:	ldr	r3, [fp, #-8]
   3faac:	sub	r3, r3, #1
   3fab0:	cmp	r3, #8
   3fab4:	addls	pc, pc, r3, lsl #2
   3fab8:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fabc:	b	3fcd0 <flatcc_json_parser_struct_as_root@@Base+0x1180>
   3fac0:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fac4:	b	3fc54 <flatcc_json_parser_struct_as_root@@Base+0x1104>
   3fac8:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3facc:	b	3fbd8 <flatcc_json_parser_struct_as_root@@Base+0x1088>
   3fad0:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fad4:	b	3fb5c <flatcc_json_parser_struct_as_root@@Base+0x100c>
   3fad8:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fadc:	b	3fae0 <flatcc_json_parser_struct_as_root@@Base+0xf90>
   3fae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fae4:	sub	r3, r3, #2
   3fae8:	str	r3, [fp, #-20]	; 0xffffffec
   3faec:	ldr	r2, [fp, #-16]
   3faf0:	movw	r3, #34079	; 0x851f
   3faf4:	movt	r3, #20971	; 0x51eb
   3faf8:	umull	r1, r3, r3, r2
   3fafc:	lsr	r3, r3, #5
   3fb00:	mov	r1, #100	; 0x64
   3fb04:	mul	r3, r1, r3
   3fb08:	sub	r3, r2, r3
   3fb0c:	lsl	r3, r3, #1
   3fb10:	ldr	r2, [pc, #1168]	; 3ffa8 <flatcc_json_parser_struct_as_root@@Base+0x1458>
   3fb14:	add	r2, pc, r2
   3fb18:	add	r3, r3, r2
   3fb1c:	str	r3, [fp, #-12]
   3fb20:	ldr	r2, [fp, #-16]
   3fb24:	movw	r3, #34079	; 0x851f
   3fb28:	movt	r3, #20971	; 0x51eb
   3fb2c:	umull	r2, r3, r3, r2
   3fb30:	lsr	r3, r3, #5
   3fb34:	str	r3, [fp, #-16]
   3fb38:	ldr	r3, [fp, #-12]
   3fb3c:	ldrb	r2, [r3]
   3fb40:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fb44:	strb	r2, [r3]
   3fb48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fb4c:	add	r3, r3, #1
   3fb50:	ldr	r2, [fp, #-12]
   3fb54:	ldrb	r2, [r2, #1]
   3fb58:	strb	r2, [r3]
   3fb5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fb60:	sub	r3, r3, #2
   3fb64:	str	r3, [fp, #-20]	; 0xffffffec
   3fb68:	ldr	r2, [fp, #-16]
   3fb6c:	movw	r3, #34079	; 0x851f
   3fb70:	movt	r3, #20971	; 0x51eb
   3fb74:	umull	r1, r3, r3, r2
   3fb78:	lsr	r3, r3, #5
   3fb7c:	mov	r1, #100	; 0x64
   3fb80:	mul	r3, r1, r3
   3fb84:	sub	r3, r2, r3
   3fb88:	lsl	r3, r3, #1
   3fb8c:	ldr	r2, [pc, #1048]	; 3ffac <flatcc_json_parser_struct_as_root@@Base+0x145c>
   3fb90:	add	r2, pc, r2
   3fb94:	add	r3, r3, r2
   3fb98:	str	r3, [fp, #-12]
   3fb9c:	ldr	r2, [fp, #-16]
   3fba0:	movw	r3, #34079	; 0x851f
   3fba4:	movt	r3, #20971	; 0x51eb
   3fba8:	umull	r2, r3, r3, r2
   3fbac:	lsr	r3, r3, #5
   3fbb0:	str	r3, [fp, #-16]
   3fbb4:	ldr	r3, [fp, #-12]
   3fbb8:	ldrb	r2, [r3]
   3fbbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fbc0:	strb	r2, [r3]
   3fbc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fbc8:	add	r3, r3, #1
   3fbcc:	ldr	r2, [fp, #-12]
   3fbd0:	ldrb	r2, [r2, #1]
   3fbd4:	strb	r2, [r3]
   3fbd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fbdc:	sub	r3, r3, #2
   3fbe0:	str	r3, [fp, #-20]	; 0xffffffec
   3fbe4:	ldr	r2, [fp, #-16]
   3fbe8:	movw	r3, #34079	; 0x851f
   3fbec:	movt	r3, #20971	; 0x51eb
   3fbf0:	umull	r1, r3, r3, r2
   3fbf4:	lsr	r3, r3, #5
   3fbf8:	mov	r1, #100	; 0x64
   3fbfc:	mul	r3, r1, r3
   3fc00:	sub	r3, r2, r3
   3fc04:	lsl	r3, r3, #1
   3fc08:	ldr	r2, [pc, #928]	; 3ffb0 <flatcc_json_parser_struct_as_root@@Base+0x1460>
   3fc0c:	add	r2, pc, r2
   3fc10:	add	r3, r3, r2
   3fc14:	str	r3, [fp, #-12]
   3fc18:	ldr	r2, [fp, #-16]
   3fc1c:	movw	r3, #34079	; 0x851f
   3fc20:	movt	r3, #20971	; 0x51eb
   3fc24:	umull	r2, r3, r3, r2
   3fc28:	lsr	r3, r3, #5
   3fc2c:	str	r3, [fp, #-16]
   3fc30:	ldr	r3, [fp, #-12]
   3fc34:	ldrb	r2, [r3]
   3fc38:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fc3c:	strb	r2, [r3]
   3fc40:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fc44:	add	r3, r3, #1
   3fc48:	ldr	r2, [fp, #-12]
   3fc4c:	ldrb	r2, [r2, #1]
   3fc50:	strb	r2, [r3]
   3fc54:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fc58:	sub	r3, r3, #2
   3fc5c:	str	r3, [fp, #-20]	; 0xffffffec
   3fc60:	ldr	r2, [fp, #-16]
   3fc64:	movw	r3, #34079	; 0x851f
   3fc68:	movt	r3, #20971	; 0x51eb
   3fc6c:	umull	r1, r3, r3, r2
   3fc70:	lsr	r3, r3, #5
   3fc74:	mov	r1, #100	; 0x64
   3fc78:	mul	r3, r1, r3
   3fc7c:	sub	r3, r2, r3
   3fc80:	lsl	r3, r3, #1
   3fc84:	ldr	r2, [pc, #808]	; 3ffb4 <flatcc_json_parser_struct_as_root@@Base+0x1464>
   3fc88:	add	r2, pc, r2
   3fc8c:	add	r3, r3, r2
   3fc90:	str	r3, [fp, #-12]
   3fc94:	ldr	r2, [fp, #-16]
   3fc98:	movw	r3, #34079	; 0x851f
   3fc9c:	movt	r3, #20971	; 0x51eb
   3fca0:	umull	r2, r3, r3, r2
   3fca4:	lsr	r3, r3, #5
   3fca8:	str	r3, [fp, #-16]
   3fcac:	ldr	r3, [fp, #-12]
   3fcb0:	ldrb	r2, [r3]
   3fcb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fcb8:	strb	r2, [r3]
   3fcbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fcc0:	add	r3, r3, #1
   3fcc4:	ldr	r2, [fp, #-12]
   3fcc8:	ldrb	r2, [r2, #1]
   3fccc:	strb	r2, [r3]
   3fcd0:	ldr	r3, [fp, #-16]
   3fcd4:	uxtb	r2, r3
   3fcd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fcdc:	sub	r3, r3, #1
   3fce0:	add	r2, r2, #48	; 0x30
   3fce4:	uxtb	r2, r2
   3fce8:	strb	r2, [r3]
   3fcec:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fcf0:	ldr	r3, [fp, #-8]
   3fcf4:	sub	r3, r3, #2
   3fcf8:	cmp	r3, #8
   3fcfc:	addls	pc, pc, r3, lsl #2
   3fd00:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fd04:	b	3ff18 <flatcc_json_parser_struct_as_root@@Base+0x13c8>
   3fd08:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fd0c:	b	3fe9c <flatcc_json_parser_struct_as_root@@Base+0x134c>
   3fd10:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fd14:	b	3fe20 <flatcc_json_parser_struct_as_root@@Base+0x12d0>
   3fd18:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fd1c:	b	3fda4 <flatcc_json_parser_struct_as_root@@Base+0x1254>
   3fd20:	b	3ff94 <flatcc_json_parser_struct_as_root@@Base+0x1444>
   3fd24:	b	3fd28 <flatcc_json_parser_struct_as_root@@Base+0x11d8>
   3fd28:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fd2c:	sub	r3, r3, #2
   3fd30:	str	r3, [fp, #-20]	; 0xffffffec
   3fd34:	ldr	r2, [fp, #-16]
   3fd38:	movw	r3, #34079	; 0x851f
   3fd3c:	movt	r3, #20971	; 0x51eb
   3fd40:	umull	r1, r3, r3, r2
   3fd44:	lsr	r3, r3, #5
   3fd48:	mov	r1, #100	; 0x64
   3fd4c:	mul	r3, r1, r3
   3fd50:	sub	r3, r2, r3
   3fd54:	lsl	r3, r3, #1
   3fd58:	ldr	r2, [pc, #600]	; 3ffb8 <flatcc_json_parser_struct_as_root@@Base+0x1468>
   3fd5c:	add	r2, pc, r2
   3fd60:	add	r3, r3, r2
   3fd64:	str	r3, [fp, #-12]
   3fd68:	ldr	r2, [fp, #-16]
   3fd6c:	movw	r3, #34079	; 0x851f
   3fd70:	movt	r3, #20971	; 0x51eb
   3fd74:	umull	r2, r3, r3, r2
   3fd78:	lsr	r3, r3, #5
   3fd7c:	str	r3, [fp, #-16]
   3fd80:	ldr	r3, [fp, #-12]
   3fd84:	ldrb	r2, [r3]
   3fd88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fd8c:	strb	r2, [r3]
   3fd90:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fd94:	add	r3, r3, #1
   3fd98:	ldr	r2, [fp, #-12]
   3fd9c:	ldrb	r2, [r2, #1]
   3fda0:	strb	r2, [r3]
   3fda4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fda8:	sub	r3, r3, #2
   3fdac:	str	r3, [fp, #-20]	; 0xffffffec
   3fdb0:	ldr	r2, [fp, #-16]
   3fdb4:	movw	r3, #34079	; 0x851f
   3fdb8:	movt	r3, #20971	; 0x51eb
   3fdbc:	umull	r1, r3, r3, r2
   3fdc0:	lsr	r3, r3, #5
   3fdc4:	mov	r1, #100	; 0x64
   3fdc8:	mul	r3, r1, r3
   3fdcc:	sub	r3, r2, r3
   3fdd0:	lsl	r3, r3, #1
   3fdd4:	ldr	r2, [pc, #480]	; 3ffbc <flatcc_json_parser_struct_as_root@@Base+0x146c>
   3fdd8:	add	r2, pc, r2
   3fddc:	add	r3, r3, r2
   3fde0:	str	r3, [fp, #-12]
   3fde4:	ldr	r2, [fp, #-16]
   3fde8:	movw	r3, #34079	; 0x851f
   3fdec:	movt	r3, #20971	; 0x51eb
   3fdf0:	umull	r2, r3, r3, r2
   3fdf4:	lsr	r3, r3, #5
   3fdf8:	str	r3, [fp, #-16]
   3fdfc:	ldr	r3, [fp, #-12]
   3fe00:	ldrb	r2, [r3]
   3fe04:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fe08:	strb	r2, [r3]
   3fe0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fe10:	add	r3, r3, #1
   3fe14:	ldr	r2, [fp, #-12]
   3fe18:	ldrb	r2, [r2, #1]
   3fe1c:	strb	r2, [r3]
   3fe20:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fe24:	sub	r3, r3, #2
   3fe28:	str	r3, [fp, #-20]	; 0xffffffec
   3fe2c:	ldr	r2, [fp, #-16]
   3fe30:	movw	r3, #34079	; 0x851f
   3fe34:	movt	r3, #20971	; 0x51eb
   3fe38:	umull	r1, r3, r3, r2
   3fe3c:	lsr	r3, r3, #5
   3fe40:	mov	r1, #100	; 0x64
   3fe44:	mul	r3, r1, r3
   3fe48:	sub	r3, r2, r3
   3fe4c:	lsl	r3, r3, #1
   3fe50:	ldr	r2, [pc, #360]	; 3ffc0 <flatcc_json_parser_struct_as_root@@Base+0x1470>
   3fe54:	add	r2, pc, r2
   3fe58:	add	r3, r3, r2
   3fe5c:	str	r3, [fp, #-12]
   3fe60:	ldr	r2, [fp, #-16]
   3fe64:	movw	r3, #34079	; 0x851f
   3fe68:	movt	r3, #20971	; 0x51eb
   3fe6c:	umull	r2, r3, r3, r2
   3fe70:	lsr	r3, r3, #5
   3fe74:	str	r3, [fp, #-16]
   3fe78:	ldr	r3, [fp, #-12]
   3fe7c:	ldrb	r2, [r3]
   3fe80:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fe84:	strb	r2, [r3]
   3fe88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fe8c:	add	r3, r3, #1
   3fe90:	ldr	r2, [fp, #-12]
   3fe94:	ldrb	r2, [r2, #1]
   3fe98:	strb	r2, [r3]
   3fe9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fea0:	sub	r3, r3, #2
   3fea4:	str	r3, [fp, #-20]	; 0xffffffec
   3fea8:	ldr	r2, [fp, #-16]
   3feac:	movw	r3, #34079	; 0x851f
   3feb0:	movt	r3, #20971	; 0x51eb
   3feb4:	umull	r1, r3, r3, r2
   3feb8:	lsr	r3, r3, #5
   3febc:	mov	r1, #100	; 0x64
   3fec0:	mul	r3, r1, r3
   3fec4:	sub	r3, r2, r3
   3fec8:	lsl	r3, r3, #1
   3fecc:	ldr	r2, [pc, #240]	; 3ffc4 <flatcc_json_parser_struct_as_root@@Base+0x1474>
   3fed0:	add	r2, pc, r2
   3fed4:	add	r3, r3, r2
   3fed8:	str	r3, [fp, #-12]
   3fedc:	ldr	r2, [fp, #-16]
   3fee0:	movw	r3, #34079	; 0x851f
   3fee4:	movt	r3, #20971	; 0x51eb
   3fee8:	umull	r2, r3, r3, r2
   3feec:	lsr	r3, r3, #5
   3fef0:	str	r3, [fp, #-16]
   3fef4:	ldr	r3, [fp, #-12]
   3fef8:	ldrb	r2, [r3]
   3fefc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ff00:	strb	r2, [r3]
   3ff04:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ff08:	add	r3, r3, #1
   3ff0c:	ldr	r2, [fp, #-12]
   3ff10:	ldrb	r2, [r2, #1]
   3ff14:	strb	r2, [r3]
   3ff18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ff1c:	sub	r3, r3, #2
   3ff20:	str	r3, [fp, #-20]	; 0xffffffec
   3ff24:	ldr	r2, [fp, #-16]
   3ff28:	movw	r3, #34079	; 0x851f
   3ff2c:	movt	r3, #20971	; 0x51eb
   3ff30:	umull	r1, r3, r3, r2
   3ff34:	lsr	r3, r3, #5
   3ff38:	mov	r1, #100	; 0x64
   3ff3c:	mul	r3, r1, r3
   3ff40:	sub	r3, r2, r3
   3ff44:	lsl	r3, r3, #1
   3ff48:	ldr	r2, [pc, #120]	; 3ffc8 <flatcc_json_parser_struct_as_root@@Base+0x1478>
   3ff4c:	add	r2, pc, r2
   3ff50:	add	r3, r3, r2
   3ff54:	str	r3, [fp, #-12]
   3ff58:	ldr	r2, [fp, #-16]
   3ff5c:	movw	r3, #34079	; 0x851f
   3ff60:	movt	r3, #20971	; 0x51eb
   3ff64:	umull	r2, r3, r3, r2
   3ff68:	lsr	r3, r3, #5
   3ff6c:	str	r3, [fp, #-16]
   3ff70:	ldr	r3, [fp, #-12]
   3ff74:	ldrb	r2, [r3]
   3ff78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ff7c:	strb	r2, [r3]
   3ff80:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ff84:	add	r3, r3, #1
   3ff88:	ldr	r2, [fp, #-12]
   3ff8c:	ldrb	r2, [r2, #1]
   3ff90:	strb	r2, [r3]
   3ff94:	ldr	r3, [fp, #-8]
   3ff98:	mov	r0, r3
   3ff9c:	add	sp, fp, #0
   3ffa0:	pop	{fp}		; (ldr fp, [sp], #4)
   3ffa4:	bx	lr
   3ffa8:	andeq	r3, r1, r8, lsl r6
   3ffac:	muleq	r1, ip, r5
   3ffb0:	andeq	r3, r1, r0, lsr #10
   3ffb4:	andeq	r3, r1, r4, lsr #9
   3ffb8:	ldrdeq	r3, [r1], -r0
   3ffbc:	andeq	r3, r1, r4, asr r3
   3ffc0:	ldrdeq	r3, [r1], -r8
   3ffc4:	andeq	r3, r1, ip, asr r2
   3ffc8:	andeq	r3, r1, r0, ror #3
   3ffcc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3ffd0:	strd	r6, [sp, #8]
   3ffd4:	strd	r8, [sp, #16]
   3ffd8:	str	fp, [sp, #24]
   3ffdc:	str	lr, [sp, #28]
   3ffe0:	add	fp, sp, #28
   3ffe4:	sub	sp, sp, #56	; 0x38
   3ffe8:	strd	r0, [fp, #-60]	; 0xffffffc4
   3ffec:	str	r2, [fp, #-64]	; 0xffffffc0
   3fff0:	mov	r3, #0
   3fff4:	str	r3, [fp, #-32]	; 0xffffffe0
   3fff8:	add	r3, pc, #800	; 0x320
   3fffc:	ldrd	r2, [r3]
   40000:	strd	r2, [fp, #-44]	; 0xffffffd4
   40004:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40008:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   4000c:	cmp	r1, r3
   40010:	cmpeq	r0, r2
   40014:	bcs	40030 <flatcc_json_parser_struct_as_root@@Base+0x14e0>
   40018:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4001c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   40020:	mov	r0, r3
   40024:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   40028:	mov	r3, r0
   4002c:	b	40c94 <flatcc_json_parser_struct_as_root@@Base+0x2144>
   40030:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   40034:	mov	r2, r4
   40038:	mov	r3, r5
   4003c:	mov	r0, #0
   40040:	mov	r1, #0
   40044:	lsl	r1, r3, #2
   40048:	orr	r1, r1, r2, lsr #30
   4004c:	lsl	r0, r2, #2
   40050:	mov	r2, r0
   40054:	mov	r3, r1
   40058:	adds	r2, r2, r4
   4005c:	adc	r3, r3, r5
   40060:	mov	r0, #0
   40064:	mov	r1, #0
   40068:	lsl	r1, r3, #3
   4006c:	orr	r1, r1, r2, lsr #29
   40070:	lsl	r0, r2, #3
   40074:	mov	r2, r0
   40078:	mov	r3, r1
   4007c:	subs	r2, r2, r4
   40080:	sbc	r3, r3, r5
   40084:	mov	r0, #0
   40088:	mov	r1, #0
   4008c:	lsl	r1, r3, #4
   40090:	orr	r1, r1, r2, lsr #28
   40094:	lsl	r0, r2, #4
   40098:	mov	r2, r0
   4009c:	mov	r3, r1
   400a0:	adds	r2, r2, r4
   400a4:	adc	r3, r3, r5
   400a8:	mov	r0, #0
   400ac:	mov	r1, #0
   400b0:	lsl	r1, r3, #4
   400b4:	orr	r1, r1, r2, lsr #28
   400b8:	lsl	r0, r2, #4
   400bc:	mov	r2, r0
   400c0:	mov	r3, r1
   400c4:	mov	r0, r2
   400c8:	mov	r1, r3
   400cc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   400d0:	cmp	r3, r1
   400d4:	cmpeq	r2, r0
   400d8:	bcc	40364 <flatcc_json_parser_struct_as_root@@Base+0x1814>
   400dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   400e0:	movw	r3, #38528	; 0x9680
   400e4:	movt	r3, #152	; 0x98
   400e8:	mul	r2, r3, r2
   400ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   400f0:	mov	r1, #0
   400f4:	mul	r3, r1, r3
   400f8:	add	r1, r2, r3
   400fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40100:	movw	r3, #38528	; 0x9680
   40104:	movt	r3, #152	; 0x98
   40108:	umull	r2, r3, r2, r3
   4010c:	add	r1, r1, r3
   40110:	mov	r3, r1
   40114:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40118:	cmp	r1, r3
   4011c:	cmpeq	r0, r2
   40120:	bcc	4022c <flatcc_json_parser_struct_as_root@@Base+0x16dc>
   40124:	ldr	r2, [fp, #-40]	; 0xffffffd8
   40128:	mov	r3, #51712	; 0xca00
   4012c:	movt	r3, #15258	; 0x3b9a
   40130:	mul	r2, r3, r2
   40134:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40138:	mov	r1, #0
   4013c:	mul	r3, r1, r3
   40140:	add	r1, r2, r3
   40144:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40148:	mov	r3, #51712	; 0xca00
   4014c:	movt	r3, #15258	; 0x3b9a
   40150:	umull	r2, r3, r2, r3
   40154:	add	r1, r1, r3
   40158:	mov	r3, r1
   4015c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40160:	cmp	r1, r3
   40164:	cmpeq	r0, r2
   40168:	bcc	401cc <flatcc_json_parser_struct_as_root@@Base+0x167c>
   4016c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   40170:	mov	r3, #58368	; 0xe400
   40174:	movt	r3, #21515	; 0x540b
   40178:	mul	r2, r3, r2
   4017c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40180:	mov	r1, #2
   40184:	mul	r3, r1, r3
   40188:	add	r1, r2, r3
   4018c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40190:	mov	r3, #58368	; 0xe400
   40194:	movt	r3, #21515	; 0x540b
   40198:	umull	r2, r3, r2, r3
   4019c:	add	r1, r1, r3
   401a0:	mov	r3, r1
   401a4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   401a8:	cmp	r1, r3
   401ac:	cmpeq	r0, r2
   401b0:	bcc	401c0 <flatcc_json_parser_struct_as_root@@Base+0x1670>
   401b4:	mov	r3, #20
   401b8:	str	r3, [fp, #-32]	; 0xffffffe0
   401bc:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   401c0:	mov	r3, #19
   401c4:	str	r3, [fp, #-32]	; 0xffffffe0
   401c8:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   401cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   401d0:	mov	r3, #57600	; 0xe100
   401d4:	movt	r3, #1525	; 0x5f5
   401d8:	mul	r2, r3, r2
   401dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   401e0:	mov	r1, #0
   401e4:	mul	r3, r1, r3
   401e8:	add	r1, r2, r3
   401ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   401f0:	mov	r3, #57600	; 0xe100
   401f4:	movt	r3, #1525	; 0x5f5
   401f8:	umull	r2, r3, r2, r3
   401fc:	add	r1, r1, r3
   40200:	mov	r3, r1
   40204:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40208:	cmp	r1, r3
   4020c:	cmpeq	r0, r2
   40210:	bcc	40220 <flatcc_json_parser_struct_as_root@@Base+0x16d0>
   40214:	mov	r3, #18
   40218:	str	r3, [fp, #-32]	; 0xffffffe0
   4021c:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   40220:	mov	r3, #17
   40224:	str	r3, [fp, #-32]	; 0xffffffe0
   40228:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   4022c:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   40230:	mov	r2, r4
   40234:	mov	r3, r5
   40238:	mov	r0, #0
   4023c:	mov	r1, #0
   40240:	lsl	r1, r3, #5
   40244:	orr	r1, r1, r2, lsr #27
   40248:	lsl	r0, r2, #5
   4024c:	mov	r2, r0
   40250:	mov	r3, r1
   40254:	subs	r2, r2, r4
   40258:	sbc	r3, r3, r5
   4025c:	mov	r0, #0
   40260:	mov	r1, #0
   40264:	lsl	r1, r3, #9
   40268:	orr	r1, r1, r2, lsr #23
   4026c:	lsl	r0, r2, #9
   40270:	mov	r2, r0
   40274:	mov	r3, r1
   40278:	adds	r2, r2, r4
   4027c:	adc	r3, r3, r5
   40280:	mov	r0, #0
   40284:	mov	r1, #0
   40288:	lsl	r1, r3, #6
   4028c:	orr	r1, r1, r2, lsr #26
   40290:	lsl	r0, r2, #6
   40294:	subs	r0, r0, r2
   40298:	sbc	r1, r1, r3
   4029c:	adds	r8, r0, r4
   402a0:	adc	r9, r1, r5
   402a4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   402a8:	cmp	r3, r9
   402ac:	cmpeq	r2, r8
   402b0:	bcc	402c0 <flatcc_json_parser_struct_as_root@@Base+0x1770>
   402b4:	mov	r3, #16
   402b8:	str	r3, [fp, #-32]	; 0xffffffe0
   402bc:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   402c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   402c4:	movw	r3, #34464	; 0x86a0
   402c8:	movt	r3, #1
   402cc:	mul	r2, r3, r2
   402d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   402d4:	mov	r1, #0
   402d8:	mul	r3, r1, r3
   402dc:	add	r1, r2, r3
   402e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   402e4:	movw	r3, #34464	; 0x86a0
   402e8:	movt	r3, #1
   402ec:	umull	r2, r3, r2, r3
   402f0:	add	r1, r1, r3
   402f4:	mov	r3, r1
   402f8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   402fc:	cmp	r1, r3
   40300:	cmpeq	r0, r2
   40304:	bcc	40314 <flatcc_json_parser_struct_as_root@@Base+0x17c4>
   40308:	mov	r3, #15
   4030c:	str	r3, [fp, #-32]	; 0xffffffe0
   40310:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   40314:	mov	r3, #14
   40318:	str	r3, [fp, #-32]	; 0xffffffe0
   4031c:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   40320:	blcc	fe6f2b28 <__bss_end__@@Base+0xfe68d67c>
   40324:	andeq	r0, r0, r0
   40328:	ldrdeq	r2, [r1], -r0
   4032c:	andeq	r2, r1, ip, asr fp
   40330:	andeq	r2, r1, r8, ror #21
   40334:	andeq	r2, r1, r4, ror sl
   40338:	andeq	r2, r1, r0, lsl #20
   4033c:	strdeq	r2, [r1], -ip
   40340:	andeq	r2, r1, r8, lsl #17
   40344:	andeq	r2, r1, r4, lsl r8
   40348:	andeq	r2, r1, r0, lsr #15
   4034c:	andeq	r2, r1, ip, lsr #14
   40350:			; <UNDEFINED> instruction: 0x000126b8
   40354:	andeq	r2, r1, r4, asr #12
   40358:	ldrdeq	r2, [r1], -r0
   4035c:	andeq	r2, r1, ip, asr r5
   40360:	andeq	r2, r1, r8, ror #9
   40364:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   40368:	mov	r2, r4
   4036c:	mov	r3, r5
   40370:	adds	r1, r2, r2
   40374:	str	r1, [fp, #-76]	; 0xffffffb4
   40378:	adc	r3, r3, r3
   4037c:	str	r3, [fp, #-72]	; 0xffffffb8
   40380:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   40384:	adds	r2, r2, r4
   40388:	adc	r3, r3, r5
   4038c:	mov	r0, #0
   40390:	mov	r1, #0
   40394:	lsl	r1, r3, #5
   40398:	orr	r1, r1, r2, lsr #27
   4039c:	lsl	r0, r2, #5
   403a0:	adds	r2, r2, r0
   403a4:	adc	r3, r3, r1
   403a8:	adds	r6, r2, r4
   403ac:	adc	r7, r3, r5
   403b0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   403b4:	cmp	r3, r7
   403b8:	cmpeq	r2, r6
   403bc:	bcc	40460 <flatcc_json_parser_struct_as_root@@Base+0x1910>
   403c0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   403c4:	mov	r2, r0
   403c8:	mov	r3, r1
   403cc:	mov	r4, #0
   403d0:	mov	r5, #0
   403d4:	lsl	r5, r3, #5
   403d8:	orr	r5, r5, r2, lsr #27
   403dc:	lsl	r4, r2, #5
   403e0:	mov	r2, r4
   403e4:	mov	r3, r5
   403e8:	subs	r2, r2, r0
   403ec:	sbc	r3, r3, r1
   403f0:	mov	r4, #0
   403f4:	mov	r5, #0
   403f8:	lsl	r5, r3, #2
   403fc:	orr	r5, r5, r2, lsr #30
   40400:	lsl	r4, r2, #2
   40404:	mov	r2, r4
   40408:	mov	r3, r5
   4040c:	adds	r2, r2, r0
   40410:	adc	r3, r3, r1
   40414:	mov	r0, #0
   40418:	mov	r1, #0
   4041c:	lsl	r1, r3, #3
   40420:	orr	r1, r1, r2, lsr #29
   40424:	lsl	r0, r2, #3
   40428:	mov	r2, r0
   4042c:	mov	r3, r1
   40430:	mov	r0, r2
   40434:	mov	r1, r3
   40438:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   4043c:	cmp	r3, r1
   40440:	cmpeq	r2, r0
   40444:	bcc	40454 <flatcc_json_parser_struct_as_root@@Base+0x1904>
   40448:	mov	r3, #13
   4044c:	str	r3, [fp, #-32]	; 0xffffffe0
   40450:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   40454:	mov	r3, #12
   40458:	str	r3, [fp, #-32]	; 0xffffffe0
   4045c:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   40460:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   40464:	mov	r2, r4
   40468:	mov	r3, r5
   4046c:	mov	r0, #0
   40470:	mov	r1, #0
   40474:	lsl	r1, r3, #2
   40478:	orr	r1, r1, r2, lsr #30
   4047c:	lsl	r0, r2, #2
   40480:	mov	r2, r0
   40484:	mov	r3, r1
   40488:	adds	r2, r2, r4
   4048c:	adc	r3, r3, r5
   40490:	adds	r1, r2, r2
   40494:	str	r1, [fp, #-84]	; 0xffffffac
   40498:	adc	r3, r3, r3
   4049c:	str	r3, [fp, #-80]	; 0xffffffb0
   404a0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   404a4:	mov	r0, r2
   404a8:	mov	r1, r3
   404ac:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   404b0:	cmp	r3, r1
   404b4:	cmpeq	r2, r0
   404b8:	bcc	404c8 <flatcc_json_parser_struct_as_root@@Base+0x1978>
   404bc:	mov	r3, #11
   404c0:	str	r3, [fp, #-32]	; 0xffffffe0
   404c4:	b	404d0 <flatcc_json_parser_struct_as_root@@Base+0x1980>
   404c8:	mov	r3, #10
   404cc:	str	r3, [fp, #-32]	; 0xffffffe0
   404d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   404d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   404d8:	add	r3, r2, r3
   404dc:	str	r3, [fp, #-64]	; 0xffffffc0
   404e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   404e4:	mov	r2, #0
   404e8:	strb	r2, [r3]
   404ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   404f0:	and	r3, r3, #1
   404f4:	cmp	r3, #0
   404f8:	beq	407c8 <flatcc_json_parser_struct_as_root@@Base+0x1c78>
   404fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40500:	sub	r3, r3, #11
   40504:	cmp	r3, #8
   40508:	addls	pc, pc, r3, lsl #2
   4050c:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   40510:	b	40704 <flatcc_json_parser_struct_as_root@@Base+0x1bb4>
   40514:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   40518:	b	40690 <flatcc_json_parser_struct_as_root@@Base+0x1b40>
   4051c:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   40520:	b	4061c <flatcc_json_parser_struct_as_root@@Base+0x1acc>
   40524:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   40528:	b	405a8 <flatcc_json_parser_struct_as_root@@Base+0x1a58>
   4052c:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   40530:	b	40534 <flatcc_json_parser_struct_as_root@@Base+0x19e4>
   40534:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40538:	sub	r3, r3, #2
   4053c:	str	r3, [fp, #-64]	; 0xffffffc0
   40540:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40544:	mov	r2, #100	; 0x64
   40548:	mov	r3, #0
   4054c:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40550:	mov	r3, r2
   40554:	lsl	r3, r3, #1
   40558:	ldr	r2, [pc, #-568]	; 40328 <flatcc_json_parser_struct_as_root@@Base+0x17d8>
   4055c:	add	r2, pc, r2
   40560:	add	r3, r3, r2
   40564:	str	r3, [fp, #-48]	; 0xffffffd0
   40568:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   4056c:	mov	r2, #100	; 0x64
   40570:	mov	r3, #0
   40574:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40578:	mov	r2, r0
   4057c:	mov	r3, r1
   40580:	strd	r2, [fp, #-60]	; 0xffffffc4
   40584:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40588:	ldrb	r2, [r3]
   4058c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40590:	strb	r2, [r3]
   40594:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40598:	add	r3, r3, #1
   4059c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   405a0:	ldrb	r2, [r2, #1]
   405a4:	strb	r2, [r3]
   405a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   405ac:	sub	r3, r3, #2
   405b0:	str	r3, [fp, #-64]	; 0xffffffc0
   405b4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   405b8:	mov	r2, #100	; 0x64
   405bc:	mov	r3, #0
   405c0:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   405c4:	mov	r3, r2
   405c8:	lsl	r3, r3, #1
   405cc:	ldr	r2, [pc, #-680]	; 4032c <flatcc_json_parser_struct_as_root@@Base+0x17dc>
   405d0:	add	r2, pc, r2
   405d4:	add	r3, r3, r2
   405d8:	str	r3, [fp, #-48]	; 0xffffffd0
   405dc:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   405e0:	mov	r2, #100	; 0x64
   405e4:	mov	r3, #0
   405e8:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   405ec:	mov	r2, r0
   405f0:	mov	r3, r1
   405f4:	strd	r2, [fp, #-60]	; 0xffffffc4
   405f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   405fc:	ldrb	r2, [r3]
   40600:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40604:	strb	r2, [r3]
   40608:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4060c:	add	r3, r3, #1
   40610:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40614:	ldrb	r2, [r2, #1]
   40618:	strb	r2, [r3]
   4061c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40620:	sub	r3, r3, #2
   40624:	str	r3, [fp, #-64]	; 0xffffffc0
   40628:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   4062c:	mov	r2, #100	; 0x64
   40630:	mov	r3, #0
   40634:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40638:	mov	r3, r2
   4063c:	lsl	r3, r3, #1
   40640:	ldr	r2, [pc, #-792]	; 40330 <flatcc_json_parser_struct_as_root@@Base+0x17e0>
   40644:	add	r2, pc, r2
   40648:	add	r3, r3, r2
   4064c:	str	r3, [fp, #-48]	; 0xffffffd0
   40650:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40654:	mov	r2, #100	; 0x64
   40658:	mov	r3, #0
   4065c:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40660:	mov	r2, r0
   40664:	mov	r3, r1
   40668:	strd	r2, [fp, #-60]	; 0xffffffc4
   4066c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40670:	ldrb	r2, [r3]
   40674:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40678:	strb	r2, [r3]
   4067c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40680:	add	r3, r3, #1
   40684:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40688:	ldrb	r2, [r2, #1]
   4068c:	strb	r2, [r3]
   40690:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40694:	sub	r3, r3, #2
   40698:	str	r3, [fp, #-64]	; 0xffffffc0
   4069c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   406a0:	mov	r2, #100	; 0x64
   406a4:	mov	r3, #0
   406a8:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   406ac:	mov	r3, r2
   406b0:	lsl	r3, r3, #1
   406b4:	ldr	r2, [pc, #-904]	; 40334 <flatcc_json_parser_struct_as_root@@Base+0x17e4>
   406b8:	add	r2, pc, r2
   406bc:	add	r3, r3, r2
   406c0:	str	r3, [fp, #-48]	; 0xffffffd0
   406c4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   406c8:	mov	r2, #100	; 0x64
   406cc:	mov	r3, #0
   406d0:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   406d4:	mov	r2, r0
   406d8:	mov	r3, r1
   406dc:	strd	r2, [fp, #-60]	; 0xffffffc4
   406e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   406e4:	ldrb	r2, [r3]
   406e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   406ec:	strb	r2, [r3]
   406f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   406f4:	add	r3, r3, #1
   406f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   406fc:	ldrb	r2, [r2, #1]
   40700:	strb	r2, [r3]
   40704:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40708:	sub	r3, r3, #2
   4070c:	str	r3, [fp, #-64]	; 0xffffffc0
   40710:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40714:	mov	r2, #100	; 0x64
   40718:	mov	r3, #0
   4071c:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40720:	mov	r3, r2
   40724:	lsl	r3, r3, #1
   40728:	ldr	r2, [pc, #-1016]	; 40338 <flatcc_json_parser_struct_as_root@@Base+0x17e8>
   4072c:	add	r2, pc, r2
   40730:	add	r3, r3, r2
   40734:	str	r3, [fp, #-48]	; 0xffffffd0
   40738:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   4073c:	mov	r2, #100	; 0x64
   40740:	mov	r3, #0
   40744:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40748:	mov	r2, r0
   4074c:	mov	r3, r1
   40750:	strd	r2, [fp, #-60]	; 0xffffffc4
   40754:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40758:	ldrb	r2, [r3]
   4075c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40760:	strb	r2, [r3]
   40764:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40768:	add	r3, r3, #1
   4076c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40770:	ldrb	r2, [r2, #1]
   40774:	strb	r2, [r3]
   40778:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   4077c:	mov	r2, #10
   40780:	mov	r3, #0
   40784:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40788:	uxtb	r3, r2
   4078c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   40790:	sub	r2, r2, #1
   40794:	str	r2, [fp, #-64]	; 0xffffffc0
   40798:	add	r3, r3, #48	; 0x30
   4079c:	uxtb	r2, r3
   407a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   407a4:	strb	r2, [r3]
   407a8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   407ac:	mov	r2, #10
   407b0:	mov	r3, #0
   407b4:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   407b8:	mov	r2, r0
   407bc:	mov	r3, r1
   407c0:	strd	r2, [fp, #-60]	; 0xffffffc4
   407c4:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   407c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   407cc:	sub	r3, r3, #10
   407d0:	cmp	r3, #10
   407d4:	addls	pc, pc, r3, lsl #2
   407d8:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   407dc:	b	40a4c <flatcc_json_parser_struct_as_root@@Base+0x1efc>
   407e0:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   407e4:	b	409d8 <flatcc_json_parser_struct_as_root@@Base+0x1e88>
   407e8:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   407ec:	b	40964 <flatcc_json_parser_struct_as_root@@Base+0x1e14>
   407f0:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   407f4:	b	408f0 <flatcc_json_parser_struct_as_root@@Base+0x1da0>
   407f8:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   407fc:	b	4087c <flatcc_json_parser_struct_as_root@@Base+0x1d2c>
   40800:	b	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x1f70>
   40804:	b	40808 <flatcc_json_parser_struct_as_root@@Base+0x1cb8>
   40808:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4080c:	sub	r3, r3, #2
   40810:	str	r3, [fp, #-64]	; 0xffffffc0
   40814:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40818:	mov	r2, #100	; 0x64
   4081c:	mov	r3, #0
   40820:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40824:	mov	r3, r2
   40828:	lsl	r3, r3, #1
   4082c:	ldr	r2, [pc, #-1272]	; 4033c <flatcc_json_parser_struct_as_root@@Base+0x17ec>
   40830:	add	r2, pc, r2
   40834:	add	r3, r3, r2
   40838:	str	r3, [fp, #-48]	; 0xffffffd0
   4083c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40840:	mov	r2, #100	; 0x64
   40844:	mov	r3, #0
   40848:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   4084c:	mov	r2, r0
   40850:	mov	r3, r1
   40854:	strd	r2, [fp, #-60]	; 0xffffffc4
   40858:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4085c:	ldrb	r2, [r3]
   40860:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40864:	strb	r2, [r3]
   40868:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4086c:	add	r3, r3, #1
   40870:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40874:	ldrb	r2, [r2, #1]
   40878:	strb	r2, [r3]
   4087c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40880:	sub	r3, r3, #2
   40884:	str	r3, [fp, #-64]	; 0xffffffc0
   40888:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   4088c:	mov	r2, #100	; 0x64
   40890:	mov	r3, #0
   40894:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40898:	mov	r3, r2
   4089c:	lsl	r3, r3, #1
   408a0:	ldr	r2, [pc, #-1384]	; 40340 <flatcc_json_parser_struct_as_root@@Base+0x17f0>
   408a4:	add	r2, pc, r2
   408a8:	add	r3, r3, r2
   408ac:	str	r3, [fp, #-48]	; 0xffffffd0
   408b0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   408b4:	mov	r2, #100	; 0x64
   408b8:	mov	r3, #0
   408bc:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   408c0:	mov	r2, r0
   408c4:	mov	r3, r1
   408c8:	strd	r2, [fp, #-60]	; 0xffffffc4
   408cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   408d0:	ldrb	r2, [r3]
   408d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   408d8:	strb	r2, [r3]
   408dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   408e0:	add	r3, r3, #1
   408e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   408e8:	ldrb	r2, [r2, #1]
   408ec:	strb	r2, [r3]
   408f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   408f4:	sub	r3, r3, #2
   408f8:	str	r3, [fp, #-64]	; 0xffffffc0
   408fc:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40900:	mov	r2, #100	; 0x64
   40904:	mov	r3, #0
   40908:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   4090c:	mov	r3, r2
   40910:	lsl	r3, r3, #1
   40914:	ldr	r2, [pc, #-1496]	; 40344 <flatcc_json_parser_struct_as_root@@Base+0x17f4>
   40918:	add	r2, pc, r2
   4091c:	add	r3, r3, r2
   40920:	str	r3, [fp, #-48]	; 0xffffffd0
   40924:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40928:	mov	r2, #100	; 0x64
   4092c:	mov	r3, #0
   40930:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40934:	mov	r2, r0
   40938:	mov	r3, r1
   4093c:	strd	r2, [fp, #-60]	; 0xffffffc4
   40940:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40944:	ldrb	r2, [r3]
   40948:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4094c:	strb	r2, [r3]
   40950:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40954:	add	r3, r3, #1
   40958:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4095c:	ldrb	r2, [r2, #1]
   40960:	strb	r2, [r3]
   40964:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40968:	sub	r3, r3, #2
   4096c:	str	r3, [fp, #-64]	; 0xffffffc0
   40970:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40974:	mov	r2, #100	; 0x64
   40978:	mov	r3, #0
   4097c:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40980:	mov	r3, r2
   40984:	lsl	r3, r3, #1
   40988:	ldr	r2, [pc, #-1608]	; 40348 <flatcc_json_parser_struct_as_root@@Base+0x17f8>
   4098c:	add	r2, pc, r2
   40990:	add	r3, r3, r2
   40994:	str	r3, [fp, #-48]	; 0xffffffd0
   40998:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   4099c:	mov	r2, #100	; 0x64
   409a0:	mov	r3, #0
   409a4:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   409a8:	mov	r2, r0
   409ac:	mov	r3, r1
   409b0:	strd	r2, [fp, #-60]	; 0xffffffc4
   409b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   409b8:	ldrb	r2, [r3]
   409bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   409c0:	strb	r2, [r3]
   409c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   409c8:	add	r3, r3, #1
   409cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   409d0:	ldrb	r2, [r2, #1]
   409d4:	strb	r2, [r3]
   409d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   409dc:	sub	r3, r3, #2
   409e0:	str	r3, [fp, #-64]	; 0xffffffc0
   409e4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   409e8:	mov	r2, #100	; 0x64
   409ec:	mov	r3, #0
   409f0:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   409f4:	mov	r3, r2
   409f8:	lsl	r3, r3, #1
   409fc:	ldr	r2, [pc, #-1720]	; 4034c <flatcc_json_parser_struct_as_root@@Base+0x17fc>
   40a00:	add	r2, pc, r2
   40a04:	add	r3, r3, r2
   40a08:	str	r3, [fp, #-48]	; 0xffffffd0
   40a0c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40a10:	mov	r2, #100	; 0x64
   40a14:	mov	r3, #0
   40a18:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40a1c:	mov	r2, r0
   40a20:	mov	r3, r1
   40a24:	strd	r2, [fp, #-60]	; 0xffffffc4
   40a28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40a2c:	ldrb	r2, [r3]
   40a30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40a34:	strb	r2, [r3]
   40a38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40a3c:	add	r3, r3, #1
   40a40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40a44:	ldrb	r2, [r2, #1]
   40a48:	strb	r2, [r3]
   40a4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40a50:	sub	r3, r3, #2
   40a54:	str	r3, [fp, #-64]	; 0xffffffc0
   40a58:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40a5c:	mov	r2, #100	; 0x64
   40a60:	mov	r3, #0
   40a64:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40a68:	mov	r3, r2
   40a6c:	lsl	r3, r3, #1
   40a70:	ldr	r2, [pc, #-1832]	; 40350 <flatcc_json_parser_struct_as_root@@Base+0x1800>
   40a74:	add	r2, pc, r2
   40a78:	add	r3, r3, r2
   40a7c:	str	r3, [fp, #-48]	; 0xffffffd0
   40a80:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40a84:	mov	r2, #100	; 0x64
   40a88:	mov	r3, #0
   40a8c:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40a90:	mov	r2, r0
   40a94:	mov	r3, r1
   40a98:	strd	r2, [fp, #-60]	; 0xffffffc4
   40a9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40aa0:	ldrb	r2, [r3]
   40aa4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40aa8:	strb	r2, [r3]
   40aac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40ab0:	add	r3, r3, #1
   40ab4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40ab8:	ldrb	r2, [r2, #1]
   40abc:	strb	r2, [r3]
   40ac0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40ac4:	sub	r3, r3, #2
   40ac8:	str	r3, [fp, #-64]	; 0xffffffc0
   40acc:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40ad0:	mov	r2, #100	; 0x64
   40ad4:	mov	r3, #0
   40ad8:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40adc:	mov	r3, r2
   40ae0:	lsl	r3, r3, #1
   40ae4:	ldr	r2, [pc, #-1944]	; 40354 <flatcc_json_parser_struct_as_root@@Base+0x1804>
   40ae8:	add	r2, pc, r2
   40aec:	add	r3, r3, r2
   40af0:	str	r3, [fp, #-48]	; 0xffffffd0
   40af4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40af8:	mov	r2, #100	; 0x64
   40afc:	mov	r3, #0
   40b00:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40b04:	mov	r2, r0
   40b08:	mov	r3, r1
   40b0c:	strd	r2, [fp, #-60]	; 0xffffffc4
   40b10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40b14:	ldrb	r2, [r3]
   40b18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40b1c:	strb	r2, [r3]
   40b20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40b24:	add	r3, r3, #1
   40b28:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40b2c:	ldrb	r2, [r2, #1]
   40b30:	strb	r2, [r3]
   40b34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40b38:	sub	r3, r3, #2
   40b3c:	str	r3, [fp, #-64]	; 0xffffffc0
   40b40:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40b44:	mov	r2, #100	; 0x64
   40b48:	mov	r3, #0
   40b4c:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40b50:	mov	r3, r2
   40b54:	lsl	r3, r3, #1
   40b58:	ldr	r2, [pc, #-2056]	; 40358 <flatcc_json_parser_struct_as_root@@Base+0x1808>
   40b5c:	add	r2, pc, r2
   40b60:	add	r3, r3, r2
   40b64:	str	r3, [fp, #-48]	; 0xffffffd0
   40b68:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40b6c:	mov	r2, #100	; 0x64
   40b70:	mov	r3, #0
   40b74:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40b78:	mov	r2, r0
   40b7c:	mov	r3, r1
   40b80:	strd	r2, [fp, #-60]	; 0xffffffc4
   40b84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40b88:	ldrb	r2, [r3]
   40b8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40b90:	strb	r2, [r3]
   40b94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40b98:	add	r3, r3, #1
   40b9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40ba0:	ldrb	r2, [r2, #1]
   40ba4:	strb	r2, [r3]
   40ba8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40bac:	sub	r3, r3, #2
   40bb0:	str	r3, [fp, #-64]	; 0xffffffc0
   40bb4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40bb8:	mov	r2, #100	; 0x64
   40bbc:	mov	r3, #0
   40bc0:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40bc4:	mov	r3, r2
   40bc8:	lsl	r3, r3, #1
   40bcc:	ldr	r2, [pc, #-2168]	; 4035c <flatcc_json_parser_struct_as_root@@Base+0x180c>
   40bd0:	add	r2, pc, r2
   40bd4:	add	r3, r3, r2
   40bd8:	str	r3, [fp, #-48]	; 0xffffffd0
   40bdc:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40be0:	mov	r2, #100	; 0x64
   40be4:	mov	r3, #0
   40be8:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40bec:	mov	r2, r0
   40bf0:	mov	r3, r1
   40bf4:	strd	r2, [fp, #-60]	; 0xffffffc4
   40bf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40bfc:	ldrb	r2, [r3]
   40c00:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40c04:	strb	r2, [r3]
   40c08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40c0c:	add	r3, r3, #1
   40c10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40c14:	ldrb	r2, [r2, #1]
   40c18:	strb	r2, [r3]
   40c1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40c20:	sub	r3, r3, #2
   40c24:	str	r3, [fp, #-64]	; 0xffffffc0
   40c28:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40c2c:	mov	r2, #100	; 0x64
   40c30:	mov	r3, #0
   40c34:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40c38:	mov	r3, r2
   40c3c:	lsl	r3, r3, #1
   40c40:	ldr	r2, [pc, #-2280]	; 40360 <flatcc_json_parser_struct_as_root@@Base+0x1810>
   40c44:	add	r2, pc, r2
   40c48:	add	r3, r3, r2
   40c4c:	str	r3, [fp, #-48]	; 0xffffffd0
   40c50:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   40c54:	mov	r2, #100	; 0x64
   40c58:	mov	r3, #0
   40c5c:	bl	4dd2c <flatcc_json_printer_clear@@Base+0x678>
   40c60:	mov	r2, r0
   40c64:	mov	r3, r1
   40c68:	strd	r2, [fp, #-60]	; 0xffffffc4
   40c6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40c70:	ldrb	r2, [r3]
   40c74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40c78:	strb	r2, [r3]
   40c7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40c80:	add	r3, r3, #1
   40c84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40c88:	ldrb	r2, [r2, #1]
   40c8c:	strb	r2, [r3]
   40c90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40c94:	mov	r0, r3
   40c98:	sub	sp, fp, #28
   40c9c:	ldrd	r4, [sp]
   40ca0:	ldrd	r6, [sp, #8]
   40ca4:	ldrd	r8, [sp, #16]
   40ca8:	ldr	fp, [sp, #24]
   40cac:	add	sp, sp, #28
   40cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   40cb4:	str	fp, [sp, #-8]!
   40cb8:	str	lr, [sp, #4]
   40cbc:	add	fp, sp, #4
   40cc0:	sub	sp, sp, #16
   40cc4:	mov	r3, r0
   40cc8:	str	r1, [fp, #-20]	; 0xffffffec
   40ccc:	strb	r3, [fp, #-13]
   40cd0:	ldrb	r3, [fp, #-13]
   40cd4:	lsr	r3, r3, #7
   40cd8:	uxtb	r3, r3
   40cdc:	str	r3, [fp, #-8]
   40ce0:	ldr	r3, [fp, #-8]
   40ce4:	cmp	r3, #0
   40ce8:	beq	40d10 <flatcc_json_parser_struct_as_root@@Base+0x21c0>
   40cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   40cf0:	add	r2, r3, #1
   40cf4:	str	r2, [fp, #-20]	; 0xffffffec
   40cf8:	mov	r2, #45	; 0x2d
   40cfc:	strb	r2, [r3]
   40d00:	ldrb	r3, [fp, #-13]
   40d04:	rsb	r3, r3, #0
   40d08:	uxtb	r3, r3
   40d0c:	strb	r3, [fp, #-13]
   40d10:	ldrb	r3, [fp, #-13]
   40d14:	ldr	r1, [fp, #-20]	; 0xffffffec
   40d18:	mov	r0, r3
   40d1c:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   40d20:	mov	r2, r0
   40d24:	ldr	r3, [fp, #-8]
   40d28:	add	r3, r2, r3
   40d2c:	mov	r0, r3
   40d30:	sub	sp, fp, #4
   40d34:	ldr	fp, [sp]
   40d38:	add	sp, sp, #4
   40d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   40d40:	str	fp, [sp, #-8]!
   40d44:	str	lr, [sp, #4]
   40d48:	add	fp, sp, #4
   40d4c:	sub	sp, sp, #16
   40d50:	mov	r3, r0
   40d54:	str	r1, [fp, #-20]	; 0xffffffec
   40d58:	strh	r3, [fp, #-14]
   40d5c:	ldrh	r3, [fp, #-14]
   40d60:	lsr	r3, r3, #15
   40d64:	uxtb	r3, r3
   40d68:	str	r3, [fp, #-8]
   40d6c:	ldr	r3, [fp, #-8]
   40d70:	cmp	r3, #0
   40d74:	beq	40d9c <flatcc_json_parser_struct_as_root@@Base+0x224c>
   40d78:	ldr	r3, [fp, #-20]	; 0xffffffec
   40d7c:	add	r2, r3, #1
   40d80:	str	r2, [fp, #-20]	; 0xffffffec
   40d84:	mov	r2, #45	; 0x2d
   40d88:	strb	r2, [r3]
   40d8c:	ldrh	r3, [fp, #-14]
   40d90:	rsb	r3, r3, #0
   40d94:	uxth	r3, r3
   40d98:	strh	r3, [fp, #-14]
   40d9c:	ldrh	r3, [fp, #-14]
   40da0:	ldr	r1, [fp, #-20]	; 0xffffffec
   40da4:	mov	r0, r3
   40da8:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   40dac:	mov	r2, r0
   40db0:	ldr	r3, [fp, #-8]
   40db4:	add	r3, r2, r3
   40db8:	mov	r0, r3
   40dbc:	sub	sp, fp, #4
   40dc0:	ldr	fp, [sp]
   40dc4:	add	sp, sp, #4
   40dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   40dcc:	str	fp, [sp, #-8]!
   40dd0:	str	lr, [sp, #4]
   40dd4:	add	fp, sp, #4
   40dd8:	sub	sp, sp, #16
   40ddc:	str	r0, [fp, #-16]
   40de0:	str	r1, [fp, #-20]	; 0xffffffec
   40de4:	ldr	r3, [fp, #-16]
   40de8:	lsr	r3, r3, #31
   40dec:	uxtb	r3, r3
   40df0:	str	r3, [fp, #-8]
   40df4:	ldr	r3, [fp, #-8]
   40df8:	cmp	r3, #0
   40dfc:	beq	40e20 <flatcc_json_parser_struct_as_root@@Base+0x22d0>
   40e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   40e04:	add	r2, r3, #1
   40e08:	str	r2, [fp, #-20]	; 0xffffffec
   40e0c:	mov	r2, #45	; 0x2d
   40e10:	strb	r2, [r3]
   40e14:	ldr	r3, [fp, #-16]
   40e18:	rsb	r3, r3, #0
   40e1c:	str	r3, [fp, #-16]
   40e20:	ldr	r3, [fp, #-16]
   40e24:	ldr	r1, [fp, #-20]	; 0xffffffec
   40e28:	mov	r0, r3
   40e2c:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   40e30:	mov	r2, r0
   40e34:	ldr	r3, [fp, #-8]
   40e38:	add	r3, r2, r3
   40e3c:	mov	r0, r3
   40e40:	sub	sp, fp, #4
   40e44:	ldr	fp, [sp]
   40e48:	add	sp, sp, #4
   40e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   40e50:	str	fp, [sp, #-8]!
   40e54:	str	lr, [sp, #4]
   40e58:	add	fp, sp, #4
   40e5c:	sub	sp, sp, #24
   40e60:	strd	r0, [fp, #-20]	; 0xffffffec
   40e64:	str	r2, [fp, #-24]	; 0xffffffe8
   40e68:	ldr	r3, [fp, #-16]
   40e6c:	lsr	r3, r3, #31
   40e70:	uxtb	r3, r3
   40e74:	str	r3, [fp, #-8]
   40e78:	ldr	r3, [fp, #-8]
   40e7c:	cmp	r3, #0
   40e80:	beq	40ea8 <flatcc_json_parser_struct_as_root@@Base+0x2358>
   40e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40e88:	add	r2, r3, #1
   40e8c:	str	r2, [fp, #-24]	; 0xffffffe8
   40e90:	mov	r2, #45	; 0x2d
   40e94:	strb	r2, [r3]
   40e98:	ldrd	r2, [fp, #-20]	; 0xffffffec
   40e9c:	rsbs	r2, r2, #0
   40ea0:	rsc	r3, r3, #0
   40ea4:	strd	r2, [fp, #-20]	; 0xffffffec
   40ea8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   40eac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   40eb0:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   40eb4:	mov	r2, r0
   40eb8:	ldr	r3, [fp, #-8]
   40ebc:	add	r3, r2, r3
   40ec0:	mov	r0, r3
   40ec4:	sub	sp, fp, #4
   40ec8:	ldr	fp, [sp]
   40ecc:	add	sp, sp, #4
   40ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   40ed4:	push	{fp}		; (str fp, [sp, #-4]!)
   40ed8:	add	fp, sp, #0
   40edc:	sub	sp, sp, #52	; 0x34
   40ee0:	str	r0, [fp, #-48]	; 0xffffffd0
   40ee4:	str	r1, [fp, #-52]	; 0xffffffcc
   40ee8:	sub	r3, fp, #40	; 0x28
   40eec:	add	r3, r3, #20
   40ef0:	str	r3, [fp, #-8]
   40ef4:	ldr	r3, [fp, #-8]
   40ef8:	str	r3, [fp, #-12]
   40efc:	b	40f8c <flatcc_json_parser_struct_as_root@@Base+0x243c>
   40f00:	ldr	r3, [fp, #-8]
   40f04:	sub	r3, r3, #2
   40f08:	str	r3, [fp, #-8]
   40f0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40f10:	movw	r3, #34079	; 0x851f
   40f14:	movt	r3, #20971	; 0x51eb
   40f18:	umull	r1, r3, r3, r2
   40f1c:	lsr	r3, r3, #5
   40f20:	mov	r1, #100	; 0x64
   40f24:	mul	r3, r1, r3
   40f28:	sub	r3, r2, r3
   40f2c:	lsl	r3, r3, #1
   40f30:	str	r3, [fp, #-16]
   40f34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40f38:	movw	r3, #34079	; 0x851f
   40f3c:	movt	r3, #20971	; 0x51eb
   40f40:	umull	r2, r3, r3, r2
   40f44:	lsr	r3, r3, #5
   40f48:	str	r3, [fp, #-48]	; 0xffffffd0
   40f4c:	ldr	r3, [fp, #-16]
   40f50:	ldr	r2, [pc, #276]	; 4106c <flatcc_json_parser_struct_as_root@@Base+0x251c>
   40f54:	add	r2, pc, r2
   40f58:	add	r3, r3, r2
   40f5c:	ldrb	r2, [r3]
   40f60:	ldr	r3, [fp, #-8]
   40f64:	strb	r2, [r3]
   40f68:	ldr	r3, [fp, #-16]
   40f6c:	add	r3, r3, #1
   40f70:	ldr	r2, [pc, #248]	; 41070 <flatcc_json_parser_struct_as_root@@Base+0x2520>
   40f74:	add	r2, pc, r2
   40f78:	add	r2, r3, r2
   40f7c:	ldr	r3, [fp, #-8]
   40f80:	add	r3, r3, #1
   40f84:	ldrb	r2, [r2]
   40f88:	strb	r2, [r3]
   40f8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40f90:	cmp	r3, #99	; 0x63
   40f94:	bhi	40f00 <flatcc_json_parser_struct_as_root@@Base+0x23b0>
   40f98:	ldr	r3, [fp, #-8]
   40f9c:	sub	r3, r3, #2
   40fa0:	str	r3, [fp, #-8]
   40fa4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40fa8:	lsl	r3, r3, #1
   40fac:	str	r3, [fp, #-16]
   40fb0:	ldr	r3, [fp, #-16]
   40fb4:	ldr	r2, [pc, #184]	; 41074 <flatcc_json_parser_struct_as_root@@Base+0x2524>
   40fb8:	add	r2, pc, r2
   40fbc:	add	r3, r3, r2
   40fc0:	ldrb	r2, [r3]
   40fc4:	ldr	r3, [fp, #-8]
   40fc8:	strb	r2, [r3]
   40fcc:	ldr	r3, [fp, #-16]
   40fd0:	add	r3, r3, #1
   40fd4:	ldr	r2, [pc, #156]	; 41078 <flatcc_json_parser_struct_as_root@@Base+0x2528>
   40fd8:	add	r2, pc, r2
   40fdc:	add	r2, r3, r2
   40fe0:	ldr	r3, [fp, #-8]
   40fe4:	add	r3, r3, #1
   40fe8:	ldrb	r2, [r2]
   40fec:	strb	r2, [r3]
   40ff0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40ff4:	cmp	r3, #9
   40ff8:	bhi	41008 <flatcc_json_parser_struct_as_root@@Base+0x24b8>
   40ffc:	ldr	r3, [fp, #-8]
   41000:	add	r3, r3, #1
   41004:	str	r3, [fp, #-8]
   41008:	ldr	r2, [fp, #-12]
   4100c:	ldr	r3, [fp, #-8]
   41010:	sub	r3, r2, r3
   41014:	str	r3, [fp, #-20]	; 0xffffffec
   41018:	b	4103c <flatcc_json_parser_struct_as_root@@Base+0x24ec>
   4101c:	ldr	r2, [fp, #-8]
   41020:	add	r3, r2, #1
   41024:	str	r3, [fp, #-8]
   41028:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4102c:	add	r1, r3, #1
   41030:	str	r1, [fp, #-52]	; 0xffffffcc
   41034:	ldrb	r2, [r2]
   41038:	strb	r2, [r3]
   4103c:	ldr	r2, [fp, #-8]
   41040:	ldr	r3, [fp, #-12]
   41044:	cmp	r2, r3
   41048:	bne	4101c <flatcc_json_parser_struct_as_root@@Base+0x24cc>
   4104c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41050:	mov	r2, #0
   41054:	strb	r2, [r3]
   41058:	ldr	r3, [fp, #-20]	; 0xffffffec
   4105c:	mov	r0, r3
   41060:	add	sp, fp, #0
   41064:	pop	{fp}		; (ldr fp, [sp], #4)
   41068:	bx	lr
   4106c:	ldrdeq	r2, [r1], -r8
   41070:			; <UNDEFINED> instruction: 0x000121b8
   41074:	andeq	r2, r1, r4, ror r1
   41078:	andeq	r2, r1, r4, asr r1
   4107c:	str	fp, [sp, #-8]!
   41080:	str	lr, [sp, #4]
   41084:	add	fp, sp, #4
   41088:	sub	sp, sp, #16
   4108c:	str	r0, [fp, #-16]
   41090:	str	r1, [fp, #-20]	; 0xffffffec
   41094:	ldr	r3, [fp, #-16]
   41098:	lsr	r3, r3, #31
   4109c:	uxtb	r3, r3
   410a0:	str	r3, [fp, #-8]
   410a4:	ldr	r3, [fp, #-8]
   410a8:	cmp	r3, #0
   410ac:	beq	410d0 <flatcc_json_parser_struct_as_root@@Base+0x2580>
   410b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   410b4:	add	r2, r3, #1
   410b8:	str	r2, [fp, #-20]	; 0xffffffec
   410bc:	mov	r2, #45	; 0x2d
   410c0:	strb	r2, [r3]
   410c4:	ldr	r3, [fp, #-16]
   410c8:	rsb	r3, r3, #0
   410cc:	str	r3, [fp, #-16]
   410d0:	ldr	r3, [fp, #-16]
   410d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   410d8:	mov	r0, r3
   410dc:	bl	40ed4 <flatcc_json_parser_struct_as_root@@Base+0x2384>
   410e0:	mov	r2, r0
   410e4:	ldr	r3, [fp, #-8]
   410e8:	add	r3, r2, r3
   410ec:	mov	r0, r3
   410f0:	sub	sp, fp, #4
   410f4:	ldr	fp, [sp]
   410f8:	add	sp, sp, #4
   410fc:	pop	{pc}		; (ldr pc, [sp], #4)
   41100:	push	{fp}		; (str fp, [sp, #-4]!)
   41104:	add	fp, sp, #0
   41108:	sub	sp, sp, #52	; 0x34
   4110c:	str	r0, [fp, #-48]	; 0xffffffd0
   41110:	str	r1, [fp, #-52]	; 0xffffffcc
   41114:	sub	r3, fp, #40	; 0x28
   41118:	add	r3, r3, #20
   4111c:	str	r3, [fp, #-8]
   41120:	ldr	r3, [fp, #-8]
   41124:	str	r3, [fp, #-12]
   41128:	b	411b8 <flatcc_json_parser_struct_as_root@@Base+0x2668>
   4112c:	ldr	r3, [fp, #-8]
   41130:	sub	r3, r3, #2
   41134:	str	r3, [fp, #-8]
   41138:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4113c:	movw	r3, #34079	; 0x851f
   41140:	movt	r3, #20971	; 0x51eb
   41144:	umull	r1, r3, r3, r2
   41148:	lsr	r3, r3, #5
   4114c:	mov	r1, #100	; 0x64
   41150:	mul	r3, r1, r3
   41154:	sub	r3, r2, r3
   41158:	lsl	r3, r3, #1
   4115c:	str	r3, [fp, #-16]
   41160:	ldr	r2, [fp, #-48]	; 0xffffffd0
   41164:	movw	r3, #34079	; 0x851f
   41168:	movt	r3, #20971	; 0x51eb
   4116c:	umull	r2, r3, r3, r2
   41170:	lsr	r3, r3, #5
   41174:	str	r3, [fp, #-48]	; 0xffffffd0
   41178:	ldr	r3, [fp, #-16]
   4117c:	ldr	r2, [pc, #276]	; 41298 <flatcc_json_parser_struct_as_root@@Base+0x2748>
   41180:	add	r2, pc, r2
   41184:	add	r3, r3, r2
   41188:	ldrb	r2, [r3]
   4118c:	ldr	r3, [fp, #-8]
   41190:	strb	r2, [r3]
   41194:	ldr	r3, [fp, #-16]
   41198:	add	r3, r3, #1
   4119c:	ldr	r2, [pc, #248]	; 4129c <flatcc_json_parser_struct_as_root@@Base+0x274c>
   411a0:	add	r2, pc, r2
   411a4:	add	r2, r3, r2
   411a8:	ldr	r3, [fp, #-8]
   411ac:	add	r3, r3, #1
   411b0:	ldrb	r2, [r2]
   411b4:	strb	r2, [r3]
   411b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   411bc:	cmp	r3, #99	; 0x63
   411c0:	bhi	4112c <flatcc_json_parser_struct_as_root@@Base+0x25dc>
   411c4:	ldr	r3, [fp, #-8]
   411c8:	sub	r3, r3, #2
   411cc:	str	r3, [fp, #-8]
   411d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   411d4:	lsl	r3, r3, #1
   411d8:	str	r3, [fp, #-16]
   411dc:	ldr	r3, [fp, #-16]
   411e0:	ldr	r2, [pc, #184]	; 412a0 <flatcc_json_parser_struct_as_root@@Base+0x2750>
   411e4:	add	r2, pc, r2
   411e8:	add	r3, r3, r2
   411ec:	ldrb	r2, [r3]
   411f0:	ldr	r3, [fp, #-8]
   411f4:	strb	r2, [r3]
   411f8:	ldr	r3, [fp, #-16]
   411fc:	add	r3, r3, #1
   41200:	ldr	r2, [pc, #156]	; 412a4 <flatcc_json_parser_struct_as_root@@Base+0x2754>
   41204:	add	r2, pc, r2
   41208:	add	r2, r3, r2
   4120c:	ldr	r3, [fp, #-8]
   41210:	add	r3, r3, #1
   41214:	ldrb	r2, [r2]
   41218:	strb	r2, [r3]
   4121c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41220:	cmp	r3, #9
   41224:	bhi	41234 <flatcc_json_parser_struct_as_root@@Base+0x26e4>
   41228:	ldr	r3, [fp, #-8]
   4122c:	add	r3, r3, #1
   41230:	str	r3, [fp, #-8]
   41234:	ldr	r2, [fp, #-12]
   41238:	ldr	r3, [fp, #-8]
   4123c:	sub	r3, r2, r3
   41240:	str	r3, [fp, #-20]	; 0xffffffec
   41244:	b	41268 <flatcc_json_parser_struct_as_root@@Base+0x2718>
   41248:	ldr	r2, [fp, #-8]
   4124c:	add	r3, r2, #1
   41250:	str	r3, [fp, #-8]
   41254:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41258:	add	r1, r3, #1
   4125c:	str	r1, [fp, #-52]	; 0xffffffcc
   41260:	ldrb	r2, [r2]
   41264:	strb	r2, [r3]
   41268:	ldr	r2, [fp, #-8]
   4126c:	ldr	r3, [fp, #-12]
   41270:	cmp	r2, r3
   41274:	bne	41248 <flatcc_json_parser_struct_as_root@@Base+0x26f8>
   41278:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4127c:	mov	r2, #0
   41280:	strb	r2, [r3]
   41284:	ldr	r3, [fp, #-20]	; 0xffffffec
   41288:	mov	r0, r3
   4128c:	add	sp, fp, #0
   41290:	pop	{fp}		; (ldr fp, [sp], #4)
   41294:	bx	lr
   41298:	andeq	r1, r1, ip, lsr #31
   4129c:	andeq	r1, r1, ip, lsl #31
   412a0:	andeq	r1, r1, r8, asr #30
   412a4:	andeq	r1, r1, r8, lsr #30
   412a8:	str	fp, [sp, #-8]!
   412ac:	str	lr, [sp, #4]
   412b0:	add	fp, sp, #4
   412b4:	sub	sp, sp, #16
   412b8:	str	r0, [fp, #-16]
   412bc:	str	r1, [fp, #-20]	; 0xffffffec
   412c0:	ldr	r3, [fp, #-16]
   412c4:	lsr	r3, r3, #31
   412c8:	uxtb	r3, r3
   412cc:	str	r3, [fp, #-8]
   412d0:	ldr	r3, [fp, #-8]
   412d4:	cmp	r3, #0
   412d8:	beq	412fc <flatcc_json_parser_struct_as_root@@Base+0x27ac>
   412dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   412e0:	add	r2, r3, #1
   412e4:	str	r2, [fp, #-20]	; 0xffffffec
   412e8:	mov	r2, #45	; 0x2d
   412ec:	strb	r2, [r3]
   412f0:	ldr	r3, [fp, #-16]
   412f4:	rsb	r3, r3, #0
   412f8:	str	r3, [fp, #-16]
   412fc:	ldr	r3, [fp, #-16]
   41300:	ldr	r1, [fp, #-20]	; 0xffffffec
   41304:	mov	r0, r3
   41308:	bl	41100 <flatcc_json_parser_struct_as_root@@Base+0x25b0>
   4130c:	mov	r2, r0
   41310:	ldr	r3, [fp, #-8]
   41314:	add	r3, r2, r3
   41318:	mov	r0, r3
   4131c:	sub	sp, fp, #4
   41320:	ldr	fp, [sp]
   41324:	add	sp, sp, #4
   41328:	pop	{pc}		; (ldr pc, [sp], #4)
   4132c:	push	{fp}		; (str fp, [sp, #-4]!)
   41330:	add	fp, sp, #0
   41334:	sub	sp, sp, #20
   41338:	vstr	d0, [fp, #-20]	; 0xffffffec
   4133c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   41340:	strd	r2, [fp, #-12]
   41344:	ldrd	r2, [fp, #-12]
   41348:	mov	r0, r2
   4134c:	mov	r1, r3
   41350:	add	sp, fp, #0
   41354:	pop	{fp}		; (ldr fp, [sp], #4)
   41358:	bx	lr
   4135c:	push	{fp}		; (str fp, [sp, #-4]!)
   41360:	add	fp, sp, #0
   41364:	sub	sp, sp, #20
   41368:	strd	r0, [fp, #-20]	; 0xffffffec
   4136c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   41370:	strd	r2, [fp, #-12]
   41374:	ldrd	r2, [fp, #-12]
   41378:	vmov	d7, r2, r3
   4137c:	vmov.f64	d0, d7
   41380:	add	sp, fp, #0
   41384:	pop	{fp}		; (ldr fp, [sp], #4)
   41388:	bx	lr
   4138c:	push	{fp}		; (str fp, [sp, #-4]!)
   41390:	add	fp, sp, #0
   41394:	sub	sp, sp, #20
   41398:	vstr	d0, [fp, #-20]	; 0xffffffec
   4139c:	vldr	d7, [fp, #-20]	; 0xffffffec
   413a0:	vcvt.s32.f64	s15, d7
   413a4:	vmov	r3, s15
   413a8:	str	r3, [fp, #-8]
   413ac:	vldr	d7, [fp, #-20]	; 0xffffffec
   413b0:	vcmpe.f64	d7, #0.0
   413b4:	vmrs	APSR_nzcv, fpscr
   413b8:	bpl	413c4 <flatcc_json_parser_struct_as_root@@Base+0x2874>
   413bc:	ldr	r3, [fp, #-8]
   413c0:	b	413f4 <flatcc_json_parser_struct_as_root@@Base+0x28a4>
   413c4:	ldr	r3, [fp, #-8]
   413c8:	vmov	s15, r3
   413cc:	vcvt.f64.s32	d7, s15
   413d0:	vldr	d6, [fp, #-20]	; 0xffffffec
   413d4:	vsub.f64	d7, d6, d7
   413d8:	vcmp.f64	d7, #0.0
   413dc:	vmrs	APSR_nzcv, fpscr
   413e0:	beq	413f0 <flatcc_json_parser_struct_as_root@@Base+0x28a0>
   413e4:	ldr	r3, [fp, #-8]
   413e8:	add	r3, r3, #1
   413ec:	b	413f4 <flatcc_json_parser_struct_as_root@@Base+0x28a4>
   413f0:	ldr	r3, [fp, #-8]
   413f4:	mov	r0, r3
   413f8:	add	sp, fp, #0
   413fc:	pop	{fp}		; (ldr fp, [sp], #4)
   41400:	bx	lr
   41404:	str	fp, [sp, #-8]!
   41408:	str	lr, [sp, #4]
   4140c:	add	fp, sp, #4
   41410:	sub	sp, sp, #16
   41414:	str	r0, [fp, #-16]
   41418:	str	r1, [fp, #-20]	; 0xffffffec
   4141c:	ldr	r3, [fp, #-16]
   41420:	add	r3, r3, #63	; 0x3f
   41424:	vmov	s15, r3
   41428:	vcvt.f64.s32	d7, s15
   4142c:	vldr	d6, [pc, #172]	; 414e0 <flatcc_json_parser_struct_as_root@@Base+0x2990>
   41430:	vmul.f64	d7, d7, d6
   41434:	vmov.f64	d0, d7
   41438:	bl	4138c <flatcc_json_parser_struct_as_root@@Base+0x283c>
   4143c:	str	r0, [fp, #-8]
   41440:	ldr	r3, [fp, #-8]
   41444:	add	r3, r3, #344	; 0x158
   41448:	add	r3, r3, #3
   4144c:	add	r2, r3, #7
   41450:	cmp	r3, #0
   41454:	movlt	r3, r2
   41458:	movge	r3, r3
   4145c:	asr	r3, r3, #3
   41460:	add	r3, r3, #1
   41464:	str	r3, [fp, #-12]
   41468:	ldr	r2, [pc, #120]	; 414e8 <flatcc_json_parser_struct_as_root@@Base+0x2998>
   4146c:	add	r2, pc, r2
   41470:	ldr	r3, [fp, #-12]
   41474:	lsl	r3, r3, #4
   41478:	add	r3, r2, r3
   4147c:	ldrd	r2, [r3]
   41480:	ldr	r1, [fp, #-20]	; 0xffffffec
   41484:	strd	r2, [r1]
   41488:	ldr	r2, [pc, #92]	; 414ec <flatcc_json_parser_struct_as_root@@Base+0x299c>
   4148c:	add	r2, pc, r2
   41490:	ldr	r3, [fp, #-12]
   41494:	lsl	r3, r3, #4
   41498:	add	r3, r2, r3
   4149c:	add	r3, r3, #8
   414a0:	ldrsh	r3, [r3]
   414a4:	mov	r2, r3
   414a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   414ac:	str	r2, [r3, #8]
   414b0:	ldr	r2, [pc, #56]	; 414f0 <flatcc_json_parser_struct_as_root@@Base+0x29a0>
   414b4:	add	r2, pc, r2
   414b8:	ldr	r3, [fp, #-12]
   414bc:	lsl	r3, r3, #4
   414c0:	add	r3, r2, r3
   414c4:	add	r3, r3, #10
   414c8:	ldrsh	r3, [r3]
   414cc:	mov	r0, r3
   414d0:	sub	sp, fp, #4
   414d4:	ldr	fp, [sp]
   414d8:	add	sp, sp, #4
   414dc:	pop	{pc}		; (ldr pc, [sp], #4)
   414e0:			; <UNDEFINED> instruction: 0x509f79fe
   414e4:	svccc	0x00d34413
   414e8:	muleq	r1, ip, sp
   414ec:	andeq	r1, r1, ip, ror sp
   414f0:	andeq	r1, r1, r4, asr sp
   414f4:	sub	sp, sp, #8
   414f8:	strd	r4, [sp, #-16]!
   414fc:	str	fp, [sp, #8]
   41500:	str	lr, [sp, #12]
   41504:	add	fp, sp, #12
   41508:	sub	sp, sp, #24
   4150c:	str	r0, [fp, #-32]	; 0xffffffe0
   41510:	add	r1, fp, #4
   41514:	stm	r1, {r2, r3}
   41518:	ldrd	r0, [fp, #4]
   4151c:	ldrd	r2, [fp, #20]
   41520:	subs	r4, r0, r2
   41524:	sbc	r5, r1, r3
   41528:	strd	r4, [fp, #-28]	; 0xffffffe4
   4152c:	ldr	r3, [fp, #12]
   41530:	str	r3, [fp, #-20]	; 0xffffffec
   41534:	ldr	r2, [fp, #12]
   41538:	ldr	r3, [fp, #28]
   4153c:	cmp	r2, r3
   41540:	bne	41558 <flatcc_json_parser_struct_as_root@@Base+0x2a08>
   41544:	ldrd	r0, [fp, #4]
   41548:	ldrd	r2, [fp, #20]
   4154c:	cmp	r1, r3
   41550:	cmpeq	r0, r2
   41554:	bcs	41578 <flatcc_json_parser_struct_as_root@@Base+0x2a28>
   41558:	ldr	r3, [pc, #84]	; 415b4 <flatcc_json_parser_struct_as_root@@Base+0x2a64>
   4155c:	add	r3, pc, r3
   41560:	mov	r2, #239	; 0xef
   41564:	ldr	r1, [pc, #76]	; 415b8 <flatcc_json_parser_struct_as_root@@Base+0x2a68>
   41568:	add	r1, pc, r1
   4156c:	ldr	r0, [pc, #72]	; 415bc <flatcc_json_parser_struct_as_root@@Base+0x2a6c>
   41570:	add	r0, pc, r0
   41574:	bl	145e8 <__assert_fail@plt>
   41578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4157c:	mov	r0, r3
   41580:	sub	r1, fp, #28
   41584:	ldrd	r2, [r1]
   41588:	strd	r2, [r0]
   4158c:	ldrd	r2, [r1, #8]
   41590:	strd	r2, [r0, #8]
   41594:	ldr	r0, [fp, #-32]	; 0xffffffe0
   41598:	sub	sp, fp, #12
   4159c:	ldrd	r4, [sp]
   415a0:	ldr	fp, [sp, #8]
   415a4:	ldr	lr, [sp, #12]
   415a8:	add	sp, sp, #16
   415ac:	add	sp, sp, #8
   415b0:	bx	lr
   415b4:	andeq	r2, r1, r8, lsl #12
   415b8:	andeq	r2, r1, r0, lsl r2
   415bc:	andeq	r2, r1, r8, ror r2
   415c0:	sub	sp, sp, #8
   415c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   415c8:	strd	r6, [sp, #8]
   415cc:	strd	r8, [sp, #16]
   415d0:	str	fp, [sp, #24]
   415d4:	str	lr, [sp, #28]
   415d8:	add	fp, sp, #28
   415dc:	sub	sp, sp, #152	; 0x98
   415e0:	str	r0, [fp, #-120]	; 0xffffff88
   415e4:	add	r1, fp, #4
   415e8:	stm	r1, {r2, r3}
   415ec:	ldrd	r2, [fp, #4]
   415f0:	mov	r0, #0
   415f4:	mov	r1, #0
   415f8:	mov	r0, r3
   415fc:	mov	r1, #0
   41600:	strd	r0, [fp, #-36]	; 0xffffffdc
   41604:	ldrd	r0, [fp, #4]
   41608:	mvn	r2, #0
   4160c:	mov	r3, #0
   41610:	and	r4, r0, r2
   41614:	and	r5, r1, r3
   41618:	strd	r4, [fp, #-44]	; 0xffffffd4
   4161c:	ldrd	r2, [fp, #20]
   41620:	mov	r0, #0
   41624:	mov	r1, #0
   41628:	mov	r0, r3
   4162c:	mov	r1, #0
   41630:	strd	r0, [fp, #-52]	; 0xffffffcc
   41634:	ldrd	r0, [fp, #20]
   41638:	mvn	r2, #0
   4163c:	mov	r3, #0
   41640:	and	r6, r0, r2
   41644:	and	r7, r1, r3
   41648:	strd	r6, [fp, #-60]	; 0xffffffc4
   4164c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   41650:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41654:	mul	r1, r3, r2
   41658:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4165c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   41660:	mul	r3, r3, r2
   41664:	add	r1, r1, r3
   41668:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4166c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41670:	umull	r2, r3, r2, r3
   41674:	add	r1, r1, r3
   41678:	mov	r3, r1
   4167c:	strd	r2, [fp, #-68]	; 0xffffffbc
   41680:	strd	r2, [fp, #-68]	; 0xffffffbc
   41684:	ldr	r2, [fp, #-40]	; 0xffffffd8
   41688:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4168c:	mul	r1, r3, r2
   41690:	ldr	r2, [fp, #-48]	; 0xffffffd0
   41694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41698:	mul	r3, r3, r2
   4169c:	add	r1, r1, r3
   416a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   416a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   416a8:	umull	r2, r3, r2, r3
   416ac:	add	r1, r1, r3
   416b0:	mov	r3, r1
   416b4:	strd	r2, [fp, #-76]	; 0xffffffb4
   416b8:	strd	r2, [fp, #-76]	; 0xffffffb4
   416bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   416c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   416c4:	mul	r1, r3, r2
   416c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   416cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   416d0:	mul	r3, r3, r2
   416d4:	add	r1, r1, r3
   416d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   416dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   416e0:	umull	r2, r3, r2, r3
   416e4:	add	r1, r1, r3
   416e8:	mov	r3, r1
   416ec:	strd	r2, [fp, #-84]	; 0xffffffac
   416f0:	strd	r2, [fp, #-84]	; 0xffffffac
   416f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   416f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   416fc:	mul	r1, r3, r2
   41700:	ldr	r2, [fp, #-56]	; 0xffffffc8
   41704:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41708:	mul	r3, r3, r2
   4170c:	add	r1, r1, r3
   41710:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41714:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41718:	umull	r2, r3, r2, r3
   4171c:	add	r1, r1, r3
   41720:	mov	r3, r1
   41724:	strd	r2, [fp, #-92]	; 0xffffffa4
   41728:	strd	r2, [fp, #-92]	; 0xffffffa4
   4172c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   41730:	mov	r4, #0
   41734:	mov	r5, #0
   41738:	mov	r4, r3
   4173c:	mov	r5, #0
   41740:	ldrd	r0, [fp, #-84]	; 0xffffffac
   41744:	mvn	r2, #0
   41748:	mov	r3, #0
   4174c:	and	r8, r0, r2
   41750:	and	r9, r1, r3
   41754:	adds	r3, r4, r8
   41758:	str	r3, [fp, #-132]	; 0xffffff7c
   4175c:	adc	r3, r5, r9
   41760:	str	r3, [fp, #-128]	; 0xffffff80
   41764:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   41768:	mvn	r2, #0
   4176c:	mov	r3, #0
   41770:	and	ip, r0, r2
   41774:	str	ip, [fp, #-140]	; 0xffffff74
   41778:	and	r3, r1, r3
   4177c:	str	r3, [fp, #-136]	; 0xffffff78
   41780:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   41784:	mov	ip, r0
   41788:	ldrd	r2, [fp, #-140]	; 0xffffff74
   4178c:	mov	lr, r2
   41790:	adds	ip, ip, lr
   41794:	str	ip, [fp, #-172]	; 0xffffff54
   41798:	adc	r3, r1, r3
   4179c:	str	r3, [fp, #-168]	; 0xffffff58
   417a0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   417a4:	strd	r2, [fp, #-100]	; 0xffffff9c
   417a8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   417ac:	adds	r1, r2, #-2147483648	; 0x80000000
   417b0:	str	r1, [fp, #-180]	; 0xffffff4c
   417b4:	adc	r3, r3, #0
   417b8:	str	r3, [fp, #-176]	; 0xffffff50
   417bc:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   417c0:	strd	r2, [fp, #-100]	; 0xffffff9c
   417c4:	ldrd	r0, [fp, #-84]	; 0xffffffac
   417c8:	mov	r2, #0
   417cc:	mov	r3, #0
   417d0:	mov	r2, r1
   417d4:	mov	r3, #0
   417d8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   417dc:	adds	ip, r2, r0
   417e0:	str	ip, [fp, #-148]	; 0xffffff6c
   417e4:	adc	r3, r3, r1
   417e8:	str	r3, [fp, #-144]	; 0xffffff70
   417ec:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   417f0:	mov	r2, #0
   417f4:	mov	r3, #0
   417f8:	mov	r2, r1
   417fc:	mov	r3, #0
   41800:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   41804:	mov	ip, r0
   41808:	adds	ip, ip, r2
   4180c:	str	ip, [fp, #-156]	; 0xffffff64
   41810:	adc	r3, r1, r3
   41814:	str	r3, [fp, #-152]	; 0xffffff68
   41818:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   4181c:	mov	r2, #0
   41820:	mov	r3, #0
   41824:	mov	r2, r1
   41828:	mov	r3, #0
   4182c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   41830:	mov	ip, r0
   41834:	adds	ip, ip, r2
   41838:	str	ip, [fp, #-164]	; 0xffffff5c
   4183c:	adc	r3, r1, r3
   41840:	str	r3, [fp, #-160]	; 0xffffff60
   41844:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   41848:	strd	r2, [fp, #-116]	; 0xffffff8c
   4184c:	ldr	r2, [fp, #12]
   41850:	ldr	r3, [fp, #28]
   41854:	add	r3, r2, r3
   41858:	add	r3, r3, #64	; 0x40
   4185c:	str	r3, [fp, #-108]	; 0xffffff94
   41860:	ldr	r3, [fp, #-120]	; 0xffffff88
   41864:	mov	r0, r3
   41868:	sub	r1, fp, #116	; 0x74
   4186c:	ldrd	r2, [r1]
   41870:	strd	r2, [r0]
   41874:	ldrd	r2, [r1, #8]
   41878:	strd	r2, [r0, #8]
   4187c:	ldr	r0, [fp, #-120]	; 0xffffff88
   41880:	sub	sp, fp, #28
   41884:	ldrd	r4, [sp]
   41888:	ldrd	r6, [sp, #8]
   4188c:	ldrd	r8, [sp, #16]
   41890:	ldr	fp, [sp, #24]
   41894:	ldr	lr, [sp, #28]
   41898:	add	sp, sp, #32
   4189c:	add	sp, sp, #8
   418a0:	bx	lr
   418a4:	sub	sp, sp, #8
   418a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   418ac:	strd	r6, [sp, #8]
   418b0:	str	fp, [sp, #16]
   418b4:	str	lr, [sp, #20]
   418b8:	add	fp, sp, #20
   418bc:	sub	sp, sp, #8
   418c0:	str	r0, [fp, #-24]	; 0xffffffe8
   418c4:	add	r1, fp, #4
   418c8:	stm	r1, {r2, r3}
   418cc:	ldrd	r2, [fp, #4]
   418d0:	orrs	r3, r2, r3
   418d4:	bne	41920 <flatcc_json_parser_struct_as_root@@Base+0x2dd0>
   418d8:	ldr	r3, [pc, #216]	; 419b8 <flatcc_json_parser_struct_as_root@@Base+0x2e68>
   418dc:	add	r3, pc, r3
   418e0:	mov	r2, #260	; 0x104
   418e4:	ldr	r1, [pc, #208]	; 419bc <flatcc_json_parser_struct_as_root@@Base+0x2e6c>
   418e8:	add	r1, pc, r1
   418ec:	ldr	r0, [pc, #204]	; 419c0 <flatcc_json_parser_struct_as_root@@Base+0x2e70>
   418f0:	add	r0, pc, r0
   418f4:	bl	145e8 <__assert_fail@plt>
   418f8:	ldrd	r0, [fp, #4]
   418fc:	mov	r2, #0
   41900:	mov	r3, #0
   41904:	lsl	r3, r1, #10
   41908:	orr	r3, r3, r0, lsr #22
   4190c:	lsl	r2, r0, #10
   41910:	strd	r2, [fp, #4]
   41914:	ldr	r3, [fp, #12]
   41918:	sub	r3, r3, #10
   4191c:	str	r3, [fp, #12]
   41920:	ldrd	r2, [fp, #4]
   41924:	mov	r0, #0
   41928:	mov	r1, #0
   4192c:	movt	r1, #65472	; 0xffc0
   41930:	and	r4, r2, r0
   41934:	and	r5, r3, r1
   41938:	orrs	r3, r4, r5
   4193c:	beq	418f8 <flatcc_json_parser_struct_as_root@@Base+0x2da8>
   41940:	b	41968 <flatcc_json_parser_struct_as_root@@Base+0x2e18>
   41944:	ldrd	r2, [fp, #4]
   41948:	adds	r6, r2, r2
   4194c:	adc	r7, r3, r3
   41950:	mov	r2, r6
   41954:	mov	r3, r7
   41958:	strd	r2, [fp, #4]
   4195c:	ldr	r3, [fp, #12]
   41960:	sub	r3, r3, #1
   41964:	str	r3, [fp, #12]
   41968:	ldrd	r2, [fp, #4]
   4196c:	cmp	r2, #0
   41970:	sbcs	r3, r3, #0
   41974:	bge	41944 <flatcc_json_parser_struct_as_root@@Base+0x2df4>
   41978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4197c:	mov	r0, r3
   41980:	add	r1, fp, #4
   41984:	ldrd	r2, [r1]
   41988:	strd	r2, [r0]
   4198c:	ldrd	r2, [r1, #8]
   41990:	strd	r2, [r0, #8]
   41994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41998:	sub	sp, fp, #20
   4199c:	ldrd	r4, [sp]
   419a0:	ldrd	r6, [sp, #8]
   419a4:	ldr	fp, [sp, #16]
   419a8:	ldr	lr, [sp, #20]
   419ac:	add	sp, sp, #24
   419b0:	add	sp, sp, #8
   419b4:	bx	lr
   419b8:	muleq	r1, ip, r2
   419bc:	muleq	r1, r0, lr
   419c0:	andeq	r1, r1, r4, lsl pc
   419c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   419c8:	strd	r6, [sp, #8]
   419cc:	strd	r8, [sp, #16]
   419d0:	str	fp, [sp, #24]
   419d4:	str	lr, [sp, #28]
   419d8:	add	fp, sp, #28
   419dc:	sub	sp, sp, #48	; 0x30
   419e0:	str	r0, [fp, #-56]	; 0xffffffc8
   419e4:	vstr	d0, [fp, #-68]	; 0xffffffbc
   419e8:	vldr	d0, [fp, #-68]	; 0xffffffbc
   419ec:	bl	4132c <flatcc_json_parser_struct_as_root@@Base+0x27dc>
   419f0:	strd	r0, [fp, #-36]	; 0xffffffdc
   419f4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   419f8:	mov	r0, #0
   419fc:	mov	r1, #0
   41a00:	movt	r1, #32752	; 0x7ff0
   41a04:	and	ip, r2, r0
   41a08:	str	ip, [fp, #-76]	; 0xffffffb4
   41a0c:	and	r3, r3, r1
   41a10:	str	r3, [fp, #-72]	; 0xffffffb8
   41a14:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   41a18:	orrs	r3, r2, r3
   41a1c:	bne	41a4c <flatcc_json_parser_struct_as_root@@Base+0x2efc>
   41a20:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   41a24:	mvn	r0, #0
   41a28:	movw	r1, #65535	; 0xffff
   41a2c:	movt	r1, #15
   41a30:	and	r8, r2, r0
   41a34:	and	r9, r3, r1
   41a38:	strd	r8, [fp, #-52]	; 0xffffffcc
   41a3c:	movw	r3, #64462	; 0xfbce
   41a40:	movt	r3, #65535	; 0xffff
   41a44:	str	r3, [fp, #-44]	; 0xffffffd4
   41a48:	b	41a98 <flatcc_json_parser_struct_as_root@@Base+0x2f48>
   41a4c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   41a50:	mvn	r0, #0
   41a54:	movw	r1, #65535	; 0xffff
   41a58:	movt	r1, #15
   41a5c:	and	r4, r2, r0
   41a60:	and	r5, r3, r1
   41a64:	adds	r6, r4, #0
   41a68:	adc	r7, r5, #1048576	; 0x100000
   41a6c:	strd	r6, [fp, #-52]	; 0xffffffcc
   41a70:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   41a74:	mov	r2, #0
   41a78:	mov	r3, #0
   41a7c:	lsr	r2, r1, #20
   41a80:	mov	r3, #0
   41a84:	mov	r3, r2
   41a88:	ubfx	r3, r3, #0, #11
   41a8c:	sub	r3, r3, #1072	; 0x430
   41a90:	sub	r3, r3, #3
   41a94:	str	r3, [fp, #-44]	; 0xffffffd4
   41a98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   41a9c:	mov	r0, r3
   41aa0:	sub	r1, fp, #52	; 0x34
   41aa4:	ldrd	r2, [r1]
   41aa8:	strd	r2, [r0]
   41aac:	ldrd	r2, [r1, #8]
   41ab0:	strd	r2, [r0, #8]
   41ab4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   41ab8:	sub	sp, fp, #28
   41abc:	ldrd	r4, [sp]
   41ac0:	ldrd	r6, [sp, #8]
   41ac4:	ldrd	r8, [sp, #16]
   41ac8:	ldr	fp, [sp, #24]
   41acc:	add	sp, sp, #28
   41ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   41ad4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   41ad8:	strd	r6, [sp, #8]
   41adc:	strd	r8, [sp, #16]
   41ae0:	str	fp, [sp, #24]
   41ae4:	str	lr, [sp, #28]
   41ae8:	add	fp, sp, #28
   41aec:	sub	sp, sp, #112	; 0x70
   41af0:	sub	ip, fp, #100	; 0x64
   41af4:	stm	ip, {r0, r1, r2, r3}
   41af8:	mov	r2, #0
   41afc:	mov	r3, #1048576	; 0x100000
   41b00:	strd	r2, [fp, #-44]	; 0xffffffd4
   41b04:	mvn	r2, #0
   41b08:	movw	r3, #65535	; 0xffff
   41b0c:	movt	r3, #15
   41b10:	strd	r2, [fp, #-52]	; 0xffffffcc
   41b14:	movw	r3, #64462	; 0xfbce
   41b18:	movt	r3, #65535	; 0xffff
   41b1c:	str	r3, [fp, #-56]	; 0xffffffc8
   41b20:	movw	r3, #1075	; 0x433
   41b24:	str	r3, [fp, #-60]	; 0xffffffc4
   41b28:	mov	r3, #52	; 0x34
   41b2c:	str	r3, [fp, #-64]	; 0xffffffc0
   41b30:	sub	r0, fp, #84	; 0x54
   41b34:	sub	r1, fp, #100	; 0x64
   41b38:	ldrd	r2, [r1]
   41b3c:	strd	r2, [r0]
   41b40:	ldrd	r2, [r1, #8]
   41b44:	strd	r2, [r0, #8]
   41b48:	b	41b74 <flatcc_json_parser_struct_as_root@@Base+0x3024>
   41b4c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   41b50:	mov	r0, #0
   41b54:	mov	r1, #0
   41b58:	lsr	r0, r2, #1
   41b5c:	orr	r0, r0, r3, lsl #31
   41b60:	lsr	r1, r3, #1
   41b64:	strd	r0, [fp, #-84]	; 0xffffffac
   41b68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   41b6c:	add	r3, r3, #1
   41b70:	str	r3, [fp, #-76]	; 0xffffffb4
   41b74:	ldrd	r4, [fp, #-84]	; 0xffffffac
   41b78:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   41b7c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   41b80:	adds	ip, r0, r2
   41b84:	str	ip, [fp, #-108]	; 0xffffff94
   41b88:	adc	r3, r1, r3
   41b8c:	str	r3, [fp, #-104]	; 0xffffff98
   41b90:	ldrd	r2, [fp, #-108]	; 0xffffff94
   41b94:	cmp	r5, r3
   41b98:	cmpeq	r4, r2
   41b9c:	bhi	41b4c <flatcc_json_parser_struct_as_root@@Base+0x2ffc>
   41ba0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   41ba4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   41ba8:	cmp	r2, r3
   41bac:	ble	41be0 <flatcc_json_parser_struct_as_root@@Base+0x3090>
   41bb0:	vldr	d7, [pc, #296]	; 41ce0 <flatcc_json_parser_struct_as_root@@Base+0x3190>
   41bb4:	b	41cbc <flatcc_json_parser_struct_as_root@@Base+0x316c>
   41bb8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   41bbc:	adds	r1, r2, r2
   41bc0:	str	r1, [fp, #-140]	; 0xffffff74
   41bc4:	adc	r3, r3, r3
   41bc8:	str	r3, [fp, #-136]	; 0xffffff78
   41bcc:	ldrd	r2, [fp, #-140]	; 0xffffff74
   41bd0:	strd	r2, [fp, #-84]	; 0xffffffac
   41bd4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   41bd8:	sub	r3, r3, #1
   41bdc:	str	r3, [fp, #-76]	; 0xffffffb4
   41be0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   41be4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   41be8:	cmp	r2, r3
   41bec:	bge	41c14 <flatcc_json_parser_struct_as_root@@Base+0x30c4>
   41bf0:	ldrd	r0, [fp, #-84]	; 0xffffffac
   41bf4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   41bf8:	and	ip, r0, r2
   41bfc:	str	ip, [fp, #-116]	; 0xffffff8c
   41c00:	and	r3, r1, r3
   41c04:	str	r3, [fp, #-112]	; 0xffffff90
   41c08:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   41c0c:	orrs	r3, r2, r3
   41c10:	beq	41bb8 <flatcc_json_parser_struct_as_root@@Base+0x3068>
   41c14:	ldr	r3, [fp, #-76]	; 0xffffffb4
   41c18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   41c1c:	cmp	r2, r3
   41c20:	bne	41c58 <flatcc_json_parser_struct_as_root@@Base+0x3108>
   41c24:	ldrd	r0, [fp, #-84]	; 0xffffffac
   41c28:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   41c2c:	and	ip, r0, r2
   41c30:	str	ip, [fp, #-124]	; 0xffffff84
   41c34:	and	r3, r1, r3
   41c38:	str	r3, [fp, #-120]	; 0xffffff88
   41c3c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   41c40:	orrs	r3, r2, r3
   41c44:	bne	41c58 <flatcc_json_parser_struct_as_root@@Base+0x3108>
   41c48:	mov	r2, #0
   41c4c:	mov	r3, #0
   41c50:	strd	r2, [fp, #-36]	; 0xffffffdc
   41c54:	b	41c70 <flatcc_json_parser_struct_as_root@@Base+0x3120>
   41c58:	ldr	r2, [fp, #-76]	; 0xffffffb4
   41c5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41c60:	add	r3, r2, r3
   41c64:	mov	r2, r3
   41c68:	asr	r3, r2, #31
   41c6c:	strd	r2, [fp, #-36]	; 0xffffffdc
   41c70:	ldrd	r0, [fp, #-84]	; 0xffffffac
   41c74:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   41c78:	and	r8, r0, r2
   41c7c:	and	r9, r1, r3
   41c80:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   41c84:	ldr	r1, [fp, #-64]	; 0xffffffc0
   41c88:	sub	ip, r1, #32
   41c8c:	rsb	r0, r1, #32
   41c90:	lsl	r7, r3, r1
   41c94:	orr	r7, r7, r2, lsl ip
   41c98:	orr	r7, r7, r2, lsr r0
   41c9c:	lsl	r6, r2, r1
   41ca0:	orr	r3, r8, r6
   41ca4:	str	r3, [fp, #-132]	; 0xffffff7c
   41ca8:	orr	r3, r9, r7
   41cac:	str	r3, [fp, #-128]	; 0xffffff80
   41cb0:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   41cb4:	bl	4135c <flatcc_json_parser_struct_as_root@@Base+0x280c>
   41cb8:	vmov.f64	d7, d0
   41cbc:	vmov.f64	d0, d7
   41cc0:	sub	sp, fp, #28
   41cc4:	ldrd	r4, [sp]
   41cc8:	ldrd	r6, [sp, #8]
   41ccc:	ldrd	r8, [sp, #16]
   41cd0:	ldr	fp, [sp, #24]
   41cd4:	add	sp, sp, #28
   41cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   41cdc:	nop	{0}
	...
   41ce8:	push	{fp}		; (str fp, [sp, #-4]!)
   41cec:	add	fp, sp, #0
   41cf0:	sub	sp, sp, #28
   41cf4:	str	r0, [fp, #-16]
   41cf8:	str	r1, [fp, #-20]	; 0xffffffec
   41cfc:	str	r2, [fp, #-24]	; 0xffffffe8
   41d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   41d04:	add	r3, r3, #1
   41d08:	movw	r2, #1233	; 0x4d1
   41d0c:	mul	r3, r2, r3
   41d10:	asr	r3, r3, #12
   41d14:	add	r3, r3, #1
   41d18:	str	r3, [fp, #-8]
   41d1c:	ldr	r3, [pc, #76]	; 41d70 <flatcc_json_parser_struct_as_root@@Base+0x3220>
   41d20:	add	r3, pc, r3
   41d24:	ldr	r2, [fp, #-8]
   41d28:	ldr	r3, [r3, r2, lsl #2]
   41d2c:	ldr	r2, [fp, #-16]
   41d30:	cmp	r2, r3
   41d34:	bcs	41d44 <flatcc_json_parser_struct_as_root@@Base+0x31f4>
   41d38:	ldr	r3, [fp, #-8]
   41d3c:	sub	r3, r3, #1
   41d40:	str	r3, [fp, #-8]
   41d44:	ldr	r3, [pc, #40]	; 41d74 <flatcc_json_parser_struct_as_root@@Base+0x3224>
   41d48:	add	r3, pc, r3
   41d4c:	ldr	r2, [fp, #-8]
   41d50:	ldr	r2, [r3, r2, lsl #2]
   41d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41d58:	str	r2, [r3]
   41d5c:	ldr	r3, [fp, #-8]
   41d60:	mov	r0, r3
   41d64:	add	sp, fp, #0
   41d68:	pop	{fp}		; (ldr fp, [sp], #4)
   41d6c:	bx	lr
   41d70:	strdeq	r1, [r1], -r0
   41d74:	andeq	r1, r1, r8, asr #21
   41d78:	strd	r4, [sp, #-28]!	; 0xffffffe4
   41d7c:	strd	r6, [sp, #8]
   41d80:	strd	r8, [sp, #16]
   41d84:	str	fp, [sp, #24]
   41d88:	add	fp, sp, #24
   41d8c:	sub	sp, sp, #132	; 0x84
   41d90:	str	r0, [fp, #-48]	; 0xffffffd0
   41d94:	str	r1, [fp, #-52]	; 0xffffffcc
   41d98:	strd	r2, [fp, #-60]	; 0xffffffc4
   41d9c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   41da0:	ldrd	r2, [fp, #28]
   41da4:	subs	r4, r0, r2
   41da8:	sbc	r5, r1, r3
   41dac:	strd	r4, [fp, #-36]	; 0xffffffdc
   41db0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   41db4:	ldrd	r2, [fp, #28]
   41db8:	adds	r6, r0, r2
   41dbc:	adc	r7, r1, r3
   41dc0:	strd	r6, [fp, #-44]	; 0xffffffd4
   41dc4:	b	41e08 <flatcc_json_parser_struct_as_root@@Base+0x32b8>
   41dc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41dcc:	sub	r2, r3, #1
   41dd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41dd4:	add	r2, r3, r2
   41dd8:	ldrb	r3, [r2]
   41ddc:	sub	r3, r3, #1
   41de0:	uxtb	r3, r3
   41de4:	strb	r3, [r2]
   41de8:	ldrd	r0, [fp, #12]
   41dec:	ldrd	r2, [fp, #20]
   41df0:	adds	ip, r0, r2
   41df4:	str	ip, [fp, #-148]	; 0xffffff6c
   41df8:	adc	r3, r1, r3
   41dfc:	str	r3, [fp, #-144]	; 0xffffff70
   41e00:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   41e04:	strd	r2, [fp, #12]
   41e08:	ldrd	r0, [fp, #12]
   41e0c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   41e10:	cmp	r1, r3
   41e14:	cmpeq	r0, r2
   41e18:	bcs	41ec4 <flatcc_json_parser_struct_as_root@@Base+0x3374>
   41e1c:	ldrd	r0, [fp, #4]
   41e20:	ldrd	r2, [fp, #12]
   41e24:	subs	ip, r0, r2
   41e28:	str	ip, [fp, #-68]	; 0xffffffbc
   41e2c:	sbc	r3, r1, r3
   41e30:	str	r3, [fp, #-64]	; 0xffffffc0
   41e34:	ldrd	r2, [fp, #20]
   41e38:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   41e3c:	cmp	r3, r1
   41e40:	cmpeq	r2, r0
   41e44:	bhi	41ec4 <flatcc_json_parser_struct_as_root@@Base+0x3374>
   41e48:	ldrd	r0, [fp, #12]
   41e4c:	ldrd	r2, [fp, #20]
   41e50:	adds	ip, r0, r2
   41e54:	str	ip, [fp, #-76]	; 0xffffffb4
   41e58:	adc	r3, r1, r3
   41e5c:	str	r3, [fp, #-72]	; 0xffffffb8
   41e60:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   41e64:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   41e68:	cmp	r3, r1
   41e6c:	cmpeq	r2, r0
   41e70:	bhi	41dc8 <flatcc_json_parser_struct_as_root@@Base+0x3278>
   41e74:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   41e78:	ldrd	r2, [fp, #12]
   41e7c:	subs	ip, r0, r2
   41e80:	str	ip, [fp, #-84]	; 0xffffffac
   41e84:	sbc	r3, r1, r3
   41e88:	str	r3, [fp, #-80]	; 0xffffffb0
   41e8c:	ldrd	r0, [fp, #12]
   41e90:	ldrd	r2, [fp, #20]
   41e94:	adds	r8, r0, r2
   41e98:	adc	r9, r1, r3
   41e9c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   41ea0:	subs	r1, r8, r2
   41ea4:	str	r1, [fp, #-92]	; 0xffffffa4
   41ea8:	sbc	r3, r9, r3
   41eac:	str	r3, [fp, #-88]	; 0xffffffa8
   41eb0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   41eb4:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   41eb8:	cmp	r3, r1
   41ebc:	cmpeq	r2, r0
   41ec0:	bcs	41dc8 <flatcc_json_parser_struct_as_root@@Base+0x3278>
   41ec4:	ldrd	r0, [fp, #12]
   41ec8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   41ecc:	cmp	r1, r3
   41ed0:	cmpeq	r0, r2
   41ed4:	bcs	41f98 <flatcc_json_parser_struct_as_root@@Base+0x3448>
   41ed8:	ldrd	r0, [fp, #4]
   41edc:	ldrd	r2, [fp, #12]
   41ee0:	subs	ip, r0, r2
   41ee4:	str	ip, [fp, #-100]	; 0xffffff9c
   41ee8:	sbc	r3, r1, r3
   41eec:	str	r3, [fp, #-96]	; 0xffffffa0
   41ef0:	ldrd	r2, [fp, #20]
   41ef4:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   41ef8:	cmp	r3, r1
   41efc:	cmpeq	r2, r0
   41f00:	bhi	41f98 <flatcc_json_parser_struct_as_root@@Base+0x3448>
   41f04:	ldrd	r0, [fp, #12]
   41f08:	ldrd	r2, [fp, #20]
   41f0c:	adds	ip, r0, r2
   41f10:	str	ip, [fp, #-108]	; 0xffffff94
   41f14:	adc	r3, r1, r3
   41f18:	str	r3, [fp, #-104]	; 0xffffff98
   41f1c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   41f20:	ldrd	r0, [fp, #-108]	; 0xffffff94
   41f24:	cmp	r3, r1
   41f28:	cmpeq	r2, r0
   41f2c:	bhi	41f90 <flatcc_json_parser_struct_as_root@@Base+0x3440>
   41f30:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   41f34:	ldrd	r2, [fp, #12]
   41f38:	subs	ip, r0, r2
   41f3c:	str	ip, [fp, #-116]	; 0xffffff8c
   41f40:	sbc	r3, r1, r3
   41f44:	str	r3, [fp, #-112]	; 0xffffff90
   41f48:	ldrd	r0, [fp, #12]
   41f4c:	ldrd	r2, [fp, #20]
   41f50:	adds	ip, r0, r2
   41f54:	str	ip, [fp, #-124]	; 0xffffff84
   41f58:	adc	r3, r1, r3
   41f5c:	str	r3, [fp, #-120]	; 0xffffff88
   41f60:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   41f64:	ldrd	r0, [fp, #-124]	; 0xffffff84
   41f68:	mov	ip, r0
   41f6c:	subs	ip, ip, r2
   41f70:	str	ip, [fp, #-132]	; 0xffffff7c
   41f74:	sbc	r3, r1, r3
   41f78:	str	r3, [fp, #-128]	; 0xffffff80
   41f7c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   41f80:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   41f84:	cmp	r3, r1
   41f88:	cmpeq	r2, r0
   41f8c:	bls	41f98 <flatcc_json_parser_struct_as_root@@Base+0x3448>
   41f90:	mov	r3, #0
   41f94:	b	4200c <flatcc_json_parser_struct_as_root@@Base+0x34bc>
   41f98:	ldrd	r2, [fp, #28]
   41f9c:	adds	r1, r2, r2
   41fa0:	str	r1, [fp, #-156]	; 0xffffff64
   41fa4:	adc	r3, r3, r3
   41fa8:	str	r3, [fp, #-152]	; 0xffffff68
   41fac:	ldrd	r0, [fp, #-156]	; 0xffffff64
   41fb0:	ldrd	r2, [fp, #12]
   41fb4:	cmp	r3, r1
   41fb8:	cmpeq	r2, r0
   41fbc:	bcc	42008 <flatcc_json_parser_struct_as_root@@Base+0x34b8>
   41fc0:	ldrd	r0, [fp, #28]
   41fc4:	mov	r2, #0
   41fc8:	mov	r3, #0
   41fcc:	lsl	r3, r1, #2
   41fd0:	orr	r3, r3, r0, lsr #30
   41fd4:	lsl	r2, r0, #2
   41fd8:	ldrd	r0, [fp, #4]
   41fdc:	subs	ip, r0, r2
   41fe0:	str	ip, [fp, #-140]	; 0xffffff74
   41fe4:	sbc	r3, r1, r3
   41fe8:	str	r3, [fp, #-136]	; 0xffffff78
   41fec:	ldrd	r2, [fp, #12]
   41ff0:	ldrd	r0, [fp, #-140]	; 0xffffff74
   41ff4:	cmp	r3, r1
   41ff8:	cmpeq	r2, r0
   41ffc:	bhi	42008 <flatcc_json_parser_struct_as_root@@Base+0x34b8>
   42000:	mov	r3, #1
   42004:	b	4200c <flatcc_json_parser_struct_as_root@@Base+0x34bc>
   42008:	mov	r3, #0
   4200c:	mov	r0, r3
   42010:	sub	sp, fp, #24
   42014:	ldrd	r4, [sp]
   42018:	ldrd	r6, [sp, #8]
   4201c:	ldrd	r8, [sp, #16]
   42020:	ldr	fp, [sp, #24]
   42024:	add	sp, sp, #28
   42028:	bx	lr
   4202c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   42030:	strd	r6, [sp, #8]
   42034:	strd	r8, [sp, #16]
   42038:	str	fp, [sp, #24]
   4203c:	str	lr, [sp, #28]
   42040:	add	fp, sp, #28
   42044:	sub	sp, sp, #296	; 0x128
   42048:	sub	ip, fp, #196	; 0xc4
   4204c:	stm	ip, {r0, r1, r2, r3}
   42050:	mov	r2, #1
   42054:	mov	r3, #0
   42058:	strd	r2, [fp, #-36]	; 0xffffffdc
   4205c:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   42060:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42064:	subs	r4, r0, r2
   42068:	sbc	r5, r1, r3
   4206c:	strd	r4, [fp, #-124]	; 0xffffff84
   42070:	ldr	r3, [fp, #-188]	; 0xffffff44
   42074:	str	r3, [fp, #-116]	; 0xffffff8c
   42078:	ldrd	r0, [fp, #20]
   4207c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42080:	adds	r8, r0, r2
   42084:	adc	r9, r1, r3
   42088:	strd	r8, [fp, #-140]	; 0xffffff74
   4208c:	ldr	r3, [fp, #28]
   42090:	str	r3, [fp, #-132]	; 0xffffff7c
   42094:	sub	ip, fp, #156	; 0x9c
   42098:	add	r0, sp, #8
   4209c:	sub	r1, fp, #124	; 0x7c
   420a0:	ldrd	r2, [r1]
   420a4:	strd	r2, [r0]
   420a8:	ldrd	r2, [r1, #8]
   420ac:	strd	r2, [r0, #8]
   420b0:	mov	r1, sp
   420b4:	sub	r3, fp, #132	; 0x84
   420b8:	ldrd	r2, [r3]
   420bc:	strd	r2, [r1]
   420c0:	sub	r3, fp, #140	; 0x8c
   420c4:	ldm	r3, {r2, r3}
   420c8:	mov	r0, ip
   420cc:	bl	414f4 <flatcc_json_parser_struct_as_root@@Base+0x29a4>
   420d0:	ldr	r3, [fp, #12]
   420d4:	rsb	r1, r3, #0
   420d8:	mov	r2, #1
   420dc:	mov	r3, #0
   420e0:	sub	ip, r1, #32
   420e4:	rsb	r0, r1, #32
   420e8:	lsl	r7, r3, r1
   420ec:	orr	r7, r7, r2, lsl ip
   420f0:	orr	r7, r7, r2, lsr r0
   420f4:	lsl	r6, r2, r1
   420f8:	strd	r6, [fp, #-172]	; 0xffffff54
   420fc:	ldr	r3, [fp, #12]
   42100:	str	r3, [fp, #-164]	; 0xffffff5c
   42104:	ldrd	r2, [fp, #-140]	; 0xffffff74
   42108:	ldr	r1, [fp, #-164]	; 0xffffff5c
   4210c:	rsb	r1, r1, #0
   42110:	rsb	ip, r1, #32
   42114:	sub	r0, r1, #32
   42118:	lsr	lr, r2, r1
   4211c:	str	lr, [fp, #-204]	; 0xffffff34
   42120:	ldr	lr, [fp, #-204]	; 0xffffff34
   42124:	orr	ip, lr, r3, lsl ip
   42128:	str	ip, [fp, #-204]	; 0xffffff34
   4212c:	ldr	ip, [fp, #-204]	; 0xffffff34
   42130:	orr	r0, ip, r3, lsr r0
   42134:	str	r0, [fp, #-204]	; 0xffffff34
   42138:	lsr	r3, r3, r1
   4213c:	str	r3, [fp, #-200]	; 0xffffff38
   42140:	ldr	r3, [fp, #-204]	; 0xffffff34
   42144:	str	r3, [fp, #-40]	; 0xffffffd8
   42148:	ldrd	r0, [fp, #-140]	; 0xffffff74
   4214c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   42150:	subs	ip, r2, #1
   42154:	str	ip, [fp, #-236]	; 0xffffff14
   42158:	sbc	r3, r3, #0
   4215c:	str	r3, [fp, #-232]	; 0xffffff18
   42160:	ldrd	r2, [fp, #-236]	; 0xffffff14
   42164:	mov	ip, r2
   42168:	and	ip, r0, ip
   4216c:	str	ip, [fp, #-252]	; 0xffffff04
   42170:	and	r3, r3, r1
   42174:	str	r3, [fp, #-248]	; 0xffffff08
   42178:	ldrd	r2, [fp, #-252]	; 0xffffff04
   4217c:	strd	r2, [fp, #-52]	; 0xffffffcc
   42180:	ldr	r3, [fp, #-164]	; 0xffffff5c
   42184:	add	r1, r3, #64	; 0x40
   42188:	sub	r3, fp, #176	; 0xb0
   4218c:	mov	r2, r3
   42190:	ldr	r0, [fp, #-40]	; 0xffffffd8
   42194:	bl	41ce8 <flatcc_json_parser_struct_as_root@@Base+0x3198>
   42198:	mov	r2, r0
   4219c:	ldr	r3, [fp, #44]	; 0x2c
   421a0:	str	r2, [r3]
   421a4:	ldr	r2, [fp, #40]	; 0x28
   421a8:	mov	r3, #0
   421ac:	str	r3, [r2]
   421b0:	b	4238c <flatcc_json_parser_struct_as_root@@Base+0x383c>
   421b4:	ldr	r2, [fp, #-176]	; 0xffffff50
   421b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   421bc:	udiv	r3, r3, r2
   421c0:	str	r3, [fp, #-56]	; 0xffffffc8
   421c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   421c8:	uxtb	r1, r3
   421cc:	ldr	r3, [fp, #40]	; 0x28
   421d0:	ldr	r3, [r3]
   421d4:	mov	r2, r3
   421d8:	ldr	r3, [fp, #36]	; 0x24
   421dc:	add	r2, r3, r2
   421e0:	add	r3, r1, #48	; 0x30
   421e4:	uxtb	r3, r3
   421e8:	strb	r3, [r2]
   421ec:	ldr	r3, [fp, #40]	; 0x28
   421f0:	ldr	r3, [r3]
   421f4:	add	r2, r3, #1
   421f8:	ldr	r3, [fp, #40]	; 0x28
   421fc:	str	r2, [r3]
   42200:	ldr	r1, [fp, #-176]	; 0xffffff50
   42204:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42208:	udiv	r3, r2, r1
   4220c:	mul	r3, r1, r3
   42210:	sub	r3, r2, r3
   42214:	str	r3, [fp, #-40]	; 0xffffffd8
   42218:	ldr	r3, [fp, #44]	; 0x2c
   4221c:	ldr	r3, [r3]
   42220:	sub	r2, r3, #1
   42224:	ldr	r3, [fp, #44]	; 0x2c
   42228:	str	r2, [r3]
   4222c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42230:	mov	r2, r3
   42234:	mov	r3, #0
   42238:	ldr	r1, [fp, #-164]	; 0xffffff5c
   4223c:	rsb	r1, r1, #0
   42240:	sub	ip, r1, #32
   42244:	rsb	r0, r1, #32
   42248:	lsl	lr, r3, r1
   4224c:	str	lr, [fp, #-208]	; 0xffffff30
   42250:	ldr	lr, [fp, #-208]	; 0xffffff30
   42254:	orr	ip, lr, r2, lsl ip
   42258:	str	ip, [fp, #-208]	; 0xffffff30
   4225c:	ldr	ip, [fp, #-208]	; 0xffffff30
   42260:	orr	r0, ip, r2, lsr r0
   42264:	str	r0, [fp, #-208]	; 0xffffff30
   42268:	lsl	r3, r2, r1
   4226c:	str	r3, [fp, #-212]	; 0xffffff2c
   42270:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   42274:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   42278:	mov	ip, r0
   4227c:	adds	ip, r2, ip
   42280:	str	ip, [fp, #-260]	; 0xfffffefc
   42284:	adc	r3, r3, r1
   42288:	str	r3, [fp, #-256]	; 0xffffff00
   4228c:	sub	r3, fp, #260	; 0x104
   42290:	ldrd	r2, [r3]
   42294:	strd	r2, [fp, #-68]	; 0xffffffbc
   42298:	ldrd	r0, [fp, #-156]	; 0xffffff64
   4229c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   422a0:	cmp	r3, r1
   422a4:	cmpeq	r2, r0
   422a8:	bcs	42374 <flatcc_json_parser_struct_as_root@@Base+0x3824>
   422ac:	ldr	r3, [fp, #40]	; 0x28
   422b0:	ldr	r8, [r3]
   422b4:	sub	ip, fp, #108	; 0x6c
   422b8:	add	r0, sp, #8
   422bc:	add	r1, fp, #4
   422c0:	ldrd	r2, [r1]
   422c4:	strd	r2, [r0]
   422c8:	ldrd	r2, [r1, #8]
   422cc:	strd	r2, [r0, #8]
   422d0:	mov	r1, sp
   422d4:	sub	r3, fp, #132	; 0x84
   422d8:	ldrd	r2, [r3]
   422dc:	strd	r2, [r1]
   422e0:	sub	r3, fp, #140	; 0x8c
   422e4:	ldm	r3, {r2, r3}
   422e8:	mov	r0, ip
   422ec:	bl	414f4 <flatcc_json_parser_struct_as_root@@Base+0x29a4>
   422f0:	ldrd	r6, [fp, #-108]	; 0xffffff94
   422f4:	ldrd	r4, [fp, #-156]	; 0xffffff64
   422f8:	ldr	r3, [fp, #-176]	; 0xffffff50
   422fc:	mov	r2, r3
   42300:	mov	r3, #0
   42304:	ldr	r1, [fp, #-164]	; 0xffffff5c
   42308:	rsb	r1, r1, #0
   4230c:	sub	ip, r1, #32
   42310:	rsb	r0, r1, #32
   42314:	lsl	lr, r3, r1
   42318:	str	lr, [fp, #-216]	; 0xffffff28
   4231c:	ldr	lr, [fp, #-216]	; 0xffffff28
   42320:	orr	ip, lr, r2, lsl ip
   42324:	str	ip, [fp, #-216]	; 0xffffff28
   42328:	ldr	ip, [fp, #-216]	; 0xffffff28
   4232c:	orr	r0, ip, r2, lsr r0
   42330:	str	r0, [fp, #-216]	; 0xffffff28
   42334:	lsl	r3, r2, r1
   42338:	str	r3, [fp, #-220]	; 0xffffff24
   4233c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42340:	strd	r2, [sp, #24]
   42344:	ldrd	r2, [fp, #-220]	; 0xffffff24
   42348:	strd	r2, [sp, #16]
   4234c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   42350:	strd	r2, [sp, #8]
   42354:	strd	r4, [sp]
   42358:	mov	r2, r6
   4235c:	mov	r3, r7
   42360:	mov	r1, r8
   42364:	ldr	r0, [fp, #36]	; 0x24
   42368:	bl	41d78 <flatcc_json_parser_struct_as_root@@Base+0x3228>
   4236c:	mov	r3, r0
   42370:	b	42600 <flatcc_json_parser_struct_as_root@@Base+0x3ab0>
   42374:	ldr	r2, [fp, #-176]	; 0xffffff50
   42378:	movw	r3, #52429	; 0xcccd
   4237c:	movt	r3, #52428	; 0xcccc
   42380:	umull	r2, r3, r3, r2
   42384:	lsr	r3, r3, #3
   42388:	str	r3, [fp, #-176]	; 0xffffff50
   4238c:	ldr	r3, [fp, #44]	; 0x2c
   42390:	ldr	r3, [r3]
   42394:	cmp	r3, #0
   42398:	bgt	421b4 <flatcc_json_parser_struct_as_root@@Base+0x3664>
   4239c:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   423a0:	mov	r2, r4
   423a4:	mov	r3, r5
   423a8:	mov	r0, #0
   423ac:	mov	r1, #0
   423b0:	lsl	r1, r3, #2
   423b4:	orr	r1, r1, r2, lsr #30
   423b8:	lsl	r0, r2, #2
   423bc:	mov	r2, r0
   423c0:	mov	r3, r1
   423c4:	adds	r2, r2, r4
   423c8:	adc	r3, r3, r5
   423cc:	adds	r1, r2, r2
   423d0:	str	r1, [fp, #-268]	; 0xfffffef4
   423d4:	adc	r3, r3, r3
   423d8:	str	r3, [fp, #-264]	; 0xfffffef8
   423dc:	sub	r3, fp, #268	; 0x10c
   423e0:	ldrd	r2, [r3]
   423e4:	strd	r2, [fp, #-52]	; 0xffffffcc
   423e8:	ldrd	r4, [fp, #-36]	; 0xffffffdc
   423ec:	mov	r2, r4
   423f0:	mov	r3, r5
   423f4:	mov	r0, #0
   423f8:	mov	r1, #0
   423fc:	lsl	r1, r3, #2
   42400:	orr	r1, r1, r2, lsr #30
   42404:	lsl	r0, r2, #2
   42408:	mov	r2, r0
   4240c:	mov	r3, r1
   42410:	adds	r2, r2, r4
   42414:	adc	r3, r3, r5
   42418:	adds	r1, r2, r2
   4241c:	str	r1, [fp, #-276]	; 0xfffffeec
   42420:	adc	r3, r3, r3
   42424:	str	r3, [fp, #-272]	; 0xfffffef0
   42428:	sub	r3, fp, #276	; 0x114
   4242c:	ldrd	r2, [r3]
   42430:	strd	r2, [fp, #-36]	; 0xffffffdc
   42434:	ldrd	r4, [fp, #-156]	; 0xffffff64
   42438:	mov	r2, r4
   4243c:	mov	r3, r5
   42440:	mov	r0, #0
   42444:	mov	r1, #0
   42448:	lsl	r1, r3, #2
   4244c:	orr	r1, r1, r2, lsr #30
   42450:	lsl	r0, r2, #2
   42454:	mov	r2, r0
   42458:	mov	r3, r1
   4245c:	adds	r2, r2, r4
   42460:	adc	r3, r3, r5
   42464:	adds	r1, r2, r2
   42468:	str	r1, [fp, #-284]	; 0xfffffee4
   4246c:	adc	r3, r3, r3
   42470:	str	r3, [fp, #-280]	; 0xfffffee8
   42474:	sub	r3, fp, #284	; 0x11c
   42478:	ldrd	r2, [r3]
   4247c:	strd	r2, [fp, #-156]	; 0xffffff64
   42480:	ldr	r3, [fp, #-164]	; 0xffffff5c
   42484:	rsb	r1, r3, #0
   42488:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   4248c:	rsb	ip, r1, #32
   42490:	sub	r0, r1, #32
   42494:	lsr	lr, r2, r1
   42498:	str	lr, [fp, #-228]	; 0xffffff1c
   4249c:	ldr	lr, [fp, #-228]	; 0xffffff1c
   424a0:	orr	ip, lr, r3, lsl ip
   424a4:	str	ip, [fp, #-228]	; 0xffffff1c
   424a8:	ldr	ip, [fp, #-228]	; 0xffffff1c
   424ac:	orr	r0, ip, r3, lsr r0
   424b0:	str	r0, [fp, #-228]	; 0xffffff1c
   424b4:	lsr	r3, r3, r1
   424b8:	str	r3, [fp, #-224]	; 0xffffff20
   424bc:	ldr	r3, [fp, #-228]	; 0xffffff1c
   424c0:	str	r3, [fp, #-72]	; 0xffffffb8
   424c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   424c8:	uxtb	r1, r3
   424cc:	ldr	r3, [fp, #40]	; 0x28
   424d0:	ldr	r3, [r3]
   424d4:	mov	r2, r3
   424d8:	ldr	r3, [fp, #36]	; 0x24
   424dc:	add	r2, r3, r2
   424e0:	add	r3, r1, #48	; 0x30
   424e4:	uxtb	r3, r3
   424e8:	strb	r3, [r2]
   424ec:	ldr	r3, [fp, #40]	; 0x28
   424f0:	ldr	r3, [r3]
   424f4:	add	r2, r3, #1
   424f8:	ldr	r3, [fp, #40]	; 0x28
   424fc:	str	r2, [r3]
   42500:	ldrd	r2, [fp, #-172]	; 0xffffff54
   42504:	subs	r1, r2, #1
   42508:	str	r1, [fp, #-244]	; 0xffffff0c
   4250c:	sbc	r3, r3, #0
   42510:	str	r3, [fp, #-240]	; 0xffffff10
   42514:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   42518:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   4251c:	mov	ip, r0
   42520:	and	ip, r2, ip
   42524:	str	ip, [fp, #-292]	; 0xfffffedc
   42528:	and	r3, r3, r1
   4252c:	str	r3, [fp, #-288]	; 0xfffffee0
   42530:	sub	r3, fp, #292	; 0x124
   42534:	ldrd	r2, [r3]
   42538:	strd	r2, [fp, #-52]	; 0xffffffcc
   4253c:	ldr	r3, [fp, #44]	; 0x2c
   42540:	ldr	r3, [r3]
   42544:	sub	r2, r3, #1
   42548:	ldr	r3, [fp, #44]	; 0x2c
   4254c:	str	r2, [r3]
   42550:	ldrd	r0, [fp, #-156]	; 0xffffff64
   42554:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   42558:	cmp	r3, r1
   4255c:	cmpeq	r2, r0
   42560:	bcs	4239c <flatcc_json_parser_struct_as_root@@Base+0x384c>
   42564:	ldr	r3, [fp, #40]	; 0x28
   42568:	ldr	r8, [r3]
   4256c:	sub	ip, fp, #92	; 0x5c
   42570:	add	r0, sp, #8
   42574:	add	r1, fp, #4
   42578:	ldrd	r2, [r1]
   4257c:	strd	r2, [r0]
   42580:	ldrd	r2, [r1, #8]
   42584:	strd	r2, [r0, #8]
   42588:	mov	r1, sp
   4258c:	sub	r3, fp, #132	; 0x84
   42590:	ldrd	r2, [r3]
   42594:	strd	r2, [r1]
   42598:	sub	r3, fp, #140	; 0x8c
   4259c:	ldm	r3, {r2, r3}
   425a0:	mov	r0, ip
   425a4:	bl	414f4 <flatcc_json_parser_struct_as_root@@Base+0x29a4>
   425a8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   425ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   425b0:	mul	r0, r3, r1
   425b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   425b8:	mul	r1, r2, r1
   425bc:	add	r1, r0, r1
   425c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   425c4:	umull	r2, r3, r0, r2
   425c8:	add	r1, r1, r3
   425cc:	mov	r3, r1
   425d0:	ldrd	r0, [fp, #-156]	; 0xffffff64
   425d4:	ldrd	r4, [fp, #-172]	; 0xffffff54
   425d8:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   425dc:	strd	r6, [sp, #24]
   425e0:	strd	r4, [sp, #16]
   425e4:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   425e8:	strd	r4, [sp, #8]
   425ec:	strd	r0, [sp]
   425f0:	mov	r1, r8
   425f4:	ldr	r0, [fp, #36]	; 0x24
   425f8:	bl	41d78 <flatcc_json_parser_struct_as_root@@Base+0x3228>
   425fc:	mov	r3, r0
   42600:	mov	r0, r3
   42604:	sub	sp, fp, #28
   42608:	ldrd	r4, [sp]
   4260c:	ldrd	r6, [sp, #8]
   42610:	ldrd	r8, [sp, #16]
   42614:	ldr	fp, [sp, #24]
   42618:	add	sp, sp, #28
   4261c:	pop	{pc}		; (ldr pc, [sp], #4)
   42620:	strd	r4, [sp, #-32]!	; 0xffffffe0
   42624:	strd	r6, [sp, #8]
   42628:	strd	r8, [sp, #16]
   4262c:	str	fp, [sp, #24]
   42630:	str	lr, [sp, #28]
   42634:	add	fp, sp, #28
   42638:	sub	sp, sp, #248	; 0xf8
   4263c:	vstr	d0, [fp, #-156]	; 0xffffff64
   42640:	str	r0, [fp, #-160]	; 0xffffff60
   42644:	str	r1, [fp, #-164]	; 0xffffff5c
   42648:	str	r2, [fp, #-168]	; 0xffffff58
   4264c:	sub	r3, fp, #68	; 0x44
   42650:	vldr	d0, [fp, #-156]	; 0xffffff64
   42654:	mov	r0, r3
   42658:	bl	419c4 <flatcc_json_parser_struct_as_root@@Base+0x2e74>
   4265c:	sub	r0, fp, #84	; 0x54
   42660:	mov	r1, sp
   42664:	sub	r3, fp, #60	; 0x3c
   42668:	ldrd	r2, [r3]
   4266c:	strd	r2, [r1]
   42670:	sub	r3, fp, #68	; 0x44
   42674:	ldm	r3, {r2, r3}
   42678:	bl	418a4 <flatcc_json_parser_struct_as_root@@Base+0x2d54>
   4267c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   42680:	adds	r8, r2, r2
   42684:	adc	r9, r3, r3
   42688:	mov	r2, r8
   4268c:	mov	r3, r9
   42690:	adds	r6, r2, #1
   42694:	adc	r7, r3, #0
   42698:	strd	r6, [fp, #-100]	; 0xffffff9c
   4269c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   426a0:	sub	r3, r3, #1
   426a4:	str	r3, [fp, #-92]	; 0xffffffa4
   426a8:	sub	r0, fp, #116	; 0x74
   426ac:	mov	r1, sp
   426b0:	sub	r3, fp, #92	; 0x5c
   426b4:	ldrd	r2, [r3]
   426b8:	strd	r2, [r1]
   426bc:	sub	r3, fp, #100	; 0x64
   426c0:	ldm	r3, {r2, r3}
   426c4:	bl	418a4 <flatcc_json_parser_struct_as_root@@Base+0x2d54>
   426c8:	vldr	d0, [fp, #-156]	; 0xffffff64
   426cc:	bl	4132c <flatcc_json_parser_struct_as_root@@Base+0x27dc>
   426d0:	strd	r0, [fp, #-36]	; 0xffffffdc
   426d4:	vldr	d7, [fp, #-156]	; 0xffffff64
   426d8:	vcmpe.f64	d7, #0.0
   426dc:	vmrs	APSR_nzcv, fpscr
   426e0:	movgt	r3, #1
   426e4:	movle	r3, #0
   426e8:	uxtb	r3, r3
   426ec:	eor	r3, r3, #1
   426f0:	uxtb	r3, r3
   426f4:	cmp	r3, #0
   426f8:	bne	42728 <flatcc_json_parser_struct_as_root@@Base+0x3bd8>
   426fc:	vldr	d7, [fp, #-156]	; 0xffffff64
   42700:	vldr	d6, [pc, #736]	; 429e8 <flatcc_json_parser_struct_as_root@@Base+0x3e98>
   42704:	vcmpe.f64	d7, d6
   42708:	vmrs	APSR_nzcv, fpscr
   4270c:	movls	r3, #1
   42710:	movhi	r3, #0
   42714:	uxtb	r3, r3
   42718:	eor	r3, r3, #1
   4271c:	uxtb	r3, r3
   42720:	cmp	r3, #0
   42724:	beq	42748 <flatcc_json_parser_struct_as_root@@Base+0x3bf8>
   42728:	ldr	r3, [pc, #704]	; 429f0 <flatcc_json_parser_struct_as_root@@Base+0x3ea0>
   4272c:	add	r3, pc, r3
   42730:	mov	r2, #138	; 0x8a
   42734:	ldr	r1, [pc, #696]	; 429f4 <flatcc_json_parser_struct_as_root@@Base+0x3ea4>
   42738:	add	r1, pc, r1
   4273c:	ldr	r0, [pc, #692]	; 429f8 <flatcc_json_parser_struct_as_root@@Base+0x3ea8>
   42740:	add	r0, pc, r0
   42744:	bl	145e8 <__assert_fail@plt>
   42748:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   4274c:	mvn	r2, #0
   42750:	movw	r3, #65535	; 0xffff
   42754:	movt	r3, #15
   42758:	and	ip, r0, r2
   4275c:	str	ip, [fp, #-196]	; 0xffffff3c
   42760:	and	r3, r1, r3
   42764:	str	r3, [fp, #-192]	; 0xffffff40
   42768:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   4276c:	orrs	r3, r2, r3
   42770:	bne	427e0 <flatcc_json_parser_struct_as_root@@Base+0x3c90>
   42774:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42778:	mov	r0, #0
   4277c:	mov	r1, #0
   42780:	movt	r1, #32752	; 0x7ff0
   42784:	and	ip, r2, r0
   42788:	str	ip, [fp, #-204]	; 0xffffff34
   4278c:	and	r3, r3, r1
   42790:	str	r3, [fp, #-200]	; 0xffffff38
   42794:	ldrd	r2, [fp, #-204]	; 0xffffff34
   42798:	orrs	r3, r2, r3
   4279c:	beq	427e0 <flatcc_json_parser_struct_as_root@@Base+0x3c90>
   427a0:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   427a4:	mov	r2, #0
   427a8:	mov	r3, #0
   427ac:	lsl	r3, r1, #2
   427b0:	orr	r3, r3, r0, lsr #30
   427b4:	lsl	r2, r0, #2
   427b8:	subs	r1, r2, #1
   427bc:	str	r1, [fp, #-212]	; 0xffffff2c
   427c0:	sbc	r3, r3, #0
   427c4:	str	r3, [fp, #-208]	; 0xffffff30
   427c8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   427cc:	strd	r2, [fp, #-132]	; 0xffffff7c
   427d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   427d4:	sub	r3, r3, #2
   427d8:	str	r3, [fp, #-124]	; 0xffffff84
   427dc:	b	4281c <flatcc_json_parser_struct_as_root@@Base+0x3ccc>
   427e0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   427e4:	adds	r1, r2, r2
   427e8:	str	r1, [fp, #-228]	; 0xffffff1c
   427ec:	adc	r3, r3, r3
   427f0:	str	r3, [fp, #-224]	; 0xffffff20
   427f4:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   427f8:	subs	r1, r2, #1
   427fc:	str	r1, [fp, #-220]	; 0xffffff24
   42800:	sbc	r3, r3, #0
   42804:	str	r3, [fp, #-216]	; 0xffffff28
   42808:	ldrd	r2, [fp, #-220]	; 0xffffff24
   4280c:	strd	r2, [fp, #-132]	; 0xffffff7c
   42810:	ldr	r3, [fp, #-60]	; 0xffffffc4
   42814:	sub	r3, r3, #1
   42818:	str	r3, [fp, #-124]	; 0xffffff84
   4281c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   42820:	ldr	r0, [fp, #-124]	; 0xffffff84
   42824:	ldr	r1, [fp, #-108]	; 0xffffff94
   42828:	sub	r1, r0, r1
   4282c:	sub	ip, r1, #32
   42830:	rsb	r0, r1, #32
   42834:	lsl	r5, r3, r1
   42838:	orr	r5, r5, r2, lsl ip
   4283c:	orr	r5, r5, r2, lsr r0
   42840:	lsl	r4, r2, r1
   42844:	strd	r4, [fp, #-132]	; 0xffffff7c
   42848:	ldr	r3, [fp, #-108]	; 0xffffff94
   4284c:	str	r3, [fp, #-124]	; 0xffffff84
   42850:	ldr	r2, [fp, #-76]	; 0xffffffb4
   42854:	movw	r3, #65412	; 0xff84
   42858:	movt	r3, #65535	; 0xffff
   4285c:	sub	r3, r3, r2
   42860:	sub	r2, fp, #148	; 0x94
   42864:	mov	r1, r2
   42868:	mov	r0, r3
   4286c:	bl	41404 <flatcc_json_parser_struct_as_root@@Base+0x28b4>
   42870:	str	r0, [fp, #-40]	; 0xffffffd8
   42874:	sub	ip, fp, #188	; 0xbc
   42878:	add	r0, sp, #8
   4287c:	sub	r1, fp, #148	; 0x94
   42880:	ldrd	r2, [r1]
   42884:	strd	r2, [r0]
   42888:	ldrd	r2, [r1, #8]
   4288c:	strd	r2, [r0, #8]
   42890:	mov	r1, sp
   42894:	sub	r3, fp, #76	; 0x4c
   42898:	ldrd	r2, [r3]
   4289c:	strd	r2, [r1]
   428a0:	sub	r3, fp, #84	; 0x54
   428a4:	ldm	r3, {r2, r3}
   428a8:	mov	r0, ip
   428ac:	bl	415c0 <flatcc_json_parser_struct_as_root@@Base+0x2a70>
   428b0:	sub	r1, fp, #84	; 0x54
   428b4:	sub	r0, fp, #188	; 0xbc
   428b8:	ldrd	r2, [r0]
   428bc:	strd	r2, [r1]
   428c0:	ldrd	r2, [r0, #8]
   428c4:	strd	r2, [r1, #8]
   428c8:	sub	ip, fp, #132	; 0x84
   428cc:	add	r0, sp, #8
   428d0:	sub	r1, fp, #148	; 0x94
   428d4:	ldrd	r2, [r1]
   428d8:	strd	r2, [r0]
   428dc:	ldrd	r2, [r1, #8]
   428e0:	strd	r2, [r0, #8]
   428e4:	mov	r1, sp
   428e8:	sub	r3, fp, #124	; 0x7c
   428ec:	ldrd	r2, [r3]
   428f0:	strd	r2, [r1]
   428f4:	sub	r3, fp, #132	; 0x84
   428f8:	ldm	r3, {r2, r3}
   428fc:	mov	r0, ip
   42900:	bl	415c0 <flatcc_json_parser_struct_as_root@@Base+0x2a70>
   42904:	sub	ip, fp, #188	; 0xbc
   42908:	add	r0, sp, #8
   4290c:	sub	r1, fp, #148	; 0x94
   42910:	ldrd	r2, [r1]
   42914:	strd	r2, [r0]
   42918:	ldrd	r2, [r1, #8]
   4291c:	strd	r2, [r0, #8]
   42920:	mov	r1, sp
   42924:	sub	r3, fp, #108	; 0x6c
   42928:	ldrd	r2, [r3]
   4292c:	strd	r2, [r1]
   42930:	sub	r3, fp, #116	; 0x74
   42934:	ldm	r3, {r2, r3}
   42938:	mov	r0, ip
   4293c:	bl	415c0 <flatcc_json_parser_struct_as_root@@Base+0x2a70>
   42940:	sub	r1, fp, #116	; 0x74
   42944:	sub	r0, fp, #188	; 0xbc
   42948:	ldrd	r2, [r0]
   4294c:	strd	r2, [r1]
   42950:	ldrd	r2, [r0, #8]
   42954:	strd	r2, [r1, #8]
   42958:	sub	r3, fp, #48	; 0x30
   4295c:	str	r3, [sp, #40]	; 0x28
   42960:	ldr	r3, [fp, #-164]	; 0xffffff5c
   42964:	str	r3, [sp, #36]	; 0x24
   42968:	ldr	r3, [fp, #-160]	; 0xffffff60
   4296c:	str	r3, [sp, #32]
   42970:	add	r0, sp, #16
   42974:	sub	r1, fp, #116	; 0x74
   42978:	ldrd	r2, [r1]
   4297c:	strd	r2, [r0]
   42980:	ldrd	r2, [r1, #8]
   42984:	strd	r2, [r0, #8]
   42988:	mov	r0, sp
   4298c:	sub	r1, fp, #84	; 0x54
   42990:	ldrd	r2, [r1]
   42994:	strd	r2, [r0]
   42998:	ldrd	r2, [r1, #8]
   4299c:	strd	r2, [r0, #8]
   429a0:	sub	r3, fp, #132	; 0x84
   429a4:	ldm	r3, {r0, r1, r2, r3}
   429a8:	bl	4202c <flatcc_json_parser_struct_as_root@@Base+0x34dc>
   429ac:	str	r0, [fp, #-44]	; 0xffffffd4
   429b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   429b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   429b8:	sub	r2, r2, r3
   429bc:	ldr	r3, [fp, #-168]	; 0xffffff58
   429c0:	str	r2, [r3]
   429c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   429c8:	mov	r0, r3
   429cc:	sub	sp, fp, #28
   429d0:	ldrd	r4, [sp]
   429d4:	ldrd	r6, [sp, #8]
   429d8:	ldrd	r8, [sp, #16]
   429dc:	ldr	fp, [sp, #24]
   429e0:	add	sp, sp, #28
   429e4:	pop	{pc}		; (ldr pc, [sp], #4)
   429e8:			; <UNDEFINED> instruction: 0xffffffff
   429ec:	svcvc	0x00efffff
   429f0:	andeq	r1, r1, r4, ror #8
   429f4:	andeq	r1, r1, r4, lsl #2
   429f8:	andeq	r1, r1, ip, ror #2
   429fc:	push	{fp}		; (str fp, [sp, #-4]!)
   42a00:	add	fp, sp, #0
   42a04:	sub	sp, sp, #44	; 0x2c
   42a08:	str	r0, [fp, #-40]	; 0xffffffd8
   42a0c:	str	r1, [fp, #-44]	; 0xffffffd4
   42a10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42a14:	str	r3, [fp, #-16]
   42a18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42a1c:	cmp	r3, #0
   42a20:	bge	42a44 <flatcc_json_parser_struct_as_root@@Base+0x3ef4>
   42a24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42a28:	add	r2, r3, #1
   42a2c:	str	r2, [fp, #-44]	; 0xffffffd4
   42a30:	mov	r2, #45	; 0x2d
   42a34:	strb	r2, [r3]
   42a38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42a3c:	rsb	r3, r3, #0
   42a40:	str	r3, [fp, #-40]	; 0xffffffd8
   42a44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42a48:	str	r3, [fp, #-12]
   42a4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42a50:	movw	r3, #26215	; 0x6667
   42a54:	movt	r3, #26214	; 0x6666
   42a58:	smull	r1, r3, r3, r2
   42a5c:	asr	r1, r3, #2
   42a60:	asr	r3, r2, #31
   42a64:	sub	r3, r1, r3
   42a68:	str	r3, [fp, #-20]	; 0xffffffec
   42a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   42a70:	mvn	r2, #9
   42a74:	mul	r3, r2, r3
   42a78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42a7c:	add	r3, r2, r3
   42a80:	str	r3, [fp, #-24]	; 0xffffffe8
   42a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42a88:	uxtb	r2, r3
   42a8c:	ldr	r3, [fp, #-12]
   42a90:	add	r1, r3, #1
   42a94:	str	r1, [fp, #-12]
   42a98:	add	r2, r2, #48	; 0x30
   42a9c:	uxtb	r2, r2
   42aa0:	strb	r2, [r3]
   42aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   42aa8:	cmp	r3, #0
   42aac:	beq	42abc <flatcc_json_parser_struct_as_root@@Base+0x3f6c>
   42ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   42ab4:	str	r3, [fp, #-40]	; 0xffffffd8
   42ab8:	b	42a4c <flatcc_json_parser_struct_as_root@@Base+0x3efc>
   42abc:	nop	{0}
   42ac0:	ldr	r3, [fp, #-12]
   42ac4:	mov	r2, #0
   42ac8:	strb	r2, [r3]
   42acc:	ldr	r2, [fp, #-12]
   42ad0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42ad4:	sub	r3, r2, r3
   42ad8:	str	r3, [fp, #-28]	; 0xffffffe4
   42adc:	mov	r3, #0
   42ae0:	str	r3, [fp, #-8]
   42ae4:	b	42b5c <flatcc_json_parser_struct_as_root@@Base+0x400c>
   42ae8:	ldr	r3, [fp, #-8]
   42aec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   42af0:	add	r3, r2, r3
   42af4:	ldrb	r3, [r3]
   42af8:	strb	r3, [fp, #-29]	; 0xffffffe3
   42afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42b00:	sub	r2, r3, #1
   42b04:	ldr	r3, [fp, #-8]
   42b08:	sub	r3, r2, r3
   42b0c:	mov	r2, r3
   42b10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42b14:	add	r2, r3, r2
   42b18:	ldr	r3, [fp, #-8]
   42b1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   42b20:	add	r3, r1, r3
   42b24:	ldrb	r2, [r2]
   42b28:	strb	r2, [r3]
   42b2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42b30:	sub	r2, r3, #1
   42b34:	ldr	r3, [fp, #-8]
   42b38:	sub	r3, r2, r3
   42b3c:	mov	r2, r3
   42b40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42b44:	add	r3, r3, r2
   42b48:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   42b4c:	strb	r2, [r3]
   42b50:	ldr	r3, [fp, #-8]
   42b54:	add	r3, r3, #1
   42b58:	str	r3, [fp, #-8]
   42b5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42b60:	lsr	r2, r3, #31
   42b64:	add	r3, r2, r3
   42b68:	asr	r3, r3, #1
   42b6c:	mov	r2, r3
   42b70:	ldr	r3, [fp, #-8]
   42b74:	cmp	r3, r2
   42b78:	blt	42ae8 <flatcc_json_parser_struct_as_root@@Base+0x3f98>
   42b7c:	ldr	r2, [fp, #-12]
   42b80:	ldr	r3, [fp, #-16]
   42b84:	sub	r3, r2, r3
   42b88:	mov	r0, r3
   42b8c:	add	sp, fp, #0
   42b90:	pop	{fp}		; (ldr fp, [sp], #4)
   42b94:	bx	lr
   42b98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   42b9c:	strd	r6, [sp, #8]
   42ba0:	str	fp, [sp, #16]
   42ba4:	str	lr, [sp, #20]
   42ba8:	add	fp, sp, #20
   42bac:	sub	sp, sp, #56	; 0x38
   42bb0:	vstr	d0, [fp, #-68]	; 0xffffffbc
   42bb4:	str	r0, [fp, #-72]	; 0xffffffb8
   42bb8:	vldr	d0, [fp, #-68]	; 0xffffffbc
   42bbc:	bl	4132c <flatcc_json_parser_struct_as_root@@Base+0x27dc>
   42bc0:	strd	r0, [fp, #-36]	; 0xffffffdc
   42bc4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   42bc8:	str	r3, [fp, #-40]	; 0xffffffd8
   42bcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   42bd0:	cmp	r3, #0
   42bd4:	bne	42bf8 <flatcc_json_parser_struct_as_root@@Base+0x40a8>
   42bd8:	ldr	r3, [pc, #1248]	; 430c0 <flatcc_json_parser_struct_as_root@@Base+0x4570>
   42bdc:	add	r3, pc, r3
   42be0:	mov	r2, #189	; 0xbd
   42be4:	ldr	r1, [pc, #1240]	; 430c4 <flatcc_json_parser_struct_as_root@@Base+0x4574>
   42be8:	add	r1, pc, r1
   42bec:	ldr	r0, [pc, #1236]	; 430c8 <flatcc_json_parser_struct_as_root@@Base+0x4578>
   42bf0:	add	r0, pc, r0
   42bf4:	bl	145e8 <__assert_fail@plt>
   42bf8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42bfc:	adds	r6, r2, r2
   42c00:	adc	r7, r3, r3
   42c04:	mov	r0, r6
   42c08:	mov	r1, r7
   42c0c:	mov	r2, #0
   42c10:	mov	r3, #0
   42c14:	movt	r3, #65504	; 0xffe0
   42c18:	cmp	r1, r3
   42c1c:	cmpeq	r0, r2
   42c20:	bls	42c54 <flatcc_json_parser_struct_as_root@@Base+0x4104>
   42c24:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   42c28:	mov	r2, #0
   42c2c:	mov	r3, #0
   42c30:	mov	r2, r1
   42c34:	mov	r3, #0
   42c38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   42c3c:	ldr	r1, [pc, #1160]	; 430cc <flatcc_json_parser_struct_as_root@@Base+0x457c>
   42c40:	add	r1, pc, r1
   42c44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   42c48:	bl	145d0 <sprintf@plt>
   42c4c:	mov	r3, r0
   42c50:	b	430a4 <flatcc_json_parser_struct_as_root@@Base+0x4554>
   42c54:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42c58:	cmp	r2, #0
   42c5c:	sbcs	r3, r3, #0
   42c60:	bge	42c94 <flatcc_json_parser_struct_as_root@@Base+0x4144>
   42c64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c68:	add	r2, r3, #1
   42c6c:	str	r2, [fp, #-40]	; 0xffffffd8
   42c70:	mov	r2, #45	; 0x2d
   42c74:	strb	r2, [r3]
   42c78:	vldr	d7, [fp, #-68]	; 0xffffffbc
   42c7c:	vneg.f64	d7, d7
   42c80:	vstr	d7, [fp, #-68]	; 0xffffffbc
   42c84:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42c88:	mov	r4, r2
   42c8c:	add	r5, r3, #-2147483648	; 0x80000000
   42c90:	strd	r4, [fp, #-36]	; 0xffffffdc
   42c94:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42c98:	orrs	r3, r2, r3
   42c9c:	bne	42cd0 <flatcc_json_parser_struct_as_root@@Base+0x4180>
   42ca0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42ca4:	add	r2, r3, #1
   42ca8:	str	r2, [fp, #-40]	; 0xffffffd8
   42cac:	mov	r2, #48	; 0x30
   42cb0:	strb	r2, [r3]
   42cb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42cb8:	mov	r2, #0
   42cbc:	strb	r2, [r3]
   42cc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42cc4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   42cc8:	sub	r3, r2, r3
   42ccc:	b	430a4 <flatcc_json_parser_struct_as_root@@Base+0x4554>
   42cd0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   42cd4:	mov	r0, #0
   42cd8:	mov	r1, #0
   42cdc:	movt	r1, #32752	; 0x7ff0
   42ce0:	cmp	r3, r1
   42ce4:	cmpeq	r2, r0
   42ce8:	bne	42d44 <flatcc_json_parser_struct_as_root@@Base+0x41f4>
   42cec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42cf0:	add	r2, r3, #1
   42cf4:	str	r2, [fp, #-40]	; 0xffffffd8
   42cf8:	mov	r2, #105	; 0x69
   42cfc:	strb	r2, [r3]
   42d00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42d04:	add	r2, r3, #1
   42d08:	str	r2, [fp, #-40]	; 0xffffffd8
   42d0c:	mov	r2, #110	; 0x6e
   42d10:	strb	r2, [r3]
   42d14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42d18:	add	r2, r3, #1
   42d1c:	str	r2, [fp, #-40]	; 0xffffffd8
   42d20:	mov	r2, #102	; 0x66
   42d24:	strb	r2, [r3]
   42d28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42d2c:	mov	r2, #0
   42d30:	strb	r2, [r3]
   42d34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42d38:	ldr	r3, [fp, #-72]	; 0xffffffb8
   42d3c:	sub	r3, r2, r3
   42d40:	b	430a4 <flatcc_json_parser_struct_as_root@@Base+0x4554>
   42d44:	sub	r2, fp, #52	; 0x34
   42d48:	sub	r3, fp, #56	; 0x38
   42d4c:	mov	r1, r3
   42d50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   42d54:	vldr	d0, [fp, #-68]	; 0xffffffbc
   42d58:	bl	42620 <flatcc_json_parser_struct_as_root@@Base+0x3ad0>
   42d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   42d60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42d64:	cmp	r3, #0
   42d68:	bne	42d98 <flatcc_json_parser_struct_as_root@@Base+0x4248>
   42d6c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   42d70:	ldr	r1, [pc, #856]	; 430d0 <flatcc_json_parser_struct_as_root@@Base+0x4580>
   42d74:	add	r1, pc, r1
   42d78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   42d7c:	bl	145d0 <sprintf@plt>
   42d80:	mov	r1, r0
   42d84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42d88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   42d8c:	sub	r3, r2, r3
   42d90:	add	r3, r1, r3
   42d94:	b	430a4 <flatcc_json_parser_struct_as_root@@Base+0x4554>
   42d98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42d9c:	cmp	r3, #2
   42da0:	movge	r2, r3
   42da4:	movlt	r2, #2
   42da8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42dac:	rsb	r3, r3, #0
   42db0:	cmp	r2, r3
   42db4:	ble	42dc4 <flatcc_json_parser_struct_as_root@@Base+0x4274>
   42db8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42dbc:	rsb	r3, r3, #0
   42dc0:	b	42dd8 <flatcc_json_parser_struct_as_root@@Base+0x4288>
   42dc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42dc8:	cmp	r3, #2
   42dcc:	movge	r3, r3
   42dd0:	movlt	r3, #2
   42dd4:	sub	r3, r3, #1
   42dd8:	str	r3, [fp, #-48]	; 0xffffffd0
   42ddc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42de0:	cmp	r3, #0
   42de4:	bge	42eb4 <flatcc_json_parser_struct_as_root@@Base+0x4364>
   42de8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   42dec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42df0:	add	r3, r2, r3
   42df4:	cmn	r3, #2
   42df8:	blt	42eb4 <flatcc_json_parser_struct_as_root@@Base+0x4364>
   42dfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42e00:	rsb	r2, r3, #0
   42e04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42e08:	cmp	r2, r3
   42e0c:	blt	42eb4 <flatcc_json_parser_struct_as_root@@Base+0x4364>
   42e10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42e14:	mov	r2, r3
   42e18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42e1c:	add	r3, r2, r3
   42e20:	rsb	r3, r3, #2
   42e24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42e28:	add	r3, r2, r3
   42e2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   42e30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   42e34:	mov	r0, r3
   42e38:	bl	14504 <memmove@plt>
   42e3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42e40:	mov	r2, #48	; 0x30
   42e44:	strb	r2, [r3]
   42e48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42e4c:	add	r3, r3, #1
   42e50:	mov	r2, #46	; 0x2e
   42e54:	strb	r2, [r3]
   42e58:	mov	r3, #2
   42e5c:	str	r3, [fp, #-24]	; 0xffffffe8
   42e60:	b	42e84 <flatcc_json_parser_struct_as_root@@Base+0x4334>
   42e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42e68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42e6c:	add	r3, r2, r3
   42e70:	mov	r2, #48	; 0x30
   42e74:	strb	r2, [r3]
   42e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42e7c:	add	r3, r3, #1
   42e80:	str	r3, [fp, #-24]	; 0xffffffe8
   42e84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42e88:	rsb	r2, r3, #2
   42e8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42e90:	sub	r3, r2, r3
   42e94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42e98:	cmp	r2, r3
   42e9c:	blt	42e64 <flatcc_json_parser_struct_as_root@@Base+0x4314>
   42ea0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   42ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42ea8:	add	r3, r2, r3
   42eac:	str	r3, [fp, #-56]	; 0xffffffc8
   42eb0:	b	43074 <flatcc_json_parser_struct_as_root@@Base+0x4524>
   42eb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42eb8:	cmp	r3, #0
   42ebc:	bge	42fc4 <flatcc_json_parser_struct_as_root@@Base+0x4474>
   42ec0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42ec4:	cmp	r3, #1
   42ec8:	ble	42fc4 <flatcc_json_parser_struct_as_root@@Base+0x4474>
   42ecc:	mov	r3, #0
   42ed0:	str	r3, [fp, #-24]	; 0xffffffe8
   42ed4:	b	42f1c <flatcc_json_parser_struct_as_root@@Base+0x43cc>
   42ed8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   42edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42ee0:	sub	r3, r2, r3
   42ee4:	sub	r3, r3, #1
   42ee8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42eec:	add	r2, r2, r3
   42ef0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   42ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42ef8:	sub	r3, r1, r3
   42efc:	mov	r1, r3
   42f00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42f04:	add	r3, r3, r1
   42f08:	ldrb	r2, [r2]
   42f0c:	strb	r2, [r3]
   42f10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42f14:	add	r3, r3, #1
   42f18:	str	r3, [fp, #-24]	; 0xffffffe8
   42f1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42f20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42f24:	cmp	r2, r3
   42f28:	blt	42ed8 <flatcc_json_parser_struct_as_root@@Base+0x4388>
   42f2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42f30:	add	r2, r3, #1
   42f34:	str	r2, [fp, #-56]	; 0xffffffc8
   42f38:	ldr	r2, [fp, #-48]	; 0xffffffd0
   42f3c:	sub	r3, r3, r2
   42f40:	mov	r2, r3
   42f44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42f48:	add	r3, r3, r2
   42f4c:	mov	r2, #46	; 0x2e
   42f50:	strb	r2, [r3]
   42f54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   42f58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42f5c:	add	r3, r2, r3
   42f60:	str	r3, [fp, #-52]	; 0xffffffcc
   42f64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42f68:	cmp	r3, #0
   42f6c:	beq	43074 <flatcc_json_parser_struct_as_root@@Base+0x4524>
   42f70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42f74:	add	r2, r3, #1
   42f78:	str	r2, [fp, #-56]	; 0xffffffc8
   42f7c:	mov	r2, r3
   42f80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42f84:	add	r3, r3, r2
   42f88:	mov	r2, #101	; 0x65
   42f8c:	strb	r2, [r3]
   42f90:	ldr	r2, [fp, #-52]	; 0xffffffcc
   42f94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42f98:	mov	r1, r3
   42f9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42fa0:	add	r3, r3, r1
   42fa4:	mov	r1, r3
   42fa8:	mov	r0, r2
   42fac:	bl	429fc <flatcc_json_parser_struct_as_root@@Base+0x3eac>
   42fb0:	mov	r2, r0
   42fb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42fb8:	add	r3, r2, r3
   42fbc:	str	r3, [fp, #-56]	; 0xffffffc8
   42fc0:	b	43074 <flatcc_json_parser_struct_as_root@@Base+0x4524>
   42fc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42fc8:	cmp	r3, #0
   42fcc:	blt	42fdc <flatcc_json_parser_struct_as_root@@Base+0x448c>
   42fd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42fd4:	cmp	r3, #2
   42fd8:	ble	43030 <flatcc_json_parser_struct_as_root@@Base+0x44e0>
   42fdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42fe0:	add	r2, r3, #1
   42fe4:	str	r2, [fp, #-56]	; 0xffffffc8
   42fe8:	mov	r2, r3
   42fec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42ff0:	add	r3, r3, r2
   42ff4:	mov	r2, #101	; 0x65
   42ff8:	strb	r2, [r3]
   42ffc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   43000:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43004:	mov	r1, r3
   43008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4300c:	add	r3, r3, r1
   43010:	mov	r1, r3
   43014:	mov	r0, r2
   43018:	bl	429fc <flatcc_json_parser_struct_as_root@@Base+0x3eac>
   4301c:	mov	r2, r0
   43020:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43024:	add	r3, r2, r3
   43028:	str	r3, [fp, #-56]	; 0xffffffc8
   4302c:	b	43074 <flatcc_json_parser_struct_as_root@@Base+0x4524>
   43030:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43034:	cmp	r3, #0
   43038:	ble	43074 <flatcc_json_parser_struct_as_root@@Base+0x4524>
   4303c:	b	43060 <flatcc_json_parser_struct_as_root@@Base+0x4510>
   43040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43044:	add	r2, r3, #1
   43048:	str	r2, [fp, #-56]	; 0xffffffc8
   4304c:	mov	r2, r3
   43050:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43054:	add	r3, r3, r2
   43058:	mov	r2, #48	; 0x30
   4305c:	strb	r2, [r3]
   43060:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43064:	sub	r2, r3, #1
   43068:	str	r2, [fp, #-52]	; 0xffffffcc
   4306c:	cmp	r3, #0
   43070:	bgt	43040 <flatcc_json_parser_struct_as_root@@Base+0x44f0>
   43074:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43078:	mov	r2, r3
   4307c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43080:	add	r3, r3, r2
   43084:	mov	r2, #0
   43088:	strb	r2, [r3]
   4308c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43090:	mov	r2, r3
   43094:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43098:	add	r2, r3, r2
   4309c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   430a0:	sub	r3, r2, r3
   430a4:	mov	r0, r3
   430a8:	sub	sp, fp, #20
   430ac:	ldrd	r4, [sp]
   430b0:	ldrd	r6, [sp, #8]
   430b4:	ldr	fp, [sp, #16]
   430b8:	add	sp, sp, #20
   430bc:	pop	{pc}		; (ldr pc, [sp], #4)
   430c0:			; <UNDEFINED> instruction: 0x00010fbc
   430c4:	andeq	r0, r1, r4, asr ip
   430c8:	andeq	r0, r1, r4, ror #25
   430cc:	muleq	r1, r8, ip
   430d0:	andeq	r0, r1, r4, ror fp
   430d4:	push	{fp}		; (str fp, [sp, #-4]!)
   430d8:	add	fp, sp, #0
   430dc:	sub	sp, sp, #12
   430e0:	str	r0, [fp, #-8]
   430e4:	ldr	r3, [fp, #-8]
   430e8:	cmp	r3, #5
   430ec:	addls	pc, pc, r3, lsl #2
   430f0:	b	43154 <flatcc_json_parser_struct_as_root@@Base+0x4604>
   430f4:	b	4310c <flatcc_json_parser_struct_as_root@@Base+0x45bc>
   430f8:	b	43130 <flatcc_json_parser_struct_as_root@@Base+0x45e0>
   430fc:	b	43118 <flatcc_json_parser_struct_as_root@@Base+0x45c8>
   43100:	b	43124 <flatcc_json_parser_struct_as_root@@Base+0x45d4>
   43104:	b	4313c <flatcc_json_parser_struct_as_root@@Base+0x45ec>
   43108:	b	43148 <flatcc_json_parser_struct_as_root@@Base+0x45f8>
   4310c:	ldr	r3, [pc, #88]	; 4316c <flatcc_json_parser_struct_as_root@@Base+0x461c>
   43110:	add	r3, pc, r3
   43114:	b	4315c <flatcc_json_parser_struct_as_root@@Base+0x460c>
   43118:	ldr	r3, [pc, #80]	; 43170 <flatcc_json_parser_struct_as_root@@Base+0x4620>
   4311c:	add	r3, pc, r3
   43120:	b	4315c <flatcc_json_parser_struct_as_root@@Base+0x460c>
   43124:	ldr	r3, [pc, #72]	; 43174 <flatcc_json_parser_struct_as_root@@Base+0x4624>
   43128:	add	r3, pc, r3
   4312c:	b	4315c <flatcc_json_parser_struct_as_root@@Base+0x460c>
   43130:	ldr	r3, [pc, #64]	; 43178 <flatcc_json_parser_struct_as_root@@Base+0x4628>
   43134:	add	r3, pc, r3
   43138:	b	4315c <flatcc_json_parser_struct_as_root@@Base+0x460c>
   4313c:	ldr	r3, [pc, #56]	; 4317c <flatcc_json_parser_struct_as_root@@Base+0x462c>
   43140:	add	r3, pc, r3
   43144:	b	4315c <flatcc_json_parser_struct_as_root@@Base+0x460c>
   43148:	ldr	r3, [pc, #48]	; 43180 <flatcc_json_parser_struct_as_root@@Base+0x4630>
   4314c:	add	r3, pc, r3
   43150:	b	4315c <flatcc_json_parser_struct_as_root@@Base+0x460c>
   43154:	ldr	r3, [pc, #40]	; 43184 <flatcc_json_parser_struct_as_root@@Base+0x4634>
   43158:	add	r3, pc, r3
   4315c:	mov	r0, r3
   43160:	add	sp, fp, #0
   43164:	pop	{fp}		; (ldr fp, [sp], #4)
   43168:	bx	lr
   4316c:	andeq	r0, r1, r0, ror #15
   43170:	ldrdeq	r0, [r1], -r8
   43174:	andeq	r0, r1, r0, ror #15
   43178:	andeq	r0, r1, r4, ror #15
   4317c:	andeq	r0, r1, ip, ror #15
   43180:	strdeq	r0, [r1], -r4
   43184:	andeq	r0, r1, r0, lsl #16
   43188:	push	{fp}		; (str fp, [sp, #-4]!)
   4318c:	add	fp, sp, #0
   43190:	sub	sp, sp, #28
   43194:	str	r0, [fp, #-24]	; 0xffffffe8
   43198:	str	r1, [fp, #-28]	; 0xffffffe4
   4319c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   431a0:	movw	r3, #43691	; 0xaaab
   431a4:	movt	r3, #43690	; 0xaaaa
   431a8:	umull	r1, r3, r3, r2
   431ac:	lsr	r1, r3, #1
   431b0:	mov	r3, r1
   431b4:	lsl	r3, r3, #1
   431b8:	add	r3, r3, r1
   431bc:	sub	r3, r2, r3
   431c0:	str	r3, [fp, #-12]
   431c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   431c8:	lsl	r2, r3, #2
   431cc:	movw	r3, #43691	; 0xaaab
   431d0:	movt	r3, #43690	; 0xaaaa
   431d4:	umull	r2, r3, r3, r2
   431d8:	lsr	r3, r3, #1
   431dc:	add	r3, r3, #3
   431e0:	bic	r3, r3, #3
   431e4:	str	r3, [fp, #-8]
   431e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   431ec:	and	r3, r3, #128	; 0x80
   431f0:	str	r3, [fp, #-16]
   431f4:	ldr	r3, [fp, #-16]
   431f8:	cmp	r3, #0
   431fc:	bne	43238 <flatcc_json_parser_struct_as_root@@Base+0x46e8>
   43200:	ldr	r3, [fp, #-12]
   43204:	cmp	r3, #1
   43208:	beq	43228 <flatcc_json_parser_struct_as_root@@Base+0x46d8>
   4320c:	ldr	r3, [fp, #-12]
   43210:	cmp	r3, #2
   43214:	bne	43240 <flatcc_json_parser_struct_as_root@@Base+0x46f0>
   43218:	ldr	r3, [fp, #-8]
   4321c:	sub	r3, r3, #1
   43220:	str	r3, [fp, #-8]
   43224:	b	43244 <flatcc_json_parser_struct_as_root@@Base+0x46f4>
   43228:	ldr	r3, [fp, #-8]
   4322c:	sub	r3, r3, #2
   43230:	str	r3, [fp, #-8]
   43234:	b	43244 <flatcc_json_parser_struct_as_root@@Base+0x46f4>
   43238:	nop	{0}
   4323c:	b	43244 <flatcc_json_parser_struct_as_root@@Base+0x46f4>
   43240:	nop	{0}
   43244:	ldr	r3, [fp, #-8]
   43248:	mov	r0, r3
   4324c:	add	sp, fp, #0
   43250:	pop	{fp}		; (ldr fp, [sp], #4)
   43254:	bx	lr
   43258:	push	{fp}		; (str fp, [sp, #-4]!)
   4325c:	add	fp, sp, #0
   43260:	sub	sp, sp, #20
   43264:	str	r0, [fp, #-16]
   43268:	ldr	r3, [fp, #-16]
   4326c:	and	r3, r3, #3
   43270:	str	r3, [fp, #-8]
   43274:	ldr	r3, [fp, #-16]
   43278:	lsr	r2, r3, #2
   4327c:	mov	r3, r2
   43280:	lsl	r3, r3, #1
   43284:	add	r3, r3, r2
   43288:	str	r3, [fp, #-12]
   4328c:	ldr	r3, [fp, #-8]
   43290:	cmp	r3, #2
   43294:	beq	432b0 <flatcc_json_parser_struct_as_root@@Base+0x4760>
   43298:	ldr	r3, [fp, #-8]
   4329c:	cmp	r3, #3
   432a0:	bne	432bc <flatcc_json_parser_struct_as_root@@Base+0x476c>
   432a4:	ldr	r3, [fp, #-12]
   432a8:	add	r3, r3, #2
   432ac:	b	432c0 <flatcc_json_parser_struct_as_root@@Base+0x4770>
   432b0:	ldr	r3, [fp, #-12]
   432b4:	add	r3, r3, #1
   432b8:	b	432c0 <flatcc_json_parser_struct_as_root@@Base+0x4770>
   432bc:	ldr	r3, [fp, #-12]
   432c0:	mov	r0, r3
   432c4:	add	sp, fp, #0
   432c8:	pop	{fp}		; (ldr fp, [sp], #4)
   432cc:	bx	lr
   432d0:	push	{fp}		; (str fp, [sp, #-4]!)
   432d4:	add	fp, sp, #0
   432d8:	sub	sp, sp, #52	; 0x34
   432dc:	str	r0, [fp, #-40]	; 0xffffffd8
   432e0:	str	r1, [fp, #-44]	; 0xffffffd4
   432e4:	str	r2, [fp, #-48]	; 0xffffffd0
   432e8:	str	r3, [fp, #-52]	; 0xffffffcc
   432ec:	ldr	r3, [pc, #928]	; 43694 <flatcc_json_parser_struct_as_root@@Base+0x4b44>
   432f0:	add	r3, pc, r3
   432f4:	str	r3, [fp, #-20]	; 0xffffffec
   432f8:	ldr	r3, [pc, #920]	; 43698 <flatcc_json_parser_struct_as_root@@Base+0x4b48>
   432fc:	add	r3, pc, r3
   43300:	str	r3, [fp, #-24]	; 0xffffffe8
   43304:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43308:	str	r3, [fp, #-28]	; 0xffffffe4
   4330c:	ldr	r3, [fp, #4]
   43310:	and	r3, r3, #128	; 0x80
   43314:	str	r3, [fp, #-32]	; 0xffffffe0
   43318:	mov	r3, #0
   4331c:	str	r3, [fp, #-12]
   43320:	mov	r3, #3
   43324:	str	r3, [fp, #-16]
   43328:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4332c:	cmp	r3, #0
   43330:	bne	43340 <flatcc_json_parser_struct_as_root@@Base+0x47f0>
   43334:	mov	r3, #2
   43338:	str	r3, [fp, #-16]
   4333c:	b	43638 <flatcc_json_parser_struct_as_root@@Base+0x4ae8>
   43340:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43344:	ldr	r3, [r3]
   43348:	str	r3, [fp, #-12]
   4334c:	ldr	r3, [fp, #4]
   43350:	bic	r3, r3, #224	; 0xe0
   43354:	str	r3, [fp, #4]
   43358:	ldr	r3, [fp, #4]
   4335c:	cmp	r3, #0
   43360:	beq	43374 <flatcc_json_parser_struct_as_root@@Base+0x4824>
   43364:	ldr	r3, [fp, #4]
   43368:	cmp	r3, #1
   4336c:	beq	43380 <flatcc_json_parser_struct_as_root@@Base+0x4830>
   43370:	b	43638 <flatcc_json_parser_struct_as_root@@Base+0x4ae8>
   43374:	ldr	r3, [fp, #-20]	; 0xffffffec
   43378:	str	r3, [fp, #-8]
   4337c:	b	4338c <flatcc_json_parser_struct_as_root@@Base+0x483c>
   43380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43384:	str	r3, [fp, #-8]
   43388:	nop	{0}
   4338c:	mov	r3, #0
   43390:	str	r3, [fp, #-16]
   43394:	b	43498 <flatcc_json_parser_struct_as_root@@Base+0x4948>
   43398:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4339c:	ldrb	r3, [r3]
   433a0:	lsr	r3, r3, #2
   433a4:	uxtb	r3, r3
   433a8:	mov	r2, r3
   433ac:	ldr	r3, [fp, #-8]
   433b0:	add	r3, r3, r2
   433b4:	ldrb	r2, [r3]
   433b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   433bc:	strb	r2, [r3]
   433c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   433c4:	ldrb	r3, [r3]
   433c8:	lsl	r3, r3, #4
   433cc:	and	r3, r3, #48	; 0x30
   433d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   433d4:	add	r2, r2, #1
   433d8:	ldrb	r2, [r2]
   433dc:	lsr	r2, r2, #4
   433e0:	uxtb	r2, r2
   433e4:	orr	r3, r3, r2
   433e8:	mov	r2, r3
   433ec:	ldr	r3, [fp, #-8]
   433f0:	add	r2, r3, r2
   433f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   433f8:	add	r3, r3, #1
   433fc:	ldrb	r2, [r2]
   43400:	strb	r2, [r3]
   43404:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43408:	add	r3, r3, #1
   4340c:	ldrb	r3, [r3]
   43410:	lsl	r3, r3, #2
   43414:	and	r3, r3, #60	; 0x3c
   43418:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4341c:	add	r2, r2, #2
   43420:	ldrb	r2, [r2]
   43424:	lsr	r2, r2, #6
   43428:	uxtb	r2, r2
   4342c:	orr	r3, r3, r2
   43430:	mov	r2, r3
   43434:	ldr	r3, [fp, #-8]
   43438:	add	r2, r3, r2
   4343c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43440:	add	r3, r3, #2
   43444:	ldrb	r2, [r2]
   43448:	strb	r2, [r3]
   4344c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43450:	add	r3, r3, #2
   43454:	ldrb	r3, [r3]
   43458:	and	r3, r3, #63	; 0x3f
   4345c:	ldr	r2, [fp, #-8]
   43460:	add	r2, r2, r3
   43464:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43468:	add	r3, r3, #3
   4346c:	ldrb	r2, [r2]
   43470:	strb	r2, [r3]
   43474:	ldr	r3, [fp, #-12]
   43478:	sub	r3, r3, #3
   4347c:	str	r3, [fp, #-12]
   43480:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43484:	add	r3, r3, #4
   43488:	str	r3, [fp, #-40]	; 0xffffffd8
   4348c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43490:	add	r3, r3, #3
   43494:	str	r3, [fp, #-44]	; 0xffffffd4
   43498:	ldr	r3, [fp, #-12]
   4349c:	cmp	r3, #2
   434a0:	bhi	43398 <flatcc_json_parser_struct_as_root@@Base+0x4848>
   434a4:	ldr	r3, [fp, #-12]
   434a8:	cmp	r3, #1
   434ac:	beq	43584 <flatcc_json_parser_struct_as_root@@Base+0x4a34>
   434b0:	ldr	r3, [fp, #-12]
   434b4:	cmp	r3, #2
   434b8:	bne	43618 <flatcc_json_parser_struct_as_root@@Base+0x4ac8>
   434bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   434c0:	ldrb	r3, [r3]
   434c4:	lsr	r3, r3, #2
   434c8:	uxtb	r3, r3
   434cc:	mov	r2, r3
   434d0:	ldr	r3, [fp, #-8]
   434d4:	add	r3, r3, r2
   434d8:	ldrb	r2, [r3]
   434dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   434e0:	strb	r2, [r3]
   434e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   434e8:	ldrb	r3, [r3]
   434ec:	lsl	r3, r3, #4
   434f0:	and	r3, r3, #48	; 0x30
   434f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   434f8:	add	r2, r2, #1
   434fc:	ldrb	r2, [r2]
   43500:	lsr	r2, r2, #4
   43504:	uxtb	r2, r2
   43508:	orr	r3, r3, r2
   4350c:	mov	r2, r3
   43510:	ldr	r3, [fp, #-8]
   43514:	add	r2, r3, r2
   43518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4351c:	add	r3, r3, #1
   43520:	ldrb	r2, [r2]
   43524:	strb	r2, [r3]
   43528:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4352c:	add	r3, r3, #1
   43530:	ldrb	r3, [r3]
   43534:	lsl	r3, r3, #2
   43538:	and	r3, r3, #60	; 0x3c
   4353c:	ldr	r2, [fp, #-8]
   43540:	add	r2, r2, r3
   43544:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43548:	add	r3, r3, #2
   4354c:	ldrb	r2, [r2]
   43550:	strb	r2, [r3]
   43554:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43558:	add	r3, r3, #3
   4355c:	str	r3, [fp, #-40]	; 0xffffffd8
   43560:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43564:	cmp	r3, #0
   43568:	beq	43624 <flatcc_json_parser_struct_as_root@@Base+0x4ad4>
   4356c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43570:	add	r2, r3, #1
   43574:	str	r2, [fp, #-40]	; 0xffffffd8
   43578:	mov	r2, #61	; 0x3d
   4357c:	strb	r2, [r3]
   43580:	b	43624 <flatcc_json_parser_struct_as_root@@Base+0x4ad4>
   43584:	ldr	r3, [fp, #-44]	; 0xffffffd4
   43588:	ldrb	r3, [r3]
   4358c:	lsr	r3, r3, #2
   43590:	uxtb	r3, r3
   43594:	mov	r2, r3
   43598:	ldr	r3, [fp, #-8]
   4359c:	add	r3, r3, r2
   435a0:	ldrb	r2, [r3]
   435a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   435a8:	strb	r2, [r3]
   435ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   435b0:	ldrb	r3, [r3]
   435b4:	lsl	r3, r3, #4
   435b8:	and	r3, r3, #48	; 0x30
   435bc:	ldr	r2, [fp, #-8]
   435c0:	add	r2, r2, r3
   435c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   435c8:	add	r3, r3, #1
   435cc:	ldrb	r2, [r2]
   435d0:	strb	r2, [r3]
   435d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   435d8:	add	r3, r3, #2
   435dc:	str	r3, [fp, #-40]	; 0xffffffd8
   435e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   435e4:	cmp	r3, #0
   435e8:	beq	4362c <flatcc_json_parser_struct_as_root@@Base+0x4adc>
   435ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   435f0:	add	r2, r3, #1
   435f4:	str	r2, [fp, #-40]	; 0xffffffd8
   435f8:	mov	r2, #61	; 0x3d
   435fc:	strb	r2, [r3]
   43600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43604:	add	r2, r3, #1
   43608:	str	r2, [fp, #-40]	; 0xffffffd8
   4360c:	mov	r2, #61	; 0x3d
   43610:	strb	r2, [r3]
   43614:	b	4362c <flatcc_json_parser_struct_as_root@@Base+0x4adc>
   43618:	mov	r3, #0
   4361c:	str	r3, [fp, #-32]	; 0xffffffe0
   43620:	b	43630 <flatcc_json_parser_struct_as_root@@Base+0x4ae0>
   43624:	nop	{0}
   43628:	b	43630 <flatcc_json_parser_struct_as_root@@Base+0x4ae0>
   4362c:	nop	{0}
   43630:	mov	r3, #0
   43634:	str	r3, [fp, #-12]
   43638:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4363c:	cmp	r3, #0
   43640:	beq	4365c <flatcc_json_parser_struct_as_root@@Base+0x4b0c>
   43644:	ldr	r2, [fp, #-40]	; 0xffffffd8
   43648:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4364c:	sub	r3, r2, r3
   43650:	mov	r2, r3
   43654:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43658:	str	r2, [r3]
   4365c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43660:	cmp	r3, #0
   43664:	beq	43680 <flatcc_json_parser_struct_as_root@@Base+0x4b30>
   43668:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4366c:	ldr	r2, [r3]
   43670:	ldr	r3, [fp, #-12]
   43674:	sub	r2, r2, r3
   43678:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4367c:	str	r2, [r3]
   43680:	ldr	r3, [fp, #-16]
   43684:	mov	r0, r3
   43688:	add	sp, fp, #0
   4368c:	pop	{fp}		; (ldr fp, [sp], #4)
   43690:	bx	lr
   43694:	andeq	r0, r1, r8, ror r6
   43698:			; <UNDEFINED> instruction: 0x000106b0
   4369c:	push	{fp}		; (str fp, [sp, #-4]!)
   436a0:	add	fp, sp, #0
   436a4:	sub	sp, sp, #60	; 0x3c
   436a8:	str	r0, [fp, #-48]	; 0xffffffd0
   436ac:	str	r1, [fp, #-52]	; 0xffffffcc
   436b0:	str	r2, [fp, #-56]	; 0xffffffc8
   436b4:	str	r3, [fp, #-60]	; 0xffffffc4
   436b8:	mov	r3, #0
   436bc:	str	r3, [fp, #-8]
   436c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   436c4:	str	r3, [fp, #-36]	; 0xffffffdc
   436c8:	mvn	r3, #0
   436cc:	str	r3, [fp, #-20]	; 0xffffffec
   436d0:	mvn	r3, #0
   436d4:	str	r3, [fp, #-24]	; 0xffffffe8
   436d8:	ldr	r3, [pc, #1388]	; 43c4c <flatcc_json_parser_struct_as_root@@Base+0x50fc>
   436dc:	add	r3, pc, r3
   436e0:	str	r3, [fp, #-32]	; 0xffffffe0
   436e4:	ldr	r3, [fp, #4]
   436e8:	and	r3, r3, #32
   436ec:	str	r3, [fp, #-40]	; 0xffffffd8
   436f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   436f4:	cmp	r3, #0
   436f8:	beq	43708 <flatcc_json_parser_struct_as_root@@Base+0x4bb8>
   436fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   43700:	ldr	r3, [r3]
   43704:	str	r3, [fp, #-24]	; 0xffffffe8
   43708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4370c:	str	r3, [fp, #-28]	; 0xffffffe4
   43710:	ldr	r3, [fp, #4]
   43714:	bic	r3, r3, #224	; 0xe0
   43718:	str	r3, [fp, #4]
   4371c:	ldr	r3, [fp, #4]
   43720:	cmp	r3, #0
   43724:	beq	43738 <flatcc_json_parser_struct_as_root@@Base+0x4be8>
   43728:	ldr	r3, [fp, #4]
   4372c:	cmp	r3, #1
   43730:	beq	43760 <flatcc_json_parser_struct_as_root@@Base+0x4c10>
   43734:	b	43788 <flatcc_json_parser_struct_as_root@@Base+0x4c38>
   43738:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4373c:	cmp	r3, #0
   43740:	beq	43750 <flatcc_json_parser_struct_as_root@@Base+0x4c00>
   43744:	ldr	r3, [pc, #1284]	; 43c50 <flatcc_json_parser_struct_as_root@@Base+0x5100>
   43748:	add	r3, pc, r3
   4374c:	b	43758 <flatcc_json_parser_struct_as_root@@Base+0x4c08>
   43750:	ldr	r3, [pc, #1276]	; 43c54 <flatcc_json_parser_struct_as_root@@Base+0x5104>
   43754:	add	r3, pc, r3
   43758:	str	r3, [fp, #-32]	; 0xffffffe0
   4375c:	b	43794 <flatcc_json_parser_struct_as_root@@Base+0x4c44>
   43760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43764:	cmp	r3, #0
   43768:	beq	43778 <flatcc_json_parser_struct_as_root@@Base+0x4c28>
   4376c:	ldr	r3, [pc, #1252]	; 43c58 <flatcc_json_parser_struct_as_root@@Base+0x5108>
   43770:	add	r3, pc, r3
   43774:	b	43780 <flatcc_json_parser_struct_as_root@@Base+0x4c30>
   43778:	ldr	r3, [pc, #1244]	; 43c5c <flatcc_json_parser_struct_as_root@@Base+0x510c>
   4377c:	add	r3, pc, r3
   43780:	str	r3, [fp, #-32]	; 0xffffffe0
   43784:	b	43794 <flatcc_json_parser_struct_as_root@@Base+0x4c44>
   43788:	mov	r3, #3
   4378c:	str	r3, [fp, #-8]
   43790:	b	43a80 <flatcc_json_parser_struct_as_root@@Base+0x4f30>
   43794:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43798:	cmp	r3, #0
   4379c:	beq	43a70 <flatcc_json_parser_struct_as_root@@Base+0x4f20>
   437a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   437a4:	ldr	r3, [r3]
   437a8:	cmp	r3, #0
   437ac:	beq	43a70 <flatcc_json_parser_struct_as_root@@Base+0x4f20>
   437b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   437b4:	ldr	r3, [r3]
   437b8:	str	r3, [fp, #-20]	; 0xffffffec
   437bc:	b	43a70 <flatcc_json_parser_struct_as_root@@Base+0x4f20>
   437c0:	mov	r3, #0
   437c4:	str	r3, [fp, #-12]
   437c8:	b	43990 <flatcc_json_parser_struct_as_root@@Base+0x4e40>
   437cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   437d0:	ldr	r3, [fp, #-12]
   437d4:	cmp	r2, r3
   437d8:	bne	437f8 <flatcc_json_parser_struct_as_root@@Base+0x4ca8>
   437dc:	ldr	r3, [fp, #-12]
   437e0:	str	r3, [fp, #-16]
   437e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   437e8:	ldr	r3, [fp, #-12]
   437ec:	sub	r3, r2, r3
   437f0:	str	r3, [fp, #-24]	; 0xffffffe8
   437f4:	b	43ad0 <flatcc_json_parser_struct_as_root@@Base+0x4f80>
   437f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   437fc:	ldr	r3, [fp, #-12]
   43800:	add	r3, r2, r3
   43804:	ldrb	r3, [r3]
   43808:	mov	r2, r3
   4380c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43810:	add	r3, r3, r2
   43814:	ldrb	r1, [r3]
   43818:	sub	r2, fp, #44	; 0x2c
   4381c:	ldr	r3, [fp, #-12]
   43820:	add	r3, r2, r3
   43824:	mov	r2, r1
   43828:	strb	r2, [r3]
   4382c:	sub	r2, fp, #44	; 0x2c
   43830:	ldr	r3, [fp, #-12]
   43834:	add	r3, r2, r3
   43838:	ldrb	r2, [r3]
   4383c:	ldr	r3, [pc, #1052]	; 43c60 <flatcc_json_parser_struct_as_root@@Base+0x5110>
   43840:	add	r3, pc, r3
   43844:	ldrb	r3, [r3]
   43848:	cmp	r2, r3
   4384c:	bcc	43984 <flatcc_json_parser_struct_as_root@@Base+0x4e34>
   43850:	sub	r2, fp, #44	; 0x2c
   43854:	ldr	r3, [fp, #-12]
   43858:	add	r3, r2, r3
   4385c:	ldrb	r2, [r3]
   43860:	ldr	r3, [pc, #1020]	; 43c64 <flatcc_json_parser_struct_as_root@@Base+0x5114>
   43864:	add	r3, pc, r3
   43868:	ldrb	r3, [r3]
   4386c:	cmp	r2, r3
   43870:	bne	4389c <flatcc_json_parser_struct_as_root@@Base+0x4d4c>
   43874:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43878:	add	r3, r3, #1
   4387c:	str	r3, [fp, #-52]	; 0xffffffcc
   43880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43884:	sub	r3, r3, #1
   43888:	str	r3, [fp, #-24]	; 0xffffffe8
   4388c:	ldr	r3, [fp, #-12]
   43890:	sub	r3, r3, #1
   43894:	str	r3, [fp, #-12]
   43898:	b	43984 <flatcc_json_parser_struct_as_root@@Base+0x4e34>
   4389c:	ldr	r3, [fp, #-12]
   438a0:	str	r3, [fp, #-16]
   438a4:	sub	r2, fp, #44	; 0x2c
   438a8:	ldr	r3, [fp, #-12]
   438ac:	add	r3, r2, r3
   438b0:	ldrb	r2, [r3]
   438b4:	ldr	r3, [pc, #940]	; 43c68 <flatcc_json_parser_struct_as_root@@Base+0x5118>
   438b8:	add	r3, pc, r3
   438bc:	ldrb	r3, [r3]
   438c0:	cmp	r2, r3
   438c4:	bne	43970 <flatcc_json_parser_struct_as_root@@Base+0x4e20>
   438c8:	ldr	r3, [fp, #-12]
   438cc:	add	r3, r3, #1
   438d0:	str	r3, [fp, #-12]
   438d4:	b	4394c <flatcc_json_parser_struct_as_root@@Base+0x4dfc>
   438d8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   438dc:	ldr	r3, [fp, #-12]
   438e0:	add	r3, r2, r3
   438e4:	ldrb	r3, [r3]
   438e8:	mov	r2, r3
   438ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   438f0:	add	r3, r3, r2
   438f4:	ldrb	r2, [r3]
   438f8:	ldr	r3, [pc, #876]	; 43c6c <flatcc_json_parser_struct_as_root@@Base+0x511c>
   438fc:	add	r3, pc, r3
   43900:	ldrb	r3, [r3]
   43904:	cmp	r2, r3
   43908:	beq	43940 <flatcc_json_parser_struct_as_root@@Base+0x4df0>
   4390c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   43910:	ldr	r3, [fp, #-12]
   43914:	add	r3, r2, r3
   43918:	ldrb	r3, [r3]
   4391c:	mov	r2, r3
   43920:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43924:	add	r3, r3, r2
   43928:	ldrb	r2, [r3]
   4392c:	ldr	r3, [pc, #828]	; 43c70 <flatcc_json_parser_struct_as_root@@Base+0x5120>
   43930:	add	r3, pc, r3
   43934:	ldrb	r3, [r3]
   43938:	cmp	r2, r3
   4393c:	bne	4396c <flatcc_json_parser_struct_as_root@@Base+0x4e1c>
   43940:	ldr	r3, [fp, #-12]
   43944:	add	r3, r3, #1
   43948:	str	r3, [fp, #-12]
   4394c:	ldr	r2, [fp, #-12]
   43950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43954:	cmp	r2, r3
   43958:	bcs	43970 <flatcc_json_parser_struct_as_root@@Base+0x4e20>
   4395c:	ldr	r3, [fp, #-12]
   43960:	cmp	r3, #7
   43964:	bls	438d8 <flatcc_json_parser_struct_as_root@@Base+0x4d88>
   43968:	b	43970 <flatcc_json_parser_struct_as_root@@Base+0x4e20>
   4396c:	nop	{0}
   43970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43974:	ldr	r3, [fp, #-12]
   43978:	sub	r3, r2, r3
   4397c:	str	r3, [fp, #-24]	; 0xffffffe8
   43980:	b	43ad0 <flatcc_json_parser_struct_as_root@@Base+0x4f80>
   43984:	ldr	r3, [fp, #-12]
   43988:	add	r3, r3, #1
   4398c:	str	r3, [fp, #-12]
   43990:	ldr	r3, [fp, #-12]
   43994:	cmp	r3, #3
   43998:	bls	437cc <flatcc_json_parser_struct_as_root@@Base+0x4c7c>
   4399c:	ldr	r3, [fp, #-20]	; 0xffffffec
   439a0:	cmp	r3, #2
   439a4:	bls	43c1c <flatcc_json_parser_struct_as_root@@Base+0x50cc>
   439a8:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   439ac:	lsl	r3, r3, #2
   439b0:	sxtb	r2, r3
   439b4:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   439b8:	lsr	r3, r3, #4
   439bc:	uxtb	r3, r3
   439c0:	sxtb	r3, r3
   439c4:	orr	r3, r2, r3
   439c8:	sxtb	r3, r3
   439cc:	uxtb	r2, r3
   439d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   439d4:	strb	r2, [r3]
   439d8:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   439dc:	lsl	r3, r3, #4
   439e0:	sxtb	r2, r3
   439e4:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   439e8:	lsr	r3, r3, #2
   439ec:	uxtb	r3, r3
   439f0:	sxtb	r3, r3
   439f4:	orr	r3, r2, r3
   439f8:	sxtb	r2, r3
   439fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43a00:	add	r3, r3, #1
   43a04:	uxtb	r2, r2
   43a08:	strb	r2, [r3]
   43a0c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   43a10:	lsl	r3, r3, #6
   43a14:	sxtb	r2, r3
   43a18:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   43a1c:	sxtb	r3, r3
   43a20:	orr	r3, r2, r3
   43a24:	sxtb	r2, r3
   43a28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43a2c:	add	r3, r3, #2
   43a30:	uxtb	r2, r2
   43a34:	strb	r2, [r3]
   43a38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43a3c:	add	r3, r3, #3
   43a40:	str	r3, [fp, #-48]	; 0xffffffd0
   43a44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43a48:	add	r3, r3, #4
   43a4c:	str	r3, [fp, #-52]	; 0xffffffcc
   43a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   43a54:	sub	r3, r3, #3
   43a58:	str	r3, [fp, #-20]	; 0xffffffec
   43a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43a60:	sub	r3, r3, #4
   43a64:	str	r3, [fp, #-24]	; 0xffffffe8
   43a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43a6c:	str	r3, [fp, #-28]	; 0xffffffe4
   43a70:	ldr	r3, [fp, #-20]	; 0xffffffec
   43a74:	cmp	r3, #0
   43a78:	bne	437c0 <flatcc_json_parser_struct_as_root@@Base+0x4c70>
   43a7c:	nop	{0}
   43a80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43a84:	cmp	r3, #0
   43a88:	beq	43aa4 <flatcc_json_parser_struct_as_root@@Base+0x4f54>
   43a8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   43a90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   43a94:	sub	r3, r2, r3
   43a98:	mov	r2, r3
   43a9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   43aa0:	str	r2, [r3]
   43aa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   43aa8:	cmp	r3, #0
   43aac:	beq	43ac8 <flatcc_json_parser_struct_as_root@@Base+0x4f78>
   43ab0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   43ab4:	ldr	r2, [r3]
   43ab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43abc:	sub	r2, r2, r3
   43ac0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   43ac4:	str	r2, [r3]
   43ac8:	ldr	r3, [fp, #-8]
   43acc:	b	43c3c <flatcc_json_parser_struct_as_root@@Base+0x50ec>
   43ad0:	ldr	r3, [fp, #-16]
   43ad4:	cmp	r3, #2
   43ad8:	beq	43af8 <flatcc_json_parser_struct_as_root@@Base+0x4fa8>
   43adc:	ldr	r3, [fp, #-16]
   43ae0:	cmp	r3, #3
   43ae4:	beq	43b58 <flatcc_json_parser_struct_as_root@@Base+0x5008>
   43ae8:	ldr	r3, [fp, #-16]
   43aec:	cmp	r3, #0
   43af0:	bne	43bec <flatcc_json_parser_struct_as_root@@Base+0x509c>
   43af4:	b	43bf8 <flatcc_json_parser_struct_as_root@@Base+0x50a8>
   43af8:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   43afc:	lsl	r3, r3, #4
   43b00:	uxtb	r3, r3
   43b04:	cmp	r3, #0
   43b08:	bne	43c04 <flatcc_json_parser_struct_as_root@@Base+0x50b4>
   43b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43b10:	cmp	r3, #0
   43b14:	beq	43c24 <flatcc_json_parser_struct_as_root@@Base+0x50d4>
   43b18:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   43b1c:	lsl	r3, r3, #2
   43b20:	sxtb	r2, r3
   43b24:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   43b28:	lsr	r3, r3, #4
   43b2c:	uxtb	r3, r3
   43b30:	sxtb	r3, r3
   43b34:	orr	r3, r2, r3
   43b38:	sxtb	r3, r3
   43b3c:	uxtb	r2, r3
   43b40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43b44:	strb	r2, [r3]
   43b48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43b4c:	add	r3, r3, #1
   43b50:	str	r3, [fp, #-48]	; 0xffffffd0
   43b54:	b	43bf8 <flatcc_json_parser_struct_as_root@@Base+0x50a8>
   43b58:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   43b5c:	lsl	r3, r3, #6
   43b60:	uxtb	r3, r3
   43b64:	cmp	r3, #0
   43b68:	bne	43c0c <flatcc_json_parser_struct_as_root@@Base+0x50bc>
   43b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43b70:	cmp	r3, #1
   43b74:	bls	43c2c <flatcc_json_parser_struct_as_root@@Base+0x50dc>
   43b78:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   43b7c:	lsl	r3, r3, #2
   43b80:	sxtb	r2, r3
   43b84:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   43b88:	lsr	r3, r3, #4
   43b8c:	uxtb	r3, r3
   43b90:	sxtb	r3, r3
   43b94:	orr	r3, r2, r3
   43b98:	sxtb	r3, r3
   43b9c:	uxtb	r2, r3
   43ba0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43ba4:	strb	r2, [r3]
   43ba8:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   43bac:	lsl	r3, r3, #4
   43bb0:	sxtb	r2, r3
   43bb4:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   43bb8:	lsr	r3, r3, #2
   43bbc:	uxtb	r3, r3
   43bc0:	sxtb	r3, r3
   43bc4:	orr	r3, r2, r3
   43bc8:	sxtb	r2, r3
   43bcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43bd0:	add	r3, r3, #1
   43bd4:	uxtb	r2, r2
   43bd8:	strb	r2, [r3]
   43bdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43be0:	add	r3, r3, #2
   43be4:	str	r3, [fp, #-48]	; 0xffffffd0
   43be8:	b	43bf8 <flatcc_json_parser_struct_as_root@@Base+0x50a8>
   43bec:	mov	r3, #4
   43bf0:	str	r3, [fp, #-8]
   43bf4:	b	43a80 <flatcc_json_parser_struct_as_root@@Base+0x4f30>
   43bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43bfc:	str	r3, [fp, #-28]	; 0xffffffe4
   43c00:	b	43a80 <flatcc_json_parser_struct_as_root@@Base+0x4f30>
   43c04:	nop	{0}
   43c08:	b	43c10 <flatcc_json_parser_struct_as_root@@Base+0x50c0>
   43c0c:	nop	{0}
   43c10:	mov	r3, #5
   43c14:	str	r3, [fp, #-8]
   43c18:	b	43a80 <flatcc_json_parser_struct_as_root@@Base+0x4f30>
   43c1c:	nop	{0}
   43c20:	b	43c30 <flatcc_json_parser_struct_as_root@@Base+0x50e0>
   43c24:	nop	{0}
   43c28:	b	43c30 <flatcc_json_parser_struct_as_root@@Base+0x50e0>
   43c2c:	nop	{0}
   43c30:	mov	r3, #1
   43c34:	str	r3, [fp, #-8]
   43c38:	b	43a80 <flatcc_json_parser_struct_as_root@@Base+0x4f30>
   43c3c:	mov	r0, r3
   43c40:	add	sp, fp, #0
   43c44:	pop	{fp}		; (ldr fp, [sp], #4)
   43c48:	bx	lr
   43c4c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   43c50:	andeq	r0, r1, r4, ror #10
   43c54:	andeq	r0, r1, r8, asr r4
   43c58:	andeq	r0, r1, ip, lsr r6
   43c5c:	andeq	r0, r1, r0, lsr r7
   43c60:	andeq	r0, r1, ip, ror #14
   43c64:	andeq	r0, r1, r9, asr #14
   43c68:	strdeq	r0, [r1], -r6
   43c6c:			; <UNDEFINED> instruction: 0x000106b2
   43c70:	andeq	r0, r1, sp, ror r6

00043c74 <flatcc_json_printer_error_string@@Base>:
   43c74:	push	{fp}		; (str fp, [sp, #-4]!)
   43c78:	add	fp, sp, #0
   43c7c:	sub	sp, sp, #12
   43c80:	str	r0, [fp, #-8]
   43c84:	ldr	r3, [fp, #-8]
   43c88:	cmp	r3, #3
   43c8c:	addls	pc, pc, r3, lsl #2
   43c90:	b	43cd4 <flatcc_json_printer_error_string@@Base+0x60>
   43c94:	b	43ca4 <flatcc_json_printer_error_string@@Base+0x30>
   43c98:	b	43cb0 <flatcc_json_printer_error_string@@Base+0x3c>
   43c9c:	b	43cbc <flatcc_json_printer_error_string@@Base+0x48>
   43ca0:	b	43cc8 <flatcc_json_printer_error_string@@Base+0x54>
   43ca4:	ldr	r3, [pc, #64]	; 43cec <flatcc_json_printer_error_string@@Base+0x78>
   43ca8:	add	r3, pc, r3
   43cac:	b	43cdc <flatcc_json_printer_error_string@@Base+0x68>
   43cb0:	ldr	r3, [pc, #56]	; 43cf0 <flatcc_json_printer_error_string@@Base+0x7c>
   43cb4:	add	r3, pc, r3
   43cb8:	b	43cdc <flatcc_json_printer_error_string@@Base+0x68>
   43cbc:	ldr	r3, [pc, #48]	; 43cf4 <flatcc_json_printer_error_string@@Base+0x80>
   43cc0:	add	r3, pc, r3
   43cc4:	b	43cdc <flatcc_json_printer_error_string@@Base+0x68>
   43cc8:	ldr	r3, [pc, #40]	; 43cf8 <flatcc_json_printer_error_string@@Base+0x84>
   43ccc:	add	r3, pc, r3
   43cd0:	b	43cdc <flatcc_json_printer_error_string@@Base+0x68>
   43cd4:	ldr	r3, [pc, #32]	; 43cfc <flatcc_json_printer_error_string@@Base+0x88>
   43cd8:	add	r3, pc, r3
   43cdc:	mov	r0, r3
   43ce0:	add	sp, fp, #0
   43ce4:	pop	{fp}		; (ldr fp, [sp], #4)
   43ce8:	bx	lr
   43cec:	andeq	pc, r0, r8, asr #24
   43cf0:	andeq	pc, r0, ip, lsr sp	; <UNPREDICTABLE>
   43cf4:	andeq	pc, r0, ip, lsr sp	; <UNPREDICTABLE>
   43cf8:	andeq	pc, r0, r0, asr #26
   43cfc:	andeq	pc, r0, r0, asr #26
   43d00:	str	fp, [sp, #-8]!
   43d04:	str	lr, [sp, #4]
   43d08:	add	fp, sp, #4
   43d0c:	sub	sp, sp, #8
   43d10:	str	r0, [fp, #-8]
   43d14:	ldr	r0, [fp, #-8]
   43d18:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   43d1c:	mov	r2, r0
   43d20:	ldr	r3, [fp, #-8]
   43d24:	add	r3, r3, r2
   43d28:	mov	r0, r3
   43d2c:	sub	sp, fp, #4
   43d30:	ldr	fp, [sp]
   43d34:	add	sp, sp, #4
   43d38:	pop	{pc}		; (ldr pc, [sp], #4)
   43d3c:	str	fp, [sp, #-8]!
   43d40:	str	lr, [sp, #4]
   43d44:	add	fp, sp, #4
   43d48:	sub	sp, sp, #8
   43d4c:	str	r0, [fp, #-8]
   43d50:	str	r1, [fp, #-12]
   43d54:	ldr	r2, [fp, #-8]
   43d58:	ldr	r3, [fp, #-12]
   43d5c:	add	r3, r2, r3
   43d60:	mov	r0, r3
   43d64:	bl	3f1dc <flatcc_json_parser_struct_as_root@@Base+0x68c>
   43d68:	mov	r3, r0
   43d6c:	mov	r0, r3
   43d70:	sub	sp, fp, #4
   43d74:	ldr	fp, [sp]
   43d78:	add	sp, sp, #4
   43d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   43d80:	str	fp, [sp, #-8]!
   43d84:	str	lr, [sp, #4]
   43d88:	add	fp, sp, #4
   43d8c:	sub	sp, sp, #16
   43d90:	str	r0, [fp, #-16]
   43d94:	str	r1, [fp, #-20]	; 0xffffffec
   43d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   43d9c:	add	r3, r3, #2
   43da0:	lsl	r3, r3, #1
   43da4:	str	r3, [fp, #-8]
   43da8:	ldr	r3, [fp, #-16]
   43dac:	ldr	r3, [r3, #8]
   43db0:	ldr	r2, [fp, #-8]
   43db4:	cmp	r2, r3
   43db8:	blt	43dc4 <flatcc_json_printer_error_string@@Base+0x150>
   43dbc:	mov	r3, #0
   43dc0:	b	43e08 <flatcc_json_printer_error_string@@Base+0x194>
   43dc4:	ldr	r3, [fp, #-16]
   43dc8:	ldr	r3, [r3, #4]
   43dcc:	ldr	r2, [fp, #-8]
   43dd0:	mov	r1, r2
   43dd4:	mov	r0, r3
   43dd8:	bl	43d3c <flatcc_json_printer_error_string@@Base+0xc8>
   43ddc:	mov	r3, r0
   43de0:	str	r3, [fp, #-8]
   43de4:	ldr	r3, [fp, #-8]
   43de8:	cmp	r3, #0
   43dec:	bne	43df8 <flatcc_json_printer_error_string@@Base+0x184>
   43df0:	mov	r3, #0
   43df4:	b	43e08 <flatcc_json_printer_error_string@@Base+0x194>
   43df8:	ldr	r3, [fp, #-16]
   43dfc:	ldr	r2, [r3]
   43e00:	ldr	r3, [fp, #-8]
   43e04:	add	r3, r2, r3
   43e08:	mov	r0, r3
   43e0c:	sub	sp, fp, #4
   43e10:	ldr	fp, [sp]
   43e14:	add	sp, sp, #4
   43e18:	pop	{pc}		; (ldr pc, [sp], #4)

00043e1c <flatcc_json_printer_fmt_float@@Base>:
   43e1c:	str	fp, [sp, #-8]!
   43e20:	str	lr, [sp, #4]
   43e24:	add	fp, sp, #4
   43e28:	sub	sp, sp, #8
   43e2c:	str	r0, [fp, #-8]
   43e30:	vstr	s0, [fp, #-12]
   43e34:	vldr	s15, [fp, #-12]
   43e38:	vcvt.f64.f32	d7, s15
   43e3c:	ldr	r0, [fp, #-8]
   43e40:	vmov.f64	d0, d7
   43e44:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   43e48:	mov	r3, r0
   43e4c:	mov	r0, r3
   43e50:	sub	sp, fp, #4
   43e54:	ldr	fp, [sp]
   43e58:	add	sp, sp, #4
   43e5c:	pop	{pc}		; (ldr pc, [sp], #4)

00043e60 <flatcc_json_printer_fmt_double@@Base>:
   43e60:	str	fp, [sp, #-8]!
   43e64:	str	lr, [sp, #4]
   43e68:	add	fp, sp, #4
   43e6c:	sub	sp, sp, #16
   43e70:	str	r0, [fp, #-8]
   43e74:	vstr	d0, [fp, #-20]	; 0xffffffec
   43e78:	ldr	r0, [fp, #-8]
   43e7c:	vldr	d0, [fp, #-20]	; 0xffffffec
   43e80:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   43e84:	mov	r3, r0
   43e88:	mov	r0, r3
   43e8c:	sub	sp, fp, #4
   43e90:	ldr	fp, [sp]
   43e94:	add	sp, sp, #4
   43e98:	pop	{pc}		; (ldr pc, [sp], #4)

00043e9c <flatcc_json_printer_fmt_bool@@Base>:
   43e9c:	str	fp, [sp, #-8]!
   43ea0:	str	lr, [sp, #4]
   43ea4:	add	fp, sp, #4
   43ea8:	sub	sp, sp, #8
   43eac:	str	r0, [fp, #-8]
   43eb0:	str	r1, [fp, #-12]
   43eb4:	ldr	r3, [fp, #-12]
   43eb8:	cmp	r3, #0
   43ebc:	beq	43ee0 <flatcc_json_printer_fmt_bool@@Base+0x44>
   43ec0:	mov	r2, #4
   43ec4:	ldr	r3, [pc, #68]	; 43f10 <flatcc_json_printer_fmt_bool@@Base+0x74>
   43ec8:	add	r3, pc, r3
   43ecc:	mov	r1, r3
   43ed0:	ldr	r0, [fp, #-8]
   43ed4:	bl	1451c <memcpy@plt>
   43ed8:	mov	r3, #4
   43edc:	b	43efc <flatcc_json_printer_fmt_bool@@Base+0x60>
   43ee0:	mov	r2, #5
   43ee4:	ldr	r3, [pc, #40]	; 43f14 <flatcc_json_printer_fmt_bool@@Base+0x78>
   43ee8:	add	r3, pc, r3
   43eec:	mov	r1, r3
   43ef0:	ldr	r0, [fp, #-8]
   43ef4:	bl	1451c <memcpy@plt>
   43ef8:	mov	r3, #5
   43efc:	mov	r0, r3
   43f00:	sub	sp, fp, #4
   43f04:	ldr	fp, [sp]
   43f08:	add	sp, sp, #4
   43f0c:	pop	{pc}		; (ldr pc, [sp], #4)
   43f10:	andeq	pc, r0, r8, asr fp	; <UNPREDICTABLE>
   43f14:	andeq	pc, r0, r0, asr #22
   43f18:	str	fp, [sp, #-8]!
   43f1c:	str	lr, [sp, #4]
   43f20:	add	fp, sp, #4
   43f24:	sub	sp, sp, #24
   43f28:	str	r0, [fp, #-16]
   43f2c:	str	r1, [fp, #-20]	; 0xffffffec
   43f30:	str	r2, [fp, #-24]	; 0xffffffe8
   43f34:	ldr	r3, [fp, #-16]
   43f38:	ldr	r2, [r3, #20]
   43f3c:	ldr	r3, [fp, #-16]
   43f40:	ldr	r3, [r3, #16]
   43f44:	cmp	r2, r3
   43f48:	bcc	43f60 <flatcc_json_printer_fmt_bool@@Base+0xc4>
   43f4c:	ldr	r3, [fp, #-16]
   43f50:	ldr	r3, [r3, #44]	; 0x2c
   43f54:	mov	r1, #0
   43f58:	ldr	r0, [fp, #-16]
   43f5c:	blx	r3
   43f60:	ldr	r3, [fp, #-16]
   43f64:	ldr	r2, [r3, #16]
   43f68:	ldr	r3, [fp, #-16]
   43f6c:	ldr	r3, [r3, #20]
   43f70:	sub	r3, r2, r3
   43f74:	str	r3, [fp, #-8]
   43f78:	b	43ff8 <flatcc_json_printer_fmt_bool@@Base+0x15c>
   43f7c:	ldr	r3, [fp, #-16]
   43f80:	ldr	r3, [r3, #20]
   43f84:	ldr	r2, [fp, #-8]
   43f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   43f8c:	mov	r0, r3
   43f90:	bl	1451c <memcpy@plt>
   43f94:	ldr	r3, [fp, #-16]
   43f98:	ldr	r2, [r3, #20]
   43f9c:	ldr	r3, [fp, #-8]
   43fa0:	add	r2, r2, r3
   43fa4:	ldr	r3, [fp, #-16]
   43fa8:	str	r2, [r3, #20]
   43fac:	ldr	r2, [fp, #-20]	; 0xffffffec
   43fb0:	ldr	r3, [fp, #-8]
   43fb4:	add	r3, r2, r3
   43fb8:	str	r3, [fp, #-20]	; 0xffffffec
   43fbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43fc0:	ldr	r3, [fp, #-8]
   43fc4:	sub	r3, r2, r3
   43fc8:	str	r3, [fp, #-24]	; 0xffffffe8
   43fcc:	ldr	r3, [fp, #-16]
   43fd0:	ldr	r3, [r3, #44]	; 0x2c
   43fd4:	mov	r1, #0
   43fd8:	ldr	r0, [fp, #-16]
   43fdc:	blx	r3
   43fe0:	ldr	r3, [fp, #-16]
   43fe4:	ldr	r2, [r3, #16]
   43fe8:	ldr	r3, [fp, #-16]
   43fec:	ldr	r3, [r3, #20]
   43ff0:	sub	r3, r2, r3
   43ff4:	str	r3, [fp, #-8]
   43ff8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43ffc:	ldr	r3, [fp, #-8]
   44000:	cmp	r2, r3
   44004:	bhi	43f7c <flatcc_json_printer_fmt_bool@@Base+0xe0>
   44008:	ldr	r3, [fp, #-16]
   4400c:	ldr	r3, [r3, #20]
   44010:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44014:	ldr	r1, [fp, #-20]	; 0xffffffec
   44018:	mov	r0, r3
   4401c:	bl	1451c <memcpy@plt>
   44020:	ldr	r3, [fp, #-16]
   44024:	ldr	r2, [r3, #20]
   44028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4402c:	add	r2, r2, r3
   44030:	ldr	r3, [fp, #-16]
   44034:	str	r2, [r3, #20]
   44038:	nop	{0}
   4403c:	sub	sp, fp, #4
   44040:	ldr	fp, [sp]
   44044:	add	sp, sp, #4
   44048:	pop	{pc}		; (ldr pc, [sp], #4)
   4404c:	str	fp, [sp, #-8]!
   44050:	str	lr, [sp, #4]
   44054:	add	fp, sp, #4
   44058:	sub	sp, sp, #16
   4405c:	str	r0, [fp, #-8]
   44060:	str	r1, [fp, #-12]
   44064:	str	r2, [fp, #-16]
   44068:	ldr	r3, [fp, #-8]
   4406c:	ldr	r2, [r3, #20]
   44070:	ldr	r3, [fp, #-16]
   44074:	add	r2, r2, r3
   44078:	ldr	r3, [fp, #-8]
   4407c:	ldr	r3, [r3, #16]
   44080:	cmp	r2, r3
   44084:	bcc	4409c <flatcc_json_printer_fmt_bool@@Base+0x200>
   44088:	ldr	r2, [fp, #-16]
   4408c:	ldr	r1, [fp, #-12]
   44090:	ldr	r0, [fp, #-8]
   44094:	bl	43f18 <flatcc_json_printer_fmt_bool@@Base+0x7c>
   44098:	b	440cc <flatcc_json_printer_fmt_bool@@Base+0x230>
   4409c:	ldr	r3, [fp, #-8]
   440a0:	ldr	r3, [r3, #20]
   440a4:	ldr	r2, [fp, #-16]
   440a8:	ldr	r1, [fp, #-12]
   440ac:	mov	r0, r3
   440b0:	bl	1451c <memcpy@plt>
   440b4:	ldr	r3, [fp, #-8]
   440b8:	ldr	r2, [r3, #20]
   440bc:	ldr	r3, [fp, #-16]
   440c0:	add	r2, r2, r3
   440c4:	ldr	r3, [fp, #-8]
   440c8:	str	r2, [r3, #20]
   440cc:	nop	{0}
   440d0:	sub	sp, fp, #4
   440d4:	ldr	fp, [sp]
   440d8:	add	sp, sp, #4
   440dc:	pop	{pc}		; (ldr pc, [sp], #4)
   440e0:	str	fp, [sp, #-8]!
   440e4:	str	lr, [sp, #4]
   440e8:	add	fp, sp, #4
   440ec:	sub	sp, sp, #32
   440f0:	str	r0, [fp, #-24]	; 0xffffffe8
   440f4:	str	r1, [fp, #-28]	; 0xffffffe4
   440f8:	str	r2, [fp, #-32]	; 0xffffffe0
   440fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44100:	str	r3, [fp, #-8]
   44104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44108:	ldr	r3, [r3, #20]
   4410c:	add	r1, r3, #1
   44110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44114:	str	r1, [r2, #20]
   44118:	mov	r2, #34	; 0x22
   4411c:	strb	r2, [r3]
   44120:	ldr	r3, [fp, #-8]
   44124:	ldrb	r3, [r3]
   44128:	strb	r3, [fp, #-9]
   4412c:	b	44148 <flatcc_json_printer_fmt_bool@@Base+0x2ac>
   44130:	ldr	r3, [fp, #-8]
   44134:	add	r3, r3, #1
   44138:	str	r3, [fp, #-8]
   4413c:	ldr	r3, [fp, #-8]
   44140:	ldrb	r3, [r3]
   44144:	strb	r3, [fp, #-9]
   44148:	ldrb	r3, [fp, #-9]
   4414c:	cmp	r3, #31
   44150:	bls	4416c <flatcc_json_printer_fmt_bool@@Base+0x2d0>
   44154:	ldrb	r3, [fp, #-9]
   44158:	cmp	r3, #34	; 0x22
   4415c:	beq	4416c <flatcc_json_printer_fmt_bool@@Base+0x2d0>
   44160:	ldrb	r3, [fp, #-9]
   44164:	cmp	r3, #92	; 0x5c
   44168:	bne	44130 <flatcc_json_printer_fmt_bool@@Base+0x294>
   4416c:	ldr	r2, [fp, #-8]
   44170:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44174:	sub	r3, r2, r3
   44178:	str	r3, [fp, #-16]
   4417c:	ldr	r2, [fp, #-16]
   44180:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   44188:	bl	4404c <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   4418c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   44190:	ldr	r3, [fp, #-16]
   44194:	sub	r3, r2, r3
   44198:	str	r3, [fp, #-32]	; 0xffffffe0
   4419c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   441a0:	cmp	r3, #0
   441a4:	beq	44418 <flatcc_json_printer_fmt_bool@@Base+0x57c>
   441a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   441ac:	ldr	r3, [fp, #-16]
   441b0:	add	r3, r2, r3
   441b4:	str	r3, [fp, #-28]	; 0xffffffe4
   441b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   441bc:	ldr	r3, [r3, #20]
   441c0:	add	r1, r3, #1
   441c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   441c8:	str	r1, [r2, #20]
   441cc:	mov	r2, #92	; 0x5c
   441d0:	strb	r2, [r3]
   441d4:	ldrb	r3, [fp, #-9]
   441d8:	cmp	r3, #12
   441dc:	beq	44280 <flatcc_json_printer_fmt_bool@@Base+0x3e4>
   441e0:	cmp	r3, #12
   441e4:	bgt	44204 <flatcc_json_printer_fmt_bool@@Base+0x368>
   441e8:	cmp	r3, #9
   441ec:	beq	44260 <flatcc_json_printer_fmt_bool@@Base+0x3c4>
   441f0:	cmp	r3, #10
   441f4:	beq	442c0 <flatcc_json_printer_fmt_bool@@Base+0x424>
   441f8:	cmp	r3, #8
   441fc:	beq	442e0 <flatcc_json_printer_fmt_bool@@Base+0x444>
   44200:	b	44300 <flatcc_json_printer_fmt_bool@@Base+0x464>
   44204:	cmp	r3, #34	; 0x22
   44208:	beq	44220 <flatcc_json_printer_fmt_bool@@Base+0x384>
   4420c:	cmp	r3, #92	; 0x5c
   44210:	beq	44240 <flatcc_json_printer_fmt_bool@@Base+0x3a4>
   44214:	cmp	r3, #13
   44218:	beq	442a0 <flatcc_json_printer_fmt_bool@@Base+0x404>
   4421c:	b	44300 <flatcc_json_printer_fmt_bool@@Base+0x464>
   44220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44224:	ldr	r3, [r3, #20]
   44228:	add	r1, r3, #1
   4422c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44230:	str	r1, [r2, #20]
   44234:	mov	r2, #34	; 0x22
   44238:	strb	r2, [r3]
   4423c:	b	443f0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   44240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44244:	ldr	r3, [r3, #20]
   44248:	add	r1, r3, #1
   4424c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44250:	str	r1, [r2, #20]
   44254:	mov	r2, #92	; 0x5c
   44258:	strb	r2, [r3]
   4425c:	b	443f0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   44260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44264:	ldr	r3, [r3, #20]
   44268:	add	r1, r3, #1
   4426c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44270:	str	r1, [r2, #20]
   44274:	mov	r2, #116	; 0x74
   44278:	strb	r2, [r3]
   4427c:	b	443f0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   44280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44284:	ldr	r3, [r3, #20]
   44288:	add	r1, r3, #1
   4428c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44290:	str	r1, [r2, #20]
   44294:	mov	r2, #102	; 0x66
   44298:	strb	r2, [r3]
   4429c:	b	443f0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   442a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   442a4:	ldr	r3, [r3, #20]
   442a8:	add	r1, r3, #1
   442ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   442b0:	str	r1, [r2, #20]
   442b4:	mov	r2, #114	; 0x72
   442b8:	strb	r2, [r3]
   442bc:	b	443f0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   442c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   442c4:	ldr	r3, [r3, #20]
   442c8:	add	r1, r3, #1
   442cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   442d0:	str	r1, [r2, #20]
   442d4:	mov	r2, #110	; 0x6e
   442d8:	strb	r2, [r3]
   442dc:	b	443f0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   442e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   442e4:	ldr	r3, [r3, #20]
   442e8:	add	r1, r3, #1
   442ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   442f0:	str	r1, [r2, #20]
   442f4:	mov	r2, #98	; 0x62
   442f8:	strb	r2, [r3]
   442fc:	b	443f0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   44300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44304:	ldr	r3, [r3, #20]
   44308:	add	r1, r3, #1
   4430c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44310:	str	r1, [r2, #20]
   44314:	mov	r2, #117	; 0x75
   44318:	strb	r2, [r3]
   4431c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44320:	ldr	r3, [r3, #20]
   44324:	add	r1, r3, #1
   44328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4432c:	str	r1, [r2, #20]
   44330:	mov	r2, #48	; 0x30
   44334:	strb	r2, [r3]
   44338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4433c:	ldr	r3, [r3, #20]
   44340:	add	r1, r3, #1
   44344:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44348:	str	r1, [r2, #20]
   4434c:	mov	r2, #48	; 0x30
   44350:	strb	r2, [r3]
   44354:	ldrb	r3, [fp, #-9]
   44358:	lsr	r3, r3, #4
   4435c:	strb	r3, [fp, #-17]	; 0xffffffef
   44360:	ldrb	r3, [fp, #-17]	; 0xffffffef
   44364:	cmp	r3, #9
   44368:	bhi	44374 <flatcc_json_printer_fmt_bool@@Base+0x4d8>
   4436c:	mov	r2, #48	; 0x30
   44370:	b	44378 <flatcc_json_printer_fmt_bool@@Base+0x4dc>
   44374:	mov	r2, #87	; 0x57
   44378:	ldrb	r3, [fp, #-17]	; 0xffffffef
   4437c:	add	r3, r2, r3
   44380:	strb	r3, [fp, #-17]	; 0xffffffef
   44384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44388:	ldr	r3, [r3, #20]
   4438c:	add	r1, r3, #1
   44390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44394:	str	r1, [r2, #20]
   44398:	ldrb	r2, [fp, #-17]	; 0xffffffef
   4439c:	strb	r2, [r3]
   443a0:	ldrb	r3, [fp, #-9]
   443a4:	and	r3, r3, #15
   443a8:	strb	r3, [fp, #-17]	; 0xffffffef
   443ac:	ldrb	r3, [fp, #-17]	; 0xffffffef
   443b0:	cmp	r3, #9
   443b4:	bhi	443c0 <flatcc_json_printer_fmt_bool@@Base+0x524>
   443b8:	mov	r2, #48	; 0x30
   443bc:	b	443c4 <flatcc_json_printer_fmt_bool@@Base+0x528>
   443c0:	mov	r2, #87	; 0x57
   443c4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   443c8:	add	r3, r2, r3
   443cc:	strb	r3, [fp, #-17]	; 0xffffffef
   443d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   443d4:	ldr	r3, [r3, #20]
   443d8:	add	r1, r3, #1
   443dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   443e0:	str	r1, [r2, #20]
   443e4:	ldrb	r2, [fp, #-17]	; 0xffffffef
   443e8:	strb	r2, [r3]
   443ec:	nop	{0}
   443f0:	ldr	r3, [fp, #-8]
   443f4:	add	r3, r3, #1
   443f8:	str	r3, [fp, #-8]
   443fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   44400:	sub	r3, r3, #1
   44404:	str	r3, [fp, #-32]	; 0xffffffe0
   44408:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4440c:	add	r3, r3, #1
   44410:	str	r3, [fp, #-28]	; 0xffffffe4
   44414:	b	44120 <flatcc_json_printer_fmt_bool@@Base+0x284>
   44418:	nop	{0}
   4441c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44420:	ldr	r3, [r3, #20]
   44424:	add	r1, r3, #1
   44428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4442c:	str	r1, [r2, #20]
   44430:	mov	r2, #34	; 0x22
   44434:	strb	r2, [r3]
   44438:	nop	{0}
   4443c:	sub	sp, fp, #4
   44440:	ldr	fp, [sp]
   44444:	add	sp, sp, #4
   44448:	pop	{pc}		; (ldr pc, [sp], #4)
   4444c:	str	fp, [sp, #-8]!
   44450:	str	lr, [sp, #4]
   44454:	add	fp, sp, #4
   44458:	sub	sp, sp, #56	; 0x38
   4445c:	str	r0, [fp, #-40]	; 0xffffffd8
   44460:	str	r1, [fp, #-44]	; 0xffffffd4
   44464:	str	r2, [fp, #-48]	; 0xffffffd0
   44468:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4446c:	bic	r3, r3, #128	; 0x80
   44470:	str	r3, [fp, #-16]
   44474:	ldr	r0, [fp, #-44]	; 0xffffffd4
   44478:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4447c:	mov	r3, r0
   44480:	str	r3, [fp, #-28]	; 0xffffffe4
   44484:	ldr	r3, [fp, #-44]	; 0xffffffd4
   44488:	add	r3, r3, #4
   4448c:	str	r3, [fp, #-12]
   44490:	ldr	r3, [fp, #-40]	; 0xffffffd8
   44494:	ldr	r3, [r3, #20]
   44498:	add	r1, r3, #1
   4449c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   444a0:	str	r1, [r2, #20]
   444a4:	mov	r2, #34	; 0x22
   444a8:	strb	r2, [r3]
   444ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   444b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   444b4:	mov	r0, r3
   444b8:	bl	43188 <flatcc_json_parser_struct_as_root@@Base+0x4638>
   444bc:	str	r0, [fp, #-8]
   444c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   444c4:	ldr	r2, [r3, #20]
   444c8:	ldr	r3, [fp, #-8]
   444cc:	add	r2, r2, r3
   444d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   444d4:	ldr	r3, [r3, #16]
   444d8:	cmp	r2, r3
   444dc:	bcc	445f4 <flatcc_json_printer_fmt_bool@@Base+0x758>
   444e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   444e4:	ldr	r3, [r3, #44]	; 0x2c
   444e8:	mov	r1, #0
   444ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   444f0:	blx	r3
   444f4:	b	445f4 <flatcc_json_printer_fmt_bool@@Base+0x758>
   444f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   444fc:	ldr	r2, [r3, #16]
   44500:	ldr	r3, [fp, #-40]	; 0xffffffd8
   44504:	ldr	r3, [r3, #20]
   44508:	sub	r3, r2, r3
   4450c:	bic	r3, r3, #3
   44510:	str	r3, [fp, #-20]	; 0xffffffec
   44514:	ldr	r2, [fp, #-20]	; 0xffffffec
   44518:	mov	r3, r2
   4451c:	lsl	r3, r3, #1
   44520:	add	r3, r3, r2
   44524:	lsr	r3, r3, #2
   44528:	str	r3, [fp, #-24]	; 0xffffffe8
   4452c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44530:	cmp	r3, #0
   44534:	bne	44558 <flatcc_json_printer_fmt_bool@@Base+0x6bc>
   44538:	ldr	r3, [pc, #320]	; 44680 <flatcc_json_printer_fmt_bool@@Base+0x7e4>
   4453c:	add	r3, pc, r3
   44540:	movw	r2, #277	; 0x115
   44544:	ldr	r1, [pc, #312]	; 44684 <flatcc_json_printer_fmt_bool@@Base+0x7e8>
   44548:	add	r1, pc, r1
   4454c:	ldr	r0, [pc, #308]	; 44688 <flatcc_json_printer_fmt_bool@@Base+0x7ec>
   44550:	add	r0, pc, r0
   44554:	bl	145e8 <__assert_fail@plt>
   44558:	ldr	r2, [fp, #-20]	; 0xffffffec
   4455c:	mov	r3, r2
   44560:	lsl	r3, r3, #1
   44564:	add	r3, r3, r2
   44568:	lsr	r3, r3, #2
   4456c:	str	r3, [fp, #-32]	; 0xffffffe0
   44570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   44574:	ldr	r0, [r3, #20]
   44578:	sub	r2, fp, #32
   4457c:	ldr	r3, [fp, #-16]
   44580:	str	r3, [sp]
   44584:	mov	r3, r2
   44588:	mov	r2, #0
   4458c:	ldr	r1, [fp, #-12]
   44590:	bl	432d0 <flatcc_json_parser_struct_as_root@@Base+0x4780>
   44594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   44598:	ldr	r2, [r3, #20]
   4459c:	ldr	r3, [fp, #-20]	; 0xffffffec
   445a0:	add	r2, r2, r3
   445a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   445a8:	str	r2, [r3, #20]
   445ac:	ldr	r2, [fp, #-12]
   445b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   445b4:	add	r3, r2, r3
   445b8:	str	r3, [fp, #-12]
   445bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   445c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   445c4:	sub	r3, r2, r3
   445c8:	str	r3, [fp, #-28]	; 0xffffffe4
   445cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   445d0:	ldr	r3, [r3, #44]	; 0x2c
   445d4:	mov	r1, #0
   445d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   445dc:	blx	r3
   445e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   445e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   445e8:	mov	r0, r3
   445ec:	bl	43188 <flatcc_json_parser_struct_as_root@@Base+0x4638>
   445f0:	str	r0, [fp, #-8]
   445f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   445f8:	ldr	r2, [r3, #20]
   445fc:	ldr	r3, [fp, #-8]
   44600:	add	r2, r2, r3
   44604:	ldr	r3, [fp, #-40]	; 0xffffffd8
   44608:	ldr	r3, [r3, #16]
   4460c:	cmp	r2, r3
   44610:	bhi	444f8 <flatcc_json_printer_fmt_bool@@Base+0x65c>
   44614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   44618:	ldr	r0, [r3, #20]
   4461c:	sub	r2, fp, #28
   44620:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44624:	str	r3, [sp]
   44628:	mov	r3, r2
   4462c:	mov	r2, #0
   44630:	ldr	r1, [fp, #-12]
   44634:	bl	432d0 <flatcc_json_parser_struct_as_root@@Base+0x4780>
   44638:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4463c:	ldr	r2, [r3, #20]
   44640:	ldr	r3, [fp, #-8]
   44644:	add	r2, r2, r3
   44648:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4464c:	str	r2, [r3, #20]
   44650:	ldr	r3, [fp, #-40]	; 0xffffffd8
   44654:	ldr	r3, [r3, #20]
   44658:	add	r1, r3, #1
   4465c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   44660:	str	r1, [r2, #20]
   44664:	mov	r2, #34	; 0x22
   44668:	strb	r2, [r3]
   4466c:	nop	{0}
   44670:	sub	sp, fp, #4
   44674:	ldr	fp, [sp]
   44678:	add	sp, sp, #4
   4467c:	pop	{pc}		; (ldr pc, [sp], #4)
   44680:	andeq	pc, r0, r4, ror sl	; <UNPREDICTABLE>
   44684:	andeq	pc, r0, r8, ror #9
   44688:	andeq	pc, r0, r4, asr #10
   4468c:	str	fp, [sp, #-8]!
   44690:	str	lr, [sp, #4]
   44694:	add	fp, sp, #4
   44698:	sub	sp, sp, #16
   4469c:	str	r0, [fp, #-16]
   446a0:	str	r1, [fp, #-20]	; 0xffffffec
   446a4:	ldr	r3, [fp, #-16]
   446a8:	ldr	r2, [r3, #20]
   446ac:	ldr	r3, [fp, #-16]
   446b0:	ldr	r3, [r3, #16]
   446b4:	cmp	r2, r3
   446b8:	bcc	446d0 <flatcc_json_printer_fmt_bool@@Base+0x834>
   446bc:	ldr	r3, [fp, #-16]
   446c0:	ldr	r3, [r3, #44]	; 0x2c
   446c4:	mov	r1, #0
   446c8:	ldr	r0, [fp, #-16]
   446cc:	blx	r3
   446d0:	ldr	r3, [fp, #-16]
   446d4:	ldr	r2, [r3, #16]
   446d8:	ldr	r3, [fp, #-16]
   446dc:	ldr	r3, [r3, #20]
   446e0:	sub	r3, r2, r3
   446e4:	str	r3, [fp, #-8]
   446e8:	b	44758 <flatcc_json_printer_fmt_bool@@Base+0x8bc>
   446ec:	ldr	r3, [fp, #-16]
   446f0:	ldr	r3, [r3, #20]
   446f4:	ldr	r2, [fp, #-8]
   446f8:	mov	r1, #32
   446fc:	mov	r0, r3
   44700:	bl	14594 <memset@plt>
   44704:	ldr	r3, [fp, #-16]
   44708:	ldr	r2, [r3, #20]
   4470c:	ldr	r3, [fp, #-8]
   44710:	add	r2, r2, r3
   44714:	ldr	r3, [fp, #-16]
   44718:	str	r2, [r3, #20]
   4471c:	ldr	r2, [fp, #-20]	; 0xffffffec
   44720:	ldr	r3, [fp, #-8]
   44724:	sub	r3, r2, r3
   44728:	str	r3, [fp, #-20]	; 0xffffffec
   4472c:	ldr	r3, [fp, #-16]
   44730:	ldr	r3, [r3, #44]	; 0x2c
   44734:	mov	r1, #0
   44738:	ldr	r0, [fp, #-16]
   4473c:	blx	r3
   44740:	ldr	r3, [fp, #-16]
   44744:	ldr	r2, [r3, #16]
   44748:	ldr	r3, [fp, #-16]
   4474c:	ldr	r3, [r3, #20]
   44750:	sub	r3, r2, r3
   44754:	str	r3, [fp, #-8]
   44758:	ldr	r2, [fp, #-20]	; 0xffffffec
   4475c:	ldr	r3, [fp, #-8]
   44760:	cmp	r2, r3
   44764:	bhi	446ec <flatcc_json_printer_fmt_bool@@Base+0x850>
   44768:	ldr	r3, [fp, #-16]
   4476c:	ldr	r3, [r3, #20]
   44770:	ldr	r2, [fp, #-20]	; 0xffffffec
   44774:	mov	r1, #32
   44778:	mov	r0, r3
   4477c:	bl	14594 <memset@plt>
   44780:	ldr	r3, [fp, #-16]
   44784:	ldr	r2, [r3, #20]
   44788:	ldr	r3, [fp, #-20]	; 0xffffffec
   4478c:	add	r2, r2, r3
   44790:	ldr	r3, [fp, #-16]
   44794:	str	r2, [r3, #20]
   44798:	nop	{0}
   4479c:	sub	sp, fp, #4
   447a0:	ldr	fp, [sp]
   447a4:	add	sp, sp, #4
   447a8:	pop	{pc}		; (ldr pc, [sp], #4)
   447ac:	str	fp, [sp, #-8]!
   447b0:	str	lr, [sp, #4]
   447b4:	add	fp, sp, #4
   447b8:	sub	sp, sp, #16
   447bc:	str	r0, [fp, #-16]
   447c0:	ldr	r3, [fp, #-16]
   447c4:	ldr	r3, [r3, #32]
   447c8:	ldr	r2, [fp, #-16]
   447cc:	ldrb	r2, [r2, #25]
   447d0:	mul	r3, r2, r3
   447d4:	str	r3, [fp, #-8]
   447d8:	ldr	r3, [fp, #-16]
   447dc:	ldr	r2, [r3, #20]
   447e0:	ldr	r3, [fp, #-8]
   447e4:	add	r2, r2, r3
   447e8:	ldr	r3, [fp, #-16]
   447ec:	ldr	r3, [r3, #16]
   447f0:	cmp	r2, r3
   447f4:	bls	44808 <flatcc_json_printer_fmt_bool@@Base+0x96c>
   447f8:	ldr	r1, [fp, #-8]
   447fc:	ldr	r0, [fp, #-16]
   44800:	bl	4468c <flatcc_json_printer_fmt_bool@@Base+0x7f0>
   44804:	b	44838 <flatcc_json_printer_fmt_bool@@Base+0x99c>
   44808:	ldr	r3, [fp, #-16]
   4480c:	ldr	r3, [r3, #20]
   44810:	ldr	r2, [fp, #-8]
   44814:	mov	r1, #32
   44818:	mov	r0, r3
   4481c:	bl	14594 <memset@plt>
   44820:	ldr	r3, [fp, #-16]
   44824:	ldr	r2, [r3, #20]
   44828:	ldr	r3, [fp, #-8]
   4482c:	add	r2, r2, r3
   44830:	ldr	r3, [fp, #-16]
   44834:	str	r2, [r3, #20]
   44838:	nop	{0}
   4483c:	sub	sp, fp, #4
   44840:	ldr	fp, [sp]
   44844:	add	sp, sp, #4
   44848:	pop	{pc}		; (ldr pc, [sp], #4)

0004484c <flatcc_json_printer_string@@Base>:
   4484c:	str	fp, [sp, #-8]!
   44850:	str	lr, [sp, #4]
   44854:	add	fp, sp, #4
   44858:	sub	sp, sp, #16
   4485c:	str	r0, [fp, #-8]
   44860:	str	r1, [fp, #-12]
   44864:	str	r2, [fp, #-16]
   44868:	ldr	r3, [fp, #-16]
   4486c:	mov	r2, r3
   44870:	ldr	r1, [fp, #-12]
   44874:	ldr	r0, [fp, #-8]
   44878:	bl	440e0 <flatcc_json_printer_fmt_bool@@Base+0x244>
   4487c:	nop	{0}
   44880:	sub	sp, fp, #4
   44884:	ldr	fp, [sp]
   44888:	add	sp, sp, #4
   4488c:	pop	{pc}		; (ldr pc, [sp], #4)

00044890 <flatcc_json_printer_write@@Base>:
   44890:	str	fp, [sp, #-8]!
   44894:	str	lr, [sp, #4]
   44898:	add	fp, sp, #4
   4489c:	sub	sp, sp, #16
   448a0:	str	r0, [fp, #-8]
   448a4:	str	r1, [fp, #-12]
   448a8:	str	r2, [fp, #-16]
   448ac:	ldr	r3, [fp, #-16]
   448b0:	mov	r2, r3
   448b4:	ldr	r1, [fp, #-12]
   448b8:	ldr	r0, [fp, #-8]
   448bc:	bl	4404c <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   448c0:	nop	{0}
   448c4:	sub	sp, fp, #4
   448c8:	ldr	fp, [sp]
   448cc:	add	sp, sp, #4
   448d0:	pop	{pc}		; (ldr pc, [sp], #4)

000448d4 <flatcc_json_printer_nl@@Base>:
   448d4:	str	fp, [sp, #-8]!
   448d8:	str	lr, [sp, #4]
   448dc:	add	fp, sp, #4
   448e0:	sub	sp, sp, #8
   448e4:	str	r0, [fp, #-8]
   448e8:	ldr	r3, [fp, #-8]
   448ec:	ldr	r3, [r3, #20]
   448f0:	add	r1, r3, #1
   448f4:	ldr	r2, [fp, #-8]
   448f8:	str	r1, [r2, #20]
   448fc:	mov	r2, #10
   44900:	strb	r2, [r3]
   44904:	ldr	r0, [fp, #-8]
   44908:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4490c:	nop	{0}
   44910:	sub	sp, fp, #4
   44914:	ldr	fp, [sp]
   44918:	add	sp, sp, #4
   4491c:	pop	{pc}		; (ldr pc, [sp], #4)

00044920 <flatcc_json_printer_char@@Base>:
   44920:	push	{fp}		; (str fp, [sp, #-4]!)
   44924:	add	fp, sp, #0
   44928:	sub	sp, sp, #12
   4492c:	str	r0, [fp, #-8]
   44930:	mov	r3, r1
   44934:	strb	r3, [fp, #-9]
   44938:	ldr	r3, [fp, #-8]
   4493c:	ldr	r3, [r3, #20]
   44940:	add	r1, r3, #1
   44944:	ldr	r2, [fp, #-8]
   44948:	str	r1, [r2, #20]
   4494c:	ldrb	r2, [fp, #-9]
   44950:	strb	r2, [r3]
   44954:	nop	{0}
   44958:	add	sp, fp, #0
   4495c:	pop	{fp}		; (ldr fp, [sp], #4)
   44960:	bx	lr

00044964 <flatcc_json_printer_indent@@Base>:
   44964:	str	fp, [sp, #-8]!
   44968:	str	lr, [sp, #4]
   4496c:	add	fp, sp, #4
   44970:	sub	sp, sp, #8
   44974:	str	r0, [fp, #-8]
   44978:	ldr	r0, [fp, #-8]
   4497c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   44980:	nop	{0}
   44984:	sub	sp, fp, #4
   44988:	ldr	fp, [sp]
   4498c:	add	sp, sp, #4
   44990:	pop	{pc}		; (ldr pc, [sp], #4)

00044994 <flatcc_json_printer_add_level@@Base>:
   44994:	push	{fp}		; (str fp, [sp, #-4]!)
   44998:	add	fp, sp, #0
   4499c:	sub	sp, sp, #12
   449a0:	str	r0, [fp, #-8]
   449a4:	str	r1, [fp, #-12]
   449a8:	ldr	r3, [fp, #-8]
   449ac:	ldr	r2, [r3, #32]
   449b0:	ldr	r3, [fp, #-12]
   449b4:	add	r2, r2, r3
   449b8:	ldr	r3, [fp, #-8]
   449bc:	str	r2, [r3, #32]
   449c0:	nop	{0}
   449c4:	add	sp, fp, #0
   449c8:	pop	{fp}		; (ldr fp, [sp], #4)
   449cc:	bx	lr

000449d0 <flatcc_json_printer_get_level@@Base>:
   449d0:	push	{fp}		; (str fp, [sp, #-4]!)
   449d4:	add	fp, sp, #0
   449d8:	sub	sp, sp, #12
   449dc:	str	r0, [fp, #-8]
   449e0:	ldr	r3, [fp, #-8]
   449e4:	ldr	r3, [r3, #32]
   449e8:	mov	r0, r3
   449ec:	add	sp, fp, #0
   449f0:	pop	{fp}		; (ldr fp, [sp], #4)
   449f4:	bx	lr
   449f8:	str	fp, [sp, #-8]!
   449fc:	str	lr, [sp, #4]
   44a00:	add	fp, sp, #4
   44a04:	sub	sp, sp, #16
   44a08:	str	r0, [fp, #-8]
   44a0c:	str	r1, [fp, #-12]
   44a10:	str	r2, [fp, #-16]
   44a14:	ldr	r3, [fp, #-8]
   44a18:	ldr	r3, [r3, #20]
   44a1c:	mov	r2, #34	; 0x22
   44a20:	strb	r2, [r3]
   44a24:	ldr	r3, [fp, #-8]
   44a28:	ldr	r3, [r3, #20]
   44a2c:	ldr	r2, [fp, #-8]
   44a30:	ldrb	r2, [r2, #26]
   44a34:	cmp	r2, #0
   44a38:	moveq	r2, #1
   44a3c:	movne	r2, #0
   44a40:	uxtb	r2, r2
   44a44:	add	r2, r3, r2
   44a48:	ldr	r3, [fp, #-8]
   44a4c:	str	r2, [r3, #20]
   44a50:	ldr	r3, [fp, #-8]
   44a54:	ldr	r2, [r3, #20]
   44a58:	ldr	r3, [fp, #-16]
   44a5c:	add	r2, r2, r3
   44a60:	ldr	r3, [fp, #-8]
   44a64:	ldr	r3, [r3, #16]
   44a68:	cmp	r2, r3
   44a6c:	bcs	44aa4 <flatcc_json_printer_get_level@@Base+0xd4>
   44a70:	ldr	r3, [fp, #-8]
   44a74:	ldr	r3, [r3, #20]
   44a78:	ldr	r2, [fp, #-16]
   44a7c:	ldr	r1, [fp, #-12]
   44a80:	mov	r0, r3
   44a84:	bl	1451c <memcpy@plt>
   44a88:	ldr	r3, [fp, #-8]
   44a8c:	ldr	r2, [r3, #20]
   44a90:	ldr	r3, [fp, #-16]
   44a94:	add	r2, r2, r3
   44a98:	ldr	r3, [fp, #-8]
   44a9c:	str	r2, [r3, #20]
   44aa0:	b	44ab4 <flatcc_json_printer_get_level@@Base+0xe4>
   44aa4:	ldr	r2, [fp, #-16]
   44aa8:	ldr	r1, [fp, #-12]
   44aac:	ldr	r0, [fp, #-8]
   44ab0:	bl	4404c <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   44ab4:	ldr	r3, [fp, #-8]
   44ab8:	ldr	r3, [r3, #20]
   44abc:	mov	r2, #34	; 0x22
   44ac0:	strb	r2, [r3]
   44ac4:	ldr	r3, [fp, #-8]
   44ac8:	ldr	r3, [r3, #20]
   44acc:	ldr	r2, [fp, #-8]
   44ad0:	ldrb	r2, [r2, #26]
   44ad4:	cmp	r2, #0
   44ad8:	moveq	r2, #1
   44adc:	movne	r2, #0
   44ae0:	uxtb	r2, r2
   44ae4:	add	r2, r3, r2
   44ae8:	ldr	r3, [fp, #-8]
   44aec:	str	r2, [r3, #20]
   44af0:	nop	{0}
   44af4:	sub	sp, fp, #4
   44af8:	ldr	fp, [sp]
   44afc:	add	sp, sp, #4
   44b00:	pop	{pc}		; (ldr pc, [sp], #4)
   44b04:	str	fp, [sp, #-8]!
   44b08:	str	lr, [sp, #4]
   44b0c:	add	fp, sp, #4
   44b10:	sub	sp, sp, #16
   44b14:	str	r0, [fp, #-8]
   44b18:	str	r1, [fp, #-12]
   44b1c:	str	r2, [fp, #-16]
   44b20:	ldr	r3, [fp, #-8]
   44b24:	ldrb	r3, [r3, #25]
   44b28:	cmp	r3, #0
   44b2c:	beq	44b58 <flatcc_json_printer_get_level@@Base+0x188>
   44b30:	ldr	r3, [fp, #-8]
   44b34:	ldr	r3, [r3, #20]
   44b38:	add	r1, r3, #1
   44b3c:	ldr	r2, [fp, #-8]
   44b40:	str	r1, [r2, #20]
   44b44:	mov	r2, #10
   44b48:	strb	r2, [r3]
   44b4c:	ldr	r0, [fp, #-8]
   44b50:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   44b54:	b	44b60 <flatcc_json_printer_get_level@@Base+0x190>
   44b58:	ldr	r0, [fp, #-8]
   44b5c:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   44b60:	ldr	r2, [fp, #-16]
   44b64:	ldr	r1, [fp, #-12]
   44b68:	ldr	r0, [fp, #-8]
   44b6c:	bl	449f8 <flatcc_json_printer_get_level@@Base+0x28>
   44b70:	ldr	r3, [fp, #-8]
   44b74:	ldr	r3, [r3, #20]
   44b78:	add	r1, r3, #1
   44b7c:	ldr	r2, [fp, #-8]
   44b80:	str	r1, [r2, #20]
   44b84:	mov	r2, #58	; 0x3a
   44b88:	strb	r2, [r3]
   44b8c:	ldr	r3, [fp, #-8]
   44b90:	ldr	r3, [r3, #20]
   44b94:	mov	r2, #32
   44b98:	strb	r2, [r3]
   44b9c:	ldr	r3, [fp, #-8]
   44ba0:	ldr	r3, [r3, #20]
   44ba4:	ldr	r2, [fp, #-8]
   44ba8:	ldrb	r2, [r2, #25]
   44bac:	cmp	r2, #0
   44bb0:	movne	r2, #1
   44bb4:	moveq	r2, #0
   44bb8:	uxtb	r2, r2
   44bbc:	add	r2, r3, r2
   44bc0:	ldr	r3, [fp, #-8]
   44bc4:	str	r2, [r3, #20]
   44bc8:	nop	{0}
   44bcc:	sub	sp, fp, #4
   44bd0:	ldr	fp, [sp]
   44bd4:	add	sp, sp, #4
   44bd8:	pop	{pc}		; (ldr pc, [sp], #4)

00044bdc <flatcc_json_printer_uint8@@Base>:
   44bdc:	str	fp, [sp, #-8]!
   44be0:	str	lr, [sp, #4]
   44be4:	add	fp, sp, #4
   44be8:	sub	sp, sp, #8
   44bec:	str	r0, [fp, #-8]
   44bf0:	mov	r3, r1
   44bf4:	strb	r3, [fp, #-9]
   44bf8:	ldr	r3, [fp, #-8]
   44bfc:	ldr	r2, [r3, #20]
   44c00:	ldrb	r3, [fp, #-9]
   44c04:	mov	r1, r2
   44c08:	mov	r0, r3
   44c0c:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   44c10:	mov	r2, r0
   44c14:	ldr	r3, [fp, #-8]
   44c18:	ldr	r3, [r3, #20]
   44c1c:	add	r2, r3, r2
   44c20:	ldr	r3, [fp, #-8]
   44c24:	str	r2, [r3, #20]
   44c28:	nop	{0}
   44c2c:	sub	sp, fp, #4
   44c30:	ldr	fp, [sp]
   44c34:	add	sp, sp, #4
   44c38:	pop	{pc}		; (ldr pc, [sp], #4)

00044c3c <flatcc_json_printer_uint16@@Base>:
   44c3c:	str	fp, [sp, #-8]!
   44c40:	str	lr, [sp, #4]
   44c44:	add	fp, sp, #4
   44c48:	sub	sp, sp, #8
   44c4c:	str	r0, [fp, #-8]
   44c50:	mov	r3, r1
   44c54:	strh	r3, [fp, #-10]
   44c58:	ldr	r3, [fp, #-8]
   44c5c:	ldr	r2, [r3, #20]
   44c60:	ldrh	r3, [fp, #-10]
   44c64:	mov	r1, r2
   44c68:	mov	r0, r3
   44c6c:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   44c70:	mov	r2, r0
   44c74:	ldr	r3, [fp, #-8]
   44c78:	ldr	r3, [r3, #20]
   44c7c:	add	r2, r3, r2
   44c80:	ldr	r3, [fp, #-8]
   44c84:	str	r2, [r3, #20]
   44c88:	nop	{0}
   44c8c:	sub	sp, fp, #4
   44c90:	ldr	fp, [sp]
   44c94:	add	sp, sp, #4
   44c98:	pop	{pc}		; (ldr pc, [sp], #4)

00044c9c <flatcc_json_printer_uint32@@Base>:
   44c9c:	str	fp, [sp, #-8]!
   44ca0:	str	lr, [sp, #4]
   44ca4:	add	fp, sp, #4
   44ca8:	sub	sp, sp, #8
   44cac:	str	r0, [fp, #-8]
   44cb0:	str	r1, [fp, #-12]
   44cb4:	ldr	r3, [fp, #-8]
   44cb8:	ldr	r3, [r3, #20]
   44cbc:	mov	r1, r3
   44cc0:	ldr	r0, [fp, #-12]
   44cc4:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   44cc8:	mov	r2, r0
   44ccc:	ldr	r3, [fp, #-8]
   44cd0:	ldr	r3, [r3, #20]
   44cd4:	add	r2, r3, r2
   44cd8:	ldr	r3, [fp, #-8]
   44cdc:	str	r2, [r3, #20]
   44ce0:	nop	{0}
   44ce4:	sub	sp, fp, #4
   44ce8:	ldr	fp, [sp]
   44cec:	add	sp, sp, #4
   44cf0:	pop	{pc}		; (ldr pc, [sp], #4)

00044cf4 <flatcc_json_printer_uint64@@Base>:
   44cf4:	str	fp, [sp, #-8]!
   44cf8:	str	lr, [sp, #4]
   44cfc:	add	fp, sp, #4
   44d00:	sub	sp, sp, #16
   44d04:	str	r0, [fp, #-8]
   44d08:	strd	r2, [fp, #-20]	; 0xffffffec
   44d0c:	ldr	r3, [fp, #-8]
   44d10:	ldr	r3, [r3, #20]
   44d14:	mov	r2, r3
   44d18:	ldrd	r0, [fp, #-20]	; 0xffffffec
   44d1c:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   44d20:	mov	r2, r0
   44d24:	ldr	r3, [fp, #-8]
   44d28:	ldr	r3, [r3, #20]
   44d2c:	add	r2, r3, r2
   44d30:	ldr	r3, [fp, #-8]
   44d34:	str	r2, [r3, #20]
   44d38:	nop	{0}
   44d3c:	sub	sp, fp, #4
   44d40:	ldr	fp, [sp]
   44d44:	add	sp, sp, #4
   44d48:	pop	{pc}		; (ldr pc, [sp], #4)

00044d4c <flatcc_json_printer_int8@@Base>:
   44d4c:	str	fp, [sp, #-8]!
   44d50:	str	lr, [sp, #4]
   44d54:	add	fp, sp, #4
   44d58:	sub	sp, sp, #8
   44d5c:	str	r0, [fp, #-8]
   44d60:	mov	r3, r1
   44d64:	strb	r3, [fp, #-9]
   44d68:	ldr	r3, [fp, #-8]
   44d6c:	ldr	r2, [r3, #20]
   44d70:	ldrsb	r3, [fp, #-9]
   44d74:	mov	r1, r2
   44d78:	mov	r0, r3
   44d7c:	bl	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x2164>
   44d80:	mov	r2, r0
   44d84:	ldr	r3, [fp, #-8]
   44d88:	ldr	r3, [r3, #20]
   44d8c:	add	r2, r3, r2
   44d90:	ldr	r3, [fp, #-8]
   44d94:	str	r2, [r3, #20]
   44d98:	nop	{0}
   44d9c:	sub	sp, fp, #4
   44da0:	ldr	fp, [sp]
   44da4:	add	sp, sp, #4
   44da8:	pop	{pc}		; (ldr pc, [sp], #4)

00044dac <flatcc_json_printer_int16@@Base>:
   44dac:	str	fp, [sp, #-8]!
   44db0:	str	lr, [sp, #4]
   44db4:	add	fp, sp, #4
   44db8:	sub	sp, sp, #8
   44dbc:	str	r0, [fp, #-8]
   44dc0:	mov	r3, r1
   44dc4:	strh	r3, [fp, #-10]
   44dc8:	ldr	r3, [fp, #-8]
   44dcc:	ldr	r2, [r3, #20]
   44dd0:	ldrsh	r3, [fp, #-10]
   44dd4:	mov	r1, r2
   44dd8:	mov	r0, r3
   44ddc:	bl	40d40 <flatcc_json_parser_struct_as_root@@Base+0x21f0>
   44de0:	mov	r2, r0
   44de4:	ldr	r3, [fp, #-8]
   44de8:	ldr	r3, [r3, #20]
   44dec:	add	r2, r3, r2
   44df0:	ldr	r3, [fp, #-8]
   44df4:	str	r2, [r3, #20]
   44df8:	nop	{0}
   44dfc:	sub	sp, fp, #4
   44e00:	ldr	fp, [sp]
   44e04:	add	sp, sp, #4
   44e08:	pop	{pc}		; (ldr pc, [sp], #4)

00044e0c <flatcc_json_printer_int32@@Base>:
   44e0c:	str	fp, [sp, #-8]!
   44e10:	str	lr, [sp, #4]
   44e14:	add	fp, sp, #4
   44e18:	sub	sp, sp, #8
   44e1c:	str	r0, [fp, #-8]
   44e20:	str	r1, [fp, #-12]
   44e24:	ldr	r3, [fp, #-8]
   44e28:	ldr	r3, [r3, #20]
   44e2c:	mov	r1, r3
   44e30:	ldr	r0, [fp, #-12]
   44e34:	bl	40dcc <flatcc_json_parser_struct_as_root@@Base+0x227c>
   44e38:	mov	r2, r0
   44e3c:	ldr	r3, [fp, #-8]
   44e40:	ldr	r3, [r3, #20]
   44e44:	add	r2, r3, r2
   44e48:	ldr	r3, [fp, #-8]
   44e4c:	str	r2, [r3, #20]
   44e50:	nop	{0}
   44e54:	sub	sp, fp, #4
   44e58:	ldr	fp, [sp]
   44e5c:	add	sp, sp, #4
   44e60:	pop	{pc}		; (ldr pc, [sp], #4)

00044e64 <flatcc_json_printer_int64@@Base>:
   44e64:	str	fp, [sp, #-8]!
   44e68:	str	lr, [sp, #4]
   44e6c:	add	fp, sp, #4
   44e70:	sub	sp, sp, #16
   44e74:	str	r0, [fp, #-8]
   44e78:	strd	r2, [fp, #-20]	; 0xffffffec
   44e7c:	ldr	r3, [fp, #-8]
   44e80:	ldr	r3, [r3, #20]
   44e84:	mov	r2, r3
   44e88:	ldrd	r0, [fp, #-20]	; 0xffffffec
   44e8c:	bl	40e50 <flatcc_json_parser_struct_as_root@@Base+0x2300>
   44e90:	mov	r2, r0
   44e94:	ldr	r3, [fp, #-8]
   44e98:	ldr	r3, [r3, #20]
   44e9c:	add	r2, r3, r2
   44ea0:	ldr	r3, [fp, #-8]
   44ea4:	str	r2, [r3, #20]
   44ea8:	nop	{0}
   44eac:	sub	sp, fp, #4
   44eb0:	ldr	fp, [sp]
   44eb4:	add	sp, sp, #4
   44eb8:	pop	{pc}		; (ldr pc, [sp], #4)

00044ebc <flatcc_json_printer_float@@Base>:
   44ebc:	str	fp, [sp, #-8]!
   44ec0:	str	lr, [sp, #4]
   44ec4:	add	fp, sp, #4
   44ec8:	sub	sp, sp, #8
   44ecc:	str	r0, [fp, #-8]
   44ed0:	vstr	s0, [fp, #-12]
   44ed4:	vldr	s15, [fp, #-12]
   44ed8:	vcvt.f64.f32	d7, s15
   44edc:	ldr	r3, [fp, #-8]
   44ee0:	ldr	r3, [r3, #20]
   44ee4:	mov	r0, r3
   44ee8:	vmov.f64	d0, d7
   44eec:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   44ef0:	mov	r2, r0
   44ef4:	ldr	r3, [fp, #-8]
   44ef8:	ldr	r3, [r3, #20]
   44efc:	add	r2, r3, r2
   44f00:	ldr	r3, [fp, #-8]
   44f04:	str	r2, [r3, #20]
   44f08:	nop	{0}
   44f0c:	sub	sp, fp, #4
   44f10:	ldr	fp, [sp]
   44f14:	add	sp, sp, #4
   44f18:	pop	{pc}		; (ldr pc, [sp], #4)

00044f1c <flatcc_json_printer_double@@Base>:
   44f1c:	str	fp, [sp, #-8]!
   44f20:	str	lr, [sp, #4]
   44f24:	add	fp, sp, #4
   44f28:	sub	sp, sp, #16
   44f2c:	str	r0, [fp, #-8]
   44f30:	vstr	d0, [fp, #-20]	; 0xffffffec
   44f34:	ldr	r3, [fp, #-8]
   44f38:	ldr	r3, [r3, #20]
   44f3c:	mov	r0, r3
   44f40:	vldr	d0, [fp, #-20]	; 0xffffffec
   44f44:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   44f48:	mov	r2, r0
   44f4c:	ldr	r3, [fp, #-8]
   44f50:	ldr	r3, [r3, #20]
   44f54:	add	r2, r3, r2
   44f58:	ldr	r3, [fp, #-8]
   44f5c:	str	r2, [r3, #20]
   44f60:	nop	{0}
   44f64:	sub	sp, fp, #4
   44f68:	ldr	fp, [sp]
   44f6c:	add	sp, sp, #4
   44f70:	pop	{pc}		; (ldr pc, [sp], #4)

00044f74 <flatcc_json_printer_enum@@Base>:
   44f74:	str	fp, [sp, #-8]!
   44f78:	str	lr, [sp, #4]
   44f7c:	add	fp, sp, #4
   44f80:	sub	sp, sp, #16
   44f84:	str	r0, [fp, #-8]
   44f88:	str	r1, [fp, #-12]
   44f8c:	str	r2, [fp, #-16]
   44f90:	ldr	r3, [fp, #-16]
   44f94:	mov	r2, r3
   44f98:	ldr	r1, [fp, #-12]
   44f9c:	ldr	r0, [fp, #-8]
   44fa0:	bl	449f8 <flatcc_json_printer_get_level@@Base+0x28>
   44fa4:	nop	{0}
   44fa8:	sub	sp, fp, #4
   44fac:	ldr	fp, [sp]
   44fb0:	add	sp, sp, #4
   44fb4:	pop	{pc}		; (ldr pc, [sp], #4)

00044fb8 <flatcc_json_printer_delimit_enum_flags@@Base>:
   44fb8:	push	{fp}		; (str fp, [sp, #-4]!)
   44fbc:	add	fp, sp, #0
   44fc0:	sub	sp, sp, #20
   44fc4:	str	r0, [fp, #-16]
   44fc8:	str	r1, [fp, #-20]	; 0xffffffec
   44fcc:	ldr	r3, [fp, #-16]
   44fd0:	ldrb	r3, [r3, #26]
   44fd4:	cmp	r3, #0
   44fd8:	beq	44fe8 <flatcc_json_printer_delimit_enum_flags@@Base+0x30>
   44fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   44fe0:	cmp	r3, #0
   44fe4:	beq	44ff0 <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   44fe8:	mov	r3, #1
   44fec:	b	44ff4 <flatcc_json_printer_delimit_enum_flags@@Base+0x3c>
   44ff0:	mov	r3, #0
   44ff4:	str	r3, [fp, #-8]
   44ff8:	ldr	r3, [fp, #-16]
   44ffc:	ldr	r3, [r3, #20]
   45000:	mov	r2, #34	; 0x22
   45004:	strb	r2, [r3]
   45008:	ldr	r3, [fp, #-16]
   4500c:	ldr	r2, [r3, #20]
   45010:	ldr	r3, [fp, #-8]
   45014:	add	r2, r2, r3
   45018:	ldr	r3, [fp, #-16]
   4501c:	str	r2, [r3, #20]
   45020:	nop	{0}
   45024:	add	sp, fp, #0
   45028:	pop	{fp}		; (ldr fp, [sp], #4)
   4502c:	bx	lr

00045030 <flatcc_json_printer_enum_flag@@Base>:
   45030:	str	fp, [sp, #-8]!
   45034:	str	lr, [sp, #4]
   45038:	add	fp, sp, #4
   4503c:	sub	sp, sp, #16
   45040:	str	r0, [fp, #-8]
   45044:	str	r1, [fp, #-12]
   45048:	str	r2, [fp, #-16]
   4504c:	str	r3, [fp, #-20]	; 0xffffffec
   45050:	ldr	r3, [fp, #-8]
   45054:	ldr	r3, [r3, #20]
   45058:	mov	r2, #32
   4505c:	strb	r2, [r3]
   45060:	ldr	r3, [fp, #-8]
   45064:	ldr	r3, [r3, #20]
   45068:	ldr	r2, [fp, #-12]
   4506c:	cmp	r2, #0
   45070:	movgt	r2, #1
   45074:	movle	r2, #0
   45078:	uxtb	r2, r2
   4507c:	add	r2, r3, r2
   45080:	ldr	r3, [fp, #-8]
   45084:	str	r2, [r3, #20]
   45088:	ldr	r3, [fp, #-20]	; 0xffffffec
   4508c:	mov	r2, r3
   45090:	ldr	r1, [fp, #-16]
   45094:	ldr	r0, [fp, #-8]
   45098:	bl	4404c <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   4509c:	nop	{0}
   450a0:	sub	sp, fp, #4
   450a4:	ldr	fp, [sp]
   450a8:	add	sp, sp, #4
   450ac:	pop	{pc}		; (ldr pc, [sp], #4)
   450b0:	str	fp, [sp, #-8]!
   450b4:	str	lr, [sp, #4]
   450b8:	add	fp, sp, #4
   450bc:	sub	sp, sp, #16
   450c0:	str	r0, [fp, #-16]
   450c4:	str	r1, [fp, #-20]	; 0xffffffec
   450c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   450cc:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   450d0:	str	r0, [fp, #-8]
   450d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   450d8:	add	r3, r3, #4
   450dc:	str	r3, [fp, #-12]
   450e0:	ldr	r2, [fp, #-8]
   450e4:	ldr	r1, [fp, #-12]
   450e8:	ldr	r0, [fp, #-16]
   450ec:	bl	440e0 <flatcc_json_printer_fmt_bool@@Base+0x244>
   450f0:	nop	{0}
   450f4:	sub	sp, fp, #4
   450f8:	ldr	fp, [sp]
   450fc:	add	sp, sp, #4
   45100:	pop	{pc}		; (ldr pc, [sp], #4)
   45104:	str	fp, [sp, #-8]!
   45108:	str	lr, [sp, #4]
   4510c:	add	fp, sp, #4
   45110:	sub	sp, sp, #40	; 0x28
   45114:	str	r0, [fp, #-32]	; 0xffffffe0
   45118:	str	r1, [fp, #-36]	; 0xffffffdc
   4511c:	str	r2, [fp, #-40]	; 0xffffffd8
   45120:	str	r3, [fp, #-44]	; 0xffffffd4
   45124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   45128:	sub	r3, r3, #1
   4512c:	str	r3, [fp, #-40]	; 0xffffffd8
   45130:	ldr	r3, [fp, #-40]	; 0xffffffd8
   45134:	cmp	r3, #0
   45138:	bne	4514c <flatcc_json_printer_enum_flag@@Base+0x11c>
   4513c:	mov	r1, #2
   45140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   45144:	bl	3f300 <flatcc_json_parser_struct_as_root@@Base+0x7b0>
   45148:	b	4523c <flatcc_json_printer_enum_flag@@Base+0x20c>
   4514c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45150:	ldr	r3, [r3, #32]
   45154:	add	r2, r3, #1
   45158:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4515c:	str	r2, [r3, #32]
   45160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45164:	ldr	r3, [r3, #20]
   45168:	add	r1, r3, #1
   4516c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   45170:	str	r1, [r2, #20]
   45174:	mov	r2, #123	; 0x7b
   45178:	strb	r2, [r3]
   4517c:	mov	r3, #0
   45180:	str	r3, [fp, #-8]
   45184:	ldr	r3, [fp, #-40]	; 0xffffffd8
   45188:	str	r3, [fp, #-12]
   4518c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   45190:	str	r3, [fp, #-24]	; 0xffffffe8
   45194:	ldr	r0, [fp, #-36]	; 0xffffffdc
   45198:	bl	3f178 <flatcc_json_parser_struct_as_root@@Base+0x628>
   4519c:	mov	r3, r0
   451a0:	rsb	r3, r3, #0
   451a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   451a8:	add	r3, r2, r3
   451ac:	str	r3, [fp, #-20]	; 0xffffffec
   451b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   451b4:	mov	r0, r3
   451b8:	bl	3f1dc <flatcc_json_parser_struct_as_root@@Base+0x68c>
   451bc:	mov	r3, r0
   451c0:	str	r3, [fp, #-16]
   451c4:	sub	r2, fp, #24
   451c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   451cc:	mov	r1, r2
   451d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   451d4:	blx	r3
   451d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   451dc:	ldrb	r3, [r3, #25]
   451e0:	cmp	r3, #0
   451e4:	beq	45220 <flatcc_json_printer_enum_flag@@Base+0x1f0>
   451e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   451ec:	ldr	r3, [r3, #20]
   451f0:	add	r1, r3, #1
   451f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   451f8:	str	r1, [r2, #20]
   451fc:	mov	r2, #10
   45200:	strb	r2, [r3]
   45204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45208:	ldr	r3, [r3, #32]
   4520c:	sub	r2, r3, #1
   45210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45214:	str	r2, [r3, #32]
   45218:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4521c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   45220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45224:	ldr	r3, [r3, #20]
   45228:	add	r1, r3, #1
   4522c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   45230:	str	r1, [r2, #20]
   45234:	mov	r2, #125	; 0x7d
   45238:	strb	r2, [r3]
   4523c:	sub	sp, fp, #4
   45240:	ldr	fp, [sp]
   45244:	add	sp, sp, #4
   45248:	pop	{pc}		; (ldr pc, [sp], #4)

0004524c <flatcc_json_printer_string_field@@Base>:
   4524c:	str	fp, [sp, #-8]!
   45250:	str	lr, [sp, #4]
   45254:	add	fp, sp, #4
   45258:	sub	sp, sp, #24
   4525c:	str	r0, [fp, #-16]
   45260:	str	r1, [fp, #-20]	; 0xffffffec
   45264:	str	r2, [fp, #-24]	; 0xffffffe8
   45268:	str	r3, [fp, #-28]	; 0xffffffe4
   4526c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45270:	ldr	r0, [fp, #-20]	; 0xffffffec
   45274:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45278:	str	r0, [fp, #-8]
   4527c:	ldr	r3, [fp, #-8]
   45280:	cmp	r3, #0
   45284:	beq	452ec <flatcc_json_printer_string_field@@Base+0xa0>
   45288:	ldr	r3, [fp, #-20]	; 0xffffffec
   4528c:	ldr	r3, [r3, #16]
   45290:	add	r1, r3, #1
   45294:	ldr	r2, [fp, #-20]	; 0xffffffec
   45298:	str	r1, [r2, #16]
   4529c:	cmp	r3, #0
   452a0:	beq	452c0 <flatcc_json_printer_string_field@@Base+0x74>
   452a4:	ldr	r3, [fp, #-16]
   452a8:	ldr	r3, [r3, #20]
   452ac:	add	r1, r3, #1
   452b0:	ldr	r2, [fp, #-16]
   452b4:	str	r1, [r2, #20]
   452b8:	mov	r2, #44	; 0x2c
   452bc:	strb	r2, [r3]
   452c0:	ldr	r3, [fp, #4]
   452c4:	mov	r2, r3
   452c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   452cc:	ldr	r0, [fp, #-16]
   452d0:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   452d4:	ldr	r0, [fp, #-8]
   452d8:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   452dc:	mov	r3, r0
   452e0:	mov	r1, r3
   452e4:	ldr	r0, [fp, #-16]
   452e8:	bl	450b0 <flatcc_json_printer_enum_flag@@Base+0x80>
   452ec:	nop	{0}
   452f0:	sub	sp, fp, #4
   452f4:	ldr	fp, [sp]
   452f8:	add	sp, sp, #4
   452fc:	pop	{pc}		; (ldr pc, [sp], #4)

00045300 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   45300:	str	fp, [sp, #-8]!
   45304:	str	lr, [sp, #4]
   45308:	add	fp, sp, #4
   4530c:	sub	sp, sp, #24
   45310:	str	r0, [fp, #-16]
   45314:	str	r1, [fp, #-20]	; 0xffffffec
   45318:	str	r2, [fp, #-24]	; 0xffffffe8
   4531c:	str	r3, [fp, #-28]	; 0xffffffe4
   45320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45324:	ldr	r0, [fp, #-20]	; 0xffffffec
   45328:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4532c:	str	r0, [fp, #-8]
   45330:	ldr	r3, [fp, #8]
   45334:	cmp	r3, #0
   45338:	movne	r3, #1
   4533c:	moveq	r3, #0
   45340:	uxtb	r3, r3
   45344:	str	r3, [fp, #-12]
   45348:	ldr	r3, [fp, #-12]
   4534c:	orr	r3, r3, #128	; 0x80
   45350:	str	r3, [fp, #-12]
   45354:	ldr	r3, [fp, #-8]
   45358:	cmp	r3, #0
   4535c:	beq	453c8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xc8>
   45360:	ldr	r3, [fp, #-20]	; 0xffffffec
   45364:	ldr	r3, [r3, #16]
   45368:	add	r1, r3, #1
   4536c:	ldr	r2, [fp, #-20]	; 0xffffffec
   45370:	str	r1, [r2, #16]
   45374:	cmp	r3, #0
   45378:	beq	45398 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x98>
   4537c:	ldr	r3, [fp, #-16]
   45380:	ldr	r3, [r3, #20]
   45384:	add	r1, r3, #1
   45388:	ldr	r2, [fp, #-16]
   4538c:	str	r1, [r2, #20]
   45390:	mov	r2, #44	; 0x2c
   45394:	strb	r2, [r3]
   45398:	ldr	r3, [fp, #4]
   4539c:	mov	r2, r3
   453a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   453a4:	ldr	r0, [fp, #-16]
   453a8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   453ac:	ldr	r0, [fp, #-8]
   453b0:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   453b4:	mov	r3, r0
   453b8:	ldr	r2, [fp, #-12]
   453bc:	mov	r1, r3
   453c0:	ldr	r0, [fp, #-16]
   453c4:	bl	4444c <flatcc_json_printer_fmt_bool@@Base+0x5b0>
   453c8:	nop	{0}
   453cc:	sub	sp, fp, #4
   453d0:	ldr	fp, [sp]
   453d4:	add	sp, sp, #4
   453d8:	pop	{pc}		; (ldr pc, [sp], #4)

000453dc <flatcc_json_printer_uint8_field@@Base>:
   453dc:	str	fp, [sp, #-8]!
   453e0:	str	lr, [sp, #4]
   453e4:	add	fp, sp, #4
   453e8:	sub	sp, sp, #24
   453ec:	str	r0, [fp, #-16]
   453f0:	str	r1, [fp, #-20]	; 0xffffffec
   453f4:	str	r2, [fp, #-24]	; 0xffffffe8
   453f8:	str	r3, [fp, #-28]	; 0xffffffe4
   453fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45400:	ldr	r0, [fp, #-20]	; 0xffffffec
   45404:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45408:	str	r0, [fp, #-12]
   4540c:	ldr	r3, [fp, #-12]
   45410:	cmp	r3, #0
   45414:	beq	4544c <flatcc_json_printer_uint8_field@@Base+0x70>
   45418:	ldr	r0, [fp, #-12]
   4541c:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   45420:	mov	r3, r0
   45424:	strb	r3, [fp, #-5]
   45428:	ldrb	r2, [fp, #-5]
   4542c:	ldrb	r3, [fp, #8]
   45430:	cmp	r2, r3
   45434:	bne	45464 <flatcc_json_printer_uint8_field@@Base+0x88>
   45438:	ldr	r3, [fp, #-16]
   4543c:	ldrb	r3, [r3, #28]
   45440:	cmp	r3, #0
   45444:	beq	45464 <flatcc_json_printer_uint8_field@@Base+0x88>
   45448:	b	454e8 <flatcc_json_printer_uint8_field@@Base+0x10c>
   4544c:	ldr	r3, [fp, #-16]
   45450:	ldrb	r3, [r3, #29]
   45454:	cmp	r3, #0
   45458:	beq	454e4 <flatcc_json_printer_uint8_field@@Base+0x108>
   4545c:	ldrb	r3, [fp, #8]
   45460:	strb	r3, [fp, #-5]
   45464:	ldr	r3, [fp, #-20]	; 0xffffffec
   45468:	ldr	r3, [r3, #16]
   4546c:	add	r1, r3, #1
   45470:	ldr	r2, [fp, #-20]	; 0xffffffec
   45474:	str	r1, [r2, #16]
   45478:	cmp	r3, #0
   4547c:	beq	4549c <flatcc_json_printer_uint8_field@@Base+0xc0>
   45480:	ldr	r3, [fp, #-16]
   45484:	ldr	r3, [r3, #20]
   45488:	add	r1, r3, #1
   4548c:	ldr	r2, [fp, #-16]
   45490:	str	r1, [r2, #20]
   45494:	mov	r2, #44	; 0x2c
   45498:	strb	r2, [r3]
   4549c:	ldr	r3, [fp, #4]
   454a0:	mov	r2, r3
   454a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   454a8:	ldr	r0, [fp, #-16]
   454ac:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   454b0:	ldr	r3, [fp, #-16]
   454b4:	ldr	r2, [r3, #20]
   454b8:	ldrb	r3, [fp, #-5]
   454bc:	mov	r1, r2
   454c0:	mov	r0, r3
   454c4:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   454c8:	mov	r2, r0
   454cc:	ldr	r3, [fp, #-16]
   454d0:	ldr	r3, [r3, #20]
   454d4:	add	r2, r3, r2
   454d8:	ldr	r3, [fp, #-16]
   454dc:	str	r2, [r3, #20]
   454e0:	b	454e8 <flatcc_json_printer_uint8_field@@Base+0x10c>
   454e4:	nop	{0}
   454e8:	sub	sp, fp, #4
   454ec:	ldr	fp, [sp]
   454f0:	add	sp, sp, #4
   454f4:	pop	{pc}		; (ldr pc, [sp], #4)

000454f8 <flatcc_json_printer_uint16_field@@Base>:
   454f8:	str	fp, [sp, #-8]!
   454fc:	str	lr, [sp, #4]
   45500:	add	fp, sp, #4
   45504:	sub	sp, sp, #24
   45508:	str	r0, [fp, #-16]
   4550c:	str	r1, [fp, #-20]	; 0xffffffec
   45510:	str	r2, [fp, #-24]	; 0xffffffe8
   45514:	str	r3, [fp, #-28]	; 0xffffffe4
   45518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4551c:	ldr	r0, [fp, #-20]	; 0xffffffec
   45520:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45524:	str	r0, [fp, #-12]
   45528:	ldr	r3, [fp, #-12]
   4552c:	cmp	r3, #0
   45530:	beq	45568 <flatcc_json_printer_uint16_field@@Base+0x70>
   45534:	ldr	r0, [fp, #-12]
   45538:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   4553c:	mov	r3, r0
   45540:	strh	r3, [fp, #-6]
   45544:	ldrh	r2, [fp, #-6]
   45548:	ldrh	r3, [fp, #8]
   4554c:	cmp	r2, r3
   45550:	bne	45580 <flatcc_json_printer_uint16_field@@Base+0x88>
   45554:	ldr	r3, [fp, #-16]
   45558:	ldrb	r3, [r3, #28]
   4555c:	cmp	r3, #0
   45560:	beq	45580 <flatcc_json_printer_uint16_field@@Base+0x88>
   45564:	b	45604 <flatcc_json_printer_uint16_field@@Base+0x10c>
   45568:	ldr	r3, [fp, #-16]
   4556c:	ldrb	r3, [r3, #29]
   45570:	cmp	r3, #0
   45574:	beq	45600 <flatcc_json_printer_uint16_field@@Base+0x108>
   45578:	ldrh	r3, [fp, #8]
   4557c:	strh	r3, [fp, #-6]
   45580:	ldr	r3, [fp, #-20]	; 0xffffffec
   45584:	ldr	r3, [r3, #16]
   45588:	add	r1, r3, #1
   4558c:	ldr	r2, [fp, #-20]	; 0xffffffec
   45590:	str	r1, [r2, #16]
   45594:	cmp	r3, #0
   45598:	beq	455b8 <flatcc_json_printer_uint16_field@@Base+0xc0>
   4559c:	ldr	r3, [fp, #-16]
   455a0:	ldr	r3, [r3, #20]
   455a4:	add	r1, r3, #1
   455a8:	ldr	r2, [fp, #-16]
   455ac:	str	r1, [r2, #20]
   455b0:	mov	r2, #44	; 0x2c
   455b4:	strb	r2, [r3]
   455b8:	ldr	r3, [fp, #4]
   455bc:	mov	r2, r3
   455c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   455c4:	ldr	r0, [fp, #-16]
   455c8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   455cc:	ldr	r3, [fp, #-16]
   455d0:	ldr	r2, [r3, #20]
   455d4:	ldrh	r3, [fp, #-6]
   455d8:	mov	r1, r2
   455dc:	mov	r0, r3
   455e0:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   455e4:	mov	r2, r0
   455e8:	ldr	r3, [fp, #-16]
   455ec:	ldr	r3, [r3, #20]
   455f0:	add	r2, r3, r2
   455f4:	ldr	r3, [fp, #-16]
   455f8:	str	r2, [r3, #20]
   455fc:	b	45604 <flatcc_json_printer_uint16_field@@Base+0x10c>
   45600:	nop	{0}
   45604:	sub	sp, fp, #4
   45608:	ldr	fp, [sp]
   4560c:	add	sp, sp, #4
   45610:	pop	{pc}		; (ldr pc, [sp], #4)

00045614 <flatcc_json_printer_uint32_field@@Base>:
   45614:	str	fp, [sp, #-8]!
   45618:	str	lr, [sp, #4]
   4561c:	add	fp, sp, #4
   45620:	sub	sp, sp, #24
   45624:	str	r0, [fp, #-16]
   45628:	str	r1, [fp, #-20]	; 0xffffffec
   4562c:	str	r2, [fp, #-24]	; 0xffffffe8
   45630:	str	r3, [fp, #-28]	; 0xffffffe4
   45634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45638:	ldr	r0, [fp, #-20]	; 0xffffffec
   4563c:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45640:	str	r0, [fp, #-12]
   45644:	ldr	r3, [fp, #-12]
   45648:	cmp	r3, #0
   4564c:	beq	45680 <flatcc_json_printer_uint32_field@@Base+0x6c>
   45650:	ldr	r0, [fp, #-12]
   45654:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   45658:	str	r0, [fp, #-8]
   4565c:	ldr	r2, [fp, #-8]
   45660:	ldr	r3, [fp, #8]
   45664:	cmp	r2, r3
   45668:	bne	45698 <flatcc_json_printer_uint32_field@@Base+0x84>
   4566c:	ldr	r3, [fp, #-16]
   45670:	ldrb	r3, [r3, #28]
   45674:	cmp	r3, #0
   45678:	beq	45698 <flatcc_json_printer_uint32_field@@Base+0x84>
   4567c:	b	45718 <flatcc_json_printer_uint32_field@@Base+0x104>
   45680:	ldr	r3, [fp, #-16]
   45684:	ldrb	r3, [r3, #29]
   45688:	cmp	r3, #0
   4568c:	beq	45714 <flatcc_json_printer_uint32_field@@Base+0x100>
   45690:	ldr	r3, [fp, #8]
   45694:	str	r3, [fp, #-8]
   45698:	ldr	r3, [fp, #-20]	; 0xffffffec
   4569c:	ldr	r3, [r3, #16]
   456a0:	add	r1, r3, #1
   456a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   456a8:	str	r1, [r2, #16]
   456ac:	cmp	r3, #0
   456b0:	beq	456d0 <flatcc_json_printer_uint32_field@@Base+0xbc>
   456b4:	ldr	r3, [fp, #-16]
   456b8:	ldr	r3, [r3, #20]
   456bc:	add	r1, r3, #1
   456c0:	ldr	r2, [fp, #-16]
   456c4:	str	r1, [r2, #20]
   456c8:	mov	r2, #44	; 0x2c
   456cc:	strb	r2, [r3]
   456d0:	ldr	r3, [fp, #4]
   456d4:	mov	r2, r3
   456d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   456dc:	ldr	r0, [fp, #-16]
   456e0:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   456e4:	ldr	r3, [fp, #-16]
   456e8:	ldr	r3, [r3, #20]
   456ec:	mov	r1, r3
   456f0:	ldr	r0, [fp, #-8]
   456f4:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   456f8:	mov	r2, r0
   456fc:	ldr	r3, [fp, #-16]
   45700:	ldr	r3, [r3, #20]
   45704:	add	r2, r3, r2
   45708:	ldr	r3, [fp, #-16]
   4570c:	str	r2, [r3, #20]
   45710:	b	45718 <flatcc_json_printer_uint32_field@@Base+0x104>
   45714:	nop	{0}
   45718:	sub	sp, fp, #4
   4571c:	ldr	fp, [sp]
   45720:	add	sp, sp, #4
   45724:	pop	{pc}		; (ldr pc, [sp], #4)

00045728 <flatcc_json_printer_uint64_field@@Base>:
   45728:	str	fp, [sp, #-8]!
   4572c:	str	lr, [sp, #4]
   45730:	add	fp, sp, #4
   45734:	sub	sp, sp, #32
   45738:	str	r0, [fp, #-24]	; 0xffffffe8
   4573c:	str	r1, [fp, #-28]	; 0xffffffe4
   45740:	str	r2, [fp, #-32]	; 0xffffffe0
   45744:	str	r3, [fp, #-36]	; 0xffffffdc
   45748:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4574c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   45750:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45754:	str	r0, [fp, #-16]
   45758:	ldr	r3, [fp, #-16]
   4575c:	cmp	r3, #0
   45760:	beq	45798 <flatcc_json_printer_uint64_field@@Base+0x70>
   45764:	ldr	r0, [fp, #-16]
   45768:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   4576c:	strd	r0, [fp, #-12]
   45770:	ldrd	r0, [fp, #-12]
   45774:	ldrd	r2, [fp, #12]
   45778:	cmp	r1, r3
   4577c:	cmpeq	r0, r2
   45780:	bne	457b0 <flatcc_json_printer_uint64_field@@Base+0x88>
   45784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45788:	ldrb	r3, [r3, #28]
   4578c:	cmp	r3, #0
   45790:	beq	457b0 <flatcc_json_printer_uint64_field@@Base+0x88>
   45794:	b	45830 <flatcc_json_printer_uint64_field@@Base+0x108>
   45798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4579c:	ldrb	r3, [r3, #29]
   457a0:	cmp	r3, #0
   457a4:	beq	4582c <flatcc_json_printer_uint64_field@@Base+0x104>
   457a8:	ldrd	r2, [fp, #12]
   457ac:	strd	r2, [fp, #-12]
   457b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   457b4:	ldr	r3, [r3, #16]
   457b8:	add	r1, r3, #1
   457bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   457c0:	str	r1, [r2, #16]
   457c4:	cmp	r3, #0
   457c8:	beq	457e8 <flatcc_json_printer_uint64_field@@Base+0xc0>
   457cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   457d0:	ldr	r3, [r3, #20]
   457d4:	add	r1, r3, #1
   457d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   457dc:	str	r1, [r2, #20]
   457e0:	mov	r2, #44	; 0x2c
   457e4:	strb	r2, [r3]
   457e8:	ldr	r3, [fp, #4]
   457ec:	mov	r2, r3
   457f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   457f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   457f8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   457fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45800:	ldr	r3, [r3, #20]
   45804:	mov	r2, r3
   45808:	ldrd	r0, [fp, #-12]
   4580c:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   45810:	mov	r2, r0
   45814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45818:	ldr	r3, [r3, #20]
   4581c:	add	r2, r3, r2
   45820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45824:	str	r2, [r3, #20]
   45828:	b	45830 <flatcc_json_printer_uint64_field@@Base+0x108>
   4582c:	nop	{0}
   45830:	sub	sp, fp, #4
   45834:	ldr	fp, [sp]
   45838:	add	sp, sp, #4
   4583c:	pop	{pc}		; (ldr pc, [sp], #4)

00045840 <flatcc_json_printer_int8_field@@Base>:
   45840:	str	fp, [sp, #-8]!
   45844:	str	lr, [sp, #4]
   45848:	add	fp, sp, #4
   4584c:	sub	sp, sp, #24
   45850:	str	r0, [fp, #-16]
   45854:	str	r1, [fp, #-20]	; 0xffffffec
   45858:	str	r2, [fp, #-24]	; 0xffffffe8
   4585c:	str	r3, [fp, #-28]	; 0xffffffe4
   45860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45864:	ldr	r0, [fp, #-20]	; 0xffffffec
   45868:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4586c:	str	r0, [fp, #-12]
   45870:	ldr	r3, [fp, #-12]
   45874:	cmp	r3, #0
   45878:	beq	458b0 <flatcc_json_printer_int8_field@@Base+0x70>
   4587c:	ldr	r0, [fp, #-12]
   45880:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   45884:	mov	r3, r0
   45888:	strb	r3, [fp, #-5]
   4588c:	ldrsb	r2, [fp, #-5]
   45890:	ldrsb	r3, [fp, #8]
   45894:	cmp	r2, r3
   45898:	bne	458c8 <flatcc_json_printer_int8_field@@Base+0x88>
   4589c:	ldr	r3, [fp, #-16]
   458a0:	ldrb	r3, [r3, #28]
   458a4:	cmp	r3, #0
   458a8:	beq	458c8 <flatcc_json_printer_int8_field@@Base+0x88>
   458ac:	b	4594c <flatcc_json_printer_int8_field@@Base+0x10c>
   458b0:	ldr	r3, [fp, #-16]
   458b4:	ldrb	r3, [r3, #29]
   458b8:	cmp	r3, #0
   458bc:	beq	45948 <flatcc_json_printer_int8_field@@Base+0x108>
   458c0:	ldrb	r3, [fp, #8]
   458c4:	strb	r3, [fp, #-5]
   458c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   458cc:	ldr	r3, [r3, #16]
   458d0:	add	r1, r3, #1
   458d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   458d8:	str	r1, [r2, #16]
   458dc:	cmp	r3, #0
   458e0:	beq	45900 <flatcc_json_printer_int8_field@@Base+0xc0>
   458e4:	ldr	r3, [fp, #-16]
   458e8:	ldr	r3, [r3, #20]
   458ec:	add	r1, r3, #1
   458f0:	ldr	r2, [fp, #-16]
   458f4:	str	r1, [r2, #20]
   458f8:	mov	r2, #44	; 0x2c
   458fc:	strb	r2, [r3]
   45900:	ldr	r3, [fp, #4]
   45904:	mov	r2, r3
   45908:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4590c:	ldr	r0, [fp, #-16]
   45910:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   45914:	ldr	r3, [fp, #-16]
   45918:	ldr	r2, [r3, #20]
   4591c:	ldrsb	r3, [fp, #-5]
   45920:	mov	r1, r2
   45924:	mov	r0, r3
   45928:	bl	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x2164>
   4592c:	mov	r2, r0
   45930:	ldr	r3, [fp, #-16]
   45934:	ldr	r3, [r3, #20]
   45938:	add	r2, r3, r2
   4593c:	ldr	r3, [fp, #-16]
   45940:	str	r2, [r3, #20]
   45944:	b	4594c <flatcc_json_printer_int8_field@@Base+0x10c>
   45948:	nop	{0}
   4594c:	sub	sp, fp, #4
   45950:	ldr	fp, [sp]
   45954:	add	sp, sp, #4
   45958:	pop	{pc}		; (ldr pc, [sp], #4)

0004595c <flatcc_json_printer_int16_field@@Base>:
   4595c:	str	fp, [sp, #-8]!
   45960:	str	lr, [sp, #4]
   45964:	add	fp, sp, #4
   45968:	sub	sp, sp, #24
   4596c:	str	r0, [fp, #-16]
   45970:	str	r1, [fp, #-20]	; 0xffffffec
   45974:	str	r2, [fp, #-24]	; 0xffffffe8
   45978:	str	r3, [fp, #-28]	; 0xffffffe4
   4597c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45980:	ldr	r0, [fp, #-20]	; 0xffffffec
   45984:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45988:	str	r0, [fp, #-12]
   4598c:	ldr	r3, [fp, #-12]
   45990:	cmp	r3, #0
   45994:	beq	459cc <flatcc_json_printer_int16_field@@Base+0x70>
   45998:	ldr	r0, [fp, #-12]
   4599c:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   459a0:	mov	r3, r0
   459a4:	strh	r3, [fp, #-6]
   459a8:	ldrsh	r2, [fp, #-6]
   459ac:	ldrsh	r3, [fp, #8]
   459b0:	cmp	r2, r3
   459b4:	bne	459e4 <flatcc_json_printer_int16_field@@Base+0x88>
   459b8:	ldr	r3, [fp, #-16]
   459bc:	ldrb	r3, [r3, #28]
   459c0:	cmp	r3, #0
   459c4:	beq	459e4 <flatcc_json_printer_int16_field@@Base+0x88>
   459c8:	b	45a68 <flatcc_json_printer_int16_field@@Base+0x10c>
   459cc:	ldr	r3, [fp, #-16]
   459d0:	ldrb	r3, [r3, #29]
   459d4:	cmp	r3, #0
   459d8:	beq	45a64 <flatcc_json_printer_int16_field@@Base+0x108>
   459dc:	ldrh	r3, [fp, #8]
   459e0:	strh	r3, [fp, #-6]
   459e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   459e8:	ldr	r3, [r3, #16]
   459ec:	add	r1, r3, #1
   459f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   459f4:	str	r1, [r2, #16]
   459f8:	cmp	r3, #0
   459fc:	beq	45a1c <flatcc_json_printer_int16_field@@Base+0xc0>
   45a00:	ldr	r3, [fp, #-16]
   45a04:	ldr	r3, [r3, #20]
   45a08:	add	r1, r3, #1
   45a0c:	ldr	r2, [fp, #-16]
   45a10:	str	r1, [r2, #20]
   45a14:	mov	r2, #44	; 0x2c
   45a18:	strb	r2, [r3]
   45a1c:	ldr	r3, [fp, #4]
   45a20:	mov	r2, r3
   45a24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45a28:	ldr	r0, [fp, #-16]
   45a2c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   45a30:	ldr	r3, [fp, #-16]
   45a34:	ldr	r2, [r3, #20]
   45a38:	ldrsh	r3, [fp, #-6]
   45a3c:	mov	r1, r2
   45a40:	mov	r0, r3
   45a44:	bl	40d40 <flatcc_json_parser_struct_as_root@@Base+0x21f0>
   45a48:	mov	r2, r0
   45a4c:	ldr	r3, [fp, #-16]
   45a50:	ldr	r3, [r3, #20]
   45a54:	add	r2, r3, r2
   45a58:	ldr	r3, [fp, #-16]
   45a5c:	str	r2, [r3, #20]
   45a60:	b	45a68 <flatcc_json_printer_int16_field@@Base+0x10c>
   45a64:	nop	{0}
   45a68:	sub	sp, fp, #4
   45a6c:	ldr	fp, [sp]
   45a70:	add	sp, sp, #4
   45a74:	pop	{pc}		; (ldr pc, [sp], #4)

00045a78 <flatcc_json_printer_int32_field@@Base>:
   45a78:	str	fp, [sp, #-8]!
   45a7c:	str	lr, [sp, #4]
   45a80:	add	fp, sp, #4
   45a84:	sub	sp, sp, #24
   45a88:	str	r0, [fp, #-16]
   45a8c:	str	r1, [fp, #-20]	; 0xffffffec
   45a90:	str	r2, [fp, #-24]	; 0xffffffe8
   45a94:	str	r3, [fp, #-28]	; 0xffffffe4
   45a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   45aa0:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45aa4:	str	r0, [fp, #-12]
   45aa8:	ldr	r3, [fp, #-12]
   45aac:	cmp	r3, #0
   45ab0:	beq	45ae4 <flatcc_json_printer_int32_field@@Base+0x6c>
   45ab4:	ldr	r0, [fp, #-12]
   45ab8:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   45abc:	str	r0, [fp, #-8]
   45ac0:	ldr	r2, [fp, #-8]
   45ac4:	ldr	r3, [fp, #8]
   45ac8:	cmp	r2, r3
   45acc:	bne	45afc <flatcc_json_printer_int32_field@@Base+0x84>
   45ad0:	ldr	r3, [fp, #-16]
   45ad4:	ldrb	r3, [r3, #28]
   45ad8:	cmp	r3, #0
   45adc:	beq	45afc <flatcc_json_printer_int32_field@@Base+0x84>
   45ae0:	b	45b7c <flatcc_json_printer_int32_field@@Base+0x104>
   45ae4:	ldr	r3, [fp, #-16]
   45ae8:	ldrb	r3, [r3, #29]
   45aec:	cmp	r3, #0
   45af0:	beq	45b78 <flatcc_json_printer_int32_field@@Base+0x100>
   45af4:	ldr	r3, [fp, #8]
   45af8:	str	r3, [fp, #-8]
   45afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   45b00:	ldr	r3, [r3, #16]
   45b04:	add	r1, r3, #1
   45b08:	ldr	r2, [fp, #-20]	; 0xffffffec
   45b0c:	str	r1, [r2, #16]
   45b10:	cmp	r3, #0
   45b14:	beq	45b34 <flatcc_json_printer_int32_field@@Base+0xbc>
   45b18:	ldr	r3, [fp, #-16]
   45b1c:	ldr	r3, [r3, #20]
   45b20:	add	r1, r3, #1
   45b24:	ldr	r2, [fp, #-16]
   45b28:	str	r1, [r2, #20]
   45b2c:	mov	r2, #44	; 0x2c
   45b30:	strb	r2, [r3]
   45b34:	ldr	r3, [fp, #4]
   45b38:	mov	r2, r3
   45b3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45b40:	ldr	r0, [fp, #-16]
   45b44:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   45b48:	ldr	r3, [fp, #-16]
   45b4c:	ldr	r3, [r3, #20]
   45b50:	mov	r1, r3
   45b54:	ldr	r0, [fp, #-8]
   45b58:	bl	40dcc <flatcc_json_parser_struct_as_root@@Base+0x227c>
   45b5c:	mov	r2, r0
   45b60:	ldr	r3, [fp, #-16]
   45b64:	ldr	r3, [r3, #20]
   45b68:	add	r2, r3, r2
   45b6c:	ldr	r3, [fp, #-16]
   45b70:	str	r2, [r3, #20]
   45b74:	b	45b7c <flatcc_json_printer_int32_field@@Base+0x104>
   45b78:	nop	{0}
   45b7c:	sub	sp, fp, #4
   45b80:	ldr	fp, [sp]
   45b84:	add	sp, sp, #4
   45b88:	pop	{pc}		; (ldr pc, [sp], #4)

00045b8c <flatcc_json_printer_int64_field@@Base>:
   45b8c:	str	fp, [sp, #-8]!
   45b90:	str	lr, [sp, #4]
   45b94:	add	fp, sp, #4
   45b98:	sub	sp, sp, #32
   45b9c:	str	r0, [fp, #-24]	; 0xffffffe8
   45ba0:	str	r1, [fp, #-28]	; 0xffffffe4
   45ba4:	str	r2, [fp, #-32]	; 0xffffffe0
   45ba8:	str	r3, [fp, #-36]	; 0xffffffdc
   45bac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   45bb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   45bb4:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45bb8:	str	r0, [fp, #-16]
   45bbc:	ldr	r3, [fp, #-16]
   45bc0:	cmp	r3, #0
   45bc4:	beq	45bfc <flatcc_json_printer_int64_field@@Base+0x70>
   45bc8:	ldr	r0, [fp, #-16]
   45bcc:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   45bd0:	strd	r0, [fp, #-12]
   45bd4:	ldrd	r0, [fp, #-12]
   45bd8:	ldrd	r2, [fp, #12]
   45bdc:	cmp	r1, r3
   45be0:	cmpeq	r0, r2
   45be4:	bne	45c14 <flatcc_json_printer_int64_field@@Base+0x88>
   45be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45bec:	ldrb	r3, [r3, #28]
   45bf0:	cmp	r3, #0
   45bf4:	beq	45c14 <flatcc_json_printer_int64_field@@Base+0x88>
   45bf8:	b	45c94 <flatcc_json_printer_int64_field@@Base+0x108>
   45bfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45c00:	ldrb	r3, [r3, #29]
   45c04:	cmp	r3, #0
   45c08:	beq	45c90 <flatcc_json_printer_int64_field@@Base+0x104>
   45c0c:	ldrd	r2, [fp, #12]
   45c10:	strd	r2, [fp, #-12]
   45c14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45c18:	ldr	r3, [r3, #16]
   45c1c:	add	r1, r3, #1
   45c20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45c24:	str	r1, [r2, #16]
   45c28:	cmp	r3, #0
   45c2c:	beq	45c4c <flatcc_json_printer_int64_field@@Base+0xc0>
   45c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45c34:	ldr	r3, [r3, #20]
   45c38:	add	r1, r3, #1
   45c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45c40:	str	r1, [r2, #20]
   45c44:	mov	r2, #44	; 0x2c
   45c48:	strb	r2, [r3]
   45c4c:	ldr	r3, [fp, #4]
   45c50:	mov	r2, r3
   45c54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   45c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45c5c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   45c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45c64:	ldr	r3, [r3, #20]
   45c68:	mov	r2, r3
   45c6c:	ldrd	r0, [fp, #-12]
   45c70:	bl	40e50 <flatcc_json_parser_struct_as_root@@Base+0x2300>
   45c74:	mov	r2, r0
   45c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45c7c:	ldr	r3, [r3, #20]
   45c80:	add	r2, r3, r2
   45c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45c88:	str	r2, [r3, #20]
   45c8c:	b	45c94 <flatcc_json_printer_int64_field@@Base+0x108>
   45c90:	nop	{0}
   45c94:	sub	sp, fp, #4
   45c98:	ldr	fp, [sp]
   45c9c:	add	sp, sp, #4
   45ca0:	pop	{pc}		; (ldr pc, [sp], #4)

00045ca4 <flatcc_json_printer_bool_field@@Base>:
   45ca4:	str	fp, [sp, #-8]!
   45ca8:	str	lr, [sp, #4]
   45cac:	add	fp, sp, #4
   45cb0:	sub	sp, sp, #24
   45cb4:	str	r0, [fp, #-16]
   45cb8:	str	r1, [fp, #-20]	; 0xffffffec
   45cbc:	str	r2, [fp, #-24]	; 0xffffffe8
   45cc0:	str	r3, [fp, #-28]	; 0xffffffe4
   45cc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   45ccc:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45cd0:	str	r0, [fp, #-12]
   45cd4:	ldr	r3, [fp, #-12]
   45cd8:	cmp	r3, #0
   45cdc:	beq	45d14 <flatcc_json_printer_bool_field@@Base+0x70>
   45ce0:	ldr	r0, [fp, #-12]
   45ce4:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   45ce8:	mov	r3, r0
   45cec:	strb	r3, [fp, #-5]
   45cf0:	ldrb	r2, [fp, #-5]
   45cf4:	ldrb	r3, [fp, #8]
   45cf8:	cmp	r2, r3
   45cfc:	bne	45d2c <flatcc_json_printer_bool_field@@Base+0x88>
   45d00:	ldr	r3, [fp, #-16]
   45d04:	ldrb	r3, [r3, #28]
   45d08:	cmp	r3, #0
   45d0c:	beq	45d2c <flatcc_json_printer_bool_field@@Base+0x88>
   45d10:	b	45db0 <flatcc_json_printer_bool_field@@Base+0x10c>
   45d14:	ldr	r3, [fp, #-16]
   45d18:	ldrb	r3, [r3, #29]
   45d1c:	cmp	r3, #0
   45d20:	beq	45dac <flatcc_json_printer_bool_field@@Base+0x108>
   45d24:	ldrb	r3, [fp, #8]
   45d28:	strb	r3, [fp, #-5]
   45d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45d30:	ldr	r3, [r3, #16]
   45d34:	add	r1, r3, #1
   45d38:	ldr	r2, [fp, #-20]	; 0xffffffec
   45d3c:	str	r1, [r2, #16]
   45d40:	cmp	r3, #0
   45d44:	beq	45d64 <flatcc_json_printer_bool_field@@Base+0xc0>
   45d48:	ldr	r3, [fp, #-16]
   45d4c:	ldr	r3, [r3, #20]
   45d50:	add	r1, r3, #1
   45d54:	ldr	r2, [fp, #-16]
   45d58:	str	r1, [r2, #20]
   45d5c:	mov	r2, #44	; 0x2c
   45d60:	strb	r2, [r3]
   45d64:	ldr	r3, [fp, #4]
   45d68:	mov	r2, r3
   45d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45d70:	ldr	r0, [fp, #-16]
   45d74:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   45d78:	ldrb	r2, [fp, #-5]
   45d7c:	ldr	r3, [fp, #-16]
   45d80:	ldr	r3, [r3, #20]
   45d84:	mov	r1, r3
   45d88:	mov	r0, r2
   45d8c:	bl	3f3bc <flatcc_json_parser_struct_as_root@@Base+0x86c>
   45d90:	mov	r2, r0
   45d94:	ldr	r3, [fp, #-16]
   45d98:	ldr	r3, [r3, #20]
   45d9c:	add	r2, r3, r2
   45da0:	ldr	r3, [fp, #-16]
   45da4:	str	r2, [r3, #20]
   45da8:	b	45db0 <flatcc_json_printer_bool_field@@Base+0x10c>
   45dac:	nop	{0}
   45db0:	sub	sp, fp, #4
   45db4:	ldr	fp, [sp]
   45db8:	add	sp, sp, #4
   45dbc:	pop	{pc}		; (ldr pc, [sp], #4)

00045dc0 <flatcc_json_printer_float_field@@Base>:
   45dc0:	str	fp, [sp, #-8]!
   45dc4:	str	lr, [sp, #4]
   45dc8:	add	fp, sp, #4
   45dcc:	sub	sp, sp, #32
   45dd0:	str	r0, [fp, #-16]
   45dd4:	str	r1, [fp, #-20]	; 0xffffffec
   45dd8:	str	r2, [fp, #-24]	; 0xffffffe8
   45ddc:	str	r3, [fp, #-28]	; 0xffffffe4
   45de0:	vstr	s0, [fp, #-32]	; 0xffffffe0
   45de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45de8:	ldr	r0, [fp, #-20]	; 0xffffffec
   45dec:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45df0:	str	r0, [fp, #-12]
   45df4:	ldr	r3, [fp, #-12]
   45df8:	cmp	r3, #0
   45dfc:	beq	45e34 <flatcc_json_printer_float_field@@Base+0x74>
   45e00:	ldr	r0, [fp, #-12]
   45e04:	bl	3efe0 <flatcc_json_parser_struct_as_root@@Base+0x490>
   45e08:	vstr	s0, [fp, #-8]
   45e0c:	vldr	s14, [fp, #-8]
   45e10:	vldr	s15, [fp, #-32]	; 0xffffffe0
   45e14:	vcmp.f32	s14, s15
   45e18:	vmrs	APSR_nzcv, fpscr
   45e1c:	bne	45e4c <flatcc_json_printer_float_field@@Base+0x8c>
   45e20:	ldr	r3, [fp, #-16]
   45e24:	ldrb	r3, [r3, #28]
   45e28:	cmp	r3, #0
   45e2c:	beq	45e4c <flatcc_json_printer_float_field@@Base+0x8c>
   45e30:	b	45ed4 <flatcc_json_printer_float_field@@Base+0x114>
   45e34:	ldr	r3, [fp, #-16]
   45e38:	ldrb	r3, [r3, #29]
   45e3c:	cmp	r3, #0
   45e40:	beq	45ed0 <flatcc_json_printer_float_field@@Base+0x110>
   45e44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45e48:	str	r3, [fp, #-8]
   45e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45e50:	ldr	r3, [r3, #16]
   45e54:	add	r1, r3, #1
   45e58:	ldr	r2, [fp, #-20]	; 0xffffffec
   45e5c:	str	r1, [r2, #16]
   45e60:	cmp	r3, #0
   45e64:	beq	45e84 <flatcc_json_printer_float_field@@Base+0xc4>
   45e68:	ldr	r3, [fp, #-16]
   45e6c:	ldr	r3, [r3, #20]
   45e70:	add	r1, r3, #1
   45e74:	ldr	r2, [fp, #-16]
   45e78:	str	r1, [r2, #20]
   45e7c:	mov	r2, #44	; 0x2c
   45e80:	strb	r2, [r3]
   45e84:	ldr	r3, [fp, #4]
   45e88:	mov	r2, r3
   45e8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45e90:	ldr	r0, [fp, #-16]
   45e94:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   45e98:	vldr	s15, [fp, #-8]
   45e9c:	vcvt.f64.f32	d7, s15
   45ea0:	ldr	r3, [fp, #-16]
   45ea4:	ldr	r3, [r3, #20]
   45ea8:	mov	r0, r3
   45eac:	vmov.f64	d0, d7
   45eb0:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   45eb4:	mov	r2, r0
   45eb8:	ldr	r3, [fp, #-16]
   45ebc:	ldr	r3, [r3, #20]
   45ec0:	add	r2, r3, r2
   45ec4:	ldr	r3, [fp, #-16]
   45ec8:	str	r2, [r3, #20]
   45ecc:	b	45ed4 <flatcc_json_printer_float_field@@Base+0x114>
   45ed0:	nop	{0}
   45ed4:	sub	sp, fp, #4
   45ed8:	ldr	fp, [sp]
   45edc:	add	sp, sp, #4
   45ee0:	pop	{pc}		; (ldr pc, [sp], #4)

00045ee4 <flatcc_json_printer_double_field@@Base>:
   45ee4:	str	fp, [sp, #-8]!
   45ee8:	str	lr, [sp, #4]
   45eec:	add	fp, sp, #4
   45ef0:	sub	sp, sp, #40	; 0x28
   45ef4:	str	r0, [fp, #-24]	; 0xffffffe8
   45ef8:	str	r1, [fp, #-28]	; 0xffffffe4
   45efc:	str	r2, [fp, #-32]	; 0xffffffe0
   45f00:	str	r3, [fp, #-36]	; 0xffffffdc
   45f04:	vstr	d0, [fp, #-44]	; 0xffffffd4
   45f08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   45f0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   45f10:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   45f14:	str	r0, [fp, #-16]
   45f18:	ldr	r3, [fp, #-16]
   45f1c:	cmp	r3, #0
   45f20:	beq	45f58 <flatcc_json_printer_double_field@@Base+0x74>
   45f24:	ldr	r0, [fp, #-16]
   45f28:	bl	3f054 <flatcc_json_parser_struct_as_root@@Base+0x504>
   45f2c:	vstr	d0, [fp, #-12]
   45f30:	vldr	d6, [fp, #-12]
   45f34:	vldr	d7, [fp, #-44]	; 0xffffffd4
   45f38:	vcmp.f64	d6, d7
   45f3c:	vmrs	APSR_nzcv, fpscr
   45f40:	bne	45f70 <flatcc_json_printer_double_field@@Base+0x8c>
   45f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45f48:	ldrb	r3, [r3, #28]
   45f4c:	cmp	r3, #0
   45f50:	beq	45f70 <flatcc_json_printer_double_field@@Base+0x8c>
   45f54:	b	45ff0 <flatcc_json_printer_double_field@@Base+0x10c>
   45f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45f5c:	ldrb	r3, [r3, #29]
   45f60:	cmp	r3, #0
   45f64:	beq	45fec <flatcc_json_printer_double_field@@Base+0x108>
   45f68:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   45f6c:	strd	r2, [fp, #-12]
   45f70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45f74:	ldr	r3, [r3, #16]
   45f78:	add	r1, r3, #1
   45f7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45f80:	str	r1, [r2, #16]
   45f84:	cmp	r3, #0
   45f88:	beq	45fa8 <flatcc_json_printer_double_field@@Base+0xc4>
   45f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45f90:	ldr	r3, [r3, #20]
   45f94:	add	r1, r3, #1
   45f98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45f9c:	str	r1, [r2, #20]
   45fa0:	mov	r2, #44	; 0x2c
   45fa4:	strb	r2, [r3]
   45fa8:	ldr	r3, [fp, #4]
   45fac:	mov	r2, r3
   45fb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   45fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45fb8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   45fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45fc0:	ldr	r3, [r3, #20]
   45fc4:	mov	r0, r3
   45fc8:	vldr	d0, [fp, #-12]
   45fcc:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   45fd0:	mov	r2, r0
   45fd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45fd8:	ldr	r3, [r3, #20]
   45fdc:	add	r2, r3, r2
   45fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45fe4:	str	r2, [r3, #20]
   45fe8:	b	45ff0 <flatcc_json_printer_double_field@@Base+0x10c>
   45fec:	nop	{0}
   45ff0:	sub	sp, fp, #4
   45ff4:	ldr	fp, [sp]
   45ff8:	add	sp, sp, #4
   45ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00046000 <flatcc_json_printer_uint8_enum_field@@Base>:
   46000:	str	fp, [sp, #-8]!
   46004:	str	lr, [sp, #4]
   46008:	add	fp, sp, #4
   4600c:	sub	sp, sp, #24
   46010:	str	r0, [fp, #-16]
   46014:	str	r1, [fp, #-20]	; 0xffffffec
   46018:	str	r2, [fp, #-24]	; 0xffffffe8
   4601c:	str	r3, [fp, #-28]	; 0xffffffe4
   46020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46024:	ldr	r0, [fp, #-20]	; 0xffffffec
   46028:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4602c:	str	r0, [fp, #-12]
   46030:	ldr	r3, [fp, #-12]
   46034:	cmp	r3, #0
   46038:	beq	46070 <flatcc_json_printer_uint8_enum_field@@Base+0x70>
   4603c:	ldr	r0, [fp, #-12]
   46040:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   46044:	mov	r3, r0
   46048:	strb	r3, [fp, #-5]
   4604c:	ldrb	r2, [fp, #-5]
   46050:	ldrb	r3, [fp, #8]
   46054:	cmp	r2, r3
   46058:	bne	46088 <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   4605c:	ldr	r3, [fp, #-16]
   46060:	ldrb	r3, [r3, #28]
   46064:	cmp	r3, #0
   46068:	beq	46088 <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   4606c:	b	46134 <flatcc_json_printer_uint8_enum_field@@Base+0x134>
   46070:	ldr	r3, [fp, #-16]
   46074:	ldrb	r3, [r3, #29]
   46078:	cmp	r3, #0
   4607c:	beq	46130 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   46080:	ldrb	r3, [fp, #8]
   46084:	strb	r3, [fp, #-5]
   46088:	ldr	r3, [fp, #-20]	; 0xffffffec
   4608c:	ldr	r3, [r3, #16]
   46090:	add	r1, r3, #1
   46094:	ldr	r2, [fp, #-20]	; 0xffffffec
   46098:	str	r1, [r2, #16]
   4609c:	cmp	r3, #0
   460a0:	beq	460c0 <flatcc_json_printer_uint8_enum_field@@Base+0xc0>
   460a4:	ldr	r3, [fp, #-16]
   460a8:	ldr	r3, [r3, #20]
   460ac:	add	r1, r3, #1
   460b0:	ldr	r2, [fp, #-16]
   460b4:	str	r1, [r2, #20]
   460b8:	mov	r2, #44	; 0x2c
   460bc:	strb	r2, [r3]
   460c0:	ldr	r3, [fp, #4]
   460c4:	mov	r2, r3
   460c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   460cc:	ldr	r0, [fp, #-16]
   460d0:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   460d4:	ldr	r3, [fp, #-16]
   460d8:	ldrb	r3, [r3, #27]
   460dc:	cmp	r3, #0
   460e0:	beq	46118 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
   460e4:	ldr	r3, [fp, #-16]
   460e8:	ldr	r2, [r3, #20]
   460ec:	ldrb	r3, [fp, #-5]
   460f0:	mov	r1, r2
   460f4:	mov	r0, r3
   460f8:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   460fc:	mov	r2, r0
   46100:	ldr	r3, [fp, #-16]
   46104:	ldr	r3, [r3, #20]
   46108:	add	r2, r3, r2
   4610c:	ldr	r3, [fp, #-16]
   46110:	str	r2, [r3, #20]
   46114:	b	46134 <flatcc_json_printer_uint8_enum_field@@Base+0x134>
   46118:	ldrb	r2, [fp, #-5]
   4611c:	ldr	r3, [fp, #12]
   46120:	mov	r1, r2
   46124:	ldr	r0, [fp, #-16]
   46128:	blx	r3
   4612c:	b	46134 <flatcc_json_printer_uint8_enum_field@@Base+0x134>
   46130:	nop	{0}
   46134:	sub	sp, fp, #4
   46138:	ldr	fp, [sp]
   4613c:	add	sp, sp, #4
   46140:	pop	{pc}		; (ldr pc, [sp], #4)

00046144 <flatcc_json_printer_uint16_enum_field@@Base>:
   46144:	str	fp, [sp, #-8]!
   46148:	str	lr, [sp, #4]
   4614c:	add	fp, sp, #4
   46150:	sub	sp, sp, #24
   46154:	str	r0, [fp, #-16]
   46158:	str	r1, [fp, #-20]	; 0xffffffec
   4615c:	str	r2, [fp, #-24]	; 0xffffffe8
   46160:	str	r3, [fp, #-28]	; 0xffffffe4
   46164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46168:	ldr	r0, [fp, #-20]	; 0xffffffec
   4616c:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   46170:	str	r0, [fp, #-12]
   46174:	ldr	r3, [fp, #-12]
   46178:	cmp	r3, #0
   4617c:	beq	461b4 <flatcc_json_printer_uint16_enum_field@@Base+0x70>
   46180:	ldr	r0, [fp, #-12]
   46184:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   46188:	mov	r3, r0
   4618c:	strh	r3, [fp, #-6]
   46190:	ldrh	r2, [fp, #-6]
   46194:	ldrh	r3, [fp, #8]
   46198:	cmp	r2, r3
   4619c:	bne	461cc <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   461a0:	ldr	r3, [fp, #-16]
   461a4:	ldrb	r3, [r3, #28]
   461a8:	cmp	r3, #0
   461ac:	beq	461cc <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   461b0:	b	46278 <flatcc_json_printer_uint16_enum_field@@Base+0x134>
   461b4:	ldr	r3, [fp, #-16]
   461b8:	ldrb	r3, [r3, #29]
   461bc:	cmp	r3, #0
   461c0:	beq	46274 <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   461c4:	ldrh	r3, [fp, #8]
   461c8:	strh	r3, [fp, #-6]
   461cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   461d0:	ldr	r3, [r3, #16]
   461d4:	add	r1, r3, #1
   461d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   461dc:	str	r1, [r2, #16]
   461e0:	cmp	r3, #0
   461e4:	beq	46204 <flatcc_json_printer_uint16_enum_field@@Base+0xc0>
   461e8:	ldr	r3, [fp, #-16]
   461ec:	ldr	r3, [r3, #20]
   461f0:	add	r1, r3, #1
   461f4:	ldr	r2, [fp, #-16]
   461f8:	str	r1, [r2, #20]
   461fc:	mov	r2, #44	; 0x2c
   46200:	strb	r2, [r3]
   46204:	ldr	r3, [fp, #4]
   46208:	mov	r2, r3
   4620c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46210:	ldr	r0, [fp, #-16]
   46214:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46218:	ldr	r3, [fp, #-16]
   4621c:	ldrb	r3, [r3, #27]
   46220:	cmp	r3, #0
   46224:	beq	4625c <flatcc_json_printer_uint16_enum_field@@Base+0x118>
   46228:	ldr	r3, [fp, #-16]
   4622c:	ldr	r2, [r3, #20]
   46230:	ldrh	r3, [fp, #-6]
   46234:	mov	r1, r2
   46238:	mov	r0, r3
   4623c:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   46240:	mov	r2, r0
   46244:	ldr	r3, [fp, #-16]
   46248:	ldr	r3, [r3, #20]
   4624c:	add	r2, r3, r2
   46250:	ldr	r3, [fp, #-16]
   46254:	str	r2, [r3, #20]
   46258:	b	46278 <flatcc_json_printer_uint16_enum_field@@Base+0x134>
   4625c:	ldrh	r2, [fp, #-6]
   46260:	ldr	r3, [fp, #12]
   46264:	mov	r1, r2
   46268:	ldr	r0, [fp, #-16]
   4626c:	blx	r3
   46270:	b	46278 <flatcc_json_printer_uint16_enum_field@@Base+0x134>
   46274:	nop	{0}
   46278:	sub	sp, fp, #4
   4627c:	ldr	fp, [sp]
   46280:	add	sp, sp, #4
   46284:	pop	{pc}		; (ldr pc, [sp], #4)

00046288 <flatcc_json_printer_uint32_enum_field@@Base>:
   46288:	str	fp, [sp, #-8]!
   4628c:	str	lr, [sp, #4]
   46290:	add	fp, sp, #4
   46294:	sub	sp, sp, #24
   46298:	str	r0, [fp, #-16]
   4629c:	str	r1, [fp, #-20]	; 0xffffffec
   462a0:	str	r2, [fp, #-24]	; 0xffffffe8
   462a4:	str	r3, [fp, #-28]	; 0xffffffe4
   462a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   462ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   462b0:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   462b4:	str	r0, [fp, #-12]
   462b8:	ldr	r3, [fp, #-12]
   462bc:	cmp	r3, #0
   462c0:	beq	462f4 <flatcc_json_printer_uint32_enum_field@@Base+0x6c>
   462c4:	ldr	r0, [fp, #-12]
   462c8:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   462cc:	str	r0, [fp, #-8]
   462d0:	ldr	r2, [fp, #-8]
   462d4:	ldr	r3, [fp, #8]
   462d8:	cmp	r2, r3
   462dc:	bne	4630c <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   462e0:	ldr	r3, [fp, #-16]
   462e4:	ldrb	r3, [r3, #28]
   462e8:	cmp	r3, #0
   462ec:	beq	4630c <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   462f0:	b	463b0 <flatcc_json_printer_uint32_enum_field@@Base+0x128>
   462f4:	ldr	r3, [fp, #-16]
   462f8:	ldrb	r3, [r3, #29]
   462fc:	cmp	r3, #0
   46300:	beq	463ac <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   46304:	ldr	r3, [fp, #8]
   46308:	str	r3, [fp, #-8]
   4630c:	ldr	r3, [fp, #-20]	; 0xffffffec
   46310:	ldr	r3, [r3, #16]
   46314:	add	r1, r3, #1
   46318:	ldr	r2, [fp, #-20]	; 0xffffffec
   4631c:	str	r1, [r2, #16]
   46320:	cmp	r3, #0
   46324:	beq	46344 <flatcc_json_printer_uint32_enum_field@@Base+0xbc>
   46328:	ldr	r3, [fp, #-16]
   4632c:	ldr	r3, [r3, #20]
   46330:	add	r1, r3, #1
   46334:	ldr	r2, [fp, #-16]
   46338:	str	r1, [r2, #20]
   4633c:	mov	r2, #44	; 0x2c
   46340:	strb	r2, [r3]
   46344:	ldr	r3, [fp, #4]
   46348:	mov	r2, r3
   4634c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46350:	ldr	r0, [fp, #-16]
   46354:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46358:	ldr	r3, [fp, #-16]
   4635c:	ldrb	r3, [r3, #27]
   46360:	cmp	r3, #0
   46364:	beq	46398 <flatcc_json_printer_uint32_enum_field@@Base+0x110>
   46368:	ldr	r3, [fp, #-16]
   4636c:	ldr	r3, [r3, #20]
   46370:	mov	r1, r3
   46374:	ldr	r0, [fp, #-8]
   46378:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   4637c:	mov	r2, r0
   46380:	ldr	r3, [fp, #-16]
   46384:	ldr	r3, [r3, #20]
   46388:	add	r2, r3, r2
   4638c:	ldr	r3, [fp, #-16]
   46390:	str	r2, [r3, #20]
   46394:	b	463b0 <flatcc_json_printer_uint32_enum_field@@Base+0x128>
   46398:	ldr	r3, [fp, #12]
   4639c:	ldr	r1, [fp, #-8]
   463a0:	ldr	r0, [fp, #-16]
   463a4:	blx	r3
   463a8:	b	463b0 <flatcc_json_printer_uint32_enum_field@@Base+0x128>
   463ac:	nop	{0}
   463b0:	sub	sp, fp, #4
   463b4:	ldr	fp, [sp]
   463b8:	add	sp, sp, #4
   463bc:	pop	{pc}		; (ldr pc, [sp], #4)

000463c0 <flatcc_json_printer_uint64_enum_field@@Base>:
   463c0:	str	fp, [sp, #-8]!
   463c4:	str	lr, [sp, #4]
   463c8:	add	fp, sp, #4
   463cc:	sub	sp, sp, #32
   463d0:	str	r0, [fp, #-24]	; 0xffffffe8
   463d4:	str	r1, [fp, #-28]	; 0xffffffe4
   463d8:	str	r2, [fp, #-32]	; 0xffffffe0
   463dc:	str	r3, [fp, #-36]	; 0xffffffdc
   463e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   463e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   463e8:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   463ec:	str	r0, [fp, #-16]
   463f0:	ldr	r3, [fp, #-16]
   463f4:	cmp	r3, #0
   463f8:	beq	46430 <flatcc_json_printer_uint64_enum_field@@Base+0x70>
   463fc:	ldr	r0, [fp, #-16]
   46400:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   46404:	strd	r0, [fp, #-12]
   46408:	ldrd	r0, [fp, #-12]
   4640c:	ldrd	r2, [fp, #12]
   46410:	cmp	r1, r3
   46414:	cmpeq	r0, r2
   46418:	bne	46448 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   4641c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46420:	ldrb	r3, [r3, #28]
   46424:	cmp	r3, #0
   46428:	beq	46448 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   4642c:	b	464ec <flatcc_json_printer_uint64_enum_field@@Base+0x12c>
   46430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46434:	ldrb	r3, [r3, #29]
   46438:	cmp	r3, #0
   4643c:	beq	464e8 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   46440:	ldrd	r2, [fp, #12]
   46444:	strd	r2, [fp, #-12]
   46448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4644c:	ldr	r3, [r3, #16]
   46450:	add	r1, r3, #1
   46454:	ldr	r2, [fp, #-28]	; 0xffffffe4
   46458:	str	r1, [r2, #16]
   4645c:	cmp	r3, #0
   46460:	beq	46480 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   46464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46468:	ldr	r3, [r3, #20]
   4646c:	add	r1, r3, #1
   46470:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46474:	str	r1, [r2, #20]
   46478:	mov	r2, #44	; 0x2c
   4647c:	strb	r2, [r3]
   46480:	ldr	r3, [fp, #4]
   46484:	mov	r2, r3
   46488:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4648c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   46490:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46498:	ldrb	r3, [r3, #27]
   4649c:	cmp	r3, #0
   464a0:	beq	464d4 <flatcc_json_printer_uint64_enum_field@@Base+0x114>
   464a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   464a8:	ldr	r3, [r3, #20]
   464ac:	mov	r2, r3
   464b0:	ldrd	r0, [fp, #-12]
   464b4:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   464b8:	mov	r2, r0
   464bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   464c0:	ldr	r3, [r3, #20]
   464c4:	add	r2, r3, r2
   464c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   464cc:	str	r2, [r3, #20]
   464d0:	b	464ec <flatcc_json_printer_uint64_enum_field@@Base+0x12c>
   464d4:	ldr	r1, [fp, #20]
   464d8:	ldrd	r2, [fp, #-12]
   464dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   464e0:	blx	r1
   464e4:	b	464ec <flatcc_json_printer_uint64_enum_field@@Base+0x12c>
   464e8:	nop	{0}
   464ec:	sub	sp, fp, #4
   464f0:	ldr	fp, [sp]
   464f4:	add	sp, sp, #4
   464f8:	pop	{pc}		; (ldr pc, [sp], #4)

000464fc <flatcc_json_printer_int8_enum_field@@Base>:
   464fc:	str	fp, [sp, #-8]!
   46500:	str	lr, [sp, #4]
   46504:	add	fp, sp, #4
   46508:	sub	sp, sp, #24
   4650c:	str	r0, [fp, #-16]
   46510:	str	r1, [fp, #-20]	; 0xffffffec
   46514:	str	r2, [fp, #-24]	; 0xffffffe8
   46518:	str	r3, [fp, #-28]	; 0xffffffe4
   4651c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46520:	ldr	r0, [fp, #-20]	; 0xffffffec
   46524:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   46528:	str	r0, [fp, #-12]
   4652c:	ldr	r3, [fp, #-12]
   46530:	cmp	r3, #0
   46534:	beq	4656c <flatcc_json_printer_int8_enum_field@@Base+0x70>
   46538:	ldr	r0, [fp, #-12]
   4653c:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   46540:	mov	r3, r0
   46544:	strb	r3, [fp, #-5]
   46548:	ldrsb	r2, [fp, #-5]
   4654c:	ldrsb	r3, [fp, #8]
   46550:	cmp	r2, r3
   46554:	bne	46584 <flatcc_json_printer_int8_enum_field@@Base+0x88>
   46558:	ldr	r3, [fp, #-16]
   4655c:	ldrb	r3, [r3, #28]
   46560:	cmp	r3, #0
   46564:	beq	46584 <flatcc_json_printer_int8_enum_field@@Base+0x88>
   46568:	b	46630 <flatcc_json_printer_int8_enum_field@@Base+0x134>
   4656c:	ldr	r3, [fp, #-16]
   46570:	ldrb	r3, [r3, #29]
   46574:	cmp	r3, #0
   46578:	beq	4662c <flatcc_json_printer_int8_enum_field@@Base+0x130>
   4657c:	ldrb	r3, [fp, #8]
   46580:	strb	r3, [fp, #-5]
   46584:	ldr	r3, [fp, #-20]	; 0xffffffec
   46588:	ldr	r3, [r3, #16]
   4658c:	add	r1, r3, #1
   46590:	ldr	r2, [fp, #-20]	; 0xffffffec
   46594:	str	r1, [r2, #16]
   46598:	cmp	r3, #0
   4659c:	beq	465bc <flatcc_json_printer_int8_enum_field@@Base+0xc0>
   465a0:	ldr	r3, [fp, #-16]
   465a4:	ldr	r3, [r3, #20]
   465a8:	add	r1, r3, #1
   465ac:	ldr	r2, [fp, #-16]
   465b0:	str	r1, [r2, #20]
   465b4:	mov	r2, #44	; 0x2c
   465b8:	strb	r2, [r3]
   465bc:	ldr	r3, [fp, #4]
   465c0:	mov	r2, r3
   465c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   465c8:	ldr	r0, [fp, #-16]
   465cc:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   465d0:	ldr	r3, [fp, #-16]
   465d4:	ldrb	r3, [r3, #27]
   465d8:	cmp	r3, #0
   465dc:	beq	46614 <flatcc_json_printer_int8_enum_field@@Base+0x118>
   465e0:	ldr	r3, [fp, #-16]
   465e4:	ldr	r2, [r3, #20]
   465e8:	ldrsb	r3, [fp, #-5]
   465ec:	mov	r1, r2
   465f0:	mov	r0, r3
   465f4:	bl	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x2164>
   465f8:	mov	r2, r0
   465fc:	ldr	r3, [fp, #-16]
   46600:	ldr	r3, [r3, #20]
   46604:	add	r2, r3, r2
   46608:	ldr	r3, [fp, #-16]
   4660c:	str	r2, [r3, #20]
   46610:	b	46630 <flatcc_json_printer_int8_enum_field@@Base+0x134>
   46614:	ldrsb	r2, [fp, #-5]
   46618:	ldr	r3, [fp, #12]
   4661c:	mov	r1, r2
   46620:	ldr	r0, [fp, #-16]
   46624:	blx	r3
   46628:	b	46630 <flatcc_json_printer_int8_enum_field@@Base+0x134>
   4662c:	nop	{0}
   46630:	sub	sp, fp, #4
   46634:	ldr	fp, [sp]
   46638:	add	sp, sp, #4
   4663c:	pop	{pc}		; (ldr pc, [sp], #4)

00046640 <flatcc_json_printer_int16_enum_field@@Base>:
   46640:	str	fp, [sp, #-8]!
   46644:	str	lr, [sp, #4]
   46648:	add	fp, sp, #4
   4664c:	sub	sp, sp, #24
   46650:	str	r0, [fp, #-16]
   46654:	str	r1, [fp, #-20]	; 0xffffffec
   46658:	str	r2, [fp, #-24]	; 0xffffffe8
   4665c:	str	r3, [fp, #-28]	; 0xffffffe4
   46660:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46664:	ldr	r0, [fp, #-20]	; 0xffffffec
   46668:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4666c:	str	r0, [fp, #-12]
   46670:	ldr	r3, [fp, #-12]
   46674:	cmp	r3, #0
   46678:	beq	466b0 <flatcc_json_printer_int16_enum_field@@Base+0x70>
   4667c:	ldr	r0, [fp, #-12]
   46680:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   46684:	mov	r3, r0
   46688:	strh	r3, [fp, #-6]
   4668c:	ldrsh	r2, [fp, #-6]
   46690:	ldrsh	r3, [fp, #8]
   46694:	cmp	r2, r3
   46698:	bne	466c8 <flatcc_json_printer_int16_enum_field@@Base+0x88>
   4669c:	ldr	r3, [fp, #-16]
   466a0:	ldrb	r3, [r3, #28]
   466a4:	cmp	r3, #0
   466a8:	beq	466c8 <flatcc_json_printer_int16_enum_field@@Base+0x88>
   466ac:	b	46774 <flatcc_json_printer_int16_enum_field@@Base+0x134>
   466b0:	ldr	r3, [fp, #-16]
   466b4:	ldrb	r3, [r3, #29]
   466b8:	cmp	r3, #0
   466bc:	beq	46770 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   466c0:	ldrh	r3, [fp, #8]
   466c4:	strh	r3, [fp, #-6]
   466c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   466cc:	ldr	r3, [r3, #16]
   466d0:	add	r1, r3, #1
   466d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   466d8:	str	r1, [r2, #16]
   466dc:	cmp	r3, #0
   466e0:	beq	46700 <flatcc_json_printer_int16_enum_field@@Base+0xc0>
   466e4:	ldr	r3, [fp, #-16]
   466e8:	ldr	r3, [r3, #20]
   466ec:	add	r1, r3, #1
   466f0:	ldr	r2, [fp, #-16]
   466f4:	str	r1, [r2, #20]
   466f8:	mov	r2, #44	; 0x2c
   466fc:	strb	r2, [r3]
   46700:	ldr	r3, [fp, #4]
   46704:	mov	r2, r3
   46708:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4670c:	ldr	r0, [fp, #-16]
   46710:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46714:	ldr	r3, [fp, #-16]
   46718:	ldrb	r3, [r3, #27]
   4671c:	cmp	r3, #0
   46720:	beq	46758 <flatcc_json_printer_int16_enum_field@@Base+0x118>
   46724:	ldr	r3, [fp, #-16]
   46728:	ldr	r2, [r3, #20]
   4672c:	ldrsh	r3, [fp, #-6]
   46730:	mov	r1, r2
   46734:	mov	r0, r3
   46738:	bl	40d40 <flatcc_json_parser_struct_as_root@@Base+0x21f0>
   4673c:	mov	r2, r0
   46740:	ldr	r3, [fp, #-16]
   46744:	ldr	r3, [r3, #20]
   46748:	add	r2, r3, r2
   4674c:	ldr	r3, [fp, #-16]
   46750:	str	r2, [r3, #20]
   46754:	b	46774 <flatcc_json_printer_int16_enum_field@@Base+0x134>
   46758:	ldrsh	r2, [fp, #-6]
   4675c:	ldr	r3, [fp, #12]
   46760:	mov	r1, r2
   46764:	ldr	r0, [fp, #-16]
   46768:	blx	r3
   4676c:	b	46774 <flatcc_json_printer_int16_enum_field@@Base+0x134>
   46770:	nop	{0}
   46774:	sub	sp, fp, #4
   46778:	ldr	fp, [sp]
   4677c:	add	sp, sp, #4
   46780:	pop	{pc}		; (ldr pc, [sp], #4)

00046784 <flatcc_json_printer_int32_enum_field@@Base>:
   46784:	str	fp, [sp, #-8]!
   46788:	str	lr, [sp, #4]
   4678c:	add	fp, sp, #4
   46790:	sub	sp, sp, #24
   46794:	str	r0, [fp, #-16]
   46798:	str	r1, [fp, #-20]	; 0xffffffec
   4679c:	str	r2, [fp, #-24]	; 0xffffffe8
   467a0:	str	r3, [fp, #-28]	; 0xffffffe4
   467a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   467a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   467ac:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   467b0:	str	r0, [fp, #-12]
   467b4:	ldr	r3, [fp, #-12]
   467b8:	cmp	r3, #0
   467bc:	beq	467f0 <flatcc_json_printer_int32_enum_field@@Base+0x6c>
   467c0:	ldr	r0, [fp, #-12]
   467c4:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   467c8:	str	r0, [fp, #-8]
   467cc:	ldr	r2, [fp, #-8]
   467d0:	ldr	r3, [fp, #8]
   467d4:	cmp	r2, r3
   467d8:	bne	46808 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   467dc:	ldr	r3, [fp, #-16]
   467e0:	ldrb	r3, [r3, #28]
   467e4:	cmp	r3, #0
   467e8:	beq	46808 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   467ec:	b	468ac <flatcc_json_printer_int32_enum_field@@Base+0x128>
   467f0:	ldr	r3, [fp, #-16]
   467f4:	ldrb	r3, [r3, #29]
   467f8:	cmp	r3, #0
   467fc:	beq	468a8 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   46800:	ldr	r3, [fp, #8]
   46804:	str	r3, [fp, #-8]
   46808:	ldr	r3, [fp, #-20]	; 0xffffffec
   4680c:	ldr	r3, [r3, #16]
   46810:	add	r1, r3, #1
   46814:	ldr	r2, [fp, #-20]	; 0xffffffec
   46818:	str	r1, [r2, #16]
   4681c:	cmp	r3, #0
   46820:	beq	46840 <flatcc_json_printer_int32_enum_field@@Base+0xbc>
   46824:	ldr	r3, [fp, #-16]
   46828:	ldr	r3, [r3, #20]
   4682c:	add	r1, r3, #1
   46830:	ldr	r2, [fp, #-16]
   46834:	str	r1, [r2, #20]
   46838:	mov	r2, #44	; 0x2c
   4683c:	strb	r2, [r3]
   46840:	ldr	r3, [fp, #4]
   46844:	mov	r2, r3
   46848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4684c:	ldr	r0, [fp, #-16]
   46850:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46854:	ldr	r3, [fp, #-16]
   46858:	ldrb	r3, [r3, #27]
   4685c:	cmp	r3, #0
   46860:	beq	46894 <flatcc_json_printer_int32_enum_field@@Base+0x110>
   46864:	ldr	r3, [fp, #-16]
   46868:	ldr	r3, [r3, #20]
   4686c:	mov	r1, r3
   46870:	ldr	r0, [fp, #-8]
   46874:	bl	40dcc <flatcc_json_parser_struct_as_root@@Base+0x227c>
   46878:	mov	r2, r0
   4687c:	ldr	r3, [fp, #-16]
   46880:	ldr	r3, [r3, #20]
   46884:	add	r2, r3, r2
   46888:	ldr	r3, [fp, #-16]
   4688c:	str	r2, [r3, #20]
   46890:	b	468ac <flatcc_json_printer_int32_enum_field@@Base+0x128>
   46894:	ldr	r3, [fp, #12]
   46898:	ldr	r1, [fp, #-8]
   4689c:	ldr	r0, [fp, #-16]
   468a0:	blx	r3
   468a4:	b	468ac <flatcc_json_printer_int32_enum_field@@Base+0x128>
   468a8:	nop	{0}
   468ac:	sub	sp, fp, #4
   468b0:	ldr	fp, [sp]
   468b4:	add	sp, sp, #4
   468b8:	pop	{pc}		; (ldr pc, [sp], #4)

000468bc <flatcc_json_printer_int64_enum_field@@Base>:
   468bc:	str	fp, [sp, #-8]!
   468c0:	str	lr, [sp, #4]
   468c4:	add	fp, sp, #4
   468c8:	sub	sp, sp, #32
   468cc:	str	r0, [fp, #-24]	; 0xffffffe8
   468d0:	str	r1, [fp, #-28]	; 0xffffffe4
   468d4:	str	r2, [fp, #-32]	; 0xffffffe0
   468d8:	str	r3, [fp, #-36]	; 0xffffffdc
   468dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   468e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   468e4:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   468e8:	str	r0, [fp, #-16]
   468ec:	ldr	r3, [fp, #-16]
   468f0:	cmp	r3, #0
   468f4:	beq	4692c <flatcc_json_printer_int64_enum_field@@Base+0x70>
   468f8:	ldr	r0, [fp, #-16]
   468fc:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   46900:	strd	r0, [fp, #-12]
   46904:	ldrd	r0, [fp, #-12]
   46908:	ldrd	r2, [fp, #12]
   4690c:	cmp	r1, r3
   46910:	cmpeq	r0, r2
   46914:	bne	46944 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   46918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4691c:	ldrb	r3, [r3, #28]
   46920:	cmp	r3, #0
   46924:	beq	46944 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   46928:	b	469e8 <flatcc_json_printer_int64_enum_field@@Base+0x12c>
   4692c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46930:	ldrb	r3, [r3, #29]
   46934:	cmp	r3, #0
   46938:	beq	469e4 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   4693c:	ldrd	r2, [fp, #12]
   46940:	strd	r2, [fp, #-12]
   46944:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46948:	ldr	r3, [r3, #16]
   4694c:	add	r1, r3, #1
   46950:	ldr	r2, [fp, #-28]	; 0xffffffe4
   46954:	str	r1, [r2, #16]
   46958:	cmp	r3, #0
   4695c:	beq	4697c <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   46960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46964:	ldr	r3, [r3, #20]
   46968:	add	r1, r3, #1
   4696c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46970:	str	r1, [r2, #20]
   46974:	mov	r2, #44	; 0x2c
   46978:	strb	r2, [r3]
   4697c:	ldr	r3, [fp, #4]
   46980:	mov	r2, r3
   46984:	ldr	r1, [fp, #-36]	; 0xffffffdc
   46988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4698c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46994:	ldrb	r3, [r3, #27]
   46998:	cmp	r3, #0
   4699c:	beq	469d0 <flatcc_json_printer_int64_enum_field@@Base+0x114>
   469a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   469a4:	ldr	r3, [r3, #20]
   469a8:	mov	r2, r3
   469ac:	ldrd	r0, [fp, #-12]
   469b0:	bl	40e50 <flatcc_json_parser_struct_as_root@@Base+0x2300>
   469b4:	mov	r2, r0
   469b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   469bc:	ldr	r3, [r3, #20]
   469c0:	add	r2, r3, r2
   469c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   469c8:	str	r2, [r3, #20]
   469cc:	b	469e8 <flatcc_json_printer_int64_enum_field@@Base+0x12c>
   469d0:	ldr	r1, [fp, #20]
   469d4:	ldrd	r2, [fp, #-12]
   469d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   469dc:	blx	r1
   469e0:	b	469e8 <flatcc_json_printer_int64_enum_field@@Base+0x12c>
   469e4:	nop	{0}
   469e8:	sub	sp, fp, #4
   469ec:	ldr	fp, [sp]
   469f0:	add	sp, sp, #4
   469f4:	pop	{pc}		; (ldr pc, [sp], #4)

000469f8 <flatcc_json_printer_bool_enum_field@@Base>:
   469f8:	str	fp, [sp, #-8]!
   469fc:	str	lr, [sp, #4]
   46a00:	add	fp, sp, #4
   46a04:	sub	sp, sp, #24
   46a08:	str	r0, [fp, #-16]
   46a0c:	str	r1, [fp, #-20]	; 0xffffffec
   46a10:	str	r2, [fp, #-24]	; 0xffffffe8
   46a14:	str	r3, [fp, #-28]	; 0xffffffe4
   46a18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46a1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   46a20:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   46a24:	str	r0, [fp, #-12]
   46a28:	ldr	r3, [fp, #-12]
   46a2c:	cmp	r3, #0
   46a30:	beq	46a68 <flatcc_json_printer_bool_enum_field@@Base+0x70>
   46a34:	ldr	r0, [fp, #-12]
   46a38:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   46a3c:	mov	r3, r0
   46a40:	strb	r3, [fp, #-5]
   46a44:	ldrb	r2, [fp, #-5]
   46a48:	ldrb	r3, [fp, #8]
   46a4c:	cmp	r2, r3
   46a50:	bne	46a80 <flatcc_json_printer_bool_enum_field@@Base+0x88>
   46a54:	ldr	r3, [fp, #-16]
   46a58:	ldrb	r3, [r3, #28]
   46a5c:	cmp	r3, #0
   46a60:	beq	46a80 <flatcc_json_printer_bool_enum_field@@Base+0x88>
   46a64:	b	46b2c <flatcc_json_printer_bool_enum_field@@Base+0x134>
   46a68:	ldr	r3, [fp, #-16]
   46a6c:	ldrb	r3, [r3, #29]
   46a70:	cmp	r3, #0
   46a74:	beq	46b28 <flatcc_json_printer_bool_enum_field@@Base+0x130>
   46a78:	ldrb	r3, [fp, #8]
   46a7c:	strb	r3, [fp, #-5]
   46a80:	ldr	r3, [fp, #-20]	; 0xffffffec
   46a84:	ldr	r3, [r3, #16]
   46a88:	add	r1, r3, #1
   46a8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   46a90:	str	r1, [r2, #16]
   46a94:	cmp	r3, #0
   46a98:	beq	46ab8 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   46a9c:	ldr	r3, [fp, #-16]
   46aa0:	ldr	r3, [r3, #20]
   46aa4:	add	r1, r3, #1
   46aa8:	ldr	r2, [fp, #-16]
   46aac:	str	r1, [r2, #20]
   46ab0:	mov	r2, #44	; 0x2c
   46ab4:	strb	r2, [r3]
   46ab8:	ldr	r3, [fp, #4]
   46abc:	mov	r2, r3
   46ac0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46ac4:	ldr	r0, [fp, #-16]
   46ac8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46acc:	ldr	r3, [fp, #-16]
   46ad0:	ldrb	r3, [r3, #27]
   46ad4:	cmp	r3, #0
   46ad8:	beq	46b10 <flatcc_json_printer_bool_enum_field@@Base+0x118>
   46adc:	ldrb	r2, [fp, #-5]
   46ae0:	ldr	r3, [fp, #-16]
   46ae4:	ldr	r3, [r3, #20]
   46ae8:	mov	r1, r3
   46aec:	mov	r0, r2
   46af0:	bl	3f3bc <flatcc_json_parser_struct_as_root@@Base+0x86c>
   46af4:	mov	r2, r0
   46af8:	ldr	r3, [fp, #-16]
   46afc:	ldr	r3, [r3, #20]
   46b00:	add	r2, r3, r2
   46b04:	ldr	r3, [fp, #-16]
   46b08:	str	r2, [r3, #20]
   46b0c:	b	46b2c <flatcc_json_printer_bool_enum_field@@Base+0x134>
   46b10:	ldrb	r2, [fp, #-5]
   46b14:	ldr	r3, [fp, #12]
   46b18:	mov	r1, r2
   46b1c:	ldr	r0, [fp, #-16]
   46b20:	blx	r3
   46b24:	b	46b2c <flatcc_json_printer_bool_enum_field@@Base+0x134>
   46b28:	nop	{0}
   46b2c:	sub	sp, fp, #4
   46b30:	ldr	fp, [sp]
   46b34:	add	sp, sp, #4
   46b38:	pop	{pc}		; (ldr pc, [sp], #4)

00046b3c <flatcc_json_printer_uint8_struct_field@@Base>:
   46b3c:	str	fp, [sp, #-8]!
   46b40:	str	lr, [sp, #4]
   46b44:	add	fp, sp, #4
   46b48:	sub	sp, sp, #24
   46b4c:	str	r0, [fp, #-16]
   46b50:	str	r1, [fp, #-20]	; 0xffffffec
   46b54:	str	r2, [fp, #-24]	; 0xffffffe8
   46b58:	str	r3, [fp, #-28]	; 0xffffffe4
   46b5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46b60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46b64:	add	r3, r2, r3
   46b68:	mov	r0, r3
   46b6c:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   46b70:	mov	r3, r0
   46b74:	strb	r3, [fp, #-5]
   46b78:	ldr	r3, [fp, #-20]	; 0xffffffec
   46b7c:	cmp	r3, #0
   46b80:	beq	46ba0 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   46b84:	ldr	r3, [fp, #-16]
   46b88:	ldr	r3, [r3, #20]
   46b8c:	add	r1, r3, #1
   46b90:	ldr	r2, [fp, #-16]
   46b94:	str	r1, [r2, #20]
   46b98:	mov	r2, #44	; 0x2c
   46b9c:	strb	r2, [r3]
   46ba0:	ldr	r3, [fp, #8]
   46ba4:	mov	r2, r3
   46ba8:	ldr	r1, [fp, #4]
   46bac:	ldr	r0, [fp, #-16]
   46bb0:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46bb4:	ldr	r3, [fp, #-16]
   46bb8:	ldr	r2, [r3, #20]
   46bbc:	ldrb	r3, [fp, #-5]
   46bc0:	mov	r1, r2
   46bc4:	mov	r0, r3
   46bc8:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   46bcc:	mov	r2, r0
   46bd0:	ldr	r3, [fp, #-16]
   46bd4:	ldr	r3, [r3, #20]
   46bd8:	add	r2, r3, r2
   46bdc:	ldr	r3, [fp, #-16]
   46be0:	str	r2, [r3, #20]
   46be4:	nop	{0}
   46be8:	sub	sp, fp, #4
   46bec:	ldr	fp, [sp]
   46bf0:	add	sp, sp, #4
   46bf4:	pop	{pc}		; (ldr pc, [sp], #4)

00046bf8 <flatcc_json_printer_uint16_struct_field@@Base>:
   46bf8:	str	fp, [sp, #-8]!
   46bfc:	str	lr, [sp, #4]
   46c00:	add	fp, sp, #4
   46c04:	sub	sp, sp, #24
   46c08:	str	r0, [fp, #-16]
   46c0c:	str	r1, [fp, #-20]	; 0xffffffec
   46c10:	str	r2, [fp, #-24]	; 0xffffffe8
   46c14:	str	r3, [fp, #-28]	; 0xffffffe4
   46c18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46c1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46c20:	add	r3, r2, r3
   46c24:	mov	r0, r3
   46c28:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   46c2c:	mov	r3, r0
   46c30:	strh	r3, [fp, #-6]
   46c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   46c38:	cmp	r3, #0
   46c3c:	beq	46c5c <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   46c40:	ldr	r3, [fp, #-16]
   46c44:	ldr	r3, [r3, #20]
   46c48:	add	r1, r3, #1
   46c4c:	ldr	r2, [fp, #-16]
   46c50:	str	r1, [r2, #20]
   46c54:	mov	r2, #44	; 0x2c
   46c58:	strb	r2, [r3]
   46c5c:	ldr	r3, [fp, #8]
   46c60:	mov	r2, r3
   46c64:	ldr	r1, [fp, #4]
   46c68:	ldr	r0, [fp, #-16]
   46c6c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46c70:	ldr	r3, [fp, #-16]
   46c74:	ldr	r2, [r3, #20]
   46c78:	ldrh	r3, [fp, #-6]
   46c7c:	mov	r1, r2
   46c80:	mov	r0, r3
   46c84:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   46c88:	mov	r2, r0
   46c8c:	ldr	r3, [fp, #-16]
   46c90:	ldr	r3, [r3, #20]
   46c94:	add	r2, r3, r2
   46c98:	ldr	r3, [fp, #-16]
   46c9c:	str	r2, [r3, #20]
   46ca0:	nop	{0}
   46ca4:	sub	sp, fp, #4
   46ca8:	ldr	fp, [sp]
   46cac:	add	sp, sp, #4
   46cb0:	pop	{pc}		; (ldr pc, [sp], #4)

00046cb4 <flatcc_json_printer_uint32_struct_field@@Base>:
   46cb4:	str	fp, [sp, #-8]!
   46cb8:	str	lr, [sp, #4]
   46cbc:	add	fp, sp, #4
   46cc0:	sub	sp, sp, #24
   46cc4:	str	r0, [fp, #-16]
   46cc8:	str	r1, [fp, #-20]	; 0xffffffec
   46ccc:	str	r2, [fp, #-24]	; 0xffffffe8
   46cd0:	str	r3, [fp, #-28]	; 0xffffffe4
   46cd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46cd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46cdc:	add	r3, r2, r3
   46ce0:	mov	r0, r3
   46ce4:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   46ce8:	str	r0, [fp, #-8]
   46cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   46cf0:	cmp	r3, #0
   46cf4:	beq	46d14 <flatcc_json_printer_uint32_struct_field@@Base+0x60>
   46cf8:	ldr	r3, [fp, #-16]
   46cfc:	ldr	r3, [r3, #20]
   46d00:	add	r1, r3, #1
   46d04:	ldr	r2, [fp, #-16]
   46d08:	str	r1, [r2, #20]
   46d0c:	mov	r2, #44	; 0x2c
   46d10:	strb	r2, [r3]
   46d14:	ldr	r3, [fp, #8]
   46d18:	mov	r2, r3
   46d1c:	ldr	r1, [fp, #4]
   46d20:	ldr	r0, [fp, #-16]
   46d24:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46d28:	ldr	r3, [fp, #-16]
   46d2c:	ldr	r3, [r3, #20]
   46d30:	mov	r1, r3
   46d34:	ldr	r0, [fp, #-8]
   46d38:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   46d3c:	mov	r2, r0
   46d40:	ldr	r3, [fp, #-16]
   46d44:	ldr	r3, [r3, #20]
   46d48:	add	r2, r3, r2
   46d4c:	ldr	r3, [fp, #-16]
   46d50:	str	r2, [r3, #20]
   46d54:	nop	{0}
   46d58:	sub	sp, fp, #4
   46d5c:	ldr	fp, [sp]
   46d60:	add	sp, sp, #4
   46d64:	pop	{pc}		; (ldr pc, [sp], #4)

00046d68 <flatcc_json_printer_uint64_struct_field@@Base>:
   46d68:	str	fp, [sp, #-8]!
   46d6c:	str	lr, [sp, #4]
   46d70:	add	fp, sp, #4
   46d74:	sub	sp, sp, #24
   46d78:	str	r0, [fp, #-16]
   46d7c:	str	r1, [fp, #-20]	; 0xffffffec
   46d80:	str	r2, [fp, #-24]	; 0xffffffe8
   46d84:	str	r3, [fp, #-28]	; 0xffffffe4
   46d88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46d90:	add	r3, r2, r3
   46d94:	mov	r0, r3
   46d98:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   46d9c:	strd	r0, [fp, #-12]
   46da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   46da4:	cmp	r3, #0
   46da8:	beq	46dc8 <flatcc_json_printer_uint64_struct_field@@Base+0x60>
   46dac:	ldr	r3, [fp, #-16]
   46db0:	ldr	r3, [r3, #20]
   46db4:	add	r1, r3, #1
   46db8:	ldr	r2, [fp, #-16]
   46dbc:	str	r1, [r2, #20]
   46dc0:	mov	r2, #44	; 0x2c
   46dc4:	strb	r2, [r3]
   46dc8:	ldr	r3, [fp, #8]
   46dcc:	mov	r2, r3
   46dd0:	ldr	r1, [fp, #4]
   46dd4:	ldr	r0, [fp, #-16]
   46dd8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46ddc:	ldr	r3, [fp, #-16]
   46de0:	ldr	r3, [r3, #20]
   46de4:	mov	r2, r3
   46de8:	ldrd	r0, [fp, #-12]
   46dec:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   46df0:	mov	r2, r0
   46df4:	ldr	r3, [fp, #-16]
   46df8:	ldr	r3, [r3, #20]
   46dfc:	add	r2, r3, r2
   46e00:	ldr	r3, [fp, #-16]
   46e04:	str	r2, [r3, #20]
   46e08:	nop	{0}
   46e0c:	sub	sp, fp, #4
   46e10:	ldr	fp, [sp]
   46e14:	add	sp, sp, #4
   46e18:	pop	{pc}		; (ldr pc, [sp], #4)

00046e1c <flatcc_json_printer_int8_struct_field@@Base>:
   46e1c:	str	fp, [sp, #-8]!
   46e20:	str	lr, [sp, #4]
   46e24:	add	fp, sp, #4
   46e28:	sub	sp, sp, #24
   46e2c:	str	r0, [fp, #-16]
   46e30:	str	r1, [fp, #-20]	; 0xffffffec
   46e34:	str	r2, [fp, #-24]	; 0xffffffe8
   46e38:	str	r3, [fp, #-28]	; 0xffffffe4
   46e3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46e44:	add	r3, r2, r3
   46e48:	mov	r0, r3
   46e4c:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   46e50:	mov	r3, r0
   46e54:	strb	r3, [fp, #-5]
   46e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   46e5c:	cmp	r3, #0
   46e60:	beq	46e80 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   46e64:	ldr	r3, [fp, #-16]
   46e68:	ldr	r3, [r3, #20]
   46e6c:	add	r1, r3, #1
   46e70:	ldr	r2, [fp, #-16]
   46e74:	str	r1, [r2, #20]
   46e78:	mov	r2, #44	; 0x2c
   46e7c:	strb	r2, [r3]
   46e80:	ldr	r3, [fp, #8]
   46e84:	mov	r2, r3
   46e88:	ldr	r1, [fp, #4]
   46e8c:	ldr	r0, [fp, #-16]
   46e90:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46e94:	ldr	r3, [fp, #-16]
   46e98:	ldr	r2, [r3, #20]
   46e9c:	ldrsb	r3, [fp, #-5]
   46ea0:	mov	r1, r2
   46ea4:	mov	r0, r3
   46ea8:	bl	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x2164>
   46eac:	mov	r2, r0
   46eb0:	ldr	r3, [fp, #-16]
   46eb4:	ldr	r3, [r3, #20]
   46eb8:	add	r2, r3, r2
   46ebc:	ldr	r3, [fp, #-16]
   46ec0:	str	r2, [r3, #20]
   46ec4:	nop	{0}
   46ec8:	sub	sp, fp, #4
   46ecc:	ldr	fp, [sp]
   46ed0:	add	sp, sp, #4
   46ed4:	pop	{pc}		; (ldr pc, [sp], #4)

00046ed8 <flatcc_json_printer_int16_struct_field@@Base>:
   46ed8:	str	fp, [sp, #-8]!
   46edc:	str	lr, [sp, #4]
   46ee0:	add	fp, sp, #4
   46ee4:	sub	sp, sp, #24
   46ee8:	str	r0, [fp, #-16]
   46eec:	str	r1, [fp, #-20]	; 0xffffffec
   46ef0:	str	r2, [fp, #-24]	; 0xffffffe8
   46ef4:	str	r3, [fp, #-28]	; 0xffffffe4
   46ef8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46efc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46f00:	add	r3, r2, r3
   46f04:	mov	r0, r3
   46f08:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   46f0c:	mov	r3, r0
   46f10:	strh	r3, [fp, #-6]
   46f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   46f18:	cmp	r3, #0
   46f1c:	beq	46f3c <flatcc_json_printer_int16_struct_field@@Base+0x64>
   46f20:	ldr	r3, [fp, #-16]
   46f24:	ldr	r3, [r3, #20]
   46f28:	add	r1, r3, #1
   46f2c:	ldr	r2, [fp, #-16]
   46f30:	str	r1, [r2, #20]
   46f34:	mov	r2, #44	; 0x2c
   46f38:	strb	r2, [r3]
   46f3c:	ldr	r3, [fp, #8]
   46f40:	mov	r2, r3
   46f44:	ldr	r1, [fp, #4]
   46f48:	ldr	r0, [fp, #-16]
   46f4c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   46f50:	ldr	r3, [fp, #-16]
   46f54:	ldr	r2, [r3, #20]
   46f58:	ldrsh	r3, [fp, #-6]
   46f5c:	mov	r1, r2
   46f60:	mov	r0, r3
   46f64:	bl	40d40 <flatcc_json_parser_struct_as_root@@Base+0x21f0>
   46f68:	mov	r2, r0
   46f6c:	ldr	r3, [fp, #-16]
   46f70:	ldr	r3, [r3, #20]
   46f74:	add	r2, r3, r2
   46f78:	ldr	r3, [fp, #-16]
   46f7c:	str	r2, [r3, #20]
   46f80:	nop	{0}
   46f84:	sub	sp, fp, #4
   46f88:	ldr	fp, [sp]
   46f8c:	add	sp, sp, #4
   46f90:	pop	{pc}		; (ldr pc, [sp], #4)

00046f94 <flatcc_json_printer_int32_struct_field@@Base>:
   46f94:	str	fp, [sp, #-8]!
   46f98:	str	lr, [sp, #4]
   46f9c:	add	fp, sp, #4
   46fa0:	sub	sp, sp, #24
   46fa4:	str	r0, [fp, #-16]
   46fa8:	str	r1, [fp, #-20]	; 0xffffffec
   46fac:	str	r2, [fp, #-24]	; 0xffffffe8
   46fb0:	str	r3, [fp, #-28]	; 0xffffffe4
   46fb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46fb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46fbc:	add	r3, r2, r3
   46fc0:	mov	r0, r3
   46fc4:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   46fc8:	str	r0, [fp, #-8]
   46fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   46fd0:	cmp	r3, #0
   46fd4:	beq	46ff4 <flatcc_json_printer_int32_struct_field@@Base+0x60>
   46fd8:	ldr	r3, [fp, #-16]
   46fdc:	ldr	r3, [r3, #20]
   46fe0:	add	r1, r3, #1
   46fe4:	ldr	r2, [fp, #-16]
   46fe8:	str	r1, [r2, #20]
   46fec:	mov	r2, #44	; 0x2c
   46ff0:	strb	r2, [r3]
   46ff4:	ldr	r3, [fp, #8]
   46ff8:	mov	r2, r3
   46ffc:	ldr	r1, [fp, #4]
   47000:	ldr	r0, [fp, #-16]
   47004:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47008:	ldr	r3, [fp, #-16]
   4700c:	ldr	r3, [r3, #20]
   47010:	mov	r1, r3
   47014:	ldr	r0, [fp, #-8]
   47018:	bl	40dcc <flatcc_json_parser_struct_as_root@@Base+0x227c>
   4701c:	mov	r2, r0
   47020:	ldr	r3, [fp, #-16]
   47024:	ldr	r3, [r3, #20]
   47028:	add	r2, r3, r2
   4702c:	ldr	r3, [fp, #-16]
   47030:	str	r2, [r3, #20]
   47034:	nop	{0}
   47038:	sub	sp, fp, #4
   4703c:	ldr	fp, [sp]
   47040:	add	sp, sp, #4
   47044:	pop	{pc}		; (ldr pc, [sp], #4)

00047048 <flatcc_json_printer_int64_struct_field@@Base>:
   47048:	str	fp, [sp, #-8]!
   4704c:	str	lr, [sp, #4]
   47050:	add	fp, sp, #4
   47054:	sub	sp, sp, #24
   47058:	str	r0, [fp, #-16]
   4705c:	str	r1, [fp, #-20]	; 0xffffffec
   47060:	str	r2, [fp, #-24]	; 0xffffffe8
   47064:	str	r3, [fp, #-28]	; 0xffffffe4
   47068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4706c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47070:	add	r3, r2, r3
   47074:	mov	r0, r3
   47078:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   4707c:	strd	r0, [fp, #-12]
   47080:	ldr	r3, [fp, #-20]	; 0xffffffec
   47084:	cmp	r3, #0
   47088:	beq	470a8 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   4708c:	ldr	r3, [fp, #-16]
   47090:	ldr	r3, [r3, #20]
   47094:	add	r1, r3, #1
   47098:	ldr	r2, [fp, #-16]
   4709c:	str	r1, [r2, #20]
   470a0:	mov	r2, #44	; 0x2c
   470a4:	strb	r2, [r3]
   470a8:	ldr	r3, [fp, #8]
   470ac:	mov	r2, r3
   470b0:	ldr	r1, [fp, #4]
   470b4:	ldr	r0, [fp, #-16]
   470b8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   470bc:	ldr	r3, [fp, #-16]
   470c0:	ldr	r3, [r3, #20]
   470c4:	mov	r2, r3
   470c8:	ldrd	r0, [fp, #-12]
   470cc:	bl	40e50 <flatcc_json_parser_struct_as_root@@Base+0x2300>
   470d0:	mov	r2, r0
   470d4:	ldr	r3, [fp, #-16]
   470d8:	ldr	r3, [r3, #20]
   470dc:	add	r2, r3, r2
   470e0:	ldr	r3, [fp, #-16]
   470e4:	str	r2, [r3, #20]
   470e8:	nop	{0}
   470ec:	sub	sp, fp, #4
   470f0:	ldr	fp, [sp]
   470f4:	add	sp, sp, #4
   470f8:	pop	{pc}		; (ldr pc, [sp], #4)

000470fc <flatcc_json_printer_bool_struct_field@@Base>:
   470fc:	str	fp, [sp, #-8]!
   47100:	str	lr, [sp, #4]
   47104:	add	fp, sp, #4
   47108:	sub	sp, sp, #24
   4710c:	str	r0, [fp, #-16]
   47110:	str	r1, [fp, #-20]	; 0xffffffec
   47114:	str	r2, [fp, #-24]	; 0xffffffe8
   47118:	str	r3, [fp, #-28]	; 0xffffffe4
   4711c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47124:	add	r3, r2, r3
   47128:	mov	r0, r3
   4712c:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   47130:	mov	r3, r0
   47134:	strb	r3, [fp, #-5]
   47138:	ldr	r3, [fp, #-20]	; 0xffffffec
   4713c:	cmp	r3, #0
   47140:	beq	47160 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   47144:	ldr	r3, [fp, #-16]
   47148:	ldr	r3, [r3, #20]
   4714c:	add	r1, r3, #1
   47150:	ldr	r2, [fp, #-16]
   47154:	str	r1, [r2, #20]
   47158:	mov	r2, #44	; 0x2c
   4715c:	strb	r2, [r3]
   47160:	ldr	r3, [fp, #8]
   47164:	mov	r2, r3
   47168:	ldr	r1, [fp, #4]
   4716c:	ldr	r0, [fp, #-16]
   47170:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47174:	ldrb	r2, [fp, #-5]
   47178:	ldr	r3, [fp, #-16]
   4717c:	ldr	r3, [r3, #20]
   47180:	mov	r1, r3
   47184:	mov	r0, r2
   47188:	bl	3f3bc <flatcc_json_parser_struct_as_root@@Base+0x86c>
   4718c:	mov	r2, r0
   47190:	ldr	r3, [fp, #-16]
   47194:	ldr	r3, [r3, #20]
   47198:	add	r2, r3, r2
   4719c:	ldr	r3, [fp, #-16]
   471a0:	str	r2, [r3, #20]
   471a4:	nop	{0}
   471a8:	sub	sp, fp, #4
   471ac:	ldr	fp, [sp]
   471b0:	add	sp, sp, #4
   471b4:	pop	{pc}		; (ldr pc, [sp], #4)

000471b8 <flatcc_json_printer_float_struct_field@@Base>:
   471b8:	str	fp, [sp, #-8]!
   471bc:	str	lr, [sp, #4]
   471c0:	add	fp, sp, #4
   471c4:	sub	sp, sp, #24
   471c8:	str	r0, [fp, #-16]
   471cc:	str	r1, [fp, #-20]	; 0xffffffec
   471d0:	str	r2, [fp, #-24]	; 0xffffffe8
   471d4:	str	r3, [fp, #-28]	; 0xffffffe4
   471d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   471dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   471e0:	add	r3, r2, r3
   471e4:	mov	r0, r3
   471e8:	bl	3efe0 <flatcc_json_parser_struct_as_root@@Base+0x490>
   471ec:	vstr	s0, [fp, #-8]
   471f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   471f4:	cmp	r3, #0
   471f8:	beq	47218 <flatcc_json_printer_float_struct_field@@Base+0x60>
   471fc:	ldr	r3, [fp, #-16]
   47200:	ldr	r3, [r3, #20]
   47204:	add	r1, r3, #1
   47208:	ldr	r2, [fp, #-16]
   4720c:	str	r1, [r2, #20]
   47210:	mov	r2, #44	; 0x2c
   47214:	strb	r2, [r3]
   47218:	ldr	r3, [fp, #8]
   4721c:	mov	r2, r3
   47220:	ldr	r1, [fp, #4]
   47224:	ldr	r0, [fp, #-16]
   47228:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4722c:	vldr	s15, [fp, #-8]
   47230:	vcvt.f64.f32	d7, s15
   47234:	ldr	r3, [fp, #-16]
   47238:	ldr	r3, [r3, #20]
   4723c:	mov	r0, r3
   47240:	vmov.f64	d0, d7
   47244:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   47248:	mov	r2, r0
   4724c:	ldr	r3, [fp, #-16]
   47250:	ldr	r3, [r3, #20]
   47254:	add	r2, r3, r2
   47258:	ldr	r3, [fp, #-16]
   4725c:	str	r2, [r3, #20]
   47260:	nop	{0}
   47264:	sub	sp, fp, #4
   47268:	ldr	fp, [sp]
   4726c:	add	sp, sp, #4
   47270:	pop	{pc}		; (ldr pc, [sp], #4)

00047274 <flatcc_json_printer_double_struct_field@@Base>:
   47274:	str	fp, [sp, #-8]!
   47278:	str	lr, [sp, #4]
   4727c:	add	fp, sp, #4
   47280:	sub	sp, sp, #24
   47284:	str	r0, [fp, #-16]
   47288:	str	r1, [fp, #-20]	; 0xffffffec
   4728c:	str	r2, [fp, #-24]	; 0xffffffe8
   47290:	str	r3, [fp, #-28]	; 0xffffffe4
   47294:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47298:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4729c:	add	r3, r2, r3
   472a0:	mov	r0, r3
   472a4:	bl	3f054 <flatcc_json_parser_struct_as_root@@Base+0x504>
   472a8:	vstr	d0, [fp, #-12]
   472ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   472b0:	cmp	r3, #0
   472b4:	beq	472d4 <flatcc_json_printer_double_struct_field@@Base+0x60>
   472b8:	ldr	r3, [fp, #-16]
   472bc:	ldr	r3, [r3, #20]
   472c0:	add	r1, r3, #1
   472c4:	ldr	r2, [fp, #-16]
   472c8:	str	r1, [r2, #20]
   472cc:	mov	r2, #44	; 0x2c
   472d0:	strb	r2, [r3]
   472d4:	ldr	r3, [fp, #8]
   472d8:	mov	r2, r3
   472dc:	ldr	r1, [fp, #4]
   472e0:	ldr	r0, [fp, #-16]
   472e4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   472e8:	ldr	r3, [fp, #-16]
   472ec:	ldr	r3, [r3, #20]
   472f0:	mov	r0, r3
   472f4:	vldr	d0, [fp, #-12]
   472f8:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   472fc:	mov	r2, r0
   47300:	ldr	r3, [fp, #-16]
   47304:	ldr	r3, [r3, #20]
   47308:	add	r2, r3, r2
   4730c:	ldr	r3, [fp, #-16]
   47310:	str	r2, [r3, #20]
   47314:	nop	{0}
   47318:	sub	sp, fp, #4
   4731c:	ldr	fp, [sp]
   47320:	add	sp, sp, #4
   47324:	pop	{pc}		; (ldr pc, [sp], #4)

00047328 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   47328:	str	fp, [sp, #-8]!
   4732c:	str	lr, [sp, #4]
   47330:	add	fp, sp, #4
   47334:	sub	sp, sp, #24
   47338:	str	r0, [fp, #-16]
   4733c:	str	r1, [fp, #-20]	; 0xffffffec
   47340:	str	r2, [fp, #-24]	; 0xffffffe8
   47344:	str	r3, [fp, #-28]	; 0xffffffe4
   47348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4734c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47350:	add	r3, r2, r3
   47354:	mov	r0, r3
   47358:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   4735c:	mov	r3, r0
   47360:	strb	r3, [fp, #-5]
   47364:	ldr	r3, [fp, #-20]	; 0xffffffec
   47368:	cmp	r3, #0
   4736c:	beq	4738c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   47370:	ldr	r3, [fp, #-16]
   47374:	ldr	r3, [r3, #20]
   47378:	add	r1, r3, #1
   4737c:	ldr	r2, [fp, #-16]
   47380:	str	r1, [r2, #20]
   47384:	mov	r2, #44	; 0x2c
   47388:	strb	r2, [r3]
   4738c:	ldr	r3, [fp, #8]
   47390:	mov	r2, r3
   47394:	ldr	r1, [fp, #4]
   47398:	ldr	r0, [fp, #-16]
   4739c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   473a0:	ldr	r3, [fp, #-16]
   473a4:	ldrb	r3, [r3, #27]
   473a8:	cmp	r3, #0
   473ac:	beq	473e4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbc>
   473b0:	ldr	r3, [fp, #-16]
   473b4:	ldr	r2, [r3, #20]
   473b8:	ldrb	r3, [fp, #-5]
   473bc:	mov	r1, r2
   473c0:	mov	r0, r3
   473c4:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   473c8:	mov	r2, r0
   473cc:	ldr	r3, [fp, #-16]
   473d0:	ldr	r3, [r3, #20]
   473d4:	add	r2, r3, r2
   473d8:	ldr	r3, [fp, #-16]
   473dc:	str	r2, [r3, #20]
   473e0:	b	473f8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd0>
   473e4:	ldrb	r2, [fp, #-5]
   473e8:	ldr	r3, [fp, #12]
   473ec:	mov	r1, r2
   473f0:	ldr	r0, [fp, #-16]
   473f4:	blx	r3
   473f8:	nop	{0}
   473fc:	sub	sp, fp, #4
   47400:	ldr	fp, [sp]
   47404:	add	sp, sp, #4
   47408:	pop	{pc}		; (ldr pc, [sp], #4)

0004740c <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   4740c:	str	fp, [sp, #-8]!
   47410:	str	lr, [sp, #4]
   47414:	add	fp, sp, #4
   47418:	sub	sp, sp, #24
   4741c:	str	r0, [fp, #-16]
   47420:	str	r1, [fp, #-20]	; 0xffffffec
   47424:	str	r2, [fp, #-24]	; 0xffffffe8
   47428:	str	r3, [fp, #-28]	; 0xffffffe4
   4742c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47434:	add	r3, r2, r3
   47438:	mov	r0, r3
   4743c:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   47440:	mov	r3, r0
   47444:	strh	r3, [fp, #-6]
   47448:	ldr	r3, [fp, #-20]	; 0xffffffec
   4744c:	cmp	r3, #0
   47450:	beq	47470 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x64>
   47454:	ldr	r3, [fp, #-16]
   47458:	ldr	r3, [r3, #20]
   4745c:	add	r1, r3, #1
   47460:	ldr	r2, [fp, #-16]
   47464:	str	r1, [r2, #20]
   47468:	mov	r2, #44	; 0x2c
   4746c:	strb	r2, [r3]
   47470:	ldr	r3, [fp, #8]
   47474:	mov	r2, r3
   47478:	ldr	r1, [fp, #4]
   4747c:	ldr	r0, [fp, #-16]
   47480:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47484:	ldr	r3, [fp, #-16]
   47488:	ldrb	r3, [r3, #27]
   4748c:	cmp	r3, #0
   47490:	beq	474c8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xbc>
   47494:	ldr	r3, [fp, #-16]
   47498:	ldr	r2, [r3, #20]
   4749c:	ldrh	r3, [fp, #-6]
   474a0:	mov	r1, r2
   474a4:	mov	r0, r3
   474a8:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   474ac:	mov	r2, r0
   474b0:	ldr	r3, [fp, #-16]
   474b4:	ldr	r3, [r3, #20]
   474b8:	add	r2, r3, r2
   474bc:	ldr	r3, [fp, #-16]
   474c0:	str	r2, [r3, #20]
   474c4:	b	474dc <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd0>
   474c8:	ldrh	r2, [fp, #-6]
   474cc:	ldr	r3, [fp, #12]
   474d0:	mov	r1, r2
   474d4:	ldr	r0, [fp, #-16]
   474d8:	blx	r3
   474dc:	nop	{0}
   474e0:	sub	sp, fp, #4
   474e4:	ldr	fp, [sp]
   474e8:	add	sp, sp, #4
   474ec:	pop	{pc}		; (ldr pc, [sp], #4)

000474f0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   474f0:	str	fp, [sp, #-8]!
   474f4:	str	lr, [sp, #4]
   474f8:	add	fp, sp, #4
   474fc:	sub	sp, sp, #24
   47500:	str	r0, [fp, #-16]
   47504:	str	r1, [fp, #-20]	; 0xffffffec
   47508:	str	r2, [fp, #-24]	; 0xffffffe8
   4750c:	str	r3, [fp, #-28]	; 0xffffffe4
   47510:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47518:	add	r3, r2, r3
   4751c:	mov	r0, r3
   47520:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   47524:	str	r0, [fp, #-8]
   47528:	ldr	r3, [fp, #-20]	; 0xffffffec
   4752c:	cmp	r3, #0
   47530:	beq	47550 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x60>
   47534:	ldr	r3, [fp, #-16]
   47538:	ldr	r3, [r3, #20]
   4753c:	add	r1, r3, #1
   47540:	ldr	r2, [fp, #-16]
   47544:	str	r1, [r2, #20]
   47548:	mov	r2, #44	; 0x2c
   4754c:	strb	r2, [r3]
   47550:	ldr	r3, [fp, #8]
   47554:	mov	r2, r3
   47558:	ldr	r1, [fp, #4]
   4755c:	ldr	r0, [fp, #-16]
   47560:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47564:	ldr	r3, [fp, #-16]
   47568:	ldrb	r3, [r3, #27]
   4756c:	cmp	r3, #0
   47570:	beq	475a4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb4>
   47574:	ldr	r3, [fp, #-16]
   47578:	ldr	r3, [r3, #20]
   4757c:	mov	r1, r3
   47580:	ldr	r0, [fp, #-8]
   47584:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   47588:	mov	r2, r0
   4758c:	ldr	r3, [fp, #-16]
   47590:	ldr	r3, [r3, #20]
   47594:	add	r2, r3, r2
   47598:	ldr	r3, [fp, #-16]
   4759c:	str	r2, [r3, #20]
   475a0:	b	475b4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xc4>
   475a4:	ldr	r3, [fp, #12]
   475a8:	ldr	r1, [fp, #-8]
   475ac:	ldr	r0, [fp, #-16]
   475b0:	blx	r3
   475b4:	nop	{0}
   475b8:	sub	sp, fp, #4
   475bc:	ldr	fp, [sp]
   475c0:	add	sp, sp, #4
   475c4:	pop	{pc}		; (ldr pc, [sp], #4)

000475c8 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   475c8:	str	fp, [sp, #-8]!
   475cc:	str	lr, [sp, #4]
   475d0:	add	fp, sp, #4
   475d4:	sub	sp, sp, #24
   475d8:	str	r0, [fp, #-16]
   475dc:	str	r1, [fp, #-20]	; 0xffffffec
   475e0:	str	r2, [fp, #-24]	; 0xffffffe8
   475e4:	str	r3, [fp, #-28]	; 0xffffffe4
   475e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   475ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   475f0:	add	r3, r2, r3
   475f4:	mov	r0, r3
   475f8:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   475fc:	strd	r0, [fp, #-12]
   47600:	ldr	r3, [fp, #-20]	; 0xffffffec
   47604:	cmp	r3, #0
   47608:	beq	47628 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x60>
   4760c:	ldr	r3, [fp, #-16]
   47610:	ldr	r3, [r3, #20]
   47614:	add	r1, r3, #1
   47618:	ldr	r2, [fp, #-16]
   4761c:	str	r1, [r2, #20]
   47620:	mov	r2, #44	; 0x2c
   47624:	strb	r2, [r3]
   47628:	ldr	r3, [fp, #8]
   4762c:	mov	r2, r3
   47630:	ldr	r1, [fp, #4]
   47634:	ldr	r0, [fp, #-16]
   47638:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4763c:	ldr	r3, [fp, #-16]
   47640:	ldrb	r3, [r3, #27]
   47644:	cmp	r3, #0
   47648:	beq	4767c <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb4>
   4764c:	ldr	r3, [fp, #-16]
   47650:	ldr	r3, [r3, #20]
   47654:	mov	r2, r3
   47658:	ldrd	r0, [fp, #-12]
   4765c:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   47660:	mov	r2, r0
   47664:	ldr	r3, [fp, #-16]
   47668:	ldr	r3, [r3, #20]
   4766c:	add	r2, r3, r2
   47670:	ldr	r3, [fp, #-16]
   47674:	str	r2, [r3, #20]
   47678:	b	4768c <flatcc_json_printer_uint64_enum_struct_field@@Base+0xc4>
   4767c:	ldr	r1, [fp, #12]
   47680:	ldrd	r2, [fp, #-12]
   47684:	ldr	r0, [fp, #-16]
   47688:	blx	r1
   4768c:	nop	{0}
   47690:	sub	sp, fp, #4
   47694:	ldr	fp, [sp]
   47698:	add	sp, sp, #4
   4769c:	pop	{pc}		; (ldr pc, [sp], #4)

000476a0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   476a0:	str	fp, [sp, #-8]!
   476a4:	str	lr, [sp, #4]
   476a8:	add	fp, sp, #4
   476ac:	sub	sp, sp, #24
   476b0:	str	r0, [fp, #-16]
   476b4:	str	r1, [fp, #-20]	; 0xffffffec
   476b8:	str	r2, [fp, #-24]	; 0xffffffe8
   476bc:	str	r3, [fp, #-28]	; 0xffffffe4
   476c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   476c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   476c8:	add	r3, r2, r3
   476cc:	mov	r0, r3
   476d0:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   476d4:	mov	r3, r0
   476d8:	strb	r3, [fp, #-5]
   476dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   476e0:	cmp	r3, #0
   476e4:	beq	47704 <flatcc_json_printer_int8_enum_struct_field@@Base+0x64>
   476e8:	ldr	r3, [fp, #-16]
   476ec:	ldr	r3, [r3, #20]
   476f0:	add	r1, r3, #1
   476f4:	ldr	r2, [fp, #-16]
   476f8:	str	r1, [r2, #20]
   476fc:	mov	r2, #44	; 0x2c
   47700:	strb	r2, [r3]
   47704:	ldr	r3, [fp, #8]
   47708:	mov	r2, r3
   4770c:	ldr	r1, [fp, #4]
   47710:	ldr	r0, [fp, #-16]
   47714:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47718:	ldr	r3, [fp, #-16]
   4771c:	ldrb	r3, [r3, #27]
   47720:	cmp	r3, #0
   47724:	beq	4775c <flatcc_json_printer_int8_enum_struct_field@@Base+0xbc>
   47728:	ldr	r3, [fp, #-16]
   4772c:	ldr	r2, [r3, #20]
   47730:	ldrsb	r3, [fp, #-5]
   47734:	mov	r1, r2
   47738:	mov	r0, r3
   4773c:	bl	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x2164>
   47740:	mov	r2, r0
   47744:	ldr	r3, [fp, #-16]
   47748:	ldr	r3, [r3, #20]
   4774c:	add	r2, r3, r2
   47750:	ldr	r3, [fp, #-16]
   47754:	str	r2, [r3, #20]
   47758:	b	47770 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
   4775c:	ldrsb	r2, [fp, #-5]
   47760:	ldr	r3, [fp, #12]
   47764:	mov	r1, r2
   47768:	ldr	r0, [fp, #-16]
   4776c:	blx	r3
   47770:	nop	{0}
   47774:	sub	sp, fp, #4
   47778:	ldr	fp, [sp]
   4777c:	add	sp, sp, #4
   47780:	pop	{pc}		; (ldr pc, [sp], #4)

00047784 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   47784:	str	fp, [sp, #-8]!
   47788:	str	lr, [sp, #4]
   4778c:	add	fp, sp, #4
   47790:	sub	sp, sp, #24
   47794:	str	r0, [fp, #-16]
   47798:	str	r1, [fp, #-20]	; 0xffffffec
   4779c:	str	r2, [fp, #-24]	; 0xffffffe8
   477a0:	str	r3, [fp, #-28]	; 0xffffffe4
   477a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   477a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   477ac:	add	r3, r2, r3
   477b0:	mov	r0, r3
   477b4:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   477b8:	mov	r3, r0
   477bc:	strh	r3, [fp, #-6]
   477c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   477c4:	cmp	r3, #0
   477c8:	beq	477e8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x64>
   477cc:	ldr	r3, [fp, #-16]
   477d0:	ldr	r3, [r3, #20]
   477d4:	add	r1, r3, #1
   477d8:	ldr	r2, [fp, #-16]
   477dc:	str	r1, [r2, #20]
   477e0:	mov	r2, #44	; 0x2c
   477e4:	strb	r2, [r3]
   477e8:	ldr	r3, [fp, #8]
   477ec:	mov	r2, r3
   477f0:	ldr	r1, [fp, #4]
   477f4:	ldr	r0, [fp, #-16]
   477f8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   477fc:	ldr	r3, [fp, #-16]
   47800:	ldrb	r3, [r3, #27]
   47804:	cmp	r3, #0
   47808:	beq	47840 <flatcc_json_printer_int16_enum_struct_field@@Base+0xbc>
   4780c:	ldr	r3, [fp, #-16]
   47810:	ldr	r2, [r3, #20]
   47814:	ldrsh	r3, [fp, #-6]
   47818:	mov	r1, r2
   4781c:	mov	r0, r3
   47820:	bl	40d40 <flatcc_json_parser_struct_as_root@@Base+0x21f0>
   47824:	mov	r2, r0
   47828:	ldr	r3, [fp, #-16]
   4782c:	ldr	r3, [r3, #20]
   47830:	add	r2, r3, r2
   47834:	ldr	r3, [fp, #-16]
   47838:	str	r2, [r3, #20]
   4783c:	b	47854 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd0>
   47840:	ldrsh	r2, [fp, #-6]
   47844:	ldr	r3, [fp, #12]
   47848:	mov	r1, r2
   4784c:	ldr	r0, [fp, #-16]
   47850:	blx	r3
   47854:	nop	{0}
   47858:	sub	sp, fp, #4
   4785c:	ldr	fp, [sp]
   47860:	add	sp, sp, #4
   47864:	pop	{pc}		; (ldr pc, [sp], #4)

00047868 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   47868:	str	fp, [sp, #-8]!
   4786c:	str	lr, [sp, #4]
   47870:	add	fp, sp, #4
   47874:	sub	sp, sp, #24
   47878:	str	r0, [fp, #-16]
   4787c:	str	r1, [fp, #-20]	; 0xffffffec
   47880:	str	r2, [fp, #-24]	; 0xffffffe8
   47884:	str	r3, [fp, #-28]	; 0xffffffe4
   47888:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4788c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47890:	add	r3, r2, r3
   47894:	mov	r0, r3
   47898:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   4789c:	str	r0, [fp, #-8]
   478a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   478a4:	cmp	r3, #0
   478a8:	beq	478c8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x60>
   478ac:	ldr	r3, [fp, #-16]
   478b0:	ldr	r3, [r3, #20]
   478b4:	add	r1, r3, #1
   478b8:	ldr	r2, [fp, #-16]
   478bc:	str	r1, [r2, #20]
   478c0:	mov	r2, #44	; 0x2c
   478c4:	strb	r2, [r3]
   478c8:	ldr	r3, [fp, #8]
   478cc:	mov	r2, r3
   478d0:	ldr	r1, [fp, #4]
   478d4:	ldr	r0, [fp, #-16]
   478d8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   478dc:	ldr	r3, [fp, #-16]
   478e0:	ldrb	r3, [r3, #27]
   478e4:	cmp	r3, #0
   478e8:	beq	4791c <flatcc_json_printer_int32_enum_struct_field@@Base+0xb4>
   478ec:	ldr	r3, [fp, #-16]
   478f0:	ldr	r3, [r3, #20]
   478f4:	mov	r1, r3
   478f8:	ldr	r0, [fp, #-8]
   478fc:	bl	40dcc <flatcc_json_parser_struct_as_root@@Base+0x227c>
   47900:	mov	r2, r0
   47904:	ldr	r3, [fp, #-16]
   47908:	ldr	r3, [r3, #20]
   4790c:	add	r2, r3, r2
   47910:	ldr	r3, [fp, #-16]
   47914:	str	r2, [r3, #20]
   47918:	b	4792c <flatcc_json_printer_int32_enum_struct_field@@Base+0xc4>
   4791c:	ldr	r3, [fp, #12]
   47920:	ldr	r1, [fp, #-8]
   47924:	ldr	r0, [fp, #-16]
   47928:	blx	r3
   4792c:	nop	{0}
   47930:	sub	sp, fp, #4
   47934:	ldr	fp, [sp]
   47938:	add	sp, sp, #4
   4793c:	pop	{pc}		; (ldr pc, [sp], #4)

00047940 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   47940:	str	fp, [sp, #-8]!
   47944:	str	lr, [sp, #4]
   47948:	add	fp, sp, #4
   4794c:	sub	sp, sp, #24
   47950:	str	r0, [fp, #-16]
   47954:	str	r1, [fp, #-20]	; 0xffffffec
   47958:	str	r2, [fp, #-24]	; 0xffffffe8
   4795c:	str	r3, [fp, #-28]	; 0xffffffe4
   47960:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47964:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47968:	add	r3, r2, r3
   4796c:	mov	r0, r3
   47970:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   47974:	strd	r0, [fp, #-12]
   47978:	ldr	r3, [fp, #-20]	; 0xffffffec
   4797c:	cmp	r3, #0
   47980:	beq	479a0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x60>
   47984:	ldr	r3, [fp, #-16]
   47988:	ldr	r3, [r3, #20]
   4798c:	add	r1, r3, #1
   47990:	ldr	r2, [fp, #-16]
   47994:	str	r1, [r2, #20]
   47998:	mov	r2, #44	; 0x2c
   4799c:	strb	r2, [r3]
   479a0:	ldr	r3, [fp, #8]
   479a4:	mov	r2, r3
   479a8:	ldr	r1, [fp, #4]
   479ac:	ldr	r0, [fp, #-16]
   479b0:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   479b4:	ldr	r3, [fp, #-16]
   479b8:	ldrb	r3, [r3, #27]
   479bc:	cmp	r3, #0
   479c0:	beq	479f4 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb4>
   479c4:	ldr	r3, [fp, #-16]
   479c8:	ldr	r3, [r3, #20]
   479cc:	mov	r2, r3
   479d0:	ldrd	r0, [fp, #-12]
   479d4:	bl	40e50 <flatcc_json_parser_struct_as_root@@Base+0x2300>
   479d8:	mov	r2, r0
   479dc:	ldr	r3, [fp, #-16]
   479e0:	ldr	r3, [r3, #20]
   479e4:	add	r2, r3, r2
   479e8:	ldr	r3, [fp, #-16]
   479ec:	str	r2, [r3, #20]
   479f0:	b	47a04 <flatcc_json_printer_int64_enum_struct_field@@Base+0xc4>
   479f4:	ldr	r1, [fp, #12]
   479f8:	ldrd	r2, [fp, #-12]
   479fc:	ldr	r0, [fp, #-16]
   47a00:	blx	r1
   47a04:	nop	{0}
   47a08:	sub	sp, fp, #4
   47a0c:	ldr	fp, [sp]
   47a10:	add	sp, sp, #4
   47a14:	pop	{pc}		; (ldr pc, [sp], #4)

00047a18 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   47a18:	str	fp, [sp, #-8]!
   47a1c:	str	lr, [sp, #4]
   47a20:	add	fp, sp, #4
   47a24:	sub	sp, sp, #24
   47a28:	str	r0, [fp, #-16]
   47a2c:	str	r1, [fp, #-20]	; 0xffffffec
   47a30:	str	r2, [fp, #-24]	; 0xffffffe8
   47a34:	str	r3, [fp, #-28]	; 0xffffffe4
   47a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47a40:	add	r3, r2, r3
   47a44:	mov	r0, r3
   47a48:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   47a4c:	mov	r3, r0
   47a50:	strb	r3, [fp, #-5]
   47a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   47a58:	cmp	r3, #0
   47a5c:	beq	47a7c <flatcc_json_printer_bool_enum_struct_field@@Base+0x64>
   47a60:	ldr	r3, [fp, #-16]
   47a64:	ldr	r3, [r3, #20]
   47a68:	add	r1, r3, #1
   47a6c:	ldr	r2, [fp, #-16]
   47a70:	str	r1, [r2, #20]
   47a74:	mov	r2, #44	; 0x2c
   47a78:	strb	r2, [r3]
   47a7c:	ldr	r3, [fp, #8]
   47a80:	mov	r2, r3
   47a84:	ldr	r1, [fp, #4]
   47a88:	ldr	r0, [fp, #-16]
   47a8c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47a90:	ldr	r3, [fp, #-16]
   47a94:	ldrb	r3, [r3, #27]
   47a98:	cmp	r3, #0
   47a9c:	beq	47ad4 <flatcc_json_printer_bool_enum_struct_field@@Base+0xbc>
   47aa0:	ldrb	r2, [fp, #-5]
   47aa4:	ldr	r3, [fp, #-16]
   47aa8:	ldr	r3, [r3, #20]
   47aac:	mov	r1, r3
   47ab0:	mov	r0, r2
   47ab4:	bl	3f3bc <flatcc_json_parser_struct_as_root@@Base+0x86c>
   47ab8:	mov	r2, r0
   47abc:	ldr	r3, [fp, #-16]
   47ac0:	ldr	r3, [r3, #20]
   47ac4:	add	r2, r3, r2
   47ac8:	ldr	r3, [fp, #-16]
   47acc:	str	r2, [r3, #20]
   47ad0:	b	47ae8 <flatcc_json_printer_bool_enum_struct_field@@Base+0xd0>
   47ad4:	ldrb	r2, [fp, #-5]
   47ad8:	ldr	r3, [fp, #12]
   47adc:	mov	r1, r2
   47ae0:	ldr	r0, [fp, #-16]
   47ae4:	blx	r3
   47ae8:	nop	{0}
   47aec:	sub	sp, fp, #4
   47af0:	ldr	fp, [sp]
   47af4:	add	sp, sp, #4
   47af8:	pop	{pc}		; (ldr pc, [sp], #4)

00047afc <flatcc_json_printer_utype_vector_field@@Base>:
   47afc:	str	fp, [sp, #-8]!
   47b00:	str	lr, [sp, #4]
   47b04:	add	fp, sp, #4
   47b08:	sub	sp, sp, #24
   47b0c:	str	r0, [fp, #-16]
   47b10:	str	r1, [fp, #-20]	; 0xffffffec
   47b14:	str	r2, [fp, #-24]	; 0xffffffe8
   47b18:	str	r3, [fp, #-28]	; 0xffffffe4
   47b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47b20:	ldr	r0, [fp, #-20]	; 0xffffffec
   47b24:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   47b28:	str	r0, [fp, #-8]
   47b2c:	ldr	r3, [fp, #-8]
   47b30:	cmp	r3, #0
   47b34:	beq	47d98 <flatcc_json_printer_utype_vector_field@@Base+0x29c>
   47b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   47b3c:	ldr	r3, [r3, #16]
   47b40:	add	r1, r3, #1
   47b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   47b48:	str	r1, [r2, #16]
   47b4c:	cmp	r3, #0
   47b50:	beq	47b70 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   47b54:	ldr	r3, [fp, #-16]
   47b58:	ldr	r3, [r3, #20]
   47b5c:	add	r1, r3, #1
   47b60:	ldr	r2, [fp, #-16]
   47b64:	str	r1, [r2, #20]
   47b68:	mov	r2, #44	; 0x2c
   47b6c:	strb	r2, [r3]
   47b70:	ldr	r0, [fp, #-8]
   47b74:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   47b78:	str	r0, [fp, #-8]
   47b7c:	ldr	r0, [fp, #-8]
   47b80:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   47b84:	str	r0, [fp, #-12]
   47b88:	ldr	r3, [fp, #-8]
   47b8c:	add	r3, r3, #4
   47b90:	str	r3, [fp, #-8]
   47b94:	ldr	r3, [fp, #4]
   47b98:	mov	r2, r3
   47b9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47ba0:	ldr	r0, [fp, #-16]
   47ba4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47ba8:	ldr	r3, [fp, #-16]
   47bac:	ldr	r3, [r3, #32]
   47bb0:	add	r2, r3, #1
   47bb4:	ldr	r3, [fp, #-16]
   47bb8:	str	r2, [r3, #32]
   47bbc:	ldr	r3, [fp, #-16]
   47bc0:	ldr	r3, [r3, #20]
   47bc4:	add	r1, r3, #1
   47bc8:	ldr	r2, [fp, #-16]
   47bcc:	str	r1, [r2, #20]
   47bd0:	mov	r2, #91	; 0x5b
   47bd4:	strb	r2, [r3]
   47bd8:	ldr	r3, [fp, #-12]
   47bdc:	cmp	r3, #0
   47be0:	beq	47d20 <flatcc_json_printer_utype_vector_field@@Base+0x224>
   47be4:	ldr	r3, [fp, #-16]
   47be8:	ldrb	r3, [r3, #25]
   47bec:	cmp	r3, #0
   47bf0:	beq	47c1c <flatcc_json_printer_utype_vector_field@@Base+0x120>
   47bf4:	ldr	r3, [fp, #-16]
   47bf8:	ldr	r3, [r3, #20]
   47bfc:	add	r1, r3, #1
   47c00:	ldr	r2, [fp, #-16]
   47c04:	str	r1, [r2, #20]
   47c08:	mov	r2, #10
   47c0c:	strb	r2, [r3]
   47c10:	ldr	r0, [fp, #-16]
   47c14:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   47c18:	b	47c24 <flatcc_json_printer_utype_vector_field@@Base+0x128>
   47c1c:	ldr	r0, [fp, #-16]
   47c20:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   47c24:	ldr	r0, [fp, #-8]
   47c28:	bl	3f240 <flatcc_json_parser_struct_as_root@@Base+0x6f0>
   47c2c:	mov	r3, r0
   47c30:	mov	r2, r3
   47c34:	ldr	r3, [fp, #-16]
   47c38:	ldr	r3, [r3, #20]
   47c3c:	mov	r1, r3
   47c40:	mov	r0, r2
   47c44:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   47c48:	mov	r2, r0
   47c4c:	ldr	r3, [fp, #-16]
   47c50:	ldr	r3, [r3, #20]
   47c54:	add	r2, r3, r2
   47c58:	ldr	r3, [fp, #-16]
   47c5c:	str	r2, [r3, #20]
   47c60:	ldr	r3, [fp, #-8]
   47c64:	add	r3, r3, #1
   47c68:	str	r3, [fp, #-8]
   47c6c:	ldr	r3, [fp, #-12]
   47c70:	sub	r3, r3, #1
   47c74:	str	r3, [fp, #-12]
   47c78:	b	47d20 <flatcc_json_printer_utype_vector_field@@Base+0x224>
   47c7c:	ldr	r3, [fp, #-16]
   47c80:	ldr	r3, [r3, #20]
   47c84:	add	r1, r3, #1
   47c88:	ldr	r2, [fp, #-16]
   47c8c:	str	r1, [r2, #20]
   47c90:	mov	r2, #44	; 0x2c
   47c94:	strb	r2, [r3]
   47c98:	ldr	r3, [fp, #-16]
   47c9c:	ldrb	r3, [r3, #25]
   47ca0:	cmp	r3, #0
   47ca4:	beq	47cd0 <flatcc_json_printer_utype_vector_field@@Base+0x1d4>
   47ca8:	ldr	r3, [fp, #-16]
   47cac:	ldr	r3, [r3, #20]
   47cb0:	add	r1, r3, #1
   47cb4:	ldr	r2, [fp, #-16]
   47cb8:	str	r1, [r2, #20]
   47cbc:	mov	r2, #10
   47cc0:	strb	r2, [r3]
   47cc4:	ldr	r0, [fp, #-16]
   47cc8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   47ccc:	b	47cd8 <flatcc_json_printer_utype_vector_field@@Base+0x1dc>
   47cd0:	ldr	r0, [fp, #-16]
   47cd4:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   47cd8:	ldr	r0, [fp, #-8]
   47cdc:	bl	3f240 <flatcc_json_parser_struct_as_root@@Base+0x6f0>
   47ce0:	mov	r3, r0
   47ce4:	mov	r2, r3
   47ce8:	ldr	r3, [fp, #-16]
   47cec:	ldr	r3, [r3, #20]
   47cf0:	mov	r1, r3
   47cf4:	mov	r0, r2
   47cf8:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   47cfc:	mov	r2, r0
   47d00:	ldr	r3, [fp, #-16]
   47d04:	ldr	r3, [r3, #20]
   47d08:	add	r2, r3, r2
   47d0c:	ldr	r3, [fp, #-16]
   47d10:	str	r2, [r3, #20]
   47d14:	ldr	r3, [fp, #-8]
   47d18:	add	r3, r3, #1
   47d1c:	str	r3, [fp, #-8]
   47d20:	ldr	r3, [fp, #-12]
   47d24:	sub	r2, r3, #1
   47d28:	str	r2, [fp, #-12]
   47d2c:	cmp	r3, #0
   47d30:	bne	47c7c <flatcc_json_printer_utype_vector_field@@Base+0x180>
   47d34:	ldr	r3, [fp, #-16]
   47d38:	ldrb	r3, [r3, #25]
   47d3c:	cmp	r3, #0
   47d40:	beq	47d7c <flatcc_json_printer_utype_vector_field@@Base+0x280>
   47d44:	ldr	r3, [fp, #-16]
   47d48:	ldr	r3, [r3, #20]
   47d4c:	add	r1, r3, #1
   47d50:	ldr	r2, [fp, #-16]
   47d54:	str	r1, [r2, #20]
   47d58:	mov	r2, #10
   47d5c:	strb	r2, [r3]
   47d60:	ldr	r3, [fp, #-16]
   47d64:	ldr	r3, [r3, #32]
   47d68:	sub	r2, r3, #1
   47d6c:	ldr	r3, [fp, #-16]
   47d70:	str	r2, [r3, #32]
   47d74:	ldr	r0, [fp, #-16]
   47d78:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   47d7c:	ldr	r3, [fp, #-16]
   47d80:	ldr	r3, [r3, #20]
   47d84:	add	r1, r3, #1
   47d88:	ldr	r2, [fp, #-16]
   47d8c:	str	r1, [r2, #20]
   47d90:	mov	r2, #93	; 0x5d
   47d94:	strb	r2, [r3]
   47d98:	nop	{0}
   47d9c:	sub	sp, fp, #4
   47da0:	ldr	fp, [sp]
   47da4:	add	sp, sp, #4
   47da8:	pop	{pc}		; (ldr pc, [sp], #4)

00047dac <flatcc_json_printer_uint8_vector_field@@Base>:
   47dac:	str	fp, [sp, #-8]!
   47db0:	str	lr, [sp, #4]
   47db4:	add	fp, sp, #4
   47db8:	sub	sp, sp, #24
   47dbc:	str	r0, [fp, #-16]
   47dc0:	str	r1, [fp, #-20]	; 0xffffffec
   47dc4:	str	r2, [fp, #-24]	; 0xffffffe8
   47dc8:	str	r3, [fp, #-28]	; 0xffffffe4
   47dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47dd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   47dd4:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   47dd8:	str	r0, [fp, #-8]
   47ddc:	ldr	r3, [fp, #-8]
   47de0:	cmp	r3, #0
   47de4:	beq	48048 <flatcc_json_printer_uint8_vector_field@@Base+0x29c>
   47de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   47dec:	ldr	r3, [r3, #16]
   47df0:	add	r1, r3, #1
   47df4:	ldr	r2, [fp, #-20]	; 0xffffffec
   47df8:	str	r1, [r2, #16]
   47dfc:	cmp	r3, #0
   47e00:	beq	47e20 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   47e04:	ldr	r3, [fp, #-16]
   47e08:	ldr	r3, [r3, #20]
   47e0c:	add	r1, r3, #1
   47e10:	ldr	r2, [fp, #-16]
   47e14:	str	r1, [r2, #20]
   47e18:	mov	r2, #44	; 0x2c
   47e1c:	strb	r2, [r3]
   47e20:	ldr	r0, [fp, #-8]
   47e24:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   47e28:	str	r0, [fp, #-8]
   47e2c:	ldr	r0, [fp, #-8]
   47e30:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   47e34:	str	r0, [fp, #-12]
   47e38:	ldr	r3, [fp, #-8]
   47e3c:	add	r3, r3, #4
   47e40:	str	r3, [fp, #-8]
   47e44:	ldr	r3, [fp, #4]
   47e48:	mov	r2, r3
   47e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47e50:	ldr	r0, [fp, #-16]
   47e54:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   47e58:	ldr	r3, [fp, #-16]
   47e5c:	ldr	r3, [r3, #32]
   47e60:	add	r2, r3, #1
   47e64:	ldr	r3, [fp, #-16]
   47e68:	str	r2, [r3, #32]
   47e6c:	ldr	r3, [fp, #-16]
   47e70:	ldr	r3, [r3, #20]
   47e74:	add	r1, r3, #1
   47e78:	ldr	r2, [fp, #-16]
   47e7c:	str	r1, [r2, #20]
   47e80:	mov	r2, #91	; 0x5b
   47e84:	strb	r2, [r3]
   47e88:	ldr	r3, [fp, #-12]
   47e8c:	cmp	r3, #0
   47e90:	beq	47fd0 <flatcc_json_printer_uint8_vector_field@@Base+0x224>
   47e94:	ldr	r3, [fp, #-16]
   47e98:	ldrb	r3, [r3, #25]
   47e9c:	cmp	r3, #0
   47ea0:	beq	47ecc <flatcc_json_printer_uint8_vector_field@@Base+0x120>
   47ea4:	ldr	r3, [fp, #-16]
   47ea8:	ldr	r3, [r3, #20]
   47eac:	add	r1, r3, #1
   47eb0:	ldr	r2, [fp, #-16]
   47eb4:	str	r1, [r2, #20]
   47eb8:	mov	r2, #10
   47ebc:	strb	r2, [r3]
   47ec0:	ldr	r0, [fp, #-16]
   47ec4:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   47ec8:	b	47ed4 <flatcc_json_printer_uint8_vector_field@@Base+0x128>
   47ecc:	ldr	r0, [fp, #-16]
   47ed0:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   47ed4:	ldr	r0, [fp, #-8]
   47ed8:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   47edc:	mov	r3, r0
   47ee0:	mov	r2, r3
   47ee4:	ldr	r3, [fp, #-16]
   47ee8:	ldr	r3, [r3, #20]
   47eec:	mov	r1, r3
   47ef0:	mov	r0, r2
   47ef4:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   47ef8:	mov	r2, r0
   47efc:	ldr	r3, [fp, #-16]
   47f00:	ldr	r3, [r3, #20]
   47f04:	add	r2, r3, r2
   47f08:	ldr	r3, [fp, #-16]
   47f0c:	str	r2, [r3, #20]
   47f10:	ldr	r3, [fp, #-8]
   47f14:	add	r3, r3, #1
   47f18:	str	r3, [fp, #-8]
   47f1c:	ldr	r3, [fp, #-12]
   47f20:	sub	r3, r3, #1
   47f24:	str	r3, [fp, #-12]
   47f28:	b	47fd0 <flatcc_json_printer_uint8_vector_field@@Base+0x224>
   47f2c:	ldr	r3, [fp, #-16]
   47f30:	ldr	r3, [r3, #20]
   47f34:	add	r1, r3, #1
   47f38:	ldr	r2, [fp, #-16]
   47f3c:	str	r1, [r2, #20]
   47f40:	mov	r2, #44	; 0x2c
   47f44:	strb	r2, [r3]
   47f48:	ldr	r3, [fp, #-16]
   47f4c:	ldrb	r3, [r3, #25]
   47f50:	cmp	r3, #0
   47f54:	beq	47f80 <flatcc_json_printer_uint8_vector_field@@Base+0x1d4>
   47f58:	ldr	r3, [fp, #-16]
   47f5c:	ldr	r3, [r3, #20]
   47f60:	add	r1, r3, #1
   47f64:	ldr	r2, [fp, #-16]
   47f68:	str	r1, [r2, #20]
   47f6c:	mov	r2, #10
   47f70:	strb	r2, [r3]
   47f74:	ldr	r0, [fp, #-16]
   47f78:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   47f7c:	b	47f88 <flatcc_json_printer_uint8_vector_field@@Base+0x1dc>
   47f80:	ldr	r0, [fp, #-16]
   47f84:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   47f88:	ldr	r0, [fp, #-8]
   47f8c:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   47f90:	mov	r3, r0
   47f94:	mov	r2, r3
   47f98:	ldr	r3, [fp, #-16]
   47f9c:	ldr	r3, [r3, #20]
   47fa0:	mov	r1, r3
   47fa4:	mov	r0, r2
   47fa8:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   47fac:	mov	r2, r0
   47fb0:	ldr	r3, [fp, #-16]
   47fb4:	ldr	r3, [r3, #20]
   47fb8:	add	r2, r3, r2
   47fbc:	ldr	r3, [fp, #-16]
   47fc0:	str	r2, [r3, #20]
   47fc4:	ldr	r3, [fp, #-8]
   47fc8:	add	r3, r3, #1
   47fcc:	str	r3, [fp, #-8]
   47fd0:	ldr	r3, [fp, #-12]
   47fd4:	sub	r2, r3, #1
   47fd8:	str	r2, [fp, #-12]
   47fdc:	cmp	r3, #0
   47fe0:	bne	47f2c <flatcc_json_printer_uint8_vector_field@@Base+0x180>
   47fe4:	ldr	r3, [fp, #-16]
   47fe8:	ldrb	r3, [r3, #25]
   47fec:	cmp	r3, #0
   47ff0:	beq	4802c <flatcc_json_printer_uint8_vector_field@@Base+0x280>
   47ff4:	ldr	r3, [fp, #-16]
   47ff8:	ldr	r3, [r3, #20]
   47ffc:	add	r1, r3, #1
   48000:	ldr	r2, [fp, #-16]
   48004:	str	r1, [r2, #20]
   48008:	mov	r2, #10
   4800c:	strb	r2, [r3]
   48010:	ldr	r3, [fp, #-16]
   48014:	ldr	r3, [r3, #32]
   48018:	sub	r2, r3, #1
   4801c:	ldr	r3, [fp, #-16]
   48020:	str	r2, [r3, #32]
   48024:	ldr	r0, [fp, #-16]
   48028:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4802c:	ldr	r3, [fp, #-16]
   48030:	ldr	r3, [r3, #20]
   48034:	add	r1, r3, #1
   48038:	ldr	r2, [fp, #-16]
   4803c:	str	r1, [r2, #20]
   48040:	mov	r2, #93	; 0x5d
   48044:	strb	r2, [r3]
   48048:	nop	{0}
   4804c:	sub	sp, fp, #4
   48050:	ldr	fp, [sp]
   48054:	add	sp, sp, #4
   48058:	pop	{pc}		; (ldr pc, [sp], #4)

0004805c <flatcc_json_printer_uint16_vector_field@@Base>:
   4805c:	str	fp, [sp, #-8]!
   48060:	str	lr, [sp, #4]
   48064:	add	fp, sp, #4
   48068:	sub	sp, sp, #24
   4806c:	str	r0, [fp, #-16]
   48070:	str	r1, [fp, #-20]	; 0xffffffec
   48074:	str	r2, [fp, #-24]	; 0xffffffe8
   48078:	str	r3, [fp, #-28]	; 0xffffffe4
   4807c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48080:	ldr	r0, [fp, #-20]	; 0xffffffec
   48084:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   48088:	str	r0, [fp, #-8]
   4808c:	ldr	r3, [fp, #-8]
   48090:	cmp	r3, #0
   48094:	beq	482f8 <flatcc_json_printer_uint16_vector_field@@Base+0x29c>
   48098:	ldr	r3, [fp, #-20]	; 0xffffffec
   4809c:	ldr	r3, [r3, #16]
   480a0:	add	r1, r3, #1
   480a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   480a8:	str	r1, [r2, #16]
   480ac:	cmp	r3, #0
   480b0:	beq	480d0 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   480b4:	ldr	r3, [fp, #-16]
   480b8:	ldr	r3, [r3, #20]
   480bc:	add	r1, r3, #1
   480c0:	ldr	r2, [fp, #-16]
   480c4:	str	r1, [r2, #20]
   480c8:	mov	r2, #44	; 0x2c
   480cc:	strb	r2, [r3]
   480d0:	ldr	r0, [fp, #-8]
   480d4:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   480d8:	str	r0, [fp, #-8]
   480dc:	ldr	r0, [fp, #-8]
   480e0:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   480e4:	str	r0, [fp, #-12]
   480e8:	ldr	r3, [fp, #-8]
   480ec:	add	r3, r3, #4
   480f0:	str	r3, [fp, #-8]
   480f4:	ldr	r3, [fp, #4]
   480f8:	mov	r2, r3
   480fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48100:	ldr	r0, [fp, #-16]
   48104:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   48108:	ldr	r3, [fp, #-16]
   4810c:	ldr	r3, [r3, #32]
   48110:	add	r2, r3, #1
   48114:	ldr	r3, [fp, #-16]
   48118:	str	r2, [r3, #32]
   4811c:	ldr	r3, [fp, #-16]
   48120:	ldr	r3, [r3, #20]
   48124:	add	r1, r3, #1
   48128:	ldr	r2, [fp, #-16]
   4812c:	str	r1, [r2, #20]
   48130:	mov	r2, #91	; 0x5b
   48134:	strb	r2, [r3]
   48138:	ldr	r3, [fp, #-12]
   4813c:	cmp	r3, #0
   48140:	beq	48280 <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   48144:	ldr	r3, [fp, #-16]
   48148:	ldrb	r3, [r3, #25]
   4814c:	cmp	r3, #0
   48150:	beq	4817c <flatcc_json_printer_uint16_vector_field@@Base+0x120>
   48154:	ldr	r3, [fp, #-16]
   48158:	ldr	r3, [r3, #20]
   4815c:	add	r1, r3, #1
   48160:	ldr	r2, [fp, #-16]
   48164:	str	r1, [r2, #20]
   48168:	mov	r2, #10
   4816c:	strb	r2, [r3]
   48170:	ldr	r0, [fp, #-16]
   48174:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48178:	b	48184 <flatcc_json_printer_uint16_vector_field@@Base+0x128>
   4817c:	ldr	r0, [fp, #-16]
   48180:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48184:	ldr	r0, [fp, #-8]
   48188:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   4818c:	mov	r3, r0
   48190:	mov	r2, r3
   48194:	ldr	r3, [fp, #-16]
   48198:	ldr	r3, [r3, #20]
   4819c:	mov	r1, r3
   481a0:	mov	r0, r2
   481a4:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   481a8:	mov	r2, r0
   481ac:	ldr	r3, [fp, #-16]
   481b0:	ldr	r3, [r3, #20]
   481b4:	add	r2, r3, r2
   481b8:	ldr	r3, [fp, #-16]
   481bc:	str	r2, [r3, #20]
   481c0:	ldr	r3, [fp, #-8]
   481c4:	add	r3, r3, #2
   481c8:	str	r3, [fp, #-8]
   481cc:	ldr	r3, [fp, #-12]
   481d0:	sub	r3, r3, #1
   481d4:	str	r3, [fp, #-12]
   481d8:	b	48280 <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   481dc:	ldr	r3, [fp, #-16]
   481e0:	ldr	r3, [r3, #20]
   481e4:	add	r1, r3, #1
   481e8:	ldr	r2, [fp, #-16]
   481ec:	str	r1, [r2, #20]
   481f0:	mov	r2, #44	; 0x2c
   481f4:	strb	r2, [r3]
   481f8:	ldr	r3, [fp, #-16]
   481fc:	ldrb	r3, [r3, #25]
   48200:	cmp	r3, #0
   48204:	beq	48230 <flatcc_json_printer_uint16_vector_field@@Base+0x1d4>
   48208:	ldr	r3, [fp, #-16]
   4820c:	ldr	r3, [r3, #20]
   48210:	add	r1, r3, #1
   48214:	ldr	r2, [fp, #-16]
   48218:	str	r1, [r2, #20]
   4821c:	mov	r2, #10
   48220:	strb	r2, [r3]
   48224:	ldr	r0, [fp, #-16]
   48228:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4822c:	b	48238 <flatcc_json_printer_uint16_vector_field@@Base+0x1dc>
   48230:	ldr	r0, [fp, #-16]
   48234:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48238:	ldr	r0, [fp, #-8]
   4823c:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   48240:	mov	r3, r0
   48244:	mov	r2, r3
   48248:	ldr	r3, [fp, #-16]
   4824c:	ldr	r3, [r3, #20]
   48250:	mov	r1, r3
   48254:	mov	r0, r2
   48258:	bl	3f608 <flatcc_json_parser_struct_as_root@@Base+0xab8>
   4825c:	mov	r2, r0
   48260:	ldr	r3, [fp, #-16]
   48264:	ldr	r3, [r3, #20]
   48268:	add	r2, r3, r2
   4826c:	ldr	r3, [fp, #-16]
   48270:	str	r2, [r3, #20]
   48274:	ldr	r3, [fp, #-8]
   48278:	add	r3, r3, #2
   4827c:	str	r3, [fp, #-8]
   48280:	ldr	r3, [fp, #-12]
   48284:	sub	r2, r3, #1
   48288:	str	r2, [fp, #-12]
   4828c:	cmp	r3, #0
   48290:	bne	481dc <flatcc_json_printer_uint16_vector_field@@Base+0x180>
   48294:	ldr	r3, [fp, #-16]
   48298:	ldrb	r3, [r3, #25]
   4829c:	cmp	r3, #0
   482a0:	beq	482dc <flatcc_json_printer_uint16_vector_field@@Base+0x280>
   482a4:	ldr	r3, [fp, #-16]
   482a8:	ldr	r3, [r3, #20]
   482ac:	add	r1, r3, #1
   482b0:	ldr	r2, [fp, #-16]
   482b4:	str	r1, [r2, #20]
   482b8:	mov	r2, #10
   482bc:	strb	r2, [r3]
   482c0:	ldr	r3, [fp, #-16]
   482c4:	ldr	r3, [r3, #32]
   482c8:	sub	r2, r3, #1
   482cc:	ldr	r3, [fp, #-16]
   482d0:	str	r2, [r3, #32]
   482d4:	ldr	r0, [fp, #-16]
   482d8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   482dc:	ldr	r3, [fp, #-16]
   482e0:	ldr	r3, [r3, #20]
   482e4:	add	r1, r3, #1
   482e8:	ldr	r2, [fp, #-16]
   482ec:	str	r1, [r2, #20]
   482f0:	mov	r2, #93	; 0x5d
   482f4:	strb	r2, [r3]
   482f8:	nop	{0}
   482fc:	sub	sp, fp, #4
   48300:	ldr	fp, [sp]
   48304:	add	sp, sp, #4
   48308:	pop	{pc}		; (ldr pc, [sp], #4)

0004830c <flatcc_json_printer_uint32_vector_field@@Base>:
   4830c:	str	fp, [sp, #-8]!
   48310:	str	lr, [sp, #4]
   48314:	add	fp, sp, #4
   48318:	sub	sp, sp, #24
   4831c:	str	r0, [fp, #-16]
   48320:	str	r1, [fp, #-20]	; 0xffffffec
   48324:	str	r2, [fp, #-24]	; 0xffffffe8
   48328:	str	r3, [fp, #-28]	; 0xffffffe4
   4832c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48330:	ldr	r0, [fp, #-20]	; 0xffffffec
   48334:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   48338:	str	r0, [fp, #-8]
   4833c:	ldr	r3, [fp, #-8]
   48340:	cmp	r3, #0
   48344:	beq	485a0 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   48348:	ldr	r3, [fp, #-20]	; 0xffffffec
   4834c:	ldr	r3, [r3, #16]
   48350:	add	r1, r3, #1
   48354:	ldr	r2, [fp, #-20]	; 0xffffffec
   48358:	str	r1, [r2, #16]
   4835c:	cmp	r3, #0
   48360:	beq	48380 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   48364:	ldr	r3, [fp, #-16]
   48368:	ldr	r3, [r3, #20]
   4836c:	add	r1, r3, #1
   48370:	ldr	r2, [fp, #-16]
   48374:	str	r1, [r2, #20]
   48378:	mov	r2, #44	; 0x2c
   4837c:	strb	r2, [r3]
   48380:	ldr	r0, [fp, #-8]
   48384:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   48388:	str	r0, [fp, #-8]
   4838c:	ldr	r0, [fp, #-8]
   48390:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   48394:	str	r0, [fp, #-12]
   48398:	ldr	r3, [fp, #-8]
   4839c:	add	r3, r3, #4
   483a0:	str	r3, [fp, #-8]
   483a4:	ldr	r3, [fp, #4]
   483a8:	mov	r2, r3
   483ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   483b0:	ldr	r0, [fp, #-16]
   483b4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   483b8:	ldr	r3, [fp, #-16]
   483bc:	ldr	r3, [r3, #32]
   483c0:	add	r2, r3, #1
   483c4:	ldr	r3, [fp, #-16]
   483c8:	str	r2, [r3, #32]
   483cc:	ldr	r3, [fp, #-16]
   483d0:	ldr	r3, [r3, #20]
   483d4:	add	r1, r3, #1
   483d8:	ldr	r2, [fp, #-16]
   483dc:	str	r1, [r2, #20]
   483e0:	mov	r2, #91	; 0x5b
   483e4:	strb	r2, [r3]
   483e8:	ldr	r3, [fp, #-12]
   483ec:	cmp	r3, #0
   483f0:	beq	48528 <flatcc_json_printer_uint32_vector_field@@Base+0x21c>
   483f4:	ldr	r3, [fp, #-16]
   483f8:	ldrb	r3, [r3, #25]
   483fc:	cmp	r3, #0
   48400:	beq	4842c <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   48404:	ldr	r3, [fp, #-16]
   48408:	ldr	r3, [r3, #20]
   4840c:	add	r1, r3, #1
   48410:	ldr	r2, [fp, #-16]
   48414:	str	r1, [r2, #20]
   48418:	mov	r2, #10
   4841c:	strb	r2, [r3]
   48420:	ldr	r0, [fp, #-16]
   48424:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48428:	b	48434 <flatcc_json_printer_uint32_vector_field@@Base+0x128>
   4842c:	ldr	r0, [fp, #-16]
   48430:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48434:	ldr	r0, [fp, #-8]
   48438:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   4843c:	mov	r2, r0
   48440:	ldr	r3, [fp, #-16]
   48444:	ldr	r3, [r3, #20]
   48448:	mov	r1, r3
   4844c:	mov	r0, r2
   48450:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   48454:	mov	r2, r0
   48458:	ldr	r3, [fp, #-16]
   4845c:	ldr	r3, [r3, #20]
   48460:	add	r2, r3, r2
   48464:	ldr	r3, [fp, #-16]
   48468:	str	r2, [r3, #20]
   4846c:	ldr	r3, [fp, #-8]
   48470:	add	r3, r3, #4
   48474:	str	r3, [fp, #-8]
   48478:	ldr	r3, [fp, #-12]
   4847c:	sub	r3, r3, #1
   48480:	str	r3, [fp, #-12]
   48484:	b	48528 <flatcc_json_printer_uint32_vector_field@@Base+0x21c>
   48488:	ldr	r3, [fp, #-16]
   4848c:	ldr	r3, [r3, #20]
   48490:	add	r1, r3, #1
   48494:	ldr	r2, [fp, #-16]
   48498:	str	r1, [r2, #20]
   4849c:	mov	r2, #44	; 0x2c
   484a0:	strb	r2, [r3]
   484a4:	ldr	r3, [fp, #-16]
   484a8:	ldrb	r3, [r3, #25]
   484ac:	cmp	r3, #0
   484b0:	beq	484dc <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   484b4:	ldr	r3, [fp, #-16]
   484b8:	ldr	r3, [r3, #20]
   484bc:	add	r1, r3, #1
   484c0:	ldr	r2, [fp, #-16]
   484c4:	str	r1, [r2, #20]
   484c8:	mov	r2, #10
   484cc:	strb	r2, [r3]
   484d0:	ldr	r0, [fp, #-16]
   484d4:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   484d8:	b	484e4 <flatcc_json_printer_uint32_vector_field@@Base+0x1d8>
   484dc:	ldr	r0, [fp, #-16]
   484e0:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   484e4:	ldr	r0, [fp, #-8]
   484e8:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   484ec:	mov	r2, r0
   484f0:	ldr	r3, [fp, #-16]
   484f4:	ldr	r3, [r3, #20]
   484f8:	mov	r1, r3
   484fc:	mov	r0, r2
   48500:	bl	3f954 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   48504:	mov	r2, r0
   48508:	ldr	r3, [fp, #-16]
   4850c:	ldr	r3, [r3, #20]
   48510:	add	r2, r3, r2
   48514:	ldr	r3, [fp, #-16]
   48518:	str	r2, [r3, #20]
   4851c:	ldr	r3, [fp, #-8]
   48520:	add	r3, r3, #4
   48524:	str	r3, [fp, #-8]
   48528:	ldr	r3, [fp, #-12]
   4852c:	sub	r2, r3, #1
   48530:	str	r2, [fp, #-12]
   48534:	cmp	r3, #0
   48538:	bne	48488 <flatcc_json_printer_uint32_vector_field@@Base+0x17c>
   4853c:	ldr	r3, [fp, #-16]
   48540:	ldrb	r3, [r3, #25]
   48544:	cmp	r3, #0
   48548:	beq	48584 <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   4854c:	ldr	r3, [fp, #-16]
   48550:	ldr	r3, [r3, #20]
   48554:	add	r1, r3, #1
   48558:	ldr	r2, [fp, #-16]
   4855c:	str	r1, [r2, #20]
   48560:	mov	r2, #10
   48564:	strb	r2, [r3]
   48568:	ldr	r3, [fp, #-16]
   4856c:	ldr	r3, [r3, #32]
   48570:	sub	r2, r3, #1
   48574:	ldr	r3, [fp, #-16]
   48578:	str	r2, [r3, #32]
   4857c:	ldr	r0, [fp, #-16]
   48580:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48584:	ldr	r3, [fp, #-16]
   48588:	ldr	r3, [r3, #20]
   4858c:	add	r1, r3, #1
   48590:	ldr	r2, [fp, #-16]
   48594:	str	r1, [r2, #20]
   48598:	mov	r2, #93	; 0x5d
   4859c:	strb	r2, [r3]
   485a0:	nop	{0}
   485a4:	sub	sp, fp, #4
   485a8:	ldr	fp, [sp]
   485ac:	add	sp, sp, #4
   485b0:	pop	{pc}		; (ldr pc, [sp], #4)

000485b4 <flatcc_json_printer_uint64_vector_field@@Base>:
   485b4:	str	fp, [sp, #-8]!
   485b8:	str	lr, [sp, #4]
   485bc:	add	fp, sp, #4
   485c0:	sub	sp, sp, #24
   485c4:	str	r0, [fp, #-16]
   485c8:	str	r1, [fp, #-20]	; 0xffffffec
   485cc:	str	r2, [fp, #-24]	; 0xffffffe8
   485d0:	str	r3, [fp, #-28]	; 0xffffffe4
   485d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   485d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   485dc:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   485e0:	str	r0, [fp, #-8]
   485e4:	ldr	r3, [fp, #-8]
   485e8:	cmp	r3, #0
   485ec:	beq	48838 <flatcc_json_printer_uint64_vector_field@@Base+0x284>
   485f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   485f4:	ldr	r3, [r3, #16]
   485f8:	add	r1, r3, #1
   485fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   48600:	str	r1, [r2, #16]
   48604:	cmp	r3, #0
   48608:	beq	48628 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   4860c:	ldr	r3, [fp, #-16]
   48610:	ldr	r3, [r3, #20]
   48614:	add	r1, r3, #1
   48618:	ldr	r2, [fp, #-16]
   4861c:	str	r1, [r2, #20]
   48620:	mov	r2, #44	; 0x2c
   48624:	strb	r2, [r3]
   48628:	ldr	r0, [fp, #-8]
   4862c:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   48630:	str	r0, [fp, #-8]
   48634:	ldr	r0, [fp, #-8]
   48638:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4863c:	str	r0, [fp, #-12]
   48640:	ldr	r3, [fp, #-8]
   48644:	add	r3, r3, #4
   48648:	str	r3, [fp, #-8]
   4864c:	ldr	r3, [fp, #4]
   48650:	mov	r2, r3
   48654:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48658:	ldr	r0, [fp, #-16]
   4865c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   48660:	ldr	r3, [fp, #-16]
   48664:	ldr	r3, [r3, #32]
   48668:	add	r2, r3, #1
   4866c:	ldr	r3, [fp, #-16]
   48670:	str	r2, [r3, #32]
   48674:	ldr	r3, [fp, #-16]
   48678:	ldr	r3, [r3, #20]
   4867c:	add	r1, r3, #1
   48680:	ldr	r2, [fp, #-16]
   48684:	str	r1, [r2, #20]
   48688:	mov	r2, #91	; 0x5b
   4868c:	strb	r2, [r3]
   48690:	ldr	r3, [fp, #-12]
   48694:	cmp	r3, #0
   48698:	beq	487c0 <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   4869c:	ldr	r3, [fp, #-16]
   486a0:	ldrb	r3, [r3, #25]
   486a4:	cmp	r3, #0
   486a8:	beq	486d4 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   486ac:	ldr	r3, [fp, #-16]
   486b0:	ldr	r3, [r3, #20]
   486b4:	add	r1, r3, #1
   486b8:	ldr	r2, [fp, #-16]
   486bc:	str	r1, [r2, #20]
   486c0:	mov	r2, #10
   486c4:	strb	r2, [r3]
   486c8:	ldr	r0, [fp, #-16]
   486cc:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   486d0:	b	486dc <flatcc_json_printer_uint64_vector_field@@Base+0x128>
   486d4:	ldr	r0, [fp, #-16]
   486d8:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   486dc:	ldr	r0, [fp, #-8]
   486e0:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   486e4:	ldr	r3, [fp, #-16]
   486e8:	ldr	r3, [r3, #20]
   486ec:	mov	r2, r3
   486f0:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   486f4:	mov	r2, r0
   486f8:	ldr	r3, [fp, #-16]
   486fc:	ldr	r3, [r3, #20]
   48700:	add	r2, r3, r2
   48704:	ldr	r3, [fp, #-16]
   48708:	str	r2, [r3, #20]
   4870c:	ldr	r3, [fp, #-8]
   48710:	add	r3, r3, #8
   48714:	str	r3, [fp, #-8]
   48718:	ldr	r3, [fp, #-12]
   4871c:	sub	r3, r3, #1
   48720:	str	r3, [fp, #-12]
   48724:	b	487c0 <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   48728:	ldr	r3, [fp, #-16]
   4872c:	ldr	r3, [r3, #20]
   48730:	add	r1, r3, #1
   48734:	ldr	r2, [fp, #-16]
   48738:	str	r1, [r2, #20]
   4873c:	mov	r2, #44	; 0x2c
   48740:	strb	r2, [r3]
   48744:	ldr	r3, [fp, #-16]
   48748:	ldrb	r3, [r3, #25]
   4874c:	cmp	r3, #0
   48750:	beq	4877c <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   48754:	ldr	r3, [fp, #-16]
   48758:	ldr	r3, [r3, #20]
   4875c:	add	r1, r3, #1
   48760:	ldr	r2, [fp, #-16]
   48764:	str	r1, [r2, #20]
   48768:	mov	r2, #10
   4876c:	strb	r2, [r3]
   48770:	ldr	r0, [fp, #-16]
   48774:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48778:	b	48784 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   4877c:	ldr	r0, [fp, #-16]
   48780:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48784:	ldr	r0, [fp, #-8]
   48788:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   4878c:	ldr	r3, [fp, #-16]
   48790:	ldr	r3, [r3, #20]
   48794:	mov	r2, r3
   48798:	bl	3ffcc <flatcc_json_parser_struct_as_root@@Base+0x147c>
   4879c:	mov	r2, r0
   487a0:	ldr	r3, [fp, #-16]
   487a4:	ldr	r3, [r3, #20]
   487a8:	add	r2, r3, r2
   487ac:	ldr	r3, [fp, #-16]
   487b0:	str	r2, [r3, #20]
   487b4:	ldr	r3, [fp, #-8]
   487b8:	add	r3, r3, #8
   487bc:	str	r3, [fp, #-8]
   487c0:	ldr	r3, [fp, #-12]
   487c4:	sub	r2, r3, #1
   487c8:	str	r2, [fp, #-12]
   487cc:	cmp	r3, #0
   487d0:	bne	48728 <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   487d4:	ldr	r3, [fp, #-16]
   487d8:	ldrb	r3, [r3, #25]
   487dc:	cmp	r3, #0
   487e0:	beq	4881c <flatcc_json_printer_uint64_vector_field@@Base+0x268>
   487e4:	ldr	r3, [fp, #-16]
   487e8:	ldr	r3, [r3, #20]
   487ec:	add	r1, r3, #1
   487f0:	ldr	r2, [fp, #-16]
   487f4:	str	r1, [r2, #20]
   487f8:	mov	r2, #10
   487fc:	strb	r2, [r3]
   48800:	ldr	r3, [fp, #-16]
   48804:	ldr	r3, [r3, #32]
   48808:	sub	r2, r3, #1
   4880c:	ldr	r3, [fp, #-16]
   48810:	str	r2, [r3, #32]
   48814:	ldr	r0, [fp, #-16]
   48818:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4881c:	ldr	r3, [fp, #-16]
   48820:	ldr	r3, [r3, #20]
   48824:	add	r1, r3, #1
   48828:	ldr	r2, [fp, #-16]
   4882c:	str	r1, [r2, #20]
   48830:	mov	r2, #93	; 0x5d
   48834:	strb	r2, [r3]
   48838:	nop	{0}
   4883c:	sub	sp, fp, #4
   48840:	ldr	fp, [sp]
   48844:	add	sp, sp, #4
   48848:	pop	{pc}		; (ldr pc, [sp], #4)

0004884c <flatcc_json_printer_int8_vector_field@@Base>:
   4884c:	str	fp, [sp, #-8]!
   48850:	str	lr, [sp, #4]
   48854:	add	fp, sp, #4
   48858:	sub	sp, sp, #24
   4885c:	str	r0, [fp, #-16]
   48860:	str	r1, [fp, #-20]	; 0xffffffec
   48864:	str	r2, [fp, #-24]	; 0xffffffe8
   48868:	str	r3, [fp, #-28]	; 0xffffffe4
   4886c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48870:	ldr	r0, [fp, #-20]	; 0xffffffec
   48874:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   48878:	str	r0, [fp, #-8]
   4887c:	ldr	r3, [fp, #-8]
   48880:	cmp	r3, #0
   48884:	beq	48ae8 <flatcc_json_printer_int8_vector_field@@Base+0x29c>
   48888:	ldr	r3, [fp, #-20]	; 0xffffffec
   4888c:	ldr	r3, [r3, #16]
   48890:	add	r1, r3, #1
   48894:	ldr	r2, [fp, #-20]	; 0xffffffec
   48898:	str	r1, [r2, #16]
   4889c:	cmp	r3, #0
   488a0:	beq	488c0 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   488a4:	ldr	r3, [fp, #-16]
   488a8:	ldr	r3, [r3, #20]
   488ac:	add	r1, r3, #1
   488b0:	ldr	r2, [fp, #-16]
   488b4:	str	r1, [r2, #20]
   488b8:	mov	r2, #44	; 0x2c
   488bc:	strb	r2, [r3]
   488c0:	ldr	r0, [fp, #-8]
   488c4:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   488c8:	str	r0, [fp, #-8]
   488cc:	ldr	r0, [fp, #-8]
   488d0:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   488d4:	str	r0, [fp, #-12]
   488d8:	ldr	r3, [fp, #-8]
   488dc:	add	r3, r3, #4
   488e0:	str	r3, [fp, #-8]
   488e4:	ldr	r3, [fp, #4]
   488e8:	mov	r2, r3
   488ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   488f0:	ldr	r0, [fp, #-16]
   488f4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   488f8:	ldr	r3, [fp, #-16]
   488fc:	ldr	r3, [r3, #32]
   48900:	add	r2, r3, #1
   48904:	ldr	r3, [fp, #-16]
   48908:	str	r2, [r3, #32]
   4890c:	ldr	r3, [fp, #-16]
   48910:	ldr	r3, [r3, #20]
   48914:	add	r1, r3, #1
   48918:	ldr	r2, [fp, #-16]
   4891c:	str	r1, [r2, #20]
   48920:	mov	r2, #91	; 0x5b
   48924:	strb	r2, [r3]
   48928:	ldr	r3, [fp, #-12]
   4892c:	cmp	r3, #0
   48930:	beq	48a70 <flatcc_json_printer_int8_vector_field@@Base+0x224>
   48934:	ldr	r3, [fp, #-16]
   48938:	ldrb	r3, [r3, #25]
   4893c:	cmp	r3, #0
   48940:	beq	4896c <flatcc_json_printer_int8_vector_field@@Base+0x120>
   48944:	ldr	r3, [fp, #-16]
   48948:	ldr	r3, [r3, #20]
   4894c:	add	r1, r3, #1
   48950:	ldr	r2, [fp, #-16]
   48954:	str	r1, [r2, #20]
   48958:	mov	r2, #10
   4895c:	strb	r2, [r3]
   48960:	ldr	r0, [fp, #-16]
   48964:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48968:	b	48974 <flatcc_json_printer_int8_vector_field@@Base+0x128>
   4896c:	ldr	r0, [fp, #-16]
   48970:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48974:	ldr	r0, [fp, #-8]
   48978:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   4897c:	mov	r3, r0
   48980:	mov	r2, r3
   48984:	ldr	r3, [fp, #-16]
   48988:	ldr	r3, [r3, #20]
   4898c:	mov	r1, r3
   48990:	mov	r0, r2
   48994:	bl	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x2164>
   48998:	mov	r2, r0
   4899c:	ldr	r3, [fp, #-16]
   489a0:	ldr	r3, [r3, #20]
   489a4:	add	r2, r3, r2
   489a8:	ldr	r3, [fp, #-16]
   489ac:	str	r2, [r3, #20]
   489b0:	ldr	r3, [fp, #-8]
   489b4:	add	r3, r3, #1
   489b8:	str	r3, [fp, #-8]
   489bc:	ldr	r3, [fp, #-12]
   489c0:	sub	r3, r3, #1
   489c4:	str	r3, [fp, #-12]
   489c8:	b	48a70 <flatcc_json_printer_int8_vector_field@@Base+0x224>
   489cc:	ldr	r3, [fp, #-16]
   489d0:	ldr	r3, [r3, #20]
   489d4:	add	r1, r3, #1
   489d8:	ldr	r2, [fp, #-16]
   489dc:	str	r1, [r2, #20]
   489e0:	mov	r2, #44	; 0x2c
   489e4:	strb	r2, [r3]
   489e8:	ldr	r3, [fp, #-16]
   489ec:	ldrb	r3, [r3, #25]
   489f0:	cmp	r3, #0
   489f4:	beq	48a20 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
   489f8:	ldr	r3, [fp, #-16]
   489fc:	ldr	r3, [r3, #20]
   48a00:	add	r1, r3, #1
   48a04:	ldr	r2, [fp, #-16]
   48a08:	str	r1, [r2, #20]
   48a0c:	mov	r2, #10
   48a10:	strb	r2, [r3]
   48a14:	ldr	r0, [fp, #-16]
   48a18:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48a1c:	b	48a28 <flatcc_json_printer_int8_vector_field@@Base+0x1dc>
   48a20:	ldr	r0, [fp, #-16]
   48a24:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48a28:	ldr	r0, [fp, #-8]
   48a2c:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   48a30:	mov	r3, r0
   48a34:	mov	r2, r3
   48a38:	ldr	r3, [fp, #-16]
   48a3c:	ldr	r3, [r3, #20]
   48a40:	mov	r1, r3
   48a44:	mov	r0, r2
   48a48:	bl	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x2164>
   48a4c:	mov	r2, r0
   48a50:	ldr	r3, [fp, #-16]
   48a54:	ldr	r3, [r3, #20]
   48a58:	add	r2, r3, r2
   48a5c:	ldr	r3, [fp, #-16]
   48a60:	str	r2, [r3, #20]
   48a64:	ldr	r3, [fp, #-8]
   48a68:	add	r3, r3, #1
   48a6c:	str	r3, [fp, #-8]
   48a70:	ldr	r3, [fp, #-12]
   48a74:	sub	r2, r3, #1
   48a78:	str	r2, [fp, #-12]
   48a7c:	cmp	r3, #0
   48a80:	bne	489cc <flatcc_json_printer_int8_vector_field@@Base+0x180>
   48a84:	ldr	r3, [fp, #-16]
   48a88:	ldrb	r3, [r3, #25]
   48a8c:	cmp	r3, #0
   48a90:	beq	48acc <flatcc_json_printer_int8_vector_field@@Base+0x280>
   48a94:	ldr	r3, [fp, #-16]
   48a98:	ldr	r3, [r3, #20]
   48a9c:	add	r1, r3, #1
   48aa0:	ldr	r2, [fp, #-16]
   48aa4:	str	r1, [r2, #20]
   48aa8:	mov	r2, #10
   48aac:	strb	r2, [r3]
   48ab0:	ldr	r3, [fp, #-16]
   48ab4:	ldr	r3, [r3, #32]
   48ab8:	sub	r2, r3, #1
   48abc:	ldr	r3, [fp, #-16]
   48ac0:	str	r2, [r3, #32]
   48ac4:	ldr	r0, [fp, #-16]
   48ac8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48acc:	ldr	r3, [fp, #-16]
   48ad0:	ldr	r3, [r3, #20]
   48ad4:	add	r1, r3, #1
   48ad8:	ldr	r2, [fp, #-16]
   48adc:	str	r1, [r2, #20]
   48ae0:	mov	r2, #93	; 0x5d
   48ae4:	strb	r2, [r3]
   48ae8:	nop	{0}
   48aec:	sub	sp, fp, #4
   48af0:	ldr	fp, [sp]
   48af4:	add	sp, sp, #4
   48af8:	pop	{pc}		; (ldr pc, [sp], #4)

00048afc <flatcc_json_printer_int16_vector_field@@Base>:
   48afc:	str	fp, [sp, #-8]!
   48b00:	str	lr, [sp, #4]
   48b04:	add	fp, sp, #4
   48b08:	sub	sp, sp, #24
   48b0c:	str	r0, [fp, #-16]
   48b10:	str	r1, [fp, #-20]	; 0xffffffec
   48b14:	str	r2, [fp, #-24]	; 0xffffffe8
   48b18:	str	r3, [fp, #-28]	; 0xffffffe4
   48b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48b20:	ldr	r0, [fp, #-20]	; 0xffffffec
   48b24:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   48b28:	str	r0, [fp, #-8]
   48b2c:	ldr	r3, [fp, #-8]
   48b30:	cmp	r3, #0
   48b34:	beq	48d98 <flatcc_json_printer_int16_vector_field@@Base+0x29c>
   48b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   48b3c:	ldr	r3, [r3, #16]
   48b40:	add	r1, r3, #1
   48b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   48b48:	str	r1, [r2, #16]
   48b4c:	cmp	r3, #0
   48b50:	beq	48b70 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   48b54:	ldr	r3, [fp, #-16]
   48b58:	ldr	r3, [r3, #20]
   48b5c:	add	r1, r3, #1
   48b60:	ldr	r2, [fp, #-16]
   48b64:	str	r1, [r2, #20]
   48b68:	mov	r2, #44	; 0x2c
   48b6c:	strb	r2, [r3]
   48b70:	ldr	r0, [fp, #-8]
   48b74:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   48b78:	str	r0, [fp, #-8]
   48b7c:	ldr	r0, [fp, #-8]
   48b80:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   48b84:	str	r0, [fp, #-12]
   48b88:	ldr	r3, [fp, #-8]
   48b8c:	add	r3, r3, #4
   48b90:	str	r3, [fp, #-8]
   48b94:	ldr	r3, [fp, #4]
   48b98:	mov	r2, r3
   48b9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48ba0:	ldr	r0, [fp, #-16]
   48ba4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   48ba8:	ldr	r3, [fp, #-16]
   48bac:	ldr	r3, [r3, #32]
   48bb0:	add	r2, r3, #1
   48bb4:	ldr	r3, [fp, #-16]
   48bb8:	str	r2, [r3, #32]
   48bbc:	ldr	r3, [fp, #-16]
   48bc0:	ldr	r3, [r3, #20]
   48bc4:	add	r1, r3, #1
   48bc8:	ldr	r2, [fp, #-16]
   48bcc:	str	r1, [r2, #20]
   48bd0:	mov	r2, #91	; 0x5b
   48bd4:	strb	r2, [r3]
   48bd8:	ldr	r3, [fp, #-12]
   48bdc:	cmp	r3, #0
   48be0:	beq	48d20 <flatcc_json_printer_int16_vector_field@@Base+0x224>
   48be4:	ldr	r3, [fp, #-16]
   48be8:	ldrb	r3, [r3, #25]
   48bec:	cmp	r3, #0
   48bf0:	beq	48c1c <flatcc_json_printer_int16_vector_field@@Base+0x120>
   48bf4:	ldr	r3, [fp, #-16]
   48bf8:	ldr	r3, [r3, #20]
   48bfc:	add	r1, r3, #1
   48c00:	ldr	r2, [fp, #-16]
   48c04:	str	r1, [r2, #20]
   48c08:	mov	r2, #10
   48c0c:	strb	r2, [r3]
   48c10:	ldr	r0, [fp, #-16]
   48c14:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48c18:	b	48c24 <flatcc_json_printer_int16_vector_field@@Base+0x128>
   48c1c:	ldr	r0, [fp, #-16]
   48c20:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48c24:	ldr	r0, [fp, #-8]
   48c28:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   48c2c:	mov	r3, r0
   48c30:	mov	r2, r3
   48c34:	ldr	r3, [fp, #-16]
   48c38:	ldr	r3, [r3, #20]
   48c3c:	mov	r1, r3
   48c40:	mov	r0, r2
   48c44:	bl	40d40 <flatcc_json_parser_struct_as_root@@Base+0x21f0>
   48c48:	mov	r2, r0
   48c4c:	ldr	r3, [fp, #-16]
   48c50:	ldr	r3, [r3, #20]
   48c54:	add	r2, r3, r2
   48c58:	ldr	r3, [fp, #-16]
   48c5c:	str	r2, [r3, #20]
   48c60:	ldr	r3, [fp, #-8]
   48c64:	add	r3, r3, #2
   48c68:	str	r3, [fp, #-8]
   48c6c:	ldr	r3, [fp, #-12]
   48c70:	sub	r3, r3, #1
   48c74:	str	r3, [fp, #-12]
   48c78:	b	48d20 <flatcc_json_printer_int16_vector_field@@Base+0x224>
   48c7c:	ldr	r3, [fp, #-16]
   48c80:	ldr	r3, [r3, #20]
   48c84:	add	r1, r3, #1
   48c88:	ldr	r2, [fp, #-16]
   48c8c:	str	r1, [r2, #20]
   48c90:	mov	r2, #44	; 0x2c
   48c94:	strb	r2, [r3]
   48c98:	ldr	r3, [fp, #-16]
   48c9c:	ldrb	r3, [r3, #25]
   48ca0:	cmp	r3, #0
   48ca4:	beq	48cd0 <flatcc_json_printer_int16_vector_field@@Base+0x1d4>
   48ca8:	ldr	r3, [fp, #-16]
   48cac:	ldr	r3, [r3, #20]
   48cb0:	add	r1, r3, #1
   48cb4:	ldr	r2, [fp, #-16]
   48cb8:	str	r1, [r2, #20]
   48cbc:	mov	r2, #10
   48cc0:	strb	r2, [r3]
   48cc4:	ldr	r0, [fp, #-16]
   48cc8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48ccc:	b	48cd8 <flatcc_json_printer_int16_vector_field@@Base+0x1dc>
   48cd0:	ldr	r0, [fp, #-16]
   48cd4:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48cd8:	ldr	r0, [fp, #-8]
   48cdc:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   48ce0:	mov	r3, r0
   48ce4:	mov	r2, r3
   48ce8:	ldr	r3, [fp, #-16]
   48cec:	ldr	r3, [r3, #20]
   48cf0:	mov	r1, r3
   48cf4:	mov	r0, r2
   48cf8:	bl	40d40 <flatcc_json_parser_struct_as_root@@Base+0x21f0>
   48cfc:	mov	r2, r0
   48d00:	ldr	r3, [fp, #-16]
   48d04:	ldr	r3, [r3, #20]
   48d08:	add	r2, r3, r2
   48d0c:	ldr	r3, [fp, #-16]
   48d10:	str	r2, [r3, #20]
   48d14:	ldr	r3, [fp, #-8]
   48d18:	add	r3, r3, #2
   48d1c:	str	r3, [fp, #-8]
   48d20:	ldr	r3, [fp, #-12]
   48d24:	sub	r2, r3, #1
   48d28:	str	r2, [fp, #-12]
   48d2c:	cmp	r3, #0
   48d30:	bne	48c7c <flatcc_json_printer_int16_vector_field@@Base+0x180>
   48d34:	ldr	r3, [fp, #-16]
   48d38:	ldrb	r3, [r3, #25]
   48d3c:	cmp	r3, #0
   48d40:	beq	48d7c <flatcc_json_printer_int16_vector_field@@Base+0x280>
   48d44:	ldr	r3, [fp, #-16]
   48d48:	ldr	r3, [r3, #20]
   48d4c:	add	r1, r3, #1
   48d50:	ldr	r2, [fp, #-16]
   48d54:	str	r1, [r2, #20]
   48d58:	mov	r2, #10
   48d5c:	strb	r2, [r3]
   48d60:	ldr	r3, [fp, #-16]
   48d64:	ldr	r3, [r3, #32]
   48d68:	sub	r2, r3, #1
   48d6c:	ldr	r3, [fp, #-16]
   48d70:	str	r2, [r3, #32]
   48d74:	ldr	r0, [fp, #-16]
   48d78:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48d7c:	ldr	r3, [fp, #-16]
   48d80:	ldr	r3, [r3, #20]
   48d84:	add	r1, r3, #1
   48d88:	ldr	r2, [fp, #-16]
   48d8c:	str	r1, [r2, #20]
   48d90:	mov	r2, #93	; 0x5d
   48d94:	strb	r2, [r3]
   48d98:	nop	{0}
   48d9c:	sub	sp, fp, #4
   48da0:	ldr	fp, [sp]
   48da4:	add	sp, sp, #4
   48da8:	pop	{pc}		; (ldr pc, [sp], #4)

00048dac <flatcc_json_printer_int32_vector_field@@Base>:
   48dac:	str	fp, [sp, #-8]!
   48db0:	str	lr, [sp, #4]
   48db4:	add	fp, sp, #4
   48db8:	sub	sp, sp, #24
   48dbc:	str	r0, [fp, #-16]
   48dc0:	str	r1, [fp, #-20]	; 0xffffffec
   48dc4:	str	r2, [fp, #-24]	; 0xffffffe8
   48dc8:	str	r3, [fp, #-28]	; 0xffffffe4
   48dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48dd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   48dd4:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   48dd8:	str	r0, [fp, #-8]
   48ddc:	ldr	r3, [fp, #-8]
   48de0:	cmp	r3, #0
   48de4:	beq	49040 <flatcc_json_printer_int32_vector_field@@Base+0x294>
   48de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   48dec:	ldr	r3, [r3, #16]
   48df0:	add	r1, r3, #1
   48df4:	ldr	r2, [fp, #-20]	; 0xffffffec
   48df8:	str	r1, [r2, #16]
   48dfc:	cmp	r3, #0
   48e00:	beq	48e20 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   48e04:	ldr	r3, [fp, #-16]
   48e08:	ldr	r3, [r3, #20]
   48e0c:	add	r1, r3, #1
   48e10:	ldr	r2, [fp, #-16]
   48e14:	str	r1, [r2, #20]
   48e18:	mov	r2, #44	; 0x2c
   48e1c:	strb	r2, [r3]
   48e20:	ldr	r0, [fp, #-8]
   48e24:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   48e28:	str	r0, [fp, #-8]
   48e2c:	ldr	r0, [fp, #-8]
   48e30:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   48e34:	str	r0, [fp, #-12]
   48e38:	ldr	r3, [fp, #-8]
   48e3c:	add	r3, r3, #4
   48e40:	str	r3, [fp, #-8]
   48e44:	ldr	r3, [fp, #4]
   48e48:	mov	r2, r3
   48e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48e50:	ldr	r0, [fp, #-16]
   48e54:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   48e58:	ldr	r3, [fp, #-16]
   48e5c:	ldr	r3, [r3, #32]
   48e60:	add	r2, r3, #1
   48e64:	ldr	r3, [fp, #-16]
   48e68:	str	r2, [r3, #32]
   48e6c:	ldr	r3, [fp, #-16]
   48e70:	ldr	r3, [r3, #20]
   48e74:	add	r1, r3, #1
   48e78:	ldr	r2, [fp, #-16]
   48e7c:	str	r1, [r2, #20]
   48e80:	mov	r2, #91	; 0x5b
   48e84:	strb	r2, [r3]
   48e88:	ldr	r3, [fp, #-12]
   48e8c:	cmp	r3, #0
   48e90:	beq	48fc8 <flatcc_json_printer_int32_vector_field@@Base+0x21c>
   48e94:	ldr	r3, [fp, #-16]
   48e98:	ldrb	r3, [r3, #25]
   48e9c:	cmp	r3, #0
   48ea0:	beq	48ecc <flatcc_json_printer_int32_vector_field@@Base+0x120>
   48ea4:	ldr	r3, [fp, #-16]
   48ea8:	ldr	r3, [r3, #20]
   48eac:	add	r1, r3, #1
   48eb0:	ldr	r2, [fp, #-16]
   48eb4:	str	r1, [r2, #20]
   48eb8:	mov	r2, #10
   48ebc:	strb	r2, [r3]
   48ec0:	ldr	r0, [fp, #-16]
   48ec4:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48ec8:	b	48ed4 <flatcc_json_printer_int32_vector_field@@Base+0x128>
   48ecc:	ldr	r0, [fp, #-16]
   48ed0:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48ed4:	ldr	r0, [fp, #-8]
   48ed8:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   48edc:	mov	r2, r0
   48ee0:	ldr	r3, [fp, #-16]
   48ee4:	ldr	r3, [r3, #20]
   48ee8:	mov	r1, r3
   48eec:	mov	r0, r2
   48ef0:	bl	40dcc <flatcc_json_parser_struct_as_root@@Base+0x227c>
   48ef4:	mov	r2, r0
   48ef8:	ldr	r3, [fp, #-16]
   48efc:	ldr	r3, [r3, #20]
   48f00:	add	r2, r3, r2
   48f04:	ldr	r3, [fp, #-16]
   48f08:	str	r2, [r3, #20]
   48f0c:	ldr	r3, [fp, #-8]
   48f10:	add	r3, r3, #4
   48f14:	str	r3, [fp, #-8]
   48f18:	ldr	r3, [fp, #-12]
   48f1c:	sub	r3, r3, #1
   48f20:	str	r3, [fp, #-12]
   48f24:	b	48fc8 <flatcc_json_printer_int32_vector_field@@Base+0x21c>
   48f28:	ldr	r3, [fp, #-16]
   48f2c:	ldr	r3, [r3, #20]
   48f30:	add	r1, r3, #1
   48f34:	ldr	r2, [fp, #-16]
   48f38:	str	r1, [r2, #20]
   48f3c:	mov	r2, #44	; 0x2c
   48f40:	strb	r2, [r3]
   48f44:	ldr	r3, [fp, #-16]
   48f48:	ldrb	r3, [r3, #25]
   48f4c:	cmp	r3, #0
   48f50:	beq	48f7c <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   48f54:	ldr	r3, [fp, #-16]
   48f58:	ldr	r3, [r3, #20]
   48f5c:	add	r1, r3, #1
   48f60:	ldr	r2, [fp, #-16]
   48f64:	str	r1, [r2, #20]
   48f68:	mov	r2, #10
   48f6c:	strb	r2, [r3]
   48f70:	ldr	r0, [fp, #-16]
   48f74:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   48f78:	b	48f84 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   48f7c:	ldr	r0, [fp, #-16]
   48f80:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   48f84:	ldr	r0, [fp, #-8]
   48f88:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   48f8c:	mov	r2, r0
   48f90:	ldr	r3, [fp, #-16]
   48f94:	ldr	r3, [r3, #20]
   48f98:	mov	r1, r3
   48f9c:	mov	r0, r2
   48fa0:	bl	40dcc <flatcc_json_parser_struct_as_root@@Base+0x227c>
   48fa4:	mov	r2, r0
   48fa8:	ldr	r3, [fp, #-16]
   48fac:	ldr	r3, [r3, #20]
   48fb0:	add	r2, r3, r2
   48fb4:	ldr	r3, [fp, #-16]
   48fb8:	str	r2, [r3, #20]
   48fbc:	ldr	r3, [fp, #-8]
   48fc0:	add	r3, r3, #4
   48fc4:	str	r3, [fp, #-8]
   48fc8:	ldr	r3, [fp, #-12]
   48fcc:	sub	r2, r3, #1
   48fd0:	str	r2, [fp, #-12]
   48fd4:	cmp	r3, #0
   48fd8:	bne	48f28 <flatcc_json_printer_int32_vector_field@@Base+0x17c>
   48fdc:	ldr	r3, [fp, #-16]
   48fe0:	ldrb	r3, [r3, #25]
   48fe4:	cmp	r3, #0
   48fe8:	beq	49024 <flatcc_json_printer_int32_vector_field@@Base+0x278>
   48fec:	ldr	r3, [fp, #-16]
   48ff0:	ldr	r3, [r3, #20]
   48ff4:	add	r1, r3, #1
   48ff8:	ldr	r2, [fp, #-16]
   48ffc:	str	r1, [r2, #20]
   49000:	mov	r2, #10
   49004:	strb	r2, [r3]
   49008:	ldr	r3, [fp, #-16]
   4900c:	ldr	r3, [r3, #32]
   49010:	sub	r2, r3, #1
   49014:	ldr	r3, [fp, #-16]
   49018:	str	r2, [r3, #32]
   4901c:	ldr	r0, [fp, #-16]
   49020:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49024:	ldr	r3, [fp, #-16]
   49028:	ldr	r3, [r3, #20]
   4902c:	add	r1, r3, #1
   49030:	ldr	r2, [fp, #-16]
   49034:	str	r1, [r2, #20]
   49038:	mov	r2, #93	; 0x5d
   4903c:	strb	r2, [r3]
   49040:	nop	{0}
   49044:	sub	sp, fp, #4
   49048:	ldr	fp, [sp]
   4904c:	add	sp, sp, #4
   49050:	pop	{pc}		; (ldr pc, [sp], #4)

00049054 <flatcc_json_printer_int64_vector_field@@Base>:
   49054:	str	fp, [sp, #-8]!
   49058:	str	lr, [sp, #4]
   4905c:	add	fp, sp, #4
   49060:	sub	sp, sp, #24
   49064:	str	r0, [fp, #-16]
   49068:	str	r1, [fp, #-20]	; 0xffffffec
   4906c:	str	r2, [fp, #-24]	; 0xffffffe8
   49070:	str	r3, [fp, #-28]	; 0xffffffe4
   49074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49078:	ldr	r0, [fp, #-20]	; 0xffffffec
   4907c:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   49080:	str	r0, [fp, #-8]
   49084:	ldr	r3, [fp, #-8]
   49088:	cmp	r3, #0
   4908c:	beq	492d8 <flatcc_json_printer_int64_vector_field@@Base+0x284>
   49090:	ldr	r3, [fp, #-20]	; 0xffffffec
   49094:	ldr	r3, [r3, #16]
   49098:	add	r1, r3, #1
   4909c:	ldr	r2, [fp, #-20]	; 0xffffffec
   490a0:	str	r1, [r2, #16]
   490a4:	cmp	r3, #0
   490a8:	beq	490c8 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   490ac:	ldr	r3, [fp, #-16]
   490b0:	ldr	r3, [r3, #20]
   490b4:	add	r1, r3, #1
   490b8:	ldr	r2, [fp, #-16]
   490bc:	str	r1, [r2, #20]
   490c0:	mov	r2, #44	; 0x2c
   490c4:	strb	r2, [r3]
   490c8:	ldr	r0, [fp, #-8]
   490cc:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   490d0:	str	r0, [fp, #-8]
   490d4:	ldr	r0, [fp, #-8]
   490d8:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   490dc:	str	r0, [fp, #-12]
   490e0:	ldr	r3, [fp, #-8]
   490e4:	add	r3, r3, #4
   490e8:	str	r3, [fp, #-8]
   490ec:	ldr	r3, [fp, #4]
   490f0:	mov	r2, r3
   490f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   490f8:	ldr	r0, [fp, #-16]
   490fc:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   49100:	ldr	r3, [fp, #-16]
   49104:	ldr	r3, [r3, #32]
   49108:	add	r2, r3, #1
   4910c:	ldr	r3, [fp, #-16]
   49110:	str	r2, [r3, #32]
   49114:	ldr	r3, [fp, #-16]
   49118:	ldr	r3, [r3, #20]
   4911c:	add	r1, r3, #1
   49120:	ldr	r2, [fp, #-16]
   49124:	str	r1, [r2, #20]
   49128:	mov	r2, #91	; 0x5b
   4912c:	strb	r2, [r3]
   49130:	ldr	r3, [fp, #-12]
   49134:	cmp	r3, #0
   49138:	beq	49260 <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   4913c:	ldr	r3, [fp, #-16]
   49140:	ldrb	r3, [r3, #25]
   49144:	cmp	r3, #0
   49148:	beq	49174 <flatcc_json_printer_int64_vector_field@@Base+0x120>
   4914c:	ldr	r3, [fp, #-16]
   49150:	ldr	r3, [r3, #20]
   49154:	add	r1, r3, #1
   49158:	ldr	r2, [fp, #-16]
   4915c:	str	r1, [r2, #20]
   49160:	mov	r2, #10
   49164:	strb	r2, [r3]
   49168:	ldr	r0, [fp, #-16]
   4916c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49170:	b	4917c <flatcc_json_printer_int64_vector_field@@Base+0x128>
   49174:	ldr	r0, [fp, #-16]
   49178:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4917c:	ldr	r0, [fp, #-8]
   49180:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   49184:	ldr	r3, [fp, #-16]
   49188:	ldr	r3, [r3, #20]
   4918c:	mov	r2, r3
   49190:	bl	40e50 <flatcc_json_parser_struct_as_root@@Base+0x2300>
   49194:	mov	r2, r0
   49198:	ldr	r3, [fp, #-16]
   4919c:	ldr	r3, [r3, #20]
   491a0:	add	r2, r3, r2
   491a4:	ldr	r3, [fp, #-16]
   491a8:	str	r2, [r3, #20]
   491ac:	ldr	r3, [fp, #-8]
   491b0:	add	r3, r3, #8
   491b4:	str	r3, [fp, #-8]
   491b8:	ldr	r3, [fp, #-12]
   491bc:	sub	r3, r3, #1
   491c0:	str	r3, [fp, #-12]
   491c4:	b	49260 <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   491c8:	ldr	r3, [fp, #-16]
   491cc:	ldr	r3, [r3, #20]
   491d0:	add	r1, r3, #1
   491d4:	ldr	r2, [fp, #-16]
   491d8:	str	r1, [r2, #20]
   491dc:	mov	r2, #44	; 0x2c
   491e0:	strb	r2, [r3]
   491e4:	ldr	r3, [fp, #-16]
   491e8:	ldrb	r3, [r3, #25]
   491ec:	cmp	r3, #0
   491f0:	beq	4921c <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   491f4:	ldr	r3, [fp, #-16]
   491f8:	ldr	r3, [r3, #20]
   491fc:	add	r1, r3, #1
   49200:	ldr	r2, [fp, #-16]
   49204:	str	r1, [r2, #20]
   49208:	mov	r2, #10
   4920c:	strb	r2, [r3]
   49210:	ldr	r0, [fp, #-16]
   49214:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49218:	b	49224 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
   4921c:	ldr	r0, [fp, #-16]
   49220:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49224:	ldr	r0, [fp, #-8]
   49228:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   4922c:	ldr	r3, [fp, #-16]
   49230:	ldr	r3, [r3, #20]
   49234:	mov	r2, r3
   49238:	bl	40e50 <flatcc_json_parser_struct_as_root@@Base+0x2300>
   4923c:	mov	r2, r0
   49240:	ldr	r3, [fp, #-16]
   49244:	ldr	r3, [r3, #20]
   49248:	add	r2, r3, r2
   4924c:	ldr	r3, [fp, #-16]
   49250:	str	r2, [r3, #20]
   49254:	ldr	r3, [fp, #-8]
   49258:	add	r3, r3, #8
   4925c:	str	r3, [fp, #-8]
   49260:	ldr	r3, [fp, #-12]
   49264:	sub	r2, r3, #1
   49268:	str	r2, [fp, #-12]
   4926c:	cmp	r3, #0
   49270:	bne	491c8 <flatcc_json_printer_int64_vector_field@@Base+0x174>
   49274:	ldr	r3, [fp, #-16]
   49278:	ldrb	r3, [r3, #25]
   4927c:	cmp	r3, #0
   49280:	beq	492bc <flatcc_json_printer_int64_vector_field@@Base+0x268>
   49284:	ldr	r3, [fp, #-16]
   49288:	ldr	r3, [r3, #20]
   4928c:	add	r1, r3, #1
   49290:	ldr	r2, [fp, #-16]
   49294:	str	r1, [r2, #20]
   49298:	mov	r2, #10
   4929c:	strb	r2, [r3]
   492a0:	ldr	r3, [fp, #-16]
   492a4:	ldr	r3, [r3, #32]
   492a8:	sub	r2, r3, #1
   492ac:	ldr	r3, [fp, #-16]
   492b0:	str	r2, [r3, #32]
   492b4:	ldr	r0, [fp, #-16]
   492b8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   492bc:	ldr	r3, [fp, #-16]
   492c0:	ldr	r3, [r3, #20]
   492c4:	add	r1, r3, #1
   492c8:	ldr	r2, [fp, #-16]
   492cc:	str	r1, [r2, #20]
   492d0:	mov	r2, #93	; 0x5d
   492d4:	strb	r2, [r3]
   492d8:	nop	{0}
   492dc:	sub	sp, fp, #4
   492e0:	ldr	fp, [sp]
   492e4:	add	sp, sp, #4
   492e8:	pop	{pc}		; (ldr pc, [sp], #4)

000492ec <flatcc_json_printer_bool_vector_field@@Base>:
   492ec:	str	fp, [sp, #-8]!
   492f0:	str	lr, [sp, #4]
   492f4:	add	fp, sp, #4
   492f8:	sub	sp, sp, #24
   492fc:	str	r0, [fp, #-16]
   49300:	str	r1, [fp, #-20]	; 0xffffffec
   49304:	str	r2, [fp, #-24]	; 0xffffffe8
   49308:	str	r3, [fp, #-28]	; 0xffffffe4
   4930c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49310:	ldr	r0, [fp, #-20]	; 0xffffffec
   49314:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   49318:	str	r0, [fp, #-8]
   4931c:	ldr	r3, [fp, #-8]
   49320:	cmp	r3, #0
   49324:	beq	49588 <flatcc_json_printer_bool_vector_field@@Base+0x29c>
   49328:	ldr	r3, [fp, #-20]	; 0xffffffec
   4932c:	ldr	r3, [r3, #16]
   49330:	add	r1, r3, #1
   49334:	ldr	r2, [fp, #-20]	; 0xffffffec
   49338:	str	r1, [r2, #16]
   4933c:	cmp	r3, #0
   49340:	beq	49360 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   49344:	ldr	r3, [fp, #-16]
   49348:	ldr	r3, [r3, #20]
   4934c:	add	r1, r3, #1
   49350:	ldr	r2, [fp, #-16]
   49354:	str	r1, [r2, #20]
   49358:	mov	r2, #44	; 0x2c
   4935c:	strb	r2, [r3]
   49360:	ldr	r0, [fp, #-8]
   49364:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   49368:	str	r0, [fp, #-8]
   4936c:	ldr	r0, [fp, #-8]
   49370:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   49374:	str	r0, [fp, #-12]
   49378:	ldr	r3, [fp, #-8]
   4937c:	add	r3, r3, #4
   49380:	str	r3, [fp, #-8]
   49384:	ldr	r3, [fp, #4]
   49388:	mov	r2, r3
   4938c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49390:	ldr	r0, [fp, #-16]
   49394:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   49398:	ldr	r3, [fp, #-16]
   4939c:	ldr	r3, [r3, #32]
   493a0:	add	r2, r3, #1
   493a4:	ldr	r3, [fp, #-16]
   493a8:	str	r2, [r3, #32]
   493ac:	ldr	r3, [fp, #-16]
   493b0:	ldr	r3, [r3, #20]
   493b4:	add	r1, r3, #1
   493b8:	ldr	r2, [fp, #-16]
   493bc:	str	r1, [r2, #20]
   493c0:	mov	r2, #91	; 0x5b
   493c4:	strb	r2, [r3]
   493c8:	ldr	r3, [fp, #-12]
   493cc:	cmp	r3, #0
   493d0:	beq	49510 <flatcc_json_printer_bool_vector_field@@Base+0x224>
   493d4:	ldr	r3, [fp, #-16]
   493d8:	ldrb	r3, [r3, #25]
   493dc:	cmp	r3, #0
   493e0:	beq	4940c <flatcc_json_printer_bool_vector_field@@Base+0x120>
   493e4:	ldr	r3, [fp, #-16]
   493e8:	ldr	r3, [r3, #20]
   493ec:	add	r1, r3, #1
   493f0:	ldr	r2, [fp, #-16]
   493f4:	str	r1, [r2, #20]
   493f8:	mov	r2, #10
   493fc:	strb	r2, [r3]
   49400:	ldr	r0, [fp, #-16]
   49404:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49408:	b	49414 <flatcc_json_printer_bool_vector_field@@Base+0x128>
   4940c:	ldr	r0, [fp, #-16]
   49410:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49414:	ldr	r0, [fp, #-8]
   49418:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   4941c:	mov	r3, r0
   49420:	mov	r2, r3
   49424:	ldr	r3, [fp, #-16]
   49428:	ldr	r3, [r3, #20]
   4942c:	mov	r1, r3
   49430:	mov	r0, r2
   49434:	bl	3f3bc <flatcc_json_parser_struct_as_root@@Base+0x86c>
   49438:	mov	r2, r0
   4943c:	ldr	r3, [fp, #-16]
   49440:	ldr	r3, [r3, #20]
   49444:	add	r2, r3, r2
   49448:	ldr	r3, [fp, #-16]
   4944c:	str	r2, [r3, #20]
   49450:	ldr	r3, [fp, #-8]
   49454:	add	r3, r3, #1
   49458:	str	r3, [fp, #-8]
   4945c:	ldr	r3, [fp, #-12]
   49460:	sub	r3, r3, #1
   49464:	str	r3, [fp, #-12]
   49468:	b	49510 <flatcc_json_printer_bool_vector_field@@Base+0x224>
   4946c:	ldr	r3, [fp, #-16]
   49470:	ldr	r3, [r3, #20]
   49474:	add	r1, r3, #1
   49478:	ldr	r2, [fp, #-16]
   4947c:	str	r1, [r2, #20]
   49480:	mov	r2, #44	; 0x2c
   49484:	strb	r2, [r3]
   49488:	ldr	r3, [fp, #-16]
   4948c:	ldrb	r3, [r3, #25]
   49490:	cmp	r3, #0
   49494:	beq	494c0 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   49498:	ldr	r3, [fp, #-16]
   4949c:	ldr	r3, [r3, #20]
   494a0:	add	r1, r3, #1
   494a4:	ldr	r2, [fp, #-16]
   494a8:	str	r1, [r2, #20]
   494ac:	mov	r2, #10
   494b0:	strb	r2, [r3]
   494b4:	ldr	r0, [fp, #-16]
   494b8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   494bc:	b	494c8 <flatcc_json_printer_bool_vector_field@@Base+0x1dc>
   494c0:	ldr	r0, [fp, #-16]
   494c4:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   494c8:	ldr	r0, [fp, #-8]
   494cc:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   494d0:	mov	r3, r0
   494d4:	mov	r2, r3
   494d8:	ldr	r3, [fp, #-16]
   494dc:	ldr	r3, [r3, #20]
   494e0:	mov	r1, r3
   494e4:	mov	r0, r2
   494e8:	bl	3f3bc <flatcc_json_parser_struct_as_root@@Base+0x86c>
   494ec:	mov	r2, r0
   494f0:	ldr	r3, [fp, #-16]
   494f4:	ldr	r3, [r3, #20]
   494f8:	add	r2, r3, r2
   494fc:	ldr	r3, [fp, #-16]
   49500:	str	r2, [r3, #20]
   49504:	ldr	r3, [fp, #-8]
   49508:	add	r3, r3, #1
   4950c:	str	r3, [fp, #-8]
   49510:	ldr	r3, [fp, #-12]
   49514:	sub	r2, r3, #1
   49518:	str	r2, [fp, #-12]
   4951c:	cmp	r3, #0
   49520:	bne	4946c <flatcc_json_printer_bool_vector_field@@Base+0x180>
   49524:	ldr	r3, [fp, #-16]
   49528:	ldrb	r3, [r3, #25]
   4952c:	cmp	r3, #0
   49530:	beq	4956c <flatcc_json_printer_bool_vector_field@@Base+0x280>
   49534:	ldr	r3, [fp, #-16]
   49538:	ldr	r3, [r3, #20]
   4953c:	add	r1, r3, #1
   49540:	ldr	r2, [fp, #-16]
   49544:	str	r1, [r2, #20]
   49548:	mov	r2, #10
   4954c:	strb	r2, [r3]
   49550:	ldr	r3, [fp, #-16]
   49554:	ldr	r3, [r3, #32]
   49558:	sub	r2, r3, #1
   4955c:	ldr	r3, [fp, #-16]
   49560:	str	r2, [r3, #32]
   49564:	ldr	r0, [fp, #-16]
   49568:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4956c:	ldr	r3, [fp, #-16]
   49570:	ldr	r3, [r3, #20]
   49574:	add	r1, r3, #1
   49578:	ldr	r2, [fp, #-16]
   4957c:	str	r1, [r2, #20]
   49580:	mov	r2, #93	; 0x5d
   49584:	strb	r2, [r3]
   49588:	nop	{0}
   4958c:	sub	sp, fp, #4
   49590:	ldr	fp, [sp]
   49594:	add	sp, sp, #4
   49598:	pop	{pc}		; (ldr pc, [sp], #4)

0004959c <flatcc_json_printer_float_vector_field@@Base>:
   4959c:	str	fp, [sp, #-8]!
   495a0:	str	lr, [sp, #4]
   495a4:	add	fp, sp, #4
   495a8:	sub	sp, sp, #24
   495ac:	str	r0, [fp, #-16]
   495b0:	str	r1, [fp, #-20]	; 0xffffffec
   495b4:	str	r2, [fp, #-24]	; 0xffffffe8
   495b8:	str	r3, [fp, #-28]	; 0xffffffe4
   495bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   495c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   495c4:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   495c8:	str	r0, [fp, #-8]
   495cc:	ldr	r3, [fp, #-8]
   495d0:	cmp	r3, #0
   495d4:	beq	49838 <flatcc_json_printer_float_vector_field@@Base+0x29c>
   495d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   495dc:	ldr	r3, [r3, #16]
   495e0:	add	r1, r3, #1
   495e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   495e8:	str	r1, [r2, #16]
   495ec:	cmp	r3, #0
   495f0:	beq	49610 <flatcc_json_printer_float_vector_field@@Base+0x74>
   495f4:	ldr	r3, [fp, #-16]
   495f8:	ldr	r3, [r3, #20]
   495fc:	add	r1, r3, #1
   49600:	ldr	r2, [fp, #-16]
   49604:	str	r1, [r2, #20]
   49608:	mov	r2, #44	; 0x2c
   4960c:	strb	r2, [r3]
   49610:	ldr	r0, [fp, #-8]
   49614:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   49618:	str	r0, [fp, #-8]
   4961c:	ldr	r0, [fp, #-8]
   49620:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   49624:	str	r0, [fp, #-12]
   49628:	ldr	r3, [fp, #-8]
   4962c:	add	r3, r3, #4
   49630:	str	r3, [fp, #-8]
   49634:	ldr	r3, [fp, #4]
   49638:	mov	r2, r3
   4963c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49640:	ldr	r0, [fp, #-16]
   49644:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   49648:	ldr	r3, [fp, #-16]
   4964c:	ldr	r3, [r3, #32]
   49650:	add	r2, r3, #1
   49654:	ldr	r3, [fp, #-16]
   49658:	str	r2, [r3, #32]
   4965c:	ldr	r3, [fp, #-16]
   49660:	ldr	r3, [r3, #20]
   49664:	add	r1, r3, #1
   49668:	ldr	r2, [fp, #-16]
   4966c:	str	r1, [r2, #20]
   49670:	mov	r2, #91	; 0x5b
   49674:	strb	r2, [r3]
   49678:	ldr	r3, [fp, #-12]
   4967c:	cmp	r3, #0
   49680:	beq	497c0 <flatcc_json_printer_float_vector_field@@Base+0x224>
   49684:	ldr	r3, [fp, #-16]
   49688:	ldrb	r3, [r3, #25]
   4968c:	cmp	r3, #0
   49690:	beq	496bc <flatcc_json_printer_float_vector_field@@Base+0x120>
   49694:	ldr	r3, [fp, #-16]
   49698:	ldr	r3, [r3, #20]
   4969c:	add	r1, r3, #1
   496a0:	ldr	r2, [fp, #-16]
   496a4:	str	r1, [r2, #20]
   496a8:	mov	r2, #10
   496ac:	strb	r2, [r3]
   496b0:	ldr	r0, [fp, #-16]
   496b4:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   496b8:	b	496c4 <flatcc_json_printer_float_vector_field@@Base+0x128>
   496bc:	ldr	r0, [fp, #-16]
   496c0:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   496c4:	ldr	r0, [fp, #-8]
   496c8:	bl	3efe0 <flatcc_json_parser_struct_as_root@@Base+0x490>
   496cc:	vmov.f32	s15, s0
   496d0:	vcvt.f64.f32	d7, s15
   496d4:	ldr	r3, [fp, #-16]
   496d8:	ldr	r3, [r3, #20]
   496dc:	mov	r0, r3
   496e0:	vmov.f64	d0, d7
   496e4:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   496e8:	mov	r2, r0
   496ec:	ldr	r3, [fp, #-16]
   496f0:	ldr	r3, [r3, #20]
   496f4:	add	r2, r3, r2
   496f8:	ldr	r3, [fp, #-16]
   496fc:	str	r2, [r3, #20]
   49700:	ldr	r3, [fp, #-8]
   49704:	add	r3, r3, #4
   49708:	str	r3, [fp, #-8]
   4970c:	ldr	r3, [fp, #-12]
   49710:	sub	r3, r3, #1
   49714:	str	r3, [fp, #-12]
   49718:	b	497c0 <flatcc_json_printer_float_vector_field@@Base+0x224>
   4971c:	ldr	r3, [fp, #-16]
   49720:	ldr	r3, [r3, #20]
   49724:	add	r1, r3, #1
   49728:	ldr	r2, [fp, #-16]
   4972c:	str	r1, [r2, #20]
   49730:	mov	r2, #44	; 0x2c
   49734:	strb	r2, [r3]
   49738:	ldr	r3, [fp, #-16]
   4973c:	ldrb	r3, [r3, #25]
   49740:	cmp	r3, #0
   49744:	beq	49770 <flatcc_json_printer_float_vector_field@@Base+0x1d4>
   49748:	ldr	r3, [fp, #-16]
   4974c:	ldr	r3, [r3, #20]
   49750:	add	r1, r3, #1
   49754:	ldr	r2, [fp, #-16]
   49758:	str	r1, [r2, #20]
   4975c:	mov	r2, #10
   49760:	strb	r2, [r3]
   49764:	ldr	r0, [fp, #-16]
   49768:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4976c:	b	49778 <flatcc_json_printer_float_vector_field@@Base+0x1dc>
   49770:	ldr	r0, [fp, #-16]
   49774:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49778:	ldr	r0, [fp, #-8]
   4977c:	bl	3efe0 <flatcc_json_parser_struct_as_root@@Base+0x490>
   49780:	vmov.f32	s15, s0
   49784:	vcvt.f64.f32	d7, s15
   49788:	ldr	r3, [fp, #-16]
   4978c:	ldr	r3, [r3, #20]
   49790:	mov	r0, r3
   49794:	vmov.f64	d0, d7
   49798:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   4979c:	mov	r2, r0
   497a0:	ldr	r3, [fp, #-16]
   497a4:	ldr	r3, [r3, #20]
   497a8:	add	r2, r3, r2
   497ac:	ldr	r3, [fp, #-16]
   497b0:	str	r2, [r3, #20]
   497b4:	ldr	r3, [fp, #-8]
   497b8:	add	r3, r3, #4
   497bc:	str	r3, [fp, #-8]
   497c0:	ldr	r3, [fp, #-12]
   497c4:	sub	r2, r3, #1
   497c8:	str	r2, [fp, #-12]
   497cc:	cmp	r3, #0
   497d0:	bne	4971c <flatcc_json_printer_float_vector_field@@Base+0x180>
   497d4:	ldr	r3, [fp, #-16]
   497d8:	ldrb	r3, [r3, #25]
   497dc:	cmp	r3, #0
   497e0:	beq	4981c <flatcc_json_printer_float_vector_field@@Base+0x280>
   497e4:	ldr	r3, [fp, #-16]
   497e8:	ldr	r3, [r3, #20]
   497ec:	add	r1, r3, #1
   497f0:	ldr	r2, [fp, #-16]
   497f4:	str	r1, [r2, #20]
   497f8:	mov	r2, #10
   497fc:	strb	r2, [r3]
   49800:	ldr	r3, [fp, #-16]
   49804:	ldr	r3, [r3, #32]
   49808:	sub	r2, r3, #1
   4980c:	ldr	r3, [fp, #-16]
   49810:	str	r2, [r3, #32]
   49814:	ldr	r0, [fp, #-16]
   49818:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4981c:	ldr	r3, [fp, #-16]
   49820:	ldr	r3, [r3, #20]
   49824:	add	r1, r3, #1
   49828:	ldr	r2, [fp, #-16]
   4982c:	str	r1, [r2, #20]
   49830:	mov	r2, #93	; 0x5d
   49834:	strb	r2, [r3]
   49838:	nop	{0}
   4983c:	sub	sp, fp, #4
   49840:	ldr	fp, [sp]
   49844:	add	sp, sp, #4
   49848:	pop	{pc}		; (ldr pc, [sp], #4)

0004984c <flatcc_json_printer_double_vector_field@@Base>:
   4984c:	str	fp, [sp, #-8]!
   49850:	str	lr, [sp, #4]
   49854:	add	fp, sp, #4
   49858:	sub	sp, sp, #24
   4985c:	str	r0, [fp, #-16]
   49860:	str	r1, [fp, #-20]	; 0xffffffec
   49864:	str	r2, [fp, #-24]	; 0xffffffe8
   49868:	str	r3, [fp, #-28]	; 0xffffffe4
   4986c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49870:	ldr	r0, [fp, #-20]	; 0xffffffec
   49874:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   49878:	str	r0, [fp, #-8]
   4987c:	ldr	r3, [fp, #-8]
   49880:	cmp	r3, #0
   49884:	beq	49ae0 <flatcc_json_printer_double_vector_field@@Base+0x294>
   49888:	ldr	r3, [fp, #-20]	; 0xffffffec
   4988c:	ldr	r3, [r3, #16]
   49890:	add	r1, r3, #1
   49894:	ldr	r2, [fp, #-20]	; 0xffffffec
   49898:	str	r1, [r2, #16]
   4989c:	cmp	r3, #0
   498a0:	beq	498c0 <flatcc_json_printer_double_vector_field@@Base+0x74>
   498a4:	ldr	r3, [fp, #-16]
   498a8:	ldr	r3, [r3, #20]
   498ac:	add	r1, r3, #1
   498b0:	ldr	r2, [fp, #-16]
   498b4:	str	r1, [r2, #20]
   498b8:	mov	r2, #44	; 0x2c
   498bc:	strb	r2, [r3]
   498c0:	ldr	r0, [fp, #-8]
   498c4:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   498c8:	str	r0, [fp, #-8]
   498cc:	ldr	r0, [fp, #-8]
   498d0:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   498d4:	str	r0, [fp, #-12]
   498d8:	ldr	r3, [fp, #-8]
   498dc:	add	r3, r3, #4
   498e0:	str	r3, [fp, #-8]
   498e4:	ldr	r3, [fp, #4]
   498e8:	mov	r2, r3
   498ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   498f0:	ldr	r0, [fp, #-16]
   498f4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   498f8:	ldr	r3, [fp, #-16]
   498fc:	ldr	r3, [r3, #32]
   49900:	add	r2, r3, #1
   49904:	ldr	r3, [fp, #-16]
   49908:	str	r2, [r3, #32]
   4990c:	ldr	r3, [fp, #-16]
   49910:	ldr	r3, [r3, #20]
   49914:	add	r1, r3, #1
   49918:	ldr	r2, [fp, #-16]
   4991c:	str	r1, [r2, #20]
   49920:	mov	r2, #91	; 0x5b
   49924:	strb	r2, [r3]
   49928:	ldr	r3, [fp, #-12]
   4992c:	cmp	r3, #0
   49930:	beq	49a68 <flatcc_json_printer_double_vector_field@@Base+0x21c>
   49934:	ldr	r3, [fp, #-16]
   49938:	ldrb	r3, [r3, #25]
   4993c:	cmp	r3, #0
   49940:	beq	4996c <flatcc_json_printer_double_vector_field@@Base+0x120>
   49944:	ldr	r3, [fp, #-16]
   49948:	ldr	r3, [r3, #20]
   4994c:	add	r1, r3, #1
   49950:	ldr	r2, [fp, #-16]
   49954:	str	r1, [r2, #20]
   49958:	mov	r2, #10
   4995c:	strb	r2, [r3]
   49960:	ldr	r0, [fp, #-16]
   49964:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49968:	b	49974 <flatcc_json_printer_double_vector_field@@Base+0x128>
   4996c:	ldr	r0, [fp, #-16]
   49970:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49974:	ldr	r0, [fp, #-8]
   49978:	bl	3f054 <flatcc_json_parser_struct_as_root@@Base+0x504>
   4997c:	vmov.f64	d7, d0
   49980:	ldr	r3, [fp, #-16]
   49984:	ldr	r3, [r3, #20]
   49988:	mov	r0, r3
   4998c:	vmov.f64	d0, d7
   49990:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   49994:	mov	r2, r0
   49998:	ldr	r3, [fp, #-16]
   4999c:	ldr	r3, [r3, #20]
   499a0:	add	r2, r3, r2
   499a4:	ldr	r3, [fp, #-16]
   499a8:	str	r2, [r3, #20]
   499ac:	ldr	r3, [fp, #-8]
   499b0:	add	r3, r3, #8
   499b4:	str	r3, [fp, #-8]
   499b8:	ldr	r3, [fp, #-12]
   499bc:	sub	r3, r3, #1
   499c0:	str	r3, [fp, #-12]
   499c4:	b	49a68 <flatcc_json_printer_double_vector_field@@Base+0x21c>
   499c8:	ldr	r3, [fp, #-16]
   499cc:	ldr	r3, [r3, #20]
   499d0:	add	r1, r3, #1
   499d4:	ldr	r2, [fp, #-16]
   499d8:	str	r1, [r2, #20]
   499dc:	mov	r2, #44	; 0x2c
   499e0:	strb	r2, [r3]
   499e4:	ldr	r3, [fp, #-16]
   499e8:	ldrb	r3, [r3, #25]
   499ec:	cmp	r3, #0
   499f0:	beq	49a1c <flatcc_json_printer_double_vector_field@@Base+0x1d0>
   499f4:	ldr	r3, [fp, #-16]
   499f8:	ldr	r3, [r3, #20]
   499fc:	add	r1, r3, #1
   49a00:	ldr	r2, [fp, #-16]
   49a04:	str	r1, [r2, #20]
   49a08:	mov	r2, #10
   49a0c:	strb	r2, [r3]
   49a10:	ldr	r0, [fp, #-16]
   49a14:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49a18:	b	49a24 <flatcc_json_printer_double_vector_field@@Base+0x1d8>
   49a1c:	ldr	r0, [fp, #-16]
   49a20:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49a24:	ldr	r0, [fp, #-8]
   49a28:	bl	3f054 <flatcc_json_parser_struct_as_root@@Base+0x504>
   49a2c:	vmov.f64	d7, d0
   49a30:	ldr	r3, [fp, #-16]
   49a34:	ldr	r3, [r3, #20]
   49a38:	mov	r0, r3
   49a3c:	vmov.f64	d0, d7
   49a40:	bl	42b98 <flatcc_json_parser_struct_as_root@@Base+0x4048>
   49a44:	mov	r2, r0
   49a48:	ldr	r3, [fp, #-16]
   49a4c:	ldr	r3, [r3, #20]
   49a50:	add	r2, r3, r2
   49a54:	ldr	r3, [fp, #-16]
   49a58:	str	r2, [r3, #20]
   49a5c:	ldr	r3, [fp, #-8]
   49a60:	add	r3, r3, #8
   49a64:	str	r3, [fp, #-8]
   49a68:	ldr	r3, [fp, #-12]
   49a6c:	sub	r2, r3, #1
   49a70:	str	r2, [fp, #-12]
   49a74:	cmp	r3, #0
   49a78:	bne	499c8 <flatcc_json_printer_double_vector_field@@Base+0x17c>
   49a7c:	ldr	r3, [fp, #-16]
   49a80:	ldrb	r3, [r3, #25]
   49a84:	cmp	r3, #0
   49a88:	beq	49ac4 <flatcc_json_printer_double_vector_field@@Base+0x278>
   49a8c:	ldr	r3, [fp, #-16]
   49a90:	ldr	r3, [r3, #20]
   49a94:	add	r1, r3, #1
   49a98:	ldr	r2, [fp, #-16]
   49a9c:	str	r1, [r2, #20]
   49aa0:	mov	r2, #10
   49aa4:	strb	r2, [r3]
   49aa8:	ldr	r3, [fp, #-16]
   49aac:	ldr	r3, [r3, #32]
   49ab0:	sub	r2, r3, #1
   49ab4:	ldr	r3, [fp, #-16]
   49ab8:	str	r2, [r3, #32]
   49abc:	ldr	r0, [fp, #-16]
   49ac0:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49ac4:	ldr	r3, [fp, #-16]
   49ac8:	ldr	r3, [r3, #20]
   49acc:	add	r1, r3, #1
   49ad0:	ldr	r2, [fp, #-16]
   49ad4:	str	r1, [r2, #20]
   49ad8:	mov	r2, #93	; 0x5d
   49adc:	strb	r2, [r3]
   49ae0:	nop	{0}
   49ae4:	sub	sp, fp, #4
   49ae8:	ldr	fp, [sp]
   49aec:	add	sp, sp, #4
   49af0:	pop	{pc}		; (ldr pc, [sp], #4)

00049af4 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   49af4:	str	fp, [sp, #-8]!
   49af8:	str	lr, [sp, #4]
   49afc:	add	fp, sp, #4
   49b00:	sub	sp, sp, #32
   49b04:	str	r0, [fp, #-16]
   49b08:	str	r1, [fp, #-20]	; 0xffffffec
   49b0c:	str	r2, [fp, #-24]	; 0xffffffe8
   49b10:	str	r3, [fp, #-28]	; 0xffffffe4
   49b14:	ldr	r3, [fp, #-16]
   49b18:	ldrb	r3, [r3, #27]
   49b1c:	cmp	r3, #0
   49b20:	beq	49b44 <flatcc_json_printer_utype_enum_vector_field@@Base+0x50>
   49b24:	ldr	r3, [fp, #4]
   49b28:	str	r3, [sp]
   49b2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49b30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49b34:	ldr	r1, [fp, #-20]	; 0xffffffec
   49b38:	ldr	r0, [fp, #-16]
   49b3c:	bl	47afc <flatcc_json_printer_utype_vector_field@@Base>
   49b40:	b	49d88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x294>
   49b44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   49b4c:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   49b50:	str	r0, [fp, #-8]
   49b54:	ldr	r3, [fp, #-8]
   49b58:	cmp	r3, #0
   49b5c:	beq	49d88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x294>
   49b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   49b64:	ldr	r3, [r3, #16]
   49b68:	add	r1, r3, #1
   49b6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   49b70:	str	r1, [r2, #16]
   49b74:	cmp	r3, #0
   49b78:	beq	49b98 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa4>
   49b7c:	ldr	r3, [fp, #-16]
   49b80:	ldr	r3, [r3, #20]
   49b84:	add	r1, r3, #1
   49b88:	ldr	r2, [fp, #-16]
   49b8c:	str	r1, [r2, #20]
   49b90:	mov	r2, #44	; 0x2c
   49b94:	strb	r2, [r3]
   49b98:	ldr	r0, [fp, #-8]
   49b9c:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   49ba0:	str	r0, [fp, #-8]
   49ba4:	ldr	r0, [fp, #-8]
   49ba8:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   49bac:	str	r0, [fp, #-12]
   49bb0:	ldr	r3, [fp, #-8]
   49bb4:	add	r3, r3, #4
   49bb8:	str	r3, [fp, #-8]
   49bbc:	ldr	r3, [fp, #4]
   49bc0:	mov	r2, r3
   49bc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49bc8:	ldr	r0, [fp, #-16]
   49bcc:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   49bd0:	ldr	r3, [fp, #-16]
   49bd4:	ldr	r3, [r3, #32]
   49bd8:	add	r2, r3, #1
   49bdc:	ldr	r3, [fp, #-16]
   49be0:	str	r2, [r3, #32]
   49be4:	ldr	r3, [fp, #-16]
   49be8:	ldr	r3, [r3, #20]
   49bec:	add	r1, r3, #1
   49bf0:	ldr	r2, [fp, #-16]
   49bf4:	str	r1, [r2, #20]
   49bf8:	mov	r2, #91	; 0x5b
   49bfc:	strb	r2, [r3]
   49c00:	ldr	r3, [fp, #-12]
   49c04:	cmp	r3, #0
   49c08:	beq	49d10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x21c>
   49c0c:	ldr	r3, [fp, #-16]
   49c10:	ldrb	r3, [r3, #25]
   49c14:	cmp	r3, #0
   49c18:	beq	49c44 <flatcc_json_printer_utype_enum_vector_field@@Base+0x150>
   49c1c:	ldr	r3, [fp, #-16]
   49c20:	ldr	r3, [r3, #20]
   49c24:	add	r1, r3, #1
   49c28:	ldr	r2, [fp, #-16]
   49c2c:	str	r1, [r2, #20]
   49c30:	mov	r2, #10
   49c34:	strb	r2, [r3]
   49c38:	ldr	r0, [fp, #-16]
   49c3c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49c40:	b	49c4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x158>
   49c44:	ldr	r0, [fp, #-16]
   49c48:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49c4c:	ldr	r0, [fp, #-8]
   49c50:	bl	3f240 <flatcc_json_parser_struct_as_root@@Base+0x6f0>
   49c54:	mov	r3, r0
   49c58:	mov	r2, r3
   49c5c:	ldr	r3, [fp, #8]
   49c60:	mov	r1, r2
   49c64:	ldr	r0, [fp, #-16]
   49c68:	blx	r3
   49c6c:	ldr	r3, [fp, #-8]
   49c70:	add	r3, r3, #1
   49c74:	str	r3, [fp, #-8]
   49c78:	ldr	r3, [fp, #-12]
   49c7c:	sub	r3, r3, #1
   49c80:	str	r3, [fp, #-12]
   49c84:	b	49d10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x21c>
   49c88:	ldr	r3, [fp, #-16]
   49c8c:	ldr	r3, [r3, #20]
   49c90:	add	r1, r3, #1
   49c94:	ldr	r2, [fp, #-16]
   49c98:	str	r1, [r2, #20]
   49c9c:	mov	r2, #44	; 0x2c
   49ca0:	strb	r2, [r3]
   49ca4:	ldr	r3, [fp, #-16]
   49ca8:	ldrb	r3, [r3, #25]
   49cac:	cmp	r3, #0
   49cb0:	beq	49cdc <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e8>
   49cb4:	ldr	r3, [fp, #-16]
   49cb8:	ldr	r3, [r3, #20]
   49cbc:	add	r1, r3, #1
   49cc0:	ldr	r2, [fp, #-16]
   49cc4:	str	r1, [r2, #20]
   49cc8:	mov	r2, #10
   49ccc:	strb	r2, [r3]
   49cd0:	ldr	r0, [fp, #-16]
   49cd4:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49cd8:	b	49ce4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
   49cdc:	ldr	r0, [fp, #-16]
   49ce0:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49ce4:	ldr	r0, [fp, #-8]
   49ce8:	bl	3f240 <flatcc_json_parser_struct_as_root@@Base+0x6f0>
   49cec:	mov	r3, r0
   49cf0:	mov	r2, r3
   49cf4:	ldr	r3, [fp, #8]
   49cf8:	mov	r1, r2
   49cfc:	ldr	r0, [fp, #-16]
   49d00:	blx	r3
   49d04:	ldr	r3, [fp, #-8]
   49d08:	add	r3, r3, #1
   49d0c:	str	r3, [fp, #-8]
   49d10:	ldr	r3, [fp, #-12]
   49d14:	sub	r2, r3, #1
   49d18:	str	r2, [fp, #-12]
   49d1c:	cmp	r3, #0
   49d20:	bne	49c88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   49d24:	ldr	r3, [fp, #-16]
   49d28:	ldrb	r3, [r3, #25]
   49d2c:	cmp	r3, #0
   49d30:	beq	49d6c <flatcc_json_printer_utype_enum_vector_field@@Base+0x278>
   49d34:	ldr	r3, [fp, #-16]
   49d38:	ldr	r3, [r3, #20]
   49d3c:	add	r1, r3, #1
   49d40:	ldr	r2, [fp, #-16]
   49d44:	str	r1, [r2, #20]
   49d48:	mov	r2, #10
   49d4c:	strb	r2, [r3]
   49d50:	ldr	r3, [fp, #-16]
   49d54:	ldr	r3, [r3, #32]
   49d58:	sub	r2, r3, #1
   49d5c:	ldr	r3, [fp, #-16]
   49d60:	str	r2, [r3, #32]
   49d64:	ldr	r0, [fp, #-16]
   49d68:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49d6c:	ldr	r3, [fp, #-16]
   49d70:	ldr	r3, [r3, #20]
   49d74:	add	r1, r3, #1
   49d78:	ldr	r2, [fp, #-16]
   49d7c:	str	r1, [r2, #20]
   49d80:	mov	r2, #93	; 0x5d
   49d84:	strb	r2, [r3]
   49d88:	sub	sp, fp, #4
   49d8c:	ldr	fp, [sp]
   49d90:	add	sp, sp, #4
   49d94:	pop	{pc}		; (ldr pc, [sp], #4)

00049d98 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   49d98:	str	fp, [sp, #-8]!
   49d9c:	str	lr, [sp, #4]
   49da0:	add	fp, sp, #4
   49da4:	sub	sp, sp, #32
   49da8:	str	r0, [fp, #-16]
   49dac:	str	r1, [fp, #-20]	; 0xffffffec
   49db0:	str	r2, [fp, #-24]	; 0xffffffe8
   49db4:	str	r3, [fp, #-28]	; 0xffffffe4
   49db8:	ldr	r3, [fp, #-16]
   49dbc:	ldrb	r3, [r3, #27]
   49dc0:	cmp	r3, #0
   49dc4:	beq	49de8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x50>
   49dc8:	ldr	r3, [fp, #4]
   49dcc:	str	r3, [sp]
   49dd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49dd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49dd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   49ddc:	ldr	r0, [fp, #-16]
   49de0:	bl	47dac <flatcc_json_printer_uint8_vector_field@@Base>
   49de4:	b	4a02c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x294>
   49de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49dec:	ldr	r0, [fp, #-20]	; 0xffffffec
   49df0:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   49df4:	str	r0, [fp, #-8]
   49df8:	ldr	r3, [fp, #-8]
   49dfc:	cmp	r3, #0
   49e00:	beq	4a02c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x294>
   49e04:	ldr	r3, [fp, #-20]	; 0xffffffec
   49e08:	ldr	r3, [r3, #16]
   49e0c:	add	r1, r3, #1
   49e10:	ldr	r2, [fp, #-20]	; 0xffffffec
   49e14:	str	r1, [r2, #16]
   49e18:	cmp	r3, #0
   49e1c:	beq	49e3c <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa4>
   49e20:	ldr	r3, [fp, #-16]
   49e24:	ldr	r3, [r3, #20]
   49e28:	add	r1, r3, #1
   49e2c:	ldr	r2, [fp, #-16]
   49e30:	str	r1, [r2, #20]
   49e34:	mov	r2, #44	; 0x2c
   49e38:	strb	r2, [r3]
   49e3c:	ldr	r0, [fp, #-8]
   49e40:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   49e44:	str	r0, [fp, #-8]
   49e48:	ldr	r0, [fp, #-8]
   49e4c:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   49e50:	str	r0, [fp, #-12]
   49e54:	ldr	r3, [fp, #-8]
   49e58:	add	r3, r3, #4
   49e5c:	str	r3, [fp, #-8]
   49e60:	ldr	r3, [fp, #4]
   49e64:	mov	r2, r3
   49e68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49e6c:	ldr	r0, [fp, #-16]
   49e70:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   49e74:	ldr	r3, [fp, #-16]
   49e78:	ldr	r3, [r3, #32]
   49e7c:	add	r2, r3, #1
   49e80:	ldr	r3, [fp, #-16]
   49e84:	str	r2, [r3, #32]
   49e88:	ldr	r3, [fp, #-16]
   49e8c:	ldr	r3, [r3, #20]
   49e90:	add	r1, r3, #1
   49e94:	ldr	r2, [fp, #-16]
   49e98:	str	r1, [r2, #20]
   49e9c:	mov	r2, #91	; 0x5b
   49ea0:	strb	r2, [r3]
   49ea4:	ldr	r3, [fp, #-12]
   49ea8:	cmp	r3, #0
   49eac:	beq	49fb4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x21c>
   49eb0:	ldr	r3, [fp, #-16]
   49eb4:	ldrb	r3, [r3, #25]
   49eb8:	cmp	r3, #0
   49ebc:	beq	49ee8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x150>
   49ec0:	ldr	r3, [fp, #-16]
   49ec4:	ldr	r3, [r3, #20]
   49ec8:	add	r1, r3, #1
   49ecc:	ldr	r2, [fp, #-16]
   49ed0:	str	r1, [r2, #20]
   49ed4:	mov	r2, #10
   49ed8:	strb	r2, [r3]
   49edc:	ldr	r0, [fp, #-16]
   49ee0:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49ee4:	b	49ef0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x158>
   49ee8:	ldr	r0, [fp, #-16]
   49eec:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49ef0:	ldr	r0, [fp, #-8]
   49ef4:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   49ef8:	mov	r3, r0
   49efc:	mov	r2, r3
   49f00:	ldr	r3, [fp, #8]
   49f04:	mov	r1, r2
   49f08:	ldr	r0, [fp, #-16]
   49f0c:	blx	r3
   49f10:	ldr	r3, [fp, #-8]
   49f14:	add	r3, r3, #1
   49f18:	str	r3, [fp, #-8]
   49f1c:	ldr	r3, [fp, #-12]
   49f20:	sub	r3, r3, #1
   49f24:	str	r3, [fp, #-12]
   49f28:	b	49fb4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x21c>
   49f2c:	ldr	r3, [fp, #-16]
   49f30:	ldr	r3, [r3, #20]
   49f34:	add	r1, r3, #1
   49f38:	ldr	r2, [fp, #-16]
   49f3c:	str	r1, [r2, #20]
   49f40:	mov	r2, #44	; 0x2c
   49f44:	strb	r2, [r3]
   49f48:	ldr	r3, [fp, #-16]
   49f4c:	ldrb	r3, [r3, #25]
   49f50:	cmp	r3, #0
   49f54:	beq	49f80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e8>
   49f58:	ldr	r3, [fp, #-16]
   49f5c:	ldr	r3, [r3, #20]
   49f60:	add	r1, r3, #1
   49f64:	ldr	r2, [fp, #-16]
   49f68:	str	r1, [r2, #20]
   49f6c:	mov	r2, #10
   49f70:	strb	r2, [r3]
   49f74:	ldr	r0, [fp, #-16]
   49f78:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   49f7c:	b	49f88 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
   49f80:	ldr	r0, [fp, #-16]
   49f84:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   49f88:	ldr	r0, [fp, #-8]
   49f8c:	bl	3eca0 <flatcc_json_parser_struct_as_root@@Base+0x150>
   49f90:	mov	r3, r0
   49f94:	mov	r2, r3
   49f98:	ldr	r3, [fp, #8]
   49f9c:	mov	r1, r2
   49fa0:	ldr	r0, [fp, #-16]
   49fa4:	blx	r3
   49fa8:	ldr	r3, [fp, #-8]
   49fac:	add	r3, r3, #1
   49fb0:	str	r3, [fp, #-8]
   49fb4:	ldr	r3, [fp, #-12]
   49fb8:	sub	r2, r3, #1
   49fbc:	str	r2, [fp, #-12]
   49fc0:	cmp	r3, #0
   49fc4:	bne	49f2c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   49fc8:	ldr	r3, [fp, #-16]
   49fcc:	ldrb	r3, [r3, #25]
   49fd0:	cmp	r3, #0
   49fd4:	beq	4a010 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x278>
   49fd8:	ldr	r3, [fp, #-16]
   49fdc:	ldr	r3, [r3, #20]
   49fe0:	add	r1, r3, #1
   49fe4:	ldr	r2, [fp, #-16]
   49fe8:	str	r1, [r2, #20]
   49fec:	mov	r2, #10
   49ff0:	strb	r2, [r3]
   49ff4:	ldr	r3, [fp, #-16]
   49ff8:	ldr	r3, [r3, #32]
   49ffc:	sub	r2, r3, #1
   4a000:	ldr	r3, [fp, #-16]
   4a004:	str	r2, [r3, #32]
   4a008:	ldr	r0, [fp, #-16]
   4a00c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a010:	ldr	r3, [fp, #-16]
   4a014:	ldr	r3, [r3, #20]
   4a018:	add	r1, r3, #1
   4a01c:	ldr	r2, [fp, #-16]
   4a020:	str	r1, [r2, #20]
   4a024:	mov	r2, #93	; 0x5d
   4a028:	strb	r2, [r3]
   4a02c:	sub	sp, fp, #4
   4a030:	ldr	fp, [sp]
   4a034:	add	sp, sp, #4
   4a038:	pop	{pc}		; (ldr pc, [sp], #4)

0004a03c <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   4a03c:	str	fp, [sp, #-8]!
   4a040:	str	lr, [sp, #4]
   4a044:	add	fp, sp, #4
   4a048:	sub	sp, sp, #32
   4a04c:	str	r0, [fp, #-16]
   4a050:	str	r1, [fp, #-20]	; 0xffffffec
   4a054:	str	r2, [fp, #-24]	; 0xffffffe8
   4a058:	str	r3, [fp, #-28]	; 0xffffffe4
   4a05c:	ldr	r3, [fp, #-16]
   4a060:	ldrb	r3, [r3, #27]
   4a064:	cmp	r3, #0
   4a068:	beq	4a08c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x50>
   4a06c:	ldr	r3, [fp, #4]
   4a070:	str	r3, [sp]
   4a074:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a078:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a07c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a080:	ldr	r0, [fp, #-16]
   4a084:	bl	4805c <flatcc_json_printer_uint16_vector_field@@Base>
   4a088:	b	4a2d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x294>
   4a08c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a090:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a094:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4a098:	str	r0, [fp, #-8]
   4a09c:	ldr	r3, [fp, #-8]
   4a0a0:	cmp	r3, #0
   4a0a4:	beq	4a2d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x294>
   4a0a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a0ac:	ldr	r3, [r3, #16]
   4a0b0:	add	r1, r3, #1
   4a0b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a0b8:	str	r1, [r2, #16]
   4a0bc:	cmp	r3, #0
   4a0c0:	beq	4a0e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa4>
   4a0c4:	ldr	r3, [fp, #-16]
   4a0c8:	ldr	r3, [r3, #20]
   4a0cc:	add	r1, r3, #1
   4a0d0:	ldr	r2, [fp, #-16]
   4a0d4:	str	r1, [r2, #20]
   4a0d8:	mov	r2, #44	; 0x2c
   4a0dc:	strb	r2, [r3]
   4a0e0:	ldr	r0, [fp, #-8]
   4a0e4:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4a0e8:	str	r0, [fp, #-8]
   4a0ec:	ldr	r0, [fp, #-8]
   4a0f0:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4a0f4:	str	r0, [fp, #-12]
   4a0f8:	ldr	r3, [fp, #-8]
   4a0fc:	add	r3, r3, #4
   4a100:	str	r3, [fp, #-8]
   4a104:	ldr	r3, [fp, #4]
   4a108:	mov	r2, r3
   4a10c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a110:	ldr	r0, [fp, #-16]
   4a114:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4a118:	ldr	r3, [fp, #-16]
   4a11c:	ldr	r3, [r3, #32]
   4a120:	add	r2, r3, #1
   4a124:	ldr	r3, [fp, #-16]
   4a128:	str	r2, [r3, #32]
   4a12c:	ldr	r3, [fp, #-16]
   4a130:	ldr	r3, [r3, #20]
   4a134:	add	r1, r3, #1
   4a138:	ldr	r2, [fp, #-16]
   4a13c:	str	r1, [r2, #20]
   4a140:	mov	r2, #91	; 0x5b
   4a144:	strb	r2, [r3]
   4a148:	ldr	r3, [fp, #-12]
   4a14c:	cmp	r3, #0
   4a150:	beq	4a258 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   4a154:	ldr	r3, [fp, #-16]
   4a158:	ldrb	r3, [r3, #25]
   4a15c:	cmp	r3, #0
   4a160:	beq	4a18c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
   4a164:	ldr	r3, [fp, #-16]
   4a168:	ldr	r3, [r3, #20]
   4a16c:	add	r1, r3, #1
   4a170:	ldr	r2, [fp, #-16]
   4a174:	str	r1, [r2, #20]
   4a178:	mov	r2, #10
   4a17c:	strb	r2, [r3]
   4a180:	ldr	r0, [fp, #-16]
   4a184:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a188:	b	4a194 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x158>
   4a18c:	ldr	r0, [fp, #-16]
   4a190:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4a194:	ldr	r0, [fp, #-8]
   4a198:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   4a19c:	mov	r3, r0
   4a1a0:	mov	r2, r3
   4a1a4:	ldr	r3, [fp, #8]
   4a1a8:	mov	r1, r2
   4a1ac:	ldr	r0, [fp, #-16]
   4a1b0:	blx	r3
   4a1b4:	ldr	r3, [fp, #-8]
   4a1b8:	add	r3, r3, #2
   4a1bc:	str	r3, [fp, #-8]
   4a1c0:	ldr	r3, [fp, #-12]
   4a1c4:	sub	r3, r3, #1
   4a1c8:	str	r3, [fp, #-12]
   4a1cc:	b	4a258 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   4a1d0:	ldr	r3, [fp, #-16]
   4a1d4:	ldr	r3, [r3, #20]
   4a1d8:	add	r1, r3, #1
   4a1dc:	ldr	r2, [fp, #-16]
   4a1e0:	str	r1, [r2, #20]
   4a1e4:	mov	r2, #44	; 0x2c
   4a1e8:	strb	r2, [r3]
   4a1ec:	ldr	r3, [fp, #-16]
   4a1f0:	ldrb	r3, [r3, #25]
   4a1f4:	cmp	r3, #0
   4a1f8:	beq	4a224 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e8>
   4a1fc:	ldr	r3, [fp, #-16]
   4a200:	ldr	r3, [r3, #20]
   4a204:	add	r1, r3, #1
   4a208:	ldr	r2, [fp, #-16]
   4a20c:	str	r1, [r2, #20]
   4a210:	mov	r2, #10
   4a214:	strb	r2, [r3]
   4a218:	ldr	r0, [fp, #-16]
   4a21c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a220:	b	4a22c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1f0>
   4a224:	ldr	r0, [fp, #-16]
   4a228:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4a22c:	ldr	r0, [fp, #-8]
   4a230:	bl	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1b4>
   4a234:	mov	r3, r0
   4a238:	mov	r2, r3
   4a23c:	ldr	r3, [fp, #8]
   4a240:	mov	r1, r2
   4a244:	ldr	r0, [fp, #-16]
   4a248:	blx	r3
   4a24c:	ldr	r3, [fp, #-8]
   4a250:	add	r3, r3, #2
   4a254:	str	r3, [fp, #-8]
   4a258:	ldr	r3, [fp, #-12]
   4a25c:	sub	r2, r3, #1
   4a260:	str	r2, [fp, #-12]
   4a264:	cmp	r3, #0
   4a268:	bne	4a1d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   4a26c:	ldr	r3, [fp, #-16]
   4a270:	ldrb	r3, [r3, #25]
   4a274:	cmp	r3, #0
   4a278:	beq	4a2b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x278>
   4a27c:	ldr	r3, [fp, #-16]
   4a280:	ldr	r3, [r3, #20]
   4a284:	add	r1, r3, #1
   4a288:	ldr	r2, [fp, #-16]
   4a28c:	str	r1, [r2, #20]
   4a290:	mov	r2, #10
   4a294:	strb	r2, [r3]
   4a298:	ldr	r3, [fp, #-16]
   4a29c:	ldr	r3, [r3, #32]
   4a2a0:	sub	r2, r3, #1
   4a2a4:	ldr	r3, [fp, #-16]
   4a2a8:	str	r2, [r3, #32]
   4a2ac:	ldr	r0, [fp, #-16]
   4a2b0:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a2b4:	ldr	r3, [fp, #-16]
   4a2b8:	ldr	r3, [r3, #20]
   4a2bc:	add	r1, r3, #1
   4a2c0:	ldr	r2, [fp, #-16]
   4a2c4:	str	r1, [r2, #20]
   4a2c8:	mov	r2, #93	; 0x5d
   4a2cc:	strb	r2, [r3]
   4a2d0:	sub	sp, fp, #4
   4a2d4:	ldr	fp, [sp]
   4a2d8:	add	sp, sp, #4
   4a2dc:	pop	{pc}		; (ldr pc, [sp], #4)

0004a2e0 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   4a2e0:	str	fp, [sp, #-8]!
   4a2e4:	str	lr, [sp, #4]
   4a2e8:	add	fp, sp, #4
   4a2ec:	sub	sp, sp, #32
   4a2f0:	str	r0, [fp, #-16]
   4a2f4:	str	r1, [fp, #-20]	; 0xffffffec
   4a2f8:	str	r2, [fp, #-24]	; 0xffffffe8
   4a2fc:	str	r3, [fp, #-28]	; 0xffffffe4
   4a300:	ldr	r3, [fp, #-16]
   4a304:	ldrb	r3, [r3, #27]
   4a308:	cmp	r3, #0
   4a30c:	beq	4a330 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x50>
   4a310:	ldr	r3, [fp, #4]
   4a314:	str	r3, [sp]
   4a318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a31c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a320:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a324:	ldr	r0, [fp, #-16]
   4a328:	bl	4830c <flatcc_json_printer_uint32_vector_field@@Base>
   4a32c:	b	4a56c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   4a330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a334:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a338:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4a33c:	str	r0, [fp, #-8]
   4a340:	ldr	r3, [fp, #-8]
   4a344:	cmp	r3, #0
   4a348:	beq	4a56c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   4a34c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a350:	ldr	r3, [r3, #16]
   4a354:	add	r1, r3, #1
   4a358:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a35c:	str	r1, [r2, #16]
   4a360:	cmp	r3, #0
   4a364:	beq	4a384 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa4>
   4a368:	ldr	r3, [fp, #-16]
   4a36c:	ldr	r3, [r3, #20]
   4a370:	add	r1, r3, #1
   4a374:	ldr	r2, [fp, #-16]
   4a378:	str	r1, [r2, #20]
   4a37c:	mov	r2, #44	; 0x2c
   4a380:	strb	r2, [r3]
   4a384:	ldr	r0, [fp, #-8]
   4a388:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4a38c:	str	r0, [fp, #-8]
   4a390:	ldr	r0, [fp, #-8]
   4a394:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4a398:	str	r0, [fp, #-12]
   4a39c:	ldr	r3, [fp, #-8]
   4a3a0:	add	r3, r3, #4
   4a3a4:	str	r3, [fp, #-8]
   4a3a8:	ldr	r3, [fp, #4]
   4a3ac:	mov	r2, r3
   4a3b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a3b4:	ldr	r0, [fp, #-16]
   4a3b8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4a3bc:	ldr	r3, [fp, #-16]
   4a3c0:	ldr	r3, [r3, #32]
   4a3c4:	add	r2, r3, #1
   4a3c8:	ldr	r3, [fp, #-16]
   4a3cc:	str	r2, [r3, #32]
   4a3d0:	ldr	r3, [fp, #-16]
   4a3d4:	ldr	r3, [r3, #20]
   4a3d8:	add	r1, r3, #1
   4a3dc:	ldr	r2, [fp, #-16]
   4a3e0:	str	r1, [r2, #20]
   4a3e4:	mov	r2, #91	; 0x5b
   4a3e8:	strb	r2, [r3]
   4a3ec:	ldr	r3, [fp, #-12]
   4a3f0:	cmp	r3, #0
   4a3f4:	beq	4a4f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x214>
   4a3f8:	ldr	r3, [fp, #-16]
   4a3fc:	ldrb	r3, [r3, #25]
   4a400:	cmp	r3, #0
   4a404:	beq	4a430 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
   4a408:	ldr	r3, [fp, #-16]
   4a40c:	ldr	r3, [r3, #20]
   4a410:	add	r1, r3, #1
   4a414:	ldr	r2, [fp, #-16]
   4a418:	str	r1, [r2, #20]
   4a41c:	mov	r2, #10
   4a420:	strb	r2, [r3]
   4a424:	ldr	r0, [fp, #-16]
   4a428:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a42c:	b	4a438 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x158>
   4a430:	ldr	r0, [fp, #-16]
   4a434:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4a438:	ldr	r0, [fp, #-8]
   4a43c:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   4a440:	mov	r2, r0
   4a444:	ldr	r3, [fp, #8]
   4a448:	mov	r1, r2
   4a44c:	ldr	r0, [fp, #-16]
   4a450:	blx	r3
   4a454:	ldr	r3, [fp, #-8]
   4a458:	add	r3, r3, #4
   4a45c:	str	r3, [fp, #-8]
   4a460:	ldr	r3, [fp, #-12]
   4a464:	sub	r3, r3, #1
   4a468:	str	r3, [fp, #-12]
   4a46c:	b	4a4f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x214>
   4a470:	ldr	r3, [fp, #-16]
   4a474:	ldr	r3, [r3, #20]
   4a478:	add	r1, r3, #1
   4a47c:	ldr	r2, [fp, #-16]
   4a480:	str	r1, [r2, #20]
   4a484:	mov	r2, #44	; 0x2c
   4a488:	strb	r2, [r3]
   4a48c:	ldr	r3, [fp, #-16]
   4a490:	ldrb	r3, [r3, #25]
   4a494:	cmp	r3, #0
   4a498:	beq	4a4c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e4>
   4a49c:	ldr	r3, [fp, #-16]
   4a4a0:	ldr	r3, [r3, #20]
   4a4a4:	add	r1, r3, #1
   4a4a8:	ldr	r2, [fp, #-16]
   4a4ac:	str	r1, [r2, #20]
   4a4b0:	mov	r2, #10
   4a4b4:	strb	r2, [r3]
   4a4b8:	ldr	r0, [fp, #-16]
   4a4bc:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a4c0:	b	4a4cc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   4a4c4:	ldr	r0, [fp, #-16]
   4a4c8:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4a4cc:	ldr	r0, [fp, #-8]
   4a4d0:	bl	3ed64 <flatcc_json_parser_struct_as_root@@Base+0x214>
   4a4d4:	mov	r2, r0
   4a4d8:	ldr	r3, [fp, #8]
   4a4dc:	mov	r1, r2
   4a4e0:	ldr	r0, [fp, #-16]
   4a4e4:	blx	r3
   4a4e8:	ldr	r3, [fp, #-8]
   4a4ec:	add	r3, r3, #4
   4a4f0:	str	r3, [fp, #-8]
   4a4f4:	ldr	r3, [fp, #-12]
   4a4f8:	sub	r2, r3, #1
   4a4fc:	str	r2, [fp, #-12]
   4a500:	cmp	r3, #0
   4a504:	bne	4a470 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   4a508:	ldr	r3, [fp, #-16]
   4a50c:	ldrb	r3, [r3, #25]
   4a510:	cmp	r3, #0
   4a514:	beq	4a550 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x270>
   4a518:	ldr	r3, [fp, #-16]
   4a51c:	ldr	r3, [r3, #20]
   4a520:	add	r1, r3, #1
   4a524:	ldr	r2, [fp, #-16]
   4a528:	str	r1, [r2, #20]
   4a52c:	mov	r2, #10
   4a530:	strb	r2, [r3]
   4a534:	ldr	r3, [fp, #-16]
   4a538:	ldr	r3, [r3, #32]
   4a53c:	sub	r2, r3, #1
   4a540:	ldr	r3, [fp, #-16]
   4a544:	str	r2, [r3, #32]
   4a548:	ldr	r0, [fp, #-16]
   4a54c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a550:	ldr	r3, [fp, #-16]
   4a554:	ldr	r3, [r3, #20]
   4a558:	add	r1, r3, #1
   4a55c:	ldr	r2, [fp, #-16]
   4a560:	str	r1, [r2, #20]
   4a564:	mov	r2, #93	; 0x5d
   4a568:	strb	r2, [r3]
   4a56c:	sub	sp, fp, #4
   4a570:	ldr	fp, [sp]
   4a574:	add	sp, sp, #4
   4a578:	pop	{pc}		; (ldr pc, [sp], #4)

0004a57c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   4a57c:	str	fp, [sp, #-8]!
   4a580:	str	lr, [sp, #4]
   4a584:	add	fp, sp, #4
   4a588:	sub	sp, sp, #32
   4a58c:	str	r0, [fp, #-16]
   4a590:	str	r1, [fp, #-20]	; 0xffffffec
   4a594:	str	r2, [fp, #-24]	; 0xffffffe8
   4a598:	str	r3, [fp, #-28]	; 0xffffffe4
   4a59c:	ldr	r3, [fp, #-16]
   4a5a0:	ldrb	r3, [r3, #27]
   4a5a4:	cmp	r3, #0
   4a5a8:	beq	4a5cc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x50>
   4a5ac:	ldr	r3, [fp, #4]
   4a5b0:	str	r3, [sp]
   4a5b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a5b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a5bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a5c0:	ldr	r0, [fp, #-16]
   4a5c4:	bl	485b4 <flatcc_json_printer_uint64_vector_field@@Base>
   4a5c8:	b	4a808 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   4a5cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a5d4:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4a5d8:	str	r0, [fp, #-8]
   4a5dc:	ldr	r3, [fp, #-8]
   4a5e0:	cmp	r3, #0
   4a5e4:	beq	4a808 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   4a5e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a5ec:	ldr	r3, [r3, #16]
   4a5f0:	add	r1, r3, #1
   4a5f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a5f8:	str	r1, [r2, #16]
   4a5fc:	cmp	r3, #0
   4a600:	beq	4a620 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa4>
   4a604:	ldr	r3, [fp, #-16]
   4a608:	ldr	r3, [r3, #20]
   4a60c:	add	r1, r3, #1
   4a610:	ldr	r2, [fp, #-16]
   4a614:	str	r1, [r2, #20]
   4a618:	mov	r2, #44	; 0x2c
   4a61c:	strb	r2, [r3]
   4a620:	ldr	r0, [fp, #-8]
   4a624:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4a628:	str	r0, [fp, #-8]
   4a62c:	ldr	r0, [fp, #-8]
   4a630:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4a634:	str	r0, [fp, #-12]
   4a638:	ldr	r3, [fp, #-8]
   4a63c:	add	r3, r3, #4
   4a640:	str	r3, [fp, #-8]
   4a644:	ldr	r3, [fp, #4]
   4a648:	mov	r2, r3
   4a64c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a650:	ldr	r0, [fp, #-16]
   4a654:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4a658:	ldr	r3, [fp, #-16]
   4a65c:	ldr	r3, [r3, #32]
   4a660:	add	r2, r3, #1
   4a664:	ldr	r3, [fp, #-16]
   4a668:	str	r2, [r3, #32]
   4a66c:	ldr	r3, [fp, #-16]
   4a670:	ldr	r3, [r3, #20]
   4a674:	add	r1, r3, #1
   4a678:	ldr	r2, [fp, #-16]
   4a67c:	str	r1, [r2, #20]
   4a680:	mov	r2, #91	; 0x5b
   4a684:	strb	r2, [r3]
   4a688:	ldr	r3, [fp, #-12]
   4a68c:	cmp	r3, #0
   4a690:	beq	4a790 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   4a694:	ldr	r3, [fp, #-16]
   4a698:	ldrb	r3, [r3, #25]
   4a69c:	cmp	r3, #0
   4a6a0:	beq	4a6cc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
   4a6a4:	ldr	r3, [fp, #-16]
   4a6a8:	ldr	r3, [r3, #20]
   4a6ac:	add	r1, r3, #1
   4a6b0:	ldr	r2, [fp, #-16]
   4a6b4:	str	r1, [r2, #20]
   4a6b8:	mov	r2, #10
   4a6bc:	strb	r2, [r3]
   4a6c0:	ldr	r0, [fp, #-16]
   4a6c4:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a6c8:	b	4a6d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x158>
   4a6cc:	ldr	r0, [fp, #-16]
   4a6d0:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4a6d4:	ldr	r0, [fp, #-8]
   4a6d8:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   4a6dc:	mov	r2, r0
   4a6e0:	mov	r3, r1
   4a6e4:	ldr	r1, [fp, #8]
   4a6e8:	ldr	r0, [fp, #-16]
   4a6ec:	blx	r1
   4a6f0:	ldr	r3, [fp, #-8]
   4a6f4:	add	r3, r3, #8
   4a6f8:	str	r3, [fp, #-8]
   4a6fc:	ldr	r3, [fp, #-12]
   4a700:	sub	r3, r3, #1
   4a704:	str	r3, [fp, #-12]
   4a708:	b	4a790 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   4a70c:	ldr	r3, [fp, #-16]
   4a710:	ldr	r3, [r3, #20]
   4a714:	add	r1, r3, #1
   4a718:	ldr	r2, [fp, #-16]
   4a71c:	str	r1, [r2, #20]
   4a720:	mov	r2, #44	; 0x2c
   4a724:	strb	r2, [r3]
   4a728:	ldr	r3, [fp, #-16]
   4a72c:	ldrb	r3, [r3, #25]
   4a730:	cmp	r3, #0
   4a734:	beq	4a760 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e4>
   4a738:	ldr	r3, [fp, #-16]
   4a73c:	ldr	r3, [r3, #20]
   4a740:	add	r1, r3, #1
   4a744:	ldr	r2, [fp, #-16]
   4a748:	str	r1, [r2, #20]
   4a74c:	mov	r2, #10
   4a750:	strb	r2, [r3]
   4a754:	ldr	r0, [fp, #-16]
   4a758:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a75c:	b	4a768 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   4a760:	ldr	r0, [fp, #-16]
   4a764:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4a768:	ldr	r0, [fp, #-8]
   4a76c:	bl	3edc8 <flatcc_json_parser_struct_as_root@@Base+0x278>
   4a770:	mov	r2, r0
   4a774:	mov	r3, r1
   4a778:	ldr	r1, [fp, #8]
   4a77c:	ldr	r0, [fp, #-16]
   4a780:	blx	r1
   4a784:	ldr	r3, [fp, #-8]
   4a788:	add	r3, r3, #8
   4a78c:	str	r3, [fp, #-8]
   4a790:	ldr	r3, [fp, #-12]
   4a794:	sub	r2, r3, #1
   4a798:	str	r2, [fp, #-12]
   4a79c:	cmp	r3, #0
   4a7a0:	bne	4a70c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   4a7a4:	ldr	r3, [fp, #-16]
   4a7a8:	ldrb	r3, [r3, #25]
   4a7ac:	cmp	r3, #0
   4a7b0:	beq	4a7ec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x270>
   4a7b4:	ldr	r3, [fp, #-16]
   4a7b8:	ldr	r3, [r3, #20]
   4a7bc:	add	r1, r3, #1
   4a7c0:	ldr	r2, [fp, #-16]
   4a7c4:	str	r1, [r2, #20]
   4a7c8:	mov	r2, #10
   4a7cc:	strb	r2, [r3]
   4a7d0:	ldr	r3, [fp, #-16]
   4a7d4:	ldr	r3, [r3, #32]
   4a7d8:	sub	r2, r3, #1
   4a7dc:	ldr	r3, [fp, #-16]
   4a7e0:	str	r2, [r3, #32]
   4a7e4:	ldr	r0, [fp, #-16]
   4a7e8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a7ec:	ldr	r3, [fp, #-16]
   4a7f0:	ldr	r3, [r3, #20]
   4a7f4:	add	r1, r3, #1
   4a7f8:	ldr	r2, [fp, #-16]
   4a7fc:	str	r1, [r2, #20]
   4a800:	mov	r2, #93	; 0x5d
   4a804:	strb	r2, [r3]
   4a808:	sub	sp, fp, #4
   4a80c:	ldr	fp, [sp]
   4a810:	add	sp, sp, #4
   4a814:	pop	{pc}		; (ldr pc, [sp], #4)

0004a818 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   4a818:	str	fp, [sp, #-8]!
   4a81c:	str	lr, [sp, #4]
   4a820:	add	fp, sp, #4
   4a824:	sub	sp, sp, #32
   4a828:	str	r0, [fp, #-16]
   4a82c:	str	r1, [fp, #-20]	; 0xffffffec
   4a830:	str	r2, [fp, #-24]	; 0xffffffe8
   4a834:	str	r3, [fp, #-28]	; 0xffffffe4
   4a838:	ldr	r3, [fp, #-16]
   4a83c:	ldrb	r3, [r3, #27]
   4a840:	cmp	r3, #0
   4a844:	beq	4a868 <flatcc_json_printer_int8_enum_vector_field@@Base+0x50>
   4a848:	ldr	r3, [fp, #4]
   4a84c:	str	r3, [sp]
   4a850:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a854:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a858:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a85c:	ldr	r0, [fp, #-16]
   4a860:	bl	4884c <flatcc_json_printer_int8_vector_field@@Base>
   4a864:	b	4aaac <flatcc_json_printer_int8_enum_vector_field@@Base+0x294>
   4a868:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a86c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a870:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4a874:	str	r0, [fp, #-8]
   4a878:	ldr	r3, [fp, #-8]
   4a87c:	cmp	r3, #0
   4a880:	beq	4aaac <flatcc_json_printer_int8_enum_vector_field@@Base+0x294>
   4a884:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a888:	ldr	r3, [r3, #16]
   4a88c:	add	r1, r3, #1
   4a890:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a894:	str	r1, [r2, #16]
   4a898:	cmp	r3, #0
   4a89c:	beq	4a8bc <flatcc_json_printer_int8_enum_vector_field@@Base+0xa4>
   4a8a0:	ldr	r3, [fp, #-16]
   4a8a4:	ldr	r3, [r3, #20]
   4a8a8:	add	r1, r3, #1
   4a8ac:	ldr	r2, [fp, #-16]
   4a8b0:	str	r1, [r2, #20]
   4a8b4:	mov	r2, #44	; 0x2c
   4a8b8:	strb	r2, [r3]
   4a8bc:	ldr	r0, [fp, #-8]
   4a8c0:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4a8c4:	str	r0, [fp, #-8]
   4a8c8:	ldr	r0, [fp, #-8]
   4a8cc:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4a8d0:	str	r0, [fp, #-12]
   4a8d4:	ldr	r3, [fp, #-8]
   4a8d8:	add	r3, r3, #4
   4a8dc:	str	r3, [fp, #-8]
   4a8e0:	ldr	r3, [fp, #4]
   4a8e4:	mov	r2, r3
   4a8e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a8ec:	ldr	r0, [fp, #-16]
   4a8f0:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4a8f4:	ldr	r3, [fp, #-16]
   4a8f8:	ldr	r3, [r3, #32]
   4a8fc:	add	r2, r3, #1
   4a900:	ldr	r3, [fp, #-16]
   4a904:	str	r2, [r3, #32]
   4a908:	ldr	r3, [fp, #-16]
   4a90c:	ldr	r3, [r3, #20]
   4a910:	add	r1, r3, #1
   4a914:	ldr	r2, [fp, #-16]
   4a918:	str	r1, [r2, #20]
   4a91c:	mov	r2, #91	; 0x5b
   4a920:	strb	r2, [r3]
   4a924:	ldr	r3, [fp, #-12]
   4a928:	cmp	r3, #0
   4a92c:	beq	4aa34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x21c>
   4a930:	ldr	r3, [fp, #-16]
   4a934:	ldrb	r3, [r3, #25]
   4a938:	cmp	r3, #0
   4a93c:	beq	4a968 <flatcc_json_printer_int8_enum_vector_field@@Base+0x150>
   4a940:	ldr	r3, [fp, #-16]
   4a944:	ldr	r3, [r3, #20]
   4a948:	add	r1, r3, #1
   4a94c:	ldr	r2, [fp, #-16]
   4a950:	str	r1, [r2, #20]
   4a954:	mov	r2, #10
   4a958:	strb	r2, [r3]
   4a95c:	ldr	r0, [fp, #-16]
   4a960:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a964:	b	4a970 <flatcc_json_printer_int8_enum_vector_field@@Base+0x158>
   4a968:	ldr	r0, [fp, #-16]
   4a96c:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4a970:	ldr	r0, [fp, #-8]
   4a974:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   4a978:	mov	r3, r0
   4a97c:	mov	r2, r3
   4a980:	ldr	r3, [fp, #8]
   4a984:	mov	r1, r2
   4a988:	ldr	r0, [fp, #-16]
   4a98c:	blx	r3
   4a990:	ldr	r3, [fp, #-8]
   4a994:	add	r3, r3, #1
   4a998:	str	r3, [fp, #-8]
   4a99c:	ldr	r3, [fp, #-12]
   4a9a0:	sub	r3, r3, #1
   4a9a4:	str	r3, [fp, #-12]
   4a9a8:	b	4aa34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x21c>
   4a9ac:	ldr	r3, [fp, #-16]
   4a9b0:	ldr	r3, [r3, #20]
   4a9b4:	add	r1, r3, #1
   4a9b8:	ldr	r2, [fp, #-16]
   4a9bc:	str	r1, [r2, #20]
   4a9c0:	mov	r2, #44	; 0x2c
   4a9c4:	strb	r2, [r3]
   4a9c8:	ldr	r3, [fp, #-16]
   4a9cc:	ldrb	r3, [r3, #25]
   4a9d0:	cmp	r3, #0
   4a9d4:	beq	4aa00 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e8>
   4a9d8:	ldr	r3, [fp, #-16]
   4a9dc:	ldr	r3, [r3, #20]
   4a9e0:	add	r1, r3, #1
   4a9e4:	ldr	r2, [fp, #-16]
   4a9e8:	str	r1, [r2, #20]
   4a9ec:	mov	r2, #10
   4a9f0:	strb	r2, [r3]
   4a9f4:	ldr	r0, [fp, #-16]
   4a9f8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4a9fc:	b	4aa08 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
   4aa00:	ldr	r0, [fp, #-16]
   4aa04:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4aa08:	ldr	r0, [fp, #-8]
   4aa0c:	bl	3ee38 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   4aa10:	mov	r3, r0
   4aa14:	mov	r2, r3
   4aa18:	ldr	r3, [fp, #8]
   4aa1c:	mov	r1, r2
   4aa20:	ldr	r0, [fp, #-16]
   4aa24:	blx	r3
   4aa28:	ldr	r3, [fp, #-8]
   4aa2c:	add	r3, r3, #1
   4aa30:	str	r3, [fp, #-8]
   4aa34:	ldr	r3, [fp, #-12]
   4aa38:	sub	r2, r3, #1
   4aa3c:	str	r2, [fp, #-12]
   4aa40:	cmp	r3, #0
   4aa44:	bne	4a9ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   4aa48:	ldr	r3, [fp, #-16]
   4aa4c:	ldrb	r3, [r3, #25]
   4aa50:	cmp	r3, #0
   4aa54:	beq	4aa90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x278>
   4aa58:	ldr	r3, [fp, #-16]
   4aa5c:	ldr	r3, [r3, #20]
   4aa60:	add	r1, r3, #1
   4aa64:	ldr	r2, [fp, #-16]
   4aa68:	str	r1, [r2, #20]
   4aa6c:	mov	r2, #10
   4aa70:	strb	r2, [r3]
   4aa74:	ldr	r3, [fp, #-16]
   4aa78:	ldr	r3, [r3, #32]
   4aa7c:	sub	r2, r3, #1
   4aa80:	ldr	r3, [fp, #-16]
   4aa84:	str	r2, [r3, #32]
   4aa88:	ldr	r0, [fp, #-16]
   4aa8c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4aa90:	ldr	r3, [fp, #-16]
   4aa94:	ldr	r3, [r3, #20]
   4aa98:	add	r1, r3, #1
   4aa9c:	ldr	r2, [fp, #-16]
   4aaa0:	str	r1, [r2, #20]
   4aaa4:	mov	r2, #93	; 0x5d
   4aaa8:	strb	r2, [r3]
   4aaac:	sub	sp, fp, #4
   4aab0:	ldr	fp, [sp]
   4aab4:	add	sp, sp, #4
   4aab8:	pop	{pc}		; (ldr pc, [sp], #4)

0004aabc <flatcc_json_printer_int16_enum_vector_field@@Base>:
   4aabc:	str	fp, [sp, #-8]!
   4aac0:	str	lr, [sp, #4]
   4aac4:	add	fp, sp, #4
   4aac8:	sub	sp, sp, #32
   4aacc:	str	r0, [fp, #-16]
   4aad0:	str	r1, [fp, #-20]	; 0xffffffec
   4aad4:	str	r2, [fp, #-24]	; 0xffffffe8
   4aad8:	str	r3, [fp, #-28]	; 0xffffffe4
   4aadc:	ldr	r3, [fp, #-16]
   4aae0:	ldrb	r3, [r3, #27]
   4aae4:	cmp	r3, #0
   4aae8:	beq	4ab0c <flatcc_json_printer_int16_enum_vector_field@@Base+0x50>
   4aaec:	ldr	r3, [fp, #4]
   4aaf0:	str	r3, [sp]
   4aaf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4aaf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4aafc:	ldr	r1, [fp, #-20]	; 0xffffffec
   4ab00:	ldr	r0, [fp, #-16]
   4ab04:	bl	48afc <flatcc_json_printer_int16_vector_field@@Base>
   4ab08:	b	4ad50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x294>
   4ab0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ab10:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ab14:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4ab18:	str	r0, [fp, #-8]
   4ab1c:	ldr	r3, [fp, #-8]
   4ab20:	cmp	r3, #0
   4ab24:	beq	4ad50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x294>
   4ab28:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ab2c:	ldr	r3, [r3, #16]
   4ab30:	add	r1, r3, #1
   4ab34:	ldr	r2, [fp, #-20]	; 0xffffffec
   4ab38:	str	r1, [r2, #16]
   4ab3c:	cmp	r3, #0
   4ab40:	beq	4ab60 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa4>
   4ab44:	ldr	r3, [fp, #-16]
   4ab48:	ldr	r3, [r3, #20]
   4ab4c:	add	r1, r3, #1
   4ab50:	ldr	r2, [fp, #-16]
   4ab54:	str	r1, [r2, #20]
   4ab58:	mov	r2, #44	; 0x2c
   4ab5c:	strb	r2, [r3]
   4ab60:	ldr	r0, [fp, #-8]
   4ab64:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4ab68:	str	r0, [fp, #-8]
   4ab6c:	ldr	r0, [fp, #-8]
   4ab70:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4ab74:	str	r0, [fp, #-12]
   4ab78:	ldr	r3, [fp, #-8]
   4ab7c:	add	r3, r3, #4
   4ab80:	str	r3, [fp, #-8]
   4ab84:	ldr	r3, [fp, #4]
   4ab88:	mov	r2, r3
   4ab8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4ab90:	ldr	r0, [fp, #-16]
   4ab94:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4ab98:	ldr	r3, [fp, #-16]
   4ab9c:	ldr	r3, [r3, #32]
   4aba0:	add	r2, r3, #1
   4aba4:	ldr	r3, [fp, #-16]
   4aba8:	str	r2, [r3, #32]
   4abac:	ldr	r3, [fp, #-16]
   4abb0:	ldr	r3, [r3, #20]
   4abb4:	add	r1, r3, #1
   4abb8:	ldr	r2, [fp, #-16]
   4abbc:	str	r1, [r2, #20]
   4abc0:	mov	r2, #91	; 0x5b
   4abc4:	strb	r2, [r3]
   4abc8:	ldr	r3, [fp, #-12]
   4abcc:	cmp	r3, #0
   4abd0:	beq	4acd8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   4abd4:	ldr	r3, [fp, #-16]
   4abd8:	ldrb	r3, [r3, #25]
   4abdc:	cmp	r3, #0
   4abe0:	beq	4ac0c <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
   4abe4:	ldr	r3, [fp, #-16]
   4abe8:	ldr	r3, [r3, #20]
   4abec:	add	r1, r3, #1
   4abf0:	ldr	r2, [fp, #-16]
   4abf4:	str	r1, [r2, #20]
   4abf8:	mov	r2, #10
   4abfc:	strb	r2, [r3]
   4ac00:	ldr	r0, [fp, #-16]
   4ac04:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4ac08:	b	4ac14 <flatcc_json_printer_int16_enum_vector_field@@Base+0x158>
   4ac0c:	ldr	r0, [fp, #-16]
   4ac10:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4ac14:	ldr	r0, [fp, #-8]
   4ac18:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   4ac1c:	mov	r3, r0
   4ac20:	mov	r2, r3
   4ac24:	ldr	r3, [fp, #8]
   4ac28:	mov	r1, r2
   4ac2c:	ldr	r0, [fp, #-16]
   4ac30:	blx	r3
   4ac34:	ldr	r3, [fp, #-8]
   4ac38:	add	r3, r3, #2
   4ac3c:	str	r3, [fp, #-8]
   4ac40:	ldr	r3, [fp, #-12]
   4ac44:	sub	r3, r3, #1
   4ac48:	str	r3, [fp, #-12]
   4ac4c:	b	4acd8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   4ac50:	ldr	r3, [fp, #-16]
   4ac54:	ldr	r3, [r3, #20]
   4ac58:	add	r1, r3, #1
   4ac5c:	ldr	r2, [fp, #-16]
   4ac60:	str	r1, [r2, #20]
   4ac64:	mov	r2, #44	; 0x2c
   4ac68:	strb	r2, [r3]
   4ac6c:	ldr	r3, [fp, #-16]
   4ac70:	ldrb	r3, [r3, #25]
   4ac74:	cmp	r3, #0
   4ac78:	beq	4aca4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e8>
   4ac7c:	ldr	r3, [fp, #-16]
   4ac80:	ldr	r3, [r3, #20]
   4ac84:	add	r1, r3, #1
   4ac88:	ldr	r2, [fp, #-16]
   4ac8c:	str	r1, [r2, #20]
   4ac90:	mov	r2, #10
   4ac94:	strb	r2, [r3]
   4ac98:	ldr	r0, [fp, #-16]
   4ac9c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4aca0:	b	4acac <flatcc_json_printer_int16_enum_vector_field@@Base+0x1f0>
   4aca4:	ldr	r0, [fp, #-16]
   4aca8:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4acac:	ldr	r0, [fp, #-8]
   4acb0:	bl	3ee9c <flatcc_json_parser_struct_as_root@@Base+0x34c>
   4acb4:	mov	r3, r0
   4acb8:	mov	r2, r3
   4acbc:	ldr	r3, [fp, #8]
   4acc0:	mov	r1, r2
   4acc4:	ldr	r0, [fp, #-16]
   4acc8:	blx	r3
   4accc:	ldr	r3, [fp, #-8]
   4acd0:	add	r3, r3, #2
   4acd4:	str	r3, [fp, #-8]
   4acd8:	ldr	r3, [fp, #-12]
   4acdc:	sub	r2, r3, #1
   4ace0:	str	r2, [fp, #-12]
   4ace4:	cmp	r3, #0
   4ace8:	bne	4ac50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   4acec:	ldr	r3, [fp, #-16]
   4acf0:	ldrb	r3, [r3, #25]
   4acf4:	cmp	r3, #0
   4acf8:	beq	4ad34 <flatcc_json_printer_int16_enum_vector_field@@Base+0x278>
   4acfc:	ldr	r3, [fp, #-16]
   4ad00:	ldr	r3, [r3, #20]
   4ad04:	add	r1, r3, #1
   4ad08:	ldr	r2, [fp, #-16]
   4ad0c:	str	r1, [r2, #20]
   4ad10:	mov	r2, #10
   4ad14:	strb	r2, [r3]
   4ad18:	ldr	r3, [fp, #-16]
   4ad1c:	ldr	r3, [r3, #32]
   4ad20:	sub	r2, r3, #1
   4ad24:	ldr	r3, [fp, #-16]
   4ad28:	str	r2, [r3, #32]
   4ad2c:	ldr	r0, [fp, #-16]
   4ad30:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4ad34:	ldr	r3, [fp, #-16]
   4ad38:	ldr	r3, [r3, #20]
   4ad3c:	add	r1, r3, #1
   4ad40:	ldr	r2, [fp, #-16]
   4ad44:	str	r1, [r2, #20]
   4ad48:	mov	r2, #93	; 0x5d
   4ad4c:	strb	r2, [r3]
   4ad50:	sub	sp, fp, #4
   4ad54:	ldr	fp, [sp]
   4ad58:	add	sp, sp, #4
   4ad5c:	pop	{pc}		; (ldr pc, [sp], #4)

0004ad60 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   4ad60:	str	fp, [sp, #-8]!
   4ad64:	str	lr, [sp, #4]
   4ad68:	add	fp, sp, #4
   4ad6c:	sub	sp, sp, #32
   4ad70:	str	r0, [fp, #-16]
   4ad74:	str	r1, [fp, #-20]	; 0xffffffec
   4ad78:	str	r2, [fp, #-24]	; 0xffffffe8
   4ad7c:	str	r3, [fp, #-28]	; 0xffffffe4
   4ad80:	ldr	r3, [fp, #-16]
   4ad84:	ldrb	r3, [r3, #27]
   4ad88:	cmp	r3, #0
   4ad8c:	beq	4adb0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x50>
   4ad90:	ldr	r3, [fp, #4]
   4ad94:	str	r3, [sp]
   4ad98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ad9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ada0:	ldr	r1, [fp, #-20]	; 0xffffffec
   4ada4:	ldr	r0, [fp, #-16]
   4ada8:	bl	48dac <flatcc_json_printer_int32_vector_field@@Base>
   4adac:	b	4afec <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   4adb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4adb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   4adb8:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4adbc:	str	r0, [fp, #-8]
   4adc0:	ldr	r3, [fp, #-8]
   4adc4:	cmp	r3, #0
   4adc8:	beq	4afec <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   4adcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4add0:	ldr	r3, [r3, #16]
   4add4:	add	r1, r3, #1
   4add8:	ldr	r2, [fp, #-20]	; 0xffffffec
   4addc:	str	r1, [r2, #16]
   4ade0:	cmp	r3, #0
   4ade4:	beq	4ae04 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa4>
   4ade8:	ldr	r3, [fp, #-16]
   4adec:	ldr	r3, [r3, #20]
   4adf0:	add	r1, r3, #1
   4adf4:	ldr	r2, [fp, #-16]
   4adf8:	str	r1, [r2, #20]
   4adfc:	mov	r2, #44	; 0x2c
   4ae00:	strb	r2, [r3]
   4ae04:	ldr	r0, [fp, #-8]
   4ae08:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4ae0c:	str	r0, [fp, #-8]
   4ae10:	ldr	r0, [fp, #-8]
   4ae14:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4ae18:	str	r0, [fp, #-12]
   4ae1c:	ldr	r3, [fp, #-8]
   4ae20:	add	r3, r3, #4
   4ae24:	str	r3, [fp, #-8]
   4ae28:	ldr	r3, [fp, #4]
   4ae2c:	mov	r2, r3
   4ae30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4ae34:	ldr	r0, [fp, #-16]
   4ae38:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4ae3c:	ldr	r3, [fp, #-16]
   4ae40:	ldr	r3, [r3, #32]
   4ae44:	add	r2, r3, #1
   4ae48:	ldr	r3, [fp, #-16]
   4ae4c:	str	r2, [r3, #32]
   4ae50:	ldr	r3, [fp, #-16]
   4ae54:	ldr	r3, [r3, #20]
   4ae58:	add	r1, r3, #1
   4ae5c:	ldr	r2, [fp, #-16]
   4ae60:	str	r1, [r2, #20]
   4ae64:	mov	r2, #91	; 0x5b
   4ae68:	strb	r2, [r3]
   4ae6c:	ldr	r3, [fp, #-12]
   4ae70:	cmp	r3, #0
   4ae74:	beq	4af74 <flatcc_json_printer_int32_enum_vector_field@@Base+0x214>
   4ae78:	ldr	r3, [fp, #-16]
   4ae7c:	ldrb	r3, [r3, #25]
   4ae80:	cmp	r3, #0
   4ae84:	beq	4aeb0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
   4ae88:	ldr	r3, [fp, #-16]
   4ae8c:	ldr	r3, [r3, #20]
   4ae90:	add	r1, r3, #1
   4ae94:	ldr	r2, [fp, #-16]
   4ae98:	str	r1, [r2, #20]
   4ae9c:	mov	r2, #10
   4aea0:	strb	r2, [r3]
   4aea4:	ldr	r0, [fp, #-16]
   4aea8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4aeac:	b	4aeb8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x158>
   4aeb0:	ldr	r0, [fp, #-16]
   4aeb4:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4aeb8:	ldr	r0, [fp, #-8]
   4aebc:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   4aec0:	mov	r2, r0
   4aec4:	ldr	r3, [fp, #8]
   4aec8:	mov	r1, r2
   4aecc:	ldr	r0, [fp, #-16]
   4aed0:	blx	r3
   4aed4:	ldr	r3, [fp, #-8]
   4aed8:	add	r3, r3, #4
   4aedc:	str	r3, [fp, #-8]
   4aee0:	ldr	r3, [fp, #-12]
   4aee4:	sub	r3, r3, #1
   4aee8:	str	r3, [fp, #-12]
   4aeec:	b	4af74 <flatcc_json_printer_int32_enum_vector_field@@Base+0x214>
   4aef0:	ldr	r3, [fp, #-16]
   4aef4:	ldr	r3, [r3, #20]
   4aef8:	add	r1, r3, #1
   4aefc:	ldr	r2, [fp, #-16]
   4af00:	str	r1, [r2, #20]
   4af04:	mov	r2, #44	; 0x2c
   4af08:	strb	r2, [r3]
   4af0c:	ldr	r3, [fp, #-16]
   4af10:	ldrb	r3, [r3, #25]
   4af14:	cmp	r3, #0
   4af18:	beq	4af44 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e4>
   4af1c:	ldr	r3, [fp, #-16]
   4af20:	ldr	r3, [r3, #20]
   4af24:	add	r1, r3, #1
   4af28:	ldr	r2, [fp, #-16]
   4af2c:	str	r1, [r2, #20]
   4af30:	mov	r2, #10
   4af34:	strb	r2, [r3]
   4af38:	ldr	r0, [fp, #-16]
   4af3c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4af40:	b	4af4c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   4af44:	ldr	r0, [fp, #-16]
   4af48:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4af4c:	ldr	r0, [fp, #-8]
   4af50:	bl	3eefc <flatcc_json_parser_struct_as_root@@Base+0x3ac>
   4af54:	mov	r2, r0
   4af58:	ldr	r3, [fp, #8]
   4af5c:	mov	r1, r2
   4af60:	ldr	r0, [fp, #-16]
   4af64:	blx	r3
   4af68:	ldr	r3, [fp, #-8]
   4af6c:	add	r3, r3, #4
   4af70:	str	r3, [fp, #-8]
   4af74:	ldr	r3, [fp, #-12]
   4af78:	sub	r2, r3, #1
   4af7c:	str	r2, [fp, #-12]
   4af80:	cmp	r3, #0
   4af84:	bne	4aef0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   4af88:	ldr	r3, [fp, #-16]
   4af8c:	ldrb	r3, [r3, #25]
   4af90:	cmp	r3, #0
   4af94:	beq	4afd0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x270>
   4af98:	ldr	r3, [fp, #-16]
   4af9c:	ldr	r3, [r3, #20]
   4afa0:	add	r1, r3, #1
   4afa4:	ldr	r2, [fp, #-16]
   4afa8:	str	r1, [r2, #20]
   4afac:	mov	r2, #10
   4afb0:	strb	r2, [r3]
   4afb4:	ldr	r3, [fp, #-16]
   4afb8:	ldr	r3, [r3, #32]
   4afbc:	sub	r2, r3, #1
   4afc0:	ldr	r3, [fp, #-16]
   4afc4:	str	r2, [r3, #32]
   4afc8:	ldr	r0, [fp, #-16]
   4afcc:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4afd0:	ldr	r3, [fp, #-16]
   4afd4:	ldr	r3, [r3, #20]
   4afd8:	add	r1, r3, #1
   4afdc:	ldr	r2, [fp, #-16]
   4afe0:	str	r1, [r2, #20]
   4afe4:	mov	r2, #93	; 0x5d
   4afe8:	strb	r2, [r3]
   4afec:	sub	sp, fp, #4
   4aff0:	ldr	fp, [sp]
   4aff4:	add	sp, sp, #4
   4aff8:	pop	{pc}		; (ldr pc, [sp], #4)

0004affc <flatcc_json_printer_int64_enum_vector_field@@Base>:
   4affc:	str	fp, [sp, #-8]!
   4b000:	str	lr, [sp, #4]
   4b004:	add	fp, sp, #4
   4b008:	sub	sp, sp, #32
   4b00c:	str	r0, [fp, #-16]
   4b010:	str	r1, [fp, #-20]	; 0xffffffec
   4b014:	str	r2, [fp, #-24]	; 0xffffffe8
   4b018:	str	r3, [fp, #-28]	; 0xffffffe4
   4b01c:	ldr	r3, [fp, #-16]
   4b020:	ldrb	r3, [r3, #27]
   4b024:	cmp	r3, #0
   4b028:	beq	4b04c <flatcc_json_printer_int64_enum_vector_field@@Base+0x50>
   4b02c:	ldr	r3, [fp, #4]
   4b030:	str	r3, [sp]
   4b034:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4b038:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b03c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4b040:	ldr	r0, [fp, #-16]
   4b044:	bl	49054 <flatcc_json_printer_int64_vector_field@@Base>
   4b048:	b	4b288 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   4b04c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b050:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b054:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4b058:	str	r0, [fp, #-8]
   4b05c:	ldr	r3, [fp, #-8]
   4b060:	cmp	r3, #0
   4b064:	beq	4b288 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   4b068:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b06c:	ldr	r3, [r3, #16]
   4b070:	add	r1, r3, #1
   4b074:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b078:	str	r1, [r2, #16]
   4b07c:	cmp	r3, #0
   4b080:	beq	4b0a0 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa4>
   4b084:	ldr	r3, [fp, #-16]
   4b088:	ldr	r3, [r3, #20]
   4b08c:	add	r1, r3, #1
   4b090:	ldr	r2, [fp, #-16]
   4b094:	str	r1, [r2, #20]
   4b098:	mov	r2, #44	; 0x2c
   4b09c:	strb	r2, [r3]
   4b0a0:	ldr	r0, [fp, #-8]
   4b0a4:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4b0a8:	str	r0, [fp, #-8]
   4b0ac:	ldr	r0, [fp, #-8]
   4b0b0:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4b0b4:	str	r0, [fp, #-12]
   4b0b8:	ldr	r3, [fp, #-8]
   4b0bc:	add	r3, r3, #4
   4b0c0:	str	r3, [fp, #-8]
   4b0c4:	ldr	r3, [fp, #4]
   4b0c8:	mov	r2, r3
   4b0cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4b0d0:	ldr	r0, [fp, #-16]
   4b0d4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4b0d8:	ldr	r3, [fp, #-16]
   4b0dc:	ldr	r3, [r3, #32]
   4b0e0:	add	r2, r3, #1
   4b0e4:	ldr	r3, [fp, #-16]
   4b0e8:	str	r2, [r3, #32]
   4b0ec:	ldr	r3, [fp, #-16]
   4b0f0:	ldr	r3, [r3, #20]
   4b0f4:	add	r1, r3, #1
   4b0f8:	ldr	r2, [fp, #-16]
   4b0fc:	str	r1, [r2, #20]
   4b100:	mov	r2, #91	; 0x5b
   4b104:	strb	r2, [r3]
   4b108:	ldr	r3, [fp, #-12]
   4b10c:	cmp	r3, #0
   4b110:	beq	4b210 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   4b114:	ldr	r3, [fp, #-16]
   4b118:	ldrb	r3, [r3, #25]
   4b11c:	cmp	r3, #0
   4b120:	beq	4b14c <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
   4b124:	ldr	r3, [fp, #-16]
   4b128:	ldr	r3, [r3, #20]
   4b12c:	add	r1, r3, #1
   4b130:	ldr	r2, [fp, #-16]
   4b134:	str	r1, [r2, #20]
   4b138:	mov	r2, #10
   4b13c:	strb	r2, [r3]
   4b140:	ldr	r0, [fp, #-16]
   4b144:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b148:	b	4b154 <flatcc_json_printer_int64_enum_vector_field@@Base+0x158>
   4b14c:	ldr	r0, [fp, #-16]
   4b150:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4b154:	ldr	r0, [fp, #-8]
   4b158:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   4b15c:	mov	r2, r0
   4b160:	mov	r3, r1
   4b164:	ldr	r1, [fp, #8]
   4b168:	ldr	r0, [fp, #-16]
   4b16c:	blx	r1
   4b170:	ldr	r3, [fp, #-8]
   4b174:	add	r3, r3, #8
   4b178:	str	r3, [fp, #-8]
   4b17c:	ldr	r3, [fp, #-12]
   4b180:	sub	r3, r3, #1
   4b184:	str	r3, [fp, #-12]
   4b188:	b	4b210 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   4b18c:	ldr	r3, [fp, #-16]
   4b190:	ldr	r3, [r3, #20]
   4b194:	add	r1, r3, #1
   4b198:	ldr	r2, [fp, #-16]
   4b19c:	str	r1, [r2, #20]
   4b1a0:	mov	r2, #44	; 0x2c
   4b1a4:	strb	r2, [r3]
   4b1a8:	ldr	r3, [fp, #-16]
   4b1ac:	ldrb	r3, [r3, #25]
   4b1b0:	cmp	r3, #0
   4b1b4:	beq	4b1e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e4>
   4b1b8:	ldr	r3, [fp, #-16]
   4b1bc:	ldr	r3, [r3, #20]
   4b1c0:	add	r1, r3, #1
   4b1c4:	ldr	r2, [fp, #-16]
   4b1c8:	str	r1, [r2, #20]
   4b1cc:	mov	r2, #10
   4b1d0:	strb	r2, [r3]
   4b1d4:	ldr	r0, [fp, #-16]
   4b1d8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b1dc:	b	4b1e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   4b1e0:	ldr	r0, [fp, #-16]
   4b1e4:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4b1e8:	ldr	r0, [fp, #-8]
   4b1ec:	bl	3ef60 <flatcc_json_parser_struct_as_root@@Base+0x410>
   4b1f0:	mov	r2, r0
   4b1f4:	mov	r3, r1
   4b1f8:	ldr	r1, [fp, #8]
   4b1fc:	ldr	r0, [fp, #-16]
   4b200:	blx	r1
   4b204:	ldr	r3, [fp, #-8]
   4b208:	add	r3, r3, #8
   4b20c:	str	r3, [fp, #-8]
   4b210:	ldr	r3, [fp, #-12]
   4b214:	sub	r2, r3, #1
   4b218:	str	r2, [fp, #-12]
   4b21c:	cmp	r3, #0
   4b220:	bne	4b18c <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   4b224:	ldr	r3, [fp, #-16]
   4b228:	ldrb	r3, [r3, #25]
   4b22c:	cmp	r3, #0
   4b230:	beq	4b26c <flatcc_json_printer_int64_enum_vector_field@@Base+0x270>
   4b234:	ldr	r3, [fp, #-16]
   4b238:	ldr	r3, [r3, #20]
   4b23c:	add	r1, r3, #1
   4b240:	ldr	r2, [fp, #-16]
   4b244:	str	r1, [r2, #20]
   4b248:	mov	r2, #10
   4b24c:	strb	r2, [r3]
   4b250:	ldr	r3, [fp, #-16]
   4b254:	ldr	r3, [r3, #32]
   4b258:	sub	r2, r3, #1
   4b25c:	ldr	r3, [fp, #-16]
   4b260:	str	r2, [r3, #32]
   4b264:	ldr	r0, [fp, #-16]
   4b268:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b26c:	ldr	r3, [fp, #-16]
   4b270:	ldr	r3, [r3, #20]
   4b274:	add	r1, r3, #1
   4b278:	ldr	r2, [fp, #-16]
   4b27c:	str	r1, [r2, #20]
   4b280:	mov	r2, #93	; 0x5d
   4b284:	strb	r2, [r3]
   4b288:	sub	sp, fp, #4
   4b28c:	ldr	fp, [sp]
   4b290:	add	sp, sp, #4
   4b294:	pop	{pc}		; (ldr pc, [sp], #4)

0004b298 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   4b298:	str	fp, [sp, #-8]!
   4b29c:	str	lr, [sp, #4]
   4b2a0:	add	fp, sp, #4
   4b2a4:	sub	sp, sp, #32
   4b2a8:	str	r0, [fp, #-16]
   4b2ac:	str	r1, [fp, #-20]	; 0xffffffec
   4b2b0:	str	r2, [fp, #-24]	; 0xffffffe8
   4b2b4:	str	r3, [fp, #-28]	; 0xffffffe4
   4b2b8:	ldr	r3, [fp, #-16]
   4b2bc:	ldrb	r3, [r3, #27]
   4b2c0:	cmp	r3, #0
   4b2c4:	beq	4b2e8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x50>
   4b2c8:	ldr	r3, [fp, #4]
   4b2cc:	str	r3, [sp]
   4b2d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4b2d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b2d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   4b2dc:	ldr	r0, [fp, #-16]
   4b2e0:	bl	492ec <flatcc_json_printer_bool_vector_field@@Base>
   4b2e4:	b	4b52c <flatcc_json_printer_bool_enum_vector_field@@Base+0x294>
   4b2e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b2ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b2f0:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4b2f4:	str	r0, [fp, #-8]
   4b2f8:	ldr	r3, [fp, #-8]
   4b2fc:	cmp	r3, #0
   4b300:	beq	4b52c <flatcc_json_printer_bool_enum_vector_field@@Base+0x294>
   4b304:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b308:	ldr	r3, [r3, #16]
   4b30c:	add	r1, r3, #1
   4b310:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b314:	str	r1, [r2, #16]
   4b318:	cmp	r3, #0
   4b31c:	beq	4b33c <flatcc_json_printer_bool_enum_vector_field@@Base+0xa4>
   4b320:	ldr	r3, [fp, #-16]
   4b324:	ldr	r3, [r3, #20]
   4b328:	add	r1, r3, #1
   4b32c:	ldr	r2, [fp, #-16]
   4b330:	str	r1, [r2, #20]
   4b334:	mov	r2, #44	; 0x2c
   4b338:	strb	r2, [r3]
   4b33c:	ldr	r0, [fp, #-8]
   4b340:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4b344:	str	r0, [fp, #-8]
   4b348:	ldr	r0, [fp, #-8]
   4b34c:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4b350:	str	r0, [fp, #-12]
   4b354:	ldr	r3, [fp, #-8]
   4b358:	add	r3, r3, #4
   4b35c:	str	r3, [fp, #-8]
   4b360:	ldr	r3, [fp, #4]
   4b364:	mov	r2, r3
   4b368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4b36c:	ldr	r0, [fp, #-16]
   4b370:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4b374:	ldr	r3, [fp, #-16]
   4b378:	ldr	r3, [r3, #32]
   4b37c:	add	r2, r3, #1
   4b380:	ldr	r3, [fp, #-16]
   4b384:	str	r2, [r3, #32]
   4b388:	ldr	r3, [fp, #-16]
   4b38c:	ldr	r3, [r3, #20]
   4b390:	add	r1, r3, #1
   4b394:	ldr	r2, [fp, #-16]
   4b398:	str	r1, [r2, #20]
   4b39c:	mov	r2, #91	; 0x5b
   4b3a0:	strb	r2, [r3]
   4b3a4:	ldr	r3, [fp, #-12]
   4b3a8:	cmp	r3, #0
   4b3ac:	beq	4b4b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x21c>
   4b3b0:	ldr	r3, [fp, #-16]
   4b3b4:	ldrb	r3, [r3, #25]
   4b3b8:	cmp	r3, #0
   4b3bc:	beq	4b3e8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x150>
   4b3c0:	ldr	r3, [fp, #-16]
   4b3c4:	ldr	r3, [r3, #20]
   4b3c8:	add	r1, r3, #1
   4b3cc:	ldr	r2, [fp, #-16]
   4b3d0:	str	r1, [r2, #20]
   4b3d4:	mov	r2, #10
   4b3d8:	strb	r2, [r3]
   4b3dc:	ldr	r0, [fp, #-16]
   4b3e0:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b3e4:	b	4b3f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x158>
   4b3e8:	ldr	r0, [fp, #-16]
   4b3ec:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4b3f0:	ldr	r0, [fp, #-8]
   4b3f4:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   4b3f8:	mov	r3, r0
   4b3fc:	mov	r2, r3
   4b400:	ldr	r3, [fp, #8]
   4b404:	mov	r1, r2
   4b408:	ldr	r0, [fp, #-16]
   4b40c:	blx	r3
   4b410:	ldr	r3, [fp, #-8]
   4b414:	add	r3, r3, #1
   4b418:	str	r3, [fp, #-8]
   4b41c:	ldr	r3, [fp, #-12]
   4b420:	sub	r3, r3, #1
   4b424:	str	r3, [fp, #-12]
   4b428:	b	4b4b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x21c>
   4b42c:	ldr	r3, [fp, #-16]
   4b430:	ldr	r3, [r3, #20]
   4b434:	add	r1, r3, #1
   4b438:	ldr	r2, [fp, #-16]
   4b43c:	str	r1, [r2, #20]
   4b440:	mov	r2, #44	; 0x2c
   4b444:	strb	r2, [r3]
   4b448:	ldr	r3, [fp, #-16]
   4b44c:	ldrb	r3, [r3, #25]
   4b450:	cmp	r3, #0
   4b454:	beq	4b480 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e8>
   4b458:	ldr	r3, [fp, #-16]
   4b45c:	ldr	r3, [r3, #20]
   4b460:	add	r1, r3, #1
   4b464:	ldr	r2, [fp, #-16]
   4b468:	str	r1, [r2, #20]
   4b46c:	mov	r2, #10
   4b470:	strb	r2, [r3]
   4b474:	ldr	r0, [fp, #-16]
   4b478:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b47c:	b	4b488 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
   4b480:	ldr	r0, [fp, #-16]
   4b484:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4b488:	ldr	r0, [fp, #-8]
   4b48c:	bl	3f0b8 <flatcc_json_parser_struct_as_root@@Base+0x568>
   4b490:	mov	r3, r0
   4b494:	mov	r2, r3
   4b498:	ldr	r3, [fp, #8]
   4b49c:	mov	r1, r2
   4b4a0:	ldr	r0, [fp, #-16]
   4b4a4:	blx	r3
   4b4a8:	ldr	r3, [fp, #-8]
   4b4ac:	add	r3, r3, #1
   4b4b0:	str	r3, [fp, #-8]
   4b4b4:	ldr	r3, [fp, #-12]
   4b4b8:	sub	r2, r3, #1
   4b4bc:	str	r2, [fp, #-12]
   4b4c0:	cmp	r3, #0
   4b4c4:	bne	4b42c <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   4b4c8:	ldr	r3, [fp, #-16]
   4b4cc:	ldrb	r3, [r3, #25]
   4b4d0:	cmp	r3, #0
   4b4d4:	beq	4b510 <flatcc_json_printer_bool_enum_vector_field@@Base+0x278>
   4b4d8:	ldr	r3, [fp, #-16]
   4b4dc:	ldr	r3, [r3, #20]
   4b4e0:	add	r1, r3, #1
   4b4e4:	ldr	r2, [fp, #-16]
   4b4e8:	str	r1, [r2, #20]
   4b4ec:	mov	r2, #10
   4b4f0:	strb	r2, [r3]
   4b4f4:	ldr	r3, [fp, #-16]
   4b4f8:	ldr	r3, [r3, #32]
   4b4fc:	sub	r2, r3, #1
   4b500:	ldr	r3, [fp, #-16]
   4b504:	str	r2, [r3, #32]
   4b508:	ldr	r0, [fp, #-16]
   4b50c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b510:	ldr	r3, [fp, #-16]
   4b514:	ldr	r3, [r3, #20]
   4b518:	add	r1, r3, #1
   4b51c:	ldr	r2, [fp, #-16]
   4b520:	str	r1, [r2, #20]
   4b524:	mov	r2, #93	; 0x5d
   4b528:	strb	r2, [r3]
   4b52c:	sub	sp, fp, #4
   4b530:	ldr	fp, [sp]
   4b534:	add	sp, sp, #4
   4b538:	pop	{pc}		; (ldr pc, [sp], #4)

0004b53c <flatcc_json_printer_struct_vector_field@@Base>:
   4b53c:	str	fp, [sp, #-8]!
   4b540:	str	lr, [sp, #4]
   4b544:	add	fp, sp, #4
   4b548:	sub	sp, sp, #24
   4b54c:	str	r0, [fp, #-16]
   4b550:	str	r1, [fp, #-20]	; 0xffffffec
   4b554:	str	r2, [fp, #-24]	; 0xffffffe8
   4b558:	str	r3, [fp, #-28]	; 0xffffffe4
   4b55c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b560:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b564:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4b568:	str	r0, [fp, #-8]
   4b56c:	ldr	r3, [fp, #-8]
   4b570:	cmp	r3, #0
   4b574:	beq	4b8a0 <flatcc_json_printer_struct_vector_field@@Base+0x364>
   4b578:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b57c:	ldr	r3, [r3, #16]
   4b580:	add	r1, r3, #1
   4b584:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b588:	str	r1, [r2, #16]
   4b58c:	cmp	r3, #0
   4b590:	beq	4b5b0 <flatcc_json_printer_struct_vector_field@@Base+0x74>
   4b594:	ldr	r3, [fp, #-16]
   4b598:	ldr	r3, [r3, #20]
   4b59c:	add	r1, r3, #1
   4b5a0:	ldr	r2, [fp, #-16]
   4b5a4:	str	r1, [r2, #20]
   4b5a8:	mov	r2, #44	; 0x2c
   4b5ac:	strb	r2, [r3]
   4b5b0:	ldr	r0, [fp, #-8]
   4b5b4:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4b5b8:	str	r0, [fp, #-8]
   4b5bc:	ldr	r0, [fp, #-8]
   4b5c0:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4b5c4:	str	r0, [fp, #-12]
   4b5c8:	ldr	r3, [fp, #-8]
   4b5cc:	add	r3, r3, #4
   4b5d0:	str	r3, [fp, #-8]
   4b5d4:	ldr	r3, [fp, #4]
   4b5d8:	mov	r2, r3
   4b5dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4b5e0:	ldr	r0, [fp, #-16]
   4b5e4:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4b5e8:	ldr	r3, [fp, #-16]
   4b5ec:	ldr	r3, [r3, #32]
   4b5f0:	add	r2, r3, #1
   4b5f4:	ldr	r3, [fp, #-16]
   4b5f8:	str	r2, [r3, #32]
   4b5fc:	ldr	r3, [fp, #-16]
   4b600:	ldr	r3, [r3, #20]
   4b604:	add	r1, r3, #1
   4b608:	ldr	r2, [fp, #-16]
   4b60c:	str	r1, [r2, #20]
   4b610:	mov	r2, #91	; 0x5b
   4b614:	strb	r2, [r3]
   4b618:	ldr	r3, [fp, #-12]
   4b61c:	cmp	r3, #0
   4b620:	beq	4b828 <flatcc_json_printer_struct_vector_field@@Base+0x2ec>
   4b624:	ldr	r3, [fp, #-16]
   4b628:	ldrb	r3, [r3, #25]
   4b62c:	cmp	r3, #0
   4b630:	beq	4b65c <flatcc_json_printer_struct_vector_field@@Base+0x120>
   4b634:	ldr	r3, [fp, #-16]
   4b638:	ldr	r3, [r3, #20]
   4b63c:	add	r1, r3, #1
   4b640:	ldr	r2, [fp, #-16]
   4b644:	str	r1, [r2, #20]
   4b648:	mov	r2, #10
   4b64c:	strb	r2, [r3]
   4b650:	ldr	r0, [fp, #-16]
   4b654:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b658:	b	4b664 <flatcc_json_printer_struct_vector_field@@Base+0x128>
   4b65c:	ldr	r0, [fp, #-16]
   4b660:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4b664:	ldr	r3, [fp, #-16]
   4b668:	ldr	r3, [r3, #32]
   4b66c:	add	r2, r3, #1
   4b670:	ldr	r3, [fp, #-16]
   4b674:	str	r2, [r3, #32]
   4b678:	ldr	r3, [fp, #-16]
   4b67c:	ldr	r3, [r3, #20]
   4b680:	add	r1, r3, #1
   4b684:	ldr	r2, [fp, #-16]
   4b688:	str	r1, [r2, #20]
   4b68c:	mov	r2, #123	; 0x7b
   4b690:	strb	r2, [r3]
   4b694:	ldr	r3, [fp, #12]
   4b698:	ldr	r1, [fp, #-8]
   4b69c:	ldr	r0, [fp, #-16]
   4b6a0:	blx	r3
   4b6a4:	ldr	r3, [fp, #-16]
   4b6a8:	ldrb	r3, [r3, #25]
   4b6ac:	cmp	r3, #0
   4b6b0:	beq	4b6ec <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
   4b6b4:	ldr	r3, [fp, #-16]
   4b6b8:	ldr	r3, [r3, #20]
   4b6bc:	add	r1, r3, #1
   4b6c0:	ldr	r2, [fp, #-16]
   4b6c4:	str	r1, [r2, #20]
   4b6c8:	mov	r2, #10
   4b6cc:	strb	r2, [r3]
   4b6d0:	ldr	r3, [fp, #-16]
   4b6d4:	ldr	r3, [r3, #32]
   4b6d8:	sub	r2, r3, #1
   4b6dc:	ldr	r3, [fp, #-16]
   4b6e0:	str	r2, [r3, #32]
   4b6e4:	ldr	r0, [fp, #-16]
   4b6e8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b6ec:	ldr	r3, [fp, #-16]
   4b6f0:	ldr	r3, [r3, #20]
   4b6f4:	add	r1, r3, #1
   4b6f8:	ldr	r2, [fp, #-16]
   4b6fc:	str	r1, [r2, #20]
   4b700:	mov	r2, #125	; 0x7d
   4b704:	strb	r2, [r3]
   4b708:	ldr	r3, [fp, #-12]
   4b70c:	sub	r3, r3, #1
   4b710:	str	r3, [fp, #-12]
   4b714:	b	4b828 <flatcc_json_printer_struct_vector_field@@Base+0x2ec>
   4b718:	ldr	r2, [fp, #-8]
   4b71c:	ldr	r3, [fp, #8]
   4b720:	add	r3, r2, r3
   4b724:	str	r3, [fp, #-8]
   4b728:	ldr	r3, [fp, #-16]
   4b72c:	ldr	r3, [r3, #20]
   4b730:	add	r1, r3, #1
   4b734:	ldr	r2, [fp, #-16]
   4b738:	str	r1, [r2, #20]
   4b73c:	mov	r2, #44	; 0x2c
   4b740:	strb	r2, [r3]
   4b744:	ldr	r3, [fp, #-16]
   4b748:	ldrb	r3, [r3, #25]
   4b74c:	cmp	r3, #0
   4b750:	beq	4b77c <flatcc_json_printer_struct_vector_field@@Base+0x240>
   4b754:	ldr	r3, [fp, #-16]
   4b758:	ldr	r3, [r3, #20]
   4b75c:	add	r1, r3, #1
   4b760:	ldr	r2, [fp, #-16]
   4b764:	str	r1, [r2, #20]
   4b768:	mov	r2, #10
   4b76c:	strb	r2, [r3]
   4b770:	ldr	r0, [fp, #-16]
   4b774:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b778:	b	4b784 <flatcc_json_printer_struct_vector_field@@Base+0x248>
   4b77c:	ldr	r0, [fp, #-16]
   4b780:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4b784:	ldr	r3, [fp, #-16]
   4b788:	ldr	r3, [r3, #32]
   4b78c:	add	r2, r3, #1
   4b790:	ldr	r3, [fp, #-16]
   4b794:	str	r2, [r3, #32]
   4b798:	ldr	r3, [fp, #-16]
   4b79c:	ldr	r3, [r3, #20]
   4b7a0:	add	r1, r3, #1
   4b7a4:	ldr	r2, [fp, #-16]
   4b7a8:	str	r1, [r2, #20]
   4b7ac:	mov	r2, #123	; 0x7b
   4b7b0:	strb	r2, [r3]
   4b7b4:	ldr	r3, [fp, #12]
   4b7b8:	ldr	r1, [fp, #-8]
   4b7bc:	ldr	r0, [fp, #-16]
   4b7c0:	blx	r3
   4b7c4:	ldr	r3, [fp, #-16]
   4b7c8:	ldrb	r3, [r3, #25]
   4b7cc:	cmp	r3, #0
   4b7d0:	beq	4b80c <flatcc_json_printer_struct_vector_field@@Base+0x2d0>
   4b7d4:	ldr	r3, [fp, #-16]
   4b7d8:	ldr	r3, [r3, #20]
   4b7dc:	add	r1, r3, #1
   4b7e0:	ldr	r2, [fp, #-16]
   4b7e4:	str	r1, [r2, #20]
   4b7e8:	mov	r2, #10
   4b7ec:	strb	r2, [r3]
   4b7f0:	ldr	r3, [fp, #-16]
   4b7f4:	ldr	r3, [r3, #32]
   4b7f8:	sub	r2, r3, #1
   4b7fc:	ldr	r3, [fp, #-16]
   4b800:	str	r2, [r3, #32]
   4b804:	ldr	r0, [fp, #-16]
   4b808:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b80c:	ldr	r3, [fp, #-16]
   4b810:	ldr	r3, [r3, #20]
   4b814:	add	r1, r3, #1
   4b818:	ldr	r2, [fp, #-16]
   4b81c:	str	r1, [r2, #20]
   4b820:	mov	r2, #125	; 0x7d
   4b824:	strb	r2, [r3]
   4b828:	ldr	r3, [fp, #-12]
   4b82c:	sub	r2, r3, #1
   4b830:	str	r2, [fp, #-12]
   4b834:	cmp	r3, #0
   4b838:	bne	4b718 <flatcc_json_printer_struct_vector_field@@Base+0x1dc>
   4b83c:	ldr	r3, [fp, #-16]
   4b840:	ldrb	r3, [r3, #25]
   4b844:	cmp	r3, #0
   4b848:	beq	4b884 <flatcc_json_printer_struct_vector_field@@Base+0x348>
   4b84c:	ldr	r3, [fp, #-16]
   4b850:	ldr	r3, [r3, #20]
   4b854:	add	r1, r3, #1
   4b858:	ldr	r2, [fp, #-16]
   4b85c:	str	r1, [r2, #20]
   4b860:	mov	r2, #10
   4b864:	strb	r2, [r3]
   4b868:	ldr	r3, [fp, #-16]
   4b86c:	ldr	r3, [r3, #32]
   4b870:	sub	r2, r3, #1
   4b874:	ldr	r3, [fp, #-16]
   4b878:	str	r2, [r3, #32]
   4b87c:	ldr	r0, [fp, #-16]
   4b880:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b884:	ldr	r3, [fp, #-16]
   4b888:	ldr	r3, [r3, #20]
   4b88c:	add	r1, r3, #1
   4b890:	ldr	r2, [fp, #-16]
   4b894:	str	r1, [r2, #20]
   4b898:	mov	r2, #93	; 0x5d
   4b89c:	strb	r2, [r3]
   4b8a0:	nop	{0}
   4b8a4:	sub	sp, fp, #4
   4b8a8:	ldr	fp, [sp]
   4b8ac:	add	sp, sp, #4
   4b8b0:	pop	{pc}		; (ldr pc, [sp], #4)

0004b8b4 <flatcc_json_printer_string_vector_field@@Base>:
   4b8b4:	str	fp, [sp, #-8]!
   4b8b8:	str	lr, [sp, #4]
   4b8bc:	add	fp, sp, #4
   4b8c0:	sub	sp, sp, #24
   4b8c4:	str	r0, [fp, #-16]
   4b8c8:	str	r1, [fp, #-20]	; 0xffffffec
   4b8cc:	str	r2, [fp, #-24]	; 0xffffffe8
   4b8d0:	str	r3, [fp, #-28]	; 0xffffffe4
   4b8d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b8d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b8dc:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4b8e0:	str	r0, [fp, #-8]
   4b8e4:	ldr	r3, [fp, #-8]
   4b8e8:	cmp	r3, #0
   4b8ec:	beq	4bafc <flatcc_json_printer_string_vector_field@@Base+0x248>
   4b8f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b8f4:	ldr	r3, [r3, #16]
   4b8f8:	add	r1, r3, #1
   4b8fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b900:	str	r1, [r2, #16]
   4b904:	cmp	r3, #0
   4b908:	beq	4b928 <flatcc_json_printer_string_vector_field@@Base+0x74>
   4b90c:	ldr	r3, [fp, #-16]
   4b910:	ldr	r3, [r3, #20]
   4b914:	add	r1, r3, #1
   4b918:	ldr	r2, [fp, #-16]
   4b91c:	str	r1, [r2, #20]
   4b920:	mov	r2, #44	; 0x2c
   4b924:	strb	r2, [r3]
   4b928:	ldr	r0, [fp, #-8]
   4b92c:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4b930:	str	r0, [fp, #-8]
   4b934:	ldr	r0, [fp, #-8]
   4b938:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4b93c:	str	r0, [fp, #-12]
   4b940:	ldr	r3, [fp, #-8]
   4b944:	add	r3, r3, #4
   4b948:	str	r3, [fp, #-8]
   4b94c:	ldr	r3, [fp, #4]
   4b950:	mov	r2, r3
   4b954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4b958:	ldr	r0, [fp, #-16]
   4b95c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4b960:	ldr	r3, [fp, #-16]
   4b964:	ldr	r3, [r3, #32]
   4b968:	add	r2, r3, #1
   4b96c:	ldr	r3, [fp, #-16]
   4b970:	str	r2, [r3, #32]
   4b974:	ldr	r3, [fp, #-16]
   4b978:	ldr	r3, [r3, #20]
   4b97c:	add	r1, r3, #1
   4b980:	ldr	r2, [fp, #-16]
   4b984:	str	r1, [r2, #20]
   4b988:	mov	r2, #91	; 0x5b
   4b98c:	strb	r2, [r3]
   4b990:	ldr	r3, [fp, #-12]
   4b994:	cmp	r3, #0
   4b998:	beq	4ba84 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
   4b99c:	ldr	r3, [fp, #-16]
   4b9a0:	ldrb	r3, [r3, #25]
   4b9a4:	cmp	r3, #0
   4b9a8:	beq	4b9d4 <flatcc_json_printer_string_vector_field@@Base+0x120>
   4b9ac:	ldr	r3, [fp, #-16]
   4b9b0:	ldr	r3, [r3, #20]
   4b9b4:	add	r1, r3, #1
   4b9b8:	ldr	r2, [fp, #-16]
   4b9bc:	str	r1, [r2, #20]
   4b9c0:	mov	r2, #10
   4b9c4:	strb	r2, [r3]
   4b9c8:	ldr	r0, [fp, #-16]
   4b9cc:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4b9d0:	b	4b9dc <flatcc_json_printer_string_vector_field@@Base+0x128>
   4b9d4:	ldr	r0, [fp, #-16]
   4b9d8:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4b9dc:	ldr	r0, [fp, #-8]
   4b9e0:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4b9e4:	mov	r3, r0
   4b9e8:	mov	r1, r3
   4b9ec:	ldr	r0, [fp, #-16]
   4b9f0:	bl	450b0 <flatcc_json_printer_enum_flag@@Base+0x80>
   4b9f4:	ldr	r3, [fp, #-12]
   4b9f8:	sub	r3, r3, #1
   4b9fc:	str	r3, [fp, #-12]
   4ba00:	b	4ba84 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
   4ba04:	ldr	r3, [fp, #-8]
   4ba08:	add	r3, r3, #4
   4ba0c:	str	r3, [fp, #-8]
   4ba10:	ldr	r3, [fp, #-16]
   4ba14:	ldr	r3, [r3, #20]
   4ba18:	add	r1, r3, #1
   4ba1c:	ldr	r2, [fp, #-16]
   4ba20:	str	r1, [r2, #20]
   4ba24:	mov	r2, #44	; 0x2c
   4ba28:	strb	r2, [r3]
   4ba2c:	ldr	r3, [fp, #-16]
   4ba30:	ldrb	r3, [r3, #25]
   4ba34:	cmp	r3, #0
   4ba38:	beq	4ba64 <flatcc_json_printer_string_vector_field@@Base+0x1b0>
   4ba3c:	ldr	r3, [fp, #-16]
   4ba40:	ldr	r3, [r3, #20]
   4ba44:	add	r1, r3, #1
   4ba48:	ldr	r2, [fp, #-16]
   4ba4c:	str	r1, [r2, #20]
   4ba50:	mov	r2, #10
   4ba54:	strb	r2, [r3]
   4ba58:	ldr	r0, [fp, #-16]
   4ba5c:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4ba60:	b	4ba6c <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   4ba64:	ldr	r0, [fp, #-16]
   4ba68:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4ba6c:	ldr	r0, [fp, #-8]
   4ba70:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4ba74:	mov	r3, r0
   4ba78:	mov	r1, r3
   4ba7c:	ldr	r0, [fp, #-16]
   4ba80:	bl	450b0 <flatcc_json_printer_enum_flag@@Base+0x80>
   4ba84:	ldr	r3, [fp, #-12]
   4ba88:	sub	r2, r3, #1
   4ba8c:	str	r2, [fp, #-12]
   4ba90:	cmp	r3, #0
   4ba94:	bne	4ba04 <flatcc_json_printer_string_vector_field@@Base+0x150>
   4ba98:	ldr	r3, [fp, #-16]
   4ba9c:	ldrb	r3, [r3, #25]
   4baa0:	cmp	r3, #0
   4baa4:	beq	4bae0 <flatcc_json_printer_string_vector_field@@Base+0x22c>
   4baa8:	ldr	r3, [fp, #-16]
   4baac:	ldr	r3, [r3, #20]
   4bab0:	add	r1, r3, #1
   4bab4:	ldr	r2, [fp, #-16]
   4bab8:	str	r1, [r2, #20]
   4babc:	mov	r2, #10
   4bac0:	strb	r2, [r3]
   4bac4:	ldr	r3, [fp, #-16]
   4bac8:	ldr	r3, [r3, #32]
   4bacc:	sub	r2, r3, #1
   4bad0:	ldr	r3, [fp, #-16]
   4bad4:	str	r2, [r3, #32]
   4bad8:	ldr	r0, [fp, #-16]
   4badc:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4bae0:	ldr	r3, [fp, #-16]
   4bae4:	ldr	r3, [r3, #20]
   4bae8:	add	r1, r3, #1
   4baec:	ldr	r2, [fp, #-16]
   4baf0:	str	r1, [r2, #20]
   4baf4:	mov	r2, #93	; 0x5d
   4baf8:	strb	r2, [r3]
   4bafc:	nop	{0}
   4bb00:	sub	sp, fp, #4
   4bb04:	ldr	fp, [sp]
   4bb08:	add	sp, sp, #4
   4bb0c:	pop	{pc}		; (ldr pc, [sp], #4)

0004bb10 <flatcc_json_printer_table_vector_field@@Base>:
   4bb10:	str	fp, [sp, #-8]!
   4bb14:	str	lr, [sp, #4]
   4bb18:	add	fp, sp, #4
   4bb1c:	sub	sp, sp, #24
   4bb20:	str	r0, [fp, #-16]
   4bb24:	str	r1, [fp, #-20]	; 0xffffffec
   4bb28:	str	r2, [fp, #-24]	; 0xffffffe8
   4bb2c:	str	r3, [fp, #-28]	; 0xffffffe4
   4bb30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bb34:	ldr	r0, [fp, #-20]	; 0xffffffec
   4bb38:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4bb3c:	str	r0, [fp, #-8]
   4bb40:	ldr	r3, [fp, #-8]
   4bb44:	cmp	r3, #0
   4bb48:	beq	4bce8 <flatcc_json_printer_table_vector_field@@Base+0x1d8>
   4bb4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bb50:	ldr	r3, [r3, #16]
   4bb54:	add	r1, r3, #1
   4bb58:	ldr	r2, [fp, #-20]	; 0xffffffec
   4bb5c:	str	r1, [r2, #16]
   4bb60:	cmp	r3, #0
   4bb64:	beq	4bb84 <flatcc_json_printer_table_vector_field@@Base+0x74>
   4bb68:	ldr	r3, [fp, #-16]
   4bb6c:	ldr	r3, [r3, #20]
   4bb70:	add	r1, r3, #1
   4bb74:	ldr	r2, [fp, #-16]
   4bb78:	str	r1, [r2, #20]
   4bb7c:	mov	r2, #44	; 0x2c
   4bb80:	strb	r2, [r3]
   4bb84:	ldr	r0, [fp, #-8]
   4bb88:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4bb8c:	str	r0, [fp, #-8]
   4bb90:	ldr	r0, [fp, #-8]
   4bb94:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4bb98:	str	r0, [fp, #-12]
   4bb9c:	ldr	r3, [fp, #-8]
   4bba0:	add	r3, r3, #4
   4bba4:	str	r3, [fp, #-8]
   4bba8:	ldr	r3, [fp, #4]
   4bbac:	mov	r2, r3
   4bbb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4bbb4:	ldr	r0, [fp, #-16]
   4bbb8:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4bbbc:	ldr	r3, [fp, #-16]
   4bbc0:	ldr	r3, [r3, #32]
   4bbc4:	add	r2, r3, #1
   4bbc8:	ldr	r3, [fp, #-16]
   4bbcc:	str	r2, [r3, #32]
   4bbd0:	ldr	r3, [fp, #-16]
   4bbd4:	ldr	r3, [r3, #20]
   4bbd8:	add	r1, r3, #1
   4bbdc:	ldr	r2, [fp, #-16]
   4bbe0:	str	r1, [r2, #20]
   4bbe4:	mov	r2, #91	; 0x5b
   4bbe8:	strb	r2, [r3]
   4bbec:	ldr	r3, [fp, #-12]
   4bbf0:	cmp	r3, #0
   4bbf4:	beq	4bc70 <flatcc_json_printer_table_vector_field@@Base+0x160>
   4bbf8:	ldr	r0, [fp, #-8]
   4bbfc:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4bc00:	mov	r1, r0
   4bc04:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bc08:	ldr	r2, [r3, #12]
   4bc0c:	ldr	r3, [fp, #8]
   4bc10:	ldr	r0, [fp, #-16]
   4bc14:	bl	45104 <flatcc_json_printer_enum_flag@@Base+0xd4>
   4bc18:	ldr	r3, [fp, #-12]
   4bc1c:	sub	r3, r3, #1
   4bc20:	str	r3, [fp, #-12]
   4bc24:	b	4bc70 <flatcc_json_printer_table_vector_field@@Base+0x160>
   4bc28:	ldr	r3, [fp, #-8]
   4bc2c:	add	r3, r3, #4
   4bc30:	str	r3, [fp, #-8]
   4bc34:	ldr	r3, [fp, #-16]
   4bc38:	ldr	r3, [r3, #20]
   4bc3c:	add	r1, r3, #1
   4bc40:	ldr	r2, [fp, #-16]
   4bc44:	str	r1, [r2, #20]
   4bc48:	mov	r2, #44	; 0x2c
   4bc4c:	strb	r2, [r3]
   4bc50:	ldr	r0, [fp, #-8]
   4bc54:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4bc58:	mov	r1, r0
   4bc5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bc60:	ldr	r2, [r3, #12]
   4bc64:	ldr	r3, [fp, #8]
   4bc68:	ldr	r0, [fp, #-16]
   4bc6c:	bl	45104 <flatcc_json_printer_enum_flag@@Base+0xd4>
   4bc70:	ldr	r3, [fp, #-12]
   4bc74:	sub	r2, r3, #1
   4bc78:	str	r2, [fp, #-12]
   4bc7c:	cmp	r3, #0
   4bc80:	bne	4bc28 <flatcc_json_printer_table_vector_field@@Base+0x118>
   4bc84:	ldr	r3, [fp, #-16]
   4bc88:	ldrb	r3, [r3, #25]
   4bc8c:	cmp	r3, #0
   4bc90:	beq	4bccc <flatcc_json_printer_table_vector_field@@Base+0x1bc>
   4bc94:	ldr	r3, [fp, #-16]
   4bc98:	ldr	r3, [r3, #20]
   4bc9c:	add	r1, r3, #1
   4bca0:	ldr	r2, [fp, #-16]
   4bca4:	str	r1, [r2, #20]
   4bca8:	mov	r2, #10
   4bcac:	strb	r2, [r3]
   4bcb0:	ldr	r3, [fp, #-16]
   4bcb4:	ldr	r3, [r3, #32]
   4bcb8:	sub	r2, r3, #1
   4bcbc:	ldr	r3, [fp, #-16]
   4bcc0:	str	r2, [r3, #32]
   4bcc4:	ldr	r0, [fp, #-16]
   4bcc8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4bccc:	ldr	r3, [fp, #-16]
   4bcd0:	ldr	r3, [r3, #20]
   4bcd4:	add	r1, r3, #1
   4bcd8:	ldr	r2, [fp, #-16]
   4bcdc:	str	r1, [r2, #20]
   4bce0:	mov	r2, #93	; 0x5d
   4bce4:	strb	r2, [r3]
   4bce8:	nop	{0}
   4bcec:	sub	sp, fp, #4
   4bcf0:	ldr	fp, [sp]
   4bcf4:	add	sp, sp, #4
   4bcf8:	pop	{pc}		; (ldr pc, [sp], #4)

0004bcfc <flatcc_json_printer_union_vector_field@@Base>:
   4bcfc:	str	fp, [sp, #-8]!
   4bd00:	str	lr, [sp, #4]
   4bd04:	add	fp, sp, #4
   4bd08:	sub	sp, sp, #160	; 0xa0
   4bd0c:	str	r0, [fp, #-144]	; 0xffffff70
   4bd10:	str	r1, [fp, #-148]	; 0xffffff6c
   4bd14:	str	r2, [fp, #-152]	; 0xffffff68
   4bd18:	str	r3, [fp, #-156]	; 0xffffff64
   4bd1c:	ldr	r3, [fp, #-152]	; 0xffffff68
   4bd20:	sub	r3, r3, #1
   4bd24:	mov	r1, r3
   4bd28:	ldr	r0, [fp, #-148]	; 0xffffff6c
   4bd2c:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4bd30:	str	r0, [fp, #-20]	; 0xffffffec
   4bd34:	ldr	r1, [fp, #-152]	; 0xffffff68
   4bd38:	ldr	r0, [fp, #-148]	; 0xffffff6c
   4bd3c:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4bd40:	str	r0, [fp, #-8]
   4bd44:	ldr	r3, [fp, #-148]	; 0xffffff6c
   4bd48:	ldr	r3, [r3, #12]
   4bd4c:	str	r3, [fp, #-136]	; 0xffffff78
   4bd50:	ldr	r3, [fp, #4]
   4bd54:	cmp	r3, #100	; 0x64
   4bd58:	ble	4bd88 <flatcc_json_printer_union_vector_field@@Base+0x8c>
   4bd5c:	mov	r1, #1
   4bd60:	ldr	r0, [fp, #-144]	; 0xffffff70
   4bd64:	bl	3f300 <flatcc_json_parser_struct_as_root@@Base+0x7b0>
   4bd68:	ldr	r3, [pc, #920]	; 4c108 <flatcc_json_printer_union_vector_field@@Base+0x40c>
   4bd6c:	add	r3, pc, r3
   4bd70:	movw	r2, #843	; 0x34b
   4bd74:	ldr	r1, [pc, #912]	; 4c10c <flatcc_json_printer_union_vector_field@@Base+0x410>
   4bd78:	add	r1, pc, r1
   4bd7c:	ldr	r0, [pc, #908]	; 4c110 <flatcc_json_printer_union_vector_field@@Base+0x414>
   4bd80:	add	r0, pc, r0
   4bd84:	bl	145e8 <__assert_fail@plt>
   4bd88:	ldr	r2, [fp, #4]
   4bd8c:	sub	r3, fp, #128	; 0x80
   4bd90:	ldr	r1, [fp, #-156]	; 0xffffff64
   4bd94:	mov	r0, r3
   4bd98:	bl	1451c <memcpy@plt>
   4bd9c:	ldr	r3, [fp, #4]
   4bda0:	sub	r2, fp, #128	; 0x80
   4bda4:	add	r3, r2, r3
   4bda8:	mov	r2, #5
   4bdac:	ldr	r1, [pc, #864]	; 4c114 <flatcc_json_printer_union_vector_field@@Base+0x418>
   4bdb0:	add	r1, pc, r1
   4bdb4:	mov	r0, r3
   4bdb8:	bl	1451c <memcpy@plt>
   4bdbc:	ldr	r3, [fp, #-8]
   4bdc0:	cmp	r3, #0
   4bdc4:	beq	4c0f8 <flatcc_json_printer_union_vector_field@@Base+0x3fc>
   4bdc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4bdcc:	cmp	r3, #0
   4bdd0:	beq	4c0f8 <flatcc_json_printer_union_vector_field@@Base+0x3fc>
   4bdd4:	ldr	r3, [fp, #-152]	; 0xffffff68
   4bdd8:	sub	r1, r3, #1
   4bddc:	ldr	r3, [fp, #4]
   4bde0:	add	r3, r3, #5
   4bde4:	sub	r0, fp, #128	; 0x80
   4bde8:	ldr	r2, [fp, #8]
   4bdec:	str	r2, [sp, #4]
   4bdf0:	str	r3, [sp]
   4bdf4:	mov	r3, r0
   4bdf8:	mov	r2, r1
   4bdfc:	ldr	r1, [fp, #-148]	; 0xffffff6c
   4be00:	ldr	r0, [fp, #-144]	; 0xffffff70
   4be04:	bl	49af4 <flatcc_json_printer_utype_enum_vector_field@@Base>
   4be08:	ldr	r3, [fp, #-148]	; 0xffffff6c
   4be0c:	ldr	r3, [r3, #16]
   4be10:	add	r1, r3, #1
   4be14:	ldr	r2, [fp, #-148]	; 0xffffff6c
   4be18:	str	r1, [r2, #16]
   4be1c:	cmp	r3, #0
   4be20:	beq	4be40 <flatcc_json_printer_union_vector_field@@Base+0x144>
   4be24:	ldr	r3, [fp, #-144]	; 0xffffff70
   4be28:	ldr	r3, [r3, #20]
   4be2c:	add	r1, r3, #1
   4be30:	ldr	r2, [fp, #-144]	; 0xffffff70
   4be34:	str	r1, [r2, #20]
   4be38:	mov	r2, #44	; 0x2c
   4be3c:	strb	r2, [r3]
   4be40:	ldr	r0, [fp, #-8]
   4be44:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4be48:	str	r0, [fp, #-8]
   4be4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4be50:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4be54:	str	r0, [fp, #-20]	; 0xffffffec
   4be58:	ldr	r0, [fp, #-8]
   4be5c:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4be60:	str	r0, [fp, #-16]
   4be64:	ldr	r3, [fp, #-8]
   4be68:	add	r3, r3, #4
   4be6c:	str	r3, [fp, #-8]
   4be70:	ldr	r3, [fp, #-20]	; 0xffffffec
   4be74:	add	r3, r3, #4
   4be78:	str	r3, [fp, #-20]	; 0xffffffec
   4be7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4be80:	str	r3, [fp, #-12]
   4be84:	ldr	r3, [fp, #4]
   4be88:	mov	r2, r3
   4be8c:	ldr	r1, [fp, #-156]	; 0xffffff64
   4be90:	ldr	r0, [fp, #-144]	; 0xffffff70
   4be94:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4be98:	ldr	r3, [fp, #-144]	; 0xffffff70
   4be9c:	ldr	r3, [r3, #32]
   4bea0:	add	r2, r3, #1
   4bea4:	ldr	r3, [fp, #-144]	; 0xffffff70
   4bea8:	str	r2, [r3, #32]
   4beac:	ldr	r3, [fp, #-144]	; 0xffffff70
   4beb0:	ldr	r3, [r3, #20]
   4beb4:	add	r1, r3, #1
   4beb8:	ldr	r2, [fp, #-144]	; 0xffffff70
   4bebc:	str	r1, [r2, #20]
   4bec0:	mov	r2, #91	; 0x5b
   4bec4:	strb	r2, [r3]
   4bec8:	ldr	r3, [fp, #-16]
   4becc:	cmp	r3, #0
   4bed0:	beq	4c080 <flatcc_json_printer_union_vector_field@@Base+0x384>
   4bed4:	ldr	r0, [fp, #-12]
   4bed8:	bl	3f240 <flatcc_json_parser_struct_as_root@@Base+0x6f0>
   4bedc:	mov	r3, r0
   4bee0:	strb	r3, [fp, #-21]	; 0xffffffeb
   4bee4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4bee8:	cmp	r3, #0
   4beec:	beq	4bf18 <flatcc_json_printer_union_vector_field@@Base+0x21c>
   4bef0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4bef4:	strb	r3, [fp, #-132]	; 0xffffff7c
   4bef8:	ldr	r3, [fp, #-8]
   4befc:	str	r3, [fp, #-140]	; 0xffffff74
   4bf00:	sub	r2, fp, #140	; 0x8c
   4bf04:	ldr	r3, [fp, #12]
   4bf08:	mov	r1, r2
   4bf0c:	ldr	r0, [fp, #-144]	; 0xffffff70
   4bf10:	blx	r3
   4bf14:	b	4bf88 <flatcc_json_printer_union_vector_field@@Base+0x28c>
   4bf18:	ldr	r3, [fp, #-144]	; 0xffffff70
   4bf1c:	ldr	r3, [r3, #20]
   4bf20:	add	r1, r3, #1
   4bf24:	ldr	r2, [fp, #-144]	; 0xffffff70
   4bf28:	str	r1, [r2, #20]
   4bf2c:	mov	r2, #110	; 0x6e
   4bf30:	strb	r2, [r3]
   4bf34:	ldr	r3, [fp, #-144]	; 0xffffff70
   4bf38:	ldr	r3, [r3, #20]
   4bf3c:	add	r1, r3, #1
   4bf40:	ldr	r2, [fp, #-144]	; 0xffffff70
   4bf44:	str	r1, [r2, #20]
   4bf48:	mov	r2, #117	; 0x75
   4bf4c:	strb	r2, [r3]
   4bf50:	ldr	r3, [fp, #-144]	; 0xffffff70
   4bf54:	ldr	r3, [r3, #20]
   4bf58:	add	r1, r3, #1
   4bf5c:	ldr	r2, [fp, #-144]	; 0xffffff70
   4bf60:	str	r1, [r2, #20]
   4bf64:	mov	r2, #108	; 0x6c
   4bf68:	strb	r2, [r3]
   4bf6c:	ldr	r3, [fp, #-144]	; 0xffffff70
   4bf70:	ldr	r3, [r3, #20]
   4bf74:	add	r1, r3, #1
   4bf78:	ldr	r2, [fp, #-144]	; 0xffffff70
   4bf7c:	str	r1, [r2, #20]
   4bf80:	mov	r2, #108	; 0x6c
   4bf84:	strb	r2, [r3]
   4bf88:	ldr	r3, [fp, #-16]
   4bf8c:	sub	r3, r3, #1
   4bf90:	str	r3, [fp, #-16]
   4bf94:	b	4c080 <flatcc_json_printer_union_vector_field@@Base+0x384>
   4bf98:	ldr	r3, [fp, #-8]
   4bf9c:	add	r3, r3, #4
   4bfa0:	str	r3, [fp, #-8]
   4bfa4:	ldr	r3, [fp, #-12]
   4bfa8:	add	r3, r3, #1
   4bfac:	str	r3, [fp, #-12]
   4bfb0:	ldr	r0, [fp, #-12]
   4bfb4:	bl	3f240 <flatcc_json_parser_struct_as_root@@Base+0x6f0>
   4bfb8:	mov	r3, r0
   4bfbc:	strb	r3, [fp, #-21]	; 0xffffffeb
   4bfc0:	ldr	r3, [fp, #-144]	; 0xffffff70
   4bfc4:	ldr	r3, [r3, #20]
   4bfc8:	add	r1, r3, #1
   4bfcc:	ldr	r2, [fp, #-144]	; 0xffffff70
   4bfd0:	str	r1, [r2, #20]
   4bfd4:	mov	r2, #44	; 0x2c
   4bfd8:	strb	r2, [r3]
   4bfdc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4bfe0:	cmp	r3, #0
   4bfe4:	beq	4c010 <flatcc_json_printer_union_vector_field@@Base+0x314>
   4bfe8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4bfec:	strb	r3, [fp, #-132]	; 0xffffff7c
   4bff0:	ldr	r3, [fp, #-8]
   4bff4:	str	r3, [fp, #-140]	; 0xffffff74
   4bff8:	sub	r2, fp, #140	; 0x8c
   4bffc:	ldr	r3, [fp, #12]
   4c000:	mov	r1, r2
   4c004:	ldr	r0, [fp, #-144]	; 0xffffff70
   4c008:	blx	r3
   4c00c:	b	4c080 <flatcc_json_printer_union_vector_field@@Base+0x384>
   4c010:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c014:	ldr	r3, [r3, #20]
   4c018:	add	r1, r3, #1
   4c01c:	ldr	r2, [fp, #-144]	; 0xffffff70
   4c020:	str	r1, [r2, #20]
   4c024:	mov	r2, #110	; 0x6e
   4c028:	strb	r2, [r3]
   4c02c:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c030:	ldr	r3, [r3, #20]
   4c034:	add	r1, r3, #1
   4c038:	ldr	r2, [fp, #-144]	; 0xffffff70
   4c03c:	str	r1, [r2, #20]
   4c040:	mov	r2, #117	; 0x75
   4c044:	strb	r2, [r3]
   4c048:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c04c:	ldr	r3, [r3, #20]
   4c050:	add	r1, r3, #1
   4c054:	ldr	r2, [fp, #-144]	; 0xffffff70
   4c058:	str	r1, [r2, #20]
   4c05c:	mov	r2, #108	; 0x6c
   4c060:	strb	r2, [r3]
   4c064:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c068:	ldr	r3, [r3, #20]
   4c06c:	add	r1, r3, #1
   4c070:	ldr	r2, [fp, #-144]	; 0xffffff70
   4c074:	str	r1, [r2, #20]
   4c078:	mov	r2, #108	; 0x6c
   4c07c:	strb	r2, [r3]
   4c080:	ldr	r3, [fp, #-16]
   4c084:	sub	r2, r3, #1
   4c088:	str	r2, [fp, #-16]
   4c08c:	cmp	r3, #0
   4c090:	bne	4bf98 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   4c094:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c098:	ldrb	r3, [r3, #25]
   4c09c:	cmp	r3, #0
   4c0a0:	beq	4c0dc <flatcc_json_printer_union_vector_field@@Base+0x3e0>
   4c0a4:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c0a8:	ldr	r3, [r3, #20]
   4c0ac:	add	r1, r3, #1
   4c0b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   4c0b4:	str	r1, [r2, #20]
   4c0b8:	mov	r2, #10
   4c0bc:	strb	r2, [r3]
   4c0c0:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c0c4:	ldr	r3, [r3, #32]
   4c0c8:	sub	r2, r3, #1
   4c0cc:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c0d0:	str	r2, [r3, #32]
   4c0d4:	ldr	r0, [fp, #-144]	; 0xffffff70
   4c0d8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4c0dc:	ldr	r3, [fp, #-144]	; 0xffffff70
   4c0e0:	ldr	r3, [r3, #20]
   4c0e4:	add	r1, r3, #1
   4c0e8:	ldr	r2, [fp, #-144]	; 0xffffff70
   4c0ec:	str	r1, [r2, #20]
   4c0f0:	mov	r2, #93	; 0x5d
   4c0f4:	strb	r2, [r3]
   4c0f8:	sub	sp, fp, #4
   4c0fc:	ldr	fp, [sp]
   4c100:	add	sp, sp, #4
   4c104:	pop	{pc}		; (ldr pc, [sp], #4)
   4c108:	andeq	r8, r0, r8, ror #4
   4c10c:			; <UNDEFINED> instruction: 0x00007cb8
   4c110:	andeq	r7, r0, ip, lsl sp
   4c114:	andeq	r7, r0, r8, lsl #26

0004c118 <flatcc_json_printer_table_field@@Base>:
   4c118:	str	fp, [sp, #-8]!
   4c11c:	str	lr, [sp, #4]
   4c120:	add	fp, sp, #4
   4c124:	sub	sp, sp, #24
   4c128:	str	r0, [fp, #-16]
   4c12c:	str	r1, [fp, #-20]	; 0xffffffec
   4c130:	str	r2, [fp, #-24]	; 0xffffffe8
   4c134:	str	r3, [fp, #-28]	; 0xffffffe4
   4c138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c13c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4c140:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4c144:	str	r0, [fp, #-8]
   4c148:	ldr	r3, [fp, #-8]
   4c14c:	cmp	r3, #0
   4c150:	beq	4c1c0 <flatcc_json_printer_table_field@@Base+0xa8>
   4c154:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c158:	ldr	r3, [r3, #16]
   4c15c:	add	r1, r3, #1
   4c160:	ldr	r2, [fp, #-20]	; 0xffffffec
   4c164:	str	r1, [r2, #16]
   4c168:	cmp	r3, #0
   4c16c:	beq	4c18c <flatcc_json_printer_table_field@@Base+0x74>
   4c170:	ldr	r3, [fp, #-16]
   4c174:	ldr	r3, [r3, #20]
   4c178:	add	r1, r3, #1
   4c17c:	ldr	r2, [fp, #-16]
   4c180:	str	r1, [r2, #20]
   4c184:	mov	r2, #44	; 0x2c
   4c188:	strb	r2, [r3]
   4c18c:	ldr	r3, [fp, #4]
   4c190:	mov	r2, r3
   4c194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4c198:	ldr	r0, [fp, #-16]
   4c19c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4c1a0:	ldr	r0, [fp, #-8]
   4c1a4:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4c1a8:	mov	r1, r0
   4c1ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c1b0:	ldr	r2, [r3, #12]
   4c1b4:	ldr	r3, [fp, #8]
   4c1b8:	ldr	r0, [fp, #-16]
   4c1bc:	bl	45104 <flatcc_json_printer_enum_flag@@Base+0xd4>
   4c1c0:	nop	{0}
   4c1c4:	sub	sp, fp, #4
   4c1c8:	ldr	fp, [sp]
   4c1cc:	add	sp, sp, #4
   4c1d0:	pop	{pc}		; (ldr pc, [sp], #4)

0004c1d4 <flatcc_json_printer_union_field@@Base>:
   4c1d4:	str	fp, [sp, #-8]!
   4c1d8:	str	lr, [sp, #4]
   4c1dc:	add	fp, sp, #4
   4c1e0:	sub	sp, sp, #40	; 0x28
   4c1e4:	str	r0, [fp, #-32]	; 0xffffffe0
   4c1e8:	str	r1, [fp, #-36]	; 0xffffffdc
   4c1ec:	str	r2, [fp, #-40]	; 0xffffffd8
   4c1f0:	str	r3, [fp, #-44]	; 0xffffffd4
   4c1f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c1f8:	sub	r3, r3, #1
   4c1fc:	mov	r1, r3
   4c200:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4c204:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4c208:	str	r0, [fp, #-8]
   4c20c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4c210:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4c214:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4c218:	str	r0, [fp, #-12]
   4c21c:	ldr	r3, [fp, #-12]
   4c220:	cmp	r3, #0
   4c224:	beq	4c4d4 <flatcc_json_printer_union_field@@Base+0x300>
   4c228:	ldr	r3, [fp, #-8]
   4c22c:	cmp	r3, #0
   4c230:	beq	4c4d4 <flatcc_json_printer_union_field@@Base+0x300>
   4c234:	ldr	r0, [fp, #-8]
   4c238:	bl	3f240 <flatcc_json_parser_struct_as_root@@Base+0x6f0>
   4c23c:	mov	r3, r0
   4c240:	strb	r3, [fp, #-13]
   4c244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c248:	ldr	r3, [r3, #16]
   4c24c:	add	r1, r3, #1
   4c250:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4c254:	str	r1, [r2, #16]
   4c258:	cmp	r3, #0
   4c25c:	beq	4c27c <flatcc_json_printer_union_field@@Base+0xa8>
   4c260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c264:	ldr	r3, [r3, #20]
   4c268:	add	r1, r3, #1
   4c26c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4c270:	str	r1, [r2, #20]
   4c274:	mov	r2, #44	; 0x2c
   4c278:	strb	r2, [r3]
   4c27c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c280:	ldrb	r3, [r3, #25]
   4c284:	cmp	r3, #0
   4c288:	beq	4c2b4 <flatcc_json_printer_union_field@@Base+0xe0>
   4c28c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c290:	ldr	r3, [r3, #20]
   4c294:	add	r1, r3, #1
   4c298:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4c29c:	str	r1, [r2, #20]
   4c2a0:	mov	r2, #10
   4c2a4:	strb	r2, [r3]
   4c2a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c2ac:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4c2b0:	b	4c2bc <flatcc_json_printer_union_field@@Base+0xe8>
   4c2b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c2b8:	bl	3f368 <flatcc_json_parser_struct_as_root@@Base+0x818>
   4c2bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c2c0:	ldr	r3, [r3, #20]
   4c2c4:	mov	r2, #34	; 0x22
   4c2c8:	strb	r2, [r3]
   4c2cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c2d0:	ldr	r3, [r3, #20]
   4c2d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4c2d8:	ldrb	r2, [r2, #26]
   4c2dc:	cmp	r2, #0
   4c2e0:	moveq	r2, #1
   4c2e4:	movne	r2, #0
   4c2e8:	uxtb	r2, r2
   4c2ec:	add	r2, r3, r2
   4c2f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c2f4:	str	r2, [r3, #20]
   4c2f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c2fc:	ldr	r2, [r3, #20]
   4c300:	ldr	r3, [fp, #4]
   4c304:	add	r2, r2, r3
   4c308:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c30c:	ldr	r3, [r3, #16]
   4c310:	cmp	r2, r3
   4c314:	bcs	4c34c <flatcc_json_printer_union_field@@Base+0x178>
   4c318:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c31c:	ldr	r3, [r3, #20]
   4c320:	ldr	r2, [fp, #4]
   4c324:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4c328:	mov	r0, r3
   4c32c:	bl	1451c <memcpy@plt>
   4c330:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c334:	ldr	r2, [r3, #20]
   4c338:	ldr	r3, [fp, #4]
   4c33c:	add	r2, r2, r3
   4c340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c344:	str	r2, [r3, #20]
   4c348:	b	4c360 <flatcc_json_printer_union_field@@Base+0x18c>
   4c34c:	ldr	r3, [fp, #4]
   4c350:	mov	r2, r3
   4c354:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4c358:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c35c:	bl	4404c <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   4c360:	mov	r2, #5
   4c364:	ldr	r3, [pc, #380]	; 4c4e8 <flatcc_json_printer_union_field@@Base+0x314>
   4c368:	add	r3, pc, r3
   4c36c:	mov	r1, r3
   4c370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c374:	bl	4404c <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   4c378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c37c:	ldr	r3, [r3, #20]
   4c380:	mov	r2, #34	; 0x22
   4c384:	strb	r2, [r3]
   4c388:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c38c:	ldr	r3, [r3, #20]
   4c390:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4c394:	ldrb	r2, [r2, #26]
   4c398:	cmp	r2, #0
   4c39c:	moveq	r2, #1
   4c3a0:	movne	r2, #0
   4c3a4:	uxtb	r2, r2
   4c3a8:	add	r2, r3, r2
   4c3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c3b0:	str	r2, [r3, #20]
   4c3b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c3b8:	ldr	r3, [r3, #20]
   4c3bc:	add	r1, r3, #1
   4c3c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4c3c4:	str	r1, [r2, #20]
   4c3c8:	mov	r2, #58	; 0x3a
   4c3cc:	strb	r2, [r3]
   4c3d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c3d4:	ldr	r3, [r3, #20]
   4c3d8:	mov	r2, #32
   4c3dc:	strb	r2, [r3]
   4c3e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c3e4:	ldr	r3, [r3, #20]
   4c3e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4c3ec:	ldrb	r2, [r2, #25]
   4c3f0:	cmp	r2, #0
   4c3f4:	movne	r2, #1
   4c3f8:	moveq	r2, #0
   4c3fc:	uxtb	r2, r2
   4c400:	add	r2, r3, r2
   4c404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c408:	str	r2, [r3, #20]
   4c40c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c410:	ldrb	r3, [r3, #27]
   4c414:	cmp	r3, #0
   4c418:	beq	4c450 <flatcc_json_printer_union_field@@Base+0x27c>
   4c41c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c420:	ldr	r2, [r3, #20]
   4c424:	ldrb	r3, [fp, #-13]
   4c428:	mov	r1, r2
   4c42c:	mov	r0, r3
   4c430:	bl	3f438 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   4c434:	mov	r2, r0
   4c438:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c43c:	ldr	r3, [r3, #20]
   4c440:	add	r2, r3, r2
   4c444:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c448:	str	r2, [r3, #20]
   4c44c:	b	4c464 <flatcc_json_printer_union_field@@Base+0x290>
   4c450:	ldrb	r2, [fp, #-13]
   4c454:	ldr	r3, [fp, #8]
   4c458:	mov	r1, r2
   4c45c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c460:	blx	r3
   4c464:	ldrb	r3, [fp, #-13]
   4c468:	cmp	r3, #0
   4c46c:	beq	4c4d8 <flatcc_json_printer_union_field@@Base+0x304>
   4c470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4c474:	ldr	r3, [r3, #20]
   4c478:	add	r1, r3, #1
   4c47c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4c480:	str	r1, [r2, #20]
   4c484:	mov	r2, #44	; 0x2c
   4c488:	strb	r2, [r3]
   4c48c:	ldr	r3, [fp, #4]
   4c490:	mov	r2, r3
   4c494:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4c498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c49c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4c4a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c4a4:	ldr	r3, [r3, #12]
   4c4a8:	str	r3, [fp, #-24]	; 0xffffffe8
   4c4ac:	ldrb	r3, [fp, #-13]
   4c4b0:	strb	r3, [fp, #-20]	; 0xffffffec
   4c4b4:	ldr	r3, [fp, #-12]
   4c4b8:	str	r3, [fp, #-28]	; 0xffffffe4
   4c4bc:	sub	r2, fp, #28
   4c4c0:	ldr	r3, [fp, #12]
   4c4c4:	mov	r1, r2
   4c4c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c4cc:	blx	r3
   4c4d0:	b	4c4d8 <flatcc_json_printer_union_field@@Base+0x304>
   4c4d4:	nop	{0}
   4c4d8:	sub	sp, fp, #4
   4c4dc:	ldr	fp, [sp]
   4c4e0:	add	sp, sp, #4
   4c4e4:	pop	{pc}		; (ldr pc, [sp], #4)
   4c4e8:	andeq	r7, r0, r0, asr r7

0004c4ec <flatcc_json_printer_union_table@@Base>:
   4c4ec:	str	fp, [sp, #-8]!
   4c4f0:	str	lr, [sp, #4]
   4c4f4:	add	fp, sp, #4
   4c4f8:	sub	sp, sp, #16
   4c4fc:	str	r0, [fp, #-8]
   4c500:	str	r1, [fp, #-12]
   4c504:	str	r2, [fp, #-16]
   4c508:	ldr	r3, [fp, #-12]
   4c50c:	ldr	r3, [r3]
   4c510:	mov	r0, r3
   4c514:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4c518:	mov	r1, r0
   4c51c:	ldr	r3, [fp, #-12]
   4c520:	ldr	r2, [r3, #4]
   4c524:	ldr	r3, [fp, #-16]
   4c528:	ldr	r0, [fp, #-8]
   4c52c:	bl	45104 <flatcc_json_printer_enum_flag@@Base+0xd4>
   4c530:	nop	{0}
   4c534:	sub	sp, fp, #4
   4c538:	ldr	fp, [sp]
   4c53c:	add	sp, sp, #4
   4c540:	pop	{pc}		; (ldr pc, [sp], #4)

0004c544 <flatcc_json_printer_union_struct@@Base>:
   4c544:	str	fp, [sp, #-8]!
   4c548:	str	lr, [sp, #4]
   4c54c:	add	fp, sp, #4
   4c550:	sub	sp, sp, #16
   4c554:	str	r0, [fp, #-8]
   4c558:	str	r1, [fp, #-12]
   4c55c:	str	r2, [fp, #-16]
   4c560:	ldr	r3, [fp, #-8]
   4c564:	ldr	r3, [r3, #32]
   4c568:	add	r2, r3, #1
   4c56c:	ldr	r3, [fp, #-8]
   4c570:	str	r2, [r3, #32]
   4c574:	ldr	r3, [fp, #-8]
   4c578:	ldr	r3, [r3, #20]
   4c57c:	add	r1, r3, #1
   4c580:	ldr	r2, [fp, #-8]
   4c584:	str	r1, [r2, #20]
   4c588:	mov	r2, #123	; 0x7b
   4c58c:	strb	r2, [r3]
   4c590:	ldr	r3, [fp, #-12]
   4c594:	ldr	r3, [r3]
   4c598:	mov	r0, r3
   4c59c:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4c5a0:	mov	r2, r0
   4c5a4:	ldr	r3, [fp, #-16]
   4c5a8:	mov	r1, r2
   4c5ac:	ldr	r0, [fp, #-8]
   4c5b0:	blx	r3
   4c5b4:	ldr	r3, [fp, #-8]
   4c5b8:	ldrb	r3, [r3, #25]
   4c5bc:	cmp	r3, #0
   4c5c0:	beq	4c5fc <flatcc_json_printer_union_struct@@Base+0xb8>
   4c5c4:	ldr	r3, [fp, #-8]
   4c5c8:	ldr	r3, [r3, #20]
   4c5cc:	add	r1, r3, #1
   4c5d0:	ldr	r2, [fp, #-8]
   4c5d4:	str	r1, [r2, #20]
   4c5d8:	mov	r2, #10
   4c5dc:	strb	r2, [r3]
   4c5e0:	ldr	r3, [fp, #-8]
   4c5e4:	ldr	r3, [r3, #32]
   4c5e8:	sub	r2, r3, #1
   4c5ec:	ldr	r3, [fp, #-8]
   4c5f0:	str	r2, [r3, #32]
   4c5f4:	ldr	r0, [fp, #-8]
   4c5f8:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4c5fc:	ldr	r3, [fp, #-8]
   4c600:	ldr	r3, [r3, #20]
   4c604:	add	r1, r3, #1
   4c608:	ldr	r2, [fp, #-8]
   4c60c:	str	r1, [r2, #20]
   4c610:	mov	r2, #125	; 0x7d
   4c614:	strb	r2, [r3]
   4c618:	nop	{0}
   4c61c:	sub	sp, fp, #4
   4c620:	ldr	fp, [sp]
   4c624:	add	sp, sp, #4
   4c628:	pop	{pc}		; (ldr pc, [sp], #4)

0004c62c <flatcc_json_printer_union_string@@Base>:
   4c62c:	str	fp, [sp, #-8]!
   4c630:	str	lr, [sp, #4]
   4c634:	add	fp, sp, #4
   4c638:	sub	sp, sp, #8
   4c63c:	str	r0, [fp, #-8]
   4c640:	str	r1, [fp, #-12]
   4c644:	ldr	r3, [fp, #-12]
   4c648:	ldr	r3, [r3]
   4c64c:	mov	r0, r3
   4c650:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4c654:	mov	r3, r0
   4c658:	mov	r1, r3
   4c65c:	ldr	r0, [fp, #-8]
   4c660:	bl	450b0 <flatcc_json_printer_enum_flag@@Base+0x80>
   4c664:	nop	{0}
   4c668:	sub	sp, fp, #4
   4c66c:	ldr	fp, [sp]
   4c670:	add	sp, sp, #4
   4c674:	pop	{pc}		; (ldr pc, [sp], #4)

0004c678 <flatcc_json_printer_embedded_struct_field@@Base>:
   4c678:	str	fp, [sp, #-8]!
   4c67c:	str	lr, [sp, #4]
   4c680:	add	fp, sp, #4
   4c684:	sub	sp, sp, #16
   4c688:	str	r0, [fp, #-8]
   4c68c:	str	r1, [fp, #-12]
   4c690:	str	r2, [fp, #-16]
   4c694:	str	r3, [fp, #-20]	; 0xffffffec
   4c698:	ldr	r3, [fp, #-12]
   4c69c:	cmp	r3, #0
   4c6a0:	beq	4c6c0 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
   4c6a4:	ldr	r3, [fp, #-8]
   4c6a8:	ldr	r3, [r3, #20]
   4c6ac:	add	r1, r3, #1
   4c6b0:	ldr	r2, [fp, #-8]
   4c6b4:	str	r1, [r2, #20]
   4c6b8:	mov	r2, #44	; 0x2c
   4c6bc:	strb	r2, [r3]
   4c6c0:	ldr	r3, [fp, #8]
   4c6c4:	mov	r2, r3
   4c6c8:	ldr	r1, [fp, #4]
   4c6cc:	ldr	r0, [fp, #-8]
   4c6d0:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4c6d4:	ldr	r3, [fp, #-8]
   4c6d8:	ldr	r3, [r3, #32]
   4c6dc:	add	r2, r3, #1
   4c6e0:	ldr	r3, [fp, #-8]
   4c6e4:	str	r2, [r3, #32]
   4c6e8:	ldr	r3, [fp, #-8]
   4c6ec:	ldr	r3, [r3, #20]
   4c6f0:	add	r1, r3, #1
   4c6f4:	ldr	r2, [fp, #-8]
   4c6f8:	str	r1, [r2, #20]
   4c6fc:	mov	r2, #123	; 0x7b
   4c700:	strb	r2, [r3]
   4c704:	ldr	r2, [fp, #-16]
   4c708:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c70c:	add	r2, r2, r3
   4c710:	ldr	r3, [fp, #12]
   4c714:	mov	r1, r2
   4c718:	ldr	r0, [fp, #-8]
   4c71c:	blx	r3
   4c720:	ldr	r3, [fp, #-8]
   4c724:	ldrb	r3, [r3, #25]
   4c728:	cmp	r3, #0
   4c72c:	beq	4c768 <flatcc_json_printer_embedded_struct_field@@Base+0xf0>
   4c730:	ldr	r3, [fp, #-8]
   4c734:	ldr	r3, [r3, #20]
   4c738:	add	r1, r3, #1
   4c73c:	ldr	r2, [fp, #-8]
   4c740:	str	r1, [r2, #20]
   4c744:	mov	r2, #10
   4c748:	strb	r2, [r3]
   4c74c:	ldr	r3, [fp, #-8]
   4c750:	ldr	r3, [r3, #32]
   4c754:	sub	r2, r3, #1
   4c758:	ldr	r3, [fp, #-8]
   4c75c:	str	r2, [r3, #32]
   4c760:	ldr	r0, [fp, #-8]
   4c764:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4c768:	ldr	r3, [fp, #-8]
   4c76c:	ldr	r3, [r3, #20]
   4c770:	add	r1, r3, #1
   4c774:	ldr	r2, [fp, #-8]
   4c778:	str	r1, [r2, #20]
   4c77c:	mov	r2, #125	; 0x7d
   4c780:	strb	r2, [r3]
   4c784:	nop	{0}
   4c788:	sub	sp, fp, #4
   4c78c:	ldr	fp, [sp]
   4c790:	add	sp, sp, #4
   4c794:	pop	{pc}		; (ldr pc, [sp], #4)

0004c798 <flatcc_json_printer_struct_field@@Base>:
   4c798:	str	fp, [sp, #-8]!
   4c79c:	str	lr, [sp, #4]
   4c7a0:	add	fp, sp, #4
   4c7a4:	sub	sp, sp, #24
   4c7a8:	str	r0, [fp, #-16]
   4c7ac:	str	r1, [fp, #-20]	; 0xffffffec
   4c7b0:	str	r2, [fp, #-24]	; 0xffffffe8
   4c7b4:	str	r3, [fp, #-28]	; 0xffffffe4
   4c7b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c7bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   4c7c0:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4c7c4:	str	r0, [fp, #-8]
   4c7c8:	ldr	r3, [fp, #-8]
   4c7cc:	cmp	r3, #0
   4c7d0:	beq	4c8c4 <flatcc_json_printer_struct_field@@Base+0x12c>
   4c7d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c7d8:	ldr	r3, [r3, #16]
   4c7dc:	add	r1, r3, #1
   4c7e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4c7e4:	str	r1, [r2, #16]
   4c7e8:	cmp	r3, #0
   4c7ec:	beq	4c80c <flatcc_json_printer_struct_field@@Base+0x74>
   4c7f0:	ldr	r3, [fp, #-16]
   4c7f4:	ldr	r3, [r3, #20]
   4c7f8:	add	r1, r3, #1
   4c7fc:	ldr	r2, [fp, #-16]
   4c800:	str	r1, [r2, #20]
   4c804:	mov	r2, #44	; 0x2c
   4c808:	strb	r2, [r3]
   4c80c:	ldr	r3, [fp, #4]
   4c810:	mov	r2, r3
   4c814:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4c818:	ldr	r0, [fp, #-16]
   4c81c:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4c820:	ldr	r3, [fp, #-16]
   4c824:	ldr	r3, [r3, #32]
   4c828:	add	r2, r3, #1
   4c82c:	ldr	r3, [fp, #-16]
   4c830:	str	r2, [r3, #32]
   4c834:	ldr	r3, [fp, #-16]
   4c838:	ldr	r3, [r3, #20]
   4c83c:	add	r1, r3, #1
   4c840:	ldr	r2, [fp, #-16]
   4c844:	str	r1, [r2, #20]
   4c848:	mov	r2, #123	; 0x7b
   4c84c:	strb	r2, [r3]
   4c850:	ldr	r3, [fp, #8]
   4c854:	ldr	r1, [fp, #-8]
   4c858:	ldr	r0, [fp, #-16]
   4c85c:	blx	r3
   4c860:	ldr	r3, [fp, #-16]
   4c864:	ldrb	r3, [r3, #25]
   4c868:	cmp	r3, #0
   4c86c:	beq	4c8a8 <flatcc_json_printer_struct_field@@Base+0x110>
   4c870:	ldr	r3, [fp, #-16]
   4c874:	ldr	r3, [r3, #20]
   4c878:	add	r1, r3, #1
   4c87c:	ldr	r2, [fp, #-16]
   4c880:	str	r1, [r2, #20]
   4c884:	mov	r2, #10
   4c888:	strb	r2, [r3]
   4c88c:	ldr	r3, [fp, #-16]
   4c890:	ldr	r3, [r3, #32]
   4c894:	sub	r2, r3, #1
   4c898:	ldr	r3, [fp, #-16]
   4c89c:	str	r2, [r3, #32]
   4c8a0:	ldr	r0, [fp, #-16]
   4c8a4:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4c8a8:	ldr	r3, [fp, #-16]
   4c8ac:	ldr	r3, [r3, #20]
   4c8b0:	add	r1, r3, #1
   4c8b4:	ldr	r2, [fp, #-16]
   4c8b8:	str	r1, [r2, #20]
   4c8bc:	mov	r2, #125	; 0x7d
   4c8c0:	strb	r2, [r3]
   4c8c4:	nop	{0}
   4c8c8:	sub	sp, fp, #4
   4c8cc:	ldr	fp, [sp]
   4c8d0:	add	sp, sp, #4
   4c8d4:	pop	{pc}		; (ldr pc, [sp], #4)
   4c8d8:	str	fp, [sp, #-8]!
   4c8dc:	str	lr, [sp, #4]
   4c8e0:	add	fp, sp, #4
   4c8e4:	sub	sp, sp, #24
   4c8e8:	str	r0, [fp, #-16]
   4c8ec:	str	r1, [fp, #-20]	; 0xffffffec
   4c8f0:	str	r2, [fp, #-24]	; 0xffffffe8
   4c8f4:	str	r3, [fp, #-28]	; 0xffffffe4
   4c8f8:	mov	r3, #0
   4c8fc:	str	r3, [fp, #-12]
   4c900:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c904:	cmp	r3, #0
   4c908:	beq	4c918 <flatcc_json_printer_struct_field@@Base+0x180>
   4c90c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c910:	cmp	r3, #7
   4c914:	bhi	4c944 <flatcc_json_printer_struct_field@@Base+0x1ac>
   4c918:	mov	r1, #1
   4c91c:	ldr	r0, [fp, #-16]
   4c920:	bl	3f300 <flatcc_json_parser_struct_as_root@@Base+0x7b0>
   4c924:	ldr	r3, [pc, #192]	; 4c9ec <flatcc_json_printer_struct_field@@Base+0x254>
   4c928:	add	r3, pc, r3
   4c92c:	movw	r2, #1019	; 0x3fb
   4c930:	ldr	r1, [pc, #184]	; 4c9f0 <flatcc_json_printer_struct_field@@Base+0x258>
   4c934:	add	r1, pc, r1
   4c938:	ldr	r0, [pc, #180]	; 4c9f4 <flatcc_json_printer_struct_field@@Base+0x25c>
   4c93c:	add	r0, pc, r0
   4c940:	bl	145e8 <__assert_fail@plt>
   4c944:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c948:	cmp	r3, #0
   4c94c:	beq	4c9d4 <flatcc_json_printer_struct_field@@Base+0x23c>
   4c950:	sub	r3, fp, #12
   4c954:	mov	r2, #4
   4c958:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4c95c:	mov	r0, r3
   4c960:	bl	145a0 <strncpy@plt>
   4c964:	ldr	r3, [fp, #-12]
   4c968:	mov	r0, r3
   4c96c:	bl	3f2a0 <flatcc_json_parser_struct_as_root@@Base+0x750>
   4c970:	mov	r3, r0
   4c974:	str	r3, [fp, #-12]
   4c978:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c97c:	add	r3, r3, #4
   4c980:	mov	r0, r3
   4c984:	bl	3f2c4 <flatcc_json_parser_struct_as_root@@Base+0x774>
   4c988:	str	r0, [fp, #-8]
   4c98c:	ldr	r3, [fp, #-12]
   4c990:	cmp	r3, #0
   4c994:	beq	4c9d4 <flatcc_json_printer_struct_field@@Base+0x23c>
   4c998:	ldr	r3, [fp, #-12]
   4c99c:	ldr	r2, [fp, #-8]
   4c9a0:	cmp	r2, r3
   4c9a4:	beq	4c9d4 <flatcc_json_printer_struct_field@@Base+0x23c>
   4c9a8:	mov	r1, #1
   4c9ac:	ldr	r0, [fp, #-16]
   4c9b0:	bl	3f300 <flatcc_json_parser_struct_as_root@@Base+0x7b0>
   4c9b4:	ldr	r3, [pc, #60]	; 4c9f8 <flatcc_json_printer_struct_field@@Base+0x260>
   4c9b8:	add	r3, pc, r3
   4c9bc:	movw	r2, #1028	; 0x404
   4c9c0:	ldr	r1, [pc, #52]	; 4c9fc <flatcc_json_printer_struct_field@@Base+0x264>
   4c9c4:	add	r1, pc, r1
   4c9c8:	ldr	r0, [pc, #48]	; 4ca00 <flatcc_json_printer_struct_field@@Base+0x268>
   4c9cc:	add	r0, pc, r0
   4c9d0:	bl	145e8 <__assert_fail@plt>
   4c9d4:	mov	r3, #1
   4c9d8:	mov	r0, r3
   4c9dc:	sub	sp, fp, #4
   4c9e0:	ldr	fp, [sp]
   4c9e4:	add	sp, sp, #4
   4c9e8:	pop	{pc}		; (ldr pc, [sp], #4)
   4c9ec:	ldrdeq	r7, [r0], -r4
   4c9f0:	strdeq	r7, [r0], -ip
   4c9f4:	andeq	r7, r0, r4, lsl #3
   4c9f8:	andeq	r7, r0, r4, asr #12
   4c9fc:	andeq	r7, r0, ip, rrx
   4ca00:	andeq	r7, r0, r4, lsl r1

0004ca04 <flatcc_json_printer_struct_as_root@@Base>:
   4ca04:	str	fp, [sp, #-8]!
   4ca08:	str	lr, [sp, #4]
   4ca0c:	add	fp, sp, #4
   4ca10:	sub	sp, sp, #16
   4ca14:	str	r0, [fp, #-8]
   4ca18:	str	r1, [fp, #-12]
   4ca1c:	str	r2, [fp, #-16]
   4ca20:	str	r3, [fp, #-20]	; 0xffffffec
   4ca24:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ca28:	ldr	r2, [fp, #-16]
   4ca2c:	ldr	r1, [fp, #-12]
   4ca30:	ldr	r0, [fp, #-8]
   4ca34:	bl	4c8d8 <flatcc_json_printer_struct_field@@Base+0x140>
   4ca38:	mov	r3, r0
   4ca3c:	cmp	r3, #0
   4ca40:	bne	4ca4c <flatcc_json_printer_struct_as_root@@Base+0x48>
   4ca44:	mvn	r3, #0
   4ca48:	b	4cb88 <flatcc_json_printer_struct_as_root@@Base+0x184>
   4ca4c:	ldr	r3, [fp, #-8]
   4ca50:	ldr	r3, [r3, #32]
   4ca54:	add	r2, r3, #1
   4ca58:	ldr	r3, [fp, #-8]
   4ca5c:	str	r2, [r3, #32]
   4ca60:	ldr	r3, [fp, #-8]
   4ca64:	ldr	r3, [r3, #20]
   4ca68:	add	r1, r3, #1
   4ca6c:	ldr	r2, [fp, #-8]
   4ca70:	str	r1, [r2, #20]
   4ca74:	mov	r2, #123	; 0x7b
   4ca78:	strb	r2, [r3]
   4ca7c:	ldr	r0, [fp, #-12]
   4ca80:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4ca84:	mov	r2, r0
   4ca88:	ldr	r3, [fp, #4]
   4ca8c:	mov	r1, r2
   4ca90:	ldr	r0, [fp, #-8]
   4ca94:	blx	r3
   4ca98:	ldr	r3, [fp, #-8]
   4ca9c:	ldrb	r3, [r3, #25]
   4caa0:	cmp	r3, #0
   4caa4:	beq	4cae0 <flatcc_json_printer_struct_as_root@@Base+0xdc>
   4caa8:	ldr	r3, [fp, #-8]
   4caac:	ldr	r3, [r3, #20]
   4cab0:	add	r1, r3, #1
   4cab4:	ldr	r2, [fp, #-8]
   4cab8:	str	r1, [r2, #20]
   4cabc:	mov	r2, #10
   4cac0:	strb	r2, [r3]
   4cac4:	ldr	r3, [fp, #-8]
   4cac8:	ldr	r3, [r3, #32]
   4cacc:	sub	r2, r3, #1
   4cad0:	ldr	r3, [fp, #-8]
   4cad4:	str	r2, [r3, #32]
   4cad8:	ldr	r0, [fp, #-8]
   4cadc:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4cae0:	ldr	r3, [fp, #-8]
   4cae4:	ldr	r3, [r3, #20]
   4cae8:	add	r1, r3, #1
   4caec:	ldr	r2, [fp, #-8]
   4caf0:	str	r1, [r2, #20]
   4caf4:	mov	r2, #125	; 0x7d
   4caf8:	strb	r2, [r3]
   4cafc:	ldr	r3, [fp, #-8]
   4cb00:	ldrb	r3, [r3, #25]
   4cb04:	cmp	r3, #0
   4cb08:	beq	4cb38 <flatcc_json_printer_struct_as_root@@Base+0x134>
   4cb0c:	ldr	r3, [fp, #-8]
   4cb10:	ldr	r3, [r3, #32]
   4cb14:	cmp	r3, #0
   4cb18:	bne	4cb38 <flatcc_json_printer_struct_as_root@@Base+0x134>
   4cb1c:	ldr	r3, [fp, #-8]
   4cb20:	ldr	r3, [r3, #20]
   4cb24:	add	r1, r3, #1
   4cb28:	ldr	r2, [fp, #-8]
   4cb2c:	str	r1, [r2, #20]
   4cb30:	mov	r2, #10
   4cb34:	strb	r2, [r3]
   4cb38:	ldr	r3, [fp, #-8]
   4cb3c:	ldr	r3, [r3, #44]	; 0x2c
   4cb40:	mov	r1, #1
   4cb44:	ldr	r0, [fp, #-8]
   4cb48:	blx	r3
   4cb4c:	ldr	r0, [fp, #-8]
   4cb50:	bl	3f340 <flatcc_json_parser_struct_as_root@@Base+0x7f0>
   4cb54:	mov	r3, r0
   4cb58:	cmp	r3, #0
   4cb5c:	bne	4cb84 <flatcc_json_printer_struct_as_root@@Base+0x180>
   4cb60:	ldr	r3, [fp, #-8]
   4cb64:	ldr	r3, [r3, #12]
   4cb68:	ldr	r2, [fp, #-8]
   4cb6c:	ldr	r1, [r2, #20]
   4cb70:	ldr	r2, [fp, #-8]
   4cb74:	ldr	r2, [r2]
   4cb78:	sub	r2, r1, r2
   4cb7c:	add	r3, r3, r2
   4cb80:	b	4cb88 <flatcc_json_printer_struct_as_root@@Base+0x184>
   4cb84:	mvn	r3, #0
   4cb88:	mov	r0, r3
   4cb8c:	sub	sp, fp, #4
   4cb90:	ldr	fp, [sp]
   4cb94:	add	sp, sp, #4
   4cb98:	pop	{pc}		; (ldr pc, [sp], #4)

0004cb9c <flatcc_json_printer_table_as_root@@Base>:
   4cb9c:	str	fp, [sp, #-8]!
   4cba0:	str	lr, [sp, #4]
   4cba4:	add	fp, sp, #4
   4cba8:	sub	sp, sp, #16
   4cbac:	str	r0, [fp, #-8]
   4cbb0:	str	r1, [fp, #-12]
   4cbb4:	str	r2, [fp, #-16]
   4cbb8:	str	r3, [fp, #-20]	; 0xffffffec
   4cbbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cbc0:	ldr	r2, [fp, #-16]
   4cbc4:	ldr	r1, [fp, #-12]
   4cbc8:	ldr	r0, [fp, #-8]
   4cbcc:	bl	4c8d8 <flatcc_json_printer_struct_field@@Base+0x140>
   4cbd0:	mov	r3, r0
   4cbd4:	cmp	r3, #0
   4cbd8:	bne	4cbe4 <flatcc_json_printer_table_as_root@@Base+0x48>
   4cbdc:	mvn	r3, #0
   4cbe0:	b	4cc8c <flatcc_json_printer_table_as_root@@Base+0xf0>
   4cbe4:	ldr	r0, [fp, #-12]
   4cbe8:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4cbec:	mov	r1, r0
   4cbf0:	ldr	r3, [fp, #4]
   4cbf4:	mov	r2, #100	; 0x64
   4cbf8:	ldr	r0, [fp, #-8]
   4cbfc:	bl	45104 <flatcc_json_printer_enum_flag@@Base+0xd4>
   4cc00:	ldr	r3, [fp, #-8]
   4cc04:	ldrb	r3, [r3, #25]
   4cc08:	cmp	r3, #0
   4cc0c:	beq	4cc3c <flatcc_json_printer_table_as_root@@Base+0xa0>
   4cc10:	ldr	r3, [fp, #-8]
   4cc14:	ldr	r3, [r3, #32]
   4cc18:	cmp	r3, #0
   4cc1c:	bne	4cc3c <flatcc_json_printer_table_as_root@@Base+0xa0>
   4cc20:	ldr	r3, [fp, #-8]
   4cc24:	ldr	r3, [r3, #20]
   4cc28:	add	r1, r3, #1
   4cc2c:	ldr	r2, [fp, #-8]
   4cc30:	str	r1, [r2, #20]
   4cc34:	mov	r2, #10
   4cc38:	strb	r2, [r3]
   4cc3c:	ldr	r3, [fp, #-8]
   4cc40:	ldr	r3, [r3, #44]	; 0x2c
   4cc44:	mov	r1, #1
   4cc48:	ldr	r0, [fp, #-8]
   4cc4c:	blx	r3
   4cc50:	ldr	r0, [fp, #-8]
   4cc54:	bl	3f340 <flatcc_json_parser_struct_as_root@@Base+0x7f0>
   4cc58:	mov	r3, r0
   4cc5c:	cmp	r3, #0
   4cc60:	bne	4cc88 <flatcc_json_printer_table_as_root@@Base+0xec>
   4cc64:	ldr	r3, [fp, #-8]
   4cc68:	ldr	r3, [r3, #12]
   4cc6c:	ldr	r2, [fp, #-8]
   4cc70:	ldr	r1, [r2, #20]
   4cc74:	ldr	r2, [fp, #-8]
   4cc78:	ldr	r2, [r2]
   4cc7c:	sub	r2, r1, r2
   4cc80:	add	r3, r3, r2
   4cc84:	b	4cc8c <flatcc_json_printer_table_as_root@@Base+0xf0>
   4cc88:	mvn	r3, #0
   4cc8c:	mov	r0, r3
   4cc90:	sub	sp, fp, #4
   4cc94:	ldr	fp, [sp]
   4cc98:	add	sp, sp, #4
   4cc9c:	pop	{pc}		; (ldr pc, [sp], #4)

0004cca0 <flatcc_json_printer_struct_as_nested_root@@Base>:
   4cca0:	str	fp, [sp, #-8]!
   4cca4:	str	lr, [sp, #4]
   4cca8:	add	fp, sp, #4
   4ccac:	sub	sp, sp, #24
   4ccb0:	str	r0, [fp, #-16]
   4ccb4:	str	r1, [fp, #-20]	; 0xffffffec
   4ccb8:	str	r2, [fp, #-24]	; 0xffffffe8
   4ccbc:	str	r3, [fp, #-28]	; 0xffffffe4
   4ccc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ccc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ccc8:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4cccc:	str	r0, [fp, #-8]
   4ccd0:	ldr	r3, [fp, #-8]
   4ccd4:	cmp	r3, #0
   4ccd8:	beq	4ce20 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   4ccdc:	ldr	r0, [fp, #-8]
   4cce0:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4cce4:	mov	r2, r0
   4cce8:	ldr	r3, [fp, #-8]
   4ccec:	add	r3, r2, r3
   4ccf0:	str	r3, [fp, #-8]
   4ccf4:	ldr	r0, [fp, #-8]
   4ccf8:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4ccfc:	str	r0, [fp, #-12]
   4cd00:	ldr	r3, [fp, #8]
   4cd04:	ldr	r2, [fp, #-12]
   4cd08:	ldr	r1, [fp, #-8]
   4cd0c:	ldr	r0, [fp, #-16]
   4cd10:	bl	4c8d8 <flatcc_json_printer_struct_field@@Base+0x140>
   4cd14:	mov	r3, r0
   4cd18:	cmp	r3, #0
   4cd1c:	beq	4ce28 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   4cd20:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cd24:	ldr	r3, [r3, #16]
   4cd28:	add	r1, r3, #1
   4cd2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   4cd30:	str	r1, [r2, #16]
   4cd34:	cmp	r3, #0
   4cd38:	beq	4cd58 <flatcc_json_printer_struct_as_nested_root@@Base+0xb8>
   4cd3c:	ldr	r3, [fp, #-16]
   4cd40:	ldr	r3, [r3, #20]
   4cd44:	add	r1, r3, #1
   4cd48:	ldr	r2, [fp, #-16]
   4cd4c:	str	r1, [r2, #20]
   4cd50:	mov	r2, #44	; 0x2c
   4cd54:	strb	r2, [r3]
   4cd58:	ldr	r3, [fp, #4]
   4cd5c:	mov	r2, r3
   4cd60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4cd64:	ldr	r0, [fp, #-16]
   4cd68:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4cd6c:	ldr	r3, [fp, #-16]
   4cd70:	ldr	r3, [r3, #32]
   4cd74:	add	r2, r3, #1
   4cd78:	ldr	r3, [fp, #-16]
   4cd7c:	str	r2, [r3, #32]
   4cd80:	ldr	r3, [fp, #-16]
   4cd84:	ldr	r3, [r3, #20]
   4cd88:	add	r1, r3, #1
   4cd8c:	ldr	r2, [fp, #-16]
   4cd90:	str	r1, [r2, #20]
   4cd94:	mov	r2, #123	; 0x7b
   4cd98:	strb	r2, [r3]
   4cd9c:	ldr	r0, [fp, #-8]
   4cda0:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4cda4:	mov	r2, r0
   4cda8:	ldr	r3, [fp, #12]
   4cdac:	mov	r1, r2
   4cdb0:	ldr	r0, [fp, #-16]
   4cdb4:	blx	r3
   4cdb8:	ldr	r3, [fp, #-16]
   4cdbc:	ldrb	r3, [r3, #25]
   4cdc0:	cmp	r3, #0
   4cdc4:	beq	4ce00 <flatcc_json_printer_struct_as_nested_root@@Base+0x160>
   4cdc8:	ldr	r3, [fp, #-16]
   4cdcc:	ldr	r3, [r3, #20]
   4cdd0:	add	r1, r3, #1
   4cdd4:	ldr	r2, [fp, #-16]
   4cdd8:	str	r1, [r2, #20]
   4cddc:	mov	r2, #10
   4cde0:	strb	r2, [r3]
   4cde4:	ldr	r3, [fp, #-16]
   4cde8:	ldr	r3, [r3, #32]
   4cdec:	sub	r2, r3, #1
   4cdf0:	ldr	r3, [fp, #-16]
   4cdf4:	str	r2, [r3, #32]
   4cdf8:	ldr	r0, [fp, #-16]
   4cdfc:	bl	447ac <flatcc_json_printer_fmt_bool@@Base+0x910>
   4ce00:	ldr	r3, [fp, #-16]
   4ce04:	ldr	r3, [r3, #20]
   4ce08:	add	r1, r3, #1
   4ce0c:	ldr	r2, [fp, #-16]
   4ce10:	str	r1, [r2, #20]
   4ce14:	mov	r2, #125	; 0x7d
   4ce18:	strb	r2, [r3]
   4ce1c:	b	4ce2c <flatcc_json_printer_struct_as_nested_root@@Base+0x18c>
   4ce20:	nop	{0}
   4ce24:	b	4ce2c <flatcc_json_printer_struct_as_nested_root@@Base+0x18c>
   4ce28:	nop	{0}
   4ce2c:	sub	sp, fp, #4
   4ce30:	ldr	fp, [sp]
   4ce34:	add	sp, sp, #4
   4ce38:	pop	{pc}		; (ldr pc, [sp], #4)

0004ce3c <flatcc_json_printer_table_as_nested_root@@Base>:
   4ce3c:	str	fp, [sp, #-8]!
   4ce40:	str	lr, [sp, #4]
   4ce44:	add	fp, sp, #4
   4ce48:	sub	sp, sp, #24
   4ce4c:	str	r0, [fp, #-16]
   4ce50:	str	r1, [fp, #-20]	; 0xffffffec
   4ce54:	str	r2, [fp, #-24]	; 0xffffffe8
   4ce58:	str	r3, [fp, #-28]	; 0xffffffe4
   4ce5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ce60:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ce64:	bl	43d80 <flatcc_json_printer_error_string@@Base+0x10c>
   4ce68:	str	r0, [fp, #-8]
   4ce6c:	ldr	r3, [fp, #-8]
   4ce70:	cmp	r3, #0
   4ce74:	beq	4cf38 <flatcc_json_printer_table_as_nested_root@@Base+0xfc>
   4ce78:	ldr	r0, [fp, #-8]
   4ce7c:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4ce80:	mov	r2, r0
   4ce84:	ldr	r3, [fp, #-8]
   4ce88:	add	r3, r2, r3
   4ce8c:	str	r3, [fp, #-8]
   4ce90:	ldr	r0, [fp, #-8]
   4ce94:	bl	3f118 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   4ce98:	str	r0, [fp, #-12]
   4ce9c:	ldr	r3, [fp, #-8]
   4cea0:	add	r3, r3, #4
   4cea4:	str	r3, [fp, #-8]
   4cea8:	ldr	r3, [fp, #8]
   4ceac:	ldr	r2, [fp, #-12]
   4ceb0:	ldr	r1, [fp, #-8]
   4ceb4:	ldr	r0, [fp, #-16]
   4ceb8:	bl	4c8d8 <flatcc_json_printer_struct_field@@Base+0x140>
   4cebc:	mov	r3, r0
   4cec0:	cmp	r3, #0
   4cec4:	beq	4cf40 <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   4cec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cecc:	ldr	r3, [r3, #16]
   4ced0:	add	r1, r3, #1
   4ced4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4ced8:	str	r1, [r2, #16]
   4cedc:	cmp	r3, #0
   4cee0:	beq	4cf00 <flatcc_json_printer_table_as_nested_root@@Base+0xc4>
   4cee4:	ldr	r3, [fp, #-16]
   4cee8:	ldr	r3, [r3, #20]
   4ceec:	add	r1, r3, #1
   4cef0:	ldr	r2, [fp, #-16]
   4cef4:	str	r1, [r2, #20]
   4cef8:	mov	r2, #44	; 0x2c
   4cefc:	strb	r2, [r3]
   4cf00:	ldr	r3, [fp, #4]
   4cf04:	mov	r2, r3
   4cf08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4cf0c:	ldr	r0, [fp, #-16]
   4cf10:	bl	44b04 <flatcc_json_printer_get_level@@Base+0x134>
   4cf14:	ldr	r0, [fp, #-8]
   4cf18:	bl	43d00 <flatcc_json_printer_error_string@@Base+0x8c>
   4cf1c:	mov	r1, r0
   4cf20:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cf24:	ldr	r2, [r3, #12]
   4cf28:	ldr	r3, [fp, #12]
   4cf2c:	ldr	r0, [fp, #-16]
   4cf30:	bl	45104 <flatcc_json_printer_enum_flag@@Base+0xd4>
   4cf34:	b	4cf44 <flatcc_json_printer_table_as_nested_root@@Base+0x108>
   4cf38:	nop	{0}
   4cf3c:	b	4cf44 <flatcc_json_printer_table_as_nested_root@@Base+0x108>
   4cf40:	nop	{0}
   4cf44:	sub	sp, fp, #4
   4cf48:	ldr	fp, [sp]
   4cf4c:	add	sp, sp, #4
   4cf50:	pop	{pc}		; (ldr pc, [sp], #4)
   4cf54:	str	fp, [sp, #-8]!
   4cf58:	str	lr, [sp, #4]
   4cf5c:	add	fp, sp, #4
   4cf60:	sub	sp, sp, #16
   4cf64:	str	r0, [fp, #-16]
   4cf68:	str	r1, [fp, #-20]	; 0xffffffec
   4cf6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cf70:	cmp	r3, #0
   4cf74:	bne	4d028 <flatcc_json_printer_table_as_nested_root@@Base+0x1ec>
   4cf78:	ldr	r3, [fp, #-16]
   4cf7c:	ldr	r2, [r3, #20]
   4cf80:	ldr	r3, [fp, #-16]
   4cf84:	ldr	r3, [r3, #16]
   4cf88:	cmp	r2, r3
   4cf8c:	bcc	4d028 <flatcc_json_printer_table_as_nested_root@@Base+0x1ec>
   4cf90:	ldr	r3, [fp, #-16]
   4cf94:	ldr	r2, [r3, #20]
   4cf98:	ldr	r3, [fp, #-16]
   4cf9c:	ldr	r3, [r3, #16]
   4cfa0:	sub	r3, r2, r3
   4cfa4:	str	r3, [fp, #-8]
   4cfa8:	ldr	r3, [fp, #-16]
   4cfac:	ldr	r0, [r3]
   4cfb0:	ldr	r3, [fp, #-16]
   4cfb4:	ldr	r1, [r3, #8]
   4cfb8:	ldr	r3, [fp, #-16]
   4cfbc:	ldr	r3, [r3, #40]	; 0x28
   4cfc0:	mov	r2, #1
   4cfc4:	bl	14540 <fwrite@plt>
   4cfc8:	ldr	r3, [fp, #-16]
   4cfcc:	ldr	r0, [r3]
   4cfd0:	ldr	r3, [fp, #-16]
   4cfd4:	ldr	r2, [r3]
   4cfd8:	ldr	r3, [fp, #-16]
   4cfdc:	ldr	r3, [r3, #8]
   4cfe0:	add	r3, r2, r3
   4cfe4:	ldr	r2, [fp, #-8]
   4cfe8:	mov	r1, r3
   4cfec:	bl	1451c <memcpy@plt>
   4cff0:	ldr	r3, [fp, #-16]
   4cff4:	ldr	r2, [r3]
   4cff8:	ldr	r3, [fp, #-8]
   4cffc:	add	r2, r2, r3
   4d000:	ldr	r3, [fp, #-16]
   4d004:	str	r2, [r3, #20]
   4d008:	ldr	r3, [fp, #-16]
   4d00c:	ldr	r2, [r3, #12]
   4d010:	ldr	r3, [fp, #-16]
   4d014:	ldr	r3, [r3, #8]
   4d018:	add	r2, r2, r3
   4d01c:	ldr	r3, [fp, #-16]
   4d020:	str	r2, [r3, #12]
   4d024:	b	4d084 <flatcc_json_printer_table_as_nested_root@@Base+0x248>
   4d028:	ldr	r3, [fp, #-16]
   4d02c:	ldr	r2, [r3, #20]
   4d030:	ldr	r3, [fp, #-16]
   4d034:	ldr	r3, [r3]
   4d038:	sub	r3, r2, r3
   4d03c:	str	r3, [fp, #-12]
   4d040:	ldr	r3, [fp, #-16]
   4d044:	ldr	r0, [r3]
   4d048:	ldr	r3, [fp, #-16]
   4d04c:	ldr	r3, [r3, #40]	; 0x28
   4d050:	mov	r2, #1
   4d054:	ldr	r1, [fp, #-12]
   4d058:	bl	14540 <fwrite@plt>
   4d05c:	ldr	r3, [fp, #-16]
   4d060:	ldr	r2, [r3]
   4d064:	ldr	r3, [fp, #-16]
   4d068:	str	r2, [r3, #20]
   4d06c:	ldr	r3, [fp, #-16]
   4d070:	ldr	r2, [r3, #12]
   4d074:	ldr	r3, [fp, #-12]
   4d078:	add	r2, r2, r3
   4d07c:	ldr	r3, [fp, #-16]
   4d080:	str	r2, [r3, #12]
   4d084:	ldr	r3, [fp, #-16]
   4d088:	ldr	r3, [r3, #20]
   4d08c:	mov	r2, #0
   4d090:	strb	r2, [r3]
   4d094:	nop	{0}
   4d098:	sub	sp, fp, #4
   4d09c:	ldr	fp, [sp]
   4d0a0:	add	sp, sp, #4
   4d0a4:	pop	{pc}		; (ldr pc, [sp], #4)

0004d0a8 <flatcc_json_printer_init@@Base>:
   4d0a8:	str	r4, [sp, #-12]!
   4d0ac:	str	fp, [sp, #4]
   4d0b0:	str	lr, [sp, #8]
   4d0b4:	add	fp, sp, #8
   4d0b8:	sub	sp, sp, #12
   4d0bc:	str	r0, [fp, #-16]
   4d0c0:	str	r1, [fp, #-20]	; 0xffffffec
   4d0c4:	ldr	r4, [pc, #288]	; 4d1ec <flatcc_json_printer_init@@Base+0x144>
   4d0c8:	add	r4, pc, r4
   4d0cc:	mov	r2, #48	; 0x30
   4d0d0:	mov	r1, #0
   4d0d4:	ldr	r0, [fp, #-16]
   4d0d8:	bl	14594 <memset@plt>
   4d0dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4d0e0:	cmp	r3, #0
   4d0e4:	beq	4d0f0 <flatcc_json_printer_init@@Base+0x48>
   4d0e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4d0ec:	b	4d0fc <flatcc_json_printer_init@@Base+0x54>
   4d0f0:	ldr	r3, [pc, #248]	; 4d1f0 <flatcc_json_printer_init@@Base+0x148>
   4d0f4:	ldr	r3, [r4, r3]
   4d0f8:	ldr	r3, [r3]
   4d0fc:	ldr	r2, [fp, #-16]
   4d100:	str	r3, [r2, #40]	; 0x28
   4d104:	ldr	r3, [fp, #-16]
   4d108:	ldr	r2, [pc, #228]	; 4d1f4 <flatcc_json_printer_init@@Base+0x14c>
   4d10c:	add	r2, pc, r2
   4d110:	str	r2, [r3, #44]	; 0x2c
   4d114:	movw	r0, #16448	; 0x4040
   4d118:	bl	1454c <malloc@plt>
   4d11c:	mov	r3, r0
   4d120:	mov	r2, r3
   4d124:	ldr	r3, [fp, #-16]
   4d128:	str	r2, [r3]
   4d12c:	ldr	r3, [fp, #-16]
   4d130:	ldr	r3, [r3]
   4d134:	cmp	r3, #0
   4d138:	bne	4d144 <flatcc_json_printer_init@@Base+0x9c>
   4d13c:	mvn	r3, #0
   4d140:	b	4d1d4 <flatcc_json_printer_init@@Base+0x12c>
   4d144:	ldr	r3, [fp, #-16]
   4d148:	mov	r2, #1
   4d14c:	strb	r2, [r3, #24]
   4d150:	ldr	r3, [fp, #-16]
   4d154:	movw	r2, #16448	; 0x4040
   4d158:	str	r2, [r3, #4]
   4d15c:	ldr	r3, [fp, #-16]
   4d160:	mov	r2, #16384	; 0x4000
   4d164:	str	r2, [r3, #8]
   4d168:	ldr	r3, [fp, #-16]
   4d16c:	ldr	r2, [r3]
   4d170:	ldr	r3, [fp, #-16]
   4d174:	str	r2, [r3, #20]
   4d178:	ldr	r3, [fp, #-16]
   4d17c:	ldr	r2, [r3]
   4d180:	ldr	r3, [fp, #-16]
   4d184:	ldr	r3, [r3, #8]
   4d188:	add	r2, r2, r3
   4d18c:	ldr	r3, [fp, #-16]
   4d190:	str	r2, [r3, #16]
   4d194:	ldr	r3, [fp, #-16]
   4d198:	ldr	r3, [r3, #8]
   4d19c:	add	r2, r3, #64	; 0x40
   4d1a0:	ldr	r3, [fp, #-16]
   4d1a4:	ldr	r3, [r3, #4]
   4d1a8:	cmp	r2, r3
   4d1ac:	bls	4d1d0 <flatcc_json_printer_init@@Base+0x128>
   4d1b0:	ldr	r3, [pc, #64]	; 4d1f8 <flatcc_json_printer_init@@Base+0x150>
   4d1b4:	add	r3, pc, r3
   4d1b8:	movw	r2, #1147	; 0x47b
   4d1bc:	ldr	r1, [pc, #56]	; 4d1fc <flatcc_json_printer_init@@Base+0x154>
   4d1c0:	add	r1, pc, r1
   4d1c4:	ldr	r0, [pc, #52]	; 4d200 <flatcc_json_printer_init@@Base+0x158>
   4d1c8:	add	r0, pc, r0
   4d1cc:	bl	145e8 <__assert_fail@plt>
   4d1d0:	mov	r3, #0
   4d1d4:	mov	r0, r3
   4d1d8:	sub	sp, fp, #8
   4d1dc:	ldr	r4, [sp]
   4d1e0:	ldr	fp, [sp, #4]
   4d1e4:	add	sp, sp, #8
   4d1e8:	pop	{pc}		; (ldr pc, [sp], #4)
   4d1ec:	andeq	r7, r1, r0, lsr pc
   4d1f0:	andeq	r0, r0, r4, ror r0
   4d1f4:			; <UNDEFINED> instruction: 0xfffffe40
   4d1f8:	andeq	r6, r0, r8, asr lr
   4d1fc:	andeq	r6, r0, r0, ror r8
   4d200:	andeq	r6, r0, r4, lsr r9
   4d204:	str	fp, [sp, #-8]!
   4d208:	str	lr, [sp, #4]
   4d20c:	add	fp, sp, #4
   4d210:	sub	sp, sp, #8
   4d214:	str	r0, [fp, #-8]
   4d218:	str	r1, [fp, #-12]
   4d21c:	ldr	r3, [fp, #-8]
   4d220:	ldr	r2, [r3, #20]
   4d224:	ldr	r3, [fp, #-8]
   4d228:	ldr	r3, [r3, #16]
   4d22c:	cmp	r2, r3
   4d230:	bcc	4d278 <flatcc_json_printer_init@@Base+0x1d0>
   4d234:	mov	r1, #3
   4d238:	ldr	r0, [fp, #-8]
   4d23c:	bl	3f300 <flatcc_json_parser_struct_as_root@@Base+0x7b0>
   4d240:	ldr	r3, [fp, #-8]
   4d244:	ldr	r3, [r3, #12]
   4d248:	ldr	r2, [fp, #-8]
   4d24c:	ldr	r1, [r2, #20]
   4d250:	ldr	r2, [fp, #-8]
   4d254:	ldr	r2, [r2]
   4d258:	sub	r2, r1, r2
   4d25c:	add	r2, r3, r2
   4d260:	ldr	r3, [fp, #-8]
   4d264:	str	r2, [r3, #12]
   4d268:	ldr	r3, [fp, #-8]
   4d26c:	ldr	r2, [r3]
   4d270:	ldr	r3, [fp, #-8]
   4d274:	str	r2, [r3, #20]
   4d278:	ldr	r3, [fp, #-8]
   4d27c:	ldr	r3, [r3, #20]
   4d280:	mov	r2, #0
   4d284:	strb	r2, [r3]
   4d288:	nop	{0}
   4d28c:	sub	sp, fp, #4
   4d290:	ldr	fp, [sp]
   4d294:	add	sp, sp, #4
   4d298:	pop	{pc}		; (ldr pc, [sp], #4)

0004d29c <flatcc_json_printer_init_buffer@@Base>:
   4d29c:	str	fp, [sp, #-8]!
   4d2a0:	str	lr, [sp, #4]
   4d2a4:	add	fp, sp, #4
   4d2a8:	sub	sp, sp, #16
   4d2ac:	str	r0, [fp, #-8]
   4d2b0:	str	r1, [fp, #-12]
   4d2b4:	str	r2, [fp, #-16]
   4d2b8:	ldr	r3, [fp, #-16]
   4d2bc:	cmp	r3, #63	; 0x3f
   4d2c0:	bhi	4d2e4 <flatcc_json_printer_init_buffer@@Base+0x48>
   4d2c4:	ldr	r3, [pc, #188]	; 4d388 <flatcc_json_printer_init_buffer@@Base+0xec>
   4d2c8:	add	r3, pc, r3
   4d2cc:	movw	r2, #1165	; 0x48d
   4d2d0:	ldr	r1, [pc, #180]	; 4d38c <flatcc_json_printer_init_buffer@@Base+0xf0>
   4d2d4:	add	r1, pc, r1
   4d2d8:	ldr	r0, [pc, #176]	; 4d390 <flatcc_json_printer_init_buffer@@Base+0xf4>
   4d2dc:	add	r0, pc, r0
   4d2e0:	bl	145e8 <__assert_fail@plt>
   4d2e4:	ldr	r3, [fp, #-16]
   4d2e8:	cmp	r3, #63	; 0x3f
   4d2ec:	bhi	4d2f8 <flatcc_json_printer_init_buffer@@Base+0x5c>
   4d2f0:	mvn	r3, #0
   4d2f4:	b	4d374 <flatcc_json_printer_init_buffer@@Base+0xd8>
   4d2f8:	mov	r2, #48	; 0x30
   4d2fc:	mov	r1, #0
   4d300:	ldr	r0, [fp, #-8]
   4d304:	bl	14594 <memset@plt>
   4d308:	ldr	r3, [fp, #-8]
   4d30c:	ldr	r2, [fp, #-12]
   4d310:	str	r2, [r3]
   4d314:	ldr	r3, [fp, #-8]
   4d318:	ldr	r2, [fp, #-16]
   4d31c:	str	r2, [r3, #4]
   4d320:	ldr	r3, [fp, #-8]
   4d324:	ldr	r3, [r3, #4]
   4d328:	sub	r2, r3, #64	; 0x40
   4d32c:	ldr	r3, [fp, #-8]
   4d330:	str	r2, [r3, #8]
   4d334:	ldr	r3, [fp, #-8]
   4d338:	ldr	r2, [r3]
   4d33c:	ldr	r3, [fp, #-8]
   4d340:	str	r2, [r3, #20]
   4d344:	ldr	r3, [fp, #-8]
   4d348:	ldr	r2, [r3]
   4d34c:	ldr	r3, [fp, #-8]
   4d350:	ldr	r3, [r3, #8]
   4d354:	add	r2, r2, r3
   4d358:	ldr	r3, [fp, #-8]
   4d35c:	str	r2, [r3, #16]
   4d360:	ldr	r3, [fp, #-8]
   4d364:	ldr	r2, [pc, #40]	; 4d394 <flatcc_json_printer_init_buffer@@Base+0xf8>
   4d368:	add	r2, pc, r2
   4d36c:	str	r2, [r3, #44]	; 0x2c
   4d370:	mov	r3, #0
   4d374:	mov	r0, r3
   4d378:	sub	sp, fp, #4
   4d37c:	ldr	fp, [sp]
   4d380:	add	sp, sp, #4
   4d384:	pop	{pc}		; (ldr pc, [sp], #4)
   4d388:	andeq	r6, r0, r0, ror #26
   4d38c:	andeq	r6, r0, ip, asr r7
   4d390:	andeq	r6, r0, ip, asr r8
   4d394:			; <UNDEFINED> instruction: 0xfffffe94
   4d398:	str	fp, [sp, #-8]!
   4d39c:	str	lr, [sp, #4]
   4d3a0:	add	fp, sp, #4
   4d3a4:	sub	sp, sp, #16
   4d3a8:	str	r0, [fp, #-16]
   4d3ac:	str	r1, [fp, #-20]	; 0xffffffec
   4d3b0:	ldr	r3, [fp, #-16]
   4d3b4:	ldr	r2, [r3, #20]
   4d3b8:	ldr	r3, [fp, #-16]
   4d3bc:	ldr	r3, [r3]
   4d3c0:	sub	r3, r2, r3
   4d3c4:	str	r3, [fp, #-8]
   4d3c8:	ldr	r3, [fp, #-16]
   4d3cc:	ldr	r3, [r3, #20]
   4d3d0:	mov	r2, #0
   4d3d4:	strb	r2, [r3]
   4d3d8:	ldr	r3, [fp, #-16]
   4d3dc:	ldr	r2, [r3, #20]
   4d3e0:	ldr	r3, [fp, #-16]
   4d3e4:	ldr	r3, [r3, #16]
   4d3e8:	cmp	r2, r3
   4d3ec:	bcc	4d4cc <flatcc_json_printer_init_buffer@@Base+0x230>
   4d3f0:	ldr	r3, [fp, #-16]
   4d3f4:	ldr	r2, [r3]
   4d3f8:	ldr	r3, [fp, #-16]
   4d3fc:	ldr	r3, [r3, #4]
   4d400:	lsl	r3, r3, #1
   4d404:	mov	r1, r3
   4d408:	mov	r0, r2
   4d40c:	bl	14534 <realloc@plt>
   4d410:	str	r0, [fp, #-12]
   4d414:	ldr	r3, [fp, #-12]
   4d418:	cmp	r3, #0
   4d41c:	bne	4d458 <flatcc_json_printer_init_buffer@@Base+0x1bc>
   4d420:	mov	r1, #3
   4d424:	ldr	r0, [fp, #-16]
   4d428:	bl	3f300 <flatcc_json_parser_struct_as_root@@Base+0x7b0>
   4d42c:	ldr	r3, [fp, #-16]
   4d430:	ldr	r2, [r3, #12]
   4d434:	ldr	r3, [fp, #-8]
   4d438:	add	r2, r2, r3
   4d43c:	ldr	r3, [fp, #-16]
   4d440:	str	r2, [r3, #12]
   4d444:	ldr	r3, [fp, #-16]
   4d448:	ldr	r2, [r3]
   4d44c:	ldr	r3, [fp, #-16]
   4d450:	str	r2, [r3, #20]
   4d454:	b	4d4b8 <flatcc_json_printer_init_buffer@@Base+0x21c>
   4d458:	ldr	r3, [fp, #-16]
   4d45c:	ldr	r3, [r3, #4]
   4d460:	lsl	r2, r3, #1
   4d464:	ldr	r3, [fp, #-16]
   4d468:	str	r2, [r3, #4]
   4d46c:	ldr	r3, [fp, #-16]
   4d470:	ldr	r3, [r3, #4]
   4d474:	sub	r2, r3, #64	; 0x40
   4d478:	ldr	r3, [fp, #-16]
   4d47c:	str	r2, [r3, #8]
   4d480:	ldr	r3, [fp, #-16]
   4d484:	ldr	r2, [fp, #-12]
   4d488:	str	r2, [r3]
   4d48c:	ldr	r2, [fp, #-12]
   4d490:	ldr	r3, [fp, #-8]
   4d494:	add	r2, r2, r3
   4d498:	ldr	r3, [fp, #-16]
   4d49c:	str	r2, [r3, #20]
   4d4a0:	ldr	r3, [fp, #-16]
   4d4a4:	ldr	r3, [r3, #8]
   4d4a8:	ldr	r2, [fp, #-12]
   4d4ac:	add	r2, r2, r3
   4d4b0:	ldr	r3, [fp, #-16]
   4d4b4:	str	r2, [r3, #16]
   4d4b8:	ldr	r3, [fp, #-16]
   4d4bc:	ldr	r3, [r3, #20]
   4d4c0:	mov	r2, #0
   4d4c4:	strb	r2, [r3]
   4d4c8:	b	4d4d0 <flatcc_json_printer_init_buffer@@Base+0x234>
   4d4cc:	nop	{0}
   4d4d0:	sub	sp, fp, #4
   4d4d4:	ldr	fp, [sp]
   4d4d8:	add	sp, sp, #4
   4d4dc:	pop	{pc}		; (ldr pc, [sp], #4)

0004d4e0 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   4d4e0:	str	fp, [sp, #-8]!
   4d4e4:	str	lr, [sp, #4]
   4d4e8:	add	fp, sp, #4
   4d4ec:	sub	sp, sp, #8
   4d4f0:	str	r0, [fp, #-8]
   4d4f4:	str	r1, [fp, #-12]
   4d4f8:	ldr	r3, [fp, #-12]
   4d4fc:	cmp	r3, #0
   4d500:	bne	4d50c <flatcc_json_printer_init_dynamic_buffer@@Base+0x2c>
   4d504:	mov	r3, #4096	; 0x1000
   4d508:	str	r3, [fp, #-12]
   4d50c:	ldr	r3, [fp, #-12]
   4d510:	cmp	r3, #63	; 0x3f
   4d514:	bhi	4d520 <flatcc_json_printer_init_dynamic_buffer@@Base+0x40>
   4d518:	mov	r3, #64	; 0x40
   4d51c:	str	r3, [fp, #-12]
   4d520:	mov	r2, #48	; 0x30
   4d524:	mov	r1, #0
   4d528:	ldr	r0, [fp, #-8]
   4d52c:	bl	14594 <memset@plt>
   4d530:	ldr	r0, [fp, #-12]
   4d534:	bl	1454c <malloc@plt>
   4d538:	mov	r3, r0
   4d53c:	mov	r2, r3
   4d540:	ldr	r3, [fp, #-8]
   4d544:	str	r2, [r3]
   4d548:	ldr	r3, [fp, #-8]
   4d54c:	mov	r2, #1
   4d550:	strb	r2, [r3, #24]
   4d554:	ldr	r3, [fp, #-8]
   4d558:	ldr	r2, [fp, #-12]
   4d55c:	str	r2, [r3, #4]
   4d560:	ldr	r3, [fp, #-8]
   4d564:	ldr	r3, [r3, #4]
   4d568:	sub	r2, r3, #64	; 0x40
   4d56c:	ldr	r3, [fp, #-8]
   4d570:	str	r2, [r3, #8]
   4d574:	ldr	r3, [fp, #-8]
   4d578:	ldr	r2, [r3]
   4d57c:	ldr	r3, [fp, #-8]
   4d580:	str	r2, [r3, #20]
   4d584:	ldr	r3, [fp, #-8]
   4d588:	ldr	r2, [r3]
   4d58c:	ldr	r3, [fp, #-8]
   4d590:	ldr	r3, [r3, #8]
   4d594:	add	r2, r2, r3
   4d598:	ldr	r3, [fp, #-8]
   4d59c:	str	r2, [r3, #16]
   4d5a0:	ldr	r3, [fp, #-8]
   4d5a4:	ldr	r2, [pc, #64]	; 4d5ec <flatcc_json_printer_init_dynamic_buffer@@Base+0x10c>
   4d5a8:	add	r2, pc, r2
   4d5ac:	str	r2, [r3, #44]	; 0x2c
   4d5b0:	ldr	r3, [fp, #-8]
   4d5b4:	ldr	r3, [r3]
   4d5b8:	cmp	r3, #0
   4d5bc:	bne	4d5d4 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   4d5c0:	mov	r1, #3
   4d5c4:	ldr	r0, [fp, #-8]
   4d5c8:	bl	3f300 <flatcc_json_parser_struct_as_root@@Base+0x7b0>
   4d5cc:	mvn	r3, #0
   4d5d0:	b	4d5d8 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   4d5d4:	mov	r3, #0
   4d5d8:	mov	r0, r3
   4d5dc:	sub	sp, fp, #4
   4d5e0:	ldr	fp, [sp]
   4d5e4:	add	sp, sp, #4
   4d5e8:	pop	{pc}		; (ldr pc, [sp], #4)
   4d5ec:			; <UNDEFINED> instruction: 0xfffffde8

0004d5f0 <flatcc_json_printer_get_buffer@@Base>:
   4d5f0:	str	fp, [sp, #-8]!
   4d5f4:	str	lr, [sp, #4]
   4d5f8:	add	fp, sp, #4
   4d5fc:	sub	sp, sp, #8
   4d600:	str	r0, [fp, #-8]
   4d604:	str	r1, [fp, #-12]
   4d608:	ldr	r3, [fp, #-8]
   4d60c:	ldr	r3, [r3, #44]	; 0x2c
   4d610:	mov	r1, #0
   4d614:	ldr	r0, [fp, #-8]
   4d618:	blx	r3
   4d61c:	ldr	r3, [fp, #-12]
   4d620:	cmp	r3, #0
   4d624:	beq	4d648 <flatcc_json_printer_get_buffer@@Base+0x58>
   4d628:	ldr	r3, [fp, #-8]
   4d62c:	ldr	r2, [r3, #20]
   4d630:	ldr	r3, [fp, #-8]
   4d634:	ldr	r3, [r3]
   4d638:	sub	r3, r2, r3
   4d63c:	mov	r2, r3
   4d640:	ldr	r3, [fp, #-12]
   4d644:	str	r2, [r3]
   4d648:	ldr	r3, [fp, #-8]
   4d64c:	ldr	r3, [r3]
   4d650:	mov	r0, r3
   4d654:	sub	sp, fp, #4
   4d658:	ldr	fp, [sp]
   4d65c:	add	sp, sp, #4
   4d660:	pop	{pc}		; (ldr pc, [sp], #4)

0004d664 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   4d664:	str	fp, [sp, #-8]!
   4d668:	str	lr, [sp, #4]
   4d66c:	add	fp, sp, #4
   4d670:	sub	sp, sp, #16
   4d674:	str	r0, [fp, #-16]
   4d678:	str	r1, [fp, #-20]	; 0xffffffec
   4d67c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d680:	ldr	r0, [fp, #-16]
   4d684:	bl	4d5f0 <flatcc_json_printer_get_buffer@@Base>
   4d688:	str	r0, [fp, #-8]
   4d68c:	mov	r2, #48	; 0x30
   4d690:	mov	r1, #0
   4d694:	ldr	r0, [fp, #-16]
   4d698:	bl	14594 <memset@plt>
   4d69c:	ldr	r3, [fp, #-8]
   4d6a0:	mov	r0, r3
   4d6a4:	sub	sp, fp, #4
   4d6a8:	ldr	fp, [sp]
   4d6ac:	add	sp, sp, #4
   4d6b0:	pop	{pc}		; (ldr pc, [sp], #4)

0004d6b4 <flatcc_json_printer_clear@@Base>:
   4d6b4:	str	fp, [sp, #-8]!
   4d6b8:	str	lr, [sp, #4]
   4d6bc:	add	fp, sp, #4
   4d6c0:	sub	sp, sp, #8
   4d6c4:	str	r0, [fp, #-8]
   4d6c8:	ldr	r3, [fp, #-8]
   4d6cc:	ldrb	r3, [r3, #24]
   4d6d0:	cmp	r3, #0
   4d6d4:	beq	4d6f8 <flatcc_json_printer_clear@@Base+0x44>
   4d6d8:	ldr	r3, [fp, #-8]
   4d6dc:	ldr	r3, [r3]
   4d6e0:	cmp	r3, #0
   4d6e4:	beq	4d6f8 <flatcc_json_printer_clear@@Base+0x44>
   4d6e8:	ldr	r3, [fp, #-8]
   4d6ec:	ldr	r3, [r3]
   4d6f0:	mov	r0, r3
   4d6f4:	bl	14510 <free@plt>
   4d6f8:	mov	r2, #48	; 0x30
   4d6fc:	mov	r1, #0
   4d700:	ldr	r0, [fp, #-8]
   4d704:	bl	14594 <memset@plt>
   4d708:	nop	{0}
   4d70c:	sub	sp, fp, #4
   4d710:	ldr	fp, [sp]
   4d714:	add	sp, sp, #4
   4d718:	pop	{pc}		; (ldr pc, [sp], #4)
   4d71c:	eor	r1, r1, #-2147483648	; 0x80000000
   4d720:	b	4d728 <flatcc_json_printer_clear@@Base+0x74>
   4d724:	eor	r3, r3, #-2147483648	; 0x80000000
   4d728:	push	{r4, r5, lr}
   4d72c:	lsl	r4, r1, #1
   4d730:	lsl	r5, r3, #1
   4d734:	teq	r4, r5
   4d738:	teqeq	r0, r2
   4d73c:	orrsne	ip, r4, r0
   4d740:	orrsne	ip, r5, r2
   4d744:	mvnsne	ip, r4, asr #21
   4d748:	mvnsne	ip, r5, asr #21
   4d74c:	beq	4d938 <flatcc_json_printer_clear@@Base+0x284>
   4d750:	lsr	r4, r4, #21
   4d754:	rsbs	r5, r4, r5, lsr #21
   4d758:	rsblt	r5, r5, #0
   4d75c:	ble	4d77c <flatcc_json_printer_clear@@Base+0xc8>
   4d760:	add	r4, r4, r5
   4d764:	eor	r2, r0, r2
   4d768:	eor	r3, r1, r3
   4d76c:	eor	r0, r2, r0
   4d770:	eor	r1, r3, r1
   4d774:	eor	r2, r0, r2
   4d778:	eor	r3, r1, r3
   4d77c:	cmp	r5, #54	; 0x36
   4d780:	pophi	{r4, r5, pc}
   4d784:	tst	r1, #-2147483648	; 0x80000000
   4d788:	lsl	r1, r1, #12
   4d78c:	mov	ip, #1048576	; 0x100000
   4d790:	orr	r1, ip, r1, lsr #12
   4d794:	beq	4d7a0 <flatcc_json_printer_clear@@Base+0xec>
   4d798:	rsbs	r0, r0, #0
   4d79c:	rsc	r1, r1, #0
   4d7a0:	tst	r3, #-2147483648	; 0x80000000
   4d7a4:	lsl	r3, r3, #12
   4d7a8:	orr	r3, ip, r3, lsr #12
   4d7ac:	beq	4d7b8 <flatcc_json_printer_clear@@Base+0x104>
   4d7b0:	rsbs	r2, r2, #0
   4d7b4:	rsc	r3, r3, #0
   4d7b8:	teq	r4, r5
   4d7bc:	beq	4d920 <flatcc_json_printer_clear@@Base+0x26c>
   4d7c0:	sub	r4, r4, #1
   4d7c4:	rsbs	lr, r5, #32
   4d7c8:	blt	4d7e4 <flatcc_json_printer_clear@@Base+0x130>
   4d7cc:	lsl	ip, r2, lr
   4d7d0:	adds	r0, r0, r2, lsr r5
   4d7d4:	adc	r1, r1, #0
   4d7d8:	adds	r0, r0, r3, lsl lr
   4d7dc:	adcs	r1, r1, r3, asr r5
   4d7e0:	b	4d800 <flatcc_json_printer_clear@@Base+0x14c>
   4d7e4:	sub	r5, r5, #32
   4d7e8:	add	lr, lr, #32
   4d7ec:	cmp	r2, #1
   4d7f0:	lsl	ip, r3, lr
   4d7f4:	orrcs	ip, ip, #2
   4d7f8:	adds	r0, r0, r3, asr r5
   4d7fc:	adcs	r1, r1, r3, asr #31
   4d800:	and	r5, r1, #-2147483648	; 0x80000000
   4d804:	bpl	4d814 <flatcc_json_printer_clear@@Base+0x160>
   4d808:	rsbs	ip, ip, #0
   4d80c:	rscs	r0, r0, #0
   4d810:	rsc	r1, r1, #0
   4d814:	cmp	r1, #1048576	; 0x100000
   4d818:	bcc	4d858 <flatcc_json_printer_clear@@Base+0x1a4>
   4d81c:	cmp	r1, #2097152	; 0x200000
   4d820:	bcc	4d840 <flatcc_json_printer_clear@@Base+0x18c>
   4d824:	lsrs	r1, r1, #1
   4d828:	rrxs	r0, r0
   4d82c:	rrx	ip, ip
   4d830:	add	r4, r4, #1
   4d834:	lsl	r2, r4, #21
   4d838:	cmn	r2, #4194304	; 0x400000
   4d83c:	bcs	4d998 <flatcc_json_printer_clear@@Base+0x2e4>
   4d840:	cmp	ip, #-2147483648	; 0x80000000
   4d844:	lsrseq	ip, r0, #1
   4d848:	adcs	r0, r0, #0
   4d84c:	adc	r1, r1, r4, lsl #20
   4d850:	orr	r1, r1, r5
   4d854:	pop	{r4, r5, pc}
   4d858:	lsls	ip, ip, #1
   4d85c:	adcs	r0, r0, r0
   4d860:	adc	r1, r1, r1
   4d864:	tst	r1, #1048576	; 0x100000
   4d868:	sub	r4, r4, #1
   4d86c:	bne	4d840 <flatcc_json_printer_clear@@Base+0x18c>
   4d870:	teq	r1, #0
   4d874:	moveq	r1, r0
   4d878:	moveq	r0, #0
   4d87c:	clz	r3, r1
   4d880:	addeq	r3, r3, #32
   4d884:	sub	r3, r3, #11
   4d888:	subs	r2, r3, #32
   4d88c:	bge	4d8b0 <flatcc_json_printer_clear@@Base+0x1fc>
   4d890:	adds	r2, r2, #12
   4d894:	ble	4d8ac <flatcc_json_printer_clear@@Base+0x1f8>
   4d898:	add	ip, r2, #20
   4d89c:	rsb	r2, r2, #12
   4d8a0:	lsl	r0, r1, ip
   4d8a4:	lsr	r1, r1, r2
   4d8a8:	b	4d8c0 <flatcc_json_printer_clear@@Base+0x20c>
   4d8ac:	add	r2, r2, #20
   4d8b0:	rsble	ip, r2, #32
   4d8b4:	lsl	r1, r1, r2
   4d8b8:	orrle	r1, r1, r0, lsr ip
   4d8bc:	lslle	r0, r0, r2
   4d8c0:	subs	r4, r4, r3
   4d8c4:	addge	r1, r1, r4, lsl #20
   4d8c8:	orrge	r1, r1, r5
   4d8cc:	popge	{r4, r5, pc}
   4d8d0:	mvn	r4, r4
   4d8d4:	subs	r4, r4, #31
   4d8d8:	bge	4d914 <flatcc_json_printer_clear@@Base+0x260>
   4d8dc:	adds	r4, r4, #12
   4d8e0:	bgt	4d8fc <flatcc_json_printer_clear@@Base+0x248>
   4d8e4:	add	r4, r4, #20
   4d8e8:	rsb	r2, r4, #32
   4d8ec:	lsr	r0, r0, r4
   4d8f0:	orr	r0, r0, r1, lsl r2
   4d8f4:	orr	r1, r5, r1, lsr r4
   4d8f8:	pop	{r4, r5, pc}
   4d8fc:	rsb	r4, r4, #12
   4d900:	rsb	r2, r4, #32
   4d904:	lsr	r0, r0, r2
   4d908:	orr	r0, r0, r1, lsl r4
   4d90c:	mov	r1, r5
   4d910:	pop	{r4, r5, pc}
   4d914:	lsr	r0, r1, r4
   4d918:	mov	r1, r5
   4d91c:	pop	{r4, r5, pc}
   4d920:	teq	r4, #0
   4d924:	eor	r3, r3, #1048576	; 0x100000
   4d928:	eoreq	r1, r1, #1048576	; 0x100000
   4d92c:	addeq	r4, r4, #1
   4d930:	subne	r5, r5, #1
   4d934:	b	4d7c0 <flatcc_json_printer_clear@@Base+0x10c>
   4d938:	mvns	ip, r4, asr #21
   4d93c:	mvnsne	ip, r5, asr #21
   4d940:	beq	4d9a8 <flatcc_json_printer_clear@@Base+0x2f4>
   4d944:	teq	r4, r5
   4d948:	teqeq	r0, r2
   4d94c:	beq	4d960 <flatcc_json_printer_clear@@Base+0x2ac>
   4d950:	orrs	ip, r4, r0
   4d954:	moveq	r1, r3
   4d958:	moveq	r0, r2
   4d95c:	pop	{r4, r5, pc}
   4d960:	teq	r1, r3
   4d964:	movne	r1, #0
   4d968:	movne	r0, #0
   4d96c:	popne	{r4, r5, pc}
   4d970:	lsrs	ip, r4, #21
   4d974:	bne	4d988 <flatcc_json_printer_clear@@Base+0x2d4>
   4d978:	lsls	r0, r0, #1
   4d97c:	adcs	r1, r1, r1
   4d980:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4d984:	pop	{r4, r5, pc}
   4d988:	adds	r4, r4, #4194304	; 0x400000
   4d98c:	addcc	r1, r1, #1048576	; 0x100000
   4d990:	popcc	{r4, r5, pc}
   4d994:	and	r5, r1, #-2147483648	; 0x80000000
   4d998:	orr	r1, r5, #2130706432	; 0x7f000000
   4d99c:	orr	r1, r1, #15728640	; 0xf00000
   4d9a0:	mov	r0, #0
   4d9a4:	pop	{r4, r5, pc}
   4d9a8:	mvns	ip, r4, asr #21
   4d9ac:	movne	r1, r3
   4d9b0:	movne	r0, r2
   4d9b4:	mvnseq	ip, r5, asr #21
   4d9b8:	movne	r3, r1
   4d9bc:	movne	r2, r0
   4d9c0:	orrs	r4, r0, r1, lsl #12
   4d9c4:	orrseq	r5, r2, r3, lsl #12
   4d9c8:	teqeq	r1, r3
   4d9cc:	orrne	r1, r1, #524288	; 0x80000
   4d9d0:	pop	{r4, r5, pc}
   4d9d4:	teq	r0, #0
   4d9d8:	moveq	r1, #0
   4d9dc:	bxeq	lr
   4d9e0:	push	{r4, r5, lr}
   4d9e4:	mov	r4, #1024	; 0x400
   4d9e8:	add	r4, r4, #50	; 0x32
   4d9ec:	mov	r5, #0
   4d9f0:	mov	r1, #0
   4d9f4:	b	4d870 <flatcc_json_printer_clear@@Base+0x1bc>
   4d9f8:	teq	r0, #0
   4d9fc:	moveq	r1, #0
   4da00:	bxeq	lr
   4da04:	push	{r4, r5, lr}
   4da08:	mov	r4, #1024	; 0x400
   4da0c:	add	r4, r4, #50	; 0x32
   4da10:	ands	r5, r0, #-2147483648	; 0x80000000
   4da14:	rsbmi	r0, r0, #0
   4da18:	mov	r1, #0
   4da1c:	b	4d870 <flatcc_json_printer_clear@@Base+0x1bc>
   4da20:	lsls	r2, r0, #1
   4da24:	asr	r1, r2, #3
   4da28:	rrx	r1, r1
   4da2c:	lsl	r0, r2, #28
   4da30:	andsne	r3, r2, #-16777216	; 0xff000000
   4da34:	teqne	r3, #-16777216	; 0xff000000
   4da38:	eorne	r1, r1, #939524096	; 0x38000000
   4da3c:	bxne	lr
   4da40:	bics	r2, r2, #-16777216	; 0xff000000
   4da44:	bxeq	lr
   4da48:	teq	r3, #-16777216	; 0xff000000
   4da4c:	orreq	r1, r1, #524288	; 0x80000
   4da50:	bxeq	lr
   4da54:	push	{r4, r5, lr}
   4da58:	mov	r4, #896	; 0x380
   4da5c:	and	r5, r1, #-2147483648	; 0x80000000
   4da60:	bic	r1, r1, #-2147483648	; 0x80000000
   4da64:	b	4d870 <flatcc_json_printer_clear@@Base+0x1bc>
   4da68:	orrs	r2, r0, r1
   4da6c:	bxeq	lr
   4da70:	push	{r4, r5, lr}
   4da74:	mov	r5, #0
   4da78:	b	4da98 <flatcc_json_printer_clear@@Base+0x3e4>
   4da7c:	orrs	r2, r0, r1
   4da80:	bxeq	lr
   4da84:	push	{r4, r5, lr}
   4da88:	ands	r5, r1, #-2147483648	; 0x80000000
   4da8c:	bpl	4da98 <flatcc_json_printer_clear@@Base+0x3e4>
   4da90:	rsbs	r0, r0, #0
   4da94:	rsc	r1, r1, #0
   4da98:	mov	r4, #1024	; 0x400
   4da9c:	add	r4, r4, #50	; 0x32
   4daa0:	lsrs	ip, r1, #22
   4daa4:	beq	4d814 <flatcc_json_printer_clear@@Base+0x160>
   4daa8:	mov	r2, #3
   4daac:	lsrs	ip, ip, #3
   4dab0:	addne	r2, r2, #3
   4dab4:	lsrs	ip, ip, #3
   4dab8:	addne	r2, r2, #3
   4dabc:	add	r2, r2, ip, lsr #3
   4dac0:	rsb	r3, r2, #32
   4dac4:	lsl	ip, r0, r3
   4dac8:	lsr	r0, r0, r2
   4dacc:	orr	r0, r0, r1, lsl r3
   4dad0:	lsr	r1, r1, r2
   4dad4:	add	r4, r4, r2
   4dad8:	b	4d814 <flatcc_json_printer_clear@@Base+0x160>
   4dadc:	eor	r0, r0, #-2147483648	; 0x80000000
   4dae0:	b	4dae8 <flatcc_json_printer_clear@@Base+0x434>
   4dae4:	eor	r1, r1, #-2147483648	; 0x80000000
   4dae8:	lsls	r2, r0, #1
   4daec:	lslsne	r3, r1, #1
   4daf0:	teqne	r2, r3
   4daf4:	mvnsne	ip, r2, asr #24
   4daf8:	mvnsne	ip, r3, asr #24
   4dafc:	beq	4dbf4 <flatcc_json_printer_clear@@Base+0x540>
   4db00:	lsr	r2, r2, #24
   4db04:	rsbs	r3, r2, r3, lsr #24
   4db08:	addgt	r2, r2, r3
   4db0c:	eorgt	r1, r0, r1
   4db10:	eorgt	r0, r1, r0
   4db14:	eorgt	r1, r0, r1
   4db18:	rsblt	r3, r3, #0
   4db1c:	cmp	r3, #25
   4db20:	bxhi	lr
   4db24:	tst	r0, #-2147483648	; 0x80000000
   4db28:	orr	r0, r0, #8388608	; 0x800000
   4db2c:	bic	r0, r0, #-16777216	; 0xff000000
   4db30:	rsbne	r0, r0, #0
   4db34:	tst	r1, #-2147483648	; 0x80000000
   4db38:	orr	r1, r1, #8388608	; 0x800000
   4db3c:	bic	r1, r1, #-16777216	; 0xff000000
   4db40:	rsbne	r1, r1, #0
   4db44:	teq	r2, r3
   4db48:	beq	4dbdc <flatcc_json_printer_clear@@Base+0x528>
   4db4c:	sub	r2, r2, #1
   4db50:	adds	r0, r0, r1, asr r3
   4db54:	rsb	r3, r3, #32
   4db58:	lsl	r1, r1, r3
   4db5c:	and	r3, r0, #-2147483648	; 0x80000000
   4db60:	bpl	4db6c <flatcc_json_printer_clear@@Base+0x4b8>
   4db64:	rsbs	r1, r1, #0
   4db68:	rsc	r0, r0, #0
   4db6c:	cmp	r0, #8388608	; 0x800000
   4db70:	bcc	4dba4 <flatcc_json_printer_clear@@Base+0x4f0>
   4db74:	cmp	r0, #16777216	; 0x1000000
   4db78:	bcc	4db90 <flatcc_json_printer_clear@@Base+0x4dc>
   4db7c:	lsrs	r0, r0, #1
   4db80:	rrx	r1, r1
   4db84:	add	r2, r2, #1
   4db88:	cmp	r2, #254	; 0xfe
   4db8c:	bcs	4dc48 <flatcc_json_printer_clear@@Base+0x594>
   4db90:	cmp	r1, #-2147483648	; 0x80000000
   4db94:	adc	r0, r0, r2, lsl #23
   4db98:	biceq	r0, r0, #1
   4db9c:	orr	r0, r0, r3
   4dba0:	bx	lr
   4dba4:	lsls	r1, r1, #1
   4dba8:	adc	r0, r0, r0
   4dbac:	tst	r0, #8388608	; 0x800000
   4dbb0:	sub	r2, r2, #1
   4dbb4:	bne	4db90 <flatcc_json_printer_clear@@Base+0x4dc>
   4dbb8:	clz	ip, r0
   4dbbc:	sub	ip, ip, #8
   4dbc0:	subs	r2, r2, ip
   4dbc4:	lsl	r0, r0, ip
   4dbc8:	addge	r0, r0, r2, lsl #23
   4dbcc:	rsblt	r2, r2, #0
   4dbd0:	orrge	r0, r0, r3
   4dbd4:	orrlt	r0, r3, r0, lsr r2
   4dbd8:	bx	lr
   4dbdc:	teq	r2, #0
   4dbe0:	eor	r1, r1, #8388608	; 0x800000
   4dbe4:	eoreq	r0, r0, #8388608	; 0x800000
   4dbe8:	addeq	r2, r2, #1
   4dbec:	subne	r3, r3, #1
   4dbf0:	b	4db4c <flatcc_json_printer_clear@@Base+0x498>
   4dbf4:	lsl	r3, r1, #1
   4dbf8:	mvns	ip, r2, asr #24
   4dbfc:	mvnsne	ip, r3, asr #24
   4dc00:	beq	4dc54 <flatcc_json_printer_clear@@Base+0x5a0>
   4dc04:	teq	r2, r3
   4dc08:	beq	4dc18 <flatcc_json_printer_clear@@Base+0x564>
   4dc0c:	teq	r2, #0
   4dc10:	moveq	r0, r1
   4dc14:	bx	lr
   4dc18:	teq	r0, r1
   4dc1c:	movne	r0, #0
   4dc20:	bxne	lr
   4dc24:	tst	r2, #-16777216	; 0xff000000
   4dc28:	bne	4dc38 <flatcc_json_printer_clear@@Base+0x584>
   4dc2c:	lsls	r0, r0, #1
   4dc30:	orrcs	r0, r0, #-2147483648	; 0x80000000
   4dc34:	bx	lr
   4dc38:	adds	r2, r2, #33554432	; 0x2000000
   4dc3c:	addcc	r0, r0, #8388608	; 0x800000
   4dc40:	bxcc	lr
   4dc44:	and	r3, r0, #-2147483648	; 0x80000000
   4dc48:	orr	r0, r3, #2130706432	; 0x7f000000
   4dc4c:	orr	r0, r0, #8388608	; 0x800000
   4dc50:	bx	lr
   4dc54:	mvns	r2, r2, asr #24
   4dc58:	movne	r0, r1
   4dc5c:	mvnseq	r3, r3, asr #24
   4dc60:	movne	r1, r0
   4dc64:	lsls	r2, r0, #9
   4dc68:	lslseq	r3, r1, #9
   4dc6c:	teqeq	r0, r1
   4dc70:	orrne	r0, r0, #4194304	; 0x400000
   4dc74:	bx	lr
   4dc78:	mov	r3, #0
   4dc7c:	b	4dc88 <flatcc_json_printer_clear@@Base+0x5d4>
   4dc80:	ands	r3, r0, #-2147483648	; 0x80000000
   4dc84:	rsbmi	r0, r0, #0
   4dc88:	movs	ip, r0
   4dc8c:	bxeq	lr
   4dc90:	orr	r3, r3, #1258291200	; 0x4b000000
   4dc94:	mov	r1, r0
   4dc98:	mov	r0, #0
   4dc9c:	b	4dce0 <flatcc_json_printer_clear@@Base+0x62c>
   4dca0:	orrs	r2, r0, r1
   4dca4:	bxeq	lr
   4dca8:	mov	r3, #0
   4dcac:	b	4dcc8 <flatcc_json_printer_clear@@Base+0x614>
   4dcb0:	orrs	r2, r0, r1
   4dcb4:	bxeq	lr
   4dcb8:	ands	r3, r1, #-2147483648	; 0x80000000
   4dcbc:	bpl	4dcc8 <flatcc_json_printer_clear@@Base+0x614>
   4dcc0:	rsbs	r0, r0, #0
   4dcc4:	rsc	r1, r1, #0
   4dcc8:	movs	ip, r1
   4dccc:	moveq	ip, r0
   4dcd0:	moveq	r1, r0
   4dcd4:	moveq	r0, #0
   4dcd8:	orr	r3, r3, #1526726656	; 0x5b000000
   4dcdc:	subeq	r3, r3, #268435456	; 0x10000000
   4dce0:	sub	r3, r3, #8388608	; 0x800000
   4dce4:	clz	r2, ip
   4dce8:	subs	r2, r2, #8
   4dcec:	sub	r3, r3, r2, lsl #23
   4dcf0:	blt	4dd10 <flatcc_json_printer_clear@@Base+0x65c>
   4dcf4:	add	r3, r3, r1, lsl r2
   4dcf8:	lsl	ip, r0, r2
   4dcfc:	rsb	r2, r2, #32
   4dd00:	cmp	ip, #-2147483648	; 0x80000000
   4dd04:	adc	r0, r3, r0, lsr r2
   4dd08:	biceq	r0, r0, #1
   4dd0c:	bx	lr
   4dd10:	add	r2, r2, #32
   4dd14:	lsl	ip, r1, r2
   4dd18:	rsb	r2, r2, #32
   4dd1c:	orrs	r0, r0, ip, lsl #1
   4dd20:	adc	r0, r3, r1, lsr r2
   4dd24:	biceq	r0, r0, ip, lsr #31
   4dd28:	bx	lr
   4dd2c:	cmp	r3, #0
   4dd30:	cmpeq	r2, #0
   4dd34:	bne	4dd4c <flatcc_json_printer_clear@@Base+0x698>
   4dd38:	cmp	r1, #0
   4dd3c:	cmpeq	r0, #0
   4dd40:	mvnne	r1, #0
   4dd44:	mvnne	r0, #0
   4dd48:	b	4dd68 <flatcc_json_printer_clear@@Base+0x6b4>
   4dd4c:	sub	sp, sp, #8
   4dd50:	push	{sp, lr}
   4dd54:	bl	4dd78 <flatcc_json_printer_clear@@Base+0x6c4>
   4dd58:	ldr	lr, [sp, #4]
   4dd5c:	add	sp, sp, #8
   4dd60:	pop	{r2, r3}
   4dd64:	bx	lr
   4dd68:	push	{r1, lr}
   4dd6c:	mov	r0, #8
   4dd70:	bl	144ec <raise@plt>
   4dd74:	pop	{r1, pc}
   4dd78:	cmp	r1, r3
   4dd7c:	cmpeq	r0, r2
   4dd80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4dd84:	mov	r4, r0
   4dd88:	movcc	r0, #0
   4dd8c:	mov	r5, r1
   4dd90:	ldr	lr, [sp, #36]	; 0x24
   4dd94:	movcc	r1, r0
   4dd98:	bcc	4de94 <flatcc_json_printer_clear@@Base+0x7e0>
   4dd9c:	cmp	r3, #0
   4dda0:	clzeq	ip, r2
   4dda4:	clzne	ip, r3
   4dda8:	addeq	ip, ip, #32
   4ddac:	cmp	r5, #0
   4ddb0:	clzeq	r1, r4
   4ddb4:	addeq	r1, r1, #32
   4ddb8:	clzne	r1, r5
   4ddbc:	sub	ip, ip, r1
   4ddc0:	sub	sl, ip, #32
   4ddc4:	lsl	r9, r3, ip
   4ddc8:	rsb	fp, ip, #32
   4ddcc:	orr	r9, r9, r2, lsl sl
   4ddd0:	orr	r9, r9, r2, lsr fp
   4ddd4:	lsl	r8, r2, ip
   4ddd8:	cmp	r5, r9
   4dddc:	cmpeq	r4, r8
   4dde0:	movcc	r0, #0
   4dde4:	movcc	r1, r0
   4dde8:	bcc	4de04 <flatcc_json_printer_clear@@Base+0x750>
   4ddec:	mov	r0, #1
   4ddf0:	subs	r4, r4, r8
   4ddf4:	lsl	r1, r0, sl
   4ddf8:	orr	r1, r1, r0, lsr fp
   4ddfc:	lsl	r0, r0, ip
   4de00:	sbc	r5, r5, r9
   4de04:	cmp	ip, #0
   4de08:	beq	4de94 <flatcc_json_printer_clear@@Base+0x7e0>
   4de0c:	lsr	r6, r8, #1
   4de10:	orr	r6, r6, r9, lsl #31
   4de14:	lsr	r7, r9, #1
   4de18:	mov	r2, ip
   4de1c:	b	4de40 <flatcc_json_printer_clear@@Base+0x78c>
   4de20:	subs	r3, r4, r6
   4de24:	sbc	r8, r5, r7
   4de28:	adds	r3, r3, r3
   4de2c:	adc	r8, r8, r8
   4de30:	adds	r4, r3, #1
   4de34:	adc	r5, r8, #0
   4de38:	subs	r2, r2, #1
   4de3c:	beq	4de5c <flatcc_json_printer_clear@@Base+0x7a8>
   4de40:	cmp	r5, r7
   4de44:	cmpeq	r4, r6
   4de48:	bcs	4de20 <flatcc_json_printer_clear@@Base+0x76c>
   4de4c:	adds	r4, r4, r4
   4de50:	adc	r5, r5, r5
   4de54:	subs	r2, r2, #1
   4de58:	bne	4de40 <flatcc_json_printer_clear@@Base+0x78c>
   4de5c:	lsr	r3, r4, ip
   4de60:	orr	r3, r3, r5, lsl fp
   4de64:	lsr	r2, r5, ip
   4de68:	orr	r3, r3, r5, lsr sl
   4de6c:	adds	r0, r0, r4
   4de70:	mov	r4, r3
   4de74:	lsl	r3, r2, ip
   4de78:	orr	r3, r3, r4, lsl sl
   4de7c:	lsl	ip, r4, ip
   4de80:	orr	r3, r3, r4, lsr fp
   4de84:	adc	r1, r1, r5
   4de88:	subs	r0, r0, ip
   4de8c:	mov	r5, r2
   4de90:	sbc	r1, r1, r3
   4de94:	cmp	lr, #0
   4de98:	strdne	r4, [lr]
   4de9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004dea0 <__libc_csu_init@@Base>:
   4dea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4dea4:	mov	r7, r0
   4dea8:	ldr	r6, [pc, #72]	; 4def8 <__libc_csu_init@@Base+0x58>
   4deac:	ldr	r5, [pc, #72]	; 4defc <__libc_csu_init@@Base+0x5c>
   4deb0:	add	r6, pc, r6
   4deb4:	add	r5, pc, r5
   4deb8:	sub	r6, r6, r5
   4debc:	mov	r8, r1
   4dec0:	mov	r9, r2
   4dec4:	bl	144cc <raise@plt-0x20>
   4dec8:	asrs	r6, r6, #2
   4decc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   4ded0:	mov	r4, #0
   4ded4:	add	r4, r4, #1
   4ded8:	ldr	r3, [r5], #4
   4dedc:	mov	r2, r9
   4dee0:	mov	r1, r8
   4dee4:	mov	r0, r7
   4dee8:	blx	r3
   4deec:	cmp	r6, r4
   4def0:	bne	4ded4 <__libc_csu_init@@Base+0x34>
   4def4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4def8:	andeq	r7, r1, ip, lsr #32
   4defc:	andeq	r7, r1, r4, lsr #32

0004df00 <__libc_csu_fini@@Base>:
   4df00:	bx	lr

Disassembly of section .fini:

0004df04 <.fini>:
   4df04:	push	{r3, lr}
   4df08:	pop	{r3, pc}
