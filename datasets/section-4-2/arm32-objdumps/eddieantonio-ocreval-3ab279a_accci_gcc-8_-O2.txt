
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

000108ec <.init>:
   108ec:	push	{r3, lr}
   108f0:	bl	10b44 <getc@plt+0xb8>
   108f4:	pop	{r3, pc}

Disassembly of section .plt:

000108f8 <calloc@plt-0x14>:
   108f8:	push	{lr}		; (str lr, [sp, #-4]!)
   108fc:	ldr	lr, [pc, #4]	; 10908 <calloc@plt-0x4>
   10900:	add	lr, pc, lr
   10904:	ldr	pc, [lr, #8]!
   10908:	strdeq	r4, [r1], -r8

0001090c <calloc@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #20, 20	; 0x14000
   10914:	ldr	pc, [ip, #1784]!	; 0x6f8

00010918 <strcmp@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #20, 20	; 0x14000
   10920:	ldr	pc, [ip, #1776]!	; 0x6f0

00010924 <printf@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #20, 20	; 0x14000
   1092c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010930 <fopen@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #20, 20	; 0x14000
   10938:	ldr	pc, [ip, #1760]!	; 0x6e0

0001093c <free@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #20, 20	; 0x14000
   10944:	ldr	pc, [ip, #1752]!	; 0x6d8

00010948 <utf8proc_get_property@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #20, 20	; 0x14000
   10950:	ldr	pc, [ip, #1744]!	; 0x6d0

00010954 <fgets@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #20, 20	; 0x14000
   1095c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010960 <utf8proc_encode_char@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #20, 20	; 0x14000
   10968:	ldr	pc, [ip, #1728]!	; 0x6c0

0001096c <strdup@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #20, 20	; 0x14000
   10974:	ldr	pc, [ip, #1720]!	; 0x6b8

00010978 <rewind@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #20, 20	; 0x14000
   10980:	ldr	pc, [ip, #1712]!	; 0x6b0

00010984 <unlink@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #20, 20	; 0x14000
   1098c:	ldr	pc, [ip, #1704]!	; 0x6a8

00010990 <utf8proc_tolower@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #20, 20	; 0x14000
   10998:	ldr	pc, [ip, #1696]!	; 0x6a0

0001099c <__xstat@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #20, 20	; 0x14000
   109a4:	ldr	pc, [ip, #1688]!	; 0x698

000109a8 <fwrite@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #20, 20	; 0x14000
   109b0:	ldr	pc, [ip, #1680]!	; 0x690

000109b4 <fread@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #20, 20	; 0x14000
   109bc:	ldr	pc, [ip, #1672]!	; 0x688

000109c0 <utf8proc_iterate@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #20, 20	; 0x14000
   109c8:	ldr	pc, [ip, #1664]!	; 0x680

000109cc <__libc_start_main@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #20, 20	; 0x14000
   109d4:	ldr	pc, [ip, #1656]!	; 0x678

000109d8 <__sysv_signal@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #20, 20	; 0x14000
   109e0:	ldr	pc, [ip, #1648]!	; 0x670

000109e4 <__gmon_start__@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1640]!	; 0x668

000109f0 <getpid@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1632]!	; 0x660

000109fc <exit@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1624]!	; 0x658

00010a08 <utf8proc_category@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1616]!	; 0x650

00010a14 <strlen@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1608]!	; 0x648

00010a20 <fprintf@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1600]!	; 0x640

00010a2c <sqrt@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1592]!	; 0x638

00010a38 <__isoc99_sscanf@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1584]!	; 0x630

00010a44 <fclose@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1576]!	; 0x628

00010a50 <sprintf@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1568]!	; 0x620

00010a5c <utf8proc_errmsg@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1560]!	; 0x618

00010a68 <fputs@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1552]!	; 0x610

00010a74 <strncmp@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1544]!	; 0x608

00010a80 <abort@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1536]!	; 0x600

00010a8c <getc@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1528]!	; 0x5f8

Disassembly of section .text:

00010a98 <error@@Base-0x1a9c>:
   10a98:	ldr	r2, [pc, #96]	; 10b00 <getc@plt+0x74>
   10a9c:	mov	r3, #0
   10aa0:	strd	r4, [sp, #-12]!
   10aa4:	mov	r5, r1
   10aa8:	str	lr, [sp, #8]
   10aac:	sub	sp, sp, #12
   10ab0:	str	r0, [sp, #4]
   10ab4:	add	r0, sp, #4
   10ab8:	add	r2, pc, r2
   10abc:	bl	12718 <error@@Base+0x1e4>
   10ac0:	ldr	r3, [sp, #4]
   10ac4:	cmp	r3, #1
   10ac8:	subgt	r5, r5, #4
   10acc:	movgt	r4, #0
   10ad0:	ble	10af4 <getc@plt+0x68>
   10ad4:	ldr	r0, [r5, #4]!
   10ad8:	add	r4, r4, #1
   10adc:	bl	10bf8 <getc@plt+0x16c>
   10ae0:	ldr	r3, [sp, #4]
   10ae4:	cmp	r3, r4
   10ae8:	bgt	10ad4 <getc@plt+0x48>
   10aec:	bl	10c60 <getc@plt+0x1d4>
   10af0:	bl	124b8 <getc@plt+0x1a2c>
   10af4:	ldr	r0, [pc, #8]	; 10b04 <getc@plt+0x78>
   10af8:	add	r0, pc, r0
   10afc:	bl	12534 <error@@Base>
   10b00:	andeq	r2, r0, r0, lsl sl
   10b04:	andeq	r2, r0, r4, lsl #20
   10b08:	mov	fp, #0
   10b0c:	mov	lr, #0
   10b10:	pop	{r1}		; (ldr r1, [sp], #4)
   10b14:	mov	r2, sp
   10b18:	push	{r2}		; (str r2, [sp, #-4]!)
   10b1c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b20:	ldr	ip, [pc, #16]	; 10b38 <getc@plt+0xac>
   10b24:	push	{ip}		; (str ip, [sp, #-4]!)
   10b28:	ldr	r0, [pc, #12]	; 10b3c <getc@plt+0xb0>
   10b2c:	ldr	r3, [pc, #12]	; 10b40 <getc@plt+0xb4>
   10b30:	bl	109cc <__libc_start_main@plt>
   10b34:	bl	10a80 <abort@plt>
   10b38:	andeq	r3, r1, r4, lsr #8
   10b3c:	muleq	r1, r8, sl
   10b40:	andeq	r3, r1, r4, asr #7
   10b44:	ldr	r3, [pc, #20]	; 10b60 <getc@plt+0xd4>
   10b48:	ldr	r2, [pc, #20]	; 10b64 <getc@plt+0xd8>
   10b4c:	add	r3, pc, r3
   10b50:	ldr	r2, [r3, r2]
   10b54:	cmp	r2, #0
   10b58:	bxeq	lr
   10b5c:	b	109e4 <__gmon_start__@plt>
   10b60:	andeq	r4, r1, ip, lsr #9
   10b64:	andeq	r0, r0, r0, lsr #1
   10b68:	ldr	r0, [pc, #24]	; 10b88 <getc@plt+0xfc>
   10b6c:	ldr	r3, [pc, #24]	; 10b8c <getc@plt+0x100>
   10b70:	cmp	r3, r0
   10b74:	bxeq	lr
   10b78:	ldr	r3, [pc, #16]	; 10b90 <getc@plt+0x104>
   10b7c:	cmp	r3, #0
   10b80:	bxeq	lr
   10b84:	bx	r3
   10b88:	ldrdeq	r5, [r2], -r0
   10b8c:	ldrdeq	r5, [r2], -r0
   10b90:	andeq	r0, r0, r0
   10b94:	ldr	r0, [pc, #36]	; 10bc0 <getc@plt+0x134>
   10b98:	ldr	r1, [pc, #36]	; 10bc4 <getc@plt+0x138>
   10b9c:	sub	r1, r1, r0
   10ba0:	asr	r1, r1, #2
   10ba4:	add	r1, r1, r1, lsr #31
   10ba8:	asrs	r1, r1, #1
   10bac:	bxeq	lr
   10bb0:	ldr	r3, [pc, #16]	; 10bc8 <getc@plt+0x13c>
   10bb4:	cmp	r3, #0
   10bb8:	bxeq	lr
   10bbc:	bx	r3
   10bc0:	ldrdeq	r5, [r2], -r0
   10bc4:	ldrdeq	r5, [r2], -r0
   10bc8:	andeq	r0, r0, r0
   10bcc:	push	{r4, lr}
   10bd0:	ldr	r4, [pc, #24]	; 10bf0 <getc@plt+0x164>
   10bd4:	ldrb	r3, [r4]
   10bd8:	cmp	r3, #0
   10bdc:	popne	{r4, pc}
   10be0:	bl	10b68 <getc@plt+0xdc>
   10be4:	mov	r3, #1
   10be8:	strb	r3, [r4]
   10bec:	pop	{r4, pc}
   10bf0:	ldrdeq	r5, [r2], -r0
   10bf4:	b	10b94 <getc@plt+0x108>
   10bf8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10bfc:	mov	r1, r0
   10c00:	ldr	r4, [pc, #76]	; 10c54 <getc@plt+0x1c8>
   10c04:	strd	r6, [sp, #8]
   10c08:	ldr	r3, [pc, #72]	; 10c58 <getc@plt+0x1cc>
   10c0c:	str	r8, [sp, #16]
   10c10:	str	lr, [sp, #20]
   10c14:	add	r4, pc, r4
   10c18:	ldr	r5, [r4, r3]
   10c1c:	mov	r0, r5
   10c20:	ldrd	r6, [r5]
   10c24:	bl	111b0 <getc@plt+0x724>
   10c28:	ldr	r3, [pc, #44]	; 10c5c <getc@plt+0x1d0>
   10c2c:	ldm	r5, {r1, r2}
   10c30:	ldr	r8, [sp, #16]
   10c34:	ldr	r0, [r4, r3]
   10c38:	sub	r2, r2, r7
   10c3c:	sub	r1, r1, r6
   10c40:	ldrd	r4, [sp]
   10c44:	ldrd	r6, [sp, #8]
   10c48:	ldr	lr, [sp, #20]
   10c4c:	add	sp, sp, #24
   10c50:	b	11b18 <getc@plt+0x108c>
   10c54:	andeq	r4, r1, r4, ror #7
   10c58:	muleq	r0, r4, r0
   10c5c:	andeq	r0, r0, r8, lsr #1
   10c60:	strd	r4, [sp, #-12]!
   10c64:	ldr	r4, [pc, #204]	; 10d38 <getc@plt+0x2ac>
   10c68:	str	lr, [sp, #8]
   10c6c:	sub	sp, sp, #36	; 0x24
   10c70:	ldr	r3, [pc, #196]	; 10d3c <getc@plt+0x2b0>
   10c74:	add	r2, sp, #24
   10c78:	add	r1, sp, #16
   10c7c:	add	r4, pc, r4
   10c80:	ldr	r5, [r4, r3]
   10c84:	mov	r0, r5
   10c88:	bl	11b7c <getc@plt+0x10f0>
   10c8c:	ldr	r0, [pc, #172]	; 10d40 <getc@plt+0x2b4>
   10c90:	ldr	r1, [r5, #12]
   10c94:	add	r0, pc, r0
   10c98:	bl	10924 <printf@plt>
   10c9c:	ldr	r3, [pc, #160]	; 10d44 <getc@plt+0x2b8>
   10ca0:	ldr	r0, [pc, #160]	; 10d48 <getc@plt+0x2bc>
   10ca4:	ldr	r4, [r4, r3]
   10ca8:	add	r0, pc, r0
   10cac:	ldr	r1, [r4]
   10cb0:	bl	10924 <printf@plt>
   10cb4:	ldr	r0, [pc, #144]	; 10d4c <getc@plt+0x2c0>
   10cb8:	ldr	r1, [r4, #4]
   10cbc:	add	r0, pc, r0
   10cc0:	bl	10924 <printf@plt>
   10cc4:	ldr	r3, [r4]
   10cc8:	ldr	r2, [r4, #4]
   10ccc:	vldr	d5, [pc, #92]	; 10d30 <getc@plt+0x2a4>
   10cd0:	vmov	s15, r3
   10cd4:	ldr	r0, [pc, #116]	; 10d50 <getc@plt+0x2c4>
   10cd8:	sub	r3, r3, r2
   10cdc:	vmov	s14, r3
   10ce0:	add	r0, pc, r0
   10ce4:	vcvt.f64.s32	d6, s15
   10ce8:	vcvt.f64.s32	d7, s14
   10cec:	vmul.f64	d7, d7, d5
   10cf0:	vdiv.f64	d7, d7, d6
   10cf4:	vmov	r2, r3, d7
   10cf8:	bl	10924 <printf@plt>
   10cfc:	ldr	r3, [pc, #80]	; 10d54 <getc@plt+0x2c8>
   10d00:	ldr	r0, [pc, #80]	; 10d58 <getc@plt+0x2cc>
   10d04:	ldrd	r4, [sp, #24]
   10d08:	add	r3, pc, r3
   10d0c:	add	r0, pc, r0
   10d10:	str	r3, [sp, #8]
   10d14:	ldrd	r2, [sp, #16]
   10d18:	strd	r4, [sp]
   10d1c:	bl	10924 <printf@plt>
   10d20:	add	sp, sp, #36	; 0x24
   10d24:	ldrd	r4, [sp]
   10d28:	add	sp, sp, #8
   10d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   10d30:	andeq	r0, r0, r0
   10d34:	subsmi	r0, r9, r0
   10d38:	andeq	r4, r1, ip, ror r3
   10d3c:	andeq	r0, r0, r8, lsr #1
   10d40:	muleq	r0, r8, r7
   10d44:	muleq	r0, r4, r0
   10d48:	muleq	r0, ip, r7
   10d4c:	muleq	r0, ip, r7
   10d50:	andeq	r2, r0, r8, lsl #15
   10d54:	andeq	r2, r0, ip, lsl #15
   10d58:	andeq	r2, r0, r0, ror r7
   10d5c:	andeq	r0, r0, r0
   10d60:	strd	r4, [sp, #-16]!
   10d64:	mov	r5, r1
   10d68:	mov	r1, #99	; 0x63
   10d6c:	ldr	r4, [pc, #112]	; 10de4 <getc@plt+0x358>
   10d70:	str	r6, [sp, #8]
   10d74:	mov	r6, r2
   10d78:	mov	r2, r0
   10d7c:	str	lr, [sp, #12]
   10d80:	add	r4, pc, r4
   10d84:	mov	r0, r4
   10d88:	bl	10954 <fgets@plt>
   10d8c:	cmp	r0, #0
   10d90:	beq	10db0 <getc@plt+0x324>
   10d94:	ldr	r1, [pc, #76]	; 10de8 <getc@plt+0x35c>
   10d98:	mov	r0, r4
   10d9c:	mov	r2, r5
   10da0:	add	r1, pc, r1
   10da4:	bl	10a38 <__isoc99_sscanf@plt>
   10da8:	cmp	r0, #1
   10dac:	beq	10dc4 <getc@plt+0x338>
   10db0:	ldrd	r4, [sp]
   10db4:	mov	r0, #0
   10db8:	ldr	r6, [sp, #8]
   10dbc:	add	sp, sp, #12
   10dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   10dc4:	ldr	r2, [r5]
   10dc8:	ldr	r3, [r6]
   10dcc:	ldrd	r4, [sp]
   10dd0:	add	r3, r3, r2
   10dd4:	str	r3, [r6]
   10dd8:	ldr	r6, [sp, #8]
   10ddc:	add	sp, sp, #12
   10de0:	pop	{pc}		; (ldr pc, [sp], #4)
   10de4:	andeq	r4, r1, ip, asr #6
   10de8:	andeq	r2, r0, r0, lsl #15
   10dec:	strd	r4, [sp, #-16]!
   10df0:	mov	r2, r0
   10df4:	mov	r4, r1
   10df8:	ldr	r5, [pc, #160]	; 10ea0 <getc@plt+0x414>
   10dfc:	mov	r1, #99	; 0x63
   10e00:	str	r6, [sp, #8]
   10e04:	str	lr, [sp, #12]
   10e08:	sub	sp, sp, #24
   10e0c:	add	r5, pc, r5
   10e10:	mov	r0, r5
   10e14:	bl	10954 <fgets@plt>
   10e18:	cmp	r0, #0
   10e1c:	beq	10e4c <getc@plt+0x3c0>
   10e20:	ldr	r1, [pc, #124]	; 10ea4 <getc@plt+0x418>
   10e24:	add	r2, sp, #16
   10e28:	add	ip, sp, #20
   10e2c:	mov	r0, r5
   10e30:	add	r3, sp, #12
   10e34:	stm	sp, {r2, ip}
   10e38:	add	r2, sp, #8
   10e3c:	add	r1, pc, r1
   10e40:	bl	10a38 <__isoc99_sscanf@plt>
   10e44:	cmp	r0, #4
   10e48:	beq	10e64 <getc@plt+0x3d8>
   10e4c:	mov	r0, #0
   10e50:	add	sp, sp, #24
   10e54:	ldrd	r4, [sp]
   10e58:	ldr	r6, [sp, #8]
   10e5c:	add	sp, sp, #12
   10e60:	pop	{pc}		; (ldr pc, [sp], #4)
   10e64:	ldr	ip, [r4]
   10e68:	mov	r0, #1
   10e6c:	ldr	r3, [sp, #8]
   10e70:	ldmib	r4, {r1, r2}
   10e74:	ldr	r6, [sp, #12]
   10e78:	add	ip, ip, r3
   10e7c:	ldr	r3, [r4, #12]
   10e80:	str	ip, [r4]
   10e84:	ldr	r5, [sp, #16]
   10e88:	add	r1, r1, r6
   10e8c:	ldr	lr, [sp, #20]
   10e90:	add	r2, r2, r5
   10e94:	add	r3, r3, lr
   10e98:	stmib	r4, {r1, r2, r3}
   10e9c:	b	10e50 <getc@plt+0x3c4>
   10ea0:	andeq	r4, r1, r0, asr #5
   10ea4:	ldrdeq	r2, [r0], -r8
   10ea8:	strd	r4, [sp, #-16]!
   10eac:	mov	r5, r1
   10eb0:	mov	r1, #99	; 0x63
   10eb4:	ldr	r4, [pc, #84]	; 10f10 <getc@plt+0x484>
   10eb8:	str	r6, [sp, #8]
   10ebc:	mov	r6, r2
   10ec0:	mov	r2, r0
   10ec4:	str	lr, [sp, #12]
   10ec8:	add	r4, pc, r4
   10ecc:	mov	r0, r4
   10ed0:	bl	10954 <fgets@plt>
   10ed4:	cmp	r0, #0
   10ed8:	beq	10f00 <getc@plt+0x474>
   10edc:	ldr	r1, [pc, #48]	; 10f14 <getc@plt+0x488>
   10ee0:	mov	r3, r6
   10ee4:	mov	r2, r5
   10ee8:	mov	r0, r4
   10eec:	add	r1, pc, r1
   10ef0:	bl	10a38 <__isoc99_sscanf@plt>
   10ef4:	sub	r0, r0, #2
   10ef8:	clz	r0, r0
   10efc:	lsr	r0, r0, #5
   10f00:	ldrd	r4, [sp]
   10f04:	ldr	r6, [sp, #8]
   10f08:	add	sp, sp, #12
   10f0c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f10:	andeq	r4, r1, r4, lsl #4
   10f14:	andeq	r2, r0, r0, lsr r6
   10f18:	sub	sp, sp, #8
   10f1c:	cmp	r2, #0
   10f20:	str	r1, [sp, #4]
   10f24:	bne	10f44 <getc@plt+0x4b8>
   10f28:	mov	r3, r0
   10f2c:	ldr	r0, [pc, #76]	; 10f80 <getc@plt+0x4f4>
   10f30:	mov	r2, #8
   10f34:	mov	r1, #1
   10f38:	add	r0, pc, r0
   10f3c:	add	sp, sp, #8
   10f40:	b	109a8 <fwrite@plt>
   10f44:	vldr	s15, [sp, #4]
   10f48:	vmov	s13, r2
   10f4c:	vldr	d5, [pc, #36]	; 10f78 <getc@plt+0x4ec>
   10f50:	ldr	r1, [pc, #44]	; 10f84 <getc@plt+0x4f8>
   10f54:	vcvt.f64.s32	d7, s15
   10f58:	add	r1, pc, r1
   10f5c:	vcvt.f64.s32	d6, s13
   10f60:	vmul.f64	d7, d7, d5
   10f64:	vdiv.f64	d7, d7, d6
   10f68:	vmov	r2, r3, d7
   10f6c:	add	sp, sp, #8
   10f70:	b	10a20 <fprintf@plt>
   10f74:	nop	{0}
   10f78:	andeq	r0, r0, r0
   10f7c:	subsmi	r0, r9, r0
   10f80:	andeq	r2, r0, ip, ror #11
   10f84:	ldrdeq	r2, [r0], -r8
   10f88:	ldr	r2, [r0, #12]
   10f8c:	ldr	r3, [r1, #12]
   10f90:	cmp	r2, r3
   10f94:	bne	10fa8 <getc@plt+0x51c>
   10f98:	ldr	r2, [r0, #16]
   10f9c:	ldr	r3, [r1, #16]
   10fa0:	cmp	r2, r3
   10fa4:	beq	10fb0 <getc@plt+0x524>
   10fa8:	sub	r0, r3, r2
   10fac:	bx	lr
   10fb0:	ldr	r0, [r0, #8]
   10fb4:	ldr	r1, [r1, #8]
   10fb8:	b	1233c <getc@plt+0x18b0>
   10fbc:	strd	r4, [sp, #-20]!	; 0xffffffec
   10fc0:	mov	r4, r1
   10fc4:	mov	r5, r0
   10fc8:	ldr	r1, [pc, #144]	; 11060 <getc@plt+0x5d4>
   10fcc:	strd	r6, [sp, #8]
   10fd0:	mov	r6, r2
   10fd4:	mov	r7, r3
   10fd8:	str	lr, [sp, #16]
   10fdc:	sub	sp, sp, #20
   10fe0:	ldrd	r2, [r4]
   10fe4:	add	r1, pc, r1
   10fe8:	bl	10a20 <fprintf@plt>
   10fec:	ldr	r2, [r4]
   10ff0:	mov	r0, r5
   10ff4:	ldr	r1, [r4, #4]
   10ff8:	sub	r1, r2, r1
   10ffc:	bl	10f18 <getc@plt+0x48c>
   11000:	cmp	r6, #0
   11004:	beq	11030 <getc@plt+0x5a4>
   11008:	ldr	r1, [pc, #84]	; 11064 <getc@plt+0x5d8>
   1100c:	mov	r2, r6
   11010:	mov	r0, r5
   11014:	add	r1, pc, r1
   11018:	bl	10a20 <fprintf@plt>
   1101c:	add	sp, sp, #20
   11020:	ldrd	r4, [sp]
   11024:	ldrd	r6, [sp, #8]
   11028:	add	sp, sp, #16
   1102c:	pop	{pc}		; (ldr pc, [sp], #4)
   11030:	add	r4, sp, #4
   11034:	mov	r1, r7
   11038:	mov	r0, r6
   1103c:	mov	r2, r4
   11040:	mov	r3, #1
   11044:	bl	12e58 <error@@Base+0x924>
   11048:	ldr	r1, [pc, #24]	; 11068 <getc@plt+0x5dc>
   1104c:	mov	r2, r4
   11050:	mov	r0, r5
   11054:	add	r1, pc, r1
   11058:	bl	10a20 <fprintf@plt>
   1105c:	b	1101c <getc@plt+0x590>
   11060:	andeq	r2, r0, r4, asr r5
   11064:	ldrdeq	r2, [r0], -r4
   11068:	strdeq	r2, [r0], -r0
   1106c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11070:	mov	r5, r0
   11074:	mov	r0, r1
   11078:	mov	r4, r1
   1107c:	strd	r6, [sp, #8]
   11080:	mov	r7, r2
   11084:	mov	r6, r3
   11088:	str	r8, [sp, #16]
   1108c:	str	lr, [sp, #20]
   11090:	bl	12188 <getc@plt+0x16fc>
   11094:	lsl	r0, r0, #3
   11098:	ldr	r8, [sp, #16]
   1109c:	lsl	r1, r4, #3
   110a0:	add	r0, r0, #68	; 0x44
   110a4:	ldr	r3, [r5, r0]
   110a8:	add	r2, r5, r0
   110ac:	add	r1, r1, #10176	; 0x27c0
   110b0:	add	r1, r1, #4
   110b4:	add	ip, r5, r1
   110b8:	add	r3, r3, r7
   110bc:	str	r3, [r5, r0]
   110c0:	ldr	r3, [r2, #4]
   110c4:	add	r3, r3, r6
   110c8:	str	r3, [r2, #4]
   110cc:	ldr	r2, [r5, #2116]	; 0x844
   110d0:	ldr	r3, [r5, #2120]	; 0x848
   110d4:	add	r2, r2, r7
   110d8:	add	r3, r3, r6
   110dc:	str	r2, [r5, #2116]	; 0x844
   110e0:	str	r3, [r5, #2120]	; 0x848
   110e4:	ldr	r3, [r5, r1]
   110e8:	add	r3, r3, r7
   110ec:	str	r3, [r5, r1]
   110f0:	ldr	r2, [ip, #4]
   110f4:	ldrd	r4, [sp]
   110f8:	add	r2, r2, r6
   110fc:	ldrd	r6, [sp, #8]
   11100:	add	sp, sp, #20
   11104:	str	r2, [ip, #4]
   11108:	pop	{pc}		; (ldr pc, [sp], #4)
   1110c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11110:	add	r4, r0, #2112	; 0x840
   11114:	mov	r5, r3
   11118:	add	r4, r4, #12
   1111c:	strd	r6, [sp, #8]
   11120:	mov	r6, r2
   11124:	mov	r0, r4
   11128:	mov	r7, r1
   1112c:	str	r8, [sp, #16]
   11130:	str	lr, [sp, #20]
   11134:	bl	11dc4 <getc@plt+0x1338>
   11138:	cmp	r0, #0
   1113c:	beq	1116c <getc@plt+0x6e0>
   11140:	ldr	ip, [r0, #12]
   11144:	ldr	r1, [r0, #16]
   11148:	ldr	r8, [sp, #16]
   1114c:	add	ip, ip, r6
   11150:	ldrd	r6, [sp, #8]
   11154:	add	r1, r1, r5
   11158:	ldrd	r4, [sp]
   1115c:	add	sp, sp, #20
   11160:	str	ip, [r0, #12]
   11164:	str	r1, [r0, #16]
   11168:	pop	{pc}		; (ldr pc, [sp], #4)
   1116c:	mov	r1, #20
   11170:	mov	r0, #1
   11174:	bl	12590 <error@@Base+0x5c>
   11178:	mov	r8, r0
   1117c:	mov	r0, r7
   11180:	bl	1096c <strdup@plt>
   11184:	mov	r1, r8
   11188:	ldr	lr, [sp, #20]
   1118c:	str	r0, [r8, #8]
   11190:	mov	r0, r4
   11194:	str	r6, [r8, #12]
   11198:	str	r5, [r8, #16]
   1119c:	ldrd	r4, [sp]
   111a0:	ldrd	r6, [sp, #8]
   111a4:	ldr	r8, [sp, #16]
   111a8:	add	sp, sp, #24
   111ac:	b	11e50 <getc@plt+0x13c4>
   111b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   111b4:	strd	r6, [sp, #8]
   111b8:	mov	r6, r0
   111bc:	mov	r0, r1
   111c0:	strd	r8, [sp, #16]
   111c4:	mov	r8, r1
   111c8:	ldr	r1, [pc, #884]	; 11544 <getc@plt+0xab8>
   111cc:	str	sl, [sp, #24]
   111d0:	ldr	r5, [pc, #880]	; 11548 <getc@plt+0xabc>
   111d4:	str	lr, [sp, #28]
   111d8:	sub	sp, sp, #24
   111dc:	add	r1, pc, r1
   111e0:	bl	12658 <error@@Base+0x124>
   111e4:	add	r5, pc, r5
   111e8:	mov	r2, r0
   111ec:	mov	r4, r0
   111f0:	mov	r1, #99	; 0x63
   111f4:	mov	r0, r5
   111f8:	bl	10954 <fgets@plt>
   111fc:	cmp	r0, #0
   11200:	beq	11520 <getc@plt+0xa94>
   11204:	ldr	r1, [pc, #832]	; 1154c <getc@plt+0xac0>
   11208:	mov	r2, #40	; 0x28
   1120c:	mov	r0, r5
   11210:	add	r1, pc, r1
   11214:	bl	10a74 <strncmp@plt>
   11218:	cmp	r0, #0
   1121c:	bne	11520 <getc@plt+0xa94>
   11220:	mov	r2, r4
   11224:	mov	r1, #99	; 0x63
   11228:	mov	r0, r5
   1122c:	bl	10954 <fgets@plt>
   11230:	cmp	r0, #0
   11234:	beq	11520 <getc@plt+0xa94>
   11238:	ldr	r1, [pc, #784]	; 11550 <getc@plt+0xac4>
   1123c:	mov	r0, r5
   11240:	add	r1, pc, r1
   11244:	bl	10918 <strcmp@plt>
   11248:	cmp	r0, #0
   1124c:	bne	11520 <getc@plt+0xa94>
   11250:	mov	r2, r6
   11254:	add	r1, sp, #4
   11258:	mov	r0, r4
   1125c:	bl	10d60 <getc@plt+0x2d4>
   11260:	cmp	r0, #0
   11264:	beq	11520 <getc@plt+0xa94>
   11268:	add	r2, r6, #4
   1126c:	add	r1, sp, #8
   11270:	mov	r0, r4
   11274:	bl	10d60 <getc@plt+0x2d4>
   11278:	cmp	r0, #0
   1127c:	beq	11520 <getc@plt+0xa94>
   11280:	mov	r2, r4
   11284:	mov	r1, #99	; 0x63
   11288:	mov	r0, r5
   1128c:	bl	10954 <fgets@plt>
   11290:	cmp	r0, #0
   11294:	beq	11520 <getc@plt+0xa94>
   11298:	mov	r0, r5
   1129c:	mov	r2, r4
   112a0:	mov	r1, #99	; 0x63
   112a4:	bl	10954 <fgets@plt>
   112a8:	cmp	r0, #0
   112ac:	beq	11520 <getc@plt+0xa94>
   112b0:	add	r7, sp, #12
   112b4:	add	r2, r6, #8
   112b8:	mov	r1, r7
   112bc:	mov	r0, r4
   112c0:	bl	10d60 <getc@plt+0x2d4>
   112c4:	cmp	r0, #0
   112c8:	beq	11520 <getc@plt+0xa94>
   112cc:	add	r2, r6, #12
   112d0:	mov	r1, r7
   112d4:	mov	r0, r4
   112d8:	bl	10d60 <getc@plt+0x2d4>
   112dc:	cmp	r0, #0
   112e0:	beq	11520 <getc@plt+0xa94>
   112e4:	add	r2, r6, #16
   112e8:	mov	r1, r7
   112ec:	mov	r0, r4
   112f0:	bl	10d60 <getc@plt+0x2d4>
   112f4:	cmp	r0, #0
   112f8:	beq	11520 <getc@plt+0xa94>
   112fc:	ldr	r5, [pc, #592]	; 11554 <getc@plt+0xac8>
   11300:	mov	r2, r4
   11304:	mov	r1, #99	; 0x63
   11308:	add	r5, pc, r5
   1130c:	mov	r0, r5
   11310:	bl	10954 <fgets@plt>
   11314:	cmp	r0, #0
   11318:	beq	11520 <getc@plt+0xa94>
   1131c:	mov	r2, r4
   11320:	mov	r1, #99	; 0x63
   11324:	mov	r0, r5
   11328:	bl	10954 <fgets@plt>
   1132c:	cmp	r0, #0
   11330:	beq	11520 <getc@plt+0xa94>
   11334:	mov	r2, r4
   11338:	mov	r1, #99	; 0x63
   1133c:	mov	r0, r5
   11340:	bl	10954 <fgets@plt>
   11344:	cmp	r0, #0
   11348:	beq	11520 <getc@plt+0xa94>
   1134c:	mov	r2, r4
   11350:	mov	r1, #99	; 0x63
   11354:	mov	r0, r5
   11358:	bl	10954 <fgets@plt>
   1135c:	cmp	r0, #0
   11360:	beq	11520 <getc@plt+0xa94>
   11364:	add	r1, r6, #20
   11368:	mov	r0, r4
   1136c:	bl	10dec <getc@plt+0x360>
   11370:	cmp	r0, #0
   11374:	beq	11520 <getc@plt+0xa94>
   11378:	add	r1, r6, #36	; 0x24
   1137c:	mov	r0, r4
   11380:	bl	10dec <getc@plt+0x360>
   11384:	cmp	r0, #0
   11388:	beq	11520 <getc@plt+0xa94>
   1138c:	add	r1, r6, #52	; 0x34
   11390:	mov	r0, r4
   11394:	bl	10dec <getc@plt+0x360>
   11398:	cmp	r0, #0
   1139c:	beq	11520 <getc@plt+0xa94>
   113a0:	mov	r2, r4
   113a4:	mov	r1, #99	; 0x63
   113a8:	mov	r0, r5
   113ac:	bl	10954 <fgets@plt>
   113b0:	cmp	r0, #0
   113b4:	bne	113c8 <getc@plt+0x93c>
   113b8:	b	11520 <getc@plt+0xa94>
   113bc:	ldrb	r3, [r5]
   113c0:	cmp	r3, #10
   113c4:	beq	113e0 <getc@plt+0x954>
   113c8:	mov	r2, r4
   113cc:	mov	r1, #99	; 0x63
   113d0:	mov	r0, r5
   113d4:	bl	10954 <fgets@plt>
   113d8:	cmp	r0, #0
   113dc:	bne	113bc <getc@plt+0x930>
   113e0:	ldr	r3, [sp, #8]
   113e4:	cmp	r3, #0
   113e8:	bgt	1141c <getc@plt+0x990>
   113ec:	ldr	r3, [sp, #4]
   113f0:	cmp	r3, #0
   113f4:	bgt	11480 <getc@plt+0x9f4>
   113f8:	mov	r0, r4
   113fc:	bl	12394 <getc@plt+0x1908>
   11400:	add	sp, sp, #24
   11404:	ldrd	r4, [sp]
   11408:	ldrd	r6, [sp, #8]
   1140c:	ldrd	r8, [sp, #16]
   11410:	ldr	sl, [sp, #24]
   11414:	add	sp, sp, #28
   11418:	pop	{pc}		; (ldr pc, [sp], #4)
   1141c:	ldr	r0, [pc, #308]	; 11558 <getc@plt+0xacc>
   11420:	mov	r2, r4
   11424:	mov	r1, #99	; 0x63
   11428:	add	r0, pc, r0
   1142c:	bl	10954 <fgets@plt>
   11430:	cmp	r0, #0
   11434:	beq	113ec <getc@plt+0x960>
   11438:	ldr	r8, [pc, #284]	; 1155c <getc@plt+0xad0>
   1143c:	add	r5, sp, #16
   11440:	add	r8, pc, r8
   11444:	add	r8, r8, #20
   11448:	b	1145c <getc@plt+0x9d0>
   1144c:	mov	r1, r8
   11450:	mov	r0, r6
   11454:	ldrd	r2, [sp, #12]
   11458:	bl	1110c <getc@plt+0x680>
   1145c:	mov	r2, r5
   11460:	mov	r1, r7
   11464:	mov	r0, r4
   11468:	bl	10ea8 <getc@plt+0x41c>
   1146c:	cmp	r0, #0
   11470:	bne	1144c <getc@plt+0x9c0>
   11474:	ldr	r3, [sp, #4]
   11478:	cmp	r3, #0
   1147c:	ble	113f8 <getc@plt+0x96c>
   11480:	ldr	r0, [pc, #216]	; 11560 <getc@plt+0xad4>
   11484:	mov	r2, r4
   11488:	mov	r1, #99	; 0x63
   1148c:	add	r0, pc, r0
   11490:	bl	10954 <fgets@plt>
   11494:	cmp	r0, #0
   11498:	beq	113f8 <getc@plt+0x96c>
   1149c:	ldr	r8, [pc, #192]	; 11564 <getc@plt+0xad8>
   114a0:	add	r5, sp, #16
   114a4:	ldr	sl, [pc, #188]	; 11568 <getc@plt+0xadc>
   114a8:	add	r8, pc, r8
   114ac:	add	r9, r8, #31
   114b0:	add	sl, pc, sl
   114b4:	b	114d8 <getc@plt+0xa4c>
   114b8:	cmp	r3, #92	; 0x5c
   114bc:	bne	11508 <getc@plt+0xa7c>
   114c0:	mov	r3, #10
   114c4:	mov	r1, r3
   114c8:	str	r3, [sp, #20]
   114cc:	mov	r0, r6
   114d0:	ldrd	r2, [sp, #12]
   114d4:	bl	1106c <getc@plt+0x5e0>
   114d8:	mov	r2, r5
   114dc:	mov	r1, r7
   114e0:	mov	r0, r4
   114e4:	bl	10ea8 <getc@plt+0x41c>
   114e8:	cmp	r0, #0
   114ec:	beq	113f8 <getc@plt+0x96c>
   114f0:	ldrb	r3, [r8, #31]
   114f4:	cmp	r3, #125	; 0x7d
   114f8:	bne	114b8 <getc@plt+0xa2c>
   114fc:	ldrb	r1, [r8, #30]
   11500:	str	r1, [sp, #20]
   11504:	b	114cc <getc@plt+0xa40>
   11508:	mov	r1, sl
   1150c:	add	r2, sp, #20
   11510:	mov	r0, r9
   11514:	bl	10a38 <__isoc99_sscanf@plt>
   11518:	ldr	r1, [sp, #20]
   1151c:	b	114cc <getc@plt+0xa40>
   11520:	cmp	r8, #0
   11524:	beq	11538 <getc@plt+0xaac>
   11528:	ldr	r0, [pc, #60]	; 1156c <getc@plt+0xae0>
   1152c:	mov	r1, r8
   11530:	add	r0, pc, r0
   11534:	bl	125f8 <error@@Base+0xc4>
   11538:	ldr	r8, [pc, #48]	; 11570 <getc@plt+0xae4>
   1153c:	add	r8, pc, r8
   11540:	b	11528 <getc@plt+0xa9c>
   11544:	andeq	r2, r0, ip, ror r3
   11548:	andeq	r3, r1, r8, ror #29
   1154c:	andeq	r2, r0, ip, asr #6
   11550:	andeq	r2, r0, r8, asr #6
   11554:	andeq	r3, r1, r4, asr #27
   11558:	andeq	r3, r1, r4, lsr #25
   1155c:	andeq	r3, r1, ip, lsl #25
   11560:	andeq	r3, r1, r0, asr #24
   11564:	andeq	r3, r1, r4, lsr #24
   11568:	andeq	r2, r0, r4, lsl #2
   1156c:	andeq	r2, r0, r8, lsl #1
   11570:	andeq	r2, r0, r4, lsl r0
   11574:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11578:	mov	r4, #0
   1157c:	strd	r6, [sp, #8]
   11580:	mov	r6, r0
   11584:	mov	r0, r1
   11588:	ldr	r1, [pc, #848]	; 118e0 <getc@plt+0xe54>
   1158c:	add	r5, r6, #68	; 0x44
   11590:	strd	r8, [sp, #16]
   11594:	str	lr, [sp, #24]
   11598:	sub	sp, sp, #20
   1159c:	ldr	r8, [pc, #832]	; 118e4 <getc@plt+0xe58>
   115a0:	add	r1, pc, r1
   115a4:	ldr	r9, [pc, #828]	; 118e8 <getc@plt+0xe5c>
   115a8:	bl	12658 <error@@Base+0x124>
   115ac:	ldr	r3, [pc, #824]	; 118ec <getc@plt+0xe60>
   115b0:	mov	r7, r0
   115b4:	add	r8, pc, r8
   115b8:	ldr	r2, [pc, #816]	; 118f0 <getc@plt+0xe64>
   115bc:	add	r9, pc, r9
   115c0:	ldr	r1, [pc, #812]	; 118f4 <getc@plt+0xe68>
   115c4:	add	r3, pc, r3
   115c8:	add	r2, pc, r2
   115cc:	add	r1, pc, r1
   115d0:	bl	10a20 <fprintf@plt>
   115d4:	ldr	r3, [pc, #796]	; 118f8 <getc@plt+0xe6c>
   115d8:	mov	r1, r8
   115dc:	mov	r0, r7
   115e0:	ldr	r2, [r6]
   115e4:	add	r3, pc, r3
   115e8:	bl	10a20 <fprintf@plt>
   115ec:	ldr	r3, [pc, #776]	; 118fc <getc@plt+0xe70>
   115f0:	mov	r1, r8
   115f4:	mov	r0, r7
   115f8:	ldr	r2, [r6, #4]
   115fc:	add	r3, pc, r3
   11600:	bl	10a20 <fprintf@plt>
   11604:	ldr	r2, [r6]
   11608:	mov	r0, r7
   1160c:	ldr	r1, [r6, #4]
   11610:	sub	r1, r2, r1
   11614:	bl	10f18 <getc@plt+0x48c>
   11618:	ldr	r1, [pc, #736]	; 11900 <getc@plt+0xe74>
   1161c:	mov	r0, r7
   11620:	add	r1, pc, r1
   11624:	bl	10a20 <fprintf@plt>
   11628:	ldr	r3, [pc, #724]	; 11904 <getc@plt+0xe78>
   1162c:	mov	r1, r8
   11630:	mov	r0, r7
   11634:	ldr	r2, [r6, #8]
   11638:	add	r3, pc, r3
   1163c:	bl	10a20 <fprintf@plt>
   11640:	ldr	r3, [pc, #704]	; 11908 <getc@plt+0xe7c>
   11644:	mov	r1, r8
   11648:	mov	r0, r7
   1164c:	ldr	r2, [r6, #12]
   11650:	add	r3, pc, r3
   11654:	bl	10a20 <fprintf@plt>
   11658:	ldr	r3, [pc, #684]	; 1190c <getc@plt+0xe80>
   1165c:	mov	r1, r8
   11660:	mov	r0, r7
   11664:	ldr	r2, [r6, #16]
   11668:	add	r3, pc, r3
   1166c:	bl	10a20 <fprintf@plt>
   11670:	mov	r0, r7
   11674:	ldr	r2, [r6]
   11678:	ldr	r1, [r6, #8]
   1167c:	ldr	r3, [r6, #12]
   11680:	add	r1, r1, r3
   11684:	bl	10f18 <getc@plt+0x48c>
   11688:	ldr	r1, [pc, #640]	; 11910 <getc@plt+0xe84>
   1168c:	mov	r0, r7
   11690:	add	r1, pc, r1
   11694:	bl	10a20 <fprintf@plt>
   11698:	ldr	r2, [r6]
   1169c:	mov	r0, r7
   116a0:	ldr	r1, [r6, #48]	; 0x30
   116a4:	sub	r1, r2, r1
   116a8:	bl	10f18 <getc@plt+0x48c>
   116ac:	ldr	r1, [pc, #608]	; 11914 <getc@plt+0xe88>
   116b0:	mov	r0, r7
   116b4:	add	r1, pc, r1
   116b8:	bl	10a20 <fprintf@plt>
   116bc:	ldr	r0, [pc, #596]	; 11918 <getc@plt+0xe8c>
   116c0:	mov	r3, r7
   116c4:	mov	r2, #37	; 0x25
   116c8:	mov	r1, #1
   116cc:	add	r0, pc, r0
   116d0:	bl	109a8 <fwrite@plt>
   116d4:	ldr	r3, [pc, #576]	; 1191c <getc@plt+0xe90>
   116d8:	mov	r1, r9
   116dc:	mov	r0, r7
   116e0:	ldr	lr, [r6, #28]
   116e4:	ldr	ip, [r6, #32]
   116e8:	add	r3, pc, r3
   116ec:	str	r3, [sp, #8]
   116f0:	ldr	r2, [r6, #20]
   116f4:	str	lr, [sp]
   116f8:	ldr	r3, [r6, #24]
   116fc:	str	ip, [sp, #4]
   11700:	bl	10a20 <fprintf@plt>
   11704:	ldr	r3, [pc, #532]	; 11920 <getc@plt+0xe94>
   11708:	mov	r1, r9
   1170c:	mov	r0, r7
   11710:	ldr	r2, [r6, #44]	; 0x2c
   11714:	ldr	ip, [r6, #48]	; 0x30
   11718:	add	r3, pc, r3
   1171c:	str	r2, [sp]
   11720:	str	r3, [sp, #8]
   11724:	ldr	r2, [r6, #36]	; 0x24
   11728:	str	ip, [sp, #4]
   1172c:	ldr	r3, [r6, #40]	; 0x28
   11730:	bl	10a20 <fprintf@plt>
   11734:	ldr	r3, [pc, #488]	; 11924 <getc@plt+0xe98>
   11738:	mov	r1, r9
   1173c:	mov	r0, r7
   11740:	ldr	lr, [r6, #60]	; 0x3c
   11744:	ldr	ip, [r6, #64]	; 0x40
   11748:	add	r3, pc, r3
   1174c:	str	r3, [sp, #8]
   11750:	ldr	r2, [r6, #52]	; 0x34
   11754:	str	lr, [sp]
   11758:	ldr	r3, [r6, #56]	; 0x38
   1175c:	str	ip, [sp, #4]
   11760:	bl	10a20 <fprintf@plt>
   11764:	ldr	r1, [pc, #444]	; 11928 <getc@plt+0xe9c>
   11768:	mov	r0, r7
   1176c:	add	r1, pc, r1
   11770:	bl	10a20 <fprintf@plt>
   11774:	ldr	r3, [r5, r4, lsl #3]
   11778:	mov	r0, r4
   1177c:	cmp	r3, #0
   11780:	ble	1179c <getc@plt+0xd10>
   11784:	bl	121d0 <getc@plt+0x1744>
   11788:	mov	r2, r0
   1178c:	mov	r3, #0
   11790:	add	r1, r5, r4, lsl #3
   11794:	mov	r0, r7
   11798:	bl	10fbc <getc@plt+0x530>
   1179c:	add	r4, r4, #1
   117a0:	cmp	r4, #256	; 0x100
   117a4:	bne	11774 <getc@plt+0xce8>
   117a8:	ldr	r2, [pc, #380]	; 1192c <getc@plt+0xea0>
   117ac:	add	r1, r6, #2112	; 0x840
   117b0:	mov	r3, #0
   117b4:	add	r1, r1, #4
   117b8:	mov	r0, r7
   117bc:	add	r2, pc, r2
   117c0:	bl	10fbc <getc@plt+0x530>
   117c4:	ldr	r3, [r6, #4]
   117c8:	cmp	r3, #0
   117cc:	bgt	117fc <getc@plt+0xd70>
   117d0:	ldr	r3, [r6]
   117d4:	cmp	r3, #0
   117d8:	bgt	1188c <getc@plt+0xe00>
   117dc:	mov	r0, r7
   117e0:	add	sp, sp, #20
   117e4:	ldrd	r4, [sp]
   117e8:	ldrd	r6, [sp, #8]
   117ec:	ldrd	r8, [sp, #16]
   117f0:	ldr	lr, [sp, #24]
   117f4:	add	sp, sp, #28
   117f8:	b	12394 <getc@plt+0x1908>
   117fc:	add	r0, r6, #2112	; 0x840
   11800:	add	r5, r6, #8192	; 0x2000
   11804:	add	r0, r0, #12
   11808:	bl	11f58 <getc@plt+0x14cc>
   1180c:	ldr	r2, [pc, #284]	; 11930 <getc@plt+0xea4>
   11810:	ldr	r1, [r5, #1980]	; 0x7bc
   11814:	ldr	r0, [r5, #1984]	; 0x7c0
   11818:	add	r2, pc, r2
   1181c:	bl	11ae4 <getc@plt+0x1058>
   11820:	ldr	r0, [pc, #268]	; 11934 <getc@plt+0xea8>
   11824:	mov	r3, r7
   11828:	mov	r2, #39	; 0x27
   1182c:	mov	r1, #1
   11830:	add	r0, pc, r0
   11834:	bl	109a8 <fwrite@plt>
   11838:	ldr	r3, [r5, #1984]	; 0x7c0
   1183c:	cmp	r3, #0
   11840:	ble	117d0 <getc@plt+0xd44>
   11844:	ldr	r8, [pc, #236]	; 11938 <getc@plt+0xeac>
   11848:	mov	r4, #0
   1184c:	add	r8, pc, r8
   11850:	ldr	r3, [r5, #1980]	; 0x7bc
   11854:	mov	r1, r8
   11858:	mov	r0, r7
   1185c:	ldr	r3, [r3, r4, lsl #2]
   11860:	add	r4, r4, #1
   11864:	ldr	ip, [r3, #8]
   11868:	ldrd	r2, [r3, #12]
   1186c:	str	ip, [sp]
   11870:	bl	10a20 <fprintf@plt>
   11874:	ldr	r3, [r5, #1984]	; 0x7c0
   11878:	cmp	r3, r4
   1187c:	bgt	11850 <getc@plt+0xdc4>
   11880:	ldr	r3, [r6]
   11884:	cmp	r3, #0
   11888:	ble	117dc <getc@plt+0xd50>
   1188c:	ldr	r1, [pc, #168]	; 1193c <getc@plt+0xeb0>
   11890:	add	r5, r6, #10176	; 0x27c0
   11894:	mov	r0, r7
   11898:	movw	r6, #65535	; 0xffff
   1189c:	movt	r6, #16
   118a0:	add	r5, r5, #4
   118a4:	mov	r4, #0
   118a8:	add	r1, pc, r1
   118ac:	bl	10a20 <fprintf@plt>
   118b0:	ldr	ip, [r5, r4, lsl #3]
   118b4:	mov	r2, #0
   118b8:	mov	r3, r4
   118bc:	add	r1, r5, r4, lsl #3
   118c0:	mov	r0, r7
   118c4:	add	r4, r4, #1
   118c8:	cmp	ip, r2
   118cc:	ble	118d4 <getc@plt+0xe48>
   118d0:	bl	10fbc <getc@plt+0x530>
   118d4:	cmp	r4, r6
   118d8:	bne	118b0 <getc@plt+0xe24>
   118dc:	b	117dc <getc@plt+0xd50>
   118e0:	andeq	r2, r0, ip, lsr #32
   118e4:	andeq	r2, r0, r0, lsr r0
   118e8:	ldrdeq	r2, [r0], -ip
   118ec:	andeq	r1, r0, r4, asr #31
   118f0:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   118f4:	andeq	r2, r0, r4
   118f8:	strdeq	r1, [r0], -r4
   118fc:	strdeq	r1, [r0], -r4
   11900:	ldrdeq	r1, [r0], -r8
   11904:	ldrdeq	r1, [r0], -r0
   11908:	andeq	r1, r0, ip, asr #31
   1190c:	andeq	r1, r0, r4, asr #31
   11910:	andeq	r1, r0, r8, lsr #31
   11914:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   11918:	andeq	r1, r0, r4, lsr #31
   1191c:	andeq	r1, r0, ip, asr #31
   11920:	andeq	r1, r0, r4, lsr #31
   11924:	andeq	r1, r0, r0, lsl #31
   11928:	andeq	r1, r0, r4, ror #30
   1192c:	andeq	r1, r0, ip, lsl #30
   11930:			; <UNDEFINED> instruction: 0xfffff768
   11934:	andeq	r1, r0, r0, asr #29
   11938:	andeq	r1, r0, ip, asr #29
   1193c:	andeq	r1, r0, r8, lsr #28
   11940:	ldr	r3, [pc, #400]	; 11ad8 <getc@plt+0x104c>
   11944:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11948:	strd	r6, [sp, #8]
   1194c:	ldr	r6, [pc, #392]	; 11adc <getc@plt+0x1050>
   11950:	strd	r8, [sp, #16]
   11954:	add	r3, pc, r3
   11958:	strd	sl, [sp, #24]
   1195c:	str	lr, [sp, #32]
   11960:	sub	sp, sp, #20
   11964:	add	r6, pc, r6
   11968:	str	r0, [sp]
   1196c:	str	r3, [sp, #8]
   11970:	lsl	r3, r1, #2
   11974:	str	r1, [sp, #4]
   11978:	str	r3, [sp, #12]
   1197c:	ldr	r3, [sp]
   11980:	ldr	r2, [sp, #4]
   11984:	cmp	r3, r2
   11988:	ldr	r2, [sp, #8]
   1198c:	ldr	r1, [r2]
   11990:	ldr	r4, [r1, r3, lsl #2]
   11994:	bge	11ac8 <getc@plt+0x103c>
   11998:	ldr	r5, [pc, #320]	; 11ae0 <getc@plt+0x1054>
   1199c:	ldm	sp, {r8, fp}
   119a0:	add	r5, pc, r5
   119a4:	mov	r0, r4
   119a8:	ldr	r1, [r1, fp, lsl #2]
   119ac:	lsl	r9, fp, #2
   119b0:	ldr	r3, [r5, #4]
   119b4:	blx	r3
   119b8:	cmp	r0, #0
   119bc:	bge	11a50 <getc@plt+0xfc4>
   119c0:	sub	fp, fp, #1
   119c4:	ldr	r1, [r5]
   119c8:	cmp	r8, fp
   119cc:	lslge	r9, fp, #2
   119d0:	blt	119a4 <getc@plt+0xf18>
   119d4:	cmp	fp, r8
   119d8:	add	r7, r1, r9
   119dc:	beq	11a60 <getc@plt+0xfd4>
   119e0:	ldr	r3, [r1, r9]
   119e4:	add	sl, r8, #1
   119e8:	lsl	r7, r8, #2
   119ec:	cmp	fp, sl
   119f0:	str	r3, [r1, r8, lsl #2]
   119f4:	bgt	11a0c <getc@plt+0xf80>
   119f8:	b	11aa8 <getc@plt+0x101c>
   119fc:	add	sl, sl, #1
   11a00:	ldr	r1, [r6]
   11a04:	cmp	fp, sl
   11a08:	beq	11a58 <getc@plt+0xfcc>
   11a0c:	mov	r0, r4
   11a10:	ldr	r1, [r1, sl, lsl #2]
   11a14:	lsl	r7, sl, #2
   11a18:	ldr	r3, [r6, #4]
   11a1c:	blx	r3
   11a20:	cmp	r0, #0
   11a24:	bgt	119fc <getc@plt+0xf70>
   11a28:	ldr	r1, [r6]
   11a2c:	mov	r8, sl
   11a30:	add	r7, r1, r7
   11a34:	ldr	r3, [r7]
   11a38:	sub	fp, fp, #1
   11a3c:	cmp	fp, sl
   11a40:	str	r3, [r1, r9]
   11a44:	bgt	119a4 <getc@plt+0xf18>
   11a48:	add	r7, r1, fp, lsl #2
   11a4c:	b	11a64 <getc@plt+0xfd8>
   11a50:	ldr	r1, [r5]
   11a54:	b	119d4 <getc@plt+0xf48>
   11a58:	add	r7, r1, r9
   11a5c:	mov	r8, fp
   11a60:	mov	fp, r8
   11a64:	ldr	r3, [sp]
   11a68:	sub	r1, fp, #1
   11a6c:	str	r4, [r7]
   11a70:	cmp	r3, r1
   11a74:	blt	11abc <getc@plt+0x1030>
   11a78:	ldr	r2, [sp, #4]
   11a7c:	add	r3, r8, #1
   11a80:	str	r3, [sp]
   11a84:	cmp	r3, r2
   11a88:	blt	1197c <getc@plt+0xef0>
   11a8c:	add	sp, sp, #20
   11a90:	ldrd	r4, [sp]
   11a94:	ldrd	r6, [sp, #8]
   11a98:	ldrd	r8, [sp, #16]
   11a9c:	ldrd	sl, [sp, #24]
   11aa0:	add	sp, sp, #32
   11aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa8:	add	r7, r7, #4
   11aac:	add	r7, r1, r7
   11ab0:	beq	11a5c <getc@plt+0xfd0>
   11ab4:	mov	r8, sl
   11ab8:	b	11a34 <getc@plt+0xfa8>
   11abc:	mov	r0, r3
   11ac0:	bl	11940 <getc@plt+0xeb4>
   11ac4:	b	11a78 <getc@plt+0xfec>
   11ac8:	ldm	sp, {r8, fp}
   11acc:	ldr	r3, [sp, #12]
   11ad0:	add	r7, r1, r3
   11ad4:	b	11a64 <getc@plt+0xfd8>
   11ad8:	ldrdeq	r3, [r1], -ip
   11adc:	andeq	r3, r1, ip, asr #15
   11ae0:	muleq	r1, r0, r7
   11ae4:	cmp	r0, #1
   11ae8:	mov	ip, r1
   11aec:	ble	11b0c <getc@plt+0x1080>
   11af0:	ldr	r3, [pc, #24]	; 11b10 <getc@plt+0x1084>
   11af4:	sub	r1, r0, #1
   11af8:	mov	r0, #0
   11afc:	add	r3, pc, r3
   11b00:	str	ip, [r3]
   11b04:	str	r2, [r3, #4]
   11b08:	b	11940 <getc@plt+0xeb4>
   11b0c:	bx	lr
   11b10:	andeq	r3, r1, r4, lsr r6
   11b14:	andeq	r0, r0, r0
   11b18:	strd	r4, [sp, #-16]!
   11b1c:	mov	r4, r0
   11b20:	mov	r0, #1
   11b24:	str	r6, [sp, #8]
   11b28:	mov	r6, r1
   11b2c:	mov	r1, #32
   11b30:	mov	r5, r2
   11b34:	str	lr, [sp, #12]
   11b38:	bl	12590 <error@@Base+0x5c>
   11b3c:	mov	ip, r0
   11b40:	ldr	lr, [sp, #12]
   11b44:	mov	r0, r4
   11b48:	mov	r1, ip
   11b4c:	str	r6, [ip, #8]
   11b50:	str	r5, [ip, #12]
   11b54:	ldr	ip, [r4, #24]
   11b58:	ldr	r3, [r4, #28]
   11b5c:	add	ip, ip, r6
   11b60:	ldr	r6, [sp, #8]
   11b64:	add	r3, r3, r5
   11b68:	str	ip, [r4, #24]
   11b6c:	str	r3, [r4, #28]
   11b70:	ldrd	r4, [sp]
   11b74:	add	sp, sp, #16
   11b78:	b	131a0 <error@@Base+0xc6c>
   11b7c:	strd	r4, [sp, #-16]!
   11b80:	str	r6, [sp, #8]
   11b84:	str	lr, [sp, #12]
   11b88:	sub	sp, sp, #24
   11b8c:	ldr	lr, [r0]
   11b90:	cmp	lr, #0
   11b94:	beq	11d48 <getc@plt+0x12bc>
   11b98:	mov	r3, lr
   11b9c:	mov	r4, #0
   11ba0:	ldr	ip, [r3, #8]
   11ba4:	ldr	r3, [r3, #4]
   11ba8:	cmp	ip, #0
   11bac:	addgt	r4, r4, #1
   11bb0:	cmp	r3, #0
   11bb4:	bne	11ba0 <getc@plt+0x1114>
   11bb8:	cmp	r4, #1
   11bbc:	ble	11d48 <getc@plt+0x12bc>
   11bc0:	vldr	d6, [pc, #400]	; 11d58 <getc@plt+0x12cc>
   11bc4:	mov	ip, lr
   11bc8:	ldr	r5, [r0, #24]
   11bcc:	ldr	r6, [r0, #28]
   11bd0:	vldr	s9, [r0, #12]
   11bd4:	vmov.f64	d1, d6
   11bd8:	vmov	s15, r5
   11bdc:	vldr	d5, [pc, #380]	; 11d60 <getc@plt+0x12d4>
   11be0:	sub	r3, r5, r6
   11be4:	vmov	s14, r3
   11be8:	vmov	r3, s9
   11bec:	vcvt.f64.s32	d3, s9
   11bf0:	vcvt.f64.s32	d2, s15
   11bf4:	sub	r3, r3, #1
   11bf8:	vcvt.f64.s32	d7, s14
   11bfc:	vmov	s8, r3
   11c00:	vmul.f64	d7, d7, d6
   11c04:	vcvt.f64.s32	d4, s8
   11c08:	vdiv.f64	d6, d7, d2
   11c0c:	vmul.f64	d2, d3, d6
   11c10:	vstr	d6, [r0, #32]
   11c14:	ldr	r3, [ip, #8]
   11c18:	ldr	r4, [ip, #12]
   11c1c:	sub	r3, r5, r3
   11c20:	sub	r4, r6, r4
   11c24:	vmov	s15, r3
   11c28:	sub	r3, r3, r4
   11c2c:	vmov	s14, r3
   11c30:	vcvt.f64.s32	d0, s15
   11c34:	vcvt.f64.s32	d7, s14
   11c38:	vmul.f64	d7, d7, d1
   11c3c:	vdiv.f64	d6, d7, d0
   11c40:	vmov.f64	d7, d2
   11c44:	vmls.f64	d7, d6, d4
   11c48:	vstr	d6, [ip, #16]
   11c4c:	vadd.f64	d5, d5, d6
   11c50:	vstr	d7, [ip, #24]
   11c54:	ldr	ip, [ip, #4]
   11c58:	cmp	ip, #0
   11c5c:	bne	11c14 <getc@plt+0x1188>
   11c60:	vmul.f64	d5, d5, d4
   11c64:	vldr	d6, [pc, #244]	; 11d60 <getc@plt+0x12d4>
   11c68:	vdiv.f64	d7, d5, d3
   11c6c:	vsub.f64	d5, d2, d7
   11c70:	vstr	d5, [r0, #40]	; 0x28
   11c74:	vldr	d7, [lr, #24]
   11c78:	ldr	lr, [lr, #4]
   11c7c:	vsub.f64	d7, d7, d5
   11c80:	cmp	lr, #0
   11c84:	vmla.f64	d6, d7, d7
   11c88:	bne	11c74 <getc@plt+0x11e8>
   11c8c:	vdiv.f64	d7, d6, d4
   11c90:	vdiv.f64	d0, d7, d3
   11c94:	vcmp.f64	d0, #0.0
   11c98:	vsqrt.f64	d7, d0
   11c9c:	vmrs	APSR_nzcv, fpscr
   11ca0:	bmi	11d24 <getc@plt+0x1298>
   11ca4:	vldr	d4, [pc, #188]	; 11d68 <getc@plt+0x12dc>
   11ca8:	vldr	d6, [pc, #168]	; 11d58 <getc@plt+0x12cc>
   11cac:	vmul.f64	d7, d7, d4
   11cb0:	vsub.f64	d5, d5, d7
   11cb4:	vcmpe.f64	d5, d6
   11cb8:	vmrs	APSR_nzcv, fpscr
   11cbc:	vmovgt.f64	d5, d6
   11cc0:	ble	11d10 <getc@plt+0x1284>
   11cc4:	vstr	d5, [r1]
   11cc8:	vldr	d5, [r0, #40]	; 0x28
   11ccc:	vldr	d6, [pc, #132]	; 11d58 <getc@plt+0x12cc>
   11cd0:	vadd.f64	d7, d7, d5
   11cd4:	vcmpe.f64	d7, d6
   11cd8:	vmrs	APSR_nzcv, fpscr
   11cdc:	vmovgt.f64	d7, d6
   11ce0:	ble	11cfc <getc@plt+0x1270>
   11ce4:	vstr	d7, [r2]
   11ce8:	add	sp, sp, #24
   11cec:	ldrd	r4, [sp]
   11cf0:	ldr	r6, [sp, #8]
   11cf4:	add	sp, sp, #12
   11cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   11cfc:	vcmp.f64	d7, #0.0
   11d00:	vldr	d6, [pc, #88]	; 11d60 <getc@plt+0x12d4>
   11d04:	vmrs	APSR_nzcv, fpscr
   11d08:	vmovmi.f64	d7, d6
   11d0c:	b	11ce4 <getc@plt+0x1258>
   11d10:	vcmp.f64	d5, #0.0
   11d14:	vldr	d6, [pc, #68]	; 11d60 <getc@plt+0x12d4>
   11d18:	vmrs	APSR_nzcv, fpscr
   11d1c:	vmovmi.f64	d5, d6
   11d20:	b	11cc4 <getc@plt+0x1238>
   11d24:	vstr	d7, [sp]
   11d28:	strd	r0, [sp, #12]
   11d2c:	str	r2, [sp, #20]
   11d30:	bl	10a2c <sqrt@plt>
   11d34:	vldr	d7, [sp]
   11d38:	ldrd	r0, [sp, #12]
   11d3c:	ldr	r2, [sp, #20]
   11d40:	vldr	d5, [r0, #40]	; 0x28
   11d44:	b	11ca4 <getc@plt+0x1218>
   11d48:	ldr	r0, [pc, #32]	; 11d70 <getc@plt+0x12e4>
   11d4c:	add	r0, pc, r0
   11d50:	bl	12534 <error@@Base>
   11d54:	nop	{0}
   11d58:	andeq	r0, r0, r0
   11d5c:	subsmi	r0, r9, r0
	...
   11d68:			; <UNDEFINED> instruction: 0xf5c28f5c
   11d6c:	svccc	0x00ff5c28
   11d70:	ldrdeq	r1, [r0], -ip
   11d74:	strd	r4, [sp, #-16]!
   11d78:	add	r5, r0, #8000	; 0x1f40
   11d7c:	mov	r4, r0
   11d80:	add	r5, r5, #48	; 0x30
   11d84:	str	r6, [sp, #8]
   11d88:	mov	r6, r0
   11d8c:	str	lr, [sp, #12]
   11d90:	mov	r0, r4
   11d94:	add	r4, r4, #16
   11d98:	bl	13130 <error@@Base+0xbfc>
   11d9c:	cmp	r4, r5
   11da0:	bne	11d90 <getc@plt+0x1304>
   11da4:	add	r6, r6, #4096	; 0x1000
   11da8:	mov	r3, #0
   11dac:	ldrd	r4, [sp]
   11db0:	str	r3, [r6, #3952]	; 0xf70
   11db4:	str	r3, [r6, #3956]	; 0xf74
   11db8:	ldr	r6, [sp, #8]
   11dbc:	add	sp, sp, #12
   11dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc4:	strd	r4, [sp, #-16]!
   11dc8:	mov	r5, r1
   11dcc:	str	r6, [sp, #8]
   11dd0:	str	lr, [sp, #12]
   11dd4:	ldrb	r3, [r1]
   11dd8:	cmp	r3, #0
   11ddc:	beq	11e0c <getc@plt+0x1380>
   11de0:	mov	r2, #0
   11de4:	add	r2, r2, r3
   11de8:	ldrb	r3, [r1, #1]!
   11dec:	cmp	r3, #0
   11df0:	bne	11de4 <getc@plt+0x1358>
   11df4:	movw	r3, #20065	; 0x4e61
   11df8:	movt	r3, #33354	; 0x824a
   11dfc:	movw	r1, #503	; 0x1f7
   11e00:	umull	ip, r3, r3, r2
   11e04:	lsr	r3, r3, #8
   11e08:	mls	r3, r1, r3, r2
   11e0c:	ldr	r4, [r0, r3, lsl #4]
   11e10:	cmp	r4, #0
   11e14:	bne	11e28 <getc@plt+0x139c>
   11e18:	b	11e3c <getc@plt+0x13b0>
   11e1c:	ldr	r4, [r4, #4]
   11e20:	cmp	r4, #0
   11e24:	beq	11e3c <getc@plt+0x13b0>
   11e28:	mov	r0, r5
   11e2c:	ldr	r1, [r4, #8]
   11e30:	bl	10918 <strcmp@plt>
   11e34:	cmp	r0, #0
   11e38:	bne	11e1c <getc@plt+0x1390>
   11e3c:	mov	r0, r4
   11e40:	ldrd	r4, [sp]
   11e44:	ldr	r6, [sp, #8]
   11e48:	add	sp, sp, #12
   11e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e50:	ldr	r2, [r1, #8]
   11e54:	str	r4, [sp, #-8]!
   11e58:	mov	r4, r0
   11e5c:	str	lr, [sp, #4]
   11e60:	ldrb	r3, [r2]
   11e64:	cmp	r3, #0
   11e68:	beq	11e9c <getc@plt+0x1410>
   11e6c:	mov	r0, #0
   11e70:	add	r0, r0, r3
   11e74:	ldrb	r3, [r2, #1]!
   11e78:	cmp	r3, #0
   11e7c:	bne	11e70 <getc@plt+0x13e4>
   11e80:	movw	r3, #20065	; 0x4e61
   11e84:	movt	r3, #33354	; 0x824a
   11e88:	movw	r2, #503	; 0x1f7
   11e8c:	umull	ip, r3, r3, r0
   11e90:	lsr	r3, r3, #8
   11e94:	mls	r0, r2, r3, r0
   11e98:	add	r0, r4, r0, lsl #4
   11e9c:	add	r4, r4, #4096	; 0x1000
   11ea0:	bl	13148 <error@@Base+0xc14>
   11ea4:	ldr	r0, [r4, #3952]	; 0xf70
   11ea8:	cmp	r0, #0
   11eac:	beq	11ebc <getc@plt+0x1430>
   11eb0:	bl	1093c <free@plt>
   11eb4:	mov	r3, #0
   11eb8:	str	r3, [r4, #3952]	; 0xf70
   11ebc:	ldr	r3, [r4, #3956]	; 0xf74
   11ec0:	add	r3, r3, #1
   11ec4:	str	r3, [r4, #3956]	; 0xf74
   11ec8:	ldr	r4, [sp]
   11ecc:	add	sp, sp, #4
   11ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ed4:	ldr	r2, [r1, #8]
   11ed8:	str	r4, [sp, #-8]!
   11edc:	mov	r4, r0
   11ee0:	str	lr, [sp, #4]
   11ee4:	ldrb	r3, [r2]
   11ee8:	cmp	r3, #0
   11eec:	beq	11f20 <getc@plt+0x1494>
   11ef0:	mov	r0, #0
   11ef4:	add	r0, r0, r3
   11ef8:	ldrb	r3, [r2, #1]!
   11efc:	cmp	r3, #0
   11f00:	bne	11ef4 <getc@plt+0x1468>
   11f04:	movw	r3, #20065	; 0x4e61
   11f08:	movt	r3, #33354	; 0x824a
   11f0c:	movw	r2, #503	; 0x1f7
   11f10:	umull	ip, r3, r3, r0
   11f14:	lsr	r3, r3, #8
   11f18:	mls	r0, r2, r3, r0
   11f1c:	add	r0, r4, r0, lsl #4
   11f20:	add	r4, r4, #4096	; 0x1000
   11f24:	bl	132a8 <error@@Base+0xd74>
   11f28:	ldr	r0, [r4, #3952]	; 0xf70
   11f2c:	cmp	r0, #0
   11f30:	beq	11f40 <getc@plt+0x14b4>
   11f34:	bl	1093c <free@plt>
   11f38:	mov	r3, #0
   11f3c:	str	r3, [r4, #3952]	; 0xf70
   11f40:	ldr	r3, [r4, #3956]	; 0xf74
   11f44:	sub	r3, r3, #1
   11f48:	str	r3, [r4, #3956]	; 0xf74
   11f4c:	ldr	r4, [sp]
   11f50:	add	sp, sp, #4
   11f54:	pop	{pc}		; (ldr pc, [sp], #4)
   11f58:	strd	r4, [sp, #-16]!
   11f5c:	str	r6, [sp, #8]
   11f60:	add	r6, r0, #4096	; 0x1000
   11f64:	ldr	r4, [r6, #3952]	; 0xf70
   11f68:	str	lr, [sp, #12]
   11f6c:	cmp	r4, #0
   11f70:	beq	11f84 <getc@plt+0x14f8>
   11f74:	ldrd	r4, [sp]
   11f78:	ldr	r6, [sp, #8]
   11f7c:	add	sp, sp, #12
   11f80:	pop	{pc}		; (ldr pc, [sp], #4)
   11f84:	ldr	r3, [r6, #3956]	; 0xf74
   11f88:	cmp	r3, #0
   11f8c:	beq	11f74 <getc@plt+0x14e8>
   11f90:	mov	r5, r0
   11f94:	mov	r1, #4
   11f98:	mov	r0, r3
   11f9c:	bl	12590 <error@@Base+0x5c>
   11fa0:	mov	r2, r4
   11fa4:	mov	ip, r4
   11fa8:	str	r0, [r6, #3952]	; 0xf70
   11fac:	movw	lr, #503	; 0x1f7
   11fb0:	ldr	r3, [r5, ip, lsl #4]
   11fb4:	cmp	r3, #0
   11fb8:	beq	11fd4 <getc@plt+0x1548>
   11fbc:	add	r1, r0, r2, lsl #2
   11fc0:	str	r3, [r1], #4
   11fc4:	add	r2, r2, #1
   11fc8:	ldr	r3, [r3, #4]
   11fcc:	cmp	r3, #0
   11fd0:	bne	11fc0 <getc@plt+0x1534>
   11fd4:	add	ip, ip, #1
   11fd8:	cmp	ip, lr
   11fdc:	bne	11fb0 <getc@plt+0x1524>
   11fe0:	ldrd	r4, [sp]
   11fe4:	ldr	r6, [sp, #8]
   11fe8:	add	sp, sp, #12
   11fec:	pop	{pc}		; (ldr pc, [sp], #4)
   11ff0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ff4:	add	r5, r0, #8000	; 0x1f40
   11ff8:	mov	r4, r0
   11ffc:	add	r5, r5, #48	; 0x30
   12000:	strd	r6, [sp, #8]
   12004:	mov	r7, r0
   12008:	mov	r6, r1
   1200c:	str	r8, [sp, #16]
   12010:	str	lr, [sp, #20]
   12014:	mov	r0, r4
   12018:	mov	r1, r6
   1201c:	add	r4, r4, #16
   12020:	bl	13374 <error@@Base+0xe40>
   12024:	cmp	r4, r5
   12028:	bne	12014 <getc@plt+0x1588>
   1202c:	add	r7, r7, #4096	; 0x1000
   12030:	ldr	r0, [r7, #3952]	; 0xf70
   12034:	cmp	r0, #0
   12038:	beq	12048 <getc@plt+0x15bc>
   1203c:	bl	1093c <free@plt>
   12040:	mov	r3, #0
   12044:	str	r3, [r7, #3952]	; 0xf70
   12048:	mov	r3, #0
   1204c:	ldrd	r4, [sp]
   12050:	ldr	r8, [sp, #16]
   12054:	str	r3, [r7, #3956]	; 0xf74
   12058:	ldrd	r6, [sp, #8]
   1205c:	add	sp, sp, #20
   12060:	pop	{pc}		; (ldr pc, [sp], #4)
   12064:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12068:	ldr	r5, [pc, #260]	; 12174 <getc@plt+0x16e8>
   1206c:	strd	r6, [sp, #8]
   12070:	ldr	r3, [pc, #256]	; 12178 <getc@plt+0x16ec>
   12074:	strd	r8, [sp, #16]
   12078:	ldr	r6, [pc, #252]	; 1217c <getc@plt+0x16f0>
   1207c:	add	r5, pc, r5
   12080:	strd	sl, [sp, #24]
   12084:	ldr	r8, [pc, #244]	; 12180 <getc@plt+0x16f4>
   12088:	add	r7, r5, #1088	; 0x440
   1208c:	add	r3, pc, r3
   12090:	add	r7, r7, #4
   12094:	str	lr, [sp, #32]
   12098:	sub	sp, sp, #12
   1209c:	add	r6, pc, r6
   120a0:	str	r3, [sp, #4]
   120a4:	add	r8, pc, r8
   120a8:	ldrsh	sl, [r6]
   120ac:	cmp	sl, #0
   120b0:	ble	12138 <getc@plt+0x16ac>
   120b4:	mov	r9, r6
   120b8:	mov	r4, #0
   120bc:	ldr	fp, [r5, #8]
   120c0:	b	120d0 <getc@plt+0x1644>
   120c4:	add	r4, r4, #1
   120c8:	cmp	sl, r4
   120cc:	beq	12144 <getc@plt+0x16b8>
   120d0:	mov	r0, fp
   120d4:	ldr	r1, [r9, #4]!
   120d8:	bl	10918 <strcmp@plt>
   120dc:	cmp	r0, #0
   120e0:	bne	120c4 <getc@plt+0x1638>
   120e4:	ldr	r3, [r5]
   120e8:	ldr	r1, [r5, #4]
   120ec:	cmp	r3, r1
   120f0:	subls	r2, r3, #1
   120f4:	uxtbls	r4, r4
   120f8:	addls	r2, r2, r8
   120fc:	bhi	12110 <getc@plt+0x1684>
   12100:	add	r3, r3, #1
   12104:	strb	r4, [r2, #1]!
   12108:	cmp	r3, r1
   1210c:	bls	12100 <getc@plt+0x1674>
   12110:	add	r5, r5, #12
   12114:	cmp	r5, r7
   12118:	bne	120a8 <getc@plt+0x161c>
   1211c:	add	sp, sp, #12
   12120:	ldrd	r4, [sp]
   12124:	ldrd	r6, [sp, #8]
   12128:	ldrd	r8, [sp, #16]
   1212c:	ldrd	sl, [sp, #24]
   12130:	add	sp, sp, #32
   12134:	pop	{pc}		; (ldr pc, [sp], #4)
   12138:	movne	r4, #0
   1213c:	bne	120e4 <getc@plt+0x1658>
   12140:	mov	r4, sl
   12144:	cmp	sl, #256	; 0x100
   12148:	beq	12168 <getc@plt+0x16dc>
   1214c:	ldr	r1, [sp, #4]
   12150:	add	sl, sl, #1
   12154:	ldr	r2, [r5, #8]
   12158:	add	r3, r1, r4, lsl #2
   1215c:	strh	sl, [r1]
   12160:	str	r2, [r3, #4]
   12164:	b	120e4 <getc@plt+0x1658>
   12168:	ldr	r0, [pc, #20]	; 12184 <getc@plt+0x16f8>
   1216c:	add	r0, pc, r0
   12170:	bl	12534 <error@@Base>
   12174:	andeq	r2, r1, r0, asr #20
   12178:	andeq	r3, r1, ip, lsr #1
   1217c:	muleq	r1, ip, r0
   12180:	muleq	r1, r8, r4
   12184:	ldrdeq	r1, [r0], -r4
   12188:	ldr	r3, [pc, #56]	; 121c8 <getc@plt+0x173c>
   1218c:	str	r4, [sp, #-8]!
   12190:	mov	r4, r0
   12194:	add	r3, pc, r3
   12198:	ldrsh	r3, [r3]
   1219c:	str	lr, [sp, #4]
   121a0:	cmp	r3, #0
   121a4:	beq	121c0 <getc@plt+0x1734>
   121a8:	ldr	r3, [pc, #28]	; 121cc <getc@plt+0x1740>
   121ac:	add	r3, pc, r3
   121b0:	ldrb	r0, [r3, r4]
   121b4:	ldr	r4, [sp]
   121b8:	add	sp, sp, #4
   121bc:	pop	{pc}		; (ldr pc, [sp], #4)
   121c0:	bl	12064 <getc@plt+0x15d8>
   121c4:	b	121a8 <getc@plt+0x171c>
   121c8:	andeq	r2, r1, r4, lsr #31
   121cc:	muleq	r1, r0, r3
   121d0:	strd	r4, [sp, #-16]!
   121d4:	uxtb	r4, r0
   121d8:	ldr	r5, [pc, #84]	; 12234 <getc@plt+0x17a8>
   121dc:	add	r5, pc, r5
   121e0:	ldrsh	r2, [r5]
   121e4:	str	r6, [sp, #8]
   121e8:	str	lr, [sp, #12]
   121ec:	cmp	r2, #0
   121f0:	beq	1221c <getc@plt+0x1790>
   121f4:	cmp	r4, r2
   121f8:	bge	12228 <getc@plt+0x179c>
   121fc:	ldr	r3, [pc, #52]	; 12238 <getc@plt+0x17ac>
   12200:	ldr	r6, [sp, #8]
   12204:	add	r3, pc, r3
   12208:	add	r3, r3, r4, lsl #2
   1220c:	ldrd	r4, [sp]
   12210:	add	sp, sp, #12
   12214:	ldr	r0, [r3, #4]
   12218:	pop	{pc}		; (ldr pc, [sp], #4)
   1221c:	bl	12064 <getc@plt+0x15d8>
   12220:	ldrsh	r2, [r5]
   12224:	b	121f4 <getc@plt+0x1768>
   12228:	ldr	r0, [pc, #12]	; 1223c <getc@plt+0x17b0>
   1222c:	add	r0, pc, r0
   12230:	bl	12534 <error@@Base>
   12234:	andeq	r2, r1, ip, asr pc
   12238:	andeq	r2, r1, r4, lsr pc
   1223c:	andeq	r1, r0, r0, lsr r5
   12240:	ldr	r3, [pc, #96]	; 122a8 <getc@plt+0x181c>
   12244:	strd	r4, [sp, #-16]!
   12248:	ldr	r2, [pc, #92]	; 122ac <getc@plt+0x1820>
   1224c:	str	r6, [sp, #8]
   12250:	mov	r6, r0
   12254:	str	lr, [sp, #12]
   12258:	sub	sp, sp, #112	; 0x70
   1225c:	add	r3, pc, r3
   12260:	add	r4, sp, #12
   12264:	ldr	r3, [r3, r2]
   12268:	ldr	r5, [r3]
   1226c:	bl	109f0 <getpid@plt>
   12270:	ldr	r1, [pc, #56]	; 122b0 <getc@plt+0x1824>
   12274:	mov	r3, r0
   12278:	mov	r0, r4
   1227c:	str	r6, [sp]
   12280:	mov	r2, r5
   12284:	add	r1, pc, r1
   12288:	bl	10a50 <sprintf@plt>
   1228c:	mov	r0, r4
   12290:	bl	1096c <strdup@plt>
   12294:	add	sp, sp, #112	; 0x70
   12298:	ldrd	r4, [sp]
   1229c:	ldr	r6, [sp, #8]
   122a0:	add	sp, sp, #12
   122a4:	pop	{pc}		; (ldr pc, [sp], #4)
   122a8:	muleq	r1, ip, sp
   122ac:	andeq	r0, r0, r4, lsr #1
   122b0:	andeq	r1, r0, r8, lsr #22
   122b4:	ldr	r3, [pc, #116]	; 12330 <getc@plt+0x18a4>
   122b8:	mov	r6, r0
   122bc:	str	r7, [sp, #-8]!
   122c0:	ldr	r2, [pc, #108]	; 12334 <getc@plt+0x18a8>
   122c4:	str	lr, [sp, #4]
   122c8:	add	r3, pc, r3
   122cc:	ldr	r3, [r3, r2]
   122d0:	ldr	r3, [r3]
   122d4:	cmp	r3, #0
   122d8:	beq	122e0 <getc@plt+0x1854>
   122dc:	blx	r3
   122e0:	ldr	r3, [pc, #80]	; 12338 <getc@plt+0x18ac>
   122e4:	add	r3, pc, r3
   122e8:	ldrsh	r2, [r3]
   122ec:	cmp	r2, #0
   122f0:	ble	12328 <getc@plt+0x189c>
   122f4:	mov	r5, r3
   122f8:	mov	r4, #1
   122fc:	mov	r0, r4
   12300:	add	r4, r4, #1
   12304:	bl	12240 <getc@plt+0x17b4>
   12308:	mov	r7, r0
   1230c:	sxth	r4, r4
   12310:	bl	10984 <unlink@plt>
   12314:	mov	r0, r7
   12318:	bl	1093c <free@plt>
   1231c:	ldrsh	r3, [r5]
   12320:	cmp	r3, r4
   12324:	bge	122fc <getc@plt+0x1870>
   12328:	mov	r0, r6
   1232c:	bl	109fc <exit@plt>
   12330:	andeq	r2, r1, r0, lsr sp
   12334:	andeq	r0, r0, ip, lsr #1
   12338:	andseq	r3, r2, r8, asr r2
   1233c:	ldrb	r3, [r0]
   12340:	ldrb	r2, [r1]
   12344:	cmp	r3, #0
   12348:	beq	12370 <getc@plt+0x18e4>
   1234c:	cmp	r2, r3
   12350:	beq	12360 <getc@plt+0x18d4>
   12354:	b	1237c <getc@plt+0x18f0>
   12358:	cmp	r3, r2
   1235c:	bne	1237c <getc@plt+0x18f0>
   12360:	ldrb	r3, [r0, #1]!
   12364:	ldrb	r2, [r1, #1]!
   12368:	cmp	r3, #0
   1236c:	bne	12358 <getc@plt+0x18cc>
   12370:	cmp	r2, #0
   12374:	beq	1238c <getc@plt+0x1900>
   12378:	mov	r3, #0
   1237c:	cmp	r3, r2
   12380:	mvncc	r0, #0
   12384:	movcs	r0, #1
   12388:	bx	lr
   1238c:	mov	r0, r2
   12390:	bx	lr
   12394:	ldr	r3, [pc, #48]	; 123cc <getc@plt+0x1940>
   12398:	ldr	r1, [pc, #48]	; 123d0 <getc@plt+0x1944>
   1239c:	add	r3, pc, r3
   123a0:	ldr	r1, [r3, r1]
   123a4:	ldr	r1, [r1]
   123a8:	cmp	r1, r0
   123ac:	beq	123c8 <getc@plt+0x193c>
   123b0:	ldr	r1, [pc, #28]	; 123d4 <getc@plt+0x1948>
   123b4:	ldr	r3, [r3, r1]
   123b8:	ldr	r3, [r3]
   123bc:	cmp	r3, r0
   123c0:	beq	123c8 <getc@plt+0x193c>
   123c4:	b	10a44 <fclose@plt>
   123c8:	bx	lr
   123cc:	andeq	r2, r1, ip, asr ip
   123d0:	strheq	r0, [r0], -r4
   123d4:	strheq	r0, [r0], -r8
   123d8:	push	{lr}		; (str lr, [sp, #-4]!)
   123dc:	sub	sp, sp, #92	; 0x5c
   123e0:	mov	r1, r0
   123e4:	mov	r2, sp
   123e8:	mov	r0, #3
   123ec:	bl	1099c <__xstat@plt>
   123f0:	clz	r0, r0
   123f4:	lsr	r0, r0, #5
   123f8:	add	sp, sp, #92	; 0x5c
   123fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12400:	ldr	r2, [pc, #56]	; 12440 <getc@plt+0x19b4>
   12404:	str	r4, [sp, #-8]!
   12408:	add	r2, pc, r2
   1240c:	ldrh	r3, [r2]
   12410:	str	lr, [sp, #4]
   12414:	add	r3, r3, #1
   12418:	sxth	r3, r3
   1241c:	mov	r0, r3
   12420:	strh	r3, [r2]
   12424:	bl	12240 <getc@plt+0x17b4>
   12428:	mov	r4, r0
   1242c:	bl	10984 <unlink@plt>
   12430:	mov	r0, r4
   12434:	ldr	r4, [sp]
   12438:	add	sp, sp, #4
   1243c:	pop	{pc}		; (ldr pc, [sp], #4)
   12440:	andseq	r3, r2, r4, lsr r1
   12444:	str	r4, [sp, #-8]!
   12448:	mov	r4, r0
   1244c:	str	lr, [sp, #4]
   12450:	bl	10a14 <strlen@plt>
   12454:	uxth	r0, r0
   12458:	sub	r3, r0, #1
   1245c:	sxth	r3, r3
   12460:	cmp	r3, #0
   12464:	blt	124a4 <getc@plt+0x1a18>
   12468:	ldrb	r2, [r4, r3]
   1246c:	cmp	r2, #47	; 0x2f
   12470:	beq	124a4 <getc@plt+0x1a18>
   12474:	sub	r0, r0, #2
   12478:	sxth	r3, r0
   1247c:	add	r2, r3, #1
   12480:	add	r2, r4, r2
   12484:	b	12498 <getc@plt+0x1a0c>
   12488:	ldrb	r0, [r2, #-1]!
   1248c:	cmp	r0, #47	; 0x2f
   12490:	beq	124a4 <getc@plt+0x1a18>
   12494:	mov	r3, r1
   12498:	tst	r3, #32768	; 0x8000
   1249c:	sub	r1, r3, #1
   124a0:	beq	12488 <getc@plt+0x19fc>
   124a4:	add	r0, r3, #1
   124a8:	add	r0, r4, r0
   124ac:	ldr	r4, [sp]
   124b0:	add	sp, sp, #4
   124b4:	pop	{pc}		; (ldr pc, [sp], #4)
   124b8:	mov	r0, #0
   124bc:	str	r4, [sp, #-8]!
   124c0:	str	lr, [sp, #4]
   124c4:	bl	122b4 <getc@plt+0x1828>
   124c8:	ldr	r2, [pc, #80]	; 12520 <getc@plt+0x1a94>
   124cc:	str	r4, [sp, #-8]!
   124d0:	ldr	r1, [pc, #76]	; 12524 <getc@plt+0x1a98>
   124d4:	str	lr, [sp, #4]
   124d8:	add	r2, pc, r2
   124dc:	ldr	r1, [r2, r1]
   124e0:	ldr	r1, [r1]
   124e4:	cmp	r1, #0
   124e8:	beq	124f4 <getc@plt+0x1a68>
   124ec:	blx	r1
   124f0:	bl	124b8 <getc@plt+0x1a2c>
   124f4:	mov	r3, r0
   124f8:	ldr	ip, [pc, #40]	; 12528 <getc@plt+0x1a9c>
   124fc:	ldr	r0, [pc, #40]	; 1252c <getc@plt+0x1aa0>
   12500:	ldr	r1, [pc, #40]	; 12530 <getc@plt+0x1aa4>
   12504:	ldr	ip, [r2, ip]
   12508:	ldr	r0, [r2, r0]
   1250c:	add	r1, pc, r1
   12510:	ldr	r2, [ip]
   12514:	ldr	r0, [r0]
   12518:	bl	10a20 <fprintf@plt>
   1251c:	b	124f0 <getc@plt+0x1a64>
   12520:	andeq	r2, r1, r0, lsr #22
   12524:	muleq	r0, r8, r0
   12528:	andeq	r0, r0, r4, lsr #1
   1252c:	muleq	r0, ip, r0
   12530:			; <UNDEFINED> instruction: 0x000018b0

00012534 <error@@Base>:
   12534:	str	r4, [sp, #-8]!
   12538:	mov	r3, r0
   1253c:	ldr	r4, [pc, #56]	; 1257c <error@@Base+0x48>
   12540:	str	lr, [sp, #4]
   12544:	ldr	r0, [pc, #52]	; 12580 <error@@Base+0x4c>
   12548:	ldr	r2, [pc, #52]	; 12584 <error@@Base+0x50>
   1254c:	add	r4, pc, r4
   12550:	ldr	r1, [pc, #48]	; 12588 <error@@Base+0x54>
   12554:	ldr	ip, [r4, r0]
   12558:	ldr	r0, [r4, r2]
   1255c:	add	r1, pc, r1
   12560:	ldr	r2, [ip]
   12564:	ldr	r0, [r0]
   12568:	bl	10a20 <fprintf@plt>
   1256c:	ldr	r3, [pc, #24]	; 1258c <error@@Base+0x58>
   12570:	ldr	r3, [r4, r3]
   12574:	ldr	r0, [r3]
   12578:	bl	122b4 <getc@plt+0x1828>
   1257c:	andeq	r2, r1, ip, lsr #21
   12580:	andeq	r0, r0, r4, lsr #1
   12584:	muleq	r0, ip, r0
   12588:	andeq	r1, r0, r0, ror r8
   1258c:	strheq	r0, [r0], -ip
   12590:	str	r4, [sp, #-8]!
   12594:	str	lr, [sp, #4]
   12598:	bl	1090c <calloc@plt>
   1259c:	cmp	r0, #0
   125a0:	beq	125b0 <error@@Base+0x7c>
   125a4:	ldr	r4, [sp]
   125a8:	add	sp, sp, #4
   125ac:	pop	{pc}		; (ldr pc, [sp], #4)
   125b0:	ldr	r0, [pc, #4]	; 125bc <error@@Base+0x88>
   125b4:	add	r0, pc, r0
   125b8:	bl	12534 <error@@Base>
   125bc:	andeq	r1, r0, r0, lsr #16
   125c0:	ldr	r3, [pc, #40]	; 125f0 <error@@Base+0xbc>
   125c4:	add	r3, pc, r3
   125c8:	ldrb	r2, [r3, #2]
   125cc:	cmp	r2, #0
   125d0:	bxne	lr
   125d4:	ldr	r0, [pc, #24]	; 125f4 <error@@Base+0xc0>
   125d8:	mov	r2, #1
   125dc:	str	r4, [sp, #-8]!
   125e0:	str	lr, [sp, #4]
   125e4:	strb	r2, [r3, #2]
   125e8:	add	r0, pc, r0
   125ec:	bl	12534 <error@@Base>
   125f0:	andseq	r2, r2, r8, ror pc
   125f4:	andeq	r1, r0, r8, lsl #16
   125f8:	ldr	r4, [pc, #68]	; 12644 <error@@Base+0x110>
   125fc:	mov	r3, r0
   12600:	push	{lr}		; (str lr, [sp, #-4]!)
   12604:	sub	sp, sp, #12
   12608:	ldr	r0, [pc, #56]	; 12648 <error@@Base+0x114>
   1260c:	ldr	r2, [pc, #56]	; 1264c <error@@Base+0x118>
   12610:	add	r4, pc, r4
   12614:	ldr	ip, [r4, r0]
   12618:	ldr	r0, [r4, r2]
   1261c:	str	r1, [sp]
   12620:	ldr	r1, [pc, #40]	; 12650 <error@@Base+0x11c>
   12624:	ldr	r2, [ip]
   12628:	ldr	r0, [r0]
   1262c:	add	r1, pc, r1
   12630:	bl	10a20 <fprintf@plt>
   12634:	ldr	r3, [pc, #24]	; 12654 <error@@Base+0x120>
   12638:	ldr	r3, [r4, r3]
   1263c:	ldr	r0, [r3]
   12640:	bl	122b4 <getc@plt+0x1828>
   12644:	andeq	r2, r1, r8, ror #19
   12648:	andeq	r0, r0, r4, lsr #1
   1264c:	muleq	r0, ip, r0
   12650:	ldrdeq	r1, [r0], -r4
   12654:	strheq	r0, [r0], -ip
   12658:	ldr	ip, [pc, #164]	; 12704 <error@@Base+0x1d0>
   1265c:	subs	r2, r0, #0
   12660:	strd	r4, [sp, #-16]!
   12664:	mov	r4, r1
   12668:	str	r6, [sp, #8]
   1266c:	str	lr, [sp, #12]
   12670:	add	ip, pc, ip
   12674:	beq	126b4 <error@@Base+0x180>
   12678:	mov	r5, r2
   1267c:	bl	10930 <fopen@plt>
   12680:	cmp	r0, #0
   12684:	beq	12698 <error@@Base+0x164>
   12688:	ldrd	r4, [sp]
   1268c:	ldr	r6, [sp, #8]
   12690:	add	sp, sp, #12
   12694:	pop	{pc}		; (ldr pc, [sp], #4)
   12698:	ldrb	r3, [r4]
   1269c:	mov	r1, r5
   126a0:	cmp	r3, #119	; 0x77
   126a4:	beq	126dc <error@@Base+0x1a8>
   126a8:	ldr	r0, [pc, #88]	; 12708 <error@@Base+0x1d4>
   126ac:	add	r0, pc, r0
   126b0:	bl	125f8 <error@@Base+0xc4>
   126b4:	ldrb	r3, [r1]
   126b8:	cmp	r3, #114	; 0x72
   126bc:	beq	126e8 <error@@Base+0x1b4>
   126c0:	ldr	r3, [pc, #68]	; 1270c <error@@Base+0x1d8>
   126c4:	ldrd	r4, [sp]
   126c8:	ldr	r6, [sp, #8]
   126cc:	add	sp, sp, #12
   126d0:	ldr	r3, [ip, r3]
   126d4:	ldr	r0, [r3]
   126d8:	pop	{pc}		; (ldr pc, [sp], #4)
   126dc:	ldr	r0, [pc, #44]	; 12710 <error@@Base+0x1dc>
   126e0:	add	r0, pc, r0
   126e4:	bl	125f8 <error@@Base+0xc4>
   126e8:	ldr	r3, [pc, #36]	; 12714 <error@@Base+0x1e0>
   126ec:	ldrd	r4, [sp]
   126f0:	ldr	r6, [sp, #8]
   126f4:	add	sp, sp, #12
   126f8:	ldr	r3, [ip, r3]
   126fc:	ldr	r0, [r3]
   12700:	pop	{pc}		; (ldr pc, [sp], #4)
   12704:	andeq	r2, r1, r8, lsl #19
   12708:	andeq	r1, r0, ip, ror r7
   1270c:	strheq	r0, [r0], -r8
   12710:	andeq	r1, r0, r0, lsr r7
   12714:	strheq	r0, [r0], -r4
   12718:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1271c:	strd	r6, [sp, #8]
   12720:	mov	r6, r0
   12724:	strd	r8, [sp, #16]
   12728:	mov	r9, r1
   1272c:	mov	r8, r3
   12730:	strd	sl, [sp, #24]
   12734:	str	lr, [sp, #32]
   12738:	sub	sp, sp, #20
   1273c:	ldr	r5, [pc, #600]	; 1299c <error@@Base+0x468>
   12740:	str	r0, [sp]
   12744:	ldr	r0, [r1]
   12748:	str	r2, [sp, #12]
   1274c:	bl	12444 <getc@plt+0x19b8>
   12750:	ldr	r3, [pc, #584]	; 129a0 <error@@Base+0x46c>
   12754:	add	r5, pc, r5
   12758:	ldr	r4, [pc, #580]	; 129a4 <error@@Base+0x470>
   1275c:	ldr	r3, [r5, r3]
   12760:	add	r4, pc, r4
   12764:	mov	r1, r4
   12768:	str	r0, [r3]
   1276c:	mov	r0, #2
   12770:	bl	109d8 <__sysv_signal@plt>
   12774:	mov	r1, r4
   12778:	mov	r0, #15
   1277c:	bl	109d8 <__sysv_signal@plt>
   12780:	ldr	sl, [r6]
   12784:	cmp	sl, #1
   12788:	beq	12960 <error@@Base+0x42c>
   1278c:	movle	r6, #0
   12790:	ble	128e8 <error@@Base+0x3b4>
   12794:	ldr	r3, [pc, #524]	; 129a8 <error@@Base+0x474>
   12798:	mov	r7, #1
   1279c:	mov	r6, #0
   127a0:	mov	r4, r7
   127a4:	add	r3, pc, r3
   127a8:	str	r3, [sp, #8]
   127ac:	mov	r3, sl
   127b0:	mov	sl, r9
   127b4:	b	127d8 <error@@Base+0x2a4>
   127b8:	add	r4, r4, #1
   127bc:	add	r2, r6, #1
   127c0:	str	r5, [sl, r6, lsl #2]
   127c4:	sxth	r4, r4
   127c8:	sxth	r6, r2
   127cc:	cmp	r4, r3
   127d0:	mov	r7, r4
   127d4:	bge	128e8 <error@@Base+0x3b4>
   127d8:	ldr	r5, [sl, r4, lsl #2]
   127dc:	lsl	r9, r4, #2
   127e0:	ldrb	r2, [r5]
   127e4:	cmp	r2, #45	; 0x2d
   127e8:	bne	127b8 <error@@Base+0x284>
   127ec:	ldrb	fp, [r5, #1]
   127f0:	cmp	fp, #0
   127f4:	beq	127b8 <error@@Base+0x284>
   127f8:	mov	r0, r5
   127fc:	str	r3, [sp, #4]
   12800:	bl	10a14 <strlen@plt>
   12804:	mov	r2, r0
   12808:	mov	r1, r5
   1280c:	ldr	r0, [sp, #8]
   12810:	bl	10a74 <strncmp@plt>
   12814:	cmp	r0, #0
   12818:	beq	12974 <error@@Base+0x440>
   1281c:	ldr	r3, [sp, #4]
   12820:	add	r7, r7, #1
   12824:	cmp	r7, r3
   12828:	addlt	r9, sl, r9
   1282c:	movge	r0, #0
   12830:	ldrlt	r0, [r9, #4]
   12834:	cmp	r8, #0
   12838:	beq	1287c <error@@Base+0x348>
   1283c:	ldrb	r2, [r8]
   12840:	cmp	r2, #0
   12844:	beq	1287c <error@@Base+0x348>
   12848:	cmp	fp, r2
   1284c:	beq	1288c <error@@Base+0x358>
   12850:	mov	r2, #0
   12854:	b	12860 <error@@Base+0x32c>
   12858:	cmp	fp, ip
   1285c:	beq	12890 <error@@Base+0x35c>
   12860:	add	r2, r2, #1
   12864:	sxth	r2, r2
   12868:	add	r1, r2, r2, lsl #1
   1286c:	ldrb	ip, [r8, r1, lsl #2]
   12870:	add	r1, r8, r1, lsl #2
   12874:	cmp	ip, #0
   12878:	bne	12858 <error@@Base+0x324>
   1287c:	ldr	r0, [pc, #296]	; 129ac <error@@Base+0x478>
   12880:	mov	r1, r5
   12884:	add	r0, pc, r0
   12888:	bl	125f8 <error@@Base+0xc4>
   1288c:	mov	r1, r8
   12890:	ldr	r2, [r1, #4]
   12894:	cmp	r2, #0
   12898:	beq	12920 <error@@Base+0x3ec>
   1289c:	ldrb	ip, [r5, #2]
   128a0:	cmp	ip, #0
   128a4:	bne	1290c <error@@Base+0x3d8>
   128a8:	cmp	r0, #0
   128ac:	beq	1297c <error@@Base+0x448>
   128b0:	ldr	r1, [r2]
   128b4:	cmp	r1, #0
   128b8:	bne	1298c <error@@Base+0x458>
   128bc:	str	r0, [r2]
   128c0:	uxth	r2, r4
   128c4:	ldrb	r1, [r5, #2]
   128c8:	add	r4, r2, #1
   128cc:	sxth	r4, r4
   128d0:	cmp	r1, #0
   128d4:	addeq	r4, r2, #2
   128d8:	sxtheq	r4, r4
   128dc:	cmp	r4, r3
   128e0:	mov	r7, r4
   128e4:	blt	127d8 <error@@Base+0x2a4>
   128e8:	ldr	r3, [sp]
   128ec:	str	r6, [r3]
   128f0:	add	sp, sp, #20
   128f4:	ldrd	r4, [sp]
   128f8:	ldrd	r6, [sp, #8]
   128fc:	ldrd	r8, [sp, #16]
   12900:	ldrd	sl, [sp, #24]
   12904:	add	sp, sp, #32
   12908:	pop	{pc}		; (ldr pc, [sp], #4)
   1290c:	ldr	r1, [r2]
   12910:	cmp	r1, #0
   12914:	bne	1298c <error@@Base+0x458>
   12918:	add	r0, r5, #2
   1291c:	b	128bc <error@@Base+0x388>
   12920:	ldr	r3, [r1, #8]
   12924:	cmp	r3, #0
   12928:	beq	1287c <error@@Base+0x348>
   1292c:	ldrb	r2, [r5, #2]
   12930:	cmp	r2, #0
   12934:	bne	1287c <error@@Base+0x348>
   12938:	ldrb	r2, [r3]
   1293c:	cmp	r2, #0
   12940:	bne	1298c <error@@Base+0x458>
   12944:	mov	r2, #1
   12948:	add	r4, r4, #1
   1294c:	sxth	r4, r4
   12950:	strb	r2, [r3]
   12954:	ldr	r3, [sp]
   12958:	ldr	r3, [r3]
   1295c:	b	127cc <error@@Base+0x298>
   12960:	ldr	r3, [pc, #72]	; 129b0 <error@@Base+0x47c>
   12964:	ldr	r3, [r5, r3]
   12968:	ldrb	r6, [r3]
   1296c:	cmp	r6, #0
   12970:	beq	128e8 <error@@Base+0x3b4>
   12974:	ldr	r0, [sp, #12]
   12978:	bl	124c8 <getc@plt+0x1a3c>
   1297c:	ldr	r3, [r1, #8]
   12980:	cmp	r3, #0
   12984:	bne	12938 <error@@Base+0x404>
   12988:	b	1287c <error@@Base+0x348>
   1298c:	ldr	r0, [pc, #32]	; 129b4 <error@@Base+0x480>
   12990:	mov	r1, r5
   12994:	add	r0, pc, r0
   12998:	bl	125f8 <error@@Base+0xc4>
   1299c:	andeq	r2, r1, r4, lsr #17
   129a0:	andeq	r0, r0, r4, lsr #1
   129a4:			; <UNDEFINED> instruction: 0xfffffe58
   129a8:	muleq	r0, r8, r6
   129ac:	andeq	r1, r0, r0, asr #11
   129b0:	muleq	r0, r0, r0
   129b4:	andeq	r1, r0, r0, asr #9
   129b8:	ldr	r2, [pc, #60]	; 129fc <error@@Base+0x4c8>
   129bc:	mov	r3, r0
   129c0:	push	{lr}		; (str lr, [sp, #-4]!)
   129c4:	sub	sp, sp, #12
   129c8:	ldr	ip, [pc, #48]	; 12a00 <error@@Base+0x4cc>
   129cc:	ldr	r0, [pc, #48]	; 12a04 <error@@Base+0x4d0>
   129d0:	add	r2, pc, r2
   129d4:	ldr	ip, [r2, ip]
   129d8:	ldr	r0, [r2, r0]
   129dc:	str	r1, [sp]
   129e0:	ldr	r1, [pc, #32]	; 12a08 <error@@Base+0x4d4>
   129e4:	ldr	r2, [ip]
   129e8:	ldr	r0, [r0]
   129ec:	add	r1, pc, r1
   129f0:	bl	10a20 <fprintf@plt>
   129f4:	add	sp, sp, #12
   129f8:	pop	{pc}		; (ldr pc, [sp], #4)
   129fc:	andeq	r2, r1, r8, lsr #12
   12a00:	andeq	r0, r0, r4, lsr #1
   12a04:	muleq	r0, ip, r0
   12a08:	andeq	r1, r0, r4, lsl r4
   12a0c:	strd	r4, [sp, #-16]!
   12a10:	uxtb	r5, r1
   12a14:	mov	r1, #16
   12a18:	str	r6, [sp, #8]
   12a1c:	mov	r6, r0
   12a20:	mov	r0, #1
   12a24:	mov	r4, r2
   12a28:	str	lr, [sp, #12]
   12a2c:	bl	12590 <error@@Base+0x5c>
   12a30:	mov	r3, r0
   12a34:	mov	r0, r6
   12a38:	mov	r1, r3
   12a3c:	strb	r5, [r3, #8]
   12a40:	str	r4, [r3, #12]
   12a44:	ldrd	r4, [sp]
   12a48:	ldr	r6, [sp, #8]
   12a4c:	ldr	lr, [sp, #12]
   12a50:	add	sp, sp, #16
   12a54:	b	131a0 <error@@Base+0xc6c>
   12a58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12a5c:	clz	r3, r1
   12a60:	strd	r6, [sp, #8]
   12a64:	lsr	r3, r3, #5
   12a68:	strd	r8, [sp, #16]
   12a6c:	strd	sl, [sp, #24]
   12a70:	mov	sl, r2
   12a74:	str	lr, [sp, #32]
   12a78:	sub	sp, sp, #124	; 0x7c
   12a7c:	ldrb	r2, [r2]
   12a80:	ldr	r4, [pc, #888]	; 12e00 <error@@Base+0x8cc>
   12a84:	cmp	r2, #0
   12a88:	moveq	r3, #0
   12a8c:	cmp	r3, #0
   12a90:	add	r4, pc, r4
   12a94:	bne	12dec <error@@Base+0x8b8>
   12a98:	mov	r9, r0
   12a9c:	mov	r0, r1
   12aa0:	ldr	r1, [pc, #860]	; 12e04 <error@@Base+0x8d0>
   12aa4:	ldr	r3, [r9, #4]
   12aa8:	add	r1, pc, r1
   12aac:	str	r3, [sp, #8]
   12ab0:	bl	12658 <error@@Base+0x124>
   12ab4:	ldrb	r3, [sl]
   12ab8:	mov	r7, r0
   12abc:	cmp	r3, #0
   12ac0:	bne	12d34 <error@@Base+0x800>
   12ac4:	ldr	r8, [sl, #4]
   12ac8:	mov	r0, r7
   12acc:	ldrb	r3, [sl, #1]
   12ad0:	cmp	r8, #0
   12ad4:	moveq	r8, #94	; 0x5e
   12ad8:	mov	r5, r3
   12adc:	bl	10a8c <getc@plt>
   12ae0:	cmn	r0, #1
   12ae4:	beq	12bac <error@@Base+0x678>
   12ae8:	ldr	r3, [pc, #792]	; 12e08 <error@@Base+0x8d4>
   12aec:	ldr	r3, [r4, r3]
   12af0:	ldrsb	r4, [r3, r0]
   12af4:	str	r3, [sp]
   12af8:	cmp	r4, #0
   12afc:	ble	12dcc <error@@Base+0x898>
   12b00:	add	r3, sp, #20
   12b04:	mov	r6, #0
   12b08:	add	fp, sp, #17
   12b0c:	str	r3, [sp, #4]
   12b10:	str	sl, [sp, #12]
   12b14:	mov	sl, r5
   12b18:	b	12b2c <error@@Base+0x5f8>
   12b1c:	ldr	r3, [sp]
   12b20:	ldrsb	r4, [r3, r0]
   12b24:	cmp	r4, #0
   12b28:	ble	12dcc <error@@Base+0x898>
   12b2c:	cmp	r4, #1
   12b30:	strb	r0, [sp, #16]
   12b34:	beq	12b58 <error@@Base+0x624>
   12b38:	sub	r5, r4, #1
   12b3c:	mov	r3, r7
   12b40:	mov	r2, r5
   12b44:	mov	r1, #1
   12b48:	mov	r0, fp
   12b4c:	bl	109b4 <fread@plt>
   12b50:	cmp	r5, r0
   12b54:	bne	12de0 <error@@Base+0x8ac>
   12b58:	mov	r1, #4
   12b5c:	add	r0, sp, #16
   12b60:	ldr	r2, [sp, #4]
   12b64:	bl	109c0 <utf8proc_iterate@plt>
   12b68:	cmp	r0, r4
   12b6c:	bne	12dd8 <error@@Base+0x8a4>
   12b70:	cmp	sl, #0
   12b74:	ldr	r2, [sp, #20]
   12b78:	beq	12b88 <error@@Base+0x654>
   12b7c:	cmp	r2, r8
   12b80:	moveq	r6, #1
   12b84:	beq	12b98 <error@@Base+0x664>
   12b88:	mov	r1, r6
   12b8c:	mov	r0, r9
   12b90:	mov	r6, #0
   12b94:	bl	12a0c <error@@Base+0x4d8>
   12b98:	mov	r0, r7
   12b9c:	bl	10a8c <getc@plt>
   12ba0:	cmn	r0, #1
   12ba4:	bne	12b1c <error@@Base+0x5e8>
   12ba8:	ldr	sl, [sp, #12]
   12bac:	mov	r0, r7
   12bb0:	bl	12394 <getc@plt+0x1908>
   12bb4:	ldrb	r3, [sl, #9]
   12bb8:	cmp	r3, #0
   12bbc:	beq	12c34 <error@@Base+0x700>
   12bc0:	ldr	r3, [sp, #8]
   12bc4:	cmp	r3, #0
   12bc8:	ldrne	r6, [r3, #4]
   12bcc:	ldreq	r6, [r9]
   12bd0:	cmp	r6, #0
   12bd4:	beq	12c34 <error@@Base+0x700>
   12bd8:	mov	r5, r6
   12bdc:	mov	r7, #32
   12be0:	b	12bf0 <error@@Base+0x6bc>
   12be4:	ldr	r5, [r5, #4]
   12be8:	cmp	r5, #0
   12bec:	beq	12cac <error@@Base+0x778>
   12bf0:	ldr	r4, [r5, #12]
   12bf4:	mov	r0, r4
   12bf8:	bl	10948 <utf8proc_get_property@plt>
   12bfc:	cmp	r4, #13
   12c00:	bhi	12d28 <error@@Base+0x7f4>
   12c04:	cmp	r4, #11
   12c08:	bcs	12c2c <error@@Base+0x6f8>
   12c0c:	cmp	r4, #9
   12c10:	beq	12c2c <error@@Base+0x6f8>
   12c14:	cmp	r4, #10
   12c18:	beq	12be4 <error@@Base+0x6b0>
   12c1c:	ldrsh	r3, [r0]
   12c20:	sub	r3, r3, #23
   12c24:	cmp	r3, #2
   12c28:	bhi	12be4 <error@@Base+0x6b0>
   12c2c:	str	r7, [r5, #12]
   12c30:	b	12be4 <error@@Base+0x6b0>
   12c34:	ldrb	r3, [sl, #10]
   12c38:	cmp	r3, #0
   12c3c:	beq	12c6c <error@@Base+0x738>
   12c40:	ldr	r3, [sp, #8]
   12c44:	cmp	r3, #0
   12c48:	ldrne	r4, [r3, #4]
   12c4c:	ldreq	r4, [r9]
   12c50:	b	12c64 <error@@Base+0x730>
   12c54:	ldr	r0, [r4, #12]
   12c58:	bl	10990 <utf8proc_tolower@plt>
   12c5c:	str	r0, [r4, #12]
   12c60:	ldr	r4, [r4, #4]
   12c64:	cmp	r4, #0
   12c68:	bne	12c54 <error@@Base+0x720>
   12c6c:	add	sp, sp, #124	; 0x7c
   12c70:	ldrd	r4, [sp]
   12c74:	ldrd	r6, [sp, #8]
   12c78:	ldrd	r8, [sp, #16]
   12c7c:	ldrd	sl, [sp, #24]
   12c80:	add	sp, sp, #32
   12c84:	pop	{pc}		; (ldr pc, [sp], #4)
   12c88:	cmp	r3, #10
   12c8c:	movne	r2, #0
   12c90:	andeq	r2, r2, #1
   12c94:	cmp	r2, #0
   12c98:	bne	12d10 <error@@Base+0x7dc>
   12c9c:	subs	r5, r3, #10
   12ca0:	movne	r5, #1
   12ca4:	subs	r6, r4, #0
   12ca8:	beq	12c34 <error@@Base+0x700>
   12cac:	eor	r2, r5, #1
   12cb0:	ldr	r4, [r6, #4]
   12cb4:	ldr	r3, [r6, #12]
   12cb8:	cmp	r3, #32
   12cbc:	bne	12c88 <error@@Base+0x754>
   12cc0:	cmp	r4, #0
   12cc4:	moveq	r2, #1
   12cc8:	cmp	r2, #0
   12ccc:	bne	12ce0 <error@@Base+0x7ac>
   12cd0:	ldr	r2, [r4, #12]
   12cd4:	cmp	r2, #10
   12cd8:	cmpne	r2, #32
   12cdc:	bne	12c9c <error@@Base+0x768>
   12ce0:	cmp	r4, #0
   12ce4:	movne	r3, r5
   12ce8:	moveq	r3, #0
   12cec:	cmp	r3, #0
   12cf0:	beq	12d10 <error@@Base+0x7dc>
   12cf4:	ldr	r3, [r4, #12]
   12cf8:	cmp	r3, #32
   12cfc:	bne	12d10 <error@@Base+0x7dc>
   12d00:	ldrb	r3, [r4, #8]
   12d04:	ldrb	r2, [r6, #8]
   12d08:	orr	r3, r3, r2
   12d0c:	strb	r3, [r4, #8]
   12d10:	mov	r0, r9
   12d14:	mov	r1, r6
   12d18:	bl	132a8 <error@@Base+0xd74>
   12d1c:	mov	r0, r6
   12d20:	bl	1093c <free@plt>
   12d24:	b	12ca4 <error@@Base+0x770>
   12d28:	cmp	r4, #160	; 0xa0
   12d2c:	bne	12c1c <error@@Base+0x6e8>
   12d30:	b	12c2c <error@@Base+0x6f8>
   12d34:	add	r5, sp, #20
   12d38:	mov	r2, r0
   12d3c:	mov	r1, #99	; 0x63
   12d40:	mov	r0, r5
   12d44:	bl	10954 <fgets@plt>
   12d48:	cmp	r0, #0
   12d4c:	beq	12d6c <error@@Base+0x838>
   12d50:	ldr	r1, [pc, #180]	; 12e0c <error@@Base+0x8d8>
   12d54:	mov	r2, #51	; 0x33
   12d58:	mov	r0, r5
   12d5c:	add	r1, pc, r1
   12d60:	bl	10a74 <strncmp@plt>
   12d64:	subs	r6, r0, #0
   12d68:	beq	12d80 <error@@Base+0x84c>
   12d6c:	mov	r0, r7
   12d70:	bl	10978 <rewind@plt>
   12d74:	mov	r3, #0
   12d78:	strb	r3, [sl, #11]
   12d7c:	b	12ac4 <error@@Base+0x590>
   12d80:	ldr	r8, [pc, #136]	; 12e10 <error@@Base+0x8dc>
   12d84:	add	r8, pc, r8
   12d88:	mov	r2, r7
   12d8c:	mov	r1, #99	; 0x63
   12d90:	mov	r0, r5
   12d94:	bl	10954 <fgets@plt>
   12d98:	cmp	r0, #0
   12d9c:	beq	12dc4 <error@@Base+0x890>
   12da0:	mov	r1, r8
   12da4:	mov	r0, r5
   12da8:	bl	10918 <strcmp@plt>
   12dac:	cmp	r0, #0
   12db0:	bne	12d88 <error@@Base+0x854>
   12db4:	add	r6, r6, #1
   12db8:	sxth	r6, r6
   12dbc:	cmp	r6, #2
   12dc0:	bne	12d88 <error@@Base+0x854>
   12dc4:	mov	r3, #1
   12dc8:	b	12d78 <error@@Base+0x844>
   12dcc:	ldr	r0, [pc, #64]	; 12e14 <error@@Base+0x8e0>
   12dd0:	add	r0, pc, r0
   12dd4:	bl	12534 <error@@Base>
   12dd8:	bl	10a5c <utf8proc_errmsg@plt>
   12ddc:	bl	12534 <error@@Base>
   12de0:	ldr	r0, [pc, #48]	; 12e18 <error@@Base+0x8e4>
   12de4:	add	r0, pc, r0
   12de8:	bl	12534 <error@@Base>
   12dec:	ldr	r1, [pc, #40]	; 12e1c <error@@Base+0x8e8>
   12df0:	ldr	r0, [pc, #40]	; 12e20 <error@@Base+0x8ec>
   12df4:	add	r1, pc, r1
   12df8:	add	r0, pc, r0
   12dfc:	bl	125f8 <error@@Base+0xc4>
   12e00:	andeq	r2, r1, r8, ror #10
   12e04:			; <UNDEFINED> instruction: 0x00000ab0
   12e08:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12e0c:	andeq	r1, r0, r8, lsr #2
   12e10:	andeq	r1, r0, r8, lsr r1
   12e14:	andeq	r1, r0, r4, lsr #2
   12e18:	andeq	r1, r0, r8, lsr #2
   12e1c:	andeq	r1, r0, r4, ror r0
   12e20:	andeq	r1, r0, ip, ror r0
   12e24:	str	r4, [sp, #-8]!
   12e28:	str	lr, [sp, #4]
   12e2c:	bl	10960 <utf8proc_encode_char@plt>
   12e30:	cmp	r0, #0
   12e34:	ble	12e48 <error@@Base+0x914>
   12e38:	ldr	r4, [sp]
   12e3c:	add	sp, sp, #4
   12e40:	sxtb	r0, r0
   12e44:	pop	{pc}		; (ldr pc, [sp], #4)
   12e48:	ldr	r0, [pc, #4]	; 12e54 <error@@Base+0x920>
   12e4c:	add	r0, pc, r0
   12e50:	bl	12534 <error@@Base>
   12e54:	ldrdeq	r1, [r0], -r8
   12e58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12e5c:	uxtb	r4, r0
   12e60:	mov	r5, r1
   12e64:	cmp	r4, #0
   12e68:	strd	r6, [sp, #8]
   12e6c:	mov	r7, r2
   12e70:	moveq	r6, r2
   12e74:	str	r8, [sp, #16]
   12e78:	uxtb	r8, r3
   12e7c:	str	lr, [sp, #20]
   12e80:	bne	12f80 <error@@Base+0xa4c>
   12e84:	cmp	r5, #10
   12e88:	bne	12ec4 <error@@Base+0x990>
   12e8c:	cmp	r8, #0
   12e90:	bne	12eb8 <error@@Base+0x984>
   12e94:	ldr	r1, [pc, #272]	; 12fac <error@@Base+0xa78>
   12e98:	add	r1, pc, r1
   12e9c:	mov	r0, r6
   12ea0:	ldrd	r4, [sp]
   12ea4:	ldrd	r6, [sp, #8]
   12ea8:	ldr	r8, [sp, #16]
   12eac:	ldr	lr, [sp, #20]
   12eb0:	add	sp, sp, #24
   12eb4:	b	10a50 <sprintf@plt>
   12eb8:	ldr	r1, [pc, #240]	; 12fb0 <error@@Base+0xa7c>
   12ebc:	add	r1, pc, r1
   12ec0:	b	12e9c <error@@Base+0x968>
   12ec4:	mov	r0, r5
   12ec8:	bl	10948 <utf8proc_get_property@plt>
   12ecc:	cmp	r5, #32
   12ed0:	beq	12ef0 <error@@Base+0x9bc>
   12ed4:	ldrsh	r3, [r0]
   12ed8:	cmp	r3, #0
   12edc:	ble	12f50 <error@@Base+0xa1c>
   12ee0:	cmp	r3, #22
   12ee4:	ble	12ef0 <error@@Base+0x9bc>
   12ee8:	cmp	r3, #29
   12eec:	bne	12f50 <error@@Base+0xa1c>
   12ef0:	mov	r0, r5
   12ef4:	uxth	r4, r4
   12ef8:	bl	10a08 <utf8proc_category@plt>
   12efc:	sub	r0, r0, #6
   12f00:	cmp	r0, #2
   12f04:	bhi	12f20 <error@@Base+0x9ec>
   12f08:	mov	r1, r6
   12f0c:	movw	r0, #9676	; 0x25cc
   12f10:	bl	12e24 <error@@Base+0x8f0>
   12f14:	add	r4, r4, r0
   12f18:	uxth	r4, r4
   12f1c:	sxtah	r6, r7, r4
   12f20:	mov	r1, r6
   12f24:	mov	r0, r5
   12f28:	bl	12e24 <error@@Base+0x8f0>
   12f2c:	add	r4, r4, r0
   12f30:	mov	r3, #0
   12f34:	sxth	r4, r4
   12f38:	strb	r3, [r7, r4]
   12f3c:	ldrd	r4, [sp]
   12f40:	ldrd	r6, [sp, #8]
   12f44:	ldr	r8, [sp, #16]
   12f48:	add	sp, sp, #20
   12f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f50:	cmp	r5, #255	; 0xff
   12f54:	bls	12f98 <error@@Base+0xa64>
   12f58:	ldr	r1, [pc, #84]	; 12fb4 <error@@Base+0xa80>
   12f5c:	mov	r2, r5
   12f60:	mov	r0, r6
   12f64:	add	r1, pc, r1
   12f68:	ldrd	r4, [sp]
   12f6c:	ldrd	r6, [sp, #8]
   12f70:	ldr	r8, [sp, #16]
   12f74:	ldr	lr, [sp, #20]
   12f78:	add	sp, sp, #24
   12f7c:	b	10a50 <sprintf@plt>
   12f80:	mov	r1, r2
   12f84:	mov	r0, #94	; 0x5e
   12f88:	bl	12e24 <error@@Base+0x8f0>
   12f8c:	sxth	r4, r0
   12f90:	add	r6, r7, r0
   12f94:	b	12e84 <error@@Base+0x950>
   12f98:	ldr	r1, [pc, #24]	; 12fb8 <error@@Base+0xa84>
   12f9c:	mov	r2, r5
   12fa0:	mov	r0, r6
   12fa4:	add	r1, pc, r1
   12fa8:	b	12f68 <error@@Base+0xa34>
   12fac:	andeq	r0, r0, r8, lsl r8
   12fb0:	andeq	r1, r0, r0, lsl #1
   12fb4:	andeq	r0, r0, r8, ror #31
   12fb8:	andeq	r0, r0, r0, lsr #31
   12fbc:	mov	r3, r1
   12fc0:	ldr	r1, [pc, #212]	; 1309c <error@@Base+0xb68>
   12fc4:	strd	r4, [sp, #-20]!	; 0xffffffec
   12fc8:	mov	r5, r2
   12fcc:	strd	r6, [sp, #8]
   12fd0:	mov	r7, r0
   12fd4:	mov	r0, r3
   12fd8:	str	lr, [sp, #16]
   12fdc:	sub	sp, sp, #20
   12fe0:	add	r1, pc, r1
   12fe4:	bl	12658 <error@@Base+0x124>
   12fe8:	cmp	r5, #0
   12fec:	mov	r6, r0
   12ff0:	beq	13044 <error@@Base+0xb10>
   12ff4:	mov	r3, r0
   12ff8:	ldr	r4, [pc, #160]	; 130a0 <error@@Base+0xb6c>
   12ffc:	mov	r2, #55	; 0x37
   13000:	mov	r1, #1
   13004:	ldr	r0, [pc, #152]	; 130a4 <error@@Base+0xb70>
   13008:	add	r4, pc, r4
   1300c:	add	r0, pc, r0
   13010:	bl	109a8 <fwrite@plt>
   13014:	mov	r3, r6
   13018:	mov	r2, #55	; 0x37
   1301c:	mov	r1, #1
   13020:	mov	r0, r4
   13024:	bl	109a8 <fwrite@plt>
   13028:	mov	r0, r6
   1302c:	blx	r5
   13030:	mov	r3, r6
   13034:	mov	r0, r4
   13038:	mov	r2, #55	; 0x37
   1303c:	mov	r1, #1
   13040:	bl	109a8 <fwrite@plt>
   13044:	ldr	r4, [r7]
   13048:	cmp	r4, #0
   1304c:	beq	13080 <error@@Base+0xb4c>
   13050:	add	r5, sp, #4
   13054:	ldrb	r0, [r4, #8]
   13058:	mov	r3, #0
   1305c:	mov	r2, r5
   13060:	ldr	r1, [r4, #12]
   13064:	bl	12e58 <error@@Base+0x924>
   13068:	mov	r1, r6
   1306c:	mov	r0, r5
   13070:	bl	10a68 <fputs@plt>
   13074:	ldr	r4, [r4, #4]
   13078:	cmp	r4, #0
   1307c:	bne	13054 <error@@Base+0xb20>
   13080:	mov	r0, r6
   13084:	bl	12394 <getc@plt+0x1908>
   13088:	add	sp, sp, #20
   1308c:	ldrd	r4, [sp]
   13090:	ldrd	r6, [sp, #8]
   13094:	add	sp, sp, #16
   13098:	pop	{pc}		; (ldr pc, [sp], #4)
   1309c:	andeq	r0, r0, ip, ror #11
   130a0:			; <UNDEFINED> instruction: 0x00000eb4
   130a4:	andeq	r0, r0, r8, ror lr
   130a8:	strd	r4, [sp, #-20]!	; 0xffffffec
   130ac:	mov	r2, #0
   130b0:	strd	r6, [sp, #8]
   130b4:	str	lr, [sp, #16]
   130b8:	sub	sp, sp, #12
   130bc:	ldrb	r3, [r1]
   130c0:	str	r2, [sp, #4]
   130c4:	cmp	r3, r2
   130c8:	beq	13118 <error@@Base+0xbe4>
   130cc:	mov	r4, r1
   130d0:	mov	r5, r0
   130d4:	add	r6, sp, #4
   130d8:	b	130f0 <error@@Base+0xbbc>
   130dc:	ldr	r2, [sp, #4]
   130e0:	bl	12a0c <error@@Base+0x4d8>
   130e4:	ldrb	r3, [r4, r7]!
   130e8:	cmp	r3, #0
   130ec:	beq	13118 <error@@Base+0xbe4>
   130f0:	mvn	r1, #0
   130f4:	mov	r2, r6
   130f8:	mov	r0, r4
   130fc:	bl	109c0 <utf8proc_iterate@plt>
   13100:	subs	r7, r0, #0
   13104:	mov	r1, #0
   13108:	mov	r0, r5
   1310c:	bgt	130dc <error@@Base+0xba8>
   13110:	mov	r0, #0
   13114:	b	1311c <error@@Base+0xbe8>
   13118:	mov	r0, #1
   1311c:	add	sp, sp, #12
   13120:	ldrd	r4, [sp]
   13124:	ldrd	r6, [sp, #8]
   13128:	add	sp, sp, #16
   1312c:	pop	{pc}		; (ldr pc, [sp], #4)
   13130:	mov	r3, #0
   13134:	str	r3, [r0]
   13138:	str	r3, [r0, #4]
   1313c:	str	r3, [r0, #8]
   13140:	str	r3, [r0, #12]
   13144:	bx	lr
   13148:	ldr	r3, [r0]
   1314c:	mov	r2, #0
   13150:	str	r4, [sp, #-8]!
   13154:	mov	r4, r0
   13158:	str	lr, [sp, #4]
   1315c:	cmp	r3, r2
   13160:	strd	r2, [r1]
   13164:	str	r1, [r0]
   13168:	streq	r1, [r0, #4]
   1316c:	ldr	r0, [r0, #8]
   13170:	strne	r1, [r3]
   13174:	cmp	r0, #0
   13178:	beq	13188 <error@@Base+0xc54>
   1317c:	bl	1093c <free@plt>
   13180:	mov	r3, #0
   13184:	str	r3, [r4, #8]
   13188:	ldr	r3, [r4, #12]
   1318c:	add	r3, r3, #1
   13190:	str	r3, [r4, #12]
   13194:	ldr	r4, [sp]
   13198:	add	sp, sp, #4
   1319c:	pop	{pc}		; (ldr pc, [sp], #4)
   131a0:	ldr	r3, [r0, #4]
   131a4:	mov	r2, #0
   131a8:	str	r4, [sp, #-8]!
   131ac:	mov	r4, r0
   131b0:	str	lr, [sp, #4]
   131b4:	cmp	r3, r2
   131b8:	str	r3, [r1]
   131bc:	str	r2, [r1, #4]
   131c0:	streq	r1, [r0]
   131c4:	ldr	r0, [r0, #8]
   131c8:	strne	r1, [r3, #4]
   131cc:	str	r1, [r4, #4]
   131d0:	cmp	r0, #0
   131d4:	beq	131e4 <error@@Base+0xcb0>
   131d8:	bl	1093c <free@plt>
   131dc:	mov	r3, #0
   131e0:	str	r3, [r4, #8]
   131e4:	ldr	r3, [r4, #12]
   131e8:	add	r3, r3, #1
   131ec:	str	r3, [r4, #12]
   131f0:	ldr	r4, [sp]
   131f4:	add	sp, sp, #4
   131f8:	pop	{pc}		; (ldr pc, [sp], #4)
   131fc:	ldr	r3, [r2]
   13200:	str	r4, [sp, #-8]!
   13204:	mov	r4, r0
   13208:	str	lr, [sp, #4]
   1320c:	cmp	r3, #0
   13210:	str	r3, [r1]
   13214:	str	r2, [r1, #4]
   13218:	streq	r1, [r0]
   1321c:	ldr	r0, [r0, #8]
   13220:	strne	r1, [r3, #4]
   13224:	str	r1, [r2]
   13228:	cmp	r0, #0
   1322c:	beq	1323c <error@@Base+0xd08>
   13230:	bl	1093c <free@plt>
   13234:	mov	r3, #0
   13238:	str	r3, [r4, #8]
   1323c:	ldr	r3, [r4, #12]
   13240:	add	r3, r3, #1
   13244:	str	r3, [r4, #12]
   13248:	ldr	r4, [sp]
   1324c:	add	sp, sp, #4
   13250:	pop	{pc}		; (ldr pc, [sp], #4)
   13254:	ldr	r3, [r1, #4]
   13258:	str	r4, [sp, #-8]!
   1325c:	mov	r4, r0
   13260:	str	lr, [sp, #4]
   13264:	cmp	r3, #0
   13268:	stm	r2, {r1, r3}
   1326c:	str	r2, [r1, #4]
   13270:	streq	r2, [r0, #4]
   13274:	ldr	r0, [r0, #8]
   13278:	strne	r2, [r3]
   1327c:	cmp	r0, #0
   13280:	beq	13290 <error@@Base+0xd5c>
   13284:	bl	1093c <free@plt>
   13288:	mov	r3, #0
   1328c:	str	r3, [r4, #8]
   13290:	ldr	r3, [r4, #12]
   13294:	add	r3, r3, #1
   13298:	str	r3, [r4, #12]
   1329c:	ldr	r4, [sp]
   132a0:	add	sp, sp, #4
   132a4:	pop	{pc}		; (ldr pc, [sp], #4)
   132a8:	ldrd	r2, [r1]
   132ac:	strd	r4, [sp, #-16]!
   132b0:	mov	r4, r0
   132b4:	mov	r5, #0
   132b8:	str	r6, [sp, #8]
   132bc:	str	lr, [sp, #12]
   132c0:	cmp	r2, #0
   132c4:	strne	r3, [r2, #4]
   132c8:	ldrne	r3, [r1, #4]
   132cc:	streq	r3, [r0]
   132d0:	cmp	r3, #0
   132d4:	streq	r2, [r0, #4]
   132d8:	ldr	r0, [r0, #8]
   132dc:	strne	r2, [r3]
   132e0:	str	r5, [r1]
   132e4:	str	r5, [r1, #4]
   132e8:	cmp	r0, r5
   132ec:	beq	132f8 <error@@Base+0xdc4>
   132f0:	bl	1093c <free@plt>
   132f4:	str	r5, [r4, #8]
   132f8:	ldr	r3, [r4, #12]
   132fc:	ldr	r6, [sp, #8]
   13300:	sub	r3, r3, #1
   13304:	str	r3, [r4, #12]
   13308:	ldrd	r4, [sp]
   1330c:	add	sp, sp, #12
   13310:	pop	{pc}		; (ldr pc, [sp], #4)
   13314:	ldr	r3, [r0, #8]
   13318:	cmp	r3, #0
   1331c:	bxne	lr
   13320:	ldr	r3, [r0, #12]
   13324:	cmp	r3, #0
   13328:	bxeq	lr
   1332c:	mov	r1, #4
   13330:	str	r4, [sp, #-8]!
   13334:	mov	r4, r0
   13338:	mov	r0, r3
   1333c:	str	lr, [sp, #4]
   13340:	bl	12590 <error@@Base+0x5c>
   13344:	ldr	r3, [r4]
   13348:	str	r0, [r4, #8]
   1334c:	cmp	r3, #0
   13350:	beq	13368 <error@@Base+0xe34>
   13354:	sub	r0, r0, #4
   13358:	str	r3, [r0, #4]!
   1335c:	ldr	r3, [r3, #4]
   13360:	cmp	r3, #0
   13364:	bne	13358 <error@@Base+0xe24>
   13368:	ldr	r4, [sp]
   1336c:	add	sp, sp, #4
   13370:	pop	{pc}		; (ldr pc, [sp], #4)
   13374:	strd	r4, [sp, #-16]!
   13378:	ldr	r4, [r0]
   1337c:	str	r6, [sp, #8]
   13380:	str	lr, [sp, #12]
   13384:	cmp	r4, #0
   13388:	beq	133b4 <error@@Base+0xe80>
   1338c:	mov	r5, r0
   13390:	mov	r6, r1
   13394:	mov	r1, r4
   13398:	mov	r0, r5
   1339c:	bl	132a8 <error@@Base+0xd74>
   133a0:	mov	r0, r4
   133a4:	blx	r6
   133a8:	ldr	r4, [r5]
   133ac:	cmp	r4, #0
   133b0:	bne	13394 <error@@Base+0xe60>
   133b4:	ldrd	r4, [sp]
   133b8:	ldr	r6, [sp, #8]
   133bc:	add	sp, sp, #12
   133c0:	pop	{pc}		; (ldr pc, [sp], #4)
   133c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   133c8:	mov	r7, r0
   133cc:	ldr	r6, [pc, #72]	; 1341c <error@@Base+0xee8>
   133d0:	ldr	r5, [pc, #72]	; 13420 <error@@Base+0xeec>
   133d4:	add	r6, pc, r6
   133d8:	add	r5, pc, r5
   133dc:	sub	r6, r6, r5
   133e0:	mov	r8, r1
   133e4:	mov	r9, r2
   133e8:	bl	108ec <calloc@plt-0x20>
   133ec:	asrs	r6, r6, #2
   133f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   133f4:	mov	r4, #0
   133f8:	add	r4, r4, #1
   133fc:	ldr	r3, [r5], #4
   13400:	mov	r2, r9
   13404:	mov	r1, r8
   13408:	mov	r0, r7
   1340c:	blx	r3
   13410:	cmp	r6, r4
   13414:	bne	133f8 <error@@Base+0xec4>
   13418:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1341c:	andeq	r1, r1, r4, ror #13
   13420:	ldrdeq	r1, [r1], -ip
   13424:	bx	lr

Disassembly of section .fini:

00013428 <.fini>:
   13428:	push	{r3, lr}
   1342c:	pop	{r3, pc}
