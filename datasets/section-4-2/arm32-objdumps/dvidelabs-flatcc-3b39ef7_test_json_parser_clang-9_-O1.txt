
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a78 <.init>:
   12a78:	push	{r3, lr}
   12a7c:	bl	12c0c <_start@@Base+0x3c>
   12a80:	pop	{r3, pc}

Disassembly of section .plt:

00012a84 <fopen@plt-0x14>:
   12a84:	push	{lr}		; (str lr, [sp, #-4]!)
   12a88:	ldr	lr, [pc, #4]	; 12a94 <fopen@plt-0x4>
   12a8c:	add	lr, pc, lr
   12a90:	ldr	pc, [lr, #8]!
   12a94:	andeq	r4, r2, ip, ror #10

00012a98 <fopen@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #36, 20	; 0x24000
   12aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa4 <free@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #36, 20	; 0x24000
   12aac:	ldr	pc, [ip, #1380]!	; 0x564

00012ab0 <memcpy@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #36, 20	; 0x24000
   12ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00012abc <ftell@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #36, 20	; 0x24000
   12ac4:	ldr	pc, [ip, #1364]!	; 0x554

00012ac8 <rewind@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #36, 20	; 0x24000
   12ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad4 <__isinff@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #36, 20	; 0x24000
   12adc:	ldr	pc, [ip, #1348]!	; 0x544

00012ae0 <__isinf@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #36, 20	; 0x24000
   12ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00012aec <realloc@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #36, 20	; 0x24000
   12af4:	ldr	pc, [ip, #1332]!	; 0x534

00012af8 <fwrite@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #36, 20	; 0x24000
   12b00:	ldr	pc, [ip, #1324]!	; 0x52c

00012b04 <malloc@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #36, 20	; 0x24000
   12b0c:	ldr	pc, [ip, #1316]!	; 0x524

00012b10 <__libc_start_main@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #36, 20	; 0x24000
   12b18:	ldr	pc, [ip, #1308]!	; 0x51c

00012b1c <__gmon_start__@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #36, 20	; 0x24000
   12b24:	ldr	pc, [ip, #1300]!	; 0x514

00012b28 <exit@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #36, 20	; 0x24000
   12b30:	ldr	pc, [ip, #1292]!	; 0x50c

00012b34 <bcmp@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #36, 20	; 0x24000
   12b3c:	ldr	pc, [ip, #1284]!	; 0x504

00012b40 <strlen@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #36, 20	; 0x24000
   12b48:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b4c <fprintf@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #36, 20	; 0x24000
   12b54:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b58 <posix_memalign@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #36, 20	; 0x24000
   12b60:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b64 <memset@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #36, 20	; 0x24000
   12b6c:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b70 <strtod@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #36, 20	; 0x24000
   12b78:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b7c <memchr@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #36, 20	; 0x24000
   12b84:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b88 <fclose@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #36, 20	; 0x24000
   12b90:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b94 <fputc@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #36, 20	; 0x24000
   12b9c:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba0 <fread_unlocked@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #36, 20	; 0x24000
   12ba8:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bac <fseek@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #36, 20	; 0x24000
   12bb4:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bb8 <abort@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #36, 20	; 0x24000
   12bc0:	ldr	pc, [ip, #1196]!	; 0x4ac

00012bc4 <__assert_fail@plt>:
   12bc4:	add	ip, pc, #0, 12
   12bc8:	add	ip, ip, #36, 20	; 0x24000
   12bcc:	ldr	pc, [ip, #1188]!	; 0x4a4

Disassembly of section .text:

00012bd0 <_start@@Base>:
   12bd0:	mov	fp, #0
   12bd4:	mov	lr, #0
   12bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   12bdc:	mov	r2, sp
   12be0:	push	{r2}		; (str r2, [sp, #-4]!)
   12be4:	push	{r0}		; (str r0, [sp, #-4]!)
   12be8:	ldr	ip, [pc, #16]	; 12c00 <_start@@Base+0x30>
   12bec:	push	{ip}		; (str ip, [sp, #-4]!)
   12bf0:	ldr	r0, [pc, #12]	; 12c04 <_start@@Base+0x34>
   12bf4:	ldr	r3, [pc, #12]	; 12c08 <_start@@Base+0x38>
   12bf8:	bl	12b10 <__libc_start_main@plt>
   12bfc:	bl	12bb8 <abort@plt>
   12c00:	andeq	r3, r2, r8, lsr #30
   12c04:	strdeq	r3, [r1], -ip
   12c08:	andeq	r3, r2, r8, asr #29
   12c0c:	ldr	r3, [pc, #20]	; 12c28 <_start@@Base+0x58>
   12c10:	ldr	r2, [pc, #20]	; 12c2c <_start@@Base+0x5c>
   12c14:	add	r3, pc, r3
   12c18:	ldr	r2, [r3, r2]
   12c1c:	cmp	r2, #0
   12c20:	bxeq	lr
   12c24:	b	12b1c <__gmon_start__@plt>
   12c28:	andeq	r4, r2, r4, ror #7
   12c2c:	andeq	r0, r0, r4, ror r0
   12c30:	ldr	r0, [pc, #24]	; 12c50 <_start@@Base+0x80>
   12c34:	ldr	r3, [pc, #24]	; 12c54 <_start@@Base+0x84>
   12c38:	cmp	r3, r0
   12c3c:	bxeq	lr
   12c40:	ldr	r3, [pc, #16]	; 12c58 <_start@@Base+0x88>
   12c44:	cmp	r3, #0
   12c48:	bxeq	lr
   12c4c:	bx	r3
   12c50:	andeq	r7, r3, r0, asr r3
   12c54:	andeq	r7, r3, r0, asr r3
   12c58:	andeq	r0, r0, r0
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <_start@@Base+0xb8>
   12c60:	ldr	r1, [pc, #36]	; 12c8c <_start@@Base+0xbc>
   12c64:	sub	r1, r1, r0
   12c68:	asr	r1, r1, #2
   12c6c:	add	r1, r1, r1, lsr #31
   12c70:	asrs	r1, r1, #1
   12c74:	bxeq	lr
   12c78:	ldr	r3, [pc, #16]	; 12c90 <_start@@Base+0xc0>
   12c7c:	cmp	r3, #0
   12c80:	bxeq	lr
   12c84:	bx	r3
   12c88:	andeq	r7, r3, r0, asr r3
   12c8c:	andeq	r7, r3, r0, asr r3
   12c90:	andeq	r0, r0, r0
   12c94:	push	{r4, lr}
   12c98:	ldr	r4, [pc, #24]	; 12cb8 <_start@@Base+0xe8>
   12c9c:	ldrb	r3, [r4]
   12ca0:	cmp	r3, #0
   12ca4:	popne	{r4, pc}
   12ca8:	bl	12c30 <_start@@Base+0x60>
   12cac:	mov	r3, #1
   12cb0:	strb	r3, [r4]
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	r7, r3, r8, asr r3
   12cbc:	b	12c5c <_start@@Base+0x8c>

00012cc0 <verify_parse@@Base>:
   12cc0:	push	{r4, sl, fp, lr}
   12cc4:	add	fp, sp, #8
   12cc8:	bl	12e9c <verify_parse@@Base+0x1dc>
   12ccc:	bl	12ed4 <verify_parse@@Base+0x214>
   12cd0:	cmp	r0, #0
   12cd4:	beq	12d9c <verify_parse@@Base+0xdc>
   12cd8:	mov	r4, r0
   12cdc:	bl	12f3c <verify_parse@@Base+0x27c>
   12ce0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12ce4:	vcmp.f32	s0, s2
   12ce8:	vmrs	APSR_nzcv, fpscr
   12cec:	bne	12dbc <verify_parse@@Base+0xfc>
   12cf0:	mov	r0, r4
   12cf4:	bl	12f54 <verify_parse@@Base+0x294>
   12cf8:	vmov.f32	s2, #0	; 0x40000000  2.0
   12cfc:	vcmp.f32	s0, s2
   12d00:	vmrs	APSR_nzcv, fpscr
   12d04:	bne	12ddc <verify_parse@@Base+0x11c>
   12d08:	mov	r0, r4
   12d0c:	bl	12f70 <verify_parse@@Base+0x2b0>
   12d10:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d14:	vcmp.f32	s0, s2
   12d18:	vmrs	APSR_nzcv, fpscr
   12d1c:	bne	12dfc <verify_parse@@Base+0x13c>
   12d20:	mov	r0, r4
   12d24:	bl	12f8c <verify_parse@@Base+0x2cc>
   12d28:	vmov.f64	d16, #8	; 0x40400000  3.0
   12d2c:	vcmp.f64	d0, d16
   12d30:	vmrs	APSR_nzcv, fpscr
   12d34:	bne	12e1c <verify_parse@@Base+0x15c>
   12d38:	mov	r0, r4
   12d3c:	bl	12fa4 <verify_parse@@Base+0x2e4>
   12d40:	cmp	r0, #2
   12d44:	bne	12e3c <verify_parse@@Base+0x17c>
   12d48:	mov	r0, r4
   12d4c:	bl	12fb8 <verify_parse@@Base+0x2f8>
   12d50:	cmp	r0, #0
   12d54:	beq	12e5c <verify_parse@@Base+0x19c>
   12d58:	mov	r4, r0
   12d5c:	bl	12fc4 <verify_parse@@Base+0x304>
   12d60:	cmp	r0, #5
   12d64:	bne	12e7c <verify_parse@@Base+0x1bc>
   12d68:	mov	r0, r4
   12d6c:	bl	12fd4 <verify_parse@@Base+0x314>
   12d70:	cmp	r0, #6
   12d74:	moveq	r0, #0
   12d78:	popeq	{r4, sl, fp, pc}
   12d7c:	movw	r0, #21940	; 0x55b4
   12d80:	movt	r0, #2
   12d84:	movw	r1, #16193	; 0x3f41
   12d88:	movt	r1, #2
   12d8c:	movw	r3, #16275	; 0x3f93
   12d90:	movt	r3, #2
   12d94:	mov	r2, #54	; 0x36
   12d98:	bl	12bc4 <__assert_fail@plt>
   12d9c:	movw	r0, #21940	; 0x55b4
   12da0:	movt	r0, #2
   12da4:	movw	r1, #16193	; 0x3f41
   12da8:	movt	r1, #2
   12dac:	movw	r3, #16275	; 0x3f93
   12db0:	movt	r3, #2
   12db4:	mov	r2, #45	; 0x2d
   12db8:	bl	12bc4 <__assert_fail@plt>
   12dbc:	movw	r0, #21940	; 0x55b4
   12dc0:	movt	r0, #2
   12dc4:	movw	r1, #16193	; 0x3f41
   12dc8:	movt	r1, #2
   12dcc:	movw	r3, #16275	; 0x3f93
   12dd0:	movt	r3, #2
   12dd4:	mov	r2, #46	; 0x2e
   12dd8:	bl	12bc4 <__assert_fail@plt>
   12ddc:	movw	r0, #21940	; 0x55b4
   12de0:	movt	r0, #2
   12de4:	movw	r1, #16193	; 0x3f41
   12de8:	movt	r1, #2
   12dec:	movw	r3, #16275	; 0x3f93
   12df0:	movt	r3, #2
   12df4:	mov	r2, #47	; 0x2f
   12df8:	bl	12bc4 <__assert_fail@plt>
   12dfc:	movw	r0, #21940	; 0x55b4
   12e00:	movt	r0, #2
   12e04:	movw	r1, #16193	; 0x3f41
   12e08:	movt	r1, #2
   12e0c:	movw	r3, #16275	; 0x3f93
   12e10:	movt	r3, #2
   12e14:	mov	r2, #48	; 0x30
   12e18:	bl	12bc4 <__assert_fail@plt>
   12e1c:	movw	r0, #21940	; 0x55b4
   12e20:	movt	r0, #2
   12e24:	movw	r1, #16193	; 0x3f41
   12e28:	movt	r1, #2
   12e2c:	movw	r3, #16275	; 0x3f93
   12e30:	movt	r3, #2
   12e34:	mov	r2, #49	; 0x31
   12e38:	bl	12bc4 <__assert_fail@plt>
   12e3c:	movw	r0, #21940	; 0x55b4
   12e40:	movt	r0, #2
   12e44:	movw	r1, #16193	; 0x3f41
   12e48:	movt	r1, #2
   12e4c:	movw	r3, #16275	; 0x3f93
   12e50:	movt	r3, #2
   12e54:	mov	r2, #50	; 0x32
   12e58:	bl	12bc4 <__assert_fail@plt>
   12e5c:	movw	r0, #21940	; 0x55b4
   12e60:	movt	r0, #2
   12e64:	movw	r1, #16193	; 0x3f41
   12e68:	movt	r1, #2
   12e6c:	movw	r3, #16275	; 0x3f93
   12e70:	movt	r3, #2
   12e74:	mov	r2, #52	; 0x34
   12e78:	bl	12bc4 <__assert_fail@plt>
   12e7c:	movw	r0, #21940	; 0x55b4
   12e80:	movt	r0, #2
   12e84:	movw	r1, #16193	; 0x3f41
   12e88:	movt	r1, #2
   12e8c:	movw	r3, #16275	; 0x3f93
   12e90:	movt	r3, #2
   12e94:	mov	r2, #53	; 0x35
   12e98:	bl	12bc4 <__assert_fail@plt>
   12e9c:	push	{r4, r5, fp, lr}
   12ea0:	add	fp, sp, #8
   12ea4:	mov	r5, #0
   12ea8:	cmp	r0, #0
   12eac:	beq	12ecc <verify_parse@@Base+0x20c>
   12eb0:	mov	r4, r0
   12eb4:	bl	13578 <main@@Base+0x7c>
   12eb8:	cmp	r0, #0
   12ebc:	beq	12ecc <verify_parse@@Base+0x20c>
   12ec0:	mov	r0, r4
   12ec4:	bl	135a0 <main@@Base+0xa4>
   12ec8:	add	r5, r4, r0
   12ecc:	mov	r0, r5
   12ed0:	pop	{r4, r5, fp, pc}
   12ed4:	push	{r4, r5, fp, lr}
   12ed8:	add	fp, sp, #8
   12edc:	cmp	r0, #0
   12ee0:	beq	12f1c <verify_parse@@Base+0x25c>
   12ee4:	mov	r4, r0
   12ee8:	bl	135b8 <main@@Base+0xbc>
   12eec:	sub	r5, r4, r0
   12ef0:	mov	r0, r5
   12ef4:	bl	135c0 <main@@Base+0xc4>
   12ef8:	cmp	r0, #6
   12efc:	bcc	12f14 <verify_parse@@Base+0x254>
   12f00:	add	r0, r5, #4
   12f04:	bl	135c0 <main@@Base+0xc4>
   12f08:	cmp	r0, #0
   12f0c:	addne	r0, r4, r0
   12f10:	popne	{r4, r5, fp, pc}
   12f14:	mov	r0, #0
   12f18:	pop	{r4, r5, fp, pc}
   12f1c:	movw	r0, #16531	; 0x4093
   12f20:	movt	r0, #2
   12f24:	movw	r1, #16569	; 0x40b9
   12f28:	movt	r1, #2
   12f2c:	movw	r3, #16664	; 0x4118
   12f30:	movt	r3, #2
   12f34:	mov	r2, #696	; 0x2b8
   12f38:	bl	12bc4 <__assert_fail@plt>
   12f3c:	cmp	r0, #0
   12f40:	beq	12f48 <verify_parse@@Base+0x288>
   12f44:	b	135d0 <main@@Base+0xd4>
   12f48:	vldr	s0, [pc]	; 12f50 <verify_parse@@Base+0x290>
   12f4c:	bx	lr
   12f50:	andeq	r0, r0, r0
   12f54:	cmp	r0, #0
   12f58:	beq	12f64 <verify_parse@@Base+0x2a4>
   12f5c:	add	r0, r0, #4
   12f60:	b	135d0 <main@@Base+0xd4>
   12f64:	vldr	s0, [pc]	; 12f6c <verify_parse@@Base+0x2ac>
   12f68:	bx	lr
   12f6c:	andeq	r0, r0, r0
   12f70:	cmp	r0, #0
   12f74:	beq	12f80 <verify_parse@@Base+0x2c0>
   12f78:	add	r0, r0, #8
   12f7c:	b	135d0 <main@@Base+0xd4>
   12f80:	vldr	s0, [pc]	; 12f88 <verify_parse@@Base+0x2c8>
   12f84:	bx	lr
   12f88:	andeq	r0, r0, r0
   12f8c:	cmp	r0, #0
   12f90:	beq	12f9c <verify_parse@@Base+0x2dc>
   12f94:	add	r0, r0, #16
   12f98:	b	135dc <main@@Base+0xe0>
   12f9c:	vmov.i32	d0, #0	; 0x00000000
   12fa0:	bx	lr
   12fa4:	cmp	r0, #0
   12fa8:	moveq	r0, #0
   12fac:	bxeq	lr
   12fb0:	add	r0, r0, #24
   12fb4:	b	135e8 <main@@Base+0xec>
   12fb8:	cmp	r0, #0
   12fbc:	addne	r0, r0, #26
   12fc0:	bx	lr
   12fc4:	cmp	r0, #0
   12fc8:	moveq	r0, #0
   12fcc:	bxeq	lr
   12fd0:	b	135f4 <main@@Base+0xf8>
   12fd4:	cmp	r0, #0
   12fd8:	moveq	r0, #0
   12fdc:	bxeq	lr
   12fe0:	add	r0, r0, #2
   12fe4:	b	13600 <main@@Base+0x104>

00012fe8 <test_parse@@Base>:
   12fe8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12fec:	add	fp, sp, #24
   12ff0:	sub	sp, sp, #296	; 0x128
   12ff4:	add	r0, sp, #8
   12ff8:	bl	1cadc <flatcc_builder_init@@Base>
   12ffc:	movw	r5, #28800	; 0x7080
   13000:	movt	r5, #3
   13004:	ldr	r0, [r5]
   13008:	sub	r1, fp, #32
   1300c:	bl	13158 <test_parse@@Base+0x170>
   13010:	cmp	r0, #0
   13014:	bne	1303c <test_parse@@Base+0x54>
   13018:	ldr	r2, [r5]
   1301c:	movw	r0, #29520	; 0x7350
   13020:	movt	r0, #3
   13024:	ldr	r0, [r0]
   13028:	movw	r1, #16300	; 0x3fac
   1302c:	movt	r1, #2
   13030:	bl	12b4c <fprintf@plt>
   13034:	mvn	r6, #0
   13038:	b	1314c <test_parse@@Base+0x164>
   1303c:	mov	r4, r0
   13040:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13044:	add	r0, sp, #8
   13048:	sub	r1, fp, #80	; 0x50
   1304c:	mov	r2, r4
   13050:	bl	13250 <test_parse@@Base+0x268>
   13054:	ldr	r5, [r5]
   13058:	movw	r8, #29520	; 0x7350
   1305c:	movt	r8, #3
   13060:	ldr	r7, [r8]
   13064:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13068:	cmp	r0, #0
   1306c:	bne	13100 <test_parse@@Base+0x118>
   13070:	movw	r1, #16336	; 0x3fd0
   13074:	movt	r1, #2
   13078:	mov	r0, r7
   1307c:	mov	r2, r5
   13080:	mov	r3, r6
   13084:	bl	12b4c <fprintf@plt>
   13088:	add	r6, sp, #8
   1308c:	sub	r1, fp, #36	; 0x24
   13090:	mov	r0, r6
   13094:	bl	1fa84 <flatcc_builder_finalize_aligned_buffer@@Base>
   13098:	mov	r5, r0
   1309c:	movw	r7, #29524	; 0x7354
   130a0:	movt	r7, #3
   130a4:	ldr	r2, [r7]
   130a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   130ac:	bl	132f8 <test_parse@@Base+0x310>
   130b0:	ldr	r0, [r8]
   130b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   130b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   130bc:	movw	r1, #16401	; 0x4011
   130c0:	movt	r1, #2
   130c4:	bl	12b4c <fprintf@plt>
   130c8:	mov	r0, r5
   130cc:	bl	12cc0 <verify_parse@@Base>
   130d0:	ldr	r2, [r7]
   130d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   130d8:	mov	r0, r5
   130dc:	bl	13434 <test_parse@@Base+0x44c>
   130e0:	mov	r0, r6
   130e4:	bl	1cc54 <flatcc_builder_reset@@Base>
   130e8:	mov	r6, #0
   130ec:	cmp	r5, #0
   130f0:	beq	1313c <test_parse@@Base+0x154>
   130f4:	mov	r0, r5
   130f8:	bl	1fb64 <flatcc_builder_aligned_free@@Base>
   130fc:	b	1313c <test_parse@@Base+0x154>
   13100:	ldr	r8, [fp, #-76]	; 0xffffffb4
   13104:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13108:	ldr	r9, [fp, #-44]	; 0xffffffd4
   1310c:	bl	20880 <flatcc_json_parser_error_string@@Base>
   13110:	sub	r1, r9, r8
   13114:	add	r1, r1, #1
   13118:	str	r1, [sp]
   1311c:	str	r0, [sp, #4]
   13120:	movw	r1, #16436	; 0x4034
   13124:	movt	r1, #2
   13128:	mov	r0, r7
   1312c:	mov	r2, r5
   13130:	mov	r3, r6
   13134:	bl	12b4c <fprintf@plt>
   13138:	mvn	r6, #0
   1313c:	mov	r0, r4
   13140:	bl	12aa4 <free@plt>
   13144:	add	r0, sp, #8
   13148:	bl	1cc60 <flatcc_builder_clear@@Base>
   1314c:	mov	r0, r6
   13150:	sub	sp, fp, #24
   13154:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13158:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1315c:	add	fp, sp, #24
   13160:	sub	sp, sp, #8
   13164:	add	r9, sp, #4
   13168:	cmp	r1, #0
   1316c:	movne	r9, r1
   13170:	movw	r1, #16752	; 0x4170
   13174:	movt	r1, #2
   13178:	bl	12a98 <fopen@plt>
   1317c:	cmp	r0, #0
   13180:	beq	13214 <test_parse@@Base+0x22c>
   13184:	mov	r6, r0
   13188:	mov	r8, #0
   1318c:	mov	r1, #0
   13190:	mov	r2, #2
   13194:	bl	12bac <fseek@plt>
   13198:	mov	r0, r6
   1319c:	bl	12abc <ftell@plt>
   131a0:	mov	r5, r0
   131a4:	str	r0, [r9]
   131a8:	cmp	r0, #10240	; 0x2800
   131ac:	bhi	13224 <test_parse@@Base+0x23c>
   131b0:	mov	r0, r6
   131b4:	bl	12ac8 <rewind@plt>
   131b8:	cmp	r5, #0
   131bc:	mov	r0, r5
   131c0:	movweq	r0, #1
   131c4:	bl	12b04 <malloc@plt>
   131c8:	cmp	r0, #0
   131cc:	beq	13224 <test_parse@@Base+0x23c>
   131d0:	mov	r7, r0
   131d4:	mov	r8, r0
   131d8:	mov	r1, #0
   131dc:	mov	r4, r1
   131e0:	add	r0, r7, r1
   131e4:	sub	r2, r5, r1
   131e8:	mov	r1, #1
   131ec:	mov	r3, r6
   131f0:	bl	12ba0 <fread_unlocked@plt>
   131f4:	add	r1, r0, r4
   131f8:	cmp	r0, #0
   131fc:	bne	131dc <test_parse@@Base+0x1f4>
   13200:	cmp	r5, r4
   13204:	bne	1321c <test_parse@@Base+0x234>
   13208:	mov	r0, r6
   1320c:	bl	12b88 <fclose@plt>
   13210:	b	13240 <test_parse@@Base+0x258>
   13214:	mov	r5, #0
   13218:	b	1323c <test_parse@@Base+0x254>
   1321c:	cmp	r6, #0
   13220:	beq	1322c <test_parse@@Base+0x244>
   13224:	mov	r0, r6
   13228:	bl	12b88 <fclose@plt>
   1322c:	cmp	r8, #0
   13230:	beq	1323c <test_parse@@Base+0x254>
   13234:	mov	r0, r8
   13238:	bl	12aa4 <free@plt>
   1323c:	mov	r8, #0
   13240:	str	r5, [r9]
   13244:	mov	r0, r8
   13248:	sub	sp, fp, #24
   1324c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13250:	push	{r4, r5, r6, r7, fp, lr}
   13254:	add	fp, sp, #16
   13258:	sub	sp, sp, #48	; 0x30
   1325c:	mov	r4, r2
   13260:	mov	r6, r0
   13264:	add	r5, sp, #4
   13268:	cmp	r1, #0
   1326c:	movne	r5, r1
   13270:	add	r7, r2, r3
   13274:	mov	r0, r5
   13278:	mov	r1, r6
   1327c:	mov	r3, r7
   13280:	bl	1360c <main@@Base+0x110>
   13284:	movw	r1, #16188	; 0x3f3c
   13288:	movt	r1, #2
   1328c:	mov	r0, r6
   13290:	mov	r2, #0
   13294:	mov	r3, #0
   13298:	bl	1d3f8 <flatcc_builder_start_buffer@@Base>
   1329c:	mov	r1, r0
   132a0:	mvn	r0, #0
   132a4:	cmp	r1, #0
   132a8:	bne	132cc <test_parse@@Base+0x2e4>
   132ac:	mov	r3, sp
   132b0:	mov	r0, r5
   132b4:	mov	r1, r4
   132b8:	mov	r2, r7
   132bc:	bl	13640 <main@@Base+0x144>
   132c0:	ldr	r0, [r5, #24]
   132c4:	cmp	r0, #0
   132c8:	beq	132d4 <test_parse@@Base+0x2ec>
   132cc:	sub	sp, fp, #16
   132d0:	pop	{r4, r5, r6, r7, fp, pc}
   132d4:	ldr	r1, [sp]
   132d8:	mov	r0, r6
   132dc:	bl	1d5ac <flatcc_builder_end_buffer@@Base>
   132e0:	cmp	r0, #0
   132e4:	mvn	r0, #0
   132e8:	strne	r4, [r5, #40]	; 0x28
   132ec:	movne	r0, #0
   132f0:	sub	sp, fp, #16
   132f4:	pop	{r4, r5, r6, r7, fp, pc}
   132f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132fc:	add	fp, sp, #28
   13300:	sub	sp, sp, #20
   13304:	mov	r4, r2
   13308:	mov	r5, r1
   1330c:	mov	r6, r0
   13310:	movw	r1, #16766	; 0x417e
   13314:	movt	r1, #2
   13318:	movw	r2, #16370	; 0x3ff2
   1331c:	movt	r2, #2
   13320:	mov	r0, r4
   13324:	bl	12b4c <fprintf@plt>
   13328:	cmp	r5, #0
   1332c:	beq	13418 <test_parse@@Base+0x430>
   13330:	add	r7, sp, #3
   13334:	movw	sl, #16785	; 0x4191
   13338:	movt	sl, #2
   1333c:	mov	r8, #0
   13340:	ands	r9, r8, #15
   13344:	bne	133a8 <test_parse@@Base+0x3c0>
   13348:	b	133c0 <test_parse@@Base+0x3d8>
   1334c:	mov	r0, r4
   13350:	movw	r1, #16777	; 0x4189
   13354:	movt	r1, #2
   13358:	mov	r2, r8
   1335c:	bl	12b4c <fprintf@plt>
   13360:	ldrb	r2, [r6, r8]
   13364:	mov	r0, r4
   13368:	mov	r1, sl
   1336c:	bl	12b4c <fprintf@plt>
   13370:	ldrb	r0, [r6, r8]
   13374:	sub	r1, r0, #32
   13378:	uxtb	r1, r1
   1337c:	cmp	r1, #94	; 0x5e
   13380:	movwhi	r0, #46	; 0x2e
   13384:	strb	r0, [r7, r9]
   13388:	add	r0, r7, r9
   1338c:	mov	r1, #0
   13390:	strb	r1, [r0, #1]
   13394:	add	r8, r8, #1
   13398:	cmp	r5, r8
   1339c:	beq	133e0 <test_parse@@Base+0x3f8>
   133a0:	ands	r9, r8, #15
   133a4:	beq	133c0 <test_parse@@Base+0x3d8>
   133a8:	tst	r8, #7
   133ac:	bne	13360 <test_parse@@Base+0x378>
   133b0:	mov	r0, #32
   133b4:	mov	r1, r4
   133b8:	bl	12b94 <fputc@plt>
   133bc:	b	13360 <test_parse@@Base+0x378>
   133c0:	cmp	r8, #0
   133c4:	beq	1334c <test_parse@@Base+0x364>
   133c8:	mov	r0, r4
   133cc:	movw	r1, #16771	; 0x4183
   133d0:	movt	r1, #2
   133d4:	mov	r2, r7
   133d8:	bl	12b4c <fprintf@plt>
   133dc:	b	1334c <test_parse@@Base+0x364>
   133e0:	tst	r5, #15
   133e4:	beq	13418 <test_parse@@Base+0x430>
   133e8:	add	r6, r5, #1
   133ec:	movw	r5, #16821	; 0x41b5
   133f0:	movt	r5, #2
   133f4:	mov	r0, r5
   133f8:	mov	r1, #3
   133fc:	mov	r2, #1
   13400:	mov	r3, r4
   13404:	bl	12af8 <fwrite@plt>
   13408:	add	r0, r6, #1
   1340c:	tst	r6, #15
   13410:	mov	r6, r0
   13414:	bne	133f4 <test_parse@@Base+0x40c>
   13418:	movw	r1, #16771	; 0x4183
   1341c:	movt	r1, #2
   13420:	add	r2, sp, #3
   13424:	mov	r0, r4
   13428:	bl	12b4c <fprintf@plt>
   1342c:	sub	sp, fp, #28
   13430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13438:	add	fp, sp, #28
   1343c:	sub	sp, sp, #4
   13440:	mov	r4, r2
   13444:	mov	r5, r1
   13448:	mov	r6, r0
   1344c:	movw	r1, #16791	; 0x4197
   13450:	movt	r1, #2
   13454:	movw	r2, #16394	; 0x400a
   13458:	movt	r2, #2
   1345c:	mov	r0, r4
   13460:	bl	12b4c <fprintf@plt>
   13464:	cmp	r5, #0
   13468:	beq	134dc <test_parse@@Base+0x4f4>
   1346c:	mov	r7, #0
   13470:	movw	r8, #16820	; 0x41b4
   13474:	movt	r8, #2
   13478:	movw	sl, #16825	; 0x41b9
   1347c:	movt	sl, #2
   13480:	movw	r9, #16821	; 0x41b5
   13484:	movt	r9, #2
   13488:	tst	r7, #15
   1348c:	bne	134c8 <test_parse@@Base+0x4e0>
   13490:	mov	r0, r8
   13494:	mov	r1, #4
   13498:	mov	r2, #1
   1349c:	mov	r3, r4
   134a0:	bl	12af8 <fwrite@plt>
   134a4:	ldrb	r2, [r6, r7]
   134a8:	mov	r0, r4
   134ac:	mov	r1, sl
   134b0:	bl	12b4c <fprintf@plt>
   134b4:	add	r7, r7, #1
   134b8:	cmp	r5, r7
   134bc:	beq	134dc <test_parse@@Base+0x4f4>
   134c0:	tst	r7, #15
   134c4:	beq	13490 <test_parse@@Base+0x4a8>
   134c8:	tst	r7, #7
   134cc:	bne	134a4 <test_parse@@Base+0x4bc>
   134d0:	mov	r0, r9
   134d4:	mov	r1, #3
   134d8:	b	13498 <test_parse@@Base+0x4b0>
   134dc:	movw	r0, #16834	; 0x41c2
   134e0:	movt	r0, #2
   134e4:	mov	r1, #4
   134e8:	mov	r2, #1
   134ec:	mov	r3, r4
   134f0:	sub	sp, fp, #28
   134f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134f8:	b	12af8 <fwrite@plt>

000134fc <main@@Base>:
   134fc:	push	{r4, r5, r6, sl, fp, lr}
   13500:	add	fp, sp, #16
   13504:	mov	r4, r1
   13508:	mov	r5, r0
   1350c:	movw	r6, #29520	; 0x7350
   13510:	movt	r6, #3
   13514:	ldr	r3, [r6]
   13518:	movw	r0, #16450	; 0x4042
   1351c:	movt	r0, #2
   13520:	mov	r1, #16
   13524:	mov	r2, #1
   13528:	bl	12af8 <fwrite@plt>
   1352c:	sub	r0, r5, #1
   13530:	cmp	r0, #2
   13534:	bcs	13558 <main@@Base+0x5c>
   13538:	cmp	r5, #2
   1353c:	bne	13550 <main@@Base+0x54>
   13540:	ldr	r0, [r4, #4]
   13544:	movw	r1, #28800	; 0x7080
   13548:	movt	r1, #3
   1354c:	str	r0, [r1]
   13550:	pop	{r4, r5, r6, sl, fp, lr}
   13554:	b	12fe8 <test_parse@@Base>
   13558:	ldr	r3, [r6]
   1355c:	movw	r0, #16467	; 0x4053
   13560:	movt	r0, #2
   13564:	mov	r1, #63	; 0x3f
   13568:	mov	r2, #1
   1356c:	bl	12af8 <fwrite@plt>
   13570:	mov	r0, #1
   13574:	bl	12b28 <exit@plt>
   13578:	push	{fp, lr}
   1357c:	mov	fp, sp
   13580:	add	r0, r0, #4
   13584:	bl	135a8 <main@@Base+0xac>
   13588:	movw	r1, #45235	; 0xb0b3
   1358c:	movt	r1, #44209	; 0xacb1
   13590:	add	r0, r0, r1
   13594:	clz	r0, r0
   13598:	lsr	r0, r0, #5
   1359c:	pop	{fp, pc}
   135a0:	ldr	r0, [r0]
   135a4:	b	135b4 <main@@Base+0xb8>
   135a8:	ldr	r0, [r0]
   135ac:	b	135b0 <main@@Base+0xb4>
   135b0:	bx	lr
   135b4:	bx	lr
   135b8:	ldr	r0, [r0]
   135bc:	b	135c8 <main@@Base+0xcc>
   135c0:	ldrh	r0, [r0]
   135c4:	b	135cc <main@@Base+0xd0>
   135c8:	bx	lr
   135cc:	bx	lr
   135d0:	vldr	s0, [r0]
   135d4:	b	135d8 <main@@Base+0xdc>
   135d8:	bx	lr
   135dc:	vldr	d0, [r0]
   135e0:	b	135e4 <main@@Base+0xe8>
   135e4:	bx	lr
   135e8:	ldrsb	r0, [r0]
   135ec:	b	135f0 <main@@Base+0xf4>
   135f0:	bx	lr
   135f4:	ldrsh	r0, [r0]
   135f8:	b	135fc <main@@Base+0x100>
   135fc:	bx	lr
   13600:	ldrsb	r0, [r0]
   13604:	b	13608 <main@@Base+0x10c>
   13608:	bx	lr
   1360c:	vmov.i32	q8, #0	; 0x00000000
   13610:	add	ip, r0, #12
   13614:	vst1.32	{d16-d17}, [ip]
   13618:	add	ip, r0, #28
   1361c:	vst1.32	{d16-d17}, [ip]
   13620:	mov	ip, #0
   13624:	stm	r0, {r1, r2, ip}
   13628:	mov	r1, #1
   1362c:	str	r1, [r0, #16]
   13630:	str	r2, [r0, #28]
   13634:	str	r3, [r0, #32]
   13638:	str	r2, [r0, #36]	; 0x24
   1363c:	bx	lr
   13640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13644:	add	fp, sp, #28
   13648:	sub	sp, sp, #4
   1364c:	vpush	{d8-d9}
   13650:	sub	sp, sp, #56	; 0x38
   13654:	mov	r6, r3
   13658:	mov	r4, r2
   1365c:	mov	r8, r1
   13660:	mov	r1, #0
   13664:	str	r1, [r3]
   13668:	str	r0, [sp, #28]
   1366c:	ldr	r0, [r0]
   13670:	mov	r1, #36	; 0x24
   13674:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   13678:	cmp	r0, #0
   1367c:	beq	136ac <main@@Base+0x1b0>
   13680:	ldr	r0, [sp, #28]
   13684:	mov	r1, r8
   13688:	mov	r2, r4
   1368c:	mov	r3, #33	; 0x21
   13690:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   13694:	mov	r8, r0
   13698:	mov	r0, r8
   1369c:	sub	sp, fp, #48	; 0x30
   136a0:	vpop	{d8-d9}
   136a4:	add	sp, sp, #4
   136a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136ac:	add	r0, sp, #44	; 0x2c
   136b0:	str	r0, [sp]
   136b4:	ldr	r0, [sp, #28]
   136b8:	mov	r1, r8
   136bc:	mov	r2, r4
   136c0:	mov	r3, #1
   136c4:	bl	22204 <flatcc_json_parser_prepare_unions@@Base>
   136c8:	cmp	r0, r4
   136cc:	beq	13680 <main@@Base+0x184>
   136d0:	add	r3, sp, #52	; 0x34
   136d4:	ldr	r0, [sp, #28]
   136d8:	mov	r1, r8
   136dc:	mov	r2, r4
   136e0:	bl	15c40 <main@@Base+0x2744>
   136e4:	mov	r8, r0
   136e8:	ldr	r0, [sp, #52]	; 0x34
   136ec:	cmp	r0, #0
   136f0:	beq	15bc0 <main@@Base+0x26c4>
   136f4:	vmov.f32	s16, #8	; 0x40400000  3.0
   136f8:	vldr	s18, [pc, #936]	; 13aa8 <main@@Base+0x5ac>
   136fc:	movw	r0, #13407	; 0x345f
   13700:	movt	r0, #29494	; 0x7336
   13704:	sub	r0, r0, #512	; 0x200
   13708:	sub	r0, r0, #196608	; 0x30000
   1370c:	add	r1, sp, #16
   13710:	stm	r1, {r0, r4, r6}
   13714:	b	13754 <main@@Base+0x258>
   13718:	ldr	r0, [sp, #28]
   1371c:	mov	r1, r9
   13720:	mov	r2, r4
   13724:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   13728:	mov	r8, r0
   1372c:	add	r9, sp, #52	; 0x34
   13730:	ldr	r0, [sp, #28]
   13734:	mov	r1, r8
   13738:	mov	r2, r4
   1373c:	mov	r3, r9
   13740:	bl	18efc <main@@Base+0x5a00>
   13744:	mov	r8, r0
   13748:	ldr	r0, [sp, #52]	; 0x34
   1374c:	cmp	r0, #0
   13750:	beq	15bc0 <main@@Base+0x26c4>
   13754:	ldr	r0, [sp, #28]
   13758:	mov	r1, r8
   1375c:	mov	r2, r4
   13760:	bl	15cd0 <main@@Base+0x27d4>
   13764:	mov	r9, r0
   13768:	mov	r1, r4
   1376c:	bl	15d14 <main@@Base+0x2818>
   13770:	mov	sl, r0
   13774:	mov	r7, r1
   13778:	movw	r0, #29281	; 0x7261
   1377c:	movt	r0, #24946	; 0x6172
   13780:	subs	r0, sl, r0
   13784:	movw	r3, #29556	; 0x7374
   13788:	movt	r3, #29797	; 0x7465
   1378c:	sbcs	r0, r1, r3
   13790:	bcs	1383c <main@@Base+0x340>
   13794:	movw	r0, #28004	; 0x6d64
   13798:	movt	r0, #28257	; 0x6e61
   1379c:	cmp	r7, r0
   137a0:	bhi	13a18 <main@@Base+0x51c>
   137a4:	movw	r0, #25975	; 0x6577
   137a8:	movt	r0, #26220	; 0x666c
   137ac:	cmp	r7, r0
   137b0:	bhi	13b40 <main@@Base+0x644>
   137b4:	movw	r0, #27759	; 0x6c6f
   137b8:	movt	r0, #25455	; 0x636f
   137bc:	eor	r1, r7, r0
   137c0:	and	r0, sl, #-16777216	; 0xff000000
   137c4:	eor	r2, r0, #1912602624	; 0x72000000
   137c8:	orrs	r1, r2, r1
   137cc:	beq	14358 <main@@Base+0xe5c>
   137d0:	movw	r1, #25965	; 0x656d
   137d4:	movt	r1, #25966	; 0x656e
   137d8:	eor	r1, r7, r1
   137dc:	eor	r0, r0, #2030043136	; 0x79000000
   137e0:	orrs	r0, r0, r1
   137e4:	bne	13718 <main@@Base+0x21c>
   137e8:	ldr	r0, [sp, #28]
   137ec:	mov	r1, r9
   137f0:	mov	r2, r4
   137f4:	mov	r3, #5
   137f8:	bl	15d18 <main@@Base+0x281c>
   137fc:	mov	r1, r0
   13800:	cmp	r9, r0
   13804:	beq	14878 <main@@Base+0x137c>
   13808:	ldr	r0, [sp, #28]
   1380c:	mov	r2, r4
   13810:	add	r3, sp, #48	; 0x30
   13814:	bl	13640 <main@@Base+0x144>
   13818:	mov	r8, r0
   1381c:	ldr	r0, [sp, #48]	; 0x30
   13820:	cmp	r0, #0
   13824:	add	r9, sp, #52	; 0x34
   13828:	beq	13680 <main@@Base+0x184>
   1382c:	ldr	r0, [sp, #28]
   13830:	ldr	r0, [r0]
   13834:	mov	r1, #12
   13838:	b	15a6c <main@@Base+0x2570>
   1383c:	movw	r0, #0
   13840:	movt	r0, #26163	; 0x6633
   13844:	subs	r0, sl, r0
   13848:	sbcs	r0, r7, r3
   1384c:	bcs	13aac <main@@Base+0x5b0>
   13850:	movw	r0, #29281	; 0x7261
   13854:	movt	r0, #24946	; 0x6172
   13858:	eor	r1, sl, r0
   1385c:	eor	r0, r7, r3
   13860:	orrs	r1, r1, r0
   13864:	bne	13cac <main@@Base+0x7b0>
   13868:	add	r7, r9, #8
   1386c:	mov	r0, r7
   13870:	mov	r1, r4
   13874:	bl	15d14 <main@@Base+0x2818>
   13878:	movw	r2, #26989	; 0x696d
   1387c:	movt	r2, #29810	; 0x7472
   13880:	subs	r2, r2, r0
   13884:	movw	r5, #26227	; 0x6673
   13888:	movt	r5, #31087	; 0x796f
   1388c:	sbcs	r2, r5, r1
   13890:	bcc	13ef4 <main@@Base+0x9f8>
   13894:	movw	r2, #29797	; 0x7465
   13898:	movt	r2, #28530	; 0x6f72
   1389c:	eor	r2, r0, r2
   138a0:	eor	r3, r1, r5
   138a4:	orrs	r2, r2, r3
   138a8:	beq	14880 <main@@Base+0x1384>
   138ac:	movw	r2, #27763	; 0x6c73
   138b0:	movt	r2, #28527	; 0x6f6f
   138b4:	eor	r0, r0, r2
   138b8:	movw	r2, #26210	; 0x6662
   138bc:	movt	r2, #31087	; 0x796f
   138c0:	eor	r1, r1, r2
   138c4:	orrs	r0, r0, r1
   138c8:	bne	14974 <main@@Base+0x1478>
   138cc:	ldr	r0, [sp, #28]
   138d0:	mov	r1, r7
   138d4:	mov	r2, r4
   138d8:	mov	r3, #8
   138dc:	bl	15d18 <main@@Base+0x281c>
   138e0:	mov	r8, r0
   138e4:	cmp	r7, r0
   138e8:	add	r9, sp, #52	; 0x34
   138ec:	beq	14fac <main@@Base+0x1ab0>
   138f0:	ldr	r0, [sp, #28]
   138f4:	ldr	r0, [r0]
   138f8:	mov	r1, #1
   138fc:	mov	r2, #1
   13900:	mvn	r3, #0
   13904:	bl	1de10 <flatcc_builder_start_vector@@Base>
   13908:	cmp	r0, #0
   1390c:	bne	13680 <main@@Base+0x184>
   13910:	ldr	r0, [sp, #28]
   13914:	mov	r1, r8
   13918:	mov	r2, r4
   1391c:	mov	r3, r9
   13920:	bl	16918 <main@@Base+0x341c>
   13924:	mov	r8, r0
   13928:	ldr	r0, [sp, #52]	; 0x34
   1392c:	cmp	r0, #0
   13930:	beq	139f0 <main@@Base+0x4f4>
   13934:	mov	r0, #0
   13938:	strb	r0, [sp, #32]
   1393c:	ldr	r0, [sp, #28]
   13940:	ldr	r0, [r0]
   13944:	mov	r1, #1
   13948:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   1394c:	cmp	r0, #0
   13950:	beq	13680 <main@@Base+0x184>
   13954:	mov	r7, r0
   13958:	ldr	r0, [sp, #28]
   1395c:	mov	r1, r8
   13960:	mov	r2, r4
   13964:	mov	r5, r4
   13968:	add	r4, sp, #32
   1396c:	mov	r3, r4
   13970:	bl	1797c <main@@Base+0x4480>
   13974:	mov	r6, r0
   13978:	cmp	r8, r0
   1397c:	beq	1398c <main@@Base+0x490>
   13980:	mov	r8, r6
   13984:	mov	r4, r5
   13988:	b	139bc <main@@Base+0x4c0>
   1398c:	str	r4, [sp]
   13990:	ldr	r0, [sp, #28]
   13994:	mov	r1, r6
   13998:	mov	r2, r5
   1399c:	movw	r3, #28884	; 0x70d4
   139a0:	movt	r3, #3
   139a4:	bl	17a38 <main@@Base+0x453c>
   139a8:	mov	r8, r0
   139ac:	cmp	r0, r6
   139b0:	mov	r4, r5
   139b4:	cmpne	r8, r4
   139b8:	beq	13680 <main@@Base+0x184>
   139bc:	ldrb	r1, [sp, #32]
   139c0:	mov	r0, r7
   139c4:	bl	17b9c <main@@Base+0x46a0>
   139c8:	ldr	r0, [sp, #28]
   139cc:	mov	r1, r8
   139d0:	mov	r2, r4
   139d4:	mov	r3, r9
   139d8:	bl	16bbc <main@@Base+0x36c0>
   139dc:	mov	r8, r0
   139e0:	ldr	r0, [sp, #52]	; 0x34
   139e4:	cmp	r0, #0
   139e8:	ldr	r6, [sp, #24]
   139ec:	bne	13934 <main@@Base+0x438>
   139f0:	ldr	r0, [sp, #28]
   139f4:	ldr	r0, [r0]
   139f8:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   139fc:	str	r0, [sp, #48]	; 0x30
   13a00:	cmp	r0, #0
   13a04:	beq	13680 <main@@Base+0x184>
   13a08:	ldr	r0, [sp, #28]
   13a0c:	ldr	r0, [r0]
   13a10:	mov	r1, #24
   13a14:	b	15a6c <main@@Base+0x2570>
   13a18:	movw	r0, #29555	; 0x7373
   13a1c:	movt	r0, #29797	; 0x7465
   13a20:	cmp	r7, r0
   13a24:	movw	r1, #29285	; 0x7265
   13a28:	movt	r1, #28769	; 0x7061
   13a2c:	movw	r2, #24430	; 0x5f6e
   13a30:	movt	r2, #28276	; 0x6e74
   13a34:	bhi	13d64 <main@@Base+0x868>
   13a38:	subs	r0, sl, r2
   13a3c:	sbcs	r0, r7, r1
   13a40:	bcs	1400c <main@@Base+0xb10>
   13a44:	movw	r0, #28005	; 0x6d65
   13a48:	movt	r0, #28257	; 0x6e61
   13a4c:	teq	r7, r0
   13a50:	bne	13718 <main@@Base+0x21c>
   13a54:	ldr	r0, [sp, #28]
   13a58:	mov	r1, r9
   13a5c:	mov	r2, r4
   13a60:	mov	r3, #4
   13a64:	bl	15d18 <main@@Base+0x281c>
   13a68:	mov	r1, r0
   13a6c:	cmp	r9, r0
   13a70:	beq	14878 <main@@Base+0x137c>
   13a74:	ldr	r0, [sp, #28]
   13a78:	mov	r2, r4
   13a7c:	add	r3, sp, #48	; 0x30
   13a80:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   13a84:	mov	r8, r0
   13a88:	ldr	r0, [sp, #48]	; 0x30
   13a8c:	cmp	r0, #0
   13a90:	add	r9, sp, #52	; 0x34
   13a94:	beq	13680 <main@@Base+0x184>
   13a98:	ldr	r0, [sp, #28]
   13a9c:	ldr	r0, [r0]
   13aa0:	mov	r1, #3
   13aa4:	b	15a6c <main@@Base+0x2570>
   13aa8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   13aac:	movw	r1, #29544	; 0x7368
   13ab0:	movt	r1, #26721	; 0x6861
   13ab4:	subs	r0, sl, r1
   13ab8:	sbcs	r0, r7, r3
   13abc:	bcs	13e44 <main@@Base+0x948>
   13ac0:	eor	r0, r7, r3
   13ac4:	bfc	sl, #0, #16
   13ac8:	movw	r1, #0
   13acc:	movt	r1, #26163	; 0x6633
   13ad0:	eor	r1, sl, r1
   13ad4:	orrs	r0, r1, r0
   13ad8:	bne	13718 <main@@Base+0x21c>
   13adc:	ldr	r0, [sp, #28]
   13ae0:	mov	r1, r9
   13ae4:	mov	r2, r4
   13ae8:	mov	r3, #6
   13aec:	bl	15d18 <main@@Base+0x281c>
   13af0:	mov	r6, r0
   13af4:	cmp	r9, r0
   13af8:	beq	14e34 <main@@Base+0x1938>
   13afc:	mov	r0, #0
   13b00:	str	r0, [sp, #32]
   13b04:	ldr	r0, [sp, #28]
   13b08:	mov	r1, r6
   13b0c:	mov	r2, r4
   13b10:	mov	r5, r4
   13b14:	add	r4, sp, #32
   13b18:	mov	r3, r4
   13b1c:	bl	215e4 <flatcc_json_parser_float@@Base>
   13b20:	mov	r7, r0
   13b24:	cmp	r6, r0
   13b28:	add	r9, sp, #52	; 0x34
   13b2c:	beq	14c28 <main@@Base+0x172c>
   13b30:	mov	r8, r7
   13b34:	ldr	r6, [sp, #24]
   13b38:	mov	r4, r5
   13b3c:	b	14c5c <main@@Base+0x1760>
   13b40:	movw	r0, #65535	; 0xffff
   13b44:	movt	r0, #26735	; 0x686f
   13b48:	cmp	r7, r0
   13b4c:	bhi	140d0 <main@@Base+0xbd4>
   13b50:	movw	r0, #25976	; 0x6578
   13b54:	movt	r0, #26220	; 0x666c
   13b58:	teq	r7, r0
   13b5c:	bne	13718 <main@@Base+0x21c>
   13b60:	ldr	r0, [sp, #28]
   13b64:	mov	r1, r9
   13b68:	mov	r2, r4
   13b6c:	mov	r3, #4
   13b70:	bl	15d18 <main@@Base+0x281c>
   13b74:	mov	r8, r0
   13b78:	cmp	r9, r0
   13b7c:	beq	14ab4 <main@@Base+0x15b8>
   13b80:	ldr	r0, [sp, #28]
   13b84:	ldr	r0, [r0]
   13b88:	mov	r1, #1
   13b8c:	mov	r2, #1
   13b90:	mvn	r3, #0
   13b94:	bl	1de10 <flatcc_builder_start_vector@@Base>
   13b98:	cmp	r0, #0
   13b9c:	add	r9, sp, #52	; 0x34
   13ba0:	bne	13680 <main@@Base+0x184>
   13ba4:	ldr	r0, [sp, #28]
   13ba8:	mov	r1, r8
   13bac:	mov	r2, r4
   13bb0:	mov	r3, r9
   13bb4:	bl	16918 <main@@Base+0x341c>
   13bb8:	mov	r8, r0
   13bbc:	ldr	r0, [sp, #52]	; 0x34
   13bc0:	cmp	r0, #0
   13bc4:	beq	13c84 <main@@Base+0x788>
   13bc8:	mov	r0, #0
   13bcc:	strb	r0, [sp, #32]
   13bd0:	ldr	r0, [sp, #28]
   13bd4:	ldr	r0, [r0]
   13bd8:	mov	r1, #1
   13bdc:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   13be0:	cmp	r0, #0
   13be4:	beq	13680 <main@@Base+0x184>
   13be8:	mov	r7, r0
   13bec:	ldr	r0, [sp, #28]
   13bf0:	mov	r1, r8
   13bf4:	mov	r2, r4
   13bf8:	mov	r5, r4
   13bfc:	add	r4, sp, #32
   13c00:	mov	r3, r4
   13c04:	bl	169a8 <main@@Base+0x34ac>
   13c08:	mov	r6, r0
   13c0c:	cmp	r8, r0
   13c10:	beq	13c20 <main@@Base+0x724>
   13c14:	mov	r8, r6
   13c18:	mov	r4, r5
   13c1c:	b	13c50 <main@@Base+0x754>
   13c20:	str	r4, [sp]
   13c24:	ldr	r0, [sp, #28]
   13c28:	mov	r1, r6
   13c2c:	mov	r2, r5
   13c30:	movw	r3, #28820	; 0x7094
   13c34:	movt	r3, #3
   13c38:	bl	16a38 <main@@Base+0x353c>
   13c3c:	mov	r8, r0
   13c40:	cmp	r0, r6
   13c44:	mov	r4, r5
   13c48:	cmpne	r8, r4
   13c4c:	beq	13680 <main@@Base+0x184>
   13c50:	ldrb	r1, [sp, #32]
   13c54:	mov	r0, r7
   13c58:	bl	16b9c <main@@Base+0x36a0>
   13c5c:	ldr	r0, [sp, #28]
   13c60:	mov	r1, r8
   13c64:	mov	r2, r4
   13c68:	mov	r3, r9
   13c6c:	bl	16bbc <main@@Base+0x36c0>
   13c70:	mov	r8, r0
   13c74:	ldr	r0, [sp, #52]	; 0x34
   13c78:	cmp	r0, #0
   13c7c:	ldr	r6, [sp, #24]
   13c80:	bne	13bc8 <main@@Base+0x6cc>
   13c84:	ldr	r0, [sp, #28]
   13c88:	ldr	r0, [r0]
   13c8c:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   13c90:	str	r0, [sp, #48]	; 0x30
   13c94:	cmp	r0, #0
   13c98:	beq	13680 <main@@Base+0x184>
   13c9c:	ldr	r0, [sp, #28]
   13ca0:	ldr	r0, [r0]
   13ca4:	mov	r1, #30
   13ca8:	b	15a6c <main@@Base+0x2570>
   13cac:	movw	r1, #28788	; 0x7074
   13cb0:	movt	r1, #25965	; 0x656d
   13cb4:	subs	r1, sl, r1
   13cb8:	sbcs	r1, r7, r3
   13cbc:	bcs	14160 <main@@Base+0xc64>
   13cc0:	movw	r1, #28524	; 0x6f6c
   13cc4:	movt	r1, #25199	; 0x626f
   13cc8:	eor	r1, sl, r1
   13ccc:	orrs	r1, r1, r0
   13cd0:	beq	1497c <main@@Base+0x1480>
   13cd4:	movw	r1, #29541	; 0x7365
   13cd8:	movt	r1, #25185	; 0x6261
   13cdc:	eor	r1, sl, r1
   13ce0:	orrs	r0, r1, r0
   13ce4:	bne	13718 <main@@Base+0x21c>
   13ce8:	add	r6, r9, #8
   13cec:	mov	r0, r6
   13cf0:	mov	r1, r4
   13cf4:	bl	15d14 <main@@Base+0x2818>
   13cf8:	bfc	r1, #0, #16
   13cfc:	movw	r0, #0
   13d00:	movt	r0, #13876	; 0x3634
   13d04:	teq	r1, r0
   13d08:	bne	14e34 <main@@Base+0x1938>
   13d0c:	ldr	r0, [sp, #28]
   13d10:	mov	r1, r6
   13d14:	mov	r2, r4
   13d18:	mov	r3, #2
   13d1c:	bl	15d18 <main@@Base+0x281c>
   13d20:	mov	r1, r0
   13d24:	cmp	r6, r0
   13d28:	add	r9, sp, #52	; 0x34
   13d2c:	beq	14e5c <main@@Base+0x1960>
   13d30:	ldr	r0, [sp, #28]
   13d34:	mov	r2, r4
   13d38:	add	r3, sp, #48	; 0x30
   13d3c:	bl	17ddc <main@@Base+0x48e0>
   13d40:	mov	r8, r0
   13d44:	ldr	r0, [sp, #48]	; 0x30
   13d48:	cmp	r0, #0
   13d4c:	ldr	r6, [sp, #24]
   13d50:	beq	13680 <main@@Base+0x184>
   13d54:	ldr	r0, [sp, #28]
   13d58:	ldr	r0, [r0]
   13d5c:	mov	r1, #35	; 0x23
   13d60:	b	15a6c <main@@Base+0x2570>
   13d64:	eor	r6, r7, r3
   13d68:	and	r4, sl, #-16777216	; 0xff000000
   13d6c:	eor	r0, r4, #872415232	; 0x34000000
   13d70:	orrs	r0, r0, r6
   13d74:	bne	141f8 <main@@Base+0xcfc>
   13d78:	ldr	r0, [sp, #28]
   13d7c:	mov	r1, r9
   13d80:	ldr	r4, [sp, #20]
   13d84:	mov	r2, r4
   13d88:	mov	r3, #5
   13d8c:	bl	15d18 <main@@Base+0x281c>
   13d90:	mov	r8, r0
   13d94:	cmp	r9, r0
   13d98:	beq	14d98 <main@@Base+0x189c>
   13d9c:	ldr	r0, [sp, #28]
   13da0:	ldr	r0, [r0]
   13da4:	mov	r1, #4
   13da8:	mov	r2, #2
   13dac:	mvn	r3, #-1073741824	; 0xc0000000
   13db0:	bl	1de10 <flatcc_builder_start_vector@@Base>
   13db4:	cmp	r0, #0
   13db8:	bne	13680 <main@@Base+0x184>
   13dbc:	ldr	r5, [sp, #28]
   13dc0:	mov	r0, r5
   13dc4:	mov	r1, r8
   13dc8:	mov	r2, r4
   13dcc:	add	r9, sp, #52	; 0x34
   13dd0:	mov	r3, r9
   13dd4:	bl	16918 <main@@Base+0x341c>
   13dd8:	mov	r8, r0
   13ddc:	ldr	r0, [r5]
   13de0:	ldr	r1, [sp, #52]	; 0x34
   13de4:	cmp	r1, #0
   13de8:	beq	14c8c <main@@Base+0x1790>
   13dec:	ldr	r6, [sp, #24]
   13df0:	mov	r1, #1
   13df4:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   13df8:	cmp	r0, #0
   13dfc:	beq	13680 <main@@Base+0x184>
   13e00:	mov	r3, r0
   13e04:	ldr	r5, [sp, #28]
   13e08:	mov	r0, r5
   13e0c:	mov	r1, r8
   13e10:	mov	r2, r4
   13e14:	bl	17418 <main@@Base+0x3f1c>
   13e18:	mov	r1, r0
   13e1c:	mov	r0, r5
   13e20:	mov	r2, r4
   13e24:	mov	r3, r9
   13e28:	bl	16bbc <main@@Base+0x36c0>
   13e2c:	mov	r8, r0
   13e30:	ldr	r0, [r5]
   13e34:	ldr	r1, [sp, #52]	; 0x34
   13e38:	cmp	r1, #0
   13e3c:	bne	13df0 <main@@Base+0x8f4>
   13e40:	b	14c90 <main@@Base+0x1794>
   13e44:	eor	r1, sl, r1
   13e48:	eor	r0, r7, r3
   13e4c:	orrs	r1, r1, r0
   13e50:	bne	14264 <main@@Base+0xd68>
   13e54:	add	r7, r9, #8
   13e58:	mov	r0, r7
   13e5c:	mov	r1, r4
   13e60:	bl	15d14 <main@@Base+0x2818>
   13e64:	movw	r3, #30257	; 0x7631
   13e68:	movt	r3, #26222	; 0x666e
   13e6c:	subs	r2, r0, r3
   13e70:	movw	r2, #13407	; 0x345f
   13e74:	movt	r2, #29494	; 0x7336
   13e78:	sbcs	r2, r1, r2
   13e7c:	bcs	143b4 <main@@Base+0xeb8>
   13e80:	eor	r0, r0, r3
   13e84:	ldr	r2, [sp, #16]
   13e88:	eor	r1, r1, r2
   13e8c:	orrs	r0, r0, r1
   13e90:	add	r9, sp, #52	; 0x34
   13e94:	bne	1513c <main@@Base+0x1c40>
   13e98:	ldr	r0, [sp, #28]
   13e9c:	mov	r1, r7
   13ea0:	mov	r2, r4
   13ea4:	mov	r3, #8
   13ea8:	bl	15d18 <main@@Base+0x281c>
   13eac:	mov	r6, r0
   13eb0:	cmp	r7, r0
   13eb4:	beq	15160 <main@@Base+0x1c64>
   13eb8:	mov	r0, #0
   13ebc:	str	r0, [sp, #32]
   13ec0:	ldr	r0, [sp, #28]
   13ec4:	mov	r1, r6
   13ec8:	mov	r2, r4
   13ecc:	mov	r5, r4
   13ed0:	add	r4, sp, #32
   13ed4:	mov	r3, r4
   13ed8:	bl	18528 <main@@Base+0x502c>
   13edc:	mov	r7, r0
   13ee0:	cmp	r6, r0
   13ee4:	beq	153b8 <main@@Base+0x1ebc>
   13ee8:	mov	r8, r7
   13eec:	mov	r4, r5
   13ef0:	b	153e8 <main@@Base+0x1eec>
   13ef4:	movw	r2, #27749	; 0x6c65
   13ef8:	movt	r2, #24930	; 0x6162
   13efc:	eor	r2, r0, r2
   13f00:	movw	r3, #26228	; 0x6674
   13f04:	movt	r3, #31087	; 0x796f
   13f08:	eor	r3, r1, r3
   13f0c:	orrs	r2, r2, r3
   13f10:	beq	149dc <main@@Base+0x14e0>
   13f14:	movw	r2, #26990	; 0x696e
   13f18:	movt	r2, #29810	; 0x7472
   13f1c:	eor	r0, r0, r2
   13f20:	eor	r1, r1, r5
   13f24:	orrs	r0, r0, r1
   13f28:	bne	14968 <main@@Base+0x146c>
   13f2c:	add	r7, r9, #16
   13f30:	mov	r0, r7
   13f34:	mov	r1, r4
   13f38:	bl	15d14 <main@@Base+0x2818>
   13f3c:	mov	r0, r1
   13f40:	bfc	r0, #0, #16
   13f44:	movw	r2, #0
   13f48:	movt	r2, #26418	; 0x6732
   13f4c:	teq	r0, r2
   13f50:	bne	14e64 <main@@Base+0x1968>
   13f54:	ldr	r0, [sp, #28]
   13f58:	mov	r1, r7
   13f5c:	mov	r2, r4
   13f60:	mov	r3, #2
   13f64:	bl	15d18 <main@@Base+0x281c>
   13f68:	mov	r8, r0
   13f6c:	cmp	r7, r0
   13f70:	add	r9, sp, #52	; 0x34
   13f74:	beq	15154 <main@@Base+0x1c58>
   13f78:	ldr	r0, [sp, #28]
   13f7c:	ldr	r0, [r0]
   13f80:	bl	1dea0 <flatcc_builder_start_offset_vector@@Base>
   13f84:	cmp	r0, #0
   13f88:	bne	13680 <main@@Base+0x184>
   13f8c:	ldr	r0, [sp, #28]
   13f90:	mov	r1, r8
   13f94:	mov	r2, r4
   13f98:	mov	r3, r9
   13f9c:	bl	16918 <main@@Base+0x341c>
   13fa0:	mov	r8, r0
   13fa4:	ldr	r0, [sp, #52]	; 0x34
   13fa8:	cmp	r0, #0
   13fac:	beq	154fc <main@@Base+0x2000>
   13fb0:	ldr	r0, [sp, #28]
   13fb4:	mov	r1, r8
   13fb8:	mov	r2, r4
   13fbc:	add	r3, sp, #48	; 0x30
   13fc0:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   13fc4:	mov	r8, r0
   13fc8:	ldr	r0, [sp, #48]	; 0x30
   13fcc:	cmp	r0, #0
   13fd0:	beq	13680 <main@@Base+0x184>
   13fd4:	ldr	r0, [sp, #28]
   13fd8:	ldr	r0, [r0]
   13fdc:	mov	r1, #1
   13fe0:	bl	1d9ec <flatcc_builder_extend_offset_vector@@Base>
   13fe4:	cmp	r0, #0
   13fe8:	beq	13680 <main@@Base+0x184>
   13fec:	ldr	r1, [sp, #48]	; 0x30
   13ff0:	str	r1, [r0]
   13ff4:	ldr	r0, [sp, #28]
   13ff8:	mov	r1, r8
   13ffc:	mov	r2, r4
   14000:	mov	r3, r9
   14004:	bl	16bbc <main@@Base+0x36c0>
   14008:	b	13fa0 <main@@Base+0xaa4>
   1400c:	eor	r0, sl, r2
   14010:	eor	r1, r7, r1
   14014:	orrs	r0, r0, r1
   14018:	bne	1444c <main@@Base+0xf50>
   1401c:	add	r6, r9, #8
   14020:	mov	r0, r6
   14024:	mov	r1, r4
   14028:	bl	15d14 <main@@Base+0x2818>
   1402c:	movw	r2, #25971	; 0x6573
   14030:	movt	r2, #24941	; 0x616d
   14034:	eor	r1, r1, r2
   14038:	movw	r2, #25445	; 0x6365
   1403c:	movt	r2, #28769	; 0x7061
   14040:	eor	r0, r0, r2
   14044:	orrs	r0, r0, r1
   14048:	bne	14e34 <main@@Base+0x1938>
   1404c:	add	r7, r9, #16
   14050:	mov	r0, r7
   14054:	mov	r1, r4
   14058:	bl	15d14 <main@@Base+0x2818>
   1405c:	movw	r2, #25971	; 0x6573
   14060:	movt	r2, #24436	; 0x5f74
   14064:	eor	r1, r1, r2
   14068:	and	r0, r0, #-16777216	; 0xff000000
   1406c:	eor	r0, r0, #1946157056	; 0x74000000
   14070:	orrs	r0, r0, r1
   14074:	bne	14fb4 <main@@Base+0x1ab8>
   14078:	ldr	r0, [sp, #28]
   1407c:	mov	r1, r7
   14080:	mov	r2, r4
   14084:	mov	r3, #5
   14088:	bl	15d18 <main@@Base+0x281c>
   1408c:	mov	r1, r0
   14090:	cmp	r7, r0
   14094:	ldr	r6, [sp, #24]
   14098:	add	r9, sp, #52	; 0x34
   1409c:	beq	1554c <main@@Base+0x2050>
   140a0:	ldr	r0, [sp, #28]
   140a4:	mov	r2, r4
   140a8:	add	r3, sp, #48	; 0x30
   140ac:	bl	16e90 <main@@Base+0x3994>
   140b0:	mov	r8, r0
   140b4:	ldr	r0, [sp, #48]	; 0x30
   140b8:	cmp	r0, #0
   140bc:	beq	13680 <main@@Base+0x184>
   140c0:	ldr	r0, [sp, #28]
   140c4:	ldr	r0, [r0]
   140c8:	mov	r1, #34	; 0x22
   140cc:	b	15a6c <main@@Base+0x2570>
   140d0:	movw	r2, #28530	; 0x6f72
   140d4:	movt	r2, #28276	; 0x6e74
   140d8:	subs	r0, sl, r2
   140dc:	movw	r1, #30309	; 0x7665
   140e0:	movt	r1, #26990	; 0x696e
   140e4:	sbcs	r0, r7, r1
   140e8:	bcs	144c0 <main@@Base+0xfc4>
   140ec:	bfc	r7, #0, #16
   140f0:	movw	r0, #0
   140f4:	movt	r0, #26736	; 0x6870
   140f8:	teq	r7, r0
   140fc:	bne	13718 <main@@Base+0x21c>
   14100:	ldr	r0, [sp, #28]
   14104:	mov	r1, r9
   14108:	mov	r2, r4
   1410c:	mov	r3, #2
   14110:	bl	15d18 <main@@Base+0x281c>
   14114:	mov	r6, r0
   14118:	cmp	r9, r0
   1411c:	beq	14e34 <main@@Base+0x1938>
   14120:	mov	r0, #0
   14124:	strh	r0, [sp, #32]
   14128:	ldr	r0, [sp, #28]
   1412c:	mov	r1, r6
   14130:	mov	r2, r4
   14134:	mov	r5, r4
   14138:	add	r4, sp, #32
   1413c:	mov	r3, r4
   14140:	bl	16c7c <main@@Base+0x3780>
   14144:	mov	r7, r0
   14148:	cmp	r6, r0
   1414c:	add	r9, sp, #52	; 0x34
   14150:	beq	15430 <main@@Base+0x1f34>
   14154:	mov	r8, r7
   14158:	ldr	r6, [sp, #24]
   1415c:	b	15464 <main@@Base+0x1f68>
   14160:	mvn	r1, #-1711276032	; 0x9a000000
   14164:	subs	r1, r1, sl
   14168:	sbcs	r1, r3, r7
   1416c:	bcc	1463c <main@@Base+0x1140>
   14170:	movw	r1, #28788	; 0x7074
   14174:	movt	r1, #25965	; 0x656d
   14178:	eor	r1, sl, r1
   1417c:	orrs	r0, r1, r0
   14180:	bne	13718 <main@@Base+0x21c>
   14184:	add	r6, r9, #8
   14188:	mov	r0, r6
   1418c:	mov	r1, r4
   14190:	bl	15d14 <main@@Base+0x2818>
   14194:	and	r0, r1, #-16777216	; 0xff000000
   14198:	teq	r0, #2030043136	; 0x79000000
   1419c:	bne	14e34 <main@@Base+0x1938>
   141a0:	ldr	r0, [sp, #28]
   141a4:	mov	r1, r6
   141a8:	mov	r2, r4
   141ac:	mov	r3, #1
   141b0:	bl	15d18 <main@@Base+0x281c>
   141b4:	mov	r1, r0
   141b8:	cmp	r6, r0
   141bc:	add	r9, sp, #52	; 0x34
   141c0:	beq	14e5c <main@@Base+0x1960>
   141c4:	ldr	r0, [sp, #28]
   141c8:	mov	r2, r4
   141cc:	add	r3, sp, #48	; 0x30
   141d0:	bl	1805c <main@@Base+0x4b60>
   141d4:	mov	r8, r0
   141d8:	ldr	r0, [sp, #48]	; 0x30
   141dc:	cmp	r0, #0
   141e0:	ldr	r6, [sp, #24]
   141e4:	beq	13680 <main@@Base+0x184>
   141e8:	ldr	r0, [sp, #28]
   141ec:	ldr	r0, [r0]
   141f0:	mov	r1, #14
   141f4:	b	15a6c <main@@Base+0x2570>
   141f8:	teq	r7, r3
   141fc:	bne	14cbc <main@@Base+0x17c0>
   14200:	ldr	r8, [sp, #28]
   14204:	mov	r0, r8
   14208:	mov	r1, r9
   1420c:	ldr	r5, [sp, #20]
   14210:	mov	r2, r5
   14214:	mov	r3, #4
   14218:	bl	15d18 <main@@Base+0x281c>
   1421c:	mov	r1, r0
   14220:	cmp	r9, r0
   14224:	beq	14cb0 <main@@Base+0x17b4>
   14228:	ldr	r0, [sp, #44]	; 0x2c
   1422c:	mov	r2, #8
   14230:	str	r2, [sp]
   14234:	str	r0, [sp, #4]
   14238:	movw	r0, #30248	; 0x7628
   1423c:	movt	r0, #1
   14240:	str	r0, [sp, #8]
   14244:	mov	r0, r8
   14248:	mov	r2, r5
   1424c:	mov	r3, #0
   14250:	bl	222cc <flatcc_json_parser_union@@Base>
   14254:	mov	r8, r0
   14258:	mov	r4, r5
   1425c:	ldr	r6, [sp, #24]
   14260:	b	1372c <main@@Base+0x230>
   14264:	movw	r3, #24431	; 0x5f6f
   14268:	movt	r3, #28530	; 0x6f72
   1426c:	subs	r1, sl, r3
   14270:	movw	r2, #25460	; 0x6374
   14274:	movt	r2, #30309	; 0x7665
   14278:	sbcs	r1, r7, r2
   1427c:	bcs	146c8 <main@@Base+0x11cc>
   14280:	movw	r1, #29556	; 0x7374
   14284:	movt	r1, #28261	; 0x6e65
   14288:	eor	r1, sl, r1
   1428c:	orrs	r0, r1, r0
   14290:	bne	13718 <main@@Base+0x21c>
   14294:	add	r6, r9, #8
   14298:	mov	r0, r6
   1429c:	mov	r1, r4
   142a0:	bl	15d14 <main@@Base+0x2818>
   142a4:	movw	r2, #26220	; 0x666c
   142a8:	movt	r2, #25956	; 0x6564
   142ac:	eor	r1, r1, r2
   142b0:	movw	r2, #25205	; 0x6275
   142b4:	movt	r2, #24948	; 0x6174
   142b8:	eor	r0, r0, r2
   142bc:	orrs	r0, r0, r1
   142c0:	bne	14e34 <main@@Base+0x1938>
   142c4:	add	r6, r9, #16
   142c8:	mov	r0, r6
   142cc:	mov	r1, r4
   142d0:	bl	15d14 <main@@Base+0x2818>
   142d4:	movw	r0, #25970	; 0x6572
   142d8:	movt	r0, #26214	; 0x6666
   142dc:	teq	r1, r0
   142e0:	bne	14e34 <main@@Base+0x1938>
   142e4:	ldr	r0, [sp, #28]
   142e8:	mov	r1, r6
   142ec:	mov	r2, r4
   142f0:	mov	r3, #4
   142f4:	bl	15d18 <main@@Base+0x281c>
   142f8:	mov	r8, r0
   142fc:	cmp	r6, r0
   14300:	add	r9, sp, #52	; 0x34
   14304:	beq	14fa0 <main@@Base+0x1aa4>
   14308:	cmp	r8, r4
   1430c:	ldr	r6, [sp, #24]
   14310:	beq	1589c <main@@Base+0x23a0>
   14314:	ldrb	r0, [r8]
   14318:	cmp	r0, #91	; 0x5b
   1431c:	bne	1589c <main@@Base+0x23a0>
   14320:	ldr	r0, [sp, #28]
   14324:	ldr	r0, [r0]
   14328:	mov	r1, #1
   1432c:	mov	r2, #1
   14330:	mvn	r3, #0
   14334:	bl	1de10 <flatcc_builder_start_vector@@Base>
   14338:	cmp	r0, #0
   1433c:	bne	13680 <main@@Base+0x184>
   14340:	ldr	r0, [sp, #28]
   14344:	mov	r1, r8
   14348:	mov	r2, r4
   1434c:	mov	r3, r9
   14350:	bl	16918 <main@@Base+0x341c>
   14354:	b	15320 <main@@Base+0x1e24>
   14358:	ldr	r0, [sp, #28]
   1435c:	mov	r1, r9
   14360:	mov	r2, r4
   14364:	mov	r3, #5
   14368:	bl	15d18 <main@@Base+0x281c>
   1436c:	mov	r6, r0
   14370:	cmp	r9, r0
   14374:	beq	14e34 <main@@Base+0x1938>
   14378:	mov	r0, #0
   1437c:	strb	r0, [sp, #32]
   14380:	ldr	r0, [sp, #28]
   14384:	mov	r1, r6
   14388:	mov	r2, r4
   1438c:	add	r8, sp, #32
   14390:	mov	r3, r8
   14394:	bl	16704 <main@@Base+0x3208>
   14398:	mov	r7, r0
   1439c:	cmp	r6, r0
   143a0:	add	r9, sp, #52	; 0x34
   143a4:	beq	14f28 <main@@Base+0x1a2c>
   143a8:	mov	r8, r7
   143ac:	ldr	r6, [sp, #24]
   143b0:	b	14f58 <main@@Base+0x1a5c>
   143b4:	movw	r2, #30256	; 0x7630
   143b8:	movt	r2, #26222	; 0x666e
   143bc:	subs	r2, r2, r0
   143c0:	movw	r2, #12895	; 0x325f
   143c4:	movt	r2, #30003	; 0x7533
   143c8:	sbcs	r2, r2, r1
   143cc:	add	r9, sp, #52	; 0x34
   143d0:	eor	r0, r0, r3
   143d4:	bcc	14ac0 <main@@Base+0x15c4>
   143d8:	movw	r2, #13407	; 0x345f
   143dc:	movt	r2, #29494	; 0x7336
   143e0:	eor	r1, r1, r2
   143e4:	orrs	r0, r0, r1
   143e8:	bne	1513c <main@@Base+0x1c40>
   143ec:	ldr	r0, [sp, #28]
   143f0:	mov	r1, r7
   143f4:	mov	r2, r4
   143f8:	mov	r3, #8
   143fc:	bl	15d18 <main@@Base+0x281c>
   14400:	mov	r6, r0
   14404:	cmp	r7, r0
   14408:	beq	15554 <main@@Base+0x2058>
   1440c:	mov	r0, #0
   14410:	str	r0, [sp, #36]	; 0x24
   14414:	str	r0, [sp, #32]
   14418:	ldr	r0, [sp, #28]
   1441c:	mov	r1, r6
   14420:	mov	r2, r4
   14424:	mov	r5, r4
   14428:	add	r4, sp, #32
   1442c:	mov	r3, r4
   14430:	bl	1873c <main@@Base+0x5240>
   14434:	mov	r7, r0
   14438:	cmp	r6, r0
   1443c:	beq	156ec <main@@Base+0x21f0>
   14440:	mov	r8, r7
   14444:	mov	r4, r5
   14448:	b	1571c <main@@Base+0x2220>
   1444c:	bic	r0, r7, #255	; 0xff
   14450:	movw	r1, #29440	; 0x7300
   14454:	movt	r1, #28783	; 0x706f
   14458:	teq	r0, r1
   1445c:	bne	13718 <main@@Base+0x21c>
   14460:	ldr	r0, [sp, #28]
   14464:	mov	r1, r9
   14468:	mov	r2, r4
   1446c:	mov	r3, #3
   14470:	bl	15d18 <main@@Base+0x281c>
   14474:	mov	r8, r0
   14478:	cmp	r9, r0
   1447c:	beq	14ab4 <main@@Base+0x15b8>
   14480:	ldr	r0, [sp, #28]
   14484:	ldr	r0, [r0]
   14488:	mov	r1, #0
   1448c:	mov	r2, #32
   14490:	mov	r3, #16
   14494:	bl	1eee0 <flatcc_builder_table_add@@Base>
   14498:	cmp	r0, #0
   1449c:	add	r9, sp, #52	; 0x34
   144a0:	beq	13680 <main@@Base+0x184>
   144a4:	mov	r3, r0
   144a8:	ldr	r0, [sp, #28]
   144ac:	mov	r1, r8
   144b0:	mov	r2, r4
   144b4:	bl	16f78 <main@@Base+0x3a7c>
   144b8:	mov	r8, r0
   144bc:	b	13730 <main@@Base+0x234>
   144c0:	eor	r0, sl, r2
   144c4:	eor	r1, r7, r1
   144c8:	orrs	r0, r0, r1
   144cc:	bne	14b44 <main@@Base+0x1648>
   144d0:	add	r6, r9, #8
   144d4:	mov	r0, r6
   144d8:	mov	r1, r4
   144dc:	bl	15d14 <main@@Base+0x2818>
   144e0:	and	r0, r1, #-16777216	; 0xff000000
   144e4:	teq	r0, #2030043136	; 0x79000000
   144e8:	bne	14e34 <main@@Base+0x1938>
   144ec:	ldr	r0, [sp, #28]
   144f0:	mov	r1, r6
   144f4:	mov	r2, r4
   144f8:	mov	r3, #1
   144fc:	bl	15d18 <main@@Base+0x281c>
   14500:	mov	r8, r0
   14504:	cmp	r6, r0
   14508:	add	r9, sp, #52	; 0x34
   1450c:	beq	14fa0 <main@@Base+0x1aa4>
   14510:	ldr	r0, [sp, #28]
   14514:	ldr	r0, [r0]
   14518:	mov	r1, #1
   1451c:	mov	r2, #1
   14520:	mvn	r3, #0
   14524:	bl	1de10 <flatcc_builder_start_vector@@Base>
   14528:	cmp	r0, #0
   1452c:	ldr	r6, [sp, #24]
   14530:	bne	13680 <main@@Base+0x184>
   14534:	ldr	r0, [sp, #28]
   14538:	mov	r1, r8
   1453c:	mov	r2, r4
   14540:	mov	r3, r9
   14544:	bl	16918 <main@@Base+0x341c>
   14548:	mov	r8, r0
   1454c:	ldr	r0, [sp, #52]	; 0x34
   14550:	cmp	r0, #0
   14554:	beq	14614 <main@@Base+0x1118>
   14558:	mov	r0, #0
   1455c:	strb	r0, [sp, #32]
   14560:	ldr	r0, [sp, #28]
   14564:	ldr	r0, [r0]
   14568:	mov	r1, #1
   1456c:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   14570:	cmp	r0, #0
   14574:	beq	13680 <main@@Base+0x184>
   14578:	mov	r7, r0
   1457c:	ldr	r0, [sp, #28]
   14580:	mov	r1, r8
   14584:	mov	r2, r4
   14588:	mov	r5, r4
   1458c:	add	r4, sp, #32
   14590:	mov	r3, r4
   14594:	bl	169a8 <main@@Base+0x34ac>
   14598:	mov	r6, r0
   1459c:	cmp	r8, r0
   145a0:	beq	145b0 <main@@Base+0x10b4>
   145a4:	mov	r8, r6
   145a8:	mov	r4, r5
   145ac:	b	145e0 <main@@Base+0x10e4>
   145b0:	str	r4, [sp]
   145b4:	ldr	r0, [sp, #28]
   145b8:	mov	r1, r6
   145bc:	mov	r2, r5
   145c0:	movw	r3, #28844	; 0x70ac
   145c4:	movt	r3, #3
   145c8:	bl	16a38 <main@@Base+0x353c>
   145cc:	mov	r8, r0
   145d0:	cmp	r0, r6
   145d4:	mov	r4, r5
   145d8:	cmpne	r8, r4
   145dc:	beq	13680 <main@@Base+0x184>
   145e0:	ldrb	r1, [sp, #32]
   145e4:	mov	r0, r7
   145e8:	bl	16b9c <main@@Base+0x36a0>
   145ec:	ldr	r0, [sp, #28]
   145f0:	mov	r1, r8
   145f4:	mov	r2, r4
   145f8:	mov	r3, r9
   145fc:	bl	16bbc <main@@Base+0x36c0>
   14600:	mov	r8, r0
   14604:	ldr	r0, [sp, #52]	; 0x34
   14608:	cmp	r0, #0
   1460c:	ldr	r6, [sp, #24]
   14610:	bne	14558 <main@@Base+0x105c>
   14614:	ldr	r0, [sp, #28]
   14618:	ldr	r0, [r0]
   1461c:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   14620:	str	r0, [sp, #48]	; 0x30
   14624:	cmp	r0, #0
   14628:	beq	13680 <main@@Base+0x184>
   1462c:	ldr	r0, [sp, #28]
   14630:	ldr	r0, [r0]
   14634:	mov	r1, #5
   14638:	b	15a6c <main@@Base+0x2570>
   1463c:	mov	r1, sl
   14640:	bfc	r1, #0, #16
   14644:	movw	r2, #0
   14648:	movt	r2, #26163	; 0x6633
   1464c:	subs	r2, r2, #65536	; 0x10000
   14650:	eor	r1, r1, r2
   14654:	sbc	r2, r3, #0
   14658:	eor	r2, r7, r2
   1465c:	orrs	r1, r1, r2
   14660:	bne	14bb4 <main@@Base+0x16b8>
   14664:	ldr	r0, [sp, #28]
   14668:	mov	r1, r9
   1466c:	mov	r2, r4
   14670:	mov	r3, #6
   14674:	bl	15d18 <main@@Base+0x281c>
   14678:	mov	r6, r0
   1467c:	cmp	r9, r0
   14680:	beq	14e34 <main@@Base+0x1938>
   14684:	mov	r0, #0
   14688:	str	r0, [sp, #32]
   1468c:	ldr	r0, [sp, #28]
   14690:	mov	r1, r6
   14694:	mov	r2, r4
   14698:	mov	r9, r4
   1469c:	add	r4, sp, #32
   146a0:	mov	r3, r4
   146a4:	bl	215e4 <flatcc_json_parser_float@@Base>
   146a8:	mov	r7, r0
   146ac:	cmp	r6, r0
   146b0:	beq	15490 <main@@Base+0x1f94>
   146b4:	mov	r8, r7
   146b8:	ldr	r6, [sp, #24]
   146bc:	mov	r4, r9
   146c0:	add	r9, sp, #52	; 0x34
   146c4:	b	154cc <main@@Base+0x1fd0>
   146c8:	eor	r0, sl, r3
   146cc:	eor	r1, r7, r2
   146d0:	orrs	r0, r0, r1
   146d4:	bne	13718 <main@@Base+0x21c>
   146d8:	add	r7, r9, #8
   146dc:	mov	r0, r7
   146e0:	mov	r1, r4
   146e4:	bl	15d14 <main@@Base+0x2818>
   146e8:	movw	r2, #25711	; 0x646f
   146ec:	movt	r2, #26207	; 0x665f
   146f0:	eor	r2, r1, r2
   146f4:	movw	r3, #27749	; 0x6c65
   146f8:	movt	r3, #30050	; 0x7562
   146fc:	eor	r3, r0, r3
   14700:	orrs	r2, r3, r2
   14704:	bne	14fc0 <main@@Base+0x1ac4>
   14708:	add	r6, r9, #16
   1470c:	mov	r0, r6
   14710:	mov	r1, r4
   14714:	bl	15d14 <main@@Base+0x2818>
   14718:	and	r0, r1, #-16777216	; 0xff000000
   1471c:	teq	r0, #1929379840	; 0x73000000
   14720:	bne	14e34 <main@@Base+0x1938>
   14724:	ldr	r0, [sp, #28]
   14728:	mov	r1, r6
   1472c:	mov	r2, r4
   14730:	mov	r3, #1
   14734:	bl	15d18 <main@@Base+0x281c>
   14738:	mov	r8, r0
   1473c:	cmp	r6, r0
   14740:	add	r9, sp, #52	; 0x34
   14744:	beq	14fa0 <main@@Base+0x1aa4>
   14748:	ldr	r0, [sp, #28]
   1474c:	ldr	r0, [r0]
   14750:	mov	r1, #8
   14754:	mov	r2, #8
   14758:	mvn	r3, #-536870912	; 0xe0000000
   1475c:	bl	1de10 <flatcc_builder_start_vector@@Base>
   14760:	cmp	r0, #0
   14764:	ldr	r6, [sp, #24]
   14768:	bne	13680 <main@@Base+0x184>
   1476c:	ldr	r0, [sp, #28]
   14770:	mov	r1, r8
   14774:	mov	r2, r4
   14778:	mov	r3, r9
   1477c:	bl	16918 <main@@Base+0x341c>
   14780:	mov	r8, r0
   14784:	ldr	r0, [sp, #52]	; 0x34
   14788:	cmp	r0, #0
   1478c:	beq	14850 <main@@Base+0x1354>
   14790:	mov	r0, #0
   14794:	str	r0, [sp, #36]	; 0x24
   14798:	str	r0, [sp, #32]
   1479c:	ldr	r0, [sp, #28]
   147a0:	ldr	r0, [r0]
   147a4:	mov	r1, #1
   147a8:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   147ac:	cmp	r0, #0
   147b0:	beq	13680 <main@@Base+0x184>
   147b4:	mov	r7, r0
   147b8:	ldr	r0, [sp, #28]
   147bc:	mov	r1, r8
   147c0:	mov	r2, r4
   147c4:	mov	r5, r4
   147c8:	add	r4, sp, #32
   147cc:	mov	r3, r4
   147d0:	bl	2150c <flatcc_json_parser_double@@Base>
   147d4:	mov	r6, r0
   147d8:	cmp	r8, r0
   147dc:	beq	147ec <main@@Base+0x12f0>
   147e0:	mov	r8, r6
   147e4:	mov	r4, r5
   147e8:	b	1481c <main@@Base+0x1320>
   147ec:	str	r4, [sp]
   147f0:	ldr	r0, [sp, #28]
   147f4:	mov	r1, r6
   147f8:	mov	r2, r5
   147fc:	movw	r3, #29052	; 0x717c
   14800:	movt	r3, #3
   14804:	bl	18d98 <main@@Base+0x589c>
   14808:	mov	r8, r0
   1480c:	cmp	r0, r6
   14810:	mov	r4, r5
   14814:	cmpne	r8, r4
   14818:	beq	13680 <main@@Base+0x184>
   1481c:	vldr	d0, [sp, #32]
   14820:	mov	r0, r7
   14824:	bl	18ee4 <main@@Base+0x59e8>
   14828:	ldr	r0, [sp, #28]
   1482c:	mov	r1, r8
   14830:	mov	r2, r4
   14834:	mov	r3, r9
   14838:	bl	16bbc <main@@Base+0x36c0>
   1483c:	mov	r8, r0
   14840:	ldr	r0, [sp, #52]	; 0x34
   14844:	cmp	r0, #0
   14848:	ldr	r6, [sp, #24]
   1484c:	bne	14790 <main@@Base+0x1294>
   14850:	ldr	r0, [sp, #28]
   14854:	ldr	r0, [r0]
   14858:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   1485c:	str	r0, [sp, #48]	; 0x30
   14860:	cmp	r0, #0
   14864:	beq	13680 <main@@Base+0x184>
   14868:	ldr	r0, [sp, #28]
   1486c:	ldr	r0, [r0]
   14870:	mov	r1, #33	; 0x21
   14874:	b	15a6c <main@@Base+0x2570>
   14878:	ldr	r0, [sp, #28]
   1487c:	b	13720 <main@@Base+0x224>
   14880:	add	r7, r9, #16
   14884:	mov	r0, r7
   14888:	mov	r1, r4
   1488c:	bl	15d14 <main@@Base+0x2818>
   14890:	lsr	r0, r0, #8
   14894:	orr	r0, r0, r1, lsl #24
   14898:	movw	r2, #25460	; 0x6374
   1489c:	movt	r2, #29301	; 0x7275
   148a0:	eor	r0, r0, r2
   148a4:	movw	r2, #29556	; 0x7374
   148a8:	movt	r2, #100	; 0x64
   148ac:	eor	r1, r2, r1, lsr #8
   148b0:	orrs	r0, r0, r1
   148b4:	bne	14968 <main@@Base+0x146c>
   148b8:	ldr	r0, [sp, #28]
   148bc:	mov	r1, r7
   148c0:	mov	r2, r4
   148c4:	mov	r3, #7
   148c8:	bl	15d18 <main@@Base+0x281c>
   148cc:	mov	r8, r0
   148d0:	cmp	r7, r0
   148d4:	add	r9, sp, #52	; 0x34
   148d8:	beq	15154 <main@@Base+0x1c58>
   148dc:	ldr	r0, [sp, #28]
   148e0:	ldr	r0, [r0]
   148e4:	mov	r1, #8
   148e8:	mov	r2, #4
   148ec:	mvn	r3, #-536870912	; 0xe0000000
   148f0:	bl	1de10 <flatcc_builder_start_vector@@Base>
   148f4:	cmp	r0, #0
   148f8:	bne	13680 <main@@Base+0x184>
   148fc:	ldr	r5, [sp, #28]
   14900:	mov	r0, r5
   14904:	mov	r1, r8
   14908:	mov	r2, r4
   1490c:	mov	r3, r9
   14910:	bl	16918 <main@@Base+0x341c>
   14914:	mov	r8, r0
   14918:	ldr	r0, [r5]
   1491c:	ldr	r1, [sp, #52]	; 0x34
   14920:	cmp	r1, #0
   14924:	beq	152d4 <main@@Base+0x1dd8>
   14928:	mov	r1, #1
   1492c:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   14930:	cmp	r0, #0
   14934:	beq	13680 <main@@Base+0x184>
   14938:	mov	r3, r0
   1493c:	ldr	r5, [sp, #28]
   14940:	mov	r0, r5
   14944:	mov	r1, r8
   14948:	mov	r2, r4
   1494c:	bl	17bbc <main@@Base+0x46c0>
   14950:	mov	r1, r0
   14954:	mov	r0, r5
   14958:	mov	r2, r4
   1495c:	mov	r3, r9
   14960:	bl	16bbc <main@@Base+0x36c0>
   14964:	b	14914 <main@@Base+0x1418>
   14968:	ldr	r0, [sp, #28]
   1496c:	mov	r1, r7
   14970:	b	13720 <main@@Base+0x224>
   14974:	add	r9, sp, #52	; 0x34
   14978:	b	1513c <main@@Base+0x1c40>
   1497c:	ldr	r0, [sp, #28]
   14980:	mov	r1, r9
   14984:	mov	r2, r4
   14988:	mov	r3, #8
   1498c:	bl	15d18 <main@@Base+0x281c>
   14990:	mov	r6, r0
   14994:	cmp	r9, r0
   14998:	beq	14e34 <main@@Base+0x1938>
   1499c:	mov	r0, #0
   149a0:	strb	r0, [sp, #32]
   149a4:	ldr	r0, [sp, #28]
   149a8:	mov	r1, r6
   149ac:	mov	r2, r4
   149b0:	mov	r5, r4
   149b4:	add	r4, sp, #32
   149b8:	mov	r3, r4
   149bc:	bl	1797c <main@@Base+0x4480>
   149c0:	mov	r7, r0
   149c4:	cmp	r6, r0
   149c8:	add	r9, sp, #52	; 0x34
   149cc:	beq	15238 <main@@Base+0x1d3c>
   149d0:	mov	r8, r7
   149d4:	mov	r4, r5
   149d8:	b	15268 <main@@Base+0x1d6c>
   149dc:	add	r6, r9, #16
   149e0:	mov	r0, r6
   149e4:	mov	r1, r4
   149e8:	bl	15d14 <main@@Base+0x2818>
   149ec:	and	r0, r1, #-16777216	; 0xff000000
   149f0:	teq	r0, #1929379840	; 0x73000000
   149f4:	bne	14e34 <main@@Base+0x1938>
   149f8:	ldr	r0, [sp, #28]
   149fc:	mov	r1, r6
   14a00:	mov	r2, r4
   14a04:	mov	r3, #1
   14a08:	bl	15d18 <main@@Base+0x281c>
   14a0c:	mov	r8, r0
   14a10:	cmp	r6, r0
   14a14:	add	r9, sp, #52	; 0x34
   14a18:	beq	14fa0 <main@@Base+0x1aa4>
   14a1c:	ldr	r0, [sp, #28]
   14a20:	ldr	r0, [r0]
   14a24:	bl	1dea0 <flatcc_builder_start_offset_vector@@Base>
   14a28:	cmp	r0, #0
   14a2c:	ldr	r6, [sp, #24]
   14a30:	bne	13680 <main@@Base+0x184>
   14a34:	ldr	r0, [sp, #28]
   14a38:	mov	r1, r8
   14a3c:	mov	r2, r4
   14a40:	mov	r3, r9
   14a44:	bl	16918 <main@@Base+0x341c>
   14a48:	mov	r8, r0
   14a4c:	ldr	r0, [sp, #52]	; 0x34
   14a50:	cmp	r0, #0
   14a54:	beq	15524 <main@@Base+0x2028>
   14a58:	ldr	r0, [sp, #28]
   14a5c:	mov	r1, r8
   14a60:	mov	r2, r4
   14a64:	add	r3, sp, #48	; 0x30
   14a68:	bl	13640 <main@@Base+0x144>
   14a6c:	mov	r8, r0
   14a70:	ldr	r0, [sp, #48]	; 0x30
   14a74:	cmp	r0, #0
   14a78:	beq	13680 <main@@Base+0x184>
   14a7c:	ldr	r0, [sp, #28]
   14a80:	ldr	r0, [r0]
   14a84:	mov	r1, #1
   14a88:	bl	1d9ec <flatcc_builder_extend_offset_vector@@Base>
   14a8c:	cmp	r0, #0
   14a90:	beq	13680 <main@@Base+0x184>
   14a94:	ldr	r1, [sp, #48]	; 0x30
   14a98:	str	r1, [r0]
   14a9c:	ldr	r0, [sp, #28]
   14aa0:	mov	r1, r8
   14aa4:	mov	r2, r4
   14aa8:	mov	r3, r9
   14aac:	bl	16bbc <main@@Base+0x36c0>
   14ab0:	b	14a48 <main@@Base+0x154c>
   14ab4:	ldr	r0, [sp, #28]
   14ab8:	mov	r1, r8
   14abc:	b	13720 <main@@Base+0x224>
   14ac0:	movw	r2, #13407	; 0x345f
   14ac4:	movt	r2, #30006	; 0x7536
   14ac8:	eor	r2, r1, r2
   14acc:	orrs	r2, r0, r2
   14ad0:	beq	151d8 <main@@Base+0x1cdc>
   14ad4:	movw	r2, #12895	; 0x325f
   14ad8:	movt	r2, #30003	; 0x7533
   14adc:	eor	r1, r1, r2
   14ae0:	orrs	r0, r0, r1
   14ae4:	bne	1513c <main@@Base+0x1c40>
   14ae8:	ldr	r0, [sp, #28]
   14aec:	mov	r1, r7
   14af0:	mov	r2, r4
   14af4:	mov	r3, #8
   14af8:	bl	15d18 <main@@Base+0x281c>
   14afc:	mov	r6, r0
   14b00:	cmp	r7, r0
   14b04:	beq	155d0 <main@@Base+0x20d4>
   14b08:	mov	r0, #0
   14b0c:	str	r0, [sp, #32]
   14b10:	ldr	r0, [sp, #28]
   14b14:	mov	r1, r6
   14b18:	mov	r2, r4
   14b1c:	mov	r5, r4
   14b20:	add	r4, sp, #32
   14b24:	mov	r3, r4
   14b28:	bl	18960 <main@@Base+0x5464>
   14b2c:	mov	r7, r0
   14b30:	cmp	r6, r0
   14b34:	beq	158f0 <main@@Base+0x23f4>
   14b38:	mov	r8, r7
   14b3c:	mov	r4, r5
   14b40:	b	15920 <main@@Base+0x2424>
   14b44:	movw	r0, #28257	; 0x6e61
   14b48:	movt	r0, #28001	; 0x6d61
   14b4c:	teq	r7, r0
   14b50:	bne	13718 <main@@Base+0x21c>
   14b54:	ldr	r0, [sp, #28]
   14b58:	mov	r1, r9
   14b5c:	mov	r2, r4
   14b60:	mov	r3, #4
   14b64:	bl	15d18 <main@@Base+0x281c>
   14b68:	mov	r6, r0
   14b6c:	cmp	r9, r0
   14b70:	beq	14e34 <main@@Base+0x1938>
   14b74:	mov	r0, #0
   14b78:	strh	r0, [sp, #32]
   14b7c:	ldr	r0, [sp, #28]
   14b80:	mov	r1, r6
   14b84:	mov	r2, r4
   14b88:	mov	r5, r4
   14b8c:	add	r4, sp, #32
   14b90:	mov	r3, r4
   14b94:	bl	16c7c <main@@Base+0x3780>
   14b98:	mov	r7, r0
   14b9c:	cmp	r6, r0
   14ba0:	add	r9, sp, #52	; 0x34
   14ba4:	beq	1576c <main@@Base+0x2270>
   14ba8:	mov	r8, r7
   14bac:	ldr	r6, [sp, #24]
   14bb0:	b	157a0 <main@@Base+0x22a4>
   14bb4:	and	r1, sl, #-16777216	; 0xff000000
   14bb8:	eor	r1, r1, #1711276032	; 0x66000000
   14bbc:	orrs	r0, r1, r0
   14bc0:	bne	13718 <main@@Base+0x21c>
   14bc4:	ldr	r0, [sp, #28]
   14bc8:	mov	r1, r9
   14bcc:	mov	r2, r4
   14bd0:	mov	r3, #5
   14bd4:	bl	15d18 <main@@Base+0x281c>
   14bd8:	mov	r6, r0
   14bdc:	cmp	r9, r0
   14be0:	beq	14e34 <main@@Base+0x1938>
   14be4:	mov	r0, #0
   14be8:	str	r0, [sp, #32]
   14bec:	ldr	r0, [sp, #28]
   14bf0:	mov	r1, r6
   14bf4:	mov	r2, r4
   14bf8:	mov	r9, r4
   14bfc:	add	r4, sp, #32
   14c00:	mov	r3, r4
   14c04:	bl	215e4 <flatcc_json_parser_float@@Base>
   14c08:	mov	r7, r0
   14c0c:	cmp	r6, r0
   14c10:	beq	157ec <main@@Base+0x22f0>
   14c14:	mov	r8, r7
   14c18:	ldr	r6, [sp, #24]
   14c1c:	mov	r4, r9
   14c20:	add	r9, sp, #52	; 0x34
   14c24:	b	15828 <main@@Base+0x232c>
   14c28:	str	r4, [sp]
   14c2c:	ldr	r0, [sp, #28]
   14c30:	mov	r1, r7
   14c34:	mov	r2, r5
   14c38:	movw	r3, #28932	; 0x7104
   14c3c:	movt	r3, #3
   14c40:	bl	183c0 <main@@Base+0x4ec4>
   14c44:	mov	r8, r0
   14c48:	cmp	r0, r7
   14c4c:	ldr	r6, [sp, #24]
   14c50:	mov	r4, r5
   14c54:	cmpne	r8, r4
   14c58:	beq	13680 <main@@Base+0x184>
   14c5c:	vldr	s0, [sp, #32]
   14c60:	vcmp.f32	s0, #0.0
   14c64:	vmrs	APSR_nzcv, fpscr
   14c68:	bne	14c7c <main@@Base+0x1780>
   14c6c:	ldr	r0, [sp, #28]
   14c70:	ldrb	r0, [r0, #8]
   14c74:	tst	r0, #2
   14c78:	beq	13730 <main@@Base+0x234>
   14c7c:	ldr	r0, [sp, #28]
   14c80:	ldr	r0, [r0]
   14c84:	mov	r1, #27
   14c88:	b	15854 <main@@Base+0x2358>
   14c8c:	ldr	r6, [sp, #24]
   14c90:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   14c94:	str	r0, [sp, #48]	; 0x30
   14c98:	cmp	r0, #0
   14c9c:	beq	13680 <main@@Base+0x184>
   14ca0:	ldr	r0, [sp, #28]
   14ca4:	ldr	r0, [r0]
   14ca8:	mov	r1, #9
   14cac:	b	15a6c <main@@Base+0x2570>
   14cb0:	mov	r9, r1
   14cb4:	movw	r3, #29556	; 0x7374
   14cb8:	movt	r3, #29797	; 0x7465
   14cbc:	eor	r0, r7, r3
   14cc0:	eor	r1, r4, #889192448	; 0x35000000
   14cc4:	orrs	r0, r1, r0
   14cc8:	bne	14da0 <main@@Base+0x18a4>
   14ccc:	ldr	r0, [sp, #28]
   14cd0:	mov	r1, r9
   14cd4:	ldr	r4, [sp, #20]
   14cd8:	mov	r2, r4
   14cdc:	mov	r3, #5
   14ce0:	bl	15d18 <main@@Base+0x281c>
   14ce4:	mov	r8, r0
   14ce8:	cmp	r9, r0
   14cec:	beq	14d98 <main@@Base+0x189c>
   14cf0:	ldr	r0, [sp, #28]
   14cf4:	ldr	r0, [r0]
   14cf8:	mov	r1, #4
   14cfc:	mov	r2, #2
   14d00:	mvn	r3, #-1073741824	; 0xc0000000
   14d04:	bl	1de10 <flatcc_builder_start_vector@@Base>
   14d08:	cmp	r0, #0
   14d0c:	bne	13680 <main@@Base+0x184>
   14d10:	ldr	r5, [sp, #28]
   14d14:	mov	r0, r5
   14d18:	mov	r1, r8
   14d1c:	mov	r2, r4
   14d20:	add	r9, sp, #52	; 0x34
   14d24:	mov	r3, r9
   14d28:	bl	16918 <main@@Base+0x341c>
   14d2c:	mov	r8, r0
   14d30:	ldr	r0, [r5]
   14d34:	ldr	r1, [sp, #52]	; 0x34
   14d38:	cmp	r1, #0
   14d3c:	beq	152b0 <main@@Base+0x1db4>
   14d40:	ldr	r6, [sp, #24]
   14d44:	mov	r1, #1
   14d48:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   14d4c:	cmp	r0, #0
   14d50:	beq	13680 <main@@Base+0x184>
   14d54:	mov	r3, r0
   14d58:	ldr	r5, [sp, #28]
   14d5c:	mov	r0, r5
   14d60:	mov	r1, r8
   14d64:	mov	r2, r4
   14d68:	bl	17418 <main@@Base+0x3f1c>
   14d6c:	mov	r1, r0
   14d70:	mov	r0, r5
   14d74:	mov	r2, r4
   14d78:	mov	r3, r9
   14d7c:	bl	16bbc <main@@Base+0x36c0>
   14d80:	mov	r8, r0
   14d84:	ldr	r0, [r5]
   14d88:	ldr	r1, [sp, #52]	; 0x34
   14d8c:	cmp	r1, #0
   14d90:	bne	14d44 <main@@Base+0x1848>
   14d94:	b	152b4 <main@@Base+0x1db8>
   14d98:	mov	r9, r8
   14d9c:	b	14da4 <main@@Base+0x18a8>
   14da0:	ldr	r4, [sp, #20]
   14da4:	movw	r0, #31088	; 0x7970
   14da8:	movt	r0, #24436	; 0x5f74
   14dac:	eor	r0, sl, r0
   14db0:	orrs	r0, r0, r6
   14db4:	bne	14e50 <main@@Base+0x1954>
   14db8:	add	r6, r9, #8
   14dbc:	mov	r0, r6
   14dc0:	mov	r1, r4
   14dc4:	bl	15d14 <main@@Base+0x2818>
   14dc8:	and	r0, r1, #-16777216	; 0xff000000
   14dcc:	teq	r0, #1694498816	; 0x65000000
   14dd0:	bne	14e34 <main@@Base+0x1938>
   14dd4:	ldr	r0, [sp, #28]
   14dd8:	mov	r1, r6
   14ddc:	mov	r2, r4
   14de0:	mov	r3, #1
   14de4:	bl	15d18 <main@@Base+0x281c>
   14de8:	mov	r1, r0
   14dec:	cmp	r6, r0
   14df0:	add	r9, sp, #52	; 0x34
   14df4:	beq	14e5c <main@@Base+0x1960>
   14df8:	ldr	r0, [sp, #44]	; 0x2c
   14dfc:	mov	r2, #8
   14e00:	str	r2, [sp]
   14e04:	str	r0, [sp, #4]
   14e08:	movw	r0, #28868	; 0x70c4
   14e0c:	movt	r0, #3
   14e10:	str	r0, [sp, #8]
   14e14:	movw	r0, #30248	; 0x7628
   14e18:	movt	r0, #1
   14e1c:	str	r0, [sp, #12]
   14e20:	ldr	r0, [sp, #28]
   14e24:	mov	r2, r4
   14e28:	mov	r3, #0
   14e2c:	bl	223f0 <flatcc_json_parser_union_type@@Base>
   14e30:	b	156e0 <main@@Base+0x21e4>
   14e34:	ldr	r0, [sp, #28]
   14e38:	mov	r1, r6
   14e3c:	mov	r2, r4
   14e40:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   14e44:	mov	r8, r0
   14e48:	ldr	r6, [sp, #24]
   14e4c:	b	1372c <main@@Base+0x230>
   14e50:	ldr	r0, [sp, #28]
   14e54:	mov	r1, r9
   14e58:	b	14e3c <main@@Base+0x1940>
   14e5c:	ldr	r0, [sp, #28]
   14e60:	b	156d8 <main@@Base+0x21dc>
   14e64:	and	r0, r1, #-16777216	; 0xff000000
   14e68:	teq	r0, #1728053248	; 0x67000000
   14e6c:	add	r9, sp, #52	; 0x34
   14e70:	bne	1513c <main@@Base+0x1c40>
   14e74:	ldr	r0, [sp, #28]
   14e78:	mov	r1, r7
   14e7c:	mov	r2, r4
   14e80:	mov	r3, #1
   14e84:	bl	15d18 <main@@Base+0x281c>
   14e88:	mov	r8, r0
   14e8c:	cmp	r7, r0
   14e90:	beq	15154 <main@@Base+0x1c58>
   14e94:	ldr	r0, [sp, #28]
   14e98:	ldr	r0, [r0]
   14e9c:	bl	1dea0 <flatcc_builder_start_offset_vector@@Base>
   14ea0:	cmp	r0, #0
   14ea4:	bne	13680 <main@@Base+0x184>
   14ea8:	ldr	r0, [sp, #28]
   14eac:	mov	r1, r8
   14eb0:	mov	r2, r4
   14eb4:	mov	r3, r9
   14eb8:	bl	16918 <main@@Base+0x341c>
   14ebc:	mov	r8, r0
   14ec0:	ldr	r0, [sp, #52]	; 0x34
   14ec4:	cmp	r0, #0
   14ec8:	beq	15874 <main@@Base+0x2378>
   14ecc:	ldr	r0, [sp, #28]
   14ed0:	mov	r1, r8
   14ed4:	mov	r2, r4
   14ed8:	add	r3, sp, #48	; 0x30
   14edc:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   14ee0:	mov	r8, r0
   14ee4:	ldr	r0, [sp, #48]	; 0x30
   14ee8:	cmp	r0, #0
   14eec:	beq	13680 <main@@Base+0x184>
   14ef0:	ldr	r0, [sp, #28]
   14ef4:	ldr	r0, [r0]
   14ef8:	mov	r1, #1
   14efc:	bl	1d9ec <flatcc_builder_extend_offset_vector@@Base>
   14f00:	cmp	r0, #0
   14f04:	beq	13680 <main@@Base+0x184>
   14f08:	ldr	r1, [sp, #48]	; 0x30
   14f0c:	str	r1, [r0]
   14f10:	ldr	r0, [sp, #28]
   14f14:	mov	r1, r8
   14f18:	mov	r2, r4
   14f1c:	mov	r3, r9
   14f20:	bl	16bbc <main@@Base+0x36c0>
   14f24:	b	14ebc <main@@Base+0x19c0>
   14f28:	str	r8, [sp]
   14f2c:	ldr	r0, [sp, #28]
   14f30:	mov	r1, r7
   14f34:	mov	r2, r4
   14f38:	movw	r3, #28804	; 0x7084
   14f3c:	movt	r3, #3
   14f40:	bl	16794 <main@@Base+0x3298>
   14f44:	mov	r8, r0
   14f48:	cmp	r0, r7
   14f4c:	ldr	r6, [sp, #24]
   14f50:	cmpne	r8, r4
   14f54:	beq	13680 <main@@Base+0x184>
   14f58:	ldrb	r4, [sp, #32]
   14f5c:	cmp	r4, #8
   14f60:	bne	14f74 <main@@Base+0x1a78>
   14f64:	ldr	r0, [sp, #28]
   14f68:	ldrb	r0, [r0, #8]
   14f6c:	tst	r0, #2
   14f70:	beq	157e4 <main@@Base+0x22e8>
   14f74:	ldr	r0, [sp, #28]
   14f78:	ldr	r0, [r0]
   14f7c:	mov	r1, #6
   14f80:	mov	r2, #1
   14f84:	mov	r3, #1
   14f88:	bl	1eee0 <flatcc_builder_table_add@@Base>
   14f8c:	cmp	r0, #0
   14f90:	beq	15c38 <main@@Base+0x273c>
   14f94:	sxtb	r1, r4
   14f98:	bl	168f8 <main@@Base+0x33fc>
   14f9c:	b	157e4 <main@@Base+0x22e8>
   14fa0:	ldr	r0, [sp, #28]
   14fa4:	mov	r1, r8
   14fa8:	b	156d8 <main@@Base+0x21dc>
   14fac:	mov	r7, r8
   14fb0:	b	1513c <main@@Base+0x1c40>
   14fb4:	ldr	r0, [sp, #28]
   14fb8:	mov	r1, r7
   14fbc:	b	14e3c <main@@Base+0x1940>
   14fc0:	movw	r2, #24428	; 0x5f6c
   14fc4:	movt	r2, #102	; 0x66
   14fc8:	eor	r2, r2, r1, lsr #8
   14fcc:	lsr	r0, r0, #8
   14fd0:	orr	r0, r0, r1, lsl #24
   14fd4:	movw	r1, #26483	; 0x6773
   14fd8:	movt	r1, #28526	; 0x6f6e
   14fdc:	eor	r0, r0, r1
   14fe0:	orrs	r0, r0, r2
   14fe4:	add	r9, sp, #52	; 0x34
   14fe8:	bne	1513c <main@@Base+0x1c40>
   14fec:	ldr	r0, [sp, #28]
   14ff0:	mov	r1, r7
   14ff4:	mov	r2, r4
   14ff8:	mov	r3, #7
   14ffc:	bl	15d18 <main@@Base+0x281c>
   15000:	mov	r8, r0
   15004:	cmp	r7, r0
   15008:	beq	15154 <main@@Base+0x1c58>
   1500c:	ldr	r0, [sp, #28]
   15010:	ldr	r0, [r0]
   15014:	mov	r1, #8
   15018:	mov	r2, #8
   1501c:	mvn	r3, #-536870912	; 0xe0000000
   15020:	bl	1de10 <flatcc_builder_start_vector@@Base>
   15024:	cmp	r0, #0
   15028:	bne	13680 <main@@Base+0x184>
   1502c:	ldr	r0, [sp, #28]
   15030:	mov	r1, r8
   15034:	mov	r2, r4
   15038:	mov	r3, r9
   1503c:	bl	16918 <main@@Base+0x341c>
   15040:	mov	r8, r0
   15044:	ldr	r0, [sp, #52]	; 0x34
   15048:	cmp	r0, #0
   1504c:	beq	15114 <main@@Base+0x1c18>
   15050:	mov	r0, #0
   15054:	str	r0, [sp, #36]	; 0x24
   15058:	str	r0, [sp, #32]
   1505c:	ldr	r0, [sp, #28]
   15060:	ldr	r0, [r0]
   15064:	mov	r1, #1
   15068:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   1506c:	cmp	r0, #0
   15070:	beq	13680 <main@@Base+0x184>
   15074:	mov	r7, r0
   15078:	ldr	r0, [sp, #28]
   1507c:	mov	r1, r8
   15080:	mov	r2, r4
   15084:	mov	r5, r4
   15088:	add	r4, sp, #32
   1508c:	mov	r3, r4
   15090:	bl	1873c <main@@Base+0x5240>
   15094:	mov	r6, r0
   15098:	cmp	r8, r0
   1509c:	beq	150ac <main@@Base+0x1bb0>
   150a0:	mov	r8, r6
   150a4:	mov	r4, r5
   150a8:	b	150dc <main@@Base+0x1be0>
   150ac:	str	r4, [sp]
   150b0:	ldr	r0, [sp, #28]
   150b4:	mov	r1, r6
   150b8:	mov	r2, r5
   150bc:	movw	r3, #29064	; 0x7188
   150c0:	movt	r3, #3
   150c4:	bl	187d0 <main@@Base+0x52d4>
   150c8:	mov	r8, r0
   150cc:	cmp	r0, r6
   150d0:	mov	r4, r5
   150d4:	cmpne	r8, r4
   150d8:	beq	13680 <main@@Base+0x184>
   150dc:	ldr	r2, [sp, #32]
   150e0:	ldr	r3, [sp, #36]	; 0x24
   150e4:	mov	r0, r7
   150e8:	bl	18938 <main@@Base+0x543c>
   150ec:	ldr	r0, [sp, #28]
   150f0:	mov	r1, r8
   150f4:	mov	r2, r4
   150f8:	mov	r3, r9
   150fc:	bl	16bbc <main@@Base+0x36c0>
   15100:	mov	r8, r0
   15104:	ldr	r0, [sp, #52]	; 0x34
   15108:	cmp	r0, #0
   1510c:	ldr	r6, [sp, #24]
   15110:	bne	15050 <main@@Base+0x1b54>
   15114:	ldr	r0, [sp, #28]
   15118:	ldr	r0, [r0]
   1511c:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   15120:	str	r0, [sp, #48]	; 0x30
   15124:	cmp	r0, #0
   15128:	beq	13680 <main@@Base+0x184>
   1512c:	ldr	r0, [sp, #28]
   15130:	ldr	r0, [r0]
   15134:	mov	r1, #32
   15138:	b	15a6c <main@@Base+0x2570>
   1513c:	ldr	r0, [sp, #28]
   15140:	mov	r1, r7
   15144:	mov	r2, r4
   15148:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1514c:	mov	r8, r0
   15150:	b	13730 <main@@Base+0x234>
   15154:	ldr	r0, [sp, #28]
   15158:	mov	r1, r8
   1515c:	b	15144 <main@@Base+0x1c48>
   15160:	add	r6, r6, #8
   15164:	mov	r0, r6
   15168:	mov	r1, r4
   1516c:	bl	15d14 <main@@Base+0x2818>
   15170:	and	r0, r1, #-16777216	; 0xff000000
   15174:	teq	r0, #1627389952	; 0x61000000
   15178:	bne	156c4 <main@@Base+0x21c8>
   1517c:	ldr	r0, [sp, #28]
   15180:	mov	r1, r6
   15184:	mov	r2, r4
   15188:	mov	r3, #1
   1518c:	bl	15d18 <main@@Base+0x281c>
   15190:	mov	r7, r0
   15194:	cmp	r6, r0
   15198:	beq	156d0 <main@@Base+0x21d4>
   1519c:	mov	r0, #0
   151a0:	str	r0, [sp, #32]
   151a4:	ldr	r0, [sp, #28]
   151a8:	mov	r1, r7
   151ac:	mov	r2, r4
   151b0:	mov	r5, r4
   151b4:	add	r4, sp, #32
   151b8:	mov	r3, r4
   151bc:	bl	18528 <main@@Base+0x502c>
   151c0:	mov	r6, r0
   151c4:	cmp	r7, r0
   151c8:	beq	159ec <main@@Base+0x24f0>
   151cc:	mov	r8, r6
   151d0:	mov	r4, r5
   151d4:	b	15a1c <main@@Base+0x2520>
   151d8:	ldr	r0, [sp, #28]
   151dc:	mov	r1, r7
   151e0:	mov	r2, r4
   151e4:	mov	r3, #8
   151e8:	bl	15d18 <main@@Base+0x281c>
   151ec:	mov	r6, r0
   151f0:	cmp	r7, r0
   151f4:	beq	15648 <main@@Base+0x214c>
   151f8:	mov	r0, #0
   151fc:	str	r0, [sp, #36]	; 0x24
   15200:	str	r0, [sp, #32]
   15204:	ldr	r0, [sp, #28]
   15208:	mov	r1, r6
   1520c:	mov	r2, r4
   15210:	mov	r5, r4
   15214:	add	r4, sp, #32
   15218:	mov	r3, r4
   1521c:	bl	18b74 <main@@Base+0x5678>
   15220:	mov	r7, r0
   15224:	cmp	r6, r0
   15228:	beq	15968 <main@@Base+0x246c>
   1522c:	mov	r8, r7
   15230:	mov	r4, r5
   15234:	b	15998 <main@@Base+0x249c>
   15238:	str	r4, [sp]
   1523c:	ldr	r0, [sp, #28]
   15240:	mov	r1, r7
   15244:	mov	r2, r5
   15248:	movw	r3, #28896	; 0x70e0
   1524c:	movt	r3, #3
   15250:	bl	17a38 <main@@Base+0x453c>
   15254:	mov	r8, r0
   15258:	cmp	r0, r7
   1525c:	mov	r4, r5
   15260:	cmpne	r8, r4
   15264:	beq	13680 <main@@Base+0x184>
   15268:	ldrb	r6, [sp, #32]
   1526c:	cmp	r6, #1
   15270:	bne	15284 <main@@Base+0x1d88>
   15274:	ldr	r0, [sp, #28]
   15278:	ldrb	r0, [r0, #8]
   1527c:	tst	r0, #2
   15280:	beq	159e4 <main@@Base+0x24e8>
   15284:	ldr	r0, [sp, #28]
   15288:	ldr	r0, [r0]
   1528c:	mov	r1, #15
   15290:	mov	r2, #1
   15294:	mov	r3, #1
   15298:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1529c:	cmp	r0, #0
   152a0:	beq	13680 <main@@Base+0x184>
   152a4:	mov	r1, r6
   152a8:	bl	17b9c <main@@Base+0x46a0>
   152ac:	b	159e4 <main@@Base+0x24e8>
   152b0:	ldr	r6, [sp, #24]
   152b4:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   152b8:	str	r0, [sp, #48]	; 0x30
   152bc:	cmp	r0, #0
   152c0:	beq	13680 <main@@Base+0x184>
   152c4:	ldr	r0, [sp, #28]
   152c8:	ldr	r0, [r0]
   152cc:	mov	r1, #31
   152d0:	b	15a6c <main@@Base+0x2570>
   152d4:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   152d8:	str	r0, [sp, #48]	; 0x30
   152dc:	cmp	r0, #0
   152e0:	beq	13680 <main@@Base+0x184>
   152e4:	ldr	r0, [sp, #28]
   152e8:	ldr	r0, [r0]
   152ec:	mov	r1, #29
   152f0:	b	15a6c <main@@Base+0x2570>
   152f4:	mov	r8, r6
   152f8:	ldr	r6, [sp, #24]
   152fc:	mov	r4, r5
   15300:	ldrb	r1, [sp, #32]
   15304:	mov	r0, r7
   15308:	bl	16b9c <main@@Base+0x36a0>
   1530c:	ldr	r0, [sp, #28]
   15310:	mov	r1, r8
   15314:	mov	r2, r4
   15318:	mov	r3, r9
   1531c:	bl	16bbc <main@@Base+0x36c0>
   15320:	mov	r8, r0
   15324:	ldr	r0, [sp, #52]	; 0x34
   15328:	cmp	r0, #0
   1532c:	beq	15a48 <main@@Base+0x254c>
   15330:	mov	r0, #0
   15334:	strb	r0, [sp, #32]
   15338:	ldr	r0, [sp, #28]
   1533c:	ldr	r0, [r0]
   15340:	mov	r1, #1
   15344:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   15348:	cmp	r0, #0
   1534c:	beq	13680 <main@@Base+0x184>
   15350:	mov	r7, r0
   15354:	ldr	r0, [sp, #28]
   15358:	mov	r1, r8
   1535c:	mov	r2, r4
   15360:	mov	r5, r4
   15364:	add	r4, sp, #32
   15368:	mov	r3, r4
   1536c:	bl	169a8 <main@@Base+0x34ac>
   15370:	mov	r6, r0
   15374:	cmp	r8, r0
   15378:	bne	152f4 <main@@Base+0x1df8>
   1537c:	str	r4, [sp]
   15380:	ldr	r0, [sp, #28]
   15384:	mov	r1, r6
   15388:	mov	r2, r5
   1538c:	movw	r3, #29040	; 0x7170
   15390:	movt	r3, #3
   15394:	bl	16a38 <main@@Base+0x353c>
   15398:	mov	r8, r0
   1539c:	cmp	r0, r6
   153a0:	mov	r4, r5
   153a4:	beq	13680 <main@@Base+0x184>
   153a8:	cmp	r8, r4
   153ac:	ldr	r6, [sp, #24]
   153b0:	bne	15300 <main@@Base+0x1e04>
   153b4:	b	13680 <main@@Base+0x184>
   153b8:	str	r4, [sp]
   153bc:	ldr	r0, [sp, #28]
   153c0:	mov	r1, r7
   153c4:	mov	r2, r5
   153c8:	movw	r3, #28944	; 0x7110
   153cc:	movt	r3, #3
   153d0:	bl	185b8 <main@@Base+0x50bc>
   153d4:	mov	r8, r0
   153d8:	cmp	r0, r7
   153dc:	mov	r4, r5
   153e0:	cmpne	r8, r4
   153e4:	beq	13680 <main@@Base+0x184>
   153e8:	ldr	r6, [sp, #32]
   153ec:	cmp	r6, #0
   153f0:	bne	15404 <main@@Base+0x1f08>
   153f4:	ldr	r0, [sp, #28]
   153f8:	ldrb	r0, [r0, #8]
   153fc:	tst	r0, #2
   15400:	beq	159e4 <main@@Base+0x24e8>
   15404:	ldr	r0, [sp, #28]
   15408:	ldr	r0, [r0]
   1540c:	mov	r1, #16
   15410:	mov	r2, #4
   15414:	mov	r3, #4
   15418:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1541c:	cmp	r0, #0
   15420:	beq	13680 <main@@Base+0x184>
   15424:	mov	r1, r6
   15428:	bl	1871c <main@@Base+0x5220>
   1542c:	b	159e4 <main@@Base+0x24e8>
   15430:	str	r4, [sp]
   15434:	ldr	r0, [sp, #28]
   15438:	mov	r1, r7
   1543c:	mov	r2, r5
   15440:	movw	r3, #28832	; 0x70a0
   15444:	movt	r3, #3
   15448:	bl	16d0c <main@@Base+0x3810>
   1544c:	mov	r8, r0
   15450:	cmp	r0, r7
   15454:	ldr	r6, [sp, #24]
   15458:	mov	r4, r5
   1545c:	cmpne	r8, r4
   15460:	beq	13680 <main@@Base+0x184>
   15464:	ldrh	r4, [sp, #32]
   15468:	cmp	r4, #100	; 0x64
   1546c:	bne	15480 <main@@Base+0x1f84>
   15470:	ldr	r0, [sp, #28]
   15474:	ldrb	r0, [r0, #8]
   15478:	tst	r0, #2
   1547c:	beq	157e4 <main@@Base+0x22e8>
   15480:	ldr	r0, [sp, #28]
   15484:	ldr	r0, [r0]
   15488:	mov	r1, #2
   1548c:	b	157c8 <main@@Base+0x22cc>
   15490:	str	r4, [sp]
   15494:	ldr	r0, [sp, #28]
   15498:	mov	r1, r7
   1549c:	mov	r2, r9
   154a0:	movw	r3, #28908	; 0x70ec
   154a4:	movt	r3, #3
   154a8:	bl	183c0 <main@@Base+0x4ec4>
   154ac:	mov	r8, r0
   154b0:	cmp	r0, r7
   154b4:	ldr	r6, [sp, #24]
   154b8:	mov	r4, r9
   154bc:	beq	13680 <main@@Base+0x184>
   154c0:	cmp	r8, r4
   154c4:	add	r9, sp, #52	; 0x34
   154c8:	beq	13680 <main@@Base+0x184>
   154cc:	vldr	s0, [sp, #32]
   154d0:	vcmp.f32	s0, s16
   154d4:	vmrs	APSR_nzcv, fpscr
   154d8:	bne	154ec <main@@Base+0x1ff0>
   154dc:	ldr	r0, [sp, #28]
   154e0:	ldrb	r0, [r0, #8]
   154e4:	tst	r0, #2
   154e8:	beq	13730 <main@@Base+0x234>
   154ec:	ldr	r0, [sp, #28]
   154f0:	ldr	r0, [r0]
   154f4:	mov	r1, #26
   154f8:	b	15854 <main@@Base+0x2358>
   154fc:	ldr	r0, [sp, #28]
   15500:	ldr	r0, [r0]
   15504:	bl	1df54 <flatcc_builder_end_offset_vector@@Base>
   15508:	str	r0, [sp, #48]	; 0x30
   1550c:	cmp	r0, #0
   15510:	beq	13680 <main@@Base+0x184>
   15514:	ldr	r0, [sp, #28]
   15518:	ldr	r0, [r0]
   1551c:	mov	r1, #28
   15520:	b	15a6c <main@@Base+0x2570>
   15524:	ldr	r0, [sp, #28]
   15528:	ldr	r0, [r0]
   1552c:	bl	1df54 <flatcc_builder_end_offset_vector@@Base>
   15530:	str	r0, [sp, #48]	; 0x30
   15534:	cmp	r0, #0
   15538:	beq	13680 <main@@Base+0x184>
   1553c:	ldr	r0, [sp, #28]
   15540:	ldr	r0, [r0]
   15544:	mov	r1, #11
   15548:	b	15a6c <main@@Base+0x2570>
   1554c:	ldr	r0, [sp, #28]
   15550:	b	15144 <main@@Base+0x1c48>
   15554:	add	r6, r6, #8
   15558:	mov	r0, r6
   1555c:	mov	r1, r4
   15560:	bl	15d14 <main@@Base+0x2818>
   15564:	and	r0, r1, #-16777216	; 0xff000000
   15568:	teq	r0, #1627389952	; 0x61000000
   1556c:	bne	156c4 <main@@Base+0x21c8>
   15570:	ldr	r0, [sp, #28]
   15574:	mov	r1, r6
   15578:	mov	r2, r4
   1557c:	mov	r3, #1
   15580:	bl	15d18 <main@@Base+0x281c>
   15584:	mov	r7, r0
   15588:	cmp	r6, r0
   1558c:	beq	156d0 <main@@Base+0x21d4>
   15590:	mov	r0, #0
   15594:	str	r0, [sp, #36]	; 0x24
   15598:	str	r0, [sp, #32]
   1559c:	ldr	r0, [sp, #28]
   155a0:	mov	r1, r7
   155a4:	mov	r2, r4
   155a8:	mov	r5, r4
   155ac:	add	r4, sp, #32
   155b0:	mov	r3, r4
   155b4:	bl	1873c <main@@Base+0x5240>
   155b8:	mov	r6, r0
   155bc:	cmp	r7, r0
   155c0:	beq	15a84 <main@@Base+0x2588>
   155c4:	mov	r8, r6
   155c8:	mov	r4, r5
   155cc:	b	15ab4 <main@@Base+0x25b8>
   155d0:	add	r6, r6, #8
   155d4:	mov	r0, r6
   155d8:	mov	r1, r4
   155dc:	bl	15d14 <main@@Base+0x2818>
   155e0:	and	r0, r1, #-16777216	; 0xff000000
   155e4:	teq	r0, #1627389952	; 0x61000000
   155e8:	bne	156c4 <main@@Base+0x21c8>
   155ec:	ldr	r0, [sp, #28]
   155f0:	mov	r1, r6
   155f4:	mov	r2, r4
   155f8:	mov	r3, #1
   155fc:	bl	15d18 <main@@Base+0x281c>
   15600:	mov	r7, r0
   15604:	cmp	r6, r0
   15608:	beq	156d0 <main@@Base+0x21d4>
   1560c:	mov	r0, #0
   15610:	str	r0, [sp, #32]
   15614:	ldr	r0, [sp, #28]
   15618:	mov	r1, r7
   1561c:	mov	r2, r4
   15620:	mov	r5, r4
   15624:	add	r4, sp, #32
   15628:	mov	r3, r4
   1562c:	bl	18960 <main@@Base+0x5464>
   15630:	mov	r6, r0
   15634:	cmp	r7, r0
   15638:	beq	15b04 <main@@Base+0x2608>
   1563c:	mov	r8, r6
   15640:	mov	r4, r5
   15644:	b	15b34 <main@@Base+0x2638>
   15648:	add	r6, r6, #8
   1564c:	mov	r0, r6
   15650:	mov	r1, r4
   15654:	bl	15d14 <main@@Base+0x2818>
   15658:	and	r0, r1, #-16777216	; 0xff000000
   1565c:	teq	r0, #1627389952	; 0x61000000
   15660:	bne	156c4 <main@@Base+0x21c8>
   15664:	ldr	r0, [sp, #28]
   15668:	mov	r1, r6
   1566c:	mov	r2, r4
   15670:	mov	r3, #1
   15674:	bl	15d18 <main@@Base+0x281c>
   15678:	mov	r7, r0
   1567c:	cmp	r6, r0
   15680:	beq	156d0 <main@@Base+0x21d4>
   15684:	mov	r0, #0
   15688:	str	r0, [sp, #36]	; 0x24
   1568c:	str	r0, [sp, #32]
   15690:	ldr	r0, [sp, #28]
   15694:	mov	r1, r7
   15698:	mov	r2, r4
   1569c:	mov	r5, r4
   156a0:	add	r4, sp, #32
   156a4:	mov	r3, r4
   156a8:	bl	18b74 <main@@Base+0x5678>
   156ac:	mov	r6, r0
   156b0:	cmp	r7, r0
   156b4:	beq	15b60 <main@@Base+0x2664>
   156b8:	mov	r8, r6
   156bc:	mov	r4, r5
   156c0:	b	15b90 <main@@Base+0x2694>
   156c4:	ldr	r0, [sp, #28]
   156c8:	mov	r1, r6
   156cc:	b	156d8 <main@@Base+0x21dc>
   156d0:	ldr	r0, [sp, #28]
   156d4:	mov	r1, r7
   156d8:	mov	r2, r4
   156dc:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   156e0:	mov	r8, r0
   156e4:	ldr	r6, [sp, #24]
   156e8:	b	13730 <main@@Base+0x234>
   156ec:	str	r4, [sp]
   156f0:	ldr	r0, [sp, #28]
   156f4:	mov	r1, r7
   156f8:	mov	r2, r5
   156fc:	movw	r3, #28968	; 0x7128
   15700:	movt	r3, #3
   15704:	bl	187d0 <main@@Base+0x52d4>
   15708:	mov	r8, r0
   1570c:	cmp	r0, r7
   15710:	mov	r4, r5
   15714:	cmpne	r8, r4
   15718:	beq	13680 <main@@Base+0x184>
   1571c:	ldr	r7, [sp, #32]
   15720:	ldr	r6, [sp, #36]	; 0x24
   15724:	orrs	r0, r7, r6
   15728:	bne	1573c <main@@Base+0x2240>
   1572c:	ldr	r0, [sp, #28]
   15730:	ldrb	r0, [r0, #8]
   15734:	tst	r0, #2
   15738:	beq	159e4 <main@@Base+0x24e8>
   1573c:	ldr	r0, [sp, #28]
   15740:	ldr	r0, [r0]
   15744:	mov	r1, #18
   15748:	mov	r2, #8
   1574c:	mov	r3, #8
   15750:	bl	1eee0 <flatcc_builder_table_add@@Base>
   15754:	cmp	r0, #0
   15758:	beq	13680 <main@@Base+0x184>
   1575c:	mov	r2, r7
   15760:	mov	r3, r6
   15764:	bl	18938 <main@@Base+0x543c>
   15768:	b	159e4 <main@@Base+0x24e8>
   1576c:	str	r4, [sp]
   15770:	ldr	r0, [sp, #28]
   15774:	mov	r1, r7
   15778:	mov	r2, r5
   1577c:	movw	r3, #28856	; 0x70b8
   15780:	movt	r3, #3
   15784:	bl	16d0c <main@@Base+0x3810>
   15788:	mov	r8, r0
   1578c:	cmp	r0, r7
   15790:	ldr	r6, [sp, #24]
   15794:	mov	r4, r5
   15798:	cmpne	r8, r4
   1579c:	beq	13680 <main@@Base+0x184>
   157a0:	ldrh	r4, [sp, #32]
   157a4:	cmp	r4, #150	; 0x96
   157a8:	bne	157bc <main@@Base+0x22c0>
   157ac:	ldr	r0, [sp, #28]
   157b0:	ldrb	r0, [r0, #8]
   157b4:	tst	r0, #2
   157b8:	beq	157e4 <main@@Base+0x22e8>
   157bc:	ldr	r0, [sp, #28]
   157c0:	ldr	r0, [r0]
   157c4:	mov	r1, #1
   157c8:	mov	r2, #2
   157cc:	mov	r3, #2
   157d0:	bl	1eee0 <flatcc_builder_table_add@@Base>
   157d4:	cmp	r0, #0
   157d8:	beq	15c38 <main@@Base+0x273c>
   157dc:	sxth	r1, r4
   157e0:	bl	16e70 <main@@Base+0x3974>
   157e4:	ldr	r4, [sp, #20]
   157e8:	b	13730 <main@@Base+0x234>
   157ec:	str	r4, [sp]
   157f0:	ldr	r0, [sp, #28]
   157f4:	mov	r1, r7
   157f8:	mov	r2, r9
   157fc:	movw	r3, #28920	; 0x70f8
   15800:	movt	r3, #3
   15804:	bl	183c0 <main@@Base+0x4ec4>
   15808:	mov	r8, r0
   1580c:	cmp	r0, r7
   15810:	ldr	r6, [sp, #24]
   15814:	mov	r4, r9
   15818:	beq	13680 <main@@Base+0x184>
   1581c:	cmp	r8, r4
   15820:	add	r9, sp, #52	; 0x34
   15824:	beq	13680 <main@@Base+0x184>
   15828:	vldr	s0, [sp, #32]
   1582c:	vcmp.f32	s0, s18
   15830:	vmrs	APSR_nzcv, fpscr
   15834:	bne	15848 <main@@Base+0x234c>
   15838:	ldr	r0, [sp, #28]
   1583c:	ldrb	r0, [r0, #8]
   15840:	tst	r0, #2
   15844:	beq	13730 <main@@Base+0x234>
   15848:	ldr	r0, [sp, #28]
   1584c:	ldr	r0, [r0]
   15850:	mov	r1, #25
   15854:	mov	r2, #4
   15858:	mov	r3, #4
   1585c:	bl	1eee0 <flatcc_builder_table_add@@Base>
   15860:	cmp	r0, #0
   15864:	beq	13680 <main@@Base+0x184>
   15868:	vldr	s0, [sp, #32]
   1586c:	bl	18510 <main@@Base+0x5014>
   15870:	b	13730 <main@@Base+0x234>
   15874:	ldr	r0, [sp, #28]
   15878:	ldr	r0, [r0]
   1587c:	bl	1df54 <flatcc_builder_end_offset_vector@@Base>
   15880:	str	r0, [sp, #48]	; 0x30
   15884:	cmp	r0, #0
   15888:	beq	13680 <main@@Base+0x184>
   1588c:	ldr	r0, [sp, #28]
   15890:	ldr	r0, [r0]
   15894:	mov	r1, #10
   15898:	b	15a6c <main@@Base+0x2570>
   1589c:	ldr	r0, [sp, #28]
   158a0:	ldr	r0, [r0]
   158a4:	mov	r1, #0
   158a8:	mov	r2, #0
   158ac:	mov	r3, #0
   158b0:	bl	1d3f8 <flatcc_builder_start_buffer@@Base>
   158b4:	cmp	r0, #0
   158b8:	bne	13680 <main@@Base+0x184>
   158bc:	ldr	r0, [sp, #28]
   158c0:	mov	r1, r8
   158c4:	mov	r2, r4
   158c8:	add	r3, sp, #48	; 0x30
   158cc:	bl	13640 <main@@Base+0x144>
   158d0:	mov	r8, r0
   158d4:	ldr	r1, [sp, #48]	; 0x30
   158d8:	cmp	r1, #0
   158dc:	beq	13680 <main@@Base+0x184>
   158e0:	ldr	r0, [sp, #28]
   158e4:	ldr	r0, [r0]
   158e8:	bl	1d5ac <flatcc_builder_end_buffer@@Base>
   158ec:	b	15a54 <main@@Base+0x2558>
   158f0:	str	r4, [sp]
   158f4:	ldr	r0, [sp, #28]
   158f8:	mov	r1, r7
   158fc:	mov	r2, r5
   15900:	movw	r3, #28992	; 0x7140
   15904:	movt	r3, #3
   15908:	bl	189f0 <main@@Base+0x54f4>
   1590c:	mov	r8, r0
   15910:	cmp	r0, r7
   15914:	mov	r4, r5
   15918:	cmpne	r8, r4
   1591c:	beq	13680 <main@@Base+0x184>
   15920:	ldr	r6, [sp, #32]
   15924:	cmp	r6, #0
   15928:	bne	1593c <main@@Base+0x2440>
   1592c:	ldr	r0, [sp, #28]
   15930:	ldrb	r0, [r0, #8]
   15934:	tst	r0, #2
   15938:	beq	159e4 <main@@Base+0x24e8>
   1593c:	ldr	r0, [sp, #28]
   15940:	ldr	r0, [r0]
   15944:	mov	r1, #17
   15948:	mov	r2, #4
   1594c:	mov	r3, #4
   15950:	bl	1eee0 <flatcc_builder_table_add@@Base>
   15954:	cmp	r0, #0
   15958:	beq	13680 <main@@Base+0x184>
   1595c:	mov	r1, r6
   15960:	bl	18b54 <main@@Base+0x5658>
   15964:	b	159e4 <main@@Base+0x24e8>
   15968:	str	r4, [sp]
   1596c:	ldr	r0, [sp, #28]
   15970:	mov	r1, r7
   15974:	mov	r2, r5
   15978:	movw	r3, #29016	; 0x7158
   1597c:	movt	r3, #3
   15980:	bl	18c08 <main@@Base+0x570c>
   15984:	mov	r8, r0
   15988:	cmp	r0, r7
   1598c:	mov	r4, r5
   15990:	cmpne	r8, r4
   15994:	beq	13680 <main@@Base+0x184>
   15998:	ldr	r6, [sp, #32]
   1599c:	ldr	r7, [sp, #36]	; 0x24
   159a0:	orrs	r0, r6, r7
   159a4:	bne	159b8 <main@@Base+0x24bc>
   159a8:	ldr	r0, [sp, #28]
   159ac:	ldrb	r0, [r0, #8]
   159b0:	tst	r0, #2
   159b4:	beq	159e4 <main@@Base+0x24e8>
   159b8:	ldr	r0, [sp, #28]
   159bc:	ldr	r0, [r0]
   159c0:	mov	r1, #19
   159c4:	mov	r2, #8
   159c8:	mov	r3, #8
   159cc:	bl	1eee0 <flatcc_builder_table_add@@Base>
   159d0:	cmp	r0, #0
   159d4:	beq	13680 <main@@Base+0x184>
   159d8:	mov	r2, r6
   159dc:	mov	r3, r7
   159e0:	bl	18d70 <main@@Base+0x5874>
   159e4:	ldr	r6, [sp, #24]
   159e8:	b	13730 <main@@Base+0x234>
   159ec:	str	r4, [sp]
   159f0:	ldr	r0, [sp, #28]
   159f4:	mov	r1, r6
   159f8:	mov	r2, r5
   159fc:	movw	r3, #28956	; 0x711c
   15a00:	movt	r3, #3
   15a04:	bl	185b8 <main@@Base+0x50bc>
   15a08:	mov	r8, r0
   15a0c:	cmp	r0, r6
   15a10:	mov	r4, r5
   15a14:	cmpne	r8, r4
   15a18:	beq	13680 <main@@Base+0x184>
   15a1c:	ldr	r6, [sp, #32]
   15a20:	cmp	r6, #0
   15a24:	bne	15a38 <main@@Base+0x253c>
   15a28:	ldr	r0, [sp, #28]
   15a2c:	ldrb	r0, [r0, #8]
   15a30:	tst	r0, #2
   15a34:	beq	159e4 <main@@Base+0x24e8>
   15a38:	ldr	r0, [sp, #28]
   15a3c:	ldr	r0, [r0]
   15a40:	mov	r1, #20
   15a44:	b	15410 <main@@Base+0x1f14>
   15a48:	ldr	r0, [sp, #28]
   15a4c:	ldr	r0, [r0]
   15a50:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   15a54:	str	r0, [sp, #48]	; 0x30
   15a58:	cmp	r0, #0
   15a5c:	beq	13680 <main@@Base+0x184>
   15a60:	ldr	r0, [sp, #28]
   15a64:	ldr	r0, [r0]
   15a68:	mov	r1, #13
   15a6c:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   15a70:	cmp	r0, #0
   15a74:	beq	13680 <main@@Base+0x184>
   15a78:	ldr	r1, [sp, #48]	; 0x30
   15a7c:	str	r1, [r0]
   15a80:	b	13730 <main@@Base+0x234>
   15a84:	str	r4, [sp]
   15a88:	ldr	r0, [sp, #28]
   15a8c:	mov	r1, r6
   15a90:	mov	r2, r5
   15a94:	movw	r3, #28980	; 0x7134
   15a98:	movt	r3, #3
   15a9c:	bl	187d0 <main@@Base+0x52d4>
   15aa0:	mov	r8, r0
   15aa4:	cmp	r0, r6
   15aa8:	mov	r4, r5
   15aac:	cmpne	r8, r4
   15ab0:	beq	13680 <main@@Base+0x184>
   15ab4:	ldr	r6, [sp, #32]
   15ab8:	ldr	r7, [sp, #36]	; 0x24
   15abc:	orrs	r0, r6, r7
   15ac0:	bne	15ad4 <main@@Base+0x25d8>
   15ac4:	ldr	r0, [sp, #28]
   15ac8:	ldrb	r0, [r0, #8]
   15acc:	tst	r0, #2
   15ad0:	beq	159e4 <main@@Base+0x24e8>
   15ad4:	ldr	r0, [sp, #28]
   15ad8:	ldr	r0, [r0]
   15adc:	mov	r1, #22
   15ae0:	mov	r2, #8
   15ae4:	mov	r3, #8
   15ae8:	bl	1eee0 <flatcc_builder_table_add@@Base>
   15aec:	cmp	r0, #0
   15af0:	beq	13680 <main@@Base+0x184>
   15af4:	mov	r2, r6
   15af8:	mov	r3, r7
   15afc:	bl	18938 <main@@Base+0x543c>
   15b00:	b	159e4 <main@@Base+0x24e8>
   15b04:	str	r4, [sp]
   15b08:	ldr	r0, [sp, #28]
   15b0c:	mov	r1, r6
   15b10:	mov	r2, r5
   15b14:	movw	r3, #29004	; 0x714c
   15b18:	movt	r3, #3
   15b1c:	bl	189f0 <main@@Base+0x54f4>
   15b20:	mov	r8, r0
   15b24:	cmp	r0, r6
   15b28:	mov	r4, r5
   15b2c:	cmpne	r8, r4
   15b30:	beq	13680 <main@@Base+0x184>
   15b34:	ldr	r6, [sp, #32]
   15b38:	cmp	r6, #0
   15b3c:	bne	15b50 <main@@Base+0x2654>
   15b40:	ldr	r0, [sp, #28]
   15b44:	ldrb	r0, [r0, #8]
   15b48:	tst	r0, #2
   15b4c:	beq	159e4 <main@@Base+0x24e8>
   15b50:	ldr	r0, [sp, #28]
   15b54:	ldr	r0, [r0]
   15b58:	mov	r1, #21
   15b5c:	b	15948 <main@@Base+0x244c>
   15b60:	str	r4, [sp]
   15b64:	ldr	r0, [sp, #28]
   15b68:	mov	r1, r6
   15b6c:	mov	r2, r5
   15b70:	movw	r3, #29028	; 0x7164
   15b74:	movt	r3, #3
   15b78:	bl	18c08 <main@@Base+0x570c>
   15b7c:	mov	r8, r0
   15b80:	cmp	r0, r6
   15b84:	mov	r4, r5
   15b88:	cmpne	r8, r4
   15b8c:	beq	13680 <main@@Base+0x184>
   15b90:	ldr	r6, [sp, #32]
   15b94:	ldr	r7, [sp, #36]	; 0x24
   15b98:	orrs	r0, r6, r7
   15b9c:	bne	15bb0 <main@@Base+0x26b4>
   15ba0:	ldr	r0, [sp, #28]
   15ba4:	ldrb	r0, [r0, #8]
   15ba8:	tst	r0, #2
   15bac:	beq	159e4 <main@@Base+0x24e8>
   15bb0:	ldr	r0, [sp, #28]
   15bb4:	ldr	r0, [r0]
   15bb8:	mov	r1, #23
   15bbc:	b	159c4 <main@@Base+0x24c8>
   15bc0:	ldr	r0, [sp, #28]
   15bc4:	ldr	r0, [r0, #24]
   15bc8:	cmp	r0, #0
   15bcc:	bne	13680 <main@@Base+0x184>
   15bd0:	ldr	r0, [sp, #28]
   15bd4:	ldr	r0, [r0]
   15bd8:	mov	r1, #3
   15bdc:	bl	1e674 <flatcc_builder_check_required_field@@Base>
   15be0:	cmp	r0, #0
   15be4:	beq	15c1c <main@@Base+0x2720>
   15be8:	ldr	r3, [sp, #44]	; 0x2c
   15bec:	ldr	r5, [sp, #28]
   15bf0:	mov	r0, r5
   15bf4:	mov	r1, r8
   15bf8:	mov	r2, r4
   15bfc:	bl	22270 <flatcc_json_parser_finalize_unions@@Base>
   15c00:	mov	r8, r0
   15c04:	ldr	r0, [r5]
   15c08:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   15c0c:	str	r0, [r6]
   15c10:	cmp	r0, #0
   15c14:	bne	13698 <main@@Base+0x19c>
   15c18:	b	13680 <main@@Base+0x184>
   15c1c:	ldr	r0, [sp, #28]
   15c20:	mov	r1, r8
   15c24:	mov	r2, r4
   15c28:	mov	r3, #29
   15c2c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   15c30:	mov	r8, r0
   15c34:	b	13680 <main@@Base+0x184>
   15c38:	ldr	r4, [sp, #20]
   15c3c:	b	13680 <main@@Base+0x184>
   15c40:	push	{r4, r5, r6, sl, fp, lr}
   15c44:	add	fp, sp, #16
   15c48:	mov	r5, r3
   15c4c:	mov	r4, r2
   15c50:	mov	r6, r0
   15c54:	cmp	r1, r2
   15c58:	beq	15ca8 <main@@Base+0x27ac>
   15c5c:	ldrb	r0, [r1]
   15c60:	cmp	r0, #123	; 0x7b
   15c64:	bne	15ca8 <main@@Base+0x27ac>
   15c68:	add	r1, r1, #1
   15c6c:	mov	r0, r6
   15c70:	mov	r2, r4
   15c74:	bl	18fbc <main@@Base+0x5ac0>
   15c78:	cmp	r0, r4
   15c7c:	beq	15cc4 <main@@Base+0x27c8>
   15c80:	ldrb	r1, [r0]
   15c84:	cmp	r1, #125	; 0x7d
   15c88:	bne	15cc4 <main@@Base+0x27c8>
   15c8c:	mov	r1, #0
   15c90:	str	r1, [r5]
   15c94:	add	r1, r0, #1
   15c98:	mov	r0, r6
   15c9c:	mov	r2, r4
   15ca0:	pop	{r4, r5, r6, sl, fp, lr}
   15ca4:	b	18fbc <main@@Base+0x5ac0>
   15ca8:	mov	r0, #0
   15cac:	str	r0, [r5]
   15cb0:	mov	r0, r6
   15cb4:	mov	r2, r4
   15cb8:	mov	r3, #21
   15cbc:	pop	{r4, r5, r6, sl, fp, lr}
   15cc0:	b	208a0 <flatcc_json_parser_set_error@@Base>
   15cc4:	mov	r1, #1
   15cc8:	str	r1, [r5]
   15ccc:	pop	{r4, r5, r6, sl, fp, pc}
   15cd0:	cmp	r1, r2
   15cd4:	beq	15d04 <main@@Base+0x2808>
   15cd8:	ldrb	r3, [r1]
   15cdc:	cmp	r3, #46	; 0x2e
   15ce0:	beq	15d0c <main@@Base+0x2810>
   15ce4:	cmp	r3, #34	; 0x22
   15ce8:	moveq	r2, #0
   15cec:	streq	r2, [r0, #12]
   15cf0:	addeq	r1, r1, #1
   15cf4:	moveq	r0, r1
   15cf8:	bxeq	lr
   15cfc:	mov	r2, #1
   15d00:	str	r2, [r0, #12]
   15d04:	mov	r0, r1
   15d08:	bx	lr
   15d0c:	mov	r3, #5
   15d10:	b	208a0 <flatcc_json_parser_set_error@@Base>
   15d14:	b	18ff4 <main@@Base+0x5af8>
   15d18:	push	{r4, r5, r6, sl, fp, lr}
   15d1c:	add	fp, sp, #16
   15d20:	mov	r6, r0
   15d24:	sub	r0, r2, r1
   15d28:	cmp	r0, r3
   15d2c:	ble	15db0 <main@@Base+0x28b4>
   15d30:	mov	r4, r2
   15d34:	mov	r2, r1
   15d38:	ldrb	r0, [r2, r3]!
   15d3c:	ldr	r5, [r6, #12]
   15d40:	cmp	r5, #0
   15d44:	beq	15d64 <main@@Base+0x2868>
   15d48:	cmp	r0, #33	; 0x21
   15d4c:	bcc	15d58 <main@@Base+0x285c>
   15d50:	cmp	r0, #58	; 0x3a
   15d54:	bne	15db0 <main@@Base+0x28b4>
   15d58:	mov	r0, #0
   15d5c:	str	r0, [r6, #12]
   15d60:	b	15d74 <main@@Base+0x2878>
   15d64:	cmp	r0, #34	; 0x22
   15d68:	bne	15db0 <main@@Base+0x28b4>
   15d6c:	add	r0, r3, r1
   15d70:	add	r2, r0, #1
   15d74:	mov	r0, r6
   15d78:	mov	r1, r2
   15d7c:	mov	r2, r4
   15d80:	bl	18fbc <main@@Base+0x5ac0>
   15d84:	mov	r1, r0
   15d88:	cmp	r0, r4
   15d8c:	beq	15db8 <main@@Base+0x28bc>
   15d90:	ldrb	r0, [r1]
   15d94:	cmp	r0, #58	; 0x3a
   15d98:	bne	15db8 <main@@Base+0x28bc>
   15d9c:	add	r1, r1, #1
   15da0:	mov	r0, r6
   15da4:	mov	r2, r4
   15da8:	pop	{r4, r5, r6, sl, fp, lr}
   15dac:	b	18fbc <main@@Base+0x5ac0>
   15db0:	mov	r0, r1
   15db4:	pop	{r4, r5, r6, sl, fp, pc}
   15db8:	mov	r0, r6
   15dbc:	mov	r2, r4
   15dc0:	mov	r3, #4
   15dc4:	pop	{r4, r5, r6, sl, fp, lr}
   15dc8:	b	208a0 <flatcc_json_parser_set_error@@Base>
   15dcc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15dd0:	add	fp, sp, #24
   15dd4:	sub	sp, sp, #8
   15dd8:	mov	r9, r3
   15ddc:	mov	r6, r2
   15de0:	mov	r5, r1
   15de4:	mov	r7, r0
   15de8:	mov	r0, r1
   15dec:	mov	r1, r2
   15df0:	bl	15d14 <main@@Base+0x2818>
   15df4:	ldr	ip, [fp, #12]
   15df8:	ldr	r8, [fp, #8]
   15dfc:	movw	r3, #25957	; 0x6565
   15e00:	movt	r3, #18290	; 0x4772
   15e04:	mvn	r4, #-1845493760	; 0x92000000
   15e08:	subs	r4, r4, r0
   15e0c:	sbcs	r4, r3, r1
   15e10:	bcc	15e50 <main@@Base+0x2954>
   15e14:	movw	r0, #30053	; 0x7565
   15e18:	movt	r0, #17004	; 0x426c
   15e1c:	teq	r1, r0
   15e20:	bne	15edc <main@@Base+0x29e0>
   15e24:	str	ip, [sp]
   15e28:	mov	r0, r7
   15e2c:	mov	r1, r5
   15e30:	mov	r2, r6
   15e34:	mov	r3, #4
   15e38:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   15e3c:	cmp	r0, r5
   15e40:	beq	15edc <main@@Base+0x29e0>
   15e44:	mov	r1, #0
   15e48:	mov	r2, #8
   15e4c:	b	15ecc <main@@Base+0x29d0>
   15e50:	bic	r4, r1, #255	; 0xff
   15e54:	movw	r2, #25600	; 0x6400
   15e58:	movt	r2, #21093	; 0x5265
   15e5c:	teq	r4, r2
   15e60:	bne	15e90 <main@@Base+0x2994>
   15e64:	str	ip, [sp]
   15e68:	mov	r0, r7
   15e6c:	mov	r1, r5
   15e70:	mov	r2, r6
   15e74:	mov	r3, #3
   15e78:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   15e7c:	cmp	r0, r5
   15e80:	beq	15edc <main@@Base+0x29e0>
   15e84:	mov	r1, #0
   15e88:	mov	r2, #1
   15e8c:	b	15ecc <main@@Base+0x29d0>
   15e90:	eor	r1, r1, r3
   15e94:	and	r0, r0, #-16777216	; 0xff000000
   15e98:	eor	r0, r0, #1845493760	; 0x6e000000
   15e9c:	orrs	r0, r0, r1
   15ea0:	bne	15edc <main@@Base+0x29e0>
   15ea4:	str	ip, [sp]
   15ea8:	mov	r0, r7
   15eac:	mov	r1, r5
   15eb0:	mov	r2, r6
   15eb4:	mov	r3, #5
   15eb8:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   15ebc:	cmp	r0, r5
   15ec0:	beq	15edc <main@@Base+0x29e0>
   15ec4:	mov	r1, #0
   15ec8:	mov	r2, #2
   15ecc:	str	r2, [r8]
   15ed0:	str	r1, [r8, #4]
   15ed4:	str	r1, [r9]
   15ed8:	mov	r5, r0
   15edc:	mov	r0, r5
   15ee0:	sub	sp, fp, #24
   15ee4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15eec:	add	fp, sp, #28
   15ef0:	sub	sp, sp, #4
   15ef4:	mov	r9, r3
   15ef8:	mov	r5, r2
   15efc:	mov	r7, r1
   15f00:	mov	sl, r0
   15f04:	mov	r0, r1
   15f08:	mov	r1, r2
   15f0c:	bl	15d14 <main@@Base+0x2818>
   15f10:	movw	r2, #30815	; 0x785f
   15f14:	movt	r2, #26725	; 0x6865
   15f18:	movw	r4, #30061	; 0x756d
   15f1c:	movt	r4, #25966	; 0x656e
   15f20:	subs	r3, r0, r4
   15f24:	sbcs	r3, r1, r2
   15f28:	bcs	15f8c <main@@Base+0x2a90>
   15f2c:	bic	r3, r1, #255	; 0xff
   15f30:	movw	r2, #27759	; 0x6c6f
   15f34:	movt	r2, #17263	; 0x436f
   15f38:	mvn	r4, #-1912602624	; 0x8e000000
   15f3c:	subs	r4, r4, r0
   15f40:	sbcs	r4, r2, r1
   15f44:	bcc	15fe4 <main@@Base+0x2ae8>
   15f48:	movw	r0, #30976	; 0x7900
   15f4c:	movt	r0, #16750	; 0x416e
   15f50:	teq	r3, r0
   15f54:	bne	16180 <main@@Base+0x2c84>
   15f58:	mov	r0, r7
   15f5c:	mov	r1, r5
   15f60:	mov	r2, #3
   15f64:	bl	19080 <main@@Base+0x5b84>
   15f68:	cmp	r0, r7
   15f6c:	beq	16180 <main@@Base+0x2c84>
   15f70:	mov	r1, r0
   15f74:	mov	r0, sl
   15f78:	mov	r2, r5
   15f7c:	mov	r3, r9
   15f80:	sub	sp, fp, #28
   15f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f88:	b	1772c <main@@Base+0x4230>
   15f8c:	add	r3, r2, #64512	; 0xfc00
   15f90:	add	r3, r3, #17301504	; 0x1080000
   15f94:	subs	r6, r0, r4
   15f98:	sbcs	r6, r1, r3
   15f9c:	bcs	16028 <main@@Base+0x2b2c>
   15fa0:	eor	r0, r0, r4
   15fa4:	eor	r1, r1, r2
   15fa8:	orrs	r0, r0, r1
   15fac:	bne	16180 <main@@Base+0x2c84>
   15fb0:	mov	r0, r7
   15fb4:	mov	r1, r5
   15fb8:	mov	r2, #8
   15fbc:	bl	19080 <main@@Base+0x5b84>
   15fc0:	cmp	r0, r7
   15fc4:	beq	16180 <main@@Base+0x2c84>
   15fc8:	mov	r1, r0
   15fcc:	mov	r0, sl
   15fd0:	mov	r2, r5
   15fd4:	mov	r3, r9
   15fd8:	sub	sp, fp, #28
   15fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fe0:	b	191b8 <main@@Base+0x5cbc>
   15fe4:	movw	r4, #28416	; 0x6f00
   15fe8:	movt	r4, #18031	; 0x466f
   15fec:	teq	r3, r4
   15ff0:	bne	16080 <main@@Base+0x2b84>
   15ff4:	mov	r0, r7
   15ff8:	mov	r1, r5
   15ffc:	mov	r2, #3
   16000:	bl	19080 <main@@Base+0x5b84>
   16004:	cmp	r0, r7
   16008:	beq	16180 <main@@Base+0x2c84>
   1600c:	mov	r1, r0
   16010:	mov	r0, sl
   16014:	mov	r2, r5
   16018:	mov	r3, r9
   1601c:	sub	sp, fp, #28
   16020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16024:	b	190a0 <main@@Base+0x5ba4>
   16028:	sub	r2, r2, #4352	; 0x1100
   1602c:	sub	r2, r2, #-100663296	; 0xfa000000
   16030:	subs	r6, r0, r4
   16034:	sbcs	r2, r1, r2
   16038:	bcs	160c8 <main@@Base+0x2bcc>
   1603c:	eor	r0, r0, r4
   16040:	eor	r1, r1, r3
   16044:	orrs	r0, r0, r1
   16048:	bne	16180 <main@@Base+0x2c84>
   1604c:	mov	r0, r7
   16050:	mov	r1, r5
   16054:	mov	r2, #8
   16058:	bl	19080 <main@@Base+0x5b84>
   1605c:	cmp	r0, r7
   16060:	beq	16180 <main@@Base+0x2c84>
   16064:	mov	r1, r0
   16068:	mov	r0, sl
   1606c:	mov	r2, r5
   16070:	mov	r3, r9
   16074:	sub	sp, fp, #28
   16078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1607c:	b	192e0 <main@@Base+0x5de4>
   16080:	eor	r1, r1, r2
   16084:	and	r0, r0, #-16777216	; 0xff000000
   16088:	eor	r0, r0, #1912602624	; 0x72000000
   1608c:	orrs	r0, r0, r1
   16090:	bne	16180 <main@@Base+0x2c84>
   16094:	mov	r0, r7
   16098:	mov	r1, r5
   1609c:	mov	r2, #5
   160a0:	bl	19080 <main@@Base+0x5b84>
   160a4:	cmp	r0, r7
   160a8:	beq	16180 <main@@Base+0x2c84>
   160ac:	mov	r1, r0
   160b0:	mov	r0, sl
   160b4:	mov	r2, r5
   160b8:	mov	r3, r9
   160bc:	sub	sp, fp, #28
   160c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160c4:	b	15dcc <main@@Base+0x28d0>
   160c8:	movw	r2, #29817	; 0x7479
   160cc:	movt	r2, #28016	; 0x6d70
   160d0:	eor	r2, r0, r2
   160d4:	movw	r3, #29797	; 0x7465
   160d8:	movt	r3, #28271	; 0x6e6f
   160dc:	eor	r3, r1, r3
   160e0:	orrs	r2, r2, r3
   160e4:	beq	16134 <main@@Base+0x2c38>
   160e8:	eor	r0, r0, r4
   160ec:	movw	r2, #26463	; 0x675f
   160f0:	movt	r2, #28261	; 0x6e65
   160f4:	eor	r1, r1, r2
   160f8:	orrs	r0, r0, r1
   160fc:	bne	16180 <main@@Base+0x2c84>
   16100:	mov	r0, r7
   16104:	mov	r1, r5
   16108:	mov	r2, #8
   1610c:	bl	19080 <main@@Base+0x5b84>
   16110:	cmp	r0, r7
   16114:	beq	16180 <main@@Base+0x2c84>
   16118:	mov	r1, r0
   1611c:	mov	r0, sl
   16120:	mov	r2, r5
   16124:	mov	r3, r9
   16128:	sub	sp, fp, #28
   1612c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16130:	b	19454 <main@@Base+0x5f58>
   16134:	add	r8, r7, #8
   16138:	mov	r0, r8
   1613c:	mov	r1, r5
   16140:	bl	15d14 <main@@Base+0x2818>
   16144:	teq	r1, r4
   16148:	bne	16180 <main@@Base+0x2c84>
   1614c:	mov	r0, r8
   16150:	mov	r1, r5
   16154:	mov	r2, #4
   16158:	bl	19080 <main@@Base+0x5b84>
   1615c:	cmp	r0, r8
   16160:	beq	16180 <main@@Base+0x2c84>
   16164:	mov	r1, r0
   16168:	mov	r0, sl
   1616c:	mov	r2, r5
   16170:	mov	r3, r9
   16174:	sub	sp, fp, #28
   16178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1617c:	b	19564 <main@@Base+0x6068>
   16180:	mov	r0, r7
   16184:	sub	sp, fp, #28
   16188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1618c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16190:	add	fp, sp, #28
   16194:	sub	sp, sp, #4
   16198:	mov	sl, r3
   1619c:	mov	r5, r2
   161a0:	mov	r7, r1
   161a4:	mov	r8, r0
   161a8:	mov	r0, r1
   161ac:	mov	r1, r2
   161b0:	bl	15d14 <main@@Base+0x2818>
   161b4:	movw	r2, #18273	; 0x4761
   161b8:	movt	r2, #19833	; 0x4d79
   161bc:	movw	r3, #11844	; 0x2e44
   161c0:	movt	r3, #28005	; 0x6d65
   161c4:	subs	r3, r3, r0
   161c8:	sbcs	r3, r2, r1
   161cc:	bcc	1626c <main@@Base+0x2d70>
   161d0:	movw	r2, #31022	; 0x792e
   161d4:	movt	r2, #24947	; 0x6173
   161d8:	eor	r0, r0, r2
   161dc:	movw	r2, #28276	; 0x6e74
   161e0:	movt	r2, #18017	; 0x4661
   161e4:	eor	r1, r1, r2
   161e8:	orrs	r0, r0, r1
   161ec:	bne	166f8 <main@@Base+0x31fc>
   161f0:	add	r0, r7, #8
   161f4:	mov	r1, r5
   161f8:	bl	15d14 <main@@Base+0x2818>
   161fc:	movw	r2, #24946	; 0x6172
   16200:	movt	r2, #17256	; 0x4368
   16204:	eor	r1, r1, r2
   16208:	movw	r2, #29797	; 0x7465
   1620c:	movt	r2, #24931	; 0x6163
   16210:	eor	r0, r0, r2
   16214:	orrs	r0, r0, r1
   16218:	bne	166f8 <main@@Base+0x31fc>
   1621c:	add	r4, r7, #16
   16220:	mov	r0, r4
   16224:	mov	r1, r5
   16228:	bl	15d14 <main@@Base+0x2818>
   1622c:	and	r0, r1, #-16777216	; 0xff000000
   16230:	teq	r0, #1912602624	; 0x72000000
   16234:	bne	166f8 <main@@Base+0x31fc>
   16238:	mov	r0, r4
   1623c:	mov	r1, r5
   16240:	mov	r2, #1
   16244:	bl	19080 <main@@Base+0x5b84>
   16248:	cmp	r0, r4
   1624c:	beq	166f8 <main@@Base+0x31fc>
   16250:	mov	r1, r0
   16254:	mov	r0, r8
   16258:	mov	r2, r5
   1625c:	mov	r3, sl
   16260:	sub	sp, fp, #28
   16264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16268:	b	195e0 <main@@Base+0x60e4>
   1626c:	movw	r3, #11855	; 0x2e4f
   16270:	movt	r3, #28005	; 0x6d65
   16274:	eor	r3, r0, r3
   16278:	eor	r1, r1, r2
   1627c:	orrs	r2, r3, r1
   16280:	beq	16344 <main@@Base+0x2e48>
   16284:	movw	r2, #11845	; 0x2e45
   16288:	movt	r2, #28005	; 0x6d65
   1628c:	eor	r0, r0, r2
   16290:	orrs	r0, r0, r1
   16294:	bne	166f8 <main@@Base+0x31fc>
   16298:	add	r0, r7, #8
   1629c:	mov	r1, r5
   162a0:	bl	15d14 <main@@Base+0x2818>
   162a4:	movw	r2, #28016	; 0x6d70
   162a8:	movt	r2, #30817	; 0x7861
   162ac:	movw	r3, #11880	; 0x2e68
   162b0:	movt	r3, #27749	; 0x6c65
   162b4:	subs	r6, r0, r3
   162b8:	sbcs	r6, r1, r2
   162bc:	bcs	16418 <main@@Base+0x2f1c>
   162c0:	subs	r6, r3, #37	; 0x25
   162c4:	sbc	r4, r2, #0
   162c8:	subs	r6, r0, r6
   162cc:	sbcs	r6, r1, r4
   162d0:	bcs	16494 <main@@Base+0x2f98>
   162d4:	subs	r3, r3, #39	; 0x27
   162d8:	eor	r0, r0, r3
   162dc:	sbc	r2, r2, #0
   162e0:	eor	r1, r1, r2
   162e4:	orrs	r0, r0, r1
   162e8:	bne	166f8 <main@@Base+0x31fc>
   162ec:	add	r4, r7, #16
   162f0:	mov	r0, r4
   162f4:	mov	r1, r5
   162f8:	bl	15d14 <main@@Base+0x2818>
   162fc:	bfc	r1, #0, #16
   16300:	movw	r0, #0
   16304:	movt	r0, #28281	; 0x6e79
   16308:	teq	r1, r0
   1630c:	bne	166f8 <main@@Base+0x31fc>
   16310:	mov	r0, r4
   16314:	mov	r1, r5
   16318:	mov	r2, #2
   1631c:	bl	19080 <main@@Base+0x5b84>
   16320:	cmp	r0, r4
   16324:	beq	166f8 <main@@Base+0x31fc>
   16328:	mov	r1, r0
   1632c:	mov	r0, r8
   16330:	mov	r2, r5
   16334:	mov	r3, sl
   16338:	sub	sp, fp, #28
   1633c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16340:	b	1772c <main@@Base+0x4230>
   16344:	add	r0, r7, #8
   16348:	mov	r1, r5
   1634c:	bl	15d14 <main@@Base+0x2818>
   16350:	movw	r2, #25970	; 0x6572
   16354:	movt	r2, #29800	; 0x7468
   16358:	eor	r1, r1, r2
   1635c:	movw	r2, #28005	; 0x6d65
   16360:	movt	r2, #20065	; 0x4e61
   16364:	eor	r0, r0, r2
   16368:	orrs	r0, r0, r1
   1636c:	bne	166f8 <main@@Base+0x31fc>
   16370:	add	r0, r7, #16
   16374:	mov	r1, r5
   16378:	bl	15d14 <main@@Base+0x2818>
   1637c:	movw	r2, #24931	; 0x6163
   16380:	movt	r2, #21360	; 0x5370
   16384:	eor	r1, r1, r2
   16388:	movw	r2, #18034	; 0x4672
   1638c:	movt	r2, #25902	; 0x652e
   16390:	eor	r0, r0, r2
   16394:	orrs	r0, r0, r1
   16398:	bne	166f8 <main@@Base+0x31fc>
   1639c:	add	r0, r7, #24
   163a0:	mov	r1, r5
   163a4:	bl	15d14 <main@@Base+0x2818>
   163a8:	movw	r2, #18798	; 0x496e
   163ac:	movt	r2, #28525	; 0x6f6d
   163b0:	eor	r1, r1, r2
   163b4:	movw	r2, #30052	; 0x7564
   163b8:	movt	r2, #25452	; 0x636c
   163bc:	eor	r0, r0, r2
   163c0:	orrs	r0, r0, r1
   163c4:	bne	166f8 <main@@Base+0x31fc>
   163c8:	add	r4, r7, #32
   163cc:	mov	r0, r4
   163d0:	mov	r1, r5
   163d4:	bl	15d14 <main@@Base+0x2818>
   163d8:	and	r0, r1, #-16777216	; 0xff000000
   163dc:	teq	r0, #1694498816	; 0x65000000
   163e0:	bne	166f8 <main@@Base+0x31fc>
   163e4:	mov	r0, r4
   163e8:	mov	r1, r5
   163ec:	mov	r2, #1
   163f0:	bl	19080 <main@@Base+0x5b84>
   163f4:	cmp	r0, r4
   163f8:	beq	166f8 <main@@Base+0x31fc>
   163fc:	mov	r1, r0
   16400:	mov	r0, r8
   16404:	mov	r2, r5
   16408:	mov	r3, sl
   1640c:	sub	sp, fp, #28
   16410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16414:	b	19864 <main@@Base+0x6368>
   16418:	eor	r6, r0, r3
   1641c:	eor	r4, r1, r2
   16420:	orrs	r6, r6, r4
   16424:	bne	16514 <main@@Base+0x3018>
   16428:	add	r4, r7, #16
   1642c:	mov	r0, r4
   16430:	mov	r1, r5
   16434:	bl	15d14 <main@@Base+0x2818>
   16438:	movw	r2, #24421	; 0x5f65
   1643c:	movt	r2, #25959	; 0x6567
   16440:	add	r2, r2, #1114112	; 0x110000
   16444:	eor	r1, r1, r2
   16448:	bic	r0, r0, #255	; 0xff
   1644c:	movw	r2, #27904	; 0x6d00
   16450:	movt	r2, #28277	; 0x6e75
   16454:	eor	r0, r0, r2
   16458:	orrs	r0, r0, r1
   1645c:	bne	166f8 <main@@Base+0x31fc>
   16460:	mov	r0, r4
   16464:	mov	r1, r5
   16468:	mov	r2, #7
   1646c:	bl	19080 <main@@Base+0x5b84>
   16470:	cmp	r0, r4
   16474:	beq	166f8 <main@@Base+0x31fc>
   16478:	mov	r1, r0
   1647c:	mov	r0, r8
   16480:	mov	r2, r5
   16484:	mov	r3, sl
   16488:	sub	sp, fp, #28
   1648c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16490:	b	191b8 <main@@Base+0x5cbc>
   16494:	movw	r3, #11846	; 0x2e46
   16498:	movt	r3, #27749	; 0x6c65
   1649c:	eor	r3, r0, r3
   164a0:	eor	r1, r1, r2
   164a4:	orrs	r2, r3, r1
   164a8:	beq	16624 <main@@Base+0x3128>
   164ac:	movw	r2, #11843	; 0x2e43
   164b0:	movt	r2, #27749	; 0x6c65
   164b4:	eor	r0, r0, r2
   164b8:	orrs	r0, r0, r1
   164bc:	bne	166f8 <main@@Base+0x31fc>
   164c0:	add	r4, r7, #16
   164c4:	mov	r0, r4
   164c8:	mov	r1, r5
   164cc:	bl	15d14 <main@@Base+0x2818>
   164d0:	movw	r0, #28530	; 0x6f72
   164d4:	movt	r0, #28524	; 0x6f6c
   164d8:	teq	r1, r0
   164dc:	bne	166f8 <main@@Base+0x31fc>
   164e0:	mov	r0, r4
   164e4:	mov	r1, r5
   164e8:	mov	r2, #4
   164ec:	bl	19080 <main@@Base+0x5b84>
   164f0:	cmp	r0, r4
   164f4:	beq	166f8 <main@@Base+0x31fc>
   164f8:	mov	r1, r0
   164fc:	mov	r0, r8
   16500:	mov	r2, r5
   16504:	mov	r3, sl
   16508:	sub	sp, fp, #28
   1650c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16510:	b	15dcc <main@@Base+0x28d0>
   16514:	add	ip, r3, #6
   16518:	subs	r6, r0, ip
   1651c:	sbcs	r1, r1, r2
   16520:	bcs	165a4 <main@@Base+0x30a8>
   16524:	add	r1, r3, #1
   16528:	eor	r0, r0, r1
   1652c:	orrs	r0, r0, r4
   16530:	bne	166f8 <main@@Base+0x31fc>
   16534:	add	r4, r7, #16
   16538:	mov	r0, r4
   1653c:	mov	r1, r5
   16540:	bl	15d14 <main@@Base+0x2818>
   16544:	movw	r2, #24421	; 0x5f65
   16548:	movt	r2, #25959	; 0x6567
   1654c:	add	r2, r2, #851968	; 0xd0000
   16550:	add	r2, r2, #150994944	; 0x9000000
   16554:	eor	r1, r1, r2
   16558:	bic	r0, r0, #255	; 0xff
   1655c:	movw	r2, #27904	; 0x6d00
   16560:	movt	r2, #28277	; 0x6e75
   16564:	eor	r0, r0, r2
   16568:	orrs	r0, r0, r1
   1656c:	bne	166f8 <main@@Base+0x31fc>
   16570:	mov	r0, r4
   16574:	mov	r1, r5
   16578:	mov	r2, #7
   1657c:	bl	19080 <main@@Base+0x5b84>
   16580:	cmp	r0, r4
   16584:	beq	166f8 <main@@Base+0x31fc>
   16588:	mov	r1, r0
   1658c:	mov	r0, r8
   16590:	mov	r2, r5
   16594:	mov	r3, sl
   16598:	sub	sp, fp, #28
   1659c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165a0:	b	192e0 <main@@Base+0x5de4>
   165a4:	eor	r0, r0, ip
   165a8:	orrs	r0, r0, r4
   165ac:	bne	166f8 <main@@Base+0x31fc>
   165b0:	add	r6, r7, #16
   165b4:	mov	r0, r6
   165b8:	mov	r1, r5
   165bc:	bl	15d14 <main@@Base+0x2818>
   165c0:	mov	r4, r0
   165c4:	mov	r9, r1
   165c8:	lsr	r0, r0, #8
   165cc:	orr	r0, r0, r1, lsl #24
   165d0:	movw	r1, #30061	; 0x756d
   165d4:	movt	r1, #25966	; 0x656e
   165d8:	eor	r0, r0, r1
   165dc:	movw	r1, #26463	; 0x675f
   165e0:	movt	r1, #101	; 0x65
   165e4:	eor	r1, r1, r9, lsr #8
   165e8:	orrs	r0, r0, r1
   165ec:	bne	16680 <main@@Base+0x3184>
   165f0:	mov	r0, r6
   165f4:	mov	r1, r5
   165f8:	mov	r2, #7
   165fc:	bl	19080 <main@@Base+0x5b84>
   16600:	mov	r1, r0
   16604:	cmp	r0, r6
   16608:	beq	1667c <main@@Base+0x3180>
   1660c:	mov	r0, r8
   16610:	mov	r2, r5
   16614:	mov	r3, sl
   16618:	sub	sp, fp, #28
   1661c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16620:	b	19454 <main@@Base+0x5f58>
   16624:	add	r4, r7, #16
   16628:	mov	r0, r4
   1662c:	mov	r1, r5
   16630:	bl	15d14 <main@@Base+0x2818>
   16634:	bfc	r1, #0, #16
   16638:	movw	r0, #0
   1663c:	movt	r0, #28527	; 0x6f6f
   16640:	teq	r1, r0
   16644:	bne	166f8 <main@@Base+0x31fc>
   16648:	mov	r0, r4
   1664c:	mov	r1, r5
   16650:	mov	r2, #2
   16654:	bl	19080 <main@@Base+0x5b84>
   16658:	cmp	r0, r4
   1665c:	beq	166f8 <main@@Base+0x31fc>
   16660:	mov	r1, r0
   16664:	mov	r0, r8
   16668:	mov	r2, r5
   1666c:	mov	r3, sl
   16670:	sub	sp, fp, #28
   16674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16678:	b	190a0 <main@@Base+0x5ba4>
   1667c:	mov	r6, r1
   16680:	movw	r0, #31077	; 0x7965
   16684:	movt	r0, #28788	; 0x7074
   16688:	eor	r0, r4, r0
   1668c:	movw	r1, #25965	; 0x656d
   16690:	movt	r1, #28532	; 0x6f74
   16694:	eor	r1, r9, r1
   16698:	orrs	r0, r0, r1
   1669c:	bne	166f8 <main@@Base+0x31fc>
   166a0:	add	r4, r6, #8
   166a4:	mov	r0, r4
   166a8:	mov	r1, r5
   166ac:	bl	15d14 <main@@Base+0x2818>
   166b0:	bic	r0, r1, #255	; 0xff
   166b4:	movw	r1, #27904	; 0x6d00
   166b8:	movt	r1, #28277	; 0x6e75
   166bc:	teq	r0, r1
   166c0:	bne	166f8 <main@@Base+0x31fc>
   166c4:	mov	r0, r4
   166c8:	mov	r1, r5
   166cc:	mov	r2, #3
   166d0:	bl	19080 <main@@Base+0x5b84>
   166d4:	cmp	r0, r4
   166d8:	beq	166f8 <main@@Base+0x31fc>
   166dc:	mov	r1, r0
   166e0:	mov	r0, r8
   166e4:	mov	r2, r5
   166e8:	mov	r3, sl
   166ec:	sub	sp, fp, #28
   166f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166f4:	b	19564 <main@@Base+0x6068>
   166f8:	mov	r0, r7
   166fc:	sub	sp, fp, #28
   16700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16704:	push	{r4, r5, r6, r7, fp, lr}
   16708:	add	fp, sp, #16
   1670c:	sub	sp, sp, #24
   16710:	mov	r7, r1
   16714:	mov	r6, r0
   16718:	mov	r0, #0
   1671c:	str	r0, [sp, #20]
   16720:	str	r0, [sp, #16]
   16724:	str	r0, [sp, #12]
   16728:	strb	r0, [r3]
   1672c:	cmp	r1, r2
   16730:	beq	16788 <main@@Base+0x328c>
   16734:	mov	r5, r3
   16738:	mov	r4, r2
   1673c:	add	r0, sp, #16
   16740:	str	r0, [sp]
   16744:	add	r3, sp, #12
   16748:	mov	r0, r6
   1674c:	mov	r1, r7
   16750:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   16754:	mov	r1, r0
   16758:	cmp	r0, r7
   1675c:	beq	16784 <main@@Base+0x3288>
   16760:	ldr	r3, [sp, #12]
   16764:	ldr	r0, [sp, #16]
   16768:	ldr	r2, [sp, #20]
   1676c:	stm	sp, {r0, r2, r5}
   16770:	mov	r0, r6
   16774:	mov	r2, r4
   16778:	bl	19968 <main@@Base+0x646c>
   1677c:	mov	r7, r0
   16780:	b	16788 <main@@Base+0x328c>
   16784:	mov	r7, r1
   16788:	mov	r0, r7
   1678c:	sub	sp, fp, #16
   16790:	pop	{r4, r5, r6, r7, fp, pc}
   16794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16798:	add	fp, sp, #28
   1679c:	sub	sp, sp, #44	; 0x2c
   167a0:	mov	r4, r3
   167a4:	mov	r7, r2
   167a8:	mov	r5, r0
   167ac:	mov	sl, #0
   167b0:	strb	sl, [fp, #-29]	; 0xffffffe3
   167b4:	ldr	r0, [fp, #8]
   167b8:	strb	sl, [r0]
   167bc:	mov	r0, r5
   167c0:	bl	199c4 <main@@Base+0x64c8>
   167c4:	mov	r6, r0
   167c8:	cmp	r0, r7
   167cc:	beq	168b0 <main@@Base+0x33b4>
   167d0:	add	r0, r4, #4
   167d4:	add	r9, sp, #32
   167d8:	add	r8, sp, #28
   167dc:	str	r0, [sp, #16]
   167e0:	str	sl, [sp, #20]
   167e4:	mov	sl, r0
   167e8:	ldr	r4, [sl, #-4]
   167ec:	str	r9, [sp]
   167f0:	add	r0, sp, #24
   167f4:	str	r0, [sp, #4]
   167f8:	mov	r0, r5
   167fc:	mov	r1, r6
   16800:	mov	r2, r7
   16804:	mov	r3, r8
   16808:	blx	r4
   1680c:	mov	r4, r0
   16810:	cmp	r0, r7
   16814:	beq	168d0 <main@@Base+0x33d4>
   16818:	cmp	r4, r6
   1681c:	bne	16834 <main@@Base+0x3338>
   16820:	ldr	r0, [sl], #4
   16824:	cmp	r0, #0
   16828:	mov	r6, r4
   1682c:	bne	167e8 <main@@Base+0x32ec>
   16830:	b	168b8 <main@@Base+0x33bc>
   16834:	ldr	sl, [sp, #20]
   16838:	cmp	sl, #0
   1683c:	beq	1684c <main@@Base+0x3350>
   16840:	ldr	r0, [r5, #12]
   16844:	cmp	r0, #0
   16848:	bne	168e4 <main@@Base+0x33e8>
   1684c:	ldr	r3, [sp, #28]
   16850:	ldr	r0, [sp, #32]
   16854:	ldr	r1, [sp, #36]	; 0x24
   16858:	stm	sp, {r0, r1}
   1685c:	sub	r0, fp, #29
   16860:	str	r0, [sp, #8]
   16864:	mov	r0, r5
   16868:	mov	r1, r4
   1686c:	mov	r2, r7
   16870:	bl	19968 <main@@Base+0x646c>
   16874:	cmp	r0, r7
   16878:	beq	168dc <main@@Base+0x33e0>
   1687c:	add	sl, sl, #1
   16880:	ldr	r0, [fp, #8]
   16884:	mov	r2, r0
   16888:	ldrb	r0, [r0]
   1688c:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   16890:	add	r0, r0, r1
   16894:	strb	r0, [r2]
   16898:	ldr	r0, [sp, #24]
   1689c:	cmp	r0, #0
   168a0:	mov	r6, r4
   168a4:	ldr	r0, [sp, #16]
   168a8:	bne	167e0 <main@@Base+0x32e4>
   168ac:	b	168d0 <main@@Base+0x33d4>
   168b0:	mov	r4, r6
   168b4:	b	168d0 <main@@Base+0x33d4>
   168b8:	mov	r0, r5
   168bc:	mov	r1, r4
   168c0:	mov	r2, r7
   168c4:	mov	r3, #23
   168c8:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   168cc:	mov	r4, r0
   168d0:	mov	r0, r4
   168d4:	sub	sp, fp, #28
   168d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168dc:	mov	r4, r7
   168e0:	b	168d0 <main@@Base+0x33d4>
   168e4:	mov	r0, r5
   168e8:	mov	r1, r4
   168ec:	mov	r2, r7
   168f0:	mov	r3, #14
   168f4:	b	168c8 <main@@Base+0x33cc>
   168f8:	push	{r4, r5, fp, lr}
   168fc:	add	fp, sp, #8
   16900:	mov	r4, r1
   16904:	mov	r5, r0
   16908:	mov	r0, r1
   1690c:	bl	199fc <main@@Base+0x6500>
   16910:	strb	r4, [r5]
   16914:	pop	{r4, r5, fp, pc}
   16918:	push	{r4, r5, r6, sl, fp, lr}
   1691c:	add	fp, sp, #16
   16920:	mov	r5, r3
   16924:	mov	r4, r2
   16928:	mov	r6, r0
   1692c:	cmp	r1, r2
   16930:	beq	16980 <main@@Base+0x3484>
   16934:	ldrb	r0, [r1]
   16938:	cmp	r0, #91	; 0x5b
   1693c:	bne	16980 <main@@Base+0x3484>
   16940:	add	r1, r1, #1
   16944:	mov	r0, r6
   16948:	mov	r2, r4
   1694c:	bl	18fbc <main@@Base+0x5ac0>
   16950:	cmp	r0, r4
   16954:	beq	1699c <main@@Base+0x34a0>
   16958:	ldrb	r1, [r0]
   1695c:	cmp	r1, #93	; 0x5d
   16960:	bne	1699c <main@@Base+0x34a0>
   16964:	mov	r1, #0
   16968:	str	r1, [r5]
   1696c:	add	r1, r0, #1
   16970:	mov	r0, r6
   16974:	mov	r2, r4
   16978:	pop	{r4, r5, r6, sl, fp, lr}
   1697c:	b	18fbc <main@@Base+0x5ac0>
   16980:	mov	r0, #0
   16984:	str	r0, [r5]
   16988:	mov	r0, r6
   1698c:	mov	r2, r4
   16990:	mov	r3, #22
   16994:	pop	{r4, r5, r6, sl, fp, lr}
   16998:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1699c:	mov	r1, #1
   169a0:	str	r1, [r5]
   169a4:	pop	{r4, r5, r6, sl, fp, pc}
   169a8:	push	{r4, r5, r6, r7, fp, lr}
   169ac:	add	fp, sp, #16
   169b0:	sub	sp, sp, #24
   169b4:	mov	r7, r1
   169b8:	mov	r6, r0
   169bc:	mov	r0, #0
   169c0:	str	r0, [sp, #20]
   169c4:	str	r0, [sp, #16]
   169c8:	str	r0, [sp, #12]
   169cc:	strb	r0, [r3]
   169d0:	cmp	r1, r2
   169d4:	beq	16a2c <main@@Base+0x3530>
   169d8:	mov	r5, r3
   169dc:	mov	r4, r2
   169e0:	add	r0, sp, #16
   169e4:	str	r0, [sp]
   169e8:	add	r3, sp, #12
   169ec:	mov	r0, r6
   169f0:	mov	r1, r7
   169f4:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   169f8:	mov	r1, r0
   169fc:	cmp	r0, r7
   16a00:	beq	16a28 <main@@Base+0x352c>
   16a04:	ldr	r3, [sp, #12]
   16a08:	ldr	r0, [sp, #16]
   16a0c:	ldr	r2, [sp, #20]
   16a10:	stm	sp, {r0, r2, r5}
   16a14:	mov	r0, r6
   16a18:	mov	r2, r4
   16a1c:	bl	19a00 <main@@Base+0x6504>
   16a20:	mov	r7, r0
   16a24:	b	16a2c <main@@Base+0x3530>
   16a28:	mov	r7, r1
   16a2c:	mov	r0, r7
   16a30:	sub	sp, fp, #16
   16a34:	pop	{r4, r5, r6, r7, fp, pc}
   16a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a3c:	add	fp, sp, #28
   16a40:	sub	sp, sp, #44	; 0x2c
   16a44:	mov	r4, r3
   16a48:	mov	r7, r2
   16a4c:	mov	r5, r0
   16a50:	mov	sl, #0
   16a54:	strb	sl, [fp, #-29]	; 0xffffffe3
   16a58:	ldr	r0, [fp, #8]
   16a5c:	strb	sl, [r0]
   16a60:	mov	r0, r5
   16a64:	bl	199c4 <main@@Base+0x64c8>
   16a68:	mov	r6, r0
   16a6c:	cmp	r0, r7
   16a70:	beq	16b54 <main@@Base+0x3658>
   16a74:	add	r0, r4, #4
   16a78:	add	r9, sp, #32
   16a7c:	add	r8, sp, #28
   16a80:	str	r0, [sp, #16]
   16a84:	str	sl, [sp, #20]
   16a88:	mov	sl, r0
   16a8c:	ldr	r4, [sl, #-4]
   16a90:	str	r9, [sp]
   16a94:	add	r0, sp, #24
   16a98:	str	r0, [sp, #4]
   16a9c:	mov	r0, r5
   16aa0:	mov	r1, r6
   16aa4:	mov	r2, r7
   16aa8:	mov	r3, r8
   16aac:	blx	r4
   16ab0:	mov	r4, r0
   16ab4:	cmp	r0, r7
   16ab8:	beq	16b74 <main@@Base+0x3678>
   16abc:	cmp	r4, r6
   16ac0:	bne	16ad8 <main@@Base+0x35dc>
   16ac4:	ldr	r0, [sl], #4
   16ac8:	cmp	r0, #0
   16acc:	mov	r6, r4
   16ad0:	bne	16a8c <main@@Base+0x3590>
   16ad4:	b	16b5c <main@@Base+0x3660>
   16ad8:	ldr	sl, [sp, #20]
   16adc:	cmp	sl, #0
   16ae0:	beq	16af0 <main@@Base+0x35f4>
   16ae4:	ldr	r0, [r5, #12]
   16ae8:	cmp	r0, #0
   16aec:	bne	16b88 <main@@Base+0x368c>
   16af0:	ldr	r3, [sp, #28]
   16af4:	ldr	r0, [sp, #32]
   16af8:	ldr	r1, [sp, #36]	; 0x24
   16afc:	stm	sp, {r0, r1}
   16b00:	sub	r0, fp, #29
   16b04:	str	r0, [sp, #8]
   16b08:	mov	r0, r5
   16b0c:	mov	r1, r4
   16b10:	mov	r2, r7
   16b14:	bl	19a00 <main@@Base+0x6504>
   16b18:	cmp	r0, r7
   16b1c:	beq	16b80 <main@@Base+0x3684>
   16b20:	add	sl, sl, #1
   16b24:	ldr	r0, [fp, #8]
   16b28:	mov	r2, r0
   16b2c:	ldrb	r0, [r0]
   16b30:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   16b34:	add	r0, r0, r1
   16b38:	strb	r0, [r2]
   16b3c:	ldr	r0, [sp, #24]
   16b40:	cmp	r0, #0
   16b44:	mov	r6, r4
   16b48:	ldr	r0, [sp, #16]
   16b4c:	bne	16a84 <main@@Base+0x3588>
   16b50:	b	16b74 <main@@Base+0x3678>
   16b54:	mov	r4, r6
   16b58:	b	16b74 <main@@Base+0x3678>
   16b5c:	mov	r0, r5
   16b60:	mov	r1, r4
   16b64:	mov	r2, r7
   16b68:	mov	r3, #23
   16b6c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   16b70:	mov	r4, r0
   16b74:	mov	r0, r4
   16b78:	sub	sp, fp, #28
   16b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b80:	mov	r4, r7
   16b84:	b	16b74 <main@@Base+0x3678>
   16b88:	mov	r0, r5
   16b8c:	mov	r1, r4
   16b90:	mov	r2, r7
   16b94:	mov	r3, #14
   16b98:	b	16b6c <main@@Base+0x3670>
   16b9c:	push	{r4, r5, fp, lr}
   16ba0:	add	fp, sp, #8
   16ba4:	mov	r4, r1
   16ba8:	mov	r5, r0
   16bac:	mov	r0, r1
   16bb0:	bl	19a4c <main@@Base+0x6550>
   16bb4:	strb	r4, [r5]
   16bb8:	pop	{r4, r5, fp, pc}
   16bbc:	push	{r4, r5, r6, sl, fp, lr}
   16bc0:	add	fp, sp, #16
   16bc4:	mov	r6, r3
   16bc8:	mov	r4, r2
   16bcc:	mov	r5, r0
   16bd0:	bl	18fbc <main@@Base+0x5ac0>
   16bd4:	mov	r1, r0
   16bd8:	cmp	r0, r4
   16bdc:	beq	16c20 <main@@Base+0x3724>
   16be0:	ldrb	r0, [r1]
   16be4:	cmp	r0, #44	; 0x2c
   16be8:	bne	16c28 <main@@Base+0x372c>
   16bec:	add	r1, r1, #1
   16bf0:	mov	r0, r5
   16bf4:	mov	r2, r4
   16bf8:	bl	18fbc <main@@Base+0x5ac0>
   16bfc:	mov	r1, r0
   16c00:	cmp	r0, r4
   16c04:	beq	16c50 <main@@Base+0x3754>
   16c08:	ldrb	r0, [r1]
   16c0c:	cmp	r0, #93	; 0x5d
   16c10:	bne	16c6c <main@@Base+0x3770>
   16c14:	mov	r0, #0
   16c18:	str	r0, [r6]
   16c1c:	b	16c3c <main@@Base+0x3740>
   16c20:	mov	r0, #0
   16c24:	b	16c70 <main@@Base+0x3774>
   16c28:	mov	r0, #0
   16c2c:	str	r0, [r6]
   16c30:	ldrb	r0, [r1]
   16c34:	cmp	r0, #93	; 0x5d
   16c38:	bne	16c58 <main@@Base+0x375c>
   16c3c:	add	r1, r1, #1
   16c40:	mov	r0, r5
   16c44:	mov	r2, r4
   16c48:	pop	{r4, r5, r6, sl, fp, lr}
   16c4c:	b	18fbc <main@@Base+0x5ac0>
   16c50:	mov	r0, #0
   16c54:	str	r0, [r6]
   16c58:	mov	r0, r5
   16c5c:	mov	r2, r4
   16c60:	mov	r3, #9
   16c64:	pop	{r4, r5, r6, sl, fp, lr}
   16c68:	b	208a0 <flatcc_json_parser_set_error@@Base>
   16c6c:	mov	r0, #1
   16c70:	str	r0, [r6]
   16c74:	mov	r0, r1
   16c78:	pop	{r4, r5, r6, sl, fp, pc}
   16c7c:	push	{r4, r5, r6, r7, fp, lr}
   16c80:	add	fp, sp, #16
   16c84:	sub	sp, sp, #24
   16c88:	mov	r7, r1
   16c8c:	mov	r6, r0
   16c90:	mov	r0, #0
   16c94:	str	r0, [sp, #20]
   16c98:	str	r0, [sp, #16]
   16c9c:	str	r0, [sp, #12]
   16ca0:	strh	r0, [r3]
   16ca4:	cmp	r1, r2
   16ca8:	beq	16d00 <main@@Base+0x3804>
   16cac:	mov	r5, r3
   16cb0:	mov	r4, r2
   16cb4:	add	r0, sp, #16
   16cb8:	str	r0, [sp]
   16cbc:	add	r3, sp, #12
   16cc0:	mov	r0, r6
   16cc4:	mov	r1, r7
   16cc8:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   16ccc:	mov	r1, r0
   16cd0:	cmp	r0, r7
   16cd4:	beq	16cfc <main@@Base+0x3800>
   16cd8:	ldr	r3, [sp, #12]
   16cdc:	ldr	r0, [sp, #16]
   16ce0:	ldr	r2, [sp, #20]
   16ce4:	stm	sp, {r0, r2, r5}
   16ce8:	mov	r0, r6
   16cec:	mov	r2, r4
   16cf0:	bl	19a50 <main@@Base+0x6554>
   16cf4:	mov	r7, r0
   16cf8:	b	16d00 <main@@Base+0x3804>
   16cfc:	mov	r7, r1
   16d00:	mov	r0, r7
   16d04:	sub	sp, fp, #16
   16d08:	pop	{r4, r5, r6, r7, fp, pc}
   16d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d10:	add	fp, sp, #28
   16d14:	sub	sp, sp, #44	; 0x2c
   16d18:	mov	r4, r3
   16d1c:	mov	r7, r2
   16d20:	mov	r5, r0
   16d24:	mov	sl, #0
   16d28:	strh	sl, [fp, #-30]	; 0xffffffe2
   16d2c:	ldr	r0, [fp, #8]
   16d30:	strh	sl, [r0]
   16d34:	mov	r0, r5
   16d38:	bl	199c4 <main@@Base+0x64c8>
   16d3c:	mov	r6, r0
   16d40:	cmp	r0, r7
   16d44:	beq	16e28 <main@@Base+0x392c>
   16d48:	add	r0, r4, #4
   16d4c:	add	r9, sp, #32
   16d50:	add	r8, sp, #28
   16d54:	str	r0, [sp, #16]
   16d58:	str	sl, [sp, #20]
   16d5c:	mov	sl, r0
   16d60:	ldr	r4, [sl, #-4]
   16d64:	str	r9, [sp]
   16d68:	add	r0, sp, #24
   16d6c:	str	r0, [sp, #4]
   16d70:	mov	r0, r5
   16d74:	mov	r1, r6
   16d78:	mov	r2, r7
   16d7c:	mov	r3, r8
   16d80:	blx	r4
   16d84:	mov	r4, r0
   16d88:	cmp	r0, r7
   16d8c:	beq	16e48 <main@@Base+0x394c>
   16d90:	cmp	r4, r6
   16d94:	bne	16dac <main@@Base+0x38b0>
   16d98:	ldr	r0, [sl], #4
   16d9c:	cmp	r0, #0
   16da0:	mov	r6, r4
   16da4:	bne	16d60 <main@@Base+0x3864>
   16da8:	b	16e30 <main@@Base+0x3934>
   16dac:	ldr	sl, [sp, #20]
   16db0:	cmp	sl, #0
   16db4:	beq	16dc4 <main@@Base+0x38c8>
   16db8:	ldr	r0, [r5, #12]
   16dbc:	cmp	r0, #0
   16dc0:	bne	16e5c <main@@Base+0x3960>
   16dc4:	ldr	r3, [sp, #28]
   16dc8:	ldr	r0, [sp, #32]
   16dcc:	ldr	r1, [sp, #36]	; 0x24
   16dd0:	stm	sp, {r0, r1}
   16dd4:	sub	r0, fp, #30
   16dd8:	str	r0, [sp, #8]
   16ddc:	mov	r0, r5
   16de0:	mov	r1, r4
   16de4:	mov	r2, r7
   16de8:	bl	19a50 <main@@Base+0x6554>
   16dec:	cmp	r0, r7
   16df0:	beq	16e54 <main@@Base+0x3958>
   16df4:	add	sl, sl, #1
   16df8:	ldr	r0, [fp, #8]
   16dfc:	mov	r2, r0
   16e00:	ldrh	r0, [r0]
   16e04:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   16e08:	add	r0, r0, r1
   16e0c:	strh	r0, [r2]
   16e10:	ldr	r0, [sp, #24]
   16e14:	cmp	r0, #0
   16e18:	mov	r6, r4
   16e1c:	ldr	r0, [sp, #16]
   16e20:	bne	16d58 <main@@Base+0x385c>
   16e24:	b	16e48 <main@@Base+0x394c>
   16e28:	mov	r4, r6
   16e2c:	b	16e48 <main@@Base+0x394c>
   16e30:	mov	r0, r5
   16e34:	mov	r1, r4
   16e38:	mov	r2, r7
   16e3c:	mov	r3, #23
   16e40:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   16e44:	mov	r4, r0
   16e48:	mov	r0, r4
   16e4c:	sub	sp, fp, #28
   16e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e54:	mov	r4, r7
   16e58:	b	16e48 <main@@Base+0x394c>
   16e5c:	mov	r0, r5
   16e60:	mov	r1, r4
   16e64:	mov	r2, r7
   16e68:	mov	r3, #14
   16e6c:	b	16e40 <main@@Base+0x3944>
   16e70:	push	{r4, r5, fp, lr}
   16e74:	add	fp, sp, #8
   16e78:	mov	r4, r1
   16e7c:	mov	r5, r0
   16e80:	mov	r0, r1
   16e84:	bl	19ab0 <main@@Base+0x65b4>
   16e88:	strh	r4, [r5]
   16e8c:	pop	{r4, r5, fp, pc}
   16e90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e94:	add	fp, sp, #24
   16e98:	sub	sp, sp, #8
   16e9c:	mov	r8, r3
   16ea0:	mov	r4, r2
   16ea4:	mov	r7, r1
   16ea8:	mov	r5, r0
   16eac:	mov	r0, #0
   16eb0:	str	r0, [r3]
   16eb4:	ldr	r0, [r5]
   16eb8:	mov	r1, #0
   16ebc:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   16ec0:	cmp	r0, #0
   16ec4:	bne	16f54 <main@@Base+0x3a58>
   16ec8:	add	r3, sp, #4
   16ecc:	mov	r0, r5
   16ed0:	mov	r1, r7
   16ed4:	mov	r2, r4
   16ed8:	bl	15c40 <main@@Base+0x2744>
   16edc:	mov	r7, r0
   16ee0:	ldr	r0, [sp, #4]
   16ee4:	cmp	r0, #0
   16ee8:	beq	16f34 <main@@Base+0x3a38>
   16eec:	add	r6, sp, #4
   16ef0:	mov	r0, r5
   16ef4:	mov	r1, r7
   16ef8:	mov	r2, r4
   16efc:	bl	15cd0 <main@@Base+0x27d4>
   16f00:	mov	r1, r0
   16f04:	mov	r0, r5
   16f08:	mov	r2, r4
   16f0c:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   16f10:	mov	r1, r0
   16f14:	mov	r0, r5
   16f18:	mov	r2, r4
   16f1c:	mov	r3, r6
   16f20:	bl	18efc <main@@Base+0x5a00>
   16f24:	mov	r7, r0
   16f28:	ldr	r0, [sp, #4]
   16f2c:	cmp	r0, #0
   16f30:	bne	16ef0 <main@@Base+0x39f4>
   16f34:	ldr	r0, [r5, #24]
   16f38:	cmp	r0, #0
   16f3c:	bne	16f54 <main@@Base+0x3a58>
   16f40:	ldr	r0, [r5]
   16f44:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   16f48:	str	r0, [r8]
   16f4c:	cmp	r0, #0
   16f50:	bne	16f6c <main@@Base+0x3a70>
   16f54:	mov	r0, r5
   16f58:	mov	r1, r7
   16f5c:	mov	r2, r4
   16f60:	mov	r3, #33	; 0x21
   16f64:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   16f68:	mov	r7, r0
   16f6c:	mov	r0, r7
   16f70:	sub	sp, fp, #24
   16f74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f7c:	add	fp, sp, #28
   16f80:	sub	sp, sp, #44	; 0x2c
   16f84:	mov	r6, r3
   16f88:	mov	r4, r2
   16f8c:	mov	r5, r0
   16f90:	sub	r3, fp, #32
   16f94:	bl	15c40 <main@@Base+0x2744>
   16f98:	mov	r1, r0
   16f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16fa0:	cmp	r0, #0
   16fa4:	beq	1740c <main@@Base+0x3f10>
   16fa8:	add	r0, r6, #24
   16fac:	str	r0, [sp, #28]
   16fb0:	add	r0, r6, #16
   16fb4:	str	r0, [sp, #24]
   16fb8:	add	r0, r6, #26
   16fbc:	str	r0, [sp, #20]
   16fc0:	add	r0, r6, #8
   16fc4:	str	r0, [sp, #12]
   16fc8:	str	r6, [sp, #16]
   16fcc:	add	r0, r6, #4
   16fd0:	str	r0, [sp, #8]
   16fd4:	movw	r9, #29556	; 0x7374
   16fd8:	movt	r9, #29797	; 0x7465
   16fdc:	mvn	sl, #-855638016	; 0xcd000000
   16fe0:	sub	r6, fp, #32
   16fe4:	b	17024 <main@@Base+0x3b28>
   16fe8:	mov	r0, r5
   16fec:	mov	r1, r6
   16ff0:	mov	r2, r4
   16ff4:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   16ff8:	mov	r8, r0
   16ffc:	sub	r6, fp, #32
   17000:	mov	r0, r5
   17004:	mov	r1, r8
   17008:	mov	r2, r4
   1700c:	mov	r3, r6
   17010:	bl	18efc <main@@Base+0x5a00>
   17014:	mov	r1, r0
   17018:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1701c:	cmp	r0, #0
   17020:	beq	1740c <main@@Base+0x3f10>
   17024:	mov	r0, r5
   17028:	mov	r2, r4
   1702c:	bl	15cd0 <main@@Base+0x27d4>
   17030:	mov	r7, r0
   17034:	mov	r1, r4
   17038:	bl	15d14 <main@@Base+0x2818>
   1703c:	subs	r2, sl, r0
   17040:	sbcs	r2, r9, r1
   17044:	bcc	170fc <main@@Base+0x3c00>
   17048:	eor	r2, r1, r9
   1704c:	and	r0, r0, #-16777216	; 0xff000000
   17050:	eor	r3, r0, #822083584	; 0x31000000
   17054:	orrs	r2, r3, r2
   17058:	beq	171f4 <main@@Base+0x3cf8>
   1705c:	eor	r1, r1, r9
   17060:	eor	r0, r0, #838860800	; 0x32000000
   17064:	orrs	r0, r0, r1
   17068:	bne	1732c <main@@Base+0x3e30>
   1706c:	mov	r0, r5
   17070:	mov	r1, r7
   17074:	mov	r2, r4
   17078:	mov	r3, #5
   1707c:	bl	15d18 <main@@Base+0x281c>
   17080:	mov	r6, r0
   17084:	cmp	r7, r0
   17088:	beq	16fe8 <main@@Base+0x3aec>
   1708c:	mov	r0, #0
   17090:	strb	r0, [sp, #32]
   17094:	mov	r0, r5
   17098:	mov	r1, r6
   1709c:	mov	r2, r4
   170a0:	add	r7, sp, #32
   170a4:	mov	r3, r7
   170a8:	bl	16704 <main@@Base+0x3208>
   170ac:	mov	r8, r0
   170b0:	cmp	r6, r0
   170b4:	bne	170e8 <main@@Base+0x3bec>
   170b8:	str	r7, [sp]
   170bc:	mov	r0, r5
   170c0:	mov	r1, r8
   170c4:	mov	r2, r4
   170c8:	movw	r3, #29076	; 0x7194
   170cc:	movt	r3, #3
   170d0:	bl	16794 <main@@Base+0x3298>
   170d4:	mov	r1, r0
   170d8:	cmp	r0, r8
   170dc:	cmpne	r1, r4
   170e0:	beq	173f8 <main@@Base+0x3efc>
   170e4:	mov	r8, r1
   170e8:	sub	r6, fp, #32
   170ec:	ldrsb	r1, [sp, #32]
   170f0:	ldr	r0, [sp, #28]
   170f4:	bl	168f8 <main@@Base+0x33fc>
   170f8:	b	17000 <main@@Base+0x3b04>
   170fc:	cmn	r1, #-2013265919	; 0x88000001
   17100:	bhi	1714c <main@@Base+0x3c50>
   17104:	eor	r1, r1, r9
   17108:	and	r0, r0, #-16777216	; 0xff000000
   1710c:	eor	r0, r0, #855638016	; 0x33000000
   17110:	orrs	r0, r0, r1
   17114:	bne	1732c <main@@Base+0x3e30>
   17118:	mov	r0, r5
   1711c:	mov	r1, r7
   17120:	mov	r2, r4
   17124:	mov	r3, #5
   17128:	bl	15d18 <main@@Base+0x281c>
   1712c:	mov	r1, r0
   17130:	cmp	r7, r0
   17134:	beq	17360 <main@@Base+0x3e64>
   17138:	mov	r0, r5
   1713c:	mov	r2, r4
   17140:	ldr	r3, [sp, #20]
   17144:	bl	17418 <main@@Base+0x3f1c>
   17148:	b	1733c <main@@Base+0x3e40>
   1714c:	and	r0, r1, #-16777216	; 0xff000000
   17150:	lsr	r1, r1, #24
   17154:	cmp	r1, #120	; 0x78
   17158:	bhi	1728c <main@@Base+0x3d90>
   1715c:	teq	r0, #2013265920	; 0x78000000
   17160:	bne	1732c <main@@Base+0x3e30>
   17164:	mov	r0, r5
   17168:	mov	r1, r7
   1716c:	mov	r2, r4
   17170:	mov	r3, #1
   17174:	bl	15d18 <main@@Base+0x281c>
   17178:	mov	r6, r0
   1717c:	cmp	r7, r0
   17180:	beq	16fe8 <main@@Base+0x3aec>
   17184:	mov	r0, #0
   17188:	str	r0, [sp, #32]
   1718c:	mov	r0, r5
   17190:	mov	r1, r6
   17194:	mov	r2, r4
   17198:	add	r7, sp, #32
   1719c:	mov	r3, r7
   171a0:	bl	215e4 <flatcc_json_parser_float@@Base>
   171a4:	mov	r8, r0
   171a8:	cmp	r6, r0
   171ac:	bne	171e0 <main@@Base+0x3ce4>
   171b0:	str	r7, [sp]
   171b4:	mov	r0, r5
   171b8:	mov	r1, r8
   171bc:	mov	r2, r4
   171c0:	movw	r3, #29104	; 0x71b0
   171c4:	movt	r3, #3
   171c8:	bl	183c0 <main@@Base+0x4ec4>
   171cc:	mov	r1, r0
   171d0:	cmp	r0, r8
   171d4:	cmpne	r1, r4
   171d8:	beq	173f8 <main@@Base+0x3efc>
   171dc:	mov	r8, r1
   171e0:	sub	r6, fp, #32
   171e4:	vldr	s0, [sp, #32]
   171e8:	ldr	r0, [sp, #16]
   171ec:	bl	18510 <main@@Base+0x5014>
   171f0:	b	17000 <main@@Base+0x3b04>
   171f4:	mov	r0, r5
   171f8:	mov	r1, r7
   171fc:	mov	r2, r4
   17200:	mov	r3, #5
   17204:	bl	15d18 <main@@Base+0x281c>
   17208:	mov	sl, r0
   1720c:	cmp	r7, r0
   17210:	beq	17344 <main@@Base+0x3e48>
   17214:	mov	r0, #0
   17218:	str	r0, [sp, #36]	; 0x24
   1721c:	str	r0, [sp, #32]
   17220:	mov	r0, r5
   17224:	mov	r1, sl
   17228:	mov	r2, r4
   1722c:	add	r6, sp, #32
   17230:	mov	r3, r6
   17234:	bl	2150c <flatcc_json_parser_double@@Base>
   17238:	mov	r8, r0
   1723c:	cmp	sl, r0
   17240:	bne	17274 <main@@Base+0x3d78>
   17244:	str	r6, [sp]
   17248:	mov	r0, r5
   1724c:	mov	r1, r8
   17250:	mov	r2, r4
   17254:	movw	r3, #29092	; 0x71a4
   17258:	movt	r3, #3
   1725c:	bl	18d98 <main@@Base+0x589c>
   17260:	mov	r1, r0
   17264:	cmp	r0, r8
   17268:	cmpne	r1, r4
   1726c:	beq	173f8 <main@@Base+0x3efc>
   17270:	mov	r8, r1
   17274:	mvn	sl, #-855638016	; 0xcd000000
   17278:	sub	r6, fp, #32
   1727c:	vldr	d0, [sp, #32]
   17280:	ldr	r0, [sp, #24]
   17284:	bl	18ee4 <main@@Base+0x59e8>
   17288:	b	17000 <main@@Base+0x3b04>
   1728c:	teq	r0, #2030043136	; 0x79000000
   17290:	beq	17368 <main@@Base+0x3e6c>
   17294:	teq	r0, #2046820352	; 0x7a000000
   17298:	bne	1732c <main@@Base+0x3e30>
   1729c:	mov	r0, r5
   172a0:	mov	r1, r7
   172a4:	mov	r2, r4
   172a8:	mov	r3, #1
   172ac:	bl	15d18 <main@@Base+0x281c>
   172b0:	mov	r6, r0
   172b4:	cmp	r7, r0
   172b8:	beq	16fe8 <main@@Base+0x3aec>
   172bc:	mov	r0, #0
   172c0:	str	r0, [sp, #32]
   172c4:	mov	r0, r5
   172c8:	mov	r1, r6
   172cc:	mov	r2, r4
   172d0:	add	r7, sp, #32
   172d4:	mov	r3, r7
   172d8:	bl	215e4 <flatcc_json_parser_float@@Base>
   172dc:	mov	r8, r0
   172e0:	cmp	r6, r0
   172e4:	bne	17318 <main@@Base+0x3e1c>
   172e8:	str	r7, [sp]
   172ec:	mov	r0, r5
   172f0:	mov	r1, r8
   172f4:	mov	r2, r4
   172f8:	movw	r3, #29116	; 0x71bc
   172fc:	movt	r3, #3
   17300:	bl	183c0 <main@@Base+0x4ec4>
   17304:	mov	r1, r0
   17308:	cmp	r0, r8
   1730c:	cmpne	r1, r4
   17310:	beq	173f8 <main@@Base+0x3efc>
   17314:	mov	r8, r1
   17318:	sub	r6, fp, #32
   1731c:	vldr	s0, [sp, #32]
   17320:	ldr	r0, [sp, #12]
   17324:	bl	18510 <main@@Base+0x5014>
   17328:	b	17000 <main@@Base+0x3b04>
   1732c:	mov	r0, r5
   17330:	mov	r1, r7
   17334:	mov	r2, r4
   17338:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1733c:	mov	r8, r0
   17340:	b	17000 <main@@Base+0x3b04>
   17344:	mov	r0, r5
   17348:	mov	r1, sl
   1734c:	mov	r2, r4
   17350:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   17354:	mov	r8, r0
   17358:	mvn	sl, #-855638016	; 0xcd000000
   1735c:	b	17000 <main@@Base+0x3b04>
   17360:	mov	r0, r5
   17364:	b	17334 <main@@Base+0x3e38>
   17368:	mov	r0, r5
   1736c:	mov	r1, r7
   17370:	mov	r2, r4
   17374:	mov	r3, #1
   17378:	bl	15d18 <main@@Base+0x281c>
   1737c:	mov	r6, r0
   17380:	cmp	r7, r0
   17384:	beq	16fe8 <main@@Base+0x3aec>
   17388:	mov	r0, #0
   1738c:	str	r0, [sp, #32]
   17390:	mov	r0, r5
   17394:	mov	r1, r6
   17398:	mov	r2, r4
   1739c:	add	r7, sp, #32
   173a0:	mov	r3, r7
   173a4:	bl	215e4 <flatcc_json_parser_float@@Base>
   173a8:	mov	r8, r0
   173ac:	cmp	r6, r0
   173b0:	bne	173e4 <main@@Base+0x3ee8>
   173b4:	str	r7, [sp]
   173b8:	mov	r0, r5
   173bc:	mov	r1, r8
   173c0:	mov	r2, r4
   173c4:	movw	r3, #29128	; 0x71c8
   173c8:	movt	r3, #3
   173cc:	bl	183c0 <main@@Base+0x4ec4>
   173d0:	mov	r1, r0
   173d4:	cmp	r0, r8
   173d8:	cmpne	r1, r4
   173dc:	beq	173f8 <main@@Base+0x3efc>
   173e0:	mov	r8, r1
   173e4:	sub	r6, fp, #32
   173e8:	vldr	s0, [sp, #32]
   173ec:	ldr	r0, [sp, #8]
   173f0:	bl	18510 <main@@Base+0x5014>
   173f4:	b	17000 <main@@Base+0x3b04>
   173f8:	mov	r0, r5
   173fc:	mov	r2, r4
   17400:	mov	r3, #33	; 0x21
   17404:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   17408:	mov	r1, r0
   1740c:	mov	r0, r1
   17410:	sub	sp, fp, #28
   17414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1741c:	add	fp, sp, #28
   17420:	sub	sp, sp, #20
   17424:	mov	r6, r3
   17428:	mov	r4, r2
   1742c:	mov	r5, r0
   17430:	add	r3, sp, #16
   17434:	bl	15c40 <main@@Base+0x2744>
   17438:	mov	r1, r0
   1743c:	ldr	r0, [sp, #16]
   17440:	cmp	r0, #0
   17444:	beq	1761c <main@@Base+0x4120>
   17448:	str	r6, [sp, #8]
   1744c:	add	r0, r6, #2
   17450:	str	r0, [sp, #4]
   17454:	add	sl, sp, #12
   17458:	add	r9, sp, #16
   1745c:	b	17498 <main@@Base+0x3f9c>
   17460:	mov	r0, r5
   17464:	mov	r1, r6
   17468:	mov	r2, r4
   1746c:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   17470:	mov	r8, r0
   17474:	mov	r0, r5
   17478:	mov	r1, r8
   1747c:	mov	r2, r4
   17480:	mov	r3, r9
   17484:	bl	18efc <main@@Base+0x5a00>
   17488:	mov	r1, r0
   1748c:	ldr	r0, [sp, #16]
   17490:	cmp	r0, #0
   17494:	beq	1761c <main@@Base+0x4120>
   17498:	mov	r0, r5
   1749c:	mov	r2, r4
   174a0:	bl	15cd0 <main@@Base+0x27d4>
   174a4:	mov	r6, r0
   174a8:	mov	r1, r4
   174ac:	bl	15d14 <main@@Base+0x2818>
   174b0:	and	r0, r1, #-16777216	; 0xff000000
   174b4:	teq	r0, #1627389952	; 0x61000000
   174b8:	beq	17558 <main@@Base+0x405c>
   174bc:	teq	r0, #1644167168	; 0x62000000
   174c0:	bne	17460 <main@@Base+0x3f64>
   174c4:	mov	r7, sl
   174c8:	mov	r0, r5
   174cc:	mov	r1, r6
   174d0:	mov	r2, r4
   174d4:	mov	r3, #1
   174d8:	bl	15d18 <main@@Base+0x281c>
   174dc:	mov	sl, r0
   174e0:	cmp	r6, r0
   174e4:	beq	175e0 <main@@Base+0x40e4>
   174e8:	mov	r0, #0
   174ec:	strb	r0, [sp, #15]
   174f0:	mov	r0, r5
   174f4:	mov	r1, sl
   174f8:	mov	r2, r4
   174fc:	add	r6, sp, #15
   17500:	mov	r3, r6
   17504:	bl	16704 <main@@Base+0x3208>
   17508:	mov	r8, r0
   1750c:	cmp	sl, r0
   17510:	bne	17544 <main@@Base+0x4048>
   17514:	str	r6, [sp]
   17518:	mov	r0, r5
   1751c:	mov	r1, r8
   17520:	mov	r2, r4
   17524:	movw	r3, #29140	; 0x71d4
   17528:	movt	r3, #3
   1752c:	bl	16794 <main@@Base+0x3298>
   17530:	mov	r1, r0
   17534:	cmp	r0, r8
   17538:	cmpne	r1, r4
   1753c:	beq	17608 <main@@Base+0x410c>
   17540:	mov	r8, r1
   17544:	mov	sl, r7
   17548:	ldrsb	r1, [sp, #15]
   1754c:	ldr	r0, [sp, #4]
   17550:	bl	168f8 <main@@Base+0x33fc>
   17554:	b	17474 <main@@Base+0x3f78>
   17558:	mov	r0, r5
   1755c:	mov	r1, r6
   17560:	mov	r2, r4
   17564:	mov	r3, #1
   17568:	bl	15d18 <main@@Base+0x281c>
   1756c:	mov	r7, r0
   17570:	cmp	r6, r0
   17574:	beq	175fc <main@@Base+0x4100>
   17578:	mov	r0, #0
   1757c:	strh	r0, [sp, #12]
   17580:	mov	r0, r5
   17584:	mov	r1, r7
   17588:	mov	r2, r4
   1758c:	mov	r3, sl
   17590:	bl	16c7c <main@@Base+0x3780>
   17594:	mov	r8, r0
   17598:	cmp	r7, r0
   1759c:	bne	175d0 <main@@Base+0x40d4>
   175a0:	str	sl, [sp]
   175a4:	mov	r0, r5
   175a8:	mov	r1, r8
   175ac:	mov	r2, r4
   175b0:	movw	r3, #29152	; 0x71e0
   175b4:	movt	r3, #3
   175b8:	bl	16d0c <main@@Base+0x3810>
   175bc:	mov	r1, r0
   175c0:	cmp	r0, r8
   175c4:	cmpne	r1, r4
   175c8:	beq	17608 <main@@Base+0x410c>
   175cc:	mov	r8, r1
   175d0:	ldrsh	r1, [sp, #12]
   175d4:	ldr	r0, [sp, #8]
   175d8:	bl	16e70 <main@@Base+0x3974>
   175dc:	b	17474 <main@@Base+0x3f78>
   175e0:	mov	r0, r5
   175e4:	mov	r1, sl
   175e8:	mov	r2, r4
   175ec:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   175f0:	mov	r8, r0
   175f4:	mov	sl, r7
   175f8:	b	17474 <main@@Base+0x3f78>
   175fc:	mov	r0, r5
   17600:	mov	r1, r7
   17604:	b	17468 <main@@Base+0x3f6c>
   17608:	mov	r0, r5
   1760c:	mov	r2, r4
   17610:	mov	r3, #33	; 0x21
   17614:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   17618:	mov	r1, r0
   1761c:	mov	r0, r1
   17620:	sub	sp, fp, #28
   17624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17628:	push	{r4, r5, r6, sl, fp, lr}
   1762c:	add	fp, sp, #16
   17630:	mov	r4, r2
   17634:	mov	r5, r0
   17638:	ldr	r6, [fp, #8]
   1763c:	mov	r0, #0
   17640:	str	r0, [r6]
   17644:	cmp	r3, #4
   17648:	bhi	176e8 <main@@Base+0x41ec>
   1764c:	add	r0, pc, #0
   17650:	ldr	pc, [r0, r3, lsl #2]
   17654:	andeq	r7, r1, r8, ror #12
   17658:	andeq	r7, r1, r8, ror r6
   1765c:	andeq	r7, r1, ip, lsl #13
   17660:	andeq	r7, r1, r0, lsr #13
   17664:			; <UNDEFINED> instruction: 0x000176b4
   17668:	mov	r0, r5
   1766c:	mov	r2, r4
   17670:	pop	{r4, r5, r6, sl, fp, lr}
   17674:	b	19ab4 <main@@Base+0x65b8>
   17678:	mov	r0, r5
   1767c:	mov	r2, r4
   17680:	mov	r3, r6
   17684:	bl	13640 <main@@Base+0x144>
   17688:	b	176c4 <main@@Base+0x41c8>
   1768c:	mov	r0, r5
   17690:	mov	r2, r4
   17694:	mov	r3, r6
   17698:	bl	19b10 <main@@Base+0x6614>
   1769c:	b	176c4 <main@@Base+0x41c8>
   176a0:	mov	r0, r5
   176a4:	mov	r2, r4
   176a8:	mov	r3, r6
   176ac:	bl	19f70 <main@@Base+0x6a74>
   176b0:	b	176c4 <main@@Base+0x41c8>
   176b4:	mov	r0, r5
   176b8:	mov	r2, r4
   176bc:	mov	r3, r6
   176c0:	bl	1a058 <main@@Base+0x6b5c>
   176c4:	mov	r1, r0
   176c8:	ldr	r0, [r5, #24]
   176cc:	cmp	r0, #0
   176d0:	bne	176e0 <main@@Base+0x41e4>
   176d4:	ldr	r0, [r6]
   176d8:	cmp	r0, #0
   176dc:	beq	17708 <main@@Base+0x420c>
   176e0:	mov	r0, r1
   176e4:	pop	{r4, r5, r6, sl, fp, pc}
   176e8:	ldrb	r0, [r5, #8]
   176ec:	tst	r0, #1
   176f0:	bne	1771c <main@@Base+0x4220>
   176f4:	mov	r0, r5
   176f8:	mov	r2, r4
   176fc:	mov	r3, #15
   17700:	pop	{r4, r5, r6, sl, fp, lr}
   17704:	b	208a0 <flatcc_json_parser_set_error@@Base>
   17708:	mov	r0, r5
   1770c:	mov	r2, r4
   17710:	mov	r3, #33	; 0x21
   17714:	pop	{r4, r5, r6, sl, fp, lr}
   17718:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1771c:	mov	r0, r5
   17720:	mov	r2, r4
   17724:	pop	{r4, r5, r6, sl, fp, lr}
   17728:	b	211f4 <flatcc_json_parser_generic_json@@Base>
   1772c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17730:	add	fp, sp, #28
   17734:	sub	sp, sp, #4
   17738:	mov	r8, r3
   1773c:	mov	r6, r2
   17740:	mov	r5, r1
   17744:	mov	r9, r0
   17748:	mov	r0, r1
   1774c:	mov	r1, r2
   17750:	bl	15d14 <main@@Base+0x2818>
   17754:	mov	r7, r0
   17758:	mov	r4, r1
   1775c:	movw	r1, #28275	; 0x6e73
   17760:	movt	r1, #19823	; 0x4d6f
   17764:	movw	r0, #29184	; 0x7200
   17768:	movt	r0, #29797	; 0x7465
   1776c:	ldr	r3, [fp, #12]
   17770:	ldr	sl, [fp, #8]
   17774:	subs	r2, r7, r0
   17778:	sbcs	r2, r4, r1
   1777c:	bcs	177c0 <main@@Base+0x42c4>
   17780:	bic	r0, r4, #255	; 0xff
   17784:	movw	r1, #29696	; 0x7400
   17788:	movt	r1, #16748	; 0x416c
   1778c:	teq	r0, r1
   17790:	bne	1780c <main@@Base+0x4310>
   17794:	str	r3, [sp]
   17798:	mov	r0, r9
   1779c:	mov	r1, r5
   177a0:	mov	r2, r6
   177a4:	mov	r3, #3
   177a8:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   177ac:	cmp	r0, r5
   177b0:	beq	1780c <main@@Base+0x4310>
   177b4:	mov	r1, #0
   177b8:	mov	r2, #4
   177bc:	b	177fc <main@@Base+0x4300>
   177c0:	eor	r1, r4, r1
   177c4:	add	r2, r0, #50	; 0x32
   177c8:	eor	r2, r7, r2
   177cc:	orrs	r2, r2, r1
   177d0:	bne	17818 <main@@Base+0x431c>
   177d4:	str	r3, [sp]
   177d8:	mov	r0, r9
   177dc:	mov	r1, r5
   177e0:	mov	r2, r6
   177e4:	mov	r3, #8
   177e8:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   177ec:	cmp	r0, r5
   177f0:	beq	1780c <main@@Base+0x4310>
   177f4:	mov	r1, #0
   177f8:	mov	r2, #3
   177fc:	str	r2, [sl]
   17800:	str	r1, [sl, #4]
   17804:	str	r1, [r8]
   17808:	mov	r5, r0
   1780c:	mov	r0, r5
   17810:	sub	sp, fp, #28
   17814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17818:	bic	r2, r7, #255	; 0xff
   1781c:	eor	r0, r2, r0
   17820:	orrs	r0, r0, r1
   17824:	mov	sl, r5
   17828:	bne	17870 <main@@Base+0x4374>
   1782c:	str	r3, [sp]
   17830:	mov	r0, r9
   17834:	mov	r1, r5
   17838:	mov	r2, r6
   1783c:	mov	r3, #7
   17840:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   17844:	mov	sl, r0
   17848:	cmp	r0, r5
   1784c:	beq	1786c <main@@Base+0x4370>
   17850:	mov	r1, #0
   17854:	mov	r0, #1
   17858:	ldr	r2, [fp, #8]
   1785c:	strd	r0, [r2]
   17860:	str	r1, [r8]
   17864:	mov	r5, sl
   17868:	b	1780c <main@@Base+0x4310>
   1786c:	ldr	r3, [fp, #12]
   17870:	movw	r0, #20037	; 0x4e45
   17874:	movt	r0, #20047	; 0x4e4f
   17878:	teq	r4, r0
   1787c:	bne	178bc <main@@Base+0x43c0>
   17880:	str	r3, [sp]
   17884:	mov	r0, r9
   17888:	mov	r1, sl
   1788c:	mov	r2, r6
   17890:	mov	r3, #4
   17894:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   17898:	cmp	r0, sl
   1789c:	beq	178b4 <main@@Base+0x43b8>
   178a0:	mov	r1, #0
   178a4:	ldr	r2, [fp, #8]
   178a8:	str	r1, [r2]
   178ac:	str	r1, [r2, #4]
   178b0:	b	17804 <main@@Base+0x4308>
   178b4:	mov	sl, r0
   178b8:	ldr	r3, [fp, #12]
   178bc:	movw	r0, #28016	; 0x6d70
   178c0:	movt	r0, #21353	; 0x5369
   178c4:	eor	r0, r7, r0
   178c8:	movw	r1, #29556	; 0x7374
   178cc:	movt	r1, #21605	; 0x5465
   178d0:	eor	r1, r4, r1
   178d4:	orrs	r0, r0, r1
   178d8:	bne	1780c <main@@Base+0x4310>
   178dc:	mov	r7, r3
   178e0:	add	r0, sl, #8
   178e4:	mov	r1, r6
   178e8:	bl	15d14 <main@@Base+0x2818>
   178ec:	movw	r2, #21601	; 0x5461
   178f0:	movt	r2, #27749	; 0x6c65
   178f4:	eor	r1, r1, r2
   178f8:	movw	r2, #25943	; 0x6557
   178fc:	movt	r2, #25196	; 0x626c
   17900:	eor	r0, r0, r2
   17904:	orrs	r0, r0, r1
   17908:	bne	1780c <main@@Base+0x4310>
   1790c:	add	r4, sl, #16
   17910:	mov	r0, r4
   17914:	mov	r1, r6
   17918:	bl	15d14 <main@@Base+0x2818>
   1791c:	lsr	r0, r0, #8
   17920:	orr	r0, r0, r1, lsl #24
   17924:	movw	r2, #30061	; 0x756d
   17928:	movt	r2, #17774	; 0x456e
   1792c:	eor	r0, r0, r2
   17930:	movw	r2, #29800	; 0x7468
   17934:	movt	r2, #105	; 0x69
   17938:	eor	r1, r2, r1, lsr #8
   1793c:	orrs	r0, r0, r1
   17940:	bne	1780c <main@@Base+0x4310>
   17944:	str	r7, [sp]
   17948:	mov	r0, r9
   1794c:	mov	r1, r4
   17950:	mov	r2, r6
   17954:	mov	r3, #7
   17958:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   1795c:	cmp	r0, r4
   17960:	ldr	r3, [fp, #8]
   17964:	beq	1780c <main@@Base+0x4310>
   17968:	mov	r1, #0
   1796c:	mov	r2, #2
   17970:	str	r2, [r3]
   17974:	str	r1, [r3, #4]
   17978:	b	17804 <main@@Base+0x4308>
   1797c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17980:	add	fp, sp, #24
   17984:	sub	sp, sp, #8
   17988:	mov	r8, r3
   1798c:	mov	r6, r2
   17990:	mov	r5, r1
   17994:	mov	r7, r0
   17998:	sub	r4, r2, r1
   1799c:	cmp	r4, #4
   179a0:	blt	179e4 <main@@Base+0x44e8>
   179a4:	movw	r1, #16755	; 0x4173
   179a8:	movt	r1, #2
   179ac:	mov	r0, r5
   179b0:	mov	r2, #4
   179b4:	bl	12b34 <bcmp@plt>
   179b8:	cmp	r0, #0
   179bc:	beq	17a10 <main@@Base+0x4514>
   179c0:	cmp	r4, #5
   179c4:	blt	179e4 <main@@Base+0x44e8>
   179c8:	movw	r1, #16760	; 0x4178
   179cc:	movt	r1, #2
   179d0:	mov	r0, r5
   179d4:	mov	r2, #5
   179d8:	bl	12b34 <bcmp@plt>
   179dc:	cmp	r0, #0
   179e0:	beq	17a24 <main@@Base+0x4528>
   179e4:	add	r3, sp, #7
   179e8:	mov	r0, r7
   179ec:	mov	r1, r5
   179f0:	mov	r2, r6
   179f4:	bl	169a8 <main@@Base+0x34ac>
   179f8:	ldrb	r1, [sp, #7]
   179fc:	cmp	r1, #0
   17a00:	movwne	r1, #1
   17a04:	strb	r1, [r8]
   17a08:	sub	sp, fp, #24
   17a0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17a10:	mov	r0, #1
   17a14:	strb	r0, [r8]
   17a18:	add	r0, r5, #4
   17a1c:	sub	sp, fp, #24
   17a20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17a24:	mov	r0, #0
   17a28:	strb	r0, [r8]
   17a2c:	add	r0, r5, #5
   17a30:	sub	sp, fp, #24
   17a34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a3c:	add	fp, sp, #28
   17a40:	sub	sp, sp, #44	; 0x2c
   17a44:	mov	r4, r3
   17a48:	mov	r7, r2
   17a4c:	mov	r5, r0
   17a50:	mov	sl, #0
   17a54:	strb	sl, [fp, #-29]	; 0xffffffe3
   17a58:	ldr	r0, [fp, #8]
   17a5c:	strb	sl, [r0]
   17a60:	mov	r0, r5
   17a64:	bl	199c4 <main@@Base+0x64c8>
   17a68:	mov	r6, r0
   17a6c:	cmp	r0, r7
   17a70:	beq	17b54 <main@@Base+0x4658>
   17a74:	add	r0, r4, #4
   17a78:	add	r9, sp, #32
   17a7c:	add	r8, sp, #28
   17a80:	str	r0, [sp, #16]
   17a84:	str	sl, [sp, #20]
   17a88:	mov	sl, r0
   17a8c:	ldr	r4, [sl, #-4]
   17a90:	str	r9, [sp]
   17a94:	add	r0, sp, #24
   17a98:	str	r0, [sp, #4]
   17a9c:	mov	r0, r5
   17aa0:	mov	r1, r6
   17aa4:	mov	r2, r7
   17aa8:	mov	r3, r8
   17aac:	blx	r4
   17ab0:	mov	r4, r0
   17ab4:	cmp	r0, r7
   17ab8:	beq	17b74 <main@@Base+0x4678>
   17abc:	cmp	r4, r6
   17ac0:	bne	17ad8 <main@@Base+0x45dc>
   17ac4:	ldr	r0, [sl], #4
   17ac8:	cmp	r0, #0
   17acc:	mov	r6, r4
   17ad0:	bne	17a8c <main@@Base+0x4590>
   17ad4:	b	17b5c <main@@Base+0x4660>
   17ad8:	ldr	sl, [sp, #20]
   17adc:	cmp	sl, #0
   17ae0:	beq	17af0 <main@@Base+0x45f4>
   17ae4:	ldr	r0, [r5, #12]
   17ae8:	cmp	r0, #0
   17aec:	bne	17b88 <main@@Base+0x468c>
   17af0:	ldr	r3, [sp, #28]
   17af4:	ldr	r0, [sp, #32]
   17af8:	ldr	r1, [sp, #36]	; 0x24
   17afc:	stm	sp, {r0, r1}
   17b00:	sub	r0, fp, #29
   17b04:	str	r0, [sp, #8]
   17b08:	mov	r0, r5
   17b0c:	mov	r1, r4
   17b10:	mov	r2, r7
   17b14:	bl	1c748 <main@@Base+0x924c>
   17b18:	cmp	r0, r7
   17b1c:	beq	17b80 <main@@Base+0x4684>
   17b20:	add	sl, sl, #1
   17b24:	ldr	r0, [fp, #8]
   17b28:	mov	r2, r0
   17b2c:	ldrb	r0, [r0]
   17b30:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   17b34:	add	r0, r0, r1
   17b38:	strb	r0, [r2]
   17b3c:	ldr	r0, [sp, #24]
   17b40:	cmp	r0, #0
   17b44:	mov	r6, r4
   17b48:	ldr	r0, [sp, #16]
   17b4c:	bne	17a84 <main@@Base+0x4588>
   17b50:	b	17b74 <main@@Base+0x4678>
   17b54:	mov	r4, r6
   17b58:	b	17b74 <main@@Base+0x4678>
   17b5c:	mov	r0, r5
   17b60:	mov	r1, r4
   17b64:	mov	r2, r7
   17b68:	mov	r3, #23
   17b6c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   17b70:	mov	r4, r0
   17b74:	mov	r0, r4
   17b78:	sub	sp, fp, #28
   17b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b80:	mov	r4, r7
   17b84:	b	17b74 <main@@Base+0x4678>
   17b88:	mov	r0, r5
   17b8c:	mov	r1, r4
   17b90:	mov	r2, r7
   17b94:	mov	r3, #14
   17b98:	b	17b6c <main@@Base+0x4670>
   17b9c:	push	{r4, r5, fp, lr}
   17ba0:	add	fp, sp, #8
   17ba4:	mov	r4, r1
   17ba8:	mov	r5, r0
   17bac:	mov	r0, r1
   17bb0:	bl	1c774 <main@@Base+0x9278>
   17bb4:	strb	r4, [r5]
   17bb8:	pop	{r4, r5, fp, pc}
   17bbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bc0:	add	fp, sp, #28
   17bc4:	sub	sp, sp, #28
   17bc8:	mov	r6, r3
   17bcc:	mov	r4, r2
   17bd0:	mov	r8, r0
   17bd4:	add	r3, sp, #24
   17bd8:	bl	15c40 <main@@Base+0x2744>
   17bdc:	mov	r1, r0
   17be0:	ldr	r0, [sp, #24]
   17be4:	cmp	r0, #0
   17be8:	beq	17dd0 <main@@Base+0x48d4>
   17bec:	str	r6, [sp, #12]
   17bf0:	add	r0, r6, #4
   17bf4:	str	r0, [sp, #8]
   17bf8:	add	r5, sp, #20
   17bfc:	mov	sl, r5
   17c00:	b	17c40 <main@@Base+0x4744>
   17c04:	mov	r0, r8
   17c08:	mov	r1, r7
   17c0c:	mov	r2, r4
   17c10:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   17c14:	mov	r9, r0
   17c18:	mov	r0, r8
   17c1c:	mov	r1, r9
   17c20:	mov	r2, r4
   17c24:	add	r3, sp, #24
   17c28:	bl	18efc <main@@Base+0x5a00>
   17c2c:	mov	r1, r0
   17c30:	ldr	r0, [sp, #24]
   17c34:	cmp	r0, #0
   17c38:	mov	r5, sl
   17c3c:	beq	17dd0 <main@@Base+0x48d4>
   17c40:	mov	r0, r8
   17c44:	mov	r2, r4
   17c48:	bl	15cd0 <main@@Base+0x27d4>
   17c4c:	mov	r6, r0
   17c50:	mov	r1, r4
   17c54:	bl	15d14 <main@@Base+0x2818>
   17c58:	mov	r2, r1
   17c5c:	bfc	r2, #0, #16
   17c60:	movw	r3, #0
   17c64:	movt	r3, #26980	; 0x6964
   17c68:	teq	r2, r3
   17c6c:	bne	17cc0 <main@@Base+0x47c4>
   17c70:	mov	r0, r8
   17c74:	mov	r1, r6
   17c78:	mov	r2, r4
   17c7c:	mov	r3, #2
   17c80:	bl	15d18 <main@@Base+0x281c>
   17c84:	mov	r7, r0
   17c88:	cmp	r6, r0
   17c8c:	beq	17c04 <main@@Base+0x4708>
   17c90:	mov	r0, #0
   17c94:	str	r0, [sp, #20]
   17c98:	mov	r0, r8
   17c9c:	mov	r1, r7
   17ca0:	mov	r2, r4
   17ca4:	mov	r3, r5
   17ca8:	bl	18960 <main@@Base+0x5464>
   17cac:	mov	r6, r0
   17cb0:	cmp	r7, r0
   17cb4:	beq	17d40 <main@@Base+0x4844>
   17cb8:	mov	r9, r6
   17cbc:	b	17d6c <main@@Base+0x4870>
   17cc0:	movw	r2, #25445	; 0x6365
   17cc4:	movt	r2, #24942	; 0x616e
   17cc8:	eor	r0, r0, r2
   17ccc:	movw	r2, #29556	; 0x7374
   17cd0:	movt	r2, #25705	; 0x6469
   17cd4:	eor	r1, r1, r2
   17cd8:	orrs	r0, r0, r1
   17cdc:	bne	17d34 <main@@Base+0x4838>
   17ce0:	mov	r0, r8
   17ce4:	mov	r1, r6
   17ce8:	mov	r2, r4
   17cec:	mov	r3, #8
   17cf0:	bl	15d18 <main@@Base+0x281c>
   17cf4:	mov	r7, r0
   17cf8:	cmp	r6, r0
   17cfc:	beq	17c04 <main@@Base+0x4708>
   17d00:	mov	r0, #0
   17d04:	str	r0, [sp, #16]
   17d08:	mov	r0, r8
   17d0c:	mov	r1, r7
   17d10:	mov	r2, r4
   17d14:	add	r5, sp, #16
   17d18:	mov	r3, r5
   17d1c:	bl	18960 <main@@Base+0x5464>
   17d20:	mov	r6, r0
   17d24:	cmp	r7, r0
   17d28:	beq	17d7c <main@@Base+0x4880>
   17d2c:	mov	r9, r6
   17d30:	b	17da8 <main@@Base+0x48ac>
   17d34:	mov	r0, r8
   17d38:	mov	r1, r6
   17d3c:	b	17c0c <main@@Base+0x4710>
   17d40:	str	r5, [sp]
   17d44:	mov	r0, r8
   17d48:	mov	r1, r6
   17d4c:	mov	r2, r4
   17d50:	movw	r3, #29472	; 0x7320
   17d54:	movt	r3, #3
   17d58:	bl	189f0 <main@@Base+0x54f4>
   17d5c:	mov	r9, r0
   17d60:	cmp	r0, r6
   17d64:	cmpne	r9, r4
   17d68:	beq	17db8 <main@@Base+0x48bc>
   17d6c:	ldr	r1, [sp, #20]
   17d70:	ldr	r0, [sp, #12]
   17d74:	bl	18b54 <main@@Base+0x5658>
   17d78:	b	17c18 <main@@Base+0x471c>
   17d7c:	str	r5, [sp]
   17d80:	mov	r0, r8
   17d84:	mov	r1, r6
   17d88:	mov	r2, r4
   17d8c:	movw	r3, #29484	; 0x732c
   17d90:	movt	r3, #3
   17d94:	bl	189f0 <main@@Base+0x54f4>
   17d98:	mov	r9, r0
   17d9c:	cmp	r0, r6
   17da0:	cmpne	r9, r4
   17da4:	beq	17db8 <main@@Base+0x48bc>
   17da8:	ldr	r1, [sp, #16]
   17dac:	ldr	r0, [sp, #8]
   17db0:	bl	18b54 <main@@Base+0x5658>
   17db4:	b	17c18 <main@@Base+0x471c>
   17db8:	mov	r0, r8
   17dbc:	mov	r1, r9
   17dc0:	mov	r2, r4
   17dc4:	mov	r3, #33	; 0x21
   17dc8:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   17dcc:	mov	r1, r0
   17dd0:	mov	r0, r1
   17dd4:	sub	sp, fp, #28
   17dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17de0:	add	fp, sp, #28
   17de4:	sub	sp, sp, #20
   17de8:	mov	r7, r3
   17dec:	mov	r4, r2
   17df0:	mov	r6, r1
   17df4:	mov	r5, r0
   17df8:	mov	r0, #0
   17dfc:	str	r0, [r3]
   17e00:	ldr	r0, [r5]
   17e04:	mov	r1, #3
   17e08:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   17e0c:	cmp	r0, #0
   17e10:	bne	1801c <main@@Base+0x4b20>
   17e14:	add	r3, sp, #16
   17e18:	mov	r0, r5
   17e1c:	mov	r1, r6
   17e20:	mov	r2, r4
   17e24:	bl	15c40 <main@@Base+0x2744>
   17e28:	mov	r6, r0
   17e2c:	ldr	r0, [sp, #16]
   17e30:	cmp	r0, #0
   17e34:	str	r7, [sp, #8]
   17e38:	beq	18010 <main@@Base+0x4b14>
   17e3c:	movw	r7, #29556	; 0x7374
   17e40:	movt	r7, #28261	; 0x6e65
   17e44:	movw	r8, #0
   17e48:	movt	r8, #25956	; 0x6564
   17e4c:	movw	r9, #29793	; 0x7461
   17e50:	movt	r9, #25697	; 0x6461
   17e54:	add	sl, sp, #16
   17e58:	b	17e94 <main@@Base+0x4998>
   17e5c:	mov	r0, r5
   17e60:	mov	r1, r6
   17e64:	mov	r2, r4
   17e68:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   17e6c:	mov	r6, r0
   17e70:	mov	r0, r5
   17e74:	mov	r1, r6
   17e78:	mov	r2, r4
   17e7c:	mov	r3, sl
   17e80:	bl	18efc <main@@Base+0x5a00>
   17e84:	mov	r6, r0
   17e88:	ldr	r0, [sp, #16]
   17e8c:	cmp	r0, #0
   17e90:	beq	18010 <main@@Base+0x4b14>
   17e94:	mov	r0, r5
   17e98:	mov	r1, r6
   17e9c:	mov	r2, r4
   17ea0:	bl	15cd0 <main@@Base+0x27d4>
   17ea4:	mov	r6, r0
   17ea8:	mov	r1, r4
   17eac:	bl	15d14 <main@@Base+0x2818>
   17eb0:	subs	r2, r0, r8
   17eb4:	sbcs	r2, r1, r7
   17eb8:	bcs	17f18 <main@@Base+0x4a1c>
   17ebc:	teq	r1, r9
   17ec0:	bne	17e5c <main@@Base+0x4960>
   17ec4:	mov	r0, r5
   17ec8:	mov	r1, r6
   17ecc:	mov	r2, r4
   17ed0:	mov	r3, #4
   17ed4:	bl	15d18 <main@@Base+0x281c>
   17ed8:	mov	r1, r0
   17edc:	cmp	r6, r0
   17ee0:	beq	18008 <main@@Base+0x4b0c>
   17ee4:	mov	r0, #0
   17ee8:	str	r0, [sp]
   17eec:	mov	r0, r5
   17ef0:	mov	r2, r4
   17ef4:	add	r3, sp, #12
   17ef8:	bl	21cd8 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   17efc:	mov	r6, r0
   17f00:	ldr	r0, [sp, #12]
   17f04:	cmp	r0, #0
   17f08:	beq	1801c <main@@Base+0x4b20>
   17f0c:	ldr	r0, [r5]
   17f10:	mov	r1, #0
   17f14:	b	17ff0 <main@@Base+0x4af4>
   17f18:	movw	r2, #29292	; 0x726c
   17f1c:	movt	r2, #117	; 0x75
   17f20:	eor	r2, r2, r1, lsr #8
   17f24:	lsr	r3, r0, #8
   17f28:	orr	r3, r3, r1, lsl #24
   17f2c:	eor	r3, r3, r9
   17f30:	orrs	r2, r3, r2
   17f34:	bne	17f8c <main@@Base+0x4a90>
   17f38:	mov	r0, r5
   17f3c:	mov	r1, r6
   17f40:	mov	r2, r4
   17f44:	mov	r3, #7
   17f48:	bl	15d18 <main@@Base+0x281c>
   17f4c:	mov	r1, r0
   17f50:	cmp	r6, r0
   17f54:	beq	18008 <main@@Base+0x4b0c>
   17f58:	mov	r0, #1
   17f5c:	str	r0, [sp]
   17f60:	mov	r0, r5
   17f64:	mov	r2, r4
   17f68:	add	r3, sp, #12
   17f6c:	bl	21cd8 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   17f70:	mov	r6, r0
   17f74:	ldr	r0, [sp, #12]
   17f78:	cmp	r0, #0
   17f7c:	beq	1801c <main@@Base+0x4b20>
   17f80:	ldr	r0, [r5]
   17f84:	mov	r1, #1
   17f88:	b	17ff0 <main@@Base+0x4af4>
   17f8c:	eor	r1, r1, r7
   17f90:	bfc	r0, #0, #16
   17f94:	eor	r0, r0, r8
   17f98:	orrs	r0, r0, r1
   17f9c:	bne	17e5c <main@@Base+0x4960>
   17fa0:	mov	r0, r5
   17fa4:	mov	r1, r6
   17fa8:	mov	r2, r4
   17fac:	mov	r3, #6
   17fb0:	bl	15d18 <main@@Base+0x281c>
   17fb4:	mov	r1, r0
   17fb8:	cmp	r6, r0
   17fbc:	beq	18008 <main@@Base+0x4b0c>
   17fc0:	mov	r0, #0
   17fc4:	str	r0, [sp]
   17fc8:	mov	r0, r5
   17fcc:	mov	r2, r4
   17fd0:	add	r3, sp, #12
   17fd4:	bl	21cd8 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   17fd8:	mov	r6, r0
   17fdc:	ldr	r0, [sp, #12]
   17fe0:	cmp	r0, #0
   17fe4:	beq	1801c <main@@Base+0x4b20>
   17fe8:	ldr	r0, [r5]
   17fec:	mov	r1, #2
   17ff0:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   17ff4:	cmp	r0, #0
   17ff8:	beq	1801c <main@@Base+0x4b20>
   17ffc:	ldr	r1, [sp, #12]
   18000:	str	r1, [r0]
   18004:	b	17e70 <main@@Base+0x4974>
   18008:	mov	r0, r5
   1800c:	b	17e64 <main@@Base+0x4968>
   18010:	ldr	r0, [r5, #24]
   18014:	cmp	r0, #0
   18018:	beq	18040 <main@@Base+0x4b44>
   1801c:	mov	r0, r5
   18020:	mov	r1, r6
   18024:	mov	r2, r4
   18028:	mov	r3, #33	; 0x21
   1802c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   18030:	mov	r6, r0
   18034:	mov	r0, r6
   18038:	sub	sp, fp, #28
   1803c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18040:	ldr	r0, [r5]
   18044:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   18048:	ldr	r1, [sp, #8]
   1804c:	str	r0, [r1]
   18050:	cmp	r0, #0
   18054:	bne	18034 <main@@Base+0x4b38>
   18058:	b	1801c <main@@Base+0x4b20>
   1805c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18060:	add	fp, sp, #28
   18064:	sub	sp, sp, #28
   18068:	mov	r6, r3
   1806c:	mov	r4, r2
   18070:	mov	sl, r1
   18074:	mov	r5, r0
   18078:	mov	r0, #0
   1807c:	str	r0, [r3]
   18080:	ldr	r0, [r5]
   18084:	mov	r1, #3
   18088:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1808c:	cmp	r0, #0
   18090:	beq	180b8 <main@@Base+0x4bbc>
   18094:	mov	r0, r5
   18098:	mov	r1, sl
   1809c:	mov	r2, r4
   180a0:	mov	r3, #33	; 0x21
   180a4:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   180a8:	mov	sl, r0
   180ac:	mov	r0, sl
   180b0:	sub	sp, fp, #28
   180b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180b8:	str	r6, [sp, #4]
   180bc:	add	r3, sp, #24
   180c0:	mov	r0, r5
   180c4:	mov	r1, sl
   180c8:	mov	r2, r4
   180cc:	bl	15c40 <main@@Base+0x2744>
   180d0:	mov	sl, r0
   180d4:	ldr	r0, [sp, #24]
   180d8:	cmp	r0, #0
   180dc:	beq	18398 <main@@Base+0x4e9c>
   180e0:	movw	r9, #65535	; 0xffff
   180e4:	movt	r9, #26979	; 0x6963
   180e8:	add	r8, sp, #24
   180ec:	b	18128 <main@@Base+0x4c2c>
   180f0:	mov	r0, r5
   180f4:	mov	r1, r6
   180f8:	mov	r2, r4
   180fc:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   18100:	mov	sl, r0
   18104:	mov	r0, r5
   18108:	mov	r1, sl
   1810c:	mov	r2, r4
   18110:	mov	r3, r8
   18114:	bl	18efc <main@@Base+0x5a00>
   18118:	mov	sl, r0
   1811c:	ldr	r0, [sp, #24]
   18120:	cmp	r0, #0
   18124:	beq	18398 <main@@Base+0x4e9c>
   18128:	mov	r0, r5
   1812c:	mov	r1, sl
   18130:	mov	r2, r4
   18134:	bl	15cd0 <main@@Base+0x27d4>
   18138:	mov	r6, r0
   1813c:	mov	r1, r4
   18140:	bl	15d14 <main@@Base+0x2818>
   18144:	cmp	r1, r9
   18148:	bhi	181bc <main@@Base+0x4cc0>
   1814c:	movw	r2, #30062	; 0x756e
   18150:	movt	r2, #25455	; 0x636f
   18154:	eor	r1, r1, r2
   18158:	and	r0, r0, #-16777216	; 0xff000000
   1815c:	eor	r0, r0, #1946157056	; 0x74000000
   18160:	orrs	r0, r0, r1
   18164:	bne	180f0 <main@@Base+0x4bf4>
   18168:	mov	r0, r5
   1816c:	mov	r1, r6
   18170:	mov	r2, r4
   18174:	mov	r3, #5
   18178:	bl	15d18 <main@@Base+0x281c>
   1817c:	mov	r7, r0
   18180:	cmp	r6, r0
   18184:	add	sl, sp, #8
   18188:	beq	1829c <main@@Base+0x4da0>
   1818c:	mov	r0, #0
   18190:	strh	r0, [sp, #8]
   18194:	mov	r0, r5
   18198:	mov	r1, r7
   1819c:	mov	r2, r4
   181a0:	mov	r3, sl
   181a4:	bl	1c330 <main@@Base+0x8e34>
   181a8:	mov	r6, r0
   181ac:	cmp	r7, r0
   181b0:	beq	182a8 <main@@Base+0x4dac>
   181b4:	mov	sl, r6
   181b8:	b	182d4 <main@@Base+0x4dd8>
   181bc:	bic	r0, r1, #255	; 0xff
   181c0:	movw	r2, #27648	; 0x6c00
   181c4:	movt	r2, #30305	; 0x7661
   181c8:	teq	r0, r2
   181cc:	add	sl, sp, #8
   181d0:	bne	18228 <main@@Base+0x4d2c>
   181d4:	mov	r0, r5
   181d8:	mov	r1, r6
   181dc:	mov	r2, r4
   181e0:	mov	r3, #3
   181e4:	bl	15d18 <main@@Base+0x281c>
   181e8:	mov	r7, r0
   181ec:	cmp	r6, r0
   181f0:	beq	1829c <main@@Base+0x4da0>
   181f4:	mov	r0, #0
   181f8:	str	r0, [sp, #12]
   181fc:	str	r0, [sp, #8]
   18200:	mov	r0, r5
   18204:	mov	r1, r7
   18208:	mov	r2, r4
   1820c:	mov	r3, sl
   18210:	bl	1873c <main@@Base+0x5240>
   18214:	mov	r6, r0
   18218:	cmp	r7, r0
   1821c:	beq	18314 <main@@Base+0x4e18>
   18220:	mov	sl, r6
   18224:	b	18340 <main@@Base+0x4e44>
   18228:	bfc	r1, #0, #16
   1822c:	movw	r0, #0
   18230:	movt	r0, #26980	; 0x6964
   18234:	teq	r1, r0
   18238:	bne	180f0 <main@@Base+0x4bf4>
   1823c:	mov	r0, r5
   18240:	mov	r1, r6
   18244:	mov	r2, r4
   18248:	mov	r3, #2
   1824c:	bl	15d18 <main@@Base+0x281c>
   18250:	mov	r1, r0
   18254:	cmp	r6, r0
   18258:	beq	18390 <main@@Base+0x4e94>
   1825c:	mov	r0, r5
   18260:	mov	r2, r4
   18264:	add	r3, sp, #20
   18268:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   1826c:	mov	sl, r0
   18270:	ldr	r0, [sp, #20]
   18274:	cmp	r0, #0
   18278:	beq	18094 <main@@Base+0x4b98>
   1827c:	ldr	r0, [r5]
   18280:	mov	r1, #0
   18284:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   18288:	cmp	r0, #0
   1828c:	beq	18094 <main@@Base+0x4b98>
   18290:	ldr	r1, [sp, #20]
   18294:	str	r1, [r0]
   18298:	b	18104 <main@@Base+0x4c08>
   1829c:	mov	r0, r5
   182a0:	mov	r1, r7
   182a4:	b	180f8 <main@@Base+0x4bfc>
   182a8:	str	sl, [sp]
   182ac:	mov	r0, r5
   182b0:	mov	r1, r6
   182b4:	mov	r2, r4
   182b8:	movw	r3, #29496	; 0x7338
   182bc:	movt	r3, #3
   182c0:	bl	1c3c0 <main@@Base+0x8ec4>
   182c4:	mov	sl, r0
   182c8:	cmp	r0, r6
   182cc:	cmpne	sl, r4
   182d0:	beq	18094 <main@@Base+0x4b98>
   182d4:	ldrh	r6, [sp, #8]
   182d8:	cmp	r6, #0
   182dc:	bne	182ec <main@@Base+0x4df0>
   182e0:	ldrb	r0, [r5, #8]
   182e4:	tst	r0, #2
   182e8:	beq	18104 <main@@Base+0x4c08>
   182ec:	ldr	r0, [r5]
   182f0:	mov	r1, #2
   182f4:	mov	r2, #2
   182f8:	mov	r3, #2
   182fc:	bl	1eee0 <flatcc_builder_table_add@@Base>
   18300:	cmp	r0, #0
   18304:	beq	18094 <main@@Base+0x4b98>
   18308:	mov	r1, r6
   1830c:	bl	1c524 <main@@Base+0x9028>
   18310:	b	18104 <main@@Base+0x4c08>
   18314:	str	sl, [sp]
   18318:	mov	r0, r5
   1831c:	mov	r1, r6
   18320:	mov	r2, r4
   18324:	movw	r3, #29508	; 0x7344
   18328:	movt	r3, #3
   1832c:	bl	187d0 <main@@Base+0x52d4>
   18330:	mov	sl, r0
   18334:	cmp	r0, r6
   18338:	cmpne	sl, r4
   1833c:	beq	18094 <main@@Base+0x4b98>
   18340:	mov	r7, r9
   18344:	ldr	r6, [sp, #8]
   18348:	ldr	r9, [sp, #12]
   1834c:	orrs	r0, r6, r9
   18350:	bne	18360 <main@@Base+0x4e64>
   18354:	ldrb	r0, [r5, #8]
   18358:	tst	r0, #2
   1835c:	beq	18388 <main@@Base+0x4e8c>
   18360:	ldr	r0, [r5]
   18364:	mov	r1, #1
   18368:	mov	r2, #8
   1836c:	mov	r3, #8
   18370:	bl	1eee0 <flatcc_builder_table_add@@Base>
   18374:	cmp	r0, #0
   18378:	beq	18094 <main@@Base+0x4b98>
   1837c:	mov	r2, r6
   18380:	mov	r3, r9
   18384:	bl	18938 <main@@Base+0x543c>
   18388:	mov	r9, r7
   1838c:	b	18104 <main@@Base+0x4c08>
   18390:	mov	r0, r5
   18394:	b	180f8 <main@@Base+0x4bfc>
   18398:	ldr	r0, [r5, #24]
   1839c:	cmp	r0, #0
   183a0:	bne	18094 <main@@Base+0x4b98>
   183a4:	ldr	r0, [r5]
   183a8:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   183ac:	ldr	r1, [sp, #4]
   183b0:	str	r0, [r1]
   183b4:	cmp	r0, #0
   183b8:	bne	180ac <main@@Base+0x4bb0>
   183bc:	b	18094 <main@@Base+0x4b98>
   183c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   183c4:	add	fp, sp, #28
   183c8:	sub	sp, sp, #36	; 0x24
   183cc:	mov	r4, r3
   183d0:	mov	r7, r2
   183d4:	mov	r5, r0
   183d8:	mov	sl, #0
   183dc:	str	sl, [sp, #32]
   183e0:	ldr	r0, [fp, #8]
   183e4:	str	sl, [r0]
   183e8:	mov	r0, r5
   183ec:	bl	199c4 <main@@Base+0x64c8>
   183f0:	mov	r6, r0
   183f4:	cmp	r0, r7
   183f8:	beq	184c8 <main@@Base+0x4fcc>
   183fc:	add	r0, r4, #4
   18400:	add	r9, sp, #24
   18404:	add	r8, sp, #20
   18408:	str	r0, [sp, #8]
   1840c:	str	sl, [sp, #12]
   18410:	mov	sl, r0
   18414:	ldr	r4, [sl, #-4]
   18418:	str	r9, [sp]
   1841c:	add	r0, sp, #16
   18420:	str	r0, [sp, #4]
   18424:	mov	r0, r5
   18428:	mov	r1, r6
   1842c:	mov	r2, r7
   18430:	mov	r3, r8
   18434:	blx	r4
   18438:	mov	r4, r0
   1843c:	cmp	r0, r7
   18440:	beq	184e8 <main@@Base+0x4fec>
   18444:	cmp	r4, r6
   18448:	bne	18460 <main@@Base+0x4f64>
   1844c:	ldr	r0, [sl], #4
   18450:	cmp	r0, #0
   18454:	mov	r6, r4
   18458:	bne	18414 <main@@Base+0x4f18>
   1845c:	b	184d0 <main@@Base+0x4fd4>
   18460:	ldr	sl, [sp, #12]
   18464:	cmp	sl, #0
   18468:	beq	18478 <main@@Base+0x4f7c>
   1846c:	ldr	r0, [r5, #12]
   18470:	cmp	r0, #0
   18474:	bne	184fc <main@@Base+0x5000>
   18478:	add	r3, sp, #20
   1847c:	ldm	r3, {r1, r2, r3}
   18480:	add	r0, sp, #32
   18484:	str	r0, [sp]
   18488:	mov	r0, r4
   1848c:	bl	1c778 <main@@Base+0x927c>
   18490:	cmp	r4, r7
   18494:	beq	184f4 <main@@Base+0x4ff8>
   18498:	add	sl, sl, #1
   1849c:	vldr	s0, [sp, #32]
   184a0:	ldr	r0, [fp, #8]
   184a4:	vldr	s2, [r0]
   184a8:	vadd.f32	s0, s0, s2
   184ac:	vstr	s0, [r0]
   184b0:	ldr	r0, [sp, #16]
   184b4:	cmp	r0, #0
   184b8:	mov	r6, r4
   184bc:	ldr	r0, [sp, #8]
   184c0:	bne	1840c <main@@Base+0x4f10>
   184c4:	b	184e8 <main@@Base+0x4fec>
   184c8:	mov	r4, r6
   184cc:	b	184e8 <main@@Base+0x4fec>
   184d0:	mov	r0, r5
   184d4:	mov	r1, r4
   184d8:	mov	r2, r7
   184dc:	mov	r3, #23
   184e0:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   184e4:	mov	r4, r0
   184e8:	mov	r0, r4
   184ec:	sub	sp, fp, #28
   184f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184f4:	mov	r4, r7
   184f8:	b	184e8 <main@@Base+0x4fec>
   184fc:	mov	r0, r5
   18500:	mov	r1, r4
   18504:	mov	r2, r7
   18508:	mov	r3, #14
   1850c:	b	184e0 <main@@Base+0x4fe4>
   18510:	push	{r4, sl, fp, lr}
   18514:	add	fp, sp, #8
   18518:	mov	r4, r0
   1851c:	bl	1c7b4 <main@@Base+0x92b8>
   18520:	vstr	s0, [r4]
   18524:	pop	{r4, sl, fp, pc}
   18528:	push	{r4, r5, r6, r7, fp, lr}
   1852c:	add	fp, sp, #16
   18530:	sub	sp, sp, #24
   18534:	mov	r7, r1
   18538:	mov	r6, r0
   1853c:	mov	r0, #0
   18540:	str	r0, [sp, #20]
   18544:	str	r0, [sp, #16]
   18548:	str	r0, [sp, #12]
   1854c:	str	r0, [r3]
   18550:	cmp	r1, r2
   18554:	beq	185ac <main@@Base+0x50b0>
   18558:	mov	r5, r3
   1855c:	mov	r4, r2
   18560:	add	r0, sp, #16
   18564:	str	r0, [sp]
   18568:	add	r3, sp, #12
   1856c:	mov	r0, r6
   18570:	mov	r1, r7
   18574:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   18578:	mov	r1, r0
   1857c:	cmp	r0, r7
   18580:	beq	185a8 <main@@Base+0x50ac>
   18584:	ldr	r3, [sp, #12]
   18588:	ldr	r0, [sp, #16]
   1858c:	ldr	r2, [sp, #20]
   18590:	stm	sp, {r0, r2, r5}
   18594:	mov	r0, r6
   18598:	mov	r2, r4
   1859c:	bl	1c7b8 <main@@Base+0x92bc>
   185a0:	mov	r7, r0
   185a4:	b	185ac <main@@Base+0x50b0>
   185a8:	mov	r7, r1
   185ac:	mov	r0, r7
   185b0:	sub	sp, fp, #16
   185b4:	pop	{r4, r5, r6, r7, fp, pc}
   185b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185bc:	add	fp, sp, #28
   185c0:	sub	sp, sp, #44	; 0x2c
   185c4:	mov	r4, r3
   185c8:	mov	r7, r2
   185cc:	mov	r5, r0
   185d0:	mov	sl, #0
   185d4:	str	sl, [fp, #-32]	; 0xffffffe0
   185d8:	ldr	r0, [fp, #8]
   185dc:	str	sl, [r0]
   185e0:	mov	r0, r5
   185e4:	bl	199c4 <main@@Base+0x64c8>
   185e8:	mov	r6, r0
   185ec:	cmp	r0, r7
   185f0:	beq	186d4 <main@@Base+0x51d8>
   185f4:	add	r0, r4, #4
   185f8:	add	r9, sp, #32
   185fc:	add	r8, sp, #28
   18600:	str	r0, [sp, #16]
   18604:	str	sl, [sp, #20]
   18608:	mov	sl, r0
   1860c:	ldr	r4, [sl, #-4]
   18610:	str	r9, [sp]
   18614:	add	r0, sp, #24
   18618:	str	r0, [sp, #4]
   1861c:	mov	r0, r5
   18620:	mov	r1, r6
   18624:	mov	r2, r7
   18628:	mov	r3, r8
   1862c:	blx	r4
   18630:	mov	r4, r0
   18634:	cmp	r0, r7
   18638:	beq	186f4 <main@@Base+0x51f8>
   1863c:	cmp	r4, r6
   18640:	bne	18658 <main@@Base+0x515c>
   18644:	ldr	r0, [sl], #4
   18648:	cmp	r0, #0
   1864c:	mov	r6, r4
   18650:	bne	1860c <main@@Base+0x5110>
   18654:	b	186dc <main@@Base+0x51e0>
   18658:	ldr	sl, [sp, #20]
   1865c:	cmp	sl, #0
   18660:	beq	18670 <main@@Base+0x5174>
   18664:	ldr	r0, [r5, #12]
   18668:	cmp	r0, #0
   1866c:	bne	18708 <main@@Base+0x520c>
   18670:	ldr	r3, [sp, #28]
   18674:	ldr	r0, [sp, #32]
   18678:	ldr	r1, [sp, #36]	; 0x24
   1867c:	stm	sp, {r0, r1}
   18680:	sub	r0, fp, #32
   18684:	str	r0, [sp, #8]
   18688:	mov	r0, r5
   1868c:	mov	r1, r4
   18690:	mov	r2, r7
   18694:	bl	1c7b8 <main@@Base+0x92bc>
   18698:	cmp	r0, r7
   1869c:	beq	18700 <main@@Base+0x5204>
   186a0:	add	sl, sl, #1
   186a4:	ldr	r0, [fp, #8]
   186a8:	mov	r2, r0
   186ac:	ldr	r0, [r0]
   186b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   186b4:	add	r0, r0, r1
   186b8:	str	r0, [r2]
   186bc:	ldr	r0, [sp, #24]
   186c0:	cmp	r0, #0
   186c4:	mov	r6, r4
   186c8:	ldr	r0, [sp, #16]
   186cc:	bne	18604 <main@@Base+0x5108>
   186d0:	b	186f4 <main@@Base+0x51f8>
   186d4:	mov	r4, r6
   186d8:	b	186f4 <main@@Base+0x51f8>
   186dc:	mov	r0, r5
   186e0:	mov	r1, r4
   186e4:	mov	r2, r7
   186e8:	mov	r3, #23
   186ec:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   186f0:	mov	r4, r0
   186f4:	mov	r0, r4
   186f8:	sub	sp, fp, #28
   186fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18700:	mov	r4, r7
   18704:	b	186f4 <main@@Base+0x51f8>
   18708:	mov	r0, r5
   1870c:	mov	r1, r4
   18710:	mov	r2, r7
   18714:	mov	r3, #14
   18718:	b	186ec <main@@Base+0x51f0>
   1871c:	push	{r4, r5, fp, lr}
   18720:	add	fp, sp, #8
   18724:	mov	r4, r1
   18728:	mov	r5, r0
   1872c:	mov	r0, r1
   18730:	bl	1c814 <main@@Base+0x9318>
   18734:	str	r4, [r5]
   18738:	pop	{r4, r5, fp, pc}
   1873c:	push	{r4, r5, r6, r7, fp, lr}
   18740:	add	fp, sp, #16
   18744:	sub	sp, sp, #24
   18748:	mov	r7, r1
   1874c:	mov	r6, r0
   18750:	mov	r0, #0
   18754:	str	r0, [sp, #20]
   18758:	str	r0, [sp, #16]
   1875c:	str	r0, [sp, #12]
   18760:	str	r0, [r3]
   18764:	str	r0, [r3, #4]
   18768:	cmp	r1, r2
   1876c:	beq	187c4 <main@@Base+0x52c8>
   18770:	mov	r5, r3
   18774:	mov	r4, r2
   18778:	add	r0, sp, #16
   1877c:	str	r0, [sp]
   18780:	add	r3, sp, #12
   18784:	mov	r0, r6
   18788:	mov	r1, r7
   1878c:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   18790:	mov	r1, r0
   18794:	cmp	r0, r7
   18798:	beq	187c0 <main@@Base+0x52c4>
   1879c:	ldr	r3, [sp, #12]
   187a0:	ldr	r0, [sp, #16]
   187a4:	ldr	r2, [sp, #20]
   187a8:	stm	sp, {r0, r2, r5}
   187ac:	mov	r0, r6
   187b0:	mov	r2, r4
   187b4:	bl	1c818 <main@@Base+0x931c>
   187b8:	mov	r7, r0
   187bc:	b	187c4 <main@@Base+0x52c8>
   187c0:	mov	r7, r1
   187c4:	mov	r0, r7
   187c8:	sub	sp, fp, #16
   187cc:	pop	{r4, r5, r6, r7, fp, pc}
   187d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187d4:	add	fp, sp, #28
   187d8:	sub	sp, sp, #44	; 0x2c
   187dc:	mov	r4, r3
   187e0:	mov	r7, r2
   187e4:	mov	r5, r0
   187e8:	mov	r9, #0
   187ec:	str	r9, [sp, #36]	; 0x24
   187f0:	str	r9, [sp, #32]
   187f4:	ldr	r0, [fp, #8]
   187f8:	str	r9, [r0]
   187fc:	str	r9, [r0, #4]
   18800:	mov	r0, r5
   18804:	bl	199c4 <main@@Base+0x64c8>
   18808:	mov	r6, r0
   1880c:	cmp	r0, r7
   18810:	beq	188f0 <main@@Base+0x53f4>
   18814:	add	sl, r4, #4
   18818:	add	r8, sp, #20
   1881c:	str	sl, [sp, #12]
   18820:	ldr	r4, [sl, #-4]
   18824:	add	r0, sp, #24
   18828:	str	r0, [sp]
   1882c:	add	r0, sp, #16
   18830:	str	r0, [sp, #4]
   18834:	mov	r0, r5
   18838:	mov	r1, r6
   1883c:	mov	r2, r7
   18840:	mov	r3, r8
   18844:	blx	r4
   18848:	mov	r4, r0
   1884c:	cmp	r0, r7
   18850:	beq	18910 <main@@Base+0x5414>
   18854:	cmp	r4, r6
   18858:	bne	18870 <main@@Base+0x5374>
   1885c:	ldr	r0, [sl], #4
   18860:	cmp	r0, #0
   18864:	mov	r6, r4
   18868:	bne	18820 <main@@Base+0x5324>
   1886c:	b	188f8 <main@@Base+0x53fc>
   18870:	cmp	r9, #0
   18874:	beq	18884 <main@@Base+0x5388>
   18878:	ldr	r0, [r5, #12]
   1887c:	cmp	r0, #0
   18880:	bne	18924 <main@@Base+0x5428>
   18884:	ldr	r3, [sp, #20]
   18888:	ldr	r0, [sp, #24]
   1888c:	ldr	r1, [sp, #28]
   18890:	stm	sp, {r0, r1}
   18894:	add	r0, sp, #32
   18898:	str	r0, [sp, #8]
   1889c:	mov	r0, r5
   188a0:	mov	r1, r4
   188a4:	mov	r2, r7
   188a8:	bl	1c818 <main@@Base+0x931c>
   188ac:	cmp	r0, r7
   188b0:	beq	1891c <main@@Base+0x5420>
   188b4:	add	r9, r9, #1
   188b8:	ldr	r0, [fp, #8]
   188bc:	mov	r6, r0
   188c0:	ldrd	r0, [r0]
   188c4:	ldr	r2, [sp, #32]
   188c8:	ldr	r3, [sp, #36]	; 0x24
   188cc:	adds	r0, r0, r2
   188d0:	adc	r1, r1, r3
   188d4:	strd	r0, [r6]
   188d8:	ldr	r0, [sp, #16]
   188dc:	cmp	r0, #0
   188e0:	mov	r6, r4
   188e4:	ldr	sl, [sp, #12]
   188e8:	bne	18820 <main@@Base+0x5324>
   188ec:	b	18910 <main@@Base+0x5414>
   188f0:	mov	r4, r6
   188f4:	b	18910 <main@@Base+0x5414>
   188f8:	mov	r0, r5
   188fc:	mov	r1, r4
   18900:	mov	r2, r7
   18904:	mov	r3, #23
   18908:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1890c:	mov	r4, r0
   18910:	mov	r0, r4
   18914:	sub	sp, fp, #28
   18918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1891c:	mov	r4, r7
   18920:	b	18910 <main@@Base+0x5414>
   18924:	mov	r0, r5
   18928:	mov	r1, r4
   1892c:	mov	r2, r7
   18930:	mov	r3, #14
   18934:	b	18908 <main@@Base+0x540c>
   18938:	push	{r4, r6, r7, sl, fp, lr}
   1893c:	add	fp, sp, #16
   18940:	mov	r1, r3
   18944:	mov	r6, r2
   18948:	mov	r4, r0
   1894c:	mov	r0, r2
   18950:	bl	1c870 <main@@Base+0x9374>
   18954:	mov	r7, r1
   18958:	strd	r6, [r4]
   1895c:	pop	{r4, r6, r7, sl, fp, pc}
   18960:	push	{r4, r5, r6, r7, fp, lr}
   18964:	add	fp, sp, #16
   18968:	sub	sp, sp, #24
   1896c:	mov	r7, r1
   18970:	mov	r6, r0
   18974:	mov	r0, #0
   18978:	str	r0, [sp, #20]
   1897c:	str	r0, [sp, #16]
   18980:	str	r0, [sp, #12]
   18984:	str	r0, [r3]
   18988:	cmp	r1, r2
   1898c:	beq	189e4 <main@@Base+0x54e8>
   18990:	mov	r5, r3
   18994:	mov	r4, r2
   18998:	add	r0, sp, #16
   1899c:	str	r0, [sp]
   189a0:	add	r3, sp, #12
   189a4:	mov	r0, r6
   189a8:	mov	r1, r7
   189ac:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   189b0:	mov	r1, r0
   189b4:	cmp	r0, r7
   189b8:	beq	189e0 <main@@Base+0x54e4>
   189bc:	ldr	r3, [sp, #12]
   189c0:	ldr	r0, [sp, #16]
   189c4:	ldr	r2, [sp, #20]
   189c8:	stm	sp, {r0, r2, r5}
   189cc:	mov	r0, r6
   189d0:	mov	r2, r4
   189d4:	bl	1c874 <main@@Base+0x9378>
   189d8:	mov	r7, r0
   189dc:	b	189e4 <main@@Base+0x54e8>
   189e0:	mov	r7, r1
   189e4:	mov	r0, r7
   189e8:	sub	sp, fp, #16
   189ec:	pop	{r4, r5, r6, r7, fp, pc}
   189f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189f4:	add	fp, sp, #28
   189f8:	sub	sp, sp, #44	; 0x2c
   189fc:	mov	r4, r3
   18a00:	mov	r7, r2
   18a04:	mov	r5, r0
   18a08:	mov	sl, #0
   18a0c:	str	sl, [fp, #-32]	; 0xffffffe0
   18a10:	ldr	r0, [fp, #8]
   18a14:	str	sl, [r0]
   18a18:	mov	r0, r5
   18a1c:	bl	199c4 <main@@Base+0x64c8>
   18a20:	mov	r6, r0
   18a24:	cmp	r0, r7
   18a28:	beq	18b0c <main@@Base+0x5610>
   18a2c:	add	r0, r4, #4
   18a30:	add	r9, sp, #32
   18a34:	add	r8, sp, #28
   18a38:	str	r0, [sp, #16]
   18a3c:	str	sl, [sp, #20]
   18a40:	mov	sl, r0
   18a44:	ldr	r4, [sl, #-4]
   18a48:	str	r9, [sp]
   18a4c:	add	r0, sp, #24
   18a50:	str	r0, [sp, #4]
   18a54:	mov	r0, r5
   18a58:	mov	r1, r6
   18a5c:	mov	r2, r7
   18a60:	mov	r3, r8
   18a64:	blx	r4
   18a68:	mov	r4, r0
   18a6c:	cmp	r0, r7
   18a70:	beq	18b2c <main@@Base+0x5630>
   18a74:	cmp	r4, r6
   18a78:	bne	18a90 <main@@Base+0x5594>
   18a7c:	ldr	r0, [sl], #4
   18a80:	cmp	r0, #0
   18a84:	mov	r6, r4
   18a88:	bne	18a44 <main@@Base+0x5548>
   18a8c:	b	18b14 <main@@Base+0x5618>
   18a90:	ldr	sl, [sp, #20]
   18a94:	cmp	sl, #0
   18a98:	beq	18aa8 <main@@Base+0x55ac>
   18a9c:	ldr	r0, [r5, #12]
   18aa0:	cmp	r0, #0
   18aa4:	bne	18b40 <main@@Base+0x5644>
   18aa8:	ldr	r3, [sp, #28]
   18aac:	ldr	r0, [sp, #32]
   18ab0:	ldr	r1, [sp, #36]	; 0x24
   18ab4:	stm	sp, {r0, r1}
   18ab8:	sub	r0, fp, #32
   18abc:	str	r0, [sp, #8]
   18ac0:	mov	r0, r5
   18ac4:	mov	r1, r4
   18ac8:	mov	r2, r7
   18acc:	bl	1c874 <main@@Base+0x9378>
   18ad0:	cmp	r0, r7
   18ad4:	beq	18b38 <main@@Base+0x563c>
   18ad8:	add	sl, sl, #1
   18adc:	ldr	r0, [fp, #8]
   18ae0:	mov	r2, r0
   18ae4:	ldr	r0, [r0]
   18ae8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18aec:	add	r0, r0, r1
   18af0:	str	r0, [r2]
   18af4:	ldr	r0, [sp, #24]
   18af8:	cmp	r0, #0
   18afc:	mov	r6, r4
   18b00:	ldr	r0, [sp, #16]
   18b04:	bne	18a3c <main@@Base+0x5540>
   18b08:	b	18b2c <main@@Base+0x5630>
   18b0c:	mov	r4, r6
   18b10:	b	18b2c <main@@Base+0x5630>
   18b14:	mov	r0, r5
   18b18:	mov	r1, r4
   18b1c:	mov	r2, r7
   18b20:	mov	r3, #23
   18b24:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   18b28:	mov	r4, r0
   18b2c:	mov	r0, r4
   18b30:	sub	sp, fp, #28
   18b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b38:	mov	r4, r7
   18b3c:	b	18b2c <main@@Base+0x5630>
   18b40:	mov	r0, r5
   18b44:	mov	r1, r4
   18b48:	mov	r2, r7
   18b4c:	mov	r3, #14
   18b50:	b	18b24 <main@@Base+0x5628>
   18b54:	push	{r4, r5, fp, lr}
   18b58:	add	fp, sp, #8
   18b5c:	mov	r4, r1
   18b60:	mov	r5, r0
   18b64:	mov	r0, r1
   18b68:	bl	1c8ac <main@@Base+0x93b0>
   18b6c:	str	r4, [r5]
   18b70:	pop	{r4, r5, fp, pc}
   18b74:	push	{r4, r5, r6, r7, fp, lr}
   18b78:	add	fp, sp, #16
   18b7c:	sub	sp, sp, #24
   18b80:	mov	r7, r1
   18b84:	mov	r6, r0
   18b88:	mov	r0, #0
   18b8c:	str	r0, [sp, #20]
   18b90:	str	r0, [sp, #16]
   18b94:	str	r0, [sp, #12]
   18b98:	str	r0, [r3]
   18b9c:	str	r0, [r3, #4]
   18ba0:	cmp	r1, r2
   18ba4:	beq	18bfc <main@@Base+0x5700>
   18ba8:	mov	r5, r3
   18bac:	mov	r4, r2
   18bb0:	add	r0, sp, #16
   18bb4:	str	r0, [sp]
   18bb8:	add	r3, sp, #12
   18bbc:	mov	r0, r6
   18bc0:	mov	r1, r7
   18bc4:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   18bc8:	mov	r1, r0
   18bcc:	cmp	r0, r7
   18bd0:	beq	18bf8 <main@@Base+0x56fc>
   18bd4:	ldr	r3, [sp, #12]
   18bd8:	ldr	r0, [sp, #16]
   18bdc:	ldr	r2, [sp, #20]
   18be0:	stm	sp, {r0, r2, r5}
   18be4:	mov	r0, r6
   18be8:	mov	r2, r4
   18bec:	bl	1c8b0 <main@@Base+0x93b4>
   18bf0:	mov	r7, r0
   18bf4:	b	18bfc <main@@Base+0x5700>
   18bf8:	mov	r7, r1
   18bfc:	mov	r0, r7
   18c00:	sub	sp, fp, #16
   18c04:	pop	{r4, r5, r6, r7, fp, pc}
   18c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c0c:	add	fp, sp, #28
   18c10:	sub	sp, sp, #44	; 0x2c
   18c14:	mov	r4, r3
   18c18:	mov	r7, r2
   18c1c:	mov	r5, r0
   18c20:	mov	r9, #0
   18c24:	str	r9, [sp, #36]	; 0x24
   18c28:	str	r9, [sp, #32]
   18c2c:	ldr	r0, [fp, #8]
   18c30:	str	r9, [r0]
   18c34:	str	r9, [r0, #4]
   18c38:	mov	r0, r5
   18c3c:	bl	199c4 <main@@Base+0x64c8>
   18c40:	mov	r6, r0
   18c44:	cmp	r0, r7
   18c48:	beq	18d28 <main@@Base+0x582c>
   18c4c:	add	sl, r4, #4
   18c50:	add	r8, sp, #20
   18c54:	str	sl, [sp, #12]
   18c58:	ldr	r4, [sl, #-4]
   18c5c:	add	r0, sp, #24
   18c60:	str	r0, [sp]
   18c64:	add	r0, sp, #16
   18c68:	str	r0, [sp, #4]
   18c6c:	mov	r0, r5
   18c70:	mov	r1, r6
   18c74:	mov	r2, r7
   18c78:	mov	r3, r8
   18c7c:	blx	r4
   18c80:	mov	r4, r0
   18c84:	cmp	r0, r7
   18c88:	beq	18d48 <main@@Base+0x584c>
   18c8c:	cmp	r4, r6
   18c90:	bne	18ca8 <main@@Base+0x57ac>
   18c94:	ldr	r0, [sl], #4
   18c98:	cmp	r0, #0
   18c9c:	mov	r6, r4
   18ca0:	bne	18c58 <main@@Base+0x575c>
   18ca4:	b	18d30 <main@@Base+0x5834>
   18ca8:	cmp	r9, #0
   18cac:	beq	18cbc <main@@Base+0x57c0>
   18cb0:	ldr	r0, [r5, #12]
   18cb4:	cmp	r0, #0
   18cb8:	bne	18d5c <main@@Base+0x5860>
   18cbc:	ldr	r3, [sp, #20]
   18cc0:	ldr	r0, [sp, #24]
   18cc4:	ldr	r1, [sp, #28]
   18cc8:	stm	sp, {r0, r1}
   18ccc:	add	r0, sp, #32
   18cd0:	str	r0, [sp, #8]
   18cd4:	mov	r0, r5
   18cd8:	mov	r1, r4
   18cdc:	mov	r2, r7
   18ce0:	bl	1c8b0 <main@@Base+0x93b4>
   18ce4:	cmp	r0, r7
   18ce8:	beq	18d54 <main@@Base+0x5858>
   18cec:	add	r9, r9, #1
   18cf0:	ldr	r0, [fp, #8]
   18cf4:	mov	r6, r0
   18cf8:	ldrd	r0, [r0]
   18cfc:	ldr	r2, [sp, #32]
   18d00:	ldr	r3, [sp, #36]	; 0x24
   18d04:	adds	r0, r0, r2
   18d08:	adc	r1, r1, r3
   18d0c:	strd	r0, [r6]
   18d10:	ldr	r0, [sp, #16]
   18d14:	cmp	r0, #0
   18d18:	mov	r6, r4
   18d1c:	ldr	sl, [sp, #12]
   18d20:	bne	18c58 <main@@Base+0x575c>
   18d24:	b	18d48 <main@@Base+0x584c>
   18d28:	mov	r4, r6
   18d2c:	b	18d48 <main@@Base+0x584c>
   18d30:	mov	r0, r5
   18d34:	mov	r1, r4
   18d38:	mov	r2, r7
   18d3c:	mov	r3, #23
   18d40:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   18d44:	mov	r4, r0
   18d48:	mov	r0, r4
   18d4c:	sub	sp, fp, #28
   18d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d54:	mov	r4, r7
   18d58:	b	18d48 <main@@Base+0x584c>
   18d5c:	mov	r0, r5
   18d60:	mov	r1, r4
   18d64:	mov	r2, r7
   18d68:	mov	r3, #14
   18d6c:	b	18d40 <main@@Base+0x5844>
   18d70:	push	{r4, r6, r7, sl, fp, lr}
   18d74:	add	fp, sp, #16
   18d78:	mov	r1, r3
   18d7c:	mov	r6, r2
   18d80:	mov	r4, r0
   18d84:	mov	r0, r2
   18d88:	bl	1c8d4 <main@@Base+0x93d8>
   18d8c:	mov	r7, r1
   18d90:	strd	r6, [r4]
   18d94:	pop	{r4, r6, r7, sl, fp, pc}
   18d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d9c:	add	fp, sp, #28
   18da0:	sub	sp, sp, #44	; 0x2c
   18da4:	mov	r4, r3
   18da8:	mov	r7, r2
   18dac:	mov	r5, r0
   18db0:	mov	r9, #0
   18db4:	str	r9, [sp, #36]	; 0x24
   18db8:	str	r9, [sp, #32]
   18dbc:	ldr	r0, [fp, #8]
   18dc0:	str	r9, [r0]
   18dc4:	str	r9, [r0, #4]
   18dc8:	mov	r0, r5
   18dcc:	bl	199c4 <main@@Base+0x64c8>
   18dd0:	mov	r6, r0
   18dd4:	cmp	r0, r7
   18dd8:	beq	18e9c <main@@Base+0x59a0>
   18ddc:	add	sl, r4, #4
   18de0:	add	r8, sp, #20
   18de4:	str	sl, [sp, #12]
   18de8:	ldr	r4, [sl, #-4]
   18dec:	add	r0, sp, #24
   18df0:	str	r0, [sp]
   18df4:	add	r0, sp, #16
   18df8:	str	r0, [sp, #4]
   18dfc:	mov	r0, r5
   18e00:	mov	r1, r6
   18e04:	mov	r2, r7
   18e08:	mov	r3, r8
   18e0c:	blx	r4
   18e10:	mov	r4, r0
   18e14:	cmp	r0, r7
   18e18:	beq	18ebc <main@@Base+0x59c0>
   18e1c:	cmp	r4, r6
   18e20:	bne	18e38 <main@@Base+0x593c>
   18e24:	ldr	r0, [sl], #4
   18e28:	cmp	r0, #0
   18e2c:	mov	r6, r4
   18e30:	bne	18de8 <main@@Base+0x58ec>
   18e34:	b	18ea4 <main@@Base+0x59a8>
   18e38:	cmp	r9, #0
   18e3c:	beq	18e4c <main@@Base+0x5950>
   18e40:	ldr	r0, [r5, #12]
   18e44:	cmp	r0, #0
   18e48:	bne	18ed0 <main@@Base+0x59d4>
   18e4c:	add	r3, sp, #20
   18e50:	ldm	r3, {r1, r2, r3}
   18e54:	add	r0, sp, #32
   18e58:	str	r0, [sp]
   18e5c:	mov	r0, r4
   18e60:	bl	1c8d8 <main@@Base+0x93dc>
   18e64:	cmp	r4, r7
   18e68:	beq	18ec8 <main@@Base+0x59cc>
   18e6c:	add	r9, r9, #1
   18e70:	vldr	d16, [sp, #32]
   18e74:	ldr	r0, [fp, #8]
   18e78:	vldr	d17, [r0]
   18e7c:	vadd.f64	d16, d16, d17
   18e80:	vstr	d16, [r0]
   18e84:	ldr	r0, [sp, #16]
   18e88:	cmp	r0, #0
   18e8c:	mov	r6, r4
   18e90:	ldr	sl, [sp, #12]
   18e94:	bne	18de8 <main@@Base+0x58ec>
   18e98:	b	18ebc <main@@Base+0x59c0>
   18e9c:	mov	r4, r6
   18ea0:	b	18ebc <main@@Base+0x59c0>
   18ea4:	mov	r0, r5
   18ea8:	mov	r1, r4
   18eac:	mov	r2, r7
   18eb0:	mov	r3, #23
   18eb4:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   18eb8:	mov	r4, r0
   18ebc:	mov	r0, r4
   18ec0:	sub	sp, fp, #28
   18ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ec8:	mov	r4, r7
   18ecc:	b	18ebc <main@@Base+0x59c0>
   18ed0:	mov	r0, r5
   18ed4:	mov	r1, r4
   18ed8:	mov	r2, r7
   18edc:	mov	r3, #14
   18ee0:	b	18eb4 <main@@Base+0x59b8>
   18ee4:	push	{r4, sl, fp, lr}
   18ee8:	add	fp, sp, #8
   18eec:	mov	r4, r0
   18ef0:	bl	1c918 <main@@Base+0x941c>
   18ef4:	vstr	d0, [r4]
   18ef8:	pop	{r4, sl, fp, pc}
   18efc:	push	{r4, r5, r6, sl, fp, lr}
   18f00:	add	fp, sp, #16
   18f04:	mov	r6, r3
   18f08:	mov	r4, r2
   18f0c:	mov	r5, r0
   18f10:	bl	18fbc <main@@Base+0x5ac0>
   18f14:	mov	r1, r0
   18f18:	cmp	r0, r4
   18f1c:	beq	18f60 <main@@Base+0x5a64>
   18f20:	ldrb	r0, [r1]
   18f24:	cmp	r0, #44	; 0x2c
   18f28:	bne	18f68 <main@@Base+0x5a6c>
   18f2c:	add	r1, r1, #1
   18f30:	mov	r0, r5
   18f34:	mov	r2, r4
   18f38:	bl	18fbc <main@@Base+0x5ac0>
   18f3c:	mov	r1, r0
   18f40:	cmp	r0, r4
   18f44:	beq	18f90 <main@@Base+0x5a94>
   18f48:	ldrb	r0, [r1]
   18f4c:	cmp	r0, #125	; 0x7d
   18f50:	bne	18fac <main@@Base+0x5ab0>
   18f54:	mov	r0, #0
   18f58:	str	r0, [r6]
   18f5c:	b	18f7c <main@@Base+0x5a80>
   18f60:	mov	r0, #0
   18f64:	b	18fb0 <main@@Base+0x5ab4>
   18f68:	mov	r0, #0
   18f6c:	str	r0, [r6]
   18f70:	ldrb	r0, [r1]
   18f74:	cmp	r0, #125	; 0x7d
   18f78:	bne	18f98 <main@@Base+0x5a9c>
   18f7c:	add	r1, r1, #1
   18f80:	mov	r0, r5
   18f84:	mov	r2, r4
   18f88:	pop	{r4, r5, r6, sl, fp, lr}
   18f8c:	b	18fbc <main@@Base+0x5ac0>
   18f90:	mov	r0, #0
   18f94:	str	r0, [r6]
   18f98:	mov	r0, r5
   18f9c:	mov	r2, r4
   18fa0:	mov	r3, #10
   18fa4:	pop	{r4, r5, r6, sl, fp, lr}
   18fa8:	b	208a0 <flatcc_json_parser_set_error@@Base>
   18fac:	mov	r0, #1
   18fb0:	str	r0, [r6]
   18fb4:	mov	r0, r1
   18fb8:	pop	{r4, r5, r6, sl, fp, pc}
   18fbc:	sub	r3, r2, r1
   18fc0:	cmp	r3, #2
   18fc4:	blt	18ff0 <main@@Base+0x5af4>
   18fc8:	ldrb	r3, [r1]
   18fcc:	cmp	r3, #32
   18fd0:	movhi	r0, r1
   18fd4:	bxhi	lr
   18fd8:	bne	18ff0 <main@@Base+0x5af4>
   18fdc:	mov	ip, r1
   18fe0:	ldrb	r3, [ip, #1]!
   18fe4:	cmp	r3, #32
   18fe8:	movhi	r0, ip
   18fec:	bxhi	lr
   18ff0:	b	20928 <flatcc_json_parser_space_ext@@Base>
   18ff4:	mov	ip, r0
   18ff8:	sub	r0, r1, r0
   18ffc:	cmp	r0, #8
   19000:	movcs	r0, #8
   19004:	sub	r3, r0, #1
   19008:	mov	r1, #0
   1900c:	mov	r0, #0
   19010:	cmp	r3, #7
   19014:	bxhi	lr
   19018:	add	r2, pc, #0
   1901c:	ldr	pc, [r2, r3, lsl #2]
   19020:	andeq	r9, r1, r4, ror r0
   19024:	andeq	r9, r1, ip, rrx
   19028:	andeq	r9, r1, r4, rrx
   1902c:	andeq	r9, r1, ip, asr r0
   19030:	andeq	r9, r1, r4, asr r0
   19034:	andeq	r9, r1, ip, asr #32
   19038:	andeq	r9, r1, r4, asr #32
   1903c:	andeq	r9, r1, r0, asr #32
   19040:	ldrb	r0, [ip, #7]
   19044:	ldrb	r2, [ip, #6]
   19048:	orr	r0, r0, r2, lsl #8
   1904c:	ldrb	r2, [ip, #5]
   19050:	orr	r0, r0, r2, lsl #16
   19054:	ldrb	r2, [ip, #4]
   19058:	orr	r0, r0, r2, lsl #24
   1905c:	ldrb	r2, [ip, #3]
   19060:	orr	r1, r2, r1
   19064:	ldrb	r2, [ip, #2]
   19068:	orr	r1, r1, r2, lsl #8
   1906c:	ldrb	r2, [ip, #1]
   19070:	orr	r1, r1, r2, lsl #16
   19074:	ldrb	r2, [ip]
   19078:	orr	r1, r1, r2, lsl #24
   1907c:	bx	lr
   19080:	sub	r1, r1, r0
   19084:	cmp	r1, r2
   19088:	bxle	lr
   1908c:	mov	r1, r0
   19090:	ldrb	r2, [r1, r2]!
   19094:	cmp	r2, #46	; 0x2e
   19098:	addeq	r0, r1, #1
   1909c:	bx	lr
   190a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   190a4:	add	fp, sp, #24
   190a8:	sub	sp, sp, #8
   190ac:	mov	r8, r3
   190b0:	mov	r6, r2
   190b4:	mov	r5, r1
   190b8:	mov	r7, r0
   190bc:	mov	r0, r1
   190c0:	mov	r1, r2
   190c4:	bl	15d14 <main@@Base+0x2818>
   190c8:	movw	r2, #20577	; 0x5061
   190cc:	movt	r2, #18798	; 0x496e
   190d0:	eor	r2, r1, r2
   190d4:	movw	r3, #28276	; 0x6e74
   190d8:	movt	r3, #29285	; 0x7265
   190dc:	eor	r0, r0, r3
   190e0:	orrs	r0, r0, r2
   190e4:	ldr	r9, [fp, #12]
   190e8:	bne	1915c <main@@Base+0x5c60>
   190ec:	add	r0, r5, #8
   190f0:	mov	r1, r6
   190f4:	bl	15d14 <main@@Base+0x2818>
   190f8:	movw	r2, #28005	; 0x6d65
   190fc:	movt	r2, #20065	; 0x4e61
   19100:	eor	r1, r1, r2
   19104:	movw	r2, #24931	; 0x6163
   19108:	movt	r2, #29552	; 0x7370
   1910c:	eor	r0, r0, r2
   19110:	orrs	r0, r0, r1
   19114:	bne	191ac <main@@Base+0x5cb0>
   19118:	add	r4, r5, #16
   1911c:	mov	r0, r4
   19120:	mov	r1, r6
   19124:	bl	15d14 <main@@Base+0x2818>
   19128:	and	r0, r1, #-16777216	; 0xff000000
   1912c:	teq	r0, #1694498816	; 0x65000000
   19130:	bne	191ac <main@@Base+0x5cb0>
   19134:	str	r9, [sp]
   19138:	mov	r9, #1
   1913c:	mov	r0, r7
   19140:	mov	r1, r4
   19144:	mov	r2, r6
   19148:	mov	r3, #1
   1914c:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19150:	cmp	r0, r4
   19154:	bne	19190 <main@@Base+0x5c94>
   19158:	b	191ac <main@@Base+0x5cb0>
   1915c:	movw	r0, #20037	; 0x4e45
   19160:	movt	r0, #20047	; 0x4e4f
   19164:	teq	r1, r0
   19168:	bne	191ac <main@@Base+0x5cb0>
   1916c:	str	r9, [sp]
   19170:	mov	r0, r7
   19174:	mov	r1, r5
   19178:	mov	r2, r6
   1917c:	mov	r3, #4
   19180:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19184:	cmp	r0, r5
   19188:	beq	191ac <main@@Base+0x5cb0>
   1918c:	mov	r9, #0
   19190:	mov	r1, #0
   19194:	mov	r5, r0
   19198:	ldr	r0, [fp, #8]
   1919c:	str	r9, [r0]
   191a0:	str	r1, [r0, #4]
   191a4:	mov	r0, #0
   191a8:	str	r0, [r8]
   191ac:	mov	r0, r5
   191b0:	sub	sp, fp, #24
   191b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   191b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   191bc:	add	fp, sp, #24
   191c0:	sub	sp, sp, #8
   191c4:	mov	r9, r3
   191c8:	mov	r6, r2
   191cc:	mov	r5, r1
   191d0:	mov	r7, r0
   191d4:	mov	r0, r1
   191d8:	mov	r1, r2
   191dc:	bl	15d14 <main@@Base+0x2818>
   191e0:	ldr	r2, [fp, #12]
   191e4:	ldr	r8, [fp, #8]
   191e8:	movw	r3, #30769	; 0x7831
   191ec:	movt	r3, #26725	; 0x6865
   191f0:	cmp	r1, r3
   191f4:	bhi	1922c <main@@Base+0x5d30>
   191f8:	teq	r1, r3
   191fc:	bne	192d4 <main@@Base+0x5dd8>
   19200:	str	r2, [sp]
   19204:	mov	r0, r7
   19208:	mov	r1, r5
   1920c:	mov	r2, r6
   19210:	mov	r3, #4
   19214:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19218:	cmp	r0, r5
   1921c:	beq	192d4 <main@@Base+0x5dd8>
   19220:	mov	r1, #0
   19224:	mov	r2, #3
   19228:	b	192c4 <main@@Base+0x5dc8>
   1922c:	movw	r3, #26725	; 0x6865
   19230:	eor	r3, r3, r1, lsr #16
   19234:	lsr	r0, r0, #16
   19238:	orr	r0, r0, r1, lsl #16
   1923c:	movw	r4, #25959	; 0x6567
   19240:	movt	r4, #30830	; 0x786e
   19244:	eor	r0, r0, r4
   19248:	orrs	r0, r0, r3
   1924c:	bne	19288 <main@@Base+0x5d8c>
   19250:	str	r2, [sp]
   19254:	mov	r0, r7
   19258:	mov	r1, r5
   1925c:	mov	r2, r6
   19260:	mov	r3, #6
   19264:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19268:	cmp	r0, r5
   1926c:	beq	192d4 <main@@Base+0x5dd8>
   19270:	mvn	r1, #0
   19274:	mvn	r2, #1
   19278:	str	r2, [r8]
   1927c:	str	r1, [r8, #4]
   19280:	mov	r1, #1
   19284:	b	192cc <main@@Base+0x5dd0>
   19288:	movw	r0, #30770	; 0x7832
   1928c:	movt	r0, #26725	; 0x6865
   19290:	teq	r1, r0
   19294:	bne	192d4 <main@@Base+0x5dd8>
   19298:	str	r2, [sp]
   1929c:	mov	r0, r7
   192a0:	mov	r1, r5
   192a4:	mov	r2, r6
   192a8:	mov	r3, #4
   192ac:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   192b0:	cmp	r0, r5
   192b4:	beq	192d4 <main@@Base+0x5dd8>
   192b8:	mov	r1, #0
   192bc:	movw	r2, #48815	; 0xbeaf
   192c0:	movt	r2, #32431	; 0x7eaf
   192c4:	str	r2, [r8]
   192c8:	str	r1, [r8, #4]
   192cc:	str	r1, [r9]
   192d0:	mov	r5, r0
   192d4:	mov	r0, r5
   192d8:	sub	sp, fp, #24
   192dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   192e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   192e4:	add	fp, sp, #24
   192e8:	sub	sp, sp, #8
   192ec:	mov	r9, r3
   192f0:	mov	r6, r2
   192f4:	mov	r5, r1
   192f8:	mov	r7, r0
   192fc:	mov	r0, r1
   19300:	mov	r1, r2
   19304:	bl	15d14 <main@@Base+0x2818>
   19308:	ldr	ip, [fp, #12]
   1930c:	ldr	r8, [fp, #8]
   19310:	movw	r3, #29745	; 0x7431
   19314:	movt	r3, #26990	; 0x696e
   19318:	cmp	r1, r3
   1931c:	bhi	19354 <main@@Base+0x5e58>
   19320:	teq	r1, r3
   19324:	bne	19448 <main@@Base+0x5f4c>
   19328:	str	ip, [sp]
   1932c:	mov	r0, r7
   19330:	mov	r1, r5
   19334:	mov	r2, r6
   19338:	mov	r3, #4
   1933c:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19340:	cmp	r0, r5
   19344:	beq	19448 <main@@Base+0x5f4c>
   19348:	mov	r1, #0
   1934c:	mov	r2, #2
   19350:	b	193a8 <main@@Base+0x5eac>
   19354:	movw	r4, #29806	; 0x746e
   19358:	movt	r4, #26990	; 0x696e
   1935c:	movw	r3, #0
   19360:	movt	r3, #25959	; 0x6567
   19364:	subs	r2, r0, r3
   19368:	sbcs	r2, r1, r4
   1936c:	bcs	193b4 <main@@Base+0x5eb8>
   19370:	movw	r0, #29746	; 0x7432
   19374:	movt	r0, #26990	; 0x696e
   19378:	teq	r1, r0
   1937c:	bne	19448 <main@@Base+0x5f4c>
   19380:	str	ip, [sp]
   19384:	mov	r0, r7
   19388:	mov	r1, r5
   1938c:	mov	r2, r6
   19390:	mov	r3, #4
   19394:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19398:	cmp	r0, r5
   1939c:	beq	19448 <main@@Base+0x5f4c>
   193a0:	mov	r1, #0
   193a4:	mov	r2, #42	; 0x2a
   193a8:	str	r2, [r8]
   193ac:	str	r1, [r8, #4]
   193b0:	b	19440 <main@@Base+0x5f44>
   193b4:	eor	r1, r1, r4
   193b8:	add	r2, r3, #12800	; 0x3200
   193bc:	bic	r4, r0, #255	; 0xff
   193c0:	eor	r2, r4, r2
   193c4:	orrs	r2, r2, r1
   193c8:	bne	193fc <main@@Base+0x5f00>
   193cc:	str	ip, [sp]
   193d0:	mov	r0, r7
   193d4:	mov	r1, r5
   193d8:	mov	r2, r6
   193dc:	mov	r3, #7
   193e0:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   193e4:	cmp	r0, r5
   193e8:	beq	19448 <main@@Base+0x5f4c>
   193ec:	mvn	r1, #0
   193f0:	mvn	r2, #1
   193f4:	orr	r2, r2, #1
   193f8:	b	19434 <main@@Base+0x5f38>
   193fc:	bfc	r0, #0, #16
   19400:	eor	r0, r0, r3
   19404:	orrs	r0, r0, r1
   19408:	bne	19448 <main@@Base+0x5f4c>
   1940c:	str	ip, [sp]
   19410:	mov	r0, r7
   19414:	mov	r1, r5
   19418:	mov	r2, r6
   1941c:	mov	r3, #6
   19420:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19424:	cmp	r0, r5
   19428:	beq	19448 <main@@Base+0x5f4c>
   1942c:	mvn	r1, #0
   19430:	mvn	r2, #1
   19434:	str	r2, [r8]
   19438:	str	r1, [r8, #4]
   1943c:	mov	r1, #1
   19440:	str	r1, [r9]
   19444:	mov	r5, r0
   19448:	mov	r0, r5
   1944c:	sub	sp, fp, #24
   19450:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19454:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19458:	add	fp, sp, #24
   1945c:	sub	sp, sp, #8
   19460:	mov	r4, r3
   19464:	mov	r6, r2
   19468:	mov	r5, r1
   1946c:	mov	r7, r0
   19470:	mov	r0, r1
   19474:	mov	r1, r2
   19478:	bl	15d14 <main@@Base+0x2818>
   1947c:	ldr	r0, [fp, #12]
   19480:	ldr	r8, [fp, #8]
   19484:	movw	r2, #26417	; 0x6731
   19488:	movt	r2, #28261	; 0x6e65
   1948c:	cmp	r1, r2
   19490:	bhi	194c8 <main@@Base+0x5fcc>
   19494:	teq	r1, r2
   19498:	bne	19558 <main@@Base+0x605c>
   1949c:	str	r0, [sp]
   194a0:	mov	r0, r7
   194a4:	mov	r1, r5
   194a8:	mov	r2, r6
   194ac:	mov	r3, #4
   194b0:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   194b4:	cmp	r0, r5
   194b8:	beq	19558 <main@@Base+0x605c>
   194bc:	mvn	r1, #0
   194c0:	mvn	r2, #11
   194c4:	b	19544 <main@@Base+0x6048>
   194c8:	movw	r2, #26418	; 0x6732
   194cc:	movt	r2, #28261	; 0x6e65
   194d0:	teq	r1, r2
   194d4:	beq	19518 <main@@Base+0x601c>
   194d8:	movw	r2, #26419	; 0x6733
   194dc:	movt	r2, #28261	; 0x6e65
   194e0:	teq	r1, r2
   194e4:	bne	19558 <main@@Base+0x605c>
   194e8:	str	r0, [sp]
   194ec:	mov	r0, r7
   194f0:	mov	r1, r5
   194f4:	mov	r2, r6
   194f8:	mov	r3, #4
   194fc:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19500:	cmp	r0, r5
   19504:	beq	19558 <main@@Base+0x605c>
   19508:	mvn	r1, #0
   1950c:	mvn	r2, #11
   19510:	orr	r2, r2, #2
   19514:	b	19544 <main@@Base+0x6048>
   19518:	str	r0, [sp]
   1951c:	mov	r0, r7
   19520:	mov	r1, r5
   19524:	mov	r2, r6
   19528:	mov	r3, #4
   1952c:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19530:	cmp	r0, r5
   19534:	beq	19558 <main@@Base+0x605c>
   19538:	mvn	r1, #0
   1953c:	mvn	r2, #11
   19540:	orr	r2, r2, #1
   19544:	str	r2, [r8]
   19548:	str	r1, [r8, #4]
   1954c:	mov	r1, #1
   19550:	str	r1, [r4]
   19554:	mov	r5, r0
   19558:	mov	r0, r5
   1955c:	sub	sp, fp, #24
   19560:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19564:	push	{r4, r5, r6, r7, fp, lr}
   19568:	add	fp, sp, #16
   1956c:	sub	sp, sp, #8
   19570:	mov	r4, r3
   19574:	mov	r6, r2
   19578:	mov	r5, r1
   1957c:	mov	r7, r0
   19580:	mov	r0, r1
   19584:	mov	r1, r2
   19588:	bl	15d14 <main@@Base+0x2818>
   1958c:	and	r0, r1, #-16777216	; 0xff000000
   19590:	teq	r0, #2013265920	; 0x78000000
   19594:	bne	195d4 <main@@Base+0x60d8>
   19598:	ldr	r0, [fp, #12]
   1959c:	str	r0, [sp]
   195a0:	mov	r0, r7
   195a4:	mov	r1, r5
   195a8:	mov	r2, r6
   195ac:	mov	r3, #1
   195b0:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   195b4:	cmp	r0, r5
   195b8:	beq	195d4 <main@@Base+0x60d8>
   195bc:	ldr	r1, [fp, #8]
   195c0:	mov	r2, #0
   195c4:	str	r2, [r1]
   195c8:	str	r2, [r1, #4]
   195cc:	str	r2, [r4]
   195d0:	mov	r5, r0
   195d4:	mov	r0, r5
   195d8:	sub	sp, fp, #16
   195dc:	pop	{r4, r5, r6, r7, fp, pc}
   195e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195e4:	add	fp, sp, #28
   195e8:	sub	sp, sp, #4
   195ec:	mov	r9, r3
   195f0:	mov	r6, r2
   195f4:	mov	r5, r1
   195f8:	mov	sl, r0
   195fc:	mov	r0, r1
   19600:	mov	r1, r2
   19604:	bl	15d14 <main@@Base+0x2818>
   19608:	ldr	lr, [fp, #12]
   1960c:	ldr	r8, [fp, #8]
   19610:	movw	r2, #20036	; 0x4e44
   19614:	movt	r2, #20047	; 0x4e4f
   19618:	cmp	r1, r2
   1961c:	bhi	19684 <main@@Base+0x6188>
   19620:	and	r2, r0, #-16777216	; 0xff000000
   19624:	movw	r4, #28523	; 0x6f6b
   19628:	movt	r4, #17007	; 0x426f
   1962c:	movw	r3, #28160	; 0x6e00
   19630:	movt	r3, #18017	; 0x4661
   19634:	subs	r7, r0, r3
   19638:	sbcs	r7, r1, r4
   1963c:	bcs	196d8 <main@@Base+0x61dc>
   19640:	movw	r0, #27756	; 0x6c6c
   19644:	movt	r0, #16997	; 0x4265
   19648:	eor	r0, r1, r0
   1964c:	eor	r1, r2, #1694498816	; 0x65000000
   19650:	orrs	r0, r1, r0
   19654:	bne	19814 <main@@Base+0x6318>
   19658:	str	lr, [sp]
   1965c:	mov	r0, sl
   19660:	mov	r1, r5
   19664:	mov	r2, r6
   19668:	mov	r3, #5
   1966c:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19670:	cmp	r0, r5
   19674:	beq	19814 <main@@Base+0x6318>
   19678:	mov	r1, #0
   1967c:	mov	r2, #9
   19680:	b	19804 <main@@Base+0x6308>
   19684:	movw	r3, #26725	; 0x6865
   19688:	movt	r3, #20340	; 0x4f74
   1968c:	mvn	r2, #-1912602624	; 0x8e000000
   19690:	subs	r2, r2, r0
   19694:	sbcs	r2, r3, r1
   19698:	bcc	1971c <main@@Base+0x6220>
   1969c:	movw	r0, #20037	; 0x4e45
   196a0:	movt	r0, #20047	; 0x4e4f
   196a4:	teq	r1, r0
   196a8:	bne	19814 <main@@Base+0x6318>
   196ac:	str	lr, [sp]
   196b0:	mov	r0, sl
   196b4:	mov	r1, r5
   196b8:	mov	r2, r6
   196bc:	mov	r3, #4
   196c0:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   196c4:	cmp	r0, r5
   196c8:	beq	19814 <main@@Base+0x6318>
   196cc:	mov	r1, #0
   196d0:	str	r1, [r8]
   196d4:	b	19808 <main@@Base+0x630c>
   196d8:	movw	r7, #19553	; 0x4c61
   196dc:	movt	r7, #19829	; 0x4d75
   196e0:	eor	r7, r1, r7
   196e4:	eor	r2, r2, #1845493760	; 0x6e000000
   196e8:	orrs	r2, r2, r7
   196ec:	bne	19778 <main@@Base+0x627c>
   196f0:	str	lr, [sp]
   196f4:	mov	r0, sl
   196f8:	mov	r1, r5
   196fc:	mov	r2, r6
   19700:	mov	r3, #5
   19704:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19708:	cmp	r0, r5
   1970c:	beq	19814 <main@@Base+0x6318>
   19710:	mov	r1, #0
   19714:	mov	r2, #2
   19718:	b	19804 <main@@Base+0x6308>
   1971c:	movw	ip, #28789	; 0x7075
   19720:	movt	ip, #21089	; 0x5261
   19724:	movw	r4, #25964	; 0x656c
   19728:	movt	r4, #28282	; 0x6e7a
   1972c:	subs	r2, r0, r4
   19730:	sbcs	r2, r1, ip
   19734:	bcs	197b8 <main@@Base+0x62bc>
   19738:	eor	r1, r1, r3
   1973c:	and	r0, r0, #-16777216	; 0xff000000
   19740:	eor	r0, r0, #1912602624	; 0x72000000
   19744:	orrs	r0, r0, r1
   19748:	bne	19814 <main@@Base+0x6318>
   1974c:	str	lr, [sp]
   19750:	mov	r0, sl
   19754:	mov	r1, r5
   19758:	mov	r2, r6
   1975c:	mov	r3, #5
   19760:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19764:	cmp	r0, r5
   19768:	beq	19814 <main@@Base+0x6318>
   1976c:	mov	r1, #0
   19770:	mov	r2, #11
   19774:	b	19804 <main@@Base+0x6308>
   19778:	eor	r1, r1, r4
   1977c:	bic	r0, r0, #255	; 0xff
   19780:	eor	r0, r0, r3
   19784:	orrs	r0, r0, r1
   19788:	bne	19814 <main@@Base+0x6318>
   1978c:	str	lr, [sp]
   19790:	mov	r0, sl
   19794:	mov	r1, r5
   19798:	mov	r2, r6
   1979c:	mov	r3, #7
   197a0:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   197a4:	cmp	r0, r5
   197a8:	beq	19814 <main@@Base+0x6318>
   197ac:	mov	r1, #0
   197b0:	mov	r2, #10
   197b4:	b	19804 <main@@Base+0x6308>
   197b8:	movw	r2, #21870	; 0x556e
   197bc:	eor	r2, r2, r1, lsr #16
   197c0:	lsr	r3, r0, #16
   197c4:	orr	r3, r3, r1, lsl #16
   197c8:	movw	r7, #25956	; 0x6564
   197cc:	movt	r7, #30067	; 0x7573
   197d0:	eor	r3, r3, r7
   197d4:	orrs	r2, r3, r2
   197d8:	bne	19820 <main@@Base+0x6324>
   197dc:	str	lr, [sp]
   197e0:	mov	r0, sl
   197e4:	mov	r1, r5
   197e8:	mov	r2, r6
   197ec:	mov	r3, #6
   197f0:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   197f4:	cmp	r0, r5
   197f8:	beq	19814 <main@@Base+0x6318>
   197fc:	mov	r1, #0
   19800:	mov	r2, #255	; 0xff
   19804:	str	r2, [r8]
   19808:	str	r1, [r8, #4]
   1980c:	str	r1, [r9]
   19810:	mov	r5, r0
   19814:	mov	r0, r5
   19818:	sub	sp, fp, #28
   1981c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19820:	eor	r0, r0, r4
   19824:	eor	r1, r1, ip
   19828:	orrs	r0, r0, r1
   1982c:	bne	19814 <main@@Base+0x6318>
   19830:	str	lr, [sp]
   19834:	mov	r4, #8
   19838:	mov	r0, sl
   1983c:	mov	r1, r5
   19840:	mov	r2, r6
   19844:	mov	r3, #8
   19848:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   1984c:	cmp	r0, r5
   19850:	beq	19814 <main@@Base+0x6318>
   19854:	mov	r5, #0
   19858:	strd	r4, [r8]
   1985c:	str	r5, [r9]
   19860:	b	19810 <main@@Base+0x6314>
   19864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19868:	add	fp, sp, #28
   1986c:	sub	sp, sp, #4
   19870:	mov	r8, r3
   19874:	mov	r6, r2
   19878:	mov	r5, r1
   1987c:	mov	r9, r0
   19880:	mov	r0, r1
   19884:	mov	r1, r2
   19888:	bl	15d14 <main@@Base+0x2818>
   1988c:	mov	r7, r0
   19890:	mov	r4, r1
   19894:	bic	r0, r1, #255	; 0xff
   19898:	ldr	sl, [fp, #12]
   1989c:	movw	r1, #28416	; 0x6f00
   198a0:	movt	r1, #18031	; 0x466f
   198a4:	teq	r0, r1
   198a8:	mov	r0, r5
   198ac:	bne	198dc <main@@Base+0x63e0>
   198b0:	str	sl, [sp]
   198b4:	mov	r0, r9
   198b8:	mov	r1, r5
   198bc:	mov	r2, r6
   198c0:	mov	r3, #3
   198c4:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   198c8:	cmp	r0, r5
   198cc:	beq	198dc <main@@Base+0x63e0>
   198d0:	mov	r3, #0
   198d4:	mov	r2, #17
   198d8:	b	19948 <main@@Base+0x644c>
   198dc:	movw	r1, #25942	; 0x6556
   198e0:	movt	r1, #30052	; 0x7564
   198e4:	eor	r1, r7, r1
   198e8:	movw	r2, #25452	; 0x636c
   198ec:	movt	r2, #18798	; 0x496e
   198f0:	eor	r2, r4, r2
   198f4:	orrs	r1, r1, r2
   198f8:	bne	1995c <main@@Base+0x6460>
   198fc:	add	r4, r0, #8
   19900:	mov	r0, r4
   19904:	mov	r1, r6
   19908:	bl	15d14 <main@@Base+0x2818>
   1990c:	bfc	r1, #0, #16
   19910:	movw	r0, #0
   19914:	movt	r0, #24940	; 0x616c
   19918:	teq	r1, r0
   1991c:	bne	1995c <main@@Base+0x6460>
   19920:	str	sl, [sp]
   19924:	mov	r0, r9
   19928:	mov	r1, r4
   1992c:	mov	r2, r6
   19930:	mov	r3, #2
   19934:	bl	20eec <flatcc_json_parser_match_constant@@Base>
   19938:	cmp	r0, r4
   1993c:	beq	1995c <main@@Base+0x6460>
   19940:	mov	r2, #0
   19944:	mov	r3, #0
   19948:	mov	r5, r0
   1994c:	ldr	r0, [fp, #8]
   19950:	strd	r2, [r0]
   19954:	mov	r0, #0
   19958:	str	r0, [r8]
   1995c:	mov	r0, r5
   19960:	sub	sp, fp, #28
   19964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19968:	push	{r4, sl, fp, lr}
   1996c:	add	fp, sp, #8
   19970:	ldr	r4, [fp, #12]
   19974:	ldr	ip, [fp, #8]
   19978:	ldr	lr, [fp, #16]
   1997c:	cmp	r3, #0
   19980:	beq	1999c <main@@Base+0x64a0>
   19984:	subs	r3, ip, #129	; 0x81
   19988:	sbcs	r3, r4, #0
   1998c:	bcc	199b4 <main@@Base+0x64b8>
   19990:	mov	r3, #8
   19994:	pop	{r4, sl, fp, lr}
   19998:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1999c:	subs	r3, ip, #128	; 0x80
   199a0:	sbcs	r3, r4, #0
   199a4:	bcc	199b8 <main@@Base+0x64bc>
   199a8:	mov	r3, #7
   199ac:	pop	{r4, sl, fp, lr}
   199b0:	b	208a0 <flatcc_json_parser_set_error@@Base>
   199b4:	rsb	ip, ip, #0
   199b8:	strb	ip, [lr]
   199bc:	mov	r0, r1
   199c0:	pop	{r4, sl, fp, pc}
   199c4:	push	{r4, r5, fp, lr}
   199c8:	add	fp, sp, #8
   199cc:	mov	r4, r2
   199d0:	mov	r5, r0
   199d4:	bl	15cd0 <main@@Base+0x27d4>
   199d8:	mov	r1, r0
   199dc:	ldr	r0, [r5, #12]
   199e0:	cmp	r0, #0
   199e4:	movne	r0, r1
   199e8:	popne	{r4, r5, fp, pc}
   199ec:	mov	r0, r5
   199f0:	mov	r2, r4
   199f4:	pop	{r4, r5, fp, lr}
   199f8:	b	18fbc <main@@Base+0x5ac0>
   199fc:	bx	lr
   19a00:	push	{fp, lr}
   19a04:	mov	fp, sp
   19a08:	cmp	r3, #0
   19a0c:	beq	19a1c <main@@Base+0x6520>
   19a10:	mov	r3, #8
   19a14:	pop	{fp, lr}
   19a18:	b	208a0 <flatcc_json_parser_set_error@@Base>
   19a1c:	ldr	ip, [fp, #12]
   19a20:	ldr	lr, [fp, #8]
   19a24:	subs	r3, lr, #256	; 0x100
   19a28:	sbcs	r3, ip, #0
   19a2c:	bcc	19a3c <main@@Base+0x6540>
   19a30:	mov	r3, #7
   19a34:	pop	{fp, lr}
   19a38:	b	208a0 <flatcc_json_parser_set_error@@Base>
   19a3c:	ldr	r0, [fp, #16]
   19a40:	strb	lr, [r0]
   19a44:	mov	r0, r1
   19a48:	pop	{fp, pc}
   19a4c:	bx	lr
   19a50:	push	{r4, sl, fp, lr}
   19a54:	add	fp, sp, #8
   19a58:	ldr	r4, [fp, #12]
   19a5c:	ldr	ip, [fp, #8]
   19a60:	ldr	lr, [fp, #16]
   19a64:	cmp	r3, #0
   19a68:	beq	19a88 <main@@Base+0x658c>
   19a6c:	movw	r3, #32769	; 0x8001
   19a70:	subs	r3, ip, r3
   19a74:	sbcs	r3, r4, #0
   19a78:	bcc	19aa0 <main@@Base+0x65a4>
   19a7c:	mov	r3, #8
   19a80:	pop	{r4, sl, fp, lr}
   19a84:	b	208a0 <flatcc_json_parser_set_error@@Base>
   19a88:	subs	r3, ip, #32768	; 0x8000
   19a8c:	sbcs	r3, r4, #0
   19a90:	bcc	19aa4 <main@@Base+0x65a8>
   19a94:	mov	r3, #7
   19a98:	pop	{r4, sl, fp, lr}
   19a9c:	b	208a0 <flatcc_json_parser_set_error@@Base>
   19aa0:	rsb	ip, ip, #0
   19aa4:	strh	ip, [lr]
   19aa8:	mov	r0, r1
   19aac:	pop	{r4, sl, fp, pc}
   19ab0:	bx	lr
   19ab4:	push	{r4, r5, r6, sl, fp, lr}
   19ab8:	add	fp, sp, #16
   19abc:	mov	r4, r2
   19ac0:	mov	r5, r1
   19ac4:	mov	r6, r0
   19ac8:	sub	r0, r2, r1
   19acc:	cmp	r0, #4
   19ad0:	blt	19af0 <main@@Base+0x65f4>
   19ad4:	movw	r1, #25394	; 0x6332
   19ad8:	movt	r1, #2
   19adc:	mov	r0, r5
   19ae0:	mov	r2, #4
   19ae4:	bl	12b34 <bcmp@plt>
   19ae8:	cmp	r0, #0
   19aec:	beq	19b08 <main@@Base+0x660c>
   19af0:	mov	r0, r6
   19af4:	mov	r1, r5
   19af8:	mov	r2, r4
   19afc:	mov	r3, #26
   19b00:	pop	{r4, r5, r6, sl, fp, lr}
   19b04:	b	208a0 <flatcc_json_parser_set_error@@Base>
   19b08:	add	r0, r5, #4
   19b0c:	pop	{r4, r5, r6, sl, fp, pc}
   19b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b14:	add	fp, sp, #28
   19b18:	sub	sp, sp, #20
   19b1c:	mov	r5, r3
   19b20:	mov	r4, r2
   19b24:	mov	r8, r1
   19b28:	mov	r9, r0
   19b2c:	mov	r0, #0
   19b30:	str	r0, [r3]
   19b34:	ldr	r0, [r9]
   19b38:	mov	r1, #4
   19b3c:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   19b40:	cmp	r0, #0
   19b44:	beq	19b6c <main@@Base+0x6670>
   19b48:	mov	r0, r9
   19b4c:	mov	r1, r8
   19b50:	mov	r2, r4
   19b54:	mov	r3, #33	; 0x21
   19b58:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   19b5c:	mov	r8, r0
   19b60:	mov	r0, r8
   19b64:	sub	sp, fp, #28
   19b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b6c:	add	r3, sp, #16
   19b70:	mov	r0, r9
   19b74:	mov	r1, r8
   19b78:	mov	r2, r4
   19b7c:	bl	15c40 <main@@Base+0x2744>
   19b80:	mov	r8, r0
   19b84:	ldr	r0, [sp, #16]
   19b88:	cmp	r0, #0
   19b8c:	str	r5, [sp, #8]
   19b90:	beq	19f48 <main@@Base+0x6a4c>
   19b94:	add	sl, sp, #13
   19b98:	add	r7, sp, #12
   19b9c:	b	19bd8 <main@@Base+0x66dc>
   19ba0:	mov	r0, r9
   19ba4:	mov	r1, r6
   19ba8:	mov	r2, r4
   19bac:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   19bb0:	mov	r8, r0
   19bb4:	mov	r0, r9
   19bb8:	mov	r1, r8
   19bbc:	mov	r2, r4
   19bc0:	add	r3, sp, #16
   19bc4:	bl	18efc <main@@Base+0x5a00>
   19bc8:	mov	r8, r0
   19bcc:	ldr	r0, [sp, #16]
   19bd0:	cmp	r0, #0
   19bd4:	beq	19f48 <main@@Base+0x6a4c>
   19bd8:	mov	r0, r9
   19bdc:	mov	r1, r8
   19be0:	mov	r2, r4
   19be4:	bl	15cd0 <main@@Base+0x27d4>
   19be8:	mov	r5, r0
   19bec:	mov	r1, r4
   19bf0:	bl	15d14 <main@@Base+0x2818>
   19bf4:	mov	r6, r1
   19bf8:	lsr	r1, r0, #16
   19bfc:	orr	r1, r1, r6, lsl #16
   19c00:	movw	r2, #29234	; 0x7232
   19c04:	movt	r2, #27759	; 0x6c6f
   19c08:	eor	r1, r1, r2
   19c0c:	movw	r2, #25455	; 0x636f
   19c10:	eor	r2, r2, r6, lsr #16
   19c14:	orrs	r1, r1, r2
   19c18:	bne	19c70 <main@@Base+0x6774>
   19c1c:	mov	r0, r9
   19c20:	mov	r1, r5
   19c24:	mov	r2, r4
   19c28:	mov	r3, #6
   19c2c:	bl	15d18 <main@@Base+0x281c>
   19c30:	mov	r7, r0
   19c34:	cmp	r5, r0
   19c38:	add	r5, sp, #15
   19c3c:	beq	19ce0 <main@@Base+0x67e4>
   19c40:	mov	r0, #0
   19c44:	strb	r0, [sp, #15]
   19c48:	mov	r0, r9
   19c4c:	mov	r1, r7
   19c50:	mov	r2, r4
   19c54:	mov	r3, r5
   19c58:	bl	16704 <main@@Base+0x3208>
   19c5c:	mov	r6, r0
   19c60:	cmp	r7, r0
   19c64:	beq	19dc0 <main@@Base+0x68c4>
   19c68:	mov	r8, r6
   19c6c:	b	19dec <main@@Base+0x68f0>
   19c70:	movw	r1, #27759	; 0x6c6f
   19c74:	movt	r1, #25455	; 0x636f
   19c78:	eor	r1, r6, r1
   19c7c:	and	r0, r0, #-16777216	; 0xff000000
   19c80:	eor	r0, r0, #1912602624	; 0x72000000
   19c84:	orrs	r0, r0, r1
   19c88:	bne	19ce8 <main@@Base+0x67ec>
   19c8c:	mov	r0, r9
   19c90:	mov	r1, r5
   19c94:	mov	r2, r4
   19c98:	mov	r3, #5
   19c9c:	bl	15d18 <main@@Base+0x281c>
   19ca0:	mov	r7, r0
   19ca4:	cmp	r5, r0
   19ca8:	beq	19ce0 <main@@Base+0x67e4>
   19cac:	mov	r0, #0
   19cb0:	strb	r0, [sp, #14]
   19cb4:	mov	r0, r9
   19cb8:	mov	r1, r7
   19cbc:	mov	r2, r4
   19cc0:	add	r5, sp, #14
   19cc4:	mov	r3, r5
   19cc8:	bl	16704 <main@@Base+0x3208>
   19ccc:	mov	r6, r0
   19cd0:	cmp	r7, r0
   19cd4:	beq	19e14 <main@@Base+0x6918>
   19cd8:	mov	r8, r6
   19cdc:	b	19e40 <main@@Base+0x6944>
   19ce0:	mov	r5, r7
   19ce4:	add	r7, sp, #12
   19ce8:	bic	r0, r6, #255	; 0xff
   19cec:	movw	r1, #12800	; 0x3200
   19cf0:	movt	r1, #30051	; 0x7563
   19cf4:	teq	r0, r1
   19cf8:	bne	19d4c <main@@Base+0x6850>
   19cfc:	mov	r0, r9
   19d00:	mov	r1, r5
   19d04:	mov	r2, r4
   19d08:	mov	r3, #3
   19d0c:	bl	15d18 <main@@Base+0x281c>
   19d10:	mov	r6, r0
   19d14:	cmp	r5, r0
   19d18:	beq	19ba0 <main@@Base+0x66a4>
   19d1c:	mov	r0, #0
   19d20:	strb	r0, [sp, #13]
   19d24:	mov	r0, r9
   19d28:	mov	r1, r6
   19d2c:	mov	r2, r4
   19d30:	mov	r3, sl
   19d34:	bl	169a8 <main@@Base+0x34ac>
   19d38:	mov	r7, r0
   19d3c:	cmp	r6, r0
   19d40:	beq	19e84 <main@@Base+0x6988>
   19d44:	mov	r8, r7
   19d48:	b	19eb0 <main@@Base+0x69b4>
   19d4c:	bfc	r6, #0, #16
   19d50:	movw	r0, #0
   19d54:	movt	r0, #30051	; 0x7563
   19d58:	teq	r6, r0
   19d5c:	bne	19db4 <main@@Base+0x68b8>
   19d60:	mov	r0, r9
   19d64:	mov	r1, r5
   19d68:	mov	r2, r4
   19d6c:	mov	r3, #2
   19d70:	bl	15d18 <main@@Base+0x281c>
   19d74:	mov	r6, r0
   19d78:	cmp	r5, r0
   19d7c:	beq	19ba0 <main@@Base+0x66a4>
   19d80:	mov	r0, #0
   19d84:	strb	r0, [sp, #12]
   19d88:	mov	r0, r9
   19d8c:	mov	r1, r6
   19d90:	mov	r2, r4
   19d94:	mov	r3, r7
   19d98:	bl	169a8 <main@@Base+0x34ac>
   19d9c:	mov	r1, r7
   19da0:	mov	r7, r0
   19da4:	cmp	r6, r0
   19da8:	beq	19ed8 <main@@Base+0x69dc>
   19dac:	mov	r8, r7
   19db0:	b	19f04 <main@@Base+0x6a08>
   19db4:	mov	r0, r9
   19db8:	mov	r1, r5
   19dbc:	b	19ba8 <main@@Base+0x66ac>
   19dc0:	str	r5, [sp]
   19dc4:	mov	r0, r9
   19dc8:	mov	r1, r6
   19dcc:	mov	r2, r4
   19dd0:	movw	r3, #29164	; 0x71ec
   19dd4:	movt	r3, #3
   19dd8:	bl	16794 <main@@Base+0x3298>
   19ddc:	mov	r8, r0
   19de0:	cmp	r0, r6
   19de4:	cmpne	r8, r4
   19de8:	beq	19b48 <main@@Base+0x664c>
   19dec:	ldrb	r5, [sp, #15]
   19df0:	cmp	r5, #2
   19df4:	add	r7, sp, #12
   19df8:	bne	19e08 <main@@Base+0x690c>
   19dfc:	ldrb	r0, [r9, #8]
   19e00:	tst	r0, #2
   19e04:	beq	19bb4 <main@@Base+0x66b8>
   19e08:	ldr	r0, [r9]
   19e0c:	mov	r1, #1
   19e10:	b	19e64 <main@@Base+0x6968>
   19e14:	str	r5, [sp]
   19e18:	mov	r0, r9
   19e1c:	mov	r1, r6
   19e20:	mov	r2, r4
   19e24:	movw	r3, #29180	; 0x71fc
   19e28:	movt	r3, #3
   19e2c:	bl	16794 <main@@Base+0x3298>
   19e30:	mov	r8, r0
   19e34:	cmp	r0, r6
   19e38:	cmpne	r8, r4
   19e3c:	beq	19b48 <main@@Base+0x664c>
   19e40:	ldrb	r5, [sp, #14]
   19e44:	cmp	r5, #2
   19e48:	add	r7, sp, #12
   19e4c:	bne	19e5c <main@@Base+0x6960>
   19e50:	ldrb	r0, [r9, #8]
   19e54:	tst	r0, #2
   19e58:	beq	19bb4 <main@@Base+0x66b8>
   19e5c:	ldr	r0, [r9]
   19e60:	mov	r1, #0
   19e64:	mov	r2, #1
   19e68:	mov	r3, #1
   19e6c:	bl	1eee0 <flatcc_builder_table_add@@Base>
   19e70:	cmp	r0, #0
   19e74:	beq	19b48 <main@@Base+0x664c>
   19e78:	sxtb	r1, r5
   19e7c:	bl	168f8 <main@@Base+0x33fc>
   19e80:	b	19bb4 <main@@Base+0x66b8>
   19e84:	str	sl, [sp]
   19e88:	mov	r0, r9
   19e8c:	mov	r1, r7
   19e90:	mov	r2, r4
   19e94:	movw	r3, #29196	; 0x720c
   19e98:	movt	r3, #3
   19e9c:	bl	16a38 <main@@Base+0x353c>
   19ea0:	mov	r8, r0
   19ea4:	cmp	r0, r7
   19ea8:	cmpne	r8, r4
   19eac:	beq	19b48 <main@@Base+0x664c>
   19eb0:	ldrb	r6, [sp, #13]
   19eb4:	cmp	r6, #2
   19eb8:	add	r7, sp, #12
   19ebc:	bne	19ecc <main@@Base+0x69d0>
   19ec0:	ldrb	r0, [r9, #8]
   19ec4:	tst	r0, #2
   19ec8:	beq	19bb4 <main@@Base+0x66b8>
   19ecc:	ldr	r0, [r9]
   19ed0:	mov	r1, #3
   19ed4:	b	19f28 <main@@Base+0x6a2c>
   19ed8:	str	r1, [sp]
   19edc:	mov	r0, r9
   19ee0:	mov	r1, r7
   19ee4:	mov	r2, r4
   19ee8:	movw	r3, #29208	; 0x7218
   19eec:	movt	r3, #3
   19ef0:	bl	16a38 <main@@Base+0x353c>
   19ef4:	mov	r8, r0
   19ef8:	cmp	r0, r7
   19efc:	cmpne	r8, r4
   19f00:	beq	19b48 <main@@Base+0x664c>
   19f04:	ldrb	r6, [sp, #12]
   19f08:	cmp	r6, #2
   19f0c:	add	r7, sp, #12
   19f10:	bne	19f20 <main@@Base+0x6a24>
   19f14:	ldrb	r0, [r9, #8]
   19f18:	tst	r0, #2
   19f1c:	beq	19bb4 <main@@Base+0x66b8>
   19f20:	ldr	r0, [r9]
   19f24:	mov	r1, #2
   19f28:	mov	r2, #1
   19f2c:	mov	r3, #1
   19f30:	bl	1eee0 <flatcc_builder_table_add@@Base>
   19f34:	cmp	r0, #0
   19f38:	beq	19b48 <main@@Base+0x664c>
   19f3c:	mov	r1, r6
   19f40:	bl	16b9c <main@@Base+0x36a0>
   19f44:	b	19bb4 <main@@Base+0x66b8>
   19f48:	ldr	r0, [r9, #24]
   19f4c:	cmp	r0, #0
   19f50:	bne	19b48 <main@@Base+0x664c>
   19f54:	ldr	r0, [r9]
   19f58:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   19f5c:	ldr	r1, [sp, #8]
   19f60:	str	r0, [r1]
   19f64:	cmp	r0, #0
   19f68:	bne	19b60 <main@@Base+0x6664>
   19f6c:	b	19b48 <main@@Base+0x664c>
   19f70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19f74:	add	fp, sp, #24
   19f78:	sub	sp, sp, #8
   19f7c:	mov	r8, r3
   19f80:	mov	r4, r2
   19f84:	mov	r7, r1
   19f88:	mov	r5, r0
   19f8c:	mov	r0, #0
   19f90:	str	r0, [r3]
   19f94:	ldr	r0, [r5]
   19f98:	mov	r1, #0
   19f9c:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   19fa0:	cmp	r0, #0
   19fa4:	bne	1a034 <main@@Base+0x6b38>
   19fa8:	add	r3, sp, #4
   19fac:	mov	r0, r5
   19fb0:	mov	r1, r7
   19fb4:	mov	r2, r4
   19fb8:	bl	15c40 <main@@Base+0x2744>
   19fbc:	mov	r7, r0
   19fc0:	ldr	r0, [sp, #4]
   19fc4:	cmp	r0, #0
   19fc8:	beq	1a014 <main@@Base+0x6b18>
   19fcc:	add	r6, sp, #4
   19fd0:	mov	r0, r5
   19fd4:	mov	r1, r7
   19fd8:	mov	r2, r4
   19fdc:	bl	15cd0 <main@@Base+0x27d4>
   19fe0:	mov	r1, r0
   19fe4:	mov	r0, r5
   19fe8:	mov	r2, r4
   19fec:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   19ff0:	mov	r1, r0
   19ff4:	mov	r0, r5
   19ff8:	mov	r2, r4
   19ffc:	mov	r3, r6
   1a000:	bl	18efc <main@@Base+0x5a00>
   1a004:	mov	r7, r0
   1a008:	ldr	r0, [sp, #4]
   1a00c:	cmp	r0, #0
   1a010:	bne	19fd0 <main@@Base+0x6ad4>
   1a014:	ldr	r0, [r5, #24]
   1a018:	cmp	r0, #0
   1a01c:	bne	1a034 <main@@Base+0x6b38>
   1a020:	ldr	r0, [r5]
   1a024:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1a028:	str	r0, [r8]
   1a02c:	cmp	r0, #0
   1a030:	bne	1a04c <main@@Base+0x6b50>
   1a034:	mov	r0, r5
   1a038:	mov	r1, r7
   1a03c:	mov	r2, r4
   1a040:	mov	r3, #33	; 0x21
   1a044:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1a048:	mov	r7, r0
   1a04c:	mov	r0, r7
   1a050:	sub	sp, fp, #24
   1a054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a05c:	add	fp, sp, #28
   1a060:	sub	sp, sp, #36	; 0x24
   1a064:	mov	r7, r3
   1a068:	mov	r4, r2
   1a06c:	mov	r6, r1
   1a070:	mov	r5, r0
   1a074:	mov	r0, #0
   1a078:	str	r0, [r3]
   1a07c:	ldr	r0, [r5]
   1a080:	mov	r1, #4
   1a084:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1a088:	cmp	r0, #0
   1a08c:	beq	1a0b4 <main@@Base+0x6bb8>
   1a090:	mov	r0, r5
   1a094:	mov	r1, r6
   1a098:	mov	r2, r4
   1a09c:	mov	r3, #33	; 0x21
   1a0a0:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1a0a4:	mov	r6, r0
   1a0a8:	mov	r0, r6
   1a0ac:	sub	sp, fp, #28
   1a0b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0b4:	add	r0, sp, #24
   1a0b8:	str	r0, [sp]
   1a0bc:	mov	r0, r5
   1a0c0:	mov	r1, r6
   1a0c4:	mov	r2, r4
   1a0c8:	mov	r3, #1
   1a0cc:	bl	22204 <flatcc_json_parser_prepare_unions@@Base>
   1a0d0:	cmp	r0, r4
   1a0d4:	beq	1a090 <main@@Base+0x6b94>
   1a0d8:	str	r7, [sp, #20]
   1a0dc:	add	r3, sp, #32
   1a0e0:	mov	r0, r5
   1a0e4:	mov	r1, r6
   1a0e8:	mov	r2, r4
   1a0ec:	bl	15c40 <main@@Base+0x2744>
   1a0f0:	mov	r6, r0
   1a0f4:	ldr	r0, [sp, #32]
   1a0f8:	cmp	r0, #0
   1a0fc:	beq	1a36c <main@@Base+0x6e70>
   1a100:	movw	r0, #30976	; 0x7900
   1a104:	movt	r0, #24942	; 0x616e
   1a108:	add	r9, r0, #95	; 0x5f
   1a10c:	add	sl, sp, #32
   1a110:	b	1a14c <main@@Base+0x6c50>
   1a114:	mov	r0, r5
   1a118:	mov	r1, r6
   1a11c:	mov	r2, r4
   1a120:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1a124:	mov	r6, r0
   1a128:	mov	r0, r5
   1a12c:	mov	r1, r6
   1a130:	mov	r2, r4
   1a134:	mov	r3, sl
   1a138:	bl	18efc <main@@Base+0x5a00>
   1a13c:	mov	r6, r0
   1a140:	ldr	r0, [sp, #32]
   1a144:	cmp	r0, #0
   1a148:	beq	1a36c <main@@Base+0x6e70>
   1a14c:	mov	r0, r5
   1a150:	mov	r1, r6
   1a154:	mov	r2, r4
   1a158:	bl	15cd0 <main@@Base+0x27d4>
   1a15c:	mov	r6, r0
   1a160:	mov	r1, r4
   1a164:	bl	15d14 <main@@Base+0x2818>
   1a168:	mov	r7, r0
   1a16c:	mov	r8, r1
   1a170:	movw	r0, #28281	; 0x6e79
   1a174:	movt	r0, #28001	; 0x6d61
   1a178:	eor	r0, r1, r0
   1a17c:	eor	r1, r7, r9
   1a180:	orrs	r1, r1, r0
   1a184:	bne	1a210 <main@@Base+0x6d14>
   1a188:	add	r6, r6, #8
   1a18c:	mov	r0, r6
   1a190:	mov	r1, r4
   1a194:	bl	15d14 <main@@Base+0x2818>
   1a198:	movw	r0, #28773	; 0x7065
   1a19c:	movt	r0, #29817	; 0x7479
   1a1a0:	teq	r1, r0
   1a1a4:	bne	1a114 <main@@Base+0x6c18>
   1a1a8:	mov	r0, r5
   1a1ac:	mov	r1, r6
   1a1b0:	mov	r2, r4
   1a1b4:	mov	r3, #4
   1a1b8:	bl	15d18 <main@@Base+0x281c>
   1a1bc:	mov	r1, r0
   1a1c0:	cmp	r6, r0
   1a1c4:	beq	1a364 <main@@Base+0x6e68>
   1a1c8:	ldr	r0, [sp, #24]
   1a1cc:	mov	r2, #3
   1a1d0:	str	r2, [sp]
   1a1d4:	str	r0, [sp, #4]
   1a1d8:	movw	r0, #29220	; 0x7224
   1a1dc:	movt	r0, #3
   1a1e0:	str	r0, [sp, #8]
   1a1e4:	movw	r0, #30248	; 0x7628
   1a1e8:	movt	r0, #1
   1a1ec:	str	r0, [sp, #12]
   1a1f0:	movw	r0, #41900	; 0xa3ac
   1a1f4:	movt	r0, #1
   1a1f8:	str	r0, [sp, #16]
   1a1fc:	mov	r0, r5
   1a200:	mov	r2, r4
   1a204:	mov	r3, #0
   1a208:	bl	229e8 <flatcc_json_parser_union_type_vector@@Base>
   1a20c:	b	1a124 <main@@Base+0x6c28>
   1a210:	bic	r1, r7, #255	; 0xff
   1a214:	movw	r2, #30976	; 0x7900
   1a218:	movt	r2, #24942	; 0x616e
   1a21c:	eor	r1, r1, r2
   1a220:	orrs	r0, r1, r0
   1a224:	bne	1a27c <main@@Base+0x6d80>
   1a228:	mov	r0, r5
   1a22c:	mov	r1, r6
   1a230:	mov	r2, r4
   1a234:	mov	r3, #7
   1a238:	bl	15d18 <main@@Base+0x281c>
   1a23c:	mov	r1, r0
   1a240:	cmp	r6, r0
   1a244:	beq	1a278 <main@@Base+0x6d7c>
   1a248:	ldr	r0, [sp, #24]
   1a24c:	mov	r2, #3
   1a250:	str	r2, [sp]
   1a254:	str	r0, [sp, #4]
   1a258:	movw	r0, #30248	; 0x7628
   1a25c:	movt	r0, #1
   1a260:	str	r0, [sp, #8]
   1a264:	mov	r0, r5
   1a268:	mov	r2, r4
   1a26c:	mov	r3, #0
   1a270:	bl	2278c <flatcc_json_parser_union_vector@@Base>
   1a274:	b	1a124 <main@@Base+0x6c28>
   1a278:	mov	r6, r1
   1a27c:	movw	r0, #28786	; 0x7072
   1a280:	eor	r0, r0, r8, lsr #16
   1a284:	lsr	r1, r7, #16
   1a288:	orr	r1, r1, r8, lsl #16
   1a28c:	movw	r2, #27000	; 0x6978
   1a290:	movt	r2, #25958	; 0x6566
   1a294:	eor	r1, r1, r2
   1a298:	orrs	r0, r1, r0
   1a29c:	bne	1a2ec <main@@Base+0x6df0>
   1a2a0:	mov	r0, r5
   1a2a4:	mov	r1, r6
   1a2a8:	mov	r2, r4
   1a2ac:	mov	r3, #6
   1a2b0:	bl	15d18 <main@@Base+0x281c>
   1a2b4:	mov	r1, r0
   1a2b8:	cmp	r6, r0
   1a2bc:	beq	1a364 <main@@Base+0x6e68>
   1a2c0:	mov	r0, r5
   1a2c4:	mov	r2, r4
   1a2c8:	add	r3, sp, #28
   1a2cc:	bl	1a3c0 <main@@Base+0x6ec4>
   1a2d0:	mov	r6, r0
   1a2d4:	ldr	r7, [sp, #28]
   1a2d8:	cmp	r7, #0
   1a2dc:	beq	1a090 <main@@Base+0x6b94>
   1a2e0:	ldr	r0, [r5]
   1a2e4:	mov	r1, #0
   1a2e8:	b	1a350 <main@@Base+0x6e54>
   1a2ec:	movw	r0, #30313	; 0x7669
   1a2f0:	movt	r0, #28015	; 0x6d6f
   1a2f4:	eor	r0, r8, r0
   1a2f8:	and	r1, r7, #-16777216	; 0xff000000
   1a2fc:	eor	r1, r1, #1694498816	; 0x65000000
   1a300:	orrs	r0, r1, r0
   1a304:	bne	1a114 <main@@Base+0x6c18>
   1a308:	mov	r0, r5
   1a30c:	mov	r1, r6
   1a310:	mov	r2, r4
   1a314:	mov	r3, #5
   1a318:	bl	15d18 <main@@Base+0x281c>
   1a31c:	mov	r1, r0
   1a320:	cmp	r6, r0
   1a324:	beq	1a364 <main@@Base+0x6e68>
   1a328:	mov	r0, r5
   1a32c:	mov	r2, r4
   1a330:	add	r3, sp, #28
   1a334:	bl	1a6d0 <main@@Base+0x71d4>
   1a338:	mov	r6, r0
   1a33c:	ldr	r7, [sp, #28]
   1a340:	cmp	r7, #0
   1a344:	beq	1a090 <main@@Base+0x6b94>
   1a348:	ldr	r0, [r5]
   1a34c:	mov	r1, #1
   1a350:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   1a354:	cmp	r0, #0
   1a358:	beq	1a090 <main@@Base+0x6b94>
   1a35c:	str	r7, [r0]
   1a360:	b	1a128 <main@@Base+0x6c2c>
   1a364:	mov	r0, r5
   1a368:	b	1a11c <main@@Base+0x6c20>
   1a36c:	ldr	r0, [r5, #24]
   1a370:	cmp	r0, #0
   1a374:	bne	1a090 <main@@Base+0x6b94>
   1a378:	ldr	r3, [sp, #24]
   1a37c:	mov	r0, r5
   1a380:	mov	r1, r6
   1a384:	mov	r2, r4
   1a388:	bl	22270 <flatcc_json_parser_finalize_unions@@Base>
   1a38c:	mov	r6, r0
   1a390:	ldr	r0, [r5]
   1a394:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1a398:	ldr	r1, [sp, #20]
   1a39c:	str	r0, [r1]
   1a3a0:	cmp	r0, #0
   1a3a4:	bne	1a0a8 <main@@Base+0x6bac>
   1a3a8:	b	1a090 <main@@Base+0x6b94>
   1a3ac:	mov	r1, #0
   1a3b0:	cmp	r0, #5
   1a3b4:	movwcc	r1, #1
   1a3b8:	mov	r0, r1
   1a3bc:	bx	lr
   1a3c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a3c4:	add	fp, sp, #28
   1a3c8:	sub	sp, sp, #12
   1a3cc:	mov	r7, r3
   1a3d0:	mov	r4, r2
   1a3d4:	mov	r6, r1
   1a3d8:	mov	r5, r0
   1a3dc:	mov	r0, #0
   1a3e0:	str	r0, [r3]
   1a3e4:	ldr	r0, [r5]
   1a3e8:	mov	r1, #3
   1a3ec:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1a3f0:	cmp	r0, #0
   1a3f4:	bne	1a690 <main@@Base+0x7194>
   1a3f8:	add	r3, sp, #8
   1a3fc:	mov	r0, r5
   1a400:	mov	r1, r6
   1a404:	mov	r2, r4
   1a408:	bl	15c40 <main@@Base+0x2744>
   1a40c:	mov	r6, r0
   1a410:	ldr	r0, [sp, #8]
   1a414:	cmp	r0, #0
   1a418:	str	r7, [sp]
   1a41c:	beq	1a684 <main@@Base+0x7188>
   1a420:	movw	r9, #29556	; 0x7374
   1a424:	movt	r9, #29797	; 0x7465
   1a428:	movw	sl, #28526	; 0x6f6e
   1a42c:	movt	sl, #27251	; 0x6a73
   1a430:	movw	r8, #25958	; 0x6566
   1a434:	movt	r8, #28786	; 0x7072
   1a438:	add	r7, sp, #8
   1a43c:	b	1a488 <main@@Base+0x6f8c>
   1a440:	mov	r6, r1
   1a444:	movw	r8, #25958	; 0x6566
   1a448:	movt	r8, #28786	; 0x7072
   1a44c:	add	r7, sp, #8
   1a450:	mov	r0, r5
   1a454:	mov	r1, r6
   1a458:	mov	r2, r4
   1a45c:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1a460:	mov	r6, r0
   1a464:	mov	r0, r5
   1a468:	mov	r1, r6
   1a46c:	mov	r2, r4
   1a470:	mov	r3, r7
   1a474:	bl	18efc <main@@Base+0x5a00>
   1a478:	mov	r6, r0
   1a47c:	ldr	r0, [sp, #8]
   1a480:	cmp	r0, #0
   1a484:	beq	1a684 <main@@Base+0x7188>
   1a488:	mov	r0, r5
   1a48c:	mov	r1, r6
   1a490:	mov	r2, r4
   1a494:	bl	15cd0 <main@@Base+0x27d4>
   1a498:	mov	r6, r0
   1a49c:	mov	r1, r4
   1a4a0:	bl	15d14 <main@@Base+0x2818>
   1a4a4:	eor	r1, r1, r9
   1a4a8:	eor	r0, r0, sl
   1a4ac:	orrs	r0, r0, r1
   1a4b0:	bne	1a450 <main@@Base+0x6f54>
   1a4b4:	add	r7, r6, #8
   1a4b8:	mov	r0, r7
   1a4bc:	mov	r1, r4
   1a4c0:	bl	15d14 <main@@Base+0x2818>
   1a4c4:	eor	r1, r1, r8
   1a4c8:	movw	r2, #28769	; 0x7061
   1a4cc:	movt	r2, #27000	; 0x6978
   1a4d0:	eor	r0, r0, r2
   1a4d4:	orrs	r0, r0, r1
   1a4d8:	bne	1a560 <main@@Base+0x7064>
   1a4dc:	add	r6, r6, #16
   1a4e0:	mov	r0, r6
   1a4e4:	mov	r1, r4
   1a4e8:	bl	15d14 <main@@Base+0x2818>
   1a4ec:	movw	r2, #26990	; 0x696e
   1a4f0:	movt	r2, #29299	; 0x7273
   1a4f4:	eor	r7, r1, r2
   1a4f8:	mov	r8, r0
   1a4fc:	bfc	r8, #0, #16
   1a500:	movw	r1, #0
   1a504:	movt	r1, #26418	; 0x6732
   1a508:	eor	r1, r8, r1
   1a50c:	orrs	r1, r1, r7
   1a510:	bne	1a578 <main@@Base+0x707c>
   1a514:	mov	r0, r5
   1a518:	mov	r1, r6
   1a51c:	mov	r2, r4
   1a520:	mov	r3, #6
   1a524:	bl	15d18 <main@@Base+0x281c>
   1a528:	mov	r1, r0
   1a52c:	cmp	r6, r0
   1a530:	beq	1a440 <main@@Base+0x6f44>
   1a534:	mov	r0, r5
   1a538:	mov	r2, r4
   1a53c:	add	r3, sp, #4
   1a540:	bl	1ae34 <main@@Base+0x7938>
   1a544:	mov	r6, r0
   1a548:	ldr	r7, [sp, #4]
   1a54c:	cmp	r7, #0
   1a550:	beq	1a690 <main@@Base+0x7194>
   1a554:	ldr	r0, [r5]
   1a558:	mov	r1, #1
   1a55c:	b	1a5d0 <main@@Base+0x70d4>
   1a560:	mov	r0, r5
   1a564:	mov	r1, r7
   1a568:	mov	r2, r4
   1a56c:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1a570:	mov	r6, r0
   1a574:	b	1a5e8 <main@@Base+0x70ec>
   1a578:	and	r0, r0, #-16777216	; 0xff000000
   1a57c:	eor	r0, r0, #1728053248	; 0x67000000
   1a580:	orrs	r0, r0, r7
   1a584:	bne	1a5f4 <main@@Base+0x70f8>
   1a588:	mov	r0, r5
   1a58c:	mov	r1, r6
   1a590:	mov	r2, r4
   1a594:	mov	r3, #5
   1a598:	bl	15d18 <main@@Base+0x281c>
   1a59c:	mov	r1, r0
   1a5a0:	cmp	r6, r0
   1a5a4:	beq	1a5f0 <main@@Base+0x70f4>
   1a5a8:	mov	r0, r5
   1a5ac:	mov	r2, r4
   1a5b0:	add	r3, sp, #4
   1a5b4:	bl	1b178 <main@@Base+0x7c7c>
   1a5b8:	mov	r6, r0
   1a5bc:	ldr	r7, [sp, #4]
   1a5c0:	cmp	r7, #0
   1a5c4:	beq	1a690 <main@@Base+0x7194>
   1a5c8:	ldr	r0, [r5]
   1a5cc:	mov	r1, #0
   1a5d0:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   1a5d4:	cmp	r0, #0
   1a5d8:	beq	1a690 <main@@Base+0x7194>
   1a5dc:	str	r7, [r0]
   1a5e0:	movw	r8, #25958	; 0x6566
   1a5e4:	movt	r8, #28786	; 0x7072
   1a5e8:	add	r7, sp, #8
   1a5ec:	b	1a464 <main@@Base+0x6f68>
   1a5f0:	mov	r6, r1
   1a5f4:	movw	r0, #0
   1a5f8:	movt	r0, #26418	; 0x6732
   1a5fc:	add	r0, r0, #65536	; 0x10000
   1a600:	eor	r0, r8, r0
   1a604:	orrs	r0, r0, r7
   1a608:	bne	1a444 <main@@Base+0x6f48>
   1a60c:	mov	r0, r5
   1a610:	mov	r1, r6
   1a614:	mov	r2, r4
   1a618:	mov	r3, #6
   1a61c:	bl	15d18 <main@@Base+0x281c>
   1a620:	mov	r1, r0
   1a624:	cmp	r6, r0
   1a628:	beq	1a670 <main@@Base+0x7174>
   1a62c:	mov	r0, r5
   1a630:	mov	r2, r4
   1a634:	add	r3, sp, #4
   1a638:	bl	1b8cc <main@@Base+0x83d0>
   1a63c:	mov	r6, r0
   1a640:	ldr	r7, [sp, #4]
   1a644:	cmp	r7, #0
   1a648:	movw	r8, #25958	; 0x6566
   1a64c:	movt	r8, #28786	; 0x7072
   1a650:	beq	1a690 <main@@Base+0x7194>
   1a654:	ldr	r0, [r5]
   1a658:	mov	r1, #2
   1a65c:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   1a660:	cmp	r0, #0
   1a664:	beq	1a690 <main@@Base+0x7194>
   1a668:	str	r7, [r0]
   1a66c:	b	1a5e8 <main@@Base+0x70ec>
   1a670:	mov	r0, r5
   1a674:	mov	r2, r4
   1a678:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1a67c:	mov	r6, r0
   1a680:	b	1a5e0 <main@@Base+0x70e4>
   1a684:	ldr	r0, [r5, #24]
   1a688:	cmp	r0, #0
   1a68c:	beq	1a6b4 <main@@Base+0x71b8>
   1a690:	mov	r0, r5
   1a694:	mov	r1, r6
   1a698:	mov	r2, r4
   1a69c:	mov	r3, #33	; 0x21
   1a6a0:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1a6a4:	mov	r6, r0
   1a6a8:	mov	r0, r6
   1a6ac:	sub	sp, fp, #28
   1a6b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6b4:	ldr	r0, [r5]
   1a6b8:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1a6bc:	ldr	r1, [sp]
   1a6c0:	str	r0, [r1]
   1a6c4:	cmp	r0, #0
   1a6c8:	bne	1a6a8 <main@@Base+0x71ac>
   1a6cc:	b	1a690 <main@@Base+0x7194>
   1a6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6d4:	add	fp, sp, #28
   1a6d8:	sub	sp, sp, #36	; 0x24
   1a6dc:	mov	r7, r3
   1a6e0:	mov	r4, r2
   1a6e4:	mov	r6, r1
   1a6e8:	mov	r5, r0
   1a6ec:	mov	r0, #0
   1a6f0:	str	r0, [r3]
   1a6f4:	ldr	r0, [r5]
   1a6f8:	mov	r1, #10
   1a6fc:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1a700:	cmp	r0, #0
   1a704:	beq	1a72c <main@@Base+0x7230>
   1a708:	mov	r0, r5
   1a70c:	mov	r1, r6
   1a710:	mov	r2, r4
   1a714:	mov	r3, #33	; 0x21
   1a718:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1a71c:	mov	r6, r0
   1a720:	mov	r0, r6
   1a724:	sub	sp, fp, #28
   1a728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a72c:	add	r0, sp, #28
   1a730:	str	r0, [sp]
   1a734:	mov	r0, r5
   1a738:	mov	r1, r6
   1a73c:	mov	r2, r4
   1a740:	mov	r3, #5
   1a744:	bl	22204 <flatcc_json_parser_prepare_unions@@Base>
   1a748:	cmp	r0, r4
   1a74c:	beq	1a708 <main@@Base+0x720c>
   1a750:	add	r3, sp, #32
   1a754:	mov	r0, r5
   1a758:	mov	r1, r6
   1a75c:	mov	r2, r4
   1a760:	bl	15c40 <main@@Base+0x2744>
   1a764:	mov	r6, r0
   1a768:	ldr	r0, [sp, #32]
   1a76c:	cmp	r0, #0
   1a770:	str	r7, [sp, #20]
   1a774:	beq	1adf4 <main@@Base+0x78f8>
   1a778:	movw	r8, #24946	; 0x6172
   1a77c:	movt	r8, #25448	; 0x6368
   1a780:	movw	r9, #29797	; 0x7465
   1a784:	movt	r9, #24931	; 0x6163
   1a788:	movw	r0, #24436	; 0x5f74
   1a78c:	movt	r0, #29299	; 0x7273
   1a790:	movw	sl, #29817	; 0x7479
   1a794:	movt	sl, #28511	; 0x6f5f
   1a798:	add	r0, r0, #65536	; 0x10000
   1a79c:	add	r0, r0, #16777216	; 0x1000000
   1a7a0:	str	r0, [sp, #24]
   1a7a4:	add	r7, sp, #32
   1a7a8:	b	1a7e0 <main@@Base+0x72e4>
   1a7ac:	mov	r0, r5
   1a7b0:	mov	r1, r6
   1a7b4:	mov	r2, r4
   1a7b8:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1a7bc:	mov	r1, r0
   1a7c0:	mov	r0, r5
   1a7c4:	mov	r2, r4
   1a7c8:	mov	r3, r7
   1a7cc:	bl	18efc <main@@Base+0x5a00>
   1a7d0:	mov	r6, r0
   1a7d4:	ldr	r0, [sp, #32]
   1a7d8:	cmp	r0, #0
   1a7dc:	beq	1adf4 <main@@Base+0x78f8>
   1a7e0:	mov	r0, r5
   1a7e4:	mov	r1, r6
   1a7e8:	mov	r2, r4
   1a7ec:	bl	15cd0 <main@@Base+0x27d4>
   1a7f0:	mov	r6, r0
   1a7f4:	mov	r1, r4
   1a7f8:	bl	15d14 <main@@Base+0x2818>
   1a7fc:	subs	r2, r0, r9
   1a800:	sbcs	r2, r1, r8
   1a804:	bcs	1a8d0 <main@@Base+0x73d4>
   1a808:	eor	r3, r0, sl
   1a80c:	movw	r2, #28005	; 0x6d65
   1a810:	movt	r2, #25441	; 0x6361
   1a814:	eor	r2, r1, r2
   1a818:	orrs	r3, r3, r2
   1a81c:	beq	1aa88 <main@@Base+0x758c>
   1a820:	movw	r3, #28265	; 0x6e69
   1a824:	movt	r3, #26479	; 0x676f
   1a828:	eor	r3, r0, r3
   1a82c:	movw	r7, #29793	; 0x7461
   1a830:	movt	r7, #24942	; 0x616e
   1a834:	eor	r1, r1, r7
   1a838:	orrs	r1, r3, r1
   1a83c:	bne	1ab08 <main@@Base+0x760c>
   1a840:	add	r6, r6, #8
   1a844:	mov	r0, r6
   1a848:	mov	r1, r4
   1a84c:	bl	15d14 <main@@Base+0x2818>
   1a850:	ldr	r2, [sp, #24]
   1a854:	eor	r2, r1, r2
   1a858:	bic	r0, r0, #255	; 0xff
   1a85c:	movw	r3, #25856	; 0x6500
   1a860:	movt	r3, #31088	; 0x7970
   1a864:	eor	r0, r0, r3
   1a868:	orrs	r0, r0, r2
   1a86c:	bne	1ab6c <main@@Base+0x7670>
   1a870:	mov	r0, r5
   1a874:	mov	r1, r6
   1a878:	mov	r2, r4
   1a87c:	mov	r3, #7
   1a880:	bl	15d18 <main@@Base+0x281c>
   1a884:	mov	r1, r0
   1a888:	cmp	r6, r0
   1a88c:	add	r7, sp, #32
   1a890:	beq	1adb4 <main@@Base+0x78b8>
   1a894:	ldr	r0, [sp, #28]
   1a898:	mov	r2, #3
   1a89c:	str	r2, [sp]
   1a8a0:	str	r0, [sp, #4]
   1a8a4:	movw	r0, #29356	; 0x72ac
   1a8a8:	movt	r0, #3
   1a8ac:	str	r0, [sp, #8]
   1a8b0:	movw	r0, #48328	; 0xbcc8
   1a8b4:	movt	r0, #1
   1a8b8:	str	r0, [sp, #12]
   1a8bc:	mov	r0, r5
   1a8c0:	mov	r2, r4
   1a8c4:	mov	r3, #1
   1a8c8:	bl	223f0 <flatcc_json_parser_union_type@@Base>
   1a8cc:	b	1a7bc <main@@Base+0x72c0>
   1a8d0:	movw	r2, #26720	; 0x6860
   1a8d4:	movt	r2, #24419	; 0x5f63
   1a8d8:	subs	r2, r2, r0
   1a8dc:	movw	r2, #26990	; 0x696e
   1a8e0:	movt	r2, #28001	; 0x6d61
   1a8e4:	sbcs	r2, r2, r1
   1a8e8:	bcc	1a998 <main@@Base+0x749c>
   1a8ec:	eor	r0, r0, r9
   1a8f0:	eor	r1, r1, r8
   1a8f4:	orrs	r0, r0, r1
   1a8f8:	bne	1a7ac <main@@Base+0x72b0>
   1a8fc:	add	r6, r6, #8
   1a900:	mov	r0, r6
   1a904:	mov	r1, r4
   1a908:	bl	15d14 <main@@Base+0x2818>
   1a90c:	movw	r2, #24436	; 0x5f74
   1a910:	movt	r2, #29299	; 0x7273
   1a914:	eor	r2, r1, r2
   1a918:	bic	r0, r0, #255	; 0xff
   1a91c:	movw	r3, #25856	; 0x6500
   1a920:	movt	r3, #31088	; 0x7970
   1a924:	eor	r0, r0, r3
   1a928:	orrs	r0, r0, r2
   1a92c:	bne	1ac80 <main@@Base+0x7784>
   1a930:	mov	r0, r5
   1a934:	mov	r1, r6
   1a938:	mov	r2, r4
   1a93c:	mov	r3, #7
   1a940:	bl	15d18 <main@@Base+0x281c>
   1a944:	mov	r1, r0
   1a948:	cmp	r6, r0
   1a94c:	beq	1adb4 <main@@Base+0x78b8>
   1a950:	ldr	r0, [sp, #28]
   1a954:	mov	r2, #9
   1a958:	str	r2, [sp]
   1a95c:	str	r0, [sp, #4]
   1a960:	movw	r0, #29388	; 0x72cc
   1a964:	movt	r0, #3
   1a968:	str	r0, [sp, #8]
   1a96c:	movw	r0, #48328	; 0xbcc8
   1a970:	movt	r0, #1
   1a974:	str	r0, [sp, #12]
   1a978:	movw	r0, #48624	; 0xbdf0
   1a97c:	movt	r0, #1
   1a980:	str	r0, [sp, #16]
   1a984:	mov	r0, r5
   1a988:	mov	r2, r4
   1a98c:	mov	r3, #4
   1a990:	bl	229e8 <flatcc_json_parser_union_type_vector@@Base>
   1a994:	b	1a7bc <main@@Base+0x72c0>
   1a998:	movw	r2, #26979	; 0x6963
   1a99c:	movt	r2, #24427	; 0x5f6b
   1a9a0:	eor	r2, r0, r2
   1a9a4:	movw	r3, #25701	; 0x6465
   1a9a8:	movt	r3, #29545	; 0x7369
   1a9ac:	eor	r3, r1, r3
   1a9b0:	orrs	r2, r2, r3
   1a9b4:	beq	1abd4 <main@@Base+0x76d8>
   1a9b8:	movw	r2, #26721	; 0x6861
   1a9bc:	movt	r2, #24419	; 0x5f63
   1a9c0:	eor	r0, r0, r2
   1a9c4:	movw	r2, #26990	; 0x696e
   1a9c8:	movt	r2, #28001	; 0x6d61
   1a9cc:	eor	r1, r1, r2
   1a9d0:	orrs	r0, r0, r1
   1a9d4:	bne	1a7ac <main@@Base+0x72b0>
   1a9d8:	movw	r9, #25856	; 0x6500
   1a9dc:	movt	r9, #31088	; 0x7970
   1a9e0:	add	r7, r6, #8
   1a9e4:	mov	r0, r7
   1a9e8:	mov	r1, r4
   1a9ec:	bl	15d14 <main@@Base+0x2818>
   1a9f0:	movw	r2, #25460	; 0x6374
   1a9f4:	movt	r2, #29281	; 0x7261
   1a9f8:	eor	r2, r1, r2
   1a9fc:	movw	r3, #24436	; 0x5f74
   1aa00:	movt	r3, #25970	; 0x6572
   1aa04:	eor	r3, r0, r3
   1aa08:	orrs	r2, r3, r2
   1aa0c:	bne	1ace4 <main@@Base+0x77e8>
   1aa10:	add	r6, r6, #16
   1aa14:	mov	r0, r6
   1aa18:	mov	r1, r4
   1aa1c:	bl	15d14 <main@@Base+0x2818>
   1aa20:	bic	r0, r1, #255	; 0xff
   1aa24:	teq	r0, r9
   1aa28:	bne	1adbc <main@@Base+0x78c0>
   1aa2c:	mov	r0, r5
   1aa30:	mov	r1, r6
   1aa34:	mov	r2, r4
   1aa38:	mov	r3, #3
   1aa3c:	bl	15d18 <main@@Base+0x281c>
   1aa40:	mov	r1, r0
   1aa44:	cmp	r6, r0
   1aa48:	beq	1add4 <main@@Base+0x78d8>
   1aa4c:	ldr	r0, [sp, #28]
   1aa50:	mov	r2, #1
   1aa54:	str	r2, [sp]
   1aa58:	str	r0, [sp, #4]
   1aa5c:	movw	r0, #29404	; 0x72dc
   1aa60:	movt	r0, #3
   1aa64:	str	r0, [sp, #8]
   1aa68:	movw	r0, #48328	; 0xbcc8
   1aa6c:	movt	r0, #1
   1aa70:	str	r0, [sp, #12]
   1aa74:	mov	r0, r5
   1aa78:	mov	r2, r4
   1aa7c:	mov	r3, #0
   1aa80:	bl	223f0 <flatcc_json_parser_union_type@@Base>
   1aa84:	b	1ade0 <main@@Base+0x78e4>
   1aa88:	add	r6, r6, #8
   1aa8c:	mov	r0, r6
   1aa90:	mov	r1, r4
   1aa94:	bl	15d14 <main@@Base+0x2818>
   1aa98:	bfc	r1, #0, #16
   1aa9c:	movw	r0, #0
   1aaa0:	movt	r0, #28773	; 0x7065
   1aaa4:	teq	r1, r0
   1aaa8:	bne	1a7ac <main@@Base+0x72b0>
   1aaac:	mov	r0, r5
   1aab0:	mov	r1, r6
   1aab4:	mov	r2, r4
   1aab8:	mov	r3, #2
   1aabc:	bl	15d18 <main@@Base+0x281c>
   1aac0:	mov	r1, r0
   1aac4:	cmp	r6, r0
   1aac8:	beq	1adb4 <main@@Base+0x78b8>
   1aacc:	ldr	r0, [sp, #28]
   1aad0:	mov	r2, #7
   1aad4:	str	r2, [sp]
   1aad8:	str	r0, [sp, #4]
   1aadc:	movw	r0, #29372	; 0x72bc
   1aae0:	movt	r0, #3
   1aae4:	str	r0, [sp, #8]
   1aae8:	movw	r0, #48328	; 0xbcc8
   1aaec:	movt	r0, #1
   1aaf0:	str	r0, [sp, #12]
   1aaf4:	mov	r0, r5
   1aaf8:	mov	r2, r4
   1aafc:	mov	r3, #3
   1ab00:	bl	223f0 <flatcc_json_parser_union_type@@Base>
   1ab04:	b	1a7bc <main@@Base+0x72c0>
   1ab08:	and	r0, r0, #-16777216	; 0xff000000
   1ab0c:	eor	r0, r0, #1862270976	; 0x6f000000
   1ab10:	orrs	r0, r0, r2
   1ab14:	bne	1ac64 <main@@Base+0x7768>
   1ab18:	mov	r0, r5
   1ab1c:	mov	r1, r6
   1ab20:	mov	r2, r4
   1ab24:	mov	r3, #5
   1ab28:	bl	15d18 <main@@Base+0x281c>
   1ab2c:	mov	r1, r0
   1ab30:	cmp	r6, r0
   1ab34:	add	r7, sp, #32
   1ab38:	beq	1adb4 <main@@Base+0x78b8>
   1ab3c:	ldr	r0, [sp, #28]
   1ab40:	mov	r2, #7
   1ab44:	str	r2, [sp]
   1ab48:	str	r0, [sp, #4]
   1ab4c:	movw	r0, #48328	; 0xbcc8
   1ab50:	movt	r0, #1
   1ab54:	str	r0, [sp, #8]
   1ab58:	mov	r0, r5
   1ab5c:	mov	r2, r4
   1ab60:	mov	r3, #3
   1ab64:	bl	222cc <flatcc_json_parser_union@@Base>
   1ab68:	b	1a7bc <main@@Base+0x72c0>
   1ab6c:	bfc	r1, #0, #16
   1ab70:	movw	r0, #0
   1ab74:	movt	r0, #29556	; 0x7374
   1ab78:	teq	r1, r0
   1ab7c:	add	r7, sp, #32
   1ab80:	bne	1a7ac <main@@Base+0x72b0>
   1ab84:	mov	r0, r5
   1ab88:	mov	r1, r6
   1ab8c:	mov	r2, r4
   1ab90:	mov	r3, #2
   1ab94:	bl	15d18 <main@@Base+0x281c>
   1ab98:	mov	r1, r0
   1ab9c:	cmp	r6, r0
   1aba0:	beq	1adb4 <main@@Base+0x78b8>
   1aba4:	ldr	r0, [sp, #28]
   1aba8:	mov	r2, #3
   1abac:	str	r2, [sp]
   1abb0:	str	r0, [sp, #4]
   1abb4:	movw	r0, #48328	; 0xbcc8
   1abb8:	movt	r0, #1
   1abbc:	str	r0, [sp, #8]
   1abc0:	mov	r0, r5
   1abc4:	mov	r2, r4
   1abc8:	mov	r3, #1
   1abcc:	bl	222cc <flatcc_json_parser_union@@Base>
   1abd0:	b	1a7bc <main@@Base+0x72c0>
   1abd4:	add	r6, r6, #8
   1abd8:	mov	r0, r6
   1abdc:	mov	r1, r4
   1abe0:	bl	15d14 <main@@Base+0x2818>
   1abe4:	lsr	r0, r0, #16
   1abe8:	orr	r0, r0, r1, lsl #16
   1abec:	movw	r2, #28773	; 0x7065
   1abf0:	movt	r2, #29817	; 0x7479
   1abf4:	eor	r0, r0, r2
   1abf8:	movw	r2, #27487	; 0x6b5f
   1abfc:	eor	r2, r2, r1, lsr #16
   1ac00:	orrs	r0, r0, r2
   1ac04:	bne	1ad58 <main@@Base+0x785c>
   1ac08:	mov	r0, r5
   1ac0c:	mov	r1, r6
   1ac10:	mov	r2, r4
   1ac14:	mov	r3, #6
   1ac18:	bl	15d18 <main@@Base+0x281c>
   1ac1c:	mov	r1, r0
   1ac20:	cmp	r6, r0
   1ac24:	beq	1adb4 <main@@Base+0x78b8>
   1ac28:	ldr	r0, [sp, #28]
   1ac2c:	mov	r2, #5
   1ac30:	str	r2, [sp]
   1ac34:	str	r0, [sp, #4]
   1ac38:	movw	r0, #29420	; 0x72ec
   1ac3c:	movt	r0, #3
   1ac40:	str	r0, [sp, #8]
   1ac44:	movw	r0, #48328	; 0xbcc8
   1ac48:	movt	r0, #1
   1ac4c:	str	r0, [sp, #12]
   1ac50:	mov	r0, r5
   1ac54:	mov	r2, r4
   1ac58:	mov	r3, #2
   1ac5c:	bl	223f0 <flatcc_json_parser_union_type@@Base>
   1ac60:	b	1a7bc <main@@Base+0x72c0>
   1ac64:	mov	r0, r5
   1ac68:	mov	r1, r6
   1ac6c:	mov	r2, r4
   1ac70:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1ac74:	mov	r1, r0
   1ac78:	add	r7, sp, #32
   1ac7c:	b	1a7c0 <main@@Base+0x72c4>
   1ac80:	bfc	r1, #0, #16
   1ac84:	movw	r0, #0
   1ac88:	movt	r0, #29299	; 0x7273
   1ac8c:	teq	r1, r0
   1ac90:	bne	1a7ac <main@@Base+0x72b0>
   1ac94:	mov	r0, r5
   1ac98:	mov	r1, r6
   1ac9c:	mov	r2, r4
   1aca0:	mov	r3, #2
   1aca4:	bl	15d18 <main@@Base+0x281c>
   1aca8:	mov	r1, r0
   1acac:	cmp	r6, r0
   1acb0:	beq	1adb4 <main@@Base+0x78b8>
   1acb4:	ldr	r0, [sp, #28]
   1acb8:	mov	r2, #9
   1acbc:	str	r2, [sp]
   1acc0:	str	r0, [sp, #4]
   1acc4:	movw	r0, #48328	; 0xbcc8
   1acc8:	movt	r0, #1
   1accc:	str	r0, [sp, #8]
   1acd0:	mov	r0, r5
   1acd4:	mov	r2, r4
   1acd8:	mov	r3, #4
   1acdc:	bl	2278c <flatcc_json_parser_union_vector@@Base>
   1ace0:	b	1a7bc <main@@Base+0x72c0>
   1ace4:	movw	r2, #29281	; 0x7261
   1ace8:	eor	r2, r2, r1, lsr #16
   1acec:	lsr	r0, r0, #16
   1acf0:	orr	r0, r0, r1, lsl #16
   1acf4:	movw	r1, #25970	; 0x6572
   1acf8:	movt	r1, #25460	; 0x6374
   1acfc:	eor	r0, r0, r1
   1ad00:	orrs	r0, r0, r2
   1ad04:	bne	1adc8 <main@@Base+0x78cc>
   1ad08:	mov	r0, r5
   1ad0c:	mov	r1, r7
   1ad10:	mov	r2, r4
   1ad14:	mov	r3, #6
   1ad18:	bl	15d18 <main@@Base+0x281c>
   1ad1c:	mov	r1, r0
   1ad20:	cmp	r7, r0
   1ad24:	beq	1add4 <main@@Base+0x78d8>
   1ad28:	ldr	r0, [sp, #28]
   1ad2c:	mov	r2, #1
   1ad30:	str	r2, [sp]
   1ad34:	str	r0, [sp, #4]
   1ad38:	movw	r0, #48328	; 0xbcc8
   1ad3c:	movt	r0, #1
   1ad40:	str	r0, [sp, #8]
   1ad44:	mov	r0, r5
   1ad48:	mov	r2, r4
   1ad4c:	mov	r3, #0
   1ad50:	bl	222cc <flatcc_json_parser_union@@Base>
   1ad54:	b	1ade0 <main@@Base+0x78e4>
   1ad58:	and	r0, r1, #-16777216	; 0xff000000
   1ad5c:	teq	r0, #1795162112	; 0x6b000000
   1ad60:	bne	1a7ac <main@@Base+0x72b0>
   1ad64:	mov	r0, r5
   1ad68:	mov	r1, r6
   1ad6c:	mov	r2, r4
   1ad70:	mov	r3, #1
   1ad74:	bl	15d18 <main@@Base+0x281c>
   1ad78:	mov	r1, r0
   1ad7c:	cmp	r6, r0
   1ad80:	beq	1adb4 <main@@Base+0x78b8>
   1ad84:	ldr	r0, [sp, #28]
   1ad88:	mov	r2, #5
   1ad8c:	str	r2, [sp]
   1ad90:	str	r0, [sp, #4]
   1ad94:	movw	r0, #48328	; 0xbcc8
   1ad98:	movt	r0, #1
   1ad9c:	str	r0, [sp, #8]
   1ada0:	mov	r0, r5
   1ada4:	mov	r2, r4
   1ada8:	mov	r3, #2
   1adac:	bl	222cc <flatcc_json_parser_union@@Base>
   1adb0:	b	1a7bc <main@@Base+0x72c0>
   1adb4:	mov	r0, r5
   1adb8:	b	1a7b4 <main@@Base+0x72b8>
   1adbc:	mov	r0, r5
   1adc0:	mov	r1, r6
   1adc4:	b	1add8 <main@@Base+0x78dc>
   1adc8:	mov	r0, r5
   1adcc:	mov	r1, r7
   1add0:	b	1add8 <main@@Base+0x78dc>
   1add4:	mov	r0, r5
   1add8:	mov	r2, r4
   1addc:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1ade0:	mov	r1, r0
   1ade4:	movw	r9, #29797	; 0x7465
   1ade8:	movt	r9, #24931	; 0x6163
   1adec:	add	r7, sp, #32
   1adf0:	b	1a7c0 <main@@Base+0x72c4>
   1adf4:	ldr	r0, [r5, #24]
   1adf8:	cmp	r0, #0
   1adfc:	bne	1a708 <main@@Base+0x720c>
   1ae00:	ldr	r3, [sp, #28]
   1ae04:	mov	r0, r5
   1ae08:	mov	r1, r6
   1ae0c:	mov	r2, r4
   1ae10:	bl	22270 <flatcc_json_parser_finalize_unions@@Base>
   1ae14:	mov	r6, r0
   1ae18:	ldr	r0, [r5]
   1ae1c:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1ae20:	ldr	r1, [sp, #20]
   1ae24:	str	r0, [r1]
   1ae28:	cmp	r0, #0
   1ae2c:	bne	1a720 <main@@Base+0x7224>
   1ae30:	b	1a708 <main@@Base+0x720c>
   1ae34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae38:	add	fp, sp, #28
   1ae3c:	sub	sp, sp, #20
   1ae40:	mov	r6, r3
   1ae44:	mov	r4, r2
   1ae48:	mov	r9, r1
   1ae4c:	mov	r5, r0
   1ae50:	mov	r0, #0
   1ae54:	str	r0, [r3]
   1ae58:	ldr	r0, [r5]
   1ae5c:	mov	r1, #2
   1ae60:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1ae64:	cmp	r0, #0
   1ae68:	bne	1b138 <main@@Base+0x7c3c>
   1ae6c:	str	r6, [sp, #4]
   1ae70:	add	r3, sp, #16
   1ae74:	mov	r0, r5
   1ae78:	mov	r1, r9
   1ae7c:	mov	r2, r4
   1ae80:	bl	15c40 <main@@Base+0x2744>
   1ae84:	mov	r9, r0
   1ae88:	ldr	r0, [sp, #16]
   1ae8c:	cmp	r0, #0
   1ae90:	beq	1b12c <main@@Base+0x7c30>
   1ae94:	movw	sl, #24929	; 0x6161
   1ae98:	movt	sl, #24929	; 0x6161
   1ae9c:	movw	r7, #25186	; 0x6262
   1aea0:	movt	r7, #24418	; 0x5f62
   1aea4:	add	r8, sp, #16
   1aea8:	b	1aee4 <main@@Base+0x79e8>
   1aeac:	mov	r0, r5
   1aeb0:	mov	r1, r6
   1aeb4:	mov	r2, r4
   1aeb8:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1aebc:	mov	r9, r0
   1aec0:	mov	r0, r5
   1aec4:	mov	r1, r9
   1aec8:	mov	r2, r4
   1aecc:	mov	r3, r8
   1aed0:	bl	18efc <main@@Base+0x5a00>
   1aed4:	mov	r9, r0
   1aed8:	ldr	r0, [sp, #16]
   1aedc:	cmp	r0, #0
   1aee0:	beq	1b12c <main@@Base+0x7c30>
   1aee4:	mov	r0, r5
   1aee8:	mov	r1, r9
   1aeec:	mov	r2, r4
   1aef0:	bl	15cd0 <main@@Base+0x27d4>
   1aef4:	mov	r6, r0
   1aef8:	mov	r1, r4
   1aefc:	bl	15d14 <main@@Base+0x2818>
   1af00:	eor	r1, r1, sl
   1af04:	eor	r0, r0, r7
   1af08:	orrs	r0, r0, r1
   1af0c:	bne	1aeac <main@@Base+0x79b0>
   1af10:	add	r6, r6, #8
   1af14:	mov	r0, r6
   1af18:	mov	r1, r4
   1af1c:	bl	15d14 <main@@Base+0x2818>
   1af20:	lsr	r2, r0, #8
   1af24:	orr	r2, r2, r1, lsl #24
   1af28:	movw	r3, #28787	; 0x7073
   1af2c:	movt	r3, #29797	; 0x7465
   1af30:	eor	r2, r2, r3
   1af34:	movw	r3, #24435	; 0x5f73
   1af38:	movt	r3, #98	; 0x62
   1af3c:	eor	r3, r3, r1, lsr #8
   1af40:	orrs	r2, r2, r3
   1af44:	bne	1afa0 <main@@Base+0x7aa4>
   1af48:	mov	r0, r5
   1af4c:	mov	r1, r6
   1af50:	mov	r2, r4
   1af54:	mov	r3, #7
   1af58:	bl	15d18 <main@@Base+0x281c>
   1af5c:	mov	r7, r0
   1af60:	cmp	r6, r0
   1af64:	beq	1b01c <main@@Base+0x7b20>
   1af68:	mov	r0, #0
   1af6c:	str	r0, [sp, #12]
   1af70:	str	r0, [sp, #8]
   1af74:	mov	r0, r5
   1af78:	mov	r1, r7
   1af7c:	mov	r2, r4
   1af80:	add	r9, sp, #8
   1af84:	mov	r3, r9
   1af88:	bl	1873c <main@@Base+0x5240>
   1af8c:	mov	r6, r0
   1af90:	cmp	r7, r0
   1af94:	beq	1b034 <main@@Base+0x7b38>
   1af98:	mov	r9, r6
   1af9c:	b	1b060 <main@@Base+0x7b64>
   1afa0:	movw	r2, #29791	; 0x745f
   1afa4:	movt	r2, #24946	; 0x6172
   1afa8:	eor	r0, r0, r2
   1afac:	movw	r2, #29556	; 0x7374
   1afb0:	movt	r2, #25183	; 0x625f
   1afb4:	eor	r1, r1, r2
   1afb8:	orrs	r0, r0, r1
   1afbc:	bne	1aeac <main@@Base+0x79b0>
   1afc0:	mov	r0, r5
   1afc4:	mov	r1, r6
   1afc8:	mov	r2, r4
   1afcc:	mov	r3, #8
   1afd0:	bl	15d18 <main@@Base+0x281c>
   1afd4:	mov	r7, r0
   1afd8:	cmp	r6, r0
   1afdc:	beq	1b01c <main@@Base+0x7b20>
   1afe0:	mov	r0, #0
   1afe4:	str	r0, [sp, #8]
   1afe8:	mov	r0, r5
   1afec:	mov	r1, r7
   1aff0:	mov	r2, r4
   1aff4:	add	r9, sp, #8
   1aff8:	mov	r3, r9
   1affc:	bl	18960 <main@@Base+0x5464>
   1b000:	mov	r6, r0
   1b004:	cmp	r7, r0
   1b008:	beq	1b0b8 <main@@Base+0x7bbc>
   1b00c:	mov	r9, r6
   1b010:	movw	r7, #25186	; 0x6262
   1b014:	movt	r7, #24418	; 0x5f62
   1b018:	b	1b0ec <main@@Base+0x7bf0>
   1b01c:	mov	r0, r5
   1b020:	mov	r1, r7
   1b024:	mov	r2, r4
   1b028:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1b02c:	mov	r9, r0
   1b030:	b	1b0ac <main@@Base+0x7bb0>
   1b034:	str	r9, [sp]
   1b038:	mov	r0, r5
   1b03c:	mov	r1, r6
   1b040:	mov	r2, r4
   1b044:	movw	r3, #29236	; 0x7234
   1b048:	movt	r3, #3
   1b04c:	bl	187d0 <main@@Base+0x52d4>
   1b050:	mov	r9, r0
   1b054:	cmp	r0, r6
   1b058:	cmpne	r9, r4
   1b05c:	beq	1b138 <main@@Base+0x7c3c>
   1b060:	mov	r7, sl
   1b064:	ldr	r6, [sp, #8]
   1b068:	ldr	sl, [sp, #12]
   1b06c:	orrs	r0, r6, sl
   1b070:	bne	1b080 <main@@Base+0x7b84>
   1b074:	ldrb	r0, [r5, #8]
   1b078:	tst	r0, #2
   1b07c:	beq	1b0a8 <main@@Base+0x7bac>
   1b080:	ldr	r0, [r5]
   1b084:	mov	r1, #0
   1b088:	mov	r2, #8
   1b08c:	mov	r3, #8
   1b090:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1b094:	cmp	r0, #0
   1b098:	beq	1b138 <main@@Base+0x7c3c>
   1b09c:	mov	r2, r6
   1b0a0:	mov	r3, sl
   1b0a4:	bl	18938 <main@@Base+0x543c>
   1b0a8:	mov	sl, r7
   1b0ac:	movw	r7, #25186	; 0x6262
   1b0b0:	movt	r7, #24418	; 0x5f62
   1b0b4:	b	1aec0 <main@@Base+0x79c4>
   1b0b8:	str	r9, [sp]
   1b0bc:	mov	r0, r5
   1b0c0:	mov	r1, r6
   1b0c4:	mov	r2, r4
   1b0c8:	movw	r3, #29248	; 0x7240
   1b0cc:	movt	r3, #3
   1b0d0:	bl	189f0 <main@@Base+0x54f4>
   1b0d4:	mov	r9, r0
   1b0d8:	cmp	r0, r6
   1b0dc:	movw	r7, #25186	; 0x6262
   1b0e0:	movt	r7, #24418	; 0x5f62
   1b0e4:	cmpne	r9, r4
   1b0e8:	beq	1b138 <main@@Base+0x7c3c>
   1b0ec:	ldr	r6, [sp, #8]
   1b0f0:	cmp	r6, #0
   1b0f4:	bne	1b104 <main@@Base+0x7c08>
   1b0f8:	ldrb	r0, [r5, #8]
   1b0fc:	tst	r0, #2
   1b100:	beq	1aec0 <main@@Base+0x79c4>
   1b104:	ldr	r0, [r5]
   1b108:	mov	r1, #1
   1b10c:	mov	r2, #4
   1b110:	mov	r3, #4
   1b114:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1b118:	cmp	r0, #0
   1b11c:	beq	1b138 <main@@Base+0x7c3c>
   1b120:	mov	r1, r6
   1b124:	bl	18b54 <main@@Base+0x5658>
   1b128:	b	1aec0 <main@@Base+0x79c4>
   1b12c:	ldr	r0, [r5, #24]
   1b130:	cmp	r0, #0
   1b134:	beq	1b15c <main@@Base+0x7c60>
   1b138:	mov	r0, r5
   1b13c:	mov	r1, r9
   1b140:	mov	r2, r4
   1b144:	mov	r3, #33	; 0x21
   1b148:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1b14c:	mov	r9, r0
   1b150:	mov	r0, r9
   1b154:	sub	sp, fp, #28
   1b158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b15c:	ldr	r0, [r5]
   1b160:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1b164:	ldr	r1, [sp, #4]
   1b168:	str	r0, [r1]
   1b16c:	cmp	r0, #0
   1b170:	bne	1b150 <main@@Base+0x7c54>
   1b174:	b	1b138 <main@@Base+0x7c3c>
   1b178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b17c:	add	fp, sp, #28
   1b180:	sub	sp, sp, #44	; 0x2c
   1b184:	mov	r5, r3
   1b188:	mov	r4, r2
   1b18c:	mov	r8, r1
   1b190:	mov	sl, r0
   1b194:	mov	r0, #0
   1b198:	str	r0, [r3]
   1b19c:	ldr	r0, [sl]
   1b1a0:	mov	r1, #9
   1b1a4:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1b1a8:	cmp	r0, #0
   1b1ac:	beq	1b1d4 <main@@Base+0x7cd8>
   1b1b0:	mov	r0, sl
   1b1b4:	mov	r1, r8
   1b1b8:	mov	r2, r4
   1b1bc:	mov	r3, #33	; 0x21
   1b1c0:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1b1c4:	mov	r8, r0
   1b1c8:	mov	r0, r8
   1b1cc:	sub	sp, fp, #28
   1b1d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1d4:	str	r5, [sp, #8]
   1b1d8:	sub	r3, fp, #32
   1b1dc:	mov	r0, sl
   1b1e0:	mov	r1, r8
   1b1e4:	mov	r2, r4
   1b1e8:	bl	15c40 <main@@Base+0x2744>
   1b1ec:	mov	r8, r0
   1b1f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b1f4:	cmp	r0, #0
   1b1f8:	beq	1b8a4 <main@@Base+0x83a8>
   1b1fc:	movw	r1, #24929	; 0x6161
   1b200:	movt	r1, #24929	; 0x6161
   1b204:	add	r9, sp, #24
   1b208:	movw	r0, #257	; 0x101
   1b20c:	movt	r0, #257	; 0x101
   1b210:	add	r0, r1, r0
   1b214:	str	r0, [sp, #16]
   1b218:	movw	r0, #514	; 0x202
   1b21c:	movt	r0, #514	; 0x202
   1b220:	add	r0, r1, r0
   1b224:	str	r0, [sp, #20]
   1b228:	movw	r0, #771	; 0x303
   1b22c:	movt	r0, #771	; 0x303
   1b230:	add	r0, r1, r0
   1b234:	str	r0, [sp, #12]
   1b238:	b	1b274 <main@@Base+0x7d78>
   1b23c:	mov	r0, sl
   1b240:	mov	r1, r6
   1b244:	mov	r2, r4
   1b248:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1b24c:	mov	r8, r0
   1b250:	mov	r0, sl
   1b254:	mov	r1, r8
   1b258:	mov	r2, r4
   1b25c:	sub	r3, fp, #32
   1b260:	bl	18efc <main@@Base+0x5a00>
   1b264:	mov	r8, r0
   1b268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b26c:	cmp	r0, #0
   1b270:	beq	1b8a4 <main@@Base+0x83a8>
   1b274:	mov	r0, sl
   1b278:	mov	r1, r8
   1b27c:	mov	r2, r4
   1b280:	bl	15cd0 <main@@Base+0x27d4>
   1b284:	mov	r7, r0
   1b288:	mov	r1, r4
   1b28c:	bl	15d14 <main@@Base+0x2818>
   1b290:	mov	r6, r1
   1b294:	movw	r1, #25442	; 0x6362
   1b298:	movt	r1, #25443	; 0x6363
   1b29c:	cmp	r6, r1
   1b2a0:	bhi	1b330 <main@@Base+0x7e34>
   1b2a4:	movw	r1, #13108	; 0x3334
   1b2a8:	movt	r1, #12594	; 0x3132
   1b2ac:	eor	r5, r0, r1
   1b2b0:	movw	r1, #24929	; 0x6161
   1b2b4:	movt	r1, #24929	; 0x6161
   1b2b8:	eor	r0, r6, r1
   1b2bc:	orrs	r0, r5, r0
   1b2c0:	bne	1b3a0 <main@@Base+0x7ea4>
   1b2c4:	add	r6, r7, #8
   1b2c8:	mov	r0, r6
   1b2cc:	mov	r1, r4
   1b2d0:	bl	15d14 <main@@Base+0x2818>
   1b2d4:	and	r0, r1, #-16777216	; 0xff000000
   1b2d8:	teq	r0, #889192448	; 0x35000000
   1b2dc:	bne	1b23c <main@@Base+0x7d40>
   1b2e0:	mov	r0, sl
   1b2e4:	mov	r1, r6
   1b2e8:	mov	r2, r4
   1b2ec:	mov	r3, #1
   1b2f0:	bl	15d18 <main@@Base+0x281c>
   1b2f4:	mov	r7, r0
   1b2f8:	cmp	r6, r0
   1b2fc:	beq	1b6bc <main@@Base+0x81c0>
   1b300:	mov	r0, #0
   1b304:	str	r0, [sp, #24]
   1b308:	mov	r0, sl
   1b30c:	mov	r1, r7
   1b310:	mov	r2, r4
   1b314:	mov	r3, r9
   1b318:	bl	18960 <main@@Base+0x5464>
   1b31c:	mov	r6, r0
   1b320:	cmp	r7, r0
   1b324:	beq	1b6c8 <main@@Base+0x81cc>
   1b328:	mov	r8, r6
   1b32c:	b	1b6f4 <main@@Base+0x81f8>
   1b330:	movw	r1, #13108	; 0x3334
   1b334:	movt	r1, #12594	; 0x3132
   1b338:	eor	r5, r0, r1
   1b33c:	ldr	r0, [sp, #20]
   1b340:	eor	r0, r6, r0
   1b344:	orrs	r0, r5, r0
   1b348:	bne	1b3f4 <main@@Base+0x7ef8>
   1b34c:	mov	r0, sl
   1b350:	mov	r1, r7
   1b354:	mov	r2, r4
   1b358:	mov	r3, #8
   1b35c:	bl	15d18 <main@@Base+0x281c>
   1b360:	mov	r6, r0
   1b364:	cmp	r7, r0
   1b368:	beq	1b450 <main@@Base+0x7f54>
   1b36c:	mov	r0, #0
   1b370:	str	r0, [sp, #28]
   1b374:	str	r0, [sp, #24]
   1b378:	mov	r0, sl
   1b37c:	mov	r1, r6
   1b380:	mov	r2, r4
   1b384:	mov	r3, r9
   1b388:	bl	1873c <main@@Base+0x5240>
   1b38c:	mov	r7, r0
   1b390:	cmp	r6, r0
   1b394:	beq	1b4bc <main@@Base+0x7fc0>
   1b398:	mov	r8, r7
   1b39c:	b	1b4e8 <main@@Base+0x7fec>
   1b3a0:	teq	r6, r1
   1b3a4:	bne	1b514 <main@@Base+0x8018>
   1b3a8:	mov	r0, sl
   1b3ac:	mov	r1, r7
   1b3b0:	mov	r2, r4
   1b3b4:	mov	r3, #4
   1b3b8:	bl	15d18 <main@@Base+0x281c>
   1b3bc:	mov	r1, r0
   1b3c0:	cmp	r7, r0
   1b3c4:	beq	1b510 <main@@Base+0x8014>
   1b3c8:	mov	r0, sl
   1b3cc:	mov	r2, r4
   1b3d0:	add	r3, sp, #36	; 0x24
   1b3d4:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   1b3d8:	mov	r8, r0
   1b3dc:	ldr	r0, [sp, #36]	; 0x24
   1b3e0:	cmp	r0, #0
   1b3e4:	beq	1b1b0 <main@@Base+0x7cb4>
   1b3e8:	ldr	r0, [sl]
   1b3ec:	mov	r1, #0
   1b3f0:	b	1b5d0 <main@@Base+0x80d4>
   1b3f4:	movw	r0, #25443	; 0x6363
   1b3f8:	movt	r0, #25443	; 0x6363
   1b3fc:	teq	r6, r0
   1b400:	bne	1b5ec <main@@Base+0x80f0>
   1b404:	mov	r0, sl
   1b408:	mov	r1, r7
   1b40c:	mov	r2, r4
   1b410:	mov	r3, #4
   1b414:	bl	15d18 <main@@Base+0x281c>
   1b418:	mov	r1, r0
   1b41c:	cmp	r7, r0
   1b420:	beq	1b5e8 <main@@Base+0x80ec>
   1b424:	mov	r0, sl
   1b428:	mov	r2, r4
   1b42c:	add	r3, sp, #36	; 0x24
   1b430:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   1b434:	mov	r8, r0
   1b438:	ldr	r0, [sp, #36]	; 0x24
   1b43c:	cmp	r0, #0
   1b440:	beq	1b1b0 <main@@Base+0x7cb4>
   1b444:	ldr	r0, [sl]
   1b448:	mov	r1, #4
   1b44c:	b	1b5d0 <main@@Base+0x80d4>
   1b450:	add	r6, r6, #8
   1b454:	mov	r0, r6
   1b458:	mov	r1, r4
   1b45c:	bl	15d14 <main@@Base+0x2818>
   1b460:	and	r0, r1, #-16777216	; 0xff000000
   1b464:	teq	r0, #889192448	; 0x35000000
   1b468:	bne	1b23c <main@@Base+0x7d40>
   1b46c:	mov	r0, sl
   1b470:	mov	r1, r6
   1b474:	mov	r2, r4
   1b478:	mov	r3, #1
   1b47c:	bl	15d18 <main@@Base+0x281c>
   1b480:	mov	r7, r0
   1b484:	cmp	r6, r0
   1b488:	beq	1b6bc <main@@Base+0x81c0>
   1b48c:	mov	r0, #0
   1b490:	str	r0, [sp, #24]
   1b494:	mov	r0, sl
   1b498:	mov	r1, r7
   1b49c:	mov	r2, r4
   1b4a0:	mov	r3, r9
   1b4a4:	bl	18960 <main@@Base+0x5464>
   1b4a8:	mov	r6, r0
   1b4ac:	cmp	r7, r0
   1b4b0:	beq	1b7e8 <main@@Base+0x82ec>
   1b4b4:	mov	r8, r6
   1b4b8:	b	1b814 <main@@Base+0x8318>
   1b4bc:	str	r9, [sp]
   1b4c0:	mov	r0, sl
   1b4c4:	mov	r1, r7
   1b4c8:	mov	r2, r4
   1b4cc:	movw	r3, #29284	; 0x7264
   1b4d0:	movt	r3, #3
   1b4d4:	bl	187d0 <main@@Base+0x52d4>
   1b4d8:	mov	r8, r0
   1b4dc:	cmp	r0, r7
   1b4e0:	cmpne	r8, r4
   1b4e4:	beq	1b1b0 <main@@Base+0x7cb4>
   1b4e8:	ldr	r6, [sp, #24]
   1b4ec:	ldr	r7, [sp, #28]
   1b4f0:	orrs	r0, r6, r7
   1b4f4:	bne	1b504 <main@@Base+0x8008>
   1b4f8:	ldrb	r0, [sl, #8]
   1b4fc:	tst	r0, #2
   1b500:	beq	1b250 <main@@Base+0x7d54>
   1b504:	ldr	r0, [sl]
   1b508:	mov	r1, #5
   1b50c:	b	1b7bc <main@@Base+0x82c0>
   1b510:	mov	r7, r1
   1b514:	ldr	r0, [sp, #16]
   1b518:	eor	r0, r6, r0
   1b51c:	orrs	r0, r5, r0
   1b520:	bne	1b578 <main@@Base+0x807c>
   1b524:	mov	r0, sl
   1b528:	mov	r1, r7
   1b52c:	mov	r2, r4
   1b530:	mov	r3, #8
   1b534:	bl	15d18 <main@@Base+0x281c>
   1b538:	mov	r6, r0
   1b53c:	cmp	r7, r0
   1b540:	beq	1b23c <main@@Base+0x7d40>
   1b544:	mov	r0, #0
   1b548:	str	r0, [sp, #28]
   1b54c:	str	r0, [sp, #24]
   1b550:	mov	r0, sl
   1b554:	mov	r1, r6
   1b558:	mov	r2, r4
   1b55c:	mov	r3, r9
   1b560:	bl	1873c <main@@Base+0x5240>
   1b564:	mov	r7, r0
   1b568:	cmp	r6, r0
   1b56c:	beq	1b718 <main@@Base+0x821c>
   1b570:	mov	r8, r7
   1b574:	b	1b744 <main@@Base+0x8248>
   1b578:	movw	r0, #25186	; 0x6262
   1b57c:	movt	r0, #25186	; 0x6262
   1b580:	teq	r6, r0
   1b584:	bne	1b6bc <main@@Base+0x81c0>
   1b588:	mov	r0, sl
   1b58c:	mov	r1, r7
   1b590:	mov	r2, r4
   1b594:	mov	r3, #4
   1b598:	bl	15d18 <main@@Base+0x281c>
   1b59c:	mov	r1, r0
   1b5a0:	cmp	r7, r0
   1b5a4:	beq	1b7e0 <main@@Base+0x82e4>
   1b5a8:	mov	r0, sl
   1b5ac:	mov	r2, r4
   1b5b0:	add	r3, sp, #36	; 0x24
   1b5b4:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   1b5b8:	mov	r8, r0
   1b5bc:	ldr	r0, [sp, #36]	; 0x24
   1b5c0:	cmp	r0, #0
   1b5c4:	beq	1b1b0 <main@@Base+0x7cb4>
   1b5c8:	ldr	r0, [sl]
   1b5cc:	mov	r1, #2
   1b5d0:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   1b5d4:	cmp	r0, #0
   1b5d8:	beq	1b1b0 <main@@Base+0x7cb4>
   1b5dc:	ldr	r1, [sp, #36]	; 0x24
   1b5e0:	str	r1, [r0]
   1b5e4:	b	1b250 <main@@Base+0x7d54>
   1b5e8:	mov	r7, r1
   1b5ec:	ldr	r0, [sp, #12]
   1b5f0:	eor	r0, r6, r0
   1b5f4:	orrs	r0, r5, r0
   1b5f8:	bne	1b6bc <main@@Base+0x81c0>
   1b5fc:	mov	r0, sl
   1b600:	mov	r1, r7
   1b604:	mov	r2, r4
   1b608:	mov	r3, #8
   1b60c:	bl	15d18 <main@@Base+0x281c>
   1b610:	mov	r6, r0
   1b614:	cmp	r7, r0
   1b618:	beq	1b650 <main@@Base+0x8154>
   1b61c:	mov	r0, #0
   1b620:	str	r0, [sp, #28]
   1b624:	str	r0, [sp, #24]
   1b628:	mov	r0, sl
   1b62c:	mov	r1, r6
   1b630:	mov	r2, r4
   1b634:	mov	r3, r9
   1b638:	bl	1873c <main@@Base+0x5240>
   1b63c:	mov	r7, r0
   1b640:	cmp	r6, r0
   1b644:	beq	1b76c <main@@Base+0x8270>
   1b648:	mov	r8, r7
   1b64c:	b	1b798 <main@@Base+0x829c>
   1b650:	add	r6, r6, #8
   1b654:	mov	r0, r6
   1b658:	mov	r1, r4
   1b65c:	bl	15d14 <main@@Base+0x2818>
   1b660:	and	r0, r1, #-16777216	; 0xff000000
   1b664:	teq	r0, #889192448	; 0x35000000
   1b668:	bne	1b23c <main@@Base+0x7d40>
   1b66c:	mov	r0, sl
   1b670:	mov	r1, r6
   1b674:	mov	r2, r4
   1b678:	mov	r3, #1
   1b67c:	bl	15d18 <main@@Base+0x281c>
   1b680:	mov	r7, r0
   1b684:	cmp	r6, r0
   1b688:	beq	1b6bc <main@@Base+0x81c0>
   1b68c:	mov	r0, #0
   1b690:	str	r0, [sp, #24]
   1b694:	mov	r0, sl
   1b698:	mov	r1, r7
   1b69c:	mov	r2, r4
   1b6a0:	mov	r3, r9
   1b6a4:	bl	18960 <main@@Base+0x5464>
   1b6a8:	mov	r6, r0
   1b6ac:	cmp	r7, r0
   1b6b0:	beq	1b838 <main@@Base+0x833c>
   1b6b4:	mov	r8, r6
   1b6b8:	b	1b864 <main@@Base+0x8368>
   1b6bc:	mov	r0, sl
   1b6c0:	mov	r1, r7
   1b6c4:	b	1b244 <main@@Base+0x7d48>
   1b6c8:	str	r9, [sp]
   1b6cc:	mov	r0, sl
   1b6d0:	mov	r1, r6
   1b6d4:	mov	r2, r4
   1b6d8:	movw	r3, #29260	; 0x724c
   1b6dc:	movt	r3, #3
   1b6e0:	bl	189f0 <main@@Base+0x54f4>
   1b6e4:	mov	r8, r0
   1b6e8:	cmp	r0, r6
   1b6ec:	cmpne	r8, r4
   1b6f0:	beq	1b1b0 <main@@Base+0x7cb4>
   1b6f4:	ldr	r6, [sp, #24]
   1b6f8:	cmp	r6, #0
   1b6fc:	bne	1b70c <main@@Base+0x8210>
   1b700:	ldrb	r0, [sl, #8]
   1b704:	tst	r0, #2
   1b708:	beq	1b250 <main@@Base+0x7d54>
   1b70c:	ldr	r0, [sl]
   1b710:	mov	r1, #1
   1b714:	b	1b884 <main@@Base+0x8388>
   1b718:	str	r9, [sp]
   1b71c:	mov	r0, sl
   1b720:	mov	r1, r7
   1b724:	mov	r2, r4
   1b728:	movw	r3, #29272	; 0x7258
   1b72c:	movt	r3, #3
   1b730:	bl	187d0 <main@@Base+0x52d4>
   1b734:	mov	r8, r0
   1b738:	cmp	r0, r7
   1b73c:	cmpne	r8, r4
   1b740:	beq	1b1b0 <main@@Base+0x7cb4>
   1b744:	ldr	r6, [sp, #24]
   1b748:	ldr	r7, [sp, #28]
   1b74c:	orrs	r0, r6, r7
   1b750:	bne	1b760 <main@@Base+0x8264>
   1b754:	ldrb	r0, [sl, #8]
   1b758:	tst	r0, #2
   1b75c:	beq	1b250 <main@@Base+0x7d54>
   1b760:	ldr	r0, [sl]
   1b764:	mov	r1, #3
   1b768:	b	1b7bc <main@@Base+0x82c0>
   1b76c:	str	r9, [sp]
   1b770:	mov	r0, sl
   1b774:	mov	r1, r7
   1b778:	mov	r2, r4
   1b77c:	movw	r3, #29308	; 0x727c
   1b780:	movt	r3, #3
   1b784:	bl	187d0 <main@@Base+0x52d4>
   1b788:	mov	r8, r0
   1b78c:	cmp	r0, r7
   1b790:	cmpne	r8, r4
   1b794:	beq	1b1b0 <main@@Base+0x7cb4>
   1b798:	ldr	r6, [sp, #24]
   1b79c:	ldr	r7, [sp, #28]
   1b7a0:	orrs	r0, r6, r7
   1b7a4:	bne	1b7b4 <main@@Base+0x82b8>
   1b7a8:	ldrb	r0, [sl, #8]
   1b7ac:	tst	r0, #2
   1b7b0:	beq	1b250 <main@@Base+0x7d54>
   1b7b4:	ldr	r0, [sl]
   1b7b8:	mov	r1, #7
   1b7bc:	mov	r2, #8
   1b7c0:	mov	r3, #8
   1b7c4:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1b7c8:	cmp	r0, #0
   1b7cc:	beq	1b1b0 <main@@Base+0x7cb4>
   1b7d0:	mov	r2, r6
   1b7d4:	mov	r3, r7
   1b7d8:	bl	18938 <main@@Base+0x543c>
   1b7dc:	b	1b250 <main@@Base+0x7d54>
   1b7e0:	mov	r0, sl
   1b7e4:	b	1b244 <main@@Base+0x7d48>
   1b7e8:	str	r9, [sp]
   1b7ec:	mov	r0, sl
   1b7f0:	mov	r1, r6
   1b7f4:	mov	r2, r4
   1b7f8:	movw	r3, #29296	; 0x7270
   1b7fc:	movt	r3, #3
   1b800:	bl	189f0 <main@@Base+0x54f4>
   1b804:	mov	r8, r0
   1b808:	cmp	r0, r6
   1b80c:	cmpne	r8, r4
   1b810:	beq	1b1b0 <main@@Base+0x7cb4>
   1b814:	ldr	r6, [sp, #24]
   1b818:	cmp	r6, #0
   1b81c:	bne	1b82c <main@@Base+0x8330>
   1b820:	ldrb	r0, [sl, #8]
   1b824:	tst	r0, #2
   1b828:	beq	1b250 <main@@Base+0x7d54>
   1b82c:	ldr	r0, [sl]
   1b830:	mov	r1, #6
   1b834:	b	1b884 <main@@Base+0x8388>
   1b838:	str	r9, [sp]
   1b83c:	mov	r0, sl
   1b840:	mov	r1, r6
   1b844:	mov	r2, r4
   1b848:	movw	r3, #29320	; 0x7288
   1b84c:	movt	r3, #3
   1b850:	bl	189f0 <main@@Base+0x54f4>
   1b854:	mov	r8, r0
   1b858:	cmp	r0, r6
   1b85c:	cmpne	r8, r4
   1b860:	beq	1b1b0 <main@@Base+0x7cb4>
   1b864:	ldr	r6, [sp, #24]
   1b868:	cmp	r6, #0
   1b86c:	bne	1b87c <main@@Base+0x8380>
   1b870:	ldrb	r0, [sl, #8]
   1b874:	tst	r0, #2
   1b878:	beq	1b250 <main@@Base+0x7d54>
   1b87c:	ldr	r0, [sl]
   1b880:	mov	r1, #8
   1b884:	mov	r2, #4
   1b888:	mov	r3, #4
   1b88c:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1b890:	cmp	r0, #0
   1b894:	beq	1b1b0 <main@@Base+0x7cb4>
   1b898:	mov	r1, r6
   1b89c:	bl	18b54 <main@@Base+0x5658>
   1b8a0:	b	1b250 <main@@Base+0x7d54>
   1b8a4:	ldr	r0, [sl, #24]
   1b8a8:	cmp	r0, #0
   1b8ac:	bne	1b1b0 <main@@Base+0x7cb4>
   1b8b0:	ldr	r0, [sl]
   1b8b4:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1b8b8:	ldr	r1, [sp, #8]
   1b8bc:	str	r0, [r1]
   1b8c0:	cmp	r0, #0
   1b8c4:	bne	1b1c8 <main@@Base+0x7ccc>
   1b8c8:	b	1b1b0 <main@@Base+0x7cb4>
   1b8cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8d0:	add	fp, sp, #28
   1b8d4:	sub	sp, sp, #20
   1b8d8:	mov	r6, r3
   1b8dc:	mov	r4, r2
   1b8e0:	mov	r8, r1
   1b8e4:	mov	r5, r0
   1b8e8:	mov	r0, #0
   1b8ec:	str	r0, [r3]
   1b8f0:	ldr	r0, [r5]
   1b8f4:	mov	r1, #2
   1b8f8:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1b8fc:	cmp	r0, #0
   1b900:	beq	1b928 <main@@Base+0x842c>
   1b904:	mov	r0, r5
   1b908:	mov	r1, r8
   1b90c:	mov	r2, r4
   1b910:	mov	r3, #33	; 0x21
   1b914:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1b918:	mov	r8, r0
   1b91c:	mov	r0, r8
   1b920:	sub	sp, fp, #28
   1b924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b928:	str	r6, [sp, #4]
   1b92c:	add	r3, sp, #16
   1b930:	mov	r0, r5
   1b934:	mov	r1, r8
   1b938:	mov	r2, r4
   1b93c:	bl	15c40 <main@@Base+0x2744>
   1b940:	mov	r8, r0
   1b944:	ldr	r0, [sp, #16]
   1b948:	cmp	r0, #0
   1b94c:	beq	1bc08 <main@@Base+0x870c>
   1b950:	movw	r9, #24929	; 0x6161
   1b954:	movt	r9, #24929	; 0x6161
   1b958:	movw	sl, #25186	; 0x6262
   1b95c:	movt	sl, #24418	; 0x5f62
   1b960:	add	r6, sp, #16
   1b964:	b	1b9a0 <main@@Base+0x84a4>
   1b968:	mov	r0, r5
   1b96c:	mov	r1, r7
   1b970:	mov	r2, r4
   1b974:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1b978:	mov	r8, r0
   1b97c:	mov	r0, r5
   1b980:	mov	r1, r8
   1b984:	mov	r2, r4
   1b988:	mov	r3, r6
   1b98c:	bl	18efc <main@@Base+0x5a00>
   1b990:	mov	r8, r0
   1b994:	ldr	r0, [sp, #16]
   1b998:	cmp	r0, #0
   1b99c:	beq	1bc08 <main@@Base+0x870c>
   1b9a0:	mov	r0, r5
   1b9a4:	mov	r1, r8
   1b9a8:	mov	r2, r4
   1b9ac:	bl	15cd0 <main@@Base+0x27d4>
   1b9b0:	mov	r7, r0
   1b9b4:	mov	r1, r4
   1b9b8:	bl	15d14 <main@@Base+0x2818>
   1b9bc:	eor	r1, r1, r9
   1b9c0:	eor	r0, r0, sl
   1b9c4:	orrs	r0, r0, r1
   1b9c8:	bne	1b968 <main@@Base+0x846c>
   1b9cc:	add	r6, r7, #8
   1b9d0:	mov	r0, r6
   1b9d4:	mov	r1, r4
   1b9d8:	bl	15d14 <main@@Base+0x2818>
   1b9dc:	movw	r2, #29556	; 0x7374
   1b9e0:	movt	r2, #25183	; 0x625f
   1b9e4:	eor	r2, r1, r2
   1b9e8:	movw	r3, #29791	; 0x745f
   1b9ec:	movt	r3, #24946	; 0x6172
   1b9f0:	eor	r3, r0, r3
   1b9f4:	orrs	r2, r3, r2
   1b9f8:	bne	1ba7c <main@@Base+0x8580>
   1b9fc:	add	r6, r7, #16
   1ba00:	mov	r0, r6
   1ba04:	mov	r1, r4
   1ba08:	bl	15d14 <main@@Base+0x2818>
   1ba0c:	movw	r2, #25968	; 0x6570
   1ba10:	movt	r2, #29556	; 0x7374
   1ba14:	eor	r1, r1, r2
   1ba18:	and	r0, r0, #-16777216	; 0xff000000
   1ba1c:	eor	r0, r0, #1929379840	; 0x73000000
   1ba20:	orrs	r0, r0, r1
   1ba24:	bne	1bafc <main@@Base+0x8600>
   1ba28:	mov	r0, r5
   1ba2c:	mov	r1, r6
   1ba30:	mov	r2, r4
   1ba34:	mov	r3, #5
   1ba38:	bl	15d18 <main@@Base+0x281c>
   1ba3c:	mov	r7, r0
   1ba40:	cmp	r6, r0
   1ba44:	add	r8, sp, #8
   1ba48:	beq	1bb08 <main@@Base+0x860c>
   1ba4c:	mov	r0, #0
   1ba50:	str	r0, [sp, #8]
   1ba54:	mov	r0, r5
   1ba58:	mov	r1, r7
   1ba5c:	mov	r2, r4
   1ba60:	mov	r3, r8
   1ba64:	bl	18960 <main@@Base+0x5464>
   1ba68:	mov	r6, r0
   1ba6c:	cmp	r7, r0
   1ba70:	beq	1bb24 <main@@Base+0x8628>
   1ba74:	mov	r8, r6
   1ba78:	b	1bb50 <main@@Base+0x8654>
   1ba7c:	movw	r2, #24435	; 0x5f73
   1ba80:	movt	r2, #98	; 0x62
   1ba84:	eor	r2, r2, r1, lsr #8
   1ba88:	lsr	r0, r0, #8
   1ba8c:	orr	r0, r0, r1, lsl #24
   1ba90:	movw	r1, #28787	; 0x7073
   1ba94:	movt	r1, #29797	; 0x7465
   1ba98:	eor	r0, r0, r1
   1ba9c:	orrs	r0, r0, r2
   1baa0:	bne	1bafc <main@@Base+0x8600>
   1baa4:	mov	r0, r5
   1baa8:	mov	r1, r6
   1baac:	mov	r2, r4
   1bab0:	mov	r3, #7
   1bab4:	bl	15d18 <main@@Base+0x281c>
   1bab8:	mov	r7, r0
   1babc:	cmp	r6, r0
   1bac0:	add	r8, sp, #8
   1bac4:	beq	1bb08 <main@@Base+0x860c>
   1bac8:	mov	r0, #0
   1bacc:	str	r0, [sp, #12]
   1bad0:	str	r0, [sp, #8]
   1bad4:	mov	r0, r5
   1bad8:	mov	r1, r7
   1badc:	mov	r2, r4
   1bae0:	mov	r3, r8
   1bae4:	bl	1873c <main@@Base+0x5240>
   1bae8:	mov	r6, r0
   1baec:	cmp	r7, r0
   1baf0:	beq	1bb90 <main@@Base+0x8694>
   1baf4:	mov	r8, r6
   1baf8:	b	1bbbc <main@@Base+0x86c0>
   1bafc:	mov	r0, r5
   1bb00:	mov	r1, r6
   1bb04:	b	1bb10 <main@@Base+0x8614>
   1bb08:	mov	r0, r5
   1bb0c:	mov	r1, r7
   1bb10:	mov	r2, r4
   1bb14:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1bb18:	mov	r8, r0
   1bb1c:	add	r6, sp, #16
   1bb20:	b	1b97c <main@@Base+0x8480>
   1bb24:	str	r8, [sp]
   1bb28:	mov	r0, r5
   1bb2c:	mov	r1, r6
   1bb30:	mov	r2, r4
   1bb34:	movw	r3, #29332	; 0x7294
   1bb38:	movt	r3, #3
   1bb3c:	bl	189f0 <main@@Base+0x54f4>
   1bb40:	mov	r8, r0
   1bb44:	cmp	r0, r6
   1bb48:	cmpne	r8, r4
   1bb4c:	beq	1b904 <main@@Base+0x8408>
   1bb50:	ldr	r6, [sp, #8]
   1bb54:	cmp	r6, #0
   1bb58:	bne	1bb68 <main@@Base+0x866c>
   1bb5c:	ldrb	r0, [r5, #8]
   1bb60:	tst	r0, #2
   1bb64:	beq	1bc00 <main@@Base+0x8704>
   1bb68:	ldr	r0, [r5]
   1bb6c:	mov	r1, #1
   1bb70:	mov	r2, #4
   1bb74:	mov	r3, #4
   1bb78:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1bb7c:	cmp	r0, #0
   1bb80:	beq	1b904 <main@@Base+0x8408>
   1bb84:	mov	r1, r6
   1bb88:	bl	18b54 <main@@Base+0x5658>
   1bb8c:	b	1bc00 <main@@Base+0x8704>
   1bb90:	str	r8, [sp]
   1bb94:	mov	r0, r5
   1bb98:	mov	r1, r6
   1bb9c:	mov	r2, r4
   1bba0:	movw	r3, #29344	; 0x72a0
   1bba4:	movt	r3, #3
   1bba8:	bl	187d0 <main@@Base+0x52d4>
   1bbac:	mov	r8, r0
   1bbb0:	cmp	r0, r6
   1bbb4:	cmpne	r8, r4
   1bbb8:	beq	1b904 <main@@Base+0x8408>
   1bbbc:	ldr	r6, [sp, #8]
   1bbc0:	ldr	r7, [sp, #12]
   1bbc4:	orrs	r0, r6, r7
   1bbc8:	bne	1bbd8 <main@@Base+0x86dc>
   1bbcc:	ldrb	r0, [r5, #8]
   1bbd0:	tst	r0, #2
   1bbd4:	beq	1bc00 <main@@Base+0x8704>
   1bbd8:	ldr	r0, [r5]
   1bbdc:	mov	r1, #0
   1bbe0:	mov	r2, #8
   1bbe4:	mov	r3, #8
   1bbe8:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1bbec:	cmp	r0, #0
   1bbf0:	beq	1b904 <main@@Base+0x8408>
   1bbf4:	mov	r2, r6
   1bbf8:	mov	r3, r7
   1bbfc:	bl	18938 <main@@Base+0x543c>
   1bc00:	add	r6, sp, #16
   1bc04:	b	1b97c <main@@Base+0x8480>
   1bc08:	ldr	r0, [r5, #24]
   1bc0c:	cmp	r0, #0
   1bc10:	bne	1b904 <main@@Base+0x8408>
   1bc14:	ldr	r0, [r5]
   1bc18:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1bc1c:	ldr	r1, [sp, #4]
   1bc20:	str	r0, [r1]
   1bc24:	cmp	r0, #0
   1bc28:	bne	1b91c <main@@Base+0x8420>
   1bc2c:	b	1b904 <main@@Base+0x8408>
   1bc30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bc34:	add	fp, sp, #24
   1bc38:	mov	r8, r3
   1bc3c:	mov	r5, r2
   1bc40:	mov	r7, r1
   1bc44:	mov	r6, r0
   1bc48:	mov	r0, r1
   1bc4c:	mov	r1, r2
   1bc50:	bl	15d14 <main@@Base+0x2818>
   1bc54:	movw	r2, #24946	; 0x6172
   1bc58:	movt	r2, #17256	; 0x4368
   1bc5c:	eor	r1, r1, r2
   1bc60:	movw	r2, #29797	; 0x7465
   1bc64:	movt	r2, #24931	; 0x6163
   1bc68:	eor	r0, r0, r2
   1bc6c:	orrs	r0, r0, r1
   1bc70:	bne	1bcc0 <main@@Base+0x87c4>
   1bc74:	add	r4, r7, #8
   1bc78:	mov	r0, r4
   1bc7c:	mov	r1, r5
   1bc80:	bl	15d14 <main@@Base+0x2818>
   1bc84:	and	r0, r1, #-16777216	; 0xff000000
   1bc88:	teq	r0, #1912602624	; 0x72000000
   1bc8c:	bne	1bcc0 <main@@Base+0x87c4>
   1bc90:	mov	r0, r4
   1bc94:	mov	r1, r5
   1bc98:	mov	r2, #1
   1bc9c:	bl	19080 <main@@Base+0x5b84>
   1bca0:	cmp	r0, r4
   1bca4:	beq	1bcc0 <main@@Base+0x87c4>
   1bca8:	mov	r1, r0
   1bcac:	mov	r0, r6
   1bcb0:	mov	r2, r5
   1bcb4:	mov	r3, r8
   1bcb8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bcbc:	b	195e0 <main@@Base+0x60e4>
   1bcc0:	mov	r0, r7
   1bcc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bcc8:	push	{r4, r5, r6, sl, fp, lr}
   1bccc:	add	fp, sp, #16
   1bcd0:	mov	r4, r2
   1bcd4:	mov	r5, r0
   1bcd8:	ldr	r6, [fp, #8]
   1bcdc:	mov	r0, #0
   1bce0:	str	r0, [r6]
   1bce4:	cmp	r3, #11
   1bce8:	bhi	1bd38 <main@@Base+0x883c>
   1bcec:	add	r0, pc, #0
   1bcf0:	ldr	pc, [r0, r3, lsl #2]
   1bcf4:	andeq	fp, r1, r4, ror sp
   1bcf8:	andeq	fp, r1, r4, asr sp
   1bcfc:	andeq	fp, r1, r4, lsl #27
   1bd00:	andeq	fp, r1, r4, asr sp
   1bd04:	andeq	fp, r1, r4, asr sp
   1bd08:	andeq	fp, r1, r4, asr sp
   1bd0c:	andeq	fp, r1, r4, asr sp
   1bd10:	andeq	fp, r1, r4, asr sp
   1bd14:	muleq	r1, r8, sp
   1bd18:	andeq	fp, r1, r4, lsr #26
   1bd1c:	andeq	fp, r1, r4, lsr #26
   1bd20:	andeq	fp, r1, r0, asr #26
   1bd24:	mov	r0, r5
   1bd28:	mov	r2, r4
   1bd2c:	mov	r3, r6
   1bd30:	bl	1c0f0 <main@@Base+0x8bf4>
   1bd34:	b	1bda8 <main@@Base+0x88ac>
   1bd38:	cmp	r3, #255	; 0xff
   1bd3c:	bne	1bd54 <main@@Base+0x8858>
   1bd40:	mov	r0, r5
   1bd44:	mov	r2, r4
   1bd48:	mov	r3, r6
   1bd4c:	bl	220b0 <flatcc_json_parser_build_string@@Base>
   1bd50:	b	1bda8 <main@@Base+0x88ac>
   1bd54:	ldrb	r0, [r5, #8]
   1bd58:	tst	r0, #1
   1bd5c:	bne	1bde0 <main@@Base+0x88e4>
   1bd60:	mov	r0, r5
   1bd64:	mov	r2, r4
   1bd68:	mov	r3, #15
   1bd6c:	pop	{r4, r5, r6, sl, fp, lr}
   1bd70:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1bd74:	mov	r0, r5
   1bd78:	mov	r2, r4
   1bd7c:	pop	{r4, r5, r6, sl, fp, lr}
   1bd80:	b	19ab4 <main@@Base+0x65b8>
   1bd84:	mov	r0, r5
   1bd88:	mov	r2, r4
   1bd8c:	mov	r3, r6
   1bd90:	bl	1be18 <main@@Base+0x891c>
   1bd94:	b	1bda8 <main@@Base+0x88ac>
   1bd98:	mov	r0, r5
   1bd9c:	mov	r2, r4
   1bda0:	mov	r3, r6
   1bda4:	bl	1c064 <main@@Base+0x8b68>
   1bda8:	mov	r1, r0
   1bdac:	ldr	r0, [r5, #24]
   1bdb0:	cmp	r0, #0
   1bdb4:	bne	1bdc4 <main@@Base+0x88c8>
   1bdb8:	ldr	r0, [r6]
   1bdbc:	cmp	r0, #0
   1bdc0:	beq	1bdcc <main@@Base+0x88d0>
   1bdc4:	mov	r0, r1
   1bdc8:	pop	{r4, r5, r6, sl, fp, pc}
   1bdcc:	mov	r0, r5
   1bdd0:	mov	r2, r4
   1bdd4:	mov	r3, #33	; 0x21
   1bdd8:	pop	{r4, r5, r6, sl, fp, lr}
   1bddc:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1bde0:	mov	r0, r5
   1bde4:	mov	r2, r4
   1bde8:	pop	{r4, r5, r6, sl, fp, lr}
   1bdec:	b	211f4 <flatcc_json_parser_generic_json@@Base>
   1bdf0:	add	r0, r0, #1
   1bdf4:	uxtb	r1, r0
   1bdf8:	cmp	r1, #12
   1bdfc:	movhi	r0, #0
   1be00:	bxhi	lr
   1be04:	sxtb	r0, r0
   1be08:	movw	r1, #16840	; 0x41c8
   1be0c:	movt	r1, #2
   1be10:	ldr	r0, [r1, r0, lsl #2]
   1be14:	bx	lr
   1be18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be1c:	add	fp, sp, #28
   1be20:	sub	sp, sp, #20
   1be24:	mov	r7, r3
   1be28:	mov	r4, r2
   1be2c:	mov	r6, r1
   1be30:	mov	r5, r0
   1be34:	mov	r0, #0
   1be38:	str	r0, [r3]
   1be3c:	ldr	r0, [r5]
   1be40:	mov	r1, #1
   1be44:	bl	1e0e4 <flatcc_builder_start_table@@Base>
   1be48:	cmp	r0, #0
   1be4c:	bne	1c040 <main@@Base+0x8b44>
   1be50:	add	r3, sp, #16
   1be54:	mov	r0, r5
   1be58:	mov	r1, r6
   1be5c:	mov	r2, r4
   1be60:	bl	15c40 <main@@Base+0x2744>
   1be64:	mov	r6, r0
   1be68:	ldr	r0, [sp, #16]
   1be6c:	cmp	r0, #0
   1be70:	str	r7, [sp, #8]
   1be74:	beq	1c01c <main@@Base+0x8b20>
   1be78:	movw	r8, #28530	; 0x6f72
   1be7c:	movt	r8, #29559	; 0x7377
   1be80:	movw	sl, #24948	; 0x6174
   1be84:	movt	sl, #25695	; 0x645f
   1be88:	add	r9, sp, #16
   1be8c:	mov	r0, r5
   1be90:	mov	r1, r6
   1be94:	mov	r2, r4
   1be98:	bl	15cd0 <main@@Base+0x27d4>
   1be9c:	mov	r6, r0
   1bea0:	mov	r1, r4
   1bea4:	bl	15d14 <main@@Base+0x2818>
   1bea8:	eor	r1, r1, r8
   1beac:	eor	r0, r0, sl
   1beb0:	orrs	r0, r0, r1
   1beb4:	bne	1bf60 <main@@Base+0x8a64>
   1beb8:	add	r7, r6, #8
   1bebc:	mov	r0, r7
   1bec0:	mov	r1, r4
   1bec4:	bl	15d14 <main@@Base+0x2818>
   1bec8:	movw	r2, #25451	; 0x636b
   1becc:	movt	r2, #29793	; 0x7461
   1bed0:	eor	r1, r1, r2
   1bed4:	movw	r2, #24941	; 0x616d
   1bed8:	movt	r2, #24420	; 0x5f64
   1bedc:	eor	r0, r0, r2
   1bee0:	orrs	r0, r0, r1
   1bee4:	bne	1bf6c <main@@Base+0x8a70>
   1bee8:	add	r6, r6, #16
   1beec:	mov	r0, r6
   1bef0:	mov	r1, r4
   1bef4:	bl	15d14 <main@@Base+0x2818>
   1bef8:	bic	r0, r1, #255	; 0xff
   1befc:	movw	r1, #25856	; 0x6500
   1bf00:	movt	r1, #24935	; 0x6167
   1bf04:	teq	r0, r1
   1bf08:	bne	1bf60 <main@@Base+0x8a64>
   1bf0c:	mov	r0, r5
   1bf10:	mov	r1, r6
   1bf14:	mov	r2, r4
   1bf18:	mov	r3, #3
   1bf1c:	bl	15d18 <main@@Base+0x281c>
   1bf20:	mov	r7, r0
   1bf24:	cmp	r6, r0
   1bf28:	beq	1bf6c <main@@Base+0x8a70>
   1bf2c:	mov	r0, #0
   1bf30:	str	r0, [sp, #12]
   1bf34:	mov	r0, r5
   1bf38:	mov	r1, r7
   1bf3c:	mov	r2, r4
   1bf40:	add	r6, sp, #12
   1bf44:	mov	r3, r6
   1bf48:	bl	18528 <main@@Base+0x502c>
   1bf4c:	mov	r8, r0
   1bf50:	cmp	r7, r0
   1bf54:	beq	1bfa8 <main@@Base+0x8aac>
   1bf58:	mov	r6, r8
   1bf5c:	b	1bfd4 <main@@Base+0x8ad8>
   1bf60:	mov	r0, r5
   1bf64:	mov	r1, r6
   1bf68:	b	1bf74 <main@@Base+0x8a78>
   1bf6c:	mov	r0, r5
   1bf70:	mov	r1, r7
   1bf74:	mov	r2, r4
   1bf78:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1bf7c:	mov	r6, r0
   1bf80:	mov	r0, r5
   1bf84:	mov	r1, r6
   1bf88:	mov	r2, r4
   1bf8c:	mov	r3, r9
   1bf90:	bl	18efc <main@@Base+0x5a00>
   1bf94:	mov	r6, r0
   1bf98:	ldr	r0, [sp, #16]
   1bf9c:	cmp	r0, #0
   1bfa0:	bne	1be8c <main@@Base+0x8990>
   1bfa4:	b	1c01c <main@@Base+0x8b20>
   1bfa8:	str	r6, [sp]
   1bfac:	mov	r0, r5
   1bfb0:	mov	r1, r8
   1bfb4:	mov	r2, r4
   1bfb8:	movw	r3, #29436	; 0x72fc
   1bfbc:	movt	r3, #3
   1bfc0:	bl	185b8 <main@@Base+0x50bc>
   1bfc4:	mov	r6, r0
   1bfc8:	cmp	r0, r8
   1bfcc:	cmpne	r6, r4
   1bfd0:	beq	1c040 <main@@Base+0x8b44>
   1bfd4:	ldr	r8, [sp, #12]
   1bfd8:	cmp	r8, #0
   1bfdc:	bne	1bfec <main@@Base+0x8af0>
   1bfe0:	ldrb	r0, [r5, #8]
   1bfe4:	tst	r0, #2
   1bfe8:	beq	1c010 <main@@Base+0x8b14>
   1bfec:	ldr	r0, [r5]
   1bff0:	mov	r1, #0
   1bff4:	mov	r2, #4
   1bff8:	mov	r3, #4
   1bffc:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1c000:	cmp	r0, #0
   1c004:	beq	1c040 <main@@Base+0x8b44>
   1c008:	mov	r1, r8
   1c00c:	bl	1871c <main@@Base+0x5220>
   1c010:	movw	r8, #28530	; 0x6f72
   1c014:	movt	r8, #29559	; 0x7377
   1c018:	b	1bf80 <main@@Base+0x8a84>
   1c01c:	ldr	r0, [r5, #24]
   1c020:	cmp	r0, #0
   1c024:	bne	1c040 <main@@Base+0x8b44>
   1c028:	ldr	r0, [r5]
   1c02c:	bl	1e7f0 <flatcc_builder_end_table@@Base>
   1c030:	ldr	r1, [sp, #8]
   1c034:	str	r0, [r1]
   1c038:	cmp	r0, #0
   1c03c:	bne	1c058 <main@@Base+0x8b5c>
   1c040:	mov	r0, r5
   1c044:	mov	r1, r6
   1c048:	mov	r2, r4
   1c04c:	mov	r3, #33	; 0x21
   1c050:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1c054:	mov	r6, r0
   1c058:	mov	r0, r6
   1c05c:	sub	sp, fp, #28
   1c060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c064:	push	{r4, r5, r6, r7, fp, lr}
   1c068:	add	fp, sp, #16
   1c06c:	mov	r7, r3
   1c070:	mov	r4, r2
   1c074:	mov	r6, r1
   1c078:	mov	r5, r0
   1c07c:	mov	r0, #0
   1c080:	str	r0, [r3]
   1c084:	ldr	r0, [r5]
   1c088:	mov	r1, #2
   1c08c:	mov	r2, #2
   1c090:	bl	1d6e0 <flatcc_builder_start_struct@@Base>
   1c094:	cmp	r0, #0
   1c098:	beq	1c0d8 <main@@Base+0x8bdc>
   1c09c:	mov	r3, r0
   1c0a0:	mov	r0, r5
   1c0a4:	mov	r1, r6
   1c0a8:	mov	r2, r4
   1c0ac:	bl	1c17c <main@@Base+0x8c80>
   1c0b0:	mov	r6, r0
   1c0b4:	cmp	r0, r4
   1c0b8:	beq	1c0d8 <main@@Base+0x8bdc>
   1c0bc:	ldr	r0, [r5]
   1c0c0:	bl	1d7bc <flatcc_builder_end_struct@@Base>
   1c0c4:	str	r0, [r7]
   1c0c8:	cmp	r0, #0
   1c0cc:	beq	1c0d8 <main@@Base+0x8bdc>
   1c0d0:	mov	r0, r6
   1c0d4:	pop	{r4, r5, r6, r7, fp, pc}
   1c0d8:	mov	r0, r5
   1c0dc:	mov	r1, r6
   1c0e0:	mov	r2, r4
   1c0e4:	mov	r3, #33	; 0x21
   1c0e8:	pop	{r4, r5, r6, r7, fp, lr}
   1c0ec:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c0f0:	push	{r4, r5, r6, r7, fp, lr}
   1c0f4:	add	fp, sp, #16
   1c0f8:	mov	r7, r3
   1c0fc:	mov	r4, r2
   1c100:	mov	r6, r1
   1c104:	mov	r5, r0
   1c108:	mov	r0, #0
   1c10c:	str	r0, [r3]
   1c110:	ldr	r0, [r5]
   1c114:	mov	r1, #4
   1c118:	mov	r2, #4
   1c11c:	bl	1d6e0 <flatcc_builder_start_struct@@Base>
   1c120:	cmp	r0, #0
   1c124:	beq	1c164 <main@@Base+0x8c68>
   1c128:	mov	r3, r0
   1c12c:	mov	r0, r5
   1c130:	mov	r1, r6
   1c134:	mov	r2, r4
   1c138:	bl	1c594 <main@@Base+0x9098>
   1c13c:	mov	r6, r0
   1c140:	cmp	r0, r4
   1c144:	beq	1c164 <main@@Base+0x8c68>
   1c148:	ldr	r0, [r5]
   1c14c:	bl	1d7bc <flatcc_builder_end_struct@@Base>
   1c150:	str	r0, [r7]
   1c154:	cmp	r0, #0
   1c158:	beq	1c164 <main@@Base+0x8c68>
   1c15c:	mov	r0, r6
   1c160:	pop	{r4, r5, r6, r7, fp, pc}
   1c164:	mov	r0, r5
   1c168:	mov	r1, r6
   1c16c:	mov	r2, r4
   1c170:	mov	r3, #33	; 0x21
   1c174:	pop	{r4, r5, r6, r7, fp, lr}
   1c178:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c17c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c180:	add	fp, sp, #28
   1c184:	sub	sp, sp, #20
   1c188:	str	r3, [sp, #8]
   1c18c:	mov	r4, r2
   1c190:	mov	r5, r0
   1c194:	add	r3, sp, #16
   1c198:	bl	15c40 <main@@Base+0x2744>
   1c19c:	mov	r1, r0
   1c1a0:	ldr	r0, [sp, #16]
   1c1a4:	cmp	r0, #0
   1c1a8:	beq	1c324 <main@@Base+0x8e28>
   1c1ac:	movw	r8, #26994	; 0x6972
   1c1b0:	movt	r8, #26721	; 0x6861
   1c1b4:	movw	r9, #25966	; 0x656e
   1c1b8:	movt	r9, #24428	; 0x5f6c
   1c1bc:	movw	r7, #26624	; 0x6800
   1c1c0:	movt	r7, #26484	; 0x6774
   1c1c4:	add	sl, sp, #14
   1c1c8:	b	1c204 <main@@Base+0x8d08>
   1c1cc:	mov	r0, r5
   1c1d0:	mov	r1, r6
   1c1d4:	mov	r2, r4
   1c1d8:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1c1dc:	mov	r6, r0
   1c1e0:	mov	r0, r5
   1c1e4:	mov	r1, r6
   1c1e8:	mov	r2, r4
   1c1ec:	add	r3, sp, #16
   1c1f0:	bl	18efc <main@@Base+0x5a00>
   1c1f4:	mov	r1, r0
   1c1f8:	ldr	r0, [sp, #16]
   1c1fc:	cmp	r0, #0
   1c200:	beq	1c324 <main@@Base+0x8e28>
   1c204:	mov	r0, r5
   1c208:	mov	r2, r4
   1c20c:	bl	15cd0 <main@@Base+0x27d4>
   1c210:	mov	r6, r0
   1c214:	mov	r1, r4
   1c218:	bl	15d14 <main@@Base+0x2818>
   1c21c:	eor	r1, r1, r8
   1c220:	eor	r0, r0, r9
   1c224:	orrs	r0, r0, r1
   1c228:	bne	1c1cc <main@@Base+0x8cd0>
   1c22c:	add	r6, r6, #8
   1c230:	mov	r0, r6
   1c234:	mov	r1, r4
   1c238:	bl	15d14 <main@@Base+0x2818>
   1c23c:	bic	r0, r1, #255	; 0xff
   1c240:	teq	r0, r7
   1c244:	bne	1c1cc <main@@Base+0x8cd0>
   1c248:	mov	r0, r5
   1c24c:	mov	r1, r6
   1c250:	mov	r2, r4
   1c254:	mov	r3, #3
   1c258:	bl	15d18 <main@@Base+0x281c>
   1c25c:	mov	r8, r0
   1c260:	cmp	r6, r0
   1c264:	beq	1c2a0 <main@@Base+0x8da4>
   1c268:	mov	r0, #0
   1c26c:	strh	r0, [sp, #14]
   1c270:	mov	r0, r5
   1c274:	mov	r1, r8
   1c278:	mov	r2, r4
   1c27c:	mov	r9, sl
   1c280:	mov	r3, sl
   1c284:	bl	1c330 <main@@Base+0x8e34>
   1c288:	mov	r6, r0
   1c28c:	cmp	r8, r0
   1c290:	beq	1c2c0 <main@@Base+0x8dc4>
   1c294:	movw	r8, #26994	; 0x6972
   1c298:	movt	r8, #26721	; 0x6861
   1c29c:	b	1c2f8 <main@@Base+0x8dfc>
   1c2a0:	mov	r0, r5
   1c2a4:	mov	r1, r8
   1c2a8:	mov	r2, r4
   1c2ac:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1c2b0:	mov	r6, r0
   1c2b4:	movw	r8, #26994	; 0x6972
   1c2b8:	movt	r8, #26721	; 0x6861
   1c2bc:	b	1c304 <main@@Base+0x8e08>
   1c2c0:	str	r9, [sp]
   1c2c4:	mov	r0, r5
   1c2c8:	mov	r1, r6
   1c2cc:	mov	r2, r4
   1c2d0:	movw	r3, #29448	; 0x7308
   1c2d4:	movt	r3, #3
   1c2d8:	bl	1c3c0 <main@@Base+0x8ec4>
   1c2dc:	mov	r1, r0
   1c2e0:	cmp	r0, r6
   1c2e4:	movw	r8, #26994	; 0x6972
   1c2e8:	movt	r8, #26721	; 0x6861
   1c2ec:	cmpne	r1, r4
   1c2f0:	beq	1c310 <main@@Base+0x8e14>
   1c2f4:	mov	r6, r1
   1c2f8:	ldrh	r1, [sp, #14]
   1c2fc:	ldr	r0, [sp, #8]
   1c300:	bl	1c524 <main@@Base+0x9028>
   1c304:	movw	r9, #25966	; 0x656e
   1c308:	movt	r9, #24428	; 0x5f6c
   1c30c:	b	1c1e0 <main@@Base+0x8ce4>
   1c310:	mov	r0, r5
   1c314:	mov	r2, r4
   1c318:	mov	r3, #33	; 0x21
   1c31c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1c320:	mov	r1, r0
   1c324:	mov	r0, r1
   1c328:	sub	sp, fp, #28
   1c32c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c330:	push	{r4, r5, r6, r7, fp, lr}
   1c334:	add	fp, sp, #16
   1c338:	sub	sp, sp, #24
   1c33c:	mov	r7, r1
   1c340:	mov	r6, r0
   1c344:	mov	r0, #0
   1c348:	str	r0, [sp, #20]
   1c34c:	str	r0, [sp, #16]
   1c350:	str	r0, [sp, #12]
   1c354:	strh	r0, [r3]
   1c358:	cmp	r1, r2
   1c35c:	beq	1c3b4 <main@@Base+0x8eb8>
   1c360:	mov	r5, r3
   1c364:	mov	r4, r2
   1c368:	add	r0, sp, #16
   1c36c:	str	r0, [sp]
   1c370:	add	r3, sp, #12
   1c374:	mov	r0, r6
   1c378:	mov	r1, r7
   1c37c:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   1c380:	mov	r1, r0
   1c384:	cmp	r0, r7
   1c388:	beq	1c3b0 <main@@Base+0x8eb4>
   1c38c:	ldr	r3, [sp, #12]
   1c390:	ldr	r0, [sp, #16]
   1c394:	ldr	r2, [sp, #20]
   1c398:	stm	sp, {r0, r2, r5}
   1c39c:	mov	r0, r6
   1c3a0:	mov	r2, r4
   1c3a4:	bl	1c544 <main@@Base+0x9048>
   1c3a8:	mov	r7, r0
   1c3ac:	b	1c3b4 <main@@Base+0x8eb8>
   1c3b0:	mov	r7, r1
   1c3b4:	mov	r0, r7
   1c3b8:	sub	sp, fp, #16
   1c3bc:	pop	{r4, r5, r6, r7, fp, pc}
   1c3c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3c4:	add	fp, sp, #28
   1c3c8:	sub	sp, sp, #44	; 0x2c
   1c3cc:	mov	r4, r3
   1c3d0:	mov	r7, r2
   1c3d4:	mov	r5, r0
   1c3d8:	mov	sl, #0
   1c3dc:	strh	sl, [fp, #-30]	; 0xffffffe2
   1c3e0:	ldr	r0, [fp, #8]
   1c3e4:	strh	sl, [r0]
   1c3e8:	mov	r0, r5
   1c3ec:	bl	199c4 <main@@Base+0x64c8>
   1c3f0:	mov	r6, r0
   1c3f4:	cmp	r0, r7
   1c3f8:	beq	1c4dc <main@@Base+0x8fe0>
   1c3fc:	add	r0, r4, #4
   1c400:	add	r9, sp, #32
   1c404:	add	r8, sp, #28
   1c408:	str	r0, [sp, #16]
   1c40c:	str	sl, [sp, #20]
   1c410:	mov	sl, r0
   1c414:	ldr	r4, [sl, #-4]
   1c418:	str	r9, [sp]
   1c41c:	add	r0, sp, #24
   1c420:	str	r0, [sp, #4]
   1c424:	mov	r0, r5
   1c428:	mov	r1, r6
   1c42c:	mov	r2, r7
   1c430:	mov	r3, r8
   1c434:	blx	r4
   1c438:	mov	r4, r0
   1c43c:	cmp	r0, r7
   1c440:	beq	1c4fc <main@@Base+0x9000>
   1c444:	cmp	r4, r6
   1c448:	bne	1c460 <main@@Base+0x8f64>
   1c44c:	ldr	r0, [sl], #4
   1c450:	cmp	r0, #0
   1c454:	mov	r6, r4
   1c458:	bne	1c414 <main@@Base+0x8f18>
   1c45c:	b	1c4e4 <main@@Base+0x8fe8>
   1c460:	ldr	sl, [sp, #20]
   1c464:	cmp	sl, #0
   1c468:	beq	1c478 <main@@Base+0x8f7c>
   1c46c:	ldr	r0, [r5, #12]
   1c470:	cmp	r0, #0
   1c474:	bne	1c510 <main@@Base+0x9014>
   1c478:	ldr	r3, [sp, #28]
   1c47c:	ldr	r0, [sp, #32]
   1c480:	ldr	r1, [sp, #36]	; 0x24
   1c484:	stm	sp, {r0, r1}
   1c488:	sub	r0, fp, #30
   1c48c:	str	r0, [sp, #8]
   1c490:	mov	r0, r5
   1c494:	mov	r1, r4
   1c498:	mov	r2, r7
   1c49c:	bl	1c544 <main@@Base+0x9048>
   1c4a0:	cmp	r0, r7
   1c4a4:	beq	1c508 <main@@Base+0x900c>
   1c4a8:	add	sl, sl, #1
   1c4ac:	ldr	r0, [fp, #8]
   1c4b0:	mov	r2, r0
   1c4b4:	ldrh	r0, [r0]
   1c4b8:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   1c4bc:	add	r0, r0, r1
   1c4c0:	strh	r0, [r2]
   1c4c4:	ldr	r0, [sp, #24]
   1c4c8:	cmp	r0, #0
   1c4cc:	mov	r6, r4
   1c4d0:	ldr	r0, [sp, #16]
   1c4d4:	bne	1c40c <main@@Base+0x8f10>
   1c4d8:	b	1c4fc <main@@Base+0x9000>
   1c4dc:	mov	r4, r6
   1c4e0:	b	1c4fc <main@@Base+0x9000>
   1c4e4:	mov	r0, r5
   1c4e8:	mov	r1, r4
   1c4ec:	mov	r2, r7
   1c4f0:	mov	r3, #23
   1c4f4:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1c4f8:	mov	r4, r0
   1c4fc:	mov	r0, r4
   1c500:	sub	sp, fp, #28
   1c504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c508:	mov	r4, r7
   1c50c:	b	1c4fc <main@@Base+0x9000>
   1c510:	mov	r0, r5
   1c514:	mov	r1, r4
   1c518:	mov	r2, r7
   1c51c:	mov	r3, #14
   1c520:	b	1c4f4 <main@@Base+0x8ff8>
   1c524:	push	{r4, r5, fp, lr}
   1c528:	add	fp, sp, #8
   1c52c:	mov	r4, r1
   1c530:	mov	r5, r0
   1c534:	mov	r0, r1
   1c538:	bl	1c590 <main@@Base+0x9094>
   1c53c:	strh	r4, [r5]
   1c540:	pop	{r4, r5, fp, pc}
   1c544:	push	{fp, lr}
   1c548:	mov	fp, sp
   1c54c:	cmp	r3, #0
   1c550:	beq	1c560 <main@@Base+0x9064>
   1c554:	mov	r3, #8
   1c558:	pop	{fp, lr}
   1c55c:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c560:	ldr	ip, [fp, #12]
   1c564:	ldr	lr, [fp, #8]
   1c568:	subs	r3, lr, #65536	; 0x10000
   1c56c:	sbcs	r3, ip, #0
   1c570:	bcc	1c580 <main@@Base+0x9084>
   1c574:	mov	r3, #7
   1c578:	pop	{fp, lr}
   1c57c:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c580:	ldr	r0, [fp, #16]
   1c584:	strh	lr, [r0]
   1c588:	mov	r0, r1
   1c58c:	pop	{fp, pc}
   1c590:	bx	lr
   1c594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c598:	add	fp, sp, #28
   1c59c:	sub	sp, sp, #20
   1c5a0:	str	r3, [sp, #8]
   1c5a4:	mov	r4, r2
   1c5a8:	mov	r5, r0
   1c5ac:	add	r3, sp, #16
   1c5b0:	bl	15c40 <main@@Base+0x2744>
   1c5b4:	mov	r1, r0
   1c5b8:	ldr	r0, [sp, #16]
   1c5bc:	cmp	r0, #0
   1c5c0:	beq	1c73c <main@@Base+0x9240>
   1c5c4:	movw	r8, #28523	; 0x6f6b
   1c5c8:	movt	r8, #25199	; 0x626f
   1c5cc:	movw	r9, #29285	; 0x7265
   1c5d0:	movt	r9, #29535	; 0x735f
   1c5d4:	movw	r7, #0
   1c5d8:	movt	r7, #24932	; 0x6164
   1c5dc:	add	sl, sp, #12
   1c5e0:	b	1c61c <main@@Base+0x9120>
   1c5e4:	mov	r0, r5
   1c5e8:	mov	r1, r6
   1c5ec:	mov	r2, r4
   1c5f0:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1c5f4:	mov	r6, r0
   1c5f8:	mov	r0, r5
   1c5fc:	mov	r1, r6
   1c600:	mov	r2, r4
   1c604:	add	r3, sp, #16
   1c608:	bl	18efc <main@@Base+0x5a00>
   1c60c:	mov	r1, r0
   1c610:	ldr	r0, [sp, #16]
   1c614:	cmp	r0, #0
   1c618:	beq	1c73c <main@@Base+0x9240>
   1c61c:	mov	r0, r5
   1c620:	mov	r2, r4
   1c624:	bl	15cd0 <main@@Base+0x27d4>
   1c628:	mov	r6, r0
   1c62c:	mov	r1, r4
   1c630:	bl	15d14 <main@@Base+0x2818>
   1c634:	eor	r1, r1, r8
   1c638:	eor	r0, r0, r9
   1c63c:	orrs	r0, r0, r1
   1c640:	bne	1c5e4 <main@@Base+0x90e8>
   1c644:	add	r6, r6, #8
   1c648:	mov	r0, r6
   1c64c:	mov	r1, r4
   1c650:	bl	15d14 <main@@Base+0x2818>
   1c654:	bfc	r1, #0, #16
   1c658:	teq	r1, r7
   1c65c:	bne	1c5e4 <main@@Base+0x90e8>
   1c660:	mov	r0, r5
   1c664:	mov	r1, r6
   1c668:	mov	r2, r4
   1c66c:	mov	r3, #2
   1c670:	bl	15d18 <main@@Base+0x281c>
   1c674:	mov	r8, r0
   1c678:	cmp	r6, r0
   1c67c:	beq	1c6b8 <main@@Base+0x91bc>
   1c680:	mov	r0, #0
   1c684:	str	r0, [sp, #12]
   1c688:	mov	r0, r5
   1c68c:	mov	r1, r8
   1c690:	mov	r2, r4
   1c694:	mov	r9, sl
   1c698:	mov	r3, sl
   1c69c:	bl	18528 <main@@Base+0x502c>
   1c6a0:	mov	r6, r0
   1c6a4:	cmp	r8, r0
   1c6a8:	beq	1c6d8 <main@@Base+0x91dc>
   1c6ac:	movw	r8, #28523	; 0x6f6b
   1c6b0:	movt	r8, #25199	; 0x626f
   1c6b4:	b	1c710 <main@@Base+0x9214>
   1c6b8:	mov	r0, r5
   1c6bc:	mov	r1, r8
   1c6c0:	mov	r2, r4
   1c6c4:	bl	21040 <flatcc_json_parser_unmatched_symbol@@Base>
   1c6c8:	mov	r6, r0
   1c6cc:	movw	r8, #28523	; 0x6f6b
   1c6d0:	movt	r8, #25199	; 0x626f
   1c6d4:	b	1c71c <main@@Base+0x9220>
   1c6d8:	str	r9, [sp]
   1c6dc:	mov	r0, r5
   1c6e0:	mov	r1, r6
   1c6e4:	mov	r2, r4
   1c6e8:	movw	r3, #29460	; 0x7314
   1c6ec:	movt	r3, #3
   1c6f0:	bl	185b8 <main@@Base+0x50bc>
   1c6f4:	mov	r1, r0
   1c6f8:	cmp	r0, r6
   1c6fc:	movw	r8, #28523	; 0x6f6b
   1c700:	movt	r8, #25199	; 0x626f
   1c704:	cmpne	r1, r4
   1c708:	beq	1c728 <main@@Base+0x922c>
   1c70c:	mov	r6, r1
   1c710:	ldr	r1, [sp, #12]
   1c714:	ldr	r0, [sp, #8]
   1c718:	bl	1871c <main@@Base+0x5220>
   1c71c:	movw	r9, #29285	; 0x7265
   1c720:	movt	r9, #29535	; 0x735f
   1c724:	b	1c5f8 <main@@Base+0x90fc>
   1c728:	mov	r0, r5
   1c72c:	mov	r2, r4
   1c730:	mov	r3, #33	; 0x21
   1c734:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   1c738:	mov	r1, r0
   1c73c:	mov	r0, r1
   1c740:	sub	sp, fp, #28
   1c744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c748:	cmp	r3, #0
   1c74c:	beq	1c758 <main@@Base+0x925c>
   1c750:	mov	r3, #8
   1c754:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c758:	ldr	r2, [sp]
   1c75c:	ldmib	sp, {r0, r3}
   1c760:	orrs	r0, r2, r0
   1c764:	movwne	r0, #1
   1c768:	strb	r0, [r3]
   1c76c:	mov	r0, r1
   1c770:	bx	lr
   1c774:	bx	lr
   1c778:	push	{r4, r5, fp, lr}
   1c77c:	add	fp, sp, #8
   1c780:	mov	r4, r1
   1c784:	mov	r5, r0
   1c788:	mov	r0, r2
   1c78c:	mov	r1, r3
   1c790:	bl	23e3c <flatcc_json_parser_struct_as_root@@Base+0xfe0>
   1c794:	ldr	r1, [fp, #8]
   1c798:	vmov	s0, r0
   1c79c:	vneg.f32	s2, s0
   1c7a0:	cmp	r4, #0
   1c7a4:	vseleq.f32	s0, s0, s2
   1c7a8:	vstr	s0, [r1]
   1c7ac:	mov	r0, r5
   1c7b0:	pop	{r4, r5, fp, pc}
   1c7b4:	bx	lr
   1c7b8:	push	{r4, sl, fp, lr}
   1c7bc:	add	fp, sp, #8
   1c7c0:	ldr	r4, [fp, #12]
   1c7c4:	ldr	ip, [fp, #8]
   1c7c8:	ldr	lr, [fp, #16]
   1c7cc:	cmp	r3, #0
   1c7d0:	beq	1c7ec <main@@Base+0x92f0>
   1c7d4:	subs	r3, ip, #-2147483647	; 0x80000001
   1c7d8:	sbcs	r3, r4, #0
   1c7dc:	bcc	1c804 <main@@Base+0x9308>
   1c7e0:	mov	r3, #8
   1c7e4:	pop	{r4, sl, fp, lr}
   1c7e8:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c7ec:	subs	r3, ip, #-2147483648	; 0x80000000
   1c7f0:	sbcs	r3, r4, #0
   1c7f4:	bcc	1c808 <main@@Base+0x930c>
   1c7f8:	mov	r3, #7
   1c7fc:	pop	{r4, sl, fp, lr}
   1c800:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c804:	rsb	ip, ip, #0
   1c808:	str	ip, [lr]
   1c80c:	mov	r0, r1
   1c810:	pop	{r4, sl, fp, pc}
   1c814:	bx	lr
   1c818:	push	{r4, r5, fp, lr}
   1c81c:	add	fp, sp, #8
   1c820:	add	ip, fp, #8
   1c824:	ldm	ip, {r4, r5, ip}
   1c828:	cmp	r3, #0
   1c82c:	beq	1c848 <main@@Base+0x934c>
   1c830:	subs	r3, r4, #1
   1c834:	sbcs	r3, r5, #-2147483648	; 0x80000000
   1c838:	bcc	1c85c <main@@Base+0x9360>
   1c83c:	mov	r3, #8
   1c840:	pop	{r4, r5, fp, lr}
   1c844:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c848:	cmn	r5, #1
   1c84c:	bgt	1c864 <main@@Base+0x9368>
   1c850:	mov	r3, #7
   1c854:	pop	{r4, r5, fp, lr}
   1c858:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c85c:	rsbs	r4, r4, #0
   1c860:	rsc	r5, r5, #0
   1c864:	strd	r4, [ip]
   1c868:	mov	r0, r1
   1c86c:	pop	{r4, r5, fp, pc}
   1c870:	bx	lr
   1c874:	cmp	r3, #0
   1c878:	beq	1c884 <main@@Base+0x9388>
   1c87c:	mov	r3, #8
   1c880:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c884:	ldr	r3, [sp, #4]
   1c888:	cmp	r3, #0
   1c88c:	beq	1c898 <main@@Base+0x939c>
   1c890:	mov	r3, #7
   1c894:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c898:	ldr	r0, [sp]
   1c89c:	ldr	r2, [sp, #8]
   1c8a0:	str	r0, [r2]
   1c8a4:	mov	r0, r1
   1c8a8:	bx	lr
   1c8ac:	bx	lr
   1c8b0:	cmp	r3, #0
   1c8b4:	beq	1c8c0 <main@@Base+0x93c4>
   1c8b8:	mov	r3, #8
   1c8bc:	b	208a0 <flatcc_json_parser_set_error@@Base>
   1c8c0:	ldm	sp, {r2, r3}
   1c8c4:	ldr	r0, [sp, #8]
   1c8c8:	strd	r2, [r0]
   1c8cc:	mov	r0, r1
   1c8d0:	bx	lr
   1c8d4:	bx	lr
   1c8d8:	push	{r4, r5, fp, lr}
   1c8dc:	add	fp, sp, #8
   1c8e0:	mov	r4, r1
   1c8e4:	mov	r5, r0
   1c8e8:	mov	r0, r2
   1c8ec:	mov	r1, r3
   1c8f0:	bl	23c04 <flatcc_json_parser_struct_as_root@@Base+0xda8>
   1c8f4:	eor	r2, r1, #-2147483648	; 0x80000000
   1c8f8:	ldr	r3, [fp, #8]
   1c8fc:	vmov	d16, r0, r1
   1c900:	vmov	d17, r0, r2
   1c904:	cmp	r4, #0
   1c908:	vseleq.f64	d16, d16, d17
   1c90c:	vstr	d16, [r3]
   1c910:	mov	r0, r5
   1c914:	pop	{r4, r5, fp, pc}
   1c918:	bx	lr

0001c91c <flatcc_builder_default_alloc@@Base>:
   1c91c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c920:	add	fp, sp, #24
   1c924:	mov	r4, r1
   1c928:	cmp	r2, #0
   1c92c:	beq	1c974 <flatcc_builder_default_alloc@@Base+0x58>
   1c930:	mov	r8, r3
   1c934:	ldr	r0, [fp, #8]
   1c938:	sub	r1, r0, #1
   1c93c:	cmp	r1, #6
   1c940:	bhi	1c9a4 <flatcc_builder_default_alloc@@Base+0x88>
   1c944:	mov	r0, #256	; 0x100
   1c948:	add	r3, pc, #0
   1c94c:	ldr	pc, [r3, r1, lsl #2]
   1c950:			; <UNDEFINED> instruction: 0x0001c9b8
   1c954:	andeq	ip, r1, r4, lsr #19
   1c958:	andeq	ip, r1, r4, lsr #19
   1c95c:	andeq	ip, r1, ip, ror #18
   1c960:	andeq	ip, r1, ip, lsr #19
   1c964:	andeq	ip, r1, r4, lsr #19
   1c968:			; <UNDEFINED> instruction: 0x0001c9b4
   1c96c:	mov	r0, #288	; 0x120
   1c970:	b	1c9b8 <flatcc_builder_default_alloc@@Base+0x9c>
   1c974:	ldr	r0, [r4]
   1c978:	cmp	r0, #0
   1c97c:	beq	1c998 <flatcc_builder_default_alloc@@Base+0x7c>
   1c980:	bl	12aa4 <free@plt>
   1c984:	mov	r6, #0
   1c988:	str	r6, [r4]
   1c98c:	str	r6, [r4, #4]
   1c990:	mov	r0, r6
   1c994:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c998:	mov	r6, #0
   1c99c:	mov	r0, r6
   1c9a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c9a4:	mov	r0, #32
   1c9a8:	b	1c9b8 <flatcc_builder_default_alloc@@Base+0x9c>
   1c9ac:	mov	r0, r2
   1c9b0:	b	1c9b8 <flatcc_builder_default_alloc@@Base+0x9c>
   1c9b4:	mov	r0, #64	; 0x40
   1c9b8:	mov	r7, r0
   1c9bc:	lsl	r0, r0, #1
   1c9c0:	cmp	r7, r2
   1c9c4:	bcc	1c9b8 <flatcc_builder_default_alloc@@Base+0x9c>
   1c9c8:	ldr	r0, [r4, #4]
   1c9cc:	mov	r6, #0
   1c9d0:	cmp	r0, r2
   1c9d4:	lsrcs	r0, r0, #1
   1c9d8:	cmpcs	r0, r7
   1c9dc:	bcs	1ca20 <flatcc_builder_default_alloc@@Base+0x104>
   1c9e0:	ldr	r0, [r4]
   1c9e4:	mov	r1, r7
   1c9e8:	bl	12aec <realloc@plt>
   1c9ec:	cmp	r0, #0
   1c9f0:	beq	1ca28 <flatcc_builder_default_alloc@@Base+0x10c>
   1c9f4:	mov	r5, r0
   1c9f8:	cmp	r8, #0
   1c9fc:	beq	1ca1c <flatcc_builder_default_alloc@@Base+0x100>
   1ca00:	ldr	r1, [r4, #4]
   1ca04:	cmp	r7, r1
   1ca08:	bls	1ca1c <flatcc_builder_default_alloc@@Base+0x100>
   1ca0c:	add	r0, r5, r1
   1ca10:	sub	r2, r7, r1
   1ca14:	mov	r1, #0
   1ca18:	bl	12b64 <memset@plt>
   1ca1c:	stm	r4, {r5, r7}
   1ca20:	mov	r0, r6
   1ca24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ca28:	mvn	r6, #0
   1ca2c:	mov	r0, r6
   1ca30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ca34 <flatcc_builder_flush_vtable_cache@@Base>:
   1ca34:	push	{r4, r5, fp, lr}
   1ca38:	add	fp, sp, #8
   1ca3c:	mov	r4, r0
   1ca40:	ldr	r0, [r0, #116]	; 0x74
   1ca44:	cmp	r0, #0
   1ca48:	popeq	{r4, r5, fp, pc}
   1ca4c:	ldr	r0, [r4, #92]	; 0x5c
   1ca50:	ldr	r2, [r4, #96]	; 0x60
   1ca54:	mov	r5, #0
   1ca58:	mov	r1, #0
   1ca5c:	bl	12b64 <memset@plt>
   1ca60:	mov	r0, #16
   1ca64:	str	r5, [r4, #120]	; 0x78
   1ca68:	str	r0, [r4, #124]	; 0x7c
   1ca6c:	pop	{r4, r5, fp, pc}

0001ca70 <flatcc_builder_custom_init@@Base>:
   1ca70:	push	{r4, r5, r6, r7, fp, lr}
   1ca74:	add	fp, sp, #16
   1ca78:	mov	r5, r3
   1ca7c:	mov	r6, r2
   1ca80:	mov	r7, r1
   1ca84:	mov	r4, r0
   1ca88:	mov	r1, #0
   1ca8c:	mov	r2, #232	; 0xe8
   1ca90:	bl	12b64 <memset@plt>
   1ca94:	ldr	r0, [fp, #8]
   1ca98:	cmp	r7, #0
   1ca9c:	bne	1cab4 <flatcc_builder_custom_init@@Base+0x44>
   1caa0:	mov	r1, #1
   1caa4:	str	r1, [r4, #184]	; 0xb8
   1caa8:	add	r6, r4, #188	; 0xbc
   1caac:	movw	r7, #65088	; 0xfe40
   1cab0:	movt	r7, #1
   1cab4:	movw	r1, #51484	; 0xc91c
   1cab8:	movt	r1, #1
   1cabc:	cmp	r5, #0
   1cac0:	movne	r1, r5
   1cac4:	str	r6, [r4, #36]	; 0x24
   1cac8:	str	r0, [r4, #40]	; 0x28
   1cacc:	str	r7, [r4, #44]	; 0x2c
   1cad0:	str	r1, [r4, #48]	; 0x30
   1cad4:	mov	r0, #0
   1cad8:	pop	{r4, r5, r6, r7, fp, pc}

0001cadc <flatcc_builder_init@@Base>:
   1cadc:	push	{fp, lr}
   1cae0:	mov	fp, sp
   1cae4:	sub	sp, sp, #8
   1cae8:	mov	r1, #0
   1caec:	str	r1, [sp]
   1caf0:	mov	r1, #0
   1caf4:	mov	r2, #0
   1caf8:	mov	r3, #0
   1cafc:	bl	1ca70 <flatcc_builder_custom_init@@Base>
   1cb00:	mov	r0, #0
   1cb04:	mov	sp, fp
   1cb08:	pop	{fp, pc}

0001cb0c <flatcc_builder_custom_reset@@Base>:
   1cb0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb10:	add	fp, sp, #28
   1cb14:	sub	sp, sp, #4
   1cb18:	mov	r9, r2
   1cb1c:	mov	r8, r1
   1cb20:	mov	sl, r0
   1cb24:	add	r7, r0, #52	; 0x34
   1cb28:	mov	r5, #0
   1cb2c:	b	1cb4c <flatcc_builder_custom_reset@@Base+0x40>
   1cb30:	ldr	r0, [r6, #56]	; 0x38
   1cb34:	cmp	r0, #0
   1cb38:	bne	1cc34 <flatcc_builder_custom_reset@@Base+0x128>
   1cb3c:	add	r7, r7, #8
   1cb40:	add	r5, r5, #1
   1cb44:	cmp	r5, #8
   1cb48:	beq	1cba0 <flatcc_builder_custom_reset@@Base+0x94>
   1cb4c:	add	r6, sl, r5, lsl #3
   1cb50:	ldr	r0, [r6, #52]	; 0x34
   1cb54:	cmp	r0, #0
   1cb58:	beq	1cb30 <flatcc_builder_custom_reset@@Base+0x24>
   1cb5c:	cmp	r9, #0
   1cb60:	cmpne	r5, #5
   1cb64:	beq	1cb8c <flatcc_builder_custom_reset@@Base+0x80>
   1cb68:	ldr	r0, [sl, #40]	; 0x28
   1cb6c:	ldr	r4, [sl, #48]	; 0x30
   1cb70:	str	r5, [sp]
   1cb74:	mov	r1, r7
   1cb78:	mov	r2, #1
   1cb7c:	mov	r3, #1
   1cb80:	blx	r4
   1cb84:	cmp	r0, #0
   1cb88:	bne	1cc24 <flatcc_builder_custom_reset@@Base+0x118>
   1cb8c:	ldr	r0, [r6, #52]	; 0x34
   1cb90:	ldr	r2, [r6, #56]	; 0x38
   1cb94:	mov	r1, #0
   1cb98:	bl	12b64 <memset@plt>
   1cb9c:	b	1cb3c <flatcc_builder_custom_reset@@Base+0x30>
   1cba0:	mov	r0, #0
   1cba4:	str	r0, [sl, #120]	; 0x78
   1cba8:	ldr	r1, [sl, #124]	; 0x7c
   1cbac:	cmp	r1, #0
   1cbb0:	movne	r1, #16
   1cbb4:	strne	r1, [sl, #124]	; 0x7c
   1cbb8:	vmov.i32	q8, #0	; 0x00000000
   1cbbc:	str	r0, [sl, #136]	; 0x88
   1cbc0:	str	r0, [sl, #140]	; 0x8c
   1cbc4:	strh	r0, [sl, #128]	; 0x80
   1cbc8:	str	r0, [sl, #32]
   1cbcc:	add	r1, sl, #148	; 0x94
   1cbd0:	vst1.32	{d16-d17}, [r1]
   1cbd4:	ldr	r1, [sl, #52]	; 0x34
   1cbd8:	ldr	r2, [sl, #60]	; 0x3c
   1cbdc:	ldr	r3, [sl, #76]	; 0x4c
   1cbe0:	str	r2, [sl, #16]
   1cbe4:	str	r0, [sl, #20]
   1cbe8:	str	r0, [sl, #24]
   1cbec:	str	r3, [sl]
   1cbf0:	str	r1, [sl, #4]
   1cbf4:	cmp	r8, #0
   1cbf8:	movne	r0, #0
   1cbfc:	strne	r0, [sl, #172]	; 0xac
   1cc00:	strne	r0, [sl, #176]	; 0xb0
   1cc04:	strne	r0, [sl, #180]	; 0xb4
   1cc08:	ldr	r0, [sl, #184]	; 0xb8
   1cc0c:	mov	r5, #0
   1cc10:	cmp	r0, #0
   1cc14:	beq	1cc28 <flatcc_builder_custom_reset@@Base+0x11c>
   1cc18:	add	r0, sl, #188	; 0xbc
   1cc1c:	bl	1fd1c <flatcc_emitter_reset@@Base>
   1cc20:	b	1cc28 <flatcc_builder_custom_reset@@Base+0x11c>
   1cc24:	mvn	r5, #0
   1cc28:	mov	r0, r5
   1cc2c:	sub	sp, fp, #28
   1cc30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc34:	movw	r0, #17404	; 0x43fc
   1cc38:	movt	r0, #2
   1cc3c:	movw	r1, #17422	; 0x440e
   1cc40:	movt	r1, #2
   1cc44:	movw	r3, #17492	; 0x4454
   1cc48:	movt	r3, #2
   1cc4c:	movw	r2, #434	; 0x1b2
   1cc50:	bl	12bc4 <__assert_fail@plt>

0001cc54 <flatcc_builder_reset@@Base>:
   1cc54:	mov	r1, #0
   1cc58:	mov	r2, #0
   1cc5c:	b	1cb0c <flatcc_builder_custom_reset@@Base>

0001cc60 <flatcc_builder_clear@@Base>:
   1cc60:	push	{r4, r5, r6, r7, fp, lr}
   1cc64:	add	fp, sp, #16
   1cc68:	sub	sp, sp, #8
   1cc6c:	mov	r7, r0
   1cc70:	add	r5, r0, #52	; 0x34
   1cc74:	mov	r6, #0
   1cc78:	ldr	r0, [r7, #40]	; 0x28
   1cc7c:	ldr	r4, [r7, #48]	; 0x30
   1cc80:	str	r6, [sp]
   1cc84:	mov	r1, r5
   1cc88:	mov	r2, #0
   1cc8c:	mov	r3, #0
   1cc90:	blx	r4
   1cc94:	add	r5, r5, #8
   1cc98:	add	r6, r6, #1
   1cc9c:	cmp	r6, #8
   1cca0:	bne	1cc78 <flatcc_builder_clear@@Base+0x18>
   1cca4:	ldr	r0, [r7, #184]	; 0xb8
   1cca8:	cmp	r0, #0
   1ccac:	beq	1ccb8 <flatcc_builder_clear@@Base+0x58>
   1ccb0:	add	r0, r7, #188	; 0xbc
   1ccb4:	bl	1fddc <flatcc_emitter_clear@@Base>
   1ccb8:	mov	r0, r7
   1ccbc:	mov	r1, #0
   1ccc0:	mov	r2, #232	; 0xe8
   1ccc4:	sub	sp, fp, #16
   1ccc8:	pop	{r4, r5, r6, r7, fp, lr}
   1cccc:	b	12b64 <memset@plt>

0001ccd0 <flatcc_builder_enter_user_frame_ptr@@Base>:
   1ccd0:	push	{r4, r5, r6, r7, fp, lr}
   1ccd4:	add	fp, sp, #16
   1ccd8:	sub	sp, sp, #8
   1ccdc:	mov	r4, r0
   1cce0:	ldr	r2, [r0, #228]	; 0xe4
   1cce4:	mov	r7, #0
   1cce8:	str	r7, [sp]
   1ccec:	add	r0, r1, #7
   1ccf0:	bic	r5, r0, #3
   1ccf4:	mov	r0, r4
   1ccf8:	mov	r1, #7
   1ccfc:	mov	r3, r5
   1cd00:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1cd04:	cmp	r0, #0
   1cd08:	beq	1cd3c <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   1cd0c:	mov	r6, r0
   1cd10:	mov	r1, #0
   1cd14:	mov	r2, r5
   1cd18:	bl	12b64 <memset@plt>
   1cd1c:	ldr	r0, [r4, #224]	; 0xe0
   1cd20:	str	r0, [r6], #4
   1cd24:	ldr	r0, [r4, #228]	; 0xe4
   1cd28:	add	r1, r0, #4
   1cd2c:	add	r0, r0, r5
   1cd30:	str	r1, [r4, #224]	; 0xe0
   1cd34:	str	r0, [r4, #228]	; 0xe4
   1cd38:	mov	r7, r6
   1cd3c:	mov	r0, r7
   1cd40:	sub	sp, fp, #16
   1cd44:	pop	{r4, r5, r6, r7, fp, pc}
   1cd48:	push	{r4, r5, fp, lr}
   1cd4c:	add	fp, sp, #8
   1cd50:	sub	sp, sp, #8
   1cd54:	mov	r4, r2
   1cd58:	add	r2, r3, r2
   1cd5c:	add	r3, r0, r1, lsl #3
   1cd60:	add	r5, r3, #52	; 0x34
   1cd64:	ldr	r3, [r3, #56]	; 0x38
   1cd68:	cmp	r2, r3
   1cd6c:	bls	1cd94 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   1cd70:	ldr	r3, [fp, #8]
   1cd74:	ldr	ip, [r0, #40]	; 0x28
   1cd78:	ldr	lr, [r0, #48]	; 0x30
   1cd7c:	str	r1, [sp]
   1cd80:	mov	r0, ip
   1cd84:	mov	r1, r5
   1cd88:	blx	lr
   1cd8c:	cmp	r0, #0
   1cd90:	bne	1cda4 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   1cd94:	ldr	r0, [r5]
   1cd98:	add	r0, r0, r4
   1cd9c:	sub	sp, fp, #8
   1cda0:	pop	{r4, r5, fp, pc}
   1cda4:	movw	r0, #21940	; 0x55b4
   1cda8:	movt	r0, #2
   1cdac:	movw	r1, #17422	; 0x440e
   1cdb0:	movt	r1, #2
   1cdb4:	movw	r3, #21486	; 0x53ee
   1cdb8:	movt	r3, #2
   1cdbc:	mov	r2, #308	; 0x134
   1cdc0:	bl	12bc4 <__assert_fail@plt>

0001cdc4 <flatcc_builder_enter_user_frame@@Base>:
   1cdc4:	push	{r4, r5, r6, r7, fp, lr}
   1cdc8:	add	fp, sp, #16
   1cdcc:	sub	sp, sp, #8
   1cdd0:	mov	r4, r0
   1cdd4:	ldr	r2, [r0, #228]	; 0xe4
   1cdd8:	mov	r6, #0
   1cddc:	str	r6, [sp]
   1cde0:	add	r0, r1, #7
   1cde4:	bic	r5, r0, #3
   1cde8:	mov	r0, r4
   1cdec:	mov	r1, #7
   1cdf0:	mov	r3, r5
   1cdf4:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1cdf8:	cmp	r0, #0
   1cdfc:	beq	1ce2c <flatcc_builder_enter_user_frame@@Base+0x68>
   1ce00:	mov	r7, r0
   1ce04:	mov	r1, #0
   1ce08:	mov	r2, r5
   1ce0c:	bl	12b64 <memset@plt>
   1ce10:	ldr	r0, [r4, #224]	; 0xe0
   1ce14:	str	r0, [r7]
   1ce18:	ldr	r0, [r4, #228]	; 0xe4
   1ce1c:	add	r6, r0, #4
   1ce20:	add	r0, r0, r5
   1ce24:	str	r6, [r4, #224]	; 0xe0
   1ce28:	str	r0, [r4, #228]	; 0xe4
   1ce2c:	mov	r0, r6
   1ce30:	sub	sp, fp, #16
   1ce34:	pop	{r4, r5, r6, r7, fp, pc}

0001ce38 <flatcc_builder_exit_user_frame@@Base>:
   1ce38:	push	{fp, lr}
   1ce3c:	mov	fp, sp
   1ce40:	ldr	r1, [r0, #224]	; 0xe0
   1ce44:	cmp	r1, #0
   1ce48:	subne	r2, r1, #4
   1ce4c:	strne	r2, [r0, #228]	; 0xe4
   1ce50:	ldrne	r2, [r0, #108]	; 0x6c
   1ce54:	addne	r1, r2, r1
   1ce58:	ldrne	r1, [r1, #-4]
   1ce5c:	strne	r1, [r0, #224]	; 0xe0
   1ce60:	movne	r0, r1
   1ce64:	popne	{fp, pc}
   1ce68:	movw	r0, #17554	; 0x4492
   1ce6c:	movt	r0, #2
   1ce70:	movw	r1, #17422	; 0x440e
   1ce74:	movt	r1, #2
   1ce78:	movw	r3, #17579	; 0x44ab
   1ce7c:	movt	r3, #2
   1ce80:	movw	r2, #542	; 0x21e
   1ce84:	bl	12bc4 <__assert_fail@plt>

0001ce88 <flatcc_builder_exit_user_frame_at@@Base>:
   1ce88:	push	{fp, lr}
   1ce8c:	mov	fp, sp
   1ce90:	ldr	r2, [r0, #224]	; 0xe0
   1ce94:	cmp	r2, r1
   1ce98:	bcc	1cea8 <flatcc_builder_exit_user_frame_at@@Base+0x20>
   1ce9c:	str	r1, [r0, #224]	; 0xe0
   1cea0:	pop	{fp, lr}
   1cea4:	b	1ce38 <flatcc_builder_exit_user_frame@@Base>
   1cea8:	movw	r0, #17637	; 0x44e5
   1ceac:	movt	r0, #2
   1ceb0:	movw	r1, #17422	; 0x440e
   1ceb4:	movt	r1, #2
   1ceb8:	movw	r3, #17668	; 0x4504
   1cebc:	movt	r3, #2
   1cec0:	movw	r2, #551	; 0x227
   1cec4:	bl	12bc4 <__assert_fail@plt>

0001cec8 <flatcc_builder_get_current_user_frame@@Base>:
   1cec8:	ldr	r0, [r0, #224]	; 0xe0
   1cecc:	bx	lr

0001ced0 <flatcc_builder_get_user_frame_ptr@@Base>:
   1ced0:	ldr	r0, [r0, #108]	; 0x6c
   1ced4:	add	r0, r0, r1
   1ced8:	bx	lr

0001cedc <flatcc_builder_embed_buffer@@Base>:
   1cedc:	push	{r4, r5, r6, r7, fp, lr}
   1cee0:	add	fp, sp, #16
   1cee4:	sub	sp, sp, #80	; 0x50
   1cee8:	mov	r5, r3
   1ceec:	mov	r6, r2
   1cef0:	mov	r2, r1
   1cef4:	mov	r4, r0
   1cef8:	ldr	r0, [fp, #8]
   1cefc:	strh	r0, [fp, #-18]	; 0xffffffee
   1cf00:	ldr	r3, [r4, #152]	; 0x98
   1cf04:	cmp	r3, #0
   1cf08:	movwne	r3, #1
   1cf0c:	sub	r1, fp, #18
   1cf10:	mov	r0, r4
   1cf14:	bl	1cfe8 <flatcc_builder_embed_buffer@@Base+0x10c>
   1cf18:	ldr	r0, [fp, #12]
   1cf1c:	and	r0, r0, #2
   1cf20:	add	r1, r5, r0, lsl #1
   1cf24:	ldrh	r2, [fp, #-18]	; 0xffffffee
   1cf28:	mov	r0, r4
   1cf2c:	bl	1d0a4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   1cf30:	mov	r7, r0
   1cf34:	add	r0, r0, r5
   1cf38:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1cf3c:	mov	r1, #0
   1cf40:	str	r1, [sp, #4]
   1cf44:	str	r1, [sp]
   1cf48:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf4c:	ldr	r0, [r4, #152]	; 0x98
   1cf50:	cmp	r0, #0
   1cf54:	beq	1cf74 <flatcc_builder_embed_buffer@@Base+0x98>
   1cf58:	mov	r0, #4
   1cf5c:	str	r0, [sp, #12]
   1cf60:	sub	r1, fp, #24
   1cf64:	str	r1, [sp, #8]
   1cf68:	str	r0, [sp]
   1cf6c:	mov	r0, #1
   1cf70:	str	r0, [sp, #4]
   1cf74:	cmp	r5, #0
   1cf78:	beq	1cfa0 <flatcc_builder_embed_buffer@@Base+0xc4>
   1cf7c:	ldm	sp, {r0, r1}
   1cf80:	add	r0, r0, r5
   1cf84:	str	r0, [sp]
   1cf88:	mov	r0, sp
   1cf8c:	add	r0, r0, r1, lsl #3
   1cf90:	str	r6, [r0, #8]
   1cf94:	str	r5, [r0, #12]
   1cf98:	add	r0, r1, #1
   1cf9c:	str	r0, [sp, #4]
   1cfa0:	cmp	r7, #0
   1cfa4:	beq	1cfd4 <flatcc_builder_embed_buffer@@Base+0xf8>
   1cfa8:	ldm	sp, {r0, r1}
   1cfac:	add	r0, r0, r7
   1cfb0:	str	r0, [sp]
   1cfb4:	mov	r0, sp
   1cfb8:	add	r0, r0, r1, lsl #3
   1cfbc:	movw	r2, #16892	; 0x41fc
   1cfc0:	movt	r2, #2
   1cfc4:	str	r2, [r0, #8]
   1cfc8:	str	r7, [r0, #12]
   1cfcc:	add	r0, r1, #1
   1cfd0:	str	r0, [sp, #4]
   1cfd4:	mov	r1, sp
   1cfd8:	mov	r0, r4
   1cfdc:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1cfe0:	sub	sp, fp, #16
   1cfe4:	pop	{r4, r5, r6, r7, fp, pc}
   1cfe8:	push	{r4, r5, r6, r7, fp, lr}
   1cfec:	add	fp, sp, #16
   1cff0:	sub	sp, sp, #72	; 0x48
   1cff4:	mov	r6, r3
   1cff8:	mov	r5, r2
   1cffc:	mov	r7, r1
   1d000:	mov	r4, r0
   1d004:	cmp	r2, #0
   1d008:	bne	1d018 <flatcc_builder_embed_buffer@@Base+0x13c>
   1d00c:	ldrh	r5, [r4, #132]	; 0x84
   1d010:	cmp	r5, #0
   1d014:	movweq	r5, #1
   1d018:	mov	r0, r7
   1d01c:	mov	r1, #4
   1d020:	bl	1de90 <flatcc_builder_start_vector@@Base+0x80>
   1d024:	mov	r0, r7
   1d028:	mov	r1, r5
   1d02c:	bl	1de90 <flatcc_builder_start_vector@@Base+0x80>
   1d030:	cmp	r6, #0
   1d034:	bne	1d07c <flatcc_builder_embed_buffer@@Base+0x1a0>
   1d038:	mov	r0, r4
   1d03c:	mov	r1, r5
   1d040:	bl	1fb70 <flatcc_builder_get_emit_context@@Base+0x8>
   1d044:	cmp	r0, #0
   1d048:	beq	1d07c <flatcc_builder_embed_buffer@@Base+0x1a0>
   1d04c:	str	r0, [sp, #12]
   1d050:	movw	r1, #16892	; 0x41fc
   1d054:	movt	r1, #2
   1d058:	str	r1, [sp, #8]
   1d05c:	str	r0, [sp]
   1d060:	mov	r0, #1
   1d064:	str	r0, [sp, #4]
   1d068:	mov	r1, sp
   1d06c:	mov	r0, r4
   1d070:	bl	1e21c <flatcc_builder_create_vtable@@Base+0x80>
   1d074:	cmp	r0, #0
   1d078:	beq	1d084 <flatcc_builder_embed_buffer@@Base+0x1a8>
   1d07c:	sub	sp, fp, #16
   1d080:	pop	{r4, r5, r6, r7, fp, pc}
   1d084:	movw	r0, #21940	; 0x55b4
   1d088:	movt	r0, #2
   1d08c:	movw	r1, #17422	; 0x440e
   1d090:	movt	r1, #2
   1d094:	movw	r3, #21553	; 0x5431
   1d098:	movt	r3, #2
   1d09c:	movw	r2, #702	; 0x2be
   1d0a0:	bl	12bc4 <__assert_fail@plt>
   1d0a4:	ldr	r0, [r0, #136]	; 0x88
   1d0a8:	sub	r0, r0, r1
   1d0ac:	sub	r1, r2, #1
   1d0b0:	and	r0, r0, r1
   1d0b4:	bx	lr
   1d0b8:	bx	lr
   1d0bc:	push	{r4, r5, fp, lr}
   1d0c0:	add	fp, sp, #8
   1d0c4:	sub	sp, sp, #8
   1d0c8:	ldr	r3, [r1]
   1d0cc:	cmp	r3, #0
   1d0d0:	ble	1d130 <flatcc_builder_embed_buffer@@Base+0x254>
   1d0d4:	mov	r4, r0
   1d0d8:	ldr	r0, [r0, #136]	; 0x88
   1d0dc:	sub	r5, r0, r3
   1d0e0:	ldr	r2, [r1, #4]
   1d0e4:	ldr	r0, [r4, #36]	; 0x24
   1d0e8:	ldr	ip, [r4, #44]	; 0x2c
   1d0ec:	str	r3, [sp]
   1d0f0:	add	r1, r1, #8
   1d0f4:	mov	r3, r5
   1d0f8:	blx	ip
   1d0fc:	cmp	r0, #0
   1d100:	streq	r5, [r4, #136]	; 0x88
   1d104:	moveq	r0, r5
   1d108:	subeq	sp, fp, #8
   1d10c:	popeq	{r4, r5, fp, pc}
   1d110:	movw	r0, #21940	; 0x55b4
   1d114:	movt	r0, #2
   1d118:	movw	r1, #17422	; 0x440e
   1d11c:	movt	r1, #2
   1d120:	movw	r3, #21619	; 0x5473
   1d124:	movt	r3, #2
   1d128:	movw	r2, #651	; 0x28b
   1d12c:	bl	12bc4 <__assert_fail@plt>
   1d130:	movw	r0, #21940	; 0x55b4
   1d134:	movt	r0, #2
   1d138:	movw	r1, #17422	; 0x440e
   1d13c:	movt	r1, #2
   1d140:	movw	r3, #21619	; 0x5473
   1d144:	movt	r3, #2
   1d148:	movw	r2, #647	; 0x287
   1d14c:	bl	12bc4 <__assert_fail@plt>

0001d150 <flatcc_builder_create_buffer@@Base>:
   1d150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d154:	add	fp, sp, #28
   1d158:	sub	sp, sp, #92	; 0x5c
   1d15c:	mov	r6, r3
   1d160:	mov	r7, r1
   1d164:	mov	r4, r0
   1d168:	ldr	r0, [fp, #8]
   1d16c:	strh	r0, [fp, #-30]	; 0xffffffe2
   1d170:	mov	r0, #0
   1d174:	str	r0, [sp, #4]
   1d178:	ldr	sl, [fp, #12]
   1d17c:	and	r9, sl, #1
   1d180:	sub	r1, fp, #30
   1d184:	mov	r0, r4
   1d188:	mov	r3, r9
   1d18c:	bl	1cfe8 <flatcc_builder_embed_buffer@@Base+0x10c>
   1d190:	ldrh	r5, [fp, #-30]	; 0xffffffe2
   1d194:	mov	r0, r4
   1d198:	mov	r1, r5
   1d19c:	bl	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>
   1d1a0:	cmp	r7, #0
   1d1a4:	str	r6, [sp]
   1d1a8:	beq	1d1c4 <flatcc_builder_create_buffer@@Base+0x74>
   1d1ac:	ldr	r7, [r7]
   1d1b0:	mov	r0, r7
   1d1b4:	bl	1d32c <flatcc_builder_create_buffer@@Base+0x1dc>
   1d1b8:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1d1bc:	str	r7, [sp, #4]
   1d1c0:	b	1d1c8 <flatcc_builder_create_buffer@@Base+0x78>
   1d1c4:	ldr	r7, [sp, #4]
   1d1c8:	mov	r8, #4
   1d1cc:	and	r0, r8, sl, lsl #1
   1d1d0:	cmp	r7, #0
   1d1d4:	mov	r6, r7
   1d1d8:	movwne	r6, #1
   1d1dc:	add	r0, r0, r6, lsl #2
   1d1e0:	add	r1, r0, #4
   1d1e4:	mov	r0, r4
   1d1e8:	mov	r2, r5
   1d1ec:	bl	1d0a4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   1d1f0:	mov	r1, #0
   1d1f4:	str	r1, [sp, #12]
   1d1f8:	str	r1, [sp, #8]
   1d1fc:	ands	ip, sl, #3
   1d200:	strne	r8, [sp, #20]
   1d204:	subne	r1, fp, #40	; 0x28
   1d208:	strne	r1, [sp, #16]
   1d20c:	strne	r8, [sp, #8]
   1d210:	movne	r1, #1
   1d214:	strne	r1, [sp, #12]
   1d218:	ldr	r1, [sp, #8]
   1d21c:	ldr	r3, [sp, #12]
   1d220:	add	r5, r1, #4
   1d224:	str	r5, [sp, #8]
   1d228:	add	lr, sp, #8
   1d22c:	add	r1, lr, r3, lsl #3
   1d230:	sub	r2, fp, #36	; 0x24
   1d234:	str	r2, [r1, #8]
   1d238:	str	r8, [r1, #12]
   1d23c:	add	r1, r3, #1
   1d240:	str	r1, [sp, #12]
   1d244:	cmp	r7, #0
   1d248:	beq	1d270 <flatcc_builder_create_buffer@@Base+0x120>
   1d24c:	lsl	r2, r6, #2
   1d250:	add	r5, r5, r2
   1d254:	str	r5, [sp, #8]
   1d258:	add	r1, lr, r1, lsl #3
   1d25c:	add	r5, sp, #4
   1d260:	str	r5, [r1, #8]
   1d264:	str	r2, [r1, #12]
   1d268:	add	r1, r3, #2
   1d26c:	str	r1, [sp, #12]
   1d270:	cmp	r0, #0
   1d274:	beq	1d2a4 <flatcc_builder_create_buffer@@Base+0x154>
   1d278:	ldr	r1, [sp, #8]
   1d27c:	ldr	r2, [sp, #12]
   1d280:	add	r1, r1, r0
   1d284:	str	r1, [sp, #8]
   1d288:	add	r1, lr, r2, lsl #3
   1d28c:	movw	r3, #16892	; 0x41fc
   1d290:	movt	r3, #2
   1d294:	str	r3, [r1, #8]
   1d298:	str	r0, [r1, #12]
   1d29c:	add	r0, r2, #1
   1d2a0:	str	r0, [sp, #12]
   1d2a4:	ldr	r0, [r4, #136]	; 0x88
   1d2a8:	ldr	r1, [sp, #8]
   1d2ac:	sub	r5, r0, r1
   1d2b0:	cmp	ip, #0
   1d2b4:	addne	r5, r5, #4
   1d2b8:	mov	r0, #144	; 0x90
   1d2bc:	cmp	r9, #0
   1d2c0:	movweq	r0, #140	; 0x8c
   1d2c4:	ldr	r0, [r4, r0]
   1d2c8:	sub	r0, r0, r5
   1d2cc:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1d2d0:	str	r0, [fp, #-40]	; 0xffffffd8
   1d2d4:	ldr	r0, [sp]
   1d2d8:	sub	r0, r0, r5
   1d2dc:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1d2e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1d2e4:	add	r1, sp, #8
   1d2e8:	mov	r0, r4
   1d2ec:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1d2f0:	cmp	r0, #0
   1d2f4:	subne	sp, fp, #28
   1d2f8:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2fc:	movw	r0, #21940	; 0x55b4
   1d300:	movt	r0, #2
   1d304:	movw	r1, #17422	; 0x440e
   1d308:	movt	r1, #2
   1d30c:	movw	r3, #17737	; 0x4549
   1d310:	movt	r3, #2
   1d314:	mov	r2, #772	; 0x304
   1d318:	bl	12bc4 <__assert_fail@plt>
   1d31c:	ldrh	r2, [r0, #128]	; 0x80
   1d320:	cmp	r2, r1
   1d324:	strhcc	r1, [r0, #128]	; 0x80
   1d328:	bx	lr
   1d32c:	bx	lr

0001d330 <flatcc_builder_create_struct@@Base>:
   1d330:	push	{r4, r5, r6, r7, fp, lr}
   1d334:	add	fp, sp, #16
   1d338:	sub	sp, sp, #72	; 0x48
   1d33c:	cmp	r3, #0
   1d340:	beq	1d3d8 <flatcc_builder_create_struct@@Base+0xa8>
   1d344:	mov	r7, r3
   1d348:	mov	r5, r2
   1d34c:	mov	r6, r1
   1d350:	mov	r4, r0
   1d354:	mov	r1, r3
   1d358:	bl	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>
   1d35c:	mov	r0, r4
   1d360:	mov	r1, r5
   1d364:	mov	r2, r7
   1d368:	bl	1d0a4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   1d36c:	mov	r1, #0
   1d370:	str	r1, [sp, #4]
   1d374:	str	r1, [sp]
   1d378:	cmp	r5, #0
   1d37c:	strne	r5, [sp, #12]
   1d380:	strne	r6, [sp, #8]
   1d384:	strne	r5, [sp]
   1d388:	movne	r1, #1
   1d38c:	strne	r1, [sp, #4]
   1d390:	cmp	r0, #0
   1d394:	beq	1d3c4 <flatcc_builder_create_struct@@Base+0x94>
   1d398:	ldm	sp, {r1, r2}
   1d39c:	add	r1, r1, r0
   1d3a0:	str	r1, [sp]
   1d3a4:	mov	r1, sp
   1d3a8:	add	r1, r1, r2, lsl #3
   1d3ac:	movw	r3, #16892	; 0x41fc
   1d3b0:	movt	r3, #2
   1d3b4:	str	r3, [r1, #8]
   1d3b8:	str	r0, [r1, #12]
   1d3bc:	add	r0, r2, #1
   1d3c0:	str	r0, [sp, #4]
   1d3c4:	mov	r1, sp
   1d3c8:	mov	r0, r4
   1d3cc:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1d3d0:	sub	sp, fp, #16
   1d3d4:	pop	{r4, r5, r6, r7, fp, pc}
   1d3d8:	movw	r0, #17868	; 0x45cc
   1d3dc:	movt	r0, #2
   1d3e0:	movw	r1, #17422	; 0x440e
   1d3e4:	movt	r1, #2
   1d3e8:	movw	r3, #17879	; 0x45d7
   1d3ec:	movt	r3, #2
   1d3f0:	movw	r2, #783	; 0x30f
   1d3f4:	bl	12bc4 <__assert_fail@plt>

0001d3f8 <flatcc_builder_start_buffer@@Base>:
   1d3f8:	push	{r4, r5, r6, r7, fp, lr}
   1d3fc:	add	fp, sp, #16
   1d400:	mov	r6, r3
   1d404:	mov	r7, r2
   1d408:	mov	r5, r1
   1d40c:	mov	r4, r0
   1d410:	ldrh	r1, [r0, #128]	; 0x80
   1d414:	bl	1d4b4 <flatcc_builder_start_buffer@@Base+0xbc>
   1d418:	mov	r1, r0
   1d41c:	mvn	r0, #0
   1d420:	cmp	r1, #0
   1d424:	popne	{r4, r5, r6, r7, fp, pc}
   1d428:	mov	r0, #1
   1d42c:	strh	r0, [r4, #128]	; 0x80
   1d430:	ldrh	r1, [r4, #132]	; 0x84
   1d434:	ldr	r2, [r4, #32]
   1d438:	strh	r1, [r2, #34]	; 0x22
   1d43c:	strh	r7, [r4, #132]	; 0x84
   1d440:	ldrh	r1, [r4, #164]	; 0xa4
   1d444:	ldr	r2, [r4, #32]
   1d448:	strh	r1, [r2, #32]
   1d44c:	strh	r6, [r4, #164]	; 0xa4
   1d450:	ldr	r1, [r4, #32]
   1d454:	ldr	r2, [r4, #144]	; 0x90
   1d458:	str	r2, [r1, #20]
   1d45c:	ldr	r1, [r4, #32]
   1d460:	ldr	r2, [r4, #152]	; 0x98
   1d464:	str	r2, [r1, #28]
   1d468:	ldr	r1, [r4, #32]
   1d46c:	ldr	r2, [r4, #136]	; 0x88
   1d470:	ldr	r3, [r4, #148]	; 0x94
   1d474:	ldr	r7, [r4, #168]	; 0xa8
   1d478:	add	r6, r3, #1
   1d47c:	str	r2, [r4, #144]	; 0x90
   1d480:	str	r6, [r4, #148]	; 0x94
   1d484:	str	r3, [r4, #152]	; 0x98
   1d488:	str	r7, [r1, #16]
   1d48c:	movw	r1, #16892	; 0x41fc
   1d490:	movt	r1, #2
   1d494:	cmp	r5, #0
   1d498:	movne	r1, r5
   1d49c:	ldr	r1, [r1]
   1d4a0:	str	r1, [r4, #168]	; 0xa8
   1d4a4:	ldr	r1, [r4, #32]
   1d4a8:	strh	r0, [r1, #14]
   1d4ac:	mov	r0, #0
   1d4b0:	pop	{r4, r5, r6, r7, fp, pc}
   1d4b4:	push	{r4, r5, r6, sl, fp, lr}
   1d4b8:	add	fp, sp, #16
   1d4bc:	sub	sp, sp, #8
   1d4c0:	mov	r5, r1
   1d4c4:	mov	r4, r0
   1d4c8:	ldr	r1, [r0, #156]	; 0x9c
   1d4cc:	ldr	r2, [r0, #160]	; 0xa0
   1d4d0:	add	r0, r1, #1
   1d4d4:	str	r0, [r4, #156]	; 0x9c
   1d4d8:	cmp	r1, r2
   1d4dc:	bge	1d4f0 <flatcc_builder_start_buffer@@Base+0xf8>
   1d4e0:	ldr	r0, [r4, #32]
   1d4e4:	add	r0, r0, #36	; 0x24
   1d4e8:	str	r0, [r4, #32]
   1d4ec:	b	1d564 <flatcc_builder_start_buffer@@Base+0x16c>
   1d4f0:	ldr	r2, [r4, #176]	; 0xb0
   1d4f4:	mvn	r6, #0
   1d4f8:	cmp	r2, #1
   1d4fc:	cmpge	r1, r2
   1d500:	bge	1d5a0 <flatcc_builder_start_buffer@@Base+0x1a8>
   1d504:	mov	r1, #0
   1d508:	str	r1, [sp]
   1d50c:	add	r0, r0, r0, lsl #3
   1d510:	mvn	r1, #35	; 0x23
   1d514:	add	r2, r1, r0, lsl #2
   1d518:	mov	r0, r4
   1d51c:	mov	r1, #4
   1d520:	mov	r3, #36	; 0x24
   1d524:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1d528:	str	r0, [r4, #32]
   1d52c:	cmp	r0, #0
   1d530:	beq	1d5a0 <flatcc_builder_start_buffer@@Base+0x1a8>
   1d534:	ldr	r0, [r4, #88]	; 0x58
   1d538:	ldr	r1, [r4, #176]	; 0xb0
   1d53c:	movw	r2, #36409	; 0x8e39
   1d540:	movt	r2, #14563	; 0x38e3
   1d544:	umull	r0, r2, r0, r2
   1d548:	lsr	r0, r2, #3
   1d54c:	cmp	r1, r2, lsr #3
   1d550:	mov	r2, r0
   1d554:	movlt	r2, r1
   1d558:	cmp	r1, #0
   1d55c:	movle	r2, r0
   1d560:	str	r2, [r4, #160]	; 0xa0
   1d564:	ldr	r0, [r4, #20]
   1d568:	ldr	r1, [r4, #32]
   1d56c:	str	r0, [r1, #8]
   1d570:	ldrh	r2, [r4, #130]	; 0x82
   1d574:	strh	r2, [r1, #12]
   1d578:	strh	r5, [r4, #130]	; 0x82
   1d57c:	ldr	r2, [r4, #28]
   1d580:	mvn	r3, #3
   1d584:	stm	r1, {r2, r3}
   1d588:	mov	r6, #0
   1d58c:	str	r6, [r4, #20]
   1d590:	add	r0, r0, r2
   1d594:	add	r0, r0, #7
   1d598:	bic	r0, r0, #7
   1d59c:	str	r0, [r4, #28]
   1d5a0:	mov	r0, r6
   1d5a4:	sub	sp, fp, #16
   1d5a8:	pop	{r4, r5, r6, sl, fp, pc}

0001d5ac <flatcc_builder_end_buffer@@Base>:
   1d5ac:	push	{r4, r5, r6, r7, fp, lr}
   1d5b0:	add	fp, sp, #16
   1d5b4:	sub	sp, sp, #8
   1d5b8:	mov	r4, r0
   1d5bc:	ldr	r0, [r0, #32]
   1d5c0:	ldrh	r0, [r0, #14]
   1d5c4:	cmp	r0, #1
   1d5c8:	bne	1d654 <flatcc_builder_end_buffer@@Base+0xa8>
   1d5cc:	mov	r5, r1
   1d5d0:	ldr	r6, [r4, #152]	; 0x98
   1d5d4:	ldrh	r7, [r4, #164]	; 0xa4
   1d5d8:	ldrh	r1, [r4, #132]	; 0x84
   1d5dc:	mov	r0, r4
   1d5e0:	bl	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>
   1d5e4:	and	r0, r7, #2
   1d5e8:	cmp	r6, #0
   1d5ec:	orrne	r0, r0, #1
   1d5f0:	ldrh	r2, [r4, #132]	; 0x84
   1d5f4:	ldrh	r1, [r4, #128]	; 0x80
   1d5f8:	str	r1, [sp]
   1d5fc:	str	r0, [sp, #4]
   1d600:	add	r1, r4, #168	; 0xa8
   1d604:	mov	r0, r4
   1d608:	mov	r3, r5
   1d60c:	bl	1d150 <flatcc_builder_create_buffer@@Base>
   1d610:	mov	r5, r0
   1d614:	cmp	r0, #0
   1d618:	beq	1d648 <flatcc_builder_end_buffer@@Base+0x9c>
   1d61c:	ldr	r0, [r4, #32]
   1d620:	ldr	r1, [r0, #20]
   1d624:	str	r1, [r4, #144]	; 0x90
   1d628:	ldr	r1, [r0, #28]
   1d62c:	str	r1, [r4, #152]	; 0x98
   1d630:	ldr	r1, [r0, #16]
   1d634:	str	r1, [r4, #168]	; 0xa8
   1d638:	ldrh	r0, [r0, #32]
   1d63c:	strh	r0, [r4, #164]	; 0xa4
   1d640:	mov	r0, r4
   1d644:	bl	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1d648:	mov	r0, r5
   1d64c:	sub	sp, fp, #16
   1d650:	pop	{r4, r5, r6, r7, fp, pc}
   1d654:	movw	r0, #17981	; 0x463d
   1d658:	movt	r0, #2
   1d65c:	movw	r1, #17422	; 0x440e
   1d660:	movt	r1, #2
   1d664:	movw	r3, #18025	; 0x4669
   1d668:	movt	r3, #2
   1d66c:	movw	r2, #838	; 0x346
   1d670:	bl	12bc4 <__assert_fail@plt>
   1d674:	push	{r4, sl, fp, lr}
   1d678:	add	fp, sp, #8
   1d67c:	mov	r4, r0
   1d680:	ldr	r0, [r0, #16]
   1d684:	ldr	r2, [r4, #20]
   1d688:	mov	r1, #0
   1d68c:	bl	12b64 <memset@plt>
   1d690:	ldr	r0, [r4, #32]
   1d694:	ldr	r1, [r0, #8]
   1d698:	str	r1, [r4, #20]
   1d69c:	ldr	r1, [r0]
   1d6a0:	str	r1, [r4, #28]
   1d6a4:	ldr	r1, [r0, #4]
   1d6a8:	mov	r0, r4
   1d6ac:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1d6b0:	ldrh	r1, [r4, #130]	; 0x82
   1d6b4:	mov	r0, r4
   1d6b8:	bl	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>
   1d6bc:	ldr	r0, [r4, #32]
   1d6c0:	ldr	r1, [r4, #156]	; 0x9c
   1d6c4:	ldrh	r2, [r0, #12]
   1d6c8:	sub	r0, r0, #36	; 0x24
   1d6cc:	str	r0, [r4, #32]
   1d6d0:	sub	r0, r1, #1
   1d6d4:	str	r0, [r4, #156]	; 0x9c
   1d6d8:	strh	r2, [r4, #130]	; 0x82
   1d6dc:	pop	{r4, sl, fp, pc}

0001d6e0 <flatcc_builder_start_struct@@Base>:
   1d6e0:	push	{r4, r5, fp, lr}
   1d6e4:	add	fp, sp, #8
   1d6e8:	mov	r4, r1
   1d6ec:	mov	r5, r0
   1d6f0:	mov	r1, r2
   1d6f4:	bl	1d4b4 <flatcc_builder_start_buffer@@Base+0xbc>
   1d6f8:	cmp	r0, #0
   1d6fc:	movne	r0, #0
   1d700:	popne	{r4, r5, fp, pc}
   1d704:	ldr	r0, [r5, #32]
   1d708:	mov	r1, #2
   1d70c:	strh	r1, [r0, #14]
   1d710:	mov	r0, r5
   1d714:	mvn	r1, #3
   1d718:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1d71c:	mov	r0, r5
   1d720:	mov	r1, r4
   1d724:	pop	{r4, r5, fp, lr}
   1d728:	b	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1d72c:	push	{fp, lr}
   1d730:	mov	fp, sp
   1d734:	ldr	r2, [r0, #28]
   1d738:	ldr	ip, [r0, #32]
   1d73c:	ldr	r3, [r0, #60]	; 0x3c
   1d740:	ldr	lr, [r0, #64]	; 0x40
   1d744:	add	r3, r3, r2
   1d748:	str	r3, [r0, #16]
   1d74c:	sub	r2, lr, r2
   1d750:	cmp	r2, r1
   1d754:	movhi	r2, r1
   1d758:	str	r2, [r0, #24]
   1d75c:	str	r1, [ip, #4]
   1d760:	pop	{fp, pc}
   1d764:	push	{r4, r5, fp, lr}
   1d768:	add	fp, sp, #8
   1d76c:	mov	r4, r0
   1d770:	ldr	r5, [r0, #20]
   1d774:	ldr	r2, [r0, #24]
   1d778:	add	r0, r5, r1
   1d77c:	str	r0, [r4, #20]
   1d780:	cmp	r0, r2
   1d784:	bcc	1d7a8 <flatcc_builder_start_struct@@Base+0xc8>
   1d788:	add	r1, r0, #1
   1d78c:	mov	r0, r4
   1d790:	mvn	r2, #3
   1d794:	bl	1fb80 <flatcc_builder_get_emit_context@@Base+0x18>
   1d798:	mov	r1, r0
   1d79c:	mov	r0, #0
   1d7a0:	cmp	r1, #0
   1d7a4:	popne	{r4, r5, fp, pc}
   1d7a8:	ldr	r0, [r4, #16]
   1d7ac:	add	r0, r0, r5
   1d7b0:	pop	{r4, r5, fp, pc}

0001d7b4 <flatcc_builder_struct_edit@@Base>:
   1d7b4:	ldr	r0, [r0, #16]
   1d7b8:	bx	lr

0001d7bc <flatcc_builder_end_struct@@Base>:
   1d7bc:	push	{r4, r5, fp, lr}
   1d7c0:	add	fp, sp, #8
   1d7c4:	mov	r4, r0
   1d7c8:	ldr	r0, [r0, #32]
   1d7cc:	ldrh	r0, [r0, #14]
   1d7d0:	cmp	r0, #2
   1d7d4:	bne	1d804 <flatcc_builder_end_struct@@Base+0x48>
   1d7d8:	ldrh	r3, [r4, #130]	; 0x82
   1d7dc:	ldr	r1, [r4, #16]
   1d7e0:	ldr	r2, [r4, #20]
   1d7e4:	mov	r0, r4
   1d7e8:	bl	1d330 <flatcc_builder_create_struct@@Base>
   1d7ec:	mov	r5, r0
   1d7f0:	cmp	r0, #0
   1d7f4:	movne	r0, r4
   1d7f8:	blne	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1d7fc:	mov	r0, r5
   1d800:	pop	{r4, r5, fp, pc}
   1d804:	movw	r0, #18114	; 0x46c2
   1d808:	movt	r0, #2
   1d80c:	movw	r1, #17422	; 0x440e
   1d810:	movt	r1, #2
   1d814:	movw	r3, #18158	; 0x46ee
   1d818:	movt	r3, #2
   1d81c:	mov	r2, #872	; 0x368
   1d820:	bl	12bc4 <__assert_fail@plt>

0001d824 <flatcc_builder_extend_vector@@Base>:
   1d824:	push	{r4, r5, fp, lr}
   1d828:	add	fp, sp, #8
   1d82c:	mov	r5, r1
   1d830:	mov	r4, r0
   1d834:	ldr	r0, [r0, #32]
   1d838:	ldr	r2, [r0, #24]
   1d83c:	mov	r0, r4
   1d840:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1d844:	cmp	r0, #0
   1d848:	movne	r0, #0
   1d84c:	popne	{r4, r5, fp, pc}
   1d850:	ldr	r0, [r4, #32]
   1d854:	ldr	r0, [r0, #16]
   1d858:	mul	r1, r0, r5
   1d85c:	mov	r0, r4
   1d860:	pop	{r4, r5, fp, lr}
   1d864:	b	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1d868:	push	{fp, lr}
   1d86c:	mov	fp, sp
   1d870:	ldr	r0, [r0, #32]
   1d874:	ldr	r3, [r0, #20]
   1d878:	adds	r1, r3, r1
   1d87c:	bcs	1d890 <flatcc_builder_extend_vector@@Base+0x6c>
   1d880:	cmp	r1, r2
   1d884:	strls	r1, [r0, #20]
   1d888:	movls	r0, #0
   1d88c:	popls	{fp, pc}
   1d890:	movw	r0, #21693	; 0x54bd
   1d894:	movt	r0, #2
   1d898:	movw	r1, #17422	; 0x440e
   1d89c:	movt	r1, #2
   1d8a0:	movw	r3, #21720	; 0x54d8
   1d8a4:	movt	r3, #2
   1d8a8:	mov	r2, #892	; 0x37c
   1d8ac:	bl	12bc4 <__assert_fail@plt>

0001d8b0 <flatcc_builder_vector_push@@Base>:
   1d8b0:	push	{fp, lr}
   1d8b4:	mov	fp, sp
   1d8b8:	ldr	r2, [r0, #32]
   1d8bc:	ldrh	r3, [r2, #14]
   1d8c0:	cmp	r3, #4
   1d8c4:	bne	1d8f0 <flatcc_builder_vector_push@@Base+0x40>
   1d8c8:	ldr	ip, [r2, #20]
   1d8cc:	ldr	r3, [r2, #24]
   1d8d0:	cmp	ip, r3
   1d8d4:	bhi	1d910 <flatcc_builder_vector_push@@Base+0x60>
   1d8d8:	add	r3, ip, #1
   1d8dc:	str	r3, [r2, #20]
   1d8e0:	ldr	r2, [r0, #32]
   1d8e4:	ldr	r2, [r2, #16]
   1d8e8:	pop	{fp, lr}
   1d8ec:	b	1d930 <flatcc_builder_vector_push@@Base+0x80>
   1d8f0:	movw	r0, #18225	; 0x4731
   1d8f4:	movt	r0, #2
   1d8f8:	movw	r1, #17422	; 0x440e
   1d8fc:	movt	r1, #2
   1d900:	movw	r3, #18269	; 0x475d
   1d904:	movt	r3, #2
   1d908:	movw	r2, #907	; 0x38b
   1d90c:	bl	12bc4 <__assert_fail@plt>
   1d910:	movw	r0, #18336	; 0x47a0
   1d914:	movt	r0, #2
   1d918:	movw	r1, #17422	; 0x440e
   1d91c:	movt	r1, #2
   1d920:	movw	r3, #18269	; 0x475d
   1d924:	movt	r3, #2
   1d928:	mov	r2, #908	; 0x38c
   1d92c:	bl	12bc4 <__assert_fail@plt>
   1d930:	push	{r4, r5, r6, sl, fp, lr}
   1d934:	add	fp, sp, #16
   1d938:	mov	r4, r2
   1d93c:	mov	r5, r1
   1d940:	mov	r1, r2
   1d944:	bl	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1d948:	mov	r6, r0
   1d94c:	cmp	r0, #0
   1d950:	beq	1d964 <flatcc_builder_vector_push@@Base+0xb4>
   1d954:	mov	r0, r6
   1d958:	mov	r1, r5
   1d95c:	mov	r2, r4
   1d960:	bl	12ab0 <memcpy@plt>
   1d964:	mov	r0, r6
   1d968:	pop	{r4, r5, r6, sl, fp, pc}

0001d96c <flatcc_builder_append_vector@@Base>:
   1d96c:	push	{r4, r5, r6, sl, fp, lr}
   1d970:	add	fp, sp, #16
   1d974:	mov	r4, r1
   1d978:	mov	r6, r0
   1d97c:	ldr	r0, [r0, #32]
   1d980:	ldrh	r1, [r0, #14]
   1d984:	cmp	r1, #4
   1d988:	bne	1d9cc <flatcc_builder_append_vector@@Base+0x60>
   1d98c:	mov	r5, r2
   1d990:	ldr	r2, [r0, #24]
   1d994:	mov	r0, r6
   1d998:	mov	r1, r5
   1d99c:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1d9a0:	cmp	r0, #0
   1d9a4:	beq	1d9b0 <flatcc_builder_append_vector@@Base+0x44>
   1d9a8:	mov	r0, #0
   1d9ac:	pop	{r4, r5, r6, sl, fp, pc}
   1d9b0:	ldr	r0, [r6, #32]
   1d9b4:	ldr	r0, [r0, #16]
   1d9b8:	mul	r2, r0, r5
   1d9bc:	mov	r0, r6
   1d9c0:	mov	r1, r4
   1d9c4:	pop	{r4, r5, r6, sl, fp, lr}
   1d9c8:	b	1d930 <flatcc_builder_vector_push@@Base+0x80>
   1d9cc:	movw	r0, #18225	; 0x4731
   1d9d0:	movt	r0, #2
   1d9d4:	movw	r1, #17422	; 0x440e
   1d9d8:	movt	r1, #2
   1d9dc:	movw	r3, #18397	; 0x47dd
   1d9e0:	movt	r3, #2
   1d9e4:	movw	r2, #915	; 0x393
   1d9e8:	bl	12bc4 <__assert_fail@plt>

0001d9ec <flatcc_builder_extend_offset_vector@@Base>:
   1d9ec:	push	{r4, r5, fp, lr}
   1d9f0:	add	fp, sp, #8
   1d9f4:	mov	r5, r1
   1d9f8:	mov	r4, r0
   1d9fc:	mvn	r2, #-1073741824	; 0xc0000000
   1da00:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1da04:	cmp	r0, #0
   1da08:	movne	r0, #0
   1da0c:	popne	{r4, r5, fp, pc}
   1da10:	lsl	r1, r5, #2
   1da14:	mov	r0, r4
   1da18:	pop	{r4, r5, fp, lr}
   1da1c:	b	1d764 <flatcc_builder_start_struct@@Base+0x84>

0001da20 <flatcc_builder_offset_vector_push@@Base>:
   1da20:	push	{r4, r5, fp, lr}
   1da24:	add	fp, sp, #8
   1da28:	mov	r4, r1
   1da2c:	ldr	r1, [r0, #32]
   1da30:	ldrh	r2, [r1, #14]
   1da34:	cmp	r2, #5
   1da38:	bne	1da70 <flatcc_builder_offset_vector_push@@Base+0x50>
   1da3c:	ldr	r2, [r1, #20]
   1da40:	mov	r5, #0
   1da44:	cmn	r2, #-1073741823	; 0xc0000001
   1da48:	beq	1da68 <flatcc_builder_offset_vector_push@@Base+0x48>
   1da4c:	add	r2, r2, #1
   1da50:	str	r2, [r1, #20]
   1da54:	mov	r1, #4
   1da58:	bl	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1da5c:	cmp	r0, #0
   1da60:	strne	r4, [r0]
   1da64:	movne	r5, r0
   1da68:	mov	r0, r5
   1da6c:	pop	{r4, r5, fp, pc}
   1da70:	movw	r0, #18474	; 0x482a
   1da74:	movt	r0, #2
   1da78:	movw	r1, #17422	; 0x440e
   1da7c:	movt	r1, #2
   1da80:	movw	r3, #18525	; 0x485d
   1da84:	movt	r3, #2
   1da88:	movw	r2, #934	; 0x3a6
   1da8c:	bl	12bc4 <__assert_fail@plt>

0001da90 <flatcc_builder_append_offset_vector@@Base>:
   1da90:	push	{r4, r5, r6, sl, fp, lr}
   1da94:	add	fp, sp, #16
   1da98:	mov	r6, r0
   1da9c:	ldr	r0, [r0, #32]
   1daa0:	ldrh	r0, [r0, #14]
   1daa4:	cmp	r0, #5
   1daa8:	bne	1dae8 <flatcc_builder_append_offset_vector@@Base+0x58>
   1daac:	mov	r5, r2
   1dab0:	mov	r4, r1
   1dab4:	mov	r0, r6
   1dab8:	mov	r1, r2
   1dabc:	mvn	r2, #-1073741824	; 0xc0000000
   1dac0:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1dac4:	cmp	r0, #0
   1dac8:	beq	1dad4 <flatcc_builder_append_offset_vector@@Base+0x44>
   1dacc:	mov	r0, #0
   1dad0:	pop	{r4, r5, r6, sl, fp, pc}
   1dad4:	lsl	r2, r5, #2
   1dad8:	mov	r0, r6
   1dadc:	mov	r1, r4
   1dae0:	pop	{r4, r5, r6, sl, fp, lr}
   1dae4:	b	1d930 <flatcc_builder_vector_push@@Base+0x80>
   1dae8:	movw	r0, #18474	; 0x482a
   1daec:	movt	r0, #2
   1daf0:	movw	r1, #17422	; 0x440e
   1daf4:	movt	r1, #2
   1daf8:	movw	r3, #18623	; 0x48bf
   1dafc:	movt	r3, #2
   1db00:	mov	r2, #948	; 0x3b4
   1db04:	bl	12bc4 <__assert_fail@plt>

0001db08 <flatcc_builder_extend_string@@Base>:
   1db08:	push	{r4, r5, fp, lr}
   1db0c:	add	fp, sp, #8
   1db10:	mov	r5, r0
   1db14:	ldr	r0, [r0, #32]
   1db18:	ldrh	r0, [r0, #14]
   1db1c:	cmp	r0, #6
   1db20:	bne	1db50 <flatcc_builder_extend_string@@Base+0x48>
   1db24:	mov	r4, r1
   1db28:	mov	r0, r5
   1db2c:	mvn	r2, #0
   1db30:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1db34:	cmp	r0, #0
   1db38:	movne	r0, #0
   1db3c:	popne	{r4, r5, fp, pc}
   1db40:	mov	r0, r5
   1db44:	mov	r1, r4
   1db48:	pop	{r4, r5, fp, lr}
   1db4c:	b	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1db50:	movw	r0, #18739	; 0x4933
   1db54:	movt	r0, #2
   1db58:	movw	r1, #17422	; 0x440e
   1db5c:	movt	r1, #2
   1db60:	movw	r3, #18783	; 0x495f
   1db64:	movt	r3, #2
   1db68:	movw	r2, #957	; 0x3bd
   1db6c:	bl	12bc4 <__assert_fail@plt>

0001db70 <flatcc_builder_append_string@@Base>:
   1db70:	push	{r4, r5, r6, sl, fp, lr}
   1db74:	add	fp, sp, #16
   1db78:	mov	r6, r0
   1db7c:	ldr	r0, [r0, #32]
   1db80:	ldrh	r0, [r0, #14]
   1db84:	cmp	r0, #6
   1db88:	bne	1dbc8 <flatcc_builder_append_string@@Base+0x58>
   1db8c:	mov	r4, r2
   1db90:	mov	r5, r1
   1db94:	mov	r0, r6
   1db98:	mov	r1, r2
   1db9c:	mvn	r2, #0
   1dba0:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1dba4:	cmp	r0, #0
   1dba8:	beq	1dbb4 <flatcc_builder_append_string@@Base+0x44>
   1dbac:	mov	r0, #0
   1dbb0:	pop	{r4, r5, r6, sl, fp, pc}
   1dbb4:	mov	r0, r6
   1dbb8:	mov	r1, r5
   1dbbc:	mov	r2, r4
   1dbc0:	pop	{r4, r5, r6, sl, fp, lr}
   1dbc4:	b	1d930 <flatcc_builder_vector_push@@Base+0x80>
   1dbc8:	movw	r0, #18739	; 0x4933
   1dbcc:	movt	r0, #2
   1dbd0:	movw	r1, #17422	; 0x440e
   1dbd4:	movt	r1, #2
   1dbd8:	movw	r3, #18846	; 0x499e
   1dbdc:	movt	r3, #2
   1dbe0:	movw	r2, #966	; 0x3c6
   1dbe4:	bl	12bc4 <__assert_fail@plt>

0001dbe8 <flatcc_builder_append_string_str@@Base>:
   1dbe8:	push	{r4, r5, fp, lr}
   1dbec:	add	fp, sp, #8
   1dbf0:	mov	r4, r1
   1dbf4:	mov	r5, r0
   1dbf8:	mov	r0, r1
   1dbfc:	bl	12b40 <strlen@plt>
   1dc00:	mov	r2, r0
   1dc04:	mov	r0, r5
   1dc08:	mov	r1, r4
   1dc0c:	pop	{r4, r5, fp, lr}
   1dc10:	b	1db70 <flatcc_builder_append_string@@Base>

0001dc14 <flatcc_builder_append_string_strn@@Base>:
   1dc14:	push	{r4, r5, fp, lr}
   1dc18:	add	fp, sp, #8
   1dc1c:	mov	r4, r1
   1dc20:	mov	r5, r0
   1dc24:	mov	r0, r1
   1dc28:	mov	r1, r2
   1dc2c:	bl	1dc44 <flatcc_builder_append_string_strn@@Base+0x30>
   1dc30:	mov	r2, r0
   1dc34:	mov	r0, r5
   1dc38:	mov	r1, r4
   1dc3c:	pop	{r4, r5, fp, lr}
   1dc40:	b	1db70 <flatcc_builder_append_string@@Base>
   1dc44:	push	{r4, r5, fp, lr}
   1dc48:	add	fp, sp, #8
   1dc4c:	mov	r4, r1
   1dc50:	mov	r5, r0
   1dc54:	mov	r1, #0
   1dc58:	mov	r2, r4
   1dc5c:	bl	12b7c <memchr@plt>
   1dc60:	cmp	r0, #0
   1dc64:	subne	r4, r0, r5
   1dc68:	mov	r0, r4
   1dc6c:	pop	{r4, r5, fp, pc}

0001dc70 <flatcc_builder_truncate_vector@@Base>:
   1dc70:	push	{fp, lr}
   1dc74:	mov	fp, sp
   1dc78:	ldr	r2, [r0, #32]
   1dc7c:	ldrh	r3, [r2, #14]
   1dc80:	cmp	r3, #4
   1dc84:	bne	1dcb4 <flatcc_builder_truncate_vector@@Base+0x44>
   1dc88:	ldr	r3, [r2, #20]
   1dc8c:	cmp	r3, r1
   1dc90:	bcc	1dcd4 <flatcc_builder_truncate_vector@@Base+0x64>
   1dc94:	sub	r3, r3, r1
   1dc98:	str	r3, [r2, #20]
   1dc9c:	ldr	r2, [r0, #32]
   1dca0:	ldr	r2, [r2, #16]
   1dca4:	mul	r1, r2, r1
   1dca8:	bl	1dcf4 <flatcc_builder_truncate_vector@@Base+0x84>
   1dcac:	mov	r0, #0
   1dcb0:	pop	{fp, pc}
   1dcb4:	movw	r0, #18225	; 0x4731
   1dcb8:	movt	r0, #2
   1dcbc:	movw	r1, #17422	; 0x440e
   1dcc0:	movt	r1, #2
   1dcc4:	movw	r3, #18923	; 0x49eb
   1dcc8:	movt	r3, #2
   1dccc:	movw	r2, #985	; 0x3d9
   1dcd0:	bl	12bc4 <__assert_fail@plt>
   1dcd4:	movw	r0, #18986	; 0x4a2a
   1dcd8:	movt	r0, #2
   1dcdc:	movw	r1, #17422	; 0x440e
   1dce0:	movt	r1, #2
   1dce4:	movw	r3, #18923	; 0x49eb
   1dce8:	movt	r3, #2
   1dcec:	movw	r2, #986	; 0x3da
   1dcf0:	bl	12bc4 <__assert_fail@plt>
   1dcf4:	mov	r2, r1
   1dcf8:	ldr	r1, [r0, #16]
   1dcfc:	ldr	r3, [r0, #20]
   1dd00:	sub	r3, r3, r2
   1dd04:	str	r3, [r0, #20]
   1dd08:	add	r0, r1, r3
   1dd0c:	mov	r1, #0
   1dd10:	b	12b64 <memset@plt>

0001dd14 <flatcc_builder_truncate_offset_vector@@Base>:
   1dd14:	push	{fp, lr}
   1dd18:	mov	fp, sp
   1dd1c:	ldr	r2, [r0, #32]
   1dd20:	ldrh	r3, [r2, #14]
   1dd24:	cmp	r3, #5
   1dd28:	bne	1dd58 <flatcc_builder_truncate_offset_vector@@Base+0x44>
   1dd2c:	ldr	r3, [r2, #20]
   1dd30:	cmp	r3, r1
   1dd34:	bcc	1dd78 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   1dd38:	sub	r3, r3, r1
   1dd3c:	str	r3, [r2, #20]
   1dd40:	ldr	r2, [r0, #32]
   1dd44:	ldr	r2, [r2, #16]
   1dd48:	mul	r1, r2, r1
   1dd4c:	bl	1dcf4 <flatcc_builder_truncate_vector@@Base+0x84>
   1dd50:	mov	r0, #0
   1dd54:	pop	{fp, pc}
   1dd58:	movw	r0, #18474	; 0x482a
   1dd5c:	movt	r0, #2
   1dd60:	movw	r1, #17422	; 0x440e
   1dd64:	movt	r1, #2
   1dd68:	movw	r3, #19022	; 0x4a4e
   1dd6c:	movt	r3, #2
   1dd70:	movw	r2, #994	; 0x3e2
   1dd74:	bl	12bc4 <__assert_fail@plt>
   1dd78:	movw	r0, #19092	; 0x4a94
   1dd7c:	movt	r0, #2
   1dd80:	movw	r1, #17422	; 0x440e
   1dd84:	movt	r1, #2
   1dd88:	movw	r3, #19022	; 0x4a4e
   1dd8c:	movt	r3, #2
   1dd90:	movw	r2, #995	; 0x3e3
   1dd94:	bl	12bc4 <__assert_fail@plt>

0001dd98 <flatcc_builder_truncate_string@@Base>:
   1dd98:	push	{fp, lr}
   1dd9c:	mov	fp, sp
   1dda0:	ldr	r2, [r0, #32]
   1dda4:	ldrh	r3, [r2, #14]
   1dda8:	cmp	r3, #6
   1ddac:	bne	1ddd0 <flatcc_builder_truncate_string@@Base+0x38>
   1ddb0:	ldr	r3, [r2, #20]
   1ddb4:	cmp	r3, r1
   1ddb8:	bcc	1ddf0 <flatcc_builder_truncate_string@@Base+0x58>
   1ddbc:	sub	r3, r3, r1
   1ddc0:	str	r3, [r2, #20]
   1ddc4:	bl	1dcf4 <flatcc_builder_truncate_vector@@Base+0x84>
   1ddc8:	mov	r0, #0
   1ddcc:	pop	{fp, pc}
   1ddd0:	movw	r0, #18739	; 0x4933
   1ddd4:	movt	r0, #2
   1ddd8:	movw	r1, #17422	; 0x440e
   1dddc:	movt	r1, #2
   1dde0:	movw	r3, #19151	; 0x4acf
   1dde4:	movt	r3, #2
   1dde8:	movw	r2, #1003	; 0x3eb
   1ddec:	bl	12bc4 <__assert_fail@plt>
   1ddf0:	movw	r0, #19214	; 0x4b0e
   1ddf4:	movt	r0, #2
   1ddf8:	movw	r1, #17422	; 0x440e
   1ddfc:	movt	r1, #2
   1de00:	movw	r3, #19151	; 0x4acf
   1de04:	movt	r3, #2
   1de08:	mov	r2, #1004	; 0x3ec
   1de0c:	bl	12bc4 <__assert_fail@plt>

0001de10 <flatcc_builder_start_vector@@Base>:
   1de10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1de14:	add	fp, sp, #24
   1de18:	sub	sp, sp, #8
   1de1c:	mov	r5, r3
   1de20:	mov	r6, r1
   1de24:	mov	r4, r0
   1de28:	strh	r2, [sp, #6]
   1de2c:	add	r0, sp, #6
   1de30:	mov	r8, #4
   1de34:	mov	r1, #4
   1de38:	bl	1de90 <flatcc_builder_start_vector@@Base+0x80>
   1de3c:	ldrh	r1, [sp, #6]
   1de40:	mov	r0, r4
   1de44:	bl	1d4b4 <flatcc_builder_start_buffer@@Base+0xbc>
   1de48:	mvn	r7, #0
   1de4c:	cmp	r0, #0
   1de50:	bne	1de84 <flatcc_builder_start_vector@@Base+0x74>
   1de54:	ldr	r0, [r4, #32]
   1de58:	str	r6, [r0, #16]
   1de5c:	ldr	r0, [r4, #32]
   1de60:	mov	r7, #0
   1de64:	str	r7, [r0, #20]
   1de68:	ldr	r0, [r4, #32]
   1de6c:	str	r5, [r0, #24]
   1de70:	ldr	r0, [r4, #32]
   1de74:	strh	r8, [r0, #14]
   1de78:	mov	r0, r4
   1de7c:	mvn	r1, #3
   1de80:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1de84:	mov	r0, r7
   1de88:	sub	sp, fp, #24
   1de8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1de90:	ldrh	r2, [r0]
   1de94:	cmp	r2, r1
   1de98:	strhcc	r1, [r0]
   1de9c:	bx	lr

0001dea0 <flatcc_builder_start_offset_vector@@Base>:
   1dea0:	push	{r4, r5, r6, sl, fp, lr}
   1dea4:	add	fp, sp, #16
   1dea8:	mov	r4, r0
   1deac:	mov	r6, #4
   1deb0:	mov	r1, #4
   1deb4:	bl	1d4b4 <flatcc_builder_start_buffer@@Base+0xbc>
   1deb8:	mvn	r5, #0
   1debc:	cmp	r0, #0
   1dec0:	beq	1decc <flatcc_builder_start_offset_vector@@Base+0x2c>
   1dec4:	mov	r0, r5
   1dec8:	pop	{r4, r5, r6, sl, fp, pc}
   1decc:	ldr	r0, [r4, #32]
   1ded0:	str	r6, [r0, #16]
   1ded4:	ldr	r0, [r4, #32]
   1ded8:	mov	r5, #0
   1dedc:	str	r5, [r0, #20]
   1dee0:	ldr	r0, [r4, #32]
   1dee4:	mov	r1, #5
   1dee8:	strh	r1, [r0, #14]
   1deec:	mov	r0, r4
   1def0:	mvn	r1, #3
   1def4:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1def8:	mov	r0, r5
   1defc:	pop	{r4, r5, r6, sl, fp, pc}

0001df00 <flatcc_builder_create_offset_vector@@Base>:
   1df00:	push	{r4, r5, r6, sl, fp, lr}
   1df04:	add	fp, sp, #16
   1df08:	mov	r6, r2
   1df0c:	mov	r5, r1
   1df10:	mov	r4, r0
   1df14:	bl	1dea0 <flatcc_builder_start_offset_vector@@Base>
   1df18:	cmp	r0, #0
   1df1c:	beq	1df28 <flatcc_builder_create_offset_vector@@Base+0x28>
   1df20:	mov	r0, #0
   1df24:	pop	{r4, r5, r6, sl, fp, pc}
   1df28:	mov	r0, r4
   1df2c:	mov	r1, r6
   1df30:	bl	1d9ec <flatcc_builder_extend_offset_vector@@Base>
   1df34:	cmp	r0, #0
   1df38:	beq	1df20 <flatcc_builder_create_offset_vector@@Base+0x20>
   1df3c:	lsl	r2, r6, #2
   1df40:	mov	r1, r5
   1df44:	bl	12ab0 <memcpy@plt>
   1df48:	mov	r0, r4
   1df4c:	pop	{r4, r5, r6, sl, fp, lr}
   1df50:	b	1df54 <flatcc_builder_end_offset_vector@@Base>

0001df54 <flatcc_builder_end_offset_vector@@Base>:
   1df54:	push	{r4, r5, fp, lr}
   1df58:	add	fp, sp, #8
   1df5c:	mov	r4, r0
   1df60:	ldr	r0, [r0, #32]
   1df64:	ldrh	r1, [r0, #14]
   1df68:	cmp	r1, #5
   1df6c:	bne	1df98 <flatcc_builder_end_offset_vector@@Base+0x44>
   1df70:	ldr	r2, [r0, #20]
   1df74:	ldr	r1, [r4, #16]
   1df78:	mov	r0, r4
   1df7c:	bl	1eadc <flatcc_builder_create_offset_vector_direct@@Base>
   1df80:	mov	r5, r0
   1df84:	cmp	r0, #0
   1df88:	movne	r0, r4
   1df8c:	blne	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1df90:	mov	r0, r5
   1df94:	pop	{r4, r5, fp, pc}
   1df98:	movw	r0, #18474	; 0x482a
   1df9c:	movt	r0, #2
   1dfa0:	movw	r1, #17422	; 0x440e
   1dfa4:	movt	r1, #2
   1dfa8:	movw	r3, #20057	; 0x4e59
   1dfac:	movt	r3, #2
   1dfb0:	movw	r2, #1480	; 0x5c8
   1dfb4:	bl	12bc4 <__assert_fail@plt>

0001dfb8 <flatcc_builder_start_string@@Base>:
   1dfb8:	push	{r4, r5, r6, sl, fp, lr}
   1dfbc:	add	fp, sp, #16
   1dfc0:	mov	r4, r0
   1dfc4:	mov	r6, #1
   1dfc8:	mov	r1, #1
   1dfcc:	bl	1d4b4 <flatcc_builder_start_buffer@@Base+0xbc>
   1dfd0:	mvn	r5, #0
   1dfd4:	cmp	r0, #0
   1dfd8:	beq	1dfe4 <flatcc_builder_start_string@@Base+0x2c>
   1dfdc:	mov	r0, r5
   1dfe0:	pop	{r4, r5, r6, sl, fp, pc}
   1dfe4:	ldr	r0, [r4, #32]
   1dfe8:	str	r6, [r0, #16]
   1dfec:	ldr	r0, [r4, #32]
   1dff0:	mov	r5, #0
   1dff4:	str	r5, [r0, #20]
   1dff8:	ldr	r0, [r4, #32]
   1dffc:	mov	r1, #6
   1e000:	strh	r1, [r0, #14]
   1e004:	mov	r0, r4
   1e008:	mvn	r1, #3
   1e00c:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1e010:	mov	r0, r5
   1e014:	pop	{r4, r5, r6, sl, fp, pc}

0001e018 <flatcc_builder_reserve_table@@Base>:
   1e018:	cmn	r1, #1
   1e01c:	ble	1e024 <flatcc_builder_reserve_table@@Base+0xc>
   1e020:	b	1e04c <flatcc_builder_reserve_table@@Base+0x34>
   1e024:	push	{fp, lr}
   1e028:	mov	fp, sp
   1e02c:	movw	r0, #19313	; 0x4b71
   1e030:	movt	r0, #2
   1e034:	movw	r1, #17422	; 0x440e
   1e038:	movt	r1, #2
   1e03c:	movw	r3, #19248	; 0x4b30
   1e040:	movt	r3, #2
   1e044:	movw	r2, #1065	; 0x429
   1e048:	bl	12bc4 <__assert_fail@plt>
   1e04c:	push	{r4, r5, r6, sl, fp, lr}
   1e050:	add	fp, sp, #16
   1e054:	sub	sp, sp, #8
   1e058:	mov	r6, r1
   1e05c:	mov	r4, r0
   1e060:	ldr	r0, [r0, #32]
   1e064:	ldrh	r1, [r0, #28]
   1e068:	ldr	r0, [r0, #16]
   1e06c:	mov	r2, #1
   1e070:	str	r2, [sp]
   1e074:	mov	r2, #4
   1e078:	add	r3, r2, r6, lsl #1
   1e07c:	add	r2, r0, r1, lsl #1
   1e080:	mov	r5, #0
   1e084:	mov	r0, r4
   1e088:	mov	r1, #0
   1e08c:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1e090:	str	r0, [r4, #4]
   1e094:	cmp	r0, #0
   1e098:	beq	1e0d4 <flatcc_builder_reserve_table@@Base+0xbc>
   1e09c:	lsl	r1, r6, #1
   1e0a0:	add	r0, r0, #4
   1e0a4:	str	r0, [r4, #4]
   1e0a8:	ldr	r0, [r4, #32]
   1e0ac:	ldr	r2, [r0, #20]
   1e0b0:	str	r5, [sp]
   1e0b4:	orr	r3, r1, #1
   1e0b8:	mov	r0, r4
   1e0bc:	mov	r1, #3
   1e0c0:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1e0c4:	str	r0, [r4]
   1e0c8:	cmp	r0, #0
   1e0cc:	mvneq	r5, #0
   1e0d0:	b	1e0d8 <flatcc_builder_reserve_table@@Base+0xc0>
   1e0d4:	mvn	r5, #0
   1e0d8:	mov	r0, r5
   1e0dc:	sub	sp, fp, #16
   1e0e0:	pop	{r4, r5, r6, sl, fp, pc}

0001e0e4 <flatcc_builder_start_table@@Base>:
   1e0e4:	push	{r4, r5, r6, sl, fp, lr}
   1e0e8:	add	fp, sp, #16
   1e0ec:	mov	r6, r1
   1e0f0:	mov	r4, r0
   1e0f4:	mov	r1, #4
   1e0f8:	bl	1d4b4 <flatcc_builder_start_buffer@@Base+0xbc>
   1e0fc:	mvn	r5, #0
   1e100:	cmp	r0, #0
   1e104:	bne	1e17c <flatcc_builder_start_table@@Base+0x98>
   1e108:	ldr	r0, [r4, #4]
   1e10c:	ldr	r1, [r4, #32]
   1e110:	ldr	r2, [r4, #52]	; 0x34
   1e114:	sub	r0, r0, r2
   1e118:	str	r0, [r1, #16]
   1e11c:	ldr	r0, [r4]
   1e120:	ldr	r1, [r4, #32]
   1e124:	ldr	r2, [r4, #76]	; 0x4c
   1e128:	sub	r0, r0, r2
   1e12c:	str	r0, [r1, #20]
   1e130:	ldr	r0, [r4, #12]
   1e134:	ldr	r1, [r4, #32]
   1e138:	str	r0, [r1, #24]
   1e13c:	ldr	r0, [r4, #32]
   1e140:	ldrh	r1, [r4, #8]
   1e144:	strh	r1, [r0, #28]
   1e148:	mov	r0, #0
   1e14c:	strh	r0, [r4, #8]
   1e150:	movw	r0, #15186	; 0x3b52
   1e154:	movt	r0, #12137	; 0x2f69
   1e158:	str	r0, [r4, #12]
   1e15c:	ldr	r0, [r4, #32]
   1e160:	mov	r1, #3
   1e164:	strh	r1, [r0, #14]
   1e168:	mov	r0, r4
   1e16c:	mov	r1, r6
   1e170:	bl	1e04c <flatcc_builder_reserve_table@@Base+0x34>
   1e174:	cmp	r0, #0
   1e178:	beq	1e184 <flatcc_builder_start_table@@Base+0xa0>
   1e17c:	mov	r0, r5
   1e180:	pop	{r4, r5, r6, sl, fp, pc}
   1e184:	mov	r0, r4
   1e188:	movw	r1, #65532	; 0xfffc
   1e18c:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1e190:	mov	r5, #0
   1e194:	mov	r0, r5
   1e198:	pop	{r4, r5, r6, sl, fp, pc}

0001e19c <flatcc_builder_create_vtable@@Base>:
   1e19c:	push	{fp, lr}
   1e1a0:	mov	fp, sp
   1e1a4:	sub	sp, sp, #72	; 0x48
   1e1a8:	mov	r3, #0
   1e1ac:	str	r3, [sp, #4]
   1e1b0:	str	r3, [sp]
   1e1b4:	cmp	r2, #0
   1e1b8:	strne	r2, [sp, #12]
   1e1bc:	strne	r1, [sp, #8]
   1e1c0:	strne	r2, [sp]
   1e1c4:	movne	r1, #1
   1e1c8:	strne	r1, [sp, #4]
   1e1cc:	ldr	r1, [r0, #152]	; 0x98
   1e1d0:	cmp	r1, #0
   1e1d4:	bne	1e1e4 <flatcc_builder_create_vtable@@Base+0x48>
   1e1d8:	ldr	r1, [r0, #180]	; 0xb4
   1e1dc:	cmp	r1, #0
   1e1e0:	beq	1e200 <flatcc_builder_create_vtable@@Base+0x64>
   1e1e4:	mov	r1, sp
   1e1e8:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1e1ec:	cmp	r0, #0
   1e1f0:	beq	1e210 <flatcc_builder_create_vtable@@Base+0x74>
   1e1f4:	add	r0, r0, #1
   1e1f8:	mov	sp, fp
   1e1fc:	pop	{fp, pc}
   1e200:	mov	r1, sp
   1e204:	bl	1e21c <flatcc_builder_create_vtable@@Base+0x80>
   1e208:	cmp	r0, #0
   1e20c:	bne	1e1f8 <flatcc_builder_create_vtable@@Base+0x5c>
   1e210:	mov	r0, #0
   1e214:	mov	sp, fp
   1e218:	pop	{fp, pc}
   1e21c:	push	{r4, sl, fp, lr}
   1e220:	add	fp, sp, #8
   1e224:	sub	sp, sp, #8
   1e228:	ldr	r4, [r0, #140]	; 0x8c
   1e22c:	ldr	r3, [r1]
   1e230:	add	r2, r3, r4
   1e234:	str	r2, [r0, #140]	; 0x8c
   1e238:	cmn	r3, #1
   1e23c:	ble	1e290 <flatcc_builder_create_vtable@@Base+0xf4>
   1e240:	ldr	r2, [r1, #4]
   1e244:	ldr	ip, [r0, #36]	; 0x24
   1e248:	ldr	lr, [r0, #44]	; 0x2c
   1e24c:	str	r3, [sp]
   1e250:	add	r1, r1, #8
   1e254:	mov	r0, ip
   1e258:	mov	r3, r4
   1e25c:	blx	lr
   1e260:	cmp	r0, #0
   1e264:	addeq	r0, r4, #1
   1e268:	subeq	sp, fp, #8
   1e26c:	popeq	{r4, sl, fp, pc}
   1e270:	movw	r0, #21940	; 0x55b4
   1e274:	movt	r0, #2
   1e278:	movw	r1, #17422	; 0x440e
   1e27c:	movt	r1, #2
   1e280:	movw	r3, #21807	; 0x552f
   1e284:	movt	r3, #2
   1e288:	movw	r2, #677	; 0x2a5
   1e28c:	bl	12bc4 <__assert_fail@plt>
   1e290:	movw	r0, #21940	; 0x55b4
   1e294:	movt	r0, #2
   1e298:	movw	r1, #17422	; 0x440e
   1e29c:	movt	r1, #2
   1e2a0:	movw	r3, #21807	; 0x552f
   1e2a4:	movt	r3, #2
   1e2a8:	movw	r2, #673	; 0x2a1
   1e2ac:	bl	12bc4 <__assert_fail@plt>

0001e2b0 <flatcc_builder_create_cached_vtable@@Base>:
   1e2b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2b4:	add	fp, sp, #28
   1e2b8:	sub	sp, sp, #20
   1e2bc:	mov	r4, r2
   1e2c0:	mov	r9, r1
   1e2c4:	mov	sl, r0
   1e2c8:	mov	r1, r3
   1e2cc:	bl	1e4a8 <flatcc_builder_create_cached_vtable@@Base+0x1f8>
   1e2d0:	cmp	r0, #0
   1e2d4:	beq	1e3f8 <flatcc_builder_create_cached_vtable@@Base+0x148>
   1e2d8:	mov	r7, r0
   1e2dc:	ldr	r6, [r0]
   1e2e0:	mov	r5, #0
   1e2e4:	cmp	r6, #0
   1e2e8:	mov	r8, #0
   1e2ec:	beq	1e384 <flatcc_builder_create_cached_vtable@@Base+0xd4>
   1e2f0:	ldr	r5, [sl, #68]	; 0x44
   1e2f4:	str	sl, [sp, #16]
   1e2f8:	ldr	sl, [sl, #100]	; 0x64
   1e2fc:	mov	r0, #0
   1e300:	str	r7, [sp, #8]
   1e304:	str	r0, [sp, #12]
   1e308:	b	1e31c <flatcc_builder_create_cached_vtable@@Base+0x6c>
   1e30c:	ldr	r6, [r8, #12]!
   1e310:	cmp	r6, #0
   1e314:	mov	r7, r8
   1e318:	beq	1e374 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   1e31c:	add	r8, sl, r6
   1e320:	ldr	r0, [r8, #8]
   1e324:	mov	r1, r5
   1e328:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   1e32c:	cmp	r0, r4
   1e330:	bne	1e30c <flatcc_builder_create_cached_vtable@@Base+0x5c>
   1e334:	mov	r0, r9
   1e338:	mov	r2, r4
   1e33c:	bl	12b34 <bcmp@plt>
   1e340:	cmp	r0, #0
   1e344:	bne	1e30c <flatcc_builder_create_cached_vtable@@Base+0x5c>
   1e348:	ldr	r0, [sp, #16]
   1e34c:	ldr	r0, [r0, #152]	; 0x98
   1e350:	ldr	r1, [r8, #4]
   1e354:	cmp	r1, r0
   1e358:	beq	1e480 <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   1e35c:	mov	r7, r8
   1e360:	ldr	r6, [r7, #12]!
   1e364:	cmp	r6, #0
   1e368:	mov	r0, r8
   1e36c:	bne	1e304 <flatcc_builder_create_cached_vtable@@Base+0x54>
   1e370:	b	1e378 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   1e374:	ldr	r8, [sp, #12]
   1e378:	ldr	sl, [sp, #16]
   1e37c:	mov	r5, #0
   1e380:	ldr	r7, [sp, #8]
   1e384:	ldr	r2, [sl, #124]	; 0x7c
   1e388:	str	r5, [sp]
   1e38c:	mov	r0, sl
   1e390:	mov	r1, #6
   1e394:	mov	r3, #16
   1e398:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1e39c:	cmp	r0, #0
   1e3a0:	beq	1e46c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e3a4:	mov	r6, r0
   1e3a8:	ldr	r0, [sl, #124]	; 0x7c
   1e3ac:	ldr	r1, [sl, #152]	; 0x98
   1e3b0:	add	r2, r0, #16
   1e3b4:	str	r2, [sl, #124]	; 0x7c
   1e3b8:	str	r1, [r6, #4]
   1e3bc:	ldr	r1, [r7]
   1e3c0:	str	r1, [r6, #12]
   1e3c4:	str	r0, [r7]
   1e3c8:	mov	r0, sl
   1e3cc:	mov	r1, r9
   1e3d0:	mov	r2, r4
   1e3d4:	bl	1e19c <flatcc_builder_create_vtable@@Base>
   1e3d8:	str	r0, [r6]
   1e3dc:	cmp	r0, #0
   1e3e0:	beq	1e46c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e3e4:	cmp	r8, #0
   1e3e8:	beq	1e400 <flatcc_builder_create_cached_vtable@@Base+0x150>
   1e3ec:	ldr	r0, [r8, #8]
   1e3f0:	str	r0, [r6, #8]
   1e3f4:	b	1e468 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   1e3f8:	mov	r5, #0
   1e3fc:	b	1e46c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e400:	ldr	r0, [sl, #172]	; 0xac
   1e404:	cmp	r0, #0
   1e408:	beq	1e428 <flatcc_builder_create_cached_vtable@@Base+0x178>
   1e40c:	ldr	r1, [sl, #120]	; 0x78
   1e410:	add	r1, r1, r4
   1e414:	cmp	r0, r1
   1e418:	bcs	1e428 <flatcc_builder_create_cached_vtable@@Base+0x178>
   1e41c:	mov	r0, sl
   1e420:	bl	1ca34 <flatcc_builder_flush_vtable_cache@@Base>
   1e424:	b	1e468 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   1e428:	ldr	r2, [sl, #120]	; 0x78
   1e42c:	mov	r0, #0
   1e430:	str	r0, [sp]
   1e434:	mov	r0, sl
   1e438:	mov	r1, #2
   1e43c:	mov	r3, r4
   1e440:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1e444:	cmp	r0, #0
   1e448:	beq	1e478 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
   1e44c:	ldr	r1, [sl, #120]	; 0x78
   1e450:	str	r1, [r6, #8]
   1e454:	add	r1, r1, r4
   1e458:	str	r1, [sl, #120]	; 0x78
   1e45c:	mov	r1, r9
   1e460:	mov	r2, r4
   1e464:	bl	12ab0 <memcpy@plt>
   1e468:	ldr	r5, [r6]
   1e46c:	mov	r0, r5
   1e470:	sub	sp, fp, #28
   1e474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e478:	mvn	r5, #0
   1e47c:	b	1e46c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e480:	ldr	r1, [sp, #8]
   1e484:	cmp	r7, r1
   1e488:	beq	1e4a0 <flatcc_builder_create_cached_vtable@@Base+0x1f0>
   1e48c:	ldr	r0, [r8, #12]
   1e490:	str	r0, [r7]
   1e494:	ldr	r0, [r1]
   1e498:	str	r0, [r8, #12]
   1e49c:	str	r6, [r1]
   1e4a0:	ldr	r5, [r8]
   1e4a4:	b	1e46c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e4a8:	push	{r4, r5, fp, lr}
   1e4ac:	add	fp, sp, #8
   1e4b0:	mov	r4, r1
   1e4b4:	mov	r5, r0
   1e4b8:	ldr	r0, [r0, #116]	; 0x74
   1e4bc:	cmp	r0, #0
   1e4c0:	bne	1e4dc <flatcc_builder_create_cached_vtable@@Base+0x22c>
   1e4c4:	mov	r0, r5
   1e4c8:	bl	1fbe8 <flatcc_builder_get_emit_context@@Base+0x80>
   1e4cc:	mov	r1, r0
   1e4d0:	mov	r0, #0
   1e4d4:	cmp	r1, #0
   1e4d8:	popne	{r4, r5, fp, pc}
   1e4dc:	ldr	r0, [r5, #92]	; 0x5c
   1e4e0:	ldr	r1, [r5, #116]	; 0x74
   1e4e4:	rsb	r1, r1, #32
   1e4e8:	lsr	r1, r4, r1
   1e4ec:	add	r0, r0, r1, lsl #2
   1e4f0:	pop	{r4, r5, fp, pc}

0001e4f4 <flatcc_builder_create_table@@Base>:
   1e4f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e4f8:	add	fp, sp, #28
   1e4fc:	sub	sp, sp, #84	; 0x54
   1e500:	strh	r3, [fp, #-30]	; 0xffffffe2
   1e504:	ldr	r4, [fp, #12]
   1e508:	cmn	r4, #1
   1e50c:	ble	1e634 <flatcc_builder_create_table@@Base+0x140>
   1e510:	ldr	r8, [fp, #16]
   1e514:	tst	r8, #1
   1e518:	beq	1e654 <flatcc_builder_create_table@@Base+0x160>
   1e51c:	mov	sl, r2
   1e520:	mov	r6, r1
   1e524:	mov	r5, r0
   1e528:	sub	r0, fp, #30
   1e52c:	mov	r1, #4
   1e530:	bl	1de90 <flatcc_builder_start_vector@@Base+0x80>
   1e534:	ldrh	r7, [fp, #-30]	; 0xffffffe2
   1e538:	mov	r0, r5
   1e53c:	mov	r1, r7
   1e540:	bl	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>
   1e544:	mov	r0, r5
   1e548:	mov	r1, sl
   1e54c:	mov	r2, r7
   1e550:	bl	1d0a4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   1e554:	mov	r9, r0
   1e558:	add	r0, sl, r0
   1e55c:	str	r5, [sp]
   1e560:	ldr	r1, [r5, #136]	; 0x88
   1e564:	sub	r0, r1, r0
   1e568:	sub	r5, r0, #4
   1e56c:	sub	r0, r5, r8
   1e570:	add	r0, r0, #1
   1e574:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1e578:	str	r0, [fp, #-36]	; 0xffffffdc
   1e57c:	cmp	r4, #1
   1e580:	blt	1e5b0 <flatcc_builder_create_table@@Base+0xbc>
   1e584:	ldr	r7, [fp, #8]
   1e588:	mvn	r0, #3
   1e58c:	sub	r5, r0, r5
   1e590:	ldrh	r8, [r7], #2
   1e594:	ldr	r0, [r8, r6]
   1e598:	add	r0, r5, r0
   1e59c:	sub	r0, r0, r8
   1e5a0:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1e5a4:	str	r0, [r8, r6]
   1e5a8:	subs	r4, r4, #1
   1e5ac:	bne	1e590 <flatcc_builder_create_table@@Base+0x9c>
   1e5b0:	mov	r1, #4
   1e5b4:	str	r1, [sp, #16]
   1e5b8:	sub	r0, fp, #36	; 0x24
   1e5bc:	str	r0, [sp, #12]
   1e5c0:	str	r1, [sp, #4]
   1e5c4:	mov	r0, #1
   1e5c8:	str	r0, [sp, #8]
   1e5cc:	cmp	sl, #0
   1e5d0:	strne	sl, [sp, #24]
   1e5d4:	strne	r6, [sp, #20]
   1e5d8:	movne	r0, #2
   1e5dc:	strne	r0, [sp, #8]
   1e5e0:	addne	r0, sl, #4
   1e5e4:	strne	r0, [sp, #4]
   1e5e8:	cmp	r9, #0
   1e5ec:	ldr	r0, [sp]
   1e5f0:	beq	1e624 <flatcc_builder_create_table@@Base+0x130>
   1e5f4:	ldr	r2, [sp, #4]
   1e5f8:	ldr	r1, [sp, #8]
   1e5fc:	add	r2, r2, r9
   1e600:	str	r2, [sp, #4]
   1e604:	add	r2, sp, #4
   1e608:	add	r3, r2, r1, lsl #3
   1e60c:	movw	r2, #16892	; 0x41fc
   1e610:	movt	r2, #2
   1e614:	str	r2, [r3, #8]
   1e618:	str	r9, [r3, #12]
   1e61c:	add	r1, r1, #1
   1e620:	str	r1, [sp, #8]
   1e624:	add	r1, sp, #4
   1e628:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1e62c:	sub	sp, fp, #28
   1e630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e634:	movw	r0, #19306	; 0x4b6a
   1e638:	movt	r0, #2
   1e63c:	movw	r1, #17422	; 0x440e
   1e640:	movt	r1, #2
   1e644:	movw	r3, #19324	; 0x4b7c
   1e648:	movt	r3, #2
   1e64c:	movw	r2, #1237	; 0x4d5
   1e650:	bl	12bc4 <__assert_fail@plt>
   1e654:	movw	r0, #19480	; 0x4c18
   1e658:	movt	r0, #2
   1e65c:	movw	r1, #17422	; 0x440e
   1e660:	movt	r1, #2
   1e664:	movw	r3, #19324	; 0x4b7c
   1e668:	movt	r3, #2
   1e66c:	movw	r2, #1243	; 0x4db
   1e670:	bl	12bc4 <__assert_fail@plt>

0001e674 <flatcc_builder_check_required_field@@Base>:
   1e674:	push	{fp, lr}
   1e678:	mov	fp, sp
   1e67c:	ldr	r2, [r0, #32]
   1e680:	ldrh	r2, [r2, #14]
   1e684:	cmp	r2, #3
   1e688:	bne	1e6b8 <flatcc_builder_check_required_field@@Base+0x44>
   1e68c:	ldrh	r3, [r0, #8]
   1e690:	mov	r2, #0
   1e694:	cmp	r3, r1
   1e698:	bls	1e6b0 <flatcc_builder_check_required_field@@Base+0x3c>
   1e69c:	ldr	r0, [r0, #4]
   1e6a0:	add	r0, r0, r1, lsl #1
   1e6a4:	ldrh	r2, [r0]
   1e6a8:	cmp	r2, #0
   1e6ac:	movwne	r2, #1
   1e6b0:	mov	r0, r2
   1e6b4:	pop	{fp, pc}
   1e6b8:	movw	r0, #19491	; 0x4c23
   1e6bc:	movt	r0, #2
   1e6c0:	movw	r1, #17422	; 0x440e
   1e6c4:	movt	r1, #2
   1e6c8:	movw	r3, #19534	; 0x4c4e
   1e6cc:	movt	r3, #2
   1e6d0:	movw	r2, #1272	; 0x4f8
   1e6d4:	bl	12bc4 <__assert_fail@plt>

0001e6d8 <flatcc_builder_check_union_field@@Base>:
   1e6d8:	push	{fp, lr}
   1e6dc:	mov	fp, sp
   1e6e0:	mov	r2, r0
   1e6e4:	ldr	r0, [r0, #32]
   1e6e8:	ldrh	r0, [r0, #14]
   1e6ec:	cmp	r0, #3
   1e6f0:	bne	1e750 <flatcc_builder_check_union_field@@Base+0x78>
   1e6f4:	mov	r0, #0
   1e6f8:	cmp	r1, #0
   1e6fc:	beq	1e73c <flatcc_builder_check_union_field@@Base+0x64>
   1e700:	ldrh	r3, [r2, #8]
   1e704:	cmp	r3, r1
   1e708:	popls	{fp, pc}
   1e70c:	ldr	r0, [r2, #4]
   1e710:	add	r0, r0, r1, lsl #1
   1e714:	ldrh	r1, [r0, #-2]
   1e718:	cmp	r1, #0
   1e71c:	beq	1e740 <flatcc_builder_check_union_field@@Base+0x68>
   1e720:	ldr	r2, [r2, #16]
   1e724:	ldrb	r1, [r2, r1]
   1e728:	ldrh	r0, [r0]
   1e72c:	cmp	r1, #0
   1e730:	beq	1e744 <flatcc_builder_check_union_field@@Base+0x6c>
   1e734:	cmp	r0, #0
   1e738:	movwne	r0, #1
   1e73c:	pop	{fp, pc}
   1e740:	ldrh	r0, [r0]
   1e744:	clz	r0, r0
   1e748:	lsr	r0, r0, #5
   1e74c:	pop	{fp, pc}
   1e750:	movw	r0, #19491	; 0x4c23
   1e754:	movt	r0, #2
   1e758:	movw	r1, #17422	; 0x440e
   1e75c:	movt	r1, #2
   1e760:	movw	r3, #19617	; 0x4ca1
   1e764:	movt	r3, #2
   1e768:	movw	r2, #1279	; 0x4ff
   1e76c:	bl	12bc4 <__assert_fail@plt>

0001e770 <flatcc_builder_check_required@@Base>:
   1e770:	push	{fp, lr}
   1e774:	mov	fp, sp
   1e778:	mov	r3, r0
   1e77c:	ldr	r0, [r0, #32]
   1e780:	ldrh	r0, [r0, #14]
   1e784:	cmp	r0, #3
   1e788:	bne	1e7d0 <flatcc_builder_check_required@@Base+0x60>
   1e78c:	ldrh	ip, [r3, #8]
   1e790:	mov	r0, #0
   1e794:	cmp	ip, r2
   1e798:	poplt	{fp, pc}
   1e79c:	cmp	r2, #1
   1e7a0:	blt	1e7c8 <flatcc_builder_check_required@@Base+0x58>
   1e7a4:	ldr	ip, [r3, #4]
   1e7a8:	ldrh	r3, [r1]
   1e7ac:	add	r3, ip, r3, lsl #1
   1e7b0:	ldrh	r3, [r3]
   1e7b4:	cmp	r3, #0
   1e7b8:	beq	1e7cc <flatcc_builder_check_required@@Base+0x5c>
   1e7bc:	add	r1, r1, #2
   1e7c0:	subs	r2, r2, #1
   1e7c4:	bne	1e7a8 <flatcc_builder_check_required@@Base+0x38>
   1e7c8:	mov	r0, #1
   1e7cc:	pop	{fp, pc}
   1e7d0:	movw	r0, #19491	; 0x4c23
   1e7d4:	movt	r0, #2
   1e7d8:	movw	r1, #17422	; 0x440e
   1e7dc:	movt	r1, #2
   1e7e0:	movw	r3, #19697	; 0x4cf1
   1e7e4:	movt	r3, #2
   1e7e8:	movw	r2, #1297	; 0x511
   1e7ec:	bl	12bc4 <__assert_fail@plt>

0001e7f0 <flatcc_builder_end_table@@Base>:
   1e7f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e7f4:	add	fp, sp, #24
   1e7f8:	sub	sp, sp, #16
   1e7fc:	mov	r4, r0
   1e800:	ldr	r0, [r0, #32]
   1e804:	ldrh	r0, [r0, #14]
   1e808:	cmp	r0, #3
   1e80c:	bne	1e91c <flatcc_builder_end_table@@Base+0x12c>
   1e810:	ldrh	r0, [r4, #8]
   1e814:	mov	r1, #4
   1e818:	add	r0, r1, r0, lsl #1
   1e81c:	ldr	r6, [r4, #4]
   1e820:	strh	r0, [r6, #-4]!
   1e824:	ldrh	r1, [r4, #20]
   1e828:	add	r1, r1, #4
   1e82c:	strh	r1, [r6, #2]
   1e830:	uxth	r5, r0
   1e834:	ldr	r0, [r4, #12]
   1e838:	eor	r0, r0, r5
   1e83c:	movw	r2, #31153	; 0x79b1
   1e840:	movt	r2, #40503	; 0x9e37
   1e844:	mul	r0, r0, r2
   1e848:	uxth	r1, r1
   1e84c:	eor	r0, r0, r1
   1e850:	mul	r3, r0, r2
   1e854:	str	r3, [r4, #12]
   1e858:	mov	r0, r4
   1e85c:	mov	r1, r6
   1e860:	mov	r2, r5
   1e864:	bl	1e2b0 <flatcc_builder_create_cached_vtable@@Base>
   1e868:	cmp	r0, #0
   1e86c:	beq	1e90c <flatcc_builder_end_table@@Base+0x11c>
   1e870:	mov	r7, r0
   1e874:	mov	r8, #0
   1e878:	mov	r0, r6
   1e87c:	mov	r1, #0
   1e880:	mov	r2, r5
   1e884:	bl	12b64 <memset@plt>
   1e888:	ldrh	r3, [r4, #130]	; 0x82
   1e88c:	ldr	r0, [r4, #76]	; 0x4c
   1e890:	ldr	r6, [r4]
   1e894:	ldr	r1, [r4, #16]
   1e898:	ldr	r2, [r4, #20]
   1e89c:	ldr	r5, [r4, #32]
   1e8a0:	ldr	r5, [r5, #20]
   1e8a4:	add	r0, r0, r5
   1e8a8:	sub	r6, r6, r0
   1e8ac:	asr	r6, r6, #1
   1e8b0:	stm	sp, {r0, r6, r7}
   1e8b4:	mov	r0, r4
   1e8b8:	bl	1e4f4 <flatcc_builder_create_table@@Base>
   1e8bc:	cmp	r0, #0
   1e8c0:	beq	1e910 <flatcc_builder_end_table@@Base+0x120>
   1e8c4:	mov	r5, r0
   1e8c8:	ldr	r0, [r4, #32]
   1e8cc:	ldr	r1, [r4, #52]	; 0x34
   1e8d0:	ldr	r2, [r4, #76]	; 0x4c
   1e8d4:	ldr	r3, [r0, #24]
   1e8d8:	str	r3, [r4, #12]
   1e8dc:	ldrh	r3, [r0, #28]
   1e8e0:	strh	r3, [r4, #8]
   1e8e4:	ldr	r3, [r0, #16]
   1e8e8:	add	r1, r1, r3
   1e8ec:	str	r1, [r4, #4]
   1e8f0:	ldr	r0, [r0, #20]
   1e8f4:	add	r0, r2, r0
   1e8f8:	str	r0, [r4]
   1e8fc:	mov	r0, r4
   1e900:	bl	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1e904:	mov	r8, r5
   1e908:	b	1e910 <flatcc_builder_end_table@@Base+0x120>
   1e90c:	mov	r8, #0
   1e910:	mov	r0, r8
   1e914:	sub	sp, fp, #24
   1e918:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e91c:	movw	r0, #19491	; 0x4c23
   1e920:	movt	r0, #2
   1e924:	movw	r1, #17422	; 0x440e
   1e928:	movt	r1, #2
   1e92c:	movw	r3, #19787	; 0x4d4b
   1e930:	movt	r3, #2
   1e934:	movw	r2, #1317	; 0x525
   1e938:	bl	12bc4 <__assert_fail@plt>

0001e93c <flatcc_builder_create_vector@@Base>:
   1e93c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e940:	add	fp, sp, #24
   1e944:	sub	sp, sp, #80	; 0x50
   1e948:	mov	r4, r0
   1e94c:	ldr	r0, [fp, #8]
   1e950:	strh	r0, [fp, #-26]	; 0xffffffe6
   1e954:	ldr	r0, [fp, #12]
   1e958:	cmp	r2, r0
   1e95c:	bhi	1ea28 <flatcc_builder_create_vector@@Base+0xec>
   1e960:	mov	r6, r3
   1e964:	mov	r7, r2
   1e968:	mov	r8, r1
   1e96c:	sub	r0, fp, #26
   1e970:	mov	r9, #4
   1e974:	mov	r1, #4
   1e978:	bl	1de90 <flatcc_builder_start_vector@@Base+0x80>
   1e97c:	ldrh	r5, [fp, #-26]	; 0xffffffe6
   1e980:	mov	r0, r4
   1e984:	mov	r1, r5
   1e988:	bl	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>
   1e98c:	mov	r0, r7
   1e990:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1e994:	str	r7, [fp, #-32]	; 0xffffffe0
   1e998:	mul	r6, r6, r7
   1e99c:	mov	r0, r4
   1e9a0:	mov	r1, r6
   1e9a4:	mov	r2, r5
   1e9a8:	bl	1d0a4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   1e9ac:	str	r9, [sp, #12]
   1e9b0:	sub	r1, fp, #32
   1e9b4:	str	r1, [sp, #8]
   1e9b8:	str	r9, [sp]
   1e9bc:	mov	r1, #1
   1e9c0:	str	r1, [sp, #4]
   1e9c4:	cmp	r6, #0
   1e9c8:	strne	r6, [sp, #20]
   1e9cc:	strne	r8, [sp, #16]
   1e9d0:	movne	r1, #2
   1e9d4:	strne	r1, [sp, #4]
   1e9d8:	addne	r1, r6, #4
   1e9dc:	strne	r1, [sp]
   1e9e0:	cmp	r0, #0
   1e9e4:	beq	1ea14 <flatcc_builder_create_vector@@Base+0xd8>
   1e9e8:	ldm	sp, {r1, r2}
   1e9ec:	add	r1, r1, r0
   1e9f0:	str	r1, [sp]
   1e9f4:	mov	r1, sp
   1e9f8:	add	r1, r1, r2, lsl #3
   1e9fc:	movw	r3, #16892	; 0x41fc
   1ea00:	movt	r3, #2
   1ea04:	str	r3, [r1, #8]
   1ea08:	str	r0, [r1, #12]
   1ea0c:	add	r0, r2, #1
   1ea10:	str	r0, [sp, #4]
   1ea14:	mov	r1, sp
   1ea18:	mov	r0, r4
   1ea1c:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1ea20:	sub	sp, fp, #24
   1ea24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ea28:	movw	r0, #19853	; 0x4d8d
   1ea2c:	movt	r0, #2
   1ea30:	movw	r1, #17422	; 0x440e
   1ea34:	movt	r1, #2
   1ea38:	movw	r3, #19872	; 0x4da0
   1ea3c:	movt	r3, #2
   1ea40:	movw	r2, #1365	; 0x555
   1ea44:	bl	12bc4 <__assert_fail@plt>

0001ea48 <flatcc_builder_end_vector@@Base>:
   1ea48:	push	{r4, r5, fp, lr}
   1ea4c:	add	fp, sp, #8
   1ea50:	sub	sp, sp, #8
   1ea54:	mov	r4, r0
   1ea58:	ldr	r0, [r0, #32]
   1ea5c:	ldrh	r1, [r0, #14]
   1ea60:	cmp	r1, #4
   1ea64:	bne	1eaa8 <flatcc_builder_end_vector@@Base+0x60>
   1ea68:	ldr	r1, [r4, #16]
   1ea6c:	ldrh	r5, [r4, #130]	; 0x82
   1ea70:	ldr	r3, [r0, #16]
   1ea74:	ldr	r2, [r0, #20]
   1ea78:	ldr	r0, [r0, #24]
   1ea7c:	str	r5, [sp]
   1ea80:	str	r0, [sp, #4]
   1ea84:	mov	r0, r4
   1ea88:	bl	1e93c <flatcc_builder_create_vector@@Base>
   1ea8c:	mov	r5, r0
   1ea90:	cmp	r0, #0
   1ea94:	movne	r0, r4
   1ea98:	blne	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1ea9c:	mov	r0, r5
   1eaa0:	sub	sp, fp, #8
   1eaa4:	pop	{r4, r5, fp, pc}
   1eaa8:	movw	r0, #18225	; 0x4731
   1eaac:	movt	r0, #2
   1eab0:	movw	r1, #17422	; 0x440e
   1eab4:	movt	r1, #2
   1eab8:	movw	r3, #19990	; 0x4e16
   1eabc:	movt	r3, #2
   1eac0:	movw	r2, #1400	; 0x578
   1eac4:	bl	12bc4 <__assert_fail@plt>

0001eac8 <flatcc_builder_vector_count@@Base>:
   1eac8:	ldr	r0, [r0, #32]
   1eacc:	ldr	r0, [r0, #20]
   1ead0:	bx	lr

0001ead4 <flatcc_builder_vector_edit@@Base>:
   1ead4:	ldr	r0, [r0, #16]
   1ead8:	bx	lr

0001eadc <flatcc_builder_create_offset_vector_direct@@Base>:
   1eadc:	mov	r3, #0
   1eae0:	b	1eae4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   1eae4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1eae8:	add	fp, sp, #24
   1eaec:	sub	sp, sp, #80	; 0x50
   1eaf0:	mov	r8, r0
   1eaf4:	mov	r0, #0
   1eaf8:	cmn	r2, #-1073741823	; 0xc0000001
   1eafc:	bhi	1ec4c <flatcc_builder_create_offset_vector_direct@@Base+0x170>
   1eb00:	mov	r9, r3
   1eb04:	mov	r6, r2
   1eb08:	mov	r7, r1
   1eb0c:	mov	r5, #4
   1eb10:	mov	r0, r8
   1eb14:	mov	r1, #4
   1eb18:	bl	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>
   1eb1c:	mov	r0, r6
   1eb20:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1eb24:	str	r6, [fp, #-28]	; 0xffffffe4
   1eb28:	lsl	r4, r6, #2
   1eb2c:	mov	r0, r8
   1eb30:	mov	r1, r4
   1eb34:	mov	r2, #4
   1eb38:	bl	1d0a4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   1eb3c:	str	r5, [sp, #16]
   1eb40:	sub	r1, fp, #28
   1eb44:	str	r1, [sp, #12]
   1eb48:	str	r5, [sp, #4]
   1eb4c:	mov	r1, #1
   1eb50:	str	r1, [sp, #8]
   1eb54:	mov	r1, #0
   1eb58:	cmp	r1, r6, lsl #2
   1eb5c:	strne	r4, [sp, #24]
   1eb60:	strne	r7, [sp, #20]
   1eb64:	movne	r1, #2
   1eb68:	strne	r1, [sp, #8]
   1eb6c:	addne	r1, r4, #4
   1eb70:	strne	r1, [sp, #4]
   1eb74:	cmp	r0, #0
   1eb78:	beq	1eba8 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   1eb7c:	ldmib	sp, {r1, r2}
   1eb80:	add	r1, r1, r0
   1eb84:	str	r1, [sp, #4]
   1eb88:	add	r1, sp, #4
   1eb8c:	add	r1, r1, r2, lsl #3
   1eb90:	movw	r3, #16892	; 0x41fc
   1eb94:	movt	r3, #2
   1eb98:	str	r3, [r1, #8]
   1eb9c:	str	r0, [r1, #12]
   1eba0:	add	r0, r2, #1
   1eba4:	str	r0, [sp, #8]
   1eba8:	cmp	r6, #0
   1ebac:	beq	1ec40 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   1ebb0:	ldr	r0, [r8, #136]	; 0x88
   1ebb4:	ldr	r1, [sp, #4]
   1ebb8:	sub	r0, r1, r0
   1ebbc:	sub	r4, r0, #4
   1ebc0:	mov	r5, r9
   1ebc4:	b	1ebdc <flatcc_builder_create_offset_vector_direct@@Base+0x100>
   1ebc8:	sub	r4, r4, #4
   1ebcc:	add	r7, r7, #4
   1ebd0:	add	r5, r5, #1
   1ebd4:	subs	r6, r6, #1
   1ebd8:	beq	1ec40 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   1ebdc:	ldr	r0, [r7]
   1ebe0:	cmp	r0, #0
   1ebe4:	beq	1ec0c <flatcc_builder_create_offset_vector_direct@@Base+0x130>
   1ebe8:	add	r0, r4, r0
   1ebec:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1ebf0:	str	r0, [r7]
   1ebf4:	cmp	r9, #0
   1ebf8:	beq	1ebc8 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   1ebfc:	ldrb	r0, [r5]
   1ec00:	cmp	r0, #0
   1ec04:	bne	1ebc8 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   1ec08:	b	1ec54 <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   1ec0c:	cmp	r9, #0
   1ec10:	beq	1ec74 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   1ec14:	ldrb	r0, [r5]
   1ec18:	cmp	r0, #0
   1ec1c:	beq	1ebc8 <flatcc_builder_create_offset_vector_direct@@Base+0xec>
   1ec20:	movw	r0, #22073	; 0x5639
   1ec24:	movt	r0, #2
   1ec28:	movw	r1, #17422	; 0x440e
   1ec2c:	movt	r1, #2
   1ec30:	movw	r3, #21942	; 0x55b6
   1ec34:	movt	r3, #2
   1ec38:	movw	r2, #1461	; 0x5b5
   1ec3c:	bl	12bc4 <__assert_fail@plt>
   1ec40:	add	r1, sp, #4
   1ec44:	mov	r0, r8
   1ec48:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1ec4c:	sub	sp, fp, #24
   1ec50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ec54:	movw	r0, #21928	; 0x55a8
   1ec58:	movt	r0, #2
   1ec5c:	movw	r1, #17422	; 0x440e
   1ec60:	movt	r1, #2
   1ec64:	movw	r3, #21942	; 0x55b6
   1ec68:	movt	r3, #2
   1ec6c:	movw	r2, #1457	; 0x5b1
   1ec70:	bl	12bc4 <__assert_fail@plt>
   1ec74:	movw	r0, #21940	; 0x55b4
   1ec78:	movt	r0, #2
   1ec7c:	movw	r1, #17422	; 0x440e
   1ec80:	movt	r1, #2
   1ec84:	movw	r3, #21942	; 0x55b6
   1ec88:	movt	r3, #2
   1ec8c:	movw	r2, #1463	; 0x5b7
   1ec90:	bl	12bc4 <__assert_fail@plt>

0001ec94 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   1ec94:	push	{r4, r5, fp, lr}
   1ec98:	add	fp, sp, #8
   1ec9c:	mov	r3, r1
   1eca0:	mov	r4, r0
   1eca4:	ldr	r0, [r0, #32]
   1eca8:	ldrh	r1, [r0, #14]
   1ecac:	cmp	r1, #5
   1ecb0:	bne	1ecdc <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   1ecb4:	ldr	r2, [r0, #20]
   1ecb8:	ldr	r1, [r4, #16]
   1ecbc:	mov	r0, r4
   1ecc0:	bl	1eae4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   1ecc4:	mov	r5, r0
   1ecc8:	cmp	r0, #0
   1eccc:	movne	r0, r4
   1ecd0:	blne	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1ecd4:	mov	r0, r5
   1ecd8:	pop	{r4, r5, fp, pc}
   1ecdc:	movw	r0, #18474	; 0x482a
   1ece0:	movt	r0, #2
   1ece4:	movw	r1, #17422	; 0x440e
   1ece8:	movt	r1, #2
   1ecec:	movw	r3, #20131	; 0x4ea3
   1ecf0:	movt	r3, #2
   1ecf4:	movw	r2, #1493	; 0x5d5
   1ecf8:	bl	12bc4 <__assert_fail@plt>

0001ecfc <flatcc_builder_offset_vector_edit@@Base>:
   1ecfc:	ldr	r0, [r0, #16]
   1ed00:	bx	lr

0001ed04 <flatcc_builder_offset_vector_count@@Base>:
   1ed04:	ldr	r0, [r0, #32]
   1ed08:	ldr	r0, [r0, #20]
   1ed0c:	bx	lr

0001ed10 <flatcc_builder_table_add_union@@Base>:
   1ed10:	push	{r4, r5, r6, r7, fp, lr}
   1ed14:	add	fp, sp, #16
   1ed18:	mov	r5, r0
   1ed1c:	ldr	r0, [r0, #32]
   1ed20:	ldrh	r0, [r0, #14]
   1ed24:	cmp	r0, #3
   1ed28:	bne	1ed9c <flatcc_builder_table_add_union@@Base+0x8c>
   1ed2c:	mov	r7, r3
   1ed30:	mov	r6, r1
   1ed34:	uxtb	r4, r2
   1ed38:	cmp	r3, #0
   1ed3c:	beq	1ed48 <flatcc_builder_table_add_union@@Base+0x38>
   1ed40:	cmp	r4, #0
   1ed44:	beq	1edbc <flatcc_builder_table_add_union@@Base+0xac>
   1ed48:	cmp	r7, #0
   1ed4c:	beq	1ed68 <flatcc_builder_table_add_union@@Base+0x58>
   1ed50:	mov	r0, r5
   1ed54:	mov	r1, r6
   1ed58:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   1ed5c:	cmp	r0, #0
   1ed60:	beq	1edfc <flatcc_builder_table_add_union@@Base+0xec>
   1ed64:	str	r7, [r0]
   1ed68:	sub	r1, r6, #1
   1ed6c:	mov	r0, r5
   1ed70:	mov	r2, #1
   1ed74:	mov	r3, #1
   1ed78:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1ed7c:	cmp	r0, #0
   1ed80:	beq	1eddc <flatcc_builder_table_add_union@@Base+0xcc>
   1ed84:	mov	r5, r0
   1ed88:	mov	r0, r4
   1ed8c:	bl	1efc0 <flatcc_builder_table_add@@Base+0xe0>
   1ed90:	strb	r4, [r5]
   1ed94:	mov	r0, #0
   1ed98:	pop	{r4, r5, r6, r7, fp, pc}
   1ed9c:	movw	r0, #19491	; 0x4c23
   1eda0:	movt	r0, #2
   1eda4:	movw	r1, #17422	; 0x440e
   1eda8:	movt	r1, #2
   1edac:	movw	r3, #20245	; 0x4f15
   1edb0:	movt	r3, #2
   1edb4:	movw	r2, #1518	; 0x5ee
   1edb8:	bl	12bc4 <__assert_fail@plt>
   1edbc:	movw	r0, #20333	; 0x4f6d
   1edc0:	movt	r0, #2
   1edc4:	movw	r1, #17422	; 0x440e
   1edc8:	movt	r1, #2
   1edcc:	movw	r3, #20245	; 0x4f15
   1edd0:	movt	r3, #2
   1edd4:	movw	r2, #1519	; 0x5ef
   1edd8:	bl	12bc4 <__assert_fail@plt>
   1eddc:	movw	r0, #20377	; 0x4f99
   1ede0:	movt	r0, #2
   1ede4:	movw	r1, #17422	; 0x440e
   1ede8:	movt	r1, #2
   1edec:	movw	r3, #20245	; 0x4f15
   1edf0:	movt	r3, #2
   1edf4:	movw	r2, #1526	; 0x5f6
   1edf8:	bl	12bc4 <__assert_fail@plt>
   1edfc:	movw	r0, #20367	; 0x4f8f
   1ee00:	movt	r0, #2
   1ee04:	movw	r1, #17422	; 0x440e
   1ee08:	movt	r1, #2
   1ee0c:	movw	r3, #20245	; 0x4f15
   1ee10:	movt	r3, #2
   1ee14:	movw	r2, #1522	; 0x5f2
   1ee18:	bl	12bc4 <__assert_fail@plt>

0001ee1c <flatcc_builder_table_add_offset@@Base>:
   1ee1c:	push	{fp, lr}
   1ee20:	mov	fp, sp
   1ee24:	ldr	r2, [r0, #32]
   1ee28:	ldrh	r2, [r2, #14]
   1ee2c:	cmp	r2, #3
   1ee30:	bne	1ee80 <flatcc_builder_table_add_offset@@Base+0x64>
   1ee34:	movw	r2, #32765	; 0x7ffd
   1ee38:	cmp	r1, r2
   1ee3c:	bcs	1eea0 <flatcc_builder_table_add_offset@@Base+0x84>
   1ee40:	ldr	r2, [r0, #4]
   1ee44:	add	r2, r2, r1, lsl #1
   1ee48:	ldrh	r2, [r2]
   1ee4c:	cmp	r2, #0
   1ee50:	bne	1eec0 <flatcc_builder_table_add_offset@@Base+0xa4>
   1ee54:	ldr	r2, [r0, #12]
   1ee58:	eor	r2, r2, r1
   1ee5c:	movw	r3, #31153	; 0x79b1
   1ee60:	movt	r3, #40503	; 0x9e37
   1ee64:	mul	r2, r2, r3
   1ee68:	eor	r2, r2, #4
   1ee6c:	mul	r2, r2, r3
   1ee70:	str	r2, [r0, #12]
   1ee74:	uxth	r1, r1
   1ee78:	pop	{fp, lr}
   1ee7c:	b	1f7e8 <flatcc_builder_table_add_copy@@Base+0x40>
   1ee80:	movw	r0, #19491	; 0x4c23
   1ee84:	movt	r0, #2
   1ee88:	movw	r1, #17422	; 0x440e
   1ee8c:	movt	r1, #2
   1ee90:	movw	r3, #21271	; 0x5317
   1ee94:	movt	r3, #2
   1ee98:	movw	r2, #1811	; 0x713
   1ee9c:	bl	12bc4 <__assert_fail@plt>
   1eea0:	movw	r0, #21143	; 0x5297
   1eea4:	movt	r0, #2
   1eea8:	movw	r1, #17422	; 0x440e
   1eeac:	movt	r1, #2
   1eeb0:	movw	r3, #21271	; 0x5317
   1eeb4:	movt	r3, #2
   1eeb8:	movw	r2, #1812	; 0x714
   1eebc:	bl	12bc4 <__assert_fail@plt>
   1eec0:	movw	r0, #21940	; 0x55b4
   1eec4:	movt	r0, #2
   1eec8:	movw	r1, #17422	; 0x440e
   1eecc:	movt	r1, #2
   1eed0:	movw	r3, #21271	; 0x5317
   1eed4:	movt	r3, #2
   1eed8:	movw	r2, #1819	; 0x71b
   1eedc:	bl	12bc4 <__assert_fail@plt>

0001eee0 <flatcc_builder_table_add@@Base>:
   1eee0:	push	{fp, lr}
   1eee4:	mov	fp, sp
   1eee8:	mov	ip, r3
   1eeec:	ldr	r3, [r0, #32]
   1eef0:	ldrh	r3, [r3, #14]
   1eef4:	cmp	r3, #3
   1eef8:	bne	1ef60 <flatcc_builder_table_add@@Base+0x80>
   1eefc:	movw	r3, #32765	; 0x7ffd
   1ef00:	cmp	r1, r3
   1ef04:	bcs	1ef80 <flatcc_builder_table_add@@Base+0xa0>
   1ef08:	mov	lr, r2
   1ef0c:	ldrh	r3, [r0, #130]	; 0x82
   1ef10:	cmp	r3, ip
   1ef14:	strhcc	ip, [r0, #130]	; 0x82
   1ef18:	ldr	r3, [r0, #4]
   1ef1c:	add	r3, r3, r1, lsl #1
   1ef20:	ldrh	r3, [r3]
   1ef24:	cmp	r3, #0
   1ef28:	bne	1efa0 <flatcc_builder_table_add@@Base+0xc0>
   1ef2c:	ldr	r3, [r0, #12]
   1ef30:	eor	r3, r3, r1
   1ef34:	movw	r2, #31153	; 0x79b1
   1ef38:	movt	r2, #40503	; 0x9e37
   1ef3c:	mul	r3, r3, r2
   1ef40:	eor	r3, r3, lr
   1ef44:	mul	r2, r3, r2
   1ef48:	str	r2, [r0, #12]
   1ef4c:	uxth	r3, r1
   1ef50:	mov	r1, lr
   1ef54:	mov	r2, ip
   1ef58:	pop	{fp, lr}
   1ef5c:	b	1f6dc <flatcc_builder_string_len@@Base+0xc>
   1ef60:	movw	r0, #19491	; 0x4c23
   1ef64:	movt	r0, #2
   1ef68:	movw	r1, #17422	; 0x440e
   1ef6c:	movt	r1, #2
   1ef70:	movw	r3, #21069	; 0x524d
   1ef74:	movt	r3, #2
   1ef78:	movw	r2, #1773	; 0x6ed
   1ef7c:	bl	12bc4 <__assert_fail@plt>
   1ef80:	movw	r0, #21143	; 0x5297
   1ef84:	movt	r0, #2
   1ef88:	movw	r1, #17422	; 0x440e
   1ef8c:	movt	r1, #2
   1ef90:	movw	r3, #21069	; 0x524d
   1ef94:	movt	r3, #2
   1ef98:	movw	r2, #1774	; 0x6ee
   1ef9c:	bl	12bc4 <__assert_fail@plt>
   1efa0:	movw	r0, #21940	; 0x55b4
   1efa4:	movt	r0, #2
   1efa8:	movw	r1, #17422	; 0x440e
   1efac:	movt	r1, #2
   1efb0:	movw	r3, #21069	; 0x524d
   1efb4:	movt	r3, #2
   1efb8:	movw	r2, #1784	; 0x6f8
   1efbc:	bl	12bc4 <__assert_fail@plt>
   1efc0:	bx	lr

0001efc4 <flatcc_builder_table_add_union_vector@@Base>:
   1efc4:	push	{r4, r5, r6, r7, fp, lr}
   1efc8:	add	fp, sp, #16
   1efcc:	mov	r6, r0
   1efd0:	ldr	r0, [r0, #32]
   1efd4:	ldrh	r0, [r0, #14]
   1efd8:	cmp	r0, #3
   1efdc:	bne	1f048 <flatcc_builder_table_add_union_vector@@Base+0x84>
   1efe0:	mov	r4, r3
   1efe4:	mov	r7, r2
   1efe8:	mov	r5, r1
   1efec:	cmp	r2, #0
   1eff0:	mov	r0, r2
   1eff4:	movwne	r0, #1
   1eff8:	clz	r1, r3
   1effc:	lsr	r1, r1, #5
   1f000:	teq	r1, r0
   1f004:	beq	1f068 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   1f008:	cmp	r7, #0
   1f00c:	beq	1f040 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   1f010:	sub	r1, r5, #1
   1f014:	mov	r0, r6
   1f018:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   1f01c:	cmp	r0, #0
   1f020:	beq	1f088 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   1f024:	str	r7, [r0]
   1f028:	mov	r0, r6
   1f02c:	mov	r1, r5
   1f030:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   1f034:	cmp	r0, #0
   1f038:	beq	1f0a8 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   1f03c:	str	r4, [r0]
   1f040:	mov	r0, #0
   1f044:	pop	{r4, r5, r6, r7, fp, pc}
   1f048:	movw	r0, #19491	; 0x4c23
   1f04c:	movt	r0, #2
   1f050:	movw	r1, #17422	; 0x440e
   1f054:	movt	r1, #2
   1f058:	movw	r3, #20389	; 0x4fa5
   1f05c:	movt	r3, #2
   1f060:	mov	r2, #1536	; 0x600
   1f064:	bl	12bc4 <__assert_fail@plt>
   1f068:	movw	r0, #20488	; 0x5008
   1f06c:	movt	r0, #2
   1f070:	movw	r1, #17422	; 0x440e
   1f074:	movt	r1, #2
   1f078:	movw	r3, #20389	; 0x4fa5
   1f07c:	movt	r3, #2
   1f080:	movw	r2, #1537	; 0x601
   1f084:	bl	12bc4 <__assert_fail@plt>
   1f088:	movw	r0, #20367	; 0x4f8f
   1f08c:	movt	r0, #2
   1f090:	movw	r1, #17422	; 0x440e
   1f094:	movt	r1, #2
   1f098:	movw	r3, #20389	; 0x4fa5
   1f09c:	movt	r3, #2
   1f0a0:	movw	r2, #1540	; 0x604
   1f0a4:	bl	12bc4 <__assert_fail@plt>
   1f0a8:	movw	r0, #20367	; 0x4f8f
   1f0ac:	movt	r0, #2
   1f0b0:	movw	r1, #17422	; 0x440e
   1f0b4:	movt	r1, #2
   1f0b8:	movw	r3, #20389	; 0x4fa5
   1f0bc:	movt	r3, #2
   1f0c0:	movw	r2, #1544	; 0x608
   1f0c4:	bl	12bc4 <__assert_fail@plt>

0001f0c8 <flatcc_builder_create_union_vector@@Base>:
   1f0c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f0cc:	add	fp, sp, #24
   1f0d0:	sub	sp, sp, #16
   1f0d4:	mov	r7, r3
   1f0d8:	mov	r6, r2
   1f0dc:	mov	r4, r1
   1f0e0:	mov	r5, r0
   1f0e4:	mov	r0, #0
   1f0e8:	str	r0, [r5]
   1f0ec:	str	r0, [r5, #4]
   1f0f0:	mov	r0, r1
   1f0f4:	bl	1dea0 <flatcc_builder_start_offset_vector@@Base>
   1f0f8:	cmp	r0, #0
   1f0fc:	beq	1f108 <flatcc_builder_create_union_vector@@Base+0x40>
   1f100:	sub	sp, fp, #24
   1f104:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f108:	mov	r0, r4
   1f10c:	mov	r1, r7
   1f110:	bl	1d9ec <flatcc_builder_extend_offset_vector@@Base>
   1f114:	cmp	r0, #0
   1f118:	beq	1f100 <flatcc_builder_create_union_vector@@Base+0x38>
   1f11c:	mov	r0, r4
   1f120:	mov	r1, r7
   1f124:	bl	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1f128:	cmp	r0, #0
   1f12c:	beq	1f100 <flatcc_builder_create_union_vector@@Base+0x38>
   1f130:	mov	r8, r0
   1f134:	mov	r0, r4
   1f138:	bl	1ecfc <flatcc_builder_offset_vector_edit@@Base>
   1f13c:	mov	ip, r0
   1f140:	cmp	r7, #0
   1f144:	beq	1f174 <flatcc_builder_create_union_vector@@Base+0xac>
   1f148:	add	r0, r6, #4
   1f14c:	mov	r1, r8
   1f150:	mov	r2, ip
   1f154:	mov	r6, r7
   1f158:	ldrb	r3, [r0, #-4]
   1f15c:	strb	r3, [r1], #1
   1f160:	ldr	r3, [r0]
   1f164:	str	r3, [r2], #4
   1f168:	add	r0, r0, #8
   1f16c:	subs	r6, r6, #1
   1f170:	bne	1f158 <flatcc_builder_create_union_vector@@Base+0x90>
   1f174:	str	r7, [sp]
   1f178:	add	r0, sp, #8
   1f17c:	mov	r1, r4
   1f180:	mov	r2, r8
   1f184:	mov	r3, ip
   1f188:	bl	1f1a8 <flatcc_builder_create_union_vector_direct@@Base>
   1f18c:	ldr	r0, [sp, #8]
   1f190:	ldr	r1, [sp, #12]
   1f194:	stm	r5, {r0, r1}
   1f198:	mov	r0, r4
   1f19c:	bl	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1f1a0:	sub	sp, fp, #24
   1f1a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001f1a8 <flatcc_builder_create_union_vector_direct@@Base>:
   1f1a8:	push	{r4, r5, r6, r7, fp, lr}
   1f1ac:	add	fp, sp, #16
   1f1b0:	sub	sp, sp, #8
   1f1b4:	mov	r5, r2
   1f1b8:	mov	r6, r1
   1f1bc:	mov	r4, r0
   1f1c0:	mov	r0, #0
   1f1c4:	str	r0, [r4]
   1f1c8:	str	r0, [r4, #4]
   1f1cc:	ldr	r7, [fp, #8]
   1f1d0:	mov	r0, r1
   1f1d4:	mov	r1, r3
   1f1d8:	mov	r2, r7
   1f1dc:	mov	r3, r5
   1f1e0:	bl	1eae4 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   1f1e4:	str	r0, [r4, #4]
   1f1e8:	cmp	r0, #0
   1f1ec:	beq	1f218 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   1f1f0:	mvn	r0, #0
   1f1f4:	mov	r1, #1
   1f1f8:	str	r1, [sp]
   1f1fc:	str	r0, [sp, #4]
   1f200:	mov	r0, r6
   1f204:	mov	r1, r5
   1f208:	mov	r2, r7
   1f20c:	mov	r3, #1
   1f210:	bl	1e93c <flatcc_builder_create_vector@@Base>
   1f214:	str	r0, [r4]
   1f218:	sub	sp, fp, #16
   1f21c:	pop	{r4, r5, r6, r7, fp, pc}

0001f220 <flatcc_builder_start_union_vector@@Base>:
   1f220:	push	{r4, r5, fp, lr}
   1f224:	add	fp, sp, #8
   1f228:	mov	r4, r0
   1f22c:	mov	r1, #4
   1f230:	bl	1d4b4 <flatcc_builder_start_buffer@@Base+0xbc>
   1f234:	mvn	r5, #0
   1f238:	cmp	r0, #0
   1f23c:	beq	1f248 <flatcc_builder_start_union_vector@@Base+0x28>
   1f240:	mov	r0, r5
   1f244:	pop	{r4, r5, fp, pc}
   1f248:	ldr	r0, [r4, #32]
   1f24c:	mov	r1, #8
   1f250:	str	r1, [r0, #16]
   1f254:	ldr	r0, [r4, #32]
   1f258:	mov	r5, #0
   1f25c:	str	r5, [r0, #20]
   1f260:	ldr	r0, [r4, #32]
   1f264:	mov	r1, #7
   1f268:	strh	r1, [r0, #14]
   1f26c:	mov	r0, r4
   1f270:	mvn	r1, #3
   1f274:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1f278:	mov	r0, r5
   1f27c:	pop	{r4, r5, fp, pc}

0001f280 <flatcc_builder_end_union_vector@@Base>:
   1f280:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f284:	add	fp, sp, #24
   1f288:	sub	sp, sp, #16
   1f28c:	mov	r9, r0
   1f290:	mov	r0, #0
   1f294:	str	r0, [r9]
   1f298:	str	r0, [r9, #4]
   1f29c:	ldr	r0, [r1, #32]
   1f2a0:	ldrh	r0, [r0, #14]
   1f2a4:	cmp	r0, #7
   1f2a8:	bne	1f348 <flatcc_builder_end_union_vector@@Base+0xc8>
   1f2ac:	mov	r4, r1
   1f2b0:	mov	r0, r1
   1f2b4:	bl	1f368 <flatcc_builder_union_vector_count@@Base>
   1f2b8:	mov	r6, r0
   1f2bc:	add	r1, r0, r0, lsl #2
   1f2c0:	mov	r0, r4
   1f2c4:	bl	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1f2c8:	cmp	r0, #0
   1f2cc:	beq	1f340 <flatcc_builder_end_union_vector@@Base+0xc0>
   1f2d0:	mov	r7, r0
   1f2d4:	add	r8, r0, r6, lsl #2
   1f2d8:	mov	r0, r4
   1f2dc:	bl	1f374 <flatcc_builder_union_vector_edit@@Base>
   1f2e0:	cmp	r6, #0
   1f2e4:	beq	1f314 <flatcc_builder_end_union_vector@@Base+0x94>
   1f2e8:	add	r0, r0, #4
   1f2ec:	mov	r1, r8
   1f2f0:	mov	r2, r7
   1f2f4:	mov	r3, r6
   1f2f8:	ldrb	r5, [r0, #-4]
   1f2fc:	strb	r5, [r1], #1
   1f300:	ldr	r5, [r0]
   1f304:	str	r5, [r2], #4
   1f308:	add	r0, r0, #8
   1f30c:	subs	r3, r3, #1
   1f310:	bne	1f2f8 <flatcc_builder_end_union_vector@@Base+0x78>
   1f314:	str	r6, [sp]
   1f318:	add	r0, sp, #8
   1f31c:	mov	r1, r4
   1f320:	mov	r2, r8
   1f324:	mov	r3, r7
   1f328:	bl	1f1a8 <flatcc_builder_create_union_vector_direct@@Base>
   1f32c:	ldr	r0, [sp, #8]
   1f330:	ldr	r1, [sp, #12]
   1f334:	stm	r9, {r0, r1}
   1f338:	mov	r0, r4
   1f33c:	bl	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1f340:	sub	sp, fp, #24
   1f344:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f348:	movw	r0, #20528	; 0x5030
   1f34c:	movt	r0, #2
   1f350:	movw	r1, #17422	; 0x440e
   1f354:	movt	r1, #2
   1f358:	movw	r3, #20578	; 0x5062
   1f35c:	movt	r3, #2
   1f360:	movw	r2, #1617	; 0x651
   1f364:	bl	12bc4 <__assert_fail@plt>

0001f368 <flatcc_builder_union_vector_count@@Base>:
   1f368:	ldr	r0, [r0, #32]
   1f36c:	ldr	r0, [r0, #20]
   1f370:	bx	lr

0001f374 <flatcc_builder_union_vector_edit@@Base>:
   1f374:	ldr	r0, [r0, #16]
   1f378:	bx	lr

0001f37c <flatcc_builder_extend_union_vector@@Base>:
   1f37c:	push	{r4, r5, fp, lr}
   1f380:	add	fp, sp, #8
   1f384:	mov	r5, r1
   1f388:	mov	r4, r0
   1f38c:	mvn	r2, #-536870912	; 0xe0000000
   1f390:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1f394:	cmp	r0, #0
   1f398:	movne	r0, #0
   1f39c:	popne	{r4, r5, fp, pc}
   1f3a0:	lsl	r1, r5, #3
   1f3a4:	mov	r0, r4
   1f3a8:	pop	{r4, r5, fp, lr}
   1f3ac:	b	1d764 <flatcc_builder_start_struct@@Base+0x84>

0001f3b0 <flatcc_builder_truncate_union_vector@@Base>:
   1f3b0:	push	{fp, lr}
   1f3b4:	mov	fp, sp
   1f3b8:	ldr	r2, [r0, #32]
   1f3bc:	ldrh	r3, [r2, #14]
   1f3c0:	cmp	r3, #7
   1f3c4:	bne	1f3f4 <flatcc_builder_truncate_union_vector@@Base+0x44>
   1f3c8:	ldr	r3, [r2, #20]
   1f3cc:	cmp	r3, r1
   1f3d0:	bcc	1f414 <flatcc_builder_truncate_union_vector@@Base+0x64>
   1f3d4:	sub	r3, r3, r1
   1f3d8:	str	r3, [r2, #20]
   1f3dc:	ldr	r2, [r0, #32]
   1f3e0:	ldr	r2, [r2, #16]
   1f3e4:	mul	r1, r2, r1
   1f3e8:	bl	1dcf4 <flatcc_builder_truncate_vector@@Base+0x84>
   1f3ec:	mov	r0, #0
   1f3f0:	pop	{fp, pc}
   1f3f4:	movw	r0, #20528	; 0x5030
   1f3f8:	movt	r0, #2
   1f3fc:	movw	r1, #17422	; 0x440e
   1f400:	movt	r1, #2
   1f404:	movw	r3, #20661	; 0x50b5
   1f408:	movt	r3, #2
   1f40c:	movw	r2, #1665	; 0x681
   1f410:	bl	12bc4 <__assert_fail@plt>
   1f414:	movw	r0, #19092	; 0x4a94
   1f418:	movt	r0, #2
   1f41c:	movw	r1, #17422	; 0x440e
   1f420:	movt	r1, #2
   1f424:	movw	r3, #20661	; 0x50b5
   1f428:	movt	r3, #2
   1f42c:	movw	r2, #1666	; 0x682
   1f430:	bl	12bc4 <__assert_fail@plt>

0001f434 <flatcc_builder_union_vector_push@@Base>:
   1f434:	push	{r4, r5, r6, sl, fp, lr}
   1f438:	add	fp, sp, #16
   1f43c:	mov	r4, r2
   1f440:	mov	r5, r1
   1f444:	ldr	r1, [r0, #32]
   1f448:	ldrh	r2, [r1, #14]
   1f44c:	cmp	r2, #7
   1f450:	bne	1f48c <flatcc_builder_union_vector_push@@Base+0x58>
   1f454:	ldr	r2, [r1, #20]
   1f458:	mov	r6, #0
   1f45c:	cmn	r2, #-536870911	; 0xe0000001
   1f460:	beq	1f484 <flatcc_builder_union_vector_push@@Base+0x50>
   1f464:	add	r2, r2, #1
   1f468:	str	r2, [r1, #20]
   1f46c:	mov	r1, #8
   1f470:	bl	1d764 <flatcc_builder_start_struct@@Base+0x84>
   1f474:	cmp	r0, #0
   1f478:	strne	r5, [r0]
   1f47c:	strne	r4, [r0, #4]
   1f480:	movne	r6, r0
   1f484:	mov	r0, r6
   1f488:	pop	{r4, r5, r6, sl, fp, pc}
   1f48c:	movw	r0, #20528	; 0x5030
   1f490:	movt	r0, #2
   1f494:	movw	r1, #17422	; 0x440e
   1f498:	movt	r1, #2
   1f49c:	movw	r3, #20730	; 0x50fa
   1f4a0:	movt	r3, #2
   1f4a4:	movw	r2, #1677	; 0x68d
   1f4a8:	bl	12bc4 <__assert_fail@plt>

0001f4ac <flatcc_builder_append_union_vector@@Base>:
   1f4ac:	push	{r4, r5, r6, sl, fp, lr}
   1f4b0:	add	fp, sp, #16
   1f4b4:	mov	r6, r0
   1f4b8:	ldr	r0, [r0, #32]
   1f4bc:	ldrh	r0, [r0, #14]
   1f4c0:	cmp	r0, #7
   1f4c4:	bne	1f504 <flatcc_builder_append_union_vector@@Base+0x58>
   1f4c8:	mov	r5, r2
   1f4cc:	mov	r4, r1
   1f4d0:	mov	r0, r6
   1f4d4:	mov	r1, r2
   1f4d8:	mvn	r2, #-536870912	; 0xe0000000
   1f4dc:	bl	1d868 <flatcc_builder_extend_vector@@Base+0x44>
   1f4e0:	cmp	r0, #0
   1f4e4:	beq	1f4f0 <flatcc_builder_append_union_vector@@Base+0x44>
   1f4e8:	mov	r0, #0
   1f4ec:	pop	{r4, r5, r6, sl, fp, pc}
   1f4f0:	lsl	r2, r5, #3
   1f4f4:	mov	r0, r6
   1f4f8:	mov	r1, r4
   1f4fc:	pop	{r4, r5, r6, sl, fp, lr}
   1f500:	b	1d930 <flatcc_builder_vector_push@@Base+0x80>
   1f504:	movw	r0, #20528	; 0x5030
   1f508:	movt	r0, #2
   1f50c:	movw	r1, #17422	; 0x440e
   1f510:	movt	r1, #2
   1f514:	movw	r3, #20839	; 0x5167
   1f518:	movt	r3, #2
   1f51c:	movw	r2, #1692	; 0x69c
   1f520:	bl	12bc4 <__assert_fail@plt>

0001f524 <flatcc_builder_create_string@@Base>:
   1f524:	push	{r4, r5, r6, r7, fp, lr}
   1f528:	add	fp, sp, #16
   1f52c:	sub	sp, sp, #80	; 0x50
   1f530:	mov	r5, r2
   1f534:	mov	r6, r1
   1f538:	mov	r4, r0
   1f53c:	mov	r0, r2
   1f540:	bl	1d0b8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1f544:	str	r5, [fp, #-20]	; 0xffffffec
   1f548:	add	r1, r5, #1
   1f54c:	mov	r7, #4
   1f550:	mov	r0, r4
   1f554:	mov	r2, #4
   1f558:	bl	1d0a4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   1f55c:	str	r7, [sp, #16]
   1f560:	sub	r1, fp, #20
   1f564:	str	r1, [sp, #12]
   1f568:	str	r7, [sp, #4]
   1f56c:	mov	r1, #1
   1f570:	str	r1, [sp, #8]
   1f574:	add	r0, r0, #1
   1f578:	cmp	r5, #0
   1f57c:	strne	r5, [sp, #24]
   1f580:	strne	r6, [sp, #20]
   1f584:	movne	r1, #2
   1f588:	strne	r1, [sp, #8]
   1f58c:	addne	r1, r5, #4
   1f590:	strne	r1, [sp, #4]
   1f594:	cmp	r0, #0
   1f598:	beq	1f5c8 <flatcc_builder_create_string@@Base+0xa4>
   1f59c:	ldmib	sp, {r1, r2}
   1f5a0:	add	r1, r1, r0
   1f5a4:	str	r1, [sp, #4]
   1f5a8:	add	r1, sp, #4
   1f5ac:	add	r1, r1, r2, lsl #3
   1f5b0:	movw	r3, #16892	; 0x41fc
   1f5b4:	movt	r3, #2
   1f5b8:	str	r3, [r1, #8]
   1f5bc:	str	r0, [r1, #12]
   1f5c0:	add	r0, r2, #1
   1f5c4:	str	r0, [sp, #8]
   1f5c8:	add	r1, sp, #4
   1f5cc:	mov	r0, r4
   1f5d0:	bl	1d0bc <flatcc_builder_embed_buffer@@Base+0x1e0>
   1f5d4:	sub	sp, fp, #16
   1f5d8:	pop	{r4, r5, r6, r7, fp, pc}

0001f5dc <flatcc_builder_create_string_str@@Base>:
   1f5dc:	push	{r4, r5, fp, lr}
   1f5e0:	add	fp, sp, #8
   1f5e4:	mov	r4, r1
   1f5e8:	mov	r5, r0
   1f5ec:	mov	r0, r1
   1f5f0:	bl	12b40 <strlen@plt>
   1f5f4:	mov	r2, r0
   1f5f8:	mov	r0, r5
   1f5fc:	mov	r1, r4
   1f600:	pop	{r4, r5, fp, lr}
   1f604:	b	1f524 <flatcc_builder_create_string@@Base>

0001f608 <flatcc_builder_create_string_strn@@Base>:
   1f608:	push	{r4, r5, fp, lr}
   1f60c:	add	fp, sp, #8
   1f610:	mov	r4, r1
   1f614:	mov	r5, r0
   1f618:	mov	r0, r1
   1f61c:	mov	r1, r2
   1f620:	bl	1dc44 <flatcc_builder_append_string_strn@@Base+0x30>
   1f624:	mov	r2, r0
   1f628:	mov	r0, r5
   1f62c:	mov	r1, r4
   1f630:	pop	{r4, r5, fp, lr}
   1f634:	b	1f524 <flatcc_builder_create_string@@Base>

0001f638 <flatcc_builder_end_string@@Base>:
   1f638:	push	{r4, r5, fp, lr}
   1f63c:	add	fp, sp, #8
   1f640:	mov	r4, r0
   1f644:	ldr	r0, [r0, #32]
   1f648:	ldrh	r1, [r0, #14]
   1f64c:	cmp	r1, #6
   1f650:	bne	1f688 <flatcc_builder_end_string@@Base+0x50>
   1f654:	ldr	r2, [r4, #20]
   1f658:	ldr	r0, [r0, #20]
   1f65c:	cmp	r0, r2
   1f660:	bne	1f6a8 <flatcc_builder_end_string@@Base+0x70>
   1f664:	ldr	r1, [r4, #16]
   1f668:	mov	r0, r4
   1f66c:	bl	1f524 <flatcc_builder_create_string@@Base>
   1f670:	mov	r5, r0
   1f674:	cmp	r0, #0
   1f678:	movne	r0, r4
   1f67c:	blne	1d674 <flatcc_builder_end_buffer@@Base+0xc8>
   1f680:	mov	r0, r5
   1f684:	pop	{r4, r5, fp, pc}
   1f688:	movw	r0, #18739	; 0x4933
   1f68c:	movt	r0, #2
   1f690:	movw	r1, #17422	; 0x440e
   1f694:	movt	r1, #2
   1f698:	movw	r3, #20966	; 0x51e6
   1f69c:	movt	r3, #2
   1f6a0:	movw	r2, #1732	; 0x6c4
   1f6a4:	bl	12bc4 <__assert_fail@plt>
   1f6a8:	movw	r0, #21033	; 0x5229
   1f6ac:	movt	r0, #2
   1f6b0:	movw	r1, #17422	; 0x440e
   1f6b4:	movt	r1, #2
   1f6b8:	movw	r3, #20966	; 0x51e6
   1f6bc:	movt	r3, #2
   1f6c0:	movw	r2, #1733	; 0x6c5
   1f6c4:	bl	12bc4 <__assert_fail@plt>

0001f6c8 <flatcc_builder_string_edit@@Base>:
   1f6c8:	ldr	r0, [r0, #16]
   1f6cc:	bx	lr

0001f6d0 <flatcc_builder_string_len@@Base>:
   1f6d0:	ldr	r0, [r0, #32]
   1f6d4:	ldr	r0, [r0, #20]
   1f6d8:	bx	lr
   1f6dc:	push	{r4, r5, r6, sl, fp, lr}
   1f6e0:	add	fp, sp, #16
   1f6e4:	mov	r5, r3
   1f6e8:	mov	r4, r0
   1f6ec:	ldr	r0, [r0, #20]
   1f6f0:	ldr	r3, [r4, #24]
   1f6f4:	add	r0, r2, r0
   1f6f8:	sub	r0, r0, #1
   1f6fc:	rsb	r2, r2, #0
   1f700:	and	r6, r0, r2
   1f704:	add	r0, r6, r1
   1f708:	str	r0, [r4, #20]
   1f70c:	cmp	r0, r3
   1f710:	bcc	1f734 <flatcc_builder_string_len@@Base+0x64>
   1f714:	add	r1, r0, #1
   1f718:	mov	r0, r4
   1f71c:	movw	r2, #65532	; 0xfffc
   1f720:	bl	1fb80 <flatcc_builder_get_emit_context@@Base+0x18>
   1f724:	mov	r1, r0
   1f728:	mov	r0, #0
   1f72c:	cmp	r1, #0
   1f730:	popne	{r4, r5, r6, sl, fp, pc}
   1f734:	ldr	r0, [r4, #4]
   1f738:	add	r0, r0, r5, lsl #1
   1f73c:	add	r1, r6, #4
   1f740:	strh	r1, [r0]
   1f744:	ldrh	r0, [r4, #8]
   1f748:	cmp	r0, r5
   1f74c:	addls	r0, r5, #1
   1f750:	strhls	r0, [r4, #8]
   1f754:	ldr	r0, [r4, #16]
   1f758:	add	r0, r0, r6
   1f75c:	pop	{r4, r5, r6, sl, fp, pc}

0001f760 <flatcc_builder_table_edit@@Base>:
   1f760:	push	{fp, lr}
   1f764:	mov	fp, sp
   1f768:	ldr	r2, [r0, #32]
   1f76c:	ldrh	r2, [r2, #14]
   1f770:	cmp	r2, #3
   1f774:	ldreq	r2, [r0, #16]
   1f778:	ldreq	r0, [r0, #20]
   1f77c:	addeq	r0, r2, r0
   1f780:	subeq	r0, r0, r1
   1f784:	popeq	{fp, pc}
   1f788:	movw	r0, #19491	; 0x4c23
   1f78c:	movt	r0, #2
   1f790:	movw	r1, #17422	; 0x440e
   1f794:	movt	r1, #2
   1f798:	movw	r3, #21211	; 0x52db
   1f79c:	movt	r3, #2
   1f7a0:	movw	r2, #1794	; 0x702
   1f7a4:	bl	12bc4 <__assert_fail@plt>

0001f7a8 <flatcc_builder_table_add_copy@@Base>:
   1f7a8:	push	{r4, r5, r6, sl, fp, lr}
   1f7ac:	add	fp, sp, #16
   1f7b0:	mov	r4, r3
   1f7b4:	mov	r5, r2
   1f7b8:	ldr	r3, [fp, #8]
   1f7bc:	mov	r2, r4
   1f7c0:	bl	1eee0 <flatcc_builder_table_add@@Base>
   1f7c4:	mov	r6, r0
   1f7c8:	cmp	r0, #0
   1f7cc:	beq	1f7e0 <flatcc_builder_table_add_copy@@Base+0x38>
   1f7d0:	mov	r0, r6
   1f7d4:	mov	r1, r5
   1f7d8:	mov	r2, r4
   1f7dc:	bl	12ab0 <memcpy@plt>
   1f7e0:	mov	r0, r6
   1f7e4:	pop	{r4, r5, r6, sl, fp, pc}
   1f7e8:	push	{r4, r5, r6, r7, fp, lr}
   1f7ec:	add	fp, sp, #16
   1f7f0:	mov	r5, r1
   1f7f4:	mov	r4, r0
   1f7f8:	ldr	r0, [r0, #20]
   1f7fc:	ldr	r1, [r4, #24]
   1f800:	add	r0, r0, #3
   1f804:	bic	r7, r0, #3
   1f808:	add	r6, r7, #4
   1f80c:	str	r6, [r4, #20]
   1f810:	cmp	r6, r1
   1f814:	bls	1f838 <flatcc_builder_table_add_copy@@Base+0x90>
   1f818:	mov	r0, r4
   1f81c:	mov	r1, r6
   1f820:	movw	r2, #65532	; 0xfffc
   1f824:	bl	1fb80 <flatcc_builder_get_emit_context@@Base+0x18>
   1f828:	mov	r1, r0
   1f82c:	mov	r0, #0
   1f830:	cmp	r1, #0
   1f834:	popne	{r4, r5, r6, r7, fp, pc}
   1f838:	ldr	r0, [r4, #4]
   1f83c:	add	r0, r0, r5, lsl #1
   1f840:	strh	r6, [r0]
   1f844:	ldrh	r0, [r4, #8]
   1f848:	cmp	r0, r5
   1f84c:	addls	r0, r5, #1
   1f850:	strhls	r0, [r4, #8]
   1f854:	ldr	r0, [r4]
   1f858:	add	r1, r0, #2
   1f85c:	str	r1, [r4]
   1f860:	strh	r7, [r0]
   1f864:	ldr	r0, [r4, #16]
   1f868:	add	r0, r0, r7
   1f86c:	pop	{r4, r5, r6, r7, fp, pc}

0001f870 <flatcc_builder_push_buffer_alignment@@Base>:
   1f870:	ldrh	r1, [r0, #128]	; 0x80
   1f874:	mov	r2, #4
   1f878:	strh	r2, [r0, #128]	; 0x80
   1f87c:	mov	r0, r1
   1f880:	bx	lr

0001f884 <flatcc_builder_pop_buffer_alignment@@Base>:
   1f884:	b	1d31c <flatcc_builder_create_buffer@@Base+0x1cc>

0001f888 <flatcc_builder_get_buffer_alignment@@Base>:
   1f888:	ldrh	r0, [r0, #128]	; 0x80
   1f88c:	bx	lr

0001f890 <flatcc_builder_set_vtable_clustering@@Base>:
   1f890:	clz	r1, r1
   1f894:	lsr	r1, r1, #5
   1f898:	str	r1, [r0, #180]	; 0xb4
   1f89c:	bx	lr

0001f8a0 <flatcc_builder_set_block_align@@Base>:
   1f8a0:	strh	r1, [r0, #132]	; 0x84
   1f8a4:	bx	lr

0001f8a8 <flatcc_builder_get_level@@Base>:
   1f8a8:	ldr	r0, [r0, #156]	; 0x9c
   1f8ac:	bx	lr

0001f8b0 <flatcc_builder_set_max_level@@Base>:
   1f8b0:	str	r1, [r0, #176]	; 0xb0
   1f8b4:	ldr	r2, [r0, #160]	; 0xa0
   1f8b8:	cmp	r2, r1
   1f8bc:	strlt	r1, [r0, #160]	; 0xa0
   1f8c0:	bx	lr

0001f8c4 <flatcc_builder_get_buffer_size@@Base>:
   1f8c4:	ldr	r1, [r0, #136]	; 0x88
   1f8c8:	ldr	r0, [r0, #140]	; 0x8c
   1f8cc:	sub	r0, r0, r1
   1f8d0:	bx	lr

0001f8d4 <flatcc_builder_get_buffer_start@@Base>:
   1f8d4:	ldr	r0, [r0, #136]	; 0x88
   1f8d8:	bx	lr

0001f8dc <flatcc_builder_get_buffer_end@@Base>:
   1f8dc:	ldr	r0, [r0, #140]	; 0x8c
   1f8e0:	bx	lr

0001f8e4 <flatcc_builder_set_vtable_cache_limit@@Base>:
   1f8e4:	str	r1, [r0, #172]	; 0xac
   1f8e8:	bx	lr

0001f8ec <flatcc_builder_set_identifier@@Base>:
   1f8ec:	movw	r2, #16892	; 0x41fc
   1f8f0:	movt	r2, #2
   1f8f4:	cmp	r1, #0
   1f8f8:	movne	r2, r1
   1f8fc:	ldr	r1, [r2]
   1f900:	str	r1, [r0, #168]	; 0xa8
   1f904:	bx	lr

0001f908 <flatcc_builder_get_type@@Base>:
   1f908:	ldr	r0, [r0, #32]
   1f90c:	cmp	r0, #0
   1f910:	ldrhne	r0, [r0, #14]
   1f914:	moveq	r0, #0
   1f918:	bx	lr

0001f91c <flatcc_builder_get_type_at@@Base>:
   1f91c:	mov	r2, r0
   1f920:	mov	r0, #0
   1f924:	cmp	r1, #1
   1f928:	blt	1f94c <flatcc_builder_get_type_at@@Base+0x30>
   1f92c:	ldr	r3, [r2, #156]	; 0x9c
   1f930:	cmp	r3, r1
   1f934:	bxlt	lr
   1f938:	sub	r0, r1, r3
   1f93c:	add	r0, r0, r0, lsl #3
   1f940:	ldr	r1, [r2, #32]
   1f944:	add	r0, r1, r0, lsl #2
   1f948:	ldrh	r0, [r0, #14]
   1f94c:	bx	lr

0001f950 <flatcc_builder_get_direct_buffer@@Base>:
   1f950:	ldr	r2, [r0, #184]	; 0xb8
   1f954:	cmp	r2, #0
   1f958:	beq	1f964 <flatcc_builder_get_direct_buffer@@Base+0x14>
   1f95c:	add	r0, r0, #188	; 0xbc
   1f960:	b	1f978 <flatcc_builder_get_direct_buffer@@Base+0x28>
   1f964:	cmp	r1, #0
   1f968:	movne	r0, #0
   1f96c:	strne	r0, [r1]
   1f970:	mov	r0, #0
   1f974:	bx	lr
   1f978:	ldm	r0, {r2, r3}
   1f97c:	cmp	r2, r3
   1f980:	beq	1f994 <flatcc_builder_get_direct_buffer@@Base+0x44>
   1f984:	mov	r0, #0
   1f988:	cmp	r1, #0
   1f98c:	strne	r0, [r1]
   1f990:	bx	lr
   1f994:	cmp	r1, #0
   1f998:	ldrne	r2, [r0, #24]
   1f99c:	strne	r2, [r1]
   1f9a0:	ldr	r0, [r0, #8]
   1f9a4:	bx	lr

0001f9a8 <flatcc_builder_copy_buffer@@Base>:
   1f9a8:	push	{fp, lr}
   1f9ac:	mov	fp, sp
   1f9b0:	ldr	r3, [r0, #184]	; 0xb8
   1f9b4:	cmp	r3, #0
   1f9b8:	beq	1f9ec <flatcc_builder_copy_buffer@@Base+0x44>
   1f9bc:	add	r0, r0, #188	; 0xbc
   1f9c0:	bl	200b8 <flatcc_emitter_copy_buffer@@Base>
   1f9c4:	cmp	r0, #0
   1f9c8:	popne	{fp, pc}
   1f9cc:	movw	r0, #18018	; 0x4662
   1f9d0:	movt	r0, #2
   1f9d4:	movw	r1, #17422	; 0x440e
   1f9d8:	movt	r1, #2
   1f9dc:	movw	r3, #21350	; 0x5366
   1f9e0:	movt	r3, #2
   1f9e4:	movw	r2, #1926	; 0x786
   1f9e8:	bl	12bc4 <__assert_fail@plt>
   1f9ec:	mov	r0, #0
   1f9f0:	pop	{fp, pc}

0001f9f4 <flatcc_builder_finalize_buffer@@Base>:
   1f9f4:	push	{r4, r5, r6, sl, fp, lr}
   1f9f8:	add	fp, sp, #16
   1f9fc:	mov	r6, r1
   1fa00:	mov	r4, r0
   1fa04:	bl	1f8c4 <flatcc_builder_get_buffer_size@@Base>
   1fa08:	mov	r5, r0
   1fa0c:	cmp	r6, #0
   1fa10:	strne	r5, [r6]
   1fa14:	mov	r0, r5
   1fa18:	bl	12b04 <malloc@plt>
   1fa1c:	cmp	r0, #0
   1fa20:	beq	1fa64 <flatcc_builder_finalize_buffer@@Base+0x70>
   1fa24:	mov	r6, r0
   1fa28:	mov	r0, r4
   1fa2c:	mov	r1, r6
   1fa30:	mov	r2, r5
   1fa34:	bl	1f9a8 <flatcc_builder_copy_buffer@@Base>
   1fa38:	cmp	r0, #0
   1fa3c:	movne	r0, r6
   1fa40:	popne	{r4, r5, r6, sl, fp, pc}
   1fa44:	movw	r0, #21940	; 0x55b4
   1fa48:	movt	r0, #2
   1fa4c:	movw	r1, #17422	; 0x440e
   1fa50:	movt	r1, #2
   1fa54:	movw	r3, #21419	; 0x53ab
   1fa58:	movt	r3, #2
   1fa5c:	movw	r2, #1948	; 0x79c
   1fa60:	bl	12bc4 <__assert_fail@plt>
   1fa64:	movw	r0, #21940	; 0x55b4
   1fa68:	movt	r0, #2
   1fa6c:	movw	r1, #17422	; 0x440e
   1fa70:	movt	r1, #2
   1fa74:	movw	r3, #21419	; 0x53ab
   1fa78:	movt	r3, #2
   1fa7c:	movw	r2, #1944	; 0x798
   1fa80:	bl	12bc4 <__assert_fail@plt>

0001fa84 <flatcc_builder_finalize_aligned_buffer@@Base>:
   1fa84:	push	{r4, r5, r6, r7, fp, lr}
   1fa88:	add	fp, sp, #16
   1fa8c:	mov	r4, r1
   1fa90:	mov	r5, r0
   1fa94:	bl	1f8c4 <flatcc_builder_get_buffer_size@@Base>
   1fa98:	mov	r6, r0
   1fa9c:	cmp	r4, #0
   1faa0:	strne	r6, [r4]
   1faa4:	mov	r0, r5
   1faa8:	bl	1f888 <flatcc_builder_get_buffer_alignment@@Base>
   1faac:	add	r1, r6, r0
   1fab0:	sub	r1, r1, #1
   1fab4:	rsb	r2, r0, #0
   1fab8:	and	r7, r1, r2
   1fabc:	mov	r1, r7
   1fac0:	bl	1fb0c <flatcc_builder_finalize_aligned_buffer@@Base+0x88>
   1fac4:	cmp	r0, #0
   1fac8:	beq	1faf8 <flatcc_builder_finalize_aligned_buffer@@Base+0x74>
   1facc:	mov	r6, r0
   1fad0:	mov	r0, r5
   1fad4:	mov	r1, r6
   1fad8:	mov	r2, r7
   1fadc:	bl	1f9a8 <flatcc_builder_copy_buffer@@Base>
   1fae0:	cmp	r0, #0
   1fae4:	beq	1faf0 <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
   1fae8:	mov	r0, r6
   1faec:	pop	{r4, r5, r6, r7, fp, pc}
   1faf0:	mov	r0, r6
   1faf4:	bl	12aa4 <free@plt>
   1faf8:	mov	r6, #0
   1fafc:	cmp	r4, #0
   1fb00:	strne	r6, [r4]
   1fb04:	mov	r0, r6
   1fb08:	pop	{r4, r5, r6, r7, fp, pc}
   1fb0c:	push	{fp, lr}
   1fb10:	mov	fp, sp
   1fb14:	sub	sp, sp, #8
   1fb18:	mov	r2, r1
   1fb1c:	mov	r1, r0
   1fb20:	mov	r0, #0
   1fb24:	str	r0, [sp, #4]
   1fb28:	cmp	r1, #4
   1fb2c:	movls	r1, #4
   1fb30:	add	r0, sp, #4
   1fb34:	bl	12b58 <posix_memalign@plt>
   1fb38:	cmp	r0, #0
   1fb3c:	ldrne	r0, [sp, #4]
   1fb40:	cmpne	r0, #0
   1fb44:	beq	1fb54 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   1fb48:	bl	12aa4 <free@plt>
   1fb4c:	mov	r0, #0
   1fb50:	str	r0, [sp, #4]
   1fb54:	ldr	r0, [sp, #4]
   1fb58:	mov	sp, fp
   1fb5c:	pop	{fp, pc}

0001fb60 <flatcc_builder_aligned_alloc@@Base>:
   1fb60:	b	1fb0c <flatcc_builder_finalize_aligned_buffer@@Base+0x88>

0001fb64 <flatcc_builder_aligned_free@@Base>:
   1fb64:	b	12aa4 <free@plt>

0001fb68 <flatcc_builder_get_emit_context@@Base>:
   1fb68:	ldr	r0, [r0, #36]	; 0x24
   1fb6c:	bx	lr
   1fb70:	ldr	r0, [r0, #140]	; 0x8c
   1fb74:	sub	r1, r1, #1
   1fb78:	and	r0, r0, r1
   1fb7c:	bx	lr
   1fb80:	push	{r4, r5, r6, sl, fp, lr}
   1fb84:	add	fp, sp, #16
   1fb88:	sub	sp, sp, #8
   1fb8c:	mov	r6, r2
   1fb90:	mov	r5, r0
   1fb94:	ldr	r2, [r0, #28]
   1fb98:	ldr	r0, [r0, #40]	; 0x28
   1fb9c:	ldr	r4, [r5, #48]	; 0x30
   1fba0:	mov	r3, #1
   1fba4:	str	r3, [sp]
   1fba8:	add	r2, r2, r1
   1fbac:	add	r1, r5, #60	; 0x3c
   1fbb0:	mov	r3, #1
   1fbb4:	blx	r4
   1fbb8:	mov	r1, r0
   1fbbc:	mvn	r0, #0
   1fbc0:	cmp	r1, #0
   1fbc4:	beq	1fbd0 <flatcc_builder_get_emit_context@@Base+0x68>
   1fbc8:	sub	sp, fp, #16
   1fbcc:	pop	{r4, r5, r6, sl, fp, pc}
   1fbd0:	mov	r0, r5
   1fbd4:	mov	r1, r6
   1fbd8:	bl	1d72c <flatcc_builder_start_struct@@Base+0x4c>
   1fbdc:	mov	r0, #0
   1fbe0:	sub	sp, fp, #16
   1fbe4:	pop	{r4, r5, r6, sl, fp, pc}
   1fbe8:	push	{r4, r5, r6, sl, fp, lr}
   1fbec:	add	fp, sp, #16
   1fbf0:	sub	sp, sp, #8
   1fbf4:	mov	r4, r0
   1fbf8:	ldr	r0, [r0, #124]	; 0x7c
   1fbfc:	cmp	r0, #0
   1fc00:	bne	1fca0 <flatcc_builder_get_emit_context@@Base+0x138>
   1fc04:	mov	r0, #0
   1fc08:	str	r0, [sp]
   1fc0c:	mov	r6, #16
   1fc10:	mov	r0, r4
   1fc14:	mov	r1, #6
   1fc18:	mov	r2, #0
   1fc1c:	mov	r3, #16
   1fc20:	bl	1cd48 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1fc24:	mvn	r5, #0
   1fc28:	cmp	r0, #0
   1fc2c:	beq	1fc94 <flatcc_builder_get_emit_context@@Base+0x12c>
   1fc30:	add	r1, r4, #92	; 0x5c
   1fc34:	str	r6, [r4, #124]	; 0x7c
   1fc38:	ldr	r0, [r4, #40]	; 0x28
   1fc3c:	ldr	ip, [r4, #48]	; 0x30
   1fc40:	mov	r2, #5
   1fc44:	str	r2, [sp]
   1fc48:	mov	r6, #256	; 0x100
   1fc4c:	mov	r2, #256	; 0x100
   1fc50:	mov	r3, #1
   1fc54:	blx	ip
   1fc58:	cmp	r0, #0
   1fc5c:	bne	1fc94 <flatcc_builder_get_emit_context@@Base+0x12c>
   1fc60:	ldr	r0, [r4, #96]	; 0x60
   1fc64:	mov	r1, r6
   1fc68:	lsl	r6, r6, #1
   1fc6c:	cmp	r0, r1, lsl #1
   1fc70:	bcs	1fc64 <flatcc_builder_get_emit_context@@Base+0xfc>
   1fc74:	lsr	r1, r1, #2
   1fc78:	mvn	r0, #0
   1fc7c:	mov	r2, #1
   1fc80:	add	r0, r0, #1
   1fc84:	cmp	r1, r2, lsl r0
   1fc88:	bhi	1fc80 <flatcc_builder_get_emit_context@@Base+0x118>
   1fc8c:	str	r0, [r4, #116]	; 0x74
   1fc90:	mov	r5, #0
   1fc94:	mov	r0, r5
   1fc98:	sub	sp, fp, #16
   1fc9c:	pop	{r4, r5, r6, sl, fp, pc}
   1fca0:	movw	r0, #21880	; 0x5578
   1fca4:	movt	r0, #2
   1fca8:	movw	r1, #17422	; 0x440e
   1fcac:	movt	r1, #2
   1fcb0:	movw	r3, #21895	; 0x5587
   1fcb4:	movt	r3, #2
   1fcb8:	movw	r2, #342	; 0x156
   1fcbc:	bl	12bc4 <__assert_fail@plt>

0001fcc0 <flatcc_emitter_recycle_page@@Base>:
   1fcc0:	ldr	ip, [r0]
   1fcc4:	mvn	r2, #0
   1fcc8:	cmp	ip, r1
   1fccc:	beq	1fd14 <flatcc_emitter_recycle_page@@Base+0x54>
   1fcd0:	ldr	r3, [r0, #4]
   1fcd4:	cmp	r3, r1
   1fcd8:	beq	1fd14 <flatcc_emitter_recycle_page@@Base+0x54>
   1fcdc:	ldr	r2, [r1, #2944]	; 0xb80
   1fce0:	ldr	r3, [r1, #2948]	; 0xb84
   1fce4:	str	r3, [r2, #2948]	; 0xb84
   1fce8:	ldr	r2, [r1, #2944]	; 0xb80
   1fcec:	ldr	r3, [r1, #2948]	; 0xb84
   1fcf0:	str	r2, [r3, #2944]	; 0xb80
   1fcf4:	ldr	r2, [ip, #2948]	; 0xb84
   1fcf8:	str	r2, [r1, #2948]	; 0xb84
   1fcfc:	ldr	r0, [r0]
   1fd00:	str	r0, [r1, #2944]	; 0xb80
   1fd04:	str	r1, [r2, #2944]	; 0xb80
   1fd08:	ldr	r0, [r1, #2944]	; 0xb80
   1fd0c:	str	r1, [r0, #2948]	; 0xb84
   1fd10:	mov	r2, #0
   1fd14:	mov	r0, r2
   1fd18:	bx	lr

0001fd1c <flatcc_emitter_reset@@Base>:
   1fd1c:	push	{r4, sl, fp, lr}
   1fd20:	add	fp, sp, #8
   1fd24:	mov	r4, r0
   1fd28:	ldr	r0, [r0]
   1fd2c:	cmp	r0, #0
   1fd30:	beq	1fdd8 <flatcc_emitter_reset@@Base+0xbc>
   1fd34:	mov	r1, #1472	; 0x5c0
   1fd38:	add	r2, r0, #1472	; 0x5c0
   1fd3c:	stmib	r4, {r0, r2}
   1fd40:	str	r1, [r4, #12]
   1fd44:	str	r2, [r4, #16]
   1fd48:	str	r1, [r4, #20]
   1fd4c:	movw	r1, #64064	; 0xfa40
   1fd50:	movt	r1, #65535	; 0xffff
   1fd54:	str	r1, [r0, #2952]	; 0xb88
   1fd58:	ldr	r0, [r4, #32]
   1fd5c:	cmp	r0, #0
   1fd60:	bne	1fd6c <flatcc_emitter_reset@@Base+0x50>
   1fd64:	ldr	r0, [r4, #24]
   1fd68:	str	r0, [r4, #32]
   1fd6c:	add	r2, r4, #24
   1fd70:	ldm	r2, {r0, r1, r2}
   1fd74:	mov	r3, #0
   1fd78:	str	r3, [r4, #24]
   1fd7c:	add	r2, r2, r2, lsl #1
   1fd80:	lsr	r2, r2, #2
   1fd84:	add	r0, r2, r0, lsr #2
   1fd88:	str	r0, [r4, #32]
   1fd8c:	cmp	r1, r0, lsl #1
   1fd90:	popls	{r4, sl, fp, pc}
   1fd94:	ldr	r2, [r4]
   1fd98:	ldr	r1, [r4, #4]
   1fd9c:	ldr	r0, [r1, #2944]	; 0xb80
   1fda0:	cmp	r0, r2
   1fda4:	beq	1fdd8 <flatcc_emitter_reset@@Base+0xbc>
   1fda8:	ldr	r2, [r0, #2944]	; 0xb80
   1fdac:	str	r2, [r1, #2944]	; 0xb80
   1fdb0:	ldr	r1, [r0, #2944]	; 0xb80
   1fdb4:	ldr	r2, [r4, #4]
   1fdb8:	str	r2, [r1, #2948]	; 0xb84
   1fdbc:	bl	12aa4 <free@plt>
   1fdc0:	ldr	r0, [r4, #28]
   1fdc4:	ldr	r1, [r4, #32]
   1fdc8:	sub	r0, r0, #2944	; 0xb80
   1fdcc:	str	r0, [r4, #28]
   1fdd0:	cmp	r0, r1, lsl #1
   1fdd4:	bhi	1fd94 <flatcc_emitter_reset@@Base+0x78>
   1fdd8:	pop	{r4, sl, fp, pc}

0001fddc <flatcc_emitter_clear@@Base>:
   1fddc:	push	{r4, r5, r6, sl, fp, lr}
   1fde0:	add	fp, sp, #16
   1fde4:	ldr	r5, [r0]
   1fde8:	cmp	r5, #0
   1fdec:	beq	1fe3c <flatcc_emitter_clear@@Base+0x60>
   1fdf0:	mov	r4, r0
   1fdf4:	ldr	r0, [r5, #2948]	; 0xb84
   1fdf8:	mov	r6, #0
   1fdfc:	str	r6, [r0, #2944]	; 0xb80
   1fe00:	ldr	r0, [r5, #2944]	; 0xb80
   1fe04:	cmp	r0, #0
   1fe08:	beq	1fe1c <flatcc_emitter_clear@@Base+0x40>
   1fe0c:	mov	r5, r0
   1fe10:	ldr	r0, [r0, #2948]	; 0xb84
   1fe14:	bl	12aa4 <free@plt>
   1fe18:	b	1fe00 <flatcc_emitter_clear@@Base+0x24>
   1fe1c:	mov	r0, r5
   1fe20:	bl	12aa4 <free@plt>
   1fe24:	vmov.i32	q8, #0	; 0x00000000
   1fe28:	add	r0, r4, #16
   1fe2c:	vst1.32	{d16-d17}, [r0]
   1fe30:	mov	r0, #32
   1fe34:	vst1.32	{d16-d17}, [r4], r0
   1fe38:	str	r6, [r4]
   1fe3c:	pop	{r4, r5, r6, sl, fp, pc}

0001fe40 <flatcc_emitter@@Base>:
   1fe40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fe44:	add	fp, sp, #24
   1fe48:	mov	r4, r2
   1fe4c:	mov	r5, r1
   1fe50:	mov	r6, r0
   1fe54:	ldr	r1, [r0, #24]
   1fe58:	ldr	r0, [fp, #8]
   1fe5c:	add	r1, r1, r0
   1fe60:	str	r1, [r6, #24]
   1fe64:	mov	r1, r6
   1fe68:	cmn	r3, #1
   1fe6c:	ble	1feac <flatcc_emitter@@Base+0x6c>
   1fe70:	ldr	r2, [r1, #20]!
   1fe74:	cmp	r2, r0
   1fe78:	bcs	1fef4 <flatcc_emitter@@Base+0xb4>
   1fe7c:	mov	r8, #0
   1fe80:	cmp	r4, #0
   1fe84:	beq	1ff44 <flatcc_emitter@@Base+0x104>
   1fe88:	ldm	r5, {r1, r2}
   1fe8c:	mov	r0, r6
   1fe90:	bl	20008 <flatcc_emitter@@Base+0x1c8>
   1fe94:	cmp	r0, #0
   1fe98:	bne	1fee8 <flatcc_emitter@@Base+0xa8>
   1fe9c:	subs	r4, r4, #1
   1fea0:	add	r5, r5, #8
   1fea4:	bne	1fe88 <flatcc_emitter@@Base+0x48>
   1fea8:	b	1ff44 <flatcc_emitter@@Base+0x104>
   1feac:	ldr	r2, [r1, #12]!
   1feb0:	cmp	r2, r0
   1feb4:	bcs	1ff04 <flatcc_emitter@@Base+0xc4>
   1feb8:	add	r0, r5, r4, lsl #3
   1febc:	sub	r5, r0, #4
   1fec0:	rsb	r4, r4, #1
   1fec4:	cmp	r4, #1
   1fec8:	beq	1ff4c <flatcc_emitter@@Base+0x10c>
   1fecc:	ldmda	r5, {r1, r2}
   1fed0:	mov	r0, r6
   1fed4:	bl	1ff58 <flatcc_emitter@@Base+0x118>
   1fed8:	sub	r5, r5, #8
   1fedc:	add	r4, r4, #1
   1fee0:	cmp	r0, #0
   1fee4:	beq	1fec4 <flatcc_emitter@@Base+0x84>
   1fee8:	mvn	r8, #0
   1feec:	mov	r0, r8
   1fef0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fef4:	ldr	r7, [r6, #16]
   1fef8:	add	r3, r7, r0
   1fefc:	str	r3, [r6, #16]
   1ff00:	b	1ff10 <flatcc_emitter@@Base+0xd0>
   1ff04:	ldr	r3, [r6, #8]
   1ff08:	sub	r7, r3, r0
   1ff0c:	str	r7, [r6, #8]
   1ff10:	sub	r0, r2, r0
   1ff14:	str	r0, [r1]
   1ff18:	mov	r8, #0
   1ff1c:	cmp	r4, #0
   1ff20:	beq	1ff44 <flatcc_emitter@@Base+0x104>
   1ff24:	ldm	r5, {r1, r2}
   1ff28:	mov	r0, r7
   1ff2c:	bl	12ab0 <memcpy@plt>
   1ff30:	ldr	r0, [r5, #4]
   1ff34:	add	r7, r7, r0
   1ff38:	add	r5, r5, #8
   1ff3c:	subs	r4, r4, #1
   1ff40:	bne	1ff24 <flatcc_emitter@@Base+0xe4>
   1ff44:	mov	r0, r8
   1ff48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ff4c:	mov	r8, #0
   1ff50:	mov	r0, r8
   1ff54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ff58:	push	{r4, r5, r6, r7, fp, lr}
   1ff5c:	add	fp, sp, #16
   1ff60:	cmp	r2, #0
   1ff64:	beq	1fff4 <flatcc_emitter@@Base+0x1b4>
   1ff68:	mov	r4, r2
   1ff6c:	mov	r5, r0
   1ff70:	clz	r0, r2
   1ff74:	lsr	r7, r0, #5
   1ff78:	add	r6, r1, r2
   1ff7c:	ldr	r0, [r5, #12]
   1ff80:	cmp	r4, r0
   1ff84:	bls	1ffb4 <flatcc_emitter@@Base+0x174>
   1ff88:	cmp	r0, #0
   1ff8c:	bne	1ffbc <flatcc_emitter@@Base+0x17c>
   1ff90:	mov	r0, r5
   1ff94:	bl	20174 <flatcc_emitter_copy_buffer@@Base+0xbc>
   1ff98:	cmp	r0, #0
   1ff9c:	mov	r1, r0
   1ffa0:	movwne	r1, #1
   1ffa4:	orr	r1, r1, r7
   1ffa8:	tst	r1, #1
   1ffac:	beq	1ff7c <flatcc_emitter@@Base+0x13c>
   1ffb0:	b	1fffc <flatcc_emitter@@Base+0x1bc>
   1ffb4:	mov	r7, r4
   1ffb8:	b	1ffc0 <flatcc_emitter@@Base+0x180>
   1ffbc:	mov	r7, r0
   1ffc0:	sub	r0, r0, r7
   1ffc4:	str	r0, [r5, #12]
   1ffc8:	ldr	r0, [r5, #8]
   1ffcc:	sub	r0, r0, r7
   1ffd0:	str	r0, [r5, #8]
   1ffd4:	sub	r6, r6, r7
   1ffd8:	mov	r1, r6
   1ffdc:	mov	r2, r7
   1ffe0:	bl	12ab0 <memcpy@plt>
   1ffe4:	subs	r4, r4, r7
   1ffe8:	clz	r0, r4
   1ffec:	lsr	r7, r0, #5
   1fff0:	bne	1ff7c <flatcc_emitter@@Base+0x13c>
   1fff4:	mov	r0, #0
   1fff8:	pop	{r4, r5, r6, r7, fp, pc}
   1fffc:	cmp	r0, #0
   20000:	mvnne	r0, #0
   20004:	pop	{r4, r5, r6, r7, fp, pc}
   20008:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2000c:	add	fp, sp, #24
   20010:	cmp	r2, #0
   20014:	beq	200a4 <flatcc_emitter@@Base+0x264>
   20018:	mov	r4, r2
   2001c:	mov	r8, r1
   20020:	mov	r6, r0
   20024:	clz	r0, r2
   20028:	lsr	r5, r0, #5
   2002c:	ldr	r7, [r6, #20]
   20030:	cmp	r4, r7
   20034:	bls	20064 <flatcc_emitter@@Base+0x224>
   20038:	cmp	r7, #0
   2003c:	bne	20068 <flatcc_emitter@@Base+0x228>
   20040:	mov	r0, r6
   20044:	bl	20264 <flatcc_emitter_copy_buffer@@Base+0x1ac>
   20048:	cmp	r0, #0
   2004c:	mov	r1, r0
   20050:	movwne	r1, #1
   20054:	orr	r1, r1, r5
   20058:	tst	r1, #1
   2005c:	beq	2002c <flatcc_emitter@@Base+0x1ec>
   20060:	b	200ac <flatcc_emitter@@Base+0x26c>
   20064:	mov	r7, r4
   20068:	ldr	r0, [r6, #16]
   2006c:	mov	r1, r8
   20070:	mov	r2, r7
   20074:	bl	12ab0 <memcpy@plt>
   20078:	ldr	r0, [r6, #16]
   2007c:	ldr	r1, [r6, #20]
   20080:	add	r0, r0, r7
   20084:	sub	r1, r1, r7
   20088:	str	r0, [r6, #16]
   2008c:	str	r1, [r6, #20]
   20090:	add	r8, r8, r7
   20094:	subs	r4, r4, r7
   20098:	clz	r0, r4
   2009c:	lsr	r5, r0, #5
   200a0:	bne	2002c <flatcc_emitter@@Base+0x1ec>
   200a4:	mov	r0, #0
   200a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   200ac:	cmp	r0, #0
   200b0:	mvnne	r0, #0
   200b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000200b8 <flatcc_emitter_copy_buffer@@Base>:
   200b8:	push	{r4, r5, r6, sl, fp, lr}
   200bc:	add	fp, sp, #16
   200c0:	mov	r3, r2
   200c4:	ldr	r2, [r0, #24]
   200c8:	mov	r5, #0
   200cc:	cmp	r2, r3
   200d0:	bhi	20158 <flatcc_emitter_copy_buffer@@Base+0xa0>
   200d4:	mov	r4, r0
   200d8:	ldr	r0, [r0]
   200dc:	cmp	r0, #0
   200e0:	beq	20158 <flatcc_emitter_copy_buffer@@Base+0xa0>
   200e4:	mov	r6, r1
   200e8:	ldr	r1, [r4, #4]
   200ec:	cmp	r0, r1
   200f0:	beq	20160 <flatcc_emitter_copy_buffer@@Base+0xa8>
   200f4:	ldr	r1, [r4, #8]
   200f8:	ldr	r0, [r4, #12]
   200fc:	rsb	r5, r0, #2944	; 0xb80
   20100:	mov	r0, r6
   20104:	mov	r2, r5
   20108:	bl	12ab0 <memcpy@plt>
   2010c:	add	r5, r6, r5
   20110:	ldm	r4, {r0, r1}
   20114:	ldr	r6, [r0, #2944]	; 0xb80
   20118:	cmp	r6, r1
   2011c:	beq	20144 <flatcc_emitter_copy_buffer@@Base+0x8c>
   20120:	mov	r0, r5
   20124:	mov	r1, r6
   20128:	mov	r2, #2944	; 0xb80
   2012c:	bl	12ab0 <memcpy@plt>
   20130:	add	r5, r5, #2944	; 0xb80
   20134:	ldr	r6, [r6, #2944]	; 0xb80
   20138:	ldr	r0, [r4, #4]
   2013c:	cmp	r6, r0
   20140:	bne	20120 <flatcc_emitter_copy_buffer@@Base+0x68>
   20144:	ldr	r0, [r4, #20]
   20148:	rsb	r2, r0, #2944	; 0xb80
   2014c:	mov	r0, r5
   20150:	mov	r1, r6
   20154:	bl	12ab0 <memcpy@plt>
   20158:	mov	r0, r5
   2015c:	pop	{r4, r5, r6, sl, fp, pc}
   20160:	ldr	r1, [r4, #8]
   20164:	mov	r0, r6
   20168:	bl	12ab0 <memcpy@plt>
   2016c:	mov	r0, r6
   20170:	pop	{r4, r5, r6, sl, fp, pc}
   20174:	push	{r4, r5, fp, lr}
   20178:	add	fp, sp, #8
   2017c:	mov	r4, r0
   20180:	ldr	r5, [r0]
   20184:	cmp	r5, #0
   20188:	beq	201b0 <flatcc_emitter_copy_buffer@@Base+0xf8>
   2018c:	ldr	r0, [r5, #2948]	; 0xb84
   20190:	ldr	r1, [r4, #4]
   20194:	cmp	r0, r1
   20198:	beq	201b0 <flatcc_emitter_copy_buffer@@Base+0xf8>
   2019c:	ldr	r1, [r5, #2952]	; 0xb88
   201a0:	sub	r1, r1, #2944	; 0xb80
   201a4:	str	r1, [r0, #2952]	; 0xb88
   201a8:	ldr	r0, [r5, #2948]	; 0xb84
   201ac:	b	201ec <flatcc_emitter_copy_buffer@@Base+0x134>
   201b0:	movw	r0, #2956	; 0xb8c
   201b4:	bl	12b04 <malloc@plt>
   201b8:	cmp	r0, #0
   201bc:	beq	2021c <flatcc_emitter_copy_buffer@@Base+0x164>
   201c0:	ldr	r1, [r4, #28]
   201c4:	add	r1, r1, #2944	; 0xb80
   201c8:	str	r1, [r4, #28]
   201cc:	cmp	r5, #0
   201d0:	beq	20224 <flatcc_emitter_copy_buffer@@Base+0x16c>
   201d4:	ldm	r4, {r1, r2}
   201d8:	str	r1, [r0, #2944]	; 0xb80
   201dc:	str	r2, [r0, #2948]	; 0xb84
   201e0:	str	r0, [r1, #2948]	; 0xb84
   201e4:	ldr	r1, [r4, #4]
   201e8:	str	r0, [r1, #2944]	; 0xb80
   201ec:	str	r0, [r4]
   201f0:	mov	r0, #2944	; 0xb80
   201f4:	ldr	r1, [r4]
   201f8:	add	r2, r1, #2944	; 0xb80
   201fc:	str	r2, [r4, #8]
   20200:	str	r0, [r4, #12]
   20204:	ldr	r0, [r1, #2944]	; 0xb80
   20208:	ldr	r0, [r0, #2952]	; 0xb88
   2020c:	sub	r0, r0, #2944	; 0xb80
   20210:	str	r0, [r1, #2952]	; 0xb88
   20214:	mov	r0, #0
   20218:	pop	{r4, r5, fp, pc}
   2021c:	mvn	r0, #0
   20220:	pop	{r4, r5, fp, pc}
   20224:	str	r0, [r4, #4]
   20228:	str	r0, [r4]
   2022c:	mov	r1, #1472	; 0x5c0
   20230:	str	r1, [r4, #20]
   20234:	str	r1, [r4, #12]
   20238:	ldr	r1, [r4]
   2023c:	add	r1, r1, #1472	; 0x5c0
   20240:	str	r1, [r4, #16]
   20244:	str	r1, [r4, #8]
   20248:	movw	r1, #64064	; 0xfa40
   2024c:	movt	r1, #65535	; 0xffff
   20250:	str	r0, [r0, #2944]	; 0xb80
   20254:	str	r0, [r0, #2948]	; 0xb84
   20258:	str	r1, [r0, #2952]	; 0xb88
   2025c:	mov	r0, #0
   20260:	pop	{r4, r5, fp, pc}
   20264:	push	{r4, r5, fp, lr}
   20268:	add	fp, sp, #8
   2026c:	mov	r4, r0
   20270:	ldr	r5, [r0, #4]
   20274:	cmp	r5, #0
   20278:	beq	2028c <flatcc_emitter_copy_buffer@@Base+0x1d4>
   2027c:	ldr	r0, [r5, #2944]	; 0xb80
   20280:	ldr	r1, [r4]
   20284:	cmp	r0, r1
   20288:	bne	202c4 <flatcc_emitter_copy_buffer@@Base+0x20c>
   2028c:	movw	r0, #2956	; 0xb8c
   20290:	bl	12b04 <malloc@plt>
   20294:	cmp	r0, #0
   20298:	beq	202f0 <flatcc_emitter_copy_buffer@@Base+0x238>
   2029c:	ldr	r1, [r4, #28]
   202a0:	add	r1, r1, #2944	; 0xb80
   202a4:	str	r1, [r4, #28]
   202a8:	cmp	r5, #0
   202ac:	beq	202f8 <flatcc_emitter_copy_buffer@@Base+0x240>
   202b0:	ldr	r1, [r4]
   202b4:	str	r1, [r0, #2944]	; 0xb80
   202b8:	str	r5, [r0, #2948]	; 0xb84
   202bc:	str	r0, [r1, #2948]	; 0xb84
   202c0:	str	r0, [r5, #2944]	; 0xb80
   202c4:	str	r0, [r4, #4]
   202c8:	mov	r0, #2944	; 0xb80
   202cc:	ldr	r1, [r4, #4]
   202d0:	str	r1, [r4, #16]
   202d4:	str	r0, [r4, #20]
   202d8:	ldr	r0, [r1, #2948]	; 0xb84
   202dc:	ldr	r0, [r0, #2952]	; 0xb88
   202e0:	add	r0, r0, #2944	; 0xb80
   202e4:	str	r0, [r1, #2952]	; 0xb88
   202e8:	mov	r0, #0
   202ec:	pop	{r4, r5, fp, pc}
   202f0:	mvn	r0, #0
   202f4:	pop	{r4, r5, fp, pc}
   202f8:	str	r0, [r4, #4]
   202fc:	str	r0, [r4]
   20300:	mov	r1, #1472	; 0x5c0
   20304:	str	r1, [r4, #20]
   20308:	str	r1, [r4, #12]
   2030c:	ldr	r1, [r4]
   20310:	add	r1, r1, #1472	; 0x5c0
   20314:	str	r1, [r4, #16]
   20318:	str	r1, [r4, #8]
   2031c:	movw	r1, #64064	; 0xfa40
   20320:	movt	r1, #65535	; 0xffff
   20324:	str	r0, [r0, #2944]	; 0xb80
   20328:	str	r0, [r0, #2948]	; 0xb84
   2032c:	str	r1, [r0, #2952]	; 0xb88
   20330:	mov	r0, #0
   20334:	pop	{r4, r5, fp, pc}

00020338 <grisu3_diy_fp_encode_double@@Base>:
   20338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2033c:	add	fp, sp, #28
   20340:	sub	sp, sp, #68	; 0x44
   20344:	mov	r9, r3
   20348:	mov	r7, r2
   2034c:	mov	r2, r0
   20350:	mov	r6, #0
   20354:	str	r6, [sp]
   20358:	str	r6, [sp, #4]
   2035c:	add	r0, sp, #48	; 0x30
   20360:	mov	r3, r1
   20364:	bl	205b0 <grisu3_diy_fp_encode_double@@Base+0x278>
   20368:	ldr	r0, [fp, #8]
   2036c:	cmp	r0, #0
   20370:	movwne	r0, #1
   20374:	lsl	r0, r0, #2
   20378:	ldr	r1, [sp, #48]	; 0x30
   2037c:	str	r1, [sp, #28]
   20380:	ldr	sl, [sp, #52]	; 0x34
   20384:	ldr	r5, [sp, #56]	; 0x38
   20388:	ldr	r8, [sp, #60]	; 0x3c
   2038c:	rsb	r1, r5, #0
   20390:	lsl	r4, r0, r1
   20394:	str	r9, [sp, #24]
   20398:	sub	r7, r7, r9
   2039c:	add	r1, sp, #48	; 0x30
   203a0:	mov	r0, r7
   203a4:	bl	20654 <grisu3_diy_fp_encode_double@@Base+0x31c>
   203a8:	cmp	r7, r0
   203ac:	bne	203b8 <grisu3_diy_fp_encode_double@@Base+0x80>
   203b0:	ldr	r2, [sp, #28]
   203b4:	b	20424 <grisu3_diy_fp_encode_double@@Base+0xec>
   203b8:	mvn	r0, r0
   203bc:	add	r7, r7, r0
   203c0:	cmp	r7, #7
   203c4:	bcs	20590 <grisu3_diy_fp_encode_double@@Base+0x258>
   203c8:	stm	sp, {r5, r8}
   203cc:	movw	r0, #22088	; 0x5648
   203d0:	movt	r0, #2
   203d4:	ldr	r1, [r0, r7, lsl #4]!
   203d8:	str	r1, [sp, #8]
   203dc:	ldmib	r0, {r1, r2}
   203e0:	ldr	r0, [r0, #12]
   203e4:	str	r0, [sp, #20]
   203e8:	str	r2, [sp, #16]
   203ec:	str	r1, [sp, #12]
   203f0:	add	r0, sp, #32
   203f4:	ldr	r2, [sp, #28]
   203f8:	mov	r3, sl
   203fc:	bl	2073c <grisu3_diy_fp_encode_double@@Base+0x404>
   20400:	ldr	r0, [sp, #24]
   20404:	add	r0, r0, r7
   20408:	add	r0, r0, #1
   2040c:	cmp	r0, #19
   20410:	addgt	r4, r4, #4
   20414:	ldr	r2, [sp, #32]
   20418:	ldr	sl, [sp, #36]	; 0x24
   2041c:	ldr	r5, [sp, #40]	; 0x28
   20420:	ldr	r8, [sp, #44]	; 0x2c
   20424:	add	r7, sp, #48	; 0x30
   20428:	ldm	r7, {r0, r1, r7}
   2042c:	ldr	r3, [sp, #60]	; 0x3c
   20430:	stm	sp, {r5, r8}
   20434:	add	ip, sp, #8
   20438:	stm	ip, {r0, r1, r7}
   2043c:	str	r3, [sp, #20]
   20440:	add	r0, sp, #32
   20444:	mov	r3, sl
   20448:	bl	2073c <grisu3_diy_fp_encode_double@@Base+0x404>
   2044c:	add	r5, sp, #32
   20450:	ldm	r5, {r2, r3, r5}
   20454:	ldr	r0, [sp, #44]	; 0x2c
   20458:	str	r5, [sp]
   2045c:	str	r0, [sp, #4]
   20460:	add	r0, sp, #32
   20464:	bl	205b0 <grisu3_diy_fp_encode_double@@Base+0x278>
   20468:	mov	r0, #9
   2046c:	cmp	r4, #0
   20470:	movweq	r0, #8
   20474:	add	r0, r0, r4
   20478:	ldr	r3, [sp, #32]
   2047c:	ldr	r1, [sp, #36]	; 0x24
   20480:	ldr	r2, [sp, #40]	; 0x28
   20484:	sub	r7, r5, r2
   20488:	lsl	r9, r0, r7
   2048c:	add	r7, r2, #64	; 0x40
   20490:	movw	r0, #64462	; 0xfbce
   20494:	movt	r0, #65535	; 0xffff
   20498:	add	r5, r0, #63	; 0x3f
   2049c:	cmp	r7, r5
   204a0:	bgt	204f0 <grisu3_diy_fp_encode_double@@Base+0x1b8>
   204a4:	mov	r6, #64	; 0x40
   204a8:	mvn	r5, #1072	; 0x430
   204ac:	cmp	r7, r5
   204b0:	blt	204c0 <grisu3_diy_fp_encode_double@@Base+0x188>
   204b4:	sub	r6, r0, r2
   204b8:	cmp	r6, #61	; 0x3d
   204bc:	blt	204f0 <grisu3_diy_fp_encode_double@@Base+0x1b8>
   204c0:	sub	r0, r6, #62	; 0x3e
   204c4:	mov	r7, #9
   204c8:	add	r9, r7, r9, asr r0
   204cc:	lsr	r3, r3, r0
   204d0:	rsb	r7, r6, #94	; 0x5e
   204d4:	orr	r3, r3, r1, lsl r7
   204d8:	subs	r7, r6, #94	; 0x5e
   204dc:	lsrpl	r3, r1, r7
   204e0:	add	r2, r0, r2
   204e4:	lsr	r1, r1, r0
   204e8:	movwpl	r1, #0
   204ec:	mov	r6, #62	; 0x3e
   204f0:	ldr	r8, [fp, #12]
   204f4:	lsr	r0, r3, r6
   204f8:	rsb	r7, r6, #32
   204fc:	orr	r0, r0, r1, lsl r7
   20500:	subs	r7, r6, #32
   20504:	lsrpl	r0, r1, r7
   20508:	add	r2, r2, r6
   2050c:	lsr	r1, r1, r6
   20510:	movwpl	r1, #0
   20514:	sub	r7, r6, #1
   20518:	mov	r5, #1
   2051c:	lsl	r5, r5, r7
   20520:	subs	r7, r6, #33	; 0x21
   20524:	movwpl	r5, #0
   20528:	add	r7, r9, r5, lsl #3
   2052c:	lsl	sl, r5, #3
   20530:	and	r3, r5, r3
   20534:	lsl	r5, r3, #3
   20538:	mov	r4, #0
   2053c:	cmp	r6, r7
   20540:	blt	20560 <grisu3_diy_fp_encode_double@@Base+0x228>
   20544:	adds	r0, r0, #1
   20548:	adc	r1, r1, #0
   2054c:	tst	r1, #2097152	; 0x200000
   20550:	beq	20560 <grisu3_diy_fp_encode_double@@Base+0x228>
   20554:	lsrs	r1, r1, #1
   20558:	rrx	r0, r0
   2055c:	add	r2, r2, #1
   20560:	mov	r3, r4
   20564:	bl	2079c <grisu3_diy_fp_encode_double@@Base+0x464>
   20568:	vstr	d0, [r8]
   2056c:	cmp	r5, r7
   20570:	mov	r0, #0
   20574:	movwge	r0, #1
   20578:	sub	r1, sl, r9
   2057c:	cmp	r1, r5
   20580:	movwge	r4, #1
   20584:	orr	r0, r0, r4
   20588:	sub	sp, fp, #28
   2058c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20590:	movw	r0, #24756	; 0x60b4
   20594:	movt	r0, #2
   20598:	movw	r1, #24784	; 0x60d0
   2059c:	movt	r1, #2
   205a0:	movw	r3, #24871	; 0x6127
   205a4:	movt	r3, #2
   205a8:	mov	r2, #185	; 0xb9
   205ac:	bl	12bc4 <__assert_fail@plt>
   205b0:	push	{r4, sl, fp, lr}
   205b4:	add	fp, sp, #8
   205b8:	orrs	r1, r2, r3
   205bc:	beq	20634 <grisu3_diy_fp_encode_double@@Base+0x2fc>
   205c0:	ldr	r1, [fp, #8]
   205c4:	mov	r4, #0
   205c8:	cmp	r4, r3, lsr #22
   205cc:	bne	205e8 <grisu3_diy_fp_encode_double@@Base+0x2b0>
   205d0:	lsl	r3, r3, #10
   205d4:	orr	r3, r3, r2, lsr #22
   205d8:	sub	r1, r1, #10
   205dc:	lsl	r2, r2, #10
   205e0:	cmp	r3, #4194304	; 0x400000
   205e4:	bcc	205d0 <grisu3_diy_fp_encode_double@@Base+0x298>
   205e8:	ldr	ip, [fp, #12]
   205ec:	cmp	r3, #0
   205f0:	bmi	2061c <grisu3_diy_fp_encode_double@@Base+0x2e4>
   205f4:	mvn	lr, #0
   205f8:	lsl	r3, r3, #1
   205fc:	orr	r3, r3, r2, lsr #31
   20600:	sub	r1, r1, #1
   20604:	lsl	r4, r2, #1
   20608:	subs	r2, lr, r2, lsl #1
   2060c:	sbcs	r2, lr, r3
   20610:	mov	r2, r4
   20614:	blt	205f8 <grisu3_diy_fp_encode_double@@Base+0x2c0>
   20618:	b	20620 <grisu3_diy_fp_encode_double@@Base+0x2e8>
   2061c:	mov	r4, r2
   20620:	str	r4, [r0]
   20624:	str	r3, [r0, #4]
   20628:	str	r1, [r0, #8]
   2062c:	str	ip, [r0, #12]
   20630:	pop	{r4, sl, fp, pc}
   20634:	movw	r0, #26131	; 0x6613
   20638:	movt	r0, #2
   2063c:	movw	r1, #26140	; 0x661c
   20640:	movt	r1, #2
   20644:	movw	r3, #26226	; 0x6672
   20648:	movt	r3, #2
   2064c:	mov	r2, #260	; 0x104
   20650:	bl	12bc4 <__assert_fail@plt>
   20654:	push	{fp, lr}
   20658:	mov	fp, sp
   2065c:	cmn	r0, #348	; 0x15c
   20660:	blt	206dc <grisu3_diy_fp_encode_double@@Base+0x3a4>
   20664:	cmp	r0, #348	; 0x15c
   20668:	bge	206fc <grisu3_diy_fp_encode_double@@Base+0x3c4>
   2066c:	add	r2, r0, #348	; 0x15c
   20670:	asr	r3, r2, #31
   20674:	add	r2, r2, r3, lsr #29
   20678:	mvn	r3, #14
   2067c:	and	r2, r3, r2, lsl #1
   20680:	movw	r3, #22200	; 0x56b8
   20684:	movt	r3, #2
   20688:	ldr	r2, [r3, r2]!
   2068c:	str	r2, [r1]
   20690:	ldr	r2, [r3, #4]
   20694:	str	r2, [r1, #4]
   20698:	ldrsh	r2, [r3, #8]
   2069c:	str	r2, [r1, #8]
   206a0:	ldrsh	r1, [r3, #10]
   206a4:	cmp	r1, r0
   206a8:	bgt	2071c <grisu3_diy_fp_encode_double@@Base+0x3e4>
   206ac:	add	r2, r1, #8
   206b0:	cmp	r2, r0
   206b4:	movgt	r0, r1
   206b8:	popgt	{fp, pc}
   206bc:	movw	r0, #26429	; 0x673d
   206c0:	movt	r0, #2
   206c4:	movw	r1, #24784	; 0x60d0
   206c8:	movt	r1, #2
   206cc:	movw	r3, #26314	; 0x66ca
   206d0:	movt	r3, #2
   206d4:	mov	r2, #89	; 0x59
   206d8:	bl	12bc4 <__assert_fail@plt>
   206dc:	movw	r0, #26283	; 0x66ab
   206e0:	movt	r0, #2
   206e4:	movw	r1, #24784	; 0x60d0
   206e8:	movt	r1, #2
   206ec:	movw	r3, #26314	; 0x66ca
   206f0:	movt	r3, #2
   206f4:	mov	r2, #80	; 0x50
   206f8:	bl	12bc4 <__assert_fail@plt>
   206fc:	movw	r0, #26371	; 0x6703
   20700:	movt	r0, #2
   20704:	movw	r1, #24784	; 0x60d0
   20708:	movt	r1, #2
   2070c:	movw	r3, #26314	; 0x66ca
   20710:	movt	r3, #2
   20714:	mov	r2, #81	; 0x51
   20718:	bl	12bc4 <__assert_fail@plt>
   2071c:	movw	r0, #26414	; 0x672e
   20720:	movt	r0, #2
   20724:	movw	r1, #24784	; 0x60d0
   20728:	movt	r1, #2
   2072c:	movw	r3, #26314	; 0x66ca
   20730:	movt	r3, #2
   20734:	mov	r2, #88	; 0x58
   20738:	bl	12bc4 <__assert_fail@plt>
   2073c:	push	{r4, r5, fp, lr}
   20740:	add	fp, sp, #8
   20744:	ldr	ip, [fp, #24]
   20748:	ldr	r1, [fp, #8]
   2074c:	add	r1, r1, ip
   20750:	add	r1, r1, #64	; 0x40
   20754:	str	r1, [r0, #8]
   20758:	ldr	ip, [fp, #16]
   2075c:	umull	r1, lr, ip, r2
   20760:	umull	ip, r1, ip, r3
   20764:	mov	r5, #0
   20768:	adds	lr, ip, lr
   2076c:	adc	r5, r5, #0
   20770:	ldr	ip, [fp, #20]
   20774:	umull	r2, r4, ip, r2
   20778:	adds	r2, lr, r2
   2077c:	adc	r5, r5, #0
   20780:	umaal	r1, r4, ip, r3
   20784:	adds	r2, r2, #-2147483648	; 0x80000000
   20788:	adcs	r1, r1, r5
   2078c:	str	r1, [r0]
   20790:	adc	r1, r4, #0
   20794:	str	r1, [r0, #4]
   20798:	pop	{r4, r5, fp, pc}
   2079c:	push	{r4, sl, fp, lr}
   207a0:	add	fp, sp, #8
   207a4:	cmp	r1, #2097152	; 0x200000
   207a8:	bcc	207cc <grisu3_diy_fp_encode_double@@Base+0x494>
   207ac:	mov	r4, #0
   207b0:	lsrs	r3, r1, #1
   207b4:	rrx	r0, r0
   207b8:	add	r2, r2, #1
   207bc:	cmp	r4, r1, lsr #22
   207c0:	mov	r1, r3
   207c4:	bne	207b0 <grisu3_diy_fp_encode_double@@Base+0x478>
   207c8:	b	207d0 <grisu3_diy_fp_encode_double@@Base+0x498>
   207cc:	mov	r3, r1
   207d0:	movw	ip, #64462	; 0xfbce
   207d4:	movt	ip, #65535	; 0xffff
   207d8:	cmp	r2, ip
   207dc:	bge	207e8 <grisu3_diy_fp_encode_double@@Base+0x4b0>
   207e0:	vmov.i32	d0, #0	; 0x00000000
   207e4:	pop	{r4, sl, fp, pc}
   207e8:	and	r1, r3, #1048576	; 0x100000
   207ec:	mov	r4, #1
   207f0:	eor	lr, r4, r1, lsr #20
   207f4:	cmp	r2, ip
   207f8:	beq	20840 <grisu3_diy_fp_encode_double@@Base+0x508>
   207fc:	cmp	r1, #0
   20800:	bne	20840 <grisu3_diy_fp_encode_double@@Base+0x508>
   20804:	mov	r4, #1
   20808:	lsl	r1, r3, #1
   2080c:	orr	r1, r1, r0, lsr #31
   20810:	and	r3, r3, #524288	; 0x80000
   20814:	eor	lr, r4, r3, lsr #19
   20818:	lsl	r0, r0, #1
   2081c:	sub	r2, r2, #1
   20820:	cmp	r2, ip
   20824:	ble	20834 <grisu3_diy_fp_encode_double@@Base+0x4fc>
   20828:	cmp	r3, #0
   2082c:	mov	r3, r1
   20830:	beq	20808 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   20834:	cmp	r2, ip
   20838:	beq	2084c <grisu3_diy_fp_encode_double@@Base+0x514>
   2083c:	b	2085c <grisu3_diy_fp_encode_double@@Base+0x524>
   20840:	mov	r1, r3
   20844:	cmp	r2, ip
   20848:	bne	2085c <grisu3_diy_fp_encode_double@@Base+0x524>
   2084c:	mov	r3, #0
   20850:	cmp	lr, #0
   20854:	mov	r4, #0
   20858:	bne	2086c <grisu3_diy_fp_encode_double@@Base+0x534>
   2085c:	movw	r3, #1075	; 0x433
   20860:	add	r2, r2, r3
   20864:	lsl	r4, r2, #20
   20868:	mov	r3, #0
   2086c:	orr	r0, r3, r0
   20870:	bfc	r1, #20, #12
   20874:	orr	r1, r4, r1
   20878:	pop	{r4, sl, fp, lr}
   2087c:	b	22f10 <flatcc_json_parser_struct_as_root@@Base+0xb4>

00020880 <flatcc_json_parser_error_string@@Base>:
   20880:	cmp	r0, #34	; 0x22
   20884:	movwhi	r0, #25581	; 0x63ed
   20888:	movthi	r0, #2
   2088c:	bxhi	lr
   20890:	movw	r1, #24616	; 0x6028
   20894:	movt	r1, #2
   20898:	ldr	r0, [r1, r0, lsl #2]
   2089c:	bx	lr

000208a0 <flatcc_json_parser_set_error@@Base>:
   208a0:	mov	ip, r2
   208a4:	ldr	r2, [r0, #24]
   208a8:	cmp	r2, #0
   208ac:	beq	208b8 <flatcc_json_parser_set_error@@Base+0x18>
   208b0:	mov	r0, ip
   208b4:	bx	lr
   208b8:	str	r1, [r0, #36]	; 0x24
   208bc:	ldr	r2, [r0, #4]
   208c0:	sub	r1, r1, r2
   208c4:	add	r1, r1, #1
   208c8:	str	r1, [r0, #20]
   208cc:	str	r3, [r0, #24]
   208d0:	mov	r0, ip
   208d4:	bx	lr

000208d8 <flatcc_json_parser_string_part@@Base>:
   208d8:	push	{fp, lr}
   208dc:	mov	fp, sp
   208e0:	cmp	r1, r2
   208e4:	beq	2090c <flatcc_json_parser_string_part@@Base+0x34>
   208e8:	ldrb	r3, [r1]
   208ec:	cmp	r3, #32
   208f0:	bcc	20920 <flatcc_json_parser_string_part@@Base+0x48>
   208f4:	cmp	r3, #34	; 0x22
   208f8:	cmpne	r3, #92	; 0x5c
   208fc:	beq	20918 <flatcc_json_parser_string_part@@Base+0x40>
   20900:	add	r1, r1, #1
   20904:	cmp	r2, r1
   20908:	bne	208e8 <flatcc_json_parser_string_part@@Base+0x10>
   2090c:	mov	r3, #20
   20910:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   20914:	mov	r1, r0
   20918:	mov	r0, r1
   2091c:	pop	{fp, pc}
   20920:	mov	r3, #17
   20924:	b	20910 <flatcc_json_parser_string_part@@Base+0x38>

00020928 <flatcc_json_parser_space_ext@@Base>:
   20928:	push	{fp, lr}
   2092c:	mov	fp, sp
   20930:	mov	ip, r1
   20934:	cmp	ip, r2
   20938:	beq	20970 <flatcc_json_parser_space_ext@@Base+0x48>
   2093c:	ldrb	r3, [ip]
   20940:	cmp	r3, #32
   20944:	bne	20970 <flatcc_json_parser_space_ext@@Base+0x48>
   20948:	add	ip, ip, #1
   2094c:	cmp	r2, ip
   20950:	bne	2093c <flatcc_json_parser_space_ext@@Base+0x14>
   20954:	b	20970 <flatcc_json_parser_space_ext@@Base+0x48>
   20958:	add	ip, ip, r3
   2095c:	add	ip, ip, #1
   20960:	str	ip, [r0, #4]
   20964:	ldr	r1, [r0, #16]
   20968:	add	r1, r1, #1
   2096c:	str	r1, [r0, #16]
   20970:	cmp	ip, r2
   20974:	beq	20a3c <flatcc_json_parser_space_ext@@Base+0x114>
   20978:	ldrb	r3, [ip]
   2097c:	cmp	r3, #32
   20980:	bhi	20a3c <flatcc_json_parser_space_ext@@Base+0x114>
   20984:	sub	r3, r3, #9
   20988:	cmp	r3, #23
   2098c:	bhi	20a2c <flatcc_json_parser_space_ext@@Base+0x104>
   20990:	add	r1, pc, #0
   20994:	ldr	pc, [r1, r3, lsl #2]
   20998:	strdeq	r0, [r2], -r8
   2099c:	andeq	r0, r2, ip, asr r9
   209a0:	andeq	r0, r2, ip, lsr #20
   209a4:	andeq	r0, r2, ip, lsr #20
   209a8:	andeq	r0, r2, r8, lsl #20
   209ac:	andeq	r0, r2, ip, lsr #20
   209b0:	andeq	r0, r2, ip, lsr #20
   209b4:	andeq	r0, r2, ip, lsr #20
   209b8:	andeq	r0, r2, ip, lsr #20
   209bc:	andeq	r0, r2, ip, lsr #20
   209c0:	andeq	r0, r2, ip, lsr #20
   209c4:	andeq	r0, r2, ip, lsr #20
   209c8:	andeq	r0, r2, ip, lsr #20
   209cc:	andeq	r0, r2, ip, lsr #20
   209d0:	andeq	r0, r2, ip, lsr #20
   209d4:	andeq	r0, r2, ip, lsr #20
   209d8:	andeq	r0, r2, ip, lsr #20
   209dc:	andeq	r0, r2, ip, lsr #20
   209e0:	andeq	r0, r2, ip, lsr #20
   209e4:	andeq	r0, r2, ip, lsr #20
   209e8:	andeq	r0, r2, ip, lsr #20
   209ec:	andeq	r0, r2, ip, lsr #20
   209f0:	andeq	r0, r2, ip, lsr #20
   209f4:	andeq	r0, r2, r4, lsr r9
   209f8:	add	ip, ip, #1
   209fc:	cmp	ip, r2
   20a00:	bne	20978 <flatcc_json_parser_space_ext@@Base+0x50>
   20a04:	b	20a3c <flatcc_json_parser_space_ext@@Base+0x114>
   20a08:	sub	r1, r2, ip
   20a0c:	mov	r3, #0
   20a10:	cmp	r1, #2
   20a14:	blt	20958 <flatcc_json_parser_space_ext@@Base+0x30>
   20a18:	ldrb	r1, [ip, #1]
   20a1c:	sub	r1, r1, #10
   20a20:	clz	r1, r1
   20a24:	lsr	r3, r1, #5
   20a28:	b	20958 <flatcc_json_parser_space_ext@@Base+0x30>
   20a2c:	mov	r1, ip
   20a30:	mov	r3, #5
   20a34:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   20a38:	mov	ip, r0
   20a3c:	mov	r0, ip
   20a40:	pop	{fp, pc}

00020a44 <flatcc_json_parser_string_escape@@Base>:
   20a44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20a48:	add	fp, sp, #24
   20a4c:	sub	r7, r2, r1
   20a50:	cmp	r7, #2
   20a54:	blt	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20a58:	ldrb	r6, [r1]
   20a5c:	cmp	r6, #92	; 0x5c
   20a60:	bne	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20a64:	ldrb	r6, [r1, #1]
   20a68:	sub	r6, r6, #34	; 0x22
   20a6c:	cmp	r6, #86	; 0x56
   20a70:	bhi	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20a74:	add	r5, pc, #0
   20a78:	ldr	pc, [r5, r6, lsl #2]
   20a7c:	ldrdeq	r0, [r2], -r8
   20a80:	andeq	r0, r2, r4, asr ip
   20a84:	andeq	r0, r2, r4, asr ip
   20a88:	andeq	r0, r2, r4, asr ip
   20a8c:	andeq	r0, r2, r4, asr ip
   20a90:	andeq	r0, r2, r4, asr ip
   20a94:	andeq	r0, r2, r4, asr ip
   20a98:	andeq	r0, r2, r4, asr ip
   20a9c:	andeq	r0, r2, r4, asr ip
   20aa0:	andeq	r0, r2, r4, asr ip
   20aa4:	andeq	r0, r2, r4, asr ip
   20aa8:	andeq	r0, r2, r4, asr ip
   20aac:	andeq	r0, r2, r4, asr ip
   20ab0:	andeq	r0, r2, r0, ror #23
   20ab4:	andeq	r0, r2, r4, asr ip
   20ab8:	andeq	r0, r2, r4, asr ip
   20abc:	andeq	r0, r2, r4, asr ip
   20ac0:	andeq	r0, r2, r4, asr ip
   20ac4:	andeq	r0, r2, r4, asr ip
   20ac8:	andeq	r0, r2, r4, asr ip
   20acc:	andeq	r0, r2, r4, asr ip
   20ad0:	andeq	r0, r2, r4, asr ip
   20ad4:	andeq	r0, r2, r4, asr ip
   20ad8:	andeq	r0, r2, r4, asr ip
   20adc:	andeq	r0, r2, r4, asr ip
   20ae0:	andeq	r0, r2, r4, asr ip
   20ae4:	andeq	r0, r2, r4, asr ip
   20ae8:	andeq	r0, r2, r4, asr ip
   20aec:	andeq	r0, r2, r4, asr ip
   20af0:	andeq	r0, r2, r4, asr ip
   20af4:	andeq	r0, r2, r4, asr ip
   20af8:	andeq	r0, r2, r4, asr ip
   20afc:	andeq	r0, r2, r4, asr ip
   20b00:	andeq	r0, r2, r4, asr ip
   20b04:	andeq	r0, r2, r4, asr ip
   20b08:	andeq	r0, r2, r4, asr ip
   20b0c:	andeq	r0, r2, r4, asr ip
   20b10:	andeq	r0, r2, r4, asr ip
   20b14:	andeq	r0, r2, r4, asr ip
   20b18:	andeq	r0, r2, r4, asr ip
   20b1c:	andeq	r0, r2, r4, asr ip
   20b20:	andeq	r0, r2, r4, asr ip
   20b24:	andeq	r0, r2, r4, asr ip
   20b28:	andeq	r0, r2, r4, asr ip
   20b2c:	andeq	r0, r2, r4, asr ip
   20b30:	andeq	r0, r2, r4, asr ip
   20b34:	andeq	r0, r2, r4, asr ip
   20b38:	andeq	r0, r2, r4, asr ip
   20b3c:	andeq	r0, r2, r4, asr ip
   20b40:	andeq	r0, r2, r4, asr ip
   20b44:	andeq	r0, r2, r4, asr ip
   20b48:	andeq	r0, r2, r4, asr ip
   20b4c:	andeq	r0, r2, r4, asr ip
   20b50:	andeq	r0, r2, r4, asr ip
   20b54:	andeq	r0, r2, r4, asr ip
   20b58:	andeq	r0, r2, r4, asr ip
   20b5c:	andeq	r0, r2, r4, asr ip
   20b60:	andeq	r0, r2, r4, asr ip
   20b64:	andeq	r0, r2, r8, ror #23
   20b68:	andeq	r0, r2, r4, asr ip
   20b6c:	andeq	r0, r2, r4, asr ip
   20b70:	andeq	r0, r2, r4, asr ip
   20b74:	andeq	r0, r2, r4, asr ip
   20b78:	andeq	r0, r2, r4, asr ip
   20b7c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20b80:	andeq	r0, r2, r4, asr ip
   20b84:	andeq	r0, r2, r4, asr ip
   20b88:	andeq	r0, r2, r4, asr ip
   20b8c:	strdeq	r0, [r2], -r8
   20b90:	andeq	r0, r2, r4, asr ip
   20b94:	andeq	r0, r2, r4, asr ip
   20b98:	andeq	r0, r2, r4, asr ip
   20b9c:	andeq	r0, r2, r4, asr ip
   20ba0:	andeq	r0, r2, r4, asr ip
   20ba4:	andeq	r0, r2, r4, asr ip
   20ba8:	andeq	r0, r2, r4, asr ip
   20bac:	andeq	r0, r2, r0, lsl #24
   20bb0:	andeq	r0, r2, r4, asr ip
   20bb4:	andeq	r0, r2, r4, asr ip
   20bb8:	andeq	r0, r2, r4, asr ip
   20bbc:	andeq	r0, r2, r8, lsl #24
   20bc0:	andeq	r0, r2, r4, asr ip
   20bc4:	andeq	r0, r2, r0, lsl ip
   20bc8:	andeq	r0, r2, r0, lsr #24
   20bcc:	andeq	r0, r2, r4, asr ip
   20bd0:	andeq	r0, r2, r4, asr ip
   20bd4:	andeq	r0, r2, r4, asr #24
   20bd8:	movw	r0, #8705	; 0x2201
   20bdc:	b	20c14 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20be0:	movw	r0, #12033	; 0x2f01
   20be4:	b	20c14 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20be8:	movw	r0, #23553	; 0x5c01
   20bec:	b	20c14 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20bf0:	movw	r0, #2049	; 0x801
   20bf4:	b	20c14 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20bf8:	movw	r0, #3073	; 0xc01
   20bfc:	b	20c14 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20c00:	movw	r0, #2561	; 0xa01
   20c04:	b	20c14 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20c08:	movw	r0, #3329	; 0xd01
   20c0c:	b	20c14 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20c10:	movw	r0, #2305	; 0x901
   20c14:	strh	r0, [r3]
   20c18:	add	r0, r1, #2
   20c1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20c20:	cmp	r7, #5
   20c24:	ble	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20c28:	ldrb	r7, [r1, #2]
   20c2c:	sub	r6, r7, #48	; 0x30
   20c30:	uxtb	r6, r6
   20c34:	cmp	r6, #9
   20c38:	bhi	20c84 <flatcc_json_parser_string_escape@@Base+0x240>
   20c3c:	lsl	ip, r7, #12
   20c40:	b	20ca4 <flatcc_json_parser_string_escape@@Base+0x260>
   20c44:	mov	r6, #1
   20c48:	strb	r6, [r3]
   20c4c:	cmp	r7, #3
   20c50:	bgt	20c68 <flatcc_json_parser_string_escape@@Base+0x224>
   20c54:	mov	r7, #0
   20c58:	strb	r7, [r3]
   20c5c:	mov	r3, #18
   20c60:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   20c64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20c68:	ldrb	r7, [r1, #2]
   20c6c:	sub	r6, r7, #48	; 0x30
   20c70:	uxtb	r6, r6
   20c74:	cmp	r6, #9
   20c78:	bhi	20cc0 <flatcc_json_parser_string_escape@@Base+0x27c>
   20c7c:	lsl	r6, r7, #4
   20c80:	b	20cdc <flatcc_json_parser_string_escape@@Base+0x298>
   20c84:	orr	r6, r7, #32
   20c88:	sub	r6, r6, #97	; 0x61
   20c8c:	uxtb	r6, r6
   20c90:	cmp	r6, #5
   20c94:	bhi	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20c98:	movw	r6, #36864	; 0x9000
   20c9c:	movt	r6, #65535	; 0xffff
   20ca0:	add	ip, r6, r7, lsl #12
   20ca4:	ldrb	lr, [r1, #3]
   20ca8:	sub	r4, lr, #48	; 0x30
   20cac:	uxtb	r4, r4
   20cb0:	cmp	r4, #10
   20cb4:	bcs	20d18 <flatcc_json_parser_string_escape@@Base+0x2d4>
   20cb8:	mov	r8, #53248	; 0xd000
   20cbc:	b	20d30 <flatcc_json_parser_string_escape@@Base+0x2ec>
   20cc0:	orr	r6, r7, #32
   20cc4:	sub	r6, r6, #97	; 0x61
   20cc8:	uxtb	r6, r6
   20ccc:	cmp	r6, #5
   20cd0:	bhi	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20cd4:	mvn	r6, #111	; 0x6f
   20cd8:	add	r6, r6, r7, lsl #4
   20cdc:	ldrb	r5, [r1, #3]
   20ce0:	sub	r7, r5, #48	; 0x30
   20ce4:	uxtb	r4, r7
   20ce8:	cmp	r4, #9
   20cec:	bls	20d08 <flatcc_json_parser_string_escape@@Base+0x2c4>
   20cf0:	orr	r7, r5, #32
   20cf4:	sub	r5, r7, #97	; 0x61
   20cf8:	uxtb	r5, r5
   20cfc:	cmp	r5, #5
   20d00:	bhi	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20d04:	sub	r7, r7, #87	; 0x57
   20d08:	orr	r0, r7, r6
   20d0c:	strb	r0, [r3, #1]
   20d10:	add	r0, r1, #4
   20d14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20d18:	orr	lr, lr, #32
   20d1c:	sub	r4, lr, #97	; 0x61
   20d20:	uxtb	r4, r4
   20d24:	mov	r8, #43264	; 0xa900
   20d28:	cmp	r4, #6
   20d2c:	bcs	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20d30:	ldrb	r5, [r1, #4]
   20d34:	sub	r4, r5, #48	; 0x30
   20d38:	uxtb	r4, r4
   20d3c:	cmp	r4, #10
   20d40:	bcs	20d4c <flatcc_json_parser_string_escape@@Base+0x308>
   20d44:	mov	r9, #64768	; 0xfd00
   20d48:	b	20d64 <flatcc_json_parser_string_escape@@Base+0x320>
   20d4c:	orr	r5, r5, #32
   20d50:	sub	r4, r5, #97	; 0x61
   20d54:	uxtb	r4, r4
   20d58:	movw	r9, #64144	; 0xfa90
   20d5c:	cmp	r4, #6
   20d60:	bcs	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20d64:	ldrb	r7, [r1, #5]
   20d68:	sub	r4, r7, #48	; 0x30
   20d6c:	uxtb	r4, r4
   20d70:	cmp	r4, #10
   20d74:	bcs	20d84 <flatcc_json_parser_string_escape@@Base+0x340>
   20d78:	mvn	r0, #86	; 0x56
   20d7c:	add	r4, r0, #39	; 0x27
   20d80:	b	20d9c <flatcc_json_parser_string_escape@@Base+0x358>
   20d84:	movw	r4, #65449	; 0xffa9
   20d88:	orr	r7, r7, #32
   20d8c:	sub	r6, r7, #97	; 0x61
   20d90:	uxtb	r6, r6
   20d94:	cmp	r6, #6
   20d98:	bcs	20c54 <flatcc_json_parser_string_escape@@Base+0x210>
   20d9c:	add	r0, r8, lr, lsl #8
   20da0:	orr	r0, r0, ip
   20da4:	add	r2, r9, r5, lsl #4
   20da8:	orr	r0, r0, r2
   20dac:	add	r2, r4, r7
   20db0:	orr	r0, r0, r2
   20db4:	uxth	r7, r0
   20db8:	cmp	r7, #127	; 0x7f
   20dbc:	bhi	20dcc <flatcc_json_parser_string_escape@@Base+0x388>
   20dc0:	mov	r2, #1
   20dc4:	strb	r2, [r3]
   20dc8:	b	20e1c <flatcc_json_parser_string_escape@@Base+0x3d8>
   20dcc:	mov	r2, #0
   20dd0:	cmp	r2, r7, lsr #11
   20dd4:	bne	20df0 <flatcc_json_parser_string_escape@@Base+0x3ac>
   20dd8:	mov	r2, #2
   20ddc:	strb	r2, [r3]
   20de0:	mov	r7, #192	; 0xc0
   20de4:	orr	r7, r7, r0, lsr #6
   20de8:	strb	r7, [r3, #1]
   20dec:	b	20e14 <flatcc_json_parser_string_escape@@Base+0x3d0>
   20df0:	mov	r2, #3
   20df4:	strb	r2, [r3]
   20df8:	mov	r6, #224	; 0xe0
   20dfc:	orr	r6, r6, r7, lsr #12
   20e00:	strb	r6, [r3, #1]
   20e04:	lsr	r7, r7, #6
   20e08:	mov	r6, #2
   20e0c:	bfi	r7, r6, #6, #26
   20e10:	strb	r7, [r3, #2]
   20e14:	mvn	r7, #-67108863	; 0xfc000001
   20e18:	bfi	r0, r7, #6, #26
   20e1c:	strb	r0, [r3, r2]
   20e20:	add	r0, r1, #6
   20e24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00020e28 <flatcc_json_parser_skip_constant@@Base>:
   20e28:	push	{r4, r5, r6, sl, fp, lr}
   20e2c:	add	fp, sp, #16
   20e30:	mov	r4, r1
   20e34:	cmp	r1, r2
   20e38:	beq	20eac <flatcc_json_parser_skip_constant@@Base+0x84>
   20e3c:	mov	r5, r2
   20e40:	mov	r6, r0
   20e44:	ldrsb	r0, [r4]
   20e48:	cmp	r0, #0
   20e4c:	bmi	20e5c <flatcc_json_parser_skip_constant@@Base+0x34>
   20e50:	cmp	r0, #95	; 0x5f
   20e54:	cmpne	r0, #46	; 0x2e
   20e58:	bne	20e6c <flatcc_json_parser_skip_constant@@Base+0x44>
   20e5c:	add	r4, r4, #1
   20e60:	cmp	r4, r5
   20e64:	bne	20e44 <flatcc_json_parser_skip_constant@@Base+0x1c>
   20e68:	b	20eac <flatcc_json_parser_skip_constant@@Base+0x84>
   20e6c:	sub	r1, r0, #48	; 0x30
   20e70:	uxtb	r1, r1
   20e74:	cmp	r1, #9
   20e78:	bls	20e5c <flatcc_json_parser_skip_constant@@Base+0x34>
   20e7c:	orr	r0, r0, #32
   20e80:	sub	r0, r0, #97	; 0x61
   20e84:	uxtb	r0, r0
   20e88:	cmp	r0, #25
   20e8c:	bls	20e5c <flatcc_json_parser_skip_constant@@Base+0x34>
   20e90:	mov	r0, r6
   20e94:	mov	r1, r4
   20e98:	mov	r2, r5
   20e9c:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20ea0:	cmp	r0, r4
   20ea4:	mov	r4, r0
   20ea8:	bne	20e60 <flatcc_json_parser_skip_constant@@Base+0x38>
   20eac:	mov	r0, r4
   20eb0:	pop	{r4, r5, r6, sl, fp, pc}
   20eb4:	sub	r3, r2, r1
   20eb8:	cmp	r3, #2
   20ebc:	blt	20ee8 <flatcc_json_parser_skip_constant@@Base+0xc0>
   20ec0:	ldrb	r3, [r1]
   20ec4:	cmp	r3, #32
   20ec8:	movhi	r0, r1
   20ecc:	bxhi	lr
   20ed0:	bne	20ee8 <flatcc_json_parser_skip_constant@@Base+0xc0>
   20ed4:	mov	ip, r1
   20ed8:	ldrb	r3, [ip, #1]!
   20edc:	cmp	r3, #32
   20ee0:	movhi	r0, ip
   20ee4:	bxhi	lr
   20ee8:	b	20928 <flatcc_json_parser_space_ext@@Base>

00020eec <flatcc_json_parser_match_constant@@Base>:
   20eec:	push	{r4, r5, r6, r7, fp, lr}
   20ef0:	add	fp, sp, #16
   20ef4:	mov	r5, r2
   20ef8:	mov	r4, r1
   20efc:	mov	r2, r0
   20f00:	sub	r0, r5, r1
   20f04:	ldr	r7, [fp, #8]
   20f08:	cmp	r0, r3
   20f0c:	ble	20fec <flatcc_json_parser_match_constant@@Base+0x100>
   20f10:	add	r6, r4, r3
   20f14:	ldr	r0, [r2, #12]
   20f18:	cmp	r0, #0
   20f1c:	beq	20f84 <flatcc_json_parser_match_constant@@Base+0x98>
   20f20:	mov	r0, r2
   20f24:	mov	r1, r6
   20f28:	mov	r2, r5
   20f2c:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20f30:	cmp	r0, r5
   20f34:	beq	20ffc <flatcc_json_parser_match_constant@@Base+0x110>
   20f38:	cmp	r0, r6
   20f3c:	beq	20f68 <flatcc_json_parser_match_constant@@Base+0x7c>
   20f40:	ldrsb	r1, [r0]
   20f44:	cmp	r1, #95	; 0x5f
   20f48:	beq	21008 <flatcc_json_parser_match_constant@@Base+0x11c>
   20f4c:	cmn	r1, #1
   20f50:	ble	21008 <flatcc_json_parser_match_constant@@Base+0x11c>
   20f54:	orr	r1, r1, #32
   20f58:	sub	r1, r1, #97	; 0x61
   20f5c:	uxtb	r1, r1
   20f60:	cmp	r1, #25
   20f64:	bls	21008 <flatcc_json_parser_match_constant@@Base+0x11c>
   20f68:	mov	r1, #0
   20f6c:	str	r1, [r7]
   20f70:	ldrb	r1, [r0]
   20f74:	cmp	r1, #44	; 0x2c
   20f78:	cmpne	r1, #93	; 0x5d
   20f7c:	bne	21034 <flatcc_json_parser_match_constant@@Base+0x148>
   20f80:	pop	{r4, r5, r6, r7, fp, pc}
   20f84:	ldrb	r0, [r6]
   20f88:	cmp	r0, #92	; 0x5c
   20f8c:	beq	21014 <flatcc_json_parser_match_constant@@Base+0x128>
   20f90:	cmp	r0, #34	; 0x22
   20f94:	beq	20fd0 <flatcc_json_parser_match_constant@@Base+0xe4>
   20f98:	cmp	r0, #32
   20f9c:	bne	20fec <flatcc_json_parser_match_constant@@Base+0x100>
   20fa0:	add	r0, r4, r3
   20fa4:	add	r6, r0, #1
   20fa8:	mov	r0, r6
   20fac:	cmp	r5, r6
   20fb0:	beq	20ffc <flatcc_json_parser_match_constant@@Base+0x110>
   20fb4:	mov	r6, r0
   20fb8:	ldrb	r1, [r6], #1
   20fbc:	cmp	r1, #32
   20fc0:	beq	20fa8 <flatcc_json_parser_match_constant@@Base+0xbc>
   20fc4:	ldrb	r1, [r6, #-1]!
   20fc8:	cmp	r1, #34	; 0x22
   20fcc:	bne	21008 <flatcc_json_parser_match_constant@@Base+0x11c>
   20fd0:	add	r1, r6, #1
   20fd4:	mov	r4, #0
   20fd8:	mov	r0, r2
   20fdc:	mov	r2, #0
   20fe0:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20fe4:	str	r4, [r7]
   20fe8:	pop	{r4, r5, r6, r7, fp, pc}
   20fec:	mov	r0, #0
   20ff0:	str	r0, [r7]
   20ff4:	mov	r0, r4
   20ff8:	pop	{r4, r5, r6, r7, fp, pc}
   20ffc:	mov	r1, #0
   21000:	str	r1, [r7]
   21004:	pop	{r4, r5, r6, r7, fp, pc}
   21008:	mov	r1, #1
   2100c:	str	r1, [r7]
   21010:	pop	{r4, r5, r6, r7, fp, pc}
   21014:	mov	r0, #0
   21018:	str	r0, [r7]
   2101c:	mov	r0, r2
   21020:	mov	r1, r6
   21024:	mov	r2, r5
   21028:	mov	r3, #18
   2102c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21030:	pop	{r4, r5, r6, r7, fp, pc}
   21034:	cmp	r1, #125	; 0x7d
   21038:	movne	r0, r4
   2103c:	pop	{r4, r5, r6, r7, fp, pc}

00021040 <flatcc_json_parser_unmatched_symbol@@Base>:
   21040:	push	{r4, r5, fp, lr}
   21044:	add	fp, sp, #8
   21048:	mov	r4, r2
   2104c:	mov	r5, r0
   21050:	ldrb	r0, [r0, #8]
   21054:	tst	r0, #1
   21058:	bne	21070 <flatcc_json_parser_unmatched_symbol@@Base+0x30>
   2105c:	mov	r0, r5
   21060:	mov	r2, r4
   21064:	mov	r3, #13
   21068:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   2106c:	pop	{r4, r5, fp, pc}
   21070:	mov	r0, r5
   21074:	mov	r2, r4
   21078:	bl	210dc <flatcc_json_parser_unmatched_symbol@@Base+0x9c>
   2107c:	mov	r1, r0
   21080:	mov	r0, r5
   21084:	mov	r2, r4
   21088:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   2108c:	mov	r1, r0
   21090:	cmp	r0, r4
   21094:	beq	210c8 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   21098:	ldrb	r0, [r1]
   2109c:	cmp	r0, #58	; 0x3a
   210a0:	bne	210c8 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   210a4:	add	r1, r1, #1
   210a8:	mov	r0, r5
   210ac:	mov	r2, r4
   210b0:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   210b4:	mov	r1, r0
   210b8:	mov	r0, r5
   210bc:	mov	r2, r4
   210c0:	pop	{r4, r5, fp, lr}
   210c4:	b	211f4 <flatcc_json_parser_generic_json@@Base>
   210c8:	mov	r0, r5
   210cc:	mov	r2, r4
   210d0:	mov	r3, #4
   210d4:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   210d8:	pop	{r4, r5, fp, pc}
   210dc:	push	{fp, lr}
   210e0:	mov	fp, sp
   210e4:	mov	lr, r1
   210e8:	ldr	r1, [r0, #12]
   210ec:	cmp	r1, #0
   210f0:	beq	2119c <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
   210f4:	cmp	lr, r2
   210f8:	beq	211ec <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   210fc:	ldrb	r3, [lr]
   21100:	mov	ip, #0
   21104:	cmp	r3, #33	; 0x21
   21108:	bcc	21178 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   2110c:	add	r1, lr, #1
   21110:	mov	ip, r3
   21114:	mov	lr, r1
   21118:	uxtb	r1, r3
   2111c:	cmp	r1, #46	; 0x2e
   21120:	cmpne	r1, #95	; 0x5f
   21124:	bne	21144 <flatcc_json_parser_unmatched_symbol@@Base+0x104>
   21128:	cmp	r2, lr
   2112c:	beq	21178 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   21130:	mov	r1, lr
   21134:	ldrb	r3, [r1], #1
   21138:	cmp	r3, #33	; 0x21
   2113c:	bcs	21110 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
   21140:	b	21178 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   21144:	sxtb	r1, ip
   21148:	cmp	r1, #0
   2114c:	bmi	21128 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   21150:	sub	r1, ip, #48	; 0x30
   21154:	uxtb	r1, r1
   21158:	cmp	r1, #9
   2115c:	bls	21128 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   21160:	orr	r1, ip, #32
   21164:	sub	r1, r1, #97	; 0x61
   21168:	uxtb	r1, r1
   2116c:	cmp	r1, #26
   21170:	bcc	21128 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   21174:	sub	lr, lr, #1
   21178:	uxtb	r1, ip
   2117c:	cmp	r1, #46	; 0x2e
   21180:	bne	211ec <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   21184:	mov	r1, lr
   21188:	mov	r3, #5
   2118c:	b	211e4 <flatcc_json_parser_unmatched_symbol@@Base+0x1a4>
   21190:	cmp	r1, #34	; 0x22
   21194:	beq	211d0 <flatcc_json_parser_unmatched_symbol@@Base+0x190>
   21198:	add	lr, lr, #1
   2119c:	cmp	lr, r2
   211a0:	beq	211dc <flatcc_json_parser_unmatched_symbol@@Base+0x19c>
   211a4:	ldrb	r1, [lr]
   211a8:	cmp	r1, #92	; 0x5c
   211ac:	bne	21190 <flatcc_json_parser_unmatched_symbol@@Base+0x150>
   211b0:	sub	r1, r2, lr
   211b4:	cmp	r1, #2
   211b8:	blt	211c4 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   211bc:	add	lr, lr, #1
   211c0:	b	21198 <flatcc_json_parser_unmatched_symbol@@Base+0x158>
   211c4:	ldrb	r1, [lr]
   211c8:	cmp	r1, #34	; 0x22
   211cc:	bne	211dc <flatcc_json_parser_unmatched_symbol@@Base+0x19c>
   211d0:	add	lr, lr, #1
   211d4:	mov	r0, lr
   211d8:	pop	{fp, pc}
   211dc:	mov	r1, lr
   211e0:	mov	r3, #20
   211e4:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   211e8:	mov	lr, r0
   211ec:	mov	r0, lr
   211f0:	pop	{fp, pc}

000211f4 <flatcc_json_parser_generic_json@@Base>:
   211f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211f8:	add	fp, sp, #28
   211fc:	sub	sp, sp, #524	; 0x20c
   21200:	mov	r7, r1
   21204:	mov	r6, #0
   21208:	str	r6, [sp]
   2120c:	cmp	r1, r2
   21210:	beq	214bc <flatcc_json_parser_generic_json@@Base+0x2c8>
   21214:	mov	r4, r2
   21218:	mov	r5, r0
   2121c:	add	sl, sp, #8
   21220:	sub	r8, sl, #1
   21224:	mov	r9, sp
   21228:	mov	r0, sl
   2122c:	cmp	r6, #0
   21230:	beq	2129c <flatcc_json_parser_generic_json@@Base+0xa8>
   21234:	ldrb	r0, [r0, #-1]
   21238:	cmp	r0, #125	; 0x7d
   2123c:	bne	2129c <flatcc_json_parser_generic_json@@Base+0xa8>
   21240:	mov	r0, r5
   21244:	mov	r1, r7
   21248:	mov	r2, r4
   2124c:	bl	21724 <flatcc_json_parser_float@@Base+0x140>
   21250:	mov	r1, r0
   21254:	mov	r0, r5
   21258:	mov	r2, r4
   2125c:	bl	210dc <flatcc_json_parser_unmatched_symbol@@Base+0x9c>
   21260:	mov	r1, r0
   21264:	mov	r0, r5
   21268:	mov	r2, r4
   2126c:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21270:	mov	r1, r0
   21274:	cmp	r0, r4
   21278:	beq	214c8 <flatcc_json_parser_generic_json@@Base+0x2d4>
   2127c:	ldrb	r0, [r1]
   21280:	cmp	r0, #58	; 0x3a
   21284:	bne	214d8 <flatcc_json_parser_generic_json@@Base+0x2e4>
   21288:	add	r1, r1, #1
   2128c:	mov	r0, r5
   21290:	mov	r2, r4
   21294:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21298:	mov	r7, r0
   2129c:	ldrb	r0, [r7]
   212a0:	sub	r1, r0, #48	; 0x30
   212a4:	cmp	r1, #10
   212a8:	bcs	21320 <flatcc_json_parser_generic_json@@Base+0x12c>
   212ac:	mov	r0, r5
   212b0:	mov	r1, r7
   212b4:	mov	r2, r4
   212b8:	bl	217d0 <flatcc_json_parser_float@@Base+0x1ec>
   212bc:	mov	r7, r0
   212c0:	cmp	r6, #0
   212c4:	cmpne	r7, r4
   212c8:	beq	21480 <flatcc_json_parser_generic_json@@Base+0x28c>
   212cc:	ldrb	r0, [r8, r6]
   212d0:	cmp	r0, #93	; 0x5d
   212d4:	bne	212f0 <flatcc_json_parser_generic_json@@Base+0xfc>
   212d8:	mov	r0, r5
   212dc:	mov	r1, r7
   212e0:	mov	r2, r4
   212e4:	mov	r3, r9
   212e8:	bl	21a34 <flatcc_json_parser_float@@Base+0x450>
   212ec:	b	21304 <flatcc_json_parser_generic_json@@Base+0x110>
   212f0:	mov	r0, r5
   212f4:	mov	r1, r7
   212f8:	mov	r2, r4
   212fc:	mov	r3, r9
   21300:	bl	21af4 <flatcc_json_parser_float@@Base+0x510>
   21304:	mov	r7, r0
   21308:	sub	r6, r6, #1
   2130c:	ldr	r0, [sp]
   21310:	cmp	r0, #0
   21314:	beq	212c0 <flatcc_json_parser_generic_json@@Base+0xcc>
   21318:	add	r6, r6, #1
   2131c:	b	2144c <flatcc_json_parser_generic_json@@Base+0x258>
   21320:	cmp	r0, #90	; 0x5a
   21324:	bgt	2133c <flatcc_json_parser_generic_json@@Base+0x148>
   21328:	cmp	r0, #34	; 0x22
   2132c:	beq	2138c <flatcc_json_parser_generic_json@@Base+0x198>
   21330:	cmp	r0, #45	; 0x2d
   21334:	beq	212ac <flatcc_json_parser_generic_json@@Base+0xb8>
   21338:	b	2145c <flatcc_json_parser_generic_json@@Base+0x268>
   2133c:	cmp	r0, #91	; 0x5b
   21340:	beq	21410 <flatcc_json_parser_generic_json@@Base+0x21c>
   21344:	cmp	r0, #123	; 0x7b
   21348:	bne	2145c <flatcc_json_parser_generic_json@@Base+0x268>
   2134c:	cmp	r6, #512	; 0x200
   21350:	beq	214e8 <flatcc_json_parser_generic_json@@Base+0x2f4>
   21354:	mov	r0, #125	; 0x7d
   21358:	strb	r0, [sl, r6]
   2135c:	add	r1, r7, #1
   21360:	mov	r0, r5
   21364:	mov	r2, r4
   21368:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   2136c:	mov	r7, r0
   21370:	add	r6, r6, #1
   21374:	cmp	r0, r4
   21378:	beq	2144c <flatcc_json_parser_generic_json@@Base+0x258>
   2137c:	ldrb	r0, [r7]
   21380:	cmp	r0, #125	; 0x7d
   21384:	beq	212c0 <flatcc_json_parser_generic_json@@Base+0xcc>
   21388:	b	2144c <flatcc_json_parser_generic_json@@Base+0x258>
   2138c:	mov	r0, r5
   21390:	mov	r1, r7
   21394:	mov	r2, r4
   21398:	bl	21778 <flatcc_json_parser_float@@Base+0x194>
   2139c:	mov	r1, r0
   213a0:	cmp	r0, r4
   213a4:	beq	213fc <flatcc_json_parser_generic_json@@Base+0x208>
   213a8:	add	r7, sp, #4
   213ac:	b	213cc <flatcc_json_parser_generic_json@@Base+0x1d8>
   213b0:	mov	r0, r5
   213b4:	mov	r2, r4
   213b8:	mov	r3, r7
   213bc:	bl	20a44 <flatcc_json_parser_string_escape@@Base>
   213c0:	mov	r1, r0
   213c4:	cmp	r0, r4
   213c8:	beq	213fc <flatcc_json_parser_generic_json@@Base+0x208>
   213cc:	ldrb	r0, [r1]
   213d0:	cmp	r0, #34	; 0x22
   213d4:	beq	213fc <flatcc_json_parser_generic_json@@Base+0x208>
   213d8:	mov	r0, r5
   213dc:	mov	r2, r4
   213e0:	bl	208d8 <flatcc_json_parser_string_part@@Base>
   213e4:	mov	r1, r0
   213e8:	cmp	r0, r4
   213ec:	beq	213b0 <flatcc_json_parser_generic_json@@Base+0x1bc>
   213f0:	ldrb	r0, [r1]
   213f4:	cmp	r0, #34	; 0x22
   213f8:	bne	213b0 <flatcc_json_parser_generic_json@@Base+0x1bc>
   213fc:	mov	r0, r5
   21400:	mov	r2, r4
   21404:	bl	217a4 <flatcc_json_parser_float@@Base+0x1c0>
   21408:	mov	r7, r0
   2140c:	b	212c0 <flatcc_json_parser_generic_json@@Base+0xcc>
   21410:	cmp	r6, #512	; 0x200
   21414:	beq	214e8 <flatcc_json_parser_generic_json@@Base+0x2f4>
   21418:	mov	r0, #93	; 0x5d
   2141c:	strb	r0, [sl, r6]
   21420:	add	r1, r7, #1
   21424:	mov	r0, r5
   21428:	mov	r2, r4
   2142c:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21430:	mov	r7, r0
   21434:	add	r6, r6, #1
   21438:	cmp	r0, r4
   2143c:	beq	2144c <flatcc_json_parser_generic_json@@Base+0x258>
   21440:	ldrb	r0, [r7]
   21444:	cmp	r0, #93	; 0x5d
   21448:	beq	212c0 <flatcc_json_parser_generic_json@@Base+0xcc>
   2144c:	add	r0, sl, r6
   21450:	cmp	r7, r4
   21454:	bne	2122c <flatcc_json_parser_generic_json@@Base+0x38>
   21458:	b	214bc <flatcc_json_parser_generic_json@@Base+0x2c8>
   2145c:	mov	r0, r5
   21460:	mov	r1, r7
   21464:	mov	r2, r4
   21468:	bl	20e28 <flatcc_json_parser_skip_constant@@Base>
   2146c:	mov	r1, r0
   21470:	cmp	r7, r0
   21474:	beq	214fc <flatcc_json_parser_generic_json@@Base+0x308>
   21478:	mov	r7, r1
   2147c:	b	212c0 <flatcc_json_parser_generic_json@@Base+0xcc>
   21480:	cmp	r7, r4
   21484:	bne	214bc <flatcc_json_parser_generic_json@@Base+0x2c8>
   21488:	cmp	r6, #0
   2148c:	beq	214bc <flatcc_json_parser_generic_json@@Base+0x2c8>
   21490:	add	r0, sp, #8
   21494:	add	r0, r0, r6
   21498:	ldrb	r0, [r0, #-1]
   2149c:	mov	r3, #10
   214a0:	cmp	r0, #93	; 0x5d
   214a4:	movweq	r3, #9
   214a8:	mov	r0, r5
   214ac:	mov	r1, r7
   214b0:	mov	r2, r4
   214b4:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   214b8:	mov	r7, r0
   214bc:	mov	r0, r7
   214c0:	sub	sp, fp, #28
   214c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   214c8:	mov	r0, r5
   214cc:	mov	r2, r4
   214d0:	mov	r3, #10
   214d4:	b	214b4 <flatcc_json_parser_generic_json@@Base+0x2c0>
   214d8:	mov	r0, r5
   214dc:	mov	r2, r4
   214e0:	mov	r3, #4
   214e4:	b	214b4 <flatcc_json_parser_generic_json@@Base+0x2c0>
   214e8:	mov	r0, r5
   214ec:	mov	r1, r7
   214f0:	mov	r2, r4
   214f4:	mov	r3, #2
   214f8:	b	214b4 <flatcc_json_parser_generic_json@@Base+0x2c0>
   214fc:	mov	r0, r5
   21500:	mov	r2, r4
   21504:	mov	r3, #5
   21508:	b	214b4 <flatcc_json_parser_generic_json@@Base+0x2c0>

0002150c <flatcc_json_parser_double@@Base>:
   2150c:	push	{r4, r5, r6, r7, fp, lr}
   21510:	add	fp, sp, #16
   21514:	mov	r5, r1
   21518:	mov	r6, r0
   2151c:	mov	r0, #0
   21520:	str	r0, [r3]
   21524:	str	r0, [r3, #4]
   21528:	cmp	r1, r2
   2152c:	beq	215c0 <flatcc_json_parser_double@@Base+0xb4>
   21530:	mov	r7, r3
   21534:	mov	r4, r2
   21538:	mov	r0, r5
   2153c:	ldrb	r1, [r0], #1
   21540:	cmp	r1, #45	; 0x2d
   21544:	movne	r0, r5
   21548:	sub	r2, r2, r0
   2154c:	cmp	r2, #2
   21550:	blt	21580 <flatcc_json_parser_double@@Base+0x74>
   21554:	sub	r1, r1, #45	; 0x2d
   21558:	clz	r1, r1
   2155c:	lsr	r1, r1, #5
   21560:	ldrb	r1, [r5, r1]
   21564:	cmp	r1, #46	; 0x2e
   21568:	beq	215c8 <flatcc_json_parser_double@@Base+0xbc>
   2156c:	cmp	r1, #48	; 0x30
   21570:	bne	21580 <flatcc_json_parser_double@@Base+0x74>
   21574:	ldrb	r0, [r0, #1]
   21578:	cmp	r0, #48	; 0x30
   2157c:	beq	215c8 <flatcc_json_parser_double@@Base+0xbc>
   21580:	sub	r1, r4, r5
   21584:	mov	r0, r5
   21588:	mov	r2, r7
   2158c:	bl	215e0 <flatcc_json_parser_double@@Base+0xd4>
   21590:	cmp	r0, #0
   21594:	cmpne	r0, r5
   21598:	bne	215dc <flatcc_json_parser_double@@Base+0xd0>
   2159c:	vldr	d0, [r7]
   215a0:	bl	12ae0 <__isinf@plt>
   215a4:	cmp	r0, #0
   215a8:	beq	215c8 <flatcc_json_parser_double@@Base+0xbc>
   215ac:	mov	r0, r6
   215b0:	mov	r1, r5
   215b4:	mov	r2, r4
   215b8:	mov	r3, #7
   215bc:	b	215d8 <flatcc_json_parser_double@@Base+0xcc>
   215c0:	mov	r0, r5
   215c4:	pop	{r4, r5, r6, r7, fp, pc}
   215c8:	mov	r0, r6
   215cc:	mov	r1, r5
   215d0:	mov	r2, r4
   215d4:	mov	r3, #6
   215d8:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   215dc:	pop	{r4, r5, r6, r7, fp, pc}
   215e0:	b	22f18 <flatcc_json_parser_struct_as_root@@Base+0xbc>

000215e4 <flatcc_json_parser_float@@Base>:
   215e4:	push	{r4, r5, r6, r7, fp, lr}
   215e8:	add	fp, sp, #16
   215ec:	mov	r5, r1
   215f0:	mov	r6, r0
   215f4:	mov	r0, #0
   215f8:	str	r0, [r3]
   215fc:	cmp	r1, r2
   21600:	beq	21694 <flatcc_json_parser_float@@Base+0xb0>
   21604:	mov	r7, r3
   21608:	mov	r4, r2
   2160c:	mov	r0, r5
   21610:	ldrb	r1, [r0], #1
   21614:	cmp	r1, #45	; 0x2d
   21618:	movne	r0, r5
   2161c:	sub	r2, r2, r0
   21620:	cmp	r2, #2
   21624:	blt	21654 <flatcc_json_parser_float@@Base+0x70>
   21628:	sub	r1, r1, #45	; 0x2d
   2162c:	clz	r1, r1
   21630:	lsr	r1, r1, #5
   21634:	ldrb	r1, [r5, r1]
   21638:	cmp	r1, #46	; 0x2e
   2163c:	beq	2169c <flatcc_json_parser_float@@Base+0xb8>
   21640:	cmp	r1, #48	; 0x30
   21644:	bne	21654 <flatcc_json_parser_float@@Base+0x70>
   21648:	ldrb	r0, [r0, #1]
   2164c:	cmp	r0, #48	; 0x30
   21650:	beq	2169c <flatcc_json_parser_float@@Base+0xb8>
   21654:	sub	r1, r4, r5
   21658:	mov	r0, r5
   2165c:	mov	r2, r7
   21660:	bl	216b4 <flatcc_json_parser_float@@Base+0xd0>
   21664:	cmp	r0, #0
   21668:	cmpne	r0, r5
   2166c:	bne	216b0 <flatcc_json_parser_float@@Base+0xcc>
   21670:	vldr	s0, [r7]
   21674:	bl	12ad4 <__isinff@plt>
   21678:	cmp	r0, #0
   2167c:	beq	2169c <flatcc_json_parser_float@@Base+0xb8>
   21680:	mov	r0, r6
   21684:	mov	r1, r5
   21688:	mov	r2, r4
   2168c:	mov	r3, #7
   21690:	b	216ac <flatcc_json_parser_float@@Base+0xc8>
   21694:	mov	r0, r5
   21698:	pop	{r4, r5, r6, r7, fp, pc}
   2169c:	mov	r0, r6
   216a0:	mov	r1, r5
   216a4:	mov	r2, r4
   216a8:	mov	r3, #6
   216ac:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   216b0:	pop	{r4, r5, r6, r7, fp, pc}
   216b4:	push	{r4, r5, r6, sl, fp, lr}
   216b8:	add	fp, sp, #16
   216bc:	vpush	{d8-d9}
   216c0:	sub	sp, sp, #8
   216c4:	mov	r4, r2
   216c8:	mov	r5, r0
   216cc:	mov	r2, sp
   216d0:	bl	215e0 <flatcc_json_parser_double@@Base+0xd4>
   216d4:	mov	r6, r0
   216d8:	vldr	d16, [sp]
   216dc:	add	r0, pc, #56	; 0x38
   216e0:	vcmpe.f64	d16, #0.0
   216e4:	vmrs	APSR_nzcv, fpscr
   216e8:	addmi	r0, r0, #4
   216ec:	vcvt.f32.f64	s16, d16
   216f0:	vldr	s18, [r0]
   216f4:	vmov.f32	s0, s16
   216f8:	bl	12ad4 <__isinff@plt>
   216fc:	cmp	r0, #0
   21700:	vseleq.f32	s0, s16, s18
   21704:	vstr	s0, [r4]
   21708:	movne	r6, r5
   2170c:	mov	r0, r6
   21710:	sub	sp, fp, #32
   21714:	vpop	{d8-d9}
   21718:	pop	{r4, r5, r6, sl, fp, pc}
   2171c:	svcvc	0x00800000
   21720:			; <UNDEFINED> instruction: 0xff800000
   21724:	push	{fp, lr}
   21728:	mov	fp, sp
   2172c:	cmp	r1, r2
   21730:	beq	21770 <flatcc_json_parser_float@@Base+0x18c>
   21734:	ldrb	r3, [r1]
   21738:	cmp	r3, #46	; 0x2e
   2173c:	beq	2175c <flatcc_json_parser_float@@Base+0x178>
   21740:	cmp	r3, #34	; 0x22
   21744:	bne	21768 <flatcc_json_parser_float@@Base+0x184>
   21748:	mov	r2, #0
   2174c:	str	r2, [r0, #12]
   21750:	add	r1, r1, #1
   21754:	mov	r0, r1
   21758:	pop	{fp, pc}
   2175c:	mov	r3, #5
   21760:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21764:	pop	{fp, pc}
   21768:	mov	r2, #1
   2176c:	str	r2, [r0, #12]
   21770:	mov	r0, r1
   21774:	pop	{fp, pc}
   21778:	push	{fp, lr}
   2177c:	mov	fp, sp
   21780:	cmp	r1, r2
   21784:	beq	21798 <flatcc_json_parser_float@@Base+0x1b4>
   21788:	ldrb	r3, [r1]
   2178c:	cmp	r3, #34	; 0x22
   21790:	addeq	r0, r1, #1
   21794:	popeq	{fp, pc}
   21798:	mov	r3, #16
   2179c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   217a0:	pop	{fp, pc}
   217a4:	push	{fp, lr}
   217a8:	mov	fp, sp
   217ac:	cmp	r1, r2
   217b0:	beq	217c4 <flatcc_json_parser_float@@Base+0x1e0>
   217b4:	ldrb	r3, [r1]
   217b8:	cmp	r3, #34	; 0x22
   217bc:	addeq	r0, r1, #1
   217c0:	popeq	{fp, pc}
   217c4:	mov	r3, #20
   217c8:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   217cc:	pop	{fp, pc}
   217d0:	push	{fp, lr}
   217d4:	mov	fp, sp
   217d8:	mov	lr, r1
   217dc:	cmp	r1, r2
   217e0:	beq	21a08 <flatcc_json_parser_float@@Base+0x424>
   217e4:	ldrb	r1, [lr]
   217e8:	cmp	r1, #45	; 0x2d
   217ec:	bne	21800 <flatcc_json_parser_float@@Base+0x21c>
   217f0:	add	lr, lr, #1
   217f4:	cmp	lr, r2
   217f8:	beq	21a1c <flatcc_json_parser_float@@Base+0x438>
   217fc:	ldrb	r1, [lr]
   21800:	cmp	r1, #48	; 0x30
   21804:	bne	21818 <flatcc_json_parser_float@@Base+0x234>
   21808:	add	lr, lr, #1
   2180c:	cmp	lr, r2
   21810:	bne	21858 <flatcc_json_parser_float@@Base+0x274>
   21814:	b	218a8 <flatcc_json_parser_float@@Base+0x2c4>
   21818:	sub	r1, r1, #49	; 0x31
   2181c:	uxtb	r1, r1
   21820:	cmp	r1, #8
   21824:	bhi	21a1c <flatcc_json_parser_float@@Base+0x438>
   21828:	add	r1, lr, #1
   2182c:	mov	lr, r1
   21830:	cmp	r2, r1
   21834:	beq	21850 <flatcc_json_parser_float@@Base+0x26c>
   21838:	mov	r1, lr
   2183c:	ldrb	r3, [r1], #1
   21840:	sub	r3, r3, #48	; 0x30
   21844:	uxtb	r3, r3
   21848:	cmp	r3, #10
   2184c:	bcc	2182c <flatcc_json_parser_float@@Base+0x248>
   21850:	cmp	lr, r2
   21854:	beq	218a8 <flatcc_json_parser_float@@Base+0x2c4>
   21858:	ldrb	r1, [lr]
   2185c:	cmp	r1, #46	; 0x2e
   21860:	bne	218a8 <flatcc_json_parser_float@@Base+0x2c4>
   21864:	mov	r1, lr
   21868:	ldrb	r3, [r1, #1]!
   2186c:	sub	r3, r3, #48	; 0x30
   21870:	uxtb	r3, r3
   21874:	cmp	r3, #10
   21878:	bcs	21a20 <flatcc_json_parser_float@@Base+0x43c>
   2187c:	add	lr, lr, #2
   21880:	cmp	lr, r2
   21884:	beq	218a8 <flatcc_json_parser_float@@Base+0x2c4>
   21888:	ldrb	r1, [lr]
   2188c:	sub	r1, r1, #48	; 0x30
   21890:	uxtb	r1, r1
   21894:	cmp	r1, #9
   21898:	bhi	218a8 <flatcc_json_parser_float@@Base+0x2c4>
   2189c:	add	lr, lr, #1
   218a0:	cmp	r2, lr
   218a4:	bne	21888 <flatcc_json_parser_float@@Base+0x2a4>
   218a8:	cmp	lr, r2
   218ac:	beq	21920 <flatcc_json_parser_float@@Base+0x33c>
   218b0:	ldrb	r1, [lr]
   218b4:	orr	r1, r1, #32
   218b8:	cmp	r1, #101	; 0x65
   218bc:	bne	21920 <flatcc_json_parser_float@@Base+0x33c>
   218c0:	add	r1, lr, #1
   218c4:	cmp	r1, r2
   218c8:	beq	21a20 <flatcc_json_parser_float@@Base+0x43c>
   218cc:	ldrb	ip, [r1]
   218d0:	cmp	ip, #45	; 0x2d
   218d4:	cmpne	ip, #43	; 0x2b
   218d8:	addeq	r1, lr, #2
   218dc:	cmp	r1, r2
   218e0:	beq	21a20 <flatcc_json_parser_float@@Base+0x43c>
   218e4:	ldrb	r3, [r1]
   218e8:	sub	r3, r3, #48	; 0x30
   218ec:	uxtb	r3, r3
   218f0:	cmp	r3, #9
   218f4:	bhi	21a20 <flatcc_json_parser_float@@Base+0x43c>
   218f8:	add	r1, r1, #1
   218fc:	mov	lr, r1
   21900:	cmp	r2, r1
   21904:	beq	21920 <flatcc_json_parser_float@@Base+0x33c>
   21908:	mov	r1, lr
   2190c:	ldrb	r3, [r1], #1
   21910:	sub	r3, r3, #48	; 0x30
   21914:	uxtb	r3, r3
   21918:	cmp	r3, #10
   2191c:	bcc	218fc <flatcc_json_parser_float@@Base+0x318>
   21920:	cmp	lr, r2
   21924:	beq	21a1c <flatcc_json_parser_float@@Base+0x438>
   21928:	ldrb	ip, [lr]
   2192c:	sub	r1, ip, #9
   21930:	cmp	r1, #49	; 0x31
   21934:	bhi	21a10 <flatcc_json_parser_float@@Base+0x42c>
   21938:	add	r3, pc, #0
   2193c:	ldr	pc, [r3, r1, lsl #2]
   21940:	andeq	r1, r2, r8, lsl #20
   21944:	andeq	r1, r2, r8, lsl #20
   21948:	andeq	r1, r2, r8, lsl #20
   2194c:	andeq	r1, r2, ip, lsl sl
   21950:	andeq	r1, r2, r8, lsl #20
   21954:	andeq	r1, r2, ip, lsl sl
   21958:	andeq	r1, r2, ip, lsl sl
   2195c:	andeq	r1, r2, ip, lsl sl
   21960:	andeq	r1, r2, ip, lsl sl
   21964:	andeq	r1, r2, ip, lsl sl
   21968:	andeq	r1, r2, ip, lsl sl
   2196c:	andeq	r1, r2, ip, lsl sl
   21970:	andeq	r1, r2, ip, lsl sl
   21974:	andeq	r1, r2, ip, lsl sl
   21978:	andeq	r1, r2, ip, lsl sl
   2197c:	andeq	r1, r2, ip, lsl sl
   21980:	andeq	r1, r2, ip, lsl sl
   21984:	andeq	r1, r2, ip, lsl sl
   21988:	andeq	r1, r2, ip, lsl sl
   2198c:	andeq	r1, r2, ip, lsl sl
   21990:	andeq	r1, r2, ip, lsl sl
   21994:	andeq	r1, r2, ip, lsl sl
   21998:	andeq	r1, r2, ip, lsl sl
   2199c:	andeq	r1, r2, r8, lsl #20
   219a0:	andeq	r1, r2, ip, lsl sl
   219a4:	andeq	r1, r2, ip, lsl sl
   219a8:	andeq	r1, r2, ip, lsl sl
   219ac:	andeq	r1, r2, ip, lsl sl
   219b0:	andeq	r1, r2, ip, lsl sl
   219b4:	andeq	r1, r2, ip, lsl sl
   219b8:	andeq	r1, r2, ip, lsl sl
   219bc:	andeq	r1, r2, ip, lsl sl
   219c0:	andeq	r1, r2, ip, lsl sl
   219c4:	andeq	r1, r2, ip, lsl sl
   219c8:	andeq	r1, r2, ip, lsl sl
   219cc:	andeq	r1, r2, r8, lsl #20
   219d0:	andeq	r1, r2, ip, lsl sl
   219d4:	andeq	r1, r2, ip, lsl sl
   219d8:	andeq	r1, r2, ip, lsl sl
   219dc:	andeq	r1, r2, ip, lsl sl
   219e0:	andeq	r1, r2, ip, lsl sl
   219e4:	andeq	r1, r2, ip, lsl sl
   219e8:	andeq	r1, r2, ip, lsl sl
   219ec:	andeq	r1, r2, ip, lsl sl
   219f0:	andeq	r1, r2, ip, lsl sl
   219f4:	andeq	r1, r2, ip, lsl sl
   219f8:	andeq	r1, r2, ip, lsl sl
   219fc:	andeq	r1, r2, ip, lsl sl
   21a00:	andeq	r1, r2, ip, lsl sl
   21a04:	andeq	r1, r2, r8, lsl #20
   21a08:	mov	r0, lr
   21a0c:	pop	{fp, pc}
   21a10:	cmp	ip, #93	; 0x5d
   21a14:	cmpne	ip, #125	; 0x7d
   21a18:	beq	21a08 <flatcc_json_parser_float@@Base+0x424>
   21a1c:	mov	r1, lr
   21a20:	mov	r3, #6
   21a24:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21a28:	mov	lr, r0
   21a2c:	mov	r0, lr
   21a30:	pop	{fp, pc}
   21a34:	push	{r4, r5, r6, sl, fp, lr}
   21a38:	add	fp, sp, #16
   21a3c:	mov	r6, r3
   21a40:	mov	r4, r2
   21a44:	mov	r5, r0
   21a48:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21a4c:	mov	r1, r0
   21a50:	cmp	r0, r4
   21a54:	beq	21a98 <flatcc_json_parser_float@@Base+0x4b4>
   21a58:	ldrb	r0, [r1]
   21a5c:	cmp	r0, #44	; 0x2c
   21a60:	bne	21aa0 <flatcc_json_parser_float@@Base+0x4bc>
   21a64:	add	r1, r1, #1
   21a68:	mov	r0, r5
   21a6c:	mov	r2, r4
   21a70:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21a74:	mov	r1, r0
   21a78:	cmp	r0, r4
   21a7c:	beq	21ac8 <flatcc_json_parser_float@@Base+0x4e4>
   21a80:	ldrb	r0, [r1]
   21a84:	cmp	r0, #93	; 0x5d
   21a88:	bne	21ae4 <flatcc_json_parser_float@@Base+0x500>
   21a8c:	mov	r0, #0
   21a90:	str	r0, [r6]
   21a94:	b	21ab4 <flatcc_json_parser_float@@Base+0x4d0>
   21a98:	mov	r0, #0
   21a9c:	b	21ae8 <flatcc_json_parser_float@@Base+0x504>
   21aa0:	mov	r0, #0
   21aa4:	str	r0, [r6]
   21aa8:	ldrb	r0, [r1]
   21aac:	cmp	r0, #93	; 0x5d
   21ab0:	bne	21ad0 <flatcc_json_parser_float@@Base+0x4ec>
   21ab4:	add	r1, r1, #1
   21ab8:	mov	r0, r5
   21abc:	mov	r2, r4
   21ac0:	pop	{r4, r5, r6, sl, fp, lr}
   21ac4:	b	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21ac8:	mov	r0, #0
   21acc:	str	r0, [r6]
   21ad0:	mov	r0, r5
   21ad4:	mov	r2, r4
   21ad8:	mov	r3, #9
   21adc:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21ae0:	pop	{r4, r5, r6, sl, fp, pc}
   21ae4:	mov	r0, #1
   21ae8:	str	r0, [r6]
   21aec:	mov	r0, r1
   21af0:	pop	{r4, r5, r6, sl, fp, pc}
   21af4:	push	{r4, r5, r6, sl, fp, lr}
   21af8:	add	fp, sp, #16
   21afc:	mov	r6, r3
   21b00:	mov	r4, r2
   21b04:	mov	r5, r0
   21b08:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21b0c:	mov	r1, r0
   21b10:	cmp	r0, r4
   21b14:	beq	21b58 <flatcc_json_parser_float@@Base+0x574>
   21b18:	ldrb	r0, [r1]
   21b1c:	cmp	r0, #44	; 0x2c
   21b20:	bne	21b60 <flatcc_json_parser_float@@Base+0x57c>
   21b24:	add	r1, r1, #1
   21b28:	mov	r0, r5
   21b2c:	mov	r2, r4
   21b30:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21b34:	mov	r1, r0
   21b38:	cmp	r0, r4
   21b3c:	beq	21b88 <flatcc_json_parser_float@@Base+0x5a4>
   21b40:	ldrb	r0, [r1]
   21b44:	cmp	r0, #125	; 0x7d
   21b48:	bne	21ba4 <flatcc_json_parser_float@@Base+0x5c0>
   21b4c:	mov	r0, #0
   21b50:	str	r0, [r6]
   21b54:	b	21b74 <flatcc_json_parser_float@@Base+0x590>
   21b58:	mov	r0, #0
   21b5c:	b	21ba8 <flatcc_json_parser_float@@Base+0x5c4>
   21b60:	mov	r0, #0
   21b64:	str	r0, [r6]
   21b68:	ldrb	r0, [r1]
   21b6c:	cmp	r0, #125	; 0x7d
   21b70:	bne	21b90 <flatcc_json_parser_float@@Base+0x5ac>
   21b74:	add	r1, r1, #1
   21b78:	mov	r0, r5
   21b7c:	mov	r2, r4
   21b80:	pop	{r4, r5, r6, sl, fp, lr}
   21b84:	b	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21b88:	mov	r0, #0
   21b8c:	str	r0, [r6]
   21b90:	mov	r0, r5
   21b94:	mov	r2, r4
   21b98:	mov	r3, #10
   21b9c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21ba0:	pop	{r4, r5, r6, sl, fp, pc}
   21ba4:	mov	r0, #1
   21ba8:	str	r0, [r6]
   21bac:	mov	r0, r1
   21bb0:	pop	{r4, r5, r6, sl, fp, pc}

00021bb4 <flatcc_json_parser_integer@@Base>:
   21bb4:	push	{r4, r5, r6, r7, fp, lr}
   21bb8:	add	fp, sp, #16
   21bbc:	cmp	r1, r2
   21bc0:	beq	21c74 <flatcc_json_parser_integer@@Base+0xc0>
   21bc4:	ldrb	r7, [r1]
   21bc8:	sub	r7, r7, #45	; 0x2d
   21bcc:	clz	r7, r7
   21bd0:	lsr	r7, r7, #5
   21bd4:	str	r7, [r3]
   21bd8:	add	ip, r1, r7
   21bdc:	mov	r4, #0
   21be0:	cmp	ip, r2
   21be4:	beq	21c7c <flatcc_json_parser_integer@@Base+0xc8>
   21be8:	mov	lr, #10
   21bec:	mov	r5, #0
   21bf0:	ldrb	r6, [ip]
   21bf4:	sub	r7, r6, #48	; 0x30
   21bf8:	uxtb	r7, r7
   21bfc:	cmp	r7, #9
   21c00:	bhi	21c94 <flatcc_json_parser_integer@@Base+0xe0>
   21c04:	add	r7, r5, r5, lsl #2
   21c08:	lsl	r7, r7, #1
   21c0c:	umlal	r6, r7, r4, lr
   21c10:	subs	r6, r6, #48	; 0x30
   21c14:	sbc	r7, r7, #0
   21c18:	subs	r4, r6, r4
   21c1c:	sbcs	r4, r7, r5
   21c20:	bcc	21ca4 <flatcc_json_parser_integer@@Base+0xf0>
   21c24:	add	ip, ip, #1
   21c28:	cmp	r2, ip
   21c2c:	mov	r4, r6
   21c30:	mov	r5, r7
   21c34:	bne	21bf0 <flatcc_json_parser_integer@@Base+0x3c>
   21c38:	mov	r3, #0
   21c3c:	mov	r4, r6
   21c40:	mov	r5, r7
   21c44:	cmp	ip, r1
   21c48:	beq	21c8c <flatcc_json_parser_integer@@Base+0xd8>
   21c4c:	cmp	r3, #0
   21c50:	beq	21cc8 <flatcc_json_parser_integer@@Base+0x114>
   21c54:	ldrb	r1, [ip]
   21c58:	cmp	r1, #46	; 0x2e
   21c5c:	cmpne	r1, #101	; 0x65
   21c60:	bne	21cc0 <flatcc_json_parser_integer@@Base+0x10c>
   21c64:	mov	r1, ip
   21c68:	mov	r3, #12
   21c6c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21c70:	pop	{r4, r5, r6, r7, fp, pc}
   21c74:	mov	r0, r1
   21c78:	pop	{r4, r5, r6, r7, fp, pc}
   21c7c:	mov	r5, #0
   21c80:	mov	r3, #0
   21c84:	cmp	ip, r1
   21c88:	bne	21c4c <flatcc_json_parser_integer@@Base+0x98>
   21c8c:	mov	r0, ip
   21c90:	pop	{r4, r5, r6, r7, fp, pc}
   21c94:	mov	r3, #1
   21c98:	cmp	ip, r1
   21c9c:	bne	21c4c <flatcc_json_parser_integer@@Base+0x98>
   21ca0:	b	21c8c <flatcc_json_parser_integer@@Base+0xd8>
   21ca4:	mov	lr, #8
   21ca8:	cmp	r3, #0
   21cac:	movweq	lr, #7
   21cb0:	mov	r1, ip
   21cb4:	mov	r3, lr
   21cb8:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21cbc:	pop	{r4, r5, r6, r7, fp, pc}
   21cc0:	cmp	r1, #69	; 0x45
   21cc4:	beq	21c64 <flatcc_json_parser_integer@@Base+0xb0>
   21cc8:	ldr	r0, [fp, #8]
   21ccc:	strd	r4, [r0]
   21cd0:	mov	r0, ip
   21cd4:	pop	{r4, r5, r6, r7, fp, pc}

00021cd8 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   21cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21cdc:	add	fp, sp, #28
   21ce0:	sub	sp, sp, #20
   21ce4:	mov	r8, r3
   21ce8:	mov	r4, r2
   21cec:	mov	r5, r0
   21cf0:	bl	21778 <flatcc_json_parser_float@@Base+0x194>
   21cf4:	mov	r6, r0
   21cf8:	mov	r0, r5
   21cfc:	mov	r1, r6
   21d00:	mov	r2, r4
   21d04:	bl	208d8 <flatcc_json_parser_string_part@@Base>
   21d08:	mov	r7, r0
   21d0c:	ldr	sl, [fp, #8]
   21d10:	cmp	sl, #0
   21d14:	mov	r9, sl
   21d18:	movwne	r9, #1
   21d1c:	cmp	r0, r4
   21d20:	beq	21e18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   21d24:	ldrb	r0, [r7]
   21d28:	cmp	r0, #34	; 0x22
   21d2c:	bne	21e18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   21d30:	sub	r0, r7, r6
   21d34:	str	r0, [sp, #4]
   21d38:	bl	21e44 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16c>
   21d3c:	str	r0, [sp, #8]
   21d40:	ldr	r0, [r5]
   21d44:	mov	r1, #1
   21d48:	mov	r2, #1
   21d4c:	mvn	r3, #0
   21d50:	bl	1de10 <flatcc_builder_start_vector@@Base>
   21d54:	cmp	r0, #0
   21d58:	beq	21d78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xa0>
   21d5c:	mov	r0, #0
   21d60:	str	r0, [r8]
   21d64:	mov	r0, r5
   21d68:	mov	r1, r7
   21d6c:	mov	r2, r4
   21d70:	mov	r3, #33	; 0x21
   21d74:	b	21e38 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   21d78:	ldr	r0, [r5]
   21d7c:	ldr	r1, [sp, #8]
   21d80:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   21d84:	cmp	r0, #0
   21d88:	beq	21d5c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x84>
   21d8c:	ldr	r1, [sp, #8]
   21d90:	str	r1, [sp, #16]
   21d94:	ldr	r1, [sp, #4]
   21d98:	str	r1, [sp, #12]
   21d9c:	str	r9, [sp]
   21da0:	add	r2, sp, #16
   21da4:	add	r3, sp, #12
   21da8:	mov	r1, r6
   21dac:	bl	21e70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x198>
   21db0:	ldr	r1, [sp, #12]
   21db4:	cmp	r0, #0
   21db8:	bne	21e14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x13c>
   21dbc:	ldmib	sp, {r0, r2}
   21dc0:	cmp	r1, r0
   21dc4:	bne	21e14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x13c>
   21dc8:	ldr	r0, [sp, #16]
   21dcc:	cmp	r2, r0
   21dd0:	bls	21de8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
   21dd4:	sub	r1, r2, r0
   21dd8:	ldr	r0, [r5]
   21ddc:	bl	1dc70 <flatcc_builder_truncate_vector@@Base>
   21de0:	cmp	r0, #0
   21de4:	bne	21d5c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x84>
   21de8:	ldr	r0, [r5]
   21dec:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   21df0:	str	r0, [r8]
   21df4:	cmp	r0, #0
   21df8:	beq	21d5c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x84>
   21dfc:	mov	r0, r5
   21e00:	mov	r1, r7
   21e04:	mov	r2, r4
   21e08:	bl	217a4 <flatcc_json_parser_float@@Base+0x1c0>
   21e0c:	sub	sp, fp, #28
   21e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e14:	add	r7, r6, r1
   21e18:	mov	r0, #0
   21e1c:	str	r0, [r8]
   21e20:	mov	r3, #31
   21e24:	cmp	sl, #0
   21e28:	movwne	r3, #32
   21e2c:	mov	r0, r5
   21e30:	mov	r1, r7
   21e34:	mov	r2, r4
   21e38:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   21e3c:	sub	sp, fp, #28
   21e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e44:	and	r1, r0, #3
   21e48:	lsr	r0, r0, #2
   21e4c:	add	r0, r0, r0, lsl #1
   21e50:	cmp	r1, #2
   21e54:	beq	21e68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x190>
   21e58:	cmp	r1, #3
   21e5c:	addeq	r0, r0, #2
   21e60:	bxeq	lr
   21e64:	bx	lr
   21e68:	add	r0, r0, #1
   21e6c:	bx	lr
   21e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e74:	add	fp, sp, #28
   21e78:	sub	sp, sp, #4
   21e7c:	ldr	r7, [fp, #8]
   21e80:	cmp	r3, #0
   21e84:	beq	21e90 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   21e88:	ldr	lr, [r3]
   21e8c:	b	21e94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1bc>
   21e90:	mvn	lr, #0
   21e94:	and	r5, r7, #32
   21e98:	bic	r4, r7, #224	; 0xe0
   21e9c:	cmp	r4, #1
   21ea0:	beq	21ec4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ec>
   21ea4:	mov	ip, #3
   21ea8:	cmp	r4, #0
   21eac:	bne	21ef4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21c>
   21eb0:	movw	r4, #23592	; 0x5c28
   21eb4:	movt	r4, #2
   21eb8:	movw	ip, #24104	; 0x5e28
   21ebc:	movt	ip, #2
   21ec0:	b	21ed4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fc>
   21ec4:	movw	r4, #23848	; 0x5d28
   21ec8:	movt	r4, #2
   21ecc:	movw	ip, #24360	; 0x5f28
   21ed0:	movt	ip, #2
   21ed4:	cmp	r5, #0
   21ed8:	moveq	ip, r4
   21edc:	cmp	r2, #0
   21ee0:	beq	21efc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x224>
   21ee4:	ldr	r9, [r2]
   21ee8:	cmp	r9, #0
   21eec:	mvneq	r9, #0
   21ef0:	b	21f00 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x228>
   21ef4:	mov	r8, r0
   21ef8:	b	22080 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   21efc:	mvn	r9, #0
   21f00:	mov	r6, sp
   21f04:	mov	r8, r0
   21f08:	mov	r7, #0
   21f0c:	mov	r5, lr
   21f10:	cmp	r5, r7
   21f14:	bne	21f30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x258>
   21f18:	b	21fb0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   21f1c:	add	r7, r7, #1
   21f20:	cmp	r7, #4
   21f24:	bcs	21f5c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x284>
   21f28:	cmp	r5, r7
   21f2c:	beq	21fb0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   21f30:	ldrb	r4, [r1, r7]
   21f34:	ldrb	r4, [ip, r4]
   21f38:	strb	r4, [r6, r7]
   21f3c:	cmp	r4, #64	; 0x40
   21f40:	bcc	21f1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   21f44:	cmp	r4, #65	; 0x41
   21f48:	bne	21ff8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x320>
   21f4c:	sub	r7, r7, #1
   21f50:	sub	r5, r5, #1
   21f54:	add	r1, r1, #1
   21f58:	b	21f1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   21f5c:	cmp	r9, #3
   21f60:	bcc	220a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d0>
   21f64:	ldrb	lr, [sp]
   21f68:	ldrb	r4, [sp, #1]
   21f6c:	lsr	r7, r4, #4
   21f70:	orr	r7, r7, lr, lsl #2
   21f74:	strb	r7, [r8]
   21f78:	ldrb	r7, [sp, #2]
   21f7c:	lsr	r7, r7, #2
   21f80:	orr	r7, r7, r4, lsl #4
   21f84:	strb	r7, [r8, #1]
   21f88:	ldrb	r7, [sp, #2]
   21f8c:	ldrb	r4, [sp, #3]
   21f90:	orr	r7, r4, r7, lsl #6
   21f94:	strb	r7, [r8, #2]
   21f98:	sub	lr, r5, #4
   21f9c:	subs	r9, r9, #3
   21fa0:	add	r1, r1, #4
   21fa4:	add	r8, r8, #3
   21fa8:	bne	21f08 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   21fac:	b	2207c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a4>
   21fb0:	mov	r4, r7
   21fb4:	cmp	r7, #0
   21fb8:	beq	22078 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a0>
   21fbc:	cmp	r7, #3
   21fc0:	beq	22038 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
   21fc4:	mov	ip, #4
   21fc8:	cmp	r7, #2
   21fcc:	bne	22080 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   21fd0:	ldrb	r1, [sp, #1]
   21fd4:	ands	r7, r1, #15
   21fd8:	mov	ip, #1
   21fdc:	movwne	ip, #5
   21fe0:	bne	22080 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   21fe4:	ldrb	r7, [sp]
   21fe8:	lsl	r7, r7, #2
   21fec:	orr	r1, r7, r1, lsr #4
   21ff0:	strb	r1, [r8], #1
   21ff4:	b	22078 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a0>
   21ff8:	cmp	r4, #66	; 0x42
   21ffc:	mov	r4, r7
   22000:	bne	21fb4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   22004:	add	r6, r7, #1
   22008:	mov	r4, r6
   2200c:	cmp	r6, r5
   22010:	bcs	21fb4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   22014:	cmp	r4, #7
   22018:	ldrbls	r6, [r1, r4]
   2201c:	ldrbls	r6, [ip, r6]
   22020:	subls	r6, r6, #65	; 0x41
   22024:	uxtbls	sl, r6
   22028:	addls	r6, r4, #1
   2202c:	cmpls	sl, #2
   22030:	bcc	22008 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x330>
   22034:	b	21fb4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   22038:	mov	ip, #5
   2203c:	ldrb	r1, [sp, #2]
   22040:	tst	r1, #3
   22044:	bne	22080 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   22048:	mov	ip, #1
   2204c:	cmp	r9, #2
   22050:	bcc	22080 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   22054:	ldrb	ip, [sp]
   22058:	ldrb	r6, [sp, #1]
   2205c:	lsl	r7, r6, #4
   22060:	orr	r1, r7, r1, lsr #2
   22064:	strb	r1, [r8, #1]
   22068:	lsr	r1, r6, #4
   2206c:	orr	r1, r1, ip, lsl #2
   22070:	strb	r1, [r8]
   22074:	add	r8, r8, #2
   22078:	sub	lr, r5, r4
   2207c:	mov	ip, #0
   22080:	cmp	r2, #0
   22084:	subne	r0, r8, r0
   22088:	strne	r0, [r2]
   2208c:	cmp	r3, #0
   22090:	ldrne	r0, [r3]
   22094:	subne	r0, r0, lr
   22098:	strne	r0, [r3]
   2209c:	mov	r0, ip
   220a0:	sub	sp, fp, #28
   220a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220a8:	mov	ip, #1
   220ac:	b	22080 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>

000220b0 <flatcc_json_parser_build_string@@Base>:
   220b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   220b4:	add	fp, sp, #28
   220b8:	sub	sp, sp, #4
   220bc:	mov	r9, r3
   220c0:	mov	sl, r2
   220c4:	mov	r6, r0
   220c8:	bl	21778 <flatcc_json_parser_float@@Base+0x194>
   220cc:	mov	r4, r0
   220d0:	mov	r0, r6
   220d4:	mov	r1, r4
   220d8:	mov	r2, sl
   220dc:	bl	208d8 <flatcc_json_parser_string_part@@Base>
   220e0:	mov	r5, r0
   220e4:	cmp	r0, sl
   220e8:	beq	2210c <flatcc_json_parser_build_string@@Base+0x5c>
   220ec:	ldrb	r0, [r5]
   220f0:	cmp	r0, #34	; 0x22
   220f4:	bne	2210c <flatcc_json_parser_build_string@@Base+0x5c>
   220f8:	sub	r2, r5, r4
   220fc:	ldr	r0, [r6]
   22100:	mov	r1, r4
   22104:	bl	1f524 <flatcc_builder_create_string@@Base>
   22108:	b	221d8 <flatcc_json_parser_build_string@@Base+0x128>
   2210c:	ldr	r0, [r6]
   22110:	bl	1dfb8 <flatcc_builder_start_string@@Base>
   22114:	cmp	r0, #0
   22118:	beq	22128 <flatcc_json_parser_build_string@@Base+0x78>
   2211c:	mov	r0, #0
   22120:	str	r0, [r9]
   22124:	b	221f0 <flatcc_json_parser_build_string@@Base+0x140>
   22128:	sub	r2, r5, r4
   2212c:	ldr	r0, [r6]
   22130:	mov	r1, r4
   22134:	bl	1db70 <flatcc_builder_append_string@@Base>
   22138:	cmp	r0, #0
   2213c:	beq	2211c <flatcc_json_parser_build_string@@Base+0x6c>
   22140:	cmp	r5, sl
   22144:	beq	221d0 <flatcc_json_parser_build_string@@Base+0x120>
   22148:	mov	r8, sp
   2214c:	add	r4, r8, #1
   22150:	b	2215c <flatcc_json_parser_build_string@@Base+0xac>
   22154:	cmp	r5, sl
   22158:	beq	221d0 <flatcc_json_parser_build_string@@Base+0x120>
   2215c:	ldrb	r0, [r5]
   22160:	cmp	r0, #34	; 0x22
   22164:	beq	221d0 <flatcc_json_parser_build_string@@Base+0x120>
   22168:	mov	r0, r6
   2216c:	mov	r1, r5
   22170:	mov	r2, sl
   22174:	mov	r3, r8
   22178:	bl	20a44 <flatcc_json_parser_string_escape@@Base>
   2217c:	mov	r7, r0
   22180:	ldr	r0, [r6]
   22184:	ldrb	r2, [sp]
   22188:	mov	r1, r4
   2218c:	bl	1db70 <flatcc_builder_append_string@@Base>
   22190:	cmp	r0, #0
   22194:	beq	221fc <flatcc_json_parser_build_string@@Base+0x14c>
   22198:	mov	r0, r6
   2219c:	mov	r1, r7
   221a0:	mov	r2, sl
   221a4:	bl	208d8 <flatcc_json_parser_string_part@@Base>
   221a8:	mov	r5, r0
   221ac:	cmp	r0, sl
   221b0:	beq	22154 <flatcc_json_parser_build_string@@Base+0xa4>
   221b4:	sub	r2, r5, r7
   221b8:	ldr	r0, [r6]
   221bc:	mov	r1, r7
   221c0:	bl	1db70 <flatcc_builder_append_string@@Base>
   221c4:	cmp	r0, #0
   221c8:	bne	22154 <flatcc_json_parser_build_string@@Base+0xa4>
   221cc:	b	2211c <flatcc_json_parser_build_string@@Base+0x6c>
   221d0:	ldr	r0, [r6]
   221d4:	bl	1f638 <flatcc_builder_end_string@@Base>
   221d8:	str	r0, [r9]
   221dc:	mov	r0, r6
   221e0:	mov	r1, r5
   221e4:	mov	r2, sl
   221e8:	bl	217a4 <flatcc_json_parser_float@@Base+0x1c0>
   221ec:	mov	r5, r0
   221f0:	mov	r0, r5
   221f4:	sub	sp, fp, #28
   221f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   221fc:	mov	r5, r7
   22200:	b	2211c <flatcc_json_parser_build_string@@Base+0x6c>

00022204 <flatcc_json_parser_prepare_unions@@Base>:
   22204:	push	{r4, r5, r6, r7, fp, lr}
   22208:	add	fp, sp, #16
   2220c:	mov	r5, r3
   22210:	mov	r6, r2
   22214:	mov	r4, r1
   22218:	mov	r7, r0
   2221c:	add	r0, r3, r3, lsl #1
   22220:	mov	r1, #8
   22224:	add	r1, r1, r0, lsl #3
   22228:	ldr	r0, [r7]
   2222c:	bl	1cdc4 <flatcc_builder_enter_user_frame@@Base>
   22230:	mov	r1, r0
   22234:	ldr	r0, [fp, #8]
   22238:	str	r1, [r0]
   2223c:	cmp	r1, #0
   22240:	beq	22258 <flatcc_json_parser_prepare_unions@@Base+0x54>
   22244:	ldr	r0, [r7]
   22248:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   2224c:	str	r5, [r0]
   22250:	mov	r0, r4
   22254:	pop	{r4, r5, r6, r7, fp, pc}
   22258:	mov	r0, r7
   2225c:	mov	r1, r4
   22260:	mov	r2, r6
   22264:	mov	r3, #33	; 0x21
   22268:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   2226c:	pop	{r4, r5, r6, r7, fp, pc}

00022270 <flatcc_json_parser_finalize_unions@@Base>:
   22270:	push	{r4, r5, r6, r7, fp, lr}
   22274:	add	fp, sp, #16
   22278:	mov	r4, r3
   2227c:	mov	r7, r2
   22280:	mov	r5, r1
   22284:	mov	r6, r0
   22288:	ldr	r0, [r0]
   2228c:	mov	r1, r3
   22290:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   22294:	ldr	r0, [r0, #4]
   22298:	cmp	r0, #0
   2229c:	beq	222b8 <flatcc_json_parser_finalize_unions@@Base+0x48>
   222a0:	mov	r0, r6
   222a4:	mov	r1, r5
   222a8:	mov	r2, r7
   222ac:	mov	r3, #27
   222b0:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   222b4:	mov	r5, r0
   222b8:	ldr	r0, [r6]
   222bc:	mov	r1, r4
   222c0:	bl	1ce88 <flatcc_builder_exit_user_frame_at@@Base>
   222c4:	mov	r0, r5
   222c8:	pop	{r4, r5, r6, r7, fp, pc}

000222cc <flatcc_json_parser_union@@Base>:
   222cc:	push	{r4, r5, r6, r7, fp, lr}
   222d0:	add	fp, sp, #16
   222d4:	sub	sp, sp, #16
   222d8:	mov	r7, r3
   222dc:	mov	r4, r2
   222e0:	mov	r6, r1
   222e4:	mov	r5, r0
   222e8:	ldr	r0, [r0]
   222ec:	ldr	r1, [fp, #12]
   222f0:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   222f4:	add	r2, r0, #8
   222f8:	add	r3, r7, r7, lsl #1
   222fc:	mov	r1, r2
   22300:	ldr	r7, [r1, r3, lsl #3]!
   22304:	cmp	r7, #0
   22308:	beq	22330 <flatcc_json_parser_union@@Base+0x64>
   2230c:	mov	r0, r5
   22310:	mov	r1, r6
   22314:	mov	r2, r4
   22318:	mov	r3, #28
   2231c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   22320:	mov	r6, r0
   22324:	mov	r0, r6
   22328:	sub	sp, fp, #16
   2232c:	pop	{r4, r5, r6, r7, fp, pc}
   22330:	add	r2, r2, r3, lsl #3
   22334:	ldrb	r3, [r2, #12]
   22338:	cmp	r3, #0
   2233c:	beq	223a8 <flatcc_json_parser_union@@Base+0xdc>
   22340:	ldrb	r3, [r2, #13]
   22344:	strb	r3, [sp, #8]
   22348:	cmp	r3, #0
   2234c:	beq	223dc <flatcc_json_parser_union@@Base+0x110>
   22350:	ldr	r7, [fp, #16]
   22354:	ldr	r1, [r0, #4]
   22358:	sub	r1, r1, #1
   2235c:	str	r1, [r0, #4]
   22360:	add	r0, sp, #8
   22364:	add	r0, r0, #4
   22368:	str	r0, [sp]
   2236c:	mov	r0, r5
   22370:	mov	r1, r6
   22374:	mov	r2, r4
   22378:	blx	r7
   2237c:	mov	r6, r0
   22380:	cmp	r0, r4
   22384:	beq	22324 <flatcc_json_parser_union@@Base+0x58>
   22388:	ldr	r1, [fp, #8]
   2238c:	ldr	r0, [r5]
   22390:	ldr	r2, [sp, #8]
   22394:	ldr	r3, [sp, #12]
   22398:	bl	1ed10 <flatcc_builder_table_add_union@@Base>
   2239c:	cmp	r0, #0
   223a0:	bne	2230c <flatcc_json_parser_union@@Base+0x40>
   223a4:	b	22324 <flatcc_json_parser_union@@Base+0x58>
   223a8:	ldr	r3, [r0, #4]
   223ac:	add	r3, r3, #1
   223b0:	str	r3, [r0, #4]
   223b4:	ldr	r0, [r5, #16]
   223b8:	str	r0, [r2, #8]
   223bc:	ldr	r0, [r5, #4]
   223c0:	str	r0, [r2, #4]
   223c4:	str	r6, [r1]
   223c8:	mov	r0, r5
   223cc:	mov	r1, r6
   223d0:	mov	r2, r4
   223d4:	bl	211f4 <flatcc_json_parser_generic_json@@Base>
   223d8:	b	22320 <flatcc_json_parser_union@@Base+0x54>
   223dc:	mov	r0, r5
   223e0:	mov	r1, r6
   223e4:	mov	r2, r4
   223e8:	mov	r3, #25
   223ec:	b	2231c <flatcc_json_parser_union@@Base+0x50>

000223f0 <flatcc_json_parser_union_type@@Base>:
   223f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223f4:	add	fp, sp, #28
   223f8:	sub	sp, sp, #20
   223fc:	mov	r6, r3
   22400:	mov	r7, r2
   22404:	mov	r4, r1
   22408:	mov	r5, r0
   2240c:	ldr	r0, [r0]
   22410:	ldr	r1, [fp, #12]
   22414:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   22418:	mov	sl, r0
   2241c:	add	r8, r0, #8
   22420:	add	r9, r6, r6, lsl #1
   22424:	add	r6, r8, r9, lsl #3
   22428:	mov	r0, r6
   2242c:	ldrb	r1, [r0, #12]!
   22430:	cmp	r1, #0
   22434:	beq	2245c <flatcc_json_parser_union_type@@Base+0x6c>
   22438:	mov	r0, r5
   2243c:	mov	r1, r4
   22440:	mov	r2, r7
   22444:	mov	r3, #28
   22448:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   2244c:	mov	r7, r0
   22450:	mov	r0, r7
   22454:	sub	sp, fp, #28
   22458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2245c:	mov	r1, #1
   22460:	strb	r1, [r0]
   22464:	add	r3, r6, #13
   22468:	mov	r0, r5
   2246c:	mov	r1, r4
   22470:	mov	r2, r7
   22474:	str	r3, [sp, #8]
   22478:	bl	22598 <flatcc_json_parser_union_type@@Base+0x1a8>
   2247c:	mov	r2, r7
   22480:	mov	r7, r0
   22484:	cmp	r0, r4
   22488:	str	r2, [sp, #4]
   2248c:	beq	22498 <flatcc_json_parser_union_type@@Base+0xa8>
   22490:	ldr	r4, [sp, #8]
   22494:	b	224b8 <flatcc_json_parser_union_type@@Base+0xc8>
   22498:	ldr	r3, [fp, #16]
   2249c:	ldr	r0, [sp, #8]
   224a0:	mov	r4, r0
   224a4:	str	r0, [sp]
   224a8:	mov	r0, r5
   224ac:	mov	r1, r7
   224b0:	bl	22628 <flatcc_json_parser_union_type@@Base+0x238>
   224b4:	mov	r7, r0
   224b8:	ldr	r1, [r8, r9, lsl #3]
   224bc:	cmp	r1, #0
   224c0:	beq	2254c <flatcc_json_parser_union_type@@Base+0x15c>
   224c4:	ldr	r0, [sl, #4]
   224c8:	cmp	r0, #0
   224cc:	beq	22578 <flatcc_json_parser_union_type@@Base+0x188>
   224d0:	ldr	ip, [fp, #20]
   224d4:	sub	r0, r0, #1
   224d8:	str	r0, [sl, #4]
   224dc:	ldr	r0, [r6, #8]
   224e0:	ldr	r9, [r5, #4]
   224e4:	ldr	r8, [r5, #16]
   224e8:	str	r0, [r5, #16]
   224ec:	ldr	r0, [r6, #4]
   224f0:	str	r0, [r5, #4]
   224f4:	ldrb	r3, [r4]
   224f8:	strb	r3, [sp, #12]
   224fc:	add	r0, sp, #12
   22500:	add	r0, r0, #4
   22504:	str	r0, [sp]
   22508:	mov	r0, r5
   2250c:	ldr	r6, [sp, #4]
   22510:	mov	r2, r6
   22514:	blx	ip
   22518:	cmp	r0, r6
   2251c:	beq	22564 <flatcc_json_parser_union_type@@Base+0x174>
   22520:	ldr	r1, [fp, #8]
   22524:	ldr	r0, [r5]
   22528:	ldr	r2, [sp, #12]
   2252c:	ldr	r3, [sp, #16]
   22530:	bl	1ed10 <flatcc_builder_table_add_union@@Base>
   22534:	cmp	r0, #0
   22538:	beq	2256c <flatcc_json_parser_union_type@@Base+0x17c>
   2253c:	mov	r0, r5
   22540:	mov	r1, r7
   22544:	ldr	r2, [sp, #4]
   22548:	b	22444 <flatcc_json_parser_union_type@@Base+0x54>
   2254c:	ldrb	r0, [r4]
   22550:	ldr	r1, [sl, #4]
   22554:	cmp	r0, #0
   22558:	addne	r1, r1, #1
   2255c:	str	r1, [sl, #4]
   22560:	b	22450 <flatcc_json_parser_union_type@@Base+0x60>
   22564:	mov	r7, r6
   22568:	b	22450 <flatcc_json_parser_union_type@@Base+0x60>
   2256c:	str	r9, [r5, #4]
   22570:	str	r8, [r5, #16]
   22574:	b	22450 <flatcc_json_parser_union_type@@Base+0x60>
   22578:	movw	r0, #25589	; 0x63f5
   2257c:	movt	r0, #2
   22580:	movw	r1, #25604	; 0x6404
   22584:	movt	r1, #2
   22588:	movw	r3, #25678	; 0x644e
   2258c:	movt	r3, #2
   22590:	movw	r2, #965	; 0x3c5
   22594:	bl	12bc4 <__assert_fail@plt>
   22598:	push	{r4, r5, r6, r7, fp, lr}
   2259c:	add	fp, sp, #16
   225a0:	sub	sp, sp, #24
   225a4:	mov	r7, r1
   225a8:	mov	r6, r0
   225ac:	mov	r0, #0
   225b0:	str	r0, [sp, #20]
   225b4:	str	r0, [sp, #16]
   225b8:	str	r0, [sp, #12]
   225bc:	strb	r0, [r3]
   225c0:	cmp	r1, r2
   225c4:	beq	2261c <flatcc_json_parser_union_type@@Base+0x22c>
   225c8:	mov	r5, r3
   225cc:	mov	r4, r2
   225d0:	add	r0, sp, #16
   225d4:	str	r0, [sp]
   225d8:	add	r3, sp, #12
   225dc:	mov	r0, r6
   225e0:	mov	r1, r7
   225e4:	bl	21bb4 <flatcc_json_parser_integer@@Base>
   225e8:	mov	r1, r0
   225ec:	cmp	r0, r7
   225f0:	beq	22618 <flatcc_json_parser_union_type@@Base+0x228>
   225f4:	ldr	r3, [sp, #12]
   225f8:	ldr	r0, [sp, #16]
   225fc:	ldr	r2, [sp, #20]
   22600:	stm	sp, {r0, r2, r5}
   22604:	mov	r0, r6
   22608:	mov	r2, r4
   2260c:	bl	23830 <flatcc_json_parser_struct_as_root@@Base+0x9d4>
   22610:	mov	r7, r0
   22614:	b	2261c <flatcc_json_parser_union_type@@Base+0x22c>
   22618:	mov	r7, r1
   2261c:	mov	r0, r7
   22620:	sub	sp, fp, #16
   22624:	pop	{r4, r5, r6, r7, fp, pc}
   22628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2262c:	add	fp, sp, #28
   22630:	sub	sp, sp, #44	; 0x2c
   22634:	mov	r4, r3
   22638:	mov	r7, r2
   2263c:	mov	r5, r0
   22640:	mov	sl, #0
   22644:	strb	sl, [fp, #-29]	; 0xffffffe3
   22648:	ldr	r0, [fp, #8]
   2264c:	strb	sl, [r0]
   22650:	mov	r0, r5
   22654:	bl	2387c <flatcc_json_parser_struct_as_root@@Base+0xa20>
   22658:	mov	r6, r0
   2265c:	cmp	r0, r7
   22660:	beq	22744 <flatcc_json_parser_union_type@@Base+0x354>
   22664:	add	r0, r4, #4
   22668:	add	r9, sp, #32
   2266c:	add	r8, sp, #28
   22670:	str	r0, [sp, #16]
   22674:	str	sl, [sp, #20]
   22678:	mov	sl, r0
   2267c:	ldr	r4, [sl, #-4]
   22680:	str	r9, [sp]
   22684:	add	r0, sp, #24
   22688:	str	r0, [sp, #4]
   2268c:	mov	r0, r5
   22690:	mov	r1, r6
   22694:	mov	r2, r7
   22698:	mov	r3, r8
   2269c:	blx	r4
   226a0:	mov	r4, r0
   226a4:	cmp	r0, r7
   226a8:	beq	22764 <flatcc_json_parser_union_type@@Base+0x374>
   226ac:	cmp	r4, r6
   226b0:	bne	226c8 <flatcc_json_parser_union_type@@Base+0x2d8>
   226b4:	ldr	r0, [sl], #4
   226b8:	cmp	r0, #0
   226bc:	mov	r6, r4
   226c0:	bne	2267c <flatcc_json_parser_union_type@@Base+0x28c>
   226c4:	b	2274c <flatcc_json_parser_union_type@@Base+0x35c>
   226c8:	ldr	sl, [sp, #20]
   226cc:	cmp	sl, #0
   226d0:	beq	226e0 <flatcc_json_parser_union_type@@Base+0x2f0>
   226d4:	ldr	r0, [r5, #12]
   226d8:	cmp	r0, #0
   226dc:	bne	22778 <flatcc_json_parser_union_type@@Base+0x388>
   226e0:	ldr	r3, [sp, #28]
   226e4:	ldr	r0, [sp, #32]
   226e8:	ldr	r1, [sp, #36]	; 0x24
   226ec:	stm	sp, {r0, r1}
   226f0:	sub	r0, fp, #29
   226f4:	str	r0, [sp, #8]
   226f8:	mov	r0, r5
   226fc:	mov	r1, r4
   22700:	mov	r2, r7
   22704:	bl	23830 <flatcc_json_parser_struct_as_root@@Base+0x9d4>
   22708:	cmp	r0, r7
   2270c:	beq	22770 <flatcc_json_parser_union_type@@Base+0x380>
   22710:	add	sl, sl, #1
   22714:	ldr	r0, [fp, #8]
   22718:	mov	r2, r0
   2271c:	ldrb	r0, [r0]
   22720:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   22724:	add	r0, r0, r1
   22728:	strb	r0, [r2]
   2272c:	ldr	r0, [sp, #24]
   22730:	cmp	r0, #0
   22734:	mov	r6, r4
   22738:	ldr	r0, [sp, #16]
   2273c:	bne	22674 <flatcc_json_parser_union_type@@Base+0x284>
   22740:	b	22764 <flatcc_json_parser_union_type@@Base+0x374>
   22744:	mov	r4, r6
   22748:	b	22764 <flatcc_json_parser_union_type@@Base+0x374>
   2274c:	mov	r0, r5
   22750:	mov	r1, r4
   22754:	mov	r2, r7
   22758:	mov	r3, #23
   2275c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   22760:	mov	r4, r0
   22764:	mov	r0, r4
   22768:	sub	sp, fp, #28
   2276c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22770:	mov	r4, r7
   22774:	b	22764 <flatcc_json_parser_union_type@@Base+0x374>
   22778:	mov	r0, r5
   2277c:	mov	r1, r4
   22780:	mov	r2, r7
   22784:	mov	r3, #14
   22788:	b	2275c <flatcc_json_parser_union_type@@Base+0x36c>

0002278c <flatcc_json_parser_union_vector@@Base>:
   2278c:	push	{r4, r5, r6, r7, fp, lr}
   22790:	add	fp, sp, #16
   22794:	sub	sp, sp, #16
   22798:	mov	r7, r3
   2279c:	mov	r4, r2
   227a0:	mov	r5, r1
   227a4:	mov	r6, r0
   227a8:	ldr	r0, [r0]
   227ac:	ldr	r1, [fp, #12]
   227b0:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   227b4:	add	r2, r0, #8
   227b8:	add	r3, r7, r7, lsl #1
   227bc:	mov	r1, r2
   227c0:	ldr	r7, [r1, r3, lsl #3]!
   227c4:	cmp	r7, #0
   227c8:	beq	227e8 <flatcc_json_parser_union_vector@@Base+0x5c>
   227cc:	mov	r0, r6
   227d0:	mov	r1, r5
   227d4:	mov	r2, r4
   227d8:	mov	r3, #28
   227dc:	sub	sp, fp, #16
   227e0:	pop	{r4, r5, r6, r7, fp, lr}
   227e4:	b	208a0 <flatcc_json_parser_set_error@@Base>
   227e8:	add	r2, r2, r3, lsl #3
   227ec:	ldrb	r7, [r2, #12]
   227f0:	ldr	r3, [r0, #4]
   227f4:	cmp	r7, #0
   227f8:	beq	22834 <flatcc_json_parser_union_vector@@Base+0xa8>
   227fc:	ldr	r1, [fp, #16]
   22800:	ldr	r7, [fp, #8]
   22804:	sub	r3, r3, #1
   22808:	str	r3, [r0, #4]
   2280c:	ldr	r0, [r2, #16]
   22810:	ldr	r3, [r2, #20]
   22814:	stm	sp, {r0, r7}
   22818:	str	r1, [sp, #8]
   2281c:	mov	r0, r6
   22820:	mov	r1, r5
   22824:	mov	r2, r4
   22828:	bl	22868 <flatcc_json_parser_union_vector@@Base+0xdc>
   2282c:	sub	sp, fp, #16
   22830:	pop	{r4, r5, r6, r7, fp, pc}
   22834:	add	r3, r3, #1
   22838:	str	r3, [r0, #4]
   2283c:	ldr	r0, [r6, #16]
   22840:	str	r0, [r2, #8]
   22844:	ldr	r0, [r6, #4]
   22848:	str	r0, [r2, #4]
   2284c:	str	r5, [r1]
   22850:	mov	r0, r6
   22854:	mov	r1, r5
   22858:	mov	r2, r4
   2285c:	sub	sp, fp, #16
   22860:	pop	{r4, r5, r6, r7, fp, lr}
   22864:	b	211f4 <flatcc_json_parser_generic_json@@Base>
   22868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2286c:	add	fp, sp, #28
   22870:	sub	sp, sp, #12
   22874:	mov	r7, r3
   22878:	mov	r5, r2
   2287c:	mov	r4, r1
   22880:	mov	r6, r0
   22884:	mov	r0, #0
   22888:	str	r0, [sp, #8]
   2288c:	ldr	r0, [r6]
   22890:	bl	1dea0 <flatcc_builder_start_offset_vector@@Base>
   22894:	cmp	r0, #0
   22898:	beq	228c0 <flatcc_json_parser_union_vector@@Base+0x134>
   2289c:	mov	r0, r6
   228a0:	mov	r1, r4
   228a4:	mov	r2, r5
   228a8:	mov	r3, #33	; 0x21
   228ac:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   228b0:	mov	r4, r0
   228b4:	mov	r0, r4
   228b8:	sub	sp, fp, #28
   228bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228c0:	ldr	r8, [fp, #8]
   228c4:	add	r3, sp, #4
   228c8:	mov	r0, r6
   228cc:	mov	r1, r4
   228d0:	mov	r2, r5
   228d4:	bl	22cc0 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   228d8:	mov	r4, r0
   228dc:	clz	r0, r8
   228e0:	lsr	r0, r0, #5
   228e4:	ldr	r1, [sp, #4]
   228e8:	cmp	r1, #0
   228ec:	beq	22988 <flatcc_json_parser_union_vector@@Base+0x1fc>
   228f0:	sub	sl, r8, #1
   228f4:	mov	r9, #0
   228f8:	add	r8, sp, #8
   228fc:	tst	r0, #1
   22900:	bne	229d4 <flatcc_json_parser_union_vector@@Base+0x248>
   22904:	ldr	r0, [r6]
   22908:	mov	r1, r7
   2290c:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   22910:	ldrb	r3, [r0, r9]
   22914:	str	r8, [sp]
   22918:	mov	r0, r6
   2291c:	mov	r1, r4
   22920:	mov	r2, r5
   22924:	ldr	r4, [fp, #16]
   22928:	blx	r4
   2292c:	mov	r4, r0
   22930:	cmp	r0, r5
   22934:	beq	228b4 <flatcc_json_parser_union_vector@@Base+0x128>
   22938:	ldr	r0, [r6]
   2293c:	mov	r1, #1
   22940:	bl	1d9ec <flatcc_builder_extend_offset_vector@@Base>
   22944:	cmp	r0, #0
   22948:	beq	2289c <flatcc_json_parser_union_vector@@Base+0x110>
   2294c:	ldr	r1, [sp, #8]
   22950:	str	r1, [r0]
   22954:	mov	r0, r6
   22958:	mov	r1, r4
   2295c:	mov	r2, r5
   22960:	add	r3, sp, #4
   22964:	bl	21a34 <flatcc_json_parser_float@@Base+0x450>
   22968:	mov	r4, r0
   2296c:	sub	r0, sl, r9
   22970:	clz	r0, r0
   22974:	lsr	r0, r0, #5
   22978:	add	r9, r9, #1
   2297c:	ldr	r1, [sp, #4]
   22980:	cmp	r1, #0
   22984:	bne	228fc <flatcc_json_parser_union_vector@@Base+0x170>
   22988:	cmp	r0, #0
   2298c:	beq	229d4 <flatcc_json_parser_union_vector@@Base+0x248>
   22990:	ldr	r0, [r6]
   22994:	mov	r1, r7
   22998:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   2299c:	mov	r1, r0
   229a0:	ldr	r0, [r6]
   229a4:	bl	1ec94 <flatcc_builder_end_offset_vector_for_unions@@Base>
   229a8:	str	r0, [sp, #8]
   229ac:	cmp	r0, #0
   229b0:	beq	2289c <flatcc_json_parser_union_vector@@Base+0x110>
   229b4:	ldr	r1, [fp, #12]
   229b8:	ldr	r0, [r6]
   229bc:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   229c0:	cmp	r0, #0
   229c4:	beq	2289c <flatcc_json_parser_union_vector@@Base+0x110>
   229c8:	ldr	r1, [sp, #8]
   229cc:	str	r1, [r0]
   229d0:	b	228b4 <flatcc_json_parser_union_vector@@Base+0x128>
   229d4:	mov	r0, r6
   229d8:	mov	r1, r4
   229dc:	mov	r2, r5
   229e0:	mov	r3, #30
   229e4:	b	228ac <flatcc_json_parser_union_vector@@Base+0x120>

000229e8 <flatcc_json_parser_union_type_vector@@Base>:
   229e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   229ec:	add	fp, sp, #28
   229f0:	sub	sp, sp, #28
   229f4:	mov	r6, r3
   229f8:	mov	r9, r2
   229fc:	mov	r4, r1
   22a00:	mov	r5, r0
   22a04:	ldr	r0, [r0]
   22a08:	ldr	r1, [fp, #12]
   22a0c:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   22a10:	add	r0, r0, #8
   22a14:	add	sl, r6, r6, lsl #1
   22a18:	add	r7, r0, sl, lsl #3
   22a1c:	mov	r0, r7
   22a20:	ldrb	r1, [r0, #12]!
   22a24:	cmp	r1, #0
   22a28:	beq	22a40 <flatcc_json_parser_union_type_vector@@Base+0x58>
   22a2c:	mov	r0, r5
   22a30:	mov	r1, r4
   22a34:	mov	r2, r9
   22a38:	mov	r3, #28
   22a3c:	b	22c68 <flatcc_json_parser_union_type_vector@@Base+0x280>
   22a40:	mov	r1, #1
   22a44:	strb	r1, [r0]
   22a48:	ldr	r0, [r5]
   22a4c:	mov	r1, #1
   22a50:	mov	r2, #1
   22a54:	mvn	r3, #0
   22a58:	bl	1de10 <flatcc_builder_start_vector@@Base>
   22a5c:	cmp	r0, #0
   22a60:	bne	22c58 <flatcc_json_parser_union_type_vector@@Base+0x270>
   22a64:	add	r3, sp, #24
   22a68:	mov	r0, r5
   22a6c:	mov	r1, r4
   22a70:	mov	r2, r9
   22a74:	bl	22cc0 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   22a78:	mov	r4, r0
   22a7c:	ldr	r0, [r5]
   22a80:	ldr	r1, [sp, #24]
   22a84:	cmp	r1, #0
   22a88:	beq	22b60 <flatcc_json_parser_union_type_vector@@Base+0x178>
   22a8c:	add	r6, sp, #23
   22a90:	b	22ac8 <flatcc_json_parser_union_type_vector@@Base+0xe0>
   22a94:	ldrb	r1, [sp, #23]
   22a98:	mov	r0, r8
   22a9c:	bl	22d50 <flatcc_json_parser_union_type_vector@@Base+0x368>
   22aa0:	mov	r0, r5
   22aa4:	mov	r1, r4
   22aa8:	mov	r2, r9
   22aac:	add	r3, sp, #24
   22ab0:	bl	21a34 <flatcc_json_parser_float@@Base+0x450>
   22ab4:	mov	r4, r0
   22ab8:	ldr	r0, [r5]
   22abc:	ldr	r1, [sp, #24]
   22ac0:	cmp	r1, #0
   22ac4:	beq	22b60 <flatcc_json_parser_union_type_vector@@Base+0x178>
   22ac8:	mov	r1, #1
   22acc:	bl	1d824 <flatcc_builder_extend_vector@@Base>
   22ad0:	cmp	r0, #0
   22ad4:	beq	22c58 <flatcc_json_parser_union_type_vector@@Base+0x270>
   22ad8:	mov	r8, r0
   22adc:	mov	r0, r5
   22ae0:	mov	r1, r4
   22ae4:	mov	r2, r9
   22ae8:	mov	r3, r6
   22aec:	bl	22598 <flatcc_json_parser_union_type@@Base+0x1a8>
   22af0:	mov	r1, r6
   22af4:	mov	r6, r0
   22af8:	cmp	r4, r0
   22afc:	beq	22b08 <flatcc_json_parser_union_type_vector@@Base+0x120>
   22b00:	mov	r4, r6
   22b04:	b	22b30 <flatcc_json_parser_union_type_vector@@Base+0x148>
   22b08:	str	r1, [sp]
   22b0c:	mov	r0, r5
   22b10:	mov	r1, r6
   22b14:	mov	r2, r9
   22b18:	ldr	r3, [fp, #16]
   22b1c:	bl	22628 <flatcc_json_parser_union_type@@Base+0x238>
   22b20:	mov	r4, r0
   22b24:	cmp	r0, r6
   22b28:	cmpne	r4, r9
   22b2c:	beq	22c58 <flatcc_json_parser_union_type_vector@@Base+0x270>
   22b30:	ldrb	r0, [sp, #23]
   22b34:	ldr	r1, [fp, #24]
   22b38:	blx	r1
   22b3c:	cmp	r0, #0
   22b40:	add	r6, sp, #23
   22b44:	bne	22a94 <flatcc_json_parser_union_type_vector@@Base+0xac>
   22b48:	ldrb	r0, [r5, #8]
   22b4c:	tst	r0, #1
   22b50:	beq	22c8c <flatcc_json_parser_union_type_vector@@Base+0x2a4>
   22b54:	mov	r0, #0
   22b58:	strb	r0, [sp, #23]
   22b5c:	b	22a94 <flatcc_json_parser_union_type_vector@@Base+0xac>
   22b60:	bl	1eac8 <flatcc_builder_vector_count@@Base>
   22b64:	mov	r8, r0
   22b68:	str	r0, [r7, #16]
   22b6c:	ldr	r0, [r5]
   22b70:	mov	r1, r8
   22b74:	bl	1cdc4 <flatcc_builder_enter_user_frame@@Base>
   22b78:	mov	r1, r0
   22b7c:	ldr	r0, [r5]
   22b80:	str	r1, [sp, #16]
   22b84:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   22b88:	mov	r6, r0
   22b8c:	ldr	r0, [r5]
   22b90:	bl	1ead4 <flatcc_builder_vector_edit@@Base>
   22b94:	mov	r1, r0
   22b98:	mov	r0, r6
   22b9c:	mov	r2, r8
   22ba0:	bl	12ab0 <memcpy@plt>
   22ba4:	ldr	r0, [r5]
   22ba8:	bl	1ea48 <flatcc_builder_end_vector@@Base>
   22bac:	cmp	r0, #0
   22bb0:	beq	22c58 <flatcc_json_parser_union_type_vector@@Base+0x270>
   22bb4:	mov	r7, r0
   22bb8:	ldr	r6, [fp, #8]
   22bbc:	ldr	r0, [r5]
   22bc0:	sub	r1, r6, #1
   22bc4:	bl	1ee1c <flatcc_builder_table_add_offset@@Base>
   22bc8:	cmp	r0, #0
   22bcc:	beq	22c58 <flatcc_json_parser_union_type_vector@@Base+0x270>
   22bd0:	str	r7, [r0]
   22bd4:	ldr	r0, [r5]
   22bd8:	ldr	r1, [fp, #12]
   22bdc:	bl	1ced0 <flatcc_builder_get_user_frame_ptr@@Base>
   22be0:	add	r7, r0, #8
   22be4:	mov	r2, r7
   22be8:	ldr	r1, [r2, sl, lsl #3]!
   22bec:	ldr	r3, [sp, #16]
   22bf0:	str	r3, [r2, #20]
   22bf4:	ldr	r2, [r0, #4]
   22bf8:	cmp	r1, #0
   22bfc:	beq	22c7c <flatcc_json_parser_union_type_vector@@Base+0x294>
   22c00:	cmp	r2, #0
   22c04:	beq	22ca0 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
   22c08:	ldr	ip, [fp, #20]
   22c0c:	sub	r2, r2, #1
   22c10:	str	r2, [r0, #4]
   22c14:	add	r0, r7, sl, lsl #3
   22c18:	ldr	r2, [r0, #8]
   22c1c:	ldr	sl, [r5, #4]
   22c20:	ldr	r7, [r5, #16]
   22c24:	str	r2, [r5, #16]
   22c28:	ldr	r0, [r0, #4]
   22c2c:	str	r0, [r5, #4]
   22c30:	str	r8, [sp]
   22c34:	stmib	sp, {r6, ip}
   22c38:	mov	r0, r5
   22c3c:	mov	r2, r9
   22c40:	bl	22868 <flatcc_json_parser_union_vector@@Base+0xdc>
   22c44:	cmp	r0, r9
   22c48:	strne	sl, [r5, #4]
   22c4c:	strne	r7, [r5, #16]
   22c50:	movne	r9, r4
   22c54:	b	22c70 <flatcc_json_parser_union_type_vector@@Base+0x288>
   22c58:	mov	r0, r5
   22c5c:	mov	r1, r4
   22c60:	mov	r2, r9
   22c64:	mov	r3, #33	; 0x21
   22c68:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   22c6c:	mov	r9, r0
   22c70:	mov	r0, r9
   22c74:	sub	sp, fp, #28
   22c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c7c:	add	r1, r2, #1
   22c80:	str	r1, [r0, #4]
   22c84:	mov	r9, r4
   22c88:	b	22c70 <flatcc_json_parser_union_type_vector@@Base+0x288>
   22c8c:	mov	r0, r5
   22c90:	mov	r1, r4
   22c94:	mov	r2, r9
   22c98:	mov	r3, #15
   22c9c:	b	22c68 <flatcc_json_parser_union_type_vector@@Base+0x280>
   22ca0:	movw	r0, #25589	; 0x63f5
   22ca4:	movt	r0, #2
   22ca8:	movw	r1, #25604	; 0x6404
   22cac:	movt	r1, #2
   22cb0:	movw	r3, #25882	; 0x651a
   22cb4:	movt	r3, #2
   22cb8:	movw	r2, #1122	; 0x462
   22cbc:	bl	12bc4 <__assert_fail@plt>
   22cc0:	push	{r4, r5, r6, sl, fp, lr}
   22cc4:	add	fp, sp, #16
   22cc8:	mov	r5, r3
   22ccc:	mov	r4, r2
   22cd0:	mov	r6, r0
   22cd4:	cmp	r1, r2
   22cd8:	beq	22d28 <flatcc_json_parser_union_type_vector@@Base+0x340>
   22cdc:	ldrb	r0, [r1]
   22ce0:	cmp	r0, #91	; 0x5b
   22ce4:	bne	22d28 <flatcc_json_parser_union_type_vector@@Base+0x340>
   22ce8:	add	r1, r1, #1
   22cec:	mov	r0, r6
   22cf0:	mov	r2, r4
   22cf4:	bl	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   22cf8:	cmp	r0, r4
   22cfc:	beq	22d44 <flatcc_json_parser_union_type_vector@@Base+0x35c>
   22d00:	ldrb	r1, [r0]
   22d04:	cmp	r1, #93	; 0x5d
   22d08:	bne	22d44 <flatcc_json_parser_union_type_vector@@Base+0x35c>
   22d0c:	mov	r1, #0
   22d10:	str	r1, [r5]
   22d14:	add	r1, r0, #1
   22d18:	mov	r0, r6
   22d1c:	mov	r2, r4
   22d20:	pop	{r4, r5, r6, sl, fp, lr}
   22d24:	b	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   22d28:	mov	r0, #0
   22d2c:	str	r0, [r5]
   22d30:	mov	r0, r6
   22d34:	mov	r2, r4
   22d38:	mov	r3, #22
   22d3c:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   22d40:	pop	{r4, r5, r6, sl, fp, pc}
   22d44:	mov	r1, #1
   22d48:	str	r1, [r5]
   22d4c:	pop	{r4, r5, r6, sl, fp, pc}
   22d50:	push	{r4, r5, fp, lr}
   22d54:	add	fp, sp, #8
   22d58:	mov	r4, r1
   22d5c:	mov	r5, r0
   22d60:	mov	r0, r1
   22d64:	bl	238b4 <flatcc_json_parser_struct_as_root@@Base+0xa58>
   22d68:	strb	r4, [r5]
   22d6c:	pop	{r4, r5, fp, pc}

00022d70 <flatcc_json_parser_table_as_root@@Base>:
   22d70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22d74:	add	fp, sp, #24
   22d78:	sub	sp, sp, #56	; 0x38
   22d7c:	mov	r4, r2
   22d80:	mov	r6, r0
   22d84:	ldr	r8, [fp, #8]
   22d88:	str	r8, [sp]
   22d8c:	add	r5, sp, #12
   22d90:	cmp	r1, #0
   22d94:	movne	r5, r1
   22d98:	add	r7, r2, r3
   22d9c:	mov	r0, r5
   22da0:	mov	r1, r6
   22da4:	mov	r3, r7
   22da8:	bl	22e24 <flatcc_json_parser_table_as_root@@Base+0xb4>
   22dac:	mov	r0, #2
   22db0:	and	r3, r0, r8, lsr #1
   22db4:	ldr	r1, [fp, #12]
   22db8:	mov	r0, r6
   22dbc:	mov	r2, #0
   22dc0:	bl	1d3f8 <flatcc_builder_start_buffer@@Base>
   22dc4:	mov	r1, r0
   22dc8:	mvn	r0, #0
   22dcc:	cmp	r1, #0
   22dd0:	bne	22df8 <flatcc_json_parser_table_as_root@@Base+0x88>
   22dd4:	ldr	ip, [fp, #16]
   22dd8:	add	r3, sp, #8
   22ddc:	mov	r0, r5
   22de0:	mov	r1, r4
   22de4:	mov	r2, r7
   22de8:	blx	ip
   22dec:	ldr	r0, [r5, #24]
   22df0:	cmp	r0, #0
   22df4:	beq	22e00 <flatcc_json_parser_table_as_root@@Base+0x90>
   22df8:	sub	sp, fp, #24
   22dfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22e00:	ldr	r1, [sp, #8]
   22e04:	mov	r0, r6
   22e08:	bl	1d5ac <flatcc_builder_end_buffer@@Base>
   22e0c:	cmp	r0, #0
   22e10:	mvn	r0, #0
   22e14:	strne	r4, [r5, #40]	; 0x28
   22e18:	movne	r0, #0
   22e1c:	sub	sp, fp, #24
   22e20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22e24:	vmov.i32	q8, #0	; 0x00000000
   22e28:	add	ip, r0, #12
   22e2c:	vst1.32	{d16-d17}, [ip]
   22e30:	add	ip, r0, #28
   22e34:	vst1.32	{d16-d17}, [ip]
   22e38:	stm	r0, {r1, r2}
   22e3c:	mov	r1, #1
   22e40:	str	r1, [r0, #16]
   22e44:	str	r2, [r0, #28]
   22e48:	str	r3, [r0, #32]
   22e4c:	str	r2, [r0, #36]	; 0x24
   22e50:	ldr	r1, [sp]
   22e54:	str	r1, [r0, #8]
   22e58:	bx	lr

00022e5c <flatcc_json_parser_struct_as_root@@Base>:
   22e5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22e60:	add	fp, sp, #24
   22e64:	sub	sp, sp, #56	; 0x38
   22e68:	mov	r4, r2
   22e6c:	mov	r6, r0
   22e70:	ldr	r8, [fp, #8]
   22e74:	str	r8, [sp]
   22e78:	add	r5, sp, #12
   22e7c:	cmp	r1, #0
   22e80:	movne	r5, r1
   22e84:	add	r7, r2, r3
   22e88:	mov	r0, r5
   22e8c:	mov	r1, r6
   22e90:	mov	r3, r7
   22e94:	bl	22e24 <flatcc_json_parser_table_as_root@@Base+0xb4>
   22e98:	mov	r0, #2
   22e9c:	and	r3, r0, r8, lsr #1
   22ea0:	ldr	r1, [fp, #12]
   22ea4:	mov	r0, r6
   22ea8:	mov	r2, #0
   22eac:	bl	1d3f8 <flatcc_builder_start_buffer@@Base>
   22eb0:	mov	r1, r0
   22eb4:	mvn	r0, #0
   22eb8:	cmp	r1, #0
   22ebc:	bne	22ee4 <flatcc_json_parser_struct_as_root@@Base+0x88>
   22ec0:	ldr	ip, [fp, #16]
   22ec4:	add	r3, sp, #8
   22ec8:	mov	r0, r5
   22ecc:	mov	r1, r4
   22ed0:	mov	r2, r7
   22ed4:	blx	ip
   22ed8:	ldr	r0, [r5, #24]
   22edc:	cmp	r0, #0
   22ee0:	beq	22eec <flatcc_json_parser_struct_as_root@@Base+0x90>
   22ee4:	sub	sp, fp, #24
   22ee8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22eec:	ldr	r1, [sp, #8]
   22ef0:	mov	r0, r6
   22ef4:	bl	1d5ac <flatcc_builder_end_buffer@@Base>
   22ef8:	cmp	r0, #0
   22efc:	mvn	r0, #0
   22f00:	strne	r4, [r5, #40]	; 0x28
   22f04:	movne	r0, #0
   22f08:	sub	sp, fp, #24
   22f0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22f10:	vmov	d0, r0, r1
   22f14:	bx	lr
   22f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f1c:	add	fp, sp, #28
   22f20:	sub	sp, sp, #44	; 0x2c
   22f24:	mov	sl, r2
   22f28:	mov	r8, r0
   22f2c:	mov	r2, #0
   22f30:	str	r2, [sl]
   22f34:	str	r2, [sl, #4]
   22f38:	cmp	r1, #1000	; 0x3e8
   22f3c:	movge	r1, #1000	; 0x3e8
   22f40:	add	ip, r0, r1
   22f44:	add	r4, ip, #1
   22f48:	cmp	r4, r0
   22f4c:	beq	22fbc <flatcc_json_parser_struct_as_root@@Base+0x160>
   22f50:	ldrb	r7, [r8]
   22f54:	cmp	r7, #45	; 0x2d
   22f58:	mov	r3, r8
   22f5c:	bne	22f74 <flatcc_json_parser_struct_as_root@@Base+0x118>
   22f60:	cmp	r1, #0
   22f64:	beq	23350 <flatcc_json_parser_struct_as_root@@Base+0x4f4>
   22f68:	add	r3, r8, #1
   22f6c:	ldrb	r7, [r3]
   22f70:	mov	r2, #1
   22f74:	cmp	r7, #48	; 0x30
   22f78:	bne	22fa4 <flatcc_json_parser_struct_as_root@@Base+0x148>
   22f7c:	add	r0, r3, #1
   22f80:	cmp	r3, ip
   22f84:	beq	22fc8 <flatcc_json_parser_struct_as_root@@Base+0x16c>
   22f88:	ldrb	r7, [r0]
   22f8c:	orr	r7, r7, #32
   22f90:	cmp	r7, #120	; 0x78
   22f94:	bne	22fc8 <flatcc_json_parser_struct_as_root@@Base+0x16c>
   22f98:	mov	r1, sl
   22f9c:	bl	23414 <flatcc_json_parser_struct_as_root@@Base+0x5b8>
   22fa0:	b	22fbc <flatcc_json_parser_struct_as_root@@Base+0x160>
   22fa4:	sub	r0, r7, #49	; 0x31
   22fa8:	uxtb	r0, r0
   22fac:	cmp	r0, #9
   22fb0:	bcc	22ff8 <flatcc_json_parser_struct_as_root@@Base+0x19c>
   22fb4:	cmp	r2, #0
   22fb8:	movne	r8, #0
   22fbc:	mov	r0, r8
   22fc0:	sub	sp, fp, #28
   22fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22fc8:	cmp	r3, ip
   22fcc:	beq	22fec <flatcc_json_parser_struct_as_root@@Base+0x190>
   22fd0:	ldrb	r0, [r3, #1]
   22fd4:	cmp	r0, #48	; 0x30
   22fd8:	bne	22fe8 <flatcc_json_parser_struct_as_root@@Base+0x18c>
   22fdc:	add	r3, r3, #1
   22fe0:	cmp	ip, r3
   22fe4:	bne	22fd0 <flatcc_json_parser_struct_as_root@@Base+0x174>
   22fe8:	add	r0, r3, #1
   22fec:	mov	r7, #0
   22ff0:	mov	r3, #0
   22ff4:	b	23004 <flatcc_json_parser_struct_as_root@@Base+0x1a8>
   22ff8:	add	r0, r3, #1
   22ffc:	sub	r7, r7, #48	; 0x30
   23000:	asr	r3, r7, #31
   23004:	mov	r5, #0
   23008:	cmp	r0, r4
   2300c:	str	r2, [sp, #36]	; 0x24
   23010:	beq	23088 <flatcc_json_parser_struct_as_root@@Base+0x22c>
   23014:	str	ip, [sp, #28]
   23018:	str	sl, [sp, #32]
   2301c:	str	r8, [fp, #-32]	; 0xffffffe0
   23020:	movw	lr, #39321	; 0x9999
   23024:	movt	lr, #6553	; 0x1999
   23028:	movw	ip, #39320	; 0x9998
   2302c:	movt	ip, #39321	; 0x9999
   23030:	mov	r9, #10
   23034:	mov	r6, r0
   23038:	ldrb	r8, [r6]
   2303c:	sub	sl, r8, #48	; 0x30
   23040:	uxtb	r2, sl
   23044:	cmp	r2, #9
   23048:	bhi	23078 <flatcc_json_parser_struct_as_root@@Base+0x21c>
   2304c:	subs	r2, ip, r7
   23050:	sbcs	r2, lr, r3
   23054:	bcc	230a8 <flatcc_json_parser_struct_as_root@@Base+0x24c>
   23058:	add	r2, r3, r3, lsl #2
   2305c:	lsl	r2, r2, #1
   23060:	umlal	r8, r2, r7, r9
   23064:	subs	r7, r8, #48	; 0x30
   23068:	sbc	r3, r2, #0
   2306c:	add	r6, r6, #1
   23070:	cmp	r4, r6
   23074:	bne	23038 <flatcc_json_parser_struct_as_root@@Base+0x1dc>
   23078:	mov	lr, r7
   2307c:	mov	r9, r3
   23080:	mov	r3, #0
   23084:	b	230c0 <flatcc_json_parser_struct_as_root@@Base+0x264>
   23088:	mov	r6, r0
   2308c:	mov	lr, r7
   23090:	mov	r9, r3
   23094:	mov	r3, #0
   23098:	cmp	r6, r4
   2309c:	bne	230d4 <flatcc_json_parser_struct_as_root@@Base+0x278>
   230a0:	mov	r1, r6
   230a4:	b	23170 <flatcc_json_parser_struct_as_root@@Base+0x314>
   230a8:	adds	lr, r7, #1
   230ac:	adc	r9, r3, #0
   230b0:	cmp	r8, #52	; 0x34
   230b4:	movls	lr, r7
   230b8:	movls	r9, r3
   230bc:	mov	r3, #1
   230c0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   230c4:	ldr	sl, [sp, #32]
   230c8:	ldr	ip, [sp, #28]
   230cc:	cmp	r6, r4
   230d0:	beq	230a0 <flatcc_json_parser_struct_as_root@@Base+0x244>
   230d4:	mov	r7, r3
   230d8:	str	r4, [fp, #-32]	; 0xffffffe0
   230dc:	sub	r1, r1, r6
   230e0:	add	r3, r8, r1
   230e4:	mov	r5, #0
   230e8:	mov	r1, r6
   230ec:	ldrb	r4, [r1]
   230f0:	cmp	r4, #48	; 0x30
   230f4:	bne	23118 <flatcc_json_parser_struct_as_root@@Base+0x2bc>
   230f8:	sub	r3, r3, #1
   230fc:	add	r4, r1, #1
   23100:	add	r5, r5, #1
   23104:	cmp	r1, ip
   23108:	mov	r1, r4
   2310c:	bne	230ec <flatcc_json_parser_struct_as_root@@Base+0x290>
   23110:	mov	r1, r4
   23114:	b	23168 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   23118:	sub	r2, r4, #49	; 0x31
   2311c:	uxtb	r2, r2
   23120:	cmp	r2, #8
   23124:	bhi	23168 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   23128:	mvn	r7, #0
   2312c:	mov	r4, r7
   23130:	cmp	r3, #0
   23134:	beq	23154 <flatcc_json_parser_struct_as_root@@Base+0x2f8>
   23138:	ldrb	r2, [r1, -r4]
   2313c:	sub	r2, r2, #48	; 0x30
   23140:	uxtb	r2, r2
   23144:	sub	r7, r4, #1
   23148:	sub	r3, r3, #1
   2314c:	cmp	r2, #10
   23150:	bcc	2312c <flatcc_json_parser_struct_as_root@@Base+0x2d0>
   23154:	sub	r5, r5, r4
   23158:	sub	r1, r1, r4
   2315c:	mov	r3, #1
   23160:	ldr	r4, [fp, #-32]	; 0xffffffe0
   23164:	b	23170 <flatcc_json_parser_struct_as_root@@Base+0x314>
   23168:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2316c:	mov	r3, r7
   23170:	sub	r2, r6, r0
   23174:	cmp	r1, r4
   23178:	beq	2322c <flatcc_json_parser_struct_as_root@@Base+0x3d0>
   2317c:	ldrb	r0, [r1]
   23180:	cmp	r0, #46	; 0x2e
   23184:	bne	2322c <flatcc_json_parser_struct_as_root@@Base+0x3d0>
   23188:	mov	r6, r1
   2318c:	ldrb	r0, [r6, #1]!
   23190:	sub	r0, r0, #48	; 0x30
   23194:	str	r2, [sp, #28]
   23198:	uxtb	r2, r0
   2319c:	mov	r0, #0
   231a0:	cmp	r2, #9
   231a4:	ldr	r2, [sp, #28]
   231a8:	bhi	23354 <flatcc_json_parser_struct_as_root@@Base+0x4f8>
   231ac:	cmp	r1, ip
   231b0:	beq	232dc <flatcc_json_parser_struct_as_root@@Base+0x480>
   231b4:	str	r3, [sp, #24]
   231b8:	str	r4, [fp, #-32]	; 0xffffffe0
   231bc:	movw	r0, #39321	; 0x9999
   231c0:	movt	r0, #6553	; 0x1999
   231c4:	movw	r7, #39320	; 0x9998
   231c8:	movt	r7, #39321	; 0x9999
   231cc:	mov	r3, #10
   231d0:	ldrb	r4, [r1, #1]
   231d4:	sub	r2, r4, #48	; 0x30
   231d8:	uxtb	r2, r2
   231dc:	cmp	r2, #9
   231e0:	bhi	23214 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   231e4:	subs	r2, r7, lr
   231e8:	sbcs	r2, r0, r9
   231ec:	bcc	2335c <flatcc_json_parser_struct_as_root@@Base+0x500>
   231f0:	add	r2, r9, r9, lsl #2
   231f4:	lsl	r2, r2, #1
   231f8:	umlal	r4, r2, lr, r3
   231fc:	subs	lr, r4, #48	; 0x30
   23200:	sbc	r9, r2, #0
   23204:	add	r1, r1, #1
   23208:	sub	r5, r5, #1
   2320c:	cmp	ip, r1
   23210:	bne	231d0 <flatcc_json_parser_struct_as_root@@Base+0x374>
   23214:	add	r1, r1, #1
   23218:	str	lr, [sp, #32]
   2321c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   23220:	ldr	r3, [sp, #24]
   23224:	ldr	r2, [sp, #28]
   23228:	b	2339c <flatcc_json_parser_struct_as_root@@Base+0x540>
   2322c:	str	lr, [sp, #32]
   23230:	mov	lr, #0
   23234:	cmp	r1, r4
   23238:	beq	23298 <flatcc_json_parser_struct_as_root@@Base+0x43c>
   2323c:	ldrb	r0, [r1]
   23240:	orr	r0, r0, #32
   23244:	cmp	r0, #101	; 0x65
   23248:	bne	23298 <flatcc_json_parser_struct_as_root@@Base+0x43c>
   2324c:	mov	r7, r2
   23250:	sub	r2, r4, r1
   23254:	mov	r0, #0
   23258:	cmp	r2, #2
   2325c:	blt	23354 <flatcc_json_parser_struct_as_root@@Base+0x4f8>
   23260:	mov	r2, r7
   23264:	mov	r6, r1
   23268:	ldrb	r0, [r6, #1]!
   2326c:	cmp	r0, #45	; 0x2d
   23270:	beq	232e8 <flatcc_json_parser_struct_as_root@@Base+0x48c>
   23274:	mov	lr, #0
   23278:	cmp	r0, #43	; 0x2b
   2327c:	bne	232f8 <flatcc_json_parser_struct_as_root@@Base+0x49c>
   23280:	add	r6, r1, #2
   23284:	mov	r0, #0
   23288:	cmp	r6, r4
   2328c:	beq	23354 <flatcc_json_parser_struct_as_root@@Base+0x4f8>
   23290:	mov	lr, #0
   23294:	b	232f8 <flatcc_json_parser_struct_as_root@@Base+0x49c>
   23298:	mov	r7, #0
   2329c:	cmp	r1, r4
   232a0:	mov	r0, #0
   232a4:	beq	23354 <flatcc_json_parser_struct_as_root@@Base+0x4f8>
   232a8:	add	r0, r2, r5
   232ac:	cmp	lr, #0
   232b0:	rsbne	r7, r7, #0
   232b4:	add	r0, r0, r7
   232b8:	ldr	r7, [sp, #32]
   232bc:	stm	sp, {r7, r9}
   232c0:	add	ip, sp, #8
   232c4:	stm	ip, {r0, r2, r3, sl}
   232c8:	mov	r0, r8
   232cc:	ldr	r2, [sp, #36]	; 0x24
   232d0:	bl	23428 <flatcc_json_parser_struct_as_root@@Base+0x5cc>
   232d4:	sub	sp, fp, #28
   232d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232dc:	mov	r1, r6
   232e0:	str	lr, [sp, #32]
   232e4:	b	2339c <flatcc_json_parser_struct_as_root@@Base+0x540>
   232e8:	add	r6, r1, #2
   232ec:	mov	lr, #1
   232f0:	cmp	r6, r4
   232f4:	beq	23350 <flatcc_json_parser_struct_as_root@@Base+0x4f4>
   232f8:	ldrb	r0, [r6]
   232fc:	sub	r7, r0, #48	; 0x30
   23300:	uxtb	r1, r7
   23304:	mov	r0, #0
   23308:	cmp	r1, #9
   2330c:	bhi	23354 <flatcc_json_parser_struct_as_root@@Base+0x4f8>
   23310:	cmp	r6, ip
   23314:	beq	23348 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   23318:	ldrb	r0, [r6, #1]
   2331c:	sub	r1, r0, #48	; 0x30
   23320:	uxtb	r1, r1
   23324:	cmp	r1, #9
   23328:	bhi	23348 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   2332c:	cmp	r7, #32768	; 0x8000
   23330:	addlt	r1, r7, r7, lsl #2
   23334:	addlt	r0, r0, r1, lsl #1
   23338:	sublt	r7, r0, #48	; 0x30
   2333c:	add	r6, r6, #1
   23340:	cmp	ip, r6
   23344:	bne	23318 <flatcc_json_parser_struct_as_root@@Base+0x4bc>
   23348:	add	r1, r6, #1
   2334c:	b	2329c <flatcc_json_parser_struct_as_root@@Base+0x440>
   23350:	mov	r0, #0
   23354:	sub	sp, fp, #28
   23358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2335c:	add	r1, r1, #1
   23360:	ldr	r3, [sp, #24]
   23364:	cmp	r3, #0
   23368:	ldr	r2, [sp, #28]
   2336c:	beq	23378 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   23370:	str	lr, [sp, #32]
   23374:	b	23398 <flatcc_json_parser_struct_as_root@@Base+0x53c>
   23378:	adds	r0, lr, #1
   2337c:	adc	r3, r9, #0
   23380:	cmp	r4, #52	; 0x34
   23384:	movls	r0, lr
   23388:	str	r0, [sp, #32]
   2338c:	movls	r3, r9
   23390:	mov	r9, r3
   23394:	mov	r3, #1
   23398:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2339c:	sub	r0, r1, r6
   233a0:	add	r2, r0, r2
   233a4:	cmp	r1, r4
   233a8:	beq	23230 <flatcc_json_parser_struct_as_root@@Base+0x3d4>
   233ac:	ldrb	r0, [r1]
   233b0:	cmp	r0, #48	; 0x30
   233b4:	bne	233cc <flatcc_json_parser_struct_as_root@@Base+0x570>
   233b8:	add	r1, r1, #1
   233bc:	add	r5, r5, #1
   233c0:	cmp	r4, r1
   233c4:	bne	233ac <flatcc_json_parser_struct_as_root@@Base+0x550>
   233c8:	b	23230 <flatcc_json_parser_struct_as_root@@Base+0x3d4>
   233cc:	sub	r0, r0, #49	; 0x31
   233d0:	uxtb	r0, r0
   233d4:	cmp	r0, #8
   233d8:	bhi	23230 <flatcc_json_parser_struct_as_root@@Base+0x3d4>
   233dc:	mov	r7, r2
   233e0:	mov	r0, r1
   233e4:	cmp	ip, r1
   233e8:	beq	23404 <flatcc_json_parser_struct_as_root@@Base+0x5a8>
   233ec:	add	r1, r0, #1
   233f0:	ldrb	r2, [r0, #1]
   233f4:	sub	r2, r2, #48	; 0x30
   233f8:	uxtb	r2, r2
   233fc:	cmp	r2, #10
   23400:	bcc	233e0 <flatcc_json_parser_struct_as_root@@Base+0x584>
   23404:	add	r1, r0, #1
   23408:	mov	r3, #1
   2340c:	mov	r2, r7
   23410:	b	23230 <flatcc_json_parser_struct_as_root@@Base+0x3d4>
   23414:	mov	r2, #0
   23418:	str	r2, [r1]
   2341c:	str	r2, [r1, #4]
   23420:	bx	lr
   23424:	nop	{0}
   23428:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2342c:	add	fp, sp, #24
   23430:	sub	sp, sp, #16
   23434:	mov	r5, r2
   23438:	mov	r4, r1
   2343c:	mov	r6, r0
   23440:	ldr	r1, [fp, #12]
   23444:	ldr	r0, [fp, #8]
   23448:	vmov.i32	d0, #0	; 0x00000000
   2344c:	orrs	r2, r0, r1
   23450:	ldr	r9, [fp, #28]
   23454:	beq	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23458:	ldr	r7, [fp, #16]
   2345c:	cmn	r7, #324	; 0x144
   23460:	blt	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23464:	movw	r2, #311	; 0x137
   23468:	cmp	r7, r2
   2346c:	blt	234a4 <flatcc_json_parser_struct_as_root@@Base+0x648>
   23470:	movw	r1, #0
   23474:	movt	r1, #32752	; 0x7ff0
   23478:	mov	r0, #0
   2347c:	bl	22f10 <flatcc_json_parser_struct_as_root@@Base+0xb4>
   23480:	vstr	d0, [r9]
   23484:	cmp	r5, #0
   23488:	beq	23498 <flatcc_json_parser_struct_as_root@@Base+0x63c>
   2348c:	vldr	d16, [r9]
   23490:	vneg.f64	d16, d16
   23494:	vstr	d16, [r9]
   23498:	mov	r0, r4
   2349c:	sub	sp, fp, #24
   234a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   234a4:	ldr	r8, [fp, #20]
   234a8:	mov	r2, #0
   234ac:	cmp	r2, r1, lsr #21
   234b0:	bne	23598 <flatcc_json_parser_struct_as_root@@Base+0x73c>
   234b4:	cmp	r7, #22
   234b8:	bhi	23598 <flatcc_json_parser_struct_as_root@@Base+0x73c>
   234bc:	bl	23c04 <flatcc_json_parser_struct_as_root@@Base+0xda8>
   234c0:	sub	r2, r7, r8
   234c4:	vmov	d0, r0, r1
   234c8:	add	r0, r2, #22
   234cc:	cmp	r0, #44	; 0x2c
   234d0:	bhi	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   234d4:	add	r1, pc, #0
   234d8:	ldr	pc, [r1, r0, lsl #2]
   234dc:	muleq	r2, r0, r5
   234e0:	ldrdeq	r3, [r2], -r4
   234e4:	ldrdeq	r3, [r2], -ip
   234e8:	andeq	r3, r2, r4, ror #11
   234ec:	andeq	r3, r2, ip, ror #11
   234f0:	strdeq	r3, [r2], -r4
   234f4:	strdeq	r3, [r2], -ip
   234f8:	andeq	r3, r2, r4, lsl #12
   234fc:	andeq	r3, r2, ip, lsl #12
   23500:	andeq	r3, r2, r4, lsl r6
   23504:	andeq	r3, r2, ip, lsl r6
   23508:	andeq	r3, r2, r4, lsr #12
   2350c:	andeq	r3, r2, ip, lsr #12
   23510:	andeq	r3, r2, r4, lsr r6
   23514:	andeq	r3, r2, ip, lsr r6
   23518:	andeq	r3, r2, r4, asr #12
   2351c:	andeq	r3, r2, ip, asr #12
   23520:	andeq	r3, r2, r4, asr r6
   23524:	andeq	r3, r2, ip, asr r6
   23528:	andeq	r3, r2, r4, ror #12
   2352c:	andeq	r3, r2, ip, ror #12
   23530:	andeq	r3, r2, r4, ror r6
   23534:	andeq	r3, r2, r0, lsl #9
   23538:	andeq	r3, r2, r0, lsl #13
   2353c:	andeq	r3, r2, ip, lsl #13
   23540:	muleq	r2, r8, r6
   23544:	andeq	r3, r2, r4, lsr #13
   23548:			; <UNDEFINED> instruction: 0x000236b0
   2354c:			; <UNDEFINED> instruction: 0x000236bc
   23550:	andeq	r3, r2, r8, asr #13
   23554:	ldrdeq	r3, [r2], -r4
   23558:	andeq	r3, r2, r0, ror #13
   2355c:	andeq	r3, r2, ip, ror #13
   23560:	strdeq	r3, [r2], -r8
   23564:	andeq	r3, r2, r4, lsl #14
   23568:	andeq	r3, r2, r0, lsl r7
   2356c:	andeq	r3, r2, ip, lsl r7
   23570:	andeq	r3, r2, r8, lsr #14
   23574:	andeq	r3, r2, r4, lsr r7
   23578:	andeq	r3, r2, r0, asr #14
   2357c:	andeq	r3, r2, ip, asr #14
   23580:	andeq	r3, r2, r8, asr r7
   23584:	andeq	r3, r2, r4, ror #14
   23588:	andeq	r3, r2, r0, ror r7
   2358c:	andeq	r3, r2, ip, ror r7
   23590:	vldr	d16, [pc, #656]	; 23828 <flatcc_json_parser_struct_as_root@@Base+0x9cc>
   23594:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23598:	ldr	r2, [fp, #24]
   2359c:	stm	sp, {r2, r9}
   235a0:	mov	r2, r7
   235a4:	mov	r3, r8
   235a8:	bl	20338 <grisu3_diy_fp_encode_double@@Base>
   235ac:	cmp	r0, #0
   235b0:	bne	23484 <flatcc_json_parser_struct_as_root@@Base+0x628>
   235b4:	add	r1, sp, #12
   235b8:	mov	r0, r6
   235bc:	bl	12b70 <strtod@plt>
   235c0:	vstr	d0, [r9]
   235c4:	ldr	r0, [sp, #12]
   235c8:	cmp	r0, r4
   235cc:	movcc	r4, r0
   235d0:	b	23498 <flatcc_json_parser_struct_as_root@@Base+0x63c>
   235d4:	vldr	d16, [pc, #428]	; 23788 <flatcc_json_parser_struct_as_root@@Base+0x92c>
   235d8:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   235dc:	vldr	d16, [pc, #428]	; 23790 <flatcc_json_parser_struct_as_root@@Base+0x934>
   235e0:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   235e4:	vldr	d16, [pc, #428]	; 23798 <flatcc_json_parser_struct_as_root@@Base+0x93c>
   235e8:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   235ec:	vldr	d16, [pc, #428]	; 237a0 <flatcc_json_parser_struct_as_root@@Base+0x944>
   235f0:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   235f4:	vldr	d16, [pc, #428]	; 237a8 <flatcc_json_parser_struct_as_root@@Base+0x94c>
   235f8:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   235fc:	vldr	d16, [pc, #428]	; 237b0 <flatcc_json_parser_struct_as_root@@Base+0x954>
   23600:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23604:	vldr	d16, [pc, #428]	; 237b8 <flatcc_json_parser_struct_as_root@@Base+0x95c>
   23608:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   2360c:	vldr	d16, [pc, #428]	; 237c0 <flatcc_json_parser_struct_as_root@@Base+0x964>
   23610:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23614:	vldr	d16, [pc, #428]	; 237c8 <flatcc_json_parser_struct_as_root@@Base+0x96c>
   23618:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   2361c:	vldr	d16, [pc, #428]	; 237d0 <flatcc_json_parser_struct_as_root@@Base+0x974>
   23620:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23624:	vldr	d16, [pc, #428]	; 237d8 <flatcc_json_parser_struct_as_root@@Base+0x97c>
   23628:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   2362c:	vldr	d16, [pc, #428]	; 237e0 <flatcc_json_parser_struct_as_root@@Base+0x984>
   23630:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23634:	vldr	d16, [pc, #428]	; 237e8 <flatcc_json_parser_struct_as_root@@Base+0x98c>
   23638:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   2363c:	vldr	d16, [pc, #428]	; 237f0 <flatcc_json_parser_struct_as_root@@Base+0x994>
   23640:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23644:	vldr	d16, [pc, #428]	; 237f8 <flatcc_json_parser_struct_as_root@@Base+0x99c>
   23648:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   2364c:	vldr	d16, [pc, #428]	; 23800 <flatcc_json_parser_struct_as_root@@Base+0x9a4>
   23650:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23654:	vldr	d16, [pc, #428]	; 23808 <flatcc_json_parser_struct_as_root@@Base+0x9ac>
   23658:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   2365c:	vldr	d16, [pc, #428]	; 23810 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   23660:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23664:	vldr	d16, [pc, #428]	; 23818 <flatcc_json_parser_struct_as_root@@Base+0x9bc>
   23668:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   2366c:	vldr	d16, [pc, #428]	; 23820 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   23670:	b	23678 <flatcc_json_parser_struct_as_root@@Base+0x81c>
   23674:	vmov.f64	d16, #36	; 0x41200000  10.0
   23678:	vdiv.f64	d0, d0, d16
   2367c:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23680:	vmov.f64	d16, #36	; 0x41200000  10.0
   23684:	vmul.f64	d0, d0, d16
   23688:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2368c:	vldr	d16, [pc, #396]	; 23820 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   23690:	vmul.f64	d0, d0, d16
   23694:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23698:	vldr	d16, [pc, #376]	; 23818 <flatcc_json_parser_struct_as_root@@Base+0x9bc>
   2369c:	vmul.f64	d0, d0, d16
   236a0:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236a4:	vldr	d16, [pc, #356]	; 23810 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   236a8:	vmul.f64	d0, d0, d16
   236ac:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236b0:	vldr	d16, [pc, #336]	; 23808 <flatcc_json_parser_struct_as_root@@Base+0x9ac>
   236b4:	vmul.f64	d0, d0, d16
   236b8:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236bc:	vldr	d16, [pc, #316]	; 23800 <flatcc_json_parser_struct_as_root@@Base+0x9a4>
   236c0:	vmul.f64	d0, d0, d16
   236c4:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236c8:	vldr	d16, [pc, #296]	; 237f8 <flatcc_json_parser_struct_as_root@@Base+0x99c>
   236cc:	vmul.f64	d0, d0, d16
   236d0:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236d4:	vldr	d16, [pc, #276]	; 237f0 <flatcc_json_parser_struct_as_root@@Base+0x994>
   236d8:	vmul.f64	d0, d0, d16
   236dc:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236e0:	vldr	d16, [pc, #256]	; 237e8 <flatcc_json_parser_struct_as_root@@Base+0x98c>
   236e4:	vmul.f64	d0, d0, d16
   236e8:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236ec:	vldr	d16, [pc, #236]	; 237e0 <flatcc_json_parser_struct_as_root@@Base+0x984>
   236f0:	vmul.f64	d0, d0, d16
   236f4:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   236f8:	vldr	d16, [pc, #216]	; 237d8 <flatcc_json_parser_struct_as_root@@Base+0x97c>
   236fc:	vmul.f64	d0, d0, d16
   23700:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23704:	vldr	d16, [pc, #196]	; 237d0 <flatcc_json_parser_struct_as_root@@Base+0x974>
   23708:	vmul.f64	d0, d0, d16
   2370c:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23710:	vldr	d16, [pc, #176]	; 237c8 <flatcc_json_parser_struct_as_root@@Base+0x96c>
   23714:	vmul.f64	d0, d0, d16
   23718:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2371c:	vldr	d16, [pc, #156]	; 237c0 <flatcc_json_parser_struct_as_root@@Base+0x964>
   23720:	vmul.f64	d0, d0, d16
   23724:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23728:	vldr	d16, [pc, #136]	; 237b8 <flatcc_json_parser_struct_as_root@@Base+0x95c>
   2372c:	vmul.f64	d0, d0, d16
   23730:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23734:	vldr	d16, [pc, #116]	; 237b0 <flatcc_json_parser_struct_as_root@@Base+0x954>
   23738:	vmul.f64	d0, d0, d16
   2373c:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23740:	vldr	d16, [pc, #96]	; 237a8 <flatcc_json_parser_struct_as_root@@Base+0x94c>
   23744:	vmul.f64	d0, d0, d16
   23748:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2374c:	vldr	d16, [pc, #76]	; 237a0 <flatcc_json_parser_struct_as_root@@Base+0x944>
   23750:	vmul.f64	d0, d0, d16
   23754:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23758:	vldr	d16, [pc, #56]	; 23798 <flatcc_json_parser_struct_as_root@@Base+0x93c>
   2375c:	vmul.f64	d0, d0, d16
   23760:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23764:	vldr	d16, [pc, #36]	; 23790 <flatcc_json_parser_struct_as_root@@Base+0x934>
   23768:	vmul.f64	d0, d0, d16
   2376c:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23770:	vldr	d16, [pc, #16]	; 23788 <flatcc_json_parser_struct_as_root@@Base+0x92c>
   23774:	vmul.f64	d0, d0, d16
   23778:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2377c:	vldr	d16, [pc, #164]	; 23828 <flatcc_json_parser_struct_as_root@@Base+0x9cc>
   23780:	vmul.f64	d0, d0, d16
   23784:	b	23480 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23788:	usatle	lr, #2, r0, asr #30
   2378c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   23790:	ldmvc	r5!, {r6, sl, fp, pc}
   23794:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   23798:	addsvs	r3, r1, r0, lsl #26
   2379c:	mvnmi	r5, #228, 16	; 0xe40000
   237a0:	strbvs	ip, [lr, -r0, lsl #16]
   237a4:			; <UNDEFINED> instruction: 0x43abc16d
   237a8:	ldrbhi	sl, [r8]
   237ac:	cmnmi	r6, #1459617792	; 0x57000000
   237b0:	strbcc	r8, [r0, r0]!
   237b4:	movtmi	ip, #4985	; 0x1379
   237b8:	ldrtcs	r0, [r4], -r0
   237bc:	movwmi	r6, #52213	; 0xcbf5
   237c0:	cdpne	0, 9, cr0, cr0, cr0, {0}
   237c4:	sbcsmi	fp, r6, #196, 24	; 0xc400
   237c8:	strb	r0, [r0, #-0]
   237cc:	adcmi	r3, r2, #156	; 0x9c
   237d0:	andge	r0, r0, #0
   237d4:	rsbmi	r1, sp, #148, 20	; 0x94000
   237d8:	stmda	r0, {}	; <UNPREDICTABLE>
   237dc:	eorsmi	r4, r7, #7733248	; 0x760000
   237e0:	andcs	r0, r0, r0
   237e4:	andmi	sl, r2, #95	; 0x5f
   237e8:	andeq	r0, r0, r0
   237ec:	bicmi	ip, sp, r5, ror #26
   237f0:	andeq	r0, r0, r0
   237f4:	orrsmi	sp, r7, r4, lsl #15
   237f8:	andeq	r0, r0, r0
   237fc:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   23800:	andeq	r0, r0, r0
   23804:	smlawbmi	lr, r0, r4, r8
   23808:	andeq	r0, r0, r0
   2380c:	rscsmi	r6, r8, r0, lsl #20
   23810:	andeq	r0, r0, r0
   23814:	sbcmi	r8, r3, r0, lsl #16
   23818:	andeq	r0, r0, r0
   2381c:	addmi	r4, pc, r0
   23820:	andeq	r0, r0, r0
   23824:	subsmi	r0, r9, r0
   23828:			; <UNDEFINED> instruction: 0x064dd592
   2382c:	strmi	pc, [r0], #207	; 0xcf
   23830:	push	{fp, lr}
   23834:	mov	fp, sp
   23838:	cmp	r3, #0
   2383c:	beq	2384c <flatcc_json_parser_struct_as_root@@Base+0x9f0>
   23840:	mov	r3, #8
   23844:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   23848:	pop	{fp, pc}
   2384c:	ldr	ip, [fp, #12]
   23850:	ldr	lr, [fp, #8]
   23854:	subs	r3, lr, #256	; 0x100
   23858:	sbcs	r3, ip, #0
   2385c:	bcc	2386c <flatcc_json_parser_struct_as_root@@Base+0xa10>
   23860:	mov	r3, #7
   23864:	bl	208a0 <flatcc_json_parser_set_error@@Base>
   23868:	pop	{fp, pc}
   2386c:	ldr	r0, [fp, #16]
   23870:	strb	lr, [r0]
   23874:	mov	r0, r1
   23878:	pop	{fp, pc}
   2387c:	push	{r4, r5, fp, lr}
   23880:	add	fp, sp, #8
   23884:	mov	r4, r2
   23888:	mov	r5, r0
   2388c:	bl	21724 <flatcc_json_parser_float@@Base+0x140>
   23890:	mov	r1, r0
   23894:	ldr	r0, [r5, #12]
   23898:	cmp	r0, #0
   2389c:	movne	r0, r1
   238a0:	popne	{r4, r5, fp, pc}
   238a4:	mov	r0, r5
   238a8:	mov	r2, r4
   238ac:	pop	{r4, r5, fp, lr}
   238b0:	b	20eb4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   238b4:	bx	lr
   238b8:	eor	r1, r1, #-2147483648	; 0x80000000
   238bc:	b	238c4 <flatcc_json_parser_struct_as_root@@Base+0xa68>
   238c0:	eor	r3, r3, #-2147483648	; 0x80000000
   238c4:	push	{r4, r5, lr}
   238c8:	lsl	r4, r1, #1
   238cc:	lsl	r5, r3, #1
   238d0:	teq	r4, r5
   238d4:	teqeq	r0, r2
   238d8:	orrsne	ip, r4, r0
   238dc:	orrsne	ip, r5, r2
   238e0:	mvnsne	ip, r4, asr #21
   238e4:	mvnsne	ip, r5, asr #21
   238e8:	beq	23ad4 <flatcc_json_parser_struct_as_root@@Base+0xc78>
   238ec:	lsr	r4, r4, #21
   238f0:	rsbs	r5, r4, r5, lsr #21
   238f4:	rsblt	r5, r5, #0
   238f8:	ble	23918 <flatcc_json_parser_struct_as_root@@Base+0xabc>
   238fc:	add	r4, r4, r5
   23900:	eor	r2, r0, r2
   23904:	eor	r3, r1, r3
   23908:	eor	r0, r2, r0
   2390c:	eor	r1, r3, r1
   23910:	eor	r2, r0, r2
   23914:	eor	r3, r1, r3
   23918:	cmp	r5, #54	; 0x36
   2391c:	pophi	{r4, r5, pc}
   23920:	tst	r1, #-2147483648	; 0x80000000
   23924:	lsl	r1, r1, #12
   23928:	mov	ip, #1048576	; 0x100000
   2392c:	orr	r1, ip, r1, lsr #12
   23930:	beq	2393c <flatcc_json_parser_struct_as_root@@Base+0xae0>
   23934:	rsbs	r0, r0, #0
   23938:	rsc	r1, r1, #0
   2393c:	tst	r3, #-2147483648	; 0x80000000
   23940:	lsl	r3, r3, #12
   23944:	orr	r3, ip, r3, lsr #12
   23948:	beq	23954 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2394c:	rsbs	r2, r2, #0
   23950:	rsc	r3, r3, #0
   23954:	teq	r4, r5
   23958:	beq	23abc <flatcc_json_parser_struct_as_root@@Base+0xc60>
   2395c:	sub	r4, r4, #1
   23960:	rsbs	lr, r5, #32
   23964:	blt	23980 <flatcc_json_parser_struct_as_root@@Base+0xb24>
   23968:	lsl	ip, r2, lr
   2396c:	adds	r0, r0, r2, lsr r5
   23970:	adc	r1, r1, #0
   23974:	adds	r0, r0, r3, lsl lr
   23978:	adcs	r1, r1, r3, asr r5
   2397c:	b	2399c <flatcc_json_parser_struct_as_root@@Base+0xb40>
   23980:	sub	r5, r5, #32
   23984:	add	lr, lr, #32
   23988:	cmp	r2, #1
   2398c:	lsl	ip, r3, lr
   23990:	orrcs	ip, ip, #2
   23994:	adds	r0, r0, r3, asr r5
   23998:	adcs	r1, r1, r3, asr #31
   2399c:	and	r5, r1, #-2147483648	; 0x80000000
   239a0:	bpl	239b0 <flatcc_json_parser_struct_as_root@@Base+0xb54>
   239a4:	rsbs	ip, ip, #0
   239a8:	rscs	r0, r0, #0
   239ac:	rsc	r1, r1, #0
   239b0:	cmp	r1, #1048576	; 0x100000
   239b4:	bcc	239f4 <flatcc_json_parser_struct_as_root@@Base+0xb98>
   239b8:	cmp	r1, #2097152	; 0x200000
   239bc:	bcc	239dc <flatcc_json_parser_struct_as_root@@Base+0xb80>
   239c0:	lsrs	r1, r1, #1
   239c4:	rrxs	r0, r0
   239c8:	rrx	ip, ip
   239cc:	add	r4, r4, #1
   239d0:	lsl	r2, r4, #21
   239d4:	cmn	r2, #4194304	; 0x400000
   239d8:	bcs	23b34 <flatcc_json_parser_struct_as_root@@Base+0xcd8>
   239dc:	cmp	ip, #-2147483648	; 0x80000000
   239e0:	lsrseq	ip, r0, #1
   239e4:	adcs	r0, r0, #0
   239e8:	adc	r1, r1, r4, lsl #20
   239ec:	orr	r1, r1, r5
   239f0:	pop	{r4, r5, pc}
   239f4:	lsls	ip, ip, #1
   239f8:	adcs	r0, r0, r0
   239fc:	adc	r1, r1, r1
   23a00:	tst	r1, #1048576	; 0x100000
   23a04:	sub	r4, r4, #1
   23a08:	bne	239dc <flatcc_json_parser_struct_as_root@@Base+0xb80>
   23a0c:	teq	r1, #0
   23a10:	moveq	r1, r0
   23a14:	moveq	r0, #0
   23a18:	clz	r3, r1
   23a1c:	addeq	r3, r3, #32
   23a20:	sub	r3, r3, #11
   23a24:	subs	r2, r3, #32
   23a28:	bge	23a4c <flatcc_json_parser_struct_as_root@@Base+0xbf0>
   23a2c:	adds	r2, r2, #12
   23a30:	ble	23a48 <flatcc_json_parser_struct_as_root@@Base+0xbec>
   23a34:	add	ip, r2, #20
   23a38:	rsb	r2, r2, #12
   23a3c:	lsl	r0, r1, ip
   23a40:	lsr	r1, r1, r2
   23a44:	b	23a5c <flatcc_json_parser_struct_as_root@@Base+0xc00>
   23a48:	add	r2, r2, #20
   23a4c:	rsble	ip, r2, #32
   23a50:	lsl	r1, r1, r2
   23a54:	orrle	r1, r1, r0, lsr ip
   23a58:	lslle	r0, r0, r2
   23a5c:	subs	r4, r4, r3
   23a60:	addge	r1, r1, r4, lsl #20
   23a64:	orrge	r1, r1, r5
   23a68:	popge	{r4, r5, pc}
   23a6c:	mvn	r4, r4
   23a70:	subs	r4, r4, #31
   23a74:	bge	23ab0 <flatcc_json_parser_struct_as_root@@Base+0xc54>
   23a78:	adds	r4, r4, #12
   23a7c:	bgt	23a98 <flatcc_json_parser_struct_as_root@@Base+0xc3c>
   23a80:	add	r4, r4, #20
   23a84:	rsb	r2, r4, #32
   23a88:	lsr	r0, r0, r4
   23a8c:	orr	r0, r0, r1, lsl r2
   23a90:	orr	r1, r5, r1, lsr r4
   23a94:	pop	{r4, r5, pc}
   23a98:	rsb	r4, r4, #12
   23a9c:	rsb	r2, r4, #32
   23aa0:	lsr	r0, r0, r2
   23aa4:	orr	r0, r0, r1, lsl r4
   23aa8:	mov	r1, r5
   23aac:	pop	{r4, r5, pc}
   23ab0:	lsr	r0, r1, r4
   23ab4:	mov	r1, r5
   23ab8:	pop	{r4, r5, pc}
   23abc:	teq	r4, #0
   23ac0:	eor	r3, r3, #1048576	; 0x100000
   23ac4:	eoreq	r1, r1, #1048576	; 0x100000
   23ac8:	addeq	r4, r4, #1
   23acc:	subne	r5, r5, #1
   23ad0:	b	2395c <flatcc_json_parser_struct_as_root@@Base+0xb00>
   23ad4:	mvns	ip, r4, asr #21
   23ad8:	mvnsne	ip, r5, asr #21
   23adc:	beq	23b44 <flatcc_json_parser_struct_as_root@@Base+0xce8>
   23ae0:	teq	r4, r5
   23ae4:	teqeq	r0, r2
   23ae8:	beq	23afc <flatcc_json_parser_struct_as_root@@Base+0xca0>
   23aec:	orrs	ip, r4, r0
   23af0:	moveq	r1, r3
   23af4:	moveq	r0, r2
   23af8:	pop	{r4, r5, pc}
   23afc:	teq	r1, r3
   23b00:	movne	r1, #0
   23b04:	movne	r0, #0
   23b08:	popne	{r4, r5, pc}
   23b0c:	lsrs	ip, r4, #21
   23b10:	bne	23b24 <flatcc_json_parser_struct_as_root@@Base+0xcc8>
   23b14:	lsls	r0, r0, #1
   23b18:	adcs	r1, r1, r1
   23b1c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   23b20:	pop	{r4, r5, pc}
   23b24:	adds	r4, r4, #4194304	; 0x400000
   23b28:	addcc	r1, r1, #1048576	; 0x100000
   23b2c:	popcc	{r4, r5, pc}
   23b30:	and	r5, r1, #-2147483648	; 0x80000000
   23b34:	orr	r1, r5, #2130706432	; 0x7f000000
   23b38:	orr	r1, r1, #15728640	; 0xf00000
   23b3c:	mov	r0, #0
   23b40:	pop	{r4, r5, pc}
   23b44:	mvns	ip, r4, asr #21
   23b48:	movne	r1, r3
   23b4c:	movne	r0, r2
   23b50:	mvnseq	ip, r5, asr #21
   23b54:	movne	r3, r1
   23b58:	movne	r2, r0
   23b5c:	orrs	r4, r0, r1, lsl #12
   23b60:	orrseq	r5, r2, r3, lsl #12
   23b64:	teqeq	r1, r3
   23b68:	orrne	r1, r1, #524288	; 0x80000
   23b6c:	pop	{r4, r5, pc}
   23b70:	teq	r0, #0
   23b74:	moveq	r1, #0
   23b78:	bxeq	lr
   23b7c:	push	{r4, r5, lr}
   23b80:	mov	r4, #1024	; 0x400
   23b84:	add	r4, r4, #50	; 0x32
   23b88:	mov	r5, #0
   23b8c:	mov	r1, #0
   23b90:	b	23a0c <flatcc_json_parser_struct_as_root@@Base+0xbb0>
   23b94:	teq	r0, #0
   23b98:	moveq	r1, #0
   23b9c:	bxeq	lr
   23ba0:	push	{r4, r5, lr}
   23ba4:	mov	r4, #1024	; 0x400
   23ba8:	add	r4, r4, #50	; 0x32
   23bac:	ands	r5, r0, #-2147483648	; 0x80000000
   23bb0:	rsbmi	r0, r0, #0
   23bb4:	mov	r1, #0
   23bb8:	b	23a0c <flatcc_json_parser_struct_as_root@@Base+0xbb0>
   23bbc:	lsls	r2, r0, #1
   23bc0:	asr	r1, r2, #3
   23bc4:	rrx	r1, r1
   23bc8:	lsl	r0, r2, #28
   23bcc:	andsne	r3, r2, #-16777216	; 0xff000000
   23bd0:	teqne	r3, #-16777216	; 0xff000000
   23bd4:	eorne	r1, r1, #939524096	; 0x38000000
   23bd8:	bxne	lr
   23bdc:	bics	r2, r2, #-16777216	; 0xff000000
   23be0:	bxeq	lr
   23be4:	teq	r3, #-16777216	; 0xff000000
   23be8:	orreq	r1, r1, #524288	; 0x80000
   23bec:	bxeq	lr
   23bf0:	push	{r4, r5, lr}
   23bf4:	mov	r4, #896	; 0x380
   23bf8:	and	r5, r1, #-2147483648	; 0x80000000
   23bfc:	bic	r1, r1, #-2147483648	; 0x80000000
   23c00:	b	23a0c <flatcc_json_parser_struct_as_root@@Base+0xbb0>
   23c04:	orrs	r2, r0, r1
   23c08:	bxeq	lr
   23c0c:	push	{r4, r5, lr}
   23c10:	mov	r5, #0
   23c14:	b	23c34 <flatcc_json_parser_struct_as_root@@Base+0xdd8>
   23c18:	orrs	r2, r0, r1
   23c1c:	bxeq	lr
   23c20:	push	{r4, r5, lr}
   23c24:	ands	r5, r1, #-2147483648	; 0x80000000
   23c28:	bpl	23c34 <flatcc_json_parser_struct_as_root@@Base+0xdd8>
   23c2c:	rsbs	r0, r0, #0
   23c30:	rsc	r1, r1, #0
   23c34:	mov	r4, #1024	; 0x400
   23c38:	add	r4, r4, #50	; 0x32
   23c3c:	lsrs	ip, r1, #22
   23c40:	beq	239b0 <flatcc_json_parser_struct_as_root@@Base+0xb54>
   23c44:	mov	r2, #3
   23c48:	lsrs	ip, ip, #3
   23c4c:	addne	r2, r2, #3
   23c50:	lsrs	ip, ip, #3
   23c54:	addne	r2, r2, #3
   23c58:	add	r2, r2, ip, lsr #3
   23c5c:	rsb	r3, r2, #32
   23c60:	lsl	ip, r0, r3
   23c64:	lsr	r0, r0, r2
   23c68:	orr	r0, r0, r1, lsl r3
   23c6c:	lsr	r1, r1, r2
   23c70:	add	r4, r4, r2
   23c74:	b	239b0 <flatcc_json_parser_struct_as_root@@Base+0xb54>
   23c78:	eor	r0, r0, #-2147483648	; 0x80000000
   23c7c:	b	23c84 <flatcc_json_parser_struct_as_root@@Base+0xe28>
   23c80:	eor	r1, r1, #-2147483648	; 0x80000000
   23c84:	lsls	r2, r0, #1
   23c88:	lslsne	r3, r1, #1
   23c8c:	teqne	r2, r3
   23c90:	mvnsne	ip, r2, asr #24
   23c94:	mvnsne	ip, r3, asr #24
   23c98:	beq	23d90 <flatcc_json_parser_struct_as_root@@Base+0xf34>
   23c9c:	lsr	r2, r2, #24
   23ca0:	rsbs	r3, r2, r3, lsr #24
   23ca4:	addgt	r2, r2, r3
   23ca8:	eorgt	r1, r0, r1
   23cac:	eorgt	r0, r1, r0
   23cb0:	eorgt	r1, r0, r1
   23cb4:	rsblt	r3, r3, #0
   23cb8:	cmp	r3, #25
   23cbc:	bxhi	lr
   23cc0:	tst	r0, #-2147483648	; 0x80000000
   23cc4:	orr	r0, r0, #8388608	; 0x800000
   23cc8:	bic	r0, r0, #-16777216	; 0xff000000
   23ccc:	rsbne	r0, r0, #0
   23cd0:	tst	r1, #-2147483648	; 0x80000000
   23cd4:	orr	r1, r1, #8388608	; 0x800000
   23cd8:	bic	r1, r1, #-16777216	; 0xff000000
   23cdc:	rsbne	r1, r1, #0
   23ce0:	teq	r2, r3
   23ce4:	beq	23d78 <flatcc_json_parser_struct_as_root@@Base+0xf1c>
   23ce8:	sub	r2, r2, #1
   23cec:	adds	r0, r0, r1, asr r3
   23cf0:	rsb	r3, r3, #32
   23cf4:	lsl	r1, r1, r3
   23cf8:	and	r3, r0, #-2147483648	; 0x80000000
   23cfc:	bpl	23d08 <flatcc_json_parser_struct_as_root@@Base+0xeac>
   23d00:	rsbs	r1, r1, #0
   23d04:	rsc	r0, r0, #0
   23d08:	cmp	r0, #8388608	; 0x800000
   23d0c:	bcc	23d40 <flatcc_json_parser_struct_as_root@@Base+0xee4>
   23d10:	cmp	r0, #16777216	; 0x1000000
   23d14:	bcc	23d2c <flatcc_json_parser_struct_as_root@@Base+0xed0>
   23d18:	lsrs	r0, r0, #1
   23d1c:	rrx	r1, r1
   23d20:	add	r2, r2, #1
   23d24:	cmp	r2, #254	; 0xfe
   23d28:	bcs	23de4 <flatcc_json_parser_struct_as_root@@Base+0xf88>
   23d2c:	cmp	r1, #-2147483648	; 0x80000000
   23d30:	adc	r0, r0, r2, lsl #23
   23d34:	biceq	r0, r0, #1
   23d38:	orr	r0, r0, r3
   23d3c:	bx	lr
   23d40:	lsls	r1, r1, #1
   23d44:	adc	r0, r0, r0
   23d48:	tst	r0, #8388608	; 0x800000
   23d4c:	sub	r2, r2, #1
   23d50:	bne	23d2c <flatcc_json_parser_struct_as_root@@Base+0xed0>
   23d54:	clz	ip, r0
   23d58:	sub	ip, ip, #8
   23d5c:	subs	r2, r2, ip
   23d60:	lsl	r0, r0, ip
   23d64:	addge	r0, r0, r2, lsl #23
   23d68:	rsblt	r2, r2, #0
   23d6c:	orrge	r0, r0, r3
   23d70:	orrlt	r0, r3, r0, lsr r2
   23d74:	bx	lr
   23d78:	teq	r2, #0
   23d7c:	eor	r1, r1, #8388608	; 0x800000
   23d80:	eoreq	r0, r0, #8388608	; 0x800000
   23d84:	addeq	r2, r2, #1
   23d88:	subne	r3, r3, #1
   23d8c:	b	23ce8 <flatcc_json_parser_struct_as_root@@Base+0xe8c>
   23d90:	lsl	r3, r1, #1
   23d94:	mvns	ip, r2, asr #24
   23d98:	mvnsne	ip, r3, asr #24
   23d9c:	beq	23df0 <flatcc_json_parser_struct_as_root@@Base+0xf94>
   23da0:	teq	r2, r3
   23da4:	beq	23db4 <flatcc_json_parser_struct_as_root@@Base+0xf58>
   23da8:	teq	r2, #0
   23dac:	moveq	r0, r1
   23db0:	bx	lr
   23db4:	teq	r0, r1
   23db8:	movne	r0, #0
   23dbc:	bxne	lr
   23dc0:	tst	r2, #-16777216	; 0xff000000
   23dc4:	bne	23dd4 <flatcc_json_parser_struct_as_root@@Base+0xf78>
   23dc8:	lsls	r0, r0, #1
   23dcc:	orrcs	r0, r0, #-2147483648	; 0x80000000
   23dd0:	bx	lr
   23dd4:	adds	r2, r2, #33554432	; 0x2000000
   23dd8:	addcc	r0, r0, #8388608	; 0x800000
   23ddc:	bxcc	lr
   23de0:	and	r3, r0, #-2147483648	; 0x80000000
   23de4:	orr	r0, r3, #2130706432	; 0x7f000000
   23de8:	orr	r0, r0, #8388608	; 0x800000
   23dec:	bx	lr
   23df0:	mvns	r2, r2, asr #24
   23df4:	movne	r0, r1
   23df8:	mvnseq	r3, r3, asr #24
   23dfc:	movne	r1, r0
   23e00:	lsls	r2, r0, #9
   23e04:	lslseq	r3, r1, #9
   23e08:	teqeq	r0, r1
   23e0c:	orrne	r0, r0, #4194304	; 0x400000
   23e10:	bx	lr
   23e14:	mov	r3, #0
   23e18:	b	23e24 <flatcc_json_parser_struct_as_root@@Base+0xfc8>
   23e1c:	ands	r3, r0, #-2147483648	; 0x80000000
   23e20:	rsbmi	r0, r0, #0
   23e24:	movs	ip, r0
   23e28:	bxeq	lr
   23e2c:	orr	r3, r3, #1258291200	; 0x4b000000
   23e30:	mov	r1, r0
   23e34:	mov	r0, #0
   23e38:	b	23e7c <flatcc_json_parser_struct_as_root@@Base+0x1020>
   23e3c:	orrs	r2, r0, r1
   23e40:	bxeq	lr
   23e44:	mov	r3, #0
   23e48:	b	23e64 <flatcc_json_parser_struct_as_root@@Base+0x1008>
   23e4c:	orrs	r2, r0, r1
   23e50:	bxeq	lr
   23e54:	ands	r3, r1, #-2147483648	; 0x80000000
   23e58:	bpl	23e64 <flatcc_json_parser_struct_as_root@@Base+0x1008>
   23e5c:	rsbs	r0, r0, #0
   23e60:	rsc	r1, r1, #0
   23e64:	movs	ip, r1
   23e68:	moveq	ip, r0
   23e6c:	moveq	r1, r0
   23e70:	moveq	r0, #0
   23e74:	orr	r3, r3, #1526726656	; 0x5b000000
   23e78:	subeq	r3, r3, #268435456	; 0x10000000
   23e7c:	sub	r3, r3, #8388608	; 0x800000
   23e80:	clz	r2, ip
   23e84:	subs	r2, r2, #8
   23e88:	sub	r3, r3, r2, lsl #23
   23e8c:	blt	23eac <flatcc_json_parser_struct_as_root@@Base+0x1050>
   23e90:	add	r3, r3, r1, lsl r2
   23e94:	lsl	ip, r0, r2
   23e98:	rsb	r2, r2, #32
   23e9c:	cmp	ip, #-2147483648	; 0x80000000
   23ea0:	adc	r0, r3, r0, lsr r2
   23ea4:	biceq	r0, r0, #1
   23ea8:	bx	lr
   23eac:	add	r2, r2, #32
   23eb0:	lsl	ip, r1, r2
   23eb4:	rsb	r2, r2, #32
   23eb8:	orrs	r0, r0, ip, lsl #1
   23ebc:	adc	r0, r3, r1, lsr r2
   23ec0:	biceq	r0, r0, ip, lsr #31
   23ec4:	bx	lr

00023ec8 <__libc_csu_init@@Base>:
   23ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23ecc:	mov	r7, r0
   23ed0:	ldr	r6, [pc, #72]	; 23f20 <__libc_csu_init@@Base+0x58>
   23ed4:	ldr	r5, [pc, #72]	; 23f24 <__libc_csu_init@@Base+0x5c>
   23ed8:	add	r6, pc, r6
   23edc:	add	r5, pc, r5
   23ee0:	sub	r6, r6, r5
   23ee4:	mov	r8, r1
   23ee8:	mov	r9, r2
   23eec:	bl	12a78 <fopen@plt-0x20>
   23ef0:	asrs	r6, r6, #2
   23ef4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23ef8:	mov	r4, #0
   23efc:	add	r4, r4, #1
   23f00:	ldr	r3, [r5], #4
   23f04:	mov	r2, r9
   23f08:	mov	r1, r8
   23f0c:	mov	r0, r7
   23f10:	blx	r3
   23f14:	cmp	r6, r4
   23f18:	bne	23efc <__libc_csu_init@@Base+0x34>
   23f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23f20:	andeq	r3, r1, ip, lsr #32
   23f24:	andeq	r3, r1, r4, lsr #32

00023f28 <__libc_csu_fini@@Base>:
   23f28:	bx	lr

Disassembly of section .fini:

00023f2c <.fini>:
   23f2c:	push	{r3, lr}
   23f30:	pop	{r3, pc}
