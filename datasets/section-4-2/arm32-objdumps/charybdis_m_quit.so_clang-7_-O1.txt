
../repos/charybdis/modules/core/.libs/m_quit.so:     file format elf32-littlearm


Disassembly of section .init:

00000558 <_init>:
 558:	push	{r3, lr}
 55c:	bl	5e4 <call_weak_fn>
 560:	pop	{r3, pc}

Disassembly of section .plt:

00000564 <.plt>:
 564:	push	{lr}		; (str lr, [sp, #-4]!)
 568:	ldr	lr, [pc, #4]	; 574 <.plt+0x10>
 56c:	add	lr, pc, lr
 570:	ldr	pc, [lr, #8]!
 574:	.word	0x00010a8c

00000578 <rb_current_time@plt>:
 578:	add	ip, pc, #0, 12
 57c:	add	ip, ip, #16, 20	; 0x10000
 580:	ldr	pc, [ip, #2700]!	; 0xa8c

00000584 <__cxa_finalize@plt>:
 584:	add	ip, pc, #0, 12
 588:	add	ip, ip, #16, 20	; 0x10000
 58c:	ldr	pc, [ip, #2692]!	; 0xa84

00000590 <strcpy@plt>:
 590:	add	ip, pc, #0, 12
 594:	add	ip, ip, #16, 20	; 0x10000
 598:	ldr	pc, [ip, #2684]!	; 0xa7c

0000059c <__gmon_start__@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #16, 20	; 0x10000
 5a4:	ldr	pc, [ip, #2676]!	; 0xa74

000005a8 <strlen@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #16, 20	; 0x10000
 5b0:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b4 <snprintf@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #16, 20	; 0x10000
 5bc:	ldr	pc, [ip, #2660]!	; 0xa64

000005c0 <exit_client@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #16, 20	; 0x10000
 5c8:	ldr	pc, [ip, #2652]!	; 0xa5c

000005cc <privilegeset_in_set@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #16, 20	; 0x10000
 5d4:	ldr	pc, [ip, #2644]!	; 0xa54

000005d8 <call_hook@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #16, 20	; 0x10000
 5e0:	ldr	pc, [ip, #2636]!	; 0xa4c

Disassembly of section .text:

000005e4 <call_weak_fn>:
 5e4:	ldr	r3, [pc, #20]	; 600 <call_weak_fn+0x1c>
 5e8:	ldr	r2, [pc, #20]	; 604 <call_weak_fn+0x20>
 5ec:	add	r3, pc, r3
 5f0:	ldr	r2, [r3, r2]
 5f4:	cmp	r2, #0
 5f8:	bxeq	lr
 5fc:	b	59c <__gmon_start__@plt>
 600:	.word	0x00010a0c
 604:	.word	0x00000038

00000608 <deregister_tm_clones>:
 608:	ldr	r0, [pc, #44]	; 63c <deregister_tm_clones+0x34>
 60c:	ldr	r3, [pc, #44]	; 640 <deregister_tm_clones+0x38>
 610:	add	r0, pc, r0
 614:	add	r3, pc, r3
 618:	cmp	r3, r0
 61c:	ldr	r3, [pc, #32]	; 644 <deregister_tm_clones+0x3c>
 620:	add	r3, pc, r3
 624:	bxeq	lr
 628:	ldr	r2, [pc, #24]	; 648 <deregister_tm_clones+0x40>
 62c:	ldr	r3, [r3, r2]
 630:	cmp	r3, #0
 634:	bxeq	lr
 638:	bx	r3
 63c:	.word	0x00010ab8
 640:	.word	0x00010ab4
 644:	.word	0x000109d8
 648:	.word	0x00000034

0000064c <register_tm_clones>:
 64c:	ldr	r0, [pc, #56]	; 68c <register_tm_clones+0x40>
 650:	ldr	r3, [pc, #56]	; 690 <register_tm_clones+0x44>
 654:	add	r0, pc, r0
 658:	add	r3, pc, r3
 65c:	sub	r1, r3, r0
 660:	ldr	r3, [pc, #44]	; 694 <register_tm_clones+0x48>
 664:	asr	r1, r1, #2
 668:	add	r3, pc, r3
 66c:	add	r1, r1, r1, lsr #31
 670:	asrs	r1, r1, #1
 674:	bxeq	lr
 678:	ldr	r2, [pc, #24]	; 698 <register_tm_clones+0x4c>
 67c:	ldr	r3, [r3, r2]
 680:	cmp	r3, #0
 684:	bxeq	lr
 688:	bx	r3
 68c:	.word	0x00010a74
 690:	.word	0x00010a70
 694:	.word	0x00010990
 698:	.word	0x00000040

0000069c <__do_global_dtors_aux>:
 69c:	ldr	r3, [pc, #76]	; 6f0 <__do_global_dtors_aux+0x54>
 6a0:	ldr	r2, [pc, #76]	; 6f4 <__do_global_dtors_aux+0x58>
 6a4:	add	r3, pc, r3
 6a8:	add	r2, pc, r2
 6ac:	ldrb	r3, [r3]
 6b0:	cmp	r3, #0
 6b4:	bxne	lr
 6b8:	ldr	r3, [pc, #56]	; 6f8 <__do_global_dtors_aux+0x5c>
 6bc:	push	{r4, lr}
 6c0:	ldr	r3, [r2, r3]
 6c4:	cmp	r3, #0
 6c8:	beq	6d8 <__do_global_dtors_aux+0x3c>
 6cc:	ldr	r3, [pc, #40]	; 6fc <__do_global_dtors_aux+0x60>
 6d0:	ldr	r0, [pc, r3]
 6d4:	bl	584 <__cxa_finalize@plt>
 6d8:	bl	608 <deregister_tm_clones>
 6dc:	ldr	r3, [pc, #28]	; 700 <__do_global_dtors_aux+0x64>
 6e0:	mov	r2, #1
 6e4:	add	r3, pc, r3
 6e8:	strb	r2, [r3]
 6ec:	pop	{r4, pc}
 6f0:	.word	0x00010a24
 6f4:	.word	0x00010950
 6f8:	.word	0x00000030
 6fc:	.word	0x00010970
 700:	.word	0x000109e4

00000704 <frame_dummy>:
 704:	b	64c <register_tm_clones>

00000708 <m_quit>:
 708:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 70c:	add	fp, sp, #24
 710:	sub	sp, sp, #280	; 0x118
 714:	mov	r7, r3
 718:	mov	r4, r2
 71c:	mov	r5, r1
 720:	ldr	r8, [fp, #8]
 724:	cmp	r3, #2
 728:	blt	750 <m_quit+0x48>
 72c:	ldr	r0, [r8, #4]
 730:	cmp	r0, #0
 734:	beq	750 <m_quit+0x48>
 738:	bl	5a8 <strlen@plt>
 73c:	add	r0, r0, #8
 740:	bic	r0, r0, #7
 744:	sub	r6, sp, r0
 748:	mov	sp, r6
 74c:	b	770 <m_quit+0x68>
 750:	add	r0, r5, #88	; 0x58
 754:	bl	5a8 <strlen@plt>
 758:	add	r0, r0, #8
 75c:	bic	r0, r0, #7
 760:	sub	r6, sp, r0
 764:	mov	sp, r6
 768:	cmp	r7, #2
 76c:	blt	780 <m_quit+0x78>
 770:	ldr	r1, [r8, #4]
 774:	cmp	r1, #0
 778:	addeq	r1, r5, #88	; 0x58
 77c:	b	784 <m_quit+0x7c>
 780:	add	r1, r5, #88	; 0x58
 784:	mov	r0, r6
 788:	bl	590 <strcpy@plt>
 78c:	ldr	r0, [r4, #64]	; 0x40
 790:	orr	r0, r0, #512	; 0x200
 794:	str	r0, [r4, #64]	; 0x40
 798:	mov	r0, r6
 79c:	bl	5a8 <strlen@plt>
 7a0:	cmp	r0, #260	; 0x104
 7a4:	movhi	r0, #0
 7a8:	strbhi	r0, [r6, #260]	; 0x104
 7ac:	mov	r0, r6
 7b0:	bl	9ac <strip_colour>
 7b4:	str	r6, [fp, #-292]	; 0xfffffedc
 7b8:	str	r5, [fp, #-300]	; 0xfffffed4
 7bc:	str	r6, [fp, #-296]	; 0xfffffed8
 7c0:	ldr	r0, [pc, #276]	; 8dc <m_quit+0x1d4>
 7c4:	ldr	r0, [pc, r0]
 7c8:	sub	r1, fp, #300	; 0x12c
 7cc:	bl	5d8 <call_hook@plt>
 7d0:	ldr	r8, [pc, #264]	; 8e0 <m_quit+0x1d8>
 7d4:	ldr	r8, [pc, r8]
 7d8:	ldr	r0, [r8, #212]	; 0xd4
 7dc:	ldr	r6, [fp, #-296]	; 0xfffffed8
 7e0:	cmp	r0, #0
 7e4:	beq	828 <m_quit+0x120>
 7e8:	ldr	r0, [fp, #-292]	; 0xfffffedc
 7ec:	cmp	r6, r0
 7f0:	bne	828 <m_quit+0x120>
 7f4:	ldrb	r0, [r6]
 7f8:	cmp	r0, #0
 7fc:	beq	830 <m_quit+0x128>
 800:	sub	lr, fp, #256	; 0x100
 804:	sub	r7, lr, #29
 808:	ldr	r2, [pc, #212]	; 8e4 <m_quit+0x1dc>
 80c:	add	r2, pc, r2
 810:	mov	r0, r7
 814:	movw	r1, #261	; 0x105
 818:	mov	r3, r6
 81c:	bl	5b4 <snprintf@plt>
 820:	mov	r6, r7
 824:	b	830 <m_quit+0x128>
 828:	cmp	r6, #0
 82c:	beq	884 <m_quit+0x17c>
 830:	ldr	r0, [r4, #24]
 834:	cmp	r0, #0
 838:	ldrne	r0, [r0, #36]	; 0x24
 83c:	cmpne	r0, #0
 840:	bne	89c <m_quit+0x194>
 844:	ldrb	r0, [r4, #57]	; 0x39
 848:	tst	r0, #16
 84c:	ldrne	r0, [r4, #24]
 850:	cmpne	r0, #0
 854:	bne	8b4 <m_quit+0x1ac>
 858:	ldr	r0, [fp, #-296]	; 0xfffffed8
 85c:	ldr	r1, [fp, #-292]	; 0xfffffedc
 860:	cmp	r0, r1
 864:	bne	8c0 <m_quit+0x1b8>
 868:	ldr	r0, [r8, #92]	; 0x5c
 86c:	ldr	r1, [r4, #432]	; 0x1b0
 870:	ldr	r1, [r1, #48]	; 0x30
 874:	add	r7, r0, r1
 878:	bl	578 <rb_current_time@plt>
 87c:	cmp	r7, r0
 880:	ble	8c0 <m_quit+0x1b8>
 884:	ldr	r3, [pc, #96]	; 8ec <m_quit+0x1e4>
 888:	add	r3, pc, r3
 88c:	mov	r0, r5
 890:	mov	r1, r4
 894:	mov	r2, r4
 898:	b	8d0 <m_quit+0x1c8>
 89c:	ldr	r1, [pc, #68]	; 8e8 <m_quit+0x1e0>
 8a0:	add	r1, pc, r1
 8a4:	bl	5cc <privilegeset_in_set@plt>
 8a8:	cmp	r0, #0
 8ac:	bne	8c0 <m_quit+0x1b8>
 8b0:	b	844 <m_quit+0x13c>
 8b4:	ldr	r0, [r0, #36]	; 0x24
 8b8:	cmp	r0, #0
 8bc:	bne	858 <m_quit+0x150>
 8c0:	mov	r0, r5
 8c4:	mov	r1, r4
 8c8:	mov	r2, r4
 8cc:	mov	r3, r6
 8d0:	bl	5c0 <exit_client@plt>
 8d4:	sub	sp, fp, #24
 8d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 8dc:	.word	0x00010908
 8e0:	.word	0x00010868
 8e4:	.word	0x00000305
 8e8:	.word	0x0000027a
 8ec:	.word	0x0000029f

000008f0 <ms_quit>:
 8f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 8f4:	add	fp, sp, #24
 8f8:	mov	r7, r3
 8fc:	mov	r4, r2
 900:	mov	r5, r1
 904:	ldr	r8, [fp, #8]
 908:	cmp	r3, #2
 90c:	blt	934 <ms_quit+0x44>
 910:	ldr	r0, [r8, #4]
 914:	cmp	r0, #0
 918:	beq	934 <ms_quit+0x44>
 91c:	bl	5a8 <strlen@plt>
 920:	add	r0, r0, #8
 924:	bic	r0, r0, #7
 928:	sub	r6, sp, r0
 92c:	mov	sp, r6
 930:	b	954 <ms_quit+0x64>
 934:	add	r0, r5, #88	; 0x58
 938:	bl	5a8 <strlen@plt>
 93c:	add	r0, r0, #8
 940:	bic	r0, r0, #7
 944:	sub	r6, sp, r0
 948:	mov	sp, r6
 94c:	cmp	r7, #2
 950:	blt	964 <ms_quit+0x74>
 954:	ldr	r1, [r8, #4]
 958:	cmp	r1, #0
 95c:	addeq	r1, r5, #88	; 0x58
 960:	b	968 <ms_quit+0x78>
 964:	add	r1, r5, #88	; 0x58
 968:	mov	r0, r6
 96c:	bl	590 <strcpy@plt>
 970:	ldr	r0, [r4, #64]	; 0x40
 974:	orr	r0, r0, #512	; 0x200
 978:	str	r0, [r4, #64]	; 0x40
 97c:	mov	r0, r6
 980:	bl	5a8 <strlen@plt>
 984:	cmp	r0, #260	; 0x104
 988:	movhi	r0, #0
 98c:	strbhi	r0, [r6, #260]	; 0x104
 990:	mov	r0, r5
 994:	mov	r1, r4
 998:	mov	r2, r4
 99c:	mov	r3, r6
 9a0:	bl	5c0 <exit_client@plt>
 9a4:	sub	sp, fp, #24
 9a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000009ac <strip_colour>:
 9ac:	cmp	r0, #0
 9b0:	beq	af8 <strip_colour+0x14c>
 9b4:	push	{r4, sl, fp, lr}
 9b8:	add	fp, sp, #8
 9bc:	mov	lr, #0
 9c0:	ldr	ip, [pc, #308]	; afc <strip_colour+0x150>
 9c4:	ldr	ip, [pc, ip]
 9c8:	mov	r3, r0
 9cc:	b	9d4 <strip_colour+0x28>
 9d0:	add	r3, r3, #1
 9d4:	ldrb	r2, [r3]
 9d8:	cmp	r2, #32
 9dc:	bhi	acc <strip_colour+0x120>
 9e0:	add	r1, pc, #4
 9e4:	ldr	r4, [r1, r2, lsl #2]
 9e8:	add	pc, r1, r4
 9ec:	.word	0x000000f8
 9f0:	.word	0x000000e0
 9f4:	.word	0xffffffe4
 9f8:	.word	0x00000084
 9fc:	.word	0xffffffe4
 a00:	.word	0x000000e0
 a04:	.word	0xffffffe4
 a08:	.word	0xffffffe4
 a0c:	.word	0x000000e0
 a10:	.word	0x000000e0
 a14:	.word	0x000000e0
 a18:	.word	0x000000e0
 a1c:	.word	0x000000e0
 a20:	.word	0x000000e0
 a24:	.word	0x000000e0
 a28:	.word	0xffffffe4
 a2c:	.word	0x000000e0
 a30:	.word	0x000000e0
 a34:	.word	0x000000e0
 a38:	.word	0x000000e0
 a3c:	.word	0x000000e0
 a40:	.word	0x000000e0
 a44:	.word	0xffffffe4
 a48:	.word	0xffffffe4
 a4c:	.word	0x000000e0
 a50:	.word	0x000000e0
 a54:	.word	0x000000e0
 a58:	.word	0xffffffe4
 a5c:	.word	0x000000e0
 a60:	.word	0xffffffe4
 a64:	.word	0x000000e0
 a68:	.word	0xffffffe4
 a6c:	.word	0x000000ec
 a70:	mov	r2, r3
 a74:	ldrb	r1, [r2, #1]!
 a78:	ldrb	r1, [ip, r1, lsl #2]
 a7c:	tst	r1, #16
 a80:	beq	9d0 <strip_colour+0x24>
 a84:	ldrb	r1, [r3, #2]!
 a88:	ldrb	r1, [ip, r1, lsl #2]
 a8c:	tst	r1, #16
 a90:	moveq	r3, r2
 a94:	ldrb	r1, [r3, #1]
 a98:	cmp	r1, #44	; 0x2c
 a9c:	bne	9d0 <strip_colour+0x24>
 aa0:	mov	r2, r3
 aa4:	ldrb	r1, [r2, #2]!
 aa8:	ldrb	r1, [ip, r1, lsl #2]
 aac:	tst	r1, #16
 ab0:	beq	9d0 <strip_colour+0x24>
 ab4:	ldrb	r1, [r3, #3]!
 ab8:	ldrb	r1, [ip, r1, lsl #2]
 abc:	tst	r1, #16
 ac0:	moveq	r3, r2
 ac4:	add	r3, r3, #1
 ac8:	b	9d4 <strip_colour+0x28>
 acc:	strb	r2, [r0], #1
 ad0:	mov	lr, r0
 ad4:	b	9d0 <strip_colour+0x24>
 ad8:	strb	r2, [r0], #1
 adc:	add	r3, r3, #1
 ae0:	b	9d4 <strip_colour+0x28>
 ae4:	mov	r2, #0
 ae8:	strb	r2, [r0]
 aec:	cmp	lr, #0
 af0:	strbne	r2, [lr]
 af4:	pop	{r4, sl, fp, pc}
 af8:	udf	#65006	; 0xfdee
 afc:	.word	0x00010670

Disassembly of section .fini:

00000b00 <_fini>:
 b00:	push	{r3, lr}
 b04:	pop	{r3, pc}
