
../repos/charybdis/modules/.libs/cap_account_tag.so:     file format elf32-littlearm


Disassembly of section .init:

000003a0 <_init>:
 3a0:	push	{r3, lr}
 3a4:	bl	3d8 <call_weak_fn>
 3a8:	pop	{r3, pc}

Disassembly of section .plt:

000003ac <.plt>:
 3ac:	push	{lr}		; (str lr, [sp, #-4]!)
 3b0:	ldr	lr, [pc, #4]	; 3bc <.plt+0x10>
 3b4:	add	lr, pc, lr
 3b8:	ldr	pc, [lr, #8]!
 3bc:	.word	0x00010c44

000003c0 <__cxa_finalize@plt>:
 3c0:	add	ip, pc, #0, 12
 3c4:	add	ip, ip, #16, 20	; 0x10000
 3c8:	ldr	pc, [ip, #3140]!	; 0xc44

000003cc <__gmon_start__@plt>:
 3cc:	add	ip, pc, #0, 12
 3d0:	add	ip, ip, #16, 20	; 0x10000
 3d4:	ldr	pc, [ip, #3132]!	; 0xc3c

Disassembly of section .text:

000003d8 <call_weak_fn>:
 3d8:	ldr	r3, [pc, #20]	; 3f4 <call_weak_fn+0x1c>
 3dc:	ldr	r2, [pc, #20]	; 3f8 <call_weak_fn+0x20>
 3e0:	add	r3, pc, r3
 3e4:	ldr	r2, [r3, r2]
 3e8:	cmp	r2, #0
 3ec:	bxeq	lr
 3f0:	b	3cc <__gmon_start__@plt>
 3f4:	.word	0x00010c18
 3f8:	.word	0x0000001c

000003fc <deregister_tm_clones>:
 3fc:	ldr	r0, [pc, #44]	; 430 <deregister_tm_clones+0x34>
 400:	ldr	r3, [pc, #44]	; 434 <deregister_tm_clones+0x38>
 404:	add	r0, pc, r0
 408:	add	r3, pc, r3
 40c:	cmp	r3, r0
 410:	ldr	r3, [pc, #32]	; 438 <deregister_tm_clones+0x3c>
 414:	add	r3, pc, r3
 418:	bxeq	lr
 41c:	ldr	r2, [pc, #24]	; 43c <deregister_tm_clones+0x40>
 420:	ldr	r3, [r3, r2]
 424:	cmp	r3, #0
 428:	bxeq	lr
 42c:	bx	r3
 430:	.word	0x00010c80
 434:	.word	0x00010c7c
 438:	.word	0x00010be4
 43c:	.word	0x00000018

00000440 <register_tm_clones>:
 440:	ldr	r0, [pc, #56]	; 480 <register_tm_clones+0x40>
 444:	ldr	r3, [pc, #56]	; 484 <register_tm_clones+0x44>
 448:	add	r0, pc, r0
 44c:	add	r3, pc, r3
 450:	sub	r1, r3, r0
 454:	ldr	r3, [pc, #44]	; 488 <register_tm_clones+0x48>
 458:	asr	r1, r1, #2
 45c:	add	r3, pc, r3
 460:	add	r1, r1, r1, lsr #31
 464:	asrs	r1, r1, #1
 468:	bxeq	lr
 46c:	ldr	r2, [pc, #24]	; 48c <register_tm_clones+0x4c>
 470:	ldr	r3, [r3, r2]
 474:	cmp	r3, #0
 478:	bxeq	lr
 47c:	bx	r3
 480:	.word	0x00010c3c
 484:	.word	0x00010c38
 488:	.word	0x00010b9c
 48c:	.word	0x00000024

00000490 <__do_global_dtors_aux>:
 490:	ldr	r3, [pc, #76]	; 4e4 <__do_global_dtors_aux+0x54>
 494:	ldr	r2, [pc, #76]	; 4e8 <__do_global_dtors_aux+0x58>
 498:	add	r3, pc, r3
 49c:	add	r2, pc, r2
 4a0:	ldrb	r3, [r3]
 4a4:	cmp	r3, #0
 4a8:	bxne	lr
 4ac:	ldr	r3, [pc, #56]	; 4ec <__do_global_dtors_aux+0x5c>
 4b0:	push	{r4, lr}
 4b4:	ldr	r3, [r2, r3]
 4b8:	cmp	r3, #0
 4bc:	beq	4cc <__do_global_dtors_aux+0x3c>
 4c0:	ldr	r3, [pc, #40]	; 4f0 <__do_global_dtors_aux+0x60>
 4c4:	ldr	r0, [pc, r3]
 4c8:	bl	3c0 <__cxa_finalize@plt>
 4cc:	bl	3fc <deregister_tm_clones>
 4d0:	ldr	r3, [pc, #28]	; 4f4 <__do_global_dtors_aux+0x64>
 4d4:	mov	r2, #1
 4d8:	add	r3, pc, r3
 4dc:	strb	r2, [r3]
 4e0:	pop	{r4, pc}
 4e4:	.word	0x00010bec
 4e8:	.word	0x00010b5c
 4ec:	.word	0x00000014
 4f0:	.word	0x00010b5c
 4f4:	.word	0x00010bac

000004f8 <frame_dummy>:
 4f8:	b	440 <register_tm_clones>

000004fc <cap_account_tag_process>:
 4fc:	push	{fp, lr}
 500:	mov	fp, sp
 504:	sub	sp, sp, #16
 508:	str	r0, [fp, #-4]
 50c:	ldr	r0, [fp, #-4]
 510:	ldr	r0, [r0, #4]
 514:	str	r0, [sp, #8]
 518:	ldr	r0, [fp, #-4]
 51c:	ldr	r0, [r0]
 520:	movw	r1, #0
 524:	cmp	r0, r1
 528:	beq	5ac <cap_account_tag_process+0xb0>
 52c:	ldr	r0, [fp, #-4]
 530:	ldr	r0, [r0]
 534:	ldrh	r0, [r0, #80]	; 0x50
 538:	cmp	r0, #64	; 0x40
 53c:	bne	5ac <cap_account_tag_process+0xb0>
 540:	ldr	r0, [fp, #-4]
 544:	ldr	r0, [r0]
 548:	ldr	r0, [r0, #24]
 54c:	movw	r1, #0
 550:	cmp	r0, r1
 554:	beq	5ac <cap_account_tag_process+0xb0>
 558:	ldr	r0, [fp, #-4]
 55c:	ldr	r0, [r0]
 560:	ldr	r0, [r0, #24]
 564:	ldrb	r0, [r0, #40]	; 0x28
 568:	cmp	r0, #0
 56c:	beq	5ac <cap_account_tag_process+0xb0>
 570:	ldr	r0, [pc, #60]	; 5b4 <cap_account_tag_process+0xb8>
 574:	add	r1, pc, r0
 578:	ldr	r0, [pc, #56]	; 5b8 <cap_account_tag_process+0xbc>
 57c:	ldr	r0, [pc, r0]
 580:	ldr	r2, [sp, #8]
 584:	ldr	r3, [fp, #-4]
 588:	ldr	r3, [r3]
 58c:	ldr	r3, [r3, #24]
 590:	add	r3, r3, #40	; 0x28
 594:	ldr	r0, [r0]
 598:	str	r0, [sp, #4]
 59c:	mov	r0, r2
 5a0:	mov	r2, r3
 5a4:	ldr	r3, [sp, #4]
 5a8:	bl	5bc <msgbuf_append_tag>
 5ac:	mov	sp, fp
 5b0:	pop	{fp, pc}
 5b4:	.word	0x00000104
 5b8:	.word	0x00010a9c

000005bc <msgbuf_append_tag>:
 5bc:	sub	sp, sp, #16
 5c0:	str	r0, [sp, #12]
 5c4:	str	r1, [sp, #8]
 5c8:	str	r2, [sp, #4]
 5cc:	str	r3, [sp]
 5d0:	ldr	r0, [sp, #12]
 5d4:	ldr	r0, [r0]
 5d8:	cmp	r0, #15
 5dc:	bcs	654 <msgbuf_append_tag+0x98>
 5e0:	ldr	r0, [sp, #8]
 5e4:	ldr	r1, [sp, #12]
 5e8:	add	r1, r1, #4
 5ec:	ldr	r2, [sp, #12]
 5f0:	ldr	r2, [r2]
 5f4:	movw	r3, #12
 5f8:	mul	r2, r2, r3
 5fc:	add	r1, r1, r2
 600:	str	r0, [r1]
 604:	ldr	r0, [sp, #4]
 608:	ldr	r1, [sp, #12]
 60c:	add	r1, r1, #4
 610:	ldr	r2, [sp, #12]
 614:	ldr	r2, [r2]
 618:	mul	r2, r2, r3
 61c:	add	r1, r1, r2
 620:	str	r0, [r1, #4]
 624:	ldr	r0, [sp]
 628:	ldr	r1, [sp, #12]
 62c:	add	r1, r1, #4
 630:	ldr	r2, [sp, #12]
 634:	ldr	r2, [r2]
 638:	mul	r2, r2, r3
 63c:	add	r1, r1, r2
 640:	str	r0, [r1, #8]
 644:	ldr	r0, [sp, #12]
 648:	ldr	r1, [r0]
 64c:	add	r1, r1, #1
 650:	str	r1, [r0]
 654:	add	sp, sp, #16
 658:	bx	lr

Disassembly of section .fini:

0000065c <_fini>:
 65c:	push	{r3, lr}
 660:	pop	{r3, pc}
