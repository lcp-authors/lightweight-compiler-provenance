
../repos/coreutils/src/yes:     file format elf32-littlearm


Disassembly of section .init:

00010b28 <.init>:
   10b28:	push	{r3, lr}
   10b2c:	bl	10fb8 <abort@plt+0x260>
   10b30:	pop	{r3, pc}

Disassembly of section .plt:

00010b34 <calloc@plt-0x14>:
   10b34:	push	{lr}		; (str lr, [sp, #-4]!)
   10b38:	ldr	lr, [pc, #4]	; 10b44 <calloc@plt-0x4>
   10b3c:	add	lr, pc, lr
   10b40:	ldr	pc, [lr, #8]!
   10b44:			; <UNDEFINED> instruction: 0x000144bc

00010b48 <calloc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #20, 20	; 0x14000
   10b50:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b54 <fputs_unlocked@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #20, 20	; 0x14000
   10b5c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b60 <raise@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #20, 20	; 0x14000
   10b68:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b6c <strcmp@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #20, 20	; 0x14000
   10b74:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b78 <fflush@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #20, 20	; 0x14000
   10b80:	ldr	pc, [ip, #1180]!	; 0x49c

00010b84 <free@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #20, 20	; 0x14000
   10b8c:	ldr	pc, [ip, #1172]!	; 0x494

00010b90 <_exit@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #20, 20	; 0x14000
   10b98:	ldr	pc, [ip, #1164]!	; 0x48c

00010b9c <memcpy@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #20, 20	; 0x14000
   10ba4:	ldr	pc, [ip, #1156]!	; 0x484

00010ba8 <mbsinit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #20, 20	; 0x14000
   10bb0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb4 <memcmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #20, 20	; 0x14000
   10bbc:	ldr	pc, [ip, #1140]!	; 0x474

00010bc0 <fputc_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #20, 20	; 0x14000
   10bc8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bcc <dcgettext@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #20, 20	; 0x14000
   10bd4:	ldr	pc, [ip, #1124]!	; 0x464

00010bd8 <realloc@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #20, 20	; 0x14000
   10be0:	ldr	pc, [ip, #1116]!	; 0x45c

00010be4 <textdomain@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1108]!	; 0x454

00010bf0 <iswprint@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1100]!	; 0x44c

00010bfc <lseek64@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1092]!	; 0x444

00010c08 <__ctype_get_mb_cur_max@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1084]!	; 0x43c

00010c14 <__fpending@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1076]!	; 0x434

00010c20 <ferror_unlocked@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1068]!	; 0x42c

00010c2c <mbrtowc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1060]!	; 0x424

00010c38 <error@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1052]!	; 0x41c

00010c44 <malloc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #1044]!	; 0x414

00010c50 <__libc_start_main@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #1036]!	; 0x40c

00010c5c <__freading@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #1028]!	; 0x404

00010c68 <__gmon_start__@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c74 <getopt_long@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c80 <__ctype_b_loc@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c8c <exit@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #996]!	; 0x3e4

00010c98 <strlen@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #988]!	; 0x3dc

00010ca4 <__errno_location@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #980]!	; 0x3d4

00010cb0 <__cxa_atexit@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #972]!	; 0x3cc

00010cbc <memset@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #964]!	; 0x3c4

00010cc8 <__printf_chk@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #956]!	; 0x3bc

00010cd4 <write@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #948]!	; 0x3b4

00010ce0 <fileno@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #940]!	; 0x3ac

00010cec <__fprintf_chk@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #932]!	; 0x3a4

00010cf8 <fclose@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #924]!	; 0x39c

00010d04 <fseeko64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #916]!	; 0x394

00010d10 <setlocale@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #908]!	; 0x38c

00010d1c <strrchr@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #900]!	; 0x384

00010d28 <nl_langinfo@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #892]!	; 0x37c

00010d34 <bindtextdomain@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #884]!	; 0x374

00010d40 <fputs@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #876]!	; 0x36c

00010d4c <strncmp@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #868]!	; 0x364

00010d58 <abort@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #860]!	; 0x35c

Disassembly of section .text:

00010d64 <.text>:
   10d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d68:	mov	r6, r0
   10d6c:	sub	sp, sp, #36	; 0x24
   10d70:	ldr	r0, [r1]
   10d74:	mov	r5, r1
   10d78:	bl	115b0 <abort@plt+0x858>
   10d7c:	ldr	r1, [pc, #456]	; 10f4c <abort@plt+0x1f4>
   10d80:	mov	r0, #6
   10d84:	bl	10d10 <setlocale@plt>
   10d88:	ldr	r1, [pc, #448]	; 10f50 <abort@plt+0x1f8>
   10d8c:	ldr	r0, [pc, #448]	; 10f54 <abort@plt+0x1fc>
   10d90:	bl	10d34 <bindtextdomain@plt>
   10d94:	ldr	r0, [pc, #440]	; 10f54 <abort@plt+0x1fc>
   10d98:	bl	10be4 <textdomain@plt>
   10d9c:	ldr	r0, [pc, #436]	; 10f58 <abort@plt+0x200>
   10da0:	bl	13fdc <abort@plt+0x3284>
   10da4:	mov	r3, #0
   10da8:	str	r3, [sp, #16]
   10dac:	ldr	r3, [pc, #424]	; 10f5c <abort@plt+0x204>
   10db0:	mov	r0, r6
   10db4:	str	r3, [sp, #12]
   10db8:	ldr	r3, [pc, #416]	; 10f60 <abort@plt+0x208>
   10dbc:	ldr	r2, [pc, #416]	; 10f64 <abort@plt+0x20c>
   10dc0:	str	r3, [sp, #8]
   10dc4:	mov	r3, #1
   10dc8:	str	r3, [sp, #4]
   10dcc:	ldr	r3, [pc, #404]	; 10f68 <abort@plt+0x210>
   10dd0:	mov	r1, r5
   10dd4:	add	r8, r5, r6, lsl #2
   10dd8:	ldr	r3, [r3]
   10ddc:	mov	r9, #1
   10de0:	str	r3, [sp]
   10de4:	ldr	r3, [pc, #384]	; 10f6c <abort@plt+0x214>
   10de8:	bl	114e8 <abort@plt+0x790>
   10dec:	ldr	r3, [pc, #380]	; 10f70 <abort@plt+0x218>
   10df0:	ldr	r7, [r3]
   10df4:	cmp	r6, r7
   10df8:	add	r4, r5, r7, lsl #2
   10dfc:	ldreq	r3, [pc, #368]	; 10f74 <abort@plt+0x21c>
   10e00:	addeq	r8, r8, #4
   10e04:	mov	fp, r4
   10e08:	mov	r6, #0
   10e0c:	streq	r3, [r5, r7, lsl #2]
   10e10:	ldr	sl, [fp], #4
   10e14:	mov	r0, sl
   10e18:	bl	10c98 <strlen@plt>
   10e1c:	cmp	r8, fp
   10e20:	add	r0, r0, #1
   10e24:	add	r6, r6, r0
   10e28:	bls	10e60 <abort@plt+0x108>
   10e2c:	ldr	r3, [fp]
   10e30:	add	sl, sl, r0
   10e34:	cmp	r3, sl
   10e38:	movne	r9, #0
   10e3c:	b	10e10 <abort@plt+0xb8>
   10e40:	mov	r6, #8192	; 0x2000
   10e44:	b	10e74 <abort@plt+0x11c>
   10e48:	mov	r0, r3
   10e4c:	mov	r2, r4
   10e50:	mov	r1, r5
   10e54:	bl	10b9c <memcpy@plt>
   10e58:	add	r3, r0, r4
   10e5c:	b	10ef4 <abort@plt+0x19c>
   10e60:	cmp	r6, #4096	; 0x1000
   10e64:	bls	10e40 <abort@plt+0xe8>
   10e68:	cmp	r9, #0
   10e6c:	ldrne	r5, [r5, r7, lsl #2]
   10e70:	bne	10e84 <abort@plt+0x12c>
   10e74:	mov	r0, r6
   10e78:	bl	13164 <abort@plt+0x240c>
   10e7c:	mov	r9, #0
   10e80:	mov	r5, r0
   10e84:	mov	fp, r4
   10e88:	mov	sl, #32
   10e8c:	mov	r4, #0
   10e90:	ldr	r1, [fp], #4
   10e94:	mov	r0, r1
   10e98:	str	r1, [sp, #28]
   10e9c:	bl	10c98 <strlen@plt>
   10ea0:	cmp	r9, #0
   10ea4:	ldr	r1, [sp, #28]
   10ea8:	mov	r7, r0
   10eac:	bne	10ebc <abort@plt+0x164>
   10eb0:	mov	r2, r0
   10eb4:	add	r0, r5, r4
   10eb8:	bl	10b9c <memcpy@plt>
   10ebc:	add	r0, r4, r7
   10ec0:	cmp	r8, fp
   10ec4:	add	r4, r0, #1
   10ec8:	add	r3, r5, r0
   10ecc:	strb	sl, [r5, r0]
   10ed0:	bhi	10e90 <abort@plt+0x138>
   10ed4:	mov	r2, #10
   10ed8:	strb	r2, [r3]
   10edc:	mov	r0, r6
   10ee0:	mov	r1, r4
   10ee4:	bl	13b1c <abort@plt+0x2dc4>
   10ee8:	add	r3, r5, r4
   10eec:	mov	r6, r0
   10ef0:	mov	r7, r0
   10ef4:	subs	r7, r7, #1
   10ef8:	bne	10e48 <abort@plt+0xf0>
   10efc:	mul	r4, r6, r4
   10f00:	mov	r6, #1
   10f04:	mov	r2, r4
   10f08:	mov	r1, r5
   10f0c:	mov	r0, r6
   10f10:	bl	113d0 <abort@plt+0x678>
   10f14:	cmp	r0, r4
   10f18:	beq	10f04 <abort@plt+0x1ac>
   10f1c:	bl	10ca4 <__errno_location@plt>
   10f20:	mov	r2, #5
   10f24:	ldr	r1, [pc, #76]	; 10f78 <abort@plt+0x220>
   10f28:	ldr	r4, [r0]
   10f2c:	mov	r0, #0
   10f30:	bl	10bcc <dcgettext@plt>
   10f34:	mov	r1, r4
   10f38:	mov	r2, r0
   10f3c:	mov	r0, #0
   10f40:	bl	10c38 <error@plt>
   10f44:	mov	r0, #1
   10f48:	bl	10c8c <exit@plt>
   10f4c:	andeq	r4, r1, fp, asr #1
   10f50:	andeq	r4, r1, r5, lsl r2
   10f54:	andeq	r4, r1, r2, ror r1
   10f58:	andeq	r1, r1, ip, ror #5
   10f5c:	andeq	r4, r1, sp, lsr #4
   10f60:	andeq	r1, r1, r4, lsr #1
   10f64:	andeq	r4, r1, r8, lsr r0
   10f68:	andeq	r5, r2, ip, asr #1
   10f6c:	andeq	r4, r1, lr, ror #2
   10f70:	andeq	r5, r2, r0, lsr #2
   10f74:	andeq	r4, r1, sp, lsr r2
   10f78:	andeq	r4, r1, pc, lsr r2
   10f7c:	mov	fp, #0
   10f80:	mov	lr, #0
   10f84:	pop	{r1}		; (ldr r1, [sp], #4)
   10f88:	mov	r2, sp
   10f8c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f90:	push	{r0}		; (str r0, [sp, #-4]!)
   10f94:	ldr	ip, [pc, #16]	; 10fac <abort@plt+0x254>
   10f98:	push	{ip}		; (str ip, [sp, #-4]!)
   10f9c:	ldr	r0, [pc, #12]	; 10fb0 <abort@plt+0x258>
   10fa0:	ldr	r3, [pc, #12]	; 10fb4 <abort@plt+0x25c>
   10fa4:	bl	10c50 <__libc_start_main@plt>
   10fa8:	bl	10d58 <abort@plt>
   10fac:	ldrdeq	r3, [r1], -r8
   10fb0:	andeq	r0, r1, r4, ror #26
   10fb4:	andeq	r3, r1, r8, ror pc
   10fb8:	ldr	r3, [pc, #20]	; 10fd4 <abort@plt+0x27c>
   10fbc:	ldr	r2, [pc, #20]	; 10fd8 <abort@plt+0x280>
   10fc0:	add	r3, pc, r3
   10fc4:	ldr	r2, [r3, r2]
   10fc8:	cmp	r2, #0
   10fcc:	bxeq	lr
   10fd0:	b	10c68 <__gmon_start__@plt>
   10fd4:	andeq	r4, r1, r8, lsr r0
   10fd8:	andeq	r0, r0, r0, asr #1
   10fdc:	ldr	r3, [pc, #28]	; 11000 <abort@plt+0x2a8>
   10fe0:	ldr	r0, [pc, #28]	; 11004 <abort@plt+0x2ac>
   10fe4:	sub	r3, r3, r0
   10fe8:	cmp	r3, #6
   10fec:	bxls	lr
   10ff0:	ldr	r3, [pc, #16]	; 11008 <abort@plt+0x2b0>
   10ff4:	cmp	r3, #0
   10ff8:	bxeq	lr
   10ffc:	bx	r3
   11000:	andeq	r5, r2, r7, lsl r1
   11004:	andeq	r5, r2, r4, lsl r1
   11008:	andeq	r0, r0, r0
   1100c:	ldr	r1, [pc, #36]	; 11038 <abort@plt+0x2e0>
   11010:	ldr	r0, [pc, #36]	; 1103c <abort@plt+0x2e4>
   11014:	sub	r1, r1, r0
   11018:	asr	r1, r1, #2
   1101c:	add	r1, r1, r1, lsr #31
   11020:	asrs	r1, r1, #1
   11024:	bxeq	lr
   11028:	ldr	r3, [pc, #16]	; 11040 <abort@plt+0x2e8>
   1102c:	cmp	r3, #0
   11030:	bxeq	lr
   11034:	bx	r3
   11038:	andeq	r5, r2, r4, lsl r1
   1103c:	andeq	r5, r2, r4, lsl r1
   11040:	andeq	r0, r0, r0
   11044:	push	{r4, lr}
   11048:	ldr	r4, [pc, #24]	; 11068 <abort@plt+0x310>
   1104c:	ldrb	r3, [r4]
   11050:	cmp	r3, #0
   11054:	popne	{r4, pc}
   11058:	bl	10fdc <abort@plt+0x284>
   1105c:	mov	r3, #1
   11060:	strb	r3, [r4]
   11064:	pop	{r4, pc}
   11068:	andeq	r5, r2, r4, lsr r1
   1106c:	ldr	r0, [pc, #40]	; 1109c <abort@plt+0x344>
   11070:	ldr	r3, [r0]
   11074:	cmp	r3, #0
   11078:	bne	11080 <abort@plt+0x328>
   1107c:	b	1100c <abort@plt+0x2b4>
   11080:	ldr	r3, [pc, #24]	; 110a0 <abort@plt+0x348>
   11084:	cmp	r3, #0
   11088:	beq	1107c <abort@plt+0x324>
   1108c:	push	{r4, lr}
   11090:	blx	r3
   11094:	pop	{r4, lr}
   11098:	b	1100c <abort@plt+0x2b4>
   1109c:	andeq	r4, r2, r4, lsl pc
   110a0:	andeq	r0, r0, r0
   110a4:	subs	r5, r0, #0
   110a8:	push	{r7, lr}
   110ac:	sub	sp, sp, #56	; 0x38
   110b0:	ldr	r4, [pc, #456]	; 11280 <abort@plt+0x528>
   110b4:	beq	110ec <abort@plt+0x394>
   110b8:	ldr	r3, [pc, #452]	; 11284 <abort@plt+0x52c>
   110bc:	mov	r2, #5
   110c0:	ldr	r1, [pc, #448]	; 11288 <abort@plt+0x530>
   110c4:	mov	r0, #0
   110c8:	ldr	r6, [r3]
   110cc:	bl	10bcc <dcgettext@plt>
   110d0:	ldr	r3, [r4]
   110d4:	mov	r1, #1
   110d8:	mov	r2, r0
   110dc:	mov	r0, r6
   110e0:	bl	10cec <__fprintf_chk@plt>
   110e4:	mov	r0, r5
   110e8:	bl	10c8c <exit@plt>
   110ec:	mov	r2, #5
   110f0:	ldr	r1, [pc, #404]	; 1128c <abort@plt+0x534>
   110f4:	bl	10bcc <dcgettext@plt>
   110f8:	ldr	r3, [r4]
   110fc:	ldr	r4, [pc, #396]	; 11290 <abort@plt+0x538>
   11100:	mov	r2, r3
   11104:	ldr	r8, [pc, #392]	; 11294 <abort@plt+0x53c>
   11108:	mov	r6, r5
   1110c:	mov	r1, r0
   11110:	mov	r0, #1
   11114:	bl	10cc8 <__printf_chk@plt>
   11118:	mov	r2, #5
   1111c:	ldr	r1, [pc, #372]	; 11298 <abort@plt+0x540>
   11120:	mov	r0, r5
   11124:	bl	10bcc <dcgettext@plt>
   11128:	ldr	r1, [r4]
   1112c:	bl	10b54 <fputs_unlocked@plt>
   11130:	mov	r2, #5
   11134:	ldr	r1, [pc, #352]	; 1129c <abort@plt+0x544>
   11138:	mov	r0, r5
   1113c:	bl	10bcc <dcgettext@plt>
   11140:	ldr	r1, [r4]
   11144:	bl	10b54 <fputs_unlocked@plt>
   11148:	mov	r2, #5
   1114c:	ldr	r1, [pc, #332]	; 112a0 <abort@plt+0x548>
   11150:	mov	r0, r5
   11154:	bl	10bcc <dcgettext@plt>
   11158:	ldr	r1, [r4]
   1115c:	bl	10b54 <fputs_unlocked@plt>
   11160:	ldr	lr, [pc, #316]	; 112a4 <abort@plt+0x54c>
   11164:	mov	ip, sp
   11168:	ldm	lr!, {r0, r1, r2, r3}
   1116c:	stmia	ip!, {r0, r1, r2, r3}
   11170:	ldm	lr!, {r0, r1, r2, r3}
   11174:	stmia	ip!, {r0, r1, r2, r3}
   11178:	ldm	lr!, {r0, r1, r2, r3}
   1117c:	stmia	ip!, {r0, r1, r2, r3}
   11180:	ldm	lr, {r0, r1}
   11184:	stm	ip, {r0, r1}
   11188:	ldr	r1, [sp, r6]
   1118c:	add	r7, sp, r6
   11190:	cmp	r1, #0
   11194:	bne	11238 <abort@plt+0x4e0>
   11198:	ldr	r6, [r7, #4]
   1119c:	ldr	r7, [pc, #240]	; 11294 <abort@plt+0x53c>
   111a0:	cmp	r6, #0
   111a4:	mov	r2, #5
   111a8:	ldr	r1, [pc, #248]	; 112a8 <abort@plt+0x550>
   111ac:	mov	r0, #0
   111b0:	moveq	r6, r7
   111b4:	bl	10bcc <dcgettext@plt>
   111b8:	ldr	r3, [pc, #236]	; 112ac <abort@plt+0x554>
   111bc:	ldr	r2, [pc, #236]	; 112b0 <abort@plt+0x558>
   111c0:	mov	r1, r0
   111c4:	mov	r0, #1
   111c8:	bl	10cc8 <__printf_chk@plt>
   111cc:	mov	r1, #0
   111d0:	mov	r0, #5
   111d4:	bl	10d10 <setlocale@plt>
   111d8:	cmp	r0, #0
   111dc:	bne	11250 <abort@plt+0x4f8>
   111e0:	mov	r2, #5
   111e4:	ldr	r1, [pc, #200]	; 112b4 <abort@plt+0x55c>
   111e8:	mov	r0, #0
   111ec:	bl	10bcc <dcgettext@plt>
   111f0:	ldr	r3, [pc, #156]	; 11294 <abort@plt+0x53c>
   111f4:	ldr	r2, [pc, #176]	; 112ac <abort@plt+0x554>
   111f8:	mov	r1, r0
   111fc:	mov	r0, #1
   11200:	bl	10cc8 <__printf_chk@plt>
   11204:	mov	r2, #5
   11208:	ldr	r1, [pc, #168]	; 112b8 <abort@plt+0x560>
   1120c:	mov	r0, #0
   11210:	bl	10bcc <dcgettext@plt>
   11214:	ldr	r2, [pc, #160]	; 112bc <abort@plt+0x564>
   11218:	cmp	r6, r7
   1121c:	ldr	r3, [pc, #156]	; 112c0 <abort@plt+0x568>
   11220:	moveq	r3, r2
   11224:	mov	r2, r6
   11228:	mov	r1, r0
   1122c:	mov	r0, #1
   11230:	bl	10cc8 <__printf_chk@plt>
   11234:	b	110e4 <abort@plt+0x38c>
   11238:	mov	r0, r8
   1123c:	bl	10b6c <strcmp@plt>
   11240:	add	r6, r6, #8
   11244:	cmp	r0, #0
   11248:	bne	11188 <abort@plt+0x430>
   1124c:	b	11198 <abort@plt+0x440>
   11250:	mov	r2, #3
   11254:	ldr	r1, [pc, #104]	; 112c4 <abort@plt+0x56c>
   11258:	bl	10d4c <strncmp@plt>
   1125c:	cmp	r0, #0
   11260:	beq	111e0 <abort@plt+0x488>
   11264:	mov	r2, #5
   11268:	ldr	r1, [pc, #88]	; 112c8 <abort@plt+0x570>
   1126c:	mov	r0, #0
   11270:	bl	10bcc <dcgettext@plt>
   11274:	ldr	r1, [r4]
   11278:	bl	10b54 <fputs_unlocked@plt>
   1127c:	b	111e0 <abort@plt+0x488>
   11280:	andeq	r5, r2, r0, asr #2
   11284:	andeq	r5, r2, r8, lsr #2
   11288:	andeq	r4, r1, ip, lsr r0
   1128c:	andeq	r4, r1, r3, rrx
   11290:	andeq	r5, r2, ip, lsr #2
   11294:	andeq	r4, r1, r8, lsr r0
   11298:	andeq	r4, r1, fp, lsl #1
   1129c:	andeq	r4, r1, ip, asr #1
   112a0:	strdeq	r4, [r1], -r9
   112a4:	andeq	r4, r1, r0
   112a8:	andeq	r4, r1, pc, lsr #2
   112ac:	andeq	r4, r1, r6, asr #2
   112b0:	andeq	r4, r1, lr, ror #2
   112b4:	andeq	r4, r1, r7, asr #3
   112b8:	andeq	r4, r1, r2, ror #3
   112bc:	andeq	r4, r1, fp, ror #4
   112c0:	andeq	r4, r1, fp, asr #1
   112c4:	andeq	r4, r1, ip, ror r1
   112c8:	andeq	r4, r1, r0, lsl #3
   112cc:	ldr	r3, [pc, #4]	; 112d8 <abort@plt+0x580>
   112d0:	str	r0, [r3]
   112d4:	bx	lr
   112d8:	andeq	r5, r2, r8, lsr r1
   112dc:	ldr	r3, [pc, #4]	; 112e8 <abort@plt+0x590>
   112e0:	strb	r0, [r3, #4]
   112e4:	bx	lr
   112e8:	andeq	r5, r2, r8, lsr r1
   112ec:	ldr	r3, [pc, #192]	; 113b4 <abort@plt+0x65c>
   112f0:	push	{r0, r1, r4, r5, r6, lr}
   112f4:	ldr	r0, [r3]
   112f8:	bl	1371c <abort@plt+0x29c4>
   112fc:	cmp	r0, #0
   11300:	beq	11398 <abort@plt+0x640>
   11304:	ldr	r3, [pc, #172]	; 113b8 <abort@plt+0x660>
   11308:	mov	r4, r3
   1130c:	ldrb	r2, [r3, #4]
   11310:	cmp	r2, #0
   11314:	beq	11328 <abort@plt+0x5d0>
   11318:	bl	10ca4 <__errno_location@plt>
   1131c:	ldr	r3, [r0]
   11320:	cmp	r3, #32
   11324:	beq	11398 <abort@plt+0x640>
   11328:	mov	r2, #5
   1132c:	ldr	r1, [pc, #136]	; 113bc <abort@plt+0x664>
   11330:	mov	r0, #0
   11334:	bl	10bcc <dcgettext@plt>
   11338:	ldr	r4, [r4]
   1133c:	cmp	r4, #0
   11340:	mov	r5, r0
   11344:	beq	1137c <abort@plt+0x624>
   11348:	bl	10ca4 <__errno_location@plt>
   1134c:	ldr	r6, [r0]
   11350:	mov	r0, r4
   11354:	bl	12a90 <abort@plt+0x1d38>
   11358:	str	r5, [sp]
   1135c:	ldr	r2, [pc, #92]	; 113c0 <abort@plt+0x668>
   11360:	mov	r1, r6
   11364:	mov	r3, r0
   11368:	mov	r0, #0
   1136c:	bl	10c38 <error@plt>
   11370:	ldr	r3, [pc, #76]	; 113c4 <abort@plt+0x66c>
   11374:	ldr	r0, [r3]
   11378:	bl	10b90 <_exit@plt>
   1137c:	bl	10ca4 <__errno_location@plt>
   11380:	mov	r3, r5
   11384:	ldr	r2, [pc, #60]	; 113c8 <abort@plt+0x670>
   11388:	ldr	r1, [r0]
   1138c:	mov	r0, r4
   11390:	bl	10c38 <error@plt>
   11394:	b	11370 <abort@plt+0x618>
   11398:	ldr	r3, [pc, #44]	; 113cc <abort@plt+0x674>
   1139c:	ldr	r0, [r3]
   113a0:	bl	1371c <abort@plt+0x29c4>
   113a4:	cmp	r0, #0
   113a8:	bne	11370 <abort@plt+0x618>
   113ac:	add	sp, sp, #8
   113b0:	pop	{r4, r5, r6, pc}
   113b4:	andeq	r5, r2, ip, lsr #2
   113b8:	andeq	r5, r2, r8, lsr r1
   113bc:			; <UNDEFINED> instruction: 0x000142bd
   113c0:	andeq	r4, r1, r9, asr #5
   113c4:	ldrdeq	r5, [r2], -r0
   113c8:	andeq	r4, r1, sp, asr #5
   113cc:	andeq	r5, r2, r8, lsr #2
   113d0:	push	{r4, r5, r6, r7, r8, lr}
   113d4:	mov	r7, r0
   113d8:	mov	r4, r2
   113dc:	mov	r6, r1
   113e0:	mov	r5, #0
   113e4:	cmp	r4, #0
   113e8:	beq	11418 <abort@plt+0x6c0>
   113ec:	mov	r2, r4
   113f0:	mov	r1, r6
   113f4:	mov	r0, r7
   113f8:	bl	12bec <abort@plt+0x1e94>
   113fc:	cmn	r0, #1
   11400:	beq	11418 <abort@plt+0x6c0>
   11404:	cmp	r0, #0
   11408:	bne	11420 <abort@plt+0x6c8>
   1140c:	bl	10ca4 <__errno_location@plt>
   11410:	mov	r3, #28
   11414:	str	r3, [r0]
   11418:	mov	r0, r5
   1141c:	pop	{r4, r5, r6, r7, r8, pc}
   11420:	add	r5, r5, r0
   11424:	add	r6, r6, r0
   11428:	sub	r4, r4, r0
   1142c:	b	113e4 <abort@plt+0x68c>
   11430:	ldr	ip, [pc, #156]	; 114d4 <abort@plt+0x77c>
   11434:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   11438:	cmp	r0, #2
   1143c:	mov	r6, #0
   11440:	ldr	r7, [ip]
   11444:	mov	r8, ip
   11448:	str	r6, [ip]
   1144c:	bne	11480 <abort@plt+0x728>
   11450:	mov	r5, r3
   11454:	mov	r4, r2
   11458:	str	r6, [sp]
   1145c:	ldr	r3, [pc, #116]	; 114d8 <abort@plt+0x780>
   11460:	ldr	r2, [pc, #116]	; 114dc <abort@plt+0x784>
   11464:	bl	10c74 <getopt_long@plt>
   11468:	cmn	r0, #1
   1146c:	beq	11480 <abort@plt+0x728>
   11470:	cmp	r0, #104	; 0x68
   11474:	beq	11498 <abort@plt+0x740>
   11478:	cmp	r0, #118	; 0x76
   1147c:	beq	114a8 <abort@plt+0x750>
   11480:	ldr	r3, [pc, #88]	; 114e0 <abort@plt+0x788>
   11484:	mov	r2, #0
   11488:	str	r7, [r8]
   1148c:	str	r2, [r3]
   11490:	add	sp, sp, #16
   11494:	pop	{r4, r5, r6, r7, r8, pc}
   11498:	mov	r0, r6
   1149c:	ldr	r3, [sp, #44]	; 0x2c
   114a0:	blx	r3
   114a4:	b	11480 <abort@plt+0x728>
   114a8:	ldr	r0, [pc, #52]	; 114e4 <abort@plt+0x78c>
   114ac:	add	r3, sp, #48	; 0x30
   114b0:	str	r3, [sp]
   114b4:	str	r3, [sp, #12]
   114b8:	ldr	r0, [r0]
   114bc:	ldr	r3, [sp, #40]	; 0x28
   114c0:	mov	r2, r5
   114c4:	mov	r1, r4
   114c8:	bl	13058 <abort@plt+0x2300>
   114cc:	mov	r0, r6
   114d0:	bl	10c8c <exit@plt>
   114d4:	andeq	r5, r2, r0, lsr r1
   114d8:	ldrdeq	r4, [r1], -r0
   114dc:	andeq	r4, r1, r0, lsl #6
   114e0:	andeq	r5, r2, r0, lsr #2
   114e4:	andeq	r5, r2, ip, lsr #2
   114e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   114ec:	sub	sp, sp, #20
   114f0:	mov	r8, r3
   114f4:	ldrb	lr, [sp, #52]	; 0x34
   114f8:	ldr	r3, [pc, #152]	; 11598 <abort@plt+0x840>
   114fc:	mov	r4, #0
   11500:	ldr	ip, [pc, #148]	; 1159c <abort@plt+0x844>
   11504:	cmp	lr, r4
   11508:	mov	r7, r2
   1150c:	mov	r2, #1
   11510:	ldr	r9, [r3]
   11514:	mov	r5, r3
   11518:	str	r2, [r3]
   1151c:	ldr	r2, [pc, #124]	; 115a0 <abort@plt+0x848>
   11520:	str	r4, [sp]
   11524:	moveq	r2, ip
   11528:	ldr	r3, [pc, #116]	; 115a4 <abort@plt+0x84c>
   1152c:	ldr	r6, [sp, #56]	; 0x38
   11530:	bl	10c74 <getopt_long@plt>
   11534:	cmn	r0, #1
   11538:	beq	11560 <abort@plt+0x808>
   1153c:	cmp	r0, #104	; 0x68
   11540:	beq	11558 <abort@plt+0x800>
   11544:	cmp	r0, #118	; 0x76
   11548:	beq	1156c <abort@plt+0x814>
   1154c:	ldr	r3, [pc, #84]	; 115a8 <abort@plt+0x850>
   11550:	ldr	r0, [r3]
   11554:	b	1155c <abort@plt+0x804>
   11558:	mov	r0, r4
   1155c:	blx	r6
   11560:	str	r9, [r5]
   11564:	add	sp, sp, #20
   11568:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1156c:	ldr	r0, [pc, #56]	; 115ac <abort@plt+0x854>
   11570:	add	r3, sp, #60	; 0x3c
   11574:	str	r3, [sp]
   11578:	str	r3, [sp, #12]
   1157c:	ldr	r0, [r0]
   11580:	ldr	r3, [sp, #48]	; 0x30
   11584:	mov	r2, r8
   11588:	mov	r1, r7
   1158c:	bl	13058 <abort@plt+0x2300>
   11590:	mov	r0, r4
   11594:	bl	10c8c <exit@plt>
   11598:	andeq	r5, r2, r0, lsr r1
   1159c:	andeq	r4, r1, r0, lsl #6
   115a0:	andeq	r4, r1, fp, asr #1
   115a4:	ldrdeq	r4, [r1], -r0
   115a8:	ldrdeq	r5, [r2], -r0
   115ac:	andeq	r5, r2, ip, lsr #2
   115b0:	push	{r4, r5, r6, lr}
   115b4:	subs	r5, r0, #0
   115b8:	bne	115d0 <abort@plt+0x878>
   115bc:	ldr	r3, [pc, #124]	; 11640 <abort@plt+0x8e8>
   115c0:	ldr	r0, [pc, #124]	; 11644 <abort@plt+0x8ec>
   115c4:	ldr	r1, [r3]
   115c8:	bl	10d40 <fputs@plt>
   115cc:	bl	10d58 <abort@plt>
   115d0:	mov	r1, #47	; 0x2f
   115d4:	bl	10d1c <strrchr@plt>
   115d8:	cmp	r0, #0
   115dc:	addne	r4, r0, #1
   115e0:	moveq	r4, r5
   115e4:	sub	r3, r4, r5
   115e8:	cmp	r3, #6
   115ec:	ble	1162c <abort@plt+0x8d4>
   115f0:	mov	r2, #7
   115f4:	ldr	r1, [pc, #76]	; 11648 <abort@plt+0x8f0>
   115f8:	sub	r0, r4, #7
   115fc:	bl	10d4c <strncmp@plt>
   11600:	cmp	r0, #0
   11604:	bne	1162c <abort@plt+0x8d4>
   11608:	mov	r2, #3
   1160c:	ldr	r1, [pc, #56]	; 1164c <abort@plt+0x8f4>
   11610:	mov	r0, r4
   11614:	bl	10d4c <strncmp@plt>
   11618:	cmp	r0, #0
   1161c:	movne	r5, r4
   11620:	ldreq	r3, [pc, #40]	; 11650 <abort@plt+0x8f8>
   11624:	addeq	r5, r4, #3
   11628:	streq	r5, [r3]
   1162c:	ldr	r3, [pc, #32]	; 11654 <abort@plt+0x8fc>
   11630:	str	r5, [r3]
   11634:	ldr	r3, [pc, #28]	; 11658 <abort@plt+0x900>
   11638:	str	r5, [r3]
   1163c:	pop	{r4, r5, r6, pc}
   11640:	andeq	r5, r2, r8, lsr #2
   11644:	andeq	r4, r1, pc, lsl #6
   11648:	andeq	r4, r1, r7, asr #6
   1164c:	andeq	r4, r1, pc, asr #6
   11650:	andeq	r5, r2, r8, lsl r1
   11654:	andeq	r5, r2, r0, asr #2
   11658:	andeq	r5, r2, ip, lsl r1
   1165c:	push	{r4, r5, r6, lr}
   11660:	mov	r2, #48	; 0x30
   11664:	mov	r5, r1
   11668:	mov	r1, #0
   1166c:	mov	r4, r0
   11670:	bl	10cbc <memset@plt>
   11674:	cmp	r5, #10
   11678:	bne	11680 <abort@plt+0x928>
   1167c:	bl	10d58 <abort@plt>
   11680:	str	r5, [r4]
   11684:	mov	r0, r4
   11688:	pop	{r4, r5, r6, pc}
   1168c:	push	{r4, r5, r6, lr}
   11690:	mov	r4, r0
   11694:	mov	r5, r1
   11698:	bl	1396c <abort@plt+0x2c14>
   1169c:	ldrb	r3, [r0]
   116a0:	bic	r3, r3, #32
   116a4:	cmp	r3, #85	; 0x55
   116a8:	bne	11718 <abort@plt+0x9c0>
   116ac:	ldrb	r3, [r0, #1]
   116b0:	bic	r3, r3, #32
   116b4:	cmp	r3, #84	; 0x54
   116b8:	bne	116f0 <abort@plt+0x998>
   116bc:	ldrb	r3, [r0, #2]
   116c0:	bic	r3, r3, #32
   116c4:	cmp	r3, #70	; 0x46
   116c8:	bne	116f0 <abort@plt+0x998>
   116cc:	ldrb	r3, [r0, #3]
   116d0:	cmp	r3, #45	; 0x2d
   116d4:	bne	116f0 <abort@plt+0x998>
   116d8:	ldrb	r3, [r0, #4]
   116dc:	cmp	r3, #56	; 0x38
   116e0:	bne	116f0 <abort@plt+0x998>
   116e4:	ldrb	r3, [r0, #5]
   116e8:	cmp	r3, #0
   116ec:	beq	11704 <abort@plt+0x9ac>
   116f0:	ldr	r1, [pc, #144]	; 11788 <abort@plt+0xa30>
   116f4:	ldr	r0, [pc, #144]	; 1178c <abort@plt+0xa34>
   116f8:	cmp	r5, #9
   116fc:	movne	r0, r1
   11700:	pop	{r4, r5, r6, pc}
   11704:	ldrb	r3, [r4]
   11708:	ldr	r1, [pc, #128]	; 11790 <abort@plt+0xa38>
   1170c:	ldr	r0, [pc, #128]	; 11794 <abort@plt+0xa3c>
   11710:	cmp	r3, #96	; 0x60
   11714:	b	116fc <abort@plt+0x9a4>
   11718:	cmp	r3, #71	; 0x47
   1171c:	bne	116f0 <abort@plt+0x998>
   11720:	ldrb	r3, [r0, #1]
   11724:	bic	r3, r3, #32
   11728:	cmp	r3, #66	; 0x42
   1172c:	bne	116f0 <abort@plt+0x998>
   11730:	ldrb	r3, [r0, #2]
   11734:	cmp	r3, #49	; 0x31
   11738:	bne	116f0 <abort@plt+0x998>
   1173c:	ldrb	r3, [r0, #3]
   11740:	cmp	r3, #56	; 0x38
   11744:	bne	116f0 <abort@plt+0x998>
   11748:	ldrb	r3, [r0, #4]
   1174c:	cmp	r3, #48	; 0x30
   11750:	bne	116f0 <abort@plt+0x998>
   11754:	ldrb	r3, [r0, #5]
   11758:	cmp	r3, #51	; 0x33
   1175c:	bne	116f0 <abort@plt+0x998>
   11760:	ldrb	r3, [r0, #6]
   11764:	cmp	r3, #48	; 0x30
   11768:	bne	116f0 <abort@plt+0x998>
   1176c:	ldrb	r3, [r0, #7]
   11770:	cmp	r3, #0
   11774:	bne	116f0 <abort@plt+0x998>
   11778:	ldrb	r3, [r4]
   1177c:	ldr	r1, [pc, #20]	; 11798 <abort@plt+0xa40>
   11780:	ldr	r0, [pc, #20]	; 1179c <abort@plt+0xa44>
   11784:	b	11710 <abort@plt+0x9b8>
   11788:			; <UNDEFINED> instruction: 0x000143b9
   1178c:			; <UNDEFINED> instruction: 0x000143b7
   11790:	andeq	r4, r1, ip, lsr #7
   11794:	andeq	r4, r1, r8, lsr #7
   11798:			; <UNDEFINED> instruction: 0x000143b4
   1179c:			; <UNDEFINED> instruction: 0x000143b0
   117a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117a4:	sub	sp, sp, #108	; 0x6c
   117a8:	mov	r8, r0
   117ac:	str	r3, [sp, #36]	; 0x24
   117b0:	mov	r5, r1
   117b4:	str	r2, [sp, #44]	; 0x2c
   117b8:	ldr	sl, [sp, #144]	; 0x90
   117bc:	bl	10c08 <__ctype_get_mb_cur_max@plt>
   117c0:	ldr	r3, [sp, #148]	; 0x94
   117c4:	mov	r7, #0
   117c8:	str	r7, [sp, #48]	; 0x30
   117cc:	lsr	r6, r3, #1
   117d0:	and	r6, r6, #1
   117d4:	mov	r3, #1
   117d8:	str	r3, [sp, #72]	; 0x48
   117dc:	str	r7, [sp, #24]
   117e0:	str	r7, [sp, #32]
   117e4:	str	r7, [sp, #40]	; 0x28
   117e8:	str	r7, [sp, #60]	; 0x3c
   117ec:	str	r0, [sp, #76]	; 0x4c
   117f0:	cmp	sl, #10
   117f4:	ldrls	pc, [pc, sl, lsl #2]
   117f8:	b	11a34 <abort@plt+0xcdc>
   117fc:	andeq	r1, r1, r8, lsr #16
   11800:			; <UNDEFINED> instruction: 0x000124bc
   11804:	andeq	r1, r1, r0, lsl #20
   11808:	andeq	r1, r1, ip, asr #20
   1180c:	ldrdeq	r1, [r1], -ip
   11810:	andeq	r1, r1, r4, lsr r8
   11814:	muleq	r1, ip, r4
   11818:	andeq	r1, r1, r8, lsr sl
   1181c:	andeq	r1, r1, ip, lsr #18
   11820:	andeq	r1, r1, ip, lsr #18
   11824:	andeq	r1, r1, ip, lsr #18
   11828:	mov	r6, #0
   1182c:	mov	r4, #0
   11830:	b	11860 <abort@plt+0xb08>
   11834:	cmp	r6, #0
   11838:	bne	11a5c <abort@plt+0xd04>
   1183c:	cmp	r5, #0
   11840:	movne	r3, #34	; 0x22
   11844:	strbne	r3, [r8]
   11848:	mov	r3, #1
   1184c:	str	r3, [sp, #24]
   11850:	str	r3, [sp, #32]
   11854:	mov	r4, #1
   11858:	ldr	r3, [pc, #3172]	; 124c4 <abort@plt+0x176c>
   1185c:	str	r3, [sp, #40]	; 0x28
   11860:	mov	r9, r5
   11864:	mov	r3, #0
   11868:	str	r7, [sp, #68]	; 0x44
   1186c:	str	r3, [sp, #28]
   11870:	ldr	r3, [sp, #36]	; 0x24
   11874:	cmn	r3, #1
   11878:	bne	12408 <abort@plt+0x16b0>
   1187c:	ldr	r3, [sp, #44]	; 0x2c
   11880:	ldr	r2, [sp, #28]
   11884:	ldrb	r3, [r3, r2]
   11888:	adds	r3, r3, #0
   1188c:	movne	r3, #1
   11890:	str	r3, [sp, #52]	; 0x34
   11894:	ldr	r3, [sp, #52]	; 0x34
   11898:	cmp	r3, #0
   1189c:	bne	11a84 <abort@plt+0xd2c>
   118a0:	sub	r2, sl, #2
   118a4:	clz	r2, r2
   118a8:	lsr	r2, r2, #5
   118ac:	and	r3, r6, r2
   118b0:	cmp	r4, #0
   118b4:	movne	r3, #0
   118b8:	andeq	r3, r3, #1
   118bc:	cmp	r3, #0
   118c0:	bne	11c4c <abort@plt+0xef4>
   118c4:	eor	r3, r6, #1
   118c8:	ands	r2, r2, r3
   118cc:	beq	12440 <abort@plt+0x16e8>
   118d0:	ldr	r3, [sp, #68]	; 0x44
   118d4:	cmp	r3, #0
   118d8:	beq	12478 <abort@plt+0x1720>
   118dc:	ldr	r3, [sp, #72]	; 0x48
   118e0:	cmp	r3, #0
   118e4:	beq	1241c <abort@plt+0x16c4>
   118e8:	ldr	r3, [sp, #160]	; 0xa0
   118ec:	ldr	r2, [sp, #44]	; 0x2c
   118f0:	str	r3, [sp, #16]
   118f4:	ldr	r3, [sp, #156]	; 0x9c
   118f8:	ldr	r1, [sp, #60]	; 0x3c
   118fc:	str	r3, [sp, #12]
   11900:	ldr	r3, [sp, #152]	; 0x98
   11904:	str	r3, [sp, #8]
   11908:	ldr	r3, [sp, #148]	; 0x94
   1190c:	str	r3, [sp, #4]
   11910:	mov	r3, #5
   11914:	str	r3, [sp]
   11918:	ldr	r3, [sp, #36]	; 0x24
   1191c:	mov	r0, r8
   11920:	bl	117a0 <abort@plt+0xa48>
   11924:	mov	r4, r0
   11928:	b	1246c <abort@plt+0x1714>
   1192c:	cmp	sl, #10
   11930:	beq	1198c <abort@plt+0xc34>
   11934:	ldr	r4, [pc, #2956]	; 124c8 <abort@plt+0x1770>
   11938:	mov	r2, #5
   1193c:	mov	r1, r4
   11940:	mov	r0, #0
   11944:	bl	10bcc <dcgettext@plt>
   11948:	cmp	r0, r4
   1194c:	str	r0, [sp, #156]	; 0x9c
   11950:	bne	11960 <abort@plt+0xc08>
   11954:	mov	r1, sl
   11958:	bl	1168c <abort@plt+0x934>
   1195c:	str	r0, [sp, #156]	; 0x9c
   11960:	ldr	r4, [pc, #2916]	; 124cc <abort@plt+0x1774>
   11964:	mov	r2, #5
   11968:	mov	r1, r4
   1196c:	mov	r0, #0
   11970:	bl	10bcc <dcgettext@plt>
   11974:	cmp	r0, r4
   11978:	str	r0, [sp, #160]	; 0xa0
   1197c:	bne	1198c <abort@plt+0xc34>
   11980:	mov	r1, sl
   11984:	bl	1168c <abort@plt+0x934>
   11988:	str	r0, [sp, #160]	; 0xa0
   1198c:	cmp	r6, #0
   11990:	moveq	r4, r6
   11994:	beq	119ac <abort@plt+0xc54>
   11998:	mov	r4, #0
   1199c:	b	119bc <abort@plt+0xc64>
   119a0:	cmp	r5, r4
   119a4:	strbhi	r3, [r8, r4]
   119a8:	add	r4, r4, #1
   119ac:	ldr	r3, [sp, #156]	; 0x9c
   119b0:	ldrb	r3, [r3, r4]
   119b4:	cmp	r3, #0
   119b8:	bne	119a0 <abort@plt+0xc48>
   119bc:	ldr	r0, [sp, #160]	; 0xa0
   119c0:	bl	10c98 <strlen@plt>
   119c4:	ldr	r3, [sp, #160]	; 0xa0
   119c8:	str	r3, [sp, #40]	; 0x28
   119cc:	mov	r3, #1
   119d0:	str	r3, [sp, #24]
   119d4:	str	r0, [sp, #32]
   119d8:	b	11860 <abort@plt+0xb08>
   119dc:	mov	r3, #1
   119e0:	cmp	r6, #0
   119e4:	streq	r3, [sp, #24]
   119e8:	beq	11a08 <abort@plt+0xcb0>
   119ec:	str	r3, [sp, #32]
   119f0:	ldr	r3, [pc, #2772]	; 124cc <abort@plt+0x1774>
   119f4:	mov	r4, #0
   119f8:	str	r3, [sp, #40]	; 0x28
   119fc:	b	11a2c <abort@plt+0xcd4>
   11a00:	cmp	r6, #0
   11a04:	bne	11a74 <abort@plt+0xd1c>
   11a08:	cmp	r5, #0
   11a0c:	movne	r3, #39	; 0x27
   11a10:	strbne	r3, [r8]
   11a14:	mov	r3, #1
   11a18:	str	r3, [sp, #32]
   11a1c:	mov	r6, #0
   11a20:	ldr	r3, [pc, #2724]	; 124cc <abort@plt+0x1774>
   11a24:	mov	r4, #1
   11a28:	str	r3, [sp, #40]	; 0x28
   11a2c:	mov	sl, #2
   11a30:	b	11860 <abort@plt+0xb08>
   11a34:	bl	10d58 <abort@plt>
   11a38:	mov	r6, #0
   11a3c:	mov	r3, #1
   11a40:	str	r3, [sp, #24]
   11a44:	mov	r4, r6
   11a48:	b	11860 <abort@plt+0xb08>
   11a4c:	mov	r6, #1
   11a50:	str	r6, [sp, #24]
   11a54:	str	r6, [sp, #32]
   11a58:	b	119f0 <abort@plt+0xc98>
   11a5c:	mov	r3, #1
   11a60:	str	r3, [sp, #32]
   11a64:	ldr	r3, [pc, #2648]	; 124c4 <abort@plt+0x176c>
   11a68:	str	r6, [sp, #24]
   11a6c:	str	r3, [sp, #40]	; 0x28
   11a70:	b	1182c <abort@plt+0xad4>
   11a74:	mov	r3, #1
   11a78:	str	r3, [sp, #32]
   11a7c:	ldr	r3, [pc, #2632]	; 124cc <abort@plt+0x1774>
   11a80:	b	11a6c <abort@plt+0xd14>
   11a84:	ldr	r3, [sp, #32]
   11a88:	ldr	fp, [sp, #24]
   11a8c:	cmp	sl, #2
   11a90:	moveq	fp, #0
   11a94:	andne	fp, fp, #1
   11a98:	adds	r5, r3, #0
   11a9c:	movne	r5, #1
   11aa0:	ands	r3, r5, fp
   11aa4:	str	r3, [sp, #64]	; 0x40
   11aa8:	beq	11b78 <abort@plt+0xe20>
   11aac:	ldr	r2, [sp, #32]
   11ab0:	ldr	r3, [sp, #28]
   11ab4:	add	r7, r3, r2
   11ab8:	mov	r3, r2
   11abc:	ldr	r2, [sp, #36]	; 0x24
   11ac0:	cmp	r3, #1
   11ac4:	movls	r3, #0
   11ac8:	movhi	r3, #1
   11acc:	cmn	r2, #1
   11ad0:	movne	r3, #0
   11ad4:	cmp	r3, #0
   11ad8:	beq	11ae8 <abort@plt+0xd90>
   11adc:	ldr	r0, [sp, #44]	; 0x2c
   11ae0:	bl	10c98 <strlen@plt>
   11ae4:	str	r0, [sp, #36]	; 0x24
   11ae8:	ldr	r3, [sp, #36]	; 0x24
   11aec:	cmp	r3, r7
   11af0:	bcc	11b70 <abort@plt+0xe18>
   11af4:	ldr	r3, [sp, #44]	; 0x2c
   11af8:	ldr	r0, [sp, #28]
   11afc:	ldr	r2, [sp, #32]
   11b00:	ldr	r1, [sp, #40]	; 0x28
   11b04:	add	r0, r3, r0
   11b08:	bl	10bb4 <memcmp@plt>
   11b0c:	cmp	r0, #0
   11b10:	bne	11b70 <abort@plt+0xe18>
   11b14:	cmp	r6, #0
   11b18:	beq	11b78 <abort@plt+0xe20>
   11b1c:	str	r6, [sp, #24]
   11b20:	ldr	r3, [sp, #24]
   11b24:	ldr	r2, [sp, #44]	; 0x2c
   11b28:	cmp	sl, #2
   11b2c:	movne	r3, #0
   11b30:	andeq	r3, r3, #1
   11b34:	cmp	r3, #0
   11b38:	ldr	r3, [sp, #160]	; 0xa0
   11b3c:	movne	sl, #4
   11b40:	str	r3, [sp, #16]
   11b44:	ldr	r3, [sp, #156]	; 0x9c
   11b48:	str	sl, [sp]
   11b4c:	str	r3, [sp, #12]
   11b50:	mov	r3, #0
   11b54:	str	r3, [sp, #8]
   11b58:	ldr	r3, [sp, #148]	; 0x94
   11b5c:	mov	r1, r9
   11b60:	bic	r3, r3, #2
   11b64:	str	r3, [sp, #4]
   11b68:	ldr	r3, [sp, #36]	; 0x24
   11b6c:	b	1191c <abort@plt+0xbc4>
   11b70:	mov	r3, #0
   11b74:	str	r3, [sp, #64]	; 0x40
   11b78:	ldr	r2, [sp, #28]
   11b7c:	ldr	r3, [sp, #44]	; 0x2c
   11b80:	add	r3, r3, r2
   11b84:	str	r3, [sp, #80]	; 0x50
   11b88:	ldr	r3, [sp, #44]	; 0x2c
   11b8c:	ldrb	r7, [r3, r2]
   11b90:	cmp	r7, #58	; 0x3a
   11b94:	bhi	11cfc <abort@plt+0xfa4>
   11b98:	cmp	r7, #43	; 0x2b
   11b9c:	bcs	11d50 <abort@plt+0xff8>
   11ba0:	cmp	r7, #32
   11ba4:	beq	11da8 <abort@plt+0x1050>
   11ba8:	bhi	11c54 <abort@plt+0xefc>
   11bac:	cmp	r7, #9
   11bb0:	beq	1205c <abort@plt+0x1304>
   11bb4:	bhi	11c18 <abort@plt+0xec0>
   11bb8:	cmp	r7, #7
   11bbc:	beq	12108 <abort@plt+0x13b0>
   11bc0:	bhi	11dc4 <abort@plt+0x106c>
   11bc4:	cmp	r7, #0
   11bc8:	beq	11de0 <abort@plt+0x1088>
   11bcc:	ldr	r3, [sp, #76]	; 0x4c
   11bd0:	cmp	r3, #1
   11bd4:	bne	1214c <abort@plt+0x13f4>
   11bd8:	bl	10c80 <__ctype_b_loc@plt>
   11bdc:	sxth	r3, r7
   11be0:	lsl	r3, r3, #1
   11be4:	ldr	r2, [r0]
   11be8:	ldrh	r5, [r2, r3]
   11bec:	ldr	r3, [sp, #76]	; 0x4c
   11bf0:	str	r3, [sp, #56]	; 0x38
   11bf4:	lsr	r5, r5, #14
   11bf8:	and	r5, r5, #1
   11bfc:	ldr	r3, [sp, #24]
   11c00:	eor	fp, r5, #1
   11c04:	and	fp, fp, r3
   11c08:	ands	fp, fp, #255	; 0xff
   11c0c:	beq	11f94 <abort@plt+0x123c>
   11c10:	mov	r5, #0
   11c14:	b	121f8 <abort@plt+0x14a0>
   11c18:	cmp	r7, #11
   11c1c:	beq	12064 <abort@plt+0x130c>
   11c20:	bcc	12100 <abort@plt+0x13a8>
   11c24:	cmp	r7, #12
   11c28:	beq	12110 <abort@plt+0x13b8>
   11c2c:	cmp	r7, #13
   11c30:	moveq	r3, #114	; 0x72
   11c34:	bne	11bcc <abort@plt+0xe74>
   11c38:	cmp	sl, #2
   11c3c:	movne	r2, #0
   11c40:	andeq	r2, r6, #1
   11c44:	cmp	r2, #0
   11c48:	beq	11dc8 <abort@plt+0x1070>
   11c4c:	mov	sl, #2
   11c50:	b	11b20 <abort@plt+0xdc8>
   11c54:	cmp	r7, #37	; 0x25
   11c58:	beq	11d50 <abort@plt+0xff8>
   11c5c:	bhi	11c70 <abort@plt+0xf18>
   11c60:	cmp	r7, #35	; 0x23
   11c64:	beq	11d9c <abort@plt+0x1044>
   11c68:	mov	r5, #0
   11c6c:	b	11dac <abort@plt+0x1054>
   11c70:	cmp	r7, #39	; 0x27
   11c74:	bne	11c68 <abort@plt+0xf10>
   11c78:	cmp	sl, #2
   11c7c:	ldrne	r5, [sp, #52]	; 0x34
   11c80:	movne	r3, r5
   11c84:	strne	r3, [sp, #68]	; 0x44
   11c88:	bne	11d54 <abort@plt+0xffc>
   11c8c:	cmp	r6, #0
   11c90:	bne	11b20 <abort@plt+0xdc8>
   11c94:	ldr	r2, [sp, #60]	; 0x3c
   11c98:	adds	r3, r9, #0
   11c9c:	movne	r3, #1
   11ca0:	cmp	r2, #0
   11ca4:	movne	r3, #0
   11ca8:	cmp	r3, #0
   11cac:	strne	r9, [sp, #60]	; 0x3c
   11cb0:	movne	r9, #0
   11cb4:	bne	11cc4 <abort@plt+0xf6c>
   11cb8:	cmp	r9, r4
   11cbc:	movhi	r3, #39	; 0x27
   11cc0:	strbhi	r3, [r8, r4]
   11cc4:	add	r3, r4, #1
   11cc8:	cmp	r3, r9
   11ccc:	movcc	r2, #92	; 0x5c
   11cd0:	strbcc	r2, [r8, r3]
   11cd4:	add	r3, r4, #2
   11cd8:	cmp	r3, r9
   11cdc:	ldr	r5, [sp, #52]	; 0x34
   11ce0:	movcc	r2, #39	; 0x27
   11ce4:	strbcc	r2, [r8, r3]
   11ce8:	add	r4, r4, #3
   11cec:	mov	fp, r6
   11cf0:	str	r5, [sp, #68]	; 0x44
   11cf4:	str	r6, [sp, #48]	; 0x30
   11cf8:	b	11f94 <abort@plt+0x123c>
   11cfc:	cmp	r7, #94	; 0x5e
   11d00:	beq	11c68 <abort@plt+0xf10>
   11d04:	bhi	11d5c <abort@plt+0x1004>
   11d08:	cmp	r7, #90	; 0x5a
   11d0c:	bhi	11d44 <abort@plt+0xfec>
   11d10:	cmp	r7, #65	; 0x41
   11d14:	bcs	11d50 <abort@plt+0xff8>
   11d18:	cmp	r7, #62	; 0x3e
   11d1c:	bls	11c68 <abort@plt+0xf10>
   11d20:	cmp	r7, #63	; 0x3f
   11d24:	bne	11bcc <abort@plt+0xe74>
   11d28:	cmp	sl, #2
   11d2c:	beq	11ed0 <abort@plt+0x1178>
   11d30:	cmp	sl, #5
   11d34:	beq	11ee0 <abort@plt+0x1188>
   11d38:	mov	fp, #0
   11d3c:	mov	r5, fp
   11d40:	b	11f94 <abort@plt+0x123c>
   11d44:	cmp	r7, #92	; 0x5c
   11d48:	beq	1206c <abort@plt+0x1314>
   11d4c:	bls	11c68 <abort@plt+0xf10>
   11d50:	ldr	r5, [sp, #52]	; 0x34
   11d54:	mov	fp, #0
   11d58:	b	11f94 <abort@plt+0x123c>
   11d5c:	cmp	r7, #122	; 0x7a
   11d60:	bhi	11d80 <abort@plt+0x1028>
   11d64:	cmp	r7, #97	; 0x61
   11d68:	bcs	11d50 <abort@plt+0xff8>
   11d6c:	cmp	r7, #95	; 0x5f
   11d70:	beq	11d50 <abort@plt+0xff8>
   11d74:	cmp	r7, #96	; 0x60
   11d78:	bne	11bcc <abort@plt+0xe74>
   11d7c:	b	11c68 <abort@plt+0xf10>
   11d80:	cmp	r7, #124	; 0x7c
   11d84:	beq	11c68 <abort@plt+0xf10>
   11d88:	bcc	12118 <abort@plt+0x13c0>
   11d8c:	cmp	r7, #125	; 0x7d
   11d90:	beq	12118 <abort@plt+0x13c0>
   11d94:	cmp	r7, #126	; 0x7e
   11d98:	bne	11bcc <abort@plt+0xe74>
   11d9c:	ldr	r3, [sp, #28]
   11da0:	cmp	r3, #0
   11da4:	bne	11ed8 <abort@plt+0x1180>
   11da8:	ldr	r5, [sp, #52]	; 0x34
   11dac:	cmp	sl, #2
   11db0:	movne	fp, #0
   11db4:	andeq	fp, r6, #1
   11db8:	cmp	fp, #0
   11dbc:	beq	11f94 <abort@plt+0x123c>
   11dc0:	b	11c4c <abort@plt+0xef4>
   11dc4:	mov	r3, #98	; 0x62
   11dc8:	ldr	r2, [sp, #24]
   11dcc:	cmp	r2, #0
   11dd0:	beq	11ed8 <abort@plt+0x1180>
   11dd4:	mov	r7, r3
   11dd8:	mov	r5, #0
   11ddc:	b	11fec <abort@plt+0x1294>
   11de0:	ldr	r3, [sp, #24]
   11de4:	cmp	r3, #0
   11de8:	beq	11eb4 <abort@plt+0x115c>
   11dec:	cmp	r6, #0
   11df0:	bne	11b1c <abort@plt+0xdc4>
   11df4:	ldr	r3, [sp, #48]	; 0x30
   11df8:	eor	r2, r3, #1
   11dfc:	cmp	sl, #2
   11e00:	movne	r2, #0
   11e04:	andeq	r2, r2, #1
   11e08:	cmp	r2, #0
   11e0c:	moveq	r3, r4
   11e10:	beq	11e48 <abort@plt+0x10f0>
   11e14:	cmp	r9, r4
   11e18:	movhi	r3, #39	; 0x27
   11e1c:	strbhi	r3, [r8, r4]
   11e20:	add	r3, r4, #1
   11e24:	cmp	r9, r3
   11e28:	movhi	r1, #36	; 0x24
   11e2c:	strbhi	r1, [r8, r3]
   11e30:	add	r3, r4, #2
   11e34:	cmp	r9, r3
   11e38:	movhi	r1, #39	; 0x27
   11e3c:	strbhi	r1, [r8, r3]
   11e40:	add	r3, r4, #3
   11e44:	str	r2, [sp, #48]	; 0x30
   11e48:	cmp	r9, r3
   11e4c:	movhi	r2, #92	; 0x5c
   11e50:	strbhi	r2, [r8, r3]
   11e54:	cmp	fp, #0
   11e58:	add	r4, r3, #1
   11e5c:	beq	123ec <abort@plt+0x1694>
   11e60:	ldr	r2, [sp, #28]
   11e64:	ldr	r1, [sp, #36]	; 0x24
   11e68:	add	r2, r2, #1
   11e6c:	cmp	r1, r2
   11e70:	bls	11eac <abort@plt+0x1154>
   11e74:	ldr	r1, [sp, #44]	; 0x2c
   11e78:	mov	r7, #48	; 0x30
   11e7c:	ldrb	r2, [r1, r2]
   11e80:	sub	r2, r2, #48	; 0x30
   11e84:	cmp	r2, #9
   11e88:	movhi	r5, r6
   11e8c:	bhi	11f94 <abort@plt+0x123c>
   11e90:	cmp	r9, r4
   11e94:	add	r2, r3, #2
   11e98:	strbhi	r7, [r8, r4]
   11e9c:	cmp	r9, r2
   11ea0:	add	r4, r3, #3
   11ea4:	movhi	r1, #48	; 0x30
   11ea8:	strbhi	r1, [r8, r2]
   11eac:	mov	r5, r6
   11eb0:	b	123f4 <abort@plt+0x169c>
   11eb4:	ldr	r3, [sp, #148]	; 0x94
   11eb8:	tst	r3, #1
   11ebc:	ldreq	r5, [sp, #24]
   11ec0:	beq	12400 <abort@plt+0x16a8>
   11ec4:	ldr	r3, [sp, #28]
   11ec8:	add	r3, r3, #1
   11ecc:	b	1186c <abort@plt+0xb14>
   11ed0:	cmp	r6, #0
   11ed4:	bne	11b20 <abort@plt+0xdc8>
   11ed8:	mov	r5, #0
   11edc:	b	11d54 <abort@plt+0xffc>
   11ee0:	ldr	r3, [sp, #148]	; 0x94
   11ee4:	tst	r3, #4
   11ee8:	beq	11ed8 <abort@plt+0x1180>
   11eec:	ldr	r3, [sp, #28]
   11ef0:	add	r2, r3, #2
   11ef4:	ldr	r3, [sp, #36]	; 0x24
   11ef8:	cmp	r3, r2
   11efc:	bls	11ed8 <abort@plt+0x1180>
   11f00:	ldr	r3, [sp, #44]	; 0x2c
   11f04:	ldr	r1, [sp, #28]
   11f08:	add	r3, r3, r1
   11f0c:	ldrb	r0, [r3, #1]
   11f10:	cmp	r0, #63	; 0x3f
   11f14:	bne	11ed8 <abort@plt+0x1180>
   11f18:	ldr	r3, [sp, #44]	; 0x2c
   11f1c:	ldrb	r1, [r3, r2]
   11f20:	sub	r3, r1, #33	; 0x21
   11f24:	uxtb	r3, r3
   11f28:	cmp	r3, #29
   11f2c:	bhi	123fc <abort@plt+0x16a4>
   11f30:	mov	ip, #1
   11f34:	ldr	r5, [pc, #1428]	; 124d0 <abort@plt+0x1778>
   11f38:	ands	r5, r5, ip, lsl r3
   11f3c:	beq	11d54 <abort@plt+0xffc>
   11f40:	cmp	r6, #0
   11f44:	bne	11b20 <abort@plt+0xdc8>
   11f48:	add	r3, r4, #1
   11f4c:	cmp	r9, r4
   11f50:	strbhi	r0, [r8, r4]
   11f54:	cmp	r9, r3
   11f58:	movhi	r0, #34	; 0x22
   11f5c:	strbhi	r0, [r8, r3]
   11f60:	add	r3, r4, #2
   11f64:	cmp	r9, r3
   11f68:	movhi	r0, #34	; 0x22
   11f6c:	strbhi	r0, [r8, r3]
   11f70:	add	r3, r4, #3
   11f74:	cmp	r9, r3
   11f78:	add	r4, r4, #4
   11f7c:	mov	r5, r6
   11f80:	mov	fp, r6
   11f84:	mov	r7, r1
   11f88:	movhi	r0, #63	; 0x3f
   11f8c:	strbhi	r0, [r8, r3]
   11f90:	str	r2, [sp, #28]
   11f94:	ldr	r3, [sp, #24]
   11f98:	eor	r3, r3, #1
   11f9c:	cmp	sl, #2
   11fa0:	orreq	r3, r3, #1
   11fa4:	eor	r3, r3, #1
   11fa8:	orr	r3, r6, r3
   11fac:	tst	r3, #255	; 0xff
   11fb0:	beq	11fe0 <abort@plt+0x1288>
   11fb4:	ldr	r3, [sp, #152]	; 0x98
   11fb8:	cmp	r3, #0
   11fbc:	beq	11fe0 <abort@plt+0x1288>
   11fc0:	lsr	r2, r7, #5
   11fc4:	ldr	r1, [sp, #152]	; 0x98
   11fc8:	uxtb	r2, r2
   11fcc:	and	r3, r7, #31
   11fd0:	ldr	r2, [r1, r2, lsl #2]
   11fd4:	lsr	r3, r2, r3
   11fd8:	tst	r3, #1
   11fdc:	bne	11fec <abort@plt+0x1294>
   11fe0:	ldr	r3, [sp, #64]	; 0x40
   11fe4:	cmp	r3, #0
   11fe8:	beq	12084 <abort@plt+0x132c>
   11fec:	cmp	r6, #0
   11ff0:	bne	11b20 <abort@plt+0xdc8>
   11ff4:	ldr	r3, [sp, #48]	; 0x30
   11ff8:	eor	r3, r3, #1
   11ffc:	cmp	sl, #2
   12000:	movne	r3, #0
   12004:	andeq	r3, r3, #1
   12008:	cmp	r3, #0
   1200c:	beq	12044 <abort@plt+0x12ec>
   12010:	cmp	r9, r4
   12014:	movhi	r2, #39	; 0x27
   12018:	strbhi	r2, [r8, r4]
   1201c:	add	r2, r4, #1
   12020:	cmp	r9, r2
   12024:	movhi	r1, #36	; 0x24
   12028:	strbhi	r1, [r8, r2]
   1202c:	add	r2, r4, #2
   12030:	cmp	r9, r2
   12034:	add	r4, r4, #3
   12038:	movhi	r1, #39	; 0x27
   1203c:	strbhi	r1, [r8, r2]
   12040:	str	r3, [sp, #48]	; 0x30
   12044:	cmp	r9, r4
   12048:	movhi	r3, #92	; 0x5c
   1204c:	strbhi	r3, [r8, r4]
   12050:	ldr	fp, [sp, #52]	; 0x34
   12054:	add	r4, r4, #1
   12058:	b	12084 <abort@plt+0x132c>
   1205c:	mov	r3, #116	; 0x74
   12060:	b	11c38 <abort@plt+0xee0>
   12064:	mov	r3, #118	; 0x76
   12068:	b	11dc8 <abort@plt+0x1070>
   1206c:	cmp	sl, #2
   12070:	bne	120e0 <abort@plt+0x1388>
   12074:	cmp	r6, #0
   12078:	bne	11b20 <abort@plt+0xdc8>
   1207c:	mov	r5, r6
   12080:	mov	fp, r6
   12084:	ldr	r3, [sp, #48]	; 0x30
   12088:	eor	fp, fp, #1
   1208c:	and	fp, fp, r3
   12090:	tst	fp, #255	; 0xff
   12094:	beq	120c0 <abort@plt+0x1368>
   12098:	cmp	r9, r4
   1209c:	movhi	r3, #39	; 0x27
   120a0:	strbhi	r3, [r8, r4]
   120a4:	add	r3, r4, #1
   120a8:	cmp	r9, r3
   120ac:	movhi	r2, #39	; 0x27
   120b0:	add	r4, r4, #2
   120b4:	strbhi	r2, [r8, r3]
   120b8:	mov	r3, #0
   120bc:	str	r3, [sp, #48]	; 0x30
   120c0:	cmp	r9, r4
   120c4:	strbhi	r7, [r8, r4]
   120c8:	ldr	r3, [sp, #72]	; 0x48
   120cc:	cmp	r5, #0
   120d0:	moveq	r3, #0
   120d4:	add	r4, r4, #1
   120d8:	str	r3, [sp, #72]	; 0x48
   120dc:	b	11ec4 <abort@plt+0x116c>
   120e0:	ldr	r3, [sp, #24]
   120e4:	and	r3, r3, r6
   120e8:	tst	r5, r3
   120ec:	moveq	r3, r7
   120f0:	beq	11c38 <abort@plt+0xee0>
   120f4:	mov	fp, #0
   120f8:	mov	r5, fp
   120fc:	b	12084 <abort@plt+0x132c>
   12100:	mov	r3, #110	; 0x6e
   12104:	b	11c38 <abort@plt+0xee0>
   12108:	mov	r3, #97	; 0x61
   1210c:	b	11dc8 <abort@plt+0x1070>
   12110:	mov	r3, #102	; 0x66
   12114:	b	11dc8 <abort@plt+0x1070>
   12118:	ldr	r3, [sp, #36]	; 0x24
   1211c:	cmn	r3, #1
   12120:	bne	12140 <abort@plt+0x13e8>
   12124:	ldr	r3, [sp, #44]	; 0x2c
   12128:	ldrb	r3, [r3, #1]
   1212c:	adds	r3, r3, #0
   12130:	movne	r3, #1
   12134:	cmp	r3, #0
   12138:	bne	11ed8 <abort@plt+0x1180>
   1213c:	b	11d9c <abort@plt+0x1044>
   12140:	ldr	r3, [sp, #36]	; 0x24
   12144:	subs	r3, r3, #1
   12148:	b	12130 <abort@plt+0x13d8>
   1214c:	mov	r3, #0
   12150:	str	r3, [sp, #96]	; 0x60
   12154:	str	r3, [sp, #100]	; 0x64
   12158:	ldr	r3, [sp, #36]	; 0x24
   1215c:	cmn	r3, #1
   12160:	bne	12170 <abort@plt+0x1418>
   12164:	ldr	r0, [sp, #44]	; 0x2c
   12168:	bl	10c98 <strlen@plt>
   1216c:	str	r0, [sp, #36]	; 0x24
   12170:	ldr	r5, [sp, #52]	; 0x34
   12174:	mov	r3, #0
   12178:	str	r3, [sp, #56]	; 0x38
   1217c:	ldr	r3, [sp, #28]
   12180:	ldr	r2, [sp, #56]	; 0x38
   12184:	ldr	r1, [sp, #36]	; 0x24
   12188:	add	r2, r3, r2
   1218c:	ldr	r3, [sp, #44]	; 0x2c
   12190:	add	r0, sp, #92	; 0x5c
   12194:	add	fp, r3, r2
   12198:	sub	r2, r1, r2
   1219c:	add	r3, sp, #96	; 0x60
   121a0:	mov	r1, fp
   121a4:	bl	139a0 <abort@plt+0x2c48>
   121a8:	subs	r2, r0, #0
   121ac:	beq	121ec <abort@plt+0x1494>
   121b0:	cmn	r2, #1
   121b4:	beq	123c4 <abort@plt+0x166c>
   121b8:	cmn	r2, #2
   121bc:	bne	12334 <abort@plt+0x15dc>
   121c0:	ldr	r2, [sp, #56]	; 0x38
   121c4:	ldr	r3, [sp, #28]
   121c8:	add	r3, r3, r2
   121cc:	ldr	r2, [sp, #36]	; 0x24
   121d0:	cmp	r2, r3
   121d4:	bls	123c4 <abort@plt+0x166c>
   121d8:	ldr	r3, [sp, #80]	; 0x50
   121dc:	ldr	r2, [sp, #56]	; 0x38
   121e0:	ldrb	r5, [r3, r2]
   121e4:	cmp	r5, #0
   121e8:	bne	12324 <abort@plt+0x15cc>
   121ec:	ldr	r3, [sp, #56]	; 0x38
   121f0:	cmp	r3, #1
   121f4:	bls	11bfc <abort@plt+0xea4>
   121f8:	ldr	r2, [sp, #56]	; 0x38
   121fc:	ldr	r3, [sp, #28]
   12200:	mov	fp, #0
   12204:	add	r3, r3, r2
   12208:	ldr	r2, [sp, #24]
   1220c:	str	r3, [sp, #52]	; 0x34
   12210:	eor	r3, r5, #1
   12214:	and	r3, r3, r2
   12218:	mov	ip, #92	; 0x5c
   1221c:	uxtb	r3, r3
   12220:	mov	r2, #39	; 0x27
   12224:	cmp	r3, #0
   12228:	beq	123cc <abort@plt+0x1674>
   1222c:	cmp	r6, #0
   12230:	bne	11b1c <abort@plt+0xdc4>
   12234:	ldr	r1, [sp, #48]	; 0x30
   12238:	eor	r1, r1, #1
   1223c:	cmp	sl, #2
   12240:	movne	r1, #0
   12244:	andeq	r1, r1, #1
   12248:	cmp	r1, #0
   1224c:	beq	1227c <abort@plt+0x1524>
   12250:	add	r0, r4, #1
   12254:	cmp	r9, r4
   12258:	strbhi	r2, [r8, r4]
   1225c:	cmp	r9, r0
   12260:	movhi	lr, #36	; 0x24
   12264:	strbhi	lr, [r8, r0]
   12268:	add	r0, r4, #2
   1226c:	add	r4, r4, #3
   12270:	cmp	r9, r0
   12274:	strbhi	r2, [r8, r0]
   12278:	str	r1, [sp, #48]	; 0x30
   1227c:	add	r0, r4, #1
   12280:	cmp	r9, r4
   12284:	strbhi	ip, [r8, r4]
   12288:	cmp	r9, r0
   1228c:	lsrhi	r1, r7, #6
   12290:	addhi	r1, r1, #48	; 0x30
   12294:	strbhi	r1, [r8, r0]
   12298:	add	r0, r4, #2
   1229c:	cmp	r9, r0
   122a0:	lsrhi	r1, r7, #3
   122a4:	and	r7, r7, #7
   122a8:	andhi	r1, r1, #7
   122ac:	add	r4, r4, #3
   122b0:	add	r7, r7, #48	; 0x30
   122b4:	mov	fp, r3
   122b8:	addhi	r1, r1, #48	; 0x30
   122bc:	strbhi	r1, [r8, r0]
   122c0:	ldr	r1, [sp, #28]
   122c4:	ldr	r0, [sp, #52]	; 0x34
   122c8:	add	r1, r1, #1
   122cc:	cmp	r0, r1
   122d0:	bls	12084 <abort@plt+0x132c>
   122d4:	ldr	lr, [sp, #48]	; 0x30
   122d8:	eor	r0, fp, #1
   122dc:	and	r0, r0, lr
   122e0:	tst	r0, #255	; 0xff
   122e4:	beq	12308 <abort@plt+0x15b0>
   122e8:	add	r0, r4, #1
   122ec:	cmp	r9, r4
   122f0:	strbhi	r2, [r8, r4]
   122f4:	cmp	r9, r0
   122f8:	add	r4, r4, #2
   122fc:	strbhi	r2, [r8, r0]
   12300:	mov	r0, #0
   12304:	str	r0, [sp, #48]	; 0x30
   12308:	ldr	r0, [sp, #44]	; 0x2c
   1230c:	cmp	r9, r4
   12310:	strbhi	r7, [r8, r4]
   12314:	str	r1, [sp, #28]
   12318:	add	r4, r4, #1
   1231c:	ldrb	r7, [r0, r1]
   12320:	b	12224 <abort@plt+0x14cc>
   12324:	ldr	r3, [sp, #56]	; 0x38
   12328:	add	r3, r3, #1
   1232c:	str	r3, [sp, #56]	; 0x38
   12330:	b	121c0 <abort@plt+0x1468>
   12334:	cmp	sl, #2
   12338:	movne	r3, #0
   1233c:	andeq	r3, r6, #1
   12340:	cmp	r3, #0
   12344:	movne	r1, #1
   12348:	bne	123a4 <abort@plt+0x164c>
   1234c:	ldr	r0, [sp, #92]	; 0x5c
   12350:	str	r2, [sp, #84]	; 0x54
   12354:	bl	10bf0 <iswprint@plt>
   12358:	ldr	r3, [sp, #56]	; 0x38
   1235c:	ldr	r2, [sp, #84]	; 0x54
   12360:	add	r3, r3, r2
   12364:	str	r3, [sp, #56]	; 0x38
   12368:	cmp	r0, #0
   1236c:	add	r0, sp, #96	; 0x60
   12370:	moveq	r5, #0
   12374:	bl	10ba8 <mbsinit@plt>
   12378:	cmp	r0, #0
   1237c:	beq	1217c <abort@plt+0x1424>
   12380:	b	121ec <abort@plt+0x1494>
   12384:	ldrb	r3, [fp, r1]
   12388:	cmp	r3, #94	; 0x5e
   1238c:	beq	11c4c <abort@plt+0xef4>
   12390:	bhi	123b0 <abort@plt+0x1658>
   12394:	sub	r3, r3, #91	; 0x5b
   12398:	cmp	r3, #1
   1239c:	bls	11c4c <abort@plt+0xef4>
   123a0:	add	r1, r1, #1
   123a4:	cmp	r1, r2
   123a8:	bne	12384 <abort@plt+0x162c>
   123ac:	b	1234c <abort@plt+0x15f4>
   123b0:	cmp	r3, #96	; 0x60
   123b4:	beq	11c4c <abort@plt+0xef4>
   123b8:	cmp	r3, #124	; 0x7c
   123bc:	bne	123a0 <abort@plt+0x1648>
   123c0:	b	11c4c <abort@plt+0xef4>
   123c4:	mov	r5, #0
   123c8:	b	121ec <abort@plt+0x1494>
   123cc:	ldr	r1, [sp, #64]	; 0x40
   123d0:	cmp	r1, #0
   123d4:	beq	122c0 <abort@plt+0x1568>
   123d8:	cmp	r9, r4
   123dc:	strbhi	ip, [r8, r4]
   123e0:	str	r3, [sp, #64]	; 0x40
   123e4:	add	r4, r4, #1
   123e8:	b	122c0 <abort@plt+0x1568>
   123ec:	mov	r5, fp
   123f0:	ldr	fp, [sp, #24]
   123f4:	mov	r7, #48	; 0x30
   123f8:	b	11f94 <abort@plt+0x123c>
   123fc:	mov	r5, #0
   12400:	mov	fp, r5
   12404:	b	11f94 <abort@plt+0x123c>
   12408:	ldr	r3, [sp, #36]	; 0x24
   1240c:	ldr	r2, [sp, #28]
   12410:	subs	r3, r3, r2
   12414:	movne	r3, #1
   12418:	b	11890 <abort@plt+0xb38>
   1241c:	ldr	r3, [sp, #60]	; 0x3c
   12420:	clz	r7, r9
   12424:	cmp	r3, #0
   12428:	lsr	r7, r7, #5
   1242c:	moveq	r7, #0
   12430:	cmp	r7, #0
   12434:	mov	r5, r3
   12438:	bne	117f0 <abort@plt+0xa98>
   1243c:	ldr	r3, [sp, #68]	; 0x44
   12440:	ldr	r2, [sp, #40]	; 0x28
   12444:	cmp	r2, #0
   12448:	moveq	r3, #0
   1244c:	andne	r3, r3, #1
   12450:	cmp	r3, #0
   12454:	movne	r3, r2
   12458:	subne	r2, r3, #1
   1245c:	bne	1248c <abort@plt+0x1734>
   12460:	cmp	r9, r4
   12464:	movhi	r3, #0
   12468:	strbhi	r3, [r8, r4]
   1246c:	mov	r0, r4
   12470:	add	sp, sp, #108	; 0x6c
   12474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12478:	mov	r3, r2
   1247c:	b	12440 <abort@plt+0x16e8>
   12480:	cmp	r9, r4
   12484:	strbhi	r3, [r8, r4]
   12488:	add	r4, r4, #1
   1248c:	ldrb	r3, [r2, #1]!
   12490:	cmp	r3, #0
   12494:	bne	12480 <abort@plt+0x1728>
   12498:	b	12460 <abort@plt+0x1708>
   1249c:	ldr	r3, [pc, #32]	; 124c4 <abort@plt+0x176c>
   124a0:	mov	r6, #1
   124a4:	str	r6, [sp, #24]
   124a8:	str	r6, [sp, #32]
   124ac:	str	r3, [sp, #40]	; 0x28
   124b0:	mov	r4, #0
   124b4:	mov	sl, #5
   124b8:	b	11860 <abort@plt+0xb08>
   124bc:	mov	r6, #1
   124c0:	b	11a54 <abort@plt+0xcfc>
   124c4:			; <UNDEFINED> instruction: 0x000143b7
   124c8:			; <UNDEFINED> instruction: 0x000143bb
   124cc:			; <UNDEFINED> instruction: 0x000143b9
   124d0:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   124d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124d8:	sub	sp, sp, #52	; 0x34
   124dc:	mov	r6, r0
   124e0:	mov	r5, r3
   124e4:	mov	r8, r1
   124e8:	mov	r9, r2
   124ec:	bl	10ca4 <__errno_location@plt>
   124f0:	ldr	r7, [pc, #380]	; 12674 <abort@plt+0x191c>
   124f4:	cmn	r6, #-2147483647	; 0x80000001
   124f8:	ldr	r4, [r7]
   124fc:	ldr	r3, [r0]
   12500:	str	r0, [sp, #24]
   12504:	str	r3, [sp, #32]
   12508:	movne	r3, #0
   1250c:	moveq	r3, #1
   12510:	orrs	r3, r3, r6, lsr #31
   12514:	beq	1251c <abort@plt+0x17c4>
   12518:	bl	10d58 <abort@plt>
   1251c:	ldr	r2, [r7, #4]
   12520:	cmp	r6, r2
   12524:	blt	12594 <abort@plt+0x183c>
   12528:	add	r1, sp, #48	; 0x30
   1252c:	add	sl, r7, #8
   12530:	str	r2, [r1, #-4]!
   12534:	cmp	r4, sl
   12538:	mov	r3, #8
   1253c:	sub	r2, r6, r2
   12540:	movne	r0, r4
   12544:	str	r3, [sp]
   12548:	add	r2, r2, #1
   1254c:	mvn	r3, #-2147483648	; 0x80000000
   12550:	moveq	r0, #0
   12554:	bl	132d4 <abort@plt+0x257c>
   12558:	cmp	r4, sl
   1255c:	ldr	r2, [sp, #44]	; 0x2c
   12560:	mov	fp, r0
   12564:	str	r0, [r7]
   12568:	ldmeq	r4, {r0, r1}
   1256c:	mov	r4, fp
   12570:	stmeq	fp, {r0, r1}
   12574:	ldr	r0, [r7, #4]
   12578:	mov	r1, #0
   1257c:	sub	r2, r2, r0
   12580:	add	r0, fp, r0, lsl #3
   12584:	lsl	r2, r2, #3
   12588:	bl	10cbc <memset@plt>
   1258c:	ldr	r3, [sp, #44]	; 0x2c
   12590:	str	r3, [r7, #4]
   12594:	ldr	r3, [r5, #4]
   12598:	add	sl, r4, r6, lsl #3
   1259c:	orr	r3, r3, #1
   125a0:	str	r3, [sp, #28]
   125a4:	add	r3, r5, #8
   125a8:	str	r3, [sp, #36]	; 0x24
   125ac:	ldr	r3, [r5, #44]	; 0x2c
   125b0:	ldr	fp, [r4, r6, lsl #3]
   125b4:	ldr	r7, [sl, #4]
   125b8:	str	r3, [sp, #16]
   125bc:	ldr	r3, [r5, #40]	; 0x28
   125c0:	mov	r2, r8
   125c4:	str	r3, [sp, #12]
   125c8:	add	r3, r5, #8
   125cc:	str	r3, [sp, #8]
   125d0:	ldr	r3, [sp, #28]
   125d4:	mov	r1, fp
   125d8:	str	r3, [sp, #4]
   125dc:	ldr	r3, [r5]
   125e0:	mov	r0, r7
   125e4:	str	r3, [sp]
   125e8:	mov	r3, r9
   125ec:	bl	117a0 <abort@plt+0xa48>
   125f0:	cmp	fp, r0
   125f4:	bhi	1265c <abort@plt+0x1904>
   125f8:	ldr	r3, [pc, #120]	; 12678 <abort@plt+0x1920>
   125fc:	add	fp, r0, #1
   12600:	cmp	r7, r3
   12604:	str	fp, [r4, r6, lsl #3]
   12608:	beq	12614 <abort@plt+0x18bc>
   1260c:	mov	r0, r7
   12610:	bl	13884 <abort@plt+0x2b2c>
   12614:	mov	r0, fp
   12618:	bl	1318c <abort@plt+0x2434>
   1261c:	ldr	r3, [r5, #44]	; 0x2c
   12620:	mov	r2, r8
   12624:	mov	r1, fp
   12628:	str	r0, [sl, #4]
   1262c:	str	r3, [sp, #16]
   12630:	ldr	r3, [r5, #40]	; 0x28
   12634:	mov	r7, r0
   12638:	str	r3, [sp, #12]
   1263c:	add	r3, r5, #8
   12640:	str	r3, [sp, #8]
   12644:	ldr	r3, [sp, #28]
   12648:	str	r3, [sp, #4]
   1264c:	ldr	r3, [r5]
   12650:	str	r3, [sp]
   12654:	mov	r3, r9
   12658:	bl	117a0 <abort@plt+0xa48>
   1265c:	ldr	r3, [sp, #24]
   12660:	ldr	r2, [sp, #32]
   12664:	mov	r0, r7
   12668:	str	r2, [r3]
   1266c:	add	sp, sp, #52	; 0x34
   12670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12674:	ldrdeq	r5, [r2], -r4
   12678:	andeq	r5, r2, r4, asr #2
   1267c:	push	{r4, r5, r6, lr}
   12680:	mov	r5, r0
   12684:	bl	10ca4 <__errno_location@plt>
   12688:	cmp	r5, #0
   1268c:	mov	r1, #48	; 0x30
   12690:	ldr	r6, [r0]
   12694:	mov	r4, r0
   12698:	ldr	r0, [pc, #12]	; 126ac <abort@plt+0x1954>
   1269c:	movne	r0, r5
   126a0:	bl	13568 <abort@plt+0x2810>
   126a4:	str	r6, [r4]
   126a8:	pop	{r4, r5, r6, pc}
   126ac:	andeq	r5, r2, r4, asr #4
   126b0:	ldr	r3, [pc, #12]	; 126c4 <abort@plt+0x196c>
   126b4:	cmp	r0, #0
   126b8:	moveq	r0, r3
   126bc:	ldr	r0, [r0]
   126c0:	bx	lr
   126c4:	andeq	r5, r2, r4, asr #4
   126c8:	ldr	r3, [pc, #12]	; 126dc <abort@plt+0x1984>
   126cc:	cmp	r0, #0
   126d0:	moveq	r0, r3
   126d4:	str	r1, [r0]
   126d8:	bx	lr
   126dc:	andeq	r5, r2, r4, asr #4
   126e0:	ldr	r3, [pc, #52]	; 1271c <abort@plt+0x19c4>
   126e4:	cmp	r0, #0
   126e8:	moveq	r0, r3
   126ec:	add	r3, r0, #8
   126f0:	push	{lr}		; (str lr, [sp, #-4]!)
   126f4:	lsr	lr, r1, #5
   126f8:	and	r1, r1, #31
   126fc:	ldr	ip, [r3, lr, lsl #2]
   12700:	lsr	r0, ip, r1
   12704:	eor	r2, r2, r0
   12708:	and	r2, r2, #1
   1270c:	and	r0, r0, #1
   12710:	eor	r1, ip, r2, lsl r1
   12714:	str	r1, [r3, lr, lsl #2]
   12718:	pop	{pc}		; (ldr pc, [sp], #4)
   1271c:	andeq	r5, r2, r4, asr #4
   12720:	ldr	r3, [pc, #16]	; 12738 <abort@plt+0x19e0>
   12724:	cmp	r0, #0
   12728:	movne	r3, r0
   1272c:	ldr	r0, [r3, #4]
   12730:	str	r1, [r3, #4]
   12734:	bx	lr
   12738:	andeq	r5, r2, r4, asr #4
   1273c:	ldr	r3, [pc, #44]	; 12770 <abort@plt+0x1a18>
   12740:	cmp	r0, #0
   12744:	moveq	r0, r3
   12748:	mov	r3, #10
   1274c:	cmp	r2, #0
   12750:	cmpne	r1, #0
   12754:	str	r3, [r0]
   12758:	bne	12764 <abort@plt+0x1a0c>
   1275c:	push	{r4, lr}
   12760:	bl	10d58 <abort@plt>
   12764:	str	r1, [r0, #40]	; 0x28
   12768:	str	r2, [r0, #44]	; 0x2c
   1276c:	bx	lr
   12770:	andeq	r5, r2, r4, asr #4
   12774:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12778:	sub	sp, sp, #24
   1277c:	mov	sl, r3
   12780:	ldr	r4, [sp, #56]	; 0x38
   12784:	ldr	r3, [pc, #100]	; 127f0 <abort@plt+0x1a98>
   12788:	cmp	r4, #0
   1278c:	moveq	r4, r3
   12790:	mov	r7, r0
   12794:	mov	r8, r1
   12798:	mov	r9, r2
   1279c:	bl	10ca4 <__errno_location@plt>
   127a0:	ldr	r3, [r4, #44]	; 0x2c
   127a4:	mov	r2, r9
   127a8:	mov	r1, r8
   127ac:	ldr	r6, [r0]
   127b0:	str	r3, [sp, #16]
   127b4:	ldr	r3, [r4, #40]	; 0x28
   127b8:	mov	r5, r0
   127bc:	str	r3, [sp, #12]
   127c0:	add	r3, r4, #8
   127c4:	str	r3, [sp, #8]
   127c8:	ldr	r3, [r4, #4]
   127cc:	mov	r0, r7
   127d0:	str	r3, [sp, #4]
   127d4:	ldr	r3, [r4]
   127d8:	str	r3, [sp]
   127dc:	mov	r3, sl
   127e0:	bl	117a0 <abort@plt+0xa48>
   127e4:	str	r6, [r5]
   127e8:	add	sp, sp, #24
   127ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127f0:	andeq	r5, r2, r4, asr #4
   127f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f8:	cmp	r3, #0
   127fc:	sub	sp, sp, #44	; 0x2c
   12800:	ldr	r4, [pc, #188]	; 128c4 <abort@plt+0x1b6c>
   12804:	mov	r6, r2
   12808:	movne	r4, r3
   1280c:	mov	sl, r1
   12810:	mov	r9, r0
   12814:	bl	10ca4 <__errno_location@plt>
   12818:	ldr	r5, [r4, #4]
   1281c:	add	fp, r4, #8
   12820:	cmp	r6, #0
   12824:	orreq	r5, r5, #1
   12828:	mov	r1, #0
   1282c:	mov	r2, r9
   12830:	ldr	r3, [r0]
   12834:	mov	r8, r0
   12838:	str	r3, [sp, #28]
   1283c:	ldr	r3, [r4, #44]	; 0x2c
   12840:	mov	r0, r1
   12844:	str	r3, [sp, #16]
   12848:	ldr	r3, [r4, #40]	; 0x28
   1284c:	stmib	sp, {r5, fp}
   12850:	str	r3, [sp, #12]
   12854:	ldr	r3, [r4]
   12858:	str	r3, [sp]
   1285c:	mov	r3, sl
   12860:	bl	117a0 <abort@plt+0xa48>
   12864:	add	r1, r0, #1
   12868:	mov	r7, r0
   1286c:	mov	r0, r1
   12870:	str	r1, [sp, #36]	; 0x24
   12874:	bl	1318c <abort@plt+0x2434>
   12878:	ldr	r3, [r4, #44]	; 0x2c
   1287c:	mov	r2, r9
   12880:	str	r3, [sp, #16]
   12884:	ldr	r3, [r4, #40]	; 0x28
   12888:	stmib	sp, {r5, fp}
   1288c:	str	r3, [sp, #12]
   12890:	ldr	r3, [r4]
   12894:	ldr	r1, [sp, #36]	; 0x24
   12898:	str	r3, [sp]
   1289c:	mov	r3, sl
   128a0:	str	r0, [sp, #32]
   128a4:	bl	117a0 <abort@plt+0xa48>
   128a8:	ldr	r3, [sp, #28]
   128ac:	cmp	r6, #0
   128b0:	str	r3, [r8]
   128b4:	ldr	r0, [sp, #32]
   128b8:	strne	r7, [r6]
   128bc:	add	sp, sp, #44	; 0x2c
   128c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128c4:	andeq	r5, r2, r4, asr #4
   128c8:	mov	r3, r2
   128cc:	mov	r2, #0
   128d0:	b	127f4 <abort@plt+0x1a9c>
   128d4:	push	{r4, r5, r6, r7, r8, lr}
   128d8:	mov	r6, #1
   128dc:	ldr	r4, [pc, #104]	; 1294c <abort@plt+0x1bf4>
   128e0:	ldr	r5, [r4]
   128e4:	add	r7, r5, #12
   128e8:	ldr	r3, [r4, #4]
   128ec:	add	r7, r7, #8
   128f0:	cmp	r6, r3
   128f4:	blt	1293c <abort@plt+0x1be4>
   128f8:	ldr	r0, [r5, #4]
   128fc:	ldr	r6, [pc, #76]	; 12950 <abort@plt+0x1bf8>
   12900:	cmp	r0, r6
   12904:	beq	12918 <abort@plt+0x1bc0>
   12908:	bl	13884 <abort@plt+0x2b2c>
   1290c:	mov	r3, #256	; 0x100
   12910:	str	r3, [r4, #8]
   12914:	str	r6, [r4, #12]
   12918:	ldr	r6, [pc, #52]	; 12954 <abort@plt+0x1bfc>
   1291c:	cmp	r5, r6
   12920:	beq	12930 <abort@plt+0x1bd8>
   12924:	mov	r0, r5
   12928:	bl	13884 <abort@plt+0x2b2c>
   1292c:	str	r6, [r4]
   12930:	mov	r3, #1
   12934:	str	r3, [r4, #4]
   12938:	pop	{r4, r5, r6, r7, r8, pc}
   1293c:	ldr	r0, [r7, #-8]
   12940:	bl	13884 <abort@plt+0x2b2c>
   12944:	add	r6, r6, #1
   12948:	b	128e8 <abort@plt+0x1b90>
   1294c:	ldrdeq	r5, [r2], -r4
   12950:	andeq	r5, r2, r4, asr #2
   12954:	ldrdeq	r5, [r2], -ip
   12958:	ldr	r3, [pc, #4]	; 12964 <abort@plt+0x1c0c>
   1295c:	mvn	r2, #0
   12960:	b	124d4 <abort@plt+0x177c>
   12964:	andeq	r5, r2, r4, asr #4
   12968:	ldr	r3, [pc]	; 12970 <abort@plt+0x1c18>
   1296c:	b	124d4 <abort@plt+0x177c>
   12970:	andeq	r5, r2, r4, asr #4
   12974:	mov	r1, r0
   12978:	mov	r0, #0
   1297c:	b	12958 <abort@plt+0x1c00>
   12980:	mov	r2, r1
   12984:	mov	r1, r0
   12988:	mov	r0, #0
   1298c:	b	12968 <abort@plt+0x1c10>
   12990:	push	{r4, r5, lr}
   12994:	sub	sp, sp, #52	; 0x34
   12998:	mov	r5, r2
   1299c:	mov	r4, r0
   129a0:	mov	r0, sp
   129a4:	bl	1165c <abort@plt+0x904>
   129a8:	mov	r3, sp
   129ac:	mvn	r2, #0
   129b0:	mov	r1, r5
   129b4:	mov	r0, r4
   129b8:	bl	124d4 <abort@plt+0x177c>
   129bc:	add	sp, sp, #52	; 0x34
   129c0:	pop	{r4, r5, pc}
   129c4:	push	{r4, r5, r6, lr}
   129c8:	sub	sp, sp, #48	; 0x30
   129cc:	mov	r5, r2
   129d0:	mov	r6, r3
   129d4:	mov	r4, r0
   129d8:	mov	r0, sp
   129dc:	bl	1165c <abort@plt+0x904>
   129e0:	mov	r3, sp
   129e4:	mov	r2, r6
   129e8:	mov	r1, r5
   129ec:	mov	r0, r4
   129f0:	bl	124d4 <abort@plt+0x177c>
   129f4:	add	sp, sp, #48	; 0x30
   129f8:	pop	{r4, r5, r6, pc}
   129fc:	mov	r2, r1
   12a00:	mov	r1, r0
   12a04:	mov	r0, #0
   12a08:	b	12990 <abort@plt+0x1c38>
   12a0c:	mov	r3, r2
   12a10:	mov	r2, r1
   12a14:	mov	r1, r0
   12a18:	mov	r0, #0
   12a1c:	b	129c4 <abort@plt+0x1c6c>
   12a20:	push	{r4, r5, r6, lr}
   12a24:	mov	r4, r0
   12a28:	ldr	lr, [pc, #80]	; 12a80 <abort@plt+0x1d28>
   12a2c:	mov	r5, r1
   12a30:	mov	r6, r2
   12a34:	ldm	lr!, {r0, r1, r2, r3}
   12a38:	sub	sp, sp, #48	; 0x30
   12a3c:	mov	ip, sp
   12a40:	stmia	ip!, {r0, r1, r2, r3}
   12a44:	ldm	lr!, {r0, r1, r2, r3}
   12a48:	stmia	ip!, {r0, r1, r2, r3}
   12a4c:	ldm	lr, {r0, r1, r2, r3}
   12a50:	stm	ip, {r0, r1, r2, r3}
   12a54:	mov	r1, r6
   12a58:	mov	r2, #1
   12a5c:	mov	r0, sp
   12a60:	bl	126e0 <abort@plt+0x1988>
   12a64:	mov	r3, sp
   12a68:	mov	r2, r5
   12a6c:	mov	r1, r4
   12a70:	mov	r0, #0
   12a74:	bl	124d4 <abort@plt+0x177c>
   12a78:	add	sp, sp, #48	; 0x30
   12a7c:	pop	{r4, r5, r6, pc}
   12a80:	andeq	r5, r2, r4, asr #4
   12a84:	mov	r2, r1
   12a88:	mvn	r1, #0
   12a8c:	b	12a20 <abort@plt+0x1cc8>
   12a90:	mov	r1, #58	; 0x3a
   12a94:	b	12a84 <abort@plt+0x1d2c>
   12a98:	mov	r2, #58	; 0x3a
   12a9c:	b	12a20 <abort@plt+0x1cc8>
   12aa0:	push	{r4, r5, lr}
   12aa4:	sub	sp, sp, #100	; 0x64
   12aa8:	mov	r4, r0
   12aac:	mov	r0, sp
   12ab0:	mov	r5, r2
   12ab4:	bl	1165c <abort@plt+0x904>
   12ab8:	mov	ip, sp
   12abc:	add	lr, sp, #48	; 0x30
   12ac0:	ldm	ip!, {r0, r1, r2, r3}
   12ac4:	stmia	lr!, {r0, r1, r2, r3}
   12ac8:	ldm	ip!, {r0, r1, r2, r3}
   12acc:	stmia	lr!, {r0, r1, r2, r3}
   12ad0:	ldm	ip, {r0, r1, r2, r3}
   12ad4:	stm	lr, {r0, r1, r2, r3}
   12ad8:	mov	r2, #1
   12adc:	mov	r1, #58	; 0x3a
   12ae0:	add	r0, sp, #48	; 0x30
   12ae4:	bl	126e0 <abort@plt+0x1988>
   12ae8:	add	r3, sp, #48	; 0x30
   12aec:	mvn	r2, #0
   12af0:	mov	r1, r5
   12af4:	mov	r0, r4
   12af8:	bl	124d4 <abort@plt+0x177c>
   12afc:	add	sp, sp, #100	; 0x64
   12b00:	pop	{r4, r5, pc}
   12b04:	push	{r4, r5, r6, r7, lr}
   12b08:	mov	r4, r0
   12b0c:	ldr	lr, [pc, #84]	; 12b68 <abort@plt+0x1e10>
   12b10:	mov	r6, r1
   12b14:	mov	r7, r2
   12b18:	mov	r5, r3
   12b1c:	ldm	lr!, {r0, r1, r2, r3}
   12b20:	sub	sp, sp, #52	; 0x34
   12b24:	mov	ip, sp
   12b28:	stmia	ip!, {r0, r1, r2, r3}
   12b2c:	ldm	lr!, {r0, r1, r2, r3}
   12b30:	stmia	ip!, {r0, r1, r2, r3}
   12b34:	ldm	lr, {r0, r1, r2, r3}
   12b38:	stm	ip, {r0, r1, r2, r3}
   12b3c:	mov	r2, r7
   12b40:	mov	r1, r6
   12b44:	mov	r0, sp
   12b48:	bl	1273c <abort@plt+0x19e4>
   12b4c:	mov	r3, sp
   12b50:	ldr	r2, [sp, #72]	; 0x48
   12b54:	mov	r1, r5
   12b58:	mov	r0, r4
   12b5c:	bl	124d4 <abort@plt+0x177c>
   12b60:	add	sp, sp, #52	; 0x34
   12b64:	pop	{r4, r5, r6, r7, pc}
   12b68:	andeq	r5, r2, r4, asr #4
   12b6c:	mvn	ip, #0
   12b70:	push	{r0, r1, r2, lr}
   12b74:	str	ip, [sp]
   12b78:	bl	12b04 <abort@plt+0x1dac>
   12b7c:	add	sp, sp, #12
   12b80:	pop	{pc}		; (ldr pc, [sp], #4)
   12b84:	mov	r3, r2
   12b88:	mov	r2, r1
   12b8c:	mov	r1, r0
   12b90:	mov	r0, #0
   12b94:	b	12b6c <abort@plt+0x1e14>
   12b98:	push	{r0, r1, r2, lr}
   12b9c:	str	r3, [sp]
   12ba0:	mov	r3, r2
   12ba4:	mov	r2, r1
   12ba8:	mov	r1, r0
   12bac:	mov	r0, #0
   12bb0:	bl	12b04 <abort@plt+0x1dac>
   12bb4:	add	sp, sp, #12
   12bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bbc:	ldr	r3, [pc]	; 12bc4 <abort@plt+0x1e6c>
   12bc0:	b	124d4 <abort@plt+0x177c>
   12bc4:	andeq	r5, r2, r4, ror #1
   12bc8:	mov	r2, r1
   12bcc:	mov	r1, r0
   12bd0:	mov	r0, #0
   12bd4:	b	12bbc <abort@plt+0x1e64>
   12bd8:	mvn	r2, #0
   12bdc:	b	12bbc <abort@plt+0x1e64>
   12be0:	mov	r1, r0
   12be4:	mov	r0, #0
   12be8:	b	12bd8 <abort@plt+0x1e80>
   12bec:	push	{r4, r5, r6, r7, r8, lr}
   12bf0:	mov	r7, r0
   12bf4:	ldr	r5, [pc, #88]	; 12c54 <abort@plt+0x1efc>
   12bf8:	mov	r8, r1
   12bfc:	mov	r4, r2
   12c00:	mov	r2, r4
   12c04:	mov	r1, r8
   12c08:	mov	r0, r7
   12c0c:	bl	10cd4 <write@plt>
   12c10:	subs	r6, r0, #0
   12c14:	bge	12c44 <abort@plt+0x1eec>
   12c18:	bl	10ca4 <__errno_location@plt>
   12c1c:	ldr	r3, [r0]
   12c20:	cmp	r3, #4
   12c24:	beq	12c00 <abort@plt+0x1ea8>
   12c28:	cmp	r4, r5
   12c2c:	sub	r3, r3, #22
   12c30:	clz	r3, r3
   12c34:	lsr	r3, r3, #5
   12c38:	movls	r3, #0
   12c3c:	cmp	r3, #0
   12c40:	bne	12c4c <abort@plt+0x1ef4>
   12c44:	mov	r0, r6
   12c48:	pop	{r4, r5, r6, r7, r8, pc}
   12c4c:	mov	r4, r5
   12c50:	b	12c00 <abort@plt+0x1ea8>
   12c54:	svcvc	0x00f00000	; IMB
   12c58:	push	{r4, r5, r6, lr}
   12c5c:	sub	sp, sp, #32
   12c60:	cmp	r1, #0
   12c64:	mov	r5, r0
   12c68:	ldr	r4, [sp, #48]	; 0x30
   12c6c:	ldr	r6, [sp, #52]	; 0x34
   12c70:	beq	12d24 <abort@plt+0x1fcc>
   12c74:	stm	sp, {r2, r3}
   12c78:	mov	r3, r1
   12c7c:	ldr	r2, [pc, #860]	; 12fe0 <abort@plt+0x2288>
   12c80:	mov	r1, #1
   12c84:	bl	10cec <__fprintf_chk@plt>
   12c88:	mov	r2, #5
   12c8c:	ldr	r1, [pc, #848]	; 12fe4 <abort@plt+0x228c>
   12c90:	mov	r0, #0
   12c94:	bl	10bcc <dcgettext@plt>
   12c98:	ldr	r3, [pc, #840]	; 12fe8 <abort@plt+0x2290>
   12c9c:	ldr	r2, [pc, #840]	; 12fec <abort@plt+0x2294>
   12ca0:	str	r3, [sp]
   12ca4:	mov	r1, #1
   12ca8:	mov	r3, r0
   12cac:	mov	r0, r5
   12cb0:	bl	10cec <__fprintf_chk@plt>
   12cb4:	mov	r1, r5
   12cb8:	mov	r0, #10
   12cbc:	bl	10bc0 <fputc_unlocked@plt>
   12cc0:	mov	r2, #5
   12cc4:	ldr	r1, [pc, #804]	; 12ff0 <abort@plt+0x2298>
   12cc8:	mov	r0, #0
   12ccc:	bl	10bcc <dcgettext@plt>
   12cd0:	mov	r1, #1
   12cd4:	ldr	r3, [pc, #792]	; 12ff4 <abort@plt+0x229c>
   12cd8:	mov	r2, r0
   12cdc:	mov	r0, r5
   12ce0:	bl	10cec <__fprintf_chk@plt>
   12ce4:	mov	r1, r5
   12ce8:	mov	r0, #10
   12cec:	bl	10bc0 <fputc_unlocked@plt>
   12cf0:	cmp	r6, #9
   12cf4:	ldrls	pc, [pc, r6, lsl #2]
   12cf8:	b	12fd4 <abort@plt+0x227c>
   12cfc:	andeq	r2, r1, r4, lsl lr
   12d00:	andeq	r2, r1, ip, lsr sp
   12d04:	andeq	r2, r1, r8, ror #26
   12d08:	muleq	r1, ip, sp
   12d0c:	ldrdeq	r2, [r1], -r8
   12d10:	andeq	r2, r1, ip, lsl lr
   12d14:	andeq	r2, r1, r4, ror #28
   12d18:			; <UNDEFINED> instruction: 0x00012eb4
   12d1c:	andeq	r2, r1, ip, lsl #30
   12d20:	andeq	r2, r1, ip, ror #30
   12d24:	str	r3, [sp]
   12d28:	mov	r1, #1
   12d2c:	mov	r3, r2
   12d30:	ldr	r2, [pc, #704]	; 12ff8 <abort@plt+0x22a0>
   12d34:	bl	10cec <__fprintf_chk@plt>
   12d38:	b	12c88 <abort@plt+0x1f30>
   12d3c:	mov	r2, #5
   12d40:	ldr	r1, [pc, #692]	; 12ffc <abort@plt+0x22a4>
   12d44:	mov	r0, #0
   12d48:	bl	10bcc <dcgettext@plt>
   12d4c:	ldr	r3, [r4]
   12d50:	mov	r1, #1
   12d54:	mov	r2, r0
   12d58:	mov	r0, r5
   12d5c:	add	sp, sp, #32
   12d60:	pop	{r4, r5, r6, lr}
   12d64:	b	10cec <__fprintf_chk@plt>
   12d68:	mov	r2, #5
   12d6c:	ldr	r1, [pc, #652]	; 13000 <abort@plt+0x22a8>
   12d70:	mov	r0, #0
   12d74:	bl	10bcc <dcgettext@plt>
   12d78:	ldr	r3, [r4, #4]
   12d7c:	mov	r1, #1
   12d80:	str	r3, [sp, #48]	; 0x30
   12d84:	ldr	r3, [r4]
   12d88:	mov	r2, r0
   12d8c:	mov	r0, r5
   12d90:	add	sp, sp, #32
   12d94:	pop	{r4, r5, r6, lr}
   12d98:	b	10cec <__fprintf_chk@plt>
   12d9c:	mov	r2, #5
   12da0:	ldr	r1, [pc, #604]	; 13004 <abort@plt+0x22ac>
   12da4:	mov	r0, #0
   12da8:	bl	10bcc <dcgettext@plt>
   12dac:	ldr	r3, [r4, #8]
   12db0:	mov	r1, #1
   12db4:	str	r3, [sp, #52]	; 0x34
   12db8:	ldr	r3, [r4, #4]
   12dbc:	str	r3, [sp, #48]	; 0x30
   12dc0:	ldr	r3, [r4]
   12dc4:	mov	r2, r0
   12dc8:	mov	r0, r5
   12dcc:	add	sp, sp, #32
   12dd0:	pop	{r4, r5, r6, lr}
   12dd4:	b	10cec <__fprintf_chk@plt>
   12dd8:	mov	r2, #5
   12ddc:	ldr	r1, [pc, #548]	; 13008 <abort@plt+0x22b0>
   12de0:	mov	r0, #0
   12de4:	bl	10bcc <dcgettext@plt>
   12de8:	ldr	r3, [r4, #12]
   12dec:	mov	r1, #1
   12df0:	str	r3, [sp, #8]
   12df4:	ldr	r3, [r4, #8]
   12df8:	str	r3, [sp, #4]
   12dfc:	ldr	r3, [r4, #4]
   12e00:	str	r3, [sp]
   12e04:	ldr	r3, [r4]
   12e08:	mov	r2, r0
   12e0c:	mov	r0, r5
   12e10:	bl	10cec <__fprintf_chk@plt>
   12e14:	add	sp, sp, #32
   12e18:	pop	{r4, r5, r6, pc}
   12e1c:	mov	r2, #5
   12e20:	ldr	r1, [pc, #484]	; 1300c <abort@plt+0x22b4>
   12e24:	mov	r0, #0
   12e28:	bl	10bcc <dcgettext@plt>
   12e2c:	ldr	r3, [r4, #16]
   12e30:	mov	r1, #1
   12e34:	str	r3, [sp, #12]
   12e38:	ldr	r3, [r4, #12]
   12e3c:	str	r3, [sp, #8]
   12e40:	ldr	r3, [r4, #8]
   12e44:	str	r3, [sp, #4]
   12e48:	ldr	r3, [r4, #4]
   12e4c:	str	r3, [sp]
   12e50:	ldr	r3, [r4]
   12e54:	mov	r2, r0
   12e58:	mov	r0, r5
   12e5c:	bl	10cec <__fprintf_chk@plt>
   12e60:	b	12e14 <abort@plt+0x20bc>
   12e64:	mov	r2, #5
   12e68:	ldr	r1, [pc, #416]	; 13010 <abort@plt+0x22b8>
   12e6c:	mov	r0, #0
   12e70:	bl	10bcc <dcgettext@plt>
   12e74:	ldr	r3, [r4, #20]
   12e78:	mov	r1, #1
   12e7c:	str	r3, [sp, #16]
   12e80:	ldr	r3, [r4, #16]
   12e84:	str	r3, [sp, #12]
   12e88:	ldr	r3, [r4, #12]
   12e8c:	str	r3, [sp, #8]
   12e90:	ldr	r3, [r4, #8]
   12e94:	str	r3, [sp, #4]
   12e98:	ldr	r3, [r4, #4]
   12e9c:	str	r3, [sp]
   12ea0:	ldr	r3, [r4]
   12ea4:	mov	r2, r0
   12ea8:	mov	r0, r5
   12eac:	bl	10cec <__fprintf_chk@plt>
   12eb0:	b	12e14 <abort@plt+0x20bc>
   12eb4:	mov	r2, #5
   12eb8:	ldr	r1, [pc, #340]	; 13014 <abort@plt+0x22bc>
   12ebc:	mov	r0, #0
   12ec0:	bl	10bcc <dcgettext@plt>
   12ec4:	ldr	r3, [r4, #24]
   12ec8:	mov	r1, #1
   12ecc:	str	r3, [sp, #20]
   12ed0:	ldr	r3, [r4, #20]
   12ed4:	str	r3, [sp, #16]
   12ed8:	ldr	r3, [r4, #16]
   12edc:	str	r3, [sp, #12]
   12ee0:	ldr	r3, [r4, #12]
   12ee4:	str	r3, [sp, #8]
   12ee8:	ldr	r3, [r4, #8]
   12eec:	str	r3, [sp, #4]
   12ef0:	ldr	r3, [r4, #4]
   12ef4:	str	r3, [sp]
   12ef8:	ldr	r3, [r4]
   12efc:	mov	r2, r0
   12f00:	mov	r0, r5
   12f04:	bl	10cec <__fprintf_chk@plt>
   12f08:	b	12e14 <abort@plt+0x20bc>
   12f0c:	mov	r2, #5
   12f10:	ldr	r1, [pc, #256]	; 13018 <abort@plt+0x22c0>
   12f14:	mov	r0, #0
   12f18:	bl	10bcc <dcgettext@plt>
   12f1c:	ldr	r3, [r4, #28]
   12f20:	mov	r1, #1
   12f24:	str	r3, [sp, #24]
   12f28:	ldr	r3, [r4, #24]
   12f2c:	str	r3, [sp, #20]
   12f30:	ldr	r3, [r4, #20]
   12f34:	str	r3, [sp, #16]
   12f38:	ldr	r3, [r4, #16]
   12f3c:	str	r3, [sp, #12]
   12f40:	ldr	r3, [r4, #12]
   12f44:	str	r3, [sp, #8]
   12f48:	ldr	r3, [r4, #8]
   12f4c:	str	r3, [sp, #4]
   12f50:	ldr	r3, [r4, #4]
   12f54:	str	r3, [sp]
   12f58:	ldr	r3, [r4]
   12f5c:	mov	r2, r0
   12f60:	mov	r0, r5
   12f64:	bl	10cec <__fprintf_chk@plt>
   12f68:	b	12e14 <abort@plt+0x20bc>
   12f6c:	ldr	r1, [pc, #168]	; 1301c <abort@plt+0x22c4>
   12f70:	mov	r2, #5
   12f74:	mov	r0, #0
   12f78:	bl	10bcc <dcgettext@plt>
   12f7c:	ldr	r3, [r4, #32]
   12f80:	mov	r1, #1
   12f84:	str	r3, [sp, #28]
   12f88:	ldr	r3, [r4, #28]
   12f8c:	str	r3, [sp, #24]
   12f90:	ldr	r3, [r4, #24]
   12f94:	str	r3, [sp, #20]
   12f98:	ldr	r3, [r4, #20]
   12f9c:	str	r3, [sp, #16]
   12fa0:	ldr	r3, [r4, #16]
   12fa4:	str	r3, [sp, #12]
   12fa8:	ldr	r3, [r4, #12]
   12fac:	str	r3, [sp, #8]
   12fb0:	ldr	r3, [r4, #8]
   12fb4:	str	r3, [sp, #4]
   12fb8:	ldr	r3, [r4, #4]
   12fbc:	str	r3, [sp]
   12fc0:	ldr	r3, [r4]
   12fc4:	mov	r2, r0
   12fc8:	mov	r0, r5
   12fcc:	bl	10cec <__fprintf_chk@plt>
   12fd0:	b	12e14 <abort@plt+0x20bc>
   12fd4:	mov	r2, #5
   12fd8:	ldr	r1, [pc, #64]	; 13020 <abort@plt+0x22c8>
   12fdc:	b	12f74 <abort@plt+0x221c>
   12fe0:	andeq	r4, r1, fp, lsl #8
   12fe4:	andeq	r4, r1, lr, lsl r4
   12fe8:	andeq	r0, r0, r6, ror #15
   12fec:	andeq	r4, r1, ip, ror #13
   12ff0:	andeq	r4, r1, r2, lsr #8
   12ff4:	andeq	r4, r1, sp, asr #9
   12ff8:	andeq	r4, r1, r7, lsl r4
   12ffc:	andeq	r4, r1, pc, ror #9
   13000:	strdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   13004:	andeq	r4, r1, r6, lsl r5
   13008:	andeq	r4, r1, r2, lsr r5
   1300c:	andeq	r4, r1, r2, asr r5
   13010:	andeq	r4, r1, r6, ror r5
   13014:	muleq	r1, lr, r5
   13018:	andeq	r4, r1, sl, asr #11
   1301c:	strdeq	r4, [r1], -sl
   13020:	andeq	r4, r1, lr, lsr #12
   13024:	push	{r0, r1, r4, lr}
   13028:	mov	ip, #0
   1302c:	ldr	lr, [sp, #16]
   13030:	ldr	r4, [lr, ip, lsl #2]
   13034:	cmp	r4, #0
   13038:	bne	13050 <abort@plt+0x22f8>
   1303c:	str	ip, [sp, #4]
   13040:	str	lr, [sp]
   13044:	bl	12c58 <abort@plt+0x1f00>
   13048:	add	sp, sp, #8
   1304c:	pop	{r4, pc}
   13050:	add	ip, ip, #1
   13054:	b	13030 <abort@plt+0x22d8>
   13058:	push	{r4, r5, lr}
   1305c:	sub	sp, sp, #52	; 0x34
   13060:	mov	ip, #0
   13064:	ldr	r5, [sp, #64]	; 0x40
   13068:	add	lr, sp, #8
   1306c:	ldr	r4, [r5, ip, lsl #2]
   13070:	cmp	r4, #0
   13074:	str	r4, [lr, ip, lsl #2]
   13078:	beq	13088 <abort@plt+0x2330>
   1307c:	add	ip, ip, #1
   13080:	cmp	ip, #10
   13084:	bne	1306c <abort@plt+0x2314>
   13088:	str	ip, [sp, #4]
   1308c:	str	lr, [sp]
   13090:	bl	12c58 <abort@plt+0x1f00>
   13094:	add	sp, sp, #52	; 0x34
   13098:	pop	{r4, r5, pc}
   1309c:	push	{r3}		; (str r3, [sp, #-4]!)
   130a0:	push	{r0, r1, r2, r3, lr}
   130a4:	add	r3, sp, #24
   130a8:	str	r3, [sp, #12]
   130ac:	str	r3, [sp]
   130b0:	ldr	r3, [sp, #20]
   130b4:	bl	13058 <abort@plt+0x2300>
   130b8:	add	sp, sp, #16
   130bc:	pop	{lr}		; (ldr lr, [sp], #4)
   130c0:	add	sp, sp, #4
   130c4:	bx	lr
   130c8:	ldr	r3, [pc, #116]	; 13144 <abort@plt+0x23ec>
   130cc:	push	{r4, lr}
   130d0:	mov	r0, #10
   130d4:	ldr	r1, [r3]
   130d8:	bl	10bc0 <fputc_unlocked@plt>
   130dc:	mov	r2, #5
   130e0:	ldr	r1, [pc, #96]	; 13148 <abort@plt+0x23f0>
   130e4:	mov	r0, #0
   130e8:	bl	10bcc <dcgettext@plt>
   130ec:	ldr	r2, [pc, #88]	; 1314c <abort@plt+0x23f4>
   130f0:	mov	r1, r0
   130f4:	mov	r0, #1
   130f8:	bl	10cc8 <__printf_chk@plt>
   130fc:	mov	r2, #5
   13100:	ldr	r1, [pc, #72]	; 13150 <abort@plt+0x23f8>
   13104:	mov	r0, #0
   13108:	bl	10bcc <dcgettext@plt>
   1310c:	ldr	r3, [pc, #64]	; 13154 <abort@plt+0x23fc>
   13110:	ldr	r2, [pc, #64]	; 13158 <abort@plt+0x2400>
   13114:	mov	r1, r0
   13118:	mov	r0, #1
   1311c:	bl	10cc8 <__printf_chk@plt>
   13120:	mov	r2, #5
   13124:	ldr	r1, [pc, #48]	; 1315c <abort@plt+0x2404>
   13128:	mov	r0, #0
   1312c:	bl	10bcc <dcgettext@plt>
   13130:	ldr	r2, [pc, #40]	; 13160 <abort@plt+0x2408>
   13134:	pop	{r4, lr}
   13138:	mov	r1, r0
   1313c:	mov	r0, #1
   13140:	b	10cc8 <__printf_chk@plt>
   13144:	andeq	r5, r2, ip, lsr #2
   13148:	andeq	r4, r1, sl, ror #12
   1314c:	andeq	r4, r1, lr, ror r6
   13150:	muleq	r1, r4, r6
   13154:	andeq	r4, r1, r6, asr #2
   13158:	andeq	r4, r1, lr, ror #2
   1315c:	andeq	r4, r1, r8, lsr #13
   13160:	andeq	r4, r1, pc, asr #13
   13164:	push	{r4, lr}
   13168:	bl	13680 <abort@plt+0x2928>
   1316c:	cmp	r0, #0
   13170:	popne	{r4, pc}
   13174:	bl	135f8 <abort@plt+0x28a0>
   13178:	push	{r4, lr}
   1317c:	bl	13680 <abort@plt+0x2928>
   13180:	cmp	r0, #0
   13184:	popne	{r4, pc}
   13188:	bl	135f8 <abort@plt+0x28a0>
   1318c:	b	13164 <abort@plt+0x240c>
   13190:	push	{r4, r5, r6, lr}
   13194:	mov	r5, r0
   13198:	mov	r4, r1
   1319c:	bl	136c0 <abort@plt+0x2968>
   131a0:	cmp	r0, #0
   131a4:	popne	{r4, r5, r6, pc}
   131a8:	adds	r4, r4, #0
   131ac:	movne	r4, #1
   131b0:	cmp	r5, #0
   131b4:	orreq	r4, r4, #1
   131b8:	cmp	r4, #0
   131bc:	popeq	{r4, r5, r6, pc}
   131c0:	bl	135f8 <abort@plt+0x28a0>
   131c4:	push	{r4, lr}
   131c8:	cmp	r1, #0
   131cc:	orreq	r1, r1, #1
   131d0:	bl	136c0 <abort@plt+0x2968>
   131d4:	cmp	r0, #0
   131d8:	popne	{r4, pc}
   131dc:	bl	135f8 <abort@plt+0x28a0>
   131e0:	push	{r4, r5, r6, lr}
   131e4:	mov	r6, r0
   131e8:	mov	r5, r1
   131ec:	mov	r4, r2
   131f0:	bl	139f0 <abort@plt+0x2c98>
   131f4:	cmp	r0, #0
   131f8:	popne	{r4, r5, r6, pc}
   131fc:	cmp	r6, #0
   13200:	beq	13210 <abort@plt+0x24b8>
   13204:	cmp	r5, #0
   13208:	cmpne	r4, #0
   1320c:	popeq	{r4, r5, r6, pc}
   13210:	bl	135f8 <abort@plt+0x28a0>
   13214:	b	131e0 <abort@plt+0x2488>
   13218:	cmp	r2, #0
   1321c:	cmpne	r1, #0
   13220:	moveq	r2, #1
   13224:	moveq	r1, r2
   13228:	push	{r4, lr}
   1322c:	bl	139f0 <abort@plt+0x2c98>
   13230:	cmp	r0, #0
   13234:	popne	{r4, pc}
   13238:	bl	135f8 <abort@plt+0x28a0>
   1323c:	mov	r2, r1
   13240:	mov	r1, r0
   13244:	mov	r0, #0
   13248:	b	131e0 <abort@plt+0x2488>
   1324c:	mov	r2, r1
   13250:	mov	r1, r0
   13254:	mov	r0, #0
   13258:	b	13218 <abort@plt+0x24c0>
   1325c:	push	{r4, r5, r6, r7, r8, lr}
   13260:	subs	r7, r0, #0
   13264:	mov	r5, r1
   13268:	mov	r6, r2
   1326c:	ldr	r4, [r1]
   13270:	bne	132ac <abort@plt+0x2554>
   13274:	cmp	r4, #0
   13278:	bne	13294 <abort@plt+0x253c>
   1327c:	mov	r1, r2
   13280:	mov	r0, #64	; 0x40
   13284:	bl	13b1c <abort@plt+0x2dc4>
   13288:	cmp	r0, #0
   1328c:	movne	r4, r0
   13290:	addeq	r4, r0, #1
   13294:	mov	r2, r6
   13298:	mov	r1, r4
   1329c:	mov	r0, r7
   132a0:	bl	131e0 <abort@plt+0x2488>
   132a4:	str	r4, [r5]
   132a8:	pop	{r4, r5, r6, r7, r8, pc}
   132ac:	lsr	r2, r4, #1
   132b0:	add	r3, r2, #1
   132b4:	mvn	r3, r3
   132b8:	cmp	r4, r3
   132bc:	addls	r4, r4, #1
   132c0:	addls	r4, r4, r2
   132c4:	bls	13294 <abort@plt+0x253c>
   132c8:	bl	135f8 <abort@plt+0x28a0>
   132cc:	mov	r2, #1
   132d0:	b	1325c <abort@plt+0x2504>
   132d4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132d8:	mov	sl, r0
   132dc:	ldr	r8, [r1]
   132e0:	mov	fp, r1
   132e4:	mov	r5, r2
   132e8:	asrs	r4, r8, #1
   132ec:	mov	r9, r3
   132f0:	ldr	r7, [sp, #48]	; 0x30
   132f4:	bpl	13390 <abort@plt+0x2638>
   132f8:	rsb	r2, r4, #-2147483648	; 0x80000000
   132fc:	cmp	r8, r2
   13300:	movge	r2, #0
   13304:	movlt	r2, #1
   13308:	mvn	r3, r9
   1330c:	cmp	r2, #0
   13310:	lsr	r3, r3, #31
   13314:	addeq	r4, r4, r8
   13318:	mvnne	r4, #-2147483648	; 0x80000000
   1331c:	mov	r0, r3
   13320:	cmp	r9, r4
   13324:	movge	r0, #0
   13328:	andlt	r0, r0, #1
   1332c:	cmp	r0, #0
   13330:	str	r3, [sp, #4]
   13334:	bne	13504 <abort@plt+0x27ac>
   13338:	cmp	r7, #0
   1333c:	bge	13450 <abort@plt+0x26f8>
   13340:	cmp	r4, #0
   13344:	bge	133a8 <abort@plt+0x2650>
   13348:	mov	r1, r7
   1334c:	mvn	r0, #-2147483648	; 0x80000000
   13350:	bl	13d28 <abort@plt+0x2fd0>
   13354:	cmp	r0, r4
   13358:	movle	r0, #0
   1335c:	movgt	r0, #1
   13360:	cmp	r0, #0
   13364:	mvnne	r6, #-2147483648	; 0x80000000
   13368:	beq	133b8 <abort@plt+0x2660>
   1336c:	mov	r1, r7
   13370:	mov	r0, r6
   13374:	bl	13d28 <abort@plt+0x2fd0>
   13378:	mov	r1, r7
   1337c:	mov	r4, r0
   13380:	mov	r0, r6
   13384:	bl	13f48 <abort@plt+0x31f0>
   13388:	sub	r1, r6, r1
   1338c:	b	133c8 <abort@plt+0x2670>
   13390:	mvn	r2, #-2147483648	; 0x80000000
   13394:	sub	r2, r2, r4
   13398:	cmp	r8, r2
   1339c:	movle	r2, #0
   133a0:	movgt	r2, #1
   133a4:	b	13308 <abort@plt+0x25b0>
   133a8:	cmn	r7, #1
   133ac:	movne	r1, r7
   133b0:	movne	r0, #-2147483648	; 0x80000000
   133b4:	bne	1351c <abort@plt+0x27c4>
   133b8:	mul	r1, r7, r4
   133bc:	cmp	r1, #63	; 0x3f
   133c0:	movle	r6, #64	; 0x40
   133c4:	ble	1336c <abort@plt+0x2614>
   133c8:	cmp	sl, #0
   133cc:	sub	r2, r4, r8
   133d0:	streq	sl, [fp]
   133d4:	cmp	r2, r5
   133d8:	bge	134ac <abort@plt+0x2754>
   133dc:	cmp	r5, #0
   133e0:	bge	13478 <abort@plt+0x2720>
   133e4:	rsb	r2, r5, #-2147483648	; 0x80000000
   133e8:	cmp	r8, r2
   133ec:	movge	r2, #0
   133f0:	movlt	r2, #1
   133f4:	cmp	r2, #0
   133f8:	bne	1344c <abort@plt+0x26f4>
   133fc:	ldr	r0, [sp, #4]
   13400:	add	r5, r8, r5
   13404:	cmp	r9, r5
   13408:	movge	r0, #0
   1340c:	andlt	r0, r0, #1
   13410:	cmp	r0, #0
   13414:	mov	r4, r5
   13418:	bne	1344c <abort@plt+0x26f4>
   1341c:	cmp	r7, #0
   13420:	bge	134c0 <abort@plt+0x2768>
   13424:	cmp	r5, #0
   13428:	bge	13498 <abort@plt+0x2740>
   1342c:	mov	r1, r7
   13430:	mvn	r0, #-2147483648	; 0x80000000
   13434:	bl	13d28 <abort@plt+0x2fd0>
   13438:	cmp	r5, r0
   1343c:	movge	r0, #0
   13440:	movlt	r0, #1
   13444:	cmp	r0, #0
   13448:	beq	134a8 <abort@plt+0x2750>
   1344c:	bl	135f8 <abort@plt+0x28a0>
   13450:	beq	133b8 <abort@plt+0x2660>
   13454:	cmp	r4, #0
   13458:	bge	13514 <abort@plt+0x27bc>
   1345c:	cmn	r4, #1
   13460:	beq	133b8 <abort@plt+0x2660>
   13464:	mov	r1, r4
   13468:	mov	r0, #-2147483648	; 0x80000000
   1346c:	bl	13d28 <abort@plt+0x2fd0>
   13470:	cmp	r7, r0
   13474:	b	13358 <abort@plt+0x2600>
   13478:	cmp	r8, #0
   1347c:	blt	133fc <abort@plt+0x26a4>
   13480:	mvn	r2, #-2147483648	; 0x80000000
   13484:	sub	r2, r2, r5
   13488:	cmp	r8, r2
   1348c:	movle	r2, #0
   13490:	movgt	r2, #1
   13494:	b	133f4 <abort@plt+0x269c>
   13498:	cmn	r7, #1
   1349c:	movne	r1, r7
   134a0:	movne	r0, #-2147483648	; 0x80000000
   134a4:	bne	134f8 <abort@plt+0x27a0>
   134a8:	mul	r1, r5, r7
   134ac:	mov	r0, sl
   134b0:	bl	13190 <abort@plt+0x2438>
   134b4:	str	r4, [fp]
   134b8:	add	sp, sp, #12
   134bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134c0:	beq	134a8 <abort@plt+0x2750>
   134c4:	cmp	r5, #0
   134c8:	movge	r1, r7
   134cc:	mvnge	r0, #-2147483648	; 0x80000000
   134d0:	bge	134f8 <abort@plt+0x27a0>
   134d4:	cmn	r5, #1
   134d8:	beq	134a8 <abort@plt+0x2750>
   134dc:	mov	r1, r5
   134e0:	mov	r0, #-2147483648	; 0x80000000
   134e4:	bl	13d28 <abort@plt+0x2fd0>
   134e8:	cmp	r7, r0
   134ec:	movle	r0, #0
   134f0:	movgt	r0, #1
   134f4:	b	13444 <abort@plt+0x26ec>
   134f8:	bl	13d28 <abort@plt+0x2fd0>
   134fc:	cmp	r5, r0
   13500:	b	134ec <abort@plt+0x2794>
   13504:	cmp	r7, #0
   13508:	mov	r4, r9
   1350c:	blt	133a8 <abort@plt+0x2650>
   13510:	beq	133b8 <abort@plt+0x2660>
   13514:	mov	r1, r7
   13518:	mvn	r0, #-2147483648	; 0x80000000
   1351c:	bl	13d28 <abort@plt+0x2fd0>
   13520:	cmp	r0, r4
   13524:	movge	r0, #0
   13528:	movlt	r0, #1
   1352c:	b	13360 <abort@plt+0x2608>
   13530:	push	{r4, lr}
   13534:	bl	13638 <abort@plt+0x28e0>
   13538:	cmp	r0, #0
   1353c:	popne	{r4, pc}
   13540:	bl	135f8 <abort@plt+0x28a0>
   13544:	mov	r1, #1
   13548:	b	13530 <abort@plt+0x27d8>
   1354c:	push	{r4, lr}
   13550:	bl	13638 <abort@plt+0x28e0>
   13554:	cmp	r0, #0
   13558:	popne	{r4, pc}
   1355c:	bl	135f8 <abort@plt+0x28a0>
   13560:	mov	r1, #1
   13564:	b	1354c <abort@plt+0x27f4>
   13568:	push	{r4, r5, r6, lr}
   1356c:	mov	r4, r1
   13570:	mov	r5, r0
   13574:	mov	r0, r1
   13578:	bl	13164 <abort@plt+0x240c>
   1357c:	mov	r2, r4
   13580:	mov	r1, r5
   13584:	pop	{r4, r5, r6, lr}
   13588:	b	10b9c <memcpy@plt>
   1358c:	push	{r4, r5, r6, lr}
   13590:	mov	r4, r1
   13594:	mov	r5, r0
   13598:	mov	r0, r1
   1359c:	bl	13178 <abort@plt+0x2420>
   135a0:	mov	r2, r4
   135a4:	mov	r1, r5
   135a8:	pop	{r4, r5, r6, lr}
   135ac:	b	10b9c <memcpy@plt>
   135b0:	push	{r4, r5, r6, lr}
   135b4:	mov	r5, r0
   135b8:	add	r0, r1, #1
   135bc:	mov	r4, r1
   135c0:	bl	13178 <abort@plt+0x2420>
   135c4:	mov	r2, #0
   135c8:	mov	r1, r5
   135cc:	strb	r2, [r0, r4]
   135d0:	mov	r2, r4
   135d4:	pop	{r4, r5, r6, lr}
   135d8:	b	10b9c <memcpy@plt>
   135dc:	push	{r4, lr}
   135e0:	mov	r4, r0
   135e4:	bl	10c98 <strlen@plt>
   135e8:	add	r1, r0, #1
   135ec:	mov	r0, r4
   135f0:	pop	{r4, lr}
   135f4:	b	13568 <abort@plt+0x2810>
   135f8:	ldr	r3, [pc, #44]	; 1362c <abort@plt+0x28d4>
   135fc:	push	{r4, lr}
   13600:	mov	r2, #5
   13604:	ldr	r1, [pc, #36]	; 13630 <abort@plt+0x28d8>
   13608:	mov	r0, #0
   1360c:	ldr	r4, [r3]
   13610:	bl	10bcc <dcgettext@plt>
   13614:	ldr	r2, [pc, #24]	; 13634 <abort@plt+0x28dc>
   13618:	mov	r1, #0
   1361c:	mov	r3, r0
   13620:	mov	r0, r4
   13624:	bl	10c38 <error@plt>
   13628:	bl	10d58 <abort@plt>
   1362c:	ldrdeq	r5, [r2], -r0
   13630:	andeq	r4, r1, fp, lsl r7
   13634:	andeq	r4, r1, sp, asr #5
   13638:	cmp	r1, #0
   1363c:	cmpne	r0, #0
   13640:	moveq	r1, #1
   13644:	moveq	r0, r1
   13648:	umull	r2, r3, r0, r1
   1364c:	adds	r3, r3, #0
   13650:	movne	r3, #1
   13654:	cmp	r2, #0
   13658:	blt	13668 <abort@plt+0x2910>
   1365c:	cmp	r3, #0
   13660:	bne	13668 <abort@plt+0x2910>
   13664:	b	10b48 <calloc@plt>
   13668:	push	{r4, lr}
   1366c:	bl	10ca4 <__errno_location@plt>
   13670:	mov	r3, #12
   13674:	str	r3, [r0]
   13678:	mov	r0, #0
   1367c:	pop	{r4, pc}
   13680:	cmp	r0, #0
   13684:	mov	r3, #0
   13688:	moveq	r0, #1
   1368c:	adds	r3, r3, #0
   13690:	movne	r3, #1
   13694:	cmp	r0, #0
   13698:	blt	136a8 <abort@plt+0x2950>
   1369c:	cmp	r3, #0
   136a0:	bne	136a8 <abort@plt+0x2950>
   136a4:	b	10c44 <malloc@plt>
   136a8:	push	{r4, lr}
   136ac:	bl	10ca4 <__errno_location@plt>
   136b0:	mov	r3, #12
   136b4:	str	r3, [r0]
   136b8:	mov	r0, #0
   136bc:	pop	{r4, pc}
   136c0:	cmp	r0, #0
   136c4:	push	{r4, lr}
   136c8:	mov	r4, r1
   136cc:	bne	136dc <abort@plt+0x2984>
   136d0:	mov	r0, r1
   136d4:	pop	{r4, lr}
   136d8:	b	13680 <abort@plt+0x2928>
   136dc:	cmp	r1, #0
   136e0:	bne	136f0 <abort@plt+0x2998>
   136e4:	bl	13884 <abort@plt+0x2b2c>
   136e8:	mov	r0, #0
   136ec:	pop	{r4, pc}
   136f0:	cmp	r1, #0
   136f4:	blt	13704 <abort@plt+0x29ac>
   136f8:	mov	r3, #0
   136fc:	cmp	r3, r3
   13700:	beq	13714 <abort@plt+0x29bc>
   13704:	bl	10ca4 <__errno_location@plt>
   13708:	mov	r3, #12
   1370c:	str	r3, [r0]
   13710:	b	136e8 <abort@plt+0x2990>
   13714:	pop	{r4, lr}
   13718:	b	10bd8 <realloc@plt>
   1371c:	push	{r4, r5, r6, lr}
   13720:	mov	r4, r0
   13724:	bl	10c14 <__fpending@plt>
   13728:	mov	r5, r0
   1372c:	mov	r0, r4
   13730:	bl	10c20 <ferror_unlocked@plt>
   13734:	mov	r6, r0
   13738:	mov	r0, r4
   1373c:	bl	1378c <abort@plt+0x2a34>
   13740:	cmp	r6, #0
   13744:	mov	r4, r0
   13748:	bne	13774 <abort@plt+0x2a1c>
   1374c:	cmp	r0, #0
   13750:	beq	1376c <abort@plt+0x2a14>
   13754:	cmp	r5, #0
   13758:	bne	13784 <abort@plt+0x2a2c>
   1375c:	bl	10ca4 <__errno_location@plt>
   13760:	ldr	r4, [r0]
   13764:	subs	r4, r4, #9
   13768:	mvnne	r4, #0
   1376c:	mov	r0, r4
   13770:	pop	{r4, r5, r6, pc}
   13774:	cmp	r0, #0
   13778:	bne	13784 <abort@plt+0x2a2c>
   1377c:	bl	10ca4 <__errno_location@plt>
   13780:	str	r4, [r0]
   13784:	mvn	r4, #0
   13788:	b	1376c <abort@plt+0x2a14>
   1378c:	push	{r0, r1, r2, r4, r5, lr}
   13790:	mov	r4, r0
   13794:	bl	10ce0 <fileno@plt>
   13798:	cmp	r0, #0
   1379c:	mov	r0, r4
   137a0:	bge	137b0 <abort@plt+0x2a58>
   137a4:	add	sp, sp, #12
   137a8:	pop	{r4, r5, lr}
   137ac:	b	10cf8 <fclose@plt>
   137b0:	bl	10c5c <__freading@plt>
   137b4:	cmp	r0, #0
   137b8:	bne	137f4 <abort@plt+0x2a9c>
   137bc:	mov	r0, r4
   137c0:	bl	13834 <abort@plt+0x2adc>
   137c4:	cmp	r0, #0
   137c8:	bne	13828 <abort@plt+0x2ad0>
   137cc:	mov	r5, #0
   137d0:	mov	r0, r4
   137d4:	bl	10cf8 <fclose@plt>
   137d8:	cmp	r5, #0
   137dc:	beq	137ec <abort@plt+0x2a94>
   137e0:	bl	10ca4 <__errno_location@plt>
   137e4:	str	r5, [r0]
   137e8:	mvn	r0, #0
   137ec:	add	sp, sp, #12
   137f0:	pop	{r4, r5, pc}
   137f4:	mov	r0, r4
   137f8:	bl	10ce0 <fileno@plt>
   137fc:	mov	r3, #1
   13800:	str	r3, [sp]
   13804:	mov	r2, #0
   13808:	mov	r3, #0
   1380c:	bl	10bfc <lseek64@plt>
   13810:	mvn	r3, #0
   13814:	mvn	r2, #0
   13818:	cmp	r1, r3
   1381c:	cmpeq	r0, r2
   13820:	bne	137bc <abort@plt+0x2a64>
   13824:	b	137cc <abort@plt+0x2a74>
   13828:	bl	10ca4 <__errno_location@plt>
   1382c:	ldr	r5, [r0]
   13830:	b	137d0 <abort@plt+0x2a78>
   13834:	push	{r0, r1, r4, lr}
   13838:	subs	r4, r0, #0
   1383c:	bne	13850 <abort@plt+0x2af8>
   13840:	mov	r0, r4
   13844:	add	sp, sp, #8
   13848:	pop	{r4, lr}
   1384c:	b	10b78 <fflush@plt>
   13850:	bl	10c5c <__freading@plt>
   13854:	cmp	r0, #0
   13858:	beq	13840 <abort@plt+0x2ae8>
   1385c:	ldr	r3, [r4]
   13860:	tst	r3, #256	; 0x100
   13864:	beq	13840 <abort@plt+0x2ae8>
   13868:	mov	r3, #1
   1386c:	str	r3, [sp]
   13870:	mov	r2, #0
   13874:	mov	r3, #0
   13878:	mov	r0, r4
   1387c:	bl	138d8 <abort@plt+0x2b80>
   13880:	b	13840 <abort@plt+0x2ae8>
   13884:	push	{r0, r1, r2, r4, r5, lr}
   13888:	mov	r5, r0
   1388c:	bl	10ca4 <__errno_location@plt>
   13890:	ldr	r3, [r0]
   13894:	mov	r4, r0
   13898:	str	r3, [sp]
   1389c:	str	r3, [sp, #4]
   138a0:	mov	r3, #0
   138a4:	str	r3, [r0]
   138a8:	mov	r0, r5
   138ac:	bl	10b84 <free@plt>
   138b0:	ldr	r3, [r4]
   138b4:	add	r2, sp, #8
   138b8:	cmp	r3, #0
   138bc:	moveq	r3, #4
   138c0:	movne	r3, #0
   138c4:	add	r3, r2, r3
   138c8:	ldr	r3, [r3, #-8]
   138cc:	str	r3, [r4]
   138d0:	add	sp, sp, #12
   138d4:	pop	{r4, r5, pc}
   138d8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   138dc:	mov	r4, r0
   138e0:	ldmib	r0, {ip, lr}
   138e4:	ldr	r8, [sp, #32]
   138e8:	cmp	lr, ip
   138ec:	bne	13958 <abort@plt+0x2c00>
   138f0:	ldr	lr, [r0, #20]
   138f4:	ldr	ip, [r0, #16]
   138f8:	cmp	lr, ip
   138fc:	bne	13958 <abort@plt+0x2c00>
   13900:	ldr	r5, [r0, #36]	; 0x24
   13904:	cmp	r5, #0
   13908:	bne	13958 <abort@plt+0x2c00>
   1390c:	mov	r6, r2
   13910:	mov	r7, r3
   13914:	bl	10ce0 <fileno@plt>
   13918:	mov	r2, r6
   1391c:	mov	r3, r7
   13920:	str	r8, [sp]
   13924:	bl	10bfc <lseek64@plt>
   13928:	mvn	r3, #0
   1392c:	mvn	r2, #0
   13930:	cmp	r1, r3
   13934:	cmpeq	r0, r2
   13938:	mvneq	r0, #0
   1393c:	ldrne	r3, [r4]
   13940:	strdne	r0, [r4, #80]	; 0x50
   13944:	movne	r0, r5
   13948:	bicne	r3, r3, #16
   1394c:	strne	r3, [r4]
   13950:	add	sp, sp, #8
   13954:	pop	{r4, r5, r6, r7, r8, pc}
   13958:	str	r8, [sp, #32]
   1395c:	mov	r0, r4
   13960:	add	sp, sp, #8
   13964:	pop	{r4, r5, r6, r7, r8, lr}
   13968:	b	10d04 <fseeko64@plt>
   1396c:	push	{r4, lr}
   13970:	mov	r0, #14
   13974:	bl	10d28 <nl_langinfo@plt>
   13978:	ldr	r3, [pc, #24]	; 13998 <abort@plt+0x2c40>
   1397c:	cmp	r0, #0
   13980:	moveq	r0, r3
   13984:	ldr	r3, [pc, #16]	; 1399c <abort@plt+0x2c44>
   13988:	ldrb	r2, [r0]
   1398c:	cmp	r2, #0
   13990:	moveq	r0, r3
   13994:	pop	{r4, pc}
   13998:	andeq	r4, r1, fp, asr #1
   1399c:	andeq	r4, r1, ip, lsr #14
   139a0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   139a4:	subs	r5, r0, #0
   139a8:	addeq	r5, sp, #4
   139ac:	mov	r0, r5
   139b0:	mov	r7, r2
   139b4:	mov	r6, r1
   139b8:	bl	10c2c <mbrtowc@plt>
   139bc:	cmp	r7, #0
   139c0:	cmnne	r0, #3
   139c4:	mov	r4, r0
   139c8:	bls	139e4 <abort@plt+0x2c8c>
   139cc:	mov	r0, #0
   139d0:	bl	13a3c <abort@plt+0x2ce4>
   139d4:	cmp	r0, #0
   139d8:	moveq	r4, #1
   139dc:	ldrbeq	r3, [r6]
   139e0:	streq	r3, [r5]
   139e4:	mov	r0, r4
   139e8:	add	sp, sp, #12
   139ec:	pop	{r4, r5, r6, r7, pc}
   139f0:	push	{r4, r5, r6, lr}
   139f4:	subs	r4, r2, #0
   139f8:	mov	r6, r0
   139fc:	mov	r5, r1
   13a00:	beq	13a18 <abort@plt+0x2cc0>
   13a04:	mov	r1, r4
   13a08:	mvn	r0, #0
   13a0c:	bl	13b1c <abort@plt+0x2dc4>
   13a10:	cmp	r0, r5
   13a14:	bcc	13a28 <abort@plt+0x2cd0>
   13a18:	mul	r1, r5, r4
   13a1c:	mov	r0, r6
   13a20:	pop	{r4, r5, r6, lr}
   13a24:	b	136c0 <abort@plt+0x2968>
   13a28:	bl	10ca4 <__errno_location@plt>
   13a2c:	mov	r3, #12
   13a30:	str	r3, [r0]
   13a34:	mov	r0, #0
   13a38:	pop	{r4, r5, r6, pc}
   13a3c:	push	{lr}		; (str lr, [sp, #-4]!)
   13a40:	sub	sp, sp, #268	; 0x10c
   13a44:	ldr	r2, [pc, #64]	; 13a8c <abort@plt+0x2d34>
   13a48:	add	r1, sp, #4
   13a4c:	bl	13a98 <abort@plt+0x2d40>
   13a50:	cmp	r0, #0
   13a54:	movne	r0, #0
   13a58:	bne	13a84 <abort@plt+0x2d2c>
   13a5c:	ldr	r1, [pc, #44]	; 13a90 <abort@plt+0x2d38>
   13a60:	add	r0, sp, #4
   13a64:	bl	10b6c <strcmp@plt>
   13a68:	cmp	r0, #0
   13a6c:	beq	13a84 <abort@plt+0x2d2c>
   13a70:	ldr	r1, [pc, #28]	; 13a94 <abort@plt+0x2d3c>
   13a74:	add	r0, sp, #4
   13a78:	bl	10b6c <strcmp@plt>
   13a7c:	adds	r0, r0, #0
   13a80:	movne	r0, #1
   13a84:	add	sp, sp, #268	; 0x10c
   13a88:	pop	{pc}		; (ldr pc, [sp], #4)
   13a8c:	andeq	r0, r0, r1, lsl #2
   13a90:	andeq	r4, r1, r2, lsr r7
   13a94:	andeq	r4, r1, r4, lsr r7
   13a98:	push	{r4, r5, r6, lr}
   13a9c:	mov	r5, r1
   13aa0:	mov	r1, #0
   13aa4:	mov	r4, r2
   13aa8:	bl	10d10 <setlocale@plt>
   13aac:	subs	r6, r0, #0
   13ab0:	bne	13ac4 <abort@plt+0x2d6c>
   13ab4:	cmp	r4, #0
   13ab8:	strbne	r6, [r5]
   13abc:	mov	r0, #22
   13ac0:	pop	{r4, r5, r6, pc}
   13ac4:	bl	10c98 <strlen@plt>
   13ac8:	cmp	r4, r0
   13acc:	bls	13ae8 <abort@plt+0x2d90>
   13ad0:	add	r2, r0, #1
   13ad4:	mov	r1, r6
   13ad8:	mov	r0, r5
   13adc:	bl	10b9c <memcpy@plt>
   13ae0:	mov	r0, #0
   13ae4:	pop	{r4, r5, r6, pc}
   13ae8:	cmp	r4, #0
   13aec:	beq	13b0c <abort@plt+0x2db4>
   13af0:	sub	r4, r4, #1
   13af4:	mov	r2, r4
   13af8:	mov	r1, r6
   13afc:	mov	r0, r5
   13b00:	bl	10b9c <memcpy@plt>
   13b04:	mov	r3, #0
   13b08:	strb	r3, [r5, r4]
   13b0c:	mov	r0, #34	; 0x22
   13b10:	pop	{r4, r5, r6, pc}
   13b14:	mov	r1, #0
   13b18:	b	10d10 <setlocale@plt>
   13b1c:	subs	r2, r1, #1
   13b20:	bxeq	lr
   13b24:	bcc	13cfc <abort@plt+0x2fa4>
   13b28:	cmp	r0, r1
   13b2c:	bls	13ce0 <abort@plt+0x2f88>
   13b30:	tst	r1, r2
   13b34:	beq	13cec <abort@plt+0x2f94>
   13b38:	clz	r3, r0
   13b3c:	clz	r2, r1
   13b40:	sub	r3, r2, r3
   13b44:	rsbs	r3, r3, #31
   13b48:	addne	r3, r3, r3, lsl #1
   13b4c:	mov	r2, #0
   13b50:	addne	pc, pc, r3, lsl #2
   13b54:	nop			; (mov r0, r0)
   13b58:	cmp	r0, r1, lsl #31
   13b5c:	adc	r2, r2, r2
   13b60:	subcs	r0, r0, r1, lsl #31
   13b64:	cmp	r0, r1, lsl #30
   13b68:	adc	r2, r2, r2
   13b6c:	subcs	r0, r0, r1, lsl #30
   13b70:	cmp	r0, r1, lsl #29
   13b74:	adc	r2, r2, r2
   13b78:	subcs	r0, r0, r1, lsl #29
   13b7c:	cmp	r0, r1, lsl #28
   13b80:	adc	r2, r2, r2
   13b84:	subcs	r0, r0, r1, lsl #28
   13b88:	cmp	r0, r1, lsl #27
   13b8c:	adc	r2, r2, r2
   13b90:	subcs	r0, r0, r1, lsl #27
   13b94:	cmp	r0, r1, lsl #26
   13b98:	adc	r2, r2, r2
   13b9c:	subcs	r0, r0, r1, lsl #26
   13ba0:	cmp	r0, r1, lsl #25
   13ba4:	adc	r2, r2, r2
   13ba8:	subcs	r0, r0, r1, lsl #25
   13bac:	cmp	r0, r1, lsl #24
   13bb0:	adc	r2, r2, r2
   13bb4:	subcs	r0, r0, r1, lsl #24
   13bb8:	cmp	r0, r1, lsl #23
   13bbc:	adc	r2, r2, r2
   13bc0:	subcs	r0, r0, r1, lsl #23
   13bc4:	cmp	r0, r1, lsl #22
   13bc8:	adc	r2, r2, r2
   13bcc:	subcs	r0, r0, r1, lsl #22
   13bd0:	cmp	r0, r1, lsl #21
   13bd4:	adc	r2, r2, r2
   13bd8:	subcs	r0, r0, r1, lsl #21
   13bdc:	cmp	r0, r1, lsl #20
   13be0:	adc	r2, r2, r2
   13be4:	subcs	r0, r0, r1, lsl #20
   13be8:	cmp	r0, r1, lsl #19
   13bec:	adc	r2, r2, r2
   13bf0:	subcs	r0, r0, r1, lsl #19
   13bf4:	cmp	r0, r1, lsl #18
   13bf8:	adc	r2, r2, r2
   13bfc:	subcs	r0, r0, r1, lsl #18
   13c00:	cmp	r0, r1, lsl #17
   13c04:	adc	r2, r2, r2
   13c08:	subcs	r0, r0, r1, lsl #17
   13c0c:	cmp	r0, r1, lsl #16
   13c10:	adc	r2, r2, r2
   13c14:	subcs	r0, r0, r1, lsl #16
   13c18:	cmp	r0, r1, lsl #15
   13c1c:	adc	r2, r2, r2
   13c20:	subcs	r0, r0, r1, lsl #15
   13c24:	cmp	r0, r1, lsl #14
   13c28:	adc	r2, r2, r2
   13c2c:	subcs	r0, r0, r1, lsl #14
   13c30:	cmp	r0, r1, lsl #13
   13c34:	adc	r2, r2, r2
   13c38:	subcs	r0, r0, r1, lsl #13
   13c3c:	cmp	r0, r1, lsl #12
   13c40:	adc	r2, r2, r2
   13c44:	subcs	r0, r0, r1, lsl #12
   13c48:	cmp	r0, r1, lsl #11
   13c4c:	adc	r2, r2, r2
   13c50:	subcs	r0, r0, r1, lsl #11
   13c54:	cmp	r0, r1, lsl #10
   13c58:	adc	r2, r2, r2
   13c5c:	subcs	r0, r0, r1, lsl #10
   13c60:	cmp	r0, r1, lsl #9
   13c64:	adc	r2, r2, r2
   13c68:	subcs	r0, r0, r1, lsl #9
   13c6c:	cmp	r0, r1, lsl #8
   13c70:	adc	r2, r2, r2
   13c74:	subcs	r0, r0, r1, lsl #8
   13c78:	cmp	r0, r1, lsl #7
   13c7c:	adc	r2, r2, r2
   13c80:	subcs	r0, r0, r1, lsl #7
   13c84:	cmp	r0, r1, lsl #6
   13c88:	adc	r2, r2, r2
   13c8c:	subcs	r0, r0, r1, lsl #6
   13c90:	cmp	r0, r1, lsl #5
   13c94:	adc	r2, r2, r2
   13c98:	subcs	r0, r0, r1, lsl #5
   13c9c:	cmp	r0, r1, lsl #4
   13ca0:	adc	r2, r2, r2
   13ca4:	subcs	r0, r0, r1, lsl #4
   13ca8:	cmp	r0, r1, lsl #3
   13cac:	adc	r2, r2, r2
   13cb0:	subcs	r0, r0, r1, lsl #3
   13cb4:	cmp	r0, r1, lsl #2
   13cb8:	adc	r2, r2, r2
   13cbc:	subcs	r0, r0, r1, lsl #2
   13cc0:	cmp	r0, r1, lsl #1
   13cc4:	adc	r2, r2, r2
   13cc8:	subcs	r0, r0, r1, lsl #1
   13ccc:	cmp	r0, r1
   13cd0:	adc	r2, r2, r2
   13cd4:	subcs	r0, r0, r1
   13cd8:	mov	r0, r2
   13cdc:	bx	lr
   13ce0:	moveq	r0, #1
   13ce4:	movne	r0, #0
   13ce8:	bx	lr
   13cec:	clz	r2, r1
   13cf0:	rsb	r2, r2, #31
   13cf4:	lsr	r0, r0, r2
   13cf8:	bx	lr
   13cfc:	cmp	r0, #0
   13d00:	mvnne	r0, #0
   13d04:	b	13f68 <abort@plt+0x3210>
   13d08:	cmp	r1, #0
   13d0c:	beq	13cfc <abort@plt+0x2fa4>
   13d10:	push	{r0, r1, lr}
   13d14:	bl	13b1c <abort@plt+0x2dc4>
   13d18:	pop	{r1, r2, lr}
   13d1c:	mul	r3, r2, r0
   13d20:	sub	r1, r1, r3
   13d24:	bx	lr
   13d28:	cmp	r1, #0
   13d2c:	beq	13f38 <abort@plt+0x31e0>
   13d30:	eor	ip, r0, r1
   13d34:	rsbmi	r1, r1, #0
   13d38:	subs	r2, r1, #1
   13d3c:	beq	13f04 <abort@plt+0x31ac>
   13d40:	movs	r3, r0
   13d44:	rsbmi	r3, r0, #0
   13d48:	cmp	r3, r1
   13d4c:	bls	13f10 <abort@plt+0x31b8>
   13d50:	tst	r1, r2
   13d54:	beq	13f20 <abort@plt+0x31c8>
   13d58:	clz	r2, r3
   13d5c:	clz	r0, r1
   13d60:	sub	r2, r0, r2
   13d64:	rsbs	r2, r2, #31
   13d68:	addne	r2, r2, r2, lsl #1
   13d6c:	mov	r0, #0
   13d70:	addne	pc, pc, r2, lsl #2
   13d74:	nop			; (mov r0, r0)
   13d78:	cmp	r3, r1, lsl #31
   13d7c:	adc	r0, r0, r0
   13d80:	subcs	r3, r3, r1, lsl #31
   13d84:	cmp	r3, r1, lsl #30
   13d88:	adc	r0, r0, r0
   13d8c:	subcs	r3, r3, r1, lsl #30
   13d90:	cmp	r3, r1, lsl #29
   13d94:	adc	r0, r0, r0
   13d98:	subcs	r3, r3, r1, lsl #29
   13d9c:	cmp	r3, r1, lsl #28
   13da0:	adc	r0, r0, r0
   13da4:	subcs	r3, r3, r1, lsl #28
   13da8:	cmp	r3, r1, lsl #27
   13dac:	adc	r0, r0, r0
   13db0:	subcs	r3, r3, r1, lsl #27
   13db4:	cmp	r3, r1, lsl #26
   13db8:	adc	r0, r0, r0
   13dbc:	subcs	r3, r3, r1, lsl #26
   13dc0:	cmp	r3, r1, lsl #25
   13dc4:	adc	r0, r0, r0
   13dc8:	subcs	r3, r3, r1, lsl #25
   13dcc:	cmp	r3, r1, lsl #24
   13dd0:	adc	r0, r0, r0
   13dd4:	subcs	r3, r3, r1, lsl #24
   13dd8:	cmp	r3, r1, lsl #23
   13ddc:	adc	r0, r0, r0
   13de0:	subcs	r3, r3, r1, lsl #23
   13de4:	cmp	r3, r1, lsl #22
   13de8:	adc	r0, r0, r0
   13dec:	subcs	r3, r3, r1, lsl #22
   13df0:	cmp	r3, r1, lsl #21
   13df4:	adc	r0, r0, r0
   13df8:	subcs	r3, r3, r1, lsl #21
   13dfc:	cmp	r3, r1, lsl #20
   13e00:	adc	r0, r0, r0
   13e04:	subcs	r3, r3, r1, lsl #20
   13e08:	cmp	r3, r1, lsl #19
   13e0c:	adc	r0, r0, r0
   13e10:	subcs	r3, r3, r1, lsl #19
   13e14:	cmp	r3, r1, lsl #18
   13e18:	adc	r0, r0, r0
   13e1c:	subcs	r3, r3, r1, lsl #18
   13e20:	cmp	r3, r1, lsl #17
   13e24:	adc	r0, r0, r0
   13e28:	subcs	r3, r3, r1, lsl #17
   13e2c:	cmp	r3, r1, lsl #16
   13e30:	adc	r0, r0, r0
   13e34:	subcs	r3, r3, r1, lsl #16
   13e38:	cmp	r3, r1, lsl #15
   13e3c:	adc	r0, r0, r0
   13e40:	subcs	r3, r3, r1, lsl #15
   13e44:	cmp	r3, r1, lsl #14
   13e48:	adc	r0, r0, r0
   13e4c:	subcs	r3, r3, r1, lsl #14
   13e50:	cmp	r3, r1, lsl #13
   13e54:	adc	r0, r0, r0
   13e58:	subcs	r3, r3, r1, lsl #13
   13e5c:	cmp	r3, r1, lsl #12
   13e60:	adc	r0, r0, r0
   13e64:	subcs	r3, r3, r1, lsl #12
   13e68:	cmp	r3, r1, lsl #11
   13e6c:	adc	r0, r0, r0
   13e70:	subcs	r3, r3, r1, lsl #11
   13e74:	cmp	r3, r1, lsl #10
   13e78:	adc	r0, r0, r0
   13e7c:	subcs	r3, r3, r1, lsl #10
   13e80:	cmp	r3, r1, lsl #9
   13e84:	adc	r0, r0, r0
   13e88:	subcs	r3, r3, r1, lsl #9
   13e8c:	cmp	r3, r1, lsl #8
   13e90:	adc	r0, r0, r0
   13e94:	subcs	r3, r3, r1, lsl #8
   13e98:	cmp	r3, r1, lsl #7
   13e9c:	adc	r0, r0, r0
   13ea0:	subcs	r3, r3, r1, lsl #7
   13ea4:	cmp	r3, r1, lsl #6
   13ea8:	adc	r0, r0, r0
   13eac:	subcs	r3, r3, r1, lsl #6
   13eb0:	cmp	r3, r1, lsl #5
   13eb4:	adc	r0, r0, r0
   13eb8:	subcs	r3, r3, r1, lsl #5
   13ebc:	cmp	r3, r1, lsl #4
   13ec0:	adc	r0, r0, r0
   13ec4:	subcs	r3, r3, r1, lsl #4
   13ec8:	cmp	r3, r1, lsl #3
   13ecc:	adc	r0, r0, r0
   13ed0:	subcs	r3, r3, r1, lsl #3
   13ed4:	cmp	r3, r1, lsl #2
   13ed8:	adc	r0, r0, r0
   13edc:	subcs	r3, r3, r1, lsl #2
   13ee0:	cmp	r3, r1, lsl #1
   13ee4:	adc	r0, r0, r0
   13ee8:	subcs	r3, r3, r1, lsl #1
   13eec:	cmp	r3, r1
   13ef0:	adc	r0, r0, r0
   13ef4:	subcs	r3, r3, r1
   13ef8:	cmp	ip, #0
   13efc:	rsbmi	r0, r0, #0
   13f00:	bx	lr
   13f04:	teq	ip, r0
   13f08:	rsbmi	r0, r0, #0
   13f0c:	bx	lr
   13f10:	movcc	r0, #0
   13f14:	asreq	r0, ip, #31
   13f18:	orreq	r0, r0, #1
   13f1c:	bx	lr
   13f20:	clz	r2, r1
   13f24:	rsb	r2, r2, #31
   13f28:	cmp	ip, #0
   13f2c:	lsr	r0, r3, r2
   13f30:	rsbmi	r0, r0, #0
   13f34:	bx	lr
   13f38:	cmp	r0, #0
   13f3c:	mvngt	r0, #-2147483648	; 0x80000000
   13f40:	movlt	r0, #-2147483648	; 0x80000000
   13f44:	b	13f68 <abort@plt+0x3210>
   13f48:	cmp	r1, #0
   13f4c:	beq	13f38 <abort@plt+0x31e0>
   13f50:	push	{r0, r1, lr}
   13f54:	bl	13d30 <abort@plt+0x2fd8>
   13f58:	pop	{r1, r2, lr}
   13f5c:	mul	r3, r2, r0
   13f60:	sub	r1, r1, r3
   13f64:	bx	lr
   13f68:	push	{r1, lr}
   13f6c:	mov	r0, #8
   13f70:	bl	10b60 <raise@plt>
   13f74:	pop	{r1, pc}
   13f78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f7c:	mov	r7, r0
   13f80:	ldr	r6, [pc, #72]	; 13fd0 <abort@plt+0x3278>
   13f84:	ldr	r5, [pc, #72]	; 13fd4 <abort@plt+0x327c>
   13f88:	add	r6, pc, r6
   13f8c:	add	r5, pc, r5
   13f90:	sub	r6, r6, r5
   13f94:	mov	r8, r1
   13f98:	mov	r9, r2
   13f9c:	bl	10b28 <calloc@plt-0x20>
   13fa0:	asrs	r6, r6, #2
   13fa4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fa8:	mov	r4, #0
   13fac:	add	r4, r4, #1
   13fb0:	ldr	r3, [r5], #4
   13fb4:	mov	r2, r9
   13fb8:	mov	r1, r8
   13fbc:	mov	r0, r7
   13fc0:	blx	r3
   13fc4:	cmp	r6, r4
   13fc8:	bne	13fac <abort@plt+0x3254>
   13fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fd0:	andeq	r0, r1, r0, lsl #31
   13fd4:	andeq	r0, r1, r8, ror pc
   13fd8:	bx	lr
   13fdc:	ldr	r3, [pc, #12]	; 13ff0 <abort@plt+0x3298>
   13fe0:	mov	r1, #0
   13fe4:	add	r3, pc, r3
   13fe8:	ldr	r2, [r3]
   13fec:	b	10cb0 <__cxa_atexit@plt>
   13ff0:	ldrdeq	r1, [r1], -ip

Disassembly of section .fini:

00013ff4 <.fini>:
   13ff4:	push	{r3, lr}
   13ff8:	pop	{r3, pc}
