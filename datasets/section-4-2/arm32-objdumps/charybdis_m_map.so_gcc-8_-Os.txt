
../repos/charybdis/modules/.libs/m_map.so:     file format elf32-littlearm


Disassembly of section .init:

00000534 <_init>:
 534:	push	{r3, lr}
 538:	bl	5b4 <call_weak_fn>
 53c:	pop	{r3, pc}

Disassembly of section .plt:

00000540 <.plt>:
 540:	push	{lr}		; (str lr, [sp, #-4]!)
 544:	ldr	lr, [pc, #4]	; 550 <.plt+0x10>
 548:	add	lr, pc, lr
 54c:	ldr	pc, [lr, #8]!
 550:	.word	0x00010ab0

00000554 <__cxa_finalize@plt>:
 554:	add	ip, pc, #0, 12
 558:	add	ip, ip, #16, 20	; 0x10000
 55c:	ldr	pc, [ip, #2736]!	; 0xab0

00000560 <__gmon_start__@plt>:
 560:	add	ip, pc, #0, 12
 564:	add	ip, ip, #16, 20	; 0x10000
 568:	ldr	pc, [ip, #2728]!	; 0xaa8

0000056c <sendto_one_numeric@plt>:
 56c:	add	ip, pc, #0, 12
 570:	add	ip, ip, #16, 20	; 0x10000
 574:	ldr	pc, [ip, #2720]!	; 0xaa0

00000578 <strlen@plt>:
 578:	add	ip, pc, #0, 12
 57c:	add	ip, ip, #16, 20	; 0x10000
 580:	ldr	pc, [ip, #2712]!	; 0xa98

00000584 <snprintf@plt>:
 584:	add	ip, pc, #0, 12
 588:	add	ip, ip, #16, 20	; 0x10000
 58c:	ldr	pc, [ip, #2704]!	; 0xa90

00000590 <scache_send_missing@plt>:
 590:	add	ip, pc, #0, 12
 594:	add	ip, ip, #16, 20	; 0x10000
 598:	ldr	pc, [ip, #2696]!	; 0xa88

0000059c <rb_strlcpy@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #16, 20	; 0x10000
 5a4:	ldr	pc, [ip, #2688]!	; 0xa80

000005a8 <rb_strlcat@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #16, 20	; 0x10000
 5b0:	ldr	pc, [ip, #2680]!	; 0xa78

Disassembly of section .text:

000005b4 <call_weak_fn>:
 5b4:	ldr	r3, [pc, #20]	; 5d0 <call_weak_fn+0x1c>
 5b8:	ldr	r2, [pc, #20]	; 5d4 <call_weak_fn+0x20>
 5bc:	add	r3, pc, r3
 5c0:	ldr	r2, [r3, r2]
 5c4:	cmp	r2, #0
 5c8:	bxeq	lr
 5cc:	b	560 <__gmon_start__@plt>
 5d0:	.word	0x00010a3c
 5d4:	.word	0x00000040

000005d8 <deregister_tm_clones>:
 5d8:	ldr	r0, [pc, #44]	; 60c <deregister_tm_clones+0x34>
 5dc:	ldr	r3, [pc, #44]	; 610 <deregister_tm_clones+0x38>
 5e0:	add	r0, pc, r0
 5e4:	add	r3, pc, r3
 5e8:	cmp	r3, r0
 5ec:	ldr	r3, [pc, #32]	; 614 <deregister_tm_clones+0x3c>
 5f0:	add	r3, pc, r3
 5f4:	bxeq	lr
 5f8:	ldr	r2, [pc, #24]	; 618 <deregister_tm_clones+0x40>
 5fc:	ldr	r3, [r3, r2]
 600:	cmp	r3, #0
 604:	bxeq	lr
 608:	bx	r3
 60c:	.word	0x00010ae0
 610:	.word	0x00010adc
 614:	.word	0x00010a08
 618:	.word	0x00000034

0000061c <register_tm_clones>:
 61c:	ldr	r0, [pc, #56]	; 65c <register_tm_clones+0x40>
 620:	ldr	r3, [pc, #56]	; 660 <register_tm_clones+0x44>
 624:	add	r0, pc, r0
 628:	add	r3, pc, r3
 62c:	sub	r1, r3, r0
 630:	ldr	r3, [pc, #44]	; 664 <register_tm_clones+0x48>
 634:	asr	r1, r1, #2
 638:	add	r3, pc, r3
 63c:	add	r1, r1, r1, lsr #31
 640:	asrs	r1, r1, #1
 644:	bxeq	lr
 648:	ldr	r2, [pc, #24]	; 668 <register_tm_clones+0x4c>
 64c:	ldr	r3, [r3, r2]
 650:	cmp	r3, #0
 654:	bxeq	lr
 658:	bx	r3
 65c:	.word	0x00010a9c
 660:	.word	0x00010a98
 664:	.word	0x000109c0
 668:	.word	0x00000044

0000066c <__do_global_dtors_aux>:
 66c:	ldr	r3, [pc, #76]	; 6c0 <__do_global_dtors_aux+0x54>
 670:	ldr	r2, [pc, #76]	; 6c4 <__do_global_dtors_aux+0x58>
 674:	add	r3, pc, r3
 678:	add	r2, pc, r2
 67c:	ldrb	r3, [r3]
 680:	cmp	r3, #0
 684:	bxne	lr
 688:	ldr	r3, [pc, #56]	; 6c8 <__do_global_dtors_aux+0x5c>
 68c:	push	{r4, lr}
 690:	ldr	r3, [r2, r3]
 694:	cmp	r3, #0
 698:	beq	6a8 <__do_global_dtors_aux+0x3c>
 69c:	ldr	r3, [pc, #40]	; 6cc <__do_global_dtors_aux+0x60>
 6a0:	ldr	r0, [pc, r3]
 6a4:	bl	554 <__cxa_finalize@plt>
 6a8:	bl	5d8 <deregister_tm_clones>
 6ac:	ldr	r3, [pc, #28]	; 6d0 <__do_global_dtors_aux+0x64>
 6b0:	mov	r2, #1
 6b4:	add	r3, pc, r3
 6b8:	strb	r2, [r3]
 6bc:	pop	{r4, pc}
 6c0:	.word	0x00010a4c
 6c4:	.word	0x00010980
 6c8:	.word	0x00000030
 6cc:	.word	0x000109a8
 6d0:	.word	0x00010a0c

000006d4 <frame_dummy>:
 6d4:	b	61c <register_tm_clones>

000006d8 <dump_map>:
 6d8:	mov	r3, #0
 6dc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 6e0:	mov	r6, r1
 6e4:	mov	r7, r0
 6e8:	mov	r4, r2
 6ec:	mov	r0, r2
 6f0:	add	r1, r1, #88	; 0x58
 6f4:	strb	r3, [r2]
 6f8:	mov	r2, #512	; 0x200
 6fc:	bl	5a8 <rb_strlcat@plt>
 700:	ldrb	r3, [r6, #396]	; 0x18c
 704:	ldr	r5, [pc, #400]	; 89c <dump_map+0x1c4>
 708:	cmp	r3, #0
 70c:	add	r5, pc, r5
 710:	beq	74c <dump_map+0x74>
 714:	ldr	r1, [pc, #388]	; 8a0 <dump_map+0x1c8>
 718:	mov	r2, #512	; 0x200
 71c:	mov	r0, r4
 720:	add	r1, pc, r1
 724:	bl	5a8 <rb_strlcat@plt>
 728:	mov	r2, #512	; 0x200
 72c:	add	r1, r6, #396	; 0x18c
 730:	mov	r0, r4
 734:	bl	5a8 <rb_strlcat@plt>
 738:	ldr	r1, [pc, #356]	; 8a4 <dump_map+0x1cc>
 73c:	mov	r2, #512	; 0x200
 740:	mov	r0, r4
 744:	add	r1, pc, r1
 748:	bl	5a8 <rb_strlcat@plt>
 74c:	ldr	r8, [pc, #340]	; 8a8 <dump_map+0x1d0>
 750:	add	r8, pc, r8
 754:	mov	r0, r8
 758:	bl	578 <strlen@plt>
 75c:	mov	r3, #32
 760:	cmp	r0, #49	; 0x31
 764:	strb	r3, [r8, r0]
 768:	bls	810 <dump_map+0x138>
 76c:	ldr	r2, [pc, #312]	; 8ac <dump_map+0x1d4>
 770:	ldr	r3, [r6, #28]
 774:	ldr	r8, [pc, #308]	; 8b0 <dump_map+0x1d8>
 778:	ldr	r2, [r5, r2]
 77c:	ldr	r3, [r3, #56]	; 0x38
 780:	add	r8, pc, r8
 784:	ldr	r1, [r2, #4]
 788:	add	r2, r1, r1, lsr #31
 78c:	asr	r0, r2, #1
 790:	mov	r2, #1000	; 0x3e8
 794:	mla	r2, r2, r3, r0
 798:	udiv	r2, r2, r1
 79c:	mov	r1, #10
 7a0:	sdiv	r0, r2, r1
 7a4:	mls	r2, r1, r0, r2
 7a8:	movw	r1, #462	; 0x1ce
 7ac:	stm	sp, {r0, r2}
 7b0:	add	r0, r8, #50	; 0x32
 7b4:	ldr	r2, [pc, #248]	; 8b4 <dump_map+0x1dc>
 7b8:	add	r2, pc, r2
 7bc:	bl	584 <snprintf@plt>
 7c0:	ldr	r2, [pc, #240]	; 8b8 <dump_map+0x1e0>
 7c4:	mov	r3, r8
 7c8:	mov	r1, #15
 7cc:	mov	r0, r7
 7d0:	add	r2, pc, r2
 7d4:	bl	56c <sendto_one_numeric@plt>
 7d8:	ldr	r3, [r6, #28]
 7dc:	ldr	r5, [r3, #36]	; 0x24
 7e0:	cmp	r5, #0
 7e4:	bne	834 <dump_map+0x15c>
 7e8:	ldr	r3, [r6, #28]
 7ec:	mov	r8, #1
 7f0:	mov	r9, #32
 7f4:	mov	sl, #45	; 0x2d
 7f8:	add	fp, r4, #4
 7fc:	ldr	r6, [r3, #36]	; 0x24
 800:	cmp	r6, #0
 804:	bne	864 <dump_map+0x18c>
 808:	add	sp, sp, #12
 80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810:	ldr	r3, [pc, #164]	; 8bc <dump_map+0x1e4>
 814:	add	r0, r0, #1
 818:	mov	r2, #45	; 0x2d
 81c:	add	r3, pc, r3
 820:	cmp	r0, #50	; 0x32
 824:	beq	76c <dump_map+0x94>
 828:	strb	r2, [r0, r3]
 82c:	add	r0, r0, #1
 830:	b	820 <dump_map+0x148>
 834:	ldr	r5, [r3, #44]	; 0x2c
 838:	cmp	r5, #0
 83c:	beq	7e8 <dump_map+0x110>
 840:	add	r8, r8, #3
 844:	cmp	r4, r8
 848:	bls	7e8 <dump_map+0x110>
 84c:	ldrb	r2, [r4, #-3]
 850:	mov	r3, #32
 854:	strb	r3, [r4, #-2]
 858:	cmp	r2, #96	; 0x60
 85c:	strbeq	r3, [r4, #-3]
 860:	b	7e8 <dump_map+0x110>
 864:	cmp	r5, r8
 868:	mov	r2, fp
 86c:	ldr	r1, [r6]
 870:	movle	r3, #96	; 0x60
 874:	movgt	r3, #124	; 0x7c
 878:	strb	r9, [r4]
 87c:	mov	r0, r7
 880:	add	r8, r8, #1
 884:	strb	r3, [r4, #1]
 888:	strb	sl, [r4, #2]
 88c:	strb	r9, [r4, #3]
 890:	bl	6d8 <dump_map>
 894:	ldr	r6, [r6, #8]
 898:	b	800 <dump_map+0x128>
 89c:	.word	0x000108ec
 8a0:	.word	0x0000053e
 8a4:	.word	0x0000051c
 8a8:	.word	0x00010971
 8ac:	.word	0x00000038
 8b0:	.word	0x00010941
 8b4:	.word	0x000004aa
 8b8:	.word	0x000004ad
 8bc:	.word	0x000108a5

000008c0 <mo_map>:
 8c0:	ldr	r3, [pc, #76]	; 914 <mo_map+0x54>
 8c4:	push	{r0, r1, r4, lr}
 8c8:	mov	r4, r1
 8cc:	mov	r0, r4
 8d0:	ldr	r2, [pc, #64]	; 918 <mo_map+0x58>
 8d4:	add	r3, pc, r3
 8d8:	ldr	r3, [r3, r2]
 8dc:	ldr	r2, [pc, #56]	; 91c <mo_map+0x5c>
 8e0:	mov	r1, r3
 8e4:	str	r3, [sp, #4]
 8e8:	add	r2, pc, r2
 8ec:	bl	6d8 <dump_map>
 8f0:	mov	r0, r4
 8f4:	bl	590 <scache_send_missing@plt>
 8f8:	ldr	r2, [pc, #32]	; 920 <mo_map+0x60>
 8fc:	mov	r1, #17
 900:	mov	r0, r4
 904:	add	r2, pc, r2
 908:	add	sp, sp, #8
 90c:	pop	{r4, lr}
 910:	b	56c <sendto_one_numeric@plt>
 914:	.word	0x00010724
 918:	.word	0x00000048
 91c:	.word	0x000107d9
 920:	.word	0x0000037d

00000924 <flattened_map>:
 924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 928:	mov	r2, #512	; 0x200
 92c:	mov	r8, r0
 930:	ldr	r5, [pc, #516]	; b3c <flattened_map+0x218>
 934:	vpush	{d8}
 938:	sub	sp, sp, #540	; 0x21c
 93c:	ldr	r3, [pc, #508]	; b40 <flattened_map+0x21c>
 940:	add	r4, sp, #24
 944:	mov	r0, r4
 948:	add	r5, pc, r5
 94c:	ldr	r6, [r5, r3]
 950:	add	r1, r6, #88	; 0x58
 954:	bl	59c <rb_strlcpy@plt>
 958:	mov	r0, r4
 95c:	bl	578 <strlen@plt>
 960:	add	r3, sp, #536	; 0x218
 964:	mov	r2, #32
 968:	add	r3, r3, r0
 96c:	cmp	r0, #49	; 0x31
 970:	strb	r2, [r3, #-512]	; 0xfffffe00
 974:	bls	a08 <flattened_map+0xe4>
 978:	ldr	r3, [r6, #28]
 97c:	movw	r1, #462	; 0x1ce
 980:	add	r0, r4, #50	; 0x32
 984:	mov	r7, #0
 988:	ldr	r2, [pc, #436]	; b44 <flattened_map+0x220>
 98c:	vldr	s16, [pc, #420]	; b38 <flattened_map+0x214>
 990:	ldr	r3, [r3, #56]	; 0x38
 994:	ldr	r9, [r5, r2]
 998:	ldr	r2, [pc, #424]	; b48 <flattened_map+0x224>
 99c:	vmov	s15, r3
 9a0:	ldr	fp, [pc, #420]	; b4c <flattened_map+0x228>
 9a4:	add	r2, pc, r2
 9a8:	add	fp, pc, fp
 9ac:	vcvt.f32.u32	s13, s15
 9b0:	vldr	s15, [r9, #4]
 9b4:	vmul.f32	s13, s13, s16
 9b8:	vcvt.f32.s32	s15, s15
 9bc:	vdiv.f32	s14, s13, s15
 9c0:	vcvt.f64.f32	d7, s14
 9c4:	vstr	d7, [sp]
 9c8:	bl	584 <snprintf@plt>
 9cc:	ldr	r2, [pc, #380]	; b50 <flattened_map+0x22c>
 9d0:	mov	r3, r4
 9d4:	mov	r1, #15
 9d8:	mov	r0, r8
 9dc:	add	r2, pc, r2
 9e0:	bl	56c <sendto_one_numeric@plt>
 9e4:	ldr	r3, [pc, #360]	; b54 <flattened_map+0x230>
 9e8:	ldr	r3, [r5, r3]
 9ec:	ldr	r6, [r3]
 9f0:	str	r3, [sp, #12]
 9f4:	cmp	r6, #0
 9f8:	bne	a24 <flattened_map+0x100>
 9fc:	add	sp, sp, #540	; 0x21c
 a00:	vpop	{d8}
 a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a08:	add	r0, r0, #1
 a0c:	mov	r3, #45	; 0x2d
 a10:	cmp	r0, #50	; 0x32
 a14:	beq	978 <flattened_map+0x54>
 a18:	strb	r3, [r4, r0]
 a1c:	add	r0, r0, #1
 a20:	b	a10 <flattened_map+0xec>
 a24:	ldr	sl, [r6]
 a28:	add	r7, r7, #1
 a2c:	ldrh	r2, [sl, #80]	; 0x50
 a30:	cmp	r2, #4
 a34:	beq	b0c <flattened_map+0x1e8>
 a38:	ldr	r2, [pc, #280]	; b58 <flattened_map+0x234>
 a3c:	ldr	r2, [r5, r2]
 a40:	ldr	r2, [r2, #12]
 a44:	cmp	r2, #0
 a48:	bne	a68 <flattened_map+0x144>
 a4c:	ldr	r1, [sl, #64]	; 0x40
 a50:	str	r2, [sp, #20]
 a54:	and	r3, r1, #2048	; 0x800
 a58:	str	r3, [sp, #16]
 a5c:	ldrd	r2, [sp, #16]
 a60:	orrs	r3, r2, r3
 a64:	bne	b0c <flattened_map+0x1e8>
 a68:	ldr	r3, [sp, #12]
 a6c:	ldr	r2, [r3, #8]
 a70:	cmp	r2, r7
 a74:	mov	r2, #512	; 0x200
 a78:	bne	b14 <flattened_map+0x1f0>
 a7c:	ldr	r1, [pc, #216]	; b5c <flattened_map+0x238>
 a80:	add	r1, pc, r1
 a84:	mov	r0, r4
 a88:	bl	59c <rb_strlcpy@plt>
 a8c:	mov	r2, #512	; 0x200
 a90:	add	r1, sl, #88	; 0x58
 a94:	mov	r0, r4
 a98:	bl	5a8 <rb_strlcat@plt>
 a9c:	mov	r0, r4
 aa0:	bl	578 <strlen@plt>
 aa4:	add	r3, sp, #536	; 0x218
 aa8:	mov	r1, #32
 aac:	add	r2, r3, r0
 ab0:	cmp	r0, #49	; 0x31
 ab4:	strb	r1, [r2, #-512]	; 0xfffffe00
 ab8:	bls	b28 <flattened_map+0x204>
 abc:	ldr	r3, [sl, #28]
 ac0:	mov	r2, fp
 ac4:	movw	r1, #462	; 0x1ce
 ac8:	add	r0, r4, #50	; 0x32
 acc:	ldr	r3, [r3, #56]	; 0x38
 ad0:	vmov	s15, r3
 ad4:	vcvt.f32.u32	s13, s15
 ad8:	vldr	s15, [r9, #4]
 adc:	vmul.f32	s13, s13, s16
 ae0:	vcvt.f32.s32	s15, s15
 ae4:	vdiv.f32	s14, s13, s15
 ae8:	vcvt.f64.f32	d7, s14
 aec:	vstr	d7, [sp]
 af0:	bl	584 <snprintf@plt>
 af4:	ldr	r2, [pc, #100]	; b60 <flattened_map+0x23c>
 af8:	mov	r3, r4
 afc:	mov	r1, #15
 b00:	mov	r0, r8
 b04:	add	r2, pc, r2
 b08:	bl	56c <sendto_one_numeric@plt>
 b0c:	ldr	r6, [r6, #8]
 b10:	b	9f4 <flattened_map+0xd0>
 b14:	ldr	r1, [pc, #72]	; b64 <flattened_map+0x240>
 b18:	add	r1, pc, r1
 b1c:	b	a84 <flattened_map+0x160>
 b20:	mov	r3, #45	; 0x2d
 b24:	strb	r3, [r4, r0]
 b28:	add	r0, r0, #1
 b2c:	cmp	r0, #50	; 0x32
 b30:	bne	b20 <flattened_map+0x1fc>
 b34:	b	abc <flattened_map+0x198>
 b38:	.word	0x42c80000
 b3c:	.word	0x000106b0
 b40:	.word	0x00000048
 b44:	.word	0x00000038
 b48:	.word	0x000002ea
 b4c:	.word	0x000002e6
 b50:	.word	0x000002a1
 b54:	.word	0x0000002c
 b58:	.word	0x0000003c
 b5c:	.word	0x00000227
 b60:	.word	0x00000179
 b64:	.word	0x00000194

00000b68 <m_map>:
 b68:	ldr	r2, [r2, #64]	; 0x40
 b6c:	push	{r0, r1, r4, lr}
 b70:	mov	r4, r1
 b74:	mov	r1, #0
 b78:	ldr	r3, [pc, #132]	; c04 <m_map+0x9c>
 b7c:	and	r0, r2, #67108864	; 0x4000000
 b80:	orrs	r2, r0, r1
 b84:	add	r3, pc, r3
 b88:	bne	ba0 <m_map+0x38>
 b8c:	ldr	r2, [pc, #116]	; c08 <m_map+0xa0>
 b90:	ldr	r2, [r3, r2]
 b94:	ldr	r2, [r2]
 b98:	cmp	r2, r1
 b9c:	bne	bb4 <m_map+0x4c>
 ba0:	ldr	r2, [pc, #100]	; c0c <m_map+0xa4>
 ba4:	ldr	r2, [r3, r2]
 ba8:	ldr	r2, [r2, #176]	; 0xb0
 bac:	cmp	r2, #0
 bb0:	beq	bd8 <m_map+0x70>
 bb4:	mov	r0, r4
 bb8:	bl	924 <flattened_map>
 bbc:	ldr	r2, [pc, #76]	; c10 <m_map+0xa8>
 bc0:	add	r2, pc, r2
 bc4:	mov	r1, #17
 bc8:	mov	r0, r4
 bcc:	add	sp, sp, #8
 bd0:	pop	{r4, lr}
 bd4:	b	56c <sendto_one_numeric@plt>
 bd8:	ldr	r2, [pc, #52]	; c14 <m_map+0xac>
 bdc:	mov	r0, r4
 be0:	ldr	r3, [r3, r2]
 be4:	ldr	r2, [pc, #44]	; c18 <m_map+0xb0>
 be8:	mov	r1, r3
 bec:	str	r3, [sp, #4]
 bf0:	add	r2, pc, r2
 bf4:	bl	6d8 <dump_map>
 bf8:	ldr	r2, [pc, #28]	; c1c <m_map+0xb4>
 bfc:	add	r2, pc, r2
 c00:	b	bc4 <m_map+0x5c>
 c04:	.word	0x00010474
 c08:	.word	0x0000003c
 c0c:	.word	0x0000004c
 c10:	.word	0x000000c1
 c14:	.word	0x00000048
 c18:	.word	0x000104d1
 c1c:	.word	0x00000085

Disassembly of section .fini:

00000c20 <_fini>:
 c20:	push	{r3, lr}
 c24:	pop	{r3, pc}
