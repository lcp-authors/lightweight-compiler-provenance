
../repos/takev-yyast-2f13a16/yyast/.libs/libyyast.so.1.0.0:     file format elf32-littlearm


Disassembly of section .init:

00000ca4 <_init>:
 ca4:	push	{r3, lr}
 ca8:	bl	ec0 <call_weak_fn>
 cac:	pop	{r3, pc}

Disassembly of section .plt:

00000cb0 <.plt>:
 cb0:	push	{lr}		; (str lr, [sp, #-4]!)
 cb4:	ldr	lr, [pc, #4]	; cc0 <.plt+0x10>
 cb8:	add	lr, pc, lr
 cbc:	ldr	pc, [lr, #8]!
 cc0:	.word	0x00012340

00000cc4 <calloc@plt>:
 cc4:	add	ip, pc, #0, 12
 cc8:	add	ip, ip, #73728	; 0x12000
 ccc:	ldr	pc, [ip, #832]!	; 0x340

00000cd0 <ya_reposition@plt>:
 cd0:	add	ip, pc, #0, 12
 cd4:	add	ip, ip, #73728	; 0x12000
 cd8:	ldr	pc, [ip, #824]!	; 0x338

00000cdc <ya_node_save@plt>:
 cdc:	add	ip, pc, #0, 12
 ce0:	add	ip, ip, #73728	; 0x12000
 ce4:	ldr	pc, [ip, #816]!	; 0x330

00000ce8 <vasprintf@plt>:
 ce8:	add	ip, pc, #0, 12
 cec:	add	ip, ip, #73728	; 0x12000
 cf0:	ldr	pc, [ip, #808]!	; 0x328

00000cf4 <strcmp@plt>:
 cf4:	add	ip, pc, #0, 12
 cf8:	add	ip, ip, #73728	; 0x12000
 cfc:	ldr	pc, [ip, #800]!	; 0x320

00000d00 <__cxa_finalize@plt>:
 d00:	add	ip, pc, #0, 12
 d04:	add	ip, ip, #73728	; 0x12000
 d08:	ldr	pc, [ip, #792]!	; 0x318

00000d0c <strtol@plt>:
 d0c:	add	ip, pc, #0, 12
 d10:	add	ip, ip, #73728	; 0x12000
 d14:	ldr	pc, [ip, #784]!	; 0x310

00000d18 <fopen@plt>:
 d18:	add	ip, pc, #0, 12
 d1c:	add	ip, ip, #73728	; 0x12000
 d20:	ldr	pc, [ip, #776]!	; 0x308

00000d24 <free@plt>:
 d24:	add	ip, pc, #0, 12
 d28:	add	ip, ip, #73728	; 0x12000
 d2c:	ldr	pc, [ip, #768]!	; 0x300

00000d30 <strndup@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #73728	; 0x12000
 d38:	ldr	pc, [ip, #760]!	; 0x2f8

00000d3c <memcpy@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #73728	; 0x12000
 d44:	ldr	pc, [ip, #752]!	; 0x2f0

00000d48 <ya_null@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #73728	; 0x12000
 d50:	ldr	pc, [ip, #744]!	; 0x2e8

00000d54 <yyparse@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #73728	; 0x12000
 d5c:	ldr	pc, [ip, #736]!	; 0x2e0

00000d60 <strtold@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #73728	; 0x12000
 d68:	ldr	pc, [ip, #728]!	; 0x2d8

00000d6c <strdup@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #73728	; 0x12000
 d74:	ldr	pc, [ip, #720]!	; 0x2d0

00000d78 <perror@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #73728	; 0x12000
 d80:	ldr	pc, [ip, #712]!	; 0x2c8

00000d84 <ya_get_filenames@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #704]!	; 0x2c0

00000d90 <fwrite@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #696]!	; 0x2b8

00000d9c <ya_branch@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #688]!	; 0x2b0

00000da8 <__gmon_start__@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #680]!	; 0x2a8

00000db4 <getopt_long@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #672]!	; 0x2a0

00000dc0 <exit@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #664]!	; 0x298

00000dcc <strlen@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #73728	; 0x12000
 dd4:	ldr	pc, [ip, #656]!	; 0x290

00000dd8 <fprintf@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #73728	; 0x12000
 de0:	ldr	pc, [ip, #648]!	; 0x288

00000de4 <__errno_location@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #73728	; 0x12000
 dec:	ldr	pc, [ip, #640]!	; 0x280

00000df0 <ya_integer@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #73728	; 0x12000
 df8:	ldr	pc, [ip, #632]!	; 0x278

00000dfc <memset@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #73728	; 0x12000
 e04:	ldr	pc, [ip, #624]!	; 0x270

00000e08 <ya_list@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #73728	; 0x12000
 e10:	ldr	pc, [ip, #616]!	; 0x268

00000e14 <asprintf@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #73728	; 0x12000
 e1c:	ldr	pc, [ip, #608]!	; 0x260

00000e20 <ya_get_file_nr@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #73728	; 0x12000
 e28:	ldr	pc, [ip, #600]!	; 0x258

00000e2c <fclose@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #73728	; 0x12000
 e34:	ldr	pc, [ip, #592]!	; 0x250

00000e38 <strrchr@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #73728	; 0x12000
 e40:	ldr	pc, [ip, #584]!	; 0x248

00000e44 <ya_error@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #73728	; 0x12000
 e4c:	ldr	pc, [ip, #576]!	; 0x240

00000e50 <ya_literal@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #73728	; 0x12000
 e58:	ldr	pc, [ip, #568]!	; 0x238

00000e5c <fputc@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #73728	; 0x12000
 e64:	ldr	pc, [ip, #560]!	; 0x230

00000e68 <ya_generic_nodev@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #73728	; 0x12000
 e70:	ldr	pc, [ip, #552]!	; 0x228

00000e74 <ya_new_extension@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #73728	; 0x12000
 e7c:	ldr	pc, [ip, #544]!	; 0x220

00000e80 <ya_clear_position@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #73728	; 0x12000
 e88:	ldr	pc, [ip, #536]!	; 0x218

00000e8c <ya_usage@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #73728	; 0x12000
 e94:	ldr	pc, [ip, #528]!	; 0x210

00000e98 <ya_text@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #73728	; 0x12000
 ea0:	ldr	pc, [ip, #520]!	; 0x208

00000ea4 <abort@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #73728	; 0x12000
 eac:	ldr	pc, [ip, #512]!	; 0x200

00000eb0 <ya_parse_options@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #73728	; 0x12000
 eb8:	ldr	pc, [ip, #504]!	; 0x1f8

Disassembly of section .text:

00000ec0 <call_weak_fn>:
     ec0:	ldr	r3, [pc, #20]	; edc <call_weak_fn+0x1c>
     ec4:	ldr	r2, [pc, #20]	; ee0 <call_weak_fn+0x20>
     ec8:	add	r3, pc, r3
     ecc:	ldr	r2, [r3, r2]
     ed0:	cmp	r2, #0
     ed4:	bxeq	lr
     ed8:	b	da8 <__gmon_start__@plt>
     edc:	.word	0x00012130
     ee0:	.word	0x000000d0

00000ee4 <deregister_tm_clones>:
     ee4:	ldr	r3, [pc, #52]	; f20 <deregister_tm_clones+0x3c>
     ee8:	ldr	r0, [pc, #52]	; f24 <deregister_tm_clones+0x40>
     eec:	add	r3, pc, r3
     ef0:	add	r0, pc, r0
     ef4:	add	r3, r3, #3
     ef8:	sub	r3, r3, r0
     efc:	cmp	r3, #6
     f00:	ldr	r3, [pc, #32]	; f28 <deregister_tm_clones+0x44>
     f04:	add	r3, pc, r3
     f08:	bxls	lr
     f0c:	ldr	r2, [pc, #24]	; f2c <deregister_tm_clones+0x48>
     f10:	ldr	r3, [r3, r2]
     f14:	cmp	r3, #0
     f18:	bxeq	lr
     f1c:	bx	r3
     f20:	.word	0x0001227c
     f24:	.word	0x00012278
     f28:	.word	0x000120f4
     f2c:	.word	0x000000b8

00000f30 <register_tm_clones>:
     f30:	ldr	r1, [pc, #56]	; f70 <register_tm_clones+0x40>
     f34:	ldr	r0, [pc, #56]	; f74 <register_tm_clones+0x44>
     f38:	add	r1, pc, r1
     f3c:	add	r0, pc, r0
     f40:	sub	r1, r1, r0
     f44:	ldr	r3, [pc, #44]	; f78 <register_tm_clones+0x48>
     f48:	asr	r1, r1, #2
     f4c:	add	r3, pc, r3
     f50:	add	r1, r1, r1, lsr #31
     f54:	asrs	r1, r1, #1
     f58:	bxeq	lr
     f5c:	ldr	r2, [pc, #24]	; f7c <register_tm_clones+0x4c>
     f60:	ldr	r3, [r3, r2]
     f64:	cmp	r3, #0
     f68:	bxeq	lr
     f6c:	bx	r3
     f70:	.word	0x00012230
     f74:	.word	0x0001222c
     f78:	.word	0x000120ac
     f7c:	.word	0x000000f8

00000f80 <__do_global_dtors_aux>:
     f80:	ldr	r3, [pc, #76]	; fd4 <__do_global_dtors_aux+0x54>
     f84:	ldr	r2, [pc, #76]	; fd8 <__do_global_dtors_aux+0x58>
     f88:	add	r3, pc, r3
     f8c:	add	r2, pc, r2
     f90:	ldrb	r3, [r3]
     f94:	cmp	r3, #0
     f98:	bxne	lr
     f9c:	ldr	r3, [pc, #56]	; fdc <__do_global_dtors_aux+0x5c>
     fa0:	push	{r4, lr}
     fa4:	ldr	r3, [r2, r3]
     fa8:	cmp	r3, #0
     fac:	beq	fbc <__do_global_dtors_aux+0x3c>
     fb0:	ldr	r3, [pc, #40]	; fe0 <__do_global_dtors_aux+0x60>
     fb4:	ldr	r0, [pc, r3]
     fb8:	bl	d00 <__cxa_finalize@plt>
     fbc:	bl	ee4 <deregister_tm_clones>
     fc0:	ldr	r3, [pc, #28]	; fe4 <__do_global_dtors_aux+0x64>
     fc4:	mov	r2, #1
     fc8:	add	r3, pc, r3
     fcc:	strb	r2, [r3]
     fd0:	pop	{r4, pc}
     fd4:	.word	0x000121e0
     fd8:	.word	0x0001206c
     fdc:	.word	0x000000b4
     fe0:	.word	0x0001214c
     fe4:	.word	0x000121a0

00000fe8 <frame_dummy>:
     fe8:	ldr	r0, [pc, #56]	; 1028 <frame_dummy+0x40>
     fec:	ldr	r3, [pc, #56]	; 102c <frame_dummy+0x44>
     ff0:	add	r0, pc, r0
     ff4:	ldr	r2, [r0]
     ff8:	add	r3, pc, r3
     ffc:	cmp	r2, #0
    1000:	bne	1008 <frame_dummy+0x20>
    1004:	b	f30 <register_tm_clones>
    1008:	ldr	r2, [pc, #32]	; 1030 <frame_dummy+0x48>
    100c:	ldr	r3, [r3, r2]
    1010:	cmp	r3, #0
    1014:	beq	1004 <frame_dummy+0x1c>
    1018:	push	{r4, lr}
    101c:	blx	r3
    1020:	pop	{r4, lr}
    1024:	b	f30 <register_tm_clones>
    1028:	.word	0x00011f1c
    102c:	.word	0x00012000
    1030:	.word	0x000000ec

00001034 <ya_string_escape>:
    1034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1038:	sub	sp, sp, #12
    103c:	subs	r8, r1, #0
    1040:	beq	156c <ya_string_escape+0x538>
    1044:	mov	fp, r2
    1048:	mov	r9, r0
    104c:	mov	r5, r0
    1050:	add	r8, r0, r8
    1054:	mov	r6, #0
    1058:	mov	r4, r6
    105c:	mov	sl, r6
    1060:	mov	r7, r6
    1064:	ldr	r3, [pc, #1288]	; 1574 <ya_string_escape+0x540>
    1068:	add	r3, pc, r3
    106c:	str	r3, [sp, #4]
    1070:	b	10d4 <ya_string_escape+0xa0>
    1074:	ldr	r0, [sp, #4]
    1078:	bl	e44 <ya_error@plt>
    107c:	b	1128 <ya_string_escape+0xf4>
    1080:	ldr	r3, [pc, #1264]	; 1578 <ya_string_escape+0x544>
    1084:	cmp	r6, r3
    1088:	bgt	117c <ya_string_escape+0x148>
    108c:	asr	r3, r6, #12
    1090:	and	r3, r3, #15
    1094:	mvn	r3, r3, lsl #27
    1098:	mvn	r3, r3, lsr #27
    109c:	mov	r2, r9
    10a0:	strb	r3, [r2, r7]!
    10a4:	lsl	r3, r6, #20
    10a8:	mvn	r1, #127	; 0x7f
    10ac:	orr	r3, r1, r3, lsr #26
    10b0:	strb	r3, [r2, #1]
    10b4:	add	r3, r7, #3
    10b8:	and	r0, r6, #63	; 0x3f
    10bc:	orr	r1, r0, r1
    10c0:	strb	r1, [r2, #2]
    10c4:	add	r7, r3, #1
    10c8:	strb	r6, [r9, r3]
    10cc:	cmp	r5, r8
    10d0:	beq	1550 <ya_string_escape+0x51c>
    10d4:	ldrb	r3, [r5], #1
    10d8:	cmp	r4, #0
    10dc:	beq	128c <ya_string_escape+0x258>
    10e0:	sub	r2, r3, #48	; 0x30
    10e4:	uxtb	r2, r2
    10e8:	cmp	r2, #9
    10ec:	subls	r3, r3, #48	; 0x30
    10f0:	orrls	r6, r3, r6, lsl #4
    10f4:	bls	1128 <ya_string_escape+0xf4>
    10f8:	sub	r2, r3, #97	; 0x61
    10fc:	uxtb	r2, r2
    1100:	cmp	r2, #5
    1104:	subls	r3, r3, #87	; 0x57
    1108:	orrls	r6, r3, r6, lsl #4
    110c:	bls	1128 <ya_string_escape+0xf4>
    1110:	sub	r2, r3, #65	; 0x41
    1114:	uxtb	r2, r2
    1118:	cmp	r2, #5
    111c:	bhi	1074 <ya_string_escape+0x40>
    1120:	sub	r3, r3, #55	; 0x37
    1124:	orr	r6, r3, r6, lsl #4
    1128:	subs	r4, r4, #1
    112c:	bne	10cc <ya_string_escape+0x98>
    1130:	cmp	r6, #127	; 0x7f
    1134:	addle	r3, r7, #1
    1138:	strble	r6, [r9, r7]
    113c:	ble	10c4 <ya_string_escape+0x90>
    1140:	ldr	r3, [pc, #1076]	; 157c <ya_string_escape+0x548>
    1144:	cmp	r6, r3
    1148:	bgt	1080 <ya_string_escape+0x4c>
    114c:	asr	r3, r6, #6
    1150:	and	r3, r3, #31
    1154:	mvn	r3, r3, lsl #26
    1158:	mvn	r3, r3, lsr #26
    115c:	mov	r1, r9
    1160:	strb	r3, [r1, r7]!
    1164:	add	r3, r7, #2
    1168:	and	r2, r6, #63	; 0x3f
    116c:	mvn	r2, r2, lsl #25
    1170:	mvn	r2, r2, lsr #25
    1174:	strb	r2, [r1, #1]
    1178:	b	10c4 <ya_string_escape+0x90>
    117c:	ldr	r3, [pc, #1020]	; 1580 <ya_string_escape+0x54c>
    1180:	cmp	r6, r3
    1184:	bgt	11d0 <ya_string_escape+0x19c>
    1188:	asr	r3, r6, #18
    118c:	and	r3, r3, #7
    1190:	mvn	r3, r3, lsl #28
    1194:	mvn	r3, r3, lsr #28
    1198:	mov	r2, r9
    119c:	strb	r3, [r2, r7]!
    11a0:	lsl	r3, r6, #14
    11a4:	mvn	r1, #127	; 0x7f
    11a8:	orr	r3, r1, r3, lsr #26
    11ac:	strb	r3, [r2, #1]
    11b0:	lsl	r3, r6, #20
    11b4:	orr	r3, r1, r3, lsr #26
    11b8:	strb	r3, [r2, #2]
    11bc:	add	r3, r7, #4
    11c0:	and	r0, r6, #63	; 0x3f
    11c4:	orr	r1, r0, r1
    11c8:	strb	r1, [r2, #3]
    11cc:	b	10c4 <ya_string_escape+0x90>
    11d0:	cmn	r6, #-67108863	; 0xfc000001
    11d4:	bgt	122c <ya_string_escape+0x1f8>
    11d8:	asr	r3, r6, #24
    11dc:	and	r3, r3, #3
    11e0:	mvn	r3, r3, lsl #29
    11e4:	mvn	r3, r3, lsr #29
    11e8:	mov	r2, r9
    11ec:	strb	r3, [r2, r7]!
    11f0:	lsl	r3, r6, #8
    11f4:	mvn	r1, #127	; 0x7f
    11f8:	orr	r3, r1, r3, lsr #26
    11fc:	strb	r3, [r2, #1]
    1200:	lsl	r3, r6, #14
    1204:	orr	r3, r1, r3, lsr #26
    1208:	strb	r3, [r2, #2]
    120c:	lsl	r3, r6, #20
    1210:	orr	r3, r1, r3, lsr #26
    1214:	strb	r3, [r2, #3]
    1218:	add	r3, r7, #5
    121c:	and	r0, r6, #63	; 0x3f
    1220:	orr	r1, r0, r1
    1224:	strb	r1, [r2, #4]
    1228:	b	10c4 <ya_string_escape+0x90>
    122c:	asr	r3, r6, #30
    1230:	and	r3, r3, #1
    1234:	mvn	r3, r3, lsl #30
    1238:	mvn	r3, r3, lsr #30
    123c:	mov	r2, r9
    1240:	strb	r3, [r2, r7]!
    1244:	lsl	r3, r6, #2
    1248:	mvn	r1, #127	; 0x7f
    124c:	orr	r3, r1, r3, lsr #26
    1250:	strb	r3, [r2, #1]
    1254:	lsl	r3, r6, #8
    1258:	orr	r3, r1, r3, lsr #26
    125c:	strb	r3, [r2, #2]
    1260:	lsl	r3, r6, #14
    1264:	orr	r3, r1, r3, lsr #26
    1268:	strb	r3, [r2, #3]
    126c:	lsl	r3, r6, #20
    1270:	orr	r3, r1, r3, lsr #26
    1274:	strb	r3, [r2, #4]
    1278:	add	r3, r7, #6
    127c:	and	r0, r6, #63	; 0x3f
    1280:	orr	r1, r0, r1
    1284:	strb	r1, [r2, #5]
    1288:	b	10c4 <ya_string_escape+0x90>
    128c:	cmp	sl, #0
    1290:	beq	151c <ya_string_escape+0x4e8>
    1294:	cmp	fp, #1
    1298:	beq	12d0 <ya_string_escape+0x29c>
    129c:	cmp	fp, #2
    12a0:	bne	12fc <ya_string_escape+0x2c8>
    12a4:	cmp	r3, #47	; 0x2f
    12a8:	strbeq	r3, [r9, r7]
    12ac:	moveq	sl, r4
    12b0:	addeq	r7, r7, #1
    12b4:	addne	r2, r7, #1
    12b8:	movne	r1, #92	; 0x5c
    12bc:	strbne	r1, [r9, r7]
    12c0:	strbne	r3, [r9, r2]
    12c4:	addne	r7, r7, #2
    12c8:	movne	sl, r4
    12cc:	b	10cc <ya_string_escape+0x98>
    12d0:	cmp	r3, #34	; 0x22
    12d4:	strbeq	r3, [r9, r7]
    12d8:	moveq	sl, r4
    12dc:	addeq	r7, r7, #1
    12e0:	addne	r2, r7, #1
    12e4:	movne	r1, #92	; 0x5c
    12e8:	strbne	r1, [r9, r7]
    12ec:	strbne	r3, [r9, r2]
    12f0:	addne	r7, r7, #2
    12f4:	movne	sl, r4
    12f8:	b	10cc <ya_string_escape+0x98>
    12fc:	sub	r2, r3, #34	; 0x22
    1300:	cmp	r2, #86	; 0x56
    1304:	addls	pc, pc, r2, lsl #2
    1308:	b	1500 <ya_string_escape+0x4cc>
    130c:	b	14b4 <ya_string_escape+0x480>
    1310:	b	1500 <ya_string_escape+0x4cc>
    1314:	b	1500 <ya_string_escape+0x4cc>
    1318:	b	1500 <ya_string_escape+0x4cc>
    131c:	b	1500 <ya_string_escape+0x4cc>
    1320:	b	1500 <ya_string_escape+0x4cc>
    1324:	b	1500 <ya_string_escape+0x4cc>
    1328:	b	1500 <ya_string_escape+0x4cc>
    132c:	b	1500 <ya_string_escape+0x4cc>
    1330:	b	1500 <ya_string_escape+0x4cc>
    1334:	b	1500 <ya_string_escape+0x4cc>
    1338:	b	1500 <ya_string_escape+0x4cc>
    133c:	b	1500 <ya_string_escape+0x4cc>
    1340:	b	14c8 <ya_string_escape+0x494>
    1344:	b	1500 <ya_string_escape+0x4cc>
    1348:	b	1500 <ya_string_escape+0x4cc>
    134c:	b	1500 <ya_string_escape+0x4cc>
    1350:	b	1500 <ya_string_escape+0x4cc>
    1354:	b	1500 <ya_string_escape+0x4cc>
    1358:	b	1500 <ya_string_escape+0x4cc>
    135c:	b	1500 <ya_string_escape+0x4cc>
    1360:	b	1500 <ya_string_escape+0x4cc>
    1364:	b	1500 <ya_string_escape+0x4cc>
    1368:	b	1500 <ya_string_escape+0x4cc>
    136c:	b	1500 <ya_string_escape+0x4cc>
    1370:	b	1500 <ya_string_escape+0x4cc>
    1374:	b	1500 <ya_string_escape+0x4cc>
    1378:	b	1500 <ya_string_escape+0x4cc>
    137c:	b	1500 <ya_string_escape+0x4cc>
    1380:	b	1500 <ya_string_escape+0x4cc>
    1384:	b	1500 <ya_string_escape+0x4cc>
    1388:	b	1500 <ya_string_escape+0x4cc>
    138c:	b	1500 <ya_string_escape+0x4cc>
    1390:	b	1500 <ya_string_escape+0x4cc>
    1394:	b	1500 <ya_string_escape+0x4cc>
    1398:	b	1500 <ya_string_escape+0x4cc>
    139c:	b	1500 <ya_string_escape+0x4cc>
    13a0:	b	1500 <ya_string_escape+0x4cc>
    13a4:	b	1500 <ya_string_escape+0x4cc>
    13a8:	b	1500 <ya_string_escape+0x4cc>
    13ac:	b	1500 <ya_string_escape+0x4cc>
    13b0:	b	1500 <ya_string_escape+0x4cc>
    13b4:	b	1500 <ya_string_escape+0x4cc>
    13b8:	b	1500 <ya_string_escape+0x4cc>
    13bc:	b	1500 <ya_string_escape+0x4cc>
    13c0:	b	1500 <ya_string_escape+0x4cc>
    13c4:	b	1500 <ya_string_escape+0x4cc>
    13c8:	b	1500 <ya_string_escape+0x4cc>
    13cc:	b	1500 <ya_string_escape+0x4cc>
    13d0:	b	1500 <ya_string_escape+0x4cc>
    13d4:	b	1500 <ya_string_escape+0x4cc>
    13d8:	b	14f0 <ya_string_escape+0x4bc>
    13dc:	b	1500 <ya_string_escape+0x4cc>
    13e0:	b	1500 <ya_string_escape+0x4cc>
    13e4:	b	1500 <ya_string_escape+0x4cc>
    13e8:	b	1500 <ya_string_escape+0x4cc>
    13ec:	b	1500 <ya_string_escape+0x4cc>
    13f0:	b	1500 <ya_string_escape+0x4cc>
    13f4:	b	14dc <ya_string_escape+0x4a8>
    13f8:	b	1500 <ya_string_escape+0x4cc>
    13fc:	b	1500 <ya_string_escape+0x4cc>
    1400:	b	1500 <ya_string_escape+0x4cc>
    1404:	b	1500 <ya_string_escape+0x4cc>
    1408:	b	1500 <ya_string_escape+0x4cc>
    140c:	b	1500 <ya_string_escape+0x4cc>
    1410:	b	1500 <ya_string_escape+0x4cc>
    1414:	b	1500 <ya_string_escape+0x4cc>
    1418:	b	1500 <ya_string_escape+0x4cc>
    141c:	b	1500 <ya_string_escape+0x4cc>
    1420:	b	1500 <ya_string_escape+0x4cc>
    1424:	b	1500 <ya_string_escape+0x4cc>
    1428:	b	1500 <ya_string_escape+0x4cc>
    142c:	b	1500 <ya_string_escape+0x4cc>
    1430:	b	1500 <ya_string_escape+0x4cc>
    1434:	b	1500 <ya_string_escape+0x4cc>
    1438:	b	1500 <ya_string_escape+0x4cc>
    143c:	b	1478 <ya_string_escape+0x444>
    1440:	b	1500 <ya_string_escape+0x4cc>
    1444:	b	1500 <ya_string_escape+0x4cc>
    1448:	b	1500 <ya_string_escape+0x4cc>
    144c:	b	148c <ya_string_escape+0x458>
    1450:	b	1500 <ya_string_escape+0x4cc>
    1454:	b	14a0 <ya_string_escape+0x46c>
    1458:	b	1468 <ya_string_escape+0x434>
    145c:	b	1500 <ya_string_escape+0x4cc>
    1460:	b	1500 <ya_string_escape+0x4cc>
    1464:	b	1534 <ya_string_escape+0x500>
    1468:	mov	r6, r4
    146c:	mov	sl, r4
    1470:	mov	r4, #4
    1474:	b	10cc <ya_string_escape+0x98>
    1478:	mov	r3, #10
    147c:	strb	r3, [r9, r7]
    1480:	mov	sl, r4
    1484:	add	r7, r7, #1
    1488:	b	10cc <ya_string_escape+0x98>
    148c:	mov	r3, #13
    1490:	strb	r3, [r9, r7]
    1494:	mov	sl, r4
    1498:	add	r7, r7, #1
    149c:	b	10cc <ya_string_escape+0x98>
    14a0:	mov	r3, #9
    14a4:	strb	r3, [r9, r7]
    14a8:	mov	sl, r4
    14ac:	add	r7, r7, #1
    14b0:	b	10cc <ya_string_escape+0x98>
    14b4:	mov	r3, #34	; 0x22
    14b8:	strb	r3, [r9, r7]
    14bc:	mov	sl, r4
    14c0:	add	r7, r7, #1
    14c4:	b	10cc <ya_string_escape+0x98>
    14c8:	mov	r3, #47	; 0x2f
    14cc:	strb	r3, [r9, r7]
    14d0:	mov	sl, r4
    14d4:	add	r7, r7, #1
    14d8:	b	10cc <ya_string_escape+0x98>
    14dc:	mov	r3, #92	; 0x5c
    14e0:	strb	r3, [r9, r7]
    14e4:	mov	sl, r4
    14e8:	add	r7, r7, #1
    14ec:	b	10cc <ya_string_escape+0x98>
    14f0:	mov	r6, r4
    14f4:	mov	sl, r4
    14f8:	mov	r4, #8
    14fc:	b	10cc <ya_string_escape+0x98>
    1500:	add	r2, r7, #1
    1504:	mov	r1, #92	; 0x5c
    1508:	strb	r1, [r9, r7]
    150c:	strb	r3, [r9, r2]
    1510:	add	r7, r7, #2
    1514:	mov	sl, r4
    1518:	b	10cc <ya_string_escape+0x98>
    151c:	cmp	r3, #92	; 0x5c
    1520:	beq	1544 <ya_string_escape+0x510>
    1524:	strb	r3, [r9, r7]
    1528:	mov	r4, sl
    152c:	add	r7, r7, #1
    1530:	b	10cc <ya_string_escape+0x98>
    1534:	mov	r6, r4
    1538:	mov	sl, r4
    153c:	mov	r4, #2
    1540:	b	10cc <ya_string_escape+0x98>
    1544:	mov	r4, sl
    1548:	mov	sl, #1
    154c:	b	10cc <ya_string_escape+0x98>
    1550:	cmp	sl, #0
    1554:	moveq	r0, r7
    1558:	addne	r0, r7, #1
    155c:	movne	r3, #92	; 0x5c
    1560:	strbne	r3, [r9, r7]
    1564:	add	sp, sp, #12
    1568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    156c:	mov	r0, r8
    1570:	b	1564 <ya_string_escape+0x530>
    1574:	.word	0x00001984
    1578:	.word	0x0000ffff
    157c:	.word	0x000007ff
    1580:	.word	0x001fffff

00001584 <ya_new_extension>:
    1584:	push	{r4, r5, lr}
    1588:	sub	sp, sp, #12
    158c:	mov	r5, r1
    1590:	bl	d6c <strdup@plt>
    1594:	mov	r4, r0
    1598:	mov	r1, #46	; 0x2e
    159c:	bl	e38 <strrchr@plt>
    15a0:	cmp	r0, #0
    15a4:	movne	r3, #0
    15a8:	strbne	r3, [r0]
    15ac:	mov	r3, r5
    15b0:	mov	r2, r4
    15b4:	ldr	r1, [pc, #52]	; 15f0 <ya_new_extension+0x6c>
    15b8:	add	r1, pc, r1
    15bc:	add	r0, sp, #4
    15c0:	bl	e14 <asprintf@plt>
    15c4:	cmn	r0, #1
    15c8:	beq	15e0 <ya_new_extension+0x5c>
    15cc:	mov	r0, r4
    15d0:	bl	d24 <free@plt>
    15d4:	ldr	r0, [sp, #4]
    15d8:	add	sp, sp, #12
    15dc:	pop	{r4, r5, pc}
    15e0:	ldr	r0, [pc, #12]	; 15f4 <ya_new_extension+0x70>
    15e4:	add	r0, pc, r0
    15e8:	bl	d78 <perror@plt>
    15ec:	bl	ea4 <abort@plt>
    15f0:	.word	0x0000145c
    15f4:	.word	0x00001438

000015f8 <ya_error>:
    15f8:	push	{r0, r1, r2, r3}
    15fc:	push	{r4, lr}
    1600:	sub	sp, sp, #16
    1604:	ldr	r4, [pc, #100]	; 1670 <ya_error+0x78>
    1608:	add	r4, pc, r4
    160c:	add	r2, sp, #28
    1610:	str	r2, [sp, #8]
    1614:	ldr	r1, [sp, #24]
    1618:	add	r0, sp, #12
    161c:	bl	ce8 <vasprintf@plt>
    1620:	cmp	r0, #0
    1624:	blt	1668 <ya_error+0x70>
    1628:	ldr	r3, [pc, #68]	; 1674 <ya_error+0x7c>
    162c:	ldr	r2, [r4, r3]
    1630:	ldr	r3, [r2, #4]
    1634:	ldr	r2, [r2]
    1638:	ldr	r1, [pc, #56]	; 1678 <ya_error+0x80>
    163c:	ldr	r1, [r4, r1]
    1640:	ldr	r0, [r1]
    1644:	ldr	r1, [sp, #12]
    1648:	str	r1, [sp]
    164c:	add	r3, r3, #1
    1650:	add	r2, r2, #1
    1654:	ldr	r1, [pc, #32]	; 167c <ya_error+0x84>
    1658:	add	r1, pc, r1
    165c:	bl	dd8 <fprintf@plt>
    1660:	ldr	r0, [sp, #12]
    1664:	bl	d24 <free@plt>
    1668:	mov	r0, #1
    166c:	bl	dc0 <exit@plt>
    1670:	.word	0x000119f0
    1674:	.word	0x000000f0
    1678:	.word	0x000000cc
    167c:	.word	0x000013f0

00001680 <ya_count>:
    1680:	push	{r4, r5, lr}
    1684:	mov	lr, r0
    1688:	mov	r5, r1
    168c:	mov	r4, r2
    1690:	ldr	ip, [pc, #256]	; 1798 <ya_count+0x118>
    1694:	add	ip, pc, ip
    1698:	ldr	r3, [pc, #252]	; 179c <ya_count+0x11c>
    169c:	ldr	r3, [ip, r3]
    16a0:	ldr	r2, [pc, #248]	; 17a0 <ya_count+0x120>
    16a4:	ldr	r2, [ip, r2]
    16a8:	ldm	r2, {r0, r1, r2}
    16ac:	stm	r3, {r0, r1, r2}
    16b0:	cmp	r4, #0
    16b4:	beq	1760 <ya_count+0xe0>
    16b8:	mov	r0, r5
    16bc:	add	r2, r5, r4
    16c0:	mov	r4, #0
    16c4:	b	16e8 <ya_count+0x68>
    16c8:	ldr	r3, [pc, #208]	; 17a0 <ya_count+0x120>
    16cc:	ldr	r3, [ip, r3]
    16d0:	ldr	r1, [r3]
    16d4:	add	r1, r1, #1
    16d8:	str	r1, [r3]
    16dc:	str	r4, [r3, #4]
    16e0:	cmp	r0, r2
    16e4:	beq	1760 <ya_count+0xe0>
    16e8:	ldrb	r3, [r0], #1
    16ec:	cmp	r3, #10
    16f0:	beq	16c8 <ya_count+0x48>
    16f4:	cmp	r3, #13
    16f8:	beq	1734 <ya_count+0xb4>
    16fc:	cmp	r3, #9
    1700:	beq	1744 <ya_count+0xc4>
    1704:	sub	r1, r3, #32
    1708:	uxtb	r1, r1
    170c:	and	r3, r3, #192	; 0xc0
    1710:	cmp	r3, #128	; 0x80
    1714:	cmpne	r1, #94	; 0x5e
    1718:	bhi	16e0 <ya_count+0x60>
    171c:	ldr	r3, [pc, #124]	; 17a0 <ya_count+0x120>
    1720:	ldr	r1, [ip, r3]
    1724:	ldr	r3, [r1, #4]
    1728:	add	r3, r3, #1
    172c:	str	r3, [r1, #4]
    1730:	b	16e0 <ya_count+0x60>
    1734:	ldr	r3, [pc, #100]	; 17a0 <ya_count+0x120>
    1738:	ldr	r3, [ip, r3]
    173c:	str	r4, [r3, #4]
    1740:	b	16e0 <ya_count+0x60>
    1744:	ldr	r3, [pc, #84]	; 17a0 <ya_count+0x120>
    1748:	ldr	r1, [ip, r3]
    174c:	ldr	r3, [r1, #4]
    1750:	bic	r3, r3, #7
    1754:	add	r3, r3, #8
    1758:	str	r3, [r1, #4]
    175c:	b	16e0 <ya_count+0x60>
    1760:	ldr	r3, [pc, #52]	; 179c <ya_count+0x11c>
    1764:	ldr	r2, [ip, r3]
    1768:	add	r3, lr, #8
    176c:	ldm	r2, {r0, r1, r2}
    1770:	stm	r3, {r0, r1, r2}
    1774:	mov	r2, #0
    1778:	mov	r3, #0
    177c:	strd	r2, [lr]
    1780:	mvn	r3, #0
    1784:	strb	r3, [lr, #20]
    1788:	mov	r3, #0
    178c:	str	r3, [lr, #24]
    1790:	mov	r0, lr
    1794:	pop	{r4, r5, pc}
    1798:	.word	0x00011964
    179c:	.word	0x000000e8
    17a0:	.word	0x000000f0

000017a4 <ya_get_file_nr>:
    17a4:	push	{r4, r5, r6, r7, r8, lr}
    17a8:	mov	r7, r0
    17ac:	ldr	r8, [pc, #148]	; 1848 <ya_get_file_nr+0xa4>
    17b0:	add	r8, pc, r8
    17b4:	ldr	r3, [pc, #144]	; 184c <ya_get_file_nr+0xa8>
    17b8:	ldr	r3, [r8, r3]
    17bc:	ldr	r6, [r3]
    17c0:	cmp	r6, #0
    17c4:	ble	1838 <ya_get_file_nr+0x94>
    17c8:	ldr	r3, [pc, #128]	; 1850 <ya_get_file_nr+0xac>
    17cc:	ldr	r5, [r8, r3]
    17d0:	sub	r5, r5, #4
    17d4:	mov	r4, #0
    17d8:	mov	r1, r7
    17dc:	ldr	r0, [r5, #4]!
    17e0:	bl	cf4 <strcmp@plt>
    17e4:	cmp	r0, #0
    17e8:	beq	1830 <ya_get_file_nr+0x8c>
    17ec:	add	r4, r4, #1
    17f0:	cmp	r4, #65536	; 0x10000
    17f4:	beq	1840 <ya_get_file_nr+0x9c>
    17f8:	cmp	r4, r6
    17fc:	bne	17d8 <ya_get_file_nr+0x34>
    1800:	mov	r0, r7
    1804:	bl	d6c <strdup@plt>
    1808:	ldr	r3, [pc, #64]	; 1850 <ya_get_file_nr+0xac>
    180c:	ldr	r3, [r8, r3]
    1810:	str	r0, [r3, r4, lsl #2]
    1814:	ldr	r3, [pc, #48]	; 184c <ya_get_file_nr+0xa8>
    1818:	ldr	r2, [r8, r3]
    181c:	ldr	r3, [r2]
    1820:	add	r3, r3, #1
    1824:	str	r3, [r2]
    1828:	mov	r0, r4
    182c:	pop	{r4, r5, r6, r7, r8, pc}
    1830:	mov	r0, r4
    1834:	pop	{r4, r5, r6, r7, r8, pc}
    1838:	mov	r4, #0
    183c:	b	1800 <ya_get_file_nr+0x5c>
    1840:	mvn	r0, #0
    1844:	pop	{r4, r5, r6, r7, r8, pc}
    1848:	.word	0x00011848
    184c:	.word	0x000000c8
    1850:	.word	0x000000e0

00001854 <ya_reposition>:
    1854:	push	{r4, r5, r6, lr}
    1858:	sub	sp, sp, #8
    185c:	mov	r5, r0
    1860:	mov	r6, r1
    1864:	ldr	r4, [pc, #172]	; 1918 <ya_reposition+0xc4>
    1868:	add	r4, pc, r4
    186c:	mov	r2, #10
    1870:	add	r1, sp, #4
    1874:	bl	d0c <strtol@plt>
    1878:	mov	ip, r0
    187c:	ldr	r3, [pc, #152]	; 191c <ya_reposition+0xc8>
    1880:	ldr	r3, [r4, r3]
    1884:	ldr	r2, [pc, #148]	; 1920 <ya_reposition+0xcc>
    1888:	ldr	r2, [r4, r2]
    188c:	ldm	r2, {r0, r1, r2}
    1890:	stm	r3, {r0, r1, r2}
    1894:	ldr	r0, [sp, #4]
    1898:	cmp	r5, r0
    189c:	beq	18cc <ya_reposition+0x78>
    18a0:	ldr	r3, [pc, #120]	; 1920 <ya_reposition+0xcc>
    18a4:	ldr	r3, [r4, r3]
    18a8:	mov	r2, #0
    18ac:	str	r2, [r3, #4]
    18b0:	sub	ip, ip, #1
    18b4:	str	ip, [r3]
    18b8:	ldrb	r3, [r0]
    18bc:	cmp	r3, #32
    18c0:	beq	18f0 <ya_reposition+0x9c>
    18c4:	add	sp, sp, #8
    18c8:	pop	{r4, r5, r6, pc}
    18cc:	ldr	r3, [pc, #80]	; 1924 <ya_reposition+0xd0>
    18d0:	ldr	r3, [r4, r3]
    18d4:	ldr	r3, [r3]
    18d8:	mov	r2, #37	; 0x25
    18dc:	mov	r1, #1
    18e0:	ldr	r0, [pc, #64]	; 1928 <ya_reposition+0xd4>
    18e4:	add	r0, pc, r0
    18e8:	bl	d90 <fwrite@plt>
    18ec:	bl	ea4 <abort@plt>
    18f0:	sub	r1, r6, #3
    18f4:	sub	r5, r0, r5
    18f8:	sub	r1, r1, r5
    18fc:	add	r0, r0, #2
    1900:	bl	d30 <strndup@plt>
    1904:	bl	e20 <ya_get_file_nr@plt>
    1908:	ldr	r3, [pc, #16]	; 1920 <ya_reposition+0xcc>
    190c:	ldr	r3, [r4, r3]
    1910:	str	r0, [r3, #8]
    1914:	b	18c4 <ya_reposition+0x70>
    1918:	.word	0x00011790
    191c:	.word	0x000000e8
    1920:	.word	0x000000f0
    1924:	.word	0x000000cc
    1928:	.word	0x00001174

0000192c <ya_clear_position>:
    192c:	mvn	r3, #0
    1930:	str	r3, [r0, #12]
    1934:	str	r3, [r0, #8]
    1938:	str	r3, [r0, #16]
    193c:	ldr	r2, [r0, #24]
    1940:	str	r3, [r2, #20]
    1944:	ldr	r2, [r0, #24]
    1948:	str	r3, [r2, #16]
    194c:	ldr	r2, [r0, #24]
    1950:	str	r3, [r2, #24]
    1954:	bx	lr

00001958 <ya_get_filenames>:
    1958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    195c:	sub	sp, sp, #156	; 0x9c
    1960:	str	r0, [sp, #20]
    1964:	ldr	sl, [pc, #336]	; 1abc <ya_get_filenames+0x164>
    1968:	add	sl, pc, sl
    196c:	mov	r2, #0
    1970:	ldr	r1, [pc, #328]	; 1ac0 <ya_get_filenames+0x168>
    1974:	add	r1, pc, r1
    1978:	add	r0, sp, #88	; 0x58
    197c:	bl	e08 <ya_list@plt>
    1980:	ldr	r3, [pc, #316]	; 1ac4 <ya_get_filenames+0x16c>
    1984:	ldr	r3, [sl, r3]
    1988:	ldr	r3, [r3]
    198c:	cmp	r3, #0
    1990:	ble	1a54 <ya_get_filenames+0xfc>
    1994:	ldr	r3, [pc, #300]	; 1ac8 <ya_get_filenames+0x170>
    1998:	ldr	r7, [sl, r3]
    199c:	sub	r7, r7, #4
    19a0:	mov	r5, #0
    19a4:	add	r4, sp, #24
    19a8:	ldr	r3, [pc, #284]	; 1acc <ya_get_filenames+0x174>
    19ac:	add	r3, pc, r3
    19b0:	str	r3, [sp, #12]
    19b4:	add	r9, sp, #120	; 0x78
    19b8:	add	r8, sp, #88	; 0x58
    19bc:	ldr	r3, [pc, #268]	; 1ad0 <ya_get_filenames+0x178>
    19c0:	add	r3, pc, r3
    19c4:	str	r3, [sp, #16]
    19c8:	mov	fp, r5
    19cc:	ldr	r6, [r7, #4]!
    19d0:	mov	r0, r6
    19d4:	bl	dcc <strlen@plt>
    19d8:	mov	r3, r0
    19dc:	mov	r2, r6
    19e0:	ldr	r1, [sp, #12]
    19e4:	mov	r0, r4
    19e8:	bl	e98 <ya_text@plt>
    19ec:	add	ip, sp, #120	; 0x78
    19f0:	mov	lr, r4
    19f4:	ldm	lr!, {r0, r1, r2, r3}
    19f8:	stmia	ip!, {r0, r1, r2, r3}
    19fc:	ldm	lr, {r0, r1, r2, r3}
    1a00:	stm	ip, {r0, r1, r2, r3}
    1a04:	mov	r0, r9
    1a08:	bl	e80 <ya_clear_position@plt>
    1a0c:	str	fp, [sp]
    1a10:	mov	r3, r9
    1a14:	mov	r2, r8
    1a18:	ldr	r1, [sp, #16]
    1a1c:	mov	r0, r4
    1a20:	bl	e08 <ya_list@plt>
    1a24:	mov	ip, r8
    1a28:	mov	lr, r4
    1a2c:	ldm	lr!, {r0, r1, r2, r3}
    1a30:	stmia	ip!, {r0, r1, r2, r3}
    1a34:	ldm	lr, {r0, r1, r2, r3}
    1a38:	stm	ip, {r0, r1, r2, r3}
    1a3c:	add	r5, r5, #1
    1a40:	ldr	r3, [pc, #124]	; 1ac4 <ya_get_filenames+0x16c>
    1a44:	ldr	r3, [sl, r3]
    1a48:	ldr	r3, [r3]
    1a4c:	cmp	r3, r5
    1a50:	bgt	19cc <ya_get_filenames+0x74>
    1a54:	mov	r3, #0
    1a58:	add	r2, sp, #88	; 0x58
    1a5c:	ldr	r1, [pc, #112]	; 1ad4 <ya_get_filenames+0x17c>
    1a60:	add	r1, pc, r1
    1a64:	add	r4, sp, #24
    1a68:	mov	r0, r4
    1a6c:	bl	d9c <ya_branch@plt>
    1a70:	add	lr, sp, #56	; 0x38
    1a74:	mov	ip, r4
    1a78:	ldm	ip!, {r0, r1, r2, r3}
    1a7c:	stmia	lr!, {r0, r1, r2, r3}
    1a80:	ldm	ip, {r0, r1, r2, r3}
    1a84:	stm	lr, {r0, r1, r2, r3}
    1a88:	add	r4, sp, #56	; 0x38
    1a8c:	mov	r0, r4
    1a90:	bl	e80 <ya_clear_position@plt>
    1a94:	ldr	r5, [sp, #20]
    1a98:	mov	lr, r5
    1a9c:	mov	ip, r4
    1aa0:	ldm	ip!, {r0, r1, r2, r3}
    1aa4:	stmia	lr!, {r0, r1, r2, r3}
    1aa8:	ldm	ip, {r0, r1, r2, r3}
    1aac:	stm	lr, {r0, r1, r2, r3}
    1ab0:	mov	r0, r5
    1ab4:	add	sp, sp, #156	; 0x9c
    1ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1abc:	.word	0x00011690
    1ac0:	.word	0x0000110c
    1ac4:	.word	0x000000c8
    1ac8:	.word	0x000000e0
    1acc:	.word	0x000010dc
    1ad0:	.word	0x000010c0
    1ad4:	.word	0x00001030

00001ad8 <ya_literal>:
    1ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1adc:	sub	sp, sp, #20
    1ae0:	mov	r7, r0
    1ae4:	mov	r8, r1
    1ae8:	mov	sl, r2
    1aec:	str	r3, [sp, #12]
    1af0:	ldr	r6, [pc, #336]	; 1c48 <ya_literal+0x170>
    1af4:	add	r6, pc, r6
    1af8:	ldr	r3, [sp, #56]	; 0x38
    1afc:	add	r9, r3, #7
    1b00:	bic	r9, r9, #7
    1b04:	mov	r2, #32
    1b08:	mov	r1, #0
    1b0c:	bl	dfc <memset@plt>
    1b10:	add	fp, r9, #32
    1b14:	ldr	r3, [pc, #304]	; 1c4c <ya_literal+0x174>
    1b18:	ldr	r2, [r6, r3]
    1b1c:	add	r3, r7, #8
    1b20:	ldm	r2, {r0, r1, r2}
    1b24:	stm	r3, {r0, r1, r2}
    1b28:	str	r0, [sp, #4]
    1b2c:	str	r1, [sp]
    1b30:	str	r2, [sp, #8]
    1b34:	cmp	sl, #0
    1b38:	mvneq	r3, #0
    1b3c:	streq	r3, [sp, #8]
    1b40:	streq	r3, [sp]
    1b44:	streq	r3, [sp, #4]
    1b48:	mov	r1, fp
    1b4c:	mov	r0, #1
    1b50:	bl	cc4 <calloc@plt>
    1b54:	mov	r6, r0
    1b58:	mov	r0, r8
    1b5c:	bl	dcc <strlen@plt>
    1b60:	mov	r2, r0
    1b64:	mov	r3, #0
    1b68:	mov	r0, #0
    1b6c:	mov	r1, #0
    1b70:	b	1b80 <ya_literal+0xa8>
    1b74:	add	r3, r3, #1
    1b78:	cmp	r3, #8
    1b7c:	beq	1bac <ya_literal+0xd4>
    1b80:	lsl	r5, r1, #8
    1b84:	orr	r5, r5, r0, lsr #24
    1b88:	lsl	r4, r0, #8
    1b8c:	cmp	r2, r3
    1b90:	orrls	r0, r4, #32
    1b94:	movls	r1, r5
    1b98:	ldrbhi	r0, [r8, r3]
    1b9c:	movhi	r1, #0
    1ba0:	orrhi	r0, r0, r4
    1ba4:	orrhi	r1, r1, r5
    1ba8:	b	1b74 <ya_literal+0x9c>
    1bac:	rev	r3, r0
    1bb0:	rev	r2, r1
    1bb4:	str	r2, [r6]
    1bb8:	str	r3, [r6, #4]
    1bbc:	rev	r3, fp
    1bc0:	mov	r2, #0
    1bc4:	str	r2, [r6, #8]
    1bc8:	str	r3, [r6, #12]
    1bcc:	strb	sl, [r6, #31]
    1bd0:	ldr	r4, [sp, #8]
    1bd4:	rev	r3, r4
    1bd8:	str	r3, [r6, #24]
    1bdc:	ldr	r5, [sp, #4]
    1be0:	rev	r3, r5
    1be4:	str	r3, [r6, #16]
    1be8:	ldr	r8, [sp]
    1bec:	rev	r3, r8
    1bf0:	str	r3, [r6, #20]
    1bf4:	ldr	r2, [sp, #56]	; 0x38
    1bf8:	ldr	r1, [sp, #12]
    1bfc:	add	r0, r6, #32
    1c00:	bl	d3c <memcpy@plt>
    1c04:	ldr	r3, [sp, #56]	; 0x38
    1c08:	add	r0, r3, #32
    1c0c:	sub	r2, r9, r3
    1c10:	mov	r1, #0
    1c14:	add	r0, r6, r0
    1c18:	bl	dfc <memset@plt>
    1c1c:	str	fp, [r7]
    1c20:	mov	r3, #0
    1c24:	str	r3, [r7, #4]
    1c28:	str	r5, [r7, #8]
    1c2c:	str	r8, [r7, #12]
    1c30:	str	r4, [r7, #16]
    1c34:	strb	sl, [r7, #20]
    1c38:	str	r6, [r7, #24]
    1c3c:	mov	r0, r7
    1c40:	add	sp, sp, #20
    1c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c48:	.word	0x00011504
    1c4c:	.word	0x000000e8

00001c50 <ya_binary_float>:
    1c50:	push	{r4, r5, r6, lr}
    1c54:	sub	sp, sp, #24
    1c58:	mov	r5, r0
    1c5c:	mov	r6, r1
    1c60:	mov	r4, r2
    1c64:	add	r1, sp, #12
    1c68:	mov	r0, r2
    1c6c:	bl	d60 <strtold@plt>
    1c70:	vstr	d0, [sp, #16]
    1c74:	ldr	r3, [sp, #12]
    1c78:	cmp	r4, r3
    1c7c:	beq	1cf4 <ya_binary_float+0xa4>
    1c80:	vldr	d7, [sp, #16]
    1c84:	vldr	d6, [pc, #196]	; 1d50 <ya_binary_float+0x100>
    1c88:	vcmpe.f64	d7, d6
    1c8c:	vmrs	APSR_nzcv, fpscr
    1c90:	bgt	1ca4 <ya_binary_float+0x54>
    1c94:	vldr	d6, [pc, #188]	; 1d58 <ya_binary_float+0x108>
    1c98:	vcmpe.f64	d7, d6
    1c9c:	vmrs	APSR_nzcv, fpscr
    1ca0:	bpl	1d18 <ya_binary_float+0xc8>
    1ca4:	bl	de4 <__errno_location@plt>
    1ca8:	ldr	r3, [r0]
    1cac:	cmp	r3, #34	; 0x22
    1cb0:	beq	1d08 <ya_binary_float+0xb8>
    1cb4:	ldr	r3, [sp, #16]
    1cb8:	rev	r3, r3
    1cbc:	ldr	r2, [sp, #20]
    1cc0:	rev	r2, r2
    1cc4:	str	r2, [sp, #16]
    1cc8:	str	r3, [sp, #20]
    1ccc:	mov	r3, #8
    1cd0:	str	r3, [sp]
    1cd4:	add	r3, sp, #16
    1cd8:	mov	r2, #6
    1cdc:	mov	r1, r6
    1ce0:	mov	r0, r5
    1ce4:	bl	e50 <ya_literal@plt>
    1ce8:	mov	r0, r5
    1cec:	add	sp, sp, #24
    1cf0:	pop	{r4, r5, r6, pc}
    1cf4:	mov	r1, r4
    1cf8:	ldr	r0, [pc, #96]	; 1d60 <ya_binary_float+0x110>
    1cfc:	add	r0, pc, r0
    1d00:	bl	e44 <ya_error@plt>
    1d04:	b	1c80 <ya_binary_float+0x30>
    1d08:	mov	r1, r4
    1d0c:	ldr	r0, [pc, #80]	; 1d64 <ya_binary_float+0x114>
    1d10:	add	r0, pc, r0
    1d14:	bl	e44 <ya_error@plt>
    1d18:	vldr	d7, [sp, #16]
    1d1c:	vcmp.f64	d7, #0.0
    1d20:	vmrs	APSR_nzcv, fpscr
    1d24:	bne	1cb4 <ya_binary_float+0x64>
    1d28:	bl	de4 <__errno_location@plt>
    1d2c:	ldr	r3, [r0]
    1d30:	cmp	r3, #34	; 0x22
    1d34:	bne	1cb4 <ya_binary_float+0x64>
    1d38:	mov	r1, r4
    1d3c:	ldr	r0, [pc, #36]	; 1d68 <ya_binary_float+0x118>
    1d40:	add	r0, pc, r0
    1d44:	bl	e44 <ya_error@plt>
    1d48:	b	1cb4 <ya_binary_float+0x64>
    1d4c:	nop			; (mov r0, r0)
    1d50:	.word	0xffffffff
    1d54:	.word	0x7fefffff
    1d58:	.word	0xffffffff
    1d5c:	.word	0xffefffff
    1d60:	.word	0x00000d9c
    1d64:	.word	0x00000dac
    1d68:	.word	0x00000da8

00001d6c <ya_integer>:
    1d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d70:	sub	sp, sp, #44	; 0x2c
    1d74:	str	r0, [sp, #16]
    1d78:	str	r1, [sp, #20]
    1d7c:	str	r2, [sp, #24]
    1d80:	ldr	r2, [sp, #80]	; 0x50
    1d84:	ldr	r4, [sp, #84]	; 0x54
    1d88:	ldr	r1, [pc, #468]	; 1f64 <ya_integer+0x1f8>
    1d8c:	add	r1, pc, r1
    1d90:	str	r1, [sp, #28]
    1d94:	cmp	r2, #0
    1d98:	beq	1f20 <ya_integer+0x1b4>
    1d9c:	mov	r5, r3
    1da0:	add	sl, r3, r2
    1da4:	mov	r6, #0
    1da8:	mov	r7, #0
    1dac:	asr	r9, r4, #31
    1db0:	ldr	r3, [pc, #432]	; 1f68 <ya_integer+0x1fc>
    1db4:	add	r3, pc, r3
    1db8:	str	r3, [sp, #12]
    1dbc:	sub	fp, r4, #37	; 0x25
    1dc0:	b	1e7c <ya_integer+0x110>
    1dc4:	sub	r2, r3, #97	; 0x61
    1dc8:	uxtb	r2, r2
    1dcc:	cmp	r2, #25
    1dd0:	subls	r3, r3, #97	; 0x61
    1dd4:	bls	1e48 <ya_integer+0xdc>
    1dd8:	sub	r2, r3, #65	; 0x41
    1ddc:	uxtb	r2, r2
    1de0:	cmp	r2, #25
    1de4:	subls	r3, r3, #65	; 0x41
    1de8:	bls	1e48 <ya_integer+0xdc>
    1dec:	sub	r2, r3, #50	; 0x32
    1df0:	uxtb	r2, r2
    1df4:	cmp	r2, #5
    1df8:	subls	r3, r3, #24
    1dfc:	bls	1e48 <ya_integer+0xdc>
    1e00:	b	1e74 <ya_integer+0x108>
    1e04:	cmp	r4, #36	; 0x24
    1e08:	bhi	1ee4 <ya_integer+0x178>
    1e0c:	sub	r2, r3, #48	; 0x30
    1e10:	uxtb	r2, r2
    1e14:	cmp	r2, #9
    1e18:	subls	r3, r3, #48	; 0x30
    1e1c:	bls	1e48 <ya_integer+0xdc>
    1e20:	sub	r2, r3, #65	; 0x41
    1e24:	uxtb	r2, r2
    1e28:	cmp	r2, #25
    1e2c:	subls	r3, r3, #55	; 0x37
    1e30:	bls	1e48 <ya_integer+0xdc>
    1e34:	sub	r2, r3, #97	; 0x61
    1e38:	uxtb	r2, r2
    1e3c:	cmp	r2, #25
    1e40:	subls	r3, r3, #87	; 0x57
    1e44:	bhi	1e74 <ya_integer+0x108>
    1e48:	cmp	r3, r4
    1e4c:	bge	1e74 <ya_integer+0x108>
    1e50:	mul	r2, r4, r7
    1e54:	mla	r2, r6, r9, r2
    1e58:	umull	r0, r1, r4, r6
    1e5c:	add	r1, r2, r1
    1e60:	adds	r6, r0, r3
    1e64:	adc	r7, r1, r3, asr #31
    1e68:	cmp	r1, r7
    1e6c:	cmpeq	r0, r6
    1e70:	bhi	1f14 <ya_integer+0x1a8>
    1e74:	cmp	sl, r5
    1e78:	beq	1f28 <ya_integer+0x1bc>
    1e7c:	ldrb	r3, [r5], #1
    1e80:	cmp	r4, #32
    1e84:	beq	1dc4 <ya_integer+0x58>
    1e88:	cmp	fp, #27
    1e8c:	bhi	1e04 <ya_integer+0x98>
    1e90:	sub	r2, r3, #65	; 0x41
    1e94:	uxtb	r2, r2
    1e98:	cmp	r2, #25
    1e9c:	subls	r3, r3, #65	; 0x41
    1ea0:	bls	1e48 <ya_integer+0xdc>
    1ea4:	sub	r2, r3, #97	; 0x61
    1ea8:	uxtb	r2, r2
    1eac:	cmp	r2, #25
    1eb0:	subls	r3, r3, #71	; 0x47
    1eb4:	bls	1e48 <ya_integer+0xdc>
    1eb8:	sub	r2, r3, #48	; 0x30
    1ebc:	uxtb	r2, r2
    1ec0:	cmp	r2, #9
    1ec4:	addls	r3, r3, #4
    1ec8:	bls	1e48 <ya_integer+0xdc>
    1ecc:	cmp	r3, #43	; 0x2b
    1ed0:	beq	1f0c <ya_integer+0x1a0>
    1ed4:	cmp	r3, #47	; 0x2f
    1ed8:	bne	1e74 <ya_integer+0x108>
    1edc:	mov	r3, #63	; 0x3f
    1ee0:	b	1e48 <ya_integer+0xdc>
    1ee4:	ldr	r3, [pc, #128]	; 1f6c <ya_integer+0x200>
    1ee8:	ldr	r2, [sp, #28]
    1eec:	ldr	r3, [r2, r3]
    1ef0:	ldr	r3, [r3]
    1ef4:	mov	r2, #47	; 0x2f
    1ef8:	mov	r1, #1
    1efc:	ldr	r0, [pc, #108]	; 1f70 <ya_integer+0x204>
    1f00:	add	r0, pc, r0
    1f04:	bl	d90 <fwrite@plt>
    1f08:	bl	ea4 <abort@plt>
    1f0c:	mov	r3, #62	; 0x3e
    1f10:	b	1e48 <ya_integer+0xdc>
    1f14:	ldr	r0, [sp, #12]
    1f18:	bl	e44 <ya_error@plt>
    1f1c:	b	1e74 <ya_integer+0x108>
    1f20:	mov	r6, #0
    1f24:	mov	r7, #0
    1f28:	rev	r3, r6
    1f2c:	rev	r2, r7
    1f30:	str	r2, [sp, #32]
    1f34:	str	r3, [sp, #36]	; 0x24
    1f38:	mov	r3, #8
    1f3c:	str	r3, [sp]
    1f40:	add	r3, sp, #32
    1f44:	ldr	r2, [sp, #24]
    1f48:	ldr	r1, [sp, #20]
    1f4c:	ldr	r4, [sp, #16]
    1f50:	mov	r0, r4
    1f54:	bl	e50 <ya_literal@plt>
    1f58:	mov	r0, r4
    1f5c:	add	sp, sp, #44	; 0x2c
    1f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1f64:	.word	0x0001126c
    1f68:	.word	0x00000d94
    1f6c:	.word	0x000000cc
    1f70:	.word	0x00000c18

00001f74 <ya_text>:
    1f74:	push	{r4, lr}
    1f78:	sub	sp, sp, #8
    1f7c:	mov	r4, r0
    1f80:	str	r3, [sp]
    1f84:	mov	r3, r2
    1f88:	mov	r2, #3
    1f8c:	bl	e50 <ya_literal@plt>
    1f90:	mov	r0, r4
    1f94:	add	sp, sp, #8
    1f98:	pop	{r4, pc}

00001f9c <ya_leaf>:
    1f9c:	push	{r4, lr}
    1fa0:	sub	sp, sp, #8
    1fa4:	mov	r4, r0
    1fa8:	mov	r3, #0
    1fac:	str	r3, [sp]
    1fb0:	mov	r2, #1
    1fb4:	bl	e50 <ya_literal@plt>
    1fb8:	mov	r0, r4
    1fbc:	add	sp, sp, #8
    1fc0:	pop	{r4, pc}

00001fc4 <ya_null>:
    1fc4:	push	{r4, lr}
    1fc8:	sub	sp, sp, #8
    1fcc:	mov	r4, r0
    1fd0:	mov	r2, #0
    1fd4:	str	r2, [sp]
    1fd8:	mov	r3, r2
    1fdc:	ldr	r1, [pc, #16]	; 1ff4 <ya_null+0x30>
    1fe0:	add	r1, pc, r1
    1fe4:	bl	e50 <ya_literal@plt>
    1fe8:	mov	r0, r4
    1fec:	add	sp, sp, #8
    1ff0:	pop	{r4, pc}
    1ff4:	.word	0x00000b84

00001ff8 <ya_positive_integer>:
    1ff8:	push	{r4, lr}
    1ffc:	sub	sp, sp, #8
    2000:	mov	r4, r0
    2004:	ldr	ip, [sp, #16]
    2008:	str	ip, [sp, #4]
    200c:	str	r3, [sp]
    2010:	mov	r3, r2
    2014:	mov	r2, #4
    2018:	bl	df0 <ya_integer@plt>
    201c:	mov	r0, r4
    2020:	add	sp, sp, #8
    2024:	pop	{r4, pc}

00002028 <ya_negative_integer>:
    2028:	push	{r4, lr}
    202c:	sub	sp, sp, #8
    2030:	mov	r4, r0
    2034:	ldr	ip, [sp, #16]
    2038:	str	ip, [sp, #4]
    203c:	str	r3, [sp]
    2040:	mov	r3, r2
    2044:	mov	r2, #5
    2048:	bl	df0 <ya_integer@plt>
    204c:	mov	r0, r4
    2050:	add	sp, sp, #8
    2054:	pop	{r4, pc}

00002058 <ya_generic_nodev>:
    2058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    205c:	sub	sp, sp, #36	; 0x24
    2060:	str	r0, [sp, #16]
    2064:	str	r1, [sp]
    2068:	str	r2, [sp, #12]
    206c:	mov	ip, r3
    2070:	ldr	r5, [pc, #756]	; 236c <ya_generic_nodev+0x314>
    2074:	add	r5, pc, r5
    2078:	ldr	r3, [pc, #752]	; 2370 <ya_generic_nodev+0x318>
    207c:	ldr	lr, [r5, r3]
    2080:	mov	r4, r0
    2084:	mov	r8, lr
    2088:	ldm	r8!, {r0, r1, r2, r3}
    208c:	stmia	r4!, {r0, r1, r2, r3}
    2090:	ldm	r8, {r0, r1, r2, r3}
    2094:	stm	r4, {r0, r1, r2, r3}
    2098:	ldrd	sl, [lr]
    209c:	ldr	r8, [lr, #8]
    20a0:	ldr	r9, [lr, #12]
    20a4:	mov	r4, r0
    20a8:	str	ip, [sp, #28]
    20ac:	ldr	r2, [ip]
    20b0:	cmp	r2, #0
    20b4:	bne	2148 <ya_generic_nodev+0xf0>
    20b8:	mov	r1, sl
    20bc:	mov	r0, #1
    20c0:	bl	cc4 <calloc@plt>
    20c4:	str	r0, [sp, #20]
    20c8:	ldr	r0, [sp]
    20cc:	bl	dcc <strlen@plt>
    20d0:	mov	r2, r0
    20d4:	mov	r3, #0
    20d8:	mov	r0, #0
    20dc:	mov	r1, #0
    20e0:	ldr	ip, [sp]
    20e4:	b	21b0 <ya_generic_nodev+0x158>
    20e8:	ldr	r4, [r2, #16]
    20ec:	cmn	r4, #1
    20f0:	ldrne	r8, [r2, #8]
    20f4:	ldrne	r9, [r2, #12]
    20f8:	bne	215c <ya_generic_nodev+0x104>
    20fc:	ldr	r3, [r2, #8]
    2100:	cmp	r3, r8
    2104:	ldrcc	r9, [r2, #12]
    2108:	movcc	r8, r3
    210c:	bcc	215c <ya_generic_nodev+0x104>
    2110:	cmp	r3, r8
    2114:	bne	215c <ya_generic_nodev+0x104>
    2118:	ldr	r3, [r2, #12]
    211c:	cmp	r9, r3
    2120:	movcs	r9, r3
    2124:	b	215c <ya_generic_nodev+0x104>
    2128:	subs	sl, sl, #32
    212c:	sbc	fp, fp, #0
    2130:	ldrd	r2, [r2]
    2134:	adds	sl, sl, r2
    2138:	adc	fp, fp, r3
    213c:	ldr	r2, [ip, #4]!
    2140:	cmp	r2, #0
    2144:	beq	20b8 <ya_generic_nodev+0x60>
    2148:	cmn	r4, #1
    214c:	beq	20e8 <ya_generic_nodev+0x90>
    2150:	ldr	r3, [r2, #16]
    2154:	cmp	r3, r4
    2158:	beq	20fc <ya_generic_nodev+0xa4>
    215c:	ldrb	r3, [r2, #20]
    2160:	cmp	r3, #254	; 0xfe
    2164:	beq	2128 <ya_generic_nodev+0xd0>
    2168:	cmp	r3, #255	; 0xff
    216c:	bne	2194 <ya_generic_nodev+0x13c>
    2170:	ldr	r3, [pc, #508]	; 2374 <ya_generic_nodev+0x31c>
    2174:	ldr	r3, [r5, r3]
    2178:	ldr	r3, [r3]
    217c:	mov	r2, #72	; 0x48
    2180:	mov	r1, #1
    2184:	ldr	r0, [pc, #492]	; 2378 <ya_generic_nodev+0x320>
    2188:	add	r0, pc, r0
    218c:	bl	d90 <fwrite@plt>
    2190:	bl	ea4 <abort@plt>
    2194:	ldrd	r2, [r2]
    2198:	adds	sl, sl, r2
    219c:	adc	fp, fp, r3
    21a0:	b	213c <ya_generic_nodev+0xe4>
    21a4:	add	r3, r3, #1
    21a8:	cmp	r3, #8
    21ac:	beq	21dc <ya_generic_nodev+0x184>
    21b0:	lsl	r7, r1, #8
    21b4:	orr	r7, r7, r0, lsr #24
    21b8:	lsl	r6, r0, #8
    21bc:	cmp	r2, r3
    21c0:	orrls	r0, r6, #32
    21c4:	movls	r1, r7
    21c8:	ldrbhi	r0, [ip, r3]
    21cc:	movhi	r1, #0
    21d0:	orrhi	r0, r0, r6
    21d4:	orrhi	r1, r1, r7
    21d8:	b	21a4 <ya_generic_nodev+0x14c>
    21dc:	rev	r3, r0
    21e0:	rev	r2, r1
    21e4:	ldr	r1, [sp, #20]
    21e8:	str	r2, [r1]
    21ec:	str	r3, [r1, #4]
    21f0:	ldrb	r3, [sp, #12]
    21f4:	strb	r3, [r1, #31]
    21f8:	rev	r3, sl
    21fc:	rev	r2, fp
    2200:	str	r2, [r1, #8]
    2204:	str	r3, [r1, #12]
    2208:	rev	r3, r4
    220c:	str	r3, [r1, #24]
    2210:	rev	r3, r8
    2214:	str	r3, [r1, #16]
    2218:	rev	r3, r9
    221c:	str	r3, [r1, #20]
    2220:	ldr	r3, [sp, #28]
    2224:	add	r2, r3, #4
    2228:	str	r2, [sp, #28]
    222c:	ldr	r6, [r3]
    2230:	cmp	r6, #0
    2234:	beq	230c <ya_generic_nodev+0x2b4>
    2238:	mov	r7, #0
    223c:	strd	sl, [sp]
    2240:	mov	fp, r5
    2244:	mov	r5, r4
    2248:	b	2298 <ya_generic_nodev+0x240>
    224c:	ldr	r4, [r6]
    2250:	sub	r4, r4, #32
    2254:	add	r0, r7, #32
    2258:	ldr	r1, [r6, #24]
    225c:	mov	r2, r4
    2260:	add	r1, r1, #32
    2264:	ldr	r3, [sp, #20]
    2268:	add	r0, r3, r0
    226c:	bl	d3c <memcpy@plt>
    2270:	add	r7, r4, r7
    2274:	ldrb	r3, [r6, #20]
    2278:	cmp	r3, #0
    227c:	bne	22f4 <ya_generic_nodev+0x29c>
    2280:	ldr	r3, [sp, #28]
    2284:	add	r2, r3, #4
    2288:	str	r2, [sp, #28]
    228c:	ldr	r6, [r3]
    2290:	cmp	r6, #0
    2294:	beq	2300 <ya_generic_nodev+0x2a8>
    2298:	ldrb	r3, [r6, #20]
    229c:	cmp	r3, #254	; 0xfe
    22a0:	beq	224c <ya_generic_nodev+0x1f4>
    22a4:	cmp	r3, #255	; 0xff
    22a8:	bne	22d0 <ya_generic_nodev+0x278>
    22ac:	ldr	r3, [pc, #192]	; 2374 <ya_generic_nodev+0x31c>
    22b0:	ldr	r3, [fp, r3]
    22b4:	ldr	r3, [r3]
    22b8:	mov	r2, #72	; 0x48
    22bc:	mov	r1, #1
    22c0:	ldr	r0, [pc, #180]	; 237c <ya_generic_nodev+0x324>
    22c4:	add	r0, pc, r0
    22c8:	bl	d90 <fwrite@plt>
    22cc:	bl	ea4 <abort@plt>
    22d0:	ldr	r4, [r6]
    22d4:	add	r0, r7, #32
    22d8:	mov	r2, r4
    22dc:	ldr	r1, [r6, #24]
    22e0:	ldr	r3, [sp, #20]
    22e4:	add	r0, r3, r0
    22e8:	bl	d3c <memcpy@plt>
    22ec:	add	r7, r4, r7
    22f0:	b	2274 <ya_generic_nodev+0x21c>
    22f4:	ldr	r0, [r6, #24]
    22f8:	bl	d24 <free@plt>
    22fc:	b	2280 <ya_generic_nodev+0x228>
    2300:	mov	r4, r5
    2304:	mov	r5, fp
    2308:	ldrd	sl, [sp]
    230c:	cmn	r4, #1
    2310:	beq	2344 <ya_generic_nodev+0x2ec>
    2314:	ldr	r3, [sp, #16]
    2318:	strd	sl, [r3]
    231c:	str	r8, [r3, #8]
    2320:	str	r9, [r3, #12]
    2324:	str	r4, [r3, #16]
    2328:	ldrb	r2, [sp, #12]
    232c:	strb	r2, [r3, #20]
    2330:	ldr	r2, [sp, #20]
    2334:	str	r2, [r3, #24]
    2338:	mov	r0, r3
    233c:	add	sp, sp, #36	; 0x24
    2340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2344:	ldr	r3, [pc, #52]	; 2380 <ya_generic_nodev+0x328>
    2348:	ldr	r2, [r5, r3]
    234c:	ldr	r3, [sp, #16]
    2350:	add	r3, r3, #8
    2354:	ldm	r2, {r0, r1, r2}
    2358:	stm	r3, {r0, r1, r2}
    235c:	mov	r8, r0
    2360:	mov	r9, r1
    2364:	mov	r4, r2
    2368:	b	2314 <ya_generic_nodev+0x2bc>
    236c:	.word	0x00010f84
    2370:	.word	0x000000f4
    2374:	.word	0x000000cc
    2378:	.word	0x000009e4
    237c:	.word	0x000008a8
    2380:	.word	0x000000e8

00002384 <ya_generic_node>:
    2384:	push	{r2, r3}
    2388:	push	{r4, lr}
    238c:	sub	sp, sp, #8
    2390:	mov	r4, r0
    2394:	add	r3, sp, #20
    2398:	str	r3, [sp, #4]
    239c:	ldrb	r2, [sp, #16]
    23a0:	bl	e68 <ya_generic_nodev@plt>
    23a4:	mov	r0, r4
    23a8:	add	sp, sp, #8
    23ac:	pop	{r4, lr}
    23b0:	add	sp, sp, #8
    23b4:	bx	lr

000023b8 <ya_branch>:
    23b8:	push	{r1, r2, r3}
    23bc:	push	{r4, lr}
    23c0:	sub	sp, sp, #12
    23c4:	mov	r4, r0
    23c8:	add	r3, sp, #24
    23cc:	str	r3, [sp, #4]
    23d0:	mov	r2, #2
    23d4:	ldr	r1, [sp, #20]
    23d8:	bl	e68 <ya_generic_nodev@plt>
    23dc:	mov	r0, r4
    23e0:	add	sp, sp, #12
    23e4:	pop	{r4, lr}
    23e8:	add	sp, sp, #12
    23ec:	bx	lr

000023f0 <ya_list>:
    23f0:	push	{r1, r2, r3}
    23f4:	push	{r4, lr}
    23f8:	sub	sp, sp, #12
    23fc:	mov	r4, r0
    2400:	add	r3, sp, #24
    2404:	str	r3, [sp, #4]
    2408:	mov	r2, #254	; 0xfe
    240c:	ldr	r1, [sp, #20]
    2410:	bl	e68 <ya_generic_nodev@plt>
    2414:	mov	r0, r4
    2418:	add	sp, sp, #12
    241c:	pop	{r4, lr}
    2420:	add	sp, sp, #12
    2424:	bx	lr

00002428 <ya_node_save>:
    2428:	push	{r4, lr}
    242c:	mov	ip, r1
    2430:	mov	r3, r0
    2434:	mov	r2, #1
    2438:	ldr	r1, [r1]
    243c:	ldr	r0, [ip, #24]
    2440:	bl	d90 <fwrite@plt>
    2444:	pop	{r4, pc}

00002448 <ya_header>:
    2448:	push	{r4, r5, r6, lr}
    244c:	sub	sp, sp, #104	; 0x68
    2450:	mov	r5, r0
    2454:	mov	r6, r1
    2458:	add	r4, sp, #40	; 0x28
    245c:	mov	r0, r4
    2460:	bl	d84 <ya_get_filenames@plt>
    2464:	mov	r3, #0
    2468:	str	r3, [sp]
    246c:	mov	r3, r6
    2470:	mov	r2, r4
    2474:	ldr	r1, [pc, #84]	; 24d0 <ya_header+0x88>
    2478:	add	r1, pc, r1
    247c:	add	r4, sp, #8
    2480:	mov	r0, r4
    2484:	bl	d9c <ya_branch@plt>
    2488:	add	lr, sp, #72	; 0x48
    248c:	mov	ip, r4
    2490:	ldm	ip!, {r0, r1, r2, r3}
    2494:	stmia	lr!, {r0, r1, r2, r3}
    2498:	ldm	ip, {r0, r1, r2, r3}
    249c:	stm	lr, {r0, r1, r2, r3}
    24a0:	add	r4, sp, #72	; 0x48
    24a4:	mov	r0, r4
    24a8:	bl	e80 <ya_clear_position@plt>
    24ac:	mov	lr, r5
    24b0:	mov	ip, r4
    24b4:	ldm	ip!, {r0, r1, r2, r3}
    24b8:	stmia	lr!, {r0, r1, r2, r3}
    24bc:	ldm	ip, {r0, r1, r2, r3}
    24c0:	stm	lr, {r0, r1, r2, r3}
    24c4:	mov	r0, r5
    24c8:	add	sp, sp, #104	; 0x68
    24cc:	pop	{r4, r5, r6, pc}
    24d0:	.word	0x00000740

000024d4 <ya_usage>:
    24d4:	push	{r4, r5, r6, lr}
    24d8:	mov	r5, r0
    24dc:	mov	r6, r1
    24e0:	ldr	r3, [pc, #200]	; 25b0 <ya_usage+0xdc>
    24e4:	add	r3, pc, r3
    24e8:	ldr	r2, [pc, #196]	; 25b4 <ya_usage+0xe0>
    24ec:	ldr	r4, [r3, r2]
    24f0:	ldr	r3, [r4]
    24f4:	mov	r2, #7
    24f8:	mov	r1, #1
    24fc:	ldr	r0, [pc, #180]	; 25b8 <ya_usage+0xe4>
    2500:	add	r0, pc, r0
    2504:	bl	d90 <fwrite@plt>
    2508:	mov	r2, r5
    250c:	ldr	r1, [pc, #168]	; 25bc <ya_usage+0xe8>
    2510:	add	r1, pc, r1
    2514:	ldr	r0, [r4]
    2518:	bl	dd8 <fprintf@plt>
    251c:	mov	r2, r5
    2520:	ldr	r1, [pc, #152]	; 25c0 <ya_usage+0xec>
    2524:	add	r1, pc, r1
    2528:	ldr	r0, [r4]
    252c:	bl	dd8 <fprintf@plt>
    2530:	ldr	r1, [r4]
    2534:	mov	r0, #10
    2538:	bl	e5c <fputc@plt>
    253c:	ldr	r3, [r4]
    2540:	mov	r2, #9
    2544:	mov	r1, #1
    2548:	ldr	r0, [pc, #116]	; 25c4 <ya_usage+0xf0>
    254c:	add	r0, pc, r0
    2550:	bl	d90 <fwrite@plt>
    2554:	ldr	r3, [r4]
    2558:	mov	r2, #25
    255c:	mov	r1, #1
    2560:	ldr	r0, [pc, #96]	; 25c8 <ya_usage+0xf4>
    2564:	add	r0, pc, r0
    2568:	bl	d90 <fwrite@plt>
    256c:	ldr	r3, [r4]
    2570:	mov	r2, #39	; 0x27
    2574:	mov	r1, #1
    2578:	ldr	r0, [pc, #76]	; 25cc <ya_usage+0xf8>
    257c:	add	r0, pc, r0
    2580:	bl	d90 <fwrite@plt>
    2584:	ldr	r3, [r4]
    2588:	mov	r2, #70	; 0x46
    258c:	mov	r1, #1
    2590:	ldr	r0, [pc, #56]	; 25d0 <ya_usage+0xfc>
    2594:	add	r0, pc, r0
    2598:	bl	d90 <fwrite@plt>
    259c:	ldr	r1, [r4]
    25a0:	mov	r0, #10
    25a4:	bl	e5c <fputc@plt>
    25a8:	mov	r0, r6
    25ac:	bl	dc0 <exit@plt>
    25b0:	.word	0x00010b14
    25b4:	.word	0x000000cc
    25b8:	.word	0x000006c0
    25bc:	.word	0x000006b8
    25c0:	.word	0x000006b0
    25c4:	.word	0x000006b0
    25c8:	.word	0x000006a4
    25cc:	.word	0x000006a8
    25d0:	.word	0x000006b8

000025d4 <ya_parse_options>:
    25d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    25d8:	sub	sp, sp, #84	; 0x54
    25dc:	mov	r7, r0
    25e0:	mov	r4, r1
    25e4:	str	r2, [sp, #12]
    25e8:	ldr	r5, [pc, #480]	; 27d0 <ya_parse_options+0x1fc>
    25ec:	add	r5, pc, r5
    25f0:	add	ip, sp, #16
    25f4:	ldr	lr, [pc, #472]	; 27d4 <ya_parse_options+0x200>
    25f8:	add	lr, pc, lr
    25fc:	ldm	lr!, {r0, r1, r2, r3}
    2600:	stmia	ip!, {r0, r1, r2, r3}
    2604:	ldm	lr!, {r0, r1, r2, r3}
    2608:	stmia	ip!, {r0, r1, r2, r3}
    260c:	ldm	lr!, {r0, r1, r2, r3}
    2610:	stmia	ip!, {r0, r1, r2, r3}
    2614:	ldm	lr, {r0, r1, r2, r3}
    2618:	stm	ip, {r0, r1, r2, r3}
    261c:	add	r9, sp, #16
    2620:	ldr	r8, [pc, #432]	; 27d8 <ya_parse_options+0x204>
    2624:	add	r8, pc, r8
    2628:	mov	r6, #0
    262c:	ldr	sl, [pc, #424]	; 27dc <ya_parse_options+0x208>
    2630:	add	sl, pc, sl
    2634:	ldr	fp, [pc, #420]	; 27e0 <ya_parse_options+0x20c>
    2638:	add	fp, pc, fp
    263c:	ldr	r3, [pc, #416]	; 27e4 <ya_parse_options+0x210>
    2640:	add	r3, pc, r3
    2644:	str	r3, [sp, #8]
    2648:	b	26d4 <ya_parse_options+0x100>
    264c:	cmp	r0, #0
    2650:	beq	26d4 <ya_parse_options+0x100>
    2654:	cmp	r0, #58	; 0x3a
    2658:	bne	26ac <ya_parse_options+0xd8>
    265c:	ldr	r3, [pc, #388]	; 27e8 <ya_parse_options+0x214>
    2660:	ldr	r3, [r5, r3]
    2664:	ldr	r3, [r3]
    2668:	mov	r2, #24
    266c:	mov	r1, #1
    2670:	ldr	r0, [sp, #8]
    2674:	bl	d90 <fwrite@plt>
    2678:	mov	r1, #2
    267c:	ldr	r0, [r4]
    2680:	bl	e8c <ya_usage@plt>
    2684:	ldr	r3, [pc, #348]	; 27e8 <ya_parse_options+0x214>
    2688:	ldr	r3, [r5, r3]
    268c:	ldr	r3, [r3]
    2690:	mov	r2, #15
    2694:	mov	r1, #1
    2698:	mov	r0, fp
    269c:	bl	d90 <fwrite@plt>
    26a0:	mov	r1, #2
    26a4:	ldr	r0, [r4]
    26a8:	bl	e8c <ya_usage@plt>
    26ac:	ldr	r3, [pc, #308]	; 27e8 <ya_parse_options+0x214>
    26b0:	ldr	r3, [r5, r3]
    26b4:	ldr	r3, [r3]
    26b8:	mov	r2, #31
    26bc:	mov	r1, #1
    26c0:	mov	r0, sl
    26c4:	bl	d90 <fwrite@plt>
    26c8:	mov	r1, #2
    26cc:	ldr	r0, [r4]
    26d0:	bl	e8c <ya_usage@plt>
    26d4:	str	r6, [sp]
    26d8:	mov	r3, r9
    26dc:	mov	r2, r8
    26e0:	mov	r1, r4
    26e4:	mov	r0, r7
    26e8:	bl	db4 <getopt_long@plt>
    26ec:	cmn	r0, #1
    26f0:	beq	2748 <ya_parse_options+0x174>
    26f4:	cmp	r0, #63	; 0x3f
    26f8:	beq	2684 <ya_parse_options+0xb0>
    26fc:	ble	264c <ya_parse_options+0x78>
    2700:	cmp	r0, #104	; 0x68
    2704:	beq	2738 <ya_parse_options+0x164>
    2708:	cmp	r0, #111	; 0x6f
    270c:	bne	272c <ya_parse_options+0x158>
    2710:	ldr	r3, [pc, #212]	; 27ec <ya_parse_options+0x218>
    2714:	ldr	r3, [r5, r3]
    2718:	ldr	r2, [pc, #208]	; 27f0 <ya_parse_options+0x21c>
    271c:	ldr	r2, [r5, r2]
    2720:	ldr	r2, [r2]
    2724:	str	r2, [r3]
    2728:	b	26d4 <ya_parse_options+0x100>
    272c:	cmp	r0, #99	; 0x63
    2730:	bne	26ac <ya_parse_options+0xd8>
    2734:	b	26d4 <ya_parse_options+0x100>
    2738:	mov	r1, r6
    273c:	ldr	r0, [r4]
    2740:	bl	e8c <ya_usage@plt>
    2744:	b	26d4 <ya_parse_options+0x100>
    2748:	ldr	r3, [pc, #164]	; 27f4 <ya_parse_options+0x220>
    274c:	ldr	r3, [r5, r3]
    2750:	ldr	r6, [r3]
    2754:	sub	r7, r7, r6
    2758:	cmp	r7, #1
    275c:	beq	278c <ya_parse_options+0x1b8>
    2760:	ldr	r3, [pc, #128]	; 27e8 <ya_parse_options+0x214>
    2764:	ldr	r3, [r5, r3]
    2768:	ldr	r3, [r3]
    276c:	mov	r2, #29
    2770:	mov	r1, #1
    2774:	ldr	r0, [pc, #124]	; 27f8 <ya_parse_options+0x224>
    2778:	add	r0, pc, r0
    277c:	bl	d90 <fwrite@plt>
    2780:	mov	r1, #2
    2784:	ldr	r0, [r4, r6, lsl #2]
    2788:	bl	e8c <ya_usage@plt>
    278c:	ldr	r0, [r4, r6, lsl #2]
    2790:	ldr	r3, [pc, #100]	; 27fc <ya_parse_options+0x228>
    2794:	ldr	r3, [r5, r3]
    2798:	str	r0, [r3]
    279c:	ldr	r3, [pc, #72]	; 27ec <ya_parse_options+0x218>
    27a0:	ldr	r3, [r5, r3]
    27a4:	ldr	r3, [r3]
    27a8:	cmp	r3, #0
    27ac:	beq	27b8 <ya_parse_options+0x1e4>
    27b0:	add	sp, sp, #84	; 0x54
    27b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    27b8:	ldr	r1, [sp, #12]
    27bc:	bl	e74 <ya_new_extension@plt>
    27c0:	ldr	r3, [pc, #36]	; 27ec <ya_parse_options+0x218>
    27c4:	ldr	r3, [r5, r3]
    27c8:	str	r0, [r3]
    27cc:	b	27b0 <ya_parse_options+0x1dc>
    27d0:	.word	0x00010a0c
    27d4:	.word	0x00010b30
    27d8:	.word	0x000006bc
    27dc:	.word	0x00000690
    27e0:	.word	0x00000678
    27e4:	.word	0x00000654
    27e8:	.word	0x000000cc
    27ec:	.word	0x000000fc
    27f0:	.word	0x00000100
    27f4:	.word	0x000000c4
    27f8:	.word	0x00000570
    27fc:	.word	0x000000bc

00002800 <ya_main>:
    2800:	push	{r4, r5, r6, r7, r8, lr}
    2804:	sub	sp, sp, #48	; 0x30
    2808:	mov	r6, r0
    280c:	mov	r7, r1
    2810:	mov	r8, r2
    2814:	ldr	r5, [pc, #404]	; 29b0 <ya_main+0x1b0>
    2818:	add	r5, pc, r5
    281c:	ldr	r3, [pc, #400]	; 29b4 <ya_main+0x1b4>
    2820:	ldr	r3, [r5, r3]
    2824:	str	r3, [sp, #4]
    2828:	add	r4, sp, #8
    282c:	mov	r0, r4
    2830:	bl	d48 <ya_null@plt>
    2834:	ldr	lr, [sp, #4]
    2838:	mov	ip, r4
    283c:	ldm	ip!, {r0, r1, r2, r3}
    2840:	stmia	lr!, {r0, r1, r2, r3}
    2844:	ldm	ip, {r0, r1, r2, r3}
    2848:	stm	lr, {r0, r1, r2, r3}
    284c:	mov	r2, r8
    2850:	mov	r1, r7
    2854:	mov	r0, r6
    2858:	bl	eb0 <ya_parse_options@plt>
    285c:	ldr	r3, [pc, #340]	; 29b8 <ya_main+0x1b8>
    2860:	ldr	r3, [r5, r3]
    2864:	ldr	r4, [r3]
    2868:	ldr	r1, [pc, #332]	; 29bc <ya_main+0x1bc>
    286c:	add	r1, pc, r1
    2870:	mov	r0, r4
    2874:	bl	cf4 <strcmp@plt>
    2878:	cmp	r0, #0
    287c:	bne	294c <ya_main+0x14c>
    2880:	ldr	r3, [pc, #312]	; 29c0 <ya_main+0x1c0>
    2884:	ldr	r3, [r5, r3]
    2888:	ldr	r2, [pc, #308]	; 29c4 <ya_main+0x1c4>
    288c:	ldr	r2, [r5, r2]
    2890:	ldr	r2, [r2]
    2894:	str	r2, [r3]
    2898:	ldr	r3, [pc, #280]	; 29b8 <ya_main+0x1b8>
    289c:	ldr	r3, [r5, r3]
    28a0:	ldr	r2, [r3]
    28a4:	ldr	r1, [pc, #284]	; 29c8 <ya_main+0x1c8>
    28a8:	add	r1, pc, r1
    28ac:	add	r0, sp, #44	; 0x2c
    28b0:	bl	e14 <asprintf@plt>
    28b4:	cmp	r0, #0
    28b8:	blt	28dc <ya_main+0xdc>
    28bc:	ldr	r4, [sp, #44]	; 0x2c
    28c0:	mov	r0, r4
    28c4:	bl	dcc <strlen@plt>
    28c8:	mov	r1, r0
    28cc:	mov	r0, r4
    28d0:	bl	cd0 <ya_reposition@plt>
    28d4:	ldr	r0, [sp, #44]	; 0x2c
    28d8:	bl	d24 <free@plt>
    28dc:	bl	d54 <yyparse@plt>
    28e0:	ldr	r3, [pc, #216]	; 29c0 <ya_main+0x1c0>
    28e4:	ldr	r3, [r5, r3]
    28e8:	ldr	r0, [r3]
    28ec:	bl	e2c <fclose@plt>
    28f0:	ldr	r3, [pc, #212]	; 29cc <ya_main+0x1cc>
    28f4:	ldr	r3, [r5, r3]
    28f8:	ldr	r4, [r3]
    28fc:	ldr	r1, [pc, #204]	; 29d0 <ya_main+0x1d0>
    2900:	add	r1, pc, r1
    2904:	mov	r0, r4
    2908:	bl	cf4 <strcmp@plt>
    290c:	cmp	r0, #0
    2910:	bne	2984 <ya_main+0x184>
    2914:	ldr	r3, [pc, #184]	; 29d4 <ya_main+0x1d4>
    2918:	ldr	r3, [r5, r3]
    291c:	ldr	r4, [r3]
    2920:	ldr	r3, [pc, #176]	; 29d8 <ya_main+0x1d8>
    2924:	ldr	r3, [r5, r3]
    2928:	str	r3, [sp, #4]
    292c:	mov	r1, r3
    2930:	mov	r0, r4
    2934:	bl	cdc <ya_node_save@plt>
    2938:	mov	r0, r4
    293c:	bl	e2c <fclose@plt>
    2940:	mov	r0, #0
    2944:	add	sp, sp, #48	; 0x30
    2948:	pop	{r4, r5, r6, r7, r8, pc}
    294c:	ldr	r1, [pc, #136]	; 29dc <ya_main+0x1dc>
    2950:	add	r1, pc, r1
    2954:	mov	r0, r4
    2958:	bl	d18 <fopen@plt>
    295c:	ldr	r3, [pc, #92]	; 29c0 <ya_main+0x1c0>
    2960:	ldr	r3, [r5, r3]
    2964:	str	r0, [r3]
    2968:	cmp	r0, #0
    296c:	bne	2898 <ya_main+0x98>
    2970:	ldr	r0, [pc, #104]	; 29e0 <ya_main+0x1e0>
    2974:	add	r0, pc, r0
    2978:	bl	d78 <perror@plt>
    297c:	mvn	r0, #0
    2980:	b	2944 <ya_main+0x144>
    2984:	ldr	r1, [pc, #88]	; 29e4 <ya_main+0x1e4>
    2988:	add	r1, pc, r1
    298c:	mov	r0, r4
    2990:	bl	d18 <fopen@plt>
    2994:	subs	r4, r0, #0
    2998:	bne	2920 <ya_main+0x120>
    299c:	ldr	r0, [pc, #68]	; 29e8 <ya_main+0x1e8>
    29a0:	add	r0, pc, r0
    29a4:	bl	d78 <perror@plt>
    29a8:	mvn	r0, #0
    29ac:	b	2944 <ya_main+0x144>
    29b0:	.word	0x000107e0
    29b4:	.word	0x000000d4
    29b8:	.word	0x000000bc
    29bc:	.word	0x0000049c
    29c0:	.word	0x000000c0
    29c4:	.word	0x000000dc
    29c8:	.word	0x00000484
    29cc:	.word	0x000000fc
    29d0:	.word	0x00000408
    29d4:	.word	0x000000e4
    29d8:	.word	0x000000d8
    29dc:	.word	0x000003bc
    29e0:	.word	0x0000039c
    29e4:	.word	0x000003ac
    29e8:	.word	0x00000398

Disassembly of section .fini:

000029ec <_fini>:
    29ec:	push	{r3, lr}
    29f0:	pop	{r3, pc}
