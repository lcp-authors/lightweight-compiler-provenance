
../repos/coreutils/src/sha256sum:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	11038 <dcngettext@plt+0x48>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <fdopen@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <fdopen@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x000192b4

00010d50 <fdopen@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #102400	; 0x19000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #102400	; 0x19000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #102400	; 0x19000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #102400	; 0x19000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #102400	; 0x19000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #102400	; 0x19000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <posix_fadvise64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #102400	; 0x19000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <fflush@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #102400	; 0x19000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #102400	; 0x19000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #102400	; 0x19000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #102400	; 0x19000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #102400	; 0x19000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <fwrite_unlocked@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #102400	; 0x19000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <memcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #102400	; 0x19000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <fputc_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #102400	; 0x19000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <dcgettext@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #102400	; 0x19000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #102400	; 0x19000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #102400	; 0x19000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #102400	; 0x19000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #102400	; 0x19000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #102400	; 0x19000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #102400	; 0x19000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #102400	; 0x19000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #102400	; 0x19000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #102400	; 0x19000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #102400	; 0x19000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #102400	; 0x19000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #102400	; 0x19000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__ctype_tolower_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #102400	; 0x19000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__gmon_start__@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #102400	; 0x19000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #102400	; 0x19000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #102400	; 0x19000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #102400	; 0x19000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #102400	; 0x19000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <strchr@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #102400	; 0x19000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <__errno_location@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #102400	; 0x19000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #102400	; 0x19000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <setvbuf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #102400	; 0x19000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #102400	; 0x19000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #102400	; 0x19000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #102400	; 0x19000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #102400	; 0x19000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #102400	; 0x19000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #102400	; 0x19000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <fcntl64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #102400	; 0x19000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <__overflow@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #102400	; 0x19000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #102400	; 0x19000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #102400	; 0x19000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #102400	; 0x19000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <clearerr_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #102400	; 0x19000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <fopen64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #102400	; 0x19000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #102400	; 0x19000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

00010fc0 <fread_unlocked@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #102400	; 0x19000
   10fc8:	ldr	pc, [ip, #276]!	; 0x114

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #102400	; 0x19000
   10fd4:	ldr	pc, [ip, #268]!	; 0x10c

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #102400	; 0x19000
   10fe0:	ldr	pc, [ip, #260]!	; 0x104

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #102400	; 0x19000
   10fec:	ldr	pc, [ip, #252]!	; 0xfc

00010ff0 <dcngettext@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #102400	; 0x19000
   10ff8:	ldr	pc, [ip, #244]!	; 0xf4

Disassembly of section .text:

00010ffc <.text>:
   10ffc:	mov	fp, #0
   11000:	mov	lr, #0
   11004:	pop	{r1}		; (ldr r1, [sp], #4)
   11008:	mov	r2, sp
   1100c:	push	{r2}		; (str r2, [sp, #-4]!)
   11010:	push	{r0}		; (str r0, [sp, #-4]!)
   11014:	ldr	ip, [pc, #16]	; 1102c <dcngettext@plt+0x3c>
   11018:	push	{ip}		; (str ip, [sp, #-4]!)
   1101c:	ldr	r0, [pc, #12]	; 11030 <dcngettext@plt+0x40>
   11020:	ldr	r3, [pc, #12]	; 11034 <dcngettext@plt+0x44>
   11024:	bl	10e88 <__libc_start_main@plt>
   11028:	bl	10fd8 <abort@plt>
   1102c:	andeq	r8, r1, r0, lsr r9
   11030:	andeq	r1, r1, ip, lsl #18
   11034:	ldrdeq	r8, [r1], -r0
   11038:	ldr	r3, [pc, #20]	; 11054 <dcngettext@plt+0x64>
   1103c:	ldr	r2, [pc, #20]	; 11058 <dcngettext@plt+0x68>
   11040:	add	r3, pc, r3
   11044:	ldr	r2, [r3, r2]
   11048:	cmp	r2, #0
   1104c:	bxeq	lr
   11050:	b	10eac <__gmon_start__@plt>
   11054:			; <UNDEFINED> instruction: 0x00018fb8
   11058:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1105c:	ldr	r3, [pc, #28]	; 11080 <dcngettext@plt+0x90>
   11060:	ldr	r0, [pc, #28]	; 11084 <dcngettext@plt+0x94>
   11064:	sub	r3, r3, r0
   11068:	cmp	r3, #6
   1106c:	bxls	lr
   11070:	ldr	r3, [pc, #16]	; 11088 <dcngettext@plt+0x98>
   11074:	cmp	r3, #0
   11078:	bxeq	lr
   1107c:	bx	r3
   11080:	andeq	sl, r2, pc, asr #2
   11084:	andeq	sl, r2, ip, asr #2
   11088:	andeq	r0, r0, r0
   1108c:	ldr	r1, [pc, #36]	; 110b8 <dcngettext@plt+0xc8>
   11090:	ldr	r0, [pc, #36]	; 110bc <dcngettext@plt+0xcc>
   11094:	sub	r1, r1, r0
   11098:	asr	r1, r1, #2
   1109c:	add	r1, r1, r1, lsr #31
   110a0:	asrs	r1, r1, #1
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <dcngettext@plt+0xd0>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	sl, r2, ip, asr #2
   110bc:	andeq	sl, r2, ip, asr #2
   110c0:	andeq	r0, r0, r0
   110c4:	push	{r4, lr}
   110c8:	ldr	r4, [pc, #24]	; 110e8 <dcngettext@plt+0xf8>
   110cc:	ldrb	r3, [r4]
   110d0:	cmp	r3, #0
   110d4:	popne	{r4, pc}
   110d8:	bl	1105c <dcngettext@plt+0x6c>
   110dc:	mov	r3, #1
   110e0:	strb	r3, [r4]
   110e4:	pop	{r4, pc}
   110e8:	andeq	sl, r2, r0, ror r1
   110ec:	ldr	r0, [pc, #40]	; 1111c <dcngettext@plt+0x12c>
   110f0:	ldr	r3, [r0]
   110f4:	cmp	r3, #0
   110f8:	bne	11100 <dcngettext@plt+0x110>
   110fc:	b	1108c <dcngettext@plt+0x9c>
   11100:	ldr	r3, [pc, #24]	; 11120 <dcngettext@plt+0x130>
   11104:	cmp	r3, #0
   11108:	beq	110fc <dcngettext@plt+0x10c>
   1110c:	push	{r4, lr}
   11110:	blx	r3
   11114:	pop	{r4, lr}
   11118:	b	1108c <dcngettext@plt+0x9c>
   1111c:	andeq	r9, r2, r4, lsl pc
   11120:	andeq	r0, r0, r0
   11124:	cmp	r1, #0
   11128:	bxeq	lr
   1112c:	push	{r4, r5, r6, r7, r8, lr}
   11130:	add	lr, r0, #1
   11134:	mov	ip, r0
   11138:	mov	r3, #0
   1113c:	sub	r4, r1, #1
   11140:	mov	r8, #10
   11144:	mov	r7, #13
   11148:	mov	r6, #92	; 0x5c
   1114c:	b	11190 <dcngettext@plt+0x1a0>
   11150:	mov	r5, lr
   11154:	strb	r8, [ip]
   11158:	b	1117c <dcngettext@plt+0x18c>
   1115c:	mov	r5, lr
   11160:	strb	r7, [ip]
   11164:	b	1117c <dcngettext@plt+0x18c>
   11168:	mov	r5, lr
   1116c:	strb	r6, [ip]
   11170:	b	1117c <dcngettext@plt+0x18c>
   11174:	mov	r5, lr
   11178:	strb	r2, [ip]
   1117c:	add	r3, r3, #1
   11180:	add	lr, lr, #1
   11184:	add	ip, ip, #1
   11188:	cmp	r1, r3
   1118c:	bls	111d4 <dcngettext@plt+0x1e4>
   11190:	ldrb	r2, [r0, r3]
   11194:	cmp	r2, #0
   11198:	beq	111e8 <dcngettext@plt+0x1f8>
   1119c:	cmp	r2, #92	; 0x5c
   111a0:	bne	11174 <dcngettext@plt+0x184>
   111a4:	cmp	r4, r3
   111a8:	beq	111f0 <dcngettext@plt+0x200>
   111ac:	add	r3, r3, #1
   111b0:	ldrb	r2, [r0, r3]
   111b4:	cmp	r2, #110	; 0x6e
   111b8:	beq	11150 <dcngettext@plt+0x160>
   111bc:	cmp	r2, #114	; 0x72
   111c0:	beq	1115c <dcngettext@plt+0x16c>
   111c4:	cmp	r2, #92	; 0x5c
   111c8:	beq	11168 <dcngettext@plt+0x178>
   111cc:	mov	r0, #0
   111d0:	pop	{r4, r5, r6, r7, r8, pc}
   111d4:	add	r1, r0, r1
   111d8:	cmp	r5, r1
   111dc:	movcc	r3, #0
   111e0:	strbcc	r3, [r5]
   111e4:	pop	{r4, r5, r6, r7, r8, pc}
   111e8:	mov	r0, #0
   111ec:	pop	{r4, r5, r6, r7, r8, pc}
   111f0:	mov	r0, #0
   111f4:	pop	{r4, r5, r6, r7, r8, pc}
   111f8:	push	{r4, r5, r6, lr}
   111fc:	mov	r5, r0
   11200:	ldr	r3, [pc, #80]	; 11258 <dcngettext@plt+0x268>
   11204:	ldr	r4, [r3]
   11208:	cmp	r4, #0
   1120c:	beq	11240 <dcngettext@plt+0x250>
   11210:	bl	10ec4 <__ctype_b_loc@plt>
   11214:	ldr	r0, [r0]
   11218:	mov	r2, r5
   1121c:	add	r1, r5, r4
   11220:	ldrb	r3, [r2], #1
   11224:	lsl	r3, r3, #1
   11228:	ldrh	r3, [r0, r3]
   1122c:	tst	r3, #4096	; 0x1000
   11230:	beq	11250 <dcngettext@plt+0x260>
   11234:	mov	r5, r2
   11238:	cmp	r2, r1
   1123c:	bne	11220 <dcngettext@plt+0x230>
   11240:	ldrb	r0, [r5]
   11244:	clz	r0, r0
   11248:	lsr	r0, r0, #5
   1124c:	pop	{r4, r5, r6, pc}
   11250:	mov	r0, #0
   11254:	pop	{r4, r5, r6, pc}
   11258:	andeq	sl, r2, r4, ror r1
   1125c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11260:	mov	r4, r0
   11264:	cmp	r1, #0
   11268:	beq	11298 <dcngettext@plt+0x2a8>
   1126c:	ldrb	r1, [r0]
   11270:	cmp	r1, #0
   11274:	beq	11294 <dcngettext@plt+0x2a4>
   11278:	ldr	r5, [pc, #188]	; 1133c <dcngettext@plt+0x34c>
   1127c:	ldr	sl, [pc, #188]	; 11340 <dcngettext@plt+0x350>
   11280:	mov	r7, #2
   11284:	mov	r6, #1
   11288:	ldr	r9, [pc, #180]	; 11344 <dcngettext@plt+0x354>
   1128c:	ldr	r8, [pc, #180]	; 11348 <dcngettext@plt+0x358>
   11290:	b	112c8 <dcngettext@plt+0x2d8>
   11294:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11298:	ldr	r3, [pc, #156]	; 1133c <dcngettext@plt+0x34c>
   1129c:	ldr	r1, [r3]
   112a0:	bl	10d68 <fputs_unlocked@plt>
   112a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112a8:	ldr	r3, [r5]
   112ac:	mov	r2, r7
   112b0:	mov	r1, r6
   112b4:	mov	r0, r9
   112b8:	bl	10de0 <fwrite_unlocked@plt>
   112bc:	ldrb	r1, [r4, #1]!
   112c0:	cmp	r1, #0
   112c4:	beq	11338 <dcngettext@plt+0x348>
   112c8:	cmp	r1, #13
   112cc:	beq	11308 <dcngettext@plt+0x318>
   112d0:	cmp	r1, #92	; 0x5c
   112d4:	beq	11320 <dcngettext@plt+0x330>
   112d8:	cmp	r1, #10
   112dc:	beq	112a8 <dcngettext@plt+0x2b8>
   112e0:	ldr	r0, [r5]
   112e4:	ldr	r3, [r0, #20]
   112e8:	ldr	r2, [r0, #24]
   112ec:	cmp	r3, r2
   112f0:	addcc	r2, r3, #1
   112f4:	strcc	r2, [r0, #20]
   112f8:	strbcc	r1, [r3]
   112fc:	bcc	112bc <dcngettext@plt+0x2cc>
   11300:	bl	10f6c <__overflow@plt>
   11304:	b	112bc <dcngettext@plt+0x2cc>
   11308:	ldr	r3, [r5]
   1130c:	mov	r2, r7
   11310:	mov	r1, r6
   11314:	mov	r0, r8
   11318:	bl	10de0 <fwrite_unlocked@plt>
   1131c:	b	112bc <dcngettext@plt+0x2cc>
   11320:	ldr	r3, [r5]
   11324:	mov	r2, r7
   11328:	mov	r1, r6
   1132c:	mov	r0, sl
   11330:	bl	10de0 <fwrite_unlocked@plt>
   11334:	b	112bc <dcngettext@plt+0x2cc>
   11338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1133c:	andeq	sl, r2, ip, ror #2
   11340:	andeq	r8, r1, r8, ror sl
   11344:	andeq	r8, r1, r0, ror sl
   11348:	andeq	r8, r1, r4, ror sl
   1134c:	push	{r4, r5, r6, r7, r8, lr}
   11350:	mov	r6, r0
   11354:	mov	r4, r2
   11358:	mov	r5, r3
   1135c:	ldr	r1, [pc, #368]	; 114d4 <dcngettext@plt+0x4e4>
   11360:	bl	10d8c <strcmp@plt>
   11364:	mov	r3, #0
   11368:	strb	r3, [r5]
   1136c:	cmp	r0, r3
   11370:	bne	113cc <dcngettext@plt+0x3dc>
   11374:	mov	r2, #1
   11378:	ldr	r3, [pc, #344]	; 114d8 <dcngettext@plt+0x4e8>
   1137c:	strb	r2, [r3, #4]
   11380:	ldr	r3, [pc, #340]	; 114dc <dcngettext@plt+0x4ec>
   11384:	ldr	r5, [r3]
   11388:	mov	r1, #2
   1138c:	mov	r0, r5
   11390:	bl	153d4 <dcngettext@plt+0x43e4>
   11394:	mov	r1, r4
   11398:	mov	r0, r5
   1139c:	bl	12cf8 <dcngettext@plt+0x1d08>
   113a0:	subs	r4, r0, #0
   113a4:	beq	113b0 <dcngettext@plt+0x3c0>
   113a8:	bl	10ef4 <__errno_location@plt>
   113ac:	ldr	r4, [r0]
   113b0:	mov	r0, r5
   113b4:	bl	10f9c <clearerr_unlocked@plt>
   113b8:	cmp	r4, #0
   113bc:	moveq	r4, #1
   113c0:	bne	11474 <dcngettext@plt+0x484>
   113c4:	mov	r0, r4
   113c8:	pop	{r4, r5, r6, r7, r8, pc}
   113cc:	ldr	r1, [pc, #268]	; 114e0 <dcngettext@plt+0x4f0>
   113d0:	mov	r0, r6
   113d4:	bl	15514 <dcngettext@plt+0x4524>
   113d8:	subs	r7, r0, #0
   113dc:	beq	11418 <dcngettext@plt+0x428>
   113e0:	mov	r1, #2
   113e4:	mov	r0, r7
   113e8:	bl	153d4 <dcngettext@plt+0x43e4>
   113ec:	mov	r1, r4
   113f0:	mov	r0, r7
   113f4:	bl	12cf8 <dcngettext@plt+0x1d08>
   113f8:	cmp	r0, #0
   113fc:	bne	114a0 <dcngettext@plt+0x4b0>
   11400:	mov	r0, r7
   11404:	bl	15408 <dcngettext@plt+0x4418>
   11408:	cmp	r0, #0
   1140c:	bne	114c8 <dcngettext@plt+0x4d8>
   11410:	mov	r4, #1
   11414:	b	113c4 <dcngettext@plt+0x3d4>
   11418:	ldr	r3, [pc, #184]	; 114d8 <dcngettext@plt+0x4e8>
   1141c:	ldrb	r4, [r3, #5]
   11420:	cmp	r4, #0
   11424:	beq	11440 <dcngettext@plt+0x450>
   11428:	bl	10ef4 <__errno_location@plt>
   1142c:	ldr	r3, [r0]
   11430:	cmp	r3, #2
   11434:	moveq	r3, #1
   11438:	strbeq	r3, [r5]
   1143c:	beq	113c4 <dcngettext@plt+0x3d4>
   11440:	bl	10ef4 <__errno_location@plt>
   11444:	ldr	r4, [r0]
   11448:	mov	r2, r6
   1144c:	mov	r1, #3
   11450:	mov	r0, #0
   11454:	bl	17098 <dcngettext@plt+0x60a8>
   11458:	mov	r3, r0
   1145c:	ldr	r2, [pc, #128]	; 114e4 <dcngettext@plt+0x4f4>
   11460:	mov	r1, r4
   11464:	mov	r0, #0
   11468:	bl	10e70 <error@plt>
   1146c:	mov	r4, #0
   11470:	b	113c4 <dcngettext@plt+0x3d4>
   11474:	mov	r2, r6
   11478:	mov	r1, #3
   1147c:	mov	r0, #0
   11480:	bl	17098 <dcngettext@plt+0x60a8>
   11484:	mov	r3, r0
   11488:	ldr	r2, [pc, #84]	; 114e4 <dcngettext@plt+0x4f4>
   1148c:	mov	r1, r4
   11490:	mov	r0, #0
   11494:	bl	10e70 <error@plt>
   11498:	mov	r4, #0
   1149c:	b	113c4 <dcngettext@plt+0x3d4>
   114a0:	bl	10ef4 <__errno_location@plt>
   114a4:	ldr	r4, [r0]
   114a8:	mov	r0, r7
   114ac:	bl	15408 <dcngettext@plt+0x4418>
   114b0:	clz	r3, r4
   114b4:	lsr	r3, r3, #5
   114b8:	cmp	r0, #0
   114bc:	moveq	r3, #0
   114c0:	cmp	r3, #0
   114c4:	beq	113b8 <dcngettext@plt+0x3c8>
   114c8:	bl	10ef4 <__errno_location@plt>
   114cc:	ldr	r4, [r0]
   114d0:	b	113b8 <dcngettext@plt+0x3c8>
   114d4:	andeq	r8, r1, ip, ror sl
   114d8:	andeq	sl, r2, r4, ror r1
   114dc:	andeq	sl, r2, r8, ror #2
   114e0:	andeq	r8, r1, r0, lsl #21
   114e4:			; <UNDEFINED> instruction: 0x000196b0
   114e8:	push	{lr}		; (str lr, [sp, #-4]!)
   114ec:	sub	sp, sp, #60	; 0x3c
   114f0:	subs	r6, r0, #0
   114f4:	beq	11530 <dcngettext@plt+0x540>
   114f8:	ldr	r3, [pc, #916]	; 11894 <dcngettext@plt+0x8a4>
   114fc:	ldr	r4, [r3]
   11500:	mov	r2, #5
   11504:	ldr	r1, [pc, #908]	; 11898 <dcngettext@plt+0x8a8>
   11508:	mov	r0, #0
   1150c:	bl	10e04 <dcgettext@plt>
   11510:	ldr	r3, [pc, #900]	; 1189c <dcngettext@plt+0x8ac>
   11514:	ldr	r3, [r3]
   11518:	mov	r2, r0
   1151c:	mov	r1, #1
   11520:	mov	r0, r4
   11524:	bl	10f3c <__fprintf_chk@plt>
   11528:	mov	r0, r6
   1152c:	bl	10ed0 <exit@plt>
   11530:	mov	r2, #5
   11534:	ldr	r1, [pc, #868]	; 118a0 <dcngettext@plt+0x8b0>
   11538:	mov	r0, #0
   1153c:	bl	10e04 <dcgettext@plt>
   11540:	ldr	r3, [pc, #852]	; 1189c <dcngettext@plt+0x8ac>
   11544:	ldr	r2, [r3]
   11548:	mov	r1, r0
   1154c:	mov	r0, #1
   11550:	bl	10f24 <__printf_chk@plt>
   11554:	mov	r2, #5
   11558:	ldr	r1, [pc, #836]	; 118a4 <dcngettext@plt+0x8b4>
   1155c:	mov	r0, #0
   11560:	bl	10e04 <dcgettext@plt>
   11564:	mov	r3, #256	; 0x100
   11568:	ldr	r2, [pc, #824]	; 118a8 <dcngettext@plt+0x8b8>
   1156c:	mov	r1, r0
   11570:	mov	r0, #1
   11574:	bl	10f24 <__printf_chk@plt>
   11578:	mov	r2, #5
   1157c:	ldr	r1, [pc, #808]	; 118ac <dcngettext@plt+0x8bc>
   11580:	mov	r0, #0
   11584:	bl	10e04 <dcgettext@plt>
   11588:	ldr	r4, [pc, #800]	; 118b0 <dcngettext@plt+0x8c0>
   1158c:	ldr	r1, [r4]
   11590:	bl	10d68 <fputs_unlocked@plt>
   11594:	mov	r2, #5
   11598:	ldr	r1, [pc, #788]	; 118b4 <dcngettext@plt+0x8c4>
   1159c:	mov	r0, #0
   115a0:	bl	10e04 <dcgettext@plt>
   115a4:	ldr	r1, [r4]
   115a8:	bl	10d68 <fputs_unlocked@plt>
   115ac:	mov	r2, #5
   115b0:	ldr	r1, [pc, #768]	; 118b8 <dcngettext@plt+0x8c8>
   115b4:	mov	r0, #0
   115b8:	bl	10e04 <dcgettext@plt>
   115bc:	ldr	r1, [r4]
   115c0:	bl	10d68 <fputs_unlocked@plt>
   115c4:	mov	r2, #5
   115c8:	ldr	r1, [pc, #748]	; 118bc <dcngettext@plt+0x8cc>
   115cc:	mov	r0, #0
   115d0:	bl	10e04 <dcgettext@plt>
   115d4:	ldr	r1, [r4]
   115d8:	bl	10d68 <fputs_unlocked@plt>
   115dc:	mov	r2, #5
   115e0:	ldr	r1, [pc, #728]	; 118c0 <dcngettext@plt+0x8d0>
   115e4:	mov	r0, #0
   115e8:	bl	10e04 <dcgettext@plt>
   115ec:	ldr	r1, [r4]
   115f0:	bl	10d68 <fputs_unlocked@plt>
   115f4:	mov	r2, #5
   115f8:	ldr	r1, [pc, #708]	; 118c4 <dcngettext@plt+0x8d4>
   115fc:	mov	r0, #0
   11600:	bl	10e04 <dcgettext@plt>
   11604:	ldr	r1, [r4]
   11608:	bl	10d68 <fputs_unlocked@plt>
   1160c:	mov	r2, #5
   11610:	ldr	r1, [pc, #688]	; 118c8 <dcngettext@plt+0x8d8>
   11614:	mov	r0, #0
   11618:	bl	10e04 <dcgettext@plt>
   1161c:	ldr	r1, [r4]
   11620:	bl	10d68 <fputs_unlocked@plt>
   11624:	mov	r2, #5
   11628:	ldr	r1, [pc, #668]	; 118cc <dcngettext@plt+0x8dc>
   1162c:	mov	r0, #0
   11630:	bl	10e04 <dcgettext@plt>
   11634:	ldr	r1, [r4]
   11638:	bl	10d68 <fputs_unlocked@plt>
   1163c:	mov	r2, #5
   11640:	ldr	r1, [pc, #648]	; 118d0 <dcngettext@plt+0x8e0>
   11644:	mov	r0, #0
   11648:	bl	10e04 <dcgettext@plt>
   1164c:	ldr	r1, [r4]
   11650:	bl	10d68 <fputs_unlocked@plt>
   11654:	mov	r2, #5
   11658:	ldr	r1, [pc, #628]	; 118d4 <dcngettext@plt+0x8e4>
   1165c:	mov	r0, #0
   11660:	bl	10e04 <dcgettext@plt>
   11664:	ldr	r2, [pc, #620]	; 118d8 <dcngettext@plt+0x8e8>
   11668:	mov	r1, r0
   1166c:	mov	r0, #1
   11670:	bl	10f24 <__printf_chk@plt>
   11674:	mov	r2, #5
   11678:	ldr	r1, [pc, #604]	; 118dc <dcngettext@plt+0x8ec>
   1167c:	mov	r0, #0
   11680:	bl	10e04 <dcgettext@plt>
   11684:	ldr	r1, [r4]
   11688:	bl	10d68 <fputs_unlocked@plt>
   1168c:	mov	ip, sp
   11690:	ldr	lr, [pc, #584]	; 118e0 <dcngettext@plt+0x8f0>
   11694:	ldm	lr!, {r0, r1, r2, r3}
   11698:	stmia	ip!, {r0, r1, r2, r3}
   1169c:	ldm	lr!, {r0, r1, r2, r3}
   116a0:	stmia	ip!, {r0, r1, r2, r3}
   116a4:	ldm	lr!, {r0, r1, r2, r3}
   116a8:	stmia	ip!, {r0, r1, r2, r3}
   116ac:	ldm	lr, {r0, r1}
   116b0:	stm	ip, {r0, r1}
   116b4:	ldr	r1, [sp]
   116b8:	cmp	r1, #0
   116bc:	moveq	r4, sp
   116c0:	beq	116e8 <dcngettext@plt+0x6f8>
   116c4:	mov	r4, sp
   116c8:	ldr	r5, [pc, #532]	; 118e4 <dcngettext@plt+0x8f4>
   116cc:	mov	r0, r5
   116d0:	bl	10d8c <strcmp@plt>
   116d4:	cmp	r0, #0
   116d8:	beq	116e8 <dcngettext@plt+0x6f8>
   116dc:	ldr	r1, [r4, #8]!
   116e0:	cmp	r1, #0
   116e4:	bne	116cc <dcngettext@plt+0x6dc>
   116e8:	ldr	r4, [r4, #4]
   116ec:	cmp	r4, #0
   116f0:	beq	11804 <dcngettext@plt+0x814>
   116f4:	mov	r2, #5
   116f8:	ldr	r1, [pc, #488]	; 118e8 <dcngettext@plt+0x8f8>
   116fc:	mov	r0, #0
   11700:	bl	10e04 <dcgettext@plt>
   11704:	ldr	r3, [pc, #480]	; 118ec <dcngettext@plt+0x8fc>
   11708:	ldr	r2, [pc, #480]	; 118f0 <dcngettext@plt+0x900>
   1170c:	mov	r1, r0
   11710:	mov	r0, #1
   11714:	bl	10f24 <__printf_chk@plt>
   11718:	mov	r1, #0
   1171c:	mov	r0, #5
   11720:	bl	10f78 <setlocale@plt>
   11724:	cmp	r0, #0
   11728:	beq	11740 <dcngettext@plt+0x750>
   1172c:	mov	r2, #3
   11730:	ldr	r1, [pc, #444]	; 118f4 <dcngettext@plt+0x904>
   11734:	bl	10fcc <strncmp@plt>
   11738:	cmp	r0, #0
   1173c:	bne	117a0 <dcngettext@plt+0x7b0>
   11740:	mov	r2, #5
   11744:	ldr	r1, [pc, #428]	; 118f8 <dcngettext@plt+0x908>
   11748:	mov	r0, #0
   1174c:	bl	10e04 <dcgettext@plt>
   11750:	ldr	r5, [pc, #396]	; 118e4 <dcngettext@plt+0x8f4>
   11754:	mov	r3, r5
   11758:	ldr	r2, [pc, #396]	; 118ec <dcngettext@plt+0x8fc>
   1175c:	mov	r1, r0
   11760:	mov	r0, #1
   11764:	bl	10f24 <__printf_chk@plt>
   11768:	mov	r2, #5
   1176c:	ldr	r1, [pc, #392]	; 118fc <dcngettext@plt+0x90c>
   11770:	mov	r0, #0
   11774:	bl	10e04 <dcgettext@plt>
   11778:	mov	r1, r0
   1177c:	ldr	r2, [pc, #380]	; 11900 <dcngettext@plt+0x910>
   11780:	ldr	r3, [pc, #380]	; 11904 <dcngettext@plt+0x914>
   11784:	cmp	r4, r5
   11788:	movne	r3, r2
   1178c:	mov	r2, r4
   11790:	mov	r0, #1
   11794:	bl	10f24 <__printf_chk@plt>
   11798:	b	11528 <dcngettext@plt+0x538>
   1179c:	ldr	r4, [pc, #320]	; 118e4 <dcngettext@plt+0x8f4>
   117a0:	mov	r2, #5
   117a4:	ldr	r1, [pc, #348]	; 11908 <dcngettext@plt+0x918>
   117a8:	mov	r0, #0
   117ac:	bl	10e04 <dcgettext@plt>
   117b0:	ldr	r3, [pc, #248]	; 118b0 <dcngettext@plt+0x8c0>
   117b4:	ldr	r1, [r3]
   117b8:	bl	10d68 <fputs_unlocked@plt>
   117bc:	b	11740 <dcngettext@plt+0x750>
   117c0:	mov	r2, #5
   117c4:	ldr	r1, [pc, #300]	; 118f8 <dcngettext@plt+0x908>
   117c8:	mov	r0, #0
   117cc:	bl	10e04 <dcgettext@plt>
   117d0:	ldr	r4, [pc, #268]	; 118e4 <dcngettext@plt+0x8f4>
   117d4:	mov	r3, r4
   117d8:	ldr	r2, [pc, #268]	; 118ec <dcngettext@plt+0x8fc>
   117dc:	mov	r1, r0
   117e0:	mov	r0, #1
   117e4:	bl	10f24 <__printf_chk@plt>
   117e8:	mov	r2, #5
   117ec:	ldr	r1, [pc, #264]	; 118fc <dcngettext@plt+0x90c>
   117f0:	mov	r0, #0
   117f4:	bl	10e04 <dcgettext@plt>
   117f8:	mov	r1, r0
   117fc:	ldr	r3, [pc, #256]	; 11904 <dcngettext@plt+0x914>
   11800:	b	1178c <dcngettext@plt+0x79c>
   11804:	mov	r2, #5
   11808:	ldr	r1, [pc, #216]	; 118e8 <dcngettext@plt+0x8f8>
   1180c:	mov	r0, #0
   11810:	bl	10e04 <dcgettext@plt>
   11814:	ldr	r3, [pc, #208]	; 118ec <dcngettext@plt+0x8fc>
   11818:	ldr	r2, [pc, #208]	; 118f0 <dcngettext@plt+0x900>
   1181c:	mov	r1, r0
   11820:	mov	r0, #1
   11824:	bl	10f24 <__printf_chk@plt>
   11828:	mov	r1, #0
   1182c:	mov	r0, #5
   11830:	bl	10f78 <setlocale@plt>
   11834:	cmp	r0, #0
   11838:	beq	117c0 <dcngettext@plt+0x7d0>
   1183c:	mov	r2, #3
   11840:	ldr	r1, [pc, #172]	; 118f4 <dcngettext@plt+0x904>
   11844:	bl	10fcc <strncmp@plt>
   11848:	cmp	r0, #0
   1184c:	bne	1179c <dcngettext@plt+0x7ac>
   11850:	mov	r2, #5
   11854:	ldr	r1, [pc, #156]	; 118f8 <dcngettext@plt+0x908>
   11858:	mov	r0, #0
   1185c:	bl	10e04 <dcgettext@plt>
   11860:	ldr	r4, [pc, #124]	; 118e4 <dcngettext@plt+0x8f4>
   11864:	mov	r3, r4
   11868:	ldr	r2, [pc, #124]	; 118ec <dcngettext@plt+0x8fc>
   1186c:	mov	r1, r0
   11870:	mov	r0, #1
   11874:	bl	10f24 <__printf_chk@plt>
   11878:	mov	r2, #5
   1187c:	ldr	r1, [pc, #120]	; 118fc <dcngettext@plt+0x90c>
   11880:	mov	r0, #0
   11884:	bl	10e04 <dcgettext@plt>
   11888:	mov	r1, r0
   1188c:	ldr	r3, [pc, #112]	; 11904 <dcngettext@plt+0x914>
   11890:	b	1178c <dcngettext@plt+0x79c>
   11894:	andeq	sl, r2, r0, ror #2
   11898:	muleq	r1, r0, sl
   1189c:	andeq	sl, r2, ip, lsl #3
   118a0:			; <UNDEFINED> instruction: 0x00018ab8
   118a4:	ldrdeq	r8, [r1], -ip
   118a8:	andeq	r8, r1, r4, lsl #22
   118ac:	andeq	r8, r1, ip, lsl #22
   118b0:	andeq	sl, r2, ip, ror #2
   118b4:	andeq	r8, r1, r4, asr #22
   118b8:	andeq	r8, r1, r4, ror fp
   118bc:			; <UNDEFINED> instruction: 0x00018bbc
   118c0:	strdeq	r8, [r1], -r4
   118c4:	andeq	r8, r1, ip, lsr #24
   118c8:	andeq	r8, r1, ip, lsr #25
   118cc:	andeq	r8, r1, r4, ror #28
   118d0:	muleq	r1, r4, lr
   118d4:	andeq	r8, r1, ip, asr #29
   118d8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   118dc:	andeq	r8, r1, r4, lsl #30
   118e0:	andeq	r8, r1, r8, asr r9
   118e4:	andeq	r8, r1, r4, lsl #21
   118e8:	andeq	r9, r1, r4, asr r0
   118ec:	andeq	r9, r1, ip, rrx
   118f0:	muleq	r1, r4, r0
   118f4:	andeq	r9, r1, r4, lsr #1
   118f8:	strdeq	r9, [r1], -r0
   118fc:	andeq	r9, r1, ip, lsl #2
   11900:	andeq	r8, r1, r8, lsr #24
   11904:	ldrdeq	r9, [r1], -r4
   11908:	andeq	r9, r1, r8, lsr #1
   1190c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11910:	sub	sp, sp, #196	; 0xc4
   11914:	mov	r5, r0
   11918:	mov	r4, r1
   1191c:	ldr	r0, [r1]
   11920:	bl	156b0 <dcngettext@plt+0x46c0>
   11924:	ldr	r1, [pc, #3992]	; 128c4 <dcngettext@plt+0x18d4>
   11928:	mov	r0, #6
   1192c:	bl	10f78 <setlocale@plt>
   11930:	ldr	r6, [pc, #3984]	; 128c8 <dcngettext@plt+0x18d8>
   11934:	ldr	r1, [pc, #3984]	; 128cc <dcngettext@plt+0x18dc>
   11938:	mov	r0, r6
   1193c:	bl	10fb4 <bindtextdomain@plt>
   11940:	mov	r0, r6
   11944:	bl	10e1c <textdomain@plt>
   11948:	ldr	r0, [pc, #3968]	; 128d0 <dcngettext@plt+0x18e0>
   1194c:	bl	18934 <dcngettext@plt+0x7944>
   11950:	mov	r3, #0
   11954:	mov	r2, #1
   11958:	mov	r1, r3
   1195c:	ldr	r0, [pc, #3952]	; 128d4 <dcngettext@plt+0x18e4>
   11960:	ldr	r0, [r0]
   11964:	bl	10f0c <setvbuf@plt>
   11968:	mov	r3, #0
   1196c:	str	r3, [sp, #32]
   11970:	mvn	sl, #0
   11974:	str	r3, [sp, #16]
   11978:	ldr	r7, [pc, #3928]	; 128d8 <dcngettext@plt+0x18e8>
   1197c:	ldr	r6, [pc, #3928]	; 128dc <dcngettext@plt+0x18ec>
   11980:	ldr	r9, [pc, #3928]	; 128e0 <dcngettext@plt+0x18f0>
   11984:	mov	r8, #1
   11988:	str	r8, [sp, #20]
   1198c:	ldr	fp, [pc, #3920]	; 128e4 <dcngettext@plt+0x18f4>
   11990:	mov	r3, #0
   11994:	str	r3, [sp]
   11998:	mov	r3, r7
   1199c:	mov	r2, r6
   119a0:	mov	r1, r4
   119a4:	mov	r0, r5
   119a8:	bl	10eb8 <getopt_long@plt>
   119ac:	cmn	r0, #1
   119b0:	beq	11af4 <dcngettext@plt+0xb04>
   119b4:	cmp	r0, #119	; 0x77
   119b8:	beq	11a64 <dcngettext@plt+0xa74>
   119bc:	ble	119f4 <dcngettext@plt+0xa04>
   119c0:	ldr	r3, [pc, #3872]	; 128e8 <dcngettext@plt+0x18f8>
   119c4:	cmp	r0, r3
   119c8:	beq	11a50 <dcngettext@plt+0xa60>
   119cc:	ble	11a30 <dcngettext@plt+0xa40>
   119d0:	ldr	r3, [pc, #3860]	; 128ec <dcngettext@plt+0x18fc>
   119d4:	cmp	r0, r3
   119d8:	beq	11a8c <dcngettext@plt+0xa9c>
   119dc:	blt	11a78 <dcngettext@plt+0xa88>
   119e0:	cmp	r0, #260	; 0x104
   119e4:	bne	11ae4 <dcngettext@plt+0xaf4>
   119e8:	str	r8, [sp, #32]
   119ec:	ldr	sl, [sp, #20]
   119f0:	b	11990 <dcngettext@plt+0x9a0>
   119f4:	cmp	r0, #98	; 0x62
   119f8:	beq	11a48 <dcngettext@plt+0xa58>
   119fc:	bgt	11a18 <dcngettext@plt+0xa28>
   11a00:	cmn	r0, #3
   11a04:	beq	11aa0 <dcngettext@plt+0xab0>
   11a08:	cmn	r0, #2
   11a0c:	bne	11ae4 <dcngettext@plt+0xaf4>
   11a10:	mov	r0, #0
   11a14:	bl	114e8 <dcngettext@plt+0x4f8>
   11a18:	cmp	r0, #99	; 0x63
   11a1c:	beq	11aec <dcngettext@plt+0xafc>
   11a20:	cmp	r0, #116	; 0x74
   11a24:	bne	11ae4 <dcngettext@plt+0xaf4>
   11a28:	mov	sl, #0
   11a2c:	b	11990 <dcngettext@plt+0x9a0>
   11a30:	cmp	r0, #122	; 0x7a
   11a34:	beq	11a94 <dcngettext@plt+0xaa4>
   11a38:	cmp	r0, #256	; 0x100
   11a3c:	bne	11ae4 <dcngettext@plt+0xaf4>
   11a40:	strb	r8, [r9, #5]
   11a44:	b	11990 <dcngettext@plt+0x9a0>
   11a48:	mov	sl, r8
   11a4c:	b	11990 <dcngettext@plt+0x9a0>
   11a50:	strb	r8, [r9, #6]
   11a54:	mov	r3, #0
   11a58:	strb	r3, [r9, #7]
   11a5c:	strb	r3, [r9, #8]
   11a60:	b	11990 <dcngettext@plt+0x9a0>
   11a64:	mov	r3, #0
   11a68:	strb	r3, [r9, #6]
   11a6c:	strb	r8, [r9, #7]
   11a70:	strb	r3, [r9, #8]
   11a74:	b	11990 <dcngettext@plt+0x9a0>
   11a78:	mov	r3, #0
   11a7c:	strb	r3, [r9, #6]
   11a80:	strb	r3, [r9, #7]
   11a84:	strb	r8, [r9, #8]
   11a88:	b	11990 <dcngettext@plt+0x9a0>
   11a8c:	strb	r8, [r9, #9]
   11a90:	b	11990 <dcngettext@plt+0x9a0>
   11a94:	mov	r3, #0
   11a98:	strb	r3, [fp]
   11a9c:	b	11990 <dcngettext@plt+0x9a0>
   11aa0:	mov	r4, #0
   11aa4:	str	r4, [sp, #12]
   11aa8:	ldr	r3, [pc, #3648]	; 128f0 <dcngettext@plt+0x1900>
   11aac:	str	r3, [sp, #8]
   11ab0:	ldr	r3, [pc, #3644]	; 128f4 <dcngettext@plt+0x1904>
   11ab4:	str	r3, [sp, #4]
   11ab8:	ldr	r3, [pc, #3640]	; 128f8 <dcngettext@plt+0x1908>
   11abc:	str	r3, [sp]
   11ac0:	ldr	r3, [pc, #3636]	; 128fc <dcngettext@plt+0x190c>
   11ac4:	ldr	r3, [r3]
   11ac8:	ldr	r2, [pc, #3632]	; 12900 <dcngettext@plt+0x1910>
   11acc:	ldr	r1, [pc, #3632]	; 12904 <dcngettext@plt+0x1914>
   11ad0:	ldr	r0, [pc, #3580]	; 128d4 <dcngettext@plt+0x18e4>
   11ad4:	ldr	r0, [r0]
   11ad8:	bl	176e0 <dcngettext@plt+0x66f0>
   11adc:	mov	r0, r4
   11ae0:	bl	10ed0 <exit@plt>
   11ae4:	mov	r0, #1
   11ae8:	bl	114e8 <dcngettext@plt+0x4f8>
   11aec:	str	r8, [sp, #16]
   11af0:	b	11990 <dcngettext@plt+0x9a0>
   11af4:	ldr	r3, [pc, #3556]	; 128e0 <dcngettext@plt+0x18f0>
   11af8:	mov	r2, #66	; 0x42
   11afc:	str	r2, [r3, #12]
   11b00:	mov	r2, #64	; 0x40
   11b04:	str	r2, [r3]
   11b08:	ldr	r3, [sp, #32]
   11b0c:	cmp	sl, #0
   11b10:	movne	r3, #0
   11b14:	andeq	r3, r3, #1
   11b18:	cmp	r3, #0
   11b1c:	bne	11c38 <dcngettext@plt+0xc48>
   11b20:	ldr	r3, [pc, #3516]	; 128e4 <dcngettext@plt+0x18f4>
   11b24:	ldrb	r3, [r3]
   11b28:	ldr	r2, [sp, #16]
   11b2c:	cmp	r3, #10
   11b30:	moveq	r2, #0
   11b34:	andne	r2, r2, #1
   11b38:	cmp	r2, #0
   11b3c:	bne	11c60 <dcngettext@plt+0xc70>
   11b40:	ldr	r3, [sp, #16]
   11b44:	ldr	r2, [sp, #32]
   11b48:	tst	r3, r2
   11b4c:	bne	11c88 <dcngettext@plt+0xc98>
   11b50:	ldr	r3, [sp, #16]
   11b54:	cmp	sl, #0
   11b58:	movlt	r3, #0
   11b5c:	andge	r3, r3, #1
   11b60:	cmp	r3, #0
   11b64:	bne	11cb0 <dcngettext@plt+0xcc0>
   11b68:	ldr	r3, [pc, #3440]	; 128e0 <dcngettext@plt+0x18f0>
   11b6c:	ldrb	r3, [r3, #5]
   11b70:	eor	r3, r3, #1
   11b74:	ldr	r2, [sp, #16]
   11b78:	orrs	r3, r2, r3
   11b7c:	beq	11cd8 <dcngettext@plt+0xce8>
   11b80:	ldr	r3, [pc, #3416]	; 128e0 <dcngettext@plt+0x18f0>
   11b84:	ldrb	r3, [r3, #6]
   11b88:	eor	r3, r3, #1
   11b8c:	ldr	r2, [sp, #16]
   11b90:	orrs	r3, r2, r3
   11b94:	beq	11d00 <dcngettext@plt+0xd10>
   11b98:	ldr	r3, [pc, #3392]	; 128e0 <dcngettext@plt+0x18f0>
   11b9c:	ldrb	r3, [r3, #7]
   11ba0:	eor	r3, r3, #1
   11ba4:	ldr	r2, [sp, #16]
   11ba8:	orrs	r3, r2, r3
   11bac:	beq	11d28 <dcngettext@plt+0xd38>
   11bb0:	ldr	r3, [pc, #3368]	; 128e0 <dcngettext@plt+0x18f0>
   11bb4:	ldrb	r3, [r3, #8]
   11bb8:	eor	r3, r3, #1
   11bbc:	ldr	r2, [sp, #16]
   11bc0:	orrs	r3, r2, r3
   11bc4:	str	r3, [sp, #40]	; 0x28
   11bc8:	beq	11d50 <dcngettext@plt+0xd60>
   11bcc:	ldr	r3, [sp, #16]
   11bd0:	eor	r3, r3, #1
   11bd4:	ldr	r2, [pc, #3332]	; 128e0 <dcngettext@plt+0x18f0>
   11bd8:	ldrb	r2, [r2, #9]
   11bdc:	ands	r3, r2, r3
   11be0:	str	r3, [sp, #36]	; 0x24
   11be4:	bne	11d78 <dcngettext@plt+0xd88>
   11be8:	bic	r3, sl, sl, asr #31
   11bec:	str	r3, [sp, #92]	; 0x5c
   11bf0:	add	r3, r4, r5, lsl #2
   11bf4:	str	r3, [sp, #56]	; 0x38
   11bf8:	ldr	r3, [pc, #3336]	; 12908 <dcngettext@plt+0x1918>
   11bfc:	ldr	r3, [r3]
   11c00:	cmp	r5, r3
   11c04:	ldreq	r3, [pc, #3328]	; 1290c <dcngettext@plt+0x191c>
   11c08:	streq	r3, [r4, r5, lsl #2]
   11c0c:	ldreq	r3, [sp, #56]	; 0x38
   11c10:	addeq	r3, r3, #4
   11c14:	streq	r3, [sp, #56]	; 0x38
   11c18:	ldr	r3, [pc, #3304]	; 12908 <dcngettext@plt+0x1918>
   11c1c:	ldr	r3, [r3]
   11c20:	add	r3, r4, r3, lsl #2
   11c24:	str	r3, [sp, #20]
   11c28:	ldr	fp, [pc, #3248]	; 128e0 <dcngettext@plt+0x18f0>
   11c2c:	add	r3, sp, #120	; 0x78
   11c30:	str	r3, [sp, #84]	; 0x54
   11c34:	b	12714 <dcngettext@plt+0x1724>
   11c38:	mov	r2, #5
   11c3c:	ldr	r1, [pc, #3276]	; 12910 <dcngettext@plt+0x1920>
   11c40:	mov	r0, #0
   11c44:	bl	10e04 <dcgettext@plt>
   11c48:	mov	r2, r0
   11c4c:	mov	r1, #0
   11c50:	mov	r0, r1
   11c54:	bl	10e70 <error@plt>
   11c58:	mov	r0, #1
   11c5c:	bl	114e8 <dcngettext@plt+0x4f8>
   11c60:	mov	r2, #5
   11c64:	ldr	r1, [pc, #3240]	; 12914 <dcngettext@plt+0x1924>
   11c68:	mov	r0, #0
   11c6c:	bl	10e04 <dcgettext@plt>
   11c70:	mov	r2, r0
   11c74:	mov	r1, #0
   11c78:	mov	r0, r1
   11c7c:	bl	10e70 <error@plt>
   11c80:	mov	r0, #1
   11c84:	bl	114e8 <dcngettext@plt+0x4f8>
   11c88:	mov	r2, #5
   11c8c:	ldr	r1, [pc, #3204]	; 12918 <dcngettext@plt+0x1928>
   11c90:	mov	r0, #0
   11c94:	bl	10e04 <dcgettext@plt>
   11c98:	mov	r2, r0
   11c9c:	mov	r1, #0
   11ca0:	mov	r0, r1
   11ca4:	bl	10e70 <error@plt>
   11ca8:	mov	r0, #1
   11cac:	bl	114e8 <dcngettext@plt+0x4f8>
   11cb0:	mov	r2, #5
   11cb4:	ldr	r1, [pc, #3168]	; 1291c <dcngettext@plt+0x192c>
   11cb8:	mov	r0, #0
   11cbc:	bl	10e04 <dcgettext@plt>
   11cc0:	mov	r2, r0
   11cc4:	mov	r1, #0
   11cc8:	mov	r0, r1
   11ccc:	bl	10e70 <error@plt>
   11cd0:	mov	r0, #1
   11cd4:	bl	114e8 <dcngettext@plt+0x4f8>
   11cd8:	mov	r2, #5
   11cdc:	ldr	r1, [pc, #3132]	; 12920 <dcngettext@plt+0x1930>
   11ce0:	mov	r0, #0
   11ce4:	bl	10e04 <dcgettext@plt>
   11ce8:	mov	r2, r0
   11cec:	mov	r1, #0
   11cf0:	mov	r0, r1
   11cf4:	bl	10e70 <error@plt>
   11cf8:	mov	r0, #1
   11cfc:	bl	114e8 <dcngettext@plt+0x4f8>
   11d00:	mov	r2, #5
   11d04:	ldr	r1, [pc, #3096]	; 12924 <dcngettext@plt+0x1934>
   11d08:	mov	r0, #0
   11d0c:	bl	10e04 <dcgettext@plt>
   11d10:	mov	r2, r0
   11d14:	mov	r1, #0
   11d18:	mov	r0, r1
   11d1c:	bl	10e70 <error@plt>
   11d20:	mov	r0, #1
   11d24:	bl	114e8 <dcngettext@plt+0x4f8>
   11d28:	mov	r2, #5
   11d2c:	ldr	r1, [pc, #3060]	; 12928 <dcngettext@plt+0x1938>
   11d30:	mov	r0, #0
   11d34:	bl	10e04 <dcgettext@plt>
   11d38:	mov	r2, r0
   11d3c:	mov	r1, #0
   11d40:	mov	r0, r1
   11d44:	bl	10e70 <error@plt>
   11d48:	mov	r0, #1
   11d4c:	bl	114e8 <dcngettext@plt+0x4f8>
   11d50:	mov	r2, #5
   11d54:	ldr	r1, [pc, #3024]	; 1292c <dcngettext@plt+0x193c>
   11d58:	mov	r0, #0
   11d5c:	bl	10e04 <dcgettext@plt>
   11d60:	mov	r2, r0
   11d64:	mov	r1, #0
   11d68:	mov	r0, r1
   11d6c:	bl	10e70 <error@plt>
   11d70:	mov	r0, #1
   11d74:	bl	114e8 <dcngettext@plt+0x4f8>
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #2988]	; 12930 <dcngettext@plt+0x1940>
   11d80:	mov	r0, #0
   11d84:	bl	10e04 <dcgettext@plt>
   11d88:	mov	r2, r0
   11d8c:	mov	r1, #0
   11d90:	mov	r0, r1
   11d94:	bl	10e70 <error@plt>
   11d98:	mov	r0, #1
   11d9c:	bl	114e8 <dcngettext@plt+0x4f8>
   11da0:	ldr	r1, [pc, #2956]	; 12934 <dcngettext@plt+0x1944>
   11da4:	mov	r0, r6
   11da8:	bl	15514 <dcngettext@plt+0x4524>
   11dac:	subs	r7, r0, #0
   11db0:	strne	r6, [sp, #60]	; 0x3c
   11db4:	bne	12774 <dcngettext@plt+0x1784>
   11db8:	bl	10ef4 <__errno_location@plt>
   11dbc:	ldr	r4, [r0]
   11dc0:	mov	r2, r6
   11dc4:	mov	r1, #3
   11dc8:	mov	r0, #0
   11dcc:	bl	17098 <dcngettext@plt+0x60a8>
   11dd0:	mov	r3, r0
   11dd4:	ldr	r2, [pc, #2908]	; 12938 <dcngettext@plt+0x1948>
   11dd8:	mov	r1, r4
   11ddc:	mov	r0, #0
   11de0:	bl	10e70 <error@plt>
   11de4:	ldr	r3, [sp, #36]	; 0x24
   11de8:	b	12450 <dcngettext@plt+0x1460>
   11dec:	mov	r2, #5
   11df0:	ldr	r1, [pc, #2884]	; 1293c <dcngettext@plt+0x194c>
   11df4:	mov	r0, #0
   11df8:	bl	10e04 <dcgettext@plt>
   11dfc:	mov	r4, r0
   11e00:	ldr	r2, [sp, #60]	; 0x3c
   11e04:	mov	r1, #3
   11e08:	mov	r0, #0
   11e0c:	bl	17098 <dcngettext@plt+0x60a8>
   11e10:	mov	r3, r0
   11e14:	mov	r2, r4
   11e18:	mov	r1, #0
   11e1c:	mov	r0, #1
   11e20:	bl	10e70 <error@plt>
   11e24:	mov	sl, #0
   11e28:	b	12028 <dcngettext@plt+0x1038>
   11e2c:	ldrb	r3, [r6, r3]
   11e30:	cmp	r3, #41	; 0x29
   11e34:	bne	11f5c <dcngettext@plt+0xf6c>
   11e38:	ldr	r5, [sp, #48]	; 0x30
   11e3c:	b	12ae0 <dcngettext@plt+0x1af0>
   11e40:	mov	r1, r4
   11e44:	ldr	r0, [sp, #48]	; 0x30
   11e48:	bl	11124 <dcngettext@plt+0x134>
   11e4c:	cmp	r0, #0
   11e50:	bne	12aec <dcngettext@plt+0x1afc>
   11e54:	b	11f5c <dcngettext@plt+0xf6c>
   11e58:	add	r4, r4, #1
   11e5c:	ldrb	r3, [r2, r4]
   11e60:	cmp	r3, #9
   11e64:	cmpne	r3, #32
   11e68:	beq	11e58 <dcngettext@plt+0xe68>
   11e6c:	cmp	r3, #61	; 0x3d
   11e70:	bne	11f5c <dcngettext@plt+0xf6c>
   11e74:	add	r4, r4, #1
   11e78:	ldr	r3, [sp, #48]	; 0x30
   11e7c:	add	r3, r3, r4
   11e80:	mov	r5, r3
   11e84:	ldrb	r2, [r3], #1
   11e88:	cmp	r2, #9
   11e8c:	cmpne	r2, #32
   11e90:	beq	11e80 <dcngettext@plt+0xe90>
   11e94:	mov	r0, r5
   11e98:	bl	111f8 <dcngettext@plt+0x208>
   11e9c:	b	120fc <dcngettext@plt+0x110c>
   11ea0:	sub	r2, r4, sl
   11ea4:	ldrb	r1, [r6, sl]
   11ea8:	ldr	r3, [fp, #12]
   11eac:	cmp	r1, #92	; 0x5c
   11eb0:	addeq	r3, r3, #1
   11eb4:	cmp	r2, r3
   11eb8:	bcc	11f5c <dcngettext@plt+0xf6c>
   11ebc:	ldr	r3, [fp]
   11ec0:	add	sl, sl, r3
   11ec4:	ldrb	r3, [r6, sl]
   11ec8:	cmp	r3, #32
   11ecc:	cmpne	r3, #9
   11ed0:	bne	11f5c <dcngettext@plt+0xf6c>
   11ed4:	mov	r3, #0
   11ed8:	strb	r3, [r6, sl]
   11edc:	mov	r0, r5
   11ee0:	bl	111f8 <dcngettext@plt+0x208>
   11ee4:	cmp	r0, #0
   11ee8:	beq	11f5c <dcngettext@plt+0xf6c>
   11eec:	add	r1, sl, #1
   11ef0:	sub	r3, r4, r1
   11ef4:	cmp	r3, #1
   11ef8:	beq	11f0c <dcngettext@plt+0xf1c>
   11efc:	ldrb	r3, [r6, r1]
   11f00:	cmp	r3, #32
   11f04:	cmpne	r3, #42	; 0x2a
   11f08:	beq	120b4 <dcngettext@plt+0x10c4>
   11f0c:	ldr	r3, [pc, #2512]	; 128e4 <dcngettext@plt+0x18f4>
   11f10:	ldr	r3, [r3, #4]
   11f14:	cmp	r3, #0
   11f18:	beq	11f5c <dcngettext@plt+0xf6c>
   11f1c:	mov	r2, #1
   11f20:	ldr	r3, [pc, #2492]	; 128e4 <dcngettext@plt+0x18f4>
   11f24:	str	r2, [r3, #4]
   11f28:	add	r3, r6, r1
   11f2c:	str	r3, [sp, #48]	; 0x30
   11f30:	ldr	r3, [sp, #52]	; 0x34
   11f34:	cmp	r3, #0
   11f38:	bne	120e8 <dcngettext@plt+0x10f8>
   11f3c:	ldr	r3, [sp, #44]	; 0x2c
   11f40:	cmp	r3, #0
   11f44:	bne	12150 <dcngettext@plt+0x1160>
   11f48:	ldr	r1, [pc, #2492]	; 1290c <dcngettext@plt+0x191c>
   11f4c:	ldr	r0, [sp, #48]	; 0x30
   11f50:	bl	10d8c <strcmp@plt>
   11f54:	cmp	r0, #0
   11f58:	bne	12150 <dcngettext@plt+0x1160>
   11f5c:	ldrd	r2, [sp, #24]
   11f60:	adds	r2, r2, #1
   11f64:	adc	r3, r3, #0
   11f68:	strd	r2, [sp, #24]
   11f6c:	ldrb	r3, [fp, #7]
   11f70:	cmp	r3, #0
   11f74:	bne	12108 <dcngettext@plt+0x1118>
   11f78:	ldr	r3, [r7]
   11f7c:	tst	r3, #48	; 0x30
   11f80:	bne	123ec <dcngettext@plt+0x13fc>
   11f84:	adds	r8, r8, #1
   11f88:	adc	r9, r9, #0
   11f8c:	orrs	r3, r8, r9
   11f90:	beq	11dec <dcngettext@plt+0xdfc>
   11f94:	mov	r3, r7
   11f98:	mov	r2, #10
   11f9c:	add	r1, sp, #104	; 0x68
   11fa0:	add	r0, sp, #100	; 0x64
   11fa4:	bl	10d80 <__getdelim@plt>
   11fa8:	subs	r4, r0, #0
   11fac:	ble	123ec <dcngettext@plt+0x13fc>
   11fb0:	ldr	r3, [sp, #100]	; 0x64
   11fb4:	ldrb	r2, [r3]
   11fb8:	cmp	r2, #35	; 0x23
   11fbc:	beq	11f78 <dcngettext@plt+0xf88>
   11fc0:	add	r2, r3, r4
   11fc4:	ldrb	r0, [r2, #-1]
   11fc8:	cmp	r0, #10
   11fcc:	subeq	r4, r4, #1
   11fd0:	cmp	r4, #0
   11fd4:	movle	r2, r4
   11fd8:	subgt	r2, r4, #1
   11fdc:	ldrb	r0, [r3, r2]
   11fe0:	cmp	r0, #13
   11fe4:	subeq	r4, r4, #1
   11fe8:	cmp	r4, #0
   11fec:	beq	11f78 <dcngettext@plt+0xf88>
   11ff0:	mov	r2, #0
   11ff4:	strb	r2, [r3, r4]
   11ff8:	ldr	r6, [sp, #100]	; 0x64
   11ffc:	ldrb	r3, [r6]
   12000:	cmp	r3, #9
   12004:	cmpne	r3, #32
   12008:	bne	11e24 <dcngettext@plt+0xe34>
   1200c:	mov	r2, r6
   12010:	mov	sl, #0
   12014:	add	sl, sl, #1
   12018:	ldrb	r3, [r2, #1]!
   1201c:	cmp	r3, #9
   12020:	cmpne	r3, #32
   12024:	beq	12014 <dcngettext@plt+0x1024>
   12028:	cmp	r3, #92	; 0x5c
   1202c:	addeq	sl, sl, #1
   12030:	ldreq	r3, [sp, #16]
   12034:	ldrne	r3, [sp, #36]	; 0x24
   12038:	str	r3, [sp, #52]	; 0x34
   1203c:	add	r5, r6, sl
   12040:	mov	r2, #6
   12044:	ldr	r1, [pc, #2360]	; 12984 <dcngettext@plt+0x1994>
   12048:	mov	r0, r5
   1204c:	bl	10fcc <strncmp@plt>
   12050:	cmp	r0, #0
   12054:	bne	11ea0 <dcngettext@plt+0xeb0>
   12058:	add	r3, sl, #6
   1205c:	ldrb	r2, [r6, r3]
   12060:	cmp	r2, #32
   12064:	addeq	r3, sl, #7
   12068:	ldrb	r2, [r6, r3]
   1206c:	cmp	r2, #40	; 0x28
   12070:	bne	11f5c <dcngettext@plt+0xf6c>
   12074:	add	r3, r3, #1
   12078:	mov	r2, #0
   1207c:	str	r2, [sp, #108]	; 0x6c
   12080:	subs	r4, r4, r3
   12084:	beq	11f5c <dcngettext@plt+0xf6c>
   12088:	add	r2, r6, r3
   1208c:	str	r2, [sp, #48]	; 0x30
   12090:	sub	r4, r4, #1
   12094:	mov	r1, r2
   12098:	cmp	r4, #0
   1209c:	beq	11e2c <dcngettext@plt+0xe3c>
   120a0:	ldrb	r2, [r1, r4]
   120a4:	cmp	r2, #41	; 0x29
   120a8:	beq	12ad8 <dcngettext@plt+0x1ae8>
   120ac:	sub	r4, r4, #1
   120b0:	b	12098 <dcngettext@plt+0x10a8>
   120b4:	ldr	r2, [pc, #2088]	; 128e4 <dcngettext@plt+0x18f4>
   120b8:	ldr	r2, [r2, #4]
   120bc:	cmp	r2, #1
   120c0:	beq	11f28 <dcngettext@plt+0xf38>
   120c4:	mov	r1, #0
   120c8:	ldr	r2, [pc, #2068]	; 128e4 <dcngettext@plt+0x18f4>
   120cc:	str	r1, [r2, #4]
   120d0:	add	r1, sl, #2
   120d4:	cmp	r3, #42	; 0x2a
   120d8:	movne	r3, #0
   120dc:	moveq	r3, #1
   120e0:	str	r3, [sp, #108]	; 0x6c
   120e4:	b	11f28 <dcngettext@plt+0xf38>
   120e8:	sub	r1, r4, r1
   120ec:	ldr	r0, [sp, #48]	; 0x30
   120f0:	bl	11124 <dcngettext@plt+0x134>
   120f4:	adds	r0, r0, #0
   120f8:	movne	r0, #1
   120fc:	cmp	r0, #0
   12100:	bne	11f3c <dcngettext@plt+0xf4c>
   12104:	b	11f5c <dcngettext@plt+0xf6c>
   12108:	mov	r2, #5
   1210c:	ldr	r1, [pc, #2092]	; 12940 <dcngettext@plt+0x1950>
   12110:	mov	r0, #0
   12114:	bl	10e04 <dcgettext@plt>
   12118:	mov	r4, r0
   1211c:	ldr	r2, [sp, #60]	; 0x3c
   12120:	mov	r1, #3
   12124:	mov	r0, #0
   12128:	bl	17098 <dcngettext@plt+0x60a8>
   1212c:	ldr	r3, [pc, #2128]	; 12984 <dcngettext@plt+0x1994>
   12130:	str	r3, [sp, #8]
   12134:	strd	r8, [sp]
   12138:	mov	r3, r0
   1213c:	mov	r2, r4
   12140:	mov	r1, #0
   12144:	mov	r0, r1
   12148:	bl	10e70 <error@plt>
   1214c:	b	11f78 <dcngettext@plt+0xf88>
   12150:	ldrb	r3, [fp, #6]
   12154:	cmp	r3, #0
   12158:	ldrne	r0, [sp, #36]	; 0x24
   1215c:	bne	12174 <dcngettext@plt+0x1184>
   12160:	mov	r1, #10
   12164:	ldr	r0, [sp, #48]	; 0x30
   12168:	bl	10ee8 <strchr@plt>
   1216c:	adds	r0, r0, #0
   12170:	movne	r0, #1
   12174:	and	r3, r0, #1
   12178:	mov	r4, r3
   1217c:	str	r3, [sp, #52]	; 0x34
   12180:	add	r3, sp, #112	; 0x70
   12184:	str	r3, [sp]
   12188:	add	r3, sp, #99	; 0x63
   1218c:	ldr	r2, [sp, #84]	; 0x54
   12190:	add	r1, sp, #108	; 0x6c
   12194:	ldr	r0, [sp, #48]	; 0x30
   12198:	bl	1134c <dcngettext@plt+0x35c>
   1219c:	subs	r3, r0, #0
   121a0:	str	r3, [sp, #80]	; 0x50
   121a4:	bne	12238 <dcngettext@plt+0x1248>
   121a8:	ldrd	r2, [sp, #64]	; 0x40
   121ac:	adds	r2, r2, #1
   121b0:	adc	r3, r3, #0
   121b4:	strd	r2, [sp, #64]	; 0x40
   121b8:	ldrb	r3, [fp, #6]
   121bc:	cmp	r3, #0
   121c0:	bne	12220 <dcngettext@plt+0x1230>
   121c4:	cmp	r4, #0
   121c8:	beq	121f4 <dcngettext@plt+0x1204>
   121cc:	ldr	r3, [pc, #1792]	; 128d4 <dcngettext@plt+0x18e4>
   121d0:	ldr	r0, [r3]
   121d4:	ldr	r3, [r0, #20]
   121d8:	ldr	r2, [r0, #24]
   121dc:	cmp	r3, r2
   121e0:	addcc	r2, r3, #1
   121e4:	strcc	r2, [r0, #20]
   121e8:	movcc	r2, #92	; 0x5c
   121ec:	strbcc	r2, [r3]
   121f0:	bcs	1222c <dcngettext@plt+0x123c>
   121f4:	ldr	r1, [sp, #52]	; 0x34
   121f8:	ldr	r0, [sp, #48]	; 0x30
   121fc:	bl	1125c <dcngettext@plt+0x26c>
   12200:	mov	r2, #5
   12204:	ldr	r1, [pc, #1848]	; 12944 <dcngettext@plt+0x1954>
   12208:	mov	r0, #0
   1220c:	bl	10e04 <dcgettext@plt>
   12210:	mov	r2, r0
   12214:	ldr	r1, [pc, #1836]	; 12948 <dcngettext@plt+0x1958>
   12218:	mov	r0, #1
   1221c:	bl	10f24 <__printf_chk@plt>
   12220:	ldr	r3, [sp, #16]
   12224:	str	r3, [sp, #80]	; 0x50
   12228:	b	11f78 <dcngettext@plt+0xf88>
   1222c:	mov	r1, #92	; 0x5c
   12230:	bl	10f6c <__overflow@plt>
   12234:	b	121f4 <dcngettext@plt+0x1204>
   12238:	ldrb	r3, [fp, #5]
   1223c:	cmp	r3, #0
   12240:	beq	12250 <dcngettext@plt+0x1260>
   12244:	ldrb	r3, [sp, #99]	; 0x63
   12248:	cmp	r3, #0
   1224c:	bne	12220 <dcngettext@plt+0x1230>
   12250:	ldr	r6, [fp]
   12254:	lsrs	r6, r6, #1
   12258:	beq	123c8 <dcngettext@plt+0x13d8>
   1225c:	bl	10ea0 <__ctype_tolower_loc@plt>
   12260:	ldr	ip, [r0]
   12264:	mov	r2, r5
   12268:	ldr	r3, [sp, #84]	; 0x54
   1226c:	sub	r1, r3, #1
   12270:	mov	r4, #0
   12274:	ldr	r0, [pc, #1744]	; 1294c <dcngettext@plt+0x195c>
   12278:	ldrb	r3, [r1, #1]!
   1227c:	ldrb	sl, [r5, r4, lsl #1]
   12280:	add	lr, r0, r3, lsr #4
   12284:	ldrb	lr, [lr, #264]	; 0x108
   12288:	ldr	sl, [ip, sl, lsl #2]
   1228c:	cmp	sl, lr
   12290:	bne	12368 <dcngettext@plt+0x1378>
   12294:	ldrb	lr, [r2, #1]
   12298:	and	r3, r3, #15
   1229c:	add	r3, r0, r3
   122a0:	ldrb	r3, [r3, #264]	; 0x108
   122a4:	ldr	lr, [ip, lr, lsl #2]
   122a8:	cmp	lr, r3
   122ac:	bne	12368 <dcngettext@plt+0x1378>
   122b0:	add	r4, r4, #1
   122b4:	add	r2, r2, #2
   122b8:	cmp	r6, r4
   122bc:	bne	12278 <dcngettext@plt+0x1288>
   122c0:	ldrb	r3, [fp, #6]
   122c4:	str	r3, [sp, #88]	; 0x58
   122c8:	cmp	r3, #0
   122cc:	moveq	r4, r6
   122d0:	bne	12220 <dcngettext@plt+0x1230>
   122d4:	ldrb	r3, [fp, #8]
   122d8:	str	r3, [sp, #88]	; 0x58
   122dc:	cmp	r3, #0
   122e0:	bne	12220 <dcngettext@plt+0x1230>
   122e4:	ldr	r3, [sp, #52]	; 0x34
   122e8:	cmp	r3, #0
   122ec:	ldreq	r3, [sp, #80]	; 0x50
   122f0:	streq	r3, [sp, #88]	; 0x58
   122f4:	beq	12324 <dcngettext@plt+0x1334>
   122f8:	str	r3, [sp, #88]	; 0x58
   122fc:	ldr	r3, [pc, #1488]	; 128d4 <dcngettext@plt+0x18e4>
   12300:	ldr	r0, [r3]
   12304:	ldr	r3, [r0, #20]
   12308:	ldr	r2, [r0, #24]
   1230c:	cmp	r3, r2
   12310:	addcc	r2, r3, #1
   12314:	strcc	r2, [r0, #20]
   12318:	movcc	r2, #92	; 0x5c
   1231c:	strbcc	r2, [r3]
   12320:	bcs	123e0 <dcngettext@plt+0x13f0>
   12324:	ldr	r1, [sp, #52]	; 0x34
   12328:	ldr	r0, [sp, #48]	; 0x30
   1232c:	bl	1125c <dcngettext@plt+0x26c>
   12330:	cmp	r6, r4
   12334:	bne	123a4 <dcngettext@plt+0x13b4>
   12338:	ldrb	r3, [fp, #8]
   1233c:	cmp	r3, #0
   12340:	bne	12220 <dcngettext@plt+0x1230>
   12344:	mov	r2, #5
   12348:	ldr	r1, [pc, #1536]	; 12950 <dcngettext@plt+0x1960>
   1234c:	mov	r0, #0
   12350:	bl	10e04 <dcgettext@plt>
   12354:	mov	r2, r0
   12358:	ldr	r1, [pc, #1512]	; 12948 <dcngettext@plt+0x1958>
   1235c:	mov	r0, #1
   12360:	bl	10f24 <__printf_chk@plt>
   12364:	b	12220 <dcngettext@plt+0x1230>
   12368:	cmp	r6, r4
   1236c:	beq	122c0 <dcngettext@plt+0x12d0>
   12370:	ldrd	r2, [sp, #72]	; 0x48
   12374:	adds	r2, r2, #1
   12378:	adc	r3, r3, #0
   1237c:	strd	r2, [sp, #72]	; 0x48
   12380:	ldrb	r3, [fp, #6]
   12384:	cmp	r3, #0
   12388:	bne	12220 <dcngettext@plt+0x1230>
   1238c:	ldr	r3, [sp, #52]	; 0x34
   12390:	cmp	r3, #0
   12394:	bne	122fc <dcngettext@plt+0x130c>
   12398:	ldr	r1, [sp, #52]	; 0x34
   1239c:	ldr	r0, [sp, #48]	; 0x30
   123a0:	bl	1125c <dcngettext@plt+0x26c>
   123a4:	mov	r2, #5
   123a8:	ldr	r1, [pc, #1444]	; 12954 <dcngettext@plt+0x1964>
   123ac:	mov	r0, #0
   123b0:	bl	10e04 <dcgettext@plt>
   123b4:	mov	r2, r0
   123b8:	ldr	r1, [pc, #1416]	; 12948 <dcngettext@plt+0x1958>
   123bc:	mov	r0, #1
   123c0:	bl	10f24 <__printf_chk@plt>
   123c4:	b	12220 <dcngettext@plt+0x1230>
   123c8:	ldrb	r3, [fp, #6]
   123cc:	str	r3, [sp, #88]	; 0x58
   123d0:	cmp	r3, #0
   123d4:	bne	12220 <dcngettext@plt+0x1230>
   123d8:	mov	r4, r6
   123dc:	b	122d4 <dcngettext@plt+0x12e4>
   123e0:	mov	r1, #92	; 0x5c
   123e4:	bl	10f6c <__overflow@plt>
   123e8:	b	12324 <dcngettext@plt+0x1334>
   123ec:	ldr	r0, [sp, #100]	; 0x64
   123f0:	bl	155b0 <dcngettext@plt+0x45c0>
   123f4:	ldr	r3, [r7]
   123f8:	tst	r3, #32
   123fc:	mvneq	r4, #0
   12400:	movne	r4, #0
   12404:	ldr	r3, [sp, #44]	; 0x2c
   12408:	cmp	r3, #0
   1240c:	bne	12460 <dcngettext@plt+0x1470>
   12410:	mov	r0, r7
   12414:	bl	10f9c <clearerr_unlocked@plt>
   12418:	cmp	r4, #0
   1241c:	blt	1249c <dcngettext@plt+0x14ac>
   12420:	ldrne	r5, [pc, #1296]	; 12938 <dcngettext@plt+0x1948>
   12424:	beq	12484 <dcngettext@plt+0x1494>
   12428:	ldr	r2, [sp, #60]	; 0x3c
   1242c:	mov	r1, #3
   12430:	mov	r0, #0
   12434:	bl	17098 <dcngettext@plt+0x60a8>
   12438:	mov	r3, r0
   1243c:	mov	r2, r5
   12440:	mov	r1, r4
   12444:	mov	r0, #0
   12448:	bl	10e70 <error@plt>
   1244c:	ldr	r3, [sp, #36]	; 0x24
   12450:	ldr	r2, [sp, #40]	; 0x28
   12454:	and	r2, r2, r3
   12458:	str	r2, [sp, #40]	; 0x28
   1245c:	b	12714 <dcngettext@plt+0x1724>
   12460:	mov	r0, r7
   12464:	bl	15408 <dcngettext@plt+0x4418>
   12468:	adds	r0, r0, #0
   1246c:	movne	r0, #1
   12470:	ands	r3, r0, r4, lsr #31
   12474:	beq	12418 <dcngettext@plt+0x1428>
   12478:	bl	10ef4 <__errno_location@plt>
   1247c:	ldr	r4, [r0]
   12480:	b	12418 <dcngettext@plt+0x1428>
   12484:	mov	r2, #5
   12488:	ldr	r1, [pc, #1224]	; 12958 <dcngettext@plt+0x1968>
   1248c:	mov	r0, #0
   12490:	bl	10e04 <dcgettext@plt>
   12494:	mov	r5, r0
   12498:	b	12428 <dcngettext@plt+0x1438>
   1249c:	ldr	r3, [sp, #80]	; 0x50
   124a0:	cmp	r3, #0
   124a4:	beq	12664 <dcngettext@plt+0x1674>
   124a8:	ldrb	r3, [fp, #6]
   124ac:	cmp	r3, #0
   124b0:	bne	1261c <dcngettext@plt+0x162c>
   124b4:	ldrd	r0, [sp, #24]
   124b8:	mov	r2, r0
   124bc:	mov	r3, r1
   124c0:	orrs	r3, r2, r3
   124c4:	beq	12524 <dcngettext@plt+0x1534>
   124c8:	mvn	r2, #0
   124cc:	mov	r3, #0
   124d0:	cmp	r1, r3
   124d4:	cmpeq	r0, r2
   124d8:	ldrls	r3, [sp, #24]
   124dc:	bls	124f4 <dcngettext@plt+0x1504>
   124e0:	ldr	r2, [pc, #1140]	; 1295c <dcngettext@plt+0x196c>
   124e4:	mov	r3, #0
   124e8:	bl	1875c <dcngettext@plt+0x776c>
   124ec:	add	r3, r2, #999424	; 0xf4000
   124f0:	add	r3, r3, #576	; 0x240
   124f4:	mov	r2, #5
   124f8:	str	r2, [sp]
   124fc:	ldr	r2, [pc, #1116]	; 12960 <dcngettext@plt+0x1970>
   12500:	ldr	r1, [pc, #1116]	; 12964 <dcngettext@plt+0x1974>
   12504:	mov	r0, #0
   12508:	bl	10ff0 <dcngettext@plt>
   1250c:	ldrd	r2, [sp, #24]
   12510:	strd	r2, [sp]
   12514:	mov	r2, r0
   12518:	mov	r1, #0
   1251c:	mov	r0, r1
   12520:	bl	10e70 <error@plt>
   12524:	ldrd	r0, [sp, #64]	; 0x40
   12528:	mov	r2, r0
   1252c:	mov	r3, r1
   12530:	orrs	r3, r2, r3
   12534:	beq	12594 <dcngettext@plt+0x15a4>
   12538:	mvn	r2, #0
   1253c:	mov	r3, #0
   12540:	cmp	r1, r3
   12544:	cmpeq	r0, r2
   12548:	ldrls	r3, [sp, #64]	; 0x40
   1254c:	bls	12564 <dcngettext@plt+0x1574>
   12550:	ldr	r2, [pc, #1028]	; 1295c <dcngettext@plt+0x196c>
   12554:	mov	r3, #0
   12558:	bl	1875c <dcngettext@plt+0x776c>
   1255c:	add	r3, r2, #999424	; 0xf4000
   12560:	add	r3, r3, #576	; 0x240
   12564:	mov	r2, #5
   12568:	str	r2, [sp]
   1256c:	ldr	r2, [pc, #1012]	; 12968 <dcngettext@plt+0x1978>
   12570:	ldr	r1, [pc, #1012]	; 1296c <dcngettext@plt+0x197c>
   12574:	mov	r0, #0
   12578:	bl	10ff0 <dcngettext@plt>
   1257c:	ldrd	r2, [sp, #64]	; 0x40
   12580:	strd	r2, [sp]
   12584:	mov	r2, r0
   12588:	mov	r1, #0
   1258c:	mov	r0, r1
   12590:	bl	10e70 <error@plt>
   12594:	ldrd	r0, [sp, #72]	; 0x48
   12598:	mov	r2, r0
   1259c:	mov	r3, r1
   125a0:	orrs	r3, r2, r3
   125a4:	beq	12604 <dcngettext@plt+0x1614>
   125a8:	mvn	r2, #0
   125ac:	mov	r3, #0
   125b0:	cmp	r1, r3
   125b4:	cmpeq	r0, r2
   125b8:	ldrls	r3, [sp, #72]	; 0x48
   125bc:	bls	125d4 <dcngettext@plt+0x15e4>
   125c0:	ldr	r2, [pc, #916]	; 1295c <dcngettext@plt+0x196c>
   125c4:	mov	r3, #0
   125c8:	bl	1875c <dcngettext@plt+0x776c>
   125cc:	add	r3, r2, #999424	; 0xf4000
   125d0:	add	r3, r3, #576	; 0x240
   125d4:	mov	r2, #5
   125d8:	str	r2, [sp]
   125dc:	ldr	r2, [pc, #908]	; 12970 <dcngettext@plt+0x1980>
   125e0:	ldr	r1, [pc, #908]	; 12974 <dcngettext@plt+0x1984>
   125e4:	mov	r0, #0
   125e8:	bl	10ff0 <dcngettext@plt>
   125ec:	ldrd	r2, [sp, #72]	; 0x48
   125f0:	strd	r2, [sp]
   125f4:	mov	r2, r0
   125f8:	mov	r1, #0
   125fc:	mov	r0, r1
   12600:	bl	10e70 <error@plt>
   12604:	ldrb	r3, [fp, #5]
   12608:	eor	r3, r3, #1
   1260c:	ldr	r2, [sp, #88]	; 0x58
   12610:	orr	r3, r2, r3
   12614:	tst	r3, #255	; 0xff
   12618:	beq	126a8 <dcngettext@plt+0x16b8>
   1261c:	ldr	r3, [sp, #88]	; 0x58
   12620:	cmp	r3, #0
   12624:	moveq	r3, #0
   12628:	beq	126a0 <dcngettext@plt+0x16b0>
   1262c:	ldrd	r2, [sp, #64]	; 0x40
   12630:	ldrd	r0, [sp, #72]	; 0x48
   12634:	orr	r2, r2, r0
   12638:	orr	r3, r3, r1
   1263c:	orrs	r3, r2, r3
   12640:	movne	r3, #0
   12644:	bne	126a0 <dcngettext@plt+0x16b0>
   12648:	ldrb	r3, [fp, #9]
   1264c:	eor	r3, r3, #1
   12650:	ldrd	r0, [sp, #24]
   12654:	mov	r2, r0
   12658:	orrs	r2, r2, r1
   1265c:	orreq	r3, r3, #1
   12660:	b	126a0 <dcngettext@plt+0x16b0>
   12664:	mov	r2, #5
   12668:	ldr	r1, [pc, #776]	; 12978 <dcngettext@plt+0x1988>
   1266c:	mov	r0, #0
   12670:	bl	10e04 <dcgettext@plt>
   12674:	mov	r4, r0
   12678:	ldr	r2, [sp, #60]	; 0x3c
   1267c:	mov	r1, #3
   12680:	mov	r0, #0
   12684:	bl	17098 <dcngettext@plt+0x60a8>
   12688:	mov	r3, r0
   1268c:	mov	r2, r4
   12690:	mov	r1, #0
   12694:	mov	r0, r1
   12698:	bl	10e70 <error@plt>
   1269c:	mov	r3, #0
   126a0:	and	r3, r3, #1
   126a4:	b	12450 <dcngettext@plt+0x1460>
   126a8:	mov	r2, #5
   126ac:	ldr	r1, [pc, #712]	; 1297c <dcngettext@plt+0x198c>
   126b0:	mov	r0, #0
   126b4:	bl	10e04 <dcgettext@plt>
   126b8:	mov	r4, r0
   126bc:	ldr	r2, [sp, #60]	; 0x3c
   126c0:	mov	r1, #3
   126c4:	mov	r0, #0
   126c8:	bl	17098 <dcngettext@plt+0x60a8>
   126cc:	mov	r3, r0
   126d0:	mov	r2, r4
   126d4:	mov	r1, #0
   126d8:	mov	r0, r1
   126dc:	bl	10e70 <error@plt>
   126e0:	b	1261c <dcngettext@plt+0x162c>
   126e4:	add	r1, sp, #192	; 0xc0
   126e8:	ldr	r3, [sp, #92]	; 0x5c
   126ec:	str	r3, [r1, #-80]!	; 0xffffffb0
   126f0:	add	r3, sp, #120	; 0x78
   126f4:	str	r3, [sp]
   126f8:	add	r3, sp, #108	; 0x6c
   126fc:	add	r2, sp, #156	; 0x9c
   12700:	mov	r0, r6
   12704:	bl	1134c <dcngettext@plt+0x35c>
   12708:	subs	r7, r0, #0
   1270c:	bne	127ac <dcngettext@plt+0x17bc>
   12710:	str	r7, [sp, #40]	; 0x28
   12714:	ldr	r3, [sp, #56]	; 0x38
   12718:	ldr	r2, [sp, #20]
   1271c:	cmp	r3, r2
   12720:	bls	12a78 <dcngettext@plt+0x1a88>
   12724:	ldr	r3, [sp, #20]
   12728:	ldr	r6, [r3], #4
   1272c:	str	r3, [sp, #20]
   12730:	ldr	r3, [sp, #16]
   12734:	cmp	r3, #0
   12738:	beq	126e4 <dcngettext@plt+0x16f4>
   1273c:	ldr	r1, [pc, #456]	; 1290c <dcngettext@plt+0x191c>
   12740:	mov	r0, r6
   12744:	bl	10d8c <strcmp@plt>
   12748:	subs	r3, r0, #0
   1274c:	str	r3, [sp, #44]	; 0x2c
   12750:	bne	11da0 <dcngettext@plt+0xdb0>
   12754:	mov	r3, #1
   12758:	strb	r3, [fp, #4]
   1275c:	mov	r2, #5
   12760:	ldr	r1, [pc, #564]	; 1299c <dcngettext@plt+0x19ac>
   12764:	bl	10e04 <dcgettext@plt>
   12768:	str	r0, [sp, #60]	; 0x3c
   1276c:	ldr	r3, [pc, #548]	; 12998 <dcngettext@plt+0x19a8>
   12770:	ldr	r7, [r3]
   12774:	mov	r3, #0
   12778:	str	r3, [sp, #100]	; 0x64
   1277c:	str	r3, [sp, #104]	; 0x68
   12780:	ldr	r3, [sp, #36]	; 0x24
   12784:	str	r3, [sp, #88]	; 0x58
   12788:	str	r3, [sp, #80]	; 0x50
   1278c:	mov	r2, #0
   12790:	mov	r3, #0
   12794:	strd	r2, [sp, #72]	; 0x48
   12798:	strd	r2, [sp, #64]	; 0x40
   1279c:	strd	r2, [sp, #24]
   127a0:	mov	r8, #1
   127a4:	mov	r9, #0
   127a8:	b	11f94 <dcngettext@plt+0xfa4>
   127ac:	ldr	r8, [sp, #112]	; 0x70
   127b0:	ldr	r3, [pc, #300]	; 128e4 <dcngettext@plt+0x18f4>
   127b4:	ldrb	sl, [r3]
   127b8:	cmp	sl, #10
   127bc:	ldrne	r7, [sp, #16]
   127c0:	beq	1284c <dcngettext@plt+0x185c>
   127c4:	ldr	r3, [sp, #32]
   127c8:	cmp	r3, #0
   127cc:	bne	129a0 <dcngettext@plt+0x19b0>
   127d0:	ldr	r3, [fp]
   127d4:	cmp	r3, #1
   127d8:	bls	129fc <dcngettext@plt+0x1a0c>
   127dc:	add	r5, sp, #155	; 0x9b
   127e0:	mov	r4, #0
   127e4:	mov	r9, #1
   127e8:	ldrb	r2, [r5, #1]!
   127ec:	ldr	r1, [pc, #396]	; 12980 <dcngettext@plt+0x1990>
   127f0:	mov	r0, r9
   127f4:	bl	10f24 <__printf_chk@plt>
   127f8:	add	r4, r4, #1
   127fc:	ldr	r3, [fp]
   12800:	cmp	r4, r3, lsr #1
   12804:	bcc	127e8 <dcngettext@plt+0x17f8>
   12808:	ldr	r3, [sp, #32]
   1280c:	cmp	r3, #0
   12810:	beq	129fc <dcngettext@plt+0x1a0c>
   12814:	ldr	r3, [pc, #184]	; 128d4 <dcngettext@plt+0x18e4>
   12818:	ldr	r0, [r3]
   1281c:	ldr	r3, [r0, #20]
   12820:	ldr	r2, [r0, #24]
   12824:	cmp	r3, r2
   12828:	addcc	r2, r3, #1
   1282c:	strcc	r2, [r0, #20]
   12830:	strbcc	sl, [r3]
   12834:	ldrcc	r7, [sp, #40]	; 0x28
   12838:	bcc	12710 <dcngettext@plt+0x1720>
   1283c:	mov	r1, sl
   12840:	bl	10f6c <__overflow@plt>
   12844:	ldr	r7, [sp, #40]	; 0x28
   12848:	b	12710 <dcngettext@plt+0x1720>
   1284c:	mov	r1, #92	; 0x5c
   12850:	mov	r0, r6
   12854:	bl	10ee8 <strchr@plt>
   12858:	cmp	r0, #0
   1285c:	beq	12894 <dcngettext@plt+0x18a4>
   12860:	ldr	r3, [pc, #108]	; 128d4 <dcngettext@plt+0x18e4>
   12864:	ldr	r0, [r3]
   12868:	ldr	r3, [r0, #20]
   1286c:	ldr	r2, [r0, #24]
   12870:	cmp	r3, r2
   12874:	addcc	r2, r3, #1
   12878:	strcc	r2, [r0, #20]
   1287c:	movcc	r2, #92	; 0x5c
   12880:	strbcc	r2, [r3]
   12884:	bcc	127c4 <dcngettext@plt+0x17d4>
   12888:	mov	r1, #92	; 0x5c
   1288c:	bl	10f6c <__overflow@plt>
   12890:	b	127c4 <dcngettext@plt+0x17d4>
   12894:	mov	r1, #10
   12898:	mov	r0, r6
   1289c:	bl	10ee8 <strchr@plt>
   128a0:	cmp	r0, #0
   128a4:	bne	12860 <dcngettext@plt+0x1870>
   128a8:	mov	r1, #13
   128ac:	mov	r0, r6
   128b0:	bl	10ee8 <strchr@plt>
   128b4:	cmp	r0, #0
   128b8:	ldreq	r7, [sp, #16]
   128bc:	bne	12860 <dcngettext@plt+0x1870>
   128c0:	b	127c4 <dcngettext@plt+0x17d4>
   128c4:	andeq	r8, r1, r8, lsr #24
   128c8:	muleq	r1, r8, r0
   128cc:	andeq	r9, r1, r0, asr #2
   128d0:	andeq	r2, r1, r0, lsr #22
   128d4:	andeq	sl, r2, ip, ror #2
   128d8:	muleq	r1, r0, r9
   128dc:	andeq	r9, r1, r8, lsl #3
   128e0:	andeq	sl, r2, r4, ror r1
   128e4:	strdeq	sl, [r2], -ip
   128e8:	andeq	r0, r0, r1, lsl #2
   128ec:	andeq	r0, r0, r3, lsl #2
   128f0:	andeq	r9, r1, r8, asr r1
   128f4:	andeq	r9, r1, r8, ror #2
   128f8:	andeq	r9, r1, r8, ror r1
   128fc:	andeq	sl, r2, r4, lsl #2
   12900:	muleq	r1, r4, r0
   12904:	andeq	r8, r1, r4, lsl #21
   12908:	andeq	sl, r2, r8, asr r1
   1290c:	andeq	r8, r1, ip, ror sl
   12910:	muleq	r1, r0, r1
   12914:			; <UNDEFINED> instruction: 0x000191b4
   12918:	strdeq	r9, [r1], -r0
   1291c:	andeq	r9, r1, ip, lsr #4
   12920:	andeq	r9, r1, r8, ror r2
   12924:	andeq	r9, r1, r0, asr #5
   12928:	andeq	r9, r1, r0, lsl #6
   1292c:	andeq	r9, r1, r0, asr #6
   12930:	andeq	r9, r1, r0, lsl #7
   12934:	andeq	r8, r1, r0, lsl #21
   12938:			; <UNDEFINED> instruction: 0x000196b0
   1293c:	ldrdeq	r9, [r1], -r0
   12940:	andeq	r9, r1, ip, ror #7
   12944:	andeq	r9, r1, ip, lsl r4
   12948:	andeq	r9, r1, r0, lsr r4
   1294c:	andeq	r8, r1, r8, asr r9
   12950:	andeq	r9, r1, r0, asr #8
   12954:	andeq	r9, r1, r8, lsr r4
   12958:	andeq	r9, r1, r4, asr #8
   1295c:	andeq	r4, pc, r0, asr #4
   12960:	andeq	r9, r1, r4, lsl #9
   12964:			; <UNDEFINED> instruction: 0x000194b4
   12968:	andeq	r9, r1, r0, ror #9
   1296c:	andeq	r9, r1, r0, lsl r5
   12970:	andeq	r9, r1, ip, lsr r5
   12974:	andeq	r9, r1, ip, ror #10
   12978:	andeq	r9, r1, r4, asr r4
   1297c:	muleq	r1, ip, r5
   12980:	andeq	r9, r1, r4, asr #11
   12984:	andeq	r8, r1, r4, lsl #22
   12988:			; <UNDEFINED> instruction: 0x000195b8
   1298c:			; <UNDEFINED> instruction: 0x000195bc
   12990:	andeq	sl, r2, ip, ror #2
   12994:	andeq	sl, r2, r4, ror r1
   12998:	andeq	sl, r2, r8, ror #2
   1299c:	andeq	r9, r1, r0, asr #7
   129a0:	ldr	r4, [pc, #-24]	; 12990 <dcngettext@plt+0x19a0>
   129a4:	ldr	r3, [r4]
   129a8:	mov	r2, #6
   129ac:	mov	r1, #1
   129b0:	ldr	r0, [pc, #-52]	; 12984 <dcngettext@plt+0x1994>
   129b4:	bl	10de0 <fwrite_unlocked@plt>
   129b8:	ldr	r3, [r4]
   129bc:	mov	r2, #2
   129c0:	mov	r1, #1
   129c4:	ldr	r0, [pc, #-68]	; 12988 <dcngettext@plt+0x1998>
   129c8:	bl	10de0 <fwrite_unlocked@plt>
   129cc:	mov	r1, r7
   129d0:	mov	r0, r6
   129d4:	bl	1125c <dcngettext@plt+0x26c>
   129d8:	ldr	r3, [r4]
   129dc:	mov	r2, #4
   129e0:	mov	r1, #1
   129e4:	ldr	r0, [pc, #-96]	; 1298c <dcngettext@plt+0x199c>
   129e8:	bl	10de0 <fwrite_unlocked@plt>
   129ec:	ldr	r3, [fp]
   129f0:	cmp	r3, #1
   129f4:	bhi	127dc <dcngettext@plt+0x17ec>
   129f8:	b	12814 <dcngettext@plt+0x1824>
   129fc:	ldr	r3, [pc, #-116]	; 12990 <dcngettext@plt+0x19a0>
   12a00:	ldr	r0, [r3]
   12a04:	ldr	r3, [r0, #20]
   12a08:	ldr	r2, [r0, #24]
   12a0c:	cmp	r3, r2
   12a10:	addcc	r2, r3, #1
   12a14:	strcc	r2, [r0, #20]
   12a18:	movcc	r2, #32
   12a1c:	strbcc	r2, [r3]
   12a20:	bcs	12a64 <dcngettext@plt+0x1a74>
   12a24:	cmp	r8, #0
   12a28:	movne	r1, #42	; 0x2a
   12a2c:	moveq	r1, #32
   12a30:	ldr	r3, [pc, #-168]	; 12990 <dcngettext@plt+0x19a0>
   12a34:	ldr	r0, [r3]
   12a38:	ldr	r3, [r0, #20]
   12a3c:	ldr	r2, [r0, #24]
   12a40:	cmp	r3, r2
   12a44:	addcc	r2, r3, #1
   12a48:	strcc	r2, [r0, #20]
   12a4c:	strbcc	r1, [r3]
   12a50:	bcs	12a70 <dcngettext@plt+0x1a80>
   12a54:	mov	r1, r7
   12a58:	mov	r0, r6
   12a5c:	bl	1125c <dcngettext@plt+0x26c>
   12a60:	b	12814 <dcngettext@plt+0x1824>
   12a64:	mov	r1, #32
   12a68:	bl	10f6c <__overflow@plt>
   12a6c:	b	12a24 <dcngettext@plt+0x1a34>
   12a70:	bl	10f6c <__overflow@plt>
   12a74:	b	12a54 <dcngettext@plt+0x1a64>
   12a78:	ldr	r3, [pc, #-236]	; 12994 <dcngettext@plt+0x19a4>
   12a7c:	ldrb	r3, [r3, #4]
   12a80:	cmp	r3, #0
   12a84:	bne	12a9c <dcngettext@plt+0x1aac>
   12a88:	ldr	r3, [sp, #40]	; 0x28
   12a8c:	eor	r0, r3, #1
   12a90:	uxtb	r0, r0
   12a94:	add	sp, sp, #196	; 0xc4
   12a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a9c:	ldr	r3, [pc, #-268]	; 12998 <dcngettext@plt+0x19a8>
   12aa0:	ldr	r0, [r3]
   12aa4:	bl	15408 <dcngettext@plt+0x4418>
   12aa8:	cmn	r0, #1
   12aac:	bne	12a88 <dcngettext@plt+0x1a98>
   12ab0:	bl	10ef4 <__errno_location@plt>
   12ab4:	ldr	r4, [r0]
   12ab8:	mov	r2, #5
   12abc:	ldr	r1, [pc, #-296]	; 1299c <dcngettext@plt+0x19ac>
   12ac0:	mov	r0, #0
   12ac4:	bl	10e04 <dcgettext@plt>
   12ac8:	mov	r2, r0
   12acc:	mov	r1, r4
   12ad0:	mov	r0, #1
   12ad4:	bl	10e70 <error@plt>
   12ad8:	ldr	r3, [sp, #48]	; 0x30
   12adc:	add	r5, r3, r4
   12ae0:	ldr	r3, [sp, #52]	; 0x34
   12ae4:	cmp	r3, #0
   12ae8:	bne	11e40 <dcngettext@plt+0xe50>
   12aec:	add	r4, r4, #1
   12af0:	mov	r3, #0
   12af4:	strb	r3, [r5]
   12af8:	ldr	r2, [sp, #48]	; 0x30
   12afc:	b	11e5c <dcngettext@plt+0xe6c>
   12b00:	ldr	r3, [pc, #4]	; 12b0c <dcngettext@plt+0x1b1c>
   12b04:	str	r0, [r3]
   12b08:	bx	lr
   12b0c:	andeq	sl, r2, r4, lsl #3
   12b10:	ldr	r3, [pc, #4]	; 12b1c <dcngettext@plt+0x1b2c>
   12b14:	strb	r0, [r3, #4]
   12b18:	bx	lr
   12b1c:	andeq	sl, r2, r4, lsl #3
   12b20:	push	{r4, r5, r6, lr}
   12b24:	sub	sp, sp, #8
   12b28:	ldr	r3, [pc, #200]	; 12bf8 <dcngettext@plt+0x1c08>
   12b2c:	ldr	r0, [r3]
   12b30:	bl	17e60 <dcngettext@plt+0x6e70>
   12b34:	cmp	r0, #0
   12b38:	beq	12b5c <dcngettext@plt+0x1b6c>
   12b3c:	ldr	r3, [pc, #184]	; 12bfc <dcngettext@plt+0x1c0c>
   12b40:	ldrb	r3, [r3, #4]
   12b44:	cmp	r3, #0
   12b48:	beq	12b78 <dcngettext@plt+0x1b88>
   12b4c:	bl	10ef4 <__errno_location@plt>
   12b50:	ldr	r3, [r0]
   12b54:	cmp	r3, #32
   12b58:	bne	12b78 <dcngettext@plt+0x1b88>
   12b5c:	ldr	r3, [pc, #156]	; 12c00 <dcngettext@plt+0x1c10>
   12b60:	ldr	r0, [r3]
   12b64:	bl	17e60 <dcngettext@plt+0x6e70>
   12b68:	cmp	r0, #0
   12b6c:	bne	12bec <dcngettext@plt+0x1bfc>
   12b70:	add	sp, sp, #8
   12b74:	pop	{r4, r5, r6, pc}
   12b78:	mov	r2, #5
   12b7c:	ldr	r1, [pc, #128]	; 12c04 <dcngettext@plt+0x1c14>
   12b80:	mov	r0, #0
   12b84:	bl	10e04 <dcgettext@plt>
   12b88:	mov	r4, r0
   12b8c:	ldr	r3, [pc, #104]	; 12bfc <dcngettext@plt+0x1c0c>
   12b90:	ldr	r5, [r3]
   12b94:	cmp	r5, #0
   12b98:	beq	12bd0 <dcngettext@plt+0x1be0>
   12b9c:	bl	10ef4 <__errno_location@plt>
   12ba0:	ldr	r6, [r0]
   12ba4:	mov	r0, r5
   12ba8:	bl	17078 <dcngettext@plt+0x6088>
   12bac:	str	r4, [sp]
   12bb0:	mov	r3, r0
   12bb4:	ldr	r2, [pc, #76]	; 12c08 <dcngettext@plt+0x1c18>
   12bb8:	mov	r1, r6
   12bbc:	mov	r0, #0
   12bc0:	bl	10e70 <error@plt>
   12bc4:	ldr	r3, [pc, #64]	; 12c0c <dcngettext@plt+0x1c1c>
   12bc8:	ldr	r0, [r3]
   12bcc:	bl	10dbc <_exit@plt>
   12bd0:	bl	10ef4 <__errno_location@plt>
   12bd4:	mov	r3, r4
   12bd8:	ldr	r2, [pc, #48]	; 12c10 <dcngettext@plt+0x1c20>
   12bdc:	ldr	r1, [r0]
   12be0:	mov	r0, #0
   12be4:	bl	10e70 <error@plt>
   12be8:	b	12bc4 <dcngettext@plt+0x1bd4>
   12bec:	ldr	r3, [pc, #24]	; 12c0c <dcngettext@plt+0x1c1c>
   12bf0:	ldr	r0, [r3]
   12bf4:	bl	10dbc <_exit@plt>
   12bf8:	andeq	sl, r2, ip, ror #2
   12bfc:	andeq	sl, r2, r4, lsl #3
   12c00:	andeq	sl, r2, r0, ror #2
   12c04:	andeq	r9, r1, r0, lsr #13
   12c08:	andeq	r9, r1, ip, lsr #13
   12c0c:	andeq	sl, r2, r8, lsl #2
   12c10:			; <UNDEFINED> instruction: 0x000196b0
   12c14:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c18:	sub	sp, sp, #180	; 0xb4
   12c1c:	mov	r5, r0
   12c20:	mov	r8, r2
   12c24:	ldr	r0, [pc, #200]	; 12cf4 <dcngettext@plt+0x1d04>
   12c28:	bl	17de0 <dcngettext@plt+0x6df0>
   12c2c:	subs	r6, r0, #0
   12c30:	moveq	r0, #1
   12c34:	beq	12cb4 <dcngettext@plt+0x1cc4>
   12c38:	add	r0, sp, #4
   12c3c:	ldr	r3, [sp, #208]	; 0xd0
   12c40:	blx	r3
   12c44:	mov	r7, #1
   12c48:	mov	r9, #32768	; 0x8000
   12c4c:	mov	r4, #0
   12c50:	ldr	r3, [r5]
   12c54:	tst	r3, #16
   12c58:	bne	12c90 <dcngettext@plt+0x1ca0>
   12c5c:	mov	r3, r5
   12c60:	rsb	r2, r4, #32768	; 0x8000
   12c64:	mov	r1, r7
   12c68:	add	r0, r6, r4
   12c6c:	bl	10fc0 <fread_unlocked@plt>
   12c70:	add	r4, r4, r0
   12c74:	cmp	r4, #32768	; 0x8000
   12c78:	beq	12ccc <dcngettext@plt+0x1cdc>
   12c7c:	cmp	r0, #0
   12c80:	bne	12c50 <dcngettext@plt+0x1c60>
   12c84:	ldr	r3, [r5]
   12c88:	tst	r3, #32
   12c8c:	bne	12cbc <dcngettext@plt+0x1ccc>
   12c90:	cmp	r4, #0
   12c94:	bne	12ce0 <dcngettext@plt+0x1cf0>
   12c98:	mov	r1, r8
   12c9c:	add	r0, sp, #4
   12ca0:	ldr	r3, [sp, #212]	; 0xd4
   12ca4:	blx	r3
   12ca8:	mov	r0, r6
   12cac:	bl	155b0 <dcngettext@plt+0x45c0>
   12cb0:	mov	r0, #0
   12cb4:	add	sp, sp, #180	; 0xb4
   12cb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12cbc:	mov	r0, r6
   12cc0:	bl	155b0 <dcngettext@plt+0x45c0>
   12cc4:	mov	r0, #1
   12cc8:	b	12cb4 <dcngettext@plt+0x1cc4>
   12ccc:	add	r2, sp, #4
   12cd0:	mov	r1, r9
   12cd4:	mov	r0, r6
   12cd8:	bl	12eb0 <dcngettext@plt+0x1ec0>
   12cdc:	b	12c4c <dcngettext@plt+0x1c5c>
   12ce0:	add	r2, sp, #4
   12ce4:	mov	r1, r4
   12ce8:	mov	r0, r6
   12cec:	bl	15184 <dcngettext@plt+0x4194>
   12cf0:	b	12c98 <dcngettext@plt+0x1ca8>
   12cf4:	andeq	r8, r0, r8, asr #32
   12cf8:	push	{lr}		; (str lr, [sp, #-4]!)
   12cfc:	sub	sp, sp, #12
   12d00:	ldr	r3, [pc, #32]	; 12d28 <dcngettext@plt+0x1d38>
   12d04:	str	r3, [sp, #4]
   12d08:	ldr	r3, [pc, #28]	; 12d2c <dcngettext@plt+0x1d3c>
   12d0c:	str	r3, [sp]
   12d10:	mov	r3, #32
   12d14:	mov	r2, r1
   12d18:	ldr	r1, [pc, #16]	; 12d30 <dcngettext@plt+0x1d40>
   12d1c:	bl	12c14 <dcngettext@plt+0x1c24>
   12d20:	add	sp, sp, #12
   12d24:	pop	{pc}		; (ldr pc, [sp], #4)
   12d28:	andeq	r5, r1, r4, asr #2
   12d2c:	andeq	r2, r1, r0, ror sp
   12d30:			; <UNDEFINED> instruction: 0x000196b4
   12d34:	push	{lr}		; (str lr, [sp, #-4]!)
   12d38:	sub	sp, sp, #12
   12d3c:	ldr	r3, [pc, #32]	; 12d64 <dcngettext@plt+0x1d74>
   12d40:	str	r3, [sp, #4]
   12d44:	ldr	r3, [pc, #28]	; 12d68 <dcngettext@plt+0x1d78>
   12d48:	str	r3, [sp]
   12d4c:	mov	r3, #28
   12d50:	mov	r2, r1
   12d54:	ldr	r1, [pc, #16]	; 12d6c <dcngettext@plt+0x1d7c>
   12d58:	bl	12c14 <dcngettext@plt+0x1c24>
   12d5c:	add	sp, sp, #12
   12d60:	pop	{pc}		; (ldr pc, [sp], #4)
   12d64:	andeq	r5, r1, r4, ror #2
   12d68:	andeq	r2, r1, r4, ror #27
   12d6c:			; <UNDEFINED> instruction: 0x000196bc
   12d70:	ldr	r3, [pc, #76]	; 12dc4 <dcngettext@plt+0x1dd4>
   12d74:	str	r3, [r0]
   12d78:	ldr	r3, [pc, #72]	; 12dc8 <dcngettext@plt+0x1dd8>
   12d7c:	str	r3, [r0, #4]
   12d80:	ldr	r3, [pc, #68]	; 12dcc <dcngettext@plt+0x1ddc>
   12d84:	str	r3, [r0, #8]
   12d88:	ldr	r3, [pc, #64]	; 12dd0 <dcngettext@plt+0x1de0>
   12d8c:	str	r3, [r0, #12]
   12d90:	ldr	r3, [pc, #60]	; 12dd4 <dcngettext@plt+0x1de4>
   12d94:	str	r3, [r0, #16]
   12d98:	ldr	r3, [pc, #56]	; 12dd8 <dcngettext@plt+0x1de8>
   12d9c:	str	r3, [r0, #20]
   12da0:	ldr	r3, [pc, #52]	; 12ddc <dcngettext@plt+0x1dec>
   12da4:	str	r3, [r0, #24]
   12da8:	ldr	r3, [pc, #48]	; 12de0 <dcngettext@plt+0x1df0>
   12dac:	str	r3, [r0, #28]
   12db0:	mov	r3, #0
   12db4:	str	r3, [r0, #36]	; 0x24
   12db8:	str	r3, [r0, #32]
   12dbc:	str	r3, [r0, #40]	; 0x28
   12dc0:	bx	lr
   12dc4:	bvs	28c768 <stdout@@GLIBC_2.4+0x2625fc>
   12dc8:	bllt	19fe7e4 <stdout@@GLIBC_2.4+0x19d4678>
   12dcc:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   12dd0:	strbge	pc, [pc, #-1338]	; 1289e <dcngettext@plt+0x18ae>	; <UNPREDICTABLE>
   12dd4:	tstpl	lr, pc, ror r2
   12dd8:	blls	16d010 <stdout@@GLIBC_2.4+0x142ea4>
   12ddc:	svcne	0x0083d9ab
   12de0:	blpl	ff84624c <stdout@@GLIBC_2.4+0xff81c0e0>
   12de4:	ldr	r3, [pc, #76]	; 12e38 <dcngettext@plt+0x1e48>
   12de8:	str	r3, [r0]
   12dec:	ldr	r3, [pc, #72]	; 12e3c <dcngettext@plt+0x1e4c>
   12df0:	str	r3, [r0, #4]
   12df4:	ldr	r3, [pc, #68]	; 12e40 <dcngettext@plt+0x1e50>
   12df8:	str	r3, [r0, #8]
   12dfc:	ldr	r3, [pc, #64]	; 12e44 <dcngettext@plt+0x1e54>
   12e00:	str	r3, [r0, #12]
   12e04:	ldr	r3, [pc, #60]	; 12e48 <dcngettext@plt+0x1e58>
   12e08:	str	r3, [r0, #16]
   12e0c:	ldr	r3, [pc, #56]	; 12e4c <dcngettext@plt+0x1e5c>
   12e10:	str	r3, [r0, #20]
   12e14:	ldr	r3, [pc, #52]	; 12e50 <dcngettext@plt+0x1e60>
   12e18:	str	r3, [r0, #24]
   12e1c:	ldr	r3, [pc, #48]	; 12e54 <dcngettext@plt+0x1e64>
   12e20:	str	r3, [r0, #28]
   12e24:	mov	r3, #0
   12e28:	str	r3, [r0, #36]	; 0x24
   12e2c:	str	r3, [r0, #32]
   12e30:	str	r3, [r0, #40]	; 0x28
   12e34:	bx	lr
   12e38:	ldrdgt	r9, [r5, -r8]
   12e3c:	ldrbtcc	sp, [ip], -r7, lsl #10
   12e40:	rsbscc	sp, r0, r7, lsl sp
   12e44:			; <UNDEFINED> instruction: 0xf70e5939
   12e48:			; <UNDEFINED> instruction: 0xffc00b31
   12e4c:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   12e50:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   12e54:	cdplt	15, 15, cr4, cr10, cr4, {5}
   12e58:	push	{lr}		; (str lr, [sp, #-4]!)
   12e5c:	sub	r2, r0, #4
   12e60:	mov	ip, r1
   12e64:	add	lr, r0, #28
   12e68:	ldr	r3, [r2, #4]!
   12e6c:	rev	r3, r3
   12e70:	str	r3, [ip], #4
   12e74:	cmp	r2, lr
   12e78:	bne	12e68 <dcngettext@plt+0x1e78>
   12e7c:	mov	r0, r1
   12e80:	pop	{pc}		; (ldr pc, [sp], #4)
   12e84:	push	{lr}		; (str lr, [sp, #-4]!)
   12e88:	sub	r2, r0, #4
   12e8c:	mov	ip, r1
   12e90:	add	lr, r0, #24
   12e94:	ldr	r3, [r2, #4]!
   12e98:	rev	r3, r3
   12e9c:	str	r3, [ip], #4
   12ea0:	cmp	r2, lr
   12ea4:	bne	12e94 <dcngettext@plt+0x1ea4>
   12ea8:	mov	r0, r1
   12eac:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12eb4:	sub	sp, sp, #148	; 0x94
   12eb8:	mov	r8, r2
   12ebc:	str	r2, [sp, #76]	; 0x4c
   12ec0:	bic	r3, r1, #3
   12ec4:	add	r3, r0, r3
   12ec8:	mov	sl, r3
   12ecc:	str	r3, [sp, #72]	; 0x48
   12ed0:	ldr	r3, [r2]
   12ed4:	ldr	r2, [r2, #4]
   12ed8:	ldr	fp, [r8, #8]
   12edc:	ldr	r9, [r8, #12]
   12ee0:	ldr	ip, [r8, #16]
   12ee4:	ldr	lr, [r8, #20]
   12ee8:	ldr	r4, [r8, #24]
   12eec:	ldr	r6, [r8, #28]
   12ef0:	ldr	r5, [r8, #32]
   12ef4:	add	r5, r1, r5
   12ef8:	str	r5, [r8, #32]
   12efc:	ldr	r7, [r8, #36]	; 0x24
   12f00:	cmp	r1, r5
   12f04:	movls	r1, r7
   12f08:	addhi	r1, r7, #1
   12f0c:	str	r1, [r8, #36]	; 0x24
   12f10:	cmp	r0, sl
   12f14:	bcs	150b0 <dcngettext@plt+0x40c0>
   12f18:	str	r0, [sp, #68]	; 0x44
   12f1c:	mov	r7, r3
   12f20:	mov	r0, r9
   12f24:	mov	r3, r6
   12f28:	mov	r6, r4
   12f2c:	mov	r4, r3
   12f30:	ldr	r3, [sp, #68]	; 0x44
   12f34:	sub	r1, r3, #4
   12f38:	add	r5, sp, #80	; 0x50
   12f3c:	add	r8, r3, #60	; 0x3c
   12f40:	ldr	r3, [r1, #4]!
   12f44:	rev	r3, r3
   12f48:	str	r3, [r5], #4
   12f4c:	cmp	r1, r8
   12f50:	bne	12f40 <dcngettext@plt+0x1f50>
   12f54:	ldr	r3, [sp, #68]	; 0x44
   12f58:	add	r3, r3, #64	; 0x40
   12f5c:	str	r3, [sp, #68]	; 0x44
   12f60:	ror	r3, ip, #11
   12f64:	eor	r3, r3, ip, ror #6
   12f68:	eor	r3, r3, ip, ror #25
   12f6c:	ldr	r1, [sp, #80]	; 0x50
   12f70:	add	r1, r1, #1107296256	; 0x42000000
   12f74:	add	r1, r1, #9043968	; 0x8a0000
   12f78:	add	r1, r1, #12160	; 0x2f80
   12f7c:	add	r1, r1, #24
   12f80:	add	r4, r1, r4
   12f84:	add	r3, r3, r4
   12f88:	eor	r1, lr, r6
   12f8c:	and	r1, r1, ip
   12f90:	eor	r1, r1, r6
   12f94:	add	r3, r3, r1
   12f98:	add	r5, r3, r0
   12f9c:	ror	r0, r7, #13
   12fa0:	eor	r0, r0, r7, ror #2
   12fa4:	eor	r0, r0, r7, ror #22
   12fa8:	orr	r1, r7, r2
   12fac:	and	r1, r1, fp
   12fb0:	and	r4, r7, r2
   12fb4:	orr	r1, r1, r4
   12fb8:	add	r0, r0, r1
   12fbc:	add	r0, r0, r3
   12fc0:	ldr	sl, [sp, #84]	; 0x54
   12fc4:	eor	r1, ip, lr
   12fc8:	and	r1, r1, r5
   12fcc:	eor	r1, r1, lr
   12fd0:	ldr	r3, [pc, #4088]	; 13fd0 <dcngettext@plt+0x2fe0>
   12fd4:	add	r3, sl, r3
   12fd8:	add	r6, r3, r6
   12fdc:	add	r1, r1, r6
   12fe0:	ror	r3, r5, #11
   12fe4:	eor	r3, r3, r5, ror #6
   12fe8:	eor	r4, r3, r5, ror #25
   12fec:	add	r3, r1, r4
   12ff0:	add	r4, r3, fp
   12ff4:	ror	r1, r0, #13
   12ff8:	eor	r1, r1, r0, ror #2
   12ffc:	eor	r1, r1, r0, ror #22
   13000:	orr	r6, r0, r7
   13004:	and	r6, r6, r2
   13008:	and	r8, r0, r7
   1300c:	orr	r6, r6, r8
   13010:	add	r1, r1, r6
   13014:	add	r1, r1, r3
   13018:	ldr	fp, [sp, #88]	; 0x58
   1301c:	eor	r6, r5, ip
   13020:	and	r6, r6, r4
   13024:	eor	r6, r6, ip
   13028:	ldr	r3, [pc, #4004]	; 13fd4 <dcngettext@plt+0x2fe4>
   1302c:	add	r3, fp, r3
   13030:	add	r3, r3, lr
   13034:	add	r3, r6, r3
   13038:	ror	lr, r4, #11
   1303c:	eor	lr, lr, r4, ror #6
   13040:	eor	lr, lr, r4, ror #25
   13044:	add	r3, r3, lr
   13048:	add	lr, r3, r2
   1304c:	ror	r2, r1, #13
   13050:	eor	r2, r2, r1, ror #2
   13054:	eor	r2, r2, r1, ror #22
   13058:	orr	r6, r0, r1
   1305c:	and	r6, r6, r7
   13060:	and	r8, r0, r1
   13064:	orr	r6, r6, r8
   13068:	add	r2, r2, r6
   1306c:	add	r2, r2, r3
   13070:	eor	r6, r5, r4
   13074:	and	r6, r6, lr
   13078:	eor	r6, r6, r5
   1307c:	ldr	r8, [sp, #92]	; 0x5c
   13080:	ldr	r3, [pc, #3920]	; 13fd8 <dcngettext@plt+0x2fe8>
   13084:	add	r3, r8, r3
   13088:	add	ip, r3, ip
   1308c:	add	r3, r6, ip
   13090:	ror	ip, lr, #11
   13094:	eor	ip, ip, lr, ror #6
   13098:	eor	r8, ip, lr, ror #25
   1309c:	add	ip, r3, r8
   130a0:	add	r7, ip, r7
   130a4:	ror	r3, r2, #13
   130a8:	eor	r3, r3, r2, ror #2
   130ac:	eor	r3, r3, r2, ror #22
   130b0:	orr	r6, r1, r2
   130b4:	and	r6, r6, r0
   130b8:	and	r8, r1, r2
   130bc:	orr	r6, r6, r8
   130c0:	add	r3, r3, r6
   130c4:	add	r3, r3, ip
   130c8:	eor	r6, r4, lr
   130cc:	and	r6, r6, r7
   130d0:	eor	r6, r6, r4
   130d4:	ldr	ip, [sp, #96]	; 0x60
   130d8:	add	ip, ip, #960495616	; 0x39400000
   130dc:	add	ip, ip, #1490944	; 0x16c000
   130e0:	add	ip, ip, #600	; 0x258
   130e4:	add	ip, ip, #3
   130e8:	add	r5, ip, r5
   130ec:	add	r5, r6, r5
   130f0:	ror	ip, r7, #11
   130f4:	eor	ip, ip, r7, ror #6
   130f8:	eor	r8, ip, r7, ror #25
   130fc:	add	ip, r5, r8
   13100:	add	r0, r0, ip
   13104:	ror	r5, r3, #13
   13108:	eor	r5, r5, r3, ror #2
   1310c:	eor	r5, r5, r3, ror #22
   13110:	orr	r6, r2, r3
   13114:	and	r6, r6, r1
   13118:	and	r8, r2, r3
   1311c:	orr	r6, r6, r8
   13120:	add	r5, r5, r6
   13124:	add	r5, r5, ip
   13128:	eor	r6, lr, r7
   1312c:	and	r6, r6, r0
   13130:	eor	r6, r6, lr
   13134:	ldr	ip, [sp, #100]	; 0x64
   13138:	add	ip, ip, #1493172224	; 0x59000000
   1313c:	add	ip, ip, #15794176	; 0xf10000
   13140:	add	ip, ip, #4544	; 0x11c0
   13144:	add	ip, ip, #49	; 0x31
   13148:	add	r4, ip, r4
   1314c:	add	r4, r6, r4
   13150:	ror	ip, r0, #11
   13154:	eor	ip, ip, r0, ror #6
   13158:	eor	r8, ip, r0, ror #25
   1315c:	add	ip, r4, r8
   13160:	add	r1, r1, ip
   13164:	ror	r4, r5, #13
   13168:	eor	r4, r4, r5, ror #2
   1316c:	eor	r4, r4, r5, ror #22
   13170:	orr	r6, r3, r5
   13174:	and	r6, r6, r2
   13178:	and	r8, r3, r5
   1317c:	orr	r6, r6, r8
   13180:	add	r4, r4, r6
   13184:	add	r4, r4, ip
   13188:	eor	r6, r7, r0
   1318c:	and	r6, r6, r1
   13190:	eor	r6, r6, r7
   13194:	ldr	ip, [pc, #3648]	; 13fdc <dcngettext@plt+0x2fec>
   13198:	ldr	r8, [sp, #104]	; 0x68
   1319c:	add	ip, r8, ip
   131a0:	add	lr, ip, lr
   131a4:	add	lr, r6, lr
   131a8:	ror	ip, r1, #11
   131ac:	eor	ip, ip, r1, ror #6
   131b0:	eor	ip, ip, r1, ror #25
   131b4:	add	ip, lr, ip
   131b8:	add	r2, r2, ip
   131bc:	ror	lr, r4, #13
   131c0:	eor	lr, lr, r4, ror #2
   131c4:	eor	lr, lr, r4, ror #22
   131c8:	orr	r6, r5, r4
   131cc:	and	r6, r6, r3
   131d0:	and	r8, r5, r4
   131d4:	orr	r6, r6, r8
   131d8:	add	lr, lr, r6
   131dc:	add	lr, lr, ip
   131e0:	eor	r6, r0, r1
   131e4:	and	r6, r6, r2
   131e8:	eor	r6, r6, r0
   131ec:	ldr	ip, [sp, #108]	; 0x6c
   131f0:	add	ip, ip, #-1426063360	; 0xab000000
   131f4:	add	ip, ip, #1851392	; 0x1c4000
   131f8:	add	ip, ip, #7872	; 0x1ec0
   131fc:	add	ip, ip, #21
   13200:	add	ip, ip, r7
   13204:	add	ip, r6, ip
   13208:	ror	r6, r2, #11
   1320c:	eor	r6, r6, r2, ror #6
   13210:	eor	r8, r6, r2, ror #25
   13214:	add	r6, ip, r8
   13218:	add	r3, r3, r6
   1321c:	ror	ip, lr, #13
   13220:	eor	ip, ip, lr, ror #2
   13224:	eor	ip, ip, lr, ror #22
   13228:	orr	r7, r4, lr
   1322c:	and	r7, r7, r5
   13230:	and	r8, r4, lr
   13234:	orr	r7, r7, r8
   13238:	add	ip, ip, r7
   1323c:	add	ip, ip, r6
   13240:	eor	r7, r1, r2
   13244:	and	r7, r7, r3
   13248:	eor	r7, r7, r1
   1324c:	ldr	r6, [sp, #112]	; 0x70
   13250:	add	r6, r6, #-671088640	; 0xd8000000
   13254:	add	r6, r6, #499712	; 0x7a000
   13258:	add	r6, r6, #2704	; 0xa90
   1325c:	add	r6, r6, #8
   13260:	add	r0, r6, r0
   13264:	add	r0, r7, r0
   13268:	ror	r6, r3, #11
   1326c:	eor	r6, r6, r3, ror #6
   13270:	eor	r8, r6, r3, ror #25
   13274:	add	r6, r0, r8
   13278:	add	r5, r5, r6
   1327c:	ror	r0, ip, #13
   13280:	eor	r0, r0, ip, ror #2
   13284:	eor	r0, r0, ip, ror #22
   13288:	orr	r7, lr, ip
   1328c:	and	r7, r7, r4
   13290:	and	r8, lr, ip
   13294:	orr	r7, r7, r8
   13298:	add	r0, r0, r7
   1329c:	add	r0, r0, r6
   132a0:	eor	r7, r2, r3
   132a4:	and	r7, r7, r5
   132a8:	eor	r7, r7, r2
   132ac:	ldr	r6, [sp, #116]	; 0x74
   132b0:	add	r6, r6, #310378496	; 0x12800000
   132b4:	add	r6, r6, #219136	; 0x35800
   132b8:	add	r6, r6, #768	; 0x300
   132bc:	add	r6, r6, #1
   132c0:	add	r1, r6, r1
   132c4:	add	r1, r7, r1
   132c8:	ror	r6, r5, #11
   132cc:	eor	r6, r6, r5, ror #6
   132d0:	eor	r8, r6, r5, ror #25
   132d4:	add	r6, r1, r8
   132d8:	add	r4, r4, r6
   132dc:	ror	r1, r0, #13
   132e0:	eor	r1, r1, r0, ror #2
   132e4:	eor	r1, r1, r0, ror #22
   132e8:	orr	r7, ip, r0
   132ec:	and	r7, r7, lr
   132f0:	and	r8, ip, r0
   132f4:	orr	r7, r7, r8
   132f8:	add	r1, r1, r7
   132fc:	add	r1, r1, r6
   13300:	eor	r7, r3, r5
   13304:	and	r7, r7, r4
   13308:	eor	r7, r7, r3
   1330c:	ldr	r6, [sp, #120]	; 0x78
   13310:	add	r6, r6, #603979776	; 0x24000000
   13314:	add	r6, r6, #3244032	; 0x318000
   13318:	add	r6, r6, #1456	; 0x5b0
   1331c:	add	r6, r6, #14
   13320:	add	r2, r6, r2
   13324:	add	r2, r7, r2
   13328:	ror	r6, r4, #11
   1332c:	eor	r6, r6, r4, ror #6
   13330:	eor	r8, r6, r4, ror #25
   13334:	add	r6, r2, r8
   13338:	add	lr, lr, r6
   1333c:	ror	r2, r1, #13
   13340:	eor	r2, r2, r1, ror #2
   13344:	eor	r2, r2, r1, ror #22
   13348:	orr	r7, r0, r1
   1334c:	and	r7, r7, ip
   13350:	and	r8, r0, r1
   13354:	orr	r7, r7, r8
   13358:	add	r2, r2, r7
   1335c:	add	r2, r2, r6
   13360:	eor	r7, r5, r4
   13364:	and	r7, r7, lr
   13368:	eor	r7, r7, r5
   1336c:	ldr	r6, [sp, #124]	; 0x7c
   13370:	add	r6, r6, #1426063360	; 0x55000000
   13374:	add	r6, r6, #815104	; 0xc7000
   13378:	add	r6, r6, #3520	; 0xdc0
   1337c:	add	r6, r6, #3
   13380:	add	r3, r6, r3
   13384:	add	r3, r7, r3
   13388:	ror	r6, lr, #11
   1338c:	eor	r6, r6, lr, ror #6
   13390:	eor	r8, r6, lr, ror #25
   13394:	add	r6, r3, r8
   13398:	add	ip, ip, r6
   1339c:	ror	r3, r2, #13
   133a0:	eor	r3, r3, r2, ror #2
   133a4:	eor	r3, r3, r2, ror #22
   133a8:	orr	r7, r1, r2
   133ac:	and	r7, r7, r0
   133b0:	and	r8, r1, r2
   133b4:	orr	r7, r7, r8
   133b8:	add	r3, r3, r7
   133bc:	add	r3, r3, r6
   133c0:	eor	r7, r4, lr
   133c4:	and	r7, r7, ip
   133c8:	eor	r7, r7, r4
   133cc:	ldr	r6, [sp, #128]	; 0x80
   133d0:	add	r6, r6, #1912602624	; 0x72000000
   133d4:	add	r6, r6, #12451840	; 0xbe0000
   133d8:	add	r6, r6, #23808	; 0x5d00
   133dc:	add	r6, r6, #116	; 0x74
   133e0:	add	r5, r6, r5
   133e4:	add	r7, r7, r5
   133e8:	ror	r5, ip, #11
   133ec:	eor	r5, r5, ip, ror #6
   133f0:	eor	r8, r5, ip, ror #25
   133f4:	add	r5, r7, r8
   133f8:	add	r0, r0, r5
   133fc:	ror	r7, r3, #13
   13400:	eor	r7, r7, r3, ror #2
   13404:	eor	r7, r7, r3, ror #22
   13408:	orr	r6, r2, r3
   1340c:	and	r6, r6, r1
   13410:	and	r8, r2, r3
   13414:	orr	r6, r6, r8
   13418:	add	r7, r7, r6
   1341c:	add	r7, r7, r5
   13420:	eor	r6, lr, ip
   13424:	and	r6, r6, r0
   13428:	eor	r6, r6, lr
   1342c:	ldr	r5, [sp, #132]	; 0x84
   13430:	add	r5, r5, #-2147483648	; 0x80000000
   13434:	add	r5, r5, #14548992	; 0xde0000
   13438:	add	r5, r5, #45312	; 0xb100
   1343c:	add	r5, r5, #254	; 0xfe
   13440:	add	r4, r5, r4
   13444:	add	r9, r6, r4
   13448:	ror	r4, r0, #11
   1344c:	eor	r4, r4, r0, ror #6
   13450:	eor	r8, r4, r0, ror #25
   13454:	add	r4, r9, r8
   13458:	add	r1, r1, r4
   1345c:	ror	r9, r7, #13
   13460:	eor	r9, r9, r7, ror #2
   13464:	eor	r9, r9, r7, ror #22
   13468:	orr	r5, r3, r7
   1346c:	and	r5, r5, r2
   13470:	and	r6, r3, r7
   13474:	orr	r5, r5, r6
   13478:	add	r9, r9, r5
   1347c:	add	r9, r9, r4
   13480:	eor	r5, ip, r0
   13484:	and	r5, r5, r1
   13488:	eor	r5, r5, ip
   1348c:	ldr	r4, [pc, #2892]	; 13fe0 <dcngettext@plt+0x2ff0>
   13490:	ldr	r6, [sp, #136]	; 0x88
   13494:	add	r4, r6, r4
   13498:	add	lr, r4, lr
   1349c:	add	r8, r5, lr
   134a0:	ror	lr, r1, #11
   134a4:	eor	lr, lr, r1, ror #6
   134a8:	eor	lr, lr, r1, ror #25
   134ac:	add	lr, r8, lr
   134b0:	add	r2, r2, lr
   134b4:	ror	r8, r9, #13
   134b8:	eor	r8, r8, r9, ror #2
   134bc:	eor	r8, r8, r9, ror #22
   134c0:	orr	r4, r7, r9
   134c4:	and	r4, r4, r3
   134c8:	and	r5, r7, r9
   134cc:	orr	r4, r4, r5
   134d0:	add	r8, r8, r4
   134d4:	add	r8, r8, lr
   134d8:	eor	r4, r0, r1
   134dc:	and	r4, r4, r2
   134e0:	eor	r4, r4, r0
   134e4:	ldr	lr, [pc, #2808]	; 13fe4 <dcngettext@plt+0x2ff4>
   134e8:	ldr	r5, [sp, #140]	; 0x8c
   134ec:	add	lr, r5, lr
   134f0:	add	ip, lr, ip
   134f4:	add	lr, r4, ip
   134f8:	ror	ip, r2, #11
   134fc:	eor	ip, ip, r2, ror #6
   13500:	eor	ip, ip, r2, ror #25
   13504:	add	ip, lr, ip
   13508:	add	r3, r3, ip
   1350c:	ror	lr, r8, #13
   13510:	eor	lr, lr, r8, ror #2
   13514:	eor	lr, lr, r8, ror #22
   13518:	orr	r4, r9, r8
   1351c:	and	r4, r4, r7
   13520:	and	r5, r9, r8
   13524:	orr	r4, r4, r5
   13528:	add	lr, lr, r4
   1352c:	add	lr, lr, ip
   13530:	mov	ip, r6
   13534:	ror	r6, r6, #19
   13538:	eor	r6, r6, ip, ror #17
   1353c:	eor	r6, r6, ip, lsr #10
   13540:	ldr	ip, [sp, #80]	; 0x50
   13544:	ldr	r4, [sp, #116]	; 0x74
   13548:	add	ip, ip, r4
   1354c:	add	r6, r6, ip
   13550:	ror	ip, sl, #18
   13554:	eor	ip, ip, sl, ror #7
   13558:	eor	ip, ip, sl, lsr #3
   1355c:	add	r5, r6, ip
   13560:	mov	r6, r5
   13564:	eor	r4, r1, r2
   13568:	and	r4, r4, r3
   1356c:	eor	r4, r4, r1
   13570:	ldr	ip, [pc, #2672]	; 13fe8 <dcngettext@plt+0x2ff8>
   13574:	add	ip, r5, ip
   13578:	add	r0, ip, r0
   1357c:	add	ip, r4, r0
   13580:	ror	r0, r3, #11
   13584:	eor	r0, r0, r3, ror #6
   13588:	eor	r0, r0, r3, ror #25
   1358c:	add	r0, ip, r0
   13590:	add	r7, r7, r0
   13594:	ror	ip, lr, #13
   13598:	eor	ip, ip, lr, ror #2
   1359c:	eor	ip, ip, lr, ror #22
   135a0:	orr	r4, r8, lr
   135a4:	and	r4, r4, r9
   135a8:	and	r5, r8, lr
   135ac:	orr	r4, r4, r5
   135b0:	add	ip, ip, r4
   135b4:	add	ip, ip, r0
   135b8:	ldr	r0, [sp, #140]	; 0x8c
   135bc:	ror	r5, r0, #19
   135c0:	eor	r5, r5, r0, ror #17
   135c4:	eor	r5, r5, r0, lsr #10
   135c8:	ldr	r0, [sp, #120]	; 0x78
   135cc:	add	r0, sl, r0
   135d0:	add	r5, r5, r0
   135d4:	ror	r0, fp, #18
   135d8:	eor	r0, r0, fp, ror #7
   135dc:	eor	r0, r0, fp, lsr #3
   135e0:	add	r5, r5, r0
   135e4:	eor	r4, r2, r3
   135e8:	and	r4, r4, r7
   135ec:	eor	r4, r4, r2
   135f0:	ldr	r0, [pc, #2548]	; 13fec <dcngettext@plt+0x2ffc>
   135f4:	add	r0, r5, r0
   135f8:	add	r1, r0, r1
   135fc:	add	r0, r4, r1
   13600:	ror	r1, r7, #11
   13604:	eor	r1, r1, r7, ror #6
   13608:	eor	r1, r1, r7, ror #25
   1360c:	add	r1, r0, r1
   13610:	add	r9, r9, r1
   13614:	ror	r0, ip, #13
   13618:	eor	r0, r0, ip, ror #2
   1361c:	eor	r0, r0, ip, ror #22
   13620:	orr	r4, lr, ip
   13624:	and	r4, r4, r8
   13628:	and	sl, lr, ip
   1362c:	orr	r4, r4, sl
   13630:	add	r0, r0, r4
   13634:	add	r0, r0, r1
   13638:	ror	r4, r6, #19
   1363c:	eor	r4, r4, r6, ror #17
   13640:	str	r6, [sp, #52]	; 0x34
   13644:	eor	sl, r4, r6, lsr #10
   13648:	ldr	r1, [sp, #92]	; 0x5c
   1364c:	ror	r1, r1, #18
   13650:	ldr	r4, [sp, #92]	; 0x5c
   13654:	eor	r1, r1, r4, ror #7
   13658:	eor	r1, r1, r4, lsr #3
   1365c:	ldr	r4, [sp, #124]	; 0x7c
   13660:	add	r4, fp, r4
   13664:	add	r4, r1, r4
   13668:	add	r4, r4, sl
   1366c:	eor	sl, r3, r7
   13670:	and	sl, sl, r9
   13674:	eor	sl, sl, r3
   13678:	ldr	r1, [pc, #2416]	; 13ff0 <dcngettext@plt+0x3000>
   1367c:	add	r1, r4, r1
   13680:	add	r2, r1, r2
   13684:	add	r1, sl, r2
   13688:	ror	r2, r9, #11
   1368c:	eor	r2, r2, r9, ror #6
   13690:	eor	r2, r2, r9, ror #25
   13694:	add	r2, r1, r2
   13698:	add	r8, r8, r2
   1369c:	ror	r1, r0, #13
   136a0:	eor	r1, r1, r0, ror #2
   136a4:	eor	r1, r1, r0, ror #22
   136a8:	orr	sl, ip, r0
   136ac:	and	sl, sl, lr
   136b0:	and	fp, ip, r0
   136b4:	orr	sl, sl, fp
   136b8:	add	r1, r1, sl
   136bc:	add	r1, r1, r2
   136c0:	ror	fp, r5, #19
   136c4:	eor	fp, fp, r5, ror #17
   136c8:	eor	fp, fp, r5, lsr #10
   136cc:	ldr	r2, [sp, #96]	; 0x60
   136d0:	ror	r2, r2, #18
   136d4:	ldr	sl, [sp, #96]	; 0x60
   136d8:	eor	r2, r2, sl, ror #7
   136dc:	eor	r2, r2, sl, lsr #3
   136e0:	ldr	sl, [sp, #92]	; 0x5c
   136e4:	ldr	r6, [sp, #128]	; 0x80
   136e8:	add	sl, sl, r6
   136ec:	add	r2, r2, sl
   136f0:	add	r2, r2, fp
   136f4:	mov	fp, r2
   136f8:	eor	sl, r7, r9
   136fc:	and	sl, sl, r8
   13700:	eor	sl, sl, r7
   13704:	ldr	r2, [pc, #2280]	; 13ff4 <dcngettext@plt+0x3004>
   13708:	str	fp, [sp, #4]
   1370c:	add	r2, fp, r2
   13710:	add	r3, r2, r3
   13714:	add	r3, sl, r3
   13718:	ror	r2, r8, #11
   1371c:	eor	r2, r2, r8, ror #6
   13720:	eor	r2, r2, r8, ror #25
   13724:	add	r2, r3, r2
   13728:	add	lr, lr, r2
   1372c:	ror	r3, r1, #13
   13730:	eor	r3, r3, r1, ror #2
   13734:	eor	r3, r3, r1, ror #22
   13738:	orr	sl, r0, r1
   1373c:	and	sl, sl, ip
   13740:	and	fp, r0, r1
   13744:	orr	sl, sl, fp
   13748:	add	r3, r3, sl
   1374c:	add	r3, r3, r2
   13750:	ror	fp, r4, #19
   13754:	eor	fp, fp, r4, ror #17
   13758:	eor	fp, fp, r4, lsr #10
   1375c:	ldr	r2, [sp, #100]	; 0x64
   13760:	ror	r2, r2, #18
   13764:	ldr	r6, [sp, #100]	; 0x64
   13768:	eor	r2, r2, r6, ror #7
   1376c:	eor	r2, r2, r6, lsr #3
   13770:	ldr	r6, [sp, #96]	; 0x60
   13774:	ldr	sl, [sp, #132]	; 0x84
   13778:	add	sl, r6, sl
   1377c:	add	r2, r2, sl
   13780:	add	r2, r2, fp
   13784:	mov	fp, r2
   13788:	eor	sl, r9, r8
   1378c:	and	sl, sl, lr
   13790:	eor	sl, sl, r9
   13794:	ldr	r2, [pc, #2140]	; 13ff8 <dcngettext@plt+0x3008>
   13798:	str	fp, [sp, #8]
   1379c:	add	r2, fp, r2
   137a0:	add	r2, r2, r7
   137a4:	add	r2, sl, r2
   137a8:	ror	r7, lr, #11
   137ac:	eor	r7, r7, lr, ror #6
   137b0:	eor	r7, r7, lr, ror #25
   137b4:	add	r7, r2, r7
   137b8:	add	ip, ip, r7
   137bc:	ror	r2, r3, #13
   137c0:	eor	r2, r2, r3, ror #2
   137c4:	eor	r2, r2, r3, ror #22
   137c8:	orr	sl, r1, r3
   137cc:	and	sl, sl, r0
   137d0:	and	fp, r1, r3
   137d4:	orr	sl, sl, fp
   137d8:	add	r2, r2, sl
   137dc:	add	r2, r2, r7
   137e0:	ldr	r7, [sp, #4]
   137e4:	ror	fp, r7, #19
   137e8:	eor	fp, fp, r7, ror #17
   137ec:	eor	fp, fp, r7, lsr #10
   137f0:	ldr	r6, [sp, #104]	; 0x68
   137f4:	ror	r7, r6, #18
   137f8:	eor	r7, r7, r6, ror #7
   137fc:	eor	r7, r7, r6, lsr #3
   13800:	ldr	r6, [sp, #100]	; 0x64
   13804:	ldr	sl, [sp, #136]	; 0x88
   13808:	add	sl, r6, sl
   1380c:	add	r7, r7, sl
   13810:	add	sl, r7, fp
   13814:	mov	fp, sl
   13818:	eor	sl, r8, lr
   1381c:	and	sl, sl, ip
   13820:	eor	sl, sl, r8
   13824:	ldr	r7, [pc, #2000]	; 13ffc <dcngettext@plt+0x300c>
   13828:	str	fp, [sp, #12]
   1382c:	add	r7, fp, r7
   13830:	add	r7, r7, r9
   13834:	add	sl, sl, r7
   13838:	ror	r7, ip, #11
   1383c:	eor	r7, r7, ip, ror #6
   13840:	eor	r7, r7, ip, ror #25
   13844:	add	r7, sl, r7
   13848:	add	r0, r0, r7
   1384c:	ror	sl, r2, #13
   13850:	eor	sl, sl, r2, ror #2
   13854:	eor	sl, sl, r2, ror #22
   13858:	orr	r9, r3, r2
   1385c:	and	r9, r9, r1
   13860:	and	fp, r3, r2
   13864:	orr	r9, r9, fp
   13868:	add	sl, sl, r9
   1386c:	add	sl, sl, r7
   13870:	ldr	r9, [sp, #8]
   13874:	ror	fp, r9, #19
   13878:	eor	fp, fp, r9, ror #17
   1387c:	eor	fp, fp, r9, lsr #10
   13880:	ldr	r6, [sp, #108]	; 0x6c
   13884:	ror	r7, r6, #18
   13888:	eor	r7, r7, r6, ror #7
   1388c:	eor	r7, r7, r6, lsr #3
   13890:	ldr	r6, [sp, #104]	; 0x68
   13894:	ldr	r9, [sp, #140]	; 0x8c
   13898:	add	r9, r6, r9
   1389c:	add	r7, r7, r9
   138a0:	add	r9, r7, fp
   138a4:	mov	fp, r9
   138a8:	eor	r9, lr, ip
   138ac:	and	r9, r9, r0
   138b0:	eor	r9, r9, lr
   138b4:	ldr	r7, [pc, #1860]	; 14000 <dcngettext@plt+0x3010>
   138b8:	str	fp, [sp, #16]
   138bc:	add	r7, fp, r7
   138c0:	add	r7, r7, r8
   138c4:	add	r9, r9, r7
   138c8:	ror	r7, r0, #11
   138cc:	eor	r7, r7, r0, ror #6
   138d0:	eor	r7, r7, r0, ror #25
   138d4:	add	r7, r9, r7
   138d8:	add	r1, r1, r7
   138dc:	ror	r9, sl, #13
   138e0:	eor	r9, r9, sl, ror #2
   138e4:	eor	r9, r9, sl, ror #22
   138e8:	orr	r8, r2, sl
   138ec:	and	r8, r8, r3
   138f0:	and	fp, r2, sl
   138f4:	orr	r8, r8, fp
   138f8:	add	r9, r9, r8
   138fc:	add	r9, r9, r7
   13900:	ldr	fp, [sp, #12]
   13904:	ror	r8, fp, #19
   13908:	eor	r8, r8, fp, ror #17
   1390c:	eor	r8, r8, fp, lsr #10
   13910:	ldr	r6, [sp, #112]	; 0x70
   13914:	ror	r7, r6, #18
   13918:	eor	r7, r7, r6, ror #7
   1391c:	eor	r7, r7, r6, lsr #3
   13920:	ldr	r6, [sp, #108]	; 0x6c
   13924:	add	r7, r7, r6
   13928:	ldr	r6, [sp, #52]	; 0x34
   1392c:	add	r7, r7, r6
   13930:	add	r8, r8, r7
   13934:	mov	fp, r8
   13938:	eor	r8, ip, r0
   1393c:	and	r8, r8, r1
   13940:	eor	r8, r8, ip
   13944:	ldr	r7, [pc, #1720]	; 14004 <dcngettext@plt+0x3014>
   13948:	str	fp, [sp, #20]
   1394c:	add	r7, fp, r7
   13950:	add	lr, r7, lr
   13954:	add	r8, r8, lr
   13958:	ror	lr, r1, #11
   1395c:	eor	lr, lr, r1, ror #6
   13960:	eor	lr, lr, r1, ror #25
   13964:	add	lr, r8, lr
   13968:	add	r3, r3, lr
   1396c:	ror	r8, r9, #13
   13970:	eor	r8, r8, r9, ror #2
   13974:	eor	r8, r8, r9, ror #22
   13978:	orr	r7, sl, r9
   1397c:	and	r7, r7, r2
   13980:	and	fp, sl, r9
   13984:	orr	r7, r7, fp
   13988:	add	r8, r8, r7
   1398c:	add	r8, r8, lr
   13990:	ldr	lr, [sp, #16]
   13994:	ror	r7, lr, #19
   13998:	eor	r7, r7, lr, ror #17
   1399c:	eor	r7, r7, lr, lsr #10
   139a0:	ldr	r6, [sp, #116]	; 0x74
   139a4:	ror	lr, r6, #18
   139a8:	eor	lr, lr, r6, ror #7
   139ac:	eor	lr, lr, r6, lsr #3
   139b0:	ldr	r6, [sp, #112]	; 0x70
   139b4:	add	lr, lr, r6
   139b8:	add	lr, lr, r5
   139bc:	add	lr, r7, lr
   139c0:	mov	fp, lr
   139c4:	eor	r7, r0, r1
   139c8:	and	r7, r7, r3
   139cc:	eor	r7, r7, r0
   139d0:	ldr	lr, [pc, #1584]	; 14008 <dcngettext@plt+0x3018>
   139d4:	str	fp, [sp, #24]
   139d8:	add	lr, fp, lr
   139dc:	add	ip, lr, ip
   139e0:	add	r7, r7, ip
   139e4:	ror	ip, r3, #11
   139e8:	eor	ip, ip, r3, ror #6
   139ec:	eor	ip, ip, r3, ror #25
   139f0:	add	ip, r7, ip
   139f4:	add	r2, r2, ip
   139f8:	ror	r7, r8, #13
   139fc:	eor	r7, r7, r8, ror #2
   13a00:	eor	r7, r7, r8, ror #22
   13a04:	orr	lr, r9, r8
   13a08:	and	lr, lr, sl
   13a0c:	and	fp, r9, r8
   13a10:	orr	lr, lr, fp
   13a14:	add	r7, r7, lr
   13a18:	add	r7, r7, ip
   13a1c:	ldr	ip, [sp, #20]
   13a20:	ror	lr, ip, #19
   13a24:	eor	lr, lr, ip, ror #17
   13a28:	eor	lr, lr, ip, lsr #10
   13a2c:	ldr	r6, [sp, #120]	; 0x78
   13a30:	ror	ip, r6, #18
   13a34:	eor	ip, ip, r6, ror #7
   13a38:	eor	ip, ip, r6, lsr #3
   13a3c:	ldr	r6, [sp, #116]	; 0x74
   13a40:	add	ip, ip, r6
   13a44:	add	ip, ip, r4
   13a48:	add	ip, lr, ip
   13a4c:	mov	fp, ip
   13a50:	eor	lr, r1, r3
   13a54:	and	lr, lr, r2
   13a58:	eor	lr, lr, r1
   13a5c:	ldr	ip, [pc, #1448]	; 1400c <dcngettext@plt+0x301c>
   13a60:	str	fp, [sp, #28]
   13a64:	add	ip, fp, ip
   13a68:	add	r0, ip, r0
   13a6c:	add	lr, lr, r0
   13a70:	ror	r0, r2, #11
   13a74:	eor	r0, r0, r2, ror #6
   13a78:	eor	r0, r0, r2, ror #25
   13a7c:	add	r0, lr, r0
   13a80:	add	sl, sl, r0
   13a84:	ror	lr, r7, #13
   13a88:	eor	lr, lr, r7, ror #2
   13a8c:	eor	lr, lr, r7, ror #22
   13a90:	orr	ip, r8, r7
   13a94:	and	ip, ip, r9
   13a98:	and	fp, r8, r7
   13a9c:	orr	ip, ip, fp
   13aa0:	add	lr, lr, ip
   13aa4:	add	lr, lr, r0
   13aa8:	ldr	r0, [sp, #24]
   13aac:	ror	ip, r0, #19
   13ab0:	eor	ip, ip, r0, ror #17
   13ab4:	eor	ip, ip, r0, lsr #10
   13ab8:	ldr	r6, [sp, #124]	; 0x7c
   13abc:	ror	r0, r6, #18
   13ac0:	eor	r0, r0, r6, ror #7
   13ac4:	eor	r0, r0, r6, lsr #3
   13ac8:	ldr	r6, [sp, #120]	; 0x78
   13acc:	add	r0, r0, r6
   13ad0:	ldr	fp, [sp, #4]
   13ad4:	add	r0, r0, fp
   13ad8:	add	r0, ip, r0
   13adc:	mov	fp, r0
   13ae0:	eor	ip, r3, r2
   13ae4:	and	ip, ip, sl
   13ae8:	eor	ip, ip, r3
   13aec:	ldr	r0, [pc, #1308]	; 14010 <dcngettext@plt+0x3020>
   13af0:	str	fp, [sp, #32]
   13af4:	add	r0, fp, r0
   13af8:	add	r1, r0, r1
   13afc:	add	ip, ip, r1
   13b00:	ror	r1, sl, #11
   13b04:	eor	r1, r1, sl, ror #6
   13b08:	eor	r1, r1, sl, ror #25
   13b0c:	add	r1, ip, r1
   13b10:	add	r9, r9, r1
   13b14:	ror	ip, lr, #13
   13b18:	eor	ip, ip, lr, ror #2
   13b1c:	eor	ip, ip, lr, ror #22
   13b20:	orr	r0, r7, lr
   13b24:	and	r0, r0, r8
   13b28:	and	fp, r7, lr
   13b2c:	orr	r0, r0, fp
   13b30:	add	ip, ip, r0
   13b34:	add	ip, ip, r1
   13b38:	ldr	r1, [sp, #28]
   13b3c:	ror	r0, r1, #19
   13b40:	eor	r0, r0, r1, ror #17
   13b44:	eor	r0, r0, r1, lsr #10
   13b48:	ldr	r6, [sp, #128]	; 0x80
   13b4c:	ror	r1, r6, #18
   13b50:	eor	r1, r1, r6, ror #7
   13b54:	eor	r1, r1, r6, lsr #3
   13b58:	ldr	r6, [sp, #124]	; 0x7c
   13b5c:	add	r1, r1, r6
   13b60:	ldr	fp, [sp, #8]
   13b64:	add	r1, r1, fp
   13b68:	add	r1, r0, r1
   13b6c:	mov	fp, r1
   13b70:	eor	r0, r2, sl
   13b74:	and	r0, r0, r9
   13b78:	eor	r0, r0, r2
   13b7c:	ldr	r1, [pc, #1168]	; 14014 <dcngettext@plt+0x3024>
   13b80:	str	fp, [sp, #36]	; 0x24
   13b84:	add	r1, fp, r1
   13b88:	add	r3, r1, r3
   13b8c:	add	r3, r0, r3
   13b90:	ror	r1, r9, #11
   13b94:	eor	r1, r1, r9, ror #6
   13b98:	eor	r1, r1, r9, ror #25
   13b9c:	add	r1, r3, r1
   13ba0:	add	r8, r8, r1
   13ba4:	ror	r3, ip, #13
   13ba8:	eor	r3, r3, ip, ror #2
   13bac:	eor	r3, r3, ip, ror #22
   13bb0:	orr	r0, lr, ip
   13bb4:	and	r0, r0, r7
   13bb8:	and	fp, lr, ip
   13bbc:	orr	r0, r0, fp
   13bc0:	add	r3, r3, r0
   13bc4:	add	r3, r3, r1
   13bc8:	ldr	r1, [sp, #32]
   13bcc:	ror	r0, r1, #19
   13bd0:	eor	r0, r0, r1, ror #17
   13bd4:	eor	r0, r0, r1, lsr #10
   13bd8:	ldr	r6, [sp, #132]	; 0x84
   13bdc:	ror	r1, r6, #18
   13be0:	eor	r1, r1, r6, ror #7
   13be4:	eor	r1, r1, r6, lsr #3
   13be8:	ldr	r6, [sp, #128]	; 0x80
   13bec:	add	r1, r1, r6
   13bf0:	ldr	fp, [sp, #12]
   13bf4:	add	r1, r1, fp
   13bf8:	add	r0, r0, r1
   13bfc:	mov	fp, r0
   13c00:	eor	r0, sl, r9
   13c04:	and	r0, r0, r8
   13c08:	eor	r0, r0, sl
   13c0c:	ldr	r1, [pc, #1028]	; 14018 <dcngettext@plt+0x3028>
   13c10:	str	fp, [sp, #40]	; 0x28
   13c14:	add	r1, fp, r1
   13c18:	add	r2, r1, r2
   13c1c:	add	r0, r0, r2
   13c20:	ror	r2, r8, #11
   13c24:	eor	r2, r2, r8, ror #6
   13c28:	eor	r2, r2, r8, ror #25
   13c2c:	add	r2, r0, r2
   13c30:	add	r7, r7, r2
   13c34:	ror	r0, r3, #13
   13c38:	eor	r0, r0, r3, ror #2
   13c3c:	eor	r0, r0, r3, ror #22
   13c40:	orr	r1, ip, r3
   13c44:	and	r1, r1, lr
   13c48:	and	fp, ip, r3
   13c4c:	orr	r1, r1, fp
   13c50:	add	r0, r0, r1
   13c54:	add	r0, r0, r2
   13c58:	ldr	r2, [sp, #36]	; 0x24
   13c5c:	ror	r1, r2, #19
   13c60:	eor	r1, r1, r2, ror #17
   13c64:	eor	r1, r1, r2, lsr #10
   13c68:	ldr	r6, [sp, #136]	; 0x88
   13c6c:	ror	r2, r6, #18
   13c70:	eor	r2, r2, r6, ror #7
   13c74:	eor	r2, r2, r6, lsr #3
   13c78:	ldr	r6, [sp, #132]	; 0x84
   13c7c:	add	r2, r2, r6
   13c80:	ldr	fp, [sp, #16]
   13c84:	add	r2, r2, fp
   13c88:	add	r2, r1, r2
   13c8c:	mov	fp, r2
   13c90:	eor	r1, r9, r8
   13c94:	and	r1, r1, r7
   13c98:	eor	r1, r1, r9
   13c9c:	ldr	r2, [pc, #888]	; 1401c <dcngettext@plt+0x302c>
   13ca0:	str	fp, [sp, #44]	; 0x2c
   13ca4:	add	r2, fp, r2
   13ca8:	add	r2, r2, sl
   13cac:	add	r1, r1, r2
   13cb0:	ror	r2, r7, #11
   13cb4:	eor	r2, r2, r7, ror #6
   13cb8:	eor	r2, r2, r7, ror #25
   13cbc:	add	r2, r1, r2
   13cc0:	add	lr, lr, r2
   13cc4:	ror	r1, r0, #13
   13cc8:	eor	r1, r1, r0, ror #2
   13ccc:	eor	r1, r1, r0, ror #22
   13cd0:	orr	sl, r3, r0
   13cd4:	and	sl, sl, ip
   13cd8:	and	fp, r3, r0
   13cdc:	orr	sl, sl, fp
   13ce0:	add	r1, r1, sl
   13ce4:	add	r1, r1, r2
   13ce8:	ldr	r2, [sp, #40]	; 0x28
   13cec:	ror	sl, r2, #19
   13cf0:	eor	sl, sl, r2, ror #17
   13cf4:	eor	sl, sl, r2, lsr #10
   13cf8:	ldr	r6, [sp, #140]	; 0x8c
   13cfc:	ror	r2, r6, #18
   13d00:	eor	r2, r2, r6, ror #7
   13d04:	eor	r2, r2, r6, lsr #3
   13d08:	ldr	r6, [sp, #136]	; 0x88
   13d0c:	add	r2, r2, r6
   13d10:	ldr	fp, [sp, #20]
   13d14:	add	r2, r2, fp
   13d18:	add	sl, sl, r2
   13d1c:	mov	fp, sl
   13d20:	eor	sl, r8, r7
   13d24:	and	sl, sl, lr
   13d28:	eor	sl, sl, r8
   13d2c:	ldr	r2, [pc, #748]	; 14020 <dcngettext@plt+0x3030>
   13d30:	str	fp, [sp, #48]	; 0x30
   13d34:	add	r2, fp, r2
   13d38:	add	r2, r2, r9
   13d3c:	add	sl, sl, r2
   13d40:	ror	r2, lr, #11
   13d44:	eor	r2, r2, lr, ror #6
   13d48:	eor	r2, r2, lr, ror #25
   13d4c:	add	sl, sl, r2
   13d50:	add	fp, ip, sl
   13d54:	ror	r2, r1, #13
   13d58:	eor	r2, r2, r1, ror #2
   13d5c:	eor	r2, r2, r1, ror #22
   13d60:	orr	ip, r0, r1
   13d64:	and	ip, ip, r3
   13d68:	and	r9, r0, r1
   13d6c:	orr	ip, ip, r9
   13d70:	add	r2, r2, ip
   13d74:	add	r2, r2, sl
   13d78:	ldr	ip, [sp, #44]	; 0x2c
   13d7c:	ror	sl, ip, #19
   13d80:	eor	sl, sl, ip, ror #17
   13d84:	eor	sl, sl, ip, lsr #10
   13d88:	ldr	r6, [sp, #52]	; 0x34
   13d8c:	ror	ip, r6, #18
   13d90:	eor	ip, ip, r6, ror #7
   13d94:	eor	ip, ip, r6, lsr #3
   13d98:	ldr	r6, [sp, #140]	; 0x8c
   13d9c:	add	ip, ip, r6
   13da0:	ldr	r9, [sp, #24]
   13da4:	add	ip, ip, r9
   13da8:	add	r9, sl, ip
   13dac:	eor	sl, r7, lr
   13db0:	and	sl, sl, fp
   13db4:	eor	sl, sl, r7
   13db8:	ldr	ip, [pc, #612]	; 14024 <dcngettext@plt+0x3034>
   13dbc:	add	ip, r9, ip
   13dc0:	add	r8, ip, r8
   13dc4:	add	r8, sl, r8
   13dc8:	ror	ip, fp, #11
   13dcc:	eor	ip, ip, fp, ror #6
   13dd0:	eor	ip, ip, fp, ror #25
   13dd4:	add	r8, r8, ip
   13dd8:	add	ip, r3, r8
   13ddc:	ror	r3, r2, #13
   13de0:	eor	r3, r3, r2, ror #2
   13de4:	eor	r3, r3, r2, ror #22
   13de8:	orr	sl, r1, r2
   13dec:	and	sl, sl, r0
   13df0:	and	r6, r1, r2
   13df4:	orr	sl, sl, r6
   13df8:	add	sl, r3, sl
   13dfc:	add	r8, sl, r8
   13e00:	ldr	r3, [sp, #48]	; 0x30
   13e04:	ror	sl, r3, #19
   13e08:	eor	sl, sl, r3, ror #17
   13e0c:	eor	sl, sl, r3, lsr #10
   13e10:	ror	r3, r5, #18
   13e14:	eor	r3, r3, r5, ror #7
   13e18:	eor	r3, r3, r5, lsr #3
   13e1c:	ldr	r6, [sp, #52]	; 0x34
   13e20:	add	r3, r3, r6
   13e24:	ldr	r6, [sp, #28]
   13e28:	add	r3, r3, r6
   13e2c:	add	sl, sl, r3
   13e30:	eor	r6, lr, fp
   13e34:	and	r6, r6, ip
   13e38:	eor	r6, r6, lr
   13e3c:	ldr	r3, [pc, #484]	; 14028 <dcngettext@plt+0x3038>
   13e40:	str	sl, [sp, #56]	; 0x38
   13e44:	add	r3, sl, r3
   13e48:	add	r3, r3, r7
   13e4c:	add	r3, r6, r3
   13e50:	ror	r6, ip, #11
   13e54:	eor	r6, r6, ip, ror #6
   13e58:	eor	r6, r6, ip, ror #25
   13e5c:	add	r3, r3, r6
   13e60:	add	r0, r0, r3
   13e64:	ror	r6, r8, #13
   13e68:	eor	r6, r6, r8, ror #2
   13e6c:	eor	r6, r6, r8, ror #22
   13e70:	orr	r7, r2, r8
   13e74:	and	r7, r7, r1
   13e78:	and	sl, r2, r8
   13e7c:	orr	r7, r7, sl
   13e80:	add	r6, r6, r7
   13e84:	add	r6, r6, r3
   13e88:	ror	r7, r9, #19
   13e8c:	eor	r7, r7, r9, ror #17
   13e90:	eor	r7, r7, r9, lsr #10
   13e94:	ror	r3, r4, #18
   13e98:	eor	r3, r3, r4, ror #7
   13e9c:	eor	r3, r3, r4, lsr #3
   13ea0:	add	r3, r3, r5
   13ea4:	ldr	sl, [sp, #32]
   13ea8:	add	r3, r3, sl
   13eac:	add	sl, r7, r3
   13eb0:	eor	r5, fp, ip
   13eb4:	and	r5, r5, r0
   13eb8:	eor	r5, r5, fp
   13ebc:	ldr	r3, [pc, #360]	; 1402c <dcngettext@plt+0x303c>
   13ec0:	add	r3, sl, r3
   13ec4:	add	r3, r3, lr
   13ec8:	add	r3, r5, r3
   13ecc:	ror	lr, r0, #11
   13ed0:	eor	lr, lr, r0, ror #6
   13ed4:	eor	lr, lr, r0, ror #25
   13ed8:	add	r3, r3, lr
   13edc:	add	r1, r1, r3
   13ee0:	ror	lr, r6, #13
   13ee4:	eor	lr, lr, r6, ror #2
   13ee8:	eor	lr, lr, r6, ror #22
   13eec:	orr	r5, r8, r6
   13ef0:	and	r5, r5, r2
   13ef4:	and	r7, r8, r6
   13ef8:	orr	r5, r5, r7
   13efc:	add	lr, lr, r5
   13f00:	add	lr, lr, r3
   13f04:	ldr	r3, [sp, #56]	; 0x38
   13f08:	ror	r5, r3, #19
   13f0c:	eor	r5, r5, r3, ror #17
   13f10:	eor	r5, r5, r3, lsr #10
   13f14:	ldr	r7, [sp, #4]
   13f18:	ror	r3, r7, #18
   13f1c:	eor	r3, r3, r7, ror #7
   13f20:	eor	r3, r3, r7, lsr #3
   13f24:	add	r3, r3, r4
   13f28:	ldr	r4, [sp, #36]	; 0x24
   13f2c:	add	r3, r3, r4
   13f30:	add	r4, r5, r3
   13f34:	mov	r5, r4
   13f38:	eor	r4, ip, r0
   13f3c:	and	r4, r4, r1
   13f40:	eor	r4, r4, ip
   13f44:	ldr	r3, [pc, #228]	; 14030 <dcngettext@plt+0x3040>
   13f48:	str	r5, [sp, #52]	; 0x34
   13f4c:	add	r3, r5, r3
   13f50:	add	r3, r3, fp
   13f54:	add	r3, r4, r3
   13f58:	ror	r4, r1, #11
   13f5c:	eor	r4, r4, r1, ror #6
   13f60:	eor	r4, r4, r1, ror #25
   13f64:	add	r3, r3, r4
   13f68:	add	r2, r2, r3
   13f6c:	ror	r4, lr, #13
   13f70:	eor	r4, r4, lr, ror #2
   13f74:	eor	r4, r4, lr, ror #22
   13f78:	orr	r5, r6, lr
   13f7c:	and	r5, r5, r8
   13f80:	and	r7, r6, lr
   13f84:	orr	r5, r5, r7
   13f88:	add	r4, r4, r5
   13f8c:	add	r4, r4, r3
   13f90:	ror	r5, sl, #19
   13f94:	eor	r5, r5, sl, ror #17
   13f98:	eor	r5, r5, sl, lsr #10
   13f9c:	ldr	fp, [sp, #8]
   13fa0:	ror	r3, fp, #18
   13fa4:	eor	r3, r3, fp, ror #7
   13fa8:	eor	r3, r3, fp, lsr #3
   13fac:	ldr	r7, [sp, #4]
   13fb0:	add	r3, r3, r7
   13fb4:	ldr	r7, [sp, #40]	; 0x28
   13fb8:	add	r3, r3, r7
   13fbc:	add	r7, r5, r3
   13fc0:	eor	r5, r0, r1
   13fc4:	and	r5, r5, r2
   13fc8:	eor	r5, r5, r0
   13fcc:	b	140a8 <dcngettext@plt+0x30b8>
   13fd0:	teqvc	r7, r1	; <illegal shifter operand>
   13fd4:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   13fd8:	ldmib	r5!, {r0, r2, r5, r7, r8, r9, fp, ip, lr, pc}
   13fdc:	eorsls	r8, pc, #164, 4	; 0x4000000a
   13fe0:	blls	ff715a84 <stdout@@GLIBC_2.4+0xff6eb918>
   13fe4:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   13fe8:	ldr	r6, [fp], #2497	; 0x9c1
   13fec:	svc	0x00be4786
   13ff0:	svceq	0x00c19dc6
   13ff4:	strcs	sl, [ip], #-460	; 0xfffffe34
   13ff8:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   13ffc:	bmi	1d352ac <stdout@@GLIBC_2.4+0x1d0b140>
   14000:			; <UNDEFINED> instruction: 0x5cb0a9dc
   14004:	usatvc	r8, #25, sl, asr #17
   14008:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   1400c:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   14010:	andlt	r2, r3, r8, asr #15
   14014:	svclt	0x00597fc7
   14018:			; <UNDEFINED> instruction: 0xc6e00bf3
   1401c:	strle	r9, [r7, #327]!	; 0x147
   14020:			; <UNDEFINED> instruction: 0x06ca6351
   14024:	strtne	r2, [r9], #-2407	; 0xfffff699
   14028:	ldrcs	r0, [r7, r5, lsl #21]!
   1402c:	mrccs	1, 0, r2, cr11, cr8, {1}
   14030:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   14034:	teqpl	r8, #1216	; 0x4c0
   14038:	strvs	r7, [sl, #-852]	; 0xfffffcac
   1403c:			; <UNDEFINED> instruction: 0x766a0abb
   14040:	bichi	ip, r2, lr, lsr #18
   14044:	rsbsls	r2, r2, #34048	; 0x8500
   14048:	adcsge	lr, pc, #10551296	; 0xa10000
   1404c:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   14050:	subgt	r8, fp, #112, 22	; 0x1c000
   14054:	strbgt	r5, [ip, -r3, lsr #3]!
   14058:	orrsle	lr, r2, r9, lsl r8
   1405c:	ldrle	r0, [r9], r4, lsr #12
   14060:	vst3.32	{d3,d5,d7}, [lr], r5
   14064:	rsbne	sl, sl, r0, ror r0
   14068:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   1406c:	cdpne	12, 3, cr6, cr7, cr8, {0}
   14070:	strbcs	r7, [r8, -ip, asr #14]
   14074:	ldrtcc	fp, [r0], #3253	; 0xcb5
   14078:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   1407c:	vfnmami.f32	s21, s16, s20
   14080:	blpl	fe7469c4 <stdout@@GLIBC_2.4+0xfe71c858>
   14084:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   14088:	strvc	r8, [pc], #750	; 14090 <dcngettext@plt+0x30a0>
   1408c:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   14090:	strbhi	r7, [r8], #2068	; 0x814
   14094:	sfmhi	f0, 2, [r7], {8}
   14098:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   1409c:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   140a0:	mrclt	3, 7, sl, cr9, cr7, {7}
   140a4:			; <UNDEFINED> instruction: 0xc67178f2
   140a8:	ldr	r3, [pc, #-124]	; 14034 <dcngettext@plt+0x3044>
   140ac:	str	r7, [sp, #4]
   140b0:	add	r3, r7, r3
   140b4:	add	r3, r3, ip
   140b8:	add	r3, r5, r3
   140bc:	ror	ip, r2, #11
   140c0:	eor	ip, ip, r2, ror #6
   140c4:	eor	ip, ip, r2, ror #25
   140c8:	add	r3, r3, ip
   140cc:	add	r8, r8, r3
   140d0:	ror	ip, r4, #13
   140d4:	eor	ip, ip, r4, ror #2
   140d8:	eor	ip, ip, r4, ror #22
   140dc:	orr	r5, lr, r4
   140e0:	and	r5, r5, r6
   140e4:	and	r7, lr, r4
   140e8:	orr	r5, r5, r7
   140ec:	add	ip, ip, r5
   140f0:	add	ip, ip, r3
   140f4:	ldr	r5, [sp, #52]	; 0x34
   140f8:	ror	r3, r5, #19
   140fc:	eor	r3, r3, r5, ror #17
   14100:	eor	r3, r3, r5, lsr #10
   14104:	ldr	r7, [sp, #12]
   14108:	ror	fp, r7, #18
   1410c:	eor	fp, fp, r7, ror #7
   14110:	eor	fp, fp, r7, lsr #3
   14114:	ldr	r5, [sp, #8]
   14118:	add	fp, fp, r5
   1411c:	ldr	r5, [sp, #44]	; 0x2c
   14120:	add	fp, fp, r5
   14124:	add	r7, r3, fp
   14128:	eor	r5, r1, r2
   1412c:	and	r5, r5, r8
   14130:	eor	r5, r5, r1
   14134:	ldr	r3, [pc, #-260]	; 14038 <dcngettext@plt+0x3048>
   14138:	str	r7, [sp, #8]
   1413c:	add	r3, r7, r3
   14140:	add	r3, r3, r0
   14144:	add	r3, r5, r3
   14148:	ror	r0, r8, #11
   1414c:	eor	r0, r0, r8, ror #6
   14150:	eor	r0, r0, r8, ror #25
   14154:	add	r3, r3, r0
   14158:	add	r6, r6, r3
   1415c:	ror	r0, ip, #13
   14160:	eor	r0, r0, ip, ror #2
   14164:	eor	r0, r0, ip, ror #22
   14168:	orr	r5, r4, ip
   1416c:	and	r5, r5, lr
   14170:	and	r7, r4, ip
   14174:	orr	r5, r5, r7
   14178:	add	r0, r0, r5
   1417c:	add	r0, r0, r3
   14180:	ldr	r7, [sp, #4]
   14184:	ror	r3, r7, #19
   14188:	eor	r3, r3, r7, ror #17
   1418c:	eor	r3, r3, r7, lsr #10
   14190:	ldr	r5, [sp, #16]
   14194:	ror	r7, r5, #18
   14198:	eor	r7, r7, r5, ror #7
   1419c:	eor	r7, r7, r5, lsr #3
   141a0:	ldr	r5, [sp, #12]
   141a4:	add	r7, r7, r5
   141a8:	ldr	r5, [sp, #48]	; 0x30
   141ac:	add	r7, r7, r5
   141b0:	add	r3, r3, r7
   141b4:	mov	fp, r3
   141b8:	eor	r5, r2, r8
   141bc:	and	r5, r5, r6
   141c0:	eor	r5, r5, r2
   141c4:	ldr	r3, [pc, #-400]	; 1403c <dcngettext@plt+0x304c>
   141c8:	add	r3, fp, r3
   141cc:	add	r3, r3, r1
   141d0:	add	r3, r5, r3
   141d4:	ror	r1, r6, #11
   141d8:	eor	r1, r1, r6, ror #6
   141dc:	eor	r1, r1, r6, ror #25
   141e0:	add	r3, r3, r1
   141e4:	add	lr, lr, r3
   141e8:	ror	r1, r0, #13
   141ec:	eor	r1, r1, r0, ror #2
   141f0:	eor	r1, r1, r0, ror #22
   141f4:	orr	r5, ip, r0
   141f8:	and	r5, r5, r4
   141fc:	and	r7, ip, r0
   14200:	orr	r5, r5, r7
   14204:	add	r1, r1, r5
   14208:	add	r1, r1, r3
   1420c:	ldr	r5, [sp, #8]
   14210:	ror	r3, r5, #19
   14214:	eor	r3, r3, r5, ror #17
   14218:	eor	r3, r3, r5, lsr #10
   1421c:	ldr	r5, [sp, #20]
   14220:	ror	r7, r5, #18
   14224:	eor	r7, r7, r5, ror #7
   14228:	eor	r7, r7, r5, lsr #3
   1422c:	ldr	r5, [sp, #16]
   14230:	add	r7, r7, r5
   14234:	add	r7, r7, r9
   14238:	add	r3, r3, r7
   1423c:	mov	r7, r3
   14240:	eor	r5, r8, r6
   14244:	and	r5, r5, lr
   14248:	eor	r5, r5, r8
   1424c:	ldr	r3, [pc, #-532]	; 14040 <dcngettext@plt+0x3050>
   14250:	str	r7, [sp, #60]	; 0x3c
   14254:	add	r3, r7, r3
   14258:	add	r3, r3, r2
   1425c:	add	r3, r5, r3
   14260:	ror	r2, lr, #11
   14264:	eor	r2, r2, lr, ror #6
   14268:	eor	r2, r2, lr, ror #25
   1426c:	add	r3, r3, r2
   14270:	add	r4, r4, r3
   14274:	ror	r2, r1, #13
   14278:	eor	r2, r2, r1, ror #2
   1427c:	eor	r2, r2, r1, ror #22
   14280:	orr	r5, r0, r1
   14284:	and	r5, r5, ip
   14288:	and	r7, r0, r1
   1428c:	orr	r5, r5, r7
   14290:	add	r2, r2, r5
   14294:	add	r2, r2, r3
   14298:	ror	r5, fp, #19
   1429c:	eor	r5, r5, fp, ror #17
   142a0:	eor	r5, r5, fp, lsr #10
   142a4:	ldr	r7, [sp, #24]
   142a8:	ror	r3, r7, #18
   142ac:	eor	r3, r3, r7, ror #7
   142b0:	eor	r3, r3, r7, lsr #3
   142b4:	ldr	r7, [sp, #20]
   142b8:	add	r3, r3, r7
   142bc:	ldr	r7, [sp, #56]	; 0x38
   142c0:	add	r3, r3, r7
   142c4:	add	r3, r5, r3
   142c8:	mov	r7, r3
   142cc:	eor	r5, r6, lr
   142d0:	and	r5, r5, r4
   142d4:	eor	r5, r5, r6
   142d8:	ldr	r3, [pc, #-668]	; 14044 <dcngettext@plt+0x3054>
   142dc:	str	r7, [sp, #12]
   142e0:	add	r3, r7, r3
   142e4:	add	r3, r3, r8
   142e8:	add	r3, r5, r3
   142ec:	ror	r5, r4, #11
   142f0:	eor	r5, r5, r4, ror #6
   142f4:	eor	r5, r5, r4, ror #25
   142f8:	add	r3, r3, r5
   142fc:	add	ip, ip, r3
   14300:	ror	r5, r2, #13
   14304:	eor	r5, r5, r2, ror #2
   14308:	eor	r5, r5, r2, ror #22
   1430c:	orr	r7, r1, r2
   14310:	and	r7, r7, r0
   14314:	and	r8, r1, r2
   14318:	orr	r7, r7, r8
   1431c:	add	r5, r5, r7
   14320:	add	r5, r5, r3
   14324:	ldr	r7, [sp, #60]	; 0x3c
   14328:	ror	r3, r7, #19
   1432c:	eor	r3, r3, r7, ror #17
   14330:	eor	r3, r3, r7, lsr #10
   14334:	ldr	r8, [sp, #28]
   14338:	ror	r7, r8, #18
   1433c:	eor	r7, r7, r8, ror #7
   14340:	eor	r7, r7, r8, lsr #3
   14344:	ldr	r8, [sp, #24]
   14348:	add	r7, r7, r8
   1434c:	add	r7, r7, sl
   14350:	add	r3, r3, r7
   14354:	mov	r8, r3
   14358:	eor	r7, lr, r4
   1435c:	and	r7, r7, ip
   14360:	eor	r7, r7, lr
   14364:	ldr	r3, [pc, #-804]	; 14048 <dcngettext@plt+0x3058>
   14368:	str	r8, [sp, #16]
   1436c:	add	r3, r8, r3
   14370:	add	r3, r3, r6
   14374:	add	r3, r7, r3
   14378:	ror	r6, ip, #11
   1437c:	eor	r6, r6, ip, ror #6
   14380:	eor	r6, r6, ip, ror #25
   14384:	add	r3, r3, r6
   14388:	add	r0, r0, r3
   1438c:	ror	r6, r5, #13
   14390:	eor	r6, r6, r5, ror #2
   14394:	eor	r6, r6, r5, ror #22
   14398:	orr	r7, r2, r5
   1439c:	and	r7, r7, r1
   143a0:	and	r8, r2, r5
   143a4:	orr	r7, r7, r8
   143a8:	add	r6, r6, r7
   143ac:	add	r6, r6, r3
   143b0:	ldr	r3, [sp, #12]
   143b4:	ror	r7, r3, #19
   143b8:	eor	r7, r7, r3, ror #17
   143bc:	eor	r7, r7, r3, lsr #10
   143c0:	ldr	r8, [sp, #32]
   143c4:	ror	r3, r8, #18
   143c8:	eor	r3, r3, r8, ror #7
   143cc:	eor	r3, r3, r8, lsr #3
   143d0:	ldr	r8, [sp, #28]
   143d4:	add	r3, r3, r8
   143d8:	ldr	r8, [sp, #52]	; 0x34
   143dc:	add	r3, r3, r8
   143e0:	add	r3, r7, r3
   143e4:	mov	r8, r3
   143e8:	eor	r7, r4, ip
   143ec:	and	r7, r7, r0
   143f0:	eor	r7, r7, r4
   143f4:	ldr	r3, [pc, #-944]	; 1404c <dcngettext@plt+0x305c>
   143f8:	str	r8, [sp, #64]	; 0x40
   143fc:	add	r3, r8, r3
   14400:	add	r3, r3, lr
   14404:	add	r7, r7, r3
   14408:	ror	r3, r0, #11
   1440c:	eor	r3, r3, r0, ror #6
   14410:	eor	r3, r3, r0, ror #25
   14414:	add	r3, r7, r3
   14418:	add	r1, r1, r3
   1441c:	ror	r7, r6, #13
   14420:	eor	r7, r7, r6, ror #2
   14424:	eor	r7, r7, r6, ror #22
   14428:	orr	lr, r5, r6
   1442c:	and	lr, lr, r2
   14430:	and	r8, r5, r6
   14434:	orr	lr, lr, r8
   14438:	add	r7, r7, lr
   1443c:	add	r7, r7, r3
   14440:	ldr	r3, [sp, #16]
   14444:	ror	lr, r3, #19
   14448:	eor	lr, lr, r3, ror #17
   1444c:	eor	lr, lr, r3, lsr #10
   14450:	ldr	r8, [sp, #36]	; 0x24
   14454:	ror	r3, r8, #18
   14458:	eor	r3, r3, r8, ror #7
   1445c:	eor	r3, r3, r8, lsr #3
   14460:	ldr	r8, [sp, #32]
   14464:	add	r3, r3, r8
   14468:	ldr	r8, [sp, #4]
   1446c:	add	r3, r3, r8
   14470:	add	lr, lr, r3
   14474:	mov	r8, lr
   14478:	eor	lr, ip, r0
   1447c:	and	lr, lr, r1
   14480:	eor	lr, lr, ip
   14484:	ldr	r3, [pc, #-1084]	; 14050 <dcngettext@plt+0x3060>
   14488:	str	r8, [sp, #20]
   1448c:	add	r3, r8, r3
   14490:	add	r3, r3, r4
   14494:	add	lr, lr, r3
   14498:	ror	r3, r1, #11
   1449c:	eor	r3, r3, r1, ror #6
   144a0:	eor	r3, r3, r1, ror #25
   144a4:	add	r3, lr, r3
   144a8:	add	r2, r2, r3
   144ac:	ror	lr, r7, #13
   144b0:	eor	lr, lr, r7, ror #2
   144b4:	eor	lr, lr, r7, ror #22
   144b8:	orr	r4, r6, r7
   144bc:	and	r4, r4, r5
   144c0:	and	r8, r6, r7
   144c4:	orr	r4, r4, r8
   144c8:	add	lr, lr, r4
   144cc:	add	lr, lr, r3
   144d0:	ldr	r3, [sp, #64]	; 0x40
   144d4:	ror	r4, r3, #19
   144d8:	eor	r4, r4, r3, ror #17
   144dc:	eor	r4, r4, r3, lsr #10
   144e0:	ldr	r8, [sp, #40]	; 0x28
   144e4:	ror	r3, r8, #18
   144e8:	eor	r3, r3, r8, ror #7
   144ec:	eor	r3, r3, r8, lsr #3
   144f0:	ldr	r8, [sp, #36]	; 0x24
   144f4:	add	r3, r3, r8
   144f8:	ldr	r8, [sp, #8]
   144fc:	add	r3, r3, r8
   14500:	add	r4, r4, r3
   14504:	mov	r8, r4
   14508:	eor	r4, r0, r1
   1450c:	and	r4, r4, r2
   14510:	eor	r4, r4, r0
   14514:	ldr	r3, [pc, #-1224]	; 14054 <dcngettext@plt+0x3064>
   14518:	str	r8, [sp, #24]
   1451c:	add	r3, r8, r3
   14520:	add	ip, r3, ip
   14524:	add	r4, r4, ip
   14528:	ror	ip, r2, #11
   1452c:	eor	ip, ip, r2, ror #6
   14530:	eor	ip, ip, r2, ror #25
   14534:	add	ip, r4, ip
   14538:	add	r3, r5, ip
   1453c:	ror	r4, lr, #13
   14540:	eor	r4, r4, lr, ror #2
   14544:	eor	r4, r4, lr, ror #22
   14548:	orr	r5, r7, lr
   1454c:	and	r5, r5, r6
   14550:	and	r8, r7, lr
   14554:	orr	r5, r5, r8
   14558:	add	r4, r4, r5
   1455c:	add	r4, r4, ip
   14560:	ldr	ip, [sp, #20]
   14564:	ror	r5, ip, #19
   14568:	eor	r5, r5, ip, ror #17
   1456c:	eor	r5, r5, ip, lsr #10
   14570:	ldr	r8, [sp, #44]	; 0x2c
   14574:	ror	ip, r8, #18
   14578:	eor	ip, ip, r8, ror #7
   1457c:	eor	ip, ip, r8, lsr #3
   14580:	ldr	r8, [sp, #40]	; 0x28
   14584:	add	ip, ip, r8
   14588:	add	ip, ip, fp
   1458c:	add	ip, r5, ip
   14590:	mov	r8, ip
   14594:	eor	r5, r1, r2
   14598:	and	r5, r5, r3
   1459c:	eor	r5, r5, r1
   145a0:	ldr	ip, [pc, #-1360]	; 14058 <dcngettext@plt+0x3068>
   145a4:	str	r8, [sp, #28]
   145a8:	add	ip, r8, ip
   145ac:	add	r0, ip, r0
   145b0:	add	r5, r5, r0
   145b4:	ror	r0, r3, #11
   145b8:	eor	r0, r0, r3, ror #6
   145bc:	eor	r0, r0, r3, ror #25
   145c0:	add	r5, r5, r0
   145c4:	add	ip, r6, r5
   145c8:	ror	r0, r4, #13
   145cc:	eor	r0, r0, r4, ror #2
   145d0:	eor	r0, r0, r4, ror #22
   145d4:	orr	r6, lr, r4
   145d8:	and	r6, r6, r7
   145dc:	and	r8, lr, r4
   145e0:	orr	r6, r6, r8
   145e4:	add	r0, r0, r6
   145e8:	add	r0, r0, r5
   145ec:	ldr	r5, [sp, #24]
   145f0:	ror	r6, r5, #19
   145f4:	eor	r6, r6, r5, ror #17
   145f8:	eor	r6, r6, r5, lsr #10
   145fc:	ldr	r8, [sp, #48]	; 0x30
   14600:	ror	r5, r8, #18
   14604:	eor	r5, r5, r8, ror #7
   14608:	eor	r5, r5, r8, lsr #3
   1460c:	ldr	r8, [sp, #44]	; 0x2c
   14610:	add	r5, r5, r8
   14614:	ldr	r8, [sp, #60]	; 0x3c
   14618:	add	r5, r5, r8
   1461c:	add	r6, r6, r5
   14620:	mov	r8, r6
   14624:	eor	r6, r2, r3
   14628:	and	r6, r6, ip
   1462c:	eor	r6, r6, r2
   14630:	ldr	r5, [pc, #-1500]	; 1405c <dcngettext@plt+0x306c>
   14634:	str	r8, [sp, #32]
   14638:	add	r5, r8, r5
   1463c:	add	r1, r5, r1
   14640:	add	r1, r6, r1
   14644:	ror	r5, ip, #11
   14648:	eor	r5, r5, ip, ror #6
   1464c:	eor	r5, r5, ip, ror #25
   14650:	add	r5, r1, r5
   14654:	add	r6, r7, r5
   14658:	ror	r1, r0, #13
   1465c:	eor	r1, r1, r0, ror #2
   14660:	eor	r1, r1, r0, ror #22
   14664:	orr	r7, r4, r0
   14668:	and	r7, r7, lr
   1466c:	and	r8, r4, r0
   14670:	orr	r7, r7, r8
   14674:	add	r1, r1, r7
   14678:	add	r1, r1, r5
   1467c:	ldr	r5, [sp, #28]
   14680:	ror	r7, r5, #19
   14684:	eor	r7, r7, r5, ror #17
   14688:	eor	r7, r7, r5, lsr #10
   1468c:	ror	r5, r9, #18
   14690:	eor	r5, r5, r9, ror #7
   14694:	eor	r5, r5, r9, lsr #3
   14698:	ldr	r8, [sp, #48]	; 0x30
   1469c:	add	r5, r5, r8
   146a0:	ldr	r8, [sp, #12]
   146a4:	add	r5, r5, r8
   146a8:	add	r7, r7, r5
   146ac:	mov	r8, r7
   146b0:	eor	r7, r3, ip
   146b4:	and	r7, r7, r6
   146b8:	eor	r7, r7, r3
   146bc:	ldr	r5, [pc, #-1636]	; 14060 <dcngettext@plt+0x3070>
   146c0:	str	r8, [sp, #36]	; 0x24
   146c4:	add	r5, r8, r5
   146c8:	add	r2, r5, r2
   146cc:	add	r2, r7, r2
   146d0:	ror	r5, r6, #11
   146d4:	eor	r5, r5, r6, ror #6
   146d8:	eor	r5, r5, r6, ror #25
   146dc:	add	r5, r2, r5
   146e0:	add	lr, lr, r5
   146e4:	ror	r2, r1, #13
   146e8:	eor	r2, r2, r1, ror #2
   146ec:	eor	r2, r2, r1, ror #22
   146f0:	orr	r7, r0, r1
   146f4:	and	r7, r7, r4
   146f8:	and	r8, r0, r1
   146fc:	orr	r7, r7, r8
   14700:	add	r2, r2, r7
   14704:	add	r2, r2, r5
   14708:	ldr	r5, [sp, #32]
   1470c:	ror	r7, r5, #19
   14710:	eor	r7, r7, r5, ror #17
   14714:	eor	r7, r7, r5, lsr #10
   14718:	ldr	r8, [sp, #56]	; 0x38
   1471c:	ror	r5, r8, #18
   14720:	eor	r5, r5, r8, ror #7
   14724:	eor	r5, r5, r8, lsr #3
   14728:	add	r5, r5, r9
   1472c:	ldr	r9, [sp, #16]
   14730:	add	r5, r5, r9
   14734:	add	r7, r7, r5
   14738:	mov	r9, r7
   1473c:	eor	r7, ip, r6
   14740:	and	r7, r7, lr
   14744:	eor	r7, r7, ip
   14748:	ldr	r5, [pc, #-1772]	; 14064 <dcngettext@plt+0x3074>
   1474c:	str	r9, [sp, #40]	; 0x28
   14750:	add	r5, r9, r5
   14754:	add	r5, r5, r3
   14758:	add	r5, r7, r5
   1475c:	ror	r9, lr, #11
   14760:	eor	r9, r9, lr, ror #6
   14764:	eor	r9, r9, lr, ror #25
   14768:	add	r5, r5, r9
   1476c:	add	r3, r4, r5
   14770:	ror	r9, r2, #13
   14774:	eor	r9, r9, r2, ror #2
   14778:	eor	r9, r9, r2, ror #22
   1477c:	orr	r4, r1, r2
   14780:	and	r4, r4, r0
   14784:	and	r7, r1, r2
   14788:	orr	r4, r4, r7
   1478c:	add	r9, r9, r4
   14790:	add	r9, r9, r5
   14794:	ldr	r4, [sp, #36]	; 0x24
   14798:	ror	r5, r4, #19
   1479c:	eor	r5, r5, r4, ror #17
   147a0:	eor	r5, r5, r4, lsr #10
   147a4:	ror	r4, sl, #18
   147a8:	eor	r4, r4, sl, ror #7
   147ac:	eor	r4, r4, sl, lsr #3
   147b0:	add	r4, r4, r8
   147b4:	ldr	r7, [sp, #64]	; 0x40
   147b8:	add	r4, r4, r7
   147bc:	add	r7, r5, r4
   147c0:	str	r7, [sp, #80]	; 0x50
   147c4:	eor	r5, r6, lr
   147c8:	and	r5, r5, r3
   147cc:	eor	r5, r5, r6
   147d0:	ldr	r4, [pc, #-1904]	; 14068 <dcngettext@plt+0x3078>
   147d4:	str	r7, [sp, #44]	; 0x2c
   147d8:	add	r4, r7, r4
   147dc:	add	ip, r4, ip
   147e0:	add	r4, r5, ip
   147e4:	ror	ip, r3, #11
   147e8:	eor	ip, ip, r3, ror #6
   147ec:	eor	ip, ip, r3, ror #25
   147f0:	add	ip, r4, ip
   147f4:	add	r0, r0, ip
   147f8:	ror	r4, r9, #13
   147fc:	eor	r4, r4, r9, ror #2
   14800:	eor	r4, r4, r9, ror #22
   14804:	orr	r5, r2, r9
   14808:	and	r5, r5, r1
   1480c:	and	r7, r2, r9
   14810:	orr	r5, r5, r7
   14814:	add	r4, r4, r5
   14818:	add	r4, r4, ip
   1481c:	ldr	ip, [sp, #40]	; 0x28
   14820:	ror	r7, ip, #19
   14824:	eor	r7, r7, ip, ror #17
   14828:	eor	r7, r7, ip, lsr #10
   1482c:	ldr	r8, [sp, #52]	; 0x34
   14830:	ror	ip, r8, #18
   14834:	eor	ip, ip, r8, ror #7
   14838:	eor	ip, ip, r8, lsr #3
   1483c:	add	ip, ip, sl
   14840:	ldr	sl, [sp, #20]
   14844:	add	ip, ip, sl
   14848:	add	r7, r7, ip
   1484c:	str	r7, [sp, #84]	; 0x54
   14850:	eor	r5, lr, r3
   14854:	and	r5, r5, r0
   14858:	eor	r5, r5, lr
   1485c:	ldr	ip, [pc, #-2040]	; 1406c <dcngettext@plt+0x307c>
   14860:	add	ip, r7, ip
   14864:	add	ip, ip, r6
   14868:	add	r8, r5, ip
   1486c:	ror	ip, r0, #11
   14870:	eor	ip, ip, r0, ror #6
   14874:	eor	ip, ip, r0, ror #25
   14878:	add	ip, r8, ip
   1487c:	add	r1, r1, ip
   14880:	ror	r8, r4, #13
   14884:	eor	r8, r8, r4, ror #2
   14888:	eor	r8, r8, r4, ror #22
   1488c:	orr	r5, r9, r4
   14890:	and	r5, r5, r2
   14894:	and	r6, r9, r4
   14898:	orr	r5, r5, r6
   1489c:	add	r8, r8, r5
   148a0:	add	r8, r8, ip
   148a4:	ldr	ip, [sp, #44]	; 0x2c
   148a8:	ror	r6, ip, #19
   148ac:	eor	r6, r6, ip, ror #17
   148b0:	eor	r6, r6, ip, lsr #10
   148b4:	ldr	sl, [sp, #4]
   148b8:	ror	ip, sl, #18
   148bc:	eor	ip, ip, sl, ror #7
   148c0:	eor	ip, ip, sl, lsr #3
   148c4:	ldr	r5, [sp, #52]	; 0x34
   148c8:	add	ip, ip, r5
   148cc:	ldr	r5, [sp, #24]
   148d0:	add	ip, ip, r5
   148d4:	add	sl, r6, ip
   148d8:	str	sl, [sp, #88]	; 0x58
   148dc:	eor	r5, r3, r0
   148e0:	and	r5, r5, r1
   148e4:	eor	r5, r5, r3
   148e8:	ldr	ip, [pc, #-2176]	; 14070 <dcngettext@plt+0x3080>
   148ec:	str	sl, [sp, #48]	; 0x30
   148f0:	add	ip, sl, ip
   148f4:	add	lr, ip, lr
   148f8:	add	lr, r5, lr
   148fc:	ror	ip, r1, #11
   14900:	eor	ip, ip, r1, ror #6
   14904:	eor	ip, ip, r1, ror #25
   14908:	add	lr, lr, ip
   1490c:	add	r2, r2, lr
   14910:	ror	ip, r8, #13
   14914:	eor	ip, ip, r8, ror #2
   14918:	eor	ip, ip, r8, ror #22
   1491c:	orr	r5, r4, r8
   14920:	and	r5, r5, r9
   14924:	and	sl, r4, r8
   14928:	orr	r5, r5, sl
   1492c:	add	ip, ip, r5
   14930:	add	ip, ip, lr
   14934:	ror	r5, r7, #19
   14938:	eor	r5, r5, r7, ror #17
   1493c:	eor	r5, r5, r7, lsr #10
   14940:	ldr	r6, [sp, #8]
   14944:	ror	lr, r6, #18
   14948:	eor	lr, lr, r6, ror #7
   1494c:	eor	lr, lr, r6, lsr #3
   14950:	ldr	sl, [sp, #4]
   14954:	add	lr, lr, sl
   14958:	ldr	sl, [sp, #28]
   1495c:	add	lr, lr, sl
   14960:	add	r5, r5, lr
   14964:	str	r5, [sp, #92]	; 0x5c
   14968:	eor	sl, r0, r1
   1496c:	and	sl, sl, r2
   14970:	eor	sl, sl, r0
   14974:	ldr	lr, [pc, #-2312]	; 14074 <dcngettext@plt+0x3084>
   14978:	add	lr, r5, lr
   1497c:	add	r3, lr, r3
   14980:	add	r3, sl, r3
   14984:	ror	lr, r2, #11
   14988:	eor	lr, lr, r2, ror #6
   1498c:	eor	lr, lr, r2, ror #25
   14990:	add	lr, r3, lr
   14994:	add	r9, r9, lr
   14998:	ror	r3, ip, #13
   1499c:	eor	r3, r3, ip, ror #2
   149a0:	eor	r3, r3, ip, ror #22
   149a4:	orr	sl, r8, ip
   149a8:	and	sl, sl, r4
   149ac:	and	r6, r8, ip
   149b0:	orr	sl, sl, r6
   149b4:	add	r3, r3, sl
   149b8:	add	r3, r3, lr
   149bc:	ldr	sl, [sp, #48]	; 0x30
   149c0:	ror	lr, sl, #19
   149c4:	eor	lr, lr, sl, ror #17
   149c8:	eor	lr, lr, sl, lsr #10
   149cc:	ror	sl, fp, #18
   149d0:	eor	sl, sl, fp, ror #7
   149d4:	str	fp, [sp, #52]	; 0x34
   149d8:	eor	sl, sl, fp, lsr #3
   149dc:	ldr	r6, [sp, #8]
   149e0:	add	fp, sl, r6
   149e4:	ldr	sl, [sp, #32]
   149e8:	add	fp, fp, sl
   149ec:	add	lr, lr, fp
   149f0:	mov	fp, lr
   149f4:	str	lr, [sp, #96]	; 0x60
   149f8:	eor	sl, r1, r2
   149fc:	and	sl, sl, r9
   14a00:	eor	sl, sl, r1
   14a04:	ldr	lr, [pc, #-2452]	; 14078 <dcngettext@plt+0x3088>
   14a08:	str	fp, [sp, #4]
   14a0c:	add	lr, fp, lr
   14a10:	add	r0, lr, r0
   14a14:	add	r0, sl, r0
   14a18:	ror	lr, r9, #11
   14a1c:	eor	lr, lr, r9, ror #6
   14a20:	eor	lr, lr, r9, ror #25
   14a24:	add	lr, r0, lr
   14a28:	add	r4, r4, lr
   14a2c:	ror	r0, r3, #13
   14a30:	eor	r0, r0, r3, ror #2
   14a34:	eor	r0, r0, r3, ror #22
   14a38:	orr	sl, ip, r3
   14a3c:	and	sl, sl, r8
   14a40:	and	fp, ip, r3
   14a44:	orr	sl, sl, fp
   14a48:	add	r0, r0, sl
   14a4c:	add	r0, r0, lr
   14a50:	ror	sl, r5, #19
   14a54:	eor	sl, sl, r5, ror #17
   14a58:	eor	sl, sl, r5, lsr #10
   14a5c:	ldr	r6, [sp, #60]	; 0x3c
   14a60:	ror	lr, r6, #18
   14a64:	eor	lr, lr, r6, ror #7
   14a68:	eor	lr, lr, r6, lsr #3
   14a6c:	ldr	fp, [sp, #52]	; 0x34
   14a70:	add	lr, lr, fp
   14a74:	ldr	fp, [sp, #36]	; 0x24
   14a78:	add	lr, lr, fp
   14a7c:	add	lr, sl, lr
   14a80:	mov	fp, lr
   14a84:	str	lr, [sp, #100]	; 0x64
   14a88:	eor	sl, r2, r9
   14a8c:	and	sl, sl, r4
   14a90:	eor	sl, sl, r2
   14a94:	ldr	lr, [pc, #-2592]	; 1407c <dcngettext@plt+0x308c>
   14a98:	str	fp, [sp, #8]
   14a9c:	add	lr, fp, lr
   14aa0:	add	r1, lr, r1
   14aa4:	add	r1, sl, r1
   14aa8:	ror	lr, r4, #11
   14aac:	eor	lr, lr, r4, ror #6
   14ab0:	eor	lr, lr, r4, ror #25
   14ab4:	add	lr, r1, lr
   14ab8:	add	r8, r8, lr
   14abc:	ror	r1, r0, #13
   14ac0:	eor	r1, r1, r0, ror #2
   14ac4:	eor	r1, r1, r0, ror #22
   14ac8:	orr	sl, r3, r0
   14acc:	and	sl, sl, ip
   14ad0:	and	fp, r3, r0
   14ad4:	orr	sl, sl, fp
   14ad8:	add	r1, r1, sl
   14adc:	add	r1, r1, lr
   14ae0:	ldr	lr, [sp, #4]
   14ae4:	ror	sl, lr, #19
   14ae8:	eor	sl, sl, lr, ror #17
   14aec:	eor	sl, sl, lr, lsr #10
   14af0:	ldr	fp, [sp, #12]
   14af4:	ror	lr, fp, #18
   14af8:	eor	lr, lr, fp, ror #7
   14afc:	eor	lr, lr, fp, lsr #3
   14b00:	add	lr, lr, r6
   14b04:	ldr	fp, [sp, #40]	; 0x28
   14b08:	add	lr, lr, fp
   14b0c:	add	lr, sl, lr
   14b10:	mov	r6, lr
   14b14:	str	lr, [sp, #104]	; 0x68
   14b18:	eor	sl, r9, r4
   14b1c:	and	sl, sl, r8
   14b20:	eor	sl, sl, r9
   14b24:	ldr	lr, [pc, #-2732]	; 14080 <dcngettext@plt+0x3090>
   14b28:	add	lr, r6, lr
   14b2c:	add	r2, lr, r2
   14b30:	add	sl, sl, r2
   14b34:	ror	r2, r8, #11
   14b38:	eor	r2, r2, r8, ror #6
   14b3c:	eor	r2, r2, r8, ror #25
   14b40:	add	sl, sl, r2
   14b44:	add	lr, ip, sl
   14b48:	ror	r2, r1, #13
   14b4c:	eor	r2, r2, r1, ror #2
   14b50:	eor	r2, r2, r1, ror #22
   14b54:	orr	ip, r0, r1
   14b58:	and	ip, ip, r3
   14b5c:	and	fp, r0, r1
   14b60:	orr	ip, ip, fp
   14b64:	add	r2, r2, ip
   14b68:	add	r2, r2, sl
   14b6c:	ldr	ip, [sp, #8]
   14b70:	ror	sl, ip, #19
   14b74:	eor	sl, sl, ip, ror #17
   14b78:	eor	sl, sl, ip, lsr #10
   14b7c:	ldr	fp, [sp, #16]
   14b80:	ror	ip, fp, #18
   14b84:	eor	ip, ip, fp, ror #7
   14b88:	eor	ip, ip, fp, lsr #3
   14b8c:	ldr	fp, [sp, #12]
   14b90:	add	ip, ip, fp
   14b94:	ldr	fp, [sp, #44]	; 0x2c
   14b98:	add	ip, ip, fp
   14b9c:	add	ip, sl, ip
   14ba0:	mov	fp, ip
   14ba4:	str	ip, [sp, #108]	; 0x6c
   14ba8:	eor	sl, r4, r8
   14bac:	and	sl, sl, lr
   14bb0:	eor	sl, sl, r4
   14bb4:	ldr	ip, [pc, #-2872]	; 14084 <dcngettext@plt+0x3094>
   14bb8:	str	fp, [sp, #12]
   14bbc:	add	ip, fp, ip
   14bc0:	add	r9, ip, r9
   14bc4:	add	r9, sl, r9
   14bc8:	ror	ip, lr, #11
   14bcc:	eor	ip, ip, lr, ror #6
   14bd0:	eor	ip, ip, lr, ror #25
   14bd4:	add	r9, r9, ip
   14bd8:	add	ip, r3, r9
   14bdc:	ror	r3, r2, #13
   14be0:	eor	r3, r3, r2, ror #2
   14be4:	eor	r3, r3, r2, ror #22
   14be8:	orr	sl, r1, r2
   14bec:	and	sl, sl, r0
   14bf0:	and	fp, r1, r2
   14bf4:	orr	sl, sl, fp
   14bf8:	add	sl, r3, sl
   14bfc:	add	r9, sl, r9
   14c00:	ror	sl, r6, #19
   14c04:	eor	sl, sl, r6, ror #17
   14c08:	str	r6, [sp, #52]	; 0x34
   14c0c:	eor	sl, sl, r6, lsr #10
   14c10:	ldr	r6, [sp, #64]	; 0x40
   14c14:	ror	r3, r6, #18
   14c18:	eor	r3, r3, r6, ror #7
   14c1c:	eor	r3, r3, r6, lsr #3
   14c20:	ldr	fp, [sp, #16]
   14c24:	add	r3, r3, fp
   14c28:	add	r7, r3, r7
   14c2c:	add	fp, sl, r7
   14c30:	str	fp, [sp, #112]	; 0x70
   14c34:	eor	r7, r8, lr
   14c38:	and	r7, r7, ip
   14c3c:	eor	r7, r7, r8
   14c40:	ldr	r3, [pc, #-3008]	; 14088 <dcngettext@plt+0x3098>
   14c44:	add	r3, fp, r3
   14c48:	add	r3, r3, r4
   14c4c:	add	r3, r7, r3
   14c50:	ror	r4, ip, #11
   14c54:	eor	r4, r4, ip, ror #6
   14c58:	eor	r4, r4, ip, ror #25
   14c5c:	add	r3, r3, r4
   14c60:	add	r0, r0, r3
   14c64:	ror	r4, r9, #13
   14c68:	eor	r4, r4, r9, ror #2
   14c6c:	eor	r4, r4, r9, ror #22
   14c70:	orr	r7, r2, r9
   14c74:	and	r7, r7, r1
   14c78:	and	sl, r2, r9
   14c7c:	orr	r7, r7, sl
   14c80:	add	r4, r4, r7
   14c84:	add	r4, r4, r3
   14c88:	ldr	r3, [sp, #12]
   14c8c:	ror	r7, r3, #19
   14c90:	eor	r7, r7, r3, ror #17
   14c94:	eor	r7, r7, r3, lsr #10
   14c98:	ldr	sl, [sp, #20]
   14c9c:	ror	r3, sl, #18
   14ca0:	eor	r3, r3, sl, ror #7
   14ca4:	eor	r3, r3, sl, lsr #3
   14ca8:	add	r3, r3, r6
   14cac:	ldr	sl, [sp, #48]	; 0x30
   14cb0:	add	r6, r3, sl
   14cb4:	add	r7, r7, r6
   14cb8:	str	r7, [sp, #116]	; 0x74
   14cbc:	eor	r6, lr, ip
   14cc0:	and	r6, r6, r0
   14cc4:	eor	r6, r6, lr
   14cc8:	ldr	r3, [pc, #-3140]	; 1408c <dcngettext@plt+0x309c>
   14ccc:	add	r3, r7, r3
   14cd0:	add	r3, r3, r8
   14cd4:	add	r6, r6, r3
   14cd8:	ror	r3, r0, #11
   14cdc:	eor	r3, r3, r0, ror #6
   14ce0:	eor	r3, r3, r0, ror #25
   14ce4:	add	r3, r6, r3
   14ce8:	add	r1, r1, r3
   14cec:	ror	r6, r4, #13
   14cf0:	eor	r6, r6, r4, ror #2
   14cf4:	eor	r6, r6, r4, ror #22
   14cf8:	orr	r8, r9, r4
   14cfc:	and	r8, r8, r2
   14d00:	and	sl, r9, r4
   14d04:	orr	r8, r8, sl
   14d08:	add	r6, r6, r8
   14d0c:	add	r6, r6, r3
   14d10:	ror	r8, fp, #19
   14d14:	eor	r8, r8, fp, ror #17
   14d18:	eor	r8, r8, fp, lsr #10
   14d1c:	ldr	sl, [sp, #24]
   14d20:	ror	r3, sl, #18
   14d24:	eor	r3, r3, sl, ror #7
   14d28:	eor	r3, r3, sl, lsr #3
   14d2c:	ldr	sl, [sp, #20]
   14d30:	add	r3, r3, sl
   14d34:	add	r5, r3, r5
   14d38:	add	r5, r8, r5
   14d3c:	str	r5, [sp, #120]	; 0x78
   14d40:	eor	r8, ip, r0
   14d44:	and	r8, r8, r1
   14d48:	eor	r8, r8, ip
   14d4c:	ldr	r3, [pc, #-3268]	; 14090 <dcngettext@plt+0x30a0>
   14d50:	add	r3, r5, r3
   14d54:	add	lr, r3, lr
   14d58:	add	lr, r8, lr
   14d5c:	ror	r3, r1, #11
   14d60:	eor	r3, r3, r1, ror #6
   14d64:	eor	r3, r3, r1, ror #25
   14d68:	add	lr, lr, r3
   14d6c:	add	r2, r2, lr
   14d70:	ror	r3, r6, #13
   14d74:	eor	r3, r3, r6, ror #2
   14d78:	eor	r3, r3, r6, ror #22
   14d7c:	orr	r8, r4, r6
   14d80:	and	r8, r8, r9
   14d84:	and	sl, r4, r6
   14d88:	orr	r8, r8, sl
   14d8c:	add	r8, r3, r8
   14d90:	add	lr, r8, lr
   14d94:	ror	r3, r7, #19
   14d98:	eor	r3, r3, r7, ror #17
   14d9c:	eor	r7, r3, r7, lsr #10
   14da0:	ldr	r8, [sp, #28]
   14da4:	ror	r3, r8, #18
   14da8:	eor	r3, r3, r8, ror #7
   14dac:	eor	r3, r3, r8, lsr #3
   14db0:	ldr	sl, [sp, #24]
   14db4:	add	r3, r3, sl
   14db8:	ldr	sl, [sp, #4]
   14dbc:	add	r3, r3, sl
   14dc0:	add	r7, r7, r3
   14dc4:	str	r7, [sp, #124]	; 0x7c
   14dc8:	eor	r8, r0, r1
   14dcc:	and	r8, r8, r2
   14dd0:	eor	r8, r8, r0
   14dd4:	ldr	r3, [pc, #-3400]	; 14094 <dcngettext@plt+0x30a4>
   14dd8:	add	r3, r7, r3
   14ddc:	add	r3, r3, ip
   14de0:	add	r3, r8, r3
   14de4:	ror	ip, r2, #11
   14de8:	eor	ip, ip, r2, ror #6
   14dec:	eor	ip, ip, r2, ror #25
   14df0:	add	r3, r3, ip
   14df4:	add	r9, r9, r3
   14df8:	ror	ip, lr, #13
   14dfc:	eor	ip, ip, lr, ror #2
   14e00:	eor	ip, ip, lr, ror #22
   14e04:	orr	r8, r6, lr
   14e08:	and	r8, r8, r4
   14e0c:	and	sl, r6, lr
   14e10:	orr	r8, r8, sl
   14e14:	add	ip, ip, r8
   14e18:	add	ip, ip, r3
   14e1c:	ror	r3, r5, #19
   14e20:	eor	r3, r3, r5, ror #17
   14e24:	eor	r5, r3, r5, lsr #10
   14e28:	ldr	sl, [sp, #32]
   14e2c:	ror	r3, sl, #18
   14e30:	eor	r3, r3, sl, ror #7
   14e34:	eor	r3, r3, sl, lsr #3
   14e38:	ldr	r8, [sp, #28]
   14e3c:	add	r3, r3, r8
   14e40:	ldr	r8, [sp, #8]
   14e44:	add	r3, r3, r8
   14e48:	add	r5, r5, r3
   14e4c:	str	r5, [sp, #128]	; 0x80
   14e50:	eor	r8, r1, r2
   14e54:	and	r8, r8, r9
   14e58:	eor	r8, r8, r1
   14e5c:	ldr	r3, [pc, #-3532]	; 14098 <dcngettext@plt+0x30a8>
   14e60:	add	r3, r5, r3
   14e64:	add	r0, r3, r0
   14e68:	add	r0, r8, r0
   14e6c:	ror	r3, r9, #11
   14e70:	eor	r3, r3, r9, ror #6
   14e74:	eor	r3, r3, r9, ror #25
   14e78:	add	r0, r0, r3
   14e7c:	add	r4, r4, r0
   14e80:	ror	r3, ip, #13
   14e84:	eor	r3, r3, ip, ror #2
   14e88:	eor	r3, r3, ip, ror #22
   14e8c:	orr	r8, lr, ip
   14e90:	and	r8, r8, r6
   14e94:	and	sl, lr, ip
   14e98:	orr	r8, r8, sl
   14e9c:	add	r8, r3, r8
   14ea0:	add	r0, r8, r0
   14ea4:	ror	r3, r7, #19
   14ea8:	eor	r3, r3, r7, ror #17
   14eac:	eor	r7, r3, r7, lsr #10
   14eb0:	ldr	r8, [sp, #36]	; 0x24
   14eb4:	ror	sl, r8, #18
   14eb8:	eor	sl, sl, r8, ror #7
   14ebc:	eor	sl, sl, r8, lsr #3
   14ec0:	ldr	r3, [sp, #32]
   14ec4:	add	sl, sl, r3
   14ec8:	ldr	r3, [sp, #52]	; 0x34
   14ecc:	add	sl, sl, r3
   14ed0:	add	r7, r7, sl
   14ed4:	str	r7, [sp, #132]	; 0x84
   14ed8:	eor	r8, r2, r9
   14edc:	and	r8, r8, r4
   14ee0:	eor	r8, r8, r2
   14ee4:	ldr	r3, [pc, #-3664]	; 1409c <dcngettext@plt+0x30ac>
   14ee8:	add	r3, r7, r3
   14eec:	add	r3, r3, r1
   14ef0:	add	r3, r8, r3
   14ef4:	ror	r1, r4, #11
   14ef8:	eor	r1, r1, r4, ror #6
   14efc:	eor	r1, r1, r4, ror #25
   14f00:	add	r3, r3, r1
   14f04:	add	r6, r6, r3
   14f08:	ror	r1, r0, #13
   14f0c:	eor	r1, r1, r0, ror #2
   14f10:	eor	r1, r1, r0, ror #22
   14f14:	orr	r8, ip, r0
   14f18:	and	r8, r8, lr
   14f1c:	and	sl, ip, r0
   14f20:	orr	r8, r8, sl
   14f24:	add	r1, r1, r8
   14f28:	add	r1, r1, r3
   14f2c:	ror	r3, r5, #19
   14f30:	eor	r3, r3, r5, ror #17
   14f34:	eor	r5, r3, r5, lsr #10
   14f38:	ldr	sl, [sp, #40]	; 0x28
   14f3c:	ror	r3, sl, #18
   14f40:	eor	r3, r3, sl, ror #7
   14f44:	eor	r3, r3, sl, lsr #3
   14f48:	ldr	r8, [sp, #36]	; 0x24
   14f4c:	add	r3, r3, r8
   14f50:	ldr	r8, [sp, #12]
   14f54:	add	r3, r3, r8
   14f58:	add	r5, r3, r5
   14f5c:	str	r5, [sp, #136]	; 0x88
   14f60:	eor	r8, r9, r4
   14f64:	and	r8, r8, r6
   14f68:	eor	r8, r8, r9
   14f6c:	ldr	r3, [pc, #-3796]	; 140a0 <dcngettext@plt+0x30b0>
   14f70:	add	r3, r5, r3
   14f74:	add	r3, r3, r2
   14f78:	add	r3, r8, r3
   14f7c:	ror	r2, r6, #11
   14f80:	eor	r2, r2, r6, ror #6
   14f84:	eor	r2, r2, r6, ror #25
   14f88:	add	r3, r3, r2
   14f8c:	add	lr, lr, r3
   14f90:	ror	r2, r1, #13
   14f94:	eor	r2, r2, r1, ror #2
   14f98:	eor	r2, r2, r1, ror #22
   14f9c:	orr	r5, r0, r1
   14fa0:	and	r5, r5, ip
   14fa4:	and	r8, r0, r1
   14fa8:	orr	r5, r5, r8
   14fac:	add	r2, r2, r5
   14fb0:	add	r3, r2, r3
   14fb4:	ror	r2, r7, #19
   14fb8:	eor	r2, r2, r7, ror #17
   14fbc:	eor	r7, r2, r7, lsr #10
   14fc0:	ldr	r2, [sp, #44]	; 0x2c
   14fc4:	ror	r5, r2, #18
   14fc8:	eor	r5, r5, r2, ror #7
   14fcc:	eor	r5, r5, r2, lsr #3
   14fd0:	add	r5, r5, sl
   14fd4:	add	sl, r5, fp
   14fd8:	add	r7, sl, r7
   14fdc:	str	r7, [sp, #140]	; 0x8c
   14fe0:	eor	r8, r4, r6
   14fe4:	and	r8, r8, lr
   14fe8:	eor	r8, r8, r4
   14fec:	ldr	r2, [pc, #-3920]	; 140a4 <dcngettext@plt+0x30b4>
   14ff0:	add	r2, r7, r2
   14ff4:	add	r9, r2, r9
   14ff8:	add	r8, r8, r9
   14ffc:	ror	r2, lr, #11
   15000:	eor	r2, r2, lr, ror #6
   15004:	eor	r2, r2, lr, ror #25
   15008:	add	r8, r8, r2
   1500c:	ror	r7, r3, #13
   15010:	eor	r7, r7, r3, ror #2
   15014:	eor	r7, r7, r3, ror #22
   15018:	orr	r2, r1, r3
   1501c:	and	r2, r2, r0
   15020:	and	r5, r1, r3
   15024:	orr	r2, r2, r5
   15028:	add	r7, r7, r2
   1502c:	ldr	r5, [sp, #76]	; 0x4c
   15030:	ldr	r2, [r5]
   15034:	add	r7, r7, r2
   15038:	add	r7, r7, r8
   1503c:	str	r7, [r5]
   15040:	ldr	r2, [r5, #4]
   15044:	add	r2, r3, r2
   15048:	mov	r3, r5
   1504c:	str	r2, [r5, #4]
   15050:	ldr	fp, [r5, #8]
   15054:	add	fp, r1, fp
   15058:	str	fp, [r5, #8]
   1505c:	mov	r1, r5
   15060:	ldr	r5, [r5, #12]
   15064:	add	r0, r0, r5
   15068:	str	r0, [r3, #12]
   1506c:	ldr	r3, [r3, #16]
   15070:	add	ip, ip, r3
   15074:	add	ip, ip, r8
   15078:	str	ip, [r1, #16]
   1507c:	ldr	r3, [r1, #20]
   15080:	add	lr, lr, r3
   15084:	str	lr, [r1, #20]
   15088:	ldr	r3, [r1, #24]
   1508c:	add	r6, r6, r3
   15090:	str	r6, [r1, #24]
   15094:	ldr	r3, [r1, #28]
   15098:	add	r4, r4, r3
   1509c:	str	r4, [r1, #28]
   150a0:	ldr	r1, [sp, #72]	; 0x48
   150a4:	ldr	r3, [sp, #68]	; 0x44
   150a8:	cmp	r1, r3
   150ac:	bhi	12f30 <dcngettext@plt+0x1f40>
   150b0:	add	sp, sp, #148	; 0x94
   150b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150b8:	push	{r4, r5, r6, lr}
   150bc:	mov	r4, r0
   150c0:	ldr	r0, [r0, #40]	; 0x28
   150c4:	cmp	r0, #55	; 0x37
   150c8:	movls	r5, #16
   150cc:	movhi	r5, #32
   150d0:	ldr	r3, [r4, #32]
   150d4:	add	r3, r0, r3
   150d8:	str	r3, [r4, #32]
   150dc:	cmp	r0, r3
   150e0:	ldrhi	r2, [r4, #36]	; 0x24
   150e4:	addhi	r2, r2, #1
   150e8:	strhi	r2, [r4, #36]	; 0x24
   150ec:	ldr	r1, [r4, #36]	; 0x24
   150f0:	lsr	r2, r3, #29
   150f4:	orr	r2, r2, r1, lsl #3
   150f8:	rev	r2, r2
   150fc:	add	r1, r4, r5, lsl #2
   15100:	str	r2, [r1, #36]	; 0x24
   15104:	lsl	r3, r3, #3
   15108:	rev	r3, r3
   1510c:	str	r3, [r1, #40]	; 0x28
   15110:	add	r6, r4, #44	; 0x2c
   15114:	sub	r5, r5, #-1073741822	; 0xc0000002
   15118:	lsl	r5, r5, #2
   1511c:	sub	r2, r5, r0
   15120:	ldr	r1, [pc, #24]	; 15140 <dcngettext@plt+0x4150>
   15124:	add	r0, r6, r0
   15128:	bl	10dc8 <memcpy@plt>
   1512c:	mov	r2, r4
   15130:	add	r1, r5, #8
   15134:	mov	r0, r6
   15138:	bl	12eb0 <dcngettext@plt+0x1ec0>
   1513c:	pop	{r4, r5, r6, pc}
   15140:	andeq	r9, r1, r4, asr #13
   15144:	push	{r4, r5, r6, lr}
   15148:	mov	r4, r0
   1514c:	mov	r5, r1
   15150:	bl	150b8 <dcngettext@plt+0x40c8>
   15154:	mov	r1, r5
   15158:	mov	r0, r4
   1515c:	bl	12e58 <dcngettext@plt+0x1e68>
   15160:	pop	{r4, r5, r6, pc}
   15164:	push	{r4, r5, r6, lr}
   15168:	mov	r4, r0
   1516c:	mov	r5, r1
   15170:	bl	150b8 <dcngettext@plt+0x40c8>
   15174:	mov	r1, r5
   15178:	mov	r0, r4
   1517c:	bl	12e84 <dcngettext@plt+0x1e94>
   15180:	pop	{r4, r5, r6, pc}
   15184:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15188:	mov	r8, r0
   1518c:	mov	r5, r1
   15190:	mov	r6, r2
   15194:	ldr	r4, [r2, #40]	; 0x28
   15198:	cmp	r4, #0
   1519c:	bne	15274 <dcngettext@plt+0x4284>
   151a0:	cmp	r5, #63	; 0x3f
   151a4:	bls	15240 <dcngettext@plt+0x4250>
   151a8:	tst	r8, #3
   151ac:	beq	152e8 <dcngettext@plt+0x42f8>
   151b0:	cmp	r5, #64	; 0x40
   151b4:	bls	15240 <dcngettext@plt+0x4250>
   151b8:	mov	r9, r5
   151bc:	mov	r4, r8
   151c0:	add	r7, r6, #44	; 0x2c
   151c4:	mov	sl, #64	; 0x40
   151c8:	mov	r3, r4
   151cc:	mov	r2, r7
   151d0:	add	r1, r4, #64	; 0x40
   151d4:	ldr	fp, [r3]
   151d8:	ldr	lr, [r3, #4]
   151dc:	ldr	ip, [r3, #8]
   151e0:	ldr	r0, [r3, #12]
   151e4:	str	fp, [r2]
   151e8:	str	lr, [r2, #4]
   151ec:	str	ip, [r2, #8]
   151f0:	str	r0, [r2, #12]
   151f4:	add	r3, r3, #16
   151f8:	add	r2, r2, #16
   151fc:	cmp	r3, r1
   15200:	bne	151d4 <dcngettext@plt+0x41e4>
   15204:	mov	r2, r6
   15208:	mov	r1, sl
   1520c:	mov	r0, r7
   15210:	bl	12eb0 <dcngettext@plt+0x1ec0>
   15214:	add	r4, r4, #64	; 0x40
   15218:	sub	r9, r9, #64	; 0x40
   1521c:	cmp	r9, #64	; 0x40
   15220:	bhi	151c8 <dcngettext@plt+0x41d8>
   15224:	sub	r3, r5, #65	; 0x41
   15228:	bic	r2, r3, #63	; 0x3f
   1522c:	add	r2, r2, #64	; 0x40
   15230:	add	r8, r8, r2
   15234:	sub	r5, r5, #64	; 0x40
   15238:	bic	r3, r3, #63	; 0x3f
   1523c:	sub	r5, r5, r3
   15240:	cmp	r5, #0
   15244:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15248:	ldr	r4, [r6, #40]	; 0x28
   1524c:	add	r7, r6, #44	; 0x2c
   15250:	mov	r2, r5
   15254:	mov	r1, r8
   15258:	add	r0, r7, r4
   1525c:	bl	10dc8 <memcpy@plt>
   15260:	add	r5, r5, r4
   15264:	cmp	r5, #63	; 0x3f
   15268:	bhi	15308 <dcngettext@plt+0x4318>
   1526c:	str	r5, [r6, #40]	; 0x28
   15270:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15274:	rsb	r7, r4, #128	; 0x80
   15278:	cmp	r7, r1
   1527c:	movcs	r7, r1
   15280:	add	r9, r2, #44	; 0x2c
   15284:	mov	r2, r7
   15288:	mov	r1, r0
   1528c:	add	r0, r9, r4
   15290:	bl	10dc8 <memcpy@plt>
   15294:	ldr	r1, [r6, #40]	; 0x28
   15298:	add	r1, r7, r1
   1529c:	str	r1, [r6, #40]	; 0x28
   152a0:	cmp	r1, #64	; 0x40
   152a4:	bhi	152b4 <dcngettext@plt+0x42c4>
   152a8:	add	r8, r8, r7
   152ac:	sub	r5, r5, r7
   152b0:	b	151a0 <dcngettext@plt+0x41b0>
   152b4:	mov	r2, r6
   152b8:	bic	r1, r1, #63	; 0x3f
   152bc:	mov	r0, r9
   152c0:	bl	12eb0 <dcngettext@plt+0x1ec0>
   152c4:	ldr	r2, [r6, #40]	; 0x28
   152c8:	and	r2, r2, #63	; 0x3f
   152cc:	str	r2, [r6, #40]	; 0x28
   152d0:	add	r1, r4, r7
   152d4:	bic	r1, r1, #63	; 0x3f
   152d8:	add	r1, r9, r1
   152dc:	mov	r0, r9
   152e0:	bl	10dc8 <memcpy@plt>
   152e4:	b	152a8 <dcngettext@plt+0x42b8>
   152e8:	bic	r4, r5, #63	; 0x3f
   152ec:	mov	r2, r6
   152f0:	mov	r1, r4
   152f4:	mov	r0, r8
   152f8:	bl	12eb0 <dcngettext@plt+0x1ec0>
   152fc:	add	r8, r8, r4
   15300:	and	r5, r5, #63	; 0x3f
   15304:	b	15240 <dcngettext@plt+0x4250>
   15308:	mov	r2, r6
   1530c:	mov	r1, #64	; 0x40
   15310:	mov	r0, r7
   15314:	bl	12eb0 <dcngettext@plt+0x1ec0>
   15318:	sub	r5, r5, #64	; 0x40
   1531c:	mov	r2, r5
   15320:	add	r1, r6, #108	; 0x6c
   15324:	mov	r0, r7
   15328:	bl	10dc8 <memcpy@plt>
   1532c:	b	1526c <dcngettext@plt+0x427c>
   15330:	push	{r4, r5, r6, lr}
   15334:	sub	sp, sp, #176	; 0xb0
   15338:	mov	r5, r0
   1533c:	mov	r6, r1
   15340:	mov	r4, r2
   15344:	add	r0, sp, #4
   15348:	bl	12d70 <dcngettext@plt+0x1d80>
   1534c:	add	r2, sp, #4
   15350:	mov	r1, r6
   15354:	mov	r0, r5
   15358:	bl	15184 <dcngettext@plt+0x4194>
   1535c:	mov	r1, r4
   15360:	add	r0, sp, #4
   15364:	bl	15144 <dcngettext@plt+0x4154>
   15368:	add	sp, sp, #176	; 0xb0
   1536c:	pop	{r4, r5, r6, pc}
   15370:	push	{r4, r5, r6, lr}
   15374:	sub	sp, sp, #176	; 0xb0
   15378:	mov	r5, r0
   1537c:	mov	r6, r1
   15380:	mov	r4, r2
   15384:	add	r0, sp, #4
   15388:	bl	12de4 <dcngettext@plt+0x1df4>
   1538c:	add	r2, sp, #4
   15390:	mov	r1, r6
   15394:	mov	r0, r5
   15398:	bl	15184 <dcngettext@plt+0x4194>
   1539c:	mov	r1, r4
   153a0:	add	r0, sp, #4
   153a4:	bl	15164 <dcngettext@plt+0x4174>
   153a8:	add	sp, sp, #176	; 0xb0
   153ac:	pop	{r4, r5, r6, pc}
   153b0:	push	{r4, r5, lr}
   153b4:	sub	sp, sp, #20
   153b8:	ldr	r1, [sp, #40]	; 0x28
   153bc:	str	r1, [sp, #8]
   153c0:	ldrd	r4, [sp, #32]
   153c4:	strd	r4, [sp]
   153c8:	bl	10d98 <posix_fadvise64@plt>
   153cc:	add	sp, sp, #20
   153d0:	pop	{r4, r5, pc}
   153d4:	cmp	r0, #0
   153d8:	bxeq	lr
   153dc:	push	{r4, lr}
   153e0:	sub	sp, sp, #16
   153e4:	mov	r4, r1
   153e8:	bl	10f30 <fileno@plt>
   153ec:	str	r4, [sp, #8]
   153f0:	mov	r2, #0
   153f4:	mov	r3, #0
   153f8:	strd	r2, [sp]
   153fc:	bl	10d98 <posix_fadvise64@plt>
   15400:	add	sp, sp, #16
   15404:	pop	{r4, pc}
   15408:	push	{r4, r5, r6, lr}
   1540c:	sub	sp, sp, #8
   15410:	mov	r4, r0
   15414:	bl	10f30 <fileno@plt>
   15418:	cmp	r0, #0
   1541c:	blt	15494 <dcngettext@plt+0x44a4>
   15420:	mov	r0, r4
   15424:	bl	10e94 <__freading@plt>
   15428:	cmp	r0, #0
   1542c:	beq	15460 <dcngettext@plt+0x4470>
   15430:	mov	r0, r4
   15434:	bl	10f30 <fileno@plt>
   15438:	mov	r3, #1
   1543c:	str	r3, [sp]
   15440:	mov	r2, #0
   15444:	mov	r3, #0
   15448:	bl	10e40 <lseek64@plt>
   1544c:	mvn	r2, #0
   15450:	mvn	r3, #0
   15454:	cmp	r1, r3
   15458:	cmpeq	r0, r2
   1545c:	beq	154a0 <dcngettext@plt+0x44b0>
   15460:	mov	r0, r4
   15464:	bl	154b0 <dcngettext@plt+0x44c0>
   15468:	cmp	r0, #0
   1546c:	beq	154a0 <dcngettext@plt+0x44b0>
   15470:	bl	10ef4 <__errno_location@plt>
   15474:	mov	r5, r0
   15478:	ldr	r6, [r0]
   1547c:	mov	r0, r4
   15480:	bl	10f48 <fclose@plt>
   15484:	cmp	r6, #0
   15488:	strne	r6, [r5]
   1548c:	mvnne	r0, #0
   15490:	b	154a8 <dcngettext@plt+0x44b8>
   15494:	mov	r0, r4
   15498:	bl	10f48 <fclose@plt>
   1549c:	b	154a8 <dcngettext@plt+0x44b8>
   154a0:	mov	r0, r4
   154a4:	bl	10f48 <fclose@plt>
   154a8:	add	sp, sp, #8
   154ac:	pop	{r4, r5, r6, pc}
   154b0:	push	{r4, lr}
   154b4:	sub	sp, sp, #8
   154b8:	subs	r4, r0, #0
   154bc:	beq	154d0 <dcngettext@plt+0x44e0>
   154c0:	mov	r0, r4
   154c4:	bl	10e94 <__freading@plt>
   154c8:	cmp	r0, #0
   154cc:	bne	154e0 <dcngettext@plt+0x44f0>
   154d0:	mov	r0, r4
   154d4:	bl	10da4 <fflush@plt>
   154d8:	add	sp, sp, #8
   154dc:	pop	{r4, pc}
   154e0:	ldr	r3, [r4]
   154e4:	tst	r3, #256	; 0x100
   154e8:	bne	154f8 <dcngettext@plt+0x4508>
   154ec:	mov	r0, r4
   154f0:	bl	10da4 <fflush@plt>
   154f4:	b	154d8 <dcngettext@plt+0x44e8>
   154f8:	mov	r3, #1
   154fc:	str	r3, [sp]
   15500:	mov	r2, #0
   15504:	mov	r3, #0
   15508:	mov	r0, r4
   1550c:	bl	15608 <dcngettext@plt+0x4618>
   15510:	b	154ec <dcngettext@plt+0x44fc>
   15514:	push	{r4, r5, r6, lr}
   15518:	mov	r5, r1
   1551c:	bl	10fa8 <fopen64@plt>
   15520:	subs	r4, r0, #0
   15524:	beq	15538 <dcngettext@plt+0x4548>
   15528:	mov	r0, r4
   1552c:	bl	10f30 <fileno@plt>
   15530:	cmp	r0, #2
   15534:	bls	15540 <dcngettext@plt+0x4550>
   15538:	mov	r0, r4
   1553c:	pop	{r4, r5, r6, pc}
   15540:	bl	17214 <dcngettext@plt+0x6224>
   15544:	subs	r6, r0, #0
   15548:	blt	15590 <dcngettext@plt+0x45a0>
   1554c:	mov	r0, r4
   15550:	bl	15408 <dcngettext@plt+0x4418>
   15554:	cmp	r0, #0
   15558:	bne	15570 <dcngettext@plt+0x4580>
   1555c:	mov	r1, r5
   15560:	mov	r0, r6
   15564:	bl	10d50 <fdopen@plt>
   15568:	subs	r4, r0, #0
   1556c:	bne	15538 <dcngettext@plt+0x4548>
   15570:	bl	10ef4 <__errno_location@plt>
   15574:	mov	r4, r0
   15578:	ldr	r5, [r0]
   1557c:	mov	r0, r6
   15580:	bl	10fe4 <close@plt>
   15584:	str	r5, [r4]
   15588:	mov	r4, #0
   1558c:	b	15538 <dcngettext@plt+0x4548>
   15590:	bl	10ef4 <__errno_location@plt>
   15594:	mov	r5, r0
   15598:	ldr	r6, [r0]
   1559c:	mov	r0, r4
   155a0:	bl	15408 <dcngettext@plt+0x4418>
   155a4:	str	r6, [r5]
   155a8:	mov	r4, #0
   155ac:	b	15538 <dcngettext@plt+0x4548>
   155b0:	push	{r4, r5, lr}
   155b4:	sub	sp, sp, #12
   155b8:	mov	r5, r0
   155bc:	bl	10ef4 <__errno_location@plt>
   155c0:	mov	r4, r0
   155c4:	ldr	r3, [r0]
   155c8:	str	r3, [sp]
   155cc:	str	r3, [sp, #4]
   155d0:	mov	r3, #0
   155d4:	str	r3, [r0]
   155d8:	mov	r0, r5
   155dc:	bl	10db0 <free@plt>
   155e0:	ldr	r3, [r4]
   155e4:	cmp	r3, #0
   155e8:	moveq	r3, #4
   155ec:	movne	r3, #0
   155f0:	add	r2, sp, #8
   155f4:	add	r3, r2, r3
   155f8:	ldr	r3, [r3, #-8]
   155fc:	str	r3, [r4]
   15600:	add	sp, sp, #12
   15604:	pop	{r4, r5, pc}
   15608:	push	{r4, r5, r6, r7, lr}
   1560c:	sub	sp, sp, #12
   15610:	mov	r4, r0
   15614:	mov	r6, r2
   15618:	mov	r7, r3
   1561c:	ldr	r5, [sp, #32]
   15620:	ldr	r2, [r0, #8]
   15624:	ldr	r3, [r0, #4]
   15628:	cmp	r2, r3
   1562c:	beq	1564c <dcngettext@plt+0x465c>
   15630:	str	r5, [sp]
   15634:	mov	r2, r6
   15638:	mov	r3, r7
   1563c:	mov	r0, r4
   15640:	bl	10f54 <fseeko64@plt>
   15644:	add	sp, sp, #12
   15648:	pop	{r4, r5, r6, r7, pc}
   1564c:	ldr	r2, [r0, #20]
   15650:	ldr	r3, [r0, #16]
   15654:	cmp	r2, r3
   15658:	bne	15630 <dcngettext@plt+0x4640>
   1565c:	ldr	r3, [r0, #36]	; 0x24
   15660:	cmp	r3, #0
   15664:	bne	15630 <dcngettext@plt+0x4640>
   15668:	bl	10f30 <fileno@plt>
   1566c:	str	r5, [sp]
   15670:	mov	r2, r6
   15674:	mov	r3, r7
   15678:	bl	10e40 <lseek64@plt>
   1567c:	mvn	r2, #0
   15680:	mvn	r3, #0
   15684:	cmp	r1, r3
   15688:	cmpeq	r0, r2
   1568c:	beq	156a8 <dcngettext@plt+0x46b8>
   15690:	ldr	r3, [r4]
   15694:	bic	r3, r3, #16
   15698:	str	r3, [r4]
   1569c:	strd	r0, [r4, #80]	; 0x50
   156a0:	mov	r0, #0
   156a4:	b	15644 <dcngettext@plt+0x4654>
   156a8:	mvn	r0, #0
   156ac:	b	15644 <dcngettext@plt+0x4654>
   156b0:	push	{r4, r5, r6, lr}
   156b4:	subs	r4, r0, #0
   156b8:	beq	15730 <dcngettext@plt+0x4740>
   156bc:	mov	r1, #47	; 0x2f
   156c0:	mov	r0, r4
   156c4:	bl	10f84 <strrchr@plt>
   156c8:	cmp	r0, #0
   156cc:	addne	r5, r0, #1
   156d0:	moveq	r5, r4
   156d4:	sub	r3, r5, r4
   156d8:	cmp	r3, #6
   156dc:	ble	1571c <dcngettext@plt+0x472c>
   156e0:	mov	r2, #7
   156e4:	ldr	r1, [pc, #96]	; 1574c <dcngettext@plt+0x475c>
   156e8:	sub	r0, r5, #7
   156ec:	bl	10fcc <strncmp@plt>
   156f0:	cmp	r0, #0
   156f4:	bne	1571c <dcngettext@plt+0x472c>
   156f8:	mov	r2, #3
   156fc:	ldr	r1, [pc, #76]	; 15750 <dcngettext@plt+0x4760>
   15700:	mov	r0, r5
   15704:	bl	10fcc <strncmp@plt>
   15708:	cmp	r0, #0
   1570c:	addeq	r4, r5, #3
   15710:	ldreq	r3, [pc, #60]	; 15754 <dcngettext@plt+0x4764>
   15714:	streq	r4, [r3]
   15718:	movne	r4, r5
   1571c:	ldr	r3, [pc, #52]	; 15758 <dcngettext@plt+0x4768>
   15720:	str	r4, [r3]
   15724:	ldr	r3, [pc, #48]	; 1575c <dcngettext@plt+0x476c>
   15728:	str	r4, [r3]
   1572c:	pop	{r4, r5, r6, pc}
   15730:	ldr	r3, [pc, #40]	; 15760 <dcngettext@plt+0x4770>
   15734:	ldr	r3, [r3]
   15738:	mov	r2, #55	; 0x37
   1573c:	mov	r1, #1
   15740:	ldr	r0, [pc, #28]	; 15764 <dcngettext@plt+0x4774>
   15744:	bl	10e34 <fwrite@plt>
   15748:	bl	10fd8 <abort@plt>
   1574c:	andeq	r9, r1, ip, lsr r7
   15750:	andeq	r9, r1, r4, asr #14
   15754:	andeq	sl, r2, r0, asr r1
   15758:	andeq	sl, r2, ip, lsl #3
   1575c:	andeq	sl, r2, r4, asr r1
   15760:	andeq	sl, r2, r0, ror #2
   15764:	andeq	r9, r1, r4, lsl #14
   15768:	push	{r4, r5, r6, lr}
   1576c:	mov	r5, r0
   15770:	mov	r4, r1
   15774:	mov	r2, #48	; 0x30
   15778:	mov	r1, #0
   1577c:	bl	10f18 <memset@plt>
   15780:	cmp	r4, #10
   15784:	beq	15794 <dcngettext@plt+0x47a4>
   15788:	str	r4, [r5]
   1578c:	mov	r0, r5
   15790:	pop	{r4, r5, r6, pc}
   15794:	bl	10fd8 <abort@plt>
   15798:	push	{r4, r5, r6, lr}
   1579c:	mov	r4, r0
   157a0:	mov	r5, r1
   157a4:	mov	r2, #5
   157a8:	mov	r1, r0
   157ac:	mov	r0, #0
   157b0:	bl	10e04 <dcgettext@plt>
   157b4:	cmp	r4, r0
   157b8:	popne	{r4, r5, r6, pc}
   157bc:	bl	18130 <dcngettext@plt+0x7140>
   157c0:	ldrb	r3, [r0]
   157c4:	bic	r3, r3, #32
   157c8:	cmp	r3, #85	; 0x55
   157cc:	beq	15848 <dcngettext@plt+0x4858>
   157d0:	cmp	r3, #71	; 0x47
   157d4:	bne	158a4 <dcngettext@plt+0x48b4>
   157d8:	ldrb	r3, [r0, #1]
   157dc:	bic	r3, r3, #32
   157e0:	cmp	r3, #66	; 0x42
   157e4:	bne	158a4 <dcngettext@plt+0x48b4>
   157e8:	ldrb	r3, [r0, #2]
   157ec:	cmp	r3, #49	; 0x31
   157f0:	bne	158a4 <dcngettext@plt+0x48b4>
   157f4:	ldrb	r3, [r0, #3]
   157f8:	cmp	r3, #56	; 0x38
   157fc:	bne	158a4 <dcngettext@plt+0x48b4>
   15800:	ldrb	r3, [r0, #4]
   15804:	cmp	r3, #48	; 0x30
   15808:	bne	158a4 <dcngettext@plt+0x48b4>
   1580c:	ldrb	r3, [r0, #5]
   15810:	cmp	r3, #51	; 0x33
   15814:	bne	158a4 <dcngettext@plt+0x48b4>
   15818:	ldrb	r3, [r0, #6]
   1581c:	cmp	r3, #48	; 0x30
   15820:	bne	158a4 <dcngettext@plt+0x48b4>
   15824:	ldrb	r3, [r0, #7]
   15828:	cmp	r3, #0
   1582c:	bne	158a4 <dcngettext@plt+0x48b4>
   15830:	ldrb	r2, [r4]
   15834:	ldr	r3, [pc, #124]	; 158b8 <dcngettext@plt+0x48c8>
   15838:	ldr	r0, [pc, #124]	; 158bc <dcngettext@plt+0x48cc>
   1583c:	cmp	r2, #96	; 0x60
   15840:	movne	r0, r3
   15844:	pop	{r4, r5, r6, pc}
   15848:	ldrb	r3, [r0, #1]
   1584c:	bic	r3, r3, #32
   15850:	cmp	r3, #84	; 0x54
   15854:	bne	158a4 <dcngettext@plt+0x48b4>
   15858:	ldrb	r3, [r0, #2]
   1585c:	bic	r3, r3, #32
   15860:	cmp	r3, #70	; 0x46
   15864:	bne	158a4 <dcngettext@plt+0x48b4>
   15868:	ldrb	r3, [r0, #3]
   1586c:	cmp	r3, #45	; 0x2d
   15870:	bne	158a4 <dcngettext@plt+0x48b4>
   15874:	ldrb	r3, [r0, #4]
   15878:	cmp	r3, #56	; 0x38
   1587c:	bne	158a4 <dcngettext@plt+0x48b4>
   15880:	ldrb	r3, [r0, #5]
   15884:	cmp	r3, #0
   15888:	bne	158a4 <dcngettext@plt+0x48b4>
   1588c:	ldrb	r2, [r4]
   15890:	ldr	r3, [pc, #40]	; 158c0 <dcngettext@plt+0x48d0>
   15894:	ldr	r0, [pc, #40]	; 158c4 <dcngettext@plt+0x48d4>
   15898:	cmp	r2, #96	; 0x60
   1589c:	movne	r0, r3
   158a0:	pop	{r4, r5, r6, pc}
   158a4:	ldr	r3, [pc, #28]	; 158c8 <dcngettext@plt+0x48d8>
   158a8:	ldr	r0, [pc, #28]	; 158cc <dcngettext@plt+0x48dc>
   158ac:	cmp	r5, #9
   158b0:	movne	r0, r3
   158b4:	pop	{r4, r5, r6, pc}
   158b8:	andeq	r9, r1, r0, lsr #15
   158bc:	andeq	r9, r1, ip, lsr #15
   158c0:	muleq	r1, ip, r7
   158c4:			; <UNDEFINED> instruction: 0x000197b0
   158c8:	andeq	r9, r1, r4, lsr #15
   158cc:	andeq	r9, r1, r8, lsr #15
   158d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158d4:	sub	sp, sp, #116	; 0x74
   158d8:	str	r0, [sp, #36]	; 0x24
   158dc:	mov	sl, r1
   158e0:	str	r2, [sp, #52]	; 0x34
   158e4:	str	r3, [sp, #28]
   158e8:	ldr	r8, [sp, #152]	; 0x98
   158ec:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   158f0:	str	r0, [sp, #84]	; 0x54
   158f4:	ldr	r3, [sp, #156]	; 0x9c
   158f8:	lsr	r3, r3, #1
   158fc:	and	r3, r3, #1
   15900:	str	r3, [sp, #32]
   15904:	mov	r3, #1
   15908:	str	r3, [sp, #40]	; 0x28
   1590c:	mov	r3, #0
   15910:	str	r3, [sp, #80]	; 0x50
   15914:	str	r3, [sp, #44]	; 0x2c
   15918:	str	r3, [sp, #48]	; 0x30
   1591c:	str	r3, [sp, #60]	; 0x3c
   15920:	str	r3, [sp, #72]	; 0x48
   15924:	str	r3, [sp, #76]	; 0x4c
   15928:	mov	r7, sl
   1592c:	mov	sl, r8
   15930:	cmp	sl, #10
   15934:	ldrls	pc, [pc, sl, lsl #2]
   15938:	b	15af0 <dcngettext@plt+0x4b00>
   1593c:	andeq	r5, r1, r0, lsr #19
   15940:	andeq	r5, r1, r0, ror r9
   15944:	andeq	r5, r1, ip, asr #21
   15948:	andeq	r5, r1, r8, ror #18
   1594c:	andeq	r5, r1, r0, lsl #21
   15950:			; <UNDEFINED> instruction: 0x000159b0
   15954:	andeq	r6, r1, ip, lsl sl
   15958:	strdeq	r5, [r1], -r4
   1595c:	andeq	r5, r1, ip, ror #19
   15960:	andeq	r5, r1, ip, ror #19
   15964:	andeq	r5, r1, ip, ror #19
   15968:	mov	r3, #1
   1596c:	str	r3, [sp, #48]	; 0x30
   15970:	mov	r3, #1
   15974:	str	r3, [sp, #32]
   15978:	str	r3, [sp, #60]	; 0x3c
   1597c:	ldr	r3, [pc, #4068]	; 16968 <dcngettext@plt+0x5978>
   15980:	str	r3, [sp, #72]	; 0x48
   15984:	mov	fp, #0
   15988:	mov	sl, #2
   1598c:	mov	r6, #0
   15990:	ldr	r3, [sp, #48]	; 0x30
   15994:	eor	r3, r3, #1
   15998:	str	r3, [sp, #68]	; 0x44
   1599c:	b	16284 <dcngettext@plt+0x5294>
   159a0:	mov	r3, #0
   159a4:	str	r3, [sp, #32]
   159a8:	mov	fp, r3
   159ac:	b	1598c <dcngettext@plt+0x499c>
   159b0:	ldr	r3, [sp, #32]
   159b4:	cmp	r3, #0
   159b8:	bne	15b0c <dcngettext@plt+0x4b1c>
   159bc:	cmp	r7, #0
   159c0:	beq	15b2c <dcngettext@plt+0x4b3c>
   159c4:	ldr	r3, [sp, #36]	; 0x24
   159c8:	mov	r2, #34	; 0x22
   159cc:	strb	r2, [r3]
   159d0:	mov	r3, #1
   159d4:	str	r3, [sp, #48]	; 0x30
   159d8:	str	r3, [sp, #60]	; 0x3c
   159dc:	ldr	r3, [pc, #3980]	; 16970 <dcngettext@plt+0x5980>
   159e0:	str	r3, [sp, #72]	; 0x48
   159e4:	mov	fp, #1
   159e8:	b	1598c <dcngettext@plt+0x499c>
   159ec:	cmp	sl, #10
   159f0:	beq	15a14 <dcngettext@plt+0x4a24>
   159f4:	mov	r1, sl
   159f8:	ldr	r0, [pc, #3948]	; 1696c <dcngettext@plt+0x597c>
   159fc:	bl	15798 <dcngettext@plt+0x47a8>
   15a00:	str	r0, [sp, #164]	; 0xa4
   15a04:	mov	r1, sl
   15a08:	ldr	r0, [pc, #3928]	; 16968 <dcngettext@plt+0x5978>
   15a0c:	bl	15798 <dcngettext@plt+0x47a8>
   15a10:	str	r0, [sp, #168]	; 0xa8
   15a14:	ldr	r3, [sp, #32]
   15a18:	cmp	r3, #0
   15a1c:	movne	fp, #0
   15a20:	bne	15a58 <dcngettext@plt+0x4a68>
   15a24:	ldr	r3, [sp, #164]	; 0xa4
   15a28:	ldrb	r3, [r3]
   15a2c:	cmp	r3, #0
   15a30:	beq	15a78 <dcngettext@plt+0x4a88>
   15a34:	ldr	r2, [sp, #164]	; 0xa4
   15a38:	mov	fp, #0
   15a3c:	ldr	r1, [sp, #36]	; 0x24
   15a40:	cmp	r7, fp
   15a44:	strbhi	r3, [r1, fp]
   15a48:	add	fp, fp, #1
   15a4c:	ldrb	r3, [r2, #1]!
   15a50:	cmp	r3, #0
   15a54:	bne	15a40 <dcngettext@plt+0x4a50>
   15a58:	ldr	r0, [sp, #168]	; 0xa8
   15a5c:	bl	10edc <strlen@plt>
   15a60:	str	r0, [sp, #60]	; 0x3c
   15a64:	ldr	r3, [sp, #168]	; 0xa8
   15a68:	str	r3, [sp, #72]	; 0x48
   15a6c:	mov	r3, #1
   15a70:	str	r3, [sp, #48]	; 0x30
   15a74:	b	1598c <dcngettext@plt+0x499c>
   15a78:	mov	fp, #0
   15a7c:	b	15a58 <dcngettext@plt+0x4a68>
   15a80:	ldr	r3, [sp, #32]
   15a84:	cmp	r3, #0
   15a88:	bne	15b48 <dcngettext@plt+0x4b58>
   15a8c:	mov	r3, #1
   15a90:	str	r3, [sp, #48]	; 0x30
   15a94:	cmp	r7, #0
   15a98:	beq	15b64 <dcngettext@plt+0x4b74>
   15a9c:	ldr	r3, [sp, #36]	; 0x24
   15aa0:	mov	r2, #39	; 0x27
   15aa4:	strb	r2, [r3]
   15aa8:	mov	r3, #0
   15aac:	str	r3, [sp, #32]
   15ab0:	mov	r3, #1
   15ab4:	str	r3, [sp, #60]	; 0x3c
   15ab8:	ldr	r3, [pc, #3752]	; 16968 <dcngettext@plt+0x5978>
   15abc:	str	r3, [sp, #72]	; 0x48
   15ac0:	mov	fp, #1
   15ac4:	mov	sl, #2
   15ac8:	b	1598c <dcngettext@plt+0x499c>
   15acc:	ldr	r3, [sp, #32]
   15ad0:	cmp	r3, #0
   15ad4:	beq	15a94 <dcngettext@plt+0x4aa4>
   15ad8:	mov	r3, #1
   15adc:	str	r3, [sp, #60]	; 0x3c
   15ae0:	ldr	r3, [pc, #3712]	; 16968 <dcngettext@plt+0x5978>
   15ae4:	str	r3, [sp, #72]	; 0x48
   15ae8:	mov	fp, #0
   15aec:	b	1598c <dcngettext@plt+0x499c>
   15af0:	bl	10fd8 <abort@plt>
   15af4:	mov	r3, #0
   15af8:	str	r3, [sp, #32]
   15afc:	mov	r3, #1
   15b00:	str	r3, [sp, #48]	; 0x30
   15b04:	mov	fp, #0
   15b08:	b	1598c <dcngettext@plt+0x499c>
   15b0c:	ldr	r3, [sp, #32]
   15b10:	str	r3, [sp, #48]	; 0x30
   15b14:	mov	r3, #1
   15b18:	str	r3, [sp, #60]	; 0x3c
   15b1c:	ldr	r3, [pc, #3660]	; 16970 <dcngettext@plt+0x5980>
   15b20:	str	r3, [sp, #72]	; 0x48
   15b24:	mov	fp, #0
   15b28:	b	1598c <dcngettext@plt+0x499c>
   15b2c:	mov	r3, #1
   15b30:	str	r3, [sp, #48]	; 0x30
   15b34:	str	r3, [sp, #60]	; 0x3c
   15b38:	ldr	r3, [pc, #3632]	; 16970 <dcngettext@plt+0x5980>
   15b3c:	str	r3, [sp, #72]	; 0x48
   15b40:	mov	fp, #1
   15b44:	b	1598c <dcngettext@plt+0x499c>
   15b48:	mov	r3, #1
   15b4c:	str	r3, [sp, #60]	; 0x3c
   15b50:	ldr	r3, [pc, #3600]	; 16968 <dcngettext@plt+0x5978>
   15b54:	str	r3, [sp, #72]	; 0x48
   15b58:	mov	fp, #0
   15b5c:	mov	sl, #2
   15b60:	b	1598c <dcngettext@plt+0x499c>
   15b64:	mov	r3, #0
   15b68:	str	r3, [sp, #32]
   15b6c:	mov	r3, #1
   15b70:	str	r3, [sp, #60]	; 0x3c
   15b74:	ldr	r3, [pc, #3564]	; 16968 <dcngettext@plt+0x5978>
   15b78:	str	r3, [sp, #72]	; 0x48
   15b7c:	mov	fp, #1
   15b80:	mov	sl, #2
   15b84:	b	1598c <dcngettext@plt+0x499c>
   15b88:	mov	r3, #0
   15b8c:	str	r3, [sp, #56]	; 0x38
   15b90:	ldr	r3, [sp, #52]	; 0x34
   15b94:	add	r2, r3, r6
   15b98:	str	r2, [sp, #64]	; 0x40
   15b9c:	ldrb	r4, [r3, r6]
   15ba0:	cmp	r4, #126	; 0x7e
   15ba4:	ldrls	pc, [pc, r4, lsl #2]
   15ba8:	b	163e4 <dcngettext@plt+0x53f4>
   15bac:	andeq	r5, r1, r4, asr #27
   15bb0:	andeq	r6, r1, r4, ror #7
   15bb4:	andeq	r6, r1, r4, ror #7
   15bb8:	andeq	r6, r1, r4, ror #7
   15bbc:	andeq	r6, r1, r4, ror #7
   15bc0:	andeq	r6, r1, r4, ror #7
   15bc4:	andeq	r6, r1, r4, ror #7
   15bc8:	andeq	r6, r1, r0, lsr #2
   15bcc:			; <UNDEFINED> instruction: 0x00015dbc
   15bd0:	ldrdeq	r6, [r1], -r8
   15bd4:	ldrdeq	r6, [r1], -r0
   15bd8:	andeq	r6, r1, r0, asr #32
   15bdc:	andeq	r6, r1, r8, lsr r0
   15be0:			; <UNDEFINED> instruction: 0x00015db4
   15be4:	andeq	r6, r1, r4, ror #7
   15be8:	andeq	r6, r1, r4, ror #7
   15bec:	andeq	r6, r1, r4, ror #7
   15bf0:	andeq	r6, r1, r4, ror #7
   15bf4:	andeq	r6, r1, r4, ror #7
   15bf8:	andeq	r6, r1, r4, ror #7
   15bfc:	andeq	r6, r1, r4, ror #7
   15c00:	andeq	r6, r1, r4, ror #7
   15c04:	andeq	r6, r1, r4, ror #7
   15c08:	andeq	r6, r1, r4, ror #7
   15c0c:	andeq	r6, r1, r4, ror #7
   15c10:	andeq	r6, r1, r4, ror #7
   15c14:	andeq	r6, r1, r4, ror #7
   15c18:	andeq	r6, r1, r4, ror #7
   15c1c:	andeq	r6, r1, r4, ror #7
   15c20:	andeq	r6, r1, r4, ror #7
   15c24:	andeq	r6, r1, r4, ror #7
   15c28:	andeq	r6, r1, r4, ror #7
   15c2c:	andeq	r6, r1, r4, ror r1
   15c30:	andeq	r6, r1, r0, ror r1
   15c34:	andeq	r6, r1, r0, ror r1
   15c38:	andeq	r6, r1, r8, asr #2
   15c3c:	andeq	r6, r1, r0, ror r1
   15c40:			; <UNDEFINED> instruction: 0x000167b8
   15c44:	andeq	r6, r1, r0, ror r1
   15c48:	andeq	r6, r1, r8, asr #6
   15c4c:	andeq	r6, r1, r0, ror r1
   15c50:	andeq	r6, r1, r0, ror r1
   15c54:	andeq	r6, r1, r0, ror r1
   15c58:			; <UNDEFINED> instruction: 0x000167b8
   15c5c:			; <UNDEFINED> instruction: 0x000167b8
   15c60:			; <UNDEFINED> instruction: 0x000167b8
   15c64:			; <UNDEFINED> instruction: 0x000167b8
   15c68:			; <UNDEFINED> instruction: 0x000167b8
   15c6c:			; <UNDEFINED> instruction: 0x000167b8
   15c70:			; <UNDEFINED> instruction: 0x000167b8
   15c74:			; <UNDEFINED> instruction: 0x000167b8
   15c78:			; <UNDEFINED> instruction: 0x000167b8
   15c7c:			; <UNDEFINED> instruction: 0x000167b8
   15c80:			; <UNDEFINED> instruction: 0x000167b8
   15c84:			; <UNDEFINED> instruction: 0x000167b8
   15c88:			; <UNDEFINED> instruction: 0x000167b8
   15c8c:			; <UNDEFINED> instruction: 0x000167b8
   15c90:			; <UNDEFINED> instruction: 0x000167b8
   15c94:			; <UNDEFINED> instruction: 0x000167b8
   15c98:	andeq	r6, r1, r0, ror r1
   15c9c:	andeq	r6, r1, r0, ror r1
   15ca0:	andeq	r6, r1, r0, ror r1
   15ca4:	andeq	r6, r1, r0, ror r1
   15ca8:	andeq	r5, r1, ip, asr #29
   15cac:	andeq	r6, r1, r4, ror #7
   15cb0:			; <UNDEFINED> instruction: 0x000167b8
   15cb4:			; <UNDEFINED> instruction: 0x000167b8
   15cb8:			; <UNDEFINED> instruction: 0x000167b8
   15cbc:			; <UNDEFINED> instruction: 0x000167b8
   15cc0:			; <UNDEFINED> instruction: 0x000167b8
   15cc4:			; <UNDEFINED> instruction: 0x000167b8
   15cc8:			; <UNDEFINED> instruction: 0x000167b8
   15ccc:			; <UNDEFINED> instruction: 0x000167b8
   15cd0:			; <UNDEFINED> instruction: 0x000167b8
   15cd4:			; <UNDEFINED> instruction: 0x000167b8
   15cd8:			; <UNDEFINED> instruction: 0x000167b8
   15cdc:			; <UNDEFINED> instruction: 0x000167b8
   15ce0:			; <UNDEFINED> instruction: 0x000167b8
   15ce4:			; <UNDEFINED> instruction: 0x000167b8
   15ce8:			; <UNDEFINED> instruction: 0x000167b8
   15cec:			; <UNDEFINED> instruction: 0x000167b8
   15cf0:			; <UNDEFINED> instruction: 0x000167b8
   15cf4:			; <UNDEFINED> instruction: 0x000167b8
   15cf8:			; <UNDEFINED> instruction: 0x000167b8
   15cfc:			; <UNDEFINED> instruction: 0x000167b8
   15d00:			; <UNDEFINED> instruction: 0x000167b8
   15d04:			; <UNDEFINED> instruction: 0x000167b8
   15d08:			; <UNDEFINED> instruction: 0x000167b8
   15d0c:			; <UNDEFINED> instruction: 0x000167b8
   15d10:			; <UNDEFINED> instruction: 0x000167b8
   15d14:			; <UNDEFINED> instruction: 0x000167b8
   15d18:	andeq	r6, r1, r0, ror r1
   15d1c:	andeq	r6, r1, r8, asr #32
   15d20:			; <UNDEFINED> instruction: 0x000167b8
   15d24:	andeq	r6, r1, r0, ror r1
   15d28:			; <UNDEFINED> instruction: 0x000167b8
   15d2c:	andeq	r6, r1, r0, ror r1
   15d30:			; <UNDEFINED> instruction: 0x000167b8
   15d34:			; <UNDEFINED> instruction: 0x000167b8
   15d38:			; <UNDEFINED> instruction: 0x000167b8
   15d3c:			; <UNDEFINED> instruction: 0x000167b8
   15d40:			; <UNDEFINED> instruction: 0x000167b8
   15d44:			; <UNDEFINED> instruction: 0x000167b8
   15d48:			; <UNDEFINED> instruction: 0x000167b8
   15d4c:			; <UNDEFINED> instruction: 0x000167b8
   15d50:			; <UNDEFINED> instruction: 0x000167b8
   15d54:			; <UNDEFINED> instruction: 0x000167b8
   15d58:			; <UNDEFINED> instruction: 0x000167b8
   15d5c:			; <UNDEFINED> instruction: 0x000167b8
   15d60:			; <UNDEFINED> instruction: 0x000167b8
   15d64:			; <UNDEFINED> instruction: 0x000167b8
   15d68:			; <UNDEFINED> instruction: 0x000167b8
   15d6c:			; <UNDEFINED> instruction: 0x000167b8
   15d70:			; <UNDEFINED> instruction: 0x000167b8
   15d74:			; <UNDEFINED> instruction: 0x000167b8
   15d78:			; <UNDEFINED> instruction: 0x000167b8
   15d7c:			; <UNDEFINED> instruction: 0x000167b8
   15d80:			; <UNDEFINED> instruction: 0x000167b8
   15d84:			; <UNDEFINED> instruction: 0x000167b8
   15d88:			; <UNDEFINED> instruction: 0x000167b8
   15d8c:			; <UNDEFINED> instruction: 0x000167b8
   15d90:			; <UNDEFINED> instruction: 0x000167b8
   15d94:			; <UNDEFINED> instruction: 0x000167b8
   15d98:	andeq	r6, r1, r8, lsr #2
   15d9c:	andeq	r6, r1, r0, ror r1
   15da0:	andeq	r6, r1, r8, lsr #2
   15da4:	andeq	r6, r1, r8, asr #2
   15da8:	mov	r3, #0
   15dac:	str	r3, [sp, #56]	; 0x38
   15db0:	b	15b90 <dcngettext@plt+0x4ba0>
   15db4:	mov	r3, #114	; 0x72
   15db8:	b	160dc <dcngettext@plt+0x50ec>
   15dbc:	mov	r3, #98	; 0x62
   15dc0:	b	160f4 <dcngettext@plt+0x5104>
   15dc4:	ldr	r3, [sp, #48]	; 0x30
   15dc8:	cmp	r3, #0
   15dcc:	beq	15eb4 <dcngettext@plt+0x4ec4>
   15dd0:	ldr	r3, [sp, #32]
   15dd4:	cmp	r3, #0
   15dd8:	bne	1693c <dcngettext@plt+0x594c>
   15ddc:	ldr	r3, [sp, #44]	; 0x2c
   15de0:	eor	r3, r3, #1
   15de4:	cmp	sl, #2
   15de8:	movne	r3, #0
   15dec:	andeq	r3, r3, #1
   15df0:	cmp	r3, #0
   15df4:	moveq	r2, fp
   15df8:	beq	15e3c <dcngettext@plt+0x4e4c>
   15dfc:	cmp	r7, fp
   15e00:	ldrhi	r2, [sp, #36]	; 0x24
   15e04:	movhi	r1, #39	; 0x27
   15e08:	strbhi	r1, [r2, fp]
   15e0c:	add	r2, fp, #1
   15e10:	cmp	r7, r2
   15e14:	ldrhi	r1, [sp, #36]	; 0x24
   15e18:	movhi	r0, #36	; 0x24
   15e1c:	strbhi	r0, [r1, r2]
   15e20:	add	r2, fp, #2
   15e24:	cmp	r7, r2
   15e28:	ldrhi	r1, [sp, #36]	; 0x24
   15e2c:	movhi	r0, #39	; 0x27
   15e30:	strbhi	r0, [r1, r2]
   15e34:	add	r2, fp, #3
   15e38:	str	r3, [sp, #44]	; 0x2c
   15e3c:	cmp	r7, r2
   15e40:	ldrhi	r3, [sp, #36]	; 0x24
   15e44:	movhi	r1, #92	; 0x5c
   15e48:	strbhi	r1, [r3, r2]
   15e4c:	add	fp, r2, #1
   15e50:	cmp	r5, #0
   15e54:	beq	167c0 <dcngettext@plt+0x57d0>
   15e58:	add	r3, r6, #1
   15e5c:	ldr	r1, [sp, #28]
   15e60:	cmp	r1, r3
   15e64:	bls	167d0 <dcngettext@plt+0x57e0>
   15e68:	ldr	r1, [sp, #52]	; 0x34
   15e6c:	ldrb	r3, [r1, r3]
   15e70:	sub	r3, r3, #48	; 0x30
   15e74:	uxtb	r3, r3
   15e78:	cmp	r3, #9
   15e7c:	bhi	167dc <dcngettext@plt+0x57ec>
   15e80:	cmp	r7, fp
   15e84:	movhi	r3, #48	; 0x30
   15e88:	ldrhi	r1, [sp, #36]	; 0x24
   15e8c:	strbhi	r3, [r1, fp]
   15e90:	add	r3, r2, #2
   15e94:	cmp	r7, r3
   15e98:	movhi	r1, #48	; 0x30
   15e9c:	ldrhi	r0, [sp, #36]	; 0x24
   15ea0:	strbhi	r1, [r0, r3]
   15ea4:	add	fp, r2, #3
   15ea8:	ldr	r8, [sp, #32]
   15eac:	mov	r4, #48	; 0x30
   15eb0:	b	1618c <dcngettext@plt+0x519c>
   15eb4:	ldr	r3, [sp, #156]	; 0x9c
   15eb8:	tst	r3, #1
   15ebc:	bne	16280 <dcngettext@plt+0x5290>
   15ec0:	ldr	r5, [sp, #48]	; 0x30
   15ec4:	mov	r8, r5
   15ec8:	b	1618c <dcngettext@plt+0x519c>
   15ecc:	cmp	sl, #2
   15ed0:	beq	15ee8 <dcngettext@plt+0x4ef8>
   15ed4:	cmp	sl, #5
   15ed8:	beq	15f00 <dcngettext@plt+0x4f10>
   15edc:	mov	r8, #0
   15ee0:	mov	r5, r8
   15ee4:	b	1618c <dcngettext@plt+0x519c>
   15ee8:	ldr	r3, [sp, #32]
   15eec:	cmp	r3, #0
   15ef0:	bne	16950 <dcngettext@plt+0x5960>
   15ef4:	mov	r8, r3
   15ef8:	mov	r5, r3
   15efc:	b	1618c <dcngettext@plt+0x519c>
   15f00:	ldr	r3, [sp, #156]	; 0x9c
   15f04:	tst	r3, #4
   15f08:	beq	167e8 <dcngettext@plt+0x57f8>
   15f0c:	add	r3, r6, #2
   15f10:	ldr	r2, [sp, #28]
   15f14:	cmp	r2, r3
   15f18:	bls	167f4 <dcngettext@plt+0x5804>
   15f1c:	ldr	r2, [sp, #52]	; 0x34
   15f20:	add	r2, r2, r6
   15f24:	ldrb	r2, [r2, #1]
   15f28:	cmp	r2, #63	; 0x3f
   15f2c:	movne	r8, #0
   15f30:	movne	r5, r8
   15f34:	bne	1618c <dcngettext@plt+0x519c>
   15f38:	ldr	r2, [sp, #52]	; 0x34
   15f3c:	ldrb	r2, [r2, r3]
   15f40:	sub	r1, r2, #33	; 0x21
   15f44:	cmp	r1, #29
   15f48:	ldrls	pc, [pc, r1, lsl #2]
   15f4c:	b	16800 <dcngettext@plt+0x5810>
   15f50:	andeq	r5, r1, r8, asr #31
   15f54:	andeq	r6, r1, r0, lsl #16
   15f58:	andeq	r6, r1, r0, lsl #16
   15f5c:	andeq	r6, r1, r0, lsl #16
   15f60:	andeq	r6, r1, r0, lsl #16
   15f64:	andeq	r6, r1, r0, lsl #16
   15f68:	andeq	r5, r1, r8, asr #31
   15f6c:	andeq	r5, r1, r8, asr #31
   15f70:	andeq	r5, r1, r8, asr #31
   15f74:	andeq	r6, r1, r0, lsl #16
   15f78:	andeq	r6, r1, r0, lsl #16
   15f7c:	andeq	r6, r1, r0, lsl #16
   15f80:	andeq	r5, r1, r8, asr #31
   15f84:	andeq	r6, r1, r0, lsl #16
   15f88:	andeq	r5, r1, r8, asr #31
   15f8c:	andeq	r6, r1, r0, lsl #16
   15f90:	andeq	r6, r1, r0, lsl #16
   15f94:	andeq	r6, r1, r0, lsl #16
   15f98:	andeq	r6, r1, r0, lsl #16
   15f9c:	andeq	r6, r1, r0, lsl #16
   15fa0:	andeq	r6, r1, r0, lsl #16
   15fa4:	andeq	r6, r1, r0, lsl #16
   15fa8:	andeq	r6, r1, r0, lsl #16
   15fac:	andeq	r6, r1, r0, lsl #16
   15fb0:	andeq	r6, r1, r0, lsl #16
   15fb4:	andeq	r6, r1, r0, lsl #16
   15fb8:	andeq	r6, r1, r0, lsl #16
   15fbc:	andeq	r5, r1, r8, asr #31
   15fc0:	andeq	r5, r1, r8, asr #31
   15fc4:	andeq	r5, r1, r8, asr #31
   15fc8:	ldr	r1, [sp, #32]
   15fcc:	cmp	r1, #0
   15fd0:	bne	16a10 <dcngettext@plt+0x5a20>
   15fd4:	cmp	r7, fp
   15fd8:	movhi	r1, #63	; 0x3f
   15fdc:	ldrhi	r0, [sp, #36]	; 0x24
   15fe0:	strbhi	r1, [r0, fp]
   15fe4:	add	r1, fp, #1
   15fe8:	cmp	r7, r1
   15fec:	ldrhi	r0, [sp, #36]	; 0x24
   15ff0:	movhi	ip, #34	; 0x22
   15ff4:	strbhi	ip, [r0, r1]
   15ff8:	add	r1, fp, #2
   15ffc:	cmp	r7, r1
   16000:	ldrhi	r0, [sp, #36]	; 0x24
   16004:	movhi	ip, #34	; 0x22
   16008:	strbhi	ip, [r0, r1]
   1600c:	add	r1, fp, #3
   16010:	cmp	r7, r1
   16014:	movhi	r0, #63	; 0x3f
   16018:	ldrhi	ip, [sp, #36]	; 0x24
   1601c:	strbhi	r0, [ip, r1]
   16020:	add	fp, fp, #4
   16024:	ldr	r5, [sp, #32]
   16028:	mov	r8, r5
   1602c:	mov	r4, r2
   16030:	mov	r6, r3
   16034:	b	1618c <dcngettext@plt+0x519c>
   16038:	mov	r3, #102	; 0x66
   1603c:	b	160f4 <dcngettext@plt+0x5104>
   16040:	mov	r3, #118	; 0x76
   16044:	b	160f4 <dcngettext@plt+0x5104>
   16048:	cmp	sl, #2
   1604c:	beq	160b8 <dcngettext@plt+0x50c8>
   16050:	ldr	r3, [sp, #48]	; 0x30
   16054:	ldr	r2, [sp, #32]
   16058:	and	r3, r3, r2
   1605c:	tst	r9, r3
   16060:	moveq	r3, r4
   16064:	beq	160f4 <dcngettext@plt+0x5104>
   16068:	mov	r8, #0
   1606c:	mov	r5, r8
   16070:	eor	r5, r5, #1
   16074:	ldr	r3, [sp, #44]	; 0x2c
   16078:	and	r5, r5, r3
   1607c:	tst	r5, #255	; 0xff
   16080:	beq	16260 <dcngettext@plt+0x5270>
   16084:	cmp	r7, fp
   16088:	ldrhi	r3, [sp, #36]	; 0x24
   1608c:	movhi	r2, #39	; 0x27
   16090:	strbhi	r2, [r3, fp]
   16094:	add	r3, fp, #1
   16098:	cmp	r7, r3
   1609c:	ldrhi	r2, [sp, #36]	; 0x24
   160a0:	movhi	r1, #39	; 0x27
   160a4:	strbhi	r1, [r2, r3]
   160a8:	add	fp, fp, #2
   160ac:	mov	r3, #0
   160b0:	str	r3, [sp, #44]	; 0x2c
   160b4:	b	16260 <dcngettext@plt+0x5270>
   160b8:	ldr	r3, [sp, #32]
   160bc:	cmp	r3, #0
   160c0:	bne	1695c <dcngettext@plt+0x596c>
   160c4:	mov	r8, r3
   160c8:	mov	r5, r3
   160cc:	b	16070 <dcngettext@plt+0x5080>
   160d0:	mov	r3, #110	; 0x6e
   160d4:	b	160dc <dcngettext@plt+0x50ec>
   160d8:	mov	r3, #116	; 0x74
   160dc:	ldr	r2, [sp, #32]
   160e0:	cmp	sl, #2
   160e4:	movne	r2, #0
   160e8:	andeq	r2, r2, #1
   160ec:	cmp	r2, #0
   160f0:	bne	16114 <dcngettext@plt+0x5124>
   160f4:	ldr	r2, [sp, #48]	; 0x30
   160f8:	cmp	r2, #0
   160fc:	moveq	r8, r2
   16100:	moveq	r5, r2
   16104:	beq	1618c <dcngettext@plt+0x519c>
   16108:	mov	r4, r3
   1610c:	mov	r8, #0
   16110:	b	161e4 <dcngettext@plt+0x51f4>
   16114:	mov	r8, sl
   16118:	mov	sl, r7
   1611c:	b	16988 <dcngettext@plt+0x5998>
   16120:	mov	r3, #97	; 0x61
   16124:	b	160f4 <dcngettext@plt+0x5104>
   16128:	ldr	r3, [sp, #28]
   1612c:	cmn	r3, #1
   16130:	beq	1615c <dcngettext@plt+0x516c>
   16134:	ldr	r3, [sp, #28]
   16138:	subs	r3, r3, #1
   1613c:	movne	r3, #1
   16140:	cmp	r3, #0
   16144:	bne	1680c <dcngettext@plt+0x581c>
   16148:	cmp	r6, #0
   1614c:	beq	16174 <dcngettext@plt+0x5184>
   16150:	mov	r8, #0
   16154:	mov	r5, r8
   16158:	b	1618c <dcngettext@plt+0x519c>
   1615c:	ldr	r3, [sp, #52]	; 0x34
   16160:	ldrb	r3, [r3, #1]
   16164:	adds	r3, r3, #0
   16168:	movne	r3, #1
   1616c:	b	16140 <dcngettext@plt+0x5150>
   16170:	mov	r8, #0
   16174:	ldr	r5, [sp, #32]
   16178:	cmp	sl, #2
   1617c:	movne	r5, #0
   16180:	andeq	r5, r5, #1
   16184:	cmp	r5, #0
   16188:	bne	1633c <dcngettext@plt+0x534c>
   1618c:	ldr	r3, [sp, #68]	; 0x44
   16190:	cmp	sl, #2
   16194:	orreq	r3, r3, #1
   16198:	eor	r3, r3, #1
   1619c:	ldr	r2, [sp, #32]
   161a0:	orr	r3, r2, r3
   161a4:	tst	r3, #255	; 0xff
   161a8:	beq	161d8 <dcngettext@plt+0x51e8>
   161ac:	ldr	r3, [sp, #160]	; 0xa0
   161b0:	cmp	r3, #0
   161b4:	beq	161d8 <dcngettext@plt+0x51e8>
   161b8:	lsr	r2, r4, #5
   161bc:	uxtb	r2, r2
   161c0:	and	r3, r4, #31
   161c4:	ldr	r1, [sp, #160]	; 0xa0
   161c8:	ldr	r2, [r1, r2, lsl #2]
   161cc:	lsr	r3, r2, r3
   161d0:	tst	r3, #1
   161d4:	bne	161e4 <dcngettext@plt+0x51f4>
   161d8:	ldr	r3, [sp, #56]	; 0x38
   161dc:	cmp	r3, #0
   161e0:	beq	16070 <dcngettext@plt+0x5080>
   161e4:	ldr	r3, [sp, #32]
   161e8:	cmp	r3, #0
   161ec:	bne	169f8 <dcngettext@plt+0x5a08>
   161f0:	ldr	r3, [sp, #44]	; 0x2c
   161f4:	eor	r3, r3, #1
   161f8:	cmp	sl, #2
   161fc:	movne	r3, #0
   16200:	andeq	r3, r3, #1
   16204:	cmp	r3, #0
   16208:	beq	1624c <dcngettext@plt+0x525c>
   1620c:	cmp	r7, fp
   16210:	ldrhi	r2, [sp, #36]	; 0x24
   16214:	movhi	r1, #39	; 0x27
   16218:	strbhi	r1, [r2, fp]
   1621c:	add	r2, fp, #1
   16220:	cmp	r7, r2
   16224:	ldrhi	r1, [sp, #36]	; 0x24
   16228:	movhi	r0, #36	; 0x24
   1622c:	strbhi	r0, [r1, r2]
   16230:	add	r2, fp, #2
   16234:	cmp	r7, r2
   16238:	ldrhi	r1, [sp, #36]	; 0x24
   1623c:	movhi	r0, #39	; 0x27
   16240:	strbhi	r0, [r1, r2]
   16244:	add	fp, fp, #3
   16248:	str	r3, [sp, #44]	; 0x2c
   1624c:	cmp	r7, fp
   16250:	ldrhi	r3, [sp, #36]	; 0x24
   16254:	movhi	r2, #92	; 0x5c
   16258:	strbhi	r2, [r3, fp]
   1625c:	add	fp, fp, #1
   16260:	cmp	fp, r7
   16264:	ldrcc	r3, [sp, #36]	; 0x24
   16268:	strbcc	r4, [r3, fp]
   1626c:	add	fp, fp, #1
   16270:	ldr	r3, [sp, #40]	; 0x28
   16274:	cmp	r8, #0
   16278:	moveq	r3, #0
   1627c:	str	r3, [sp, #40]	; 0x28
   16280:	add	r6, r6, #1
   16284:	ldr	r3, [sp, #28]
   16288:	cmn	r3, #1
   1628c:	beq	16818 <dcngettext@plt+0x5828>
   16290:	ldr	r3, [sp, #28]
   16294:	subs	r8, r3, r6
   16298:	movne	r8, #1
   1629c:	cmp	r8, #0
   162a0:	beq	1682c <dcngettext@plt+0x583c>
   162a4:	ldr	r5, [sp, #48]	; 0x30
   162a8:	cmp	sl, #2
   162ac:	moveq	r5, #0
   162b0:	andne	r5, r5, #1
   162b4:	ldr	r3, [sp, #60]	; 0x3c
   162b8:	adds	r9, r3, #0
   162bc:	movne	r9, #1
   162c0:	ands	r2, r5, r9
   162c4:	str	r2, [sp, #56]	; 0x38
   162c8:	beq	15b90 <dcngettext@plt+0x4ba0>
   162cc:	add	r4, r6, r3
   162d0:	ldr	r2, [sp, #28]
   162d4:	cmp	r3, #1
   162d8:	movls	r3, #0
   162dc:	movhi	r3, #1
   162e0:	cmn	r2, #1
   162e4:	movne	r3, #0
   162e8:	cmp	r3, #0
   162ec:	beq	162fc <dcngettext@plt+0x530c>
   162f0:	ldr	r0, [sp, #52]	; 0x34
   162f4:	bl	10edc <strlen@plt>
   162f8:	str	r0, [sp, #28]
   162fc:	ldr	r3, [sp, #28]
   16300:	cmp	r3, r4
   16304:	bcc	15b88 <dcngettext@plt+0x4b98>
   16308:	ldr	r2, [sp, #60]	; 0x3c
   1630c:	ldr	r1, [sp, #72]	; 0x48
   16310:	ldr	r3, [sp, #52]	; 0x34
   16314:	add	r0, r3, r6
   16318:	bl	10dec <memcmp@plt>
   1631c:	cmp	r0, #0
   16320:	bne	15da8 <dcngettext@plt+0x4db8>
   16324:	ldr	r3, [sp, #32]
   16328:	cmp	r3, #0
   1632c:	beq	15b90 <dcngettext@plt+0x4ba0>
   16330:	mov	r8, sl
   16334:	mov	sl, r7
   16338:	b	16988 <dcngettext@plt+0x5998>
   1633c:	mov	r8, sl
   16340:	mov	sl, r7
   16344:	b	16988 <dcngettext@plt+0x5998>
   16348:	cmp	sl, #2
   1634c:	strne	r8, [sp, #80]	; 0x50
   16350:	movne	r5, #0
   16354:	bne	1618c <dcngettext@plt+0x519c>
   16358:	ldr	r3, [sp, #32]
   1635c:	cmp	r3, #0
   16360:	bne	16974 <dcngettext@plt+0x5984>
   16364:	ldr	r2, [sp, #76]	; 0x4c
   16368:	adds	r3, r7, #0
   1636c:	movne	r3, #1
   16370:	cmp	r2, #0
   16374:	movne	r3, #0
   16378:	cmp	r3, #0
   1637c:	movne	r3, #0
   16380:	bne	163b0 <dcngettext@plt+0x53c0>
   16384:	cmp	r7, fp
   16388:	ldrhi	r3, [sp, #36]	; 0x24
   1638c:	movhi	r2, #39	; 0x27
   16390:	strbhi	r2, [r3, fp]
   16394:	add	r3, fp, #1
   16398:	cmp	r7, r3
   1639c:	ldrhi	r2, [sp, #36]	; 0x24
   163a0:	movhi	r1, #92	; 0x5c
   163a4:	strbhi	r1, [r2, r3]
   163a8:	mov	r3, r7
   163ac:	ldr	r7, [sp, #76]	; 0x4c
   163b0:	add	r2, fp, #2
   163b4:	cmp	r2, r3
   163b8:	ldrcc	r1, [sp, #36]	; 0x24
   163bc:	movcc	r0, #39	; 0x27
   163c0:	strbcc	r0, [r1, r2]
   163c4:	add	fp, fp, #3
   163c8:	ldr	r2, [sp, #32]
   163cc:	mov	r5, r2
   163d0:	str	r8, [sp, #80]	; 0x50
   163d4:	str	r2, [sp, #44]	; 0x2c
   163d8:	str	r7, [sp, #76]	; 0x4c
   163dc:	mov	r7, r3
   163e0:	b	1618c <dcngettext@plt+0x519c>
   163e4:	ldr	r5, [sp, #84]	; 0x54
   163e8:	cmp	r5, #1
   163ec:	beq	1641c <dcngettext@plt+0x542c>
   163f0:	mov	r3, #0
   163f4:	str	r3, [sp, #104]	; 0x68
   163f8:	str	r3, [sp, #108]	; 0x6c
   163fc:	ldr	r3, [sp, #28]
   16400:	cmn	r3, #1
   16404:	beq	16450 <dcngettext@plt+0x5460>
   16408:	mov	r3, #0
   1640c:	str	r4, [sp, #88]	; 0x58
   16410:	str	fp, [sp, #92]	; 0x5c
   16414:	mov	fp, r3
   16418:	b	16578 <dcngettext@plt+0x5588>
   1641c:	bl	10ec4 <__ctype_b_loc@plt>
   16420:	ldr	r2, [r0]
   16424:	lsl	r3, r4, #1
   16428:	ldrh	r8, [r2, r3]
   1642c:	lsr	r8, r8, #14
   16430:	and	r8, r8, #1
   16434:	mov	r2, r5
   16438:	eor	r5, r8, #1
   1643c:	ldr	r3, [sp, #48]	; 0x30
   16440:	and	r5, r5, r3
   16444:	ands	r5, r5, #255	; 0xff
   16448:	beq	1618c <dcngettext@plt+0x519c>
   1644c:	b	16610 <dcngettext@plt+0x5620>
   16450:	ldr	r0, [sp, #52]	; 0x34
   16454:	bl	10edc <strlen@plt>
   16458:	str	r0, [sp, #28]
   1645c:	b	16408 <dcngettext@plt+0x5418>
   16460:	mov	r2, fp
   16464:	mov	r1, r4
   16468:	ldr	r4, [sp, #88]	; 0x58
   1646c:	ldr	fp, [sp, #92]	; 0x5c
   16470:	ldr	r0, [sp, #28]
   16474:	cmp	r0, r5
   16478:	bls	16644 <dcngettext@plt+0x5654>
   1647c:	ldrb	r3, [r1]
   16480:	cmp	r3, #0
   16484:	beq	1664c <dcngettext@plt+0x565c>
   16488:	mov	r3, r1
   1648c:	add	r2, r2, #1
   16490:	add	r1, r6, r2
   16494:	cmp	r0, r1
   16498:	bls	16654 <dcngettext@plt+0x5664>
   1649c:	ldrb	r1, [r3, #1]!
   164a0:	cmp	r1, #0
   164a4:	bne	1648c <dcngettext@plt+0x549c>
   164a8:	mov	r8, #0
   164ac:	b	16608 <dcngettext@plt+0x5618>
   164b0:	cmp	r4, r5
   164b4:	beq	16554 <dcngettext@plt+0x5564>
   164b8:	ldrb	r3, [r4, #1]!
   164bc:	sub	r3, r3, #91	; 0x5b
   164c0:	cmp	r3, #33	; 0x21
   164c4:	ldrls	pc, [pc, r3, lsl #2]
   164c8:	b	164b0 <dcngettext@plt+0x54c0>
   164cc:	andeq	r6, r1, r0, lsl #19
   164d0:	andeq	r6, r1, r0, lsl #19
   164d4:			; <UNDEFINED> instruction: 0x000164b0
   164d8:	andeq	r6, r1, r0, lsl #19
   164dc:			; <UNDEFINED> instruction: 0x000164b0
   164e0:	andeq	r6, r1, r0, lsl #19
   164e4:			; <UNDEFINED> instruction: 0x000164b0
   164e8:			; <UNDEFINED> instruction: 0x000164b0
   164ec:			; <UNDEFINED> instruction: 0x000164b0
   164f0:			; <UNDEFINED> instruction: 0x000164b0
   164f4:			; <UNDEFINED> instruction: 0x000164b0
   164f8:			; <UNDEFINED> instruction: 0x000164b0
   164fc:			; <UNDEFINED> instruction: 0x000164b0
   16500:			; <UNDEFINED> instruction: 0x000164b0
   16504:			; <UNDEFINED> instruction: 0x000164b0
   16508:			; <UNDEFINED> instruction: 0x000164b0
   1650c:			; <UNDEFINED> instruction: 0x000164b0
   16510:			; <UNDEFINED> instruction: 0x000164b0
   16514:			; <UNDEFINED> instruction: 0x000164b0
   16518:			; <UNDEFINED> instruction: 0x000164b0
   1651c:			; <UNDEFINED> instruction: 0x000164b0
   16520:			; <UNDEFINED> instruction: 0x000164b0
   16524:			; <UNDEFINED> instruction: 0x000164b0
   16528:			; <UNDEFINED> instruction: 0x000164b0
   1652c:			; <UNDEFINED> instruction: 0x000164b0
   16530:			; <UNDEFINED> instruction: 0x000164b0
   16534:			; <UNDEFINED> instruction: 0x000164b0
   16538:			; <UNDEFINED> instruction: 0x000164b0
   1653c:			; <UNDEFINED> instruction: 0x000164b0
   16540:			; <UNDEFINED> instruction: 0x000164b0
   16544:			; <UNDEFINED> instruction: 0x000164b0
   16548:			; <UNDEFINED> instruction: 0x000164b0
   1654c:			; <UNDEFINED> instruction: 0x000164b0
   16550:	andeq	r6, r1, r0, lsl #19
   16554:	ldr	r0, [sp, #100]	; 0x64
   16558:	bl	10e28 <iswprint@plt>
   1655c:	cmp	r0, #0
   16560:	moveq	r8, #0
   16564:	add	fp, fp, r9
   16568:	add	r0, sp, #104	; 0x68
   1656c:	bl	10dd4 <mbsinit@plt>
   16570:	cmp	r0, #0
   16574:	bne	165e8 <dcngettext@plt+0x55f8>
   16578:	add	r5, r6, fp
   1657c:	ldr	r3, [sp, #52]	; 0x34
   16580:	add	r4, r3, r5
   16584:	add	r3, sp, #104	; 0x68
   16588:	ldr	r2, [sp, #28]
   1658c:	sub	r2, r2, r5
   16590:	mov	r1, r4
   16594:	add	r0, sp, #100	; 0x64
   16598:	bl	18164 <dcngettext@plt+0x7174>
   1659c:	subs	r9, r0, #0
   165a0:	beq	1665c <dcngettext@plt+0x566c>
   165a4:	cmn	r9, #1
   165a8:	beq	165f8 <dcngettext@plt+0x5608>
   165ac:	cmn	r9, #2
   165b0:	beq	16460 <dcngettext@plt+0x5470>
   165b4:	ldr	r3, [sp, #32]
   165b8:	cmp	sl, #2
   165bc:	movne	r3, #0
   165c0:	andeq	r3, r3, #1
   165c4:	cmp	r3, #0
   165c8:	beq	16554 <dcngettext@plt+0x5564>
   165cc:	cmp	r9, #1
   165d0:	bls	16554 <dcngettext@plt+0x5564>
   165d4:	sub	r3, r9, #1
   165d8:	add	r5, r3, r5
   165dc:	ldr	r3, [sp, #52]	; 0x34
   165e0:	add	r5, r3, r5
   165e4:	b	164b8 <dcngettext@plt+0x54c8>
   165e8:	ldr	r4, [sp, #88]	; 0x58
   165ec:	mov	r2, fp
   165f0:	ldr	fp, [sp, #92]	; 0x5c
   165f4:	b	16608 <dcngettext@plt+0x5618>
   165f8:	ldr	r4, [sp, #88]	; 0x58
   165fc:	mov	r2, fp
   16600:	ldr	fp, [sp, #92]	; 0x5c
   16604:	mov	r8, #0
   16608:	cmp	r2, #1
   1660c:	bls	16438 <dcngettext@plt+0x5448>
   16610:	add	r1, r6, r2
   16614:	ldr	ip, [sp, #64]	; 0x40
   16618:	mov	r5, #0
   1661c:	eor	r3, r8, #1
   16620:	ldr	r2, [sp, #48]	; 0x30
   16624:	and	r3, r3, r2
   16628:	uxtb	r3, r3
   1662c:	ldr	r9, [sp, #32]
   16630:	ldr	lr, [sp, #44]	; 0x2c
   16634:	ldr	r2, [sp, #56]	; 0x38
   16638:	str	r8, [sp, #56]	; 0x38
   1663c:	ldr	r0, [sp, #36]	; 0x24
   16640:	b	166dc <dcngettext@plt+0x56ec>
   16644:	mov	r8, #0
   16648:	b	16608 <dcngettext@plt+0x5618>
   1664c:	mov	r8, #0
   16650:	b	16608 <dcngettext@plt+0x5618>
   16654:	mov	r8, #0
   16658:	b	16608 <dcngettext@plt+0x5618>
   1665c:	ldr	r4, [sp, #88]	; 0x58
   16660:	mov	r2, fp
   16664:	ldr	fp, [sp, #92]	; 0x5c
   16668:	b	16608 <dcngettext@plt+0x5618>
   1666c:	cmp	r2, #0
   16670:	beq	16684 <dcngettext@plt+0x5694>
   16674:	cmp	r7, fp
   16678:	movhi	r2, #92	; 0x5c
   1667c:	strbhi	r2, [r0, fp]
   16680:	add	fp, fp, #1
   16684:	add	r8, r6, #1
   16688:	cmp	r1, r8
   1668c:	bls	16794 <dcngettext@plt+0x57a4>
   16690:	eor	r2, r5, #1
   16694:	and	r2, r2, lr
   16698:	ands	r2, r2, #255	; 0xff
   1669c:	beq	167b0 <dcngettext@plt+0x57c0>
   166a0:	cmp	r7, fp
   166a4:	movhi	r2, #39	; 0x27
   166a8:	strbhi	r2, [r0, fp]
   166ac:	add	r2, fp, #1
   166b0:	cmp	r7, r2
   166b4:	movhi	lr, #39	; 0x27
   166b8:	strbhi	lr, [r0, r2]
   166bc:	add	fp, fp, #2
   166c0:	mov	r6, r8
   166c4:	mov	r2, r3
   166c8:	mov	lr, r3
   166cc:	cmp	r7, fp
   166d0:	strbhi	r4, [r0, fp]
   166d4:	add	fp, fp, #1
   166d8:	ldrb	r4, [ip, #1]!
   166dc:	cmp	r3, #0
   166e0:	beq	1666c <dcngettext@plt+0x567c>
   166e4:	cmp	r9, #0
   166e8:	bne	169ec <dcngettext@plt+0x59fc>
   166ec:	eor	r5, lr, #1
   166f0:	cmp	sl, #2
   166f4:	movne	r5, #0
   166f8:	andeq	r5, r5, #1
   166fc:	cmp	r5, #0
   16700:	beq	16738 <dcngettext@plt+0x5748>
   16704:	cmp	r7, fp
   16708:	movhi	lr, #39	; 0x27
   1670c:	strbhi	lr, [r0, fp]
   16710:	add	lr, fp, #1
   16714:	cmp	r7, lr
   16718:	movhi	r8, #36	; 0x24
   1671c:	strbhi	r8, [r0, lr]
   16720:	add	lr, fp, #2
   16724:	cmp	r7, lr
   16728:	movhi	r8, #39	; 0x27
   1672c:	strbhi	r8, [r0, lr]
   16730:	add	fp, fp, #3
   16734:	mov	lr, r5
   16738:	cmp	r7, fp
   1673c:	movhi	r5, #92	; 0x5c
   16740:	strbhi	r5, [r0, fp]
   16744:	add	r5, fp, #1
   16748:	cmp	r7, r5
   1674c:	lsrhi	r8, r4, #6
   16750:	addhi	r8, r8, #48	; 0x30
   16754:	strbhi	r8, [r0, r5]
   16758:	add	r8, fp, #2
   1675c:	cmp	r7, r8
   16760:	lsrhi	r5, r4, #3
   16764:	andhi	r5, r5, #7
   16768:	addhi	r5, r5, #48	; 0x30
   1676c:	strbhi	r5, [r0, r8]
   16770:	add	fp, fp, #3
   16774:	and	r4, r4, #7
   16778:	add	r4, r4, #48	; 0x30
   1677c:	add	r5, r6, #1
   16780:	cmp	r1, r5
   16784:	bls	167a0 <dcngettext@plt+0x57b0>
   16788:	mov	r6, r5
   1678c:	mov	r5, r3
   16790:	b	166cc <dcngettext@plt+0x56dc>
   16794:	str	lr, [sp, #44]	; 0x2c
   16798:	ldr	r8, [sp, #56]	; 0x38
   1679c:	b	16070 <dcngettext@plt+0x5080>
   167a0:	str	lr, [sp, #44]	; 0x2c
   167a4:	ldr	r8, [sp, #56]	; 0x38
   167a8:	mov	r5, r3
   167ac:	b	16070 <dcngettext@plt+0x5080>
   167b0:	mov	r6, r8
   167b4:	b	166cc <dcngettext@plt+0x56dc>
   167b8:	mov	r5, #0
   167bc:	b	1618c <dcngettext@plt+0x519c>
   167c0:	mov	r8, r5
   167c4:	ldr	r5, [sp, #48]	; 0x30
   167c8:	mov	r4, #48	; 0x30
   167cc:	b	1618c <dcngettext@plt+0x519c>
   167d0:	ldr	r8, [sp, #32]
   167d4:	mov	r4, #48	; 0x30
   167d8:	b	1618c <dcngettext@plt+0x519c>
   167dc:	ldr	r8, [sp, #32]
   167e0:	mov	r4, #48	; 0x30
   167e4:	b	1618c <dcngettext@plt+0x519c>
   167e8:	mov	r8, #0
   167ec:	mov	r5, r8
   167f0:	b	1618c <dcngettext@plt+0x519c>
   167f4:	mov	r8, #0
   167f8:	mov	r5, r8
   167fc:	b	1618c <dcngettext@plt+0x519c>
   16800:	mov	r8, #0
   16804:	mov	r5, r8
   16808:	b	1618c <dcngettext@plt+0x519c>
   1680c:	mov	r8, #0
   16810:	mov	r5, r8
   16814:	b	1618c <dcngettext@plt+0x519c>
   16818:	ldr	r3, [sp, #52]	; 0x34
   1681c:	ldrb	r8, [r3, r6]
   16820:	adds	r8, r8, #0
   16824:	movne	r8, #1
   16828:	b	1629c <dcngettext@plt+0x52ac>
   1682c:	cmp	sl, #2
   16830:	movne	r3, #0
   16834:	moveq	r3, #1
   16838:	ldr	r1, [sp, #32]
   1683c:	mov	r2, r1
   16840:	and	r2, r2, r3
   16844:	cmp	fp, #0
   16848:	movne	r2, #0
   1684c:	andeq	r2, r2, #1
   16850:	cmp	r2, #0
   16854:	bne	16a04 <dcngettext@plt+0x5a14>
   16858:	eor	r2, r1, #1
   1685c:	and	r3, r3, r2
   16860:	ldr	r1, [sp, #80]	; 0x50
   16864:	tst	r1, r3
   16868:	beq	168e0 <dcngettext@plt+0x58f0>
   1686c:	ldr	r3, [sp, #40]	; 0x28
   16870:	cmp	r3, #0
   16874:	bne	1689c <dcngettext@plt+0x58ac>
   16878:	ldr	r1, [sp, #76]	; 0x4c
   1687c:	clz	r3, r7
   16880:	lsr	r3, r3, #5
   16884:	cmp	r1, #0
   16888:	moveq	r3, #0
   1688c:	cmp	r3, #0
   16890:	beq	168e0 <dcngettext@plt+0x58f0>
   16894:	ldr	r7, [sp, #76]	; 0x4c
   16898:	b	15930 <dcngettext@plt+0x4940>
   1689c:	ldr	r3, [sp, #168]	; 0xa8
   168a0:	str	r3, [sp, #16]
   168a4:	ldr	r3, [sp, #164]	; 0xa4
   168a8:	str	r3, [sp, #12]
   168ac:	ldr	r3, [sp, #160]	; 0xa0
   168b0:	str	r3, [sp, #8]
   168b4:	ldr	r3, [sp, #156]	; 0x9c
   168b8:	str	r3, [sp, #4]
   168bc:	mov	r3, #5
   168c0:	str	r3, [sp]
   168c4:	ldr	r3, [sp, #28]
   168c8:	ldr	r2, [sp, #52]	; 0x34
   168cc:	ldr	r1, [sp, #76]	; 0x4c
   168d0:	ldr	r0, [sp, #36]	; 0x24
   168d4:	bl	158d0 <dcngettext@plt+0x48e0>
   168d8:	mov	fp, r0
   168dc:	b	169e0 <dcngettext@plt+0x59f0>
   168e0:	mov	sl, r7
   168e4:	ldr	r3, [sp, #72]	; 0x48
   168e8:	cmp	r3, #0
   168ec:	moveq	r2, #0
   168f0:	andne	r2, r2, #1
   168f4:	cmp	r2, #0
   168f8:	beq	16928 <dcngettext@plt+0x5938>
   168fc:	mov	r2, r3
   16900:	ldrb	r3, [r3]
   16904:	cmp	r3, #0
   16908:	beq	16928 <dcngettext@plt+0x5938>
   1690c:	ldr	r1, [sp, #36]	; 0x24
   16910:	cmp	sl, fp
   16914:	strbhi	r3, [r1, fp]
   16918:	add	fp, fp, #1
   1691c:	ldrb	r3, [r2, #1]!
   16920:	cmp	r3, #0
   16924:	bne	16910 <dcngettext@plt+0x5920>
   16928:	cmp	sl, fp
   1692c:	movhi	r3, #0
   16930:	ldrhi	r2, [sp, #36]	; 0x24
   16934:	strbhi	r3, [r2, fp]
   16938:	b	169e0 <dcngettext@plt+0x59f0>
   1693c:	mov	r8, sl
   16940:	mov	sl, r7
   16944:	ldr	r3, [sp, #32]
   16948:	str	r3, [sp, #48]	; 0x30
   1694c:	b	16988 <dcngettext@plt+0x5998>
   16950:	mov	r8, sl
   16954:	mov	sl, r7
   16958:	b	16988 <dcngettext@plt+0x5998>
   1695c:	mov	r8, sl
   16960:	mov	sl, r7
   16964:	b	16988 <dcngettext@plt+0x5998>
   16968:	andeq	r9, r1, r4, lsr #15
   1696c:			; <UNDEFINED> instruction: 0x000197b4
   16970:	andeq	r9, r1, r8, lsr #15
   16974:	mov	r8, sl
   16978:	mov	sl, r7
   1697c:	b	16988 <dcngettext@plt+0x5998>
   16980:	mov	r8, sl
   16984:	mov	sl, r7
   16988:	ldr	r3, [sp, #48]	; 0x30
   1698c:	cmp	r8, #2
   16990:	movne	r3, #0
   16994:	andeq	r3, r3, #1
   16998:	cmp	r3, #0
   1699c:	movne	r8, #4
   169a0:	ldr	r3, [sp, #168]	; 0xa8
   169a4:	str	r3, [sp, #16]
   169a8:	ldr	r3, [sp, #164]	; 0xa4
   169ac:	str	r3, [sp, #12]
   169b0:	mov	r3, #0
   169b4:	str	r3, [sp, #8]
   169b8:	ldr	r3, [sp, #156]	; 0x9c
   169bc:	bic	r3, r3, #2
   169c0:	str	r3, [sp, #4]
   169c4:	str	r8, [sp]
   169c8:	ldr	r3, [sp, #28]
   169cc:	ldr	r2, [sp, #52]	; 0x34
   169d0:	mov	r1, sl
   169d4:	ldr	r0, [sp, #36]	; 0x24
   169d8:	bl	158d0 <dcngettext@plt+0x48e0>
   169dc:	mov	fp, r0
   169e0:	mov	r0, fp
   169e4:	add	sp, sp, #116	; 0x74
   169e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169ec:	mov	r8, sl
   169f0:	mov	sl, r7
   169f4:	b	16988 <dcngettext@plt+0x5998>
   169f8:	mov	r8, sl
   169fc:	mov	sl, r7
   16a00:	b	16988 <dcngettext@plt+0x5998>
   16a04:	mov	r8, sl
   16a08:	mov	sl, r7
   16a0c:	b	16988 <dcngettext@plt+0x5998>
   16a10:	mov	r8, sl
   16a14:	mov	sl, r7
   16a18:	b	169a0 <dcngettext@plt+0x59b0>
   16a1c:	mov	r3, #1
   16a20:	str	r3, [sp, #32]
   16a24:	str	r3, [sp, #48]	; 0x30
   16a28:	str	r3, [sp, #60]	; 0x3c
   16a2c:	ldr	r3, [pc, #-196]	; 16970 <dcngettext@plt+0x5980>
   16a30:	str	r3, [sp, #72]	; 0x48
   16a34:	mov	fp, #0
   16a38:	mov	sl, #5
   16a3c:	b	1598c <dcngettext@plt+0x499c>
   16a40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a44:	sub	sp, sp, #52	; 0x34
   16a48:	mov	r5, r0
   16a4c:	str	r1, [sp, #24]
   16a50:	str	r2, [sp, #28]
   16a54:	mov	r4, r3
   16a58:	bl	10ef4 <__errno_location@plt>
   16a5c:	str	r0, [sp, #32]
   16a60:	ldr	r3, [r0]
   16a64:	str	r3, [sp, #36]	; 0x24
   16a68:	ldr	r3, [pc, #396]	; 16bfc <dcngettext@plt+0x5c0c>
   16a6c:	ldr	r6, [r3]
   16a70:	cmn	r5, #-2147483647	; 0x80000001
   16a74:	movne	r3, #0
   16a78:	moveq	r3, #1
   16a7c:	orrs	r3, r3, r5, lsr #31
   16a80:	bne	16bc0 <dcngettext@plt+0x5bd0>
   16a84:	ldr	r3, [pc, #368]	; 16bfc <dcngettext@plt+0x5c0c>
   16a88:	ldr	r2, [r3, #4]
   16a8c:	cmp	r5, r2
   16a90:	blt	16af8 <dcngettext@plt+0x5b08>
   16a94:	str	r2, [sp, #44]	; 0x2c
   16a98:	add	r3, r3, #8
   16a9c:	cmp	r6, r3
   16aa0:	beq	16bc4 <dcngettext@plt+0x5bd4>
   16aa4:	sub	r2, r5, r2
   16aa8:	mov	r3, #8
   16aac:	str	r3, [sp]
   16ab0:	mvn	r3, #-2147483648	; 0x80000000
   16ab4:	add	r2, r2, #1
   16ab8:	add	r1, sp, #44	; 0x2c
   16abc:	mov	r0, r6
   16ac0:	bl	17958 <dcngettext@plt+0x6968>
   16ac4:	mov	r6, r0
   16ac8:	ldr	r3, [pc, #300]	; 16bfc <dcngettext@plt+0x5c0c>
   16acc:	str	r0, [r3]
   16ad0:	ldr	r7, [pc, #292]	; 16bfc <dcngettext@plt+0x5c0c>
   16ad4:	ldr	r0, [r7, #4]
   16ad8:	ldr	r2, [sp, #44]	; 0x2c
   16adc:	sub	r2, r2, r0
   16ae0:	lsl	r2, r2, #3
   16ae4:	mov	r1, #0
   16ae8:	add	r0, r6, r0, lsl #3
   16aec:	bl	10f18 <memset@plt>
   16af0:	ldr	r3, [sp, #44]	; 0x2c
   16af4:	str	r3, [r7, #4]
   16af8:	add	fp, r6, r5, lsl #3
   16afc:	ldr	r8, [r6, r5, lsl #3]
   16b00:	ldr	r7, [fp, #4]
   16b04:	ldr	r9, [r4, #4]
   16b08:	orr	r9, r9, #1
   16b0c:	add	sl, r4, #8
   16b10:	ldr	r3, [r4, #44]	; 0x2c
   16b14:	str	r3, [sp, #16]
   16b18:	ldr	r3, [r4, #40]	; 0x28
   16b1c:	str	r3, [sp, #12]
   16b20:	str	sl, [sp, #8]
   16b24:	str	r9, [sp, #4]
   16b28:	ldr	r3, [r4]
   16b2c:	str	r3, [sp]
   16b30:	ldr	r3, [sp, #28]
   16b34:	ldr	r2, [sp, #24]
   16b38:	mov	r1, r8
   16b3c:	mov	r0, r7
   16b40:	bl	158d0 <dcngettext@plt+0x48e0>
   16b44:	cmp	r8, r0
   16b48:	bhi	16ba8 <dcngettext@plt+0x5bb8>
   16b4c:	add	r8, r0, #1
   16b50:	str	r8, [r6, r5, lsl #3]
   16b54:	ldr	r3, [pc, #164]	; 16c00 <dcngettext@plt+0x5c10>
   16b58:	cmp	r7, r3
   16b5c:	beq	16b68 <dcngettext@plt+0x5b78>
   16b60:	mov	r0, r7
   16b64:	bl	155b0 <dcngettext@plt+0x45c0>
   16b68:	mov	r0, r8
   16b6c:	bl	177d4 <dcngettext@plt+0x67e4>
   16b70:	mov	r7, r0
   16b74:	str	r0, [fp, #4]
   16b78:	ldr	r3, [r4, #44]	; 0x2c
   16b7c:	str	r3, [sp, #16]
   16b80:	ldr	r3, [r4, #40]	; 0x28
   16b84:	str	r3, [sp, #12]
   16b88:	str	sl, [sp, #8]
   16b8c:	str	r9, [sp, #4]
   16b90:	ldr	r3, [r4]
   16b94:	str	r3, [sp]
   16b98:	ldr	r3, [sp, #28]
   16b9c:	ldr	r2, [sp, #24]
   16ba0:	mov	r1, r8
   16ba4:	bl	158d0 <dcngettext@plt+0x48e0>
   16ba8:	ldr	r3, [sp, #32]
   16bac:	ldr	r2, [sp, #36]	; 0x24
   16bb0:	str	r2, [r3]
   16bb4:	mov	r0, r7
   16bb8:	add	sp, sp, #52	; 0x34
   16bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bc0:	bl	10fd8 <abort@plt>
   16bc4:	sub	r2, r5, r2
   16bc8:	mov	r3, #8
   16bcc:	str	r3, [sp]
   16bd0:	mvn	r3, #-2147483648	; 0x80000000
   16bd4:	add	r2, r2, #1
   16bd8:	add	r1, sp, #44	; 0x2c
   16bdc:	mov	r0, #0
   16be0:	bl	17958 <dcngettext@plt+0x6968>
   16be4:	mov	r6, r0
   16be8:	ldr	r3, [pc, #12]	; 16bfc <dcngettext@plt+0x5c0c>
   16bec:	str	r0, [r3], #8
   16bf0:	ldm	r3, {r0, r1}
   16bf4:	stm	r6, {r0, r1}
   16bf8:	b	16ad0 <dcngettext@plt+0x5ae0>
   16bfc:	andeq	sl, r2, ip, lsl #2
   16c00:	muleq	r2, r0, r1
   16c04:	push	{r4, r5, r6, lr}
   16c08:	mov	r4, r0
   16c0c:	bl	10ef4 <__errno_location@plt>
   16c10:	mov	r5, r0
   16c14:	ldr	r6, [r0]
   16c18:	cmp	r4, #0
   16c1c:	ldr	r3, [pc, #20]	; 16c38 <dcngettext@plt+0x5c48>
   16c20:	moveq	r4, r3
   16c24:	mov	r1, #48	; 0x30
   16c28:	mov	r0, r4
   16c2c:	bl	17cc0 <dcngettext@plt+0x6cd0>
   16c30:	str	r6, [r5]
   16c34:	pop	{r4, r5, r6, pc}
   16c38:	muleq	r2, r0, r2
   16c3c:	subs	r3, r0, #0
   16c40:	ldr	r2, [pc, #8]	; 16c50 <dcngettext@plt+0x5c60>
   16c44:	moveq	r3, r2
   16c48:	ldr	r0, [r3]
   16c4c:	bx	lr
   16c50:	muleq	r2, r0, r2
   16c54:	subs	r3, r0, #0
   16c58:	ldr	r2, [pc, #8]	; 16c68 <dcngettext@plt+0x5c78>
   16c5c:	moveq	r3, r2
   16c60:	str	r1, [r3]
   16c64:	bx	lr
   16c68:	muleq	r2, r0, r2
   16c6c:	push	{lr}		; (str lr, [sp, #-4]!)
   16c70:	subs	r3, r0, #0
   16c74:	ldr	r0, [pc, #44]	; 16ca8 <dcngettext@plt+0x5cb8>
   16c78:	moveq	r3, r0
   16c7c:	add	r3, r3, #8
   16c80:	lsr	lr, r1, #5
   16c84:	and	r1, r1, #31
   16c88:	ldr	ip, [r3, lr, lsl #2]
   16c8c:	lsr	r0, ip, r1
   16c90:	eor	r2, r2, r0
   16c94:	and	r2, r2, #1
   16c98:	eor	r1, ip, r2, lsl r1
   16c9c:	str	r1, [r3, lr, lsl #2]
   16ca0:	and	r0, r0, #1
   16ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ca8:	muleq	r2, r0, r2
   16cac:	subs	r3, r0, #0
   16cb0:	ldr	r2, [pc, #12]	; 16cc4 <dcngettext@plt+0x5cd4>
   16cb4:	moveq	r3, r2
   16cb8:	ldr	r0, [r3, #4]
   16cbc:	str	r1, [r3, #4]
   16cc0:	bx	lr
   16cc4:	muleq	r2, r0, r2
   16cc8:	subs	r3, r0, #0
   16ccc:	ldr	r0, [pc, #40]	; 16cfc <dcngettext@plt+0x5d0c>
   16cd0:	moveq	r3, r0
   16cd4:	mov	r0, #10
   16cd8:	str	r0, [r3]
   16cdc:	cmp	r2, #0
   16ce0:	cmpne	r1, #0
   16ce4:	beq	16cf4 <dcngettext@plt+0x5d04>
   16ce8:	str	r1, [r3, #40]	; 0x28
   16cec:	str	r2, [r3, #44]	; 0x2c
   16cf0:	bx	lr
   16cf4:	push	{r4, lr}
   16cf8:	bl	10fd8 <abort@plt>
   16cfc:	muleq	r2, r0, r2
   16d00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16d04:	sub	sp, sp, #24
   16d08:	mov	r7, r0
   16d0c:	mov	r8, r1
   16d10:	mov	r9, r2
   16d14:	mov	sl, r3
   16d18:	ldr	r4, [sp, #56]	; 0x38
   16d1c:	cmp	r4, #0
   16d20:	ldr	r3, [pc, #84]	; 16d7c <dcngettext@plt+0x5d8c>
   16d24:	moveq	r4, r3
   16d28:	bl	10ef4 <__errno_location@plt>
   16d2c:	mov	r5, r0
   16d30:	ldr	r6, [r0]
   16d34:	ldr	r3, [r4, #44]	; 0x2c
   16d38:	str	r3, [sp, #16]
   16d3c:	ldr	r3, [r4, #40]	; 0x28
   16d40:	str	r3, [sp, #12]
   16d44:	add	r3, r4, #8
   16d48:	str	r3, [sp, #8]
   16d4c:	ldr	r3, [r4, #4]
   16d50:	str	r3, [sp, #4]
   16d54:	ldr	r3, [r4]
   16d58:	str	r3, [sp]
   16d5c:	mov	r3, sl
   16d60:	mov	r2, r9
   16d64:	mov	r1, r8
   16d68:	mov	r0, r7
   16d6c:	bl	158d0 <dcngettext@plt+0x48e0>
   16d70:	str	r6, [r5]
   16d74:	add	sp, sp, #24
   16d78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d7c:	muleq	r2, r0, r2
   16d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d84:	sub	sp, sp, #44	; 0x2c
   16d88:	str	r0, [sp, #28]
   16d8c:	str	r1, [sp, #32]
   16d90:	mov	r6, r2
   16d94:	subs	r4, r3, #0
   16d98:	ldr	r3, [pc, #172]	; 16e4c <dcngettext@plt+0x5e5c>
   16d9c:	moveq	r4, r3
   16da0:	bl	10ef4 <__errno_location@plt>
   16da4:	mov	r7, r0
   16da8:	ldr	fp, [r0]
   16dac:	ldr	r5, [r4, #4]
   16db0:	cmp	r6, #0
   16db4:	orreq	r5, r5, #1
   16db8:	add	r9, r4, #8
   16dbc:	ldr	r3, [r4, #44]	; 0x2c
   16dc0:	str	r3, [sp, #16]
   16dc4:	ldr	r3, [r4, #40]	; 0x28
   16dc8:	str	r3, [sp, #12]
   16dcc:	str	r9, [sp, #8]
   16dd0:	str	r5, [sp, #4]
   16dd4:	ldr	r3, [r4]
   16dd8:	str	r3, [sp]
   16ddc:	ldr	r3, [sp, #32]
   16de0:	ldr	r2, [sp, #28]
   16de4:	mov	r1, #0
   16de8:	mov	r0, r1
   16dec:	bl	158d0 <dcngettext@plt+0x48e0>
   16df0:	mov	sl, r0
   16df4:	add	r8, r0, #1
   16df8:	mov	r0, r8
   16dfc:	bl	177d4 <dcngettext@plt+0x67e4>
   16e00:	str	r0, [sp, #36]	; 0x24
   16e04:	ldr	r3, [r4, #44]	; 0x2c
   16e08:	str	r3, [sp, #16]
   16e0c:	ldr	r3, [r4, #40]	; 0x28
   16e10:	str	r3, [sp, #12]
   16e14:	str	r9, [sp, #8]
   16e18:	str	r5, [sp, #4]
   16e1c:	ldr	r3, [r4]
   16e20:	str	r3, [sp]
   16e24:	ldr	r3, [sp, #32]
   16e28:	ldr	r2, [sp, #28]
   16e2c:	mov	r1, r8
   16e30:	bl	158d0 <dcngettext@plt+0x48e0>
   16e34:	str	fp, [r7]
   16e38:	cmp	r6, #0
   16e3c:	strne	sl, [r6]
   16e40:	ldr	r0, [sp, #36]	; 0x24
   16e44:	add	sp, sp, #44	; 0x2c
   16e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e4c:	muleq	r2, r0, r2
   16e50:	push	{r4, lr}
   16e54:	mov	r3, r2
   16e58:	mov	r2, #0
   16e5c:	bl	16d80 <dcngettext@plt+0x5d90>
   16e60:	pop	{r4, pc}
   16e64:	push	{r4, r5, r6, r7, r8, lr}
   16e68:	ldr	r3, [pc, #140]	; 16efc <dcngettext@plt+0x5f0c>
   16e6c:	ldr	r7, [r3]
   16e70:	ldr	r3, [r3, #4]
   16e74:	cmp	r3, #1
   16e78:	ble	16ea4 <dcngettext@plt+0x5eb4>
   16e7c:	mov	r5, r7
   16e80:	mov	r4, #1
   16e84:	ldr	r6, [pc, #112]	; 16efc <dcngettext@plt+0x5f0c>
   16e88:	ldr	r0, [r5, #12]
   16e8c:	bl	155b0 <dcngettext@plt+0x45c0>
   16e90:	add	r4, r4, #1
   16e94:	add	r5, r5, #8
   16e98:	ldr	r3, [r6, #4]
   16e9c:	cmp	r3, r4
   16ea0:	bgt	16e88 <dcngettext@plt+0x5e98>
   16ea4:	ldr	r0, [r7, #4]
   16ea8:	ldr	r3, [pc, #80]	; 16f00 <dcngettext@plt+0x5f10>
   16eac:	cmp	r0, r3
   16eb0:	beq	16ecc <dcngettext@plt+0x5edc>
   16eb4:	bl	155b0 <dcngettext@plt+0x45c0>
   16eb8:	ldr	r3, [pc, #60]	; 16efc <dcngettext@plt+0x5f0c>
   16ebc:	mov	r2, #256	; 0x100
   16ec0:	str	r2, [r3, #8]
   16ec4:	ldr	r2, [pc, #52]	; 16f00 <dcngettext@plt+0x5f10>
   16ec8:	str	r2, [r3, #12]
   16ecc:	ldr	r3, [pc, #48]	; 16f04 <dcngettext@plt+0x5f14>
   16ed0:	cmp	r7, r3
   16ed4:	beq	16eec <dcngettext@plt+0x5efc>
   16ed8:	mov	r0, r7
   16edc:	bl	155b0 <dcngettext@plt+0x45c0>
   16ee0:	ldr	r3, [pc, #20]	; 16efc <dcngettext@plt+0x5f0c>
   16ee4:	add	r2, r3, #8
   16ee8:	str	r2, [r3]
   16eec:	mov	r2, #1
   16ef0:	ldr	r3, [pc, #4]	; 16efc <dcngettext@plt+0x5f0c>
   16ef4:	str	r2, [r3, #4]
   16ef8:	pop	{r4, r5, r6, r7, r8, pc}
   16efc:	andeq	sl, r2, ip, lsl #2
   16f00:	muleq	r2, r0, r1
   16f04:	andeq	sl, r2, r4, lsl r1
   16f08:	push	{r4, lr}
   16f0c:	ldr	r3, [pc, #8]	; 16f1c <dcngettext@plt+0x5f2c>
   16f10:	mvn	r2, #0
   16f14:	bl	16a40 <dcngettext@plt+0x5a50>
   16f18:	pop	{r4, pc}
   16f1c:	muleq	r2, r0, r2
   16f20:	push	{r4, lr}
   16f24:	ldr	r3, [pc, #4]	; 16f30 <dcngettext@plt+0x5f40>
   16f28:	bl	16a40 <dcngettext@plt+0x5a50>
   16f2c:	pop	{r4, pc}
   16f30:	muleq	r2, r0, r2
   16f34:	push	{r4, lr}
   16f38:	mov	r1, r0
   16f3c:	mov	r0, #0
   16f40:	bl	16f08 <dcngettext@plt+0x5f18>
   16f44:	pop	{r4, pc}
   16f48:	push	{r4, lr}
   16f4c:	mov	r2, r1
   16f50:	mov	r1, r0
   16f54:	mov	r0, #0
   16f58:	bl	16f20 <dcngettext@plt+0x5f30>
   16f5c:	pop	{r4, pc}
   16f60:	push	{r4, r5, lr}
   16f64:	sub	sp, sp, #52	; 0x34
   16f68:	mov	r4, r0
   16f6c:	mov	r5, r2
   16f70:	mov	r0, sp
   16f74:	bl	15768 <dcngettext@plt+0x4778>
   16f78:	mov	r3, sp
   16f7c:	mvn	r2, #0
   16f80:	mov	r1, r5
   16f84:	mov	r0, r4
   16f88:	bl	16a40 <dcngettext@plt+0x5a50>
   16f8c:	add	sp, sp, #52	; 0x34
   16f90:	pop	{r4, r5, pc}
   16f94:	push	{r4, r5, r6, lr}
   16f98:	sub	sp, sp, #48	; 0x30
   16f9c:	mov	r4, r0
   16fa0:	mov	r5, r2
   16fa4:	mov	r6, r3
   16fa8:	mov	r0, sp
   16fac:	bl	15768 <dcngettext@plt+0x4778>
   16fb0:	mov	r3, sp
   16fb4:	mov	r2, r6
   16fb8:	mov	r1, r5
   16fbc:	mov	r0, r4
   16fc0:	bl	16a40 <dcngettext@plt+0x5a50>
   16fc4:	add	sp, sp, #48	; 0x30
   16fc8:	pop	{r4, r5, r6, pc}
   16fcc:	push	{r4, lr}
   16fd0:	mov	r2, r1
   16fd4:	mov	r1, r0
   16fd8:	mov	r0, #0
   16fdc:	bl	16f60 <dcngettext@plt+0x5f70>
   16fe0:	pop	{r4, pc}
   16fe4:	push	{r4, lr}
   16fe8:	mov	r3, r2
   16fec:	mov	r2, r1
   16ff0:	mov	r1, r0
   16ff4:	mov	r0, #0
   16ff8:	bl	16f94 <dcngettext@plt+0x5fa4>
   16ffc:	pop	{r4, pc}
   17000:	push	{r4, r5, r6, lr}
   17004:	sub	sp, sp, #48	; 0x30
   17008:	mov	r4, r0
   1700c:	mov	r5, r1
   17010:	mov	r6, r2
   17014:	mov	ip, sp
   17018:	ldr	lr, [pc, #64]	; 17060 <dcngettext@plt+0x6070>
   1701c:	ldm	lr!, {r0, r1, r2, r3}
   17020:	stmia	ip!, {r0, r1, r2, r3}
   17024:	ldm	lr!, {r0, r1, r2, r3}
   17028:	stmia	ip!, {r0, r1, r2, r3}
   1702c:	ldm	lr, {r0, r1, r2, r3}
   17030:	stm	ip, {r0, r1, r2, r3}
   17034:	mov	r2, #1
   17038:	mov	r1, r6
   1703c:	mov	r0, sp
   17040:	bl	16c6c <dcngettext@plt+0x5c7c>
   17044:	mov	r3, sp
   17048:	mov	r2, r5
   1704c:	mov	r1, r4
   17050:	mov	r0, #0
   17054:	bl	16a40 <dcngettext@plt+0x5a50>
   17058:	add	sp, sp, #48	; 0x30
   1705c:	pop	{r4, r5, r6, pc}
   17060:	muleq	r2, r0, r2
   17064:	push	{r4, lr}
   17068:	mov	r2, r1
   1706c:	mvn	r1, #0
   17070:	bl	17000 <dcngettext@plt+0x6010>
   17074:	pop	{r4, pc}
   17078:	push	{r4, lr}
   1707c:	mov	r1, #58	; 0x3a
   17080:	bl	17064 <dcngettext@plt+0x6074>
   17084:	pop	{r4, pc}
   17088:	push	{r4, lr}
   1708c:	mov	r2, #58	; 0x3a
   17090:	bl	17000 <dcngettext@plt+0x6010>
   17094:	pop	{r4, pc}
   17098:	push	{r4, r5, lr}
   1709c:	sub	sp, sp, #100	; 0x64
   170a0:	mov	r4, r0
   170a4:	mov	r5, r2
   170a8:	mov	r0, sp
   170ac:	bl	15768 <dcngettext@plt+0x4778>
   170b0:	add	lr, sp, #48	; 0x30
   170b4:	mov	ip, sp
   170b8:	ldm	ip!, {r0, r1, r2, r3}
   170bc:	stmia	lr!, {r0, r1, r2, r3}
   170c0:	ldm	ip!, {r0, r1, r2, r3}
   170c4:	stmia	lr!, {r0, r1, r2, r3}
   170c8:	ldm	ip, {r0, r1, r2, r3}
   170cc:	stm	lr, {r0, r1, r2, r3}
   170d0:	mov	r2, #1
   170d4:	mov	r1, #58	; 0x3a
   170d8:	add	r0, sp, #48	; 0x30
   170dc:	bl	16c6c <dcngettext@plt+0x5c7c>
   170e0:	add	r3, sp, #48	; 0x30
   170e4:	mvn	r2, #0
   170e8:	mov	r1, r5
   170ec:	mov	r0, r4
   170f0:	bl	16a40 <dcngettext@plt+0x5a50>
   170f4:	add	sp, sp, #100	; 0x64
   170f8:	pop	{r4, r5, pc}
   170fc:	push	{r4, r5, r6, r7, lr}
   17100:	sub	sp, sp, #52	; 0x34
   17104:	mov	r4, r0
   17108:	mov	r6, r1
   1710c:	mov	r7, r2
   17110:	mov	r5, r3
   17114:	mov	ip, sp
   17118:	ldr	lr, [pc, #64]	; 17160 <dcngettext@plt+0x6170>
   1711c:	ldm	lr!, {r0, r1, r2, r3}
   17120:	stmia	ip!, {r0, r1, r2, r3}
   17124:	ldm	lr!, {r0, r1, r2, r3}
   17128:	stmia	ip!, {r0, r1, r2, r3}
   1712c:	ldm	lr, {r0, r1, r2, r3}
   17130:	stm	ip, {r0, r1, r2, r3}
   17134:	mov	r2, r7
   17138:	mov	r1, r6
   1713c:	mov	r0, sp
   17140:	bl	16cc8 <dcngettext@plt+0x5cd8>
   17144:	mov	r3, sp
   17148:	ldr	r2, [sp, #72]	; 0x48
   1714c:	mov	r1, r5
   17150:	mov	r0, r4
   17154:	bl	16a40 <dcngettext@plt+0x5a50>
   17158:	add	sp, sp, #52	; 0x34
   1715c:	pop	{r4, r5, r6, r7, pc}
   17160:	muleq	r2, r0, r2
   17164:	push	{lr}		; (str lr, [sp, #-4]!)
   17168:	sub	sp, sp, #12
   1716c:	mvn	ip, #0
   17170:	str	ip, [sp]
   17174:	bl	170fc <dcngettext@plt+0x610c>
   17178:	add	sp, sp, #12
   1717c:	pop	{pc}		; (ldr pc, [sp], #4)
   17180:	push	{r4, lr}
   17184:	mov	r3, r2
   17188:	mov	r2, r1
   1718c:	mov	r1, r0
   17190:	mov	r0, #0
   17194:	bl	17164 <dcngettext@plt+0x6174>
   17198:	pop	{r4, pc}
   1719c:	push	{lr}		; (str lr, [sp, #-4]!)
   171a0:	sub	sp, sp, #12
   171a4:	str	r3, [sp]
   171a8:	mov	r3, r2
   171ac:	mov	r2, r1
   171b0:	mov	r1, r0
   171b4:	mov	r0, #0
   171b8:	bl	170fc <dcngettext@plt+0x610c>
   171bc:	add	sp, sp, #12
   171c0:	pop	{pc}		; (ldr pc, [sp], #4)
   171c4:	push	{r4, lr}
   171c8:	ldr	r3, [pc, #4]	; 171d4 <dcngettext@plt+0x61e4>
   171cc:	bl	16a40 <dcngettext@plt+0x5a50>
   171d0:	pop	{r4, pc}
   171d4:	andeq	sl, r2, ip, lsl r1
   171d8:	push	{r4, lr}
   171dc:	mov	r2, r1
   171e0:	mov	r1, r0
   171e4:	mov	r0, #0
   171e8:	bl	171c4 <dcngettext@plt+0x61d4>
   171ec:	pop	{r4, pc}
   171f0:	push	{r4, lr}
   171f4:	mvn	r2, #0
   171f8:	bl	171c4 <dcngettext@plt+0x61d4>
   171fc:	pop	{r4, pc}
   17200:	push	{r4, lr}
   17204:	mov	r1, r0
   17208:	mov	r0, #0
   1720c:	bl	171f0 <dcngettext@plt+0x6200>
   17210:	pop	{r4, pc}
   17214:	push	{r4, lr}
   17218:	mov	r2, #3
   1721c:	mov	r1, #0
   17220:	bl	17ed8 <dcngettext@plt+0x6ee8>
   17224:	pop	{r4, pc}
   17228:	push	{r4, r5, r6, lr}
   1722c:	sub	sp, sp, #32
   17230:	mov	r4, r0
   17234:	ldr	r5, [sp, #48]	; 0x30
   17238:	ldr	r6, [sp, #52]	; 0x34
   1723c:	cmp	r1, #0
   17240:	beq	172f8 <dcngettext@plt+0x6308>
   17244:	str	r3, [sp, #4]
   17248:	str	r2, [sp]
   1724c:	mov	r3, r1
   17250:	ldr	r2, [pc, #940]	; 17604 <dcngettext@plt+0x6614>
   17254:	mov	r1, #1
   17258:	bl	10f3c <__fprintf_chk@plt>
   1725c:	mov	r2, #5
   17260:	ldr	r1, [pc, #928]	; 17608 <dcngettext@plt+0x6618>
   17264:	mov	r0, #0
   17268:	bl	10e04 <dcgettext@plt>
   1726c:	ldr	r3, [pc, #920]	; 1760c <dcngettext@plt+0x661c>
   17270:	str	r3, [sp]
   17274:	mov	r3, r0
   17278:	ldr	r2, [pc, #912]	; 17610 <dcngettext@plt+0x6620>
   1727c:	mov	r1, #1
   17280:	mov	r0, r4
   17284:	bl	10f3c <__fprintf_chk@plt>
   17288:	mov	r1, r4
   1728c:	mov	r0, #10
   17290:	bl	10df8 <fputc_unlocked@plt>
   17294:	mov	r2, #5
   17298:	ldr	r1, [pc, #884]	; 17614 <dcngettext@plt+0x6624>
   1729c:	mov	r0, #0
   172a0:	bl	10e04 <dcgettext@plt>
   172a4:	ldr	r3, [pc, #876]	; 17618 <dcngettext@plt+0x6628>
   172a8:	mov	r2, r0
   172ac:	mov	r1, #1
   172b0:	mov	r0, r4
   172b4:	bl	10f3c <__fprintf_chk@plt>
   172b8:	mov	r1, r4
   172bc:	mov	r0, #10
   172c0:	bl	10df8 <fputc_unlocked@plt>
   172c4:	cmp	r6, #9
   172c8:	ldrls	pc, [pc, r6, lsl #2]
   172cc:	b	1759c <dcngettext@plt+0x65ac>
   172d0:	andeq	r7, r1, r4, lsr r3
   172d4:	andeq	r7, r1, r0, lsl r3
   172d8:	andeq	r7, r1, ip, lsr r3
   172dc:	andeq	r7, r1, ip, ror #6
   172e0:	andeq	r7, r1, r4, lsr #7
   172e4:	andeq	r7, r1, r4, ror #7
   172e8:	andeq	r7, r1, ip, lsr #8
   172ec:	andeq	r7, r1, ip, ror r4
   172f0:	ldrdeq	r7, [r1], -r4
   172f4:	andeq	r7, r1, r4, lsr r5
   172f8:	str	r3, [sp]
   172fc:	mov	r3, r2
   17300:	ldr	r2, [pc, #788]	; 1761c <dcngettext@plt+0x662c>
   17304:	mov	r1, #1
   17308:	bl	10f3c <__fprintf_chk@plt>
   1730c:	b	1725c <dcngettext@plt+0x626c>
   17310:	mov	r2, #5
   17314:	ldr	r1, [pc, #772]	; 17620 <dcngettext@plt+0x6630>
   17318:	mov	r0, #0
   1731c:	bl	10e04 <dcgettext@plt>
   17320:	ldr	r3, [r5]
   17324:	mov	r2, r0
   17328:	mov	r1, #1
   1732c:	mov	r0, r4
   17330:	bl	10f3c <__fprintf_chk@plt>
   17334:	add	sp, sp, #32
   17338:	pop	{r4, r5, r6, pc}
   1733c:	mov	r2, #5
   17340:	ldr	r1, [pc, #732]	; 17624 <dcngettext@plt+0x6634>
   17344:	mov	r0, #0
   17348:	bl	10e04 <dcgettext@plt>
   1734c:	ldr	r3, [r5]
   17350:	ldr	r2, [r5, #4]
   17354:	str	r2, [sp]
   17358:	mov	r2, r0
   1735c:	mov	r1, #1
   17360:	mov	r0, r4
   17364:	bl	10f3c <__fprintf_chk@plt>
   17368:	b	17334 <dcngettext@plt+0x6344>
   1736c:	mov	r2, #5
   17370:	ldr	r1, [pc, #688]	; 17628 <dcngettext@plt+0x6638>
   17374:	mov	r0, #0
   17378:	bl	10e04 <dcgettext@plt>
   1737c:	ldr	r3, [r5]
   17380:	ldr	r2, [r5, #8]
   17384:	str	r2, [sp, #4]
   17388:	ldr	r2, [r5, #4]
   1738c:	str	r2, [sp]
   17390:	mov	r2, r0
   17394:	mov	r1, #1
   17398:	mov	r0, r4
   1739c:	bl	10f3c <__fprintf_chk@plt>
   173a0:	b	17334 <dcngettext@plt+0x6344>
   173a4:	mov	r2, #5
   173a8:	ldr	r1, [pc, #636]	; 1762c <dcngettext@plt+0x663c>
   173ac:	mov	r0, #0
   173b0:	bl	10e04 <dcgettext@plt>
   173b4:	ldr	r3, [r5]
   173b8:	ldr	r2, [r5, #12]
   173bc:	str	r2, [sp, #8]
   173c0:	ldr	r2, [r5, #8]
   173c4:	str	r2, [sp, #4]
   173c8:	ldr	r2, [r5, #4]
   173cc:	str	r2, [sp]
   173d0:	mov	r2, r0
   173d4:	mov	r1, #1
   173d8:	mov	r0, r4
   173dc:	bl	10f3c <__fprintf_chk@plt>
   173e0:	b	17334 <dcngettext@plt+0x6344>
   173e4:	mov	r2, #5
   173e8:	ldr	r1, [pc, #576]	; 17630 <dcngettext@plt+0x6640>
   173ec:	mov	r0, #0
   173f0:	bl	10e04 <dcgettext@plt>
   173f4:	ldr	r3, [r5]
   173f8:	ldr	r2, [r5, #16]
   173fc:	str	r2, [sp, #12]
   17400:	ldr	r2, [r5, #12]
   17404:	str	r2, [sp, #8]
   17408:	ldr	r2, [r5, #8]
   1740c:	str	r2, [sp, #4]
   17410:	ldr	r2, [r5, #4]
   17414:	str	r2, [sp]
   17418:	mov	r2, r0
   1741c:	mov	r1, #1
   17420:	mov	r0, r4
   17424:	bl	10f3c <__fprintf_chk@plt>
   17428:	b	17334 <dcngettext@plt+0x6344>
   1742c:	mov	r2, #5
   17430:	ldr	r1, [pc, #508]	; 17634 <dcngettext@plt+0x6644>
   17434:	mov	r0, #0
   17438:	bl	10e04 <dcgettext@plt>
   1743c:	ldr	r3, [r5]
   17440:	ldr	r2, [r5, #20]
   17444:	str	r2, [sp, #16]
   17448:	ldr	r2, [r5, #16]
   1744c:	str	r2, [sp, #12]
   17450:	ldr	r2, [r5, #12]
   17454:	str	r2, [sp, #8]
   17458:	ldr	r2, [r5, #8]
   1745c:	str	r2, [sp, #4]
   17460:	ldr	r2, [r5, #4]
   17464:	str	r2, [sp]
   17468:	mov	r2, r0
   1746c:	mov	r1, #1
   17470:	mov	r0, r4
   17474:	bl	10f3c <__fprintf_chk@plt>
   17478:	b	17334 <dcngettext@plt+0x6344>
   1747c:	mov	r2, #5
   17480:	ldr	r1, [pc, #432]	; 17638 <dcngettext@plt+0x6648>
   17484:	mov	r0, #0
   17488:	bl	10e04 <dcgettext@plt>
   1748c:	ldr	r3, [r5]
   17490:	ldr	r2, [r5, #24]
   17494:	str	r2, [sp, #20]
   17498:	ldr	r2, [r5, #20]
   1749c:	str	r2, [sp, #16]
   174a0:	ldr	r2, [r5, #16]
   174a4:	str	r2, [sp, #12]
   174a8:	ldr	r2, [r5, #12]
   174ac:	str	r2, [sp, #8]
   174b0:	ldr	r2, [r5, #8]
   174b4:	str	r2, [sp, #4]
   174b8:	ldr	r2, [r5, #4]
   174bc:	str	r2, [sp]
   174c0:	mov	r2, r0
   174c4:	mov	r1, #1
   174c8:	mov	r0, r4
   174cc:	bl	10f3c <__fprintf_chk@plt>
   174d0:	b	17334 <dcngettext@plt+0x6344>
   174d4:	mov	r2, #5
   174d8:	ldr	r1, [pc, #348]	; 1763c <dcngettext@plt+0x664c>
   174dc:	mov	r0, #0
   174e0:	bl	10e04 <dcgettext@plt>
   174e4:	ldr	r3, [r5]
   174e8:	ldr	r2, [r5, #28]
   174ec:	str	r2, [sp, #24]
   174f0:	ldr	r2, [r5, #24]
   174f4:	str	r2, [sp, #20]
   174f8:	ldr	r2, [r5, #20]
   174fc:	str	r2, [sp, #16]
   17500:	ldr	r2, [r5, #16]
   17504:	str	r2, [sp, #12]
   17508:	ldr	r2, [r5, #12]
   1750c:	str	r2, [sp, #8]
   17510:	ldr	r2, [r5, #8]
   17514:	str	r2, [sp, #4]
   17518:	ldr	r2, [r5, #4]
   1751c:	str	r2, [sp]
   17520:	mov	r2, r0
   17524:	mov	r1, #1
   17528:	mov	r0, r4
   1752c:	bl	10f3c <__fprintf_chk@plt>
   17530:	b	17334 <dcngettext@plt+0x6344>
   17534:	mov	r2, #5
   17538:	ldr	r1, [pc, #256]	; 17640 <dcngettext@plt+0x6650>
   1753c:	mov	r0, #0
   17540:	bl	10e04 <dcgettext@plt>
   17544:	ldr	r3, [r5]
   17548:	ldr	r2, [r5, #32]
   1754c:	str	r2, [sp, #28]
   17550:	ldr	r2, [r5, #28]
   17554:	str	r2, [sp, #24]
   17558:	ldr	r2, [r5, #24]
   1755c:	str	r2, [sp, #20]
   17560:	ldr	r2, [r5, #20]
   17564:	str	r2, [sp, #16]
   17568:	ldr	r2, [r5, #16]
   1756c:	str	r2, [sp, #12]
   17570:	ldr	r2, [r5, #12]
   17574:	str	r2, [sp, #8]
   17578:	ldr	r2, [r5, #8]
   1757c:	str	r2, [sp, #4]
   17580:	ldr	r2, [r5, #4]
   17584:	str	r2, [sp]
   17588:	mov	r2, r0
   1758c:	mov	r1, #1
   17590:	mov	r0, r4
   17594:	bl	10f3c <__fprintf_chk@plt>
   17598:	b	17334 <dcngettext@plt+0x6344>
   1759c:	mov	r2, #5
   175a0:	ldr	r1, [pc, #156]	; 17644 <dcngettext@plt+0x6654>
   175a4:	mov	r0, #0
   175a8:	bl	10e04 <dcgettext@plt>
   175ac:	ldr	r3, [r5]
   175b0:	ldr	r2, [r5, #32]
   175b4:	str	r2, [sp, #28]
   175b8:	ldr	r2, [r5, #28]
   175bc:	str	r2, [sp, #24]
   175c0:	ldr	r2, [r5, #24]
   175c4:	str	r2, [sp, #20]
   175c8:	ldr	r2, [r5, #20]
   175cc:	str	r2, [sp, #16]
   175d0:	ldr	r2, [r5, #16]
   175d4:	str	r2, [sp, #12]
   175d8:	ldr	r2, [r5, #12]
   175dc:	str	r2, [sp, #8]
   175e0:	ldr	r2, [r5, #8]
   175e4:	str	r2, [sp, #4]
   175e8:	ldr	r2, [r5, #4]
   175ec:	str	r2, [sp]
   175f0:	mov	r2, r0
   175f4:	mov	r1, #1
   175f8:	mov	r0, r4
   175fc:	bl	10f3c <__fprintf_chk@plt>
   17600:	b	17334 <dcngettext@plt+0x6344>
   17604:	andeq	r9, r1, r0, lsr #16
   17608:	andeq	r9, r1, r4, lsr r8
   1760c:	andeq	r0, r0, r6, ror #15
   17610:	andeq	r9, r1, ip, lsl #22
   17614:	andeq	r9, r1, r8, lsr r8
   17618:	andeq	r9, r1, r4, ror #17
   1761c:	andeq	r9, r1, ip, lsr #16
   17620:	andeq	r9, r1, r8, lsl #18
   17624:	andeq	r9, r1, r8, lsl r9
   17628:	andeq	r9, r1, r0, lsr r9
   1762c:	andeq	r9, r1, ip, asr #18
   17630:	andeq	r9, r1, ip, ror #18
   17634:	muleq	r1, r0, r9
   17638:			; <UNDEFINED> instruction: 0x000199b8
   1763c:	andeq	r9, r1, r4, ror #19
   17640:	andeq	r9, r1, r4, lsl sl
   17644:	andeq	r9, r1, r8, asr #20
   17648:	push	{r4, r5, lr}
   1764c:	sub	sp, sp, #12
   17650:	ldr	r5, [sp, #24]
   17654:	ldr	ip, [r5]
   17658:	cmp	ip, #0
   1765c:	beq	1768c <dcngettext@plt+0x669c>
   17660:	mov	lr, r5
   17664:	mov	ip, #0
   17668:	add	ip, ip, #1
   1766c:	ldr	r4, [lr, #4]!
   17670:	cmp	r4, #0
   17674:	bne	17668 <dcngettext@plt+0x6678>
   17678:	str	ip, [sp, #4]
   1767c:	str	r5, [sp]
   17680:	bl	17228 <dcngettext@plt+0x6238>
   17684:	add	sp, sp, #12
   17688:	pop	{r4, r5, pc}
   1768c:	mov	ip, #0
   17690:	b	17678 <dcngettext@plt+0x6688>
   17694:	push	{r4, r5, lr}
   17698:	sub	sp, sp, #52	; 0x34
   1769c:	ldr	r4, [sp, #64]	; 0x40
   176a0:	sub	r4, r4, #4
   176a4:	add	r5, sp, #4
   176a8:	mov	ip, #0
   176ac:	ldr	lr, [r4, #4]!
   176b0:	str	lr, [r5, #4]!
   176b4:	cmp	lr, #0
   176b8:	beq	176c8 <dcngettext@plt+0x66d8>
   176bc:	add	ip, ip, #1
   176c0:	cmp	ip, #10
   176c4:	bne	176ac <dcngettext@plt+0x66bc>
   176c8:	str	ip, [sp, #4]
   176cc:	add	ip, sp, #8
   176d0:	str	ip, [sp]
   176d4:	bl	17228 <dcngettext@plt+0x6238>
   176d8:	add	sp, sp, #52	; 0x34
   176dc:	pop	{r4, r5, pc}
   176e0:	push	{r3}		; (str r3, [sp, #-4]!)
   176e4:	push	{lr}		; (str lr, [sp, #-4]!)
   176e8:	sub	sp, sp, #16
   176ec:	add	r3, sp, #24
   176f0:	str	r3, [sp, #12]
   176f4:	str	r3, [sp]
   176f8:	ldr	r3, [sp, #20]
   176fc:	bl	17694 <dcngettext@plt+0x66a4>
   17700:	add	sp, sp, #16
   17704:	pop	{lr}		; (ldr lr, [sp], #4)
   17708:	add	sp, sp, #4
   1770c:	bx	lr
   17710:	push	{r4, lr}
   17714:	ldr	r3, [pc, #112]	; 1778c <dcngettext@plt+0x679c>
   17718:	ldr	r1, [r3]
   1771c:	mov	r0, #10
   17720:	bl	10df8 <fputc_unlocked@plt>
   17724:	mov	r2, #5
   17728:	ldr	r1, [pc, #96]	; 17790 <dcngettext@plt+0x67a0>
   1772c:	mov	r0, #0
   17730:	bl	10e04 <dcgettext@plt>
   17734:	ldr	r2, [pc, #88]	; 17794 <dcngettext@plt+0x67a4>
   17738:	mov	r1, r0
   1773c:	mov	r0, #1
   17740:	bl	10f24 <__printf_chk@plt>
   17744:	mov	r2, #5
   17748:	ldr	r1, [pc, #72]	; 17798 <dcngettext@plt+0x67a8>
   1774c:	mov	r0, #0
   17750:	bl	10e04 <dcgettext@plt>
   17754:	ldr	r3, [pc, #64]	; 1779c <dcngettext@plt+0x67ac>
   17758:	ldr	r2, [pc, #64]	; 177a0 <dcngettext@plt+0x67b0>
   1775c:	mov	r1, r0
   17760:	mov	r0, #1
   17764:	bl	10f24 <__printf_chk@plt>
   17768:	mov	r2, #5
   1776c:	ldr	r1, [pc, #48]	; 177a4 <dcngettext@plt+0x67b4>
   17770:	mov	r0, #0
   17774:	bl	10e04 <dcgettext@plt>
   17778:	ldr	r2, [pc, #40]	; 177a8 <dcngettext@plt+0x67b8>
   1777c:	mov	r1, r0
   17780:	mov	r0, #1
   17784:	bl	10f24 <__printf_chk@plt>
   17788:	pop	{r4, pc}
   1778c:	andeq	sl, r2, ip, ror #2
   17790:	andeq	r9, r1, r4, lsl #21
   17794:	muleq	r1, r8, sl
   17798:			; <UNDEFINED> instruction: 0x00019ab0
   1779c:	andeq	r9, r1, ip, rrx
   177a0:	muleq	r1, r4, r0
   177a4:	andeq	r9, r1, r4, asr #21
   177a8:	andeq	r9, r1, ip, ror #21
   177ac:	push	{r4, lr}
   177b0:	bl	17de0 <dcngettext@plt+0x6df0>
   177b4:	cmp	r0, #0
   177b8:	popne	{r4, pc}
   177bc:	bl	17d50 <dcngettext@plt+0x6d60>
   177c0:	push	{r4, lr}
   177c4:	bl	17de0 <dcngettext@plt+0x6df0>
   177c8:	cmp	r0, #0
   177cc:	popne	{r4, pc}
   177d0:	bl	17d50 <dcngettext@plt+0x6d60>
   177d4:	push	{r4, lr}
   177d8:	bl	177ac <dcngettext@plt+0x67bc>
   177dc:	pop	{r4, pc}
   177e0:	push	{r4, r5, r6, lr}
   177e4:	mov	r5, r0
   177e8:	mov	r4, r1
   177ec:	bl	17e10 <dcngettext@plt+0x6e20>
   177f0:	cmp	r0, #0
   177f4:	popne	{r4, r5, r6, pc}
   177f8:	adds	r4, r4, #0
   177fc:	movne	r4, #1
   17800:	cmp	r5, #0
   17804:	orreq	r4, r4, #1
   17808:	cmp	r4, #0
   1780c:	popeq	{r4, r5, r6, pc}
   17810:	bl	17d50 <dcngettext@plt+0x6d60>
   17814:	push	{r4, lr}
   17818:	cmp	r1, #0
   1781c:	orreq	r1, r1, #1
   17820:	bl	17e10 <dcngettext@plt+0x6e20>
   17824:	cmp	r0, #0
   17828:	popne	{r4, pc}
   1782c:	bl	17d50 <dcngettext@plt+0x6d60>
   17830:	push	{r4, r5, r6, lr}
   17834:	mov	r6, r0
   17838:	mov	r5, r1
   1783c:	mov	r4, r2
   17840:	bl	181bc <dcngettext@plt+0x71cc>
   17844:	cmp	r0, #0
   17848:	popne	{r4, r5, r6, pc}
   1784c:	cmp	r6, #0
   17850:	beq	17860 <dcngettext@plt+0x6870>
   17854:	cmp	r5, #0
   17858:	cmpne	r4, #0
   1785c:	popeq	{r4, r5, r6, pc}
   17860:	bl	17d50 <dcngettext@plt+0x6d60>
   17864:	push	{r4, lr}
   17868:	bl	17830 <dcngettext@plt+0x6840>
   1786c:	pop	{r4, pc}
   17870:	push	{r4, lr}
   17874:	mov	ip, r1
   17878:	mov	r3, r2
   1787c:	cmp	r2, #0
   17880:	cmpne	r1, #0
   17884:	moveq	r3, #1
   17888:	moveq	ip, r3
   1788c:	mov	r2, r3
   17890:	mov	r1, ip
   17894:	bl	181bc <dcngettext@plt+0x71cc>
   17898:	cmp	r0, #0
   1789c:	popne	{r4, pc}
   178a0:	bl	17d50 <dcngettext@plt+0x6d60>
   178a4:	push	{r4, lr}
   178a8:	mov	r2, r1
   178ac:	mov	r1, r0
   178b0:	mov	r0, #0
   178b4:	bl	17830 <dcngettext@plt+0x6840>
   178b8:	pop	{r4, pc}
   178bc:	push	{r4, lr}
   178c0:	mov	r2, r1
   178c4:	mov	r1, r0
   178c8:	mov	r0, #0
   178cc:	bl	17870 <dcngettext@plt+0x6880>
   178d0:	pop	{r4, pc}
   178d4:	push	{r4, r5, r6, r7, r8, lr}
   178d8:	mov	r5, r1
   178dc:	mov	r6, r2
   178e0:	ldr	r4, [r1]
   178e4:	subs	r7, r0, #0
   178e8:	beq	17904 <dcngettext@plt+0x6914>
   178ec:	lsr	r2, r4, #1
   178f0:	add	r3, r2, #1
   178f4:	mvn	r3, r3
   178f8:	cmp	r4, r3
   178fc:	bls	17928 <dcngettext@plt+0x6938>
   17900:	bl	17d50 <dcngettext@plt+0x6d60>
   17904:	cmp	r4, #0
   17908:	bne	17930 <dcngettext@plt+0x6940>
   1790c:	mov	r1, r2
   17910:	mov	r0, #64	; 0x40
   17914:	bl	18310 <dcngettext@plt+0x7320>
   17918:	cmp	r0, #0
   1791c:	movne	r4, r0
   17920:	addeq	r4, r0, #1
   17924:	b	17930 <dcngettext@plt+0x6940>
   17928:	add	r4, r4, #1
   1792c:	add	r4, r4, r2
   17930:	mov	r2, r6
   17934:	mov	r1, r4
   17938:	mov	r0, r7
   1793c:	bl	17830 <dcngettext@plt+0x6840>
   17940:	str	r4, [r5]
   17944:	pop	{r4, r5, r6, r7, r8, pc}
   17948:	push	{r4, lr}
   1794c:	mov	r2, #1
   17950:	bl	178d4 <dcngettext@plt+0x68e4>
   17954:	pop	{r4, pc}
   17958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1795c:	sub	sp, sp, #12
   17960:	mov	fp, r0
   17964:	mov	sl, r1
   17968:	mov	r9, r2
   1796c:	mov	r7, r3
   17970:	ldr	r6, [sp, #48]	; 0x30
   17974:	ldr	r5, [r1]
   17978:	asrs	r4, r5, #1
   1797c:	bmi	17ad8 <dcngettext@plt+0x6ae8>
   17980:	cmp	r5, #0
   17984:	blt	17aec <dcngettext@plt+0x6afc>
   17988:	mvn	r3, #-2147483648	; 0x80000000
   1798c:	sub	r3, r3, r4
   17990:	cmp	r5, r3
   17994:	movle	r3, #0
   17998:	movgt	r3, #1
   1799c:	cmp	r3, #0
   179a0:	addeq	r4, r4, r5
   179a4:	mvnne	r4, #-2147483648	; 0x80000000
   179a8:	mvn	r8, r7
   179ac:	lsr	r8, r8, #31
   179b0:	cmp	r7, r4
   179b4:	movge	r3, #0
   179b8:	andlt	r3, r8, #1
   179bc:	cmp	r3, #0
   179c0:	movne	r4, r7
   179c4:	cmp	r6, #0
   179c8:	blt	17b00 <dcngettext@plt+0x6b10>
   179cc:	cmp	r6, #0
   179d0:	beq	17bac <dcngettext@plt+0x6bbc>
   179d4:	cmp	r4, #0
   179d8:	blt	17b5c <dcngettext@plt+0x6b6c>
   179dc:	mov	r1, r6
   179e0:	mvn	r0, #-2147483648	; 0x80000000
   179e4:	bl	1851c <dcngettext@plt+0x752c>
   179e8:	cmp	r0, r4
   179ec:	movge	r0, #0
   179f0:	movlt	r0, #1
   179f4:	cmp	r0, #0
   179f8:	mvnne	r3, #-2147483648	; 0x80000000
   179fc:	strne	r3, [sp, #4]
   17a00:	beq	17b94 <dcngettext@plt+0x6ba4>
   17a04:	mov	r1, r6
   17a08:	ldr	r0, [sp, #4]
   17a0c:	bl	1851c <dcngettext@plt+0x752c>
   17a10:	mov	r4, r0
   17a14:	mov	r1, r6
   17a18:	ldr	r0, [sp, #4]
   17a1c:	bl	1873c <dcngettext@plt+0x774c>
   17a20:	ldr	r3, [sp, #4]
   17a24:	sub	r1, r3, r1
   17a28:	cmp	fp, #0
   17a2c:	moveq	r3, #0
   17a30:	streq	r3, [sl]
   17a34:	sub	r3, r4, r5
   17a38:	cmp	r3, r9
   17a3c:	bge	17ac4 <dcngettext@plt+0x6ad4>
   17a40:	cmp	r9, #0
   17a44:	blt	17bb8 <dcngettext@plt+0x6bc8>
   17a48:	cmp	r5, #0
   17a4c:	blt	17bcc <dcngettext@plt+0x6bdc>
   17a50:	mvn	r3, #-2147483648	; 0x80000000
   17a54:	sub	r3, r3, r9
   17a58:	cmp	r5, r3
   17a5c:	movle	r3, #0
   17a60:	movgt	r3, #1
   17a64:	cmp	r3, #0
   17a68:	bne	17c74 <dcngettext@plt+0x6c84>
   17a6c:	add	r5, r5, r9
   17a70:	mov	r4, r5
   17a74:	cmp	r7, r5
   17a78:	movge	r7, #0
   17a7c:	andlt	r7, r8, #1
   17a80:	cmp	r7, #0
   17a84:	bne	17c74 <dcngettext@plt+0x6c84>
   17a88:	cmp	r6, #0
   17a8c:	blt	17be0 <dcngettext@plt+0x6bf0>
   17a90:	cmp	r6, #0
   17a94:	beq	17ac0 <dcngettext@plt+0x6ad0>
   17a98:	cmp	r5, #0
   17a9c:	blt	17c3c <dcngettext@plt+0x6c4c>
   17aa0:	mov	r1, r6
   17aa4:	mvn	r0, #-2147483648	; 0x80000000
   17aa8:	bl	1851c <dcngettext@plt+0x752c>
   17aac:	cmp	r5, r0
   17ab0:	movle	r0, #0
   17ab4:	movgt	r0, #1
   17ab8:	cmp	r0, #0
   17abc:	bne	17c74 <dcngettext@plt+0x6c84>
   17ac0:	mul	r1, r5, r6
   17ac4:	mov	r0, fp
   17ac8:	bl	177e0 <dcngettext@plt+0x67f0>
   17acc:	str	r4, [sl]
   17ad0:	add	sp, sp, #12
   17ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ad8:	rsb	r3, r4, #-2147483648	; 0x80000000
   17adc:	cmp	r5, r3
   17ae0:	movge	r3, #0
   17ae4:	movlt	r3, #1
   17ae8:	b	1799c <dcngettext@plt+0x69ac>
   17aec:	rsb	r3, r5, #-2147483648	; 0x80000000
   17af0:	cmp	r4, r3
   17af4:	movge	r3, #0
   17af8:	movlt	r3, #1
   17afc:	b	1799c <dcngettext@plt+0x69ac>
   17b00:	cmp	r4, #0
   17b04:	blt	17b2c <dcngettext@plt+0x6b3c>
   17b08:	cmn	r6, #1
   17b0c:	beq	17b48 <dcngettext@plt+0x6b58>
   17b10:	mov	r1, r6
   17b14:	mov	r0, #-2147483648	; 0x80000000
   17b18:	bl	1851c <dcngettext@plt+0x752c>
   17b1c:	cmp	r0, r4
   17b20:	movge	r0, #0
   17b24:	movlt	r0, #1
   17b28:	b	179f4 <dcngettext@plt+0x6a04>
   17b2c:	mov	r1, r6
   17b30:	mvn	r0, #-2147483648	; 0x80000000
   17b34:	bl	1851c <dcngettext@plt+0x752c>
   17b38:	cmp	r0, r4
   17b3c:	movle	r0, #0
   17b40:	movgt	r0, #1
   17b44:	b	179f4 <dcngettext@plt+0x6a04>
   17b48:	add	r0, r4, #-2147483648	; 0x80000000
   17b4c:	cmp	r0, #0
   17b50:	movle	r0, #0
   17b54:	movgt	r0, #1
   17b58:	b	179f4 <dcngettext@plt+0x6a04>
   17b5c:	cmn	r4, #1
   17b60:	beq	17b80 <dcngettext@plt+0x6b90>
   17b64:	mov	r1, r4
   17b68:	mov	r0, #-2147483648	; 0x80000000
   17b6c:	bl	1851c <dcngettext@plt+0x752c>
   17b70:	cmp	r6, r0
   17b74:	movle	r0, #0
   17b78:	movgt	r0, #1
   17b7c:	b	179f4 <dcngettext@plt+0x6a04>
   17b80:	add	r0, r6, #-2147483648	; 0x80000000
   17b84:	cmp	r0, #0
   17b88:	movle	r0, #0
   17b8c:	movgt	r0, #1
   17b90:	b	179f4 <dcngettext@plt+0x6a04>
   17b94:	mul	r1, r6, r4
   17b98:	cmp	r1, #63	; 0x3f
   17b9c:	movle	r3, #64	; 0x40
   17ba0:	strle	r3, [sp, #4]
   17ba4:	bgt	17a28 <dcngettext@plt+0x6a38>
   17ba8:	b	17a04 <dcngettext@plt+0x6a14>
   17bac:	mov	r3, #64	; 0x40
   17bb0:	str	r3, [sp, #4]
   17bb4:	b	17a04 <dcngettext@plt+0x6a14>
   17bb8:	rsb	r3, r9, #-2147483648	; 0x80000000
   17bbc:	cmp	r5, r3
   17bc0:	movge	r3, #0
   17bc4:	movlt	r3, #1
   17bc8:	b	17a64 <dcngettext@plt+0x6a74>
   17bcc:	rsb	r3, r5, #-2147483648	; 0x80000000
   17bd0:	cmp	r9, r3
   17bd4:	movge	r3, #0
   17bd8:	movlt	r3, #1
   17bdc:	b	17a64 <dcngettext@plt+0x6a74>
   17be0:	cmp	r5, #0
   17be4:	blt	17c0c <dcngettext@plt+0x6c1c>
   17be8:	cmn	r6, #1
   17bec:	beq	17c28 <dcngettext@plt+0x6c38>
   17bf0:	mov	r1, r6
   17bf4:	mov	r0, #-2147483648	; 0x80000000
   17bf8:	bl	1851c <dcngettext@plt+0x752c>
   17bfc:	cmp	r5, r0
   17c00:	movle	r0, #0
   17c04:	movgt	r0, #1
   17c08:	b	17ab8 <dcngettext@plt+0x6ac8>
   17c0c:	mov	r1, r6
   17c10:	mvn	r0, #-2147483648	; 0x80000000
   17c14:	bl	1851c <dcngettext@plt+0x752c>
   17c18:	cmp	r5, r0
   17c1c:	movge	r0, #0
   17c20:	movlt	r0, #1
   17c24:	b	17ab8 <dcngettext@plt+0x6ac8>
   17c28:	add	r0, r5, #-2147483648	; 0x80000000
   17c2c:	cmp	r0, #0
   17c30:	movle	r0, #0
   17c34:	movgt	r0, #1
   17c38:	b	17ab8 <dcngettext@plt+0x6ac8>
   17c3c:	cmn	r5, #1
   17c40:	beq	17c60 <dcngettext@plt+0x6c70>
   17c44:	mov	r1, r5
   17c48:	mov	r0, #-2147483648	; 0x80000000
   17c4c:	bl	1851c <dcngettext@plt+0x752c>
   17c50:	cmp	r6, r0
   17c54:	movle	r0, #0
   17c58:	movgt	r0, #1
   17c5c:	b	17ab8 <dcngettext@plt+0x6ac8>
   17c60:	add	r0, r6, #-2147483648	; 0x80000000
   17c64:	cmp	r0, #0
   17c68:	movle	r0, #0
   17c6c:	movgt	r0, #1
   17c70:	b	17ab8 <dcngettext@plt+0x6ac8>
   17c74:	bl	17d50 <dcngettext@plt+0x6d60>
   17c78:	push	{r4, lr}
   17c7c:	bl	17d90 <dcngettext@plt+0x6da0>
   17c80:	cmp	r0, #0
   17c84:	popne	{r4, pc}
   17c88:	bl	17d50 <dcngettext@plt+0x6d60>
   17c8c:	push	{r4, lr}
   17c90:	mov	r1, #1
   17c94:	bl	17c78 <dcngettext@plt+0x6c88>
   17c98:	pop	{r4, pc}
   17c9c:	push	{r4, lr}
   17ca0:	bl	17d90 <dcngettext@plt+0x6da0>
   17ca4:	cmp	r0, #0
   17ca8:	popne	{r4, pc}
   17cac:	bl	17d50 <dcngettext@plt+0x6d60>
   17cb0:	push	{r4, lr}
   17cb4:	mov	r1, #1
   17cb8:	bl	17c9c <dcngettext@plt+0x6cac>
   17cbc:	pop	{r4, pc}
   17cc0:	push	{r4, r5, r6, lr}
   17cc4:	mov	r5, r0
   17cc8:	mov	r4, r1
   17ccc:	mov	r0, r1
   17cd0:	bl	177ac <dcngettext@plt+0x67bc>
   17cd4:	mov	r2, r4
   17cd8:	mov	r1, r5
   17cdc:	bl	10dc8 <memcpy@plt>
   17ce0:	pop	{r4, r5, r6, pc}
   17ce4:	push	{r4, r5, r6, lr}
   17ce8:	mov	r5, r0
   17cec:	mov	r4, r1
   17cf0:	mov	r0, r1
   17cf4:	bl	177c0 <dcngettext@plt+0x67d0>
   17cf8:	mov	r2, r4
   17cfc:	mov	r1, r5
   17d00:	bl	10dc8 <memcpy@plt>
   17d04:	pop	{r4, r5, r6, pc}
   17d08:	push	{r4, r5, r6, lr}
   17d0c:	mov	r5, r0
   17d10:	mov	r4, r1
   17d14:	add	r0, r1, #1
   17d18:	bl	177c0 <dcngettext@plt+0x67d0>
   17d1c:	mov	r2, #0
   17d20:	strb	r2, [r0, r4]
   17d24:	mov	r2, r4
   17d28:	mov	r1, r5
   17d2c:	bl	10dc8 <memcpy@plt>
   17d30:	pop	{r4, r5, r6, pc}
   17d34:	push	{r4, lr}
   17d38:	mov	r4, r0
   17d3c:	bl	10edc <strlen@plt>
   17d40:	add	r1, r0, #1
   17d44:	mov	r0, r4
   17d48:	bl	17cc0 <dcngettext@plt+0x6cd0>
   17d4c:	pop	{r4, pc}
   17d50:	push	{r4, lr}
   17d54:	ldr	r3, [pc, #40]	; 17d84 <dcngettext@plt+0x6d94>
   17d58:	ldr	r4, [r3]
   17d5c:	mov	r2, #5
   17d60:	ldr	r1, [pc, #32]	; 17d88 <dcngettext@plt+0x6d98>
   17d64:	mov	r0, #0
   17d68:	bl	10e04 <dcgettext@plt>
   17d6c:	mov	r3, r0
   17d70:	ldr	r2, [pc, #20]	; 17d8c <dcngettext@plt+0x6d9c>
   17d74:	mov	r1, #0
   17d78:	mov	r0, r4
   17d7c:	bl	10e70 <error@plt>
   17d80:	bl	10fd8 <abort@plt>
   17d84:	andeq	sl, r2, r8, lsl #2
   17d88:	andeq	r9, r1, ip, lsr fp
   17d8c:			; <UNDEFINED> instruction: 0x000196b0
   17d90:	push	{r4, lr}
   17d94:	mov	r2, r0
   17d98:	mov	r3, r1
   17d9c:	cmp	r1, #0
   17da0:	cmpne	r0, #0
   17da4:	moveq	r3, #1
   17da8:	moveq	r2, r3
   17dac:	umull	r0, r1, r2, r3
   17db0:	cmp	r0, #0
   17db4:	cmpge	r1, #0
   17db8:	bne	17dcc <dcngettext@plt+0x6ddc>
   17dbc:	mov	r1, r3
   17dc0:	mov	r0, r2
   17dc4:	bl	10d5c <calloc@plt>
   17dc8:	pop	{r4, pc}
   17dcc:	bl	10ef4 <__errno_location@plt>
   17dd0:	mov	r3, #12
   17dd4:	str	r3, [r0]
   17dd8:	mov	r0, #0
   17ddc:	pop	{r4, pc}
   17de0:	push	{r4, lr}
   17de4:	cmp	r0, #0
   17de8:	moveq	r0, #1
   17dec:	cmp	r0, #0
   17df0:	blt	17dfc <dcngettext@plt+0x6e0c>
   17df4:	bl	10e7c <malloc@plt>
   17df8:	pop	{r4, pc}
   17dfc:	bl	10ef4 <__errno_location@plt>
   17e00:	mov	r3, #12
   17e04:	str	r3, [r0]
   17e08:	mov	r0, #0
   17e0c:	pop	{r4, pc}
   17e10:	push	{r4, lr}
   17e14:	cmp	r0, #0
   17e18:	beq	17e34 <dcngettext@plt+0x6e44>
   17e1c:	cmp	r1, #0
   17e20:	beq	17e40 <dcngettext@plt+0x6e50>
   17e24:	cmp	r1, #0
   17e28:	blt	17e4c <dcngettext@plt+0x6e5c>
   17e2c:	bl	10e10 <realloc@plt>
   17e30:	pop	{r4, pc}
   17e34:	mov	r0, r1
   17e38:	bl	17de0 <dcngettext@plt+0x6df0>
   17e3c:	pop	{r4, pc}
   17e40:	bl	155b0 <dcngettext@plt+0x45c0>
   17e44:	mov	r0, #0
   17e48:	pop	{r4, pc}
   17e4c:	bl	10ef4 <__errno_location@plt>
   17e50:	mov	r3, #12
   17e54:	str	r3, [r0]
   17e58:	mov	r0, #0
   17e5c:	pop	{r4, pc}
   17e60:	push	{r4, r5, r6, lr}
   17e64:	mov	r5, r0
   17e68:	bl	10e58 <__fpending@plt>
   17e6c:	mov	r6, r0
   17e70:	ldr	r4, [r5]
   17e74:	and	r4, r4, #32
   17e78:	mov	r0, r5
   17e7c:	bl	15408 <dcngettext@plt+0x4418>
   17e80:	cmp	r4, #0
   17e84:	bne	17eac <dcngettext@plt+0x6ebc>
   17e88:	cmp	r0, #0
   17e8c:	popeq	{r4, r5, r6, pc}
   17e90:	cmp	r6, #0
   17e94:	bne	17ec8 <dcngettext@plt+0x6ed8>
   17e98:	bl	10ef4 <__errno_location@plt>
   17e9c:	ldr	r0, [r0]
   17ea0:	subs	r0, r0, #9
   17ea4:	mvnne	r0, #0
   17ea8:	pop	{r4, r5, r6, pc}
   17eac:	cmp	r0, #0
   17eb0:	bne	17ed0 <dcngettext@plt+0x6ee0>
   17eb4:	bl	10ef4 <__errno_location@plt>
   17eb8:	mov	r3, #0
   17ebc:	str	r3, [r0]
   17ec0:	mvn	r0, #0
   17ec4:	pop	{r4, r5, r6, pc}
   17ec8:	mvn	r0, #0
   17ecc:	pop	{r4, r5, r6, pc}
   17ed0:	mvn	r0, #0
   17ed4:	pop	{r4, r5, r6, pc}
   17ed8:	push	{r1, r2, r3}
   17edc:	push	{r4, r5, r6, lr}
   17ee0:	sub	sp, sp, #12
   17ee4:	mov	r5, r0
   17ee8:	ldr	r1, [sp, #28]
   17eec:	add	r3, sp, #32
   17ef0:	str	r3, [sp, #4]
   17ef4:	cmp	r1, #0
   17ef8:	beq	17f40 <dcngettext@plt+0x6f50>
   17efc:	ldr	r3, [pc, #540]	; 18120 <dcngettext@plt+0x7130>
   17f00:	cmp	r1, r3
   17f04:	beq	17f70 <dcngettext@plt+0x6f80>
   17f08:	cmp	r1, #11
   17f0c:	beq	18110 <dcngettext@plt+0x7120>
   17f10:	bgt	1809c <dcngettext@plt+0x70ac>
   17f14:	cmp	r1, #3
   17f18:	beq	18110 <dcngettext@plt+0x7120>
   17f1c:	ble	1805c <dcngettext@plt+0x706c>
   17f20:	cmp	r1, #8
   17f24:	beq	1807c <dcngettext@plt+0x708c>
   17f28:	ble	18074 <dcngettext@plt+0x7084>
   17f2c:	cmp	r1, #9
   17f30:	beq	18110 <dcngettext@plt+0x7120>
   17f34:	cmp	r1, #10
   17f38:	bne	180d4 <dcngettext@plt+0x70e4>
   17f3c:	b	1807c <dcngettext@plt+0x708c>
   17f40:	ldr	r3, [sp, #4]
   17f44:	add	r2, r3, #4
   17f48:	str	r2, [sp, #4]
   17f4c:	ldr	r2, [r3]
   17f50:	mov	r1, #0
   17f54:	bl	10f60 <fcntl64@plt>
   17f58:	mov	r4, r0
   17f5c:	mov	r0, r4
   17f60:	add	sp, sp, #12
   17f64:	pop	{r4, r5, r6, lr}
   17f68:	add	sp, sp, #12
   17f6c:	bx	lr
   17f70:	ldr	r3, [sp, #4]
   17f74:	add	r2, r3, #4
   17f78:	str	r2, [sp, #4]
   17f7c:	ldr	r6, [r3]
   17f80:	ldr	r3, [pc, #412]	; 18124 <dcngettext@plt+0x7134>
   17f84:	ldr	r3, [r3]
   17f88:	cmp	r3, #0
   17f8c:	blt	17fec <dcngettext@plt+0x6ffc>
   17f90:	mov	r2, r6
   17f94:	ldr	r1, [pc, #388]	; 18120 <dcngettext@plt+0x7130>
   17f98:	bl	10f60 <fcntl64@plt>
   17f9c:	subs	r4, r0, #0
   17fa0:	blt	17fb4 <dcngettext@plt+0x6fc4>
   17fa4:	mov	r2, #1
   17fa8:	ldr	r3, [pc, #372]	; 18124 <dcngettext@plt+0x7134>
   17fac:	str	r2, [r3]
   17fb0:	b	17f5c <dcngettext@plt+0x6f6c>
   17fb4:	bl	10ef4 <__errno_location@plt>
   17fb8:	ldr	r3, [r0]
   17fbc:	cmp	r3, #22
   17fc0:	bne	17fa4 <dcngettext@plt+0x6fb4>
   17fc4:	mov	r2, r6
   17fc8:	mov	r1, #0
   17fcc:	mov	r0, r5
   17fd0:	bl	10f60 <fcntl64@plt>
   17fd4:	subs	r4, r0, #0
   17fd8:	blt	17f5c <dcngettext@plt+0x6f6c>
   17fdc:	mvn	r2, #0
   17fe0:	ldr	r3, [pc, #316]	; 18124 <dcngettext@plt+0x7134>
   17fe4:	str	r2, [r3]
   17fe8:	b	18010 <dcngettext@plt+0x7020>
   17fec:	mov	r2, r6
   17ff0:	mov	r1, #0
   17ff4:	bl	10f60 <fcntl64@plt>
   17ff8:	subs	r4, r0, #0
   17ffc:	blt	17f5c <dcngettext@plt+0x6f6c>
   18000:	ldr	r3, [pc, #284]	; 18124 <dcngettext@plt+0x7134>
   18004:	ldr	r3, [r3]
   18008:	cmn	r3, #1
   1800c:	bne	17f5c <dcngettext@plt+0x6f6c>
   18010:	mov	r1, #1
   18014:	mov	r0, r4
   18018:	bl	10f60 <fcntl64@plt>
   1801c:	subs	r2, r0, #0
   18020:	blt	1803c <dcngettext@plt+0x704c>
   18024:	orr	r2, r2, #1
   18028:	mov	r1, #2
   1802c:	mov	r0, r4
   18030:	bl	10f60 <fcntl64@plt>
   18034:	cmn	r0, #1
   18038:	bne	17f5c <dcngettext@plt+0x6f6c>
   1803c:	bl	10ef4 <__errno_location@plt>
   18040:	mov	r5, r0
   18044:	ldr	r6, [r0]
   18048:	mov	r0, r4
   1804c:	bl	10fe4 <close@plt>
   18050:	str	r6, [r5]
   18054:	mvn	r4, #0
   18058:	b	17f5c <dcngettext@plt+0x6f6c>
   1805c:	cmp	r1, #1
   18060:	beq	18110 <dcngettext@plt+0x7120>
   18064:	bgt	1807c <dcngettext@plt+0x708c>
   18068:	cmp	r1, #0
   1806c:	bne	180d4 <dcngettext@plt+0x70e4>
   18070:	b	1807c <dcngettext@plt+0x708c>
   18074:	cmp	r1, #4
   18078:	bne	180d4 <dcngettext@plt+0x70e4>
   1807c:	ldr	r3, [sp, #4]
   18080:	add	r2, r3, #4
   18084:	str	r2, [sp, #4]
   18088:	ldr	r2, [r3]
   1808c:	mov	r0, r5
   18090:	bl	10f60 <fcntl64@plt>
   18094:	mov	r4, r0
   18098:	b	17f5c <dcngettext@plt+0x6f6c>
   1809c:	ldr	r3, [pc, #132]	; 18128 <dcngettext@plt+0x7138>
   180a0:	cmp	r1, r3
   180a4:	bgt	180f4 <dcngettext@plt+0x7104>
   180a8:	sub	r3, r3, #1
   180ac:	cmp	r1, r3
   180b0:	bge	1807c <dcngettext@plt+0x708c>
   180b4:	sub	r3, r3, #5
   180b8:	cmp	r1, r3
   180bc:	beq	18110 <dcngettext@plt+0x7120>
   180c0:	add	r3, r3, #1
   180c4:	cmp	r1, r3
   180c8:	beq	1807c <dcngettext@plt+0x708c>
   180cc:	cmp	r1, #1024	; 0x400
   180d0:	beq	1807c <dcngettext@plt+0x708c>
   180d4:	ldr	r3, [sp, #4]
   180d8:	add	r2, r3, #4
   180dc:	str	r2, [sp, #4]
   180e0:	ldr	r2, [r3]
   180e4:	mov	r0, r5
   180e8:	bl	10f60 <fcntl64@plt>
   180ec:	mov	r4, r0
   180f0:	b	17f5c <dcngettext@plt+0x6f6c>
   180f4:	ldr	r3, [pc, #48]	; 1812c <dcngettext@plt+0x713c>
   180f8:	cmp	r1, r3
   180fc:	beq	1807c <dcngettext@plt+0x708c>
   18100:	blt	18110 <dcngettext@plt+0x7120>
   18104:	add	r3, r3, #1
   18108:	cmp	r1, r3
   1810c:	bne	180d4 <dcngettext@plt+0x70e4>
   18110:	mov	r0, r5
   18114:	bl	10f60 <fcntl64@plt>
   18118:	mov	r4, r0
   1811c:	b	17f5c <dcngettext@plt+0x6f6c>
   18120:	andeq	r0, r0, r6, lsl #8
   18124:	andeq	sl, r2, r0, asr #5
   18128:	andeq	r0, r0, r7, lsl #8
   1812c:	andeq	r0, r0, r9, lsl #8
   18130:	push	{r4, lr}
   18134:	mov	r0, #14
   18138:	bl	10f90 <nl_langinfo@plt>
   1813c:	cmp	r0, #0
   18140:	beq	18158 <dcngettext@plt+0x7168>
   18144:	ldrb	r2, [r0]
   18148:	ldr	r3, [pc, #16]	; 18160 <dcngettext@plt+0x7170>
   1814c:	cmp	r2, #0
   18150:	moveq	r0, r3
   18154:	pop	{r4, pc}
   18158:	ldr	r0, [pc]	; 18160 <dcngettext@plt+0x7170>
   1815c:	pop	{r4, pc}
   18160:	andeq	r9, r1, r0, asr fp
   18164:	push	{r4, r5, r6, r7, lr}
   18168:	sub	sp, sp, #12
   1816c:	mov	r7, r1
   18170:	mov	r5, r2
   18174:	subs	r6, r0, #0
   18178:	addeq	r6, sp, #4
   1817c:	mov	r0, r6
   18180:	bl	10e64 <mbrtowc@plt>
   18184:	mov	r4, r0
   18188:	cmp	r5, #0
   1818c:	cmnne	r0, #3
   18190:	bhi	181a0 <dcngettext@plt+0x71b0>
   18194:	mov	r0, r4
   18198:	add	sp, sp, #12
   1819c:	pop	{r4, r5, r6, r7, pc}
   181a0:	mov	r0, #0
   181a4:	bl	18208 <dcngettext@plt+0x7218>
   181a8:	cmp	r0, #0
   181ac:	ldrbeq	r3, [r7]
   181b0:	streq	r3, [r6]
   181b4:	moveq	r4, #1
   181b8:	b	18194 <dcngettext@plt+0x71a4>
   181bc:	push	{r4, r5, r6, lr}
   181c0:	mov	r6, r0
   181c4:	mov	r5, r1
   181c8:	subs	r4, r2, #0
   181cc:	beq	181f8 <dcngettext@plt+0x7208>
   181d0:	mov	r1, r4
   181d4:	mvn	r0, #0
   181d8:	bl	18310 <dcngettext@plt+0x7320>
   181dc:	cmp	r0, r5
   181e0:	bcs	181f8 <dcngettext@plt+0x7208>
   181e4:	bl	10ef4 <__errno_location@plt>
   181e8:	mov	r3, #12
   181ec:	str	r3, [r0]
   181f0:	mov	r0, #0
   181f4:	pop	{r4, r5, r6, pc}
   181f8:	mul	r1, r5, r4
   181fc:	mov	r0, r6
   18200:	bl	17e10 <dcngettext@plt+0x6e20>
   18204:	pop	{r4, r5, r6, pc}
   18208:	push	{lr}		; (str lr, [sp, #-4]!)
   1820c:	sub	sp, sp, #268	; 0x10c
   18210:	ldr	r2, [pc, #68]	; 1825c <dcngettext@plt+0x726c>
   18214:	add	r1, sp, #4
   18218:	bl	18268 <dcngettext@plt+0x7278>
   1821c:	cmp	r0, #0
   18220:	movne	r0, #0
   18224:	bne	18254 <dcngettext@plt+0x7264>
   18228:	ldr	r1, [pc, #48]	; 18260 <dcngettext@plt+0x7270>
   1822c:	add	r0, sp, #4
   18230:	bl	10d8c <strcmp@plt>
   18234:	cmp	r0, #0
   18238:	moveq	r0, #0
   1823c:	beq	18254 <dcngettext@plt+0x7264>
   18240:	ldr	r1, [pc, #28]	; 18264 <dcngettext@plt+0x7274>
   18244:	add	r0, sp, #4
   18248:	bl	10d8c <strcmp@plt>
   1824c:	adds	r0, r0, #0
   18250:	movne	r0, #1
   18254:	add	sp, sp, #268	; 0x10c
   18258:	pop	{pc}		; (ldr pc, [sp], #4)
   1825c:	andeq	r0, r0, r1, lsl #2
   18260:	andeq	r9, r1, r8, asr fp
   18264:	andeq	r9, r1, ip, asr fp
   18268:	push	{r4, r5, r6, lr}
   1826c:	mov	r6, r1
   18270:	mov	r4, r2
   18274:	mov	r1, #0
   18278:	bl	10f78 <setlocale@plt>
   1827c:	subs	r5, r0, #0
   18280:	beq	182a4 <dcngettext@plt+0x72b4>
   18284:	mov	r0, r5
   18288:	bl	10edc <strlen@plt>
   1828c:	cmp	r4, r0
   18290:	bhi	182bc <dcngettext@plt+0x72cc>
   18294:	cmp	r4, #0
   18298:	bne	182d4 <dcngettext@plt+0x72e4>
   1829c:	mov	r0, #34	; 0x22
   182a0:	pop	{r4, r5, r6, pc}
   182a4:	cmp	r4, #0
   182a8:	beq	182f8 <dcngettext@plt+0x7308>
   182ac:	mov	r3, #0
   182b0:	strb	r3, [r6]
   182b4:	mov	r0, #22
   182b8:	pop	{r4, r5, r6, pc}
   182bc:	add	r2, r0, #1
   182c0:	mov	r1, r5
   182c4:	mov	r0, r6
   182c8:	bl	10dc8 <memcpy@plt>
   182cc:	mov	r0, #0
   182d0:	pop	{r4, r5, r6, pc}
   182d4:	sub	r4, r4, #1
   182d8:	mov	r2, r4
   182dc:	mov	r1, r5
   182e0:	mov	r0, r6
   182e4:	bl	10dc8 <memcpy@plt>
   182e8:	mov	r3, #0
   182ec:	strb	r3, [r6, r4]
   182f0:	mov	r0, #34	; 0x22
   182f4:	pop	{r4, r5, r6, pc}
   182f8:	mov	r0, #22
   182fc:	pop	{r4, r5, r6, pc}
   18300:	push	{r4, lr}
   18304:	mov	r1, #0
   18308:	bl	10f78 <setlocale@plt>
   1830c:	pop	{r4, pc}
   18310:	subs	r2, r1, #1
   18314:	bxeq	lr
   18318:	bcc	184f0 <dcngettext@plt+0x7500>
   1831c:	cmp	r0, r1
   18320:	bls	184d4 <dcngettext@plt+0x74e4>
   18324:	tst	r1, r2
   18328:	beq	184e0 <dcngettext@plt+0x74f0>
   1832c:	clz	r3, r0
   18330:	clz	r2, r1
   18334:	sub	r3, r2, r3
   18338:	rsbs	r3, r3, #31
   1833c:	addne	r3, r3, r3, lsl #1
   18340:	mov	r2, #0
   18344:	addne	pc, pc, r3, lsl #2
   18348:	nop			; (mov r0, r0)
   1834c:	cmp	r0, r1, lsl #31
   18350:	adc	r2, r2, r2
   18354:	subcs	r0, r0, r1, lsl #31
   18358:	cmp	r0, r1, lsl #30
   1835c:	adc	r2, r2, r2
   18360:	subcs	r0, r0, r1, lsl #30
   18364:	cmp	r0, r1, lsl #29
   18368:	adc	r2, r2, r2
   1836c:	subcs	r0, r0, r1, lsl #29
   18370:	cmp	r0, r1, lsl #28
   18374:	adc	r2, r2, r2
   18378:	subcs	r0, r0, r1, lsl #28
   1837c:	cmp	r0, r1, lsl #27
   18380:	adc	r2, r2, r2
   18384:	subcs	r0, r0, r1, lsl #27
   18388:	cmp	r0, r1, lsl #26
   1838c:	adc	r2, r2, r2
   18390:	subcs	r0, r0, r1, lsl #26
   18394:	cmp	r0, r1, lsl #25
   18398:	adc	r2, r2, r2
   1839c:	subcs	r0, r0, r1, lsl #25
   183a0:	cmp	r0, r1, lsl #24
   183a4:	adc	r2, r2, r2
   183a8:	subcs	r0, r0, r1, lsl #24
   183ac:	cmp	r0, r1, lsl #23
   183b0:	adc	r2, r2, r2
   183b4:	subcs	r0, r0, r1, lsl #23
   183b8:	cmp	r0, r1, lsl #22
   183bc:	adc	r2, r2, r2
   183c0:	subcs	r0, r0, r1, lsl #22
   183c4:	cmp	r0, r1, lsl #21
   183c8:	adc	r2, r2, r2
   183cc:	subcs	r0, r0, r1, lsl #21
   183d0:	cmp	r0, r1, lsl #20
   183d4:	adc	r2, r2, r2
   183d8:	subcs	r0, r0, r1, lsl #20
   183dc:	cmp	r0, r1, lsl #19
   183e0:	adc	r2, r2, r2
   183e4:	subcs	r0, r0, r1, lsl #19
   183e8:	cmp	r0, r1, lsl #18
   183ec:	adc	r2, r2, r2
   183f0:	subcs	r0, r0, r1, lsl #18
   183f4:	cmp	r0, r1, lsl #17
   183f8:	adc	r2, r2, r2
   183fc:	subcs	r0, r0, r1, lsl #17
   18400:	cmp	r0, r1, lsl #16
   18404:	adc	r2, r2, r2
   18408:	subcs	r0, r0, r1, lsl #16
   1840c:	cmp	r0, r1, lsl #15
   18410:	adc	r2, r2, r2
   18414:	subcs	r0, r0, r1, lsl #15
   18418:	cmp	r0, r1, lsl #14
   1841c:	adc	r2, r2, r2
   18420:	subcs	r0, r0, r1, lsl #14
   18424:	cmp	r0, r1, lsl #13
   18428:	adc	r2, r2, r2
   1842c:	subcs	r0, r0, r1, lsl #13
   18430:	cmp	r0, r1, lsl #12
   18434:	adc	r2, r2, r2
   18438:	subcs	r0, r0, r1, lsl #12
   1843c:	cmp	r0, r1, lsl #11
   18440:	adc	r2, r2, r2
   18444:	subcs	r0, r0, r1, lsl #11
   18448:	cmp	r0, r1, lsl #10
   1844c:	adc	r2, r2, r2
   18450:	subcs	r0, r0, r1, lsl #10
   18454:	cmp	r0, r1, lsl #9
   18458:	adc	r2, r2, r2
   1845c:	subcs	r0, r0, r1, lsl #9
   18460:	cmp	r0, r1, lsl #8
   18464:	adc	r2, r2, r2
   18468:	subcs	r0, r0, r1, lsl #8
   1846c:	cmp	r0, r1, lsl #7
   18470:	adc	r2, r2, r2
   18474:	subcs	r0, r0, r1, lsl #7
   18478:	cmp	r0, r1, lsl #6
   1847c:	adc	r2, r2, r2
   18480:	subcs	r0, r0, r1, lsl #6
   18484:	cmp	r0, r1, lsl #5
   18488:	adc	r2, r2, r2
   1848c:	subcs	r0, r0, r1, lsl #5
   18490:	cmp	r0, r1, lsl #4
   18494:	adc	r2, r2, r2
   18498:	subcs	r0, r0, r1, lsl #4
   1849c:	cmp	r0, r1, lsl #3
   184a0:	adc	r2, r2, r2
   184a4:	subcs	r0, r0, r1, lsl #3
   184a8:	cmp	r0, r1, lsl #2
   184ac:	adc	r2, r2, r2
   184b0:	subcs	r0, r0, r1, lsl #2
   184b4:	cmp	r0, r1, lsl #1
   184b8:	adc	r2, r2, r2
   184bc:	subcs	r0, r0, r1, lsl #1
   184c0:	cmp	r0, r1
   184c4:	adc	r2, r2, r2
   184c8:	subcs	r0, r0, r1
   184cc:	mov	r0, r2
   184d0:	bx	lr
   184d4:	moveq	r0, #1
   184d8:	movne	r0, #0
   184dc:	bx	lr
   184e0:	clz	r2, r1
   184e4:	rsb	r2, r2, #31
   184e8:	lsr	r0, r0, r2
   184ec:	bx	lr
   184f0:	cmp	r0, #0
   184f4:	mvnne	r0, #0
   184f8:	b	18798 <dcngettext@plt+0x77a8>
   184fc:	cmp	r1, #0
   18500:	beq	184f0 <dcngettext@plt+0x7500>
   18504:	push	{r0, r1, lr}
   18508:	bl	18310 <dcngettext@plt+0x7320>
   1850c:	pop	{r1, r2, lr}
   18510:	mul	r3, r2, r0
   18514:	sub	r1, r1, r3
   18518:	bx	lr
   1851c:	cmp	r1, #0
   18520:	beq	1872c <dcngettext@plt+0x773c>
   18524:	eor	ip, r0, r1
   18528:	rsbmi	r1, r1, #0
   1852c:	subs	r2, r1, #1
   18530:	beq	186f8 <dcngettext@plt+0x7708>
   18534:	movs	r3, r0
   18538:	rsbmi	r3, r0, #0
   1853c:	cmp	r3, r1
   18540:	bls	18704 <dcngettext@plt+0x7714>
   18544:	tst	r1, r2
   18548:	beq	18714 <dcngettext@plt+0x7724>
   1854c:	clz	r2, r3
   18550:	clz	r0, r1
   18554:	sub	r2, r0, r2
   18558:	rsbs	r2, r2, #31
   1855c:	addne	r2, r2, r2, lsl #1
   18560:	mov	r0, #0
   18564:	addne	pc, pc, r2, lsl #2
   18568:	nop			; (mov r0, r0)
   1856c:	cmp	r3, r1, lsl #31
   18570:	adc	r0, r0, r0
   18574:	subcs	r3, r3, r1, lsl #31
   18578:	cmp	r3, r1, lsl #30
   1857c:	adc	r0, r0, r0
   18580:	subcs	r3, r3, r1, lsl #30
   18584:	cmp	r3, r1, lsl #29
   18588:	adc	r0, r0, r0
   1858c:	subcs	r3, r3, r1, lsl #29
   18590:	cmp	r3, r1, lsl #28
   18594:	adc	r0, r0, r0
   18598:	subcs	r3, r3, r1, lsl #28
   1859c:	cmp	r3, r1, lsl #27
   185a0:	adc	r0, r0, r0
   185a4:	subcs	r3, r3, r1, lsl #27
   185a8:	cmp	r3, r1, lsl #26
   185ac:	adc	r0, r0, r0
   185b0:	subcs	r3, r3, r1, lsl #26
   185b4:	cmp	r3, r1, lsl #25
   185b8:	adc	r0, r0, r0
   185bc:	subcs	r3, r3, r1, lsl #25
   185c0:	cmp	r3, r1, lsl #24
   185c4:	adc	r0, r0, r0
   185c8:	subcs	r3, r3, r1, lsl #24
   185cc:	cmp	r3, r1, lsl #23
   185d0:	adc	r0, r0, r0
   185d4:	subcs	r3, r3, r1, lsl #23
   185d8:	cmp	r3, r1, lsl #22
   185dc:	adc	r0, r0, r0
   185e0:	subcs	r3, r3, r1, lsl #22
   185e4:	cmp	r3, r1, lsl #21
   185e8:	adc	r0, r0, r0
   185ec:	subcs	r3, r3, r1, lsl #21
   185f0:	cmp	r3, r1, lsl #20
   185f4:	adc	r0, r0, r0
   185f8:	subcs	r3, r3, r1, lsl #20
   185fc:	cmp	r3, r1, lsl #19
   18600:	adc	r0, r0, r0
   18604:	subcs	r3, r3, r1, lsl #19
   18608:	cmp	r3, r1, lsl #18
   1860c:	adc	r0, r0, r0
   18610:	subcs	r3, r3, r1, lsl #18
   18614:	cmp	r3, r1, lsl #17
   18618:	adc	r0, r0, r0
   1861c:	subcs	r3, r3, r1, lsl #17
   18620:	cmp	r3, r1, lsl #16
   18624:	adc	r0, r0, r0
   18628:	subcs	r3, r3, r1, lsl #16
   1862c:	cmp	r3, r1, lsl #15
   18630:	adc	r0, r0, r0
   18634:	subcs	r3, r3, r1, lsl #15
   18638:	cmp	r3, r1, lsl #14
   1863c:	adc	r0, r0, r0
   18640:	subcs	r3, r3, r1, lsl #14
   18644:	cmp	r3, r1, lsl #13
   18648:	adc	r0, r0, r0
   1864c:	subcs	r3, r3, r1, lsl #13
   18650:	cmp	r3, r1, lsl #12
   18654:	adc	r0, r0, r0
   18658:	subcs	r3, r3, r1, lsl #12
   1865c:	cmp	r3, r1, lsl #11
   18660:	adc	r0, r0, r0
   18664:	subcs	r3, r3, r1, lsl #11
   18668:	cmp	r3, r1, lsl #10
   1866c:	adc	r0, r0, r0
   18670:	subcs	r3, r3, r1, lsl #10
   18674:	cmp	r3, r1, lsl #9
   18678:	adc	r0, r0, r0
   1867c:	subcs	r3, r3, r1, lsl #9
   18680:	cmp	r3, r1, lsl #8
   18684:	adc	r0, r0, r0
   18688:	subcs	r3, r3, r1, lsl #8
   1868c:	cmp	r3, r1, lsl #7
   18690:	adc	r0, r0, r0
   18694:	subcs	r3, r3, r1, lsl #7
   18698:	cmp	r3, r1, lsl #6
   1869c:	adc	r0, r0, r0
   186a0:	subcs	r3, r3, r1, lsl #6
   186a4:	cmp	r3, r1, lsl #5
   186a8:	adc	r0, r0, r0
   186ac:	subcs	r3, r3, r1, lsl #5
   186b0:	cmp	r3, r1, lsl #4
   186b4:	adc	r0, r0, r0
   186b8:	subcs	r3, r3, r1, lsl #4
   186bc:	cmp	r3, r1, lsl #3
   186c0:	adc	r0, r0, r0
   186c4:	subcs	r3, r3, r1, lsl #3
   186c8:	cmp	r3, r1, lsl #2
   186cc:	adc	r0, r0, r0
   186d0:	subcs	r3, r3, r1, lsl #2
   186d4:	cmp	r3, r1, lsl #1
   186d8:	adc	r0, r0, r0
   186dc:	subcs	r3, r3, r1, lsl #1
   186e0:	cmp	r3, r1
   186e4:	adc	r0, r0, r0
   186e8:	subcs	r3, r3, r1
   186ec:	cmp	ip, #0
   186f0:	rsbmi	r0, r0, #0
   186f4:	bx	lr
   186f8:	teq	ip, r0
   186fc:	rsbmi	r0, r0, #0
   18700:	bx	lr
   18704:	movcc	r0, #0
   18708:	asreq	r0, ip, #31
   1870c:	orreq	r0, r0, #1
   18710:	bx	lr
   18714:	clz	r2, r1
   18718:	rsb	r2, r2, #31
   1871c:	cmp	ip, #0
   18720:	lsr	r0, r3, r2
   18724:	rsbmi	r0, r0, #0
   18728:	bx	lr
   1872c:	cmp	r0, #0
   18730:	mvngt	r0, #-2147483648	; 0x80000000
   18734:	movlt	r0, #-2147483648	; 0x80000000
   18738:	b	18798 <dcngettext@plt+0x77a8>
   1873c:	cmp	r1, #0
   18740:	beq	1872c <dcngettext@plt+0x773c>
   18744:	push	{r0, r1, lr}
   18748:	bl	18524 <dcngettext@plt+0x7534>
   1874c:	pop	{r1, r2, lr}
   18750:	mul	r3, r2, r0
   18754:	sub	r1, r1, r3
   18758:	bx	lr
   1875c:	cmp	r3, #0
   18760:	cmpeq	r2, #0
   18764:	bne	1877c <dcngettext@plt+0x778c>
   18768:	cmp	r1, #0
   1876c:	cmpeq	r0, #0
   18770:	mvnne	r1, #0
   18774:	mvnne	r0, #0
   18778:	b	18798 <dcngettext@plt+0x77a8>
   1877c:	sub	sp, sp, #8
   18780:	push	{sp, lr}
   18784:	bl	187a8 <dcngettext@plt+0x77b8>
   18788:	ldr	lr, [sp, #4]
   1878c:	add	sp, sp, #8
   18790:	pop	{r2, r3}
   18794:	bx	lr
   18798:	push	{r1, lr}
   1879c:	mov	r0, #8
   187a0:	bl	10d74 <raise@plt>
   187a4:	pop	{r1, pc}
   187a8:	cmp	r1, r3
   187ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   187b0:	cmpeq	r0, r2
   187b4:	mov	r4, r0
   187b8:	mov	r5, r1
   187bc:	ldr	r9, [sp, #28]
   187c0:	movcc	r0, #0
   187c4:	movcc	r1, #0
   187c8:	bcc	188c0 <dcngettext@plt+0x78d0>
   187cc:	cmp	r3, #0
   187d0:	clzeq	ip, r2
   187d4:	clzne	ip, r3
   187d8:	addeq	ip, ip, #32
   187dc:	cmp	r5, #0
   187e0:	clzeq	r1, r4
   187e4:	addeq	r1, r1, #32
   187e8:	clzne	r1, r5
   187ec:	sub	ip, ip, r1
   187f0:	sub	lr, ip, #32
   187f4:	lsl	r7, r3, ip
   187f8:	rsb	r8, ip, #32
   187fc:	orr	r7, r7, r2, lsl lr
   18800:	orr	r7, r7, r2, lsr r8
   18804:	lsl	r6, r2, ip
   18808:	cmp	r5, r7
   1880c:	cmpeq	r4, r6
   18810:	movcc	r0, #0
   18814:	movcc	r1, #0
   18818:	bcc	18834 <dcngettext@plt+0x7844>
   1881c:	mov	r3, #1
   18820:	subs	r4, r4, r6
   18824:	lsl	r1, r3, lr
   18828:	lsl	r0, r3, ip
   1882c:	orr	r1, r1, r3, lsr r8
   18830:	sbc	r5, r5, r7
   18834:	cmp	ip, #0
   18838:	beq	188c0 <dcngettext@plt+0x78d0>
   1883c:	lsrs	r3, r7, #1
   18840:	rrx	r2, r6
   18844:	mov	r6, ip
   18848:	b	1886c <dcngettext@plt+0x787c>
   1884c:	subs	r4, r4, r2
   18850:	sbc	r5, r5, r3
   18854:	adds	r4, r4, r4
   18858:	adc	r5, r5, r5
   1885c:	adds	r4, r4, #1
   18860:	adc	r5, r5, #0
   18864:	subs	r6, r6, #1
   18868:	beq	18888 <dcngettext@plt+0x7898>
   1886c:	cmp	r5, r3
   18870:	cmpeq	r4, r2
   18874:	bcs	1884c <dcngettext@plt+0x785c>
   18878:	adds	r4, r4, r4
   1887c:	adc	r5, r5, r5
   18880:	subs	r6, r6, #1
   18884:	bne	1886c <dcngettext@plt+0x787c>
   18888:	lsr	r6, r4, ip
   1888c:	lsr	r7, r5, ip
   18890:	orr	r6, r6, r5, lsl r8
   18894:	adds	r2, r0, r4
   18898:	orr	r6, r6, r5, lsr lr
   1889c:	adc	r3, r1, r5
   188a0:	lsl	r1, r7, ip
   188a4:	orr	r1, r1, r6, lsl lr
   188a8:	lsl	r0, r6, ip
   188ac:	orr	r1, r1, r6, lsr r8
   188b0:	subs	r0, r2, r0
   188b4:	mov	r4, r6
   188b8:	mov	r5, r7
   188bc:	sbc	r1, r3, r1
   188c0:	cmp	r9, #0
   188c4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   188c8:	strd	r4, [r9]
   188cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   188d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   188d4:	mov	r7, r0
   188d8:	ldr	r6, [pc, #72]	; 18928 <dcngettext@plt+0x7938>
   188dc:	ldr	r5, [pc, #72]	; 1892c <dcngettext@plt+0x793c>
   188e0:	add	r6, pc, r6
   188e4:	add	r5, pc, r5
   188e8:	sub	r6, r6, r5
   188ec:	mov	r8, r1
   188f0:	mov	r9, r2
   188f4:	bl	10d30 <fdopen@plt-0x20>
   188f8:	asrs	r6, r6, #2
   188fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18900:	mov	r4, #0
   18904:	add	r4, r4, #1
   18908:	ldr	r3, [r5], #4
   1890c:	mov	r2, r9
   18910:	mov	r1, r8
   18914:	mov	r0, r7
   18918:	blx	r3
   1891c:	cmp	r6, r4
   18920:	bne	18904 <dcngettext@plt+0x7914>
   18924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18928:	andeq	r1, r1, r8, lsr #12
   1892c:	andeq	r1, r1, r0, lsr #12
   18930:	bx	lr
   18934:	ldr	r3, [pc, #12]	; 18948 <dcngettext@plt+0x7958>
   18938:	mov	r1, #0
   1893c:	add	r3, pc, r3
   18940:	ldr	r2, [r3]
   18944:	b	10f00 <__cxa_atexit@plt>
   18948:			; <UNDEFINED> instruction: 0x000117b4

Disassembly of section .fini:

0001894c <.fini>:
   1894c:	push	{r3, lr}
   18950:	pop	{r3, pc}
